push
mov
sub
mov
adc
push
adc
push
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
push
mov
sbbl
xor
andl
mov
mov
sbb
mov
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
sub
mov
mov
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
movl
orl
mov
xor
sub
add
and
mov
mov
mov
xor
mov
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
push
pop
orl
sub
and
add
subl
movl
adcl
mov
xor
xor
or
jmp
scas
cltd
and
add
cwtl
int
aad
in
addl
and
cmp
xor
je,pn
jo
loope
jae
insb
dec
aam
clc
imul
insb
pusha
into
pop
push
cmp
dec
jle
mov
sub
push
pop
in
inc
int3
ret
in
xchg
sub
xchg
xor
pusha
mov
aad
insb
fcoml
and
aaa
jb
shrb
lock
xor
and
cmpl
fwait
dec
or
jecxz
imul
xor
push
or
lods
push
shll
cld
imul
jno
add
push
inc
mov
cmp
popf
arpl
aas
mov
add
or
xor
cmp
dec
sbb
mov
cmpsb
ret
stc
mov
add
xchg
push
shll
mov
push
cmp
add
sub
cmp
in
push
dec
mov
lods
xchg
loope
sbb
pop
mov
cmp
xor
mov
xchg
shr
sbb
addr16
mov
push
or
mov
mov
aas
xchg
fldln2
scas
lret
and
inc
jno
int3
js
dec
pop
sbb
xchg
aam
xor
leave
iret
dec
arpl
inc
pop
xor
dec
mov
xchg
rol
enter
les
ds
fldenv
repnz
jnp
pop
push
daa
mov
cmp
push
shl
push
cmc
cmp
ret
mov
mov
or
hlt
icebp
es
xchg
mov
adc
je
jle
xor
inc
sbb
push
mov
sub
lock
movsb
mov
loop
push
clc
push
add
das
push
xchg
dec
inc
mov
mov
mov
sub
cltd
insl
mov
push
mov
push
int
adc
lds
mov
jle
xchg
mov
aas
lret
leave
std
cmc
cmpsb
out
add
push
cwtl
xchg
mov
adc
cwtl
cmp
adcl
xchg
jnp
stc
shrb
mov
mov
or
into
cld
sbb
push
pop
pop
iret
mov
cmp
enter
pop
push
push
dec
mov
pop
pop
inc
sub
cli
sub
dec
pop
push
ja
and
sub
add
xlat
aam
and
sarb
and
cmp
mov
shlb
in
cmpsl
and
orb
add
movsl
jge
mov
mov
pop
lahf
lcall
stos
mov
in
add
mov
and
mov
jbe
and
test
sbb
fs
cmp
orb
mov
fsubs
xor
repz
lret
sub
cmp
fstpl
test
subb
jp
push
addr16
cli
adc
jecxz
adc
test
movl
adc
adc
aam
cld
sbb
je
and
lock
and
jp
sarl
dec
mov
testl
js
pop
xor
xor
cwtl
icebp
add
ret
and
inc
mov
sbb
lods
cs
mov
push
adc
cmp
outsb
sbb
add
dec
xchg
iret
cmp
push
mov
clc
pop
add
adc
dec
xchg
jge
cmp
cld
cmp
cmp
ljmp
fidivrl
std
inc
pop
outsl
or
inc
lds
imul
cld
adc
mov
loop
fildl
stos
fsubrl
les
cltd
movsb
inc
ja
xchg
inc
pushf
sub
xlat
and
pop
push
sbb
repz
test
out
cmp
mov
out
add
das
int3
pop
addr16
cmpsb
and
xor
ds
xchg
jecxz
mov
jno
iret
or
push
ret
jg
fcoms
test
pusha
in
jmp
cmpsl
jno
add
cld
sbb
lcall
jbe
adc
out
mov
pop
push
popa
add
xor
adc
mov
cmp
push
xrelease
aas
movsb
insb
push
sbb
add
pop
notl
mov
dec
sub
lcallw
jbe
insb
inc
je
popf
and
lock
mov
movb
rcll
ja
sbb
xor
pop
ljmp
push
arpl
scas
and
aam
nop
popa
faddl
mov
cmc
scas
mov
rcll
mov
xor
in
pop
pop
jbe
mov
mov
aad
pop
sbb
and
ja
jmp
mov
dec
push
mov
lds
mov
cmp
xchg
push
add
mov
dec
out
repz
stos
pop
lock
lock
pop
pop
jg
lea
dec
in
adc
mov
ljmp
pop
cmp
mov
xor
xchg
xor
pop
mov
in
xchg
pop
pop
sbb
sti
pop
movsb
js
cmpsb
xchg
sarl
and
mov
or
pop
ret
imul
ljmp
cmc
push
mov
push
jae
jns
aam
cmpsl
dec
ss
mov
and
popf
pusha
and
dec
sahf
pusha
scas
cmpsb
out
xor
lret
insl
inc
les
bound
out
push
mov
jmp
xor
scas
and
pushf
rcrl
pop
fiaddl
xchg
cld
pop
jmp
xor
rolb
icebp
push
dec
scas
xchg
sahf
xchg
idivl
push
pop
js
mov
cmp
sub
cld
pop
dec
aaa
ss
jmp
inc
pop
add
cmp
add
mov
cmpsl
cmp
mov
mov
in
mov
pop
jle
pop
dec
hlt
scas
push
mov
lahf
push
and
pop
dec
cmpsb
cmp
pushf
shl
jp
fists
stos
outsl
lea
xchg
pop
dec
mov
adc
pop
mov
and
shll
xlat
pop
aaa
cmpsl
test
popa
cmp
xchg
and
mov
mov
xchg
push
arpl
push
dec
std
push
mov
out
daa
in
inc
xor
mov
fidivrl
int
int3
imul
jnp
movb
adc
push
jno
ja
loop
faddp
hlt
mov
stc
pop
inc
cmp
into
insl
mov
bound
lods
sub
das
cltd
sub
test
sbb
stos
nop
inc
or
cmp
aad
cwtl
inc
mov
cwtl
add
pop
shrl
sub
ret
push
add
cli
sbb
std
test
xor
mov
or
into
mov
push
add
out
add
out
xchg
mov
adc
out
gs
cmp
xchg
frstor
add
and
out
sub
daa
aas
fimull
test
es
dec
pushl
scas
sahf
cltd
daa
inc
mov
das
scas
adcl
rcl
or
pop
pop
xor
mov
xor
mov
outsl
aas
jp
mov
cmp
ss
push
daa
inc
mov
roll
mov
cs
jp
xchg
ja
dec
sti
mov
mov
into
cmpsb
push
std
push
shrl
cld
adc
repnz
push
add
pop
adc
mov
push
movsb
add
add
es
sub
xor
xorl
mov
push
or
cmp
push
neg
adc
data16
in
mov
jo
fstpl
std
adc
cmp
inc
cmp
xchg
jge
jmp
fwait
rorb
and
xor
sbb
sahf
xchg
lea
mov
bound
cmp
hlt
int
and
jb
xor
or
lcall
push
push
mov
out
xchg
andb
cmp
fbld
xchg
es
filds
int3
jnp
lret
mov
incb
xor
push
or
jns
mov
xor
mov
add
lret
rcrl
and
dec
lret
hlt
not
arpl
dec
movsb
pop
jle
adc
xchg
pushf
fisubrl
fs
sub
jo
mov
loope
push
mov
aaa
mov
gs
cmp
and
loopne
xor
dec
sahf
push
insb
movsl
out
roll
addl
push
mov
and
jmp
in
sub
clc
jecxz
or
xor
mov
pop
pop
mov
ljmp
mov
fwait
pop
das
std
push
stos
data16
repnz
jae
lret
dec
lods
xchg
xchg
inc
and
cmp
pop
loope
pop
jmp
ss
test
addb
xor
and
enter
cltd
mov
add
jnp
pusha
pop
xor
push
mov
fwait
mov
rcl
xor
mov
out
mov
xor
call
jns
or
cli
ja
divl
stos
sarb
and
mov
and
inc
cmp
jp
rorb
lods
ja
ss
rcrb
xchg
cld
jb
cwtl
xlat
sbb
mov
bound
inc
imul
xor
add
mov
pop
push
sub
push
sti
xor
cmp
push
push
mov
addr16
pushf
and
xchg
aam
imul
mov
stos
std
cmp
int
std
sbb
adc
or
xor
adc
mov
sub
lcall
daa
pop
ss
lock
pop
inc
add
sbb
cmpsl
fsubs
pop
and
in
mov
and
jae
inc
hlt
out
xchg
adc
jae
inc
stos
add
or
testb
out
or
jae
mov
repnz
sahf
dec
bound
pop
fistps
and
outsl
sahf
gs
adc
negb
pop
filds
cmp
jae
sarl
pop
std
adc
sbbb
xor
fwait
xchg
lea
es
stos
fcompl
mov
lcall
jno
pop
pop
jmp
or
adc
mov
pop
mov
push
jg
mov
pop
dec
cwtl
push
mov
or
jo
sub
cltd
lock
scas
lret
clc
outsb
xor
or
stc
outsb
lcall
out
pop
and
cli
imul
cmp
push
mov
cmp
pop
inc
gs
fs
test
insb
imul
mov
iret
xchg
jb
mov
movsb
bound
and
pop
xchg
cmp
dec
sarl
or
jge
sbb
xor
jno
push
dec
loopne
mov
fadds
ss
cmc
mov
pop
xchg
out
xchg
xlat
jns
outsb
les
dec
jle
inc
or
leave
into
inc
cltd
gs
out
in
test
dec
push
and
push
sahf
jg
add
rcl
sub
clc
ret
cmp
add
fs
lret
aas
std
mov
jl
push
das
lret
jmp
sub
scas
jecxz
mov
xchg
pushf
push
inc
push
shrl
es
lock
je,pt
sub
out
outsb
dec
cwtl
sbb
mov
xor
setbe
jg
imul
addl
mov
mov
or
push
and
xchg
sbb
cmp
xchg
rorl
cmp
pop
xor
stos
xchg
mov
fsubr
mov
outsb
jmp
xor
adc
ja
fdivs
or
in
ret
pop
inc
stos
adc
mov
xor
sub
call
scas
pop
mov
inc
fs
sti
fcoml
loop
shlb
cmp
cld
and
test
pop
nop
roll
sub
iret
xchg
pop
and
fs
inc
loop
sub
rcrl
sbb
push
sbb
out
xchg
out
dec
int
js
jne
push
frstor
out
and
jno
mov
pop
leave
jmp
or
add
dec
mov
stos
jmp
push
adc
push
movsl
push
ficompl
push
pop
mov
add
lods
into
inc
cmp
lea
and
inc
sub
bound
sub
icebp
push
imul
cmp
outsl
xchg
and
outsl
lret
or
enter
xor
cld
scas
cmp
sbb
push
aaa
into
loopne
jecxz
dec
add
inc
and
dec
aaa
sub
ss
or
adc
add
sbb
cmp
jmp
pop
and
loop
pop
jmp
or
xor
pop
scas
in
in
dec
sti
fldt
xchg
shrl
mov
jp
mov
mov
cmp
stc
push
aam
lcall
and
xor
push
add
je
stc
xchg
push
mov
xchg
mov
add
and
pop
loop
push
inc
mov
push
into
aaa
xor
xor
and
jno
dec
cmp
adc
loopne
mov
fadds
and
stc
dec
jecxz
movsb
sbbl
jle
mov
and
adcl
lret
pushf
pop
mov
out
test
and
inc
xchg
pop
jecxz
sahf
push
fistpl
in
out
cmpsb
aad
insl
inc
mov
fcoms
push
scas
jecxz
fs
push
clc
pushf
hlt
dec
test
addr16
lcall
aas
fidivl
dec
mov
cmc
outsb
in
sub
push
push
cmp
imul
insb
or
mov
ds
scas
mov
adcl
mov
mov
sbb
sbb
aad
minps
mov
inc
and
icebp
push
lods
xor
sbb
icebp
bnd
stc
jecxz
mov
out
enter
fsubrp
or
xor
and
jno
fs
js
xchg
sub
push
jg
sub
les
fstpl
iret
add
pop
pop
inc
inc
jo
call
daa
cli
sbb
cmc
ljmp
repz
xor
repnz
add
lds
nop
sbb
push
ds
push
cmp
insb
jl
jne
mov
pop
inc
jmp
aas
jbe
mov
adc
rol
adc
subb
or
push
arpl
pop
mov
fsubl
popf
loop
shrl
inc
adc
clc
lret
add
sahf
dec
popa
mov
lret
pop
iret
or
fwait
push
sbb
in
xor
add
rcll
sbb
outsb
add
sub
lret
inc
cltd
arpl
jns
hlt
cli
or
scas
or
outsb
loop
cli
popa
addr16
mov
ret
cmp
cmp
or
cld
lcall
rolb
inc
mov
loopne
enter
pop
jb
fsubs
cmp
imul
loope
cltd
cmc
test
cs
push
repz
sub
rclb
jecxz
lea
jle
mov
jecxz
sub
pinsrw
add
rclb
and
hlt
sub
std
sbb
mov
and
cltd
out
or
jge
std
mov
sub
push
shll
cmp
mov
bnd
cmp
jnp
add
cmpsb
pop
clc
cmp
pop
and
outsb
push
mov
sahf
mov
jle
mov
stos
fdivrl
cmp
mov
leave
repnz
and
sbb
add
push
inc
imul
or
aam
cmp
add
mov
xchg
sti
js
pop
in
push
je
and
inc
push
ret
mov
xor
pop
cld
pop
mov
push
aam
xchg
pop
mov
inc
sbb
ja
xor
mov
push
ss
cmp
pop
movsb
xorb
push
call
lahf
cmp
ljmp
lahf
nop
test
push
ds
not
fwait
call
xor
xchg
inc
push
mov
mov
loopne
adc
mov
inc
push
in
arpl
mov
xlat
ds
imull
dec
test
mov
shlb
icebp
or
test
mov
or
mov
gs
scas
push
scas
inc
or
and
push
add
imul
sbb
ss
test
jnp
stos
out
lods
xlat
xchg
lods
xor
std
test
pop
std
adc
lods
jle
dec
inc
pop
call
cmp
inc
jns
sahf
les
cmp
imul
push
or
hlt
add
and
push
pop
add
jae
pop
fmull
rorb
dec
inc
jmp
aam
cmpsb
dec
gs
xchg
jecxz
loope
mov
adc
and
sahf
lret
out
das
push
push
pop
rcll
push
cmpsb
aam
testl
or
lods
mov
mov
mov
hlt
enter
movl
inc
xor
leave
je
psubsw
iret
cs
pop
jmp
sti
repnz
sub
pop
adcl
insb
fidivl
je
popa
popa
pop
inc
pop
scas
js
dec
aaa
mov
cmp
cltd
adc
ret
loop
pop
lods
pop
xchg
jge
arpl
ret
and
inc
movsl
push
xor
fiaddl
mov
mov
xchg
std
aas
loopne
xor
mov
adc
es
push
and
icebp
insb
push
ja
jno
and
and
cwtl
and
cmp
lcall
outsb
cmp
mov
adcb
popa
pop
ret
es
ljmp
adc
fisttpll
or
imul
mov
dec
sbb
sub
xchg
push
push
pop
pop
in
xchg
push
cmp
inc
and
xor
push
fistl
nop
lods
bound
xchg
movsb
je
mov
out
mov
in
sbb
add
hlt
pushf
cmp
add
mov
fisubs
mov
add
dec
dec
lahf
or
mov
sbb
shll
or
mov
or
bound
bound
ret
lods
pop
add
add
addr16
cli
lret
adc
adc
out
dec
xchg
sub
aad
ja
mov
push
cmp
pop
push
sarl
jl
xchg
adc
add
add
pop
cwtl
xchg
dec
mov
in
rorb
ret
fucomp
lret
and
in
inc
sbb
test
and
mov
pop
insb
sbb
sbb
js
or
fs
fcmovnb
test
pop
push
cld
hlt
add
popa
or
mov
pop
enter
hlt
mov
aaa
lock
fadd
lds
mov
sahf
xor
out
add
mov
insl
cmp
movsb
into
ss
nop
outsb
and
push
push
cmpsl
repnz
sti
std
in
inc
loope
outsb
dec
hlt
or
mov
or
int3
lret
das
outsl
sahf
dec
fdivl
into
push
mov
dec
decb
loop
push
jl
xchg
inc
mov
push
imul
add
aaa
inc
pop
leave
inc
rclb
mov
outsl
add
pop
pop
fbstp
arpl
pop
xchg
pusha
add
mov
bound
jg
lods
insl
pop
call
jbe
outsl
add
add
aaa
mov
mov
pop
sbb
push
push
sub
aas
adcl
dec
in
and
dec
lahf
shl
push
adc
mov
out
push
xchg
xor
dec
ficompl
sub
inc
ror
mov
pop
push
jecxz
incb
std
pmulhuw
orb
mov
sbb
int3
fldl
mov
ficomps
sbb
inc
and
push
sbb
sub
xchg
pop
ficompl
shlb
lea
mov
dec
icebp
lds
mov
cmp
and
push
lcall
add
stos
push
inc
sbb
in
ss
add
fs
out
dec
or
mov
negb
mov
push
pushf
push
mov
push
ljmp
jle
mov
or
jnp
sbb
sbb
push
fcom
xchg
dec
xchg
push
adc
jbe
scas
dec
stos
or
mov
sbb
mov
add
adc
inc
jecxz
mov
push
fildl
lock
cmp
adc
mov
mov
or
xor
std
push
xor
rorb
push
push
in
dec
sbb
push
adc
add
mov
mov
fistpll
test
jle
push
ljmp
mov
sbb
sub
lds
mov
mov
dec
jg
push
lahf
xor
mov
lcall
aas
inc
cli
subps
adc
aaa
aad
jns
mov
push
mov
and
repz
pop
add
js
sbbl
push
or
push
out
loopne
mov
je
pushl
mov
insl
stos
push
repz
cmp
pop
push
cld
mov
sub
dec
and
cmp
cs
push
inc
test
movsl
cmp
fucomp
rorl
push
movl
cld
mov
popa
sub
test
jp
or
add
sub
pop
fistl
rol
ret
shll
inc
inc
cmp
lods
in
mov
dec
dec
cmp
aaa
popa
stc
mov
loope
out
mov
dec
repz
andb
add
test
sbb
mov
jmp
ja
repz
xchg
test
out
add
cmpsb
punpckhdq
sub
dec
rcrl
or
inc
cmp
fsub
and
xlat
int
enter
jge
fimuls
cld
mov
pop
add
ret
add
ret
inc
out
lret
scas
sbb
cwtl
sti
out
test
pop
and
leave
push
mov
lock
cmp
shll
mov
xchg
xchg
xchg
enter
inc
jecxz
push
movl
xchg
mov
push
addr16
outsb
ss
mov
push
js
mov
mov
sbb
pop
pop
imul
nop
call
cli
or
mov
test
insl
mov
cmpsb
fiadds
pop
test
pop
jb
jo
adc
and
and
cmp
sbb
mul
mov
dec
xchg
sub
cltd
cmpsl
jg
scas
mov
ljmp
cmp
jns
xor
mov
jns
pop
adc
sbb
sub
insb
mov
loope
test
mov
das
ljmp
cmpb
sbb
jg,pn
popf
nop
clc
xchg
mov
aam
test
cltd
mov
and
mov
xchg
xchg
pop
add
js
jbe
push
add
out
movsb
inc
cwtl
rcrl
sub
or
dec
and
cmpsb
lret
pop
adc
rolb
mov
es
ficoml
test
jo
jnp
cmpsl
aas
sub
test
mov
push
mov
mov
xchg
call
cs
jae
leave
push
insl
add
inc
mov
dec
pusha
mov
dec
loop
jnp
sub
xchg
popf
mov
scas
add
mov
sbbb
mov
push
jmp
pop
daa
leave
and
lods
lods
jg
push
lahf
mov
mov
rcrb
loope
push
jge
inc
ljmp
inc
xor
sahf
pop
pusha
pop
ljmp
pop
xor
dec
push
xor
jo
xor
mov
test
filds
loop
mov
cmpl
lcall
xchg
mov
push
add
xor
lods
adc
xor
dec
xchg
dec
mov
xorl
mov
mov
xchg
add
mov
add
ret
inc
push
adc
in
data16
xorb
dec
daa
push
dec
adc
xchg
lahf
mulb
mov
fs
push
add
aaa
and
hlt
or
dec
insb
out
push
incl
lods
cmp
enter
scas
fisttpl
movsb
sbb
test
mov
loop
int3
leave
add
pop
push
das
ja
sub
lcall
jl
push
cmc
xlat
xor
adc
ret
call
sti
jae
cmp
sahf
in
sbb
or
push
xor
mov
insl
add
jg
lock
loopne
or
jl
lods
xlat
lds
mov
test
ja
mov
nop
aaa
push
aam
inc
cmp
sub
xchg
jp
push
jno
sti
fcomp
adc
mov
stos
lods
dec
pop
jp
jno
jnp
roll
daa
push
sbb
lock
and
pslld
mov
aam
pop
repz
mov
xchg
pop
in
sub
dec
xchg
rcrl
out
fimull
das
adc
pop
and
std
sbb
sbb
add
xor
ret
daa
jo
test
in
popa
out
in
test
or
adc
xchg
shlb
aam
lea
mov
inc
cmp
mov
and
movsb
imul
scas
addr16
in
adc
fcomps
adc
mov
hlt
dec
push
clc
dec
dec
lcall
std
in
cltd
push
popf
ror
fsts
jb
sbb
cmpsb
xor
dec
add
insl
xchg
mov
aam
lock
fildl
test
pusha
mov
enter
fmull
adc
cwtl
out
mov
clc
mov
push
in
lea
push
mov
push
sub
sti
test
aas
fsubs
sub
adc
inc
sub
out
loope
or
lahf
cmp
insl
dec
test
xor
aaa
outsb
xchg
stos
xchg
mov
inc
mov
jg
push
repnz
es
test
jg
sub
mov
sti
mov
push
jge
ljmp
adc
hlt
add
inc
jecxz
jo
mov
push
movsb
mov
loop
mov
into
cmpsl
rolb
iret
jl
mov
mov
pop
and
rcrb
cmp
jl
add
xor
out
dec
mov
cmp
pop
out
mov
out
lock
cwtl
fldt
jnp
jbe
mov
xchg
mov
xor
mov
add
jne
xchg
ljmp
shr
out
repnz
iret
mov
pop
pusha
flds
jae
jnp
mov
lret
mov
cmp
sbb
xchg
push
out
jecxz
push
nop
scas
loopne
xchg
pop
scas
sbb
mov
mov
addr16
and
hlt
push
shlb
outsl
jle
test
outsb
insl
in
insl
jns
fdivl
or
scas
sbb
ljmp
jae
sub
cmp
add
push
dec
mov
sub
aam
dec
mov
mov
iret
loopne
and
add
into
add
xchg
std
xchg
pop
push
mov
add
jnp
jns
sub
rcrl
rolb
aad
adc
sub
xchg
jo
pop
mov
push
fwait
lods
and
loop
cmp
call
sahf
subl
jne
daa
mov
mov
test
loop
les
jno
cmp
mov
push
cmc
mov
adcb
mov
stc
out
cwtl
pop
cmc
test
and
dec
jp
cmp
dec
loop
mov
into
adc
mov
addr16
fisubrl
pop
shrb
mov
imul
fcomps
lods
xchg
mov
insl
pusha
mov
sti
cld
repnz
inc
pop
sbbb
imul
lock
jno
repz
je
mov
xchg
jno
push
aaa
mov
testl
mov
and
jbe
pop
stc
mov
lahf
xchg
jne
icebp
jmp
insl
dec
mov
loopne
inc
out
pop
rcll
lret
and
mov
mov
mov
cld
stc
cwtl
mov
push
jne
fiadds
lret
cmp
and
rcr
mov
aas
mov
cmpsl
add
fmulp
stc
push
les
out
and
mov
or
gs
es
and
daa
jg
inc
aam
popf
mov
daa
inc
fucom
roll
arpl
in
imul
mov
aam
pop
push
inc
aad
lcall
mov
push
pop
repz
dec
test
mov
and
in
xor
push
pushf
test
cwtl
loopne
fidivrs
push
int
fmuls
push
mov
jnp
push
and
fnstcw
mov
push
int3
fdivl
test
add
push
arpl
loopne
push
mov
jbe
pop
test
and
xchg
imulb
xor
sub
add
loop
imul
fs
in
add
lahf
ss
aam
xor
pop
xor
sbb
sbb
pop
jns
into
or
pusha
scas
cmp
lock
outsl
lods
jg
push
mov
out
push
and
out
popf
push
mov
or
push
mov
push
cli
fcoms
rcrb
sarb
rol
and
inc
inc
fcmovnu
nop
dec
test
pushf
aam
and
mov
mov
cltd
mov
adc
or
mov
jg
xor
std
test
jmp
fstp
jno
xchg
xor
mov
lock
inc
dec
sahf
xor
sub
mov
aas
mov
sub
repnz
mov
cltd
les
imulb
or
xchg
mov
test
cltd
jae
mov
push
xchg
pop
faddl
ljmp
cmc
arpl
je
aam
loopne
push
xor
pushf
shll
iret
pop
shl
js
or
xchg
in
mov
fsubl
fldenv
cli
inc
adc
stc
jecxz
mov
sub
xor
push
jg
aam
mov
xchg
aad
adc
loope
js
nop
push
movsl
mov
adc
test
cmpsl
jbe
arpl
mov
js,pt
mov
pop
jge
mov
xchg
test
sbb
jge
push
jp
dec
sbb
insl
dec
clc
idivl
sbb
testb
mov
mov
ja
fisttps
test
push
mov
sub
mov
jne
loop
pop
mov
dec
fld
gs
adc
arpl
fldt
cmpsb
jmp
or
add
xchg
adc
call
cmp
hlt
into
inc
nop
push
and
pusha
inc
adc
pop
or
test
bound
push
ret
sti
fidivrs
fs
jmp
push
lret
adc
cmp
cmp
stos
ja
adc
out
xchg
xchg
orl
sbb
jo
jle
adc
in
je,pn
cli
loope
add
in
test
xor
scas
popf
cmp
mov
adc
fldenv
test
cmp
cli
shlb
pop
fisttps
mov
cmpb
daa
call
out
adc
inc
leave
dec
cld
rcrb
mov
push
adc
fidivl
jge
rcrb
add
jmp
add
cltd
xchg
in
mov
js
cmp
mov
fmuls
jbe
cld
dec
mov
ret
mov
subl
cmp
in
lcall
in
add
test
fists
lods
arpl
outsb
cmpsl
test
xchg
mov
mov
shl
xchg
push
enter
sti
stc
jnp
sub
sub
test
insl
sbb
xchg
mov
ds
jp
mov
or
inc
xor
addl
or
xor
testl
sbb
movsb
cmc
movl
mov
or
mov
mov
adc
mov
mov
sbbl
mov
xor
add
orl
mov
lea
mov
mov
xor
sbbl
add
orl
mov
subl
lea
push
neg
mov
subl
xor
add
push
mov
push
movl
pushl
call
xor
add
and
mov
mov
mov
mov
mov
sub
sub
movl
mov
mov
xorl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
negl
mov
xor
or
xor
mov
neg
xor
mov
sub
mov
mov
movl
mov
movl
mov
movl
cmp
movl
je
xor
mov
jmp
or
inc
mov
insl
mov
inc
pop
addl
fcomps
popf
mov
fists
sbb
mov
movsb
xchg
mov
fmull
out
sub
movsl
or
sub
addr16
testl
mov
xor
mov
adc
mov
inc
xchg
out
fistps
add
xchg
ds
push
sub
jg
xor
inc
iret
lea
les
clc
shrl
iret
jo
add
add
push
xchg
sbb
lret
sbb
mov
call
push
adc
lahf
pop
xchg
jae
mov
sub
subl
cmp
push
add
pop
xor
data16
mov
dec
jbe
sub
int
mov
scas
flds
push
mov
sbb
or
and
mov
repz
dec
or
rcrl
icebp
pop
imul
adc
sub
popf
clc
out
xchg
movsb
add
or
inc
jecxz
out
daa
mov
mov
and
ret
cmc
sbb
pop
cmc
mov
jo
fs
add
fucomi
cmpsb
leave
mov
mov
popa
mov
inc
jne
mov
jcxz
pop
cmp
jg
test
sub
ja
or
outsb
loopne
les
pusha
and
cmp
cli
xorb
or
repnz
cmp
sbbb
es
int
cs
or
aad
mov
inc
cld
xor
adc
fimull
add
loope
pop
aaa
andl
or
fistl
fdivrl
or
mov
insb
push
xchg
out
fcmovu
pop
mov
sbb
cmp
bound
and
test
cmp
stos
mov
xchg
sub
push
pop
push
sbb
and
fiadds
fnstenv
and
or
leave
out
icebp
xchg
es
mov
lods
mov
sbb
stc
jno
hlt
cmc
cmp
push
push
movsb
popf
adc
icebp
cmp
fnsave
movsb
imul
and
ja
daa
leave
xchg
mov
aam
popa
push
inc
out
cs
shlb
call
inc
and
mov
outsb
push
gs
push
push
jecxz
imul
test
fmull
imul
xlat
xor
inc
xchg
popa
rorl
call
outsb
add
sbb
xchg
fsubs
inc
mov
mov
pop
push
dec
ret
and
lret
inc
adc
imul
jmp
mov
sti
pushf
xor
js
mov
lods
mov
or
orb
notb
fsubs
lahf
cwtl
mov
xchg
pop
push
in
out
mov
sbb
xor
jo
mov
out
shr
mov
lods
mov
fcmovnbe
bound
xor
shrb
cwtl
fdivrs
sbb
inc
js
add
imul
or
lahf
push
fsubrl
fdivrl
test
outsb
jp
shll
mov
scas
fistpl
and
xchg
or
ret
sbb
in
in
xchg
cmp
mov
clc
in
je
clc
ret
lret
or
std
stos
mov
pop
movsl
clc
iret
insl
mov
jno
xor
inc
xlat
cmpsb
lret
test
mov
popf
dec
inc
movsb
rol
lock
addb
lods
jge
ret
mov
dec
or
xchg
std
xchg
ds
push
enter
lret
mov
push
xor
or
jmp
jge
sbb
andl
and
and
mov
aaa
xor
sbb
mov
fnstcw
sahf
xchg
push
sbbl
cmpl
jmp
adc
xchg
scas
jnp
add
out
es
out
les
add
repnz
jg
inc
and
dec
loope
in
mov
mov
inc
push
loop
adc
or
popf
and
sbb
sbb
pop
and
jmp
xchg
scas
sbb
movsl
cmp
sti
aad
xor
sub
inc
out
pop
insb
push
push
mov
jae
and
test
push
dec
jge
cmp
hlt
push
in
imull
pop
cmp
repz
out
loopne
xlat
test
jmp
lcall
dec
xchg
jb
or
insb
push
mov
xchg
cmp
cmp
pop
aas
cltd
jle
jno
daa
movsb
shlb
scas
add
sub
leave
adc
rcrb
mov
inc
gs
je
sbb
data16
sub
mov
test
adc
arpl
cld
scas
add
fdivp
int3
or
push
loop
cmp
rcl
add
sbb
push
leave
mov
outsl
xchg
int
jb
out
mov
cwtl
rcr
push
cli
icebp
lods
push
mov
push
add
xlat
mov
subl
mov
sub
push
mov
js
xchg
lds
movsl
sub
or
mov
xchg
fwait
cltd
cwtl
inc
in
movsl
clc
les
popl
mov
inc
cmc
adc
mov
sub
xchg
cmp
scas
push
neg
or
inc
push
jp
arpl
pop
add
push
dec
sub
rcll
push
out
xchg
je
aaa
in
cmp
xchg
jecxz
ljmp
mov
lcall
pop
ljmp
test
ss
les
jmp
insb
popf
or
sahf
mov
repz
inc
incb
ljmp
xorl
jl
bound
outsb
jno
add
icebp
inc
and
dec
hlt
outsl
mov
pop
int3
stc
push
cmc
sbb
aaa
movsb
mov
pop
lret
sub
xchg
gs
outsl
pop
jmp
je
lock
mov
int
int3
push
xor
ds
or
xor
or
in
ds
mov
xchg
adc
sub
in
fisttpll
xchg
sti
mov
sbbb
adc
aam
inc
movsl
nop
loopne
mov
in
test
inc
jnp
mov
mov
dec
push
xchg
jge
push
push
inc
add
push
rolb
jl
cmc
dec
dec
mov
je
mov
xchg
mov
test
nop
sti
shlb
jl
mov
push
xor
mov
jo
push
push
lcall
jge
lods
push
push
icebp
add
rolb
add
push
pusha
push
mov
dec
int3
mov
stos
ret
jle
js
adc
mov
or
shlb
mov
dec
in
iret
test
mov
push
out
popf
das
hlt
out
mov
add
arpl
push
jle
mov
and
lcall
mov
pop
gs
shr
mov
jb
lds
and
push
int
add
dec
dec
cmpb
cli
into
inc
outsb
xchg
popf
pop
mov
popf
mov
or
inc
xchg
dec
xor
lret
dec
mov
jb
movsl
nop
jnp
jle
xor
xchg
push
rcl
movsl
pop
lds
jmp
int3
lea
xchg
int
test
xor
jb
les
cmc
inc
add
repnz
cli
pop
adc
cld
daa
sub
cmpsl
pop
push
aam
xor
notl
or
cwtl
fcmovbe
pop
scas
stos
dec
pop
dec
lock
adcb
xchg
pop
test
and
outsl
daa
push
cmp
fisubrl
lret
in
out
mov
cld
cmpsl
in
imul
cltd
loop
mov
dec
mov
xor
js
sub
adc
push
out
mov
mov
mov
mov
notl
jmp
adc
dec
test
inc
mov
jmp
inc
cmp
and
lcall
sub
mov
leave
pop
xor
movsb
js
ss
pop
xchg
dec
adc
push
pop
insb
sub
test
adc
mov
jns
cltd
test
jge
das
adc
dec
add
sbb
insl
fcmovnbe
jmp
jb
ja
dec
lea
scas
ljmp
mov
jg
repz
into
or
pop
cmp
out
aad
insb
jae
repnz
mov
sbb
adc
dec
mov
jo
inc
dec
mov
jle
and
mov
lret
xor
fwait
xchg
lds
ret
lret
test
mov
mov
lret
mov
insb
scas
inc
inc
xchg
les
jne
and
idivl
jg
icebp
dec
ja
adc
ficompl
hlt
jmp
movsl
aam
fdivr
dec
sbb
rcll
xchg
mov
xchg
loop
imul
add
in
cli
gs
ds
pop
mov
add
fadds
sti
js
out
inc
es
add
mov
icebp
aaa
mov
in
push
dec
in
push
test
sbb
adc
sbb
bound
sbb
decb
xchg
push
inc
dec
out
out
lcall
lds
notl
cmp
adc
mov
dec
repz
sarl
add
imul
es
test
loop
addl
cmp
and
call
cmp
out
mov
frstor
shrb
jmp
mov
mov
jmp
aaa
aas
jbe
je
in
sbb
pop
pop
in
cmp
pop
xor
pushf
push
notb
in
rorl
int3
stos
call
clc
jp
jle
add
mov
jns
pop
cmpsl
pop
adc
xchg
pushf
les
int
pusha
cmp
in
cmpsl
xlat
mov
xchg
cs
ss
add
push
pusha
jb
xor
pop
cmp
jne
ja
inc
js
cld
xor
jl
xchg
dec
into
jo
aam
scas
adc
inc
in
cmp
dec
sbb
lock
test
and
out
jl
push
mov
out
mov
mov
sub
xor
stos
aaa
cmovno
jb
cmp
outsb
lods
sub
les
jne
dec
sub
pop
pop
test
ds
negl
mov
xor
jno
filds
jp
or
push
pusha
mov
pop
mov
inc
push
or
or
fistpll
pop
dec
mov
push
rcrl
fdivl
jne
lret
fcoms
test
shr
test
and
push
jne
xchg
mov
les
sub
push
fld
clc
xchg
daa
xor
lcall
leave
scas
fisttpl
test
mov
fcomip
push
pushf
aaa
mov
and
or
mov
and
cmpsb
xor
mov
ljmp
mov
pop
lret
push
cwtl
inc
in
push
inc
shrl
mov
lea
pop
pushf
in
jae
push
sub
xchg
in
push
cmp
dec
pop
dec
dec
cmpsb
cmpl
dec
repz
sub
and
pop
incb
out
cmp
and
mov
jg
fisubrl
fsubrl
adc
test
jl
mov
pop
jmp
adc
imul
loopne
and
xchg
push
jnp
xlat
aaa
daa
pop
es
jo
sub
or
fsubrs
inc
mov
jne
or
push
out
sti
mov
pop
fs
push
xchg
mov
cli
xchg
cmpsb
mulb
shll
sub
xlat
idiv
mov
add
add
insb
imul
xchg
lret
and
gs
and
clc
pop
jge
out
js
in
inc
orb
sbb
stc
inc
xor
repnz
int
push
aam
mov
pop
notb
lret
test
xchg
rcrb
sahf
outsl
call
shrl
jge
jo
push
testl
jecxz
call
js
mov
sub
mov
movsl
or
cmp
and
add
lea
mov
enter
mov
mov
push
dec
pop
push
stos
jno
repz
jne
fwait
mov
test
leave
sub
js
in
push
ret
cmp
push
fidivl
xchg
mov
adc
mov
xor
shll
test
roll
mov
push
cld
push
pop
enter
sub
insb
xor
cwtl
push
pop
nop
cmp
arpl
push
inc
sub
mov
xchg
fucomi
sub
dec
mov
imul
or
insl
jo
xchg
pop
in
fistpl
jne
or
jno
scas
pop
mov
xchg
cld
orb
jmp
cmpsb
mov
dec
push
in
xor
addl
mov
mov
push
out
push
out
or
aaa
cwtl
loop
xchg
movsl
bound
sbb
dec
push
inc
xchg
sub
cmpsb
imul
xchg
jecxz
push
or
lock
scas
aas
fistpl
fiadds
add
fstpt
stc
mov
sub
adc
mov
jo
out
push
ss
sbb
adc
cmp
push
test
adc
mov
jns
pop
add
xor
adc
into
fsubl
push
fidivl
dec
inc
arpl
outsl
mov
and
adc
cmpsb
mov
push
xor
movsl
or
lcall
push
push
cmp
push
mov
sub
cmp
fildll
mov
jecxz
jmp
insb
lret
jecxz
sar
push
es
call
loopne
or
cli
or
sub
daa
int3
adc
xor
xor
mov
or
xchg
sahf
lock
sub
pop
push
mov
jns
mov
enter
and
push
mov
mov
jecxz
xchg
je
add
cli
lods
enter
xor
push
outsl
test
push
lret
mov
je
call
scas
xchg
mov
and
push
lea
ljmp
cli
inc
sti
loope
pop
pop
scas
out
mov
or
jo
frstor
sbb
adc
nop
cmp
sub
sub
mov
or
adc
adc
or
scas
cmp
gs
sub
je
or
arpl
imul
in
fildl
adc
lods
scas
or
push
rcrl
lods
pusha
int
test
mov
pop
push
pushf
fwait
sti
cli
push
pop
xchg
jae
sbbl
xchg
and
jle
ret
pop
es
xlat
mov
pop
xchg
inc
jb
push
dec
or
inc
ljmp
cltd
add
mov
in
enter
dec
xchg
stos
adcl
sti
xor
test
fcoml
adc
loop
fmull
xchg
mov
or
sbb
xor
push
loopne
push
push
jbe
movsb
push
sub
repnz
iret
orl
sub
cs
xchg
and
fwait
mov
cltd
or
je
test
ss
loopne
push
mov
lods
int3
rclb
lods
mov
in
dec
stos
scas
inc
adc
push
xchg
shl
ljmp
sbb
sbb
repz
imul
sub
lods
ret
fsubp
divl
dec
subb
daa
dec
in
adc
inc
or
xchg
pop
cmp
xchg
lret
xchg
or
das
mov
data16
push
push
xchg
mov
pop
add
adc
int3
push
data16
mov
pop
mov
dec
sbb
aam
call
cmp
fnstcw
gs
sbb
rcrb
insl
movsl
jb
loopne
pop
xor
and
std
jp
mov
mov
cmp
shll
ss
mov
sub
mov
lock
pop
adc
dec
adc
ror
repz
arpl
or
movsb
fidivrl
dec
ja
xor
dec
push
movsb
push
inc
mov
repnz
in
inc
repnz
sub
jmp
lds
pop
cwtl
rclb
adc
out
shlb
fwait
and
aaa
cmp
jmp
and
mov
mov
fadds
and
das
dec
add
push
data16
jno
and
cltd
and
xchg
add
xor
and
loopne
inc
jge
movsl
pusha
les
push
aam
mov
fdiv
int
icebp
cmp
mov
adc
push
mov
dec
push
ja
mov
ds
sbb
mov
add
pop
sti
sarb
lret
loope
adc
mov
sbb
dec
mov
mov
mov
dec
mov
sub
repz
out
inc
or
jle
leave
test
pop
push
xor
pop
pop
iret
fldt
mov
mov
mov
cmc
mov
in
and
in
add
nop
sarl
xchg
es
add
mov
mov
std
lahf
adc
out
repz
sub
mov
popl
stc
dec
xor
cmp
dec
clc
and
inc
dec
mov
add
dec
test
call
xlat
cmc
js
dec
adc
aas
mov
icebp
pusha
dec
jb
jno
adc
fists
dec
pop
insb
imul
pushf
adc
mov
rcrb
adc
xchg
movq
rol
leave
mov
inc
adc
mov
push
pushf
add
repnz
mov
movsb
adc
insb
xchg
sarl
add
mov
pop
jbe
jne
fdivrl
js
dec
xchg
cwtl
mov
es
or
mov
sbb
fcomp
jecxz
fisttps
push
insb
test
pusha
xchg
enter
or
fwait
mov
pushf
add
pop
aas
in
cmp
in
cltd
add
add
push
adc
and
xlat
addb
mov
dec
shlb
xor
leave
lcall
pop
rcll
leave
push
sub
stc
xor
mov
or
cld
sbb
or
loope,pt
movsb
in
fisubs
fidivl
or
out
fisubl
daa
bound
or
cmp
subl
mov
mov
arpl
out
cmp
push
sbb
movsl
aad
imul
or
sti
test
fcompl
ss
mov
dec
aaa
inc
arpl
or
add
call
ljmp
shlb
jb
jecxz
jne
push
pop
pop
inc
roll
ret
mov
mov
fs
aas
and
les
into
neg
movsl
inc
cmp
pop
mov
xorb
aas
sub
std
cmp
movsl
scas
ss
mov
push
lcall
cmc
sub
rol
sahf
int3
jbe
pop
ja
subb
mov
inc
notb
add
mov
push
pop
pop
test
incl
add
pop
cli
jp
xor
call
and
jns
cmp
xor
sub
add
mov
daa
leave
inc
push
xlat
xor
xchg
mov
xor
inc
add
mov
cmp
fdivs
mov
jle
psubsw
pop
pop
and
in
lods
push
mov
dec
pop
sbb
stc
dec
jecxz
shll
lahf
lahf
repz
idiv
pop
out
inc
jns
and
sti
push
popf
jp
dec
in
fildll
pop
ljmp
jge
cmp
aam
sub
mov
jbe
mov
inc
pushf
lea
hlt
leave
mov
out
orl
lea
adc
or
mov
cmpsb
imul
stos
jno
das
leave
xchg
aam
sub
imul
xor
adc
xor
pop
add
fwait
inc
fildll
xchg
cmp
mov
pop
push
pushf
clc
push
cli
add
mov
cmp
mov
push
xor
fnop
push
lret
jno
insl
jae
sbb
add
loope
test
mov
push
inc
shrl
xchg
mov
lods
notl
push
jle
cmp
mov
and
mov
je
mov
push
sbb
adc
call
mov
ss
movsb
xor
aaa
or
mov
test
fmuls
nop
aad
sub
lock
ret
push
iret
jecxz
testl
je
scas
sub
adc
jo
stc
add
sub
push
aam
jns
mov
movsl
push
stos
cs
pop
and
sub
sbb
jne
iret
push
sbb
pop
divl
dec
jae
push
push
add
xchg
add
aas
sub
lods
dec
xchg
in
adc
shll
xor
ljmp
push
leave
int3
jecxz
or
and
ja
ja
push
push
or
insl
and
xchg
out
inc
xor
out
ficoms
lret
out
cmp
insb
dec
mov
mov
xchg
add
iret
sbb
out
xor
fisttps
add
push
call
push
out
shrl
jae
loope
add
push
jmp
cmp
movsl
das
ficoml
out
and
pop
push
push
jno
xor
jb
lret
and
jae
repz
lret
inc
push
push
scas
adc
pop
ret
dec
and
mov
fdiv
jle
test
or
out
aas
mov
int
push
in
cld
or
mov
mov
fcmovnbe
sub
lret
and
pop
sub
shlb
repnz
scas
mov
add
js
sub
pushf
mov
inc
pushf
jns
adc
shll
imul
dec
mov
inc
xchg
push
shll
push
cmp
and
arpl
ret
xor
jns
adc
pop
loope
mov
dec
test
cs
lret
lds
int3
push
and
dec
jb
and
imul
mov
mov
xchg
mov
pop
int3
mov
push
dec
lret
mov
mov
cwtl
sbb
cli
xor
sbb
jecxz
fidivl
add
xchg
repnz
in
outsb
pop
jne
cld
jns
cmp
dec
ljmp
sbb
imul
jp
sbb
add
insl
sub
mov
in
sbb
add
mov
movsl
cmpb
sub
mov
pop
clc
lea
mov
out
dec
pushf
sbb
push
fistpl
or
pop
mov
push
in
xchg
push
mov
mov
pop
cmp
fnstcw
jbe
sbb
test
loopne
jl
xor
scas
repnz
pop
fbstp
push
data16
jmp
or
mov
rorl
mov
push
push
push
in
int
lock
xlat
movsl
inc
aad
pop
sub
mov
mov
pushf
cmpsl
popa
cmp
outsl
push
rcrb
jmp
and
orps
jmp
aaa
xchg
xor
mov
out
jae
jp
xchg
inc
inc
cmp
push
push
fnsave
jp
xor
jmp
mov
in
mov
add
test
out
dec
out
inc
dec
movsb
xor
in
sbb
inc
xchg
sub
rolb
push
dec
test
sarl
fisubrl
adc
jbe
fildll
sub
stos
push
lret
sbbl
movsb
divl
cli
sti
cmp
add
and
cltd
jle
sbb
aam
lahf
sub
jns
sub
js
or
ficompl
pop
cmp
adc
mov
fbld
cmpb
sub
in
sbb
imul
cld
jg
xchg
mov
push
jp
int
and
or
aam
mov
or
std
sub
jmp
add
jg
cmpsb
cmpsl
scas
dec
xchg
mov
notl
push
push
data16
repz
pop
add
fldenv
mov
jne
dec
scas
lret
outsl
sbb
fstpt
sbb
mov
test
jo
cwtl
push
mov
divb
xlat
mov
mov
sbb
mov
inc
aaa
sti
mov
inc
ljmp
sbb
subl
push
mov
fwait
cmp
push
out
xor
gs
mov
mov
sbb
jns
jmp
sub
or
bound
cmpsb
sti
ret
aam
or
mov
push
or
rolb
jp
pop
cmpsl
outsb
and
push
iret
lret
popf
jecxz
cmp
je
enter
rol
mov
dec
sub
push
fstps
mov
and
out
add
les
and
cmc
fwait
pop
rcll
lds
loop
cmp
ljmp
mov
push
repnz
es
sub
iret
and
mov
subl
mov
mov
sbb
fwait
jmp
lds
cwtl
jmp
adc
flds
jne
std
mov
inc
sbb
jmp
fldenv
clc
jl
lods
jg
hlt
adc
xchg
jmp
or
xchg
adc
repz
inc
fistps
arpl
adc
outsb
or
popa
inc
and
mov
movsl
add
int
pop
fistl
les
xchg
cli
mov
aad
mov
aaa
pushf
js
mov
imul
mov
std
lods
repz
sbb
pop
mov
int3
call
daa
cmp
push
sbb
testb
sarl
xor
lret
sub
add
pop
dec
icebp
imul
push
jg
daa
push
inc
pop
adc
mov
lods
into
jg
std
jb
ja
xlat
test
div
fadds
or
sbb
enter
sti
pusha
stc
loope
cwtl
mov
add
out
int3
mov
daa
xor
aas
cmp
add
pusha
das
sbbb
sub
jne
sub
mov
ljmp
mov
movsl
mov
cmpsl
fildl
xor
jb
inc
push
inc
fs
loop
out
lds
cmpsb
aad
push
xchg
add
fadds
or
mov
jne
and
mov
mov
into
out
notb
dec
add
xor
leave
roll
popa
mov
fs
jge
mov
cli
mov
lods
mov
mov
lods
and
movsl
fdiv
jo
cwtl
jle
icebp
xor
mov
jl
and
mov
stc
mov
addr16
lock
jl
pushf
dec
or
lock
pop
mov
push
mov
icebp
sbb
push
jmp
add
out
je
addr16
sbb
jmp
fsubrp
inc
mov
stc
lock
and
mov
and
in
dec
ljmp
add
es
mov
div
mov
push
les
jae
gs
xor
xor
in
call
ss
inc
mov
xor
cltd
sbb
sbb
movsb
movsl
inc
cmp
push
pop
loop
pop
mov
les
and
mov
arpl
paddw
sub
sub
shll
mov
movsl
jmp
mov
loopne
insl
hlt
in
push
aad
cmp
lret
mov
test
mov
mov
mov
loop
cmp
push
jl
pusha
and
pushf
fldl
movsb
jno
pop
test
stos
dec
lret
ljmp
lahf
out
sti
ficoms
sub
insl
cmc
mov
mov
jg
shlb
cmp
fxch
pop
xchg
cmpsb
das
jb
xchg
arpl
jns
adc
je
aaa
cmp
or
sub
mov
movsb
movsl
sbb
mov
mov
jbe
mov
cmp
dec
push
addr16
push
js
push
rolb
insl
fwait
sub
jnp
pop
ret
and
repnz
jge
inc
iret
ds
popf
insb
jl
inc
xchg
stc
test
loop
dec
loopne
mov
push
adc
pop
xlat
inc
pop
lock
lock
or
adc
out
cmp
sbb
scas
movsl
jp
mov
insl
rorl
mov
iret
xchg
mov
stos
xor
aas
lret
cltd
les
lahf
jmp
cmpsl
sahf
sub
push
push
ss
dec
popf
mov
jmp
xchg
lcall
xor
and
push
pop
adc
js
les
outsl
sub
jmp
int3
test
scas
and
imulb
push
or
jg
movsb
imul
xor
test
mov
mov
sub
je
insl
xchg
mov
mov
cmc
scas
or
xchg
or
cmp
arpl
hlt
shrl
fildll
repz
mov
and
sub
inc
cmpsl
lea
pop
lcall
not
in
jmp
lock
sub
jnp
int
pop
mov
outsb
cli
dec
imul
or
movl
stos
xor
aam
dec
lahf
inc
dec
sub
arpl
xchg
aad
xchg
xorl
fldenv
add
add
outsb
jne
imul
sysenter
movl
push
jb
lods
outsl
add
ljmp
and
jmp
push
push
repz
xor
movsb
dec
test
roll
xor
fistpl
mov
xchg
mov
dec
push
ds
push
xchg
loopne
sbb
cmp
mov
sub
pop
fildl
mov
mov
test
sub
pusha
jge
sti
ffree
jns
jae
bnd
icebp
out
push
aad
inc
push
xor
jnp
mov
xchg
push
dec
out
mov
shll
and
cmpl
ljmp
fbld
ret
in
pop
inc
je
divl
mov
int3
sbb
shll
pop
mov
loop
push
or
xchg
adc
add
cmpsb
or
sbb
mov
lahf
pop
dec
idivb
into
xor
sbb
ja
pop
sub
xchg
adcb
mov
repz
sarl
xchg
lcall
sub
sub
mov
xchg
sahf
bound
add
ljmp
mov
mov
popf
adc
or
push
sbb
xorb
mov
aas
ret
je
sbb
loopne
xchg
aaa
sti
rcl
add
mov
mov
jae
cmc
pop
dec
std
adc
in
mov
pop
inc
out
mov
lcall
repnz
call
rcrb
imul
xchg
cmp
popa
pusha
repnz
pop
enter
mov
push
xchg
adc
pushl
mov
pop
jl
les
xor
jg
mov
cmp
into
addr16
sti
filds
and
xchg
dec
subl
sbb
mov
mov
add
in
not
dec
les
ss
sti
inc
das
enter
mov
addr16
inc
adc
adc
push
xor
roll
stos
scas
dec
and
mov
add
dec
lock
xor
addl
xor
lea
andl
xor
or
inc
mov
cmpl
jge
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
xor
orl
div
or
mov
xor
xor
sbb
mov
xor
orl
xor
sbbl
sub
cmp
jmp
mov
loope
addb
es
mov
addl
and
cmp
mov
loope
adc
mov
test
or
icebp
into
mov
add
daa
cmp
repnz
adc
adc
in
ficoms
fistl
mov
xchg
sbb
pop
ja
lds
fsubl
mov
cltd
xchg
stc
cmp
frstor
popf
inc
ret
mov
mov
xchg
or
xchg
jns
call
push
cmc
in
mov
ret
nop
pop
jl
dec
scas
insl
shll
jbe
lret
jne
loope
sub
sbb
mov
xchg
mov
cmp
in
add
push
call
jg
fwait
les
jge
lahf
mov
or
lcall
add
mov
or
sti
aaa
fcmovb
jnp
nop
or
jl
aas
ds
sbb
cld
icebp
push
les
cmpsb
in
xchg
pop
xchg
mov
cmpsb
out
push
add
cmp
cwtl
push
cltd
fwait
dec
jge
in
cmpl
mov
stos
xchg
mov
mov
cmc
mov
pop
dec
outsb
in
lret
xchg
mov
or
fidivrl
movsb
adc
shrb
push
dec
push
arpl
fstl
outsl
fs
sbb
inc
aaa
dec
in
cmp
push
shrl
jne
sub
push
lret
sbb
call
ja
jle
ljmp
rcrl
mov
ss
mov
xchg
lds
movsl
mov
pop
int3
mov
ds
inc
in
cmc
and
pop
lock
insb
jle
in
cmp
ljmp
jae
mov
jge
fimull
fisubl
pop
cmc
cli
sub
mov
adc
lods
outsl
mov
xlat
icebp
test
imul
push
adcl
jecxz
lds
jp
incl
fidivl
pop
mov
jecxz
cmc
add
lcall
xchg
es
xchg
push
mov
inc
loop
cmpsb
hlt
daa
push
mov
inc
imul
cmpsb
mov
push
jne
and
dec
xor
cltd
dec
push
jl
std
cs
inc
cmp
jecxz
adc
mov
sbb
repz
imul
jge
mov
mov
push
mov
shl
flds
mov
stos
push
or
sub
icebp
icebp
push
das
mov
test
pop
mov
sub
dec
mov
mov
dec
and
daa
mov
fs
or
aam
bound
xchg
nop
jg
repnz
cld
jp
dec
pop
xor
das
dec
fistpl
addr16
stc
pop
or
xchg
or
or
daa
popf
clc
push
test
mov
fnstenv
dec
adc
push
ljmp
or
push
add
sahf
test
inc
sub
adc
adc
adc
mov
xor
nop
pushf
into
jno
fs
outsb
movsl
insl
les
xchg
inc
cmpsb
and
xor
adc
inc
push
nop
imul
mov
es
xor
dec
jecxz
clc
test
stc
push
xchg
int
xchg
cmp
scas
jbe
adcb
in
xchg
xchg
loop
mov
inc
cmp
test
int3
adc
push
xchg
inc
insl
sbb
mov
push
xchg
cltd
fdivs
movsl
push
xor
adc
mov
xor
mov
lock
pop
push
jbe
sub
mov
fscale
aam
dec
hlt
cmp
in
or
ja
or
and
aam
sti
mov
sbb
pop
fisubrl
add
sbb
arpl
pop
or
std
mov
insl
jno
sub
or
loopne
test
out
sti
imull
mov
pop
pop
daa
inc
rcrl
push
das
inc
repz
mov
repnz
pop
mov
jo
outsb
cmc
or
jbe
sbb
cmp
in
xchg
sbb
xlat
lcall
fstpt
movsb
jecxz
shl
pusha
loopne
adc
mov
mov
add
notl
push
pop
ret
mov
aad
jno
adc
cmp
jne
pushf
sti
mov
sbb
and
lds
jg
mov
arpl
andb
jle
insb
popf
mov
nop
or
iret
xchg
pop
lock
xchg
pop
or
mov
rcrl
clc
arpl
xlat
xor
or
sub
insb
pop
xor
loope
test
jae
fcmovb
js
in
push
xlat
repnz
leave
lret
jno
mov
pop
inc
cmp
pop
mov
push
stos
mov
jne
cmp
sub
repnz
mov
jne
add
aas
psubw
sub
inc
or
xchg
fcompl
cmpsb
sbb
leave
push
push
dec
push
push
adc
jle
sbb
mov
ret
fmuls
shrb
dec
pop
call
gs
sub
lcall
stos
in
push
inc
popa
repz
adc
adc
imul
dec
inc
lea
scas
cmp
lods
add
mov
mov
inc
pop
imul
ret
mov
in
shrl
in
ret
dec
sbb
iret
jg
into
rorb
not
into
dec
push
mov
dec
pop
add
cmp
mov
mov
mov
enter
lahf
hlt
cld
imul
xchg
xlat
gs
inc
adc
adc
dec
movsb
popf
mov
mov
and
adc
xchg
pop
sub
and
bound
cld
sbb
mov
mov
sub
lods
pop
lret
jmp
stos
dec
nop
iret
dec
out
jle
add
jp
idivl
add
xor
pop
jo
pop
xchg
imul
mov
idiv
mov
and
or
xchg
sbb
adc
xchg
sub
js
sbbl
mov
pusha
in
lret
lock
dec
icebp
ret
sbb
sbb
jae
in
test
nop
rolb
sub
mov
and
mov
xchg
in
push
out
sub
push
popa
and
xlat
lods
xchg
mov
mov
adc
lods
push
mov
inc
and
out
das
in
leave
imul
sahf
xchg
push
sbb
fidivl
jnp
push
or
scas
xor
adc
lods
pushl
int
push
call
adc
test
jp,pt
fimull
jne
sbb
lods
pop
xor
push
aad
xor
fisubrl
outsl
mov
or
imul
test
jae
adc
jecxz
mov
xor
inc
pop
xchg
shll
test
sbb
cmp
in
dec
rol
mulb
data16
xor
sbb
in
lods
cmpsb
jnp
out
mov
cmpb
std
ret
xor
icebp
enter
xchg
retw
ret
cmp
loope
sub
mov
les
dec
push
cmp
sub
jno
jp
xchg
dec
or
push
mov
sar
sahf
fs
enter
and
out
into
push
push
jmp
cld
xchg
stos
mov
cs
mov
sar
inc
loop
and
inc
adc
cmp
sub
adc
mov
call
scas
lods
insb
dec
stos
ja
fildl
cld
xchg
fistl
call
mov
and
rorb
xchg
xlat
lods
ljmp
in
in
aad
add
jns
lds
mov
into
shl
and
jmp
out
inc
dec
test
dec
pop
inc
icebp
sbb
pop
mov
mov
stos
xorb
mov
ds
pushf
dec
pushf
lret
idivb
pop
xchg
cwtl
fldt
sub
push
stos
push
or
mov
subl
xlat
add
mov
cmc
mov
dec
mov
push
and
sub
jmp
in
jae
adc
cltd
jmp
sub
pop
xor
xchg
hlt
jnp
jb
int3
mov
xchg
movsb
push
out
inc
mov
xor
movsl
dec
in
lds
icebp
xchg
popf
sub
hlt
jmp
sub
and
jge
leave
sbb
in
mov
out
sub
pop
push
push
sub
cmc
mov
adc
xchg
leave
fdiv
mov
cmp
pop
ret
sub
push
push
xchg
mov
inc
js
negl
loope
mov
sub
push
push
out
lods
rcrb
imul
or
mov
cmp
les
aam
fisubs
fucomip
cmp
mov
lds
flds
mov
cmpsl
mov
loopne
cli
inc
or
adc
pop
xchg
loope
imul
aaa
negl
sub
cli
sbb
push
xchg
andl
mov
adc
add
nop
test
pop
aaa
data16
sub
rcrl
enter
mov
sub
cli
pop
cmpl
pop
iret
js
fwait
insl
repz
pop
mov
pop
out
sbb
enter
mov
mov
shlb
lcall
jbe
je
sub
fadd
xchg
xchg
dec
jns
push
cmc
cs
fstl
imul
adc
outsb
add
adc
repnz
insl
pop
cwtl
repnz
jns
subb
loop
and
adc
pop
push
pop
xchg
or
jmp
rclb
lea
cld
outsb
into
push
mov
daa
pop
jle
mov
pop
or
int
xchg
int
hlt
sahf
xchg
maskmovq
mull
clc
cmpsb
sbb
enter
rorb
out
inc
out
iret
rclb
cmp
push
or
sahf
xor
lcall
xchg
xchg
add
xchg
mov
stc
ret
roll
dec
or
enter
cmp
adc
xchg
movsb
mov
test
je
inc
or
into
insb
or
repnz
fwait
xor
jg
test
cli
jnp
repz
frstor
cmovs
adc
adc
into
adc
xchg
call
inc
mov
aam
add
dec
xlat
cmp
pop
and
sub
icebp
pushf
mov
xor
pop
dec
push
jge
xchg
xor
or
stos
fwait
popf
mov
pop
icebp
xlat
inc
and
dec
jge
push
push
xchg
scas
push
sbb
scas
pop
nop
imul
stos
mov
clc
in
pop
and
hlt
fisttpll
cmpsl
xor
scas
sub
jge
mov
xor
or
xchg
inc
test
lds
push
mov
and
inc
jecxz
push
add
loopne
adc
es
out
xor
repz
fs
pop
jo
xor
fnstcw
ret
push
mov
in
test
stc
add
and
rcrb
ds
scas
push
sub
sub
add
insl
test
mov
mov
sbb
sbb
sbb
daa
and
cs
js
test
stos
fildl
insb
mov
sarl
dec
mov
mov
mulb
movsb
lret
adc
sub
dec
insl
adc
inc
test
xor
xchg
andb
dec
ret
xchg
xchg
mov
cmp
sbb
jl
jmp
shll
ret
fxch
rolb
dec
loope
popf
aaa
jecxz
push
xchg
lds
jne
pop
mov
gs
mov
add
aas
iret
into
xchg
jl
repnz
dec
mov
push
sbb
dec
dec
inc
test
inc
enter
mov
and
mov
je
shll
outsl
adc
xchg
jle
out
xchg
lods
loopne
push
je
sbb
ret
std
nop
insb
dec
adc
add
add
in
jp
popa
push
push
repnz
out
jle
scas
shlb
push
fstl
mov
xor
and
mov
add
cmp
pop
outsl
shrb
push
popa
inc
push
insl
jae
subb
add
push
sbb
call
mov
pop
xor
pop
mov
mov
ret
mov
mov
in
lds
out
inc
xor
bswap
xor
outsl
xchg
mov
in
mov
popa
mov
dec
mov
outsl
aad
sub
test
sti
movq
cmp
jns
negb
pop
mov
test
push
dec
dec
movsl
jl
push
pop
movsb
cs
int3
test
mov
mov
data16
jo
scas
dec
je
aam
push
mov
int3
sbb
cmp
rcrb
jns
sub
push
mov
mov
shll
push
xor
dec
dec
and
push
and
mov
mov
inc
data16
daa
inc
cmp
arpl
je
push
jb
out
scas
pusha
mov
inc
cmp
sub
ss
sub
movups
roll
add
sbb
inc
shl
xor
jmp
ret
jns
sti
mov
shlb
mov
adc
xchg
int3
cmp
add
mov
je
inc
negb
lahf
mov
jae
and
repnz
hlt
and
imul
jge
std
mov
sti
mov
faddl
push
adc
jae
test
les
jg
pop
push
dec
mov
and
les
or
dec
jo
mov
adc
stos
stc
leave
fsubr
push
divl
jp
sbb
pop
insb
xchg
lcall
dec
test
push
cltd
push
lea
cs
xlat
cmc
hlt
call
arpl
fldenv
popf
jle
dec
nop
rol
les
push
data16
inc
sub
adc
cwtl
push
xchg
mov
popf
sbb
cmpsb
dec
movsb
int3
mov
sbb
data16
das
pop
push
or
pop
cli
dec
fsubrl
jg
xchg
or
jnp
jmp
sbb
and
mov
sbb
mov
dec
adc
stos
and
and
or
mov
cs
sbb
idivb
or
sbb
fwait
test
popa
scas
xor
xchg
testb
in
mov
or
add
xor
or
movsb
cmpsl
test
xlat
lods
xchg
mov
aad
add
sbb
inc
fists
imul
and
lds
push
es
adc
outsb
dec
subl
lahf
xchg
into
inc
lret
loop
movsl
jl
lock
lea
xchg
icebp
lcall
sbb
aaa
test
sub
fwait
xchg
lfs
or
imull
push
jg
dec
cmp
xchg
negl
sub
dec
mov
xchg
mov
adc
cmpsb
out
ljmp
mov
iret
and
cmp
movsl
in
push
out
adc
lret
xchg
mov
sbb
lret
sub
mov
popf
pop
out
mov
jnp
lret
pop
cltd
pop
sub
push
push
loope
les
lret
test
fwait
roll
les
mov
mov
inc
call
dec
cmc
test
mov
inc
sbb
fisubrl
sub
call
push
daa
mov
jmp
icebp
or
adc
adc
mov
mov
fdivp
bound
rorb
into
add
mov
mov
mov
and
add
pushf
add
mov
cmc
cmp
pop
cmp
mov
pop
das
lds
cmpsl
sbb
add
and
faddl
inc
mov
adc
xor
in
fmul
shrb
pushfw
int3
inc
or
out
int
pushf
lcall
add
and
jo
pop
call
inc
mov
cmpsb
inc
push
adc
inc
adc
xchg
les
mov
lock
flds
out
fidivrl
push
or
int3
arpl
jg
adc
aad
push
dec
fsubrl
es
hlt
add
xchg
jbe
sub
popf
inc
inc
adc
xchg
push
sub
cmp
mov
cmpsb
cmpsl
movsl
mov
dec
shl
adc
cmp
or
lods
push
inc
cmp
or
sub
fidivrl
mov
test
cmp
mov
push
loopne
lods
push
lcall
dec
jne
cli
repnz
movsl
cltd
xchg
adc
test
std
inc
bound
push
pop
dec
add
cmp
iret
jb
or
cltd
jb
pop
arpl
fdivr
mov
stc
test
idivb
pop
cmp
adc
cmp
lret
in
xchg
and
jae
adc
add
inc
std
and
shrb
xchg
jnp
inc
dec
sub
cli
push
pop
into
imul
gs
inc
lahf
addr16
xchg
mov
arpl
jp
out
xor
lods
jg
stos
push
jb
mov
jle
push
pop
je
test
in
repz
xor
jbe
add
mov
icebp
inc
out
in
rcr
jne
cli
bswap
cwtl
or
sbb
imul
jbe,pt
lret
pop
jne
xchg
xor
xor
or
pop
sbbb
mov
xchg
cltd
push
popf
pusha
or
mov
mov
fnstsw
fs
jmp
imul
test
adc
jns
xor
xor
mov
xchg
js
dec
sub
add
dec
mov
inc
lret
lods
test
inc
addb
jns
jbe
xchg
cmp
xor
xor
pop
std
aad
sbb
xchg
sub
or
out
ret
and
cli
sbb
adc
cld
stc
inc
std
add
shll
ja
jb
icebp
mov
push
add
mov
cld
mov
dec
cs
mov
mov
mov
inc
daa
mov
loope
jbe
adc
jmp
ds
inc
push
dec
push
test
cwtl
sti
mov
gs
add
das
ficompl
jns
mov
std
das
or
mov
scas
sbbl
lea
ret
dec
pushf
popf
push
cwtl
pop
adc
shl
xchg
adcb
dec
popf
repz
lret
sbb
negb
popa
sbb
out
mov
inc
cs
mov
jg
adc
pop
mov
sub
inc
push
subb
sbb
adc
mov
sti
sti
inc
or
push
push
xchg
jbe
pop
xchg
lahf
imul
lea
int3
or
into
pop
or
mov
repz
mov
cmp
xor
mov
xor
mov
cmc
arpl
lods
mov
aaa
xchg
adc
push
cmc
je
lds
call
jle
in
mov
lds
aam
jb
imull
push
or
test
into
mov
enter
mov
cmp
sbb
clc
fildll
jecxz
jmp
lods
rcrb
incl
push
push
sbb
aam
push
iret
sti
insl
mov
mov
dec
sbb
pop
shll
dec
mov
lahf
push
loopne
call
dec
stc
shl
movsl
fidivrl
push
adc
stc
mov
mov
shrb
jp
inc
mov
test
in
and
adc
fnstsw
inc
stc
cmpsl
adc
fcoml
xlat
sbb
dec
mov
cmp
sub
xor
outsb
xchg
pop
enter
lret
jg
mulb
rclb
jmp
mov
mov
adc
ret
sahf
xchg
repnz
inc
dec
dec
sarl
lret
divb
lods
jle
sbb
lea
cmp
lock
aad
mov
div
xor
jmp
dec
lcall
sbb
sub
fdivrs
lret
push
in
lea
cs
mov
rorb
xchg
jns,pt
jns
stc
je
and
push
stos
and
push
inc
mov
mov
mov
xor
and
dec
dec
sar
out
out
mov
pop
mov
nop
dec
xor
lods
repz
jae
adc
inc
sub
lahf
adc
mov
or
rolb
arpl
repz
cmpsb
jno
lret
mov
scas
bound
add
add
inc
testb
ret
or
stos
jecxz
pusha
mov
push
imul
jl
aam
sbb
aad
jns
pop
add
adc
cmpsb
dec
aaa
jmp
and
mov
mov
or
cmp
into
jge
test
push
and
cwtl
cmpb
int3
jge
repnz
arpl
mov
sub
or
stos
iret
je
inc
sub
dec
imul
push
cwtl
push
jmp
push
lods
or
push
and
jge
sbb
dec
cld
in
jmp
pop
repz
or
xor
cltd
subl
sbbb
jne
lods
mov
jne
mov
and
and
xor
dec
push
and
ljmp
jecxz
icebp
push
xchg
xor
or
imul
sub
andl
dec
sbb
int3
xor
xlat
push
pusha
ljmp
popa
adc
insb
fwait
sub
addl
sti
xchg
xor
inc
scas
inc
adc
pusha
fstps
imul
mov
fists
pusha
movsb
mov
loop
xchg
loopne
inc
pop
nop
mov
emms
mov
imul
pop
jb
sbb
out
fbld
push
push
lds
arpl
mov
or
cmpb
jne
xchg
push
mov
or
jbe
inc
stos
dec
out
mov
mov
xchg
out
loope
or
push
push
sbb
lock
pop
sub
mov
pop
rolb
pop
test
js
aad
incb
mov
mov
mov
lret
inc
mov
inc
cmp
lret
and
out
jns
dec
mov
xor
xor
pop
sbb
pop
cmpsb
jg
pminub
pusha
ret
mov
mov
iret
notl
sbb
loop
nop
mov
fcoms
test
testl
fldl
jb
push
jl
jecxz
das
aam
cmpsb
clc
and
adc
subl
gs
push
outsl
cld
inc
push
jae
cmpsl
cmp
jo
cmp
test
fdivrl
repnz
xchg
push
addl
inc
xchg
jg
xchg
loop
sub
enter
repz
js
lock
test
inc
xchg
push
pop
push
add
and
inc
cmp
mov
js
test
mov
cmp
adc
lret
lret
insb
adc
imul
arpl
fisubs
inc
jbe
loop
mov
xor
aaa
mov
outsb
lods
dec
inc
or
mov
outsb
jnp
fldcw
divb
jns
in
dec
dec
rorb
mov
sub
jl
dec
mov
lods
aaa
add
fwait
ret
pushf
sub
cmp
ror
lods
mov
imul
cmpsl
add
ss
ss
fs
mov
dec
decl
pusha
xchg
adc
cwtl
ja
out
mov
mov
or
sub
aaa
or
or
mov
mov
jmp
xor
inc
movsl
out
jp
pop
dec
mov
push
push
sub
mov
sub
dec
rcl
sbb
xchg
sub
fbstp
mov
rorb
sub
imul
loopne
jnp
ja
adc
push
or
fldcw
out
loope
inc
cld
insl
arpl
pushf
mov
sub
ja
jne
sub
leave
pop
lods
cld
lods
dec
mov
xor
or
pop
add
bound
jge
loopne
inc
mov
mov
and
pop
pop
mov
inc
add
or
sbb
insb
dec
jne
pop
rorb
pop
stos
fimuls
cld
xchg
mov
pop
in
jae
pop
test
repnz
jl
push
pop
push
test
push
into
es
push
cmp
pop
jo
jg
push
dec
insl
shr
xor
dec
sbb
dec
push
jo
iret
lcall
pop
mov
sub
roll
add
movsb
dec
adc
out
pop
movsb
mov
adc
cwtl
popa
faddp
push
ret
enter
mov
scas
and
xchg
jbe
inc
mov
call
je
adc
stc
xor
nop
xor
xchg
sub
sbb
push
int3
cmp
mov
popf
xchg
cmp
inc
es
data16
jmp
and
push
jg
mov
cmp
loop
fstpt
sub
inc
sarl
xchg
dec
xor
insb
push
mov
int3
adc
js
test
pop
jae
jp
or
add
or
pusha
adc
enter
xchg
jg
pop
shl
scas
ds
les
cvtpi2ps
popa
dec
je
addr16
test
xchg
mov
movsb
sbb
hlt
pop
pop
sbb
cmc
pop
jo
dec
xchg
ret
iret
pop
or
out
mov
adcb
scas
mov
xchg
or
cmp
mov
dec
cltd
dec
addr16
lds
dec
jge
out
mov
jbe
push
xor
or
js
fidivrs
sbb
mov
jl
out
repz
mov
repz
ljmp
fs
sub
xchg
ds
out
mov
in
and
cmp
lea
ret
mov
or
xchg
lcall
fdivrl
or
push
xchg
adc
inc
cmp
pusha
xor
popa
sbb
jae
into
mov
popf
adc
add
mov
dec
xchg
jp
push
fildl
add
jbe
adc
cld
jne
push
divb
push
popa
mov
xlat
stos
jmp
hlt
rorb
jo
cmp
jae
add
mov
adc
js
xchg
inc
and
jmp
jnp
mov
and
xchg
repz
adc
sbb
mov
fcmovb
xor
adc
clc
dec
cmpsl
scas
mov
outsl
repz
push
xor
xchg
inc
testl
xchg
loopne
nop
cs
add
das
jno
mov
or
stc
adc
rcl
pop
cmpb
outsb
cld
in
leave
insl
xorb
test
inc
push
ret
pop
stos
das
mov
inc
mov
popa
xchg
cmpsb
fsubrs
sub
lock
mov
sub
xchg
js
xor
and
mov
mov
in
xchg
jp
test
mov
pop
fsubl
hlt
rcll
incl
xchg
sub
sbb
lcall
jb
mov
int
dec
adc
mul
mov
sbb
and
xor
xor
call
test
jmp
aad
pushf
in
pop
and
or
negb
in
cmc
inc
add
push
xor
cmpsb
pop
add
mov
mov
xchg
popa
mov
lahf
int
fmull
sahf
dec
movsl
test
pop
stos
xchg
iret
mov
insb
fisttps
sub
mov
inc
aaa
xchg
fisubl
test
xchg
loopne
outsl
imul
cmp
mov
fstpl
and
add
in
stc
mov
ljmp
or
inc
pop
xor
cmpsl
mov
aas
inc
int3
mov
mov
insb
pop
mov
mov
dec
aad
mov
and
aam
jo
incb
imul
es
xchg
cwtl
negl
mov
push
pop
out
ds
fcoml
xor
or
mov
add
mov
addr16
and
add
mov
daa
mov
dec
push
xchg
mov
jp
adc
or
inc
mov
cld
call
addr16
icebp
in
mov
sahf
fcoms
es
mov
and
popf
pop
lods
es
ljmp
mov
mov
push
daa
imul
adc
jns
jp
jl
stos
push
xor
out
lcall
cmp
and
sti
mov
jbe
pop
addb
bound
sub
pop
pop
mov
stos
dec
fwait
imul
mov
std
or
push
sti
test
sub
in
adc
loop
xchg
mov
mov
sbb
cmp
idivb
fsts
mov
lret
inc
std
cmc
jb
sahf
pop
mov
pop
xchg
mov
lret
enter
add
js
popf
je
in
inc
mov
xchg
inc
in
out
sar
pop
inc
mov
xor
or
sub
pusha
dec
xor
scas
xor
jb
inc
cmpsl
pop
data16
inc
lds
cmpsl
test
mov
clc
cmovl
clc
mov
mov
lret
shll
test
rcr
inc
xlat
hlt
leave
sub
pusha
lods
je
cmpsb
jbe
dec
sbb
mov
test
push
sbb
mov
adc
sub
jmp
mov
mov
pushf
into
adc
sbb
sbb
addl
aad
xchg
mov
hlt
mov
jge
hlt
jg
pop
cmp
cmpsl
adc
adc
jmp
es
faddp
sarb
jmp
rcrb
sub
cmp
cmp
mov
xor
jle
hlt
stos
shl
arpl
rcl
push
adc
mov
lret
and
enter
repz
push
pop
lret
mov
pop
pop
vpunpcklwd
xchg
and
nop
cld
testl
xor
mov
in
pop
dec
cmpl
jo
jge
sbb
movsl
stos
cmp
mov
sub
sub
lret
add
mov
dec
mov
push
xor
pop
and
js
add
lds
adc
les
sub
int
mov
xor
add
push
mov
inc
stc
jecxz
push
or
lock
into
xor
xor
ret
aam
gs
cmp
lock
ficompl
inc
adc
adc
or
dec
xor
push
xor
xor
cmpsl
les
jmp
fwait
mov
inc
mov
sub
lret
xor
cli
shll
vmovaps
scas
scas
jae
out
inc
jle
cmp
mov
pop
rcrl
das
push
cmp
push
insb
or
dec
mov
in
shll
mov
push
cmpsl
pop
mov
inc
enter
add
out
dec
cmp
lods
aas
push
inc
popl
mul
loope
sub
pop
dec
rol
arpl
stos
xchg
lds
pop
insb
out
ret
sbb
fnstsw
ss
dec
and
jp
xor
jne
fucomp
arpl
lret
lea
push
jmp
mov
ficomps
loope
or
pusha
cmp
lret
pushf
xchg
pop
mov
jl
jae
aas
sbb
pop
mov
pop
push
pop
mov
in
jmp
sti
or
fisubl
and
shrb
adc
sbb
xchg
cmp
push
cltd
sub
sbb
mov
ljmp
sub
sahf
add
add
mov
adc
mov
mov
notl
xor
orl
xor
orl
add
add
mov
cmp
jae
add
lea
mov
subl
mov
addl
xor
add
lea
movl
mov
mov
mov
cmp
jbe
xorl
addl
jmp
addl
or
mov
xor
andl
inc
andl
incl
add
movl
cmp
movl
jb
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
mov
xorl
sub
add
mov
xorl
xor
xorl
sub
addl
ror
sub
xor
xorl
mov
decl
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jb
mov
xor
mov
subl
sub
andl
xor
movl
cmp
movl
jne
add
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
movl
push
movl
cmpl
je
cmpl
jg
jmp
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
and
mov
push
mov
subl
xor
push
mov
add
addl
mov
mov
xorl
test
je
mov
adcl
mov
mov
mov
and
mov
xor
adcl
add
xorl
mov
mov
decl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
xor
movzbl
adc
mov
add
movl
cmpl
je
cmpl
jle
jmp
push
push
push
call
xor
add
dec
mov
jmp
mov
subl
mov
xor
negl
add
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
sub
lea
xor
sbbl
jmp
inc
arpl
and
xchg
sahf
pushf
ja
xlat
inc
lea
addl
mov
mov
stos
jno
mov
mov
cmp
cmp
dec
js
sbb
mov
add
jbe
daa
inc
adc
sub
cmp
and
mov
jg
sahf
cmp
xchg
xchg
mov
jae
out
lret
inc
pop
cld
stc
sub
data16
fsubs
out
mov
xchg
rcr
in
push
insl
and
lock
rorb
js
or
or
or
sahf
jp
dec
push
jne
mov
cmpsl
adc
testb
int
ror
dec
inc
pop
xchg
or
xchg
ss
add
push
or
insl
mov
xlat
xchg
int3
mov
fstpt
push
bound
mov
xor
push
xchg
popf
nop
add
mov
repz
ljmp
enter
jno
sub
lods
jne
out
push
jmp
aam
mov
cmp
in
mov
push
sbb
and
in
jle
sub
pushf
clc
incb
sbb
xchg
inc
jge
cwtl
mov
orb
push
lea
bound
shr
outsl
bound
fbstp
fimull
cmp
mov
mov
popf
stc
outsl
and
movsl
aad
stos
xchg
ss
dec
mov
mov
pop
js
aad
scas
test
roll
in
sbb
fistpll
cmpsb
js
mov
mov
pop
mov
dec
cmp
mov
fwait
cwtl
les
popa
dec
xchg
pop
push
lods
dec
out
add
bound
jge
sets
mov
xchg
pop
cmpsb
lret
ret
movsl
outsl
popa
pop
cmp
xor
inc
jnp
pop
ret
sbb
add
xor
xchg
xor
lahf
ficoms
call
jg
fstl
mov
cltd
pop
sbb
mov
ficompl
popa
lahf
in
movl
hlt
jl
or
mov
pushf
jmp
jns
cltd
mov
rorl
insl
cmp
cld
fwait
pop
loop
xchg
inc
fstpt
sbb
mov
dec
lea
push
pop
sub
sub
shrl
mov
loope
ss
lcall
adc
pop
lret
mov
xorl
pop
inc
push
or
pop
xchg
hlt
clc
mov
arpl
pop
in
cltd
addb
mov
jns
enter
in
xchg
psllw
and
xchg
xchg
inc
pop
sbb
add
or
leave
ret
out
push
mov
aaa
mov
and
add
push
mov
rorb
add
or
mov
mov
xchg
jmp
pushfw
fwait
push
xor
aad
adc
repz
int
lret
sahf
lock
jno
sub
daa
pop
pusha
insb
add
add
in
push
jne
adc
sub
push
popa
pop
aas
sub
push
fs
add
ss
dec
push
jle
sbb
push
xor
shll
ret
dec
sub
nop
das
fistl
mov
pop
out
mov
sbb
push
shr
addb
jl
aas
jns
mov
xor
or
sar
pop
dec
pushf
xchg
pusha
push
movsb
lods
loopne
movsl
push
dec
sbb
aam
pop
jg
xor
andb
add
mov
mov
mov
hlt
paddb
repz
fdivs
push
xor
shrl
out
in
and
int3
or
daa
outsl
mov
aas
mov
sbb
mov
enter
or
iret
repnz
js
outsb
ds
inc
jmp
jp
lds
sbb
dec
divb
adc
or
jno
loope
cli
inc
add
subb
jmp
iret
push
sbb
stos
xchg
sbb
xor
outsb
out
sub
cmc
ja
testl
subl
mov
data16
repnz
xchg
shll
add
ret
jmp
repz
fcomp
mov
insl
add
nop
aaa
cmp
xor
push
pop
mov
push
pop
sub
inc
dec
lcall
rcl
sub
xchg
mov
outsb
mov
rcl
jmp
scas
aaa
jl
and
inc
add
std
pop
inc
fsubr
in
testb
in
add
xor
fdivrl
pop
mov
inc
mov
lret
test
push
clc
pop
cmc
lds
push
jg
inc
outsl
mov
push
jmp
mov
cmp
push
mov
sti
pop
into
std
rclb
mov
mov
pusha
jns
fdiv
repnz
sbb
shlb
fmull
add
push
mov
xchg
cmp
sbb
mov
jecxz
xchg
pop
inc
jl
cmp
sub
in
into
fwait
hlt
scas
ror
xchg
cmpsb
jne
shrl
add
dec
xor
lds
pop
jbe
dec
sbb
inc
pop
aam
adc
cmpsb
push
mov
sbb
mov
cmp
sti
shlb
mov
mov
das
test
outsl
pop
icebp
jecxz
sub
push
mov
shrl
add
add
xchg
js
rep
mov
xor
add
das
lret
jge
add
lods
popa
dec
push
cmp
out
es
out
std
adc
add
iret
pop
sbb
movsl
arpl
jg
fwait
mov
inc
dec
movsl
push
add
or
adc
idivl
addr16
lahf
add
popa
pop
std
add
out
lea
push
xchg
dec
outsl
pop
test
imul
sbb
daa
mov
mov
cmc
ret
sarl
std
jge
scas
imul
add
je
jne
adc
rclb
dec
adc
shl
fwait
xor
push
mov
mov
sbb
stos
mov
pop
dec
leave
fdivrs
cwtl
push
test
push
scas
shrl
dec
in
movsl
mov
inc
sub
pop
leave
push
mov
test
sub
imul
push
or
jae
je
push
rcr
adc
pop
imul
fld
jmp
fwait
pop
inc
jbe
cmp
mov
xor
adc
add
je
or
pop
push
xchg
mov
sub
jecxz
loope
xor
je
shrb
sub
add
add
mov
cmp
lahf
pushf
sub
cmp
or
or
jge
jmp
jecxz
stos
add
jmp
ljmp
push
jg
push
pmaxub
call
cmp
pop
xchg
enter
jmp
mov
ljmp
or
repnz
shlb
xchg
push
adc
test
adc
cmpb
xchg
or
and
cmp
xchg
repnz
push
mov
inc
or
jno
in
sbb
xor
ja
pop
outsl
jae
or
mov
mov
inc
inc
push
or
std
pop
rclb
adc
sub
mov
test
mov
dec
fmuls
cs
add
daa
push
rcl
jge
fxch
push
jmp
xchg
pop
call
jle
fdivr
jle
dec
cli
pop
adc
sbb
outsb
inc
pop
sub
iret
mov
push
clc
xor
push
inc
jl
or
mov
ret
fcomps
mov
mov
nop
add
sahf
jecxz
xor
xchg
xchg
jbe
jno
push
cwtl
pop
push
cmpsb
or
sbb
inc
xchg
and
fistpl
imul
sub
cmp
idivl
push
repnz
std
xor
pop
pop
inc
jle
loop
ficoms
fucom
pop
dec
jge
enter
insl
xchg
leavew
adc
xorl
mov
inc
sahf
rorb
sahf
mov
or
cmp
dec
push
fwait
xor
inc
stos
mov
fadd
sbb
mov
test
mov
jmp
or
jmp
mov
fisubrl
ret
into
cmp
xor
sub
xor
sub
or
lods
xchg
stos
cmp
jl
pop
pop
rcrl
jbe
pop
repz
leave
scas
lcall
xchg
call
out
and
mov
pop
mov
cli
adc
jg
pusha
cli
jb
out
loop
insb
and
cmp
aam
test
callw
xchg
insb
inc
fwait
cmp
push
jae
jp
jecxz
das
mov
push
jp
inc
jle
mov
xchg
test
rcrb
mov
xchg
push
xor
clc
cmc
addr16
repz
sbb
arpl
jnp
xor
popf
adc
sub
mov
mov
push
iret
aad
xchg
add
lahf
cli
loopne
mov
nop
stos
xchg
lret
adc
ljmp
ds
xchg
leave
push
jecxz
add
ficomps
or
pop
dec
rclb
mov
movl
fwait
lahf
maskmovq
hlt
cwtl
add
clc
int
add
xchg
imul
cmp
mov
pop
outsl
ljmp
jo
pushf
jno
loopne
jecxz
js
sbb
inc
mov
adcb
int3
lret
or
jge
lcall
lock
fisttps
aad
pop
test
inc
or
fstpl
fidivs
mov
inc
cmp
lea
mov
cltd
negb
and
mov
mov
gs
and
inc
adc
rcrl
xlat
and
sahf
mov
add
out
imul
push
sbbb
icebp
and
mov
jp
fs
mov
xchg
pop
es
insb
sbb
call
and
in
mov
jecxz
inc
out
adc
inc
repnz
push
dec
pop
into
leave
mov
xor
popa
mov
in
mov
pop
pop
jne
mov
pop
cmp
outsl
sub
cmpsl
leave
sahf
filds
add
iret
dec
or
add
mov
pop
xor
dec
mov
mov
push
in
sbb
imul
adc
addr16
stc
insb
aas
pusha
fisubrl
jo
and
inc
into
mov
aaa
mov
xchg
jns
outsl
pop
outsb
call
gs
mov
stc
inc
xchg
push
insl
or
push
or
shrl
jnp
sbb
jbe
adc
sbb
pop
push
call
leave
xor
in
into
aam
pushf
dec
mov
mov
sub
out
daa
sbb
test
mov
or
cvtps2pi
in
jmp
pop
addl
addr16
das
inc
cwtl
xchg
out
ljmp
aam
out
sub
pop
mov
sub
idiv
sbb
rcr
inc
dec
mov
fldz
xchg
inc
pop
and
mov
pop
or
outsb
add
lret
fs
mov
add
lods
ret
pop
pushf
sahf
xchg
cs
xor
mov
pop
je
sbb
sti
ret
jne
ds
outsb
lret
push
sbb
sti
inc
cmp
ret
movsb
lret
dec
fidivrs
inc
inc
mov
mov
test
adc
pop
inc
inc
hlt
xchg
sbb
pop
adc
cmp
sar
add
arpl
pop
xorb
pop
roll
mov
lahf
jl
sbb
mov
lds
xor
jae
cmp
or
adc
jne
push
xchg
pushf
cwtl
jg
adc
inc
and
dec
push
fwait
push
mov
cmp
pushf
xchg
pop
popa
cwtl
out
lods
popf
adc
mov
and
popa
xchg
jae
push
outsb
mov
mov
cld
mov
aam
inc
fildl
xor
in
sbb
mov
les
in
and
aaa
xlat
aam
daa
mov
jle
std
cmp
sbb
push
inc
pop
pop
xchg
dec
sub
jp
xor
lcall
push
jecxz
jmp
jmp
stos
mov
shrb
and
orb
jb
sti
mov
cmp
in
dec
stos
int3
call
and
dec
test
add
std
dec
pop
xchg
mov
mov
in
xor
add
lods
movsb
sub
jo
or
mov
bound
leave
adc
sbb
pop
ret
ja
ds
push
pop
fnstsw
lods
xchg
mov
mov
dec
pushf
push
cs
mov
in
std
jo
xchg
mov
iret
pop
loope
xchg
stos
push
iret
jo
outsb
data16
aas
mov
loope
das
jno
adcl
adc
rorl
bound
scas
push
dec
addb
daa
push
enter
lods
cld
cmpb
bound
adc
xorb
mov
shrb
and
shrl
xchg
push
mov
cli
xchg
ret
rorb
lret
int3
into
movsb
hlt
lods
mov
inc
rorl
sbb
repnz
into
pop
add
mov
xchg
jne
and
sbb
sub
mov
cmpsl
inc
mov
mov
ljmp
cs
inc
adc
test
idivl
out
mov
adc
or
fists
pop
pop
jb
aaa
mov
adc
adc
hlt
xor
jge
jge
insb
adc
lods
dec
js
push
or
adcb
cmpsl
pushf
cmp
sbb
or
fildll
dec
push
cltd
dec
cli
mov
jl
fisttps
scas
adc
xchg
mov
aad
inc
cmc
aaa
shlb
iret
movsl
jnp
in
xchg
sbb
jno
or
or
mov
js,pt
in
test
sahf
daa
scas
mov
cmc
xlat
jno
sbb
and
cwtl
jns
sub
call
jnp
stc
and
or
pop
mov
ret
jbe
out
cli
pop
outsl
and
movl
mov
jle
xorb
lcall
add
xchg
jo
sarb
ffreep
test
mov
sub
rcl
xor
cltd
xor
mov
mov
mov
testb
cmpsb
and
js
cmp
nop
test
and
dec
jle
hlt
stos
pusha
mov
movsb
test
mov
sbb
sarb
and
lds
xor
jle
pop
inc
xchg
mov
sub
in
dec
or
clc
jle
fsubrs
inc
mov
xor
mov
push
jmp
scas
js
aam
cmpw
jmp
add
or
add
push
push
repnz
aam
mov
adc
adc
push
jo
add
and
lret
xor
stc
test
inc
inc
bts
push
jbe
jae
lahf
and
mov
lds
loope
jnp
add
addr16
jae
add
cli
pop
xor
push
das
stc
and
popa
ljmp
adc
fst
gs
jmp
in
xor
sbb
sti
cmp
inc
loopne
cmpsl
sub
inc
xchg
mov
lcall
push
xchg
or
jno
cmp
stos
popa
icebp
mov
mov
ja
outsl
push
shll
push
mov
sub
shll
std
sub
scas
cmp
mov
mov
fistpl
orl
and
aam
insl
add
jmp
push
or
roll
cld
test
inc
mov
inc
test
sbb
or
cli
mov
popf
mov
test
cmp
and
shr
sub
add
cmpsl
dec
lock
and
dec
in
out
xor
push
push
icebp
je
or
pop
xor
out
daa
cmp
and
and
arpl
in
insl
xchg
imul
push
rcr
sbb
mov
add
inc
fisubrs
cmp
fisttps
pop
mov
ds
out
mov
pop
push
xchg
and
sbb
mov
jg
pop
inc
inc
sahf
into
cmp
add
fisubrl
imul
nop
lahf
cmp
rcrl
jb
repnz
mov
jns
sub
int
stos
push
mov
insb
stc
push
jmp
mov
inc
or
shl
aad
std
data16
movsb
or
jae
jbe
js
dec
mov
pop
adc
ja
cmp
adc
vmovd
clc
mov
cmc
in
sub
push
mov
push
lds
add
push
adc
xor
ja
pop
in
mull
outsb
cmp
sahf
xchg
sub
dec
push
dec
or
lea
jb
or
ret
pop
test
adc
scas
pop
pop
dec
mov
repz
jmp
ja
sub
cmp
push
push
lods
jg
jmp
cld
icebp
je
pop
mov
inc
andl
xor
pop
fadds
or
sbb
hlt
shlb
push
out
push
sarl
rorb
add
fists
leave
out
rcl
xorb
xchg
xchg
adc
insl
mov
int3
leave
das
jmp
jle
xor
in
mov
adc
xchg
mov
dec
xchg
mov
sub
sahf
push
pop
pop
pushf
push
sub
in
jmp
int
jo
xchg
jo
cld
xlat
sti
aaa
sub
sub
daa
lcall
add
xchg
stos
in
cmp
mov
dec
je
sub
push
xchg
inc
pop
inc
xchg
je
test
out
pop
mov
push
pop
pop
ss
pushf
push
mov
and
mov
cmp
mov
arpl
dec
rcl
push
inc
sbb
mov
roll
inc
mov
fidivs
mov
push
inc
fdivr
and
jb
jns
outsb
js
cmp
pop
loopne
lea
cli
xor
xor
mov
mov
cmp
lcall
pusha
aaa
rolb
mov
and
es
or
out
sbb
mov
out
inc
mov
bound
xor
jae
pop
jle
test
mov
in
fcmovnu
or
dec
push
jae
jbe
xor
out
movsb
into
and
sarb
dec
dec
xor
xlat
jl
insl
xchg
push
xchg
xchg
mov
xlat
std
push
or
jl
subb
mov
nop
lcall
cmpsl
js
push
out
mov
rorb
jp
xchg
push
in
cmpb
mov
lahf
mov
inc
in
test
dec
add
mov
js
mov
cmpsl
push
pop
ret
push
scas
insb
fwait
pop
scas
inc
in
popf
loopne
in
scas
xor
push
nop
test
lret
xrelease
popa
push
add
xor
outsl
cmpsl
popa
out
or
mov
repz
mov
loopne
mov
cmp
cmp
sbb
mov
imul
ss
xor
jecxz
stos
and
xor
mov
sti
fcoms
imul
les
jmp
shrl
cmc
mov
sbb
push
jp
pop
jle
fcmovnbe
xor
sub
push
sbb
shrl
bound
xchg
dec
scas
setnp
lds
and
mov
loopne
call
add
xchg
xchg
jmp
fsubl
shr
xor
arpl
push
pop
sub
outsb
stos
es
lods
adc
ret
and
std
mov
adc
into
fsubl
lea
daa
adc
jmp
pop
adc
cltd
xor
mov
fwait
pop
fiaddl
andb
xor
jecxz
pop
in
pop
andl
cld
adc
sub
loop
sbbb
push
mov
fwait
mov
inc
fwait
ljmp
jno
sub
xor
pop
add
xchg
push
insl
xor
mov
xor
and
fsts
push
pop
xor
jl
jb
push
dec
jae
jnp
test
leave
and
sbb
pop
insb
shll
adcl
dec
pop
stos
xchg
je
cmpsl
push
mov
sbb
xchg
push
movsl
mov
push
es
hlt
clc
imul
int
xlat
pop
fs
aaa
push
jge
and
andb
mov
push
pop
out
mov
popf
add
fstpt
bound
arpl
mov
inc
mov
xchg
mov
in
lock
cmp
jno
lahf
pop
icebp
cmp
inc
inc
into
outsl
mov
inc
fsubrp
dec
cmp
dec
sbb
jnp
and
jg
movsl
int3
lds
and
rolb
ljmp
sahf
in
adc
push
xor
xor
lcall
repnz
pop
xor
rorb
or
jl
aad
push
sahf
sti
mov
push
sub
xor
xor
inc
or
inc
arpl
cmp
pop
xor
dec
cmp
sub
push
pusha
xchg
out
pop
jb
stc
sti
push
mov
sub
push
out
jns
mov
sahf
xorb
shrb
rcrl
and
rcrb
ficoml
fwait
dec
cmpb
sbb
daa
movsb
sbb
mov
aaa
sub
xchg
mov
mov
mov
dec
pop
sub
int
lods
in
je
mov
mov
sub
lods
adc
lcall
addr16
test
es
pusha
insl
and
cmc
movb
in
mov
loop
scas
popf
mov
cmp
push
loope
popl
arpl
mov
int3
fwait
mov
clc
inc
push
jmp
mov
pusha
sbb
subb
jp
and
daa
icebp
jecxz
adc
jbe
sahf
mov
sbb
push
lods
js
cmpsb
stos
dec
xor
lods
addr16
xor
out
sbb
cltd
cmp
xor
fisubl
cli
repnz
mov
jae
add
test
and
iret
std
test
loope,pt
out
int3
push
xor
or
in
sbb
shrb
sub
push
icebp
xor
jnp
jle
xor
addl
lds
imul
sub
cmpsl
fisttpll
push
xchg
cmp
adcl
jle
in
in
aas
inc
clc
int3
insb
sbb
negb
and
cld
mov
loope
ja
in
dec
cli
clc
jp
push
inc
and
inc
mov
fwait
stos
es
jno
rol
fdivs
popf
mov
lods
test
loope
xor
add
imul
test
mov
addr16
stc
push
push
jbe
add
andl
sbb
shrl
in
cmpsb
inc
decb
inc
mov
mov
int
insl
or
xchg
scas
in
mov
stos
sbb
cmpb
dec
inc
in
sti
dec
push
xchg
movsb
mov
gs
mov
popa
xor
push
mov
fxam
lods
sbb
or
data16
mov
and
loope
xor
mov
popf
push
aam
mov
into
cmp
or
out
lds
or
movsl
jge
push
fsubs
pusha
in
xor
ljmp
sbb
std
lods
cltd
mov
mov
cmc
or
dec
arpl
cli
sbb
sub
bound
repnz
cli
movsb
or
jl,pn
mov
cli
outsl
fisttpll
scas
mov
pop
mov
dec
push
xchg
notl
mov
sub
mov
push
mov
and
or
negb
xor
mov
test
leave
pop
mov
pop
mov
mov
loop
out
or
inc
nop
fwait
int
stc
xchg
ss
outsb
add
dec
push
dec
shr
pop
enter
enter
pop
pop
js
shrb
repz
or
pop
popa
repnz
adc
or
pop
xor
test
add
ljmp
sub
stos
xorl
mov
push
add
or
mov
loope
jmp
pop
fildl
sub
imul
sub
jmp
rorl
insl
inc
mov
inc
and
xchg
jb
dec
mov
insl
push
fucomi
push
adc
inc
mov
jl
cmc
scas
arpl
cmp
mov
push
pushf
sbb
mov
les
sbb
stos
jg
mov
nop
out
lcall
imul
xor
lcall
clc
fs
bound
jno
shrl
push
jmp
add
mov
mov
in
sbb
cmpsl
push
dec
in
jbe
and
mov
cmpsb
mov
or
mov
lahf
jge
lcall
dec
adc
fs
testb
mov
sub
insb
movsl
fcmovbe
xchg
adc
nop
xchg
inc
xchg
mov
fimull
or
xchg
lea
push
cmp
sbb
inc
inc
fldenv
test
pusha
fdivrs
scas
mov
aaa
insb
fisttpl
rcrb
and
cmp
insb
dec
ljmp
pop
or
xor
std
ljmp
xor
fdecstp
dec
in
sbb
lcall
popf
leave
ss
push
aad
sbb
mov
je
and
mov
ljmp
jl
cld
mov
mov
jne
push
adc
and
mov
fimuls
mov
test
cmp
aam
movsl
in
jb
int3
push
lods
hlt
inc
adc
mov
adc
mov
daa
mov
inc
push
sbb
loopne
js
scas
mov
xor
mov
test
je
xchg
in
adc
outsb
push
dec
nop
das
and
ljmp
ret
mov
mov
adc
add
mov
xchg
mov
cli
xchg
inc
adc
out
in
test
lods
cmp
fstpt
pop
jle
into
dec
std
rcrl
lods
pop
popf
jl
pop
jae
dec
out
lods
jnp
gs
mov
or
xor
xchg
push
mov
or
scas
mov
gs
iret
jbe
sarl
jge
push
out
je
std
mov
jo
lcallw
dec
mov
pusha
and
and
movsb
in
clc
rorl
arpl
xchg
in
pop
xor
movsl
jb
fld
andb
es
into
in
bound
in
jb
pop
xchg
popa
aad
mov
pusha
or
pop
sub
pop
adc
test
fdivrs
xchg
mov
sahf
pushl
std
rcll
pop
mov
subl
adc
xlat
add
ret
jne
inc
sahf
xlat
xchg
xchg
push
mov
adc
roll
hlt
lods
cld
out
add
cmpsl
jb
xchg
xor
pop
enter
out
sub
dec
xor
inc
out
pop
xchg
xor
jp
les
stos
inc
fistl
push
sbb
repz
lds
sbb
jae
sub
adc
adc
jo
xor
iret
mov
clc
mov
pop
mov
push
mov
arpl
outsb
mov
mov
dec
mov
cmp
or
sub
pop
jecxz
jecxz
push
adcb
mov
rclb
mov
rclb
out
ljmp
push
push
and
xchg
fs
fwait
and
sbb
leave
enter
aad
push
stos
ss
scas
ja
sbb
mov
mull
in
push
cmp
mov
pushf
negb
je
jmp
adc
mov
or
inc
cmc
or
push
in
daa
bound
xchg
xchg
add
fstpt
push
adc
jmp
mov
sbb
outsl
jmp
lods
xchg
sub
nop
int
add
movsl
jmp
jbe
orl
cs
lret
popl
aad
arpl
mov
cmp
cmpsl
and
ja
dec
js
pusha
sbb
leave
fiadds
dec
mov
cmc
out
leave
mov
lods
push
inc
mov
mov
imul
pop
gs
lret
mov
mov
bound
inc
mov
jge
insl
xor
xchg
pop
lods
mov
or
mov
addl
mov
push
out
nop
imul
push
bound
fdivs
test
sbb
xor
ljmp
nop
push
aaa
lods
inc
push
jmp
sbb
imull
dec
cli
push
in
in
pop
push
and
filds
fiaddl
aas
fisttpl
into
jae
mov
xor
shll
nop
rcrb
sti
jl
int
mov
orb
imul
pop
mov
jl
je
into
loop
sti
sub
mov
daa
pop
fs
fmuls
inc
mov
jo
and
pusha
mov
inc
in
mov
dec
popf
lods
lahf
jl
in
rorb
andb
lods
jo
xchg
aas
dec
xchg
xchg
and
and
pop
mov
rcrl
out
ficoms
icebp
lret
xchg
cmp
mov
ret
xor
pop
insl
lahf
add
pusha
mov
inc
add
in
and
jl
push
dec
or
popa
pop
icebp
lods
in
cmp
xchg
sub
cmp
roll
ds
iret
ds
sub
xor
push
stos
pop
bswap
push
divb
imul
mov
imul
mov
test
sub
and
sub
push
sti
shrb
dec
stos
xor
rcrb
jl
pop
lea
mov
test
inc
jecxz
cmc
xlat
pop
inc
out
ror
dec
ds
push
mov
xor
arpl
push
sbbl
movsb
iret
into
mov
add
pop
mov
pop
psadbw
cmp
pop
sub
mov
jp
or
inc
or
sbb
sbb
out
pop
daa
mov
push
mov
push
or
push
mov
lcall
xor
jmpw
jp
shl
pop
mov
sub
jle
call
mov
mov
push
cmp
xchg
fcoml
or
cwtl
sbb
sahf
or
mov
sti
outsb
iret
jnp
ret
mov
mov
outsl
loope,pt
jns
icebp
push
add
loop
aaa
push
xchg
lea
cmp
jle
sbb
sbb
mov
dec
ret
jo
xchg
sub
adc
arpl
adc
add
cld
int
adcl
fstpl
mov
or
push
into
and
icebp
mov
cmp
fmuls
enter
out
xor
and
jp
aaa
loopne
sub
sub
mov
roll
loop
sbb
clc
push
fstps
cmp
lcall
lcall
pop
or
xchg
and
iret
sbb
push
xchg
xor
pusha
ljmp
and
mov
mov
rcrb
mov
loopne
out
fstps
shrb
in
push
jb
push
popf
imul
imul
imul
adc
imul
lret
cltd
popf
inc
loope
adc
aam
dec
mov
daa
insl
cmp
sub
cmp
adc
sub
cmc
cmp
iret
out
das
scas
shl
aas
cmp
aad
cltd
fcomps
mov
adc
jb
test
dec
mov
movb
mov
mull
xchg
mulps
xchg
in
or
pop
push
push
cmp
mov
add
inc
adc
sbb
push
mov
xchg
mov
xchg
push
lcall
and
pushf
shr
push
dec
xchg
mov
enter
ds
pop
dec
lea
nop
adc
fildll
mov
test
ja
and
test
xor
xchg
loope
cmpsl
mov
cmp
xor
jecxz
orl
outsb
pushf
test
icebp
xlat
mov
mov
jg
mov
add
test
addl
inc
add
add
enter
and
cld
andl
xor
addl
add
cmp
movl
jne
xorl
pushl
call
and
mov
xor
xor
mov
sub
or
mov
sbb
mov
xorl
xor
add
movl
cmp
movl
je
orl
pushl
notl
pushl
sbbl
call
mov
or
mov
mov
xor
andl
add
cmp
movl
je
xor
mov
mov
orl
mov
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
add
movzbl
adc
mov
adc
mov
sbb
jmp
test
pop
sahf
andl
mov
lock
divb
sub
out
jae
cld
fxch
push
dec
lods
fstl
push
xchg
jmp
or
fistpll
out
xor
pop
xor
out
jmp
xchg
sub
cmpsb
in
addr16
xor
mov
out
cmp
inc
mov
es
fildll
push
inc
ds
sbbb
dec
insb
or
in
test
sub
ret
cmc
dec
fsubrs
cld
fwait
sub
subl
movsl
xor
hlt
fbstp
sbbl
jae
push
int
arpl
mov
out
movsl
fldl
and
addr16
jl
popf
add
popf
cmp
jmp
pop
mov
lds
out
push
ficoml
imul
popa
inc
sub
imul
xchg
ret
mov
fbstp
stc
outsb
jae
repz
stos
ret
pop
push
pop
xor
je
mov
dec
and
ficoms
loopne
xchg
push
dec
stc
add
loopne
cmp
jbe
xor
add
das
scas
fnsave
cmp
mov
icebp
inc
lret
insb
adc
push
std
hlt
and
push
lret
subl
cmp
lret
movsb
clc
sarl
mov
enter
loop
jne
pop
adc
stos
lret
decl
out
clc
aaa
loop
jnp
lds
dec
add
jecxz
or
outsl
push
das
mov
movsl
mov
and
push
push
in
mov
gs
subl
pop
or
push
cmp
jle
cmpsb
decb
fsubl
cmp
or
inc
pop
mov
or
jae
call
in
xchg
ret
outsl
cld
outsl
clc
icebp
dec
jo
inc
push
pushl
lds
sbb
xor
mov
lret
jp
sbb
jns
mov
and
mov
jl
pop
fidivs
mov
mov
mov
std
add
push
pop
andl
outsb
push
sbb
nop
and
pop
push
add
mov
mov
cmp
mov
push
xchg
pushf
jl
test
out
stc
xor
test
pop
ret
mov
or
cmpsl
mov
sbb
sub
mov
dec
rcrl
jl
pop
loopne
in
lods
out
imul
xchg
xor
out
les
and
push
mov
dec
rorb
mov
ret
adc
sahf
or
daa
cmpl
and
mov
aam
and
jle
or
loop
mov
xchg
stos
neg
inc
jl
lahf
cltd
clc
lods
jl
rcr
add
push
ds
not
ret
push
outsl
sti
insl
sub
enter
insb
insl
mov
adc
repnz
jg
mov
sub
push
pushf
fadds
in
mov
and
cli
and
pop
xor
cmp
ss
push
mov
add
data16
in
fadds
and
fmull
adc
aas
dec
fsubrs
mov
sub
xchg
out
bound
xchg
xor
add
sub
push
test
frstor
test
cmp
shrb
imul
testl
ss
cs
nop
jne
ja
sub
je
sbb
pop
jns
stos
pusha
mov
mov
xor
addr16
jb
leave
inc
aas
cmc
push
jg
out
es
mov
jmp
in
mov
in
sbb
push
lret
imul
mov
outsb
mov
cmp
push
pop
in
add
xchg
daa
add
sbb
and
popa
sub
ss
inc
test
sbb
and
adc
clc
ja
daa
cwtl
add
mov
call
fildll
xchg
std
aam
pop
ret
mov
or
xchg
mov
movsl
adc
mov
add
add
cmpsb
jo
mov
in
hlt
mul
cmp
pop
pop
aam
sti
xchg
mov
mov
cmp
jno
sahf
movsl
outsl
addr16
sub
ds
cld
sub
xor
repnz
jle
sti
out
adc
jp
cmpsb
std
mov
xor
pop
loopne
clc
dec
push
lods
ret
and
push
sbb
pop
add
xchg
out
inc
movsl
or
rclb
mov
xchg
cmpsl
and
arpl
xor
pop
pop
adc
xor
aas
fisttpll
nop
sahf
and
mov
push
inc
add
nop
aam
sbb
sbb
out
daa
leave
sahf
mov
es
xchg
cld
lcall
ret
xor
mov
fists
dec
or
shll
jno
notb
cs
mov
and
dec
je
push
cwtl
mov
mov
shrb
fistpll
out
push
fstl
or
cmp
clc
add
je
add
mov
adc
xchg
pop
ret
mov
cltd
dec
cltd
jecxz
arpl
mov
shr
push
stos
orl
lods
lods
push
jecxz
or
divb
sbb
mov
ja
or
movsb
sbb
cmpsb
cmp
jo
hlt
test
subb
les
ret
fwait
ret
fwait
fcoml
xorl
fs
mov
adc
mov
iret
jmp
dec
dec
fisttpl
cwtl
jmp
sub
sub
mov
pop
cmpsb
sbb
cltd
out
cs
inc
cli
sahf
gs
test
arpl
mov
inc
mov
test
mov
xchg
push
push
mov
dec
xchg
test
mov
add
divb
mov
sbb
das
jmp
int
cmc
pop
lds
mov
jmp
mov
mov
dec
cld
dec
mov
pop
jge
enter
lods
push
jo
inc
ljmp
xchg
cmpsb
movsb
push
repnz
cmp
adc
xchg
mov
out
nop
jecxz
pop
int3
popf
fildl
cli
sub
pop
bound
or
mov
jge
mov
lahf
mov
mov
adc
cmp
in
jo
jmp
mov
andb
adc
cmpsl
xlat
js
push
pop
adc
pop
fsubr
clc
cmp
inc
sub
enter
and
fs
mov
outsb
jbe
imul
mov
or
inc
sbbl
pop
push
stc
xchg
xchg
fisttpl
pop
ds
fs
cs
addb
cmp
dec
cli
jne
add
je
xor
pop
ljmp
stos
popf
jns
jg
es
idivb
xor
cmpsb
ret
fildll
movsb
mov
loope
cmp
and
jp
xchg
add
lret
lcall
lea
ljmp
push
mov
shl
lahf
sbb
sub
jle
rcll
test
push
cwtl
mov
int3
xor
pop
movsl
in
jge
leave
orl
shlb
mov
in
push
xor
rcrb
xchg
pop
jecxz
out
imul
dec
fsub
mov
ficompl
inc
cmp
pop
call
xchg
loope
and
in
inc
pop
mov
cld
or
mov
push
xor
je
sbb
inc
mov
jecxz
cmp
inc
mov
into
andl
imul
push
test
pop
push
xchg
das
xchg
mov
mov
cs
mov
and
and
movsb
and
scas
popa
movsl
ds
or
sub
inc
add
xor
add
push
adc
dec
cmp
jbe
mov
fnstcw
and
call
leave
test
xor
push
dec
clc
sub
cmp
jmp
push
xor
push
ret
arpl
fcompl
or
mov
iret
adc
lds
roll
out
dec
push
loopne
xor
or
mov
cs
sbbb
stos
inc
lahf
add
push
sbb
scas
lahf
shll
sub
ds
les
jmp
mov
dec
jne
sub
lods
or
xor
pop
push
sbb
push
sub
sbb
or
fistpll
jge
movsl
scas
insl
mov
xchg
mov
sbb
fistl
and
out
test
repnz
and
repz
mov
sub
lret
loop
mov
rcrl
lods
push
icebp
push
and
popa
dec
bound
in
xor
cli
push
sahf
popa
popa
lcall
adc
rolb
dec
dec
pop
mov
adc
cld
pop
insl
test
xor
fstl
shlb
jns
loope
shrb
movsb
sbb
inc
pop
mov
jns
xchg
jecxz
sbbb
cltd
aas
out
xchg
cltd
or
sbb
xchg
out
addr16
pop
xchg
shl
cmp
fpatan
jb
push
stos
inc
loop
jl
adc
jne
in
in
cmp
xchg
aam
bound
mov
mov
adc
xchg
inc
out
push
fistps
orl
cltd
pop
aaa
dec
sub
sbb
sbb
leave
dec
push
inc
test
and
outsb
cmp
and
adc
xchg
xchg
ja
popa
adc
xchg
push
push
adc
xorb
inc
sub
jnp
cmp
mov
lret
jne
sub
inc
popa
in
scas
stc
xchg
test
les
fs
inc
scas
fmuls
sbb
gs
stc
add
scas
jmp
imul
aad
sub
pop
push
jle
push
pop
daa
cwtl
sub
mov
in
sbb
mov
das
xchg
rolb
inc
fstps
insl
dec
in
sbb
pop
adc
lret
xor
jl
push
lock
dec
mov
inc
or
push
repz
cmp
xchg
cmp
fwait
scas
xor
iret
dec
mov
mov
xor
mov
push
icebp
nop
cld
sbb
xchg
lret
add
stos
jl
test
fmul
pop
or
frstor
cwtl
jg
mov
leave
and
das
jne
sub
shlb
movl
dec
push
cmpl
adc
daa
shl
mov
nop
mov
mov
test
das
mov
rol
das
gs
notb
xor
or
loop
pop
mov
iret
inc
lret
xorl
pop
sbb
popf
cmc
out
cmp
dec
jle
xor
js
mov
sbb
xchg
es
pop
repz
sbb
xchg
mov
fistps
jns
or
test
add
inc
pop
jns
jbe
xchg
push
bound
je
ds
mov
mov
adc
dec
inc
fwait
pop
xchg
outsb
add
dec
jp
push
inc
stos
sti
mov
dec
ror
mov
fdiv
and
and
jbe
mov
adc
pop
sub
imul
pop
int
mov
cmp
push
mov
mov
and
inc
pushf
jl
sbb
cmpsl
push
mov
sahf
stos
mov
mov
fnstcw
mov
sahf
or
shrb
in
js
aaa
inc
mov
sub
inc
xchg
mov
jne
xchg
xchg
mov
in
jl
inc
out
es
dec
xorl
inc
pop
sbb
testb
std
mov
inc
pop
sbb
adc
outsb
jo
stos
dec
sub
lcall
xlat
into
inc
jns
mov
dec
sub
lea
inc
add
sbb
or
andb
sti
xchg
cwtl
xchg
mov
mov
adc
push
dec
push
jbe
jne
mov
cmpsb
insb
mov
stos
sub
adc
and
push
lds
mov
or
insb
mov
cmpsl
push
imul
and
xor
stos
dec
xorb
xchg
lea
inc
lret
pop
mov
mov
jns
xor
in
imul
pop
fwait
test
aas
mov
cmpsb
sti
fs
adc
pop
xor
lcall
movsl
jp
sbb
inc
stos
scas
dec
in
adc
xor
sub
repz
mov
sub
ds
scas
pop
or
out
push
sub
adc
out
cmp
cmp
cs
rorl
fisttpll
push
add
int
sub
loop
dec
pop
aad
push
pop
clc
mov
test
mov
addb
and
mov
mov
mov
and
jb
test
ret
push
sbb
andl
xor
add
add
and
shr
icebp
nop
repnz
std
xor
inc
sub
bnd
dec
inc
fidivrs
test
inc
or
sub
adc
add
sub
imul
jmp
mov
inc
xchg
xor
mov
lock
push
xor
cmpsb
aam
push
lock
jno
or
cmpsl
lods
aam
aaa
xchg
add
xor
pop
pop
or
movsb
loopne
sahf
mov
add
pop
add
xchg
jecxz
xor
sbb
xor
mov
lods
in
xchg
int
mov
out
xor
cmc
pop
aam
push
pop
cmp
loop
jo
fistl
push
imul
mov
test
aaa
fists
jnp
adc
and
lea
adc
jns
lcall
and
stos
dec
das
cmpb
js
jnp
cmp
add
fs
test
test
cmp
jnp
sub
es
and
test
aaa
pop
xor
mov
jb
inc
push
aaa
mov
xchg
dec
jno
aaa
mov
leave
js
mov
adc
sub
insl
xchg
addb
rcr
adc
movsl
fs
sbb
push
sbb
xor
outsl
jecxz
mov
mov
mov
sbb
push
adc
sub
cmp
xchg
sub
inc
pushl
adc
lds
xchg
dec
cmp
cltd
cmpsb
roll
jo
test
mov
jnp
jno
or
xor
add
add
pop
sar
ljmp
lret
push
in
push
push
push
iret
ret
repnz
popa
pop
pop
mull
loopne
cli
imul
enter
xor
inc
cmp
loop
repnz
xchg
lods
iret
icebp
mov
je
js
outsb
imul
jae
nop
pop
push
fs
mov
pop
xchg
mov
mov
jecxz
and
ljmp
cmp
mov
or
lds
jo
repnz
fdivrs
pushf
les
cs
dec
stc
and
aaa
jo
dec
fdivrl
xchg
lea
mov
add
stos
lods
sbb
imul
jmp
mov
sub
push
ss
aaa
out
clc
xchg
lock
sbb
loope
push
repz
dec
push
aad
ret
adc
add
mov
popf
and
out
sub
cwtl
sahf
adc
in
or
mov
in
lock
xchg
cmp
cmp
outsb
inc
sbb
cs
inc
icebp
out
decb
jb
popf
pop
cmpsl
jmp
add
mov
scas
sub
lea
pop
jno
mov
mov
push
fmull
daa
js
pop
ficompl
jno
jge
popf
orl
shll
stos
cs
mov
test
push
cmp
push
or
rcrl
push
ficoms
insl
xor
dec
div
jle
mov
xchg
mov
jbe
cmc
pushf
mov
cs
cwtl
outsb
mov
dec
outsb
out
test
pop
stos
inc
int3
adc
sbb
push
adc
xlat
daa
dec
pop
adc
movsb
or
mov
pop
mov
in
xchg
mov
mov
add
inc
lea
dec
stos
push
or
bound
rcll
stos
inc
mov
add
and
sub
jp
pop
mov
push
fdivs
in
gs
cli
jl
mov
inc
fcomip
cmp
into
jge
sbb
arpl
xchg
xlat
pop
mov
or
repz
inc
sbb
mov
fwait
stos
aaa
mov
mov
mov
cmc
cmp
xor
movsb
push
mov
shll
push
pop
test
iret
daa
sbb
mov
js
into
lds
mov
mov
shll
inc
insb
leave
ljmp
jae
jbe
andl
pushf
or
xchg
cmpl
rol
scas
and
push
mov
jg
cli
shlb
cmpsb
add
sub
stos
outsl
mov
shrb
add
jbe
inc
arpl
fldenv
icebp
or
cli
sub
push
test
mov
inc
repz
imul
mov
push
and
stos
cmp
movl
mov
dec
push
js
mov
popf
jmp
mov
into
arpl
daa
clc
repz
xchg
insb
and
pop
out
jle
lods
xor
push
test
test
repz
cmpsl
push
add
dec
imul
test
lock
out
add
mov
xchg
scas
mov
sahf
nop
stos
jmp
mov
mov
inc
iret
jae
aad
xlat
add
xor
inc
xchg
icebp
push
or
xchg
cmp
out
rclb
xchg
bound
repz
jge
dec
cld
fwait
jno
sahf
push
jg
call
jnp
sbb
adc
dec
mov
inc
in
mov
popl
out
dec
es
mov
xorl
mov
sub
je
add
cmp
std
push
in
lods
adcl
jne
mov
mov
lea
inc
inc
jl
inc
test
sahf
xchg
dec
movsb
and
ret
sbb
fs
dec
jnp
das
fcomps
mov
jae
arpl
fcmovnbe
call
xchg
fldl
ljmp
dec
cmpsl
sbb
add
lods
sub
mov
sahf
arpl
stos
jge
xchg
cmp
mov
xchg
lahf
push
loope
xchg
movswl
dec
add
stos
jnp
sub
add
or
mov
mov
inc
mov
or
aaa
sub
mov
mov
mov
or
dec
andl
sti
icebp
repz
and
jo
mov
repz
xchg
or
int
inc
sub
ljmp
pop
cmpsb
adc
inc
cmp
sub
and
std
test
out
idivb
lret
push
mov
test
fisubl
mov
and
iret
xor
lret
inc
inc
stc
cmpsl
jae
enter
outsb
into
ret
jg
shll
cmc
cmpsl
cmp
push
es
inc
movsl
ja
and
or
pusha
push
out
call
pop
rclb
pusha
ret
push
gs
sahf
sub
sbb
sbb
fldt
and
or
rcrb
insb
shl
shrb
test
pop
lret
jbe
add
jns
jae
mov
sub
add
xchg
xchg
negl
orb
or
loop
ret
arpl
mov
jns
fcoml
jae
mov
stos
addr16
fxch
push
aad
mov
xchg
sbb
into
lcall
xchg
mov
and
sti
int3
shr
dec
sbb
ret
std
xchg
dec
call
adc
dec
fcmovne
cmp
jp
pop
dec
mov
shll
scas
repnz
in
das
in
xlat
pushf
mov
aad
cmp
scas
test
xchg
nop
in
pop
adc
outsl
cmp
sub
arpl
movsl
push
jae
inc
and
adc
xchg
mov
in
adc
in
lahf
push
mov
xchg
sbb
pushf
test
test
and
dec
jbe
mov
and
ret
aaa
rorl
sbb
pop
int3
sub
arpl
push
call
cmp
jle
mov
mov
push
lret
rcrl
cmpsb
jno
loopne
ret
jo
imull
sub
mov
pop
inc
ss
testl
mov
shrl
pop
push
cmpsb
mov
sbb
jle
test
add
ret
lahf
sbb
push
mov
inc
adc
cltd
or
lds
test
and
dec
outsb
fdivs
pop
sbb
test
ja
sti
je
push
pop
push
cmp
jo
rol
push
stc
cmp
sbb
adc
imulb
mov
int
or
in
sahf
insl
repz
push
jge
leave
dec
fsubrl
scas
testl
divps
jmp
je
subps
sar
add
iret
sti
insl
xchg
push
dec
addl
sub
sub
fildl
pop
dec
call
je
call
xchg
push
mov
lds
sbb
fsubrp
dec
inc
sbb
fistps
outsl
cmp
mov
inc
out
movsb
loope
sbb
mov
inc
and
lods
sti
sbb
sbb
sbb
push
aaa
cmp
out
jge
fs
in
test
fsubl
mov
pusha
nop
rorb
push
dec
or
repnz
cmp
mov
fucomi
push
pop
pop
ficompl
sub
cmp
insb
gs
push
mov
sub
pop
lahf
or
out
push
ret
cmp
dec
ret
ss
icebp
ljmp
jb
jne
xor
cmp
lret
inc
popa
lods
and
push
pop
and
fnstsw
subb
push
xchg
sbb
add
nop
ret
sbb
ret
insl
das
lcall
adc
out
dec
enter
filds
cmp
mov
mulb
sbb
sbb
les
in
pop
sub
mov
in
inc
in
loope
pop
icebp
push
imul
xchg
fs
in
scas
mov
repz
cltd
adc
stos
jl
pop
outsb
daa
xor
or
xor
jno
test
push
jb
aas
cmp
xchg
test
and
add
fidivrs
sub
mov
imul
rclb
add
xchg
scas
and
cmp
imul
mov
jg
aas
mov
leave
movsb
xchg
adc
dec
lret
push
es
sbb
in
das
ficompl
enter
test
xlat
in
xchg
out
sbb
data16
jmp
and
push
test
mov
ficoml
sub
adc
xor
xchg
std
into
pop
outsb
dec
aas
inc
out
stc
lods
push
popa
ss
je
mov
test
or
pop
and
iret
sti
mov
push
pop
adc
pop
fnstenv
pop
out
addr16
scas
push
jge
push
push
xor
cmc
push
mov
addr16
in
dec
fdivrl
add
dec
pop
push
adc
fcomp
shlb
jne
loop
fildll
shr
push
jo
sbb
lret
jae
dec
aam
sub
bnd
cmp
sbb
ficomps
stos
cmpsl
mov
jae
into
inc
imul
pop
jp
inc
xlat
mov
mov
leave
or
xchg
adcb
adc
out
test
mov
mov
lahf
gs
jbe
sbbb
push
jne
lahf
xchg
int
jmp
jno
mov
xchg
and
push
cltd
pop
sbb
push
cmpsl
add
pop
push
adc
popf
pop
enter
fidivrl
std
dec
nop
insl
jmp
stc
popf
repz
jo
cmpsl
pop
xchg
sahf
fwait
hlt
gs
lret
push
lock
shr
test
out
shl
push
adc
insb
loopne
stc
mov
add
sub
es
fwait
push
fildl
cli
mov
fcoms
mov
adc
mov
jg
sti
test
fldl
xchg
or
xlat
push
imul
loop
jmp
scas
xor
xor
mov
or
cmp
lock
ss
imul
jle
fimull
testl
pusha
push
xor
dec
jns
sub
in
jbe
adc
jb
jecxz
in
adc
cs
add
mov
clc
mov
mov
cmpsl
add
sarb
dec
leave
dec
jo
in
out
lock
pop
stc
adc
outsb
pop
mov
sub
inc
xor
xchg
sub
ja
mov
lods
or
jge
mov
test
imul
mov
lds
fcmove
add
sub
int
mov
and
push
add
pop
loop
test
out
enter
mov
push
xchg
xlat
push
jge
outsb
cmpb
sbb
inc
dec
adc
xor
lods
add
data16
inc
fwait
jne
fwait
push
in
cmp
dec
dec
cmp
inc
mov
cli
ja
sti
sti
fistl
mov
xchg
fnsave
aam
es
jl
mov
pop
mov
and
cmp
ror
pusha
dec
outsl
and
mov
pop
jp
jo
popf
pop
rcrl
in
cmc
mov
jl
loop
mov
in
mov
cmp
mov
cltd
mov
pop
in
adc
in
ja
ret
test
xor
inc
fistps
test
aas
xor
sbb
and
inc
lret
mov
out
pop
push
lds
bound
in
xor
xor
xchg
scas
jne
and
adc
mov
mov
divl
loopne
add
mov
das
sub
les
mov
leave
arpl
lahf
and
ljmp
sub
mov
jno
jne
push
iret
adc
ds
popf
push
mov
stc
adc
mov
repnz
inc
add
pop
in
repz
and
pop
push
enter
repz
jb
pop
adc
add
sub
cmp
or
sbb
mov
lret
stc
inc
mov
dec
rol
inc
cmpsl
shll
mov
fwait
mov
cld
fnstcw
pop
xchg
mov
jg
mov
loope
and
push
xor
arpl
test
out
adc
cwtl
dec
fdivl
imul
insb
jo
cltd
mov
sbb
dec
push
adc
lret
sbb
push
cwtl
sbb
mov
and
je
add
jecxz
xor
loop
xchg
mov
cmp
push
push
dec
add
out
mov
cmpsl
outsl
add
mov
mov
xchg
ja,pn
inc
vpsubd
pop
and
cmp
insl
jb
push
std
jne
fdivs
cltd
mov
data16
adc
or
pop
dec
jne
adc
out
jp
inc
jnp
fldl
cmp
push
mov
pop
add
mov
mov
test
dec
mov
xor
faddl
xchg
xchg
jge
rcrb
dec
push
mov
dec
mov
cmp
lret
jmp
sbb
push
in
fsubr
mov
sbb
mov
mov
sbb
test
nop
addl
jge
ret
inc
iret
movsb
packsswb
mov
add
lea
sbb
mov
fisubs
mov
cmp
add
mov
addr16
scas
sbb
xor
dec
outsb
fsts
popa
lods
pushf
xor
mov
movsl
inc
fists
hlt
xor
xchg
pop
jg
xchg
rcrl
lods
addr16
and
mov
jmp
outsl
leave
pushf
out
cmpl
push
shll
lahf
pop
enter
std
fmuls
jnp
and
inc
or
das
test
pop
ret
aaa
addr16
sbb
or
mov
add
sbb
mov
xor
lcall
inc
push
and
insb
stos
add
or
push
mov
lods
popf
loop
add
stos
in
cwtl
mov
call
clc
outsb
push
mov
les
fidivrl
incb
ret
and
push
ljmp
or
push
enter
fidivrs
mov
aam
sub
xor
ret
inc
adc
imul
or
fiaddl
inc
pop
push
int
cmpsl
rclb
and
idivl
cmp
or
lds
xlat
cmp
loop
push
xor
adc
or
shlb
push
xor
popa
nop
sub
rorl
roll
aas
out
cmp
push
cmp
add
mov
sarb
jbe
loop
fstl
xor
and
lret
push
daa
xchg
jmp
les
and
push
cltd
outsb
popf
fsubs
shlb
dec
lods
inc
xchg
add
pop
inc
pushf
in
lahf
test
xchg
fidivrs
mov
sbb
xchg
inc
add
push
push
pop
sub
adc
movsb
or
cs
jo
aas
mov
fneni(8087
add
sub
inc
push
lock
push
xchg
pop
or
push
push
xor
cmp
push
cwtl
scas
inc
adc
pushf
sub
lcall
add
mov
mov
jns
pop
pop
xchg
jbe
pushf
mov
hlt
roll
inc
cwtl
xor
jecxz
xorb
mov
pop
jge
inc
mov
mov
jl
and
test
into
adc
xchg
adc
lods
loope
gs
adc
mov
jl
cli
pop
aaa
add
mov
seta
mov
jo
cmpl
out
in
int
int
jp
mov
cmpsl
ljmp
lods
ss
shrd
and
aad
xchg
jo
sbb
push
in
dec
mov
add
xchg
ja
jne
mov
aas
pop
hlt
std
int3
mov
mov
in
addr16
sbb
nop
cmp
mov
xchg
xchg
xchg
fwait
movl
cmpsl
xchg
ret
popa
push
pop
dec
loopne
xor
imul
lcall
repz
dec
aas
xor
adc
xchg
mov
out
xor
loopne
out
push
add
cmp
or
mov
xor
insl
outsb
xchg
mov
pop
mov
pop
xchg
and
lods
pop
push
adc
cmp
int
push
icebp
xchg
insl
jbe
std
clc
xchg
dec
cli
repnz
mov
xor
aas
leave
ss
loope
push
mov
xor
jbe
jb
movsb
jecxz
stos
xchg
divl
adc
push
xor
hlt
mov
inc
fwait
inc
lahf
imul
inc
push
inc
int
sahf
mov
dec
les
mov
les
popa
mov
in
jnp
test
pop
nop
lret
mov
push
gs
cli
ret
inc
aad
or
adc
sbbl
xchg
int3
cld
cmp
lret
fs
js
cmp
test
push
xchg
mov
fcoms
sti
icebp
push
mov
stos
inc
xor
pop
cmpsb
arpl
rcrb
adcl
mov
hlt
xor
jbe
pop
mov
mov
push
mov
push
dec
xchg
xlat
sbb
repnz
in
sub
xor
sbbl
cmpsl
and
es
dec
mov
mov
xor
and
jno
sub
jne
je
push
inc
repnz
mov
push
sbb
mov
pop
or
jle
jae
cli
mov
push
popa
and
add
xchg
movsb
push
jecxz
mov
jns
xchg
insb
cmp
mov
dec
mov
cmc
mov
push
fldl
xchg
ljmp
scas
xchg
cmp
and
cmp
sub
mov
aaa
or
xchg
inc
sub
shl
inc
pop
sub
aaa
rcll
dec
sbb
enter
les
orl
and
push
adc
lret
push
mov
inc
insl
std
int
xchg
mov
cli
adc
test
vmwrite
cwtl
dec
mov
sub
shl
popf
loope
sahf
sbb
loop
test
std
sub
in
test
out
and
test
dec
or
add
mov
and
and
adc
add
in
mov
addl
add
movl
mov
movl
jmp
or
mov
xor
mov
adcl
add
mov
xor
mov
mov
xor
andl
add
movl
cmp
movl
je
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
adc
jl
mov
bound
int
aam
roll
addl
xor
sbb
rorb
hlt
negl
inc
rclb
rcrl
cmpsb
popf
push
sub
lea
dec
mov
fldl
in
ss
repz
cmc
mov
cmp
and
testl
add
xor
pop
jge
cmpsb
push
mov
push
add
sub
jp
dec
daa
cmpsb
jg
out
sub
mov
divl
lods
push
lods
insl
pop
pop
testl
push
mov
push
clc
sahf
jle
sub
jp
out
stos
xchg
fwait
setg
movsl
fimuls
add
and
sbbl
cmp
mov
add
fisubl
lock
add
faddl
loop
or
ret
sbb
xorb
dec
dec
mov
mov
das
adc
adc
push
or
out
shlb
popf
pop
jmp
pop
mov
test
pop
mov
inc
ds
int3
into
sub
stc
cmp
adc
popa
cmp
hlt
or
in
fldt
inc
jge
adc
inc
inc
andl
sbb
cmp
and
inc
sub
nop
icebp
ja
lahf
adc
add
xchg
mov
push
jecxz
pop
jbe
bswap
sbb
add
mov
and
mov
jbe
mov
repz
les
sbb
mov
mov
pop
inc
push
in
loope
idivb
mov
dec
cmp
rorb
fnstenv
and
inc
inc
in
cmpsb
or
jge
mov
pop
mov
or
mov
xchg
aaa
push
and
je
and
inc
loopne
fcompl
jbe
fistpll
arpl
push
scas
mov
or
xchg
in
orb
ret
fldt
divps
and
test
test
aad
fistps
and
out
mov
std
adc
or
ret
push
mov
mov
push
push
and
dec
xchg
xlat
daa
mov
xchg
lret
add
lahf
jnp
push
es
pop
fisubs
ljmp
jnp
pop
out
adc
icebp
enter
xacquire
lahf
mov
inc
cmpsl
push
add
or
loop
inc
shld
mov
xchg
jb
pop
push
jecxz
jo
inc
test
pop
rorl
xor
mov
xchg
lea
inc
pop
lods
mov
add
lcall
cmp
rolb
mov
data16
test
ret
es
fldt
cmp
mov
xor
hlt
cmp
inc
sbb
or
mov
sbbl
shl
loope
xor
int3
jbe
arpl
stos
loopne
es
repz
xchg
aas
into
push
orl
inc
xor
mov
adc
xor
enter
cmc
push
out
jne
in
mov
sbb
dec
in
in
shll
in
dec
jb
mov
adc
push
jg
ror
test
out
inc
inc
push
xchg
stos
rorb
xchg
dec
scas
xor
cmp
call
fwait
jle
mov
inc
cltd
ljmp
jmp
lods
hlt
xchg
mov
cmpl
in
dec
stos
xchg
inc
jne
mov
adc
add
fsubr
jae
arpl
addb
sbb
mov
jge
mov
pop
add
jo
popa
sbb
jge
stos
sbb
imul
pusha
sbb
cmpsl
dec
xor
cmp
pop
xor
push
popa
jbe
mov
and
jno
sub
push
jnp
scas
or
iret
push
inc
cltd
arpl
mov
pop
and
fs
divb
in
or
xchg
sbb
xorl
repz
clc
pop
imul
mov
pop
fcoms
enter
mov
push
es
push
fisubrl
or
add
sarb
xor
lret
dec
jecxz
cmp
insb
jmp
jmp
jge
push
pop
movb
cs
and
sub
call
aaa
pop
jp
cmp
mov
into
nop
push
in
aam
pop
pop
jnp
mov
cwtl
addl
inc
sbb
jne
sub
or
js
sbb
jo
jns
fsubrp
fld
jne
bound
and
out
fdivrs
push
pop
mov
push
fs
incb
xchg
cmp
mov
in
aad
call
push
pushf
addr16
jmp
and
negl
mov
xchg
mov
repnz
sarb
mov
cltd
xor
mov
pushf
xchg
inc
xchg
push
scas
orb
lock
mov
cmp
mov
fmull
lret
aad
sbb
push
xchg
xlat
xchg
add
jge
adc
cmpsb
and
dec
test
js
xchg
sbb
iret
shrb
shl
dec
inc
mov
std
xchg
mov
xchg
add
pop
mov
cmpsb
stc
push
loop
js
dec
fnstcw
mov
sbb
pop
ds
jecxz
add
notb
or
scas
jecxz
insb
cmpsb
insl
repz
xchg
mov
jmp
cmc
fcompl
js
setl
jnp
repz
ret
mov
iret
xor
jmp
lahf
imul
push
sbb
movsb
loopne
jno
nop
jge
aaa
or
jmp
movsl
jecxz
sub
mov
jmp
inc
rcll
sbb
pop
inc
sti
fnsetpm(287
xor
cmc
fsubr
mov
ljmp
push
test
cli
inc
lods
jns
sbb
dec
ret
or
xchg
cmp
push
pusha
cli
aas
xchg
xchg
cmp
std
popa
and
or
inc
testb
iret
xor
lret
jno
push
ds
pop
add
inc
adc
cmp
xchg
mov
jl
fucom
xchg
jle
loop
out
mov
cmp
data16
frstor
jo
adcl
sbb
lds
mov
inc
js
sarl
leave
outsb
jae
lock
aam
std
or
jo
xor
inc
cli
call
divb
sub
pushf
pushf
xor
and
in
repnz
in
add
sub
pop
xchg
lcall
mov
sub
mov
cmc
fucomp
lds
or
xchg
jmp
data16
fidivrs
cli
mov
jmp
negb
scas
pop
js
inc
jge
mov
icebp
cmp
mov
dec
mov
dec
loopne
cli
mov
jae
and
shlb
xor
stc
jae
sbb
fwait
sub
xchg
inc
pushf
mov
in
fwait
sbb
sub
std
xchg
xchg
jmp
imul
xchg
arpl
add
movsl
out
lods
in
mov
repz
add
mov
push
sbb
mov
pop
movhps
jb
xchg
cwtl
ja
cmp
in
push
addr16
sbb
push
dec
nop
int3
cltd
in
mov
mov
add
cmp
aad
fadd
enter
mov
jmp
xchg
push
movsl
inc
xor
out
inc
adc
dec
or
push
push
ret
movsb
lods
jl
cmp
xchg
cli
push
adc
mov
cmp
inc
cmp
divb
icebp
jne
nop
lods
cmp
stos
aas
fadds
fldenv
or
mov
test
inc
scas
lods
test
clc
cmp
jecxz
cwtl
loopne
into
sbb
mov
pop
ja
jb
cltd
lret
push
ficoms
inc
sbb
cmpsl
test
and
mov
push
std
push
add
popa
clc
push
mov
iret
mov
dec
stc
fstp
aad
call
cs
sub
push
movsb
mov
push
test
mov
pop
leave
roll
mov
inc
sbb
clc
jnp
sti
jle
dec
in
test
inc
mov
lods
mov
pushf
xor
sbb
insl
inc
xchg
sub
and
inc
adc
shl
sahf
jmp
repnz
xor
adc
test
jnp
mov
rorb
push
push
xor
pop
sbbb
fsubl
inc
cmpsl
sub
cli
ljmp
or
divl
or
sbb
adc
pop
jg
ficompl
int
mov
scas
stc
xor
jmp
cld
inc
lret
adc
sub
or
adc
cmc
ja
sti
sbb
pop
pop
sbb
sti
jmp
sbb
and
mov
pop
inc
mov
aas
enter
daa
and
jl
push
roll
and
shlb
dec
fs
hlt
es
lcall
pop
repz
test
cli
xchg
jle
jecxz
mov
insl
mov
add
add
push
jle
psrad
xor
mov
mov
dec
cwtl
sbb
mov
mov
out
bnd
mov
sub
push
xor
pop
xor
xchg
push
scas
imul
xor
inc
rorl
xchg
mov
adc
dec
mov
rolb
mov
repz
sub
out
cmp
pusha
adc
repz
lret
inc
mov
pop
mov
es
inc
mov
out
sub
outsb
lret
mov
or
pop
jmp
stos
rcrb
imul
nop
js
mov
pop
fwait
jmp
cmp
std
scas
popa
push
rcrb
mov
test
repnz
jb
pop
mov
or
scas
xchg
int
icebp
sbb
mov
adc
mov
or
xorl
int
or
ret
mov
push
fwait
push
scas
push
dec
pop
xor
int3
jmp
aas
mov
lcall
mov
xorb
hlt
adc
shl
inc
in
pusha
sbb
outsl
repz
in
sbb
clc
xor
leave
test
test
inc
movsl
push
adc
sbb
data16
sbb
into
pushf
mov
mov
cmp
pop
xchg
xor
pop
xchg
ret
lret
sbb
or
test
das
dec
in
ljmp
or
dec
mov
ss
sub
cmpsl
sbb
fidivrs
test
and
in
test
mov
push
xor
sbb
mov
adc
inc
aaa
sub
addr16
test
inc
pusha
add
mov
fsubl
dec
test
push
xchg
add
mov
and
push
ds
test
jl
aaa
push
nop
push
aas
sub
cmp
imul
push
lret
xor
je
insb
mov
sti
mov
push
out
lret
jo
push
inc
dec
addr16
or
je
fiadds
mov
daa
xchg
ja
pop
fcmovb
shl
add
push
xor
pop
gs
sub
cld
mov
stc
out
ljmp
and
cmpsb
mov
xor
adc
inc
xor
call
dec
iret
add
pop
ret
int3
rcll
mov
inc
xor
mov
sarl
ds
cmpsl
mov
push
into
pop
xchg
mov
xchg
dec
jns
and
cmp
ffree
addb
popa
cmc
movsl
aaa
add
and
loop
sub
into
cmp
in
in
push
mov
add
mov
lods
les
fsubrl
movsb
sub
jns
cwtl
test
mov
pop
out
in
cmpb
add
jmp
in
subl
loopne
mov
adc
std
or
cli
xor
push
pushf
out
andb
out
mov
rcrb
xor
mov
je
push
pusha
dec
or
cmp
out
imul
fs
push
icebp
add
repnz
repnz
or
mov
dec
stos
push
sub
push
mov
sub
lock
and
aad
mov
repnz
jmp
fidivl
adc
gs
push
add
jo
call
pop
std
cmp
jp
cli
neg
int3
fs
insl
xor
ljmp
sub
push
adc
cmc
inc
lock
mov
mov
or
repnz
negb
and
lret
sub
test
xor
cmpsl
mov
sub
stc
xor
jne
mov
add
ds
cmpsb
jne
pop
mov
inc
dec
xor
or
adc
popf
add
rorl
add
cli
lcall
out
or
adc
cs
push
cmp
mov
sbb
jle
test
in
nop
xor
pop
mov
mov
inc
mov
add
jge
icebp
clc
push
adc
divl
push
xchg
sbb
and
sbb
xchg
mov
jns
mov
xorl
push
add
cmp
jmp
scas
and
mov
imul
pop
mov
jnp
lret
mov
lea
mov
xor
sub
test
pushf
inc
sub
ss
iret
add
mov
mov
aad
jge
xor
cmp
jmp
mov
jp
adcb
sub
repnz
rcl
inc
adc
fsts
mov
xchg
popa
pop
jnp
faddl
ss
imul
stos
sub
lcall
push
adc
mov
xchg
ret
xchg
in
out
stos
test
and
and
jmp
pop
bound
push
shll
or
sbb
jp
arpl
mov
xchg
aad
ljmp
push
cld
aas
in
jo
loop
add
jne
cs
andl
adc
jae
pop
scas
or
fildl
test
mov
pop
adc
dec
and
jp
pushf
adc
in
jno
lret
sarl
movntq
out
sbb
test
faddl
mov
jmp
push
pop
out
rcr
iret
xchg
fwait
jns
dec
addb
out
pop
cmp
das
in
cmp
inc
out
inc
or
lret
movsb
pop
sub
push
sub
sbbb
stos
xchg
mov
mov
sti
inc
inc
xor
push
sub
lret
sub
dec
xchg
xor
inc
xor
dec
xlat
dec
mov
lods
daa
cltd
xor
inc
mov
test
test
dec
mov
mov
sbb
insl
pop
insb
bound
out
rcr
movsl
and
sbb
mov
sti
outsb
cmp
push
mov
add
sti
push
jl
lahf
leave
fs
and
mov
dec
shll
mov
mov
or
xor
push
mov
pop
cltd
add
mov
jecxz
and
aaa
ret
lock
sub
mov
push
add
rorb
loopne
cmp
push
adc
out
mov
vpunpcklwd
lods
cli
hlt
sub
mov
int
xchg
push
loopne
arpl
push
je
lock
cmp
or
adc
and
jle
nop
mov
cltd
orb
mov
mov
in
add
inc
nop
aaa
xchg
fists
xor
inc
and
dec
mov
fsub
bound
and
popa
cmpsb
mov
lods
xchg
jecxz
cwtl
fwait
xor
incb
fiaddl
negb
mov
cmc
adc
dec
imul
cli
sti
roll
fwait
enter
data16
data16
call
mov
jb
mov
aam
stc
out
push
and
mov
lods
xor
mov
mov
incl
clc
icebp
sbb
mov
in
cmpsl
cmpsb
or
daa
lods
xchg
inc
shrl
xor
rcl
push
gs
ret
pop
insb
adc
sub
out
mov
rcll
into
cmpsb
aam
pop
adc
inc
gs
out
push
mov
daa
jo
and
xchg
mov
and
outsb
push
out
sub
sub
xchg
push
push
xchg
and
xchg
adc
lock
es
maskmovq
testl
adc
stos
aad
cld
popf
loop
jp
adc
mov
push
dec
test
adc
jmp
push
xor
and
sahf
cmp
es
int3
movlps
mov
mov
notl
inc
or
add
and
inc
lret
sbb
fwait
cmovb
mov
mov
sub
mov
out
aaa
repnz
xchg
in
jmp
xor
cs
push
dec
insb
cmp
cmp
into
iret
cs
cs
in
out
addr16
popf
cltd
shl
cs
cmc
pop
xchg
xchg
insl
pop
mov
xchg
add
jmp
rcr
or
cli
fisubs
pop
je
adcb
xor
mov
cltd
loopne
jne
or
movsb
jne
xor
cmpsb
ror
stos
fisttpll
fisttpl
mov
jbe
fmull
outsl
push
test
adc
clc
mov
xor
js
pusha
mov
scas
popf
aas
fldenv
outsb
cmpsl
pop
sub
cmp
mov
ret
in
and
sub
pop
xchg
mov
jecxz
std
fistpll
mov
cmp
xor
pop
cmp
stos
insb
pop
loope
xchg
sub
cmp
repz
pop
cmp
mov
add
mov
pop
aad
mov
push
mov
xor
popa
add
andb
into
cmp
mov
mov
push
jecxz
dec
add
inc
sub
and
mov
push
rcll
sub
pop
mov
mov
ret
cmpb
stos
pop
push
inc
lods
xchg
shrb
cmp
gs
scas
adc
mov
dec
es
rep
test
xchg
and
sahf
add
jecxz
jb
pop
daa
and
jle
sub
cmp
mov
mov
fimull
sub
xor
lods
imul
dec
mov
xchg
sub
arpl
jle
popf
sub
cltd
sub
mov
cmp
insl
mov
ss
testl
mov
inc
ret
cmp
negl
mov
cld
bound
je
mov
out
adc
mov
add
mov
push
or
nop
xor
push
pusha
shlb
pushf
jb
insl
cmp
add
rcr
lds
mov
aad
aaa
dec
xchg
lcall
push
pushf
ret
mov
or
enter
leave
cmpsl
rorb
and
nop
push
xchg
jl
loop
fcomps
cli
hlt
je
cli
ficoml
cmpsb
fxch
push
js
iret
mov
sahf
je
shll
jge
dec
fmul
jno
mov
sbb
fs
arpl
sbb
addr16
and
or
loope
nop
inc
dec
jmp
out
dec
adc
push
in
xor
mov
cmp
jecxz
mov
mov
add
into
cmp
popa
pop
stos
mov
inc
adc
fnclex
xchg
cli
pop
lret
movsb
out
dec
popf
xor
data16
jecxz
adc
shlb
out
mov
movsl
mov
fcoml
rcl
fdivrs
mov
cmpsb
hlt
cmp
mov
and
and
in
or
popa
push
je
movb
mov
sub
pop
movsl
or
dec
or
inc
es
jnp
sbb
push
nop
dec
dec
mov
fbld
paddd
sbb
out
out
cmp
scas
mov
mov
pop
xchg
sub
mov
pop
or
pop
push
aad
fcom
push
jecxz
xor
adc
mov
arpl
fidivl
cmc
fdivrl
xor
mov
and
sbb
mov
fwait
adc
mov
sbb
cmp
pusha
pop
xchg
lea
sti
xchg
mov
aaa
aad
jge
pusha
mov
ror
xchg
lcall
mov
ljmp
cmp
test
xlat
or
jnp
icebp
xchg
inc
jl
cmp
lret
add
loopne
cmpsb
std
outsl
ds
xlat
mov
iret
popf
xchg
adc
cmp
inc
fmull
cmp
ja
aam
lods
and
mov
sub
hlt
cmpb
dec
sarb
sbb
bnd
xchg
push
pushf
inc
sub
enter
fwait
shrl
jle
pusha
and
outsb
andl
les
mov
repnz
push
xchg
inc
jmp
xchg
mov
negb
popf
or
xchg
adc
insl
xlat
xor
push
push
je
andb
push
out
lahf
sub
mov
rcrl
mov
dec
cmpsl
jg
jmp
or
gs
fdivrl
jno
insl
inc
aaa
xchg
in
mov
loop
pop
pop
pop
push
push
push
leave
push
es
es
rol
or
jae
rolb
outsl
mov
pop
enter
lahf
call
mov
inc
mov
fisttps
in
fwait
xlat
jnp
aam
lahf
inc
mov
mov
mov
mov
rcll
pop
jmp
fucom
repz
fiadds
sahf
inc
fiaddl
pop
mov
cmp
data16
dec
xor
lret
lahf
pop
pop
cmp
out
test
inc
jle
adc
mov
nop
push
lock
outsl
mov
mov
popa
pop
inc
shl
sub
and
sub
enter
inc
leave
mov
push
ret
jne
sbb
pusha
cmp
mov
push
or
js
or
lret
xchg
sbb
xchg
cmpl
dec
dec
add
mov
pop
pop
ja
inc
mov
daa
imul
lods
leave
movsl
xchg
lea
mov
push
adc
popa
mov
test
movsb
pop
lret
and
clc
or
mov
inc
pusha
xchg
in
in
jns
ret
loope
sbb
mov
pop
dec
mov
pop
mov
inc
mov
mov
icebp
insb
call
mov
test
cmp
in
jbe
cmp
and
das
pop
push
or
into
mov
lahf
aad
jnp
dec
dec
push
cld
stos
in
ss
push
mov
fcmovb
clc
xchg
add
adc
pop
loopne
lea
sbb
add
popf
push
add
xorl
jge
jl
add
sbb
adc
push
mov
ror
imul
sbb
rcll
xorb
iret
loopne
nop
bswap
jae
push
out
mov
mov
sub
sbb
std
iret
fildll
lds
pushf
dec
mov
adc
popa
lret
sbb
add
inc
xchg
mov
les
and
subl
adc
popa
add
mov
outsl
xchg
xchg
and
aad
les
cmp
lret
inc
add
rcrb
test
cld
and
lret
test
cmp
icebp
sti
cmp
fdivl
jle
jmp
popf
sub
stos
push
mov
movsb
rcrl
loopne
push
mov
xchg
js
stos
pop
mov
scas
scas
scas
je
negb
outsl
dec
imul
loopne
iret
inc
pop
or
sub
insl
ds
fwait
xchg
jne
imul
mov
mov
xchg
adc
imul
push
call
dec
fisttps
lods
xchg
xchg
mov
leave
xchg
loop
ljmp
inc
adc
sahf
ljmp
sub
jae
aaa
push
add
mov
in
jle
mov
mov
sbb
call
cmpsb
data16
scas
jmp
lcall
fcom
aad
or
fmull
int3
outsl
sub
mov
jnp
jbe
mov
test
sahf
popa
mov
int
xor
ljmp
push
arpl
inc
fists
and
mov
bound
shll
xchg
imul
push
shlb
sub
pusha
ret
ds
or
lock
pusha
ds
in
cmpsb
rorb
addb
sbb
out
dec
push
push
fdivrs
mov
push
mov
lcall
pop
sbb
add
xor
ficoml
cltd
dec
mov
fwait
cli
scas
dec
scas
lcall
pop
pop
xchg
stc
call
fwait
pop
push
jno
add
adc
shrl
sbb
xchg
cli
jns
xchg
mov
stc
jo
in
pop
push
rcll
and
jl
xchg
orb
sbb
movsl
idivb
mov
ja
dec
pop
and
subl
shlb
popa
out
aas
sahf
stos
mov
out
in
scas
inc
int3
test
ds
testb
or
mov
xchg
rclb
xor
repnz
stos
cli
int
add
add
adc
cmpsl
insb
jnp
lea
addr16
jno
insb
loope
push
push
sub
mov
loop
outsl
mov
fadd
mov
xchg
test
jl
mov
xor
out
dec
jmp
in
xchg
je
test
sti
push
adc
in
inc
sub
aad
into
sub
jne
outsb
sar
ret
movsl
inc
pop
hlt
add
dec
pusha
mov
jnp
lret
pop
or
or
fucomi
xchg
push
out
scas
add
imul
fldcw
stos
cltd
out
jbe
sub
sub
testl
cld
xchg
sarl
call
mov
mov
pop
repz
sbb
stos
mov
dec
sub
mov
dec
add
jmp
rep
adc
jle
ss
fidivl
stos
test
imulb
pushf
das
test
test
je
mov
sbb
push
and
ret
and
pusha
test
lods
ret
and
mov
sahf
mov
fincstp
lahf
xor
sub
arpl
cmp
daa
sgdtl
fdivrs
int
sub
or
mov
xchg
pusha
cmp
inc
addr16
fwait
pop
cltd
mov
jbe
jne
sahf
scas
lds
pop
mov
dec
adc
repnz
lsl
bound
xlat
xor
into
roll
aaa
incb
fidivrs
jecxz
add
fsubr
cmp
mov
mov
adc
pop
imul
lods
pusha
mov
js
lret
popf
cmp
sub
mov
push
iret
mov
imul
lcall
push
cmp
insb
adc
repz
mov
sub
mov
xor
popa
xor
fwait
addl
stc
test
iret
js
stos
mov
mov
pop
cmp
sub
jmp
jns
scas
sbbb
test
aam
test
mov
hlt
push
out
pop
test
mov
dec
cltd
stos
or
aam
stos
lods
or
ret
mov
lods
xor
push
jmp
xor
inc
push
jmp
mov
xchg
test
xor
imul
jg
into
and
loopne
adc
dec
dec
fistl
xchg
test
or
push
leave
inc
adc
lock
xor
fs
clc
enter
mov
mov
subb
sbb
in
pop
insb
adc
insl
push
sub
mov
pop
dec
push
cmp
addb
mov
sbb
mov
data16
push
sahf
inc
cmpl
das
mov
xchg
push
call
mov
test
cmpsl
jbe
cs
jo
dec
scas
xor
aam
jl
stos
fcmovb
sub
mov
jle,pn
pop
gs
adc
push
mov
jle
sub
les
fistpll
mov
jbe
mov
out
int
outsb
cmp
cmp
push
jne
cmpsl
push
xor
lods
sub
mov
dec
int3
mov
out
sbb
stos
in
repz
dec
int
sub
and
adc
or
in
inc
fbld
ljmp
lahf
jl
jle
adcb
fwait
dec
cmpsl
cmp
mov
xchg
fwait
sub
mov
and
sbb
fnstcw
scas
cmp
ljmp
ljmp
push
mov
push
cmp
mov
xor
mov
test
mov
fs
daa
icebp
je
into
add
lahf
lock
pop
ror
lea
repnz
test
int
scas
mov
dec
cmp
lea
cltd
stos
stos
adc
test
push
cld
iret
mov
fwait
sbb
out
sub
lock
imul
pushw
xchg
jl
and
mov
cltd
shrl
mov
sahf
lcall
xlat
push
jg
jno
xor
pop
ljmp
dec
inc
popf
jg
or
inc
add
inc
inc
popa
in
xor
enter
mov
sbb
adc
out
pusha
mov
push
pop
adc
ljmp
cwtl
cmpsb
pop
test
push
push
xchg
jle
jo
aad
shll
loope
jge
cli
mov
dec
push
cmp
loop
mov
movsl
adc
or
mov
xor
fistl
addr16
pusha
stos
pop
loope
adc
ds
mov
xor
xor
scas
dec
enter
ret
pop
inc
out
mov
dec
aad
mov
sti
xchg
lcall
dec
xor
sub
pop
adc
jae
ljmp
and
repz
add
jmp
sbb
jge
addl
jmp
sbb
mov
rcl
pop
hlt
jecxz
push
dec
xchg
je
inc
add
rcl
xor
iret
movsl
sti
rolb
test
mov
and
adc
lcall
cmp
cmp
jmp
mov
fimuls
movsl
xchg
cltd
in
lret
std
shlb
add
adc
scas
mov
add
mov
fisubl
and
sub
and
in
mov
mov
imul
repz
aaa
pop
lret
dec
push
push
movsb
mov
lahf
add
pop
mov
jno
imul
cmp
xor
dec
dec
outsb
outsb
adc
nop
jns
adc
push
lret
sbb
pop
repnz
call
je
mov
pop
ss
ss
cmp
ds
lods
les
stc
mov
push
jb
mov
cltd
cmpsb
test
bound
mov
pop
jecxz
mov
xor
xchg
mov
dec
lahf
inc
fisubl
out
xchg
nop
jb
cmp
lret
sarb
cmp
mov
cltd
roll
aaa
outsl
jno
repz
movsb
loopne
push
and
and
push
clc
push
xchg
xor
fstps
ja
mov
xor
dec
imul
adc
leave
fnstsw
sbb
xor
gs
repz
stos
jns
stos
ljmp
sbb
fcmovnu
sahf
gs
shrl
dec
xchg
in
jle
arpl
adc
cmp
inc
fidivrl
in
dec
outsb
push
mov
aaa
mov
lret
data16
imulb
leave
xchg
jbe
dec
sti
shl
sbb
sub
es
sahf
jp
xchg
mov
rolb
rcll
push
mov
cwtl
into
rorl
ljmp
ljmp
add
push
je
mov
jle
sub
dec
mov
or
lds
js
mov
lods
daa
cmpsb
jno
adc
push
lock
mov
mov
ficompl
imul
das
stos
stos
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
jmp
test
jl
out
mov
sti
loopne
lret
jp
addl
hlt
mov
cmc
pop
xor
or
mov
dec
mov
mov
sub
test
ds
dec
jnp
cmp
pop
cli
ss
sbb
xchg
mov
hlt
mov
pop
es
pusha
aam
ret
shl
fs
jno
std
or
push
loop
mov
out
push
les
sar
adc
mov
mov
outsl
cmc
pop
sub
icebp
jge
test
fdivs
inc
xchg
int3
cmpsl
test
aas
scas
int3
inc
scas
mov
in
and
rolb
push
loope
mov
xchg
push
jnp
ss
out
insl
sbb
stc
subl
and
mov
mov
mov
cmp
daa
pop
cli
test
int
sbb
fimull
cld
dec
rclb
jmp
xor
xchg
cmc
stc
lret
mov
mov
cwtl
xchg
fdivl
xor
aad
and
testl
inc
daa
fmuls
iret
repz
xchg
enter
sub
lahf
jne
jmp
xor
ds
pop
subb
dec
out
cwtl
push
push
fistpll
lret
xchg
inc
aam
enter
or
jb
sarl
xor
xchg
mov
xchg
negb
and
sub
adc
push
pop
fdivr
into
dec
add
mov
or
aad
dec
lds
jno
or
xchg
in
pop
leave
push
sub
sub
adc
popf
add
mov
ds
jo
xchg
mov
gs
repnz
pop
pop
test
mov
ss
and
mov
jg
int
lret
mov
fists
nop
xlat
movl
iret
mov
push
or
jnp
sub
sbb
imul
mov
xor
ja
add
dec
dec
push
fwait
jg
lret
xchg
jo
mov
leave
or
sbb
xor
pushf
or
lods
cmp
test
or
push
push
out
cmpsl
les
jp
insb
icebp
imul
sti
hlt
adc
imul
and
and
fs
jmp
gs
fwait
loopne
push
mov
and
mov
sti
enter
icebp
or
jno
test
mov
and
mov
ficoml
xchg
mov
repnz
ret
test
mul
add
pop
jns
xchg
repnz
movsl
fdecstp
popf
or
jg
push
jp
xchg
dec
popa
insb
and
mov
xchg
sub
mov
das
int
js
in
mov
mov
inc
push
lret
dec
push
ficoml
xor
sti
dec
imul
repnz
test
scas
sub
push
ret
mov
out
lret
sub
sbb
mov
aaa
jmp
sbb
mov
mov
loopne
mov
rolb
inc
pop
mov
mov
lret
push
inc
mov
clc
inc
mov
xor
xor
pop
jns
nop
out
xor
hlt
es
xchg
jge
lret
xor
int
mov
push
xchg
jns
inc
mov
sbb
mov
and
ja
cmp
xor
rcrl
insb
shl
scas
mov
mov
xchg
cmp
movsb
orl
mov
cmp
into
push
adc
insl
lret
dec
out
fmulp
pop
ljmp
pop
mov
imul
dec
lods
pop
push
popf
shll
das
inc
pushf
aas
cmp
mov
mov
cmc
in
aaa
jp
xor
add
adc
daa
loop
testb
imul
nop
out
or
mov
popf
adc
outsb
bound
mov
cld
cmp
mov
mov
xchg
mov
out
aaa
sbb
mov
add
jmp
xor
aas
or
sub
inc
loop
imul
fcmovb
mov
roll
pop
sbb
jp
push
gs
inc
stc
or
addr16
shlb
xor
sbb
sub
sti
sbb
inc
mov
push
jmp
xchg
dec
loope
int
mov
dec
test
les
and
in
mov
shr
jno
mov
aad
fidivs
insl
loop
push
je
xor
mov
lods
lods
cmpsl
aaa
add
push
mov
mov
add
sub
push
pop
jp
jl
mov
mov
fdiv
test
xchg
mov
mov
and
pop
nop
sub
inc
xchg
inc
mov
into
aas
iret
cmp
aaa
lret
jecxz
aad
mov
insl
scas
sbb
cld
sahf
sarb
clc
lds
out
arpl
imul
pop
bound
inc
mov
push
insb
cwtl
pop
andb
lea
sarl
cmp
fwait
inc
dec
ss
push
in
ja
cmp
and
enter
add
lea
adc
and
inc
fcoml
push
pop
bound
rolb
sbb
mov
outsb
pop
lds
test
mov
and
loopne
mov
test
cltd
dec
loopne
hlt
arpl
mov
jae
push
or
fwait
or
dec
pop
jmp
js
dec
repnz
xchg
jae
jno
dec
mov
js
imul
mov
pop
cmp
jge
jecxz
adc
dec
inc
out
mov
mov
aas
or
out
mov
loope
xchg
pop
mov
mov
mov
pop
ret
dec
aas
lret
not
mov
sub
incl
mov
xchg
aaa
icebp
cmpsl
jmp
xlat
repz
sub
mov
xchg
dec
mov
ss
cmc
lcall
out
pop
jnp
lds
insl
ffree
push
sbb
and
xlat
mov
out
test
fiadds
das
testl
xor
mov
in
adc
int3
iret
jb
adc
not
mov
scas
and
inc
xchg
clc
and
in
ja
pop
push
imul
rcrb
popf
xchg
mov
sub
shlb
repz
in
or
push
pop
dec
les
inc
hlt
mov
jp
add
push
iret
in
setno
inc
xchg
xchg
leave
cld
cli
stos
loope
pop
inc
or
or
outsl
or
cli
adc
out
adc
mov
dec
test
in
cmp
add
scas
leave
aaa
jb
inc
into
cld
xor
nop
pop
adc
push
push
xchg
imul
icebp
sahf
sbb
add
cltd
aas
lahf
pop
fmuls
mov
mov
and
int
jp
loope
cli
inc
cs
out
idivl
xchg
cmp
and
pushf
fcom
mov
dec
std
cmp
aaa
ds
jo
pusha
cmp
cmp
leave
jmp
jno
mov
movsb
lods
scas
push
loope
mov
dec
jnp
mov
sbbl
in
enter
cmp
lods
ret
jo
xor
sub
mov
out
out
aaa
std
mov
dec
mov
dec
jp
or
imul
sub
lock
jp
data16
fldpi
or
iret
hlt
clc
xchg
imul
jbe
icebp
and
inc
sbb
loop
cwtl
pop
cli
out
inc
jns
adc
notb
xchg
sub
aaa
mov
or
jge
sub
iret
inc
mov
fildl
add
xor
lret
pop
popf
fldenv
mov
jge
leave
lea
adc
or
ja
and
loopne
xor
mov
xchg
or
inc
ds
add
xor
mov
or
std
mul
cmc
insl
pusha
push
iret
adc
int3
jae
rclb
mov
mov
cmpsl
iret
sub
mov
cmp
ficoms
cs
fstpt
xor
test
imul
outsl
ffree
mov
dec
xor
int
add
sbb
ret
push
jge
loope
in
jge
jmp
popf
repnz
sbb
sbb
adc
les
or
out
jnp
adc
mov
insb
push
xchg
sbb
xlat
andb
rolb
pop
test
jae
pop
pop
xchg
mov
xchg
push
cmp
loop
outsb
dec
xchg
sbb
daa
pop
xor
roll
aad
jb
scas
mov
inc
in
shrb
push
sub
mov
js
pop
cmpsb
loopne
insl
cmpsl
hlt
xchg
xor
sub
repnz
addl
xor
sbb
aam
mov
int
aad
add
movsb
sbb
lret
jge
icebp
test
add
jne
sbb
mov
mov
leave
jns
jle
xchg
bnd
fbstp
sbb
iret
push
sahf
sbb
or
bnd
ret
stos
dec
inc
test
out
mov
es
loopne
repz
add
and
sub
ret
sbb
outsl
mov
in
inc
cmpsb
iret
int3
adc
shrl
out
cmpsl
scas
jbe
mov
mov
cmpsb
xor
lods
rcrb
pop
add
sub
mov
xlat
xlat
jmp
jb
fcom
sti
test
mov
shlb
and
loopne
shl
jmp
adc
mov
stos
dec
fwait
shll
out
psrad
adc
cwtl
dec
cmp
test
pop
dec
or
sub
push
ret
mov
mov
sub
cmp
dec
dec
sbb
pushf
sub
std
or
mov
gs
lock
out
sub
inc
arpl
das
fcoms
orb
mov
mov
gs
xchg
add
testl
iret
test
xchg
aaa
inc
xor
xlat
repz
addr16
cmc
cmpsl
mov
into
lods
mov
cmp
or
or
push
sbb
xchg
ret
cmp
int
pop
jns
inc
lods
arpl
dec
js
scas
stos
inc
popf
out
movsl
sarb
negl
test
push
mov
sarl
mov
cmpb
cld
pop
dec
mov
mov
mov
enter
jne,pn
push
sarl
ret
jnp
cmpsl
adc
jecxz
cmpsl
mov
jo
adc
dec
add
pop
dec
or
roll
popf
pushf
mov
xor
out
les
mov
cli
jb
mov
push
sub
jb
mov
adc
or
fwait
adc
movsb
test
stos
xor
xchg
jae
push
add
pmulhw
ja
push
xor
or
pop
or
mov
idivb
scas
xchg
iret
cmpsl
aaa
cmp
sahf
xor
inc
mov
xchg
ja
in
lods
in
adc
sub
vpcmpeqd
jnp
jl
imul
ficomps
jb
dec
scas
and
je
in
cltd
rcl
test
xchg
jmp
mov
clc
mov
cltd
jns
fidivl
jae
push
sub
mov
adcb
mov
mov
aam
jle
lock
lods
orb
jnp
mov
or
push
mov
add
les
shlb
pop
xchg
mov
mov
sbb
dec
insl
and
inc
aad
in
stos
loope
sub
or
push
fs
or
sub
inc
xor
jno
ss
nop
rcl
cmp
sahf
push
lods
das
mov
xor
push
pop
popf
addr16
sbb
cmp
xor
dec
dec
movsl
sub
mov
sbb
sbb
dec
mov
pop
hlt
cmp
add
inc
add
mov
loopne
sub
pop
xor
cmp
sub
cs
adc
in
rclb
cmp
loop
imul
sub
cmp
pop
sbb
mov
stos
out
pop
dec
fcoml
inc
cmpsl
xor
cmp
js
out
adc
pusha
push
aam
in
jbe
xchg
mov
in
sub
in
push
notl
pop
jge
jns
jp
add
push
fmulp
pop
fwait
jne
arpl
xor
js
lahf
push
add
fld
push
inc
test
pop
and
pop
call
aam
inc
bound
xorl
jle
jg
lret
outsb
cwtl
sbb
bound
cmp
imul
lds
ljmp
pop
inc
sar
mov
mov
add
mov
inc
dec
fldcw
mov
push
stc
aas
jge
in
aaa
xchg
xchg
leave
xchg
mov
in
fadds
xchg
pop
inc
mov
mov
cmp
jge
or
inc
fiaddl
ljmp
ret
fisttps
test
outsb
pop
ss
fs
push
lret
imul
dec
add
outsb
dec
adc
jle
pop
daa
arpl
sahf
lea
out
movsb
int3
inc
inc
mov
mov
stos
mov
pop
or
daa
dec
jno
xchg
test
or
or
pop
ficoms
xor
pop
mov
add
scas
scas
mov
js
es
repnz
das
sbb
mov
das
sub
and
fisttpll
cmp
in
adc
cmpsb
mov
and
pushw
or
ljmp
cmc
lahf
repnz
call
sub
fcoml
sbb
inc
aaa
ret
ja
in
jno
dec
negb
inc
ss
adc
out
fisubrs
sub
lods
mov
sub
nop
dec
enter
inc
mov
loopne
lret
jne
cmpsl
aam
insb
js
fsubl
sub
roll
and
add
dec
shll
cli
fistl
cltd
test
fdivs
in
mov
sarl
mov
dec
addr16
cmp
xchg
jp
sbb
lcall
shlb
int
inc
jl
outsl
mov
call
adc
pop
sahf
and
push
decb
pushf
pop
xchg
sub
fstpl
dec
jns
ds
xchg
lret
cmpsl
loop
dec
pmulhuw
xchg
nopl
sbb
imul
daa
push
cwtl
cmpsl
xor
inc
sub
les
push
push
mov
xor
in
loope
test
dec
xchg
ret
jge
stos
sbb
add
aad
xor
sub
pop
loop
mov
mov
ja
jnp
mov
repz
mov
test
jb
scas
and
dec
dec
neg
push
sub
jl
sti
or
subb
jle
xor
cmp
in
and
sbbb
push
inc
pop
fildll
mov
xor
psllw
repz
cmc
bound
xchg
xchg
xor
xor
iret
aas
js
mov
fidivrl
leave
lahf
push
mov
lret
stos
add
scas
rcl
or
add
test
cs
cmp
fsubrp
push
mov
add
mov
ret
xchg
sub
pop
test
pop
pusha
add
cmpsl
cmp
in
dec
push
test
fsubrl
shll
mov
testb
lahf
mov
cmc
lock
orb
push
push
lcall
mov
arpl
dec
xchg
mov
add
scas
and
inc
in
sub
dec
jne
shl
pop
lcall
cmp
imul
push
js
and
fldl
pop
cs
jo
dec
mov
xor
mov
inc
xchg
xchg
lea
xor
stc
mov
sahf
in
mov
psubsw
out
call
mov
pop
and
imul
aas
mov
mov
sub
insb
rclb
and
or
pop
jmp
scas
arpl
cli
xor
jp
ljmp
aas
add
mov
add
in
mov
dec
mov
push
frstor
or
pushf
sub
stos
out
mov
adc
popa
lret
adc
mov
sbb
cmp
movsb
sarl
pop
xchg
bound
pop
sbb
repnz
inc
cmc
les
mov
cwtl
push
dec
sbb
jg
scas
adc
iret
lock
sbb
nop
adc
push
pop
les
ficomps
dec
mov
push
mov
xor
mov
add
fimull
cwtl
fwait
and
sub
shll
popa
scas
push
lock
pop
test
cmp
xchg
cltd
push
ss
push
adcl
out
add
loopne
loop
push
in
fwait
roll
pop
fwait
aam
push
ss
push
mov
stos
mov
sbb
xchg
addl
decb
call
fidivrs
adc
pushf
pop
dec
pop
out
push
stos
push
xchg
xchg
into
movb
xor
dec
arpl
cli
xchg
add
xor
or
ret
push
sub
lahf
dec
and
and
or
xchg
jl
stc
cmpsl
lea
mov
jns
rcrl
push
popa
mov
ljmp
push
xchg
js
xchg
pop
les
lret
lods
xor
inc
outsl
add
push
cs
add
sahf
pusha
dec
cmp
and
push
out
addb
xor
mov
insb
hlt
jbe
jo
insl
dec
xchg
mov
inc
sub
inc
xchg
loopne
ret
in
inc
pop
xor
pop
testb
push
push
push
mov
in
das
outsl
or
adc
sti
dec
sbb
das
jo
mov
shl
adc
jne
std
cmp
jl
movsb
fiadds
sarb
fistpl
jbe
cmp
ss
jmp
scas
rcll
mov
lds
push
movl
inc
dec
fwait
cli
cmp
int
in
call
inc
jae
jp
sbb
daa
xorb
dec
mov
xor
jg
stc
xchg
sub
add
insl
mov
cmp
repz
push
popa
movsl
repnz
dec
repnz
rcll
xor
mov
in
jp
imul
rep
nop
cwtl
fisubrl
adcl
push
xchg
mov
cs
mov
daa
stos
inc
out
out
jge
push
inc
test
andb
mov
xorb
pop
out
jne
adc
inc
cmpsb
iret
mov
sahf
sti
push
mov
push
adc
inc
jmp
push
int3
jl
out
clc
in
or
out
scas
sbb
inc
in
cmp
lock
sahf
jns
call
adc
pop
jmp
mov
stc
or
add
outsb
test
push
popa
and
orl
dec
mov
rcrl
pop
xchg
jg
test
cwtl
cmp
loope
lea
xchg
rolb
jae
insl
imul
add
push
add
nop
fildll
aaa
pop
push
lods
fs
sti
mov
xor
lahf
jns
std
dec
lods
or
push
test
rolb
mov
add
pop
jne
ffree
push
dec
jb
xor
or
outsb
test
stos
mov
adc
mov
fnstcw
addr16
dec
pop
pop
xor
push
inc
cmc
lea
adc
xchg
daa
mov
sub
mov
xor
mov
dec
repz
sbb
mov
lock
inc
and
into
aam
pop
loop
xchg
push
jb
aam
ret
jmp
cld
mov
in
xor
mov
sbb
sub
push
imul
lods
mov
leave
hlt
jb
xchg
stos
in
mov
push
dec
pop
xchg
and
movb
aaa
push
jbe
fnstcw
mov
test
lods
inc
fsubr
xor
push
xchg
mov
fildll
lods
mov
inc
jle
pop
add
adc
vpunpcklbw
js
inc
sbb
and
cmpl
push
cmp
popa
mov
mov
jae
daa
xchg
loop
and
push
lods
fs
fstpt
jg
nop
inc
jbe
arpl
adc
loop
xor
or
adc
jne
xchg
aas
inc
mov
jmp
add
pop
ss
pop
adc
scas
or
jp
outsb
idiv
call
push
addl
sub
push
lcall
jbe
imul
push
icebp
int
sbb
mov
fwait
pop
sub
cs
jmp
xor
mov
aad
xchg
in
andb
loope
pop
mov
into
xchg
fs
ss
xor
inc
out
xchg
in
sbb
inc
mov
sbb
pop
adc
push
jp
sbb
testb
cmpl
pop
xor
adc
ljmp
lods
insb
push
sub
ret
hlt
in
mov
and
pop
gs
jmp
int
add
addr16
jmp
add
cmp
insl
rcl
mov
mov
pop
and
inc
push
jge
shll
push
lcall
out
lds
lahf
mov
pop
jmp
and
fsubr
mov
shrl
push
jns
mov
mov
cmpsb
ja
adc
inc
mov
sarl
loopne
lods
push
pop
std
ljmp
insl
sub
es
inc
or
sub
jo
push
cmp
xor
test
sub
out
jecxz
shll
mov
mov
push
insl
lds
cmpsb
xchg
aad
jne
mov
pushf
pop
add
pop
jns
sbb
dec
bound
test
xchg
jb
push
scas
mov
dec
add
popf
inc
push
dec
pushf
dec
or
mov
das
jo
adcl
mov
stos
push
pop
sub
jo
int3
insl
clc
and
fnstsw
test
ljmp
test
and
sbb
aas
sbb
push
xor
xchg
push
push
fldl
stos
dec
inc
in
dec
push
pop
push
fdivl
cltd
popa
adc
sub
dec
mov
lods
repz
push
ds
pop
fs
aaa
iret
dec
dec
push
push
push
dec
ljmp
mov
imul
sahf
rclb
sbb
inc
cmp
cs
cmpb
and
ja
icebp
addr16
cwtl
cmpsb
cmp
xchg
dec
sbb
loop
mov
mov
adc
sub
xor
fsubr
sarl
rorb
and
insl
pop
push
out
sub
sbb
mov
lahf
scas
mov
fucom
popa
adc
ja
stc
inc
jb
int3
pop
pop
fiaddl
data16
sbb
shrb
in
sbb
movsl
ja
xchg
and
clc
cmp
mov
cli
cmp
add
aam
shlb
push
mov
jmp
outsl
cwtl
push
icebp
pop
push
add
or
and
jl
call
je,pt
pop
outsl
jo
xchg
dec
lds
mov
test
push
push
clc
pop
fistpll
shlb
sbb
je
cwtl
mov
aaa
fistpl
sub
popf
repz
adc
inc
jb
lods
push
frstor
jb
xchg
into
popf
or
imul
stos
pop
jbe
push
repz
int
ret
or
xor
push
dec
cs
sbb
cld
add
insb
mov
test
mov
push
sub
push
xchg
sub
stc
rcr
imul
sub
inc
cmc
adc
sub
dec
xor
ljmp
dec
fs
mov
inc
cmpsl
cmp
push
mov
inc
dec
add
xor
repz
inc
dec
mov
jg
jl
jae
push
xchg
leave
fmuls
mov
stc
add
jns
fmulp
push
cltd
cmp
mov
xchg
fcoms
out
and
test
repz
aas
test
aam
xorl
mov
jbe
lods
std
pop
jle
sarb
jns
xchg
cmp
push
enter
adc
push
popa
mov
xor
fdiv
mov
arpl
int3
or
leave
and
adc
ljmp
xor
fsubs
aad
int
jb
mov
or
xchg
xor
aad
popf
fimull
xchg
and
int
xor
pusha
or
and
loope
mov
and
jne
out
addr16
adc
and
and
push
sub
repnz
call
adc
jp
arpl
mov
mov
fimull
jg
mov
push
and
mov
jle
sbb
subb
mov
pop
fs
adc
fidivs
xchg
loope
fstpl
nop
arpl
push
movsl
aas
adc
push
subb
push
nop
repz
stc
sahf
lock
push
fldt
aaa
jnp
sahf
pop
xchg
jne
jno
mov
es
lret
xor
inc
les
cli
mov
dec
pusha
adc
mov
loope
mov
push
lcall
sub
xor
xchg
and
inc
mov
rorb
xchg
cmc
cltd
outsb
test
ret
xor
push
lock
enter
jecxz
jmp
mov
mov
push
sub
out
add
pop
pop
imul
inc
jae
jge
nop
lea
mov
dec
adc
inc
in
cwtl
scas
add
push
movsb
fldt
hlt
mov
adc
pop
fdiv
aaa
inc
mov
dec
xchg
cmpsb
xor
sti
push
xchg
jne
sbb
out
sbb
scas
pop
inc
stc
pusha
lcall
and
sti
push
cld
orb
cmp
mov
cmp
push
popa
add
pop
out
push
daa
out
xor
adc
push
frstor
out
push
test
and
in
xchg
xchg
hlt
cmpsb
mov
scas
ss
test
push
out
dec
insl
adc
out
orl
pop
jge
or
mov
add
xchg
inc
hlt
pop
ret
les
jae
mov
inc
or
stos
mov
jl
sti
loop
xchg
adc
mov
sub
adc
push
inc
aad
frstor
scas
ret
icebp
cmp
aam
hlt
xchg
add
movsl
cmpsb
add
cmp
mov
or
jnp
mov
les
out
jge
fidivrs
sarb
add
xlat
adc
mov
test
lret
jp
test
rcll
imul
mov
clc
sbbl
cmpsb
xchg
imul
mov
pop
fucomp
jnp
scas
mov
or
fs
xor
pushl
lds
sbb
ret
dec
jbe
sbb
inc
test
repz
dec
ljmp
cmp
ret
dec
int3
bound
enter
aad
xor
jmp
and
mov
stc
jmp
mov
mov
sbb
in
or
outsb
fildll
pop
push
cmpsl
and
shl
ss
in
pop
and
xor
fildl
lds
and
rcrb
adc
sti
pusha
es
das
inc
pushf
fistps
lret
mov
aaa
divb
push
jmp
xchg
gs
popa
mov
nop
push
xor
into
ret
jge
sub
pop
pop
in
and
andl
sub
add
addr16
mov
mov
test
cs
sbb
mov
xchg
sar
mov
jecxz
iret
out
out
xchg
push
loope
pop
mov
and
mov
lds
jl
and
or
sub
jge
jl
pop
mov
push
jg
mov
outsb
sub
or
mov
jo
jmp
push
and
or
ljmp
mov
arpl
loopne
cmc
push
pushf
xchg
int
outsl
xchg
in
inc
popa
int
movsb
cltd
sbb
sbb
inc
jecxz
adc
cmc
sahf
sub
sub
fidivl
dec
mov
insb
mov
push
fadd
jecxz
cs
mov
stos
xchg
inc
mov
stc
or
xlat
pop
dec
insb
dec
or
xlat
sub
dec
sub
pop
or
xlat
xchg
and
mov
repnz
ss
pop
cmp
je
daa
mov
daa
je
mov
xlat
pusha
aam
mov
sub
xchg
loope
out
adc
addb
sarl
and
cmp
call
fsubrp
inc
or
sbb
lcall
negb
das
mov
fsubrl
mov
scas
jge
jne
cli
int
mov
and
in
ds
setne
into
push
addl
outsb
adc
aad
call
mov
scas
inc
jns
adc
loope
hlt
cmp
lret
add
cmp
sub
fimull
push
add
mov
cmp
sbb
shrb
mov
add
sarb
repz
and
call
push
pop
sar
sub
inc
inc
je
push
mov
out
push
arpl
or
imul
arpl
xchg
or
lret
sti
fmull
mov
aaa
in
and
nop
pop
pop
and
icebp
xor
test
xchg
push
popa
imul
fcomps
rcrl
inc
test
mov
sbb
scas
inc
cmp
jnp
movsb
dec
mov
cwtl
jmp
push
lret
xchg
add
cmp
and
mov
pop
xor
in
sub
test
movsl
fstl
test
mov
inc
pop
adc
jb
push
push
inc
jl
xor
add
je
test
negb
and
pop
fs
dec
cmp
sbb
xchg
cs
xor
dec
mov
cwtl
inc
sbb
jo
adcb
repnz
enter
mov
popa
es
leave
movsl
outsb
popa
jae
call
repz
sbb
lea
inc
jge
outsb
mov
pop
add
mov
cmpsb
imul
in
sbb
cmp
movsl
dec
lahf
pop
pop
push
subl
adc
insb
aad
ficomps
adc
pusha
scas
iret
fistpll
sbb
cmpsb
inc
inc
rorb
gs
lods
push
loopne
pop
fstpl
in
push
outsb
mov
mov
pushf
jle
push
aam
adc
and
lods
or
mov
cmc
shll
ret
mov
les
xchg
pop
jecxz
jns
jo
mov
lds
int3
xor
jg
test
inc
adc
or
cs
mov
es
rcl
call
sbb
jle
adc
xchg
negl
lahf
dec
dec
mov
sahf
test
xor
lret
int3
rorl
jmp
rclb
pop
add
cmp
sub
mov
rcrl
jbe
or
cmp
fidivrl
pop
xchg
pop
stc
inc
popa
jge
mov
push
les
xchg
stos
icebp
adc
add
adc
test
in
mov
cmc
inc
add
call
xchg
loopne
cmp
and
cltd
mov
mov
pop
ss
aam
out
insb
call
xor
jo
movb
or
sub
es
or
cltd
daa
mov
push
call
push
inc
ljmp
ret
xor
jecxz
outsl
cmp
xchg
outsb
lcall
xor
mov
cmp
rorl
test
mov
out
or
shlb
fistl
das
add
or
cmp
xchg
fistpll
or
jae
push
pop
inc
xchg
jmp
popf
add
xchg
adc
pop
in
sub
addl
inc
mov
lods
addl
add
das
push
sbb
ret
pop
mov
jnp
jge
imul
xor
pop
sbb
sahf
mov
nop
push
pop
jno
jae
and
mov
arpl
xchg
out
jno
out
mov
stos
repnz
sbb
inc
dec
mov
imul
sub
jmp
jbe
das
repz
test
push
mov
cmp
dec
cmp
ffreep
js
mov
lret
or
arpl
and
lret
cli
cmp
mov
pusha
xchg
xchg
stos
mov
das
ss
cmp
in
dec
aad
hlt
fcmove
or
out
sbb
push
int3
sub
pop
hlt
add
test
addr16
imul
push
cmc
push
or
mov
mov
dec
ss
sahf
fsubl
outsb
jge
and
stc
mov
push
inc
xchg
dec
cmpsb
sbb
fnstenv
push
cmovbe
push
pop
pop
clc
push
mov
jmp
and
hlt
fstl
std
pop
ret
cmpsb
xor
mov
repnz
nop
out
clc
mov
orl
stc
popa
mov
mov
repz
sbb
cmp
xchg
dec
out
push
and
mov
dec
sar
aam
dec
jnp
sub
xor
pop
add
adc
pop
mov
inc
mov
push
dec
push
inc
xor
nop
inc
sbb
fsubp
adc
out
push
jmp
andl
testb
or
sti
popf
dec
xchg
jecxz
lock
cmc
cmp
repz
subb
shrb
xor
lret
jmp
sti
push
icebp
mov
aaa
dec
lods
stos
daa
dec
lret
mov
inc
icebp
arpl
dec
xchg
stos
mov
push
mov
or
lods
and
xor
sub
popa
cmpsl
and
add
jno
adc
mov
mov
xchg
jo
ret
int
fwait
out
decb
xchg
xchg
xchg
stos
loopne
or
in
out
dec
dec
repz
lods
add
into
rorb
mov
nop
fsubrl
and
fdivp
jmp
cmc
inc
sahf
cmp
into
cmp
xchg
jb
lods
lret
sbb
roll
es
mov
jge
inc
das
mov
lcall
or
cmc
jge
push
xor
loope
in
add
cmp
insb
cmp
pop
sub
shlb
fnstsw
add
subl
es
mov
jae
mov
test
lds
inc
mov
jp
fwait
dec
enter
sbb
test
dec
mov
js
or
pop
imul
or
lret
lcall
adc
add
jne
fstpl
ss
xlat
dec
mov
adcl
insl
ja
and
das
outsb
pop
mov
adc
test
lods
lahf
cmp
jg
test
jle
pop
adc
es
stos
leave
mov
xor
sbb
mov
push
insb
or
addr16
xchg
sub
repz
mov
popa
fstps
mov
cld
push
xlat
les
xchg
jmp
cli
cltd
lock
cmc
jb
mov
ljmp
fildll
insb
clc
sbb
cmp
test
lods
pop
scas
cmpsb
cmp
call
and
sbb
or
inc
sbb
mov
cmpxchg
cmpsb
not
add
imul
ficomps
ficomps
inc
in
xchg
jne
jmp
sub
arpl
xchg
cmp
pop
ret
daa
adcb
adc
nop
test
jg
test
xor
sarl
xlat
push
cli
ja
in
or
lds
push
mov
bound
fwait
and
cltd
shlb
mov
incb
xchg
jno
ds
or
add
lahf
loope,pt
popf
jg
fwait
outsb
cmp
pushf
pop
pop
jecxz
fdivl
cmp
sahf
pop
insb
dec
sub
nop
das
sub
xchg
lds
mov
cmp
sbb
test
sbb
pop
jecxz,pt
stos
aas
stos
pop
es
push
pop
inc
or
insl
cwtl
xchg
or
push
movsb
in
scas
pop
push
repnz
dec
push
sub
jbe
in
mov
cmp
sbb
clc
jmp
leave
fidivrs
test
sbb
rcl
daa
jmp
or
pop
fldcw
rcrb
enter
mov
lret
jmp
jno
and
add
mov
adc
addl
inc
and
repz
insb
adc
mov
leave
mov
out
std
sub
xor
mov
out
mov
sarl
insb
cmp
push
pop
push
hlt
test
loope
sti
sbb
outsb
adc
test
lret
or
into
xchg
in
push
push
ja
push
roll
ret
xor
adcl
daa
push
mov
push
and
fstps
dec
repnz
rclb
movsb
sbb
aad
sub
xor
shll
in
std
lds
xorl
mov
mov
pop
pop
adc
flds
ds
shrb
mov
jae
fbld
and
mulb
wrmsr
xor
cs
dec
icebp
aaa
repnz
dec
scas
sahf
xor
cmp
bound
push
push
jbe
mov
es
daa
adcl
mov
cltd
lret
cwtl
test
adc
xorl
sub
pop
in
xlat
pop
cltd
add
jecxz
jl
je
mov
insl
jg
jb
jmp
nop
popf
xchg
shll
js
sbb
movsb
lret
hlt
push
fmull
clc
push
mov
les
jl
mov
mov
std
bound
mov
xchg
pop
push
mov
mov
inc
inc
loopne
cmpsb
daa
adc
cmp
out
or
ret
inc
call
lcall
cltd
arpl
cmpl
and
sub
mov
pop
sub
mov
mov
xchg
adc
lea
sbb
lods
inc
jbe
dec
jmp
mov
fnstcw
es
push
rcll
inc
int3
cmp
mov
out
lds
or
mov
push
clc
xchg
fildl
dec
push
inc
adc
test
push
adc
mov
mov
push
int3
jp
xchg
or
rolb
dec
clc
das
mov
push
add
inc
inc
and
ja
filds
dec
xor
pop
fmull
enter
bound
fsubp
cs
imull
stc
xorb
int3
dec
dec
xor
int3
push
negb
jne
jae
jmp
imull
test
filds
jle
fsts
rorb
rcrl
cmp
sub
decb
sbb
jns
in
xchg
ds
cmp
jae
scas
mov
and
or
or
inc
dec
aam
fiaddl
test
jno
adcb
jg
pop
das
scas
cs
cmp
cmpsb
or
outsb
loopne
push
xor
cmpsl
push
bound
lods
aad
ja
scas
iret
mov
dec
jne
push
int3
mov
shl
fisttps
stc
lret
std
pop
and
mov
mov
mov
add
push
push
int3
pop
xchg
or
out
dec
rolb
mov
inc
cmpsl
adc
xchg
pop
cltd
fcompl
or
xchg
sub
in
jmp
xchg
dec
or
adc
pop
loopne
sbb
insl
inc
repz
dec
jg
roll
pop
mov
ljmp
leave
lahf
pop
sub
add
pop
push
sub
notb
add
jle
jns
sub
xchg
sbb
bound
cmp
pop
mov
insb
popa
jmp
mov
inc
lcall
cmp
pop
dec
mov
adc
add
cs
in
cmp
sbb
sub
jae
pop
or
lock
filds
out
ljmp
test
lcall
mov
add
or
mov
sub
arpl
push
mov
mov
into
leave
add
call
bound
xlat
out
arpl
fwait
xor
pop
clc
sahf
stc
fcompl
fisubrs
xchg
dec
xchg
movsb
clc
inc
aam
or
add
or
inc
out
dec
iret
and
pop
or
repnz
adc
outsl
pop
rcrl
mov
lret
rolb
and
movsl
lret
adc
shll
sbb
push
ror
cmp
mull
loopne
decb
pop
jnp
dec
fcmovu
cli
in
sub
fisttpl
int
dec
aas
lock
mov
in
xchg
adc
fs
cmpsl
ds
pop
jl
lods
ss
push
test
cmpsl
or
sar
es
fists
ja
pop
push
inc
push
mov
pop
xor
ljmp
mov
stos
divb
ret
jp
add
inc
mov
aad
stc
mov
call
test
cltd
clc
mov
icebp
enter
negb
dec
jp
jnp
out
mov
jg
pop
dec
adc
adc
movl
inc
mov
aaa
dec
mov
jae
fstps
dec
xchg
shr
cwtl
outsl
ds
imul
mov
xchg
xchg
movsb
mov
shrb
mov
adc
jo
jl
adc
into
xor
clc
jnp
ficoml
xorb
add
sar
lea
fdivrp
fisubrs
jnp
lret
push
sbb
xor
cmc
push
mov
lcall
or
aaa
les
xchg
sub
mov
push
sub
into
int
cs
addr16
aas
fisubrs
mov
ja
stos
sbb
data16
inc
inc
scas
fwait
movsb
push
mov
jp
mov
adc
jp
fistps
push
mov
dec
outsl
cwtl
leave
dec
test
notb
jg
int
sub
int
xchg
inc
and
cmpsb
out
jnp
lods
out
pop
cli
scas
sahf
jbe
push
or
das
fcomps
pop
sar
ja
pop
enter
lahf
mov
push
mov
mov
and
push
jne
clc
xor
stc
inc
xchg
dec
add
ret
adc
in
push
cs
xchg
je
outsb
data16
add
fcmovnu
add
loop
pop
inc
ficoms
add
jne
pushf
mov
pusha
and
jbe
fwait
out
cmc
and
xor
subl
mov
aas
stc
xchg
fldl
je
jnp
imul
in
out
jns
pusha
js
out
movsb
jno
mov
ror
mov
lods
cmpsl
mov
in
aad
sub
add
ret
out
addr16
add
cmp
jp
in
mov
or
sub
es
mov
jle
or
dec
mov
xor
cmc
sti
aam
jmp
jge
sbb
or
scas
shlb
sarb
jg
sbb
ljmp
test
je
cmp
out
mov
rcll
xlat
popf
test
jmp
xchg
sti
jno
scas
fsubrl
and
jb
sbb
gs
fistpl
inc
in
sbbb
push
addb
repz
sub
or
std
cmpb
cmpsl
daa
jp
testb
push
orl
add
add
cmp
into
shl
aam
out
shll
inc
xchg
shlb
hlt
jbe
divb
xor
mov
xchg
sub
and
ljmp
sbb
test
lods
pushl
int
sar
xor
aad
sbb
sbb
jo
test
movb
rcl
notb
mov
xor
call
xchg
adc
lret
adc
cmp
insb
xor
pop
iret
jl
cmp
sahf
leave
push
cmp
xchg
mov
push
pushf
sub
popf
mov
mov
in
dec
neg
cltd
jg
popf
xor
dec
jg
push
lcall
mov
lods
push
outsb
pop
lds
sub
add
xchg
fstl
in
sub
mov
xor
sarb
je
shld
jecxz
xchg
xor
cmpsl
addr16
shll
or
lret
xor
mov
mov
nop
push
fwait
outsb
test
test
je
mov
cmp
add
jmp
jbe
mov
sbb
aaa
dec
mov
mov
aam
push
cmpsb
loop
adc
flds
cmp
mov
mov
push
sub
jnp
cltd
ret
mov
rcl
imul
pop
shll
mov
insl
adc
mov
jmp
aaa
sbb
inc
mov
fadd
jae
pop
clc
ret
push
mov
lcall
int
ret
and
lods
inc
adc
jle
xlat
mov
mov
xchg
jecxz
lcall
pusha
data16
mov
fstl
xchg
pop
std
jne
mov
int
mov
inc
dec
mov
dec
xchg
je
mov
xchg
sbb
inc
sbb
sbb
pop
fidivl
into
pusha
out
test
int3
jne
mov
lea
in
xor
out
fwait
inc
andb
aad
fstpl
adc
push
jle
mov
dec
mov
mov
lods
into
pushf
inc
xor
mov
mov
enter
adc
ficoms
mov
notb
inc
mov
mov
push
adc
adc
mov
aas
inc
sbb
fildll
mov
popa
push
stc
mov
outsl
push
aas
mov
or
fisttpll
xor
jb
cmc
clc
test
push
xlat
cltd
jmp
xchg
les
repnz
mov
pop
pop
jo
or
ljmp
sbb
push
mov
or
mov
imul
xor
and
mov
mov
mov
arpl
sbb
js
lret
lret
adc
aas
mov
imul
fcomip
hlt
xchg
jle
mov
popf
scas
xchg
cmp
test
movsb
and
jle
pop
in
xchg
je
inc
xor
pop
xlat
and
les
rcr
mov
fwait
dec
nop
cmp
pop
mov
add
inc
sub
sti
pop
inc
inc
push
cli
dec
xor
sbb
push
sub
js
pop
sbb
jbe
cmp
push
mov
loop
xchg
sarl
loop
pop
jl
and
aad
mov
dec
jl
enter
push
cld
xor
mov
cld
cmp
push
sbb
fcompl
leave
loopne
cli
imull
xchg
repnz
push
into
lcall
popa
sahf
pop
jb
sub
mull
push
or
std
jno
mov
fwait
xor
mov
cmp
or
push
xor
jecxz
lods
mov
aad
mov
inc
std
pop
in
push
xor
cmp
xor
xor
jnp
pop
pushf
dec
push
call
loop
imul
mov
mov
mov
pop
stos
mov
stos
arpl
or
push
loope
and
push
push
repnz
sti
aas
mov
call
mov
push
mov
outsb
pop
xchg
dec
xchg
fs
push
sbb
in
insl
push
and
ja
xor
pop
out
push
imul
fstpl
dec
sub
hlt
imul
outsl
rorb
scas
xchg
xchg
xchg
shll
sub
sub
pushf
cltd
cmpsb
jns
ja
sub
push
jl
dec
mov
and
push
in
out
insl
les
cwtl
xchg
inc
les
sbb
in
jnp
insl
shll
sar
enter
cmp
enter
xchg
mov
jecxz
add
mov
iret
add
subps
and
popl
jge
cmp
jle
xchg
adc
imul
adcl
mov
cmp
xchg
jmp
adc
test
sbb
or
push
int3
push
cmp
pop
adc
jae
jg
loop
mov
sbb
xchg
pop
inc
pop
mov
in
scas
nop
sub
jmp
out
movsb
push
and
sub
xor
lret
ja
mov
icebp
icebp
fimull
fsts
bound
xchg
bound
mov
in
dec
mov
bound
negb
and
aas
ja
jns
pop
mov
and
cmpl
call
arpl
mov
push
add
scas
xor
movsb
push
mov
adc
movsb
ljmp
ljmp
cmp
pop
dec
push
in
pop
popf
push
enter
xchg
dec
jne
jnp
mov
popa
jae
test
popf
mov
sbb
imul
cld
outsl
xor
add
stos
ljmp
mov
jl
pop
xchg
ret
jnp
cwtl
test
and
xchg
sbb
sub
sub
pop
or
cmc
cmpsl
pop
icebp
movsl
xor
bound
fidivl
mov
xor
push
or
test
and
sbb
fsubrl
inc
or
or
jp
mov
pop
test
dec
or
add
mov
jne
xchg
negl
loop
sarb
fildl
ds
xchg
xchg
int3
inc
call
add
es
cld
push
mov
sbb
pop
rol
inc
xchg
jae
pop
stc
hlt
cli
dec
push
sarb
orb
fs
rcl
jmp
add
push
lods
mov
push
mov
aam
jno
jae
insl
inc
decl
pop
push
inc
inc
adc
inc
mov
fmuls
dec
icebp
out
dec
jae
or
hlt
rorl
cmp
lret
cld
jno
or
sarb
es
dec
mov
pop
sbb
mov
das
push
mov
pop
inc
call
fsubrl
mov
add
push
jmp
mov
sti
xorb
or
aaa
mov
out
dec
sahf
adc
rcr
stos
mov
ret
fisttpl
hlt
stc
or
out
mov
fisubl
pop
dec
push
arpl
mov
jg
loop
stos
sub
inc
sbb
mov
jb
rcll
mov
xchg
scas
dec
lcall
sub
ds
sbb
mov
mov
int
add
fidivl
ja
xor
pop
mov
loope
js
mov
adc
and
jge
pop
idiv
loop
mov
sbb
das
mov
jb
lods
sub
cmpsl
aaa
mov
pop
adc
and
cmp
cmpsl
inc
mov
stos
mul
call
movsl
add
insl
pop
fs
mov
sbb
push
stos
and
cmc
pop
xchg
dec
inc
mov
movsb
test
addr16
inc
sub
jp
add
rcrb
nop
xchg
ljmp
mov
push
in
xor
adc
mov
lret
jle
shlb
int3
mov
cli
pop
cld
imul
fdivl
sbb
lods
mov
xchg
adc
clc
xor
xlat
arpl
popa
aad
xor
sub
xlat
cmp
mov
mov
out
push
lods
fisttpl
movsl
daa
sbb
insl
jne
inc
lret
enter
cld
movsl
iret
sahf
xor
cmp
dec
mov
movl
jb,pt
nop
sub
and
mov
jno
ret
imul
sbb
loope
mov
imul
mov
inc
mov
jae
in
ljmp
psubw
bnd
xchg
sbb
pushw
in
sahf
into
add
sub
pop
imul
mov
sarb
scas
inc
mov
mov
push
nop
xchg
jbe
out
aas
push
sbb
or
pop
mov
mov
arpl
add
shlb
ljmp
test
mov
mov
nop
leave
leave
cld
xor
inc
cmpsl
lea
mov
testl
aaa
gs
push
add
sub
test
pusha
xchg
shlb
lcall
mov
mov
lret
jmp
loopne
fcmove
dec
shrl
xor
pushf
or
jge
sti
push
loopne
nop
or
hlt
add
jae
rcll
and
scas
faddl
mov
pop
notb
jnp
call
popa
pop
jb
inc
sub
or
ljmp
int3
pop
push
push
xor
push
xor
imul
sbb
aas
inc
fwait
cmp
push
lods
lret
mov
mov
orl
loope
ss
dec
aaa
mov
mov
stc
out
mov
daa
hlt
dec
fdivrl
pop
cmp
mov
into
or
xchg
xchg
lods
fistpl
cmp
pop
fxrstor
mov
in
paddw
mov
cli
push
mov
ss
cltd
inc
sarb
out
stc
jnp
push
sbb
dec
push
push
lods
test
aaa
loop
cmp
pop
sbb
sub
inc
xchg
add
rol
leave
or
adc
fldt
inc
lret
fwait
cli
aam
in
xchg
notb
adc
in
xchg
lock
mov
pop
cmc
test
push
movsb
lahf
movb
and
sub
cmp
cltd
aaa
lcall
jno
ror
mov
nop
stos
dec
dec
add
inc
imul
out
mov
int3
and
es
jo
add
sub
daa
and
mov
push
xor
mov
or
repz
inc
xchg
sub
mov
inc
loopne
js
fsubrl
jb
pop
xor
dec
stc
out
jmp
mov
xchg
mov
pusha
pop
sbb
fnop
mov
nop
dec
bound
or
xchg
dec
sub
add
out
xchg
xchg
cli
jne
mov
mov
mov
xchg
mov
push
scas
fnstenv
xchg
mov
in
lret
add
daa
lahf
push
adc
push
xchg
icebp
mov
lahf
xor
lret
jo
ror
mov
cmc
imul
sub
dec
arpl
fdivrs
roll
cmp
sarl
mov
sub
out
in
sbb
pop
pop
aad
jns
push
push
sbbl
xchg
push
jbe
out
outsb
jno
mov
enter
sub
cmp
jecxz
stos
inc
dec
lahf
stos
sbb
jle
sti
xorl
xlat
sub
pop
lods
xchg
ret
repnz
stos
pop
loopne
hlt
xchg
xchg
and
in
insb
pop
lcall
mov
pop
xor
outsl
out
nop
iret
add
int3
adc
pop
cmp
adc
mov
dec
cmp
cmp
cmp
and
test
or
lret
inc
xchg
out
jne
test
add
rcrb
inc
cmpb
or
in
adc
cmp
imul
test
pushf
and
xchg
push
add
push
and
xor
lock
mov
sti
push
sahf
sub
adc
nop
lahf
xchg
or
repz
ret
push
xchg
ds
jnp
in
sti
les
movl
jl
mov
cli
or
test
in
jl
fidivrl
xchg
lahf
add
pop
add
movsl
inc
test
cmpsl
stos
xor
add
push
orb
and
mov
in
mov
or
cmp
push
cmpsl
mov
cli
sbb
adc
ss
test
adc
mov
sub
insl
mov
sbb
cmp
enter
mov
cmp
push
fdiv
jmp
adc
xor
call
cltd
xchg
push
and
inc
hlt
test
or
mov
mov
popf
lea
call
adc
and
mov
stc
test
or
adc
mov
fcmovnu
icebp
arpl
xchg
stc
in
dec
and
dec
iret
mov
add
mov
or
jg
or
inc
rorb
dec
cmpb
dec
dec
leave
sub
push
xchg
jnp
cmp
xor
jle
pop
lds
decl
orl
mov
lahf
scas
pop
mov
loope
dec
xchg
sub
push
addr16
push
jle
ss
jno
insb
cld
jecxz
lret
pusha
or
pop
in
cmp
aam
mov
stos
out
xorb
outsl
sub
mov
xchg
xchg
push
in
inc
and
pop
mov
outsb
jo
aad
ja
mov
imul
jb
imul
adc
jb
fdivl
adc
xor
cmp
pop
ret
jnp
mov
dec
xor
ror
in
fdivrl
cli
pop
dec
jb
ljmp
xchg
cmp
cmp
dec
prefetch
je
mov
imul
mov
inc
shlb
int3
inc
loopne
pop
call
icebp
pop
push
adc
inc
or
sbbl
push
push
jae
inc
xor
pop
daa
push
test
mov
inc
or
cli
sub
into
lret
xor
int
push
aad
cmp
cmp
test
leave
lcall
out
out
rolb
mov
in
stos
movsl
pop
les
nop
mov
jle
lahf
cvtps2pd
dec
cmp
xchg
and
pop
aaa
fisubrs
jo
add
shrl
mov
test
sbb
pushf
xchg
insb
out
rorb
pop
ror
cli
cmc
push
mov
cmp
lock
inc
mov
mov
cmp
xchg
mov
andb
sbb
dec
inc
lret
mov
inc
testb
daa
jmp
xor
fwait
in
insl
pop
mov
imul
clc
cltd
xor
in
call
add
shll
fistl
dec
xchg
clc
or
mov
jb
xlat
insl
ret
add
imul
rorb
mulb
sub
inc
cld
pop
repnz
xchg
adc
ficoml
push
fistpll
ja
popf
orb
outsl
data16
jb
lods
pop
cmpsb
arpl
xchg
jns
push
push
sbb
imul
cmp
jp
or
jo
daa
jb
sahf
out
jl
ds
mov
sbb
sahf
cmpsl
xor
cmp
jnp
inc
mov
cmp
xor
test
outsl
xor
in
add
scas
inc
or
test
pop
mov
icebp
cltd
xchg
push
cmp
lret
mov
fdivrs
ficoms
xchg
pop
mov
xchg
popf
mov
test
add
sbb
lcall
xchg
lret
mov
leave
gs
sbb
push
into
xchg
lods
outsl
xor
add
jg
jo
xor
imul
stc
push
jmp
test
scas
xor
ret
jae
mov
sub
fdivs
inc
idivb
mov
push
ficompl
pop
dec
push
outsb
push
lret
mov
test
inc
insb
sbb
js
mov
fildl
fstpt
mov
bound
add
add
fwait
outsl
cmpsl
and
xor
orb
add
pop
enter
jmp
mov
pop
mov
sub
in
mov
jnp
mov
out
sbb
or
or
repnz
fsubr
xor
in
pop
inc
sub
scas
aam
jmp
loop
xor
in
mov
jno
std
mov
orb
xchg
or
ret
mov
or
fcoml
sub
hlt
out
insb
push
loopne
inc
mov
stc
and
jp
xor
mov
inc
and
add
aaa
fwait
cmpsb
push
in
movsl
lahf
jmp
push
in
insl
stos
push
jge
sbb
hlt
ret
inc
test
xchg
and
jl
dec
mov
pop
jo
jns
jecxz
pushf
jbe
shlb
or
scas
mov
inc
lods
pushf
je
cmp
leave
mov
pop
or
insb
icebp
jo
mov
out
addr16
push
cmp
loopne
pop
daa
xchg
ds
mov
clc
into
insb
dec
sub
dec
pop
call
jb
mov
nop
repnz
roll
xchg
xchg
and
insb
add
xchg
popa
dec
in
mov
outsb
les
nop
sub
ja
aaa
and
jle
in
inc
ja
mov
cmpsl
pop
inc
sti
sbb
int3
mov
ret
xchg
outsb
cmp
fisttpll
mov
loope
sub
push
pop
arpl
addb
decb
mull
rcll
sub
popa
fcmovnbe
aam
mov
es
xchg
js
push
psubusw
stos
jp
push
adc
add
andl
xlat
cmp
scas
sub
dec
in
in
cmp
je
addl
or
popl
lods
shll
sarb
and
sub
clc
jae
mov
fimuls
rcll
pop
dec
xor
ret
test
popa
mov
mov
mov
lcall
out
sub
ss
mov
aas
push
sti
push
mov
mul
daa
cld
mov
popf
sbb
pop
ljmp
cwtl
sbb
push
mov
push
jl
lret
sub
pushf
fidivs
pop
fisttpll
test
loope
in
mov
sub
mov
push
push
sahf
fildl
aas
inc
out
inc
test
mov
imul
in
jge
and
jp
pushf
add
add
outsl
lods
inc
sub
pop
aad
fisubs
xchg
nop
fs
inc
aad
xchg
aad
insl
fildll
sub
mov
mov
rcr
mov
bound
fdiv
lods
lds
fadds
sbb
iret
imul
sub
push
mov
dec
outsb
or
sub
adcl
scas
add
or
adc
lods
aaa
lods
sub
sbb
fwait
lahf
ret
ds
fistps
mov
and
and
lea
movsb
sub
or
ss
jns,pn
flds
sub
sbb
push
jbe
cmp
adc
call
mov
inc
les
lds
fs
add
addr16
add
jmp
insb
ss
dec
sbb
xlat
ret
mov
inc
movsb
insl
loopne
inc
imulb
mov
xor
mov
dec
insl
fs
ja
and
push
mov
cmpsl
fists
fidivl
jg
mov
cmpsl
imul
daa
jle
lea
inc
mov
sbb
jmp
jle
xchg
testl
test
jecxz
and
scas
std
cs
lcall
xchg
push
jne
mov
and
xchg
or
bt
lret
pop
ljmp
in
test
sub
xchg
int
push
cmc
push
sub
mov
inc
mov
outsl
xor
adc
or
rcrb
cmp
clc
or
push
mov
cmpsb
bound
fwait
insl
pslld
push
mov
sbb
push
pop
mov
mov
xchg
idivb
loopne
push
push
cmpsl
lret
fsts
call
mov
or
shl
xor
cmc
jb
xor
mov
jbe
jb
inc
mov
add
orb
cmp
sub
scas
sbbb
pop
inc
sbb
bound
jmp
xchg
imull
push
sub
in
add
push
mov
inc
dec
and
stos
rcrl
inc
pusha
int3
pop
loopne
sbbl
mov
movl
xchg
and
pop
cmc
cmp
sbb
add
add
sbb
adc
mov
outsl
inc
out
mov
outsb
jg
imul
jmp
cmp
xchg
in
and
mov
jo
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbbl
add
xorl
mov
mov
and
xor
and
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
push
push
or
xchg
add
jp
xchg
gs
jmp
addl
insb
lahf
cmc
loopne
les
jno
sbb
push
fcomp
sti
fisttpll
sbb
je
jno
add
idivl
dec
jno
xor
xorl
aas
sahf
lock
cmp
jecxz
fcompl
cli
mov
sti
in
int
dec
add
xchg
xchg
jno
inc
push
jge
lcall
cmp
mov
ret
xorb
jne
arpl
adc
xchg
aam
loop
out
cmp
fisttpl
cld
adc
movsb
nop
dec
sti
jno
push
jb
aad
xchg
insl
mov
jecxz
or
outsb
mov
add
mov
add
mov
sbb
lret
sub
movsb
xor
cltd
shrl
adc
xor
jo
xlat
pusha
out
and
scas
xor
fdivrs
jae
icebp
mov
adc
or
adc
sahf
ja
inc
jno
lods
mov
jne
in
shlb
rcrl
test
rcll
adc
mov
negl
arpl
sbb
mov
add
stc
iret
pop
sub
jbe
mov
andl
and
push
in
jl
add
mov
outsb
orl
and
test
into
subl
stc
insb
inc
movsb
sub
iret
xchg
mov
add
arpl
out
shrl
xchg
mov
jns
mov
push
adc
arpl
mov
pop
jb,pn
mov
dec
jno
das
sahf
push
and
out
xor
bt
insl
cmp
add
mov
in
flds
dec
jecxz
pop
jmp
pusha
ja
cmc
mov
insl
pop
adc
jb
jge
fs
dec
or
adcb
dec
sbb
xchg
adc
rorl
xlat
xchg
mov
add
fistpll
mov
mov
rorl
dec
daa
xor
push
into
mov
add
lods
arpl
adc
push
add
fs
mov
add
pop
push
das
dec
shl
mov
adc
jno
inc
and
fld
jmp
rclb
cmp
cwtl
nop
adc
aam
adc
cltd
in
xor
mov
cmp
mov
xchg
pop
and
lret
pop
lock
hlt
scas
inc
add
popf
adc
jl
lahf
std
xchg
out
loope
or
mov
pop
pop
inc
stc
sbb
enter
into
enter
cmp
popa
jbe
sub
xchg
ljmp
xchg
add
push
fsubs
ficoml
mov
and
rclb
es
sti
sbb
mov
add
push
cmp
shrl
push
cmp
outsl
cmp
dec
sbb
xor
pop
or
xchg
push
or
mov
mov
push
test
xor
into
push
mov
push
insl
lea
or
clc
or
sarb
jne
insb
pop
mov
lahf
hlt
pop
cwtl
fscale
jmp
in
pop
or
mov
gs
add
ds
inc
and
mov
ljmp
test
scas
xchg
inc
jecxz
pop
lret
repz
jge
stos
aaa
cwtl
ds
leave
pop
push
push
xchg
push
orb
rcll
mov
xor
mov
xchg
pop
and
push
pop
jno
arpl
shlb
test
or
movsl
add
cs
dec
imul
rcrb
fwait
mov
add
push
mov
aaa
lret
repnz
sarb
test
sub
cmp
ja
adc
les
xchg
pop
getsec
shlb
out
call
sbb
and
push
imul
jne
test
mul
jnp
into
repnz
pop
cmp
xchg
sarb
insb
rol
insb
or
xchg
mov
xchg
test
xchg
xor
pop
mov
in
lods
fsub
push
in
pop
xor
mov
pushf
push
pop
sbb
mov
imull
or
and
es
fcoml
cmp
jecxz
mov
sbb
icebp
cmc
and
popa
aaa
fadds
clc
dec
in
into
or
sbb
xor
push
pop
sub
and
scas
lahf
mov
inc
add
inc
mov
lcall
jecxz
cltd
jecxz
repz
js
xchg
inc
jle
fs
ja
adc
das
in
fisttpll
dec
dec
pop
mov
std
sti
pop
push
xorb
iret
push
gs
inc
pop
or
fwait
jno
xchg
andb
loope
and
pushf
inc
push
and
push
mov
cli
xchg
mov
int
mov
cmpsl
jbe
jecxz
jle
imul
inc
pop
xchg
int3
outsl
add
imul
xor
mov
movsb
insl
push
arpl
popf
les
cmp
sbb
notb
loopne
outsl
out
sti
addl
inc
or
push
pop
jge
ret
add
shl
je
pop
or
sahf
xchg
repz
mov
insl
stc
dec
ja
inc
pop
push
sbb
rol
icebp
lret
jmp
sub
lea
test
dec
pop
lret
clc
or
aad
cmpsl
or
fstpt
ficompl
jo
sub
outsb
dec
mov
push
jmp
arpl
jne
fidivrl
inc
mov
int
call
mov
mov
lret
push
dec
add
or
test
pop
push
adc
popa
cltd
movb
adc
adc
jae
into
inc
mov
push
push
mov
mov
adc
outsl
mov
xchg
push
lcall
les
push
mov
std
in
inc
repz
mov
mov
leave
ljmp
pusha
pop
pop
fldl
sub
shlb
jae
gs
or
cmpsl
mov
enter
sbbl
je
jmp
mov
xchg
out
inc
push
add
xorb
movsl
xor
xchg
jo
rcrb
xor
popa
in
pop
xorb
pop
jae
lahf
and
inc
cld
and
cwtl
sub
mov
es
call
outsl
sbb
fsubr
mov
and
movsl
pop
loope
ss
jge
sahf
fiaddl
or
scas
mov
adc
sar
arpl
pusha
push
sub
pavgw
jb
jbe
movsl
sub
push
movsl
test
mov
incl
sbb
cltd
and
xchg
out
test
cmp
adc
fwait
push
insl
sti
inc
and
out
jne
sbb
lock
cmp
pmullw
movsl
mov
or
lcall
clc
jp
jno
fsubp
test
jnp
and
push
cmpsl
adc
arpl
idivb
fs
xchg
imul
xchg
fstps
lahf
clc
and
mov
lods
mov
inc
stos
lds
pop
out
push
push
pop
mov
adc
xor
cmp
xchg
jae
cltd
and
pop
test
add
test
jg
sbb
fucom
push
dec
add
nop
outsl
outsb
nop
or
lods
ffree
lahf
dec
cmc
mov
mov
xor
push
inc
push
test
push
popf
mov
adc
repz
mov
jno
iret
ret
sbb
mov
repnz
push
dec
sbb
mov
and
mov
mov
outsl
dec
pop
xchg
push
dec
push
pop
cmp
loopne
cmp
and
cmp
cs
in
cmpsb
cmp
push
cltd
movsl
mov
sub
jge
mov
xor
mov
xchg
in
xor
or
ret
test
outsb
popf
or
push
lods
jp
into
lods
cmp
test
fistpll
jg
out
fwait
inc
mov
insl
lahf
rol
fwait
sbb
add
cmpsl
jo
fstl
and
fidivrl
js
or
iret
push
mov
mov
mov
or
sbb
adc
stc
push
mov
adc
xor
adc
and
cwtl
leave
mov
dec
adc
mov
or
lahf
pop
ss
pop
roll
fnstsw
in
insl
pop
fimuls
cmp
mov
scas
mov
call
sbb
imul
xor
pop
inc
stos
and
imul
insl
in
or
mov
mov
lahf
and
sahf
and
cwtl
cmp
and
out
jmp
push
ds
outsb
stos
sub
add
pushf
mov
pop
pop
ret
pop
shlb
es
xchg
and
pop
add
aaa
loopne
pop
das
lcall
or
addr16
divb
cmp
xchg
fnstenv
mov
adcb
out
test
daa
sbb
dec
push
nop
mov
dec
repnz
rcr
shrb
cmp
push
jbe
je
ljmp
ret
sub
test
into
add
mov
xchg
push
pop
dec
js
inc
dec
pop
scas
mov
shrb
xor
xchg
push
loop
imul
push
nop
push
pusha
push
add
lods
stc
ljmp
iret
test
mov
sub
movsb
push
les
flds
push
jbe
push
jb
aas
or
xchg
lret
adc
cmp
mov
subb
inc
xor
in
ljmp
rorl
cltd
ds
sar
ret
cmc
or
cmp
dec
leave
movsl
cli
inc
clc
push
mov
nop
cld
mov
fistpll
scas
dec
movl
mov
inc
push
and
and
scas
es
mov
icebp
cwtl
testl
xor
pop
adc
mov
das
xchg
stos
int
push
call
add
vhaddpd
xchg
sub
cld
sub
cmpsb
cmp
movsb
in
cld
fsubs
mov
dec
mov
pop
cmp
lock
and
mov
sub
sbb
mov
jp
xchg
xchg
mov
enter
push
push
xchg
out
and
data16
pop
cmp
cmp
mov
lret
fwait
jecxz
int
jp
bound
and
ret
insl
jae
xchg
hlt
jne
xchg
mov
repz
pop
jmp
popf
xchg
jo
or
jge
mov
jle
xchg
xchg
iret
nop
out
roll
das
orb
imul
xor
sbb
pop
data16
movsl
push
sub
pop
lds
les
test
scas
pop
leave
pop
mov
enter
shrl
ds
icebp
ret
cmp
shlb
stos
jp
ret
cmp
or
dec
mov
fisubs
add
and
ds
mov
pop
clc
out
adc
adc
mov
repz
adc
movsb
ret
cmp
sahf
lcall
adc
lahf
cmpsb
pop
dec
pushw
sbb
add
dec
imul
repnz
out
js
call
aad
aaa
and
and
and
ljmp
std
test
and
mov
sbbl
cmpsb
in
xchg
push
and
lea
push
jl
cmp
xlat
mov
subb
test
out
add
xor
cmpsb
xor
int3
push
icebp
jge
mov
dec
mov
ss
imul
pop
lea
mov
arpl
fsubrs
pop
call
cmpsl
pop
fimull
cwtl
addb
and
jbe
dec
pop
and
icebp
jl
push
subl
mul
mov
fildl
push
fmull
mov
repnz
in
push
jmp
inc
or
mov
sbb
jns
jnp
dec
mov
leave
inc
cmp
ret
orl
sbb
das
in
xchg
sub
mov
or
ss
mov
bound
shlb
jae
std
ret
mov
int3
pop
rolb
mov
test
les
lds
mov
dec
mov
adc
cmpsb
dec
cmpl
inc
movsl
and
push
int3
enter
insl
cmp
rcrl
mov
out
mov
shll
fs
lahf
aaa
shrl
jecxz
out
pusha
adc
clc
ja
mov
test
fs
cmp
xor
sub
adc
mov
cli
jge
cmpsb
push
pop
sbb
mov
movl
push
leave
push
fs
mov
or
insb
jns
or
xor
jg
mov
loopne
pop
fidivrl
loopne
test
push
add
insb
jnp
mov
jae
arpl
and
adc
in
mov
add
xor
push
in
sub
cmp
in
daa
out
or
sub
out
in
loop
lods
imul
data16
ljmp
sub
and
jmp
loop
sub
scas
adc
dec
cmova
jno
xchg
nop
fstps
sbb
mov
push
in
icebp
jp
xor
sbb
cwtl
push
aaa
fs
mov
lea
add
lea
sub
dec
adc
call
mov
cmp
and
mov
or
jbe
fwait
pushf
test
pushf
lock
mov
jecxz
push
imulb
loop
cmp
ds
lret
clc
add
inc
cmc
or
push
pusha
enter
shlb
pop
sbb
mov
iret
sub
cli
mov
cmp
mulb
outsl
into
lahf
and
into
std
das
adc
lahf
push
dec
xlat
mov
adc
lods
inc
cmp
lods
add
sub
xchg
mov
and
ret
fldcw
adc
adcl
push
test
lret
in
scas
push
jmp
sub
pop
jae
mov
into
hlt
xchg
mov
jge
ljmp
pop
cmp
fpatan
test
inc
mov
icebp
repnz
loope
ret
fldenv
mov
add
es
jg
into
xchg
sbb
cli
mov
loopne
push
popf
adc
cmp
nop
mov
imul
fs
cltd
pop
les
lret
mov
int3
push
sbb
cltd
insb
sbb
adc
data16
xchg
bound
xlat
js
mov
mov
subb
out
cmpsl
xchg
xchg
inc
xor
or
fildl
xchg
loopne
sub
daa
fbstp
lods
arpl
pop
pop
add
jbe
and
sti
or
jg
jp
jle
add
jmp
dec
jl
stc
mov
stos
sub
inc
repnz
rcrl
mov
mov
pop
sub
adc
imul
mov
sbb
jmp
stc
movsb
dec
inc
shrb
fdivrs
jmp
xchg
movsl
shlb
cmpb
or
fcomip
mov
rcll
int
stos
xchg
sbb
gs
idivl
jg
enter
jge
xor
mov
repz
push
xchg
sbb
test
mov
dec
xchg
data16
adc
aam
pop
andb
add
mov
jg
mov
pop
sub
std
xor
lock
mov
les
clc
cmp
test
int
pop
insb
mov
pushf
jno
repnz
insl
mov
adc
arpl
jo
pop
cmp
inc
fidivs
xchg
fsubs
or
mov
push
jbe
cmp
sbb
and
call
movsb
adc
mov
pop
push
jl
jb
pop
pop
stos
ds
jmp
cmp
inc
mov
fst
in
aaa
mov
cmp
push
out
cmp
out
nop
mov
xchg
pop
xchg
es
pop
and
mov
sti
rcll
or
cmpsb
push
pop
push
imul
inc
xchg
bound
fsubl
or
lea
and
inc
imul
icebp
lahf
xlat
and
or
movsb
xor
mov
dec
out
add
xor
repz
mov
xchg
cmp
test
pop
and
sub
lret
lret
call
and
lods
and
aaa
arpl
mov
jbe
js
loope
pop
hlt
jne
jne
lret
movsb
dec
or
clc
sti
cld
rclb
jnp
loope
sbb
lea
iret
mov
mov
inc
pop
mov
jle
pop
xor
inc
xorb
mov
mov
adc
adc
fcmovu
mov
sub
icebp
push
cmp
jno
fcmovne
stos
mov
lds
mov
sbb
xchg
cmp
jae
mov
dec
lea
jl
mov
adc
lret
test
scas
or
push
inc
xor
movsb
dec
cli
insl
int
xor
push
xchg
ficoml
out
sti
or
xchg
jle
scas
in
insl
or
add
mov
mov
iret
gs
loop
sbb
aad
or
lret
adc
adc
mov
insl
jae
in
nop
lods
test
pushf
push
xor
xor
mov
inc
mov
call
mov
mov
add
sbb
nop
popf
fwait
mov
cmpsl
mov
mov
xchg
sti
ss
leave
and
pushf
jae
scas
aad
leave
xchg
addr16
imul
in
js
insb
nop
jmp
and
cli
push
mov
dec
cli
mov
clc
and
sub
cmp
dec
mov
int3
jmp
std
call
fucomip
lods
pop
in
in
inc
mov
lock
clc
in
dec
cld
push
xchg
jle
cmc
aad
hlt
jnp
push
mov
dec
inc
inc
jmp
xchg
xor
pop
dec
mov
mov
sub
fstps
dec
mov
push
mov
or
mov
cltd
es
std
xchg
inc
out
mov
jo
mov
or
jne
push
incl
push
mov
iret
addl
movsb
jecxz
push
mov
xor
inc
movsl
mov
icebp
add
mov
mull
xchg
adc
cmc
outsl
jae
jl
sbb
dec
outsl
outsb
and
cmp
mov
mov
jecxz
jns
mov
push
loope
out
mov
ret
test
mov
xor
adc
lock
rcll
adc
jne
mov
aas
pop
fists
pop
or
mov
pusha
fsub
sub
sti
and
outsl
inc
jae
sbb
and
mov
fcompl
pop
jecxz
into
fwait
call
es
mov
rcl
xor
jnp
mov
xor
and
mov
imul
sti
or
mov
loopne
sahf
cmp
sbb
cld
outsb
inc
xor
nop
and
cli
jns
mov
nop
cltd
aam
gs
jns
fcmovbe
sti
mov
xchg
jle
or
push
insl
push
fidivl
out
and
push
into
mov
pop
jge
imul
mov
in
insl
push
out
and
scas
mov
adcb
dec
ret
xor
fdivs
iret
lock
xor
jns
mov
push
data16
repnz
xor
loop
push
dec
les
mull
sbb
lods
dec
jecxz
sub
je
pop
adc
jb
mov
js
dec
adc
add
jg
clc
mov
inc
dec
jp
sub
hlt
pop
dec
push
dec
mov
mull
push
add
adc
add
pop
scas
bound
mov
sub
xchg
jns
in
stc
ss
daa
or
cld
int3
imul
in
cmp
in
mov
adc
mov
fnstenv
or
mov
in
jns
in
jge
jbe
and
into
int
orb
in
mov
lahf
out
cli
pop
sub
inc
mov
jle
mov
inc
out
iret
or
test
xchg
mov
outsl
fsubl
lods
les
push
mov
subl
out
push
add
outsb
mov
mov
inc
push
jno
push
push
push
test
pop
mov
jg
in
push
out
pop
mov
mov
ret
or
mov
or
ljmp
shl
mov
pop
addb
mov
dec
add
push
add
dec
lods
adc
cld
pop
xchg
and
lcall
push
inc
das
xorb
xchg
js
pslld
in
pushf
cmp
fwait
jecxz
pop
fnstenv
cmp
andl
clc
int3
fcoml
and
out
adc
or
dec
ss
test
lds
pop
add
sbb
enter
es
call
movsb
xchg
cltd
pop
daa
pop
adc
int3
cltd
subb
or
fisubl
push
pop
add
xlat
mov
and
push
mov
test
xchg
xchg
cwtl
inc
call
scas
hlt
lcall
div
xor
leave
mov
xor
and
arpl
jae
loopne
jae
pusha
mov
jl
mov
jae
jmp
push
xchg
jl
neg
ds
xor
xchg
adc
mov
sbb
addr16
push
push
lods
fsubl
sbb
scas
mov
notl
mov
test
adc
es
mov
js
fmull
push
jno
popf
out
and
sub
jae
rcl
push
scas
jl
xlat
inc
xchg
ret
mov
call
scas
dec
sbb
inc
mov
outsl
fwait
lock
pop
testb
addr16
mov
addl
xlat
pop
dec
dec
pop
inc
and
push
sub
in
sub
push
outsl
enter
mov
cmp
jno
sub
lret
sbb
addr16
xor
mov
cltd
cmp
ret
mov
mov
sub
cmp
lods
push
inc
mov
cmp
outsl
stc
stos
sub
fidivl
and
or
aas
push
pop
ja
adc
movsl
xor
inc
cmpsb
lret
movsl
sub
xorl
in
stos
pop
out
jl
mov
mov
xchg
jno
mov
xor
xchg
lods
add
jae
test
mov
push
push
mov
mov
ss
lods
iret
push
scas
push
in
add
fisttps
rolb
aad
popa
lods
mov
push
adc
outsl
enter
sub
sti
mov
outsb
cmp
sub
sysenter
faddl
xchg
pushf
pop
popf
mov
push
mov
loopne
repz
cmpl
mov
add
incl
ljmp
add
push
xchg
bound
xor
push
jno
mov
push
mov
sbb
in
pop
xor
ja
xor
inc
sbb
leave
xor
adc
fcomps
xchg
aam
or
add
adc
adc
and
jl
into
push
mov
movsl
fldt
adc
fcmove
dec
ss
into
stos
out
push
dec
cmpsb
lret
aas
outsl
pop
or
ret
cmc
mov
movsb
xor
loope
cmp
sbb
jnp
fdivrs
pop
js
push
out
jae
cmpsb
mov
enter
rcrl
or
int3
sub
lahf
jns
jp
js
pop
dec
inc
xor
jbe
push
cmp
sbb
adc
xor
daa
gs
sbb
xchg
xchg
mov
jns
cmp
mov
icebp
jae
daa
cmp
or
mov
bound
subb
out
cli
ret
mov
pop
pop
cmp
les
inc
mov
and
or
xchg
or
xchg
leave
jg
fsts
lret
jmp
pushf
sbb
sub
movsb
pop
jb
icebp
rolb
inc
push
push
cs
pop
add
push
clc
leave
popf
sbb
std
fldl
sbb
inc
sub
push
inc
xchg
jecxz
push
ljmp
xlat
pushf
daa
xchg
int
std
fldt
repnz
je
rol
mov
jae
leave
fidivl
add
nop
fwait
xor
sahf
scas
inc
aad
lock
push
or
mov
das
xor
inc
jecxz
xchg
cltd
mov
and
sub
or
push
and
ljmp
stos
lods
xlat
adc
push
jl
cmp
sbb
inc
mov
sub
pop
xor
sbb
rcrl
repz
std
jbe
idivb
push
cmovo
out
mov
xchg
ja
adc
pop
add
or
aad
test
jb
ret
mov
lods
cmpsb
into
loop
mov
subb
mov
dec
cmc
loope
sbb
dec
jmp
mov
mov
out
rcl
cli
out
leave
es
lahf
fwait
in
mov
fistps
lea
mov
orb
andl
inc
stc
dec
xchg
repz
mov
lret
stos
test
lret
and
bnd
cmp
popf
cli
jnp
push
add
add
mov
sub
mov
push
dec
rclb
xor
imul
out
cmp
mov
cmp
jnp
mov
in
add
incl
aad
mov
inc
call
out
adc
ljmp
jle
pop
stos
lret
roll
xor
mov
inc
movsl
call
sub
sub
mov
dec
nop
sbb
mov
fxch
in
outsl
and
fcoms
gs
jne
dec
mull
fsubl
mov
movsb
outsb
push
mov
test
mov
pop
push
mov
outsl
or
jb
fistl
add
idivl
js
fistpl
push
inc
jl
xchg
popa
mov
mov
ret
mov
or
sbb
jbe
aad
aaa
mov
and
push
in
adc
dec
add
mov
mov
ja
subl
pop
or
mov
cmp
test
adc
mov
mov
mov
mov
es
je
cmp
xchg
gs
xor
in
int
dec
mov
les
sar
pop
imul
mov
sarb
loopne
ljmp
mov
mov
mov
inc
add
sar
mov
rolb
cmpsl
lock
sub
add
mov
jne
outsb
adc
add
add
inc
ss
cmc
test
test
xor
pop
jo
cmp
dec
daa
xor
mov
sbb
push
rcrb
mov
push
add
ds
pop
ss
shlb
fnstsw
jbe
shll
jmp
arpl
dec
or
sbb
jbe
xor
jmp
outsl
neg
pop
xor
push
icebp
pop
es
pop
sub
pop
mov
mov
es
shr
or
cli
in
lret
scas
xchg
out
push
fcmovb
cltd
sahf
mov
daa
push
pusha
mov
inc
imul
outsb
sahf
mov
shr
jl
xchg
or
and
aas
pushf
sub
xor
mov
fmull
das
xchg
push
popa
lret
xchg
add
out
pop
push
and
inc
push
mov
notb
jmp
test
inc
push
je
jb
fbld
pop
sbb
adc
push
test
leave
jl
add
pop
or
test
out
fistps
xor
icebp
mov
pop
cli
sbb
push
mov
lock
pop
mov
inc
data16
pushw
and
fs
fsub
push
mov
adc
push
adc
mov
loop
test
and
jne
mull
jg
mov
sub
cld
xchg
pushf
dec
mov
mov
arpl
ret
fyl2xp1
cmp
adc
sarb
iret
or
mov
hlt
jg
and
dec
out
adc
jno
adc
cltd
cli
add
add
sub
push
mov
dec
mov
out
push
cmp
stos
inc
mov
sti
lret
iret
dec
test
daa
int3
xchg
lea
mov
inc
out
mov
mov
jle
stc
pop
out
mov
mov
or
leave
bound
test
adc
or
xchg
leave
xor
dec
xor
push
out
cmp
pop
aad
mov
repnz
jno
int
pusha
push
push
pushf
jne
lcall
not
lahf
jns
sub
leave
add
ficompl
mov
mov
xchg
push
xor
sbb
in
ja
notb
jg
push
and
out
xchg
popf
and
xor
js
inc
push
push
or
add
out
xor
sbb
push
pop
ret
jnp
imul
inc
cwtl
fiaddl
fld
push
xchg
in
xchg
add
jno
mov
pushf
sub
mov
lcall
mov
mov
out
fiaddl
fadds
pandn
out
jno
mov
shl
dec
xor
xor
inc
int3
hlt
xchg
fldenv
xchg
call
shll
push
sub
mov
jb
popa
iret
push
movsl
mov
adc
xchg
out
and
iret
mov
loopne
or
mov
or
imul
fs
sbb
xor
mov
and
push
fiaddl
jb
repz
jns
fstpl
push
inc
cmp
mov
cmp
xchg
mov
add
aas
adc
shlb
stc
or
es
pusha
out
stos
mov
es
bound
dec
jmp
flds
jge
push
loope
push
into
mov
out
cmpsl
cmp
outsl
movb
scas
outsb
cmp
shll
lods
or
add
xchg
cmp
fadd
insb
adc
pop
jmp
add
xchg
and
sbb
frstor
repnz
ja
lea
lea
adc
fimull
fdivs
mov
mov
pop
push
sub
mov
pop
js
lahf
jmp
daa
push
mov
jnp
xchg
sub
push
mov
jne
cmc
dec
pop
jno
xor
sbb
in
fsubs
into
jp
xor
inc
fwait
leave
cmc
or
push
xor
sahf
orb
testb
xchg
or
jns
inc
cltd
adc
je
cmp
cmp
hlt
sub
ja
mov
lahf
add
fucompp
aas
push
adc
push
jb
incb
xor
mov
inc
stos
or
in
push
pop
lds
scas
pop
or
inc
add
into
adc
decb
inc
pop
mov
pop
shr
jmp
pop
cmp
imul
cmpsl
popa
pop
pusha
xor
and
shlb
mov
data16
jp
push
in
pop
dec
mov
push
fnstcw
loopne
fstps
xor
jno
mov
das
pushf
mov
sub
lret
inc
jae
mov
lahf
mov
push
outsl
sbb
cwtl
loopne
sub
in
cmp
pop
mov
mov
xchg
cmpsb
mov
dec
push
xchg
sub
imul
pop
xchg
or
sahf
sub
pop
mov
and
push
ljmp
js
addr16
enter
les
xchg
dec
dec
sub
enter
aas
xchg
sub
je
add
xchg
or
cmp
imul
pop
xchg
int3
out
jmp
adc
stos
inc
mov
pop
sbb
push
out
xchg
popf
jmp
sbb
fcmovnu
rorl
dec
cs
xor
add
push
or
pop
push
aad
and
mov
outsb
nop
sahf
jp
insb
pop
out
add
mov
jge
stc
mov
movsb
xchg
lahf
out
pop
aad
in
adc
jo
xchg
pusha
fistpl
dec
inc
pushf
push
shlb
xchg
inc
das
dec
jae
xchg
sti
pushf
fbstp
test
cmpsb
mov
xor
bound
adc
cmp
sub
add
jo
adc
test
and
sbb
fwait
jecxz
test
rorb
loopne
insl
add
and
xchg
pop
leave
ret
push
mov
sub
or
mov
adcl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
sbb
movzwl
sbb
mov
movb
and
lea
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jge
jmp
call
cmpl
jb
mov
xor
movl
inc
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
mov
push
orl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
addl
add
sbbl
movzwl
andl
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
pushl
call
cmpl
jb
mov
movl
movzwl
xor
add
movl
mov
mov
mov
inc
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
jmp
mov
xlat
and
mov
js
xchg
adc
jl
inc
pop
addl
pusha
push
jns
in
fcmovu
mov
jbe
ja
push
push
inc
rorb
fistpl
sub
mov
pop
push
lahf
bound
xchg
out
outsl
cmp
dec
das
jmp
cmp
mov
hlt
stos
pop
cs
and
popa
xor
fistpl
cwtl
mov
xor
push
jne
push
mov
enter
xor
cmp
fsubs
mov
rcrb
jl
mov
add
push
jns
fcoms
push
jns
daa
mov
outsb
outsl
repz
shr
cmp
cmp
adc
mov
fxch
mov
aas
and
movsl
or
xor
mov
sahf
sti
xlat
bound
insl
mov
sti
movsl
in
pop
bound
out
sbb
popa
add
lock
add
repnz
mov
inc
test
push
imul
pop
imul
ja
sahf
rolb
fisubrl
call
hlt
jle
and
scas
lds
cld
add
xor
subb
mov
in
in
sub
stos
roll
pop
mov
jbe
and
cmp
inc
jmp
mov
cmp
xor
pop
sub
pop
es
add
sbb
es
int
pop
adc
movsb
and
insb
push
int
sub
repnz
and
push
out
or
test
outsl
imul
loopne
imul
jns
mov
inc
dec
xchg
jo
xor
jb
dec
pop
out
jns
in
dec
push
fdivs
ret
int
pop
incb
mov
aaa
fcomps
cmp
loop
push
pusha
filds
xor
mov
int
inc
adc
xchg
xchg
dec
shrl
call
cmc
add
sub
add
jmp
pusha
test
dec
jno
scas
adcb
xor
mov
lcall
cwtl
mov
lods
xor
fisubs
jne
cmp
push
std
and
js
mov
jnp,pt
ljmp
int
jae
xchg
or
sub
enter
cmp
fucomi
jmp
icebp
aam
mov
out
pusha
inc
test
sti
call
je
ljmp
out
call
imul
xor
insl
ds
sub
adc
aaa
movsb
xchg
xchg
nop
push
push
jle
std
out
out
movsb
mov
js
out
push
pop
pop
jae
dec
insb
call
mov
jl
test
xchg
pop
sti
mov
pop
test
ja
movsb
mov
sub
nop
stos
xchg
ss
lret
adc
xlat
adc
dec
sbb
in
leave
mov
push
add
dec
xchg
and
into
in
into
inc
mov
imul
dec
push
incl
xchg
inc
add
adc
or
sti
dec
jns
and
daa
push
mov
int3
fildll
dec
and
push
cmp
mov
sbb
dec
leave
xchg
dec
sti
cltd
in
ja
adc
mov
and
push
jmp
dec
push
lods
push
inc
jl
mov
xor
sbb
xor
arpl
dec
movsl
imul
jmp
jb
fistl
in
push
loop
sbb
push
dec
aad
nop
aas
in
arpl
lea
mov
imul
test
xor
push
std
adc
inc
fldenv
cmp
sbb
push
or
jle
scas
jnp
sub
inc
out
into
xor
cs
rcll
cmpsb
inc
xchg
daa
jl
scas
out
mov
mov
int3
loope
std
or
hlt
adc
sub
fcomp
adc
jns
ljmp
add
lods
out
and
mov
fisttpl
cwtl
pmulhw
fimull
mov
and
mov
xor
xchg
or
dec
in
lret
dec
repz
cmc
bswap
jmp
mov
lods
cmp
mov
mov
jo
jae
push
rol
mov
ficoml
pop
mov
ret
aas
int
in
stos
and
insl
enter
xchg
loopne
repz
jb
sarb
sub
dec
mov
or
push
pusha
jae
dec
jno
xchg
push
test
out
es
push
add
fsubr
mov
outsb
leave
notb
test
add
dec
scas
xchg
mov
sbb
jmp
xlat
xchg
cmovge
hlt
sbb
int3
mov
in
jp
repz
fisubrs
push
and
sbb
jle
insb
xor
scas
enter
cmp
clc
jecxz
add
adc
movsl
and
test
xchg
fwait
inc
xchg
inc
fistl
xor
xchg
ljmp
je
adc
jae
cmpsl
addr16
stos
sub
xlat
mov
sbb
dec
jb
xchg
adc
or
js
mov
xchg
pusha
sti
pop
pusha
mov
or
jnp
outsb
or
ss
jl
or
inc
xchg
add
adc
bound
sbb
ljmp
ret
push
xchg
popf
or
cmp
fmul
inc
inc
xchg
ret
sti
dec
sub
jo
xsavec
sub
and
or
dec
wrmsr
sbb
mov
rcll
sub
fidivs
pushf
in
cmp
ror
loope
pop
adcl
call
fcmovu
fldenv
or
sbb
pop
negl
and
dec
pop
jo
mov
ljmp
cmc
ja
sbb
jmp
mov
pop
test
daa
push
sub
adc
cmp
in
jnp
mov
push
test
push
jmp
movsl
push
in
lahf
sub
nop
pop
aam
jb
repz
jl
sti
pop
nop
jmp
test
cmp
lea
nop
out
or
lods
cltd
mov
aad
xchg
inc
sbb
jp
jle
xlat
lahf
insb
mov
rcl
mov
data16
outsb
pop
pop
jno
xor
mov
and
add
lcall
xchg
push
mov
inc
mov
jno
push
jl
les
movd
fstl
cmp
mov
scas
mov
addr16
out
test
js
mov
sahf
test
lds
mov
int
pop
mov
ret
pop
outsb
addr16
mov
imul
pop
jo
mov
mov
mov
inc
movsl
jno
sub
mov
jns
test
push
jnp
cmp
push
movsb
sbb
add
fs
and
push
hlt
xor
mov
iret
xor
or
push
mov
pushf
ret
mov
lret
push
roll
cltd
in
and
ds
cmc
dec
pop
push
dec
or
dec
mov
stos
insl
cmpsb
mov
jne
or
add
testb
pop
subb
mov
mov
fdivr
aas
rcll
divb
test
xchg
inc
mov
mov
and
xor
add
ljmp
scas
sahf
adc
sub
jg
and
cmp
inc
aad
mov
mov
repz
and
dec
sahf
mov
aam
jns
ljmp
sub
insl
xor
mov
jl
sbb
int
inc
or
insb
repnz
mov
or
dec
gs
das
lcall
push
push
push
cmc
pop
mov
mov
push
add
pop
xor
mov
pop
fisubl
cltd
pop
loopne
arpl
pop
and
dec
int
les
xchg
mov
mov
adc
lcall
sahf
jno
scas
enter
lods
les
push
ss
pushf
or
enter
push
inc
scas
pop
sbbb
push
lock
xlat
xor
and
inc
popf
insb
lods
and
movsl
cmp
movb
push
movsb
fisubs
test
or
mov
add
imul
or
and
lods
xor
sub
addl
and
dec
push
xor
adc
xchg
pop
cs
mov
add
into
mov
pop
popa
popa
jno
leave
and
leave
jb
push
bnd
leave
sbbb
lahf
ss
inc
loopne
mov
cmp
cwtl
mov
push
iret
jg
mov
das
pop
pop
mov
adc
rcrl
std
cmpsl
inc
fs
cmp
push
jp
loope
jecxz
inc
mov
pop
push
sbb
lea
jmp
lea
mov
out
fidivl
inc
jge
push
lret
xchg
push
push
jmp
mov
or
lcall
add
mov
add
pop
popl
sti
mov
mov
enter
cmc
mov
imul
ret
repz
aas
xchg
jno
mov
lods
fbstp
sbb
cmpsl
and
mov
mov
js
and
xchg
test
fstpt
addr16
sub
mov
das
xor
or
cltd
add
sub
bound
lcall
orl
jne
enter
mov
int3
inc
jbe
das
cmp
jnp
and
cmp
cltd
fucomip
sub
pop
xrelease
add
nop
adc
leave
mov
cmp
dec
std
hlt
bnd
adc
pop
jae
pushf
orb
mov
push
push
push
inc
pop
scas
fwait
xchg
mov
incl
out
mov
adc
xchg
xor
pop
cmp
mov
push
push
jmp
push
loop
push
mov
lahf
cmp
aam
jmp
pop
xchg
xor
or
int3
inc
xchg
inc
xlat
stos
outsl
hlt
xor
sub
into
addr16
loope
out
outsb
scas
loopne
inc
aad
inc
test
ret
call
cs
outsl
cmpsb
pop
xchg
lea
mov
add
pop
lods
xor
cs
or
mov
les
jg
push
jmp
push
fimull
add
push
jno
lods
out
jne
cltd
push
sbbl
and
mov
inc
clc
inc
pop
gs
test
and
sub
lahf
push
inc
out
mov
div
dec
jecxz
mov
nop
push
sbb
aaa
sbb
cmp
xchg
xchg
xchg
decl
push
mov
add
cmp
pop
fiaddl
inc
mov
mov
mov
repnz
cs
cmc
adc
push
loopne
ret
sub
xchg
jg
cmp
push
mov
mov
or
xchg
lock
sub
icebp
data16
rolb
test
mov
stos
insl
mov
aaa
sub
add
lea
fidivrs
cmpsl
xchg
and
inc
notb
and
daa
mov
sub
pop
ss
jb
cmpsl
mov
pop
hlt
xchg
mov
pushl
ret
inc
push
xchg
mov
outsl
imul
jle
adc
imul
or
sub
push
lock
out
push
and
pop
inc
cmp
xor
scas
lret
lods
jne
sub
jno
or
lea
sahf
cltd
mov
mov
lods
cmp
pop
and
ficoms
orl
aas
lods
mov
lret
mov
cli
fdivl
add
adc
daa
sbb
sub
push
pusha
adc
xor
test
add
ss
clc
repz
lods
ljmp
add
push
sub
push
adc
sub
dec
cmpsl
idivl
fs
arpl
xchg
cwtl
dec
adc
lods
int
push
ds
or
jl
push
dec
mov
nop
outsb
lret
add
add
shll
das
jge
loop
mov
lea
mov
test
cld
adc
mov
jecxz
pop
and
push
inc
repz
push
push
stc
xchg
pop
mov
hlt
add
sbb
jne
popa
dec
pop
cmp
int3
xor
mov
sbb
loope
jl
dec
inc
push
ds
cltd
cmp
mov
scas
xor
sub
es
push
nop
imul
push
lret
jbe
mov
repz
lea
mov
jbe
jo
sub
repnz
sarb
fdivrs
cmpps
dec
xor
jnp
and
inc
pop
out
mov
sbb
xchg
lret
sbbl
test
icebp
addl
cmp
lret
dec
jb
outsb
inc
cwtl
pcmpgtd
xchg
adc
dec
push
cmp
ljmp
addb
sub
cmp
lcall
in
ljmp
mov
clc
jecxz
pop
imul
std
or
ljmp
pop
mov
mov
dec
rcll
inc
push
sub
int3
sub
sti
mov
mov
xor
aad
mov
shll
xchg
ds
pop
add
pop
dec
cmp
fsubs
fs
mov
inc
sbb
or
cltd
push
enter
or
adc
cli
pop
pop
pop
bound
push
mov
mov
fimull
mov
pop
scas
fnstsw
and
xor
dec
inc
ja
lods
jp
clc
or
adc
push
mov
js
aad
clc
or
xchg
or
pop
jo
mov
mov
dec
sub
jae
xchg
mov
xchg
rorl
inc
pushl
and
jecxz
and
sbb
je
in
mov
dec
hlt
out
ret
xor
inc
das
push
repz
test
push
fs
loop
shl
jp
sbb
cmp
movsb
adc
rcrl
pop
and
inc
adc
mov
leave
jle
add
inc
iret
adc
lods
clc
mov
or
pop
mov
pushf
insb
fistpl
int3
jno
sahf
cmp
push
and
and
in
out
xchg
ss
mov
fdivrl
sub
out
sti
shl
xchg
cmp
push
mov
dec
sbb
insb
fcoms
cmp
sbb
xchg
insb
push
fistpll
mov
inc
movsb
aas
mov
adc
int
or
ss
sub
inc
sbb
insl
inc
mov
push
add
lock
sub
dec
icebp
cmp
xor
mov
mov
mov
cmpsb
jno
sarl
out
in
and
adc
adc
daa
mov
cmc
push
mov
fcmovnu
add
movsl
sub
rcr
insb
aas
sub
push
js
pop
dec
std
adc
not
out
orb
sub
push
cmc
repz
test
inc
nop
mov
jmp
inc
and
jle
ja
xchg
push
ret
lret
ss
sbb
add
fwait
icebp
dec
inc
orl
daa
das
pop
add
add
cltd
mov
lcall
sbb
aaa
and
pop
icebp
or
nop
xor
int3
fldt
je
mov
mov
repnz
dec
repnz
bound
pop
xchg
rol
pop
and
adc
push
and
dec
mov
lcall
imul
loopne
inc
cmp
fcmovbe
fucom
mov
push
jmp
cmp
or
add
mov
jo
jp
sub
and
adc
mov
and
inc
sbb
inc
imul
cltd
addb
movsb
or
cmpsb
inc
out
iret
shrl
fldt
jnp
xor
arpl
xchg
repnz
dec
mov
sti
sahf
insl
push
or
jl
push
ja
shll
push
fldt
sahf
pop
pop
xor
shll
pop
pop
in
stos
outsl
mov
pop
neg
bnd
push
sbb
mov
cmp
adc
sbb
aad
mov
xor
mov
out
jge
mov
dec
jne
xor
sub
rcrb
icebp
icebp
add
add
sbb
or
ficoml
mov
or
lret
mov
cmp
in
int3
adc
mov
sarl
std
movsl
leave
sbbb
adc
fisttpl
cmp
sub
ja
sti
and
push
sti
cmp
inc
in
cltd
pop
sub
ret
fdivl
xor
xchg
lahf
out
dec
and
out
mov
push
xchg
mov
in
into
mov
fs
imul
enter
into
mov
in
fiadds
and
adc
lock
adc
push
out
pop
cmc
repnz
jecxz
sbb
pop
jae
xor
xor
jle
mov
outsb
cmpsl
xchg
das
ss
jmp
mov
xchg
into
jbe
sbb
repz
sub
mov
addb
int
sub
pop
imul
xor
addb
lods
adc
mov
int
mov
push
xchg
xchg
cmpsb
and
ljmp
test
lret
lock
idiv
xchg
push
icebp
pop
outsl
pop
fsubrp
jo
mov
iret
mov
aam
rcll
xor
cmp
jle
in
je
cmpsl
lret
jbe
add
lret
fildll
sub
xor
test
cmc
cmp
xor
repnz
pop
gs
mov
inc
xchg
lret
cmp
xorb
stos
inc
dec
push
loope
gs
int
xchg
stc
dec
jg
ds
dec
and
and
stos
pop
adc
inc
or
call
insl
dec
fucom
cmp
cmpsl
movsl
xor
add
js,pt
scas
lock
aaa
push
fs
and
xor
jl
inc
movsb
aad
or
mov
insl
and
jp
mov
daa
mov
fnstcw
and
inc
inc
in
xor
sbb
in
pushf
pop
bound
push
push
or
xchg
jg
int
mov
aad
sub
xchg
stos
pop
dec
xchg
mov
or
pop
sub
in
fcomp
xor
hlt
lret
mov
test
xchg
cmp
sub
sti
mov
sbb
out
mov
mov
outsw
enter
dec
repnz
or
pop
fdivrs
inc
pop
ficoml
mov
inc
shrl
sub
xchg
movsl
adc
adc
mov
addr16
sahf
mov
rol
cmp
lock
mov
dec
pop
and
cwtl
xchg
sub
pop
pop
jo
inc
pop
pop
adc
loop
imul
xor
sahf
adc
push
dec
cmp
lahf
scas
imul
sub
mov
sub
lret
clc
and
mov
xchg
mov
in
mov
aad
mov
sub
es
mov
rdtsc
movsb
push
add
jg
pop
push
and
aad
mov
cmpsl
mov
or
daa
je
dec
pop
rcrl
xchg
jb
pop
repz
sbb
inc
lret
mov
adc
jns
sub
mov
ret
lock
pop
dec
jecxz
cmp
das
mov
pushf
pop
xchg
or
nop
iret
ss
inc
testl
push
arpl
and
jb
aaa
fadds
lret
push
repnz
test
nop
jle
xor
inc
inc
gs
add
daa
xlat
inc
dec
mov
loope
andl
imul
push
iret
or
push
fimull
les
lods
mov
fisttpl
ss
xor
mov
insl
jns
cmpsl
fistps
negl
fstpl
fsubs
mov
or
mov
pop
int3
lahf
cmp
sti
dec
mov
ja
movsl
xlat
push
push
loop
jb
adcb
sub
add
sti
in
dec
adc
or
xchg
dec
aam
add
sti
ljmp
push
int3
jae
inc
mov
in
ficoml
xchg
sub
stos
into
or
sub
cmp
dec
aad
cmp
cmp
orl
jne
xchg
adc
cmc
sbb
repnz
and
pop
push
sub
sar
jmp
mov
sbb
xchg
cmc
fwait
and
ret
sub
xchg
push
icebp
adc
sub
dec
cld
das
sbb
mulb
or
loope
leave
outsb
mov
sbb
mov
push
sub
and
mov
pop
pop
push
out
sbb
jp
sbb
pop
cmp
outsl
xor
div
dec
call
and
das
cmpsl
hlt
in
pop
rcrb
and
fcomi
ja
mov
daa
push
cld
pushf
cmc
xchg
or
stc
scas
into
scas
adc
out
mov
enter
mov
scas
addr16
cltd
jp
and
mov
adc
inc
sub
push
jecxz
add
shlb
lret
subb
push
ds
push
xchg
nop
outsb
pop
cwtl
add
lcall
inc
mov
and
and
sahf
jae
adc
mov
scas
adc
call
and
lret
sub
sarl
pusha
sbb
sub
out
daa
push
dec
pop
xor
in
js
or
jl
xchg
mov
enter
jle
lgs
fs
scas
clc
jo
mov
test
mov
push
sub
mov
popa
or
xchg
pop
lods
adc
lods
jmp
mov
mov
cld
add
xchg
jecxz
lea
dec
jne
xchg
adc
imul
xchg
push
and
dec
fdivrl
rcr
movsb
into
stc
sbb
xor
jle
popa
adc
fdivrs
es
imul
adc
into
mov
js
mov
cmp
and
jnp
adc
xchg
scas
repnz
or
iret
cmp
aam
out
add
and
cmp
fbstp
push
xlat
inc
lret
inc
aas
pusha
mov
and
or
mov
lahf
data16
jbe
push
push
fs
add
sahf
repz
out
lods
sbb
sbb
in
dec
pop
inc
cmp
adc
jno
pop
test
imul
push
out
icebp
addr16
inc
ficoms
cmpsb
pop
js
dec
insl
cmp
xchg
into
stc
mov
inc
cmpsl
mov
xor
call
and
cmpsb
pop
popf
js
aad
xchg
push
testb
mov
mov
shrl
push
pop
jl
frstor
fistpll
xchg
aad
push
imul
out
popa
aas
pop
hlt
inc
sbb
out
aad
cmpl
lock
fs
ret
lahf
mov
mov
xchg
xchg
dec
clc
enter
repnz
jbe
test
addr16
mov
repz
int3
xor
jmp
sub
jbe
xor
and
mov
in
repnz
sbbb
adc
push
int3
xor
sarb
arpl
or
into
add
mov
cld
test
push
nop
lret
sarl
dec
add
jno
cmp
ss
push
ss
jl
xor
int
jno
dec
pop
mov
adc
mov
pop
out
mov
cmp
aas
xchg
jnp
scas
xorl
pop
or
pop
cld
stos
add
aas
xchg
dec
dec
push
mov
mov
push
icebp
test
in
pusha
inc
shlb
scas
ds
bnd
cs
lea
testl
clc
xor
xlat
cmc
dec
inc
push
fucomip
jne
stos
xchg
test
nop
add
icebp
clc
xor
out
imull
rcll
sub
push
rcr
rcrl
and
or
cmp
push
push
pop
shlb
insb
stos
jae
std
or
shll
inc
add
in
sub
and
sub
ljmp
or
ljmp
mov
out
sbb
pop
fldt
or
jbe
sbb
sbb
inc
ret
dec
movb
pop
in
out
dec
lret
stos
xor
enter
mov
sub
fs
hlt
arpl
push
sbb
mov
xchg
mov
inc
mov
pop
repz
sti
icebp
stc
inc
popf
adc
xlat
sub
xchg
mov
sub
inc
adc
int3
and
cmpsb
jne
pop
xchg
cli
dec
out
insl
pop
dec
testb
cmpsl
pusha
pop
push
mov
fs
push
push
lods
cmp
lock
fwait
mov
leave
hlt
cmp
push
adc
sub
fcoml
add
lret
adc
xchg
lret
or
xchg
adc
ret
xor
adc
pop
xor
ljmp
cmp
pushl
out
adc
adc
add
lret
adc
orb
push
xlat
pop
stos
mov
adc
das
push
cwtl
cmp
mov
xor
push
jmp
cmp
push
cltd
mov
pusha
gs
pop
insl
cmp
cmp
fldt
stos
inc
gs
rolb
cmp
shr
movsb
sub
insl
or
xor
dec
mov
xchg
xlat
sub
call
mov
xchg
fstps
dec
lret
andb
cs
sub
scas
sahf
xor
sub
ret
cs
jl
add
loope
ja
adc
das
sbb
pop
xchg
and
in
jp
sbb
push
xor
xchg
or
hlt
gs
adc
data16
mov
adc
sbb
push
mov
loopne
shrb
in
push
xor
insl
xchg
xchg
mull
pop
stc
int3
inc
out
int
into
sbb
mov
aad
sub
pop
pop
inc
pop
clc
push
adc
mov
mov
jne
fidivrl
lea
test
or
aas
mov
sahf
int
imul
cli
repnz
mov
push
loope
pop
sahf
rcrl
pop
mov
xchg
xor
imul
xchg
cwtl
or
xchg
pop
inc
jmp
ss
and
icebp
mov
fisttpl
nop
dec
outsb
xchg
mov
sbb
movsb
ja
popa
imul
jno
jno
ds
mov
xor
jmp
inc
daa
fs
sub
fnstsw
add
lret
stos
push
mov
sub
pop
sti
jns
rcrb
mov
daa
loop
jle
pop
dec
cwtl
pop
addr16
jecxz
out
test
mov
sbb
ja
lods
rcl
scas
movl
nop
jg
add
jbe
inc
cmpsb
jae
roll
pop
mov
dec
mov
leave
daa
sbb
and
pop
pop
add
roll
xor
in
clc
xchg
stos
sbb
les
loopne
adc
dec
aas
sbb
mov
sbb
lret
arpl
push
dec
push
xor
pop
insb
cmp
jle
repz
push
ljmp
inc
jne
in
in
xor
sub
ret
sub
mov
xor
and
cmp
jp
outsl
and
add
mov
out
lret
push
mov
xchg
popf
adc
jne
fdiv
test
lds
lcall
inc
out
loopne
test
xlat
daa
mov
int3
jne
cmc
or
pusha
xchg
int3
imul
sbb
and
cmp
jmp
inc
push
and
fnsave
jl
out
mov
inc
cmp
dec
rcl
pop
mov
loop
and
sbb
mov
push
mov
test
imul
mov
jbe
push
mov
cwtl
in
mov
das
imul
outsl
jnp
push
mov
out
push
cmp
shlb
sub
cmc
fsubrp
dec
and
roll
stos
inc
mov
mov
popa
aaa
jo
xchg
icebp
lahf
mov
sub
pop
jmp
mov
xchg
inc
rorb
cmc
or
rorb
icebp
adc
mov
xchg
mov
lods
push
fistpl
fucomip
dec
cmp
or
mov
test
mov
cwtl
ss
xchg
or
in
stos
jnp
nop
mull
fincstp
aaa
dec
lds
mov
cmp
or
pop
rolb
jl
mov
out
xor
loope
jl
insl
and
jp
push
neg
mov
mov
scas
cs
lret
xor
aam
add
popa
inc
push
out
ss
into
sub
rorb
mov
or
and
aad
jp
dec
xor
hlt
in
and
mov
push
push
mov
xchg
repnz
xor
aam
ss
pop
mov
out
push
mov
in
in
add
jg
outsb
fcmovnbe
outsb
pop
lret
and
loope,pt
mov
cmp
and
mov
aad
lret
jbe
xor
push
mov
movsl
push
call
or
and
out
ljmp
icebp
mov
loop
or
or
mov
rclb
sahf
gs
cwtl
sbb
cli
pop
add
jnp
adc
sbbl
inc
outsl
mov
in
jae
mov
cmp
push
in
mov
inc
push
sub
aas
icebp
dec
mov
jl
fdivrs
pop
push
add
sahf
lahf
pop
push
popf
jb
rolb
gs
pop
clc
das
repz
inc
jp
clc
and
push
pop
and
jb
mov
pusha
daa
or
insb
dec
pop
mov
aaa
test
fcoml
or
and
ljmp
jge
mov
dec
ret
sbb
push
ja
das
imul
shrl
adc
xor
adc
mov
lea
lea
fucomip
push
sub
mov
sbb
mov
inc
lods
xor
fs
iret
or
pop
jae
mov
das
mov
mov
xchg
ficompl
test
push
mov
mov
dec
js
adc
fs
fdivr
sub
and
and
add
movsb
movl
jp
mov
lahf
pop
clc
mov
mov
mov
xor
out
cwtl
pop
push
stc
in
pushf
mov
inc
adc
xor
fisubrl
aas
adc
les
popa
ljmp
dec
adc
cwtl
out
fstl
in
mov
mov
repz
into
stos
mov
adcb
xchg
inc
pop
fdivrs
sub
sbb
in
ret
inc
test
cli
mov
push
sti
fimull
scas
insb
push
mov
test
jae
jns
adc
fcompl
insb
push
fwait
jne
jg
xchg
add
xlat
pop
add
in
leave
jcxz
fisttpl
lret
push
add
pusha
jns
movsl
out
jns
insb
inc
dec
sti
and
mov
mov
ret
bound
mov
into
shl
imul
sub
cmp
inc
add
icebp
in
pusha
jle
and
out
add
cmp
push
inc
pop
mov
addr16
imul
jl
lret
lods
mov
mov
or
jno
add
jmp
bnd
dec
and
and
xchg
sbb
bound
test
and
mov
push
sbb
loop
xchg
hlt
xchg
rol
cmpsl
jbe
loopne
dec
or
int
lret
insl
iret
push
sar
and
add
jecxz
call
xchg
aas
adc
cmpsb
cltd
sub
pop
xor
push
xor
sbb
and
imul
inc
in
out
cmc
or
sub
xchg
jns
scas
iret
icebp
pop
stc
push
jp
cwtl
sbb
push
fbstp
dec
jo
xlat
pop
sbb
fcoms
mov
subb
adc
fisubl
scas
sti
sbb
test
hlt
ret
adc
sub
cmp
add
aas
nop
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
mov
mov
xor
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
add
mov
mov
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
xor
sub
sub
sub
sub
xor
adc
mov
adc
jmp
add
testb
and
or
xchg
lret
sbb
addl
adc
ret
dec
xchg
mov
adc
cmc
pop
push
mov
mov
mov
xchg
jnp
clc
popa
or
scas
push
jl,pt
enter
pop
xchg
inc
clc
loopne
cmc
les
shlb
cltd
sbb
ret
and
xchg
mov
sti
neg
divl
xchg
cmp
cmc
pop
lcall
std
adc
pop
fwait
cmc
jp
jnp
outsl
in
jecxz
out
lock
push
jecxz
inc
push
mov
push
dec
pop
ret
nop
xor
ret
aaa
lahf
addb
shlb
mov
and
xchg
adc
movl
sub
leave
js
xlat
fnstsw
mov
mov
cmp
adc
in
cmpsl
stos
xchg
outsl
dec
xchg
cmp
into
into
js
mov
ret
xchg
pop
rorl
leave
and
push
mov
xchg
out
inc
mov
mov
fimuls
fwait
pop
dec
ss
ds
outsl
ja
cmpsb
into
pop
pop
insb
je
dec
lahf
add
dec
mov
xchg
or
lret
mov
or
dec
push
xor
int
mov
shll
lret
pop
pusha
shrl
mov
mov
sarl
mov
add
mov
aaa
cltd
leave
dec
lahf
or
and
cmpsl
fnstenv
ds
inc
mov
xchg
mov
cmp
fs
adc
lods
pop
rcrl
aam
iret
ret
repnz
push
pop
fldenv
daa
clc
push
jg
mov
nop
repnz
sub
cmp
cwtl
fwait
leave
xlat
outsb
and
push
or
cs
or
fcmovu
lcall
adc
inc
es
xchg
lahf
jae
dec
inc
sbb
popa
xlat
aas
pop
insl
andb
cmp
cmp
into
inc
dec
sub
sub
int3
repz
mov
adc
mov
sbb
repz
jne
mov
sub
mov
push
fists
sub
rclb
js
adc
push
jge
test
jo
out
mov
mov
gs
arpl
test
xor
aas
inc
sahf
xor
cmp
dec
xchg
push
in
scas
push
cwtl
ljmp
shrb
nop
and
cmp
mov
adc
repnz
push
std
movl
stos
int
push
les
arpl
stos
cmpb
lds
xchg
jb
repz
adc
mov
mov
rol
xor
int
mov
cmc
xchg
jle
std
adcb
pop
clc
adc
xchg
add
out
filds
xchg
pushf
sar
cld
pop
lods
pop
xchg
mov
mov
pop
orl
cmc
mov
jb
pop
fstl
sub
add
imul
mov
inc
sbb
fdivp
xchg
testb
cmp
pop
pop
push
add
pop
xchg
sbb
sbb
lods
insl
ljmp
push
out
mov
add
cmp
xchg
andb
bound
in
clc
xchg
gs
fstpl
int
das
push
loopne
xor
fisubrs
xchg
xor
leave
jne
cltd
test
pop
pop
mov
push
lret
sbb
push
loopne
inc
cld
stc
sub
and
leave
adc
test
cmpl
fisubs
inc
test
inc
push
je
cltd
xor
xchg
jmp
mov
aas
notb
test
imul
push
in
lds
clc
xor
paddw
rcrl
roll
stc
cmp
ret
aas
ss
mov
sub
push
push
pop
mov
lea
mov
ja
and
add
fs
test
push
xchg
loope
pushf
repnz
sbb
sub
cmp
stos
imul
out
lcall
int
push
sub
movsb
cwtl
arpl
ss
dec
fsubl
sub
pop
mov
jno
fistpl
push
aaa
xchg
loope
roll
sub
jp
lds
mov
jo
or
out
jg
test
iret
call
xchg
je
jae
aas
add
dec
inc
addr16
mov
pop
das
jp
inc
pop
mov
mov
fwait
ret
add
pop
push
insl
xor
fcmovnb
addb
das
in
shl
jle
shr
xlat
add
xor
lods
aaa
sub
movsb
mov
adc
jno
push
iret
ds
jnp
insl
jnp
add
and
jecxz
subl
data16
dec
test
xor
xrelease
lahf
icebp
cmp
aaa
sub
xchg
jne
inc
insl
push
jl
sub
pop
sbb
mov
test
sub
test
jge
ja
adc
sahf
jae
int3
in
int3
outsb
fs
mov
clc
std
adc
mov
cmpsl
nop
xor
push
xor
in
xor
pop
insl
pushl
ljmp
adc
pop
out
clc
cltd
dec
or
push
push
fiadds
dec
inc
das
push
inc
nop
xor
sub
nop
xor
mov
mov
jbe
dec
lcall
daa
xchg
xchg
mov
js
js
fcomps
mov
mov
scas
adc
iret
insb
push
sbb
adcl
aam
xchg
adc
push
inc
push
gs
add
aas
inc
addr16
cmp
inc
cmp
sbb
cli
testl
repz
sarb
xchg
or
call
mov
pusha
xchg
mov
or
hlt
sbb
jno
insb
pop
xchg
jecxz
lahf
sub
cmpsb
fstpl
or
sub
std
fwait
es
cmp
inc
xor
jnp
push
lret
pusha
clc
fdivs
xlat
pop
ja
adc
je
adc
pop
xchg
js
arpl
xor
or
iret
mov
inc
push
loope
and
jge
imul
mov
hlt
ss
sbb
xor
mov
loopne
pop
sbb
sbb
dec
sub
sti
inc
pop
cltd
lds
aaa
push
dec
outsb
mov
mov
pop
mov
push
push
test
mov
and
dec
data16
mov
xchg
pop
in
pop
sbbb
sub
test
in
fsubrl
jo
popa
and
popf
pop
insl
ljmp
push
gs
leave
push
test
mov
xor
ret
shr
mov
mov
inc
push
lds
jle
je
cld
or
std
mov
popf
rcl
in
jg
dec
add
daa
xor
std
jle
and
aaa
imulb
xchg
mov
cli
mov
adc
sbb
cmp
sub
mov
sbb
data16
lds
mov
int3
inc
xchg
sub
jbe
and
inc
mov
pop
nop
out
loop
icebp
jns
adc
out
dec
mov
fisttpll
dec
inc
push
cmpsb
pop
popf
add
es
xor
adc
inc
pusha
popf
add
out
popf
xchg
mov
xchg
adc
mov
je
popa
rorl
cs
mov
test
test
push
xor
ficompl
out
jle
es
push
jl
mov
lret
jmp
jnp
xor
jnp
into
dec
mov
lds
sbb
and
jbe
pop
mov
call
test
mov
xchg
nop
sub
pop
test
fcomps
scas
jbe
or
lcall
loop
xorl
mov
jnp
fnstcw
mov
add
or
das
hlt
push
faddl
jb
and
aam
pop
or
call
push
push
enter
mov
ljmp
int3
jo
dec
jnp
scas
loopne
out
out
push
sahf
nop
jg
cmpl
shrl
add
mov
ds
fsubl
adc
dec
sbb
add
loop
pop
xor
push
sbb
jecxz
pop
test
popa
fsubr
add
xchg
xor
test
push
jg
or
stc
sub
gs
insb
addr16
lock
leave
inc
add
fistps
push
fwait
notb
stos
cmpsl
ret
jecxz
cs
punpcklbw
scas
sbb
cmp
or
cs
dec
xchg
es
sub
cmpsb
xchg
push
push
stc
lcall
rolb
fdiv
lahf
into
dec
add
inc
shl
mov
out
and
or
pop
mov
loopne
loopne
mov
pop
sahf
lahf
scas
icebp
scas
jbe
fcomp
jnp
std
mov
fsubrs
stos
dec
pop
fwait
pop
inc
rclb
sbb
movsl
mov
sub
mov
cmc
xchg
movsl
test
add
mov
inc
test
jo
lods
push
or
inc
sbb
or
and
push
arpl
push
lds
sbb
mov
das
or
jl
arpl
lods
mov
push
push
mov
jg
cld
and
nop
repz
pop
enter
push
lret
mov
mov
js
sti
out
push
roll
mov
jle
jne
adc
mov
jmp
nop
push
sarb
shrl
cmc
lret
dec
ret
sbb
gs
test
dec
test
hlt
xor
jnp
fwait
dec
cmp
adc
sbb
pop
loop
out
pop
roll
jge
adc
enter
sbb
jno
das
or
inc
pop
testb
fiaddl
jecxz
xchg
insb
lods
add
mov
outsl
std
fucompp
repz
mov
sbb
fstpt
stos
daa
mov
in
cmp
mov
std
add
aas
popa
repz
hlt
mov
and
and
adc
mov
rcll
loop
add
cs
add
jecxz
xchg
sarl
insb
in
faddl
xchg
push
push
mov
mov
fisttps
inc
cmpsl
mov
jg
and
mov
movsl
fimuls
add
pop
xor
push
shrb
sub
cmp
push
shlb
pop
xlat
dec
mov
popa
or
fs
push
rcrl
aaa
ficomps
or
nop
and
rorb
add
dec
sub
out
cmp
xor
add
push
xor
mov
mov
inc
dec
ds
cmp
cmp
pushf
fisttps
in
insb
dec
or
or
or
or
call
pop
int
in
rorl
insl
hlt
xchg
mov
scas
jecxz
push
and
and
adc
rcr
and
jecxz
jg
test
xor
int
fisubs
sub
rolb
out
movsl
fnsave
psubsw
test
mov
xlat
in
mov
mov
lods
ss
push
inc
sub
pop
ljmp
push
push
dec
insl
xchg
out
jge
adc
sbb
loopne
mov
arpl
inc
imul
lods
movsb
xchg
mov
out
leave
cltd
and
inc
subb
gs
mov
fsubrs
adc
sahf
sbb
sahf
ss
sti
adc
add
pop
imul
lds
pop
xchg
in
pop
or
test
fdivs
push
pop
pop
sbb
lcall
push
out
dec
incl
mov
pop
or
test
sub
inc
sub
cmp
je
hlt
in
jmp
out
mov
jb
clc
cltd
cmp
out
fwait
jl
cmpsb
jns
rcrb
add
mov
nop
std
in
ljmp
pop
movsl
imul
pop
pusha
add
mov
mov
and
dec
arpl
mov
imul
jmp
push
push
mov
dec
xchg
mov
push
int3
or
mov
dec
lahf
lock
mov
jp,pt
mov
and
add
inc
dec
jp
jl
push
loope
hlt
cmc
push
sbb
or
aam
jbe
test
popf
lret
or
xor
addr16
and
in
stos
in
push
test
mov
jae
test
jb
jp
mov
scas
test
repnz
pusha
mov
push
pop
aam
push
cmp
cwtl
push
and
pop
mov
cld
jne
jnp
jg
jbe
aaa
inc
cmp
adc
dec
push
ret
loope
cmp
movsl
fsubrl
int
in
cli
out
lock
sti
aad
rolb
cmp
fs
mov
jge
and
push
outsl
gs
or
cmp
xor
mov
fcmovb
and
dec
in
push
iret
mov
adc
cld
push
mov
adc
popf
jns
cmpb
mov
and
pop
pop
ljmp
bound
dec
repnz
or
pop
ret
mov
cmp
dec
fs
int3
imul
xchg
jle
pop
pop
xchg
bound
mov
pop
dec
icebp
adc
mov
sub
or
fimull
fadds
sbb
pop
xchg
in
jo
adcb
xchg
mov
in
mov
mov
and
mov
cmp
sub
leave
jo
jg
pop
fnstsw
add
mov
cmp
adc
loopne
lds
negb
pop
mov
fcoml
push
push
insb
push
or
xchg
sub
jbe
aaa
mov
push
push
rcrl
pusha
xacquire
mov
mov
out
movaps
or
mov
cld
mov
xchg
lret
xchg
rcl
repz
mov
sbb
ja
adc
adc
sbb
mov
dec
add
jns
mov
pop
mov
xchg
mov
fs
and
into
pop
iret
ret
test
mov
push
repnz
aam
cmpsl
xchg
lret
imul
fidivrl
or
adc
add
and
xchg
cmp
xlat
iret
rcl
inc
stos
sbb
push
mov
mov
movsb
idivb
jp
cmp
ret
into
adc
push
mov
lcall
sub
mov
arpl
and
mov
pop
dec
sub
jp
mov
xchg
movsl
lds
lcall
mov
jns
dec
pop
imulb
cmp
nop
popa
repz
xchg
push
mov
lods
add
jns
jne
or
hlt
adc
cmp
pop
cwtl
pop
add
repnz
mov
cli
push
inc
outsl
jge
daa
dec
out
push
stc
das
add
inc
jno
lea
jl
mov
adc
xor
rcrl
lods
movsb
gs
or
or
dec
jp
cmpl
mov
cmp
mov
mov
jnp
movsl
add
xchg
iret
mov
mov
loopne
sar
cmpsl
push
std
out
pop
sbb
imull
push
sub
lcall
ja
sbb
aam
fmull
and
movb
cmp
subl
popf
jb
jbe
es
pushl
push
sbb
pusha
lret
sub
pop
jp
dec
jecxz
negb
or
push
bnd
pop
dec
js
loop
mov
daa
lock
out
sti
push
pop
mul
loopne
xor
inc
and
out
imul
cltd
clc
rcrl
cmp
loopne
pop
icebp
xlat
mov
imul
lret
stos
fisubrl
sti
sub
xchg
lret
pop
push
aaa
dec
orl
in
xchg
stc
loop
ret
lret
mov
fdivr
and
xor
and
movsb
add
test
push
mov
dec
xchg
mov
in
dec
xchg
jg
or
js
filds
sbb
dec
enter
pop
sahf
pop
mov
cmp
sbb
lahf
mov
cmp
cwtl
clc
imul
pop
sbb
and
mov
lret
push
pop
scas
ljmp
cli
lahf
imul
dec
jae
and
mov
test
or
mov
dec
add
aad
icebp
mov
add
sub
dec
leave
cmp
syscall
rcl
imul
das
ret
sarl
lods
fmuls
ret
cmp
inc
lret
pop
ljmp
andl
inc
inc
jmp
lods
js
dec
cmp
xchg
dec
addr16
loope
loopne
sub
jge
iret
notl
dec
add
push
push
stos
cmp
in
jmp
sbb
push
data16
fildl
fisubrs
cmp
iret
aam
je
fcmovb
cmpl
inc
mov
pop
loopne
ja
push
daa
adc
pop
lods
stos
push
daa
call
sub
cmc
testb
scas
cmp
out
pop
mov
xor
jmp
mov
jle
aad
lods
pop
inc
sahf
fcompl
jnp
insb
or
jo
cltd
xor
sbb
nop
sbbb
xchg
xor
loop
and
inc
out
jge,pn
pop
or
es
dec
out
jnp
mov
mov
lret
es
and
mov
cmp
pop
pop
dec
add
pop
out
sbb
inc
pushw
fsubl
stos
std
pop
sub
in
and
mov
mov
pop
je
daa
lcall
shlb
arpl
xchg
mov
mov
scas
jae
repnz
leave
adc
out
and
ret
aad
sbb
outsb
push
or
xchg
leave
and
les
in
cltd
xchg
adc
leave
sub
pusha
xchg
sub
test
push
sub
data16
movsl
mov
les
or
lret
aad
sub
inc
push
fxch
inc
hlt
addl
mov
dec
dec
out
lods
fs
or
movsl
dec
push
in
leave
pop
jmp
add
push
loopne
jp
test
iret
stos
or
xorl
jmp
adc
ljmp
int3
or
lahf
ja
scas
dec
mov
mov
pushf
out
or
repz
sbb
xchg
adc
push
fdivr
xor
push
orb
sbb
pop
sub
lds
mov
fistpl
add
sub
push
sbb
push
pop
scas
lea
inc
in
jbe
push
xchg
out
cli
mov
push
mov
out
movsl
mov
xor
sbb
xor
mov
adc
je
xor
push
sbb
cltd
xchg
lret
jmp
xchg
fildl
repz
cmc
dec
stc
ret
and
nop
and
inc
aad
in
dec
jne
cmp
cmp
add
pop
mov
loopne
out
dec
sub
mov
push
cli
and
pop
das
lcall
stos
fcmovnb
dec
inc
js
sbb
rcll
xor
movsl
xorl
adc
lahf
jne
or
adc
mov
out
in
adc
pop
push
mov
xchg
xchg
xor
ret
lock
inc
stc
cmp
mov
cmp
faddl
ljmp
xchg
sub
repnz
js
cwtl
out
daa
hlt
xchg
lret
mov
cmpsl
jmp
add
xor
pop
dec
outsb
testl
lcall
jb
clc
stos
fadds
fldenv
pop
cs
or
repz
jge
xor
inc
in
add
gs
daa
sbb
lret
mov
int3
stos
lds
lahf
and
sbb
sti
adc
sub
push
jmp
push
iret
inc
mov
cmp
sub
mov
icebp
xlat
xchg
sbb
sbb
push
pop
pop
sbb
adc
aam
inc
out
adc
cmp
popa
adc
js
adc
cmpsb
loopne
out
adc
jno
sbb
adc
ss
xchg
test
js
out
xchg
icebp
jnp
sahf
xor
shr
jl
xchg
ljmp
leave
in
popa
mov
push
add
addr16
sub
adc
daa
stos
cmp
das
in
pop
xchg
sbb
and
cld
mov
jb
or
cmpl
adc
popf
dec
mov
insl
nop
cmp
cwtl
ror
ffreep
adc
aas
out
pop
rcrl
sub
jle
leave
xchg
push
gs
sub
xchg
les
fsubr
cwtl
mulb
inc
repz
shlb
xchg
lock
pusha
dec
add
shlb
dec
xor
push
inc
jecxz
shll
shll
movsl
xorl
pop
aad
adc
jno
cld
inc
xlat
jecxz
and
das
inc
push
mov
int3
cld
je
cmp
fists
insb
mov
sbb
add
add
ss
inc
pop
cmc
cs
scas
daa
add
mov
xor
mov
into
aaa
call
fnstenv
push
mov
inc
fdivrs
jb
sub
adc
push
and
dec
lret
imul
xchg
out
cmpsb
push
ret
scas
popl
das
pop
push
test
sbb
push
js
shll
pop
adc
or
xor
pop
push
sbb
movl
adcl
in
or
xchg
imul
xchg
mov
icebp
pop
mov
lock
fildll
ja
xchg
cmp
xor
cwtl
dec
mov
mov
sbb
insl
jecxz
push
pop
xor
addr16
pop
mov
jnp
leave
mov
mov
mov
pop
cmp
sarl
pop
jecxz
test
dec
jo
xchg
pop
pop
sbb
pushf
ds
xchg
mov
and
fwait
sub
dec
push
and
push
imul
lret
ds
xlat
xorb
mov
inc
cmp
inc
sub
xor
rorl
add
loope
pop
int
das
xor
mov
into
mov
inc
xor
sbb
or
push
push
dec
xor
fstpt
popf
pop
or
mov
xor
imul
pop
inc
std
or
jmp
int3
jmp
add
in
scas
cwtl
shlb
xchg
dec
sub
add
or
inc
pop
jecxz
push
out
adc
jecxz
cmp
iret
into
inc
push
cmp
jo
psrlw
mov
or
out
push
pop
xor
add
enter
pop
fisttpll
add
ljmp
into
dec
pop
pop
gs
push
pop
pop
sbb
adc
cmpsl
mov
xor
dec
pop
leave
iret
test
in
jle
xchg
inc
data16
cltd
jno
and
fisubl
jnp
inc
icebp
sub
lahf
pop
and
addr16
mov
lock
cli
insb
in
inc
cmc
sahf
jmp
mov
sub
mov
xchg
test
fs
push
cld
pop
jnp
nop
nop
test
jnp
or
mov
inc
je
xor
ljmp
and
xchg
fidivrs
inc
rcl
je
in
and
std
jmp
cmp
ret
js
lret
out
adc
jecxz
cmp
adc
mov
mov
jno
pop
andb
push
stos
bound
mov
sarl
jmp
xor
cltd
jmp
lods
or
jno
in
scas
mov
movsb
cli
das
aas
out
or
loopne
lret
jle
in
mov
jl
loopne
ljmp
or
sub
test
mov
push
jnp
enter
frstor
cltd
daa
xchg
fsubrp
dec
lds
lahf
xor
dec
aas
jl
leave
into
daa
and
pop
fisttpll
sub
es
stos
pop
fimuls
cmc
inc
dec
outsb
jno
movsl
rorl
movsb
dec
lea
push
xchg
xchg
imul
push
sbb
mov
fsubl
insb
jp
cmp
mov
mov
add
jl
in
in
adcl
push
sub
pop
lods
ljmp
sbb
fs
cs
mov
lods
xor
orb
cmp
iret
dec
xor
iret
insb
movsl
jnp
imul
mov
cld
clc
adc
pusha
sub
cmp
popa
cmp
jno
adc
je
ficoms
stc
push
adc
or
fnstcw
sub
gs
mov
inc
and
jmp
loopne
cwtl
int3
or
ja
mov
or
xlat
pop
lret
sbb
out
test
cmp
shrl
mov
dec
dec
cmp
into
mov
ja
data16
nop
pop
cs
add
mov
es
ret
pusha
inc
ja
and
inc
or
or
xchg
test
out
fwait
pop
push
je
xchg
xlat
clc
mov
mov
push
nop
sub
mov
cwtl
jb
lods
cmpsl
xchg
cmp
addr16
xlat
ret
mov
jne
das
adcl
aad
xchg
adc
bound
inc
xorb
push
xor
jp
cli
int
jne
rclb
or
dec
adc
xor
cld
sahf
cmp
xor
repnz
loopne
andps
xor
jg
cwtl
xor
in
and
out
sbb
push
js
jmp
cmpsb
cmp
adc
jge
jl
add
lds
push
jl
out
xor
scas
movb
jns
outsb
push
or
adc
xor
ds
fidivrl
out
mov
mov
lds
bound
arpl
sub
scas
and
stos
or
cld
scas
out
int3
movntps
movsl
repz
jmp
push
faddl
fnstenv
cmpsb
xchg
subb
lcall
cmp
push
xor
push
out
and
lahf
leave
sub
mov
dec
jns
je
cmp
xor
fldcw
xor
cltd
shl
into
mov
out
mov
pop
mov
push
lahf
pop
adc
add
xor
ret
pushf
repnz
andl
lret
pusha
or
fcomip
aaa
movb
scas
enter
aam
inc
fcoml
sbb
das
or
xor
inc
imul
inc
test
imul
test
je
add
js
mov
out
pop
sahf
lret
orb
and
mov
arpl
lock
push
test
sbb
fnsave
cmp
inc
lcall
pop
scas
imul
cmp
outsb
fadds
push
or
adc
aaa
add
pop
filds
aaa
ljmp
push
jo
stc
mov
fsubs
xor
push
iret
lds
cmpsl
adc
stc
movsb
mov
or
lret
jl
int3
dec
popf
pop
loope
or
push
cmp
aam
ja
sub
shr
cmp
int
or
xchg
stos
test
arpl
xor
aad
int3
adc
int
into
fstl
loop
cmp
test
shl
push
lods
xor
push
into
flds
js
inc
mov
sbb
pop
lret
repnz
mov
dec
divl
inc
int
lods
iret
in
sub
sti
mov
jecxz
jge
pop
mov
aam
mov
cmc
notl
int3
xchg
cli
dec
out
jbe
xchg
fwait
or
sbb
push
popa
or
enter
dec
sub
mov
in
insl
sarl
mov
dec
and
testl
imul
and
mov
xchg
repnz
sub
inc
ljmp
cmp
mov
mov
dec
cmp
lea
xlat
mov
adc
loope
lret
sti
rorl
int3
push
sti
mov
xor
inc
insl
addr16
scas
mov
inc
mov
pushl
cwtl
int3
stc
mov
pushf
lea
js
idivb
bound
jl
xchg
movsl
pop
shll
loopne
mov
inc
dec
push
jnp
cmpb
mov
js
mov
xor
lret
and
xchg
ret
aad
popf
mov
fisubs
or
or
ljmp
test
ds
in
jne
fst
in
sub
xchg
xor
dec
es
aad
popa
stc
and
pop
mov
ss
nop
jle
loop
test
xchg
inc
mov
out
rcrl
pop
lret
iret
adc
and
and
jo
or
aaa
and
jmp
mov
cmp
mov
add
xchg
dec
sbb
hlt
sbb
icebp
and
and
inc
xor
shl
out
and
lods
add
inc
bound
scas
stc
aam
loop
shlb
and
aad
fsub
daa
outsl
dec
pop
imul
lods
adcb
mov
jb
dec
fmull
mov
mov
jge
xchg
out
loope
push
stos
mov
jne
xor
jnp
mov
in
push
ret
cmp
sub
fisubrs
notb
dec
push
out
addr16
cs
pop
xchg
and
cld
and
cwtl
loopne
movsl
rcrb
cmp
inc
mov
imul
mov
pop
jmp
mov
adc
pop
mov
fcmovbe
jnp
dec
lock
mov
ds
jl
lahf
dec
jle
sbb
enter
xor
stos
sbb
and
mov
das
push
jmp
test
shlb
adc
and
loop
inc
lock
leave
pop
imul
and
push
shlb
mov
lret
loop
gs
jno
icebp
mov
sti
scas
inc
mov
scas
mov
or
test
sub
hlt
dec
sbb
push
pop
mov
test
jne
lods
out
mov
pop
enter
iret
and
push
stc
xchg
mov
fs
xor
inc
cld
xlat
bound
aam
stos
cmpsl
imul
mov
sub
aam
sbb
cwtl
mov
cmp
sub
out
imul
ja
loopne
loope
and
clc
ficoml
add
clc
mov
loope
imul
sbb
mov
jg
out
lcall
js
int3
shll
ret
pop
jae
push
loope
jo
sahf
gs
cmc
xor
add
stos
test
cli
shrl
pop
in
xor
xlat
imulb
sti
push
scas
pop
andb
cmpsb
sub
push
add
and
inc
popf
inc
roll
adc
call
add
movsb
mov
sub
cmp
lcall
inc
stos
and
out
inc
jmp
fldt
pop
add
daa
movsb
ja
shrl
sahf
dec
inc
sub
or
stc
fldl
cmp
arpl
cmpsb
sub
sbb
lds
lods
mov
in
loop
pop
test
dec
jge
shll
mov
dec
adcb
stc
cmp
pusha
in
add
or
scas
ljmp
jb
in
inc
lea
in
xchg
sahf
shll
or
in
cmp
mov
cwtl
sbb
xchg
add
or
jge,pn
iret
push
xor
push
inc
aas
or
out
ja
or
fbstp
test
push
rcll
mov
cmc
in
and
inc
mov
mov
int3
subb
mov
stos
imul
add
mov
cmp
sbb
adc
pop
fwait
idivb
das
pop
cmp
pop
and
push
push
add
lcall
add
movsb
dec
sub
pop
sub
push
bound
inc
push
mov
sub
mov
subl
add
imul
sbb
mov
orl
mov
sub
mov
add
orl
or
mov
mov
sbb
mov
movzwl
sub
mov
xor
mov
adcl
add
sbbl
xor
or
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
jmp
xchg
jmp
addl
mov
jl
inc
pop
addl
jecxz
sub
testl
lock
das
add
shl
cltd
mov
pop
mov
inc
or
inc
push
aad
cmp
sbb
mov
outsl
in
mov
imul
or
push
pop
iret
push
push
lods
and
sbb
int
mov
mov
subl
fidivrs
dec
add
rcrb
das
call
adc
ud2
or
pop
lahf
punpckhwd
mov
lods
push
sub
adc
pusha
in
mov
adc
ja
sub
lahf
lods
pop
xlat
sti
fmull
clc
mov
mov
xor
test
sub
cmc
fstpt
outsl
pop
in
jge
xchg
and
mov
pop
out
pop
cmp
roll
dec
movsb
shr
push
or
jmp
arpl
es
push
mov
rorl
scas
aad
ljmp
xchg
and
jp
ljmp
dec
jo
sti
jmp
repz
sti
iret
out
cmpl
sti
loop
sbb
sbb
outsb
dec
cmc
cld
sub
insl
push
imul
aaa
sbb
add
movsb
fisubl
and
mov
loopne
ret
out
xor
dec
jno
fucompp
outsb
push
push
loop
out
cli
shlb
adcb
pop
add
lods
jne
js
dec
xchg
mov
inc
je
mov
dec
lret
mov
push
inc
lret
vmread
or
filds
rcrb
pop
das
test
test
mov
fs
mov
mov
bound
sarl
xor
fs
ret
sbbb
dec
arpl
xor
lret
fildll
jle
data16
inc
mov
mov
mov
aam
data16
pop
mov
sarb
push
cmp
mov
push
pushf
mov
shrb
fwait
mov
ret
cwtl
mov
jl
xor
faddp
mov
jno
leave
sbb
cmp
loopne
scas
jl
push
mov
xchg
mov
in
aaa
testl
lods
rcll
push
xor
inc
jb
es
inc
xor
push
ret
loopne
xchg
push
xchg
add
arpl
xchg
adc
pop
test
jb
dec
ljmp
stos
bound
jecxz
jle
mov
ret
jno
inc
das
adc
mov
inc
ljmp
test
jno,pn
pop
adc
jnp
xchg
cli
std
mov
iret
push
pop
pop
push
icebp
adc
xor
jmp
jecxz
pop
das
mov
in
jmp
cmp
aaa
xor
mov
movsl
movsl
mov
stos
jne
hlt
test
and
lods
cmpl
fcom
xchg
enter
or
dec
rorb
ror
push
out
cmp
sbb
cmpsb
xchg
pop
mulb
mov
gs
push
je
dec
adc
test
mov
sarl
test
jmp
sahf
inc
push
pusha
roll
ror
sbb
sbb
test
aad
inc
dec
lea
nop
pop
mov
mov
nop
cmp
add
ds
inc
push
pop
mov
adc
cmp
je
rcll
push
pop
movsl
sbb
ljmp
dec
imul
test
adc
xchg
add
daa
in
adc
outsb
dec
lret
test
sarl
jae
call
inc
cmc
mov
pop
adc
fwait
popf
movsl
in
and
push
cld
add
and
sbb
icebp
jecxz
cmpl
sub
in
inc
fidivs
ret
mov
iret
fcomp
sbb
inc
add
sbb
imul
jne
dec
fidivrs
fcoml
outsb
mov
dec
lcall
xor
outsl
lods
je
dec
loop
or
push
fs
outsl
rolb
xchg
push
ja
aas
les
pop
out
das
dec
sub
popa
xchg
push
aas
jmp
push
mov
inc
push
mov
jp
outsb
push
sar
hlt
push
in
or
mov
data16
test
test
idiv
push
add
adc
es
mov
mov
cmp
push
xor
inc
adc
sbb
jns
xchg
mov
cwtl
mov
inc
hlt
jge
push
or
adc
std
xor
cmpb
xlat
adc
fcomi
pushf
mov
sub
sbb
fidivl
mov
inc
push
adc
rcl
repnz
xorl
dec
pop
in
stos
icebp
stos
mov
std
mov
sub
add
filds
dec
lods
sbb
test
popf
pop
in
lock
inc
xor
pop
and
add
es
sub
repnz
dec
cld
test
dec
jl
hlt
shl
push
das
testl
test
in
xbegin
pop
push
xlat
mov
outsl
push
sub
mov
mov
mov
sbb
fdivl
add
gs
call
movsb
sub
cmp
adc
inc
xchg
clc
push
adc
jmp
xchg
push
mov
outsl
inc
shll
or
leave
xchg
push
loope
nop
lret
push
xchg
into
mov
icebp
divl
ret
jmp
shl
pop
sbbb
scas
mov
cwtl
ja
int
dec
cs
enter
xchg
mov
xchg
int
cmp
push
sarl
push
inc
pop
outsl
and
iret
outsb
ret
sbb
and
pop
mov
mov
aas
es
mov
and
jp
sti
out
push
jecxz
xchg
ds
xor
int
xchg
pop
shrb
movsb
hlt
aas
stos
aas
push
rolb
in
add
and
mov
xorl
sub
iret
iret
outsb
push
and
enter
or
dec
jmp
cmpsb
cmpsl
addr16
pop
push
jl
nop
add
ds
stos
push
lea
movsb
cltd
inc
dec
and
lea
mov
fisttpl
cmp
test
cs
mov
push
fwait
lods
pushf
dec
inc
ds
ljmp
adc
lock
mov
scas
jae
jo
out
jge
in
outsb
icebp
clc
jmp
adc
fldt
cmp
pusha
int
sbb
dec
cmp
aam
mov
scas
push
cltd
mov
fs
aam
add
or
syscall
xor
scas
das
dec
ja
inc
mov
dec
add
adc
sar
lods
leave
add
xor
es
aas
mov
fwait
xchg
add
rorb
push
cli
xchg
mov
mov
xor
pop
fisubl
fucomip
adc
pop
or
repnz
dec
out
jae
lock
cmp
pop
jge
or
lcall
sub
mov
inc
jns
mov
cmpsb
je
add
mov
leave
dec
ret
dec
mov
sahf
pop
aaa
jbe
xor
mov
imul
jb
loopne
and
jge
lcall
mov
lods
leave
outsb
mov
test
mov
nop
dec
insl
dec
in
hlt
sub
push
pop
jae
sub
mov
out
push
ret
pop
imul
push
add
pop
arpl
bound
pop
int
sti
sbb
pusha
sahf
test
add
sbb
and
inc
pop
push
outsl
aam
arpl
loope
jnp
cmp
lret
dec
pop
or
jg
lock
cmp
ljmp
mov
adc
push
idivl
cltd
pop
rclb
adc
sahf
roll
lock
sbb
jb
mov
bound
mov
push
int
test
cmp
aas
mov
dec
fistpl
fwait
lds
dec
mov
xor
ds
pop
lret
clc
hlt
xchg
cmp
sub
ss
mov
push
jno
hlt
pusha
xor
and
mulb
fsubr
dec
cmp
shll
xchg
cmc
pop
call
dec
add
out
inc
add
pop
dec
pop
jns
mov
imul
sub
xchg
xchg
sub
in
pushf
mov
jg
ja
pop
jp
sbb
clts
and
subl
pushf
mov
pop
xchg
push
sbb
push
cmp
aaa
pop
add
xchg
jno
jle
in
cmp
cwtd
movsl
sub
cld
push
loop
mov
loopne
xor
fidivs
jmp
mov
out
rol
mov
test
arpl
sub
pop
cmpsb
in
rcrl
push
cmpsl
mov
jns
cmp
or
lret
test
jnp
mov
sbb
pop
or
pop
das
mov
pop
stc
lret
ja
cli
andb
ficoml
push
cli
fdivl
mov
into
cli
mov
jbe
inc
fnstenv
push
aaa
or
lds
stos
pop
movsl
add
sub
movsb
int3
push
lret
scas
lea
pop
arpl
loopne
xor
and
jo
sub
hlt
push
dec
out
pop
xchg
mov
mov
daa
repnz
ljmp
rclb
cmp
into
sub
mov
repnz
pushf
push
push
jne
pop
dec
sbb
xor
dec
cmpl
mov
or
lret
pop
int3
pushf
and
sub
mov
jg
lods
xor
aas
xor
and
inc
pop
shlb
leave
and
cmp
inc
mov
movsl
mov
call
jb
cli
adc
add
lods
sahf
iret
or
mov
and
sub
das
fwait
pusha
dec
mov
je
cmp
mov
sarl
js
jge
sub
jge
rcrb
sbb
leave
nop
test
jg
inc
mov
test
push
mov
jbe
push
dec
mov
das
cmp
mov
test
jg
scas
popa
sbb
sbb
xchg
mov
mov
loopne
xchg
push
incl
stc
push
pushf
lret
test
mov
fs
adcl
push
stc
mov
sti
incl
jns
cltd
mov
adc
int
or
pushl
bound
loop
push
mov
mov
and
stos
sub
mov
mov
ljmp
adc
leave
mov
jb
sarl
mov
mov
xor
insl
cmpsl
cmpsl
add
mov
lret
jns
mov
or
stos
iret
das
ret
dec
ret
lods
insl
xchg
cmpsb
add
cltd
mov
iret
add
xchg
jmp
dec
fadds
ljmp
jno
sub
test
ljmp
xor
xchg
push
xor
add
sarl
jne
push
or
daa
mov
and
insb
xchg
inc
add
jge
jp
mov
cmc
inc
dec
jno
or
mov
dec
dec
jae
and
inc
pop
jle
data16
repz
xor
int3
add
inc
stos
pop
je
inc
dec
jl
mov
inc
jl
pop
lcall
pop
std
jge
adc
dec
mov
fcmovnb
xlat
sahf
cltd
lret
inc
test
fstpl
mov
ja
addr16
mov
out
mov
out
jl
xor
jge
jecxz
fwait
stc
scas
or
xor
or
mov
jb
push
lcall
add
shlb
xchg
movsl
pop
push
test
mov
leave
incb
jne
inc
adc
fs
stos
push
xchg
int3
arpl
in
lods
fistl
jbe
daa
dec
or
fbstp
sub
xchg
or
outsl
sub
jo
xchg
fsubl
ja
pop
subb
xchg
inc
sbb
gs
icebp
cmp
cmp
inc
sub
jo
lea
xchg
mov
mov
xchg
push
or
mov
cmpsb
in
jg
insb
mov
jmp
pop
inc
lcall
ret
fisttps
int
movupd
and
adc
add
mov
out
lret
inc
mov
inc
mov
jmp
sub
pop
mov
in
pop
and
and
insl
pop
shll
sti
xchg
repnz
bound
daa
add
sub
xor
add
xchg
dec
or
push
xchg
stc
inc
outsl
ljmp
testb
mov
stos
mov
dec
cli
jmp
inc
cltd
incb
jae
add
insl
lret
jbe
jbe
sbb
pop
mov
mov
cmp
mov
mov
xor
jg
dec
repz
jge
lods
xor
mov
jb
pusha
ds
jo
inc
loope
notl
mov
pusha
pop
addr16
clc
and
lret
inc
in
dec
addr16
lcall
add
ljmp
je
movsb
in
jno
sub
pop
fnstsw
mov
sub
pop
sbb
in
negl
xchg
repnz
fdiv
cmp
arpl
lahf
repz
fsubrs
push
lock
imul
adc
fcomi
jns
pop
sahf
insl
add
loop
add
jo
cltd
and
pushf
into
lds
movb
and
and
lcall
iret
dec
xchg
aad
aas
xchg
in
das
xchg
cmp
pop
stos
push
fists
pushf
or
xor
pushf
rclb
add
fstpt
in
xor
xchg
movb
testl
mov
sub
xchg
or
xlat
es
lock
cmc
ss
jns
in
fldl
sbb
lock
cmp
nopl
mov
ss
rorl
mov
push
roll
imull
pop
je
xor
pop
das
adc
iret
sbb
lcall
inc
mov
sbb
push
push
jp
ljmp
sub
iret
cmpsl
mov
cli
pop
test
mov
mov
hlt
fs
cld
xlat
ficomps
bound
push
in
push
jmp
dec
adc
sbb
sbbb
mov
xchg
cli
fbstp
test
xchg
in
aam
cmp
pop
std
int
pushf
stc
scas
pop
push
add
das
xchg
push
sbb
and
add
icebp
add
sub
lock
aad
xor
jb
xchg
push
jne
jb
and
imul
stos
jge
icebp
lods
xchg
pop
dec
addr16
cli
rclb
lret
add
fs
loopne
mov
push
push
je
xchg
icebp
and
pop
and
adc
jmp
or
inc
sbb
pop
in
out
xor
dec
push
shrb
cli
cltd
and
pop
cmp
lret
je
shr
add
mov
pop
sbb
mov
xor
in
scas
lds
jp
push
push
pop
mov
sbb
leave
mov
add
jl
mov
mov
div
cs
test
sbbb
sbb
filds
in
pop
js
mov
inc
in
aaa
or
ret
in
addr16
rol
jb
aam
push
cmp
out
pusha
jae
xor
imul
jl
pop
flds
out
enter
fidivl
in
rcll
push
pop
lock
rcl
pop
jb
aad
jbe
sub
jle
inc
and
shlb
and
or
pop
sub
xchg
inc
ror
mov
out
insl
mov
data16
movsl
lods
pop
stos
xor
cld
xlat
loopne
mov
jp
cmp
sbb
inc
sbb
in
and
inc
or
cmpsb
ret
push
or
cmpsl
repnz
or
or
fdivp
test
arpl
add
test
or
dec
mov
cld
lods
xchg
sarb
lds
nop
pop
scas
mov
and
test
int3
outsb
outsl
in
inc
in
pop
fidivs
ficoms
cmpsl
insb
repnz
and
fldl
adc
data16
ljmp
shll
aam
iret
xchg
xchg
mov
fidivrl
loope
fucom
add
mov
test
xor
icebp
lret
cmc
lret
or
pop
fidivrl
push
adc
cli
jg
fistpl
pop
insb
cmp
cmp
mov
jg
jnp
xchg
rcrl
jp
dec
mov
shlb
dec
pop
mov
cltd
adc
cmpsb
insl
addr16
shlb
cli
xchg
pop
fisubl
or
jno
dec
or
pushf
ja
mov
inc
dec
imul
pop
mov
adc
jmp
sbb
jns
jp
out
xchg
push
push
or
inc
fistpll
adc
or
iret
pop
mov
or
xor
sub
mov
cs
outsb
fsubrl
into
rep
and
and
fldenv
xchg
xor
lods
ja
call
lea
ret
mull
pop
xor
fists
ss
sub
jns
pop
xlat
jg
insb
loope
cwtl
arpl
mov
xchg
loopne
pop
xchg
xlat
add
out
sbb
repnz
lods
or
mov
popf
sbb
aaa
push
pop
mov
bound
fcomp
test
and
mov
xchg
sbb
clc
stos
inc
adc
je
icebp
dec
cmp
nop
and
test
aas
ljmp
mov
push
mov
xchg
xchg
clc
pop
inc
repz
jge
fldl
insb
xchg
aam
les
adc
xor
jge
mov
outsl
add
movsb
dec
ret
pop
dec
outsb
cmp
int
mov
int
orl
pusha
insl
jo
loopne
sahf
aam
rol
cmc
loope
test
test
bt
fbstp
add
add
cmp
inc
inc
mov
jecxz
mov
out
cmc
mov
sbb
shl
stos
pusha
inc
cmp
push
int3
mov
icebp
insb
inc
mov
pop
dec
mov
mov
inc
insb
lock
dec
aas
out
jg
outsl
data16
sub
adc
test
inc
mov
int3
cmpsl
jmp
xchg
or
clc
aas
repz
int
and
sub
and
jne
jo
jl
addb
dec
mov
lea
loope
movsl
pop
insb
push
stos
mov
lods
divb
cmp
jg
lds
jae
shr
outsl
push
lret
popa
push
pop
cmp
pushf
sbb
sbb
jnp
adc
xchg
xchg
mov
push
idiv
push
sub
imul
cmp
insb
jns
and
sub
mov
insl
mov
sbb
pop
sbb
sub
das
pop
popa
mov
test
or
mov
fs
rcll
cmp
divl
sub
sbb
adc
sbb
inc
push
and
ret
dec
test
je
sbb
dec
cmp
hlt
sub
adc
xor
cwtl
or
mov
sub
xor
fs
sub
cmpsb
mov
arpl
cmp
fdivrp
xlat
inc
cld
cmpl
jo
ror
das
gs
test
mov
sbb
adc
aas
cmp
andl
in
repz
cmp
popa
test
sbb
add
int
shrb
fidivrl
dec
sub
stos
mov
jle
mov
arpl
mov
clc
sub
add
div
mov
pop
insb
popf
shll
and
ss
pusha
iret
mov
mov
cmp
push
cwtl
arpl
or
int3
sahf
inc
cli
adc
test
sbb
jle
push
lcall
imul
test
cmp
inc
cld
jns
and
sub
pop
adc
cltd
sbb
and
lcall
mov
push
into
js
and
mov
pop
mov
imul
mov
inc
push
sbb
push
mov
jo
lods
sbb
push
sub
iret
mov
add
rorb
cmpsb
insb
mov
dec
mov
push
xchg
adc
mov
push
imul
cmpsb
mov
leave
outsl
inc
movsl
jae
arpl
mov
imul
sbb
out
fstl
jecxz
xchg
adc
add
xor
jne
sub
inc
popa
lds
hlt
add
mov
popa
mov
pop
dec
cltd
ds
fistl
xchg
enter
pop
mov
push
movzbl
mov
outsb
subb
pop
cmpsl
ja
sti
add
mov
int
add
loop
lods
stos
cmp
shrb
inc
movsl
mov
rcrl
andl
sub
jbe
and
push
rorl
mov
cltd
xchg
mov
add
sub
leave
push
stos
lods
cmpsb
arpl
addb
or
sub
push
mov
adc
cmp
adc
arpl
sahf
mov
cwtl
inc
and
stos
lret
add
loope
add
fs
addr16
cmp
outsb
shrb
iret
aas
sub
imul
mov
mov
movsl
rcl
fidivs
pop
jmp
or
out
mov
cltd
aaa
xor
xor
xchg
out
ja
pop
je
inc
stc
aam
mov
push
dec
add
xchg
dec
or
sub
movsb
pop
jmp
cmp
fcomip
outsl
sti
je
jmp
fisttps
mov
je
cs
lods
xchg
sub
mov
pop
sti
jmp
lahf
arpl
cmp
dec
jg
inc
mov
xor
xchg
cmpsb
pop
pop
dec
call
pop
call
test
jle
ljmp
inc
mov
inc
bnd
xchg
fcompl
push
in
mov
xlat
std
lods
push
popf
cmc
arpl
cmpsb
adc
arpl
sbb
jg
icebp
scas
jnp
ljmp
mov
test
xchg
and
lds
mov
add
mov
ljmp
pop
jg
mul
call
sarb
adc
je
jp
add
movsb
incb
jge
jnp
push
scas
loopne
loopne
aam
adc
jno
ss
popa
aad
xor
or
dec
cmp
cmpsl
daa
cmc
popa
or
call
jb
je
sti
adc
xor
cltd
inc
add
fnstsw
ret
pop
aam
scas
mov
xchg
sahf
jp
fsub
xchg
sub
or
jo
or
sbb
or
push
ds
push
or
jg
sbbl
sahf
cmp
fisttpl
mov
repz
sbb
mov
adc
adc
lret
push
xchg
test
jb
movsb
int
push
and
or
xor
mov
andl
test
sub
mov
push
xchg
sti
cs
cs
mov
into
fldcw
mov
inc
adc
cmp
push
hlt
sahf
sti
push
add
movsb
in
test
bound
out
stc
addb
sahf
add
cmp
inc
out
lret
icebp
pop
icebp
and
cmp
jnp
mov
xchg
xor
lahf
shlb
addr16
adc
out
pop
fiaddl
data16
in
push
inc
or
add
les
push
pop
xor
ret
push
jl
mov
pop
cmp
ret
mov
mov
xchg
subl
je
adc
mov
mov
lret
shlb
jno
sub
jb
mov
test
lock
insb
sbb
mov
aam
jo
inc
or
and
sti
mov
and
sahf
xchg
cmp
cwtl
push
mov
mov
aaa
cmp
mov
or
jns
inc
mov
cld
dec
fwait
cmp
push
mov
pop
jae
lahf
ss
mov
and
xchg
xchg
xchg
lods
pop
daa
push
or
bt
insl
or
out
xchg
imul
cmp
jbe
xchg
mov
cmp
testb
sub
ds
sub
mov
adc
addb
jp
lods
movsb
sbb
xor
sub
dec
loopne
dec
and
pop
lret
fdivrp
lods
jg
add
jo
mov
aad
popf
xchg
add
pushf
sbb
test
pop
mov
loope
xchg
lds
xchg
fistps
leave
imul
into
cmp
jmp
insl
adc
jmp
mov
push
inc
jb
xlat
sub
adc
xchg
das
bound
jae
cld
mov
xor
mov
stos
pcmpeqb
cmp
ja
ljmp
imul
adc
gs
pushf
mov
jl
daa
sti
jecxz
ljmp
mov
add
cmpl
xlat
inc
xor
xchg
cmpb
mov
test
and
and
mov
cmpsb
cmc
loope
fisttpll
fisubl
xlat
js
mov
fsubrl
or
imul
push
imul
cmp
xor
mov
mov
jge
ret
int3
push
rcll
popf
add
push
dec
or
lods
je
pop
sub
pop
xchg
cld
test
cmp
or
push
fsts
pop
negl
dec
and
inc
fs
lods
sub
mov
loopne
cli
jp
loope
sub
into
sbb
fucomi
gs
push
outsb
test
push
fisttpl
jg
ljmp
outsl
call
dec
and
aad
sbb
dec
and
dec
gs
clc
xorl
or
jnp
cltd
bnd
pusha
rep
pushf
sbb
xor
insb
in
repz
imul
adc
cmp
xor
sub
adc
or
dec
xchg
cmp
scas
add
fisttps
in
imul
in
cmc
mov
inc
in
sahf
repnz
in
jo
out
mov
rcr
lea
adcl
rcll
stos
repz
sub
xchg
sub
mov
ljmp
pushf
cmpb
xchg
jg
in
or
mov
xor
xor
rol
fnsetpm(287
mov
lock
aas
pusha
inc
hlt
imul
std
dec
cmpsl
cmpsl
cltd
xchg
out
jmp
push
mov
sbb
cltd
cmpsl
or
outsb
jo
mov
adc
xor
js
inc
cwtl
ja
scas
push
pop
inc
mov
xchg
cmpsl
fidivrs
pop
or
rolb
or
es
add
xlat
pop
sub
push
xchg
iret
lahf
rcrb
inc
pmaxub
dec
outsb
daa
sbb
xor
or
and
pop
fs
into
push
sub
in
xchg
scas
cmp
mov
popl
mov
or
xchg
sub
cmp
cmc
ss
mov
jae
jae
push
fiaddl
mov
jp
mov
or
lods
and
xor
fisttps
lods
loope
mov
sbb
dec
or
xchg
mov
push
mov
add
test
and
jns
jo
or
xor
mov
adc
mov
jl
push
mov
cwtl
je
in
cmp
sbb
lds
fistps
insl
dec
mov
lcall
jns
loopne
shlb
int
aad
xchg
rolb
lods
cwtl
outsl
push
fucom
cmp
cmp
aaa
push
mov
pusha
add
shrb
cs
mov
cmpsl
and
cmc
jae
cmp
orl
mov
adc
andl
lcall
xchg
idivb
out
xlat
push
or
and
stos
scas
cwtl
adc
inc
repnz
inc
lea
add
lret
sub
cmp
ja
fwait
rorl
mov
sbb
stos
inc
cmp
aam
jl
cmc
inc
sub
repnz
jnp
adc
push
js
dec
xor
dec
mov
shlb
cmpsb
and
pop
add
and
xor
or
lea
cmpsb
sub
imul
push
lock
loopne
pop
in
xchg
jo
inc
addr16
sub
mov
hlt
out
push
xchg
ss
push
and
fists
cmp
xchg
fs
fadd
loopne
adc
mov
and
mov
out
dec
xchg
xchg
adc
mov
call
xchg
int
cmp
jle
and
js
popa
or
jnp
add
cmp
xlat
xchg
inc
inc
test
sub
in
xchg
movsl
ljmp
cmp
fnstcw
insb
nop
adc
jb
repz
sti
loopne
or
mov
xchg
and
clc
pop
sub
xchg
xlat
pop
add
ret
leave
ljmp
or
pop
xlat
icebp
mov
lcall
mov
cmpb
or
dec
mov
cmp
test
mov
xchg
jmp
xor
push
sub
enter
jp
mov
mov
sbb
push
rcrl
mov
nop
and
shlb
jne
ret
int
or
or
das
ret
loopne
xor
aas
xor
pop
cmp
inc
push
xchg
stos
sahf
push
out
or
xchg
xchg
loopne
push
or
jmp
aas
lret
test
sub
lock
pop
mov
imul
xor
sub
dec
in
jne
jae
je
loop
cmpb
mov
sub
incl
mov
jae
xchg
mov
out
sub
pop
je
lret
xorb
push
add
cmp
arpl
lock
push
iret
xchg
repnz
mov
inc
pop
out
mov
gs
subl
pushf
stos
cld
jle
push
push
push
cmp
add
out
insl
or
or
out
sbb
pop
in
inc
dec
rcrb
mov
dec
in
xchg
addb
or
sub
push
fstps
faddl
loope
pop
cmpsb
out
adc
dec
and
fldcw
addr16
clc
inc
repz
ret
stos
push
jne
std
call
xchg
cmp
bound
inc
add
jl
adc
mov
arpl
popa
fstpt
adc
inc
pop
mov
sub
push
sub
and
sbbb
mov
jge
hlt
loopne
push
sbb
test
pop
jno
mov
ds
mov
jnp
in
test
adc
outsb
popf
out
xor
xor
mov
cmp
dec
scas
mov
pop
pop
movsb
and
pop
push
or
xchg
leave
test
xchg
dec
add
insl
sbb
push
or
mov
orl
dec
cwtl
jbe
hlt
repz
push
shl
dec
xchg
stc
xchg
pushf
adc
rcll
or
jo
pop
xor
xchg
jns
lret
int
cli
mov
mov
aaa
clc
jno
mov
loope
repz
pop
add
jge
push
std
dec
jle
mov
gs
es
xorl
sub
pop
mov
pop
call
leave
inc
cmp
scas
lcall
mov
inc
pop
fisubrl
stos
pop
popl
jbe
push
int
loopne
jle
insl
mov
push
mov
fadds
add
ret
aaa
inc
ljmp
cltd
add
hlt
or
push
lahf
push
lock
mov
xorl
mov
mov
lea
mov
mov
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
add
and
mov
mov
subl
xor
adcl
add
movl
jne
jmp
adc
mov
subl
sub
xor
sbbl
mov
decl
mov
xorl
mov
andl
xor
xor
addl
sub
sub
xor
mov
mov
mov
jmp
sbb
mov
sbb
mov
xor
xor
orl
sub
movzbl
sbb
mov
sub
xor
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
imul
mov
mov
mov
add
or
mov
jmp
in
in
xchg
lret
cwtl
iret
add
fstpt
pop
addl
dec
and
dec
movb
mov
enter
rorl
pop
push
fsts
jp
sti
clc
scas
pop
in
stc
push
cmpsl
push
je
jae
inc
mov
jp
call
cmp
loopne
std
gs
aad
push
adc
xchg
lods
mov
inc
leave
pop
into
popa
push
leave
sti
dec
mov
shll
pop
imul
data16
fmuls
xchg
hlt
dec
adc
sub
daa
jnp
lods
jl
out
dec
popa
sub
mov
pop
cmpb
xchg
stc
mov
xchg
lahf
mov
jnp
mov
call
xor
jnp
outsb
loop
sbb
fidivl
pop
pop
xor
mov
shrl
and
push
sti
repz
pop
test
repz
ss
dec
sbb
into
sub
push
out
jnp
mov
sbb
jecxz
inc
and
mov
mov
inc
aam
fwait
mov
loopne
icebp
pop
iret
or
pop
and
jecxz
sbb
push
push
dec
and
rorb
mov
popa
push
inc
idiv
mov
jl
jno
pavgb
fildl
push
adc
push
daa
stos
or
or
mov
ja
ffreep
std
cmp
cmpsl
psllw
inc
cmp
mov
loopne
in
cld
pop
fcoms
cs
or
mov
xor
push
sub
jmp
pop
adc
adc
lods
sub
clc
and
shrb
je
pcmpgtb
jecxz
pop
sbb
cmp
icebp
fcompl
test
inc
mov
into
pop
movsl
enter
lock
cmp
sub
ret
or
jg
lods
push
in
xor
cld
cmp
add
sbb
in
xor
cs
aad
jns
jg
jl
imul
jle
jno
add
lods
xor
inc
xor
adc
ret
mov
ja
push
popf
test
push
cli
orb
xor
shrl
rorb
js
fmuls
insl
fcoml
aas
and
xchg
add
orb
push
add
testl
shll
lret
popf
push
lret
mov
and
pop
mov
cmp
xchg
int
jmp
outsb
adc
pop
xchg
sub
test
push
mov
mov
mov
pushf
lea
mov
ljmp
jb
jecxz
out
sbb
sbb
inc
push
fiaddl
or
addr16
inc
dec
xor
xor
xor
ficompl
push
xchg
xchg
je
je
cmpsb
inc
adc
sub
and
fnsave
dec
repnz
push
inc
fcompl
int
and
or
inc
sbb
popa
loopne
in
or
mov
mov
inc
out
lahf
push
data16
leave
rorb
insb
sub
jbe
cli
mov
loopne
mov
mov
insb
add
jmp
push
cmp
mov
ja
adc
fwait
lret
sub
adc
lock
pop
xchg
scas
shl
jnp
push
jo
int3
cltd
xchg
mov
dec
mov
gs
idivb
push
fcompl
add
mov
mov
pop
jno
mov
mov
out
stos
cmp
dec
outsl
mov
testb
mov
push
aas
dec
mov
mov
jmp
test
mov
stos
dec
jmp
mov
stos
inc
popf
imul
sub
lods
inc
jmp
xor
in
mov
cltd
daa
add
mov
mov
sti
push
xor
mov
mov
dec
aam
push
and
sub
test
inc
push
ficoml
mov
inc
in
int
xchg
sbb
bound
sbb
jmp
sbb
adc
dec
enter
les
mov
sbb
movsl
pop
sub
pop
mov
mov
adcl
jge
int
pop
cld
adc
jle
insl
inc
in
mov
xchg
pushf
shrb
fxch
nop
imulb
inc
xor
dec
out
nop
sahf
cli
lea
rorl
outsb
clc
or
popa
mov
mov
cli
test
add
in
fdivr
imul
aas
sub
das
push
cmp
cmp
int
add
pop
adc
jbe
jge
inc
sti
shlb
cmp
add
in
inc
mov
aad
sbb
add
sarb
sarl
jne
into
rorb
in
dec
and
mov
jmp
push
mov
fs
movsb
mov
sub
cmp
pop
imul
mov
push
fcoml
popf
add
sahf
sbb
fnstcw
xlat
push
jb
orb
jb
xor
cmp
cmpsb
mov
pop
cs
insl
sbb
shrl
movsl
push
aas
jmp
mov
jmp
scas
xchg
mov
cmp
cltd
addr16
mov
add
jns
notl
movsb
adc
adc
sub
shlb
adc
imul
sbb
lahf
jecxz
lock
daa
imul
and
popa
lahf
lahf
gs
lahf
ja
xlat
arpl
mov
dec
mov
inc
das
repnz
push
jp
xchg
je
aad
jmp
mov
jne
dec
int3
xchg
sub
fadd
cli
mov
cmc
js
push
mov
xor
sbb
subl
sub
andl
pop
mov
popf
mov
push
lods
jp
rorl
cmpsl
nop
out
or
jbe
addr16
enter
lret
sarl
xchg
adc
cli
popf
out
cld
inc
bound
shrb
mov
sbb
out
mov
or
es
sub
jnp
pusha
les
popf
ret
push
jno
lds
mov
test
xor
in
mov
mov
cltd
flds
stc
push
pop
hlt
inc
mov
ljmp
shl
add
xchg
incl
mov
out
and
pop
movsb
aam
sbb
cmp
xchg
std
jno
lea
popa
add
inc
cmp
andl
in
addb
in
das
sub
jae
gs
pop
mov
scas
aad
pop
fdivrs
es
mov
mov
cltd
daa
mov
jecxz
xor
loop
jmp
stos
and
test
mov
loop
stos
and
jmp
mov
cmpsl
insl
xchg
inc
int
pushf
mov
mov
dec
mov
push
push
and
adc
push
xchg
pop
jl
push
mov
sub
jns
bound
scas
imul
sbb
scas
and
or
lea
pop
dec
mov
int3
xor
dec
in
fldt
sar
movsl
movsb
jbe
dec
shlb
and
xor
addr16
iret
sbb
aas
cwtl
xchg
fmulp
sahf
pop
loopne
enter
xor
xor
sbb
shll
inc
pop
mov
fcomps
adc
pushw
dec
mov
pop
dec
xchg
or
adc
push
leave
arpl
not
mov
xchg
sbb
out
add
xor
aad
lcall
ret
shl
loope
cmpsl
repnz
ret
out
out
roll
xchg
mov
stos
mov
xor
test
inc
xchg
dec
xchg
repz
dec
mov
mov
mov
call
and
xchg
sbb
imul
lock
fdivr
popa
xchg
into
aam
fmuls
add
clc
daa
daa
fisttps
mov
adc
lahf
rcrb
lret
sar
les
lock
mov
push
stos
and
sti
lea
xchg
sahf
cmpsb
mov
mov
loopne
movsl
jg
mov
gs
xchg
insb
add
sahf
pop
push
ja
std
mov
sub
add
mov
xchg
add
movsb
pop
fcompl
hlt
pushf
xchg
and
mov
jno
inc
mov
outsl
icebp
inc
imul
enter
mov
stos
into
enter
jb
or
insl
out
ja
mov
movsl
push
in
jge
rep
out
lret
and
mov
mov
jg
cmpb
scas
mov
and
cltd
jno
jmp
es
sbb
mov
stos
mov
pop
insb
adc
mov
fisubl
in
dec
lods
push
pop
xor
mov
shlb
mov
lret
adc
mov
outsl
shll
sbb
and
mov
lods
outsb
sub
call
jmp
sar
fsubrs
mov
gs
pop
push
test
test
fndisi(8087
add
mov
ret
jge
imul
adc
pop
jb
push
adcb
cmpsl
bound
mulb
loop
ficompl
jl
mov
in
and
fldcw
loope
mov
jle
push
pop
pop
outsl
mov
adc
inc
push
lcall
sbb
push
cmp
sbb
mov
aas
mov
xchg
movsl
aas
mov
out
fmul
in
dec
push
pop
xor
jmp
jno
inc
fisttps
repnz
mov
xchg
sbb
xor
or
mov
ss
push
arpl
out
mov
int3
sbb
pop
mov
imul
shlb
cmp
in
sub
mov
sub
push
gs
outsb
dec
dec
pop
aaa
cmpsl
jge
pop
jbe
dec
fwait
data16
sub
js
test
outsl
cli
dec
xchg
adcl
or
mov
lea
sbb
xor
dec
jns
xchg
push
pop
in
mov
in
add
mov
fisubrs
mov
nop
mov
xor
call
inc
push
int
xor
xorb
pusha
jnp
mov
sub
mov
push
sub
push
mov
out
mov
sbb
dec
or
shrl
dec
xor
bound
aad
cltd
mov
imul
and
xor
sbb
or
stos
ljmp
adc
clc
faddl
and
push
out
push
sub
pop
xor
mov
in
movsb
sbb
sbb
adc
or
or
inc
jbe
jb
or
push
sub
mov
xor
add
jne
cmp
lods
test
lahf
stos
pop
and
mov
jae
pop
inc
mov
addl
je
xchg
and
jno
and
mov
push
mov
daa
daa
ds
mov
shlb
jmp
inc
xor
roll
cmp
add
rclb
cmc
cmpsl
int3
sub
test
and
pushf
nop
movsl
and
or
rcll
cmpsl
cmp
fiaddl
sbb
mov
pop
icebp
xchg
sub
push
hlt
xor
xor
imul
mov
cmp
dec
imul
or
lret
scas
imul
testl
ds
push
xchg
cs
pushf
pop
sbb
push
or
lahf
stos
sub
in
ret
jp
adc
gs
pop
imul
mov
fisttps
js
mov
cmpl
ret
jp
std
enter
mov
nop
sbb
mov
repnz
inc
add
out
xor
cmp
lods
sub
outsb
xor
jae
sbbb
loope
jnp
adc
lahf
movsl
cmp
mov
cmp
mov
pusha
push
mov
stos
pushf
adc
mov
mov
mov
and
sbb
mov
daa
add
cmpsl
out
movsl
test
xor
je
sbb
aas
pop
pop
sbb
dec
and
cmp
das
lret
cld
add
popf
enter
fsubl
xchg
jnp
addb
lcall
cmp
int3
pusha
pop
out
ret
clc
rorb
aad
add
pop
loope
mov
mov
or
or
jo
xchg
inc
sbb
mov
sti
test
xchg
ljmp
mov
lock
mov
aas
in
adc
jnp
je
outsl
or
testl
pop
inc
clc
lock
push
jecxz
in
adc
mov
ja
adc
insb
sbb
idivl
push
loope
ljmp
pop
aas
testl
adcb
je
jne
dec
aas
in
add
cmpsl
mov
pop
sub
insl
enter
inc
and
push
jl
sbb
add
xor
mov
sub
push
adc
xor
mov
stos
mov
loopne
adc
stos
std
xor
add
faddl
faddl
in
fldl
jge
cs
push
pop
lock
stos
pusha
xlat
push
xchg
xlat
lods
cmp
sti
dec
loop
inc
pusha
mov
xor
lods
aas
and
bound
movsb
pop
fisttps
pop
bound
adc
lods
mov
or
subb
mov
lock
and
ja
stos
add
scas
and
xor
outsl
cltd
xlat
ret
and
insb
and
cmp
adc
adc
mov
int3
lcall
pop
addr16
jl
cmp
adc
inc
imul
inc
mulb
jae
mov
lods
push
aam
in
jb
or
or
lcall
imul
cld
sub
int3
enter
jmp
mov
cmpsb
cmp
adc
insb
pushf
cmp
loope
test
push
lock
xchg
or
stos
mov
cli
repnz
orl
shrb
xchg
jne
push
aad
js
insb
add
hlt
jns
sbb
mov
dec
les
add
or
bound
jne
cs
popf
clc
sub
gs
add
lret
frstor
inc
lret
and
push
je
roll
hlt
addb
int3
xchg
jb
xor
rep
mov
jle
std
subb
mov
jp
jnp
xor
mov
stc
pop
sbb
out
lahf
test
push
pop
and
addb
enter
aad
xchg
bound
dec
sub
pop
std
cmpl
cs
or
scas
sbb
mov
push
and
sub
js
add
push
push
mov
cmp
rol
loopne
fadds
test
call
daa
enter
jns
nop
imul
jge
dec
pop
sbb
jmp
adc
fidivl
es
and
add
lock
cmpsw
jnp
sti
xor
jns
ja
jg
cmpsb
and
dec
xchg
les
lret
in
ja
out
jnp
mov
or
mov
mov
out
in
adc
pinsrw
mov
aad
clc
xchg
mov
cmp
std
xchg
cmp
push
push
cmp
pop
daa
jmp
cmp
loop
and
imul
ret
hlt
push
jo
jae
aad
push
jns
sub
jg
push
jle
mov
add
mov
lods
fnsave
xor
add
int
pop
mov
xchg
sbb
pop
add
mov
and
mov
std
sbb
test
pop
or
stos
outsb
es
clc
dec
mov
mov
inc
pop
sbb
aas
out
or
mov
sub
outsb
push
repnz
xor
jle
outsl
jnp
out
fisttpll
mov
lds
data16
pushf
imul
xchg
testl
or
mov
dec
mov
insl
xor
mov
movb
mov
pushf
gs
test
mov
call
mov
mov
push
inc
fcmovnbe
jl
mov
sarl
std
loop
cmc
adc
and
xor
push
pop
leave
jl
addr16
das
testl
mov
das
mov
jl
mov
nop
pop
pop
std
inc
xchg
movsl
and
lds
pop
inc
xor
add
leave
imul
inc
lahf
dec
arpl
pop
into
mov
or
test
inc
sahf
sub
test
arpl
adc
lret
push
add
in
orl
roll
dec
ret
scas
rcrb
sti
fwait
sub
in
mov
adc
push
mov
inc
mov
shl
cmovno
mov
nop
aaa
add
mov
test
push
sub
sub
fmul
in
sub
lock
test
and
test
cmp
adc
xchg
adc
inc
imul
sub
xor
mov
es
xor
jecxz
push
add
lods
cmp
icebp
aad
sbb
ficompl
xor
or
or
pop
dec
jno
scas
xchg
pop
mov
loope
sbb
repnz
stc
jmp
sets
add
stc
cwtl
pushl
jb
cmp
ja
in
in
in
int3
inc
adc
outsb
fisubs
xlat
add
imul
adc
fcoml
aaa
ss
rolb
fwait
insl
jbe
jno
popf
inc
mov
repz
push
fstl
dec
mov
and
jno
jmp
inc
popa
ds
fbstp
in
adcb
add
cmp
fisubrl
mov
je
adc
jecxz
push
hlt
push
xor
sbb
and
rorb
sti
or
fnstcw
xor
xchg
sahf
or
jle
jmp
cmp
add
jp
jmp
push
movsb
xor
adc
pop
cmp
push
pop
popf
jbe
xor
popf
jmp
out
lods
add
xor
lret
mov
int3
cmp
fistl
into
icebp
push
rol
orb
stos
mov
push
xchg
jo
inc
in
scas
popf
inc
mov
sub
xchg
mov
mov
popa
insl
rclb
jns
cmp
out
xchg
add
rcrb
sahf
loope
and
sub
and
js
pop
pop
push
mov
imul
xchg
sub
bound
jp
inc
repz
mov
dec
lea
nop
cld
xchg
call
ljmp
scas
adc
loopne
sub
stos
hlt
sub
loop
jl
pop
mov
icebp
fstps
jle
xchg
jne
jmp
mov
jge
xchg
inc
fwait
jno
repz
popf
and
ss
and
xchg
or
adc
stc
lock
jl
pop
lcall
pop
sbb
jne
sub
imul
scas
sahf
cltd
aad
fcmovne
fs
mov
mov
lcall
fmuls
jne
cmpb
popf
or
push
cld
ljmp
mov
xor
ror
adc
nop
mov
aaa
out
daa
daa
dec
nop
dec
pop
bound
jmp
sbb
aad
popa
lock
mov
sarl
arpl
jne
movsb
jno
stc
clc
aad
pop
inc
add
jnp
adc
push
sar
adc
push
sub
jne
mov
data16
stos
pop
mov
insb
push
or
push
std
in
repnz
bound
repz
mov
lcall
fstpl
adc
sbb
mov
sbb
subl
outsb
pop
stc
add
fisubrl
pop
mov
cltd
push
cmp
test
xchg
cmp
adc
nop
jns
xchg
add
out
add
cmpl
xor
xchg
or
and
xchg
cld
inc
fisubrs
cld
popf
stos
cmp
push
xlat
jbe
test
gs
repnz
push
loope
cwtl
dec
sbb
dec
inc
mov
ret
js
test
mov
lret
in
cmp
adc
jge
fidivs
mov
sub
cmp
add
repnz
arpl
and
gs
sub
adc
call
dec
dec
into
mov
insb
and
test
sahf
fwait
repz
xor
inc
outsb
cmc
dec
push
sbb
add
cs
ret
cmc
call
addr16
cltd
cmp
aam
cs
ret
in
lods
sub
push
sbb
ljmp
push
out
jg
stos
jb
and
imul
xor
jg
fbstp
incl
ffree
std
icebp
es
xchg
pop
pop
addr16
mov
loope
dec
loopne
xor
xchg
aas
dec
aam
add
scas
js
popf
push
xchg
fs
jb
movsb
jb
xchg
lret
ja
push
inc
out
outsb
in
xchg
das
jmp
mov
sbb
lds
xor
dec
inc
enter
pop
add
std
xor
imul
bound
lret
icebp
dec
jecxz
lahf
lret
mov
and
cmp
dec
mov
xchg
cmpsb
jo
loopne
into
and
aaa
into
cmp
push
imul
into
mov
bound
push
out
sarb
iret
pop
xchg
fwait
lahf
xchg
cmp
add
sub
add
xor
xchg
mov
and
sbb
jbe
adc
gs
inc
jne
push
pop
pop
dec
ret
lcall
in
nop
scas
ret
movsl
lds
ror
dec
xor
lds
adc
xor
jge
flds
repnz
test
cmp
inc
int3
out
jb
xor
lret
push
xchg
test
call
sahf
scas
mov
lods
das
adc
fucomip
scas
mov
or
mov
sbb
mov
lcall
lods
fs
push
push
cmpsl
mov
nop
inc
popa
mov
mov
repnz
imul
das
jno
inc
jl
dec
fsubr
mov
hlt
cmp
in
icebp
cmc
xor
push
or
nop
rclb
movsb
andl
iret
xor
dec
add
pop
out
cmp
add
insb
sahf
movb
data16
mov
jge
fadds
int
inc
int
test
mov
pop
out
pop
iret
sarb
mov
pop
jmp
or
cli
cwtl
and
pushf
into
out
push
loop
test
ret
pushf
imul
sub
jp
push
jns
enter
sti
popf
sbb
into
pop
adc
mov
popf
lods
inc
popf
lahf
xor
aad
cltd
mov
xor
push
xor
or
call
bound
aaa
divb
lods
and
stos
mov
jge
cs
leave
xchg
or
xlat
xchg
xor
jnp,pt
jmp
push
repnz
mov
cs
mov
les
mov
push
pop
fs
jle
adc
out
in
test
mov
dec
mov
cmc
arpl
movsb
lods
scas
mov
insl
mov
ret
insb
mov
loop
les
mov
mov
mov
in
push
inc
mov
mov
jl
push
fdivs
adcl
and
sub
leave
sub
cmp
out
inc
ss
int3
sar
xchg
mov
test
repz
hlt
lahf
movsb
jbe
or
call
push
loopne
xchg
shlb
stos
inc
gs
mov
lret
push
or
fdivrl
nop
pop
arpl
sbb
sbb
add
jae
mov
dec
js
lods
or
call
lods
adc
pop
lret
push
ret
dec
xchg
xchg
jl
mov
xchg
insb
repnz
cmp
add
add
leave
iret
cmp
js
lret
ror
les
ljmp
or
cwtl
mov
sub
or
xchg
leave
fsubrl
fwait
and
faddl
cmp
push
push
iret
dec
inc
lahf
mov
pop
ds
roll
scas
xor
and
fstpl
push
sbb
sub
add
mov
loope
xor
fcomip
dec
leave
xchg
push
add
nop
inc
stos
fs
jp
movsb
cli
xchg
pusha
jb
and
push
ret
sti
adc
call
arpl
ds
in
inc
push
dec
mov
xor
cli
mov
add
ljmp
or
cmp
lcall
rorb
and
repnz
mov
repnz
cmp
cmp
aaa
mov
ja
mov
sbb
clc
cld
sbb
gs
xchg
in
jmp
fdivr
in
out
js
xchg
mov
pushf
inc
xor
mov
dec
lock
xor
imul
imul
mov
and
mov
push
sbb
arpl
ss
add
adc
inc
dec
push
pop
jns
pop
push
out
out
push
outsl
add
and
sti
inc
add
add
or
aad
mov
dec
inc
adc
lahf
movsl
pop
sub
aad
fldcw
mov
stc
cmpsb
sbb
dec
dec
adc
jmp
push
add
fstps
xor
ja
fdiv
cmpsb
inc
imul
pop
fistpll
outsb
inc
clc
sub
repz
sub
stos
xchg
stc
and
into
sub
popa
jb
or
mov
cld
push
xor
addr16
dec
push
mov
mov
mov
xlat
fmulp
jp
xchg
push
sub
add
push
out
mov
xchg
sbb
cmpl
jae
andl
inc
pop
mov
dec
test
adc
xchg
jae
mov
call
push
xchg
sbb
int
ret
popl
xor
bswap
clc
pop
mov
shll
notb
rorl
mov
rorb
and
ja
clc
adc
xorb
sub
out
inc
dec
adc
jmp
adc
mov
push
lea
jge
jecxz
or
cmp
xchg
stos
adc
leave
in
icebp
adc
inc
jge
cmp
push
fmull
mov
mov
push
fwait
sub
ds
out
adc
das
jns
add
popf
arpl
jle
repz
js
jnp
push
lret
inc
dec
hlt
lret
xchg
into
popa
ret
push
jne
or
pop
stos
xor
mull
mov
mov
mov
jg
dec
pop
cmp
mov
cmc
mov
out
inc
inc
into
xor
in
mov
in
xchg
mov
je
mov
cmp
in
movsb
fs
mov
mov
js
jp
in
mov
int3
sbb
push
mov
shrb
add
lock
mov
cmp
aaa
fistl
movsb
test
mov
icebp
mov
jbe
aaa
call
fidivrl
sarb
lods
aam
sub
shlb
sbbl
lock
andb
addb
je
sbb
ljmp
dec
xor
sub
lahf
sub
dec
inc
inc
mov
jnp
push
xchg
pop
lea
xchg
into
int3
fs
add
test
jle
movsb
sbb
repz
ljmp
jle
inc
xchg
fwait
rorb
js
inc
arpl
mov
mov
mov
or
loopne
sub
adc
mov
dec
jp
gs
jg
decl
lcall
out
pop
cmp
nop
loopne
xchg
jecxz
push
adc
push
inc
xchg
test
cltd
xchg
into
insl
or
jmp
lcall
in
icebp
cwtl
pop
jno
add
rorl
lret
enter
into
jge
mov
dec
adc
sti
mov
add
sub
fistl
rorb
fadd
aam
inc
lds
shlb
stos
jp
jmp
leave
jnp
fwait
pop
ljmp
imul
dec
cs
mov
sbb
xor
mov
sbb
fdivrs
into
ljmp
mov
cmc
cmp
scas
enter
pop
xchg
mov
lcall
mov
xchg
mov
push
or
pop
jl
xlat
add
jge
ror
xchg
mov
test
call
dec
mov
dec
inc
dec
mov
aaa
stos
sub
dec
aad
divl
outsl
add
call
imul
imul
cmp
imul
mov
mov
and
adc
nopl
loope
iret
cltd
roll
lock
pop
pop
push
in
stos
jbe
sub
sbb
daa
adc
xor
shll
insl
in
xor
std
pop
mov
lods
cltd
repz
mov
pop
push
and
shr
stos
test
mov
mov
rclb
dec
sbb
sar
push
cmc
mov
cltd
jno
dec
xor
pusha
add
in
inc
dec
je
fs
jbe
movsb
jle
outsl
cmc
pop
icebp
aad
xlat
sub
rclb
fisubrs
fsubl
inc
icebp
or
jp
sbb
repnz
addr16
sbb
mov
pop
jns
sub
and
lret
mov
push
in
sub
sub
push
push
ret
hlt
gs
xchg
pop
fnsave
int
xor
leave
inc
popf
stos
dec
mov
push
sahf
das
xor
xchg
cld
inc
xlat
scas
xchg
cwtl
pop
or
test
mov
fidivl
addps
add
xor
pushf
sub
clc
jbe
push
jge
sbb
sbb
mov
lahf
push
pop
jg
jo
test
lret
xor
subl
clc
out
aaa
enter
fwait
jecxz
adc
dec
gs
jp
xchg
mov
mov
je
rclb
pop
ret
jg
addr16
xor
cmp
push
lret
cmp
rol
or
inc
push
lcall
sbb
or
bnd
sbb
stos
jb
xor
fldcw
push
mov
inc
sub
jbe
adc
sahf
xor
xor
shrb
fwait
iret
data16
inc
mov
mov
sub
cmp
mov
test
pushf
cmp
pop
cmp
imul
dec
adc
popf
pop
call
mov
push
mov
dec
sbb
inc
lret
stos
jb
arpl
lahf
pop
mov
mov
inc
in
rcll
pop
inc
bound
mov
adc
daa
cmc
xor
jb
rcrb
jecxz
inc
dec
gs
ret
jge
cmp
xlat
jle
jl
mov
pop
inc
add
ficompl
xchg
jb
add
outsb
fdivl
mov
insl
inc
or
icebp
repnz
xchg
in
repnz
pop
adc
test
dec
test
out
lock
mov
mov
je
je
jnp
push
outsb
ja
test
sbbb
std
dec
out
orl
jne
lods
insl
dec
into
pop
sub
pop
mov
mov
icebp
cwtl
push
push
push
jp
popa
dec
ja
out
hlt
mov
cli
push
sub
sbb
push
bound
shlb
and
mov
inc
mov
rcll
ja
pop
sub
icebp
aaa
jecxz
daa
dec
xlat
sbb
aad
jg
cmpsl
in
test
pop
cmc
lret
sbb
out
or
sub
cwtl
inc
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
jmp
and
mov
jmp
adc
addl
cmpsl
pop
std
mov
xor
jg
sbb
jns
xchg
aaa
xlat
ljmp
and
push
mov
inc
pop
movsl
push
inc
inc
clc
or
inc
adc
pop
cmp
push
loopne
push
mov
mull
adcb
fsts
lret
sarl
movsb
mov
push
mov
or
xor
mov
loop
repnz
add
insb
arpl
and
pop
lret
cli
fcmove
pop
ljmp
mov
mov
xor
pop
push
inc
out
ret
cmc
shrb
inc
mov
loopne
add
sbb
adc
push
das
fisubs
jge
sub
inc
mov
in
in
xchg
lods
pop
jl
dec
jae
adc
or
xchg
xchg
arpl
fs
pusha
jmp
dec
pusha
mov
xchg
push
cmp
xor
xchg
aam
les
mov
xor
js
push
js
adc
cwtl
enter
scas
lret
pop
pop
xchg
fnstenv
pop
mov
out
in
add
pop
adc
mov
xchg
inc
push
mov
pop
mov
out
lods
cwtl
stos
popf
sub
loope
lret
stc
shl
out
sub
mov
xchg
leave
xor
int
js
aaa
cs
jbe
cmp
jl
out
xlat
pop
jmp
movsb
mov
test
sahf
outsb
mov
dec
mov
xor
mov
add
xor
adc
adc
xor
call
xchg
push
pop
int3
ljmp
rol
pop
and
push
shlb
cmp
js
daa
and
insl
jbe
pop
mov
xchg
bound
les
stos
je
sub
shrl
xchg
xor
jns
sahf
pop
aad
mov
sahf
push
cwtl
lahf
es
add
pop
mov
imul
cmp
icebp
xor
stos
cmc
outsl
incb
stos
arpl
leave
push
repz
or
test
sbb
test
push
add
sub
push
loopne
iret
cltd
cs
loope
stc
pop
outsl
jmp
inc
test
cmp
in
imul
add
mov
mov
jae
xor
pop
repnz
outsl
dec
js
rclb
pushf
and
xchg
mov
ss
mov
lahf
jmp
push
add
or
and
mov
mov
lahf
aaa
lahf
and
popf
ret
jb
xchg
sbb
or
sub
aam
sub
cmp
loop
mov
inc
cmp
dec
repz
sahf
inc
pop
push
pop
fdivrl
mov
mov
ret
xchg
cwtl
lods
jns,pn
mov
mov
std
xor
push
bnd
test
ret
inc
iret
rcrl
jne
mov
int
scas
dec
push
push
xchg
cmpsl
cmp
leave
pop
popa
jno
fdivp
out
xchg
shrb
loopne
int
dec
daa
sarl
and
add
cli
inc
std
inc
fstpl
jp
xchg
pop
and
dec
push
addr16
sub
mov
sar
fbld
dec
rorb
int3
sub
stc
mov
dec
pop
adc
add
inc
vmread
int
inc
fsubs
xchg
mov
pop
mov
pop
imulb
mov
sub
sbb
push
jae
pop
cmp
xor
fldl
jo
dec
loop
xrelease
push
es
mov
shl
rorb
inc
imul
and
inc
aas
sbbl
mov
push
loop
pop
or
roll
decb
add
roll
fwait
subl
inc
xor
outsl
jae
shl
repnz
push
std
arpl
jle
sti
lods
iret
sbb
cmc
mov
push
jno
mov
out
std
ficomps
mov
dec
decb
rcrl
sub
mov
pushf
rcrb
int
add
loop
pop
push
cmp
cmpsl
xchg
cmp
push
gs
inc
inc
adc
ds
xchg
inc
jl
rol
std
xchg
cmp
cli
imul
in
jb
addl
dec
js
mov
pop
and
adc
push
sbb
sarl
jle
mov
xor
adc
lods
jge
inc
jbe
lds
out
mov
popf
push
jle
testl
sarl
not
mov
bound
stos
lret
sub
repz
xchg
popf
mov
xlat
cmp
mov
sbb
int3
test
inc
adc
xor
movsl
roll
jbe
inc
mov
jp
add
ljmp
out
daa
ljmp
mov
mov
mov
orl
jl
sub
loop
hlt
mov
mov
fnstsw
sti
and
fnstenv
dec
pop
pop
xchg
out
int3
adc
divl
xor
aam
popa
mov
orl
jnp
lock
cli
cld
insl
sub
sub
dec
xchg
jle
ss
jp
ret
or
inc
mov
lods
sarb
jne
jbe
loopne
in
loop
jl
push
int
pop
sahf
mov
scas
sarb
mov
inc
sbb
add
clc
sahf
outsb
pop
test
scas
and
ficomps
mov
inc
lahf
packsswb
add
push
push
sbb
fisttps
insl
add
cmp
push
push
dec
mov
jnp
jns
dec
sbb
sahf
mov
dec
stos
jecxz
mul
xor
pop
mov
dec
std
hlt
bound
inc
add
inc
mov
mov
movsl
dec
jns
lret
movsb
jo
bound
std
push
jbe
lods
mov
sub
stc
jb
and
sub
pop
pop
int3
aad
cld
inc
fisubrs
cmp
jle
inc
pop
int3
movsb
sub
xlat
aas
fld
in
xorb
sbb
adc
in
adc
sbb
lahf
pop
adc
jl
daa
in
or
movsb
lea
pushf
movb
pop
into
and
dec
xchg
or
bound
icebp
or
cmpsb
inc
fidivl
pop
add
mov
stos
cmp
leave
sbb
ficoml
add
mov
rcl
and
xchg
lcall
insl
scas
nop
ja
roll
rcrl
push
out
gs
lods
arpl
mov
lahf
dec
xor
push
subl
jge
faddl
mov
add
sub
fstpl
xlat
in
mov
les
scas
mov
mov
mov
lock
jp
in
iret
mov
sti
mov
inc
pop
sbb
adc
scas
or
lret
shll
pop
ljmp
adc
mov
pop
mov
dec
inc
dec
push
aam
sub
xchg
lahf
xorb
pop
fbstp
mov
enter
add
xchg
imul
xchg
imul
add
pop
mov
mov
fpatan
mov
fs
gs
push
inc
mov
sbb
jns
cmpl
negb
jb
jmp
test
xchg
outsb
xchg
adc
imul
daa
pushf
mov
add
push
inc
outsb
scas
xchg
leave
cltd
add
xor
fst
scas
fnsave
fwait
cwtl
mov
pop
leave
dec
sbb
test
pop
add
aam
inc
int
sbb
outsl
fs
mov
adc
popf
mov
data16
pop
fistps
xchg
lcall
jae
add
fldcw
fisubrs
pop
test
mov
mov
jnp
shll
jl
jecxz
inc
aaa
dec
popf
add
dec
loop
push
leave
inc
inc
testb
xchg
pop
and
into
andl
sbb
mov
xor
in
lar
or
sbb
push
fimull
pop
pop
jbe
iret
ljmp
and
pusha
sarb
test
inc
test
cld
into
jae
test
in
mov
or
loope
xchg
xchg
add
pop
nop
mov
es
mov
jmp
jl
inc
ss
inc
dec
mov
and
loop
jne
or
add
fidivs
daa
lret
cmc
lods
push
into
sbb
mov
sbb
bound
jecxz
repz
mov
cld
adc
or
stos
mov
xchg
push
repz
xor
lret
and
mov
or
fistpll
cmc
stos
lret
fadds
inc
sbbb
cmp
loope
or
test
cs
leave
adc
and
pop
jns
stos
mov
into
mov
or
lcall
in
ss
mov
mov
iret
sub
les
sub
pusha
dec
out
xlat
in
mov
insl
push
imul
idivb
pop
mov
sbbl
sbb
shl
sbb
out
cld
push
andl
cmc
int
insl
rcrb
jne
loop
repz
mov
jns
jno
outsl
cmp
cmp
sbb
test
sbb
dec
stc
mov
stos
aas
or
arpl
jl
iret
cmp
daa
jg
test
scas
lods
subl
inc
or
scas
enter
mov
lahf
cwtl
push
cmpsb
or
test
pop
push
jp
dec
in
fwait
push
inc
mov
mov
add
enter
cmc
pop
pop
or
pop
in
jecxz
test
mov
inc
sub
xchg
mov
sub
dec
je
sub
mov
mov
movsl
or
pop
sub
push
sbb
mov
dec
stos
or
push
repnz
ljmp
fwait
in
xor
pop
sub
int3
jb
jnp
push
out
out
cs
iret
sbb
fs
pusha
jg
sbb
daa
xlat
xchg
or
sbb
jno
out
shrb
loop
ss
fsubr
mov
cld
mov
stos
cmpsl
das
shr
mov
in
andl
dec
outsl
std
outsb
and
sub
xor
adc
cs
aas
je
dec
push
cmp
inc
pop
mov
mov
loopne
pop
ja
test
aam
pop
jo
movsb
in
insl
add
icebp
mov
mov
sbb
bound
push
xchg
divl
rcll
int3
int
jl
jg
shl
inc
sbb
mov
push
addr16
xchg
xchg
pop
out
and
cltd
stos
mov
push
inc
loopne
ss
dec
test
mov
cmp
or
aam
fisubs
mov
sti
lcall
xor
addr16
adc
mov
and
add
mov
rcrl
adc
or
add
inc
addr16
jp
mov
dec
push
addr16
jne
popl
lea
ljmp
jno
aas
pop
lcall
dec
out
adc
stos
lea
jne
mov
add
dec
xorl
dec
and
jmp
rcrb
sbb
xchg
out
icebp
and
in
jbe
dec
or
ljmp
ljmp
mov
pop
push
dec
mov
mov
sarb
add
ja
das
jecxz
in
movsb
push
jl
je
push
cmp
adc
fcoml
inc
scas
mov
enter
testl
lods
pop
sbb
sbb
mov
dec
leave
imul
into
das
dec
test
cmp
and
sahf
setnp
testl
pop
mov
or
inc
add
mov
xchg
inc
cmp
or
jo
cmp
pop
mov
ud1
pop
add
cmp
mov
sbb
test
stos
inc
lea
lock
inc
es
mov
mov
dec
fs
mov
nop
xchg
jmp
data16
leave
mov
mov
xchg
cmp
xor
inc
adc
xor
ja
mov
push
push
roll
das
mov
call
pop
jne
cmc
push
bound
xor
andps
imul
rclb
push
movsl
filds
outsb
push
stc
mov
pop
cmp
jnp
fldl
push
or
mov
gs
pop
xchg
add
iret
ja
mov
push
xchg
icebp
imull
sahf
arpl
pushf
loop
cmp
push
cmpl
lock
leave
xchg
cmpsb
cmp
jbe
cltd
mov
inc
subb
stos
das
or
fbstp
loope
rcrb
push
inc
repz
mov
cli
pop
inc
mov
dec
cmpsb
and
hlt
aad
jns
leave
out
arpl
mov
test
push
mov
lock
test
jmp
and
lahf
jnp
sbb
std
add
test
stc
adc
or
aaa
push
testl
loop
sbb
mov
shrl
inc
negl
and
inc
cld
js
sbb
cwtl
jo
cmpsl
mov
imul
adc
xchg
dec
adc
jg
out
in
jbe
sti
vcvtps2pd
pushf
sub
add
clc
je
hlt
movsl
sub
cmp
cmc
lahf
mov
mov
xchg
pop
std
jae
pop
lcall
sbb
insl
loopne
clc
cli
adc
mov
pop
add
dec
cmp
cmpsl
adc
cmp
pop
scas
iret
scas
push
rolb
in
sub
clc
jle
fwait
repz
jecxz
mov
mov
jecxz
idiv
xor
mov
xchg
mov
push
add
jns
push
xlat
adc
cmp
adc
cltd
ja
data16
hlt
je
xchg
insl
lret
sub
xchg
lcall
jno
stos
inc
pushf
push
andb
push
mov
mov
movsb
jg
addr16
mov
dec
call
es
or
add
mov
inc
and
out
mov
cld
call
lret
loopne
or
xor
das
pop
cld
imul
mov
daa
lock
cmc
out
jmp
scas
loopne
cmp
dec
jne
shrb
add
jno
push
repnz
pop
xchg
enter
jbe
fildll
push
dec
mov
iretw
add
mov
es
sbb
and
push
xor
cmpsb
pusha
in
lret
icebp
pop
mov
lds
push
sti
lds
imul
mov
test
fst
in
add
xchg
test
push
mov
scas
cmp
add
imul
mov
jle
xchg
into
mov
adc
dec
adc
push
xchg
pop
mov
stos
outsb
ret
dec
daa
adc
ljmp
inc
imul
leave
stos
adc
in
pop
in
out
rol
cmpl
jnp
add
in
movsl
iret
nop
sbb
jge
addr16
aaa
stos
jns
int
jmp
test
mov
call
cmp
push
lret
xchg
std
iret
adc
rcrb
cmp
push
das
lods
jmp
push
mov
adc
int3
mov
xchg
inc
sti
push
mov
sub
push
mul
xor
or
jecxz
push
std
add
jo
xor
jns
dec
xchg
dec
mov
lock
test
fsubl
push
ret
cmp
sub
insb
mov
clc
mov
sti
sbb
inc
gs
and
add
push
jb
leave
test
test
fwait
push
add
sub
jp
and
jp
pushf
scas
out
cmp
in
das
mov
pop
imul
dec
andb
leave
cmp
lea
cmp
aaa
cmp
out
ds
cld
lock
sbb
xlat
outsb
repz
inc
fildl
dec
inc
ret
lea
movsl
mov
jmp
into
pop
mov
or
push
in
xor
jmp
out
sub
mov
mov
mov
pop
jmp
sbb
xchg
adc
ljmp
sbb
xlat
test
push
lods
mov
fiadds
int3
push
sbb
mov
icebp
popf
dec
add
jge
adc
das
sbb
mov
sub
fcomip
mov
or
or
bound
pop
ljmp
push
push
or
gs
loopne
and
inc
xchg
sub
sahf
sbb
jno
mov
push
jp
popf
mov
pop
jne
incb
in
lret
test
jns
clc
hlt
aam
cld
sbb
test
cmc
xor
mov
xorb
or
dec
jno
fidivrl
inc
cld
cmp
shll
imul
xchg
and
sbb
jne
cmp
int
push
sbb
cwtl
aad
mov
pop
incb
add
xlat
xor
push
and
fwait
mov
rolb
jns
loope
bound
push
inc
xchg
iret
mov
cltd
cmp
clc
push
cmp
push
aam
cmp
data16
mov
push
and
js
cld
mov
pop
movsl
inc
push
test
push
and
mov
sahf
pop
out
pop
pop
or
and
cmpsb
xchg
or
adc
adc
adc
je
or
jnp
sarl
lock
mov
mov
scas
and
imul
ret
insb
les
nop
outsb
add
andl
jmp
andl
xchg
jle
roll
or
or
and
outsl
movsl
lods
int
push
xchg
inc
and
lea
xlat
inc
xor
fs
scas
aas
in
xchg
mull
sub
icebp
mov
add
fwait
sti
jbe
sti
aas
and
fs
lock
push
dec
mov
dec
push
leave
pushf
lods
mov
stos
jge
mov
test
clc
or
pop
xchg
pop
scas
fwait
sbb
dec
addr16
lea
out
stos
frstor
stos
in
ja
lods
jg
mov
xchg
insl
jg
insb
mov
lock
lret
into
pop
cmpsl
aam
jp
stos
jo
hlt
sbbl
test
std
je
and
movsl
or
jle
dec
pushf
xchg
xor
jo
jne
mov
xor
roll
loope
ret
out
cld
cmpsl
adc
dec
mov
stc
push
jno
into
movl
or
pusha
or
cmp
fdivs
out
mov
mov
adc
pushl
aaa
das
dec
lds
cs
clc
and
jae
pop
xchg
rolb
pushf
and
cmp
add
faddl
insl
int3
daa
cmp
push
pop
cltd
cmp
daa
and
into
jg
inc
gs
pop
in
ret
addb
pop
or
add
rorl
xor
gs
mov
ljmp
les
lds
test
in
repz
mov
fs
mov
jge
cmpsb
pop
or
mov
loop
mov
aam
test
or
sbb
xor
ljmp
test
push
or
adc
cli
ss
cmp
shrl
mov
iret
fxtract
hlt
pop
and
ret
test
jno
mov
pop
push
repz
xor
inc
inc
mov
psubusw
ss
adc
mov
cmp
ja
or
push
pop
outsl
rolb
mov
jb
mov
push
inc
cmp
mov
test
jbe
and
shrb
lds
iret
mov
in
inc
jnp
jmp
outsl
movsb
std
bound
mov
pop
pop
fwait
xor
jecxz
dec
adc
pushf
or
sbbl
adc
push
mov
or
add
cmp
add
sub
loopne
and
pop
jecxz
sbb
fiaddl
incb
pop
lcall
add
fwait
cli
mov
push
test
lcall
pop
inc
adc
mov
and
inc
jb
dec
lret
insb
dec
clc
pop
mov
xchg
test
pop
sub
out
aaa
push
and
mov
jb
movsl
dec
adc
test
push
mov
xchg
xor
cmp
push
cmpsb
mov
popf
sub
mov
lret
lock
icebp
daa
sub
mov
mov
fsubl
lret
pop
add
in
add
pop
jp
cli
xchg
ffreep
arpl
das
mov
pop
lods
xor
dec
ror
and
nop
mov
sbb
sbb
iret
inc
mov
pushf
sub
in
inc
gs
push
mov
ja
pusha
xchg
loop
and
movsl
mov
dec
xor
xor
adc
mov
inc
icebp
das
mov
out
and
cld
inc
push
dec
push
ljmp
xchg
shrb
daa
xchg
sarl
lret
test
xor
mov
pop
jno
bound
lods
sbb
jle
insl
mov
imul
mov
xor
out
call
popa
xchg
jg
dec
lcall
insb
push
cmp
inc
and
adc
andw
mov
out
out
xor
sbb
insl
inc
loope
pop
pop
inc
push
sub
cmp
popa
mov
push
sbb
push
inc
mov
insb
test
testb
xchg
cmp
mov
into
jle
cltd
xchg
xchg
cmp
mov
mov
push
pop
mov
pop
or
or
int3
outsl
jmp
das
shll
fldcw
xchg
pop
cs
inc
lcall
add
mov
pushf
and
lods
jge
pop
sbb
sbb
lods
cmp
ljmp
or
mov
pop
mov
xchg
stos
pop
jno
insl
daa
fsubrl
add
negl
adcl
jge
aaa
movsl
jge
daa
dec
push
test
ja
lret
jge
pop
push
movsl
mov
jb
js
sbb
cmc
or
out
dec
inc
lret
pop
sub
cmp
ffreep
test
ja
lret
xchg
ljmp
ljmp
jecxz
subb
shlb
dec
iret
and
shll
push
stc
inc
inc
scas
popa
shrl
and
outsb
dec
inc
xchg
or
out
fldt
out
aas
or
and
shrb
adc
inc
je
cmpsl
movsb
mov
cmp
call
adc
or
test
pop
loope
jae
stos
out
mov
sbb
push
push
fisubrs
add
aaa
dec
jns
sbb
jb
sub
sbb
loop
mov
sti
scas
mov
add
repnz
xor
cld
inc
push
rcll
lret
xor
shlb
adc
loopne
mov
addb
fldenv
sbb
jne
fcomp
js
push
push
mov
jp
xor
add
and
leave
xchg
arpl
jmp
fwait
cmpsl
cmpsb
aaa
or
in
dec
jmp
push
push
push
mov
xor
inc
scas
repnz
outsl
sbb
dec
adc
pop
and
aam
ss
sub
mov
in
into
jmp
sub
inc
pusha
jmp
push
sahf
push
inc
dec
rclb
enter
arpl
push
add
mov
ss
xchg
or
ja
dec
pop
mov
mov
sti
in
mov
sahf
jecxz
bound
mov
pop
daa
mov
repnz
scas
mov
sub
subl
ret
and
scas
inc
jae
aas
aam
xor
repnz
lock
ja
jg
cmp
sahf
and
lods
cltd
or
adc
dec
movsb
push
stos
in
aas
cli
add
sahf
adc
andl
push
mov
push
dec
dec
xchg
movsl
sbb
xor
or
cmp
push
insb
jnp
stos
jmp
int3
xor
cmp
das
sub
popf
fmuls
cmpsl
add
test
movsb
push
pop
das
mov
aas
outsb
shll
xlat
mov
mov
push
test
ja
lock
jmp
popa
iret
js
push
pushf
add
sub
fildl
mov
sub
insb
popa
in
vucomisd
lret
lahf
jno
dec
sti
subb
cmp
out
sbb
jae
arpl
and
mov
bound
mov
mov
in
mov
dec
pop
xor
callw
pop
mov
stc
mov
shlb
imul
mov
sbb
out
sub
push
or
inc
adc
xor
push
in
enter
inc
cmp
popf
rorb
pusha
out
xor
lock
dec
sbb
icebp
and
lods
aam
cmc
popa
lcall
mov
daa
or
cmpsl
dec
mov
jns
add
adc
ds
xchg
mov
inc
imul
mov
inc
hlt
das
data16
insb
sub
pop
push
xor
dec
mov
mov
dec
sub
and
push
jo
sahf
sub
cmp
dec
fwait
dec
pop
push
push
pop
xor
scas
loop
fsubl
test
mov
clc
or
fs
mulb
inc
sbb
xor
inc
xlat
arpl
cmp
xchg
mull
mov
negl
push
push
jge
mov
adc
cld
mov
fucom
movsl
push
push
insl
in
mov
js
xor
mov
js
mov
pop
mov
xchg
in
cmp
lahf
dec
xchg
cwtl
mov
aam
pushf
adc
jae
js
mul
inc
sbb
push
xchg
daa
out
xchg
test
sbb
cwtl
sub
pop
outsl
scas
and
mov
ss
sbb
movsl
int3
fs
sbb
popf
pop
and
mov
sub
rcr
pop
mov
pop
push
pop
out
jno
mov
jnp
add
lock
xchg
imul
mov
imul
lds
and
adcl
pop
or
mov
mov
xchg
incb
je
inc
mov
lahf
test
jp
inc
inc
pop
repnz
shl
aas
add
lcall
hlt
lea
jle
fcmovnbe
push
adc
je
jecxz
mov
jmp
inc
movsb
movsl
popa
sbb
mov
mov
cmp
in
cmp
sarl
adc
mov
sub
push
std
out
test
jle
sbb
pusha
fbstp
andl
dec
mov
in
dec
xchg
inc
fcmovnbe
xor
test
repz
je
scas
mov
lret
push
mov
sbb
jns
in
rolb
mov
xchg
and
sub
jmp
popl
in
mov
data16
push
inc
mulb
gs
cld
out
shl
or
mov
jle
icebp
mov
fbstp
xchg
loope
mov
adc
jle
mov
mov
mov
pusha
push
and
shl
in
scas
rclb
xorb
stos
xorl
stos
cmp
xchg
daa
test
in
push
cwtl
and
inc
dec
pop
scas
cwtl
testb
mov
mov
imul
xchg
stc
daa
inc
dec
movsl
stos
notb
inc
bound
push
arpl
push
insl
imul
and
shl
orb
stc
cwtl
mov
imul
dec
jo
lods
mov
fmuls
jb
sbb
into
and
repz
icebp
and
shrl
pop
lret
hlt
mov
jl
cmpsl
xchg
sbb
adc
push
adc
ret
and
cld
sub
cmp
xor
pushf
sti
cmp
sub
and
sahf
fstpl
imul
and
xchg
or
and
popa
into
shrb
fists
call
stc
xchg
or
test
jmp
adc
jmp
jg
dec
jb
inc
sub
or
jmp
pop
fimull
push
insb
xchg
in
je
iret
outsl
and
jmp
push
bound
mov
scas
add
add
jae
push
fdivrs
adc
out
inc
je
push
mov
aas
pop
hlt
pop
cmc
sub
and
pop
dec
or
imul
lea
iret
sbb
and
add
jne
mov
cmp
das
inc
test
in
inc
xchg
ss
lahf
sub
fisttpll
out
ret
cmp
dec
mov
outsl
mov
sub
cmp
lahf
fisttpll
push
mov
mov
and
cwtl
xor
call
stos
rorl
test
mull
pop
adc
dec
sbb
loop
and
addr16
pop
stos
push
cwtl
push
leave
test
cmp
nop
icebp
sti
dec
mov
leave
pushf
aaa
testl
ret
lock
mov
xchg
neg
pop
lret
jb
dec
jecxz
inc
jne
rcrl
sbb
xlat
pusha
xlat
jno
cmpb
outsl
cmc
or
inc
push
fiaddl
popl
jne
addr16
icebp
in
cmp
mov
clc
inc
ljmp
push
push
push
js
insl
mov
insb
cmp
or
sti
or
xor
pop
mov
pushf
push
pop
push
and
test
mov
add
sahf
imul
lods
pop
mov
imul
cmpsl
cmp
fimull
fs
adc
cmp
pop
es
mov
call
sar
mov
push
hlt
in
dec
xchg
int3
lock
enter
and
fwait
mov
je,pt
lods
mov
into
pushf
jo
loopne
push
cwtl
and
push
jae
cli
mov
out
pop
mov
adc
daa
pop
test
cmp
cmpsb
xchg
adc
jecxz
jno
filds
std
js
sbb
rclb
lahf
jns
xchg
cmc
fstp
inc
call
xchg
pop
stos
jne
cltd
imull
scas
int
cmp
pop
add
nop
mov
call
cmp
sbb
into
cwtl
iret
shlb
adc
xor
cmp
int3
arpl
dec
scas
popa
in
imul
mov
cwtl
movsb
dec
test
or
aam
lcall
mov
fxch
out
imul
add
push
adc
jnp
ret
dec
inc
mov
add
xchg
xchg
push
add
pop
lods
jg
imul
dec
jg
roll
rcrl
and
nop
cs
xor
xchg
mov
sbb
leave
test
hlt
sbb
mov
pop
jecxz
mov
jne
xor
jp
push
cmpxchg
inc
mov
jecxz
mull
ret
lcall
xor
adc
clc
sub
test
inc
out
sub
movsl
cmp
ljmp
in
lret
aas
fildl
fchs
xchg
lahf
fnsave
int
aas
jg
jb
jbe
mov
mov
sub
sub
jmp
sbb
sub
shlb
movb
inc
ljmp
fs
jmp
xor
jecxz
sti
xor
fidivrs
adc
sub
lods
inc
aaa
gs
out
cli
inc
out
test
sub
rclb
sub
xor
fistpll
outsb
test
sub
pop
add
es
enter
jnp
lods
in
cwtl
lcall
insl
inc
add
fiaddl
fistpll
and
mov
pop
sbb
ret
fbstp
lcall
js
mov
jae
and
clc
sbb
inc
fldl
mov
sbb
pusha
inc
sarl
mov
pop
mov
adc
jle
stc
loopne
add
idiv
push
mov
into
mov
data16
in
pop
gs
daa
inc
or
push
push
fs
daa
sbb
mov
xor
es
mov
arpl
hlt
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
jmp
sbb
aam
mov
cltd
push
inc
sbb
cwtl
fistl
addl
popf
and
fstpt
jl
int3
aad
into
jae
mov
lea
cmp
and
cmp
bound
rcrl
test
iret
je
xchg
or
xor
rorl
mov
dec
je
out
aaa
pop
pop
stos
xchg
dec
cli
push
mov
pusha
mov
clc
or
sub
js
inc
xchg
or
and
and
pusha
push
rcll
sub
int3
pmuludq
cwtl
mov
adc
adc
xchg
xchg
clc
iret
insb
push
xor
sar
push
mov
push
and
or
in
or
mov
je
rol
mov
inc
push
inc
arpl
mov
xorb
outsb
out
fdivrl
call
mov
pop
dec
add
xor
in
or
fcoms
or
mov
ds
repz
aaa
mov
inc
push
pop
jmp
inc
pop
psubsb
and
pop
out
testb
and
inc
xor
push
cld
dec
mov
scas
and
xor
clc
pop
push
xor
aaa
and
mov
inc
outsl
cmp
pop
stos
imul
push
xchg
fs
push
mov
insb
xchg
in
sub
sub
inc
push
insb
inc
movsl
iret
faddl
push
into
lea
jb
lods
outsb
pop
fistl
dec
lods
hlt
mov
decb
xor
out
divl
testl
sahf
hlt
cs
jp
dec
sbb
dec
xlat
imul
or
cmpsb
cmp
adc
inc
xor
scas
adc
cmp
addr16
repz
bound
stos
or
mov
ret
cmpsb
add
jle
pop
push
sub
jp
dec
jl
push
inc
dec
icebp
movsl
sbb
cmp
cwtl
mov
loop
pop
stc
jo
shll
sbb
sub
or
xchg
paddb
test
sarb
and
lock
xor
xchg
xchg
sub
adc
push
mov
jb
or
or
pop
iret
lea
inc
fistpll
jns
jg
in
aam
hlt
push
inc
adc
movsl
xor
outsb
push
out
add
adc
xor
jg
clc
xor
xchg
inc
nop
pop
cmpsl
mov
lret
jno
or
in
xchg
out
xor
icebp
test
mov
push
das
outsl
mov
adc
fsubrs
mov
mov
int3
inc
xchg
xchg
pop
outsw
pop
push
pop
sub
pcmpgtd
dec
mov
enter
sti
pop
xchg
sub
cmp
pop
fiadds
and
push
mov
pop
push
fs
jmp
imul
xchg
add
out
push
ss
in
push
add
or
cs
jmp
push
mov
out
mov
loope
shlb
pop
pop
or
insb
outsb
or
je
inc
pop
mov
les
das
nop
mov
or
movsl
arpl
inc
sub
ljmp
gs
jp
daa
das
xchg
xlat
pop
sub
das
cwtl
loope
jns
ljmp
mov
jle
subps
sbb
icebp
sub
jbe
pop
fistl
test
call
adc
jle
cmp
or
pop
lea
xchg
das
sarb
out
test
popf
adc
rcrl
mov
nop
int3
mov
push
push
adc
out
sbb
es
dec
stc
cld
inc
add
fidivrl
sbb
and
mov
cmp
lcall
add
xor
leave
mov
ds
aam
mov
push
and
or
mov
fwait
into
push
daa
adc
push
cwtl
and
movsl
js
lds
test
popf
in
mov
aam
loopne
dec
and
sbb
imul
ss
ja
ret
add
sbb
jne
loope
xor
mov
push
inc
aas
fwait
es
adc
lret
jmp
out
loop
mov
jecxz
movsl
jns
inc
hlt
or
mov
out
ljmp
sub
das
lcall
dec
inc
data16
xchg
sbb
movsb
jl
push
lsl
gs
repz
fbld
pop
decl
and
cmp
lock
xchg
cmp
aas
pushf
add
shll
lock
jp
notb
jge
inc
shrl
mov
scas
sbb
cmp
ds
push
jmp
fldcw
in
cmp
mov
pop
pop
stos
lret
mov
popa
push
push
inc
pop
mov
dec
xchg
mov
mov
adc
mov
rorb
ret
adc
mov
rclb
addr16
fs
je
ja
and
lcall
movsb
mov
lcall
in
les
xchg
push
pushf
rcr
rol
flds
add
jle
cmp
add
cmp
ja
mov
or
push
sub
out
inc
pop
dec
fidivs
jbe
pop
lock
in
aad
sbb
fiadds
mov
cmp
outsb
mov
adc
jnp
lds
lock
dec
xor
sahf
xlat
outsb
leave
sub
mov
ret
lret
rcll
dec
push
into
rcr
dec
repz
ss
push
cmp
cmc
loopne
lods
shlb
enter
test
mov
jns
clc
arpl
add
pushf
imul
push
or
xor
push
in
js
inc
scas
idivl
es
cld
jmp
call
mov
jbe
pop
es
mov
pop
mov
jno
stc
test
push
mov
jno
push
cmp
adc
popa
imul
inc
cmp
dec
mov
outsb
out
outsb
lahf
push
in
shrb
aas
add
test
dec
jne
negl
mov
inc
movsl
fsubrl
leave
lret
push
pop
jae
fnstenv
fwait
cmp
inc
cli
lcall
push
stc
mov
mov
sbb
int
mov
aas
push
pop
orb
sub
nop
mov
cmp
jle
sbb
xchg
lods
jb
push
cld
jmp
decl
mov
jae
mov
stos
mov
jb
loope
mov
imul
lods
mov
stos
pop
xor
clc
xlat
jb
fdivrl
pop
xchg
faddl
push
mov
or
nop
pop
lds
jnp
or
mov
fnsave
dec
lret
aad
arpl
inc
jp
iret
clc
jne
outsl
test
aaa
rcll
push
and
push
or
pop
mov
sbbl
shl
adc
adc
in
push
mov
iret
fldl
pusha
xor
outsl
fs
or
cmpsb
aam
xor
jle
pushf
dec
rcl
movsb
in
pop
js
push
jecxz
daa
add
cmpsl
ret
ror
andb
sbb
cmc
and
push
loopne
cmp
movsl
imul
movsl
cmpsl
xor
nop
out
stos
mov
mov
into
lods
push
fimull
es
sti
or
lds
je
aaa
fisttpll
jno
dec
jp
jmp
int3
cmpsb
testb
cli
mov
stos
dec
and
lret
and
mov
xchg
cltd
cli
jae
test
mov
rcll
stos
jmp
jge
push
mov
cmp
scas
in
dec
mov
xor
jl
sbb
movsl
mov
sbb
ds
imull
and
imul
mov
push
cltd
or
imul
orb
mov
outsb
dec
and
push
call
aaa
push
in
outsl
arpl
repnz
jmp
adc
pop
cli
clc
addr16
sbb
pop
sub
adc
cmp
shll
and
lret
xor
inc
imul
leave
testb
mov
lea
push
pushf
sbbl
xchg
sarb
mov
std
jb
mov
sbb
xor
dec
and
xor
aad
fimuls
xor
or
inc
add
pop
sub
pop
movsb
mov
jle
mull
sbb
pusha
inc
jecxz
push
fistpll
jne
adc
aad
iret
push
mov
add
jecxz
mov
or
dec
inc
xchg
pop
rol
das
outsb
mov
mov
es
sub
sub
aaa
push
divl
pop
mov
fscale
pop
mov
out
pop
test
pop
push
out
int3
mov
mov
aam
mov
jg
pop
or
pop
cmc
xchg
pop
aam
mov
jns
cld
mov
mov
add
jne
mov
shlb
inc
insl
mov
sbb
and
cmp
rclb
sarl
lcall
sub
mov
add
pusha
out
sub
test
orl
mov
out
pop
shlb
sbb
fs
inc
fst
and
iret
ds
bound
dec
mov
and
and
adc
inc
push
lock
cmpb
or
push
or
xor
jl
insb
jns
mov
add
xchg
pop
sbb
repz
sti
out
jo
imul
xchg
push
rcll
push
mov
push
jne
imul
mov
adc
insl
fbstp
enter
pop
xor
xchg
sub
popf
std
adc
leave
xor
repnz
jae
stos
inc
and
mov
into
iret
daa
jmp
fdivs
pop
mov
dec
bound
mov
out
imul
mov
sub
fldenv
pop
mov
cmp
dec
pushl
mov
inc
mov
jo
add
jae
std
cmp
jg
in
mov
lcall
ds
push
into
push
pop
scas
ja
mov
call
lahf
adcb
jmp
ljmp
xor
xchg
adc
rcl
psrlq
adc
push
cs
mov
and
jg
mov
in
shl
cld
sbb
rorb
sub
xchg
xor
in
fstpt
jno
js
adc
lahf
out
or
inc
out
insl
stos
mov
imul
inc
adc
xchg
jp
sbb
into
test
mov
aaa
in
xchg
and
push
sub
push
push
imul
mov
push
push
xor
movsb
sub
mov
sarl
jns
lcall
sbb
mov
imul
mov
cmpsl
lods
ljmp
mov
ljmp
mov
or
inc
mov
je
test
push
xchg
lahf
call
rcr
jge
and
add
xor
mov
ds
dec
imul
sarb
mov
int
push
sahf
xchg
rorl
jns
addr16
inc
out
dec
inc
sub
jb
imul
push
sahf
int
lods
fwait
sub
sbb
inc
addl
xor
mov
cmc
sbb
movsb
pop
jmp
lcall
mull
mov
movl
call
mov
arpl
stos
out
cld
adc
dec
data16
and
insl
dec
sub
xchg
loop
pop
test
loop
mov
fistpl
scas
cmp
sub
sub
ja
adc
sub
mov
in
scas
cs
arpl
dec
rcll
jl
fmull
or
and
incl
movsb
or
rcll
scas
cmpsl
imul
lods
dec
lcall
push
int
add
into
mov
push
es
mov
clc
push
add
out
out
ficoms
pop
addr16
sub
jge
mov
bound
mov
sarl
dec
stc
sbb
rclb
mov
pop
and
in
mov
out
xchg
fstpl
imul
xor
xchg
testl
mov
sub
pusha
scas
arpl
inc
adc
std
fldcw
pusha
inc
and
mov
in
jae
sti
cmp
hlt
in
and
sti
lcall
std
int3
mov
add
repz
test
fistl
push
push
sub
jle,pn
fsubrl
or
mov
push
mov
jne
cmp
out
sbb
in
cmpsb
out
test
andb
fwait
mov
mov
aam
mov
jle
adc
pop
xchg
dec
icebp
fidivrl
loope
cmp
cmp
mov
lcall
or
sbb
adc
xchg
subl
mov
xchg
int3
jnp
jnp
lods
mov
dec
cwtl
pop
sub
fsubrl
push
daa
push
stos
leave
cmp
sbb
outsb
mov
ds
dec
mov
jmp
sub
nop
xor
lods
inc
sbb
ljmp
push
add
movsb
outsb
push
in
add
addr16
scas
jns
popf
inc
popa
outsb
dec
mov
add
sub
ret
xor
mov
inc
sub
xchg
inc
rorb
dec
inc
push
test
dec
test
fwait
add
pop
pop
sbb
ret
xchg
jg
in
cmp
mov
sub
jnp
sarl
aas
notb
mov
mov
ss
test
jg
decb
frstor
clc
adc
pusha
push
ss
test
sub
sub
mov
test
hlt
add
sbb
xorl
pop
arpl
shrb
or
pop
mov
ror
mov
das
ret
sbb
stos
sub
push
adc
xorl
sbb
cmp
add
xchg
or
fsts
int3
mov
mov
jl
fstl
cmp
pop
ret
dec
mov
lcall
inc
stc
pop
xor
sbb
sub
mov
add
pop
xor
jne
or
popf
sbb
pop
icebp
std
pop
inc
push
and
scas
mov
or
enter
mov
xor
das
cmp
outsl
pop
loop
stos
push
and
lock
fs
fidivrl
push
push
imul
nop
rorl
cmc
int
ljmp
xchg
idivb
cmp
inc
cltd
bound
sarb
movsb
mov
jg
lods
adcb
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
sbb
push
adc
mov
incl
mov
movl
mov
inc
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
pushl
push
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jg
jmp
call
xor
add
dec
mov
jmp
movl
mov
mov
xor
xor
xor
sub
or
mov
xorl
addl
mov
sbbl
mov
addl
sub
adc
mov
add
orl
adcl
mov
adc
mov
sub
xorl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
adc
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
movl
sbb
lea
sub
mov
movl
andl
lea
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
mov
mov
neg
mov
xor
orl
add
mov
xor
xor
xor
or
sub
sub
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
mov
dec
mov
jmp
mov
adcl
mov
andl
add
push
mov
andl
mov
mov
sbb
mov
xor
neg
mov
add
movl
cmp
je
movl
mov
movl
jmp
sbb
mov
xor
adcl
push
add
add
xor
mov
xor
mov
adcl
add
movl
push
movl
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
jmp
xor
mov
andl
xor
add
subl
xor
orl
add
movl
adc
notl
xor
xor
cmp
jne
cmp
jne
mov
xor
movl
cmpl
je
cmpl
jbe
jmp
push
push
pushl
call
mov
dec
mov
jmp
add
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
call
jmp
mov
mov
xor
notl
add
imul
dec
mov
xor
add
cmp
mov
movl
je
mov
add
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
movl
sub
movl
push
push
adcl
push
xor
orl
push
call
addl
mov
sbbl
lea
push
sbbl
push
orl
call
movl
cmp
movl
je
xor
movl
jmp
movl
mov
push
lea
xorl
push
push
push
xorl
push
call
imul
cmp
jne
subl
lea
adcl
push
push
call
movl
cmp
movl
jne
andl
pushl
push
call
addl
mov
or
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
movl
adc
lea
mov
or
mov
lea
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
addl
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
mov
negl
mov
xor
xor
xor
mov
mov
mov
mov
andl
mov
subl
movl
adcl
mov
xor
movl
mov
addl
xor
subl
add
movl
jmp
lea
push
decl
push
adcl
call
movl
cmp
jne
addl
push
andl
lea
push
push
push
push
call
orl
imul
movl
cmp
movl
jne
orl
lea
push
push
addl
call
movl
cmp
movl
jne
xorl
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
pushl
pushl
push
pushl
push
push
call
mov
dec
mov
jmp
mov
adcl
xor
lea
push
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
sbbl
xor
lea
push
mov
pushl
subl
call
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
adc
lea
movzwl
xor
mov
mov
adcl
xor
xor
add
mov
xor
lea
movl
mov
movl
cmp
jbe
or
mov
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
mov
xor
mov
and
mov
addl
sub
adcl
xor
subl
mov
andl
lea
mov
lea
mov
xorl
lea
subl
push
push
subl
call
movl
cmp
jne
push
lea
push
andl
push
subl
push
adcl
push
addl
call
xorl
imul
cmp
movl
jne
lea
adcl
push
andl
push
xorl
call
cmp
movl
jne
sbbl
lea
push
push
call
cmp
movl
jne
adcl
push
andl
lea
xorl
push
subl
push
push
push
sbbl
call
imul
cmp
movl
jne
andl
lea
negl
push
push
xorl
call
movl
cmp
jne
lea
xorl
push
andl
push
subl
call
movl
cmp
movl
jne
adcl
push
lea
push
adcl
push
subl
push
subl
push
adcl
call
imul
cmp
movl
jne
subl
lea
push
adcl
push
xorl
call
movl
cmp
jne
xorl
lea
push
push
andl
call
movl
cmp
movl
jne
andl
push
adcl
lea
orl
push
sbbl
push
xorl
push
andl
push
notl
call
imul
cmp
movl
jne
xorl
lea
push
orl
push
call
cmp
movl
jne
subl
lea
addl
push
push
adcl
call
cmp
jne
orl
push
orl
lea
push
adcl
push
andl
push
push
call
orl
imul
movl
cmp
movl
jne
adcl
lea
push
andl
push
subl
call
movl
cmp
jne
adcl
lea
push
sbbl
push
adcl
call
cmp
jne
push
movl
lea
addl
push
notl
push
push
orl
push
call
imul
cmp
jne
lea
push
push
xorl
call
cmp
jne
xorl
lea
andl
push
push
decl
call
movl
cmp
movl
jne
xorl
push
addl
lea
push
push
andl
push
push
call
imul
cmp
movl
jne
sbbl
lea
xorl
push
push
orl
call
movl
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
xor
mov
sub
add
movl
mov
mov
sub
or
mov
push
mov
movzbl
add
xor
mov
xorl
push
sbbl
mov
add
cmp
movl
je
mov
and
mov
addl
xor
xorl
xor
sbbl
add
adcl
add
adc
movl
xor
sbbl
mov
incl
push
xor
xor
neg
xor
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
orl
mov
xor
add
mov
sub
sub
movsbl
mov
sub
movzbl
or
mov
andl
xor
cmp
movl
jne
xor
xor
xor
mov
movl
push
mov
adc
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
push
sub
mov
andl
mov
movl
and
push
mov
or
mov
add
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
push
push
inc
push
icebp
dec
imul
lea
test
add
add
inc
cmp
outsb
outsl
ja
and
pop
inc
imul
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
xor
lea
movzbl
xor
inc
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
inc
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
lods
outsb
lods
repz
xchg
testb
xor
xchg
lea
imul
fwait
or
fwait
or
mov
lea
xchg
lea
xchg
fwait
cltd
mov
test
xor
mov
xchg
mov
lea
push
push
cmpsb
jb
push
notl
mov
test
cmpsb
test
push
push
mov
ret
add
jmp
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
inc
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
dec
xor
cmp
je
push
push
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
dec
xor
cmp
jne
mov
pop
pop
cmp
je
xor
xor
mov
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
inc
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
inc
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
