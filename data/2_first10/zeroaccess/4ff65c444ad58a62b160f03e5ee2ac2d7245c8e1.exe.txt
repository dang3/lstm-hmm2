push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
mov
scas
addl
subl
sub
cmp
jp
jbe
dec
jae
jae
dec
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
pop
and
flds
mov
mov
mov
imul
mov
mov
sbb
cmp
je
mov
mov
in
cmp
dec
mov
push
add
fildl
or
jb
adc
or
or
pop
xor
shr
cmc
xchg
fadds
add
in
jge
lods
inc
push
ret
mov
jl
xor
sub
jne
scas
sub
jnp
jns
imul
and
aam
cmpsl
xor
dec
int3
xor
sbb
rcr
cmpsl
jae
pop
adcl
cmp
popa
inc
push
cmp
jae
push
or
cmp
push
mov
in
stc
pop
pop
xchg
stos
into
sahf
mov
push
fstpl
sub
call
jle
mov
pop
mov
fnstsw
and
enter
lods
mov
mov
inc
push
or
out
xor
stc
shl
mov
inc
in
fs
bound
scas
pop
inc
hlt
mov
inc
mov
sbb
aam
mov
jnp
or
ljmp
xchg
lods
cmp
popl
sub
pop
dec
cmp
arpl
jg
punpcklbw
cmp
mov
mov
mov
iret
add
mov
mov
loop
inc
fistps
mov
icebp
fsubr
adc
outsb
pop
sub
insb
push
push
pop
and
addr16
insl
insb
lcall
cmpsl
add
jge
mov
cmp
data16
cmp
pop
inc
xchg
inc
xor
int3
mov
cmp
adc
push
cli
xchg
pop
inc
data16
cmpsb
push
repnz
imul
sbb
imul
arpl
lcall
je
lock
mov
add
pop
xchg
or
bound
pop
js
sbb
cld
adc
loop
pop
shlb
test
icebp
mov
les
dec
out
and
jl
xchg
push
cli
aam
stc
clc
xchg
notb
and
push
dec
jg
mov
and
imul
stc
mov
cmp
pushf
mov
sbb
addr16
mov
icebp
mov
addr16
dec
sbb
push
xlat
xor
scas
es
mov
xor
xor
loop
pop
adc
pop
mov
pushf
xchg
cmp
jg
das
cltd
pop
mov
call
fwait
or
ja
mov
aam
jnp
pop
jae
adc
xchg
mov
lock
lock
xchg
mov
and
xor
test
xor
je
jnp
test
or
sti
into
sti
aam
jp
lahf
inc
cmp
dec
ds
ss
cmp
subl
xchg
mov
test
lods
outsb
dec
ljmp
lds
hlt
cltd
repnz
add
sub
mov
out
lock
add
adc
push
cwtl
arpl
lea
insl
ds
sbb
je
push
sbb
mov
fidivrs
xor
dec
mov
outsb
movsl
mov
mov
mov
aad
sbb
add
mov
jns
push
imull
dec
or
xor
cmp
pop
inc
rol
addr16
out
push
add
xchg
addb
rorb
and
fwait
stc
fs
or
std
and
jo
push
daa
sbb
test
jle
mov
dec
pop
cmpsl
das
mov
mov
fsubl
ret
jmp
xchg
test
leave
sbb
cwtl
popf
jecxz
push
push
add
mov
cmp
inc
cld
sub
lea
mov
jnp
aad
jae
dec
ret
aam
dec
clc
mov
sti
and
ja
stos
xchg
mov
cmp
in
xchg
addl
push
dec
rolb
icebp
jle
mov
push
or
inc
inc
inc
adc
push
hlt
dec
add
inc
rcll
xchg
cmp
mov
mull
je
sbb
fs
in
pushf
or
jmp
or
fcomps
test
mov
inc
and
lret
inc
and
imul
xchg
sub
sbb
add
data16
jbe
xchg
faddl
inc
in
cmp
test
mov
push
mov
push
mov
call
sbb
test
cli
push
pop
sub
sbb
xchg
lock
cmc
xor
dec
scas
daa
fwait
mov
inc
jp
mov
jle
notl
dec
dec
mov
dec
data16
outsl
xor
and
aaa
lahf
hlt
call
cmp
leave
xchg
fistpll
add
sahf
fisubs
mov
cmp
xor
les
mov
xor
dec
cmp
scas
mov
scas
fnstsw
cltd
lret
ss
repz
aad
jb
loop
add
push
fbstp
jecxz
push
mov
es
ja
pop
push
aam
adc
xor
cmp
xor
movsb
jmp
jecxz
repz
arpl
mov
cld
pop
pusha
shr
mov
dec
test
sbb
jnp
adc
test
iret
mov
out
lock
mov
lret
push
adc
loope
cld
popa
xlat
fidivrs
ljmp
cmc
stc
incl
outsl
xchg
xchg
add
mov
push
inc
outsb
mov
dec
mov
push
mov
fwait
mov
mov
hlt
out
sub
and
sarl
cli
popf
sub
repnz
add
dec
bound
aam
and
jne
sahf
jo
mov
or
mov
or
enter
scas
cmpsl
adc
jge
xor
jge
and
and
outsl
mov
adc
es
pop
and
inc
or
dec
lahf
or
sbb
push
adc
lods
imul
xor
dec
cmpl
jns
fisubrl
inc
icebp
inc
adc
scas
cmc
jge
adc
sti
shl
outsl
jno
inc
inc
push
div
jne
out
push
or
or
mov
cmc
mov
test
add
dec
out
push
or
sahf
pop
cmc
jns
hlt
and
cltd
cwtl
fiaddl
or
pop
jae
mov
xchg
test
pop
imul
or
xlat
xchg
mov
loope
jae
mov
pop
mov
pop
aaa
xor
mov
pop
jle
addb
push
loop
adc
movsb
push
arpl
faddl
sbb
cwtl
orl
ret
add
in
mov
sbb
jmp
sub
pop
pop
fidivs
fwait
jbe
jmp
mov
mov
fcomps
pushf
sbb
dec
jmp
xor
lret
dec
fisttps
in
mov
into
and
sub
push
pusha
jb
sti
cmp
iret
insl
pop
cmp
je
stos
push
roll
test
adc
mov
out
mov
cmp
ds
cltd
xor
mov
faddl
jmp
xchg
mov
pop
out
xchg
sbb
cmp
jge
xlat
cmp
subb
and
ret
inc
add
leave
xchg
andl
subl
int
loope
lods
insl
xor
sti
lock
xchg
jno
cld
bound
pslld
push
test
popa
cltd
jp
dec
sbb
and
inc
mov
adc
pop
mov
cmp
xchg
imul
push
sub
imul
sub
and
shll
mov
and
pushl
jge
lret
fadds
sub
dec
fimull
sti
into
inc
mov
out
ret
loopne
and
mov
push
divb
enter
sub
rcll
mov
rcl
pop
out
pushf
std
jmp
dec
inc
cmp
enter
lret
lea
enter
jmp
js
xchg
pop
add
xchg
lahf
sbb
jmp
ljmp
std
cld
lahf
lahf
inc
out
sub
nop
push
sub
xchg
stos
cmp
xchg
or
shrl
imul
in
push
cld
jae
stos
mov
hlt
adc
sbb
stc
pushf
sbb
fstpl
add
cwtl
xchg
movsb
or
shrl
loope
xchg
lea
sti
std
push
pop
push
ds
stos
sbb
or
dec
jno
adc
flds
out
cltd
je
push
jo
xor
int
jne
pop
mov
iret
imul
mov
nop
jb
mov
addb
mov
mov
mov
mov
add
lods
add
sti
mov
and
cmc
negb
scas
imul
dec
xchg
bound
or
jnp
popf
mov
or
call
add
je
aas
call
fidivrl
add
jbe
push
rcll
cwtl
cwtl
mov
cmpsl
cltd
xchg
cmp
xor
bnd
and
pop
cltd
xor
sub
sub
mov
sbb
nop
mov
jbe
push
aad
lret
xchg
divl
in
cli
cmpsl
bnd
subl
push
push
addl
imul
jl
stos
in
mov
push
aam
or
lds
mov
sbb
add
mov
xchg
lods
jl
inc
add
jge
mov
and
mov
sub
and
mov
iret
iret
out
sub
xlat
fcmove
pop
and
sub
outsb
imul
xchg
dec
push
enter
test
inc
leave
ss
or
dec
movsl
arpl
pop
faddp
xor
jle
mov
or
fcomi
fistpl
adc
testl
jne
jmp
call
push
push
fs
lahf
popa
mov
pop
mov
fwait
ja
nop
or
loop
add
mov
cmp
cmpsl
push
repz
add
jo
mov
cld
popf
and
jne
imul
lea
or
mov
fmuls
bound
or
int
mov
xlat
jae
dec
mov
scas
cltd
ja
mov
fsts
mov
insb
pushf
rolb
ss
out
rcrb
pop
mov
mov
lcall
test
sti
lods
add
sbb
mov
xor
dec
xchg
outsl
cmp
xor
cli
mov
scas
mov
push
inc
sbb
mov
dec
loope
mov
into
stc
push
push
or
jae
movsl
mov
icebp
lods
xor
lea
jnp
or
push
ss
push
mov
mov
push
shlb
mov
rorb
pop
lds
or
lds
xor
and
pop
aam
or
mov
outsl
je
hlt
mov
xchg
push
iret
xor
fsts
mov
ret
lea
in
inc
push
clc
popa
mov
sahf
dec
lea
jo
and
mov
and
out
fwait
dec
add
aad
popa
fbld
add
stos
push
jp
pop
imul
aad
dec
cmp
lcall
dec
enter
sub
sbb
xlat
rclb
push
lahf
cmpsl
aaa
and
dec
nopl
orl
scas
mov
adc
cwtl
jbe
and
mov
cmp
pop
xor
out
mov
roll
shl
ss
insl
js
inc
or
mov
add
aas
call
lock
xchg
add
stos
mov
int
hlt
or
pop
movsb
add
test
insl
jp
movsb
jb
scas
push
push
scas
cmp
leave
fisubs
sub
aad
push
or
inc
pop
lock
cwtl
pop
xor
mov
add
jge
daa
xchg
ret
adc
icebp
xchg
mov
ficomps
aam
imul
std
dec
mov
add
addr16
ret
adc
adc
addl
ficomps
in
pusha
loop
or
mov
shrb
loope
mov
into
aad
aas
jo
add
ds
sahf
outsl
mov
aad
mov
das
lock
mov
clc
rcrl
flds
pop
ret
out
mov
push
ja
or
nop
rcrl
cs
iret
loopne
repz
cli
popf
sarb
movsl
mov
sbb
and
inc
inc
mov
je
mov
incb
shll
and
mov
xor
xlat
stos
lock
loope
or
push
daa
and
and
sti
int
hlt
push
lods
xor
inc
lret
pshufw
xchg
sub
add
dec
subb
jp
sbb
in
mov
mov
jg
mov
cs
dec
scas
mov
into
xchg
pop
mov
addb
mov
jl
jl
adc
repz
pop
adc
stc
fdivs
push
dec
mull
aas
and
mov
mov
jnp
lds
adc
mov
loop
jle
xchg
xchg
outsb
jg
push
jnp
jge
movsl
add
es
sar
xlat
pop
mov
push
sub
inc
leave
dec
add
or
xchg
pop
pusha
movsb
sbb
inc
into
mov
lods
jno
adc
shl
adc
pop
pushf
and
dec
xor
mov
jbe
lcall
jp
push
pop
fstl
cmpsb
mov
mov
inc
fwait
xor
add
je
sub
adcl
push
sub
test
popa
lcall
inc
subl
in
mov
or
decl
loopne
inc
cmp
sbb
add
adc
iret
push
dec
sub
or
pop
mov
or
ret
or
dec
cmp
stc
in
loope
inc
ds
sbb
int3
mov
vmovsldup
and
dec
ljmp
leave
jno
push
addr16
xchg
rclb
mov
stos
out
fcoml
xchg
and
dec
cmpsb
jne
imul
loope
out
pusha
mov
aad
leave
pop
mov
test
out
les
adc
sub
or
movsl
in
je
pusha
mov
incl
or
mov
sbb
jp
dec
lret
outsl
adc
int
scas
mov
dec
insl
push
jnp
loop
stos
xchg
sbb
mov
xchg
cs
cwtl
pop
ror
cmp
icebp
mov
stos
in
jno
push
adc
rolb
test
addr16
aaa
or
loope
arpl
dec
fcmovnu
inc
push
ss
or
and
add
and
sbbb
test
rcl
jl
outsb
sbb
pop
inc
or
jo
mov
mov
mov
jne
scas
mov
loopne
maxps
cmpsb
adc
aad
std
out
jno
adc
dec
xchg
adc
mov
xchg
pop
sub
sbb
aad
inc
mov
test
les
test
sub
sub
push
pop
es
adc
ret
notb
jp
int3
xchg
cmp
sarl
jae
jecxz
mov
in
gs
outsl
inc
testb
mov
rcrl
inc
imul
mov
pop
lret
pop
out
jmp
inc
sahf
fxch
into
stos
aas
in
test
or
bound
mov
add
movsl
dec
inc
stc
adc
jmp
sub
das
mulb
xlat
into
xchg
inc
mov
cwtl
aam
and
lods
add
aad
inc
not
push
mov
cmp
push
ja
xchg
push
pop
and
inc
add
sub
in
icebp
nop
dec
mov
xchg
ss
out
or
push
mov
mov
sbb
dec
in
add
pop
adc
test
loop
fwait
sub
shrl
out
lahf
jl
mov
dec
iret
outsb
in
or
ret
imul
jmp
shl
adc
movsb
aad
mov
and
jo
daa
xchg
scas
adc
adc
imul
imul
pop
jbe
pop
mov
aas
sti
mov
faddl
and
fwait
test
mov
push
add
imul
lret
jns
jb
push
std
pop
popf
out
mov
mov
push
and
pop
mov
sarl
adc
out
dec
pop
sarl
cmp
xorl
cmpsb
insl
xor
push
xchg
mov
add
sbb
lret
cld
mov
inc
stos
adc
int3
and
jle
mull
sahf
pop
inc
lods
xchg
mov
inc
or
sub
mov
call
jo
push
jg
fimull
aad
xchg
nop
sahf
mov
sbb
cld
shlb
adc
cmc
jl
and
out
sub
in
jbe
out
call
mov
mov
shll
nop
mov
dec
cmp
in
mov
pop
inc
mov
sbb
lahf
ficompl
dec
das
adc
pop
clc
mov
dec
push
je
xchg
outsl
mul
imul
xchg
mov
adc
scas
ret
test
cmpsb
fdivrs
movsb
aam
stos
in
jmp
pop
fwait
sbb
inc
push
jmp
push
in
mov
push
xor
clc
xchg
push
arpl
movsb
inc
push
mov
push
and
in
test
add
test
sub
mov
xchg
sub
imul
push
and
push
iret
push
std
jne
ljmp
cltd
mov
movb
xchg
scas
nop
pop
push
jmp
je
pusha
shlb
xorb
lret
xlat
std
or
sbb
mov
test
cmp
or
pop
lods
push
mov
add
aad
subb
lods
push
pop
mov
xlat
xchg
cmpsb
jae
scas
sti
or
cmpsb
cwtl
xorb
mov
loop
insl
imul
faddl
jnp
cwtl
xchg
push
mov
push
sub
fistpll
orl
cmpsb
lods
add
or
jecxz
cli
dec
test
sbb
aad
jne
leave
aas
scas
mov
mov
mov
clc
repnz
xorb
pop
mov
adc
sbb
cli
aaa
and
lret
mov
sahf
mov
leave
fwait
ds
sar
add
jecxz
in
out
icebp
add
call
sub
test
je
imul
and
jmp
inc
mov
cmpsb
sti
aam
pop
jmp
fisttps
repz
mov
push
pusha
lea
cli
stos
xchg
mov
inc
mov
mov
scas
mov
mov
mov
clc
push
sub
adc
aaa
adc
mov
and
dec
push
cwtl
push
adc
xchg
pop
movsb
xor
rcl
insb
int3
adc
mov
cmp
jne
lret
aam
pop
xchg
mov
adc
xchg
adc
adc
ja
neg
out
addr16
inc
in
rclb
mov
push
dec
mov
sbb
pop
mov
mov
je
clc
mov
shlb
ja
sbb
cmp
addr16
jo
inc
adc
mov
jnp
jl
xchg
mov
add
lds
loop
out
mov
gs
addl
in
stos
inc
inc
idivb
fidivrs
inc
in
push
lret
sub
out
pushf
test
jo
leave
outsl
enter
call
inc
fsubl
sub
adc
mov
ficoml
aaa
push
mov
in
mov
pop
jge
dec
lods
out
sbb
push
js
fdiv
cmpl
mov
mov
lea
outsb
imul
sbb
outsb
in
xchg
mov
in
loop
pusha
pop
int
in
repnz
dec
pop
shrd
cmc
dec
arpl
lea
notb
das
or
ds
inc
dec
popa
push
rcrl
push
xchg
sub
cld
xchg
sti
inc
mov
mov
hlt
jb
and
loope
dec
xor
rcl
jo
stos
dec
test
mov
push
insl
pop
adc
es
pop
shrb
inc
mov
adc
jne
mov
test
mov
adc
pop
ss
in
xor
ret
js
jb
adc
jmp
dec
adc
mov
or
loopne
ret
xchg
add
out
cmp
out
subl
rcl
xchg
dec
aaa
out
jns
adc
in
mov
or
push
in
imul
jae
insl
iret
mov
iret
inc
xor
rclb
in
gs
mov
push
jg
cmpsl
lea
xorb
das
or
xchg
jecxz
int3
movsb
push
adc
iret
mov
test
dec
mov
and
movsl
jae
mov
ja
or
in
in
stos
mov
decl
cmp
out
test
pop
lds
test
lea
xlat
int
es
xchg
fistpll
mov
inc
mov
push
xchg
mov
or
cmp
cltd
inc
cmpsb
and
mov
sub
jl
pushf
inc
sbb
imul
xchg
mov
mov
push
test
cwtl
repz
ss
imul
sbb
or
sbb
insb
jge
push
test
mov
jns
push
or
lds
ficoms
daa
push
aam
add
je
mov
arpl
mov
dec
sbb
cmp
movl
loop
push
mov
js
mov
and
stc
stos
ds
adc
xor
push
rolb
stos
cmp
cmpsl
movsb
cmp
loopne
pop
gs
in
fs
in
xchg
ds
cs
dec
sbb
and
stos
ss
mov
mov
outsb
cs
push
in
adc
mov
jl
stos
aaa
lock
test
mov
daa
push
jge
dec
fcmovnu
xchg
or
push
pop
dec
std
in
push
mov
mov
pop
jae
sahf
dec
mov
pop
lds
cmpsl
fisttpl
std
fstp
inc
xchg
ds
pop
inc
cmp
in
mov
jmp
push
loopne
insb
mov
push
arpl
push
dec
pop
out
fmull
je
xor
mov
aad
xor
pop
mov
sbb
jge
int
fiaddl
inc
xor
movb
call
xchg
jae
sbb
and
dec
test
fwait
dec
in
adc
jo
pop
pop
clc
and
adc
shll
sub
lret
lahf
xchg
mov
adcb
inc
cmp
scas
mov
pop
adc
cld
shlb
jno
push
in
add
and
gs
mov
adcb
adc
imull
nop
lret
fwait
xlat
jge
cmp
outsl
test
rol
pop
dec
jae
lock
test
lcall
ss
js
jno
push
xor
mov
xchg
outsb
test
lea
dec
rorb
jns
fisubl
imul
cs
aam
pop
pop
sbbl
stos
in
inc
mov
lods
push
outsb
inc
sbb
andb
stos
push
and
ljmp
sbb
mov
dec
adc
add
sub
stos
enter
and
mov
jle
push
pop
mov
lahf
jbe
notl
lret
dec
jle
jle
cli
add
push
push
enter
adc
sti
push
xchg
push
xchg
into
das
pop
cmp
cwtl
mov
loop
dec
stos
xor
xor
ret
inc
mov
adc
pop
xor
jge
mov
push
rclb
cld
jmp
xchg
mov
and
je
fadds
pop
pop
push
clc
add
add
jg
add
jbe
sbb
roll
and
push
xchg
stos
rcll
sbb
mov
roll
mov
js
push
in
popa
cmp
repz
or
cld
ds
imul
cmp
divl
fidivl
or
stos
xor
cwtl
dec
jge
xchg
sarl
jae
inc
test
or
jmp
mov
sbbb
mov
les
cmp
dec
dec
js
mov
arpl
sahf
pop
jb
gs
lds
or
push
in
rol
sub
adc
jle
imulb
fwait
inc
into
stos
or
sub
pop
bnd
mov
xorb
jne
out
and
dec
cmovl
mov
fmuls
push
jmp
pop
pop
jno
sbb
adc
int
dec
int3
cmp
jae
jle
ss
pop
orl
jecxz
repz
lods
or
dec
add
mov
xchg
pusha
loope
jmp
adc
xor
mov
fisubrl
int3
adc
test
inc
jp
and
sbb
mov
cmp
ljmp
repz
pusha
outsl
mov
xor
lea
cwtl
nop
flds
add
ficoms
icebp
xchg
bound
mov
mov
jns
push
add
pop
inc
lods
lcall
dec
ja
jo
stos
jecxz,pt
sbb
add
mov
push
mov
xchg
pusha
testb
aam
xchg
hlt
dec
push
sub
sbb
dec
adc
shll
gs
in
loop
inc
addl
xchg
mov
insb
pop
cmc
sbb
fdivrs
inc
cmpsl
cli
rcrb
es
sub
int3
scas
push
popa
shlb
lods
sub
es
cwtl
mov
addl
mov
data16
rcrl
shrb
xchg
mov
es
xchg
cmp
gs
fsubrl
insl
into
inc
xor
jb
xchg
or
mov
adc
into
cmpsl
sahf
dec
inc
cmp
bnd
xchg
arpl
aam
hlt
and
fs
xchg
into
adc
xor
mov
sar
cmp
and
xchg
mov
dec
dec
xchg
out
daa
mov
dec
dec
push
dec
pop
cmp
mov
scas
jle
les
push
std
mov
jmp
repz
enter
cmp
mov
lods
mov
pushf
push
fbld
pop
pop
mov
icebp
jnp
inc
push
dec
adc
xchg
cmc
add
dec
ss
stos
ljmp
scas
filds
imul
in
jne
mov
xor
inc
scas
inc
repz
adc
inc
popa
icebp
test
fs
test
mov
inc
adc
jmp
test
lds
out
lea
cmp
lret
adc
cld
in
out
lcall
ljmp
aad
and
lods
xchg
dec
dec
mov
dec
adc
mov
shrb
mov
jns
notb
test
push
jno
mov
mov
insb
scas
push
ret
mov
dec
push
stos
stos
mov
scas
outsb
sbb
adc
sbb
into
xor
mov
mov
mov
test
cmpl
cltd
shl
xchg
inc
std
test
push
loop
jns
inc
add
lret
adc
sbb
sbb
xchg
xchg
adcb
sbb
mull
loop
icebp
or
test
cli
dec
push
in
inc
push
xor
and
data16
cmp
flds
scas
pop
movsl
mov
add
dec
jle
push
dec
int3
xchg
mov
xchg
xchg
cmpsl
lahf
cs
jl
in
fistpll
xchg
pop
push
jle
scas
push
les
cmp
add
jnp
sub
adc
movsl
fmuls
movsb
xor
clc
xor
ljmp
and
movsb
out
push
aad
lock
mov
subl
cld
cli
mov
mov
fistps
les
insb
je,pn
mov
or
or
iret
loop
push
adc
insl
ret
or
xchg
push
dec
nop
sub
jb
push
mov
push
dec
test
push
jecxz
inc
pop
shrb
cmp
fmuls
pushf
jp
arpl
inc
lea
jbe
push
dec
in
mov
hlt
ljmp
ret
inc
push
push
inc
mov
scas
arpl
add
scas
and
aaa
dec
lret
cmp
sahf
mov
iret
rcrb
gs
daa
stc
out
adc
xlat
mov
in
cmpsl
mov
inc
adc
pushf
ljmp
roll
dec
pop
int3
add
jno
dec
pop
iret
mov
sub
cmpsl
cmpsb
push
pop
mov
stos
dec
jo
sub
mov
loop
shr
inc
sbb
fsubrs
scas
or
mov
aas
std
add
or
lcall
std
int3
add
mov
jb
adc
inc
or
iret
insb
lret
pop
or
jae
and
push
jle,pt
inc
pushf
push
ss
cwtl
xor
dec
push
push
or
mov
or
cld
fidivs
inc
nop
jne
fwait
mov
mov
shlb
into
push
addr16
in
insl
push
insb
ss
pop
dec
add
rorb
dec
sti
mov
sub
mov
jno
fadd
xchg
aam
push
mov
xor
mov
pop
inc
test
jmp
jae
out
rcrb
sbb
pop
ljmp
shrb
dec
sub
jmp
push
mov
aas
ss
test
add
outsb
test
pop
and
imul
cmc
adc
xlat
xor
inc
pop
pushf
cmp
mov
sarl
lcall
es
std
pop
pusha
mov
cmp
pop
adc
adc
shrl
lea
inc
cld
mov
clc
dec
ljmp
adc
xchg
mov
xlat
push
ret
in
orl
xchg
pop
out
rolb
jle
ret
xor
out
sbb
mov
cmp
cmp
sub
sbb
mov
mov
js
scas
push
cmp
mov
sub
inc
sbb
call
jno
dec
into
dec
mov
mov
jno
mov
pop
or
inc
pop
out
xchg
ret
std
outsb
mov
sbb
lcall
or
sub
xchg
ja
sbb
mov
jns
xchg
or
hlt
arpl
sbb
pop
repnz
repnz
or
das
or
nop
dec
ss
xor
mov
cmp
or
mov
pop
xchg
jne
enter
mov
dec
push
or
enter
rcll
lret
or
xchg
mov
jno
mov
cltd
sub
sbbb
aaa
flds
add
inc
fsts
aad
add
inc
mov
addr16
mov
mov
push
fildl
add
push
dec
cmp
fbstp
shlb
adc
cmp
orb
lock
aad
insb
popf
mov
mov
xor
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
mov
das
ss
pusha
addl
out
fmuls
jp
adc
out
mov
mov
popa
mov
out
fidivs
or
ja
pusha
jg
imul
js
add
lds
cs
stos
sbb
dec
push
jle
pop
out
popf
movsl
pop
mov
or
imul
and
repz
mov
cmp
cmp
xor
sub
mov
cmp
imul
mov
cmovbe
mov
and
mov
lret
out
ror
popf
xchg
mov
pop
daa
cmp
fldcw
jg
rcrb
xor
xor
shll
mov
mov
js
mov
mov
shlb
sub
imul
out
jl
cmp
shlb
fidivs
and
push
pop
test
cwtl
inc
dec
sbb
inc
sbb
push
xchg
int3
adc
lock
inc
ret
xchg
push
add
lahf
jae
in
xor
pop
es
loopne
or
mov
jno
pop
sahf
dec
sahf
push
enter
pop
flds
repz
shrl
push
mov
scas
pop
out
mov
outsb
lods
add
mov
movl
test
data16
sub
movsl
mov
or
jmp
cltd
daa
cmp
mov
dec
mov
js
xchg
mov
mov
outsb
push
jp
aad
fstpt
icebp
inc
push
mov
adcb
jmp
nop
stos
cwtl
scas
adcb
iret
push
call
mov
inc
aad
pop
imull
lds
stc
inc
fistps
pop
fisttpl
inc
sub
xor
arpl
test
mov
pop
pop
in
out
jbe
shr
mov
dec
xor
movsb
mov
sbb
fcoml
pop
lods
movb
add
push
fs
inc
push
mov
lds
add
lods
inc
push
xor
pop
mov
outsb
int
addr16
call
push
loop
pusha
fisttpl
sub
lds
fbstp
add
inc
xchg
cli
mov
cmpb
mov
add
add
lods
mov
fisttps
cs
notl
cmpsl
fildl
outsb
aad
imulb
movsl
jnp
in
fxch
repz
stos
dec
incl
addr16
jge
push
or
xor
lahf
ficompl
mov
mov
mov
mov
push
inc
mov
mov
outsl
mov
lods
adc
sbb
push
adc
je
andl
mov
sbb
mov
rcrl
stc
inc
cli
test
test
or
je
mov
jecxz
repz
xchg
jno
mov
cltd
sbb
push
callw
xor
cmpsl
das
adc
inc
or
xchg
aas
scas
aaa
js
in
fcom
arpl
subb
test
mov
andb
jb
fldl
inc
roll
pop
adc
in
and
dec
xlat
mov
add
pusha
or
dec
xchg
inc
and
adc
pop
cmp
test
sub
lahf
xchg
sub
sarb
int
pop
outsb
push
lods
push
cmp
jae
lcall
mov
sbb
lea
cld
rorb
nop
jne
clc
out
imul
xchg
sub
sar
imull
or
outsb
dec
inc
sub
push
lret
cmc
and
dec
cwtl
or
mov
mov
sbb
lahf
dec
push
pop
jmp
lcall
push
nop
push
dec
sbb
xor
lods
pop
mov
fisubl
pusha
mov
ja
pmaddwd
cmp
pop
jb
inc
js
jle
pop
sbb
cmovnp
aas
test
inc
pop
into
and
jae
fnstenv
mov
dec
rcrl
xchg
cs
add
js
pop
mov
sbb
popa
mov
and
sub
aam
shl
ret
push
aam
xchg
out
loopne
popf
lock
fucom
cmpsl
jmp
add
int3
clc
pop
lods
mov
int
in
fsubrl
push
negb
mov
popa
pushf
js
mov
test
sbb
dec
popa
fnstcw
mov
js
in
test
mov
xchg
sti
mov
mov
sub
dec
out
push
sbb
adc
out
xchg
fs
les
cmp
outsb
in
add
sbbl
dec
sbb
or
mov
cmp
aam
clc
popf
add
pop
addb
scas
shrl
leave
pop
cs
mov
out
mov
inc
lds
xchg
movsl
xor
bnd
inc
aad
mov
and
and
add
inc
ret
adc
inc
addb
push
cmp
and
call
mov
movsb
cmp
mov
in
jno
pop
hlt
test
movsb
sti
ljmp
sub
push
xchg
cmp
pop
jno
cltd
or
out
test
ljmp
inc
cmpsl
push
scas
cltd
xchg
dec
fwait
mov
movsl
sahf
mov
jnp
shlb
lock
les
test
adc
stc
push
xchg
popa
and
test
je
sub
lea
inc
icebp
lret
lahf
dec
das
jle
insl
jne
jbe
add
and
test
mov
ljmp
in
inc
cmc
call
add
addr16
mov
movsl
inc
xchg
dec
lret
ljmp
cmpsl
dec
add
pop
mov
add
movsl
xor
inc
cli
bound
nop
loopne
inc
sub
sub
data16
aaa
push
in
ret
cs
pop
ret
out
insb
sti
insb
mov
mov
cmp
xor
scas
push
cs
in
cmpsl
inc
popf
jo
iret
cmp
mulb
inc
loope
xchg
pop
mov
negl
pop
mov
mov
jns
es
mov
mov
pop
add
cwtl
pop
adc
lods
gs
aad
in
out
fcoms
and
cmp
inc
add
dec
adc
test
lahf
fdiv
test
mov
mov
pop
mov
rcll
adc
push
in
jns
pop
in
inc
ds
sub
sar
flds
icebp
xchg
mov
or
xchg
fs
jl
add
push
enter
fsubrl
inc
jp
ret
or
faddl
stos
mov
pop
mov
inc
aad
mov
cli
sub
lock
sub
loop
fmulp
jbe
imul
and
push
sub
addb
inc
add
lcall
imul
shll
sub
mov
sbb
xor
inc
lods
std
jle
in
pop
adc
mov
pushf
mov
sbb
ds
and
jp
movsl
pop
push
dec
dec
add
mov
das
cld
or
inc
cmpb
shlb
inc
jmp
jb
mov
xorb
jae
clc
inc
adc
or
push
push
pop
ret
or
rcpps
js
shlb
push
ds
popa
inc
repz
adc
cmp
movsl
pop
mov
lahf
inc
cltd
adc
inc
mov
push
bound
ss
jecxz
pop
add
stos
fadd
mov
mov
mov
xor
push
cmp
push
loop
mov
lock
push
xor
mul
test
incb
data16
push
pop
cwtl
data16
xchg
insb
and
sub
jbe
fisttps
xor
inc
mov
fdivrs
inc
aaa
xchg
rclb
add
roll
xchg
pop
fwait
lret
notl
sbb
icebp
jge
mov
inc
sbb
jmp
mov
mov
iret
mov
ret
icebp
shl
xlat
bnd
jge
insl
gs
or
mov
lahf
cltd
mov
aam
shrl
stos
and
sti
cmp
pushf
sbb
jnp
sub
inc
pop
inc
aaa
cmp
mov
lods
in
cs
sbb
in
push
scas
pusha
es
push
fstps
je
mov
je
repnz
sub
sbb
lret
pushf
cmp
pusha
mov
ss
mov
lcall
or
fucomip
in
dec
bound
in
pop
mov
inc
ss
mov
fstps
jmp
mov
and
jnp
and
pop
orl
inc
icebp
jp
hlt
push
arpl
popf
sbb
sbb
push
ljmp
and
out
jg
fcoml
rcll
push
mov
jle
fnstsw
dec
jo
and
jns
push
popf
call
push
adc
scas
daa
push
xor
mov
lret
xor
test
fisttpll
aas
lods
sbb
and
xor
inc
andb
lret
aas
addl
fs
je
adcb
mov
int3
iret
pushf
outsl
push
mov
jns
mov
dec
push
bt
lock
inc
mov
jle
mov
pop
sbb
out
mov
sub
sbb
mov
ret
cli
xor
jg
jg
push
mov
xlat
sbb
gs
js
fnstenv
ret
rclb
lds
jmp
or
lcall
add
push
test
std
out
nop
lahf
pop
push
cmp
jno
sub
shlb
insb
ss
stc
jmp
lret
or
leave
imul
mov
jl
adc
dec
cmp
pop
pop
inc
mov
add
mov
out
sti
jb
idivb
subl
inc
fildl
push
sbb
push
mov
mov
fisttpll
leave
mov
pusha
jge
out
imul
push
xchg
push
call
xchg
adc
jl
aad
iret
shr
fwait
mov
xlat
and
xlat
cld
loop
jp
or
dec
repz
rcll
xchg
loop
push
fidivrl
mov
icebp
mov
fbld
inc
clc
push
dec
lahf
add
add
mov
or
mov
fstl
imul
dec
pop
xchg
je
pop
mov
and
push
push
pop
jo
out
add
xor
popa
jp
xor
xor
movsl
popf
pop
jl
or
std
cmp
dec
imul
lock
negl
add
adc
mov
jbe
cmp
shll
gs
iret
adc
adc
out
lret
cmp
inc
xchg
xchg
mov
mov
popf
mov
out
mov
xchg
dec
pop
sbb
push
adc
sub
rclb
std
movsb
jnp
lret
dec
test
push
stc
lret
jo
push
ja
pop
aad
dec
pop
outsb
data16
pusha
dec
jmp
lock
inc
sub
cmp
les
or
nop
add
mov
mov
add
xor
and
or
jae
mov
pop
mov
pop
dec
fcomp
mov
and
cmpb
lahf
loope
xor
dec
jg
fnsave
rclb
mov
push
movsl
repnz
xor
loope
or
dec
hlt
les
and
mov
aaa
sub
or
ror
pop
xor
outsb
push
mov
mov
xchg
fstl
data16
addl
les
ljmp
movsb
jmp
shrl
cmp
adc
es
sub
dec
xor
aad
inc
fs
add
xchg
pop
xchg
cmp
test
sbb
dec
call
add
pop
cmp
and
ret
xchg
ss
pop
das
inc
shl
pop
dec
incb
push
movsl
cmp
dec
mov
int
enter
bound
dec
xlat
push
cmpsl
imul
mov
pop
clc
fnsave
fcomps
jp
xor
popa
lcall
mov
sbb
inc
aam
xchg
fistps
fldcw
adc
jle
fwait
xchg
sub
dec
bound
repz
in
dec
lret
lods
std
pusha
cli
loope
or
or
mov
ss
add
nop
adc
test
jbe
into
xor
in
mov
push
test
pop
jb
pop
je
fdivrs
dec
mov
aad
subb
leave
icebp
mov
nop
push
sub
arpl
add
pop
cmpsl
mov
xchg
xor
fildl
icebp
pop
test
jno
mov
aam
lods
out
pop
xchg
jb
mov
mov
or
inc
fisttpl
sti
push
adc
dec
cmp
inc
adc
out
adc
dec
push
pop
inc
fcoml
sarb
push
mull
inc
ljmp
jns
xlat
stos
inc
xor
aas
jle
orb
xchg
inc
mov
lea
add
loop
popa
push
stc
mov
xchg
hlt
and
xorb
cli
jg
je
push
sub
sbbl
ljmp
xor
sarl
mov
stos
sub
inc
cli
xchg
jp
adc
aad
pop
cli
loope
icebp
jg
pop
mov
adc
imul
dec
jp
mov
sahf
jae
cmp
adc
sub
xor
push
int
lahf
mov
jp
incl
sti
push
pop
mov
add
jb
xchg
sbb
sbb
pop
sbb
push
sbb
sub
aas
flds
add
xor
pop
adc
or
fstl
ljmp
lea
inc
adcb
popa
shrl
sub
rcrl
inc
pop
adc
in
or
xor
jle
sub
ja
xorl
sub
cmc
in
arpl
bound
dec
dec
imul
mov
movsl
out
push
lods
popa
jb
mov
sbb
pop
adc
fdivs
outsb
fnsave
sub
test
dec
xchg
pop
outsb
xchg
pushf
sbb
pop
jbe
inc
mov
dec
vpsubb
shlb
aaa
jae
dec
and
jbe
imul
addr16
mov
sub
cmp
addr16
outsl
leave
jg
inc
dec
mov
popf
pop
sbb
xchg
sbb
inc
fstpl
aas
enter
lds
dec
push
out
movsl
mov
push
adc
or
pop
dec
daa
mov
rol
xchg
and
dec
in
cld
dec
pop
lret
jmp
into
testl
pop
pop
ss
jmp
pop
inc
mov
jb
jp
mov
lcall
add
outsl
dec
aas
imul
mov
push
clc
cwtl
bound
inc
sbb
adc
loop
ljmp
in
pop
dec
ss
sub
mov
or
dec
ffreep
mov
xor
dec
xchg
lret
pop
popa
jo
and
iret
xchg
jecxz
add
mov
js
jp
cmp
jo
test
dec
cmp
jg
mov
sub
lahf
inc
cltd
inc
mov
cld
mov
fsubs
ljmp
xchg
in
xchg
adc
in
fisubs
lret
jns
mov
sti
pop
add
sbb
leave
rorl
dec
sub
pop
mov
xchg
jmp
mov
sbb
repz
dec
pop
nop
inc
pop
aam
jno
pop
and
pop
xchg
xor
out
stos
xchg
cmp
pop
sub
into
sbb
or
sarl
push
cmp
lds
data16
fstl
ja
mov
inc
rcr
fcompl
cmp
out
das
das
testl
les
fcoms
ljmp
enter
test
data16
inc
in
cmc
insb
fdivs
scas
shr
jnp
pop
mov
insl
stos
cli
popa
inc
mov
imul
dec
dec
pop
mov
and
sbb
jp
dec
mov
cs
jbe
das
sub
mov
adc
or
fdivrl
sub
out
mov
xchg
and
add
push
cwtl
test
mov
or
aaa
ss
bound
rcll
sbb
xchg
add
and
or
xchg
xchg
push
mov
or
stos
sub
imul
push
mov
pop
xor
cmpsb
arpl
xor
push
je
add
and
jl
xchg
and
insb
aam
addr16
lds
sub
jno
repnz
mov
icebp
orb
xor
loopne
mov
xchg
and
sbb
jle
jle
mov
jmp
stos
dec
xor
lds
in
cmpsb
or
and
das
sbb
jne
fcmovne
mov
fisttps
jecxz
xchg
mov
rol
xchg
adcb
mov
inc
pop
push
mov
sbb
mov
loopne
lea
out
xchg
or
stos
in
and
repnz
int3
inc
pop
fldl
jp
in
mov
xor
clc
or
fsub
push
mov
out
imul
pop
xor
popw
test
push
fwait
test
jbe
lods
js
mov
hlt
dec
cs
leave
mov
cmp
sti
test
or
and
bound
mov
xor
insl
jge
mov
insb
mov
aas
popf
push
ss
pop
xor
push
xor
movb
lods
inc
mov
xchg
adc
xor
es
lods
inc
mov
jo
jno
es
aad
adc
sbb
inc
hlt
mulb
lahf
mov
cmpsb
mov
jle
inc
pop
negb
inc
mov
sub
cli
test
pop
adc
sub
push
enter
sahf
jnp
mov
sub
push
inc
xlat
insl
lcall
dec
call
mov
dec
xor
push
dec
sti
mov
pop
pop
sub
pop
sbb
push
mov
pusha
filds
jl
ja
add
xorb
gs
mov
aam
push
mov
inc
jl
jge
sub
in
cltd
mov
idivl
dec
xchg
inc
dec
ljmp
push
and
jno
sub
inc
fbld
out
cmpsl
add
mov
add
lods
loop
out
pusha
clc
ret
js,pt
enter
and
clc
mov
outsl
or
cmp
cltd
hlt
std
cmp
mov
cld
in
xchg
pusha
mov
push
adc
enter
or
mov
fstl
pop
lret
dec
mov
jns
jo
test
and
push
add
lahf
outsb
inc
cmpb
lock
mov
add
in
jle
in
sbb
fwait
mov
fstpl
lret
adc
add
int3
popa
xchg
cmp
mov
push
xchg
nop
negb
aaa
jno
jne
xor
xor
lea
std
jp
aad
insb
mov
xchg
lahf
jmp
daa
xchg
mov
int3
jecxz
pushf
xor
mov
jmp
out
mov
test
fists
sbb
gs
shll
loopne
int
enter
lcall
or
jg
fmul
lock
and
dec
and
popf
sbb
xchg
dec
scas
dec
xchg
std
cmp
push
inc
mov
push
dec
in
mov
or
lahf
mov
add
inc
lret
jnp
int
mov
jno
jg
leave
cld
mov
pop
dec
aas
jl
and
mov
test
add
jmp
and
shlb
push
out
loope
xchg
je
hlt
repz
sub
out
lock
cmc
test
mov
shlb
and
aaa
hlt
mov
lahf
insb
adc
adcb
xchg
rorl
push
adc
xchg
loope
push
insb
mov
pop
jmp
pop
push
in
fs
and
outsl
in
xorb
mov
in
aad
rolb
mov
das
sahf
mov
jno
pop
cmp
adc
rcrb
les
mov
repnz
fwait
mov
cmp
aas
in
bound
loopne
out
adc
or
cs
xorb
mov
adc
scas
mov
mov
jnp
fwait
testl
mov
aas
mov
ss
sub
test
xchg
jp
dec
mov
sbb
pop
les
jecxz
inc
and
xchg
pop
mov
divl
mov
inc
or
xchg
faddl
lahf
sub
jmp
mov
iret
imul
push
outsl
jb
sbb
xchg
pushf
jne
lret
push
test
inc
flds
jg
popa
nop
adc
aam
pop
adc
test
push
mov
push
jle
xchg
jle
loopne
fidivs
sahf
addr16
sti
fcompl
mov
mov
jo
loopne
add
mov
in
inc
push
movsl
loop
push
xor
mov
xor
add
mov
inc
jg
mov
outsb
add
ja
jg
mov
mov
mov
adc
fldt
scas
inc
push
xchg
and
subb
mov
cmpsl
xor
inc
xor
jne
xor
lea
sbb
inc
adc
pop
pushf
insb
sub
bound
xchg
in
and
mov
jge
cmp
aas
inc
shl
add
testl
repz
cmp
mov
fs
lods
cmpsl
rcrl
xchg
sub
ret
jge
in
dec
ret
push
mov
popl
mov
test
cmpsb
roll
lock
rorb
mov
les
push
push
mov
inc
sti
std
add
and
ret
or
mov
xor
rorb
mov
sub
sub
dec
mov
and
adc
cmp
out
iret
sbb
push
mov
ret
call
or
jmp
pop
xor
lods
xor
lret
jg
inc
pop
lahf
mov
jnp
ret
push
adc
cmpl
orl
inc
and
xchg
mov
popa
push
inc
push
push
and
add
daa
jo
jmp
ja
sahf
push
loop
hlt
push
adc
mov
mov
and
and
out
mov
dec
repz
sti
pusha
pop
shlb
hlt
lods
jbe
mov
loope
aaa
loope
imul
cmp
dec
xor
or
int
mov
push
js
mov
jbe
add
arpl
lret
or
fsubs
outsl
push
dec
xchg
mov
mov
in
pop
jmp
xchg
ss
xchg
in
and
pop
mov
or
int3
das
call
or
mov
xchg
mov
idiv
dec
cmp
les
pop
rcrl
and
mov
inc
fs
negb
lcall
aaa
in
popa
mov
or
scas
lods
jb
nop
xchg
adc
xchg
mov
inc
push
push
addr16
nop
cmc
pop
cltd
lock
ret
cmp
call
cmp
add
cld
xchg
xchg
icebp
pop
cmp
mov
push
stos
dec
adc
pop
xchg
frstor
jmp
mov
imul
loopne
daa
sbb
jbe
jns
mov
add
leave
mov
aaa
stc
call
dec
or
je
or
je
jp
jg
lock
push
xor
or
enter
stos
imull
xor
cmc
out
or
lcall
stos
roll
hlt
or
or
mov
fs
pop
inc
jnp
jmp
and
sti
and
loop
pop
les
int3
stos
negl
aas
xchg
pop
imul
lret
inc
dec
loope
push
in
nop
leave
imul
ret
xor
push
in
push
mov
shlb
push
dec
jecxz
nop
jecxz
mov
mov
jnp
mov
xlat
pusha
jns
aam
mov
lods
pop
fisubl
stos
pop
or
jae
scas
scas
lea
mov
push
outsb
jp
mov
mov
ljmp
mov
cmc
int3
cmp
mov
stc
cltd
loop
mov
pop
inc
inc
cmp
push
ror
mov
push
and
je
push
jo,pn
pushf
pop
xchg
xor
jb
cmp
loopne
aas
push
add
xor
mov
dec
sbbl
shl
leave
pop
mov
mov
push
ret
call
aam
sbb
into
pushf
jp
mov
sub
outsb
pop
pop
cmp
xchg
insb
mov
stos
data16
scas
cmpsb
adc
or
ja
add
cmpb
mov
out
mov
xchg
sub
xor
inc
inc
sbb
ss
loop
xchg
mov
mov
out
sahf
jecxz
cmp
or
lcall
nop
scas
xrelease
sub
xchg
xorl
lahf
adc
fwait
jmp
addl
ret
shl
repz
test
out
sub
subl
lods
sbb
lock
fcoml
scas
inc
pop
add
mov
add
mov
loop
adc
divl
sbb
and
cltd
cld
loopne
add
mov
movsl
sub
mov
cmp
jge
push
int3
out
add
jns
movmskps
pop
mov
mov
inc
adc
lcall
imul
push
dec
pop
push
in
or
mov
sub
pushf
inc
test
sbb
notl
bound
fchs
xchg
lret
mov
or
into
pop
repnz
adc
ds
stos
cli
adc
inc
jp
shll
mov
mov
ret
int
hlt
mov
jge
dec
loope
int3
jle
xchg
rcll
ljmp
xor
xorl
push
dec
pushf
jge
jns
ljmp
jbe
mov
out
test
mov
jb
hlt
cld
sbb
in
cmp
xchg
mov
cld
push
and
or
and
sti
lret
adc
sbb
add
or
inc
xor
mov
pop
shl
aas
or
pusha
adc
mov
insb
out
enter
cmp
insl
adc
adc
cltd
push
adc
and
adc
pop
push
adc
ja
xchg
or
ret
shrb
mov
mov
ret
and
daa
cmc
enter
in
leave
fwait
pushf
imul
repnz
pop
fildll
mov
or
arpl
adc
mov
jmp
pop
jmp
notb
mov
out
push
out
inc
sbb
mov
sub
pop
mov
movswl
add
aas
outsb
loope
sbb
adc
lret
pushf
aad
sub
into
outsl
xorl
movsb
pop
push
add
js
es
add
mov
mov
stos
lds
xchg
fwait
or
mov
bound
jmp
xchg
mov
pop
dec
pop
dec
mov
aas
addr16
mov
aam
imul
pop
sbb
arpl
mov
dec
mov
cmp
popf
cld
add
test
dec
sbb
jbe
push
or
cmp
and
jne
sbb
adc
lods
cmc
and
rorb
in
icebp
leave
mov
add
aam
mov
hlt
or
out
loop
xor
push
imul
add
cltd
aam
jmp
push
dec
jb
push
test
push
and
pushf
pop
jno
xor
movsb
ss
jbe
aaa
es
ret
test
jno
stos
subl
cmpb
push
mov
inc
andl
xchg
imul
and
xlat
test
out
out
mov
mov
pop
js
jb
sub
out
push
stos
xor
jne
rcll
pop
jnp
mov
pop
cli
fstpt
inc
lcall
bound
jge
fcmovnu
int3
loope
sbb
iret
sbb
aam
lcall
loope
lods
xchg
mov
cmp
or
aam
mov
xchg
inc
pushf
push
test
lahf
sarb
sub
mov
sub
push
insl
dec
dec
aad
leave
repz
outsb
fwait
ja
mov
push
cmp
in
aam
lcall
gs
aad
dec
lcall
mov
push
clc
loop
mov
and
add
or
jne
adc
push
jle
sub
jge
push
or
jl
xchg
fsubrl
inc
and
pop
pop
addr16
outsb
lods
int
jecxz
adc
addr16
mov
cmpsb
lock
xor
popf
dec
mov
stos
test
cltd
inc
xchg
addr16
nop
jns
cli
flds
aad
and
and
mov
xor
or
inc
jne
jp
out
pusha
addr16
xor
push
sti
or
notl
mov
xor
leave
jae
in
movsb
mov
insl
and
or
test
cmpsb
cwtl
in
and
xchg
lcall
mov
mov
mov
aad
add
cmpb
xor
inc
add
mov
cmpsl
sub
xchg
mov
add
cmc
xor
xchg
xor
jne
cmp
cltd
push
das
hlt
dec
xlat
sub
inc
jnp
sbb
sub
and
fildll
loope
sti
jnp
push
popf
out
roll
ss
inc
mov
scas
rclb
das
add
aas
shlb
stos
fs
aam
sub
fwait
and
pop
fstp
inc
xor
pop
out
adc
addr16
fnsave
mov
xchg
aam
jae
xlat
xchg
push
orl
data16
in
mov
mov
shr
lock
lcall
notl
mov
cmp
testl
jb
xchg
in
cmp
dec
adc
and
int3
fisttpl
xor
mov
add
paddb
pop
push
flds
fadds
mov
xchg
dec
ret
sub
mov
sbb
add
sbb
fsts
int3
aaa
stos
xor
fisttpll
icebp
nop
cmp
jns
and
xor
jns
xor
and
sbb
out
mov
mov
and
and
mov
sbb
dec
jae
pop
dec
lret
loop
jno
ss
xchg
sub
loope
or
ss
imul
xrelease
xor
stos
pop
jno
outsb
pop
mov
pop
dec
dec
mov
lcall
leave
inc
cltd
xchg
jmp
inc
rclb
aas
stos
xor
fisubrl
sbb
mov
leave
xchg
inc
jl
and
cmp
cmpxchg
push
push
mov
aam
pop
subb
inc
pop
outsb
shlb
add
hlt
cmpsl
and
imul
dec
bound
cmp
push
xchg
lea
mov
mov
mov
xchg
adc
imul
mov
cmp
adc
add
loope
and
jb
cld
scas
pop
pop
icebp
addr16
stc
in
ffree
adc
jecxz
push
inc
jns
mov
xor
ja
lock
or
addr16
cmpsb
les
adc
pop
mov
inc
ljmp
or
add
mov
add
xchg
xor
jb
add
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
insb
xor
mov
icebp
pusha
addl
mov
jmp
stos
xlat
cmp
fstl
rcll
push
movsb
dec
neg
add
mov
inc
sub
mov
cwtl
add
xor
xor
jle
mov
stos
scas
testl
mov
mov
sbb
adc
mov
adc
mov
sbb
dec
inc
mov
das
loopne
mov
cmp
xchg
inc
fidivrs
jbe
ds
inc
adc
inc
rol
stc
xorl
push
mov
popa
push
adc
notb
and
xchg
cmc
stc
xchg
fimuls
popf
lods
mov
mov
pop
push
sbb
pop
ret
mov
xchg
dec
lock
jne
pusha
ljmp
fwait
sub
sarb
jge
mov
in
or
jb
stc
repz
pusha
adc
and
fiadds
cmp
inc
fimuls
cli
dec
cmp
sahf
testw
pop
pop
adcb
pusha
mov
or
insl
fldcw
push
cli
enter
adc
mov
or
push
mov
adc
mov
ss
out
lea
mov
and
stc
push
xchg
pop
and
cs
in
cs
insb
inc
push
nop
push
mov
int
pop
fldenv
mov
jmp
mov
or
or
jo
xchg
pop
daa
cmp
movsb
sub
ret
sub
sti
icebp
shrb
and
push
mov
xor
dec
ret
rorl
sahf
or
gs
bound
xor
mov
jecxz
ljmp
insb
jmp
cmp
fbstp
mov
ret
mov
pop
mov
mov
ljmp
xchg
sub
and
pop
mov
and
add
mov
rcr
lds
xchg
vpunpckhdq
and
cli
int3
or
mov
pop
iret
mov
xchg
ds
popf
ret
cmp
lods
and
push
cmp
xchg
test
and
rolb
add
das
and
lods
mov
shlb
cltd
add
loop
push
sub
mov
push
xchg
mov
ds
stc
idivb
push
inc
pop
mov
xchg
fs
or
sub
mov
and
cmpl
add
mov
push
fists
imulb
fnstsw
adc
and
out
inc
aaa
xchg
mov
dec
jg
pop
in
rorl
sbb
mov
insl
scas
pop
dec
dec
jne
clc
sbb
aam
jne
xchg
or
fucomi
cmp
push
jne
cmp
pop
inc
sbb
push
out
insb
lcall
icebp
or
xchg
test
mov
add
and
shrl
outsb
cmp
jns
rcl
sbb
imull
stos
clc
mov
push
sub
and
and
xor
cld
sahf
pusha
cmpsl
pop
cmp
lods
clc
inc
xchg
sub
leave
pop
mov
inc
insl
pop
popf
sbb
sahf
or
pop
mov
pushf
js
aad
xchg
inc
pop
mov
sbb
mov
push
jnp
jne
add
mov
cltd
mov
fnstenv
push
aas
loopne
mov
call
push
pop
push
push
dec
mov
mov
adc
pop
je
jne
xchg
jae
or
push
stc
jns
xor
movsb
mov
xor
jp
jns
xor
xor
mov
cmp
out
add
adc
push
repz
test
jns
scas
sub
push
and
push
and
xor
int3
jmp
and
loop
cmc
adc
add
xchg
hlt
cmp
outsb
insl
nop
mov
stos
push
push
push
cmc
aas
and
fiaddl
xchg
inc
nop
mov
add
adc
insl
mov
test
pop
cmova
xor
cmpsb
fimuls
lcall
gs
push
and
sarb
test
jmp
mov
clc
sarl
pop
fimull
in
mov
xor
dec
xchg
xchg
in
clc
loope
stos
roll
into
mov
push
add
sar
addl
pop
mov
adc
insb
fstps
push
push
and
aam
cmpl
mov
and
push
adc
mov
or
mov
and
xchg
fldcw
add
pop
push
lock
cli
xchg
mov
adc
push
outsl
xchg
rolb
cs
jge
pop
adc
insl
xchg
adcl
mov
popf
sbb
fcomip
lret
sub
loopne
or
test
mov
ret
sub
xor
jae
pop
xor
sub
or
pop
movb
mov
mov
sti
mov
daa
push
nop
xor
adc
shl
mov
and
xchg
push
xor
in
sti
das
push
mov
arpl
out
push
or
jge
xchg
jmp
js
mov
test
xor
sahf
sub
fwait
sub
push
popa
cmp
sbb
call
into
jl
push
and
sbb
or
adc
loope
dec
rol
negb
xchg
mov
xchg
dec
dec
sub
ss
inc
test
and
jge
sbb
psllw
sub
cmp
gs
sar
js
insb
mov
ljmp
inc
mov
hlt
adc
movb
fstpt
and
mov
mov
call
sub
fcmovne
cmpsb
mov
cmp
das
bound
std
push
loopne
pop
aam
lds
stos
in
sub
pop
sbb
push
rcl
jg
loope
and
push
popf
int3
stos
scas
mov
inc
in
sbb
mov
aad
sarl
mov
rcrl
loope
divl
test
adc
dec
adc
mov
mov
pop
stos
cli
or
jo
jb
cs
std
xor
shlb
xorb
dec
push
mov
in
mov
pop
sbb
sub
outsb
or
cmp
das
jnp,pt
lret
mov
adc
clc
xchg
loope
in
cli
xor
xchg
jle
xor
lahf
subb
dec
out
jo
sub
mov
jo
in
gs
mov
sbb
jo
in
mov
call
xor
enter
lods
testb
dec
inc
fadd
push
and
inc
cmp
mov
and
pop
push
int
xchg
test
and
push
add
mov
sbb
aad
mov
xor
xchg
bound
add
push
icebp
andl
jle
jmp
dec
fstpt
jo
in
out
dec
xor
pop
and
mov
mov
sub
repz
lock
out
add
call
mov
test
inc
clc
dec
std
xchg
cmp
rcrb
cwtl
jnp
inc
insl
rcl
mov
dec
int
cwtl
inc
add
add
jge
or
jo
adc
jns
push
sbb
mov
xchg
imul
std
xlat
out
cmpsb
and
xchg
and
cld
addr16
jne
mov
stc
or
lds
sub
jnp
scas
dec
mov
jecxz
mov
movsb
daa
pop
jns
loopne
cmc
bound
inc
adc
cmp
push
push
pop
outsb
push
dec
cmp
and
adc
fcmove
cli
loop
aad
push
adc
js
push
sub
adc
or
cmp
fs
mov
incb
mov
dec
test
into
popf
aam
push
int
iret
adc
aad
add
push
lods
sbb
xchg
inc
inc
mov
enter
lods
insb
adc
mov
adc
and
cmpsl
icebp
fsub
jne
in
xchg
adc
pop
jno
adc
std
outsb
es
jp
pop
das
sub
in
enter
imul
pop
arpl
dec
mov
test
add
jg
stos
and
mov
testl
xor
outsl
cmp
pop
add
mov
push
jmp
cmc
int3
jns
xlat
sbb
cmp
mov
das
mov
enter
and
fs
dec
leave
shlb
sbb
sub
dec
data16
xchg
mov
bound
outsb
xor
je
shlb
leave
into
or
repnz
lahf
ljmp
idiv
mov
faddp
or
and
mov
xor
jg
mov
outsb
stc
push
or
int3
mov
mov
repnz
or
int3
stos
dec
out
or
mov
fwait
inc
leave
bound
jo
xor
cmp
loope
xor
jbe
xlat
clc
jle
cs
sahf
or
pop
xor
mov
xchg
daa
cmp
xor
jne
dec
push
xchg
push
xchg
mov
les
push
pop
ja
add
push
stc
movsl
sbb
mov
cld
add
pop
pop
insb
aad
sub
pop
les
fstl
xchg
dec
stos
cwtl
mov
call
hlt
fistps
adc
inc
pop
iret
pop
stos
xlat
xor
ds
testl
stos
or
mov
mov
clc
inc
int
push
dec
ret
daa
cld
les
push
popf
aaa
addr16
cmc
or
sub
retw
jae
nop
leave
sub
into
pop
xor
xchg
jnp
mov
nop
loope
sub
pop
lods
insb
movsl
cld
push
rolb
lds
loopw
pushf
daa
push
pop
pop
adcl
sbb
dec
jo
sarl
mov
mov
les
jnp
ret
mov
mov
pop
daa
mov
sbb
imul
mov
out
cmp
cmp
ss
inc
mov
loopne
aas
into
and
movsl
test
pop
in
push
or
dec
call
mov
sub
subl
push
cmpsl
jp
push
push
and
loopne
mov
faddl
pop
xlat
push
lcall
jl
popa
loopne
pop
hlt
sub
inc
lock
negb
dec
xor
cwtl
into
test
lret
icebp
pop
cmp
pop
sub
mov
imul
ds
iret
leave
loop
mov
jmp
push
mov
aam
add
sbb
pop
xchg
push
or
movsl
inc
adc
dec
xchg
xor
pop
xor
cmpsl
xchg
movsb
cmc
add
std
enter
xchg
sbb
shll
mov
je
jl
sbbb
shll
shrb
mov
jo
les
leave
cmp
decl
push
loope
push
sub
shr
mov
ret
xchg
mov
push
jae
aad
notb
nop
addr16
mov
push
cmp
test
cli
adc
sub
sarl
mov
in
jmp
rorb
xor
sbb
or
aaa
and
jbe
add
cmpsb
adc
and
push
jae
in
out
mov
sub
push
dec
dec
ficompl
and
push
and
outsb
rorl
bound
mov
es
std
das
cwtl
test
pop
and
mov
xor
aam
push
lock
in
hlt
and
subl
fstpt
stc
in
cmp
sbb
mov
and
int3
pushf
xchg
pusha
add
sub
xor
call
pop
mov
pop
cmp
inc
mov
mov
cmp
sti
jae
enter
push
jbe
mov
xchg
movsb
lds
push
pop
inc
sub
pop
jge
push
inc
iret
clc
push
in
jmp
or
repz
xchg
mov
mov
and
fwait
pop
jp
sbb
add
push
andb
jno
clc
lods
jmp
mov
scas
cmpxchg
add
loopne
out
bound
imul
jns
cli
xlat
xchg
mov
xor
inc
andb
pushf
sahf
bound
sub
inc
xor
sbb
mov
comiss
inc
jg
pop
je
loop
xor
inc
or
ljmp
fld
push
fiadds
fiaddl
scas
adc
stos
dec
cmp
out
mov
call
mov
xchg
push
repnz
nop
or
fiaddl
pushf
xor
jge
push
sbbb
pop
movb
and
push
rcr
jecxz
lret
inc
fprem1
dec
adc
ljmp
subl
imul
adcl
sub
push
int3
in
sub
cwtl
into
sbb
xor
dec
out
lds
pusha
fildl
mov
aas
dec
stos
push
mov
sbb
lock
addr16
sub
pop
dec
call
out
dec
jne
pop
fisubrl
loop
sub
ss
xor
inc
sbb
pmulhuw
jns
stos
lods
cmpsb
es
divb
aam
pop
jae
cmpsl
jmp
push
mov
add
push
mov
gs
mov
mov
push
mov
sub
jg
push
push
jg
xchg
mov
jne
fbld
dec
jne
insl
lock
adc
rcl
mov
inc
sub
xchg
inc
pop
bound
mov
xor
mov
sbb
popa
imul
cmp
aaa
add
sub
inc
in
and
sub
xchg
cmp
push
call
fdivrl
xchg
inc
arpl
sub
inc
xchg
divps
aad
xchg
add
sub
push
cli
cmpl
int
test
aas
add
push
push
mov
ljmp
xor
sbb
cwtl
cltd
sub
xchg
ret
xchg
sbb
sbb
jmp
lret
das
pop
pop
iret
mov
outsl
xor
mov
mov
test
cltd
out
and
inc
adc
jecxz
mov
push
repz
pop
adc
icebp
jne
int
clc
fcoml
mov
jp
push
jns
in
aaa
mov
xor
int
or
mov
ret
pop
adc
fildl
repnz
outsl
icebp
insb
shll
xchg
push
andl
pop
nop
or
in
das
das
dec
or
mov
test
sub
xor
scas
outsb
ficompl
ss
fiadds
and
daa
mov
mov
pop
mov
ds
adc
pop
lods
mov
jbe
test
lds
scas
jnp
bound
jecxz
mov
add
fiadds
inc
jnp
dec
repnz
addl
inc
int3
mov
cli
out
push
pushf
xchg
pop
push
push
lods
xchg
jmp
pop
nop
inc
subb
pop
add
subl
ljmp
mov
xchg
cmp
imull
in
inc
adc
fsts
stos
rorb
cs
cmp
pop
mov
lret
test
mov
mov
leave
repnz
pop
das
pop
in
ds
subl
push
adc
and
cmp
pusha
lods
ret
rclb
cwtl
fs
outsl
insl
and
xchg
cmp
pushf
int
sub
mov
inc
xchg
push
xchg
ss
mov
enter
mov
icebp
loope
jns
imul
cwtl
jo
jne
loopne
lods
push
sbb
xchg
jmp
icebp
push
cmc
adc
fnsave
lock
sti
shl
fs
sub
in
jb
rclb
lods
pop
imul
cmpsl
into
test
sti
jnp
xchg
cmpl
int
add
je
clc
lods
shrl
aas
push
mov
sbb
cmpsl
jecxz
sub
lahf
xor
lds
lret
cwtl
repz
jne
sbb
inc
stos
sbb
mov
pop
sbb
lahf
xchg
aam
movsl
aam
fistps
data16
popf
in
mov
test
add
mov
in
lock
fstpl
mov
aaa
push
add
mov
dec
in
ja
stos
jl
adc
sub
mov
sbb
cmpsl
leave
stos
adc
into
leave
sbb
sbb
dec
jle
loopne
stc
les
sahf
out
pop
xor
clc
fs
mov
cmpsb
data16
lret
adc
je
dec
cmp
and
movsb
mov
fdivrl
jae
rclb
fildl
cmp
outsl
mov
scas
cmp
cwtl
stos
push
mov
xlat
xchg
adc
loope
push
jecxz
cmpl
dec
mov
lods
xor
mov
ljmp
std
and
shrb
enter
leave
rcrl
pop
ljmp
jle
or
xchg
out
adc
or
aam
stos
mov
enter
mov
lods
mov
cmpsl
mov
cmpsl
data16
daa
sbb
pop
push
add
ja
sbbl
jge
sar
xchg
mov
xchg
push
pop
mov
outsb
enter
mov
add
dec
xor
push
cmp
repz
jo
jle
xor
insl
stos
pop
out
push
outsl
mov
dec
pop
jo
xchg
xor
popa
push
jp
and
imul
adc
and
andb
sub
test
call
dec
dec
xor
xor
mov
xlat
icebp
inc
mov
jmp
sub
push
or
adc
call
mov
xor
daa
popf
fisubrl
sti
subl
push
cmp
inc
int
adc
arpl
jne
add
pop
ljmp
pop
repz
cmp
xlat
sbb
fnstcw
incl
lods
fildl
aam
ficompl
mov
xor
pop
nop
dec
jo
into
pop
and
sarb
mov
pop
mov
sbb
push
dec
fnstcw
or
inc
inc
test
fidivrs
test
insb
idivl
filds
sahf
inc
insl
xchg
inc
dec
sbb
mov
sbb
nop
or
pop
ret
enter
ds
aaa
mov
push
sarl
mov
mov
sub
xorl
dec
stos
ljmp
and
lret
stos
xchg
sub
sub
push
insb
clc
xor
loope
xchg
loopne
pop
ss
cmp
xor
out
repz
sbb
jmp
sbb
jle
out
and
ds
jae
cltd
push
cli
inc
jns
stc
popa
cmpsl
inc
adc
cmp
js
mov
push
shrl
adc
push
shll
jne
int
shlb
mov
clc
sbb
ja
data16
xor
xor
fimuls
ljmp
mov
imul
sub
std
loope
pop
cmpl
cmpsb
xor
fwait
inc
and
js
aas
outsl
xchg
or
cwtl
xlat
xchg
outsb
inc
sbb
outsl
jge
jg
test
fsubrp
mov
sbb
sbb
dec
push
jg
xchg
push
int
cmp
ja
mov
push
mov
popl
mov
push
les
sbb
jne
add
stos
and
sub
cwtl
cld
pusha
rorb
std
add
xchg
pusha
jnp,pt
insl
fwait
sbb
inc
daa
cld
push
adc
mov
jb
push
imul
mov
adc
mov
ja
lock
pop
out
sub
mov
jb
data16
movsl
or
loop
sbbb
out
rcrl
imul
and
cwtl
pop
and
aaa
loop
xor
add
mov
push
push
out
jno
shlb
loop
dec
dec
xchg
xor
ljmp
rorl
sub
mov
adc
cmc
pop
push
jecxz
in
jge
sub
jmp
stc
adc
mov
adc
je
and
push
xchg
cmp
dec
push
push
inc
mov
lahf
push
add
loop
push
ljmp
or
sbb
and
ret
jae
into
push
push
test
cmp
inc
jp
mov
dec
in
mov
out
adc
add
cmpsb
fs
adc
daa
add
mov
aaa
push
loopne
ret
stos
sub
xor
mov
rcr
or
out
xchg
add
pop
es
cmp
jmp
add
jl
fwait
lods
push
xor
pop
add
jle
jno
and
dec
mov
mov
bound
test
mov
dec
repnz
test
fimuls
enter
mov
mov
pop
aad
les
repnz
out
inc
dec
and
aaa
insb
xor
pushf
shll
push
mov
outsl
mov
cmp
incb
cmp
mov
push
aaa
mov
idiv
iret
loope
cld
mov
dec
push
adc
icebp
repnz
pop
sub
lret
fs
or
nop
and
jle
int
or
test
mov
in
lock
cmp
and
and
sbb
add
cmp
stos
sbb
mov
fldt
aad
push
xchg
dec
push
push
repz
fs
or
mov
ss
ljmp
test
inc
push
mov
push
incl
adc
push
ret
mov
cltd
mov
mov
neg
push
push
add
mov
xor
insb
fidivrs
ljmp
pop
sbb
ret
push
adc
push
roll
lds
sub
mov
push
push
mov
xor
loope
cmp
jae
test
lcall
popa
jle
sub
mov
push
jmp
das
cmpsb
sub
dec
aad
xchg
inc
inc
inc
xchg
les
mov
pop
cmpl
sbb
dec
outsb
clc
mov
js
jmp
inc
add
mov
sbb
pop
rcll
lret
inc
les
iret
mov
jbe
es
adc
mov
testl
push
pop
sbb
xchg
jle
ret
test
lahf
dec
sbbb
outsl
jle
add
es
inc
jno
xor
sub
fdiv
jno
xchg
cltd
ret
push
daa
xchg
clc
ret
sbb
xor
jg
movsl
xor
jne
push
hlt
les
xchg
stos
mov
lock
jp
jmp
scas
xor
mov
jo
call
adc
rep
adc
inc
mov
lret
stc
xor
fdivrl
mov
add
ficomps
jo
push
sub
push
hlt
dec
xor
xor
xchg
cltd
lret
out
iret
aad
hlt
xor
dec
enter
insl
sub
or
mov
lahf
cld
sbb
pushl
leave
inc
or
popf
movsl
arpl
adc
into
push
das
pop
adc
in
pop
push
pop
std
out
fs
pop
mov
inc
cmpsb
push
shl
data16
aas
testl
arpl
xchg
pop
test
sbb
addr16
push
mov
out
mov
sub
test
movsl
sbb
cmpsl
push
xchg
jo
ja
lock
mov
sub
sbb
into
test
cmp
in
sarb
pop
popa
and
sbb
add
xchg
and
cmpsl
fidivrs
imul
in
or
xchg
xor
cmpsb
add
mov
data16
adc
pop
sbb
in
outsb
mov
scas
mov
push
imul
sub
pop
jge
mov
imul
sub
adcl
dec
cli
mov
clc
in
push
in
mov
ljmp
js
out
sub
mov
mov
lods
jne
sbb
mov
ret
mov
arpl
xchg
ror
mov
adc
sbb
sub
dec
xchg
cli
and
fimuls
sbb
inc
adc
data16
cmp
into
insl
notb
jae
mov
fnstcw
mov
xchg
mov
outsl
pop
sbb
cmp
mov
test
push
xor
bound
movsl
inc
sub
lcall
mov
pop
pop
mov
orb
out
push
inc
loop
push
mov
fstp
push
adc
inc
loop
sahf
add
add
loopne
xchg
cmp
stos
jne
fmul
call
xchg
mov
orb
loopne
pop
sbb
popf
shlb
add
test
add
int3
jo
xlat
xor
std
lahf
mov
sbb
xor
adc
xor
xchg
sbb
jmp
out
call
fxch
mov
cmpsl
sub
jmp
push
mov
mov
inc
ret
jae
adc
add
data16
mov
xchg
xlat
or
mov
pop
jp
daa
iret
add
dec
sub
iret
data16
jbe
mov
xor
aad
movsb
outsl
cli
leave
xor
and
iret
sahf
xor
nop
iret
xor
mov
lret
jno
dec
inc
sub
js
mov
pop
ljmp
mov
mov
sub
mov
shrl
hlt
ljmp
out
arpl
dec
int3
leave
cmpsb
bound
int
js
cmp
out
mov
testl
dec
test
jae
clc
mov
fdivp
icebp
mov
xchg
dec
les
and
add
dec
mov
addr16
add
fxch
adc
fs
fnstcw
test
call
pop
pop
sti
xchg
addl
dec
imul
push
cmpsl
testl
je
mov
mov
mov
iret
scas
mov
inc
xor
test
test
out
mov
mov
jmp
sbb
inc
cmp
adc
stos
add
sbb
subl
test
mov
in
add
inc
leave
dec
sbb
stos
out
cmp
mov
rolb
les
enter
or
sub
mov
xor
sub
mov
mov
test
mov
sbb
jae
arpl
loop
adc
outsl
xchg
mov
leave
testl
adc
lahf
loop
rol
rorl
je
test
inc
mov
nop
sti
adc
out
xchg
hlt
cmpsl
mov
jge
fwait
data16
in
cmpsb
cmpsl
mov
ret
aad
mov
push
mov
cmp
pop
xor
in
imul
mov
loope
sub
mov
xchg
xchg
xchg
push
xchg
in
int3
or
in
mov
xlat
mov
mov
jne
or
ja
xchg
push
cmp
in
repnz
push
sub
jmp
push
inc
js
sbb
movsl
xchg
jg
inc
mov
inc
jo
or
xor
gs
imul
pop
or
rcr
pushf
rolb
push
adc
add
clc
pop
mov
sbbb
sbb
sbb
roll
mov
inc
fs
iret
pop
int
rcll
adc
ret
gs
insb
sbb
repz
mov
addl
test
inc
pop
sbb
test
adc
push
outsb
cmp
mov
xchg
mov
or
pop
data16
pop
mov
jle
sahf
dec
adc
xchg
pop
xchg
bound
out
out
push
cltd
cmp
dec
repnz
add
pop
psubw
dec
jg
dec
and
ret
andb
push
push
push
das
push
sbb
lods
jbe
push
scas
adc
xchg
xchg
vcvttps2dq
sahf
mov
xchg
fsts
dec
sbb
dec
stos
gs
or
aam
xlat
mov
lcall
dec
mov
dec
sub
xor
ret
fstp
fmull
les
cmp
int3
mov
mov
push
mov
lock
shr
push
es
sbb
imul
aad
dec
dec
int3
nop
hlt
add
dec
cmp
ds
and
adc
and
fldcw
clc
sub
imul
cltd
in
jle
jno
lret
xchg
push
lret
loop
nop
into
push
mov
stc
and
inc
jne
out
mov
ret
mov
fwait
jl
clc
xor
lahf
mov
jl
jnp
lea
pop
xorl
xor
dec
loope
xlat
mov
sbb
cltd
xlat
fisttpl
inc
and
sahf
sbb
scas
cmc
sbb
and
rcl
clc
mov
jecxz
lods
xor
xchg
mov
xlat
mov
or
xchg
jo
in
jns
outsb
mov
lahf
push
cmc
jp
fst
pop
stc
push
fs
test
daa
movsb
pop
push
mov
dec
call
out
mov
add
bound
ret
scas
sbb
rcll
stc
insl
loop
bound
pop
sub
in
sbb
push
push
in
rcll
sub
push
test
dec
movsb
push
sbb
push
push
mov
es
pop
and
adc
add
mov
fnstcw
pushf
test
push
scas
pop
jecxz
rcr
jb
std
out
aad
idivb
cmpl
push
inc
jmp
icebp
pop
fwait
test
push
movsb
icebp
outsb
inc
xchg
fmuls
imulb
jg
pop
popf
test
jmp
mov
lea
popa
jne
cmp
mov
sbb
call
cld
das
movlps
movsb
aas
or
test
hlt
add
xchg
jnp
ljmp
movsl
add
inc
je
pop
adc
sti
aaa
mov
dec
sbb
es
hlt
sbbl
cmpsl
xlat
inc
out
sarl
dec
jge
enter
jne
rolb
arpl
xlat
or
push
lret
popa
pop
jle
mov
mov
sbb
sub
stos
aad
outsl
mov
aaa
sbb
adc
inc
lods
xchg
mov
pop
cld
mov
std
jae
xchg
mov
sbb
adc
es
sub
lret
xor
fidivl
push
add
leave
iret
inc
test
add
inc
or
cmc
mov
jns
aam
push
mov
pop
je
in
and
sbb
add
jmp
les
lea
jecxz
ds
xchg
mov
in
sbb
mov
xor
dec
sub
jnp
fs
mov
ret
push
xchg
mov
mov
ficoml
or
gs
sub
pop
daa
aam
ja
cmp
or
negl
mov
out
inc
push
cwtl
ss
in
dec
je
fisttpl
loopne
cltd
pop
adc
cmp
cmc
inc
cmpsl
lods
sub
sub
jbe
orl
lods
inc
adc
xlat
mov
pop
bound
mov
inc
clc
mov
cmp
and
hlt
inc
daa
xchg
les
fldcw
shr
cmpsb
in
mov
fs
aam
mov
jle
ret
in
scas
test
lods
lock
gs
sbb
in
cmp
jmp
fsubl
into
lcall
ljmp
hlt
fmull
mov
pop
adc
sbb
and
and
push
imul
ja
out
xor
jb
les
dec
dec
sbb
pop
repnz
dec
js
pushf
xchg
ds
dec
mov
cmp
lock
sbb
mov
push
leave
std
jge
lock
cmp
mov
add
cwtl
or
push
adc
push
insb
stos
sub
lods
pop
ret
pushf
into
pop
or
cmp
mov
shlb
enter
fidivs
xor
adc
es
out
out
pop
and
dec
leave
jp
mov
and
cmp
mov
mov
add
inc
dec
aam
outsl
inc
jnp
inc
hlt
movsb
test
stos
and
add
les
push
pop
shrb
sbb
adcl
jno
xchg
adc
clc
mov
mov
push
stos
xor
into
mov
sub
repnz
jnp
int3
pop
stos
repz
inc
cmpsl
push
shll
xchg
cwtl
aam
hlt
xchg
jbe
aas
pop
push
xchg
paddusb
rcr
in
out
cld
in
xchg
xor
call
inc
jne
imul
mov
inc
add
adc
outsb
loop
push
push
aad
imul
jl
jbe
movl
push
testl
pop
xchg
testl
je
popa
hlt
cmpsl
in
lds
pop
out
jge
mov
mov
push
sbb
lret
push
mov
cld
mov
inc
xor
push
push
pop
jmp
in
mov
or
sub
aaa
jb
mov
rcrb
jae
dec
addr16
pop
or
jns
xor
jle
push
jb
jge
pushf
int
loopne
cmp
es
push
leave
mov
push
fistps
imul
fisubrs
aas
jae
sub
arpl
pop
and
sbb
cmp
loope
pop
ss
idiv
mov
test
adc
or
cs
out
outsl
ret
pop
iret
and
or
add
jo
test
jns
and
sbb
notl
mov
test
int
bound
push
andl
pop
jl
movsb
int3
xor
insb
push
into
lods
out
inc
dec
cs
jg
lret
xchg
outsl
jo
stc
xor
test
push
dec
sub
and
push
in
jno
mov
mov
out
in
insb
and
clc
inc
or
and
adc
dec
sub
xchg
loopne
push
lods
lcall
imul
dec
into
push
mov
mov
inc
cltd
arpl
stos
add
add
add
test
cmp
sti
shlb
arpl
xor
outsl
sub
cmp
in
inc
bndldx
xlat
loop
bound
jmp
jb
imul
arpl
xor
mov
mov
xchg
dec
push
outsl
mov
daa
and
icebp
pop
sti
inc
sbb
out
out
add
push
dec
mov
in
jle
jp
out
xor
jmp
mov
sbb
fs
jb
mov
jae
out
fstl
sbb
cmp
call
dec
inc
adc
xor
mov
jb
mov
inc
jno
jle
sbb
movsl
imul
or
xor
mov
out
out
fucomip
iret
mov
jo
jp
repz
insl
xor
insb
lea
out
jno
fcmovnb
sbb
out
mov
mov
jg
lds
cwtd
mov
jne
pushf
sbb
int3
mov
scas
in
sbb
stos
shlb
inc
mov
popf
insl
repz
gs
cmp
psubsb
and
loop
stos
aaa
adc
pop
inc
and
add
imul
dec
popa
lret
mov
xor
cs
add
cmp
mov
mov
lcall
lods
cmp
push
cmp
mov
ljmp
cltd
shr
lret
lahf
xchg
cmp
addr16
enter
daa
xchg
jge
hlt
or
inc
inc
push
ja
xor
cmpsb
add
aaa
push
movsb
cs
faddl
stc
push
inc
pop
and
adc
out
jl
cmp
je
cld
push
shl
shll
push
mov
jge
jge
or
roll
in
je
rol
mov
mov
jecxz
int3
push
aaa
arpl
dec
pop
fnstcw
push
rolb
xchg
fldcw
inc
int
into
xchg
adc
rclb
mov
inc
mov
ljmp
adc
cmp
dec
mov
enter
jae
ljmp
outsl
pusha
aas
mov
push
dec
test
xchg
iret
pop
andb
loop
enter
add
mov
popf
subl
and
pusha
mov
lds
add
push
and
mov
out
jbe
sahf
sbb
mov
dec
mov
dec
pop
hlt
rclb
mov
push
imul
xor
inc
mov
hlt
xor
idivl
insb
ss
add
movb
push
stos
loopne
shlb
xor
xor
lcall
xchg
dec
sahf
push
adc
cmp
cmp
and
pusha
mov
pop
push
sub
imul
push
ret
adc
push
rclb
mov
cwtl
insl
cmc
pushf
cmc
inc
nop
jmp
sub
push
out
das
cmp
jb
ja
xchg
sub
clc
test
add
data16
xchg
int
dec
push
jge
lds
xchg
lods
lahf
push
leave
cmp
popf
es
ret
xlat
clc
movb
es
dec
clc
shll
lret
nop
out
js
push
test
jge
fdivp
test
sbb
in
in
mov
rorb
std
cwtl
ja
adc
test
cs
mov
loop
call
mov
fistpl
aam
bound
mov
cmp
cmp
mov
mov
addr16
xor
out
pop
mov
dec
push
mov
or
int3
xchg
scas
aam
mov
or
cmp
cmp
clc
fidivl
mov
jne
mov
test
mov
mov
fldl
add
dec
std
loop
dec
repnz
xor
xor
xlat
lret
lods
pop
insl
jae
sbb
call
ds
popf
xor
jo
sub
fwait
test
or
jp
xchg
movsb
mov
aas
xor
push
cmpsl
and
fstl
push
jmp
adc
or
sbb
jno
sbb
sbb
test
icebp
jo
xchg
lcall
cli
push
stos
xchg
mov
call
inc
rolb
cmp
xor
jb
shlb
pusha
adc
add
sarb
and
lahf
or
mov
jg
push
fistpll
in
mov
popf
cld
in
fimuls
mov
pop
add
cs
fs
push
lret
push
dec
sti
movsb
fdivp
je
jb
mov
ss
cmpsb
xor
push
dec
dec
mov
push
jns
lahf
jnp
cld
mov
or
mov
scas
cmc
mov
std
fucomi
mov
test
xor
jnp
lret
lahf
rcll
lock
sar
subb
sub
stc
hlt
and
xchg
rcrl
mov
mov
mov
adc
sbb
mov
inc
dec
icebp
inc
into
orl
fucomip
lock
ds
sbb
shlb
loope
inc
xchg
popa
popf
xchg
adc
push
fimuls
lcall
lahf
and
outsl
inc
mov
lahf
adc
jle
adc
fwait
mov
xor
cmp
enter
js
sub
and
mov
sbb
inc
sbb
sbb
mov
ret
add
aaa
nop
in
sbbb
faddl
mov
mov
sbb
mov
cwtl
lds
or
sbbb
xor
add
xchg
call
test
pop
fidivrs
popa
negl
pusha
paddb
jns
mov
outsl
pop
js
les
add
pusha
and
mov
dec
in
and
movb
shl
incw
leave
aad
fwait
jp
insb
sbb
sub
cmp
push
dec
jae
sub
push
jnp
in
ret
mov
mov
out
inc
add
mull
and
icebp
lock
std
in
push
jmp
pop
outsb
push
orl
hlt
arpl
and
imul
inc
mov
js
or
sbb
lods
leave
test
fxch
lahf
jo
test
sbb
xchg
test
cltd
notl
fs
xchg
test
mov
xor
pop
adc
daa
xor
ja
in
or
jnp
gs
cmp
fsub
xlat
xor
cmp
xor
test
cmp
lods
pop
sub
or
imul
adc
sub
or
mov
cmc
fcompl
push
mov
mov
subb
adc
sysexit
mov
test
push
loop
adc
test
xchg
imul
mov
cld
mov
adc
push
mov
push
sub
mov
rcrb
sbb
xchg
dec
inc
sbbb
xchg
add
div
or
mov
cltd
out
mov
jns
sahf
mov
cmp
in
lret
pop
pop
pop
and
shlb
in
nop
adc
bound
lcall
sarl
cli
fucomip
aad
or
ss
fwait
inc
jne
adc
movsl
pop
aas
loopne
ljmp
jge
hlt
dec
push
or
pop
xchg
push
mov
rcll
mov
lret
iret
rclb
lock
sahf
dec
loope
xchg
adcl
mov
xor
jl
dec
imul
pop
xor
mov
or
in
xchg
jp
lret
push
lahf
rorl
cmpsl
sbb
iret
cmp
das
inc
lret
rorl
dec
mov
enter
mov
scas
cmp
or
cmc
sahf
mov
movsb
add
or
jno
cmp
fnstenv
adc
cmpb
fbstp
cmpsb
outsb
push
or
lcall
popf
sub
xor
mov
xchg
and
iret
push
lret
xor
inc
or
jmp
mov
mov
or
mov
adc
jbe
shrl
andb
sub
lds
xor
inc
enter
jne
fistl
cmp
push
mov
call
pusha
mov
cwtl
shlb
xlat
xlat
jge
cwtl
dec
pushf
movsb
or
mov
loopne
cmp
cld
sbb
pop
in
daa
adc
pusha
jp
add
in
sbb
jo
jmp
int
dec
out
push
test
repnz
jnp
ret
jno
adc
popf
das
mov
lar
ffreep
fildll
and
pop
push
sub
std
dec
test
cmp
sub
dec
test
mov
fisubl
stos
xor
add
push
mov
test
mov
pop
inc
ficoms
adcl
xor
imul
inc
stos
insb
scas
repz
or
add
call
out
int
divb
mov
inc
or
add
dec
mov
je
ja
mov
stos
scas
insb
lcall
cli
and
rcl
loopne
inc
mov
cli
adc
sbb
in
or
sub
test
and
dec
rcll
or
repnz
hlt
fiadds
and
sahf
push
cld
adc
lds
out
outsb
nop
cs
gs
test
jmp
stos
in
call
push
inc
sub
add
lock
mov
sahf
icebp
loopne
sbb
lods
dec
xchg
and
mov
mov
test
xchg
shrb
pop
lods
data16
dec
jecxz
daa
lcall
enter
cld
in
cli
insl
lock
cwtl
push
scas
test
fimull
pop
xchg
lret
movsb
hlt
push
aas
je
and
cwtl
cmpsb
movsb
push
push
out
jbe
cmpsb
cmpsb
daa
dec
cmp
dec
les
data16
popf
inc
add
push
cmp
and
adc
inc
jp
add
add
jae
mov
bound
lcall
add
psllq
ljmp
mov
sti
cwtl
mov
sahf
sub
mov
data16
sub
mov
hlt
inc
rcr
popa
jns,pn
in
std
imul
sti
insl
pop
fcmovu
jmp
sahf
out
jl
add
sub
lods
test
pop
dec
mov
push
shlb
xor
push
filds
stos
dec
adcl
pushf
popa
push
push
xchg
xor
stc
repz
pop
data16
cmp
jb
imul
outsl
inc
add
outsl
dec
insl
mov
cwtl
scas
mov
push
jbe
es
pop
lcall
fwait
adc
arpl
nop
lods
fmull
test
leave
aaa
add
gs
add
cmc
pop
mov
int
xchg
in
je
aam
outsb
lea
hlt
mov
popf
cmp
and
push
icebp
mov
cmp
scas
fidivl
sbb
js
and
movsw
mov
lahf
pop
in
mov
adc
nop
dec
nop
and
sub
outsl
lea
stos
push
out
aam
fnstcw
or
xor
add
pop
rclb
cltd
ss
fwait
sub
pop
jbe
stc
addr16
rorb
xor
dec
arpl
mov
jecxz
add
sbb
sbb
push
out
cmc
sbb
add
mov
sbb
sub
jl
jg
jno
outsb
ljmp
lods
push
fcmovnu
in
inc
inc
lret
stos
stos
jp
iret
mov
xor
fisubs
daa
je
pusha
sbb
or
cmpsb
pop
xor
adc
ljmp
lods
int
mov
mov
jae
mov
call
push
jb
jne
mov
ljmp
pcmpeqb
jle
pop
data16
mov
stos
inc
rclb
xorb
outsb
les
test
insb
sbb
aas
mov
cmpsl
mov
jne
nop
mov
addb
push
scas
cli
aaa
test
fwait
enter
jmp
inc
xchg
fwait
mov
xor
rcl
jns
xchg
mov
xor
imul
aam
pop
mov
std
test
jle
fucomp
cmp
jg
push
js
add
adc
js
or
pop
fsts
imul
test
or
dec
cli
add
xlat
or
fs
addl
mov
pop
sbb
out
xchg
inc
sub
mov
test
movsb
mov
shll
mov
xlat
popf
lret
repz
in
lcall
shrb
sbb
aas
xor
mov
adc
jmp
xor
and
inc
fcmovnb
lret
mov
sub
add
inc
stos
push
mov
adc
in
mov
jp
or
aam
xlat
push
aam
cwtl
outsb
or
imul
push
imull
cli
in
adc
daa
xor
mov
cld
add
int
in
pop
mulb
les
roll
sbb
in
in
scas
mov
mov
dec
xchg
inc
shrb
dec
addr16
mov
ret
rorb
rol
adc
and
jnp
push
bound
push
sub
and
or
aam
sbb
inc
or
scas
adc
dec
leave
inc
mov
mov
mov
ret
sub
xchg
insb
mov
sbb
aaa
cmpsl
xlat
divb
in
cmpsl
push
test
stos
jno
and
lds
adc
ds
sarb
sub
xor
nop
inc
cwtl
push
insl
lcall
sub
sub
adc
js
cmc
jp
adc
lret
sub
andb
add
mov
xchg
lahf
xor
mov
cvtps2pi
ror
jb
jge
xchg
mov
enter
xchg
mov
inc
dec
or
cmp
xchg
subl
xor
push
and
lss
das
adc
aam
arpl
push
pop
cld
js
jmp
mov
cmc
sub
xlat
pop
jne
jnp
push
insl
sarb
pop
stos
insl
adc
add
nop
push
fcomip
mov
mov
mov
push
cwtl
loopne
outsl
xlat
lahf
mov
or
shrl
popf
insb
fcomip
vcvtdq2ps
fwait
lcall
leave
mov
popl
mov
into
adc
loop
inc
and
into
outsl
scas
gs
rcrb
loopne
push
sbb
shll
pop
movaps
adc
addl
mov
mov
out
shl
aad
push
in
sub
jecxz
jl
xor
add
mov
pop
dec
or
divl
test
add
or
sub
inc
sti
dec
je
cmpsl
nop
shrb
sahf
fdivrs
shlb
and
inc
fwait
jbe
cmp
and
mov
mov
lods
mov
dec
rcrb
xor
orb
fcoms
fnstenv
pop
adc
sub
lret
pop
testb
gs
xchg
sti
stos
inc
adc
call
pushl
or
push
je
xchg
lds
mov
leave
push
xchg
or
inc
ljmp
xor
jl
cmp
pop
xor
push
cmp
mov
dec
push
rcrl
test
mov
fs
pop
xor
or
imul
lret
aam
jns
cmp
sarl
mov
push
aad
jge
dec
pushf
xor
adc
rcrb
push
inc
cmp
pusha
sub
mov
outsl
lods
mov
mov
add
stc
in
out
jle
push
mov
jge
push
mov
push
mov
push
fsubp
and
hlt
int3
dec
mov
dec
xchg
add
rclb
or
lea
xchg
pop
in
sahf
xchg
and
loop
ror
jb
add
xchg
and
stc
repz
lods
mov
and
mov
push
test
mov
mov
cmp
out
jb
icebp
out
mov
cmp
mov
xchg
xor
shlb
loope
fs
test
in
dec
dec
arpl
std
jae
mov
dec
add
out
outsb
cmp
jle
dec
jmp
and
shr
ss
arpl
bound
pop
mov
or
mov
fsubrs
inc
fwait
ljmp
int3
insl
ficompl
sub
xchg
lock
lods
movsl
into
mov
jge
fsubr
and
xor
fwait
mov
icebp
movsl
fnop
add
les
mov
add
movsb
jb
in
sub
nop
ja
cmp
loop
stc
jmp
inc
adc
jecxz
dec
popf
aam
out
repz
mov
sbb
sub
and
idivb
inc
fsubl
repz
fdivrp
xorb
stos
loope
lret
inc
fidivrl
enter
les
shll
adcl
mov
xchg
sbb
mov
push
call
cmpb
out
stc
pop
gs
fld
cli
pop
and
enter
inc
xchg
add
pop
adc
dec
call
loopne
xlat
pop
in
sbb
lock
adc
cmp
push
sub
filds
rolb
nop
es
repz
cmpsb
test
push
sub
sbb
dec
loope
outsl
mov
mov
xor
xlat
pop
jno
in
aad
xlat
mov
aad
imul
cmp
cmp
pushf
push
inc
test
das
loope
ds
sbb
mov
mov
mov
bound
int3
cmp
fimuls
cmpsl
xchg
aaa
imul
movsb
jb
cld
inc
leave
std
in
pop
jp
das
push
cld
jno
jle
sub
outsl
mov
xorb
adc
pop
dec
mov
or
mov
test
add
cmp
jno
rclb
jnp
or
mov
mov
inc
sbbl
xchg
push
xchg
stc
sti
fxch
fildl
jo
in
roll
cmpxchg
mov
fisttps
ljmp
enter
shrb
fs
pop
xor
and
mov
mov
mov
in
and
jo
xchg
xchg
out
sub
jle
mov
sub
add
inc
arpl
lret
mov
fs
xlat
xor
in
jl
clc
mul
and
jne
cmp
in
lahf
cli
pop
outsb
adcb
and
lods
ds
ret
or
ret
test
insb
ljmp
jecxz
push
fucomi
jecxz
pop
push
arpl
mov
xchg
sbb
test
sbb
lret
mov
mov
iret
cmc
jmp
sbb
dec
sub
cmpsl
mov
mov
xor
push
add
mov
xor
ja
cmpsl
sub
dec
shl
hlt
js
mov
add
pop
jo
ficompl
cmpsl
out
ljmp
sbb
fbstp
lret
gs
repz
mov
fsubrs
mov
outsl
int
sub
xchg
or
out
jo
xor
and
mov
push
pop
notl
fbld
xchg
sbb
fldcw
jle
mov
jmp
mov
inc
rcrb
inc
sub
getsec
lret
xchg
lea
jl
movsl
aaa
cs
out
out
push
push
insb
jns
push
imul
scas
popf
in
icebp
pusha
pop
sub
lods
daa
subl
shlb
mov
and
or
aad
dec
mov
mov
dec
and
cmpb
mov
ljmp
lahf
mov
lock
and
pop
iret
mov
adc
push
mov
cwtl
dec
out
jge
cld
mov
adc
lods
mov
push
pop
sbb
fwait
add
movsl
dec
stc
adc
pop
mov
insl
iret
pop
jmp
leave
ret
mov
pop
xlat
adc
xchg
adc
xor
bswap
lahf
xor
sahf
sti
and
push
mov
insw
int3
sbb
test
cmpsb
test
jbe
dec
pop
xchg
mov
insb
notb
pop
inc
cmp
sbb
mov
fistl
out
stos
aad
hlt
xor
ror
cld
pop
push
popa
sub
pop
xchg
clc
mov
push
fcomps
nop
adc
outsl
jbe
pop
out
shr
int3
scas
sub
mov
cmpl
frstor
loope
aad
ljmp
inc
cmp
out
mov
mull
mov
xchg
push
cmp
lea
sbb
rolb
hlt
dec
mov
add
movsl
fsub
dec
sbb
cmp
and
pop
popa
or
jmp
xor
pop
push
inc
cmp
inc
into
int3
loope
dec
cltd
pusha
loop
mov
pop
lea
jae
or
out
out
enter
out
push
ret
insb
dec
jmp
cmp
push
pop
mov
add
fistps
fdivrl
add
or
pusha
xor
xor
fmul
jmp
lods
mov
ret
movsb
int
pop
add
xchg
test
pop
add
cmp
or
out
out
xchg
lret
pop
mov
dec
les
jl
mov
mov
cmc
imul
bound
inc
xchg
js
leave
sub
cmp
fildll
pop
cmp
rcrb
int
pop
jl
sbb
out
pushf
test
addr16
and
aas
xlat
or
test
and
mov
dec
mov
addr16
lret
cmc
jbe
call
add
adc
inc
ret
mov
xor
faddl
fcomp
jnp
lds
pop
inc
and
out
mov
pop
lods
lods
subb
xchg
inc
ret
pop
cmpsl
jecxz
mov
push
xchg
mov
repz
jecxz
lret
in
adc
cmpsl
xlat
mov
in
lcall
nop
pop
sbb
add
stos
pop
popa
mov
fidivrs
inc
inc
sti
insb
inc
ljmp
subb
add
or
int3
adc
cwtl
pop
mov
in
jbe
push
cmp
clc
int
xor
xor
sub
cmp
pop
or
ja
cmpsl
pop
mov
inc
mov
rorb
lahf
fidivrl
xor
pop
mov
fistpll
mov
mov
insl
jbe
jo
clc
cltd
insb
cmp
mov
es
and
mov
mov
cmp
dec
fcmovne
mov
fcmovnbe
mov
lret
in
pusha
popf
pop
pop
cs
jp
je
mov
inc
int3
sti
rorl
mov
testl
out
and
dec
xchg
inc
mov
lods
imul
xchg
sub
mov
pusha
xchg
stos
xor
mov
add
fsubrp
or
mov
out
lcall
and
sub
sub
loope
adc
imul
pop
fwait
push
movsl
mov
lret
daa
and
lret
rcrb
sarl
outsb
fidivl
leave
andb
xchg
aaa
mov
pop
inc
pop
mov
dec
outsl
mov
aam
sti
push
movl
ret
in
test
push
lret
jp
fwait
adc
enter
mov
or
and
lret
mov
imull
push
ret
sbb
add
push
dec
mov
dec
mov
cltd
xchg
call
cmp
enter
push
nop
adc
incb
jae
and
sbb
sbbb
lods
test
cmp
dec
add
rolb
jne
sbb
lea
inc
out
loopne
add
xlat
outsl
popf
sbb
inc
mov
pop
push
shrl
out
int3
xchg
in
testl
aaa
mov
sub
cli
inc
loop
gs
cwtl
lret
cmpsl
lock
rorb
mov
in
ret
mov
int3
mov
ljmp
mov
pop
out
inc
rcrl
xor
cltd
sbbb
cmp
mov
fidivs
data16
add
push
or
xorb
sub
add
adc
test
cli
shlb
sbb
ljmp
xchg
cmp
subl
adc
pop
xor
nop
adc
cld
mov
iret
fistl
frstor
pushf
imul
inc
cmp
mov
mov
dec
dec
lahf
xchg
add
jb
jnp
jno
ret
call
in
adcb
dec
in
lods
mov
add
sbb
push
shl
xor
les
in
push
sbb
ret
arpl
push
mov
mov
das
jno
push
sbb
int
test
test
push
les
cmpl
pop
pop
jno
jns
dec
or
mov
rcl
rcll
xchg
push
scas
pusha
jle
les
aas
leave
sub
mov
aaa
nop
jle
jl
out
stc
in
int3
jmp
testl
cmpsb
sub
aas
xchg
sbb
cmpsl
cli
push
shll
cltd
dec
cld
mov
mov
scas
bound
add
sbb
or
mov
leave
rcl
clc
add
loop
lcall
out
mov
jge
movsb
outsb
mov
notb
test
leave
dec
adc
mov
out
mov
pop
xor
mov
sub
jb
jb
movsb
and
sub
and
in
jo
outsl
pop
cmp
cs
lods
inc
sbb
and
xor
arpl
aam
insb
pop
je
cli
or
cmp
stos
movsb
add
movl
xchg
sub
jp
add
sbb
jnp
mov
out
or
fadds
sub
mov
mov
lock
jmp
sbb
push
andl
jo
lock
sahf
mov
mov
imul
push
xor
lahf
in
out
gs
xchg
movsb
jnp
lcall
or
ret
sarl
movsb
push
pop
rorb
and
pop
or
mov
enter
mov
mov
xchg
add
cli
cmp
jmp
sbb
aad
adcl
and
xor
jo
inc
mov
push
inc
bound
jl
les
mov
cmp
popl
pop
inc
mov
sbb
int3
push
into
movsl
jb
notb
mov
sub
out
nop
mul
iret
sbb
cmpsb
dec
mov
pop
ftst
and
cmpsb
les
les
xchg
hlt
fcoml
fucomi
enter
ret
inc
gs
rcrl
mov
push
cmpsb
xchg
mov
hlt
sub
mov
repz
mov
je
mov
aam
sbb
outsl
pop
cmp
mov
cli
popf
ss
mov
add
and
push
and
and
repnz
into
sub
inc
xchg
inc
push
stos
mov
pop
repz
ss
addr16
dec
sbb
popf
dec
mov
jb
stos
es
sbb
mov
imul
ret
js
fidivrl
xor
ret
dec
sub
cmpsb
mov
cmp
js
add
cwtl
jb
sti
mov
add
and
retw
loop
inc
in
insl
jb
ret
xor
lds
mov
and
jnp
sbb
hlt
shll
dec
pop
mov
scas
push
push
movsl
lcall
cmc
xchg
mov
and
sbb
mov
sbb
call
idivb
adc
aam
insl
mov
fsincos
mov
aad
push
dec
lcall
test
popf
jmp
imul
xor
dec
pop
mov
stos
cli
push
sahf
ds
movsb
es
pushf
mov
sub
pop
repnz
bound
xor
cmp
outsb
dec
idiv
inc
test
push
leave
mov
mov
or
or
ret
imul
jp
shr
fs
arpl
push
mov
and
add
aam
mov
iret
loopne
daa
jp
mov
pop
xor
dec
lret
mov
or
lea
dec
push
lahf
mov
and
fstpt
push
dec
bound
stos
sbb
mov
jae
sbb
mov
xor
movsb
loope
clc
es
cmp
and
mov
dec
movsb
pusha
sbb
lds
fsubrp
imul
or
xor
out
ja
jbe
pop
cmp
imul
gs
jno
enter
dec
cmpb
inc
lods
inc
lret
jecxz
test
data16
lret
push
ret
rclb
in
sbb
lods
stc
mov
jge
inc
mov
in
mov
inc
add
dec
addw
push
fwait
lock
adc
dec
mov
inc
inc
pop
or
xor
mov
in
rcl
in
pop
imul
jle
cld
clc
out
add
pop
addr16
inc
shlb
pop
fcmovne
push
fs
add
int3
pop
inc
mov
mov
cmp
sub
lahf
or
pop
sbb
xor
ret
mov
sbb
test
cmp
loope
push
je
lods
mov
sub
inc
xor
push
jnp
mov
and
lahf
jno
out
in
sbbl
cmp
push
sub
mov
fsub
outsb
and
negl
cli
test
nop
iret
sbb
xlat
test
shll
sub
aam
pop
mov
adc
mov
gs
insl
fs
fldt
cmp
inc
mov
sbb
popaw
loop
test
inc
add
sbb
outsb
push
pop
cmpsl
add
jl
fwait
jnp
aas
dec
sub
cmp
push
testl
stc
or
inc
int3
test
mov
imul
movsb
ds
arpl
pop
mov
pop
cltd
push
movsl
aam
andb
lock
inc
pusha
icebp
mov
movsl
enter
adc
adc
ja
in
dec
pop
pop
push
orl
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
stos
pop
pop
addl
je
stos
test
push
mov
test
inc
add
in
xor
jne
sbb
dec
leave
pop
cmp
aad
cmp
mov
mov
lock
pop
jl
xor
jo
inc
sub
push
inc
adc
add
testl
push
pop
mov
pusha
xchg
out
and
mov
cltd
or
lods
and
xchg
shrl
sbb
insl
fcmovu
mov
mov
adc
cmp
inc
mov
lret
das
lret
mov
sbbl
call
sahf
mov
incl
scas
pop
mov
dec
mov
inc
out
pop
add
pushf
lods
pop
cmc
mov
stos
xchg
test
arpl
cwtl
jmp
fwait
subb
cld
in
push
movsb
mov
fidivrs
repnz
xor
mov
jnp
xchg
rorb
insb
lcall
jecxz
add
in
dec
lahf
or
mov
xchg
mov
jge
mov
out
pushf
in
xor
mov
xlat
mov
inc
mov
jno
sti
pop
xchg
cmp
sbb
sarb
enter
inc
add
mov
aad
lock
icebp
mov
push
stos
dec
loopne
stos
adc
sub
pushf
sbb
lea
test
in
mov
aad
cmpsl
dec
js
in
stos
cmp
or
dec
mov
xchg
jo
imul
or
inc
push
cli
adc
and
bound
mov
xchg
std
xchg
xor
or
mov
int
aas
or
mov
test
hlt
gs
aas
or
cmp
xchg
shr
add
pop
pop
shrl
int3
mov
and
enter
jge
in
push
lds
subb
in
push
add
out
lret
aad
mov
pop
ret
test
cmc
fcoms
ret
pop
mov
sbb
push
push
mov
cmp
xor
stc
mov
push
mov
push
dec
inc
ret
xorb
lcall
add
dec
js
daa
cmpsl
sub
xchg
pop
movsb
or
add
and
scas
pop
push
jle
iret
xor
aam
jne
inc
ja
and
sbb
sub
data16
mov
mov
jge
cmp
test
ds
in
push
sub
fwait
xchg
cmpsb
and
mov
mov
rcrb
lods
in
jno
mov
aas
cwtl
mov
in
in
sub
subl
pop
jle
mov
pop
mov
idiv
cld
iret
or
scas
pop
popa
icebp
cmpsb
dec
js
out
jg
addr16
sub
and
pop
or
cld
leave
mov
or
sti
int3
lods
mov
pop
repz
ljmp
xchg
repz
repz
sbbl
mov
sub
je
test
mov
aaa
lahf
cltd
fsubl
xor
out
lahf
pop
cmpsb
stos
jge
or
sub
mov
inc
rolb
popa
test
or
rorb
js
jmp
mov
mov
xchg
insl
cltd
divl
orl
cltd
inc
in
call
fsub
inc
pop
adc
cli
sub
fistps
scas
lock
rcrb
and
dec
or
pusha
out
push
pop
xchg
test
loopne
movsb
clc
lret
dec
int
test
int
jg
jecxz
test
dec
out
in
jle
xor
fsubs
or
movsl
mov
shll
xchg
hlt
push
notb
cs
shr
jp
cmp
xchg
cmp
ss
xchg
xor
dec
adc
setnp
rclb
pop
mul
xchg
and
shll
mov
icebp
cltd
lods
sbb
sbb
dec
ficoml
jns
xchg
inc
mov
sti
imul
add
mov
sbb
mov
insb
and
add
outsl
insb
mov
xchg
lahf
xor
push
in
sarb
inc
xchg
or
jg
orb
gs
jb
jmp
enter
add
push
mov
iret
pop
push
xchg
lods
pop
shll
mov
out
adc
mov
jp
inc
div
cli
pop
jno
scas
mov
mov
push
in
push
and
xchg
push
mov
jnp
rcl
addr16
ret
rcl
xor
push
mov
mov
mov
rol
imul
dec
out
dec
cltd
xchg
xlat
inc
sbb
aas
adc
adc
push
mov
popa
outsb
in
sub
fadd
mov
lock
ja
pop
test
aad
rorl
jno
dec
fs
push
lods
lea
and
adc
push
lock
sti
pop
cmp
loop
inc
ror
add
pop
push
dec
movsl
pcmpgtd
lret
jno
push
lods
or
mov
mov
sahf
jmp
rcll
xor
jmp
jmp
addr16
in
nop
lahf
rol
imul
push
mov
xor
inc
fdivs
xor
mov
repz
adc
out
pop
popa
push
sbb
pushf
test
popa
mov
outsb
jno
vorps
mov
aam
movsl
stc
insb
cli
ds
xchg
jo
in
sbb
cmc
sarb
imul
jno
push
stos
ljmp
jno
fs
dec
cld
adc
call
or
xorb
dec
pop
xchg
fs
movsl
fwait
dec
fidivs
sarl
adc
cli
push
dec
mov
and
popf
orl
test
inc
xor
iret
out
adc
fistps
inc
das
ljmp
mov
leave
js
inc
xor
xor
loop
or
mov
insb
cmp
out
nop
test
cwtl
jo
pop
testl
push
inc
stc
pop
jae
sub
iret
sti
xchg
es
ror
int3
lods
sub
pop
scas
mov
mov
and
cmp
xor
adc
mov
mov
xor
sbb
cmp
mov
mov
cmc
fcoms
xchg
adc
xor
jb
xchg
inc
fstpt
add
mov
push
addr16
pop
mov
cmp
mov
adc
clc
add
loopne
test
out
call
popf
movsb
aaa
stc
cmp
aad
nop
pop
inc
sbb
push
jno
jmp
cli
jecxz
cmc
addr16
jo
pop
sub
dec
ds
mov
lahf
pop
cld
sub
push
out
cli
test
test
push
mov
mov
int3
dec
les
ds
cmp
push
shrb
loopne
lds
sbb
pop
das
lds
push
pop
sahf
pop
sub
fnstcw
sbb
push
mov
outsb
leave
je
mov
sbbb
and
rcrb
mov
pusha
ror
movsl
sbb
sbb
cmp
add
iret
bound
adc
pop
mov
sbb
push
mov
xchg
call
mov
imul
xor
mov
jne
in
sahf
pop
dec
mov
jbe
pop
xor
xchg
dec
sbb
sub
add
xor
pop
or
cmp
cmp
pusha
push
mov
daa
add
push
push
pop
lock
dec
xor
adc
addb
bound
sti
push
shll
mov
xchg
jo
out
lret
mov
sub
adc
add
insb
loopne
aas
or
and
test
pop
pop
in
shll
push
push
push
testb
pop
sti
frstor
mov
mov
test
push
jmp
test
sub
sub
cmp
test
sti
pop
mov
repz
pusha
jb
push
cltd
test
aas
jns
out
jecxz
and
or
mov
test
rcrl
jae
xchg
fmul
jg
outsb
pop
inc
call
sbb
sub
ja
push
outsl
mov
stc
inc
jns
leave
and
out
movsb
xchg
sub
out
jne
aam
push
fwait
sbb
push
pop
es
outsb
je
es
fidivl
in
jl
sbb
xor
cmc
ret
loop
stos
lret
bound
jmp
xlat
in
fimull
pop
jmp
cmp
notb
stos
fsubrl
add
sbb
xor
inc
inc
nop
add
stc
push
mov
xlat
bound
scas
rcrb
leave
cmc
mov
aad
call
pop
inc
adc
int
push
outsl
lods
mov
push
out
xor
adc
mov
push
pusha
jbe
fcom
in
pop
into
icebp
dec
mov
adc
fwait
jle
pop
loop
fdivrl
mov
push
push
paddusw
and
movsl
pop
arpl
std
sub
push
push
jmp
push
push
popf
movl
test
pop
stos
fdivrs
pusha
and
ljmp
mov
popa
xor
fsubs
repnz
insb
adc
out
xchg
dec
push
cmp
data16
mov
fiaddl
jp
xchg
jne
cmc
fwait
adc
cld
mov
or
jl
push
adc
btc
mov
jge
push
jge
xchg
pop
loope
inc
lret
insb
push
test
xchg
xchg
test
popa
mov
sub
std
add
jg
xor
xlat
add
dec
fldenv
jecxz
mov
push
ret
push
jb
sbb
dec
mov
push
pushf
push
sets
dec
pop
adc
in
stc
sub
pop
or
mov
mov
adc
dec
cmp
mov
mov
imul
or
iret
sub
push
add
inc
stos
pop
sub
outsl
icebp
cmc
xchg
dec
xor
inc
ret
jb
jp
repz
mov
mov
adc
stos
cs
fwait
mov
dec
mov
push
aaa
and
pop
jo
lea
push
xor
shrl
dec
cld
pop
notl
push
js
jnp
adc
dec
negl
fs
mov
dec
std
fstpt
pop
pop
jno
mov
rcll
in
mov
sbb
loope
fs
in
je
ds
fdivp
cmp
jp
lcall
cltd
test
pop
cmpsl
xor
ss
mov
push
dec
mov
adc
add
dec
orl
mov
les
icebp
cmpsl
cs
jo
addr16
or
jbe
mov
pop
cmp
adc
push
idivb
dec
jecxz
lahf
sub
data16
test
pop
cmpsl
insl
ret
inc
mov
inc
inc
es
jnp
push
je
xchg
into
cmp
jb
mov
pop
sahf
push
fisttpl
bound
push
pop
jmp
sbb
lds
push
outsb
xor
lods
and
repnz
mov
lods
imull
pop
mov
pop
cmp
adc
mov
sub
or
movsb
test
and
aas
addr16
pushw
jno
cmpsb
sbb
mov
arpl
testl
iret
push
xchg
loop
xchg
ljmp
and
cmp
or
aas
fists
and
inc
aad
mov
cmc
push
scas
shrb
pop
daa
call
mov
mov
cltd
int3
adc
insl
ja
xchg
fdivl
iret
and
incl
shlb
lock
nop
rcl
out
lods
mov
fidivl
cmp
repz
lods
addr16
out
sti
push
cmc
sbb
push
into
das
leave
popf
inc
int3
push
aaa
je
dec
mov
add
sbb
jge
sbb
out
mov
out
je
inc
sub
ret
sub
bound
into
sub
movsl
xor
sub
and
xchg
jmp
inc
pop
cltd
aam
lods
and
xor
les
lods
out
and
aas
xchg
and
imul
adc
sbb
iret
sub
xchg
lret
fidivrs
imul
fistl
fiadds
jno
test
popl
pushf
fucomp
jge
jnp
mov
push
add
mov
push
stos
inc
les
jge
xchg
mov
out
sub
gs
jle
mov
mov
and
xchg
addr16
lret
push
enter
ljmp
sbb
pop
sub
mov
xor
or
and
fistpll
loop
xor
jae
stc
adc
cmp
inc
push
mov
hlt
dec
loopne
add
outsb
sbb
xchg
jbe
bound
or
mov
jge
jle
lods
mov
jnp
mov
cmp
xchg
orl
pop
into
cmpsb
mov
das
fcmovnbe
mov
neg
push
idivb
sub
inc
jae
add
add
or
je
andl
adc
mov
cmp
lcall
sub
xor
shll
jmp
in
and
scas
cmpsl
out
in
mov
mov
gs
in
or
stos
mov
jle
je
push
xchg
xor
imul
inc
inc
test
leave
sub
mov
push
cli
sub
xor
xor
mov
in
aaa
lods
mov
sub
dec
loop
push
in
mov
push
fldl
mov
pop
mov
push
arpl
cld
xor
shl
ds
add
lea
inc
add
push
sub
sub
dec
push
scas
sub
push
push
sbb
inc
xorl
ret
lods
or
div
loope
fsubs
pop
push
adc
and
in
test
in
mov
lods
inc
jbe
sub
shll
jg
mov
push
lcall
lcall
jmp
pop
pop
mov
push
add
jmp
daa
dec
dec
jmp
mov
nop
aam
and
js
lahf
cmc
clc
out
mov
in
inc
pop
push
xor
push
cmp
pop
inc
or
addl
stos
test
lahf
cltd
push
fs
fstps
mov
je
push
dec
mov
inc
jle
shlb
pop
mov
popa
stos
fistpll
xchg
mov
mov
mov
push
jnp
push
or
sahf
pop
enter
fldl
clc
cld
pusha
inc
mov
sub
xchg
jmp
addr16
cltd
imul
adc
jns
cmp
mov
dec
dec
rcl
sbbl
movsl
icebp
inc
sub
add
sbb
sbb
mov
xchg
daa
jbe
sbb
and
mov
jle
stc
jmp
and
or
rorb
xchg
push
std
loope
test
xor
pop
hlt
sbb
out
and
and
decb
fbld
dec
addb
pusha
sub
pop
sbb
popf
or
sub
and
sbb
sbb
inc
or
out
mov
fistl
xorl
push
popf
test
int
add
daa
xchg
xchg
fldt
or
outsb
mov
cli
test
lods
inc
jmp
outsl
mov
sbb
xchg
or
mov
xlat
leave
adc
mov
cmp
aas
out
mov
push
pop
mov
popa
sbb
add
jno
js
imul
mov
fs
push
sub
xchg
inc
push
mov
sub
inc
inc
cmp
pushf
adc
or
and
jnp
sbb
and
xchg
inc
test
pushf
and
ds
mov
jp
fnclex
and
jne
shlb
je
das
fcmovb
mov
push
cld
cs
jnp
mov
in
xchg
dec
je
jne
loop
jb
paddusw
adc
cltd
push
cmp
pop
xor
adc
mov
push
stos
out
mov
hlt
dec
push
rolb
mov
or
dec
mov
and
hlt
jb
mov
dec
xchg
into
pop
insb
cwtl
sub
rcrb
out
inc
fs
in
jae
dec
dec
clc
adc
and
mov
jecxz
sarb
mov
lods
jl
pop
push
and
mov
dec
imul
aaa
jg
enter
test
out
out
mov
orb
cmpsb
mov
cli
xor
jbe,pt
sub
pop
jo
cltd
inc
call
icebp
movl
rcl
stos
fwait
sti
pop
mov
mov
add
imul
jg
lods
or
push
push
sbb
push
xchg
lahf
sub
imul
test
rep
jmp
mov
jg
mov
xchg
push
and
xorb
dec
pop
dec
insb
xchg
dec
sub
insb
or
sub
jb
sbb
add
lret
xchg
les
pop
sti
ljmp
stc
fldenv
dec
sbb
aad
jle
push
leave
pop
cmpsl
xor
sub
cld
sub
or
and
aaa
jno
sahf
inc
fdivrl
out
mov
and
insb
add
call
pop
sub
push
mov
je
pop
insl
xor
loop
adc
or
cld
inc
mov
jmp
je
aaa
sbb
shlb
out
push
or
mov
adc
lret
js
mov
xchg
outsb
in
or
cli
fwait
pop
mov
lcall
dec
dec
xchg
das
pop
aas
pop
imul
sbb
data16
adc
mov
add
jo
mov
sub
push
lds
mov
mov
test
jmp
call
aam
stos
jecxz
push
in
cld
imul
sbb
stos
jmp
fcmovnu
lods
xchg
int
clc
mov
and
xchg
push
push
mov
jae
xchg
mov
into
lret
rclb
int3
enter
lea
or
fstps
clc
ficoms
hlt
sar
cmpsb
xor
adc
push
call
push
fimuls
jge
push
push
sub
adc
or
ja
test
fdivr
pop
scas
push
sbb
xchg
in
pushf
push
mov
test
mov
adc
jle
mov
imul
arpl
rol
fsubs
mov
mov
cmc
daa
and
repnz
jle
inc
sahf
stc
xchg
cmpsb
loopne
aaa
test
xchg
rcl
push
inc
cmpsb
in
je
inc
clc
push
lock
repz
add
mov
jae
rol
imul
test
inc
mov
mov
add
mov
addr16
bound
test
cmpsl
dec
xor
shlb
scas
orb
jge
fldln2
pop
and
pushf
stos
out
dec
stos
xorl
mov
dec
xchg
bound
cmc
in
outsb
mov
push
and
rclb
push
int3
inc
cmp
icebp
mov
xor
mov
cld
flds
bt
adc
mov
push
push
push
stos
fldt
mov
add
mulb
push
imul
mov
mov
test
idiv
dec
jge
in
push
jo
mov
mov
int3
mov
mov
add
or
cmp
mov
add
push
hlt
das
sahf
sbb
cld
mov
add
xlat
jns
pusha
ljmp
pop
lret
ret
xor
or
jns
push
movsb
es
sbb
in
nop
adc
push
cmpsb
jecxz
xchg
scas
aam
xchg
jb
ljmp
push
enter
xlat
sbb
mov
icebp
push
aam
jae
arpl
adc
loope
lcall
sbb
lock
cltd
adc
pop
or
ret
fiadds
in
add
pusha
pop
inc
test
popa
inc
mov
jns
popf
inc
repz
out
push
cmp
scas
mov
or
ficomps
sub
push
adc
xchg
repz
outsb
pop
shll
sub
orl
dec
pop
jle
and
out
popf
hlt
ret
gs
int
pushf
adc
push
out
inc
adc
js
jbe
out
jge
adcl
lea
popl
inc
sub
ficoms
fdivrp
lret
data16
inc
insl
xchg
call
fldenv
mov
mov
inc
arpl
cwtl
mov
jbe
mov
mov
mov
inc
inc
jmp
mov
jmp
pcmpeqb
div
push
movsl
les
mov
xchg
jp
ror
shll
lds
roll
lcall
jp
lret
jl
out
mov
fistpll
fsubl
shll
jne
mov
jle
xchg
xchg
mov
xor
mov
sub
ret
adc
lsl
inc
xchg
lcall
adc
jne
shl
repnz
lret
fistpll
lret
lods
ret
jmp
lret
aad
pop
iret
cmpsl
push
cmp
sub
push
fwait
pushaw
arpl
or
jno
mov
add
jecxz
xor
push
adc
push
test
adc
inc
fimull
push
sbb
ficoms
flds
stos
pusha
mov
lret
shll
jecxz
ljmp
inc
mov
sub
dec
or
push
std
in
aas
pop
insb
cltd
push
popf
push
fbstp
and
fistpll
stc
scas
add
fs
jmp
jl
or
lcall
push
mov
sbbl
jge
add
jmp
push
pop
fcmovnu
pusha
xchg
int
fisttps
xor
jl
call
xchg
into
int
jns
mov
xchg
lret
and
xor
mov
dec
and
loop
mov
inc
push
sahf
push
out
jae
enter
mov
pop
sbb
lock
push
and
loop
pushf
dec
dec
xor
lahf
push
mov
aaa
cld
xchg
popf
gs
add
xor
hlt
pop
iret
mov
xlat
dec
fbld
mov
pop
push
or
jge
cmc
stc
lret
stos
sub
add
ret
aam
pop
in
push
popa
pop
cmp
add
mov
dec
outsl
movsl
add
sub
cld
cmp
sub
dec
pop
stos
adc
mov
mov
lcall
insb
jp
inc
daa
hlt
out
iret
inc
jecxz
ret
insl
pop
xchg
stos
mov
lods
scas
xchg
mov
inc
adc
dec
daa
dec
push
add
scas
push
jnp
out
enter
add
popa
adc
mov
cmpsb
push
xor
mov
pop
cld
sbb
int
imull
push
test
xor
jg
iretw
aaa
in
xchg
in
and
lds
xor
lods
xor
cmp
inc
push
inc
and
cmpsb
jns
sbb
imulb
leave
pop
jo
cmp
mov
fimuls
fcoml
mov
mov
enter
outsl
sbb
xchg
rclb
je
sbb
loopne
lods
cwtl
dec
pop
out
test
div
aad
push
push
dec
cwtl
into
mov
cmp
jmp
ss
xchg
adc
ja
leave
push
scas
orl
bound
sub
mov
add
jbe
ret
inc
repnz
clc
or
fists
in
jp
aaa
decb
fldt
mov
movsb
mov
adc
xchg
sti
mov
fwait
push
push
stc
or
jge
sbb
sbbb
jmp
lahf
cmp
or
push
adc
in
push
cmp
and
push
dec
mov
sub
fiadds
mov
jbe
add
adc
ja
pop
cltd
rcll
clc
dec
hlt
orl
std
fwait
add
jge
fbld
hlt
and
shlb
nop
jge
bnd
cmp
scas
jae
mov
out
xchg
jo
imulb
push
add
lea
inc
cmp
xchg
pop
fdivs
push
daa
mov
pop
pop
je
xchg
jnp
xchg
sti
sahf
cwtl
nop
nop
or
pushf
mov
adc
pop
call
fprem1
hlt
stos
xchg
cmpsl
sahf
lcall
sbb
cmp
pusha
loop
int
and
cltd
sbb
mov
rorb
mov
vrsqrtss
mov
xor
mov
inc
sbbl
xor
sbb
push
in
out
jae
lret
jle
push
inc
mov
shl
dec
fs
out
mov
jns
clc
clc
or
adc
xchg
add
mov
cld
jecxz
inc
mov
lods
sub
jl
in
js
push
mov
outsb
call
fildl
out
or
inc
mov
add
int3
mov
cmp
push
out
or
pop
cli
mov
rorl
add
pushl
int3
pop
or
or
fistpll
lods
cs
std
mov
sub
cmp
das
fstpl
loopne
lahf
or
and
cmpb
movsb
add
inc
fstpt
xchg
mov
push
pop
lds
add
sub
pusha
inc
xor
mov
sbb
mov
and
push
ret
push
push
fnsave
out
shrl
and
xchg
cltd
jb
sbb
xor
movsl
repnz
sbb
mov
fisttpll
jb
and
hlt
push
leave
arpl
loope
push
mov
loop
ljmp
outsl
xor
xor
sub
pop
pop
cs
xchg
pop
ret
push
jo
sub
fldenv
push
cld
pop
jl
cmpsb
rclb
cmp
pop
js
data16
mov
cmp
out
mov
mov
cld
fidivrs
mov
insb
cld
sahf
pushf
fisttpll
cmp
movaps
jo
jae
clc
mov
mov
movsb
sbb
pusha
icebp
aaa
dec
movsb
mov
sub
pusha
fists
jecxz
lea
cmp
mov
inc
xor
pop
lret
jbe
fucomip
xchg
cltd
in
sbb
mov
mov
inc
mov
lcall
mov
dec
mov
loope
aam
pop
mov
mov
in
adc
andb
fcmove
jle
jp
sub
xchg
inc
stc
imul
push
fisttpll
sub
cmp
fldenv
ret
sbb
fistps
clc
negb
mov
loope
sahf
fiadds
lods
and
fnsave
cmp
cld
pushf
scas
pop
jb
sbb
mov
sarb
cli
xchg
hlt
in
dec
aas
into
dec
mov
insl
enter
or
push
fdiv
add
out
pop
loopne
test
dec
sbb
inc
cmc
adc
mov
or
sbb
jo
cmc
aad
mov
data16
lret
outsl
lods
rcrl
loope
cmp
sub
jle
subl
xchg
call
mov
sbb
add
pop
sub
pop
rcrl
jb
stos
cmp
stc
dec
iret
jno
jl
fiadds
mov
mov
call
sar
xchg
jg
jbe
mov
xchg
outsb
xchg
fldl
cmp
lds
xchg
bound
push
daa
cmp
rolb
jp
or
cltd
ret
sub
dec
stos
mov
xor
jle
inc
xchg
mov
push
jnp
push
add
mov
fs
fiadds
inc
sub
mov
out
movsb
aaa
pushf
and
ja
xchg
call
cmp
rcrl
out
mov
jle
jecxz
les
xchg
mov
xlat
push
es
out
xlat
ret
mov
xor
adc
pop
sti
adc
adc
mov
loopne
enter
in
adc
mov
repz
ss
xchg
jno
stos
pop
and
adc
movsl
sbb
stos
in
fwait
cmp
push
xlat
mov
xor
int3
repnz
daa
das
rclb
out
rcrb
sbb
sbb
ljmp
adc
inc
mov
mov
or
int
fldenv
pop
imul
add
fiaddl
cltd
ret
fwait
push
test
sbb
mov
mov
adc
mov
in
xchg
sub
add
cmp
jle
mov
nop
shll
xorl
pop
ljmp
ret
xor
push
inc
imul
lock
cld
mov
loopne
xchg
int
stos
popf
sub
jmp
jle
pop
lret
shl
cmp
popf
cmpb
add
pop
add
push
xchg
xor
jne
iret
jae
stc
mov
rcrb
add
pop
jg
aaa
xor
adc
leave
sbb
fnstenv
cltd
popa
xchg
push
and
or
mov
jmp
fsubs
mov
sbb
push
push
sbb
cmp
xchg
mov
mov
mov
cltd
inc
fwait
nop
or
imulb
push
mov
daa
shrl
push
stc
daa
stos
mov
out
std
mov
imul
pusha
test
add
push
ret
shrb
stc
adc
cmpsb
leave
icebp
pop
push
fwait
test
lods
mov
mov
xor
stos
dec
push
nop
test
jl
dec
in
in
in
inc
test
mov
xchg
mov
adc
lahf
jne
imul
test
xchg
pushf
mov
mov
push
sub
adc
add
jmp
into
ret
push
lds
lahf
dec
add
into
push
sbb
mov
ror
nop
sti
aam
not
jl
push
and
cs
out
test
and
out
xchg
xchg
sbb
sti
push
lcall
mov
popa
mov
mov
mov
cmp
test
out
xchg
or
nop
jl
mov
arpl
aas
pop
sub
push
stos
cmpb
xor
xchg
cmp
jnp
rcrb
movsb
mov
mov
fildll
and
cli
clc
cmc
inc
gs
sub
jb
sbb
lcall
adc
stos
mov
jae
testl
sub
outsb
aam
push
jl,pt
dec
lds
int3
pop
and
xor
test
daa
in
aam
jecxz
bound
adc
fcmovnb
cs
push
icebp
hlt
fwait
cs
clc
inc
popf
shrl
xchg
xor
ret
sbb
pushf
sbb
test
rolb
jmp
addb
pop
dec
or
dec
pop
shll
in
add
or
add
jle
outsl
shrd
push
add
jnp
mov
js
inc
fcmovu
jg
lock
movsl
les
pop
ss
test
in
mov
dec
loopne
fadd
xchg
cmpsb
fmul
lret
mov
sub
push
jbe
pop
or
add
rolb
adc
cmc
loop
mov
shll
adc
lods
mov
pop
cmp
shll
pop
les
lret
jg
lock
dec
imul
addr16
stos
mov
fisubrs
int
xchg
xchg
mov
sbbl
push
mov
push
mov
sbb
movsb
ficompl
push
pop
xorb
mov
sub
xor
mov
jnp
call
and
ret
cmp
mov
pop
mov
pop
xchg
lock
roll
dec
ja
popa
cmp
lahf
ficoms
cwtl
xor
mov
int3
pop
in
xchg
push
and
push
and
orb
repz
rolb
outsb
insl
mov
faddl
rolb
or
mov
pop
lds
js
pop
in
push
fiadds
cmovb
or
ljmp
mov
mov
sarl
aaa
fnsave
mov
xor
outsb
imul
adc
loope
mov
push
ljmp
or
mov
cmpsl
xor
dec
out
shll
mov
mov
xchg
pop
pop
sub
aaa
jmp
sbb
pushf
inc
scas
cmpb
jecxz
leave
or
xchg
lcall
in
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
jge
push
rolb
xorl
inc
dec
nop
fists
mov
repnz
outsl
push
popf
pop
in
imul
es
cmp
ljmp
jno
popf
mov
jb
adc
push
outsb
xacquire
adc
inc
test
and
and
int3
into
jb
sub
mov
add
lock
cltd
dec
arpl
das
push
dec
sub
push
lahf
push
inc
rolb
adc
jp
mov
int
jo
push
jmp
into
xor
dec
lds
adc
out
adc
dec
test
arpl
lcall
dec
sub
mov
clc
mov
cwtl
xchg
outsl
push
sarl
lods
lds
push
inc
les
mov
lds
fidivrl
insb
jae
mov
ret
adc
scas
add
mov
jbe
and
push
xchg
cltd
mov
or
inc
insl
dec
jnp
inc
or
cmp
cvtps2pd
clc
mov
ja
add
xchg
popf
cmp
pop
xchg
xchg
fidivrl
stos
repnz
arpl
or
les
repz
pushf
popf
pusha
push
popa
icebp
mov
xchg
push
mov
ljmp
int3
jno
stos
shlb
cmpsl
xchg
inc
sub
cmp
pop
testl
cli
bndstx
dec
loop
pop
inc
test
sub
mov
dec
rolb
adc
adc
in
das
add
mov
jg
push
in
pop
cmpsb
jnp
jge
pmaxub
arpl
mov
mov
repnz
dec
mov
push
and
sbb
adc
loope
dec
in
into
shrb
aam
xor
pop
inc
fistpll
imul
ljmp
jo
test
mov
sub
sbb
sahf
cmp
aaa
push
mov
imul
adc
jo
lret
loope
xchg
cmpsb
scas
pop
xchg
ss
push
jnp
and
mov
cmc
divl
mov
notl
sahf
pop
stos
scas
xchg
push
xchg
add
aad
sbb
push
std
lret
xchg
jmp
inc
push
xchg
inc
clc
nop
sbb
scas
cltd
jg
daa
mov
inc
sbb
cwtl
in
imul
out
out
or
fbstp
mov
add
filds
inc
jae
and
loope
sbb
mov
push
mov
cli
mov
pop
ficomps
xchg
pop
push
repz
lds
lock
ret
push
adc
out
inc
mov
in
roll
pop
out
test
mov
into
adc
popf
dec
ret
xchg
mov
jge
jmp
cld
or
push
or
test
or
shll
add
mov
fstpt
ja
add
stos
sbbb
je
push
mov
and
cmpl
aam
test
dec
insb
pop
out
sub
mov
pop
dec
cld
xchg
sbb
lods
fwait
dec
xchg
in
mov
pop
shr
xchg
dec
std
aas
sbb
rol
jnp
ret
in
and
insb
push
cld
lea
cmp
dec
mov
cli
xchg
push
xor
push
jo
lods
mov
lret
insb
das
movsb
sub
sub
popf
mov
lret
jbe
xchg
test
movsl
stos
lahf
and
push
ds
cwtl
pop
inc
push
stos
sub
fldcw
push
push
repnz
stc
rclb
pop
es
pusha
xlat
add
adc
add
jno
adc
add
adc
pop
jo
cmp
insb
movsl
sbb
mov
mov
fistl
clc
add
stc
push
xor
test
addr16
push
sub
loope
daa
stos
bound
out
in
jp
mov
pop
mov
out
ja
add
out
scas
mov
movsl
jp
mov
test
jb
sbb
insb
cmc
inc
cmp
mov
mov
lahf
repz
pop
jmp
push
cli
mov
cmc
or
dec
pop
dec
lock
data16
jnp
lods
test
stos
scas
mov
stc
xchg
xchg
js
adc
push
cmp
dec
loop
test
test
leave
pushf
nop
jo
mov
cmpsl
hlt
lods
push
mov
mov
pushf
fisttpl
clc
adc
pop
out
test
xor
fdivs
mov
data16
pop
loope
cmp
rol
lods
aad
push
pop
mov
cwtl
cmc
cmp
adc
sub
mov
and
adc
dec
aam
pusha
repnz
mov
sarb
lret
cmp
enter
lods
cwtl
adc
xor
ds
nop
push
std
jno
data16
int3
adcb
test
arpl
arpl
outsb
fbstp
jl
xchg
xor
xorb
andb
repz
pop
mov
jg
cmpsb
inc
loop
xchg
and
imul
in
popf
pop
and
or
xchg
mov
ds
mov
fwait
mov
hlt
pop
cmpsl
or
insb
icebp
pushf
popa
es
ret
adc
mov
and
lods
or
mov
lods
in
mov
leave
sbb
test
push
jbe
addl
push
xor
xchg
mov
dec
je
mov
jle
xchg
lahf
jg
xor
xor
addl
jp
ret
cmp
outsl
mov
mov
lahf
scas
sbb
or
stos
mov
cwtl
inc
cs
imul
repnz
xor
pusha
adc
repnz
add
jnp
lahf
add
jecxz
fwait
xchg
adc
test
arpl
cmp
sub
iret
inc
jmp
vmovdqu
mov
scas
dec
lods
daa
or
sbb
cli
jno
dec
jmp
adc
ds
das
lock
iretw
out
inc
add
mov
jnp
mov
stos
jb
ret
arpl
fcoml
adc
dec
test
int3
cmpsl
int3
cmp
aas
jnp
push
xor
dec
outsb
xchg
decl
xchg
popf
xor
inc
lods
daa
sbb
dec
adc
xchg
mov
aas
inc
jnp
cld
mov
lock
ja
xlat
add
bswap
push
stos
sbb
inc
sub
cld
mov
xchg
lock
cltd
popf
inc
mov
jae
mov
push
jnp
gs
mov
mov
outsb
mov
push
int3
inc
cmpl
push
sub
test
mov
cli
adc
lods
mov
mov
ljmp
xchg
addr16
dec
add
lock
mov
aas
out
xchg
popl
push
pop
jno
cmp
stos
fdivrs
sarl
add
push
cmp
mov
outsl
jmp
ficoms
or
xor
in
cmp
push
adc
inc
ds
dec
pop
in
pop
push
pop
push
adc
mov
pop
push
sbb
dec
mov
jo
jae
cmpsl
fwait
repz
mov
ljmp
add
jb
cltd
push
mov
repnz
inc
fildl
push
mov
cltd
ret
pop
cmc
mov
orb
cmp
movsb
in
jo
xchg
cld
lock
pop
push
scas
stos
mov
push
cmp
and
xor
dec
cltd
dec
sbb
push
xchg
call
sarb
icebp
rcrb
mov
sbb
inc
fbstp
dec
stc
sbb
mov
daa
inc
dec
jne
mov
mov
sbb
cmpsl
xlat
sbb
ds
pop
pop
xlat
adc
adc
mov
cmp
and
ljmp
inc
jp,pt
scas
out
loope
or
and
mov
mov
movsl
inc
and
xor
mov
push
adc
movsb
push
add
jns
push
sub
je
xchg
xor
cmc
out
in
insl
mov
xchg
in
mov
out
and
aam
jmp
notl
fistps
cld
dec
test
push
mov
pop
push
vpmovsxbq
inc
pushf
mov
jns
icebp
movsb
fcomip
fisttpll
push
fdivl
cmc
adc
test
inc
sbb
aas
push
loopne
adc
das
data16
outsb
and
ja
sub
out
mov
and
movsb
int
mov
faddl
stos
push
shll
dec
pop
sahf
addr16
nop
pop
add
xor
in
or
cmp
sub
fildll
add
rorl
sub
and
outsl
icebp
xchg
xchg
popf
jecxz
mov
pop
jno
lock
in
addr16
sub
xchg
out
sub
mov
cs
cmp
adc
mov
mov
mov
xchg
lods
nop
movsb
stc
push
and
mov
xor
jo
jge
nop
rolb
add
ds
icebp
xchg
aam
mov
jns
mov
fdivrs
add
sub
or
repnz
sub
push
and
pushf
sbbl
mov
pop
js
cli
inc
jno
xor
lea
stos
loope
cmp
shlb
inc
lret
sbb
xchg
test
into
jg
dec
dec
xlat
xchg
adc
xchg
pop
sub
cwtl
shll
jno
aam
xchg
clc
in
lret
push
and
mul
cmp
mov
testb
mov
and
test
push
in
data16
lods
cmp
and
jb
out
dec
lret
aam
or
or
mov
call
push
in
out
and
mov
add
xchg
pusha
xchg
push
loope
inc
xchg
aad
pop
in
fsubrs
dec
add
clc
jne
jl
lds
cmp
movsb
xchg
adc
inc
test
inc
add
mov
int3
jecxz
and
lret
das
sub
pusha
lods
mov
arpl
adc
cmpsb
xchg
inc
or
pusha
cs
cmp
mov
mov
mov
inc
pop
mov
and
pop
ficoms
xchg
cwtl
orl
sti
pop
pop
fisttpl
inc
push
aaa
lock
cmpsl
jl
movd
fsubrs
lidtl
inc
ss
pop
pop
mov
call
cmp
xchg
sub
daa
fwait
inc
jp,pt
jne
ficoml
call
and
push
fcomps
clc
push
ret
popf
out
cmpsl
inc
pushf
aaa
dec
inc
out
in
addr16
cltd
ss
dec
xchg
adc
pop
and
pop
inc
mov
push
jae
adc
pop
sub
fsubp
lds
mov
pusha
jnp
icebp
sbb
push
es
call
mov
mov
mov
sbb
in
or
rorb
jb
je
pop
ficompl
mov
arpl
pusha
std
add
mov
inc
add
ficompl
inc
fwait
cmp
cmp
test
cmpsb
sbb
cmpsb
mov
add
sti
ret
mov
pusha
ret
in
dec
or
lahf
inc
iret
fwait
mov
cs
xchg
inc
cmp
mov
cmp
iret
sub
xchg
test
in
and
and
jno
nop
push
add
mov
mov
xchg
push
out
lahf
pop
sbb
sub
xchg
sub
mov
sub
enter
icebp
movsl
sbb
enter
ret
mov
mov
test
cmp
nop
push
shll
mov
cmp
out
insl
jmp
cmp
aad
test
into
bound
mov
bound
sbb
dec
jge
push
shr
push
jmp
movsl
pop
in
shlb
cmp
sbb
std
es
lds
call
je
fcompl
add
nop
pop
sub
out
jg
jbe
outsb
pop
and
xchg
mov
mov
dec
stos
scas
ret
ljmp
mov
repnz
cmp
cmp
ljmp
mov
fwait
lds
lea
sbb
push
ret
out
outsb
jno
push
lock
roll
pusha
movsb
daa
out
and
pusha
data16
push
jmp
les
repnz
call
in
ljmp
inc
pop
scas
repnz
rorb
cmp
xchg
sahf
xchg
xorl
add
pop
mov
fs
and
jecxz
test
jo
cmp
lock
or
stos
jb
push
push
fldenv
int
fisttps
rcrb
and
xorl
das
sti
sbb
call
add
lods
cmc
jl
outsb
xor
mov
sub
jp
or
pop
hlt
sbbb
jecxz
loop
rclb
test
sahf
inc
scas
mov
daa
lret
xor
xchg
push
jle
les
xor
add
fwait
in
and
iret
enter
sbb
cltd
hlt
add
aad
lret
jns
inc
sbb
jnp
leave
loop
aam
icebp
sbb
test
in
imul
gs
sub
addr16
jmp
adc
nop
sti
sarl
xchg
daa
ret
lahf
xchg
adc
in
pop
mov
mov
insl
mov
adc
fmuls
loopne
cmc
outsb
insb
insb
mov
cli
dec
fwait
jns
adc
mov
jg
rcr
testl
adc
xlat
repnz
out
inc
aas
adc
repnz
dec
mov
insb
mov
xchg
mov
jo
mov
cmc
scas
dec
pop
shll
data16
mov
mov
faddl
loope
lret
addl
aam
xchg
xchg
inc
jmp
push
faddl
pop
sarb
int3
in
xor
cs
lahf
dec
dec
jl
out
adc
mov
xor
and
xor
scas
dec
xchg
push
es
push
xchg
sbb
hlt
sub
stos
sbb
xor
sub
xchg
dec
shll
dec
sbb
sub
and
ja
push
cmp
stos
stos
rcll
sbb
in
push
cmp
cwtl
aaa
xorl
jcxz
push
inc
xor
jb
ret
xchg
into
mul
add
sub
jmp
pop
test
mov
cltd
das
jmp
push
inc
mov
dec
call
sti
cmp
mov
out
pop
inc
xchg
add
jns
sub
hlt
or
ja
hlt
or
jg
les
cmp
jne
cmp
pushf
scas
fisubrs
add
inc
cld
pushf
arpl
popf
push
fsubrl
ret
pop
shl
int
pop
jecxz
subl
pop
mov
test
orb
fldt
and
es
xor
daa
ljmp
call
cmpsl
jmp
fmuls
xlat
pop
inc
notl
mov
daa
out
mov
dec
pop
scas
lahf
push
inc
adc
push
add
pop
mov
jg
je
mov
sub
jno
sbb
rcll
inc
repz
add
xor
push
push
loopne
mov
loope
imul
jge
cmpsb
mov
ret
or
fiaddl
jl
hlt
mov
mov
gs
mov
jmp
scas
ret
test
mov
and
push
outsl
push
dec
inc
in
out
and
inc
cmp
mov
mov
fwait
mov
mov
mov
xchg
inc
add
test
fiadds
jnp
pop
fldcw
icebp
in
sbb
lea
outsl
add
sbb
xchg
xchg
add
ret
neg
insb
inc
pop
jne
and
fwait
in
loope
sbb
imul
inc
mov
jo
idivb
pop
std
addb
add
and
sbb
mov
jecxz
xorb
lret
push
pop
xorl
sbb
sub
adcl
mov
sbb
cmp
mov
lods
into
xor
push
das
test
dec
sbb
adc
cmpsb
movsl
add
int
out
stos
push
test
jg
add
pop
fdiv
aaa
jbe
xor
and
mov
pop
inc
push
test
jno
iret
mov
cmpsl
popf
sbb
add
xchg
jle
push
ljmp
in
push
push
pop
sbb
jno
popa
arpl
sub
dec
push
jae
jecxz
mov
insl
dec
push
loope
sbb
je
mov
mov
pop
xlat
int
pop
leave
xlat
push
adc
es
outsb
mov
push
xor
xchg
xor
cwtl
and
cmp
mov
mov
shlb
fwait
rcrl
into
jae
mov
xor
xlat
popf
repnz
cmp
std
or
or
pushf
jns
push
bound
mov
sub
imul
cli
enter
ret
sub
dec
mov
xchg
movsb
add
sub
pop
inc
xor
pop
mov
jno
mov
orb
lahf
loop
cmp
scas
fs
pop
sub
sub
sarb
out
adc
xchg
adc
or
mov
jge
xchg
in
mov
imul
jecxz,pt
insb
cltd
cltd
add
lea
pop
sbb
jle
push
adc
iret
cmp
mov
roll
and
clc
and
jo
ret
add
imul
add
add
mov
and
add
das
in
push
outsl
inc
xchg
movsl
dec
cs
jbe
xor
and
loop
inc
shll
outsb
bound
call
inc
pop
lret
ja
sub
cmp
mov
jbe
hlt
mov
mov
sub
mov
movsl
mov
jg
sti
testb
xchg
popa
inc
add
inc
jmp
sub
and
sbb
pop
dec
xor
gs
pushf
cmpsb
cli
inc
inc
pop
popf
cli
inc
inc
lods
or
fstps
sbb
mov
cmp
xor
mov
sahf
movsl
je
lcall
inc
sbb
imull
xchg
sbb
xchg
es
mov
cmp
dec
adc
sbb
mulps
push
test
leave
div
mov
mov
sub
dec
fwait
scas
sub
jne
xchg
lods
dec
add
pop
dec
pop
jmp
mov
enter
xlat
repnz
stc
push
cltd
pop
xchg
pusha
gs
add
adc
pop
xor
jne
insb
fsubp
stos
push
adc
fidivrs
sub
fcompl
aad
aam
xlat
sub
push
in
mov
cmp
enter
inc
xchg
frstor
jle
popf
xchg
sub
fists
loopne
jge
clc
cmc
jl
les
pop
or
adc
movsl
enter
xor
push
addb
aad
jno
mov
sub
ds
addr16
mov
sub
xchg
int3
push
out
inc
xorb
push
ljmp
cmp
shlb
push
mov
js
jae
inc
out
push
xchg
movsl
aaa
xor
cwtl
and
in
das
hlt
add
call
mov
xor
out
and
leave
out
pop
add
add
ds
rcrb
adc
mov
ret
or
mov
lret
testl
subl
push
and
shlb
jno
popf
mov
mov
sbb
rclb
les
dec
jno
gs
cs
ljmp
jns
aas
pop
xchg
in
ficomps
and
repz
xchg
roll
sbb
lahf
or
inc
xor
movsl
push
fcomps
out
push
cmp
ja
lret
push
xchg
dec
jae
mov
gs
fsts
jmp
lret
xor
xchg
xchg
cmp
shrl
aas
cmpsb
mov
xchg
in
out
jg
xor
jp
aas
lock
xor
pop
fisttpl
shlb
inc
ret
frstor
dec
shrl
mov
popa
ja
repz
lcall
inc
pop
adc
loop
sub
int
ja
cmp
mov
sbb
imul
fs
hlt
add
mov
push
inc
or
arpl
shlb
xchg
fistpl
clc
push
jb
cmp
ret
jle
bound
inc
lsl
pop
scas
loop
cmp
cmp
mov
adc
sarb
pop
shll
sub
adc
jns
jo
pop
dec
cmp
int3
pop
in
lret
xchg
adc
xchg
mov
cmp
cmp
mov
cmp
and
jo
mov
dec
fcmovbe
adc
sub
popf
sub
xor
mov
mov
lds
rclb
punpcklbw
mov
cmp
pop
je
lahf
or
or
popa
enter
mov
inc
and
adc
sub
test
sub
inc
ja
xor
cltd
popf
cmp
push
inc
dec
outsl
filds
outsl
mul
pop
cmpsb
push
mov
popa
fisubrs
dec
mov
roll
sub
push
popf
mov
pop
sbb
add
or
mov
arpl
cld
dec
push
and
test
xor
add
mov
inc
adc
std
dec
addr16
stos
mov
ret
imul
push
xor
dec
inc
shl
lret
pop
js
cmp
outsb
pop
inc
jp
fs
fcomip
xchg
mulb
mov
movsl
pop
jnp
lahf
call
sti
push
out
xchg
fcompl
pusha
add
repz
aaa
add
push
mov
das
test
stos
xchg
lret
addr16
pushf
mov
dec
out
dec
cmp
mov
dec
pop
adc
fbstp
add
fsubl
add
in
adc
stos
cmp
mov
mov
popl
push
mov
aas
aam
das
sub
mov
test
jne
pushf
adc
ror
in
xchg
loop
jmp
push
es
xchg
jmp
cmpb
test
aaa
stos
fs
cmp
lahf
jae
in
in
mov
subb
jo
arpl
pop
pop
add
addl
push
mov
pushf
and
fwait
inc
int3
mov
mov
les
mov
addr16
add
iret
imul
movsb
leavew
mov
out
sarl
and
jns
or
adc
js
movsl
pusha
out
pop
jns
or
imul
lea
mov
sbb
ss
testb
mov
ljmp
imul
cltd
mov
inc
das
shrl
xor
sahf
sub
xchg
test
push
sub
sahf
iret
sub
fdivs
insb
fs
std
fsubrs
mov
xchg
xchg
xor
xor
cwtl
imul
and
and
cmpsb
bound
and
insl
dec
mov
sti
push
in
adc
pusha
int
daa
dec
in
dec
stos
sub
call
xor
pop
insb
mov
pop
inc
das
or
dec
or
push
push
mov
mov
insl
dec
call
jb
ds
inc
add
or
cwtl
push
or
mov
lret
push
jmp
adc
pop
mov
in
fbld
or
in
insb
lock
icebp
gs
jnp
and
inc
xchg
addr16
inc
fstl
jmp
in
scas
inc
sbb
addr16
add
hlt
leave
movl
push
shll
xlat
mov
inc
cmc
pop
mov
psubq
aam
sbb
es
xchg
mov
outsb
es
ja
jo
add
call
dec
sbb
nop
fnstsw
int3
scas
jl
lods
popa
leave
pop
dec
inc
sub
mov
testb
add
sbb
aad
ret
stos
data16
jl
inc
cmp
xchg
iret
xchg
jns
fsubrl
sub
ret
mov
cwtl
andb
jae
out
repz
cmp
adc
sbb
add
lahf
push
push
aas
pusha
stos
add
inc
mov
pop
add
int3
arpl
jnp
pop
mov
mov
push
pushf
andb
test
jno
or
push
inc
sti
mov
scas
mov
adc
out
sbb
push
push
sbb
push
sub
test
pop
add
lea
imul
xchg
xor
lret
lds
arpl
jmp
inc
fsts
arpl
push
inc
pop
or
aas
popf
data16
and
cmp
outsb
mov
sub
dec
jbe
mov
mov
push
cmpsb
xchg
getsec
add
inc
in
aaa
ja
in
and
stc
mov
out
sbb
out
test
push
lret
push
subl
aas
call
das
xchg
cmpb
call
xorl
push
fsubr
jae
je
enter
cmp
test
pop
push
and
push
pop
sbb
test
dec
dec
jno
sbb
ja
jbe
jp
push
out
mov
es
sub
and
out
inc
pushf
cltd
shrb
cli
cmp
shll
adc
ljmp
ret
loope
in
sub
jmp
int3
push
sbb
or
jno
xchg
lods
adc
lea
lcall
dec
mov
aad
dec
jp
insb
mov
sbb
or
mov
sbb
ja
outsb
jae
call
rcrl
xlat
in
scas
push
jns
cmpsl
push
pop
dec
push
mov
repnz
xor
std
inc
mov
and
loop
popf
adcl
loop
jae
adc
push
std
add
or
sbb
and
pop
mov
subb
test
scas
sti
test
cmc
outsl
push
push
push
mov
js
dec
jb
fbstp
mov
out
add
and
adc
sbbb
in
dec
test
mov
mov
adc
cmc
inc
push
movsb
nop
inc
adc
xor
xchg
xchg
stos
cli
fldenv
xchg
inc
inc
shll
out
and
pop
xchg
loope
adc
jle
sarb
insb
push
flds
cmp
xchg
push
fildl
or
push
jecxz
sbb
or
xor
mov
sbb
inc
push
cmp
pusha
outsl
gs
ss
xchg
jo
scas
mov
sbb
fwait
movsl
loope
addl
cs
sub
and
inc
xor
push
push
push
or
lods
inc
and
pop
clc
inc
mov
mov
clc
fdivrl
sti
stc
in
jg
cmp
aas
mov
pop
inc
daa
imul
push
dec
lods
push
mov
and
mov
and
daa
mov
jbe
xor
jnp
mov
dec
repnz
mov
jmp
sbb
add
pop
and
sub
sti
arpl
pop
xchg
jbe
or
sbbl
xor
adc
push
in
mov
adc
sub
or
sahf
pop
imul
sti
add
mov
xchg
aam
jne
stos
sub
adc
ljmp
arpl
pushf
cmc
ljmp
cwtl
lds
aas
xor
mov
push
scas
shrl
aaa
xor
sbb
sub
lea
dec
mov
xchg
push
push
fs
test
ja
mov
xchg
icebp
sbb
cmp
mov
popa
push
inc
cmp
jo
mov
xchg
inc
mov
movsb
sbb
push
mov
xor
fbld
repnz
add
ds
xorb
arpl
fadd
jp
jb
lcall
or
inc
inc
iret
icebp
adc
outsl
xor
jl
test
push
js
in
pop
in
enter
cmp
adc
mov
xchg
or
cwtl
pop
mov
cmp
je
mov
dec
add
pop
gs
mulb
xchg
ffreep
shrb
add
xlat
loopne
mov
or
add
or
rep
xchg
in
fsub
test
test
and
sub
enter
imulb
outsl
test
adc
das
sbb
shrl
lods
add
cmp
fsubr
mov
xchg
pop
mov
aas
roll
xor
insb
adc
mov
cwtl
inc
mov
mov
lahf
mov
iret
iret
pop
js
js
pusha
sbb
mov
cwtl
xor
xor
mov
loopne
mov
adc
incl
push
lcall
insb
dec
mov
scas
jp
xor
std
pusha
shll
lret
lcall
pop
push
pop
sub
dec
xor
movsl
push
pop
out
mov
stos
dec
adc
cmc
in
xchg
pop
xchg
xor
or
add
cwtl
dec
pop
mov
and
jno
jnp
xor
fcompl
cmp
jmp
out
mov
jo
loope
cmp
pop
mov
lds
inc
movl
add
lds
rorb
xor
out
dec
sbb
dec
cli
stc
mov
test
xor
xor
pop
arpl
push
lret
rdmsr
dec
mov
dec
jmp
and
sub
cmpsl
clc
fincstp
dec
push
xor
add
push
pusha
fidivrl
fsubl
pop
in
and
cmp
xchg
test
add
arpl
cmp
les
fbstp
sub
out
in
push
je
inc
cs
popa
xchg
add
mov
cmp
test
sub
std
cwtl
sub
jmp
sbb
fisubs
mov
jo
shll
inc
pop
js
stos
adc
repz
gs
divb
ret
imulb
gs
mov
arpl
fs
pop
xchg
jae
aam
xchg
bound
incl
inc
dec
jl
pop
dec
ret
pop
lds
out
and
into
or
dec
lcall
and
sbb
dec
and
es
mov
mov
jg
xor
mov
fldl
in
out
stos
shlb
adc
cli
xchg
ja
icebp
mov
loopne
scas
insb
popa
sbb
and
or
aas
lea
and
lahf
ret
jp
xlat
gs
pop
fisttpll
or
jge
jmp
popa
fiadds
sub
sbb
shlb
adc
mov
pop
pop
and
dec
es
into
jne
fabs
pop
gs
xor
mov
insl
das
mov
xor
idivb
ja
sbb
mov
sbb
cltd
and
clc
xor
inc
shr
adc
lahf
pop
mov
push
cmp
mov
mov
test
pop
push
out
xchg
in
aas
push
inc
and
testb
imul
imul
outsl
push
loopne
lahf
or
sahf
sub
push
lock
in
ja
mov
mov
xchg
jbe
push
lock
ret
pop
jp
cld
mov
mov
lret
push
lock
clc
mov
fisttpll
pop
pop
pop
and
or
cmc
movsb
adc
insl
iret
sbb
outsb
das
sub
adc
xor
inc
loop
lahf
or
sbb
sbb
mulb
insl
je
lods
xor
jle
inc
int
adc
fstpl
mov
pop
mov
mov
paddw
jle
jecxz
aas
inc
add
push
jmp
and
pushf
fcmovb
call
loope
call
fwait
cwtl
sbb
mov
adc
in
je,pn
fnstsw
test
inc
jecxz
push
xor
xchg
je
in
push
daa
in
cs
ja
cmp
aam
xchg
std
pop
xchg
lahf
xor
ljmp
out
inc
mov
shl
mov
lret
cmp
idivb
mov
mov
sbb
enter
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
sbb
icebp
pusha
addl
shrl
xchg
jle
push
sub
test
xchg
in
cmp
loop
push
sti
xchg
test
adc
adc
jno
cmp
in
mov
mov
loope
shll
jmp
xlat
arpl
adc
add
pop
neg
mov
mov
pop
inc
or
cld
in
out
pop
jns
mov
pop
pop
fiadds
les
mov
call
xchg
fisubrl
inc
sub
mov
mov
mov
out
cli
jp
xchg
hlt
mov
xor
test
mov
lods
movsb
sbb
pop
int3
jecxz
add
dec
mulb
incl
out
popa
int
mov
lahf
dec
out
jb
adc
lcall
push
mov
jp
orl
dec
mov
sbb
adc
leave
scas
pop
inc
cmp
adc
loope
aad
fdiv
lea
push
loope
int3
and
jne
test
sub
mov
pop
or
scas
xor
rcr
in
or
dec
incl
in
mov
sbb
push
in
and
popf
push
cs
mov
and
pop
sub
aas
sti
add
cmp
insl
lock
and
pop
mov
or
mov
jae
push
test
inc
inc
int3
add
sbb
icebp
xchg
sarb
or
inc
sbb
push
pop
pop
mov
and
arpl
mov
cmp
cwtl
add
inc
hlt
cmpsl
test
xchg
mov
and
add
pop
jne
jge
xor
or
fldcw
negl
cmp
lods
out
rcrl
stos
popa
pop
icebp
inc
mov
xchg
adc
test
inc
das
addr16
dec
cmpsb
mov
cmc
mov
xor
movsb
adc
stos
pop
mov
cmpsl
daa
and
test
ds
add
rolb
adc
xchg
jmp
pop
mov
lcall
arpl
xor
mov
pop
and
ds
ret
sahf
jne
lock
jae
and
or
ss
outsl
pop
pusha
aad
pop
jne
ds
loop
icebp
push
xor
fs
cmp
int
fcoms
repnz
test
and
flds
in
mov
or
xor
mov
iret
sub
push
push
lods
scas
cli
adc
inc
mov
add
inc
sbbl
test
jne
mov
dec
leave
ds
fs
stos
mov
sbb
sbb
cmpsl
xchg
testl
push
pop
in
push
ret
gs
push
fimull
mov
push
lock
sbb
std
xchg
push
add
pushf
and
mull
into
inc
inc
icebp
xchg
lock
mov
pop
and
in
jno
out
adc
dec
cmp
mov
in
fcmovu
mov
dec
xchg
icebp
adc
test
int3
sub
stos
xorb
sti
loope
push
jge
lret
negl
loope
xor
mov
xchg
jbe,pn
in
cmp
mov
leave
out
aaa
pop
imull
pop
sub
sti
cmp
and
fwait
movsl
inc
test
adc
mov
push
push
aad
scas
xchg
mov
in
inc
mov
mov
push
lret
sub
adc
sub
jnp
movsb
test
into
int
jbe
movsb
mov
clc
mov
scas
xchg
pop
mov
push
rorl
cld
mov
and
pop
shlb
outsl
pop
cmc
aad
test
out
mov
push
pop
test
adc
mov
mov
dec
gs
in
les
stos
mov
sub
jg
daa
pop
xor
or
sub
and
mov
and
cmp
int3
and
fdivl
jns
call
mov
add
mov
inc
hlt
mov
xchg
jg
enter
hlt
sbb
dec
sar
ret
pop
repnz
xchg
pop
mov
call
shr
pop
xor
repnz
pop
cmp
int3
cmp
lea
lds
cs
jecxz
mov
inc
push
sbb
pop
adc
cmc
movsl
dec
fwait
sarb
leave
daa
or
scas
xor
jns
in
and
test
jbe
mov
iret
jb
leave
adc
adc
pop
filds
lea
and
enter
stos
sub
xchg
and
push
bound
inc
fdivs
fstpt
popa
adc
movsl
xor
lcall
pop
out
push
lahf
inc
dec
xor
sbb
sub
cmp
mov
movsb
imul
lods
fsts
sti
cld
cmp
mov
sbb
inc
mov
bound
std
jecxz
dec
cld
test
aad
add
add
scas
sub
outsl
mov
add
in
cltd
dec
cmp
ja
pop
loopne
inc
push
in
scas
repnz
fistpll
or
push
pop
int
xchg
dec
dec
mov
sub
icebp
pop
xchg
inc
dec
mov
mov
mov
int3
inc
cmp
xor
cltd
mov
inc
inc
xor
or
cs
inc
dec
fsts
sbb
rcl
ss
mov
jne
adc
fbld
mov
pop
insb
popa
test
ja
add
inc
popl
stos
push
in
es
fs
scas
js
inc
lods
mov
ja
inc
ljmp
inc
lret
sub
add
inc
in
loope
xor
sbb
jne
sub
stos
xchg
inc
or
jb
dec
in
sub
dec
ret
or
imul
mov
dec
cmp
data16
lcall
iret
and
add
arpl
mov
xor
enter
cmpsl
cmp
loopne
xor
imul
push
shrl
inc
dec
iret
stos
mov
les
shrl
dec
mov
filds
mov
cwtl
dec
lds
dec
push
dec
enter
inc
arpl
shlb
cmp
sti
enter
shll
stc
fisubl
inc
mov
inc
push
int3
cmp
std
lea
fistps
mov
and
lahf
shll
xchg
out
xchg
xorb
and
pop
inc
sub
push
dec
sbb
rcrl
jmp
xor
in
outsl
push
cltd
pop
sbb
inc
roll
pop
jns
and
mov
fsub
mov
sub
adc
cmpsl
xchg
adc
xchg
daa
inc
mov
outsb
xor
dec
insb
jb
xor
pop
out
xchg
rclb
mov
inc
in
inc
dec
imul
jge
push
ss
jle
sub
enter
mov
roll
cmpsl
fmull
sub
in
xchg
call
xchg
js
adc
or
inc
pop
inc
fstl
and
rcrl
sarb
push
cmp
pop
loope
imull
icebp
sub
aas
fmul
push
cmp
repnz
stc
mov
fwait
ja
lahf
jp
jns
inc
mov
add
mov
adc
sub
mov
int
pushf
mov
cs
in
cli
lea
pop
lahf
xchg
test
vmwrite
dec
inc
cwtl
push
pop
mov
mov
xchg
aam
jg
xchg
stc
cmpsl
lods
jl
aaa
mov
scas
inc
scas
xor
cmc
cltd
jg
or
or
xor
cmpsl
xchg
mov
fisubl
push
jl
andb
xor
data16
dec
inc
sbb
fwait
stos
aas
push
outsb
jge
mov
out
cltd
loope
shlb
and
pop
mov
mov
inc
dec
inc
adc
jnp
lahf
rcrb
iret
call
and
or
mov
push
xor
jno
push
mov
divb
je
sub
mov
xchg
add
jg
rcrl
stos
imul
bound
sbb
ja
mov
insl
fistpll
ja
rcrl
xor
sub
mov
cwtl
fidivrl
pop
mov
jbe
enter
lds
or
mov
mov
push
xor
cld
dec
in
push
cli
or
jg
adc
mov
cs
xchg
sub
add
dec
lods
mov
icebp
pusha
or
mov
loope
pop
mov
mov
sub
adc
movsb
je
jmp
lcall
rcrl
in
dec
push
adc
insl
jne
outsb
push
push
icebp
xchg
push
popa
fisttpl
ret
int3
lahf
sub
dec
push
jnp
mov
sarl
into
push
mov
pop
fucomip
xor
subb
fldl
cmp
ret
fdivrs
lea
divl
sbb
mov
ds
out
jle
mov
ljmp
xor
push
ret
fwait
bound
add
pop
pop
add
pop
cmp
aaa
loope
adc
data16
mov
sahf
inc
adc
lcall
int3
dec
gs
outsb
mov
repz
gs
cs
scas
mov
nop
test
in
aaa
cmpsl
leave
jno
fbstp
inc
ror
mov
mov
andb
aam
inc
mov
movsl
mov
aam
sub
icebp
loope
call
mov
jnp
push
mov
repnz
xchg
mov
sub
adc
jg
dec
lods
ret
andl
mov
insl
imull
ljmp
and
out
jle
movsbl
lret
ret
mov
leave
popf
mov
js
test
pop
sti
jg
cld
lods
and
dec
push
jne
sti
iret
xchg
pop
mov
add
mov
pusha
aaa
ret
dec
int
shrl
mov
xchg
int
xor
pop
jno
inc
fsubl
fnstsw
jno
ret
pop
xchg
jnp
xor
out
lahf
mov
test
xor
rep
fs
daa
or
negb
lods
cld
lret
stos
int3
push
jecxz
push
pushf
inc
ds
repnz
gs
subb
xchg
mov
xchg
iret
call
mov
and
push
adc
push
scas
pop
dec
push
mov
data16
sbb
sti
shl
inc
mov
or
into
aam
cmp
enter
fbstp
test
enter
pop
xchg
cmp
sub
and
jns
jp
dec
js
xchg
bound
out
out
add
xchg
daa
and
push
add
inc
movsl
test
push
mov
mov
mov
pop
xor
add
jl
nop
push
int3
nop
es
mov
and
pop
cmpsl
sbb
mov
fwait
pop
push
sub
mov
xchg
push
lock
cs
jne
mov
inc
cmpb
repnz
mov
in
mov
icebp
and
mov
jnp
or
mov
popa
push
pop
movsl
add
les
repnz
cmp
push
and
sub
jnp
or
enter
call
mov
pop
sbb
mov
jl
mov
dec
jecxz
call
mov
call
pop
loop
jns
cmpsl
nop
ss
mov
mov
ds
stos
cltd
xchg
aas
adc
lds
into
mov
call
pop
dec
mov
push
pop
pop
fidivrs
lods
nop
ds
or
jp
das
dec
iret
adc
test
loopne
pop
pop
dec
test
and
int
in
shl
jl
lret
push
loopne
leave
cmp
loop
test
nop
jg
mov
fsts
dec
mov
out
pop
cmc
dec
repz
push
and
dec
or
sahf
mov
lahf
sbb
pop
arpl
imul
mov
sub
add
mov
sub
pushf
mov
adc
pop
popf
outsl
mov
int3
cli
adc
cs
insl
jecxz
jb
int3
cmp
sbb
loop
aas
xchg
test
lcall
xlat
jl
or
stc
dec
mov
roll
and
in
push
mov
test
jge
jmp
mov
rcrl
call
lods
cmc
enter
out
rolb
test
loopne
lcall
outsb
pusha
pop
dec
popf
cmp
inc
decl
xor
mov
sub
sarb
incb
test
arpl
pop
mov
mov
adc
data16
aam
loopne
mov
adc
lea
push
lock
out
sbb
outsl
and
imulb
sub
imul
mov
mov
add
xchg
xchg
bound
out
aas
cmp
pop
mov
fwait
xor
push
inc
roll
push
mov
loop
add
mov
imul
xor
shll
or
aam
mov
mov
mov
mov
inc
jae
sub
sub
push
xchg
push
fwait
xchg
push
xchg
ret
imul
mov
test
fstps
loop
jb
or
out
push
mov
mov
ja
jns
cmpsb
push
add
xor
sbb
pop
test
add
mov
and
push
and
mov
into
pop
xor
int
ds
or
xor
add
icebp
push
jae
fbstp
mov
push
inc
call
dec
jp
xchg
dec
test
push
jo
sub
jns
repz
lods
adc
push
add
sub
cli
test
sbb
mov
sbb
fcoms
mov
dec
mov
mov
test
dec
ret
movsb
test
xchg
es
popa
xor
mov
jp
mov
sub
add
and
xchg
inc
mov
out
fcoms
test
inc
add
pop
push
xchg
int3
and
push
sarl
pop
xor
push
subl
inc
push
mov
testb
push
push
pop
sub
push
inc
cmp
mov
push
xlat
sbb
insb
jne
loope
mov
dec
cld
cmp
push
jbe
push
push
sbb
shlb
sbb
cmpsl
cmp
jbe
xchg
push
gs
add
repnz
xchg
loope
popa
and
mov
lods
pop
imul
mov
aam
sub
out
ljmp
std
sub
and
dec
mov
sub
cmpsl
mov
sub
inc
rsqrtps
int
mov
cld
jge
sbb
test
mov
xchg
xchg
jp
inc
cmp
xchg
lods
push
dec
sbb
sti
sbb
roll
or
addr16
push
jecxz
pop
dec
aaa
xor
iret
iret
add
mov
mov
mov
lds
das
xlat
test
push
add
push
scas
xchg
pushf
jns
mov
dec
pop
jl
mov
dec
jne
inc
mov
fdivp
dec
mov
mov
lea
hlt
cmp
aaa
mov
daa
pushf
mov
loop
in
pop
fldt
icebp
bound
cmp
imul
outsl
mov
fisubrl
rcrl
lds
dec
xor
out
jmp
sbb
inc
push
aad
ficoms
sub
dec
mov
outsb
xor
out
mov
dec
ds
push
adc
and
sbb
or
adc
mov
pushf
push
insb
shl
inc
jno
xchg
add
push
inc
and
rep
xchg
mov
and
xchg
ret
sbb
jle
lret
xchg
jcxz
adc
mov
pop
cmp
mov
repz
sbb
sub
jb
pop
pop
shrb
fdivs
mov
cs
sti
test
jb
xchg
outsb
daa
mov
sub
ja
icebp
xlat
pop
aam
gs
pop
inc
mov
adc
lods
or
ret
cmp
out
inc
mov
xor
sub
dec
ret
shll
test
xchg
insl
push
mov
push
cld
aaa
jl
xchg
and
mov
sub
or
xchg
hlt
mov
push
sub
scas
call
adc
mov
xchg
pop
test
jmp
mov
sub
jge
in
repz
push
xchg
lahf
test
inc
jecxz
loope
outsl
jle
fstpl
test
pop
xchg
mov
mov
mov
inc
adc
cld
dec
movsb
sub
lods
sub
lret
mov
out
loope
jno
mov
dec
test
push
sahf
cmp
mov
lea
inc
push
shlb
mov
mov
cld
adc
jnp
fwait
mov
in
arpl
stc
ja
jp
sbb
cmc
insl
cwtl
shll
movsl
sti
and
insl
stc
imul
fs
shlb
pop
mov
sbb
cmp
data16
inc
dec
scas
xor
and
mov
and
push
roll
cld
out
sbb
adc
add
sub
lods
xor
int
mov
or
ret
or
inc
cmp
add
andl
addr16
popf
mov
es
mov
pusha
addr16
shrb
inc
cmp
insl
je
int3
ds
mov
mov
out
lods
fcmove
push
jmp
idivl
dec
ljmp
adcl
ficoms
call
in
into
pop
or
nop
test
loope
popf
add
xor
or
mov
lock
aam
jnp
fwait
xlat
sbb
mov
adc
mov
xor
ret
ficoml
cmpsb
cwtl
push
in
movsb
mov
lahf
mov
mov
mov
xor
ja
push
lods
cmp
xchg
icebp
cmc
push
inc
mov
jb
push
enter
mov
cmc
jl
fldcw
fidivl
xchg
divl
inc
aad
imul
cmpsb
sbb
push
insb
loope
mov
aaa
hlt
jb
orps
xlat
fsts
movsl
xor
or
jmp
imul
mov
and
pop
pusha
out
enter
mov
mov
and
arpl
es
enter
mov
add
cs
mov
rcrl
inc
sahf
call
lods
movsb
enter
pop
xchg
shlb
sti
imulb
or
add
jle
fwait
repz
mov
in
sub
and
ja
mov
dec
sarb
into
bound
mov
pop
aam
bound
dec
cmp
testb
popw
addr16
scas
outsl
mov
cmc
mov
or
and
jmp
fcmovnbe
cmpsb
ja
and
adc
ljmp
scas
out
mov
jmp
mov
mov
cmp
xor
jge
jno
xchg
push
jg
cmp
dec
mov
push
push
push
test
leave
lock
cmp
mov
fadds
ja
ret
leave
mov
ficoml
cwtl
sbb
lods
sub
scas
pop
pop
pop
mov
xorb
xchg
aaa
sub
negb
jne
jnp
mov
xor
xchg
stc
test
xchg
sarb
inc
sub
adc
es
and
pushf
dec
xor
dec
clc
or
out
cmovge
cmp
xor
jmp
mov
sbb
dec
jp
mov
stos
subb
cmc
leave
mov
sub
icebp
mov
cmpsl
sub
dec
stos
stc
fsubrp
ss
jge
pusha
xchg
in
lcall
scas
and
sarb
adc
repz
cmp
and
push
sahf
into
cmpsl
mov
and
mov
pop
outsb
lret
enter
test
lods
adc
sbb
or
movsb
adc
sub
cmp
inc
mov
mov
xor
pop
leave
out
fistl
push
lods
ss
shlb
fsubrl
ret
lods
outsb
sbb
rcr
fisttpl
add
jbe
jmp
pop
lret
cmp
inc
sbb
add
mov
test
lahf
push
jp
xor
lea
int3
xorl
test
xchg
mov
inc
cmp
orl
push
stos
ret
add
add
sti
pop
mov
pop
sti
sub
ljmp
rorb
addr16
mov
notl
sahf
lods
out
addr16
lret
mull
aas
dec
ret
mov
or
pop
testl
jae
paddsb
ficompl
mov
aam
aam
sub
mov
add
sub
xchg
notl
jge
sub
fdivp
mov
push
stc
pop
insb
mov
push
and
je
scas
or
push
xchg
sti
ss
mov
pop
jno
mov
mov
repnz
inc
xorb
jle
mov
in
hlt
xlat
lods
inc
popf
inc
cmp
out
adc
in
iret
mov
iret
mov
adc
pop
aam
shrb
dec
ret
and
mov
cwtl
outsl
mull
dec
sbb
loopne
push
jecxz
in
cmp
loope
xchg
loope
cli
mov
testb
mov
loope
lods
jle
addr16
mov
push
insb
add
push
jmp
xor
cmpsl
scas
adc
xchg
dec
into
adc
adc
mov
pop
and
shrl
adc
mov
shrb
or
and
fistps
icebp
in
push
cld
fincstp
xlat
cld
pop
cmp
std
cmp
scas
mov
into
outsl
lods
arpl
jb
mov
mov
scas
adc
cltd
dec
mov
scas
shll
push
sysexit
and
jl
sub
cmp
push
pop
test
xchg
mov
ret
int3
mov
repz
fisubl
insl
inc
shl
adc
adc
fisttps
jmp
fmuls
les
adc
std
fwait
cmpsl
mov
xor
repz
xor
dec
fisttps
sbb
inc
fists
cmpsl
das
into
lock
cld
es
xchg
push
sub
sub
ficoms
sbb
fldenv
adc
pop
les
cmpsb
xchg
add
gs
jle
jo
cmpsl
add
push
aaa
inc
cli
or
loopne
fists
push
or
test
jle
cmp
imul
rolb
mov
stos
and
xchg
notb
outsl
mov
xchg
xchg
mov
push
and
adc
dec
cmp
mov
int
dec
cmpsl
sti
mov
pop
data16
push
pop
cmp
xor
addr16
adc
pushf
js
mov
xchg
stos
fsts
repnz
jge
push
or
mov
xor
enter
pop
lcall
dec
mov
pminsw
sbb
mov
xlat
add
mov
lcall
cltd
loope
xchg
sti
sahf
pop
dec
nop
mov
iret
pop
test
mov
je
mov
stos
mov
adc
insl
rorl
aam
cmp
outsb
in
test
sub
test
out
xor
scas
daa
ret
rcrb
inc
fidivl
inc
shl
cltd
inc
inc
out
cmpsl
lock
outsb
adc
xor
ljmp
push
sbbb
dec
arpl
mov
negl
imul
push
lcall
xor
ja
jne
stc
inc
cmpsb
and
int3
and
incl
jno
xchg
pop
jno
adc
dec
xchg
add
icebp
mov
sbb
je
cld
repz
mov
inc
scas
stc
sub
adc
pop
out
adc
mov
imul
aaa
push
dec
pusha
xor
lret
push
mov
mov
xchg
jecxz
xchg
pusha
xchg
sub
in
fsubs
adc
cmp
cwtl
jns
jb
scas
lahf
xor
adcl
mov
add
divl
xchg
int
cwtl
and
arpl
dec
mov
repnz
xchg
mov
mov
fwait
ror
outsl
sahf
fistpll
in
or
inc
stos
xor
mov
adc
xchg
call
inc
inc
pop
dec
jle
out
dec
adc
jmp
lcall
mov
out
lods
mov
inc
sub
mov
iret
sahf
xchg
mov
sar
shr
sbb
cmp
push
mov
insl
xor
in
fcoml
lret
loop
mov
aaa
xchg
cmp
add
jbe
xlat
xchg
and
mov
test
mov
int
mov
scas
or
xor
mov
imul
push
sbb
dec
nop
xchg
push
pusha
dec
ja
mov
sub
sub
or
cs
sbb
divb
push
ss
aad
dec
push
frstor
loop
inc
out
in
pop
pop
fisubrl
xor
sbb
inc
sbb
and
jmp
out
add
xchg
popa
push
sub
imul
or
push
sbb
dec
cld
dec
test
lahf
jle
sbb
incl
jle
aaa
jl
add
jp
mov
lods
sbbl
xor
out
pop
cmc
push
daa
movsb
mov
stc
lret
mov
cli
stos
fmulp
mov
and
dec
xor
pop
pop
push
sbb
jmp
push
stos
movl
xor
insl
movsb
insl
xchg
aad
inc
pop
popf
subl
and
fwait
sub
sahf
or
push
xchg
jno
fsubrs
add
ljmp
mov
pop
sbb
ret
adc
xlat
or
mov
ja
sbb
xchg
clc
and
and
mov
jnp
test
ss
data16
xchg
nop
repz
push
sub
dec
push
psrld
cmp
mov
das
sbb
mov
pop
insb
data16
data16
xor
jmp
mov
sub
mov
fiaddl
xchg
xchg
movsl
xor
mov
xor
gs
dec
pop
jo
out
or
inc
push
aam
mov
bound
lret
mov
lock
or
aad
mov
std
mov
aas
push
loope
push
aas
mov
test
shrb
in
xchg
cld
mov
lea
push
cmp
stos
cwtl
add
mov
xchg
jle
add
cmpsb
adc
insl
mov
rolb
jno
jmp
push
fsubrp
xchg
push
adcl
cli
mov
or
jnp
and
inc
xchg
into
adc
sbb
push
sar
xchg
or
test
loop
dec
nop
faddl
fildl
mov
cld
aam
fwait
inc
paddusb
test
sub
pop
xor
jns
popa
out
lahf
fldcw
out
shll
out
clc
test
inc
pop
xchg
add
ljmp
aaa
in
std
inc
mov
loope
push
notb
fwait
lcall
pushf
pop
das
sti
mov
jmp
dec
sub
mov
push
push
sbb
pop
jmp
into
push
mov
fcomps
inc
faddl
pop
ds
stos
rcrb
nop
inc
rcl
lock
flds
int
shlb
shll
lret
sbb
or
push
testl
or
sub
test
negb
out
cltd
and
test
into
inc
movsb
loope
push
adc
les
rol
fwait
mov
pop
mov
es
outsl
ljmp
xchg
xchg
mov
out
cmp
int
into
xchg
mov
or
aad
xchg
andb
rcll
sbb
sarl
jae
subl
push
xor
test
je
push
push
pop
sub
add
mov
sti
cmp
out
fs
adc
outsl
pop
leave
das
sbb
mov
pusha
js
and
rcrb
ds
push
dec
insl
popf
lret
mov
pop
in
sti
cli
mov
fistpl
push
loopne
loopne
cmp
cmp
outsb
scas
xchg
jmp
mov
xor
mov
and
mov
hlt
adc
adc
cmp
jl
out
adc
mov
into
mov
fdivs
ret
ss
ffreep
negl
jnp
cmp
aaa
sub
mov
mov
push
jl
mov
fildl
dec
das
push
inc
ret
ret
ficoms
sbb
jne
mov
pop
es
xor
jl,pt
leave
mov
mov
roll
sub
dec
xchg
fadds
sbb
mov
clc
push
out
sbb
mov
popl
dec
in
and
int3
mov
andl
dec
pop
dec
dec
test
mov
aaa
dec
inc
or
daa
mov
pop
jp
mov
add
or
push
fdivrs
xchg
outsb
dec
sub
add
stos
and
fisttps
xchg
stos
or
fimull
ljmp
imul
cli
fldt
or
aaa
dec
xchg
leave
jp
pop
mov
mov
stos
andb
in
roll
clc
mov
mov
add
nop
push
clc
lock
xchg
scas
and
push
adc
inc
pusha
or
add
xchg
sub
or
int
leave
lea
xchg
jne
sti
movsl
mov
xor
imulb
stc
push
adc
std
das
mov
push
xor
push
jbe
fstps
or
mov
mov
out
outsl
lods
adcl
cwtl
fistpll
insl
loop
push
sub
xchg
pop
imull
mov
mov
iret
pusha
lods
dec
push
pop
sub
mov
ljmp
stos
insb
ficoms
arpl
test
inc
fsubp
xor
dec
add
mov
shrb
xor
and
aaa
pop
cwtl
or
jns
xchg
insl
ret
pop
lcall
pop
push
int3
mov
sub
sub
dec
pop
push
xchg
imul
xchg
cmpsb
xor
push
xlat
dec
hlt
mov
sbb
push
fs
paddd
push
xor
mov
xchg
fimuls
subl
pop
pop
std
xor
push
pop
insl
pop
cltd
lea
js
out
int
and
mov
mov
rorl
inc
sub
test
cmovg
jp
jbe
outsl
adc
daa
scas
aaa
cmp
sti
jg
jle
pushf
daa
shrb
loop
or
adc
in
cmp
cmp
xchg
adc
mov
mov
data16
adc
sbb
cs
cld
arpl
cwtl
out
ljmp
fs
push
stos
push
sub
xor
int3
sub
mov
pop
cld
ror
xlat
lcall
add
and
and
ss
loopne
add
in
sbb
sub
stos
out
or
sbb
xchg
data16
testl
aam
mov
test
lret
sub
xchg
jp
sub
pop
pop
ss
shlb
jge
outsl
mov
dec
dec
das
xor
shll
in
filds
sub
or
xchg
jp
dec
xchg
jno
inc
cmpsb
mov
xlat
jl
ret
fsubrl
sub
mov
rcl
cmp
dec
adcb
sarl
test
inc
sub
adc
and
xchg
add
mov
stc
push
add
cwtl
mov
sarb
int3
and
cmp
mov
push
imul
nop
int
jle
dec
push
sbb
inc
arpl
lahf
mov
cmpsl
ljmp
jae
and
mov
mov
push
sbb
sub
test
adc
testl
sub
into
and
pusha
push
cs
and
mov
imul
xor
adc
xorl
enter
sbb
push
andb
cmp
jge
sub
bound
lock
shrd
sti
add
jecxz
jge
icebp
cmpsl
push
and
das
sti
ret
jl
cmp
stc
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
inc
adc
add
out
fnstcw
pop
pusha
mov
les
push
push
push
in
add
int
aad
hlt
test
pushl
stc
rcll
bound
mov
push
inc
pop
outsl
sarl
je
inc
sbb
jb
lahf
stos
sbb
test
cli
scas
loop
stc
add
cmp
mov
das
or
adc
enter
and
mul
mov
cmp
jae
mov
cmp
mov
sti
xchg
sub
sarl
int3
ja
outsl
lods
xchg
mov
push
lea
xchg
inc
movsl
or
ficompl
pminsw
adc
lea
or
mov
sub
mov
xchg
mov
mov
mov
mov
mov
rorl
mov
stos
or
sbb
lods
xchg
and
daa
fistpl
push
sub
imul
sbbl
sub
push
cmp
mov
idivl
cwtl
mov
pushf
cmp
push
in
aam
testl
jmp
cltd
push
in
adc
nop
mov
mov
or
out
inc
cmp
dec
testb
sub
mov
add
cwtl
cmpsb
cmp
in
add
out
jb
sub
fnstcw
pusha
test
cld
cmp
or
gs
jne
add
popf
ret
stos
add
repz
xchg
cld
xor
and
push
mov
daa
orb
pop
jb
mov
or
fidivs
jae
and
jnp
outsl
pop
jp
repnz
mul
in
and
pop
sub
rcrl
loope
jno
ja
les
or
adc
out
add
ret
mov
inc
mov
or
xor
add
jae
adc
mov
lods
pop
mov
sub
inc
xor
aaa
xchg
lretw
ror
popa
movsb
mov
jno
stos
push
mov
ficompl
outsb
popf
in
xor
mov
pop
or
jg
rcll
stos
std
cmp
or
cli
fnstcw
ja
mov
dec
jb
sbbl
sub
mov
test
cmp
bound
sub
lret
shr
testb
jg
and
pusha
repz
ja
int3
lods
cmp
mov
mov
scas
pop
sbb
mov
jne
mov
dec
push
mov
test
jmp
sbb
js
xchg
add
scas
mov
adc
call
sbb
push
xchg
jmp
sbb
fisubs
mov
jne
jno
xor
push
fbstp
fcompl
movsb
sub
adc
popf
sbb
mov
xchg
push
xor
mov
add
pop
das
pusha
push
add
cmp
and
push
xor
cmp
push
negl
lods
jo
push
jmp
ja
push
out
enter
inc
cli
daa
jmp
movups
jl
cltd
sbb
add
jmp
push
into
mov
push
or
fimuls
dec
into
out
pop
sbb
iret
xchg
iret
or
divb
or
jecxz
loop
or
mov
push
xchg
xchg
out
movsb
pop
fstps
adc
mov
push
leave
add
xchg
shll
cwtl
inc
xor
adc
inc
push
jp
lea
inc
pop
mov
mov
cmp
mov
mov
push
cmpsb
sbb
adc
xchg
fsubl
sti
xor
insb
das
pop
ja
inc
xchg
loope
lcall
inc
outsb
cmpsl
addb
popa
xor
cmp
or
fimull
fidivs
cmp
fs
xor
adc
add
xchg
fwait
push
aaa
mov
mov
testb
or
aas
jg
test
rorb
push
loope
jle
mov
scas
pusha
mov
push
adc
fisttps
jbe
ds
ljmp
cmp
jmp
movsb
jns
aas
movsl
cwtl
and
cmp
inc
je
adc
pop
jbe
pop
out
sarb
inc
je
or
sub
jns
stos
xchg
xchg
enter
lret
sbbl
jg
or
xchg
or
adc
aam
ret
add
dec
fimull
mov
movsl
pusha
xchg
inc
jl
push
or
sbb
xchg
cmp
ljmp
xor
and
mov
xchg
mov
lahf
xor
cmpsl
jne
adc
mulb
test
mov
lea
push
fsubl
cmc
xorl
test
lods
stc
xor
std
icebp
jmp
push
ljmp
cwtl
jnp
jl
out
hlt
sub
and
sub
movsl
inc
xor
push
mov
add
imul
pop
in
lcall
cld
fucomip
int3
movsb
mov
and
lds
test
mov
push
mov
sahf
adc
lds
push
pop
mov
pop
jmp
out
mov
fcmovnu
cmpsl
push
and
jno
fld
push
in
loop
loopne
mov
jns
lods
mov
push
in
sarl
adc
mov
jg
xchg
and
mov
and
shll
repnz
jle
and
mov
xor
push
jp
mov
aad
fistpll
xchg
movsb
push
pusha
bnd
cmp
jns
nop
ljmp
out
pop
add
ret
adc
inc
js
daa
fildl
out
cltd
inc
fisubl
out
cmp
jle
loope
jmp
repnz
int
jb
js
mov
cmc
cwtl
repnz
push
fidivs
xchg
out
adc
xor
cld
addb
push
lock
sbb
mov
sbb
sub
ja
sub
jecxz
add
mov
xchg
in
push
sbb
lds
and
lock
sbb
shrb
inc
lock
inc
movsl
mov
fs
popa
jmp
lock
mulb
push
jb
add
mov
sbb
push
and
sub
mov
rorl
icebp
test
inc
push
fisubrs
popf
add
bound
mov
cmp
ljmp
daa
and
mov
pusha
xchg
outsl
nop
jle
test
pop
mov
lcall
pop
mov
fnsave
aad
xor
sbb
stos
sti
cmpsb
or
mov
cwtl
orb
shlb
push
push
int3
cmpsb
add
pop
movsb
and
scas
inc
push
popf
or
sahf
inc
lds
sbb
xlat
insb
out
jecxz
call
push
test
icebp
out
cmovp
cmp
dec
pop
pop
or
cs
dec
popa
cmp
repz
in
pop
int
push
sub
mov
mov
ret
mov
fidivl
dec
clc
jne
sub
mov
loope
xchg
enter
ror
fnstcw
sti
lcall
pop
popa
daa
cmpsb
pop
or
dec
in
loopne
add
cmc
lods
pop
das
xor
inc
mov
cwtl
jae
push
cmp
stc
adc
loopne
gs
test
movsl
lock
fistpll
arpl
lret
adc
inc
and
sbbb
cmp
es
cmpsb
das
inc
pop
xor
test
add
sbb
xor
out
es
insb
or
mov
jo
or
adc
jl
outsl
push
leave
out
and
incb
inc
add
hlt
out
dec
das
or
mov
enter
push
inc
mov
loop
jge
pushf
push
jg
xor
test
dec
inc
gs
imul
rcrl
leave
push
insb
arpl
das
cmpsb
out
push
sbb
or
adc
and
mov
pop
outsl
and
push
add
stos
adc
add
xchg
mov
xor
aam
mov
inc
clc
sar
mov
xchg
pop
add
cmpsl
insl
pop
fldl
lret
lret
data16
adc
pusha
int
push
xchg
pop
repz
aas
cmp
movsl
pusha
dec
and
xor
mov
pop
push
divl
sub
fiadds
fildll
adc
mov
adcl
pop
push
xchg
sub
sbb
mov
push
test
or
add
adc
testl
jne
movzbl
jns
push
leave
js
fdiv
mov
cmpl
gs
movsl
in
dec
fistps
mov
popf
pop
loopne
out
add
xchg
push
dec
cmp
nop
addr16
fdivr
imul
cmp
out
xor
mov
add
gs
fimull
enter
pop
xor
jns
pop
in
cmp
xchg
scas
push
nop
int
popf
dec
jp
outsl
rcl
out
insb
mov
loop
push
sti
jne
add
mov
jne
dec
sub
cmp
dec
push
mov
loope
push
insb
shrd
loop
xor
mov
pushf
imul
scas
fstps
jae
xchg
xor
mov
pushf
cmp
aam
out
scas
aas
out
lods
pusha
inc
mov
mov
xchg
in
fcmovu
ror
into
and
inc
push
loop
insb
test
out
enter
mov
mov
sbb
jmp
fmull
adc
les
clc
push
sahf
and
push
pop
dec
add
xlat
sbb
lods
and
xchg
inc
inc
and
in
xlat
pop
mov
ret
sbb
hlt
ret
pop
pop
xor
jae
mov
sti
push
adc
cld
add
adc
mov
lods
std
movsl
pop
inc
cmpsb
pop
pop
out
xchg
lds
pop
test
mov
subb
push
js
out
cld
xor
movsb
inc
arpl
aaa
mov
push
adc
push
std
xchg
cmp
xchg
mov
lcall
mov
pop
jo,pt
and
jne
lds
fcompp
mov
jns
cmp
pop
mov
adc
js
mov
orb
pushf
xorl
ret
fcoms
jnp
test
jne
notl
ret
jnp
testb
bound
ljmp
push
cmp
pop
dec
int
and
mov
std
dec
loopne
arpl
ss
xor
dec
add
and
add
push
or
jecxz
out
lds
push
js
dec
dec
sbb
sbb
pop
adc
jmp
jns,pn
xchg
in
cs
rcl
call
test
scas
mov
stos
dec
dec
gs
lahf
inc
sbb
pop
in
inc
push
or
pop
sbb
adc
lahf
pop
sub
arpl
jo
jo
xor
in
sarb
cli
push
pop
test
add
sub
lahf
add
fwait
or
inc
inc
pop
aam
je
add
enter
push
dec
out
push
lret
xlat
inc
adc
mov
add
mov
out
jg
cmp
push
arpl
push
jg
push
mov
xor
je
adc
sub
test
and
fwait
mov
call
xor
inc
jge
push
push
enter
sub
pop
mov
adc
inc
ror
xchg
jo
out
fisubl
and
and
add
pop
cmp
dec
and
sub
test
push
mov
push
sbb
mov
mov
sarl
cmp
jg
outsl
mov
fnsave
cltd
push
dec
mov
int
fcomi
in
imul
in
cli
fs
repz
push
neg
adc
mov
test
lret
sbb
or
outsl
in
mov
clc
pushf
pop
mov
stc
aas
iret
out
inc
imul
add
dec
and
mov
sbb
aas
xchg
fadds
mov
cmpsl
iret
add
push
and
scas
cmpl
jp
negl
movsb
loope
ss
cmp
popa
cmp
call
xchg
jge
xor
pop
adc
in
ret
fcoml
jg
dec
pop
push
inc
jnp
jp
pop
xchg
push
fsubrs
jb
pop
jno
inc
int
push
cwtl
and
dec
sbb
out
ss
pop
movsb
xchg
or
fisttps
repz
jecxz
pushf
flds
iret
cmp
loopne
xchg
out
lret
das
push
fstpt
xchg
mov
lods
orb
insb
or
cmp
pop
add
lret
out
pushl
jmp
mov
xor
and
mul
and
lahf
into
fdivrs
push
xchg
aad
xchg
add
aaa
lods
sbb
mov
dec
mov
out
pop
add
dec
nop
in
mov
sbb
inc
into
lahf
or
enter
fidivs
das
cmp
mov
popf
add
add
aam
inc
call
call
push
out
xchg
sbb
adc
roll
xchg
cld
sbb
mov
lahf
add
mov
jbe
mov
out
cld
jg
rcrl
inc
mov
fdivs
hlt
adc
mov
out
sub
popa
hlt
imul
cmp
adc
out
jnp
pop
lock
pop
push
jecxz
inc
mov
pop
data16
cld
sub
or
adc
testb
xor
fisubl
call
lods
repnz
in
mov
cmp
rcll
imul
int
push
xor
int3
leave
fs
add
sti
jbe
pop
imul
fsubs
mov
les
mov
sahf
cmp
sahf
or
dec
sbbl
mov
add
xchg
outsb
mov
mov
es
cmp
cli
mov
xchg
inc
cltd
mov
sbb
mov
in
adc
aas
push
stos
shll
ret
iret
lret
mov
or
mov
push
mov
sub
iret
pusha
push
inc
dec
push
push
mov
sbb
lcall
adc
xor
xor
xchg
rcr
pop
inc
xchg
inc
sub
and
popa
pop
lods
ljmp
mov
or
or
mov
push
stc
call
data16
xchg
negl
adc
and
jg
mov
inc
add
loope
pop
mov
adc
sbb
int
lret
inc
pop
mov
mov
add
cwtl
leave
int
sbb
sub
mov
imul
push
in
sub
or
lahf
sbb
pop
sti
push
or
fsubrp
scas
gs
or
je
jbe
in
repz
addr16
or
test
sub
iret
stc
scas
cmpsb
mov
lock
daa
push
sbb
test
ret
lods
mov
es
pop
mov
add
push
sub
mov
jl
rclb
call
shlb
mov
and
pop
or
inc
dec
cmpsb
call
jb
stc
sub
or
addr16
cmpb
rorb
sbb
mov
cmp
repnz
dec
lods
cmp
cmp
subb
jo
xlat
dec
push
and
int
fistpl
les
mov
push
aaa
xchg
dec
leave
icebp
mov
in
out
idivl
xor
enter
push
push
add
and
sbb
mov
sti
mov
mov
mov
xchg
std
nop
adc
nop
sbb
mov
pop
xor
fcompl
notb
mov
pop
add
cmp
push
out
sti
or
ds
fcmovbe
iret
cld
fcmovnu
mov
pop
imul
add
xor
adc
leave
jno
sub
adc
iret
jbe
movsb
clc
mov
jnp
add
aam
sub
jne
lahf
xor
sub
mov
jle
dec
push
mov
jp
add
sub
out
pop
fstpt
or
sbb
ds
xchg
es
jecxz
in
sub
inc
lods
clc
push
pop
xchg
pop
lds
fcmovnb
enter
mov
jg
push
mov
mov
rclb
fnsave
add
add
inc
lea
mov
or
lret
and
popf
pushl
jecxz
inc
je
cld
mov
lea
cmc
sbb
out
pop
xor
pop
cwtl
or
loopne
subb
aam
lods
adc
out
jae
add
push
jne
cmp
cmc
fcoms
push
dec
xor
dec
fnsave
sarl
testb
fistps
xlat
push
scas
mov
cmp
js
sub
add
jg
andl
fnsave
loope
jecxz
add
insl
pop
pop
push
xchg
insl
mov
and
cmp
xchg
pop
mov
mov
jnp
and
lcall
and
mov
sarb
jns
out
push
sub
add
ds
sub
cmp
or
or
dec
sti
shl
xchg
lret
adc
call
stos
jl
or
xchg
lret
mov
mov
pop
xor
inc
dec
adc
hlt
add
or
mov
xchg
out
and
mov
inc
push
out
xor
movsl
test
jb
es
in
xchg
lahf
ficompl
out
mov
pop
xor
leave
testb
imul
fildll
ret
clc
xchg
push
or
mov
stos
push
sbbb
or
sbb
mov
test
mov
adc
dec
add
mov
mov
test
and
outsb
dec
mov
cli
out
xchg
mov
adc
movsb
push
sub
lock
push
sbb
repz
fcomi
fwait
sbb
cmpsl
dec
or
or
cmp
xor
inc
stos
outsb
test
stc
xchg
sub
ja
push
lret
jmp
popa
rclb
jle
addr16
mov
sub
push
or
inc
cmpsb
add
scas
push
sub
outsb
mulb
repnz
pop
cmp
push
test
paddq
or
in
mov
xchg
mov
shll
mov
push
mov
orb
lods
and
pushf
ljmp
or
cmc
mov
popf
mov
loop
cs
add
cltd
outsb
test
add
insl
add
mov
inc
cmp
decl
jb
lret
cli
or
pushf
inc
arpl
add
mov
je
xchg
add
mov
pusha
add
mov
push
add
and
cwtl
gs
mov
and
mov
fs
inc
cs
sbb
push
dec
lcall
push
out
movsl
and
push
loopne
inc
jle
arpl
je
arpl
decb
pop
mov
les
xorb
loop
xchg
mov
add
icebp
js
inc
fldcw
fbld
sbb
das
sbb
pop
popf
setbe
push
sub
lret
test
xchg
shlb
mov
cmp
pop
xor
jne
push
scas
in
dec
lods
and
aas
and
movsl
cmp
bound
ds
pop
outsb
pop
jno
push
mov
adc
nop
lret
adc
out
out
out
pusha
jnp
fsubs
sbb
dec
pop
dec
lahf
push
mov
jo
mov
jns
pop
adc
inc
std
mov
xchg
test
aaa
jne
and
jbe
int3
inc
ljmp
or
and
pusha
mov
and
and
mov
ds
cmp
xchg
clc
clc
pop
imul
pop
cmp
or
adc
test
ds
nop
movsl
das
out
dec
dec
ja
inc
xor
xor
mov
in
xchg
and
ss
dec
push
lods
push
dec
loop
fbstp
cmc
fidivrl
push
ret
insb
xor
xchg
int
jno
outsb
cmpsl
xchg
push
cmp
pop
pop
sbb
push
sahf
mov
cmp
movsl
aaa
dec
stos
mov
and
out
stos
loop
dec
add
cltd
movsl
push
cmc
push
push
rsm
add
push
ret
jle
fwait
jno
shlb
add
jg
gs
popf
leave
rcll
in
jbe
js
jnp
push
mov
in
cmpsb
jmp
mov
mov
add
mov
add
or
xor
add
cmp
sub
fists
add
and
sti
jl
push
js
mov
mov
sbb
cmpsl
mov
push
mov
shl
adc
xor
imul
mov
lcall
inc
inc
add
jb
push
std
ja
sti
dec
scas
pop
lods
pop
xchg
cmp
in
jmp
jb
movsb
jae
enter
adc
dec
arpl
mov
push
jecxz
dec
loopne
mov
push
adc
lret
lret
pop
mov
loopne
mov
iret
pusha
clc
dec
cmp
sarl
mov
sub
adcb
pop
jns
jle
adc
or
inc
mov
adc
mov
jno
insb
xchg
sahf
xchg
mov
dec
cmpsb
pmaxub
fisttps
jp
cmpsl
pop
aaa
sbb
repz
lcall
inc
lcall
outsl
pop
sbb
fimull
adc
lret
mov
push
xchg
cltd
sub
adc
xlat
fcmovnbe
jmp
aas
cs
dec
add
bound
mov
adc
add
sbb
arpl
sbb
movsb
or
in
mov
aad
shll
push
shlb
test
jecxz
dec
add
scas
aad
nop
leave
aad
or
ljmp
sbb
or
inc
in
jne
and
sbb
pop
pop
dec
jecxz
xor
pop
movsl
das
inc
test
and
cmp
cmp
ljmp
mov
adc
addr16
insb
or
pop
enter
xchg
sub
pop
mov
and
mov
or
push
sarb
push
jae
push
repnz
jecxz
popa
sbb
gs
mov
xchg
mov
pop
inc
inc
mov
inc
je
inc
sbb
push
lret
dec
xor
bswap
xchg
xor
mov
scas
sbb
push
jns
mov
loope
jmp
jns
dec
outsl
push
and
jle
outsl
lret
and
test
push
inc
jg
aam
and
ret
or
pop
and
rolb
iret
add
int3
mov
adc
pusha
imul
ljmp
fs
and
pop
cwtl
pop
cmpsl
xor
sub
dec
in
cmpsl
or
jmp
mov
cmp
mov
jb
out
pop
cmp
sub
sbb
mov
cmpsb
ss
mov
add
push
orl
cld
sub
mov
and
fisttpll
mov
clc
add
je
inc
movsb
mov
mov
hlt
imul
stc
pushf
jb,pt
sahf
in
fdivrl
xlat
pop
mov
mov
out
add
daa
sbb
push
pop
pavgw
mov
dec
stos
cmp
daa
mov
fdivrl
pop
jle
jb
inc
jb
sub
enter
sbb
test
fxch
sub
cwtl
jno
lock
out
ds
cmpsb
cs
and
dec
int
mov
xchg
gs
mov
iret
mov
xacquire
cmpsb
dec
loopne
out
and
mov
adc
xchg
iret
lret
push
dec
jae
outsl
inc
out
outsl
cmc
xchg
sar
adc
sbb
clc
adc
xchg
pop
xchg
add
std
push
cld
mov
sbb
jb
stos
imul
pop
addl
mov
xchg
mov
aaa
adcb
into
inc
icebp
jl
xchg
cmp
push
mov
loop
and
xor
je
jne
icebp
dec
cmp
enter
iret
sub
movsb
xor
mov
pop
iret
enter
rdpmc
aaa
mov
mov
je
add
mov
outsl
rol
jns
pop
jbe
callw
xor
inc
ja
outsl
ret
mov
xor
sbb
xchg
cltd
aam
inc
mov
xor
test
mov
rolb
xchg
and
aad
mov
stc
lret
cmc
inc
cmp
inc
fmuls
outsl
jle
ds
push
negb
xor
pop
stos
out
mov
mov
xchg
xchg
daa
push
inc
pop
mov
mov
fnstsw
aas
into
gs
loopne
daa
add
jle
mov
lock
push
imul
dec
pop
pop
jecxz
dec
push
xchg
fwait
neg
sbb
push
out
pop
sub
xchg
das
stc
pcmpgtb
mov
inc
jmp
repnz
mov
sbb
dec
sub
inc
mov
mov
mov
es
loop
add
dec
in
sar
loope
jl
jne
insl
mov
cmp
cmpsl
push
dec
xchg
test
push
into
ret
fs
lret
push
add
mov
cmp
ret
in
fnstcw
mov
loope
mov
and
lods
aad
sub
fcomi
fdivs
outsl
push
insl
sub
addr16
fistl
xor
xchg
cltd
call
lahf
loope
dec
mov
mov
lods
and
loopne
das
xor
mov
xchg
dec
sbb
icebp
sbb
nop
shll
jp
add
cld
push
fistpll
pop
xchg
div
fs
or
or
test
ret
inc
push
scas
sbb
and
sub
sub
aas
fnsave
es
ss
add
add
test
int
aaa
add
push
shll
lcall
mov
push
and
loopne
pop
xor
test
ret
push
inc
ret
push
lock
lock
mov
fidivrs
or
mov
jb
pop
lods
jecxz
jle
push
mov
mov
leave
and
push
adc
cmpsl
jns
jns
shl
dec
insb
xor
ja
leave
add
sti
fildl
hlt
mov
xor
push
pop
in
jnp
fldcw
pop
xor
xor
xor
je
rorl
push
lock
sub
pop
in
xchg
xchg
push
adc
icebp
leave
in
pop
dec
loop
ss
xor
sti
cmp
idivb
jbe
gs
push
mov
add
push
push
insb
arpl
inc
xchg
in
stos
scas
fmuls
pop
jb
inc
push
push
sbb
sbb
orb
pop
data16
adc
cmpsb
sarl
or
xchg
iret
nop
mov
push
iret
shl
inc
in
mov
xor
sbb
pop
mov
mov
pop
push
add
fmul
lret
sub
ret
add
out
mov
roll
pushf
mov
cltd
mov
jmp
lret
loope
ja
mov
or
imul
stc
jge
xchg
aaa
mov
inc
ds
test
inc
fwait
mov
insl
movsl
jne
adc
gs
mov
fcompl
jb
test
bound
pusha
ljmp
ja
pop
imul
outsb
data16
sbbl
fld1
xlat
cltd
imul
lods
push
xor
out
inc
fisttps
leave
daa
and
dec
call
ds
xchg
xlat
std
and
lahf
sbb
sub
inc
push
int3
cmp
mov
jp
inc
addr16
mov
and
rcll
push
xchg
cwtl
jne
mov
adc
mov
outsl
sub
adc
mov
ficoms
popa
fistpl
je
cmp
add
cmpb
jp
call
cmp
sbb
out
jo
ljmp
les
hlt
test
or
test
pop
push
fwait
push
dec
dec
out
int
cld
cmpsl
mov
jl
mov
jg
cmp
movsl
mov
mov
das
cmp
scas
cs
xchg
or
jl
lret
xchg
mov
push
mov
mov
jns
push
mov
inc
loop,pn
pusha
add
push
mov
dec
push
mov
aaa
jmp
loopne
fcoml
mov
jp
xor
mov
aas
mov
test
jns
cmpsl
sub
push
mov
push
sub
pop
ljmp
adc
adc
or
dec
jne
pop
sbbb
mov
push
push
jo
cmp
jg
leave
gs
cltd
mov
popf
inc
and
xchg
cmp
int
bound
aad
or
mov
sub
sbb
jns
add
dec
outsl
push
mov
hlt
mov
xchg
repnz
add
data16
mov
pop
xor
imul
mull
cmc
test
and
xchg
test
dec
cli
cmpsb
cmpsl
loope
add
sti
mov
ret
ret
dec
in
mov
test
int3
sub
push
jne
jbe
les
loope
bswap
adc
js
pop
scas
test
xchg
jle
js
addr16
cmp
icebp
pop
stos
xchg
lods
ss
mov
push
mov
add
xchg
gs
pop
shll
inc
dec
or
insb
cs
and
ffreep
and
es
dec
add
pop
jns
push
sub
inc
xchg
inc
cli
shll
jnp
es
insl
incb
and
sbb
fsubrp
mov
neg
mov
clc
push
mov
jmp
je
rcrl
push
nop
push
or
jbe
dec
int3
jb
lret
push
xchg
pop
xchg
xchg
pop
addr16
leave
pop
jbe
loopne
cmp
jge
mov
movsl
rorb
mov
pop
add
sub
ret
into
lahf
adc
pop
es
cld
push
cmp
imul
and
mov
popa
add
cmpl
in
popf
int
xchg
out
sarb
cmp
push
jmp
andb
mov
sub
adc
into
push
inc
push
and
xor
dec
pop
subl
add
xorb
aam
lods
ret
mov
fidivrl
or
andb
jb
or
in
inc
imul
mov
aad
sarl
in
adc
xor
or
mov
cmp
mov
xchg
xchg
dec
or
insl
mov
pop
pop
es
stc
outsl
sbb
jl
clc
and
dec
pusha
pushf
lds
mov
jle
lahf
dec
popf
push
je
outsb
mov
imul
xor
imul
jbe
inc
mov
or
bound
push
rclb
stos
add
std
xor
add
cmc
cmp
dec
xor
mov
fs
mov
les
test
mov
hlt
dec
into
push
bnd
fcom
iret
popf
cmc
add
jnp
push
fdivl
lock
sub
in
xor
mov
cmp
mov
or
add
in
notb
mov
mov
js
add
imull
xchg
sbb
lret
inc
push
pop
stos
pop
fisubrl
sbb
fcoml
jnp
adc
add
xchg
inc
lea
jmp
repnz
sbb
mov
cmp
inc
push
mov
xchg
ljmp
jbe
push
sub
lds
imul
bound
js
fwait
xchg
dec
out
jg
or
inc
mov
mov
pop
das
push
and
loope
mov
addr16
add
clc
lcall
imul
lcall
bound
cltd
movsb
adc
int
filds
adc
mov
push
mov
rcrl
shrl
das
inc
xor
push
jne
push
or
cli
xor
mov
in
stos
cmp
out
adc
jnp
lret
cmp
icebp
pop
mov
addr16
and
push
jnp
repz
mov
xchg
push
sub
jp
clc
jge
jl
sub
push
fbstp
lret
rcll
pushl
pop
push
outsl
in
or
add
aad
into
inc
push
pop
fsin
cmc
mov
jecxz
fmul
movsl
je
jmp
sbb
mov
scas
push
adc
std
xchg
inc
ljmp
addb
sbbb
cmp
cs
push
mov
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
lea
and
addl
mov
inc
or
jne
and
mov
adc
sub
mov
cmp
jb
jp
aaa
cmp
imul
shl
aam
cli
stos
dec
ss
and
or
push
and
les
scas
sahf
stos
inc
jle
cwtl
inc
adc
mov
xor
imul
sub
mov
arpl
pop
push
dec
dec
push
out
lret
ror
fadd
test
push
scas
aaa
jmp
out
dec
scas
jmp
int3
and
out
add
repnz
iret
repz
pusha
dec
fisttps
dec
adc
repz
inc
cmpsb
in
sbb
pop
int
mov
dec
jbe
xlat
int
add
inc
push
not
mov
int
lods
mov
and
sbb
fists
pop
xchg
mov
lods
out
push
out
xchg
stos
lds
clc
dec
jne
dec
lea
xchg
push
jo
ds
andb
mov
cmpb
cmpsb
sub
shl
leave
dec
ds
out
mov
pop
repz
imul
sbb
xor
sub
ljmp
in
adc
daa
cmp
testl
adc
push
movsl
js
call
lods
pop
adc
push
xchg
adc
int
and
xchg
xchg
cld
sbb
jb
loope
jne
xlat
xchg
dec
sbb
push
and
push
xchg
jne
xchg
push
stos
or
cmp
cmpsb
fistpl
sbb
ds
movsb
call
lret
out
push
arpl
pop
ret
inc
xor
leave
jb
adc
fwait
je
jp
jg
xchg
dec
ss
lods
add
rcrb
xchg
lahf
rol
je
push
sarb
rcll
ljmp
jnp
jnp
clc
mov
repz
lods
jl
data16
add
cwtl
pushf
outsl
arpl
adc
dec
cld
mov
lcall
inc
xchg
xor
xchg
jns
add
mov
jle
add
insb
cmpl
mov
sbb
jl
xchg
int
addb
std
adc
sbb
pop
xor
imul
or
shr
pop
sub
shll
jae
or
aam
loope
loope
jbe
dec
push
rcrb
lahf
lods
outsl
fucom
and
dec
mov
repnz
cmp
mov
ljmp
mov
jp
jnp
hlt
dec
inc
cld
fstl
fsts
pop
sub
pop
shlb
cli
imul
fbld
push
notb
mov
push
xchg
xor
cmp
ja
loope
cmp
mov
pop
ja
mov
shl
movsb
push
bound
cmp
sbb
push
mov
mov
jbe
mov
sub
nop
es
dec
sbb
xchg
push
xchg
andl
pop
add
fwait
out
les
in
jp
push
cmpsl
enter
mov
js
xchg
mov
inc
sbb
mov
sarb
add
push
shll
lods
or
sub
cmp
push
cltd
sbb
cmpsb
in
test
popa
push
out
mov
fcoms
mov
ds
in
lahf
adc
xchg
pop
lods
adc
bound
out
inc
mov
xchg
cmpb
outsl
sbb
rcr
rorl
aad
adc
push
ret
xchg
and
mov
cwtl
fdivrs
daa
add
dec
pop
iret
fwait
insb
jle
mov
cwtl
scas
dec
mov
into
xchg
or
pop
mov
mov
lds
jnp
adc
xor
cmp
popl
les
incl
mov
cmc
out
fadds
mov
xor
aas
ljmp
adc
mov
xlat
mov
inc
or
loope
xor
mov
and
lds
push
push
inc
mov
inc
or
mov
adc
sbb
xlat
cli
rclb
rcr
mov
and
clc
cmp
pusha
inc
adcb
pushf
inc
orb
or
fisttpll
adc
push
jg
adc
cmpsl
mov
and
cmp
repnz
xor
cmc
mov
and
or
mov
xor
and
movsb
mov
arpl
aaa
pop
fs
jle
movsb
sub
sbb
jbe
sbb
push
pop
dec
sub
jbe
push
jmp
sub
out
loopne
mov
dec
jp
iret
inc
pop
mov
aaa
out
fidivl
movsb
pusha
dec
dec
imul
je
push
inc
or
mov
mov
xchg
lds
xor
std
adcb
dec
arpl
test
repz
dec
jmp
inc
sbb
pop
lock
pop
dec
cmovae
mov
push
sahf
mov
xor
scas
leave
jns
movsl
cmc
nop
jne
mov
push
out
xchg
addb
mov
inc
cltd
std
sub
in
scas
push
xor
mov
push
xchg
repz
mov
add
test
ficompl
cs
dec
insb
cmc
jo
mov
jbe
jno
outsb
or
jbe
push
leave
fldenv
test
aad
adc
adc
ljmp
mov
xor
xor
call
insl
out
or
in
mov
gs
inc
inc
push
cs
repnz
push
loop
js
stos
stos
sub
pop
sbb
xchg
imull
ds
jmp
movsb
push
enter
push
inc
or
xor
outsb
push
mulb
dec
push
sub
or
or
add
movsl
xchg
fistl
arpl
loopne
loope
leave
jbe
push
les
pop
out
and
cpuid
iret
clc
or
xchg
ja
mov
rcr
sub
mov
ret
jge
out
fstps
mov
mov
cmp
dec
add
stc
or
add
lods
pop
dec
jo
cmpb
sti
jo
adc
dec
or
jne
pop
sub
push
dec
jge
loop
mov
divb
mov
push
sar
aaa
dec
ja
outsl
push
call
popa
jp
lcall
hlt
jo
and
xchg
push
mov
adc
xchg
mov
daa
xchg
xor
pop
mov
stc
mov
xchg
ss
jmp
pop
mov
jo
pop
dec
lods
or
add
into
and
std
in
das
pop
imul
cmpsb
push
test
xlat
ljmp
ljmp
das
aad
insb
test
jae
lods
and
sahf
or
push
js
arpl
push
sbb
in
in
xlat
sbb
xor
pop
ljmp
ss
outsb
push
ja
sbb
sti
jbe
pop
sbb
fs
add
xor
sbb
push
mov
rcll
das
pop
sarb
in
inc
adc
xlat
test
pusha
cmp
pop
jmp
es
xor
inc
or
stos
lret
cmp
rorw
clc
loop
mov
aam
lret
mov
mov
or
cmp
mov
jg
xchg
jmp
mov
and
mov
icebp
fmuls
clc
shrl
jo
mov
mov
inc
stc
test
outsl
fbstp
test
or
jp,pt
dec
sbb
int3
imul
in
int3
dec
mov
dec
mov
mov
cwtl
cmp
dec
shrl
mov
and
pop
and
cmp
outsb
jle
mov
jge
cmp
xchg
das
sub
ds
jb
stos
ret
bound
in
push
lahf
add
mov
orw
jns
sub
lea
pop
and
or
push
push
cwtl
mov
xlat
outsl
loopne
aas
int3
repz
push
inc
pop
ret
rorl
xchg
and
xor
mov
jb
iret
xchg
push
fwait
push
and
outsb
cmp
fmuls
data16
dec
adc
add
movl
into
imul
mov
fsubrl
adc
sahf
lea
cmc
data16
imul
mov
mov
rcl
jl
or
ss
adc
pop
xor
fwait
mov
fwait
in
dec
pop
cmp
sbb
fcompp
iret
cmp
aas
fsts
test
cli
in
pop
add
les
and
lods
lret
inc
add
mov
enter
jp
and
dec
lock
icebp
and
adc
cmp
push
lret
push
cmp
or
jae
clc
lock
lahf
sbbb
por
adcl
lret
sub
cmp
add
push
sbb
mov
lock
notb
sbb
ja
jne
jecxz
xchg
add
inc
jge
lahf
add
vmovshdup
aad
ds
js
adc
loopne
cmp
fwait
sbb
arpl
mov
pop
cwtl
cltd
mov
call
mov
cwtl
movzwl
adc
ljmp
adc
mov
inc
xchg
je
dec
mov
push
outsb
pop
pop
mov
xor
push
pop
loope
sbb
pop
aas
test
sub
dec
mov
inc
and
sub
jbe
stos
lods
sahf
inc
sbb
inc
add
xlat
xlat
jl
mov
pushf
mov
mov
ljmp
aam
pop
mov
adc
fisttps
mov
cs
or
pop
or
xchg
pop
sub
ljmp
repnz
out
push
xor
sub
je
push
rclb
sub
xor
mov
sub
add
arpl
push
push
test
lret
icebp
mov
and
ror
pop
push
or
scas
adc
mov
mov
jae
ljmp
fidivs
stos
bound
ja
push
and
pop
sub
andb
in
xchg
xor
or
cmc
aam
daa
repz
adc
xor
or
or
adc
xchg
test
fidivrl
xchg
jns
xchg
out
fisttpll
or
jp
in
dec
or
add
fwait
pop
pop
fidivl
jo
cmp
test
dec
and
cltd
aas
in
jo
faddp
fsubrl
mov
cld
pop
dec
sbb
push
repnz
scas
adc
or
xor
leave
xchg
mov
popf
cmp
outsl
push
pop
push
out
xchg
mov
daa
cli
adc
call
loope
imul
add
je
fadd
test
mov
sbb
not
fadd
cmpsl
lret
popa
jnp
int3
divb
mov
or
xlat
idiv
dec
test
push
dec
pop
xchg
push
and
sub
jmp
gs
loop
clc
jecxz
loope
and
cld
cmc
lret
xor
in
cmp
popa
pushf
push
icebp
dec
add
fsubrp
data16
mov
xor
cmp
pushf
push
mov
add
mov
hlt
mov
out
cmc
popl
push
mov
popl
xchg
stos
leave
and
mov
mov
fisttpl
add
aas
mov
xchg
stos
adc
adc
inc
push
fists
inc
fs
mov
repz
sub
xchg
fists
fcoms
push
pop
enterw
data16
push
out
mov
add
iret
jmp
fistpll
out
pop
fucomip
cwtl
scas
fisttps
fidivs
shlb
xchg
shll
subl
nop
mov
pop
adc
pop
inc
daa
jg
adc
stc
jns
xchg
add
push
mov
test
jecxz
sub
sar
cmp
outsl
xlat
test
fidivrl
push
nop
test
lret
mov
push
mov
cmp
lds
sub
sub
hlt
sub
into
mov
in
jo
inc
outsb
into
ja
test
jns
ret
sub
jno
mov
add
movsb
shrl
xor
lds
inc
jl
pop
pushf
out
add
xor
or
mov
cmp
out
subl
jge
fdivs
push
dec
repnz
enter
loope
in
pop
add
or
and
jge
rorl
aas
adc
bound
sbb
popf
dec
cmp
leave
cmpsb
andb
pop
sbb
lods
jecxz
push
mov
fdivrl
dec
repz
push
popa
xchg
sub
mov
push
and
mov
scas
xchg
push
out
xchg
xchg
int3
add
notl
pop
lds
and
xchg
popl
jnp
push
inc
mov
xchg
pop
cmc
xor
mov
push
lret
push
jns
hlt
or
testb
cmc
cmp
push
pushf
pop
gs
jno
push
data16
mov
jno
subb
mov
shrl
mov
popf
inc
xor
ret
decl
pop
add
mov
inc
inc
loopne
loopne
mov
test
mov
cmc
xchg
jecxz
lea
mov
sbb
mov
xlat
xchg
add
dec
stos
mov
cmp
out
aam
loop
aas
movsl
scas
insl
mov
sub
out
adc
sbb
leave
mov
add
rcrl
stos
jl
dec
fistpll
xor
pop
icebp
mov
adc
cmp
xor
push
mov
push
add
sbb
mov
adc
fcom
jo
mov
and
addr16
scas
sub
enter
roll
mov
fwait
xorl
mov
adc
ret
jl
pusha
add
add
jnp
movsl
pop
loop
pusha
ljmp
push
jns
ja
scas
and
mov
divb
or
ds
xchg
lret
pop
scas
stos
xchg
pop
xchg
int
lock
add
ds
not
cli
in
jecxz
dec
inc
jecxz
aam
mov
adc
jmp
and
enter
pop
cmc
mov
and
loop
sbb
imul
push
arpl
mov
push
mov
fisubrl
xor
push
out
clc
dec
or
ss
sub
mov
sub
push
icebp
punpcklwd
xor
xchg
and
jnp
fs
negb
jp
lods
pusha
es
aas
xchg
adc
inc
dec
dec
sahf
not
popf
test
pop
xchg
pop
std
fisubrs
in
mov
movb
jg
fcompl
aaa
das
aad
pop
repz
repz
fadds
stc
xor
les
scas
cmp
add
mov
int
inc
inc
mov
les
xchg
lret
loope
and
xor
jae
lret
pop
sbb
in
lret
lds
xor
sub
ficoms
pop
jbe
cmp
fnstcw
inc
pop
imul
js
inc
mov
xchg
dec
scas
mov
mov
mov
xchg
ja
sub
cmovo
or
dec
fdivrs
pushf
cmp
dec
inc
push
xor
loope
jns
leave
dec
mov
rorl
ljmp
outsl
push
xchg
sbb
sub
and
jb
ds
push
inc
lahf
mov
fiaddl
clc
mov
mov
push
mov
xchg
pop
lret
or
std
loop
shlb
mov
mov
push
lahf
ficoms
dec
das
scas
sub
adc
hlt
push
imul
pop
loop
mov
pusha
sbb
les
inc
cmp
repz
movsb
dec
adc
aam
xor
jbe
jl
jb
lret
push
pusha
in
fcmovbe
pop
shrb
inc
inc
xor
ljmp
sub
insl
xchg
and
out
in
imul
inc
lods
mov
pop
mov
sarb
insb
adc
loop
int
shll
mov
stos
fcompl
out
int
push
xlat
in
ret
adc
shl
int3
sbb
add
cli
popl
ret
out
mov
lods
ds
ds
xor
xchg
and
icebp
or
nop
inc
push
ds
mov
sbbl
jns
jns
cmc
pop
mov
scas
fcom
popf
and
imul
sbb
je
mov
sbb
xorl
cmpsb
sub
xchg
test
out
add
xchg
mov
in
cmp
dec
or
fs
and
ja
test
xchg
pop
mov
inc
mov
jnp
jmp
cmp
sub
sub
cli
add
faddl
adc
lock
ficompl
lcall
pop
fs
bound
and
pop
ret
out
dec
push
lea
cmp
xchg
mov
repnz
adc
lret
lahf
sub
push
jmp
inc
sbb
xor
negl
aam
inc
sbb
pop
inc
lods
nop
shlb
sub
jno
stos
mov
int3
gs
rcrb
pop
xchg
into
fidivrl
mov
fldl
faddl
jo
mov
or
cs
xchg
fdivs
and
aam
lea
xor
sbb
cmp
push
aad
mov
stos
or
jae
clc
aaa
outsb
pop
mov
fldl
inc
push
pop
out
fs
pushf
insb
pop
cmp
push
pushf
fsubrs
xchg
jb
sbb
inc
inc
mov
loope
aad
xchg
push
xchg
xchg
mov
test
cmpsl
mov
jns
mov
je
das
cwtl
cld
pop
push
jge
inc
pop
push
cmp
and
ret
sbb
outsb
inc
adc
nop
cmp
xor
dec
iret
dec
repnz
mov
push
fdivr
push
sub
push
pushf
xorb
rcrl
cmp
mov
pop
loopne
jne
sub
lret
sub
inc
pusha
movsl
cmc
adc
dec
push
mov
dec
mov
pop
xor
in
xchg
add
dec
sbb
mov
xchg
inc
xor
pusha
lahf
pushl
pop
sti
adcb
fstpl
jnp
sbb
lds
xchg
sahf
sbb
sbb
arpl
dec
hlt
mov
ja
push
outsb
dec
xchg
in
gs
les
leave
sbb
jle
pushf
rep
push
sbb
stos
stc
jno,pt
jb
outsl
sbb
fwait
push
fistpll
or
pop
loop
cld
mov
or
clc
ds
dec
test
cmp
inc
fdivs
mov
icebp
push
mov
ss
push
mov
sbb
or
or
pop
inc
cmp
inc
int3
jb
andb
jecxz
dec
pop
test
sub
gs
lea
mov
cmp
pop
mov
mov
jmp
es
in
xor
mov
mov
push
lret
xchg
call
xchg
sahf
mov
lea
out
aam
dec
push
mov
enter
sbb
outsl
push
out
mull
inc
cmp
fdiv
mov
jecxz
out
aaa
pop
cwtl
test
xchg
orb
cmp
in
inc
mov
outsb
xchg
scas
cmpsl
jnp
sahf
push
sbb
mov
popf
jno
sub
push
inc
lret
push
add
xor
movsb
sub
ljmp
and
dec
or
test
adc
cli
mov
fildl
xchg
in
fldl
sbb
sarl
mov
int
adc
paddsw
mov
mov
rcrb
lret
sub
and
xor
push
faddp
lret
sbb
dec
mov
repz
jge
cmp
int3
outsl
ja
inc
out
scas
push
or
cld
outsl
jae
add
mov
enter
in
push
bound
scas
pusha
jo
lods
out
gs
jnp
add
call
lahf
cld
gs
push
push
cmpsb
add
mov
les
popf
mov
adc
sub
and
pop
repz
mov
pop
dec
loopne
push
aaa
imul
rcrl
xchg
push
jae
add
sbb
aad
std
jle
push
cmpsb
cmpsl
cmpsb
stos
xchg
shrl
cmc
test
sbb
test
test
mov
jnp
aam
mov
fistps
pop
outsb
addb
enter
insb
jno
popa
movsl
pop
imul
fs
mov
push
fs
stc
or
inc
hlt
in
test
pop
repz
dec
inc
push
xchg
and
sub
mov
clc
mov
ror
in
mov
or
fmul
movb
or
jmp
cwtl
sarb
add
mov
std
fs
mov
lretw
fwait
or
fucom
roll
repz
stc
lret
outsl
mov
jle
sbb
mov
rcr
fnstcw
rorb
sbb
push
xor
mov
add
sbb
imul
sti
push
mov
mov
push
sahf
sti
and
xchg
mov
repnz
out
adc
push
mov
inc
cmp
adc
call
pop
mov
xchg
inc
aaa
pop
in
repnz
stc
cmc
push
clc
xchg
and
fnsave
mov
dec
movsl
aaa
mov
mov
cltd
std
dec
inc
nop
insl
mov
jae
filds
dec
add
lahf
scas
movl
cmp
ret
cli
dec
into
adc
jp
inc
dec
pusha
sbb
dec
and
xchg
and
mov
arpl
xor
in
lret
or
add
sub
xlat
rorb
sahf
fists
mov
mov
clc
sbb
lods
addr16
sbb
push
adc
cmp
mov
popa
inc
rclb
dec
loope
cmp
sti
push
mov
stos
jg
ds
lret
mov
or
pop
jp
or
mov
inc
imul
popa
push
out
test
and
aas
and
out
push
add
jbe
or
stc
or
stos
js
mov
jns
ficompl
scas
movsb
adc
or
das
mov
and
mov
sti
cmp
test
imul
add
cmpsb
or
sub
mov
mov
pushf
lods
out
iret
cmp
stc
xchg
pop
or
jne
pop
dec
mov
dec
pop
inc
add
inc
lcall
pushf
dec
xor
push
push
or
jmp
or
out
push
xchg
lret
test
push
lret
popf
cli
rolb
jo
adc
inc
xor
add
and
enter
ljmp
and
clc
int
sbb
jp
sub
das
pop
jge
out
outsl
lahf
ret
jle
icebp
fsts
adc
wbinvd
sbb
jge
adc
push
mov
mov
mov
jno
in
fiaddl
adc
in
test
popf
mov
mov
ja
sbbb
mov
dec
sbb
int
add
cmp
je,pt
cltd
pop
scas
push
daa
dec
push
int
inc
push
inc
and
lods
lret
sbb
lret
xchg
jecxz
out
push
rolb
addr16
cltd
push
xlat
add
adc
push
push
iret
movsb
ljmp
sub
call
xor
xchg
sarb
bound
mov
jge
nop
push
mov
push
in
mov
and
fidivl
ret
inc
adc
pop
add
out
jae
mov
jne
pop
xor
insl
xchg
mov
jg
cmp
pop
jle
arpl
mov
cmp
cltd
jp
adc
cltd
sub
hlt
xchg
pop
out
ret
jg
mov
mov
les
xchg
jl
sbb
dec
sub
inc
in
xor
mov
jnp
out
jno
and
stc
push
in
cmpsl
stos
dec
inc
dec
rorb
arpl
movsl
mov
pop
movsb
mov
stos
dec
scas
data16
addr16
adc
or
dec
push
jne
test
inc
les
jmp
cmp
outsb
cmpsl
popa
adc
adc
push
cwtl
rclb
pop
int
insl
jmp
test
jg
fldt
std
aam
xlat
push
xchg
andl
mov
fisubs
cltd
movsb
and
mov
imul
jp
jp
adc
pop
in
outsl
test
rcrl
jnp
sti
jae
pushf
mov
or
cwtl
push
cmp
mov
xchg
mov
jmp
cmp
inc
fidivl
dec
jae
lcall
pop
inc
adc
xor
jnp
xor
rolb
mov
inc
in
and
loope
adc
roll
lahf
rolb
cmp
lret
ss
repnz
or
xchg
pushf
in
pop
movsl
shl
sahf
clc
xor
std
pop
aad
mov
aaa
cld
sti
dec
cvtps2pi
pop
inc
push
lret
shl
fldl
in
sbb
and
imul
jl
fs
ljmp
xchg
jb
push
push
leave
dec
cli
fldenv
in
lods
int
add
add
xor
test
mov
dec
in
push
fidivrl
mov
in
xchg
test
std
ret
sub
notb
adc
scas
inc
jo
jg
insl
lcall
sbb
xor
jmp
or
shr
ja
movsb
jecxz
in
jno
dec
dec
outsb
nop
icebp
stc
or
jb
ljmp
dec
pop
push
or
fxch
sahf
std
jno
les
cmp
dec
xchg
jne
jge
sub
inc
or
pop
outsl
je
adcl
mov
das
mov
iret
movsl
aaa
xchg
lds
mov
lds
pop
sub
cmpsb
push
adc
rcr
jno
aad
xor
lods
jecxz
pusha
cwtl
loop
popf
mov
add
xor
mov
jne
xchg
das
out
out
xchg
inc
xor
xchg
sbb
in
int3
mov
lahf
mov
xor
inc
fwait
hlt
ljmp
push
or
adc
inc
pushf
dec
sub
xor
leave
add
xchg
ljmp
repnz
mov
add
inc
fnstsw
adc
add
fdiv
pushf
fistps
aas
dec
or
add
inc
xchg
sti
add
adc
test
data16
jne
dec
mov
sub
repz
mov
imul
sarl
mov
ljmp
push
test
lahf
adc
mov
stos
push
test
cmp
imul
shr
mov
pop
sub
adc
in
inc
test
call
adc
negb
int3
pop
push
hlt
lret
out
mov
scas
push
dec
jbe
es
fcoml
adc
or
jp
imul
aaa
and
mov
daa
jp
scas
jne
cmp
bound
jp
pop
jnp
push
call
add
cmp
or
xchg
mov
dec
push
jmp
xchg
pop
sbb
cmp
stos
cwtl
rsqrtps
xor
xor
xchg
fcmove
cmpsl
jl
cmp
mov
shll
xor
out
fcmovbe
push
subl
imul
push
cmovl
out
mov
shlb
adc
ficomps
sub
test
cmp
inc
outsb
lods
jne
add
jmp
stc
adc
les
stc
in
daa
or
mov
addr16
mov
sbbl
cmpsb
jne
ds
inc
jne
push
cmp
inc
xor
loopne
or
cmp
xlat
loop
fmull
cmp
mov
out
fisubs
ud1
ja
sbb
pop
mov
cmp
fnstenv
mov
shll
xchg
mov
mov
push
xor
jge
fcom
mov
push
jmp
js
mov
or
xorb
cmp
lds
mov
jmp
clc
adc
jle
and
cmp
enter
xchg
lgs
dec
and
aas
jle
cmp
shrb
dec
outsb
mov
push
stc
popa
or
mov
in
loopne
cmp
mov
sub
pop
mov
dec
clc
and
outsb
cmc
les
daa
inc
mov
mov
or
xor
sub
aam
add
aas
fbstp
push
pop
adc
imul
xchg
out
ret
lret
jno
scas
pushf
loopne
or
fidivrs
ss
cli
mov
mov
cmpsl
push
and
icebp
pop
imul
fadds
adc
test
cmp
mov
push
out
adc
sbb
dec
xlat
daa
adc
gs
xchg
adc
push
and
inc
fs
dec
outsl
lock
stc
fldl
outsb
mov
sub
bound
pop
test
pop
or
xchg
sbb
insl
fbstp
sub
out
out
xchg
clc
mov
xchg
popf
test
lahf
push
xchg
adc
pusha
cld
dec
into
or
or
adc
ret
mov
pop
sbb
es
or
or
inc
mov
aaa
test
jno
dec
xor
aam
rcrl
lret
inc
mov
pop
outsb
cmpb
roll
cmpsl
bound
pop
bound
jbe
or
fldt
mov
adc
jge
inc
pop
gs
push
add
mov
lret
or
in
shrb
int3
cmovge
movsb
jnp
mov
in
xor
xor
add
xor
loope
pop
lret
xchg
sbb
fmulp
cmp
cwtl
into
push
lds
in
mov
jb
jo
fsubrs
xchg
out
dec
pushl
adc
hlt
sub
mov
mov
aam
adc
shr
sbb
xor
js
fisttps
sub
dec
and
or
inc
inc
inc
in
push
push
je
scas
cld
jbe
mov
jo
push
aas
jne
flds
jno
push
icebp
fidivs
jnp
push
mov
or
and
aam
lods
add
push
push
mov
xchg
jb
fdivl
enter
xchg
mov
in
xadd
cs
jge
mov
add
ds
int3
jo
aas
arpl
repz
loopne
icebp
fsubrs
fbld
pop
ss
pusha
jb
dec
je
add
and
adc
shll
dec
mov
jnp
xchg
dec
inc
push
cwtl
mov
jmp
movsb
int3
leave
xor
into
cwtl
mull
mov
and
shll
and
sbbb
out
xor
imul
nop
call
mov
sbb
xlat
push
xlat
jne
out
popf
ja
sub
sbb
lds
pop
ljmp
jo
mov
cmp
mov
call
stos
repz
cmp
jecxz
mov
mov
pop
push
outsl
jecxz
and
aas
cmpsb
ret
inc
sub
data16
cltd
test
mov
mov
mov
jp
or
pop
mov
adc
push
sub
dec
jle
nop
dec
rorb
test
jbe
mov
fcmovnb
jb
and
call
leave
dec
mov
jo
mov
jo
lret
mov
dec
pop
mov
stos
adc
fisubrl
mov
icebp
xlat
ss
pop
push
inc
cmpsl
mov
xor
sbb
pop
std
cmp
mov
pusha
adc
sarb
mov
xor
mull
push
fsubr
xorl
pop
inc
ja
xlat
fdivl
movsb
sbb
xchg
mov
mov
stos
in
xor
outsl
lret
mov
fucomp
jl
cmp
mov
push
inc
mov
les
push
mov
movsl
add
test
testb
sub
roll
xor
fnstcw
leave
neg
sub
mov
xchg
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
in
push
stos
stc
inc
addb
jb
inc
mov
and
mov
push
jecxz
fs
icebp
sbb
repz
or
mov
pop
mov
mov
lods
pop
adc
and
jae
in
scas
iret
popf
scas
adc
push
ret
sub
push
dec
in
or
add
or
ret
jne
pop
sub
cmp
das
fisttpl
jge
imul
xor
dec
and
pop
jbe
in
push
cltd
aaa
punpckldq
inc
jg
mov
cli
sub
out
xchg
mov
mov
movsb
add
aam
jecxz
aam
mov
jg
scas
mov
imul
je
pop
test
insl
inc
sub
or
orl
pop
cli
addb
xor
jl
std
inc
outsb
pop
cmpsb
mov
cmc
sbb
cmp
pop
dec
int
jl
cmp
gs
inc
sbb
add
gs
aad
push
push
xchg
or
mov
mov
movsb
dec
popa
mov
xchg
inc
push
setge
xchg
in
jne
ds
icebp
aaa
in
xchg
xor
popa
push
sbb
sub
in
mov
adc
pop
les
fisubrs
pop
les
adc
adc
out
mov
xchg
xchg
xchg
sub
aas
arpl
xchg
pop
js
scas
dec
iret
dec
cld
fidivrl
mov
mov
aaa
sbb
movsb
cmc
ja
stc
dec
cwtl
test
arpl
push
stc
jp
not
sti
adc
pop
ret
sbb
lret
stc
das
movsb
mov
dec
mov
rorl
sub
add
rorl
arpl
cmp
push
int
es
dec
push
xor
dec
insl
add
xchg
mov
test
lock
jp
xlat
and
popa
pop
xchg
call
jp
das
faddl
inc
dec
addl
int3
mov
and
repz
xor
xlat
data16
or
inc
xchg
insb
push
je
shr
bnd
aaa
sub
sbb
jnp
cmpb
inc
xlat
in
ljmp
clc
std
xchg
sub
sti
stos
or
xor
lret
mov
xchg
add
dec
mov
daa
not
enter
jmp
dec
dec
mov
frstor
aad
mov
lods
mov
shrb
daa
pop
frstor
pop
test
arpl
repz
mov
shll
ret
dec
test
add
stos
jecxz
scas
mov
adc
in
add
dec
aaa
lods
or
sahf
sub
stos
adc
aam
add
test
jge
lea
outsl
ds
ja
arpl
cmpsb
in
stos
or
push
mov
ret
test
orl
and
ds
iret
movsb
xchg
sbb
lcall
into
cltd
mov
xor
push
mov
fidivs
mov
out
mov
jns
je
enter
out
add
es
add
xchg
cmp
cli
out
cwtl
or
sbb
subl
outsl
sbb
sub
xlat
dec
fnstenv
imul
pop
out
mov
mov
xchg
or
cmc
inc
mov
mov
jmp
push
test
push
es
lret
sbb
sbb
in
iret
sahf
inc
or
test
jmp
mov
xor
xor
dec
mov
xor
adc
cli
pop
xchg
cmp
cltd
mov
sbb
mov
decb
frstor
ja
pop
aad
sbb
and
shl
pop
jb
pop
es
mov
fs
mov
push
xor
data16
sbb
cwtl
in
sub
ja
sti
roll
pop
jo
mov
or
repz
inc
gs
stc
lds
or
mov
jg
mov
rolb
adc
mov
sub
add
xchg
mov
jae
xchg
jb
and
xchg
scas
push
cmpsb
or
mov
lds
test
stos
mov
xor
or
mov
cmp
add
pop
adc
cmc
cmpsl
ret
shlb
add
cmp
ret
jmp
in
sbb
cltd
ret
xchg
sub
sbb
pushf
add
and
xchg
out
popa
mov
sbb
rorb
push
scas
adc
pop
out
xchg
lcall
repnz
orb
pop
fdivr
popa
mov
push
mov
cmpsl
outsl
pop
frstor
fcmovnbe
pop
sahf
sub
es
test
push
lods
lds
jge
pop
jg
lods
ds
jae
stos
push
lods
cs
sbb
aaa
sbb
mov
mov
push
pop
in
cs
inc
imul
lahf
xchg
out
aam
and
pop
mov
aam
in
cwtl
adc
rorb
icebp
stos
sbb
out
dec
cmp
jae
outsl
cld
outsb
fstpl
je
mov
jge
mov
mov
imul
mov
pcmpgtb
cmc
scas
jl
in
xchg
jg
arpl
psubsb
into
xchg
mov
push
cmp
test
imull
inc
gs
lret
out
add
pop
cli
push
iret
out
test
ljmp
push
test
jp
mov
xchg
pusha
pop
shr
cmp
lods
lcall
repz
add
push
mov
in
cmp
imul
neg
xchg
inc
jne
mov
xchg
cmpsl
pop
sbb
xchg
cmpsb
push
fimuls
mov
and
pop
mov
adcl
je
cltd
lea
fs
adc
mov
mov
dec
adc
repnz
fbld
lahf
js
mov
mov
shl
adc
movb
push
popa
aam
sbbb
pop
adc
cwtl
push
sarb
decb
out
inc
test
ss
and
jne
outsl
mov
xor
incl
es
and
pop
or
ds
and
mov
in
and
mov
fcomps
jmp
sbb
dec
or
fcomip
pop
arpl
cmp
sub
pop
sub
cmpb
mov
push
insl
push
dec
cltd
out
dec
addr16
shlb
cwtl
push
pop
in
fucomi
out
mov
and
das
pop
mov
sub
lea
add
addl
jbe
inc
int
cmp
aas
pop
jb
cs
pop
jp
adc
mov
mov
out
sub
jle
in
mov
imul
push
dec
pop
in
dec
inc
lret
push
daa
lock
lods
xor
xor
out
call
sub
add
scas
roll
push
test
inc
scas
jbe
mov
pop
push
jp
popa
jg
lahf
test
int3
pop
push
ss
push
pop
test
popf
push
movsl
mov
insl
cs
xchg
push
das
jae
rorb
insl
mov
rol
lods
sub
inc
mov
fcomps
out
jle
jne
mov
rol
cli
sbb
sub
shrb
cmp
sbb
insl
lcall
inc
add
dec
fs
cmp
test
jecxz
hlt
add
pop
sbbb
out
jge
das
je
loopne
fwait
cmp
fdivrl
arpl
scas
jne
test
shrl
inc
sbb
test
cmp
subl
pushf
insb
or
sub
xchg
and
inc
arpl
icebp
popf
adc
stos
shlb
push
shlb
stc
cmp
or
loopne
sti
adc
add
sbb
add
push
push
push
mov
daa
adc
adc
mov
shlb
and
or
cmp
xor
adc
loope
imul
sar
repz
mov
add
add
cmpsl
rcr
xchg
inc
and
fwait
lock
dec
daa
lret
xor
or
int
pop
sub
sub
jecxz
mov
mov
sbb
cmp
lods
mov
and
xor
imul
mov
pop
mov
add
testl
mov
xor
cmc
jnp
jg
push
scas
test
mov
stos
repz
loopne
xchg
xor
sub
mov
out
mov
sub
ljmp
xchg
cs
rorb
jecxz
bound
movsl
xchg
clc
push
or
jae
mov
or
xchg
jno
push
xor
lret
adc
sbb
mov
cmp
dec
test
fs
aas
test
aaa
mov
enter
mov
pop
and
dec
cmc
out
gs
jb
inc
les
js
in
mov
jne
jb
adc
adc
fimull
add
mov
pop
pop
push
cmc
jns
or
lcall
sub
sub
mov
xchg
mov
jnp
cmpsb
je
jae
popf
dec
loopne
out
xchg
mov
loopne
js
pop
mov
test
sti
sbb
inc
jns
push
lcall
fmuls
icebp
mov
fs
jge
jo
push
aas
test
jg
das
push
stos
es
push
lret
mov
mov
test
sbb
xchg
scas
loop
clc
dec
fidivl
addb
ds
or
inc
ds
and
sahf
in
stc
adc
cs
pusha
shrb
js
xor
fxch
hlt
cmc
push
push
pop
mov
or
jb
aam
ds
in
int3
sbbl
icebp
sub
ja
mov
jge
jp
jge
sub
add
sti
dec
xor
sub
std
sahf
into
mov
lcall
jno
dec
imulb
dec
or
cwtl
mov
out
ja
mov
lock
push
aad
sbb
in
cli
mov
dec
sbb
dec
shll
icebp
icebp
fld
mov
mov
orb
xor
mov
call
icebp
enter
ljmp
cmp
dec
sti
pop
xchg
jne
out
les
xlat
xchg
xchg
inc
cwtl
jg
add
inc
fwait
jmp
mov
sbb
das
sti
adc
inc
and
mov
mov
pop
mov
jl
push
sahf
push
sarl
mov
and
cmp
stos
push
push
add
js
mov
aam
push
adc
sub
int3
pop
stos
insb
xchg
jae
push
and
inc
outsl
outsl
and
add
mov
adc
cmp
sahf
cmp
lea
popf
addr16
outsl
call
in
push
push
ja
cmp
rsqrtps
dec
dec
add
sub
jns
mov
test
dec
mov
mov
pop
pop
xorb
and
popa
ret
mov
add
sbb
jg
xor
push
ljmp
pop
inc
fdivs
je
sub
or
push
jle
inc
frstor
jnp
stos
pop
pop
cmp
lea
or
notb
xchg
mov
movsb
inc
and
mov
int
test
sub
rcll
pusha
xor
neg
out
mov
cmpsl
fistpl
xor
push
or
scas
or
xchg
cmp
mov
adc
scas
inc
inc
aad
lea
mov
dec
inc
mov
mov
push
pop
and
sub
fdivrl
je
rol
nop
dec
shr
into
aad
test
or
mov
sub
arpl
cmpsb
mov
cmp
cltd
mov
pushf
and
mov
mov
aad
mov
inc
mov
dec
sbb
mov
sub
sub
adcl
aam
ret
mov
push
sub
xchg
js
push
mov
jmp
int
out
ret
lahf
fldt
and
adc
cmpsb
ds
pop
ret
repz
std
in
pop
cmpsl
mov
jecxz
dec
ljmp
daa
pop
lret
ret
mov
in
adc
jp
gs
mov
push
xchg
ljmp
cmp
out
mov
mov
mov
jne
mov
mov
xor
pop
pop
enter
mov
dec
clc
cmpsb
pop
loope
fcmove
jbe
lods
sahf
sbb
stos
push
add
cli
test
ja
mov
loopne
lcall
add
inc
ss
fsts
cld
adc
lret
movsb
pop
add
outsl
pop
subb
pop
test
clc
or
mov
mov
rcr
jae
leave
pop
pop
sbb
filds
rcll
sbb
add
mov
sbb
pop
mov
mov
pop
or
out
in
or
pusha
rcrl
ja
adc
enter
mov
loop
push
bound
pop
imul
mov
fstpl
cmp
xor
xlat
clc
or
adc
add
inc
lds
subl
add
inc
add
out
xor
mov
hlt
push
push
dec
xchg
mov
hlt
insl
mov
push
cmp
and
inc
idiv
fs
jecxz
les
cmp
xor
aaa
adc
lea
mov
and
or
inc
inc
push
sarb
xchg
jb
push
jne
js
inc
int3
cmp
mov
sbb
mov
daa
ret
int3
and
and
sub
aam
in
cmp
add
mov
dec
stos
loope
lret
fmul
pushf
test
js
movsl
bound
dec
cmp
es
clc
test
test
out
fs
add
mov
xor
je
sub
inc
xchg
or
mov
xor
fsubr
call
push
inc
adc
pop
cmp
push
sbb
mov
dec
enter
je
xor
mov
test
ret
addl
dec
arpl
jno
movhps
mov
xchg
mov
jg
cmp
jo
mov
ds
mov
or
cmc
xor
shrb
mov
in
jle
loop
dec
inc
pop
fwait
cmc
mov
dec
jae
rcll
add
mov
pop
dec
jb
pop
inc
lea
sub
adc
gs
adc
mov
shlb
js
andl
in
fadds
leave
fiaddl
pop
scas
ret
loopne
sub
out
int
jle
sub
mov
push
or
xchg
rol
push
lret
stos
ror
jae
incb
mov
imul
jnp
mov
add
pop
lods
xchg
and
fdivrl
jbe
mov
outsl
mov
add
lret
out
out
xor
out
inc
jg
sub
dec
jl
pop
dec
mov
js
stos
or
inc
push
inc
outsl
adc
cld
push
xor
add
or
icebp
outsl
fs
bswap
jbe
xor
jl
sarb
or
add
and
not
stc
stc
decb
jns
mov
mov
ret
xchg
push
mov
popa
mov
imul
xchg
jnp
push
sti
je
sub
stos
out
jmp
dec
jb
dec
jp
cmc
stos
scas
ljmp
jbe
dec
sbb
std
lock
cltd
out
pop
mov
mov
pushf
je
pop
add
fidivs
fwait
sub
ret
clc
jns
cmp
bound
loopne
adc
loopne
into
or
je
jnp
push
cmp
inc
clc
movsl
mov
inc
or
inc
jle
in
aaa
mov
mov
push
jns
jmp
addl
imul
and
ja
shrb
jle
ja
lea
leave
cmc
icebp
mov
xor
xchg
push
xor
ljmp
movsl
das
xchg
pop
roll
mov
ja
pop
pop
adc
in
mov
pop
int3
pop
dec
dec
adc
dec
out
andl
enter
inc
push
lods
arpl
imul
call
lret
jb
lret
mov
or
bound
lods
cmc
xchg
push
mov
or
aas
aad
mov
pop
push
adc
fistpl
jae
hlt
adc
push
inc
into
insl
adc
xor
xchg
pusha
movsb
fdivr
add
mov
rcrb
push
in
xchg
mov
jns
icebp
sahf
inc
xchg
loope
stos
lahf
jle
cmpsl
mov
fnstenv
adc
pop
bound
add
std
sub
sbb
sbb
and
ja
lahf
sbb
mov
in
jmp
xchg
ds
add
pop
sbb
int3
mov
mov
in
cmpsl
aas
dec
sbb
push
xor
and
ja
dec
sub
sbb
stos
mov
sarb
sbb
call
or
and
adc
cmp
mov
fstl
xchg
cli
dec
test
dec
cwtl
xchg
mov
or
or
pop
dec
inc
shlb
fwait
loopne
fimuls
roll
push
fdivs
xor
insb
fadd
dec
lcall
inc
les
or
mov
cltd
fs
test
aas
jmp
dec
mov
jae
jp
movsl
daa
cmpb
push
or
out
lahf
sbb
ds
push
imul
jmp
lret
fdivs
or
cmc
pop
inc
sbb
fmull
or
inc
out
addr16
pop
pop
jno
xor
movsb
sub
outsl
mov
js
aad
dec
les
shrl
sbb
fstps
bound
jle
test
dec
xor
and
repz
push
movsb
push
inc
pop
rcrl
fwait
xor
enter
cmp
dec
ret
out
std
xor
sub
outsl
push
push
xchg
adc
outsl
jo
push
int
sahf
sub
dec
sub
jnp
stos
push
insl
cmp
nop
in
lcall
mov
cmp
shll
sub
iret
subl
mov
clc
xchg
or
add
and
testl
mov
int3
mov
sub
ljmp
rclb
jg
xlat
sbb
mov
sbb
and
sbb
fs
pop
je
hlt
lds
adc
jns
xlat
cmc
call
out
and
mov
test
pop
in
and
fists
cmpl
lret
mov
sbb
mov
inc
sahf
dec
jae,pt
out
insl
xchg
ds
cld
stos
cmpsb
lea
mull
repz
mov
lods
xor
jb
jmp
pop
adcl
push
sub
cltd
sbb
aam
adc
loope
pop
sub
push
mov
pop
test
add
movsl
call
std
movsl
sarl
popa
movsb
xchg
mov
push
mov
pop
xor
nop
xor
rorl
cwtl
push
push
fwait
sbb
cmp
sbb
fadds
int3
out
popf
pusha
cltd
sarb
aas
fst
aas
cld
or
pop
push
sub
lret
mov
pop
mov
xchg
aas
into
call
daa
xchg
in
repnz
out
pushf
inc
pop
lds
sbbb
mov
push
out
push
test
sub
jp
repnz
jecxz
xchg
sub
ja
lds
xchg
pop
and
add
lret
pop
in
addr16
xorb
or
nop
imul
imul
ficomps
dec
inc
fsub
or
inc
int3
dec
test
in
xchg
sub
dec
rorl
fucomp
insb
mov
push
test
sub
rcrl
insb
and
mov
mov
iret
and
inc
bound
cmpsb
ret
push
fnsave
sti
xchg
add
dec
xchg
adc
and
cld
jmp
pop
imul
xchg
stos
scas
cli
stos
clc
lds
bnd
loope
repnz
add
stos
dec
outsb
outsl
pop
repnz
lahf
imul
sub
fstl
sub
movsb
cmp
mov
fcomp
rcll
pop
push
push
or
andl
clc
arpl
jecxz
push
loopne
out
rorb
pop
jbe
loop
stos
out
and
sbb
arpl
mov
push
inc
mov
pmulhw
sub
xor
in
jmp
mov
sub
xchg
ljmp
test
jo
mov
jns
mov
adc
xor
jle
jo
add
xchg
xchg
or
jle
outsb
bnd
push
jecxz
mov
cld
addr16
adc
aad
decl
dec
push
sbb
dec
sub
addr16
mov
jp
sbb
mov
xor
fcmovnbe
or
jecxz
pop
stc
mov
push
ja
xchg
adc
bound
popf
jp
addr16
into
popa
out
mov
adc
movsb
jl
in
repz
mov
in
mov
stc
fimull
and
lret
out
inc
adc
add
push
mov
cmp
adc
mov
adc
sbb
rcl
fs
dec
xor
add
or
adc
fdiv
popf
out
push
data16
and
mov
les
sbb
push
and
jb
mov
mov
mov
and
shl
repz
push
jmp
xchg
ret
adc
ds
pop
mov
pop
int3
jmp
jb
mov
xchg
aam
pop
sbb
jge
adc
loope
pop
add
out
cmpsl
int3
and
cmpsb
out
orb
gs
sbb
inc
fwait
cmp
loop
and
cs
aaa
loop
sbb
pop
push
fildl
mov
adc
inc
fimull
call
cwtl
pop
sti
lret
mov
fldt
subl
cmp
scas
iret
leave
addb
lret
or
sub
push
stc
jecxz
jge
sarb
pop
add
jge
mov
sub
arpl
aaa
mov
adc
inc
pop
xchg
inc
mov
sahf
mov
add
leave
cmp
inc
or
and
or
push
mov
scas
repnz
pop
fildl
dec
aaa
adc
sbb
lahf
pop
mov
inc
and
cltd
and
sbb
and
loope
je
mov
mov
xchg
in
sub
loopne
std
decb
lret
jecxz
jae
mov
jl
dec
xchg
icebp
xorl
mov
dec
aaa
push
mov
sbb
lock
jb
ret
mov
mov
pop
inc
call
cmp
adc
pop
jno
mov
push
sahf
push
int
inc
fcmovnbe
sub
push
inc
int
push
jnp
dec
aaa
shr
cltd
notb
jae
push
out
lret
int
fmull
fmull
inc
test
lock
sbb
pcmpgtd
add
mov
inc
jb
mov
jnp
aaa
movsb
xchg
mov
mov
mov
xchg
daa
mov
adc
ret
repnz
pop
sub
add
ss
jle
inc
xchg
xchg
jo
aad
inc
scas
fs
jno
cmp
in
jmp
pop
sti
xchg
jno
dec
ficoms
in
inc
push
mov
mov
jmp
add
xor
sub
arpl
sbb
or
push
out
mov
je
int
xchg
mov
pop
lock
and
ret
mov
sbb
sub
scas
stc
add
sahf
push
xchg
cs
ror
lods
jb
pop
mul
in
cld
sti
fldz
jno
cs
lock
push
mov
or
shlb
or
jnp
fsubrs
lcall
sbb
vxorpd
fadds
loop
fists
xchg
int3
inc
ljmp
pop
repz
ja
dec
mov
inc
jo
xor
into
fcoml
lahf
xchg
iret
and
scas
inc
sbb
adc
repnz
push
and
icebp
jmp
lret
push
repz
mov
decb
add
mov
pop
dec
and
mov
jbe
sub
sub
shll
in
add
fisubl
cmp
loopne
adc
pop
bnd
cmp
icebp
int
pop
leave
push
xchg
lods
dec
enter
sbbl
in
lret
mov
pop
aas
mov
lds
mov
ljmp
test
nop
xlat
dec
cs
repz
stc
pop
std
test
mov
orb
gs
mov
sub
enter
aas
fnstsw
pop
xor
xor
out
fwait
cwtl
imull
push
cmp
pushf
xor
sahf
and
mov
lods
jns
cmp
aas
add
jl
bound
orl
xchg
cmp
out
sbbb
pop
sbbl
stc
push
call
icebp
pop
and
mov
daa
cli
mov
inc
or
lock
mov
je
aad
jmp
lahf
xchg
pop
mov
add
out
inc
adc
test
mov
fidivrs
fsubs
test
iret
cmp
in
ret
cmp
adc
mov
aad
sbb
shrb
mov
sub
push
inc
xchg
lcall
js
pop
jns
mov
loop
push
jecxz
push
push
xchg
cmp
pop
sar
mov
pop
cli
loope
sbb
dec
je
test
insb
jge
pop
dec
fidivrl
sbb
jecxz
jns
mov
pop
shrd
mov
mov
rol
inc
lods
sbb
ret
cwtl
es
lcall
xor
adc
adc
bound
and
in
adcl
jno
mov
add
imul
mov
adc
ss
inc
adc
rolb
cmp
xor
inc
jg
nop
inc
aaa
mov
ja
push
mov
repz
fiaddl
test
or
daa
adc
jne
sarl
pushf
mov
add
repz
push
shlb
mov
pop
cli
add
jmp
push
sub
popf
sub
and
scas
dec
insb
loopne
pop
dec
dec
loop
mov
mov
in
icebp
adc
adc
jg
jg
sti
mov
outsb
lret
arpl
pop
pop
clc
bnd
roll
mov
outsl
xchg
imul
dec
pop
push
xchg
arpl
jl
fisubrs
lds
je
mov
bound
jno
cmp
cmpl
lods
rclb
cmp
pusha
sub
and
rcrl
je
mov
mov
lret
ja,pn
add
aam
fdivs
outsb
lods
xorl
cmpsb
add
scas
and
or
jle
cltd
dec
hlt
or
mov
aad
fs
mov
adc
jmp
iret
in
loopne
testb
movsb
mov
pop
add
movsb
mov
add
lfs
pop
sahf
mov
adc
jb
cmp
in
xor
or
sahf
jae
adc
cmp
sar
sti
or
mov
push
cmp
or
xchg
mov
adc
or
arpl
cmpsl
jns
cmpsl
cmpsb
xchg
and
into
or
sbb
out
jl,pt
cmpsb
test
test
lret
mov
pop
out
scas
push
and
jo
inc
and
push
mov
mov
mov
shll
xchg
lahf
ljmp
cld
xor
inc
dec
pop
cmp
mov
stos
xchg
pop
pop
rorb
in
and
or
punpckhbw
mov
data16
lret
pop
mov
mov
ds
jg
ficoml
jbe
outsl
cmpsb
idivb
bound
fcoms
mov
fprem1
jmp
bnd
push
test
cli
lock
mov
adc
cmp
sarb
inc
push
jmp
rcr
iret
pop
mov
scas
mov
or
rolb
jg
jnp
addr16
pop
rcll
or
adc
insb
dec
pop
daa
push
loopne
mov
pop
test
cli
mov
mov
inc
cmp
ret
adc
adc
push
jecxz
push
divl
jg
sbb
hlt
popl
sub
stc
push
jne
mov
dec
stos
mov
mov
scas
cmp
push
or
inc
stc
dec
fimuls
and
sub
xlat
cmp
dec
dec
out
stos
ds
adc
ljmp
rcl
jnp
mov
mov
mov
sbb
subb
mov
xchg
push
or
inc
sahf
imul
pusha
push
test
aad
test
sbb
lahf
inc
mov
cmp
jb
xor
stos
push
movnti
ficomps
or
ss
jle
push
xchg
data16
jb
std
mov
lock
out
jle
test
mov
mov
push
stos
jge
test
push
add
mov
clc
or
pop
imul
in
popf
jae
into
das
rcr
cmp
mov
add
pop
out
or
scas
sub
and
clc
pop
pop
loopne
xchg
jl
outsb
lret
adc
test
test
fisttps
mov
jb
xchg
push
jg
push
nop
push
add
arpl
push
enter
adc
cmp
jle
sbb
xchg
enter
cmpsl
bound
pop
adc
push
jne
lds
aam
fldcw
jnp
push
push
test
fstpl
imul
mov
jle
push
jns
mov
xchg
push
xor
stc
adc
outsb
xlat
jp
or
add
loopne
jo
jb
jmp
mov
loop
stos
add
imul
mov
push
mov
sub
sbb
jp
testb
push
fisttps
movsb
ret
fnstcw
dec
call
mov
mov
arpl
mov
push
jno
lock
rcrb
xor
push
arpl
fucomp
mov
xchg
mov
fcmovb
mov
ret
push
xor
lock
hlt
mov
xchg
mov
mov
js
mov
mov
es
cltd
scas
popf
push
fdivrp
hlt
cmp
adc
mov
lods
lods
aaa
mov
push
int3
cmpsb
stos
dec
xchg
mov
sbb
fwait
in
mov
mov
push
mov
fdivrl
addl
sub
iret
sbb
call
sub
idivb
loope
mov
cmc
mov
inc
jns
inc
ss
test
shlb
cld
push
sub
mov
or
inc
nop
std
imull
lods
sbb
aaa
and
jbe
xchg
jnp
xor
test
insl
out
sbb
push
daa
test
test
pop
data16
xchg
dec
popaw
inc
inc
in
outsl
push
pusha
fs
dec
in
shrb
or
xchg
jle
sub
mov
inc
or
and
fwait
in
popa
xorb
mov
je
mov
ret
xchg
insl
mov
out
rorl
mov
iret
in
in
int
aam
add
insl
or
cmp
pushf
frstor
movsb
je
fsubl
mov
mov
push
pop
mov
xor
imul
sub
cmp
adc
bound
inc
cwtl
and
jo
in
sub
jp
cmp
xor
cmp
xor
sub
imul
and
sbb
out
or
cs
inc
sbb
xchg
subl
test
mov
insl
mov
pop
addr16
lods
dec
loop
bound
adc
or
xchg
xchg
jo
or
repz
pop
mov
int3
outsb
push
fs
popa
mov
orl
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
pop
sbb
pop
and
addl
idivb
sarl
dec
push
data16
sahf
jno
mov
std
bound
or
cli
ljmp
rcl
jnp
lahf
mov
or
dec
out
xlat
adc
mov
ss
cmpsb
dec
shll
es
jo
nop
pop
into
lods
jle
adc
out
test
pop
iret
cmp
or
and
insb
adc
xorb
lods
push
lcall
push
cmp
shrb
or
xorb
pop
cmp
sub
or
xlat
push
stos
mov
cli
adc
out
pop
insb
lea
inc
lds
and
pop
pop
daa
or
xor
std
inc
push
add
push
mov
shll
or
sub
mulb
fistl
mov
mov
iret
nop
mov
je
mov
cmpsb
gs
mov
adc
insb
sbb
test
adc
sbb
dec
push
mov
jae
mov
xor
sahf
bound
fld
cmp
andnps
fildll
jl
dec
sahf
arpl
pop
jp
xchg
adc
xor
pop
pop
in
rol
int
adcl
mov
jmp
push
ret
or
insl
jnp
cld
in
add
mov
adc
data16
mov
mov
movsl
pop
cltd
or
mov
sub
mov
adc
leave
lcall
iret
sub
rcrb
mov
xchg
jle
int3
or
out
inc
xor
jecxz
push
cmp
outsl
hlt
loopne
jge
orl
mov
iret
cmp
roll
pusha
or
cmp
pop
cltd
mov
leave
mov
stc
mov
mov
insb
or
inc
les
sub
aas
inc
mov
repnz
mov
scas
mov
push
out
lcall
fucomi
fnsave
out
or
mov
das
notb
xchg
cltd
inc
in
mov
jle
mov
ret
push
sbb
pop
or
ficoml
hlt
out
xor
xorb
inc
or
pusha
mov
movsb
push
pop
push
mov
cmpsl
and
mov
sub
push
inc
jnp
mov
lds
ljmp
ret
aas
aad
outsl
jmp
fstl
aas
adc
jno
fs
sbb
mov
mov
mov
ss
jl
or
jns
pushf
xor
sbb
cmc
inc
xchg
sti
cmp
mov
push
stos
pop
into
xchg
mov
testl
cmp
sti
sub
mov
cld
jae
or
insl
mov
stos
popf
jecxz
les
and
and
inc
shlb
out
add
inc
into
cmpsb
add
xchg
dec
jg
push
xchg
stos
cli
jge
mov
lds
lods
shlb
subb
mov
out
in
inc
mov
cmp
cld
jb
inc
imul
dec
sarl
cmp
in
fdivr
mov
jecxz
bound
pop
int3
lret
addl
out
scas
sub
dec
push
cs
dec
sbb
jno
pop
xchg
inc
loopne
scas
mov
lock
cmp
xor
mov
push
mov
sbb
scas
jnp
mov
mov
xor
aam
jns
cmp
mov
ss
cwtl
outsb
mov
pusha
lods
sub
mov
mov
subb
jle
add
daa
shrb
imul
add
js
jl
jnp
loop
jmp
lods
add
mov
ja
sub
pop
add
cwtl
mov
frstor
popa
mov
popa
aas
roll
mov
jl
cwtl
in
jle
cmpsb
mov
jp
cmp
rcrl
and
cld
xchg
out
call
add
lret
add
shrl
emms
mov
rcll
push
shlb
lcall
and
in
sub
das
inc
aas
shl
ja
aam
mov
outsl
dec
inc
movsl
insb
mov
mov
mov
dec
repnz
out
jge
xchg
or
enter
scas
mov
dec
leave
push
iret
mov
andl
and
fs
or
pushf
pop
lods
push
mov
sarb
es
mov
sahf
cmp
ljmp
cld
icebp
push
roll
pop
mov
and
out
filds
push
lret
xor
and
fcomp
pusha
and
or
dec
mov
xchg
ret
std
bound
pop
mov
mov
inc
cmp
iret
sbb
imul
inc
shl
jnp
mov
inc
aam
jmp
sbb
mov
fcomi
outsb
clc
push
mov
in
les
push
lds
jle
iret
mov
data16
xchg
adc
mov
orl
lret
shrl
jno
and
cmp
dec
int
scas
dec
jle
fistl
pop
and
push
aam
outsb
bound
int
dec
aad
inc
cmp
flds
push
adc
mov
or
jmp
adc
mov
pusha
mov
out
inc
and
fs
pusha
ja
into
add
repz
xchg
rcr
out
in
sbbb
lahf
xlat
shrl
adc
xchg
mov
lret
addr16
mov
push
pop
movsl
or
das
jns
pop
or
push
push
dec
fstpt
insb
fisttpll
mov
jg
jns
sarl
mov
gs
shll
and
lds
icebp
into
sbb
hlt
mov
and
jbe
push
and
push
out
xchg
cwtl
mov
mov
mov
pop
filds
sbb
inc
mov
scas
xchg
push
push
rcl
pushf
fnstsw
pop
lds
mov
or
sti
daa
dec
adc
sbb
cli
mov
test
sbb
jmp
mov
imul
incl
xchg
and
lea
mov
pop
into
inc
adc
cli
add
test
sbb
xchg
adc
sti
xor
mov
xchg
inc
cwtl
std
xor
dec
cmp
fsubr
js
fisttpll
mov
hlt
xchg
ds
jno
aas
push
adc
xchg
adc
mov
adc
push
fwait
mov
frstor
rcrw
or
and
pop
jmp
mov
das
lods
clc
push
ret
lds
pop
es
mov
inc
ds
mov
inc
es
sub
sbb
je
push
sarl
sahf
ret
shl
inc
shl
dec
mov
push
adc
clc
xor
sub
cmp
rcll
mov
call
or
sub
lret
sbb
xchg
mov
fisubrs
insl
add
jmp
das
push
add
fimuls
sahf
pop
test
movsb
test
jae
lods
addr16
mov
jp,pt
cmp
ljmp
ds
out
push
and
out
jg
imul
out
lock
mov
sbb
rcrl
pop
mov
push
cmp
jp
imul
cli
ja
jle
lret
cmpsl
imul
sbb
scas
jne
addl
cmp
in
mov
lret
into
jns
insl
fistps
push
iret
dec
mov
mov
hlt
cmpsb
xchg
dec
xchg
nop
imul
test
movsb
xchg
cmp
cmp
sti
push
outsl
and
inc
xlat
mov
insl
ss
cld
cmpsl
push
inc
jg
ja
push
stos
clc
cmp
jle
cmpsl
fistl
mov
pop
test
jmp
or
movsb
pop
or
or
outsl
imul
pop
loope
inc
bound
jge
cs
cmp
sbb
into
add
and
clc
lret
dec
pop
ds
xor
bound
push
dec
jle
dec
xor
dec
sarl
mov
or
pop
test
subb
mov
push
push
jle
or
fiaddl
and
and
pop
cmpb
repz
sti
stos
dec
fisubl
jmp
shl
dec
sub
fwait
lods
add
in
or
sbb
pop
push
mov
dec
call
clc
sbb
mov
or
lods
mov
loope
xlat
pop
test
pop
insl
xchg
cli
fcompl
js
ret
mov
mov
cmp
xchg
inc
mov
cs
movsl
adc
cmp
pusha
sbb
imul
jo
xor
adc
fisttpll
js
xor
push
pop
mov
lret
scas
aas
push
lods
outsl
addb
dec
out
jae
lds
and
add
push
jo
cmp
pop
push
push
mov
cmp
push
mov
add
lret
insb
pop
sahf
mov
mov
add
mov
and
or
aam
cmp
and
adc
rcrl
out
int
out
ficomps
mov
mov
adc
jle
cmpsb
mov
pop
lods
add
test
outsl
push
jmp
hlt
lahf
mov
dec
mov
mov
push
jbe
or
inc
jns
sti
cmp
push
push
xor
add
xchg
orw
push
ret
int
mov
jge
mov
xchg
inc
and
ss
push
lea
les
xchg
popf
aam
sub
call
lods
push
jmp
xor
lock
push
add
in
pop
mov
sti
clc
and
xchg
mov
addr16
jecxz
inc
jns
arpl
adcb
add
punpckldq
in
pop
add
dec
push
dec
sbb
cmp
xorb
sub
mov
or
dec
sub
iret
into
fnstenv
pop
out
sub
sub
adc
xchg
sbb
adc
mov
pop
xor
fcmovne
dec
dec
add
push
jge
in
popa
repz
mov
scas
outsb
rolb
and
pop
xchg
es
sub
int
xor
hlt
mov
aas
or
ljmp
adc
cpuid
xor
aas
sbb
dec
mov
ds
xchg
xchg
and
or
ss
test
adc
push
stos
cwtl
rcrl
repnz
jge
call
imul
pop
xchg
jecxz
sahf
push
mov
movsb
das
lods
lods
sub
insb
out
mull
cmpsl
and
sub
jle
xchg
sbb
cmp
out
test
ret
push
mov
jecxz
pop
pusha
cmp
loop
mov
cmp
sbb
rorb
add
push
push
shrl
push
jmp
sbb
jmp
fdiv
and
dec
std
js
out
out
es
lcall
dec
push
inc
andl
dec
repnz
xchg
xor
cmp
inc
add
ffreep
mov
push
cltd
push
mov
pop
xchg
push
xchg
in
fisttpl
cmpsl
ret
jne
fcomi
xchg
lea
jae
dec
pop
fdivs
jl
clc
cmp
sub
addr16
pop
jns,pt
jae
clc
sub
sbb
popa
sub
ds
cmp
sbb
popf
xor
push
pop
lds
stos
and
pusha
push
push
jg
insl
jne
and
mov
add
pop
dec
sbb
sbb
and
cmp
dec
push
jb
out
adc
pop
cltd
jmp
lahf
xchg
loop
mov
cltd
fcoml
add
in
or
jg
jb
or
xor
cmp
adc
jns
ffree
mov
cmp
sahf
pop
rolb
movsl
push
mov
scas
movsb
xor
mov
leave
or
push
dec
jnp
adc
lds
std
lods
daa
fld
lock
mov
and
jg
lret
jne
jb
movsb
repnz
mov
or
in
movsb
ja
addr16
add
adc
adc
aad
loopne
jmp
and
jmp
filds
lcall
and
and
sar
cmpl
sub
cld
ret
push
daa
pusha
fdivr
pop
rcr
push
dec
hlt
sbb
push
inc
into
push
mov
nop
out
outsb
inc
int3
mov
jns
pop
fdivl
rol
js
xorl
ljmp
sbb
lahf
mov
sub
fcmovbe
cmp
ret
xor
pop
push
xchg
rorb
sub
xchg
mov
fimuls
xchg
loop
sbb
sti
jg
push
and
js
idivl
inc
cmpsl
jmp
mov
adcl
ja
add
sbb
mov
cmc
int
test
push
or
dec
jg
outsb
mov
es
mov
sarb
sbb
aam
pop
mov
test
or
add
js
xchg
mov
mov
hlt
pop
xorl
mov
lcall
rcrb
rorb
pop
outsb
sahf
incb
aam
testl
ficoml
push
xor
mov
pop
jp
xchg
out
lret
mov
fdiv
fs
sbb
xchg
dec
sub
or
inc
xor
jo
lods
lea
inc
cmpsb
cmpsl
ret
inc
test
adc
addr16
cmpsl
in
scas
or
pop
loopne
int3
sar
leave
pusha
lcall
xlat
push
int3
sti
pusha
jmp
cmp
idiv
inc
aad
scas
push
sbb
pop
bnd
mov
outsb
pop
loop
push
mov
stc
cmpsl
loope
lret
sub
jae
and
adc
popf
mov
imul
dec
dec
in
mov
out
test
scas
stc
mov
sbb
cmp
mov
xchg
outsb
adcb
idivb
movsb
sbbb
imul
lret
sbb
bswap
fs
or
js
mov
pop
pop
movsb
or
push
dec
aam
sbb
mov
or
xor
ficoml
mov
pminub
xor
xchg
sti
and
or
inc
push
outsb
out
into
pop
movsb
jle
imul
mov
push
fmul
cs
xchg
push
adc
cmp
pushf
and
movsb
lods
cld
xchg
in
jne
add
sti
nop
mov
dec
std
sub
inc
add
mov
cmp
jecxz
add
mov
adc
cmp
pop
bound
add
dec
andb
std
inc
xchg
dec
std
and
mov
fld1
xchg
rcll
xor
in
fiaddl
sub
jle
ret
aad
mov
dec
testl
or
xchg
mov
ja
and
in
xchg
call
outsb
daa
cmp
cmp
rolb
popa
mov
loope
mov
mov
cmpl
xchg
sbb
cmp
test
mov
and
pusha
dec
mov
add
pusha
stc
mov
inc
cmp
fs
rclb
std
in
cmp
add
cs
iret
mov
add
and
mov
fs
pop
outsb
es
add
lahf
pushf
jmp
cmp
test
out
sbb
push
out
loopne
push
mov
lods
ds
mov
sti
mov
cmpsl
mov
test
sbb
sbb
movsb
xchg
cmp
lcall
or
fbstp
mov
cmp
mov
cmp
mov
jg
dec
mov
or
lods
mov
pop
mov
mov
add
push
dec
push
ds
xor
push
push
pop
lcall
jl
sub
in
lods
or
pop
sahf
gs
jo
ds
or
movsb
xchg
lods
sbb
mov
scas
push
ds
mov
out
or
fdivs
call
je
mov
push
insl
ret
mov
xchg
xchg
cli
adc
and
sub
inc
cli
sub
push
pushf
fwait
dec
lds
daa
pop
lods
sub
mov
js
jge
mov
dec
pop
mov
lahf
fdecstp
and
sarl
out
dec
cmpsl
mov
in
pop
xchg
sti
push
scas
jbe
inc
test
and
jp
and
or
or
mov
pop
adc
dec
add
add
dec
out
sbb
xor
enter
inc
sbb
leave
mov
cmp
pop
mov
loope
xchg
cmc
mov
mov
jecxz
cmp
ss
bound
je
fdivrl
mov
xor
sbb
fdiv
lds
mov
jl
mov
add
scas
push
in
pop
mov
add
imul
or
rol
pop
out
and
adc
aaa
sub
add
inc
ljmp
pop
xchg
mov
jb
xchg
or
mov
cmp
pop
in
cmp
dec
pop
ficoms
cmp
inc
nop
gs
sbb
xor
pop
mov
fildll
jecxz
mov
adc
popa
sbb
cwtl
add
movsb
sbb
sahf
add
pop
out
pop
cmp
push
call
ja
jb
out
out
adc
dec
fldt
xchg
sbb
cmp
xor
xorb
mov
jne
stos
sbb
push
mov
mov
push
adc
mov
test
ja
xchg
jae
test
adc
cmp
add
out
test
shrb
inc
imul
roll
into
inc
mov
in
test
mov
stc
in
fistl
cmp
subl
cltd
push
hlt
addr16
sub
jb
inc
sbb
xchg
mov
push
jns
inc
sarl
ret
mov
stc
mov
lcall
inc
push
mov
xor
mov
push
and
je
mov
cs
pop
mov
sub
inc
pop
pop
or
dec
and
mov
cli
in
lcall
lods
pop
push
pop
std
incb
es
mov
mov
and
arpl
les
icebp
dec
data16
in
dec
push
fs
test
test
addr16
push
cld
aaa
repz
out
adc
sub
pop
fbstp
push
push
std
stos
xor
popa
or
aad
test
mov
test
in
adc
mov
je
jno
dec
mov
stc
add
stc
arpl
dec
enter
pop
cmp
inc
ds
push
push
sub
cmc
xor
aas
push
pop
inc
repnz
xor
adc
test
mov
mov
cvtps2pd
ret
sarl
fstpl
adc
add
es
inc
std
dec
sbb
cmp
add
shl
cli
xor
stos
mov
jnp
xor
pop
and
in
sarl
loopew
xchg
jecxz
pop
rorl
shlb
pop
in
pushf
dec
lahf
in
and
stc
xor
arpl
pop
mov
icebp
push
jnp
pushf
shr
pop
enter
lahf
cltd
mov
xchg
push
add
aas
arpl
lock
cmc
dec
or
fs
lods
popf
stos
jmp
lret
ficomps
sub
pusha
popa
ds
adc
and
aad
les
pop
mov
insb
frstor
jno
imul
mov
xor
dec
fsub
mov
aaa
insb
sbb
sbb
pop
cld
pop
xlat
mov
dec
dec
add
pop
fcmovbe
adcb
int3
cld
out
inc
imul
mov
in
dec
mov
repz
cmc
and
sbb
out
adc
mov
xchg
dec
dec
aad
push
jg
push
jle
cli
dec
inc
mov
inc
xor
outsl
movsb
pop
arpl
jp
mov
into
cmp
push
in
inc
aaa
rol
lods
decl
leave
add
adc
out
loopne
mov
inc
dec
add
and
fsts
lods
push
mov
rolb
xchg
testl
fsts
shrl
jle
adc
mov
mov
xor
ds
pop
sub
fs
bound
callw
and
stos
jae
je
xchg
push
or
loopne
cli
push
xchg
lcall
ljmp
push
cmpb
jb
jmp
call
push
and
dec
fsts
push
dec
push
sbb
enter
repz
fbstp
mov
mov
sub
sbb
sub
mov
inc
mov
adc
enter
xor
into
shrb
ljmp
mov
dec
xchg
lea
mov
xchg
mov
jmp
arpl
pop
scas
sbb
mov
call
ret
sbb
push
xor
mov
in
cmpsl
lret
jb
sub
jle
add
mov
add
test
and
add
inc
scas
mov
scas
sub
test
dec
xchg
bound
aaa
test
xor
loopne
je
adc
inc
clc
and
jae,pn
sbb
pop
negb
cli
scas
lods
aaa
fwait
shrb
rcrb
mov
cwtl
mov
mov
lret
mov
or
call
push
inc
jl
push
push
movsb
call
mov
int
lock
popf
xchg
aas
arpl
mov
push
push
sbb
jae
mov
cltd
pop
hlt
pop
add
adc
xchg
into
scas
fs
cmpl
inc
lahf
push
add
mov
das
pushf
push
imul
and
js
sub
adc
dec
pushf
leave
and
cmp
movsb
xor
adc
pop
mov
icebp
xchg
pop
insl
xor
push
dec
jns
dec
scas
jl
out
inc
pusha
daa
push
xchg
mov
fmull
shrb
pop
and
mov
mov
scas
sub
adc
in
sub
in
cmpsl
jnp
ss
insb
leave
xchg
jne
stos
cli
mov
push
or
jecxz
inc
sbb
or
fdivp
fimuls
pop
jb
and
sbb
cmp
mov
mov
call
or
mov
xchg
pop
jge
es
jbe
insb
cmp
stos
or
vpcomuq
mov
sbb
xorb
cs
cs
mov
and
mov
test
xchg
jl
rcrb
mov
push
jb
sub
pop
cwtl
xor
or
shrl
js
imul
out
xchg
add
jp
test
icebp
repz
insl
adc
dec
xor
sbb
out
jb
xchg
cmc
mov
adc
pop
jecxz
shrb
call
aad
inc
mov
pop
test
movsl
fistl
sbb
mov
inc
dec
hlt
das
fwait
pop
sub
push
lods
and
inc
loope
insb
mov
popf
out
ss
into
xor
sahf
cwtl
or
xchg
push
mov
mov
mov
adc
mov
jns
cmp
subl
adc
fidivrl
xor
repnz
ret
mov
and
mov
lods
fstpl
pop
leave
mov
aad
sbb
push
mov
jmp
mov
dec
and
jge
xchg
sti
jle
es
mov
push
push
cmpsb
mov
push
inc
popf
insl
cmc
sub
rcll
xchg
jb
jge
add
cmp
in
hlt
js
lret
xor
add
testb
sbb
jns
loope
int3
shrb
push
test
mov
js
xchg
sbb
insb
andb
pop
fistpll
in
xchg
xchg
out
cli
cld
pop
ja
in
xchg
addl
and
sub
insb
bts
dec
lds
scas
hlt
not
movsl
dec
cmc
fldenv
xchg
sbb
test
push
lcall
mov
mov
sbb
hlt
adc
aaa
jl
add
xchg
xor
pop
inc
sbb
jb
pop
mov
pushf
and
clc
in
cltd
loopne
pushf
mov
pop
addr16
xchg
add
sub
es
icebp
sub
and
lock
xor
clc
pop
out
sbb
js
arpl
in
sub
ret
sub
stc
xchg
sub
mov
jno
xor
xchg
int
xchg
mov
mov
jecxz
repz
mov
movsb
clc
adc
push
cs
xor
adc
cmp
jno
stc
mov
inc
xchg
cmp
add
lods
or
into
add
es
cmp
mov
das
les
aaa
aaa
in
or
shlb
add
xlat
popa
inc
push
lcall
adc
dec
mov
add
lahf
test
sbb
out
in
push
movsl
repnz
addr16
sbb
adc
jae
sub
and
shll
cld
jb
ja
sub
popa
outsl
das
inc
ss
movsl
jbe
or
imul
insl
bound
xlat
jnp
hlt
mov
xor
inc
sbb
pop
inc
cmc
inc
inc
icebp
int3
pop
shrb
xor
sub
lret
pop
roll
dec
scas
data16
mov
and
push
lds
movsl
icebp
sarb
cmp
adc
pushf
jae
sbb
dec
popf
cmp
lods
incb
repnz
cmp
movsl
push
sbb
jp
jb
mov
cli
sar
push
mov
in
mov
ljmp
ret
add
xor
mov
mov
sbb
mov
incl
sub
lcall
sbbl
outsl
jae,pn
pusha
or
lock
out
shrb
les
push
clc
and
int
sarb
lcall
cld
jl
les
inc
not
mov
lahf
insl
lret
hlt
mov
adc
shl
adc
loope
fldl
int
push
and
sub
pusha
cmpsb
jmp
add
outsl
arpl
push
sbb
lcall
add
incl
sub
jle
popa
jl
std
pop
fsub
push
jnp
aas
lods
dec
and
loop
or
or
mov
ja
mov
cwtl
fxch
push
sahf
loopne
out
aas
fsubrl
adcl
xor
xor
cmp
or
ficoml
xor
pop
lods
test
dec
cmpsl
sub
adc
notb
in
out
xchg
mov
out
movsl
rcrl
dec
iret
shrb
push
mov
xchg
cwtl
fcoml
xchg
ficomps
dec
adc
mov
adc
lock
je
inc
shr
iret
int3
stos
jl
movsl
mov
test
xchg
and
xchg
cld
lds
repnz
cmp
jnp
stos
xchg
and
icebp
adc
mov
gs
push
stos
mov
cmpsb
repnz
inc
fmull
cmp
jnp
icebp
fdivp
loop
or
mov
movsl
mov
mov
popa
or
jae
lock
jp
inc
cmpsb
lahf
and
out
and
and
push
mov
lock
outsl
rcr
lea
cmp
inc
jno
out
les
push
pushf
mov
xor
outsl
mov
push
inc
mov
cli
clc
dec
sub
stc
adc
lcall
xor
add
bound
sbb
andb
lahf
xor
jmp
les
lret
xor
mov
mov
and
rolb
lea
xor
mov
mov
and
daa
push
mov
addr16
jbe
xchg
cmp
cmp
or
mov
mov
push
xor
push
je
pop
push
es
mov
cli
xor
in
pop
sahf
mov
jg
mov
inc
imul
pusha
lret
add
pop
roll
lea
fimuls
push
int
xchg
in
aaa
in
inc
cmp
out
cld
mov
fmull
cld
popf
pop
xor
sub
mov
sbbl
mov
xchg
mov
mov
call
ret
xor
dec
push
cmp
mov
mov
inc
sahf
xchg
sub
and
sub
pop
dec
mov
aaa
test
or
adc
fcomps
lcall
mulb
das
iret
sbb
shlb
shr
adc
jge
iret
imulb
sub
out
int
in
rcr
fsub
dec
decb
jp
das
dec
rcll
mov
jecxz
push
and
add
in
add
lods
add
sbb
bound
cmp
loope
popa
mov
fadds
scas
stos
stc
ds
mov
cmp
lods
sbb
cli
dec
dec
std
cli
fidivrl
cli
push
jp
or
outsl
pop
mov
cmp
cld
cld
subl
dec
add
pop
mov
shl
dec
lret
and
and
cltd
popf
fs
cld
stc
jnp
cmc
sbbb
cmp
ja
sbb
mov
inc
jge
insb
mov
dec
int3
jo
dec
lea
jg
aad
jmp
fs
or
movsb
ja
test
outsb
mov
push
les
jnp
pop
das
aad
mov
stos
or
mov
sti
lret
jecxz
repz
mov
stc
stos
adc
aas
inc
cmp
test
pushf
xor
cld
mov
insl
stos
mov
adc
cltd
mov
aad
sub
cltd
cmp
pushf
or
rol
cltd
into
lods
push
dec
and
xchg
fcompl
leave
repz
scas
inc
pop
sti
scas
dec
dec
loopne
and
cmp
lret
scas
in
adc
lahf
inc
mov
cld
lahf
fisttpl
jmp
repnz
lcall
xchg
das
xchg
mov
push
ljmp
jns
insb
add
int3
cmp
xchg
push
pop
inc
lahf
or
test
push
or
insb
or
and
cmp
cltd
rolb
push
icebp
push
aam
jne
dec
stos
mov
or
pop
xchg
std
xchg
cmp
ret
mov
adc
mov
pop
xor
scas
push
out
sub
sbb
clc
push
aad
jl
movl
push
mov
in
sub
cmpsb
push
xor
cmp
xor
loop
xor
or
sub
jg
and
mov
test
sub
pop
icebp
fucomp
mov
scas
jne
test
fidivrl
loop
dec
movb
cmp
gs
push
and
cld
xor
rorl
dec
mov
cmpsl
jns
hlt
repnz
pop
mov
shll
jp
push
lahf
push
ljmp
dec
sti
cmp
loopne
sub
pop
icebp
mov
mov
adc
mov
out
jl
mov
sti
out
sahf
and
fldcw
js
repz
pop
push
movsb
xchg
mov
push
or
xor
sub
dec
pop
mov
cmp
push
sub
cmpsl
icebp
push
subb
pop
lahf
mov
cmp
mul
mov
and
mov
outsb
push
or
or
cmpsl
or
out
jmp
movsb
and
dec
mov
pop
cmpb
mov
in
ja
sub
mov
or
push
jge
mov
pusha
sub
aas
inc
in
xor
push
rol
push
mov
divb
xchg
jnp
call
scas
jnp
fcoml
mov
add
ss
gs
stos
iret
sub
dec
mov
popf
aam
out
xor
into
aad
lds
daa
call
jge
out
pop
mov
dec
sbb
mov
push
js
xlat
cmpsl
sub
mov
andl
sub
mov
addl
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
add
addb
jp
mov
lcall
push
sub
enter
test
mov
cmp
dec
ret
imul
icebp
or
enter
xchg
cmc
cmp
icebp
mov
inc
insl
movsl
dec
cmp
sub
mov
nop
mov
cmp
inc
mov
jo
and
ret
jg
add
negb
imul
push
mov
sub
cmc
cmpsb
popf
clc
into
xor
push
mov
xchg
insb
js
mov
cmpl
mov
mov
pop
in
int
pop
cmp
aas
sbb
scas
inc
ret
nop
cmp
inc
mov
fsubs
scas
rep
or
mov
mov
fidivrs
stos
aam
sbb
pop
rcll
ret
leave
adc
add
jb
lahf
mov
loopne
sub
mov
jb
sahf
js
dec
xchg
mov
insl
push
mov
je
mov
les
cmpsl
ficoml
lret
add
fbld
and
or
pop
adc
push
in
ljmp
cli
adc
push
dec
and
jp
pop
inc
out
xchg
in
sbb
mov
pop
ljmp
cld
jno
roll
add
imul
sub
repnz
out
icebp
and
cmp
outsl
jns
subl
int3
ja
rcll
inc
clc
push
xchg
fmuls
xchg
dec
shrb
pop
outsb
mov
scas
negl
ret
jmp
iret
sbb
jle
cmp
pop
divb
jne
fidivrl
mov
subl
in
inc
push
ds
ljmp
mov
xor
mov
mov
xchg
stc
mov
cmp
imul
stos
bound
loop
loop
sahf
fs
push
cmp
cmp
push
push
push
in
xor
insl
mov
mov
sbb
inc
inc
mov
iret
bnd
push
inc
push
loope
mov
sbb
mov
or
cmpsb
cmpsl
inc
sbb
mov
int
xor
sub
fimull
add
add
pop
xor
mov
pop
dec
flds
cmpsl
cmpsl
jg
pop
cmp
mov
sub
test
test
xchg
pop
jmp
dec
mov
aaa
sbb
push
hlt
imul
clc
push
or
shrb
sti
mov
dec
jle
ds
sbb
jmp
pop
add
xor
xchg
sub
cmp
xchg
pop
adc
test
xor
cmpsb
xchg
fldl
idivb
dec
arpl
scas
enter
shrl
cli
mov
xor
sub
cmp
mov
imul
inc
cmp
fwait
pusha
ret
nop
out
shl
pop
push
dec
mov
pop
pop
std
pop
cmp
cmp
sbb
ret
mov
lahf
lds
inc
jl
stc
aam
outsl
cmp
jmp
pop
int
icebp
idivl
push
sbb
sub
arpl
lods
adc
and
int3
rorb
jle
or
mov
xor
mov
mov
jbe
inc
mov
adc
jo
imul
and
pop
push
mov
aaa
outsb
outsl
inc
jnp
ret
push
scas
xorl
cmp
pop
xor
mov
xchg
lds
or
add
jg
clc
fdivrl
inc
pop
fisttps
inc
adc
popf
sub
dec
cmp
mov
inc
add
daa
jecxz
test
pop
sbb
mov
xor
cmp
sbb
sub
add
lahf
xorb
rclb
loope
jnp
leave
jae
sbb
leave
out
lock
in
fdivs
mov
pop
repnz
fisubrl
jns
nop
dec
sub
mov
jae
cmp
adc
dec
xchg
call
pop
mov
xor
jae
call
push
in
jge
pop
fcoms
cmpsl
rorl
sbb
mov
in
add
es
mov
mov
or
xchg
mov
xor
ret
vpmovsxbw
sahf
jmp
push
xchg
fst
fisubs
or
dec
shlb
das
pop
sub
or
cmpsl
movl
ret
sub
insl
cli
add
aas
jo
sbb
pop
mov
leave
lods
jno
mov
icebp
pop
add
subb
mov
sbb
ret
bound
div
and
rorb
lret
ljmp
push
pop
adc
mov
xchg
dec
sahf
push
shl
fisubrl
ds
mov
lock
xlat
cwtl
lea
push
out
xor
pop
call
mov
cmp
hlt
cmpsl
outsl
neg
ljmp
mov
sub
xor
sbb
push
jle
mov
int3
dec
loopne
sbb
aad
out
xchg
in
sub
mov
pop
or
repz
xchg
mov
bts
sbb
pop
cmp
insb
xor
add
jle
daa
inc
shll
fdivl
xlat
push
imul
inc
xor
xor
aas
inc
dec
xor
ja
push
cld
and
stc
pop
in
inc
fidivrl
cmp
jle
test
sbb
lea
test
leave
sbb
je
fsubrs
rol
pop
test
add
cmp
pop
mov
pop
leave
and
int3
and
mov
sbb
lods
mov
mov
push
or
scas
sub
mov
or
dec
jl
test
cmp
test
inc
pushf
rcll
mov
xchg
cmpsl
mov
addr16
int
sub
inc
sub
mov
lock
add
xor
mov
aad
imul
push
sub
aam
dec
xchg
sbb
aas
jo
jmp
ds
sub
push
arpl
int3
insb
movsl
xchg
pop
add
fiaddl
jnp
loope
cmpsl
xchg
add
roll
gs
int
mov
dec
dec
rorb
push
repnz
inc
sahf
stc
mov
mov
cmp
and
outsb
cmp
jmp
enter
xchg
lret
add
pop
xchg
add
dec
xor
cmpsl
jb
fisttpll
pop
push
pop
dec
mov
mov
sbb
dec
mov
cmpl
mov
stos
aam
stos
mov
or
movsl
ret
mov
lds
inc
xchg
movsl
add
xor
pop
dec
popf
mov
and
jmp
xlat
imul
sarb
aad
out
ss
mov
mov
orl
fiaddl
movsb
push
push
lahf
cmpsb
mov
bound
jne
sbb
mov
ljmp
insl
fbld
out
jne
fcoml
arpl
icebp
out
cmp
push
aaa
cs
stc
mov
adc
mov
jnp
movsb
loop
loopne
insl
icebp
push
in
xchg
mov
cmp
mov
pusha
std
xchg
ret
dec
pop
mov
fwait
divl
cmc
pop
mov
popa
jo
testl
dec
inc
xchg
out
mov
je
test
stos
cmp
addr16
pop
sti
push
or
leave
pop
out
dec
pop
daa
xor
or
xorl
push
mov
andb
pop
int
roll
sub
mov
and
xor
popa
xor
sbb
sbb
stc
xchg
sub
sbb
dec
not
out
push
lret
jno
scas
cmp
imul
lahf
xor
push
xor
jbe
pop
out
insb
lret
mov
andb
or
loopne
mov
cmpsl
mov
sub
loopne
rorl
or
mov
leave
addr16
push
sahf
sbb
sti
imul
jbe
xor
add
outsb
repz
mov
xor
pushl
imulb
and
out
dec
ret
push
and
sbb
popa
xchg
ss
push
sbb
imul
push
mov
clc
dec
mov
cmpb
or
mov
add
xor
shrb
fidivrl
inc
lock
push
xlat
scas
in
clc
and
lea
cltd
gs
addr16
pop
cltd
in
or
lods
out
inc
add
mov
push
gs
jp
mov
jae
stos
out
rorb
lahf
popf
xchg
fwait
inc
inc
divb
dec
test
mov
pop
push
mov
mov
sbb
mov
jb,pt
aaa
cwtl
xchg
call
pop
sbb
lcall
idiv
fcompl
fsubrl
sub
outsl
mov
in
adc
xor
clc
test
sbb
es
je
push
mov
leave
aad
dec
cmp
pop
dec
aas
jge
shrb
pop
pop
xchg
jmp
imul
xor
out
std
arpl
mov
add
popf
mov
enter
cmc
test
in
cmp
int
lret
pop
and
lds
loop
push
jno
movsl
popw
int
inc
sbbl
xchg
shlb
iret
rolb
lcall
frstor
sti
movsl
pop
fwait
mov
mov
mov
xchg
xor
sub
pop
aas
int
scas
popf
push
jle
push
push
xor
or
test
or
add
pop
sahf
fnstenv
sbb
sbbb
xchg
mov
and
shr
dec
shlb
jbe
and
and
lret
fcompl
mov
push
arpl
cmpsb
mov
xor
xor
icebp
test
cmp
dec
xchg
outsb
frstor
movsl
jae
dec
mov
xchg
inc
lea
test
or
orb
inc
mov
cs
loop
and
jae
daa
pop
rol
or
out
xchg
add
leave
dec
shrb
push
arpl
mov
mov
ret
xchg
xor
inc
shrl
call
push
sti
lahf
jno
testl
int
imul
imul
mov
scas
unpcklps
inc
xchg
mov
iret
mov
cld
js
repnz
adc
cmp
inc
lret
lret
hlt
add
xchg
jno
pop
and
jecxz
mov
aam
adc
jl
stc
jg
loopne
pop
mov
dec
push
inc
aas
mov
sarl
ljmp
fcmovb
cmc
lahf
jp
loopne
stos
andl
mov
add
cmp
jnp
dec
jbe
out
ret
mov
pop
xchg
aam
dec
pop
xor
or
xor
xor
push
faddl
sbb
cmp
sbb
add
push
adc
in
cld
dec
test
inc
cmpsl
divl
push
lods
cwtl
mov
add
pop
xor
nop
outsl
mov
or
lahf
dec
fbstp
cld
aaa
push
dec
xor
adc
mov
lcall
ljmp
push
jo
mov
into
xchg
sbb
xor
out
loop
ret
xor
and
cmp
aaa
xor
cmpb
rorb
out
mov
inc
cli
pop
dec
adc
jne
pop
push
subl
insl
inc
scas
mov
jno
rcr
jg
pop
enter
inc
add
hlt
mov
das
daa
mov
xor
std
lock
adc
in
jge
push
int3
clc
rcl
pushf
lcall
inc
xlat
sahf
sbb
sbb
notl
pop
pop
aam
jns
pusha
pusha
aas
add
jmp
mov
dec
ja
fnstsw
rorl
stos
mov
mov
out
aam
pop
js
ret
repnz
leave
adc
jb
add
add
pusha
stos
call
inc
insb
pushf
push
cmp
out
dec
pop
daa
add
sbb
and
push
js
filds
lds
and
stc
mov
sub
pop
fsubr
dec
test
sbb
lds
add
clc
or
and
pop
scas
out
or
jp
push
and
shll
sbb
jb
ljmp
dec
loopne
push
shll
sbb
fisttpl
scas
cld
cmc
arpl
outsl
and
and
es
repnz
dec
inc
pop
adc
jae
movsl
push
mov
jns
push
fsubrs
mov
les
filds
cmp
in
inc
pop
xchg
xor
sbb
fyl2xp1
add
lods
cmovl
loopne
cld
cmpsl
push
inc
xor
or
stos
mov
mov
fcoms
jp
mov
inc
cmp
add
xor
mov
add
mov
mov
mov
mov
scas
jb
mov
loop
add
jo
or
xchg
lock
int3
sbb
lret
enter
jae
imul
push
ds
std
and
stos
sbb
xchg
mov
and
inc
into
out
lods
test
dec
cmp
dec
add
fs
jne
jb
imul
dec
cmp
stc
push
leave
adc
pop
loopne
push
call
out
je
xchg
and
call
push
add
push
and
setp
out
inc
repz
fcomp
cmp
xor
inc
mov
pop
pop
pop
lcall
xchg
push
lea
loopne
add
sbb
xor
pushf
dec
loope
or
ret
cltd
outsl
adc
in
aaa
mov
stos
jae
nop
mov
int3
push
mov
and
and
stos
dec
push
jge
push
dec
sub
add
cmpsb
xchg
daa
adcb
xchg
fildl
arpl
add
inc
jge
loope
inc
aaa
pop
mov
add
adc
cmp
pusha
mov
cmp
out
pop
mov
pop
out
and
push
sbb
pop
jne
inc
andb
andl
js
mov
test
dec
dec
les
jge
stos
clc
mov
xchg
ret
stos
pop
into
cmp
cmp
and
repnz
ret
or
add
dec
je
xor
mov
icebp
jmp
insb
imul
test
adc
lret
mov
jp
jnp
adc
add
add
cmpsb
or
test
push
jmp
addr16
mov
dec
js
adc
inc
mov
sub
add
lds
stos
pop
xlat
fstp
fsubrp
push
aaa
fistpl
lds
push
fsubs
fmuls
jge
scas
outsl
cmc
add
stc
push
sahf
test
jno
push
jg
cmpsb
shl
jg
xlat
push
out
fwait
sbb
nop
popf
sub
lods
popf
iret
ret
fcoml
cmc
mov
ret
xor
mov
adc
adc
pop
xchg
sbbl
int3
das
or
sub
test
fdivrs
mov
mov
es
xor
dec
popl
shrd
jb
dec
pusha
mov
xchg
fcomi
lcall
push
mov
and
in
pop
sub
mov
dec
test
sbb
pop
mov
leave
or
int
xor
pop
adc
jp
push
pop
call
fsubrl
pop
pop
je
mov
test
lret
mov
mov
mov
push
arpl
enter
push
rcr
hlt
mov
sub
sbb
xor
pop
mov
cmp
pop
and
insb
sbb
sbb
mov
inc
imul
mov
fsub
lcall
push
dec
jge
jmp
push
stc
insb
adc
les
sub
bound
mov
push
inc
xor
sbb
jmp
lock
add
xlat
hlt
pop
mov
push
call
mov
ja
jg
sub
cmp
popa
push
jb
pop
xchg
cmp
lods
mov
sub
mov
or
data16
rcll
aaa
xchg
in
jl
fcoms
pop
in
inc
or
stc
test
orb
icebp
pop
adc
push
cli
cmp
cld
mov
xchg
jl
add
push
xchg
in
and
lds
js
mov
mov
ljmp
mov
cld
or
xor
test
fstpl
or
mov
pop
and
aaa
mov
fsubrl
cmp
xor
pop
mov
xchg
add
popa
fnsave
aas
int3
cwtl
pop
inc
add
test
fimuls
xchg
pop
push
cmp
ror
push
sub
fstps
clc
push
mov
andl
cmpsb
inc
shrl
mov
shll
out
lret
in
xchg
dec
es
adc
jns
fsubrl
mov
cmp
jecxz
sbb
mov
insb
pusha
aas
pop
push
sarl
xor
fildll
rolb
movsl
xchg
adc
fstps
pop
inc
adc
mov
int
add
sbb
lcall
pop
xchg
pop
dec
push
hlt
ljmp
cmp
je
xchg
sub
in
xor
in
sub
jl
insl
mov
ljmp
aad
test
dec
fwait
and
mov
in
mov
dec
and
loope
ss
mov
mov
push
and
call
sti
popf
roll
mov
dec
call
popf
sub
jnp
add
dec
in
out
or
clc
sti
lock
mov
stc
xlat
shlb
stc
jnp
repnz
jb
pop
pop
mov
mov
pop
mov
test
mov
lret
ss
xchg
out
adc
out
xchg
or
int3
insb
push
push
lahf
push
mov
nop
mov
cmp
jbe
movsl
std
mov
leave
movsl
jbe
mov
inc
pop
add
mov
insl
ret
daa
push
fistps
cmp
jns
repnz
loope
mov
icebp
xchg
jecxz
or
out
lea
push
or
and
pop
lods
add
insb
ljmp
inc
jmp
popa
cmp
inc
sub
mov
lea
jmp
push
fsubrs
add
and
mov
jg
jecxz
inc
lea
jae
xchg
cmpsb
xchg
leave
pop
lret
or
outsl
lahf
pop
fs
aaa
outsb
addr16
adc
jae
aas
test
test
sbb
jno
xchg
gs
adc
or
mov
pusha
cmovge
sbb
xor
add
pop
aam
clc
repnz
loopne
mov
and
cmp
or
mov
dec
outsb
jbe
mov
jle
pop
or
pop
leave
fucom
and
and
adc
push
mov
shlb
or
fsubrl
push
jg
aas
test
jge
test
sbb
stos
jne
jp
imul
cli
add
xchg
cli
push
sub
adc
loope
add
imull
push
fists
fimull
jae
pop
icebp
jmp
imul
push
jl
cmp
enter
xorl
lcall
inc
and
dec
lea
push
mov
adc
jl
cmp
cld
outsl
sbb
scas
movsl
pop
xchg
jg
pop
sub
stc
cmp
mov
rcr
sbb
xchg
mov
xor
xchg
loopne
jmp
xlat
out
adc
xor
sbb
pop
imul
cmp
jo
jl
icebp
js
or
mov
popa
test
jl
jle
mov
mov
std
jne
out
ss
sub
mov
repz
and
nop
test
xchg
sub
cmc
push
test
add
fnstenv
push
jg
mov
in
jecxz
xor
in
mov
xor
cli
pop
sub
mov
push
xchg
pop
pusha
in
shr
sub
jg
jle
xor
cmc
inc
test
dec
pop
lds
repz
xlat
cmp
mov
xor
pushf
adc
push
aad
mov
xor
jge
pop
and
pusha
pop
jecxz
inc
test
cld
xchg
adc
int
add
call
jns
ror
pop
mov
aaa
sahf
loope
cmp
jnp
repnz
sub
xchg
or
jg
jecxz
jae
jbe
sbb
cld
fs
jmp
jbe
sti
or
xchg
test
rolb
stos
test
cmp
ss
and
lret
jae
sub
test
jge
roll
or
cmpsl
ret
std
xor
in
sub
lods
and
adc
dec
pop
hlt
add
add
das
imul
dec
adc
lea
ljmp
adc
xor
cs
jo
int
mov
cld
outsb
sub
insb
jo
outsl
popa
andb
mov
dec
jne
adc
and
adc
pushf
clc
push
sub
mov
dec
lea
mov
jae
push
inc
in
mov
mov
mov
cltd
iret
sbb
cs
sub
aad
adc
imull
fwait
jo
mov
adcb
jge
xchg
mov
sub
out
fstp
mov
xchg
jne
inc
mul
cli
imulb
test
cmp
and
cmp
xor
inc
out
cmp
xor
xchg
jmp
pop
out
cld
int3
cmpsl
movsb
les
fcmovnu
push
insl
les
dec
sbb
sbb
outsl
cmp
sti
mov
sub
leave
rcll
addr16
popa
lret
mov
and
fldl
or
mov
jae
rorb
add
jo
test
xor
mov
lock
xchg
shlb
push
cmp
outsb
ja
add
xchg
cwtl
loope
add
jle
push
sbbl
shrl
inc
outsb
sub
pop
sbb
outsb
push
je
aaa
jae
lea
jge
pop
inc
or
or
ret
inc
ret
xorb
stos
loop
pop
nop
in
inc
movsb
das
lret
or
pop
mov
movsb
std
inc
mov
or
test
cmp
pop
xchg
mov
test
xor
xchg
and
jp
sbb
mov
push
int3
mov
repnz
leave
push
cmp
mov
aad
pop
mov
stos
fisubs
inc
pop
gs
mov
mov
aad
arpl
sbb
clc
dec
outsb
fidivrl
inc
dec
fsubl
sbb
loope
sub
idivb
jmp
adc
jle
aas
sbb
pushw
out
xchg
mov
test
icebp
mov
cmc
sbb
out
mov
gs
mov
push
add
imul
xlat
fstl
and
lret
cmpsb
mov
xchg
xor
dec
jp
jl
xor
stc
and
into
ss
rcrl
out
pop
mov
xor
xorl
adc
dec
xchg
add
scas
and
xchg
out
das
popa
stos
inc
sahf
mov
mov
xorb
fldenv
adcl
push
inc
inc
add
je
mov
pop
xor
and
add
cmc
sub
in
xorb
pop
or
or
add
pushf
in
sbb
lods
jge
loopne
sbb
dec
lcall
cmpsl
ret
sub
mov
push
test
neg
add
in
pop
sarl
push
iret
pop
inc
clc
scas
inc
idiv
into
dec
out
xchg
inc
xor
and
movsb
loopne
sbb
int
sbb
xchg
cmp
fcom
orl
xchg
sbb
xchg
or
outsb
jmp
dec
xor
dec
sar
scas
ds
ficomps
jo
xchg
stc
cli
fs
stc
xchg
inc
inc
push
cmp
int
inc
shrb
push
pop
and
or
pop
adc
stos
popl
ds
sbb
aam
push
mov
movsb
arpl
stc
sub
cmp
and
push
xchg
mov
xchg
xor
mov
shll
lret
fadd
mov
xchg
mov
and
xchg
push
fmuls
loop
insl
cmpsb
xchg
cmc
mov
sbbl
mov
pop
pop
jle
adc
fdivrs
sti
mov
sbb
jge
push
test
mov
mov
pop
pop
sub
xchg
insb
int
mull
jns
mov
cmp
jg
clc
sbb
rcll
push
sbb
adc
push
repnz
mov
xchg
popf
fwait
pop
cmpsl
pop
adc
or
decl
xchg
jne
add
gs
jg
add
jbe
or
movsb
jo
test
insb
mov
jl
xchg
and
rcl
jbe
imul
ss
mov
cmpl
lods
notb
fsubp
pop
sub
cmp
and
scas
je
push
push
pushf
adc
pusha
xor
fldl
pop
mov
stos
mov
rorl
insl
xchg
cld
inc
sub
popf
mov
or
pushf
xchg
fisttpll
xor
xchg
push
rcrl
les
in
add
popf
imulb
cmp
notl
mov
fs
add
dec
out
lods
addr16
dec
mov
ss
cmpsl
or
bound
adc
mov
ljmp
cld
dec
push
push
in
int
push
in
test
es
setle
cmp
dec
popa
cli
movsl
dec
mov
pushf
loopne
outsl
arpl
adcb
adc
cld
roll
xchg
fcompl
popf
cmc
sub
andb
mov
mov
cmp
outsl
movsb
adc
clc
stc
in
xchg
outsb
clc
idiv
cmpsb
cwtl
and
mov
bound
xor
out
sbb
mov
fldenv
add
xchg
jae
and
outsb
and
xor
inc
mov
inc
push
pop
lahf
fmull
int
scas
ds
or
test
insb
lods
mov
out
mov
and
es
add
push
inc
push
dec
fnstcw
repz
xchg
push
xor
daa
loopne
cltd
cmpsb
pop
aad
ss
or
mov
inc
lahf
push
and
sahf
cmpsl
xlat
punpckhdq
xchg
pushf
stos
xchg
aaa
fisubrl
push
sbb
jle
roll
xchg
sbb
dec
or
inc
xchg
mov
push
or
rolb
mov
xor
aas
xlat
and
cmp
sub
fnstenv
pop
lret
dec
xor
and
in
loopne
sub
icebp
jmp
cmc
mov
inc
jno
les
ret
adc
mov
lret
mov
out
xchg
dec
sbb
mov
stc
push
repz
insl
push
inc
cmp
jmp
dec
cld
mov
pop
xchg
insb
pop
mov
int3
jae
mov
mov
outsl
test
icebp
pop
mov
into
push
jno
xchg
lret
mov
movsb
pop
jmp
jge
mov
pop
mov
xor
push
xchg
dec
add
xchg
icebp
or
loopne
pop
and
dec
jnp
or
call
fildl
shll
bound
cmp
shrl
gs
imul
mov
ret
lahf
loopne
call
jle
fbld
imul
push
rol
jg
sub
shrl
push
cmpl
aad
lea
mov
in
fsubrs
lcall
rol
push
xchg
idivb
adc
xor
daa
out
lahf
call
or
bound
test
xchg
jmp
pop
icebp
jno
in
fmuls
test
cltd
adc
mov
lcall
mov
xchg
push
lret
std
outsl
push
ret
pop
stos
lea
cmp
push
call
ja
or
dec
mov
orl
xchg
fdivl
popl
jnp
out
shl
pop
jnp
std
out
rcrb
insl
in
dec
lds
push
fimull
inc
insb
lods
jne
mov
je
sbbb
int
sub
dec
mov
xor
jp
fdivl
push
test
mov
or
pop
pop
adc
sub
mov
sbb
xchg
roll
sahf
les
dec
push
addr16
out
decb
mov
xchg
insl
xchg
ror
add
jp
inc
rcll
sti
xchg
out
lcall
or
fstpl
adc
loop
movzwl
adc
aas
ljmp
aam
scas
or
ja
and
inc
and
clc
sar
mov
cwtl
xchg
dec
sbb
pop
int3
jne
cmp
js
fnstenv
jbe
add
mov
out
fiaddl
push
xchg
xlat
cwtl
sbb
cmp
jae
and
jl
and
out
sub
rorb
cmp
lret
mov
cmp
fsubrs
addr16
lcall
cwtl
jge
xchg
outsl
arpl
stos
xchg
jae
cmp
xchg
xor
inc
push
xor
mov
popa
or
xchg
push
push
jno
lods
loop
mov
clc
xchg
sub
dec
cld
dec
int
add
hlt
cli
mov
test
mov
loopne
ret
push
mov
fsubrs
popf
lahf
mov
decl
mov
jp
dec
shll
xchg
aad
ret
or
test
andb
aam
cmp
mov
imul
jle
aas
loope
js
jge
push
into
and
push
sbb
push
movhps
loop
lods
stc
rcl
filds
jne
ds
lret
andl
fistpl
movl
and
mov
insb
cmc
aam
popf
mov
lds
int
outsb
das
adc
adc
and
loopne
jle
js
xor
mov
outsl
lret
jle
jg
mov
nop
fcompl
stc
lods
sti
cmp
dec
or
push
jle
jg
sub
sbb
lcall
std
js
pop
in
repz
das
mov
insb
inc
inc
outsl
jae
stc
jns
sahf
dec
popf
mov
push
mov
ret
mov
push
inc
mov
sarb
add
fnsave
and
push
adc
jb
add
inc
movsl
push
sub
add
mov
popf
push
inc
lea
xchg
lret
add
fincstp
repz
mov
test
aad
sarl
movsl
lea
xchg
jne
cmp
test
arpl
xchg
nop
nop
and
cs
fwait
xchg
loope
and
clc
mov
adc
adc
adc
and
jmp
in
cmp
jle
aaa
fdivrl
and
or
cmpb
sub
sub
xchg
lock
aam
in
ss
sub
pop
clc
push
loopne
xchg
pop
adc
nop
push
fbld
icebp
jp
cmpsb
aad
push
inc
add
mov
andb
mov
mov
xor
push
xor
addl
jecxz
in
or
sbb
repz
loopne
adc
leave
nop
sbb
ret
fsubs
or
test
insl
push
mov
pop
or
lods
adc
sub
in
stos
inc
lret
stc
repz
fsubrs
pop
shll
rclb
ja
imul
pop
mov
into
push
xchg
sub
cmp
dec
mov
nop
lods
mov
and
jecxz
push
rcll
rcrl
dec
aam
jnp
loope
push
sahf
in
jecxz
repz
loop
sbb
insb
mov
mov
shr
mov
sti
ret
out
je
xor
inc
fldenv
jbe
pop
addr16
mov
out
dec
daa
push
sub
cli
lret
sbb
mov
dec
mov
xor
pop
mov
out
scas
add
and
push
inc
push
sarl
pusha
xor
dec
push
sahf
test
mov
sarb
add
push
adc
add
test
add
add
xrelease
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
data16
add
addb
aad
cs
inc
std
fcompl
add
push
add
jge
sub
mov
push
and
dec
mov
cmpl
cmp
inc
fidivs
in
lcall
or
xor
jecxz
orb
or
inc
mov
ja
test
daa
movsb
add
jbe
sub
mov
push
push
in
call
cmp
inc
and
cmp
mov
cmpsl
fcmovnbe
jb
scas
mov
xchg
sbb
mov
aam
inc
mov
in
and
loope
dec
ret
jne
int3
jno
data16
jae
jno
out
sub
cmp
dec
sub
fsubl
inc
jmp
mov
stc
test
inc
jp
and
ss
loope
leave
pop
dec
loop
dec
cmpsb
sub
sub
jle
adc
inc
test
stos
ss
lea
sahf
jp
scas
xchg
fstpt
or
jp
ja
mov
andl
sub
out
inc
fwait
and
adc
mov
push
adc
xor
mov
enter
test
pop
sub
jns
mov
repnz
adc
or
ret
imul
mov
mov
cltd
insb
mov
and
das
xor
pop
xor
rcrb
cs
cmp
jne
xor
pop
movsb
push
incl
sub
cmc
and
add
xchg
movsb
loop
out
mov
aas
or
rcr
pop
mov
in
sub
rolb
jns
das
ljmp
adc
push
test
test
inc
pop
lret
dec
xchg
out
jmp
push
jle
and
ss
lods
jg
mov
jnp
inc
jecxz
dec
int3
pop
out
inc
cmp
inc
adc
dec
and
dec
fs
dec
add
in
jnp
fs
dec
mov
nop
repnz
xchg
add
popa
fcomp
lds
inc
sbb
push
mov
adc
shr
sbb
outsb
pop
ret
stos
adc
in
int3
xchg
jno
jno
lock
out
cmpsb
orl
inc
aad
add
mov
pusha
fucomip
cmp
mov
hlt
sub
pop
pop
jae
and
adc
stos
mov
dec
add
ja
scas
push
lock
out
cmpsl
inc
data16
mov
sar
pop
rol
dec
push
test
dec
stos
or
test
in
or
subb
addl
scas
popf
icebp
cmp
in
and
xor
dec
cs
mov
ss
jg
or
in
scas
sub
or
fcmovu
jo
add
scas
icebp
add
mov
dec
mov
mov
aad
mov
xchg
enter
in
loope
fsubl
out
popf
pop
xchg
mov
jnp
push
test
push
sbb
test
mov
andl
push
adc
pop
loop
andb
add
adc
add
je
adc
aam
add
or
lods
loop
jbe
mov
pop
mov
xor
sbb
mov
inc
inc
out
dec
jecxz
or
cmp
and
fistps
popf
lret
adc
adc
inc
add
sub
mov
in
out
cmpsb
jl
int
xchg
push
js
mov
dec
mov
push
js
dec
fwait
push
orl
insl
push
mov
adc
rcr
idivl
lahf
rcrb
dec
push
cmp
in
and
mov
cmp
add
fdivl
jbe
les
jb
jns
adc
pop
clc
nop
in
mov
sub
sbb
mov
out
adc
mov
je
inc
aad
xorl
inc
and
inc
adc
rol
test
faddp
loope
dec
pop
int3
cld
pop
xchg
je
mov
adc
fcmovne
cltd
cli
aam
lds
outsb
and
pop
sbb
sbb
xor
ret
in
scas
gs
call
sahf
and
mov
inc
in
imul
sub
push
mov
shlb
andl
jno
push
sub
mov
cmp
addl
popa
cli
jns
pop
arpl
in
add
mov
test
and
add
xchg
sub
rcl
cmp
jg
sbb
xor
sbb
inc
push
mov
adc
cwtl
flds
lahf
pushf
js
call
imul
mov
call
ficoms
movsb
mov
icebp
nop
cmp
push
lods
mov
jmp
pushf
ds
lcall
mov
sub
adc
idivb
mov
sahf
inc
cmp
fdivl
adc
out
out
mov
cmp
mov
mov
adc
arpl
sbb
dec
das
push
sbb
aam
mov
sbb
inc
xlat
rorb
sti
and
ja
fcomp
sbb
pop
sbb
sti
xchg
mov
jnp
xchg
out
mov
cltd
mov
pop
popa
dec
jmp
inc
or
pushf
scas
and
fdivrs
outsl
ret
mov
scas
sub
sbb
sub
and
pop
dec
jnp
xchg
cmc
xor
push
mov
testb
out
push
xlat
fisubrl
rcr
mov
ret
push
jp
cmp
pop
je
pop
mov
sub
stos
in
xlat
sub
cmp
jecxz
xchg
pop
jmp
xchg
ss
push
sbb
and
jge
mov
inc
mov
mov
mov
cwtl
clc
sub
jmp
hlt
in
dec
shlb
xchg
jns
clc
int
dec
nop
into
mov
push
cmpsl
shl
les
mov
aas
inc
es
mov
pusha
cltd
pop
push
fsts
gs
inc
js
popf
adc
sahf
imul
fwait
cmc
jne
cmp
inc
sub
movsb
push
add
data16
cmp
pop
mov
loopne
pop
dec
jns
lret
lahf
xor
jecxz
push
data16
mov
outsl
ljmp
sub
sbb
lret
movsl
ljmp
cs
call
jno
std
in
testb
mov
xor
fidivrl
dec
dec
clc
cmp
ja
sbb
inc
rolb
xchg
cs
jbe
sbb
xchg
loop
aad
jmp
mov
xchg
and
aas
ret
arpl
fidivrl
addb
pop
iret
pushf
inc
movsl
mov
into
les
shl
lock
xchg
sbb
mov
cmp
add
movsb
gs
jb
jo
dec
mov
cld
xor
dec
nop
push
cwtl
push
cwtl
popa
pop
sbbb
xor
imul
dec
fldt
mov
in
inc
sub
dec
mov
in
lods
pop
add
or
repnz
or
sbb
je
push
and
xor
jp
pop
adc
mov
in
xchg
pop
inc
pop
rorl
push
jl
subb
inc
and
inc
cmp
lods
pop
repnz
mov
jg
dec
ret
lahf
insl
pusha
xor
shrl
or
xchg
cmpsb
and
mov
mov
test
inc
lret
or
mov
rclb
sub
bound
es
testl
lea
mov
push
scas
adcl
sub
dec
sbb
push
outsl
sub
inc
bound
test
cltd
xor
outsl
jge
dec
enter
mov
sbb
popf
add
mov
and
fnstcw
push
addl
ret
cmp
hlt
fwait
cmp
in
aad
mov
sbb
inc
mov
and
mov
mov
add
fistpl
or
cmpsb
mov
lret
mov
pop
insb
mov
js
push
mov
mov
xor
mov
sub
test
addl
or
mov
and
dec
mov
cmc
pop
dec
ds
ror
dec
aas
scas
mov
inc
das
bound
int
push
ss
mov
shll
sbb
dec
cmp
test
jmp
jecxz
mov
inc
loope
out
fdivs
pop
xchg
stos
into
push
inc
sbb
xchg
mov
in
cltd
ljmp
test
push
das
pop
les
sti
adc
sub
mov
push
mov
mov
xor
mov
add
out
mulb
adc
push
loope
out
daa
fldcw
xlat
dec
mov
jg
mov
ds
lods
mov
push
rcll
test
pop
sbb
cmp
sub
nop
dec
pop
mov
push
adc
lods
std
push
push
sub
andl
arpl
insl
outsb
jbe
pushf
enter
das
add
cmp
mov
inc
xchg
xchg
and
cs
mov
nop
out
aam
addb
mov
xor
mov
rorl
dec
loope
mov
dec
dec
fnstenv
aaa
sbb
loope
add
mov
add
int3
adc
sbb
inc
dec
aaa
sub
cmpb
pop
jl
hlt
gs
add
xchg
xor
jae
xchg
push
pop
push
gs
mov
mov
inc
pop
or
mov
std
adc
test
mov
xor
out
inc
out
into
pushf
orl
sub
add
notl
loope
jns
push
or
cmp
ja
or
pop
int3
inc
out
repnz
mov
movsb
push
repnz
pop
sbb
movsb
inc
out
fcompl
lcall
sti
fs
push
scas
mov
aad
in
bound
dec
mov
lods
xor
mov
ss
jbe
lods
outsb
bswap
add
dec
cld
pushf
inc
mov
add
orl
rcrl
gs
pop
decb
cld
push
mov
pop
lods
sar
sbb
fstp
arpl
or
nop
adc
sbbl
mov
push
pop
in
and
push
out
pop
shl
jmp
lcall
adcb
push
in
inc
or
cmp
arpl
push
jne
cmp
inc
mov
inc
xchg
gs
popa
jno
ret
fisttpll
mov
mov
insb
xchg
push
push
aam
add
faddl
popa
and
xor
mov
outsl
in
jne
loope
in
daa
and
jecxz
movsb
les
jmp
popa
mov
and
adc
in
outsb
mov
inc
loop
scas
aas
mov
xchg
in
jb
hlt
mov
xchg
cmpsl
sbb
pop
mov
sti
jbe
xor
push
scas
imul
jno
scas
or
lret
pop
jmp
sahf
sub
push
sub
xorb
fwait
add
or
fisttpl
mov
mov
pop
cld
push
cmpsb
stos
pop
jg
pushf
cltd
push
test
scas
mov
mul
jmp
mov
and
dec
movsl
dec
test
popf
add
inc
sub
inc
adc
mov
mov
mov
mov
mov
jle
ljmp
es
sarl
xchg
sub
scas
mov
loopne
pusha
bound
les
in
mov
int
or
adc
fcmovb
sbb
sti
testb
lret
inc
pcmpgtw
or
cmp
out
icebp
popf
imul
clc
push
fs
pop
cmpsb
fisttpll
xchg
outsl
aam
push
dec
inc
stos
and
pusha
sub
into
mov
fprem1
xorb
pop
insb
sub
ss
jecxz
pop
xor
es
addr16
mov
hlt
cmp
sub
roll
mov
push
aaa
push
cmpsl
outsb
mov
jecxz
int
or
mov
sbb
dec
jnp
mov
lock
scas
stos
mov
sub
ja
test
enter
sub
iret
mov
sub
subl
and
ja
scas
sti
cmp
fcomip
into
xor
mov
sti
or
sti
push
clc
jne
lret
push
lcall
out
xor
sar
adc
or
inc
xchg
movsl
in
pop
rcrb
dec
mov
jno
int
dec
into
jno
das
lret
ss
xchg
push
pop
and
jecxz,pt
sbb
pushf
mov
mov
inc
and
lock
lods
rorl
inc
aaa
mov
dec
lods
xor
rcll
mov
call
das
add
jb
xor
repnz
js
sub
pushf
mov
insb
shlb
sub
ss
and
cmp
or
and
subl
adc
jae
xchg
pop
int3
cmpsb
pushf
cmpsb
sbb
mov
mov
in
adc
leave
inc
movsl
out
jle
ljmp
cwtl
pop
pop
mov
aam
cs
fabs
cmc
mov
hlt
cs
adc
jo,pn
jg
inc
push
movsb
aas
or
cmp
pushf
pop
inc
adc
adc
int
xor
int3
and
cmpsl
or
jbe
xchg
dec
mov
push
mov
and
cmpsb
inc
je
stos
testb
inc
adc
movsl
aam
pop
push
xlat
mov
sub
iret
adc
shll
ror
xchg
jne
mov
lret
fdivs
ja
jecxz
inc
mov
jae
in
xor
cmp
cltd
xchg
sbb
out
push
push
aaa
cmp
dec
and
mulb
sbb
mov
mov
adc
jecxz
insl
shl
cmp
inc
mov
push
adc
jg
out
fstl
pop
scas
repnz
sbb
adc
inc
out
or
mov
outsb
pop
mov
jle
outsl
adc
fisttpll
mov
inc
inc
xor
scas
leave
push
sbb
ficoml
adc
inc
int3
fs
sarb
dec
sub
inc
lret
xchg
add
mov
push
inc
bnd
jae
push
xor
cs
out
fstpl
movsb
push
sbb
xor
inc
fidivrs
jp
xchg
pop
xor
fs
xor
inc
enter
and
jbe
pop
jge
xor
or
xlat
es
cmp
xchg
mov
mov
lea
push
cmp
sub
inc
jnp
dec
vhsubpd
ja
ret
pop
ljmp
mov
data16
jmp
andl
fwait
mov
mov
push
mov
jb
testl
ss
jb
sbb
push
fistpl
outsb
pop
subl
xor
sub
subb
ror
and
loope
aaa
inc
jno
fs
cmp
and
out
xchg
push
loop
mov
sub
push
xchg
mov
jae
lahf
in
lods
mov
stc
ss
sahf
enter
jp
jnp
wbinvd
lret
mov
pop
or
lds
lahf
testl
cld
push
rclb
leave
loop
inc
xchg
mov
shr
ds
add
add
ljmp
push
imul
je
adc
cmpsl
add
push
mov
ficomps
adc
das
cltd
push
push
fcmovnu
test
pop
cwtl
xor
adc
and
mov
and
fnstsw
push
out
xor
pusha
jne
aas
xor
call
sub
mov
mov
ret
push
pop
jg
lret
std
push
jno
jmp
stc
inc
loopne
push
pop
push
push
fwait
movsb
inc
inc
add
mov
test
mov
push
aaa
shrb
sbb
or
jg
lock
in
dec
sub
jo
jp
inc
inc
sbb
test
dec
sahf
shll
nop
mov
cmpsl
mov
and
leave
push
pushf
cmp
cmp
inc
into
pop
out
xchg
push
inc
cmp
loop
mov
xorb
push
jne
pop
ds
test
loop
call
push
or
scas
adc
ds
cld
jns
imul
push
jae
mov
loopne
inc
insl
faddp
pop
dec
cltd
sbb
out
scas
out
push
fldenv
popl
subl
imul
rorb
pushf
test
rol
sahf
test
xor
iret
jge
loope
fs
sbbl
and
cmp
fcmovbe
iret
dec
mov
add
mov
cmp
or
or
sbb
testl
inc
mov
shll
lret
cs
loop
sub
lret
jp
dec
cmp
cmp
icebp
repnz
push
dec
jb
lea
int3
sbb
push
rol
shll
imul
shr
push
mov
sub
inc
dec
call
mov
adc
mov
psrad
mov
lea
mov
pop
add
or
jmp
lds
inc
pop
mov
mov
int3
in
idivb
sbb
test
mov
test
xchg
pop
pop
adc
jge
mov
fdivp
cmp
mov
fwait
ret
ss
dec
jle
mov
mov
decl
mov
push
add
sub
hlt
cmp
out
aad
mov
inc
xchg
mov
lret
rorl
fisttpll
xchg
ja
sbbl
inc
enter
push
mov
adc
or
xor
xchg
es
mov
sahf
shlb
fisttps
or
outsb
mov
imul
mov
mov
subb
cmp
cmp
aam
adc
test
lods
arpl
das
push
loopne
test
inc
enter
push
jno
add
jmp
pushf
cmp
and
jns
dec
imul
cli
insl
pop
xor
dec
in
ret
gs
dec
lahf
shl
and
xchg
jne
pop
mov
push
add
pusha
cmp
fisttpll
int3
aaa
mov
cmovb
or
sbb
xchg
cwtl
fildll
adc
sbb
xor
test
icebp
xor
push
leave
sahf
inc
jb
push
ret
jg
addr16
jmp
cmp
mov
std
loop
adc
cmp
xorl
sbb
inc
gs
stos
lods
fcomps
ja
sti
or
lods
pop
xlat
mov
push
aaa
icebp
sarb
ljmp
je
xchg
add
lods
gs
jno
popf
xchg
mov
addr16
push
push
ret
sub
xchg
aaa
jle
sbb
cmp
pop
mov
sarl
jge
sub
sbb
xchg
in
sub
out
pusha
repz
ud2
pop
shrl
inc
adc
out
jp
fiadds
xor
scas
push
sub
in
inc
mov
cmp
xchg
in
mov
sub
add
out
mov
dec
inc
xchg
push
test
bound
add
cli
mov
fsubs
add
push
push
xor
stos
push
jbe
mov
add
push
dec
dec
hlt
push
out
inc
sbb
ss
mov
push
test
mov
out
movsl
xorl
pop
mov
cmpl
inc
mov
add
sbb
mov
cwtl
inc
or
rcrl
dec
loopne
and
outsw
mov
push
test
jae
xchg
fdivr
pop
cmp
mov
fdivs
xor
cld
inc
outsb
in
pop
stos
add
or
lret
and
clc
jno
xor
push
repnz
jle
or
mov
adc
or
sub
rol
push
xchg
outsb
icebp
test
int
imul
sub
jno
ja
jb
lret
push
insl
scas
insb
inc
aad
out
mov
les
and
jbe
xlat
aad
xchg
daa
aas
xchg
insl
outsl
add
lcall
fcmove
jl
pop
xchg
adc
mov
pop
xchg
inc
fcoml
jmp
xchg
in
stc
jbe
xor
xor
mov
cwtl
ret
inc
inc
pop
adc
js
mov
sub
dec
and
cmp
rolb
in
mov
into
shl
test
sub
pcmpgtw
cmp
cwtl
add
xchg
movsl
rorl
std
add
ret
adc
jg
push
push
int
or
faddp
pushf
ljmp
adc
les
mov
adc
sub
lds
xchg
mov
ljmp
les
or
or
mov
sti
ljmp
pop
out
sub
cld
adc
sbb
pop
mov
dec
push
mov
mov
adc
sahf
jno
mov
cmp
lahf
outsb
test
mov
inc
mov
jle
inc
mov
fwait
mov
mov
push
pop
add
shrb
cmpsb
pop
dec
pop
adc
mov
and
popf
arpl
data16
xor
lds
mov
orl
popf
stos
sub
inc
ds
int
mov
int3
sub
in
pushl
enter
fimull
mov
cmpl
push
cli
jne
pushf
mov
jmp
inc
mov
push
mov
ljmp
xchg
xor
sub
sbb
sub
mov
mov
enter
shll
stos
push
xchg
mov
inc
inc
in
rcll
and
sbb
xlat
mov
jbe
mov
jae
xchg
fsts
cli
hlt
pop
inc
cmpsb
mov
xor
jp
or
loop
cmp
push
cmp
out
ret
sub
bswap
rcr
rcrl
xchg
sti
sti
jne
and
pop
shll
mov
dec
lods
cmp
mov
xlat
outsl
and
int3
cmp
inc
xchg
jns
ds
stos
rorl
cmp
pop
out
fs
sbb
pop
stc
adc
and
out
call
out
test
jae
dec
adc
lock
ja
xchg
adc
jge
fnstcw
pop
scas
iret
xchg
js
mov
sbbb
or
ficoms
fcompl
cmp
mov
insb
mov
ljmp
or
dec
sahf
cmc
and
push
or
sahf
sbb
lret
movsb
stc
xchg
stos
aaa
add
push
jg
pop
and
push
clc
adc
pop
or
dec
stos
or
fdivr
dec
dec
popf
notl
jp
testb
insl
lea
nop
and
xor
mov
dec
pop
lods
popa
jg
nop
das
or
js
sahf
lcall
pop
ds
jns
das
dec
sub
pop
pop
leave
cs
inc
inc
fcomps
xor
test
pop
xor
cmp
mov
adc
in
bound
mov
cmp
cmc
shl
xor
fcomps
xlat
pop
sub
movsb
sbb
test
fs
loopne
sub
and
cmpl
loop
xor
pop
sub
xchg
in
dec
mov
and
pop
shll
jnp
sub
mov
jg
mov
shrb
sahf
inc
ret
push
dec
push
mov
xchg
or
add
or
rcrb
pop
add
push
in
dec
iret
inc
andb
aas
add
push
int
or
test
jmp
xchg
icebp
daa
push
imul
adc
dec
fld1
mov
test
push
mov
sbb
xchg
adc
pop
outsb
movsl
push
fldl
iret
inc
outsl
pop
aas
fmull
das
andb
push
orl
enter
cmpsl
cld
pop
mov
inc
rolb
lahf
or
push
cwtl
inc
dec
xor
lret
stos
dec
mov
sub
adc
or
out
lret
dec
push
clc
xchg
or
xchg
mov
mov
mov
nop
test
imul
pop
push
cs
test
nop
addr16
lock
jo
lock
outsl
cwtl
pushf
mov
cmp
or
push
clc
add
pushf
push
pop
bound
pop
jl
loope
arpl
mov
ja
scas
xlat
mov
inc
sahf
dec
rcrb
imul
push
and
int3
lret
mov
cli
mov
gs
cmp
mov
mov
dec
fdivrs
push
mov
cmp
cltd
call
std
push
pop
stos
jb
outsb
nop
addr16
arpl
rcll
lret
movsb
scas
or
sti
fldl
push
fisttpll
add
mov
xlat
cmp
push
popf
jmp
push
dec
rcll
inc
addr16
pop
pop
cmp
fs
daa
mov
and
cmp
faddl
cmp
sub
test
jecxz
cld
xor
addl
lods
inc
or
movsb
mov
in
ret
mov
xor
sbb
xor
shll
mov
mov
aas
adc
push
dec
test
lahf
cmpsl
test
fisttpll
pushf
sub
fisubl
cmpsl
mov
mov
lret
xorb
lods
push
add
outsl
and
repnz
fsubrl
int3
sahf
xchg
push
push
fcomps
push
sub
cltd
cli
jb
and
imul
maskmovq
imull
fdivrl
push
ds
pop
mov
mov
lods
xlat
mov
push
xchg
mov
fdivl
orl
dec
jo
es
and
lahf
fldenv
cmp
cwtl
or
adc
scas
sub
js
imull
push
cmc
ja
push
mov
shlb
dec
and
jecxz
out
or
mov
xchg
mov
in
and
mov
in
pop
es
or
lahf
dec
mov
fcomps
adc
xor
push
lods
xchg
mov
cmp
mov
sti
out
lea
rorl
sti
dec
and
fwait
jmp
jae
insb
out
xchg
mov
inc
and
pop
jb
add
mov
sbb
cmp
mov
cwtl
mov
pop
nop
mov
mov
aas
std
sarl
scas
aaa
mov
adc
cmp
lcall
xchg
outsb
loopne
test
pop
pop
je
xor
loopne
outsl
fstl
pop
mov
sub
mov
cmpsl
int3
xor
adc
mov
mov
sti
push
sbb
mov
aad
movsb
dec
mov
pop
gs
push
sti
pop
out
sti
lock
mov
xchg
cmpsb
fbld
adc
adc
xchg
or
push
daa
fsubrs
into
push
xchg
jbe
cmp
push
jg
pusha
int3
adc
xchg
add
addl
lock
mov
aas
fstps
mov
and
push
pop
mov
xor
orb
cmp
sbb
cmp
shlb
jp
sbb
adc
movl
push
xor
pusha
daa
cld
cmp
inc
push
cmp
ljmp
cmp
leave
in
xlat
andl
cmp
lahf
stos
mov
dec
mov
addr16
jo
push
pusha
jae
cmpsb
or
pop
push
ja
sbb
cli
repnz
frstor
movsb
inc
sub
clc
jecxz
or
mov
fwait
repz
or
lret
scas
jnp
loopne
lahf
or
fsubl
or
cmp
xchg
pusha
add
arpl
addr16
mov
pushf
add
sbb
popa
icebp
mov
sbb
xchg
xchg
push
dec
repz
test
aad
cli
fucomp
sbb
int3
sub
sbb
stos
ficomps
or
sub
out
jno
loopne
adc
mov
push
in
jle
outsb
and
xchg
fstps
or
push
and
add
mov
cld
cmp
xor
arpl
and
mov
dec
xchg
std
cmp
scas
jg
cld
xor
cmp
add
mov
movsl
mov
cmp
cmp
dec
push
lret
aam
dec
jno
adc
jmp
dec
into
push
mov
lods
mov
mov
lock
add
cmp
movsl
and
jle
fdivl
cltd
rcl
fisttpl
cmp
pushf
shll
push
xor
insb
popf
jbe
xlat
inc
test
out
pop
stos
push
mov
inc
int3
sbb
pop
aad
rcrl
cmp
jmp
pop
adc
and
or
cmp
mov
repnz
movsl
push
aad
fwait
and
sub
insl
out
ret
jae
push
insl
loopne
fsts
xor
mov
and
enter
pop
jae
or
shll
push
sub
xor
push
cmpsl
xchg
popf
insl
ficompl
das
cwtl
in
mov
pop
sub
inc
cmp
clc
insb
shrb
das
ljmp
sub
repz
int
addr16
mov
aad
sarb
les
pop
sub
movb
shlb
mov
adc
push
das
movsb
xor
imul
orb
nop
loop
lret
dec
aaa
add
iret
call
nop
fmuls
insb
jecxz
in
pop
pop
sbb
push
lea
dec
rol
cwtl
add
xor
enter
mov
mov
cltd
test
jno
push
movsb
inc
mov
ja
dec
sti
sub
and
mov
or
xchg
and
test
js
push
sahf
stos
lea
icebp
lea
fmul
sbb
test
jecxz
nop
test
mov
sub
dec
xchg
mov
mov
sub
cmpsb
jne
cmp
mov
or
ficoml
test
testl
imul
gs
mov
mov
sbb
repz
in
push
fdivrs
in
push
ljmp
rorb
dec
loope
stc
cld
pop
and
adc
fdivs
xor
shlb
push
cltd
mov
adc
jmp
lods
or
inc
mov
xchg
add
and
in
shlb
sub
scas
hlt
sarb
int3
sarb
and
cli
xchg
dec
sub
orl
cs
fistpll
enter
lods
sub
sbb
loop
or
fcmovu
add
sub
jo
int
xchg
movsl
sbb
incb
jb
popa
mov
sahf
test
cmp
les
mov
dec
lods
js
push
jns
xlat
clc
add
mov
xor
push
pop
cmp
arpl
jnp
mov
cmpsl
jmp
push
push
xchg
es
jbe
dec
xchg
xor
mov
shlb
cmp
mov
pusha
add
scas
insl
xchg
lods
ret
lret
mov
mov
loopne
ds
rep
xchg
pop
jmp
das
pop
mov
outsb
push
enter
xor
sub
pop
lahf
outsl
xor
sti
and
or
mov
dec
rol
inc
mov
daa
jbe
push
lcall
jmp
arpl
dec
shr
iret
mov
and
jmp
sahf
sub
jl
mov
push
jno
mov
dec
pop
push
mov
mov
inc
jns
add
or
inc
cltd
outsb
push
into
cli
imul
sbb
in
adc
pop
xor
xchg
in
aaa
nop
pop
shrl
sarb
mov
push
in
jle
jge
xchg
insb
mov
mov
hlt
es
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
dec
sahf
icebp
outsl
mov
sbbl
subl
pusha
and
arpl
xchg
out
xchg
cmp
aad
fidivrs
push
clc
sbb
mul
or
or
arpl
rcl
cmp
jl
adc
mov
push
jae
mov
push
mov
mov
sub
push
adc
fldt
popf
cmpsb
mov
jmp
imul
add
cmp
hlt
in
mov
push
outsl
cmpsl
ja
mov
jo
pushf
enter
push
cmc
mov
jns
repnz
pop
cmpsl
into
push
mov
stos
xor
aas
fidivrl
sahf
xor
adc
out
and
lret
imul
aaa
jo
out
add
jae
and
pop
inc
mov
stos
sti
rorl
lret
mov
add
out
in
mov
xchg
push
and
das
cmp
out
sub
push
jp
sub
or
out
xchg
push
push
ficomps
xchg
fmuls
cmpsb
subb
mov
xor
and
xchg
jge
lret
loopne
cmp
loope
lods
rolb
or
rcrb
icebp
mov
dec
lahf
push
iret
in
in
pop
mov
das
cwtl
dec
mov
mov
call
mov
and
subl
repz
rcl
test
push
xchg
cmp
or
pop
js
out
insb
in
into
aad
insl
imul
sbb
in
add
dec
jno
lea
sbbb
push
push
out
xchg
push
mov
and
add
adc
out
inc
ret
mov
ds
inc
push
inc
inc
shlb
pop
xlat
cmc
popf
mov
js
addr16
icebp
mov
jmp
vpsubusb
mov
cmp
pop
ja
scas
xchg
movsb
or
xchg
lods
rol
sbb
xor
or
cmp
popf
lods
xor
xlat
out
push
xchg
jmp
shrl
shlb
sbbb
lods
mov
fcoms
adc
insb
xor
adc
addr16
cmp
pop
dec
sbb
mov
cmp
inc
mov
inc
xor
shrb
in
sar
add
clc
xor
ja
sub
xor
test
gs
imul
fcompl
or
jae
movsl
sub
jno
int
stc
lds
dec
dec
in
mov
out
insl
ljmp
clc
mov
xchg
sti
inc
add
pop
xchg
inc
jmp
add
add
pop
cli
pop
and
arpl
cmpsw
out
imul
mov
lret
add
out
repz
or
mov
fwait
inc
mov
pop
orb
lods
repnz
bound
cmp
loop
mov
mov
inc
inc
stos
push
sbb
inc
sub
adcl
mov
mul
push
in
les
xchg
jno
or
mov
jbe
jb
arpl
sahf
push
test
xchg
mov
ss
test
adc
cli
cmp
jle
sbb
mov
std
jmp
incl
cltd
adc
and
nop
repnz
fidivl
xor
push
push
sbb
negl
dec
test
xor
add
dec
mov
dec
add
adc
popa
mov
lcall
mov
jecxz
aam
loopne
pop
test
push
fmuls
xor
add
roll
adc
add
mov
repnz
std
mov
call
xor
mov
cld
scas
adc
rolb
sub
inc
faddl
mov
sub
shl
cmpsb
fmul
shll
cmp
push
sub
mov
mov
fcomp
pop
mov
and
adc
ret
push
rol
pop
mov
push
pop
push
and
push
xchg
repz
and
lods
loope
imul
pop
dec
pop
or
bound
lret
mov
pop
mov
adc
cwtl
push
mov
mov
mov
inc
dec
int
xchg
xchg
push
cmpsl
fs
mov
cwtl
mov
aas
stc
clc
in
xchg
outsb
test
sbbl
push
mov
test
pop
insl
outsb
mov
sub
fsubl
pop
in
xchg
stos
loopne
es
mov
jno
mov
stc
cmp
push
mov
pop
xchg
shrb
test
push
into
movsb
pop
add
outsl
out
cmp
adc
loop
popa
data16
xlat
pop
ljmp
test
add
xor
mov
sbb
leave
and
cmp
int
lahf
and
push
pop
cmp
in
je
lret
xor
mov
mov
adc
pop
or
out
scas
int
js
adc
notb
dec
andl
loope
sbb
mov
xor
rorb
jge
add
jbe
outsl
nop
fcmovb
cld
lock
dec
lock
pop
jne
jp
add
fs
ss
xor
lret
mov
pop
mov
xchg
daa
mov
ss
xor
ret
enter
xor
push
dec
sub
adc
mov
mov
leave
jle
enter
fcmovne
shl
jl
gs
cmp
mov
adc
xchg
dec
sahf
mov
insl
sti
lret
sbb
pop
sbb
fisubrs
ret
dec
repnz
sti
sub
jo
push
enter
test
shl
or
push
lds
fstpl
out
rcrb
jmp
int3
in
popf
xor
nop
fildl
xchg
addb
push
sbb
out
rclb
mov
jo
pop
xchg
repz
cmc
mov
sbb
adc
cmpsb
sub
push
ficoml
dec
movsb
cmp
cmp
dec
add
mov
test
enter
sar
in
or
xchg
insb
jbe
mov
into
ja
sbb
sub
mov
mov
mov
aad
cmp
daa
hlt
lahf
jp
cmp
or
pop
mov
inc
hlt
lcall
mov
das
clc
adc
xchg
fwait
je
mov
cltd
stos
jl
mov
push
push
xorb
sub
cmp
btc
push
inc
scas
sub
int3
js
cmp
outsl
mov
sahf
ret
push
andb
stc
inc
dec
sub
pop
ljmp
pop
xor
cmp
loopne
les
decl
mov
subl
dec
out
sbb
test
xchg
mov
dec
inc
inc
xchg
xchg
call
insl
cmp
js
lock
movsl
leave
push
add
jbe
int3
adc
sub
je
and
sbbl
and
out
int
adc
dec
mov
jae
int
xlat
test
mov
lods
pop
insl
bound
sbb
daa
and
test
jge
fs
jp
addr16
repz
pop
add
es
xchg
adc
insl
cld
in
cmpsb
sbb
add
inc
push
out
xchg
clc
ss
stos
add
out
sbb
cmc
fxam
dec
ret
push
sbb
adc
ror
sub
sub
add
push
mov
stos
imul
mov
adc
jnp
sbb
adc
mov
or
sbb
mov
or
mov
push
pop
cwtl
shrl
xor
call
mov
loopne
xchg
pusha
dec
inc
sbb
test
jecxz
sbb
dec
imul
lret
lods
add
mov
stos
mov
dec
jne
inc
out
xor
stc
stc
popa
mov
std
adc
adc
scas
and
adc
loopne
xchg
int3
outsb
push
or
pop
bound
mov
mov
xchg
rorb
jo
fneni(8087
xchg
adc
xor
fmull
xor
mov
or
rcll
in
imul
call
rcrl
cmpsl
lahf
insb
fcoml
inc
sbb
aam
adc
ja
scas
pop
xchg
dec
cmp
xor
lods
add
and
cmp
cmp
mov
lret
dec
sub
leave
in
fincstp
test
sbb
add
fbld
sbbb
cmp
jae
xchg
inc
adc
data16
stos
sbb
aam
inc
mov
mov
loop
sbb
test
hlt
repnz
stc
push
ss
cmp
pushf
insb
mov
mov
cmp
lret
xor
repnz
jecxz
lods
fucom
adc
das
jnp
add
xchg
cmp
xlat
mov
pop
int3
add
add
xor
lahf
mov
outsl
cmp
xchg
jge
arpl
aaa
sbb
popa
xor
call
mov
pop
adc
pop
popa
mov
push
ds
ret
cmp
xor
inc
std
mov
pop
mov
in
mov
xchg
pop
ss
insl
add
mov
jge
movhlps
cmp
dec
add
inc
cmp
sarb
and
addl
test
xchg
inc
inc
mov
cli
or
push
inc
je
in
lods
fincstp
imul
adc
dec
fwait
cmc
int
mov
jb
mov
cmp
jl
fnstsw
into
clc
dec
inc
add
fisttpll
mov
rclb
loopne
imull
out
je
loope
cmp
pop
cmp
mov
inc
in
mov
loop
cmp
imul
ret
fildl
int3
in
adc
jae
xor
cwtl
mov
pop
das
xchg
int
inc
fstpl
jecxz
mov
dec
xorb
out
cmpsl
jl
bnd
hlt
icebp
jle
aas
cmc
pop
decb
cmpb
sbb
stos
or
sahf
aaa
dec
cs
and
das
jb
lret
into
leave
mov
ja
sbb
push
jle
add
inc
inc
push
mov
inc
int3
sarb
dec
push
or
dec
mov
jecxz
mov
icebp
movsb
repz
sti
arpl
sarl
std
mov
ud1
sbb
insl
into
inc
js
loopne
push
addr16
sub
out
lds
std
iret
or
out
dec
outsl
popl
mul
lea
mov
sub
daa
dec
ja
or
and
adc
jns
or
dec
or
xchg
push
pushf
outsb
push
or
out
inc
bound
out
fadd
sub
push
inc
out
pop
cmc
jno
aam
int
stos
bound
sub
div
cmp
in
jb
or
mov
ret
mov
mov
out
mov
mov
outsl
pushf
test
fisubl
push
mull
jge
daa
test
imul
push
push
pop
nop
mov
jb
sti
mov
push
addr16
adc
push
out
adc
xor
hlt
jg
adc
imul
and
ss
popa
pop
adc
pusha
call
or
addr16
add
dec
out
fsubrl
sub
shll
cmpsb
dec
mov
mov
add
sub
sub
aaa
sti
outsl
das
cmp
mull
gs
mov
sti
mov
aas
and
lcall
jne
lods
scas
mov
out
add
mov
inc
mov
mov
ja
push
gs
test
mov
sub
fwait
xlat
adcl
mov
sbb
rolb
mov
push
das
stos
cmp
inc
adc
dec
cltd
pop
daa
fs
cmovae
jl
xchg
push
sbb
xchg
int3
int
push
inc
mov
pop
or
imul
or
and
outsb
xchg
enter
mov
add
jg
xor
into
jo
inc
inc
loop
jo
or
lock
cld
mov
mov
xor
arpl
idivl
sub
adc
pop
ret
add
mov
cmpsb
sbb
repnz
cld
test
lahf
cmp
cmp
sbb
push
sub
cmc
jno
dec
mov
mov
or
jo
rcrl
or
pop
gs
pop
inc
sbb
adc
sbb
sbb
pop
insb
add
dec
xor
imul
add
push
fneni(8087
xorb
test
or
mov
add
or
out
rolb
mov
cmp
cmp
push
loop
and
and
fs
lahf
mov
dec
fs
mov
xchg
xchg
pop
and
dec
lods
in
aas
adc
std
scas
std
jne
mov
sub
inc
pushf
in
sbb
int3
mov
xor
push
sbb
scas
sub
int
jl
add
mov
pop
cwtl
bound
inc
ja
shll
inc
xor
das
int3
pusha
inc
jge
or
xor
fcomps
xchg
pushf
fmul
mov
lods
dec
sub
mov
movsb
movsb
xchg
std
outsl
jge
sbbb
add
aam
xchg
fisttpl
sub
push
int3
add
inc
out
sarl
mov
push
lods
arpl
mov
mov
pop
xchg
cltd
xchg
ret
les
in
inc
push
push
xchg
dec
mov
or
xchg
adc
cmpb
insb
jo
mov
add
pop
dec
cs
out
push
enter
xor
es
xor
shl
or
sub
jno
mov
roll
adcl
movsb
fstpt
push
push
js
sbb
or
inc
mov
sbb
insl
daa
inc
inc
xchg
mov
cmp
ja
cmp
and
mov
push
fs
dec
out
testb
fidivl
fs
mov
adc
arpl
leave
movsb
lahf
test
xchg
cltd
lahf
and
repnz
mov
and
or
aaa
fisttpll
aad
inc
cs
insb
and
daa
or
adc
js
movsl
lods
inc
pusha
jb
popa
dec
fldcw
fsubs
loopne
or
stos
insl
or
daa
cmp
clc
aaa
dec
pop
iret
xlat
sbb
mov
xor
push
xchg
pop
test
sub
test
cmp
test
aam
outsb
or
mul
js
fnstcw
pop
int3
mov
mov
dec
xorb
in
jmp
fnstcw
push
add
xchg
out
fsubl
jecxz
enter
cs
out
cmc
adc
jecxz
cmc
xlat
pusha
into
shr
jne
outsl
add
mov
cli
cmp
push
sahf
adc
pop
push
xchg
or
je
dec
lds
mov
into
loop
jb
mov
repz
cmp
mov
rorl
outsb
lds
aad
or
push
das
pop
mov
cli
stos
add
mov
notb
inc
mov
arpl
mov
jge
xor
jnp
mov
addr16
addr16
sub
andb
movsb
or
inc
lock
nop
xor
filds
rorb
scas
sahf
sub
mov
scas
clc
in
and
sub
mov
pushf
pop
test
arpl
jle
es
push
cmc
cmp
cmp
pop
mov
jno
jp
inc
fsts
cmp
pop
mov
out
add
mov
pop
leave
cmovge
adc
sub
xchg
outsl
repz
or
add
std
pop
nop
inc
dec
shr
push
cld
sbb
imul
cmpsb
cmp
mov
mov
sub
jo
add
je
shll
in
bswap
aaa
and
mov
mov
pop
lcall
clc
adc
sbb
xor
js
and
mov
pushf
jno
inc
add
rol
push
test
mov
cld
adc
pop
and
out
sbb
lods
cltd
test
je
mov
mov
icebp
out
enter
cmp
xor
add
and
testb
push
movsl
inc
andb
aas
pop
lret
mov
mov
mov
mov
bound
mull
mov
dec
jg
and
ror
je
dec
sbb
pop
in
fsubrl
pop
insb
insb
adc
jge
ret
cmp
popf
dec
xchg
and
imul
xchg
popa
int3
movsl
inc
rol
sbb
dec
jp
pop
fs
popa
sub
sub
adcl
in
or
push
or
arpl
addr16
outsb
stos
pusha
sbb
leave
shl
jns
sbb
xor
sti
xchg
sub
xchg
jecxz
arpl
leave
iret
push
bound
xor
xor
mov
fistpll
mov
add
sub
insb
xor
cmpsb
sbb
dec
fcmovne
hlt
hlt
cmp
scas
xchg
and
roll
sbb
inc
test
pushf
scas
mov
mov
push
int
or
pop
sub
fs
push
cmpsb
ds
gs
cmp
dec
imul
std
xchg
pop
and
int
lahf
and
pop
push
jmp
popa
or
ret
jnp
push
push
mov
xchg
jmp
xor
movsb
mov
sti
call
fiaddl
in
scas
mov
iret
jg
in
repz
xchg
mov
push
xchg
xchg
das
xchg
mov
pop
xchg
mov
or
dec
or
dec
shll
sub
pop
gs
dec
enter
inc
push
test
adc
dec
mov
add
clc
jb
mov
lret
mov
ret
cmc
dec
jp
rorl
les
bound
mov
mov
jecxz
xchg
ficompl
add
jle
adc
inc
icebp
xchg
xchg
test
loopne
mov
jl
je
pop
mov
aas
cmc
out
and
sbb
gs
sti
imul
es
fidivs
repz
xchg
fistpll
lret
out
in
inc
negb
clc
insl
ds
in
jb
mov
sub
movsl
pop
push
cmp
push
mov
daa
fnstcw
stos
aad
mov
mov
pushf
lea
pop
adc
das
in
std
jmp
push
adc
jns
push
mov
xchg
lea
inc
mov
aad
popa
cmp
push
push
pushf
mov
pop
les
fldcw
test
leave
lock
xchg
and
mov
lods
jmp
pop
in
cmpsb
xor
mov
insl
loope
pop
cmp
cmp
pop
sbb
add
mov
inc
and
xor
repz
inc
add
enter
imul
insb
sbb
jg
mov
sbb
and
adc
aam
jg
fiaddl
fisubs
sub
inc
xor
in
xor
rolb
xor
mov
arpl
scas
cmp
mov
mov
loopne
fistps
mov
add
imul
mov
push
xchg
cmp
mov
idivl
iret
xchg
mov
push
inc
dec
adc
push
xchg
sarl
je
je
fnstenv
testb
cltd
je
or
xchg
pop
mov
cmpsb
daa
mov
add
xor
lods
test
xchg
test
and
mov
fistps
mov
adc
jmp
mov
flds
sub
outsl
mov
sub
aam
divb
cmp
mov
andb
imul
or
sbb
test
jl
fmull
xchg
xchg
lock
xor
push
and
movsb
shll
mov
push
lea
sub
sbb
daa
rol
pop
and
das
xchg
fsubl
scas
arpl
cmp
push
push
loop
pop
scas
inc
movsb
cmpsb
ret
aam
sti
lahf
adc
mov
cmp
mov
out
mov
inc
add
fs
mov
xchg
dec
jmp
xchg
fildl
fldl
int
cmpl
mov
in
mov
xchg
xor
jle
mov
or
pop
and
imul
xor
and
cmp
dec
ja
mov
dec
fistpl
pop
push
je
mov
decb
dec
push
jmp
add
int
cmp
insb
movsl
enter
mov
fs
xchg
push
or
cmp
lahf
cmp
pop
sub
das
cld
addb
js
mov
scas
insb
arpl
es
int
cmp
push
or
or
and
cmpsl
popf
idivl
inc
out
nop
sbb
mov
adc
rolb
cmp
push
fldenv
cmp
movsl
jl
mov
jecxz
in
mov
test
ror
mov
push
leave
loope
sbb
push
test
into
push
jo
mov
ret
in
outsb
cmp
popa
shl
jmp
mov
out
or
insb
nop
mov
mov
in
loope
nop
popa
imul
pop
lods
dec
and
shrb
les
lods
incb
pop
int
aaa
in
sarl
mov
jp
fcmovbe
inc
aam
lahf
popf
ljmp
loopne
in
rol
push
nop
imul
xchg
imul
pop
push
cmp
xchg
jmp
cmp
psrlw
les
push
fistpll
pop
sbb
insl
outsb
and
ret
aaa
test
jecxz
dec
idivl
sbb
test
jno
pop
jl
cmpsl
pop
shrb
xchg
movsb
stos
out
push
xchg
pop
mov
push
addb
stc
mov
mov
leave
jl
push
add
repnz
jne
psadbw
mov
sbb
je
push
cmp
sub
adc
mov
outsl
cwtl
pop
test
imul
sub
in
ss
stc
in
imul
aam
jle
xor
jp
xchg
loop
scas
push
jno
inc
out
sbb
popf
mov
cmp
hlt
inc
ret
in
lcall
aaa
in
sub
and
sub
cmp
sub
lods
icebp
nop
jb
cwtl
adc
int
mov
sbb
xor
cmp
add
divb
pushf
adcl
pushf
cmp
sahf
lods
subl
movsb
push
mov
stos
add
or
xchg
or
sub
inc
or
leave
push
jl
fwait
imul
movsl
pop
andl
inc
rclb
cmp
jge
fistps
pop
pop
xlat
das
jge
fmull
mov
or
testb
cmpsb
xor
fisubrl
into
jmp
movsb
sub
xchg
push
push
repnz
mov
test
push
cltd
pop
sub
daa
dec
cmp
and
sbb
jne
mov
mov
mov
fcmovbe
mov
lock
popf
lret
shrb
jg
das
sti
adc
pop
in
out
pop
dec
and
cmp
pop
inc
sbb
nop
push
cmp
rcrb
in
ss
lret
fwait
jb
fdivp
jl
ss
dec
pop
xor
sbbl
ja
sarl
jge
pop
inc
in
mov
outsl
inc
loope
cmc
mov
rorb
pop
and
lahf
imull
add
adc
fcmovb
cmp
jb
mov
mov
test
pop
add
loope
xchg
fnsave
lcall
mov
es
mov
cmp
incl
idivb
push
mov
xor
push
int3
or
pop
aam
adc
imul
lods
sarl
loopne
adc
mov
ja,pt
out
stc
dec
add
out
sbb
xor
xor
enter
sbb
mov
and
xor
or
outsl
outsb
pop
pop
pop
addr16
inc
pop
jns
xor
stos
insb
jnp
and
xchg
popa
pop
js
fimull
push
push
xor
movsl
and
xor
gs
cmp
cmp
lcall
jae
fs
jo
addr16
test
nop
push
push
in
jle
jae
ja
adc
adc
lcall
xchg
add
shll
inc
mov
pop
jle
add
xlat
push
lahf
adc
mov
mov
or
adc
shl
mov
sub
inc
sub
rcll
loope
pop
into
adc
js
mov
or
test
sbb
jmp
dec
jecxz
pop
lret
cmc
or
orl
sti
fnsave
roll
inc
and
daa
in
test
push
bound
out
cmp
push
std
dec
rcrb
cmc
sub
inc
js
jo
mov
adc
jecxz
push
push
jbe
sbb
xchg
mov
sub
mov
push
outsl
enter
xchg
in
mov
pusha
xchg
call
xchg
push
imul
lds
jle
or
jne
push
sub
pop
loop
repnz
sbb
xchg
dec
int
adcb
mov
orb
ljmp
xchg
fcompp
inc
and
add
in
aas
jnp
sub
sbb
lock
ljmp
ret
mov
jbe
inc
and
inc
ja
insb
lods
xor
cmc
jbe
push
and
jb
mov
xchg
insl
push
pop
mov
pop
jae
sbb
fwait
xchg
dec
and
js
pop
stos
filds
mov
inc
cmp
xchg
repnz
add
sbbb
aas
sbb
inc
push
xchg
cmp
push
int
pop
sub
insl
rol
rcl
cmp
mov
cs
fldcw
loop
push
ja
leave
jne
stos
or
xchg
loopne
inc
lds
mov
mov
add
pop
repnz
leave
or
sub
adc
inc
loop
rclb
into
jns
pop
mov
imul
mov
jo
repnz
sbb
insb
cltd
cmp
xchg
insb
dec
push
xor
cmp
ljmp
sbb
cmpsb
pop
cmp
push
and
mov
inc
dec
xlat
cwtd
jmp
ja
cs
sub
jne
scas
cmp
jp
sbb
pop
xor
lcall
cmpsb
stos
fistps
xchg
fbld
sti
sbb
dec
jle
xchg
mov
sbb
out
add
mov
lret
jle
test
dec
adc
stc
mov
rorl
out
call
popa
in
inc
add
xchg
mov
sub
add
push
or
or
shll
lods
mov
js
inc
lds
mov
push
mov
pop
daa
fldcw
mov
imul
mov
inc
test
mov
lcall
mov
pushf
inc
add
push
mov
pop
ret
rorb
ss
add
addl
les
fiaddl
xchg
dec
pop
xchg
adc
pop
repnz
bound
lcall
rolb
enter
in
xchg
gs
lahf
sti
push
in
jbe
out
ljmp
adc
xchg
xchg
pushf
dec
pop
xor
aaa
jmp
out
loopne
mov
rorb
push
jnp
adc
fs
cli
inc
cld
test
test
add
shll
cwtl
or
pop
and
xor
test
inc
fs
mov
mov
popf
add
into
mov
mov
adc
xlat
scas
mov
mov
pushf
inc
mov
mov
sub
mov
lahf
cmc
pop
dec
push
clc
test
push
sbb
loopne
adc
pop
xchg
bound
add
inc
or
outsl
orl
rolb
add
mov
sub
and
cmpsb
pushf
and
dec
and
cmp
stos
push
xchg
out
pop
push
cmpb
xlat
mov
cld
inc
cmp
scas
xchg
js
adc
or
lods
lods
js
dec
adc
push
jge
lcall
jns
insl
je
hlt
inc
inc
push
scas
testl
xor
sti
imul
dec
pop
mov
sahf
pop
or
xchg
mov
data16
and
and
lods
enter
daa
add
idiv
push
rclb
sub
loope
dec
dec
inc
cli
mov
xor
inc
dec
setg
loop
mov
adc
add
aam
ds
mov
cmp
sbb
cmp
adc
mov
mov
ljmp
rcrl
imul
out
je
fxch
aaa
dec
xorl
mov
shll
int
pop
sub
ffree
dec
push
jp
push
inc
ret
inc
sub
mov
pusha
loop
add
cmp
xlat
adcb
xor
dec
into
add
movsl
mov
jl
mov
lahf
sub
cmp
mov
xchg
lahf
pop
rorb
icebp
jle
les
or
pop
sub
pop
mov
out
xchg
test
out
shrb
adc
add
mov
stos
fdivrl
jecxz
mov
mov
pop
lock
mov
fnstcw
js
mov
cmp
push
stos
test
or
fsts
iret
test
fs
loop
sahf
popa
push
dec
inc
je
mov
das
lret
add
inc
xchg
push
les
jae
jg
shl
mov
loop
cs
mov
ds
mov
ret
sub
mov
mov
and
aad
jl
lods
mov
daa
unpcklps
repz
bound
aam
mov
stc
push
aaa
imul
mov
outsb
fidivrl
adc
enter
mov
xlat
aaa
xor
sub
xchg
cmpsl
mov
bound
je
sbb
stos
stos
iret
jp
ret
addl
or
outsl
andb
or
mov
pop
xchg
iret
aas
jge
ficomps
inc
mov
nop
add
out
test
aaa
lret
adc
imul
repz
mov
dec
addr16
xor
js
inc
push
jp
push
xor
shrl
jo
paddsb
lea
test
push
fsubrs
adc
jg
add
sub
ret
hlt
dec
ss
adc
xlat
cmp
hlt
sbb
mov
pushf
push
inc
push
jbe
jge
sbb
seta
mov
daa
jb
daa
mov
lcall
mov
inc
daa
insl
sub
loopne
mov
icebp
dec
rcrl
popf
add
adc
lret
arpl
push
mov
mov
mov
jmp
lds
test
das
mov
jp
jae
insl
xchg
jge
mov
push
jl
nop
outsb
movsb
repnz
and
xor
push
xchg
iret
jp,pt
adc
std
and
pushf
jb
sbb
jo
cmpsb
shr
add
xchg
or
mov
lds
add
pop
shlb
add
arpl
add
stos
sbb
out
adc
shrl
pop
in
jle
sar
fisttpl
and
test
sub
adc
pusha
sbb
cmp
cmpsb
cmpsl
lea
mov
push
neg
jmp
jnp
xor
jne
dec
sbb
sbb
nop
mov
mov
sbb
loopne
and
inc
jp
push
push
cmp
xor
leave
xchg
jg
lret
aam
dec
subl
test
sub
je
sub
fidivrs
pop
dec
cmp
or
into
xor
mov
shrb
imul
push
jne
push
mov
xor
jp
fs
lods
dec
test
subb
mov
pusha
pop
ljmp
xor
imul
mov
cs
or
push
mov
movsl
clc
mov
movsbl
mov
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
stos
mov
inc
lock
stos
jbe
repz
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
