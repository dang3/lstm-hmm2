push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
mov
sbb
sbb
adc
sbb
pop
pop
das
rorb
cs
push
mov
or
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
call
movsb
cmc
sbb
adc
int3
sub
mov
and
and
mov
cmp
inc
add
jbe
test
out
jmp
dec
or
xchg
adc
pop
mov
call
add
pop
loop
mov
inc
sub
frstor
ret
add
pcmpgtw
subb
sub
addr16
repz
lods
fmuls
adc
sub
icebp
lds
jnp
inc
cmpsb
pop
mov
out
leave
arpl
adc
roll
mov
sbb
call
stos
mov
call
test
fstl
in
dec
push
pop
rolb
mov
adc
inc
dec
inc
pop
fcompl
pop
sub
xchg
imul
xor
es
ffreep
pop
sarb
loopne
jno
add
addl
sbb
out
push
fdiv
mov
incb
mov
rcl
push
cmp
aad
push
and
mov
sbb
sahf
cmp
mov
sbbl
inc
jecxz
nop
sub
int3
inc
or
dec
rolb
pop
fstpt
sbb
cmp
jbe
insb
scas
movsb
inc
popa
nop
mov
dec
into
xor
jo
mov
js
ss
mov
push
movsl
push
and
sbb
test
jl
xchg
sub
loope
pop
pop
repz
ret
inc
sarl
repnz
adc
sub
outsl
sti
sahf
push
sbb
dec
and
aad
loop
pop
out
sahf
jp
push
jae
fwait
and
rcrb
mov
mov
cmp
stos
inc
fcomp
adc
fdivrs
adc
lret
lock
mov
mov
cld
xchg
xchg
int
loopne
sbb
inc
outsb
or
mov
lcall
jecxz
leave
mov
add
test
push
push
loopne
cmp
cmc
adc
xchg
mov
roll
pop
lock
sub
xor
out
mov
jge
pminub
imul
in
jns
lods
sbb
sti
negb
mov
loopne
or
mov
push
dec
xchg
enter
stos
movlps
insb
pop
sub
or
sar
jo
test
loop
mov
ret
lock
fadds
loope
mov
lock
clc
jns
lret
jl
cltd
adc
push
enter
xor
add
lret
int
idivl
cld
addr16
loope
subb
fstl
or
outsl
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
test
jbe
mov
cwtl
xchg
or
inc
or
jp
sti
mov
mov
ret
xlat
mov
jle
mov
jecxz
hlt
idiv
jecxz
lds
imull
pop
movsb
js
out
adc
dec
mov
cmp
sbb
adc
addb
mov
mov
hlt
mov
dec
cmp
lcall
adc
repnz
mov
lock
and
mov
call
iret
and
push
push
mov
cmp
daa
nop
jg
outsb
or
push
sub
addb
jnp
or
and
in
xor
je
sub
push
jbe
mov
inc
or
test
int3
xlat
xlat
loope
out
daa
adc
adc
and
es
and
push
xchg
lods
mov
in
and
sub
jmp
mov
mov
ja
add
decl
imul
push
into
gs
enter
inc
repnz
mov
in
dec
cmc
ret
jg
and
fstps
stos
push
adc
mov
stos
popa
sbb
sub
cmp
cmp
push
mov
mov
push
negb
xchg
jbe
in
mov
sbb
cld
mov
cwtl
cmpsb
mov
or
fstps
add
pop
fwait
lods
sbb
cmp
xchg
add
and
xor
jg
adc
scas
int
xlat
int
or
ss
hlt
movsb
jle
sahf
adc
int3
inc
dec
inc
repnz
mov
xor
xor
mov
sahf
leave
push
push
fisubrl
inc
mov
mov
adc
scas
lcall
mov
aas
pop
adc
pushf
shl
clc
cmpsb
js
pop
sbbl
add
ss
inc
push
test
cltd
cmpsl
enter
lock
cltd
push
ja
shll
sub
es
dec
mull
dec
sbb
adc
mov
jne
shrl
in
test
push
xor
inc
jae
leave
movl
movl
shll
inc
add
shll
or
cmp
sbb
xchg
repz
fwait
data16
inc
adc
mov
pop
add
pushf
mov
lret
fs
cmpsl
adc
pop
mov
stc
and
mov
or
loop
shrl
rcrb
push
es
sbb
or
add
jns
test
scas
mov
push
shl
enter
aas
sti
add
idivb
rcl
loopne
jecxz
std
xor
push
lret
in
mov
ret
cmp
push
push
pusha
pop
xchg
aam
iret
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
mov
add
or
mov
sub
test
jge
xchg
mov
movsb
out
xlat
and
dec
lock
or
sub
dec
mov
addb
scas
inc
lods
or
add
push
cmc
icebp
push
cmp
and
dec
js
pop
clc
sbb
daa
pusha
mov
pusha
and
ss
repz
jns
dec
xor
adc
aam
insl
inc
push
out
add
movups
add
fwait
daa
sub
fs
or
mov
inc
sbb
out
cmp
enter
inc
dec
inc
leave
jle
xor
sbb
push
push
outsl
fcomi
or
imul
or
clc
cli
mov
sbb
outsl
add
int3
pop
notb
or
mov
xor
xor
stc
cs
insl
clc
dec
add
mov
fst
add
push
mov
je
cmp
dec
repnz
xchg
pusha
or
ret
lds
xlat
cmp
js
dec
addr16
dec
rolb
ss
lods
inc
mov
insl
and
sbb
jmp
shl
sbb
sub
loop
sub
scas
jg
es
sti
enter
pop
jnp
decl
add
imul
aam
sbb
jecxz
dec
xor
movsb
pop
push
push
pop
leave
mov
jno
das
inc
es
test
repz
push
jno
xlat
cltd
xor
and
mov
sbb
push
add
insl
xor
or
arpl
fs
adc
lock
and
mov
in
out
jbe
stos
and
int3
cli
or
sub
fsts
adc
pop
es
out
cmc
in
xchg
push
mov
testb
sbbb
inc
lahf
orb
dec
mov
ljmp
push
ret
ja
inc
inc
jle
or
mov
ljmp
stc
xchg
je
xchg
sbb
jno
hlt
add
xor
mov
lds
adc
rcr
push
mov
sub
push
add
push
loope
push
dec
popa
dec
inc
loop
outsb
xlat
decb
fsts
dec
fnsave
lret
fiaddl
out
jp
mov
sbb
mov
adc
xor
inc
cmp
jle
fwait
idiv
shl
sbb
adcl
dec
sbb
jg
bswap
out
leave
jnp
xor
adc
addl
sbb
jmp
movsl
sbb
pusha
jo
cmpl
cmp
adc
sbb
and
push
cmpsb
and
mov
in
iret
ljmp
or
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
mov
sbb
and
sbb
pop
and
add
addb
fiaddl
daa
xor
cs
stos
jbe
cmp
dec
push
popf
movsb
push
inc
xchg
jecxz
dec
sub
xchg
scas
dec
xchg
mov
lock
dec
insl
loope
or
fldl
sbb
add
xchg
loopne
jmp
pop
jb
inc
mov
pop
pop
sarb
movsb
roll
or
movsb
in
movsb
cmp
mov
jno
fidivrs
mov
test
test
push
push
test
mov
insb
mov
push
inc
adcl
sahf
out
daa
pop
jg
adcl
push
sub
fwait
imul
rorb
ret
shlb
mov
iret
pop
fdivrl
test
mov
fimuls
ja
test
inc
popa
divb
xchg
ret
les
or
fcomps
jl
pop
in
sarl
std
dec
mov
mov
loope
gs
mov
mov
loop
cwtl
mov
jbe
pop
mov
push
adc
dec
lahf
push
dec
cwtl
shrl
mov
cmp
mov
or
or
xor
adc
jae
out
lds
in
adc
add
repnz
aaa
outsb
adc
sahf
fwait
dec
addl
fstp
mov
jno
dec
or
popf
jl
insb
mov
repnz
les
adcb
ret
pminub
jb
push
adc
rolb
fisubs
fwait
loop
ficoml
lret
adc
out
fs
imul
add
adc
addl
int
fs
int
push
scas
mulb
adc
divb
fwait
addr16
ret
daa
mov
fs
xchg
data16
add
outsl
pop
xchg
iret
aas
sbb
into
leave
xorb
js
rorl
or
cmp
pop
pop
negl
into
out
mov
addr16
lods
les
dec
rorl
fldt
sahf
sub
rcrl
insb
xchg
push
sbb
pop
in
and
xchg
xchg
pop
dec
or
aaa
push
jb
je
sar
cmp
inc
jmp
jb
popa
pop
xchg
xor
push
outsb
gs
addl
pop
add
bsf
mov
jl
dec
inc
mov
enter
mov
ljmp
inc
mov
gs
sbb
or
popa
sbb
push
pop
je
cmc
adc
lret
xlat
sbb
ficomps
mov
stos
sahf
mov
loop
aam
jns
mov
add
fisttpll
adc
lods
cltd
push
sahf
mov
out
jl
jnp
push
and
data16
adc
inc
jbe
ret
std
lret
aad
icebp
sub
add
repnz
addl
movsb
pop
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
ret
cmp
jo
add
sbb
adc
sbb
aad
xor
cmp
lds
push
mov
and
clc
in
iret
sbbl
pop
pushf
shll
add
cmpsl
mov
scas
je
or
gs
pushf
or
xchg
sti
xor
outsl
mov
fsubrs
out
cmp
mov
nop
cmovns
aad
rorl
jmp
and
ss
mov
out
in
sarb
aaa
sub
in
sbb
mov
xchg
xor
aam
lret
shll
push
mov
fcmovne
cmpsl
cmpsb
jae
sarb
push
pmullw
adc
aam
inc
or
lods
push
int3
push
and
sub
mov
jo
dec
test
testl
ja
adc
movsb
addr16
lret
ja
push
mov
push
push
or
aam
js
dec
or
fisubrs
push
pop
jnp
mov
nop
ss
mov
scas
inc
cmpsl
adc
lahf
xor
sbb
enter
fisttps
out
mov
mov
shrb
cmpb
movsb
mull
xor
les
mov
inc
test
mov
push
adc
cltd
push
xor
mov
orl
push
int3
imul
movsb
lods
sub
in
nop
mov
movsb
jg
pop
cld
inc
data16
ret
stos
push
push
jns
cmpb
int3
adcb
fwait
jno
or
xor
int3
stc
nop
and
mov
repnz
or
cmp
cmpsl
setg
push
xor
xlat
xchg
imul
lret
sbb
mov
cmpsl
pop
cmp
dec
imull
jns
outsb
jmp
inc
or
orl
pop
inc
lds
jg
add
sbb
xor
jp
sbb
in
cli
jno
test
inc
mov
push
xor
cs
les
in
mov
jp
hlt
adc
push
dec
movsb
cltd
inc
pop
xor
imul
mov
fsubrs
dec
cmp
loopne
hlt
mov
lods
push
int3
mov
add
inc
fdivrs
scas
int
or
dec
mov
enter
inc
nop
pop
xchg
sti
insb
out
les
aam
dec
mov
jnp
pop
mov
loopne
jp
mov
orl
fwait
add
popf
ret
lcall
cld
orl
aad
iret
add
fidivrl
sub
add
mov
shlb
mov
or
xchg
aas
or
or
maskmovq
idivl
icebp
scas
insb
sbb
scas
ja
ljmp
xchg
push
inc
ja
fidivrs
xor
cmpsl
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
jmp
mov
and
sbb
xchg
std
loope
test
push
testl
adc
adc
sbb
adc
push
push
dec
fwait
mov
ret
jp
adc
xor
mov
pusha
cmp
loope
int3
sbb
jmp
add
test
orb
mov
push
repz
add
jne
jbe
jns
cmp
push
sbb
mov
dec
jb
fs
cmpsb
xor
cmp
sbb
jl
sub
lahf
and
lahf
cld
mov
jns
leave
sub
lods
imul
ljmp
adc
jg
jo
mov
xor
add
jae
lods
lea
cltd
data16
push
loopne
testb
mov
push
jl
mov
scas
cltd
stc
outsl
xchg
insl
jae
sbb
dec
clc
mov
test
jg
sarl
cmp
hlt
sbbl
mov
push
dec
cs
out
add
outsb
jp
cmc
inc
mov
pop
sub
popa
int3
loope
cmp
les
and
imull
clc
testl
test
movsb
mov
jmp
xchg
mov
outsl
stos
lahf
and
fistl
orb
rcr
lret
mov
hlt
popa
mov
aad
pop
ds
mov
lcall
lret
sbb
aas
es
jmp
xor
fcompl
fisttpl
ljmp
sbb
syscall
aam
mov
mov
inc
outsl
loop
push
mov
outsb
into
push
loop
add
dec
xchg
sahf
dec
push
inc
aam
sbb
cld
aad
imul
push
mov
dec
dec
push
push
cmp
and
lret
std
pop
add
mov
iret
outsb
popa
push
xor
mov
adc
pusha
push
mov
fsubs
mov
adc
out
aam
pushf
rorb
pop
mov
into
sbb
and
lds
es
test
clc
call
or
in
adc
mov
test
leave
or
inc
mov
mov
ja
pop
push
inc
add
adc
inc
mov
xor
mov
sar
pop
test
jg
fs
adc
jbe
or
imul
pusha
mov
les
mov
daa
and
xlat
popa
mov
mov
or
inc
fiaddl
xchg
sahf
sub
sti
enter
add
jb
sahf
inc
xchg
inc
mov
movsl
fdivrs
lods
and
sub
push
testl
and
cwtl
jns
mov
mov
mov
daa
scas
dec
xchg
push
and
test
jnp
add
or
fs
punpckhdq
mov
adcl
mov
xor
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
mov
mov
and
sbb
insl
adc
mov
sarb
and
sbb
cmp
shrb
cmp
test
lds
add
ret
add
setbe
cmp
pop
jg
aas
jnp
inc
or
in
movsb
mov
push
push
and
mov
xor
cmp
sbb
sub
addb
leave
mov
shr
xchg
pushl
add
clc
testb
cltd
mov
sbb
cmp
lea
icebp
sub
repnz
add
push
mov
or
shlb
xchg
aaa
hlt
mov
stos
lret
xor
arpl
test
stc
stos
jns
push
scas
xchg
mov
shll
push
and
stos
jl
cmc
sti
out
addr16
lods
cmp
sub
mov
sbb
jecxz
mov
arpl
ljmp
mov
cmp
cmp
insb
push
xor
aad
cmc
arpl
xchg
aad
mov
cwtl
add
popa
jecxz
je
sbb
sahf
movl
jecxz
sbb
dec
cmp
sub
and
sub
ror
inc
jmp
mov
lea
dec
jl
mov
sbb
cmpsb
ret
enter
xor
mov
add
mov
xor
sti
popf
push
jmp
icebp
xchg
cmp
aas
push
in
push
shlb
mov
push
or
sub
cmp
outsl
rcll
hlt
push
testl
xchg
mov
addr16
aas
xor
jnp
and
push
sub
and
xor
mov
sub
add
inc
shll
lret
mov
test
jle
data16
ss
and
inc
into
je
dec
jno
lds
inc
xor
daa
jns
in
cmp
int3
pusha
add
out
push
mov
and
scas
bound
dec
xor
jno
stos
insb
and
dec
jge
jmp
movl
inc
je
nop
loope
push
xor
pop
bound
xlat
movsb
mov
push
xchg
scas
or
sub
cmp
pop
rcl
jb
fwait
add
jp
daa
pusha
dec
mov
jae
les
and
push
add
aaa
out
das
inc
mov
push
jecxz,pt
mov
add
fstpl
jno
insl
lods
lea
pop
mov
out
leave
je
out
xor
loope
shll
adc
dec
sbb
das
das
shll
cmpsb
dec
and
xchg
jg
clc
mov
out
adc
xor
cmp
aam
push
xchg
fsubl
mov
jb
repz
add
xor
fisubl
ret
xchg
xor
xor
add
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
jne
push
lock
and
sbb
jg
test
dec
dec
adc
or
sub
cmp
and
or
cmp
and
js
rolb
add
xchg
jle
subb
adc
sbb
or
or
sbb
cs
mov
add
mov
repnz
mov
shll
fldcw
dec
push
aaa
mov
lods
push
scas
jno
inc
aaa
lret
mov
movsb
shlw
filds
fidivrs
cwtl
ljmp
dec
stos
jle
cli
cmp
in
add
inc
jle
or
inc
mov
out
test
imul
add
lods
inc
adc
mov
push
lods
fstl
pop
add
cld
add
mov
xor
mov
add
mov
push
in
clc
sbb
out
lret
push
ss
test
fildll
mov
popa
addr16
fiaddl
add
cmp
jp
inc
adc
jbe
decb
lea
xor
lahf
mov
daa
push
sub
mov
add
fistpll
dec
lds
adc
shl
movsb
cwtl
rolb
xor
push
xor
loop
sub
insb
pop
or
sti
mov
cmp
push
int
test
lds
int3
loopne
stos
fisubl
orl
fwait
pop
mov
cmp
int3
mov
mov
cvttps2pi
js
jae
js
fcomps
xor
outsl
iret
xchg
test
cmpsl
xchg
lods
push
iret
push
fcmovu
pop
jp
dec
lcall
inc
xchg
cmp
add
test
shr
fistl
xor
rorl
ss
in
xor
std
call
leave
loope
mov
imul
ret
shrb
cmp
inc
sbb
repz
sbb
lcall
add
adc
inc
mov
and
aad
xorb
cmp
movsl
lea
aad
push
aad
out
add
lods
daa
sbb
orl
mov
test
mov
add
cmp
and
mov
adc
mov
popf
cli
imul
dec
sbb
hlt
clc
dec
fidivrs
mov
outsl
es
fldcw
mov
insl
cld
inc
insl
adc
cmp
test
in
xor
negl
repnz
push
xchg
loopne
inc
leave
cld
cwtl
gs
data16
sahf
fld
popw
push
mov
cmpsb
fwait
pop
fsubrl
shlb
mov
sbb
push
lcall
xchg
pop
cltd
add
insb
mov
in
rclb
push
dec
xor
subl
and
mov
stc
inc
inc
icebp
sbb
and
and
pop
push
and
xor
mov
shrd
jmp
out
push
push
push
mov
pop
pop
jo
jmp
sbb
adc
sbb
out
jle,pn
fcompl
xor
adc
stos
shll
movsb
ret
in
aam
or
mov
lahf
pop
add
adc
push
lds
rcr
inc
rcll
sbb
and
fbld
jecxz
jmp
out
sbb
imul
sbbb
shl
xor
jp
push
jae
fstps
lahf
vcvtsd2ss
push
jae
jbe
mov
cmp
and
pusha
mov
jne
repz
ja
iret
jne
mov
sub
or
fbstp
nop
dec
xchg
dec
push
popl
jmp
mov
push
lds
jg
stc
inc
arpl
test
into
cmpsb
sahf
push
add
nop
les
adc
outsl
leave
pop
popa
push
loope
push
icebp
aaa
mov
mov
out
mov
cmpsl
shrl
lahf
pushf
loop
mov
ja
ffree
leave
xor
pushf
jb
xor
in
mov
aad
pop
insb
and
fs
clc
fiadds
xchg
test
pop
aam
test
fiaddl
lahf
pop
or
icebp
sub
int3
push
mov
scas
push
ret
cmp
xchg
lret
sbb
gs
pusha
and
loop
jns
ss
mov
xor
loopne
ss
hlt
test
in
ja
es
cwtl
filds
movsl
sub
and
out
ret
mov
je
push
mov
xchg
orb
add
add
and
out
dec
push
js
xor
mov
lahf
shlb
push
loope
shll
inc
mov
jl
bound
jecxz
arpl
fcom
push
mov
sbb
lcall
xchg
jns
into
out
je
int3
mov
lds
cmpl
mov
test
sub
add
pop
enter
pop
cltd
dec
call
sub
mov
xchg
cmp
xchg
cmpsl
enter
dec
cmp
loopne
mov
cs
sbb
out
xlat
add
andb
jecxz
sbb
fs
sub
psraw
pop
lock
insb
sbb
mul
mov
outsb
add
daa
addr16
scas
andb
add
into
mov
push
repz
mov
xchg
movl
mov
xchg
icebp
inc
daa
pop
pop
cmp
mov
cli
into
enter
aam
stos
jbe
sarl
xor
dec
loope
loope
pop
loope
cld
pop
sub
sub
fdivp
js
push
xchg
aam
pushf
lods
jg
testl
xlat
in
int3
sbb
jecxz
inc
or
test
ss
stc
dec
dec
push
cwtl
sbb
jmp
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
ds
and
sbb
ret
outsl
clc
vcvtpd2dqy
stos
sbb
inc
xchg
mov
fwait
adc
in
push
jp
nop
dec
adc
jno
scas
shll
cmp
das
sti
pop
jecxz
or
aas
mov
lods
add
icebp
inc
unpcklps
inc
orb
mov
sbb
cmpsb
movsl
adc
scas
clc
add
add
test
int3
loopne
add
sub
fnstsw
sti
jl
push
shrb
imul
or
aad
icebp
insl
xchg
aas
fdivrl
daa
imul
lret
add
dec
jg
call
mov
aas
mov
lds
or
lret
or
je
aaa
inc
fldt
jl
jecxz
dec
sub
push
push
insb
insb
int
sub
xchg
dec
push
add
jb
mov
push
dec
pushf
jbe
pop
mul
mov
jno
cmp
and
fmuls
lds
cmpsb
fsubs
arpl
repz
mov
int
xchg
jmp
push
mov
cltd
xchg
incb
je
das
out
into
ds
fistps
lock
or
add
push
xor
jns
cmc
insb
loopne
cmp
lret
inc
rolb
xchg
imul
das
push
inc
stos
test
add
xlat
es
loope
push
incb
jecxz
lock
push
movsb
sahf
jno
dec
outsl
add
sti
mov
loope
roll
gs
lret
dec
int
push
loopne
xor
cli
out
sub
repz
mov
push
inc
lea
sti
outsl
and
xor
in
push
fcomip
movsl
cmc
ss
cmc
and
jae
and
leave
repz
cmp
pop
adc
add
pushf
inc
sub
cmpsl
xchg
or
fbld
test
pop
out
pushl
shl
incb
inc
inc
pop
xchg
pusha
arpl
xchg
pop
int
outsl
imul
push
hlt
call
daa
cmpsl
pop
mulb
push
into
push
scas
shr
xchg
sbb
sub
stos
pop
cmp
in
push
fwait
or
adc
jne
loopne
loop
adcb
push
aas
aas
out
leave
adc
cltd
cmp
jl
shr
dec
scas
fdivrs
lahf
sub
inc
test
lcall
xchg
cltd
in
test
outsl
ljmp
notb
jbe
es
add
lcall
jp
sbb
ret
jbe
fimuls
cmpsl
daa
lods
ret
lds
jmp
mov
jecxz
push
dec
hlt
push
incl
repz
imul
lea
xchg
rcrb
pop
dec
cltd
add
mov
addb
cld
idivl
icebp
jg
mov
adc
mov
mov
jmp
nop
dec
nop
add
lock
add
aad
push
adc
sbb
test
loope
sbb
adc
lods
ss
push
sub
mov
jecxz
push
add
push
jbe
rorb
cmp
sarl
repz
or
push
ret
push
filds
sbb
std
pslld
sbb
shlb
add
pop
mov
dec
jne
lods
jns
data16
pusha
xor
shrb
sbb
mov
frstpm(287
out
fwait
lods
cmpsl
inc
mov
idivl
fs
mov
sub
mov
mov
mov
sbb
mov
sahf
popa
sbb
dec
or
stc
movsb
insl
mov
sub
ds
add
movb
bound
xchg
fbstp
add
and
jbe
and
in
pop
xchg
out
sbb
stos
mov
pop
inc
sbb
lahf
out
lret
sub
cmp
sub
adc
mov
sarb
sbb
data16
out
xor
fxch
push
sarl
in
out
adc
mov
ret
ss
or
jecxz
lret
outsl
mov
jae
rolb
loop
mov
ret
push
push
cmpsl
out
xchg
int3
cltd
mov
jl
push
add
rcr
pop
test
outsl
mov
in
add
loop
test
cltd
test
cwtl
cwtl
mov
push
ljmp
lods
xchg
subb
jne
divl
inc
negl
arpl
mov
outsl
add
or
gs
shrb
jae
jne
xchg
push
mov
in
rol
inc
mov
aad
xorl
shlb
mov
popf
pop
sub
dec
and
mov
sub
into
cld
ficoml
sbb
fs
add
push
imul
xchg
vmovdqa
inc
dec
push
xchg
xlat
xor
sub
jp
xor
adc
mov
sub
cmp
mov
and
mov
mov
imul
adc
ret
pop
popa
test
xchg
nop
ja
ret
gs
mov
jmp
fbstp
pop
sbb
push
jnp
mov
jnp
ret
imul
pop
outsb
and
mov
imul
data16
mov
xchg
jns
sbb
in
shlb
add
imul
inc
cmp
mov
imul
daa
inc
inc
add
cli
fmull
movsl
pop
clc
std
jmp
lea
gs
xchg
push
imul
jle
clc
je
jno
push
cmp
jp
aaa
idiv
sub
je
xchg
xlat
shr
in
sub
fmuls
outsl
nop
mov
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
and
scas
push
loope
lret
cwtl
ret
or
cs
jecxz
sub
adc
xorb
rcrl
jns
push
fimuls
sahf
cwtl
cmp
cmpsb
pop
sub
shrl
adc
or
cs
lea
je
lods
dec
jg
loopne
dec
xchg
adc
aad
cmpsl
jno
pop
xor
je
mov
jo
mov
lock
je
mov
xchg
push
test
test
cltd
add
jge
mov
out
in
aad
mov
xchg
incl
outsl
mov
lea
icebp
std
mov
jns
mov
and
cs
xchg
xchg
push
inc
cmp
or
mov
or
or
jg
pusha
sbbb
lods
aas
scas
das
pop
adc
add
xchg
add
loope
shrb
fwait
push
ret
cmp
jnp
and
pop
sub
stos
push
push
cmc
insb
mov
xchg
xlat
das
leave
xchg
jp
addr16
lahf
xchg
push
sbb
mov
add
xchg
dec
xchg
push
adc
push
mov
inc
jmp
popa
jae
ja,pt
and
cs
arpl
push
inc
seto
sbb
adc
loope
test
out
jmp
add
inc
jp
sub
mov
sub
daa
inc
push
jne
std
in
jp
mov
popa
push
fimuls
xchg
mov
and
lcall
pop
dec
dec
loop
ds
jo
nop
repz
shll
lock
push
push
lcall
jge
add
sub
sahf
imul
iret
adc
xchg
repnz
adc
lea
jge
jne
and
imul
gs
movsl
push
inc
mov
mov
lret
adc
jle
inc
aaa
push
cwtl
clc
sahf
cmp
int3
dec
mov
aas
insl
add
sub
dec
adc
push
xor
push
push
jge
sbb
idivb
xchg
mov
inc
es
inc
adcl
rcr
dec
jbe,pn
cwtl
pop
shrb
pop
jb
fistpl
sbb
fwait
or
dec
dec
add
add
es
scas
lods
mov
pop
cli
mov
mov
imul
out
std
xchg
fmull
popf
repz
aas
jle
mov
mov
push
lret
pop
test
testl
add
shrb
popa
xor
mov
jne
cld
mov
mov
inc
mov
push
fisttps
pop
sti
stc
stc
jo
sti
pop
cld
cmpsb
pop
cli
in
sub
or
or
fistpl
and
cmp
ret
out
pop
inc
cld
pop
fsts
fs
lock
or
cmc
sub
cli
ret
push
clc
lds
hlt
fidivl
push
ljmp
cmc
mov
scas
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
sub
sub
and
sbb
out
testb
aaa
cwtl
mov
push
rolb
mov
jle
xor
lds
les
out
push
mov
pop
or
pushf
aaa
orl
ret
in
in
dec
inc
pop
adc
xchg
jne
sbb
mulb
mov
mov
mov
add
bound
leave
pop
cwtl
roll
adc
push
xor
mov
xchg
push
ret
out
sbbl
popa
add
lock
cmc
popa
aad
idiv
and
xchg
out
add
xchg
loop
push
insl
test
sub
and
and
stos
or
aad
jbe
jns
imul
push
lcall
sub
xor
mov
jl
aas
addr16
mov
pop
mov
js
pop
test
rclb
mov
test
jno
push
mov
imul
insl
lock
repz
lock
sub
out
rorb
add
pop
push
pop
outsl
xchg
sub
vmovups
xor
outsl
lcall
js
cmpsb
pusha
dec
mov
leave
sub
loop
dec
xchg
sbb
pusha
push
jmp
push
or
sub
xor
shrb
inc
push
or
mov
dec
ret
mov
scas
mov
bound
subl
and
shl
lahf
outsb
out
lahf
mov
add
xor
nop
lss
test
xor
test
push
mov
add
test
push
cmp
push
inc
jns
stos
sbb
call
cmpsl
mov
pop
cwtl
movsl
xchg
cmp
xchg
adc
pop
xchg
icebp
sbb
xor
and
insl
inc
outsb
and
jmp
sub
aam
addb
pop
add
cs
daa
setg
fimull
inc
fisttpl
js
xor
inc
mov
lea
mov
js
or
icebp
push
movsb
mov
xor
je
rcrb
repz
cmc
mov
and
jne
push
push
psrlq
test
div
cli
loopne
aad
leave
sbb
mov
mov
out
push
rolb
add
xchg
mov
add
and
dec
mov
jbe
ret
mov
cmp
iret
cmp
and
aas
mov
out
fnstenv
mov
sub
inc
xor
xchg
lahf
xor
fwait
add
cmp
mov
inc
jl
scas
pushf
jne
cs
xlat
xor
jge
cmpsl
xchg
push
inc
adc
ret
xchg
lock
inc
dec
add
push
scas
std
mov
jle
mov
insb
sti
cmp
gs
shrl
mov
pusha
fwait
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
xor
aaa
push
int
sbb
adc
sbb
inc
cwtl
es
cltd
mov
sbb
test
dec
xor
dec
movsl
lods
ret
pushf
jg
push
jmp
orb
cmc
cli
xor
iret
cmp
pop
xchg
dec
inc
not
push
sub
jl
cmp
mov
mov
lahf
aaa
cmpsb
nop
imul
cmp
imul
fimull
loope
push
es
jne
xor
std
leave
adc
in
or
daa
loope
dec
dec
sub
dec
xor
popa
mov
loop
das
sahf
dec
ret
mov
inc
cwtl
or
dec
out
xor
push
lea
or
rcrb
pop
mov
add
add
test
sub
or
and
mov
add
mov
cmpsl
hlt
lret
jo
aaa
mov
iret
xchg
movsl
push
push
or
xor
addr16
aam
jne
xor
push
sbb
lahf
hlt
and
sub
rcr
push
cmp
fidivrs
test
test
push
and
addr16
jo
mov
int
pop
xor
leave
cmp
fstl
push
mov
lock
icebp
ret
roll
jne
negl
add
shrl
cmp
repnz
sbb
inc
mov
mov
fisubs
fwait
int
arpl
jmp
and
push
lret
mov
testb
daa
lea
aad
repz
pop
pop
aam
adc
dec
movsl
loope
inc
add
xor
push
jnp
pop
mov
dec
les
jb
push
pop
dec
pusha
mov
and
dec
fsubl
enter
push
lret
push
data16
xor
xchg
jnp
ja
adc
bound
mov
xchg
stos
or
lods
fldt
and
jle
mov
and
push
jle
shrl
cmp
ret
insl
fisubrs
adc
out
jmp
mov
shr
xor
dec
lret
sbb
push
mov
push
cmpsb
lea
sbb
pop
jl
pop
xchg
ret
daa
cld
outsl
sbb
addl
rcrb
mov
popa
mov
xor
cmp
push
mul
mov
stc
mov
mov
aad
shl
mov
mov
cwtl
inc
push
negl
push
lahf
inc
int3
fcompl
xchg
jg
add
jl
stos
imul
rcll
xor
movd
mov
ret
cli
mov
sbb
subl
fisubrs
add
fs
popa
scas
sub
dec
iret
xor
aas
fwait
jmp
mov
jne
sarl
mov
rcl
aas
dec
xor
rclb
in
push
pop
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
lock
and
sbb
adc
cmpb
jbe
adc
leave
out
jg
dec
jmp
add
mov
mov
cmp
cmpsb
add
mulb
xor
out
hlt
imul
push
and
sbb
push
fs
fidivrs
es
push
test
dec
adc
or
dec
mov
sbb
or
loop
mov
pop
mov
cmc
and
xchg
test
repnz
inc
dec
push
bound
add
fs
mov
lods
xchg
fs
movsl
mov
adc
inc
dec
sar
adc
mov
das
fs
sbbb
shll
vmulpd
loope
loopne
nop
add
enter
xor
sbb
xor
or
shll
jmp
andb
lret
add
mov
push
push
or
mov
push
stos
xchg
scas
je
jbe
loope
push
mov
xchg
daa
xor
mov
pop
rcr
cmp
and
aad
and
dec
es
popa
jne
in
pop
divl
jns
leave
and
sub
iret
dec
iret
shll
arpl
mov
mov
test
pop
int3
test
test
xchg
mov
inc
test
loop
clc
cld
cld
adc
push
cli
xchg
dec
movsl
push
cli
push
addr16
test
in
add
icebp
cltd
add
aaa
adc
and
adc
inc
push
cmpsl
xchg
xor
pop
shll
adc
int
xchg
add
xor
sub
movsb
adc
test
push
movsb
cmp
addb
pop
xchg
inc
xor
cld
or
js
and
fwait
daa
mov
xor
xor
pop
orb
aam
or
cmp
sahf
adc
mov
loopne
cmpsb
outsl
enter
out
sbb
test
daa
jo
mov
xor
add
cwtl
dec
into
xor
ja
adc
jbe
push
xchg
pop
lret
xchg
push
je
jle
push
dec
dec
in
imul
stc
dec
push
in
pop
adc
adc
pop
in
scas
lret
inc
test
mov
jge
adc
arpl
hlt
out
adc
sbb
xchg
sbb
sub
jge
cmp
mov
mov
mov
call
mov
xchg
outsl
icebp
adc
lahf
leave
dec
mov
and
test
mov
xor
shrb
pop
jno
mov
loope
pop
inc
or
push
push
xchg
cltd
movsb
xchg
sti
fdivs
xchg
cmp
out
xorl
adc
sbb
cmp
ljmp
jle
test
lds
or
stc
icebp
jo
in
outsl
push
push
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
pop
pop
jo
rcrl
and
sbb
loope
cs
rorb
aad
nop
add
mov
pop
leave
push
outsl
fisttpll
imul
mov
xlat
xor
out
clc
or
ret
pop
cs
dec
xorb
repnz
and
xchg
lds
int3
sub
enter
bound
pop
mov
jne
cltd
adc
and
addr16
out
outsb
addr16
mov
push
das
pop
add
push
dec
negb
xchg
mov
dec
pop
pusha
add
sbb
sub
test
int
xchg
in
ss
mov
xchg
xor
stos
ss
jp
xchg
or
sahf
lret
subl
mov
xor
cltd
test
sahf
int3
push
hlt
outsl
inc
aaa
cmp
popa
jmp
jmp
lea
call
imul
inc
ljmp
push
mov
jl
lock
dec
push
cmp
xor
mov
scas
pop
adc
rorl
mov
pop
leave
nop
jne
scas
sar
add
lret
mov
popf
mov
xchg
mov
insb
inc
insb
xor
mov
or
push
add
fistpll
and
das
jp
and
and
pop
popa
psubq
in
js
repnz
mov
pop
bound
pop
push
and
sub
imul
jae
stos
jbe
repnz
loop
cmp
je
jae
fnsave
pop
jge
push
xchg
out
in
adc
xchg
rcrl
js
aam
test
jle
sbb
lods
mov
je
insb
lods
lahf
mov
jge
inc
dec
shrl
fwait
bound
jp
add
icebp
pop
mov
xchg
roll
pop
stos
subl
int3
and
xlat
movsb
pandn
push
mov
xchg
push
cs
xor
jo
shll
je
adc
cmp
gs
mov
lret
shll
or
cwtl
xchg
lods
push
std
lret
push
push
insl
popa
cltd
ret
jmp
insl
push
shl
push
loopne
sbb
or
inc
jo
daa
sub
les
add
mov
stc
jmp
cld
adc
jne
add
inc
jb
and
imul
jns
bound
push
mov
xchg
rcrl
fisttps
cld
into
mov
mov
or
aaa
or
mov
add
pop
iret
jg
stos
mov
mov
insl
dec
lock
push
cmp
aaa
sti
add
and
aam
cmp
subl
jmp
add
pop
out
lods
out
pop
xchg
in
mov
lea
fnstsw
push
test
gs
or
xchg
xor
repnz
add
push
xchg
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
mov
and
sbb
pop
adc
push
fs
cmp
pop
jae
sbb
sbb
mov
ja
ja
cmp
sub
sub
mov
sub
add
call
or
jnp
add
mov
sbb
popa
into
stc
jmp
inc
arpl
mov
rcrl
push
sbb
movsb
cmp
jle
rcrl
loope
out
pop
inc
mov
sub
aas
in
mov
xor
push
xchg
das
addr16
cmp
sbb
sub
mov
and
sbb
pop
push
test
test
jno
dec
xor
xor
mov
or
popf
jg
loopne
les
sahf
gs
mov
cmp
inc
inc
xchg
mov
repz
mov
daa
outsl
ss
cs
repnz
das
out
lret
xchg
sub
cmp
fcoml
or
test
notl
cmp
xchg
sub
and
insl
pushf
imul
icebp
mov
shlb
mov
inc
sbb
sbb
fmull
das
jbe
scas
hlt
ja
lods
scas
jl
mov
pop
cmp
repz
mov
jns
mov
fidivs
adc
mov
aas
mov
and
lock
mulb
jne
inc
pop
scas
pusha
sub
insl
repz
in
mov
add
std
cmc
clc
cltd
mov
cmpsl
add
jns
or
cld
mov
sub
daa
ds
sbb
sbb
out
fildll
dec
xlat
repz
sbb
enter
push
fs
sahf
or
imul
mov
mov
clc
mov
popf
nop
pop
testl
mov
test
int3
fwait
lock
ficoms
sbb
test
sub
test
test
int3
and
push
js
jge
dec
das
xor
push
or
daa
pop
movb
cmp
fldt
aaa
pop
or
cmpsb
xlat
mov
out
mov
xchg
std
mov
lods
cmpsb
inc
cmp
js
push
ror
or
lahf
inc
jge
aad
insb
scas
xchg
push
push
push
in
mov
testl
daa
adc
test
int3
jp
aad
jae
mulb
or
ficoml
cmpsl
jecxz
push
dec
jbe
out
pop
pop
add
jbe
lock
jp
rorl
dec
std
adcl
pop
in
sub
sub
mov
xorl
pop
sbb
lret
stc
fwait
add
frstor
ret
adc
add
pushl
mov
and
arpl
fstp
mov
loopne
arpl
jecxz
pushf
add
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
mov
sbb
and
sbb
inc
adc
xchg
icebp
add
mov
dec
loopne
mov
sbb
xchg
dec
mov
pusha
cmp
cmp
push
sbb
adc
dec
or
mov
mov
mov
xchg
aas
xor
mov
outsb
aad
into
out
jns
sub
xchg
add
mov
add
or
cmp
movsb
mov
ss
sub
adc
pop
loopne
cmc
sub
push
in
lcall
cli
incl
in
adc
sti
es
mov
mov
lds
insb
popa
xor
fimull
jnp
mov
in
sub
test
aaa
pusha
sti
scas
xor
repz
insb
test
in
pop
xchg
jns
mov
cmc
add
cmpsb
out
mov
imul
cmp
leave
xor
mov
loop
xchg
cld
dec
lahf
flds
testl
addr16
scas
aad
jb
mov
pop
mov
pusha
xor
inc
shr
mov
sub
loope
jle
push
pxor
in
pop
int3
negl
loop
das
fnsave
push
cmp
xchg
mov
sarb
push
cmp
out
es
std
mov
pop
or
outsl
fs
sub
jno
sub
mov
jo
xchg
test
push
mov
mov
shrb
lds
scas
xor
cmc
ffree
push
or
pusha
outsl
roll
arpl
sub
je,pn
rol
lods
addr16
movsb
xchg
dec
popf
cltd
in
jg
jge
imul
in
and
adc
cmp
outsl
subl
dec
and
dec
loopne
add
aam
mov
test
std
adc
sbb
ret
sbb
imull
andb
fs
imul
cli
lahf
pop
cld
cs
push
fnop
mov
fcmovbe
repnz
pop
dec
or
lea
movsb
mov
and
inc
mov
std
xchg
cmc
fldcw
leave
andb
inc
jecxz
daa
loope
cmc
lcall
mov
xchg
sbbb
test
adc
pop
cmp
test
mov
or
adc
out
inc
aad
rcl
or
pop
xor
push
mov
jnp
ffreep
les
add
shl
mov
cmpsl
inc
test
and
les
addr16
mov
scas
icebp
jge
and
pop
jmp
icebp
ds
outsb
iret
lcall
lahf
stos
mov
add
sti
push
push
mov
push
sbb
testb
movb
jmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
and
cmp
fldt
mov
xor
imul
dec
jno
cltd
popf
xlat
xor
inc
jbe
sub
mov
ficoml
dec
adc
or
movsl
push
bound
icebp
inc
pop
sbb
insl
mov
push
sarl
dec
lods
add
lea
fs
jp
mov
sbb
and
loop
mov
iret
pop
stos
inc
leave
xor
and
cmpl
xor
fmull
lds
inc
data16
push
pusha
mov
ficoms
pop
repz
nop
movsb
or
mov
mov
cld
jecxz
lahf
inc
push
out
mul
lods
add
mov
rorl
pop
xchg
mov
sbb
inc
fisttpll
loop
fists
pop
js
mov
sub
data16
sub
push
pop
cmp
ljmp
into
lods
pop
dec
jo
nop
fnstenv
mov
movsl
je
xchg
jnp
test
cmp
jnp
insb
mov
jo
mov
mov
and
rcrl
mov
mov
push
outsl
mov
mov
fildl
fisttpl
outsb
cwtl
xor
mov
repz
add
or
mov
imul
pop
pushf
xchg
dec
imul
mov
inc
ja
xor
push
or
inc
push
mov
lock
ss
pop
jbe
fmul
cmpsb
lods
add
je
test
lock
add
xchg
push
or
mov
or
mov
mov
lods
inc
ret
mov
repnz
xchg
imul
pop
push
sub
imulb
shlb
inc
mov
into
lret
mov
dec
lods
mov
xor
dec
insl
pop
int3
sar
jbe
lahf
adc
push
sub
sbb
fsubs
xchg
sub
loope
inc
jp
fwait
dec
aas
mov
lea
out
test
jne
jle
stos
and
sbb
fldt
rorb
xchg
add
inc
in
xor
sub
lea
ss
fldcw
adc
fstpl
clc
xor
push
cmc
test
pop
cmp
shlb
mov
bound
cmc
mov
imul
icebp
dec
lret
mov
stos
loope
or
cmp
jb
mov
inc
or
das
jno
pushf
xchg
adc
cmp
pop
aas
inc
out
int3
aaa
inc
jp
cmpsl
push
clc
lods
mov
popa
pop
mov
sub
cmc
inc
sahf
out
ja
add
jp
in
and
mov
cs
push
aam
inc
sub
out
add
lcall
and
fcoms
push
add
rol
loopne
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
mov
sbb
and
sbb
xor
dec
or
enter
pop
inc
adc
hlt
adc
pop
sbb
jne
xchg
in
xor
mov
xchg
outsl
sub
test
adc
cmovg
movsb
popa
imul
push
pop
lods
push
test
ss
push
es
add
stc
dec
mov
jp
sub
shll
sbb
or
jb
shlb
shlb
int3
pop
lahf
lea
lcall
rorl
ret
ret
push
mov
or
cmp
xchg
jns
push
loop
add
ficompl
cmp
push
lcall
ja
mov
inc
sub
pushf
xchg
icebp
inc
sbb
push
or
mov
mov
ljmp
pushf
mov
lret
and
push
stos
cld
adc
gs
jecxz
pop
xor
popa
adcl
jge
jg
mov
iret
leave
or
stc
mov
popf
push
lock
xor
or
jb
lds
mov
jmp
sti
jge
pop
inc
cwtl
push
out
jne
add
or
in
jno
mov
push
pop
jo
push
mov
fildl
jo
add
or
adc
adc
or
sub
loop
sbb
push
mull
ror
cmp
mov
ljmp
fadd
mov
inc
push
push
pop
and
sti
mov
mov
push
adc
push
push
fs
add
lret
xchg
dec
in
pop
aad
cmp
push
mov
xor
divb
ja
push
cmp
cmpl
stos
sub
pop
push
xchg
push
pop
lahf
sbb
pop
mov
dec
add
fists
mov
jg
add
jmp
and
jnp
jns
or
dec
cmpsb
adc
fistl
mov
sbb
je
xor
pop
loopne
fldl2e
mov
mov
out
cmp
push
or
push
add
xor
dec
testl
adc
cmp
xor
xchg
push
jns
lcall
push
mov
pop
pop
test
cmp
sbb
sub
iret
cmpsb
dec
xor
mov
aad
jbe
lcall
mov
and
popf
pop
enter
out
pop
subl
jb
adc
adc
and
cmpsl
gs
dec
xor
push
into
cld
cmp
dec
sbb
sti
aaa
pushf
xor
pop
mov
mov
fs
push
ljmp
inc
dec
fcmovu
mov
sub
movsb
pop
mov
dec
gs
sbb
xorl
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
mov
mov
adc
sbb
out
xor
mov
jbe
jns
rcll
and
sbb
push
push
fldt
push
inc
repnz
jae
aas
mov
push
and
xchg
xchg
into
das
sbb
pusha
push
pop
scas
neg
loope
nop
sub
xor
dec
xchg
sub
imul
jecxz
mov
dec
jge
icebp
sbb
pop
loope
and
mov
and
xchg
mov
imul
lock
cmp
and
es
clc
adc
jb
xor
mov
cmpsl
adcb
aad
pop
cmp
and
fsubrl
test
xchg
je
and
enter
out
mov
cmc
mov
add
mov
jb
cld
sub
sbb
sub
test
icebp
lock
ds
enter
xchg
cmpsl
cli
lret
fisubl
jae
cmp
push
dec
sbb
gs
pop
movsl
lahf
inc
mov
xor
fisttps
push
inc
inc
ljmp
add
repnz
lea
add
out
and
pop
or
mov
add
insb
or
inc
iret
push
les
mov
jecxz
lea
imul
mov
mov
sub
out
sub
push
into
adcl
mov
push
cltd
jno
jle
push
sbb
dec
nop
pop
cwtl
pop
jns
fldenv
inc
or
loope
repnz
push
mov
jg
or
lahf
dec
movsl
push
cmpsb
dec
out
xchg
notb
repnz
mov
frstor
mov
testb
jle
xor
dec
add
mov
cmp
adc
xchg
cwtl
inc
sbb
int
inc
xchg
sbb
sbb
in
loop
filds
imul
and
and
test
cmp
mov
lcall
jl
fcmovb
push
hlt
mov
cmp
ja
jle
add
xlat
adc
mov
jo
cmc
or
mov
fs
mov
lods
repz
mov
addl
mov
sbb
mov
push
push
push
dec
jge
std
jmp
cmpsb
push
add
fsubrs
pop
cmpsl
dec
jne
push
sbb
ljmp
or
dec
jg
cmc
mov
scas
into
mov
pop
outsl
lret
insb
jecxz
pop
stos
xchg
dec
sub
mov
or
enter
dec
dec
cmp
push
pop
jmp
pop
lea
jns
into
xchg
dec
push
ficoml
ljmp
scas
fimull
mov
mov
dec
daa
and
je
ja
cld
push
jmp
sub
je
test
pop
dec
push
cmc
insl
and
jns
out
jae
sub
enter
mov
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
or
gs
and
sbb
pop
clc
and
adc
jp
jns
popa
inc
stos
int
ret
and
mov
jo
jnp
inc
test
popf
sub
arpl
jp
cmp
cmc
pushf
dec
data16
mov
in
ljmp
pop
jnp
push
mov
cmpsl
movsb
aad
sub
add
dec
mov
fistl
mov
xchg
mov
loope
fsts
insb
scas
sub
xorl
out
stos
sahf
pop
mov
jg
pop
imul
jp
repnz
inc
pop
and
sub
mov
pop
rol
jg
pop
insb
stos
sub
imul
sbb
ffreep
pop
mov
daa
outsb
push
pop
sbb
cmp
loopne
sbb
daa
in
sub
mov
sbb
je
out
cmp
movsb
inc
xorb
into
lds
out
fisubrl
enter
aaa
and
cmp
pop
sub
cwtl
int3
cmpsb
mov
inc
std
and
outsl
mov
mov
pop
scas
xchg
add
fcomip
jl
and
loope
bound
adcb
jns
adc
mov
inc
cmpsb
fwait
movzwl
popa
ss
ljmp
loope
test
scas
push
mov
leave
jg
aam
out
pop
repz
push
fwait
pop
and
out
leave
push
bound
ror
xchg
or
les
adc
lahf
cmpsb
outsl
jnp
mov
xor
cmp
out
sahf
out
jnp
negl
dec
sbb
push
xor
jno
mov
fs
xor
inc
clc
movsl
iret
loop
cmpsl
sbb
cwtl
fiaddl
add
add
xchg
sub
and
ss
xor
decb
mov
ds
sbb
sbb
mov
inc
rolb
push
std
pop
hlt
in
jno
in
dec
and
int3
outsl
xchg
xchg
out
outsb
mov
ljmp
dec
or
add
pop
js
xor
mov
sbb
cmpsb
mov
repz
jae
lds
hlt
adc
push
cltd
test
rcrl
imul
dec
jmp
fsub
call
ljmp
popa
pop
stos
fucomip
and
lea
leave
push
push
push
ljmp
add
pop
mov
inc
cwtl
shlb
push
mov
jecxz
jmp
les
mov
lods
pop
cmp
js
imul
dec
cmpsb
jno
repnz
mov
sub
loopne
push
shrl
js
das
int
js
sbb
dec
push
mov
jo
add
xchg
push
sbb
and
mov
test
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
mov
and
sbb
xor
push
mov
xchg
jnp
push
mull
lcall
pop
int
divl
aaa
mov
out
ljmp
jb
fs
in
or
movsb
jnp
pop
or
pushf
and
sar
inc
mov
into
aas
popf
and
cli
push
popf
push
sbb
int
pop
xchg
scas
shr
jno
and
cmc
dec
sub
mov
mov
push
jp
lock
rcl
push
pop
lock
inc
test
rcrb
loop
inc
and
dec
leave
xchg
dec
cltd
push
pop
and
xchg
sbb
psrlw
cmp
push
and
dec
cmpl
cmp
dec
mov
outsb
xchg
lods
jns
adc
lods
les
icebp
ljmp
stc
adc
in
adc
outsl
aaa
dec
pop
andl
jle
andl
scas
push
sbb
das
mov
fsubrs
and
add
mov
push
rorl
bound
and
repnz
adc
sbb
jmp
test
repnz
ret
adc
loop
sbb
push
movsb
test
test
add
lods
xor
mull
xchg
mov
lahf
inc
xchg
dec
aaa
pop
lods
insb
leave
or
xchg
lock
movsl
lods
xlat
lahf
aas
and
sahf
loopne
mov
push
ds
shll
or
jnp
adc
add
pop
stos
jne
fisubrl
dec
insl
cmp
mov
loopne
insl
adc
adc
mov
adc
std
loopne
jbe
xchg
dec
imul
push
out
xchg
ja
icebp
insl
push
cmp
mov
xchg
dec
cld
arpl
in
out
jo
adc
int
jnp
dec
loop
add
aaa
xor
mov
jge
mov
fmuls
dec
lods
in
adc
pop
ljmp
dec
jecxz
mov
cld
mov
movsb
push
inc
jmp
cs
mov
xor
push
push
or
mov
mov
mov
xchg
sti
fiaddl
jb
inc
cmp
add
cltd
or
xchg
clc
cmpsb
push
add
mov
add
xlat
repnz
imul
lret
inc
jg
xchg
inc
in
negb
mov
jg
xor
xchg
js
fisubl
inc
mov
call
push
fptan
fidivl
adc
insl
lret
and
repnz
lcall
mov
js
sahf
repz
pop
push
es
inc
pop
cmpsl
sbb
xchg
scas
movsb
mov
add
adc
cld
cli
dec
daa
ret
fmuls
shl
jmp
cmp
sbb
push
push
out
push
shr
stos
rclb
sbb
test
dec
sub
in
cmp
lods
cld
push
stos
dec
fcomps
jle
mov
sub
sub
xor
mov
in
add
ss
push
leave
jno
ret
lock
cmp
xchg
mov
cmp
js
scas
push
jmp
fbld
xorl
cltd
and
out
fildl
loop
fldt
inc
int3
jg
fisubrs
inc
ret
roll
mov
pop
dec
jmp
jg
les
mov
stos
das
lret
ja
rorl
sbb
xchg
cld
mov
insl
popf
xchg
mov
sti
insb
cmpsb
inc
rorb
lock
fisubl
lret
sahf
and
mov
add
or
mov
mov
jge
or
jmp
jb
movsb
push
and
push
push
adc
push
mov
cmp
arpl
pop
adc
das
jae
cs
je
arpl
mov
or
hlt
negb
mov
cmp
jns
mov
xor
xchg
test
xchg
mov
adc
jl
mov
insb
addr16
mov
ficompl
lock
lds
push
adc
dec
es
pushf
testb
add
mov
jb
lock
or
adc
mov
jns
enter
andb
push
push
pop
mov
hlt
jns
fldcw
adc
or
lods
nop
xchg
les
pop
ds
adc
outsb
iret
push
adc
jae
or
xchg
cld
gs
test
inc
mov
out
out
pop
sub
sub
adc
adc
ja
aaa
pop
rcl
sarl
mov
loop
xor
loope
pop
add
cmp
mov
loopne
jge
test
pop
jg
flds
pusha
das
sub
fadd
out
ss
adc
loope
ret
or
cmp
outsl
and
popa
mov
mov
add
lret
lds
stc
shrl
xchg
andl
dec
inc
testb
pusha
push
dec
xor
fs
adc
fildll
jmp
mov
mov
mov
jmp
ret
inc
and
xor
dec
sbb
sahf
je
jo
and
and
lds
fidivl
and
push
pop
and
leave
addr16
shrl
cs
pop
sub
ret
jno
push
test
call
iret
rolb
lods
push
cmp
test
jle
pop
mov
cltd
mov
addr16
int
xor
js
popa
pop
or
stos
or
xor
adc
dec
dec
popa
xor
jl
sar
push
ja
popa
or
fldenv
inc
mov
fmul
clc
hlt
xchg
dec
jnp
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
mov
ret
mov
pop
push
jae
stc
add
orl
int
scas
jno
imul
cmp
fstpt
insl
dec
cs
jnp
push
pop
or
cmpsl
adc
data16
add
lock
jbe
scas
mov
scas
xlat
sub
mov
loope
out
out
mov
mov
push
lods
mov
lods
stos
stc
dec
or
fsts
sub
cltd
mov
jne
into
jne
push
ds
pop
ljmp
sbb
mov
test
sbb
lods
aad
test
clc
rolb
ret
in
mov
cltd
pushf
shrb
mov
test
jns
pushf
pop
mov
cs
xchg
jo
push
loope
int3
test
sahf
push
inc
test
dec
push
pusha
cli
psllw
ds
enter
stos
inc
push
adc
jo
adcb
sbb
sub
scas
loope
pop
push
push
xor
push
sub
and
fisubs
xchg
pop
lret
sbb
lahf
into
sbbl
movsb
jno
into
lcall
lret
dec
imul
dec
js
lods
pop
lods
sub
xchg
xchg
ret
test
jns
mov
xchg
jp
inc
mov
and
cmc
mov
jp
pushf
push
rcll
lods
mov
insl
or
or
imull
xor
lahf
jne
fisttpll
nop
inc
insl
and
sub
adcl
cmpsl
dec
push
dec
push
adc
mov
pop
nop
stc
mov
jmp
dec
adc
mov
lcall
jle
repnz
sub
aaa
sbb
push
fsub
lods
push
jae
push
sub
ret
xor
jne
jae
insl
call
adc
test
pop
mov
sbb
inc
pop
stos
sbbl
xchg
icebp
shlb
sti
pop
pop
pop
cmpsl
ret
or
mov
int3
mov
insl
xchg
xchg
into
dec
add
sbb
int3
arpl
loopne
inc
mov
stc
jmp
test
dec
jno
decb
in
repz
cltd
add
push
nop
loop
and
sbb
xchg
jecxz
test
add
jl
xor
jbe
xlat
std
push
nop
xor
in
cmpsl
mov
cwtl
pop
push
or
fcomps
rol
pusha
stc
dec
es
pop
out
xchg
es
ds
mov
or
pop
aad
xor
andl
pop
nop
pop
or
insb
sub
adc
scas
sub
push
mov
scas
mov
inc
ret
stos
push
push
and
out
push
sub
hlt
lahf
xor
sbb
add
roll
std
inc
stos
and
mov
inc
or
push
movb
ja
mov
jnp
aad
dec
movsb
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
jp
jle
test
sbb
adc
sbb
aam
stc
lahf
and
sub
adc
mov
jne
aas
sbb
push
scas
stc
push
jb
lods
lock
notb
push
mov
aad
rcrb
push
mov
inc
mov
push
lret
pusha
rorl
fdivs
fs
xlat
aam
roll
push
cmp
and
push
fwait
add
cli
inc
leave
inc
hlt
jmp
inc
cmp
xor
mov
fwait
sbb
pushf
inc
jmp
jecxz
mov
or
cmp
xchg
mov
add
xor
xchg
ficompl
push
mov
push
mov
push
jecxz
cmp
lock
pop
mov
or
in
adc
mov
hlt
test
xor
add
cs
outsl
es
dec
pop
imul
out
cmp
jl
xchg
clc
and
inc
je
fildll
jmp
js
jne
pop
rol
pop
les
mov
mov
inc
insw
mov
dec
stos
cld
sub
sahf
sub
pop
push
iret
in
mov
or
fcmovne
mov
dec
gs
inc
add
sbb
mov
lahf
cld
xor
sbb
repnz
movsl
pop
mov
xchg
sbb
enter
stos
ret
mov
lock
loope
stos
pop
insb
mov
ret
push
nop
out
add
iret
hlt
stos
loopne
nop
stc
pop
pushw
pop
int
sbb
mov
sarb
aam
adc
xchg
into
cmp
add
jecxz
mov
inc
mov
xor
add
lcall
dec
jmp
sub
mov
sbb
pushf
test
mov
cli
mov
pop
push
pop
fcoms
lcall
dec
jp
inc
inc
fstl
and
insb
fisubl
retw
ja
mov
out
cmc
lcall
jns
pop
dec
out
and
or
push
mov
or
into
dec
pop
cmp
test
rolb
stos
inc
sahf
push
icebp
pop
xchg
outsb
and
cmpsb
xlat
enter
test
adc
jge
cmp
mov
data16
xchg
mov
rcrl
std
jo
stos
jmp
roll
xor
decl
xor
mov
stos
xchg
push
and
cmp
jns
push
movsl
movnti
insb
iret
jle
adc
aaa
push
sbb
push
mov
shrl
sarb
cli
inc
lods
sub
ja
shr
jmp
lcall
or
dec
pop
lods
lock
add
rorl
cld
cmp
mov
out
inc
mov
inc
dec
cmp
inc
mov
lods
enter
add
mov
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
jl
jg
sbb
adc
sbb
aam
into
lret
inc
xchg
or
sub
add
mov
mov
cli
inc
repz
sub
add
mov
xor
cmc
or
fwait
jmp
jbe
int
push
adc
mov
pop
xchg
add
or
int3
jmp
sub
arpl
and
in
jmp
les
sub
jo
loope
je
lahf
shr
mov
push
xor
out
xor
in
fildll
jmp
or
add
jbe
inc
aad
jl
ror
xor
test
xchg
sbb
or
lea
adc
shlb
repnz
cmp
insb
lods
adc
imul
stos
cmp
cmc
sub
insl
lret
mov
lahf
or
mov
in
out
adc
les
sahf
jecxz
jo
and
mov
mov
sbbl
mov
inc
shrl
pop
sub
ds
rcrl
push
push
movsl
sbb
fistpl
jmp
push
test
mov
iret
data16
xlat
mov
mov
xor
rcrb
daa
cmp
test
jmp
jp
cmp
sbb
repnz
cmp
clc
jl
xchg
inc
add
lods
dec
faddp
arpl
jl
adc
fwait
sti
pop
stc
pop
cmp
inc
push
sbb
lret
aas
inc
lea
xorl
or
in
cmp
popa
cmp
sbb
ljmp
in
xchg
dec
xlat
pop
hlt
cmpsb
imul
in
es
sbb
and
stos
sbbl
rorl
lds
push
inc
and
repz
add
and
icebp
hlt
or
or
push
rclb
push
cld
cli
shlb
js
push
into
and
sub
add
push
cmp
jno
sbb
and
sub
mov
xchg
jge
cmp
mov
rcll
in
inc
movsb
sbb
or
mov
in
xor
jns
cmp
xchg
pop
xchg
cmp
xor
jo
sbb
adc
pop
pop
sbb
push
sahf
and
add
or
inc
mov
jmp
jl
cltd
cmpsl
stos
pop
sar
push
shlb
mov
adc
mov
sbb
xchg
daa
dec
pop
in
cwtl
in
clc
push
jg
pop
addr16
adc
add
xchg
and
mov
push
fwait
ja
xor
cs
out
jle
adc
inc
hlt
fsubs
mov
jae
jne
jge
mov
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
gs
push
jns
sbb
adc
sbb
sub
sub
inc
inc
loopne
fbld
lock
in
jecxz
movsb
lahf
pop
lods
ret
pop
aaa
aaa
push
sbb
pop
sbb
pop
jecxz
fs
fsubrl
mov
sbb
xor
mov
inc
mov
setl
mov
inc
jge
jecxz
out
sub
inc
out
pop
test
ja
sub
out
xchg
es
lret
ja
lret
roll
pop
mov
cmp
cltd
or
addl
mov
adc
iret
sub
ljmp
fisttpl
xor
repnz
dec
pop
out
and
mov
es
adc
cmpb
inc
sbb
inc
lea
call
into
aaa
add
adc
movsl
pop
lods
adc
inc
dec
adc
dec
push
icebp
dec
push
or
nop
inc
mov
aaa
int3
loopne
lcall
les
mov
add
das
aaa
dec
sub
out
hlt
lods
je
or
das
mov
es
int3
jle
mov
aad
pop
pop
mov
fdivrs
adcl
adc
stos
push
shl
push
fs
test
insb
popa
add
daa
jecxz
aas
jns
and
lods
mov
xor
jl
loop
jno
mov
in
dec
fucomip
push
mov
adc
and
imul
pop
lcall
daa
sbb
xchg
fisubrs
pop
out
sub
lds
push
lock
dec
mov
aam
adc
cmc
rolb
lock
mov
lcall
pop
jnp
push
jle
inc
inc
sbb
inc
cmp
fs
lahf
ss
and
lcall
mov
push
dec
in
mov
jae
out
clc
ljmp
xchg
mov
pop
pop
outsl
enter
add
push
push
in
orb
ljmp
pushl
xor
xorl
xchg
jo
imul
fcmovu
mov
leave
bound
mov
xchg
cmp
pop
adc
add
enter
cmpsl
pop
jge
fs
fsubp
pop
inc
fistpl
and
lcall
stos
es
outsb
mov
adc
or
mov
pusha
call
in
shll
inc
shlb
push
mov
dec
dec
repz
sbb
ret
je
in
aaa
push
adc
fsubp
andb
add
jp
dec
pop
xor
notl
mov
sbb
insb
cmp
ret
insl
das
or
out
pop
add
psrlq
in
out
add
hlt
mov
mov
sub
addr16
sbb
mov
cli
ja
rorb
movsb
xor
fdivp
mov
fsts
shrb
inc
xchg
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
sarl
push
lds
movsb
lods
jg
loopne
cmp
pop
adc
and
dec
xor
dec
gs
cltd
mov
cmp
jnp
xor
out
out
cmp
mov
xchg
scas
mov
dec
test
stos
xchg
pop
mov
sti
daa
inc
xlat
add
push
adc
hlt
lret
lods
movsb
adc
lds
mov
and
jmp
lea
push
and
loop
test
lock
sbb
or
jo
lods
sbb
xor
adc
jno
mov
mov
push
and
mov
ljmp
in
lods
or
fisttps
outsb
daa
rcl
mov
insl
cmp
and
mov
inc
fnstsw
xor
cmp
cmp
sbb
adc
jns
inc
repz
add
mov
out
daa
jnp
adc
cwtl
jmp
lods
in
jnp
dec
add
addb
and
jmp
adc
adc
xor
mov
jne
jne
in
enter
mov
jne
dec
mov
mov
sbb
add
xor
stos
stos
aad
jecxz
cmc
mov
push
fnstsw
or
ljmp
xchg
inc
add
push
dec
dec
rcll
es
lcall
sub
daa
sbb
cmp
or
xlat
icebp
je
or
inc
mov
sbb
xchg
xchg
pop
xchg
push
repz
jnp
mov
jl
imul
fistps
in
jp
jecxz
ss
cmpb
push
mov
xor
sub
jno
mov
clc
jecxz
sahf
imul
and
push
fisubrl
lret
mov
and
pop
pop
add
insb
pop
testb
sub
rorl
adc
lahf
cs
andb
mov
hlt
and
popf
push
rcrb
push
sbb
jg
cmp
mov
pop
xchg
sar
cmp
aas
or
out
ficomps
imul
imul
jg
shl
jo
stc
sbb
std
or
push
popf
sarb
mov
jmp
shll
sbb
fistl
in
fdivr
jo
ficoms
loop
jae
aaa
gs
aas
adc
and
repz
je
addr16
cli
inc
mov
xchg
in
xchg
mov
jle
ja
push
mov
adc
adc
out
testl
push
fildll
insb
sbb
inc
adc
stos
jecxz
cmp
mov
push
movsb
push
cmpsl
std
xor
std
mov
xchg
push
lock
mov
xchg
dec
lret
mov
sbb
xchg
xor
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
or
add
sbb
adc
sbb
xchg
fildl
int3
jle
dec
in
cmp
ja
jecxz
xlat
or
repz
ret
adc
sbb
cmc
stc
push
xchg
jp
cmp
mov
dec
out
inc
sbb
clc
pop
adc
sbbb
pushf
mov
psrld
scas
imul
pop
adcb
adc
or
xchg
jmp
aam
cwtl
adc
add
mov
jle
sbbl
cmpb
repnz
fstl
push
dec
mov
data16
loopne
add
xlat
iret
outsl
sbb
fsubr
mov
mov
bound
int
cli
mov
jmp
mov
lods
in
cmp
inc
jb
data16
js
imul
gs
mov
mov
xlat
jge
inc
sbb
scas
lea
subb
std
xor
pop
jmp
cmc
movsl
dec
stos
jbe
cld
ret
jp
lods
cmp
mov
fdivrs
inc
int3
insl
rolb
pop
cmp
sarb
lret
adc
xchg
es
iret
dec
movb
jno
jb
popa
daa
jb
out
cmpl
es
jmp
pop
sub
push
lret
data16
lds
mov
cmpsb
in
test
dec
imul
fdiv
test
cmp
int
loop
and
sub
sti
fwait
out
cmp
sbb
pop
iret
sub
mov
hlt
xchg
pop
mov
jno
mov
xor
xlat
popf
icebp
repnz
push
rclb
addb
fistpl
and
xchg
push
rorb
sbb
add
and
ljmp
ret
jmp
and
dec
mov
push
scas
mov
sub
add
sbb
jecxz
stc
lods
fmull
lret
int
loope
lret
mov
pushf
and
jbe
in
or
jmp
lock
mov
test
sub
andl
call
mov
jnp
icebp
xchg
mov
cld
lock
push
outsb
xchg
mov
sti
sub
mov
mov
in
outsl
andb
mov
add
ja
pop
dec
subl
dec
jne
xchg
mov
lods
dec
clc
loope
outsb
cwtl
fsubl
cmp
out
loope
push
sub
pop
leave
cmp
rolb
scas
cmp
les
testl
outsb
xchg
add
bound
xor
push
pop
call
filds
pop
xchg
inc
clc
repz
xchg
sbb
addr16
pushf
mov
adc
int3
enter
out
arpl
jo
xor
pop
inc
mov
xchg
popa
icebp
loope
mov
push
push
sub
sbb
jne
push
mov
lods
enter
add
ljmp
and
push
sbb
push
into
sub
and
sbb
add
push
je
mov
stos
rcll
iret
mov
jecxz
cli
sub
or
and
push
adc
inc
adc
mov
out
xchg
xor
xor
repz
pop
shl
test
or
jo
lods
lds
dec
loop
and
mov
stos
mov
je
les
mov
inc
push
pop
inc
les
into
jl
add
loopne
out
jo
inc
sbb
shll
cld
pushf
scas
push
cmp
jp
sbb
cmp
loope
pop
stc
rcr
mov
cmp
inc
jmp
lods
daa
and
int
icebp
pusha
xchg
mov
pop
xchg
int3
dec
sub
inc
les
gs
or
inc
pushl
lock
lret
mov
push
jbe
orl
adc
cmp
sub
cmp
mov
outsb
sarb
lea
push
fwait
cmpsl
div
push
addr16
sbb
fwait
push
or
mov
mov
lahf
push
bound
out
jno
push
mov
mov
xchg
dec
jns
push
sbbl
insb
sub
inc
out
jge
mov
adc
inc
or
cli
fistl
push
ja
jae
sarl
fs
pop
outsb
orb
rclb
lea
repnz
leave
add
repnz
es
aas
or
loope
mov
inc
into
mov
jmp
lahf
add
lret
jle
pop
test
cmpsb
arpl
mov
xchg
hlt
pop
roll
push
push
sub
ss
push
push
ret
lds
aam
jg
test
pop
jnp
fidivs
and
xchg
sub
add
adc
insl
xor
pop
popa
mov
sbb
movsb
iret
aaa
jae
negl
in
ret
mov
test
and
fstps
or
pushf
ja
inc
push
orb
mov
jns
mov
lret
decb
dec
es
push
add
stc
push
mov
lahf
mov
in
xchg
mov
iret
cwtd
int3
sbb
fidivrs
nop
add
inc
rcr
sti
fiadds
adc
sahf
das
ja
imull
jge
pusha
movsl
jmp
lods
lcall
insb
cmp
inc
jo
out
loopne
cltd
popf
cltd
xlat
in
das
gs
out
mov
mov
aas
lea
in
mov
xchg
imul
js
out
mov
mov
push
pop
and
daa
outsl
mov
loop
test
pop
xor
xchg
and
mov
in
fs
gs
cwtl
sti
es
out
les
push
outsl
pop
sbb
xor
inc
sbb
imul
es
lahf
in
ja
pop
cltd
and
push
xor
lock
les
in
in
icebp
jp
push
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
lea
popa
sbb
and
sbb
out
loope
hlt
cmp
cmp
cli
push
enter
fs
adc
and
fisttpll
jb
mov
lahf
fdivl
stos
arpl
movsb
lahf
jnp
dec
shll
je
push
popf
std
aas
dec
ds
xchg
and
std
xchg
dec
adc
je
push
push
push
shll
lods
out
test
sbb
mov
mov
cmp
lahf
pop
jp
loope
adc
mov
inc
loope
in
cmp
popf
gs
mov
cs
repnz
push
push
insl
ficomps
jne
and
shll
push
push
icebp
loopne
inc
inc
stos
arpl
std
lds
push
inc
daa
aad
push
sbb
jno
cs
sbb
ljmp
aaa
inc
adc
jl
mov
imul
lock
or
das
aad
push
push
fcompl
push
ds
inc
xor
xor
test
mov
pusha
xorb
shlb
and
std
inc
xchg
gs
jmp
clc
test
mov
push
mov
adc
js
xchg
jle
roll
ret
scas
popa
icebp
imul
and
jmp
mov
pop
mov
hlt
sub
outsl
test
xchg
clts
xlat
or
jecxz
add
jns
push
push
mov
clc
repz
push
aas
push
xchg
sbb
fdivrs
lock
xchg
fisubl
inc
xchg
dec
jo
arpl
pop
sbb
idivb
cld
cmpl
leave
inc
negb
cli
mov
push
and
jo
inc
das
aam
mov
sahf
inc
movsb
mov
pushl
sbb
dec
insb
cmp
push
pop
je
insb
sub
push
insb
xchg
xchg
sbb
jle
clc
into
xchg
repz
sub
and
lds
xor
jno
sbb
arpl
ljmp
sarl
imul
js
pop
mov
or
imul
sahf
addr16
sbb
out
bound
sub
in
mov
outsb
pop
enter
xchg
leave
adc
bnd
dec
mov
scas
adc
cmpsl
sbb
popa
pop
lret
ds
push
iret
dec
lret
cld
pop
out
or
ffree
add
xchg
ljmp
mov
or
outsl
mov
pop
push
sub
push
addr16
jne
es
repz
into
pop
in
sahf
popa
int
jae
lret
push
leave
mov
jnp
imul
leave
push
mov
xchg
idiv
lcall
in
cld
mov
lods
push
ljmp
xchg
push
push
adc
lret
lret
or
insb
and
shll
int
loopne
fnstenv
cmc
gs
push
ret
and
mov
lret
cmpsl
xor
sbb
or
dec
add
dec
jnp
push
jns
mov
out
enter
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
out
mov
and
sbb
je
sahf
mov
jbe
shll
ljmp
inc
and
pop
pusha
sub
sbb
xlat
sti
push
mov
xor
adc
and
fsubrs
ljmp
test
dec
pop
int
cmpl
dec
push
icebp
fs
sub
xor
jle
sub
inc
xchg
sub
xchg
aaa
dec
out
pop
dec
jne
xchg
scas
int
cmp
dec
inc
test
test
loopne
pushl
js
inc
mov
jg
sbb
fistl
cwtl
cmpl
ficompl
test
outsb
cmpsb
adc
out
jge
sub
mov
jmp
dec
fistpll
push
imul
jp
push
imul
cmp
push
cli
ljmp
or
nop
sbb
inc
dec
xor
cmp
push
sbb
rorb
lret
xchg
mov
imul
mov
out
dec
add
fcmovu
call
out
jne
push
pop
jg
pusha
fisttps
xchg
cmpl
mov
mov
cmp
xor
jmp
sub
xor
test
xchg
mov
icebp
icebp
xor
cmpl
loopne
sbb
in
adc
addr16
dec
inc
fwait
jbe
xchg
loopne
fidivrs
mov
arpl
lods
sub
adc
inc
jp
xchg
jle
lea
jg
adc
out
roll
movsl
cld
mov
dec
inc
rol
mulb
enter
cmpsl
popa
imul
inc
in
adc
sub
sub
dec
insb
shl
and
xor
test
lods
popa
xorb
inc
btc
cmpb
mov
xchg
pop
cmpsl
push
in
ja
mov
adc
cmp
jl
rcrb
adc
idivl
jg
rol
add
mov
ret
inc
ljmp
insl
adc
xlat
adc
ret
add
mov
mov
xchg
sub
fbld
shrl
push
enter
std
mov
pop
push
mov
push
daa
loop
inc
push
sbb
jnp
dec
test
mov
add
sub
sahf
lcall
shlb
mov
es
mov
movb
stc
cmpsb
insb
neg
push
outsl
movsl
xor
jge
push
and
push
dec
sub
adc
adc
xchg
lret
gs
push
inc
cwtl
mov
loop
push
mov
or
mov
movsb
xchg
int
xor
hlt
xchg
cld
adc
arpl
push
std
push
jmp
ret
icebp
cmp
or
add
lahf
fsubrs
sub
movsb
pop
sbb
dec
pop
mov
movsl
xchg
shrl
out
jbe
pop
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
dec
fisubrs
test
ret
aas
add
jg
push
add
xchg
lcall
ret
movsl
jmp
add
into
inc
pop
stos
andb
xor
xor
sahf
mov
popa
popa
ss
pop
es
add
push
jl
push
jmp
lods
mov
mov
cli
out
mov
xchg
mov
in
daa
adc
sar
cmc
ficoml
mov
dec
adc
popa
clc
or
mov
div
adc
cmp
popa
nop
mov
mov
mov
dec
std
xchg
mov
popf
sbb
movsl
inc
sub
daa
mov
stos
popf
bound
gs
sar
repnz
imul
push
adc
scas
repnz
fwait
lea
push
mov
sahf
andb
inc
addr16
push
mov
aam
pushf
or
xchg
fnsave
icebp
push
jnp
add
fisttps
jmp
sbb
mov
xor
incl
sbb
iret
int
mov
fwait
mov
fnsave
lds
sbb
outsl
mov
sub
xchg
notl
test
pop
cld
dec
into
or
add
mov
or
inc
inc
ljmp
mov
test
pop
jmp
outsl
xorb
ljmp
mov
xchg
sub
or
imul
xor
sbb
jecxz
sbb
jge
and
adc
out
push
fsubr
loop
mov
cmc
cli
popa
cmp
in
pushf
in
xor
in
pop
lds
xchg
nop
inc
ltr
and
les
inc
push
sub
mov
xor
lahf
pop
notl
leave
out
xchg
int
faddp
sbb
bound
pop
lret
push
lods
mul
sar
cmc
or
push
lods
jmp
push
mov
aad
jp
sub
adc
push
je
pop
fnstenv
int
and
or
fiadds
cmp
adc
or
inc
aas
jae
sbb
sahf
xchg
dec
cmp
sub
sub
out
sbbl
fiaddl
pop
xchg
dec
mov
jecxz
mov
add
stos
push
mov
xor
lret
nop
dec
nop
fcomps
mov
cmp
test
xchg
push
dec
fisubrs
nop
cltd
sub
sub
clc
cmp
adc
icebp
outsb
out
lcall
leave
fnstsw
or
sbb
adc
cmp
add
cmp
pop
add
pop
jg
aaa
sub
pop
icebp
scas
lods
sbb
mov
movsb
cmpb
fstp
ds
out
add
inc
sbb
mov
mov
lods
mov
in
inc
mov
xor
lea
mov
xchg
cld
push
sub
ret
and
std
pop
jae
sub
jne
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
int
ficomps
movsb
mov
jbe
inc
lcall
adc
sbb
mov
cwtl
nop
dec
out
aas
sbbl
cld
popa
or
mov
ds
sbb
call
pop
rorb
je
jmp
test
outsb
dec
test
mov
int3
xchg
jns
cmc
stos
cs
sub
jecxz
dec
out
bound
out
cmp
mov
lock
mov
mov
mov
dec
test
ret
push
stos
rcrl
xchg
sbb
pop
js
jle
loopne
mov
mov
nop
xchg
or
push
pop
fprem1
loop
xor
scas
mov
ret
adc
ja
mov
jecxz
stc
xor
loopne
sbb
push
jge
push
notl
jecxz
into
outsb
mov
push
bound
lahf
pop
xchg
mulb
cmpsl
sub
jecxz
jge
pop
test
cmp
mov
push
jae
xor
out
lea
dec
std
ss
and
or
gs
sbb
pop
stc
jnp
adc
mov
call
sbbl
testl
pop
push
and
cltd
call
mov
jmp
mov
xlat
movl
jl
ffreep
push
data16
enter
push
cld
inc
gs
dec
scas
or
cltd
addb
pop
loopne
gs
int3
mov
test
mov
jbe
arpl
cmpb
add
inc
mov
lds
adc
test
pop
jae
and
ja
push
jl
xchg
dec
xor
inc
cmp
stos
loopne
mov
mov
fidivrs
ljmp
dec
pop
mov
sbb
imul
add
in
cmp
pop
dec
push
mov
mov
sbb
mov
inc
mov
xchg
or
addr16
cmp
sbb
idivl
jg
jno
sub
cmp
enter
enter
mov
popa
push
cmp
out
ror
rol
pop
mov
adc
inc
dec
mov
pop
mov
inc
or
mov
clc
pop
pusha
and
sub
xchg
dec
sub
sub
hlt
jo
dec
aam
or
mov
cli
not
push
and
mov
out
or
loopne
ret
xor
jl
rcrb
es
mov
lods
lcall
jmp
das
push
xor
sbb
ds
pusha
xchg
lret
jns
and
mov
inc
fsubr
bound
scas
icebp
or
jne
ljmp
enter
sub
mov
mov
push
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
int3
push
stos
xor
sbb
adc
sbb
or
daa
push
jmp
cmc
sub
add
stc
divb
xor
mov
sbb
ds
jae
lods
jbe
xchg
dec
fnsave
push
scas
sbb
cmp
aad
push
jle
ret
mov
pop
jecxz
mov
or
xor
push
scas
hlt
lahf
sbb
popa
adc
add
imul
jnp
mov
mov
cmp
aas
cmpsl
icebp
push
pop
in
in
in
in
add
enter
dec
push
mov
inc
mov
jg
mov
rcll
xchg
pushf
or
pop
fcompl
pop
in
in
lods
popl
jbe
cmp
ret
mov
ja
fsts
aaa
xor
xchg
std
xchg
inc
jb
mov
push
or
insl
fs
imul
adc
xor
sub
xchg
sub
ficoml
xchg
lret
out
in
mov
push
mov
addr16
mov
inc
pop
aad
clc
fbstp
and
cmp
out
sbb
ds
jb
or
sub
dec
mov
notb
push
dec
xchg
test
vmwrite
loope
outsl
cli
adc
push
fmulp
dec
mov
push
sbbb
pop
outsb
aad
add
adc
pop
fcompl
jecxz
adc
add
dec
stc
inc
mov
lret
mov
cmp
add
adc
out
mov
adc
daa
push
xchg
xchg
or
dec
inc
movsb
sub
fistpll
jne
mov
cmpsl
movsl
sub
adc
inc
dec
xor
jo
mov
add
jb
das
pop
xor
cmp
push
or
fsubrl
jge
fucom
and
jecxz
fisubrs
fiaddl
xchg
je
or
jns
inc
fcomp
and
jmp
pop
test
mov
pop
movsl
lcall
int3
push
cld
inc
mov
mov
mov
pusha
cmp
sbb
xlat
mov
mov
or
shll
pushf
adc
sbb
xchg
aaa
xchg
lock
imul
cmpsb
jbe
lea
sbb
rolb
hlt
add
cmp
test
aaa
push
mov
push
cmc
int
or
in
cmpsl
ja
mov
adc
mov
jbe
mov
test
mov
das
imul
iret
scas
cli
outsb
sbb
or
movsb
dec
inc
or
es
cld
cmp
cwtl
dec
es
add
aas
add
cltd
mov
mov
push
add
inc
cmpsl
stc
in
push
fbld
push
jno
lahf
jl
out
aas
and
pop
sub
jo
ds
jle
mov
pop
pop
fisttps
in
inc
pop
add
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
sub
fnstsw
inc
sbb
add
sbb
jg
sbb
mov
push
dec
xor
add
inc
and
lcall
repnz
cmp
adcb
sub
or
lock
lods
jb
xchg
lds
mov
add
jbe
xor
frstor
mov
aaa
cmp
fdivs
pop
adc
mov
loop
clc
ss
dec
inc
dec
pop
rcll
test
xchg
xchg
mov
rcrb
jg
leave
rol
jnp
mov
cmpl
std
or
lods
pop
and
ljmp
ljmp
mov
jno
jae
mov
lret
out
push
push
adc
cmp
leave
and
push
stos
cmp
addr16
in
jp
lods
fdivs
sbb
mov
pop
loope
and
pop
pop
test
int3
push
pop
xchg
in
cld
lret
les
add
es
fucomp
notl
fs
push
push
xchg
popa
jae
mov
inc
dec
dec
popa
mov
cld
repnz
data16
push
mov
call
sub
cmp
popf
lods
adc
mov
in
cmp
pop
pmaddwd
jl
icebp
fwait
cli
inc
push
out
sub
ja
pop
xchg
jl
sbb
loope
push
cmpsb
in
jg
adc
sbb
sets
push
adcl
cmpsl
pop
lret
sub
data16
mov
inc
clc
nop
ds
insl
icebp
pop
xor
insb
push
fnstsw
fnstcw
test
data16
push
ret
data16
icebp
or
or
dec
or
mov
cwtl
mov
xchg
data16
das
sbb
mov
xchg
jbe
xor
xchg
decb
popf
xchg
loop
pop
loope
aam
into
dec
loope
mov
test
fcomip
sub
cmc
jns
nop
adc
sub
add
mov
xchg
jb
mov
mov
mov
int3
cmp
test
call
pop
push
arpl
out
scas
inc
xor
sub
or
mov
aaa
add
adc
cltd
dec
cmp
push
in
mov
jge
xchg
lods
or
mov
jbe
and
fisubrs
and
les
loop
xor
fcmovnu
in
gs
nop
xchg
pusha
sbb
sbb
and
stos
sub
pop
push
aas
sub
inc
or
and
mov
inc
pop
mov
cmp
hlt
sub
dec
and
es
test
lret
xchg
pop
test
mov
jg
dec
mov
in
repz
inc
jnp
jno
dec
and
push
jno
and
gs
or
xlat
les
mov
add
cwtl
lcall
xchg
push
call
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
push
leave
mov
add
sbb
iret
fwait
xchg
loopne
push
test
ljmp
dec
rdmsr
inc
imul
dec
add
into
inc
dec
loope
push
cmp
testb
and
call
push
xchg
stos
roll
xlat
mov
pop
aaa
insb
leave
push
cmp
sti
gs
xor
mov
jo
sbb
pop
shlb
loope
sarb
movsl
jg
aaa
push
mov
mov
ss
mov
add
lret
mov
adc
cmpsl
not
add
popa
es
xchg
push
call
add
daa
fldl
and
xchg
dec
push
test
mov
cmp
jno
mov
inc
aad
test
dec
rolb
push
and
aas
add
xchg
mov
mov
hlt
lods
xlat
fsubrp
push
pop
inc
mov
je
push
pushf
dec
sbb
inc
cmp
cld
pop
and
and
aam
out
int
mov
and
loopne
lcall
aam
jns
arpl
inc
pop
mov
sub
mov
std
and
xchg
es
or
aas
or
lcall
mov
cmp
push
and
lea
roll
fldcw
psllw
xor
pop
push
dec
inc
mov
pop
int
fwait
shll
pop
sbb
cs
adc
pop
xor
mov
sub
pop
subb
add
add
je
fidivs
ds
mov
or
xor
pop
and
shrl
dec
loope
xor
lds
les
xor
push
inc
and
sub
stos
or
dec
add
ljmp
mov
test
and
xchg
sub
mov
aaa
xlat
adc
jnp
xorps
mov
dec
fnstcw
fucomip
out
push
in
jmp
mov
out
pop
pusha
lcall
or
push
loope
cmp
popf
pop
lods
mov
pop
pop
ds
sahf
ficoms
scas
jo
std
sbb
sti
test
cld
fcoms
mov
mov
arpl
sub
bound
cli
insl
out
enter
movsl
ljmp
pop
xor
mov
cli
aas
jmp
fbstp
les
aad
xor
das
mov
jecxz
ret
sbb
sahf
push
enter
mov
popa
mov
jp
lods
mov
imull
stos
jns
mov
das
std
push
inc
cmp
push
adc
adc
xchg
jbe
mov
cmpl
pop
in
inc
cmp
leave
clc
jae
adc
and
inc
testl
subb
out
cmc
stos
cmp
pop
push
mov
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
jg
jl
aaa
sbb
add
sbb
cmpsb
enter
sub
test
sbb
mov
outsl
adcb
je
sub
xchg
repnz
test
sbb
cld
insl
cltd
pop
std
jg
xchg
xchg
sbb
enter
push
loop
dec
push
aas
push
adc
movsb
push
and
pop
cwtl
adc
adc
jecxz
fildl
insb
and
lea
xchg
dec
cmpsb
sbb
stc
add
dec
xor
jmp
cmc
insl
sub
daa
sbb
adc
push
cmp
cli
cwtl
mov
mov
dec
rol
mov
scas
popf
test
pop
aam
and
pop
repnz
outsl
sti
in
ja
fadd
pop
or
fsubs
xlat
call
lahf
lret
or
pop
mov
sar
pop
add
ret
out
sbb
xchg
shrb
mov
shl
push
data16
fsts
xchg
loope
dec
xlat
push
sbb
jmp
cmpsl
cli
popa
inc
adc
push
sahf
sti
lahf
test
idiv
mov
cli
out
jl
pop
shlb
movsb
ss
rol
fistps
fwait
into
fstpl
cmp
aas
daa
jno
or
in
call
popa
and
xchg
movsb
sub
incl
cwtl
lahf
mulb
sub
adc
aas
sbb
push
add
fcomps
adc
jg
addr16
fsubrp
xchg
notb
mov
outsl
fdiv
fbstp
inc
jae
in
insl
sbb
pushf
jg
push
out
xor
outsl
inc
mov
repz
incl
adc
pusha
adc
mov
push
sbb
jmp
jnp
mov
mov
lods
daa
cmp
les
mov
data16
cli
rorl
insb
cmpsb
xor
xor
je
js
add
sbb
jecxz
pop
mov
xchg
sbb
adc
aaa
jae
add
xor
sbb
rorb
xor
or
pop
mov
bound
add
lret
in
inc
and
dec
dec
or
andb
stos
lods
addl
push
in
shl
add
scas
or
or
jns
lea
mov
mov
jl
data16
shrb
jecxz
add
fwait
adc
pop
cs
jmp
pushf
aad
push
jae
iret
pop
mov
iret
add
aam
or
sbb
insb
fiadds
lods
mov
rcll
cmc
cmp
mov
test
mov
mov
test
pushf
xchg
cld
dec
jns
jns
xchg
pop
lahf
sub
lcall
push
and
int
movsb
cmp
add
lock
pop
add
mov
sub
popa
mov
ljmp
js
je
cmc
and
push
cltd
ja
add
add
mov
pop
mov
inc
bound
add
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
and
add
sbb
sub
dec
daa
dec
out
mov
cmp
sahf
rcll
sbb
imul
out
je
mull
xor
cli
sub
mov
dec
aam
xchg
andl
in
push
push
je
jmp
pop
loope
ja
dec
sbb
das
pop
inc
jo
jo
adc
inc
dec
lret
stos
push
loopne
stos
pusha
mov
pop
test
inc
fdivs
stos
out
aas
rclb
pop
imul
test
pop
or
cld
and
add
pop
jo
add
ret
adc
pop
sub
inc
push
pop
cld
and
fiaddl
dec
jne
das
push
or
mov
and
test
movsl
mov
or
dec
xchg
adc
jnp
fsubrs
fwait
mov
xchg
cmp
xor
lods
cwtl
ds
push
repnz
adc
movsb
jns
shr
nop
push
fnsave
mov
adc
int3
jg
inc
fcomps
lcall
mov
mov
inc
xchg
and
gs
xchg
mov
sahf
push
add
or
pop
outsl
fwait
stc
mov
test
mov
out
incl
dec
push
mov
and
cmp
pop
lea
fs
push
call
pusha
fstpt
mov
cwtl
stos
fisubrs
frstor
or
push
mov
jmp
sub
sbb
adc
fidivrl
sahf
sub
push
sub
xchg
cmp
cmpsb
sub
icebp
insb
fs
mov
sub
dec
sub
enter
mov
popf
mov
mov
lods
dec
jle
into
jg
lea
lds
les
dec
into
pop
pop
aas
lods
add
push
insl
sub
xor
cmp
jecxz
aad
xchg
stos
mov
mov
xchg
push
pop
mov
push
fnstsw
or
in
jno
shll
rcll
shl
adc
push
inc
cmc
jns
ret
pushf
or
sub
cs
popa
mov
leave
xlat
into
adc
xrelease
sbb
sub
and
push
add
std
sti
xchg
movsb
xor
aam
stos
jnp
gs
mov
mov
es
jg
int
cmp
cmp
in
in
loope
cmp
dec
icebp
and
loopne
jg
std
insl
das
sbb
sub
sti
xor
mov
mov
inc
push
push
add
aam
or
jo
jae
or
push
xor
addb
and
pushf
push
mov
and
jmp
dec
add
out
pop
cmpb
push
test
cmpsl
dec
push
mov
dec
inc
in
pop
mov
sub
mov
mov
mov
sub
jb
jb
mov
lcall
mov
jmp
bnd
xor
je
fsubrl
mov
pop
adc
push
dec
push
jmp
add
push
sbb
ja
jo
sub
sbb
adc
sbb
pop
pop
testb
pmaxsw
jmp
loope
jg
inc
lret
and
push
xchg
lahf
sbbb
xor
leave
aam
fsubr
in
ja
xchg
sbb
pop
addb
adc
out
mov
add
jecxz,pt
pop
enter
mov
xchg
call
ja
ds
mov
adcl
mov
cmp
das
lcall
shlb
jo,pn
fwait
data16
adc
imul
rorb
stos
hlt
cmpsl
cmp
les
popa
shrl
pop
aas
outsl
jmp
int
enter
mulb
or
xor
mov
cmp
cwtl
sbb
sbb
xor
mov
subl
ret
inc
dec
sub
lcall
sub
cltd
inc
push
jb
stc
cwtl
lea
pop
xor
pop
adc
dec
ret
in
pop
js
mov
les
mov
fcmovnb
sbb
adc
cmp
push
push
scas
xchg
popa
fsts
push
add
pop
jl
or
xlat
or
dec
or
sahf
insl
stc
xchg
push
inc
ss
test
pop
xor
fdivl
movsl
lods
or
adc
fisttps
mov
fnstenv
mov
clc
ret
lcall
std
insb
cmp
sbb
jg
or
push
jae
jle
xor
into
nop
dec
xchg
lret
fst
sbb
and
push
or
ja
inc
push
xor
test
xchg
mull
jnp
mov
push
sbb
adc
leave
sub
xor
dec
sbb
adc
xchg
inc
jb
xchg
in
adc
aas
ret
aaa
and
iret
xchg
mov
push
xor
fcompl
adc
mov
cmp
jle
jno
imul
cmc
add
adc
jmp
loopne
jg
sub
or
outsl
fucomp
out
xchg
push
add
pop
scas
jbe
sbb
dec
push
fidivrs
cmpb
mov
fmull
aas
aam
dec
push
ljmp
pop
cmp
fldcw
xchg
xchg
fildl
mov
mov
lret
or
subb
jmp
xchg
cs
insb
sar
jecxz
and
mov
je
mov
jae
clc
out
inc
mov
scas
fcmovnbe
ret
js
add
mov
shrb
mov
mov
mull
cs
and
gs
addr16
add
and
loopne
imul
scas
mov
mov
mov
add
mov
fs
not
pusha
mov
aaa
les
out
fiaddl
sbb
push
pushf
ficompl
mov
lods
ficoml
sub
in
mov
adc
lods
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
lods
cmpsl
mov
add
sbb
orl
mov
push
mov
adc
out
in
xchg
pop
aas
or
or
jne
add
xchg
mov
fcoms
add
mov
orb
or
lahf
ljmp
lahf
xchg
aas
mov
or
or
rclb
js
mov
sub
jg
mov
mov
rol
clc
repnz
test
lea
outsl
push
or
iret
fnsave
scas
fsub
rolb
shl
dec
jno
cltd
mov
sub
rcr
aad
enter
dec
addl
loopne
call
cmp
lea
popf
fsqrt
stc
int3
mov
xchg
fsubrp
push
dec
fnstenv
int3
js
insb
loope
xor
mov
in
out
fdivrs
aaa
xchg
mov
inc
jmp
cs
popa
dec
movsb
mov
jo
sub
movl
add
je
in
mov
jl
and
mov
adc
ja
dec
ret
cmp
mov
mov
cmpsb
daa
dec
sub
xor
testb
frstor
sub
pop
insb
call
addl
mov
ljmp
sbb
addr16
push
mov
sub
test
cli
shl
xchg
out
and
lea
adc
sub
xor
imul
inc
inc
dec
pop
pop
mov
data16
dec
mov
mov
jecxz
adc
flds
push
pop
movl
in
fistl
lods
push
xor
sub
sbb
insl
or
jne
jge
xor
dec
sbb
mov
fwait
jae
jl
xchg
fiaddl
or
cmpsb
test
jne
in
jle
xorl
and
inc
cmpsb
inc
fisubl
mov
ret
or
insl
lcall
jnp
popa
arpl
dec
adc
or
pop
push
stos
subb
dec
xchg
push
out
add
stc
repnz
push
inc
lahf
mov
int3
aam
sti
repz
ja
xlat
push
cmp
pop
mov
pop
sti
add
push
pop
daa
jns
mov
pop
sarl
xor
ss
and
outsb
fsubs
adc
imul
iret
es
lret
jnp
pop
mov
loop
add
xor
xchg
or
imul
sub
xchg
lods
fildll
in
cltd
mov
sti
mov
gs
cmp
das
jno
int
loop
xor
jb
dec
lret
mov
imul
adc
sbb
adcl
inc
mov
xor
sub
cmp
imul
add
in
pushf
mov
jecxz
mov
and
add
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
dec
repnz
pop
sbb
add
sbb
mov
subl
loop
add
push
push
jl
pop
xchg
sbb
push
sahf
in
add
jge
jb
andb
xor
jge
psubsb
adc
jne
sub
stos
test
jno
cwtl
in
jge
shll
xor
push
dec
jno
jge
int
lcall
hlt
adc
sti
call
sub
repnz
clc
outsl
pop
or
lcall
dec
sub
js
push
inc
rorb
test
addl
div
adc
sub
mov
lods
mov
jmp
push
jecxz
mov
test
pop
shlb
cmpl
adc
lea
into
loop
cmp
dec
subl
test
mov
xchg
cmp
jo
cmp
sub
add
pop
pop
xchg
je
cmp
lret
cmp
orb
loop
mov
stc
sahf
mov
push
fstpl
ror
outsl
sub
leave
push
inc
xor
dec
imul
frstor
add
lret
dec
or
jmp
push
sbb
xchg
std
stos
fwait
push
lock
out
pop
push
fildl
xor
cli
mov
bound
add
lock
fs
inc
and
jnp
cld
mov
scas
dec
sbb
ds
sbb
lock
mulb
decb
out
in
out
mov
xchg
rcll
jecxz
cld
aam
lcall
lret
pop
stos
inc
movsl
mov
mov
mov
or
lcall
inc
aaa
cmp
jecxz
and
outsb
jnp
sbb
xchg
mov
dec
hlt
in
dec
mov
jns
fstl
sub
xchg
xchg
out
lds
arpl
lock
mov
pop
rolb
cs
xchg
bnd
pop
inc
cmp
sti
je
in
incl
out
aaa
push
cmp
fs
jle
sbb
inc
les
mov
cmp
loope
mov
jae
push
std
out
cmpsl
mov
lods
int3
aaa
sbb
push
sbb
xor
push
aaa
ds
adc
int
adc
xchg
popf
sub
in
test
ja
push
push
imul
and
shr
in
nop
lock
pop
inc
lret
into
les
call
jge
xchg
ds
mov
hlt
cwtl
inc
leave
push
xchg
idivb
jae
popf
push
jo
xor
pop
xchg
adc
loopne
push
pop
cmp
std
movsl
ss
mov
adc
in
mov
les
sub
test
mov
jmp
ja
inc
int3
in
dec
cmp
pop
sbb
fs
pusha
add
inc
sub
xchg
scas
aad
enter
call
sbb
in
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
sbb
sbb
adc
sbb
insl
adc
xor
lahf
and
bnd
xchg
push
ret
cs
loopne
imul
jge
push
ds
cmp
outsb
test
jle
es
or
out
dec
int
sub
je
inc
je
mov
fcompl
into
in
dec
jg
or
dec
xchg
mov
adc
mov
popf
dec
ffree
jb
pop
loopne
jno
mov
outsl
mov
inc
and
mov
test
push
push
jp
dec
jo
cmc
mov
sub
and
pop
outsl
adc
fwait
push
in
mov
popf
int
addr16
imul
xchg
add
ja
push
mov
ds
jp
test
sub
in
adc
insb
iret
xor
in
xchg
fs
insb
inc
xor
ret
dec
clc
inc
notb
jnp
lcall
test
cs
pop
jno
shlb
pop
test
stc
in
add
push
loope
pop
cmp
inc
mov
push
xchg
addb
lds
mov
cmp
push
into
push
mov
jp
mov
repz
les
xchg
dec
scas
or
xchg
pop
mov
out
fwait
mov
jno
cmp
lds
stos
pop
cltd
and
pusha
or
loope
outsl
mov
mov
in
xor
jne
mov
and
mov
mov
mov
cld
iret
lahf
dec
cmpsb
js
xor
rcrl
in
int
jge
loopne
je
pop
sub
rcrb
sbb
faddp
jmp
movsb
mov
into
daa
test
std
and
pop
test
push
negl
jmp
add
add
ret
pcmpeqd
push
test
test
inc
jp
andb
loope
testb
test
mov
xchg
jg
mov
leave
icebp
adc
mov
cld
push
dec
popf
mov
jmp
push
mov
or
insl
cld
mov
push
jne
adc
dec
scas
push
push
mov
outsb
add
xchg
sarl
imul
cmp
cmp
aaa
leave
mov
inc
pop
cwtl
dec
stc
push
adc
fistl
push
mov
ret
adc
push
lds
out
dec
in
dec
xchg
cmc
jle
and
sbb
xchg
add
insl
sbb
add
mov
aaa
daa
dec
push
xor
sub
test
adc
push
mov
movsb
dec
xor
adc
add
in
sbb
push
mov
cwtl
adcb
inc
mov
daa
mov
repnz
mulps
shrb
dec
cmc
ljmp
push
pop
inc
cld
sub
xchg
fwait
adc
or
into
adc
and
inc
adc
push
jge
push
and
mov
inc
loop
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
cmp
or
pop
adc
sbb
adc
sbb
xchg
cmpsl
fwait
dec
or
repnz
inc
leave
adc
inc
int3
xor
mov
xchg
inc
or
and
fsubrl
stc
aam
jg
stc
pusha
mov
add
adc
push
cmp
or
adc
out
push
lret
sbb
stos
adc
mov
and
mov
and
inc
movsl
cmpl
push
add
in
sbb
cmp
inc
fst
push
test
out
mov
inc
sbb
test
or
fidivl
ds
push
test
lahf
je
fcomps
mov
mov
loopne
cmp
mov
data16
inc
push
mov
aam
hlt
lret
xor
and
lods
xchg
in
add
fisubrl
cltd
dec
movsb
out
lods
or
into
fldcw
dec
add
dec
repnz
pop
sahf
fistpl
push
mov
add
xlat
std
hlt
cltd
int3
pop
sahf
dec
insb
mov
inc
mov
pop
push
rorl
pop
inc
inc
jo
repnz
mov
push
pop
out
inc
sub
icebp
into
mov
lock
stos
dec
out
iret
mov
mov
mov
out
outsl
aaa
insl
cmpl
mov
add
jl
cmpsb
pop
mov
cwtl
mov
cmp
sbb
push
lods
fistpll
or
hlt
icebp
mov
jae
in
pop
sub
out
mov
in
lods
jecxz
and
outsl
stc
bnd
push
push
lret
xchg
fwait
cwtl
repnz
pop
jg
xchg
dec
std
shll
imul
jno
sub
and
inc
jp
push
xor
add
cltd
xchg
mov
pop
inc
iret
or
jb
push
push
push
shrb
gs
adc
rorb
push
iret
repnz
imul
addr16
lea
or
lods
push
push
ljmp
inc
and
shlb
add
xor
mov
sarb
lods
sbb
inc
les
jo
mov
cmpl
mov
add
fcoms
repz
jg
adc
outsb
loopne
pop
jp
cmc
mov
fdivrl
xor
push
les
and
pop
js
adc
jp
imul
xchg
push
imul
scas
orl
ljmp
or
push
mov
inc
js
push
inc
icebp
arpl
bound
ret
push
sar
adc
add
mov
cmp
aaa
pop
xchg
inc
sbbl
lock
xor
adc
mov
addr16
in
lret
and
movsb
js
and
mov
pop
call
call
mov
fs
js
adc
cmp
sbb
lods
aad
repz
repz
into
dec
sbb
xchg
int
inc
faddl
sbb
lock
data16
mov
cli
addr16
dec
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
xor
push
or
sbb
xlat
jnp
sub
fcoms
push
in
cmp
daa
loope
fildll
or
sub
mov
and
pop
push
clc
cmp
adc
push
or
xchg
pop
fwait
push
pop
xor
lock
cld
xchg
or
xchg
inc
stos
enter
icebp
adcl
dec
aas
lods
sbb
pusha
or
xchg
mov
in
cs
jnp
sub
mov
sub
add
add
or
and
in
repz
in
mov
or
mov
xchg
movsl
in
lods
and
sub
adc
adc
pop
or
out
imul
mov
das
mov
cwtl
jne
repnz
xor
shll
lea
pop
lds
jle
inc
jp
lods
cltd
pop
pop
mov
and
mov
inc
arpl
add
inc
cwtl
sbb
sbbb
pop
push
mov
adc
dec
lds
push
mov
ss
mov
xchg
push
iret
pop
insl
mov
in
cmp
and
fwait
add
or
mov
aas
lods
lods
je
adc
sbb
imul
inc
fs
fstpt
pop
mov
insb
mov
mov
movsl
lds
pop
sub
sub
xchg
xchg
dec
push
adc
les
dec
cmp
or
js
cmpsl
xchg
mov
lret
or
mov
adc
cltd
inc
xchg
pop
or
xchg
faddl
mov
cmp
or
and
inc
sub
fs
call
jg
cmp
xchg
shl
inc
push
loopne
or
xor
jnp
repnz
push
xchg
out
mov
stos
mov
in
sar
mov
xor
push
dec
cmc
std
sbb
fs
ja
test
aaa
xchg
repnz
cs
inc
testb
xchg
rcll
jae
pop
mov
or
xchg
jecxz
sarl
sub
out
sub
jo
jecxz
and
mov
cld
cmpsl
test
data16
pop
cwtl
movsb
mov
in
and
idivl
sub
jo
mov
lds
inc
jmp
xchg
or
lods
or
addr16
or
or
das
push
mov
hlt
clc
inc
data16
jb
divl
dec
stos
in
arpl
or
xchg
xor
mov
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
adc
rolb
sbb
test
sbb
and
mov
push
into
and
push
insb
jb
mov
push
sub
cmp
cwtl
out
adc
and
and
xchg
xor
cmp
jmp
push
scas
dec
cmp
jns
pop
xchg
dec
sub
inc
test
test
lcall
mov
testb
repnz
and
jo
sbb
call
aad
js
hlt
xor
sub
pop
xchg
mov
pop
loop
mov
xchg
aaa
sub
push
add
sub
call
add
dec
stc
popa
subl
mov
push
push
mov
mov
push
bnd
pop
cmp
sbb
cmp
and
notl
dec
or
xchg
stc
xchg
hlt
sbb
inc
mov
jnp
or
in
ja
outsl
pop
add
or
xchg
loope
in
fldcw
shll
xchg
loope
sub
and
popf
lea
cs
adc
jmp
cmpsl
and
sbb
mov
and
sub
jns
cld
push
push
or
stos
mov
mov
mov
out
test
dec
in
ja
testl
dec
icebp
mov
gs
push
bound
sbb
imul
mov
pop
inc
mov
dec
sbb
insl
rolb
pop
jecxz
mov
inc
push
lret
cltd
les
xchg
adcb
jno
clc
sbb
mov
mov
mov
lret
cmp
xor
mov
sbbl
jmp
sti
push
dec
add
outsl
cmp
push
lds
fsubrl
and
sbb
loopne
cmc
push
push
ret
cmpsb
mov
gs
xchg
dec
adc
jbe
lret
dec
aad
inc
mov
outsl
push
arpl
repnz
aaa
shlb
push
xlat
cmp
sarb
or
xchg
loop
and
xchg
and
dec
and
mov
push
xor
push
xor
push
and
push
cwtl
and
call
mov
out
jp
shll
insl
dec
pop
cmp
lods
pop
lods
push
mov
pop
sbbl
mov
sub
fcoms
sub
mov
cwtl
adc
dec
jnp
xorb
add
jno
mov
sbb
mov
add
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
mov
sbb
test
sbb
leave
and
push
add
nop
add
test
cwtl
mov
mov
test
cmp
lahf
jmp
cmpsl
mov
pop
xchg
cmp
push
test
cltd
pop
fisubs
mov
stos
pop
aam
cli
inc
imul
jns
dec
sub
bound
mov
bound
sbb
push
xchg
push
xchg
cmp
in
mov
pop
bound
insb
mov
hlt
call
ficoml
into
jae
fsubrs
mov
ret
aad
mov
test
out
loopne
fchs
inc
mov
mov
dec
sbb
jl
fmulp
int
add
std
in
mov
push
mov
push
repz
push
cmpb
inc
pop
or
aad
ret
adc
sbb
dec
bndldx
xchg
clc
push
movsl
pop
rolb
lods
in
xchg
dec
mov
jnp
repnz
popf
movsb
fwait
jno
lahf
cmc
lret
xor
sti
pop
out
data16
or
inc
cmpb
pop
mov
xchg
push
test
fistpl
pop
xchg
sub
xchg
jo
aaa
sub
mov
in
sbbl
sti
xchg
lods
pop
ja
adc
daa
test
popf
mov
mov
pop
aas
push
fisttpll
repnz
fstpl
enter
jmp
lods
mov
testl
pop
js
or
scas
fcmovu
movb
jle
mov
aad
xor
lret
xchg
fwait
test
movsl
push
in
mov
pop
ljmp
jo
pop
inc
rclb
negl
outsb
pop
mov
popa
and
cmpb
rol
subl
xchg
ret
fs
rcl
pushf
jo
xor
stc
enter
mov
orb
dec
push
outsl
inc
jb
in
sub
jl
jmp
and
inc
loope
add
stos
pusha
pandn
jge
fstpl
and
sbb
mov
add
dec
push
in
test
xor
movsl
fildl
jge
hlt
cmpl
push
sbb
int
inc
fbld
push
push
mov
pop
cwtl
xchg
dec
cwtl
push
aam
xor
jp
sub
push
jb
lret
sbb
fwait
jle
lret
daa
xor
push
outsb
sub
mov
addl
jnp
int
jle
cmpsb
add
inc
mov
sarb
dec
xchg
cltd
lret
jl
cmpsb
xor
xchg
jecxz
loope
mov
lahf
out
leavew
outsl
add
mov
xor
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
xor
lock
sbb
test
sbb
test
inc
fbstp
bound
and
adc
dec
dec
out
jg
sbb
mov
mov
jae
ljmpw
sbbl
inc
aas
sub
stos
sub
insb
out
ljmp
xchg
ss
push
mov
aad
jo
sub
int
and
cmp
add
clc
mov
enter
jo
cmp
and
and
negl
add
mov
mov
lods
jae
pop
push
cmp
adc
adc
push
cltd
add
hlt
or
or
mov
repnz
inc
push
fnstsw
or
int3
pop
push
push
lahf
out
pop
mov
cmc
or
lcall
and
stc
inc
and
ds
jp
mov
movsb
sahf
insb
jb
lahf
pusha
and
mov
arpl
dec
and
lret
cmpsb
xor
cmp
mov
je
push
sbb
mov
or
in
out
xchg
push
dec
leave
std
xchg
sti
xlat
cwtl
push
sub
mov
push
add
out
jno
push
lret
mov
mov
xchg
int3
insl
imul
pop
cmp
push
dec
sahf
xor
mov
pop
nop
iret
rol
jl
mov
insb
imul
sub
sbbl
out
sub
mov
pop
jmp
xor
push
fadds
xorb
xor
mov
mov
mov
mov
mov
insb
xchg
shld
jecxz
cmpsl
inc
mov
cld
jbe
adc
mov
adc
push
sbb
pop
sbb
jo
outsl
jns
push
movsl
les
sub
xchg
push
mov
and
aaa
or
rorb
loop
mov
sarb
addb
lock
jecxz
daa
shrb
xchg
gs
xlat
mov
shlb
push
jae
inc
inc
push
add
dec
mov
pop
sbb
test
jno
push
fimull
jns
movsl
pushl
sub
mov
data16
sbb
ja
leave
cmpsl
adc
clc
popf
shr
cmp
add
push
movsl
pop
and
cli
ret
cltd
add
mov
arpl
jno
push
jae
jg
sbb
cmpsb
inc
jbe
jle
dec
xor
jl
shll
cmpsb
push
aam
mov
dec
in
mov
fs
je
push
sahf
insb
or
movl
movl
movl
movl
jmp
push
mov
fistpl
sub
inc
push
negl
sbb
jbe
es
insb
nop
jecxz
je
sarb
xchg
and
jl
dec
xor
dec
xchg
scas
hlt
sbb
es
jle
xchg
clc
fcoms
out
mov
push
mov
mov
mov
in
scas
out
mov
out
mov
ljmp
inc
jle
stc
ret
stc
out
daa
insl
xchg
inc
js
adc
popf
fsubp
pop
push
int
sti
mov
jp
jno
fs
pop
jg
cmc
mov
mov
pop
add
outsb
mov
ds
rcl
into
fwait
and
outsb
ret
dec
or
inc
loop
or
mov
addr16
cld
mov
aas
xor
fimuls
add
push
das
push
aam
sbb
ret
lcall
xor
cmp
cmp
mov
fadd
jnp,pn
adcb
ss
dec
aas
inc
inc
faddl
cmp
mov
cmp
sarb
aaa
cmc
mov
dec
sbb
add
jecxz
movsb
xchg
repnz
sub
pop
ficompl
lret
sub
push
sbb
stos
loop
xchg
mov
jo
ret
int3
jb
std
push
mov
sahf
jbe
sti
push
in
xor
cli
xchg
adc
xchg
movsl
cmp
imul
mov
scas
daa
int3
xor
test
lahf
fmulp
aas
mov
out
pop
loope
fimull
xchg
mov
stos
jnp
jbe
add
imul
ret
cmp
insl
xchg
xchg
cs
sti
sub
rolb
test
jmp
sbb
sub
push
mov
mov
adc
pop
pusha
shlb
setb
pop
into
sub
stos
sti
cmc
jb
or
data16
ss
rorl
ljmp
inc
orb
in
xchg
adc
lods
call
dec
push
roll
insb
jle
push
mov
loope
dec
pop
inc
in
cmp
iret
adc
test
je
xchg
sbb
mov
fcmovb
inc
loop
push
mov
mov
mov
push
push
add
jmp
cltd
adcl
rcrl
sbb
data16
leave
or
sub
out
push
add
push
stos
sbb
and
or
andl
test
mov
fisttpl
xor
insb
jl
xor
mov
dec
sbb
mov
cmpb
or
inc
sbb
xchg
test
mov
clc
inc
pop
sbb
pop
mov
add
test
pop
shrb
rol
inc
call
movl
jmp
aas
mov
mov
dec
mov
inc
push
icebp
sbb
test
sbb
jle
mov
movsl
movsb
dec
xor
mov
xorl
jg
mov
and
pop
jl
xchg
in
jnp
push
xor
fadds
mov
cld
int3
add
sbb
sbb
xor
sbb
pop
push
mov
repnz
jmp
inc
add
push
cmpsl
mov
pusha
mov
mov
leave
inc
add
push
mov
fdivl
aam
adc
outsb
xor
jno
xchg
repz
aaa
sbb
loopne
pop
push
mov
bound
lock
pop
mov
inc
or
stos
mov
or
ss
push
outsb
sbb
xchg
ja
add
out
les
bnd
vmwrite
hlt
movsb
cmpsb
and
enter
ds
pop
popa
pop
xchg
adc
fldenv
jnp
fisttpll
and
mov
fldl
sbb
mov
sbb
clc
jge
jno
aad
int
mov
imul
int3
aas
nop
mov
inc
push
cmp
push
cmp
xchg
stc
jl
das
mov
adc
ds
or
add
xchg
jecxz
mov
clc
leave
pop
push
dec
sub
fidivrl
lcall
fmuls
mov
sbb
outsl
mov
fcompl
mov
arpl
mov
std
mov
scas
or
sarb
scas
jecxz
cmp
aam
leave
lods
in
in
mov
mov
stos
pop
jnp
push
testl
out
lods
xchg
xchg
icebp
nop
jne
int
out
ss
dec
rcrb
inc
mov
mov
cld
pop
jle
pop
les
lcall
das
inc
clc
fnstcw
cmp
imul
jae
push
hlt
mov
mov
sbb
cld
shl
and
xchg
rcl
lea
push
mov
fistl
dec
mov
ret
sar
pop
clc
int
test
test
and
jp
cli
lret
mov
push
mov
cmp
ja
push
mov
outsl
push
and
pop
sbb
or
js
mov
add
inc
js,pt
mov
add
sbb
icebp
sub
sbb
jl
out
pop
mov
jb
stos
pop
mov
jl
push
xchg
cmc
inc
lcall
jbe
xor
stos
mov
mov
lret
mov
inc
pop
or
in
xchg
insb
stc
cmp
cmpsl
jno
ljmp
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
xchg
jecxz
mov
adc
sbb
stc
inc
sub
push
mov
ret
mov
divb
int
jmp
add
dec
mul
push
lcall
fists
push
mov
pop
fwait
scas
inc
addr16
xchg
je
xchg
cmp
js
add
adc
jg
aam
add
mov
cmp
dec
mov
fdiv
mov
mov
insb
ficoml
mov
arpl
jg
add
mov
push
mov
mov
sahf
cwtl
or
inc
mov
jno
ljmp
bound
fsubs
xchg
adc
sub
inc
fdiv
and
pop
inc
pop
and
je
mov
shl
incb
xchg
add
jle
jae
insb
in
stos
cli
xchg
mov
mov
xchg
xor
lea
dec
or
pop
mov
sbb
loope
sar
rcrb
adc
mov
push
dec
jne
inc
mov
mov
cmpl
mov
sub
negb
sbb
shlb
cmp
and
mov
mov
out
mov
xchg
outsb
shll
xor
data16
sub
dec
push
and
test
dec
out
mov
popa
push
add
cld
shl
push
mov
popf
cwtl
outsl
cmpl
or
sbb
divb
mov
clc
dec
int
push
xor
movsb
xor
aas
pop
and
add
mov
sbb
xchg
mov
shrb
sub
orl
aas
mov
push
adc
xor
enter
jecxz
and
aam
jnp
xor
test
inc
adc
cld
mov
enter
inc
popa
xor
xchg
push
sbb
loope
push
ja
sbb
jno
imul
sub
int
ret
rorl
jmp
xorl
and
dec
pop
movsl
mov
mov
lods
sub
cltd
mov
and
xchg
jmp
out
testl
pop
movb
push
je
mov
adc
std
pop
gs
movsb
mov
in
test
mov
decb
lea
test
mov
pop
rcrb
shll
test
popf
pop
sbb
fdiv
mov
adc
rorl
xchg
addr16
xchg
jle
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
pushf
repnz
out
sbb
push
mov
or
int3
mov
sub
sti
cwtl
pop
mov
loop
cld
pop
and
lods
jnp
lds
stos
jo
or
fsubrl
loop
jo
aad
fsts
ljmp
inc
adc
stos
pop
cmpsb
sbb
nop
mov
in
pusha
mov
push
cmc
push
pop
lret
lret
xchg
movsl
in
xchg
fcomip
into
outsl
movsb
orl
dec
push
and
hlt
mov
pop
fdivs
insb
mov
dec
and
jmp
sub
sub
dec
addr16
lock
rol
out
xor
add
outsb
inc
push
imul
cs
dec
into
and
fldcw
stc
xchg
inc
xor
scas
ret
mov
push
out
and
pusha
add
jbe
mov
test
cmpsb
repnz
popa
xor
stos
and
jne
outsb
out
popf
jb
jae
shl
shrb
shl
mov
aad
add
int
cwtl
sbb
inc
dec
sahf
loope
inc
dec
cmp
out
mov
adc
rcrb
dec
pop
dec
aas
sub
cmp
jns
into
bound
test
in
imull
xor
outsl
addr16
mov
idivl
and
lret
dec
mov
push
ficompl
add
or
js
mov
mov
ljmp
mov
mov
loope
dec
in
std
xor
popf
dec
mov
aam
add
rolb
or
xlat
cwtl
or
imul
xor
mov
ror
pop
sahf
lret
jnp
xchg
xor
add
mov
jecxz
loop
sbb
movsl
sbb
imul
and
leave
pop
dec
sub
shr
not
or
sub
add
popf
mov
insb
add
mov
jne
dec
or
sub
jge
imul
xchg
idivl
mov
and
mov
sbb
testb
mov
adc
notb
cmp
inc
cld
es
sub
daa
mov
xor
arpl
insl
inc
faddl
and
lret
lods
sub
xlat
sub
inc
jno
test
jp
out
push
stos
stc
popf
mov
pop
nop
lods
jl
jmp
mov
push
inc
adc
pop
pushf
mov
es
mov
lcall
sbb
icebp
mov
pop
in
fstps
out
pusha
ja
pop
cmpb
icebp
loope
xor
ret
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
jo
loopne
sbb
rolb
mov
sbb
mov
xor
insl
cltd
pop
ss
in
enter
aaa
sarb
fldl
sbb
push
das
pop
int
and
pop
sbbl
inc
icebp
mov
fbstp
xchg
pop
dec
std
xchg
dec
pop
jne
fldl
push
dec
icebp
inc
leave
adc
add
adc
dec
rcl
inc
lock
mov
aas
cmpsl
es
jb
and
xorb
push
les
pusha
xchg
push
mov
adc
subl
xlat
xor
add
loope
mov
mov
fsubrl
sub
fildll
mov
sub
inc
stos
cmp
aam
out
xchg
jns
cmp
inc
cmpsl
leave
xor
sbb
sbb
stos
push
mov
push
test
mov
fs
scas
sbb
fwait
pop
mov
bnd
or
inc
int3
aad
lcall
stos
mov
adc
xchg
jp
xchg
int3
pushf
fidivrl
movsb
mov
das
sub
push
fisubrl
loope
xchg
or
lods
movsl
in
popa
pop
in
popa
clc
icebp
lods
mov
test
adc
outsl
loope
xchg
dec
scas
stc
add
fsubp
in
ret
and
pusha
movl
mov
push
cmpsl
xchg
jbe
pop
jno
adc
popf
lods
jae
xlat
in
jge
jae
xor
out
xchg
adc
xchg
mov
mov
cwtl
mov
adc
cli
xor
mov
pop
cltd
pop
push
inc
mov
lods
mov
push
icebp
enter
push
push
shlb
mov
xchg
and
es
adc
sti
movsl
fimull
jg
cmc
jbe
add
add
lods
je
popf
outsb
fidivl
xor
aaa
cmp
int
xchg
or
push
es
aam
adc
pusha
popa
pop
cmp
daa
push
out
mov
xchg
adc
mov
test
or
outsl
or
mov
xchg
adc
mov
ljmp
xchg
lcall
iret
mov
insl
std
not
adc
lahf
fnsave
fcmovne
mov
xchg
in
sbb
outsl
and
cmp
push
ret
adc
es
cmc
xchg
sbb
xor
in
add
inc
mov
mov
leave
cs
dec
mov
sti
adc
push
call
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
xchg
jo
ficompl
sbb
adc
sbb
test
xor
fs
jbe
inc
add
add
push
xor
inc
mov
cmp
pop
sti
dec
jle
mov
or
jne
mov
xchg
and
dec
and
jl
sbb
scas
cmpsb
push
xor
xchg
push
mov
adc
les
sbb
xorb
mov
rcr
push
popf
dec
mov
aaa
pusha
sub
test
sub
bound
sbb
rcr
jae
pop
inc
aas
jno
test
or
mov
pop
lods
cs
stos
sbb
insl
cmp
jmp
push
lret
mov
test
orb
inc
bsr
in
or
push
pop
or
mov
mov
ss
add
rcr
arpl
mov
decl
xor
adc
scas
mov
loopne
rclb
jb
dec
push
sub
mov
lret
sbb
dec
mov
push
mov
subl
xchg
mov
cs
dec
cmpsl
inc
fimull
repz
fidivl
roll
imulb
xlat
xchg
jbe
movhps
aas
cmp
out
xlat
mov
pop
mov
imulb
les
xchg
hlt
pop
mov
adc
jl
sub
rorl
test
pop
shlb
push
mov
fnstcw
xlat
fnstenv
or
or
and
nop
pushf
mov
scas
pop
jns
inc
jb
add
lods
mov
jecxz
rcll
add
add
inc
and
insb
jno
mov
daa
loope
int3
ficoml
frstor
faddl
pushf
push
faddp
aaa
popa
ljmpw
cmpsb
pop
mov
cwtl
data16
fisttps
adc
mov
jbe
inc
les
daa
sbb
jp
adc
hlt
inc
jle
leave
shll
dec
add
xchg
mov
into
cmp
cwtl
int
ss
popa
cltd
rclb
sub
sbb
pop
xchg
mov
repnz
orb
dec
mov
mov
mov
fiadds
jg
orl
push
in
stos
mov
mov
xor
sarb
cmp
movsb
icebp
jle
movsb
sbb
xor
cmp
cltd
mov
mov
pop
xchg
mov
rorl
sbb
int3
or
fwait
mov
in
and
pop
clc
xor
test
xorl
imul
adc
inc
shlb
inc
in
js
cli
testl
mov
xor
push
mov
xchg
scas
push
and
loope
sub
in
push
xchg
pmaxub
cwtl
fnsave
incb
or
fstl
push
jg
int3
mov
pop
xchg
or
xlat
push
inc
xor
fbstp
inc
popf
dec
repz
cmc
add
ss
push
jmp
addr16
pop
lret
sbb
into
rcll
inc
pop
outsl
xor
adc
dec
iret
jle
mov
mov
add
pop
and
aaa
int
imul
sbb
dec
mov
shlb
push
xchg
in
cmpsb
std
push
push
ret
dec
xor
inc
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
stc
test
sbb
adc
sbb
push
loope
mov
xchg
push
inc
and
or
mov
loop
xor
cmp
pop
enter
sub
ljmp
mov
mov
out
das
nop
jb
dec
inc
push
mov
inc
add
adc
es
push
mov
dec
and
out
in
scas
xchg
insl
and
pop
dec
rclb
inc
xchg
fwait
cwtl
xchg
sub
and
enter
dec
das
in
mov
cmp
js
mov
test
cld
shl
fisttpl
cmc
push
mov
inc
mov
push
loop
push
lahf
sbb
pop
bound
add
out
call
pop
jns
push
cmp
sbb
xor
movsb
mov
inc
loopne
sub
push
jo
test
mov
movsl
jb
pop
xor
xor
xchg
arpl
mov
push
ficoml
jg
inc
pop
unpcklps
sti
jb
sbb
je
push
pop
jns
aam
movsl
push
cld
rclb
enter
popa
jo
outsl
xor
jb
push
std
pop
stc
lods
push
pop
scas
inc
push
and
in
xor
xor
scas
mov
push
inc
shll
xchg
xchg
push
add
lcall
nop
jnp
pusha
cmp
cli
inc
enter
hlt
lods
popf
test
xor
test
das
fildl
rcrb
jb
pop
push
sbb
xlat
cmc
mov
xor
fcmovnb
sbbb
or
and
inc
pop
add
leave
daa
pushf
mov
es
adc
cmp
loopne
sub
and
outsb
loope
push
push
push
gs
ret
inc
aas
outsl
out
push
inc
adc
pop
dec
les
popa
add
mov
out
mov
xchg
add
xor
pop
and
outsb
jecxz
cmp
mov
pop
jg
add
mov
or
iret
fwait
mov
outsb
lds
les
mov
outsl
loope
leave
sahf
mov
repnz
cwtl
mov
pop
out
mov
xchg
dec
dec
das
xor
and
mov
das
test
shll
movsl
push
int
negl
lods
dec
mov
stos
mov
stos
fwait
and
xchg
adc
sub
xor
ret
mov
inc
sahf
xor
and
lods
mov
aad
lods
adc
or
lods
jbe
cmpsb
dec
inc
fidivrl
fisttps
out
pop
int
es
cltd
mov
cmp
ljmp
push
cmp
dec
ficomps
in
rcrl
or
fld
outsb
icebp
movsl
into
dec
loop
mov
push
jbe
pushf
loop
xor
adc
dec
jg
loopne
or
mov
fidivs
pop
sbb
inc
cmp
stos
mov
pushf
cmp
rcr
cmp
iret
lea
jne
fiaddl
push
shr
stc
jp
subl
sarl
adc
mov
cmp
scas
out
jno
or
mov
mov
js
out
adc
add
jae
jno
gs
mov
lret
popa
cmp
mov
roll
insb
call
mov
repnz
je
sub
adc
mov
mov
inc
movsb
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
cs
faddp
std
push
jge
mov
xor
mov
sar
hlt
insb
cwtl
or
jne
mov
dec
fwait
and
fimull
aas
mov
data16
cli
in
test
in
xor
sti
push
push
les
mov
sub
xorl
loope
inc
adc
aas
sub
fadds
push
clc
hlt
pop
mov
lods
ret
add
lret
andb
adc
imul
adc
ss
dec
loop
push
dec
mov
aad
sub
mov
repz
fs
loopne
pop
hlt
outsl
or
inc
xchg
mov
and
hlt
mov
je
gs
xor
test
out
dec
and
mov
ficoml
out
inc
mov
nop
xchg
add
mov
inc
into
jecxz
or
rcll
xor
xor
lcall
cld
pop
jg
dec
movsb
cmpsl
idivl
mov
sbb
fsubs
int
int3
inc
mov
outsb
fwait
jno
pusha
mov
shlb
int3
dec
add
or
adc
cmpsl
inc
mov
fnstsw
sbb
stos
mov
lahf
pop
jae
gs
sahf
adcl
adc
push
push
mov
or
daa
loope
or
js
dec
into
stos
jp
scas
fdivs
inc
js
cwtl
mov
mov
push
xchg
cmp
movsb
mov
call
in
xorb
movsb
xchg
psubusw
pop
cmp
inc
ret
arpl
sbb
mov
add
out
lcall
sbb
pop
rcll
mov
or
xor
push
and
push
pop
pop
mov
sub
xchg
and
pop
into
sub
mov
int3
adc
mov
and
jecxz
mov
pop
sarl
addr16
mov
push
subb
std
dec
push
or
add
insl
pop
sbb
push
push
push
std
mov
loope
out
add
xchg
jno
mov
inc
loopne
loop
stos
rolb
ret
or
mov
ss
ss
cli
lods
adc
push
jmp
mov
adc
inc
jge
rorb
mov
lret
cmp
sub
neg
jge
mov
out
sub
shlb
jmp
sbb
adc
xor
push
jmp
jl
jp
lea
nop
cmp
repnz
popf
and
mov
jle
fiadds
cmpsb
mov
fdivl
push
xchg
mov
loopne
dec
popf
add
out
cmpl
ds
pop
add
and
cmp
nop
jns
xor
push
lds
sub
jecxz
xor
aaa
jle
cmp
ror
sub
in
cmpsb
bound
add
pop
sbb
cmp
and
jge
add
dec
sub
pushl
sbb
add
inc
bound
divl
xor
xor
or
rorb
jmp
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
push
lahf
inc
push
sbb
xor
sbb
iret
inc
mov
ljmp
loop
cmp
mov
not
rcrl
adc
or
add
fwait
mov
lret
ret
sbb
mov
cmpsb
mov
jmp
stc
inc
arpl
pop
sbb
push
sbb
inc
xchg
mov
rcl
pop
dec
cmc
add
mov
push
fadd
pop
popf
push
jae
cmp
hlt
in
lock
int3
and
xchg
gs
sahf
dec
inc
adc
mov
scas
push
cmp
loopne
pop
jle
stos
jne
xchg
inc
out
out
sbb
fmull
sbb
jg
and
dec
dec
mov
fisubl
jmp
pop
pop
call
cmp
or
sub
ret
popf
pushf
pop
rcrl
jp
je
fdivr
sbb
hlt
sub
xor
push
cmp
rclb
inc
adc
mov
xor
sub
movsb
shlb
mov
cli
adc
cmp
loop
fwait
xchg
insl
mull
add
sub
repz
stos
in
and
push
and
in
cmpsl
adc
xchg
repnz
sbb
adc
inc
mov
pop
add
and
movsb
dec
add
leave
out
popa
or
pop
mov
sbb
fdivl
mov
sbb
icebp
sahf
pop
shll
insb
mov
push
lcall
and
lds
adc
add
inc
pop
call
in
stos
or
dec
or
loope
or
pop
loopne
sub
pop
xor
xor
shr
es
lret
dec
mov
inc
sbb
popa
jns
lock
pop
xor
sub
push
pop
dec
in
or
pushl
int
xchg
out
adc
incl
and
sti
sub
pop
pop
lock
ljmp
sbb
in
mov
xchg
leave
xchg
jmp
sub
pop
sbb
inc
ds
xchg
insl
adc
add
inc
add
lods
shrl
std
frstor
out
scas
xor
adc
pusha
push
enter
and
fidivl
nop
mov
adc
sbb
es
jmp
addl
or
xlat
inc
idivb
sub
sbb
test
jo
mov
dec
rol
je
arpl
ja
es
mov
pop
xchg
fiaddl
xchg
sbb
adc
loop
and
lahf
push
sbb
adc
shll
dec
fildl
nop
xchg
jmp
jmp
ljmp
ljmp
adc
xchg
ret
rorl
outsl
das
inc
sub
insl
test
fsub
mov
pop
and
mov
popa
lods
add
inc
sub
lock
xchg
in
and
imul
add
or
jo
sbb
sub
mov
adc
sbb
cmp
lret
mov
enter
inc
dec
js
fwait
sub
movsl
loopne
ljmp
jbe
pop
mov
cmc
lcall
xor
test
loopne
jne
mov
cmp
mov
cmc
or
pop
pop
push
int3
sbb
push
sbb
ficoml
cmp
adc
jno
sub
mov
nop
data16
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
aam
push
mov
sbb
outsb
in
fsubs
movsl
fisttpll
and
xchg
pusha
fcoms
mov
dec
outsl
mov
and
lcall
cmc
pop
outsb
in
xor
scas
mov
hlt
ljmp
push
jecxz
leave
inc
out
movsb
les
add
xchg
insb
icebp
sub
popf
dec
xor
imul
cmpsb
test
hlt
sbb
inc
pusha
mov
clc
addr16
adc
int3
cmp
enter
int
or
aaa
mov
scas
mov
pop
add
std
adc
fidivs
sub
push
xor
outsl
mov
movsb
jp
or
sub
movsl
push
mov
push
jne
dec
or
arpl
sub
and
fstpl
jb
cs
in
mov
push
test
fisttpll
sbb
test
lea
lea
incl
mov
push
dec
addr16
les
push
ret
xchg
outsl
mov
cltd
add
data16
mov
push
jmp
imul
sub
fwait
mov
out
push
sarl
popf
inc
xor
ffree
outsl
pop
jo
repz
fildll
adc
inc
xor
inc
in
mov
mov
sbb
mov
mov
imul
ficompl
jno
lds
mov
jno
das
mov
xchg
cli
xchg
movsl
add
sub
fs
mov
jmp
push
nopl
ss
je
xchg
mov
add
add
xchg
repz
sub
call
mov
je
mov
jo
test
fistpl
out
or
sahf
or
aam
pop
add
aam
std
out
cmpsb
rcrb
adc
jl
icebp
aas
out
jle
popf
xchg
ret
adc
mov
mul
xor
pop
clc
std
ret
adc
icebp
dec
ja
sbbb
dec
mov
mov
sub
fidivs
and
mov
lcall
imul
test
dec
mov
cmp
add
or
sahf
cmpsl
inc
inc
ficompl
cmpl
mov
data16
sub
sub
adc
mov
sub
sub
enter
out
jmp
xor
shlb
or
aas
paddb
les
xor
mov
xor
imulb
sbb
jg
stos
les
into
pushf
lret
dec
adc
cwtl
mov
mov
cmpsb
add
je
push
sbb
call
or
mov
inc
add
or
aam
dec
inc
ret
out
int3
adc
loop
xchg
lcall
imul
adc
in
pusha
arpl
cwtl
ret
xchg
cmp
scas
popf
icebp
xor
jmp
pop
out
cld
sub
jg
stc
jae
sbb
xor
jmp
mov
xor
push
in
mov
data16
movsl
loopne
lea
and
fdiv
cmc
cmp
in
rorb
mov
dec
dec
mov
ja
and
and
stos
lret
jg
out
inc
jmp
jge
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
sbb
enter
xor
sbb
lahf
mov
sbb
movsb
jae
xchg
push
mov
xchg
jle
leave
cltd
push
fs
mov
mov
add
lea
xchg
jmp
mov
pushf
inc
std
and
popf
loopne
or
cs
rorl
test
fmull
out
mov
movsb
xor
scas
lods
ds
cltd
add
mov
adc
push
stc
fsubrs
repnz
inc
fadds
pop
pop
and
adc
int3
pop
mov
fistpl
insl
cmc
cltd
jmp
adc
test
imul
mov
jne
xchg
xor
mov
pop
jne
xchg
pop
not
inc
xchg
dec
lahf
mov
adc
sbb
jb
add
inc
jns
xchg
push
mov
mov
call
das
push
mov
adc
cmp
or
scas
dec
shrb
pop
pop
lock
inc
add
clc
xchg
sub
call
adc
shrl
or
mov
es
popf
mov
outsl
ss
sub
and
test
inc
fdivrp
jecxz
or
jbe
add
fdiv
fstl
sahf
inc
xchg
mov
sbbl
pop
adc
xor
push
sbb
cmp
sub
movsb
inc
fisttpl
fwait
loopne
mov
inc
faddl
ret
mov
ja
test
in
test
xorb
push
cwtl
addr16
adc
dec
or
add
inc
cld
jne
mov
add
push
leave
repz
mov
jnp
lcall
push
gs
outsb
insl
mov
sub
push
leave
sub
mov
dec
mov
out
sub
imul
cmc
lods
dec
push
loope
lret
jg
lds
adc
and
lret
pop
movsl
ljmp
mov
mov
or
es
pop
pop
loope
push
pop
daa
sbb
xchg
idivl
rorl
xchg
mov
xor
xor
das
cmpsb
xor
es
pop
jg
adc
dec
arpl
addl
mov
scas
rcll
or
inc
jl
or
enter
cli
dec
cmpsl
cmc
in
or
pop
add
sub
cmpsb
xor
dec
mov
sbb
and
imul
call
pop
and
mov
push
mov
test
repnz
rcr
jle
fidivs
repnz
dec
pop
fcomps
mov
sti
ljmp
inc
insb
movsl
lds
pop
aam
sti
jecxz
adc
mov
aam
ja
mov
popa
lods
fisubrl
rcrb
mov
scas
xor
cltd
sbb
daa
iret
mov
xchg
aam
push
sub
addb
jle
insb
jg
xchg
jecxz
arpl
out
push
mov
adc
mov
pop
sub
sub
sub
fdiv
jns
pop
loope
xor
mov
mov
popa
sbbl
int3
jnp
cmp
sbb
pusha
add
outsb
fimull
or
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
pop
jno
loope
sbb
xor
sbb
jns
imul
popf
pop
dec
sbb
jno
dec
dec
nop
sbb
out
xchg
add
lock
int
jmp
xchg
fsubr
fsubrl
push
outsb
or
inc
sti
mov
xchg
data16
subb
lds
mov
loop
daa
inc
shll
xor
repz
and
int
loop
or
sub
mov
xlat
jne
cmp
pop
shrl
loope
addr16
pop
fildl
stc
pop
sub
test
sub
icebp
mov
xor
sarl
inc
or
hlt
out
out
repnz
push
es
js
ret
or
mov
repz
mov
and
mov
pop
mov
push
add
and
movsb
jecxz
jp
mov
mov
addb
cmp
test
push
outsb
xchg
insl
test
fisubs
fwait
lret
cli
cwtl
xchg
cld
cli
shll
mov
pop
scas
cmpb
stc
jle
push
test
adc
and
int3
pop
insl
mov
cs
pushf
add
mov
xor
cmp
int
shr
mov
gs
cmp
call
push
pop
repz
xchg
test
gs
out
testl
leave
inc
dec
mov
or
add
aaa
add
aas
push
and
outsb
repz
int3
aad
and
cmp
rorl
mov
jmp
arpl
lcall
xor
lahf
jno
push
and
outsb
add
inc
adc
inc
push
mov
pop
push
clc
inc
jmp
xor
aaa
mov
fstpt
dec
mov
cli
fstl
shlw
xor
and
xlat
cltd
data16
orl
daa
stos
xor
pop
rcll
fimuls
and
int3
sub
mov
jmp
lea
pop
sbb
sbb
idivb
or
mov
mov
bound
test
ljmp
jae
gs
cmp
or
clc
aam
in
cli
out
jle
adc
xrelease
sub
jbe
fisttpl
add
pop
dec
push
xchg
fcomip
cmp
repz
scas
dec
and
adc
addr16
pushf
mov
cmp
ljmp
mov
pop
mov
inc
pop
fwait
call
out
cld
arpl
sub
jae
cmp
xchg
push
rorb
ret
pop
sbb
mov
and
pop
mov
fldenv
addr16
shlb
and
daa
int
pop
fsub
jle
sub
push
jnp
adc
jo
xchg
adc
popf
mov
cmp
mov
rcr
cwtl
xor
loop
xchg
mov
scas
mov
xchg
leave
add
aas
jnp
popf
call
stc
ja
jg
pop
repz
lock
dec
pop
cmp
movsb
stos
cli
and
rcl
dec
push
jne
int
movsb
sbb
xor
dec
syscall
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
int3
dec
mov
stc
stos
sbb
test
sbb
hlt
mov
or
and
ss
xor
mov
jle
movsb
xlat
xlat
sar
ja
adc
mov
mov
ljmp
mov
or
iret
inc
divb
xlat
and
mov
add
sti
rorb
stos
inc
cmpsb
jne
jmp
cmp
jl
mov
std
push
pusha
mov
and
mov
rcrb
cmp
sahf
cmp
xchg
inc
adc
repnz
fs
sbb
sub
xor
pop
add
sub
imul
inc
rep
lcall
rorl
mov
lret
and
fmull
inc
outsl
sub
daa
xor
xlat
out
insb
cmpsb
faddl
mov
pop
dec
inc
sbbb
out
push
jbe
cld
js
push
test
push
rclb
jne
xor
cs
ss
adc
fs
roll
loop
adc
arpl
inc
sbb
imul
push
stos
add
aam
or
inc
mov
and
mov
dec
imul
push
jbe
stos
inc
std
movsl
inc
push
mov
inc
or
ja
imul
lahf
mov
xchg
leave
stos
sahf
adc
mov
mov
mov
xor
lods
lcall
xchg
leave
mov
ds
xchg
rorl
popa
sbb
iret
pop
gs
gs
lds
cmp
push
jno
shlb
sub
ret
es
pop
fisubl
and
inc
stos
repnz
mov
fwait
cmpsb
call
addr16
lods
movsb
mov
xchg
inc
jg
mov
cmpsb
jl
insb
push
popf
ss
loopne
mov
mul
nop
pop
sub
jg
out
std
jp
xchg
mov
aam
sub
inc
push
roll
inc
pop
imul
outsl
inc
inc
dec
sahf
sub
shld
adc
or
jmp
jp
pop
arpl
lods
lret
mov
in
and
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
nop
push
std
loope
into
mov
stos
sti
outsl
pop
xchg
pop
hlt
push
je
sbb
testb
imul
addr16
sbb
xchg
outsl
inc
aaa
and
push
sub
inc
lahf
movsb
jmp
or
mov
sbb
jns
cmpsl
ss
ftst
add
mov
xlat
ror
adc
pop
and
sbb
ret
pop
popa
push
int3
ds
outsl
roll
test
xchg
adc
inc
mov
inc
mov
into
int3
mov
mov
push
loopne
int
mov
adc
test
gs
push
call
lcall
pop
addr16
lret
pop
mov
test
jle
fiadds
mov
push
fisubl
fs
jnp
movsl
adc
clc
lods
pop
lcall
cmp
cwtl
add
fmuls
pop
jbe
cs
mov
ljmp
add
and
inc
mov
std
cmpsb
cmp
loop
and
add
imul
inc
inc
neg
insl
pop
je
mov
or
hlt
jl
cmpl
int3
and
dec
adc
or
add
faddl
mov
int3
outsl
lret
test
push
in
jne
mov
lock
out
push
or
scas
fwait
add
push
fstl
add
daa
or
rcll
aad
outsb
xchg
in
jae
fsubs
mov
sbb
lods
cli
inc
inc
in
jne
into
mov
inc
scas
adc
addl
mov
inc
pop
xor
pop
xchg
aas
lds
mov
mov
cmp
pop
xchg
inc
and
pop
ja
or
mov
aaa
cld
dec
ffreep
push
xlat
outsb
pop
and
pusha
mov
fdivs
lods
lock
sub
dec
mov
cmp
fldcw
das
and
sbb
push
cmc
lock
adc
sub
mov
ficompl
dec
or
mov
out
mov
insb
sub
mov
orl
jb
sub
aas
sbb
lock
jns
cmp
in
mov
mov
push
jmp
sub
and
jb
push
stos
lds
mov
test
mov
add
jle
std
mov
mov
sbb
dec
mov
mov
cmp
push
out
add
jg
mov
pop
inc
aaa
inc
push
rcll
pop
mov
in
lods
push
rcl
hlt
rcll
mov
subl
cmpsb
inc
cmp
adc
adc
test
stos
jae
pop
mov
out
cmp
mov
or
sub
fs
mov
pop
roll
dec
cmpsl
stc
std
les
loopne
mov
cwtl
out
pusha
pushf
push
stos
xchg
gs
out
test
sub
xchg
stc
out
pop
sub
mov
inc
jmp
mov
dec
and
cmp
push
xor
fisttpl
dec
or
xchg
mov
xchg
call
dec
and
or
sbb
lods
loope
movsb
and
and
add
lds
jecxz
std
daa
out
dec
fcoms
sbb
out
daa
outsb
or
clc
test
in
xor
mov
cmp
or
sbb
mov
xlat
sub
pop
push
jge
mov
and
jmp
inc
and
adc
pop
in
adc
lods
push
sahf
mov
fnstenv
pop
lahf
sub
out
int3
mov
mov
push
pop
out
sbb
push
std
insb
sub
cmp
cmp
dec
mov
outsb
test
dec
out
test
fmuls
addl
cld
fdivr
inc
sbb
inc
loope
out
in
sub
cli
cmpsb
mov
into
or
shlb
fwait
push
xchg
jecxz
add
xor
shl
stos
filds
pop
cmp
je
cmpl
lret
scas
cwtl
out
sar
cmp
sahf
clc
sbb
xchg
mov
mov
mov
cmpb
push
and
stc
push
or
aad
lcall
fstps
icebp
mov
in
jno
pop
aas
sbb
addr16
cmp
inc
mov
jo
xchg
inc
jno
push
mov
xchg
mov
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
mov
mov
pushf
sbb
test
jne
das
push
mov
fisubrl
out
dec
sub
repz
nopl
dec
fisttpl
fsubrs
push
call
xor
push
sbbb
add
mov
push
mov
sti
jnp
or
sub
and
mov
push
mov
test
jp
xchg
repz
loopne
jae
jecxz
sub
push
mov
outsl
pop
xchg
ret
out
or
xchg
in
jb
daa
arpl
je
aam
lret
fstpl
xchg
pop
cli
sbb
mov
lret
push
mov
push
shll
inc
fimuls
roll
clc
mov
and
out
adc
das
fwait
mov
mov
repnz
pop
pop
out
inc
dec
sbb
push
lea
sbb
js
sub
and
stos
divl
data16
jno
jg
mov
mov
pop
movsl
xor
lods
inc
pop
ss
jmp
imul
mov
mov
inc
nop
push
and
cmpsb
movsl
sbb
pop
push
and
hlt
les
iret
xchg
pop
call
push
into
or
mov
stos
addb
inc
mov
xchg
cmpb
rorb
pushf
mov
scas
in
dec
jnp
cmpsb
stos
rcrl
mov
pop
test
jle
cld
or
mov
and
push
cmp
mov
cmp
push
inc
inc
or
js
push
outsl
cmc
fstpt
out
cmp
and
jnp
in
cs
xchg
xchg
dec
mov
in
adc
add
inc
dec
outsl
rorb
stos
fisttpll
sbb
xchg
pop
sub
lea
and
test
setb
jmp
hlt
pop
fistl
mov
sub
cld
cmpsb
mov
fwait
xchg
sti
hlt
daa
ret
ds
pop
orb
repz
xchg
popf
pop
mov
lock
fbstp
sub
cmpsl
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
sub
sbb
test
shl
fbstp
cmc
sarb
xor
scas
inc
cltd
testb
idiv
xchg
push
cmp
cmc
sub
push
cmp
das
insl
pop
xor
outsb
sub
into
push
ret
or
std
shlb
mov
movsb
rep
xchg
add
ret
icebp
test
inc
fadds
fildl
ret
loopne
fst
shll
test
cli
sub
aas
push
bound
jo
and
xchg
fcomps
jl
and
push
stc
push
xor
pushf
cmc
push
ret
inc
adc
mov
xor
and
add
ret
js
inc
ds
cmp
mov
loop
xchg
adc
sub
cmp
insl
xor
shl
push
push
fincstp
adc
icebp
pop
sub
sub
pushf
je
test
jo
push
or
adc
pushl
out
jg
xchg
jno
mov
loopne
xchg
xorl
rol
cwtl
adc
cmp
mov
outsb
jae
test
push
lea
adc
sub
cli
inc
cmpb
pop
mov
dec
xchg
push
push
mov
pop
mov
das
jae
arpl
xchg
maskmovq
mull
xor
mov
push
dec
push
push
cs
push
inc
push
xor
xchg
outsl
or
xchg
inc
sub
mov
outsl
pop
jb
cmp
popa
ljmp
adc
push
xchg
xor
movsl
pop
and
aas
das
add
xchg
scas
mov
jmp
in
fs
out
push
push
adc
and
jnp
push
sub
cmp
bound
shlb
jne
add
inc
cmp
jle
out
sbbl
fisubl
and
or
movsb
pop
in
es
icebp
fidivs
xlat
fs
fsubl
cmp
xchg
xor
pusha
push
mov
mov
ret
jge
stos
jns
xlat
push
mov
lret
push
mov
and
fs
xchg
push
out
scas
mov
dec
xor
cmovnp
adc
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
xchg
sbb
cltd
add
fistpl
out
orb
imul
aad
xor
inc
cmp
mov
cmpsl
pop
insb
xchg
sbb
pop
pop
rorb
cmpsb
jp
fmul
lahf
sahf
shlb
mov
push
test
add
fmul
imul
imul
fyl2xp1
mov
adc
addl
mov
hlt
dec
inc
movsl
jne
mov
mov
int3
stos
adc
inc
fwait
rcrb
xchg
and
jp
pop
movsl
and
out
lahf
pop
push
mov
aas
dec
cwtl
pop
fisttpll
and
jmp
xor
jae
sbb
mov
cmp
xrelease
popa
xor
incl
out
mov
das
inc
stc
or
xor
or
jle
enter
rorl
inc
xchg
xchg
fisubrs
test
adc
or
movsb
les
mov
or
inc
ss
into
dec
xchg
pop
scas
loope
in
dec
lret
lods
or
xor
sbb
push
jbe
fcomi
add
stc
imul
and
imul
inc
out
add
pop
popf
call
cmp
and
lcall
lods
pop
pop
rcrl
and
icebp
sbb
daa
sbbb
cmpsl
mov
cmp
movsl
in
dec
mov
inc
pop
jne
insb
sbb
popa
mov
xor
and
add
sbb
sub
scas
dec
inc
xlat
stos
pop
popa
inc
cmpsl
or
pop
das
stos
jns
fadds
sub
in
shl
out
pop
jle
push
add
dec
dec
testl
repz
fldl2e
jne
jle
pop
and
mov
and
arpl
xor
add
sub
dec
jae
pop
dec
inc
mov
ret
lcall
sub
xchg
adc
inc
dec
lcall
mov
insl
push
movsl
enter
popf
cwtl
inc
push
adc
nop
shl
inc
div
mov
xor
or
jmp
push
and
mov
stos
pop
nop
sbb
test
add
daa
jb
jl
inc
xorb
clc
xchg
mov
add
rcll
pop
repz
daa
jno
mov
mov
mov
push
dec
xchg
clc
js
push
push
clc
push
mov
ja
rcll
insb
push
shll
push
popa
nop
ds
jle
inc
xor
jno
dec
jmp
leave
sub
js
loop
xchg
and
lahf
shr
cmp
dec
rorl
inc
push
imul
dec
arpl
pop
sub
testl
cmp
imul
mov
rcl
jmp
mov
out
xchg
das
sub
lds
cmp
sub
loopne
pop
mov
jmp
jmp
jo
or
hlt
js
pusha
ret
dec
fists
cmpsb
imul
sbb
add
push
pop
fisttpl
inc
push
lock
jae
mov
inc
add
push
mov
push
insb
dec
fld
xchg
xor
xchg
ljmp
jp
xor
jle
mov
xchg
js
out
repnz
inc
xchg
mov
sub
mov
inc
in
inc
sub
cld
dec
shlb
pop
jae
out
call
jecxz
and
fisttps
mov
in
xchg
xor
lcall
lods
filds
js
jl
repnz
fidivs
push
or
pop
popa
dec
shr
fwait
ss
stos
xor
sub
inc
jecxz
stos
xor
icebp
xor
inc
test
sbb
ret
int
filds
adc
data16
out
xchg
mov
int
cmovbe
sbb
or
cmp
mov
out
xlat
mov
andb
mov
lods
shll
push
fmul
or
imul
jmp
sub
jecxz
lcall
jo
in
lods
incl
imul
int3
add
adc
xchg
cmpsb
dec
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
fistpll
mov
sbb
adc
stc
stos
jb
pop
insl
repz
sbb
xor
int3
aaa
or
sbb
mov
push
xchg
sbb
lods
push
pop
stos
in
test
iret
xor
cwtl
add
mull
inc
push
push
jnp
push
mov
add
cmp
sti
inc
push
cmp
idivb
mov
push
sbb
pusha
adc
xchg
mov
iretw
push
xchg
mov
hlt
dec
gs
movsb
cmp
adc
add
fwait
lds
lea
loop
lcall
mov
iret
test
rolb
mov
pop
inc
cmp
stos
push
mov
lret
sbb
cmp
xchg
outsl
mov
and
push
outsb
in
std
imul
xchg
int
and
dec
push
pop
jmp
jno
push
in
mov
mov
mov
mov
and
pop
jno
mov
xor
je
sbb
out
clc
cmp
dec
fdivrs
sbb
idivl
mov
jg
gs
cs
jne
inc
xchg
in
scas
jb
sarl
repz
test
shrb
js
pop
lcall
sub
sbb
jg
push
mov
clc
cld
fnstsw
pop
dec
stos
loop
xor
xor
inc
cmpsb
jge
push
add
and
cmp
icebp
mov
lret
or
pop
popf
test
and
jb
and
and
push
repnz
push
iret
icebp
repz
test
add
fisubs
mov
int
ljmp
lock
arpl
cmp
xor
into
sbb
push
and
mov
outsb
in
or
and
and
sbb
push
stos
and
push
out
pusha
xchg
aam
push
lds
add
sbb
mov
out
out
and
xchg
ljmp
pop
dec
enter
pop
or
cli
ss
ljmp
sbb
ret
sub
sub
int
dec
mov
sub
mov
rclb
test
adc
xor
lret
pop
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
push
xchg
sbb
sbb
setl
es
test
loope
ds
xchg
adc
fldl
fcoms
clc
inc
in
mov
adc
je
pop
jg
shl
push
or
xchg
cltd
gs
outsl
ljmp
popf
and
outsl
jno
xchg
sbb
sbb
push
test
jge
mov
jnp
loopne
sahf
div
adc
pop
sub
mov
xlat
sub
ds
add
mov
xchg
add
xchg
getsec
daa
adc
inc
pop
dec
cli
rcll
imul
push
ja
test
cmpsb
xlat
out
jp
xchg
fmulp
or
arpl
xchg
adc
dec
mov
loop
push
stc
cmp
scas
popa
cmp
std
adc
add
ja
push
repz
adc
add
fnstenv
jmp
jle
push
cmp
xchg
call
testb
adc
xchg
loopne
movsl
mov
pop
imul
push
movsl
repz
mov
test
rolb
iret
js
inc
mov
or
inc
es
cmp
and
sbb
add
shll
fs
mov
in
movsb
xor
mov
in
mov
jno
clc
loopne
mov
push
dec
cmpsl
rol
rcll
mov
mov
adc
aaa
pop
test
sbb
cmp
lret
xchg
in
repnz
pop
roll
mov
and
push
mov
dec
rorl
push
sbb
fisubs
lods
xchg
push
test
mov
outsb
and
daa
aas
pop
mov
loop
inc
ss
or
mov
xor
nop
js
push
adc
add
ja
cmp
stos
movsl
cmp
movsb
repz
xor
xlat
mov
loop
dec
pop
push
jno
push
out
sbb
in
pop
sbb
push
or
adcl
insl
xor
mov
cmp
loopne
call
jo
xchg
cltd
jp
sbb
mov
aas
adc
cmp
sbb
in
xchg
jl
xorb
mov
mov
in
sub
xorb
push
and
jle
jne
sbb
push
nop
pusha
pop
push
fwait
jg
jge
out
dec
dec
popa
or
jge
orb
test
xchg
adc
cmp
cwtl
es
rcrb
mov
pop
ror
pusha
into
js
shrb
push
cmp
in
and
push
jmp
mov
xor
stos
jge
insb
hlt
in
fs
rorl
add
ds
enter
lret
dec
mov
mov
sub
inc
lret
and
bound
push
mov
outsl
sub
bound
dec
jo
cmp
dec
jae
jle
mov
sub
push
sahf
mov
jbe
mov
push
jmp
jle
ret
or
pop
shrl
push
imul
and
aas
rcrl
movsl
jo
movl
jmp
into
jne
inc
sbb
pop
clc
push
cltd
mov
jns
sbb
xor
fbld
lods
mov
xchg
pop
arpl
sbb
fwait
ds
pop
mov
ljmp
jp
test
and
pop
jo
ficoml
mov
and
mull
popa
lds
scas
lock
pusha
jmp
push
lock
sub
js
in
mov
xor
stos
push
and
psubw
ss
cwtl
movsb
outsl
dec
subb
jmp
sahf
xor
dec
ret
and
nop
pusha
cmp
push
mov
rcll
mov
push
notb
mov
adc
call
mov
movsl
xchg
push
sbb
dec
jne
xor
test
lods
outsb
in
mov
and
dec
jne
das
sub
cmp
xchg
stc
jle
fucomi
ret
jg
ffree
pushf
mov
mov
mov
mov
sbb
fdivr
out
mov
fwait
dec
fldcw
jae
jle
xrelease
jl
pop
dec
lods
cmc
lahf
cs
pop
xorb
bnd
push
sbb
pop
sbb
mov
and
jp
sbb
xchg
rorb
add
lods
sbb
inc
or
mov
mov
add
loope
iret
andb
pop
dec
ret
push
pop
push
gs
bt
rclb
aad
out
add
fiaddl
sbb
add
cs
stos
jl
int
jg
mov
les
jl
jae
les
aad
lret
jnp
sbb
in
inc
pop
jmp
lock
fistl
jno
movsl
jb
jno
repz
push
jo
cmp
jmp
andb
jmp
add
mov
or
mov
js
jle
lcall
daa
mov
sarl
fcomi
jo
in
dec
xlat
or
cmc
ret
movsl
int
sbb
xchg
push
push
xor
popf
or
loop
loopne
divl
sbb
fcmovnb
add
xchg
fs
push
or
ret
mov
rcl
dec
fsubs
inc
mov
sub
movsb
or
pop
or
fwait
xchg
mov
dec
jae
xor
sub
mov
pop
mov
jl
repz
dec
lret
xor
fcmovu
cmp
lea
aam
xor
push
sub
add
adc
mulps
icebp
jae
xlat
fbld
repnz
jo
test
jecxz
sub
push
push
fadd
inc
mov
sbb
std
push
or
repnz
and
lds
inc
rorb
mov
int
mov
mov
mul
in
adc
insb
mulb
jl
push
aas
push
mov
popa
sbbb
repz
into
addr16
pop
add
dec
aad
pop
imul
and
push
dec
xor
ds
je
ds
sub
cwtl
jge
pop
inc
mov
mov
std
sbb
jle
xchg
cli
shlb
adc
scas
fstl
into
inc
cmpsb
add
cmp
outsb
mov
test
dec
call
or
mov
jle
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
add
movsl
clc
flds
xchg
xchg
insl
sub
les
dec
add
mov
nop
in
sub
fmul
int
cmpsl
shrb
sbb
ljmp
pop
xor
enter
push
sbb
jb
cmp
sub
fs
adc
xchg
sub
inc
dec
es
push
testb
sahf
test
inc
jle
xlat
pop
and
inc
imul
add
pop
and
insb
stc
inc
xor
cmp
push
or
push
cmp
jns
xchg
and
mov
sbb
or
sub
and
icebp
mov
imul
movsb
cmpsb
jmp
xor
fucom
into
loop
ss
inc
imul
mov
mov
or
push
mov
shlb
jne
pop
jb
push
enter
xor
pop
pop
fs
push
cmp
mov
shll
jle
and
xor
xor
jl
shlb
dec
movsl
test
cmpsl
test
inc
inc
repnz
in
mov
jno
outsb
mov
test
sbb
push
push
pop
jbe
testl
ffree
add
movsl
sbb
fnstcw
cmp
mov
fcmovbe
pushf
pop
cli
mov
sbb
daa
and
push
fsubs
outsb
add
call
sbb
sti
jmp
xchg
popa
or
incb
js
jne
cmpl
cmp
cmp
bnd
loop
dec
inc
mov
data16
inc
jmp
jnp
in
insb
je
sub
push
hlt
out
add
or
test
fcomi
movsl
xor
sbb
icebp
jp
test
mov
add
imul
fsubr
shl
dec
jecxz
movsb
or
mov
push
adc
dec
mov
pop
sbb
daa
leave
int3
add
shrl
sub
sbb
xchg
xlat
imul
je
cmp
into
lcall
ret
mov
cmpsl
jns
sbb
or
fsubrp
cmpsl
push
or
mov
cli
test
fimuls
mov
sbb
inc
ss
jns
fidivrl
nop
pushf
scas
mov
jbe
dec
jb
pop
xor
outsl
xchg
jnp
push
stos
xchg
and
out
mov
push
stos
xor
jb
mov
mov
push
dec
out
adc
fiaddl
repnz
add
xchg
jae
sbb
fs
data16
int3
cmp
jb
call
jno
pop
ficompl
test
and
rorl
adc
cli
pop
popa
shl
hlt
xor
daa
je
fidivrl
loope
enter
movsl
shll
in
movsb
sbb
push
data16
dec
je
pop
inc
add
arpl
ror
std
addr16
popf
rolb
jo
jne
leave
std
or
mov
push
push
cmpsb
js
push
jbe
xor
insb
mov
repnz
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
ja
xlat
sub
iret
clc
inc
out
sbb
fcoms
cmp
inc
leave
xor
sub
fldcw
and
xchg
xchg
mov
mov
xor
jg
xchg
movsl
mov
pop
push
adc
mov
cmp
out
mov
cs
push
popa
es
ret
cld
push
ret
mov
mov
repz
stc
cld
sbb
movsb
mov
int3
mov
popf
imul
and
data16
jecxz
adc
nop
mov
orl
mov
fnstsw
pushl
mov
dec
cmc
push
loopne
jle
cmova
sub
adc
and
xor
dec
frstor
mov
inc
clc
cli
icebp
inc
mov
adc
mov
mov
push
inc
xchg
jle
inc
add
hlt
mov
sti
and
or
push
jecxz
subb
or
and
push
dec
mov
inc
mov
icebp
in
fdivrs
fwait
aas
stc
dec
mov
sbb
push
xor
sahf
jmp
mov
mov
mov
movsl
fisubrl
dec
lds
and
jmp
push
mov
cmp
mov
inc
test
cli
cmp
sub
and
jle
jge
mov
aaa
pop
and
test
shll
lds
cli
sub
dec
mov
rcrl
or
in
cmp
fucomp
pop
cmp
push
jmp
sbb
int3
aas
sub
mov
popa
test
out
xor
add
int3
add
scas
mov
add
adc
ss
sbb
xchg
enter
dec
imul
adc
aas
cmp
mov
mov
inc
aam
negl
fildl
xchg
jmp
std
leave
dec
mov
dec
lock
sbbb
mov
xchg
movsb
iret
insl
mov
es
jno
dec
sbbl
jbe
cmp
xor
mov
jbe
lahf
dec
inc
sahf
outsb
push
imul
jmp
jl
dec
sbb
inc
insl
pop
adcl
gs
repnz
inc
imulb
sub
sub
int
jne
sub
test
pop
jnp
mov
rcrl
inc
fdivr
push
aas
test
mov
xor
aam
jne
xchg
scas
xchg
mov
outsl
adc
daa
pop
clc
adc
cwtl
out
dec
jmp
test
test
jl
std
dec
cmpsb
les
movsl
sub
mov
enter
shrl
insl
xor
fcoms
jmp
xor
cld
outsb
and
out
cwtl
mov
arpl
insl
pop
inc
sbb
sbb
loop
stos
xchg
cmp
fs
lock
xchg
or
sub
arpl
and
mov
pusha
pop
popa
cld
add
divl
sbb
scas
aad
movsl
push
rcll
jbe
pop
in
sbb
sahf
movsl
mov
adc
clc
xor
mov
out
push
das
sbb
pop
xor
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
mov
stos
stc
insb
sbb
jns
sbb
fnstcw
sub
aas
daa
stc
or
pop
es
xchg
mov
fs
imul
test
out
std
adc
xchg
inc
push
sub
jb
je
int3
insl
les
pop
pop
gs
and
jb
in
jle
out
mov
mov
aad
das
mov
and
test
xchg
cmp
imul
mov
js
adc
enter
int
insb
jge
or
stos
repnz
xchg
xor
inc
into
cmp
inc
cmp
addr16
sbb
ds
stc
in
xchg
movzwl
push
or
cmpsb
out
mov
outsb
ljmp
cmc
mov
scas
xor
iret
imul
sbb
stos
pop
jne
pop
add
jecxz
shrb
and
je
arpl
inc
jmp
hlt
jge
pushf
inc
inc
lcall
add
sub
sbb
and
push
pop
xchg
aas
and
loope
push
bound
cltd
or
xor
jg
lret
cli
pop
test
add
add
outsl
arpl
and
clc
fsubs
pop
inc
jmp
jnp
aas
cli
lock
fidivs
mov
mov
inc
loope
xchg
es
add
mov
push
mov
push
sbb
gs
in
out
jb
xor
daa
adc
ret
jmp
pop
sub
into
or
pop
lahf
mov
test
stos
dec
insl
das
clc
mov
movsl
imul
jb
cs
sub
or
into
gs
cld
out
sub
ffreep
mov
dec
dec
fcmovne
or
iret
les
pop
in
imulb
popf
inc
cmp
test
scas
sbb
mov
movsb
sub
jnp
pop
xor
dec
jl
dec
loop
fwait
adc
add
dec
sbb
scas
hlt
sub
jl
jmp
aam
inc
scas
mov
push
sbb
cli
stos
stos
ljmp
jnp
rcrl
js
sti
dec
mov
ss
lods
jae
pop
arpl
push
movsb
hlt
ret
flds
inc
gs
cld
faddl
lea
movsb
xchg
rcr
lds
sahf
test
lods
mov
scas
in
xlat
shlb
insb
ds
pop
out
test
pop
xor
das
jne
sub
mov
lret
stc
and
cs
cli
and
cmp
pop
xor
movsl
gs
mov
xchg
sarl
fisubrs
jp
xor
pop
in
cmp
cmp
into
push
dec
sarl
int3
pop
mov
adc
mov
or
call
push
bound
les
fs
xor
leave
test
enter
xchg
inc
cmc
outsb
push
xchg
ficomps
mov
pop
xor
cmpsl
lret
lret
js
fistpll
movsb
inc
inc
dec
sbb
outsb
cmpl
mov
cmp
jae
rorl
jge
out
pushf
inc
and
insb
add
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
push
xchg
mov
jns
sbb
cmp
fists
sub
fidivs
aaa
aad
xchg
push
mov
fiadds
jp
cmp
xchg
mov
shr
dec
xor
inc
sbb
mov
aas
arpl
pop
mov
lock
dec
lock
mov
movsb
ljmp
stos
test
fcomi
sub
adc
movsb
mov
or
sbb
adc
xor
cmp
sti
sbb
sub
mov
inc
outsb
xchg
adc
inc
mov
in
mov
cmp
push
push
fdivl
pop
or
addb
inc
cltd
fst
inc
nop
bswap
popf
push
negl
sarl
mov
sahf
dec
jb
jo
dec
inc
push
movsb
adc
in
shll
mov
in
xchg
jbe
repnz
lcall
xchg
out
lahf
cmp
inc
dec
ds
mov
mov
lret
or
dec
push
pusha
scas
insl
sub
and
jecxz
push
jnp
inc
fwait
pop
push
push
mov
pop
pop
pop
mov
pop
int
dec
pop
add
xchg
sub
cmc
push
jp
sbb
ret
loope
mov
stos
int3
mov
stos
xchg
or
sbb
je
inc
clc
lock
sub
mov
pop
add
xor
jmp
shrl
sub
arpl
xchg
cmp
xchg
sub
out
mov
movsb
adc
ja,pt
cmp
clc
into
adc
loopne
mov
push
sahf
adc
ret
fildll
sti
inc
mov
mov
push
sub
adc
or
lock
repz
data16
cld
xchg
iret
aam
sti
addr16
jnp
sub
and
lahf
andl
incl
or
fcomip
inc
lods
cmc
push
mov
imul
add
mov
test
je
mov
popf
mov
loope
pop
xchg
push
xchg
out
test
xchg
adc
mov
mov
enter
sub
cmp
add
dec
inc
mov
in
inc
fnstsw
rorl
ret
aam
jg
ret
lahf
xchg
imul
sbb
and
adc
jnp
push
xchg
dec
fsubrl
arpl
testl
aaa
add
mov
pop
inc
cld
push
imul
cmpsl
and
pushl
into
shr
inc
sbb
fiaddl
or
jo
into
insl
pop
scas
je
pop
lea
and
enter
pop
inc
jbe
jmp
xorl
pop
push
in
xor
or
lock
fdivr
ss
loop
scas
jb
adc
je
subb
stos
pop
pop
or
jmp
mov
inc
xor
adc
hlt
dec
shll
fmull
sahf
mov
and
jbe
mull
repnz
dec
xchg
or
mov
ljmp
lock
mov
cmp
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
stos
or
jl
pop
sbb
jns
sbb
aaa
adc
les
in
pusha
fisubs
push
lahf
sarl
sbb
push
xor
cld
ds
rol
test
ret
cmp
stos
add
push
mov
lcall
lahf
xchg
out
aad
std
xor
push
loope
test
pop
xchg
test
rcrl
cmpl
push
xchg
jl
adc
xchg
push
add
push
pop
nop
into
xchg
jp
xchg
lods
cld
mov
lods
repnz
mov
mov
push
rcll
pusha
jge
dec
pop
pushf
popf
ljmp
mov
cwtl
cmc
out
aam
push
push
in
test
aaa
mov
aad
xchg
sub
cmp
push
sub
adc
xor
xchg
fsts
sti
cmpsb
insb
ret
pop
aaa
aaa
cmp
mov
in
popa
ret
fs
cmp
shll
inc
and
mov
sub
cmp
icebp
fisubl
jle
inc
sbb
pop
dec
shll
stos
adc
add
xchg
mov
mov
sub
ret
inc
or
cwtl
rcrb
in
jge
orb
cmpsb
pop
lods
jbe
fldcw
add
lcall
sub
and
ret
sub
repz
stos
xchg
in
divb
jecxz
mov
push
int3
inc
inc
cmpl
stos
jmp
jecxz
xor
sub
movsb
jo
mov
cs
xchg
xor
fcomp
xor
push
dec
cmp
mov
into
int3
inc
es
es
sbb
dec
cmpsl
jp
repz
or
cmp
xchg
or
or
jmp
bound
push
outsl
test
ret
push
push
nop
test
push
nop
jnp
mov
rcr
ret
jne
std
inc
clc
or
out
or
or
mov
popa
mov
inc
push
aam
jecxz
push
insl
and
jae
lds
mov
and
testl
push
mov
lods
cmp
or
data16
sub
push
out
add
and
adcl
and
out
mov
mov
je
imul
push
and
sbb
xchg
mov
popa
cs
sub
inc
cltd
dec
and
xchg
xor
pop
mov
stc
push
mov
jne
dec
mov
es
mov
bound
callw
iret
test
loopne
pop
jl
add
mov
out
adc
insl
mov
mov
and
jl
sub
addr16
cmp
imul
popl
mov
push
sub
mov
lret
loope
cmp
repz
sub
lcall
call
insb
mov
insb
gs
in
jnp
movsw
movsl
fcompl
jb
pop
sarl
and
pop
movq
sarl
cmp
and
movsl
xorb
push
ja
push
sahf
pop
xchg
inc
cmp
mov
dec
push
xor
rcrl
add
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
xchg
mov
je
sbb
cmp
ljmp
xor
jae
lcall
add
les
test
ja
or
xchg
outsb
jnp
xor
fwait
dec
adc
xorb
mov
loop
adc
add
jnp
mulb
daa
sub
pop
sbb
mov
cmp
sbb
cmp
testl
mov
add
cmp
mov
xor
loope
adc
stos
push
shlb
jmp
pop
fbld
xchg
jge
pushf
dec
pop
fwait
xor
sahf
orb
andl
sub
push
mov
pop
jo
inc
or
add
jecxz
or
daa
jae
inc
adc
loopne
call
sbb
pop
jp
les
pop
cmpsl
insb
aas
icebp
and
repz
push
in
outsb
nop
mov
loop
mov
pop
imul
mov
mov
dec
les
fnstenv
out
push
mov
hlt
mov
insb
notb
movl
push
and
jns
adc
xchg
das
mov
jbe
lds
mov
jno
cmp
or
cmp
add
out
mov
sar
fiaddl
adc
sbb
adc
das
insl
lahf
popa
sbb
call
push
fwait
lret
dec
sbb
mov
lods
pop
xchg
adc
fxch
dec
fadd
cmpsb
inc
sbb
dec
jbe
rcrb
sub
mov
mov
mov
fdivs
inc
into
cld
or
fmuls
test
add
loopne
xchg
loopne
mov
inc
fs
push
jae
fstpt
pop
or
call
ds
push
sub
in
pop
sbb
scas
add
xor
orl
and
insl
sub
outsl
jp
cmp
inc
bound
lret
dec
data16
push
xchg
push
js
rcrl
outsb
out
dec
mov
pop
and
int3
inc
inc
in
int
movb
daa
push
dec
or
xchg
out
lcall
int
fdivrl
jno
cmp
loopne
mov
fadds
push
ror
dec
fadds
xor
fwait
add
lcall
push
jle
sub
or
or
sub
xor
insb
push
xchg
lds
lock
pop
loope
imul
es
cmp
ja
xor
and
jbe
in
or
inc
push
jnp
pop
lret
jge
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
mov
sbb
and
sbb
movsb
rcr
sub
rcrb
sub
mov
mov
dec
or
imul
mov
imul
jmp
aam
mov
push
jp
dec
mov
pop
sub
orb
sti
dec
inc
xchg
shll
push
adc
aam
enter
inc
aam
call
mov
cmp
pusha
jns
test
cmc
pop
sarl
insb
rclb
cwtl
and
push
adcb
xorb
and
out
ss
jbe
out
in
sbb
in
sahf
push
iret
sub
iret
popf
adc
jbe
mov
or
out
mov
jno
push
adc
fs
mov
jmp
insl
imul
and
mull
ret
mov
cld
dec
and
pop
in
inc
je
in
enter
outsb
lods
push
dec
pop
ja
stos
mov
pop
push
mov
adc
rcrb
or
aaa
mov
sbb
add
jge
mov
in
fstl
repnz
add
out
push
push
xchg
cmp
push
out
push
pop
aaa
and
mov
or
stos
call
cwtl
aam
adc
js
push
adc
fwait
mov
call
add
or
adc
or
outsl
xor
sub
dec
out
clc
test
iret
jl
cltd
ret
adc
or
mov
dec
idivl
push
adc
adc
sbb
push
push
mov
xchg
in
mov
mov
jno
add
push
out
cmp
movsb
jns
xor
das
cmp
loop
int
inc
pop
mov
jnp
xor
jecxz
jge
and
div
jne
inc
cmp
nop
xchg
popa
sub
push
push
cli
cmc
add
adc
sbb
inc
and
cmpsl
dec
enter
add
jle
xor
arpl
sub
jae
sbb
stos
and
adc
addl
or
test
xor
shlb
loope
in
mov
je
dec
fbld
jp
leave
imul
ss
push
xor
inc
or
jns
neg
mov
or
and
cmc
cmc
cli
push
pop
xlat
dec
cltd
js
test
mov
imul
sbb
pop
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
lcall
scas
adc
sbb
push
sbb
roll
dec
pop
js
xor
cmp
into
sar
and
jb
mov
sub
icebp
in
inc
in
loop
in
mov
in
mov
shlb
ds
cmc
add
gs
xchg
inc
adc
out
scas
cmp
lcall
ja
adc
add
adc
pusha
xlat
fiaddl
pop
cmp
or
add
dec
jnp
mov
in
adcl
faddl
sub
push
dec
out
stos
out
lods
lea
and
sti
cli
jge
dec
lret
test
xor
nop
imul
push
ficoms
push
pop
xchg
shrb
shrb
and
scas
jne
test
pop
jbe
inc
mov
sbb
bound
scas
insb
lods
pop
cmp
add
lods
lds
pop
mov
push
sub
scas
adc
xchg
mov
xlat
push
clc
into
lods
xchg
stos
inc
test
hlt
sub
movsb
cmp
das
dec
mov
ret
jae
aaa
xchg
dec
sbbb
sub
aaa
inc
push
cmp
ds
cwtl
subl
fwait
mov
pushf
fsubp
ljmp
cmc
mov
sub
pop
scas
pop
icebp
lock
iret
add
sbb
or
adc
dec
js
rolb
clc
mov
adc
mov
xchg
pop
insl
pop
test
mov
mov
push
loop
loopne
push
cmp
cwtl
adc
orl
adc
pushf
mov
cwtl
inc
xor
lods
adc
frstor
cwtl
mov
int3
pop
push
mov
out
cmp
and
mov
pop
adc
out
xchg
and
ja
pop
or
aas
out
adc
es
stc
add
add
add
add
or
mov
dec
pop
into
fisttpll
mov
cs
jecxz
cmc
pop
and
and
das
fwait
lret
xor
push
push
fldenv
cs
xchg
jg
ljmp
out
iret
xor
xchg
lods
mov
js
shlb
xlat
cmpsl
cld
mov
out
xor
sub
mov
xchg
lret
fwait
shll
ljmp
cmp
add
and
imul
mov
insl
xor
imulb
jg
rcr
lods
and
push
movsl
jb
add
mov
cmp
call
je
arpl
dec
std
pop
jbe
jno
lret
lret
insl
les
lahf
int3
enter
and
xchg
fsubrl
and
mov
xchg
sub
stos
std
fimull
add
movsb
rorb
fs
jmp
out
dec
aas
rorl
popa
inc
test
xor
or
mov
sbb
xchg
in
mov
sbb
in
jb
xor
xor
ret
lea
in
popa
pop
ds
inc
pop
lea
cmp
js
pop
push
pop
imul
es
xchg
mov
cltd
jecxz
jmp
lahf
mov
dec
pop
and
pushf
lds
outsb
dec
sub
inc
loope
or
jl
sbb
nop
stos
adc
inc
orb
fisubrl
lock
imul
cmp
adc
pop
callw
decl
dec
and
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
jno
jo
inc
sbb
scas
adc
sbb
jl
xor
std
sbb
jmp
xor
ja
jno
gs
or
dec
mov
xchg
pushf
icebp
lods
or
aad
adc
xchg
inc
xlat
js
out
mov
sbb
and
cltd
push
add
dec
stos
pop
aad
mov
adc
shrl
enter
imul
add
mov
mov
xchg
adc
push
scas
call
sahf
mov
cmp
or
pop
fwait
testl
inc
jge
vpmadcsswd
xlat
nop
gs
ret
push
xchg
or
popa
hlt
adc
shr
push
xchg
jg
sub
and
daa
mov
add
addb
test
fwait
pop
mov
xchg
pop
jnp
movsb
mov
dec
mov
or
movb
inc
xchg
sar
xchg
pop
sub
adc
adc
mov
inc
mov
inc
andl
xchg
rorb
cs
leave
fs
pushf
mov
pop
jnp
sbb
movsl
push
call
pop
cmp
adc
xchg
sbb
mov
sub
cmpsb
pop
inc
int3
enter
add
jae
or
fimull
arpl
icebp
decb
inc
cld
jle
cmp
and
sub
push
mov
mov
gs
and
sub
fsts
xor
cltd
cld
pop
mov
inc
xchg
negl
or
and
movsl
xchg
data16
int3
lds
and
sub
jecxz
mulb
inc
sbb
dec
cmp
pop
mov
dec
fldt
inc
ljmp
test
jbe
and
out
adc
bound
repnz
mov
mov
xor
and
xchg
mov
cmpsl
dec
ret
adc
jnp
mov
sbb
shrl
pop
mov
fildl
cmp
negl
in
pop
or
out
xor
jbe
pusha
das
push
scas
mov
jecxz
test
ficompl
out
push
cld
das
ja
push
movsb
ss
push
orb
adc
adc
test
sbb
in
stc
outsb
mov
psubsw
cmpsb
pop
pop
cmpsl
or
inc
lods
aas
xor
ljmp
jl
push
rorl
out
mov
push
ja
das
dec
or
pop
div
aad
xor
pop
cmpsb
pop
inc
mov
stos
jmp
lods
insb
mov
sbb
lahf
jbe
xchg
pop
into
add
mov
push
sbb
shlb
imul
push
xchg
nop
push
imul
inc
adc
add
pop
and
push
pop
punpckldq
or
xor
push
jl
aaa
xchg
in
jae
fistpl
xchg
roll
pop
cmp
mov
rcrb
cmp
jnp
int3
cmp
mov
test
shr
push
add
xor
enter
cmp
xchg
popf
sub
pop
loop
lock
movsl
cmp
lcall
inc
add
lds
jg
jne
push
inc
adc
movsl
xor
ljmp
pop
daa
imul
icebp
xorl
mov
sbb
jnp
gs
jge
lds
mov
movsl
inc
fiadds
mov
lds
jp
jbe
mov
sbb
jmp
mull
in
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
mov
sbb
adc
sbb
pop
push
loope
push
cmc
mov
in
inc
mov
xor
dec
mov
das
in
dec
cmc
lds
cmp
xabort
leave
push
xorb
stos
jne
jmp
and
test
mov
jno
in
xchg
pop
fwait
sti
lods
sbb
cmc
and
pop
mov
fists
jne
sbb
xlat
sahf
push
cld
imul
repnz
jg
jg
rcrb
sahf
mov
mov
pop
sti
cmp
inc
sub
fyl2xp1
es
iret
sub
sub
iret
adc
mov
test
xor
jle
rolb
sti
mov
rcl
and
sub
aaa
dec
pop
loope
jae
inc
adcb
shlb
mov
sti
lds
push
add
cli
jb
loope
fimull
pusha
sbb
scas
stos
outsl
fcom
push
pop
or
int
popa
mov
dec
cmc
sbb
repz
xchg
mov
mov
inc
pusha
imul
adc
aam
jg
sbb
ret
sub
mov
push
mov
pushf
pop
popf
pop
shrl
xor
jo
adc
stc
and
jnp
loope
movsb
fmuls
xor
sqrtps
lret
popf
fldt
add
adc
out
cli
shrb
loop
mov
xchg
cmpsl
jp
bound
xor
pushf
adc
pandn
negb
jl
mov
loope
lds
xor
dec
push
jo
mov
inc
mov
and
scas
out
flds
idivb
xor
notb
mov
out
fdivr
xchg
xchg
jo
test
sub
inc
out
sub
sbbl
das
adc
bswap
inc
sub
push
clc
out
push
fildl
or
cmc
cmp
mov
testl
and
xchg
shl
inc
adc
in
shl
andl
jecxz
loop
xchg
push
frstor
or
push
addl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
inc
jb
jle
cmp
sbb
adc
sbb
jb
idivl
push
mov
xor
push
lea
xor
pushf
leave
xor
movsb
loope
pop
mov
negl
xor
adc
xchg
jae
sub
paddusb
dec
inc
imul
push
faddl
mov
dec
in
push
sti
push
adc
pushfw
outsl
pop
icebp
xchg
cmp
inc
ror
movsb
add
sub
cmpsb
icebp
out
pop
and
or
cwtl
sahf
push
mov
mov
dec
or
in
adc
or
pop
add
popf
clc
imul
sbb
int
das
sub
adc
sbb
cmpsb
lods
xlat
aas
and
insl
sub
gs
mov
shll
shr
cmp
mov
or
ljmp
jb
scas
sub
mov
sti
cmp
aam
mov
push
mov
aam
movsb
inc
sbb
xchg
push
iret
adc
mov
lods
dec
jp
xor
fnstcw
fucom
and
cwtl
xor
cmp
pushf
into
movsl
pop
das
xchg
aad
daa
sahf
stos
in
lds
je
aas
pop
lahf
xlat
xchg
add
cmp
sbb
push
sub
pop
insb
arpl
jb
in
and
cmp
ja
ds
mov
aas
xorl
or
mov
insl
sub
sahf
xor
cmp
inc
stos
popf
inc
push
pandn
sub
imul
sub
cli
add
mov
stos
add
icebp
jns
iret
mov
cmpsb
jb
pop
loop
add
xchg
loope,pn
insl
mov
repz
push
sarb
lock
scas
mov
cmpsb
lret
dec
pushf
fstl
jmp
enter
xchg
in
cs
data16
sub
inc
ss
pop
scas
sbb
loop
jmp
xchg
or
aaa
out
sub
daa
pop
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
push
dec
jecxz
gs
notb
sbb
fwait
inc
sub
sarl
gs
sti
loopne
es
dec
inc
lea
fidivrs
mov
push
rclb
mov
popf
hlt
call
push
mov
loope
cwtl
iret
out
inc
popa
push
and
pusha
xchg
outsl
jl
sar
test
insb
sub
adc
and
insl
add
out
dec
xlat
jmp
sub
or
push
dec
sub
inc
std
stc
pop
cmpsb
test
mov
push
inc
insb
outsb
and
les
xchg
test
mov
mov
subl
in
lcall
mov
andl
push
bound
ficoms
in
xor
daa
ds
inc
sbb
xor
loopne
or
cmp
div
dec
mov
scas
push
mov
outsb
mov
push
addr16
inc
push
push
jp
mov
jecxz
lock
shlb
cmp
in
ds
xchg
push
sbb
jecxz
jmp
outsb
dec
xor
xor
inc
sub
xchg
push
inc
cmpsl
mov
jmp
cmp
adc
pop
dec
jae
and
and
scas
in
jb
push
lods
addw
push
movsl
in
sti
fsubrl
mov
pop
xchg
inc
jmp
mov
or
test
mov
xchg
jnp
jb
mov
js
mov
stc
dec
or
push
adc
push
add
jecxz
dec
push
dec
lahf
test
cmp
dec
sbb
rolb
out
ljmp
cld
or
push
push
pop
cmp
mov
sub
mov
pop
xor
nop
cmp
aam
ljmp
xchg
std
jp
out
pop
add
sti
adc
popa
out
sub
mov
je
mov
pop
and
cmc
subl
ficompl
add
lret
adc
test
push
push
adc
mov
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
mov
fistpll
inc
inc
jbe
imul
or
mov
inc
test
add
scas
gs
inc
in
cwtl
or
insb
cmpsl
sbb
adc
mov
jno
imul
repnz
mov
enter
jne
mov
bound
inc
dec
ja
mov
add
pop
shll
sarb
bound
fcoml
push
mov
mov
rcrl
in
inc
movsl
cmp
jge
fldt
data16
fimuls
outsb
inc
test
add
lea
xchg
scas
aaa
jne
fcmovbe
std
xchg
sub
jae
and
sub
test
dec
jmp
adc
push
sahf
sarl
fst
adc
pop
pop
test
xor
gs
fidivs
lock
mov
jl
fistpl
lock
cmp
mov
bnd
cwtl
daa
lret
cwtl
stos
jae
sbbb
jg
pop
data16
sbb
int3
jne
cwtl
inc
ja
xchg
push
scas
dec
or
mov
xchg
mov
xchg
pop
scas
push
add
scas
clc
jge
adc
mov
xor
lretw
or
ds
fisttps
test
push
xchg
popf
int
dec
cmp
mov
data16
mul
repnz
dec
add
adc
inc
fiaddl
gs
or
in
adc
mov
js
rolb
cmp
adc
cs
or
imul
xchg
lods
push
adc
scas
shlb
xor
cmp
rcr
lock
pushf
rorl
mov
push
repz
fsubp
or
xor
or
mov
pop
stc
push
sub
push
ret
push
sbb
gs
inc
in
cmc
sbb
cmp
movsl
cmpsb
fcoms
outsl
cmpb
pop
or
lahf
lods
addr16
xchg
push
in
out
adc
or
jecxz
and
mov
push
adc
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
test
repnz
add
jnp
pushf
jp
int
adc
push
test
sbb
jle
int
rorl
mov
lods
mov
clc
xor
mov
iret
pop
movsb
jo
or
lods
push
adc
dec
dec
sahf
or
in
add
hlt
push
adc
imul
iret
int3
xor
push
add
mov
xchg
mov
in
sti
fcompl
xor
popf
jo
iret
dec
jae
pushl
inc
sbb
jge
into
lcall
mov
jb
jno
mov
mov
mov
arpl
rcrb
xor
cwtl
fisubrs
sbb
in
jno
pushf
mov
in
adc
mov
inc
rcrl
sub
adc
ret
in
pop
jmp
popf
fistpll
aam
adc
push
push
es
fdivrl
adc
test
cmp
xchg
cmp
enter
test
fs
xchg
dec
adc
icebp
cmpsl
int3
push
or
cmpsl
mov
ret
adc
sub
ss
les
push
lock
xor
or
push
test
repz
cmpsb
push
aam
mov
dec
xor
nop
cmpsl
cmp
mov
dec
push
arpl
notb
sub
ljmp
inc
insb
incl
or
mov
adc
xchg
fisttpll
daa
es
lea
or
pop
inc
leave
push
jnp
into
adcl
iret
popf
push
jge
stos
push
push
scas
test
rol
mov
jo
xchg
shll
mov
mov
lret
and
jb
fimuls
sbbl
mov
pusha
xchg
mov
sti
jle
push
mov
xchg
mov
pop
daa
dec
push
iret
jb
lret
and
js
xchg
pop
or
ss
pushf
lea
push
mov
mov
jmp
aaa
and
dec
mov
push
out
jp
test
sbb
notb
sbb
daa
mov
mov
xchg
mov
sub
xchg
test
dec
xchg
jmp
decb
test
daa
inc
mov
push
push
popl
imul
stos
xorb
jmp
rcll
or
cs
jnp
test
ljmp
psubq
hlt
loope
add
fwait
adc
xlat
ret
sub
idiv
mov
push
int3
leave
unpckhps
je
ss
dec
mov
mov
mov
mov
pop
aam
inc
mov
xchg
or
repz
mov
jge
dec
rcll
ficomps
xchg
mov
loop
in
fnstenv
mov
sub
and
jnp
data16
sbb
stos
mov
sbb
fisttpll
push
lods
add
subb
shrb
jecxz
mov
insl
fs
rol
aaa
add
cmp
xchg
lahf
mov
imul
ret
sbb
jp
incb
pop
fwait
xchg
dec
mov
jle
icebp
add
ror
jbe
call
in
test
movsb
cmp
jge
loop
icebp
das
mov
adc
cmc
pop
add
addl
insb
test
lcall
jmp
sarl
mov
insl
xchg
mov
fldcw
jge
orb
mov
push
push
cmp
xchg
sti
jmp
in
popa
sti
sti
push
int
hlt
mov
arpl
push
push
push
cmpb
out
imul
mov
jp
iret
int
ljmp
stc
icebp
push
xchg
int
subb
roll
xchg
ja
sbb
fwait
push
or
xlat
add
adc
adc
negl
sub
pop
lcall
jle
popf
mov
dec
mov
sbb
lahf
sbb
lods
enter
add
adc
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
ss
fdivp
xchg
cmp
fcoml
jns
daa
movsb
jmp
pop
sbb
aam
xchg
cmp
mov
adc
adc
loop
pop
pop
jmp
aaa
cld
int
adcl
or
inc
jecxz
lock
dec
mov
cmp
ss
mov
cmpsb
ja
arpl
sbb
sbb
dec
incl
dec
icebp
adcl
jecxz
out
aam
jle
inc
adc
shlb
adc
inc
push
fwait
ret
xor
dec
test
out
xlat
mov
jmp
clc
fnstcw
sub
stos
xchg
dec
jne
jns
cmp
outsb
hlt
jp
lock
push
ds
loopne
in
sbb
mov
loop
aas
fcomps
sbb
hlt
dec
push
mov
or
pop
das
cwtl
adc
push
mov
mov
sub
sub
stos
add
jno
hlt
sub
xchg
xchg
imul
jle
jae
sbb
adc
lret
or
jbe
arpl
stc
sbb
adc
decl
cld
nop
push
fucomi
lock
add
jp
loope
and
das
sbb
jne
inc
sbb
lcall
cli
push
mov
insl
and
mov
mov
jmp
dec
dec
or
dec
shl
gs
sbb
xlat
pop
mov
mov
repz
subl
clc
ja
mov
loop
dec
fs
push
inc
hlt
lcall
mov
adc
das
cmpb
aad
jns
cmc
jno
xchg
adcl
testl
jmp
mov
or
jmp
add
stc
adc
sti
mov
mov
sbb
lods
lret
rol
out
out
pop
xor
jecxz
cmp
out
add
popf
jg
cmpsl
lock
xor
push
adc
adc
repnz
sti
push
pop
mov
cltd
lods
popf
repnz
cs
repnz
dec
adc
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
cmp
ss
sub
push
pushf
rorb
lahf
pop
jecxz
imul
and
jnp
jp
fmul
mov
addr16
fucomip
fwait
cmp
pop
mov
enter
out
inc
fldcw
into
mov
or
xchg
test
pop
loope
cmpsb
pop
jmp
or
lret
out
inc
add
mov
lock
lock
xchg
es
sub
add
lea
mov
dec
and
rorl
dec
outsb
mov
xchg
xor
lret
mov
add
xor
pop
jns
mov
lock
lods
out
xchg
scas
xor
jmp
les
and
fst
xor
mov
pop
xchg
add
pop
add
adc
jns
pop
sti
arpl
int
pop
out
jne
out
insl
cmp
push
and
popf
xchg
mov
push
movb
mov
mov
sti
inc
mov
jmpw
out
movsb
add
outsb
icebp
rol
stc
cmp
call
les
jmp
sarl
push
out
xlat
aam
push
out
fmull
jo
lahf
add
das
dec
dec
add
sbb
repz
lcall
jge
rorb
add
sub
mov
cltd
dec
pop
subb
or
jnp
aam
cwtl
dec
rcrb
repnz
lret
pop
ss
pop
xor
movsl
mov
dec
iret
lret
scas
cmp
fistl
mov
sbb
sub
stos
jae
popa
repz
js
test
mov
mov
sbb
push
ja
repnz
ds
push
fstp
dec
inc
push
push
xchg
mov
je
jbe
push
mov
icebp
bound
push
in
jae
ficomps
rcrb
cltd
data16
jge
int
popa
pop
jo
push
jmp
aaa
jle
inc
jmp
push
loop
mov
adc
xchg
int3
xchg
ret
into
in
adc
hlt
xorb
push
ljmp
mov
and
push
loopne
rorb
add
fcmovnb
dec
mov
rorb
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
or
push
sbb
sbb
sbb
fbld
or
pop
cwtl
cmc
mov
add
cmp
push
sub
add
xor
in
mov
pop
sbb
int
fsubp
xlat
ja
imul
movsb
pop
in
xor
test
sbb
je
jl
imul
xchg
xchg
jo
mov
imul
jl
cmp
in
movsb
jecxz
xchg
cmp
out
daa
insl
sbb
ljmp
mov
mov
lret
cmp
neg
jnp
jg
fcompl
lret
js
int
nop
dec
cmpsl
push
jo
cmp
sbb
xchg
dec
add
adcl
pop
xchg
mov
imul
add
int
mov
stc
mull
add
fs
or
fxch
mov
out
add
jns
and
outsl
loop
xchg
aam
or
xlat
or
mov
cli
lahf
dec
xlat
ficoms
out
pop
not
xchg
ret
mov
imul
outsb
lea
jl
xlat
add
sti
imul
fstpl
icebp
mov
test
int
test
xchg
sbb
mov
cmp
mov
pop
lcall
sbb
mov
mov
push
lret
and
jge
mov
mov
inc
in
lret
or
fld
cmpl
enter
gs
out
inc
iret
ss
add
ja
jl
lahf
cmpsl
mov
add
xor
movsl
cmc
shl
and
add
inc
aad
bound
pop
sbb
cmp
cmp
decb
aam
ja
pop
sub
sub
cli
pop
pop
rsm
sub
dec
dec
xlat
push
add
mov
pop
rolb
fs
xor
cmpsb
pop
mov
push
mov
xor
mov
fstpt
hlt
push
out
out
sbb
sub
xchg
jecxz
std
leave
sub
mov
inc
fisubrs
in
shll
push
in
cmp
pop
in
in
mov
pusha
adc
fstl
jge
xor
cmpsb
dec
fst
popf
dec
in
push
push
mov
popa
add
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
push
sbb
sbb
adc
sbb
cmpsl
aam
push
dec
enter
push
pusha
fiaddl
push
cmp
xor
push
cld
add
adc
addr16
out
mov
popa
mov
xchg
mov
push
mov
add
pop
jns
inc
push
or
cwtl
sbb
cmp
js
lods
jp
fcoml
or
and
pop
pop
push
and
jecxz
xchg
ss
dec
sub
push
push
pop
loope
lret
repz
inc
sti
add
sti
imul
imul
mov
popf
popa
test
clc
arpl
sti
and
mov
fnsave
xor
ret
inc
loope
mov
inc
aas
adc
sarl
push
xor
or
in
jbe
jecxz
int3
jle
cmp
cs
add
sbb
loopne
sbb
je
test
test
lds
jnp
loope
enter
orb
aad
mov
aad
lcall
push
and
frstor
fiadds
and
leave
sahf
cmp
lret
xchg
out
pop
xor
mov
jl
xor
ja
les
add
mov
lods
sub
pusha
and
xor
push
je
pop
movsl
pop
pop
fnclex
or
dec
pop
aad
jge
and
stos
movsb
push
pusha
ret
fistl
test
mov
cmc
xchg
jne
cmp
mov
lahf
mov
loop
xchg
lods
cmpb
int3
push
inc
imul
sub
or
mov
push
jbe
inc
or
jmp
mov
addr16
daa
cmp
ljmp
add
loopne
inc
mov
filds
jl
or
mov
repz
adc
pop
mov
mov
push
and
pop
insl
cwtl
in
inc
fadd
pop
sub
xchg
vpsubw
dec
data16
int
inc
das
fwait
clc
xchg
subl
xlat
adc
xor
mov
xchg
bound
std
enter
test
call
lock
in
or
ss
cltd
pop
dec
inc
je
xor
or
scas
leave
xchg
shll
and
sbb
call
xor
push
cmp
jmp
dec
jecxz
outsb
out
dec
cmpsl
or
stc
arpl
stos
or
aam
test
out
pop
xchg
stc
inc
out
shrb
in
lcall
xor
bound
addl
add
enter
mov
push
pop
sub
sub
scas
pop
loop
push
push
shr
mov
sub
mov
push
pop
jnp
ftst
clc
out
cwtl
mov
inc
and
and
pop
call
in
jae
pop
or
sub
ja
fwait
xor
out
ret
rolb
push
das
and
sbb
jno
hlt
sbb
std
jmp
sahf
loop
test
stos
adc
mov
cld
scas
push
nop
xchg
lock
and
test
lahf
mov
daa
test
lret
and
cmp
popa
mov
enter
lcall
pop
jge
xchg
insb
aam
aad
aad
push
loopne
jl
push
testb
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
addr16
aad
inc
adc
sbb
adc
sbb
mov
push
loop
fwait
into
adc
fildl
xor
nop
les
aas
mov
inc
push
lret
push
test
clc
add
stos
cmp
add
in
lcall
fwait
adc
or
ret
lcall
mov
imul
sbb
adc
push
fisttpll
push
mov
lcall
sbbl
test
and
aas
jge
loope
xchg
sbb
lret
adc
gs
clc
ja
lock
movsl
aad
lret
and
sub
mov
cmp
jne
adc
cmp
jae
xor
imul
mov
and
iret
adc
shll
sub
pop
insb
rcrl
mov
add
in
dec
and
mov
mov
push
mov
mov
mov
roll
jg
shr
std
mov
stos
xchg
ret
jecxz
test
sbb
mov
pop
cmp
shl
scas
insb
shr
sub
xor
int3
jne
mov
adcb
cmp
jg
push
and
jbe
fcoml
or
cmp
push
pop
sub
rclb
pop
and
ret
sub
ljmp
insl
rorb
loope
sub
aaa
out
aad
js
bswap
jle
mov
je
sub
xor
pusha
or
jg
inc
mov
mov
xchg
push
sub
stos
push
sahf
stos
lock
call
icebp
call
mov
stc
loop
lock
pop
into
loopne
je
loope
xchg
ljmp
cld
shll
mov
xchg
or
jns
fisubrs
mov
imul
dec
mov
fbld
cwtl
cmp
push
sub
sbb
jmp
cmp
dec
pop
or
inc
bound
mov
inc
loope
dec
int
sub
lds
pop
or
call
idivl
lahf
cmp
test
pop
mov
sbb
jge
or
mov
inc
inc
lock
sub
std
out
mov
xchg
lods
xor
mov
and
xor
loope
repz
sub
push
mov
cmp
jae
addr16
cli
cmpsl
xor
mov
pop
in
sbb
dec
sbb
jns
dec
dec
aaa
test
repz
adc
xchg
xchg
aam
inc
test
cli
gs
inc
jno
mov
sub
jno
les
push
cmp
stc
js
mov
lret
pop
xchg
or
gs
ror
ret
ret
lock
xchg
mov
in
mov
lods
xlat
lahf
cmp
cmp
sar
inc
les
dec
jne
and
lods
mov
cmc
int3
push
enter
js
out
jno
mov
or
pop
hlt
insb
rolb
lret
cmp
cmp
xchg
xchg
pop
dec
fnstenv
mov
jmp
imul
insl
push
or
mov
xor
cmp
dec
pushf
loope
roll
lret
sbb
int3
mov
scas
mov
nop
jecxz
in
insl
adc
shlb
repz
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
stos
sub
sbb
adc
sbb
movsb
mov
mov
push
pop
fisubl
xchg
mov
or
jmp
sbb
or
cmpsb
cmp
xor
movsb
adc
jne
test
lcall
push
cld
pop
rorb
aaa
push
test
not
mov
lahf
mov
decl
inc
repz
push
out
inc
cmp
inc
or
fsubs
fiaddl
aam
fildll
pushf
enter
cli
stc
and
cmp
and
jge
mov
int
scas
iret
push
shrb
push
rcl
pop
popa
mov
mov
mov
or
pop
mov
jne
rclb
xor
orl
xchg
fs
push
hlt
lock
rcll
mov
aas
xchg
stos
adc
sbb
int
jle
stc
sub
lcall
dec
jmp
loope
mov
inc
add
inc
imul
out
sub
or
aas
movsb
mov
push
in
push
mov
loop
clc
cltd
aad
pop
aam
sahf
leave
clc
jl
int3
cwtl
imul
jns
scas
push
jmp
mov
mov
push
dec
mov
fld1
push
sti
xchg
imul
mov
adc
xor
aaa
enter
lret
xchg
sarl
fwait
ret
inc
mov
sbb
inc
cmp
jnp
scas
cwtl
pop
dec
mov
shlb
xor
dec
shrb
scas
cmp
bound
pop
inc
into
insl
popa
dec
jecxz
mov
lods
loope
movsb
movsl
push
lock
cmpsb
pushf
dec
xor
sbbl
mov
pop
xchg
jge
test
inc
mov
xchg
insl
cwtl
jl
lods
stos
mov
pushf
mov
or
pop
loopne
mov
sub
loopne
test
sarb
pop
jae
jnp
pushf
enter
nop
sbb
inc
pop
sub
out
mov
or
pop
out
pop
loopne
fstp
into
in
call
fwait
jp
or
inc
cwtl
push
cmc
cltd
mov
or
adc
and
pop
cld
das
int3
inc
lahf
movsb
icebp
jmp
in
mov
pushf
mov
ret
mov
data16
insl
les
insb
clc
rorl
xchg
mov
pop
les
addr16
out
out
push
aam
mov
sub
int3
aam
push
arpl
icebp
dec
fldz
jbe
push
nop
aaa
inc
outsl
loope
orl
or
or
sbb
fcompl
int
dec
jmp
imul
xchg
scas
shll
jle
in
imul
ss
psubsb
cmp
sub
push
in
lea
hlt
shl
int3
inc
jne
dec
inc
fstpl
shr
pop
loope
movsb
out
jmp
mov
js
mov
or
cmp
mov
lods
push
add
test
movsb
icebp
ds
lods
fsub
bound
or
insb
cld
push
dec
push
js
xchg
cmp
or
pop
pop
jae
jb
add
or
es
fdivs
testl
xor
sbb
pop
out
add
mov
jg
clts
dec
adc
jmp
fdivl
shrl
jle
mov
sub
or
push
cvtps2pi
mov
subl
jmp
mov
push
in
xor
xchg
gs
sbb
sbb
or
aas
fisttps
addr16
xchg
jns
add
pop
sbb
loope
dec
fsubp
ljmp
sbb
das
mov
push
or
ljmp
hlt
out
std
adc
in
push
or
pop
hlt
xlat
inc
rol
fstl
hlt
xor
mov
cmp
cmpsb
imul
aaa
add
stc
lods
out
das
and
jmp
rcl
or
fnsave
mov
out
jg
lcall
loope
mov
pop
pop
sbb
mov
mov
je
hlt
push
test
dec
sub
inc
push
mov
push
sub
insl
mov
adc
jle
data16
dec
push
cmpl
push
in
test
add
in
pop
xchg
lock
shll
and
pop
loopne
outsl
inc
jp
and
pop
aas
mov
lret
aas
sahf
ret
or
loop
shlb
fnsave
popf
dec
jne
std
shrl
ja
or
loop
or
out
mov
jg
int3
xor
imul
xor
sbb
push
sbb
dec
in
sbb
jmp
out
or
lret
adc
sub
rcr
shlb
cmp
mov
inc
pop
cwtl
push
pop
adc
mov
fbld
sbbl
shr
or
add
mov
aam
aas
int
push
pushf
ror
jno
mov
repz
push
faddl
xchg
mov
sbb
or
rorl
xor
xchg
push
iret
inc
add
enter
nop
sti
icebp
aam
lret
push
pop
inc
addb
add
fldt
jbe
jle
sub
call
add
jb
les
mov
mov
es
dec
mov
iret
xchg
fldt
mov
pop
icebp
mov
inc
cmp
and
mov
faddl
clc
push
hlt
mov
jmp
mov
mov
in
inc
stos
add
xchg
es
xchg
inc
push
adc
sub
xchg
mov
movsl
or
push
incl
stc
hlt
idivb
cmc
pop
and
mov
rol
xor
ja
inc
int
cmp
in
ss
adc
mov
pushf
push
pop
mov
mov
clc
stc
in
xchg
pop
xchg
cmpsb
push
xchg
cmp
lret
add
jge
pop
inc
xchg
push
and
add
pop
pop
pop
dec
pop
cmpsl
cld
or
jae
lock
mov
mov
inc
dec
test
jmp
daa
cmp
int
mov
jnp
popf
test
push
movsl
mov
fisttps
cmpsl
pop
lea
mov
out
add
adc
cmp
sub
dec
inc
scas
xchg
or
inc
xchg
push
notb
inc
js
js
mov
imul
inc
inc
xor
fsubrs
jae
rorl
pop
sbb
jecxz
lahf
xchg
or
jbe
xorl
out
ficoml
fildll
cmp
jnp
mov
ret
add
xchg
daa
movzbl
push
push
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
das
mov
push
sbb
jne
btr
cmpl
add
std
in
inc
add
adc
cmp
lods
sub
or
cmp
iret
imul
adc
cld
lods
mov
add
jo
mov
adc
imul
fs
pop
cld
adcb
mov
lds
lahf
mov
push
or
push
and
and
subb
xchg
jbe
jle
mov
dec
cmpsl
mov
int3
cmp
lods
jle
les
aad
sbb
push
jp
inc
pusha
imul
xchg
ret
cmp
jbe
xor
sub
aas
into
xchg
adc
xor
pop
ljmp
addb
dec
divl
jae
in
mov
call
and
xchg
cmpsb
mov
jge
xchg
pop
in
stc
pop
adc
out
ja
jbe
dec
pusha
dec
aam
shlb
xor
std
adc
cmpsl
in
push
movsb
xchg
or
add
shlb
enter
or
ret
pop
loopne
xchg
cmpsl
icebp
inc
notb
mov
sti
and
jg
call
jecxz
aaa
call
sub
cmp
inc
xor
cmp
and
inc
pushf
mov
pop
mov
nop
inc
testl
inc
lcall
xlat
lock
adc
sbb
pop
jns
or
sub
jae
fldt
or
fidivrs
dec
loope
imul
and
test
subb
daa
or
adc
xor
and
test
mov
cmp
add
add
sbb
pop
mov
aam
push
or
fisubs
jle
xlat
xchg
xchg
pushf
out
js
adc
jae
xchg
nop
popf
ja
mov
mov
push
mov
fwait
dec
stos
fbstp
sbb
xor
or
bnd
pop
mov
cld
inc
mov
mov
out
iret
mov
or
cld
cmpsb
div
fsubrl
cld
ja
enter
pop
cmp
adc
pcmpeqd
jp
test
ja
sub
fucomp
es
daa
lcall
js
fs
inc
and
add
in
add
je
dec
cld
cmpsb
stos
ds
dec
mov
mov
icebp
stos
add
sub
data16
rcrb
hlt
daa
adc
cmp
pop
movsl
xor
fcom
inc
adc
in
fdivr
aaa
mov
add
enter
fiaddl
in
add
sub
int
gs
add
int
dec
pop
cmp
mov
addr16
adc
add
and
loop
push
cwtl
ret
aas
cs
mov
daa
pop
jmp
fidivrl
loop
sub
or
xor
arpl
jns
data16
jb
lcall
jle
add
cld
jns
dec
xchg
cmpl
jbe
xchg
cmp
hlt
loop
inc
fchs
data16
adc
lds
xchg
sbb
dec
xchg
pop
mov
mov
into
mov
arpl
stos
sub
xor
mov
xchg
dec
js
jmp
repnz
mov
push
popl
das
or
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
imul
jle
notb
sbb
adc
sbb
cmp
stc
pop
fs
push
adc
fldl
pushf
push
mov
sub
cmp
add
js
shr
and
inc
fldz
jne
and
push
xchg
jne
mov
outsl
xchg
loope
sub
stc
inc
stc
leave
cwtl
xchg
pusha
loop
or
ja
pop
mov
movsl
pop
std
mov
and
jo
rorl
test
lahf
gs
lret
rorl
add
jbe
mov
in
cmc
ss
push
lret
push
mov
push
stos
mov
xchg
pop
xchg
sub
out
push
dec
repnz
mov
mov
push
sub
xchg
sbb
push
add
dec
out
jnp
aad
aam
cli
insl
cmpsl
dec
cmc
movsl
stos
pop
js
dec
movsb
popf
jle
pop
push
xor
popa
and
ljmp
es
lcall
and
push
cmp
inc
cmp
or
adc
or
xor
inc
sbb
ja
popf
inc
test
dec
cmc
jp
push
dec
call
mov
pushf
mov
pop
xchg
dec
pop
inc
dec
cmp
stos
mov
inc
test
pop
mov
inc
or
fs
xor
pop
inc
andb
ljmp
dec
inc
add
fsub
adc
lds
insb
lods
push
test
sbbb
imul
xor
stc
mov
sub
or
in
out
aas
imul
ljmp
fisubl
push
xor
test
test
arpl
sbb
lds
mov
jmp
flds
imul
loopne
cmp
cli
adc
sbb
hlt
pop
mov
inc
cmpsl
push
icebp
jecxz
push
push
or
mov
sub
test
les
cmpsb
inc
sub
aas
lret
in
stos
mov
out
mov
xchg
or
lods
adc
add
sahf
mulb
icebp
out
insl
adc
lods
inc
dec
or
and
add
xchg
pshufw
ss
mov
sbb
sbb
push
insb
xor
ss
mov
mov
nop
adcl
adc
ror
jo
xor
xchg
sub
cs
aaa
add
bnd
mov
daa
mov
out
jns
jmp
cmp
adc
xchg
rcll
pop
push
mov
shrl
ret
out
sub
mov
ficompl
fwait
test
pop
popf
mov
cwtl
in
iret
mov
add
outsb
lock
mov
ss
cld
cmc
stos
les
cltd
mov
rcll
aas
ret
outsl
mov
push
imul
xchg
out
inc
inc
test
mov
dec
sbb
xchg
fisubl
out
xor
pop
scas
sar
xchg
inc
add
cld
clc
stos
lcall
loope
dec
inc
inc
mov
lds
or
out
jl
sub
icebp
jno
lods
das
popa
icebp
mov
mov
pop
fdivr
cld
and
inc
test
jp
add
or
sarl
xchg
enter
xchg
addr16
add
je
add
repz
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
pop
divb
lcall
add
and
inc
inc
daa
jnp
mov
mov
sbb
xchg
push
cs
loop
push
mov
movsl
xor
imul
xlat
addl
ret
mov
push
or
pusha
lret
pop
and
ds
push
loop
cwtl
pop
xor
popf
lar
pop
pop
out
es
scas
jmp
popa
int
loope
pop
das
shlb
push
mov
imul
cld
xor
mov
imul
and
test
lods
sti
pop
add
daa
dec
xchg
stos
sbb
outsb
mov
mov
por
pop
pop
aad
into
dec
pop
push
xlat
mov
sbb
aad
sbb
loopne
shrb
and
mov
xor
lahf
addr16
push
adc
outsl
popa
sub
add
bound
outsl
adc
cmp
inc
test
and
idivl
andl
pop
mov
add
lret
stos
push
lock
fdivrl
sbb
nop
mov
loop
popa
std
lahf
xlat
test
push
loopne
pop
jb
fld
push
insl
jae
addr16
or
cmovp
das
xchg
popf
xchg
dec
arpl
push
insb
sub
sub
or
xlat
adc
ljmp
lahf
add
adc
arpl
pusha
dec
inc
test
lahf
xorl
xchg
insl
cmp
mov
addr16
mov
inc
ss
rep
jne
icebp
into
push
pop
mov
add
push
push
mov
pop
icebp
lahf
popf
xchg
sbb
decl
fcomp
cwtl
jns
mov
insl
dec
dec
inc
int
inc
shll
bound
or
cmpsb
test
xor
push
pop
mov
push
aas
mov
icebp
jp
dec
rcrb
sti
int3
jns
xchg
into
fmul
outsb
sbb
mov
movsl
dec
bound
ret
pop
repnz
inc
xor
mov
jg
fdivrs
cld
inc
bound
mov
fnstsw
loope
in
out
cltd
fisubs
sub
insl
pushf
icebp
lods
loope
xchg
jmp
dec
and
dec
inc
inc
insl
cmp
and
sub
xchg
arpl
pop
negl
adc
mov
fucomi
push
shll
out
xchg
add
jle
imul
stos
lcall
cmp
bound
jnp
add
lret
iret
dec
clc
and
iret
push
inc
xor
arpl
xor
mov
aaa
out
sub
push
addl
out
cmp
js
dec
test
test
cltd
ret
xchg
in
inc
cld
and
int3
mov
lods
out
sub
mov
mov
jge
xorb
sub
cs
sub
pop
inc
inc
add
jns
xor
jnp
xor
divl
mov
jmp
sbb
or
stc
adc
sub
pop
inc
cmc
mov
mov
jno
shll
je
cmp
insb
ss
out
fsub
clc
xor
inc
je
sbb
mov
cs
daa
sbb
orl
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
mov
cltd
mov
sbb
sbb
push
orl
jge
inc
cmp
jns
test
add
push
mov
mov
mov
icebp
push
orb
aam
sbb
cmpsl
call
mov
pop
jmp
push
or
sarb
dec
cs
mov
add
push
sub
sbb
sbb
sub
jge
sub
testb
fidivrs
pop
ljmp
call
filds
es
lret
les
pop
push
dec
mov
add
cmp
sti
or
mov
in
jb
sarb
add
test
jb
sub
mov
in
aaa
push
mov
jge
dec
mov
scas
xor
pop
mov
subb
mov
push
in
fiadds
testl
in
in
hlt
mov
cmpsb
mov
fsubrl
std
mov
mov
stos
jmp
mov
and
xor
lcall
cld
inc
lcall
and
xor
shll
add
add
lret
xor
mov
ljmp
rcrb
cmp
shll
jne
jb
addr16
adc
mov
lcall
xchg
jne
ficoml
inc
test
rcll
push
fistpl
in
test
add
stos
add
ficoml
inc
ja
sarb
xchg
leave
push
lds
push
loop
push
adc
or
repnz
sbb
pop
adc
js
mov
mov
mov
and
xchg
mov
lods
nop
pop
data16
jae
xchg
int
and
cmp
loop
cwtl
mov
pusha
aad
xor
push
jp
pop
sbb
shll
fs
pop
and
in
lcall
sub
mov
pushf
mov
and
inc
inc
ja
lds
movsl
xchg
sub
push
cmp
or
addr16
and
sub
pop
addr16
pop
fisubs
pop
and
in
fs
cmpsl
ss
das
dec
aaa
push
js
mov
or
stos
mov
mov
or
pushf
mov
mov
lret
sbbb
adc
jle
lods
fsts
push
std
push
push
sub
push
and
pop
imul
cld
aas
mov
mov
fwait
inc
cld
lods
es
ds
sbb
adc
push
movb
fistpll
in
jge
inc
addr16
cmp
mov
xchg
in
aaa
add
xchg
lock
jae
inc
cmp
cmp
clc
or
jmp
pop
mov
jmp
test
xchg
sub
daa
push
std
call
add
jns
cmp
mov
js
fidivrl
push
adc
jo
fldcw
jmp
mov
pop
cmp
in
inc
arpl
pop
stos
fadds
adc
xor
in
cmp
mov
mov
adc
scas
jge
inc
and
mov
xor
fs
test
inc
pop
sbb
add
stos
adc
cmpsl
call
xchg
pop
inc
jmp
popf
cmovbe
lret
inc
jnp
popf
mov
aam
loope
cmp
jb
mov
dec
in
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
dec
jle
loope
sbb
adc
sbb
or
test
in
mov
sbb
lods
xor
mov
jg
sbb
mov
test
jg
cmpsl
mov
and
lods
sar
daa
jne
pop
inc
lret
stos
and
int
add
sbbb
rorb
pop
xor
dec
xchg
in
or
mov
xchg
inc
pushw
sti
mov
mov
dec
cmp
pop
xchg
test
adc
push
xor
cmc
dec
mov
push
add
sub
fisubrl
xchg
mov
ret
flds
lea
xchg
aad
jge
inc
mov
scas
lahf
adc
iret
ja
repz
mov
fldenv
mov
mov
push
lock
jl
in
mov
fwait
pop
mov
mov
or
adc
push
push
mov
dec
inc
pusha
or
idiv
fucomi
test
xor
and
mov
into
cmp
jns
aaa
ds
jle
jns
outsb
xchg
jae
push
out
jecxz
fwait
neg
sub
jno
mov
xor
iret
jae
push
icebp
xchg
xchg
sahf
out
cmpsl
shrl
fistl
inc
shlb
icebp
xchg
jle
dec
and
adc
mov
and
jp
dec
push
adcb
dec
and
lahf
push
cmp
outsb
xor
dec
inc
push
mov
cld
xchg
shlb
push
mov
dec
inc
out
pop
xchg
rcr
int3
dec
and
imul
pusha
and
into
dec
pminsw
call
xchg
ficomps
add
xor
jo
addr16
or
jo
movsl
xchg
testb
fnsave
aas
mov
dec
lock
loopne
fmul
sub
cmp
and
imul
rcll
scas
add
or
sub
js
std
insl
jg
nop
cmpsb
mov
dec
or
xor
sub
dec
push
scas
adc
repz
cmpsb
pop
mov
or
test
xor
mov
dec
dec
vpsllq
mov
jb
mov
jno
add
cmp
decl
mov
sub
adc
std
adc
xor
xor
pop
sbb
inc
sub
shll
out
movq
lret
or
arpl
lret
xchg
data16
sbb
add
mov
test
xchg
hlt
mov
jo
ljmp
ss
notb
aam
or
mov
inc
inc
pop
jae
push
shlb
pop
or
insl
xchg
adc
mov
hlt
push
outsb
pop
std
sarl
jae
bound
enter
divb
add
repz
add
push
xchg
add
sub
xor
rcrb
ljmp
shrl
add
lds
stos
push
xor
notl
ficompl
xlat
test
push
enter
out
test
divb
outsl
into
mov
stos
mov
repz
outsl
mov
pop
in
orl
or
movsl
sbb
insb
pop
sti
xchg
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
in
or
jle
fistl
sbb
adc
sbb
pushf
sbb
pop
es
out
lcall
daa
mov
fiaddl
test
xor
xchg
cmc
pop
addb
push
inc
arpl
hlt
pop
pop
hlt
iret
adc
sbb
push
jmp
add
data16
pop
jle
jb
xor
jo
add
jne
lret
cmp
scas
ds
mov
pop
popf
outsl
mov
lret
mov
imul
sbb
pop
leave
test
gs
repnz
ljmp
mov
dec
aam
xchg
push
or
jmp
insb
lret
int3
xchg
sbb
jmp
in
lret
lods
lock
jg
or
cmp
dec
mov
cwtl
add
imul
jne
lock
mov
sbb
and
mov
testl
nop
push
xchg
cs
jp
add
out
ljmp
movsb
push
mov
out
and
pop
pop
lcall
mov
mov
enter
add
mov
xor
pop
jne
repnz
lods
aas
xchg
mov
dec
mov
mov
cltd
jp
test
add
adc
in
sbb
test
pop
fbstp
adc
mov
ljmp
test
xchg
pop
into
add
aaa
mov
loopne
add
xor
mov
xchg
adc
or
cmp
dec
pop
int
es
fbld
mov
mov
pop
sub
push
xor
fldcw
div
mov
mov
imul
fmul
pop
int3
outsl
aas
xchg
fbld
jl
xor
push
and
push
sub
imul
orl
popf
mov
adc
xor
test
jp
adc
mov
arpl
aad
test
clc
sub
es
xchg
inc
sbb
lea
icebp
inc
mov
sbb
cli
fwait
cwtl
movsb
int3
jl
shll
mov
ss
test
es
jg
dec
test
pop
outsb
ja
jge
insl
in
jp
stc
bnd
inc
imul
in
add
push
popf
in
adc
mov
jae
inc
enter
dec
enter
and
aas
das
push
imul
stc
sbb
or
iret
enter
fstpt
jo
mov
rol
ds
insb
ret
cli
mov
cmc
movsb
shll
cmp
push
pop
mov
ret
adcl
setbe
arpl
dec
dec
daa
or
aam
pop
cld
xchg
mov
pop
adc
lcall
sub
push
icebp
icebp
loopne
loope
sub
popa
cmpb
out
sbb
jb
sbb
dec
cmpsb
and
inc
and
push
mov
lret
dec
or
push
xor
or
push
xlat
mull
lahf
dec
pop
ficomps
push
js
in
inc
sub
xchg
fstps
inc
or
cmp
orb
test
inc
xchg
sub
fisubrl
mov
jo
stos
mov
sub
dec
dec
adc
cmpsb
jp
stos
aas
in
clc
mov
or
loopne
ss
sbb
mov
push
and
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
stos
je
jl
rcll
sbb
adc
sbb
insb
mov
xor
mov
imul
cli
mov
or
adc
jb
in
repz
repz
sub
data16
or
mov
xor
mov
das
fcompl
pop
pusha
sub
or
lret
jge
lods
or
daa
imul
pop
add
jno
push
push
sub
pop
jge
cmp
push
or
jne
popa
fisubs
mov
test
add
jns
xlat
test
lret
out
push
das
test
jg
dec
and
mov
test
mov
fisubrs
aad
movsb
loope
mov
xor
icebp
jg
jl
mov
pushf
add
jmp
mulb
pop
xchg
sub
cs
push
pop
adc
call
xor
fwait
ds
orl
ljmp
jmp
adc
or
mov
push
add
in
dec
popa
jb
loope
push
push
ja
inc
scas
dec
sarl
mov
mov
fimull
out
arpl
sbb
test
stc
scas
call
mov
pop
aad
dec
pop
lret
fdivs
out
add
in
std
and
pop
imul
push
mov
pop
leave
stc
aaa
dec
leave
fisubs
or
mov
lret
pop
dec
test
xchg
bound
enter
lea
cltd
fimull
shrl
fcoml
adc
dec
mov
icebp
or
dec
xchg
mov
out
mov
mov
adc
iret
into
sarb
adc
jnp
sbb
in
into
outsl
cmp
mov
in
shlb
and
test
hlt
jmp
in
xorb
idivl
and
cmp
mov
fldenv
int
cmp
inc
rcrl
sahf
dec
adc
in
or
push
inc
or
mov
mov
iret
jbe
cmp
ja
outsl
lcall
cld
add
rclb
or
add
cmp
inc
hlt
arpl
add
xchg
test
icebp
imul
or
push
push
testb
jb
fs
or
and
les
mov
nop
es
sub
dec
mov
mov
jp
movsl
lods
or
gs
cmp
or
xor
pushf
push
scas
mov
jae
push
mov
pusha
pushf
jle
test
and
iret
test
sub
cwtl
xor
mov
mov
mov
test
jb,pn
mov
mov
and
cmpsb
ficoms
mov
sub
orl
bound
aam
add
in
cmp
je
cmc
adc
mov
mov
sub
pmullw
icebp
push
add
adc
ljmp
xor
in
adc
cmpsl
fiadds
ret
pop
add
addr16
dec
iret
jo
lods
inc
pop
push
adc
jecxz
xor
int
dec
mov
mov
test
sub
dec
vhsubpd
iret
xor
xchg
fildl
in
stc
push
cwtl
inc
leave
adc
sub
aas
mov
mov
std
jmp
nop
push
pushf
cmp
add
insb
imulb
clc
fldl
push
and
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
dec
ret
jl
int
sbb
adc
sbb
and
adc
roll
pop
lret
inc
aad
bound
add
test
mov
loopne
outsl
xlat
dec
mov
fwait
jns
mov
and
divb
js
mov
call
mov
pop
dec
or
xchg
cmp
std
push
jl
adc
nop
and
lods
cmpsb
in
xchg
mov
je
xchg
adc
push
mov
leave
sbb
fwait
jb
mov
sbb
dec
popl
or
xor
pop
bound
lods
loope
push
add
lock
bound
popa
push
repnz
mov
add
pop
cmpsl
xor
jns
sbb
xor
add
es
lea
cmp
lea
and
cmp
scas
inc
mov
js
fwait
je
fwait
sbb
adc
mov
push
in
xchg
fnstenv
sbb
lahf
sub
jnp
jb
ret
mov
inc
xchg
leave
mov
adc
fistpll
sbb
in
insb
popf
test
mov
int3
sbb
pop
sub
stos
mov
dec
sbb
and
xor
add
into
mov
or
in
and
repz
cmpsb
in
addr16
xchg
test
push
rol
jl
cmc
cmp
sub
jns
std
mov
mov
cmp
push
into
inc
out
mov
xlat
fucomp
dec
adc
popf
aas
mov
call
xchg
jmp
lods
sahf
cmp
push
imul
cmp
movsl
cmpb
imul
les
push
adc
shl
jle
cmp
aaa
addb
xor
and
push
loope
test
call
mov
test
adc
dec
test
pusha
scas
cmp
push
ds
pop
xor
cld
push
dec
jbe
dec
cmp
or
sti
xorl
and
xchg
push
push
scas
lcall
jg
repz
mov
adc
pusha
jae
jmp
cli
xchg
hlt
push
pop
fmuls
lcall
ds
addr16
add
sbb
mov
dec
mov
adc
cmovs
cmp
jns
mov
rep
or
js
add
rclb
inc
push
xor
xor
ja
inc
dec
xchg
mov
and
lret
addr16
xchg
push
cmp
sub
adc
and
in
pop
mov
jnp
fistps
shll
mov
dec
xchg
mov
adc
sbb
mov
ret
arpl
sub
mov
sbb
xchg
xor
mov
clc
mov
ds
fsubl
dec
pop
out
inc
int3
mov
mov
push
cmp
ss
dec
mov
sub
mov
pushf
repz
popa
push
movups
jp
dec
cmpsl
mov
popf
mov
in
or
dec
xchg
scas
test
int
jg
dec
jle
out
xor
lds
inc
movzbl
idivl
fs
imul
dec
pop
js
in
aaa
aam
mov
lods
jecxz
push
mov
sahf
push
dec
dec
out
push
sub
lds
xchg
inc
inc
arpl
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
mov
mov
sbb
sbb
mov
divb
gs
adc
and
mov
pop
insl
shrl
xor
int
sahf
int3
or
call
dec
xchg
jae
iret
adc
ss
rolb
icebp
dec
gs
ljmp
xlat
aam
aad
mov
pop
mov
mov
pop
clc
mov
pop
cmp
sbb
push
and
add
or
cmp
jb
xchg
lods
push
push
imul
je
imul
test
xchg
jne
inc
in
push
je
scas
addl
add
adc
dec
xchg
je
ret
pop
repz
push
mul
aam
jns
or
sbb
popf
xchg
jno
mov
pop
and
mov
insb
repz
xor
out
repz
vunpckhps
in
pop
insb
add
jns
aam
xchg
add
out
sbb
add
shll
mov
xor
push
inc
sbb
mov
jnp
jmp
rorb
sbb
jae
xor
or
sub
cmc
inc
loope
ljmp
int
lods
and
sbb
dec
xchg
push
jp
mov
insb
mov
adc
cltd
mov
pop
xchg
cmpsl
out
xchg
xor
cld
or
jmp
add
cmp
sub
repnz
or
sbb
stos
or
xchg
sbb
push
sub
lret
out
shll
test
push
mov
sahf
out
mov
mov
pop
inc
mov
mov
stc
dec
cmpsl
push
leave
mov
repz
mov
mov
hlt
or
inc
outsl
push
or
testl
xchg
test
iret
loop
sub
in
shll
mov
cmp
mov
push
movsb
add
xor
jmp
test
push
push
xor
add
call
sbb
add
rcll
xchg
rcll
ss
sbb
jg
sbb
cmpsl
jle
cmp
xchg
pop
sub
inc
mov
jnp
aaa
ja
jns
andl
sahf
or
xor
sbb
and
pop
pop
adc
mov
mov
mov
fwait
shll
jns
fcoml
xchg
jno
inc
or
lcall
jp
pop
shlb
stc
adc
push
popl
jno
fmul
ficompl
xor
popa
jbe
pop
or
or
or
inc
pop
lret
mov
sub
das
repz
mov
je
adc
and
jae
fld
xor
sbb
pop
xor
pop
enter
push
cld
imul
fs
mov
and
shrb
mov
shll
pop
adc
sub
and
mov
pop
sbb
lock
inc
lods
or
xor
daa
insl
loopne
cmpsl
add
sbb
aas
lret
ss
inc
pop
push
mov
cmp
xchg
ds
jmp
and
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
sbb
sbb
jmp
inc
mov
js
inc
fisubs
fidivl
aas
pop
pop
pop
inc
insl
lret
cmp
lods
ret
scas
loopne
fdivrl
mov
daa
push
mov
mov
pop
stos
mov
push
jg
or
cltd
aad
jecxz
jp
popf
cltd
cltd
adc
and
cmp
jg
and
sub
push
or
je
or
xchg
pop
jl
outsb
cltd
lcall
mov
xor
leave
sbb
sbb
iret
icebp
fiadds
scas
xlat
aaa
mov
or
jge
mov
mov
cmc
and
lahf
add
dec
xchg
push
and
shll
xchg
sub
jmp
add
enter
xlat
gs
and
jl
push
mov
xchg
ljmp
stc
adc
sahf
fs
int3
fs
fbstp
inc
mov
loopne
call
ret
cmpsb
xor
and
mov
cmp
pop
jno
xchg
adc
add
xchg
dec
cmove
mov
xchg
adc
std
and
test
push
cs
xor
std
jg
popa
add
icebp
mov
add
adc
sbb
xchg
mov
arpl
das
es
pop
incl
pop
or
ja
xor
aad
insb
enter
sahf
rcrl
jle
adc
jge
and
mov
dec
shlb
mov
inc
cmp
cs
sarl
mov
adc
cmpl
jg
push
aas
cmp
inc
inc
cmp
icebp
cmp
jbe
pop
push
mov
jp
mov
pop
cli
xlat
je
mov
jmp
adc
and
jl
xchg
stos
xor
and
adc
inc
jmp
loope
adc
lea
fst
inc
inc
mov
inc
pop
fsubs
jp
dec
aas
or
or
scas
or
pop
sbb
jns
sub
sub
stos
in
or
push
enter
stc
xchg
jnp
insl
pop
sub
mov
mov
sbb
int
ljmp
jg
ja
ret
xchg
inc
jmp
pop
out
dec
iret
push
aaa
xchg
fcmovb
rorb
mov
mov
adc
mov
les
or
ljmp
ror
psubusb
stos
lcall
push
addr16
dec
fisubrs
scas
lods
cs
outsl
add
jno
inc
fnstenv
es
ja
xor
or
sub
pop
pop
lods
jno
repz
mov
std
xor
inc
sub
inc
int3
pushf
lcall
adc
das
jge
inc
fdivr
sbb
ret
adc
outsl
or
push
xor
cmp
fldenv
sar
stos
mov
rcrb
jns
sbb
icebp
int3
sahf
and
mov
js
bound
jne
fstpt
mov
ds
dec
call
mov
and
push
push
sti
jge
out
stos
imulb
movl
insl
add
aad
dec
pop
out
lcall
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
jbe
es
fisttpl
pushf
pop
aad
dec
fisubrl
fwait
xchg
jnp
xor
rolb
iret
push
jg
xchg
pop
inc
cmp
out
cmp
xchg
pushf
in
jge
cmpsl
mov
js
insb
cs
sbbb
test
lea
pop
mov
jo
sbb
pop
push
xlat
icebp
outsl
enter
or
mov
jmp
cwtl
orl
push
test
or
popa
lcall
cmp
stos
jbe
movsb
dec
into
imul
sub
ret
push
dec
mov
inc
mov
pusha
popf
jo
into
popa
lahf
cmpsl
jae
mov
ficoml
rcl
xor
lret
sahf
jmp
sbb
push
pop
mov
test
xor
rcrb
mov
dec
mov
mov
jne
jns
test
test
and
mov
cmpl
faddp
bswap
xchg
dec
pop
cli
fnstenv
aas
xor
leave
mov
push
repnz
sbb
addr16
pop
fwait
lahf
mov
mov
mov
jmp
fs
sub
cmpsb
lahf
pusha
xchg
int
pushf
inc
push
pop
movsb
adc
in
iret
adc
and
pop
fcompl
add
sbb
hlt
push
imul
pop
cld
nop
outsb
mov
jecxz
les
insl
loope
mov
icebp
nop
insl
push
fimull
int3
jae
movl
push
movsb
mov
inc
or
cmp
dec
xchg
push
pop
data16
xchg
xor
addb
add
cld
jg
test
mov
das
loop
xchg
add
adc
mov
dec
mov
gs
lret
out
rclb
out
rolb
int3
xchg
fidivl
cmpsl
cmp
fidivs
mov
lods
das
sub
push
dec
cmc
popf
jno
aas
fimuls
xor
mov
mov
mov
pop
lret
dec
test
or
ds
jb
cmc
dec
jnp
dec
test
adc
mov
ret
push
xchg
outsb
push
pop
insb
mov
cltd
xchg
sbb
xchg
andl
fs
clc
jmp
push
xchg
sbbl
dec
and
mov
fwait
jns
sbb
sahf
xor
xchg
shlb
ss
push
cs
lret
add
push
out
dec
gs
out
adc
fwait
ds
mov
or
xchg
imul
jb
xchg
stos
fcoms
jp
stos
and
hlt
aad
xchg
fs
clc
mov
or
in
daa
mov
jmp
fcompl
hlt
insl
mov
sbb
mov
jno
adc
pop
stos
mov
movsb
insb
fdivs
xchg
fcoms
xor
rorl
cmp
dec
push
jge
iret
int3
out
insl
cmp
push
jl
jae
and
push
stc
cltd
push
push
pop
push
xchg
dec
mov
lock
subb
rclb
adc
mov
fidivrs
syscall
loope
les
lods
jmp
add
arpl
cld
mov
cmp
es
sbb
pop
lods
std
pop
insb
mov
lret
hlt
add
insb
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
and
pop
clc
and
jbe
cmp
rol
stos
gs
mov
xor
mov
cltd
lods
fiadds
inc
mov
movsl
lret
in
push
mov
js
add
pop
mov
sahf
sbb
addb
cmpb
adc
jle
mov
in
scas
cmp
and
loop
mov
ljmp
sahf
bts
xor
cmpsl
cld
insl
sub
mov
or
mov
mov
adc
and
and
push
inc
lods
pop
or
enter
cli
mov
mov
jnp
in
and
cmpl
imul
cmpsb
je
out
push
jb
and
pop
lds
add
push
hlt
lcall
jl
test
adc
sub
dec
test
in
addr16
mov
push
dec
sbb
mov
mov
je
insl
dec
cli
scas
mov
aam
negb
sub
mov
insb
cli
push
repnz
lock
inc
or
push
mov
push
outsb
xor
in
dec
mov
enter
mov
imul
xlat
or
enter
je
int
rcrl
and
add
mov
hlt
mov
bound
out
or
xchg
lahf
xor
sub
lret
bound
fsubrl
xchg
insl
pop
adc
cs
mov
aaa
pop
push
jae
pop
das
sub
out
ss
popa
fwait
adc
sbb
imul
fiaddl
mov
sub
cli
push
iret
pop
mov
scas
jp
push
jp
inc
mov
xor
lods
mov
cltd
push
xor
in
pop
imul
fidivrl
xchg
mov
arpl
pop
or
call
scas
lret
cli
sub
jnp
int3
repz
push
loop
scas
stos
aaa
mov
xor
test
rcr
popa
cmp
clc
jo
cltd
mov
movsb
in
sub
sbb
or
jge
inc
and
sbb
test
cwtl
arpl
shrb
and
ljmp
inc
push
lcall
dec
pop
push
add
adc
push
ss
push
out
out
popf
in
fcomps
dec
push
mov
popa
addl
cmpsb
bound
cld
push
js
insb
mov
inc
in
imul
jmp
xlat
cmp
call
hlt
sbb
icebp
rol
add
out
scas
lret
adc
repnz
sub
or
mov
jne
jmp
movsb
mov
dec
or
leave
or
add
aas
mov
or
loopne
pop
dec
lock
push
movsb
sbb
mov
push
inc
arpl
test
add
loopne
xchg
stos
inc
fnsave
int3
fstpt
mov
xchg
mov
pop
adc
mov
roll
xor
out
push
jo
cmp
mov
addb
mov
mov
dec
jmp
pop
xchg
mov
lods
lea
mov
jg
add
stc
shrb
or
cmp
mov
and
add
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
xchg
test
push
test
sbb
into
scas
jnp
mov
movsl
and
rorl
lods
lods
sbb
ss
sbb
add
jmp
pop
cmp
cmp
lds
shrb
lock
sub
scas
xor
mov
dec
lock
jl
aas
sub
mov
pop
inc
mov
lods
sahf
push
gs
stos
mov
mov
and
enter
repnz
inc
fldenv
push
adc
xor
push
fwait
and
out
mov
cli
ljmp
push
adc
stc
pop
mov
in
aas
imul
inc
add
fiaddl
loop
sahf
mov
mov
push
in
mov
fidivrs
icebp
aad
shrl
xchg
fcom
mov
cli
sbb
pop
das
sbb
stos
ficompl
mov
outsb
test
ljmp
out
adc
aam
push
and
jl
pop
pop
lcall
cmp
add
orl
cmp
mov
adc
xchg
js
pop
les
push
sub
sub
lret
fdivp
jne
mov
jne
or
sarl
mov
dec
xchg
insb
adc
mov
stos
mov
mov
dec
pop
mov
in
int3
mov
in
pop
push
repnz
xor
movsb
sbb
sbb
jecxz
aaa
loop
lret
testb
jmp
movsl
out
das
or
dec
dec
scas
mov
jnp
push
ljmp
mov
cmpsb
adc
cmp
inc
cmp
bound
popa
dec
lods
xchg
fldenv
je
push
sahf
lret
in
cs
andl
movsl
jle
sub
das
adc
enter
cltd
cmpsl
ljmp
mov
push
dec
and
pop
inc
lret
addr16
out
cltd
out
or
or
sbbb
outsb
mov
sbb
inc
stc
daa
xchg
jo
cs
dec
insl
or
and
sbb
sub
push
orl
lea
jne
out
mov
fimuls
outsb
lea
insl
stos
xchg
xor
cmp
mov
adc
push
jecxz
int3
mov
in
scas
loopne
sbb
pop
je
fnstenv
fistps
cmp
ror
mov
imul
push
or
xchg
or
xchg
push
out
push
add
add
adc
imul
ffree
mov
into
cmc
lcall
or
fcoml
sbb
fdivrs
adc
add
mov
xchg
dec
mull
cmp
xchg
mov
xchg
mov
notb
cmp
insb
or
xor
push
andl
dec
outsl
fdivr
jp
lcall
push
mov
shll
mov
push
imul
dec
stc
nop
shlb
dec
dec
dec
fisttpl
stos
xor
jo
paddusw
mov
jb
xchg
mov
inc
xor
inc
ret
jl
mov
sarl
ss
outsl
flds
rorl
es
sahf
fwait
fwait
ret
push
js
stc
cmp
dec
xor
push
push
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
xchg
jle
stos
push
mov
sbb
enter
imul
aam
aam
xchg
pop
mov
mov
or
stc
aas
loopne
into
dec
aas
lock
pop
mov
insb
roll
mov
mov
pop
add
and
ds
daa
push
movsb
inc
test
cmpsb
push
jne
mov
hlt
adc
insl
cmpsb
stos
test
ds
adc
lret
mov
mov
adc
cmpsb
mov
xor
sub
mov
jne
das
lret
int3
cltd
cmp
or
fstp
xor
sbbb
mov
xchg
xchg
dec
push
and
inc
arpl
mov
sbb
cmp
sahf
cmpsl
adc
loop
inc
cmp
sahf
ret
push
clc
adc
imul
lret
or
hlt
push
pop
xor
jl
ljmp
cmpsl
mov
out
fistps
sahf
cmp
cmc
into
xor
dec
xor
jl
jge
xchg
fstpl
mov
dec
xchg
sub
ds
mov
ficompl
repnz
out
ja
out
ljmp
leave
fistps
insl
out
push
ret
cmp
mov
in
push
mov
sarl
add
fstl
dec
testb
and
sbb
scas
stc
sbb
or
lock
insb
adc
test
xor
pop
inc
or
mov
sbb
or
in
cmc
jo
push
icebp
fs
ljmp
mov
dec
cmp
sub
mov
sti
hlt
add
enter
and
jg
sub
imul
add
add
xor
add
add
lds
mov
in
dec
loope
cmp
push
sbb
fcoms
and
aad
aam
push
sub
or
push
adc
imul
andb
and
insl
movsb
jle
jne
dec
mov
xchg
popf
inc
pushf
and
and
shlb
mov
add
sub
ret
insb
push
or
dec
jp
mov
in
movsl
mov
cmp
pop
pop
or
sar
and
inc
and
jge
les
insl
or
add
gs
push
jle
mov
daa
mov
insl
les
sub
cmpsl
jle
not
mov
or
fimull
inc
fscale
push
ret
add
pop
mov
js
in
cmp
or
and
bound
jle
or
inc
pop
into
jne
pop
loopne
loopne
xor
pop
test
sbb
ss
mov
es
mov
xor
sbbl
push
in
fsubr
insb
dec
mov
lea
dec
mov
aaa
sub
bound
or
in
aam
inc
iret
xlat
push
bound
rclb
mov
sbb
scas
xchg
push
stos
lods
jg
je
leave
xchg
mov
adc
jp
jecxz
aaa
push
xchg
repz
sub
int
rcll
xor
mov
outsl
sbb
subb
mov
imul
xor
mov
mov
in
jge
dec
ss
sbb
push
jb
push
inc
notl
inc
les
decb
mov
push
adc
pop
mov
cwtl
pop
lret
mov
sbb
mov
mov
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
mov
mov
and
sbb
cwtl
jge
arpl
lahf
push
mov
add
add
cld
sub
pushf
mov
xlat
cltd
movsl
into
lret
loopne
fs
pop
or
subl
push
data16
fnstsw
add
mov
pop
push
sub
ds
test
cmp
lods
aam
mov
or
nop
sahf
pop
pop
icebp
mov
imul
lret
sub
test
call
imul
out
dec
inc
leave
pop
cmpsl
sarb
pop
dec
mov
or
xor
les
xor
test
push
das
push
push
fwait
nop
cli
xlat
jbe
jnp
test
adc
sbb
leave
pusha
repnz
scas
mov
fistpll
int
cld
jmp
andl
pop
jb
jmp
sub
js
sbb
arpl
xor
xchg
test
outsb
push
jmp
imul
inc
mov
mov
jge
cmpl
xchg
lock
pop
fs
sub
pop
jge
add
cmp
mov
int
out
xor
xchg
adc
ret
fs
outsl
xchg
cld
arpl
in
notl
lds
and
ja
mov
jg
and
or
mov
jo
push
arpl
push
shl
mov
sbb
pop
cmp
js
push
punpcklwd
in
fistps
outsb
stos
aad
jb
sub
mov
loopne
or
arpl
xchg
int
lret
xchg
lock
pop
mov
sarb
inc
ja
mov
push
call
or
dec
ret
or
mov
jo
push
inc
dec
mov
add
cmpsl
or
dec
pop
push
mov
xcrypt-cfb
cmpsl
movsl
cmp
mov
jg
inc
adc
les
add
out
pop
fistpll
inc
mov
fildll
and
add
adc
data16
mov
int3
mov
insl
loope
mov
add
adc
addr16
adc
roll
xor
and
int
out
addb
or
test
push
add
mov
scas
mov
pop
pop
insb
inc
jb
jge
cmp
add
lods
data16
mov
jo
mov
mov
xchg
xlat
xor
mov
test
dec
adc
jno
lea
xchg
adc
subb
push
mov
mov
int3
inc
fdiv
mov
mov
fldl
in
mov
push
hlt
sub
push
aam
pop
movzbl
pop
fs
or
xor
insl
in
or
je
scas
inc
fs
and
xchg
lods
rol
jle
cmp
cmp
inc
xor
in
and
data16
xchg
or
test
add
push
mov
sarl
lock
mov
cwtl
pop
mov
imul
jnp
mov
lret
jge
sbbb
call
add
int3
mov
mov
sti
inc
inc
test
nop
add
jns
push
push
cmp
ja
ret
loope
mov
testb
and
add
add
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
mov
jl
xchg
push
sbb
adc
sbb
mov
out
mov
pop
push
xchg
jnp
mov
sub
enter
add
mov
mov
addl
jo
scas
test
sub
mov
lret
lds
daa
pop
into
jb
andl
test
xor
nop
cmp
fcmove
movsl
mov
mov
cld
push
dec
rcr
inc
ja
in
or
fdivs
sub
cmpsl
xchg
leave
mov
sub
xchg
addr16
loopne
sub
pop
repnz
pxor
xchg
cmpsl
inc
shlb
fcompl
lret
orl
pop
inc
push
inc
push
sbb
frstor
sub
test
xor
push
std
cli
inc
xchg
shl
jl
cmpsl
sub
xor
sbb
adc
add
stos
nop
sbb
or
pushf
jecxz
je
push
cmc
test
in
xchg
ljmp
sti
pop
insb
test
cmpsb
outsb
jb
outsl
out
lock
push
jecxz
xlat
push
push
mov
add
push
mov
pusha
xlat
iret
pushf
int
dec
std
nop
arpl
push
pop
xchg
mov
dec
das
xor
mov
pop
inc
xor
icebp
dec
xchg
jl
mov
movsl
addb
nop
adc
pop
dec
sahf
out
adc
pop
fsubrl
ds
sub
aaa
sar
popf
lret
jb
jno
cmp
test
lret
cmpsl
jno
repnz
out
testl
pop
mov
inc
jnp
into
push
pusha
sbb
jo
xchg
xor
sbb
mov
loop
repnz
push
ss
and
xor
popf
sbb
push
hlt
push
or
add
sbb
cmpb
mov
aas
jbe
out
pop
inc
and
sbb
xor
mov
mov
xor
sub
sbb
or
dec
cwtl
cmc
ja
mov
cmp
fnsave
stos
sti
aad
ljmp
outsl
sbb
out
ljmp
inc
xor
push
out
aaa
icebp
pushf
repz
std
out
bound
cmpsl
fs
pop
mov
fbstp
js
pop
das
js
rol
mov
into
popa
into
int3
bnd
add
jg
testb
insl
sub
out
cmp
jl
or
mov
shrl
push
inc
cmp
pop
pop
pop
sub
mov
adc
fstps
mov
loopne
xor
jle
pop
push
push
repz
cwtl
dec
add
mov
lret
enter
cltd
rorb
pop
push
dec
add
jno
sub
cmp
ret
push
push
inc
mov
and
hlt
sub
jne
mov
cmp
shll
les
jp
mov
fdivrl
paddusw
mov
out
jle
fwait
add
pushf
imul
sub
cmp
pop
and
leave
and
and
lods
add
lds
push
sarb
lods
cmp
pop
mov
andl
fwait
roll
adc
aam
sarl
lods
mov
pop
mov
pusha
pop
dec
cwtl
clc
push
mov
push
fistl
mov
lods
lcall
jp
mov
pop
push
divb
out
imul
add
add
clc
dec
wrmsr
push
pop
xchg
lret
mov
and
test
mov
pushf
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
lret
jle
lea
sbb
adc
sbb
xchg
test
fucomi
jbe
pop
insl
leave
jg
lods
push
adc
lea
jl
inc
es
scas
sarb
fsubrl
xor
push
xor
or
or
repnz
and
aas
fsub
mov
and
fwait
dec
ficoms
xchg
mov
or
leave
test
mov
push
push
dec
push
xor
mov
ds
and
out
or
in
lahf
push
sahf
repz
std
adc
mov
clc
and
fwait
je
adc
mov
sbb
jl
xchg
adc
xor
inc
aad
lret
and
daa
pushf
out
or
jnp
pop
pushf
jp
jnp
xchg
add
pop
pop
pop
and
in
roll
outsl
outsl
adc
cmp
sbb
js
shll
mov
lea
or
iret
jno
lret
adc
lds
and
jge
cmp
imul
mov
jmp
add
inc
inc
cmp
cmp
and
xchg
cmp
cmp
fwait
mov
lock
dec
test
shr
inc
notl
jno
pop
cmc
push
mov
adcb
fdivp
lahf
sar
rcl
jl
repnz
bound
movsb
enter
jb
repnz
sub
stos
push
inc
enter
int
mov
cmp
mov
fcomi
sub
xor
sub
cmp
or
inc
mov
popf
cwtl
pop
push
ficompl
sbb
movsb
pushf
mov
adc
jp
jmp
call
xchg
fs
lea
jmp
out
pusha
cmp
sbb
cmpsb
imul
sbb
jne
cmpl
add
lods
mov
push
iret
jb
fcompl
in
cmp
adc
iret
repz
sbbb
sub
fldcw
add
shlb
inc
dec
sbb
lea
sbb
mov
sub
lret
jmp
lock
adc
dec
push
ret
mov
addl
jb
push
cmp
cltd
xchg
cli
mov
insb
add
pop
repz
ret
mov
cmp
stos
les
pop
jl
dec
ret
mov
xor
inc
dec
xchg
jle
in
mov
inc
imul
int3
repnz
test
repz
inc
add
push
loope
dec
mov
mov
xchg
mov
test
xchg
aad
outsb
pop
dec
pushf
mov
rcll
pop
xchg
iret
xchg
icebp
xchg
les
test
test
xchg
mov
jecxz
stc
cmp
mov
mov
cmp
mov
or
mov
sub
mov
jp
dec
mov
mov
lds
aam
aad
jnp
lret
push
lods
mov
sahf
xorb
stos
inc
stc
mov
push
sbb
je
push
inc
int
mov
lods
test
adc
mov
bound
fs
or
push
mov
mov
jle
popa
cld
xor
addb
xor
in
xor
inc
repz
ja
scas
jmp
pop
fstl
dec
push
push
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
aas
lds
js
push
sbb
adc
sbb
stos
cld
sub
stos
in
dec
andl
jno
cmpsb
test
cmc
enter
outsl
popf
mov
notb
or
push
dec
aam
call
sub
pop
mov
movsl
mov
xor
ja
inc
dec
dec
les
inc
stc
addl
push
mov
lea
dec
sbb
lods
pop
mov
jmp
ret
nop
cmpsl
push
cwtl
fistps
pop
adc
mov
adc
or
cmp
pop
or
dec
jecxz
pop
pop
jmp
jmp
adc
mov
lods
inc
jmp
loope
mov
add
sbb
fidivl
aas
sbbl
adc
lds
mov
and
mov
jmp
inc
push
popf
movsl
push
int3
xchg
pop
adc
and
pop
cmovns
or
leave
pop
mov
cmpsb
pushf
xchg
sub
lret
ret
sub
and
outsb
pop
push
clc
jmp
ss
pop
out
out
fldt
xchg
gs
xor
aam
push
mov
dec
loop
loopne
inc
pop
xor
clc
ficomps
xor
flds
xchg
out
cwtl
out
xor
adc
nop
test
mov
dec
es
pop
insl
mov
in
out
sbb
out
cmpsl
dec
mov
aas
aaa
pop
loope
in
inc
and
jmp
cmp
cmp
pop
sti
into
push
roll
int3
and
pop
push
cmp
jge
jno
clc
out
cmpsl
fstp
jp
add
cmp
ljmp
jmp
push
mov
cmp
dec
addr16
movsb
pop
loop
add
sub
push
sbb
call
jbe
outsb
mov
dec
ss
fbstp
mov
jge
cmp
pop
adc
imul
adc
cmp
iret
cld
mov
ret
imul
or
bound
xor
mov
pop
xchg
jnp
push
shr
xor
outsb
mov
cmp
rcr
das
sub
loopne
das
cmp
mov
mov
loopne
test
stc
push
xor
mov
mov
pop
test
pop
popf
jecxz
xchg
mov
inc
flds
mov
mov
sti
adc
out
and
lea
mov
mov
push
cmp
jne
imull
dec
rol
jle
lcall
rcl
jo
adc
scas
or
adc
dec
xor
xchg
add
sbb
and
push
dec
mov
add
xchg
repnz
js
dec
xchg
mov
mov
dec
inc
lods
push
repnz
les
gs
cmp
rcll
inc
sub
ss
inc
fldl
push
aas
jmp
leave
ja
into
out
mov
mov
sbb
mov
cwtl
and
lahf
dec
mov
ret
xchg
das
push
or
outsl
rorl
movsl
imul
adc
lea
lods
int
test
cmp
bound
hlt
fdivl
mov
jne
ss
aas
movsb
sub
xor
subb
in
sub
adc
sarl
loop
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
in
cmpl
and
sbb
sbb
cmp
xchg
sbb
fucom
mov
mov
mov
testb
ret
sbb
repz
daa
mov
fs
mov
int
pop
lock
fs
add
call
mov
jne
cmpsl
insb
mov
in
mov
call
fsubs
push
mov
and
mov
jg
dec
jae
sti
cltd
test
xor
jecxz
outsb
dec
les
rdmsr
mulb
inc
lahf
and
or
add
mov
in
xor
test
fucomp
dec
dec
sahf
mov
cld
sbb
mov
lock
lret
xchg
lcall
and
mov
lods
sub
sbb
mov
sub
sbb
jmp
push
popf
out
scas
or
mov
lds
inc
push
pop
imull
xor
dec
int3
push
js
fistps
jp
xchg
int3
mov
jmp
mov
sub
xchg
or
lock
push
adc
fisttpl
mov
scas
movsl
insl
jb
add
outsb
mov
mov
mov
lcall
fistpll
shll
dec
cmp
push
in
int
lret
and
or
loope
and
movsb
inc
sub
add
sbb
or
dec
mov
je
fwait
push
jnp
mov
je
push
int3
xchg
insb
shll
jno
fldcw
movsl
cs
test
fidivs
add
inc
out
sahf
push
insl
dec
inc
jge
ds
mov
lea
xchg
leave
orb
pop
add
jae
shlb
mov
cwtl
popa
jle
sbb
out
fwait
cmp
loope
in
inc
mov
cmp
lods
mov
mov
and
or
jl
mov
bound
int
sub
cli
inc
cwtl
gs
and
jp
xchg
and
add
push
movsl
cmp
push
insb
fcomi
lcall
inc
test
or
mov
inc
enter
and
adc
lods
inc
pop
lds
mov
mov
xchg
les
pop
imulb
dec
adc
rol
mov
dec
movsb
and
ljmp
or
loop
ror
or
fldln2
or
lea
mov
in
enter
mov
ja
jb
cli
shrl
adc
xor
mov
stos
adc
orb
cmp
cmp
push
xchg
push
iret
in
fnstenv
mov
jge
loope
cltd
adc
mov
jg
loope,pn
or
imul
adc
add
shl
mov
mov
adc
stos
add
cs
pop
out
cmp
mov
push
or
hlt
ucomiss
jns
cmpb
xchg
cld
inc
addr16
leave
aam
xlat
daa
gs
cmp
inc
test
in
out
dec
sbb
cmp
std
sbb
scas
jmp
add
arpl
inc
mov
dec
adc
adc
or
sub
jb
shrl
aam
lods
and
jge
bound
mov
stc
aam
insl
test
aam
xchg
push
cs
dec
or
mov
add
fmuls
decl
ret
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
lahf
and
mov
and
sbb
imul
mul
mov
sbb
dec
xchg
call
sub
push
add
push
mov
add
sets
mov
adc
in
test
ljmp
push
unpcklps
xor
repnz
add
loope
mov
sahf
jmp
sbb
rorb
push
xchg
iret
mov
cmp
negl
mov
xor
scas
mov
dec
cmc
or
jg
rcll
sti
aaa
xor
inc
ljmp
call
imul
inc
push
mov
sti
add
lahf
adc
mov
mov
daa
adc
popa
jb
add
ljmp
jle
popf
dec
mov
jo
mov
imul
dec
mov
mov
sbb
push
mov
or
mov
stos
cmc
fcomps
adcl
mov
loop
mov
mov
sbb
bound
mov
mov
mov
ja
fstps
mov
lret
addl
imul
push
mov
lcall
sub
inc
mov
mov
daa
mov
or
lods
xchg
stc
scas
je
xor
add
nop
inc
jge
call
jnp
cli
gs
inc
jbe
pop
inc
in
shlb
pop
push
in
push
bound
bswap
outsl
add
fcompl
xchg
cmp
or
lds
popa
bnd
xor
mulb
wrmsr
pop
aad
sub
mov
mov
adc
sbb
repnz
adc
or
dec
cmp
bound
in
js
testb
inc
mov
out
aas
jg
jmp
cmp
cmpsb
push
cs
fisubrs
xchg
fstpt
in
fs
dec
negb
std
adc
inc
fwait
aaa
adc
xchg
mov
mov
lock
lcall
arpl
test
mov
mov
and
shrl
loopne
mov
jl
cli
sahf
add
sub
mov
mov
pop
push
enter
pusha
test
mov
lcall
push
or
xchg
repnz
add
adc
insl
xchg
jmp
xor
mov
jge
roll
mov
add
mov
or
lahf
in
push
mov
and
push
ss
repz
push
inc
sub
mov
jae
pop
mov
push
in
mov
pop
pop
inc
mov
jge
jns
iret
mov
jl
xchg
sbb
inc
repz
cwtl
mov
loopne
and
adc
mov
mov
mov
and
and
ja
popa
clc
mov
cli
in
rcrb
fildll
mov
lock
bound
jns
mov
inc
into
fdivrs
inc
shlb
sbb
adc
inc
loopne
add
fnstcw
int3
test
sahf
pop
mov
push
xlat
outsl
push
mov
aam
pop
jl
fadds
test
cmpsl
cmc
jge
add
pop
inc
test
flds
or
je
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
mov
push
sbb
adc
sbb
mov
sub
mov
rcr
pushf
les
negl
ret
sbb
and
sarl
popa
addr16
push
sub
fsub
adc
mov
sub
repnz
sahf
push
lret
dec
and
jp
mov
out
ljmp
and
repz
mov
lahf
sbb
xor
mov
jmp
and
cld
jecxz
int
and
fdivr
sub
test
dec
sahf
dec
mov
push
cmp
in
repz
in
sbb
ret
xchg
pusha
or
sbb
into
jno
bound
xor
lsl
call
das
out
lcall
dec
repz
es
shlb
mov
mov
add
push
pop
into
nop
inc
imul
dec
adc
xchg
pop
pop
fdivp
xchg
into
mov
pop
addr16
enter
mov
scas
and
cmpsb
out
cmp
mov
xor
mov
out
sahf
orl
sahf
xor
cmpsl
inc
jge
nop
adc
pusha
jae
dec
sbb
stc
xchg
inc
mov
adc
in
and
ja
fcompl
inc
jp
or
pop
stos
mov
dec
add
imul
jg
push
cld
cmp
addl
movsb
push
adc
inc
imull
sbb
sub
or
sti
xor
cwtl
imul
popa
push
out
inc
jne,pn
shrb
lahf
sub
push
loopne
ret
cmc
cli
leave
nop
xchg
ljmp
inc
popf
sbb
shrb
cmp
daa
and
sub
ja
jg
data16
xchg
xor
push
cli
pop
sub
movb
mov
cld
jo
lret
push
repnz
sub
loopne
repz
in
les
jno
adc
lcall
sbb
fdivr
mov
int
dec
adc
leave
in
pop
and
cmp
stos
cltd
imul
repz
fsubrs
xor
pushf
xchg
pop
mov
fstpl
repz
inc
mov
aad
adc
xor
xor
cmp
negb
pop
stos
sub
div
add
mov
dec
sub
movsl
and
push
push
fmuls
nop
and
jle
repnz
or
mov
push
adc
jb
push
push
add
jbe
mov
dec
jo
push
add
dec
add
lods
lods
aam
shr
pop
test
dec
push
mov
sub
add
das
cli
jae
insb
jae
push
push
add
mov
je
jge
pop
push
negb
out
xchg
out
test
xor
inc
ja
sbb
push
iret
je
in
ljmp
push
push
mov
mov
xchg
leave
fwait
lret
dec
or
xor
cmp
cmp
mov
adc
lea
mov
gs
jns
ret
cmp
mov
mov
push
sub
mov
push
in
pusha
jnp
mov
and
imul
mov
in
jo
gs
pusha
and
inc
into
shll
mov
push
and
sti
adc
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
mov
push
sbb
adc
sbb
aaa
cld
sub
cmp
mov
aaa
dec
fsubrl
call
test
sbb
cmp
cmp
es
and
aam
or
cmp
hlt
adc
outsl
cmp
cmp
adc
cs
mov
daa
sub
xor
js
iret
jns
jb
into
fcmove
and
push
jl
shrb
pop
pop
mov
or
inc
call
fs
out
cmpsl
into
int
push
sbb
lea
in
mov
ss
mov
mov
ja
nop
mov
inc
into
push
lods
dec
xchg
fsubl
xor
and
pop
movsl
mov
jnp
lods
adc
mov
xor
xchg
pop
scas
ss
movsl
ja
push
push
sbb
mov
divb
push
jge
test
subb
mov
rcl
inc
cltd
int
aaa
xchg
jmp
jl
ret
std
ljmp
mov
push
fdivs
das
jp
push
lahf
ja
xor
in
ret
add
lods
testb
call
pop
push
mov
sti
mov
mov
fistps
nop
pushf
movsb
arpl
adc
imul
push
cltd
shll
fnstsw
leave
ljmp
rorb
ret
addr16
gs
jge
rcll
aam
test
xor
cmp
mov
mov
das
rcll
sahf
add
pusha
insb
mov
out
outsl
test
jg
movsl
and
jne
scas
aas
test
nop
sti
jecxz
fstps
mov
lods
add
repnz
lahf
sbb
stc
rorb
fs
fstps
or
sbb
push
js
lret
out
xor
mov
in
pop
cmc
shlb
stc
orl
ds
rcl
add
fisubl
mov
mov
or
cwtl
loopne
stos
cmc
test
imul
xorb
arpl
addb
gs
decb
shll
daa
push
and
iret
mov
outsb
orb
inc
mov
imul
test
andl
loop
out
and
sbb
scas
xchg
bound
clc
adc
mov
loop
add
mov
cmp
pop
lock
frndint
adc
je
stos
inc
negl
cmp
lods
das
push
and
icebp
and
jmp
fadds
mov
dec
and
lahf
dec
jnp
ret
mov
ds
xchg
dec
xor
repnz
fidivrl
xchg
jp
adc
push
or
xchg
dec
push
mov
dec
arpl
stos
jecxz
test
jge
dec
jno
shlb
rcr
jecxz
dec
inc
jle
or
repz
push
loope
orb
sbb
insl
mov
push
and
push
adc
sub
fadds
mov
or
sbb
or
xor
cs
rolb
dec
std
xor
xor
jl
int3
int3
xor
mov
pusha
xchg
xchg
push
cmc
daa
out
mov
out
inc
inc
outsb
inc
lret
popa
dec
inc
dec
dec
and
xchg
lcall
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
jne
imulb
arpl
sbb
adc
sbb
xchg
sub
fwait
insb
and
mov
mov
mov
lds
and
mov
pop
pop
mov
inc
lods
or
call
mov
lds
cmp
bound
adc
jo
inc
push
sub
add
in
shrl
pop
add
and
pop
insb
push
xchg
xchg
pop
pop
ss
pop
ret
and
sti
data16
mov
in
add
lock
mov
mov
mov
js
out
adc
mov
repz
jbe
bound
sbb
pop
arpl
gs
adc
jecxz
int
loop
push
ljmp
mov
sub
jecxz
clc
fcoms
leave
popa
notb
cs
ljmp
xor
push
xchg
pusha
out
in
cmp
and
xlat
shlb
push
adc
scas
xchg
xchg
movsb
outsb
es
pop
popf
fbstp
mov
and
sbb
cmp
adc
push
or
fnsave
stos
pop
inc
sub
ljmp
iret
jns
mov
sub
sub
mov
adc
lds
repz
xchg
mov
or
sbb
sub
aas
push
in
rcrb
scas
dec
jle
clc
scas
std
cmpsl
inc
xor
sahf
aad
mov
fsts
mov
lret
loope
pop
lcall
in
pop
jle
pop
fcmovbe
xchg
push
imul
fs
cmp
data16
out
inc
mull
js
jns
sbb
push
lret
push
in
lock
and
mov
mov
int
and
in
clc
hlt
mov
fisubs
dec
or
add
push
pop
mov
cli
stos
imul
mov
cmp
rcr
leave
cltd
push
xor
stos
dec
fnsave
xchg
jmp
jge
lcall
pushf
xchg
pop
sbb
dec
std
pop
mov
outsl
or
xlat
aas
push
mov
mov
lds
rcl
rclb
scas
jno
lds
jo
lock
lods
loop
add
mov
mov
mulb
xor
jecxz
pop
inc
mov
aas
cmp
sarl
cmpsb
icebp
pushf
xor
jo
int
add
push
cmp
mov
ljmp
scas
jb
es
pop
push
cmpsl
cmp
or
cli
or
sti
fmull
mov
or
stc
cmp
outsl
lret
push
pop
popf
ret
push
movsb
pop
stos
andb
ret
lea
sahf
push
mov
push
add
int
xchg
lock
loopne
push
and
or
mov
iret
mov
fists
xor
testl
xchg
imul
iret
out
test
pop
cld
xchg
ja
fsubrl
fnstcw
inc
xor
dec
das
adc
jno
xchg
bound
or
scas
mov
mov
test
sbb
mov
sbb
add
sbb
loopne
add
pop
sahf
out
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
pop
shll
adc
sbb
lods
sub
and
fnstcw
push
jecxz
pop
or
xchg
dec
cmpsl
imul
in
int
iret
mov
add
pusha
pop
int
lret
xor
std
inc
jp
sub
adc
add
pop
xorl
arpl
lret
xchg
mov
mov
cmp
cmpsl
mov
aaa
or
jne
frstor
negl
xchg
out
popa
xor
mov
dec
and
faddp
and
push
clc
cwtl
adc
jg
cli
fbld
testl
out
stc
scas
hlt
pop
std
add
inc
fs
inc
mov
sbb
out
test
cmp
je
imul
jmp
jp
pusha
xchg
mov
ret
xlat
xor
enter
repz
cmpsl
fiaddl
lahf
mov
mov
iret
imul
pop
in
stos
aas
push
pop
push
sbb
push
clc
jg
inc
mov
ret
pusha
dec
fnstcw
jle
or
pop
and
mov
pop
mov
sbb
pop
sarb
int
in
sub
notb
lods
in
mov
mov
loope
sub
jnp
dec
cmp
push
dec
mov
or
ja
lock
lods
sbb
xor
inc
xchg
mov
and
add
xchg
daa
pop
mov
push
lret
jb
xchg
mov
cli
leave
sub
adc
int
push
mov
mov
xchg
jo
adc
and
add
or
popf
sbb
pop
push
dec
filds
mov
stos
faddl
xor
mov
push
and
fistl
int3
mov
cmp
dec
cwtl
sbb
xchg
push
fstps
jnp
mov
ror
inc
rolb
mov
cmp
jbe
jns
sub
bound
notl
sbb
out
jb
lcall
adc
enter
in
arpl
add
mov
push
or
std
mov
in
scas
or
ss
cmp
shl
cmp
imul
ret
push
stc
pop
or
mov
test
pop
mov
outsl
jae
bound
jno
loopne
pop
bound
pop
cmpsl
mov
push
pop
pop
mov
mov
scas
cmp
adc
les
out
outsl
lods
cwtl
adc
or
daa
inc
enter
lahf
ret
pop
mov
inc
lods
loop
popf
jmp
jmp
inc
outsl
cwtl
mov
adc
daa
mov
and
imul
sarl
mov
rol
mov
cli
jns
dec
flds
aam
cmp
sbb
ret
mov
adc
push
clc
sub
iret
sbb
jmp
mov
pop
hlt
mov
cmp
sub
repz
fwait
inc
lret
jns
push
pop
dec
inc
je
pop
sub
lods
imulb
cld
dec
mov
push
xchg
sub
lcall
loopne
icebp
xlat
popf
push
push
mov
dec
rcrl
jns
aaa
push
dec
pop
and
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
sbb
mov
and
sbb
add
adc
xlat
lret
mov
cmp
pop
mov
jbe
push
adcb
aad
imul
fucomp
dec
inc
sub
dec
shlb
xchg
adc
xor
test
rcrb
pop
loopne
das
and
cmpsb
lret
mov
nop
xchg
sub
pop
sub
jno
mov
dec
cld
decb
fstl
mov
fsub
int
les
mov
into
or
xor
add
out
cwtl
loop
test
mov
inc
icebp
jg
ss
sub
fwait
pusha
or
or
and
xchg
cmp
jne
call
stos
xor
jb
int
xchg
outsb
and
inc
nop
mov
bnd
ljmp
push
das
push
add
pusha
adc
push
mov
add
xor
pushf
mov
mov
stos
sbb
das
clc
imul
mov
xchg
and
pop
roll
mov
push
sub
in
lods
push
scas
jnp
ss
xchg
inc
inc
mov
test
imul
das
incl
call
push
rcrl
sar
lock
mov
and
adc
and
and
adc
jle
jg
xchg
mov
imul
or
pushf
aad
cltd
push
lds
in
mov
sub
jg
or
cmc
fldenv
cmc
fnstenv
out
push
xchg
push
mov
sub
and
shll
xchg
aam
lock
cmc
inc
sbb
mov
sbb
out
test
pusha
sub
pop
push
cltd
push
mov
adc
cmp
aam
xchg
int
mov
mov
push
ret
mov
lret
daa
dec
mov
mov
sub
jno
pop
in
jg
lcall
sub
popf
xchg
adc
insl
loopne
inc
mov
jo
popa
imul
cltd
ja
lods
jbe
enter
sbb
lret
dec
jnp
add
adc
cld
cmp
jge
cs
cmc
test
lret
adc
ja
in
push
mov
xor
push
imul
add
nop
sahf
adc
xchg
dec
adc
sub
sub
push
xchg
mov
mov
inc
test
xor
xor
lock
cltd
or
jo
mov
mov
or
pop
or
shlb
mov
mov
jecxz
and
fmul
adc
jp
dec
dec
stos
mov
pop
test
into
xchg
inc
pusha
xor
sub
pop
divb
or
pop
push
divl
mov
orl
in
pop
pop
push
movsl
pop
inc
sub
mov
call
std
mov
repnz
into
inc
add
cmp
mov
fwait
mov
scas
jmp
loope
cmp
mov
xor
enter
xor
ficompl
int3
cmpsb
xchg
mov
dec
sbb
mov
jge
cmpsl
or
sub
push
cltd
dec
mov
add
lods
dec
xor
imul
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
inc
add
dec
push
sbb
adc
sbb
ret
sub
push
lret
pop
aaa
leave
cmc
ja
test
cmp
push
sub
lods
jns
jne
pop
loopne
fcmovu
test
jp
xchg
fisttpll
or
and
je
cltd
adc
test
repz
ss
inc
nop
push
xchg
pop
bound
cltd
ret
inc
ds
xchg
es
pop
push
nop
icebp
pop
aaa
or
cli
inc
push
inc
xchg
lock
stos
cmp
cmp
mov
inc
pop
ja
scas
aam
or
jbe
mov
mov
push
xor
in
insb
testl
daa
sahf
push
jo
lahf
pop
aas
jge
mov
adc
dec
fsubp
xor
in
mov
mov
pop
inc
cmpsb
repz
add
dec
sti
popa
divl
pop
aaa
out
xor
jns
daa
out
mov
or
in
jnp
popf
je
mov
adc
test
les
test
lret
jecxz
dec
add
subl
jle
subb
stc
push
mov
ja
inc
std
out
jae
jg
movsb
jge
inc
jecxz
repz
fimuls
dec
push
add
es
mov
pop
enter
mov
mov
int
mov
mov
test
jge
jg
mov
push
loopne
dec
mov
lods
xorl
push
mov
out
stc
repz
xchg
sub
mov
testl
aam
and
xlat
jne
mov
negb
xchg
nop
dec
mov
jno
je
scas
cmp
stc
stos
outsl
fs
dec
mov
insl
jecxz
lret
lock
addr16
inc
sub
dec
adc
ficompl
fs
les
fisubrs
sub
mov
aaa
cmp
mov
shrl
jge
pushf
push
and
leave
pop
push
test
pusha
add
sbb
dec
fidivrs
ja
adc
push
movsb
sahf
mov
sti
sbb
xor
lock
in
aam
lahf
xbegin
outsl
push
mov
push
pop
dec
insb
cld
icebp
fstl
inc
je
mov
testl
or
xchg
mov
cmpsb
sub
mov
sahf
sub
xchg
outsl
cmp
ds
nop
push
add
jns
loopne
aaa
xchg
fisubrl
jge
mov
adc
xorl
inc
inc
xchg
dec
or
in
pusha
test
adc
stos
mov
jbe
jmp
sbb
iret
xchg
icebp
lcall
or
jae
sub
adc
mov
add
push
popf
les
mov
mov
and
jnp
in
add
test
enter
adc
cmp
outsl
cmp
pop
clc
arpl
loope
bound
sbb
mov
inc
push
into
xor
lret
negl
insl
push
jle
and
loopne
scas
nop
outsl
movsb
mov
inc
pop
popf
pop
sbb
repnz
dec
lcall
jp
xchg
sahf
jnp
fmuls
push
pop
xor
push
dec
cmpb
push
es
mov
test
arpl
lock
int
cs
mov
test
jae
cmpsl
fidivrl
pushf
mov
inc
or
in
mov
movl
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
pop
fstpt
inc
push
sbb
adc
sbb
inc
and
cmpsb
mov
rorb
jne
clc
or
cltd
xchg
sub
ret
jmp
jp
mov
mov
xor
mov
ja
mov
lret
fdivrp
or
mov
mov
cmp
jo
push
jbe
ds
pop
and
das
fcom
cmp
nop
adc
orb
fwait
and
dec
jge
mov
add
test
mov
or
sahf
push
cmp
insb
inc
stc
addr16
ficomps
dec
mov
adc
push
xor
add
inc
outsl
data16
xchg
add
sbb
fs
jnp
mov
aam
push
lods
test
adc
cmp
ss
pop
data16
add
test
aad
inc
and
mulb
xor
loop
test
mov
xor
inc
orl
fsubrs
mov
aaa
aas
idiv
in
loop
scas
xor
popa
lds
xor
dec
pop
sbb
test
add
push
xchg
rcl
imulb
xchg
mov
xor
cmpb
jmp
mov
inc
imul
jle
xorl
jne
clc
adc
mov
jnp
pop
daa
test
cmp
jg
xchg
ljmp
jbe
inc
or
pop
mov
mov
ljmp
lea
inc
cltd
in
jle
sbb
in
jle
jl
gs
inc
outsl
cmp
pop
loope
jg
sarb
add
sub
push
loop
dec
popa
dec
mov
les
push
mull
addr16
cmp
push
ret
loopne
icebp
pop
adc
pop
pop
push
es
insb
and
mov
adc
dec
sub
sub
aaa
into
cltd
xchg
lods
xor
pop
jg
dec
xor
ficomps
arpl
daa
sbb
mov
mov
pop
icebp
into
test
pop
jae
loope
xchg
jb
xchg
pop
pop
fnsave
out
clc
lea
cwtl
mov
jecxz
shrb
inc
mov
mov
fwait
ss
and
cld
call
into
loope
and
int3
push
mov
xchg
jl
mov
aad
push
insb
pop
fdivrl
mov
adc
test
pop
mov
cmpb
cmc
cltd
es
adcb
not
xor
imul
rcrl
jo
sub
xor
mov
mov
push
jl
xchg
sub
pop
movsl
icebp
sbb
push
inc
mov
aad
jbe
jg
mov
sahf
push
leave
adc
popa
shlb
mov
fs
popa
jg
fwait
jecxz
les
addr16
nop
mov
and
sbb
test
cmp
in
mov
xor
mov
sub
loope
push
cmp
insl
mov
sub
insl
out
std
pushf
mov
fldcw
dec
sbb
ds
push
shrb
add
int
scas
outsl
adc
loope
mov
outsb
adc
push
sub
scas
popl
inc
or
jb
shll
loope,pt
push
cld
call
push
pushf
nop
jmp
inc
test
inc
lahf
jg
daa
test
mov
lods
xchg
shll
test
pop
push
sti
jae
xor
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
pop
fidivs
mov
and
test
xchg
and
in
jns
push
mov
ds
cmpsb
sub
cmpsb
std
mov
rorl
cli
addl
push
ret
aam
arpl
sti
scas
outsb
mov
adc
sub
adc
and
aas
decb
mov
push
pushf
xchg
add
shlb
jo
in
ja
ljmp
and
pushf
ret
xchg
xchg
and
ret
fcoms
stc
sbb
movsb
or
sbb
mov
dec
dec
shrb
mov
adc
jbe
xor
std
out
xchg
cmp
gs
setle
pop
jnp
jp
mov
bound
stos
jnp
out
movsl
jg
nop
orl
jl
xchg
fwait
push
fistpl
xchg
pop
push
pop
imul
cmp
jae
push
sub
lock
adc
add
fnstcw
pop
pop
cltd
pop
adc
and
test
add
insb
adc
jo
pop
pop
mov
ljmp
xchg
dec
push
incl
ds
lgs
dec
sbb
push
push
mov
fwait
cs
jl
les
dec
jo
mov
jnp
dec
repz
jnp
fs
test
hlt
lock
adc
lods
cmpsl
or
push
jecxz
mov
fs
xchg
push
in
out
dec
mov
xchg
dec
cmc
popf
pop
bound
imul
lret
out
mov
inc
pop
movsb
iret
jb
xchg
into
mov
test
mov
dec
push
xchg
xchg
push
movsb
mov
add
jbe
lahf
pop
daa
divb
repz
lock
icebp
dec
cs
test
jl
inc
or
leave
jge
lret
inc
or
outsl
fildl
xor
mov
leave
rcr
cmc
rcll
mov
inc
add
outsl
push
inc
aam
cmp
mov
jbe
and
push
xchg
push
mov
lahf
jae
outsl
push
adcl
push
xor
divl
push
jp
cmpb
aaa
test
loop
out
in
shll
lock
dec
inc
rolb
pushl
bound
add
in
inc
inc
lret
xlat
inc
int
push
ja
in
dec
popa
sub
pop
notb
pusha
sbb
aad
xor
jecxz
stos
movsb
and
lret
mov
call
or
dec
shl
sub
lods
and
or
leave
inc
mov
pop
sub
sub
or
xor
sarb
push
push
call
add
orb
outsb
lods
mov
fs
inc
das
test
test
testb
iret
mov
outsb
pusha
lea
sbbb
outsb
icebp
inc
mov
cmp
dec
dec
inc
out
sbb
scas
movb
clc
xor
js
scas
dec
rcll
ljmp
sub
popa
push
mov
xor
xor
fwait
rcr
data16
call
out
sub
xlat
lret
xchg
jns
mov
fsubs
sub
ds
sbb
test
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
mov
and
sbb
inc
and
orb
add
push
and
out
cwtl
ss
mov
or
outsb
jp
pop
leave
daa
mov
xor
fnstcw
cmp
int
fwait
inc
lret
mov
loopne
inc
push
addr16
sub
nop
in
xchg
bound
jns
sub
adc
and
mov
pop
mov
and
inc
push
push
loopne
jmp
movl
xor
jnp
mov
dec
popa
or
add
xor
dec
aam
push
cmp
lret
lcall
xor
mov
lock
pop
push
mov
sub
je
mov
lea
cltd
dec
push
fld1
test
jns
push
stc
mov
fnstsw
sub
jmp
mov
in
leave
sub
test
xchg
jmp
mov
cmpsl
sbb
int3
xchg
ret
push
xchg
fildll
xor
mov
pop
rcl
cltd
jbe
jecxz
into
enter
and
shl
pop
in
rol
inc
mov
mov
inc
fcompl
and
enter
ljmp
inc
mov
sarl
adc
sub
mov
inc
es
dec
mov
lret
aad
and
lock
dec
mov
jnp
rcrl
sbb
mov
sbb
loope
int
je
cmp
in
dec
in
dec
push
rclb
mov
inc
inc
sub
adc
or
dec
enter
mov
out
xor
rolb
jo
je
aam
std
cmp
sbb
test
lods
jbe
and
adc
test
jecxz
popa
jbe
pop
cmp
push
cmp
sub
repnz
xchg
cwtl
pop
andb
jb
xlat
cmp
les
mov
xchg
rcrl
mov
adc
pop
inc
mov
outsl
lret
push
daa
pusha
sub
dec
in
fsubrl
mov
lret
sbb
sub
xor
imul
dec
dec
jno
loop
repz
mov
cmp
std
popf
mov
mov
lret
mov
fsts
cltd
shl
cmp
scas
xchg
add
cmpsl
pop
jge
fsubl
cltd
xor
sbb
push
nop
stc
dec
add
addr16
sbb
js
sub
sar
movsb
xchg
add
je
aas
pop
jmp
faddl
das
aas
xor
loopne
shr
pop
adc
fcmovne
fwait
mov
mov
test
xor
push
fnstenv
pop
mov
pop
in
lcall
addr16
dec
sbb
or
aam
clc
ret
push
pop
mov
movsl
je
and
lret
andb
hlt
mov
mov
sbb
out
inc
xchg
test
notl
popa
addl
jae
cmc
xor
cs
jmp
in
push
test
stos
xlat
fimuls
mov
mov
fsts
cld
out
xor
pop
mov
movsb
imul
adc
xchg
push
mov
mov
fsubrs
push
jge
add
add
mov
loopne
lea
incl
add
add
add
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
mov
mov
xor
sbb
adc
sbb
imul
adc
insl
xchg
pop
out
pop
mov
loopne
je
pop
push
mov
cmp
add
sbb
pop
and
or
mov
add
hlt
out
push
xor
fimull
pop
stos
mov
jno
outsl
jnp
dec
mov
stc
mov
inc
adc
mov
fmull
dec
scas
or
inc
fcmove
mov
cmpsb
push
ret
int3
dec
ja
hlt
adcl
adc
test
movb
fistpl
stos
jle
push
mov
add
mov
fdivrl
adc
test
sti
hlt
and
push
imul
mov
lret
adc
fildll
push
push
ret
inc
pop
add
sub
xor
push
jmp
xchg
mov
mov
or
or
mov
pop
jb
inc
mov
xor
xor
xor
rorb
mov
xchg
push
dec
gs
add
data16
dec
cmp
cmc
pop
hlt
pop
jecxz
dec
leave
add
movb
negb
dec
ljmp
addr16
jo
iret
jo
cli
jge
fsubp
sar
mov
loope
pushf
inc
xchg
in
or
push
dec
pop
aaa
hlt
outsb
mov
mov
fidivl
xor
mov
mov
loop
arpl
dec
mov
push
test
add
sbb
fldl
sbb
and
test
and
and
add
xor
adcb
movsb
popf
lret
mov
imul
ret
lea
sahf
mov
psubq
cmp
out
push
shlb
jb
outsb
and
iret
or
shll
xchg
push
mov
dec
mov
sbb
fdivrs
mov
jp
mov
xlat
sub
pop
push
xchg
or
test
test
ja
fs
add
ret
fwait
or
lds
sub
push
sbb
mov
repnz
arpl
ljmp
jmp
push
cmc
xchg
xorl
inc
mov
repz
and
mov
sarl
add
jo
add
test
mov
sub
dec
adc
dec
jmp
fildl
or
aam
scas
jge
mov
add
add
cmpsb
adc
aaa
inc
mov
adc
push
lret
jmp
jecxz
add
mov
cmp
cs
rol
inc
cwtl
mov
out
cmp
mov
xchg
test
xchg
aad
daa
leave
or
and
cmpsb
test
add
xchg
mov
cmp
stos
push
xor
insl
lock
pop
mov
nop
sub
jl
mov
xchg
or
repnz
lock
sub
push
lods
imul
jg
sub
lods
sbb
cmpsl
scas
int
push
inc
lea
ds
xchg
outsl
cmp
xchg
stc
mov
inc
push
les
sbbl
sbb
push
xor
mov
jno
imul
mov
decl
hlt
std
inc
test
pushl
jns
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
movl
and
sbb
mov
loop
dec
mov
imull
outsl
loope
je
decl
cmp
add
insl
sub
fistps
jbe
fcoml
inc
sub
mov
mov
inc
loop
jns
mov
cmp
in
daa
add
mov
outsb
les
fisttpl
adc
cmp
mov
rcl
sub
or
xorb
test
hlt
popf
ss
xchg
jnp
mov
nop
sbb
jbe
sbb
jns
pop
sti
fnstcw
mov
fisubrs
mov
adcb
pop
ret
ret
es
stos
push
fisubl
cli
dec
mov
mov
or
and
mov
pop
data16
out
shrb
inc
add
sbb
mov
jl
inc
frstpm(287
and
sub
insl
inc
aaa
jp
sbb
sbb
sarb
xchg
mov
divl
fldl
aam
sub
in
push
cmp
add
fucom
lret
adc
outsb
mov
cmp
adc
lock
lods
daa
dec
mov
sbb
push
xchg
mov
pop
imul
pop
jle
stc
dec
scas
mov
inc
cmp
push
fmull
andl
ja
push
push
into
xchg
pop
and
push
pop
cmp
jp
outsb
out
jne
lcall
arpl
jbe
pushf
and
adc
lock
lods
aaa
add
or
ret
dec
sub
inc
push
movsb
idivl
lock
push
dec
loopne
in
cs
mov
and
in
sub
add
xchg
popa
or
or
and
push
out
das
lret
imul
scas
add
jl
movsl
mov
mov
sbb
and
jne
pusha
lahf
pop
cmc
xchg
ljmp
sbb
push
push
jg
out
dec
xchg
sub
xlat
push
dec
lahf
or
lods
cmpsl
movsb
mov
push
or
in
sub
push
es
insb
scas
push
cmc
mov
add
xlat
mov
aad
int3
enter
cmp
cli
fxch
pushf
pop
pop
in
imul
repz
xchg
or
mov
repnz
mov
sbb
outsl
pop
mov
mov
jo
or
sahf
sbb
jecxz
mov
mov
push
xorb
les
ret
cmp
roll
xlat
jae
aas
ffree
xor
std
and
mov
incl
inc
or
int
outsl
fcoms
and
out
cmp
sbb
inc
inc
je
cmc
lret
jle
jbe
pop
or
add
or
lea
arpl
mov
lahf
pop
xchg
sbb
mov
dec
mov
or
sbb
mov
lods
sbb
xchg
push
xor
push
iret
fsubl
fcomps
inc
pop
inc
popa
dec
out
in
insb
cmp
cs
in
and
and
mov
jo
sbb
sbb
decl
test
decl
pushl
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
sarl
adc
sbb
aas
stos
inc
mov
pop
mov
icebp
mov
sbb
mov
lds
sbb
cmp
lahf
dec
xchg
cmpl
sub
das
dec
mov
sub
sub
mov
pop
test
xchg
outsl
int3
mov
dec
xchg
stos
icebp
insl
inc
adc
pop
imul
or
xlat
or
lea
cmpsb
push
mov
sarl
xor
in
addr16
mov
enter
sbb
sub
xchg
imul
xor
movsb
jo
or
sub
iret
xchg
pop
sbb
and
jge
pop
inc
sub
mov
xchg
repz
and
aaa
fwait
shll
mov
inc
or
gs
inc
sbb
jns
sbb
pop
sbb
adc
pop
fldenv
ljmp
out
icebp
test
addb
mov
adc
in
in
pop
inc
ds
stc
call
sub
dec
mov
mov
sbb
jmp
repnz
adc
xchg
cmp
add
jno
pushf
and
das
mov
and
cmp
loope
fldt
out
xchg
stc
sub
push
xchg
das
es
jg
lock
fistl
lods
call
jle
insb
insl
add
shl
push
jmp
lret
xchg
iret
fiaddl
or
add
sar
mov
push
imul
and
sarl
xlat
cli
jp
sbb
jne
jns
frstor
dec
cmp
cmp
pop
push
insl
les
test
inc
sbb
push
xchg
inc
bound
aas
mulb
and
lret
enter
insb
mov
inc
shll
xchg
insl
sti
dec
jmp
imul
lods
sahf
mov
push
jo
js
pop
jae
pop
adc
adc
push
movsb
adc
push
xor
fists
and
adc
dec
insb
stc
add
mov
scas
cli
leave
inc
fsubrp
lcall
or
pop
cmpsb
sbb
pop
nop
mov
xlat
mov
aad
aam
scas
orl
pop
xor
or
mov
push
push
jno
mov
sbb
push
or
sbbb
jo
in
xor
pop
fwait
dec
xchg
mov
scas
cmpsl
repnz
mov
dec
xor
bound
loope
lock
xchg
push
or
cld
insl
dec
or
lock
insb
xor
xlat
inc
push
imul
in
mov
pop
addr16
xlat
cmp
out
mov
add
ret
mov
adc
shr
arpl
arpl
pusha
loop
shlb
in
lret
ja
add
push
sbb
or
jp
mov
mov
hlt
lret
test
or
out
xchg
mov
pop
ja
in
and
cmp
cmp
lods
push
mov
mov
add
push
shrl
cmp
faddp
sub
push
jecxz
mov
lret
lcall
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
ret
mov
sbb
sbb
sbb
xor
xchg
std
rclb
xchg
jmp
ljmp
mov
int
jnp
arpl
cmp
cwtl
and
enter
lcall
mov
adc
testb
inc
or
add
mov
dec
ljmp
cmp
adc
or
shll
popa
xor
je
push
or
mov
gs
imul
jns
into
aas
inc
arpl
mov
cmp
adc
xchg
or
rcl
mov
fiaddl
and
jl
ret
rorl
mov
iret
push
dec
popf
and
and
data16
jno
mov
adc
aam
pushf
movsb
or
xor
out
lock
rolb
inc
test
jl
cmc
loopne
mov
daa
mov
out
scas
aaa
pushf
mov
arpl
sbb
fstp
and
inc
addr16
aas
push
loope
sub
out
and
adcl
loop
mov
xchg
stc
es
pop
pop
sub
mov
or
mov
imul
mov
xchg
cld
pop
or
mov
sbb
sbb
ret
popf
jmp
call
int3
out
aaa
cmpsb
mov
push
adc
rclb
lock
loop
jmp
xchg
push
sub
aam
hlt
pop
mov
and
dec
pop
les
lcall
push
and
push
int3
mov
daa
pop
movsl
imul
aam
lods
jne
add
das
sbb
popf
sub
das
jo
or
push
pop
xor
xchg
dec
int
test
loope
out
push
mov
fstpl
fmuls
jle
pop
test
mov
ljmp
not
call
and
lcall
push
pushf
lds
mov
sbb
mov
or
and
ds
in
inc
fbstp
stc
lahf
sub
lea
sbb
add
sti
in
mov
pusha
add
cltd
jae
mov
cmp
sub
and
xor
ja
push
imul
aas
mov
popa
pop
mov
xchg
in
shll
push
mov
cmpb
jle
ret
repnz
into
mov
les
sub
jnp
pop
adc
sub
iret
jecxz
dec
jmp
pop
rcrl
add
fsub
mov
loop
ret
cld
adc
ljmp
jmp
and
imul
repz
push
push
or
pop
loop
sub
shlb
xchg
add
pop
mov
das
push
movsb
inc
push
jle
xlat
sub
hlt
mov
sbb
sti
leave
shlb
dec
shl
mov
mov
cmpsb
shl
ljmp
mov
sbb
dec
push
shll
inc
adc
sbb
mov
rcrb
addb
iret
sbb
mov
fwait
jmp
repnz
jecxz
or
xor
inc
jmp
clc
dec
add
aaa
jmp
mov
mov
xchg
sbb
and
adc
fnstsw
int
lcall
mov
xchg
fisubs
aam
mov
xor
sbb
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
push
pop
push
sbb
adc
sbb
out
jnp
inc
cmp
cpuid
mov
xchg
daa
pop
jbe
mov
and
cmpsb
sahf
pop
inc
or
pop
add
test
loop
jl
mov
or
push
jno
sub
nop
std
jg
or
mov
sub
mov
shl
xchg
les
loopne
cld
and
mov
loop
loop
vmread
test
cmpl
push
fs
cmp
mov
out
mov
dec
shld
jge
dec
pcmpgtw
jns
insb
mov
or
sub
out
cmp
pop
pop
and
ss
mov
xchg
loop
sti
xchg
push
pop
sub
add
jae
scas
mov
cmpsl
xchg
dec
jmp
inc
pop
jno
sbb
fdivrp
pusha
shrb
fisttpl
movsb
push
dec
cmp
adc
xor
out
push
test
xchg
ret
dec
aad
sub
out
mov
lock
xor
jp
push
ret
push
inc
cltd
mov
cld
xor
jae
mov
sahf
jp
ret
adc
rolb
or
jae
lcall
push
mov
repnz
mov
jg
jo
negb
movsl
dec
sub
inc
stos
sub
sahf
leave
rcr
push
fildl
pop
call
and
push
adc
lcall
pop
into
jb
ja
pop
lret
xor
divl
popf
adc
mov
inc
sub
and
adc
clc
insb
jb
pop
faddl
stos
popa
test
pop
mov
mov
pop
nop
aaa
das
imul
mov
sub
push
scas
adc
dec
pop
jp
fildll
jmp
data16
cmpb
add
pop
addr16
mov
adc
inc
jp
cmp
mov
call
cmc
inc
cmpb
mov
idiv
cmpb
rcrl
mov
xchg
cmp
sbb
insb
in
sub
add
and
popa
lret
test
mov
push
jmp
pop
mov
adc
jno
or
rolb
test
arpl
subl
adc
xchg
jle
jg
clc
stos
repnz
xlat
add
jne
in
jns
cli
fdivs
outsl
push
fisubrs
mov
mov
pop
cwtl
push
pop
dec
dec
sub
shl
xchg
mov
cmp
jmp
pop
inc
ds
cmpl
repz
int
neg
jmp
push
sarb
bsf
add
xchg
sahf
cmp
sarl
adc
mov
push
mov
pop
pusha
pusha
icebp
mov
sub
sub
xchg
cwtl
mov
adc
mov
out
or
inc
mov
xor
test
and
movsl
jp
or
cs
ret
xor
mov
aaa
shl
lock
inc
cltd
in
or
pop
mov
mov
cwtl
aam
sti
loop
adc
jecxz
movsl
cmp
repz
sub
xor
xchg
jmp
pop
xor
push
adc
push
sti
pusha
or
cld
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
sti
popf
jo
adc
sbb
adc
sbb
and
jl
ror
loope
fwait
sbb
fisubrs
out
push
loop
addr16
pusha
and
push
jnp
andl
lds
repnz
pop
incl
mov
imul
out
sbb
test
repnz
jecxz
gs
jp
pop
mov
sbbl
add
mov
cltd
repz
push
lret
pop
mov
sbb
pop
or
pop
movsb
jo
jle
imul
imul
outsl
pushf
xor
rcrl
pop
das
jne
adc
push
iret
gs
push
push
dec
movsl
loop
pop
mov
xchg
filds
and
jecxz
or
mov
or
imull
mov
outsl
cltd
ljmp
inc
lods
outsl
push
and
pop
dec
ja
out
insb
pusha
lret
inc
test
adc
adc
pop
cvtps2pi
pushf
mull
data16
into
ds
jmp
cmp
mov
outsb
push
ret
fimull
int3
xchg
sbb
inc
push
adc
pop
dec
mov
int
inc
popa
jno
decl
ret
lock
lret
ss
add
xchg
negl
inc
xchg
or
js
out
jno
sub
adcl
inc
cld
push
mov
aam
jnp
hlt
xchg
sbb
push
fsub
xchg
dec
cs
imul
outsb
add
inc
es
fistpl
dec
mov
fdivl
mov
les
xor
or
cmp
dec
es
mov
xchg
out
pop
mov
inc
mov
cmp
mov
sub
jno
inc
ret
inc
inc
and
lret
ffreep
iret
repz
or
test
inc
dec
in
jecxz
aad
in
idivb
pop
mov
roll
sub
pop
test
lret
icebp
xorb
lcall
in
jmp
add
mov
inc
sub
ja
dec
int
cmc
fwait
jns
push
jo
pop
int3
lahf
jmp
mov
mov
dec
push
sbb
lods
inc
outsl
lahf
sti
jns
fldl
ret
adc
cli
enter
add
jno
xchg
pop
sub
icebp
sbb
hlt
add
push
pop
push
ffree
pop
adcl
dec
enter
push
mov
mov
out
test
ret
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
rolb
add
add
add
lret
add
nop
add
and
add
aam
add
push
nop
add
sub
add
inc
mov
add
add
test
add
add
sbb
add
add
add
lret
add
add
sbb
add
jo
add
dec
xchg
add
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
add
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
sbb
inc
add
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
mov
add
es
add
sub
test
add
inc
add
inc
add
inc
add
es
add
inc
add
es
add
push
movsb
scas
or
movsb
pushf
es
add
add
inc
add
add
add
es
add
es
add
es
add
inc
add
inc
out
add
inc
add
inc
add
xchg
mov
add
inc
add
rcl
pop
push
jg
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
andb
dec
sub
add
add
scas
lcall
das
dec
add
jl
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
jl
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
incb
inc
add
addl
push
addl
push
addl
push
addl
addl
addl
addl
addl
inc
addl
fiaddl
inc
add
addl
ljmp
add
addl
cli
addl
add
inc
add
addb
addb
addb
js
add
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
xchg
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
test
add
test
add
test
add
test
add
test
add
add
sbb
add
cmp
add
push
xchg
add
add
insb
xchg
add
add
mov
add
stos
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
add
xchg
add
xchg
add
add
bound
add
jl
add
mov
add
stos
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
and
add
inc
mov
add
add
pop
mov
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
add
je
add
test
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
add
add
add
add
jo
add
orb
add
add
add
add
add
mov
add
mov
add
mov
add
add
adc
add
cmp
add
pop
mov
add
add
mov
add
mov
add
les
add
lock
add
add
push
mov
add
add
cmp
add
add
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
