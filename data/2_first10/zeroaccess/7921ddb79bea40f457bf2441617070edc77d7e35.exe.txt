push
mov
sub
mov
mov
mov
addl
sub
mov
push
mov
mov
not
sbb
incl
mov
orl
sub
orl
mov
xor
mov
jmp
mov
cwtl
mov
movsl
jb
sarl
les
fsts
ds
fucomp
lock
int3
add
ffree
outsb
mov
repnz
adc
out
ss
test
repz
fisubs
mov
mov
icebp
arpl
call
pop
rcr
inc
dec
shll
sub
inc
lds
dec
pop
ret
jnp
cmp
jle
inc
call
pop
xchg
rcrb
lret
sub
das
cmp
xor
jge
or
loopne
pop
adc
inc
aam
movsb
outsl
or
push
add
pop
xor
xor
dec
push
pop
adc
push
test
xor
push
jmp
mov
ret
push
sub
nop
nop
xor
dec
fbstp
mov
fldcw
pusha
sbbb
jmp
push
or
arpl
pusha
int3
mov
das
jp
xchg
pop
jecxz
and
fbld
sub
test
nop
addr16
sbb
and
mov
push
add
mov
xchg
popa
mov
jbe
mov
shll
popa
jne
mov
lcall
jge
push
mov
inc
sbb
inc
int3
das
roll
shrb
push
xchg
sbb
mov
xchg
decb
xchg
scas
in
dec
xorl
cli
frstor
mov
test
push
xor
lea
inc
mov
lods
add
subb
inc
sub
inc
inc
cmpsb
xchg
jbe
xor
fldenv
sarb
jg
cmpb
cmpsb
xor
inc
icebp
cltd
popf
orb
ret
mov
mov
pop
repnz
pop
aaa
mov
in
fs
frstor
cmovbe
mov
mov
mov
std
cwtl
dec
insb
jae
ret
in
and
ss
movsl
sub
and
popa
loopne
mov
dec
popf
jp
sbb
movsb
push
dec
push
dec
sub
shlb
sub
jnp
in
adc
mov
xchg
or
add
fs
xor
jo
push
jmp
iret
adc
jae
dec
and
imull
lahf
nop
and
imul
nop
cmc
andb
adc
or
mov
repnz
test
in
scas
lcall
outsb
pop
xchg
cltd
mov
lock
sbb
xchg
ljmp
mov
sbb
push
shrl
aas
addr16
inc
push
dec
mov
sub
adc
adc
stc
out
cmp
call
jecxz
cmpb
and
jo
adc
addr16
movsb
inc
or
or
push
sahf
cmpsb
std
notb
in
movsb
jmp
jl
push
sbbl
cmc
scas
and
andb
loopne
movsl
hlt
add
xchg
lods
and
ljmp
sahf
dec
ja
pop
scas
sbb
add
mov
cltd
fwait
inc
inc
dec
cmp
mov
jecxz
sbb
cmp
fidivs
psubusw
or
sti
cltd
fs
dec
add
mov
lods
pop
jb
jne
inc
mov
mov
push
xlat
dec
outsl
add
jmp
out
and
out
mov
or
stos
mov
jne
mov
scas
call
arpl
addl
inc
add
and
sbb
add
ret
adc
jmp
testb
mov
rcll
mov
les
xchg
int3
das
mov
lods
jns
add
call
insb
pop
rcrl
lock
popl
mov
jmp
daa
jmp
mov
xor
xor
push
inc
mov
call
dec
jb
or
pusha
das
adc
jle
mov
mov
add
repnz
xchg
fwait
test
insl
inc
in
out
fdivrs
jle
stos
sub
lret
mov
sbb
jg
or
sbb
fs
dec
es
inc
mov
push
repnz
add
lods
lahf
pop
push
cmp
xchg
adc
push
pop
cltd
mov
xor
push
pop
mov
push
and
mov
push
lret
inc
xchg
test
jg
and
mov
dec
xchg
call
push
jae
dec
icebp
fcompl
cli
xchg
sub
insb
lock
mov
jle
and
out
sub
sub
jno
jge
inc
clc
xchg
push
dec
mov
popf
pop
dec
movsl
cmp
or
rclb
push
mov
xchg
mov
dec
adc
testb
and
mov
adc
mov
xor
or
outsb
adc
fdivs
push
add
fstps
orl
push
mov
pushf
jnp
ljmp
fwait
pop
xor
mov
cmp
push
jl
lock
cli
mov
dec
scas
sub
dec
cs
dec
mov
scas
adc
imull
imul
adc
das
test
jp
int3
pop
rcll
mov
xor
int3
pop
mov
fistpll
add
xchg
add
lcall
out
push
iret
sub
mov
dec
jae
ret
xchg
test
imul
pop
add
xchg
xchg
aad
add
ja
jnp
insl
outsl
imul
pop
mov
imul
or
xor
int3
std
call
inc
mov
xchg
push
inc
mov
ror
ret
push
fsts
ret
add
je
lods
sarl
or
mov
and
mov
sbb
mov
loop
out
insl
addl
das
mov
repz
and
icebp
out
js
sbb
and
xchg
fstpt
popa
jae
sbb
xlat
dec
les
jbe
jle
inc
inc
inc
xor
int3
fwait
dec
mov
fcmovnbe
xor
je
lret
popf
xchg
mov
inc
iret
or
rcll
adc
in
sarb
movsb
arpl
jecxz
adc
dec
pop
fsts
addr16
inc
pop
and
stos
es
lea
cmp
lcall
in
add
add
int
cmc
xchg
mov
inc
loopne
andb
stos
sub
pop
add
in
jecxz
or
mov
cmpb
cmc
dec
cmp
xchg
roll
stos
cld
ror
add
xchg
je
mov
jl
mov
push
xor
sarb
inc
hlt
pop
mov
es
imul
clc
jp
add
inc
imul
mov
dec
and
sbb
sbb
inc
adc
out
fisubl
fld
aam
cmp
mov
pop
lock
aam
rorb
inc
test
iret
mov
or
orl
adc
orl
lea
cmpl
mov
movzwl
mov
jmp
mov
cmpl
ja
push
call
xor
or
xor
mov
or
orl
sbbl
movl
incl
mov
mov
mov
sbbl
mov
xor
add
mov
mov
sbb
mov
cmpl
not
movl
mov
jmp
movl
mov
cmpl
jle
pushl
push
push
call
add
orl
and
sub
xor
sub
mov
mov
cmpl
movzbl
mov
movzwl
jmp
movl
cmpl
jge
pushl
pushl
push
push
call
neg
add
sbb
adc
subl
shrd
shr
cmpl
mov
mov
not
jmp
mov
movl
cmpl
je
push
push
call
neg
xorl
sub
not
and
mov
mov
addl
xor
xor
or
and
mov
jmp
incl
pop
mov
fisubrl
sahf
mov
les
mov
ret
or
add
js
arpl
lcall
addr16
movsb
push
ljmp
stc
jae
xchg
lods
std
aad
xchg
mov
xchg
push
sbb
mov
bound
not
pop
xchg
mov
add
test
xor
mov
iret
rorb
test
fwait
je
sub
and
negl
aas
add
out
inc
xlat
mov
adc
add
add
and
and
ror
jae
push
es
sahf
sbb
test
jmp
sbb
call
push
loopne
cmc
inc
testb
mov
or
jb
add
sub
cmpsl
inc
add
fistl
and
fsts
mov
push
mov
jl
test
cwtl
scas
jle
aas
sub
mov
je
ret
or
test
mov
lods
cmp
pushf
test
push
ret
les
test
test
arpl
dec
push
rcr
jae
or
xor
push
in
add
addr16
and
xchg
xchg
andb
rcrb
lahf
xchg
mov
jl
or
idivb
sbb
and
dec
add
jno
cmp
popa
aas
sbb
imul
aad
push
sbb
js
cmp
adc
or
mov
and
fdivs
or
mov
fimuls
dec
out
mov
movsb
mov
jne
or
dec
stos
cwtl
mov
movsb
jge
cmp
add
adc
test
in
in
lock
mov
clc
sbb
add
outsb
ja
inc
popf
or
jl
mov
cmpsb
inc
mov
nop
rorl
iret
sbbb
adc
jo
jle
cmc
scas
shlb
rorl
mov
jp
loope
test
inc
repnz
xor
add
xchg
insb
mov
jmp
inc
xchg
insl
xchg
xchg
cmp
adc
jno
roll
cmp
add
pushf
jno
pushf
and
mov
jo
xor
mov
add
pop
daa
lea
inc
cmp
pop
push
cmp
adc
mov
lea
pushf
push
mov
daa
andl
push
xor
push
sbb
std
xor
jge
test
enter
sbb
addr16
or
mov
fisttpll
scas
push
and
jno
pushf
flds
ror
dec
pop
inc
fisubs
jp
fdivrp
mov
xchg
addr16
js
ds
or
fiadds
cmpsb
add
jg
inc
pop
add
cmp
les
adc
dec
push
cmp
loope
jle
mov
pop
pop
test
mov
jae
orl
add
rcll
mov
outsb
xchg
lods
in
dec
sbb
dec
sbb
xchg
int3
jnp
push
in
sahf
fs
pop
out
xchg
mov
fwait
lahf
xor
or
aam
xchg
popf
mov
cmp
sub
sarb
into
sub
lds
inc
stos
fimuls
and
mov
xchg
dec
sub
movl
movl
movl
movl
sbb
movl
movl
addl
movl
add
movl
sub
movl
movl
movzbl
and
movl
movl
cmpl
movl
movl
jmp
movzwl
mov
cmpl
jle
pushl
push
push
push
call
xorl
sub
sbbl
addl
sbbl
adcl
subl
addl
addl
movl
xor
movl
or
movl
movl
movl
xor
movl
movl
xor
add
or
mov
movl
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jg
push
push
pushl
push
pushl
call
adcl
sbbl
adcl
addl
cmpl
movl
movl
jmp
mov
cmpl
ja
push
call
andl
sbbl
xor
andl
xorl
addl
movl
movl
mov
addl
shl
mov
addl
push
adcl
push
orl
push
sbbl
jmp
mov
jl
mov
popf
inc
lcall
les
xchg
stos
sbb
out
fistl
push
jbe
cmp
sub
fwait
jecxz
imul
arpl
jg
mov
mov
icebp
mov
or
jmp
dec
cltd
cmp
push
xchg
outsl
push
iret
adc
cltd
push
rolb
dec
xlat
repnz
outsb
xchg
in
or
and
imul
xchg
jp
mov
out
rcl
mov
std
and
arpl
mov
mov
dec
test
call
stos
test
cmpsl
test
pop
rol
imul
adc
fucom
cmc
pop
mov
iret
ja
test
jns
sahf
mov
clc
orl
daa
cltd
mov
aaa
ja
mov
jb
mov
dec
nop
popa
jle
movsl
fwait
mov
dec
adc
mov
inc
push
fwait
jne
daa
jne
imul
inc
icebp
in
mov
mov
push
lret
es
inc
incb
xchg
mov
lock
shrl
shll
cld
lret
rcll
ret
adc
mov
mov
arpl
aam
out
sahf
lahf
push
ljmp
cmpsl
mov
inc
sub
pop
pop
pushf
push
xor
mov
test
outsb
cwtl
arpl
mov
xor
std
fucomp
js
jge
cmp
jne
add
movsl
scas
jge
jno
jno
dec
test
dec
add
addr16
sub
push
jno
outsl
mov
jbe
cmp
idivl
pop
inc
xchg
mov
push
jnp
cmp
sub
test
dec
lret
fisubrs
js
push
xchg
cltd
add
aam
outsl
mov
dec
add
js
add
andl
mov
mov
sbb
mov
jns
jbe
or
adc
sbb
mov
jle
sbb
icebp
sbb
lret
sbbl
imul
stos
pop
mov
setae
arpl
cmc
mov
inc
iret
fstpt
je
pop
hlt
pop
std
ja
inc
mov
movsl
sbb
fimull
jb
xor
out
iret
fmull
rolb
stc
into
leave
mov
test
addr16
lcall
outsl
hlt
inc
out
pop
push
fnsave
jae
fisubl
mov
xchg
fwait
inc
leave
ljmp
popa
mov
add
xchg
sti
test
cld
leave
pushf
adc
adc
adc
scas
out
push
enter
push
repnz
push
lret
adc
mov
scas
xor
push
inc
repz
or
mov
out
cli
es
shrd
jb
loopne
sub
pop
xor
xchg
pop
lret
movsl
mov
add
mov
jle
popa
push
pop
rcrl
push
ss
jle
call
xchg
add
push
pusha
push
mov
jns
pusha
shll
test
mulb
mov
adc
popfw
jp
and
mov
aas
jae
mov
shll
cmp
mov
mov
popa
inc
lods
mov
adc
sbb
jns
dec
dec
sbb
decb
cmp
in
in
shlb
aad
in
jg
jmp
das
xchg
lcall
cvtps2pi
add
add
test
call
mov
mov
add
mov
sub
xor
sub
mov
mov
negl
sub
mov
lea
not
mov
adc
mov
negl
or
and
cmpl
mov
mov
jmp
movl
cmpl
jg
pushl
pushl
call
xor
adc
add
orl
negl
adc
sbb
sbbl
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
not
movl
jmp
mov
mov
cmpl
je
push
pushl
push
push
call
sbb
xor
and
movl
add
inc
and
or
mov
shrd
shr
adc
mov
movzbl
or
mov
shl
xor
xor
or
jmp
cmp
ja
jl
mov
iret
cli
inc
sarl
les
fstpt
cmpsb
and
cmc
pop
imulb
pop
add
stos
jmp
or
enter
test
cmp
mov
sarb
mov
mov
xor
push
xchg
test
add
imul
popa
adc
xor
add
sub
andl
dec
icebp
aas
sub
sbb
cmp
in
fmull
or
idivl
cmp
mov
out
dec
out
test
pop
mov
mov
and
testl
xlat
sbb
int3
cmpsb
inc
enter
imul
mov
fisttpl
out
ja
mov
add
test
sub
add
mov
js
mov
adc
nop
frstor
jns
in
add
lcall
pop
mov
adc
push
xor
mov
ljmp
add
push
repz
rorl
push
inc
pusha
loope
mov
mov
shrl
int
adc
mov
add
fwait
and
repnz
mov
aam
push
clc
pop
mov
mov
or
jb
mov
stc
inc
repnz
rcr
dec
in
pop
push
lahf
push
daa
cli
xchg
arpl
inc
cmpsb
shrl
mov
lcall
cs
fiadds
roll
loope
pop
inc
in
mov
xchg
dec
call
push
shrl
addr16
and
cltd
pop
scas
push
jmp
jmp
jb
iret
push
hlt
lods
push
movsb
es
cmp
sbb
scas
jnp
movsb
arpl
mov
dec
push
and
mov
outsb
push
and
addb
sbbl
pop
repnz
aaa
dec
lock
mov
xchg
or
inc
into
pop
jno
inc
leave
sbbb
and
insb
pop
xchg
fs
je
popa
js
add
std
or
in
icebp
pushf
mov
sbb
or
dec
stc
pop
imul
mov
jae
setnp
int3
jbe
stc
unpckhps
stos
shl
mov
or
sbb
rolb
pop
pushf
mov
dec
cmc
shrb
sarl
lea
arpl
scas
mov
push
or
sahf
int3
clc
sub
repnz
out
bnd
and
test
xlat
mov
jmp
jae
jle
jp
jne
jne
push
test
mov
xor
or
mov
addb
adc
fs
jb
jmp
loope
and
xchg
mov
movsb
scas
xor
and
mov
xchg
lcall
sub
aaa
and
jp
dec
icebp
fidivrl
es
mov
lds
inc
dec
mov
ljmp
jg
xlat
ss
add
rcrl
hlt
or
es
jo
test
leave
or
lds
mov
xor
pop
xorb
xor
fstps
pop
push
pushf
repnz
inc
inc
mov
std
insb
and
and
sar
out
data16
xor
pop
jle
ds
ds
xor
push
fistpll
or
scas
pop
insl
mov
cmp
movl
jne
cmpl
mov
mov
mov
jmp
movl
mov
cmpl
jl
push
call
and
andl
sub
andl
mov
mov
add
mov
mov
sub
xor
mov
or
mov
or
mov
addl
shrd
subl
mov
mov
xor
shr
xor
mov
sbbl
xor
andl
or
orl
shl
xor
sub
xor
add
mov
sub
add
mov
add
mov
cmpl
not
notl
movzwl
jmp
mov
cmpl
jg
push
pushl
call
movzwl
sbb
mov
movzbl
adc
or
and
orl
add
or
adcl
mov
cmpl
movl
mov
movl
jmp
mov
cmpl
ja
pushl
push
pushl
push
pushl
push
call
mov
sub
sbb
movzbl
adc
add
xor
or
xor
mov
add
add
sub
mov
or
mov
mov
shrd
cmpl
movl
mov
mov
jmp
movl
movl
cmpl
jle
push
call
sub
and
mov
xor
mov
mov
xor
andl
cmpl
movl
not
mov
jmp
mov
cmpl
jl
pushl
push
call
sbbl
sub
sbbl
sbbl
mov
mov
adc
xorl
sbbl
shr
cmpl
movl
movl
mov
mov
jmp
mov
movl
cmpl
jbe
push
push
call
sub
sbbl
sbb
dec
inc
and
mov
mov
decl
xor
shl
xor
xor
sub
or
mov
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
call
dec
xor
or
sub
mov
xor
xor
notl
mov
addl
shrd
shr
mov
sbb
mov
mov
xor
mov
xor
andl
xor
subl
or
shl
lea
mov
xor
xor
sub
add
mov
xor
mov
orl
shrd
shr
cmpl
mov
movl
movzbl
jmp
movl
movl
cmpl
jle
pushl
call
subl
sub
adc
and
mov
mov
xor
mov
notl
mov
addl
jmp
cmp
inc
ss
mov
movsb
dec
mov
mov
mov
jle
scas
dec
imul
rcr
mov
xchg
aaa
fpatan
in
mov
jge
lea
jl
cli
xor
jo
repnz
mov
lret
xchg
xchg
jmp
push
or
add
in
into
pop
push
lret
and
shr
hlt
jae
sti
shlb
frstor
lret
pop
jae
cwtl
or
sbb
fnsave
pushf
mov
aad
out
lock
dec
mov
orb
mov
fdiv
add
xchg
shl
frstor
pusha
push
push
mov
aas
sbbb
and
scas
lahf
cld
ror
fucom
push
push
sbb
hlt
adc
fs
pop
xchg
push
or
loop
dec
mov
rcr
std
jl
ja
push
das
fistpl
bound
mov
ficoml
lods
negb
inc
jge
das
aad
fs
or
outsl
xor
xchg
insl
sbb
and
lea
repnz
push
adcl
js
insb
into
mov
cmp
mov
mov
adc
mov
fldl
xor
gs
in
jbe
lahf
jnp
sbb
dec
jbe
xor
fwait
mov
stos
push
stos
pop
gs
or
adc
loopne
dec
mov
mov
sbb
mov
adc
adc
and
cmpsb
stc
xorb
jmp
clc
xor
ret
dec
or
xchg
sub
in
and
xchg
xor
pusha
jl
sub
stc
inc
mov
cmp
pop
loop
adc
pusha
subb
mov
jno
push
popf
inc
jmp
in
mov
mov
les
lret
lods
pop
outsb
jne
sub
adc
repz
out
add
test
inc
xchg
xchg
jmp
fcmovu
outsb
pop
jmp
pop
dec
aas
cmp
out
push
inc
xchg
sub
popa
add
mov
and
fcmovnb
dec
mov
push
gs
lds
jecxz
xchg
mov
xchg
in
sbb
ljmp
dec
leave
sarb
mulb
les
push
dec
lds
xor
and
jmp
mov
in
lret
fucom
das
add
dec
push
popf
inc
out
mov
mov
leave
mov
out
pop
lcall
jl
sbb
add
je
pop
scas
test
outsb
adc
mov
call
mov
out
rolb
sbb
add
jmp
mov
fs
std
mov
mov
int3
icebp
js
stos
jmp
cmpsb
dec
sbb
es
xor
and
outsb
aas
jb
sbb
fnstcw
ss
mov
jne
lods
fsubrs
mov
and
flds
sbb
ret
rcr
xor
sub
mov
movsb
add
rcl
inc
lods
push
xchg
movsl
ficompl
cmp
and
dec
jl
fbstp
xchg
aas
cmp
pop
ret
dec
cli
cld
aad
cmp
xchg
pop
inc
push
mov
push
xor
shrl
mov
dec
mov
rorl
nop
inc
ja
outsl
pop
pop
leave
mov
in
lods
push
dec
shlb
fcoms
mov
xor
sub
mov
subl
xor
or
shl
mov
xor
imul
subl
mov
add
mov
shrd
mov
mov
orl
xor
movl
shr
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
call
add
sub
xorl
sbb
inc
not
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jb
call
adcl
adc
and
sub
mov
or
mov
addl
xor
adcl
or
subl
shl
add
sub
movl
mov
cmp
movl
mov
mov
mov
mov
jg
andl
shrd
xorl
mov
xor
mov
xor
shl
movl
xor
or
shr
subl
mov
cmpl
movl
mov
mov
jmp
movl
mov
cmpl
jae
pushl
push
push
pushl
pushl
pushl
pushl
push
call
movzwl
sub
mov
movl
sbb
mov
and
incl
mov
xorl
mov
mov
andl
shrd
movl
shr
addl
mov
sub
mov
subl
mov
xor
subl
xor
or
addl
shl
adcl
imul
andl
sub
jmp
jmp
pop
movsl
out
js
cwtl
movsl
lret
mov
fnstsw
call
mov
mov
fxam
push
jnp
rolb
pop
enter
push
inc
sub
lds
adc
mov
add
shlb
nop
mov
scas
push
mov
outsb
inc
and
push
add
xlat
pop
neg
std
out
enter
sub
jg
jnp
jno
ljmp
test
in
mov
cwtl
jl
cmc
les
inc
and
push
lcall
cwtl
sbb
or
aad
jo
or
mov
addr16
rorl
xchg
sbbb
and
in
fs
xchg
cltd
sbb
mov
push
xchg
xor
test
aam
rorb
or
jne
insl
and
out
or
ret
movsl
je
push
push
mov
mov
gs
inc
rorb
xchg
dec
inc
js
pop
xchg
in
inc
and
lock
sbb
adc
pushf
out
inc
mov
xchg
ret
test
pop
jg
neg
repz
xor
inc
les
pop
mov
xor
ss
xchg
fsubrl
ljmp
outsb
icebp
rcr
fidivrs
repnz
add
dec
or
testb
jo
fnstsw
mov
jb
dec
dec
xor
sbb
sub
icebp
jo
shll
sbb
aad
and
dec
fs
aaa
movsl
pop
dec
adc
int3
jbe
int3
dec
inc
xchg
addl
arpl
xchg
dec
inc
dec
inc
xorl
fwait
loope
fs
out
push
inc
shlb
aas
je
cmp
inc
push
call
jnp
cld
or
cmp
test
bound
cld
jle
insl
cmp
shrb
and
leave
nop
adc
push
xor
pop
xlat
xor
repz
out
aad
mov
cmp
mov
mov
fnstenv
jo
pop
dec
mov
jp
push
push
and
ja
sub
mov
sbb
mov
mov
add
jge
push
xor
into
jae
cmp
fisubs
adc
outsb
fs
mov
mov
adc
inc
cmc
or
rol
jb
in
int3
jae
or
in
jb
cmpsb
cmp
movl
pop
jns
lock
repz
inc
inc
and
imul
pop
xor
xor
adc
xchg
daa
fnstenv
push
mov
adc
mov
bound
lods
sarb
movsb
sahf
cltd
adcb
mov
lods
popa
lahf
sbb
xor
push
mov
or
movsb
adc
adc
xor
jo
xchg
mov
cmp
leave
mov
sbb
cmp
cld
lret
xchg
pop
mov
std
push
mov
cmc
dec
push
cltd
repnz
jge
insb
aaa
bound
icebp
push
les
ror
and
cmp
add
cmpsl
jp
or
cwtl
xor
add
orl
dec
movsb
mov
into
stc
inc
mov
xor
inc
cmpsb
push
lds
pop
add
dec
in
or
cmpsb
loopne
push
sbb
icebp
push
sub
jno
lcall
xorl
mov
mov
xorl
xor
adcl
shl
notl
xor
subl
or
jmp
cltd
jbe
fidivrs
mulb
in
mov
mov
fbld
pop
int
jge
faddl
andb
scas
adc
jae
sub
pop
xchg
outsb
loope
aad
imul
sub
sbb
outsb
sub
jne
cmp
cmpsl
pop
pop
add
daa
push
dec
insb
jo
dec
dec
xor
mov
leave
ds
setbe
lret
inc
sti
mov
lret
add
sub
outsb
ljmp
add
aas
punpcklwd
lret
out
xor
imul
inc
test
mov
rcrl
arpl
adc
scas
outsl
jnp
cltd
sti
subl
out
cltd
imul
divl
movsl
pusha
in
fmuls
xor
cmp
jbe
jge
popf
and
sbb
inc
sbb
mov
push
xchg
jo
jg
or
jne
mov
sbb
insb
push
imul
sbb
xchg
lods
inc
sub
inc
movlps
and
sti
ficoms
enter
pusha
notb
rcl
cwtl
jmp
sub
dec
cmp
sahf
aad
xchg
xor
cmp
cmp
arpl
adc
add
bound
adc
cmc
ljmp
pop
pop
pop
jge
lret
roll
roll
jg
loop
aaa
dec
xor
cmpsl
dec
xor
adc
mov
arpl
sarl
fsubrp
jnp
hlt
jne
ret
adc
int
adc
jle
sub
aam
data16
stos
push
push
dec
xor
mov
lahf
pop
xor
pushf
dec
aaa
aas
popf
faddl
inc
jmp
mov
jecxz
mov
dec
fldt
fistpl
addb
fldt
movsb
ja
dec
push
add
sub
dec
push
les
pop
ss
adc
adc
mov
pop
stos
rorb
push
stos
mov
mov
jmp
xor
pop
das
xor
push
jmp
or
push
mov
and
push
push
jmp
insb
lcall
test
xchg
std
pop
ffree
mov
fxch
cmp
sub
jmp
fcoml
inc
mov
xorb
mov
add
push
xchg
outsb
add
jmp
insl
fwait
hlt
jl
xor
pop
xor
pop
push
cmp
ret
lahf
scas
lock
rclb
cltd
popf
mov
add
inc
scas
push
dec
mov
jno
out
push
call
lahf
jp
mov
jp
fisttpl
testb
sub
in
mov
jae
out
lret
mov
cwtl
adc
or
je
and
dec
sub
enter
pop
enter
iret
cmp
xor
and
daa
es
or
inc
out
test
and
bound
ficoms
sbb
repnz
or
cmc
out
add
add
xchg
cmp
pop
and
arpl
dec
pop
ret
inc
and
cmp
repnz
jge
xor
inc
add
or
inc
xor
mov
sbb
xorl
push
aam
xchg
fsts
movsb
gs
xchg
xchg
imul
xlat
test
mov
mov
insb
pop
insl
pop
cli
xor
dec
push
or
and
repz
fimull
ljmp
inc
add
adc
mov
cmpl
mov
notl
jmp
movl
movl
cmpl
jae
push
push
push
push
pushl
call
xor
xor
xor
sub
sbbl
sub
xor
cmpl
mov
not
jmp
mov
mov
cmpl
jle
push
call
mov
mov
and
adcl
dec
and
sub
mov
mov
add
mov
orl
shrd
xorl
shr
and
mov
mov
mov
xor
xor
or
subl
shl
sbbl
add
jmp
bound
push
cmpsb
push
shll
cmc
mov
mov
iret
inc
dec
enter
gs
arpl
loop
push
push
mov
mov
inc
sbb
sub
mov
jmp
loopne
and
cmpsl
xor
sarl
sub
jge
addl
stc
pushf
in
ja
pop
lods
lods
xchg
pop
push
shrl
mov
arpl
and
jl
insb
mov
arpl
mov
ljmp
imul
dec
add
out
cltd
jb
dec
xor
pop
sub
js
sub
out
push
pop
push
fists
mov
call
ljmp
inc
dec
dec
pop
push
push
jp
outsb
insb
cmp
dec
stos
in
pusha
cmp
int3
mov
mov
cmpb
ret
inc
outsl
mov
dec
shr
jae
jb
jp
jmp
xor
mov
mov
lds
push
neg
inc
adc
ret
or
stc
in
pop
adc
push
int
or
xlat
pop
pop
mov
xorb
push
test
adc
test
loope
push
xchg
js
outsl
push
xor
daa
jnp
mov
paddsb
mov
or
addb
xchg
inc
inc
mov
mov
fucomi
popa
hlt
inc
cmp
cmp
jne
insl
mov
push
jmp
xchg
adc
sbb
addr16
je
xor
cli
adc
xorl
lock
lret
adc
gs
mov
out
and
stos
sti
out
in
push
call
call
cli
aas
arpl
push
xor
mov
jno
mov
das
xchg
jne
adc
jmp
shlb
in
sbb
sbb
adcb
int3
shll
ds
loopne
loope
insb
sahf
pop
stos
fwait
mov
add
push
ret
jns
xor
xchg
pop
fimuls
test
jle
lock
jnp
leave
inc
cld
sarb
shll
loop
scas
pop
iret
cmp
addl
push
addr16
cmpl
inc
faddl
rorb
into
test
lods
popa
fsubl
xor
and
adc
loope
pop
cwtl
pushf
pusha
inc
push
in
cmp
cltd
push
pusha
inc
mov
mov
das
ja
mov
icebp
sarb
mov
test
sub
ss
rolb
push
cwtl
lods
call
pop
xchg
shlb
and
popf
push
mov
ds
mov
mov
sub
pushf
dec
pushf
insl
push
daa
test
mov
mov
xchg
call
cltd
cmp
jecxz
adc
fs
in
int3
and
pop
dec
sbb
and
js
cmp
mov
sub
pop
sbb
cmp
jg
mov
mov
jmp
lods
test
into
fwait
and
xor
dec
inc
jns
mov
hlt
mov
sub
and
loopne
into
call
jge
fs
and
ficoms
mov
cmpl
mov
test
cltd
iret
mov
or
push
jae
pop
add
cmpl
not
movl
jmp
mov
cmpl
jne
pushl
push
push
call
mov
xor
mov
or
movzwl
and
xor
add
add
mov
mov
sub
imul
mov
cmpl
movl
mov
jmp
movl
cmpl
jb
pushl
call
adc
xor
add
mov
sub
xor
addl
sbb
sub
movzwl
xor
mov
mov
shrd
shr
cmpl
mov
movl
jmp
movl
cmpl
jae
call
adc
mov
and
mov
sbb
sbbl
add
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
jmp
cmp
cmp
mov
mov
sti
mov
mov
hlt
imul
pop
pop
dec
mov
stc
pop
xchg
xchg
sub
xor
adc
or
mov
add
fs
ss
fsts
outsb
dec
out
dec
je
sbb
cmp
jmp
jne
mov
add
xchg
lret
jno
push
cmp
stos
add
cmp
push
jae
jnp
pop
idiv
sbb
lret
addr16
jns
sahf
outsb
lods
loopne
or
mov
lahf
jmp
mov
lods
test
fmuls
push
fsubl
fdiv
dec
and
mov
add
push
mov
jp
mov
jo
push
pop
jecxz
rcrl
je
mov
lods
inc
inc
push
in
test
push
das
xchg
popl
test
xchg
movsl
movsb
pop
pop
inc
dec
in
nop
stc
jge
cmc
xor
test
imul
jns
cmpsb
sub
sub
push
aad
dec
push
lahf
pop
jo
sbb
mov
cmp
mov
push
or
jle
xchg
mov
insb
add
int3
dec
sub
push
mull
outsl
push
cmpsb
pop
in
cmpsb
xchg
pop
add
inc
inc
pushf
mov
dec
pushf
push
or
adc
jle
and
cli
jns
test
addr16
repz
adc
pop
data16
pop
push
xor
repnz
sub
dec
fldenv
mov
mov
data16
iret
push
jmp
lahf
mov
test
repnz
mov
jnp
test
stos
ss
pop
in
ljmp
mov
cld
mov
sub
mov
fstps
nop
pop
stc
popf
pop
aad
jp
xor
mov
xchg
mov
push
xor
xor
imul
test
push
mov
fidivs
or
jg
add
lret
call
push
mov
adc
ret
fisubs
hlt
std
and
leave
mov
mov
pushf
cltd
dec
sub
test
outsl
aaa
pop
adcb
push
pop
sbb
sbb
push
sbb
aam
jne
xchg
shll
push
stc
pusha
sbb
setb
imul
jo
stc
xor
or
outsl
mov
mov
in
cld
pop
lret
add
rcr
outsb
xor
sub
imul
add
divl
addb
cmp
out
bound
cmp
xor
fisttpll
call
fldt
push
enter
adc
rorl
sbb
sbb
mov
into
lods
repnz
sbb
add
mov
jl
arpl
inc
push
and
shll
mov
test
mov
lahf
sub
jno
xchg
cmp
pop
es
rcrb
push
xor
xchg
ljmp
push
pusha
and
mov
fldenv
xor
mov
jle
out
repz
clc
outsl
mov
fildl
pop
pop
cmp
xor
cmpsl
xchg
adc
rcrl
icebp
sahf
add
lds
mov
int3
shlb
or
jge
in
jmp
cmp
mov
mov
div
imul
inc
rorb
enter
add
aam
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
jmp
xchg
mov
fwait
or
cli
movsb
dec
jecxz
sahf
mov
les
mov
fcoml
dec
int3
inc
cmp
rolb
stc
insl
mov
inc
add
dec
sbb
stc
xor
out
ja
ja
in
jnp
cmp
gs
or
push
push
xchg
mov
mov
and
dec
aas
lret
repz
fdivrl
jo
call
lods
leave
ds
insb
in
mov
dec
lcall
sbb
aad
test
cmc
pop
push
xor
pop
cmp
add
ret
mov
push
nop
outsl
dec
pusha
and
cmpsb
inc
inc
or
xor
fucomi
fisttpll
loopw
dec
lcall
cli
sbb
sbb
push
js
cmp
imul
dec
push
loopne
ss
shr
xchg
xor
mov
add
ljmp
mov
xor
ret
jo
cmpb
test
inc
add
and
mov
pop
daa
push
fcos
and
ret
movsl
dec
mov
mov
cmp
mov
mov
repz
mov
xchg
shr
sbb
and
xchg
sbb
clc
aas
adc
shrl
jp
jecxz
cmp
jp
ljmp
gs
or
mov
mov
repnz
sub
mov
adc
jne
xor
sbb
vaddsd
rcrl
mov
cmp
push
sub
xchg
cvtps2pd
daa
jg
dec
and
fnstenv
lds
out
push
call
push
sbb
xor
mov
enter
xlat
icebp
repz
xchg
mov
dec
xchg
clc
dec
std
jl
cmc
pop
add
xor
mov
xlat
or
imul
fdivrp
pop
roll
aaa
aam
dec
xchg
pusha
inc
test
loop
fmull
imul
stos
pop
insl
negb
mov
cmp
or
out
bound
cwtl
negb
add
cmp
das
lds
ljmp
sti
jecxz
mov
pusha
shrb
js
add
dec
dec
fldl
fistl
fistl
sbb
push
xchg
cmp
cli
bound
xor
imul
cmpsl
and
add
cmpb
xor
lret
clc
jg
dec
sbb
push
mov
orl
out
icebp
aas
or
scas
enter
xor
mov
cwtl
rclb
shll
sahf
iret
and
int3
mov
dec
pop
mov
lock
cmp
es
scas
mov
into
and
xor
push
outsl
mov
pop
jl
scas
pop
sub
add
or
jl
jp
jae
fldcw
mov
cli
lods
jb
aad
pop
cltd
pop
pop
xchg
mov
push
cmpsb
or
mov
or
xor
out
cmc
scas
sub
es
push
in
sti
es
mov
loope
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
jmp
cmp
push
jl
cmp
rclb
mov
mov
shr
push
mov
shll
cltd
sub
into
xchg
jle,pt
test
sti
ret
lahf
ljmp
mov
adc
jae
inc
and
arpl
dec
fdiv
mov
insl
je
ljmp
add
push
mov
ds
mov
jae
loopne
pop
mov
test
mov
and
cltd
dec
movsb
ds
jnp
and
nop
xlat
lds
in
jns
enter
mov
lahf
insb
push
filds
nop
push
aam
sub
mov
iret
stc
sti
sub
add
mov
sbb
loopne
mov
test
add
je
xchg
das
inc
clc
and
jns
and
cmpsb
mov
push
dec
sti
ljmp
push
jnp
icebp
sub
fldcw
jle
loopne
mov
fwait
add
out
jecxz
xchg
outsl
incb
and
push
int3
push
int
sbb
ret
sti
adc
mov
shr
xor
inc
repnz
xor
push
xchg
fdivl
int3
sub
push
cwtl
cmp
loope
arpl
in
neg
in
dec
rclb
inc
jp
cli
sbb
jp
fidivrs
fistl
les
shlw
sti
loop
mov
xchg
sbb
sub
xor
mov
outsb
xchg
out
fbld
leave
dec
add
outsl
xchg
shlb
mov
mov
test
frstor
mov
into
push
mov
ljmp
ja,pt
ficomps
mov
xor
push
and
int3
pop
adc
js
push
adc
into
push
imul
jns
andl
div
in
out
faddp
xchg
push
mov
or
or
jo
insb
inc
jg
push
popf
push
and
push
iret
popf
fnstsw
stc
sub
inc
sub
int3
aas
jecxz
mov
or
xchg
fmull
push
adc
addl
test
pop
jge
push
mov
jmp
cli
fldt
aam
or
xor
movsl
aad
lods
dec
sub
lods
mov
stc
lret
mov
pop
inc
dec
xlat
sub
and
popl
mov
jb
push
in
xchg
dec
lea
cmp
and
push
pusha
xchg
cmpsb
mov
in
aad
aam
xor
mov
enter
jbe
sbb
je
sbb
mov
outsb
jnp
dec
fiaddl
adc
xchg
call
das
lock
fstpt
dec
xchg
lods
sub
sbb
inc
es
mov
cld
hlt
dec
xor
loop
adc
rol
imul
or
lahf
sbbb
subl
jne
nop
push
pop
pop
adc
add
mov
test
mov
cli
popf
or
cwtl
push
add
les
lds
sbb
je
pop
inc
movsl
sub
dec
adc
into
jb
push
cwtl
mov
out
rcrl
adc
xchg
jg
cmpsl
jle
inc
mov
mov
andb
mov
add
inc
rcll
push
stc
sbb
jmp
mov
out
test
cmp
clc
adc
mov
leave
fsts
jnp
pop
push
add
push
js
xorl
cmp
in
adc
out
sbb
cltd
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
mov
push
mov
idiv
movsb
mov
les
xchg
push
or
add
push
add
shrl
jo
lock
insl
fsub
fldenv
stos
insb
pop
push
mov
scas
cmc
and
dec
cmpb
xchg
dec
jle
and
add
mov
lret
mov
jb
insl
fs
push
sub
ljmp
mov
dec
push
movsb
push
adc
lock
xchg
inc
xchg
cmc
nop
mov
repnz
sahf
ljmp
mov
negb
les
mov
inc
out
mov
dec
push
shlb
push
cmp
in
xlat
insb
pop
pop
mov
mov
mov
jmp
fiaddl
jb
les
and
loop
rclb
jg
stos
sub
ds
inc
add
mov
push
popf
adc
push
mov
ret
dec
sub
mov
int
add
pop
jns
add
outsl
roll
push
mov
pop
out
mov
jae
lea
sbb
fcompl
jne
inc
mov
icebp
jno
aad
xchg
ret
inc
pop
add
sbb
outsb
cld
adc
push
jns
push
cli
jae
mov
stc
nop
push
or
sub
repz
aam
push
xchg
arpl
fld
std
and
push
push
das
inc
popa
jo
out
in
pushl
sti
pop
mov
jno
movsl
lret
bound
fwait
orb
div
xchg
push
or
test
insw
inc
mov
mov
xorb
fiaddl
pop
mov
lret
inc
insb
inc
fdivrl
add
xor
mov
in
lods
push
repz
lret
jg
mov
out
pop
lods
or
mov
adc
cmp
pop
inc
jne
into
in
dec
and
add
dec
ss
mov
loop
sbb
jmp
mov
jno
mov
adc
or
outsl
aas
insb
jnp
fsubrs
push
add
hlt
jp
or
jp,pt
push
cltd
clc
in
xor
mov
cmp
lock
aas
mov
xchg
sub
shlb
clc
lret
lret
sahf
out
lret
sbb
dec
jno
push
sub
push
test
mov
jge
sub
jge
dec
das
les
ljmp
dec
cwtl
inc
mov
mov
push
icebp
mulb
jg
push
add
jnp
jae
adc
add
mov
and
mov
aas
call
or
andb
cwtl
je
es
loop
mov
in
mov
lret
lret
push
scas
mov
outsb
add
iret
and
aam
inc
jle
or
std
mov
and
out
cmp
enter
push
ret
bound
lods
popl
fidivrl
movsl
pop
pop
jns
xor
test
fwait
shll
mov
dec
repnz
iret
cmp
xor
mov
add
xchg
ficoms
iret
or
loop
repnz
push
movsb
cmp
rolb
xor
movsb
lods
outsl
push
bound
cmp
clc
cwtl
pop
int
sub
pop
loop
fs
ret
cmp
dec
out
dec
nop
push
in
ja
ret
dec
ret
sbb
ficomps
call
cli
std
mov
mov
shrd
shl
shr
mov
mov
xor
mov
jmp
sub
jnp
mov
and
pop
sarl
les
stos
and
lret
ja
dec
lcall
outsb
sub
sub
mov
hlt
push
or
rcrb
stos
aad
jno
adc
mov
frstor
loopne
daa
sub
pop
inc
stos
outsl
inc
jnp
push
mov
or
test
push
cwtl
and
mov
adc
mov
jge
xor
out
mov
stc
push
in
pop
xchg
mov
lret
and
insb
scas
xor
add
pushf
outsl
adc
push
jae
pop
adc
lock
jp
push
aam
clc
cmp
jnp
and
ret
jnp
sub
leave
mov
mov
daa
push
sub
enter
cltd
sbb
ficoms
pop
push
pop
loopne
in
inc
outsb
dec
jp
jp
cmp
aad
out
movsl
cmp
sbb
paddusb
rclb
nopl
inc
out
cmp
fisttpl
sahf
shrd
dec
jle
sbb
into
xchg
mov
jns
je
mov
mov
in
pusha
popa
mov
mov
bound
addl
inc
cld
xchg
push
rolb
out
mov
dec
dec
stos
dec
sub
into
pushf
repnz
jno
jnp
jno
add
and
dec
iret
mulb
shrl
pop
movsb
mov
pop
adc
call
out
push
push
jae
cmp
sub
inc
sbb
sub
cmc
inc
lds
xchg
pop
inc
cwtl
scas
push
in
xchg
call
xor
or
inc
cmc
movsl
mov
mov
inc
ret
cmc
mov
ss
or
daa
out
out
fnsave
inc
movsl
dec
push
jp
or
pop
mov
aas
add
in
in
cmp
adc
gs
lock
push
sbb
xchg
mov
notb
jb
inc
mov
xchg
sbb
pop
add
cmp
lret
cs
dec
or
mov
loop
iret
jne
stc
xchg
sbb
and
stos
jp
sti
adc
cli
xchg
addl
jns
jmp
subl
adc
or
adc
pop
bound
cmp
push
addr16
scas
xor
ret
inc
mov
adc
pop
fs
sbb
ficomps
xor
and
stos
cmp
jl
cmp
insb
push
in
sub
sahf
fsub
imul
icebp
data16
loope
cmp
inc
xchg
pop
pop
into
adc
cmp
add
mov
dec
in
roll
call
jmp
jp
pop
pusha
sbb
xchg
lea
jle
pop
pop
fadd
push
xchg
ret
popf
mov
ja
stos
cld
sub
xchg
aaa
adc
jg
cmp
mov
movsb
dec
out
mov
mov
push
dec
inc
lock
mov
inc
nop
out
mov
sub
imul
scas
adc
rclb
data16
cmp
sub
and
inc
mov
shll
jbe
dec
and
lret
pop
sbb
jb
mov
lfs
pop
enter
test
or
or
mov
dec
not
jmp
int
mov
sbb
mov
sar
imul
les
shll
mov
outsb
dec
cmp
cmpsb
rorl
lahf
ds
inc
scas
into
aaa
arpl
ret
pop
fisttps
cmp
fwait
das
xchg
push
loopne
pop
xor
pop
dec
sub
clc
inc
add
xchg
stos
popf
lock
pop
cmpsl
aad
sub
stos
push
add
mov
clc
sar
mov
mov
jne
sub
cli
das
mov
call
xchg
xor
sahf
add
fisubrl
jno
pop
xchg
ret
push
sub
loope
cmpsb
daa
loopne
clc
insl
fcomps
dec
add
loop
dec
mov
jmp
xchg
adc
sbb
jbe
xchg
es
adc
inc
jb
mov
test
mov
fidivs
push
push
cmpsl
pop
jns
sahf
movsl
loopne
pusha
sahf
out
adcb
cmp
mov
popf
xlat
pop
sub
mov
lea
jl
cmc
movsb
and
ds
or
adc
push
mov
clc
push
inc
xor
add
call
pop
mov
into
mov
push
xchg
xor
cs
test
lea
mov
jge
sbb
scas
mov
fdivr
dec
ret
inc
pop
sahf
shll
lods
dec
add
test
mov
mov
sub
stc
rol
jne
fmul
sbb
fidivs
adc
push
pop
pop
mov
pop
cmp
stos
sub
repz
mov
cmpsb
adc
xchg
insb
inc
mov
pop
call
inc
or
push
hlt
xor
aad
outsl
sub
pusha
pop
stos
sbb
mov
aas
insl
jne
mov
sahf
inc
in
repz
add
repz
cmp
cmp
add
add
pushf
jns
cli
and
xchg
data16
aas
jecxz
mov
sub
mov
cltd
ror
push
sti
and
jb
fwait
sbb
popf
in
jne
dec
pop
jl
pop
loopne
ret
inc
in
sbb
push
int3
cld
ss
test
popf
inc
popf
pop
orl
mov
mov
int
icebp
repnz
loope
popa
xchg
mov
xlat
xchg
repz
je
and
shll
add
jge
jnp
out
stc
mov
pop
add
arpl
xchg
xchg
or
rorb
mov
lds
sbb
push
nop
pop
and
mov
sahf
movsl
popf
dec
test
nop
rolb
or
call
jae
mov
cmpsb
jnp
add
ret
insl
add
jns
xlat
mov
push
mov
cmp
je
andl
push
outsb
xor
xchg
mov
xchg
or
add
cmc
mov
xchg
inc
adc
mov
sbb
and
xchg
in
jmp
push
fisubrs
jle
dec
xchg
lea
data16
andb
std
or
cmp
jbe
test
adcl
dec
ret
adc
or
sub
pop
mov
adc
out
push
adc
nop
fistl
sti
or
adc
mov
insb
sbb
cmc
aam
cwtl
adc
pop
mov
and
test
dec
mov
rcrl
pop
inc
mov
iret
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
jmp
cmpsb
test
mov
xchg
loope
clc
movsb
mov
les
xchg
cmp
test
push
jmp
pop
jne
mov
sbb
pop
in
lock
xchg
enter
add
cs
inc
cmp
fnsave
enter
movsl
inc
mov
jecxz
mov
or
outsl
call
ss
push
outsb
dec
out
shl
xor
dec
cmp
adc
mov
sub
pop
adc
andb
lret
pop
xor
inc
aas
lock
loop
out
pop
mov
mov
test
or
mov
sahf
paddq
pusha
or
or
fbld
sahf
pop
adc
ficompl
sub
jno
pop
rorb
cmpsl
setno
xor
stos
ret
shl
lret
lcall
pop
and
loop
sti
mov
jnp
movsl
dec
sub
idivb
or
push
mov
cwtl
ja
aam
cmc
pop
xorl
push
scas
mov
or
loopne
in
repnz
ja
jge
mov
push
pop
enter
pop
cmpsb
imul
dec
repz
ficoml
sub
push
sbb
sbb
add
push
lods
xor
mov
jl
cmp
add
das
jecxz
add
push
addr16
inc
and
xchg
push
or
sbb
adc
popf
xchg
sbb
inc
cld
rcl
jp
push
ret
fiaddl
mov
insb
push
mov
inc
imul
mov
xchg
jl
or
jb
mov
ret
sbb
in
mov
push
fcomp
daa
sbb
out
add
or
xchg
push
icebp
mov
adc
sti
iret
mov
inc
repz
jne
adc
bound
mov
repz
arpl
shlb
clc
jae
or
and
ficoms
inc
xor
cmc
and
cwtl
rol
pop
cmp
mov
mov
mov
outsb
aad
mov
repz
sarl
mov
adc
imul
aam
xlat
inc
mov
fldpi
mov
pop
mov
ret
and
jge
dec
cli
mov
adc
mov
into
and
call
push
pop
xchg
xchg
xchg
outsb
loope
leave
mov
push
ds
jo
in
inc
dec
stc
mov
dec
iret
jge
mov
enter
mov
xor
sar
sub
sbbl
fcompl
icebp
ljmp
std
fwait
lods
jns
mov
mov
add
xor
hlt
jne
pop
pop
cwtl
xchg
addr16
pop
mov
lock
push
sbb
or
and
and
hlt
mov
mov
daa
fs
xor
mov
push
or
dec
mov
push
div
lods
mov
loope
cmpsb
cltd
jle
push
mov
mov
jae
test
jnp,pn
mov
adc
addl
scas
pushf
jns
jecxz
inc
bound
loop
cmpsb
iret
testb
inc
gs
insb
hlt
xor
int
ss
aas
popa
push
xchg
pusha
in
ja
sub
and
or
adc
aaa
mov
jne
cmp
lods
jns
xchg
push
cli
in
jae
incb
lods
mov
push
pop
jg
cld
xchg
mov
mov
shl
xor
mov
mov
mov
jmp
pusha
adc
adc
pop
sub
mov
mov
or
adc
push
stc
sub
push
and
dec
mov
xchg
addb
or
sbb
into
mov
xchg
push
jae
inc
shrb
dec
mov
push
push
lret
mov
jne
gs
cmp
in
adc
or
es
mov
inc
mov
pop
and
jl
in
into
adc
xchg
mov
add
in
and
iret
icebp
push
gs
call
les
fcomip
jmp
jp
cmpsl
pop
push
or
xchg
into
add
stc
inc
les
sbb
hlt
ja
in
xor
push
iretw
in
movsb
xchg
lods
mov
fistps
lret
adc
loop
mov
pop
add
dec
fisubrs
jecxz
nop
ljmp
aam
sub
mov
rol
adc
pop
test
mov
push
popa
xor
push
mov
push
pop
shlb
adc
stos
jle
call
mov
dec
xchg
lods
das
mov
pop
mov
xchg
cmc
inc
out
mov
push
dec
int3
and
xchg
adc
and
sbb
aam
mov
mov
verr
xchg
mov
sbb
in
add
decb
mov
fbld
std
jecxz
xlat
scas
adc
sti
dec
mov
rorl
jp
jns
mov
nop
mov
push
lods
adcb
dec
jae
add
mov
repnz
push
push
sbb
loopne
jecxz
mov
and
pop
ljmp
repz
mov
jo
imul
xchg
rsqrtps
test
fiaddl
xchg
mov
xchg
sti
fstp
or
call
jnp
popf
push
lock
jae
iret
or
push
jp
sub
cli
xor
mov
push
mov
sub
sahf
mov
inc
mov
outsb
mov
or
xlat
negb
push
flds
mov
insb
push
xchg
mov
adc
aas
stos
adc
mov
add
mov
xor
in
and
int
rorb
out
xor
mov
inc
mov
sbb
lret
mov
data16
sbb
jp
mov
scas
jbe
inc
rdpmc
insl
out
cmc
fldl
mov
imull
mov
stos
or
jb
out
insb
cs
and
dec
in
pop
je
cltd
in
and
mov
inc
dec
sub
add
push
inc
add
pop
outsl
pop
sub
mov
push
jge
fadds
or
or
je
loopne
enter
jmp
mov
xchg
adc
test
inc
mov
or
xorl
nop
sbb
popl
xor
cmpsl
sti
push
lods
cmp
imul
pop
push
jge
cmp
inc
mov
jp
lcall
mov
mov
push
xchg
xchg
aam
in
cwtl
js
jb
pop
pmulhuw
jns
out
and
fldcw
mov
push
mov
mov
and
adc
xchg
into
push
stos
cwtl
dec
bnd
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
jmp
aas
jne
arpl
jl
jns
das
inc
xchg
fisubrl
sahf
mov
les
mov
imul
mov
push
std
fdivrl
mov
inc
fbld
out
leave
les
lods
aaa
outsl
movsl
lret
cli
cwtl
lods
gs
xlat
inc
jns
push
push
mov
push
dec
fistpll
gs
push
fiaddl
pop
lods
aam
jae
sarb
mov
js
and
outsl
mov
test
jp
jo
ds
ljmp
fstpt
in
loope
movsl
es
dec
mov
mov
ljmp
mov
push
fmul
call
pop
stc
lds
cmp
and
js
pop
scas
test
push
mov
cmovle
push
or
ret
lahf
pop
jl
cwtl
das
jecxz
clc
mov
sbb
add
aas
cmp
sub
lods
pop
inc
jecxz
lahf
sbbl
daa
jecxz
fildll
xchg
push
jnp
jge
xchg
ja
daa
out
cld
leave
popa
push
in
lock
cs
pop
stc
movsl
lret
or
ja
mov
insl
dec
int3
sub
cs
xor
cmp
movsb
stos
je
loope
xor
flds
nop
cmp
pushf
in
adc
add
mov
mov
mov
pop
aad
or
psrld
xor
sbb
jns
mov
pop
outsb
in
adc
repz
jo
mov
xchg
mov
lahf
loop
or
add
testb
inc
mov
std
or
cltd
lock
cltd
or
mov
or
stos
test
mov
lock
ret
clc
pop
cmp
mov
pop
xchg
jmp
xor
repnz
fisubl
jno
sbb
aaa
cmp
fwait
and
arpl
sbb
push
mov
ljmp
mov
push
dec
ja
in
inc
pop
test
lods
mov
jne
cmpl
shrl
cwtl
xchg
lret
fldt
iret
shrb
rcrb
lods
and
pop
adc
ljmp
jge
enter
mov
lods
fnstcw
cmpsl
mov
mov
dec
xchg
js
das
jb
stc
or
dec
inc
fldt
and
xchg
fsubrl
imul
movsl
je
lret
fcmovnu
mov
sti
clc
icebp
sbb
std
sbbb
jl
test
mov
divl
fdivrl
push
cmp
pop
cmp
lcall
push
jge
scas
lods
xor
adc
mov
cli
daa
mov
lock
loopne
loopne
lea
lcall
dec
push
ficompl
imul
adc
addr16
add
imul
loope
add
mov
pop
inc
popa
jp
out
lods
stos
call
ljmp
mov
loopne
xor
rcll
xchg
xchg
mov
mov
cmpsb
sub
adc
add
lds
jb
mov
test
add
and
xchg
imul
testl
sbbb
insl
shr
xor
push
adc
cmp
inc
xor
pop
inc
cmpb
nop
sbb
jbe
dec
mov
adc
dec
pop
outsb
xchg
and
aas
loopne
aam
cld
pop
mov
loop
pop
pop
pop
mov
arpl
cmp
jmp
inc
int
sti
add
inc
sub
add
ja
jns
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
jmp
xchg
cld
pop
cmpl
iret
nop
mov
les
les
loopne
cmpb
mov
sbb
pusha
jo
lods
mov
aad
cli
call
pop
push
fsubrp
arpl
repnz
int3
sub
dec
xor
inc
mov
cmc
cmc
mov
and
push
mov
mov
fs
xor
jo
jmp
adc
cmp
jno
mov
lock
push
dec
sbb
test
mov
xlat
cmpsl
push
sub
push
pop
jo
fs
push
push
xchg
and
sbb
add
pop
and
inc
pop
add
outsb
dec
mov
rorb
dec
jb
adc
ljmp
lahf
dec
xchg
out
jns
dec
call
pusha
cwtl
jle
adc
mov
sub
sahf
inc
out
jge
stc
movsl
cltd
clc
mov
shll
clc
mov
movsl
fs
jne
add
inc
xor
adc
gs
xchg
sub
incl
xchg
iret
or
jg
imul
xchg
pop
dec
js
mov
fbstp
gs
inc
mov
lret
mov
mov
fstpt
or
lods
sbb
addr16
dec
mov
jg
sbb
arpl
lret
mov
inc
lds
andl
push
shll
and
cmp
dec
mov
fcoml
sti
cmpsl
into
pop
pop
loop
jg
dec
jno
sbb
inc
mov
fwait
jp
mov
je
sti
insl
jb
mov
je
mov
pop
cmc
xchg
movsb
xchg
pop
in
mov
sub
jne
sbb
sbb
jbe
clc
jo
cmp
insb
sahf
and
mov
lret
rcrl
popa
or
popa
xor
mov
pop
jo
sub
test
jb
clc
mov
das
pop
mov
fwait
repnz
ret
aaa
dec
sbb
sbb
lds
pusha
or
xchg
and
and
dec
jecxz
shll
je
xchg
fdivp
mov
jno
mov
adc
xor
decb
sub
cs
fidivrl
mov
inc
xor
jmp
in
dec
aam
faddl
mov
mov
cld
pop
pop
sbb
testb
test
xor
inc
movsb
and
push
pop
and
or
lret
xchg
fucomi
nop
mov
mov
jnp
lods
fwait
ja
adc
inc
ss
and
or
cmp
popa
sbb
imul
xor
ja
xchg
aaa
jno
loop
into
jl
lock
fildl
mov
inc
cmp
xchg
in
imul
into
inc
lret
or
data16
arpl
mov
jmp
aaa
add
jb
das
cli
jae
xor
test
push
sub
mov
jmp
push
std
xchg
hlt
orl
xchg
daa
push
pop
pop
jo
xlat
jmp
sbb
mov
cmpsl
bound
mov
inc
adc
test
dec
mov
mov
jp
enter
push
test
or
fdivrs
lods
push
mov
cmp
jecxz
int3
aad
cmpsb
test
frstor
insl
fmul
aam
jne
mov
adcb
lcall
add
fiaddl
inc
xchg
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
jmp
stos
outsb
jne
mov
add
scas
sub
movsb
mov
les
xchg
enter
pop
and
cmp
jo
mov
or
int3
dec
loopne
int3
sub
mov
rorb
jp
jp
sub
inc
sbb
inc
in
lods
scas
and
inc
push
adc
sbb
push
frstor
or
xchg
inc
je
or
dec
push
pop
or
notb
sub
ret
mov
pop
push
mov
rcrb
sub
push
pop
add
push
sub
in
aas
mov
push
mov
rcrb
andl
mov
mov
fsubrl
andb
push
movsbl
dec
sub
shrb
jmp
pop
or
add
jbe
insb
pusha
outsb
fs
in
data16
fistps
out
ljmp
mov
mov
adc
sub
les
adc
lods
xor
cmp
cwtl
cwtl
mov
divl
lret
hlt
pop
orb
je
enter
mov
xchg
cmp
fcoms
lds
movsb
cmp
lcall
dec
call
sub
xor
imul
jmp
sub
sarb
stos
lds
fwait
outsl
fmul
loope
inc
mov
fdivrl
mov
fldt
lahf
adc
in
adc
out
int
mov
leave
or
cmp
in
fs
loope
mov
add
repz
scas
sbb
data16
lcall
negb
inc
aam
fisttpl
or
stos
jmp
lea
inc
subl
icebp
mov
adc
or
mov
pop
dec
cmpsb
sbb
int
dec
pop
adc
loopne
dec
mov
shll
xchg
adc
sub
fistpll
cmp
scas
cmp
movsb
mov
mov
or
push
jg
rclb
jns
pop
cmp
lods
sub
leave
mov
xor
sbb
cmp
lock
and
das
mov
inc
lahf
sbb
out
sarb
xor
hlt
rcll
pop
enter
cs
mov
xchg
pop
add
in
xchg
arpl
ljmp
lret
movsb
xchg
stos
push
out
push
push
add
mov
addl
popf
mov
cs
or
ficoml
xlat
mov
mov
or
lret
pusha
jne
faddl
add
movsb
adc
and
cmpl
repnz
rclb
adc
in
imul
arpl
xor
loope
xchg
jmp
cmp
or
out
out
call
in
cld
fwait
mov
jno
nop
xor
adc
xor
lret
lcall
adc
inc
lahf
or
jl
fistl
jl
pop
push
aas
jge
jp
sbb
imul
xchg
mov
scas
mov
lcall
test
arpl
loopne
mov
insb
dec
popa
or
jno
sti
std
adc
xchg
cmp
pop
push
push
mov
outsb
into
negb
aam
sahf
sar
in
push
test
int
into
mov
adc
mov
lret
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
jmp
test
lea
mov
test
sahf
cld
lds
dec
mov
mov
out
out
lret
ret
daa
pop
or
inc
clc
sub
inc
and
iret
jecxz
push
pusha
and
xchg
mov
xchg
mov
pop
in
ss
pusha
icebp
idivb
or
aaa
popf
jno
fstpt
repnz
xor
pop
dec
test
lret
jmp
and
xor
and
cmp
inc
in
and
xlat
jle
cmp
lds
shrb
inc
push
aam
push
mov
testb
push
sub
cmp
xor
cwtl
es
out
in
stc
fldcw
out
jmp
or
jp
icebp
rclb
jnp
cmp
stos
shl
jg
add
pop
add
adc
test
dec
mov
pop
roll
and
aad
jb
fcmove
frstor
xchg
mov
mov
sbb
and
and
loope
outsb
cmp
ret
lret
loop
mov
sub
jecxz
insb
mov
mov
out
inc
jno
or
adc
jbe
or
and
and
cld
or
jp
sbb
mov
cmp
insb
lcall
jmp
xor
mov
out
fimuls
repnz
std
dec
sbb
jnp
fsts
fildll
lahf
nop
push
add
xchg
in
scas
xchg
jne
sbb
inc
mov
lea
out
xchg
orl
push
sahf
jb
daa
adc
sti
fstpt
test
xor
xchg
sub
sbb
sbb
rep
cmp
adc
mov
jnp
and
cmpsb
movb
adcl
cmpsb
in
mov
mov
add
data16
das
in
jmp
test
pop
push
in
movsb
popa
xchg
adc
arpl
pop
lds
jle
sbb
je
sbb
jg
mov
xchg
jecxz
and
xchg
ret
mov
shlb
in
jg
repnz
test
cli
hlt
jns
outsb
sub
xor
out
dec
pop
std
jge
push
cmpsl
out
xor
and
fadds
sbb
inc
push
outsb
or
adc
roll
cmc
scas
icebp
mov
push
sub
clc
stc
outsl
pop
call
add
cmp
jno
repz
and
ret
xchg
in
cmp
mov
adc
in
mov
lock
xchg
mov
out
into
rcl
sbb
pop
fwait
lcall
sbb
into
pop
push
js
adc
divl
rclb
mov
xchg
clc
push
push
and
stos
fstpt
mov
outsl
adc
enter
leave
cmpsb
push
adc
or
and
mov
or
rol
mov
xor
iret
fildl
xor
push
xchg
aas
jecxz
pop
and
push
stos
sbb
and
jo
out
pop
jecxz
daa
lods
jno
data16
pop
mov
adc
sbb
dec
lcall
sub
xchg
mov
cmc
mov
fs
fisttpl
lcall
cmp
jl
sbb
mov
jns
pop
add
xor
xor
xor
xor
mov
jmp
mov
ds
pushf
test
stc
jo
inc
fldl
ss
sahf
mov
les
mov
dec
pop
xchg
cltd
mov
adc
xor
cmc
xchg
xchg
int3
scas
add
jbe
fists
test
sbb
out
xorb
push
pop
sbb
pusha
scas
popa
push
mulb
and
mov
cmp
pop
fstpl
out
jmp
fildll
lods
popf
scas
add
popf
cld
movsb
mov
cmp
jecxz
or
push
fisubrl
in
mov
clc
in
xchg
pop
adc
inc
ret
in
fsubs
adc
imul
in
xchg
jecxz
add
insl
add
pop
xlat
daa
out
jg
push
xor
mov
test
test
add
es
xor
sbb
imul
push
ss
fxch
gs
mov
jl
invd
bound
outsl
call
adc
jno
pop
outsb
mov
inc
stc
xor
cmp
fs
addr16
or
xlat
fsubl
repnz
pop
pop
ret
adc
cmpsb
push
xor
mov
cmpsb
sbb
mov
cld
adc
orl
in
xlat
lds
sarl
iret
and
sbbb
push
test
jns
repz
lea
cmp
jnp
gs
aad
cld
mov
ret
test
popf
mov
je
push
es
jg
js
dec
xor
nop
scas
and
mov
je
repnz
dec
pop
xchg
cmc
aad
jecxz
jmp
mov
xor
popf
es
popf
fwait
shlb
or
cmp
pushf
xchg
pop
sbb
push
xchg
in
xchg
ds
cmp
add
cmp
pop
dec
xchg
or
inc
clc
cmp
andl
add
mov
fsubrp
popf
cmc
icebp
lcall
in
jo
rorb
and
cmp
test
pop
xlat
insl
shl
push
sbb
in
sub
mov
incl
and
xor
shrl
xor
sub
dec
cmp
popa
loop
rcr
inc
mov
in
pop
dec
ja
fwait
dec
lret
mov
loop
enter
cmpsl
push
sub
xchg
and
jae
aaa
lock
mov
sbb
or
out
jo
push
xor
out
dec
test
lock
inc
and
push
repnz
jns
mov
dec
xchg
and
ds
iret
js
add
xor
add
mov
cmp
into
jge
iret
mov
mov
xchg
jecxz
jmp
lds
push
dec
fsubrp
lret
clc
jno
xchg
aad
push
cmp
xlat
repnz
mov
je
xchg
jnp
imul
mov
cs
push
mov
in
sub
insl
mov
dec
cmp
stc
push
flds
mov
dec
insl
dec
js
ds
jmp
les
loope
loopne
cmp
lahf
insb
stc
aam
mov
push
movsl
nop
repz
fsub
fnstsw
shlb
stc
xor
mov
fistps
loope
pop
iret
int
jle
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
jmp
sbb
pop
lcall
fnsave
mov
mov
ds
mov
add
push
mov
dec
cmp
sarl
add
clc
pop
or
in
paddb
shrb
cmp
lds
and
ret
loope
sbb
mov
in
pop
xchg
xchg
mov
add
push
or
ret
lods
sbb
mov
fdiv
inc
mov
aad
in
sbb
xor
fwait
add
mov
sub
stc
loopne
pop
sbb
dec
insb
mov
lcall
ret
pushl
xchg
popf
add
clc
daa
in
dec
pop
int3
cs
or
xor
jns
xchg
dec
cld
ret
pop
adc
ss
aad
xchg
fs
pop
mov
dec
roll
mov
jno
push
gs
xchg
push
sbb
push
cwtl
sub
add
dec
repz
je
push
aam
sahf
push
mov
in
movsl
xchg
out
ret
insb
adc
inc
mov
fwait
or
and
cli
orl
and
and
jbe
push
mov
cld
lcall
repnz
jne
push
data16
or
add
aad
lret
rorl
negb
cmpsb
pop
jecxz
shrl
jb
xor
fwait
aaa
jns
dec
pop
test
add
sbb
inc
or
mov
xor
xchg
mov
jle
sahf
cld
stos
pusha
ljmp
jle
in
in
xor
dec
sahf
fstpl
sti
lods
xor
mov
add
push
fidivl
cmp
and
or
and
stos
and
outsl
jne
int3
xorps
push
cld
outsb
push
xchg
dec
add
cmp
mov
push
fs
inc
push
outsl
daa
cmp
push
sbb
mov
loope
push
pop
out
pop
jne
repz
rol
repz
lahf
out
or
push
les
push
jns
daa
jno
jne
xchg
in
adc
mov
push
movsb
pop
pop
js
jns
movsb
xchg
mov
pop
leave
mov
lods
mov
jnp
mov
lret
mov
mov
in
out
mov
add
jmp
cmpsb
idivb
sub
cmp
mov
mov
int
movsb
sahf
and
int3
xchg
sub
lahf
or
and
ljmp
pop
imul
popf
fdivrs
cmp
inc
adc
xchg
mov
fdiv
adc
push
xor
jmp
adc
xchg
scas
jbe
cwtl
mov
cltd
pop
pop
dec
add
ds
addr16
fdivrs
fcomps
jle
and
test
ret
push
mov
addr16
loope
push
mov
sbb
repnz
fnsave
cmpsb
popa
ss
cs
inc
pop
xor
cmpsl
cwtl
jb
inc
add
mov
rorl
fistps
rol
mov
xchg
and
inc
popa
dec
lods
and
xlat
jno
sub
pop
movsb
push
rorl
aam
mov
lret
sbb
xchg
and
pusha
cmc
sbb
jmp
pop
jp
push
inc
or
mov
inc
adc
adc
fnstenv
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
jmp
cmp
movsb
inc
movsb
ret
xchg
mov
lcall
les
xchg
mov
inc
ret
push
mov
sbb
out
jmp
jo
test
xchg
add
and
sti
xchg
sub
push
add
mov
sti
popf
inc
cmpsb
xor
jg
push
daa
mov
mov
mov
dec
mov
arpl
inc
into
shrl
xorl
aad
aas
mov
insb
push
mov
add
cmp
xchg
les
stos
lahf
xchg
fisubs
std
rcrb
rcll
sbb
leave
mov
pop
enter
out
out
push
adcb
les
inc
push
lahf
cmp
std
test
cltd
stc
sub
xchg
aas
adc
repnz
cmp
xlat
lods
jno
into
xor
pop
mov
les
pop
ret
das
or
xor
das
xchg
pop
lods
xchg
mov
mov
sbb
jg
mov
pop
mov
inc
fistpl
xchg
sahf
adc
je
aaa
sbb
dec
gs
fidivrs
pop
xchg
popa
adc
or
rcr
out
lret
imul
scas
lret
js
pop
bound
sbb
mov
std
lcall
mov
ss
sbb
lea
es
or
cmp
fisubl
mov
fisubrl
or
fists
cli
test
sub
fcoml
mov
mov
test
aad
cltd
imul
std
outsb
sarb
scas
js
pop
sbb
jbe
outsl
dec
divb
hlt
stos
push
sbb
sub
mov
and
push
jecxz
jns
lods
jmp
sbb
sbb
xchg
fs
arpl
and
lcall
stos
dec
dec
ja
scas
mov
xor
aaa
iret
push
out
stos
jae
push
mov
daa
lods
int
inc
jno
push
adcb
pusha
into
pop
mov
cmp
dec
rclb
push
cmpsb
scas
lret
out
pop
jbe
pop
mov
ficompl
mov
push
jle
in
loop
test
call
movsb
aam
loope
scas
enter
push
mov
push
or
fisttpll
lods
sbb
xchg
std
stos
std
cmp
pop
xchg
sub
shrl
push
scas
fs
push
sub
and
sbbb
ds
push
fidivl
ss
jl
orb
in
xor
xchg
divb
add
or
nop
push
das
xchg
xchg
out
pop
call
fmull
ss
inc
mov
std
xor
cmp
push
movsl
xor
fcomp
test
fmull
sub
xlat
fwait
rclb
inc
ds
out
cmp
adc
jl
add
outsb
leave
ret
in
fidivrl
lret
sub
xor
or
jg
lahf
dec
fists
call
cmpl
mov
sub
jg
or
xor
xchg
sti
fcompl
jg
out
dec
and
push
xchg
push
pop
mov
mov
jmp
lods
xor
aaa
roll
jge
xor
add
cs
fisubrl
pop
and
dec
not
inc
in
stos
or
cmp
inc
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
jmp
out
pop
jns
jns
mov
repz
adc
sahf
mov
les
mov
mov
in
mov
bound
mov
sub
hlt
sti
cmp
cs
call
dec
adc
sarb
cltd
in
cmpsl
orb
cmp
add
addr16
push
repz
cmp
jecxz
xchg
xor
call
ret
ja
mov
and
lret
adc
xchg
inc
lock
jo
enter
movsb
jns
mov
add
int
jmp
scas
aam
int
or
and
mov
shlb
add
das
dec
add
jle
int
movsb
dec
jno
inc
sahf
shl
pop
fwait
in
push
into
inc
shr
dec
lret
lods
cmp
sbb
sbbl
jae
mov
jle
mov
fiadds
mov
jle
dec
negb
xchg
cmp
loop
stos
sub
xlat
mov
test
sub
out
lahf
inc
add
popa
mov
xor
mov
jns
loope
mov
pop
fsubrs
push
dec
clc
divb
lods
dec
xchg
sub
fnstenv
fsubrs
and
jmp
dec
sbb
lret
inc
and
inc
int
mov
jle
cmp
pop
outsb
adc
sbb
push
jmp
push
mov
and
in
icebp
mov
pop
jecxz
mov
in
mov
nop
lret
xchg
jne
in
cmp
mulb
sub
aas
mov
les
into
mov
lods
jecxz
subb
mov
das
in
ds
pop
xchg
mov
pop
adc
inc
add
push
aaa
xchg
pop
cmovns
mov
pusha
inc
imul
jno
popl
cld
xchg
movsb
movq
hlt
dec
pusha
aaa
sbb
out
inc
xchg
lock
sub
hlt
cmp
or
xor
cmp
movsl
xchg
cmp
dec
aas
int3
inc
lahf
adc
cwtl
jecxz
insb
cmove
pop
fs
in
shr
outsb
aam
fiadds
xchg
les
stc
mov
jne
sub
je
or
movsb
lcall
mov
pop
movsl
mov
pop
add
imul
and
inc
push
rclb
adc
sbb
rol
rcrb
xchg
pop
add
aam
fs
les
scas
jo
out
mov
out
lret
mulb
jge
je
in
or
test
jl
insb
std
and
sub
or
ret
inc
js,pn
testb
pop
jnp
pop
lret
sbb
mov
xchg
mov
cmp
push
fidivrs
jp
push
add
inc
jg
movsl
vrsqrtss
and
sub
insb
push
loopne
int
idivl
iret
cmp
and
dec
orb
mov
xor
dec
jl
es
sbb
push
xchg
pop
stc
mov
out
add
mov
push
mov
mov
movsl
rol
xchg
stos
stos
cmpsl
and
lea
inc
push
pop
nop
pop
enter
push
movsl
push
cmp
cmp
aam
js
jmp
fimuls
jno
out
pop
sub
adc
sbbb
insl
jae
rorb
ret
call
loope
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
xor
cmp
pushf
pop
out
push
push
jp
movsb
mov
les
xchg
jecxz
inc
inc
mov
xor
out
or
sbb
lea
enter
test
mov
mov
jmp
push
mov
xor
movsb
sbb
adc
jmp
xchg
in
xchg
out
push
push
jge
sub
add
fwait
sub
addr16
push
push
and
in
jl
aaa
les
pop
iret
popa
inc
addr16
rolb
popf
push
mov
xor
or
shlb
cmp
movsl
lock
lret
pop
daa
orl
mov
les
add
xchg
or
mov
mov
xchg
inc
adc
imul
pop
cltd
inc
push
push
leave
or
cmp
popa
mov
jge
mov
negb
inc
sbb
lock
cld
mov
or
cmpsl
fcomps
jmp
inc
push
inc
nop
sub
into
cltd
xchg
fldcw
jns
push
jns
aaa
aad
out
int
mov
mov
inc
push
and
adc
sbb
movsl
movsl
ljmp
call
sub
add
rol
xor
add
rep
mov
sbb
pop
fisttpll
adc
aad
inc
xor
add
lahf
adc
mov
cmp
adcb
push
pop
imul
loop
lock
test
test
jge
test
cli
insb
push
mov
push
lcall
jbe
sbbl
mov
push
cmpsl
add
or
mov
adcl
in
mov
push
cmp
jecxz
idivb
cld
sahf
cmp
stos
outsb
sbb
mov
dec
inc
loope
mov
and
je
xor
adc
sar
pop
fadd
mov
mov
jb
mov
pop
adc
into
loopne
outsl
mov
cmp
test
jg
fs
and
pop
dec
inc
andb
repnz
ds
or
pop
fisubl
sbb
adc
adc
inc
mov
aas
loop
pushf
lcall
sahf
hlt
push
and
jge
dec
or
and
cmp
into
out
mov
push
fwait
mov
xor
mov
jle
les
fsts
add
add
and
dec
sbb
inc
loopne
test
and
jmp
or
shlb
enter
insl
xchg
enter
inc
ljmp
scas
add
ljmp
and
in
int3
sbb
mov
adc
sbb
add
inc
sbb
xor
pushf
stc
icebp
adcl
cmpsl
pop
dec
inc
adc
inc
mov
xor
pop
jl
push
icebp
mov
pop
loopne
daa
cmpsl
dec
movsl
inc
or
xor
fistps
xor
xchg
mov
sub
and
jo
fldcw
out
sub
imul
aam
lds
xchg
in
fdivp
out
sbb
ret
divb
adc
gs
or
push
jne
insl
jbe
lret
pushf
xlat
cmp
stc
add
scas
jmp
imul
mov
pushf
mov
shrd
or
shr
or
jmp
sbb
insl
xchg
mov
cmp
xchg
nop
push
cmp
mov
mov
addb
hlt
and
sub
out
pop
dec
or
aaa
loopne
pop
lds
setne
mov
mov
test
cs
fwait
inc
nop
fdivrs
cmpl
movsb
lahf
in
das
pusha
push
into
sbbl
or
mov
xor
cmp
call
sub
loopne
cld
test
jbe
test
adc
jnp
push
inc
stos
pop
or
mov
mov
ja
mov
and
scas
ss
cmp
mov
add
add
sbb
popf
out
mov
das
std
jmp
adc
in
fs
jp
int
gs
lock
sbb
test
cs
inc
inc
jbe
pushf
mov
or
sti
inc
lds
and
test
cli
out
jecxz
add
sub
lahf
outsl
leave
call
pop
jbe
fwait
pop
icebp
sti
stos
lds
pop
or
iret
xor
jmp
jp
leave
mov
outsl
xchg
push
push
add
aaa
and
adc
cwtl
test
idiv
jmp
inc
hlt
cmp
jmp
es
arpl
mov
dec
xor
mov
rclb
loope
xchg
ja
mov
imul
and
jnp
in
add
mov
nop
and
mov
insl
xchg
ljmp
ja
scas
imulb
fstpl
sti
js
test
in
jle
push
lret
dec
mov
or
inc
xor
testb
xchg
cmpsl
mov
loope
add
mov
pop
dec
mov
daa
out
cli
cmpsb
jne
addl
decb
xorb
in
or
adc
or
and
xchg
xor
loope
sbb
mov
mov
icebp
mov
rolb
cmc
adc
cmp
rolb
out
or
cmp
add
pop
mul
es
dec
pop
fcom
lock
popf
inc
inc
mov
and
xor
aam
add
or
popa
test
mov
xchg
lret
xor
gs
iret
imulb
psubsb
sub
int
sti
pop
or
or
mov
add
ficomps
inc
popf
aad
jecxz
shrl
mov
pop
and
movsb
push
and
push
lock
aad
dec
mov
iret
loope
ret
inc
out
test
mov
adc
mov
dec
xlat
or
cmp
sub
jl
pop
lods
out
dec
gs
or
xchg
es
sbb
iret
out
lahf
lods
insl
popf
jl
mov
fildll
rcrb
pop
adc
xchg
fisttps
aam
outsl
cmp
fdivrl
mul
jbe
inc
shl
icebp
mov
cmp
dec
fwait
inc
jns
mov
mov
sub
js
or
push
aaa
scas
dec
mov
jle
and
jae
mov
jns
nop
gs
dec
sbb
fsts
std
lds
lock
leavew
fisttpl
xchg
loopne
mov
cmp
mov
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
xorl
shrd
shr
ret
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
jmp
addr16
js
jl
jnp
dec
xlat
pop
sahf
mov
jns
mov
pop
jge
mov
dec
xchg
sbb
mov
test
push
and
js
lahf
test
pop
insb
lods
cmp
stc
movsb
cld
jo
movsl
rorl
xchg
addl
dec
add
aaa
lods
arpl
pop
call
clc
inc
and
mov
js
mov
lods
mov
or
mov
mov
or
shlb
scas
adc
imul
es
cmpsb
xor
das
leave
stc
push
rcll
loope
repz
mov
fdivrp
jbe
test
daa
outsl
push
lret
aam
sub
xor
ljmp
pushf
dec
sub
lds
or
jns
cs
push
sbb
pop
test
fwait
inc
jnp
dec
mov
push
push
xchg
lcall
mov
rcrl
daa
pop
adc
sbb
out
mov
ret
stos
pop
scas
shr
pusha
or
xchg
scas
sbb
out
push
pop
ret
aam
ret
push
cmp
cmp
or
std
adc
or
adc
ds
adc
sbb
lods
popf
or
insl
popf
cmp
xchg
xor
scas
lods
adc
pop
jns
imul
insb
add
repnz
sub
jecxz
and
fs
jmp
out
xchg
inc
loope
pop
and
outsl
push
sbb
pop
test
add
xor
fidivl
rolb
xchg
push
xor
bnd
mov
icebp
adcl
sbbl
aad
arpl
je
push
sbb
sub
test
aas
scas
sub
jmp
dec
bound
and
pop
lahf
imul
xor
cmpsb
aaa
mov
sbb
xor
rorb
int
adc
cltd
popf
sbb
dec
in
xchg
lret
xor
adc
xchg
adc
inc
out
dec
mov
xchg
xchg
add
pusha
xchg
nop
add
sbb
sbb
xchg
push
inc
xor
mov
jmp
dec
fsubrl
pop
xchg
dec
aad
fsub
in
mov
ret
fcomi
lahf
xor
dec
andl
leave
sbbb
in
xor
inc
call
mov
neg
mov
adcl
jmp
outsl
in
rcrb
retw
dec
jo
sti
notb
jp
mov
mov
cmp
mulb
and
cmp
out
lahf
dec
add
inc
dec
xorb
cmpsl
lret
imul
push
cmpsb
dec
push
repnz
roll
fiaddl
lret
ss
push
js
imul
sub
cmp
out
adc
xchg
aaa
iret
xchg
scas
add
daa
orl
pusha
push
popf
repnz
imul
sub
iret
mov
xchg
pusha
flds
hlt
scas
notb
cwtl
ljmp
mov
enter
mov
insl
mov
lret
fsubrs
sbb
mov
ljmp
lret
rclb
fisttpll
pop
mov
push
dec
fwait
fwait
mov
jp
vmread
xlat
outsb
xchg
loopne
push
jl
adc
push
lods
push
push
cli
jns
iret
lcall
xor
dec
leave
xchg
int3
in
sub
cmp
das
test
cmp
arpl
jo
fwait
inc
std
xchg
popf
adcb
mov
and
and
push
out
pop
add
out
inc
inc
mov
fs
mov
or
inc
addr16
popf
cld
cmp
rorl
add
inc
xchg
or
cmp
xor
sahf
jno
push
push
cmp
je
sahf
movl
fstpt
cwtl
xor
repnz
or
cmpsl
jne
div
adcl
sbb
orl
xor
lcall
ret
int3
mov
ljmp
xorl
test
jmp
clc
mov
movsl
adc
push
or
sbb
pushf
add
pop
inc
ss
mov
mov
jecxz
sbb
loopne
push
push
adc
dec
into
imul
aam
mov
jbe
aad
push
pop
xchg
dec
shlb
mov
sbb
test
mov
mov
push
sbb
add
xlat
in
dec
jae
faddp
mov
sarb
pop
or
mov
outsl
std
out
lret
adc
dec
in
les
addl
jae
in
pop
mov
mov
imul
pop
pandn
lods
pop
push
insl
int3
or
jns
mov
cmpl
movl
movl
jmp
not
movl
cmpl
jae
push
push
push
call
sub
and
adc
mov
add
negl
xor
orl
movl
movl
movl
sbb
push
movl
xor
xor
mov
sub
or
movl
push
or
movl
and
mov
and
mov
subl
push
orl
push
sbbl
push
call
and
mov
mov
andl
push
andl
or
push
or
xor
xor
xorl
push
push
orl
call
mov
xor
mov
mov
and
jmp
aam
jp
mov
ret
clc
stos
push
shll
ret
outsb
inc
daa
fxch
jb
in
mov
jg
add
push
loop
xchg
mov
cmpl
movsb
addr16
sub
cmp
lods
rcl
mov
icebp
jmp
outsl
and
out
es
sbb
std
mov
sbb
push
out
aas
cmp
mov
imul
scas
mov
cmp
sbb
pop
xor
mov
je
jnp
call
sub
das
addr16
out
mul
repnz
insb
cmp
sbb
adc
xchg
dec
es
test
imul
enter
pushf
sub
pushf
cmp
mov
in
ret
lock
out
mov
bound
or
xor
inc
jbe
rcl
mov
and
pop
sub
stos
jns
xlat
pop
lock
mov
sahf
pop
adc
jle
mov
add
adc
lock
push
les
add
imul
inc
stc
jge
adc
jecxz
mov
iret
mov
sbb
mov
add
mov
add
push
jg
push
xchg
inc
or
adc
or
fimuls
lods
pop
enter
sbb
out
or
mov
loopne
xchg
sub
dec
das
adc
mov
jmp
jl
mov
or
mov
ljmp
dec
cmpsl
and
mov
adcb
pusha
dec
pop
fucomi
inc
pop
or
frstor
inc
lods
test
jl
movsl
inc
dec
xchg
cmp
adc
or
add
pop
xorl
dec
cmp
movsl
lods
orb
mov
idivl
fidivl
jae
in
outsl
pushf
pop
mov
rcrb
push
aam
pop
imul
push
jmp
aam
arpl
ret
je
frstor
adc
jae
xchg
cmp
repz
inc
aad
fdivl
insb
adc
pop
sti
mov
and
scas
imul
in
inc
pop
cwtl
adc
lret
adc
and
dec
lcall
pop
mov
mov
adcl
push
decl
push
notl
push
adcl
push
sbbl
call
mov
cmpl
mov
movl
mov
jmp
movzbl
mov
cmpl
jb
push
push
call
andl
add
or
adc
sbb
sbbl
add
mov
movl
movl
orl
movl
sub
movl
mov
mov
adc
movl
orl
movl
mov
adc
mov
add
mov
cmpl
mov
mov
movl
jmp
mov
mov
cmpl
jg
push
call
xor
sbb
decl
mov
xor
and
dec
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
call
or
sbb
and
decl
or
addl
sbbl
mov
add
movl
adc
xorl
or
movl
mov
or
subl
mov
or
movzbl
xor
mov
mov
or
mov
or
negl
or
movl
cmp
movl
jne
movl
cmp
movl
je
xor
or
adc
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
jmp
and
sub
dec
test
xchg
and
adc
xacquire
mov
rorl
mov
fildll
icebp
sbb
sub
xchg
xchg
in
pop
stc
out
pop
xchg
test
pop
daa
xor
push
jle,pn
outsl
insl
cmp
push
and
orl
roll
add
mov
mov
subl
outsb
and
add
lods
aaa
fcomps
or
int3
mov
inc
push
loop
and
lcall
ss
in
jl
xchg
xchg
push
movsl
jnp
mov
aaa
loop
out
jmp
sub
adc
insl
add
sub
pushf
aad
add
gs
stos
pop
cmp
test
xor
and
xor
xor
mov
jmp
bnd
xchg
in
push
das
imul
xchg
shl
inc
movsl
lcall
add
popf
mov
mov
lock
out
jge,pn
push
and
xchg
pushf
imul
nop
imul
adcl
mov
loopne
xorb
sub
js
sahf
imul
xchg
jle
emms
lahf
out
xchg
vmread
add
push
push
mov
in
jb
or
inc
push
andl
inc
nop
adc
pop
dec
leave
cwtl
repz
pop
out
lahf
bound
adc
adc
and
fadd
inc
xchg
imul
ja,pt
int
cld
ds
jmp
sub
les
pop
jmp
sarb
push
test
loope
enter
sahf
xchg
imull
jnp
sbb
push
fs
cmpsb
data16
orl
das
add
pushf
clc
orb
jns
movsb
fxam
push
xor
fcoms
ss
dec
dec
xchg
and
movsl
push
dec
dec
add
stos
stc
adc
pop
popf
les
dec
mov
and
out
mov
dec
push
andl
imull
lahf
xlat
xchg
mov
lds
neg
xor
adc
mov
clc
adc
dec
push
adc
sub
jp
adc
arpl
sub
bswap
add
call
nop
cmp
inc
rorb
jl
add
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
jmp
mov
mov
mov
mov
jecxz
xchg
mov
cmp
out
int3
bound
xchg
inc
adc
ret
xchg
adc
xchg
mov
add
xchg
add
insl
push
aas
out
sub
and
insl
call
pop
adcb
mov
mov
in
in
or
cmc
mov
rorl
dec
mov
stos
jp
push
and
incb
call
leave
mov
clc
xor
outsl
mov
push
lds
xor
sbb
or
cmpsl
jle
out
out
stos
andb
lds
inc
dec
adc
mov
fdivs
xchg
stc
pop
push
sbb
or
mov
pop
pushf
rclb
jge
mov
scas
loopne
fimuls
ss
mov
push
pop
push
jp
test
dec
or
adc
mov
mov
xchg
xorb
mov
push
loope
rorb
leave
mov
sbb
cli
sbb
inc
mov
adc
xchg
and
gs
cmp
sub
ret
sbb
adc
sub
push
pop
cs
iret
pusha
iret
cmp
push
fdivrl
in
inc
jmp
jns
in
jge
repnz
and
mov
dec
movsb
add
add
repnz
in
cmp
cwtl
leave
push
rcl
push
push
mov
dec
fwait
or
notl
arpl
es
push
aaa
js
shll
out
or
push
lock
mov
ss
aaa
loope
fs
mov
add
sti
shrb
jno
mov
push
out
lods
mov
xchg
shrb
xchg
int
mov
icebp
sbb
arpl
xchg
js
lret
xchg
popa
mov
jbe
xor
adc
addl
sbb
push
mov
out
dec
mov
xor
adc
inc
rol
insl
xchg
pop
loop
sbb
pop
sub
add
push
dec
or
add
sub
push
mov
adc
cltd
push
seta
xchg
jl
leave
jmp
or
in
mov
ffreep
xor
mov
push
mov
pop
loop
arpl
mov
sbb
cmc
jns
in
arpl
dec
out
incb
clc
fisubrs
pop
sbb
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
popa
nop
popf
cmpsl
mov
imul
adc
imul
push
mov
mov
adc
cmpb
fldz
ljmp
xchg
dec
fistl
mov
push
or
jae
mov
insb
xor
leave
pop
adc
jo
and
sub
sub
mov
xchg
jecxz
stc
jge
mov
addl
js
inc
mov
dec
jo
popa
mov
jnp
or
pop
dec
movsl
and
sub
clc
mov
mov
xor
cmp
dec
into
fistps
xchg
movsl
fmull
sbb
jb
push
mov
lret
lret
fldenv
sub
sub
data16
xchg
xor
or
and
push
jg
add
jecxz
cmp
outsb
jp
push
mov
add
jge
ljmp
and
sbb
enter
cs
out
xor
orb
pop
or
mov
or
mov
xlat
lea
dec
movsl
bound
lahf
andl
mov
sti
cmp
cmp
push
sbb
add
pop
mov
outsb
ret
fisttpll
ror
sbb
sbb
les
stc
mov
ljmp
jle
pop
out
pop
dec
or
inc
and
jecxz
ja
pusha
ret
loope
mov
das
dec
push
xchg
dec
test
ret
loopne
pop
negl
test
jle
or
jbe
scas
mov
nop
jge
int
mov
adcb
push
jo
repnz
lahf
pusha
cmpsl
dec
lahf
xor
sub
outsb
repz
popf
imul
xchg
and
pushf
sub
cvtps2pi
pop
sbb
or
lds
xchg
adc
lcall
add
xor
mov
xor
xchg
sub
cs
dec
ret
fld
cltd
insb
outsb
cmp
roll
addr16
jl
movsl
mov
ret
sbb
fldt
shlb
xchg
pop
les
lret
movsb
sub
data16
popf
lcall
in
add
test
into
mov
ret
sub
movsb
cli
sub
inc
cmovo
mov
pop
out
sub
lret
stc
mov
in
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
mov
pushf
mov
jecxz
inc
mov
es
mov
mov
loopne
jp
scas
mov
inc
scas
xchg
push
cmp
mov
repnz
nop
add
in
cmpsb
push
cltd
fs
sbb
in
pop
leave
cmpsb
sahf
jmp
add
push
mov
out
xchg
push
stos
mov
shr
cltd
push
jge
ss
int
sarl
mov
jle
test
test
fcoms
shrb
jae
mov
pop
and
adc
shll
cmp
mov
movsb
mov
sbb
inc
mov
xchg
xchg
shll
repnz
mov
or
xor
or
in
dec
xor
cs
pop
adc
inc
or
adc
movsb
cmp
cmpsb
mov
xchg
or
out
mov
lcall
sbb
pusha
cmpxchg
sbb
and
dec
mov
aas
loop
dec
aaa
mov
pusha
fs
in
arpl
mov
imul
pop
ss
fsubrl
shll
insb
ljmp
cmp
ss
hlt
shrb
and
and
int
jg
push
leave
and
stos
in
push
inc
jmp
fdiv
or
popa
addr16
out
icebp
pop
sbb
sbb
lret
pop
sbbb
mov
mov
dec
mov
inc
adc
sti
jo
mov
jecxz
out
int
cmp
loopne
mov
inc
add
xor
jge
lcall
popf
or
pusha
inc
jle
and
sbb
adc
lods
mov
xchg
or
xchg
sub
sub
push
lds
mov
xor
ret
sbb
cli
cld
jb
loope
jecxz
cmp
rol
sub
test
jge
pop
sub
xchg
mov
mov
adc
enter
shlb
in
test
adc
jle
out
cmp
in
mov
mov
test
pop
mov
jge
sbb
imul
push
outsb
mov
mov
dec
mov
repz
clc
mov
je
jge
mov
dec
pusha
and
fistps
ror
pop
cmp
mov
xchg
stos
mov
ret
cmp
inc
add
lea
es
add
movl
movl
movl
movl
movl
movl
xor
inc
jmp
insl
shr
jl
scas
sub
movsb
fbstp
fstl
fwait
mov
mov
sbb
scas
or
cmpsb
mov
cld
mov
pop
jnp
mov
aad
dec
jmp
cmpsl
stos
push
sub
stos
and
mov
cltd
arpl
add
fcmovu
xor
int3
push
fnsave
ljmp
xchg
pushf
add
inc
jae
dec
rorb
xchg
sbb
xor
lcall
pop
sahf
sbb
push
pop
cwtl
aam
fs
in
and
sbb
or
jge
inc
pushf
adc
loop
movsb
mov
je
mov
fistl
or
sbb
fstp
cmp
xchg
sbb
push
aad
mov
sub
mov
lea
xchg
ret
decl
imul
add
inc
fs
or
mov
pop
push
xchg
stc
imul
and
jl
mov
lea
lods
pop
flds
out
pop
xchg
lock
sbb
adc
mov
and
lds
xor
ss
mov
insl
aas
pop
adc
mov
mov
dec
mov
xor
sbb
jl
mov
in
add
add
stos
dec
xor
pop
mov
push
repz
in
cmp
shrb
inc
ficoml
jecxz
data16
sbbb
mov
xchg
push
pop
adc
jle
insb
jne
das
imul
iret
enter
movsb
imul
mov
rsm
mov
mov
jbe
ret
ds
jle
xchg
popa
mov
repz
lret
push
cmp
add
xor
das
movsb
jbe
mov
jnp
sub
dec
adc
repnz
push
push
ret
push
jno
es
adc
cmp
incb
push
aam
jg
fdivrl
fxch
cli
test
aas
sahf
sub
neg
sbb
push
rorb
xor
in
jo
jo
and
jmp
lock
xchg
mov
loope
subb
call
jo
jns
adc
sbb
call
pop
ljmp
pushf
add
push
push
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
jmp
lds
mov
and
sahf
cs
movsb
lahf
mov
mov
popf
inc
cmp
ficomps
shlb
mov
cwtl
aad
cld
dec
cmp
icebp
fstl
sbb
cmp
scas
sbb
xlat
icebp
test
fsubp
jae
jp
int
in
lock
rorb
lcall
test
add
cwtl
imul
jmp
jb
ficoml
es
jl
pusha
out
sbb
inc
sub
mov
insl
sahf
xchg
fists
lock
dec
sbb
iret
mov
jno
dec
aas
mov
int3
aas
xchg
stos
mov
push
mov
in
dec
adc
int
push
push
icebp
mov
dec
xorb
push
mov
inc
xor
and
cmp
loope
icebp
hlt
xor
data16
sub
jne
pushf
xchg
ret
add
dec
loopne
loop
aad
inc
or
inc
hlt
jl
iret
addr16
pop
lds
loope
int3
ds
xlat
aaa
test
outsl
add
cmp
mov
mov
shll
outsl
jno
dec
jne
rolb
test
adc
push
test
bound
imul
lret
xor
sub
lock
fisttps
pop
mov
sbbb
ljmp
fnsave
xor
adc
cmp
mov
outsb
shrl
sub
aaa
aaa
out
mov
push
mov
cmp
es
push
xchg
lods
jmp
inc
fwait
repnz
lahf
jno,pt
iret
mov
js
lcall
push
add
adc
stos
popf
nop
rcl
mov
inc
pop
ret
dec
mov
loop
ds
mov
es
ljmp
js
das
add
mov
jl
test
push
inc
push
lock
sub
sbb
je
push
or
inc
icebp
outsb
dec
arpl
dec
cmp
mov
fs
fwait
ljmp
stos
dec
sub
outsb
shll
lcall
jecxz
add
enter
hlt
stos
mov
jge
pushf
in
mov
mov
fnsave
fidivl
in
xor
dec
sub
xchg
dec
ficoml
add
lret
cmpsl
mov
cmc
repz
jns
and
mov
mov
imul
add
pop
push
shlb
jl
mov
ret
div
mov
add
cmp
jae
movl
movl
movl
movl
jmp
popa
clc
jnp
jl
imul
stc
adc
ljmp
mov
push
stc
cmc
mulb
dec
bound
enter
or
fdivrs
jg
ja
aad
std
lret
mov
sub
test
adc
hlt
decb
test
jg
jne
int
cmp
maskmovq
mull
pop
int
fcmovu
scas
out
in
fisubrl
das
sbb
dec
xor
dec
mov
ret
xor
insl
push
xchg
push
call
out
pusha
enter
jg
xchg
mov
ja
and
out
loopne
frstor
and
sub
test
jg
jnp
inc
bound
testl
aaa
mov
jb
jno
xor
dec
fildll
sub
repz
sub
and
fistpll
mov
mov
jbe
mov
inc
jns
jnp
mov
adc
sub
push
xor
ss
stc
jl
xlat
push
cmp
lods
or
xor
jbe
xor
bound
stc
dec
add
mov
adc
mov
jg
out
ja
cmp
jmp
outsb
mov
repz
popa
loopne
sbb
mov
je
stc
jbe
fwait
popf
stc
mov
ss
pop
and
dec
scas
lret
dec
xchg
fmull
mov
sub
lcall
dec
cli
add
mov
adc
ficomps
push
pop
pop
jp
test
cmpl
outsl
mov
sub
jae
loopne
ljmp
jecxz
ljmp
punpcklwd
aas
pop
jp
call
pusha
fidivrl
jb
les
add
and
inc
addr16
loope
mov
push
xchg
jno
pop
pop
push
dec
daa
test
or
and
cld
fxch
sbb
mov
lcall
out
sub
mov
out
dec
jecxz
test
jg
xor
addb
jne
mov
jg
mov
jp
adc
mov
insb
lods
repnz
push
sub
les
mov
aaa
movsb
xchg
das
pusha
inc
or
sti
mov
push
mov
and
inc
call
movl
mov
push
pop
div
mov
mov
mov
sub
mov
jmp
dec
sub
test
and
jecxz
test
mov
xchg
adc
cld
mov
mov
loope
ss
aad
or
rorb
mov
mov
push
ljmp
adc
or
cmp
jmp
jne
mov
and
or
sarb
pop
cmp
sti
test
and
mov
dec
lcall
or
mov
data16
push
loope
inc
ss
sbb
cld
and
pop
test
es
stc
inc
inc
jbe
ja
pop
inc
out
cmp
loop
ficoml
jnp
mov
mov
rolb
aas
push
xchg
push
mov
mov
push
add
sbb
mov
sti
push
jp
subl
xchg
addl
sub
mov
cmp
imul
movsl
inc
push
hlt
das
jb
insl
jmp
idivb
loop
fs
ss
jae
outsl
fs
dec
fcmovne
add
xchg
mov
stc
cltd
dec
push
dec
rclb
shrl
dec
pop
aam
cmpsl
sbb
dec
or
push
and
aad
inc
or
out
dec
sbb
stos
cmp
outsb
daa
mov
in
sub
int3
jecxz
dec
push
imul
cmp
scas
jns
mov
push
fcmovbe
jg
in
orb
dec
fwait
idivl
insl
xor
jno
fxch
sbb
mov
pop
aas
int3
ret
andl
roll
jmp
mov
lea
aad
mov
sti
mov
sbb
fcomps
push
and
pop
xor
into
sub
jbe
cmp
push
push
fcmovnb
test
mov
mov
push
test
sbb
roll
loop
xor
jnp
push
popa
fiadds
popa
mov
push
mulb
in
mov
or
test
nop
jne
sub
jl
les
daa
sbb
jno
sbb
out
inc
sar
jno,pt
lods
dec
dec
cmovg
sarb
pop
adc
mov
loopne
cmp
call
lahf
inc
cmp
gs
push
lock
adc
lds
fisubrl
in
pop
test
push
mov
outsb
bound
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
jmp
stos
mov
sub
inc
out
xchg
nop
ret
mov
push
out
mov
pop
cmp
dec
sbb
mov
push
pop
aam
fbstp
xchg
push
test
dec
mov
and
inc
push
or
cmp
xor
xor
or
aaa
fistpl
xchg
leave
jne
testl
mov
pushf
mov
push
xchg
pop
out
scas
aas
fsubl
aam
pop
dec
fwait
jno
dec
jo
jns
outsl
jl
mov
jne
xchg
addr16
or
das
mov
sbb
jp
pusha
and
addr16
jmp
fcmovnb
imulb
cmpsl
push
fnstenv
dec
push
sbb
test
sbb
hlt
sahf
push
rcrl
mov
icebp
sti
add
pop
mov
xchg
test
test
fdivl
add
adc
scas
pop
nop
inc
ds
add
jecxz
lahf
lods
scas
je
pop
pop
cmpsl
add
cmp
in
lods
iret
lods
sub
int
inc
sbb
repz
or
loopne
scas
adc
es
jge
mov
mov
or
je
jne
ds
cld
int
mov
xchg
clc
pop
out
in
xchg
pop
cmp
out
gs
daa
push
stos
fdivr
outsl
mov
mov
xchg
std
and
dec
scas
mov
test
cs
mov
dec
ds
push
jbe
mov
adc
jns
mov
sbb
cli
imulb
xor
mov
cs
ret
shll
fwait
push
sub
cmp
mov
sti
adc
jp
inc
pop
popa
dec
jae
mov
sbb
push
fldcw
push
cmc
push
ss
push
push
fldt
mov
cmp
adc
inc
movsb
pop
pusha
addr16
mov
mov
daa
roll
aam
ja
or
and
or
mov
sbb
loope
das
movsl
sbb
xchg
or
push
pop
shl
cmp
in
rorl
xorb
pop
es
pop
icebp
lea
jo
rorl
sub
int3
sub
lds
movsb
jmp
es
shlb
pop
mov
mov
push
jne
push
jg
aam
pop
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
dec
mov
push
mov
pushf
mov
add
hlt
iret
lods
mov
mov
std
hlt
xchg
ret
or
or
outsb
insl
or
or
cli
lcall
pop
pop
dec
inc
and
inc
mov
daa
ffree
fdivr
mov
or
dec
xor
mov
mov
std
cld
xor
xchg
push
test
insl
cwtl
sbb
mov
dec
adc
xchg
mov
jnp
fcmovnu
pop
scas
jle
xlat
inc
cmp
repnz
xchg
pop
mov
sub
push
jp
cmpsb
aas
pop
push
cmp
inc
push
inc
sbb
nop
out
sbb
sbb
fcomip
or
cmp
sbb
push
rorl
imul
adc
inc
push
xchg
cmp
cli
outsb
call
xor
inc
aaa
xchg
xchg
jecxz
out
cmp
or
sub
pop
inc
es
or
pop
loopw
xor
xchg
clc
scas
and
pop
push
inc
fidivl
dec
and
in
push
cltd
xchg
cs
pop
int
or
lret
dec
repz
adc
and
jmp
loop
in
and
add
loop
outsl
rolb
adc
or
mov
cmpsb
popl
mov
pop
ss
icebp
jmp
xchg
push
dec
outsl
arpl
in
mov
xchg
push
jle
sbb
gs
xor
arpl
dec
in
rorl
pusha
in
int3
cltd
ljmp
iret
mov
fs
jnp
mov
mov
mov
lret
sti
add
iret
sub
sub
ss
icebp
sub
sbb
cs
adc
mov
ljmp
jne
push
stos
dec
dec
repnz
cmc
scas
fcmovnb
or
push
nop
fsubrl
mov
xchg
cmp
repz
pop
dec
push
out
inc
icebp
leave
incl
daa
fidivl
push
sbb
sub
xlat
sub
cwtl
mov
cwtl
rcrb
mov
push
pop
pop
inc
xchg
enter
mov
mov
mov
and
mov
loop
les
cltd
rcrl
lcall
shrl
ret
mov
dec
outsb
or
mov
push
fnsave
iret
sbb
lret
jl
xlat
popa
fcom
sub
adc
test
iret
add
ret
pop
add
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
or
or
sbb
or
mov
ror
mov
mov
push
jl
ret
jge
pusha
leave
icebp
daa
mov
pop
in
pop
data16
inc
adc
dec
ficoms
add
nop
stc
les
aas
mov
pop
or
lret
adc
inc
push
out
clc
pop
xchg
cltd
movsl
mov
or
andb
mov
inc
inc
xor
mov
es
cmp
je
dec
push
in
and
sub
sub
xor
xor
cmp
jge
mov
pop
lds
scas
inc
rorb
jl
in
adcl
or
mov
lahf
mov
sbb
jns
xlat
inc
xchg
outsl
mov
insb
mov
xchg
data16
aaa
inc
pop
dec
jmp
les
dec
sub
lahf
push
mov
test
mov
add
sar
mov
negb
aaa
and
in
add
lret
hlt
ret
out
cltd
or
js
enter
mov
adc
in
cmp
xchg
fdivl
aam
ret
imul
cmp
outsl
pop
push
sbb
pop
psrlq
push
mov
pop
add
leave
sbb
jmp
xchg
les
jg
imul
addb
out
mov
adc
push
add
push
lcall
ljmp
sbbb
cmp
push
jb
pop
daa
stos
jge
out
les
fs
or
push
pop
xchg
jns
mov
imul
movl
push
into
and
xlat
fisttps
inc
add
shll
lahf
push
push
lret
mov
lods
ja
mov
paddusb
inc
in
outsl
dec
sub
je
xor
add
sbb
nop
add
and
and
fld
rorl
insl
xor
pop
jmp
gs
clc
addr16
mov
aaa
andb
sbb
fnstcw
sub
push
and
push
pop
pop
and
jb
mov
test
fisttps
les
jno
adc
aam
add
addl
cs
ss
jmp
xchg
adc
sub
push
mov
sbb
ljmp
adc
clc
leave
lods
test
notl
jno
enter
dec
sub
mov
pop
mov
and
push
sbb
xor
insl
jg
mov
push
fcompl
adc
adc
out
or
mov
dec
imul
adc
adc
push
sarb
mov
lock
das
and
adc
add
cmpsb
sbb
xor
imull
es
inc
les
mov
imul
in
add
fldenv
pop
xchg
pop
dec
lcall
data16
aam
and
jnp
xor
mov
addl
fadds
sub
xlat
jge
ret
jb
dec
loop
push
mov
lods
frstor
pop
push
enter
fdivrp
es
or
das
xchg
test
hlt
adc
ret
mov
or
mov
popa
push
add
inc
daa
xchg
mov
sahf
adc
mov
aad
aad
cwtl
mov
mov
xchg
dec
cs
mov
pop
in
lahf
jl
out
out
movl
sbb
push
push
loope
jg
sub
lret
push
xchg
push
jno
inc
jbe
insb
dec
mov
popa
push
sahf
daa
cltd
psrlw
js
andl
add
cld
ret
add
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
jmp
lret
leave
hlt
fsincos
out
and
mov
mov
mov
mov
leave
xlat
in
jae
sub
mov
push
scas
in
mov
dec
cmp
stc
out
and
sub
push
test
and
add
mov
jg
out
mov
rorl
mov
cmp
pop
inc
or
and
mov
fdivrs
aaa
mov
ficoms
add
lods
lahf
adc
cmp
or
cmp
ds
pop
mov
into
mov
loope
and
scas
lcall
pop
xchg
cmc
movsb
ljmp
xchg
mov
std
mov
dec
stc
or
inc
cmc
push
sbb
mov
push
jle
fdiv
repz
mov
xor
loopne
xlat
imul
imul
fdivl
jge
inc
data16
ficompl
stos
jns
inc
or
lret
sub
mov
lea
inc
mov
and
test
fwait
add
jecxz
jno
out
jp
sbb
ss
push
or
inc
xlat
mov
cmpsl
sbb
out
sub
leave
loopne
sbb
mov
lahf
std
inc
mov
pop
out
aam
loopne
pop
xchg
lock
pop
aam
aad
cmp
cmp
fstpt
stos
adc
and
or
mov
mov
call
adc
mov
outsb
fsts
loopne
xor
mov
fmuls
xor
jge
mov
mov
mov
icebp
mov
cmpsb
hlt
leave
push
pop
push
sti
jnp
arpl
jmp
cmp
lahf
sti
aas
mov
test
mov
insl
pop
mov
mov
test
xchg
inc
test
fcoml
adc
inc
add
call
movsl
push
ljmp
sub
sub
inc
jp
leave
push
xor
ss
push
push
mov
dec
and
repz
stc
push
int
mov
pushf
mov
mov
imull
in
dec
add
leave
aaa
fcmovnu
std
push
and
sub
adc
jg
cmp
ljmp
pop
mov
sbb
call
test
lea
sbb
mov
push
and
and
arpl
or
stc
imul
push
mov
cwtl
jecxz
sbb
adc
mov
jae
jno
jbe
in
cmp
add
pop
jge
pop
inc
gs
insl
insl
cmp
mov
rolb
dec
imul
inc
insl
and
push
aaa
fstl
mov
xor
lock
push
fstpl
cmp
mov
sarb
cmpsl
movsb
xor
imul
inc
mov
inc
mov
cs
sti
sbb
nop
pop
add
dec
jns
mov
sub
mov
sbb
outsl
jl
xchg
pop
insl
push
in
sti
pop
rcr
lock
insb
mov
xlat
imulb
adc
push
inc
pop
jg
mov
rolb
mov
ljmp
add
jns
pop
imul
mov
push
add
iret
dec
insb
ret
fidivrs
mov
aas
lea
cmp
and
sbb
jns
jo
shrl
rclb
icebp
or
pop
fsub
fdivs
leave
jle
xor
push
arpl
pushf
pop
jb
push
push
push
xchg
clc
xlat
inc
dec
outsb
sahf
fldenv
mov
jl
outsl
fdivrs
mov
fwait
cmpsl
aad
jno
pop
push
sbbl
imul
ss
pop
dec
ss
mov
test
add
inc
clc
lahf
jl
add
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
jmp
std
jno
dec
mov
rcrl
roll
mov
mov
dec
mov
jle
sub
dec
outsb
int3
inc
add
xchg
xchg
jns
in
pop
mov
into
int
dec
cmp
add
pop
mov
bound
fdivs
jno
fwait
jae
jo
andl
or
pop
cwtl
icebp
mov
mov
cmp
subb
jp
inc
xor
cld
inc
adc
leave
xor
fsubrs
mov
jbe
nop
xor
push
fninit
subb
cmp
dec
push
push
fidivl
sti
cmc
fmuls
pop
fmul
loope
or
mov
jp
inc
cltd
mov
outsl
sbb
jnp
fstps
hlt
insl
mov
sahf
fwait
and
cmpl
lods
push
cld
out
sbb
rcll
leave
and
ds
call
inc
inc
mov
lret
lret
fidivrs
pop
sbb
or
sub
inc
sbb
insl
sbb
ret
mov
call
cmp
loop
cld
jbe
mov
xchg
popa
movsl
int
and
insl
lahf
pushf
lds
cmpsl
dec
xchg
fisttpll
lahf
jae
xor
out
imul
sub
ret
shr
sbb
and
fnstenv
add
aam
outsb
and
jnp
xor
pop
xchg
int
lds
mov
and
mov
subb
or
loope
sub
and
movsb
addr16
mov
leavew
add
cmp
mov
sub
lods
dec
int
dec
dec
ficompl
lcall
push
jnp
testb
testb
or
dec
lret
cwtl
push
js
testb
dec
xor
mov
mov
ljmp
popf
adc
pop
test
push
mov
inc
fwait
loop
pusha
xor
aad
call
repnz
adc
imul
cli
stos
inc
mov
jnp
loopne
je
push
fsubs
sti
jle
scas
sbb
lods
lcall
arpl
fiadds
jbe
jae
add
mov
inc
and
jbe
cmp
arpl
hlt
lahf
lea
mov
inc
stc
cmpsl
cmp
pop
rcll
sbb
push
jns
testb
and
jo
jbe
mov
daa
adc
push
flds
jp
jae
and
mov
test
into
ljmp
mov
cmp
cmp
xor
or
std
test
push
mov
jo
icebp
lea
bound
mov
xor
jae
bound
jle
inc
dec
fnsave
test
jne
add
mov
inc
orb
jl
and
stos
jle
jle
push
into
sub
movsb
or
xchg
cmpl
push
mov
mov
sbb
add
jne
insb
addb
repz
mov
dec
mov
adc
jmp
mov
sbb
cmp
inc
mov
inc
fwait
cmpsb
iret
dec
pop
sbb
mov
into
mov
xor
mov
mov
mov
jo
push
mov
push
aad
cs
jle
push
dec
push
sub
cmp
pop
xchg
pop
jne
std
data16
lds
adc
ret
movsb
dec
pusha
lods
ja
cmc
popa
and
push
ds
insb
mov
push
cwtl
leave
dec
xor
loope
mov
add
mov
fimuls
sbb
orl
aaa
mov
and
mov
cld
cs
in
xchg
je
dec
sub
push
push
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
outsl
mov
ja
or
rcll
iret
mov
mov
movsl
cltd
ss
push
popl
push
icebp
repnz
xor
inc
mov
jmp
mov
inc
out
loop
add
xchg
and
inc
rorl
repnz
xchg
lods
imul
push
add
in
add
addr16
jae
sbb
sti
nop
pop
in
mov
sub
cmp
cmpb
cltd
imul
popa
ror
jle
dec
repnz
xchg
lahf
sub
test
cmpsb
xor
scas
movsl
inc
xor
out
addr16
orb
fdivrl
pop
addr16
jns
sub
xchg
stc
mov
push
fmul
push
repz
mov
xchg
fwait
inc
dec
sets
ror
sbb
add
xchg
xchg
xchg
stos
ficompl
out
int3
push
and
ret
pop
inc
clc
jb
dec
cmpsl
inc
xor
pop
out
adc
dec
xchg
dec
sub
push
mov
cld
push
int
dec
cmp
cltd
and
fldt
adc
mov
jp
push
out
clc
and
sbb
imul
rolb
mov
pop
in
popf
scas
iret
jg
mov
sti
popa
xlat
lds
xchg
push
loopne
push
and
pop
mov
sbb
inc
mov
xor
lods
into
lods
test
es
orl
in
adcb
scas
mov
test
xchg
pop
and
out
loop
lock
jmp
and
ror
push
movq
scas
adc
cmp
dec
add
push
sbb
sahf
dec
mov
push
mov
adc
and
adc
fwait
jns
repnz
mov
jge
and
testl
loopne
out
jns
inc
movsl
inc
pop
jae
mov
loop
cmpsl
scas
in
xchg
jb
pop
mov
aam
pop
mov
lods
mov
add
inc
sti
xor
xchg
mov
movsl
sub
stos
fsubrs
inc
sbb
or
adc
sti
dec
inc
fidivl
jno
xchg
es
or
fwait
or
in
es
cmpb
cmp
cs
inc
arpl
xchg
pop
pusha
cmp
outsb
loopne
sbb
negb
xchg
push
xchg
faddp
pop
push
adc
js
mov
pop
dec
notb
movsb
int3
push
jbe
inc
out
sub
aad
sub
mov
faddl
cli
aaa
imul
cmp
fisttps
enter
push
jecxz
mov
push
push
rclb
out
mov
cld
mov
xor
ret
shrl
dec
adc
aam
dec
gs
push
dec
mov
fldt
or
fcomp
cmp
xor
in
jl
dec
hlt
dec
cmc
orb
int3
cmp
test
out
loopne
cmp
popa
push
push
and
das
imul
jo
cmp
pop
push
dec
in
imul
loopne
lahf
xor
adc
dec
pop
inc
mov
fdivl
dec
aad
punpcklwd
sbb
mov
or
mov
cmp
jo
mov
addr16
add
fwait
xorb
and
mov
sub
pop
or
sbb
mov
inc
xchg
jb
sub
mov
adc
je
push
xor
dec
or
dec
pop
lahf
out
sbb
inc
xchg
jae
dec
iret
mov
xor
in
jmp
das
ja
xor
or
push
pop
add
imul
loop
cmp
mov
push
out
rol
loopne
sub
add
inc
in
jno
add
add
add
fisubrl
mov
or
outsb
fucomp
xlat
mov
mov
hlt
push
test
pop
fisttpll
inc
cmp
cwtl
ljmp
icebp
iret
mov
scas
push
push
dec
xchg
movsb
aad
mov
int3
iret
jae
data16
insl
or
sub
or
daa
jne
cmp
incb
test
cltd
clc
scas
repz
dec
out
xor
fdivl
jo
xor
mov
nop
aas
or
mov
rcl
push
in
jecxz
ljmp
idivb
daa
cmp
out
incb
ds
cmpsb
dec
adc
insb
mov
jno
inc
scas
adc
test
add
scas
hlt
xchg
inc
divb
xchg
stos
sbb
mov
or
repz
and
cmp
adc
shl
adc
push
push
xchg
in
repz
xlat
push
lahf
add
sub
cwtl
dec
std
pusha
pop
hlt
and
jecxz
push
push
adc
loopne
in
lea
xchg
push
pop
clc
pop
test
test
mov
and
inc
test
mov
or
xchg
dec
out
xor
sbb
rcr
nop
out
loope
loope
add
push
add
cmp
faddl
add
negl
mov
repnz
into
fimuls
xchg
pusha
mov
push
sbb
scas
mov
ja
jnp
add
xorl
or
add
fsubr
inc
call
xchg
or
mov
addl
dec
in
imul
xor
xor
hlt
sbb
aaa
call
sbb
mov
inc
sti
mov
int3
pusha
insl
fisubs
sub
mov
xchg
sub
mov
fistps
xchg
in
xchg
int
jmp
icebp
mov
mov
lahf
out
jg
call
adc
bnd
test
dec
inc
cli
insb
cs
xchg
xor
cmp
fildl
cmp
push
and
into
cmp
and
jbe
vpcmpeqd
es
cli
sbb
mov
and
push
mov
add
inc
fisubrl
add
xchg
lcall
lcall
int
fchs
mov
in
in
xorl
enter
scas
mov
sbb
mov
xlat
mov
fchs
push
adc
push
mov
jle
mov
jns
mov
test
dec
test
mov
fdiv
shrb
cmpsb
sbb
jb
out
dec
add
sarb
lcall
push
xchg
rorl
clc
add
adc
jno
mov
or
sub
pop
ss
adc
adc
test
ret
in
ljmp
mov
and
xchg
dec
les
ffreep
imul
push
mov
leave
cld
mov
jl
test
mov
lods
inc
arpl
sahf
and
xchg
mov
sbb
pop
shr
and
jle
aas
les
out
in
lods
fwait
mov
lods
xchg
cld
mov
aam
lcall
insl
jge
dec
jns
xor
mov
mov
jb
nop
stos
data16
scas
std
stos
and
pop
mov
pop
jmp
movsl
cmp
repnz
test
lds
jnp
mov
nop
pop
cmp
dec
dec
mov
mov
arpl
pop
adc
ret
cmp
xchg
aaa
mov
pop
insl
stos
out
shrb
and
push
xchg
push
mov
cmp
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
jmp
popf
lcall
pop
out
jecxz
stos
ss
mov
les
fcoml
call
test
addr16
and
push
pop
pop
movsl
stc
std
xor
mov
mov
shlb
das
clc
popa
xchg
ljmp
subl
or
pop
mov
mov
mov
and
and
dec
insb
xchg
lock
cmp
pop
sub
stc
inc
imul
movsl
xchg
xchg
jecxz
ret
lock
clc
sub
jp
cmp
pushf
push
subb
fwait
popf
cli
insb
sti
shl
dec
adc
out
cmp
inc
hlt
sar
mulb
adc
aas
push
ret
jns
xchg
pop
adc
or
outsl
ret
xchg
ret
xor
rol
mov
cltd
ljmp
dec
push
cmp
sub
fsubrs
add
scas
mov
loopne
sbb
stos
add
dec
jo
mov
int3
cmpl
loope
lcall
loop
mov
lret
mov
ljmp
sbb
xor
lea
adc
fs
mov
ss
pop
ret
mov
jne
and
sbb
pop
shrl
or
sbb
mov
mov
cmc
cmp
mov
stos
shll
aad
mov
fistl
dec
gs
mov
cs
sbb
push
das
xor
xchg
popf
pop
mov
lret
lds
stc
stc
pop
sub
or
xchg
fisttpll
mov
ret
pop
dec
out
pop
scas
rorb
aas
mov
jb
aad
mov
repnz
loopne
xor
cli
push
push
push
jecxz
mov
pop
loopne
popa
lods
xor
loop
pop
push
lret
push
or
ds
jle
sbb
and
or
aad
and
sbb
push
scas
add
ficomps
adc
adc
inc
test
adc
xchg
sbb
mov
mov
jp
jbe
cld
or
cmpsb
cmp
xlat
or
adc
dec
pop
adc
jbe
pop
in
js
leave
ja
shrb
xlat
nop
jmp
out
xor
mov
ret
fstps
ret
jge
je
add
push
push
push
push
xchg
je
sbb
and
mov
add
outsb
push
dec
push
fdivl
popa
mov
in
pop
stos
sbb
ss
xor
inc
fucomip
add
mov
out
jge
xor
jmp
xchg
bound
and
push
jl
dec
mov
nop
sbb
cli
clc
xchg
shll
ret
cmpsl
in
push
aas
scas
loop
pop
mov
jge
add
dec
fisttps
andl
lret
adc
sub
into
cltd
push
test
in
in
arpl
mov
insb
inc
adc
dec
add
adc
inc
int3
lret
sub
fsqrt
iret
fistpll
loopne
add
and
adc
push
push
cmpsb
push
daa
pop
arpl
lods
hlt
je
std
jbe
sarb
push
aas
cmp
jge
adc
bound
push
call
addr16
test
rclb
and
dec
int3
aad
dec
mov
mov
icebp
jp
adc
fwait
ss
xor
sub
mov
call
movsl
adc
dec
sub
std
sbb
add
nop
pop
sub
aam
std
es
aam
iret
imul
pop
add
test
fwait
aas
aaa
mov
and
lods
repz
push
in
daa
jbe
and
pop
pop
or
dec
xchg
push
scas
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
jmp
imul
lods
xchg
adc
nop
jp
or
xchg
les
fcoml
je
lods
sbb
daa
and
jae
bound
movsb
inc
sub
into
inc
enter
ss
enter
add
inc
in
std
sti
add
popa
mov
lret
or
xchg
loop
sahf
or
loopne
mov
and
mov
aaa
pop
test
pop
cs
lahf
outsb
sbb
sub
sub
sub
scas
insb
jg
pop
rcrb
jns
xor
jne
hlt
ljmp
in
pop
push
push
incl
mov
test
jecxz
add
stc
jmp
sub
mov
or
mov
loopne
ror
cmc
lahf
test
sub
jo
es
in
xor
pop
xchg
shlb
in
call
push
cmp
sti
lods
mov
sbb
add
lds
cli
in
mov
out
cmp
push
push
jns
add
scas
aam
es
xchg
lods
pop
lar
cli
fs
mov
push
pop
dec
dec
and
adc
or
cmp
mov
mov
xchg
cmpsl
mov
scas
mov
cmp
in
jmp
inc
popa
sbb
jle
push
les
push
cmpb
stos
cld
inc
push
push
dec
wrmsr
sahf
adc
mov
call
dec
sbb
and
push
bound
cmp
aaa
inc
data16
sub
imul
fwait
std
mov
fwait
popa
inc
inc
incb
ja
int
ret
mov
idivb
sub
fisubrs
cmp
fcompl
mov
cltd
dec
sarb
outsl
adc
lahf
mov
cmp
sub
test
das
jbe
les
into
cli
rcr
xor
inc
fs
outsb
dec
xlat
std
test
mov
jmp
xchg
je
mov
jp
decl
fstpl
les
ljmp
pop
dec
pop
lahf
dec
lret
fcmovnbe
or
inc
push
mov
dec
sbb
adc
fisttpll
xchg
pop
mov
push
jno
mov
lds
in
std
outsb
bound
or
inc
je
push
xchg
leave
stc
add
es
pop
sti
je
outsb
std
call
xchg
mov
std
and
jbe
adc
mov
push
cwtl
mov
mov
sbb
js
mov
insb
or
cmpsl
or
mov
mov
add
mov
add
jl
lods
clc
nop
sub
dec
pop
test
and
aam
mov
data16
mov
clc
insb
rcrb
addr16
fisubl
xchg
pop
jge
cmp
outsb
sbb
cld
inc
insb
push
in
push
fstpt
lcall
gs
hlt
int
dec
jecxz
sub
cmp
sbb
ja
in
jg
or
pop
shlb
iret
test
subl
xchg
jae
rcrb
popa
add
adc
add
mov
jbe,pt
pop
jmp
jb
add
fsubl
adc
sub
jb
xor
in
ficomps
les
cltd
inc
xchg
shll
lods
and
bound
les
xlat
lret
cmp
and
shll
adcb
mov
dec
fsubrs
aam
xchg
repnz
push
and
in
lods
push
mov
and
nop
addr16
fcoms
pop
bnd
mull
movsl
lea
jb
pop
mov
enter
je
add
dec
test
inc
clc
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
jmp
hlt
scas
je
mov
cld
mov
clc
iret
mov
les
xchg
jmp
enter
movsb
mov
in
sub
and
repnz
push
jnp
pop
pop
mov
sub
mov
push
int
sub
mov
repnz
in
pop
test
lods
pop
and
dec
shl
mov
xchg
out
daa
loop
fcompl
pop
xchg
ds
ja
push
sub
gs
push
dec
lock
xchg
mov
dec
push
mov
in
mov
out
push
sub
call
sbb
test
push
fisttpl
pop
dec
sub
or
inc
rcll
lcall
shrb
sbb
cmp
adc
daa
xchg
pop
inc
add
dec
ds
xor
push
mov
adc
nop
pop
rclb
xchg
add
dec
mov
cmpsl
dec
xor
outsb
sub
fwait
outsl
andl
adc
sub
cmp
and
cmp
mov
sar
lcall
arpl
add
dec
repnz
adc
mov
cwtl
sbb
mov
pop
je
cld
sahf
push
adc
fisubs
pop
in
test
dec
mov
push
push
and
ljmp
lcall
jg
fstpl
adc
leave
push
lret
lods
inc
subb
imul
aad
mov
mov
mov
pop
mov
daa
dec
adc
push
imul
les
mov
dec
jge
mov
stos
dec
mov
aas
dec
mov
idivl
daa
push
mov
aas
mov
das
out
jae
in
sbb
repz
mull
sbb
jns
adc
sub
jmp
sbb
mov
out
in
push
jle
add
jno
xchg
int3
rolb
sbbb
mov
jbe
adc
negl
cs
push
push
repz
and
js
sub
sub
and
out
sub
jbe
xor
mov
mov
sbb
loop
lds
movsl
loop
jmp
pop
add
decb
and
les
pop
pop
shlb
lock
jl
xchg
rolb
pop
loopne
clc
lcall
addr16
xor
inc
adc
repz
pop
cmc
add
aaa
sub
sub
lods
adc
rorb
cmp
rolb
int3
mov
lea
int
jecxz
jne
insb
idiv
iret
lcall
call
repz
xchg
push
mov
inc
test
lret
sub
inc
or
in
arpl
popf
test
stos
imul
or
pop
add
divl
mov
hlt
mov
xchg
faddl
add
int
xchg
xchg
sbb
or
add
inc
jno
dec
cmp
imull
add
aad
mov
imulb
sub
add
inc
call
or
in
mov
cmp
into
fistpll
and
fst
lahf
or
addr16
lret
std
fcomi
lds
or
out
int
aam
sbb
icebp
jne
stos
and
in
cltd
mov
xor
lods
call
pusha
sub
leave
sub
inc
shrb
repnz
xor
lret
xchg
xor
sbb
int3
sbb
or
xchg
rcll
jns
lock
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
jmp
dec
pop
xchg
idivl
push
roll
cmp
cmp
mov
mov
add
leave
xor
push
out
add
hlt
movsb
test
rclb
lret
cmpsl
mov
sahf
xchg
sbb
cwtl
jecxz
mov
sbb
xchg
stos
ja
xlat
sahf
mov
sbb
lock
gs
je
xchg
cmp
daa
xchg
pushf
pop
push
inc
pop
insb
push
lret
mov
mov
add
sub
inc
jle
popl
cmpsb
push
sahf
sub
sub
into
dec
or
outsl
mov
sub
push
inc
negl
adc
mov
aas
aaa
rol
jl
fldcw
and
mov
push
push
mov
add
dec
dec
aas
add
sbb
push
cli
mov
lods
std
pop
push
push
dec
lods
stos
leave
ss
out
sbb
and
mov
out
scas
fimull
mov
sbb
fcmovnbe
xchg
and
pop
das
xor
push
pop
ja
dec
cmp
dec
add
sub
jns
mov
mov
aaa
push
inc
inc
lock
sbb
pop
in
outsl
jnp
gs
mov
es
out
fnstcw
fucomp
inc
stos
and
mov
jmp
and
cmp
sbb
cli
cmc
adc
inc
popf
lahf
adc
dec
and
bound
xchg
int
lds
repnz
out
xor
int3
mov
and
dec
mov
lock
push
xchg
xor
fldenv
inc
push
lahf
gs
mov
xchg
and
add
xchg
jno
out
mov
and
dec
insb
mov
push
pop
imul
jecxz
sbb
sbb
stc
aaa
dec
jp
or
sti
into
mov
jecxz
and
pop
in
fnstsw
mov
xchg
sub
enter
neg
mov
add
into
rorl
cwtl
xor
aam
sub
xchg
adc
aad
fldenv
sbb
fwait
call
das
out
cltd
dec
xchg
loopne
outsl
mov
fmull
mov
je
mov
inc
sub
mov
push
into
cld
mov
sbbb
mov
aad
lea
cvttps2pi
xor
and
dec
insb
inc
adc
mov
aam
xor
lahf
jge
ret
dec
lock
sub
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
jmp
and
jnp
scas
fs
nop
xor
xchg
push
cld
mov
mov
sub
mov
add
jns
cmp
pop
out
aas
in
sbb
in
xchg
fmull
subl
idivb
fsub
dec
dec
and
in
nop
xchg
adc
xchg
aas
loopne
jmp
fsubp
or
out
jno
and
cmp
rol
ss
mov
mov
xor
pop
hlt
mov
jge
pop
xor
fs
scas
xchg
cli
dec
cs
mov
jmp
or
cltd
push
add
and
mov
aaa
push
dec
shlb
mov
or
pop
push
test
dec
cwtl
sarl
je
or
fsubrs
sub
sbb
call
jg
pushf
cmp
repnz
sbbb
pop
mov
es
jo
sbb
fimuls
ss
test
push
cmpb
sbb
shrl
das
xchg
fmuls
fwait
jg
mov
sub
mov
shll
lea
mov
adc
mov
stos
sti
cmp
push
cli
mov
pop
dec
nop
pushf
arpl
xchg
pop
push
lods
mov
lret
loop
jecxz
mov
pop
stos
and
rcrb
jge
lcall
cmp
push
outsb
lods
pop
dec
insb
sbb
ficomps
outsl
inc
movsl
or
into
jl
call
fisttpll
and
xchg
mov
shr
mov
jg
dec
aaa
dec
fwait
lahf
shlb
add
andb
adc
and
loopne
rep
outsb
test
cmp
mov
jo
pop
jb
std
cmpxchg
xchg
out
pop
jmp
fucomip
mov
xor
js
addr16
pusha
or
or
mov
mov
std
xor
pop
pushf
ficomps
shl
mov
or
shlb
bound
int
jmp
push
ret
pop
mov
div
jg
pop
and
mov
ja
aam
lret
push
movl
sarb
pop
jl
and
cmp
and
push
cmp
pop
fcomp
add
insb
dec
out
sbb
pop
mov
push
xor
and
stc
or
pop
lret
scas
mov
movl
movl
movl
movl
xor
movl
push
jmp
jecxz
fscale
pop
mov
lods
je
push
sahf
clc
xlat
repnz
icebp
add
mov
jl
in
sti
shlb
scas
mov
mov
jb
std
lds
bound
add
push
adc
add
es
sub
jle
lea
pop
syscall
in
inc
popf
addr16
xor
mov
or
out
jnp
pop
leave
pop
sub
in
push
push
pop
in
add
jp
popa
sbb
int3
mov
pusha
adc
jo
mov
or
cmp
cli
xor
or
imul
adc
xorb
cmp
inc
xor
xchg
xchg
adc
dec
mov
popa
loopne
mov
xchg
ss
xchg
add
lds
push
loopne
adc
and
or
mov
inc
xchg
ret
xchg
pop
mov
xorb
xor
adc
repz
dec
lret
repnz
mov
es
hlt
add
inc
pushf
inc
add
jno
dec
xor
xchg
pushf
repnz
hlt
mov
pusha
jb
das
or
inc
mov
add
fcmovnb
mov
jecxz
fimull
int3
imul
imul
stc
push
loopew
out
mov
add
shll
jmp
inc
sahf
js
sbbb
adc
and
aad
enter
mov
cmpsb
pusha
xor
add
add
stos
mov
movsl
sbb
mov
sbb
xchg
cwtl
sbb
jge
jne
add
popa
mov
sub
sahf
sahf
cmp
and
loope
jbe
xor
hlt
fsubrs
out
call
jne
adc
jo
adc
bound
test
mov
jecxz
cmp
mov
or
mov
mov
xor
fldenv
test
mov
pop
lods
or
or
mov
or
inc
inc
sbb
mov
lret
mov
jb
sbb
dec
jne
inc
pop
negb
enter
jle
aam
stos
pop
subl
aaa
pop
jmp
sbb
xor
inc
call
xchg
mov
fildl
sub
sub
xchg
push
lds
adc
lcall
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
jmp
movsl
jno
into
mov
jb
fnsave
push
mov
mov
imul
mov
fmuls
iret
mov
mov
std
and
out
bound
dec
out
or
mov
arpl
fnsave
int3
jmp
or
pop
xchg
lahf
dec
mov
add
push
push
lock
es
add
scas
cltd
adc
es
fidivrl
xchg
pusha
iret
in
pop
adc
out
jo
or
xchg
push
lods
cmpsb
push
jb
push
sub
lods
imul
repz
push
push
sub
into
sub
call
in
jecxz
into
jmp
jecxz
ret
push
lods
or
ret
ss
and
mov
nop
test
push
sbb
xor
movl
cmp
adcl
cli
jae
jmp
pop
xchg
dec
pop
and
jle
cs
and
cmp
out
xchg
stos
pusha
das
inc
sub
out
jp
shlb
jecxz
lahf
cmp
sub
jnp
ljmp
and
lods
jecxz
pop
loope
popa
cmpsb
jle
sti
arpl
out
int3
or
jbe
push
xchg
sub
rclb
pushf
orl
mov
bnd
sub
sbb
inc
cmc
push
jp
aas
test
negb
jb
inc
dec
aaa
into
imul
rcll
lods
inc
mov
call
inc
sub
ja
xor
mov
es
fcmovbe
jl
cld
mov
dec
ja
test
loope
push
jge
mov
mov
adc
adc
mov
wrmsr
push
pusha
add
cmp
mov
inc
pop
scas
enter
into
sarb
push
mov
ja
js
mov
dec
out
outsl
stc
es
in
nop
fnsave
loopne
or
pushf
mov
or
pop
das
outsl
pop
scas
std
outsb
das
push
push
xchg
sarb
addr16
push
jne
and
loopne
mov
cli
mov
mov
cli
nop
popw
popf
test
icebp
pusha
jbe
dec
mov
sti
sub
push
dec
add
adc
lret
push
pop
bound
ret
fisubl
loope
push
mov
stos
pop
test
inc
jmp
mov
scas
mov
cmpsl
cmpl
roll
or
rolb
inc
in
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
jmp
xor
sub
sub
mov
sahf
mov
xchg
stos
or
mov
lock
out
pop
dec
insb
or
fiadds
xlat
sbb
jle
cmp
dec
or
cwtl
int3
mov
test
mov
or
xor
popa
repnz
aam
cmpl
pop
push
xchg
pop
push
inc
push
movsb
adc
enter
mov
cmc
in
lock
adc
xchg
loop
adc
jl
ficompl
mov
dec
mov
shlb
data16
jno
mov
pop
jl
xchg
and
div
sbb
test
jnp
xor
mov
adc
das
push
shrl
sbb
jmp
jo
sub
stos
imul
sbb
lods
mov
inc
rclb
jecxz
iret
cli
xor
cmp
ljmp
sbb
stos
sbb
loop
lods
or
imul
inc
add
mov
push
or
aad
or
insb
jp
test
adc
andb
aaa
in
mov
pushf
clc
mov
stc
adc
push
adc
sbb
mov
pusha
push
adcb
sbb
mov
ss
cltd
loopne
push
mov
cmp
xchg
movsl
sbb
pop
adc
sub
mov
pop
cs
jmp
inc
mov
jg
lret
enter
push
xlat
add
bound
xor
aad
lcall
lret
jo
repz
jle
xor
adc
xchg
stos
pop
sarl
enter
dec
mov
jnp
and
jmp
inc
pusha
rorb
xchg
adc
testl
pop
daa
mov
add
mov
xorb
or
xlat
pop
xchg
gs
les
ror
mov
and
add
scas
mov
inc
aas
movl
leave
and
push
test
fsub
hlt
gs
and
mov
fcoml
fstl
dec
and
pusha
adc
repnz
insl
popf
ret
shl
push
incl
inc
adc
ja
mov
repz
cmpsl
rclb
mov
jmp
and
int3
mov
push
add
xchg
add
xchg
je
jbe
out
jns
loop
xor
in
sub
outsb
pushf
xorl
shrl
pop
push
rcrb
gs
icebp
add
dec
mov
cmpsl
loope
pop
lea
inc
fwait
xor
sub
sbb
scas
outsl
mov
inc
sbb
jne
add
cmp
fs
arpl
inc
ss
and
jmp
jge
adc
mov
cld
mov
jnp
test
mov
push
clc
inc
cmp
jo
xor
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
jmp
mov
lods
xchg
mov
pop
xor
xor
xlat
jecxz
adc
mov
sti
or
daa
leave
cmovge
or
cmp
insb
inc
into
lods
and
cmp
push
pop
jge
sbb
mov
std
inc
push
cld
hlt
ret
int
push
jmp
sub
or
jb
or
or
cld
mov
sbb
push
pop
push
jno
dec
stos
inc
or
orl
mov
lret
xor
cld
sbb
xchg
movsl
cmp
add
fldenv
gs
js
or
xchg
data16
or
jl
jb
jl
xchg
and
shr
pop
dec
jne
adc
scas
mov
cld
xor
je
push
jno
stos
add
push
jae
pop
call
cwtl
sti
iret
pop
inc
push
add
jnp
sbb
shlb
sbb
mov
je
mov
loope
ficoms
dec
cmp
adc
call
arpl
out
pop
popa
add
adc
pushf
mov
fistpll
mov
push
testl
pop
sbb
inc
sbb
mov
mov
imulb
xlat
outsb
adc
pop
iret
jns
fnstcw
je
cmp
adc
popf
pop
add
rcrl
imul
adc
push
scas
sub
sbb
dec
in
in
xchg
push
sbb
test
jmp
push
mov
dec
adc
loope
mov
sbb
movsb
cmp
mov
adc
ss
push
loope
movsl
iret
jl
adc
pop
xchg
mov
lods
testb
dec
or
arpl
movsl
mov
aad
std
cmp
ficomps
or
fs
adc
lods
mov
push
pop
lea
jg
es
adc
xchg
sub
sbbl
sti
mov
divl
or
pop
lods
scas
popa
dec
in
pop
mov
sbbb
test
sub
aad
push
xor
jns
scas
ret
mov
cmpsb
jno
jne
sahf
test
push
mov
xchg
shl
adc
cmp
mov
outsl
cmp
push
orb
inc
cmp
mov
cmp
fwait
sbb
jge
jmp
idivl
loopne
in
enter
mov
xchg
ja
adc
mov
imul
xlat
rol
call
lret
imul
mov
inc
pop
inc
mov
xor
sbb
sbb
jb
mov
call
in
xchg
cmp
and
leave
pop
lods
and
lcall
sbb
js
xchg
pop
sarl
daa
in
fcoml
mov
adc
pop
loop
test
and
rol
mov
sub
rclb
xor
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
jmp
jne
mov
je
fsubrl
or
xor
mov
mov
testb
inc
dec
sbb
push
mov
pop
in
xor
fdivrl
mov
ljmp
mov
dec
jae
xlat
shlb
out
cs
sti
ja
cmp
mov
cmp
mov
daa
cld
xor
dec
mov
loopne
add
sub
addb
mov
mov
inc
mov
sub
fbstp
push
inc
mov
in
mov
cmp
fs
es
std
or
repz
cmpsb
or
push
jb
aaa
dec
lahf
lds
orb
xchg
bnd
and
inc
cmc
popf
xchg
or
and
jbe
lds
outsl
cmp
sub
mov
xor
addl
push
popa
mov
mov
or
push
or
xor
cmp
mov
mov
push
addb
out
mov
cwtl
es
jl
inc
jmp
outsb
jmp
mov
les
adc
ret
bound
push
movsb
sub
mov
jb
fidivl
mov
and
in
push
scas
mov
stos
mov
adc
test
inc
cmp
js
rcrb
push
out
pop
aam
mov
out
bound
fwait
enter
imul
movsb
addl
cmpsb
popf
mov
dec
fucomip
cmc
mov
sbb
inc
lret
mov
add
mov
test
pop
lcall
or
inc
stc
cltd
jle
movsl
mov
mov
insb
sub
add
inc
dec
push
xor
sub
in
and
push
adc
sub
or
pushf
out
mov
movl
icebp
repz
shlb
into
or
xor
xchg
test
in
dec
sahf
in
sub
jecxz
stos
push
mov
rep
adc
pop
cmpsb
stos
mov
cmpsl
or
jecxz
ss
dec
cmpsl
repz
js
sub
stos
sub
or
xor
ret
fimull
pop
fnstsw
dec
mov
mov
jl
xchg
or
mov
negb
cmp
xor
add
in
rolb
icebp
pushf
jae
ss
subb
mov
or
ds
xor
push
pop
jnp
les
fcmove
mov
add
js
adc
nop
and
lret
outsl
pop
mov
xor
ljmp
scas
std
sub
pop
or
inc
dec
mov
popa
push
enter
jns
xchg
add
adc
jno
fwait
adc
aas
mov
mov
adc
inc
mov
add
data16
adc
call
loope
movmskps
lock
and
pop
xor
out
sbb
setbe
jo
jb
or
insb
push
cmc
cltd
jns
add
jno
jle
push
inc
jnp
sub
enter
add
push
loope
movb
dec
or
out
in
dec
cmpsl
pop
xchg
mov
sub
push
pop
dec
mov
loopne
das
dec
arpl
lret
add
and
xchg
and
xchg
and
dec
xor
add
pop
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
jmp
pusha
and
push
xchg
jns
cmp
aas
cmpsb
add
jecxz
push
mov
mov
out
lcall
mov
es
fistpl
ja
repnz
inc
pop
leave
xchg
fsubrs
push
mov
aaa
mov
push
sbb
jne
jl
mov
insl
mov
call
xor
mov
orb
mov
sub
outsb
sub
sbb
test
sti
sub
shrb
sub
lods
pop
enter
sbb
mov
jp
and
xor
adc
xchg
jl
js
xchg
push
lods
leave
xlat
gs
insl
sbbl
jno
mov
stos
mov
jo
or
sarb
int3
aam
icebp
dec
mov
pop
insw
cmp
dec
lret
adc
in
rcll
mov
test
gs
push
xchg
clc
inc
add
xor
lret
mov
jg
mov
mov
cld
popf
add
shl
stos
xchg
in
aam
aaa
jbe
and
xchg
xor
mov
inc
popf
jle
addb
sbb
push
fs
adc
psadbw
pop
dec
test
out
or
cmp
imul
lret
sub
jge
jne
dec
scas
les
push
inc
push
pop
movsl
and
xlat
push
fwait
push
imul
dec
testl
cs
cmpl
stc
sub
xchg
sbb
test
sub
cli
or
xchg
push
jmp
mov
js
pusha
push
lods
jmp
fsub
js
shll
push
pop
push
mov
divb
stos
test
scas
movsb
ret
outsl
push
stc
dec
lds
add
mov
adc
aaa
outsl
add
fs
in
notrack
es
inc
dec
mov
pusha
jge
sbb
push
sahf
loopne
and
enter
mov
sub
jmp
fidivrs
adc
fmuls
inc
jmp
imul
sbb
mov
scas
mov
mov
test
cmp
insl
add
lea
movb
jo
sbb
dec
or
sub
xchg
lret
jge
mov
fsubl
daa
and
push
loopne
adcb
outsl
lds
xor
fimuls
add
loop
gs
xchg
lcall
psllw
cmp
out
aam
ret
insb
rcl
pop
cmp
xor
add
inc
xchg
negb
out
sbb
xchg
ljmp
div
push
add
popf
dec
leave
adc
dec
pop
scas
or
xchg
loop
lods
lret
les
ja
pop
lea
movsb
mov
adc
adc
inc
or
jns
add
aaa
sahf
push
push
in
xchg
xor
inc
push
xchg
es
in
js
cmpsb
jmp
cld
lcall
pop
sbb
aad
inc
scas
icebp
divb
pop
mov
push
mov
add
mov
adc
mov
aad
xchg
movsl
enter
int
add
clc
jne
xchg
add
out
pusha
fistpll
hlt
lods
xchg
insb
fbstp
lods
adc
jecxz
pop
out
xor
xor
mov
mov
cmpsl
test
cmp
xchg
sti
jmp
dec
icebp
xchg
lcall
push
lock
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
jmp
js
cld
jb
pop
dec
lods
push
sahf
leave
jge
jecxz
es
mov
stc
imul
add
imulb
lcall
in
sti
and
int3
dec
push
add
push
xor
pop
dec
divps
pop
adc
fdivrs
stc
test
popa
push
out
lds
inc
es
call
mov
test
push
pop
xor
pop
pushf
movsb
ja
aaa
and
xchg
mov
ret
fs
loope
clc
jecxz
test
adcb
inc
cltd
inc
cmp
cmpsl
push
std
pop
adc
cwtl
pusha
mov
jne
mov
mov
push
inc
icebp
filds
insb
add
adc
jle
sub
fs
stos
adc
aaa
or
sbb
xlat
xchg
push
aas
lea
push
jne
cmpsb
inc
and
sub
hlt
pop
subl
out
imul
xchg
cmc
sbb
sub
cmpsb
mov
js
inc
mov
jno
mov
inc
xor
jl
push
push
jmp
inc
mov
rolb
cmpsb
movsl
inc
xor
jp
pop
mov
and
xlat
es
test
data16
jmp
or
outsl
dec
scas
lea
jp
popf
pop
mov
adc
push
enter
push
cmp
or
mov
ja
dec
popf
clc
dec
imul
push
fwait
loopne
aad
les
scas
push
mov
push
mov
sti
add
xchg
sbb
fs
divl
dec
shll
push
bound
lret
adc
xor
cld
sahf
addr16
pop
mov
inc
movsb
repz
pop
cmc
ds
mov
pop
out
repz
add
mov
ficompl
push
idivb
rorl
jmp
dec
shrb
data16
ja
add
out
or
sub
imul
mov
cmp
push
aaa
int3
push
iret
sub
push
mov
add
pop
fsubrl
stc
insl
sbb
in
sub
lds
dec
testb
sahf
movsl
movsb
aam
dec
lods
loope
xor
es
out
jle
dec
fnstenv
sbb
fistpll
movsl
scas
push
sub
fcoms
leave
les
sub
nop
mov
adc
mov
dec
loopne
fs
add
jl
loop
sbb
adc
in
xor
in
mov
test
push
add
insb
cmp
xchg
mov
scas
hlt
push
mov
imul
mov
std
scas
movsb
add
sub
aam
jl
sbb
pmullw
test
movsb
pop
hlt
dec
mov
aam
cmp
add
mov
es
mov
and
popf
std
mov
push
inc
insl
xchg
xchg
out
pop
cmc
mov
mov
in
ss
jecxz
push
mov
inc
cmpb
dec
lret
push
stos
add
jl
sbb
out
stos
int3
xchg
out
mov
jae
pop
adc
xor
test
xor
xchg
xchg
mov
loop
jnp
lods
inc
dec
out
pop
inc
sarb
xor
call
add
pop
aad
cltd
and
imul
sarb
jnp
mov
push
cwtl
push
pop
xor
std
pop
outsl
aas
mov
mov
add
add
xchg
inc
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
jmp
out
insb
and
or
or
xchg
movsb
sub
mov
add
stos
fsub
lea
dec
bound
push
movsl
loope
leave
daa
adc
imul
xchg
cmp
sbb
adcb
and
adc
dec
daa
lss
sub
pop
xchg
aam
cmp
push
pusha
rorb
xorb
aas
inc
test
adc
push
pop
adc
mov
push
cmp
ljmp
lcall
xchg
cli
sbb
mov
jnp
xor
es
mov
and
sub
inc
mov
jp
xor
fwait
aaa
push
jns
or
mov
clc
mov
js
push
int3
loop
lock
sti
mov
mov
sub
fisubrs
popf
outsb
cmp
lods
lahf
inc
add
in
lods
dec
adc
inc
fisubrl
insl
das
xor
xor
fisubs
xorl
xor
dec
or
ds
and
adc
aam
out
pop
repnz
push
out
sbb
pushl
mov
nop
push
xor
mov
scas
lods
mov
adc
test
insl
push
add
xchg
dec
adc
mov
mov
jo
mov
push
insl
repnz
or
push
adc
repnz
outsb
call
pop
push
or
sbb
inc
fidivrs
sub
outsb
rolb
sbb
xchg
sub
mov
outsl
out
cmpsb
insb
mov
movsb
loopew
push
movsl
popa
add
mov
ds
mov
mov
or
mov
call
cltd
and
lods
jnp
insl
sbb
jmp
nop
mov
sbb
fs
mov
ret
jne
std
jmp
mov
cmp
dec
inc
mov
push
jno
popf
jnp
fwait
subl
inc
sub
fidivl
iret
rorl
sub
aam
cmp
inc
in
rcll
adc
aad
inc
mov
add
inc
mov
popa
mov
jns
lcall
or
in
cmpsb
push
imul
popf
xorb
xchg
sbb
xor
aaa
add
fists
xchg
imulb
out
xlat
sub
dec
cmpsl
push
mov
push
push
in
inc
sbbl
adc
mov
mov
sar
and
push
push
or
sbb
icebp
rorb
outsb
jp
fwait
sub
testb
xlat
push
in
in
cmc
push
lods
loope
add
jl
addr16
divl
mov
push
mov
sbb
pusha
fcompl
xchg
cmp
rcrb
sbb
mov
mov
movsl
ds
jno
fs
xchg
movsb
adc
je
dec
sbbb
out
jg
scas
sbb
icebp
xchg
js,pt
ja
inc
pop
mov
push
aam
lods
jnp
pop
lock
dec
leave
rorb
decl
les
out
add
fsubrp
icebp
cmp
mov
pop
cmp
adc
mov
out
shr
aam
push
test
fmull
add
pop
xor
js
inc
in
ret
dec
mov
das
es
jle
jne
dec
sub
shrb
sub
cld
jnp
adc
test
insl
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
jmp
sub
cmp
add
xor
leave
xor
mov
std
inc
jle
daa
and
cld
add
leave
imul
ret
jmp
pop
in
sti
lea
fs
sahf
fwait
rclb
sbb
mov
outsb
sub
dec
cmp
test
js
test
mov
mov
ljmp
xchg
cmp
fsubp
xor
jg
movsl
scas
sub
leave
leave
out
mov
mov
push
das
mov
mov
mov
mov
and
dec
pop
pop
or
push
gs
push
cmp
lret
xchg
add
mov
mov
mov
mov
in
hlt
jl
fbstp
stos
cmp
sbb
outsb
add
fists
or
stos
mov
divb
mov
les
cltd
or
xor
mov
xor
in
dec
sub
pop
pop
cmp
adc
xor
inc
push
push
lods
lods
sub
lea
pop
adc
mov
shlb
test
mov
sbb
or
cmc
and
divb
imul
push
or
pusha
xchg
xor
adc
addl
mov
ret
test
xchg
iret
pop
mov
mov
pop
test
mov
fsubs
out
mov
sub
mov
rclb
hlt
cmpsb
xchg
clc
pop
out
mov
fnstcw
inc
ljmp
call
mov
in
mov
dec
or
pop
xchg
je
mov
pop
ret
fnstcw
sub
clc
push
mov
xor
cmc
daa
aas
dec
pop
lret
adc
or
jl
lods
sbb
inc
cmp
jb
lods
dec
pop
add
push
fcomps
in
sbb
pop
mov
adc
jo
pushf
pop
das
test
push
jno
sub
xchg
mov
pop
sbb
ljmp
clc
test
mov
sbb
andb
in
pop
fstl
mov
pop
movsl
inc
subl
imul
lret
lods
clc
scas
mov
mov
xor
mov
ljmp
rolb
sahf
repnz
insl
sub
xor
bound
movsl
dec
add
movsl
icebp
add
data16
mov
xchg
repnz
dec
rorl
lock
mov
jns
mov
mov
or
inc
rclb
scas
loopne
loope
xchg
mulb
mov
adc
jecxz
inc
test
xchg
mov
nop
imul
inc
fidivrl
or
jecxz
sub
jg
add
xor
cld
nop
std
mov
mov
mov
aas
xchg
xchg
dec
xlat
movsl
scas
or
mov
jecxz
lock
dec
pusha
test
call
cmc
sbb
or
insl
ss
sar
mov
add
mov
mov
data16
cmp
std
in
cmp
and
dec
sub
sbb
in
inc
leave
jnp
outsb
inc
dec
jo
ret
cmp
pop
mov
mov
jg
addr16
mov
lods
imul
adc
sbb
imul
sub
xchg
xchg
push
sub
iret
stos
into
sahf
arpl
pop
jo
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
jmp
pop
icebp
lds
ror
fnstsw
sub
mov
sbb
ret
jae
and
inc
rcrl
adc
das
out
add
xlat
and
loope
popa
test
lcall
hlt
mov
inc
jnp
cs
fcmovnbe
sti
mov
sar
lock
mov
cwtl
shlb
adc
push
sbb
frstor
xchg
aas
nop
frstor
adc
pop
dec
movsl
dec
int
cld
dec
xchg
imul
mov
cmpsl
jb
jg
pop
scas
lods
ret
clc
mov
inc
mov
cmp
push
test
notb
fcompl
push
mov
dec
cmpsb
mov
sbb
loop
test
and
xor
cmc
call
stos
xchg
dec
lret
dec
cmp
xchg
pop
scas
arpl
icebp
mov
das
dec
rcrl
xchg
inc
stc
sbb
mov
mov
pushf
ja
push
stc
jns
dec
jp
xor
xchg
and
lcall
cmc
mov
sub
cmp
repz
mov
popa
adc
sub
sub
repnz
xchg
xor
dec
leave
jp
sub
push
add
or
push
out
cmpsl
loop
mov
xor
dec
mov
pop
cmp
add
fldl
dec
push
icebp
stos
stc
cltd
sbb
dec
or
lahf
push
daa
mov
roll
imul
js
shl
adc
fcoms
cwtl
pop
idivb
mov
std
es
xor
jge
xchg
movsl
ret
imul
nop
adc
push
stc
sub
and
xor
mov
stc
in
sub
dec
shll
clc
dec
insb
cli
fcoms
gs
xor
lcall
ja
into
adc
xor
std
xchg
popf
mov
shll
and
mov
mov
push
cmc
cli
int3
dec
adc
add
jle
in
fwait
cmp
xchg
jns
into
je
mov
lcall
movsl
out
daa
cmpsb
pop
sbb
push
out
xor
sbb
scas
cmpsb
or
lods
mov
sarl
mov
cmpsb
cli
jo
mov
bt
frstor
push
ret
test
pusha
dec
lods
jno
xchg
mov
inc
mov
scas
mov
rcll
pusha
fidivs
sbb
add
pusha
mov
popa
popa
and
sbb
subb
jecxz
daa
jno
imul
in
push
sub
cwtl
rcrl
or
jg
mov
ljmp
adc
ds
out
ret
addr16
xlat
pop
pushf
add
popa
mov
jne
popf
sbb
mov
jne
shrb
mov
cli
cmp
lret
in
fsubl
ljmp
addr16
jbe
aas
mov
hlt
aas
push
ret
xlat
adc
mov
loope
mov
imul
mov
ljmp
andl
shll
rorb
arpl
push
pop
decl
rorl
jno
icebp
pushf
jo
rorb
xor
leave
push
add
add
out
cmp
lret
movsb
enter
std
popf
into
cmpsl
gs
test
rorb
pop
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
jmp
pop
sub
shrb
mov
jecxz
inc
mov
mov
add
xor
xchg
cmpsb
push
and
fnstcw
inc
daa
push
outsb
repz
push
pop
sub
xchg
and
dec
jle
aaa
xchg
inc
pop
sbb
sub
sbb
das
inc
push
faddp
push
jle
in
push
movsl
push
nop
test
jno
pop
add
idivb
or
mov
popa
sbb
fs
shll
negl
mov
dec
and
inc
int
xchg
loope
hlt
cmp
pop
sub
or
into
test
imul
xchg
mov
inc
adc
and
cwtl
inc
test
or
sbb
enter
bsr
jg
xchg
jp
ja
loope
xlat
mov
inc
leave
cmp
xchg
xchg
push
cmpsb
lret
std
mov
pop
jnp
jge
dec
xlat
clc
and
lods
out
push
push
cwtl
sbb
xchg
adc
add
lock
out
iret
mov
in
cltd
mov
arpl
mov
lock
xor
jp
sub
gs
inc
aad
cltd
aaa
push
lret
mov
mov
sub
imul
out
fsubr
dec
jecxz
push
jo
push
push
xor
xor
dec
cwtl
leave
pusha
add
out
out
cwtl
xlat
mov
inc
or
inc
pop
xchg
push
stc
inc
cmp
mov
jo
xor
mov
aas
or
repnz
mov
or
jne
push
inc
shrl
es
inc
mov
adc
inc
push
push
sub
mov
jle
add
jb
sub
dec
cmpsl
test
xor
lods
fimuls
dec
push
fnsave
insl
xor
ja
shlb
and
xchg
xor
ds
add
imul
loopne
push
add
fldl
jge
mov
rclb
xor
jmp
js
push
or
xchg
xchg
inc
add
jne
fistps
jb
into
xchg
lods
ret
imul
int
push
rclb
sub
and
jp
add
or
out
push
inc
iret
fmuls
xchg
mov
cmp
jmp
data16
gs
stc
ret
add
call
call
int3
push
push
cwtl
push
std
mov
mov
loop
xchg
add
lods
or
jne
mov
mov
scas
cmp
sahf
jo
sub
cld
cmc
push
ds
shrl
push
lret
clc
sub
jge
in
adcl
jae
pop
and
lret
aad
outsl
sbbb
das
inc
cmp
add
mov
loopne
or
adc
mov
cs
dec
dec
push
repz
pop
mulb
mov
mov
jne
and
daa
mov
sbb
pusha
mov
mov
in
mov
mov
aad
mov
mov
cmp
mov
or
or
or
lods
dec
aad
or
shr
or
jnp
aam
pushl
xor
cwtl
push
pop
or
cmp
movsb
dec
ljmp
mov
dec
cld
lds
or
push
jp
sbb
iret
ja
lds
jbe
movsb
sbb
loope
ljmp
or
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jo
fldl2e
cmp
jo
out
mov
dec
mov
mov
fildl
mov
mov
jge
lret
jae
es
fldcw
xor
sub
mov
addr16
clc
gs
mov
mov
pop
jmp
cld
movsl
and
daa
bswap
bound
es
stc
pop
shl
dec
jle
dec
add
sub
iret
pop
sbb
out
stc
mov
or
negl
fs
and
mov
adc
ret
ss
mov
fnstsw
ret
cmp
inc
fimull
mov
sbb
xchg
mov
sub
jle
pop
cmp
outsb
inc
into
pop
jmp
je
in
or
lods
add
xchg
gs
push
cmc
or
dec
iret
movsl
shr
hlt
pusha
int3
fnstenv
inc
movsl
or
ficompl
movsb
jb
stos
adc
int
out
fwait
imul
icebp
stos
push
inc
mov
les
int3
enter
out
push
add
lea
dec
les
xor
cmp
inc
aaa
andb
and
subb
mov
push
and
sbb
out
aas
xchg
cld
inc
adc
repz
fmuls
cmpsl
or
test
cwtl
push
xchg
loopne
push
cmp
adc
incl
rorb
fs
popf
sub
and
mov
cltd
in
popa
and
cs
lret
push
xchg
cmc
jb
lahf
aaa
adc
and
mov
roll
dec
stos
je
repz
xchg
or
cmpsl
ljmp
ds
xchg
fiaddl
mov
pop
imul
adc
inc
jo
decb
shrl
ffreep
and
xchg
mov
xor
jp
inc
mov
es
sub
repnz
repnz
test
lds
pop
push
jae
cli
or
inc
ljmp
xchg
rorl
ret
cmp
jb
mov
pop
push
push
ja
mov
fcoms
fsubrs
push
inc
pop
cld
cmp
mov
cmpsl
int
xor
xor
jmp
cmp
push
xor
mov
cli
or
cmp
inc
movl
movl
movl
jmp
pop
daa
fcompl
mov
aad
cmpl
or
mov
std
icebp
cmp
xorl
les
xor
ss
fsubrs
cltd
push
xor
fdivrl
addr16
imul
lods
fsts
nop
or
or
fstpl
inc
lcall
call
fisubl
in
mov
scas
adc
loope
and
xchg
jle
cmpsb
leave
mov
adc
fwait
push
cmpsl
push
je
shrb
or
inc
test
icebp
inc
and
mov
mov
push
shrb
push
mov
mov
cmpsb
dec
xlat
sub
insl
addl
cmp
mov
push
arpl
sarl
push
xchg
cmp
mov
push
out
frstor
xor
cmp
adc
testb
sub
xor
pop
lret
or
jge
xorb
mov
ljmp
pop
mov
mov
dec
xlat
scas
cmpsl
mov
adc
add
adc
mov
or
inc
sbb
test
cmc
mov
stos
inc
xchg
xor
push
pop
movsb
sarb
or
mov
jo
loope
pop
in
pop
outsb
inc
pop
cmpsl
notb
or
add
sti
mov
pop
xchg
outsb
xchg
icebp
xor
fidivl
call
or
out
stos
adc
imulb
stos
scas
scas
or
stos
rcrb
test
fidivrs
sub
cmp
mov
cld
add
mov
pop
and
cmp
fs
cli
mov
mov
jge
pop
aas
cmpsl
and
jge
aam
roll
repnz
les
out
jge
mov
in
xor
test
in
sbb
jnp
or
lahf
pusha
push
sub
push
cmc
test
fidivrl
pop
mov
or
stos
jmp
cwtl
in
les
out
sbb
pop
mov
dec
into
inc
iret
ss
xchg
pop
movsl
out
std
cmp
inc
out
fwait
js
aad
push
hlt
cld
orb
adc
or
xlat
xchg
xorl
ljmp
in
or
pop
dec
out
fildll
aam
lds
dec
bound
mov
popf
adc
mov
es
dec
mov
sbb
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
test
or
lods
mov
test
push
mov
mov
scas
sbb
stos
mov
jne
aas
shlb
cmp
data16
frstor
sub
cmp
jbe
into
push
fstps
cmpsl
popf
mov
movsb
repz
pop
ret
push
dec
inc
mov
xchg
testb
das
pop
inc
int3
adc
mov
pop
dec
mov
dec
das
stos
mov
ss
fdivs
inc
rcr
fs
in
dec
push
iret
rorl
push
imul
sarb
sbb
jge
inc
popa
leave
inc
inc
sbb
inc
aam
inc
out
mov
mov
xchg
rorb
xchg
inc
in
das
jbe
dec
popa
negb
dec
cmpw
pop
lret
sub
cmp
ficoms
cmpsb
push
adc
imul
cmpsl
adc
cmc
ljmp
push
push
pop
inc
mov
lret
mov
pusha
cli
mov
push
sub
inc
pop
shr
stos
pop
xchg
clc
dec
xchg
mulb
xchg
out
out
das
lods
xor
sbb
jae
hlt
push
push
jnp
mov
xor
js
mov
das
xor
push
mov
xchg
add
xchg
sub
cmp
cmpsl
jne
ret
das
dec
jae
iret
aaa
pusha
mov
inc
xchg
lret
inc
jmp
test
das
push
data16
sub
mov
adc
adc
fcoml
mov
push
mov
or
or
inc
insl
pop
ss
lods
or
aas
mov
mov
daa
ljmp
inc
jbe
sub
add
scas
loopne
pop
push
shlb
fdiv
cld
mov
lcall
push
pop
rorb
mov
iret
mov
push
mov
mov
mov
test
or
jg
int3
mov
int3
loope
xchg
clc
cltd
mov
push
mov
pop
sti
shrl
push
pusha
push
imul
icebp
cld
xor
loopne
int
cmp
ljmp
inc
es
dec
mov
cmp
mov
mov
push
stc
add
scas
and
mov
xchg
test
in
cmpsb
dec
adc
icebp
xchg
pop
inc
mov
pop
mov
cmp
in
into
pop
bnd
sbb
mov
insl
and
push
loope
dec
and
jmp
lea
js
jge
iret
xchg
mov
xor
test
pop
ret
mov
sub
addl
jp
push
mov
inc
mov
insb
mov
hlt
cmpsl
dec
loop
sub
stc
jge
stc
or
jl
sub
lcall
xor
fsubrl
out
dec
mov
jns
and
ficoms
jp
xchg
or
push
jne
movsl
or
inc
call
mov
or
aam
xchg
pop
in
pop
aas
adc
loopne
sub
push
inc
add
hlt
lahf
fwait
sbb
out
dec
mov
cld
jmp
in
push
fistl
cli
in
push
fisttps
sbb
movsb
inc
test
popf
insb
inc
xchg
sub
jb
stos
xchg
mov
xchg
addr16
xor
pop
mov
add
add
xchg
push
lcall
fists
xchg
scas
pop
mov
mov
xchg
pop
mov
xchg
inc
pop
jp
xlat
inc
sub
add
jmp
push
xchg
mov
incb
ret
pop
xchg
pop
mov
pop
cmpsb
lret
sahf
mov
pop
loopne
mov
js
add
pop
xor
cmp
test
repz
and
sub
xchg
push
lods
push
push
out
dec
ja
mov
push
sub
addr16
mov
lds
repnz
jns
mov
mov
sub
sub
jle
pop
mov
jmp
data16
test
cmp
cmp
xchg
test
icebp
xlat
sahf
call
rcrl
or
bound
sbb
mov
push
mov
mov
dec
or
mov
out
dec
cld
fstps
xchg
aam
sbb
ja
cmpsl
lret
mov
std
ficomps
xchg
or
xchg
cmp
mov
ffreep
sbb
stc
jle
std
xor
dec
lock
jbe
movsl
es
sub
cvtpi2ps
mov
repnz
or
dec
aas
mov
xor
jmp
mov
jl
push
btr
xchg
dec
and
jge
add
das
xchg
and
lock
push
push
cs
sahf
pop
imul
jecxz
bound
cli
ljmp
in
popf
fmull
jbe
or
cltd
nop
pop
push
mov
sbb
dec
or
lret
sub
xor
adc
inc
cmp
mov
rcll
das
mov
and
add
sub
ljmp
mov
mov
repz
cmpsl
ret
pop
in
lea
int3
pop
iret
mov
out
fldenv
or
es
push
xor
mov
rcl
clts
imul
pop
movb
jnp
inc
sarb
call
xorl
aaa
and
outsb
jbe
out
shll
inc
data16
fcom
inc
mov
ljmp
pop
in
push
and
xchg
scas
jne
bound
mov
out
cmpsb
inc
repz
mov
leave
scas
loopne
cmpsl
mov
in
push
push
fists
in
xchg
jbe
outsl
add
addr16
and
mov
imul
mov
lods
pop
jmp
ja
test
mov
imul
inc
ja
pop
mov
inc
dec
cmp
rorl
mov
mov
les
add
cs
sbb
mov
into
int3
fmul
pop
test
scas
sti
mov
clc
icebp
cld
mov
jle
jg
cmc
add
fsub
dec
bound
mov
cltd
cli
mov
mov
ret
ljmp
mov
push
xor
xor
stos
mov
inc
dec
call
sub
xchg
or
or
add
icebp
xchg
pusha
jbe
jge
call
push
pop
js
cmp
pop
mov
pusha
orb
sarb
ror
xchg
mov
aam
idiv
test
sub
jbe
addr16
loop
pop
and
and
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
jmp
xchg
mov
push
xor
push
ret
jbe
hlt
iret
mov
mov
jbe
xchg
ret
mov
add
push
das
sub
repnz
arpl
cmp
jg
push
add
sahf
shll
pop
mov
jl,pt
fwait
out
stos
imul
lcall
mov
aas
movsl
or
xor
push
mov
pop
cltd
fiaddl
or
aad
mov
inc
or
imul
mov
sahf
sarb
inc
addr16
xlat
cmp
inc
push
nop
dec
iret
pushf
pop
sub
fdivrl
xchg
mov
mov
jle
shlb
inc
popf
mov
mov
orl
in
addb
sub
aaa
iret
inc
fldl
in
cmpsl
sub
and
pop
roll
sahf
je
jecxz
jl
adc
fwait
adc
insb
adc
mov
jne
mov
cltd
pop
mov
insl
jmp
adcl
xor
sub
push
push
mov
sbb
rorb
mov
lret
sti
das
fs
cwtl
and
arpl
mov
pop
lods
pop
inc
mov
and
dec
cmp
pop
and
sbb
arpl
pop
ss
and
and
jecxz
outsl
test
add
lea
push
daa
sqrtps
push
cli
jo
mov
sub
fstpt
cld
scas
sahf
xchg
hlt
int3
sub
push
icebp
inc
mov
js
cmp
push
xchg
mov
insl
inc
mov
cld
lds
roll
ret
push
mul
addr16
sti
addb
pop
sahf
rorb
sbb
repnz
daa
lock
or
or
pop
jmp
xchg
cs
mov
mov
mov
fisttpl
mov
dec
rorl
sarl
mov
push
jo
cmpsb
jp
sbb
std
jne
aaa
sti
pop
and
std
mov
mov
push
or
fcoms
inc
filds
cltd
cs
push
aas
cltd
lods
js
ss
js
lret
or
filds
or
out
dec
ja
mov
stos
cmp
fs
cmp
pop
add
dec
mov
bound
mov
add
cld
push
or
xor
clc
sbb
fs
jne
jg
sbb
jno
sub
faddl
insb
jae
xchg
jnp
js
xor
test
repz
push
mov
mov
sub
in
mov
mov
jo
cmc
xor
xor
in
data16
lret
inc
inc
out
cli
out
pop
add
dec
cld
cmp
add
imul
push
mov
insl
jnp
jnp
fnstcw
adc
push
sti
mov
cmp
xor
lahf
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
jmp
icebp
orl
nop
in
jl
pop
mov
ret
andb
and
shll
sbb
ss
adc
inc
shll
sbb
jge
dec
fisttpll
push
adc
popa
pcmpeqd
lahf
mov
movsb
data16
cs
fwait
and
xor
and
mov
adc
mov
fadd
xchg
jne
pop
fnstcw
push
jecxz
adc
es
out
nop
push
dec
mov
mov
mov
call
push
pop
inc
lods
mov
sbb
push
and
inc
mov
mov
mov
xchg
mov
loope
aad
out
ficoml
aaa
repnz
sub
cld
mov
sarb
jno
fs
dec
cmp
mov
pop
dec
cld
ds
addl
mov
sbb
mov
xchg
xchg
cwtl
das
adc
fucomi
test
push
repnz
mov
mov
mov
das
andl
insl
and
mov
inc
arpl
cmp
mov
into
and
ljmp
enter
sbb
and
adc
ror
jp
jp
add
cs
je
je
clc
loope
gs
ror
lea
or
or
inc
pop
dec
xlat
shl
xchg
add
loopne
mov
in
inc
movsb
fnstenv
cmp
divb
sbb
shrb
divb
imul
cltd
movsb
jns
xor
jno
mov
adc
and
dec
test
jle
sbb
fldcw
sbb
mov
ficoms
and
mov
cmp
decb
out
and
loop
lock
fucomp
test
sbb
or
sahf
adc
sahf
mov
jbe
cltd
sub
dec
cs
jnp
repz
pusha
sub
adc
arpl
sub
pop
sahf
rclb
in
dec
imul
mov
fisubs
dec
lcall
int3
cs
add
aam
dec
adc
shlb
frstor
mov
test
cmp
add
sub
inc
mov
mov
daa
loop
out
aas
pusha
xchg
jmp
lahf
ja
movsl
push
idivb
ret
sub
adc
je
leave
adc
xchg
jmp
movsl
outsl
cmpsl
jl
sub
shl
scas
and
jb
cmp
jmp
xor
adc
pop
xchg
push
jmp
je
pusha
aad
push
push
inc
xchg
push
mov
add
pop
lds
mov
jle
sarb
das
lods
dec
ret
push
adc
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
jmp
push
jnp
jl
mov
nop
repz
mov
mov
jno
leave
jnp
sbb
add
bound
mov
push
imul
popf
lds
inc
jns
xrelease
mov
mov
ja
adc
insb
inc
pop
cltd
loop
test
aaa
cmp
mov
dec
mov
aad
xchg
fdivrs
xchg
sar
mov
lds
mov
test
adc
fstl
stc
xrelease
sub
add
add
sbb
jno
mov
xchg
sbb
ret
loope
xor
mov
inc
or
movsl
mov
dec
bound
xchg
test
dec
add
scas
push
fnstsw
imul
aaa
stos
outsl
fsubr
mov
sub
xchg
negl
data16
mov
pop
mov
sbb
adc
add
loop
jle
into
lret
ljmp
ljmp
fiaddl
fnstenv
inc
andl
enter
sbb
cld
cmp
jo
xchg
shll
add
and
cmpsl
push
add
sti
and
pop
xchg
sbb
mull
popf
xchg
out
jne
cmpsl
xlat
mov
mov
mov
loop
sbb
pop
les
sub
in
xchg
jecxz
in
pop
push
int
sub
out
popa
fcmovnbe
adc
ror
sub
and
shrb
or
dec
push
jns
test
add
push
mov
bound
stos
mov
lods
mov
loop
add
or
xchg
mov
pop
and
push
jecxz
and
into
pop
daa
pop
test
sub
bound
jmp
rol
mov
imul
addr16
rclb
pop
sub
and
aaa
stos
stos
inc
lcall
out
adc
xor
jbe
shll
cs
out
jb
pop
lret
in
addl
ficompl
das
iret
push
aaa
sbb
adc
inc
xlat
rep
out
jnp
mov
out
aaa
std
pop
mov
test
mov
xor
mov
cmp
cbtw
cmovs
notl
and
sahf
fmuls
pushf
aad
xlat
jo
test
pop
insl
out
lods
cmp
pusha
outsb
mov
movsb
mov
aad
pop
xchg
fstl
pop
mov
lret
je
enter
andb
cmp
fwait
ljmp
xchg
insb
fadd
add
lds
sar
lock
fadds
cmp
add
adc
inc
xchg
out
data16
adc
fstps
adc
mul
aas
les
dec
enter
mov
les
xchg
pop
cmp
and
dec
push
jne
clc
push
sbb
cli
dec
add
dec
xchg
inc
movhps
sub
xor
mov
add
mov
and
shrd
xor
shr
mov
cmpl
not
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
push
call
and
xor
add
and
mov
and
adc
add
movl
mov
cmpl
movl
not
movl
mov
jmp
movl
cmpl
jne
push
pushl
call
and
negl
not
sbb
sub
or
xor
or
xor
mov
sub
xor
or
mov
cmpl
not
mov
mov
mov
jmp
mov
cmpl
jbe
push
call
and
inc
adc
mov
or
mov
mov
shl
mov
shrd
xor
addl
shr
cmpl
movl
mov
jmp
movzwl
cmpl
jl
pushl
call
sub
xor
or
mov
sub
sub
inc
inc
orl
adc
sbb
cmpl
movl
mov
jmp
mov
movl
cmpl
jae
push
pushl
call
xor
or
mov
sub
add
xor
add
sub
neg
sub
mov
cmpl
movzbl
mov
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
pushl
call
and
and
sbb
inc
addl
mov
xor
add
mov
sub
or
xor
xor
or
adc
mov
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
sbb
shl
mov
adc
xor
and
shld
jmp
scas
cltd
and
sub
push
mov
mulb
les
xchg
mov
std
adc
push
and
cmp
mov
scas
pop
pop
mov
insl
adc
cld
insb
inc
rcll
or
scas
inc
xor
out
jbe
jmp
push
call
or
lahf
adc
adc
mov
ret
stos
adc
shl
in
pop
xor
xchg
mov
jg
xor
pop
sub
test
loopne
inc
fldt
subb
push
ret
inc
enter
and
popa
lahf
gs
and
clc
adc
insb
das
push
scas
lea
cmp
adc
dec
mov
mov
xchg
fnsave
and
mov
push
mov
mov
mov
popa
xchg
daa
xchg
sbb
test
adc
shll
xor
or
pop
xor
jae
pop
push
lods
out
jnp
cltd
pop
shl
jnp
push
mov
hlt
shll
add
or
in
sub
iret
pop
pop
fildl
setl
out
xor
cmp
cmp
roll
xchg
test
adc
das
mov
cmp
cs
scas
push
cld
clc
sahf
inc
std
les
jmp
cmp
ljmp
out
filds
mov
popf
addr16
les
xor
sbb
pop
dec
lcall
cmc
in
add
sbb
addb
stos
or
mov
push
adc
imul
dec
push
cmpsb
mov
sbb
cmp
add
out
sti
cmpb
xor
mov
adc
inc
and
ja
push
enter
cs
mul
clc
pop
pop
rcrl
insb
sbb
jl
push
xchg
in
ret
cwtl
in
movsl
ffreep
stos
jge
and
jmp
enter
stc
jp
out
xor
out
adc
dec
cmpsb
or
push
jg
inc
fiaddl
insl
or
add
xchg
mov
es
lcall
clc
gs
bound
xchg
cmp
add
imul
js
fisubrl
and
mov
xchg
pop
scas
mov
lret
cltd
in
cs
or
cmp
sbb
test
enter
nop
xchg
xchg
sub
mov
xor
add
push
inc
fdivl
dec
test
sbb
jecxz
or
or
inc
sbb
roll
dec
mov
movsb
cmpsb
xor
mov
mov
xor
or
mov
ja
jle
xchg
mov
push
enter
std
cmp
add
jns
xchg
out
add
jge
adc
xor
aam
sbbb
les
sbb
cmp
test
push
inc
cld
js
xor
dec
or
sbb
mov
fwait
mov
dec
enter
data16
shl
and
mov
mov
mov
movl
mov
xor
xorl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
sub
mov
xor
shld
xorl
shl
addl
xor
cmpl
not
not
jmp
mov
not
cmpl
je
push
pushl
call
mov
xor
mov
sub
inc
adc
xor
xor
adc
mov
xor
mov
movl
cmp
movl
jne
cmp
movl
je
add
mov
negl
mov
push
and
pop
or
jmp
imul
and
mov
mov
add
pop
lret
cmpsl
arpl
movsl
mov
mov
fidivl
cmc
subl
movsb
insb
push
or
shll
add
add
and
iret
movsl
das
xchg
push
xchg
or
adc
dec
aam
imul
pop
jle
pop
dec
xor
sti
shlb
jge
imul
cmp
add
ret
in
insb
test
mov
mov
sub
addr16
mov
fistpll
or
test
outsb
mov
shl
addr16
xor
ret
aas
nop
mov
mov
je
lcall
adcl
pop
clc
subl
sbb
mov
or
xor
test
sbb
sub
push
pop
add
pop
or
cmpsb
mov
jp
pop
adcl
add
lret
jb
dec
inc
and
jno
fldt
nop
movsb
inc
outsl
cs
in
jbe
test
pop
mov
sub
nop
jle
sbb
negb
and
push
jecxz
ds
addr16
outsl
pop
inc
xor
out
lds
sub
cmp
xor
sub
icebp
fwait
mov
sbb
jnp
pusha
aas
cmp
push
lock
xchg
xor
cwtl
jg
xor
aas
jne
mov
stos
clc
fbstp
jno
loopne
jae
xlat
xchg
sbb
jne
pusha
mov
pop
xchg
shrb
lcall
stos
out
test
rcr
sti
or
frstor
add
inc
inc
push
jge
leave
sbb
dec
xchg
push
divl
cmp
lds
inc
xchg
shrl
jns
xchg
aaa
out
inc
push
lcall
pop
movsb
sti
mov
jge
add
xchg
sbb
xor
sub
inc
cmp
adc
fxtract
sbb
arpl
pop
push
inc
divl
lret
pop
sub
subl
mov
ret
shl
xchg
bound
mov
push
xchg
xchg
mov
mull
mov
inc
and
inc
or
sub
dec
pop
xchg
imul
mov
jnp
js
mov
sbb
inc
sub
cmpsb
aam
xor
into
mov
dec
push
jmp
xchg
cmpl
adc
insl
data16
jnp
test
cmp
inc
and
cmp
loop
push
pop
xchg
cmpsb
mov
push
dec
hlt
adc
xlat
fimuls
les
in
xchg
loopne
in
ret
jno
cmp
pop
test
and
ds
out
xchg
imulb
push
inc
test
stos
xchg
into
sbb
sub
rol
dec
enter
mov
mov
inc
inc
mov
pop
or
mov
adc
cld
stos
xor
dec
loop
jmp
xor
xor
add
sub
shl
xorl
mov
xor
shr
jmp
jmp
mov
push
movl
mov
xlat
fstpt
icebp
dec
fcmovnu
jmp
jp
adc
into
sub
adc
push
sub
icebp
sub
ds
dec
sbb
cmc
int
mov
and
repz
clc
fadds
inc
inc
cmp
xchg
mov
jno
mov
cmc
jb
jb
pop
sahf
out
mov
int3
xchg
jns
out
js
leave
mov
jno
repz
xor
test
and
pop
add
inc
testb
push
sti
sbb
adc
push
jno
leave
sahf
mov
or
fwait
adcl
jmp
push
mov
inc
leave
mov
push
add
sub
mov
aas
je
jmp
cmp
aad
lea
test
mov
lahf
or
push
cmp
mov
popf
mov
out
mov
iret
cmp
loope
sub
negl
cmpsl
mov
scas
pop
call
sbb
lcall
jmp
fisttpll
cmp
lods
push
mov
mov
push
pop
mov
loopne
jae
pop
sbb
les
push
fstpl
in
loop
stos
inc
jl
adc
gs
lods
mov
fcmovbe
xor
shlb
sarl
inc
imul
loopne
mov
ud2
xchg
bound
sbb
mov
jns
dec
xlat
std
push
std
cmp
sbb
js
lea
sbb
fiadds
and
inc
ljmp
push
pop
test
rcrl
fmull
pop
dec
cld
cltd
mov
test
out
inc
sub
scas
pop
mov
mov
mov
aad
aam
call
stos
xor
loope
sarl
fucomip
xchg
js
cmp
pop
stos
push
in
cs
mov
or
cmp
jb
sti
ret
int3
and
push
movsb
push
in
mov
xor
lods
and
sub
mov
jecxz
leave
xchg
push
sub
xchg
sarl
sub
inc
outsb
xchg
popa
mov
mov
inc
lods
jecxz
jb
test
cmp
dec
enter
sub
lret
fsub
or
push
popf
scas
jl
out
jo
shl
cltd
jb
iret
movsl
mov
cli
xchg
jb
inc
lcall
xor
sbbb
insl
sti
adc
jg
sub
ss
out
xchg
aam
push
jp
hlt
xor
cmp
stos
rorb
les
loope
sbb
sbb
xchg
fiaddl
mov
leave
loope
adc
mov
insb
test
call
cmp
insl
push
inc
outsb
fcmovu
leave
loope
popa
fcomps
add
cld
jle
jbe
dec
xor
popf
jae
sahf
mov
xor
inc
push
cltd
mov
aaa
in
aas
enter
xorb
fidivrs
xchg
test
loopne
sbb
sub
cmp
add
add
or
add
mov
or
add
add
add
cmp
add
add
ja
push
push
pushl
push
push
pushl
call
adcl
or
mov
xor
addl
xorl
cmpl
mov
movl
movl
jmp
mov
cmpl
jl
pushl
pushl
pushl
call
adc
mov
and
and
mov
xor
mov
dec
mov
cmpl
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
push
call
movzbl
and
sbb
and
mov
add
andl
mov
adcl
mov
cmpl
movl
mov
jmp
movl
movl
cmpl
jbe
push
push
push
call
and
mov
mov
add
or
sbbl
sbb
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
cmpl
jle
push
call
addl
sub
mov
xor
mov
inc
movzbl
sub
mov
cmpl
not
movl
jmp
movl
cmpl
jle
push
push
call
sbb
xor
and
incl
addl
or
mov
mov
push
subl
pop
sbbl
sub
cmpl
mov
not
movzbl
mov
jmp
movl
cmpl
je
push
push
call
orl
movl
sub
or
neg
mov
add
mov
lea
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
in
dec
ret
in
fs
pop
push
or
iret
in
xchg
mov
test
je
jns
jb
out
mov
xchg
addr16
jne
mov
push
inc
mov
aas
pop
or
mov
sbb
lods
lret
notb
and
push
pop
cmp
pop
imul
jecxz
jne
arpl
add
lret
push
inc
xchg
lods
or
test
stos
mov
or
imul
add
sub
sbb
insl
jmp
sub
jne
push
stc
jge
xchg
mov
mov
jmp
xor
ds
xchg
in
xor
iret
xor
dec
cmp
lods
lcall
adc
pop
stc
mov
inc
cmp
cmp
lcall
imul
sarl
out
lock
insb
aaa
fbld
sbb
push
gs
mov
mov
rcrb
in
inc
cld
mov
cmp
xor
stc
pop
cmp
fbstp
ljmp
test
fcomps
lret
popf
lcall
cmp
adc
mov
je
pop
mov
lea
mov
nop
xor
outsl
xchg
test
in
xchg
mov
dec
adc
into
lock
mov
push
insb
jl
adc
adc
fcmovb
pop
and
xchg
xor
das
popf
mov
rcl
lock
pushf
lret
ja
insl
jle
stos
xor
or
movsb
sbb
scas
xlat
jecxz
inc
lea
xchg
arpl
shl
xchg
movsl
fldcw
push
rcrb
bound
stos
xchg
jns
je
xchg
mov
aam
stos
jecxz
insl
xchg
jnp
ljmp
push
cmp
push
pop
mov
mov
pop
add
ja
lea
pop
jno
jo
les
shrb
sbb
jnp
addr16
bound
jbe
and
dec
aas
mov
js
sbb
jns
sbb
sbb
cmp
cmpsb
xor
sarb
jo
sbb
ret
or
add
mov
test
mov
cmp
cmc
adc
or
movsl
fdivl
push
pop
and
sbb
mov
mov
in
push
pop
cmp
stos
jg
or
cmp
cmpsl
xchg
repnz
cmpsl
or
mov
or
jb
out
mov
jl
fmul
arpl
mov
ret
popa
adc
pop
mov
lea
cmp
mov
cmp
addr16
lret
sbb
popa
xchg
mov
pop
sbb
stos
cmp
out
jns
sbb
loopne
mov
sbb
out
pushf
pop
mov
mov
mov
push
and
cmp
lds
fwait
xor
sbb
gs
mov
rorb
data16
pop
inc
jl
cmp
lea
adc
lods
enter
add
adc
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
lock
dec
mov
xor
movsb
cmp
loope
sbb
mov
sub
and
xchg
pop
js
mov
mov
repz
pop
xchg
ja
xchg
mov
or
rolb
sub
add
sbb
scas
dec
xor
mov
movsl
push
ret
jp
test
aas
dec
sub
adc
insb
adc
into
mov
fwait
cwtl
lock
pushf
cs
sbb
inc
adc
jnp
mov
xor
lods
jb
sti
sub
out
sub
test
jns
std
lods
sub
mov
icebp
mov
loopne
stc
insb
push
push
icebp
sub
xor
loop
cli
xor
movsl
or
xchg
dec
in
push
mov
int
por
movsb
and
inc
int
xor
std
or
in
test
jg
jle
push
add
insl
xor
mov
xor
push
movsb
inc
or
or
push
add
mov
es
or
rclb
iret
or
cmp
out
lds
jo
daa
addr16
push
int
push
xor
movaps
xorb
in
out
xlat
clc
or
inc
adc
mov
cld
jl
daa
jb
cs
and
mov
push
xchg
inc
loope
xor
fsub
jne
adc
lahf
mov
lds
cli
popa
mov
out
pop
mov
lret
xchg
push
cmp
inc
inc
inc
pop
or
fistps
or
sbb
rolb
cwtl
pop
mov
aam
mov
addl
mov
dec
lock
aam
jo
or
imulb
out
leave
pop
xchg
popf
fdivrl
nop
das
mov
cmp
push
push
pop
inc
lahf
js
pusha
add
pop
lea
mov
cmp
push
sbb
roll
push
add
xor
std
ja
popl
test
jae
dec
add
stos
jg
mov
and
sub
mov
ljmp
shlb
mov
scas
scas
cs
dec
stos
pop
xchg
sbb
cltd
iret
popa
dec
lock
ja
xchg
inc
nop
ja
in
jo
incb
movsl
mov
adc
lea
dec
cld
cmpl
push
jae,pn
mov
inc
or
sbb
movsl
push
cmp
xchg
mov
jg
loop
xor
mov
into
inc
andb
cld
and
lds
cmpsb
sbb
adc
sub
jecxz
or
pop
nop
scas
sub
sti
cmpsb
sub
popa
push
int
pop
inc
lods
mov
sbb
cltd
and
insl
mov
mov
dec
cmp
add
cli
inc
dec
pop
add
mul
dec
lcall
mov
adc
hlt
lods
fs
jae
ret
cld
gs
cmp
shrl
dec
xchg
mov
jne
das
loopne
jno
add
ret
and
pop
arpl
pop
mov
jbe
call
decb
adc
rol
loope
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
jmp
pop
add
jl
fisttpl
lcall
les
xchg
aam
fwait
data16
ret
and
bound
adc
xchg
rcrl
mov
mov
sub
dec
aad
aam
clc
cltd
xor
aas
push
xchg
cld
aad
das
mov
lret
jecxz
and
inc
ffreep
pop
xor
loopne
sti
cmp
jnp
scas
pop
xor
in
sub
xor
push
lods
movsb
out
push
add
and
icebp
xor
mov
sub
cmpsb
mov
pop
int
outsl
dec
xchg
movsb
fnsave
or
and
enter
fs
stos
or
shrl
adc
mov
imul
pop
es
push
daa
std
sbb
lret
or
xchg
push
mov
pop
and
xchg
aam
inc
lock
rorl
pop
mul
push
pop
rcr
subb
nop
pop
pushf
mov
lods
stc
xchg
push
sbb
dec
hlt
mov
or
repz
inc
dec
int3
jb
or
xchg
ds
inc
xchg
call
dec
test
and
iret
cmp
lahf
sarl
out
shlb
push
xchg
arpl
stos
dec
fists
imul
xchg
cmp
add
push
fisubs
loope
fimuls
push
jl
mov
cld
xchg
outsb
gs
push
jno
imul
mov
arpl
shl
inc
shlb
mov
sub
push
pushf
pop
sub
fistpll
out
gs
dec
pop
xchg
test
cmp
loop
jnp
ljmp
or
repz
test
std
sahf
mov
aas
idivl
dec
and
jae
das
dec
dec
inc
mov
push
sbb
xchg
pop
lea
sub
test
aaa
repz
in
out
mov
fldcw
loope
mov
cwtl
repnz
fcoms
xchg
arpl
ficoms
rclb
fwait
pop
cwtl
fbld
ja
lret
add
dec
movsb
xor
fwait
and
hlt
enter
adc
rclb
jno
xor
fwait
xchg
rorl
sub
cmpsl
daa
mov
xchg
lahf
jle
pop
inc
pop
pop
loop
or
pop
dec
sbb
xchg
ja
jecxz
loopne
cmpsl
push
adc
insb
cmp
lods
jbe
lret
mov
pusha
roll
aas
or
outsl
xchg
or
xor
inc
jns
leave
inc
gs
adc
aas
sub
or
jb
mov
cli
clc
shll
jmp
jnp
cld
mov
negb
inc
cmp
xor
adc
ljmp
scas
push
inc
mov
scas
sub
pop
std
cmpsb
lock
push
jbe
in
stos
in
xchg
xor
mov
push
inc
or
xorb
loopne
push
sub
pushw
jne
test
imul
lahf
mov
mov
push
mov
mov
shrd
shr
xor
jmp
cmp
sub
xchg
sbb
jnp
mov
mov
inc
in
notb
mov
adc
mov
mov
and
repnz
sbb
mov
mov
aas
inc
fisubrs
cmp
cmp
pop
mov
sahf
jne
and
in
in
xlat
scas
orb
incl
push
sub
mov
pop
cmp
dec
fildl
jno
adc
ss
xcrypt-ctr
cmpsl
fistpll
fdivp
lahf
fiaddl
stc
aaa
inc
pusha
or
jbe
fistpl
mov
sbb
jo
cmpsb
movsl
jo
aam
mov
cmc
data16
in
daa
mov
mov
push
push
out
mov
push
sbb
adc
lods
mov
inc
test
sub
lods
pop
pop
rolb
mov
lahf
push
rcrb
iret
imul
add
loop
mov
pop
xchg
ret
adc
fwait
mov
and
cmp
subb
outsb
sbb
jnp
mov
cwtl
or
nop
sbb
mov
cmp
rorl
lds
outsb
scas
dec
pop
incb
repnz
and
movsl
push
xlat
insl
cmp
push
clc
pop
fsub
movsb
fsubp
or
out
push
sbb
jbe
pop
or
xchg
mov
jl
add
inc
lds
push
rcll
and
idivl
not
movb
pop
adc
mov
jl
xor
outsb
pop
shl
iret
cwtl
sub
xchg
pop
cmc
dec
add
test
cmp
mov
fucomi
push
lea
adc
rol
stos
xchg
mov
mov
cmp
push
lods
or
cmp
sub
test
fs
add
add
mov
sbb
popf
and
mov
adc
mov
jp
xchg
pop
or
cmpl
xor
in
push
bound
loope
inc
sub
xchg
pop
push
push
out
push
les
fcoml
std
mov
notl
lret
mov
ljmp
icebp
mov
cltd
push
pop
xchg
daa
mov
xor
ret
mov
mov
mov
out
mov
jae
dec
test
xchg
rcr
mov
or
mov
loop
out
fisttpl
lock
and
inc
les
test
mov
mov
cmpsl
mov
sbb
cmp
jns
mov
dec
mov
lock
fs
pop
clc
cmpsl
mov
out
mov
cs
xor
mov
ret
jg
pop
fcoms
cltd
cmp
divb
or
dec
rorl
out
add
adc
sub
mov
push
fldenv
jp
mov
cmp
movsl
xlat
or
sbb
das
sbb
cmp
mov
andl
dec
and
daa
mov
sbb
rorb
adc
fisttpl
lret
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
jmp
pop
cmp
das
lods
sbb
sub
stos
sahf
mov
mov
jnp
andl
js
test
adc
ret
push
arpl
sarl
cmpsb
scas
push
cmpsl
sub
fs
mov
adc
mov
lret
repnz
cmp
xchg
mov
inc
pushf
idiv
xor
adc
dec
dec
sub
into
push
inc
loope
lods
xchg
repz
inc
mov
pop
xor
into
push
mov
popa
dec
mov
adc
ret
pop
sldt
lods
cmp
cmp
pop
mov
lods
in
mov
pop
xorb
inc
ret
iret
nop
dec
rclb
xchg
sub
sbb
pop
stc
test
cmpb
negb
cmp
mov
fisubrs
test
lea
mov
stos
into
mov
xor
and
add
nop
pop
bound
dec
push
xor
cwtl
repz
inc
into
inc
sub
mov
addl
and
pop
mov
push
or
lcall
cld
adc
mov
jnp
mov
inc
dec
or
jmp
lcall
xchg
or
pop
mov
pop
pop
or
inc
out
test
fadds
inc
lods
push
sub
rorl
jno
xchg
pop
add
call
sbb
add
fsubrl
mov
testb
and
cmpl
into
dec
cmc
push
sbbb
stos
loop
xchg
into
test
mov
pusha
push
inc
iret
xor
inc
fnstenv
int3
and
je
lods
dec
das
push
pushf
cmp
cli
mov
and
btc
sub
insb
pop
add
cmp
fnstenv
add
jge
add
or
jno
jae
shrl
repz
leave
inc
cmp
pop
lcall
insl
dec
xchg
popl
pop
ss
mov
clc
jbe
movsb
or
adc
das
inc
add
mov
adc
sbb
jns
int
adc
test
lock
push
in
sub
scas
xor
test
push
sbb
std
cmp
inc
fistl
scas
cmc
and
fidivrl
sub
mov
jnp
push
mov
jl
aam
jnp
jno
jbe
ja
movsl
ss
popa
dec
cmp
cmp
sub
cmp
imul
test
lds
int3
pusha
sub
inc
in
adc
lret
shrb
pushf
scas
xor
adc
push
sub
loop
es
fwait
mov
mov
jbe
adcb
imul
icebp
subl
ret
lock
mov
xchg
fnstcw
fwait
aas
inc
add
mov
insb
mov
jmp
movsb
pop
xlat
leave
xor
dec
daa
pop
loope
lret
inc
and
cwtl
ss
out
xchg
aas
inc
mov
rcrb
cmp
or
jae
cmp
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
jmp
fisttps
xor
and
iret
mov
inc
push
inc
xchg
mov
std
push
roll
mov
push
cmc
not
xchg
scas
lret
xchg
or
lret
and
or
push
movsb
inc
fnstenv
fidivl
aam
and
repz
inc
loop
xor
push
xchg
icebp
fisubl
mov
xor
pop
push
aad
push
repz
xlat
fldt
cmp
je
pop
sbb
loopne
pop
add
cwtl
xor
inc
es
pop
push
sbb
ds
lds
mov
add
dec
jle
mov
imul
inc
sbb
arpl
fbstp
cli
xchg
xchg
mov
pop
pushf
das
scas
push
popf
js
add
jle
dec
inc
push
jno
movsl
incb
sbb
dec
jmp
push
mov
cli
cli
hlt
xor
mov
mov
jge
jle
es
xchg
ret
mov
fldt
cmp
sbb
jae
mov
mov
lcall
jo
fldt
iret
mov
ljmp
stos
push
or
jmp
std
mov
ficomps
fwait
test
jae
add
lahf
sbb
and
sbb
jmp
pop
rclb
dec
icebp
jbe
add
lock
das
add
xchg
dec
jns
out
iret
popf
xchg
fsubrs
add
fnsave
addl
lods
push
mov
jae
xor
mov
fwait
mov
jne
pushl
mov
lods
loop
or
les
mov
mov
xchg
mov
arpl
sbb
or
cltd
in
adc
inc
push
mov
std
insb
dec
ja
out
rolb
or
iret
and
mov
cmc
pushl
imul
mov
aam
add
mov
sub
cmpl
test
test
or
inc
jbe
fwait
mov
mov
sub
fnstcw
adc
cmp
sub
setnp
and
mov
insl
fdivs
imul
xor
add
cmp
xchg
push
add
push
lock
test
xchg
dec
pusha
dec
ljmp
out
jnp
add
out
push
aas
shrl
push
roll
sub
shll
imul
stc
push
push
push
repnz
push
mov
enter
sbb
xor
loope
adc
lret
enter
sbb
insb
gs
aad
xchg
jno
xchg
and
sbb
hlt
xor
cmp
cmpl
idivb
dec
mov
aas
inc
or
mov
adc
xchg
sbb
inc
mov
sub
testb
inc
lds
movsl
inc
call
sti
imul
inc
sbb
xor
sub
mov
sarb
enter
add
call
mov
mov
das
jl
or
mov
mov
cmpsb
out
adc
cmpsl
int
mov
fcoms
ret
jl
lock
call
inc
sbb
subb
sub
fdiv
out
pop
loope
stos
cld
mov
jae
jne
xor
jnp
mov
inc
cmp
cmpb
repz
inc
mov
mov
mov
xchg
test
sti
sub
sbb
mov
sub
sarb
mov
jl
loopne
inc
adc
subb
jne
cwtl
insb
dec
push
mov
in
std
push
jns
push
xor
mov
das
dec
addr16
pushf
or
and
jmp
int
test
ds
xor
cmp
add
test
push
cwtl
cld
fstps
icebp
aad
bound
cld
out
mov
jge
add
adc
push
insl
fstp
xor
out
add
sbb
mov
sub
sub
jmp
push
lret
sub
jo
sbb
mov
dec
jmp
mov
cld
fs
les
xchg
es
lret
mov
dec
mov
aam
or
jge
nop
lock
sbb
or
test
int3
lods
rcrb
lahf
mov
in
leave
mov
and
lds
into
popf
pop
sbb
cmp
xchg
dec
cmp
xor
cwtl
outsl
into
ljmp
aaa
push
inc
adc
mov
out
and
jns
and
or
insl
push
and
rep
rcrl
sar
lret
jp
in
sub
clc
jae
xor
inc
push
mov
mov
cwtl
xchg
shlb
cld
xor
cmp
dec
pop
or
push
rorb
pusha
cli
adc
and
jmp
out
jno
mov
out
jmp
mov
ljmp
sbb
std
xor
aam
lock
call
and
leave
jp
mov
dec
xchg
jb
jecxz
out
scas
mov
mov
cmpsl
aad
xchg
xor
es
fwait
mov
xchg
mov
mov
mov
test
and
push
daa
pop
and
jbe
ret
mov
jl
outsb
cmp
ja
push
jg
aas
adc
lcall
or
mov
lods
add
xchg
in
mov
ds
sbb
loope
jecxz
scas
stos
dec
repnz
lret
add
mov
pop
jae
std
fisttpl
pop
mov
leave
lcall
cmp
mov
fs
lds
push
icebp
sub
rolb
inc
dec
cmp
xor
mov
lods
decb
test
inc
call
mov
xor
test
jmp
jno
mov
fs
sub
xchg
sbb
mov
mov
or
cmc
mov
mov
sbb
adc
push
mov
or
sarb
cli
mov
jmp
les
repz
clc
loop
or
sar
push
add
and
scas
loope
inc
inc
out
inc
xorb
in
push
cmpsb
xor
or
jno
fidivl
pop
fwait
bound
xchg
sbb
or
mov
pop
in
bound
xorl
loop
cmp
nop
ja
ljmp
les
repz
sub
and
out
mov
sbb
or
test
sub
and
je
movsb
scas
pop
lahf
add
cli
stc
adc
push
add
adc
mov
or
mov
cmpsb
adc
xor
push
or
inc
push
lcall
push
mov
push
das
push
jmp
mov
sub
pop
notb
mov
rclb
inc
lods
push
mov
xchg
and
mov
std
mov
mov
leave
xor
fisttpl
inc
out
js
cmpsl
adc
mov
jae
mulb
or
or
mov
rcll
arpl
lcall
lods
sub
dec
div
xchg
push
adc
repnz
xor
lret
xchg
stos
cltd
daa
out
lcall
xchg
and
pop
jb
es
inc
cmpsb
adc
in
into
bound
out
int
pop
add
sub
repnz
out
fs
in
cld
sbb
lea
and
jne
sub
xlat
decb
fwait
mov
xchg
insl
cmp
in
or
dec
cmp
add
in
mov
subb
mov
pop
pop
lret
pop
jne
sub
dec
cmp
push
aad
ret
leave
test
sub
add
in
add
movsb
stos
xchg
sahf
xor
daa
sub
mov
frstor
sub
ljmp
ror
scas
arpl
movsb
enter
not
add
sbb
sbb
pop
ljmp
js
sbb
test
sbb
ret
shrl
push
into
and
andl
adc
xchg
ja
xchg
jmp
mov
cmc
lcall
dec
mov
sti
int3
leave
inc
std
xor
cmp
cmp
lret
sbb
addr16
xor
push
lods
shlb
xchg
or
scas
les
add
scas
pop
dec
dec
jae
sub
sub
cwtl
lods
add
jle
sub
push
push
mull
xchg
lods
cmp
call
pusha
dec
sbb
add
andb
or
add
add
inc
inc
std
je
inc
push
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
ja
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
cmp
inc
mov
cmp
mov
fldl
mov
mov
sub
fwait
cld
fnstcw
and
mov
cmovnp
cltd
sbb
push
mov
lahf
sbb
jl
popa
dec
inc
test
jo
jae
push
push
adc
or
fadd
add
adc
loop
mov
lahf
cld
adc
sub
inc
rcll
xor
fwait
cmp
pop
ret
call
outsb
and
pop
dec
es
imulb
pop
jb
mov
and
sti
dec
repz
push
hlt
in
push
jnp
fwait
out
dec
pop
sti
ret
push
xlat
push
leave
pop
sbb
scas
jmp
jb
jp
sub
inc
jbe
ret
add
popa
inc
add
out
loope
out
icebp
mov
or
sbb
adc
mov
or
popf
loop
mov
jb
mov
sbb
stc
js
out
or
fnstsw
lretw
das
out
mov
stc
mov
iret
pop
mov
enter
repnz
shr
insb
cmpsb
mov
pop
out
daa
sub
popf
and
lret
imul
out
mov
adc
fcoms
arpl
mov
push
adc
mov
stos
add
cld
pop
ret
int
es
ret
insl
dec
dec
or
repz
cltd
and
xor
cmp
push
pop
leave
lods
sub
or
enter
pop
clc
mov
incb
mov
mov
mov
enter
lea
xor
xor
pop
or
inc
pop
cmc
push
inc
pop
mov
cmpsl
jne
adc
and
xchg
mov
sbb
cmp
clc
repnz
xor
sbb
cmp
sub
or
mov
adc
jg
loope
mov
add
idivb
imul
inc
mov
add
pop
rcr
xor
aad
shl
mov
mov
xchg
adc
enter
inc
inc
mov
pop
leave
mov
and
or
es
fcoms
mov
mov
push
sub
jno
call
clc
ret
inc
push
sub
push
jae
pop
rcrb
movsl
std
mov
sub
push
inc
or
sbb
insb
aaa
add
popf
xorl
or
les
aas
hlt
fwait
gs
aaa
jmp
lods
mov
jmp
ljmp
cltd
sub
dec
fdivl
mov
adc
sub
mov
popf
fisttps
in
inc
out
mov
jae
hlt
and
pop
xchg
sarl
pusha
or
sub
xchg
int3
mov
mov
mov
je
mov
pop
xchg
data16
cmp
push
mov
sbb
mov
add
mov
xor
xor
movsl
mov
fldcw
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
movl
mov
jne
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
call
adcl
subl
and
movl
adcl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
push
inc
cmp
mov
push
mov
iret
pushf
mov
mov
ret
mov
cltd
pop
cmp
dec
jle
dec
xor
icebp
lods
dec
mov
add
lods
sbb
fs
adcl
in
rcll
inc
sub
cld
shrb
cmp
jno
inc
cmp
dec
xchg
push
xor
pop
in
cmp
sub
shlb
and
or
inc
inc
daa
imul
aam
dec
mov
mov
loope
add
inc
jmp
iret
mov
insl
ds
scas
mov
mov
mov
sub
jg
sub
dec
push
xchg
dec
mov
xor
xchg
add
imul
xchg
push
iret
popa
push
jno
stos
ret
in
aad
jmp
cmp
movsb
mov
mov
bswap
cmp
aaa
subb
mov
xchg
sbb
das
testb
pop
mov
pand
cmp
inc
or
ret
cmpsb
fistl
cmp
xor
sbbl
insl
jmp
jbe
test
loopne
push
sti
dec
rclb
xrelease
imul
mov
mov
adc
lock
out
push
pop
nop
ud2
popa
mov
mov
and
sub
mov
xchg
dec
test
jae
adc
jns
jo
push
fadds
jg
imul
scas
xchg
pop
repnz
sbb
je
lods
imul
cmpsl
call
inc
sahf
sub
addr16
shrb
aad
notl
inc
adc
in
and
mov
xchg
push
fs
jns
hlt
test
shl
rcrb
mov
int
cmp
rorb
cmc
decb
push
lret
jl
cmpsl
notw
test
addr16
cmpsb
aas
jbe
fldenv
lahf
or
pop
cmc
sbb
xor
daa
mov
and
nop
dec
pop
mov
sub
lea
test
push
inc
xor
out
aas
test
daa
fucompp
cmp
outsl
mov
jb
bound
addr16
push
test
mov
cltd
xchg
addl
mov
push
push
sbb
aaa
inc
pop
shlb
pop
push
in
lahf
andb
sbb
and
pop
aam
mov
dec
and
je
cmp
addl
sbb
daa
mov
pop
mov
inc
push
es
sbb
inc
lea
arpl
mov
mov
and
adc
mov
xchg
in
inc
inc
mov
daa
lret
scas
shlb
sub
out
aad
and
out
inc
xchg
add
push
loopne
or
or
rcr
jns
cmc
jnp
fildl
xor
cwtl
or
sahf
push
sub
mov
mov
std
pop
cld
lret
mov
and
lods
jae
add
outsb
cmpsb
idiv
out
cmp
popa
xor
xchg
add
lods
or
adc
cmc
popa
pop
adc
add
adc
dec
add
test
lock
mov
xchg
jl
or
in
push
xor
repnz
jle
stos
jnp
jbe,pn
rclb
jmp
mov
cmpb
aad
lret
shrl
xchg
jo
imul
push
stc
out
lock
dec
push
mov
scas
inc
ret
push
mov
repnz
mov
cmp
rolb
inc
call
push
mov
cmp
ds
ja
decl
mov
jecxz
insb
pop
push
sbb
cmp
sub
sub
adc
mov
aas
dec
push
sbb
jne
aad
loop
clc
ficoms
sub
cmp
ja
jmp
mov
movl
movl
movl
jmp
dec
pop
xor
inc
imul
jecxz
sarb
xor
xchg
ret
cli
xchg
das
je
push
loopne
cmp
xchg
xor
imul
mov
sahf
cmp
pop
jmp
mulb
xor
mov
dec
pop
faddp
mov
out
test
loopne
aam
fimull
xlat
sti
sub
and
xchg
pop
scas
pop
lock
mov
iret
insl
cmp
loope
push
sub
loop
stc
add
jne
data16
pop
bound
std
jns
jg
sbb
and
push
mov
dec
mov
add
in
call
mov
int3
push
push
insl
flds
jle
sti
adc
or
ss
adc
add
mov
arpl
cs
sub
adc
pcmpgtb
jg
aad
jo
sti
adc
repnz
dec
inc
ret
arpl
int
nop
cwtl
shlb
lea
call
das
or
sbb
out
shlb
dec
cmp
xor
mov
mov
nop
push
aad
jae
xor
mov
push
add
xchg
inc
addr16
xor
cltd
aas
repz
xor
jge
mov
mov
lret
les
fucomi
or
xchg
jnp
inc
add
xorl
in
lret
call
mov
les
jae
or
adc
in
leave
loopne
adc
xlat
pop
dec
push
adc
popa
jle
mov
or
mov
dec
jp
in
inc
push
mov
imul
stc
jb
push
dec
into
and
lods
pop
movsl
pop
int3
ret
stos
js
cli
insb
inc
stc
mov
xchg
or
rclb
cmpsl
push
mov
repnz
sti
mov
out
mov
pop
lahf
mov
das
mov
adc
lds
xor
mov
xor
repz
pop
dec
push
adc
lods
push
jnp
pusha
scas
rcl
mov
mov
ja
lea
dec
rol
mov
addr16
or
ja
jg
hlt
lds
adc
imul
std
push
mov
xchg
inc
pop
stos
ja
xchg
addr16
pop
cltd
sti
push
pop
sbb
add
mov
xchg
inc
adc
or
outsl
rclb
jge
addb
sbb
pop
pushf
test
pop
inc
push
in
sub
sti
pop
loopne
or
test
dec
pop
cmp
push
call
nop
insl
cmp
push
jge
sub
das
pop
pop
jb
lcall
jbe
pop
ret
dec
xor
adc
outsb
rclb
xchg
push
pop
sub
test
mov
outsb
neg
push
movsb
insb
out
call
repnz
sar
imul
mov
or
pop
inc
or
sbb
ret
movsl
nop
push
cmp
fdivr
test
jge
adc
lret
jbe
inc
jae
or
in
fistl
and
push
fwait
pop
jne
fldcw
hlt
mov
lret
push
mov
loopne
sub
movb
icebp
inc
pop
inc
cmpsl
xor
inc
adc
push
pop
xor
pop
icebp
xchg
mov
shll
xchg
push
sbb
or
mov
push
loope
pop
cmpsb
pop
in
mov
stos
leave
addb
mov
jecxz
adc
mov
into
mov
pushf
xchg
mov
cmp
pusha
ss
mov
stc
cmc
loopne
mov
lret
jnp
rcrb
jo
leave
addr16
gs
frstor
or
cmp
icebp
aaa
fwait
outsb
stos
push
mov
lret
xor
dec
fdivrl
xchg
fildll
cmp
pushf
dec
mov
xor
add
fmuls
and
add
scas
ret
je
add
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
jmp
mov
cmp
nop
xor
nop
cmp
sarb
sub
idivb
cmp
mov
mov
adc
inc
popa
cmp
andl
test
lock
movsl
pushf
fs
test
sbbb
mov
test
adc
shrw
fwait
xchg
push
into
push
rol
push
ret
and
or
test
daa
scas
dec
pop
pushf
scas
in
popf
adc
rorl
icebp
fisubrl
mov
push
xchg
popf
jle
test
pop
fdiv
sub
add
sbb
and
nop
subb
lret
jae
test
cld
rcll
cltd
imul
mov
mov
int
xchg
cmp
das
push
les
cld
xchg
adc
add
loop
cld
inc
stos
fwait
test
pop
sbb
or
outsl
dec
out
int
push
jecxz
sahf
pop
scas
fidivrs
test
mov
lret
xchg
xchg
sbb
imul
mov
addr16
loope
xchg
pushf
shrb
sahf
mov
movsbl
fcompl
cmp
out
sahf
push
sarl
out
pop
jmp
or
ret
std
pop
dec
test
mov
dec
cmp
and
and
mov
adcl
test
xor
fdiv
in
insl
mov
inc
pop
lods
dec
cwtl
or
mov
or
call
xchg
aad
and
pop
shlb
into
into
leave
int
imul
sub
leave
pop
mov
data16
fs
inc
or
sahf
mov
mov
xor
movl
adc
leave
fbld
das
pop
and
sbb
ret
pop
lock
hlt
mov
data16
ficoms
adc
mov
xchg
add
stos
add
xchg
jge
fdivs
dec
ss
jg
loope
inc
fwait
in
mov
and
jp
imul
mov
push
test
loope
adc
xorb
xor
add
xor
outsb
in
test
addb
xchg
cmpsl
mov
hlt
mov
loope
popa
out
mov
rorl
push
inc
push
dec
test
xor
add
or
scas
xchg
bound
lods
dec
push
cmc
dec
into
cltd
or
in
popf
xchg
sub
div
jb
inc
xchg
mov
lret
cmp
cmp
xchg
sbb
mov
vorps
xor
add
pop
aas
popa
loopne
fisttps
out
sub
jns
fcompp
or
fsubl
or
outsl
js
test
xchg
xlat
test
mov
arpl
push
ljmp
mov
in
or
fisttps
cmp
xor
ret
out
sbb
xchg
mov
mov
cmp
jb
scas
mov
sbb
cmp
pop
out
jle
arpl
or
sub
xchg
fsubrs
and
out
push
lret
je
adc
add
ror
xor
icebp
lahf
jb
jbe
push
mov
dec
pusha
xchg
stc
mov
ror
jo
cmp
mov
xchg
sub
aaa
stos
das
pop
shll
and
lods
sub
push
pop
popf
pop
loope
jmp
xchg
test
leave
adc
dec
cs
imul
mov
sbb
ret
cmp
fnstsw
out
pop
subl
negl
or
xchg
add
pushf
fsubr
or
add
outsl
push
xchg
and
mov
bswap
lahf
xchg
push
mov
fcoms
mov
lea
adc
movsl
mov
inc
dec
in
mov
add
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
cmpl
mov
mov
not
movl
jmp
movl
cmpl
jbe
push
call
inc
adc
andl
mov
sub
mov
mov
andl
push
andl
pushl
andl
call
mov
xor
movl
movl
cmpl
mov
movl
movl
mov
jmp
movzbl
movzwl
cmpl
jge
pushl
push
call
not
adc
xor
or
mov
mov
orl
xor
andl
imul
orl
and
sub
or
mov
dec
movl
movl
or
movl
xor
movl
mov
sub
mov
sub
xor
mov
orl
and
orl
mov
xor
sub
addl
imul
mov
movl
cmp
movl
jne
movl
sbb
movl
movl
jmp
and
xchg
jmp
int
loope
sbb
or
sarb
mov
cli
or
and
les
shlb
sbb
mov
push
or
sub
andb
mov
and
lods
je
das
or
cwtl
mov
xchg
rcrl
mov
out
subl
sub
mov
jl
cmpb
cs
leave
faddl
add
add
cmp
inc
jp
push
adc
push
xchg
cmc
faddl
addr16
ret
je
clc
inc
pop
xlat
jne
dec
inc
aaa
into
add
inc
test
data16
jmp
test
push
orl
enter
mov
jne
mov
add
xchg
xchg
xchg
mov
jge
fadd
ja
push
addr16
xor
push
shrb
mov
pop
mov
mov
rcrl
repz
mov
lret
push
lahf
mov
rcrb
inc
ss
push
push
lods
pop
xor
xor
push
jl
add
in
jns
cmp
xor
inc
scas
arpl
xor
test
sbb
push
xchg
outsb
dec
test
mov
mov
fldenv
xchg
or
add
sbb
test
outsb
cli
nop
test
xor
mov
mov
test
imul
fbld
cmp
inc
xor
aas
or
sub
mov
in
mov
shrl
cld
push
aaa
add
wrmsr
insb
cmp
mov
adc
xor
bound
icebp
lcall
mov
or
pop
mov
not
pop
pop
xchg
xchg
push
xor
and
inc
mov
test
jge
jmp
pop
stos
mov
mov
ja
lods
ficoml
test
sub
sti
mov
cs
lock
mov
stos
add
ljmp
std
mov
ljmp
mov
xchg
mov
or
int3
jb
nop
mov
test
inc
mov
inc
and
lds
add
or
pushl
not
movl
movl
adc
movl
movl
dec
movl
inc
movl
movl
mov
mov
sbbl
imul
sub
or
xor
movl
pushl
cmpl
mov
movl
mov
movl
jmp
movl
cmpl
jg
push
call
andl
adc
xor
and
and
or
movzbl
adc
cmpl
mov
mov
movl
movl
jmp
mov
cmpl
jg
push
push
call
mov
mov
adc
sbb
mov
and
sub
sub
addl
add
adc
mov
add
push
add
pop
xor
div
mov
xor
or
sbb
mov
incl
or
or
mov
div
xor
cmpl
movzwl
mov
jmp
movl
cmpl
jg
push
call
xor
andl
mov
or
add
orl
adc
subl
sbb
xor
cmpl
movl
mov
jmp
mov
cmpl
jne
push
push
call
adcl
andl
movzbl
adc
mov
adc
orl
adc
orl
orl
pushl
adcl
mov
mov
or
mov
mov
pushl
sbbl
add
pushl
imul
pushl
addl
mov
mov
subl
xor
subl
mov
orl
div
sbbl
and
xorl
or
addl
pushl
xorl
call
orl
dec
movl
jne
movl
cmpl
notl
movl
jmp
movzbl
cmpl
jae
push
push
pushl
pushl
pushl
push
call
or
xorl
sbb
subl
mov
mov
or
movzbl
add
mov
mov
subl
mov
movl
mov
call
sbb
jmp
add
popf
jmp
sub
cmpsb
scas
xchg
jecxz
push
fldl
mov
mov
int3
lock
inc
es
mov
in
shr
jg
jbe
add
jb
dec
in
roll
mov
push
or
or
lret
popa
aaa
aam
inc
insl
sub
fists
nop
sbb
rcl
test
mov
xchg
lret
adc
stos
in
fdivrs
push
rorl
les
leave
incl
cmp
mov
adc
adc
ss
dec
inc
mov
mov
out
mov
mov
cmp
fwait
mov
and
dec
popa
ficompl
xchg
adc
lods
adc
fwait
mov
xchg
in
jb
cwtl
pop
mov
xor
or
push
aad
inc
mov
mov
cmc
dec
movsl
pand
pop
xchg
cmp
mov
inc
dec
push
jnp
mov
push
lahf
mov
jae
fcompl
mov
pxor
inc
movsb
sub
imul
and
ret
pop
lods
test
mov
and
addl
stos
sbb
test
xchg
movsb
lock
push
in
xor
inc
cmp
mov
outsl
jnp
leave
sti
nop
outsb
loop
or
sti
adc
sbb
jo
jle
xchg
fbld
mov
cmp
call
xor
test
mov
mov
mov
and
ja
cmovae
dec
pushf
outsb
inc
rcrl
clc
push
out
xchg
movsb
stc
inc
adc
lea
mov
add
push
add
cmpsl
cltd
inc
jg
push
lock
mov
inc
addr16
dec
mov
cmp
xor
push
daa
mov
es
xchg
stos
inc
adc
cmpsb
int
lods
leave
xchg
xchg
mov
cmpsl
nop
or
dec
mov
shll
addl
mov
or
dec
mov
daa
lods
fidivrl
int
jnp
push
jmp
imul
insb
scas
xchg
ficoms
std
int3
push
and
xchg
js
nop
adc
mov
adc
push
lret
gs
xchg
repz
mov
xchg
movsb
psubw
mov
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jl
pushl
pushl
call
xor
or
and
and
xor
add
mov
sub
or
inc
cmpl
movl
movl
mov
movl
jmp
mov
cmpl
jl
pushl
push
call
sbbl
addl
add
xorl
addl
lea
xor
or
xor
mov
sub
mov
sbb
mov
cmpl
mov
mov
jmp
not
cmpl
jg
pushl
push
call
andl
xorl
add
subl
mov
or
adc
mov
mov
mov
sub
or
mov
xor
xor
or
sub
mov
xor
shl
and
shr
or
mov
inc
mov
xor
mov
mov
mov
cmpl
movzwl
movzbl
jmp
not
cmpl
jb
pushl
push
push
push
pushl
pushl
call
movzbl
add
mov
xor
xor
xor
xor
sub
sub
add
xor
sbb
adc
mov
or
mov
cmpl
mov
movl
mov
jmp
movl
cmpl
ja
pushl
call
sbb
adcl
sbb
xor
or
xor
add
add
sub
shrd
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jae
pushl
call
subl
mov
or
sub
dec
dec
notl
movzwl
sub
shr
mov
mov
addl
xor
adcl
xor
orl
or
mov
adc
mov
orl
push
orl
pushl
lea
push
sbbl
shl
call
orl
lea
addl
push
orl
mov
mov
addl
lea
sbbl
push
adcl
mov
lea
mov
subl
jmp
cmp
lret
mov
out
push
xchg
pop
push
cmp
xor
sbb
adc
mov
sbb
jnp
fcomps
int3
in
cmp
push
addr16
cli
or
leave
testl
pop
add
outsl
enter
push
pop
add
in
inc
adc
repz
add
push
out
sbb
aam
mov
push
cltd
leave
sub
push
jnp
and
push
jae
in
mov
adc
cmc
push
in
mov
dec
cmp
insb
test
pop
out
inc
mov
xor
xor
inc
roll
adc
movsb
sarl
test
popf
popf
out
mov
dec
out
out
sarl
enter
nop
cli
clc
sti
pop
lcall
push
scas
push
aaa
or
lods
dec
xchg
inc
sti
xor
sbb
loop
das
ja
inc
dec
dec
add
lcall
repz
mov
shlb
testl
insb
or
pop
lea
dec
jp
sub
add
adc
inc
stc
dec
adc
dec
cmpsb
inc
mov
ror
lcall
iret
js
xor
fmul
fcmovbe
mov
clc
dec
add
call
repnz
mov
adc
sub
sub
adc
or
and
inc
in
lds
stos
addr16
aad
xor
xor
cmp
scas
xchg
jle
xor
jmp
mov
imul
inc
fwait
xchg
fstpt
inc
fnstenv
or
inc
hlt
fs
jns,pt
jle
loope
and
mov
cmpsb
mov
outsb
pop
push
rorl
sub
pop
dec
pop
mov
outsl
das
adc
enter
add
aam
jno
xor
jle
mov
dec
and
ds
pop
add
adc
add
imul
jmp
gs
mov
ljmp
and
jae
test
mov
inc
les
test
sub
adc
sub
mov
jbe
repnz
push
dec
in
mov
adcl
jmp
and
fstl
jb
sahf
nop
gs
loop
mov
mov
ret
daa
jecxz
add
sbb
movsb
cli
mov
pop
sub
ss
or
jb
lds
inc
ret
rorl
fs
test
je
xchg
imul
mov
aam
repz
mov
dec
cmp
push
mov
je
xor
inc
clc
push
jmp
inc
mov
jbe
pminsw
xor
dec
cmp
iret
ss
push
push
in
dec
outsl
inc
outsl
fcmovb
out
ret
cmp
xor
pop
dec
xor
dec
mov
fsubl
and
lds
adc
call
test
mov
cmp
sbb
icebp
or
jge
fwait
mov
mov
xor
lds
inc
sub
jg
es
test
jg
fwait
xchg
push
leave
lods
test
add
leave
repz
aad
mov
not
lea
mov
pop
push
dec
push
xor
mov
lea
inc
fwait
mov
push
adc
in
sbb
and
sbb
mov
movl
push
pop
lods
fsts
and
stc
cli
ds
stos
inc
call
lods
rcl
popf
mov
and
scas
ljmp
adc
jle
lret
insl
lret
mov
daa
shrl
repz
add
jmp
les
lods
outsl
pushl
aam
xchg
sahf
inc
setne
xor
popa
movsb
aaa
fcoml
arpl
inc
xor
inc
pop
pop
lcall
inc
or
sarl
jae
subl
fst
fistps
add
or
push
push
cmpsb
mov
fs
jne
stos
scas
test
mov
pop
je
mov
shll
xchg
stc
sub
push
leave
pop
adc
push
push
pusha
loopne
sbb
in
lahf
pop
jp
movl
pop
pop
andl
int
sub
ljmp
add
aam
add
push
andl
call
andl
push
push
pushl
call
mov
mov
xor
mov
mov
cmpl
movl
mov
not
mov
jmp
movl
cmpl
jle
push
push
pushl
pushl
call
xor
andl
mov
and
adc
negl
mov
mov
sub
imul
shr
shl
cmpl
mov
movl
movl
jmp
mov
cmpl
ja
pushl
push
pushl
call
sbb
or
movl
and
adcl
xor
or
and
mov
xor
and
mov
lea
sbb
mov
jmp
or
scas
and
inc
lods
jecxz
push
lds
ret
xlat
push
in
xchg
xor
sub
sub
sbb
sub
insl
jb
cmpsl
push
inc
and
jbe
jns
out
jnp
mov
adc
addb
mov
repz
into
imul
ljmp
xor
movsl
jle
fs
jecxz
out
sub
cli
popa
jns
imul
inc
jnp
scas
sbb
cs
lods
pop
pop
push
pop
sub
push
mov
out
mov
leave
les
mov
push
in
mov
adc
lret
mov
cmp
ja
sti
cmp
xchg
and
imul
les
sbb
insl
arpl
mov
insl
call
push
movsb
push
pop
stc
mov
lcall
sub
inc
hlt
xor
test
mov
bound
cs
jnp
xchg
xor
dec
shlb
popa
in
lcall
mov
rep
jp
pop
sbb
xor
mov
not
ljmp
psubd
loop
pop
out
pusha
jmp
jbe
ds
cs
pop
adc
inc
dec
orl
enter
mov
cmp
repz
sti
ret
add
xor
nop
fs
loope
adc
pushf
or
filds
push
xchg
addl
lahf
shll
sub
add
adc
xchg
sbb
es
mov
inc
cmp
mulb
cltd
sbb
mov
add
out
out
mov
outsl
loope
aam
fs
xlat
mov
adc
xor
dec
dec
stc
leave
push
es
push
stos
xchg
pop
dec
cmp
or
popa
push
or
ljmp
mov
adc
sarb
push
dec
cmp
and
leave
pop
scas
inc
push
jle
aas
das
cld
subl
popf
add
push
lret
scas
dec
jp
push
test
int3
iret
xchg
mov
xchg
js
push
add
sbb
push
push
mov
push
lea
cmpl
movl
movl
movl
jmp
mov
movl
cmpl
je
push
push
call
mov
xor
or
sub
and
mov
adc
inc
and
adc
xor
or
mov
sub
xorl
cmpl
mov
mov
jmp
mov
cmpl
jg
push
push
call
or
adcl
not
sub
mov
mov
sub
sub
or
mov
mov
sub
or
mov
and
mov
sub
mov
sub
lea
cmpl
movl
mov
jmp
mov
mov
cmpl
jge
pushl
push
call
sub
addl
mov
sbb
mov
mov
mov
sub
add
mov
and
mov
not
xor
movl
cmpl
movl
mov
jmp
mov
cmpl
ja
push
push
call
and
not
or
sbb
xor
xor
adc
xorl
subl
jmp
inc
inc
in
xor
mov
test
mov
mov
sbb
lock
inc
cmpsb
lahf
inc
cmp
push
aaa
cli
and
pop
sahf
insb
lret
push
cmc
or
fists
xchg
or
in
mov
loopne
lahf
enter
fcompl
es
inc
cmc
orl
mov
or
in
xchg
and
adc
es
mov
xor
lods
cmpsl
cmpsb
xorl
inc
sbb
pop
mov
hlt
push
and
aad
add
inc
add
or
push
outsb
test
sti
jno
testl
loopne
outsb
test
lea
inc
sbb
mov
xchg
and
inc
pop
inc
inc
mov
movl
or
xor
lods
les
movb
repz
ss
jmp
dec
sub
cli
mov
iret
mov
and
ja
lahf
inc
pop
push
es
jns
push
push
shll
rcrb
pop
mov
mov
or
leave
lahf
mov
push
pop
scas
jmp
mov
popf
push
inc
cmc
sub
inc
imul
movsl
and
cmp
jae
cs
enter
or
push
push
adc
ret
je
xor
in
and
loopw
ret
xor
mov
sarb
sbbb
push
pop
icebp
rolb
icebp
roll
repnz
jl
mov
mov
fdivs
jp
push
js
lods
gs
mov
in
inc
push
sbb
call
in
aaa
dec
lret
mov
fisubrl
aas
js
cli
test
and
je
push
mov
adc
mov
popa
pop
cmp
xchg
inc
pop
mov
xchg
call
divl
incl
mov
sbb
ss
xor
adc
pop
repnz
mov
or
jb
adc
aas
add
test
sti
mov
inc
and
inc
inc
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
jmp
inc
pop
sti
daa
sti
mov
mov
jecxz
out
sarb
xchg
imul
pop
mov
xchg
ret
adc
push
ja
scas
out
xchg
or
cmpsl
xor
in
xor
or
loope
xor
bound
sub
fdivs
test
sti
in
lahf
or
inc
clc
mov
inc
or
pusha
push
or
xchg
and
out
mov
push
mov
jb
push
mov
jo
or
fidivrl
inc
cmpsb
push
mov
xchg
sarb
outsl
inc
testl
jecxz
cmp
pop
and
pop
loop
and
aad
mov
add
ja
loope
rorl
out
lcall
arpl
fbld
stos
jmp
fdivrs
cmp
cs
scas
jp
inc
xor
idiv
mov
jns
sub
sbb
mov
in
scas
inc
lret
pushl
pop
andb
repnz
das
bnd
dec
insb
loopne
nop
ljmp
jnp
outsb
in
fnsave
das
and
inc
cmp
in
cltd
xchg
add
fistpll
sub
icebp
dec
mov
or
push
das
je
lret
push
fidivl
jmp
cwtl
jmp
lcall
pop
fs
sbb
mov
pop
aaa
jl
dec
aam
mov
ljmp
stos
add
roll
pusha
dec
sbb
ja
mov
cmp
and
les
negb
test
scas
movsb
movsl
bswap
xor
ret
es
loope
or
es
addr16
sub
adcl
mov
dec
scas
test
mov
in
push
mov
and
inc
dec
xchg
movsl
pop
repnz
out
push
add
lret
decb
mov
cmp
and
mov
mov
xor
enter
mov
in
or
jns
insl
fimuls
sbb
xor
movsb
add
enter
and
rcr
jle
negb
fsubs
in
jecxz
mov
shl
pop
loopne
push
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ljmp
adc
fstl
sarb
xor
push
adcl
sub
daa
mov
mov
pop
sub
lock
jne
add
dec
xchg
inc
pushl
xchg
xor
test
gs
pop
adc
jae
mov
adc
into
mov
sub
pushf
clc
push
in
sbb
lea
incl
adc
xchg
outsb
inc
inc
push
std
in
and
or
mov
inc
subl
mov
cmc
adc
pop
mov
cmp
out
lcall
imul
xlat
inc
push
xor
adc
jmp
mov
and
add
clc
mov
inc
xlat
out
out
imul
push
lods
ret
xchg
neg
xor
loop
ret
add
xor
jbe
movsb
jbe
in
sbb
repz
pop
cmpsw
ror
scas
xor
push
out
pop
out
shlb
cmp
data16
stos
xlat
mov
or
leave
adc
mov
cmp
repz
addl
mov
lahf
mov
js
sbb
mov
mov
pop
mov
test
in
loopne
arpl
push
xor
or
mov
jae
incl
mov
mov
push
xor
jle
ret
arpl
hlt
jl
sub
jg
and
popa
xor
ljmp
add
lds
dec
dec
inc
cs
out
mov
inc
jns
hlt
arpl
cmp
mov
adc
inc
cmpsb
lcall
insb
sbb
push
aas
jbe
neg
pushf
outsl
cli
cwtl
sub
in
stos
push
fdivs
mov
pop
popa
int3
inc
adc
ja
insl
jo
adc
push
push
cmp
ret
test
in
fcmovnbe
xchg
cmpl
xorl
mov
jge
mov
lret
push
xchg
jle
mov
cmp
punpckhwd
jno
add
popf
sbb
dec
dec
jge
add
inc
and
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
jp
cld
dec
cmp
jp
js
push
sahf
mov
test
mov
stos
cld
loope
dec
mov
notb
test
aaa
dec
adc
lds
pushw
xchg
in
in
sbb
mov
jl
out
cli
cmp
and
lret
jbe
adc
push
adc
sub
arpl
lods
lods
movsl
mov
iret
pusha
and
data16
mov
add
sti
pusha
add
enter
in
pop
adc
mov
fisttpl
adc
ja
mov
and
dec
xor
out
sub
stc
mov
lock
hlt
jbe
imull
pop
ret
mov
sbb
in
ds
movsb
lahf
out
mov
mov
stos
pop
adc
gs
lds
sti
sub
les
jmp
fcmovb
jg
sbb
jbe
andb
lret
sub
cli
cmp
push
cmp
test
sarb
mov
xchg
inc
jmp
loopne
ror
lods
shrl
mov
shlb
pop
ljmp
gs
pop
aam
mov
adc
insb
shrb
mov
daa
and
push
push
dec
int
cmp
push
in
inc
xchg
lahf
in
mov
inc
insl
and
inc
clc
add
dec
pop
jne,pn
mov
xchg
mov
ret
push
call
mov
je
cltd
and
sub
cmp
sqrtps
movsb
cmp
ljmp
mov
ljmp
cs
sahf
pushf
ds
jbe
sarb
ljmp
inc
arpl
fs
bound
mov
cmp
frstor
pop
pop
test
je
scas
mov
cmp
lods
sub
inc
aad
inc
imul
ret
sub
cmp
movsl
jge
jp
dec
jmp
in
mov
push
cltd
xchg
sahf
fistpl
out
out
std
mov
push
xchg
stos
jb
iret
xchg
in
or
jge
xchg
mov
cmpsb
out
xorb
cmp
loope
sbb
cmp
out
push
lds
push
push
push
call
mov
mov
add
mov
adc
jmp
ljmp
mov
cmc
mov
fldl
mov
sahf
test
insb
jnp
mov
pop
in
dec
out
and
scas
mov
test
xchg
frstor
int
adc
adc
and
in
rorb
stos
push
sbb
icebp
rcr
cmp
lods
in
movsb
jb
es
jne
or
in
cmpsb
pop
mov
mov
insb
inc
ds
gs
lret
mov
mov
aas
add
mov
mov
push
inc
xor
das
cmp
std
int3
cmpsb
popf
mov
adc
cltd
push
dec
lea
sub
fmuls
jne
push
lods
add
pop
inc
ss
lds
addb
loop
repnz
xor
mov
test
dec
xor
xor
icebp
mov
sub
imul
test
xor
xchg
xor
stc
fsubl
add
out
mov
in
push
incb
jne
out
pop
fs
fisubrs
pop
inc
and
dec
mov
movsb
loopne
shll
es
lock
ret
or
jecxz
lock
jge
dec
mov
adc
fcmove
fdivrl
inc
xchg
jg
sbb
jecxz
dec
call
mov
int
pop
stos
movsb
cwtl
bnd
adc
dec
xor
sub
adc
xchg
push
xchg
mov
lods
lock
add
jl
sti
negl
out
xchg
sti
aaa
in
loop
jge
fmuls
stos
movsb
sahf
mov
sbb
out
es
jg
mov
in
xchg
jne
es
test
pop
sub
cli
cmp
ds
xchg
mov
ret
mov
stos
lcall
inc
std
or
push
mov
or
jne
gs
or
les
outsl
mov
xchg
mov
lahf
cwtl
lea
ss
inc
pushf
push
popf
ret
and
adc
cmpsb
dec
push
clc
mov
cld
lods
sub
shlb
test
mov
xor
and
sbb
mov
insl
cmc
jae
insl
dec
adc
xor
jl
mov
cmp
jne
cmp
je
mov
mov
xor
shld
jmp
lret
repnz
xchg
xor
add
inc
mov
aaa
add
mov
cmc
sbb
or
jo
mov
jp
pushw
xor
inc
cwtl
dec
lock
mov
fs
xor
loope
es
jbe
mov
inc
cmp
push
clc
mov
add
aaa
xchg
pop
mov
divl
cmc
push
icebp
or
inc
insl
out
hlt
mov
cmp
lret
sub
jne
aad
int
xor
test
pop
mov
sbb
sbb
scas
movsb
test
in
imul
adc
mov
out
into
adc
stc
and
adc
out
sbb
out
push
shll
xchg
xor
imul
dec
outsl
rcrb
pusha
inc
loope
sbb
xor
loopne
iret
push
mov
gs
cwtl
repz
into
lret
mov
sarl
pop
dec
fdivr
mov
mov
mov
push
ret
movsb
and
adc
add
add
mov
or
xchg
adc
mov
xlat
aaa
adc
stos
mov
cltd
sub
lods
and
imul
xor
adc
mov
outsl
and
inc
pop
fbstp
cltd
sbb
add
andl
lret
cli
cmp
sbb
or
inc
xor
int3
and
xlat
jle
aam
mov
pop
pop
mov
aam
mov
insb
xchg
movsb
dec
stos
sti
repz
add
pop
and
nop
push
insl
xorl
stos
mov
push
cwtl
push
cld
and
into
adc
call
sub
insl
jbe
jmp
dec
dec
mov
or
and
cld
shrl
xchg
mov
jmp
mov
sub
add
sub
dec
packssdw
fwait
sub
mov
adc
mov
call
pop
stos
outsl
fstpl
outsl
jns
jns
add
mov
xor
push
adc
mov
and
push
aam
pop
adcl
sbb
mov
lea
pop
and
and
cltd
cmp
cmc
pop
shll
stc
inc
subl
inc
pushf
lea
call
inc
jl
fdivrl
dec
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
gs
decb
sbb
mov
inc
ret
fstl
xor
fldl
or
xchg
push
into
shl
gs
xor
inc
pop
mov
in
jae
mov
les
dec
xchg
xchg
test
jnp
ljmp
aad
imul
sbb
jmp
les
ja
shll
mov
in
movsb
mov
sub
adc
fnstcw
enter
mov
js
pop
xorb
sahf
loopne
xor
cmp
clc
daa
xchg
pop
jae
das
hlt
pop
sbb
push
inc
movsb
lcall
fsubrl
testl
loopne
aam
sub
pop
adc
sbb
adc
push
or
idivl
add
cli
xor
mov
fcompl
mov
sbb
cltd
enter
push
sub
shlb
pop
and
addr16
adc
xor
mov
pop
popf
mov
mov
out
or
mov
cmpsl
inc
ret
add
dec
movsb
push
and
test
daa
test
rcrl
ja
je
stos
inc
aas
mov
out
aam
rcrb
rep
aad
pop
testl
sub
push
loopne
cld
in
push
negl
int
cmpsl
jge
mov
addr16
lret
es
out
cmc
pushf
jae
mov
add
sbb
out
pop
pop
xchg
daa
scas
pusha
push
and
mov
mov
jo
adc
leave
push
lret
mov
bound
sbb
sub
lea
aad
dec
incl
push
mov
mov
jae
ret
jbe
cmpsb
pushf
leave
or
andb
in
in
outsl
xor
xchg
out
sbb
mov
add
inc
sub
add
mov
mov
xlat
mov
cmp
insb
jnp
sub
mov
pop
ja
pop
out
inc
addr16
aam
adc
mov
or
mov
mov
lods
sub
fmull
call
fld
scas
mov
lock
mov
push
inc
xchg
lret
or
data16
in
xor
mov
fidivrl
mov
lret
and
add
lret
push
and
sub
mov
sub
mov
cmp
jbe
mov
jmp
xchg
sub
jae
mov
jo
mov
or
mov
push
cwtl
and
mov
sbb
and
push
push
mov
loopne
sub
xor
stos
repnz
jmp
pop
test
push
or
mov
mov
shl
fidivl
add
jb
sub
push
xor
mov
loop
add
push
out
or
inc
sbb
nop
mov
movsl
inc
mov
cmp
cmpsl
movsl
xchg
mov
jmp
sbb
loope
test
ljmp
mov
mov
and
adcl
sbb
shrl
stc
dec
mov
rcl
jl
xor
imul
shrb
ljmpw
pop
add
insl
xchg
sbb
stos
or
cmpsl
rcll
xor
shrb
call
out
leave
sbb
ljmp
jecxz
cmp
jg
leave
add
xor
or
add
mov
inc
pusha
xorb
aam
enter
aad
or
cmp
shl
aaa
push
inc
sbb
pop
ret
inc
subb
sbb
cmp
cmp
xor
popf
mov
mov
mov
repz
pop
sti
pop
in
ret
push
mov
xor
lods
jge
jle
in
xor
ja
mov
and
adc
and
sahf
jge
cwtl
outsl
pop
fwait
sub
subl
mov
fcmovb
sbb
xor
std
notb
stos
jmp
pushf
or
lcall
lret
or
popa
lret
fidivl
mov
inc
in
stos
cmpsb
pop
xchg
adcb
fwait
call
or
and
sub
xor
aas
lods
pop
testb
xchg
sbb
cmc
loopne
in
mov
fs
mov
shrb
lea
imul
jo
mov
xor
and
flds
cmc
fidivl
fidivl
cmp
mov
mov
mov
movzwl
mov
or
mov
sub
jmp
loop
push
xchg
je
and
inc
cmp
frstor
mov
mov
push
cmpsl
xor
dec
adc
dec
in
ret
fsubr
mov
xor
push
sti
mov
xorl
lock
mov
loopne
ja
cli
test
pushf
lcall
xor
or
lahf
mov
jb
pop
jl
cmc
pop
bound
mov
and
add
push
sbb
lahf
pusha
imul
and
dec
and
into
push
xorl
sbb
into
or
jnp
sub
aam
adc
inc
add
jae
mov
jge
ja
mov
enter
mov
mov
ja
cld
jge
push
cltd
mov
fsubrl
xlat
outsl
ds
cmp
jecxz
dec
xchg
jle
das
cmpsb
sub
mov
push
jae
es
dec
into
mov
jge
repz
scas
jmp
or
jo
fstps
mov
add
cmp
cs
push
sbb
jbe
jo
pusha
ret
into
int3
sbb
mov
xchg
cmp
dec
xchg
testb
mov
lea
jmp
jae
pop
dec
cld
mov
jmp
mov
pslld
scas
shll
xor
inc
push
test
aam
sbb
insl
daa
fs
push
scas
push
adc
scas
jno
or
dec
divl
mov
jbe
outsb
push
bound
xchg
inc
or
pop
test
fs
mov
and
mov
stos
mov
jo
adc
cmp
xor
out
jb
pop
aad
mov
mov
ds
dec
imul
lods
cmpsb
sub
jl
mov
dec
popa
in
pop
out
ja
sub
pop
std
aam
pop
inc
repnz
and
sub
push
jne
xchg
sbb
outsl
loop
stc
fcomps
jbe
jecxz
int3
push
fwait
and
or
enter
xorl
or
inc
rorb
arpl
xchg
mov
inc
or
ltr
hlt
les
aas
fdivrs
push
mov
lahf
mov
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
jmp
jge
into
movsb
mov
iret
inc
jecxz
movsb
pushf
adc
mov
or
xchg
or
aas
in
xchg
ret
dec
out
lret
lcall
ror
lcall
shlb
sub
mov
ljmp
or
fnstenv
lret
sub
jns
ficompl
sub
mov
dec
das
or
adc
pop
insl
cmp
mov
add
loop
sub
add
mov
cmc
cmpsb
pop
pop
rcr
cwtl
shrl
push
or
xchg
and
aam
mov
fsubrp
xor
mov
mov
lret
adc
xor
and
popa
cmc
andb
add
imull
aad
or
xchg
mov
ret
mov
insl
push
adc
aas
mov
es
fneni(8087
mov
mov
leave
adc
pop
sbb
push
fdivp
and
loope
aas
lret
imul
dec
mov
mov
jge
inc
test
cmp
pop
sub
popf
stos
fldenv
test
mov
sub
je
pop
sbb
adc
mov
inc
adc
pop
ljmp
lock
pop
dec
insb
loope
sub
rorb
test
fwait
sbbl
fidivl
sarb
lods
ljmp
andl
int3
jl
push
test
xchg
jo
and
cltd
loop
mov
mov
jnp
dec
inc
inc
and
push
stc
hlt
push
ss
lret
and
xor
lods
add
jle
jge
pop
mov
mov
lcall
xchg
mov
inc
jb
pop
mov
add
jge
into
mov
add
std
repz
loop
push
xor
sbb
pusha
stos
mov
push
rorl
xchg
xor
pop
bound
into
addr16
mov
xor
dec
mov
inc
adc
cmpsl
negl
in
jecxz
and
aaa
xchg
add
jmp
push
in
push
jmp
insl
adc
push
aad
aad
cli
aam
in
outsl
pop
popa
xchg
fsts
mov
nop
inc
test
outsb
je
jmp
loop
jno
cli
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
jmp
add
cmp
loopne
inc
fnsave
push
sahf
adc
sarb
dec
inc
mov
out
push
stos
test
or
stos
and
ja
push
xchg
pop
inc
lds
fsubrl
jecxz
push
rorb
cmp
and
add
mov
ljmp
jns
fs
push
orb
popf
in
xor
mov
xor
mov
ja
int3
or
dec
fsubl
mov
xchg
mov
mov
dec
jb
mov
and
cwtl
pop
adcl
cmc
sub
xor
imul
mov
std
jns
ror
xor
pusha
add
cltd
scas
lds
mov
mov
push
jb
mov
jecxz
or
inc
adc
cmpsl
dec
adc
dec
cmp
inc
pop
enter
mov
test
arpl
xor
mov
sub
ret
cmp
mov
call
jecxz
inc
das
movsb
push
sub
lock
repnz
push
or
ss
xlat
mov
jbe
lcall
add
sti
jb
mov
sti
insl
fdivrl
cmp
in
mull
repz
add
adc
sub
inc
jo
xor
xchg
sbb
sbb
jp
gs
push
and
push
jle
cli
les
dec
fldt
mov
xchg
dec
dec
cli
in
jb
or
dec
out
arpl
jnp
jnp
xor
imul
add
addl
inc
jg
jns
stos
fsts
movsl
push
mov
std
push
repnz
sbb
dec
mov
out
pop
popf
sub
mov
and
fiadds
mov
push
mov
inc
xor
sub
mov
dec
jbe
xor
insb
jecxz
jnp
negl
loop
push
and
int
push
addr16
js
pusha
je
add
and
aas
test
popa
pop
push
jmp
xchg
jl
je
mov
insl
insb
sahf
or
adc
sarl
xchg
pop
shrd
xor
mov
shr
mov
xor
jmp
scas
xchg
mov
mov
pop
rcll
push
sahf
mov
sarb
add
add
loope
int
jo
loop
cmp
pop
imul
mov
pop
inc
cld
cmp
bound
inc
mov
jle
fstpt
inc
je
mov
mov
movsl
dec
nop
pop
cmp
mov
sbb
cwtl
lock
mov
imul
mov
cmp
push
jge
xor
fimull
mov
fs
add
mov
out
aam
daa
inc
das
jp
dec
or
test
xchg
frstor
cmc
rcl
inc
xor
std
jnp
dec
add
push
int
jne
cmc
xchg
neg
lcall
add
dec
lcallw
shl
and
lret
cmpsl
inc
xor
fcomps
sbbb
into
dec
test
out
push
movsb
jmp
pop
xchg
sub
or
fldt
sbb
xlat
cmpsb
vpaddb
lds
jo
insb
gs
into
xchg
xor
adc
adc
mov
movsb
xor
inc
testl
imul
sbb
iret
dec
inc
mov
in
out
data16
aas
mov
and
testl
adc
mov
xor
loop
mov
mov
push
popf
cld
rorl
mov
xchg
jl
and
loope
sub
addr16
sub
adc
test
cmc
clc
mov
nop
outsl
dec
adc
roll
popf
xchg
pop
jne
mov
jmp
dec
mov
push
and
or
stos
int3
sti
add
in
repz
sbb
ret
paddq
fsubrl
push
stc
cvtps2pd
dec
cmp
sbb
and
or
cli
loop
inc
punpckhwd
push
pop
cli
movsl
fldenv
movlhps
outsl
pop
rcrl
xor
outsb
popa
xchg
push
clc
adc
std
loop
cmpsb
push
iret
insl
jno
pop
repz
dec
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
repz
mov
shl
iret
pop
inc
inc
fldl
sarb
ffree
mov
daa
hlt
ja
imull
xor
fsubrl
inc
mov
add
mov
mov
insl
mov
ja
push
xlat
loopne
mov
mov
test
repz
cltd
inc
mov
or
das
loop
je
or
insb
mov
xchg
imul
into
cli
xlat
mov
ja
andb
sbb
sbb
push
push
or
fisubrl
iret
cmp
fwait
lret
adc
and
adc
xchg
xchg
sbb
ret
adc
ret
in
add
push
aas
pop
jae
add
adc
and
dec
or
icebp
das
xorb
fldenv
inc
lods
and
cli
cs
lea
cmpsl
int
jle
pop
lods
adc
xchg
jns
lret
sub
pop
repnz
outsb
cli
gs
xchg
shll
scas
das
fisttpll
jmp
mov
into
ljmp
adc
test
fistps
xchg
xchg
jmp
test
call
mov
bound
test
pop
sub
adc
repnz
insb
mov
and
pop
sbb
mov
cmp
dec
jecxz
sub
andl
ljmp
adc
loopne
xlat
pop
pop
xlat
lods
movl
xchg
ja
sti
jno
mov
dec
je
push
scas
pop
inc
aam
cld
dec
sti
push
outsb
or
mov
xor
xchg
dec
mov
sbb
fdivl
xor
sahf
mov
mov
lock
pop
push
imul
xchg
in
icebp
icebp
push
dec
mov
loop
addb
dec
pop
stos
jbe
cmpps
mov
adc
jp
jge
loop
xchg
ss
xor
es
sarl
or
out
mov
data16
shl
mov
mov
icebp
dec
leave
loopne
call
fadd
inc
cld
repnz
dec
sbbb
pop
adc
and
xchg
push
sbb
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
cs
jne
js
mov
xchg
sub
jl
sarb
push
movsl
fisubrl
movsl
sbb
cmc
adc
test
ret
mov
je
mov
or
add
into
bound
int3
scas
imul
inc
push
inc
push
inc
mov
cwtl
into
fiaddl
xlat
xchg
mov
pusha
inc
add
int3
mov
sub
adc
and
xor
fwait
ja
sub
push
cmp
arpl
test
popf
lcall
out
adc
das
xchg
mov
test
adcb
test
fistpll
or
pop
mov
dec
jle
push
add
out
test
cmpsb
or
sbb
dec
jae
pop
dec
popa
adc
sbb
push
pop
ds
fimull
push
sbb
movsl
xor
inc
lret
mov
cld
cld
lock
push
ja
jns
int
or
dec
scas
add
in
pusha
mov
es
loop
call
enter
jecxz
outsl
pop
jp
es
mov
dec
shll
or
ljmp
shlb
decl
pop
call
aam
ds
adc
fs
jmp
mov
mov
mov
xchg
repz
fildll
jecxz
les
xor
dec
sub
mov
decl
cmp
mov
and
loopne
cwtl
or
rcl
icebp
jmp
movsl
adc
out
rorb
aam
or
jb
mov
mov
adc
shlb
pop
sbb
notb
enter
adc
div
js
cmp
sahf
mov
push
outsb
cld
addr16
pop
mov
call
cmpsb
sti
adc
or
in
leave
iret
jae
sub
movsl
sarl
aad
fstpt
xor
aad
mov
popa
dec
sahf
jno
pop
mov
out
shlb
or
add
sar
repnz
stc
mov
outsl
inc
jp
and
in
lret
sti
xor
movsb
dec
mov
inc
push
jmp
adc
loope
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
jmp
add
adc
sub
mov
sarb
pop
lret
shl
xchg
sbb
fwait
out
nop
outsl
cltd
or
data16
pop
add
pop
loopne
xchg
fsubs
cmp
add
pop
fwait
cmp
mov
push
out
mov
pop
add
sbb
adc
and
int3
push
in
ficoms
scas
mov
in
outsb
xchg
adc
sub
ja
xor
adc
lahf
mov
jecxz
jge
pop
call
ds
sbb
mov
stos
outsb
sbb
ret
mov
dec
cmp
arpl
and
adcl
pop
ret
dec
sbb
aas
adc
fs
imul
fstl
rol
rorb
or
mov
cmp
call
lret
mov
xchg
ss
push
adc
sbb
jnp
lret
lcall
imul
outsl
sub
mov
enter
jo
ds
sarb
cmpsb
sub
stos
in
xor
xor
fstpl
sahf
pop
push
gs
sbbl
testl
push
dec
mov
test
mov
push
cld
sub
sbb
daa
lcall
into
popf
jl
mov
aas
lcall
popa
bound
aam
or
test
ret
arpl
sbb
xor
xor
negb
loopne
sti
ja
xchg
aad
inc
cmpsb
dec
roll
fadds
out
xor
xchg
iret
aam
xchg
cmp
sub
add
push
xchg
stc
fnstsw
add
push
pop
bound
xor
push
rorb
mov
mov
mov
add
xchg
inc
in
dec
inc
jnp
cld
es
dec
xchg
push
mov
outsl
leave
push
push
loopne
pusha
sbbb
pusha
and
mov
or
aas
cmp
notb
mov
cmp
inc
fdivrl
push
in
xor
cld
dec
pop
jnp
int
xchg
into
aam
insl
rcl
add
inc
ret
add
and
jmp
xor
frstor
test
xchg
jecxz
movsb
imul
mov
xor
jg
inc
and
das
call
pop
sbb
adc
xor
or
pop
jp
out
ret
lock
inc
adc
imul
xchg
lods
loop
xor
ljmp
add
push
iret
push
lea
outsb
xlat
sbb
sarl
and
ljmp
sub
cltd
jne
lea
aaa
pop
pop
cmove
mov
sti
daa
pop
and
leave
mov
int3
jo
jns
sarb
mov
and
aas
jge
cld
mov
dec
xor
outsl
imul
pushf
cld
std
dec
aad
int3
jnp
xchg
add
loope
aam
add
mov
mov
adc
or
inc
cli
cs
jge
js
xor
mov
inc
mov
xchg
jg
cmp
popf
dec
scas
ret
xchg
ds
test
fwait
cmc
xchg
mov
pop
mov
push
dec
adc
outsl
sahf
add
xor
scas
sub
mov
jle
lods
sub
xchg
push
out
ret
ja
stc
out
mov
jmp
hlt
mov
xchg
jecxz
mov
loop
inc
push
setno
aad
inc
dec
test
scas
push
push
add
stos
in
pop
stos
movsl
or
out
mov
lods
cltd
dec
nop
inc
push
pop
mov
cs
sbb
mov
out
aaa
mov
bound
dec
popa
test
or
mov
mov
ds
dec
push
or
imul
and
xor
fcomip
mov
cmp
push
cmp
dec
add
xchg
sub
jnp
mov
mov
mov
stos
push
lahf
jo
fsts
outsl
add
in
cmpsl
dec
rcrl
sti
xchg
mov
movsl
add
inc
mov
mov
test
cmpl
mov
rclb
clc
mov
loopne
cli
push
insl
stos
or
int
jp
enter
xchg
je
out
mov
gs
push
or
mov
aam
inc
xor
cmpl
mov
push
mov
inc
sub
and
mov
movl
mov
jmp
sub
ljmp
in
xchg
xorb
mov
pop
xchg
repnz
in
jnp
push
loopne
jmp
fsubrs
push
rcrb
dec
jle
xchg
jp
testb
mov
das
cmp
sub
hlt
jl
fists
mov
out
xor
out
xchg
daa
movsb
push
or
xchg
insl
xor
pop
lret
xchg
loopne
movsb
xlat
xchg
sub
and
cli
movsb
clc
pop
imul
cmovge
popf
sbb
add
dec
into
idiv
inc
mov
lock
lret
shrb
sbb
jl
stos
pop
mov
fcmove
stc
pop
icebp
in
out
insb
jne
mov
ds
xchg
xchg
xchg
pop
mov
cld
dec
leave
scas
add
push
and
jo
push
js
mov
pushf
mov
xchg
push
arpl
iret
cmp
pop
mov
mov
popf
in
push
ficoms
push
fstpt
and
arpl
and
push
clc
movsb
lock
add
xchg
sahf
mov
dec
gs
sbb
inc
pop
fs
fstl
bound
or
outsb
mov
ss
inc
cmp
mov
mov
int
mov
iret
cli
jno,pt
or
push
loope
cmpsl
insl
add
fs
push
push
imul
test
xchg
cli
jae
inc
dec
ficomps
dec
inc
push
stos
rcr
lock
push
dec
push
fcmovne
or
push
jmp
sub
jg
jmp
int3
mov
fs
stos
ds
xchg
leave
mov
test
test
sub
push
inc
and
sbb
xchg
cmpsl
call
pop
ret
lcall
sub
inc
daa
mov
rclb
insb
ljmp
loop
xor
adc
aas
gs
jg
mov
mov
jp
push
pop
xchg
out
sub
std
cli
pop
gs
clc
jns
push
push
ss
mov
mov
cmp
xchg
push
orl
lcall
add
lds
push
js
xchg
lret
mov
cli
mov
cwtl
mov
sbb
push
push
and
mov
dec
and
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
repz
lea
jnp
mov
lods
dec
xchg
xchg
cmpsb
xlat
jecxz
xor
mov
xchg
in
loope
imul
mov
jns
js
mov
sbb
inc
push
out
jbe
mov
jg
mov
xchg
jge
les
test
jmp
pop
adc
or
rcr
cwtl
lcall
and
ljmp
push
inc
pop
mov
aaa
imul
jge
test
mov
outsb
push
jae
xor
cmpsb
pop
mov
adc
stc
les
sub
and
lea
xor
inc
lds
sahf
or
dec
lock
xchg
mov
cmp
adc
jecxz
push
fdivs
jg
cmpsb
push
rolb
mov
pusha
testl
xor
movsl
scas
shr
mov
fwait
adc
mov
add
icebp
xor
movsl
inc
pop
test
mulb
mov
repz
std
mov
sbb
movsb
sbb
sti
jecxz
fs
push
jnp
push
stc
and
xchg
leave
pop
pushf
mov
mov
push
iret
aaa
cmp
stos
mov
aad
dec
fdivrp
pop
push
sbb
out
and
jl
pop
rcrb
or
push
inc
mov
aaa
pop
pop
stos
iret
ret
push
out
xchg
adc
cmp
push
sub
mov
fcomps
dec
pop
xor
inc
ljmp
push
jg
inc
lods
jg
into
aad
push
movsl
mov
ss
mov
sub
xor
inc
jne
rcrl
arpl
in
dec
sub
pop
loopne
cmp
sbb
and
xchg
jl
cmp
inc
lods
mov
addr16
fcoml
add
addr16
rcrb
into
dec
mov
sub
pop
out
loope
push
push
leave
divps
pop
cmp
sub
and
and
jg
movsbl
xchg
add
int3
ret
mov
pop
and
cmpsb
aad
add
jecxz
xlat
shlb
rcll
lods
ret
leave
jg
mov
clc
bound
mov
pop
jb
pop
pop
add
in
fistpl
scas
fwait
push
movsl
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
cmpl
movl
mov
mov
not
jmp
mov
cmpl
jge
push
pushl
push
pushl
pushl
call
neg
movzwl
sbb
mov
and
xor
or
or
adc
xor
movzbl
or
push
push
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
pushl
push
pushl
push
call
xor
movzbl
or
mov
add
adc
addl
decl
movl
cmpl
not
movl
jmp
movl
mov
cmpl
jl
pushl
call
adc
sbbl
and
and
orl
sbb
subl
movl
xorl
movl
mov
mov
xor
div
cmpl
movl
movl
movl
jmp
mov
movzwl
cmpl
jle
push
push
push
call
xor
movzbl
sub
mov
adc
adc
and
or
mov
mov
sub
imul
sub
mov
addl
xor
adc
and
sbb
mov
subl
xor
div
sbb
sub
mov
sub
mov
movl
movl
cmpl
movl
movzwl
jmp
not
mov
cmpl
jne
push
call
movzwl
xor
and
sub
mov
xor
mov
andl
adc
movl
adc
mov
and
add
xor
add
xor
add
imul
mov
cmpl
mov
mov
jmp
mov
cmpl
ja
pushl
push
push
push
push
call
inc
mov
sbb
or
and
sub
and
adcl
sub
mov
mov
sub
add
mov
movl
movl
movl
sbb
movl
cmpl
movl
mov
movl
jmp
mov
movl
cmpl
jge
pushl
call
adc
add
sbb
andl
and
mov
imul
xor
mov
mov
or
mov
imul
xorl
imul
mov
and
or
orl
mov
xor
andl
mov
orl
mov
orl
lea
mov
add
movl
movl
sub
movl
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
call
sub
xor
sbb
movzbl
adc
addl
sbbl
mov
xor
cmpl
mov
mov
jmp
movl
cmpl
jl
push
push
pushl
pushl
call
sub
sub
sbbl
sub
mov
adc
mov
adcl
movl
neg
mov
addl
or
xor
add
sub
mov
or
cmpl
mov
movl
jmp
movl
cmpl
jne
push
push
push
call
andl
sub
add
mov
xor
sbb
cmpl
mov
mov
mov
mov
jmp
not
cmpl
jne
push
push
push
push
call
or
negl
movzwl
sbb
orl
add
cmpl
movl
mov
mov
jmp
not
cmpl
jbe
push
push
push
call
movzbl
adc
sbb
sbb
adc
mov
sub
add
xor
sbbl
mov
movl
subl
movl
or
movl
cmpl
mov
movl
jmp
mov
cmpl
jb
push
pushl
call
add
movzbl
add
sub
xor
add
or
add
mov
add
sbb
mov
sub
mov
xorl
lea
or
cmpl
movl
movl
mov
jmp
movl
not
cmpl
jbe
push
call
mov
sub
mov
sbb
mov
movzbl
or
sbb
neg
mov
xor
mov
sub
sbb
mov
xor
movl
movl
inc
mov
movzbl
sub
mov
add
sbb
imul
add
mov
imul
xor
adcl
mov
div
sub
sbb
mov
xor
add
sbb
mov
movl
xor
or
xor
mov
movl
or
movl
and
mov
and
mov
xor
addl
div
imul
cmpl
movl
movzwl
mov
jmp
movl
cmpl
jge
pushl
call
sbb
xor
xor
sub
and
xor
xor
xor
orl
xor
adc
add
mov
addl
xor
mov
and
mov
xor
notl
mov
div
jmp
xchg
dec
in
movsb
lods
stos
test
xchg
aam
sarb
mov
popa
iret
xor
push
pavgw
mov
ror
call
ret
push
xchg
push
lds
pop
inc
into
cltd
xor
mov
enter
idiv
inc
push
mov
xchg
decl
lret
sbb
xor
pop
out
roll
pop
addb
xor
pop
or
outsl
rolb
js
fstpt
lds
sub
aaa
sbbb
enter
and
pop
mov
dec
scas
mov
stos
shrb
adc
dec
gs
lahf
or
rolb
imul
push
pop
cmp
and
and
cwtl
push
in
cmpb
inc
sub
jae
sub
push
push
mov
inc
adc
cmp
dec
ljmp
and
xor
fmull
movsl
push
inc
andb
inc
out
xchg
jb
pushf
sbb
das
int3
mov
mov
scas
xlat
push
pop
aas
sarl
inc
and
inc
test
call
sub
jae
jp
pop
gs
xor
jp
loope
fcmovne
mov
xorb
push
jbe
cli
add
mov
movsl
fisubl
mov
das
jmp
push
rcrb
fisubrs
lret
push
sbb
cmc
shrl
push
cs
hlt
je
imul
test
inc
adc
popa
mov
jno
stc
adc
rcl
out
mov
add
lret
lcall
mov
testb
into
leave
xchg
jne
ds
aaa
jo
cmp
pop
out
xchg
addr16
scas
jb
xor
test
ja
adc
jp
test
xchg
bound
dec
mov
insb
jne
out
ljmp
xchg
or
sbbb
mov
loopne
out
mov
ret
xor
andl
mov
push
cmp
shrb
dec
pop
repz
dec
mov
in
adc
jmp
bound
incl
sbb
mulb
inc
add
pop
mov
das
push
fstpt
cmp
jg
pop
je
adcb
inc
rol
daa
movsl
movsb
cmp
jg
cmp
xchg
add
mov
out
mov
mov
and
daa
push
mov
mov
or
subl
pop
pop
stos
cmpl
dec
shrb
mov
cltd
das
imul
add
cld
cmp
or
pusha
nop
inc
fisttps
and
jl
push
dec
mov
cmp
push
add
imul
sti
mov
mov
lods
dec
adc
mov
les
inc
cmp
aaa
addb
pop
hlt
in
sti
into
push
push
mov
dec
push
sbb
bound
adc
adc
mov
and
out
nop
icebp
xchg
ljmp
cmp
out
xchg
or
sub
fs
adc
lea
lahf
mov
stos
nop
lret
shlb
test
sti
clc
scas
addr16
cmp
mov
negb
inc
pop
addr16
and
stos
add
add
sub
jge
inc
xor
int3
dec
scas
xlat
cmpsl
cmpb
fcomp
sub
dec
stos
cld
inc
movsl
fistps
xor
jbe
subb
mov
add
xchg
test
movl
movl
movl
sbb
mov
adcl
mov
sub
and
shr
cmpl
movl
movl
movl
jmp
mov
cmpl
jge
pushl
pushl
pushl
call
and
subl
andl
or
sbbl
cmpl
movl
movl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
pushl
pushl
pushl
push
pushl
call
add
notl
adcl
addl
add
sub
sub
mov
xorl
imul
mov
add
mov
and
cmpl
movl
movl
movl
jmp
movl
not
cmpl
jg
push
pushl
pushl
call
andl
add
xor
sbbl
movl
add
jmp
sub
sbb
pop
and
mov
adc
dec
les
mov
dec
data16
int
lcall
leave
in
scas
cwtl
sbb
sahf
fisttpl
scas
mul
mov
xchg
xchg
xchg
xchg
in
mov
loopne
fisubl
movsl
ljmp
mov
jnp
add
imul
and
out
nop
push
stos
xor
xlat
pusha
xchg
cmpsl
pop
add
into
xchg
mov
xor
push
jmp
cmp
stos
pop
test
or
aad
jle
inc
jmp
shr
fcoml
loop
mov
int
sbb
loopne
in
cwtl
repnz
dec
sti
or
jg
pop
mull
or
cmpsb
sbb
mov
adc
cwtl
aad
xchg
fucomp
xor
jl
push
pop
rcrl
push
and
push
shl
enter
inc
mov
pusha
sub
bound
aad
repnz
cld
mov
xchg
mov
pop
push
jbe
mov
mov
cmpsb
cmpsl
sub
lcall
add
fmul
sub
xchg
add
inc
mov
add
stos
std
xor
dec
sbb
sti
xor
stos
jb
sub
sub
xlat
lock
clc
dec
scas
sbb
mov
cmp
mov
repnz
or
pop
push
loop
sub
jle
push
loop
sar
sub
jbe
fistpl
sbb
pop
jb
fwait
pop
daa
call
outsb
pop
addr16
push
cmp
or
inc
stos
lods
mov
pop
xchg
or
xchg
pop
repnz
imul
orb
test
insl
mov
aam
jl
and
rol
mov
mov
mov
stc
cmpsb
xchg
out
jecxz
data16
in
cmp
aam
lahf
nop
stc
mov
fsubrs
inc
sbb
push
in
in
std
fidivl
movsb
in
xor
outsl
add
popa
inc
xor
mov
mov
shl
inc
mov
mov
mov
or
adc
inc
loop
jp
addr16
xchg
imul
mov
outsl
test
xor
adc
lret
dec
mov
jmp
sar
jecxz
and
cmp
pop
adc
cwtl
xchg
mov
sbb
lock
jo
hlt
incl
and
cmp
lahf
scas
stos
test
fldenv
sbbb
push
cld
xlat
js
loop
jmp
cmc
repnz
int3
adc
dec
mov
jl
mulb
sub
lret
lcall
ja
paddw
mov
sbb
js
mov
add
mov
jecxz
fisttpl
mov
jne
aas
outsb
pop
imulb
cli
in
enter
xchg
mov
outsb
push
push
out
xchg
cmp
dec
int3
mov
sub
ficomps
or
push
mov
push
inc
fstl
aaa
or
and
dec
xor
addr16
mov
add
jecxz
lods
mov
mov
lahf
add
mov
mov
or
jle
push
xchg
xor
pop
aad
popa
pop
adc
js
mov
mov
mov
xor
sub
insl
and
jns
in
push
xchg
push
and
fbld
and
stc
outsb
jge
cmpsb
call
adc
sbb
out
pop
mov
orl
sub
mov
sbb
mov
mov
movzbl
sub
mov
movl
movl
mov
cmpl
mov
movl
jmp
mov
cmpl
jl
push
call
movzbl
sbb
xor
movl
adc
xor
subl
or
cmpl
mov
mov
mov
mov
jmp
movl
cmpl
jae
push
push
call
add
sub
xor
adc
adc
not
mov
orl
or
xor
xor
xor
sub
mov
sub
mov
mov
subl
movl
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
pushl
call
sub
xor
add
mov
adc
and
sub
xor
or
and
mov
adc
or
movl
movl
jmp
pop
cmpsb
ljmp
add
jecxz
test
xchg
jmp
sarb
jecxz
cmp
adc
loopne
arpl
insb
les
inc
or
imul
cmc
inc
inc
jo
pop
shrb
inc
hlt
movsb
mov
pop
add
into
sbb
xchg
clc
test
inc
outsl
dec
in
sbb
push
lock
mov
test
mov
sbb
out
fisttps
push
mov
addl
icebp
es
cwtl
add
in
ss
mov
push
sbb
and
cmp
lcall
inc
mov
sbb
leave
ss
inc
mov
ror
jmp
cli
push
jmp
and
insl
shrb
aaa
in
sbb
xchg
and
aaa
lret
push
or
stos
and
clc
je
in
out
repnz
push
je
and
subl
out
insl
inc
or
pusha
test
out
out
lds
mov
loopne
mov
pop
filds
xchg
ja
xchg
out
mov
test
push
fucomp
push
push
out
leave
cmp
ja
adc
dec
jno
push
cmp
iret
add
fsts
ja
pop
sbb
ja
pop
ret
dec
mov
dec
sub
call
data16
push
dec
btr
mov
out
bnd
cmp
add
inc
xchg
and
lds
mov
inc
sbb
cmc
mov
pop
in
cmpl
cmpsb
inc
nop
mov
dec
or
pop
aam
adc
mov
mov
and
inc
mov
test
mov
fucomi
lret
xchg
push
test
mov
daa
jp
jecxz
insb
cmpsl
imul
adc
mov
dec
sbb
outsl
xchg
mov
adc
in
shr
jo
sti
add
pushf
mov
xchg
lahf
icebp
mov
pop
xchg
dec
pop
sub
int3
cltd
cmpsb
inc
out
loope
sub
insb
clc
mov
or
lahf
sub
nop
shll
mov
rclb
cwtl
cld
add
movsl
popf
in
jle
mov
jb
fisubl
lgs
enter
push
xlat
outsl
mov
cmp
outsl
int
outsb
fsubp
mov
xlat
xchg
adc
push
clc
pop
icebp
je
xchg
fmull
xor
dec
lock
mov
add
cmp
and
daa
mov
imul
pop
stos
dec
rclb
cmp
pop
repz
push
cld
cld
xorl
pop
mov
push
mov
sub
dec
jnp
out
xchg
sub
sub
sarb
ret
xor
insb
sbb
mov
and
lret
adc
jecxz
and
inc
pop
and
mov
jno
push
imul
rcr
pop
lcall
jns
mov
cli
xchg
push
out
inc
mov
cmpsl
jg
and
pop
pop
fcmovnb
sahf
scas
jnp
in
mov
xchg
add
pop
leave
xchg
mov
and
mov
push
push
pusha
cmp
jle
aas
xor
dec
cmp
out
push
mov
fs
pop
aaa
orl
jge
sub
pop
or
jnp
fimuls
add
icebp
mov
mov
shr
test
adc
bswap
lods
xchg
mov
int3
cmp
adc
aam
pop
in
xor
xor
jnp
pop
cltd
ficomps
aam
sbb
jg
pop
and
inc
inc
movl
xor
movl
and
movl
orl
movl
mov
and
add
mov
sbbl
sub
xor
mov
imul
cmpl
movl
mov
mov
mov
jmp
mov
movl
cmpl
ja
push
push
pushl
push
call
mov
sbb
sub
notl
xor
movl
xor
imul
mov
or
mov
adcl
lea
addl
push
call
mov
cmpl
mov
movl
jmp
movl
mov
cmpl
jbe
push
call
and
and
mov
mov
xor
xor
add
movzbl
sbb
sbbl
or
cmpl
movl
mov
mov
jmp
mov
mov
cmpl
jg
push
pushl
pushl
call
and
xor
sub
sbbl
sbb
add
mov
imul
cmpl
mov
movzbl
mov
mov
jmp
movl
not
cmpl
jb
push
push
call
mov
add
mov
mov
and
mov
sbbl
mov
add
movzwl
adc
mov
xor
add
and
sub
xor
sbb
mov
orl
div
cmpl
movl
movl
mov
jmp
movl
mov
cmpl
jne
push
push
push
push
call
sbb
add
movzwl
adc
sub
inc
xor
addl
add
cmpl
movl
mov
mov
jmp
mov
movzwl
cmpl
jb
push
pushl
push
pushl
push
pushl
call
movzbl
xor
xor
orl
xor
adc
addl
mov
mov
sub
sub
mov
movl
movl
movl
movl
cmpl
movl
movzbl
mov
jmp
movl
mov
cmpl
jge
pushl
pushl
pushl
call
mov
mov
sub
sub
sub
mov
mov
sub
imul
sbbl
sub
xor
add
mov
sub
add
movl
movl
mov
xor
or
sub
sub
movl
movl
add
movl
movl
movl
mov
xor
movl
movl
adc
mov
add
mov
adcl
mov
neg
and
andl
sub
sub
cmpl
movl
movl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
pushl
push
call
or
xor
add
mov
sub
and
orl
xor
imul
sbb
mov
lea
add
mov
mov
mov
mov
or
xor
add
not
mov
lea
and
add
mov
or
sub
adc
add
cmpl
movl
mov
movl
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
pushl
pushl
push
call
adcl
sbb
xorl
mov
add
mov
sub
movzbl
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
sbb
mov
mov
bound
ja
sarb
repnz
or
jo
pop
push
mov
or
dec
sub
mov
sahf
test
sub
test
idivb
or
mov
mov
xor
mov
sub
jns
pop
loop
inc
ja
add
orl
cmp
add
aad
std
add
xchg
enter
cmc
lahf
shrl
shll
aas
jl
mov
leave
or
adc
in
dec
jo
inc
xchg
fneni(8087
sub
es
push
push
or
bound
inc
jg
loop
mov
lcall
jge
loope
or
sbb
test
cmpsl
push
add
cmp
sbb
incl
xor
std
repz
out
popa
stos
mov
inc
xchg
ja
inc
jb
les
pop
bound
push
dec
sbb
or
sar
dec
pop
stc
in
add
push
lret
scas
jbe
hlt
insl
adc
mov
mov
dec
enter
dec
dec
insb
adc
fsubrs
scas
jecxz
call
hlt
lahf
and
push
lret
inc
cs
push
pop
or
out
inc
sbb
icebp
scas
cmp
dec
push
pop
push
rclb
in
push
cmp
bound
mov
mov
pop
les
fwait
bound
popf
pushf
push
call
push
fs
sub
fldl
mov
push
frstor
push
fcoms
pop
inc
js
push
adc
cli
test
mov
mov
scas
out
xor
inc
lock
dec
scas
rol
test
outsl
mov
clc
out
xchg
daa
fcoms
push
or
xor
sub
jg
push
or
test
popa
lea
mov
mov
insb
or
lods
es
pushf
imul
push
push
push
sbb
xor
cmp
aam
cltd
hlt
and
pop
or
hlt
dec
mov
ret
pop
jge
and
aas
jle
xchg
pop
jl
cmp
outsb
xchg
fucomi
cli
ficompl
imul
pop
cmpsb
jnp
dec
jg
dec
push
ss
das
sbb
sbb
aam
rcrb
add
dec
sbbb
mov
scas
lea
jo
rol
or
adc
add
sub
push
add
arpl
push
clc
cld
mov
jmp
jecxz
popf
int3
sbb
push
add
cltd
lret
push
cld
popa
ret
cltd
push
and
or
xchg
xchg
ret
fsubl
cmpsb
pop
cmc
mov
cmp
lcall
imul
mov
and
sahf
stos
add
and
push
mov
push
scas
ret
or
xor
adc
dec
pop
sarb
xchg
outsl
pop
outsl
into
jns
enter
das
sbb
fcmovb
out
mov
movsl
test
push
push
les
repnz
or
test
cmp
lret
outsb
vpmadcsswd
inc
sbb
imul
int3
push
jno
mov
iret
push
scas
orb
xor
xchg
mov
and
mov
dec
js
mov
imul
lret
jge
inc
push
loop
sbb
lret
push
lret
jno
ljmp
gs
xor
adc
jns
jp
jae
inc
pop
int3
scas
movsl
es
cltd
mov
lods
mov
lods
cmp
imul
adc
bswap
stos
push
xchg
pop
cmpsl
cltd
pushl
jnp
pop
daa
lods
jnp
mov
xor
xor
mov
call
or
or
mov
mov
jmp
outsb
cltd
bound
xor
mov
pop
sarb
outsb
jno
pop
jge
ss
pop
es
roll
inc
dec
xchg
dec
lock
pop
jle
es
ja
jg
data16
pop
lret
inc
dec
mov
js
aad
pop
sahf
loop
jge
mov
lret
inc
adc
lock
in
sub
pusha
adc
lock
and
xor
fdivrl
test
adcl
movsl
sbb
bound
pop
int3
pop
popa
mov
pop
in
lock
cmc
or
jo
aas
mov
pop
pop
adcl
xchg
mov
sar
jge
xchg
fs
mov
mov
add
jbe
mov
test
rolb
roll
shlb
mov
loopne
test
jl
dec
jno
nop
mov
movsb
inc
dec
repz
test
cmc
es
dec
sub
cmp
push
lcall
fwait
bswap
xchg
je
fisubs
or
cltd
sub
pop
xor
xchg
test
xor
xor
adc
mov
test
ficomps
add
popf
pop
mov
movsb
movsb
jb
in
jb
xchg
dec
adc
repz
or
push
inc
int
inc
pop
in
pop
dec
jne
cmp
push
jecxz
test
idivb
sub
add
das
mov
jmp
popf
mov
mov
jns
dec
nop
fistpll
mov
cwtl
stc
inc
test
push
dec
clc
sbb
cltd
or
sub
ds
dec
test
push
or
jg
or
xlat
adc
cmp
mov
xor
sbb
xchg
ljmp
xor
and
mov
mov
lret
inc
rclb
aas
adc
shr
xchg
ret
leave
enter
pushf
and
in
movsl
inc
inc
xor
movsb
inc
in
mov
adc
pop
je
nop
or
sahf
test
adc
sti
lret
stc
popf
ss
sub
ret
call
loope
sub
push
lret
push
clc
sub
mov
mov
repnz
icebp
mov
mov
rcrb
mov
adc
loop
mov
fwait
mov
sbb
lods
dec
popa
flds
rcrb
ja
mov
lea
jge
jl
pop
inc
repz
add
sub
sar
imul
subl
push
push
in
sahf
aas
push
mov
out
loope
adc
push
pop
movb
cli
sub
test
jl
push
std
shll
adc
mov
iret
cmpb
jle
outsl
push
cmp
push
xor
jns
bt
jmp
loop
aaa
cs
mov
push
xchg
dec
imulb
out
mov
sub
scas
adc
inc
sub
pop
sbb
pop
mov
cld
imul
sarl
mov
and
mov
loopne
mov
and
scas
mov
or
lret
test
mov
sahf
out
or
xor
loope
push
outsl
pop
cmpsl
sub
mov
mov
jg
js
push
sahf
xor
ljmp
sbb
sub
jle
jmp
xchg
mov
pop
mov
xor
and
test
xor
fnstcw
idivb
inc
setl
cmpsl
lahf
mov
jbe
mov
sbb
nop
adc
sbb
mov
js
into
sbb
loop
add
shll
mov
jno
aad
sti
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
mov
mov
mov
icebp
mov
movsb
nop
pop
sarb
stos
test
mov
push
loop
sarl
pop
dec
cmp
or
push
dec
lcall
mov
mov
xor
sbb
inc
mov
int
andb
xorb
mov
sbb
or
inc
ds
xor
push
mov
cmp
pop
cltd
sbb
adc
xlat
test
int
mov
xchg
or
ds
iret
fcompl
xor
jl
jno
lods
xchg
add
rcrb
aas
out
add
fimuls
lods
jne
mov
lods
adc
xor
dec
sbb
or
out
fildl
mov
in
outsb
push
and
add
scas
mov
sbb
imul
cmpsl
xchg
xlat
xchg
loop
and
inc
mov
xchg
jp
mov
inc
add
push
add
ss
jno
insl
lea
mov
leave
fnstenv
negl
cli
mov
std
inc
mov
cmc
repz
stos
xor
sbb
sarb
aas
mov
mov
cs
adc
add
and
out
push
jb
xchg
pop
mov
cmpsl
add
push
sbb
loope
jns
cltd
aaa
scas
push
fs
mov
pop
jmp
hlt
inc
xchg
jb
mov
add
je
jecxz
cmp
or
jmp
mov
xor
sbb
sbbl
outsl
jo
fiaddl
ja
lcall
scas
inc
pop
sub
mov
pop
das
cmp
xor
jmp
pop
enter
fsubs
inc
jl
dec
mov
test
popa
mov
pop
push
enter
imul
test
xchg
or
je
movsb
pop
imul
cli
adc
add
pop
mov
pop
jp
dec
lock
pop
sub
sbb
jp
ret
mov
mov
dec
sti
mov
adc
sbb
and
lahf
or
ljmp
cwtl
in
cmp
clc
or
or
inc
adc
inc
add
test
mov
repnz
arpl
pop
add
pop
aam
pusha
cld
jns
stc
fwait
xchg
pop
xchg
rol
out
bound
loope
mov
mov
cmp
stos
scas
mov
pop
and
ss
cmc
adc
push
mov
mov
and
inc
sarb
adc
insl
cmp
test
sbb
xchg
pop
pop
dec
adc
mov
fildll
test
adc
xrelease
add
jns
cmc
arpl
addr16
cmc
rclb
sbbl
push
icebp
xor
sbb
or
fcompl
mov
movl
pop
aam
cmp
xchg
shll
sub
sbb
rcl
lods
adc
sub
push
and
cmp
mov
inc
or
mov
mov
mov
leave
jo
inc
jnp
or
int
call
push
xchg
decb
hlt
xor
mov
mov
ret
nop
inc
das
and
mov
nop
cltd
repnz
xor
incb
push
jp
dec
jl
jp
sbb
and
rcr
mov
movsb
pop
or
dec
cmp
mov
xchg
jbe
inc
jp
jb
ja
iret
repnz
out
andl
pop
jp
mov
mov
fcoms
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
jmp
rclb
cmp
mov
scas
xor
mov
sarb
mov
mov
adc
xor
fnsave
xchg
mov
pop
aas
or
ficoml
jns
cli
dec
iret
sbb
sub
adc
mov
lods
in
lcall
mov
jnp
ud1
dec
add
xchg
dec
add
outsl
adc
mov
insb
sub
jmp
or
outsl
sub
loope
adc
and
cs
ja
pop
leave
sub
sbbb
rclb
idivl
ds
xlat
icebp
mov
jnp
pop
add
rolb
mov
sahf
jmp
vmwrite
aam
cmp
loope
push
cmpsl
add
lea
inc
sub
pop
push
and
popf
jae
or
fs
mov
cmpsl
outsl
jo
rcrb
and
fs
mov
mov
mov
fldcw
sub
mov
sti
jbe
fdivp
and
adc
popa
sbb
outsl
inc
jmp
mov
xor
arpl
out
xor
scas
lret
pop
pop
ret
outsl
and
mov
rorb
daa
in
xor
lea
inc
jne
test
push
jecxz
mov
push
jne
mov
in
sub
daa
cmp
jns
jle
add
orb
jecxz
call
fdivrl
mov
xor
push
inc
jp
in
and
xor
dec
cwtl
cmp
jbe
sbb
negl
lcall
cmp
adc
xor
cltd
inc
je
xchg
scas
aaa
inc
mulb
outsb
xor
out
outsl
lock
in
das
xor
sbbb
pop
jns
cld
or
les
xchg
scas
adc
pop
jnp
add
sti
mov
movsl
test
sbb
push
shlb
pop
fistl
push
mull
stos
pop
cmp
ss
push
fistps
cmp
push
or
inc
sub
jnp
or
into
add
dec
in
cmp
adc
outsl
repnz
call
insl
out
test
jmp
mov
insl
nop
push
inc
loopne
or
lods
lret
insb
jbe
xlat
int
adc
xor
cmp
stos
xor
jp
test
pushf
mov
dec
push
dec
lahf
pop
hlt
xchg
fwait
cli
adc
adc
mov
bound
xchg
fcmovnb
cmp
pop
sbb
test
mov
ja
jg
dec
jno
push
lret
sub
mov
arpl
cmp
jmp
sub
insb
add
xchg
ljmp
add
imul
or
das
iret
pop
subl
pushf
jmp
out
dec
outsl
cwtl
divb
pop
fbstp
mov
ss
ret
mov
lds
adc
inc
enter
aas
rcll
mov
test
sbb
sahf
icebp
lea
adc
pop
cmp
subl
lods
test
cwtl
ds
sahf
pop
jne
lods
push
ljmp
pop
stos
sub
xchg
scas
jle
adc
mov
xchg
xor
sbb
jno
stos
ret
cmpsl
mov
cmpsl
or
out
add
sahf
mov
sbb
mov
sbb
xchg
loopne
mov
outsb
sti
push
dec
xchg
push
fcmove
mov
dec
int3
out
fcompl
pop
sbb
shl
xor
push
shl
xchg
push
inc
push
and
and
stos
adc
sub
lods
test
popl
sbb
pop
mov
push
push
call
mov
cmp
jmp
mov
xor
mov
mov
nop
adc
jecxz
outsl
sarb
mov
xchg
js
ud2
aad
mov
sbb
mov
fstp
jle
mov
mov
sub
sub
out
je
int
repz
out
call
push
push
xor
jo
dec
jno
mov
pop
pop
bound
cmp
test
loopne
sar
push
lret
pop
adcl
jne
xchg
call
xchg
jecxz
mov
subl
cmp
out
pop
sub
add
scas
mov
adc
pop
or
cmp
lcall
sub
mov
rcrb
push
push
cmpsb
fisubl
dec
jnp
loopne
pop
cmpsl
xor
lret
cli
js
lods
repz
pop
mov
cltd
shlb
bound
push
dec
nop
fsub
xchg
sub
cmp
pop
sti
sahf
lods
and
sbb
jnp
mov
cmp
mov
arpl
lcall
and
jbe
out
sbb
xchg
jl
jb
stos
mov
ret
movsl
bound
add
dec
fimull
andl
or
mov
mov
inc
dec
lock
lret
push
lcall
call
sbb
jnp
sub
xchg
xchg
int
pop
pop
mov
push
je
imul
sbb
fwait
jae
fnstenv
jmp
cmp
cmpsb
xchg
cmp
jle
fwait
jno
jp
add
dec
cmpsl
fdivl
out
mov
and
mov
insl
and
mov
cmp
fwait
mov
mov
cmp
or
jecxz
jns
jb
sbb
leave
and
lcall
inc
mov
or
icebp
daa
cmpsl
adc
out
andb
xchg
cmp
scas
pop
lcall
sub
adc
bound
jnp
pop
test
mov
out
xchg
add
mov
xchg
ret
or
dec
aaa
fistl
dec
dec
sub
sub
stos
sub
out
pop
cli
push
daa
mov
decl
pop
jg
in
cmpsl
mov
sub
lret
ret
push
cmc
scas
mov
cltd
and
daa
mov
lret
ret
push
pop
push
mov
fisubl
add
mov
push
cmpsb
xchg
mov
mov
push
mov
dec
jp
scas
sub
sub
push
push
cli
bsf
push
je
insb
push
je
mov
adc
popf
enter
hlt
push
lret
mov
out
jl
stos
push
sbb
dec
mov
js
sbb
mov
cld
jae
or
sub
arpl
daa
dec
in
adc
fistpl
lret
mov
adc
mov
repz
pop
mov
into
std
rorl
mov
jg
push
mov
popa
aaa
xor
jl
aaa
je
insb
pop
jo
sbb
sub
adc
movsl
push
sub
sbb
lret
pop
and
xor
cmp
fnsave
mov
fs
cwtl
push
push
test
movsl
shlb
rolb
xchg
push
lret
push
mov
jle
hlt
ja
test
outsl
xor
out
sbb
call
mov
mov
pop
add
cltd
cli
mov
jmp
lds
xor
outsb
dec
lea
sbb
mov
dec
push
pop
mov
jle
sbb
test
repnz
je
mov
jmp
cld
sbb
mov
sahf
scas
fdivrs
mov
push
push
ret
push
adc
pop
sub
popl
sbb
mov
mov
fisubs
mulb
xor
js
addr16
popa
popf
mov
subb
ss
xor
out
pop
scas
mov
xor
dec
inc
popf
and
out
and
cmp
jo
sbb
out
outsl
fdiv
iret
xchg
cs
inc
or
in
mov
cltd
mov
fidivrs
and
jl
mov
inc
jnp
data16
inc
xchg
inc
mov
rcr
pop
push
je
fdivrl
dec
pop
or
ds
xor
insb
cmp
popa
in
mov
push
scas
and
ficompl
mov
add
mov
pop
sti
bnd
pop
push
orb
jg
ret
lods
fldenv
ds
add
std
popf
mov
loopne
dec
push
call
and
mov
adc
xchg
push
adc
xchg
ret
in
jp
mov
jmp
sbb
jl
mov
cmp
int
nop
js,pn
mov
mov
pop
js
sbb
push
sub
xchg
ljmp
push
clc
cmp
mov
push
inc
mov
dec
std
adc
mov
add
fimull
mov
pop
cltd
test
mov
hlt
ja
shl
mov
xchg
pop
pop
into
and
xor
imul
pop
lahf
cmp
fwait
mov
or
daa
mov
inc
adc
out
imul
sub
repnz
add
push
or
sbb
add
pop
sti
or
rorl
daa
testl
cmc
jno
xchg
pusha
or
sbb
scas
mov
lods
clc
inc
jb
jno
rcrl
xor
test
ret
push
add
jno
orb
ds
and
jo
mov
test
cmp
add
lods
or
aam
cmc
pop
pop
dec
fwait
jae
test
xchg
into
push
mov
shrl
push
roll
aaa
aaa
rcrl
pop
sbb
ss
dec
pop
xchg
jmp
and
out
divl
push
mov
dec
in
popf
and
pop
mov
or
fs
xchg
mov
jmp
push
int
movsb
sbb
popa
or
test
fdivp
hlt
js
inc
mov
data16
repnz
int
or
inc
jle,pn
jbe
xchg
mov
leave
cmp
pop
mov
jno
lock
loope
repnz
frstpm(287
ss
test
xchg
nop
shll
and
sbb
xchg
fidivl
add
in
jge
jge
ss
mov
andb
dec
repz
rcll
out
fists
dec
jge
pop
dec
or
shl
pop
pop
das
pop
add
sarl
das
loop
int
cmp
and
add
test
inc
sbb
js
sbb
inc
scas
imul
adc
pop
xchg
adc
shlb
roll
out
jne
popa
push
popa
mov
jns
push
int
cmp
aaa
hlt
adc
xor
push
enter
daa
push
or
pop
in
add
xor
lcall
movsl
lret
push
jo
fcomip
adc
jecxz
pop
or
and
ds
lcall
adc
cmc
lds
mov
sub
xor
loop
popa
in
mov
repnz
dec
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
jmp
push
inc
sbb
pop
or
cld
movsb
mov
jg
mov
xchg
cmp
or
cmpb
frstor
and
sub
aad
adc
adc
pop
jb
push
cmpsl
lods
mov
clc
fildll
inc
test
in
enter
fcomps
inc
adc
push
dec
daa
rclb
popf
xor
mov
scas
test
dec
pop
outsb
cmpsl
cmpl
xchg
sub
adc
aas
int3
adc
push
push
adc
sbb
data16
mov
inc
lods
jne
outsb
fisubrl
std
ljmp
stos
add
jg
or
rep
les
add
shll
popa
jg
inc
inc
lahf
mov
jbe
je
or
add
jmp
cs
cmpsl
or
pop
push
lea
rol
add
jmp
movsl
hlt
jb
inc
je
mov
adc
fsubs
sbb
jnp
or
leave
icebp
add
neg
adc
dec
sti
lods
adc
or
fdiv
push
out
mov
loop
jns
in
into
push
mov
rcl
mov
or
mov
iret
loopne
ljmp
sbb
sbbl
adc
pop
pop
xchg
push
pop
daa
sbb
pop
fsubrp
push
push
and
add
lahf
fsts
inc
data16
aad
mov
daa
jge
pop
out
adc
mov
test
adc
in
adc
sbb
cmpsb
sarl
cltd
add
pop
push
jne
jmp
test
mov
and
pop
rolb
bnd
xor
mov
dec
push
test
ret
daa
fwait
or
add
xchg
hlt
add
aam
push
and
movd
test
jb,pn
sarb
leave
insl
pop
xchg
pop
jns
jo
inc
jecxz
or
std
add
jo
pop
pop
pop
in
or
pop
test
lret
cmpsb
hlt
mov
xchg
icebp
and
push
aaa
adc
repz
out
mov
cmp
inc
push
dec
xchg
sahf
xchg
mov
fsubrs
push
xor
popa
add
rol
pop
push
and
rcrb
cmp
retw
push
xor
insb
aam
les
and
and
fidivl
sub
loop
loope
cmp
call
stos
leave
inc
ficomps
adc
sbb
call
and
jae
jge
es
in
daa
icebp
outsl
sub
or
rcr
sbb
xor
inc
and
pop
adc
push
xlat
mov
jb
mov
sub
add
popa
xor
xor
inc
mov
add
rcrb
or
inc
push
inc
inc
test
xchg
mov
jbe
cwtl
pushf
mov
mov
notl
adc
add
int3
jno
push
test
push
mov
lret
inc
sahf
push
mov
int
push
les
mov
lret
jmp
xchg
xor
jne
inc
adc
adc
and
pop
sbbl
ds
or
pop
push
test
sbb
lret
jno
mov
andl
mov
pop
jns
cli
lcall
inc
pop
inc
movb
add
add
mov
push
push
inc
add
jne
xor
jns
fnstsw
cmp
adc
sbb
sbb
aad
jb
lret
int
push
addb
mov
pop
jmp
roll
mov
decl
add
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
jmp
cmp
mov
sahf
pushf
out
fisttpll
mov
fimuls
mov
lods
incb
jnp
cmp
sbb
mov
inc
bound
sub
mov
adc
pop
jae
pop
popa
dec
int
push
sbb
sti
mov
xchg
lret
adc
rolb
lock
jg
fsubrs
lods
push
aas
mov
sbb
cmpsb
push
pop
fcompl
pop
sub
cwtl
push
push
inc
xchg
fstps
testl
pop
mov
mov
and
or
xor
jmp
pop
mov
adc
and
testl
sahf
jl
mov
or
out
and
cli
mov
shlb
fnstcw
inc
aaa
mov
xchg
dec
es
jb
outsb
ja
movsb
std
rorb
jecxz
xor
xor
popa
imul
imul
cmc
shll
insl
xor
sti
push
mov
lret
rcr
dec
call
fiaddl
cli
xor
push
leave
ret
fldt
add
or
cmpsb
jecxz
pop
sub
mov
or
repnz
mov
ljmp
movsl
add
jno
or
jo
mov
gs
daa
push
jno
push
fwait
sbb
test
xor
push
outsl
cmp
sbb
insb
dec
push
nop
std
mov
mov
and
cmpsb
orb
jno
shlb
or
push
mov
push
add
or
dec
lcall
mov
mov
sub
call
pop
aad
lahf
adc
cmpb
xchg
inc
pop
rcll
push
push
cmpb
inc
dec
jmp
adc
cmpsl
popf
xchg
sbb
jl
inc
cmp
jno
xchg
sub
xchg
rcr
insb
add
add
mov
and
popl
enter
shlb
loopne
and
in
mov
jl
xlat
xchg
adc
push
out
test
pop
cmp
xor
cli
les
popf
sbb
pop
das
ds
jne
push
lcall
shl
pop
dec
mov
cmp
mov
stos
jns
jbe
jns
sub
orb
scas
xchg
pop
lods
pop
or
cmp
mov
cltd
push
loop
fisubs
aas
jbe
dec
out
push
sub
test
sbb
mov
push
dec
clc
scas
movsb
orl
jmp
into
cmp
scas
pop
clc
test
ret
xor
cmpsl
lcall
popf
shlb
push
lcall
lods
add
rep
inc
mov
mov
push
leave
pop
sub
call
and
lods
cs
xor
hlt
add
mov
scas
stc
repz
shr
out
mov
mov
mov
push
jecxz
push
lods
imul
adc
es
push
cmp
mov
xlat
add
loop
cmpsb
add
push
in
ljmp
mov
xor
push
lea
sub
mov
aas
dec
adc
inc
not
xorl
es
push
add
scas
mov
and
jnp
nop
inc
lret
fimull
mov
mov
push
inc
jp
mov
push
cli
dec
xchg
or
loopne
sub
mov
fdivrl
jmp
xchg
sbb
push
or
cmpsl
popa
push
movsb
ret
scas
into
je
arpl
int
mov
xlat
ljmp
jo
dec
mov
push
mov
cmp
ss
and
jbe
xchg
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
cwtl
push
popa
pop
stos
jl
xchg
mov
repnz
cltd
push
push
sahf
xlat
sarb
jns
mov
sub
shlb
sub
pop
in
arpl
pop
aad
ljmp
sbb
test
arpl
sub
outsb
and
icebp
test
out
out
rcrb
add
or
stos
lods
xchg
sbbl
mov
mov
xor
sbb
or
cmp
mov
pushf
sbb
sub
ljmp
ror
add
insl
add
lret
in
push
bound
rcr
rolb
xchg
addr16
jo
dec
adc
adc
dec
stos
sahf
cmp
enter
cmp
jle
push
arpl
sbb
ds
and
outsl
cmpsb
and
lock
jne
add
xor
cmp
gs
je
mov
jnp
and
pop
xchg
pop
das
xchg
lds
push
pop
scas
or
leave
sub
mov
sub
xor
cld
mov
popf
shrl
bound
mov
shll
and
mov
and
fcmovnb
lock
push
adc
dec
and
pop
xor
adc
movsb
sti
adc
push
sub
push
fucom
adc
aam
fwait
add
add
and
outsb
or
add
mov
mov
push
mov
fstps
dec
lods
nop
les
dec
stc
je
xchg
xorl
dec
mov
outsb
divb
lds
not
lret
int
sbb
push
cmp
loope
mov
divb
idivb
jg
stc
push
xchg
ds
mov
mov
push
and
cmp
fisttpl
dec
iret
andb
aas
lret
scas
sub
mov
pop
loope
lcall
dec
ret
mov
outsl
or
add
cmpsl
push
xor
movsb
rcrb
cwtl
cs
leave
sbb
xor
ret
jl
nop
test
mov
incl
or
jb
jo
jo
xchg
mov
imul
loope
testl
adc
xor
cld
in
ja
dec
and
int
or
xchg
imul
movsb
stos
loopne
sbb
aaa
fidivs
cmp
popf
scas
mov
ss
mov
inc
mov
dec
xchg
imul
sub
mov
nop
pop
add
pop
jmp
in
inc
xlat
pop
lods
sbb
push
cwtl
mov
outsb
andl
push
inc
xchg
rcr
adc
cmc
insl
bound
lret
mov
fisubs
jmp
push
mov
hlt
adc
lods
vcvtpd2dqx
lods
cli
pop
mov
push
insl
jne
ds
movsb
dec
fsubrl
and
subl
or
jecxz
inc
cmp
add
bound
stos
into
jmp
cs
fimull
ljmp
and
rorl
xchg
fisubrs
sbb
jns
sub
lods
and
rol
inc
testb
inc
jns
sahf
xor
add
insb
jbe
jno
adc
mov
push
dec
xor
pop
hlt
xor
jbe
testb
or
push
loope
aaa
add
or
sbb
movsb
insb
cmp
jo
icebp
fdivl
or
and
jp
popf
fwait
mov
add
sub
test
push
adc
xor
push
pop
div
mov
or
mov
xor
div
imul
jmp
xor
in
scas
imul
dec
loope
nop
arpl
mov
ret
stos
dec
push
inc
fstpl
iret
jg
test
sahf
pop
test
data16
push
mov
aam
insl
cld
lcall
pop
cmp
jecxz
phaddd
inc
cli
dec
in
mov
fmuls
xor
adc
lret
and
fcoms
hlt
je
sub
stos
rcr
or
in
dec
outsl
mov
ficomps
push
mov
jecxz
loopne
faddp
das
cmp
shlb
dec
test
clc
cld
sarl
imul
lock
stos
jge
jb
and
scas
add
lcall
adc
mov
jle
arpl
or
xchg
pop
ja
or
xchg
je
popf
imul
mov
adc
sbb
dec
mov
jg
add
sarb
es
test
add
lods
repz
mov
push
pop
sub
stos
popf
shl
mov
xchg
jb
mov
fwait
push
aaa
inc
sub
mov
lock
sbb
imul
bound
jmp
add
shrl
std
sub
inc
fwait
repnz
arpl
popf
insl
loop
mov
inc
push
outsl
daa
js
lret
pop
sahf
mov
insb
fistps
and
and
fsub
and
jns
xor
movsb
inc
mov
inc
sbb
cmpl
mov
pop
adc
fcompl
gs
jb
ret
stos
push
repz
mov
mov
pop
popf
stos
iret
inc
adc
nop
hlt
dec
dec
aaa
scas
int
ret
stos
ljmp
adc
xor
push
test
and
fs
jbe
xchg
notb
les
adc
pushf
inc
push
in
mov
sbb
add
push
aaa
xor
inc
ret
push
cmpsb
mov
shll
shlb
inc
loop
xchg
mov
fadd
cmpxchg
lea
push
adc
push
jl
add
and
jmp
aaa
pop
pop
mov
xchg
push
pop
add
jmp
fmulp
sbb
and
in
or
popa
call
and
inc
scas
xor
or
adc
add
shrl
mov
movsb
jmp
out
popf
add
mov
es
int3
out
cltd
or
fdivl
ret
lds
push
rolb
decl
cld
inc
add
ret
mov
jno
cltd
js
mov
xchg
loopne
adc
out
pop
das
xchg
dec
or
mov
lock
cmpsb
cmp
and
je
xchg
aad
push
xchg
push
inc
sbb
bound
cmp
stc
jmp
add
lea
push
mov
ja
push
jle
into
adc
push
lret
cmp
sbb
or
jns
xchg
add
movsb
inc
mov
jge
push
and
sbb
xchg
loope
or
push
and
inc
adc
inc
inc
push
enter
leave
fwait
and
dec
sub
nop
dec
jnp
clc
mov
push
jmp
dec
mov
jp
js
add
lock
outsb
mov
dec
out
ret
push
shll
rorl
popa
sbb
push
popa
ret
mov
mov
cmpsb
jl
jne
das
aam
push
xchg
enter
repnz
jnp
int3
cwtl
movsl
lret
push
in
adc
adc
or
push
inc
mov
inc
sahf
sub
sbb
mov
loope
sub
dec
or
lods
loopne
lea
incl
add
add
add
add
jmp
pop
dec
xchg
jmp
cmp
jns
inc
aad
mov
sarb
ret
hlt
push
out
into
push
imul
jmp
faddl
and
clc
call
sbb
mov
fdivrl
enter
mov
pushf
inc
xchg
test
mov
inc
scas
fadd
push
rcll
add
ret
mov
mov
sbb
std
push
sub
mov
into
jg
sbb
inc
leave
mov
in
and
xchg
jmp
or
sub
dec
mov
sub
ja
xchg
fstps
fwait
sarl
test
sub
jbe
movsb
enter
push
cmp
or
pop
or
and
cltd
sub
and
xor
mov
cld
lods
movsl
jne
sbb
in
jmp
or
jns
and
push
cmpsb
outsb
in
shl
add
les
ljmp
stos
and
hlt
sub
es
jb
or
jge
les
and
shl
push
mov
loop
push
xchg
mov
push
cld
pop
shll
xchg
ljmp
adc
inc
pop
mov
adc
xor
dec
jecxz
test
shrb
mov
enter
testl
lcall
xor
mov
add
adc
icebp
sub
outsl
adc
mov
mov
notl
xor
repnz
gs
in
imul
xlat
inc
daa
pusha
leave
das
or
sbbb
test
in
and
pop
shrb
out
rcrb
sbb
and
in
lock
xchg
popf
inc
push
loopne
cli
add
sub
jge
mov
repnz
mov
fsubrs
daa
arpl
dec
loope
adc
sub
jmp
and
popa
pop
loopne
jg
rorl
rcrl
pop
or
es
cmpsb
adc
mov
rcrb
inc
mov
andl
adc
out
jne
push
ja
push
mov
mov
jecxz
outsl
mov
sbbb
dec
or
dec
in
scas
push
outsb
and
clc
inc
jp
shll
dec
push
into
mov
xchg
dec
mov
add
test
clc
and
addl
outsl
sti
and
loop
adc
inc
sti
push
mov
and
cld
push
xchg
jl
rorl
fwait
out
sbb
bound
pop
js
cmp
mov
movnti
les
fbld
xchg
xor
xor
je
inc
pop
sbb
decl
xchg
xor
lcall
hlt
test
and
cwtl
jmp
mov
xchg
ficomps
jae
jle
insb
xchg
mov
push
xor
repz
sub
hlt
cmpsl
push
sbb
adc
lea
popf
xchg
pushf
mov
adc
out
xchg
sub
test
sbb
lea
pop
icebp
mov
jne
inc
adc
ds
xchg
or
and
and
mov
loope
inc
in
fstps
xor
test
nop
aas
shrl
call
xchg
and
mov
sbb
scas
pmulhuw
rol
es
adc
aam
pushl
adc
pop
mov
push
mov
stc
jae
fisubrs
jns
xor
cmp
mov
fisubrs
sub
jbe
shl
das
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
jmp
daa
cmp
cmpsl
xchg
dec
sahf
lods
jns
fnstsw
mov
push
mov
mov
sbb
dec
mov
lea
mov
mov
fndisi(8087
jo
xchg
pop
pusha
jnp
push
out
test
shll
out
jns
imul
xor
mov
iret
dec
pop
ljmp
jp
outsl
add
pop
int
dec
stos
in
imul
mov
test
and
adc
xor
xchg
pop
inc
faddl
ret
sbb
adc
out
clc
es
cld
fdivl
out
sub
sbb
mov
std
int
adc
inc
push
or
ficoml
shr
mov
data16
pop
hlt
rcl
insl
adc
lock
and
mov
scas
test
jns
xor
imul
rcl
jne
dec
inc
pop
or
repz
pusha
or
xorb
mov
aad
and
shlb
in
insl
push
cmp
dec
or
aad
add
add
pop
test
icebp
cmpsb
into
or
push
dec
int
loop
sahf
fucomp
mov
jg
rcll
stc
clc
es
pop
icebp
rcll
dec
cmp
aas
ljmp
xchg
mov
mov
add
lret
or
add
sub
mov
cmp
out
pop
mov
mov
outsl
pop
jne
xor
xor
inc
mov
je
pop
orb
cmovnp
adc
mov
int
enter
or
jne
and
insb
push
js
sarb
incb
ja
fcompl
adc
pusha
and
loopne
mov
xor
mov
mov
pushf
cmp
ret
xchg
xchg
cmp
sub
aam
jecxz
add
jo
mov
test
ror
push
add
xor
sub
test
and
data16
fistpl
dec
jb
mov
ljmp
out
and
mov
mov
mov
sub
pop
fstl
sub
push
loop
mov
xchg
jo
dec
sbb
jecxz
sub
hlt
cmp
cwtl
cli
test
xchg
outsl
pushl
repz
xor
or
stos
pop
mov
cmp
pop
loop
es
test
inc
push
cltd
adc
aad
out
jne
cmp
je
mov
repnz
push
hlt
cmpsb
popa
sbbl
lret
stc
mov
aaa
icebp
or
incl
add
push
arpl
sahf
xchg
lods
mov
pop
lcall
aam
add
lret
into
les
xchg
push
fisubrs
add
orb
dec
push
xchg
mov
lds
xor
xor
cli
sub
ss
stos
adc
push
dec
aaa
sbb
mov
sbb
push
sub
aaa
ljmp
sbb
ret
jg
mov
cmpsb
cmp
daa
xchg
cld
jb
adc
xchg
shrb
add
sbb
mov
jl
push
rolb
inc
xchg
movsb
punpckhbw
rorb
inc
mov
test
cmp
jp
pop
outsb
dec
mov
or
sub
div
dec
or
xchg
loopne
mov
or
mov
push
inc
flds
mov
decl
jmp
jo
mov
mov
rcl
mov
stos
sarb
insl
cltd
mov
add
ljmp
hlt
lock
inc
fsubrs
lock
fcom
cmp
sbb
jae
jne
popf
es
ret
testl
cmpsb
cmp
or
ds
sub
stc
pop
push
int3
cltd
ret
pop
add
ret
jne
cmp
jbe
mov
mov
popf
or
inc
scas
sub
adc
xor
les
push
lret
ss
jecxz
sub
push
shr
xlat
cmpsl
mov
outsb
jo
mov
mov
and
ljmp
sbb
pop
xor
ror
andl
inc
sub
out
and
cmpsb
out
shlb
test
iret
mov
or
scas
and
adc
sub
inc
dec
inc
or
sete
test
jp
inc
divl
lcall
or
ljmp
das
mov
mov
xchg
decl
and
sbb
rcrl
test
inc
xchg
sbb
push
mov
pop
int3
xchg
add
mov
negl
mov
push
leave
call
stos
inc
add
sbb
popf
cmp
scas
test
mov
cmpsb
inc
mov
jae
test
mov
mov
popf
aad
fdivr
aad
rcrl
imul
xor
out
cwtl
mov
pop
jecxz
lcall
std
and
loope
pushf
mov
aas
add
insl
scas
xor
xor
xchg
das
mov
in
test
mov
mov
fstps
dec
dec
mov
or
test
dec
push
sub
cmp
mov
lahf
gs
dec
dec
dec
push
jns
mov
cwtl
lock
push
mov
jp
fldl
popf
loope
push
pop
mov
xor
aam
push
out
mov
xchg
mov
sbb
and
xor
push
push
dec
mov
sub
mov
pop
pusha
into
pop
in
push
icebp
pop
xchg
roll
jae
xchg
xor
cmpsb
fsub
das
push
jb
stos
std
test
jno
jae
outsl
movsl
dec
pop
dec
or
dec
imul
inc
aam
mov
imul
fstpl
jle
js
fstp
sahf
cmp
push
les
jno
fidivrl
xchg
mov
rcll
lds
dec
sbb
sti
cmp
gs
xor
das
ds
cmp
pop
fsts
cwtl
mov
cmpsl
clc
ret
add
repnz
mov
sbb
test
fidivrs
jae
mov
pop
int3
xchg
pop
adc
insb
popf
sarl
cmp
mov
repnz
int3
xor
mov
adc
sub
insb
xor
test
inc
call
xlat
cmp
mov
fstpl
js
push
add
dec
mov
xchg
cli
mov
mov
jmp
mov
or
es
jg
mov
bound
or
lret
cmp
out
std
stos
mov
bound
pop
je
enter
ror
int3
pop
cld
sti
mov
pop
adc
and
sarl
jecxz
das
sub
fbld
fs
xor
adc
add
xchg
lcall
subl
movsb
jl
int
rorl
xchg
mov
sbb
fdivrl
push
popa
out
dec
into
cltd
push
xchg
ljmp
inc
jne
hlt
and
add
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
xchg
or
mov
mov
mov
mov
jge
jnp
mov
pop
xor
xlat
test
mov
ficoms
shll
scas
xchg
aaa
push
mov
lcall
mov
seto
xor
hlt
shrb
movsl
sbb
sub
push
leave
xor
and
and
sub
push
mov
adc
sti
sub
rcll
lahf
out
jb
loopne
insb
clc
xor
jl
inc
jmp
cmp
pushf
and
icebp
mov
jno
sti
addl
std
mov
mov
ss
mov
xchg
sub
mov
push
minps
adc
jge
sbb
mov
arpl
and
push
data16
xchg
xor
push
push
enter
out
pop
and
pop
xchg
mov
mov
adc
pop
jecxz
js
aad
lds
inc
push
aam
out
xchg
cltd
mov
jno
mov
jg
push
ds
hlt
cmp
mov
mov
xchg
adc
pop
add
inc
mov
mov
push
lods
pop
gs
lret
gs
xchg
fs
inc
lods
xchg
sbb
pop
push
inc
mov
dec
xchg
sub
xchg
inc
push
adc
mov
cmp
inc
out
xlat
dec
xchg
xor
lret
sahf
test
mov
or
fisubl
addr16
icebp
lret
das
stc
ss
out
sbb
pop
test
imul
sbbb
out
xlat
jae
lock
cli
mov
rclb
andl
dec
xchg
lret
bound
cmc
cmpb
outsw
jo
ja
push
pop
mov
sbb
pop
dec
cld
sub
jbe
fcmovnb
push
cmp
xor
fidivl
mov
or
and
jl
dec
subl
ror
inc
sub
inc
fs
jge
es
push
addr16
xlat
lock
pop
or
out
and
enter
push
fcomip
pop
sbb
add
subb
dec
data16
ficoml
icebp
mov
test
cmp
lret
sub
xchg
hlt
xlat
mov
push
dec
jne
push
add
mov
std
gs
cwtl
lcall
mov
adc
adc
or
stos
push
test
adcb
loop
jbe
ret
adc
add
push
xchg
imul
push
out
imul
add
pop
jecxz
adc
icebp
jp
sub
rcl
sub
cltd
xor
pop
stos
inc
stos
pop
mov
inc
pop
cmp
arpl
sbb
inc
pop
test
ror
inc
push
mov
push
inc
fldl
jge
mov
mov
rclb
jle
test
inc
jo
and
pusha
and
fs
popa
jge
lds
ljmp
sti
sbb
outsb
push
mov
dec
ljmp
jmp
scas
or
data16
or
jnp
out
fcmovne
sbbl
je
inc
out
or
mov
test
cmc
stos
in
push
shlb
sub
int
in
jne
aad
jo
xchg
and
adc
mov
jnp
dec
push
dec
or
lahf
push
test
push
test
dec
mov
add
push
adc
jb
cmp
adc
stos
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
push
sub
mov
movsb
into
aas
or
dec
les
fcompl
sarl
inc
fmuls
popa
shlb
pop
add
adc
dec
fsubr
mov
jp
pushf
cmp
mov
mov
fwait
shlb
mov
xchg
cmpsl
daa
mov
dec
lock
andb
clc
dec
mov
xchg
popw
mov
movsl
ja
cs
insb
xor
std
shll
lods
dec
data16
cmp
inc
or
loope
test
push
aad
pop
int3
in
jo
and
sbb
pop
xor
es
popa
pop
aaa
mov
mov
aaa
stc
and
mov
mov
jnp
and
jp
es
scas
insl
fs
xchg
lcall
les
adc
adc
out
test
sbb
out
in
push
aam
imull
leave
xchg
popl
mov
in
ret
sub
and
ret
dec
cld
arpl
dec
pop
jg
inc
inc
sbb
and
cwtl
sahf
sbb
stc
mov
xor
sub
push
aas
push
repz
adc
stos
js
adc
repz
xor
xchg
cmc
ss
enter
addr16
inc
push
mov
push
jmp
or
inc
cmp
mov
mov
xor
inc
push
ljmp
stos
cld
dec
mov
pop
repz
cmp
out
ret
jl
push
mov
push
lds
lea
stc
inc
jne
pop
loopne
inc
pop
sbb
out
popa
mov
add
sbb
mov
mov
bound
cmpsb
lods
lock
push
sbb
mov
ljmp
mov
enter
push
add
int3
nopl
movl
lods
sbb
into
and
xor
push
xchg
arpl
xor
cli
shrl
xchg
mov
mov
cmp
in
jecxz
mov
lds
lret
loop
cld
cmp
daa
stos
lds
stos
mov
fisubrs
in
movsl
adc
mov
sub
add
inc
sbb
aas
scas
push
ret
sahf
lcall
imul
dec
push
pop
stos
add
add
sbbl
bound
loopne
ljmp
add
lahf
popf
cli
or
sti
xor
bound
shr
adc
xor
push
push
aas
lret
and
cmpsb
jp
xorb
ss
sbb
sbb
movsb
fwait
inc
jne,pn
cmp
sbb
fsub
mulb
repnz
testl
psubd
pop
xor
fnstsw
neg
out
pop
or
push
pop
sub
xchg
or
lods
and
ffree
cmpsl
pop
xchg
push
dec
mov
xor
insb
in
mov
pop
sub
je
pop
iret
inc
mov
sub
push
mov
insb
fdivrl
int3
ret
adc
mov
stc
imul
inc
insb
xor
in
es
icebp
cmp
pushf
out
fwait
jae
mov
loop
xor
popf
xchg
xchg
mov
stos
lcall
push
in
or
ret
stos
mov
jne
mov
inc
js
ja
push
test
and
adc
inc
mov
cli
js
icebp
push
xor
mov
repnz
cmp
and
out
xchg
movsl
mov
popa
fistps
lods
inc
mov
xor
jae
inc
notl
inc
pusha
mov
mov
shl
sub
ds
pop
clc
pop
jmp
hlt
pop
shr
rorl
jg
sbb
lret
cmc
xchg
js
stc
push
adc
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
shrl
daa
xchg
pusha
cs
rol
dec
les
ret
mov
jg
sub
xchg
push
and
call
cli
adc
sti
popf
test
shlb
xor
sarl
sbb
scas
adc
lahf
jbe
sub
sahf
jg
andb
stos
push
call
mov
cmp
add
cld
dec
pop
and
or
jmp
xchg
pop
test
ljmp
notb
aas
arpl
fdivl
sbb
fincstp
cld
les
jo
mov
lea
xchg
mov
cmpsl
pop
enter
mov
cmp
in
out
loop
xchg
popa
pop
pop
mov
mov
sub
xchg
xlat
fmull
shl
or
and
mov
movsl
and
dec
bound
jg
sub
adc
in
xchg
dec
xchg
cmp
fidivrl
push
popa
test
insb
out
push
push
push
jp
mov
flds
add
or
mov
xchg
sbb
dec
pop
ljmp
cmpsl
or
sbb
nop
pop
in
mov
shll
push
adc
popf
inc
sahf
sub
pop
mov
dec
es
lret
lret
test
sarl
jge
aaa
and
sub
dec
add
add
lods
mov
or
adc
dec
push
sahf
in
test
hlt
or
pop
sbb
nopl
dec
loop
sub
dec
sbb
jbe
repnz
mov
mov
imulb
mov
jmp
sub
popa
js
push
dec
cli
inc
jecxz
mov
push
test
mov
jno
dec
outsl
out
pop
or
ss
jne,pt
adc
dec
sbb
icebp
jle
mov
add
movsl
mov
out
fldl
inc
pop
cli
movsb
sub
sbb
push
lea
cmc
mov
inc
add
sbb
cwtl
daa
dec
mov
mov
mov
scas
vpmullw
imul
dec
mov
jbe
test
ret
jo
daa
mov
rclb
mov
mov
or
js
movb
pop
and
inc
xchg
test
add
xor
ja
out
jns
out
push
inc
xor
xchg
repz
push
mulb
popf
jns
scas
lods
ss
and
shll
addl
push
or
lret
add
mov
lods
scas
sahf
call
cmpsl
imul
das
lcall
fcom
fists
mov
ret
cltd
in
inc
mov
into
or
loop
cs
push
mov
adc
ja
sbb
enter
imulb
adcb
fisttps
mov
scas
fldt
jge
add
cmp
xchg
insl
rcll
sub
jl
xlat
dec
sub
cmpsl
daa
shlb
xor
push
pop
out
or
jl
test
jp
sbbb
cs
mov
push
push
jae
jns
xlat
in
rcrl
outsl
fmull
pop
rcrb
cmp
mov
pop
mov
jecxz,pt
jmp
test
daa
push
sbb
and
dec
notl
cmp
and
lods
movsb
mov
stc
cmp
dec
push
mov
icebp
nop
ret
testl
adc
hlt
push
imul
jo
call
daa
stos
xchg
ret
pop
fcmovnbe
or
sti
or
pop
jbe
xchg
iret
shrb
push
shll
roll
or
decl
decl
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
jmp
jg
sbb
outsb
mov
sub
cmp
sarb
shll
fisubrs
cmpsl
xor
dec
jbe
mov
jmp
pop
or
cmp
add
jecxz
imul
sar
subl
movsb
and
fucomip
sbb
jno
push
inc
mov
call
or
mov
push
mov
imul
out
cwtl
jo
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
notl
movl
movl
jmp
not
cmpl
jl
push
call
addl
andl
sub
or
sub
push
dec
push
mov
or
movl
jne
mov
mov
xor
inc
div
sbb
mov
mov
adcl
div
movl
mov
jmp
mov
mov
xor
mov
mov
movl
shr
movl
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
mov
sbb
add
mov
mov
movl
pop
pop
pop
leave
ret
cmp
movl
jae
cmp
movl
jae
shld
shl
ret
movzwl
add
mov
xor
movl
and
shl
ret
xor
xor
ret
add
xchg
push
into
jns
push
xor
jne
and
mov
popf
bnd
add
add
gs
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
mov
add
gs
arpl
push
outsl
inc
jne
jae
jb
adc
inc
add
sub
fsubrs
inc
add
inc
push
lea
movsl
popf
movsl
jno
xchg
movsl
or
andl
movsl
mov
lea
movsl
add
xchg
movsl
or
andl
movsl
mov
in
xchg
movsl
adc
movsl
popf
movsl
sbb
movsl
fwait
movsl
xchg
icebp
sub
adc
movsl
fwait
movsl
add
xchg
movsl
sbb
andl
or
adc
movsl
fwait
movsl
add
xchg
movsl
xor
movsl
andl
insl
imull
dec
adc
movsl
fwait
movsl
jae
popf
movsl
sbb
movsl
fwait
movsl
andl
dec
testl
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
pop
movsl
xchg
movsl
push
movsl
mov
roll
dec
lock
imulb
xchg
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
xchg
lock
testb
movsl
aaa
movsl
fwait
movsl
jae
popf
movsl
cmp
movsl
fwait
movsl
andl
in
imul
push
iret
adc
xchg
movsl
cmp
movsl
popf
movsl
jnp
xchg
movsl
fwait
movsl
xchg
movsl
shl
shr
lock
iret
push
das
adc
push
unpcklps
xchg
movsl
adc
lahf
movsl
cmp
mov
shlb
shrb
push
outsl
adc
xchg
movsl
add
inc
and
inc
add
add
sub
cmp
inc
add
inc
add
addb
sub
int3
sub
xor
inc
add
daa
inc
add
sub
pushf
daa
inc
add
push
movsl
scas
or
inc
add
sub
adc
inc
add
sub
xor
inc
add
and
inc
add
sub
scas
fwait
push
movsl
cmp
mov
shlb
add
add
loopne
jbe
pop
cmpsl
add
inc
add
lret
arpl
addb
js
push
push
pop
xor
cmpsb
mov
xchg
test
stos
fildl
movsl
stos
filds
movsl
cmpsb
fildl
movsl
mov
fildl
movsl
mov
fildl
movsl
mov
push
movsl
mov
push
movsl
mov
push
movsl
out
fildl
movsl
decl
adc
xor
inc
add
jae
jns
fwait
push
movsl
cmp
xlat
movsl
dec
add
xor
sbb
hlt
stc
sarb
inc
pop
jg
add
add
inc
add
inc
add
push
movsl
jg
inc
movsl
push
movsl
inc
movsl
std
movsl
jmp
push
movsl
push
movsl
dec
movsl
std
movsl
jmp
jge
push
movsl
jg
std
movsl
jmp
jge
dec
movsl
inc
movsl
jne
pop
movsl
jnp
dec
movsl
fwait
movsl
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shll
rclb
iret
xchg
dec
xor
sbb
imul
je
mov
imul
enter
popf
mov
dec
xchg
lock
inc
or
or
js
popa
pop
jecxz
movb
cs
inc
stos
inc
ds
enter
movsb
sbb
fdivrs
inc
add
ja
gs
inc
add
cli
fbld
add
add
add
add
push
cmp
push
imul
jb
gs
jecxz
shrl
cmp
jno
outsl
jae
popa
je
bound
je
outsl
test
in
jne
bound
popa
jbe
outsw
jns
imul
pusha
and
gs
insl
ja
gs
jns
jb
add
add
and
imul
imul
fldcw
fimuls
cmp
fldcw
lods
repnz
inc
outsl
je
dec
popa
jp
push
imul
push
lds
add
mov
jle
data16
jne
add
add
fstps
popa
jae
popa
js
outsl
add
mov
popa
insb
je
jne
imul
dec
loope
out
test
popa
jb
jne
outsl
bound
add
jne
outsl
js
add
or
add
gs
jns
jo
je
push
jns
outsl
popa
jns
cmpsl
scas
or
adc
popa
jns
jne
jae
imul
jb
imul
out
push
popa
arpl
imul
xchg
push
ja
cltd
adc
pop
fldenv
adc
arpl
test
cmpsb
xchg
fsubr
arpl
fsubs
cltd
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
xor
cld
xchg
outsl
mov
jo
out
lea
add
push
ja
adcb
hlt
push
or
xchg
mov
xlat
out
cld
xchg
mov
xorb
xchg
cmp
jo
out
lea
add
push
ja
cltd
adc
pop
fsubp
xor
outsl
adc
arpl
test
out
fwait
mov
fwait
cld
or
jo
xchg
addb
push
ja
adcb
cmp
adcb
xorb
xchg
out
mov
cld
xchg
das
stos
jo
out
lea
xchg
cmp
sbb
adc
dec
shrl
std
dec
xchg
test
or
xchg
test
or
orb
insl
or
or
or
adc
in
lea
pop
mov
out
mov
movb
xchg
lea
add
out
xorb
out
xor
xchg
xchg
dec
repnz
xor
xchg
mov
or
mov
out
mov
mov
cli
lea
lea
push
and
inc
out
or
imul
push
xor
push
add
lock
cmp
mov
in
mov
lea
lea
in
les
add
xchg
or
loop
scas
in
sti
in
ret
cmp
mov
subb
subb
scas
fsubr
test
fiaddl
in
test
fimull
out
mov
leave
bound
or
xlat
adc
scas
lahf
dec
push
xor
outsl
lea
bound
or
xlat
dec
bound
or
xlat
xchg
popf
mov
in
decl
adc
inc
xlat
andl
or
mov
lea
cmc
mov
bound
lea
stc
xchg
cmp
aad
adc
xor
push
lock
push
lock
popf
stos
lahf
icebp
mov
out
in
pushf
stos
fwait
mov
in
or
cmp
ja
and
mov
in
inc
jo
out
test
les
scas
in
js
xchg
cmp
ja
and
mov
in
loop
lahf
loop
test
cmp
out
or
in
out
loop
lahf
cli
lea
lea
push
andb
cmp
push
in
cmp
stc
in
out
out
or
bound
jbe
xor
in
lret
out
in
loop
lahf
and
mov
outsl
inc
push
loop
test
in
lea
cmp
push
in
push
lock
sub
out
in
addb
mov
lock
lret
mov
or
lea
adcb
sub
xorl
ja
les
mov
xchg
lea
mov
pop
cmpsl
test
outsl
dec
ja
aas
cmpsl
test
outsl
lea
ja
mov
sub
out
test
jl
scas
xchg
lea
in
xor
xorl
lea
addl
and
cmpb
pop
ja
fcmovnu
orb
addl
test
in
jg
dec
push
out
or
xor
cmp
dec
dec
xchg
lea
lds
adc
inc
xlat
sbb
inc
and
inc
out
push
jo
test
test
les
lea
in
je
mov
cltd
adc
arpl
and
test
ja
push
xlat
mov
or
push
mov
in
mov
outsl
or
push
ja
add
add
ja
inc
push
lds
mov
cmp
and
mov
xor
xor
push
dec
jne
pop
mov
out
adc
or
mov
decl
and
pop
xor
mov
lea
mov
das
mov
push
lds
das
aas
xor
aas
xchg
in
push
push
add
xor
sub
sbbb
repnz
dec
dec
cltd
subb
jns
stos
xchg
cld
jns
mov
dec
cld
jns
cltd
cmpb
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
out
xorb
xchg
mov
lahf
push
mov
clc
sub
outsl
cmp
mov
or
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
xorb
xchg
mov
mov
or
mov
clc
sub
sti
push
ja
jl
mulb
cmp
mulb
es
and
cmp
cmp
push
ja
loop
popf
push
ja
push
ja
jl
bound
lea
jns
lea
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
xorb
xchg
mov
push
mov
xchg
clc
sub
sti
push
ja
jl
jp
or
lea
pop
lea
out
lea
dec
dec
add
or
or
scas
xlat
pop
dec
lock
add
lock
jb
ja
mov
ja
xor
push
je
xchg
or
mov
ja
xorb
lock
mov
lea
mov
or
push
mov
sub
mov
ja
mov
sbb
ja
subb
ja
subb
ja
xorb
lock
cmp
add
xchg
push
cmp
dec
xlat
out
add
xor
pop
cmp
lea
xchg
mov
push
jle
mov
arpl
or
in
lea
int
cmp
ja
or
cmp
xchg
gs
adcb
lea
dec
dec
stos
adcb
lea
adc
dec
bound
lea
push
push
dec
push
dec
dec
dec
outsb
mov
pop
dec
dec
dec
jg
push
fwait
jl
gs
dec
dec
stos
lock
aas
cld
dec
insl
dec
dec
dec
xchg
push
inc
mov
jl
sub
mov
xor
scas
push
fwait
jl
cmp
lock
imul
inc
dec
dec
dec
xchg
push
inc
mov
out
or
cmp
in
push
push
ja
xorb
int
cmp
xchg
mov
lldt
ja
aas
xchg
dec
dec
dec
outsb
mov
push
dec
dec
dec
jg
aas
xchg
jl
aad
dec
dec
popf
or
jl
fisttpll
dec
cmpsl
xchg
lock
jl
in
dec
dec
xchg
add
xchg
dec
dec
dec
outsb
mov
movsl
dec
dec
dec
jg
aas
xchg
jl
lods
dec
dec
dec
popf
or
jl
mov
dec
dec
cmpsl
xchg
lock
jl
mov
add
xchg
lea
dec
jno
ja
xor
push
je
push
mov
sub
xor
arpl
lea
lock
push
je
push
mov
sub
xor
inc
std
xorb
mov
into
xchg
cmp
lea
out
andb
lea
ja
or
cmp
lea
xor
adcb
lea
out
sbbb
lea
push
sbb
fwait
cmp
ja
or
cmp
fwait
out
push
ja
xorb
pop
xor
lea
push
sbb
dec
dec
dec
xchg
lea
or
cmp
fwait
out
xorb
pop
xor
lea
push
sbb
dec
dec
xchg
cmp
ja
or
cmp
fwait
out
in
mov
lea
xorb
pop
push
jb
dec
add
loopne
or
ss
push
arpl
mov
push
or
push
dec
push
rolb
xor
lea
push
xchg
int
and
lea
or
cmp
fwait
out
push
ja
out
in
mov
lea
pop
in
out
sub
stc
xor
adc
loop
stos
push
je
sub
sub
mov
sbb
or
cmp
mov
out
push
je
sub
sub
mov
sbb
dec
dec
xchg
cmp
scas
xor
adcb
mov
or
clc
sub
arpl
xlat
mov
cmp
stc
xor
push
je
xchg
sub
in
ja
push
ja
xorb
push
sbb
lock
push
je
sub
sub
mov
ja
push
ja
xorb
lock
push
je
sub
or
mov
lock
xorb
mov
dec
orl
xor
arpl
xlat
push
dec
xlat
out
add
or
push
ja
les
xorb
lock
adcb
mov
or
clc
sub
outsb
out
xorb
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
sub
xor
arpl
lea
lock
push
push
mov
or
mov
adc
xchg
stc
push
adc
mov
or
clc
sub
in
mov
lock
in
xorb
ja
xorb
ja
insb
mulb
cmp
inc
jl
xor
outsl
cmp
inc
push
je
push
mov
or
mov
ja
xorb
lock
push
je
push
mov
or
mov
ja
jl
ds
and
cmp
fisubs
cmp
inc
push
je
push
mov
sub
xor
arpl
or
pop
in
lea
lea
adcb
mov
sub
xorb
sti
push
jb
add
ja
xor
push
je
push
mov
sub
xor
arpl
fsts
xorb
lock
push
je
push
mov
or
mov
ja
xorb
lock
je
push
mov
or
mov
lock
and
ja
xor
push
je
push
mov
sub
xor
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
pop
jl
push
hlt
and
cmp
repz
cmp
testl
push
mov
or
mov
ja
subb
cmp
dec
or
dec
ljmp
dec
xchg
dec
dec
dec
or
cmp
ja
xor
push
je
push
mov
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
sub
xor
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
testl
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
push
mov
sub
mov
lock
or
mov
lock
adcb
mov
or
clc
sub
in
mov
lock
loopne
out
orb
dec
dec
sbbb
dec
dec
dec
push
je
jle
xchg
clc
sub
sti
in
mov
loopne
add
std
adc
add
push
ja
xor
adcb
mov
sub
adcb
xchg
push
out
push
subb
ss
push
push
push
je
mov
pushl
xchg
pop
push
adc
mov
or
clc
sub
decb
and
ja
xorb
lock
arpl
or
or
pop
xor
push
push
mov
sub
mov
or
mov
lock
or
mov
lock
adc
xor
push
push
mov
sub
mov
ja
xorb
lock
mov
xchg
mov
lock
mov
clc
sub
in
lock
std
in
lock
push
lock
les
lock
push
mov
or
mov
ja
push
ja
xorb
lock
xchg
push
mov
sub
mov
lock
xorb
xchg
adcb
jle
clc
sub
adcb
mov
dec
xor
mov
mov
xorb
lock
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
xchg
mov
push
jle
mov
push
ja
arpl
or
cmp
lea
lock
cmpsl
test
or
cld
mov
sub
mov
lock
and
adc
jno
lock
xor
adcb
mov
sub
adcb
test
in
test
mov
mov
jl
lock
or
mov
pushf
arpl
xlat
sub
ja
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
jo
xchg
aad
xorb
adc
sub
push
cld
push
xchg
mov
sub
adcb
ja
in
mov
in
xchg
arpl
in
xorb
lock
push
ja
xorb
adc
mov
sub
xorb
lock
inc
insl
pop
insl
aas
jl
pop
insl
inc
insl
push
push
ja
fsubl
outsl
cmp
jg
xchg
scas
cmp
adc
test
cld
mov
sub
ja
push
lock
cli
out
jno
add
or
jo
mov
fiaddl
stc
xorb
xchg
stc
push
cld
push
adc
or
std
xorb
cld
mov
sub
ja
push
xchg
in
std
xorb
test
mov
push
sub
fsubl
outsl
cmp
add
xor
xorb
adc
mov
or
test
std
xorb
xchg
mov
push
jle
xchg
clc
sub
sti
arpl
lea
insl
out
push
out
jl
es
cmp
hlt
and
cmp
mulb
test
and
cmp
nop
shrb
push
ja
xorb
lock
mov
or
jle
clc
sub
xchg
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
or
ja
xor
adcb
or
jle
int
cmp
xchg
xor
adcb
mov
or
clc
sub
xchg
xor
adcb
adc
mov
or
clc
sub
xchg
dec
or
ja
xorb
adc
mov
or
test
std
xorb
std
or
cmp
lock
adcb
mov
or
clc
sub
arpl
test
bswap
das
lea
lock
or
add
lock
xor
mov
or
add
xor
xor
mov
or
add
in
cmp
in
cmp
add
and
dec
xlat
add
sbb
xlat
test
sahf
and
jno
or
push
ja
xorb
lock
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
dec
or
push
push
jl
jl
ja
xor
or
cmp
xlat
push
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
ja
xorb
ja
les
push
adc
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
test
sbb
ja
xorb
out
push
ja
jl
xor
outsl
cmp
push
push
cld
push
adc
or
mov
ja
xorb
lock
push
cld
push
adc
or
mov
ja
jl
jp
and
cmp
fisubs
cmp
push
push
cld
push
adc
sub
mov
lock
arpl
or
pop
in
lea
lea
jp
xchg
inc
push
je
push
mov
or
mov
ja
inc
sti
push
jb
add
ja
xor
push
cld
push
adc
sub
mov
lock
arpl
fsts
xorb
lock
push
adc
or
mov
ja
xorb
lock
cld
push
adc
or
mov
lock
or
mov
ja
xorb
lock
push
cld
push
adc
sub
mov
lock
arpl
or
or
lea
scas
xorb
ja
push
out
push
ja
pop
cmc
and
cmp
push
ja
hlt
and
cmp
repz
cmp
testl
adc
or
mov
ja
subb
cmp
dec
xor
dec
ljmp
dec
jge
dec
dec
or
cmp
ja
xor
push
cld
push
adc
or
mov
lock
or
mov
lock
out
out
adc
subb
testl
or
test
pushl
and
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
testl
sub
xor
or
mov
lock
out
out
adc
subb
testl
adc
xor
or
mov
lock
xchg
push
push
push
xchg
mov
sub
in
mov
lock
or
and
orb
dec
dec
sbbb
dec
dec
dec
push
cld
push
xchg
mov
sub
in
mov
loopne
lods
push
std
adc
lods
subb
lods
xor
adcb
mov
or
mov
xchg
std
or
incb
push
subb
es
push
adc
mov
or
test
pushl
xchg
push
push
push
xchg
mov
sub
or
mov
ja
push
ja
xorb
lock
arpl
or
or
push
lock
adc
mov
sub
mov
lock
or
mov
lock
push
mov
sub
mov
lock
adc
push
ja
xorb
lock
mov
test
pushl
xchg
adcb
mov
pop
or
in
lock
std
in
lock
push
lock
les
lock
adc
or
mov
ja
push
ja
xorb
lock
test
push
adc
xor
inc
std
xorb
xchg
adcb
xchg
mov
or
test
sti
adcb
mov
dec
xor
out
dec
xlat
and
ja
dec
xlat
out
or
jp
lea
out
or
cmp
xlat
mov
jbe
test
ja
xorb
lock
push
push
mov
sub
xor
arpl
out
xor
adcb
lea
mov
or
clc
sub
xchg
xor
adcb
mov
or
clc
sub
xchg
dec
xlat
jbe
or
sti
out
lea
and
mov
in
pop
lea
cmp
cmp
jne
dec
adc
or
mov
cli
inc
lea
add
push
or
mov
lea
lea
cmp
mov
or
push
lock
or
in
decb
psadbw
adc
cli
dec
dec
dec
jmp
dec
outsb
aad
orb
mov
lea
jle
testl
pop
scas
and
push
aad
add
adc
outsb
aad
xorb
mov
lea
push
in
std
or
or
in
push
aad
add
adc
out
subb
aad
andb
pop
fbld
dec
ja
in
ja
out
in
push
pop
out
in
or
or
xor
dec
ja
in
mov
in
push
push
lock
enter
lock
pop
or
dec
ja
in
mov
in
pushf
push
lock
xor
ljmp
push
push
les
push
jo
xchg
addb
lea
jno
push
movsb
cltd
fwait
pop
pop
or
ljmp
call
das
push
push
flds
out
cmpb
or
fstpl
xchg
out
push
xlat
mov
fucomi
push
out
push
cmpsl
mov
mov
mov
popf
adc
push
scas
les
movb
mov
aas
in
out
push
out
arpl
and
arpl
shr
sbbb
inc
out
push
imul
mov
cmpsl
mov
mov
pop
into
push
push
test
lea
adcl
mov
cmc
and
cmp
mov
cmp
mov
or
push
lods
mov
sub
adc
xchg
mov
mov
mov
mov
mov
fsincos
lods
pop
xor
andb
mov
sub
andb
lea
sbb
lea
cmpsl
mov
push
lods
mov
or
mov
call
arpl
or
jecxz
lea
lea
cmpsl
mov
push
lods
mov
or
mov
call
in
lea
lock
pop
or
mov
call
xor
aad
xorb
xchg
mov
push
cld
mov
sub
adcb
out
cmpsb
xlat
rolb
push
pushf
push
cld
mov
sub
adcb
jne
jno
push
or
lea
mov
mov
push
add
test
mov
or
addb
in
mov
jge
in
lock
push
lock
mov
push
pushf
mov
or
clc
sub
incb
jp
out
push
lock
xor
push
jle
sub
or
mov
lock
arpl
aad
in
lock
push
lock
lock
push
pushf
mov
or
clc
sub
in
jge
jl
xor
outsl
cmp
lock
push
lock
in
xor
xorb
int
cmp
xorb
xlat
xchg
lea
and
add
jne,pn
ja
cmpsb
push
outsl
cmp
mov
push
pushf
mov
or
clc
sub
push
ja
arpl
xlat
pop
xorb
lock
push
sub
or
mov
lock
push
mov
sub
addb
cmp
pushl
dec
or
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
sub
mov
or
mov
mov
dec
dec
xorb
lock
push
sub
sub
mov
ja
xlat
mov
ja
xor
push
cld
push
sub
sub
mov
ja
mov
jl
xchg
ja
flds
mov
push
jl
les
test
incl
lea
mov
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xor
xorb
push
push
jl
test
mov
or
std
xorb
std
aad
sub
push
ja
xorb
out
push
push
ja
xorb
lock
push
sub
or
mov
lock
aad
xorb
lock
push
cld
mov
sub
xor
mov
sub
aad
xor
xorb
int
cmp
xchg
dec
xlat
stc
dec
or
les
xorb
ja
xor
adcb
lea
dec
xlat
stc
dec
xchg
out
push
ja
xorb
lock
push
sub
or
mov
lock
ja
xor
xlat
push
push
cld
push
sub
sub
mov
ja
les
mov
sub
xor
or
mov
lock
and
mov
push
sub
sub
mov
addb
push
sub
mov
sub
xor
pop
out
and
dec
adc
xor
xchg
add
add
lea
lock
and
cmp
xorb
lock
push
sub
sub
mov
ja
xlat
out
xorb
lock
outsl
xorb
lock
push
cld
stos
mov
sub
mov
jo
out
lea
xor
and
cmp
cmc
and
cmp
and
mov
pusha
and
cmp
test
sub
adcb
loopne
lea
xchg
out
in
or
push
xchg
enter
icebp
and
cmp
mov
mov
sub
mov
or
sti
adcb
mov
or
pop
or
pushf
and
pop
xchg
jl
or
mov
lea
ja
in
ljmp
out
and
inc
fwait
push
and
xchg
andb
mov
or
mov
incl
push
xchg
andl
jns
xchg
mov
push
or
mov
xchg
xor
repz
cmp
mov
push
or
mov
add
xchg
mov
or
sub
add
mov
in
jmp
ret
or
push
xlat
stc
or
clc
dec
or
adcb
xchg
xorl
pop
sbb
mulb
cmp
xchg
xchg
xchg
in
or
add
jle
xchg
out
push
xchg
xchg
and
in
or
pop
or
jle
xlat
xchg
xlat
rolb
push
mov
or
pop
or
jle
xlat
xchg
xlat
out
adcb
aam
jl
dec
lock
or
dec
dec
dec
cmp
adc
push
mov
or
pop
or
jle
xlat
xor
pushf
in
sub
xlat
mov
in
or
add
in
je
jle
popf
out
arpl
or
dec
dec
dec
mov
mov
lock
add
xorb
mov
lock
mov
sub
test
xchg
addb
lea
mulb
cmp
cmc
and
cmp
mov
and
cmp
mov
or
push
mov
sub
mov
ja
xorb
lock
mov
or
mov
sub
mov
ja
and
xorb
lock
push
ja
mov
outsl
cmp
enter
ja
mov
outsl
cmp
xor
push
ja
mov
outsl
cmp
stc
push
mov
ja
mov
out
cmp
jmp
ja
dec
push
movd
lea
push
das
lea
push
mov
lea
ja
xor
mov
or
hlt
lea
dec
cmp
lea
lock
mov
or
mov
sub
mov
ja
xorb
ja
xorb
lock
in
jge
adcb
push
cvtpi2ps
lea
and
cmp
cmpsl
jp
cld
push
add
sub
adcb
xorb
ja
or
cmp
stos
gs
jno
ja
xorb
into
cmp
xchg
and
xlat
imul
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
xchg
xchg
cmpb
std
xchg
in
je
xchg
lock
lea
xchg
dec
xlat
out
xchg
xchg
xchg
gs
xchg
or
add
sbb
ja
xor
push
cld
in
add
mov
or
mov
pop
fisubrl
xchg
and
mov
ja
xor
push
cld
in
add
mov
or
mov
ja
xorb
lock
add
mov
pushl
inc
std
pop
lock
and
sbb
lock
sbb
push
push
ja
jge
not
xor
xor
in
ja
les
sti
or
or
xorb
jge
push
lock
push
push
in
ret
mov
pop
lock
xor
in
jge
dec
xlat
addb
or
xorb
lock
mov
or
ret
push
mov
sub
cmp
addl
xorb
lock
add
mov
pushl
pop
jg
inc
std
pop
lock
movsl
dec
dec
dec
or
cmp
push
xor
or
cmp
stos
adcb
or
clc
sub
mov
lock
dec
or
pushf
or
lea
cmpb
lea
push
in
xor
test
std
or
jb
lea
lock
in
add
mov
sub
mov
ja
pop
imul
test
pop
push
lock
inc
sbb
outsl
cmp
call
ja
jl
push
and
cmp
adcb
mov
lea
dec
dec
dec
xchg
in
lret
outsl
in
pusha
mov
dec
xchg
dec
dec
dec
push
dec
mov
ja
push
ja
add
push
ja
push
ja
jl
or
dec
bnd
popf
dec
dec
dec
push
sbb
dec
lods
dec
dec
dec
cmpsb
jmp
mov
dec
dec
sbb
outsl
cmp
dec
dec
dec
icebp
jmp
push
dec
dec
dec
sbb
outsl
cmp
dec
dec
dec
call
add
dec
dec
dec
jl
in
dec
dec
fucompp
outsl
cmp
int
ja
nop
jmp
adc
cmc
jmp
push
jl
es
jmp
mulb
cmp
addb
dec
dec
dec
mov
or
add
inc
dec
dec
dec
insl
in
mov
in
or
cmp
dec
dec
dec
xchg
dec
or
sbbb
cmp
dec
dec
dec
stos
or
out
push
ja
add
or
lea
xorb
testl
add
mov
sub
mov
ja
xor
xorb
push
in
xor
mov
ja
arpl
jbe
or
push
ja
xorb
mov
iret
orb
sbbb
cmp
stc
sbbb
cmp
arpl
xlat
cmp
lea
cmp
and
lock
in
add
mov
sub
mov
ja
adcb
enter
push
movd
and
sub
push
pcmpeqb
and
xchg
push
mov
lea
mov
dec
push
ucomiss
cmp
sbb
lea
lock
lock
xchg
xchg
dec
or
lea
push
push
in
xor
test
std
aad
jl
out
mulb
outsl
cmp
out
xorb
mov
hlt
lea
subb
lock
adc
in
lea
push
popf
out
xorb
lock
ja
xor
push
xchg
and
adc
insl
cmp
je
xchg
adc
sub
cmp
testl
or
push
test
xchg
addb
adc
or
xchg
fwait
jl
mov
and
cmp
mov
aad
icebp
and
cmp
out
in
lret
pop
out
in
sbb
in
lret
in
out
pop
out
in
xor
and
push
in
dec
or
mov
push
in
mov
in
push
jnp
popa
sub
lret
mov
cmp
out
xor
and
push
in
dec
or
mov
lock
dec
push
push
mov
xchg
addb
cmpl
stc
in
rorl
rorb
lcall
stc
lods
lea
decl
dec
aam
lea
in
lea
mov
lea
xchg
lea
mov
lea
fimull
lock
dec
add
mov
lea
lea
lea
lea
div
lea
aad
lea
sbb
lea
mov
dec
popf
lea
enter
jnp
lea
mov
out
adcb
nop
adc
ja
adcb
lea
adcb
ja
in
icebp
test
lea
test
jno
out
mov
lea
testl
inc
ret
dec
dec
adcb
lea
sti
xorb
fmuls
dec
mov
test
xchg
addb
fwait
jl
xchg
xor
jg
lea
pusha
xchg
lea
xchg
lea
sub
sbb
lea
out
lea
xor
sbb
lea
pop
leave
lea
lea
iret
cmp
and
lea
iret
lea
sbb
test
xor
lea
lea
and
mov
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
pushf
insb
dec
dec
dec
or
pop
lea
xchg
or
cld
cli
mov
icebp
lea
sbb
lea
leave
lea
movsl
lea
lea
push
jb
fwait
leave
lea
test
adcb
jp
cmpsl
orl
sub
jp
ja
adcb
adcb
and
xorb
mov
lea
cmpsl
push
jb
movb
dec
dec
aaa
cmp
lea
push
adc
dec
in
std
xorb
xchg
mov
sti
adcb
lea
adcb
xchg
sti
push
jb
movb
ja
andb
je
mov
arpl
or
dec
dec
stos
test
lea
or
in
fists
pop
xchg
push
jl
pop
loop
fists
push
ja
jl
push
pop
fists
push
ja
xchg
jl
std
rcrb
adc
scas
cltd
fwait
jl
negl
ja
push
jb
dec
pusha
mulb
cmp
call
push
ja
xorb
stc
add
mov
sub
sti
add
bound
or
or
les
sbb
push
ret
add
push
push
xchg
mov
mov
sub
and
into
lea
in
mov
lea
xor
aad
push
push
out
adcb
gs
xchg
out
in
pushf
push
xchg
test
adcb
mov
cmpsl
test
adc
mov
lods
and
adc
insl
in
clc
mov
out
sti
push
mov
ja
outsb
xlat
enter
in
xor
test
sti
adcb
push
dec
jnp
ja
adcb
test
xchg
mov
adc
mov
sub
sti
push
mov
ja
outsb
xlat
xor
or
test
sti
adcb
push
ja
arpl
leave
dec
dec
dec
xorb
xchg
stc
in
clc
mov
sti
out
mov
sub
sti
push
mov
addb
or
xchg
stc
mov
or
cmpsl
xchg
xchg
xchg
out
outsl
or
jp
dec
dec
stos
test
lea
adc
ja
mulb
cmp
cmc
and
cmp
ja
jl
enter
cmp
sbb
adc
mov
or
cmp
sub
mov
or
add
xchg
xor
push
pushf
mov
or
clc
sub
decb
and
lea
mov
mov
sub
mov
or
incb
mov
push
lods
mov
or
mov
call
xor
aad
push
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
xor
andb
mov
or
mov
call
push
mov
sub
sub
mov
or
mov
lock
push
lods
mov
or
mov
call
xchg
pop
push
xchg
mov
mov
push
pushf
mov
or
clc
sub
in
add
xchg
enter
std
mov
sub
adcb
notl
mov
sub
inc
arpl
dec
dec
xorb
lock
stos
test
mov
xchg
addb
lock
in
lock
out
outsb
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
dec
or
xchg
or
lea
sti
or
xchg
int3
xor
adc
cld
ja
or
cld
ja
jl
ja
sar
ja
push
ja
xchg
or
dec
sar
xchg
mov
pop
xchg
push
sar
xchg
test
neg
or
loopne
or
lea
div
or
outsb
xchg
arpl
out
in
dec
xlat
out
cltd
xchg
dec
dec
jo
out
lea
cmp
cltd
mulb
cmp
xor
cmc
and
cmp
imulb
cmp
xchg
mov
scas
xorb
lock
cmp
mov
or
mov
ja
jl
sbb
outsl
cmp
inc
sbb
adc
out
lea
ja
xor
push
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
decb
and
enter
mov
sub
push
je
ja
add
or
push
ja
xorb
lock
addb
dec
xorb
lock
push
sub
sub
mov
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
push
pushf
mov
or
clc
sub
incb
xor
arpl
fstps
xorb
lock
push
cld
push
sub
sub
mov
ja
jl
xchg
movsb
mov
xor
xorb
jl
test
push
push
mov
or
std
xorb
xchg
addb
ja
ja
xor
or
push
mov
ja
xorb
lock
mov
or
sub
xor
xor
push
dec
dec
xor
push
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
sub
sub
mov
ja
xorb
lock
push
cld
mov
sub
xor
arpl
or
dec
dec
dec
xorb
lock
push
cld
push
sub
or
pushl
push
mov
jo
out
lea
jno
jo
fwait
pop
lock
or
pop
lea
mov
lea
pop
and
lea
lock
push
lock
jo
dec
jl
enter
dec
mov
mov
mov
mov
lock
and
mov
pop
or
lock
xlat
iret
or
andb
aad
or
andb
pop
mov
std
mov
and
xchg
dec
dec
ja
cmp
push
mov
mov
lock
cmc
les
ja
mov
pop
out
andb
sub
pop
dec
ja
in
out
xchg
dec
rorb
dec
push
push
mov
xor
mov
std
push
push
arpl
les
xchg
addb
fwait
loop
dec
xlat
out
xorb
inc
mov
add
push
ja
add
push
ja
add
push
ja
add
lea
dec
cmc
lea
add
lea
dec
mov
push
add
lea
dec
aam
lea
xlat
push
add
lea
dec
cmp
jb
xchg
notl
jp
xchg
adcb
jl
std
popl
push
ja
xor
and
push
mov
adc
inc
lret
or
popa
or
out
and
andb
push
test
and
icebp
lea
incl
ljmp
push
xlat
mov
lea
rcr
outsl
pusha
mov
lock
ja
rcr
or
lock
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
in
mov
in
jle
push
lock
push
xlat
scas
xor
push
jp
and
cmpsb
lret
pusha
sbb
jp
push
lock
ja
sti
jl
int3
push
lock
mov
xchg
ja
mov
push
ljmp
es
xor
and
andb
mov
sub
inc
mov
or
sub
adc
std
push
xor
scas
xor
adc
and
andb
fistpl
adc
inc
add
mov
or
movsb
push
test
adc
dec
call
dec
rorb
adc
dec
or
mov
lea
in
fucomp
or
leave
and
stos
sbb
scas
sbbb
push
lock
jp
xchg
enter
in
push
cmpsl
enter
xchg
sbbl
in
xorb
cmpsl
scas
or
arpl
stos
adc
pop
adcb
xchg
mov
cld
add
xchg
out
push
ja
push
xchg
jbe
ja
decl
mov
xlat
sub
xorb
push
jno
movsb
mov
adc
xor
dec
push
das
xorb
sbb
ja
out
dec
lock
xlat
mov
xchg
sbb
xchg
andl
in
stos
cmp
mov
xchg
addb
loopne
cmp
xchg
int3
dec
dec
orb
lea
pop
out
test
mov
sti
out
lea
lea
and
lea
mov
cmpsb
in
sti
or
cld
or
pop
mov
pop
push
push
mov
push
cmp
orb
lea
les
mov
fmuls
xlat
popa
cld
lea
lea
xchg
addb
lea
es
fwait
jl
enter
adc
mov
fstps
adc
xor
jl
xchg
and
cmp
cmc
and
cmp
call
lock
ja
out
fists
push
lock
xchg
xor
inc
testl
xchg
sub
add
push
jl
or
cld
push
ja
add
push
ja
xorb
and
cmp
pop
fists
push
jge
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
push
add
dec
dec
xor
adcb
mov
sub
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
jle
pop
or
mov
call
dec
dec
xor
adcb
mov
sub
adcb
addb
pop
or
mov
call
mov
or
or
je
testl
dec
xor
in
add
push
cld
mov
or
mov
lock
or
sub
adcb
jle
or
mov
call
andb
or
pop
or
xchg
in
push
xend
dec
dec
dec
add
dec
dec
dec
or
mov
or
adc
sub
mov
xorb
adc
lea
cmp
xchg
and
cmp
stc
or
or
mov
adcb
push
stos
dec
xlat
xor
xlat
inc
xchg
add
test
std
or
mov
adcb
push
stos
dec
xlat
push
mov
sub
cmp
dec
xorb
lock
mov
sub
mov
or
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
lock
mov
or
xchg
mov
sub
in
mov
dec
push
dec
dec
dec
xorb
lea
xchg
push
xchg
mov
or
clc
sub
push
xend
dec
dec
dec
xorb
lea
mov
mov
or
insl
or
mov
sub
push
xend
dec
dec
dec
xorb
lock
sub
mov
or
mov
lock
push
push
mov
sub
adcb
jle
pop
or
or
xchg
in
push
xend
dec
dec
dec
xorb
lock
add
push
cld
mov
or
mov
lock
or
sub
in
mov
lock
or
sub
add
push
dec
dec
dec
stos
adcb
mov
jle
lock
aad
dec
dec
xorb
or
mov
call
lea
lea
xchg
and
xorb
lock
inc
std
or
mov
std
xorb
xchg
xor
push
sub
and
incb
adcb
andb
and
xor
or
or
mov
andb
mov
sub
in
std
xorb
sbb
lock
jl
outsl
adcb
cmpsb
xorb
sbbb
lea
andb
andb
andb
xchg
scas
xor
or
or
mov
andb
mov
sub
je
ja
xorb
lds
lea
lock
inc
std
or
mov
andb
lock
in
mov
pushl
arpl
lea
movsl
jae
inc
std
push
cmpsl
xor
lock
or
ja
andb
ja
push
sub
call
andb
push
ja
xorb
out
in
mov
mov
or
cmpsl
mov
xor
andb
inc
adc
test
xorb
mov
push
jo
test
xorb
lods
jmp
pop
xor
xor
ja
xorb
inc
mov
mov
or
ja
andb
ja
or
add
adc
mov
xchg
xchg
xchg
mov
mov
or
fstps
adc
addr16
fists
xlat
aaa
arpl
xlat
dec
orb
jno
cmp
out
aad
orb
jno
cmp
push
xorb
out
in
ja
or
lock
dec
dec
les
xchg
adc
ja
rcrb
adc
jbe
ja
xor
or
or
mov
andb
lock
movsb
pushl
mov
xor
arpl
rcll
ja
in
ja
push
ja
subb
ja
xorb
lock
inc
std
or
mov
andb
pushl
sub
adc
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
mov
push
xorb
call
dec
dec
dec
xor
adcb
jle
xorb
call
dec
dec
xor
xorb
xchg
mov
or
push
xorb
call
dec
dec
xor
adcb
sub
mov
or
incb
mov
xorb
jle
mov
mov
or
xchg
andb
or
mov
pushl
push
inc
sbb
dec
dec
dec
xor
adcb
or
or
clc
sub
incb
mov
mov
or
xorb
incb
mov
mov
or
xorb
incb
xchg
adcl
aad
dec
dec
add
push
dec
dec
dec
xchg
xor
adcb
sub
or
clc
sub
xchg
add
lea
cmp
xchg
and
lea
ja
sub
lock
and
mov
inc
mov
mov
or
xchg
enter
push
or
enter
push
adc
or
or
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
push
pushf
push
movsb
call
mov
sub
ret
mov
xlat
enter
out
push
dec
lcall
xlat
and
xchg
xorb
test
lea
inc
xchg
cltd
fwait
push
movsb
push
jo
ja
fstps
adc
popl
push
ja
jl
xchg
pop
fists
push
ja
jl
xchg
mov
enter
cmp
cli
and
cmp
hlt
and
cmp
mulb
cmp
ja
push
ja
xorb
bound
cmp
xor
or
cmp
pop
in
out
adcb
lea
out
or
or
popa
or
out
andb
add
push
movsb
mov
sub
pushf
xlat
push
sbbb
xchg
mov
jno
xchg
and
xchg
test
or
ja
dec
xlat
out
dec
xlat
enter
dec
xlat
xchg
add
or
push
ja
xorb
lock
ja
jl
in
lea
xor
push
xchg
out
xorb
lock
ja
xor
push
xchg
and
and
les
xorb
lock
lea
lea
push
ja
xorb
test
lea
and
lea
and
cmp
dec
mov
ja
addr16
and
cmp
dec
movsb
cmpsb
lea
pop
fists
pop
xchg
xor
in
fists
push
ja
xorb
ja
xorb
int
cmp
lea
mov
cmp
lea
in
push
mov
mov
push
ja
pop
int3
cmp
push
xchg
loope
push
or
lahf
stos
cmpb
xchg
push
adcb
jle
push
xchg
int
xchg
push
addb
jl
mov
fistps
push
out
mov
push
xlat
popl
inc
mov
dec
dec
in
push
mov
dec
dec
add
jne
dec
dec
in
push
mov
dec
dec
add
jge
dec
dec
in
push
mov
dec
dec
mov
dec
dec
xorb
mov
dec
dec
xorb
lock
inc
std
or
mov
adcb
aam
jl
jb
mov
xchg
add
ja
mov
sbb
pop
jo
adc
lea
adc
orl
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
icebp
xorb
lock
inc
std
or
mov
adcb
mov
sub
sti
les
mov
sbb
pop
jo
adc
lea
adc
inc
or
stc
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xor
or
or
mov
adcb
mov
sub
sti
les
push
ja
dec
dec
dec
mov
sbb
pop
jo
adc
lea
adc
prefetchw
xor
adcb
mov
or
xchg
stc
adc
push
sub
call
clc
sub
mov
mov
xlat
pop
add
or
mov
cmp
icebp
outsb
sub
sub
out
orb
dec
dec
sbbb
dec
dec
push
xlat
xchg
and
cmp
or
cmp
or
cmp
lea
or
mov
dec
dec
pop
daa
cmp
mov
cmp
or
pop
cmp
lea
dec
in
push
cmp
push
add
jno
jae
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
push
cmp
out
dec
dec
dec
in
mov
mov
dec
dec
adcb
push
add
dec
dec
dec
pusha
in
cmp
mov
cld
pusha
xor
lea
dec
dec
mov
or
sbb
lea
dec
dec
dec
pusha
fwait
xchg
adc
lock
add
pushl
dec
dec
xorb
lock
mov
or
add
pushl
or
lea
dec
dec
or
jno
cld
mov
or
add
pushl
or
ja
or
cmp
dec
dec
dec
sar
sbb
dec
addl
ja
dec
push
cmpsb
mov
in
fstp
mov
adcb
popf
push
divl
or
incb
cmp
dec
push
lock
mov
or
divl
adcb
lea
and
mov
or
divl
adcb
lea
cmp
and
adc
dec
dec
pusha
daa
cmp
sub
sub
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
adc
lea
dec
dec
dec
in
mov
mov
dec
dec
pusha
sbb
lea
dec
dec
dec
adcb
push
add
dec
dec
pusha
sbb
lea
dec
dec
dec
pusha
daa
pop
lea
dec
dec
dec
pusha
push
xor
aam
dec
dec
cld
ja
mov
lea
dec
dec
in
mov
mov
dec
dec
cld
ja
or
ja
xchg
cld
ja
stos
pusha
lea
dec
dec
dec
cld
ja
jg
fistpl
lea
dec
dec
cld
ja
popf
cld
ja
xchg
pusha
inc
cmp
gs
dec
dec
cld
ja
xchg
jno
push
push
divl
sub
inc
fwait
adcb
jle
pop
or
mov
inc
decb
loopne
iret
addl
push
jle
pop
or
mov
and
mov
lea
lea
adc
addl
lock
jle
std
mov
sub
xor
in
incb
jno
jle
mov
sub
pushf
in
sti
out
push
lock
in
xor
adcb
mov
or
clc
sub
push
add
or
and
push
divl
or
incb
xchg
adcl
push
or
cmp
push
lock
mov
or
push
out
add
add
push
out
in
jl
mov
out
mov
jl
mov
lret
mov
test
push
mov
test
lret
mov
out
mov
jl
mov
out
mov
jl
mov
push
lock
cli
adcb
push
lock
lock
push
push
mov
sub
adcb
jle
pop
or
xor
bound
mov
sub
pushf
or
pushf
mov
and
push
divl
sub
incb
lock
jle
out
mov
or
mov
or
pushf
mov
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
and
mov
sub
mov
or
incb
and
mov
or
mov
mov
or
jno
xchg
jno
notl
mov
sub
adcb
jle
mov
sub
pushf
in
push
add
or
and
out
push
notl
mov
or
clc
sub
incb
dec
push
or
add
or
bound
xor
adcb
stos
push
pushf
mov
or
clc
sub
push
lidtl
or
and
mov
or
sub
aad
add
or
ja
xor
push
cld
mov
or
sub
or
dec
and
xorb
lea
xorb
lock
push
sub
or
mov
add
inc
dec
push
or
xchg
lock
xchg
jno
push
mov
or
ret
clc
sub
push
lidtl
or
cmp
lea
dec
dec
dec
add
jno
push
add
popa
cmp
stos
dec
dec
dec
cmp
push
dec
xchg
dec
dec
dec
xorb
dec
dec
in
push
cmp
push
add
fisubrl
mov
dec
dec
in
mov
mov
dec
dec
add
cmpsb
mov
dec
dec
orb
dec
dec
add
scas
pusha
dec
cmp
rorl
add
or
dec
dec
dec
mov
dec
dec
in
jl
mov
dec
dec
orb
mov
dec
dec
cmp
push
add
dec
dec
dec
xorb
out
dec
dec
push
push
push
push
add
dec
dec
dec
jl
lods
dec
dec
dec
out
xor
jl
dec
ret
cmp
ja
xor
adcb
mov
xchg
mov
lock
add
mov
pushl
sbb
jo
dec
arpl
or
and
arpl
or
cmp
jno
xchg
jno
push
mov
or
ret
clc
sub
in
std
adcb
dec
dec
xor
and
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
mov
mov
mov
jno
out
push
push
mov
or
dec
or
sub
std
mov
dec
dec
dec
xor
adcb
or
clc
sub
incb
xor
in
add
mov
pushl
sbb
jo
dec
arpl
or
lcall
dec
dec
dec
insb
cmpsl
movl
ja
xorb
mov
sbb
popl
xorb
lock
or
or
mov
adcb
push
xorb
das
cmp
enter
or
mov
xchg
std
or
mov
adcb
add
or
push
jl
jb
sti
arpl
or
lea
jl
scas
fsts
adc
popl
push
ja
push
cmpsl
jp
ja
xorb
lock
std
or
mov
adcb
push
stos
dec
xlat
xor
loopne
cmp
dec
dec
xorb
lock
std
or
mov
adcb
push
stos
dec
loopne
cmp
dec
loopne
cmp
dec
dec
orb
lea
in
out
push
lock
xor
xorb
inc
mov
mov
or
ja
adcb
sub
pushl
pop
jg
dec
std
aad
orb
lea
and
cmp
jno
xlat
cmp
xlat
sub
xlat
sbb
cmp
dec
dec
push
dec
xor
cmp
aad
xorb
frstor
dec
xor
cmp
decl
cmp
mov
dec
stos
test
lea
and
and
cmp
cmc
and
cmp
mov
or
cmp
scas
push
ret
or
add
cld
adc
arpl
xorb
sete
mov
push
ret
sub
adc
arpl
or
loopne
lea
xchg
and
dec
push
ja
dec
jb
cmovb
out
pop
adc
cld
ja
aad
ja
sbb
ja
rorb
loopne
decl
loopne
adc
jp
lea
cmpsl
dec
xor
mov
ja
or
cld
ja
jl
ja
sar
ja
push
ja
cmpsl
adc
shlb
or
int3
shlb
mov
sbb
in
out
lea
loopne
or
or
lea
lea
incl
lea
div
or
pop
jnp
test
ljmp
ja
push
mov
lock
stos
les
mov
lock
mov
sub
test
xchg
addb
mov
and
cmp
cmc
and
cmp
mov
adc
int
cmp
orb
lea
xchg
push
lock
xorb
lock
out
push
jl
xchg
push
adc
push
ja
xorb
lock
mov
or
adc
push
ja
xorb
insl
or
xchg
push
ja
xorb
insl
pop
xor
jge
xchg
xchg
xorb
sbb
lock
cmpb
dec
divl
std
xorb
insl
pop
in
mov
in
subb
ja
xorb
lock
push
adc
sub
mov
ja
xorb
lock
push
adc
or
mov
ja
xorb
lock
push
jl
mov
pushl
cmp
adc
and
cmp
repz
cmp
cli
and
cmp
xorb
lock
push
adc
sub
mov
ja
xorb
ja
push
ja
dec
xlat
orb
xor
xchg
ja
xorb
push
xorb
ja
xorb
lock
push
ja
xorb
lock
xchg
and
in
xorb
insl
and
out
xor
inc
mov
and
lea
cmp
scas
jl
std
cmc
and
cmp
hlt
and
cmp
repz
cmp
ja
push
ja
add
push
ja
add
push
ja
add
push
ja
xorb
lock
push
adc
sub
mov
ja
mov
mov
cmp
shld
loop
dec
xlat
addb
bound
xchg
test
dec
xorb
lock
push
adc
or
mov
ja
push
xlat
jp
out
xorb
xchg
mov
sub
xor
addl
push
adc
mov
or
mov
lock
push
xchg
mov
or
clc
sub
in
mov
lock
arpl
xlat
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
push
adc
or
mov
lock
sub
mov
push
adc
sub
mov
loop
add
or
xorb
lock
lea
push
jl
mov
pushl
xor
adcb
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
push
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
sub
jne
bound
mov
push
xchg
mov
or
clc
sub
loopne
arpl
lea
lock
adc
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adc
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
or
clc
sub
decb
std
or
cmp
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
xchg
enter
sub
mov
sub
decb
mov
lock
adc
push
xchg
mov
or
clc
sub
decb
std
or
lea
xor
xorb
lea
mov
sub
mov
or
mov
jne
bound
adcb
mov
or
xchg
mov
sub
decb
mov
lock
adcb
push
xchg
mov
sub
decb
mov
lock
adcb
mov
decb
std
xlat
jno
ja
or
xor
arpl
mov
push
jl
mov
pushl
ja
adc
xorb
lock
push
je
mov
test
pushl
in
xlat
data16
sub
mov
mov
sub
std
incl
outsl
cmp
mov
push
jl
mov
pushl
std
or
pop
mov
xorb
lock
push
adc
or
mov
lock
xlat
sbb
mov
push
adc
sub
mov
jg
lea
dec
xlat
addb
push
or
xorb
lock
push
adc
or
mov
lock
xchg
xorb
lock
push
adc
or
mov
lock
daa
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
lock
push
adc
sub
mov
cltd
add
or
xorb
cld
push
ja
dec
xlat
ds
xlat
adc
ja
or
xorb
lock
push
adc
or
mov
lock
cmpsl
xorb
lock
push
adc
or
mov
lock
rolb
push
jl
xchg
adc
or
xorb
ja
or
xorb
lock
mov
or
adc
or
xorb
ja
or
xor
xorb
je
sub
sub
mov
lock
mov
lea
lea
int
lea
dec
xlat
ds
in
xlat
out
xchg
ja
xor
cmp
xorb
ja
push
ja
xorb
lock
mov
sub
mov
or
mov
lock
and
xchg
mov
push
xchg
mov
or
clc
sub
in
lock
or
hlt
lret
dec
dec
xorb
test
lea
adc
push
ja
or
cmp
orb
out
andb
fistpl
adc
pop
xchg
or
or
mov
lea
push
movsb
decl
out
call
xlat
or
push
sar
adc
mov
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
jno
lret
xor
or
or
test
push
jo
lret
push
lea
or
addb
movb
out
andb
mov
push
jb
aad
fists
mov
mov
adc
es
jl
std
jle
xchg
fstps
adc
mov
adc
adc
xlat
or
loope
enter
lea
xlat
and
and
pusha
fistpl
adc
or
or
mov
dec
mov
sub
enter
out
cli
lea
incl
andb
xor
xlat
outsl
push
jb
pushf
aad
dec
xlat
xor
xlat
sub
pop
xchg
dec
dec
dec
push
outsl
mov
adcb
mov
or
or
popa
or
out
and
andb
or
movsb
decl
out
push
lret
call
cmpb
adcb
cmpsl
adc
mov
sub
mov
or
dec
lea
ljmp
arpl
xlat
sbb
xlat
nop
dec
push
test
jne
push
outsl
movsb
jbe
push
test
jne
stos
xorb
lock
and
es
fistpl
adc
inc
std
or
ret
push
jb
add
push
test
lea
call
ja
xlat
out
arpl
fisubrs
mov
les
adc
pop
js
xor
sub
in
xchg
xorb
lock
inc
std
or
mov
adcb
xor
cli
cmpsl
movl
sti
push
cmp
cmp
ja
or
cmp
xchg
gs
adcb
lea
out
mov
dec
push
or
xorb
lock
inc
std
or
mov
adcb
cld
push
jb
sti
push
ja
add
or
mov
dec
xlat
jno
xlat
and
out
xchg
int3
dec
dec
xorb
lock
inc
std
or
mov
adcb
mov
sub
std
aad
xorb
lock
mov
or
lock
xchg
adc
mov
sub
or
ja
push
cmp
xchg
addb
push
xlat
cmp
out
pop
xchg
pop
fists
arpl
or
dec
lea
in
arpl
arpl
xlat
out
arpl
or
pop
or
lea
adc
out
arpl
or
das
or
lea
adc
out
arpl
or
dec
lea
pop
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
mov
or
or
cmp
lea
lea
xlat
sub
xlat
jno
xlat
and
out
xchg
or
cmp
pop
fists
xlat
out
arpl
or
loope
lea
fists
xlat
out
arpl
or
mov
lea
fists
xlat
out
arpl
aad
mov
adc
out
arpl
or
aam
lea
fists
les
adcb
out
andb
or
or
mov
lea
push
movsb
decl
out
call
adc
push
xchg
out
push
xlat
and
and
and
push
mov
inc
ret
mov
mov
dec
lea
decl
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
jno
xlat
adc
cmpsl
adc
or
or
mov
dec
lea
or
dec
and
call
push
addb
or
or
jo
test
push
lea
xor
mov
or
sub
adcb
mov
mov
adc
es
andb
dec
aad
fists
mov
es
sub
sti
push
xchg
add
fists
cltd
dec
xlat
xor
dec
xlat
sbb
xlat
jno
xlat
and
out
xchg
int3
dec
dec
push
mov
jo
cmp
adc
and
andb
or
or
mov
lea
push
movsb
call
andb
push
xchg
jno
xlat
adc
xlat
inc
adcb
xchg
out
adc
adcb
out
andb
or
or
mov
lea
xchg
mov
or
dec
and
andb
xorb
lock
push
jo
lret
mov
sub
lea
incl
lock
in
pushf
and
adc
andb
inc
es
fistpl
adc
inc
std
or
mov
push
movsb
mov
int
sub
je
notl
add
xchg
and
adc
mov
pop
fists
mov
adc
mov
mov
es
sub
xchg
mov
xchg
addb
fstps
adc
xor
popl
push
ja
jl
xchg
pop
fists
push
ja
adcb
or
or
mov
xlat
xor
ret
add
push
dec
xchg
lcall
and
and
and
ja
dec
xlat
out
mov
sub
dec
xlat
and
xchg
xchg
enter
xchg
mov
stos
push
ja
xorb
jo
out
lea
mov
xchg
jl
xor
lea
inc
lea
xor
xor
xlat
and
xlat
adc
xlat
and
out
xchg
mov
out
push
jne
out
xorb
dec
push
prefetcht0
xor
lea
and
dec
aad
and
dec
testl
jne
out
add
push
jne
out
xorb
in
jne
out
push
jne
out
xorb
xorb
xorb
out
adcb
lea
xor
cmp
ljmp
addb
sbb
subb
in
jle
aad
out
pop
sbb
in
fstpt
lea
subb
orb
or
sarb
lea
dec
push
dec
cltd
cmp
out
or
cmp
jne
and
int
cmp
jne
and
int
cmp
lea
xor
out
or
cmp
lea
xor
out
xorb
out
or
cmp
cmp
xor
and
cmp
in
add
mov
sub
std
push
xor
out
lea
xor
ret
xorb
in
xchg
push
jge
aad
jge
fmuls
xor
sub
dec
aad
sub
dec
test
and
dec
aad
and
dec
test
adc
dec
test
xor
xor
and
aad
xorb
jl
test
lea
xorb
xorb
out
adcb
lea
xor
cmp
xor
add
mov
or
mov
xor
and
xor
cmp
int
cmp
les
add
push
jne
and
xor
cmp
out
xorb
or
cmp
xor
cmp
out
mov
adcb
lea
cmp
test
sub
imul
popa
push
insb
outsl
ja
popa
insl
imul
push
outsb
bound
push
outsb
jne
outsl
popa
push
add
insl
imul
jo
je
dec
gs
insb
outsl
dec
js
outsb
outsl
jb
add
ja
dec
imul
imul
imul
jae
popa
fs
imul
imul
bound
add
outsl
jo
jns
imul
jne
popa
gs
imul
dec
outsl
jne
push
add
outsl
jo
ja
bound
jns
pop
gs
jo
jne
gs
popa
add
popa
inc
imul
outsb
je
add
dec
imul
insb
outsl
bound
push
bound
jo
inc
outsl
jb
popa
js
data16
imul
fs
outsl
jae
jne
inc
add
add
dec
add
jbe
popa
add
add
popa
add
jne
outsl
add
push
add
popa
add
add
insl
add
popa
add
js
imul
insl
add
insb
add
outsl
add
popa
add
jo
add
popa
add
popa
add
outsl
add
push
add
add
add
add
add
popa
add
add
imul
arpl
popa
add
add
imul
add
popa
add
outsl
add
je
add
jb
jne
add
insb
add
add
insl
add
add
add
imul
ja
outsl
add
popa
add
insb
add
add
jne
insl
add
outsl
add
bound
popa
add
outsl
add
bound
add
add
add
sub
add
aaa
adc
and
adc
rolb
add
xor
add
cmp
add
insb
adc
sub
push
inc
adc
mov
adc
aas
or
add
and
add
adc
test
add
add
push
adc
cmc
push
adc
imul
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
xor
add
adc
insb
pop
adc
fwait
cmp
adc
pop
adc
lcall
add
adc
xor
adc
mov
adc
andb
clc
ja
add
xor
add
adc
mov
add
daa
adc
mov
sub
adc
xor
adc
outsb
dec
adc
adc
bound
add
and
add
adc
mov
add
pusha
adc
pop
adc
adc
cmc
addl
addl
addl
test
add
test
or
test
adc
test
sbb
test
and
test
sub
test
movsl
das
adc
add
add
adc
add
pop
adc
dec
jne
add
pop
adc
push
cmp
adc
pop
cmp
add
xor
adc
adc
add
adc
jmp
adc
jne
inc
add
inc
add
inc
add
test
mov
add
test
cltd
test
popf
test
mov
test
test
test
mov
inc
add
inc
adc
xlat
pusha
adc
lea
hlt
add
add
adc
out
adc
dec
bound
add
adc
cmp
adc
inc
pop
adc
imulb
add
arpl
add
sbb
add
adc
xchg
push
adc
cmc
test
stc
test
std
test
add
inc
add
test
or
test
adc
test
sbb
test
and
test
sub
test
add
add
aad
dec
add
add
lock
add
add
add
add
add
add
add
rclb
add
xchg
add
rorb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
add
mov
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
add
push
mov
add
add
jo
add
jl
add
mov
add
stos
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
xor
add
mov
add
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
add
test
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
lea
add
lea
add
add
push
lea
add
add
jb
add
mov
add
mov
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
add
sub
add
dec
mov
add
add
add
xchg
add
mov
add
les
add
call
popl
add
popl
add
add
cmp
add
popl
add
add
mov
add
lods
popl
add
popl
add
popl
add
popl
add
popl
add
add
and
add
push
nop
add
xchg
add
js
add
mov
add
lods
nop
add
mov
nop
add
nop
add
out
nop
add
nop
add
or
add
and
add
cmp
add
pop
xchg
add
jo
add
xchg
add
mov
xchg
add
mov
xchg
add
ficoml
add
cli
xchg
add
or
add
cs
add
add
add
inc
xchg
add
push
xchg
add
xchg
add
jle
add
nop
xchg
add
mov
xchg
add
int3
xchg
add
xchg
add
call
xchg
add
adc
add
xor
add
push
xchg
add
pusha
xchg
add
insb
xchg
add
adcb
add
add
xchg
add
call
xchg
add
add
add
and
add
add
pop
xchg
add
jbe
add
mov
add
xchg
add
rclb
add
xchg
add
add
add
sub
add
cmp
add
push
xchg
add
pop
xchg
add
outsb
xchg
add
jle
add
mov
add
add
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
push
imul
dec
jb
inc
js
add
push
gs
inc
js
outsb
je
outsl
imul
push
gs
gs
inc
insb
imul
inc
js
push
gs
dec
jne
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
pop
add
fs
push
popa
je
add
popa
je
inc
outsl
insl
jo
je
bound
inc
add
mov
push
outsl
insb
jns
imul
inc
gs
imul
addr16
js
add
add
je
popa
jns
jne
add
add
je
bound
je
jb
arpl
add
add
jb
je
push
je
add
inc
gs
dec
inc
imul
je
popa
jo
outsl
fs
daa
add
je
imul
add
jae
je
outsb
add
jo
gs
add
popa
insb
gs
imul
je
js
add
inc
gs
je
arpl
bound
arpl
lcall
outsl
add
mov
push
outsl
insb
jns
outsl
outsb
add
inc
gs
gs
inc
insb
imul
inc
gs
gs
inc
popa
arpl
add
mov
insb
imul
je
add
movl
jp
push
popa
insb
gs
add
bound
gs
outsb
add
push
add
je
jne
inc
add
testl
arpl
outsb
add
movsl
add
gs
je
push
popa
insb
gs
add
inc
gs
imul
jae
movl
inc
outsl
outsb
je
push
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
inc
inc
add
add
je
imul
jae
mov
inc
jb
popa
je
inc
imul
imul
mov
inc
gs
gs
dec
gs
imul
push
gs
jb
jae
dec
jb
inc
js
mov
je
outsb
push
imul
inc
jae
popa
jo
add
scas
add
insb
jns
gs
gs
add
popa
je
push
arpl
outsb
add
popa
je
inc
inc
push
add
inc
jne
jb
outsb
je
bound
arpl
inc
inc
dec
xor
cs
insb
add
outsb
jae
insb
gs
insb
add
add
popa
jb
jo
gs
add
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
scas
add
fs
jne
jae
jb
add
inc
jb
popa
je
inc
imul
jb
insl
inc
add
popf
add
dec
outsb
jne
add
inc
gs
imul
add
je
outsl
jo
imul
mov
imul
jae
bound
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
add
insb
insb
push
imul
outsl
arpl
repz
je
popa
jb
je
outsl
jae
ret
jbe
jo
imul
test
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
inc
jb
insl
gs
jb
arpl
mov
ja
gs
inc
js
add
insb
popa
je
push
arpl
add
imul
popa
jae
push
add
inc
add
je
popa
jae
inc
jb
outsl
jb
js
add
push
jo
jb
add
inc
add
imul
arpl
outsb
add
push
add
je
popa
jb
outsb
je
xchg
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
jne
insb
push
arpl
add
je
popa
jb
je
outsl
jae
and
inc
push
dec
outsb
jne
add
je
outsl
jns
imul
add
jae
push
push
dec
gs
popa
addr16
add
push
add
je
jb
jo
add
mov
dec
outsl
popa
fs
arpl
push
add
add
dec
outsb
push
arpl
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
sti
add
arpl
outsl
jo
jo
outsb
jne
add
popa
je
push
imul
push
add
insl
outsl
jbe
dec
outsb
jne
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
mov
dec
outsl
popa
fs
insl
popa
addr16
add
add
inc
fs
jae
push
imul
arpl
addl
outsb
fs
gs
popa
addr16
js
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
addb
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
imul
jae
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
stos
add
fs
imul
add
dec
gs
arpl
push
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
gs
jne
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
je
jo
imul
sub
fs
outsl
je
data16
gs
popa
addr16
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
popa
jb
outsl
ja
jb
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
imul
mov
imul
imul
add
outsb
inc
gs
je
jo
add
cmp
inc
push
insb
addr16
jne
je
outsb
add
mov
dec
outsb
jbe
jb
push
arpl
popl
inc
gs
imul
outsl
arpl
add
inc
imul
jae
push
outsb
imul
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
insb
addr16
jne
je
outsb
inc
push
add
insl
add
je
imul
outsb
addr16
add
popa
add
gs
je
push
outsl
jo
jo
outsb
jne
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
stos
add
ja
outsb
imul
arpl
sahf
add
push
arpl
jo
jns
incb
inc
gs
insb
imul
jb
lds
inc
outsb
fs
popa
imul
inc
outsb
jne
push
imul
xchg
dec
outsb
je
jb
popa
insb
inc
gs
imul
js
add
push
ja
jb
add
aad
dec
gs
popa
addr16
outsl
js
add
imul
outsl
ja
jo
popa
je
add
add
popa
jb
outsl
ja
jb
add
lcall
push
arpl
add
je
outsb
jne
je
imul
add
outsb
imul
push
arpl
add
je
imul
outsb
addr16
add
or
inc
imul
push
imul
jae
add
popa
jb
jb
jbe
add
add
jbe
push
imul
mov
dec
outsl
popa
fs
outsb
jne
add
bound
jbe
outsb
je
pop
add
je
jns
je
insl
dec
gs
imul
dec
outsl
popa
fs
arpl
inc
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
ja
arpl
add
std
add
je
insb
imul
je
add
je
gs
popa
addr16
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
add
jbe
inc
imul
add
outsb
fs
gs
jne
arpl
js
add
add
gs
jne
jb
outsb
je
imul
jns
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
jo
jb
push
je
imul
add
insb
gs
imul
arpl
inc
imul
cmp
gs
jns
je
insl
push
imul
gs
inc
push
add
arpl
inc
imul
je
imul
dec
outsl
popa
fs
imul
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cltd
add
je
outsl
insl
insl
inc
outsl
outsb
imul
inc
jb
gs
gs
jne
arpl
add
inc
imul
je
imul
inc
gs
imul
jo
push
add
fiadds
jae
jb
outsb
push
add
pop
add
popa
insb
push
imul
gs
jns
je
insl
inc
imul
jns
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
lret
jb
popa
je
inc
imul
jns
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xor
gs
imul
gs
outsl
insl
insl
push
je
je
add
mov
push
imul
imul
insb
gs
bound
arpl
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
inc
gs
gs
inc
imul
gs
push
popa
je
dec
popa
insl
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insl
gs
imul
add
inc
popa
fs
gs
fs
je
add
jnp
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
inc
add
je
jb
arpl
fs
jae
add
movb
gs
je
jbe
outsb
je
add
popa
jb
outsl
insl
insl
inc
jb
outsl
jb
add
jo
outsb
insb
outsl
arpl
add
add
je
outsl
insl
insl
push
je
je
add
out
add
je
imul
bound
gs
add
sub
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
sub
dec
outsl
arpl
push
imul
inc
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
imul
gs
add
gs
imul
gs
add
inc
imul
jne
arpl
add
gs
inc
imul
gs
outsl
insl
jo
je
jb
popa
insl
gs
js
add
cmp
dec
outsl
jbe
inc
imul
dec
inc
dec
xor
cs
insb
add
add
add
xor
add
sti
xchg
add
imul
outsl
insl
add
je
push
inc
js
inc
cmp
