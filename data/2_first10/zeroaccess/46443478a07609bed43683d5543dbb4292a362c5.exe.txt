mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
pop
daa
xchg
nopl
jmp
mov
xlat
les
das
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
mov
mov
inc
xor
or
mov
fs
mov
fwait
mov
pusha
fcmovb
and
aad
lahf
iret
and
sarl
push
or
je
shlb
fwait
add
xchg
stos
xorb
test
pop
or
fimuls
sub
mov
mov
stc
out
cmp
inc
mov
jns
cwtl
mov
fistps
inc
flds
mov
nop
pop
pop
xor
or
or
insl
xchg
stc
dec
mov
std
jne
fdivl
adc
data16
sub
std
inc
lods
and
leave
mov
sub
add
mov
jp
outsl
xor
ja
lods
dec
es
dec
dec
cmpsl
loope
leave
pop
fs
cmp
inc
sub
xor
jle
jge
sarb
jle
movsb
cmpsb
cmpsb
out
pop
adc
jp
dec
xchg
jecxz
mov
mov
and
cwtl
mov
lret
leave
jmp
stos
mov
test
xlat
xlat
gs
out
adc
das
xchg
scas
insl
bnd
mov
dec
add
jns
push
pop
push
lds
mov
dec
mov
andb
xchg
lods
inc
sub
push
loope
sbbb
mov
xchg
enter
or
ds
adc
push
leave
pop
out
inc
test
ret
subb
sub
aas
cvtpi2ps
fadds
and
inc
popf
cmpsb
inc
mov
jnp
mov
mov
inc
imul
mov
scas
xchg
ja
add
outsl
rcrl
aaa
sbb
xor
dec
pop
repnz
arpl
cmpb
inc
ss
xchg
test
in
sbb
push
popf
sbb
clc
frstor
jmp
idivl
dec
mov
int3
in
jecxz
lock
sub
sub
adc
shrb
lret
sbb
fdivs
xchg
out
pop
sbb
xchg
and
shlb
rcl
xor
cwtl
add
cltd
pop
int3
dec
ss
sahf
scas
dec
jb
lds
mov
mov
ds
scas
jmp
repnz
repnz
mov
into
or
pop
pop
pusha
outsl
ss
pusha
xor
jmp
jnp
or
mov
test
in
in
pop
or
mov
cmp
mov
and
dec
sti
mov
in
adc
insb
fs
xchg
fstpt
popf
jae
ret
sub
subl
dec
lcall
std
outsl
movsl
jecxz
insl
shl
mov
pop
adc
shl
clc
sti
movsb
adc
data16
add
push
lahf
int
push
push
inc
mov
cmp
out
out
dec
pushf
scas
orl
cmpsl
pop
mov
sub
mov
xchg
shl
pop
pop
pop
push
pop
inc
jg
dec
sub
mov
and
or
cmp
addr16
rolb
imul
outsl
inc
or
sub
loope
jp
ljmp
cmpsl
aaa
stc
cli
out
repnz
and
negl
sahf
popa
hlt
sub
push
add
loopne
dec
add
xor
push
jg
sbb
xor
arpl
insb
movaps
imul
jecxz
sub
add
push
sbbl
inc
xchg
mov
not
mov
inc
add
mov
ret
xchg
xor
xorb
xor
adcb
jp
mov
sbb
cmpb
scas
ret
cs
dec
outsb
cmp
in
loope
adc
outsb
add
inc
push
push
ds
das
std
mov
and
das
jmp
orl
add
dec
pop
scas
and
xor
sti
jl
or
jb
imul
add
rorl
jmp
mov
je
pop
ljmp
sub
fistps
push
cmp
sbb
das
cmp
outsb
ror
push
fs
loope
aas
push
ficoml
cmp
dec
aas
ds
xorb
mov
movb
cs
push
jae
daa
imul
xchg
outsb
sbb
cmc
mov
pop
pop
xchg
push
lods
mov
ffree
lea
mov
pop
lret
flds
insb
mov
es
inc
ss
sub
jne
cmp
cmpsb
fs
je
cmp
or
pop
fwait
sub
or
or
gs
and
hlt
ljmp
add
mov
mov
gs
js
xchg
push
push
push
push
stc
clc
cmp
sahf
xchg
movsl
lock
andb
insl
adc
push
test
dec
orl
nop
jae
cli
icebp
jae
dec
dec
fsubrl
or
xor
and
roll
sbb
clc
push
xor
sub
cmp
inc
xor
pusha
xchg
gs
inc
stos
std
xor
fucomp
xchg
mov
sbbb
scas
mov
popf
mov
lods
pop
aam
add
lret
mov
in
into
pop
lods
jbe
pop
and
std
lea
mov
out
out
fildl
cli
loope
rolb
cmp
adc
xor
inc
in
movsl
rcrl
cmpb
or
stc
movsl
pop
add
sub
xchg
cli
inc
subl
test
insb
xchg
aaa
sbb
iret
xchg
adc
adc
add
push
and
xor
jb
cltd
xchg
add
cld
dec
mov
movsl
jns
push
mov
mov
jl
cmc
jbe
negb
insb
mov
push
lcall
lret
repz
push
mov
pop
pusha
sbb
std
sbb
and
sub
xor
or
xor
cmp
orb
int3
enter
jo
insl
adc
pop
sarl
pop
pop
dec
jle
fdivl
sbb
bound
ror
mov
push
sub
mov
inc
push
or
repnz
mov
std
xlat
stos
aas
imul
mov
repz
push
inc
fistpll
aam
orb
add
add
add
jo
add
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
cvttps2pi
pop
movsb
jb
xorb
adc
xor
xchg
cmc
int3
cmpsb
ffree
sbb
ret
push
sarb
stc
insb
sub
dec
sbb
outsl
sub
cmpsl
add
outsl
rcll
push
aas
cli
jnp
lock
aad
xor
mov
jns
or
js
data16
loope
mov
je
sbb
jb
test
fidivl
mov
icebp
jno
cmpsl
popa
mov
lea
repz
in
hlt
pop
lcall
loope
leave
xor
inc
arpl
fstpl
xchg
sbb
testb
jle
xlat
xchg
shr
test
les
clc
pop
out
test
mov
adc
mov
imul
inc
imul
inc
pop
dec
push
sbb
lret
adc
xchg
sbb
loopne
cmp
xchg
push
outsl
mov
push
sub
sub
xchg
dec
in
add
mov
push
mov
lods
shlb
push
xchg
inc
dec
pop
mov
lahf
xchg
jns
push
lods
pop
sub
mov
jecxz
inc
jge
insb
aad
xchg
xor
mov
push
mov
jnp,pn
sub
ja
dec
dec
das
jp
notb
out
adc
jmp
hlt
roll
cs
enter
jo
add
rcr
ljmp
sarb
jmp
movsl
mov
xchg
sbb
pusha
jo
into
add
mov
cmp
out
push
jmp
jecxz
lea
xchg
push
xorb
jno
mov
clc
in
mov
test
dec
addb
repnz
out
jmp
push
subl
scas
ret
jmp
aam
leave
mov
inc
adc
movsl
mov
xchg
lea
xor
push
push
sub
pop
or
popa
es
ret
lds
xchg
adc
mov
pop
mov
outsl
pop
sub
push
not
jecxz
fwait
mov
or
rcrl
pop
mov
xchg
jmp
xor
out
inc
repnz
pop
bound
mov
rcrb
xchg
xor
jl
or
movd
mov
lods
roll
adc
jg
xchg
mov
insb
std
push
ss
dec
push
jmp
jnp
and
stos
rclb
in
add
sub
filds
or
test
int3
inc
out
adc
xchg
and
jno
add
int3
inc
repz
and
xchg
lcall
inc
sarl
mov
inc
pop
jp
pop
test
insl
add
stos
inc
adc
add
imul
xor
decb
xor
cs
jl
aas
jbe
inc
outsb
lods
add
cmpsb
pop
popa
scas
cmc
test
mov
adc
or
fcmovbe
roll
mov
nop
ds
shrl
add
fwait
out
inc
add
in
adc
xchg
nop
enter
test
push
scas
mov
push
es
scas
test
pop
sbb
nop
daa
loop
adcb
sarl
push
das
out
cs
fisubl
add
or
scas
test
sub
cmp
js
inc
aaa
imul
daa
push
loopne
lahf
mov
adcb
gs
jno
pop
test
jo
mov
dec
lock
popf
loope
add
xchg
mov
loop
in
pop
fs
pop
push
jecxz
pop
dec
dec
or
jne
push
or
xchg
adc
xchg
or
stc
idiv
fimuls
add
inc
and
xor
xor
and
push
cmpsl
push
es
push
sbb
lahf
fcomip
inc
into
mov
je
adc
out
shlb
adc
in
popf
adc
pop
ljmp
sbb
pop
push
out
mov
or
imul
fs
test
mov
repz
je
mov
or
sbb
js
or
or
and
adcb
mov
aad
push
cmpsb
lret
call
xchg
icebp
ret
loope
loop
gs
jge
idiv
inc
xchg
dec
fnstcw
push
loopne
cmp
pop
js
sub
mov
or
xchg
clc
and
gs
xchg
jmp
mov
xor
xor
les
pop
pop
fidivrs
jnp
xchg
mov
mov
push
stos
sbb
xchg
test
test
imul
int
push
fistpl
sub
lds
movsl
aaa
test
push
mov
pop
dec
xchg
push
out
aaa
call
enter
icebp
or
mulb
cmp
stos
std
clc
in
sahf
push
xchg
inc
xchg
sarb
shrl
push
ja
pop
mov
push
inc
rcr
pop
mov
pop
fbld
orb
inc
pop
out
sub
mov
stos
jmp
pop
shl
xor
fisubl
test
cmpsl
pop
xor
out
sbb
mov
jno
movsb
int3
jnp
and
pop
mov
push
pop
les
sarl
scas
mov
fcompl
lods
leave
shrl
mov
out
lods
lods
test
addr16
movsb
mov
repnz
dec
filds
outsl
movsb
aad
sub
add
push
sbb
pop
cltd
fs
add
cli
cmp
insb
add
add
jg
mov
adc
sub
pusha
dec
out
adc
aam
call
dec
loope
gs
and
testb
mov
xchg
cmpsl
pop
cld
fadd
ja
cmp
loopne
dec
and
add
lahf
push
jg
sbb
out
cmp
xchg
jle
fsubs
xor
sub
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
ret
add
test
lods
inc
cmpsb
and
push
or
imul
into
push
ljmp
aad
pop
int3
mov
mov
inc
mov
sbb
push
xchg
ret
or
loop,pn
adc
lods
popf
mov
xchg
dec
fildll
bound
les
dec
xlat
addr16
push
mov
sbb
pop
cmp
mov
jne
aas
pushf
cwtl
adc
mov
test
test
iret
push
fistl
or
je
xchg
clc
cli
xchg
scas
and
mov
xchg
mov
lds
pop
add
push
idivl
mov
pminub
or
movsl
lods
outsl
mov
mov
shlb
ljmp
sbb
bound
fildll
mov
stos
xchg
lds
sarl
sarl
ss
push
shll
loope
fcmovnbe
add
jecxz
aam
ljmp
cli
cmp
mov
inc
sbbb
adc
or
shlb
jl
inc
out
nop
sub
aaa
inc
ljmp
stos
and
stc
jnp
sbb
arpl
xchg
mov
imul
in
xorl
bound
sbb
and
imul
lahf
and
push
bound
lods
pop
push
out
in
loopne
pop
mov
cs
push
leave
jle
push
mov
scas
enter
int3
inc
cmc
fildll
loop
sub
pop
lcall
inc
nop
dec
mov
or
out
call
cltd
mov
jne
dec
adc
cmc
inc
pop
out
adc
popf
push
mov
mov
xchg
cmp
ffree
push
scas
stc
sbbb
push
cmpsb
cld
sahf
pop
ret
jmp
mov
cltd
in
push
fwait
pop
inc
mov
cmpb
enter
out
sbb
sbb
xor
mov
cwtl
mov
fisubs
and
push
mov
lret
lcall
mov
int
push
bound
sub
cmpsl
daa
mov
fidivl
push
sub
xor
leave
xchg
jmp
jae
jbe
popfw
lock
cmp
cmp
pop
lock
mov
sub
add
adc
adc
add
jl
sub
xchg
lahf
lea
ucomiss
movsb
adc
inc
add
inc
insl
dec
outsl
shlb
fiadds
cs
add
mov
mov
int3
test
addl
or
push
js
xchg
or
popf
pop
xchg
xchg
les
sub
inc
xchg
push
out
jno
pop
or
inc
lds
mov
adc
sub
sbb
repz
imul
inc
pop
jmp
bound
and
int3
incl
pop
add
insl
das
jle
shrb
add
xor
scas
xchg
mov
out
sbb
mov
je
mov
ljmp
arpl
adc
jg
mov
popl
aam
jns
cmp
sub
mov
or
jns
adc
stos
mov
push
push
ss
out
call
lea
mov
pop
mov
sarl
mov
nop
mov
cmp
test
fistps
int3
jns
cli
push
mov
pop
push
jmp
sub
mov
je
pop
stos
add
mov
orl
call
aam
push
adc
add
movsl
cmp
inc
ret
cltd
std
int3
jmp
test
push
pop
arpl
rcrb
jo
and
pop
or
mov
fisttpl
shr
lcall
jecxz
pushl
nop
xchg
xlat
hlt
out
popf
getsec
adc
adc
in
sti
imul
sbb
adc
test
inc
cmp
jg
pop
prefetch
or
pop
fxch
adcl
xor
push
mov
pop
mov
clc
div
xchg
pop
push
scas
or
adc
out
mov
insb
xor
scas
cmpsl
jp
loopne
jae
scas
aas
cmp
mov
mov
cmp
add
xor
jb
sete
les
or
loop
push
iret
arpl
sbb
xor
fisubl
jbe
outsl
fwait
pusha
inc
orl
fstpt
das
cmp
dec
inc
push
adc
fdivl
cwtl
mov
xchg
xchg
daa
adc
cli
push
ss
cmp
ud0
push
fwait
push
dec
mov
push
dec
lods
stc
push
lds
ljmp
and
mov
hlt
sub
cmp
and
addr16
pop
sarb
fidivrl
in
sbb
repnz
std
pop
sub
sarb
test
adc
js
pop
xchg
pop
and
jnp
bt
ret
stc
push
dec
out
popf
cmp
aad
and
scas
push
aad
out
cmp
dec
mov
cli
push
test
inc
jne
push
pop
pop
jle
jg
mov
or
stos
inc
in
insb
sti
push
call
pop
loop
cli
adc
and
loope
cmpsl
lods
or
js
push
jp
imul
into
fnsave
xlat
cmp
cmpsb
and
jecxz
mov
and
pushf
nop
jne
cmpsb
jnp
arpl
sbb
iret
cmp
lods
ss
mov
ret
rcrl
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
jmp
fimuls
pinsrw
movhps
jle
push
mov
cmp
or
flds
daa
jge
shlb
push
push
das
sbb
leave
sub
loope
push
and
pop
icebp
pop
sbb
push
and
aas
dec
insb
and
dec
sub
push
aas
jecxz
lock
mov
xor
gs
aam
or
mov
divb
inc
jo
mov
mov
icebp
fs
cmp
sub
out
push
mov
stos
std
adc
iret
xor
mov
xchg
popa
or
lret
jno
cmp
mov
add
outsb
sbb
pop
mov
push
cmp
movsb
ja
data16
and
push
nop
and
test
call
jp
push
mov
adc
inc
mulb
out
dec
cmp
push
fwait
mov
ret
push
out
push
scas
pop
push
lcall
or
mov
fs
cmp
adc
dec
fldt
sub
pop
loope
and
bound
idivl
sub
sub
push
lods
jne
adc
cmc
andl
add
stc
mov
adcb
int
jns
push
adc
jmp
outsl
adc
push
in
js
adc
mov
mov
negb
mov
in
into
xchg
hlt
mov
xor
xor
stc
push
out
pushl
imul
pop
cmp
hlt
incb
dec
adcb
and
sub
inc
scas
cmpsb
jo
arpl
into
sahf
pop
mov
outsl
repnz
out
test
xor
mov
push
ljmp
and
sub
loopne
cmc
hlt
sbb
xchg
push
adc
mov
and
outsl
jg
push
sbb
rclw
mov
cmpb
lods
jge
imul
push
sbb
insb
or
movb
and
sub
jb
sub
out
filds
ret
mov
fs
aad
cmp
outsl
cmc
xchg
fmulp
jnp
push
xchg
jp
inc
subl
rolb
pop
inc
fmul
xchg
shlb
adc
aad
mov
and
sti
fnstenv
rcrl
popa
xor
inc
jbe
stos
push
inc
bound
outsl
int
cltd
adc
mov
mov
or
test
andl
gs
incl
inc
shlb
mov
and
nop
loopne
jp
fdivrl
iret
shrb
loope
jno
push
cld
or
dec
inc
and
mov
mull
add
or
push
xor
push
test
inc
mov
xor
jmp
sub
xlat
lods
in
repnz
mov
fsubp
sbb
jns
aam
mov
in
and
arpl
mov
or
ret
dec
lret
test
ljmp
decb
js
movsb
test
pushf
sbb
das
and
mov
inc
push
inc
rclb
arpl
stos
and
adc
xchg
sbb
jge
ljmp
std
ds
in
mov
adc
jge
sub
jo
in
mov
aam
pusha
mov
and
setns
cmp
fbstp
arpl
lret
push
cmp
out
pop
aam
cmp
ficompl
cmp
add
fs
xor
jne
ret
mov
repz
loopne
lds
or
inc
adc
jp
push
jl
popf
jl
xor
scas
sub
xchg
inc
aaa
int3
adc
imul
xchg
loope
pop
push
leave
aas
push
test
push
xchg
popa
cmp
cmp
xchg
fcmovb
lret
pop
mov
sbb
sbb
rolb
add
ret
fldcw
jmp
push
jp
mulb
outsl
adc
lret
mov
rclb
or
icebp
mov
mov
xor
mov
loop
pop
mov
mov
xchg
push
inc
sbb
and
ljmp
cmp
loopne
movb
andb
push
out
mov
push
nop
cmp
and
loop
call
in
nop
stc
mov
mov
ljmp
loopne
clc
jle
gs
pop
sub
idiv
jecxz
test
cs
pop
sbb
mov
fnstsw
xor
fsubrs
rorl
insl
mov
push
int
loope
push
sbb
mov
fdivp
or
inc
sbb
stos
aaa
cld
mov
bound
xor
xchg
call
dec
jb
stos
loop
hlt
and
mov
das
push
mov
push
mov
loopne
dec
in
pop
insb
test
int
push
add
adc
pop
mov
push
pusha
leave
out
mov
bound
movsb
jns
push
sti
push
dec
js
xchg
adc
push
fiaddl
or
push
inc
insb
mov
xlat
push
cmp
in
pop
push
pop
sub
data16
inc
out
mov
xor
subl
insl
pusha
xchg
out
lahf
scas
outsl
xor
or
jg
cmpsl
pop
out
and
xchg
test
adc
out
sub
aaa
jle
insl
shlb
std
mov
xchg
mov
addl
sub
mov
fldcw
jae
jnp
add
leave
jecxz
push
push
stos
xor
testl
mov
lret
bound
in
aaa
add
and
pusha
sbb
mov
ret
sbb
sbb
pop
lods
cltd
inc
xor
jg
dec
sti
js
sbb
sbb
fs
and
cmpsb
iret
ret
sti
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
adc
push
cmp
pinsrw
jp
fbld
pop
bound
inc
xchg
sub
test
ret
out
dec
mov
test
insb
push
popa
or
sahf
rorl
jle
dec
mov
jb
xchg
out
repz
mov
and
das
and
inc
push
movsl
imul
aas
out
sub
dec
jo
pop
icebp
loopne
sbbl
andb
jge
jecxz
and
and
add
insb
adc
test
inc
std
loopne
jmp
lcall
and
or
push
out
mov
jmp
push
lds
sbb
maxps
mov
push
inc
cmp
pop
call
xor
hlt
sbb
lods
lahf
rorb
sub
mulb
test
adc
shl
divb
cmc
test
sub
sub
cltd
fldenv
addb
add
insb
push
adc
adc
out
sub
jp
sbb
pushf
pop
jg
nop
lock
sbb
lahf
sub
adc
push
pop
fsubl
or
push
loop
xchg
repnz
les
xchg
orb
int
cli
push
inc
addr16
mov
push
inc
mov
popf
sub
jg
sub
roll
mov
fsts
push
fnstcw
imul
jecxz
fisttpll
xor
aas
mov
xchg
cmpsl
outsb
or
mov
idiv
aaa
jo
or
jge
gs
jmp
stos
and
dec
dec
sub
sbb
ja
ret
addr16
lods
pop
lods
enter
xor
cli
imul
stos
jno
adc
loop
dec
or
and
mov
jne
insb
ret
inc
pop
cmpsb
lahf
int
cmpsl
mov
xchg
push
leave
arpl
mov
sti
xor
iret
addr16
xchg
jns
andnps
cwtl
addr16
into
pop
and
ret
mov
dec
cmpsb
xor
add
xchg
pop
xchg
fldt
push
call
push
add
out
adc
insb
imul
adc
stos
lahf
add
rcll
in
mov
push
sub
mov
jmp
push
imul
push
dec
daa
scas
loopne
iret
jmp
icebp
xchg
pop
jle
push
mov
mov
sbb
xor
popf
jg
inc
wrmsr
mov
jae
and
push
push
mov
int
xlat
and
arpl
out
cmp
gs
lea
les
pop
shr
mov
sbb
iret
popf
mov
xchg
clc
dec
xor
jnp
mov
push
repz
addr16
ret
out
jo
dec
mov
jns
pusha
push
push
data16
mov
pop
jb
lahf
inc
fsubs
mov
out
movsl
ss
ljmp
xor
push
mov
pushf
and
imull
aaa
pop
jb
sbb
test
inc
test
pusha
popf
xchg
sahf
sbb
clc
jp
test
nop
jge
push
or
iret
pop
std
mov
pop
fcomps
in
and
xor
int
lods
jl
push
pop
cmc
push
fisubrl
cltd
out
jle
js
loope
xor
hlt
xchg
mov
in
xchg
inc
rolb
arpl
scas
push
lods
pop
or
sub
mov
or
jns
sbb
mov
scas
mov
lret
fldcw
xlat
andl
pushf
jmp
jp
ja
jnp
and
enter
daa
rcrl
cli
adc
adc
daa
cli
mov
in
pop
jns
lods
int3
adc
out
imul
push
dec
imul
sub
pop
mov
test
mov
mov
aaa
or
push
out
adc
xor
mov
sbb
lods
mov
rcll
pop
xor
test
xor
divl
xchg
cmp
fwait
popf
test
insb
inc
sub
test
int3
popf
mov
cmp
subl
jae
mov
push
or
mov
mov
shrl
mov
lret
dec
push
test
dec
sti
and
sbb
cwtl
shlb
jp
aaa
cmp
push
and
icebp
es
sbb
ds
mov
mov
jp
pop
ss
movsb
mov
shll
pop
dec
inc
jae,pt
mov
dec
pop
cwtl
mov
mov
sti
pop
aaa
inc
dec
idivl
jecxz
ret
pop
negl
dec
in
aaa
sti
xchg
pop
add
in
jecxz
imul
push
fs
cmc
idivb
push
jne
add
and
mov
popa
stos
aas
lahf
lods
ret
push
gs
ja
leave
ss
adc
sub
loope
out
aas
mov
xor
dec
gs
jp
sub
adc
icebp
dec
dec
out
xchg
xor
cmc
jbe
pop
popa
out
mov
xor
sub
push
shr
pop
mov
xchg
adc
out
dec
mov
mov
loop
xchg
pop
and
sbb
insb
dec
shll
outsl
stos
mov
pop
adc
mov
shl
push
pop
jmp
ret
xor
xor
push
test
inc
lods
or
dec
mov
adc
push
mov
xchg
inc
xorl
in
xlat
xor
and
dec
mov
xor
dec
push
mov
popa
pop
pcmpgtw
cmpsb
cli
ds
push
push
mov
cmp
add
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
mov
pinsrw
rsm
jl
movsl
or
push
xchg
sub
in
inc
shrb
mov
jo
notb
cmpsl
mov
and
adc
lds
jmp
or
pop
push
in
aaa
rolb
movsb
insb
xorb
shlb
sbb
add
pop
clc
xor
sbbl
pop
jmp
xchg
pop
xchg
aam
push
ret
jb
push
jmp
jge
pop
inc
mov
cmp
mov
js
mov
out
lret
sahf
mov
mov
jle
subb
dec
jnp
xchg
mov
and
in
pop
add
cli
imul
dec
fwait
sti
mulb
push
dec
imul
lahf
push
xor
sub
fistpl
inc
xor
xor
jbe
push
mov
nop
sbb
adc
dec
ss
test
lock
or
mov
lods
xchg
in
jb
stos
pop
xor
daa
sbb
adc
jnp
dec
daa
fstpl
or
in
lds
xchg
js
addr16
push
push
enter
idivl
jecxz
jp
xchg
inc
cltd
lock
push
aam
shlb
push
push
jns
mov
push
not
and
and
sar
aam
sbb
dec
test
jp
out
jne
ret
cmp
sub
xchg
movl
aas
imul
jnp
es
sahf
inc
sbb
iret
mov
xchg
dec
jno
push
sbb
aad
lock
lahf
lret
out
push
jp
aad
test
inc
daa
jne
insb
adc
repz
mov
push
inc
xor
inc
adc
mov
divb
lret
and
jae
out
mov
sub
mov
jl
cs
imul
sbb
or
shll
mov
stos
aam
adc
pop
xchg
addr16
sub
pop
mov
or
cmp
cmp
cmpsb
scas
sub
xchg
addr16
insb
fmuls
ja
adc
jnp
stc
push
adc
insl
mov
outsl
mov
mov
push
xchg
push
push
push
data16
mov
lods
icebp
jo
or
sahf
sti
cmp
mov
cmc
jecxz
dec
sbb
push
fsubl
les
lcall
dec
adc
in
mulb
ljmp
sbb
or
or
sub
cmpsl
push
jnp
dec
jmp
int3
cmp
jle
mov
pop
adc
pop
lods
insb
inc
xlat
dec
sbb
inc
mov
dec
je
decb
mov
mov
addr16
andl
jne,pt
js
mov
int3
out
or
out
mov
fdivl
xor
xchg
jbe
jnp
mov
mov
dec
sbb
adc
ror
ljmp
fisubl
flds
jae
push
cmp
test
test
jo
cmp
lods
pop
ret
or
enter
in
lea
lock
insl
fldt
push
out
jge
fsubrs
pop
lret
fwait
and
mov
pop
cmp
stos
and
dec
pusha
fwait
jp
cmp
out
mov
addb
xor
fstpt
mov
repz
jae
dec
add
cmpb
jp
xchg
and
xor
scas
jmp
push
mov
clc
mov
pop
mov
mov
sub
out
mov
cmpsl
stc
out
in
call
imul
mov
mov
call
mov
dec
sarl
ret
dec
mov
xchg
jae
fldenv
mov
add
sbb
les
scas
push
popa
cs
dec
xchg
roll
cmp
add
push
ljmp
dec
dec
cmp
and
inc
pop
mov
mov
je
fsts
ljmp
sub
adc
stos
cwtl
mov
fs
pop
lcall
fwait
mov
mov
mov
push
rcr
outsb
xchg
pushf
in
or
or
cmpsl
andl
stos
push
sbb
jecxz
inc
les
lods
sbb
xchg
jge
pop
sub
int
lock
into
sbb
nop
or
dec
sbb
cmpsb
dec
pop
xor
sti
in
test
les
fbstp
fnstcw
into
or
mov
cmp
cmp
rol
shlb
xchg
mov
test
jge
shlb
mov
or
mov
inc
lret
pop
pushf
adc
push
fbstp
jbe
out
jge
and
pop
insl
jge
push
lods
sub
inc
cs
lahf
jg
ds
out
aad
mov
jp
sbb
push
cmp
repz
mov
push
push
or
mov
test
gs
cmp
add
pop
std
inc
pop
fbstp
add
mov
xchg
insb
stos
shufps
arpl
add
pop
inc
mov
xor
test
jne
adc
xchg
hlt
xor
xchg
fs
xlat
lock
es
inc
push
jae
and
or
mov
add
enter
sub
cmp
out
cld
and
notl
loop
add
out
jo
into
adc
mov
pop
jmp
repz
jp
sarl
dec
div
lret
repnz
xorb
testb
mov
push
mov
filds
shl
movmskps
xorl
loopne
sub
shlb
xchg
jbe
stos
pop
into
and
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
pop
scas
stc
mov
add
movq
push
or
add
mov
movsl
in
dec
or
add
lods
mov
add
cmp
mov
cli
mov
aaa
je
shll
mov
ss
and
in
out
stos
rorl
sub
xchg
out
vpmadcsswd
xlat
xchg
stc
xchg
xor
addb
push
add
out
jmp
pop
mov
out
mov
push
xchg
lcall
mov
lds
pop
shll
aaa
jnp
outsl
sub
data16
pop
mov
jle
xor
push
adc
push
pop
sbb
movsl
test
jmp
mov
mov
pusha
pop
fistpll
cmpxchg
jns
roll
mov
int
cmpsb
out
xchg
fwait
xchg
push
cmpb
xchg
dec
pop
mov
inc
rcll
dec
scas
dec
lods
or
in
adc
aaa
lods
jae
jae
mov
mov
testl
and
daa
mov
mov
cli
dec
pushf
push
pop
lods
xor
es
mov
and
shlb
loope
jnp
stc
adc
dec
inc
jl
dec
jge
ja
in
mov
xor
std
fsubs
and
inc
jle
orl
mov
mov
dec
adc
mov
adc
test
or
pop
xchg
call
adc
pushf
pop
jg
xor
dec
rol
jbe
fwait
xlat
push
adc
test
js
test
fcomp
aaa
call
adc
xchg
jmp
mov
int
sbb
xchg
push
sbb
out
jg
and
nop
sbb
aad
fwait
in
hlt
iret
fdivl
loope
movsb
mov
daa
cmc
ja
cmp
mov
sub
cmp
jo
ret
imull
sbb
mov
js
inc
inc
insl
in
lcall
or
cmp
ja
mov
mov
bnd
adc
dec
xchg
arpl
cs
mov
ss
push
or
movsb
xchg
or
negl
lahf
mov
cmp
sub
pop
sahf
lret
mov
ret
push
push
mov
push
dec
push
push
pop
dec
imul
inc
xor
dec
jecxz
clc
push
mov
inc
push
dec
adc
ret
dec
mov
sahf
pop
cmpl
out
xlat
push
cmp
adc
sub
jbe
sbb
insb
mov
cmp
add
or
jns
stos
arpl
mov
cmpsb
or
or
mov
mov
les
stos
lret
outsl
in
xchg
leave
mov
sarb
sti
andb
mov
rol
jno
push
sbb
int3
mov
ds
fnstsw
pop
cmp
out
outsb
jmp
pop
sub
or
in
aaa
out
out
mov
int
xchg
leave
xorl
lea
sbb
mov
les
pop
mov
inc
dec
fstpl
sahf
adc
mov
xchg
loop
ds
fidivs
stc
push
test
xor
xchg
or
push
cmpsb
add
test
das
enter
ss
cld
push
addr16
jns
pop
xchg
clc
xabort
shl
fadd
add
js
add
adc
jns
xchg
or
stc
mov
and
lahf
orb
lahf
xor
mov
insb
leave
popa
and
mov
xor
enter
adc
push
scas
jb
xor
scas
adc
outsl
es
lods
pop
xchg
mov
popa
jle
mov
lret
inc
scas
push
outsb
xor
filds
in
in
xor
sbb
mov
cmp
pushf
popa
out
in
call
push
dec
shll
lock
pop
push
pop
or
mov
iret
pop
inc
and
inc
mov
inc
mov
fwait
mov
iret
inc
stos
push
imul
out
pop
mov
int
ds
jecxz
mov
in
mov
mov
or
incb
fldcw
bound
or
and
pop
subb
ss
xchg
or
dec
cmp
mov
adc
or
and
punpckldq
sub
or
roll
iret
mov
push
pop
test
cwtl
sub
inc
xchg
test
jo
bnd
pop
or
jno
aam
sbb
mov
xchg
leave
mov
xor
scas
data16
imul
adc
xor
lret
test
mov
adc
mov
push
aaa
push
jmp
adc
cmpw
mov
ds
adc
inc
lods
adc
pop
fsubs
int
pop
pop
arpl
loopne
iret
push
jl
ret
jns
in
mov
scas
pop
push
dec
arpl
stos
add
sub
fwait
adc
hlt
into
and
fmuls
mov
cmpl
daa
addr16
push
lsl
movsb
lmsw
popf
push
lds
mov
adc
pop
arpl
mov
sub
outsl
and
leave
pop
jmp
adc
sbb
xchg
or
inc
push
addb
aam
shrb
movsb
aad
ficoml
push
cmp
cltd
hlt
lds
mov
dec
mov
pop
js
lods
stos
jb
scas
dec
inc
adc
mov
imull
mov
push
fwait
scas
daa
push
or
add
aaa
or
xor
jmp
and
pop
inc
add
rorb
xchg
mov
loopne
xchg
xor
int3
pop
fst
leave
in
fs
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
js
mov
data16
pinsrw
bndldx
and
pop
pop
pop
movsb
sub
adc
arpl
or
add
lahf
pop
cmp
clc
lea
cmc
lret
int3
pop
mov
notb
ret
dec
push
lock
mov
ljmp
ret
sub
je
rclb
popa
fistpll
insl
or
sub
cs
xor
mov
iret
fistl
xchg
push
pop
js
jecxz
mov
mov
pop
adc
fwait
loop
jle
aas
cmpsb
hlt
adc
jl
inc
xlat
jge
stos
aaa
movsl
add
inc
repz
add
pop
jmp
pop
lret
dec
popf
mov
or
insb
data16
int
xor
jno
gs
call
pop
imul
jns
mov
dec
push
xchg
sbb
push
pop
lcall
mov
int3
repnz
lds
ja
pusha
push
sub
ret
aas
mov
inc
mov
fbstp
inc
rol
rcll
out
shll
sbb
lds
fs
sbb
pusha
mov
jne
push
adc
inc
je
xor
adc
cmc
cmp
shl
ret
jecxz
mov
adc
dec
xor
data16
jae
sub
adc
js
bound
call
std
jle
mov
mov
mov
addb
jmp
sbb
xchg
add
ljmp
repz
out
add
mov
xor
mov
xchg
stc
notb
xor
lock
sbb
dec
popf
jb
sub
dec
push
inc
out
pop
fistpll
adc
and
outsl
imul
int3
adc
outsl
iret
lods
adc
ret
int3
or
sahf
jmp
enter
fsubs
pop
ret
jge
add
mov
dec
mov
mov
addl
jge
xchg
push
jge
jl
pop
xor
pop
daa
scas
adc
daa
lock
pop
out
ficomps
cmpb
sbb
push
mov
leave
icebp
cli
hlt
cmp
insb
ljmp
jns
imul
push
sub
pop
int3
popa
mov
fcoms
inc
into
jns
push
lret
cmp
lock
aad
pusha
popa
lds
mov
push
aas
mov
loopne
int
cwtl
pop
test
movsb
scas
xchg
lcall
popf
mov
sbb
add
inc
or
arpl
xor
xchg
or
fwait
add
mov
scas
mov
ficomps
lods
lcall
test
mov
fnstsw
jg
fwait
cmpsb
adc
mov
ret
xchg
shll
rorb
mov
dec
or
cmp
xlat
pop
mov
and
dec
cwtl
sbb
adc
push
sub
mov
push
sarb
lods
add
cmp
push
les
sti
sbb
add
shlb
imul
xor
stc
in
pop
faddl
enter
mov
push
mov
pop
int3
mov
rcl
inc
faddl
out
pop
mov
jg
flds
pop
sub
adc
and
stos
push
dec
pop
in
jp
ja
mov
mov
out
ss
sti
and
mov
inc
fcmovnb
xor
mov
in
shrb
ja
sbb
dec
inc
scas
and
mov
and
push
jns
fldt
and
mov
mov
arpl
jge
adc
fwait
adc
aas
xchg
js
out
leavew
scas
jge
hlt
push
loopne
in
xchg
fs
mov
jbe
sti
roll
aam
popf
mov
push
jmp
mov
fstpt
cltd
pop
and
jp
and
out
mov
ss
ja
or
por
jge
xchg
ss
mov
cmp
push
fildl
outsl
ja
push
out
outsb
push
pop
icebp
dec
popa
gs
insb
ret
inc
or
jnp
mov
scas
into
andl
sub
inc
pushf
xchg
mov
adc
mov
enter
xrelease
push
aad
sbb
xchg
cmc
ret
testl
add
outsb
or
jl
push
adc
addr16
and
pop
jae
out
sbb
imul
jle
inc
push
add
aad
push
mov
dec
lret
or
pop
lea
jmp
pop
jns
sbb
stos
cmp
push
jecxz
fistpl
aas
and
popa
imul
testb
iret
fmul
dec
aam
inc
sbb
xchg
ds
inc
es
daa
cli
lret
inc
xor
pushf
adc
lea
mov
adc
or
xlat
or
mov
push
icebp
arpl
jne
out
adc
mov
and
rclb
insl
int3
pop
xor
fildl
xchg
dec
mov
sub
js
push
sbb
test
dec
jecxz
cltd
adc
fsubrs
test
out
mov
dec
std
cltd
or
das
mov
ds
sub
iret
xchg
mov
inc
push
imul
jnp
test
mov
add
out
jg
mull
mov
dec
inc
in
incl
pushl
subl
mov
mov
xor
jne
test
mov
mov
pushf
int
enter
push
adc
adc
pop
sbb
ljmp
lods
jnp
je
scas
mov
push
ret
xorl
adc
inc
xor
jecxz
mov
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
in
jae
mov
pushf
pinsrw
psubusw
sahf
mov
mov
cltd
push
test
pop
pop
push
clc
cmp
jp
cld
lock
rsm
mov
test
inc
dec
js
mov
andl
and
inc
jns
mov
adc
outsb
and
mov
repz
cmp
je
fs
pop
test
or
leave
idiv
subb
ror
ret
fsubl
out
stos
pusha
cmp
cmp
xchg
repnz
cmp
lret
mov
daa
sbb
pop
xchg
push
or
mov
jle
adc
inc
enter
in
xchg
loopne
outsb
inc
jmp
mov
stc
inc
inc
hlt
mov
mov
sbb
or
leave
cmp
push
or
dec
mov
icebp
sub
call
fiadds
cmc
push
pop
loopne
test
cmpsl
sub
jl
inc
and
mov
mov
mov
outsl
xchg
pop
ljmp
dec
int
adc
jns
mov
xchg
std
jb
scas
leave
bound
xchg
inc
adc
stos
dec
cmpsb
xor
out
dec
cmp
xlat
notl
pop
jge
sti
in
mov
adc
aad
inc
cmp
mov
into
arpl
xor
dec
sbb
sbb
xor
xchg
test
shlb
clc
adc
jo
pop
subl
bound
ret
sbb
xchg
arpl
cmpsb
cmc
mov
hlt
xchg
sbb
sahf
mov
in
dec
add
cmp
push
ret
imul
push
pop
mov
adc
lret
jp
pusha
add
lods
sbb
rcrl
mov
xor
clc
flds
and
push
addr16
lret
insl
lock
pop
mov
dec
sub
jp
dec
lock
inc
rcrb
stc
std
and
add
or
dec
and
arpl
jge
sbb
dec
mov
inc
inc
cmc
pop
cmp
lods
repz
or
int3
std
inc
lret
xor
icebp
movsb
mov
inc
mov
mov
mov
xchg
and
push
lea
pop
clc
repz
push
shr
mov
popf
roll
ja
mov
sbb
icebp
mov
mov
cld
add
out
data16
push
aas
push
fxch
jl
notb
mov
lret
sub
mov
xchg
addb
lret
into
pushf
xchg
cmpsb
and
cli
xor
in
xor
jmp
sbb
ljmp
idiv
mov
mov
iret
inc
leave
lret
outsl
xchg
shlb
imul
cmp
sub
and
dec
out
push
push
cmp
mov
out
hlt
lock
div
aaa
jbe
and
pushf
jmp
lret
mov
rcl
xlat
ret
lods
loop
mov
mov
adc
loop
mov
inc
push
push
andl
push
mov
and
xor
nop
mov
insl
insb
daa
mov
pop
fndisi(8087
in
stos
jg
xchg
mov
mov
popf
push
adc
xchg
aad
sub
sbb
icebp
test
imul
lods
inc
out
jp
push
fisttpll
mov
xor
pop
pushf
push
hlt
ret
lret
out
sbb
dec
mov
or
ljmp
mov
pop
mov
dec
mov
repnz
push
bound
insb
cmpsl
jecxz
mov
adcb
xchg
mov
rol
inc
out
jns
lea
cmpsb
ffree
xchg
mov
shl
int
out
add
lcall
and
xor
mov
push
fucom
or
call
and
scas
mov
sub
add
imull
xlat
in
fists
inc
or
ljmp
sub
leave
bound
jne
add
push
xchg
mov
sbb
push
inc
aaa
pop
mov
jns
push
mov
cmp
cmc
xor
inc
sub
andb
jnp
pop
mov
test
add
cmp
jne
and
popa
shr
sub
testl
iret
cs
lds
push
shrl
xchg
and
jae
cmp
jae
ljmp
stc
xlat
jge
pop
lahf
pop
sahf
aaa
cwtl
mov
insl
in
dec
and
xchg
jbe
cs
sbb
sahf
negl
test
xor
jge
out
cmp
fistl
mov
scas
jns
popf
mov
andl
fsubl
outsb
sbb
add
dec
sbb
mov
pop
pop
movsb
and
pop
insl
dec
mov
mov
ss
sahf
dec
mov
int3
jg
orb
aam
enter
sub
cmp
or
jnp
lret
das
mov
or
sub
lods
daa
adc
int3
sub
arpl
adc
testb
mov
add
jb
lret
sahf
je
divl
jle
mov
enter
iret
icebp
cmp
insl
xor
not
mov
inc
dec
jo
mov
push
inc
jg
lea
aam
mov
xchg
mov
repnz
iret
add
lods
testb
push
add
xchg
int
inc
imul
dec
in
movsb
or
inc
mov
pop
lods
loope
cmp
xchg
or
xchg
mov
push
test
dec
sub
leave
cli
jnp
rcrb
adc
sbb
movsl
jp
xlat
pusha
js
and
rorb
xor
nop
movsb
int3
rcrb
and
rorl
out
lea
mov
dec
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
shrl
pinsrw
setl
mov
sahf
popa
in
movntq
sbb
rol
popa
testl
in
fucom
dec
cld
movb
cmc
subl
push
cmpsl
loopne
jbe
jne
movl
or
fstl
fcoml
sub
mov
pmuludq
dec
cmp
ret
cmp
dec
icebp
in
sbb
jb
subb
js
rorl
lahf
int
mov
xchg
pop
adc
xchg
test
dec
das
sahf
dec
push
dec
or
pop
ret
fs
push
add
add
lret
xor
int3
clc
mov
push
jns
pop
cmp
subl
divb
cmp
lahf
pop
stos
std
dec
adc
push
fcoms
ficomps
pop
imul
mov
add
jl
push
add
mov
adc
inc
push
stos
out
mov
inc
filds
mov
lea
fildl
sbbb
push
fsubs
rcrl
push
int3
jae
cmc
das
into
mov
sbb
mov
inc
sub
inc
adcl
adc
outsl
les
mov
push
aas
pop
rclb
out
negl
push
jo
repz
push
pushf
xchg
or
inc
rolb
out
fidivs
mov
sbb
jecxz
sub
lret
add
je
sbb
data16
sub
xor
ss
aad
inc
push
in
outsb
test
cwtl
outsl
subw
xchg
and
out
gs
in
negl
mov
push
ficompl
insb
jg
jg
push
pop
loope
dec
int3
out
xlat
repnz
push
inc
push
in
mov
xorb
fcom
mov
dec
and
sbb
shll
and
dec
dec
jae
sbb
aaa
mov
imul
les
mov
insl
inc
es
mov
jo
cmp
push
xor
add
cmp
xor
scas
push
leave
movsl
sahf
mov
imul
outsb
mov
divl
cmp
jg
clc
and
pop
cmp
jecxz
int
pop
sti
jge
push
in
out
bound
mov
add
lock
inc
mov
lods
and
es
aaa
mov
std
adcl
rdtsc
adc
mov
jne
shl
mov
shlb
add
sbb
xchg
cli
sbb
sbb
out
les
test
push
pop
test
or
push
out
add
lds
mov
jecxz
cmp
xchg
mov
int3
xchg
andl
add
movsl
fwait
int
mov
cmpsl
dec
push
popa
sbb
shl
pop
xchg
adc
std
push
shlb
movsl
mov
aad
add
jnp
fwait
jecxz
sarb
out
pop
xchg
add
fwait
stos
pop
ret
mov
loop
lds
leave
mov
push
movsb
jl
outsb
jno
pop
std
sbb
push
jg
lock
sub
pusha
jb
mov
xor
fadd
mov
inc
inc
dec
dec
xor
inc
pop
or
or
dec
nop
fdivrp
fcomip
push
fwait
xchg
xchg
int
push
xor
pop
inc
or
pop
outsl
mov
adc
lods
mov
push
push
xor
mov
push
shll
mov
cltd
inc
sahf
ret
cmc
jmp
and
popf
xchg
icebp
mov
pop
in
ret
sbb
clc
or
lret
sub
jge
cmp
je
dec
mov
pop
fidivrl
jns
mov
in
lret
fucom
fsubrl
imul
dec
inc
inc
lods
inc
mov
mov
shlb
push
out
repz
repz
or
cli
pop
insl
cmp
aaa
dec
pop
inc
lahf
mov
roll
sub
fwait
or
pop
push
icebp
mov
or
xchg
int3
ja
stc
test
xchg
add
lds
jmp
scas
sti
adc
push
cwtl
cmpsb
imul
adc
or
ds
xlat
xlat
dec
xor
add
ret
mov
or
add
int3
xchg
add
push
popa
push
and
add
das
adc
std
adc
jnp
sbbl
sub
xor
or
pop
pop
pop
sbb
mov
push
in
test
pop
pop
dec
mov
inc
add
sti
jl
icebp
push
out
ss
xchg
insl
mov
xchg
std
pop
aaa
iret
out
pop
fiadds
push
dec
lret
push
push
push
iret
sbb
aam
je
mov
sub
pop
es
mov
xor
orl
sarl
test
das
dec
mov
outsb
addr16
int
cmp
daa
frstor
je,pt
jle
out
xchg
sub
push
xchg
mov
mov
movsl
les
mov
movb
sbb
pop
shll
out
xor
sbb
jge
mov
sbbb
cwtl
pop
cmp
sub
fnstcw
inc
add
mov
loope
xor
call
daa
js
xchg
sub
mov
pop
outsb
mov
cmp
jmp
inc
out
bound
jmp
sub
sarl
out
or
lock
pop
jae
inc
cmp
aas
jae,pt
test
int
and
pop
jno
out
ljmp
imul
loopne
cmp
jl
jae
push
inc
inc
add
loop
jo
subb
dec
les
and
and
pushf
fwait
add
mov
xor
or
push
add
test
inc
pushf
adc
push
sub
scas
inc
je
adc
fisttps
or
mov
adc
and
cmp
cli
sub
mov
push
shlb
dec
cmp
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
mov
push
adcl
hlt
lea
daa
push
sti
nop
lcall
dec
jg
notl
xchg
xorb
adc
ret
mov
push
mov
lahf
hlt
add
push
test
or
cmp
mov
xchg
adc
inc
outsl
mov
iret
sbb
aaa
stos
sbb
or
pop
in
sar
mov
test
insl
pop
lret
mov
lods
int3
mov
js
pop
in
stos
scas
push
and
cwtl
lret
lcall
adc
sub
in
scas
mov
leave
mov
pop
cmp
iret
scas
pop
mov
cmp
xlat
rorb
arpl
mov
iret
push
inc
jbe
sbb
fnsave
mov
or
jg
sti
mov
pop
pop
movsl
xchg
mov
add
es
lahf
mov
sti
fsubrl
leave
or
push
lret
add
lret
cli
and
add
inc
cs
fmull
test
shll
pop
and
mov
jle
rcrl
into
mov
adc
sub
fnstenv
adc
pusha
loop
xor
xor
fistpl
aas
push
fbstp
xchg
ja
repz
mov
in
jo
push
and
dec
add
mov
test
pop
adc
mov
dec
mov
cltd
cmpsl
mov
movsb
in
ret
cmp
mov
mov
pop
mov
cmp
dec
sbb
in
fimull
mov
or
loop
aad
mov
jnp
les
cmp
fmuls
shrb
gs
dec
rcrl
arpl
sub
scas
jmp
fisttpll
popa
push
nop
mov
mov
cmp
rclb
insl
fnstenv
js
mov
sub
push
pushf
jns
lds
das
and
xor
test
pop
not
mov
mov
das
test
adc
addr16
gs
hlt
lret
sbb
std
in
imull
jl
in
out
lods
jmp
sub
mov
ja
add
notb
mov
push
sbb
add
test
xchg
shrl
xor
add
jmp
jo
dec
stos
stc
dec
test
aas
xlat
fimull
xchg
jg
jns
clc
pop
cld
adc
pop
lds
mov
aas
cli
pop
cld
icebp
leave
mov
outsl
or
dec
mov
comiss
dec
in
add
dec
mov
inc
push
aas
xchg
dec
lock
xchg
test
stos
mov
fdivs
imulb
pop
ret
xchg
and
pop
xor
xor
cmp
ret
pop
add
add
push
jae
aas
inc
jl
jb
dec
call
push
sub
mov
dec
ret
jge
loop
cltd
mov
leave
dec
testl
sbb
push
mov
negb
cmpsl
sti
in
jno
sti
push
leave
xor
mov
push
pop
mov
adc
add
lahf
stos
adc
lret
into
push
enter
gs
lret
push
ret
add
fs
fimuls
test
pop
clc
sbb
das
insl
inc
jl
mov
fdivp
mov
bound
stc
sub
pop
mov
fs
mov
sbb
jae
push
mov
shl
bound
cli
inc
sbb
cwtl
test
push
jne
push
test
lods
int
mov
jle
sbb
test
pop
mov
faddp
and
xor
sbb
addr16
adc
jle
lret
add
cmp
and
into
movsl
sub
cmpsl
stc
jmp
mov
adc
jecxz
mov
xor
add
jg
sbb
inc
jg
sbb
add
aaa
mov
lahf
push
lret
ret
mov
in
or
inc
mov
and
outsb
mov
outsl
dec
or
pop
and
inc
movsb
lcall
and
mov
mov
cmp
loopne
fcomps
lret
mov
jnp
pop
inc
pop
mov
fistpl
add
imul
mov
mov
std
xrelease
inc
cmc
shrl
std
inc
in
pop
aaa
or
jne
xchg
dec
cmpsl
push
insl
dec
rcr
mov
shrl
jcxz
dec
xor
shll
xlat
pop
or
clc
cwtl
fldl
inc
fdivr
xor
cmp
pop
outsl
dec
inc
aaa
pop
fstpl
xchg
sbb
mov
pushf
in
out
xchg
sahf
jno
fchs
push
or
pop
ds
repnz
add
add
ss
or
inc
add
xchg
fmull
mov
rol
cli
in
shlb
popf
rcrl
lea
lods
mov
pop
pop
push
daa
cltd
addb
push
jo
pop
out
ret
roll
repz
bound
push
shlb
or
dec
in
xchg
int
rolb
xor
mov
or
inc
jns
add
mov
insl
mov
jno
nop
popf
sub
cwtl
outsl
rolb
cmp
jg
dec
adc
sbb
je
fcomi
jns
push
push
cmpb
fs
jmp
scas
push
fcmove
lahf
aas
ret
enter
in
icebp
decl
jl
dec
ficoml
push
out
sbb
cmc
mov
loope
dec
cmp
ljmp
mov
fcmovnb
cmpsl
out
inc
ja
mov
pusha
xchg
cmpsl
pushw
add
or
pop
dec
loop
jae
cmpl
sbb
mov
push
cmp
ja
jecxz
rcl
fbld
push
stos
inc
cs
adc
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
pop
pop
xchg
add
mov
mov
ljmp
stos
fcompl
inc
mov
inc
pop
pop
jmp
imul
cmp
int3
adc
mov
pop
cli
mov
sbb
mov
insl
jmp
aas
repz
iret
clc
mov
inc
push
add
cmc
mov
and
mov
fldt
mov
in
jne
mov
dec
shl
lret
call
sbb
lock
pop
fdivl
ljmp
std
lcall
gs
fstpt
cmpsl
jb
lret
fisttps
std
sub
stos
and
pop
xor
or
mov
add
js
lea
xlat
test
adc
fiaddl
popf
adc
mov
rorl
add
mov
imul
or
dec
gs
fwait
ret
push
pop
test
je
cmp
mov
xlat
mov
stos
push
cmp
pop
cmp
xlat
icebp
xor
dec
jl
dec
roll
jbe
in
sbb
jnp
outsl
call
xor
sub
inc
mov
jo
adc
outsb
aad
cld
push
sub
stos
and
jbe
mov
hlt
add
jg
jmp
cs
xchg
jmp
jno
pop
mov
jmp
popf
fdivrp
ficoms
jnp
fldt
xor
adc
mov
cmp
mov
in
mov
mov
mov
xor
popf
dec
or
stos
mov
sbb
rorb
out
lods
scas
aad
das
adc
out
popf
jl
or
xor
mov
cmpsl
dec
dec
xorl
mov
mov
enter
and
mov
into
xchg
mov
xchg
movsl
jb
xchg
cwtl
jnp
es
daa
hlt
jae
negl
fsubs
imulb
ljmp
testb
mov
je
mov
lret
sbb
std
xchg
sbb
push
pop
in
aad
mov
out
pop
jbe
inc
mov
mov
cmp
adc
ret
mov
stos
xchg
fld
mov
adcb
imul
enter
sbb
icebp
imull
shrb
inc
push
add
or
sbb
xchg
push
jae
bound
enter
dec
push
pop
xorl
mov
ror
rol
mov
std
add
pop
out
dec
adc
clc
add
adc
dec
push
ja
cmc
fisttpll
int3
or
test
pop
stos
xor
mov
jnp
adc
cltd
dec
sbb
iret
jp
jae
jb
loope
mov
in
in
aam
mov
jmp
xor
inc
pop
dec
daa
adc
xchg
dec
out
inc
adc
cmp
lods
daa
mov
mov
push
mov
andl
adc
sub
push
jle
xor
jnp
lret
push
push
or
mov
xor
jne
push
pop
fs
lret
aad
pop
popa
stc
mov
iret
jno
pop
das
cmp
inc
sahf
es
mov
pushf
movsl
ds
adc
cmpsb
insl
outsb
mov
xchg
mov
loope
pop
add
lcall
sbb
test
outsl
rorl
inc
cmp
sahf
adc
mov
inc
nop
add
pop
popa
jg
pusha
popl
loope
sbb
cltd
sub
push
mov
into
mov
outsl
jmp
mov
cmpsl
bound
jg
sti
pushf
and
stos
mov
frstor
lahf
leave
negb
andl
fdivrl
ror
pusha
mov
jg
cmp
mov
fldl
movsb
xchg
aas
cmp
rcrb
aas
mov
idivb
fists
mov
and
test
cli
repz
push
movsl
mov
cmp
cmp
std
pop
aaa
cmpsb
in
lods
test
inc
gs
insb
int3
mov
push
es
jl
mov
jg
add
push
popf
or
sub
dec
ret
cli
lds
xchg
lock
dec
stc
sbb
hlt
mov
sti
add
and
ja
ds
mov
and
mov
cmp
lret
inc
dec
ljmp
ret
push
es
mov
or
lods
mov
or
lea
pop
xchg
test
inc
cli
call
scas
es
sbb
sub
mov
dec
and
add
iret
xchg
cmp
call
inc
mov
inc
lret
pop
movsl
xlat
dec
add
inc
dec
pusha
out
data16
ljmp
push
out
psubd
lahf
sbb
cmp
jle
clc
add
sahf
xorb
sahf
and
lea
js
push
insb
adc
mov
iret
add
jbe
repnz
lret
xor
aaa
jle
je
xor
xchg
je
mov
mov
add
test
push
out
fs
nop
pop
sub
aam
shrw
repnz
rorb
xor
stos
cmp
mov
mov
mov
inc
push
mov
insl
outsl
outsb
or
pushf
push
scas
imul
mov
andb
add
lods
xchg
xchg
add
or
mov
nop
jmp
mov
rep
popf
bound
sbb
mov
in
jl
cmc
addr16
in
pop
push
or
std
adc
lret
in
push
pop
arpl
jp
adc
inc
aaa
sti
ja
push
mov
and
out
dec
out
or
rcrb
and
loopne
leave
fmull
mov
clc
mov
pushf
xchg
and
push
pusha
jns
push
outsl
jb
mov
adc
addl
jp
or
cmp
jns
fcoms
dec
or
std
fwait
ja
hlt
ret
xor
adc
in
xchg
push
cs
xor
sub
scas
pushf
lods
or
cmp
cltd
jb
push
in
lahf
adc
mov
fidivs
addr16
out
loope
dec
jbe
out
insl
add
mov
add
mov
ss
cmp
fstps
push
mov
mov
inc
in
pop
dec
adc
and
adcb
fwait
mov
ss
xlat
jp
push
mov
xor
and
adc
into
push
mov
sti
enter
mov
in
adc
push
testl
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
sub
repz
loopne
xchg
hlt
jns
orb
repz
sahf
out
add
inc
insb
or
jns
pop
pop
out
loope
test
orl
mov
mov
es
das
mov
lret
fnsave
and
push
sub
pop
imul
pop
inc
pop
pop
lds
jns
popa
insb
test
and
dec
inc
loopne
sbb
adc
ss
aad
enter
jecxz
fldt
cmp
mov
stos
sbbl
sbb
xchg
sub
pop
je
jl
nop
push
fbld
push
pop
std
es
and
movsl
jns
imul
js
imul
out
iret
add
ret
cmp
lcall
dec
in
add
sti
dec
jmp
test
cs
sub
out
sub
inc
cmc
dec
pop
das
xor
adc
les
jae
mov
int3
inc
sbb
les
push
jbe
or
int3
sbb
outsl
mov
mov
mov
mov
outsl
ret
out
adc
push
rorl
xchg
inc
cmp
out
sahf
das
mov
cmp
inc
jmp
jg
inc
scas
pop
dec
push
mov
jecxz
mov
mov
jo
adc
adcl
outsl
mov
xchg
cmp
gs
ss
mov
ret
or
scas
int
inc
xchg
xor
push
ja
scas
add
ljmp
jge
push
mov
test
xchg
test
sbb
pop
mov
mov
js
lds
mov
xchg
xor
inc
in
in
sbb
imul
pop
and
sahf
call
xchg
mov
add
xor
jne
pop
out
sub
xor
and
sub
loop
scas
jp
call
fcomip
dec
dec
and
lcall
lods
and
cmp
ds
jb
xor
and
shlb
in
stc
out
or
cld
sub
xchg
push
jo
mov
aad
ljmp
aad
loope
js
jmp
xchg
inc
mov
test
inc
jle
inc
in
sub
mov
add
lret
add
jl
sahf
xor
ljmp
pop
shll
loope
jle
call
xchg
test
icebp
adc
mov
mov
xor
mov
xchg
mov
jg
mov
inc
add
out
addr16
add
scas
mov
jae
insb
cmpsb
sbb
pop
jno
sbb
cmp
push
mov
inc
xor
fdivrs
xor
dec
leave
pop
add
pop
xchg
lahf
dec
inc
pop
sti
mov
loope
sbb
sbb
adc
loop
nop
pop
imul
jb
hlt
xlat
mov
popf
out
lods
test
in
aaa
scas
in
push
jns
sbb
xchg
add
cld
dec
push
into
hlt
cmp
insb
lret
mov
lcall
or
movb
daa
inc
jmp
pusha
inc
call
mov
pop
adc
sub
popf
xchg
repz
lea
mov
imul
or
mov
pop
sahf
pavgb
dec
int3
ss
enter
dec
das
mov
ljmp
push
mov
icebp
test
dec
and
cmp
lea
or
adc
imul
mov
push
adc
leave
pushl
sbb
inc
es
adc
cmc
sub
pop
jns
ret
mov
push
add
add
xchg
lret
mov
pop
scas
inc
push
stos
pop
pusha
xchg
mov
xchg
fisttpl
leave
sbb
fimuls
insb
cmp
sub
mov
dec
mov
sub
subb
jno
push
fmuls
daa
cmp
popf
popa
xchg
adc
shl
inc
in
mov
push
out
dec
mov
repnz
push
add
pop
scas
sbb
jge
add
xor
loop
sbb
dec
inc
fidivl
js
push
nop
rolb
mov
repz
and
fucom
pop
test
lret
sbb
pusha
pushf
fimuls
dec
mov
mov
mov
js
adc
shlb
inc
xchg
inc
xchg
ss
pop
pushf
out
js
sub
push
les
sub
in
sbb
cltd
mov
add
sbb
pop
outsl
or
push
xchg
gs
push
sub
fs
mov
inc
xchg
aam
push
xor
xorl
ret
pop
into
xchg
inc
cmp
lcall
add
sbb
lret
bound
adc
xchg
dec
bound
xchg
pop
push
mov
mov
xchg
stos
or
push
sub
inc
mov
sub
sbb
dec
sub
xor
and
jo
lret
je
inc
out
sbb
sub
jne
shlb
repnz
je
sahf
add
cltd
repnz
pop
ljmp
out
bound
int
sub
dec
push
cmp
inc
jnp
jo
outsb
movsb
rolb
jecxz
lods
enter
mov
ljmp
out
pop
fmul
fs
pop
adc
mov
cmp
mov
mulb
jb
test
jmp
test
ret
jbe
or
xor
fimull
xorb
push
and
clc
cli
fldl
pop
inc
pop
cmc
push
xor
sbb
fs
popa
push
enter
xchg
cmpsb
inc
test
insl
ljmp
adc
push
and
dec
push
mov
sub
add
dec
mov
or
je
cmp
loopne
xchg
mov
roll
mov
mov
fdivrs
and
shll
jo
sub
imul
mov
lahf
int3
lret
lods
mov
mov
ret
lock
mov
xchg
call
js
icebp
or
fsubl
gs
mov
pop
out
add
push
fmul
add
push
mov
fwait
std
hlt
fdivrs
push
sbb
or
mov
mov
inc
mov
jmp
xchg
dec
mov
lods
mov
pop
dec
jmp
push
ljmp
xchg
dec
jmp
lahf
divl
out
jno
jp
sbb
cld
insl
js
stc
divb
mov
jp
xchg
inc
imul
cmp
call
test
mov
inc
ss
movsl
adc
jl
dec
cmc
dec
inc
lock
pusha
mov
add
adc
add
movsb
jp
sub
xchg
addr16
enter
sarb
sub
inc
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
or
stos
pop
add
mov
cmpsl
enter
push
xchg
add
pusha
mov
scas
shll
call
pop
push
pop
popl
inc
inc
mov
sbb
dec
testl
setge
mov
or
and
fwait
negb
xor
push
adc
enter
sti
lcall
xor
xlat
out
leavew
xor
jb
pop
sahf
lea
sahf
aam
test
jmp
fistpll
mov
mov
test
or
adc
fstps
shl
flds
popf
fadds
jo
add
outsb
mov
mull
pop
int
mov
pop
test
call
adc
sar
sbb
jnp
adc
loopne
arpl
pop
adc
mov
test
lods
aam
fidivrl
fsubs
pushf
test
mov
inc
ret
data16
pop
gs
test
test
sbb
adc
adc
add
jnp
divl
mov
sti
mov
cmp
enter
dec
bound
sbb
subl
scas
out
sbb
enter
nop
cmp
xor
inc
mov
out
push
add
mov
pop
add
out
mov
sub
push
or
ret
push
cli
push
fimuls
in
jl
xchg
cmp
hlt
mov
mov
inc
mov
inc
daa
cmc
out
push
mov
dec
test
in
pop
fisubs
lods
loope
dec
call
cmc
sub
sub
in
xor
mov
cmpsl
xor
push
mov
push
and
sub
ljmp
push
or
pop
out
cmc
lret
insl
add
das
clc
xor
jp
insb
fwait
mov
sar
mov
loopne
mov
test
xlat
dec
lods
sti
andb
jle
adc
mov
dec
or
mov
imul
outsl
cmp
mov
cli
loop
and
pop
ret
sub
mov
cmp
push
cmpsb
sti
cmpl
sahf
aam
aam
inc
xchg
call
or
mov
adc
xor
icebp
mov
int
cmp
fiadds
clc
aam
add
movsb
lcall
pushf
stos
sbb
push
movsl
loope
aaa
mov
setns
inc
jne
push
pop
and
bound
sub
fwait
test
pop
add
fists
fisttps
jg
cmp
aam
call
insb
aaa
test
or
sarl
inc
lret
mov
movsb
lods
insl
jge
pusha
test
loopne
jns
inc
imul
jbe
sbb
cmpsl
sahf
or
arpl
adc
adc
in
jne
enter
js
out
call
add
clc
stos
lcall
inc
shlb
pop
add
mov
push
jecxz
mov
xor
or
cs
push
scas
leave
fcmovbe
fldl
pop
ret
sbb
ud0
push
std
int3
add
pop
repz
or
sub
xchg
lods
shlb
mov
int3
stos
outsb
faddl
lock
or
cmpsb
mov
aad
ja
fisubl
pop
loop
or
lret
pop
les
push
push
dec
inc
shrb
inc
lret
sub
dec
adc
nop
xor
test
push
cmp
xchg
inc
negl
cs
fbstp
pusha
xchg
mov
jbe
mov
inc
sbb
mov
fwait
or
xchg
push
arpl
fildll
xchg
loop
xchg
jns
fidivrl
pop
sbb
daa
out
bound
stos
or
pop
idivl
clc
lahf
lahf
cmpsb
sbb
stos
push
inc
pop
aas
jmp
out
dec
dec
test
or
xor
sub
jae
sbb
sti
mov
xchg
push
in
jbe
mov
inc
out
jne
dec
mov
mov
repnz
sahf
fldl2t
test
test
lods
push
or
xchg
mov
mov
mov
xor
mov
cs
cmpl
mov
cmp
jp
jb
movsl
dec
testb
arpl
nop
and
inc
out
pop
cmp
test
imul
cmc
xchg
inc
inc
ljmp
sub
fstpt
insl
std
mov
mov
test
rcl
scas
xchg
mov
mov
sub
in
test
iret
cwtl
stos
addr16
adc
lock
sub
lea
bound
jecxz
stos
pusha
pop
pop
cwtl
lcall
sti
pop
js
cmp
loope
repnz
cs
scas
add
fidivrs
dec
into
loope
mov
mov
cmp
mov
iret
sub
cwtl
rcl
popf
mov
add
cmp
jge
outsl
insb
push
jle
sub
xor
fcmovnbe
adc
jae
mov
cli
and
pop
loop
dec
test
inc
xchg
in
cltd
jg
adc
dec
dec
dec
cmc
test
xchg
ljmp
imul
sahf
lcall
and
lret
and
orl
jno
xchg
inc
lret
push
pavgw
adc
insl
jns
sahf
and
cmc
fucomip
negw
clc
popa
movsb
pop
aam
aam
in
add
int3
inc
inc
cmp
add
cli
push
mov
xchg
imul
push
sti
ja
out
adc
dec
sbb
loope
mov
inc
iret
and
mov
jle
aad
sahf
shrl
dec
loop
or
dec
mov
in
xor
mov
stos
js
leave
cmpsb
aaa
insb
lods
not
out
aaa
scas
mov
int3
pusha
dec
cmpl
rcrl
dec
cld
jge
or
jno
jl
das
ljmp
cmp
daa
jbe
jp
test
cld
scas
push
or
xor
mov
xchg
pop
adc
mov
add
mov
iret
scas
inc
clc
mov
js
fstp
pop
fildl
into
xor
lods
adc
mov
sbb
sbb
xor
in
je
insb
or
jo
loop
mov
pop
dec
jge
sbb
xchg
std
add
adc
mov
xorl
jp
hlt
push
aam
or
sbb
ljmp
add
add
pop
jae
inc
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
insl
jmp
xchg
add
xor
mov
movsb
or
mov
fs
lret
sub
push
mov
push
mov
lea
adc
push
dec
push
cmpsl
subl
lea
sar
sub
ret
in
inc
inc
add
testb
movsl
test
enter
fstpl
stos
fisubl
and
idivl
es
push
or
gs
popa
xor
mov
aam
inc
jmp
test
add
and
mov
imulb
dec
imul
cmp
shrb
stos
mov
not
mov
jae
adc
imul
jnp
dec
sbb
jp
movsl
test
cmp
mov
lock
out
add
push
dec
clc
cmp
test
bound
lods
das
fstp
sbb
mov
and
mov
add
xor
mov
push
or
and
jnp
pop
rcrb
pop
je
adc
sarl
sbb
push
mov
cmp
xor
bnd
repnz
xchg
inc
fidivl
popa
mov
in
jmp
xlat
adc
adc
dec
aaa
inc
or
sar
jmp
hlt
arpl
jg
movsl
inc
adc
lock
insb
dec
ret
dec
mov
movsb
xor
mov
push
movsb
sbb
push
js
jae
jp
xchg
jno
enter
jecxz
imul
xor
xchg
sahf
sbb
pop
push
in
repnz
aas
sbb
dec
inc
test
sbb
mov
daa
add
xchg
push
push
cli
stc
popa
xchg
push
inc
stc
mov
ja
mov
cmp
fs
mov
add
add
outsb
pop
mov
cs
jl
out
push
lods
adc
jmp
cmpsb
lock
sbb
xor
fcompl
inc
jbe
test
movsb
rcll
loop
jns
add
scas
pop
stos
punpckldq
push
cmpsl
ss
roll
mov
stc
jp
mov
pop
loopne
inc
push
sub
xlat
mov
ret
and
aam
iret
mov
in
or
in
test
push
les
pop
sbb
jbe
xor
mov
sbb
cmp
push
sub
sub
sbb
dec
ret
out
cmpsl
jp
pop
incl
inc
adc
imul
jne
cmp
xor
sub
loope
sbb
loop
cltd
sub
and
xor
shl
insl
repnz
jno
cmp
xchg
pop
xchg
test
rcrb
repnz
push
fldenv
push
test
add
mov
lahf
hlt
xchg
mov
lods
lcall
aam
repnz
jo
movsb
jp
mov
xor
mov
adc
add
push
sub
test
add
add
push
mov
std
pop
mov
stc
sub
dec
push
inc
outsl
cmp
in
adc
cmp
add
pop
push
sub
add
push
sbb
in
mov
jmp
cmp
add
pop
cmpl
jb
xchg
mov
jp
pop
daa
sbb
xor
push
mov
iret
icebp
out
sarb
xor
cmc
mov
sbb
mov
xchg
sbb
je
std
les
movsb
jg
fisubrl
test
push
sahf
sti
test
insl
inc
mov
mov
daa
popf
or
movsb
xchg
in
push
insl
notb
test
push
or
mov
add
push
mov
out
sbb
mov
movsb
pop
imul
jne
mov
or
and
mov
adc
sub
cmc
outsb
lods
ds
idiv
xor
shlb
cs
fcompl
push
adc
push
cmpsl
out
mov
lods
ljmp
xchg
fcmovne
popf
lret
dec
daa
imul
add
push
jle
mov
scas
imul
int
push
jae
jl
lahf
push
jbe
dec
outsb
xchg
sub
cld
out
dec
ljmp
das
imul
add
jbe
std
int3
add
int
out
mov
cmc
push
jl
add
jo
insb
lds
push
test
inc
add
mov
jnp
imul
scas
or
stc
pop
mov
pop
inc
mov
sub
jge
jbe
fs
lock
fisttpl
xlat
ret
test
inc
outsb
sub
adc
pop
inc
ficompl
fidivrs
mov
jb
add
stos
inc
rcrl
inc
sbb
rcl
scas
pop
mov
jmp
sbb
and
jae
dec
popf
cmp
popf
adc
sub
jo
mov
xchg
fldt
and
mov
ret
imul
cmc
dec
int
out
or
ds
stc
divb
jl
xchg
out
push
adc
dec
repnz
fwait
cltd
inc
mov
stc
bound
aas
pop
int3
and
clc
sbb
imul
pushf
mov
nop
cmp
bswap
adcl
cli
jo
push
cmp
repnz
and
subl
push
mov
adc
sbb
pop
outsb
sub
push
fs
xor
std
mov
loopne
add
xchg
push
jbe
dec
jbe
in
subb
test
adc
iret
cmp
or
mov
mov
fnstcw
dec
aaa
push
sub
sbb
out
dec
mov
mov
call
imul
xor
pop
jno
enter
dec
xchg
cmc
cmp
fdiv
pop
pop
js
jnp
cmp
std
imul
cltd
xchg
inc
test
adc
mov
ds
sahf
adc
ds
mov
mov
cs
cmpl
call
dec
lcall
sarb
or
mov
sub
xchg
mov
sti
jbe
mov
jmp
popf
cmp
fnstenv
mov
adc
mov
xchg
or
sbb
sti
mov
clc
jmp
addr16
push
stos
adc
mov
pop
test
in
movsb
xchg
jnp
add
fadds
mov
sub
hlt
repz
inc
sbb
and
push
or
push
std
fimuls
aad
xchg
aaa
xchg
xor
sbb
pusha
loop
cmpsb
aaa
or
iret
sbb
aad
fcoms
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
adc
cs
add
sbb
stos
xchg
daa
outsb
clc
out
notb
icebp
mov
add
in
mov
jge
pop
jmp
sub
jge
pop
loop
sahf
cmpsl
jle
jle
mov
nop
push
cmpsb
stos
xor
lods
loop
cmp
jo
leave
sahf
rcrl
cmp
pusha
call
add
mov
mov
push
test
jne
cmc
jecxz
mov
cmpb
adc
sub
addr16
add
jecxz
movsb
xchg
or
sbb
ret
pop
scas
jmp
mov
jnp
mov
mov
mov
add
fcmovb
xchg
dec
insl
inc
mov
mov
cmp
xor
jmp
pop
imulb
lock
sbb
mov
mov
or
mov
aam
xorb
add
sub
sbb
clts
mov
in
pop
cmp
scas
lea
scas
dec
dec
dec
cmp
push
in
pop
adc
pop
jp
inc
insb
pop
pop
lcall
sub
xchg
xor
sarb
or
ficomps
rclb
pop
jecxz
neg
push
add
popl
scas
insl
or
ds
sub
pop
scas
cs
fisubrl
cli
fisubl
imul
push
adc
out
aad
lcall
sbb
sub
shll
sarb
shll
fcmovnb
and
pop
fnstenv
in
xchg
jnp
loopne
aas
int
das
sbb
xchg
lods
popf
cmpsl
int
addl
add
enter
dec
push
sub
fcoms
stc
cmc
adc
xor
jbe
dec
test
scas
pop
push
mov
adc
push
dec
stos
fistl
push
stc
jmp
cmp
fucomip
rolb
mov
in
cmpb
cmc
insb
and
cmp
push
into
mov
lods
fidivs
and
insl
push
sbb
test
jp
in
clc
dec
enter
push
jle
jmp
cmp
outsb
aam
inc
movsb
fldl
movsb
push
sti
adc
inc
adc
sti
pop
jne
es
cli
movsl
xorl
jle
xchg
mov
jno
movsl
lock
bound
xchg
add
xor
bound
xor
popf
sub
out
in
out
in
push
rcll
jp
jne
jp
mov
pop
push
shll
adc
mov
xchg
add
insb
sti
mov
popa
xchg
add
enter
outsl
in
inc
adc
xor
es
inc
mov
mov
imul
sbb
imul
pop
fcoms
loope
imul
lcall
imul
icebp
xor
xor
xchg
add
ds
mov
cmpsb
pop
pop
sarb
and
xchg
inc
test
in
or
inc
sbb
cli
les
xor
leave
lcall
add
mov
mov
cmp
cmp
xor
pop
dec
les
mov
loop
jb
in
int
push
cmpsl
xchg
jecxz
addr16
push
sub
mov
roll
pop
push
js
nop
and
jnp
dec
js
in
scas
jno
sahf
xchg
out
fistpl
icebp
enter
cwtl
xchg
call
sub
mov
push
fcmove
mov
mov
je
sbb
rep
sub
in
rolb
or
inc
jo
clc
jmp
fs
sub
ffreep
clc
loop
nop
cmc
in
out
test
xbegin
adc
push
test
outsb
mov
mov
and
mov
mov
pop
into
cmp
lods
std
xor
mov
nop
call
mov
and
das
cwtl
sbb
cs
ja
jno
mov
mov
cmp
mov
dec
and
push
outsl
bound
nop
pop
mov
cmp
jp
mov
push
cmp
sbb
and
push
cmpl
xor
sub
fld
iret
mov
mov
test
pop
fsubrl
rclb
or
jnp
cs
cmp
xor
or
lods
out
mov
and
cltd
dec
les
lea
movsb
cmp
pop
cmpsb
imul
push
bound
cli
fstpt
test
mov
and
mov
fxch
out
fldcw
cmp
and
es
inc
shlb
mov
jae
cmp
push
out
mov
xchg
jno
or
sub
inc
cmp
movsl
adc
cmp
mov
pop
in
cwtl
add
push
add
std
imul
ret
dec
jae
mov
push
mov
xor
push
and
or
enter
jb
jle
gs
cmp
nop
mov
inc
mov
je
outsb
mov
addl
repnz
add
test
dec
and
cli
insb
mov
pop
cmc
shrb
clc
sbb
rcrb
out
cld
mov
test
cmp
mov
fs
push
imul
iret
push
sbb
push
loopne
mov
jg
push
js
das
dec
clc
lcall
xchg
pop
sub
mov
imul
pop
mov
jle
repnz
dec
mov
test
hlt
ret
xchg
inc
nop
pusha
repnz
outsl
sub
and
mov
ret
fmull
rcrb
js
pop
adc
cmpsb
idivl
fucomi
xchg
mov
sbb
addr16
fcmovnb
int3
test
push
cltd
and
pop
xchg
divb
test
mov
cmpsb
inc
fidivrl
ja
je
jmp
insl
sahf
popa
ljmp
sub
mov
and
mov
out
push
jl
mov
adc
sub
adc
sub
push
add
fsts
add
and
jnp
xchg
jl
movsl
fbld
mov
fs
clc
mov
cmc
imul
mov
mov
outsl
cmp
mov
pushf
int3
mov
pop
jle
addr16
mov
and
adc
jb
hlt
sbb
jae
cmp
inc
hlt
popa
das
mov
out
pop
std
push
xchg
sbb
movaps
push
jge
push
clc
push
sbb
and
hlt
mov
pop
shll
jae
pop
cmp
fwait
push
xchg
movsb
ret
mov
cmp
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
xchg
inc
add
mov
cmc
loop
pop
ds
rcr
sbb
jbe
push
jge
xor
xor
shrl
mov
incb
iret
jbe
and
jge
stc
lahf
test
lods
pop
mov
mov
mov
shll
inc
rcl
cs
lcall
into
add
out
or
div
jl
aam
je
ret
mov
shll
jb
cmp
jnp
pusha
push
pop
insl
mov
fnstsw
cmpsl
out
leave
inc
sbb
paddusb
add
push
outsl
lds
or
roll
sub
push
jbe
jle
xchg
mov
mov
mov
addr16
andl
in
inc
sub
das
lock
mov
add
xor
push
into
sbb
leave
jmp
ja
push
jl
gs
or
out
insl
pop
dec
in
mov
es
mov
sbb
cmc
jecxz
jle
clc
fcoml
mov
inc
out
sahf
repnz
mov
adc
xchg
xorl
xor
xchg
test
push
aaa
fsubrs
jl
fstpt
adc
push
jns
gs
fcoms
jmp
std
push
sbb
push
or
jbe
mov
into
cmp
enter
fcomps
out
pop
into
movnti
sub
mov
in
loope
xchg
push
loope
leave
insl
ficompl
outsb
in
data16
out
stos
mov
stc
sti
dec
mov
inc
stc
out
enter
add
mov
push
icebp
cmp
or
imul
gs
out
jg
js
pusha
xor
repz
adc
sub
adc
jg
sub
jo
aas
pop
aam
push
push
xchg
jg
jmp
inc
jae
shrl
and
test
and
pop
scas
inc
sbb
mov
aaa
adc
jl
sub
out
mov
cmp
jge
cli
in
gs
data16
pushf
or
dec
or
out
not
push
int3
pop
push
stos
mov
sbb
cmp
pop
add
jg
pusha
movsb
sbb
inc
adc
pop
cmpsl
adc
outsb
xchg
xor
mov
leave
jl
pusha
ds
inc
addr16
imul
pop
cmp
ret
mov
ror
popa
add
gs
bound
cmp
jle
and
sti
pop
lret
stc
imul
inc
sbb
dec
jo
fsubl
std
dec
movsb
adc
mov
fmull
mov
in
xchg
inc
mov
jp
or
js
jno
sub
xchg
pop
jo
lahf
mov
rorb
xor
jne
mov
arpl
sub
icebp
xor
fsubs
push
pusha
jns
inc
dec
aaa
pop
xor
mov
push
mov
test
lret
mov
int
mov
dec
mov
leave
jo
lcall
xor
lea
mov
cmc
sub
sub
aas
and
push
clc
xor
cmpsl
cli
jle
cmpsl
push
addb
dec
mov
and
aam
test
sub
or
and
jp
lcall
mov
jne
jae
adc
lret
pusha
cltd
lock
push
aad
pop
les
fwait
imul
inc
jno
cmp
cmpsb
orl
cwtl
pop
or
cmp
clc
mov
pop
jns
pop
xchg
xchg
add
push
jmp
or
inc
lret
inc
addr16
into
popf
dec
dec
loop
xor
add
push
insl
dec
add
push
jle
stc
adc
jne
cltd
adc
popl
xchg
cwtl
pop
rol
xor
xor
movsb
mov
push
or
int
add
mov
hlt
sti
hlt
dec
imul
mov
test
mov
jo
mov
in
dec
pop
pop
popf
jbe
mov
dec
cmp
jl
xor
pop
out
lahf
push
out
fwait
inc
xor
ret
stos
xor
fnstenv
adc
out
lds
lret
int
nop
mov
jb
push
lea
in
hlt
clc
aaa
xchg
dec
ret
adc
mov
mov
cmp
jecxz
add
sub
dec
scas
push
outsl
fwait
add
mov
mov
aad
cmp
jbe
sbb
aaa
jo
xor
out
out
pop
stos
pop
push
arpl
leave
arpl
jo
popf
adc
jns
mov
popa
andl
loope
inc
movsl
push
mov
jnp
outsb
movsb
clc
popf
or
push
inc
fwait
aaa
jg
jg
dec
dec
scas
lcall
ret
leave
xchg
enter
xor
mov
mov
stc
and
jge
imul
scas
stos
addr16
dec
adc
dec
push
sbb
dec
pop
mov
in
loopne
js
push
imul
pop
adc
shll
pop
repnz
add
jg
adc
push
dec
pop
std
negb
ljmp
pusha
sbb
sbb
andl
adc
rolb
int
int3
fsts
sub
pop
out
and
xchg
js
mov
subb
jmp
je
mov
ds
xor
stos
push
out
jg
pop
mov
inc
addr16
gs
shlb
mov
jge
leave
sub
mov
data16
sbb
adc
inc
add
es
dec
mov
xor
xchg
insb
outsb
add
mov
pop
mov
inc
adcb
pop
bound
inc
std
dec
jns
loope
sbb
int
das
call
mov
movsl
int
aad
insl
stc
xlat
cmpsb
je
aaa
in
push
jl
sti
into
mov
cmpb
lcall
inc
push
les
jp
mov
movsl
popa
inc
jnp
mov
push
ret
aad
in
lods
mov
jg
popa
aaa
pop
inc
movsl
mov
inc
jecxz
jg
repnz
loopne
mov
inc
lcall
mov
cmp
adc
adc
xchg
sub
fldl
jl
in
sub
loopne
fdivs
pop
cmp
sbb
dec
inc
mov
out
push
add
testl
dec
push
loop
push
loope
jg
xadd
das
xor
clc
xor
or
js
dec
in
pushf
sbb
ret
xchg
fcoms
push
pop
in
lock
push
inc
pop
cmp
out
mov
pushf
sub
loop
sub
jl
xchg
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
jo
out
jne
stc
dec
mov
les
idivl
lock
jno
cld
jecxz
jmp
dec
test
fisttpl
enter
pop
xor
arpl
push
push
in
and
adc
and
adc
jge
rcll
lea
jp
sahf
xchg
pop
xchg
insb
fidivs
lret
rcrl
push
ret
inc
repnz
or
bound
mov
sbb
add
sub
cmp
push
filds
aaa
mov
mov
dec
dec
int3
mov
pop
or
sbb
cmpsl
cmpsl
mov
pop
imul
or
xchg
pop
push
les
mov
out
enter
adc
pop
push
ljmp
outsl
pop
cmpsl
arpl
mov
and
cmp
les
test
xchg
ss
dec
push
mov
icebp
jl
sub
sub
ljmp
dec
fnstsw
inc
in
test
push
imul
es
lea
lock
mov
into
inc
lcall
inc
mov
add
imul
std
sbb
hlt
jp
add
push
add
gs
add
imul
test
nop
or
push
sbb
sub
mov
push
std
jae
dec
xlat
out
outsl
sbb
jnp
mov
das
jae
into
pop
mov
add
ja
gs
inc
sbb
outsl
mov
mov
mov
mov
xchg
adc
xor
xchg
cmp
mov
movsl
dec
adc
lea
into
stc
aas
aaa
daa
or
and
mov
lock
pop
add
popf
xor
fldcw
cld
cmp
or
xor
adc
gs
mov
inc
lcall
outsl
cmp
and
push
lahf
sub
lret
das
adc
or
test
xchg
imul
sbb
repnz
dec
mov
push
and
pop
mov
inc
or
insb
sbb
cltd
movsb
dec
push
mov
arpl
cmp
and
dec
call
inc
xchg
dec
mov
jmp
fs
inc
outsw
jns
push
mov
pusha
mov
and
out
sub
std
in
gs
jne
aad
pop
sub
stc
sbb
sub
out
xchg
adc
jge
fs
xor
clc
cmp
nop
loop
add
adc
in
jge
xchg
ficomps
push
jnp
jae
dec
xchg
inc
push
push
loopne
xchg
cmp
dec
mov
movsb
ds
dec
jecxz
jge
cltd
and
bound
pop
lods
subl
jmp
je
rcr
jae
out
sbb
out
add
mov
fidivl
test
mov
mov
rorb
enter
loop
dec
xchg
ljmp
in
cld
xchg
xchg
test
mov
adc
mov
jb
loopne
or
mov
jl
xor
fwait
xor
push
add
mov
adc
lea
jp,pn
cmp
pushf
ja
aas
les
cltd
pop
nop
clc
repnz
inc
mov
scas
cmp
imul
scas
mov
sub
cli
jmp
mov
es
sub
lea
or
aad
lret
jecxz
or
inc
add
or
mov
push
add
push
test
xor
in
or
imul
adc
jo
leave
dec
cld
push
mov
or
or
xlat
mov
mov
fs
incl
cmc
mov
daa
stos
jns
lock
std
sahf
aas
mov
xor
popa
and
dec
test
mov
fnstsw
mov
push
xchg
out
aas
jge
adc
repz
imul
pop
jbe
push
jo
es
gs
or
cmp
in
pop
dec
shll
mov
lret
scas
stc
out
je
mov
sbb
add
int3
mov
insl
pop
idivl
addr16
sbbl
lahf
add
push
cmp
adc
jle
nop
jg
mov
pmuludq
pop
xchg
jnp
das
xor
lcall
jp
adc
subb
sbb
jo
rcll
mov
push
xlat
pop
ja
cmpl
sub
sub
dec
mov
decl
or
mov
pop
addr16
sbb
lret
aam
lods
lret
mov
xchg
loop
push
pop
dec
shrb
push
add
imul
mov
sbb
in
push
jle
or
int3
xchg
mov
nop
dec
dec
std
sahf
scas
sbbb
mov
lret
outsb
in
fsub
cmp
fcmovne
mov
gs
or
pusha
sti
inc
mov
cltd
fcmovu
shll
sti
push
lods
and
xor
inc
repz
sub
jae
js
ret
xchg
cmp
add
test
push
clc
fdivrs
js
addl
jmp
test
sub
insb
fcomps
dec
or
jnp
addb
add
push
js
out
adc
int3
sbb
jl
xchg
jb
sbb
or
cli
xor
addr16
sub
loop
xchg
push
mov
mov
fdivl
jb
xor
int3
cmp
push
fsub
imul
sub
xchg
fwait
push
sbb
call
ss
sbbl
push
mov
aaa
movsb
out
call
pushf
xchg
les
cmp
stc
mov
dec
js
adc
push
addr16
inc
jb
in
in
fldcw
push
jl
and
mov
out
fiaddl
rolb
fsts
or
stos
mov
pop
shlb
inc
call
das
mov
fisubrl
dec
dec
jb
push
cmp
xor
mov
outsl
fs
push
fcoms
inc
add
mov
pop
and
inc
jmp
lret
in
out
sub
cmp
stos
add
fpatan
push
jbe
push
jecxz
xor
mov
lret
stos
in
mov
popf
cmpsb
adc
add
push
std
jns
xchg
xchg
dec
dec
pop
in
imul
movsb
mov
cli
cld
xchg
ds
fwait
and
push
enter
ficoml
shll
enter
das
addb
push
notl
cmp
lahf
sub
mov
jns
add
adc
add
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
sbb
add
xchg
or
scas
pop
lods
xchg
sub
in
loop
xor
ficomps
inc
out
adc
mov
and
je
sbb
mov
daa
clc
cwtl
ja
cmp
pop
lods
xchg
inc
aad
push
addr16
out
mov
pusha
pop
add
xchg
popa
sarl
in
mov
mov
xchg
adc
shll
mov
xchg
dec
push
in
rep
out
and
add
test
add
push
shl
add
inc
nop
push
xor
pop
pusha
nop
sbb
repz
add
pop
inc
push
aas
mov
mov
lock
add
in
scas
lret
pop
cmp
pop
or
popf
pop
push
xor
cmp
je
shlb
lahf
add
popl
add
mov
mov
mov
stos
add
cwtl
std
lahf
fstpl
pmaxsw
and
push
inc
ret
sub
pop
popf
in
dec
ret
sub
push
int3
pop
shll
repz
mov
cmp
jp
push
sahf
mov
xlat
mov
imul
loope
cli
lock
cmpsb
mov
adc
loope
xor
jo
sbb
adc
out
lea
dec
or
mov
fimull
and
addl
inc
or
imul
shlb
loop
mov
cmp
lret
ja
fldenv
stos
xchg
cmp
test
repnz
stos
cmc
jne
xchg
fs
add
popf
pop
push
mov
fistps
sbb
insl
add
das
xchg
cmpsl
cmpsb
inc
nop
sti
aad
or
pop
cltd
jge
pop
inc
ficompl
dec
push
js
mov
les
mov
xchg
jmp
leave
xchg
in
pop
xchg
iret
push
inc
fld
mov
ret
lahf
loope
icebp
aaa
in
inc
or
push
lock
sub
inc
inc
out
ss
aaa
icebp
int3
sbb
test
xchg
xchg
sub
test
push
lds
adc
push
icebp
gs
mov
or
insb
pushf
lret
xchg
jne
sub
cs
jno
out
add
lcall
lret
shl
addb
fldenv
js
add
jle
inc
mov
jecxz
add
add
or
mov
fcompl
push
inc
or
adc
xor
rclb
test
pusha
leave
cmp
ret
fdivl
leave
cmp
in
push
fwait
cmpsl
inc
mov
fstl
mov
inc
pop
push
xor
xor
and
inc
push
fidivl
dec
cmp
addb
inc
sub
pop
jo
xor
std
xchg
scas
or
ja
jno
jns
sub
pop
repz
mov
adc
push
scas
inc
rol
inc
jo
movsl
jbe
or
fcmovnb
xor
xchg
sbb
call
push
add
ficompl
inc
ret
test
imul
push
cmp
shlb
mov
mov
dec
shl
jae
add
addb
pop
mov
jge
stos
jae
fmull
and
mov
jl
lods
adc
test
in
dec
sahf
add
stos
out
mov
add
lods
push
xor
cmp
mov
xchg
jb
push
in
mov
cmpsl
add
jbe
mov
pop
jp
sub
jns
out
cmpsl
push
mov
jmp
adc
push
decl
icebp
movsb
pop
xor
dec
arpl
lock
add
cmp
push
jecxz
and
xor
jo
inc
mov
call
inc
mov
addb
pop
pop
pop
and
cltd
jno
mov
mov
adc
shrb
inc
or
mov
cwtl
sahf
inc
int
xacquire
mov
icebp
cmp
int
test
xchg
sbb
mov
jbe
outsb
mov
push
lods
nop
sub
in
sub
jo
xor
xchg
rclb
mov
fs
sub
and
and
adc
and
jge
xchg
in
out
jne
pop
push
mov
lcall
add
push
imul
cmp
sub
scas
mov
test
out
inc
xor
insl
cmp
movsb
and
test
testb
outsb
lea
out
or
mov
adc
mov
mov
sub
aas
dec
roll
addr16
loopne
sub
add
imul
fdivrs
out
mulb
clc
loopne
ds
pop
bound
mov
jnp
fdivrs
daa
add
or
incl
out
xor
insl
mov
orb
loop
stos
insb
aas
and
dec
jp
insl
sub
lock
outsb
cmp
xor
fdivl
imul
add
cmp
mov
sbb
push
push
in
push
push
dec
std
and
sbb
ds
lret
xor
lds
push
push
mov
jne
rcl
adc
or
in
test
pop
nop
insb
xchg
and
push
lahf
and
push
movsl
xchg
inc
mov
jmp
ljmp
jle
insb
sbb
stos
xor
and
test
mov
and
add
pop
inc
in
clc
lret
pop
adc
mov
stc
fwait
and
loope
xchg
xor
bound
popa
inc
xlat
or
arpl
inc
nop
icebp
sub
or
pop
inc
push
xor
push
cmp
lret
push
clc
xchg
cmpsb
cmp
orb
xchg
pop
pop
sbb
or
and
or
test
mov
dec
xchg
add
push
push
les
arpl
add
mov
sub
test
fldcw
test
cmp
in
stos
lret
mov
jbe
jb
adc
cmpsl
mov
in
dec
test
mov
xor
test
xor
sbb
push
mull
mov
sbb
mov
jbe
cmp
fstl
es
and
aas
clc
mov
inc
xor
add
imul
mov
int
fucomi
or
testl
mov
sbb
cld
addr16
aas
repnz
xchg
das
call
jns
jbe
cmpb
fdivrs
int
mov
jl
aas
das
sbb
mov
loop
aaa
cmpsl
notl
mov
adc
psrlw
or
mov
sub
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
dec
inc
or
add
mov
xchg
cmc
xor
dec
inc
cmc
cltd
mov
add
pop
fnsetpm(287
sbb
push
idivl
jg
push
adc
push
dec
call
mov
ds
insb
int
and
pop
icebp
and
test
iret
es
test
sub
popa
sub
sbb
icebp
or
mov
dec
push
and
sahf
pop
dec
int3
out
cltd
push
mov
movsb
shrb
fldt
repnz
fldcw
adc
cli
or
fwait
movsl
or
inc
int3
sub
fdivl
push
loope
ds
xchg
sbb
adc
jb
gs
xchg
xor
mov
mov
xor
cmc
and
sub
cmpsb
je
inc
js
shlb
pop
ljmp
hlt
aam
fsubrs
inc
and
fwait
adc
popf
test
xor
enter
neg
inc
leave
das
pop
imul
and
dec
adc
lcall
test
push
xchg
lcall
push
pop
mov
cld
xlat
or
xchg
cmpl
lock
je
cs
arpl
lret
ss
out
jle
pusha
mov
xor
test
fs
lds
cli
gs
shrb
movsl
or
push
imul
cmp
js
sbb
test
dec
sti
jg
push
pop
lret
sbb
aaa
push
andl
pop
push
adc
xchg
adc
cmp
mov
adc
in
push
cmpsb
fisubl
and
cmp
outsl
pushf
mov
insb
lea
push
mov
add
jp
push
lahf
pop
push
lret
out
daa
pushf
icebp
repnz
gs
es
daa
cmovbe
fstps
xor
fdivs
shrl
lea
loopne
jb
es
fildll
sahf
sbb
and
aam
outsl
mov
push
jmp
movsl
hlt
in
push
jle
call
arpl
shl
std
pop
lock
repnz
push
int
jle
mov
xchg
imul
popf
push
scas
mov
inc
push
xchg
or
mov
inc
sbb
std
aas
ljmp
cmpsb
ret
dec
fmull
int
decb
aaa
mov
xchg
lock
cmpsl
push
cmp
scas
mov
pextrw
adc
adc
mov
mov
call
push
adc
pop
aam
pop
sub
xchg
scas
rorb
xlat
and
and
pop
jl
mov
jnp
mov
test
lcall
push
or
adc
int3
imul
jecxz
jae
das
test
insb
das
xchg
xchg
outsb
aaa
cmp
stos
cmpl
dec
fsubs
xor
pusha
xor
adcl
jbe
pop
and
jp
mov
fistl
mov
cltd
adc
jb
ja
imul
subb
jle
in
aam
loopne
push
incb
jg
push
mul
call
test
push
fdivl
mov
adc
xor
mov
into
insl
pop
scas
jmp
jbe
test
cmp
mov
fs
dec
and
push
icebp
push
xor
pop
add
xchg
test
sub
lods
cmp
inc
mov
inc
push
add
lret
lods
hlt
into
push
imul
icebp
and
imul
sub
clc
aad
adc
sub
sti
mov
mov
adc
aaa
rol
and
push
scas
pop
jmp
adc
jecxz
shll
inc
aad
pop
fists
push
push
pop
repz
imul
push
cmp
lea
notl
jne
sub
mov
mov
addr16
jae
xor
or
std
add
ja
sarl
lods
sarl
movsb
mov
pusha
jbe
pusha
adc
orl
mov
mov
or
push
push
cmp
popf
push
mov
enter
pop
push
nop
fisttps
jle
jecxz
stos
xchg
or
mov
hlt
or
cmp
adc
cli
sahf
mov
aaa
mov
adcb
sbb
test
xchg
fldcw
nop
dec
and
fildll
inc
jmp
cli
lret
in
lret
push
and
add
inc
shlb
insl
hlt
adc
push
es
mov
iret
push
loop
iret
push
add
cwtl
pop
or
stc
scas
or
pop
jge
adc
fcompl
test
sub
xor
dec
add
add
in
leave
icebp
xchg
adcl
insb
into
ljmp
les
add
ficoms
and
repz
iret
sbb
aaa
sahf
ja
mov
push
or
stos
add
or
fwait
pop
pop
dec
pop
pushf
mov
mov
cmp
arpl
mov
imulb
push
xor
xchg
out
popf
push
adc
mov
inc
ja
scas
xchg
je
scas
sbb
sbb
xor
mov
xlat
jns
arpl
push
adc
fwait
cmp
xchg
cmp
movsb
adc
test
inc
adc
jne
push
fnstcw
or
fistl
mov
cmpb
jl
lahf
push
xor
xor
mov
cmp
inc
sub
dec
xchg
hlt
pusha
jnp
test
stos
cmp
sti
cltd
insl
inc
flds
aaa
dec
sub
push
pop
mov
ljmp
add
mov
add
aam
pop
out
lret
mov
or
jmp
push
out
jne
adc
push
add
cmp
mov
inc
mov
jo
mov
or
push
test
mov
push
fldt
mov
mov
out
jnp
pop
iret
inc
and
adc
push
push
outsl
sbb
dec
in
lea
lret
sub
or
test
sbb
std
xchg
loopne
mov
mov
xchg
in
xor
xchg
paddsw
dec
add
mulb
xor
mov
adc
mov
shlb
mov
int3
cli
fimuls
or
xchg
hlt
cs
aas
test
imul
or
popa
loopne
cmp
jo
xchg
jno
cmpsl
pusha
fwait
dec
cmp
inc
shlb
mov
test
cs
cld
sbb
mov
and
ljmp
int3
lahf
pop
int3
dec
push
shll
lds
sub
cltd
sub
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cmpsb
sub
cli
add
xor
lods
test
in
mov
mov
jnp
mov
mov
cwtl
xor
daa
imul
add
das
jne
inc
inc
dec
mov
cmp
sub
xchg
jg
aaa
ljmp
sahf
in
cmpsl
ret
cmpsb
dec
jmp
pop
xor
loope
inc
xor
loop
lahf
fidivrs
jo
dec
roll
mov
out
push
push
xor
fsub
add
mov
mov
lret
sbb
stos
pushf
jp
adc
es
mov
sti
add
in
xchg
dec
mov
mov
popf
cmp
pop
fstpl
sub
jae
adc
sarb
mov
cld
jb
mov
sub
in
add
xchg
push
cmp
xor
cwtl
mov
push
pop
xor
mov
jbe
dec
out
xchg
or
fisttpll
ds
daa
loop
lahf
or
push
ret
arpl
sbb
jp
jge
sbb
pop
das
push
cmp
mov
aad
mov
rolb
and
stos
sarl
mov
pop
pop
nop
adc
mov
push
sub
jg
and
cmpsl
add
insb
pop
shl
jp
stos
outsb
andl
test
xlat
xchg
das
in
call
fwait
adc
mov
and
clc
out
rol
inc
lea
mov
jnp
and
mov
fidivrs
push
fidivl
fdivs
xchg
fucomi
popf
pop
push
lea
push
imul
call
or
push
xor
test
enter
or
inc
insb
add
cmp
or
jl
mov
xchg
xor
pop
xor
adc
jno
ret
popa
adc
mov
mov
test
cmp
arpl
cmc
loope
movsb
xchg
jne
out
lods
fnsave
in
push
mov
cld
mov
push
cmp
add
repz
ljmp
push
adcl
lea
in
mov
jb
mov
or
ret
sub
sub
jne
adc
nop
mov
xchg
inc
mov
push
in
mov
jo
push
stc
lock
push
sbb
dec
xor
stc
xchg
inc
sub
lock
xchg
or
sub
inc
add
mov
outsl
inc
sbb
push
xchg
std
xchg
scas
sahf
icebp
adc
inc
or
sub
push
stos
sahf
daa
call
jge
push
bndldx
aad
movsl
test
mov
jnp
repnz
sahf
sbb
pop
aaa
mov
fs
pop
lds
stos
dec
cli
pop
aam
pop
dec
fsubrs
std
shrl
xor
dec
inc
icebp
or
adc
mov
pop
cwtl
jmp
mov
out
inc
add
shl
cmp
jbe
sbb
or
jno
cmp
in
ljmp
in
add
in
fmuls
inc
mov
movsl
xorb
call
cs
popa
loop
lock
xor
mov
mov
scas
push
les
add
xor
xchg
clc
xor
aas
push
jns
arpl
dec
mov
mov
inc
and
roll
or
dec
enter
cmp
push
ret
push
push
xorl
or
ja
aad
fsts
cmp
pcmpeqb
cmpb
movsb
xchg
aas
lea
leave
pop
push
sbb
pop
std
int
popa
jecxz
out
mov
mov
jb
pop
mov
loop
sbb
roll
fwait
cmpsl
mov
dec
sbb
pop
lret
push
fidivl
int
fisttpll
fldcw
mov
aad
mov
dec
adc
xor
mov
arpl
adc
mov
push
movsb
dec
inc
xchg
cmpsl
and
shrb
mov
mov
jg
xchg
push
mov
dec
and
mov
xchg
sbb
loopne
mov
fimuls
test
nop
shll
inc
sub
ljmp
in
mov
inc
cltd
jle
pop
shl
pusha
test
cld
sbb
imul
clc
xchg
cmp
push
fwait
add
xor
pop
out
and
sbb
daa
lret
mov
clc
ret
xchg
cmpsb
decb
outsl
pop
mov
jecxz
xchg
mov
dec
pop
out
mov
ficoml
mov
add
push
fisttps
mov
jge
arpl
popa
jg
adcl
pop
negb
sub
pop
push
das
jbe
dec
cld
pop
mov
out
jne
xchg
shr
fstl
stc
inc
int
mov
ds
sbb
mov
xchg
and
enter
shr
cli
nop
std
cmp
cwtl
mov
pop
dec
xchg
test
push
and
imul
adc
dec
sbb
xchg
mov
pusha
jo
ret
pop
push
xchg
and
cli
nop
jmp
lret
ret
addr16
outsb
cmpsb
mov
clc
stc
ja
jp
adc
dec
and
fmul
ret
mov
push
cmp
jb
mov
subl
add
jg
or
rcrl
outsb
cli
je
xlat
and
in
inc
jge
mov
xchg
insb
jnp
ljmp
popa
aam
sbb
das
out
mov
adc
nop
pop
inc
cmpsb
sarb
repz
imull
call
cmp
cmp
pop
enter
nop
lret
mov
sub
lods
xchg
ja
xorb
fsubrs
inc
push
ja
push
shrb
push
xor
cmp
loopne
inc
adc
lret
cmpsb
xor
cltd
divl
enter
jo
inc
out
out
rcll
ljmp
rol
daa
popf
xchg
inc
cmc
fcmovnb
push
sub
cli
sub
or
sub
xor
jp
pop
sbb
loopne
xchg
mov
bound
es
mov
cmovp
mov
mov
cli
lea
and
ret
pop
insb
aas
xchg
fdivrl
push
scas
out
adc
sbb
stc
adc
push
mov
xor
scas
fisubl
mov
jl
mov
sub
inc
shll
jno
inc
enter
jmp
mov
push
mov
notb
test
das
jmp
and
andl
cltd
xchg
repnz
in
ss
adc
or
push
xor
lods
pop
loope
jbe
call
sub
pop
ss
mov
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
fcmovnbe
lret
call
xadd
adc
jl
js
leave
imul
ds
aam
clc
cmp
cmp
rcr
mov
xchg
lret
mov
push
mov
aaa
pusha
adc
jbe
pop
push
ret
push
lahf
stos
xchg
add
jbe
sbb
outsl
push
cmpsb
lcall
add
mov
jmp
aad
movsb
pop
loopne
jns
rcll
cmp
adc
pop
xchg
test
out
mov
std
jg
pop
mov
lcall
inc
push
and
pop
cmpsb
inc
push
pop
fwait
and
pusha
sbb
pop
pop
jecxz
cltd
pop
lods
add
test
mov
push
add
sub
or
inc
out
stc
loopne
inc
push
push
shrb
jmp
flds
sti
mov
leave
popf
mov
mov
and
movsl
xorl
adc
push
or
push
lcall
aas
les
mov
or
mov
sarl
inc
lret
mov
mov
inc
or
mov
sbb
xchg
inc
scas
enter
jb
rcrl
fnsave
mov
xchg
xchg
cmp
inc
fst
or
lahf
inc
inc
and
push
or
adc
mov
enter
gs
in
jb
rcrl
in
lcall
and
dec
subl
mov
testb
xor
cli
cmp
jae
out
cmp
push
mov
sub
lret
pop
or
mov
lcall
sbb
jns
or
push
ss
stos
pop
lret
xchg
outsb
cmpsb
test
push
lods
mov
add
sub
andb
add
pop
mov
ret
xor
dec
je
cltd
push
push
mov
in
inc
and
in
in
jnp
push
mov
arpl
mov
add
outsl
xor
mov
cmpl
outsb
pop
sahf
pminub
mov
fucomi
xchg
arpl
adc
and
pop
cs
faddl
pushf
pop
and
pop
dec
in
and
andl
and
fisubrs
stc
call
sbb
leave
cmp
lret
sti
sub
fstpl
ds
push
inc
inc
push
sub
enter
pop
insb
mov
inc
xor
mov
test
stos
outsb
cmp
mov
enter
les
movsb
mov
adc
dec
mov
adc
fdivrl
pop
test
push
jne
les
mov
lea
add
xchg
pop
fisttpl
loope
lar
arpl
jp
push
addr16
out
pop
fwait
cs
addr16
fists
addr16
mov
imul
adc
into
xchg
lret
ret
mov
fldln2
int3
fwait
mov
push
or
push
pop
cmp
xchg
das
jns
lret
push
clc
insl
adc
or
and
sbb
imul
shr
pop
mov
push
jl
fbstp
jbe
xchg
add
inc
xchg
mov
cmpsl
mov
aad
adc
push
mov
mov
inc
in
adc
and
mov
inc
inc
shrb
fildll
divb
mov
or
jg
lock
pop
aad
je
jae
jns
ss
aad
loop
sbb
or
mov
sub
ja
lea
mov
cwtl
dec
lret
fstpt
xchg
rcll
and
xchg
sbb
fwait
mov
repnz
pusha
in
stos
mull
psrad
lods
jle
xor
ret
rorb
xchg
cltd
jb
mov
adc
pop
jecxz
outsl
push
and
lahf
mov
bound
cmp
xlat
orl
stc
in
call
mov
cmovns
fs
sub
aad
cld
shll
lock
cltd
xchg
mov
jg
lods
divb
orb
mov
rcrb
xlat
inc
lret
xlat
in
xlat
push
xorl
imul
mov
aaa
out
pop
mov
add
mov
loop
mov
cmp
cmpsb
cmpb
inc
add
into
or
sbb
pop
adc
push
or
mov
loop
hlt
xchg
xor
cmpsb
mov
add
pop
in
mov
and
in
test
leave
cmp
dec
dec
out
cltd
aas
push
sti
aaa
ds
mov
or
sub
aaa
negl
mov
call
xor
push
test
mov
aas
scas
fwait
push
mov
xchg
ror
jae
sbb
out
stos
mov
insb
and
cmp
pop
test
jns
add
fs
cmpsb
ss
lea
mov
int
insb
pushl
dec
push
ss
jbe
xor
sbb
loope
lods
dec
mov
xchg
dec
insb
cmpsl
imul
roll
push
neg
xchg
lahf
orb
scas
xchg
aas
xor
jmp
xorb
mov
or
xchg
int
out
data16
jnp
push
loopne
dec
enter
bound
xor
aam
cs
daa
sbb
mov
mov
add
inc
sbb
aaa
add
pop
or
inc
cwtl
call
or
insl
divb
mov
fidivs
mov
xlat
cmpb
sarl
call
adc
rorb
hlt
fnstcw
sub
in
shlb
pop
mov
cmp
in
xchg
imul
insl
mov
aad
testb
subl
sbb
jecxz
lret
test
insb
add
mull
push
sub
insb
sbb
pop
mov
mov
test
push
xchg
filds
sub
sub
or
push
add
dec
mov
jle
ror
dec
out
adcb
xchg
loopne
push
in
fsubl
pop
mov
xchg
inc
fcomps
xchg
mov
jle
inc
mov
and
mov
fcoml
test
dec
xor
nop
movsb
or
flds
push
xor
lahf
mov
leave
imul
in
jnp
test
mov
xchg
adc
ficomps
pop
pop
popf
mov
jb
fstps
xchg
cwtl
ljmp
cmpsb
fwait
into
inc
insb
mov
popf
cmp
negb
pop
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
maskmovq
divl
mov
fs
dec
add
lods
xlat
mov
jbe
xchg
mov
popf
ret
rcrb
cmp
adc
shld
es
mov
pop
mov
insb
imul
mov
rol
loopne
and
scas
pop
xchg
add
jg
add
sbb
sub
sub
push
mov
pop
cli
add
aas
insb
scas
mov
lret
out
and
addr16
cs
jbe
sub
flds
icebp
add
mov
je
pop
out
sbb
scas
cli
fidivrl
cmpsl
adc
shl
cmp
repnz
fs
push
cwtl
stos
mov
lea
pushf
fisttpll
pop
maskmovq
negl
ljmp
mov
cmc
in
xchg
insb
cmovp
and
hlt
in
das
bound
add
ja
pop
add
daa
and
mov
push
xchg
adc
je
xchg
or
mov
or
adcb
or
mov
in
pop
and
jns
add
int
sub
push
mov
shl
mov
imul
ror
cmp
mov
jl
loopne
mov
int
pminsw
jecxz
mov
mov
inc
rcll
jp
iret
fdivrp
xchg
test
cmpl
or
shrb
bound
lret
or
and
mov
xchg
ficoml
push
lock
gs
loope
inc
push
lds
sbb
test
xor
xor
adc
addr16
inc
mov
pop
out
repz
mov
repnz
cmpsb
pop
jno
pop
aas
jb
jge
rcrl
push
add
mov
rcrl
pop
fmuls
imul
pop
test
mov
jmp
lods
pop
inc
aas
mov
int3
inc
or
push
mov
pusha
les
push
lock
cmpsb
inc
add
lahf
adc
leave
xor
lods
outsl
nop
xchg
inc
arpl
inc
out
add
in
call
jb
mov
xor
inc
popa
xchg
cwtl
lret
pop
data16
push
lret
mov
test
pop
mov
xlat
adc
inc
in
mov
ljmp
out
ja
dec
imul
push
adc
inc
adc
add
shlb
pop
andb
add
mov
bnd
mov
jns
mov
sbbb
jb
mov
dec
sahf
out
push
loop
pushf
popf
lret
aas
vpsubw
sbb
gs
imul
jmp
xlat
addr16
in
jecxz
lods
adc
sub
jmp
ds
iret
sti
adc
ds
push
push
and
adc
cmp
dec
adc
add
push
xchg
xor
mov
insb
jp
sti
in
std
ret
andl
arpl
iret
testl
lret
push
repnz
fs
sahf
sahf
cmp
data16
es
testl
add
inc
shrb
pop
pop
xor
mov
cmp
loope
jo
rcrl
jb
inc
push
mov
das
mov
inc
rcrb
insb
push
repz
sub
iret
icebp
or
sub
in
test
adc
and
add
jnp
lds
adc
mov
jae
adc
inc
leave
negl
dec
dec
inc
mov
inc
pushf
sti
arpl
clc
stos
pushf
mov
inc
fstl
test
pop
pmaxsw
data16
std
clc
sbb
jge
mov
sub
mov
dec
push
outsl
dec
push
aad
xchg
inc
imul
hlt
mov
dec
outsl
mov
add
and
in
mov
fcmovbe
jp
add
jno
jne
sqrtps
in
inc
and
xchg
or
cmp
pushf
and
mov
test
xchg
cmp
scas
push
adc
daa
clc
jecxz
pop
and
sub
push
xchg
xor
sbb
xlat
aam
scas
test
pop
pop
add
jge
or
outsl
shrb
adc
outsb
mov
push
mov
jg
dec
pop
xchg
mov
mov
dec
adc
dec
pushf
std
rorb
or
imul
xchg
ss
repz
test
pop
inc
pop
cmp
add
dec
add
popa
fstpl
push
lahf
fsubp
data16
xchg
mov
push
lcall
sar
enter
cwtl
lea
push
les
mov
enter
out
pop
aam
sbb
mov
pop
mov
das
dec
idivl
add
mov
sub
rcll
shlb
das
jl
mov
lods
loope
pop
mov
repz
rcrb
pop
mov
push
adc
and
cmp
jo
in
add
push
ss
sbbb
inc
xor
jo
push
mov
xchg
adcb
std
test
das
pop
pop
ret
mov
sbb
jo
out
pop
idivb
mov
iret
ret
xor
movsl
pop
popl
nop
cmp
push
or
push
xchg
mov
push
sbb
xchg
sbb
test
xor
test
cmp
aas
enter
or
rcrb
shl
pop
xchg
add
pop
or
popa
and
pop
dec
push
push
ret
insb
cmc
cli
and
rolb
jl
in
jle
add
mov
aas
dec
push
adc
add
sub
stc
fistpl
adc
cwtl
lret
cs
fistl
nop
imul
pop
inc
nop
and
xchg
push
arpl
or
inc
popf
inc
mov
xchg
lods
mov
cmpb
repnz
jnp
aaa
mov
pop
cmp
mov
nop
push
push
push
ret
add
pop
fldenv
push
pop
pop
test
push
call
jecxz
scas
mov
outsb
adc
icebp
or
cltd
push
in
inc
int
pusha
aas
or
cmc
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
test
invd
add
pcmpeqw
cmc
inc
sti
add
pop
jecxz
xchg
sub
pop
adc
and
jge
rcrl
xchg
adc
mov
jns
or
push
stc
fidivl
lods
sbb
pushf
jns
inc
or
xchg
fwait
mov
add
mov
inc
int3
inc
es
jne
cmc
add
hlt
cmp
into
pop
and
scas
dec
xchg
or
shlb
adc
xor
mov
and
mov
inc
ss
dec
mov
cld
fwait
xchg
sbb
mov
das
push
mov
or
mov
aam
adc
pop
sbb
pop
cmc
inc
sarb
lret
xchg
xchg
loopne
add
mov
fabs
fstpl
jb
scas
rcll
es
and
mov
jbe
lods
xchg
and
xchg
mov
cmp
and
sbb
aaa
xor
stc
dec
mov
loope
push
jns
inc
hlt
nop
mov
movsl
xor
pop
inc
mov
rcrl
jmp
push
xor
arpl
jno
aas
in
rcll
stc
mov
jbe
push
jmp
shlb
lret
or
cmp
ret
popf
cmp
sub
push
les
lds
fwait
xor
add
push
push
ja
or
lds
jge
jl
or
jo
pushf
sahf
sbb
mov
lods
push
and
mov
sub
sub
mov
fldcw
std
call
sahf
mov
xor
jle
shlb
loop
fs
push
jg
repnz
cmp
add
sti
cmp
jecxz
adc
pop
or
xlat
mov
test
mov
or
lret
test
leave
xlat
test
idivb
push
and
jp
aad
shl
sbb
fistl
ficoml
or
sub
mov
adc
shrb
sub
xchg
popa
pop
mov
nop
daa
out
add
imul
mov
movswl
sti
test
jne
ljmp
js
mov
or
jbe
mov
mov
sbb
fcompl
ljmp
push
lock
mov
psubsb
inc
adc
adc
sbb
lret
fdivs
imul
jne
pusha
or
dec
sub
rcl
dec
je
inc
cmp
mov
dec
dec
sti
add
mov
adc
pushf
rcl
adc
mov
jns
int
orl
inc
mov
ds
inc
imul
data16
repnz
and
inc
push
and
into
lods
inc
ljmp
es
nop
fucomp
rorb
xlat
fnsave
testl
je
aam
nop
shl
shrb
xorb
fisttpl
sub
addl
pop
inc
jne
leave
shll
je
sbb
call
shl
pop
sbb
and
sub
mov
sbb
push
enter
mov
daa
xchg
movsl
fcmovnbe
jns
jmp
test
cmpl
adc
movsl
push
inc
out
push
jno
bound
ret
mov
ficompl
mov
je
and
jmp
sahf
lahf
mov
ss
adc
lahf
data16
loopne
mov
pop
sub
stos
fsubrs
in
popf
jae
inc
ja
adc
push
push
fcmovu
adc
adc
mov
es
sub
mov
mov
out
push
or
aas
repnz
push
scas
and
std
xor
dec
pop
popa
jle
sub
xor
push
xor
test
push
in
push
jmp
mov
lahf
outsl
lods
repnz
scas
daa
mov
mov
mov
stos
pusha
xchg
je
or
cmpsb
cmpsl
pop
cmp
jb
les
jecxz
jno
arpl
mov
fists
add
xchg
rclb
xorb
mov
daa
push
insb
fcompl
lods
sbb
inc
mov
jno
iret
cltd
js
mov
mov
nop
jae
sbb
bound
push
xchg
test
fwait
xlat
movsl
std
pop
fisubrs
outsl
mov
sub
and
add
pushf
dec
add
loop
fcomp
in
and
lds
jnp
mov
test
std
pop
push
push
xchg
mov
scas
adc
hlt
cli
cli
les
pop
les
ret
mov
mov
xor
xor
decb
mov
aam
rorl
out
repz
cmp
pop
xor
int
jmp
pop
adc
cmp
movsb
out
stc
jecxz
jl
add
lret
xchg
fdivs
lock
lods
scas
shll
icebp
adc
cmpsl
call
lea
mov
adc
jle
xor
push
mov
mov
ljmp
inc
popl
push
and
dec
add
inc
lea
inc
xchg
sub
xlat
in
popf
mov
adc
adc
aaa
in
icebp
aaa
clc
cs
mov
sbb
popf
and
or
movsl
cwtl
orl
sti
or
mov
dec
ret
pop
and
arpl
cmpsl
ret
test
mov
cmp
int3
pusha
stos
pop
cmc
and
adc
add
cmpsl
mov
xchg
pop
outsl
adc
pop
arpl
xor
pushl
push
test
jbe
jae
lret
div
inc
test
andb
push
mov
jno
push
jno
inc
jg
aad
scas
mov
dec
xor
in
dec
or
sbb
outsb
xchg
and
insb
mov
inc
xor
out
mov
or
mov
rcll
push
mov
xor
push
jmp
inc
push
xchg
scas
inc
and
ficomps
out
sti
add
sub
sub
addb
lret
addr16
jge
dec
mov
and
out
mov
xchg
push
cmp
popa
int3
aaa
incl
add
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
mov
invd
add
jo
popf
or
mov
xor
push
xor
into
cltd
sub
leave
mov
jnp
sub
out
enter
leave
notb
add
out
xorl
outsb
ja
divl
pop
cld
loopne
stc
cmc
xchg
push
and
movsl
inc
cmp
jne
pop
adc
mov
sub
es
mov
lret
adc
xchg
inc
xchg
xchg
xchg
cs
insb
push
sahf
lcall
pushf
or
xor
fucom
mov
cmpl
pop
arpl
push
xchg
int
pop
mov
fs
add
dec
pop
test
push
cmp
in
cmc
dec
pusha
test
push
adc
leave
sub
or
xor
pop
lods
jge
add
inc
ret
push
inc
fbld
add
fstpl
cmp
hlt
addl
test
adc
mov
sub
mov
sub
or
fisttps
and
loop
insl
fmull
cs
jle
xor
data16
incl
and
call
xor
mov
pop
or
imul
lret
or
lods
inc
mov
cltd
jb
inc
aad
add
sbb
or
mov
outsl
inc
and
mov
in
repz
sub
sahf
sbbl
cmc
jmp
add
popf
push
sbb
dec
cmp
icebp
repz
and
jecxz
push
push
shrb
push
mov
outsb
pop
and
es
dec
outsl
incl
cmc
xchg
cmp
rorb
outsl
lret
xor
push
add
movsl
adc
sti
daa
adc
sahf
mov
jp
or
cmp
xchg
nop
add
cmp
das
add
cwtl
std
lret
add
mov
add
jno
hlt
push
call
push
inc
frstor
addb
mov
ficoml
out
jno
shlb
cmp
leave
mov
mov
mov
outsl
push
pop
fsubrs
adc
adc
inc
mov
loope
shr
arpl
xchg
js
icebp
push
dec
xorb
clc
push
xor
out
cmc
xchg
mov
jge
test
inc
mov
imul
jl
cld
or
mov
mov
int
outsb
fstl
ja
cld
mov
lods
and
pusha
mov
cwtl
push
enter
add
pop
sarb
rcrb
xor
pop
in
movb
mov
xor
test
jl,pn
sbb
lods
sub
in
jle
insb
jns
mov
dec
ss
orl
mov
sbb
xlat
loop
aam
jmp
clc
fnstenv
cwtl
xor
arpl
push
sbb
add
sbb
adc
test
cmp
push
push
inc
frstor
jle
addl
lods
push
ja
push
or
loopne
mov
fs
repnz
rcrb
lret
hlt
dec
loopne
push
roll
je
adc
out
das
jo
dec
push
loopne
pusha
dec
mov
repnz
lahf
fwait
int3
repnz
pop
imul
hlt
push
jno
xor
je
jmp
push
xor
add
push
xchg
sarb
ret
roll
ud2
jae
jl
data16
mov
ja
call
outsb
aaa
rcl
and
pop
cmp
sub
push
aaa
jbe
and
sbb
pop
pushf
fmull
test
divl
or
pop
stos
fsubrp
hlt
pop
mov
adc
jmp
icebp
fimull
scas
lds
xchg
es
push
cli
push
mov
fwait
push
and
je
dec
push
push
jnp
mov
adc
inc
xchg
sti
adc
sbb
and
push
or
scas
mov
xor
sahf
mov
sbb
pop
pushf
loop
adc
push
pop
popf
mov
adc
mov
sbb
sbb
sbb
xchg
aad
loopne
aad
cli
and
dec
lock
dec
sub
dec
repnz
lods
mov
loope
mov
out
out
mov
lea
mov
mov
movsl
mov
add
test
and
es
xor
mov
data16
clc
rorb
leave
pusha
and
add
xchg
ud1
cmpsb
scas
jae
dec
sbbb
adc
imul
mov
roll
pop
push
sti
fcmovb
or
fisttpll
std
xchg
sub
push
je
lods
cmp
lret
ja
push
out
pop
push
movsb
scas
sbbb
cltd
out
adc
adc
stos
mov
push
or
sahf
xlat
ds
in
pop
loope
aad
or
lahf
daa
mov
xorb
in
gs
and
mov
adc
xor
inc
mov
sub
rclb
movsb
cmpsl
or
dec
push
push
push
jp
mov
fimull
ja
xor
int3
jmp
inc
fcos
and
dec
push
xor
sbb
adc
xchg
cwtl
fldl
xor
jg
call
push
or
or
fists
or
inc
loopne
adc
fs
jns
cmp
xor
bound
cmp
xchg
jbe
xchg
mov
sub
xchg
inc
pop
jp
adc
add
xorl
or
insl
cmc
xchg
negb
rcrb
jl
enter
insl
nop
into
jp
pop
inc
dec
mov
inc
add
xchg
idivb
cmp
and
cld
andb
test
jnp
sbb
adc
mov
aad
or
movsb
in
imul
pop
inc
dec
cmp
call
and
and
test
push
mov
inc
out
mov
scas
lahf
and
and
call
out
call
and
xchg
push
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
shrd
jae
fnstcw
jmp
into
inc
push
out
in
arpl
push
sub
insb
fisubl
dec
dec
stos
mov
aad
push
aam
ret
pop
jmp
push
fstpt
movl
jge
jns
gs
adc
cmp
mov
mov
add
jbe
je
xchg
in
add
push
std
push
repz
pop
stc
xor
pop
sub
cmp
cmp
pop
push
sbb
xorb
jecxz
push
jno
sub
push
scas
int3
ds
sbbb
adc
xor
xchg
and
adc
and
ret
dec
jle
ja
mov
jb
jnp
lea
or
adc
jno
xchg
cmpsl
sub
je
adc
or
in
mov
xorl
mov
inc
push
pusha
ret
adc
adc
aaa
jle
push
jg
shlb
sarb
sarb
jmp
jle
jnp
or
adc
push
pop
shl
xchg
cmc
popa
adc
fisttps
or
inc
push
sub
aam
loope
test
in
jb
mov
fs
aam
dec
adc
in
add
popf
sbb
test
decl
repz
xor
mov
sub
repnz
pop
std
adc
sub
xchg
mov
inc
xor
mov
sub
jbe
push
lcall
fwait
test
pushf
and
cwtl
insb
and
mov
jo
out
lahf
mov
push
movd
scas
into
xchg
xchg
cmp
lahf
mov
aam
cmp
rolb
pop
inc
pop
outsb
sbb
fisttps
insl
inc
jmp
adc
mov
push
jp
sub
mov
hlt
pop
xor
xlat
scas
mov
jmp
jne
mov
iret
xchg
out
add
mov
orb
fwait
jo
leave
outsl
mov
adc
adc
mov
ret
test
aaa
imul
popf
jns
sub
cmp
cwtl
pop
xchg
and
cld
lcall
inc
loopne
ror
sub
jns
pop
pop
adc
cmpsb
mov
xchg
rolb
loope
mov
jmp
xchg
ret
fcomip
rclb
mov
mov
or
sahf
mov
jb
arpl
int3
xor
cmp
lods
push
mov
outsb
sub
xor
push
or
mov
mov
iret
jae
dec
mov
mov
mov
enter
dec
lret
mov
sti
adc
sbb
sbb
mov
loope
add
pop
imul
cld
imul
sbb
mulb
or
jb
mov
insl
jne
pop
jle
je
jecxz
push
ds
adc
xchg
adc
loop
fbstp
in
xchg
push
xor
jge
adcb
or
in
mov
aad
xor
fcomip
incl
cmp
ss
pop
insl
idivb
adc
loop
pop
jne
test
mov
adc
lods
jl
in
lods
jo
fstpl
mov
loopne
fs
or
cmc
dec
mov
cwtl
ret
xor
rclb
nop
fldl
loopne
arpl
mov
and
into
into
cmp
xchg
cld
aam
orb
mov
mov
stc
mov
xchg
add
fnsave
aad
adc
test
sbb
ret
pop
lahf
push
dec
dec
mov
xor
test
push
hlt
mov
call
sbb
or
aaa
pushf
and
jp
xor
jns
or
adc
dec
inc
outsl
daa
sub
ja
mov
cmpsb
inc
enter
gs
std
xchg
sub
push
or
push
mov
ja
and
mov
mov
jns
fiaddl
mov
and
aas
nop
out
xorl
inc
lcall
insb
inc
inc
jecxz
das
lcall
rol
mov
outsl
or
fildl
out
cmp
enter
out
fnstsw
aad
mov
ss
lds
lcall
leave
shr
inc
inc
mov
jle
add
lods
mov
out
imul
mov
in
cmpb
dec
out
mov
jg
repnz
mov
lcall
inc
dec
dec
iret
push
cli
jle
clc
outsl
hlt
rorb
sbb
sbb
cmp
int
mov
js
push
pop
pop
pusha
sarb
addr16
and
and
xchg
xchg
or
inc
cmp
lods
outsb
sub
arpl
bound
insl
loopne
xor
mov
xchg
sbb
mov
fidivl
pop
loop
sbb
test
and
mov
lret
mov
mov
fwait
mov
mov
subl
xchg
add
mov
mov
push
jmp
adc
sbbb
mov
shlb
push
xchg
xchg
sbb
out
shl
push
add
mov
daa
mov
sub
sbb
and
scas
push
ja
in
pop
fidivs
mov
in
sti
imul
and
jge
insl
movb
push
inc
mov
nop
mov
rorb
mov
sahf
imul
sub
add
and
jo
and
jbe
popf
lods
mov
clc
pop
cmp
inc
int
cmp
cmp
fwait
adc
mov
xor
push
sub
jecxz
jbe
ljmp
mov
pop
sub
xor
pop
cli
dec
jl
jg
and
inc
sbb
jmp
push
push
das
push
lods
push
cltd
fs
push
xchg
hlt
push
in
sub
ret
sub
shl
push
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
sbb
inc
mov
add
cmovb
push
mov
iret
sbb
enter
ss
lods
dec
mov
mov
inc
mov
cmp
pop
dec
das
out
or
and
pop
or
inc
lock
and
mov
or
movsb
mov
hlt
ss
rorl
addr16
pop
cmc
outsl
nop
aam
hlt
sbb
dec
pop
and
mov
mov
dec
ja
out
lock
push
stos
ret
in
sbb
adc
popf
shlb
jmp
sbb
sahf
sub
popf
dec
shll
int3
in
push
sbb
adc
dec
test
clc
xor
in
mov
cmp
es
lea
ljmp
jbe
jg
sub
add
rorl
xchg
stos
mov
mov
adc
fstpt
xchg
xor
cltd
dec
fisubrs
inc
add
adc
adc
clc
xchg
xor
mov
push
into
rcll
ds
shrb
es
jno
or
push
pop
fcmovbe
xchg
inc
cmc
mov
leave
inc
dec
add
pop
dec
xchg
out
out
push
out
xchg
cmpl
out
aam
jae
loop
andb
add
jmp
leave
mov
scas
fiaddl
dec
mov
xchg
out
into
jbe
mov
add
push
dec
lcall
mov
mov
jecxz
push
push
jbe
inc
or
fimull
xchg
sahf
ror
imul
mov
sbb
int
imul
outsb
mov
frstor
mov
mov
shrb
lods
sub
cwtl
sbb
push
mov
addb
dec
push
mov
push
lret
loope
mov
inc
shlb
adc
or
xor
sar
movsl
lret
outsl
aaa
jnp
or
icebp
xorb
jecxz
sub
insl
je
je
repnz
xchg
cmp
pop
push
pop
mov
mov
dec
sbb
mov
mov
jp
into
xchg
xor
cmp
shrb
xor
xchg
lock
test
outsl
stos
push
nop
stc
ret
push
fwait
inc
mov
movsl
cmpsl
inc
movsl
sti
or
popf
mov
cmp
mov
or
hlt
push
mov
fisttpl
or
push
add
inc
xchg
dec
sub
sbb
cwtl
xchg
mov
sub
sub
aad
xchg
addb
push
push
cmp
dec
fists
dec
xchg
cmp
mov
into
xchg
popf
dec
out
jo
xchg
jmp
repz
fwait
or
lret
mov
lea
inc
and
in
int
push
mov
popf
xor
or
test
or
pop
sub
and
leave
fimull
cmp
or
sahf
lcall
mov
mov
loope
enter
sub
fsubl
jb
ljmp
sub
mov
lods
stos
jo
push
fsts
fcoms
fs
repz
mov
jmp
push
in
js
and
push
lock
sub
push
mov
das
enter
sub
cwtl
mov
ret
sub
sbb
xchg
inc
mov
mov
loopne
mov
shlb
fstpl
mov
rcrl
loope
jo
leave
xchg
pop
xor
gs
inc
loop
aaa
test
in
dec
xchg
leave
fistps
or
fwait
jne
fcom
lret
ret
pop
xchg
push
mov
xor
jge
xor
mov
xchg
adc
lret
and
sar
sbb
xor
or
mov
mov
jo
stc
and
in
xchg
or
cmp
mov
nop
dec
les
push
enter
fistpll
repz
and
xchg
xlat
or
cmpsl
jnp
push
lods
add
imul
mov
shlb
sub
test
loopne
push
sub
lahf
push
pop
cltd
mov
and
dec
das
jo
pushl
ret
cmp
repnz
js
push
inc
ret
and
push
pusha
lahf
push
add
or
test
je
or
das
add
add
inc
rcrb
add
pop
into
push
cmpsl
sub
insl
push
flds
outsl
addb
cli
jl
and
in
mov
repnz
test
mov
lahf
sar
cmpsb
pop
rcrl
int3
out
popa
scas
in
lahf
sub
cmpsl
adc
test
cltd
push
jge
pop
es
mov
stos
pushl
lea
sarl
xchg
cmpsb
pop
daa
ret
pop
mov
adc
js
insl
in
sub
mov
fbstp
jnp
fs
add
test
arpl
lcall
mov
mov
push
je
enter
lret
fistpl
sbb
mov
xor
sarb
ljmp
in
lret
and
pop
pop
inc
push
loop
xlat
hlt
xchg
in
test
jge
leave
cmc
xchg
jno
fldt
rclb
inc
imul
hlt
push
repz
cmp
int3
sahf
pop
inc
ds
xchg
ret
ss
and
push
mov
addr16
mov
push
pusha
enter
daa
ljmp
in
movswl
jge
jae
xlat
movsl
sub
sbb
pop
repz
popa
cmc
mov
mov
push
cmp
mov
arpl
dec
pop
inc
addr16
sarl
xlat
lods
pop
int3
sbbb
popf
push
out
rolb
xchg
and
daa
scas
pop
push
cmpsb
leave
mov
jb
and
pop
jecxz
sbb
mov
cmp
inc
push
sub
rcll
sarb
cmp
or
and
sub
cs
movsl
ds
xchg
nop
inc
movsb
cmpsl
mov
pop
sbb
sub
sub
in
sbb
sub
and
or
pop
inc
rcll
mov
pop
idiv
jmp
mov
xchg
mov
pop
cmpsb
js
popf
invd
add
cmpxchg
xchg
jp
mov
faddl
enter
push
push
arpl
imul
inc
ret
fs
fiadds
aam
dec
leavew
aam
sub
call
adc
data16
loope
popf
clc
lahf
cwtl
or
lea
cmpsl
fnstsw
ds
and
cmpsb
and
bound
fisubs
fwait
lcall
fimuls
ret
sbb
dec
jmp
sub
loopne
fnstcw
mov
jbe
xchg
inc
cli
fcomp
add
jge
es
cmpsl
pop
dec
call
test
push
mov
hlt
push
xchg
mov
xchg
jg
outsb
ret
fs
cmp
inc
pop
int3
or
lods
mov
aam
mov
push
xor
dec
inc
cmp
js
stc
test
mov
jp
stos
xchg
into
mov
pop
ljmp
push
push
rcrb
cs
sub
sub
ss
pop
push
dec
pusha
shll
jo
push
xchg
dec
inc
xlat
ficomps
stc
in
pop
popf
sbb
shl
jecxz
shll
adc
mov
dec
sub
or
jnp
mov
pop
test
mov
lock
rclb
push
bound
jp
out
mov
arpl
clc
push
inc
nop
jmp
cs
jnp
mov
add
jg
adc
push
pop
out
mov
and
subb
cmp
add
sub
fsubs
je
cmp
jl
dec
mov
repz
incb
ss
xchg
jns
in
cmp
xor
mov
rclb
stos
loop
inc
lea
and
cmc
mov
into
in
loopne
mov
andb
cmpsl
push
das
test
shrl
jle
push
movsl
out
lcall
and
dec
jge
inc
jl
pop
jge
mov
cwtl
or
mov
rcrl
add
dec
fiadds
popf
sbbl
xor
inc
mov
fwait
or
sub
jne
jo
sub
inc
jo
xchg
sbb
aas
xlat
and
loope
ljmp
in
mov
in
loopne
andb
roll
clc
ja
push
xchg
int3
ret
dec
jo
or
jl
jno
push
nop
and
fwait
and
lds
push
inc
mov
mov
add
addr16
sbb
mov
hlt
inc
fsubrs
aad
repnz
or
or
loop
add
movsl
or
out
or
add
sub
dec
aam
mov
shrb
ret
push
aam
xchg
mov
insl
faddl
and
mov
scas
add
in
popa
mov
insl
mov
mov
int3
jg
cmc
in
cmpsl
pop
out
cmpsb
and
inc
mov
mov
push
shrl
inc
repz
shl
push
xor
stc
or
mov
or
cmp
shll
int
ffree
fstl
push
mov
xchg
push
mov
dec
pop
fldl
popa
fmulp
testb
fsubrl
sub
fidivrs
lret
and
mov
testb
sbb
fistpl
sub
jno
push
xchg
orl
mov
fcmovb
dec
pop
sarb
mov
push
push
es
push
add
mov
fildll
push
das
xor
ljmp
dec
sbb
jle
mov
loopne
mov
mov
in
and
stos
mov
mov
std
es
or
aam
popf
or
dec
mov
adc
jecxz
dec
add
dec
sbb
jae
jne
adc
leave
sbb
xor
imul
sub
lods
sub
sub
loope
cmp
adcl
jno
push
in
les
repz
inc
push
test
inc
mov
pop
pop
cmpsb
mov
sub
inc
js
int3
pop
dec
jge
jo
addr16
inc
push
inc
pop
adc
mov
xor
stos
dec
in
push
test
js
sarl
adc
lods
mov
pop
scas
jl
insb
and
or
imul
sub
sub
pop
mov
and
xchg
cmp
aas
std
daa
pushf
dec
mov
mov
insl
stos
aaa
neg
xor
pushf
popf
xchg
push
xchg
mov
pusha
mov
xchg
sti
out
mov
insl
std
adc
adcb
add
fwait
scas
dec
sbb
cmp
out
mov
or
jecxz
mov
ljmp
mov
xchg
dec
mov
xchg
ss
repz
ret
rclb
in
mov
fdivp
test
push
pop
outsb
pusha
enter
addb
cli
outsb
and
cmc
dec
ja
std
mull
mov
test
jle
leave
lods
or
xchg
lods
jmp
in
mov
sub
loopne
mov
mov
xchg
fidivl
dec
push
cmc
push
jp
and
data16
in
mov
mov
ret
cmpsl
and
lcall
mov
push
mov
mov
scas
aaa
mov
jnp
jecxz
xchg
sub
jo
shlb
sbbl
xor
rcrl
pop
sub
inc
cmp
and
int3
cld
jb
ret
call
push
mov
mov
pop
and
inc
jbe
inc
mov
and
rcrl
dec
popf
dec
out
cwtl
mov
les
jecxz
call
sbb
ss
sti
rol
into
mov
enter
test
mov
cltd
add
lcall
jno
sub
sub
mov
loopne
xchg
add
cmp
xor
fs
and
jne
push
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
js
mov
invd
add
movd
mov
pushf
sbb
pop
prefetchw
ret
outsl
hlt
inc
lret
fisubs
das
and
mov
xchg
sub
pop
mov
and
xor
pop
mov
xchg
popa
fs
daa
or
push
dec
xchg
xchg
cmp
mov
mov
xor
fsub
mov
shll
aam
dec
loop
int3
scas
imul
mov
sbb
pop
adc
or
or
mov
adc
mov
lcall
pop
xor
call
mov
add
mov
mov
sahf
xchg
ss
in
cmp
outsl
inc
mov
fsubs
hlt
int
or
cmp
sub
cmp
jno
adc
and
pusha
lea
sbb
mov
test
aas
stos
xor
sahf
mov
adc
mov
loop
push
dec
data16
xchg
je
daa
mov
mov
jns
or
ret
rcl
lcall
xor
dec
mov
adc
push
lret
lods
sub
and
cmp
pop
aad
cltd
cmp
fnstsw
in
mov
cmc
cmc
sbb
cmp
jns
arpl
flds
cmp
shrl
lahf
pop
inc
mov
std
daa
pop
into
shrl
aaa
mov
push
add
in
cmp
add
mov
jecxz
fadds
outsl
jbe
jecxz
or
pop
stos
inc
int3
fistps
add
xor
in
out
dec
int3
cli
mov
pop
pop
popa
dec
mov
shrb
jns
pop
cmc
dec
sbb
jecxz
aas
and
jb
pop
mov
iret
xlat
inc
jmp
mov
adc
mov
test
and
clc
mov
cld
gs
popf
insl
jg
jae
fdivrl
sub
mov
or
pop
mov
pop
ljmp
xor
shlb
jp
or
scas
cli
mov
loopne
test
imul
xchg
cwtl
push
and
adc
repnz
xor
xor
cmp
and
sbbb
push
lods
sub
push
xchg
jp
xchg
daa
int3
shll
gs
mov
test
movsl
stos
dec
out
insl
lea
cmp
call
mov
cwtl
lds
cmp
mov
fbstp
sub
cli
aam
scas
popa
lret
bound
mov
hlt
bound
push
adcb
mov
mov
pop
movsb
inc
xor
repz
sahf
push
jp
lcall
daa
fcmovnu
lock
pop
addr16
pop
test
arpl
sbb
sbb
cmp
es
loopne
imul
dec
push
xor
popa
fwait
mov
inc
stos
test
or
jge
xchg
add
xchg
pop
sbb
inc
insb
int
dec
pop
lods
mov
jp
into
int3
pop
cmp
mov
push
out
lret
dec
mov
add
or
jnp
mov
dec
jl
xor
xchg
sbb
mov
dec
inc
movsb
inc
xor
mov
inc
push
dec
xchg
add
out
mov
outsb
and
mov
sub
into
imul
sub
lret
jp
das
dec
mov
pop
clc
enter
test
movsl
sbb
adc
stos
sahf
pushf
inc
or
fisubrl
pushf
mov
subl
mov
sbb
and
xchg
inc
inc
jle
call
sbb
pop
dec
movsb
cmpsl
lock
scas
cmpl
sti
or
add
adc
in
adc
and
mov
push
xor
pop
arpl
or
adc
mov
fadds
push
hlt
pop
jno
adc
push
sbb
pop
or
mov
stc
xor
jp,pn
inc
jl
mov
pushf
mov
mov
rcrb
push
sub
shr
add
mov
sub
or
push
pop
enter
imull
ds
cltd
ror
test
hlt
inc
nop
cmp
shrl
mov
lods
outsb
bound
stos
cmpsb
sub
sbb
das
adc
pop
popf
xchg
shrb
mov
fmull
je
loope
push
jle
sub
repnz
jg
cmc
inc
or
clc
jg
dec
inc
sbb
ljmp
icebp
lods
cmp
fwait
lcall
ds
scas
stc
and
sbbb
push
aas
into
mov
outsl
movsb
notb
in
aam
daa
andl
out
mov
ret
mov
mov
push
in
ss
push
mov
push
mov
aad
into
addr16
cmpsl
in
sbb
push
fstps
into
cmp
out
mov
add
ss
ret
or
xchg
mov
jle
sbb
xchg
fldl
or
or
inc
adc
mov
mov
cmp
mov
aam
ja
sbb
int
popa
adc
pop
mov
xchg
decl
dec
mov
sbb
jns
sbb
mov
mov
cmp
xchg
push
in
lods
sub
xchg
mov
adc
xor
ret
out
das
inc
xor
mov
cmp
js
imul
jnp
cmp
in
int3
cmp
mov
and
push
iret
push
push
out
dec
mov
inc
jmp
stos
lea
xor
repnz
adc
fs
lret
dec
mov
pop
dec
mov
inc
xor
adc
cltd
dec
out
repnz
std
and
sbb
pop
pop
pop
or
push
jecxz
push
std
jns
pop
adc
xor
push
sub
jmp
loop
leave
lock
iret
sbb
loopne
push
xor
lods
and
ss
out
js,pn
ds
adc
and
dec
das
aam
adc
push
xlat
or
jne
mov
fstpt
mov
mov
pop
push
push
cs
movsl
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
or
invd
add
xor
int
mov
cwtl
xchg
jecxz
cmp
pop
or
out
fmull
out
fs
dec
or
and
push
xor
cmp
popf
dec
xchg
pop
orl
test
test
std
popa
les
aaa
lcall
xchg
mov
dec
cmp
dec
jmp
je
aam
mov
aaa
jge
imul
adc
add
push
jle
hlt
push
mov
mov
subb
cmc
add
fs
loope
xor
add
sbb
dec
xor
push
mov
inc
and
pop
sbb
in
pop
dec
cli
je
add
or
pop
mov
sbb
xor
bound
into
out
rcr
cmpsb
fstpt
sbbl
pop
mov
addr16
and
jbe
xchg
jmp
jp
push
mov
int3
jle
adc
sbb
rcll
movsl
sti
ds
daa
inc
sub
arpl
cmp
sub
dec
and
cmp
mov
mov
shll
xchg
fwait
out
and
jg
iret
and
insl
js
pop
jle
jecxz
pop
cmpsb
scas
cli
mov
mov
fadds
jb
jbe
rcrb
std
arpl
mov
lea
jge
ret
pop
mov
lahf
out
nop
jb
lret
pushf
ret
or
add
push
loopne
jge
lock
mov
scas
mov
cltd
and
sub
xchg
sub
mov
addl
arpl
pop
imul
scas
test
dec
inc
cmp
ja
or
pop
pop
leave
xor
xor
xchg
cmpl
shlb
pop
aad
aad
scas
lcall
rcrl
add
jbe
mov
jns
mov
test
xor
fdivrl
xchg
imul
in
sbb
cltd
jbe
jmp
dec
hlt
aad
andl
push
jb
mov
loopne
sbb
adc
fsubs
sub
and
in
pop
rcll
and
cld
jae
lret
mov
fcom
pop
rol
push
iret
sub
xor
clc
ja
sbb
imulb
pushf
sbb
xchg
fwait
mov
cs
stos
jns
sbb
mov
test
lods
popf
insb
xor
test
inc
mov
mov
mov
jl
lock
sub
xchg
push
in
lcall
orb
adc
imul
jp
mov
xchg
or
popf
add
or
int3
jnp
aam
cs
das
rcll
into
dec
xchg
jae
les
xchg
add
sti
in
or
rcr
cmpb
in
add
add
mov
mov
mov
inc
cltd
inc
sbbl
mov
or
and
dec
sbb
fs
cmpsl
sub
cltd
mov
dec
shl
sub
pop
imull
xchg
in
mov
mov
insl
add
out
data16
add
sbb
lods
mov
repnz
xchg
xor
add
sub
adc
push
ja
nop
dec
or
lret
lds
fdivr
jne
mov
mov
stc
test
xchg
sub
push
leave
adc
jo
jbe
fwait
outsl
das
xchg
in
int
jo
sub
jge
fcomps
test
insl
loopne
lds
and
shlb
mov
lods
xor
jge
mov
add
popa
and
xor
pop
arpl
js
mov
dec
jno
adc
xor
or
pop
aam
mov
scas
repnz
aad
mov
lret
adcb
nop
jg
loope
and
inc
out
outsb
push
mov
and
pop
cwtl
xor
fwait
sub
lcall
insl
je
mov
and
jmp
pop
xchg
mov
gs
ffreep
or
lret
push
scas
push
jmp
and
shll
int
ret
xchg
fwait
mov
insb
sbb
aas
sbb
jp
loope
enter
fcomi
mov
or
pop
push
mov
mov
dec
push
inc
xlat
test
xor
mov
jo
xor
cld
fucom
jne
dec
dec
negl
jb
mov
jp
fs
lcall
sbb
xor
icebp
push
jo
add
mov
push
mov
inc
movsb
pop
insl
push
pushf
mov
mov
bound
pusha
ret
and
loope
repz
jp
stos
leave
int
and
ss
jle
sahf
mov
push
cmp
daa
inc
aad
and
jns
loopne
outsb
cmpsb
ds
inc
cltd
xlat
add
daa
into
add
cmp
adc
cmp
addl
or
call
leave
inc
xor
jg
bound
add
jmp
push
mov
stos
stc
into
and
mov
mov
shr
test
jbe
xchg
call
pushf
jmp
push
jge
lods
or
xor
jp
or
into
jmp
adc
scas
fwait
pop
sbb
mov
and
and
xor
imul
aaa
pop
popf
loope
pop
fisubrl
pop
test
xchg
mov
sahf
clc
nop
ret
mov
test
or
xorb
ret
jbe
pxor
mov
add
imul
movsb
rcl
sbb
insl
es
jge
mov
jnp
addr16
add
mov
movsl
cmp
jmp
xchg
aaa
cwtl
jle
sub
sbb
jecxz
icebp
and
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
loop
dec
mov
add
jns
jg
mov
mov
add
sbb
and
insb
dec
jb
push
inc
mov
jp
popa
sarb
repz
push
fucom
sbb
es
es
sbb
pop
mov
inc
ret
push
and
inc
xor
popa
test
in
sbb
and
sarb
scas
repz
mov
test
popf
xor
push
pop
mov
pop
adc
mov
mov
push
aaa
sub
dec
xchg
loopne
xchg
jbe
mov
cpuid
in
test
std
sub
cmp
xchg
jb
lahf
fistpll
stos
mov
cs
sbb
mov
sub
and
inc
push
enter
adc
push
imul
dec
cwtl
push
push
gs
adcb
sub
sub
iret
nop
inc
push
dec
jl
xor
add
sub
pop
lret
mov
into
lret
xor
jle
or
jbe
hlt
enter
xor
push
enter
mov
adc
inc
clc
sbb
mov
or
mov
ficoms
aaa
add
or
sar
xor
mov
leave
cwtl
into
mov
scas
lahf
movsb
les
add
pushf
adc
and
jg
loopne
mov
sahf
cli
in
arpl
sar
lea
in
xchg
pushf
jge
mov
into
loope
out
je
dec
ret
dec
inc
push
and
loop
bound
jae
test
xchg
adc
jge
mov
insb
dec
mov
call
sub
or
out
sub
in
sbb
jb
jle
jl
mov
sti
popa
and
jmp
enter
sarl
cmpsl
shrb
xor
pop
shlb
je
push
stos
mov
mov
add
outsb
mull
push
imul
push
shrb
adcl
adcl
std
jg,pt
and
push
popa
repnz
fcmovnbe
xor
out
inc
rolb
pop
lods
dec
loopne
jge
lret
inc
outsb
sub
cmp
rorl
hlt
sti
stc
cmp
lods
push
jbe
ss
pop
imul
and
shll
jbe
xchg
and
pop
arpl
insb
iret
outsl
je
movd
xor
mov
ret
imul
jne
rorl
xor
add
mov
sub
jae
call
or
pop
fisttps
mov
sub
push
jb
stos
sahf
push
inc
scas
int3
out
out
sbb
insb
aad
pop
sub
mov
fmuls
scas
adc
repz
fidivrl
pop
sbb
and
fsts
push
notb
jmp
lea
pop
in
pop
or
pop
fs
or
sub
pop
mov
adc
push
lret
mov
add
fdivl
jbe
pusha
jge
lods
lea
add
and
shlb
mov
pushf
lret
fs
mov
popa
push
lods
in
sub
loop
push
aas
movsl
pusha
xchg
mov
push
shl
call
xchg
in
aam
dec
push
pop
incb
ljmp
out
mov
inc
xor
punpcklbw
movsl
gs
inc
andl
adc
pusha
xchg
adc
mov
mov
xor
or
movl
jns
inc
jae
cmpsb
das
bound
bnd
add
fsts
cmp
loope
sbb
in
fcoml
sbb
jo
xor
dec
sub
xchg
lret
imul
mov
mov
out
ret
lock
into
push
jo
je
push
and
mov
sbb
std
dec
sahf
sub
pushf
stc
es
mov
in
pop
fs
leave
divl
mov
mov
add
xor
pop
enter
imul
mov
push
mov
pop
xchg
or
inc
inc
push
fucomip
pop
cmpl
mov
sbb
mov
imul
ret
mov
nop
call
sbb
shrl
stos
imul
push
sub
mov
out
hlt
sub
cmp
mov
repz
stc
xchg
aad
jns
xchg
lock
mov
addr16
sbb
test
sarb
std
fcmovnu
mov
and
das
fidivrl
add
or
xchg
imul
adc
shrb
mov
fldenv
in
aaa
stc
aaa
mov
mov
sub
and
jecxz,pn
int3
stc
jae
out
jbe
and
rcr
aas
or
out
mov
push
or
insb
jecxz
mov
in
enter
dec
ficompl
mov
mov
cwtl
xor
scas
call
imul
movsl
fs
jl
out
xchg
in
into
popa
xchg
push
push
pop
dec
outsb
lcall
aas
mov
rorl
lahf
popf
jl
and
ficompl
lret
mov
xorl
repz
mov
sub
push
push
cmp
cmp
ja
pushf
mov
xchg
insb
test
test
push
jno
dec
mov
lea
lea
xchg
rcrl
mov
and
lret
addr16
pop
rcr
or
pop
jns
repnz
pop
cmp
or
or
or
jp
jmp
pushf
movsb
mov
jne
movsl
add
cltd
sahf
sbb
int3
mov
outsb
sub
pop
and
enter
ljmp
mov
mov
and
ljmp
xchg
shlb
jbe
in
inc
ds
push
and
aas
push
jnp
aam
pop
fcomi
push
mov
mov
inc
mov
dec
mov
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
cmovp
sti
push
pop
dec
mov
and
popf
jmp
push
cmp
mov
mov
lea
push
dec
xor
in
push
or
sbb
data16
hlt
adc
movsb
add
adcb
xchg
cli
cwtl
mov
fmull
ja
pusha
dec
mov
lret
scas
lods
lods
adc
enter
stos
scas
lea
push
sahf
roll
dec
pop
out
cwtl
dec
shrl
outsb
xor
xor
xchg
scas
xchg
pop
dec
inc
push
loope
test
in
adc
inc
lods
xchg
pop
cmc
push
xchg
cmp
pop
gs
aas
ds
cmpsl
shlb
ret
in
arpl
jl
lods
mov
mov
inc
and
xor
sbb
lods
push
loope
sbb
ret
jl
ret
jno
insl
sahf
or
pop
inc
pushf
sti
popa
in
jmp
mov
pop
jp
int
out
cmp
xor
cld
ja
sbb
int3
ss
pop
divb
cmc
xchg
arpl
sahf
out
mov
pop
dec
bts
inc
popf
in
stc
add
js
testb
sub
movl
call
lcall
sub
fadd
dec
sub
pop
or
adc
fildll
inc
add
cmp
insl
adc
xor
icebp
les
inc
jge
or
divb
cmp
cld
popa
mov
sbb
sarl
sub
jle
xchg
aas
mov
pushf
cmp
dec
or
xor
rcl
cmpsl
dec
sti
adc
cmpsb
jbe
inc
das
movsl
jle
hlt
lret
xor
sub
push
enter
roll
jae
sub
rolb
cld
pop
pop
cli
mov
xchg
mov
repz
les
push
in
nop
or
inc
pop
lcall
jno
jo
daa
adc
dec
or
sub
mov
mov
push
roll
mov
xor
aas
js
lret
mov
adc
sub
add
mov
iret
das
ljmp
data16
arpl
xchg
sbb
and
push
xchg
inc
ret
pushf
push
insb
mov
mov
push
add
or
xchg
sbb
leave
int
and
inc
mov
inc
mov
int3
pop
out
adc
iret
sub
mov
clc
jl
ror
mul
pop
push
dec
cmpsb
imul
das
imul
push
push
scas
and
push
out
dec
cmp
adc
sbb
xor
cmpsb
dec
test
outsl
sbb
push
fnstenv
adc
cli
lcall
dec
cltd
xchg
xchg
push
add
pushf
xor
cmpsb
icebp
pop
imul
addl
and
stc
dec
add
pop
inc
std
mov
leave
xchg
pop
cmp
mov
inc
sub
push
pop
stc
fidivs
lea
dec
jno
std
sti
std
push
cmpsl
mov
xor
je
dec
push
flds
outsb
mov
mov
ljmp
sbb
xchg
iret
aaa
xor
mov
xor
add
jmp
sti
push
outsb
js
hlt
inc
add
push
adc
pop
jp
movsb
movsb
test
and
imul
pop
test
stc
nop
cltd
maskmovq
testl
and
mov
cltd
lret
es
push
and
pushf
push
movsb
inc
mov
mov
dec
jo
pop
aaa
dec
pop
pop
add
inc
cmc
ljmp
mov
pop
pop
inc
jno
popa
stc
outsl
mov
popa
pop
dec
jmp
repz
rclb
mov
and
iret
xchg
push
lret
jne
or
push
aad
and
shll
cmpl
push
sub
mov
push
jo
xchg
push
das
jl
and
dec
enter
dec
ret
push
add
fsubr
outsl
jne
sub
jne
adc
jbe
fsubr
mov
movsb
es
in
jp
in
cmp
push
inc
jnp
lret
fstps
pop
movsl
mov
scas
push
into
addr16
pop
insl
jmp
xor
into
scas
dec
or
xchg
jae
add
dec
and
xchg
fsubl
mov
adc
lds
cmp
insb
adc
mov
inc
and
xor
and
push
inc
shrb
inc
xchg
loope
fistps
sbb
xchg
inc
push
lods
push
das
mov
mov
ja
mov
xchg
adc
or
jl
jne
or
push
push
stc
cli
jp
aam
fisubl
pop
subl
mov
stos
fisttpl
shll
es
out
jns
loop
cmpsl
pop
call
inc
fsubrl
mov
in
jo
push
push
xchg
lret
mov
inc
outsl
fwait
push
cmp
gs
add
or
add
iret
pop
imul
repnz
repnz
mov
sahf
imul
xor
push
cltd
and
imul
movsb
add
fildl
dec
addr16
lods
inc
pushf
mov
jmp
mov
mov
enter
sub
loope
inc
icebp
mov
sbb
pop
mov
mov
out
xor
lods
int
syscall
mov
lret
gs
movsl
daa
or
sbb
mov
cli
and
jnp
lret
insb
mov
mov
inc
xchg
popf
add
add
mov
or
mov
mov
in
inc
dec
add
dec
ret
loope
jae
xlat
lcall
push
jb
outsb
mov
test
js
adc
sbb
xor
mov
out
push
insl
das
movsl
rcr
std
out
lods
loope
sub
fldt
push
ret
jmp
mov
mov
dec
les
stos
xlat
shl
into
cmpb
dec
xor
pop
fdivrp
xor
bound
jle
push
cld
mov
sub
sbb
ljmp
aas
shl
lahf
adc
and
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
mov
repz
enter
or
pfsubr
pusha
inc
mov
cmpsl
fdivrs
adc
adc
ss
out
sbb
dec
cs
or
mov
cmp
pop
dec
jp
dec
mov
sbb
adc
ror
push
call
out
cwtl
or
pusha
pop
lods
fdivs
sahf
add
in
sbb
movsl
outsb
pushf
inc
inc
adc
outsb
out
fsub
sbb
fdivrl
dec
in
js
fmuls
push
loope
inc
cmpsb
dec
and
xchg
jmp
xlat
mov
pop
adc
flds
push
fucomip
test
sbb
clc
mov
lods
xchg
sbb
pop
call
and
dec
ds
mov
ret
dec
push
test
xor
or
aam
pop
sub
dec
dec
jns
pop
pop
add
and
lods
mov
mov
push
ret
in
inc
das
sub
ficoml
dec
icebp
pop
aas
iret
cltd
sub
push
icebp
frstor
pushl
mov
cld
add
fwait
lds
push
sub
xchg
xchg
nop
xor
sbbb
xor
clc
xchg
xchg
hlt
add
bound
inc
in
adc
push
sub
lret
jo
lock
jmp
mov
das
arpl
cwtl
and
pop
shlb
and
repnz
adc
popa
test
push
rcll
aaa
jb
fs
cmp
and
sarl
xchg
inc
mov
add
xor
inc
das
test
xchg
inc
cmp
imul
cmp
jo
dec
or
lret
jmp
cmp
mov
int
pop
or
pop
je
push
fcmovnu
lods
jp
movsl
fldl
jge
mov
fs
push
ret
xor
jns
xor
addr16
inc
cld
in
repz
adc
pop
test
pop
pushf
jmp
pop
adc
xchg
iret
push
insl
sti
push
xchg
lret
push
aad
xchg
pop
frstpm(287
inc
xlat
jle
adc
mov
scas
jb
pushf
les
add
xchg
dec
pop
cmp
call
or
inc
fdivrp
aas
icebp
inc
mov
jno
in
cltd
test
shll
outsl
jo
int
push
fsubrp
pop
test
inc
inc
pushl
mov
xor
int
xchg
jns
jno
jp
dec
call
repz
lahf
xor
cmc
arpl
out
jns
jl,pt
push
lds
mov
fldt
jbe
inc
pop
cmpb
out
jae
mov
push
int3
sarl
jns
lods
xchg
outsl
scas
xchg
xorb
nop
sub
xor
pop
subl
mov
ss
push
lcall
sbb
cmp
jg
xlat
icebp
out
bswap
cmpsb
out
mov
xchg
shr
push
lods
in
jmp
push
into
sahf
pop
xchg
into
pop
cld
outsl
fistpll
add
push
sar
insl
mov
rolb
jo
pop
mov
or
pushf
in
sub
lcall
sbb
add
adc
subb
outsb
shll
fnstenv
adc
mov
sbb
and
and
pop
cld
hlt
outsb
aam
js
iret
and
or
jns
adc
je
jg
xor
divb
test
out
aad
mov
pop
pop
ljmp
ss
bound
js
pop
push
sbb
pop
xchg
lock
into
or
les
lea
lret
incl
das
pop
in
call
fstpt
xchg
aad
andb
push
in
fisubrl
in
xor
in
cld
adc
push
int
addl
cmp
adc
andb
mov
shlb
shlb
frstor
fwait
cmp
mov
xchg
jl
mov
outsb
sahf
fcmovnb
pop
ds
movsb
pop
mov
loope
shrl
sub
pop
mov
out
push
pop
pop
sbb
call
pushf
jo
lret
inc
mov
call
adc
jne
mov
jno
int3
imul
pop
mov
gs
into
mov
inc
stos
scas
sub
addr16
jae
add
repnz
xchg
or
push
outsl
and
dec
lahf
inc
in
clc
out
loop
adc
cmpsl
jns
dec
sub
adc
pop
push
std
pop
pop
flds
int
inc
stc
mov
ss
sub
mov
ret
ljmp
leave
push
mov
xchg
or
hlt
das
mov
pop
lcall
cmp
jmp
sahf
sbb
jno
adcb
lea
les
imul
aaa
pusha
orl
push
inc
insl
jne
aad
xor
sbb
cltd
stos
cmp
outsl
test
leave
js
sub
jecxz
pop
movsl
jns
mov
add
pop
sub
dec
inc
xchg
imul
push
push
lods
adc
icebp
add
adc
shll
leave
mov
push
and
push
fbld
mov
xchg
in
sub
add
aas
rclb
imul
mov
add
imul
loop
pop
insb
pop
and
out
test
imul
xchg
push
adc
push
ficompl
xor
xlat
and
xchg
cmp
add
sub
in
cs
sub
xor
dec
hlt
xchg
xchg
xor
sbb
jns
xor
les
andb
orl
ret
xchg
mov
push
cmp
and
movsb
int
dec
sahf
inc
cmp
movsb
cmpsb
fisttpll
cwtl
or
adc
push
in
test
mov
sti
push
mov
cwtl
push
sub
or
jns
sub
pop
dec
sbb
inc
mov
leave
adc
out
mov
mov
or
pop
test
dec
scas
lods
cmpsl
and
in
js
mov
xchg
and
mov
and
pusha
jno
mov
divb
jnp
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
icebp
sub
or
pfrcpit1
sbb
leave
xchg
scas
sahf
pop
dec
aad
negb
lods
sti
sbb
mov
push
push
sub
dec
push
loope
aaa
fwait
ret
out
inc
mov
inc
xor
mov
mov
outsb
or
pop
sbb
test
in
clc
test
mov
jb
iret
adc
mov
jbe
pop
pop
ljmp
xlat
and
or
cmp
stc
xor
gs
xor
push
and
mov
or
out
push
jl
sub
sbb
xor
xchg
out
mov
jno
fldpi
add
ds
call
xor
daa
mov
xor
sti
sub
int
mov
dec
push
imul
dec
aaa
test
lret
test
test
jo
stc
pop
inc
in
cs
mov
repz
movaps
pop
scas
sbbb
notb
and
sbb
pop
out
sub
test
jns
test
stos
jae
rcr
inc
mov
andb
lock
cmpsb
stc
mov
loopne
mov
lea
insb
jle
and
cmpsl
lock
cwtl
jge
iret
fdivs
dec
inc
daa
fld
push
xchg
dec
cmpsb
ficoml
lcall
dec
ret
in
pop
push
dec
fucom
xchg
cltd
outsb
sarl
pusha
jno
adc
cltd
mov
fcoms
push
or
insl
jbe
lea
pusha
mov
nop
push
mov
rcl
mov
andl
testl
push
test
fsubl
mov
ds
sub
inc
outsb
jne
loop
movswl
ja
sti
mov
imul
pushf
dec
test
sbb
in
leave
cld
and
das
inc
inc
iret
cmpps
dec
sub
pop
jle
popf
fwait
lea
mov
movsb
push
sub
or
lods
pop
sbb
mov
sub
mov
aas
in
xchg
mov
lea
jle
sub
sbb
arpl
ljmp
pushf
repnz
push
pop
mov
sete
std
mov
mov
and
arpl
cmpsl
mov
ljmp
pop
xchg
js
adc
out
mov
in
mov
andb
or
enter
add
jmp
mov
jmp
rorb
dec
hlt
mov
mov
mov
addr16
jl
add
or
pop
mov
cwtl
sub
sbb
mov
out
cmpsb
in
inc
push
stos
push
mov
and
and
mov
fldcw
mov
test
or
gs
inc
pop
std
das
dec
xchg
mov
movsl
pusha
aas
ds
push
mov
adc
xor
out
outsb
test
movsb
cmp
adc
push
lods
call
ficompl
sbb
pusha
and
add
fldl
aad
adc
dec
hlt
push
clc
inc
stos
xlat
imulb
inc
arpl
fnsave
repz
es
pop
sub
leave
rep
dec
jg
cmp
and
push
sbb
cmp
pushf
jne
sti
int3
fs
mov
mov
rcrl
out
mov
popa
or
aad
ja
or
outsb
mov
adc
in
xchg
pop
nop
out
inc
orb
lret
jmp
or
jbe
inc
adc
xchg
xlat
stos
ds
add
hlt
notl
inc
pop
dec
daa
mov
pop
lret
xlat
cld
mov
sub
shlb
adc
test
fisubrl
jl
test
shll
andl
push
inc
inc
loopne
cs
shll
fsubl
jl
in
in
lods
lret
into
jb
mov
data16
fdivp
xchg
pop
rclb
ljmp
lret
std
xchg
xorb
cmp
std
dec
sub
popf
push
pop
push
mov
imul
push
adc
xchg
jmp
xchg
add
adc
shlb
scas
arpl
dec
outsl
mov
aaa
sub
and
push
xorb
gs
popa
dec
and
shll
daa
lcall
jmp
xchg
and
mov
out
xlat
and
std
push
inc
enter
repnz
shr
das
sub
cmp
mov
cmpsb
dec
jbe
xor
cmp
lods
adc
sbb
pop
sbb
add
scas
lret
cwtl
out
gs
shll
inc
mov
sbb
nop
cmp
sbb
addb
shll
gs
iret
pop
or
adc
js
pop
mov
xchg
test
outsl
push
xor
cmp
ja
sbb
xchg
and
mov
es
dec
stos
ret
mov
pop
jmp
fstl
jno
rcrl
xor
addr16
inc
data16
scas
pop
jbe
addl
movsl
lods
lods
mov
out
cvtdq2ps
xorb
cmc
mov
sub
add
ljmp
adc
jg
arpl
loope
iret
mov
jno
add
imul
cmp
cltd
sbb
aaa
pop
ss
mov
sahf
mov
jnp
or
xchg
inc
jne
dec
pop
cmpsl
mov
sahf
scas
shll
insb
loope
pop
sbb
pop
fwait
lcallw
dec
adc
aaa
ljmp
lods
cs
insl
cmp
sti
jmp
test
orb
inc
mov
and
int3
inc
loop
lds
rolb
in
test
mov
xchg
lret
sti
sbb
lea
cmp
jno
shlb
sub
rorb
mov
stos
mov
jle
mov
and
and
cwtl
sbb
loopne
push
in
loope
sub
pop
mov
in
mov
imul
mov
aas
mov
pop
cmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
dec
jp
outsl
xchg
xchg
sub
test
xchg
fwait
stos
shrl
stos
pop
cmp
dec
mov
fisttpl
jg
cld
sbb
push
mov
jae
adc
cmp
icebp
and
fwait
jmp
xor
arpl
cmp
push
sahf
clc
mov
sbb
das
daa
lock
and
jge
cmpsb
call
test
mov
pop
call
adc
jne
push
in
shrl
push
or
sub
fisubrs
pop
and
test
mov
push
sbb
fcomps
fwait
or
cmc
push
hlt
scas
push
inc
inc
popa
mov
mov
push
jns
fdivs
pop
ret
mov
rcl
fists
cmp
sbb
push
fldt
inc
into
adc
loop
cwtl
mov
call
mov
or
int3
xlat
cmc
cli
sub
mov
and
jb
cmpsl
jp
adc
jne
out
inc
in
and
es
mov
dec
mov
icebp
jbe
lea
lret
fcmove
je,pt
cmpsb
mov
pop
add
cmp
idivb
push
sub
and
sbb
mov
mov
xchg
push
jp
sub
pop
jge
das
enter
je
add
aad
inc
sub
sub
mov
lcall
and
push
jnp
mov
js
ds
push
pop
inc
push
sbb
leave
xchg
xor
fcmovnbe
pop
dec
add
cmp
jns
aas
rcll
mov
adc
vmovaps
scas
pop
mov
xchg
in
xchg
rorb
lea
pop
bsf
dec
jp
loopne
loop
push
or
jl
out
mov
stos
cmp
sub
dec
and
and
mov
addr16
jp
outsl
clc
icebp
shll
mov
cmp
lea
mov
ljmp
inc
mov
loope
mov
popa
fcomi
jae
scas
pop
or
test
pop
std
dec
inc
xor
xchg
loop
nop
insl
shl
or
std
orl
sbb
adc
js
mov
fmuls
into
xchg
mov
andb
adc
aas
or
adc
aaa
repz
mov
mov
inc
xorl
faddp
push
jmp
fbld
stos
mov
mov
xor
push
fwait
out
push
rcrl
aaa
inc
dec
dec
mov
xlat
bound
mov
stos
testl
add
adc
adc
cmp
and
ds
dec
inc
lret
notb
testb
aas
or
test
mov
out
cmpsl
xchg
lods
xor
into
mov
push
push
xor
jle
fsubrl
sahf
push
out
mov
nop
jno
jae
ljmp
dec
frstor
ret
pushf
pop
push
pop
jmp
xor
add
inc
insl
sub
adc
enter
fwait
les
pop
pop
test
jg
pusha
ja
push
pushf
arpl
inc
adc
dec
jge
inc
divl
leave
and
fwait
mov
and
imul
fmul
or
mov
push
in
daa
cmc
mov
push
ret
xor
insl
xchg
cmc
test
mov
dec
fdivrs
and
mov
test
mov
jge
dec
cmp
rorb
rcll
adc
enter
lea
mov
sysret
pusha
pop
pop
xchg
cmpsb
mov
inc
fistpll
stc
jmp
cmp
ljmp
cmp
xchg
repz
push
fadd
push
cmp
mov
inc
jb
adc
mov
sti
enter
cmp
aas
mov
negb
add
repnz
jle
inc
sbb
cmpsb
cld
shl
add
stos
adc
mov
push
inc
jp
les
mov
scas
outsl
mov
add
jl
sub
aas
xor
xor
aam
ljmp
int
cmpsl
mov
ds
cmc
cbtw
sub
xchg
ficoms
mov
mov
pop
stos
adc
cwtl
xchg
and
adcb
mov
ret
cmp
inc
cmc
sub
mov
mov
dec
jbe
shlb
out
iret
stos
mov
aas
sub
pushf
mov
sbb
out
lock
mov
xchg
lock
fmull
and
cwtl
inc
test
shl
sbb
and
lea
cmp
mov
dec
popa
adc
inc
sbbl
sbb
outsb
sub
mov
sbb
ds
test
mov
out
xchg
pop
xchg
mov
pop
inc
jbe
gs
pop
xchg
aad
sub
gs
push
mov
mov
daa
sbb
jge
jne
inc
popa
fstpt
jb
shr
adc
loope
dec
mulb
add
aaa
ficomps
cmp
and
jge
inc
repnz
push
lock
nop
push
lea
pop
mov
jmp
leave
out
cmp
pop
inc
dec
cld
pop
cmp
sti
mov
fadds
mov
sub
fcoml
or
repz
mov
pushf
adc
cmc
cli
pop
out
movswl
das
sub
icebp
mov
mulb
pop
fld
fld
sbb
ficompl
lcall
inc
daa
jmp
out
mov
inc
ljmp
je
out
adc
jg
call
dec
mov
cmc
mov
iret
dec
lea
dec
lret
inc
mulb
jecxz
mov
je
in
orb
test
js
jle
xchg
mov
daa
cwtl
xor
and
mov
cld
idivb
mov
add
sbb
add
push
xor
rol
loope
jmp
push
mov
cli
sbb
fnstenv
dec
lea
push
lock
invd
add
nop
imul
lods
mov
cmp
rolb
xchg
mov
shrl
xor
lea
push
shlb
sub
mov
fsubrl
inc
das
mov
enter
dec
push
je
pop
leave
xchg
shrl
fldcw
mov
stc
addr16
dec
sub
mov
imul
imul
icebp
push
stc
jnp
pop
movsl
sarb
inc
hlt
cmc
pusha
inc
lret
add
dec
test
mov
not
push
xchg
imul
or
add
xor
mov
int
mov
mov
sub
aaa
cmp
cmp
fucomip
aaa
in
jecxz
jne
ret
or
cmp
aam
je
sbb
scas
cmp
sub
sbb
sub
xchg
pop
jbe
cmp
sub
scas
cmp
mov
or
push
loope
mov
pop
add
jp
fwait
cmp
pop
imul
leave
mov
cld
jg
loope
fsubp
in
enter
cmpsl
mov
inc
test
adc
add
pop
out
pop
add
test
daa
lret
sub
scas
negl
gs
aad
lock
push
cltd
dec
cmp
fistpl
cmp
xor
inc
cmp
mov
imul
push
fstl
insl
ljmp
dec
cmp
jb
outsb
push
pop
ret
xchg
jecxz
testl
adc
in
mov
out
jecxz
xor
jne
jmp
hlt
xorb
jecxz
sbb
pop
xchg
int3
push
mull
shr
sub
cmpsb
rcll
pop
lret
mov
mov
outsl
loopne
call
lret
inc
aas
xor
cmp
or
xchg
leave
jge
fs
sahf
lea
cld
lds
je
xor
push
cwtl
xchg
aad
jp
mov
pop
sub
push
insl
test
mov
inc
lods
clc
shll
js
popa
cmp
fstpt
mov
inc
jmp
jno
mov
pop
mov
push
push
inc
pusha
leave
and
add
pop
xchg
xchg
push
jns
lods
mov
xchg
push
inc
repnz
es
ss
jae
stos
cmp
dec
xlat
pop
movl
lahf
pop
leave
cmc
dec
roll
testb
xor
sub
cwtl
sub
mov
or
sbb
stos
frstor
lock
ss
mov
cmpsl
ret
push
into
je
rclb
aaa
das
rcr
xor
mov
out
pop
pop
sti
lret
pop
pop
loop
fsubr
mov
pop
jo
mov
adc
mov
nop
jge
fimull
cmc
vmwrite
dec
scas
aad
inc
push
sahf
pop
mov
pop
hlt
xchg
push
scas
daa
mov
push
cmc
mov
and
out
push
int3
mov
dec
imul
inc
mov
dec
aaa
int
add
mov
lahf
jecxz
mov
jp
mov
pushf
inc
iret
sub
mov
adc
pop
push
adc
adc
in
cmp
sub
or
movb
add
adc
xchg
mov
shll
dec
jmp
jne
scas
faddl
lret
out
repz
push
mov
cmp
popf
jbe
ret
pusha
fistl
or
fdivrp
pop
xchg
dec
or
mov
ret
mov
jb
xorl
lret
bound
push
out
jmp
adc
fdivrl
dec
push
sub
add
aas
adc
cwtl
adc
push
aas
jge,pn
xchg
push
daa
cmpsb
or
add
movsl
push
fists
adc
nop
and
hlt
xchg
push
xchg
inc
xchg
fidivrl
xchg
fsubl
push
pop
nop
xor
addl
fidivrl
mov
sub
mov
jp
sbb
lods
leave
xchg
add
jbe
push
jp
daa
test
xchg
inc
sub
insl
int3
test
sub
jmp
fisttpl
cmovns
repz
xor
test
jg
mov
inc
mov
int3
mov
push
adc
test
fstl
fbld
xchg
daa
mov
scas
push
inc
test
add
add
adc
ret
in
insb
cwtl
sbb
loope,pt
pop
mov
loopne
andl
into
pop
in
adc
xchg
flds
ljmp
add
pop
sbb
cmp
jnp
nop
sub
stos
mov
cmpsl
repnz
push
dec
sub
hlt
cmp
bound
repz
nop
lods
ret
push
jae
in
sub
cmp
add
xchg
les
dec
xchg
lock
jle
inc
nop
pop
test
stos
push
pop
imul
xchg
mov
ror
push
sbb
mov
dec
imul
inc
ret
jge
inc
mov
ja
popl
cmp
fwait
int
push
add
cli
in
iret
cmpsb
adc
movsb
shlb
and
test
repz
lret
push
and
lret
sahf
push
or
hlt
adc
or
cmp
daa
addl
subb
inc
cmpsb
lret
jae
xorps
ljmp
or
and
xchg
lret
mov
mov
bnd
add
loope
mov
in
cmpsb
rolb
rorl
and
mov
and
out
xor
mov
fcoms
cmp
xchg
out
push
sbb
mov
imul
mov
into
cmp
mov
nop
sub
mov
enter
or
sbb
pusha
xor
cs
stos
adc
mov
cltd
test
sahf
movsb
mov
in
jno
dec
test
stc
or
ret
loop
dec
mov
pop
jle
sbb
jne
jp
xchg
jle
loope
mov
push
negb
into
mov
inc
dec
mov
mov
jb
out
test
loope
test
adc
dec
insb
jl
mov
pusha
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
sub
out
mov
setle
movsb
pusha
inc
fstp
out
lcall
mov
inc
inc
or
pop
adcb
mov
pushf
and
out
cmpsb
cmp
lods
mov
int
stos
inc
push
test
inc
lret
in
push
mov
and
fwait
inc
jecxz
xorb
insb
xchg
jmp
iret
clc
fldenv
mov
sarb
fst
sub
enter
inc
outsb
mov
in
dec
mov
push
jo
call
adcl
jmp
and
jp
pop
xor
mov
fidivrl
lods
cmc
mov
pop
pushf
sbb
dec
xor
adc
adc
loope
stc
xor
push
or
jle
and
cmp
pop
inc
xchg
push
cwtl
jmp
bound
sbb
cmp
xchg
nop
rorb
js
xchg
sarb
or
jmp
lea
and
ljmp
mov
inc
outsl
add
mov
mov
out
imul
enter
rclb
add
pop
jg
inc
test
ror
mov
es
sbb
and
imul
add
in
movsl
xchg
ss
or
or
xor
dec
mov
jo
into
inc
lahf
pushf
inc
jns
loope
pop
pop
mov
mov
add
push
out
in
stc
dec
outsb
or
fbstp
mov
aas
mov
es
or
xchg
out
sbb
imul
push
mov
call
push
jle
mov
xor
notl
mov
mov
mov
popf
fstps
data16
mov
xor
ret
fwait
jbe
popa
in
out
mov
jb
arpl
mov
mov
scas
int3
ja
push
xchg
aaa
rorb
fs
xlat
out
bound
cmp
dec
push
pop
es
iret
out
cld
add
add
mov
in
icebp
lea
bnd
cmp
mov
jnp
jle
mov
add
jecxz
push
ds
pop
shll
mov
lahf
imul
out
aas
jae
lret
push
ret
sbb
jge
inc
cmp
and
sbb
inc
pop
call
es
test
lcall
ds
enter
cmp
pusha
mov
sbb
xchg
lcall
test
adc
mov
subb
pop
xlat
fisubs
inc
jge
sub
sbb
mov
xchg
xor
mov
pop
rclb
or
movsb
mov
mov
add
xlat
jns
cs
and
pop
xor
or
adc
rorl
les
repnz
inc
lods
sub
int3
jg
mov
sbb
jg
jne
jbe
jle
fisubrl
out
fistpl
cmpsl
in
dec
jns
mov
clc
pop
in
jbe
dec
test
xchg
push
xchg
mov
and
adcl
cmp
cmp
loopne
mov
sahf
nop
push
and
cmpsl
xchg
inc
in
int
or
push
out
xor
xor
dec
mov
add
pop
sti
mov
dec
insl
jge
js
cmp
inc
sub
push
dec
test
jmp
push
clc
xchg
movsb
adc
sub
and
mov
sbb
push
xchg
push
push
scas
sub
mov
mov
adc
imul
or
stos
pop
cmc
xchg
int
cmpsb
sub
in
imul
cmp
fucomi
jg
inc
cld
jle
es
pop
addr16
dec
movsl
inc
fldl
test
orb
cli
mov
cmp
add
repnz
or
add
jns
xchg
cld
aas
pop
cmp
adcb
xchg
push
shrb
clc
leave
out
sahf
mov
push
push
jns
mov
pop
xor
mov
xchg
int
inc
in
push
cmp
nop
data16
dec
negl
jmp
pop
cmp
xchg
push
daa
cld
dec
loopne
or
mov
mov
inc
or
outsl
mov
insb
ss
mov
mulb
loopne
add
pop
sub
pop
fsubs
mov
les
nop
adc
lock
nop
add
int
dec
clc
sub
or
push
ja
push
test
sub
pop
jl
push
xchg
sub
stos
mov
inc
lds
int3
repnz
fldenv
out
pop
hlt
jae
fcoms
xchg
stc
cs
aaa
dec
push
ficoms
and
adc
cmp
or
fistps
adc
jns
test
popa
scas
mov
ds
daa
mov
mov
or
sub
jne
fistps
lds
inc
sbb
jge
mov
push
enter
xchg
fisttpl
cmpsl
fmulp
sbbb
mov
mov
fsubrl
push
test
push
iret
sub
adc
jne
jns
std
dec
inc
mov
adc
std
inc
outsb
mov
sub
arpl
xchg
ja
in
ret
cmp
or
or
push
jae
or
ror
daa
shl
dec
fdivr
icebp
pusha
les
pop
mov
scas
mov
or
cs
addr16
jno
inc
scas
dec
mov
mov
cmpsb
lahf
clc
loope
mov
jno
sbb
bound
cld
sti
mov
push
pushf
leave
inc
into
test
dec
mov
mov
pop
in
dec
inc
add
repz
es
pop
fnstenv
shlb
pop
lret
in
icebp
push
or
fdivl
test
daa
ficomps
pop
push
gs
xorb
jge
movsb
add
pop
sti
and
mov
dec
mov
into
sbb
fdivrl
push
or
call
push
sub
fldenv
mov
lock
in
ja
mov
loopne
sbb
iret
dec
or
mov
mov
test
sbb
fcmovne
int
out
aaa
jl
fidivrl
sbb
xchg
gs
inc
mov
mov
inc
out
xchg
xchg
ss
sub
push
pop
add
out
xlat
push
mov
movsl
pop
mov
lds
or
xor
sub
bound
bound
pusha
inc
xor
and
cmp
arpl
push
jge
pop
mov
jnp
loop
mov
mov
xlat
sbb
sub
and
xchg
nop
cmpsb
cmp
adc
pop
cmp
nop
lods
fsubp
and
jbe
xor
jbe
es
xchg
push
jae
stos
iret
pop
addr16
bsr
pop
cmp
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
icebp
mov
clc
sbb
mov
cmovle
push
xchg
in
out
jp
pop
add
xor
fmulp
jae
icebp
xor
mov
outsb
pop
and
movsl
xchg
mov
das
push
mov
and
dec
mov
mov
jo
js
sub
sti
cltd
andb
cmp
push
sub
in
icebp
add
in
adc
cli
cmp
aam
jne
inc
cld
mov
and
mov
stos
in
inc
mov
lods
cld
mov
mov
arpl
mov
gs
mov
cli
or
fdivs
movsl
stos
jmp
popf
xchg
jle
enter
in
lret
div
shl
adc
cmpsb
inc
hlt
fiaddl
cli
dec
lds
add
lods
imul
loopne
cld
das
imul
add
mov
lahf
push
out
int3
adc
rcrb
xchg
dec
or
or
and
bound
cld
icebp
mov
fldz
sbb
rcr
dec
es
mov
jae
imul
fmull
xchg
fstp
xor
imul
and
jecxz
clc
rcrb
fdivrs
xor
repz
mov
out
cmp
pop
jb
std
adc
mov
aas
sti
xor
addr16
outsb
inc
sub
std
jle
adc
adc
sub
insl
mov
test
adc
cmc
sub
sub
pop
mov
sub
inc
dec
das
gs
mov
mov
mov
das
dec
repz
mov
jp
sahf
mov
dec
test
or
sub
inc
ret
inc
in
mov
fwait
and
mov
push
xlat
scas
mov
add
lcall
sub
dec
int
sub
stos
cmp
jno
push
test
fistpl
or
dec
out
adc
sbb
lahf
adc
inc
dec
lcall
aad
repz
hlt
jns
popf
roll
test
lea
sbb
mov
in
jl
data16
les
es
xor
rcrb
jg
outsb
addr16
dec
movsl
mov
mov
jno
fstl
bound
xchg
out
aas
dec
xchg
stos
sub
fsubr
xor
aaa
xor
mov
test
sbb
lods
into
and
or
add
dec
sahf
out
mov
inc
stos
scas
or
sahf
and
cli
cmc
jmp
mov
inc
insb
or
jne
cmp
jne
jno
imul
jo
cmpsl
cmp
bound
jle
cld
subb
jo
cmp
pop
push
xchg
stc
xchg
adc
cmp
sbb
sti
dec
sub
inc
mov
sbb
cmp
pop
rol
mov
xlat
arpl
je
mov
adc
les
addb
fbld
adc
aam
ds
mov
sub
xchg
bound
imul
or
pusha
hlt
lock
int
cmp
lcall
mov
aam
sbb
into
in
fwait
push
fadds
ljmp
push
hlt
outsb
ret
xchg
mov
jmp
shrb
mov
adc
add
sti
jae
adc
scas
jle
mov
gs
jg
mov
jnp
into
xchg
and
or
popf
dec
sbb
adc
addr16
aas
adc
out
mov
rorb
div
andb
fs
push
pop
lret
add
repz
inc
xor
sbb
xchg
push
dec
adc
xchg
sbb
mov
shl
jno
imul
int
fcomi
outsl
enter
shrl
xchg
lea
xchg
test
loopne
in
aaa
adc
push
lcall
mov
ret
push
icebp
ds
mov
adc
fbstp
xchg
jmp
je
popa
rol
push
and
sbb
ret
out
adc
xchg
push
sub
nop
fistpll
fstpt
rorl
daa
sbb
iret
mov
rorb
mov
pop
leave
fstpl
dec
sub
lods
jmp
cld
ds
pop
jg
sub
inc
mov
shrb
popf
andl
push
adc
lcall
pop
push
pop
and
sbb
out
sarl
adc
and
jl
insl
mov
adc
push
xor
int
nop
int3
sbbb
push
insb
mov
sub
nop
test
test
repz
mov
mov
sub
lea
loopne
mov
stc
cmp
in
or
fcoms
mov
mov
lcall
cltd
xchg
xlat
jl
mov
ret
cld
jae
mov
out
stc
jmp
mov
jecxz
insb
stc
in
lcall
stos
push
cltd
jmp
sbb
clc
xchg
test
adc
nop
xchg
shrl
or
scas
fisubrs
jae
js
lahf
out
push
cld
sub
dec
enter
pusha
mov
bound
adc
popa
pop
pop
push
jae
push
shrb
lret
fwait
or
or
sbb
xor
push
mov
xlat
leave
jne
xchg
sbb
mov
push
ret
xor
mov
notb
jg
test
outsl
sub
out
in
dec
sub
pop
dec
mov
lcall
mov
push
stc
call
jbe
mov
dec
xor
fstp
dec
jo
mov
rolb
insl
imulb
add
insl
cmp
int3
leave
push
mov
out
xor
sbb
lods
outsl
test
cld
ljmp
fstl
in
and
adc
jmp
ret
mov
mov
stos
adc
jo
fisubl
or
mov
jecxz
int
adc
lods
sarb
ret
arpl
xorb
cmp
fcoms
clc
paddsw
fnstenv
div
jecxz
mov
std
outsb
push
push
jle
push
pop
mov
mov
scas
imul
adc
jnp
pop
je
bound
push
stos
test
imul
stos
andl
inc
mov
fadds
mov
xchg
xor
xchg
pop
sbb
scas
popf
fmul
xchg
into
adc
push
pop
fnsave
bound
mov
mov
ficoml
jmp
jp
test
lea
orl
xchg
call
rep
add
shl
pop
cmpsl
test
push
imul
cmp
test
adc
push
popf
fstpt
sub
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
pop
xor
movb
mov
psrlq
xchg
sti
sub
inc
bt
lods
adc
aaa
enter
mov
pop
dec
sub
xchg
punpckhwd
mov
mov
in
mov
push
mov
push
scas
pop
add
xchg
xchg
lods
inc
insl
push
arpl
adc
pop
aas
mov
out
adc
jb
mov
test
clc
popa
stc
cwtl
push
mov
adc
push
stc
sub
aad
mov
sbb
xchg
inc
rolb
cli
adc
cwtl
bound
aam
lahf
jle
test
mov
mov
add
cmpsb
insb
lahf
cmp
push
in
pop
lahf
out
lea
lcall
scas
mov
imul
test
push
pop
mov
test
cmp
jg
inc
fistl
or
adc
hlt
cmp
fcomps
mov
es
rol
xor
aad
xchg
push
xchg
mov
adc
rorl
or
mov
mov
fldt
ficomps
sahf
aas
enter
dec
imul
js
mov
roll
test
mov
pop
xchg
lret
frstor
out
mov
or
inc
push
test
bswap
scas
pop
jbe
adc
lahf
sbb
enter
jmp
movsl
insl
fcomps
push
cmp
mov
add
fldl2e
push
repz
stos
testb
je
cmp
inc
cwtl
pop
lret
dec
push
cs
loope
jns
and
fdivs
insl
xor
mov
pusha
pop
mov
pop
sub
fstl
js
stc
inc
repnz
sub
adcb
and
dec
jmp
or
pop
daa
in
out
xor
loope
dec
dec
pop
outsl
les
or
sti
lds
ret
cli
xlat
jae
inc
mov
mov
pop
jg
mov
cmp
andl
dec
sbb
xchg
jb
mov
fwait
push
jb
adc
fwait
test
loope
arpl
rclb
hlt
and
lret
das
movsl
stc
mov
fnstcw
insl
mov
out
pop
fidivs
and
xchg
scas
dec
adc
push
mov
cmp
jno
lods
hlt
icebp
xor
clc
push
jg
ss
sbb
cmp
popf
jle
inc
scas
sub
aaa
or
cmpsb
mov
jl
bound
std
cwtl
xor
out
mov
popa
addb
cmp
out
dec
xor
popa
out
loop
sub
in
adc
push
filds
fisubl
shll
xchg
push
dec
lods
sbb
std
pop
sbb
frstor
ret
rclb
std
xchg
test
out
adc
data16
std
adc
or
adc
add
cwtl
leave
je
movl
movsl
hlt
push
push
sbb
xchg
sbb
xchg
pop
push
das
in
fistps
test
ljmp
mov
rcr
popa
xchg
mov
cmp
push
mov
push
mov
fstl
mov
sbb
loop
lahf
aas
ljmp
test
mov
pop
scas
insl
into
add
jno
jmp
out
repz
test
xchg
fistpl
jb
data16
test
push
push
mov
insl
insb
push
lcall
inc
mov
fistpl
inc
ret
into
mov
push
pushf
jno
iret
inc
mov
ljmp
pop
push
repz
adc
rolb
pop
xchg
add
out
cld
cmp
sti
xchg
xor
outsl
ljmp
mov
outsb
and
inc
sbb
sbb
stc
ja
mov
lock
sub
dec
push
xor
jg
xchg
mov
cmpsb
scas
lfs
scas
hlt
and
mov
mov
dec
mov
sbb
cmpsl
or
inc
and
mov
add
mov
fmull
shl
lret
lds
imul
sbb
pop
add
inc
jns
jbe
daa
xchg
sub
jnp
in
adc
into
aam
push
mov
out
bound
call
aaa
stc
hlt
or
shlb
xchg
pop
dec
call
je
addr16
push
inc
out
repnz
cmp
not
dec
adc
push
mov
cmp
inc
faddp
xchg
cs
jecxz
xor
xchg
or
push
ss
inc
das
mov
loopne
mov
in
mov
scas
mov
cmp
loop
loope
mov
push
pop
adc
cmc
sti
adcb
out
vmwrite
mov
bound
ss
pop
xorb
mov
inc
or
xchg
cmpsb
pushf
mov
movsl
xor
and
sub
pop
das
neg
out
xlat
and
jge
dec
xor
dec
sarl
shlb
jo
iret
sbb
lea
pop
mov
dec
into
fsubl
scas
mov
movsl
cmc
sub
jle
leave
fmull
dec
jmp
int
in
je
cld
data16
dec
orps
inc
dec
int
xor
and
cmp
push
into
sarl
jae
cmc
loopne
mov
xchg
xor
mov
gs
loope
pop
mov
sub
popa
mov
rcrb
sbbl
adc
push
popf
add
call
dec
mov
push
push
cmc
lea
mov
mov
hlt
jne
xor
jo
ljmp
icebp
push
sub
daa
push
mov
in
and
insl
and
jg
ror
movb
je
cmp
jne
push
in
repnz
dec
and
sub
lcall
xchg
lcall
stos
popa
jg
adc
add
or
arpl
pop
in
mov
repz
jle
jo
sbb
in
sub
out
inc
mov
imul
hlt
lret
in
inc
adc
inc
enter
fsubrs
jecxz
add
ss
imul
or
addl
xchg
jge
mov
xor
xor
iret
outsl
jnp
in
sbb
filds
sbb
push
dec
inc
cwtl
jne
sub
shrl
sub
rol
cwtl
adc
scas
pop
call
inc
aad
push
mov
hlt
inc
xor
rolb
push
loope
add
test
cmpb
lret
lret
in
shlb
aas
mov
loope
adc
or
mov
ljmp
cmp
mov
xchg
aaa
push
testl
adc
jmp
into
add
or
lds
js
notl
mov
psrlw
dec
movd
pop
out
mov
pop
mov
xor
adc
dec
bound
cs
or
out
enter
adc
mov
loop,pn
les
loop
arpl
mov
mov
push
hlt
push
daa
out
or
push
cmp
sub
xchg
aas
sbb
push
xor
ret
mov
fucomp
es
adc
mov
cld
cltd
cli
loopne
lods
pop
aas
pop
inc
les
adc
lods
cltd
mov
inc
or
test
dec
push
jmp
cmpsl
mov
stos
scas
lock
dec
mov
xor
sbb
ror
outsl
subl
xor
fsubrl
in
jl
add
stc
push
add
xchg
jnp
repz
arpl
push
pop
insb
add
cmp
les
repnz
sbbb
add
insb
cwtl
mov
xchg
pop
push
loope
subl
xor
ficomps
mov
or
sub
xor
imul
and
sub
mov
xlat
mov
outsl
push
rcll
jno
filds
out
sbb
idiv
inc
xchg
icebp
add
test
sahf
clc
inc
jle
shlb
cmp
fisubs
rorb
adc
mov
sub
cltd
ja
repz
mov
pop
lock
in
or
jge
jg
mov
inc
jg
out
cmp
dec
hlt
shll
jno
and
adc
cmpsb
or
in
fisttpl
loop
cmc
enter
int
pop
out
sbbb
xchg
loope
jge
sbb
inc
insb
fstpl
push
jno
dec
lret
movsl
movsb
push
sub
push
enter
leave
rolb
imulb
pop
dec
push
xchg
push
pop
daa
xor
js
and
or
add
mov
scas
mov
cmpsl
sahf
mov
mov
outsb
fsubrs
dec
lea
addr16
jle
gs
in
aam
lock
pop
pushf
sahf
int3
pop
call
pop
xchg
out
ljmp
xor
mov
aaa
push
lcall
lret
popf
adc
push
adc
pop
cltd
jae
popl
sti
cmpsl
dec
cmpsl
mov
jge
dec
inc
xchg
xchg
pop
fisubrs
xchg
cmp
iret
pop
xor
xorb
enter
test
ret
aad
inc
in
test
scas
ret
sub
inc
pop
sbb
mulb
mov
fdivrl
test
mov
inc
repnz
jo
repz
jno
lock
dec
jg
push
les
add
test
int
sbb
mov
leave
dec
jns
jae
adc
pop
mov
push
or
push
data16
jbe
ds
int
mov
repnz
pop
pop
pushf
jl
cmpb
int3
push
jecxz
dec
inc
lds
push
je
jno
in
push
cmp
test
fmull
jmp
jg
pop
stos
imul
sbb
into
add
cmp
jb
mov
fnsave
lcallw
orl
dec
adc
fisubrl
and
push
lds
test
inc
jae
pop
cmp
in
aas
ds
gs
test
movsb
insb
int
rolb
or
aam
aad
lcall
adc
or
decl
in
pop
pop
sbb
loop
xchg
or
cmc
cli
dec
jbe
aas
fldenv
pop
sub
ficomps
mov
fcmovbe
xor
js
push
inc
stc
xor
jmp
mov
rcrl
add
js
add
pushf
sbb
push
cmpsl
mov
xor
fcoml
dec
rorl
neg
arpl
icebp
fisttps
mov
push
jle
ja
imul
adc
xlat
cld
out
jge
pop
xchg
repnz
pop
or
xor
repnz
ret
das
cmpsb
xchg
in
adc
add
adc
insb
nop
dec
xchg
pop
lret
in
sub
dec
cmpsl
adcb
lds
xchg
xchg
in
jmp
pop
hlt
sbb
lock
arpl
into
pop
push
je
lods
xchg
xchg
sub
add
fisttpll
or
movl
mov
test
addr16
mov
outsl
test
and
inc
sub
add
fsubs
in
xchg
rcrl
dec
mov
xchg
adc
mov
cmc
out
xor
sarl
cmp
cmp
leave
inc
ret
and
xchg
testb
lea
sahf
sahf
jns
cltd
and
clc
ficoml
sti
and
xchg
mov
inc
shlb
xlat
adc
push
loopne
daa
cmp
sub
pop
push
push
movsb
jnp
lea
cmp
xorl
cmp
int
clc
popl
xorl
dec
lret
pop
mov
dec
in
inc
dec
jns
fisubs
lcall
inc
pushf
pop
decb
pop
push
out
dec
pushf
sub
mov
pop
or
sub
cmp
cld
shll
xchg
adc
and
js
pop
or
inc
xor
pop
xor
dec
lea
push
pcmpeqd
shlb
jl
icebp
sahf
push
dec
dec
sti
das
push
sbb
sbb
rol
fsubrp
loope
cmp
inc
movsb
jle
cmp
mov
out
in
cmp
enter
mov
xor
xor
popa
sbb
lock
loope
xchg
scas
dec
mov
inc
aad
jo
cld
aam
lcall
xchg
loop
pop
insb
rcll
sbb
rcl
mov
sub
pop
fcomi
sub
fmuls
push
sub
out
jl
jb
lahf
adc
mov
imul
repz
push
adc
xchg
add
leave
sub
notl
mov
mov
test
fdivrs
lcall
cltd
fmul
sub
pop
lret
cmp
adc
daa
je
jle
jo
inc
dec
daa
jne
sub
or
ficoms
jecxz
push
or
mov
xor
bound
xchg
xor
sub
jns
push
out
mov
std
cld
out
fdivl
fimuls
inc
or
in
or
and
cmc
ret
mov
pop
sbb
push
and
push
push
lods
jle
mov
cmp
aad
outsl
xor
jns
shrb
inc
iret
sub
pop
xorb
popa
pushf
dec
test
add
sahf
les
cli
rolb
mov
mov
iret
cmp
cmp
or
imul
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
sbb
adc
and
xorb
mov
mov
std
push
hlt
xor
push
cmpsb
in
movsl
mov
sub
push
aas
xchg
xchg
xchg
mov
pop
dec
push
sahf
mov
and
repz
cli
mov
pop
rorb
into
adc
sti
rorb
sbb
mov
mov
rcl
aad
dec
add
or
cmpsl
cs
or
xlat
xor
xor
pop
xor
cmp
icebp
fs
movsb
loop
divl
adc
loopne
cld
stc
cmp
adc
mov
int3
and
sbb
push
push
dec
mov
fwait
cs
mov
dec
lea
es
hlt
cmp
sub
lahf
in
scas
cmp
push
rorb
imul
mov
cs
shrb
iret
pop
jne
xor
jg
ds
mov
or
mov
shlb
sbb
push
dec
lahf
shrl
dec
xchg
call
adc
xchg
adc
jae
or
push
sbb
lahf
mov
pop
rclb
ja
pop
imul
pop
iret
ret
lret
dec
mov
push
jp
and
cmp
xor
mov
cli
arpl
xchg
add
lahf
jl
mov
lods
xchg
rcr
test
aam
mov
add
mov
jne
add
fstps
jecxz
out
imul
js
pop
insl
testl
in
and
ss
mov
js
mov
stc
bnd
inc
dec
lods
daa
mov
insb
scas
js
scas
jo
out
test
ljmp
insb
jnp
pop
xorl
sub
movsb
xor
into
andb
scas
or
mov
xchg
mov
call
sbb
ret
cli
dec
jl
fwait
stos
pop
aaa
push
push
lahf
test
cli
adc
mov
xor
xchg
add
mov
outsb
ret
xchg
add
out
scas
mov
dec
fmull
repz
add
test
testb
push
rorb
hlt
sub
jbe
xchg
int
mov
pop
push
jnp
aas
xor
mul
int3
xchg
pop
push
dec
sahf
pop
ja
sbb
push
repz
mov
sbb
sbb
imul
dec
xor
test
jmp
out
cwtl
rorl
leave
sbb
xor
int
mov
cmpb
adc
frstor
sarb
xor
inc
mov
sub
lahf
dec
mov
sti
lods
notb
cwtl
jns
mov
xchg
lret
loopne
pop
int
xchg
int
pop
mov
mov
or
push
xor
cltd
push
mov
jg
enter
xchg
push
push
movsl
sbb
push
mov
rorb
leave
add
rcll
ret
inc
outsl
and
addl
jmp
xor
movsb
jle
enter
inc
fildl
loopne
repz
jo
popa
les
mov
je
mov
sbb
push
cs
jb
sub
jg
xlat
fadd
sbb
xchg
pop
in
setno
jo
inc
aam
xchg
sbb
rcr
out
enter
adc
xchg
sarb
jg
lods
movsb
leave
jbe
jmp
iretw
cmc
jnp
cmp
aad
inc
add
lcall
outsl
sub
push
lods
sub
mov
mov
or
js
ret
sub
iret
push
lock
rorb
lods
test
aad
std
xchg
jle
lea
jge
xchg
ror
dec
sub
pushf
repz
sahf
mov
xor
xacquire
loopne
pop
mov
pusha
xchg
andl
pusha
addr16
and
cmp
pop
xlat
and
jno
pop
pushf
xor
xor
dec
sti
clc
insl
push
sti
mov
sub
xchg
inc
sub
lret
rol
sub
jno
mov
xchg
cmp
sbb
fwait
inc
push
inc
dec
dec
sbb
lcall
incb
fiaddl
push
xchg
ret
add
sar
std
call
mov
pop
cltd
or
clc
ficoms
xchg
aas
xlat
xchg
popa
jle
repz
inc
dec
mov
inc
and
push
roll
push
fdiv
or
jmp
int
stos
pop
push
cltd
test
aad
push
xchg
push
fdivrs
pop
adc
lret
or
cli
dec
dec
in
sub
pop
cmp
pop
lods
mov
loop
xchg
push
std
sbb
jl
and
and
inc
push
movsb
and
iret
jo
mov
cld
lret
popf
xchg
and
dec
inc
cld
insb
out
roll
mov
adc
inc
push
insl
mov
adc
out
leave
addr16
or
adc
test
pop
inc
aad
cmpb
inc
jno
xchg
mov
mov
insb
aaa
fcomip
repnz
and
jl
or
cltd
arpl
add
xchg
mov
negb
xchg
rcll
inc
pop
repz
loop
stos
add
jl
stos
dec
enter
arpl
ret
mov
stc
push
sbb
xor
inc
imul
mov
and
xor
or
jle
and
iret
inc
outsl
movsl
cwtl
lock
add
add
aaa
pushf
mov
pushf
pop
or
and
and
or
mov
xor
pusha
pop
ds
cltd
jmp
mov
xor
lret
lcall
and
mov
cmp
mov
ss
or
xchg
shll
das
int
mov
int3
lds
ds
sbb
push
add
adc
loop
xor
pop
imul
cli
sbb
stc
sbb
xchg
dec
rcrb
add
lret
xchg
pop
sbb
xor
dec
inc
jno
jmp
mov
dec
xor
pusha
push
cwtl
movsl
faddl
mov
sbb
lods
stos
mov
test
hlt
insl
xor
ds
adc
xor
inc
sub
mov
and
push
push
outsb
lret
push
cmp
mov
mov
sti
mov
movsl
jno
sbb
mov
test
loope
lock
or
xlat
sub
mov
shlb
add
or
pop
in
mov
mov
dec
mov
stc
ja
jmp
push
jge
sti
int
push
movl
insb
push
mov
jno
cli
add
pop
adc
or
pop
js
mov
fcomi
mov
dec
out
gs
jmp
fdivrs
xchg
inc
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
cli
clc
test
cmp
adc
and
xor
cltd
push
imul
subb
ljmp
xchg
sbb
dec
lahf
and
xor
xchg
pop
pop
jae
enter
ret
jo
dec
mov
sbb
and
cmpsb
push
fucomp
cs
mov
sub
jo
mov
shll
add
lahf
cld
xorb
mov
pop
push
lret
fsubs
pop
inc
sbb
stos
popl
or
bound
and
mov
jecxz
outsl
pop
fisubrl
xor
imul
sbb
imul
nop
adc
xorb
push
mov
xchg
jp
or
test
ja
hlt
lcall
clc
xchg
cmp
sbb
test
jecxz
lods
ja
sub
mov
loope
or
test
mov
pop
jge
cmp
movsl
subl
push
ret
mov
pop
xchg
cmp
mov
inc
incb
inc
xchg
imul
xchg
and
lret
pop
decb
mov
or
lock
int3
mov
mov
sti
loopne
mov
xor
fldcw
dec
movsl
pop
mov
rdpmc
adc
repz
cmc
test
lcall
inc
lret
jp
cmpsb
daa
mov
xchg
gs
push
cmp
ret
xor
mov
xor
insl
and
adc
es
inc
dec
cmp
adcb
mov
add
xor
push
cltd
in
dec
mov
mov
pop
test
lahf
adc
sub
fcomps
lods
lret
stos
decl
dec
or
inc
adc
out
in
aaa
sub
and
sar
out
repnz
sub
sbb
xor
lods
push
mov
add
jnp
lea
and
loop
sub
cmp
mov
cmp
fstl
movsb
hlt
and
sbb
or
shrb
dec
mov
push
sbbl
inc
js
fisubl
lret
addb
outsl
push
roll
xchg
test
sbb
repz
clc
nop
add
inc
or
sub
sahf
and
sbb
mov
fsubrs
pushf
push
adc
ret
mov
sbb
push
clc
arpl
lods
sbb
insb
xor
insb
push
inc
mov
and
pop
and
dec
cs
out
je
fs
fucomip
lret
aaa
daa
mov
or
movsl
mov
pop
cli
and
movsb
jae
fdiv
int
out
add
dec
and
or
arpl
jns
iret
or
sub
sahf
adc
xchg
sbb
out
xor
nop
cmc
es
ds
mov
out
push
or
xorl
aad
addr16
add
dec
in
lcall
or
aam
pop
push
inc
mov
push
mull
mov
adc
fwait
push
push
mov
loopne
mov
jbe
sti
mov
popf
inc
mov
filds
int3
xlat
mov
mov
cmpsb
or
pop
add
mov
add
sbb
insl
xchg
jne
movsl
lahf
xlat
mov
test
lods
pop
shll
xor
test
scas
stos
fwait
decl
mov
test
xrelease
jns
and
cmc
ret
jb
icebp
mov
dec
push
xor
aam
adc
push
int3
jns
sahf
mov
mov
xor
dec
inc
aad
pop
jmp
cltd
sub
lods
jle
rcrl
jae
fcomip
les
stc
mov
mov
mov
add
push
loope
ja
icebp
and
fcompl
inc
mov
aaa
pop
pop
mov
or
inc
push
outsb
add
dec
mov
ljmp
andb
fsubrs
ds
stos
outsb
jae
not
jp
repz
mov
stos
movsl
jne
sbb
push
mov
push
or
dec
push
sbb
lcall
adc
and
adc
mov
mov
jle
mov
into
cmpsb
dec
push
lds
xchg
sub
jns
in
fwait
insl
dec
xor
jb
pop
test
cmp
ror
mov
iret
mov
inc
fcompl
popf
sbb
pop
push
or
jg
mov
xor
jmp
test
stos
xchg
or
rcr
cwtl
pop
dec
andb
jp
into
cmp
lret
cwtl
rorl
mov
push
outsl
push
or
jnp
hlt
sbb
or
flds
leave
icebp
icebp
rcr
pop
xor
sbb
aad
fisubrs
pop
out
fucom
adc
push
xor
xchg
cmpsl
sbb
add
pop
mov
or
mov
mov
push
mov
cmp
shll
loope
mov
lock
lea
in
lret
ljmp
mov
test
add
and
stc
insl
mov
inc
xchg
ror
sub
add
inc
sub
mov
lods
jecxz
mov
scas
out
mov
pop
scas
out
push
push
stc
jmp
push
clc
imul
sti
pop
lods
jecxz
sbb
sub
pop
push
lock
and
jl
inc
or
addr16
push
cltd
push
dec
fcoml
repnz
cld
ret
dec
sahf
mov
mov
pusha
pop
lods
push
and
sbb
ret
dec
xchg
inc
lock
pop
mull
lock
lcall
dec
scas
and
cmp
fstl
mov
ret
mull
roll
sbb
adc
and
mov
mov
adc
fstpt
ret
stc
xor
push
orl
push
jecxz
or
das
push
into
or
and
sbb
shl
add
push
shl
cmp
sbb
outsl
iret
sahf
cmpb
adc
fimull
sti
ret
jge
push
lea
mov
mov
mov
subl
fdivr
mov
pop
add
lcall
insb
jne
call
cmp
and
mov
mov
mov
fistl
jbe
stc
fnsave
iret
aaa
cld
push
sbb
xchg
push
pop
xchg
xchg
jecxz
jbe
jecxz
mov
cltd
sub
ds
nop
xchg
addb
dec
pop
call
cwtl
arpl
pop
stos
mov
stc
mov
js
mov
sbb
mov
mov
sti
fldcw
pop
pushl
cmp
and
in
xor
jb
cmp
out
pop
sub
movsl
inc
test
cmc
add
dec
int
inc
jge
das
pop
les
push
dec
fwait
xor
mov
and
jle
rorl
movsl
or
cmp
dec
das
cmpsl
mov
or
mov
movsl
mov
jmp
cmc
xchg
cmp
push
mov
adc
mov
adc
and
push
mov
jno
sbb
mov
fdivrs
sbb
or
ljmp
sbb
xchg
jo
adc
and
das
xlat
or
imul
jl
inc
or
sbb
xchg
ds
add
pop
in
sub
aaa
inc
ds
stos
xor
or
iret
out
cmpsl
lods
dec
out
xor
or
bts
pop
push
fincstp
mov
jb
mov
cwtl
xor
push
dec
sbb
popf
aas
and
xlat
ljmp
push
push
cmpsl
or
inc
pop
or
xchg
add
out
fstl
cmp
in
sub
fidivl
das
fs
dec
sub
addr16
stc
jmp
in
xor
inc
sahf
popf
cld
aas
sbb
inc
xchg
and
out
leave
cmp
or
outsb
in
pop
lcall
inc
popf
xor
mov
stos
push
stos
les
sub
gs
dec
scas
cmp
pop
pop
fsub
adc
push
out
sti
jl
test
pop
push
aad
pop
jno
push
pop
popa
mov
xchg
test
xchg
xchg
inc
iret
das
out
pusha
shll
adc
jo
out
outsb
cmp
inc
jle
sbb
enter
dec
inc
enter
div
clc
mul
fwait
jae
cld
in
and
mov
mov
xchg
pop
jnp
loopne
xchg
mov
lcall
lcall
jae
ss
xor
xchg
fcoms
gs
jne
xchg
enterw
xor
xchg
and
sub
add
ret
mov
out
push
test
push
in
sarl
pop
jb
jo
sbb
mov
dec
les
adc
icebp
add
enter
cs
adc
icebp
push
sub
add
jmp
mov
and
pop
adc
mov
testb
pop
hlt
insb
lret
mov
sub
inc
cmp
jp
icebp
sbb
add
enter
ds
xor
jecxz
xchg
xor
loop
push
aaa
xor
sbb
mov
pop
mov
lea
sub
pop
fisubrs
push
push
cmc
push
sti
jns
mov
add
es
sub
xchg
es
sub
popa
or
push
jno
push
sbb
fisttps
mov
iret
or
and
add
cmpsl
pop
movsl
dec
or
jnp
pop
bound
mov
inc
std
fidivrs
pop
movsl
sahf
popf
pop
pop
and
mov
lcall
out
adc
push
mov
sarl
and
cld
and
aaa
nop
movsb
lret
push
lods
dec
incl
data16
scas
les
repz
mov
popa
fistl
add
shlb
sbb
scas
adc
push
mov
bound
insl
in
pop
sbb
and
std
mov
mov
cmc
push
pushfw
pop
pop
sub
das
jp
adc
ds
inc
add
fwait
repz
test
mov
add
mov
push
mov
add
xor
rorb
loope
push
aad
add
inc
push
dec
insb
loopne
rcll
mov
aaa
out
mov
into
cmp
mov
dec
inc
mov
mov
in
sti
out
add
icebp
in
xor
fistpl
mov
je
push
mov
jb
aas
xchg
cmc
dec
pcmpgtb
pop
insb
mov
add
sub
dec
ja
loope
dec
fdivrs
test
aam
adc
pushf
mov
std
add
and
or
jmp
into
test
scas
ds
sbb
pop
mov
sbb
add
incl
push
adc
adc
sbb
dec
incl
lea
ljmp
jae
loope
cwtl
pop
pushf
xor
pop
add
cwtl
insb
inc
neg
and
or
jnp
sbb
enter
aas
push
fwait
push
jecxz
push
sbb
mov
cs
pop
insb
push
inc
dec
cld
cmpsb
pop
xor
xchg
rolb
cmpb
rol
push
jne
data16
in
std
mov
idivl
jecxz
jne
es
xor
scas
cs
or
mov
sbb
rcrb
push
sub
repz
pop
mov
dec
aas
push
mov
pushf
pop
mov
nop
pop
or
mov
or
loop
sub
mov
adc
pop
std
out
fldcw
and
jmp
push
imul
incl
inc
lcall
sub
jbe
xlat
fbstp
and
push
mov
add
loop
inc
out
push
lds
adc
mov
adc
lds
ret
test
aas
push
lds
enter
adc
cwtl
sbbb
jmp
adc
loop
push
add
imul
rclb
push
test
sahf
pop
mov
fs
lods
mov
sub
scas
std
jle
xchg
adc
sub
out
lods
mov
sub
les
mov
and
rclb
pop
loopne
cmp
and
fnstcw
fwait
rorb
xor
fdivrs
in
jnp
scas
mov
rcr
aam
mov
into
movb
scas
inc
sub
mul
std
mov
xor
fwait
inc
add
sub
or
std
or
mov
mov
dec
xchg
xchg
xchg
outsl
addr16
jnp
lods
pop
sub
lds
push
push
mov
and
adcl
adc
sub
xor
scas
popa
aam
pop
dec
mov
add
jecxz
out
test
lret
mov
add
movsb
ja
mov
mov
mov
cwtl
mov
mov
pusha
inc
mov
mov
int
adc
push
mov
nop
mov
mov
std
repz
inc
ret
sub
mov
je
ja
inc
mov
xlat
jl
cmpsb
ss
and
dec
in
dec
jae
jno
pop
fdivs
mov
xor
leave
sbb
scas
pop
das
push
add
adc
je
xchg
test
inc
leave
push
jle
inc
or
addr16
jp
dec
inc
dec
fmull
pop
push
rolb
xchg
pop
mov
jge
cwtl
xor
cmc
out
pop
fwait
insl
xchg
push
dec
outsl
or
dec
jo
jbe
pop
stos
cmp
lods
sbb
shlb
call
hlt
out
jno
rcll
dec
dec
fldl
mov
cld
xor
jmp
pop
sub
inc
ret
movsl
das
cmp
es
std
das
inc
outsb
sbb
cmp
xor
cmpsb
pop
sub
fisttpl
lock
pop
ret
jnp
xchg
into
inc
loopne
add
pop
pop
bound
fcompl
mov
lods
scas
mov
lods
add
push
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
das
add
mov
cmovae
push
mov
imul
out
sub
jbe
bound
in
mov
mov
lahf
add
ljmp
adc
dec
inc
or
inc
lahf
xchg
sbb
pop
das
loope
adc
jge
das
cmp
arpl
push
pop
jmp
xchg
std
scas
cli
push
xchg
jne
stos
shll
push
imul
gs
movsl
fucomi
mov
lea
jae
inc
xor
cmp
inc
pushf
add
xor
xchg
or
andb
xor
dec
mov
mov
les
mov
sub
aam
dec
mov
fs
sub
push
push
mov
or
sbb
cmpsb
imul
cmpsb
fnsave
and
jne
adc
sbb
add
imul
les
stc
and
pushf
fwait
xchg
les
hlt
aad
ret
jl
shrl
cld
mov
mov
xor
or
daa
push
rcrl
aaa
pop
xor
or
out
enter
cmp
test
jg
cltd
xchg
pop
into
mov
fnstcw
cmp
es
jg
ljmp
fisubrs
rorb
out
xor
mov
adc
jl
adc
test
push
mov
and
js
pop
mov
andb
pop
xchg
into
mov
and
mov
stos
mul
mulps
cltd
daa
pop
and
push
and
popf
sti
jg
cmp
adc
repnz
clc
push
mov
jge
imul
loopne
xchg
rol
orb
popf
xchg
add
mov
pop
leave
insl
aaa
fcmove
sbb
inc
in
fdivrl
push
inc
and
xor
sbb
sti
cld
leave
jl
lret
cwtl
out
jb
arpl
inc
pop
orl
cmp
jmp
pavgb
mov
cli
test
mov
mov
lcall
mov
popa
add
push
rorb
or
lds
sbb
ret
push
xchg
lcall
mov
push
xorl
mov
cmp
lret
xchg
cmc
sbb
testl
scas
lds
lock
leave
inc
jg
jb
sti
pop
push
cmpsl
add
mov
mov
cmp
sbb
daa
pusha
sti
fsub
pop
mov
arpl
push
repnz
push
lds
dec
dec
xor
enter
out
test
cmp
inc
dec
sub
fdivrl
stc
imull
xor
xchg
out
push
xor
ljmp
addr16
and
popw
mov
lods
test
push
dec
sbb
mov
pushf
test
int
jbe
cmp
fwait
add
data16
imulb
movsb
cwtl
adc
push
aaa
std
xchg
sahf
inc
sub
mov
xchg
fucomip
mov
jae
rcrl
inc
push
rorl
cltd
ret
int
jmp
loope
movntps
daa
rcr
sbb
add
dec
bound
fbld
addr16
fs
cmp
mov
in
mov
test
push
lods
pop
jg
push
popa
gs
or
bound
cmp
lods
xor
push
cld
mov
mov
lea
inc
or
mov
sbb
int3
imul
mov
or
xor
sub
mov
cmp
xchg
xchg
iret
push
sbb
xor
outsb
mov
notb
rorl
ljmp
jne
dec
jp
push
xchg
mov
and
xchg
sahf
sbb
aaa
xchg
sub
std
pop
xor
ss
pop
ljmp
pop
add
mov
ds
dec
sbb
fdiv
bound
pusha
and
push
mov
rcll
adc
je
adc
or
lahf
sub
movsb
pop
or
mov
mov
outsl
dec
jmp
fsub
inc
sahf
out
push
je
cld
dec
test
shlb
scas
mov
leave
xor
adc
sub
imul
test
sbb
mov
xor
mov
mov
jne
pop
jecxz
sub
add
mov
mov
pushf
repnz
and
ss
ja
add
dec
xchg
in
sub
or
aam
push
cs
fbstp
rolb
mov
dec
mov
out
rcrb
lea
mov
stos
arpl
lret
xchg
pop
int
jmp
lods
xchg
mov
jle
push
cmp
or
jle
das
int
and
adc
inc
pop
ljmp
push
sub
dec
jmp
mov
std
jb
cmp
inc
push
sbb
jecxz
test
mov
or
dec
sub
xor
jp
mov
jge
mov
jp
inc
mov
mov
adc
inc
es
in
cmp
mov
dec
imul
fbld
inc
scas
lock
inc
repnz
mov
mov
or
jg
out
pop
js
jge
xchg
adc
push
mov
lcall
test
mov
pop
xchg
xchg
pop
ror
push
push
and
xchg
cmc
lret
je
adc
add
and
push
inc
ds
data16
pop
inc
sbb
lock
inc
xor
jno
xchg
xchg
xor
push
xor
or
cltd
bound
sub
xchg
adc
mov
ret
sub
xor
or
je
and
test
and
mov
or
scas
lods
sub
int
sti
dec
int3
shl
rol
insb
scas
fisubrl
test
mov
xlat
in
lcall
faddl
pushf
add
cld
daa
sub
add
xchg
jno
cli
loop
cmp
idiv
test
jge
jo
push
sti
xchg
xchg
add
mov
pop
fimull
nop
out
shl
jb
out
add
pushf
sbb
mov
not
jecxz
andb
and
cld
incb
js
mov
jne
cmp
data16
inc
movsb
shlb
xchg
test
ss
jo
push
push
mov
sub
jnp
jns
xchg
ss
and
mov
jne
xchg
push
ret
dec
adc
ja
mov
push
test
inc
std
testl
xlat
std
dec
pop
jg
pop
inc
jp
jmp
fcmovne
add
pop
push
test
xchg
jo
mov
and
mov
cltd
xchg
inc
mov
inc
lock
adc
sbb
mov
inc
pop
push
xchg
mov
icebp
mov
and
and
jmp
jne
add
subl
xchg
dec
out
push
xchg
adc
and
lahf
dec
loopnew
cmpsl
mov
outsb
xchg
imul
push
inc
xchg
scas
mov
or
mov
cwtl
sti
and
mov
jne
outsl
mov
push
test
gs
dec
mov
push
sbb
ljmp
adc
mov
push
enter
mov
push
cmpsb
stc
into
mov
lods
arpl
ficomps
pushf
adc
xchg
pop
jb
icebp
gs
test
jmp
shll
cmp
add
pop
jmp
sti
mov
ds
fistps
inc
int
addr16
lret
fldl
nop
jp
fisttpll
add
lahf
clc
hlt
xor
outsb
movsb
fcmovb
inc
dec
jg
xchg
aas
push
adc
push
adc
push
xchg
mov
rcrl
jmp
sub
jle
lahf
ret
xchg
stc
test
mov
call
sbb
add
icebp
mov
pop
out
inc
mov
xor
clc
mov
push
jo
and
mov
add
data16
es
stos
pop
loope
inc
lock
xchg
hlt
add
jno
ret
setb
jns
cmpsb
cmp
stos
dec
adcl
clc
xor
cld
and
cmc
std
jl
cmp
xchg
int3
imul
sub
xlat
or
int3
aam
rcll
scas
lock
sbb
sub
add
sbb
jb
call
pop
addr16
push
roll
rorl
cmp
stos
lea
mov
sahf
mov
fwait
dec
mov
jg
mov
add
and
xlat
dec
clc
imul
in
or
in
fs
in
jne
test
out
and
dec
sbb
negl
or
mov
mov
imul
lea
popf
enter
cmp
ret
aas
shll
sbb
lret
test
bound
jb
push
mov
inc
cmp
icebp
ret
mov
adc
adc
setae
mov
cwtl
sti
inc
mov
mov
lret
in
push
sbb
push
fcmovbe
in
jnp
insb
cli
leave
int3
or
sub
ficompl
int
jo
inc
cmp
cmpsl
mov
jnp
cwtl
sub
rcrl
lcall
pop
stos
hlt
pop
out
ss
xchg
movsb
test
movl
fisubs
daa
pop
xor
xor
dec
sbb
pop
adc
sub
inc
jp
arpl
adc
mov
and
int
jae
leave
mov
bound
or
mov
cmpsl
cmc
into
sub
outsb
adc
fsubs
leave
jecxz
aas
jns
jae
repz
fsubl
insl
mov
int3
mov
mov
push
push
cmp
jnp
push
adc
icebp
add
jnp
addr16
das
insl
mov
dec
mov
in
popf
sub
incb
stos
pop
rcrl
repz
divb
sub
cld
cmp
jno
pop
inc
dec
in
jne
xchg
cmc
repz
loop
sbb
mov
cmc
xchg
es
loope
enter
stc
lods
mov
mov
mov
and
mov
mov
xor
push
out
fcomps
das
add
jecxz
sub
pusha
or
inc
sti
loope
fcmovne
adc
into
jmp
and
push
mov
xchg
cltd
cmpsb
js
xor
movsl
adc
fsincos
mov
clc
jg
dec
aam
push
push
sbb
loop
mov
mov
adc
lcall
rclb
or
shlb
stos
int3
outsb
pcmpeqd
or
mov
mov
mov
cmpsl
pop
imul
out
add
sahf
lods
push
lret
in
shrb
adc
outsb
aad
dec
adc
pusha
jge
xor
in
test
push
mov
adc
enter
mov
mov
shl
mov
outsb
adc
cmc
sbb
bound
add
iret
adc
jecxz
test
adc
lret
pop
cld
rclb
sub
int3
jae
es
cmp
outsl
arpl
out
scas
sub
xor
call
fimull
xor
movsl
jnp
mov
pop
dec
outsb
arpl
pop
or
in
clc
iret
enter
inc
sub
sbb
ljmp
push
inc
cmc
cli
icebp
mov
dec
sbb
popa
cli
push
cmc
push
xchg
pop
xor
mov
ret
push
test
and
je
pop
loopne
dec
in
mov
mov
mov
mov
repnz
push
fwait
cmpsb
jle
fsubs
inc
push
push
loopne
ja
clc
cmc
dec
hlt
ja
jo
inc
and
scas
jmp
dec
fisubrl
subl
mov
push
mov
data16
sub
add
push
add
adc
mov
fdivrl
cltd
mov
jne
dec
inc
int
push
jp
pushf
mov
mov
xor
xchg
inc
sbb
cld
data16
or
je
dec
dec
andl
shlb
pushf
xor
cmp
mov
mov
insb
nop
and
add
xor
push
popf
or
mov
test
push
pop
xchg
push
add
mov
mov
cmpsl
push
ja
in
jl
push
lods
sub
sbb
scas
inc
stos
cltd
fldl
inc
and
test
jne
lods
mov
xchg
inc
cmpsb
xchg
xchg
xor
mov
hlt
or
pop
jno
pop
sub
adc
xchg
scas
mov
cli
jecxz
fucomip
fwait
xor
je
push
out
cmp
and
mov
or
ds
jb
ljmp
lods
dec
mov
icebp
lret
xchg
mov
ret
dec
sbbl
cmp
mov
fs
jbe
and
cmp
jle
xchg
xchg
scas
scas
mov
ja
in
xor
pop
nop
jae
int
mov
push
sbb
mov
inc
je
push
mov
mov
cmpsl
pop
test
pop
cs
add
sub
mov
ljmp
shll
out
hlt
cmc
pop
push
push
add
sub
ds
xchg
xor
xchg
dec
into
add
fisubrs
out
cltd
sub
ja
add
push
push
and
xchg
adc
mov
pop
bound
inc
insb
cld
aad
clc
stos
dec
inc
lea
test
in
test
inc
jo
test
xor
scas
cmpsl
divb
jmp
daa
out
and
stos
mov
xor
jge
das
mov
lret
mov
aad
or
xor
pop
stos
mov
enter
jp
and
data16
insl
mov
xchg
mov
or
lods
push
pop
mov
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
mov
mov
mov
setb
sbb
out
adc
dec
shrb
in
je
arpl
jo
jne
jmp
adc
xchg
fcoms
xchg
loopne
movsb
jns
outsl
xchg
stos
outsl
loope
sbb
test
sub
pop
inc
mov
push
ficompl
aad
sbb
cmp
hlt
adc
adc
pop
mov
jo
sbb
add
xor
cli
push
in
sbb
lea
jno
mov
loope
mov
push
pop
sti
sbb
test
daa
pop
icebp
push
popl
shl
rolb
gs
sub
loope
roll
outsb
push
flds
add
mov
and
pop
data16
lock
add
or
jmp
pop
mov
aaa
jnp
push
inc
outsb
mov
xor
enter
ds
lret
cmpsl
es
dec
loopne
sbb
movsb
call
leave
adcl
jns
lret
jae
mov
add
sbb
dec
adc
lock
jp
cwtl
mov
stc
xchg
test
pop
or
jg
inc
push
fstpt
inc
in
jl
fsubs
xchg
stc
fadds
stc
pusha
jno
xchg
outsb
and
repz
daa
pop
jne
pop
movsl
inc
xor
sbb
in
cli
outsl
lods
bound
adc
jmp
enter
mov
mov
jo
loope
dec
and
or
inc
or
mov
dec
dec
mov
jecxz
cwtl
xchg
mov
in
test
add
icebp
hlt
cld
inc
push
fidivl
sub
mov
xchg
je
scas
call
in
pop
pop
aam
jg
or
repz
inc
jbe
daa
xor
test
loopne
mov
cs
dec
sub
fwait
sar
cmpsb
stc
and
mov
daa
jae
lock
or
into
aam
adc
push
fcompl
jne
push
gs
mov
call
repnz
in
rcrb
push
dec
out
xchg
cli
les
jne
sarb
movl
pushf
push
or
test
ljmp
xor
mov
mov
mov
inc
jnp
add
not
lret
mov
dec
cmpb
cmp
add
jo
clc
outsb
lock
lahf
mov
inc
loope
aad
add
popa
jmp
inc
loop
test
decl
xchg
cmp
jg
and
sbb
cmp
repz
rorb
or
mov
aad
pop
mov
mov
outsb
ja
adc
lock
into
mov
sti
xor
out
testl
popa
lea
cmc
mov
jl
fcoms
orb
push
stc
ja
lret
ljmp
pop
call
jmp
in
mov
inc
sbb
jae
pop
aad
int
cmp
frstor
mov
cmp
add
lcall
loopne
push
hlt
sbb
sete
mov
mov
dec
aam
cli
leave
dec
xchg
test
int3
mov
xchg
push
jns
fiaddl
inc
fmuls
ja
cmp
arpl
insb
cmc
jle
dec
cmp
pop
mov
add
cs
pop
inc
push
xchg
cmc
je
dec
stos
icebp
stc
repnz
cmp
lods
into
lods
cltd
js
adc
rol
sub
sbb
js
bound
movsb
out
jne
pop
out
in
dec
lds
and
pop
adc
cld
es
dec
ljmp
push
loop
sti
cmpsb
aas
jge
add
jnp
dec
push
inc
mov
dec
jbe
mov
lret
xchg
stc
or
xchg
xchg
sbb
push
ret
and
fwait
out
mov
push
out
adc
mov
push
lds
mov
mov
fstl
mov
imul
out
add
jmp
pop
imul
neg
fdiv
out
les
jo
jno
into
pushf
xor
addr16
cmp
lret
test
cmpsl
push
scas
jge
into
inc
pusha
outsb
pop
sbbl
lock
push
lcall
pusha
das
mov
ret
jge
out
dec
xlat
mov
mov
out
scas
mov
sarl
mov
lcall
gs
push
xlat
movsb
ja
es
and
shrl
repnz
mov
dec
xlat
inc
add
mov
lret
enter
outsb
sub
and
fiadds
sbb
lahf
xor
mov
jno
movsb
cmp
and
imul
sbb
pop
xor
insb
jg
push
enter
aam
inc
das
inc
je
mov
mov
pop
dec
out
add
pop
mov
mov
dec
std
mov
shl
xchg
movsb
push
sbb
xchg
cmp
sbb
ret
xchg
mov
repnz
prefetch
or
fstl
imul
outsl
mov
stos
in
int3
lahf
or
das
inc
xor
movsl
sbb
cltd
aaa
lock
orl
leave
xchg
jg
or
mov
mov
insl
or
sbb
cmp
scas
mov
out
jmp
and
sub
push
cli
sub
idivl
mov
sbb
addr16
ficompl
stos
cld
popf
dec
aam
ret
dec
mov
cwtl
and
push
div
sti
rcrb
cmp
mov
lret
jmp
pop
push
in
jge
xor
rcr
jns
add
and
cmp
lds
mov
adc
repnz
test
xchg
outsl
jl
mov
loopne
inc
mov
jle
lds
or
cmp
jl
popa
push
jns
data16
xor
sub
es
test
mov
imul
dec
int
mov
out
push
and
mov
mov
ds
inc
adc
xchg
sbb
adc
xchg
add
mov
xchg
shlb
in
pop
mov
test
roll
inc
daa
fmulp
lret
push
sbb
icebp
subl
lock
inc
and
or
cmp
ret
cmp
lock
sbb
cmp
cmpb
inc
lcall
mov
add
mov
fistpl
and
or
data16
negl
negl
add
jge
fistpll
mov
add
pop
cli
jns
xchg
xorb
negl
xchg
adc
fsubrs
or
stc
lret
sbb
lcall
insl
fisttpl
hlt
icebp
pop
fdivrp
add
stos
mov
cmp
aad
mov
and
iret
lods
cmpsb
lock
call
push
adc
jecxz
dec
jnp
loop
mov
push
loope
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
jo
xchg
pfnacc
mov
pop
pop
cmpsl
sub
ficomps
push
incl
imul
movsb
std
adc
imul
std
cmp
dec
lahf
shrb
shrl
mov
dec
or
nop
xor
loop
inc
addr16
iret
sbb
push
jl
je
and
rcrb
mov
cmc
data16
and
push
mov
sub
repz
in
out
inc
mov
mov
add
mov
sub
getsec
hlt
mov
aad
arpl
daa
addl
insl
pop
bnd
stos
inc
sbbb
idivl
out
and
bound
xor
mov
into
and
fcomps
cli
sub
testb
stc
push
or
scas
or
hlt
jns
mov
scas
out
sub
out
mov
je
push
inc
fstpl
cmpsb
mov
cmp
pop
xchg
pop
arpl
lret
arpl
test
mov
jg
or
cltd
ret
nop
dec
adc
xchg
sahf
inc
insb
out
stc
jno
xchg
in
fsubs
test
adc
inc
arpl
testl
popf
inc
pop
repz
je
arpl
mov
je
loope
jmp
stc
bound
mov
sbb
dec
jne
jbe
test
hlt
inc
xchg
test
mov
out
pop
jge
cwtl
lea
cli
popa
sub
je
incb
mov
mov
test
stos
ret
mov
xchg
mov
out
jnp
dec
adc
insb
pop
mov
fwait
test
lds
icebp
jo
sub
cmp
mov
mov
arpl
inc
or
pop
lods
je
xlat
lea
and
sub
xchg
dec
inc
xor
in
pusha
dec
cmp
dec
fucomip
jae
dec
test
pop
or
or
fdivr
inc
cwtl
daa
cmpb
cmp
pop
sub
call
mov
cmp
mov
lock
jmp
aad
xchg
neg
iret
push
arpl
and
xor
dec
sbb
cmp
aad
inc
sti
sub
inc
xchg
ljmp
enter
inc
movsb
popa
loope
roll
push
push
mov
inc
mov
or
iret
das
dec
cmp
test
lods
xchg
sahf
cltd
mov
adc
ljmp
xchg
jnp
pusha
fstl
dec
pop
dec
out
mov
add
imul
cmp
sub
fiaddl
dec
push
dec
out
imul
sbb
sub
rorl
xor
sahf
push
sbb
pop
push
pop
das
out
push
stos
push
imul
xor
xor
push
fs
add
pop
mov
adcl
js
stc
lock
fstps
push
pop
adc
repz
cmp
scas
icebp
push
add
aad
or
xlat
dec
pop
out
xor
test
mov
in
dec
or
jbe
mov
push
pop
js
adc
dec
xchg
rol
lea
dec
push
decb
pop
sbb
lods
jno
inc
or
mov
xor
ret
data16
xchg
sub
sub
test
aad
xchg
cld
js
sbb
es
fidivs
outsl
stos
cs
cli
das
lods
inc
pop
cmp
or
addb
fs
sahf
bound
or
aas
xchg
popf
jecxz
mov
enter
and
push
pop
push
sbb
dec
add
popa
frstor
adc
test
mov
inc
movsl
or
ffree
or
sub
movsl
mov
call
adc
adc
push
mov
xor
cmpsb
dec
push
popl
pop
xchg
test
fcoms
xor
push
or
cmp
mov
ja
ja
repz
xor
test
push
in
out
pushf
out
imul
xor
repz
pop
lods
cld
cmp
sti
fnstsw
mov
loop
cmp
mov
push
outsb
data16
xchg
lea
xchg
popf
fwait
mov
or
xor
or
in
mov
inc
dec
jl
sbb
xchg
les
leave
mov
mov
movsb
pusha
and
mov
loope
push
xchg
cmp
test
sbb
cmp
xor
pop
ljmp
clc
adc
adc
int3
sub
add
mov
ret
adc
add
jb
jbe
test
movsb
dec
sti
mov
ret
jmp
stos
dec
lret
insb
outsl
lea
leave
xlat
sub
inc
jae
sbb
sbb
adc
out
push
aam
or
mov
aaa
jae
cmp
sub
dec
mov
add
shlb
cltd
sahf
clc
hlt
sbb
rol
xchg
mov
std
je
mov
rorb
andb
adc
sbb
sbb
dec
dec
sub
rcrb
imul
bound
out
xchg
les
sbb
cmp
sub
and
lea
or
inc
arpl
cltd
dec
cmc
mov
lods
jne
dec
leave
dec
in
cmc
push
mov
jns
les
movsl
fldl
inc
scas
popa
loope
inc
rolb
sbb
les
inc
orb
or
ss
stc
dec
lds
dec
fnstsw
fsts
jge
loopne
rolb
ror
clc
or
inc
scas
stc
mov
mov
out
fimuls
cli
mov
jb
addb
and
push
or
or
arpl
mov
imul
mov
sub
and
xchg
scas
clc
adc
out
sldt
add
ds
out
pushl
sub
insl
jno
addl
enter
je
and
xchg
or
popa
mov
mov
loop
cmp
arpl
pop
dec
ljmp
insb
test
gs
fwait
jecxz
out
mov
xor
push
pop
outsb
rcl
lret
push
pop
cltd
add
xchg
fcomp
pop
inc
push
push
and
mov
scas
dec
push
sub
imul
lea
push
lods
pop
xchg
loop
andb
enter
ret
dec
mov
mulb
adc
sub
daa
xchg
dec
mov
pop
daa
lods
daa
addb
outsl
mov
sub
push
ret
dec
or
lea
inc
scas
popa
xlat
pop
shlb
sbb
sbb
rcrl
iret
lret
lock
fcoms
into
pop
dec
das
xor
fs
iret
aaa
cltd
ja
xchg
cs
pusha
sub
lea
inc
and
inc
jecxz
jmp
xor
scas
push
loopne
pop
out
pop
loopne
nop
mov
push
out
mov
mov
out
add
movsl
mov
pop
je
push
jmp
sbb
push
adc
xchg
int3
xchg
adc
cwtl
nop
adc
and
xchg
inc
inc
jbe
xlat
fisubl
cwtl
pop
push
mov
pop
clc
or
addr16
xchg
xor
jg
pop
imul
dec
mov
jp
or
outsl
pushf
adc
fisubrs
pop
and
cwtl
xor
int3
push
push
cld
out
jp
movsl
xchg
jb
xchg
or
xchg
cld
cmp
adc
inc
clc
pop
daa
lahf
in
inc
imul
and
xchg
leave
aad
in
nop
push
inc
fcomi
jo
out
pop
xor
mov
bound
rorl
negl
fnstcw
in
push
mov
adc
fwait
imul
xchg
iret
jl
loop
sub
test
loope
push
cltd
mov
lods
pop
lds
pop
jge
jge
dec
add
cmp
sbb
jge
inc
mov
jmp
push
ret
cmp
push
aad
xchg
jbe
in
mov
adc
push
lds
mov
add
lcall
mov
in
scas
push
lret
mov
mov
mov
lods
pop
dec
jae
mov
lock
mov
cli
int
cmpsl
pusha
and
sahf
cwtl
in
adc
jnp
sbb
mov
clc
popf
and
cmc
inc
pop
mov
daa
cli
mov
fcomps
and
xchg
sti
imul
dec
in
nop
outsb
jne
test
xchg
testb
push
push
ret
cmc
sbb
fiadds
mov
insb
cld
adc
adc
gs
jmp
cmc
iret
pop
pop
mov
adc
lock
pop
xchg
in
push
xlat
mov
in
mov
lea
insb
in
sub
in
call
mov
sub
loop
sahf
mov
lods
mov
fisttpll
and
cmpsl
dec
stos
int3
pop
imul
cmp
out
xor
in
jp
sub
push
jnp
sub
insl
push
mov
inc
cli
sti
mov
sub
inc
inc
mov
addr16
sbb
sahf
xchg
jg
imul
jle
scas
cld
mov
push
fiadds
push
sahf
jo
cmp
roll
shr
adc
xchg
add
lock
sbb
mov
in
popf
nop
push
mov
fidivrl
mov
pop
jmp
ljmp
cmpsl
push
mov
addb
jne
dec
fldt
adc
mov
in
adc
int3
push
pop
adc
imul
sbb
adc
dec
pop
je
xor
pop
pop
ds
lods
xor
mov
lret
sub
adc
mov
fwait
fwait
adc
push
xchg
pop
fwait
or
or
xchg
mov
push
mov
shrl
cmp
ljmp
add
ja
loop
outsb
js
leave
mov
or
lret
lods
push
faddl
mov
imul
xlat
push
lret
push
mov
push
adc
leave
std
loop
jnp
lea
mov
popa
js
jmp
xchg
adc
cmpb
mov
repnz
insb
jne
sti
or
lods
lahf
mov
leave
enter
mov
mov
jl
mov
lahf
pop
sub
and
xor
push
add
inc
pop
sbb
push
lods
xchg
mov
pushf
leave
mov
pop
popa
lods
cmpsb
push
aam
enter
sub
leave
adc
mov
add
in
mov
cmp
cli
mov
ret
or
mov
cwtl
push
mov
mov
mov
sbb
cli
or
xor
xchg
movsb
fisttpl
push
jbe
push
push
sub
push
adc
dec
xor
pop
mov
out
sub
cli
push
pop
popf
adc
aaa
xchg
mov
fcmovnb
inc
inc
nop
mov
jg
leave
rolb
jmp
clc
ja
repz
test
push
xchg
daa
adc
ret
aaa
scas
lahf
stos
incb
repnz
push
push
mov
jle
lret
sbb
aaa
mov
andb
lds
cmpb
lea
jbe
push
mov
and
into
xchg
ljmp
out
mov
jg
dec
mov
push
test
jmp
sub
and
ds
es
inc
xor
dec
mov
scas
leave
dec
sub
mov
or
push
out
push
xchg
out
xlat
mov
mov
outsl
xchg
push
adc
ljmp
mov
ret
psubusw
pop
xor
xchg
sbb
imulb
sarb
add
cmp
mov
mov
xlat
popa
cwtl
xchg
sub
pop
pop
add
sbb
insb
es
jne
lret
cmpsl
data16
mov
fbld
add
out
pop
shll
loopne
out
test
push
sbb
stc
stc
in
cmc
fcmove
and
div
enter
in
pushf
mov
rorb
adc
insl
adc
stos
xchg
out
std
xchg
xchg
sub
ljmp
into
dec
or
push
loopne
xchg
push
fcomps
pusha
adc
mov
clc
out
imul
pusha
push
cmc
incl
ret
xchg
movl
push
dec
or
enter
aaa
icebp
in
sbb
cli
xchg
xor
xor
dec
inc
and
cmp
ret
icebp
adc
nop
das
pop
adc
pushf
out
fwait
mov
dec
fcmovnbe
jl
nop
pop
testb
ss
cld
adc
loopne
sub
adc
es
xlat
pop
jne
jae
mov
loopne
mov
pushf
loopne
fbstp
xor
stos
fstpt
faddl
outsb
scas
lock
mov
test
sub
and
inc
jne
sbb
js
rol
sub
scas
outsl
aas
cmpl
xchg
mov
cmp
mov
sbb
out
in
incb
cltd
xchg
cltd
push
rcll
mov
cmp
dec
inc
sti
movsb
mov
or
xorb
add
jmp
jp
jae
and
test
clc
sub
repz
jne
nop
pushf
push
lods
pop
shr
stos
lahf
insl
mov
sbb
push
pop
in
scas
rorb
fildl
jp
in
addr16
lcall
insb
push
mov
fsubrs
jne
push
shl
sarb
push
iret
addr16
test
sub
mov
mov
fs
loope
push
in
imul
mov
movsl
mulb
repnz
test
xor
sbb
jmp
stc
mov
push
mov
mov
imul
and
xlat
popf
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
scas
adc
mov
add
es
mov
bound
mov
nop
in
rcll
adc
faddp
sbb
or
jl
scas
sub
jp
loope
jmp
cltd
fisttpll
jle
int3
in
out
in
fcmovnbe
into
fnsave
pop
pop
cli
orb
orl
pop
andb
adc
pop
fwait
je
sub
mov
jecxz
test
mov
and
pop
or
lcall
pushw
push
adc
data16
sarl
outsl
scas
jge
rcr
jbe
dec
adcl
sub
pop
fldt
xlat
adc
adc
xchg
pop
inc
cmc
test
stc
mov
addr16
mov
xor
fiaddl
jmp
mov
xor
fildll
adc
mov
cmp
js
cmc
popa
rcrl
xchg
lock
outsb
dec
jo
xor
dec
fcoms
or
xor
imul
icebp
add
add
ret
xlat
lock
xchg
repnz
dec
loope
add
std
movsb
add
int3
ja
out
lea
jne
jp
mov
cmp
sbb
jnp
rcl
sbb
mov
pslld
test
lds
and
aaa
in
cmp
cmpsl
adc
adc
and
into
mov
xor
lock
mov
jae
imul
clc
fcomip
and
insb
std
cmp
cmp
mov
push
mov
push
cmp
in
xchg
jne
shll
pop
cmp
clc
dec
or
dec
repnz
aas
out
mov
add
inc
enter
jl
sub
jae
orl
adc
pcmpeqd
cwtl
lods
inc
push
scas
mov
adc
and
cmp
mov
frstor
ja
jge
or
jmp
mull
add
add
inc
inc
and
pushf
mov
xor
out
stos
mov
xchg
sub
insb
lcall
sub
sbb
xchg
inc
loop
fidivl
notb
dec
push
rolb
sub
mov
movsb
adcl
das
lahf
cmp
pop
push
mov
adc
in
arpl
dec
outsl
lods
adc
sub
jne
leave
je
in
das
insl
mov
cmp
and
and
mov
push
rorb
cli
mov
inc
int
sbb
mov
push
sub
push
add
shld
out
xchg
fsubs
inc
add
movsb
mov
jmp
ret
pop
fists
fsubrp
adc
adcb
das
push
addr16
and
pusha
mov
xor
ljmp
loope
mov
push
stc
test
sub
lret
cwtl
xchg
ljmp
cltd
out
sub
decb
fistl
xchg
movsb
test
cmp
pop
subl
jns
mov
nop
mov
jmp
adc
push
gs
aam
mov
mov
xor
data16
into
lock
xchg
mov
push
mov
push
fs
add
adc
inc
xchg
sbb
xor
pop
push
addl
cs
mov
shll
fxam
je
lods
dec
cmpsl
in
cmpsb
pop
cmp
push
mov
repnz
sub
sub
ljmp
insb
out
adc
push
insl
pushf
leave
or
fdivs
cltd
or
aaa
insb
dec
push
jmp
mov
mov
xor
rcrb
js
push
fwait
loop
sub
in
push
sbb
xchg
inc
pop
push
stos
xchg
xchg
lods
adc
das
push
mov
xor
ss
mov
ret
mov
pop
loope
bound
lret
into
insl
xorl
ret
xchg
cmp
stc
pop
push
out
dec
and
in
or
aas
fbld
orb
cmp
mov
cmpsl
pusha
mov
std
xchg
aad
mov
hlt
lock
xor
addr16
pop
xlat
add
mov
fdivrs
cwtl
push
pop
fwait
dec
push
fmull
and
cmpsb
cmp
sbb
jb
pop
fdivs
repnz
add
lret
jns
cmpb
and
hlt
xchg
sub
pop
pop
rcrl
cld
inc
mov
sub
imul
hlt
jnp
and
mov
sbb
scas
fwait
in
imul
jmp
jmp
dec
loopne
cmpsb
jae
scas
sbb
dec
mov
push
adc
xchg
mov
lods
pop
incl
cmp
xor
jecxz
fidivrl
fistpll
or
cmp
std
stos
les
xlat
hlt
arpl
dec
xor
mov
or
mov
mov
xor
mov
xor
dec
fcoms
mov
push
sbb
cs
pop
outsb
mov
or
xchg
and
and
daa
int
mov
out
xchg
cltd
pushf
lods
push
bound
dec
add
jmp
jmp
push
int3
mov
popa
push
pushf
pop
mov
ljmp
mov
push
cmp
in
ffreep
shrb
and
add
push
lock
es
jno
inc
adc
mov
shll
mov
xchg
stc
xchg
mov
jb
in
cltd
filds
xor
jp
sbb
mov
lret
cli
nop
out
adc
push
and
adc
push
xchg
imul
rcrl
aas
push
xor
inc
sti
mov
mov
popf
mov
pop
lcall
popa
xor
in
daa
jle
inc
mov
aas
mov
dec
lcall
lds
repz
movsb
call
nop
mov
cmpsb
cli
jl
jbe
aas
and
fldl
push
mov
or
popf
sbb
sbb
or
out
push
hlt
fmuls
stos
dec
pop
jne
mov
xchg
subb
lahf
mov
pop
pop
dec
adcl
or
stc
shll
scas
jle
cs
popf
lock
sbb
sbb
mov
and
adc
hlt
mov
mov
mov
rsqrtps
push
dec
xor
popf
dec
cmp
data16
mov
ss
xchg
in
jns
test
clc
add
pop
sub
add
in
add
add
mov
xchg
pop
dec
cmpsl
movsl
jg
sbb
lock
ret
sbb
xchg
sub
lret
jae
in
push
dec
inc
loop
fisubl
xor
mov
sbb
mov
or
es
or
xchg
jp
insl
xchg
adc
mov
ja
loope
xor
gs
xchg
into
xchg
lret
pop
jo
mov
dec
cmp
sub
jmp
add
rolb
or
ret
mov
fldenv
ds
fdivp
call
fildl
sub
lcall
cmc
es
daa
and
sbb
or
cmpsl
fidivl
pop
lea
dec
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
push
jmp
sbb
jno
sub
std
addl
inc
dec
mov
cld
or
pop
mov
mov
or
sti
pop
mov
push
jbe
push
push
sbb
or
loop
lods
test
lods
xchg
sbb
cmp
insb
daa
cmp
cld
hlt
adc
xor
mov
pop
dec
and
mov
add
lret
lret
mov
dec
cmp
imul
or
out
sbb
fadds
jecxz
out
pop
pop
mov
movl
aaa
rcrl
or
popf
hlt
mov
je
ljmp
roll
jmp
ljmp
lcall
sub
cmp
and
mov
je
repz
ja
cmp
mov
into
in
lods
mov
xchg
dec
push
fwait
sbb
fwait
inc
leave
pop
popf
sbb
cld
and
fstl
es
push
inc
pop
fdivrl
cmp
mov
dec
cmpsb
jecxz
or
adc
daa
out
movsb
hlt
ror
adc
les
pop
jmp
cmp
push
cmc
inc
sbb
cmp
fisubrl
dec
add
pop
push
dec
adc
dec
mov
bound
jp
out
aam
lods
mov
es
test
dec
sub
dec
enter
mov
sti
mov
movb
int3
sbb
dec
xlat
push
lods
push
cmp
pop
loop
jae
jb
sahf
jno
dec
sahf
push
sti
imulb
xchg
and
repnz
mov
cmp
pop
xor
orl
sub
push
sbb
fwait
popf
movsb
inc
jg
insl
fistpll
es
test
ja
int3
pop
gs
xor
int
push
lea
lock
roll
or
popf
inc
inc
add
jp
iret
js
ret
mov
daa
and
xchg
es
js
stos
jae
lds
jnp
sbb
mov
shrl
loope
scas
aam
cmp
and
pop
enter
lahf
jae
inc
mov
add
xor
sub
imulb
out
ljmp
sbb
add
ja
or
inc
clc
arpl
cld
stos
pushf
lcall
push
or
xchg
aas
and
aad
add
negb
mov
lea
xlat
test
test
pop
inc
push
scas
data16
sbb
je
push
inc
movsl
or
aad
inc
push
pushf
or
sub
fnsave
cmp
out
mov
push
lds
mov
sub
lret
dec
push
popa
xchg
push
aad
fcomi
ss
jmp
std
and
jns
sub
inc
outsl
push
test
mov
aam
pop
shl
sbb
mov
adc
cmp
pop
ja
lds
jmp
lock
popf
movsl
fs
nop
int
lods
mov
je
and
cmp
inc
mov
imul
or
mov
sub
arpl
shrl
imul
xor
addb
mov
sbb
rorl
arpl
test
adc
lcall
jg
mov
insb
repnz
cwtl
in
pop
das
aad
mov
pop
mov
aaa
or
mov
cmp
lock
add
sarl
outsl
cwtl
pop
fcomip
cmp
mov
jbe
mov
shl
mov
cltd
divb
xor
fwait
add
outsb
sub
cli
sbb
rcl
loope
clc
out
jle
cmp
leave
pop
jae
sub
push
xor
fistps
sti
mov
and
in
movsl
fildll
mov
jne
out
and
mov
push
pop
or
jp
xchg
mov
mov
enter
cmp
inc
sahf
ds
mov
neg
xor
rorl
clc
jmp
add
adc
inc
sbb
aam
lahf
sub
ret
inc
mov
in
dec
mov
testl
xlat
jle
push
lds
jle
sbb
pop
test
int3
mov
nop
je
dec
andb
sbb
shlb
add
jns
in
dec
cmpsl
fsub
je
pop
inc
cwtl
ret
xchg
in
cld
add
push
xchg
and
xchg
mov
push
xchg
add
xor
shlb
inc
mov
clc
or
and
stos
adcb
jg
in
out
shl
ljmp
fidivrs
stos
jmp
fadd
add
leave
popl
dec
imul
loopne
mov
sahf
lods
in
adc
cli
pop
xchg
xor
dec
adc
push
dec
data16
adc
lds
sti
push
xchg
out
movsb
xchg
into
or
sub
sub
jb
cmc
stos
out
push
jne
pop
add
in
test
mov
out
rcll
push
push
sub
push
psubsb
mov
movsl
mov
outsl
cmpsl
movsl
je
and
hlt
icebp
and
xor
mov
sub
xchg
loope
mov
xchg
inc
mov
iret
test
fdivr
mov
jae
clc
jb
xor
fistl
xchg
adcl
orl
out
mov
dec
addb
iret
scas
jnp
jb
mov
pop
movsb
jbe
adc
xchg
xchg
cmc
cld
or
dec
mov
es
ja
stc
aam
dec
push
out
mov
pop
cli
pop
hlt
imul
fstl
mov
cmpsb
mov
xchg
inc
xor
pop
xchg
dec
mov
inc
pusha
pop
inc
ss
push
jge
stos
stc
pop
add
and
push
call
ljmp
lods
daa
cmp
arpl
jne
ds
xchg
or
rol
pop
lods
loopne
or
and
lcall
mov
mov
xor
mov
out
dec
and
ljmp
gs
mov
std
stos
ss
lcall
pusha
add
fwait
in
jne
lret
aam
aad
pushf
lea
jmp
push
mov
jle
adc
dec
push
aaa
sub
xor
mov
decl
mov
insl
jp
je
fsubp
mov
and
xchg
xchg
mov
call
pop
je
push
xlat
or
imul
sti
decb
push
xchg
mov
xor
lea
lahf
dec
fidivrl
aas
jb
mov
js
andb
or
mov
jl
pusha
and
mov
aam
in
imul
out
sti
inc
test
mov
pop
xor
mov
mov
jo
cltd
lahf
jno
push
lock
cmp
cmc
mov
je
in
std
out
xor
or
and
repz
jno
out
fldt
adc
xchg
fwait
loop
mov
hlt
lahf
scas
push
dec
ss
ljmp
inc
xchg
adc
pusha
dec
cmp
repz
and
rcrb
cmp
outsb
sahf
push
fisttpl
addr16
sarb
out
movsb
xor
leave
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
lahf
subl
jno
push
add
bound
xchg
aam
int3
int
push
negb
dec
add
lea
dec
cmp
inc
push
mov
push
jae
and
cmpsl
cltd
lret
sub
into
jb
lret
push
inc
sahf
pop
sbb
push
or
jae
pushl
repnz
jl
arpl
push
push
xchg
or
add
ds
lcall
mov
cmp
xlat
sbb
popa
adc
push
sarb
hlt
fsubl
mov
filds
outsl
pop
add
adc
das
mov
push
or
das
addr16
jb
cmp
dec
add
fbstp
pop
call
xor
ja
lock
hlt
out
dec
cld
addb
out
dec
popa
adc
iret
xor
push
neg
and
pusha
imulb
je
inc
das
adc
les
enter
gs
test
loope
stos
ljmp
adc
jae
inc
mov
or
push
inc
shll
sub
push
lcall
sarb
inc
xlat
sar
loop
xor
inc
sub
mov
and
dec
mov
stos
push
and
cs
adc
lret
inc
mov
addb
mov
or
pop
and
scas
push
dec
cmp
lds
mull
xchg
dec
lods
xor
push
adc
jp
outsl
or
dec
push
and
cltd
and
xchg
adc
adc
out
mov
pop
sti
xchg
fsubl
fsubrp
xchg
call
xor
sbb
imul
mov
mov
xor
sub
das
rcll
inc
inc
cli
xor
shlb
pop
sbb
arpl
mov
addr16
fsubr
fisubrl
ljmp
jae
push
add
xchg
xor
inc
inc
xor
out
mov
int
mov
aad
ss
mov
repz
dec
bound
mov
lahf
fwait
js
mov
xchg
pop
jb
out
outsb
out
dec
lahf
mov
dec
xchg
repz
mov
mov
push
and
xchg
jnp
test
cmp
xchg
std
add
cltd
sub
aam
jecxz
cli
pop
out
loopne
add
jbe
pop
in
mov
mov
mov
cmpsl
imul
stos
push
jne
cmc
pop
loopne
or
mov
jmp
cmpsl
sarl
pop
mov
movsl
push
in
mov
addr16
sbb
xchg
inc
sahf
push
popf
sbb
jnp
leave
fnsave
dec
loope
outsl
lret
bswap
and
mov
xor
repnz
mov
int
jg
fwait
stos
add
inc
mov
movsb
cwtl
outsb
mov
psrlw
lods
mov
shl
and
mov
mov
sbbl
repnz
dec
fiaddl
xchg
loop
inc
jmp
sbb
movsb
cmp
jp
shrb
outsb
sub
insl
xlat
sbb
sub
clc
cmpsl
es
and
mov
inc
mov
stos
loop
stc
xchg
repnz
and
jae
pop
test
push
into
outsb
push
lahf
ret
aas
sub
mov
pusha
push
in
mov
imul
addr16
dec
es
mov
sub
iret
in
negl
nop
scas
ja
sub
xchg
iret
jp
mulb
mov
xchg
mov
ret
pop
xchg
xor
xlat
orl
xor
mov
or
jne
xchg
jl
pop
xchg
cwtl
mov
dec
ds
cmp
xor
mov
aas
int3
sahf
nop
scas
lcall
jbe
notl
mov
pop
push
cli
loop
ljmp
fstps
inc
ret
add
in
das
sub
repz
fidivrl
inc
sti
in
or
dec
sub
fldz
xor
cmpl
clc
js
scas
push
or
pop
jne
test
or
ret
lret
mov
lret
ss
mov
mov
cmp
adcb
and
dec
mov
inc
cmc
lea
sbb
outsb
fldenv
ret
add
jbe
mov
inc
pop
push
mov
loopne
mov
cwtl
jge
int
in
mov
mov
sub
ss
in
mov
leave
push
jb
mov
inc
fstl
out
or
loope
sbb
xor
push
sub
hlt
and
lock
sahf
pop
push
scas
out
inc
rcrb
mov
sub
or
popa
adc
stc
sbb
fdivrp
lahf
bnd
aad
rcl
and
mov
in
jno
cli
fs
push
shl
stos
sbbl
ja
test
xchg
outsb
sbb
pop
push
bound
mov
rsm
mull
adc
notb
xchg
mov
andl
xchg
hlt
mov
xor
ret
ss
inc
hlt
je
push
int
push
imul
pop
ret
or
sbb
dec
and
shrb
rolb
sub
scas
movsb
xor
sbb
cmp
js
insl
jns
fnstenv
sahf
aad
icebp
aad
lcall
fdivrs
fcoms
pop
addr16
cltd
xchg
add
out
rcrb
cmpsb
daa
add
sarb
loopne
xor
cmp
ja
dec
nop
push
push
ret
adc
jecxz
jp
enter
and
rclb
enter
sub
lea
inc
movsb
jle
call
dec
push
in
stc
cmp
outsb
xor
push
inc
cwtl
pusha
pusha
jecxz
in
pop
das
push
xchg
sbb
dec
mov
das
push
ret
push
or
pop
dec
repnz
mov
xchg
jno
pushf
insl
add
popa
out
mov
addr16
dec
cli
cwtl
leave
int3
dec
push
cld
mov
and
xchg
jg
incb
jns
push
jnp
cmp
mov
test
pop
pop
fst
jle
rclb
out
adc
rcrb
pop
xchg
or
xchg
pop
lea
dec
push
jp
xlat
ret
push
sub
mov
mov
pop
into
popf
fdivl
testb
test
insb
mov
shl
sti
dec
rol
push
fsubr
cwtl
sub
ret
sti
push
fs
add
adc
ret
fsubs
xor
jbe
adc
sbb
mov
mov
xor
pop
xchg
xchg
or
call
sub
enter
int
insl
adc
out
popa
pop
test
pop
je
cmpl
mov
pushf
jno
scas
jb
cld
stos
push
jo
xor
jp
test
cld
int3
cmp
mov
ss
and
sub
inc
mov
push
jo
fisubl
jge
int3
dec
adc
test
hlt
dec
add
xchg
push
out
ficompl
stos
pop
sub
mov
mov
xor
and
sub
dec
ja
mov
cld
mov
mov
movsl
cmpsl
ja
clc
jb
sahf
jg
ljmp
jmp
inc
sbb
aad
sbb
push
mov
xchg
add
in
adc
xchg
add
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
lods
pop
xchg
add
add
nop
mov
stos
and
ss
pop
xchg
aaa
and
imul
int
aam
nop
mov
mov
sub
mov
lods
das
inc
sbb
roll
mov
sbb
mov
emms
cmp
inc
fwait
stos
movsl
dec
mov
xor
popf
mov
or
mov
fsubs
mov
test
int
jo,pn
xor
mov
push
arpl
sbb
jle
ds
dec
in
aas
push
lahf
cmp
pop
lret
repnz
sub
sarb
pop
and
popa
jge
sbb
das
xor
or
jne
nop
rcr
rcll
ficoml
pop
ja
std
mov
cltd
test
xchg
xor
jae
cmpsl
inc
ret
pop
mov
dec
in
stc
in
fcompl
xor
mov
shll
and
lcall
jb
sbb
sub
push
cmc
lret
mov
subl
shr
cmpsb
jle
insl
jl
jns
sar
xchg
arpl
mov
push
pop
cmp
ret
push
shrl
in
cmpsl
dec
inc
sbb
rcrb
cs
sub
add
rcrl
jecxz
iret
andb
insb
mov
jb
jne
stos
ja
ss
jp
aad
and
xchg
je
arpl
cmp
cs
push
lcall
cltd
stos
cmc
dec
and
dec
or
xchg
outsb
sbb
vmread
fildl
lods
dec
mov
shlb
mov
mov
insb
outsb
cmp
fidivrs
enter
ud2
gs
fbstp
jecxz
aad
pop
pop
shrl
cltd
push
das
xchg
je
into
push
ljmp
pop
ret
or
icebp
cmp
mov
je
loopne
insb
or
addr16
sbb
xor
ljmp
idivb
cmp
fmull
or
jecxz
int3
jp
push
xor
out
js
std
ja
push
test
push
insb
pushf
pop
mov
repnz
movl
inc
xor
push
pandn
in
and
daa
jge
cmp
xchg
mov
jns
adcl
aas
out
in
mov
sbb
mov
add
jecxz
cld
std
mov
adc
call
dec
mov
sbb
push
push
aam
gs
sub
jno
leave
sub
push
or
fcmovnb
les
test
cmp
jbe
test
push
test
sti
xor
sub
lret
std
dec
xor
nop
pop
scas
outsl
mov
xor
mov
and
sahf
cmp
cli
ss
int
mov
sub
push
dec
icebp
insl
dec
inc
into
mov
pop
push
and
call
sbb
repnz
or
lahf
loopne
adc
adc
xor
cli
push
loop
mov
pop
sub
movsb
pop
push
lds
push
push
mov
mov
add
ds
out
jg
xchg
push
aas
dec
cwtl
mov
lahf
sbb
in
sub
push
inc
cmp
dec
ljmp
adc
fldl
ja
add
sbb
push
enter
lock
lcall
xchg
xchg
and
cli
push
hlt
add
movsl
mov
and
xchg
add
pop
stc
es
outsb
xor
adc
fdivrl
cmpsl
pop
mov
ret
lods
adc
je
test
aam
insb
pop
jle
mov
or
cld
shr
and
jae
lock
daa
xchg
fwait
icebp
sub
add
mov
imul
movsb
cmp
loopne
mov
cmpsb
push
xchg
subl
push
ljmp
das
and
jle
imul
dec
cwtl
push
mov
dec
inc
negb
sub
sbb
inc
gs
pusha
inc
xchg
sbb
xchg
inc
push
add
js
and
cmp
dec
rcrb
add
scas
cmc
std
jo
adc
lahf
sub
jnp
sahf
js
adc
push
sar
adc
repz
in
jge
xor
fnsave
clc
add
add
dec
xchg
cmc
push
fisubl
out
icebp
pop
pop
xchg
adc
add
xchg
nop
xor
lret
call
or
pop
dec
xor
stos
ret
mov
sbb
aaa
cmpsl
xor
sbb
sub
add
adc
mov
dec
idiv
sbb
lea
popa
pop
nop
lods
cmpsb
out
js
and
push
lret
jmp
clc
inc
icebp
cmp
nop
inc
mov
emms
push
das
outsl
mov
pop
xchg
into
jle
jmp
pop
pop
icebp
cltd
aaa
jg
fisttpll
lods
add
adc
call
loop
cwtl
lcall
xchg
cli
and
add
and
mov
mov
das
addb
pop
in
add
mov
sbb
inc
notl
push
dec
push
fldenv
adc
rclb
pop
mov
or
adc
dec
push
xchg
imul
daa
sub
pop
mov
and
test
mov
jmp
jmp
or
sbb
aas
popa
pop
pusha
out
jle
adc
pop
scas
and
cld
fistpll
test
orb
xchg
cmp
or
xchg
or
mov
lods
les
mov
inc
jbe
push
cmp
into
mov
push
push
ds
pop
cmp
sub
sub
xchg
xchg
jl
js
add
adc
push
mov
cs
inc
outsb
mov
jae
mov
mov
loope
xchg
pop
lahf
addr16
mov
out
movsb
fsubp
adc
pop
pop
jge
or
into
fbstp
jno
out
push
fwait
mov
sub
and
xchg
cmp
rcll
scas
pop
test
push
dec
dec
adc
nop
mov
mov
bound
or
sahf
fxch
mov
cli
insl
enter
imul
jle
pusha
inc
mov
in
push
jp
mov
shrb
sbb
or
xchg
ds
mov
xlat
and
fists
mov
data16
pop
icebp
jecxz
pop
mov
cwtl
ja
cmp
dec
dec
movsl
pop
add
stos
jg
inc
mov
mov
popf
shll
fbld
add
in
pop
sbb
or
dec
scas
adc
insb
out
xchg
push
xchg
and
sbb
icebp
xor
rol
rcrl
dec
mov
dec
nop
pop
daa
in
jp
int
scas
add
xchg
mov
mov
rorb
fidivl
sti
pminub
rolb
test
sahf
movsb
xor
jge
call
dec
sti
or
or
or
out
ret
fidivrs
xchg
js
rclb
sub
sbb
jb
xlat
dec
dec
rorb
mov
out
stos
repz
frstor
je
lahf
push
lea
sub
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
push
jb
loope
setno
cmp
pop
scas
les
ljmp
aad
xchg
aaa
and
xchg
inc
adc
push
lret
loopne
cmpl
pusha
daa
movsb
and
out
andl
mov
dec
loop
adcl
scas
lret
test
loop
push
clc
addr16
aad
push
or
or
imul
test
sub
enter
fimull
sbb
inc
push
call
aad
daa
jecxz
xchg
out
fs
add
test
jge
pop
int3
adc
test
mov
sahf
xor
cmp
jmp
out
lea
popf
repnz
adc
mov
mov
add
addb
gs
xor
out
shl
jno
sbb
testl
mov
loopne
jmp
mov
mov
mov
aad
sbb
push
ss
jne
dec
shr
push
outsl
and
mov
cld
repz
jbe
or
jl
repz
sti
mov
push
aam
push
neg
cmp
sub
mov
adc
ret
out
xor
or
xor
repz
aam
push
cmp
repnz
in
ja
mov
mov
sahf
add
push
cld
in
sbb
xor
out
dec
fs
cmpl
mov
add
lock
movsb
out
cwtl
xchg
dec
loopne
mov
push
sub
and
pop
dec
pop
mov
stos
ret
fsubr
aaa
fcomip
js
and
cs
into
cmp
es
adc
scas
ds
cmp
sub
mov
inc
in
inc
daa
dec
loope
cmc
jl
lods
sub
and
xor
call
aam
test
test
xchg
xchg
jno
or
incl
repnz
int3
fcmovne
cmpsl
dec
add
and
or
adc
dec
add
jae,pt
hlt
mov
test
sbb
fchs
xchg
iret
cltd
jp
das
sar
dec
fwait
sub
dec
adcl
or
cs
icebp
add
in
xchg
sar
lahf
or
lock
shlb
jmp
sahf
sub
adc
jp
movd
fwait
scas
enter
pop
loope
sbb
cs
out
dec
xor
in
mov
std
add
ror
arpl
xchg
add
repz
les
jp
pop
enter
cmp
lea
ss
inc
pop
mov
mov
mov
movsb
mov
fs
xlat
test
cwtl
or
rolb
sub
fdivr
pop
mov
jle
sub
xor
or
cmp
enter
cmpsl
add
out
push
push
in
sbbb
adc
mov
cmp
sub
mov
ljmp
sub
add
mov
dec
aas
mov
inc
adcb
mov
enter
jno
jo
push
fdivrs
lret
adc
bound
mov
mov
aam
test
je
or
pop
out
dec
loop
repz
mov
sti
adc
data16
jecxz
jne
sahf
jge
or
jle
add
mulb
std
mov
and
or
insl
and
jae
xlat
mov
xchg
adcb
mov
mov
xchg
pop
stos
fcoms
out
mov
pop
aas
push
stos
fidivrs
loope
int
lods
int
shrl
dec
icebp
enter
cmc
insb
dec
lahf
cmc
push
stos
push
xchg
fidivrl
and
mov
daa
xchg
jmp
adc
jns
pop
inc
rorb
push
pop
inc
int3
cmpl
stos
sub
mov
pop
add
into
mov
and
and
pop
addr16
mov
dec
ja
les
jmp
lods
movsl
xchg
rclb
stos
jecxz
fwait
andl
fcomi
leave
repz
arpl
popf
inc
xchg
loope
mov
push
fwait
lret
push
leave
xchg
xchg
and
fcompl
outsb
add
inc
cmc
gs
notl
or
es
scas
pop
mov
mov
repnz
lcall
ficomps
pop
pusha
stc
cmpl
repz
or
in
lahf
aaa
lret
shlb
sbb
popf
fnstenv
xchg
jne
cmpsl
stos
jo
test
test
in
add
or
ja
std
xchg
xor
stos
cld
sub
mov
push
lret
or
dec
jmp
push
inc
sub
add
cli
xchg
mov
jo
fsubp
and
sub
cmpsl
or
cmp
mov
pop
cmc
outsb
setb
sub
sub
data16
bound
mov
inc
sahf
or
xchg
decb
sqrtps
xlat
inc
push
out
add
cmpsb
popa
adc
cmpsl
cmp
sahf
lock
gs
push
add
cmpsl
push
add
lock
pushf
and
test
dec
sub
jns
cmp
sub
cmp
imul
stc
ror
cmp
cli
adc
jns
arpl
int3
orb
fnstenv
fcmovne
xchg
call
ffree
jmp
jnp
sub
subl
ds
sahf
repz
pop
nop
jne
pop
dec
add
sbb
xor
push
xchg
jge
fstpl
cmp
push
xor
insb
mov
mov
fisubl
in
insl
add
dec
test
jnp
lret
or
fcmovbe
das
mov
fcoms
xchg
cmpsb
add
inc
enter
icebp
xorb
xor
sub
cmp
mov
out
push
mov
adc
jl
mov
xchg
sub
inc
int
pop
push
cmpl
add
stc
lret
adc
pop
ret
mov
push
mov
or
dec
cmp
das
or
pop
mov
and
lcall
sub
push
jge
arpl
loopne
lods
mov
mov
arpl
sub
xor
or
adc
inc
inc
xlat
xchg
jnp
in
das
push
jo
xchg
push
mov
push
cld
clc
or
dec
sbb
hlt
mov
and
test
arpl
xor
xchg
pop
in
mov
cmp
sub
or
sub
xchg
xor
insl
push
test
mov
pop
xchg
jb
test
jno
js
mov
xor
jne
push
out
pop
ss
rorb
into
ret
mov
test
sub
ss
dec
daa
cmp
mov
lret
aas
and
repz
jmp
mov
mov
push
aam
out
mov
push
mov
subb
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
imul
jbe
pop
outsb
mov
imul
aad
cli
push
sbb
push
dec
mov
xchg
bound
mov
or
negl
in
inc
mov
ss
out
cli
adc
adc
popf
in
xor
andl
leave
shrb
je
adc
pop
jb
pop
cs
dec
jge
inc
lods
sbb
mov
es
xor
das
sub
arpl
ljmp
xchg
cmp
in
popa
inc
addb
lea
inc
sbb
sarw
stc
adc
inc
js
push
popa
mov
push
pop
into
dec
aaa
fucomip
scas
cwtl
movsl
testb
lods
iret
adc
mov
mov
insl
mov
test
mov
insl
imul
rcl
pushf
enter
lds
sub
push
imul
cs
int3
cmc
imul
mov
push
test
lods
mov
mov
cmp
or
outsb
pop
push
fsubrs
std
dec
sbb
js
mov
aad
xchg
movsb
dec
decb
jg
cmp
xchg
sarb
dec
daa
lahf
notb
popf
shlb
fimull
jle
in
mov
repz
inc
loop
pushf
ds
pop
fadd
and
lret
pop
loopne
and
xor
cmpsb
mov
xchg
pop
hlt
enter
xor
inc
in
cld
inc
std
adcb
lods
lods
es
jp
lret
xchg
cltd
push
inc
jnp
mov
xchg
add
iret
jl
das
add
push
decb
add
mov
push
sbb
lea
jne
mov
sbb
pop
sbb
loopne
push
adc
test
imul
xor
scas
mov
push
call
dec
inc
aas
and
imul
aas
and
push
mov
adc
out
mov
inc
sarb
shrl
out
sub
push
mov
xor
pop
int3
xchg
mov
repnz
int3
in
dec
mov
sub
nop
push
int
xchg
stos
push
add
sbb
sbb
pop
std
mov
insl
ret
loopne
jbe
roll
xchg
mov
roll
movsl
and
or
js
inc
notl
and
push
fiadds
mov
into
mov
xor
mov
cmp
sbb
out
pop
push
dec
mov
dec
das
pushf
test
fcoms
fwait
jno
mov
and
shll
mov
imul
mov
cmpsb
sbb
outsl
test
mov
pop
pop
movsb
lretw
add
pop
jns
or
xchg
pop
sbbb
fsubs
sbb
xlat
jl
mov
mov
dec
mov
jle
cwtl
gs
mov
adc
iret
mov
inc
push
jnp
inc
xor
out
or
clc
lcall
jbe
sbb
cmp
outsb
leave
push
mov
es
sti
push
stos
jns
or
jge
pop
sbb
mov
or
jnp
pop
pop
push
mov
mov
and
loopne
dec
or
xor
ficoml
push
pusha
cmpb
or
scas
mov
add
les
shll
jns
pop
sbb
lret
pop
lcall
iret
cmc
pop
jnp
insb
pop
push
dec
sub
sahf
pop
cmp
push
xchg
cli
test
lods
jg,pt
fisttpl
fwait
daa
rcrb
or
scas
mov
add
push
xor
cwtl
pop
popl
rclb
nop
jg
lds
shlb
adcb
xchg
jbe
arpl
outsb
sbb
icebp
sub
insl
sub
stos
les
cli
ret
push
sub
call
fsubrs
pop
dec
xor
dec
jae
cmpsl
pushf
mov
inc
je
jae
imul
hlt
xchg
sub
loopne
icebp
notb
sub
xor
jl
imul
pushf
pop
stos
sbb
dec
mov
lock
dec
sub
xlat
add
out
fwait
test
mov
or
arpl
add
adc
std
iret
aaa
or
sbb
or
out
or
cmp
in
arpl
xchg
mov
xor
dec
push
sar
shlb
dec
push
cmp
mov
cmpsb
adc
sahf
fidivrl
imul
les
jnp
jo
into
sbb
hlt
ljmp
push
mov
and
mov
bound
mov
cmp
mov
cmpsl
popa
ds
mov
or
ret
into
es
in
movsl
cli
enter
mov
xchg
movsb
jmp
daa
sub
mov
or
adc
jo
jle
cltd
push
mov
jne
sub
stc
loop
pop
xlat
mov
pop
scas
insb
mov
jmp
out
movsb
pop
dec
mov
and
imul
jno
pop
and
andb
dec
insl
push
xchg
loopne
sub
push
mov
enter
inc
movsl
dec
fisubrs
mov
aaa
pop
inc
push
sub
movsb
test
aam
cmc
cmp
xor
mov
and
insl
popf
pop
mov
push
in
mov
iret
sbb
mov
cmp
aad
inc
out
sub
daa
insl
inc
inc
mulb
mov
cmp
dec
fld
pushf
test
adc
ljmp
mov
sub
jnp
stc
sti
mov
adcb
ficoms
pop
cmp
shlb
jle
in
arpl
fiadds
lcall
pop
pop
jo
cmpsb
mul
daa
cmp
xchg
das
and
dec
mov
push
and
loope
sbb
dec
xchg
xor
addb
loope
mov
inc
and
sbb
sbb
ja
xchg
inc
sarb
std
in
test
dec
fiaddl
ss
inc
sti
adc
mov
push
jmp
loop
add
in
lret
inc
loope
push
pusha
dec
adc
insl
loop
push
cmp
jg
inc
add
jns,pt
test
scas
fwait
mov
sahf
mov
or
ror
int
push
mov
gs
shlb
and
jmp
jne
arpl
xchg
sbbl
fcmovnbe
out
jne
add
dec
or
dec
pop
fwait
mov
gs
mov
pop
mov
mov
xlat
pop
insb
das
imul
pop
pushf
or
lret
ret
popl
adc
or
loopne
je
mov
mov
call
out
dec
lods
inc
pop
movsl
fld
ror
xchg
jns
hlt
lock
sbb
sbb
lods
jmp
pop
xor
push
hlt
lcall
das
jecxz
das
loopne
test
lcall
lea
inc
lods
pop
idivl
xchg
vmovapd
add
andl
sub
lea
and
aam
loop
test
xchg
cmp
and
pop
stos
inc
daa
sbb
push
mov
mov
jle
subl
inc
cltd
cmc
in
lahf
push
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
cld
insl
mov
je
mov
push
cmp
test
adc
cmp
rorb
cmp
arpl
sub
pop
mov
xchg
fwait
stos
jbe
mov
xor
xorps
mov
jo
inc
pop
jns
sti
out
jl
cli
ret
push
cltd
push
push
lock
dec
mov
pop
push
pop
gs
cmp
out
cmp
daa
mov
sub
sbb
xor
and
adc
roll
jno
rolb
adc
mov
bnd
xlat
js
jnp
mov
cmpsb
push
adc
mov
inc
idivl
dec
push
aam
xchg
lret
inc
add
jno
mov
scas
mov
cmp
inc
push
insl
mov
xchg
ret
add
xlat
out
sbb
mov
lahf
insb
dec
pop
or
mov
add
lret
xlat
sahf
xor
sbb
loope
enter
mov
mov
push
sbb
push
stos
shl
pop
push
sbb
sti
mov
jne
lret
icebp
mov
enter
movsb
mov
inc
xchg
scas
icebp
repnz
mov
out
ja
call
xor
adc
inc
adc
dec
pop
and
lods
push
push
xor
mov
mov
ds
jl
cld
sub
stc
dec
cmpsl
ljmp
dec
lods
dec
or
lds
xchg
mov
push
push
sbb
dec
xor
sub
sbb
xchg
mov
mov
pop
add
push
es
leave
sub
inc
out
add
aam
lahf
cmp
call
je
pop
mov
xchg
pop
cmp
mov
pop
out
push
out
dec
popf
in
jmp
and
or
lods
orl
ret
xchg
lea
aaa
push
mulb
inc
mov
sbb
or
lcall
into
mov
add
aaa
xchg
andl
sub
jle
movsb
in
mov
dec
rorb
movb
push
or
jno
push
lods
jae
outsl
mov
cmp
mov
std
aam
inc
jno
cmp
jle
push
inc
stc
sbbb
test
ficoml
and
scas
inc
dec
rcrl
adc
sbb
js
xor
js
inc
jo
mov
xchg
jnp
mov
mov
mov
dec
jbe
and
xor
aaa
es
or
adc
push
add
mov
sub
push
imull
xor
cmp
adc
sti
frstor
jno
mov
xchg
aad
mov
sti
push
jge
outsl
push
addl
xor
pop
and
lds
jg
test
loop
sub
push
pop
inc
popf
push
and
inc
fidivrl
call
cmp
adc
mov
in
inc
or
cli
sub
popf
stos
clc
or
or
push
xchg
push
dec
adc
adc
arpl
pop
fldl
jne
aas
lret
bound
stc
es
adc
sub
jb
testl
aad
lods
test
dec
mov
fstpl
rolb
shlb
fimull
mov
cmp
add
jno
jle
inc
inc
repz
sahf
stc
mov
aaa
fcmovnu
scas
sub
stos
sbb
lds
mov
pusha
push
test
movsb
mov
test
int
add
inc
sahf
fimuls
adc
add
jp
sub
pop
pop
add
call
cltd
addr16
add
subl
sbb
mov
popf
xor
orl
and
mov
pop
lahf
imul
mov
cmp
cmp
adc
add
mov
in
imul
xlat
cltd
les
icebp
movsb
ja
lahf
repnz
lret
test
into
pop
ja
push
xor
loop
in
add
xchg
xchg
rolb
or
mov
cld
aas
fidivl
or
or
or
es
and
push
or
and
hlt
sub
rcll
jmp
gs
cmp
lds
xchg
out
sbb
daa
in
mov
lds
cmpsl
bound
ja
xchg
mov
and
push
int
insb
insl
scas
mov
pop
gs
sbb
arpl
shlb
mov
pop
popa
mov
and
mov
ds
ret
pop
clc
sub
icebp
add
daa
je
inc
adc
out
sbb
outsl
inc
mov
in
and
stc
iret
sbb
cwtl
jecxz
test
mov
mov
mov
out
dec
jle
loopne
loopne
repnz
cmp
repz
movsl
sbb
pop
pusha
out
jae
pop
pop
push
ljmp
sub
jno
cmp
push
test
add
int3
daa
push
fmuls
ret
inc
out
mov
jns
in
hlt
push
lods
mov
lds
cmpxchg
add
aam
add
cmp
jnp
imul
rcl
pop
fisubl
add
add
push
cmpsb
test
sbb
pushf
push
dec
out
andl
dec
xchg
aam
push
lret
iret
movsl
sahf
mov
mov
and
mov
mov
loope
and
push
inc
push
xorl
xchg
xor
sub
mov
jge
cmpsb
add
jo
xor
pop
mov
jno
or
sub
or
xchg
mov
pop
xor
push
dec
mov
lods
fsub
ror
push
mov
inc
adc
sbb
mov
add
inc
mov
dec
in
xor
test
icebp
jb
dec
mov
stos
xchg
fmuls
outsb
adc
or
rorb
add
rcl
std
sbb
aaa
insl
js
in
lret
lods
mov
fcmovbe
mov
sub
jbe
out
mov
pop
iret
add
call
in
test
inc
xchg
cmp
mov
or
mov
or
xchg
or
sub
mov
jo
pop
inc
mov
lds
ljmp
mov
and
aas
inc
cwtl
mov
and
jo
or
cmpsb
cld
rcl
push
mov
sbb
cltd
xchg
jbe
xchg
iret
das
mov
mov
xchg
jg
andl
xchg
leavew
dec
push
xchg
dec
adc
insl
arpl
testl
and
xchg
cld
inc
push
frstor
lods
push
xor
add
mov
mov
cltd
mov
loop
popa
addr16
lret
push
aas
ss
and
mov
ficoms
in
enter
cmp
stc
pop
test
inc
in
cli
ret
cmp
mov
subb
cmp
in
scas
lods
inc
imul
jbe
mov
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
pop
sub
adc
jno
dec
xchg
sub
adc
out
sbb
aad
into
sub
hlt
fadd
leave
mov
sarl
mov
xchg
pop
xlat
divl
cltd
idivb
call
sbb
ljmp
rorb
bound
stc
adc
sbb
lahf
and
add
mov
scas
test
clc
push
rcr
insl
mov
lds
sbb
ffree
dec
xchg
cmp
repz
xor
cmp
scas
aad
jmp
adc
mov
add
int3
dec
adc
repnz
inc
dec
cld
bound
rolb
mov
psrad
outsl
loopne
mov
and
jp
jns
xchg
cmp
ficoms
push
pop
adc
jp
ds
out
jl
imul
or
loop
into
dec
adc
rcrl
sub
xchg
jmp
cmp
lret
add
dec
ret
adc
ret
cmp
add
mov
mov
dec
mov
push
mov
daa
fwait
push
mov
mov
push
int3
dec
xlat
xor
cwtl
cmp
fisttps
repnz
and
xor
cs
sbb
aad
out
sub
inc
adc
cli
and
into
aam
push
push
cmp
fmuls
push
out
xchg
nop
jl
subl
mov
gs
push
daa
mov
inc
stos
cltd
cmp
stos
sbb
adc
arpl
fmull
lea
int
loopne
repz
or
ljmp
fcomps
dec
mov
sbb
cmp
lods
aad
adcl
hlt
inc
mov
out
cmp
xor
into
pop
add
xor
push
test
test
pop
xchg
mov
outsl
int
insb
test
pop
imul
test
pop
jle
sub
icebp
mov
repnz
mov
pop
cmpsl
je
cmpsl
dec
jae
rcr
je
les
iret
test
mov
out
clc
cmc
nop
fildl
xchg
xor
les
or
mov
mov
test
push
popf
mov
int3
sub
xor
push
pop
jge
lock
mov
out
or
data16
leave
sbb
mov
lds
pop
test
mov
cmp
push
inc
jle
stos
cli
dec
jecxz
inc
mov
or
push
cmpsb
add
ret
xchg
push
lret
jecxz,pt
jne
fstl
fnstenv
imul
xchg
aam
cmp
insl
inc
cwtl
loop
pop
mov
movb
cli
mov
in
jb
dec
push
push
das
mov
pop
pop
jae
dec
inc
mov
pop
dec
test
inc
loope
imul
adc
push
pop
out
cwtl
fmul
fwait
shll
loop
jbe
lcall
iret
dec
cmp
or
dec
cwtl
incb
ljmp
xor
out
dec
cld
ja
dec
and
xchg
repz
popf
jecxz
ja
fnsave
testl
or
cld
outsb
fcmovbe
pop
sbb
imul
je
inc
repnz
mov
mov
pop
bound
std
mov
cs
rdmsr
mov
cmp
shl
sub
test
movsl
stos
xchg
inc
test
adc
cmp
xchg
shll
mov
pop
push
int
pop
repnz
aas
lods
call
push
in
out
push
xor
int
dec
or
imull
add
pop
sarb
cmp
pop
stc
es
out
lsl
test
lret
lds
ss
push
pop
inc
xor
cmp
jp
popf
add
sbb
push
out
call
or
mov
sbb
adc
mov
dec
aad
icebp
pop
leave
adc
shlb
rorl
inc
pop
inc
and
sbb
movsb
imul
jno
jo
jb
popf
stos
dec
call
mov
and
mov
or
ljmp
cmp
mov
xorb
lea
or
inc
movsb
cmc
pop
out
aaa
inc
push
push
cmp
mov
lock
sub
inc
mov
incb
jno
ljmp
subl
sahf
mov
pop
jmp
ds
pop
imul
stos
in
inc
repz
mov
mov
les
scas
add
mov
xor
jbe
out
xor
mov
fnstsw
mov
repz
mov
imul
add
out
inc
jne
add
dec
dec
incb
dec
add
push
sbb
mov
sbb
mov
mull
rclb
aad
test
sub
call
insb
and
imul
sti
stc
xor
out
hlt
test
cwtl
adc
sub
jmp
cmp
cwtl
or
arpl
outsb
mov
popa
clc
add
rol
push
lods
icebp
mov
out
push
push
xchg
and
adc
xchg
adc
add
pushf
mulb
addr16
in
mov
into
subl
das
or
mov
arpl
xchg
hlt
dec
call
xchg
jne
ja
test
cmpsb
psrlq
arpl
mov
leave
stc
shrl
movsl
jo
push
sub
xor
popa
mov
in
and
xchg
or
lahf
xchg
dec
shrb
jnp
mov
pop
fnstsw
popl
cli
cmp
hlt
inc
adc
and
or
dec
outsb
in
sbb
clc
fsubs
and
mov
sbb
shlb
mov
lcall
mov
fwait
lds
outsl
int3
sahf
mov
or
testl
lea
out
pcmpeqb
rolb
push
imul
jle
leave
mov
xchg
icebp
mov
ja
sbb
adc
push
adc
popf
scas
lea
stos
into
adc
aad
jbe
dec
movsl
aad
jno
pushl
adc
inc
imul
es
loop
ret
lods
push
xor
orps
dec
adc
pushf
test
or
xchg
test
adc
scas
sub
jbe
cs
in
jne
addr16
inc
xchg
push
sbb
sbb
xor
push
cmp
sbb
xchg
jne
xchg
adc
sub
jns
addb
sbb
fwait
add
sub
xchg
loopne
add
cs
fiaddl
inc
dec
faddp
mov
mov
loopne
nop
sbb
dec
mov
sbb
and
sub
out
cmp
dec
or
std
je
insb
js
and
push
cmpsb
pop
out
addr16
lock
outsl
push
pop
adc
out
in
movl
lcall
lods
inc
js
lea
movsl
addb
hlt
jle
movd
cmp
aaa
ficomps
add
push
or
pusha
inc
dec
xor
pop
cmc
inc
nop
dec
dec
cmpsl
sbb
push
dec
add
adc
cmpsl
mov
fwait
push
jo
dec
aas
mov
mov
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
lret
dec
pop
cli
adc
mov
psraw
mov
scas
push
xor
loop
test
fldcw
mov
dec
lahf
clc
pop
lods
sub
enter
push
or
shll
mov
icebp
insb
rorb
out
push
ficompl
ret
mov
add
call
test
lods
pop
cmp
and
cmc
cmp
and
cmp
jmp
addr16
dec
lahf
das
les
les
sub
xor
xchg
push
test
insl
outsl
pop
mov
xchg
add
ja
sti
pop
into
mov
aad
cwtl
in
dec
lock
faddl
adc
inc
xchg
inc
mov
insb
imul
or
filds
jle
lock
dec
rcl
jbe
mov
push
xchg
jo
pop
sbbl
aas
add
ds
outsl
imul
pop
dec
ret
enter
repz
cmp
dec
stos
cmp
test
dec
insl
add
jbe,pt
mov
std
xlat
lcall
cli
xchg
jl
in
daa
push
fistps
in
and
popa
add
flds
add
xor
push
mov
outsl
aas
and
mov
push
cmp
imul
out
aad
mov
frstor
arpl
ljmp
loopne
dec
jle
mov
mov
mov
xor
addl
addr16
sarl
and
lret
dec
loopne
loop
cli
roll
adc
mulb
mov
sti
fwait
loop
cmp
in
mov
mov
test
sub
sbbl
rcrl
mov
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
