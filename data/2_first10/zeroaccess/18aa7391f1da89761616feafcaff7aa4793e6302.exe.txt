push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
sbb
jle
sbb
sbb
fisubs
stc
rorb
cs
xor
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
lea
gs
es
loope
into
sub
fwait
pop
add
add
adc
jnp
xchg
sbb
sti
jbe
adc
hlt
imul
stos
dec
shll
lcall
sbb
mov
add
mov
inc
sar
gs
push
push
xor
insl
sub
inc
loope
lret
jge
cmp
out
adc
jl
stos
xor
pop
mov
into
sub
adc
lcall
jmp
rorl
ss
jp
jge
cmpsb
pop
pop
addr16
or
addr16
mov
lahf
add
and
jmp
jg
mov
imul
cmp
inc
pop
jp
je
outsb
mov
cmp
jno
aaa
inc
iret
loope
mov
std
imul
push
jle
jecxz
insb
mov
push
rorl
movsb
inc
mov
pop
mov
mov
mov
mov
sbbb
jg
dec
rclb
lods
call
mov
lock
inc
lcall
push
mov
cmp
xor
jae
inc
add
arpl
fsubl
cs
hlt
loopne
movsl
daa
inc
into
jnp
inc
adc
mov
stos
lods
outsb
fdivrl
orb
push
jns
ljmp
pop
fs
jne
dec
adc
sbb
mov
pushf
mov
inc
sub
pop
xlat
insb
pop
xchg
pop
sahf
sbb
pop
sti
mov
adc
dec
xchg
inc
jno
lret
insl
push
lea
pop
fistpl
or
xor
push
xchg
cmpsb
xlat
pop
and
add
pop
cmc
adc
fldl
mov
mov
fldcw
fisubs
les
mov
daa
pop
clc
data16
fs
sbb
stos
mov
mov
push
pop
lds
sbbb
dec
or
gs
jecxz
das
xchg
test
jb
or
pushf
cmpsl
cmp
aad
mov
or
cmp
test
or
or
mov
inc
jb
fcompl
gs
xor
sbb
push
shlb
sbb
mov
mov
xorl
mov
imul
mov
cmp
jae
sbb
ds
mov
mov
mov
or
mov
push
dec
pop
cmp
lods
push
int
test
repnz
pusha
cwtl
cmp
mov
lret
pusha
dec
cmpsl
mov
ficoml
scas
orb
mov
pusha
adc
fcomps
xor
shlb
mov
lock
push
lret
stos
iret
jnp
outsb
sub
ud0
and
and
mov
add
fadds
or
add
adc
scas
lods
ss
movsl
in
in
repnz
stos
jl
loope
testb
xor
imul
gs
or
and
sub
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
jl
adc
sbb
movsl
xchg
faddp
mov
sahf
insb
sbb
inc
and
aad
idivl
loopne
aas
mov
lret
push
sbb
or
test
add
rol
addr16
sbb
lret
cmc
jp
insb
mov
push
xlat
fcoms
repnz
xchg
dec
ds
imul
inc
add
jecxz
imul
mov
add
mul
xlat
addr16
push
test
sub
test
adc
mov
xor
js
xorb
xor
inc
icebp
add
xchg
je
js
sbbb
es
dec
dec
pop
clc
mov
adc
inc
repz
jg
jmp
jle
sbb
shll
xchg
dec
fldcw
push
and
jecxz
adc
pusha
xlat
push
add
ret
roll
movsb
popf
mov
inc
add
dec
cmpsb
adcb
call
sbb
dec
and
mov
sbb
in
int3
dec
clc
cmp
pop
or
scas
jb
inc
ret
adc
xchg
inc
ret
aas
add
enter
loop
cltd
mov
les
outsb
mov
adc
fnstenv
cmp
mov
in
mov
popl
push
out
fidivrl
das
adcb
cs
pop
adc
ret
dec
mov
imul
push
sub
xchg
add
push
jp
dec
pop
lahf
and
lret
and
mull
xlat
jno
movsb
pop
out
scas
jg
xor
cli
cli
pop
jo
hlt
out
dec
stos
sbb
sub
ljmp
mov
in
out
mov
inc
add
xorb
add
and
and
loopne
in
inc
stos
pop
push
adc
stos
insl
add
fisubrl
movsb
ljmp
dec
push
sar
push
stos
pop
jnp
cmc
outsb
test
cs
push
push
movsl
cltd
loopne
sahf
or
sub
push
add
call
fwait
sarb
mov
xlat
negl
pop
mov
ljmp
xchg
adc
adc
mov
cltd
popa
repz
repz
pop
pop
dec
outsb
aad
stc
adc
fcoms
ret
jbe
daa
imul
push
in
daa
cmp
lock
cmpsb
sub
cmp
sbb
cld
lods
jl
jns
outsb
pop
testl
loope
cmp
enter
scas
sub
data16
cltd
xchg
jge
je
xor
fdivl
cmp
sub
or
pop
add
xor
pop
mov
ds
es
outsb
mov
jo
push
sbbl
in
pop
fidivl
bnd
xchg
add
icebp
jmp
cld
inc
jo
fcoml
lahf
jae
push
repnz
sti
rcll
fldcw
inc
mov
cmc
divb
inc
out
sbb
sub
lock
leave
push
repz
imulb
lds
fiadds
aaa
xor
leave
cwtl
sbb
inc
dec
pop
popf
lahf
pop
push
aaa
minps
bound
mov
movsb
inc
sbb
adc
jbe
cmp
push
stos
xchg
stc
xor
jnp
mov
je
mov
and
pop
int3
push
imul
adc
mov
adc
or
popa
lahf
and
fisttpll
mov
mov
xchg
sbbl
iret
sarl
push
popa
sub
mov
mov
loope
mov
cmpsl
cltd
and
xor
push
das
stos
or
idiv
cmc
into
fldt
cld
mov
outsb
sub
pusha
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
insl
in
and
adc
sbb
mov
sub
je
sbb
out
repz
xor
nop
pop
imul
pop
ja
adc
std
sub
push
push
lea
xchg
mov
stos
xor
rcll
sbb
mov
in
fwait
sub
leave
fcom
hlt
scas
and
lods
push
mov
sbb
mov
nop
icebp
or
shrl
pop
popf
mov
cltd
mov
cld
jge
or
rorl
xor
ret
xor
in
out
pusha
call
jo
sti
sub
into
rcl
dec
add
jbe
std
call
mov
scas
test
push
pop
mov
and
push
out
cltd
cmp
outsb
cmpsl
or
jno
add
mov
aad
fdivrs
or
push
adc
call
push
mov
add
push
mov
xchg
ret
cmpsl
scas
xchg
sahf
dec
or
pop
sbb
xor
shll
dec
jae
aas
rcrl
out
sar
cmc
cwtl
xchg
jle
aaa
pop
mov
addr16
lahf
adc
sub
adc
lods
jbe
mov
inc
ret
test
mov
stc
sahf
leave
stos
sbb
movsl
push
push
scas
dec
fisttpl
lds
pop
mov
inc
loopne
push
sub
mov
pop
out
mov
aas
nop
cmp
popf
in
enter
dec
mov
std
enter
mov
mov
inc
push
cmc
cmp
lret
push
push
push
jle
inc
adc
lds
sbb
jmp
ret
mov
inc
jb
jg
negl
lahf
stc
sbb
or
in
das
pop
test
pop
test
mulb
push
clc
sub
mov
sub
xor
or
cmp
cmpl
and
leave
cmp
jo
shrb
fildl
adc
arpl
xchg
add
fs
aas
and
jl
lea
mov
fimuls
and
xchg
add
les
ljmp
inc
cmp
sub
add
xor
pop
outsl
imul
cmpl
xor
dec
push
mov
and
arpl
cs
cli
or
xor
jbe
bound
adc
out
jecxz
mov
add
das
cli
push
add
push
mov
adc
mov
sbb
dec
lock
fs
daa
ret
and
push
mov
in
test
pop
pop
leave
lods
sbbl
insl
aam
adc
leave
int
mov
call
mov
pop
add
push
jmp
xchg
xlat
sub
lret
dec
dec
out
stc
pop
div
xor
xor
mov
pop
push
sub
movsl
push
jl
dec
enter
cwtl
sbb
xor
xchg
mov
mov
iret
mov
adc
pop
aas
outsl
inc
test
pop
fisttpl
pop
adc
clc
and
insl
dec
add
or
mov
xchg
sbb
scas
dec
divb
adc
add
jge
fldl
sarb
imul
pushf
cmp
inc
mov
mov
push
stos
jo
subb
or
shl
nop
jnp
mov
pop
ret
call
adc
fisttps
xchg
dec
jnp
inc
pop
push
adc
mov
fildl
and
lds
mov
and
jle
cmpsl
pop
inc
in
dec
fldenv
or
cmp
stos
icebp
push
mov
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
nop
cmp
xchg
mov
jge
lods
jb
xchg
addl
aad
es
iret
dec
loope
in
mov
aaa
sbb
xor
bound
aas
sahf
dec
adc
movsb
mov
pop
xchg
dec
sbb
mov
scas
sbb
jg
cmpsl
push
les
mov
xchg
sbb
push
rcrb
mov
pushf
enter
imul
pop
push
fstl
sub
jg
inc
adc
jae
jge
out
sbb
inc
cmp
stos
daa
cwtl
pop
cli
scas
cs
lret
lock
cmc
out
les
fistps
pop
and
lcall
lahf
insb
push
les
sbb
mov
adc
jmp
imul
fdivs
adc
mov
sbb
inc
fs
leave
jg
arpl
dec
leave
icebp
fisubrs
in
clc
inc
fnstenv
push
ja
cmp
out
fmuls
inc
cmc
fs
inc
out
fwait
push
scas
pop
call
sbb
insb
mov
jle
mov
xor
nop
add
adc
hlt
add
bound
push
xor
inc
out
sub
pop
repz
mov
in
xchg
dec
lods
xor
sub
jne
xchg
cmp
mov
cld
sbb
pop
insb
pop
cltd
xor
lahf
out
inc
scas
push
jg
push
arpl
ror
xlat
jbe
or
push
faddl
or
fwait
test
dec
pop
scas
inc
pop
rorb
filds
js
out
sbb
push
cltd
pusha
jo
xor
in
nop
xor
outsb
push
sub
loope
ja
jne
aas
push
push
js
inc
mov
testl
sbb
rclb
xchg
lret
sub
scas
xchg
adc
aaa
jae
pop
ret
stc
lea
jno
outsl
xlat
xor
push
loop
mov
and
mov
out
mov
cltd
sbbl
jl,pt
pop
and
scas
test
sbb
mul
inc
ss
cwtl
fldenv
lds
subl
xchg
aas
adc
xor
sahf
dec
fmul
insl
call
cmpsb
lea
cli
clc
ds
sbb
xchg
cli
es
sti
insb
jl
sbb
or
cmp
lea
sub
mov
clc
enter
push
ds
repnz
adc
cltd
xchg
out
ret
pop
mov
xor
xchg
addl
xchg
enter
sub
inc
sbb
sub
inc
flds
fwait
adc
mov
cmp
dec
in
jb
pop
stos
mov
lock
in
fadd
and
lock
repz
cltd
int3
pop
mov
push
xor
int3
cmpl
sub
dec
xchg
mov
jae
mov
fildl
push
loopne
enter
dec
cmpsl
int
jbe
daa
pop
cmpsb
mov
cmpsl
stos
in
cmp
scas
adc
fxch
or
stos
or
test
cs
push
push
rorl
jmp
movsb
sbb
icebp
bound
mov
mov
or
and
daa
adc
mov
stc
js
adc
pop
cli
roll
arpl
stos
push
and
cmp
adc
xor
dec
gs
cmp
adc
outsb
repz
shl
add
adc
test
addl
shlb
lods
mov
jno
jmp
test
adc
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
mov
cld
sbb
sahf
adc
sbb
jecxz
xor
in
jg
cltd
popa
xchg
cmpsb
in
loop
sbb
xchg
sbb
aam
inc
mov
int3
leave
xchg
push
jp
hlt
push
lock
jg
popa
and
jb
inc
cmp
xor
ficompl
nop
mov
add
loope
mov
adc
xchg
pop
jp
mov
mov
loopne
cmc
jp
xchg
repnz
dec
sub
mov
mov
aam
iret
sahf
jno
test
repnz
test
aaa
xor
cmp
push
push
xor
notl
mov
or
sbb
ja
leave
sti
and
fcmovnb
xor
push
or
movsb
sbb
pop
movsl
xor
mov
aam
aaa
pop
xchg
shll
aas
cld
mov
mov
loop
test
and
std
movsl
ljmp
call
fcoms
rclb
fcom
mov
cld
lods
mov
sbb
inc
mov
cmp
enter
imul
shll
ss
rolb
xchg
push
lret
mov
pop
rol
aaa
and
mov
test
out
sbb
scas
push
xchg
js
cli
test
dec
mov
ds
mov
hlt
xor
jbe
imul
dec
or
push
xchg
jo
fwait
inc
movsb
sub
scas
loopne
jno
mov
aaa
add
div
inc
add
negb
cmp
out
push
push
cmp
xor
dec
fdivr
jg
mov
sahf
js
sub
ljmp
bound
insb
in
sub
cmp
add
cli
mov
pop
or
rcrb
pop
sbb
lock
nop
rcll
push
xchg
in
movsb
or
js
adc
lea
xor
clc
jecxz
cmp
iret
mov
insb
dec
fsubs
xor
fsubrl
cld
inc
mov
in
mov
pop
push
mov
push
gs
repz
inc
shl
repz
or
inc
popf
xor
call
cmp
mov
mov
aas
push
cmp
movsb
jmp
ss
xchg
add
jo
repz
mov
adc
sub
push
or
in
arpl
sahf
cld
cli
mov
xor
adcb
rcr
jbe
test
imul
stos
xchg
pushf
ja
in
jecxz
ja
movb
lds
shll
outsb
pop
outsb
fiadds
sbb
leave
bound
mov
pusha
lcall
loopne
fisubs
add
mov
inc
or
test
lds
sub
das
test
movsb
clc
dec
mov
sbb
push
mov
and
cmp
inc
loope
cld
clc
in
or
adc
adc
ljmp
sar
inc
or
test
imul
es
and
xchg
sbb
jo
xor
mov
fwait
stos
fistps
popf
mov
xchg
xor
xchg
cmc
mov
cmc
sbb
inc
xchg
jl
mov
adc
jg
jo
push
int
jecxz
mov
popa
xchg
std
sub
ljmp
push
mov
loop
push
call
pop
outsb
mov
rclb
mov
imul
mov
scas
enter
pop
in
imul
imul
sbb
clc
insl
mov
enter
ret
inc
pop
mov
xchg
push
repnz
dec
xchg
inc
mov
mov
pop
mov
pop
mov
push
push
push
sbbl
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
jl
hlt
sbb
sahf
adc
sbb
bound
lods
into
cwtl
or
sub
fildll
sbb
cmpl
xchg
xchg
jle
push
cmp
or
mov
mov
sub
fldt
xchg
jecxz
jb
push
push
daa
loope
repz
xchg
push
inc
call
cld
and
mov
inc
loop
in
negl
dec
xor
pusha
xor
aas
fnstcw
repnz
mov
mov
movsb
nop
adc
sbb
enter
repz
pop
jg
test
mov
or
or
and
sbb
mov
push
jmp
sub
add
jge
daa
sti
and
mov
stc
mov
jecxz
movsl
scas
mov
sarl
lods
inc
loope
aas
ljmp
inc
mov
icebp
inc
inc
add
dec
inc
inc
add
mov
or
rorl
mov
xlat
mov
add
in
cmp
push
sbbl
add
mov
jnp
shl
adc
repnz
js
sub
xor
adc
jbe
inc
push
fidivrl
inc
in
push
and
xchg
and
jns
dec
cmp
adcl
mov
sub
push
add
pusha
pop
adc
sub
aaa
int
mov
push
lahf
mov
cwtl
dec
jle
test
dec
pop
push
cmpsl
cmp
pop
lds
shl
push
pop
jmp
sub
mov
imul
int3
xchg
jae
pop
fstl
dec
dec
scas
js
test
ss
dec
pop
jae
ret
and
in
push
add
aas
imul
aad
insb
xor
addr16
push
loop
fs
sbb
lods
scas
fs
test
les
and
lods
inc
sub
mov
cmpsb
or
xor
jecxz
cmp
cmp
mov
push
push
sbb
push
add
testb
or
scas
ret
std
shlb
loopne
scas
sti
int
cmp
cmpsb
xchg
add
mov
cmpsb
pop
xchg
lods
loopne
add
add
mov
pop
int
lea
lea
mov
popf
mov
jnp
imul
adc
add
jne
dec
dec
imul
mov
jne
mov
or
xchg
mov
mov
les
jo
or
or
push
ss
jp
cmc
sub
repnz
fwait
lret
pop
imul
add
jns
dec
cld
imul
jp
jo
in
mov
pusha
test
pop
jp
jp
mov
jb
adc
cmp
pop
mov
xchg
mov
mov
cmp
pop
mov
pop
or
inc
cld
stos
into
mov
lea
les
and
sbb
in
push
lea
shl
cli
xor
add
pop
jmp
or
ret
int3
fdivl
dec
push
xor
push
loop
and
jmp
mov
loopne
lods
jmp
dec
dec
xor
cmp
xor
es
fcmove
push
pop
jecxz
cmp
ret
out
lahf
mov
sub
add
shlb
dec
outsl
xchg
lcall
adc
adc
bound
pop
jmp
add
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
cmp
mov
sahf
adc
sbb
loope
scas
mov
or
popf
lea
push
adc
jns
lds
mov
lahf
fimuls
jmp
push
sub
mov
popa
aad
jmp
rorl
outsb
push
std
jno
push
fldl2t
add
inc
shrb
out
icebp
or
mov
imul
cmpsb
inc
or
add
jnp
xlat
push
sub
inc
scas
ljmp
xor
jbe
fadds
out
and
mov
lret
fs
shll
aam
add
xchg
or
lods
lea
mov
incl
in
fisttpll
jl
mov
push
imul
jae
movsb
rorb
pop
inc
xor
sbb
enter
insb
lret
std
lds
inc
cltd
adc
mov
push
jle
aam
mov
inc
outsl
popf
icebp
push
xchg
in
lret
in
or
sti
cmpsb
into
fwait
push
mov
je
dec
push
test
leave
sub
cmp
mov
addr16
imul
addb
fdivrl
or
inc
ret
sbb
aad
sbb
add
repz
jl
enter
and
cli
stos
push
shrl
mov
stos
jge
mov
pop
adc
mov
shll
loop
iret
jne
aam
push
stos
std
sub
inc
aad
xchg
mov
sbb
cmp
or
mov
mov
popf
aaa
int
sbb
lea
test
stos
pop
aas
xor
add
test
inc
andb
add
lods
addr16
inc
ljmp
stos
shl
neg
pop
lahf
push
adc
cmp
push
movsb
adcl
mov
adc
icebp
sub
int3
popf
lcall
and
inc
flds
movl
add
mov
mov
loopne
nop
arpl
add
xchg
lods
movsl
or
or
call
cmp
xor
mov
jae
cmpsl
test
xchg
dec
cli
push
aaa
push
aaa
xchg
mov
mov
jecxz
or
mull
data16
loopne
test
arpl
or
mov
mov
rcrb
pushf
testl
aaa
into
dec
jmp
cmp
sbb
fstps
sbb
pop
pop
stc
or
mov
or
add
cmp
mov
inc
ja
data16
mov
mov
lahf
sbb
mov
mov
xlat
jns
fdivp
cmpsl
push
mov
sub
cmp
mov
jecxz
movsb
mov
cmc
sub
lods
ss
dec
ret
jbe
rcrl
add
fmuls
and
jge
cmp
cmpsl
inc
add
cmp
daa
sub
dec
aam
jg
sarb
fisubl
scas
cld
jbe,pt
test
sbb
xchg
scas
hlt
leave
mov
outsb
cli
pop
into
stos
frstor
jnp
add
stos
adc
stc
or
sub
loop
mov
mov
inc
cli
nop
jnp
ret
mov
inc
ss
dec
clc
and
adc
or
adc
mov
mov
stc
xchg
sub
pop
push
jl
and
xchg
pop
mov
push
xor
mov
ficoms
dec
lods
xchg
pop
mov
xor
cmpsb
ret
and
cmp
jg
jnp
sbb
and
dec
ss
or
movl
jne
jmp
sbb
fldt
sbb
or
sti
fstpt
in
sbb
sub
push
std
sub
jbe
or
insb
adc
pop
test
lods
mov
push
or
rorb
iret
jg
adcb
cwtl
or
lret
xchg
test
insl
in
cwtl
mov
in
popa
std
cmp
adc
adc
push
mov
adc
dec
xchg
lock
mov
mov
es
and
cmc
mov
pop
sub
and
popf
pop
add
push
divl
or
testb
imul
sub
daa
int3
das
pop
xchg
mov
or
in
clc
int
lcall
enter
sub
adc
dec
aas
inc
sub
xor
shlb
insl
adc
dec
inc
jbe
insb
lock
aas
mov
mov
mov
push
sti
mov
popf
ljmp
xor
pop
cmp
add
cwtl
sub
int
pop
and
cmp
ja
inc
pop
ja
mov
adc
lcall
jge
sbb
ret
aas
mov
lret
sub
lds
loop
mov
cmp
out
imul
and
push
mov
add
mov
shll
shrb
lahf
mov
cltd
in
xor
add
pop
mov
inc
dec
mov
pushf
setle
das
mov
and
push
xor
pop
cmp
fidivl
xor
add
scas
cmp
ss
xlat
std
mov
test
jmp
add
rclb
or
sahf
lea
lahf
sbb
xor
jne
push
mov
lret
aaa
jne
or
push
mov
popa
jne
fwait
xor
jns
sbb
sub
testb
inc
mov
outsb
sahf
adc
popf
mov
jnp
pop
div
ljmp
jecxz
mov
mov
dec
clc
rolb
shll
sti
icebp
loope
negl
loopne
or
cmp
inc
and
out
inc
cmp
ds
popf
ds
mov
cld
hlt
je
and
fcomi
movb
and
sub
mov
cmp
sub
or
repnz
jns
fsubp
cmp
mov
fcoml
mov
jmp
sbb
lahf
and
repz
ret
inc
push
lds
push
testb
call
test
pop
loop
out
sti
add
mov
in
push
sbb
or
mov
shlb
ljmp
inc
fwait
pop
xchg
in
xor
inc
jbe
ja
in
in
cld
jl
sbb
bnd
and
sti
loop
enter
mov
out
push
or
xorl
mov
fidivl
mov
test
mov
jmp
push
mov
jp
dec
add
push
hlt
pop
ljmp
sbb
mov
rol
aam
mov
adc
popf
jnp
cltd
mov
push
add
xchg
lods
pop
arpl
daa
ljmp
in
or
int
in
mov
push
in
loop
orb
es
icebp
mov
mov
mov
mov
inc
fsubp
add
dec
es
jbe
imul
rolb
ljmp
pushf
push
pop
inc
sub
ja
and
jno
cmp
xchg
push
je
mov
sbb
cmp
add
adc
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
test
int
push
jb
mov
out
daa
xchg
hlt
push
mov
and
mov
cmp
adc
dec
repnz
sbb
xor
cli
inc
pop
lcall
mov
sub
jecxz
fs
cwtl
push
mov
add
mov
cmp
inc
push
sbb
pusha
jge
scas
cmc
orl
in
in
outsb
xchg
push
addr16
xor
mov
cmpsb
outsb
jge
movsl
pop
push
movsl
xchg
sbb
lods
cmc
into
jno
pop
dec
dec
or
rolb
inc
jp
cmp
xchg
lods
push
nop
loopne
enter
roll
jl
pop
enter
movsl
pop
inc
push
pop
and
ret
jnp
cmp
int3
or
lea
xchg
push
push
xchg
mov
mov
xor
daa
cmc
xchg
out
decl
mov
bswap
fcompl
imul
mov
shll
jno
and
lods
pop
out
mov
add
stc
or
jecxz
test
mov
mov
add
repnz
sub
arpl
jle
jnp
or
insb
or
mov
out
scas
push
jecxz
pop
pop
int
xor
nop
mov
sub
mov
addr16
sar
xor
frstor
or
nop
jno
pop
into
xor
out
pop
fst
std
test
jne
pop
or
cmpsl
inc
mov
popa
out
les
aaa
icebp
shlb
mov
jge
add
jle
fldcw
sbb
sbb
jmp
mov
cmp
mov
sub
sub
cmp
std
out
mov
out
jae
mov
add
sub
mov
dec
cmp
jg
jecxz
mov
push
pop
out
cmp
daa
mov
adc
pushf
cmpsb
xchg
insl
xchg
inc
das
pop
sbb
sbb
nop
in
fcompl
out
push
jge
outsb
fs
addl
push
inc
test
sti
push
pusha
or
int3
xchg
js
mov
lods
insl
pop
rcll
jae
movsb
sahf
bound
fwait
adc
inc
in
add
mov
pushf
shl
jo
bound
scas
cli
xchg
mov
pop
fdivrs
out
jbe
sbbb
adc
xchg
out
dec
loopne
or
stc
hlt
mov
push
test
mov
je
in
loopne
inc
xchg
in
pop
hlt
mov
andl
pop
push
dec
fdivl
push
rorl
int
jge
cmpsb
cmpsb
pop
movsb
xchg
jae
sub
lods
and
push
les
mov
imul
push
das
adc
lret
xor
sbb
out
cwtl
push
sbb
cmp
int
lods
ffreep
push
cmp
and
icebp
dec
sub
add
ds
mov
ret
repnz
push
out
add
dec
out
iret
fsubrs
loopne
mov
adc
test
add
push
sbb
and
scas
inc
in
push
pop
cmovns
jns
sub
push
dec
movsb
add
sbb
pop
ja
stc
jmp
call
movsl
push
arpl
or
imul
or
stos
test
nop
rorb
into
nop
pop
imul
shlb
mov
in
roll
dec
in
in
int3
push
jg
shrl
repnz
add
push
dec
loop
pop
jp
lret
pop
repnz
into
mov
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
push
xlat
sbb
sahf
adc
sbb
fisttps
cmp
and
inc
in
cmp
lahf
mov
xchg
call
ljmp
inc
mov
adc
outsb
sbb
jp
cmp
call
pushw
loop
mov
adc
jle
cmp
mov
cli
xor
push
cwtl
fisubrl
mov
xchg
fcmovne
lret
outsb
fdivs
mov
jb
add
jp
imul
xor
mov
inc
or
sbb
push
mul
lock
insb
fcmovb
xor
pop
pop
rolb
sub
cmc
into
push
xchg
dec
mov
int3
lret
not
lret
cli
sbb
lret
cmc
push
shrl
sti
scas
ret
push
fdivs
movsb
sbb
insl
add
outsb
jne
xchg
iret
push
sbb
adc
push
shlb
bound
in
xchg
sbb
dec
leave
cltd
mov
subb
mov
nop
xchg
cmpsb
dec
cld
aas
pushf
insb
bound
dec
call
xchg
dec
stc
lea
xor
mov
rclb
insl
in
xor
adc
mov
and
sub
xor
repnz
test
push
loop
xchg
lea
bound
lods
mov
cltd
cmp
ds
and
mov
mov
dec
adc
mov
xchg
lock
sahf
or
inc
rorb
jmp
mov
or
fmul
xor
idivb
nop
mov
repnz
shrl
in
lret
loope
inc
movb
fmull
or
mov
divl
repnz
ljmp
jl
jmp
fadd
xchg
push
xor
dec
outsl
inc
bound
or
fcompl
jo
mov
scas
lsl
jp
cmpsb
ror
cwtl
push
fdiv
jnp
pop
mov
lret
mov
pushf
mov
stos
mov
rcrl
pop
dec
add
cmp
sbbb
in
pop
cs
aam
or
aaa
sti
lock
test
add
jp
adc
mov
popa
xor
or
sub
xchg
popa
insb
inc
jmp
jno
rolb
pop
popw
mov
outsb
aad
sahf
jp
sti
mov
push
lock
inc
inc
lods
jl
jne
pop
cmp
in
outsl
jbe
popf
ljmp
frstor
inc
incl
add
lret
movsl
jb
pop
outsb
mov
ret
or
inc
adc
sub
mov
pusha
lret
lahf
mov
movb
jnp
pop
inc
ja
fwait
jne
sbbb
push
lods
aad
mov
or
adc
loop
stc
or
ficoms
fisubs
dec
sub
in
mov
lds
pop
fidivs
jb
aad
mov
std
int
aad
mov
xor
in
outsl
mov
movb
jnp
and
iret
loope
das
dec
adcl
pop
mov
adc
movsb
ljmp
xor
sub
lret
pop
adc
faddl
push
xor
sub
sub
pop
sarb
push
mov
daa
in
sub
out
sub
in
add
pop
ja
outsl
inc
std
dec
jle
cmp
cld
orb
shrb
xor
dec
cmp
lcall
jl
lret
jo
aam
push
cmp
push
push
enter
mov
jo
arpl
push
add
sbb
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
push
imul
sbb
dec
popa
scas
ret
add
ret
fmull
mov
imul
lods
fcomp
ljmp
cmp
jl
mov
jmp
push
int3
pop
ss
jle
aaa
fmulp
push
sarb
add
aaa
mov
sub
aas
prefetchnta
test
movb
scas
cmp
out
arpl
mov
loopne
pusha
cs
push
push
iret
xchg
sub
fwait
mov
mov
std
shl
inc
in
cmp
mov
xchg
mov
popa
pop
js
adc
test
adcb
popf
fucompp
je
push
and
jo
dec
jmp
loope
stos
call
addr16
adc
in
xor
hlt
imul
pop
cmp
stos
inc
push
int3
fcmovu
pop
pop
cld
pop
push
and
rclb
cmc
adc
mov
jp
pop
test
clc
xor
mov
inc
test
gs
mov
xchg
and
cmc
insl
test
sbb
mov
scas
lcall
add
dec
nop
rcr
loopne
js
clc
dec
data16
and
mov
inc
jge
cmp
inc
stos
imul
lea
mov
jle
dec
aad
inc
adc
test
jno
aas
cmp
xorb
mov
cmp
jecxz
pop
or
pop
aad
xchg
lock
xchg
push
stos
pop
mov
add
and
test
iret
inc
adcb
mov
inc
lret
sub
sub
jg
xchg
pop
adc
insb
xchg
movsb
xlat
sahf
in
and
rcl
jo
jecxz
iret
dec
fucomp
cmp
cmp
pusha
add
pop
aad
pop
push
fiaddl
dec
jle
mov
leave
loopne
and
ss
mov
scas
loope
dec
fld
or
jp
mov
les
and
imul
imul
mov
shll
lods
das
add
dec
pop
out
push
add
fdivl
push
cmpsl
xchg
add
sahf
mov
inc
aam
cmpsb
dec
les
out
mov
hlt
stos
mov
jns
pushf
xor
cmp
scas
lret
cmp
in
data16
xlat
test
push
shlb
dec
xchg
icebp
fstpt
fwait
nop
mov
pushf
fistpll
fcmovne
arpl
inc
xchg
imul
shl
add
movsb
stos
xor
cmp
in
testb
movsb
adc
lods
and
jne
inc
fisubl
sub
imul
ret
adcb
insl
push
add
cmp
push
scas
addr16
or
xor
mov
mov
dec
scas
pop
mov
xor
idivl
mov
out
fdiv
add
cmp
pop
jns
arpl
fdivs
orb
sbb
pop
jp
add
ss
or
adc
jmp
mov
sbb
lods
in
or
mov
inc
xor
fdivrs
in
outsl
ljmp
mov
lods
push
xor
or
lahf
ja
test
leave
popf
in
imul
popf
cmp
movsl
mov
mov
lods
cmp
fadds
out
lahf
cmc
popf
popa
add
out
addb
loop
push
sub
mov
adc
cmp
leave
ljmp
push
addb
addb
ljmp
add
adc
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
int3
mov
add
sub
lcall
xor
leave
jb
inc
ljmp
iret
rcrl
mov
push
adc
loopne
cli
inc
repz
arpl
bsf
adc
lret
cwtl
js
sub
out
cmpsb
cmp
fstps
lea
and
mov
mov
scas
cmp
jecxz
ja
push
cmp
cli
mov
enter
inc
mov
mov
adc
mov
xchg
pop
mov
sbbl
xchg
push
out
jecxz
mov
in
in
mov
push
push
xchg
neg
repnz
decl
cmpsl
repz
loope
scas
mov
pop
lock
rol
push
ja
es
xchg
adc
sbb
das
in
popa
sub
insb
jl
pop
and
pop
ss
pop
mov
dec
xchg
enter
pop
jle
hlt
or
ret
push
lcall
ret
mov
mov
sbb
and
mov
push
sahf
adc
insb
jo
lds
dec
sbb
pop
push
pop
icebp
push
hlt
add
jge
inc
sbb
orl
test
pop
dec
mov
add
jno
jp
xor
pop
shll
inc
fldcw
addl
push
pop
xor
jle
jno
addb
pop
jne
xorb
or
cmovne
xorl
mov
gs
sarl
lret
gs
adc
sbb
es
and
divl
xchg
xlat
push
push
xchg
lahf
dec
cmp
fstpt
dec
arpl
ja
dec
stc
push
sbb
dec
lds
sub
pop
jbe,pt
cld
xchg
inc
sub
or
adc
test
bound
push
ja
push
stos
mov
jecxz
mov
fdecstp
punpckldq
arpl
and
and
xchg
test
and
repnz
sub
xchg
arpl
arpl
divps
ret
ja
lret
mov
xchg
sbb
mov
iret
pop
clc
je
push
sahf
mov
jns
test
test
mov
cmpsl
lahf
sub
ja
aas
push
push
cwtl
pop
jo
dec
push
xor
and
add
fsubrl
daa
loopne
mov
aaa
into
push
lds
out
jmp
or
lahf
inc
pop
repz
xor
push
add
inc
jecxz
shll
je
mov
push
mov
pop
lret
cltd
sarb
sub
mov
loope
mov
push
lcall
popf
sarl
lods
dec
outsb
add
sahf
xchg
fidivrl
into
cltd
pop
and
push
pop
mov
test
pop
or
in
dec
cmpsl
or
fisttpll
dec
sub
sti
in
leave
lcall
mov
jp
arpl
dec
xlat
mov
cmc
lods
push
addl
out
pusha
or
cwtl
mov
movsb
popa
push
mov
xorb
repnz
dec
add
sub
inc
cmpsl
push
in
inc
movsb
pop
dec
xlat
icebp
jmp
xor
fildl
addr16
add
dec
int
cwtl
mov
cmp
aad
xchg
aad
push
inc
js
mov
mov
pop
stos
jb
push
pop
jo
imul
je
into
mov
repz
dec
dec
push
mov
and
cmp
psubsb
fimuls
sub
fistpl
add
jge
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
insl
cli
mov
sbb
rcrb
ror
data16
nop
lods
mov
out
jnp
pushf
mov
push
fstps
iret
int3
movsl
add
pusha
in
or
sarb
popa
xchg
mov
add
mov
pusha
dec
popa
push
add
and
pop
pause
jns
pop
out
jl
sub
adc
call
dec
cmpsb
sub
add
xor
pusha
add
dec
push
adc
and
addr16
push
push
jg
cwtl
jb
stos
fsubrs
xchg
xlat
cld
aam
movsl
aaa
sbb
je
fsubs
inc
out
mov
or
mov
orl
jecxz
std
xchg
out
fs
dec
xor
mov
sbb
or
out
mov
adc
stos
add
rol
mov
sbb
js
int
inc
and
mov
dec
aad
mov
mov
or
mov
out
adc
loop
cmp
in
lahf
jno
ss
leave
sbbb
pushf
and
xchg
cmp
nop
out
pop
int
fldcw
cmc
pushf
xor
shll
or
pop
push
addr16
cmp
out
mov
nop
les
cmp
aaa
xchg
push
push
sbb
mov
sub
add
xchg
into
rorb
mov
add
call
xchg
popf
sarl
jg
sbb
lcall
lahf
mov
js
inc
mov
sarl
std
push
and
dec
mov
mov
jo,pt
aam
das
les
jns
add
cmpsl
xchg
pop
cli
fdiv
ss
int
xlat
mov
sbb
jmp
sahf
cmpsl
ret
hlt
leave
lahf
sbb
xor
orb
ja
scas
sbb
cmp
dec
mov
xchg
xchg
pop
jo
mov
adc
xchg
jns
addl
sbb
in
not
xor
or
sbb
mov
push
int3
dec
in
inc
lds
mov
fildl
or
jno
in
pushl
jmp
test
inc
mov
aad
add
lea
adc
mov
lods
push
aam
dec
ret
xchg
cli
loop
mov
ret
in
jno
sub
jmp
cltd
inc
das
mov
shrb
pushf
frstor
mov
cmc
adc
jns
dec
out
fisttps
pop
mov
pop
and
jecxz
repnz
cmovns
lock
movsl
in
pop
stos
loopne
lahf
icebp
xchg
lds
lcall
shll
imul
addb
cwtl
pop
dec
mov
loopne
mov
std
or
jp
mov
scas
sub
jns
pop
add
and
push
mov
sbb
xchg
push
pop
push
xchg
rcr
adc
xchg
lea
or
imul
push
sbb
push
push
or
pushf
jg
jo
ljmp
icebp
push
or
lea
or
and
mov
incb
mov
jle
push
rcrb
nop
lret
inc
push
and
imul
mov
inc
push
and
jb
add
jae
imul
inc
cmpsl
inc
cld
in
nop
push
add
paddd
jl
xchg
iret
cmp
lds
mov
cmp
lret
ljmp
push
mov
sbbl
shl
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
mov
mov
sbb
out
div
mov
adc
jmp
add
fsubrs
xchg
jg
mov
inc
mov
repnz
push
mov
das
mov
aaa
lods
mov
cltd
stos
sub
sbb
mov
or
or
mov
pop
pop
stos
lcall
jno
jb
dec
sahf
pop
jp
mov
fisttps
lahf
add
enter
dec
add
aad
xor
cmp
repz
aam
movsb
cmp
sbb
or
sarl
scas
test
xchg
std
daa
dec
lahf
cmp
test
movsl
or
jns
idivb
xor
ds
xor
jecxz
jno
and
in
test
adc
ret
jmp
dec
pop
and
add
lods
insl
jne
lret
stos
push
lea
ret
enter
test
lcall
fs
sarl
adc
cld
add
jle
push
inc
jl
mov
fs
daa
jno
xchg
cmp
pushf
int
lds
cmc
mov
fwait
jns
sub
mov
jp
jl
xchg
loopne,pt
pcmpeqb
xor
add
mov
xchg
pop
push
xchg
fs
cld
push
dec
rorb
stos
ja
test
cmp
rcrl
mov
pop
fstpt
stc
stos
or
adc
cmp
pop
xor
fadd
jp
insl
add
dec
sub
sbb
push
push
daa
sbb
adc
test
sbb
adc
idivl
out
and
ja
test
push
pushf
mov
dec
push
mov
mov
lods
xor
pop
sahf
cmpsb
loope
add
rol
xor
popf
adc
test
or
xor
das
xor
test
dec
lcall
pop
add
mov
cmpsb
pop
xchg
out
xor
mov
sbb
rcll
nop
add
in
or
mov
push
mov
cs
xchg
mov
insl
imul
lret
das
dec
xchg
fldcw
sti
jns
dec
sahf
inc
and
mov
jg
or
push
cli
rcl
decl
bound
and
inc
fwait
sub
mov
test
test
and
ret
enter
adc
lods
or
pop
dec
cmp
mov
sbb
popa
lcall
mov
mov
push
dec
lods
mov
mov
divl
pop
fldenv
and
xor
xor
cmpsl
call
mov
adc
lock
hlt
push
rcll
pop
fisttpll
jmp
insb
pusha
aas
icebp
cmp
cmpsl
pop
push
or
push
mov
sti
inc
out
mov
xchg
xchg
lret
imul
fmul
ds
loopne
shrl
clc
shl
popa
or
ja
jl,pn
or
les
inc
and
sti
pop
sub
in
or
inc
mov
cmp
mov
jle
push
mov
stc
sahf
xchg
rcrl
pusha
sub
lret
in
dec
icebp
push
loope
stos
lods
add
sub
loope
or
mov
mov
frstor
rcrl
push
lods
mov
add
sbb
dec
jmp
xchg
lret
dec
hlt
sbb
lods
push
int3
outsb
into
sbbb
ljmp
sub
fisubl
or
dec
xchg
jle
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
dec
mov
sbb
sahf
adc
sbb
lahf
iret
ficomps
out
subl
lret
cwtl
xor
vpmacssdd
stos
mov
sub
cmp
bound
rclb
add
cli
pop
mov
scas
les
add
push
je
cmp
mov
fcom
pop
aam
dec
rcll
test
adc
loope
sub
add
sub
xchg
imul
ficompl
add
pop
jmp
imul
les
fdivs
andb
jns
dec
leave
mov
incb
mov
mov
mov
inc
outsb
cmp
push
inc
iret
insb
mov
adc
movsl
dec
sbb
das
iret
lods
stos
data16
addr16
sahf
outsl
in
jmp
out
xor
in
rcpps
je
pop
filds
jle
sub
jnp
lret
inc
lods
pop
push
inc
cmp
outsb
fs
adc
movsl
adc
lret
jl
xlat
inc
mov
fs
insl
out
jbe
scas
inc
xor
push
add
test
pop
test
cmc
loope
push
and
jnp
orb
push
cwtl
pop
sub
push
adc
clc
dec
call
sub
paddusw
inc
ret
hlt
sub
ds
jo
sbb
pop
insl
sbb
pushl
pop
aad
cmp
call
pop
pop
xchg
mov
mov
adc
pop
jmp
dec
mov
mov
xchg
aas
add
insl
xor
call
cmovg
insl
shl
or
into
lods
dec
enter
add
xor
in
jecxz
int3
aas
add
les
test
lds
mov
jmp
in
bound
or
add
dec
pop
bound
push
test
roll
mov
stos
ficoml
jp
pop
std
push
bound
rolb
lds
pop
push
in
lods
cwtl
pop
fbstp
out
ljmp
mov
adc
pushf
sbb
lcall
mov
cli
xchg
je
int3
inc
std
addb
fs
mov
mov
push
pushf
outsb
lahf
vrcpps
adc
cmp
rorl
lret
xchg
push
jae
popa
xor
lcall
roll
jmp
sub
mov
jp
add
fs
and
dec
pop
loopne
and
fnstcw
insl
clc
mov
sbb
or
sbb
fst
div
in
mov
cld
imulb
sbb
mov
mov
mov
dec
lock
rcr
dec
cmp
nop
add
sub
loop
mov
mov
jae
add
popa
jg
push
push
push
enter
xchg
fistl
lret
lcall
push
sahf
out
stos
dec
mov
outsb
and
and
insb
cltd
les
andb
xchg
pop
in
xor
and
xchg
js
mov
mov
shr
ja
pop
jmp
cmpsb
or
pop
repz
add
jns
pop
sbb
loop
ss
shl
subl
pushw
cmp
mov
mov
ss
add
and
ficoml
cmp
sbb
mov
rorl
or
testl
dec
pop
mov
inc
pop
loope
mov
mov
and
push
testl
jle
mov
sti
rolb
mov
sbb
enter
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
push
cmpsl
mov
sahf
adc
sbb
xlat
xchg
mov
fcoms
mov
dec
cmp
pop
mov
push
pop
xchg
add
push
push
aaa
int
pop
mov
arpl
xor
dec
das
push
add
mov
addr16
dec
mov
jbe
ret
daa
or
push
pushl
fimuls
lock
adc
aas
xlat
test
cmpsl
xor
add
stos
jno
jo
in
jnp
stos
rolb
mov
cli
lods
lock
mov
pop
loope
pushf
ret
les
adc
fdivrp
inc
inc
jp
lods
cmc
push
xchg
and
xor
aaa
jl
inc
aam
rclb
nop
adcb
jns
push
pop
mov
popa
or
pop
fcompl
ret
in
sahf
out
loopne
push
or
roll
popa
and
adcb
ret
and
adcl
shrl
jl
xchg
cmp
inc
ret
mulb
out
shrb
fcomi
jb
and
mov
repnz
xchg
sbb
loopne
inc
addb
ficomps
idivb
ja
jno
ss
or
icebp
jnp
addr16
loope
and
out
int3
lret
ret
inc
xchg
fs
lods
sbb
xchg
inc
fwait
xchg
popa
ljmp
int3
cs
mov
dec
inc
rorb
inc
add
adc
jmp
add
mov
scas
enter
ljmp
add
sub
mov
scas
adc
xchg
fnsave
xchg
push
in
xor
sbb
insl
fwait
test
push
stc
fmul
in
and
movsl
movb
ds
mov
and
dec
pop
xchg
outsb
scas
addr16
mov
mov
jns
xor
lret
and
adc
xchg
dec
lret
outsl
scas
push
xor
test
adc
fisttps
xchg
jmp
out
cmp
out
sub
bound
push
mov
pop
clc
and
mov
movsl
insb
repnz
lock
pop
jg
aad
cmp
lret
pusha
sbb
paddusb
into
pop
aam
xchg
jmp
or
idiv
pop
inc
loop
into
cmc
ds
mov
jae
and
fldcw
pop
in
inc
cld
pop
scas
ss
aaa
roll
jno
icebp
repnz
xchg
fisttps
xchg
xor
jbe
mov
or
nop
inc
cmpsl
and
xlat
mov
decb
out
mov
add
mov
lods
imul
jmp
arpl
cmpsb
jno
inc
ja
lds
jne
sbb
sti
roll
mov
out
sbbl
filds
cmpsb
scas
je
into
fs
in
idivl
push
xlat
test
arpl
or
jo
ret
push
int
xchg
pop
mov
push
dec
notb
imul
mov
jecxz
sbb
outsl
or
mov
loopne
jecxz
pop
repnz
cld
fstpl
cmp
push
mov
adc
outsl
cmpsb
sub
xor
divl
sbb
or
fnsave
adc
pop
out
js
fstpt
cmp
add
cli
and
xchg
inc
pop
pop
mov
mov
xchg
inc
repz
cltd
imul
xchg
sub
cmpsb
jecxz
je
repnz
push
fsts
xor
xor
pop
aaa
mov
repz
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
sub
xchg
mov
sahf
adc
sbb
sbb
and
inc
cmpsl
sbb
int
out
pop
outsb
adc
pop
pop
xchg
aaa
sub
outsl
stos
movsb
daa
lock
cmp
test
clc
dec
andl
test
lret
ret
add
sub
pop
fists
mov
pop
repnz
push
inc
push
mov
jle
mov
jnp
stc
jae
ret
pop
cmp
mov
sahf
in
nop
rol
dec
push
add
in
push
mov
mov
add
push
js
sbb
imulb
adc
pop
mov
stc
ret
cli
adc
xchg
scas
paddd
mov
pop
dec
push
out
dec
xor
ret
push
mov
dec
hlt
mov
cli
in
mov
sbb
xor
rcrb
pop
ljmp
and
cs
sarb
aas
jne
movsl
or
adc
fnsave
pusha
mov
int3
adc
adcl
rolb
or
es
lcall
push
xchg
push
aad
sbb
cltd
cmpsl
dec
push
adc
insb
or
sti
mov
sarb
arpl
aam
pop
dec
cmp
pop
out
add
push
aaa
fwait
sbb
push
sub
xchg
mov
dec
test
xor
lods
fldl
dec
outsl
pop
ljmp
test
cmpl
jl
aam
scas
ret
pop
jp
and
sbb
inc
mov
icebp
clc
jnp
insb
pushf
push
jmp
lahf
in
pusha
cli
sub
mov
pop
push
push
cmc
or
ss
dec
push
stc
cmp
jl
cmpsb
and
cmp
imul
inc
xor
pop
jmp
dec
pop
xchg
ficompl
mov
push
popa
xchg
das
mov
cmpsb
in
das
push
movsb
cmp
xchg
loop
xlat
imulb
xchg
xchg
popf
in
dec
xchg
in
adc
outsb
popa
lods
xchg
pusha
mov
pextrw
xchg
sub
in
add
clc
cltd
and
clc
push
jbe,pt
stos
pop
mov
and
bound
push
pushf
clc
das
lods
mov
pop
sar
nop
xlat
icebp
xor
add
scas
adc
out
outsl
sbb
cltd
xchg
push
dec
dec
aas
jb
sub
pusha
mov
insb
fwait
popl
lcall
cltd
shlb
js
push
repz
ja
jg
mov
sarl
mov
aam
scas
sbb
mov
mov
ret
cld
push
inc
and
mov
push
int
inc
aad
addl
push
push
pushf
das
inc
cmp
push
lds
adc
pop
mov
pop
pop
outsb
mov
cmpsb
scas
lea
int
cmp
pusha
push
out
pop
jge
cmp
lea
sahf
pop
clc
call
xor
fs
cmpsb
mov
movsb
shl
lahf
dec
xchg
pushf
cmpsl
lcall
xorb
sub
mov
xlat
push
fistl
dec
dec
fs
lea
cltd
pop
out
push
xchg
in
xorl
dec
sbb
iret
push
jns
ret
arpl
in
test
ss
lcall
push
lret
pop
cmp
push
icebp
cmp
add
add
cltd
or
cmp
inc
cmp
sbb
ficoms
leavew
sub
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
outsb
js
imull
gs
fcomp
sti
cmp
or
sub
mov
pop
aaa
aam
out
cltd
jne
push
cmc
mov
pop
mov
xor
lret
cmc
cwtl
lcall
ja
xor
int3
clc
lock
mov
lds
mov
push
jg
sub
cmpsb
fisttpl
addl
push
and
jae
stos
and
mov
popf
inc
jno
mov
fsts
es
mov
push
xchg
loopne
push
inc
rorb
push
loopne
and
cmp
scas
cmpsl
mov
sbb
xchg
push
fdivrs
popf
xor
fldcw
mov
cwtl
mov
mov
inc
pushf
mov
cmp
rcl
jge
outsl
out
inc
fiadds
lock
sbb
insl
xor
testl
dec
movsb
sbb
pop
xchg
movsl
jns
xor
les
jo
or
cmp
push
shlb
movsb
mov
xor
popf
or
pop
cmp
dec
xchg
in
rorl
daa
xchg
mov
mov
fdivs
adc
mov
mov
movsb
out
pop
aam
xchg
lahf
test
faddp
cmpsl
sub
nop
jle
movsl
jnp
jns
adc
rorb
out
push
iret
xchg
pushf
mov
cmp
pop
and
gs
push
popa
sub
addr16
mov
push
lret
test
pop
fidivrl
outsl
aad
mov
mov
fwait
rorb
stos
inc
jmp
enter
scas
aas
push
dec
std
push
cmpsl
aaa
daa
jle
into
or
test
pop
mov
popf
lods
imul
aad
enter
into
test
aad
add
in
inc
mov
out
jnp
sub
jle
sub
adc
orl
xchg
les
pop
mov
mov
jp
lcall
scas
aaa
mov
orl
outsl
ret
inc
dec
test
ficomps
pushf
mov
lock
jno
test
and
testb
push
frstor
xor
fisttps
sub
int
leave
sub
xor
nop
shrl
jns
sbb
push
adc
jg
and
pop
sub
jno
cwtl
jb
sarb
popa
filds
negb
cltd
mov
xchg
fisttpl
sar
mov
bound
add
sub
repnz
push
cli
ret
vmwrite
pusha
pop
gs
sub
cs
or
sti
xchg
adc
andb
sub
aam
leave
test
insb
std
negb
stc
add
adc
cmpl
push
sub
mov
xchg
ret
mov
dec
inc
dec
je
adc
test
adc
sbb
jne
jl
sbb
pop
add
lods
jb
incl
test
mov
jno
pusha
adc
stc
or
cmp
mov
cs
mov
fsubs
push
or
add
sbb
arpl
lea
out
sub
mov
insb
jbe
rorl
cmp
hlt
cmp
mov
pop
cmc
iret
or
xor
jo
pop
jne
jle
sbb
sub
inc
cwtl
imul
sbb
loop
and
das
nop
jb
jb
orb
nop
jle
leave
or
lods
mov
mov
addr16
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
out
in
jo,pn
mov
push
xor
pushf
push
shrb
lods
cmp
xchg
inc
pop
imul
jo
mov
in
addr16
sub
mov
popf
jb
fs
or
test
lock
xor
iret
or
adc
scas
fistpl
jbe
out
adc
mov
jmp
push
cmp
imul
mov
cmc
ret
sbb
xor
shll
sbb
testb
jno
fildl
out
cwtl
xchg
dec
stos
jecxz
insl
stos
mov
bound
pop
and
sbb
mov
subl
pop
std
addr16
aaa
clc
cmp
mov
add
push
cs
sahf
cli
cmp
mov
insl
hlt
dec
dec
test
sub
mov
sub
arpl
xchg
jnp
mov
cmp
cwtl
mov
imull
sub
sti
xchg
mov
loop
sbb
leave
jg
push
fistps
xlat
lahf
jp
mov
lcall
push
les
mov
xchg
loopne
inc
adc
sahf
dec
mov
cld
xlat
xor
add
testb
lods
and
pop
and
leave
push
and
outsb
jl
lret
inc
cmc
pop
push
sub
pop
sahf
or
push
rcrl
mov
xchg
imul
sub
divl
scas
roll
push
mov
sbb
imul
jg
repnz
int3
mov
cmp
inc
dec
pop
out
nop
dec
cwtl
xchg
andl
jo
int
fs
es
imul
sbb
xor
sub
adc
popa
dec
mov
jle
in
loope
rcr
mov
mov
inc
enter
mov
pushf
in
sbb
loop
push
shl
and
fs
ret
push
push
push
ss
movsl
pop
jbe
mov
aas
push
out
sbb
hlt
add
fists
scas
jnp
ds
pop
imul
sbb
sbb
cs
cmp
addb
rclb
scas
cmp
xchg
imul
mov
xchg
or
push
lds
shll
test
js
mov
cmp
test
fistpl
out
pop
flds
not
rolb
mov
inc
aad
and
lcall
and
mov
lret
ds
loope
or
aas
gs
mov
lods
mov
ret
out
add
jae
inc
fs
push
pop
add
lds
insl
add
lods
cmp
int
jmp
add
inc
int
cmp
mov
addr16
iret
jmp
pop
pop
inc
int3
outsb
ljmp
insl
jbe
in
addr16
inc
push
mov
sbb
in
orl
fcmovnbe
idivl
pop
sub
dec
mov
scas
lahf
push
ret
lds
mov
mov
aam
divl
fsubs
cs
push
xchg
das
ss
cs
outsb
adc
roll
adc
loop
cmp
sub
and
inc
mov
repnz
push
shlb
mov
aad
fs
pop
fistpll
dec
xor
fiaddl
fldenv
clc
sub
pop
jnp
scas
xchg
cmpl
push
xchg
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
decl
sbb
xabort
sbb
jmp
mov
jne
xor
xor
aaa
stos
data16
jle
jge
fmull
pop
mov
xor
xchg
mov
loope
jle
in
filds
and
xchg
subl
pop
dec
sub
dec
fnstcw
and
ret
sti
jl
inc
cli
out
in
fdivs
arpl
push
iret
je
push
add
lods
cld
movsb
cmp
adc
cmp
test
rcrl
pop
sbb
cmp
jmp
shll
jb
scas
xchg
or
std
dec
loopne
lock
fld
cmp
adc
fsub
mov
or
cwtl
mov
repnz
iret
arpl
mov
jb
test
out
mov
pop
mov
test
jns
cmpsb
sti
aaa
mov
jnp
das
iret
loope
pop
daa
or
iret
mov
mov
sti
xor
cltd
es
lret
and
mov
sbb
mulb
daa
add
jns
xlat
mov
push
inc
cli
pop
test
add
frstor
pop
fs
cmp
mov
jnp
das
sbb
jp
mov
dec
addr16
in
mov
pop
dec
cmpsl
out
rol
std
jnp
adc
sarl
mov
pop
or
xchg
test
mov
xor
xchg
jno
in
out
jae
outsb
fmul
and
add
jl
popf
scas
pushf
add
sub
gs
sbb
sub
addr16
nop
lret
mov
push
sti
fldl
mov
fwait
jae
fs
mov
mov
insb
out
test
jo
loope
jl
cwtl
cmpsl
push
mov
addr16
shlb
clc
cmc
sbbl
adc
add
idivb
fnstsw
add
pop
cmp
cmc
gs
out
pop
nop
mov
push
push
pusha
loop
jo
jo
inc
jg
or
aas
sahf
hlt
movsl
cmp
lods
das
fistpll
mov
dec
rolb
lds
fdivrp
cmp
cmp
int3
xor
cmp
repnz
jbe
adc
es
push
js
dec
stos
leave
lods
ja
out
sbb
rcll
mov
imul
in
mov
enter
repnz
insb
pop
mov
cld
jo
aas
negb
pop
sbb
icebp
mov
iret
ret
pop
mov
mov
push
leave
adc
gs
jmp
xchg
add
or
cmpsl
sub
mov
jnp
insl
adc
loop
test
lahf
mov
pushf
popf
sti
mov
fnstsw
in
cmp
cmp
sub
aam
jno
push
fs
sub
test
je
mov
mov
test
pminub
sbb
popf
or
in
adcl
in
lock
dec
mov
jbe
pop
pop
mov
jbe
adcb
movsb
xchg
sbb
rcrb
movsl
jp
push
lcall
lods
cltd
scas
por
mov
les
inc
mov
mov
xor
cli
mov
insl
dec
push
push
fnsave
fmul
mov
in
inc
jp
and
jge
push
jns
pop
hlt
iret
add
dec
mov
mov
test
dec
icebp
scas
leave
xchg
icebp
push
add
sti
shll
jg
hlt
ret
cmc
loopne
imul
adc
enter
add
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
mov
sbb
sahf
adc
sbb
gs
push
outsb
cltd
or
dec
dec
xchg
rorb
push
add
add
jo
sub
dec
push
ds
es
clc
jb
mov
push
orb
icebp
adc
cmp
sub
mov
out
sbb
cmp
lds
push
adc
sbb
xlat
pop
jge
loopne
loop
je
and
pop
push
pusha
sub
and
mov
pop
add
lods
pop
pop
jo
int
push
sub
inc
inc
imul
push
jno
adc
push
add
mov
enter
ds
sbb
push
in
jle
enter
das
pop
fnstcw
jle
les
jno
sbb
loop
cmp
jb
in
xchg
enter
cs
js
testl
lret
in
cltd
ja
lret
cli
cld
daa
pop
add
test
mov
xor
inc
xchg
jns
and
and
cli
cltd
repz
and
inc
pop
mov
in
inc
cmpsb
pop
mov
fsubp
imul
push
adc
push
lahf
adc
xchg
mov
fistpl
mov
jo
lret
fildl
mov
int3
add
jno
repz
or
out
jb
test
sbb
and
dec
mov
popl
js
lcall
xchg
push
dec
push
popl
loope
jns
addr16
lahf
movsl
orl
repz
rol
pop
out
outsb
fimuls
loop
cmp
inc
pop
sub
imul
nop
pop
mov
mov
add
mov
mov
loope
push
cmp
or
mov
ret
xlat
mov
in
test
test
dec
mov
scas
stos
fsub
xchg
popl
mov
or
cwtl
add
mov
dec
pop
pusha
loop
mov
jno
mulb
mov
xor
shlb
push
je
jbe
notl
or
hlt
shlb
inc
into
cltd
lret
cli
mov
or
imul
mov
xlat
pop
jge
sub
push
sub
and
pop
inc
xor
inc
xchg
lret
popa
out
int
daa
add
mov
dec
aam
lret
dec
rcrb
sbb
scas
jnp
jge
dec
cwtl
sbb
fs
insl
stc
jo
sbb
xor
xor
cmp
inc
and
hlt
push
dec
movsb
jbe
push
inc
sti
js
mov
fldenv
jp
sbb
push
fnstsw
jle
movsb
cmp
movsl
or
and
push
adcl
test
cwtl
push
sarl
pop
int3
aaa
add
dec
inc
cmp
add
movsl
xor
das
and
jmp
dec
push
mov
xchg
fstpl
add
mov
ljmp
jg
ds
sub
outsl
mov
ret
cltd
outsl
or
rcrl
jae
outsl
xor
ds
mov
cmpsl
xor
mov
jns
arpl
cmp
adc
aaa
or
cwtl
inc
push
rorl
mov
stos
and
les
jecxz
add
push
rclb
clc
fwait
xor
cltd
orb
add
and
sub
lods
fcompl
out
je
dec
pop
call
inc
leave
xor
ficompl
jae
xlat
dec
nop
sbb
sub
and
scas
cmp
dec
stc
aaa
ja
inc
mov
xchg
filds
xor
lcall
xchg
mov
adc
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
test
mov
sahf
adc
sbb
stos
jae
adc
fisttpll
lds
xchg
xchg
ss
jo
sbb
push
cmp
mov
xchg
or
movsb
and
dec
sub
sub
pop
push
popa
ffreep
add
jge
jb
cwtl
cmp
mov
or
mov
mov
lret
cmpb
test
popa
fwait
sub
jb
data16
mov
es
pop
mov
loopne
loope
lea
push
popf
jne
mov
pusha
out
out
repnz
sbb
dec
js
xchg
add
sarl
xchg
insl
mov
or
push
inc
repnz
pop
jb
mov
fldl
sahf
movsb
push
jmp
icebp
inc
jbe
sarl
mov
adc
mov
push
xchg
cs
cmp
inc
inc
and
inc
adc
fwait
dec
test
scas
mov
inc
clc
cmp
lods
outsb
push
add
push
sbb
aam
orl
cmc
mov
add
xor
cmp
xor
push
or
jnp
mov
inc
pop
nop
sub
push
or
lock
xchg
ss
movntq
dec
mov
push
out
std
push
dec
mov
inc
or
cwtl
out
arpl
jmp
cmpsl
inc
lcall
jae
inc
sub
ss
bound
leave
aad
gs
imul
scas
cmp
ret
adc
pop
mov
ret
inc
pop
movzwl
jl
cmp
push
or
inc
pusha
cmp
mov
psubb
lock
xor
xchg
ljmp
aas
adc
std
adc
xlat
stc
pop
jle
or
or
subb
adc
mov
push
add
mov
lea
shlb
iret
clc
push
adc
fwait
rorb
out
cld
xlat
mov
daa
xchg
xor
cmpl
cmpsl
pop
push
cmp
inc
mov
ret
cwtl
push
push
add
push
fidivrs
jmp
nop
pop
out
incl
xor
sbb
into
or
inc
fbld
push
sarl
popf
divl
mov
mov
clc
outsb
mov
fwait
sbb
pop
cmpsl
mov
dec
adc
test
push
mov
std
fimull
adc
mov
daa
pop
lcall
mov
loopne
leave
inc
xchg
push
in
mov
mov
or
loopne
cwtl
push
fisubs
pusha
mov
inc
and
jo
add
rolb
shl
test
mov
ds
jecxz
lds
sbb
sti
and
jmp
out
jne
dec
and
je
and
pop
lret
insb
push
or
xchg
push
imul
outsl
sub
mov
push
loopne
lods
xchg
les
jnp
jo
and
sti
bound
dec
jo
cli
daa
xor
cmp
mov
ljmp
mov
mov
add
imul
andl
js
xchg
mov
xchg
mov
les
test
mov
stos
cmp
dec
jg
mov
or
dec
lods
xchg
test
dec
sbb
ret
scas
pushf
and
pop
incl
hlt
adc
xchg
pop
scas
cmp
mov
fmuls
sahf
fs
ficoms
adc
cmpb
mov
fisubrl
flds
add
repnz
jmp
imul
pushf
pop
jle
fstpt
jne
sbb
or
stc
loope
call
xlat
inc
in
push
xlat
mov
lds
js
lahf
lret
xchg
cs
mov
pop
out
inc
repnz
aas
dec
loop
mov
ljmp
lods
adc
mov
lods
mov
lcall
mov
adc
loope
push
dec
outsl
cli
sahf
inc
pop
fcmove
dec
jge
xchg
ficoms
dec
mov
cld
dec
cmpsl
mov
arpl
mov
or
mov
pop
fnstsw
sub
lea
in
add
xchg
aas
push
ficomps
mov
enter
dec
mov
dec
out
push
andb
jbe
push
div
sbb
jle
xor
outsb
jbe
sbb
scas
sub
jle
sub
jl
daa
inc
jbe
jle
into
fdivrs
push
mov
pushf
aad
push
ret
sbb
pop
call
adc
icebp
and
bound
sub
mov
loopne
push
cli
mov
mov
mov
jns
data16
bound
mov
test
inc
stos
loop
addr16
cmp
icebp
nop
dec
jbe
mov
ss
stos
add
je
inc
mov
or
in
and
pop
aad
out
xchg
mov
xor
pop
or
ret
pop
cmc
inc
dec
cmpsl
jg
sbb
mov
inc
rcl
mov
aam
xor
sbb
xchg
inc
out
insl
cmp
or
inc
fs
push
adc
adc
jmp
adc
cld
jle
push
rcr
mov
mov
xchg
out
jne
pop
jne
std
and
dec
add
in
mov
arpl
movsb
es
jae
sub
mov
loopne
pop
test
cltd
test
lds
pop
jg
inc
adc
fadd
imull
adc
f2xm1
mov
dec
insl
dec
subl
sti
mov
push
xchg
loopne
insl
testl
aad
in
lods
fabs
or
push
test
pusha
and
movsb
ret
jno
shrl
push
mov
aam
and
mov
loope
mov
xchg
sbb
mov
or
push
repz
or
clc
repz
inc
push
arpl
xchg
sbb
imul
mov
ss
add
scas
pop
sbb
cltd
push
shl
das
add
inc
movsl
loope
and
xchg
insb
movsb
aad
fistpl
sti
add
sbb
stos
adc
mov
inc
lret
xchg
cmp
jmp
cwtl
popf
jl
shrl
loop
mov
add
mov
scas
inc
loop
add
xchg
push
sahf
dec
fistl
cs
mov
testl
std
pop
mov
cmp
xchg
sbbl
mov
mov
sbb
loope
jge
mov
sub
mov
icebp
mov
leave
popa
adc
inc
sbb
add
lahf
dec
mov
dec
or
add
jb
mov
outsb
jle
arpl
movsl
pop
shlb
test
xchg
scas
movsl
js
dec
cmp
adc
adc
fsubs
enter
ficoms
sub
out
mov
push
xchg
decb
add
mov
adc
cmp
cmpsl
cmp
xor
cmpl
sub
dec
mov
cmp
or
call
push
insl
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
jle
outsl
sbb
sahf
adc
sbb
jmp
mov
push
mov
sub
pop
repz
je
pop
add
push
inc
mov
or
cmp
shlb
sub
dec
std
mov
mov
ss
sahf
out
jnp
dec
lea
int3
in
in
and
cmp
cmpsl
aaa
mov
iret
jno
loop
sbb
jb
ds
mov
jo
push
jno
inc
push
sub
cmp
ss
lock
test
cmp
test
xchg
jecxz
out
popf
out
mov
test
adc
jns
lret
mov
xchg
fnstenv
fsubrs
fs
popf
rcr
mov
sbbl
cmp
sbb
rcrl
fcomps
repz
inc
sub
sarl
jae
aaa
test
jg
ljmp
testl
adc
inc
inc
add
mov
mov
inc
aaa
test
jbe
repnz
xchg
fsubs
lea
sbb
pop
imul
out
cmp
cmp
mov
stc
dec
adc
xchg
mov
dec
jge
insl
andb
add
ss
push
sbbl
lahf
inc
into
stos
mov
sub
xlat
xor
inc
lret
xchg
mov
movb
mov
movsl
ficoms
or
mov
sti
scas
ss
and
jbe
xor
insb
rorl
mov
jmp
cmc
cmc
cltd
add
popf
pop
shl
mov
dec
push
lock
loope
clc
aam
mov
inc
sub
jmp
fstpt
lea
push
sti
mov
or
test
jmp
sahf
adc
aad
mov
ss
push
stos
stc
inc
xchg
dec
icebp
pop
rol
popf
push
jl
sbb
mov
jmp
roll
stos
pop
movsb
fwait
xlat
dec
dec
arpl
xchg
scas
add
xchg
nop
into
xor
pop
loop
mov
inc
push
push
mov
adc
sub
iret
cmp
push
test
mov
xlat
adc
aaa
push
fwait
sub
add
add
fwait
mov
jno
push
pop
push
add
shlb
lock
mov
sbb
dec
jae
sti
jno
int3
adc
mov
mov
sub
dec
lds
or
iret
sub
push
jno
dec
shll
mov
test
ret
call
xchg
cwtl
fnstenv
push
js
mov
es
or
xlat
mov
mov
ljmp
cmp
push
mov
cmpsb
or
out
push
sub
or
pusha
aaa
outsl
push
and
pop
pop
lock
pop
jne
ja
mov
adc
sub
or
xchg
and
popf
dec
and
sti
loop
jmp
fcomi
sahf
and
push
push
ret
sub
mov
push
push
pop
pop
push
inc
stc
sarb
pop
cmp
inc
movsl
sub
push
ja
clc
in
mov
shr
adc
inc
inc
adc
gs
stos
ret
push
dec
push
lahf
loopne
cmpsb
repnz
testb
add
pop
pop
fstp
imul
inc
in
fidivl
gs
add
ja
jb
and
mov
scas
pushf
cmpsl
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
fnstsw
sbb
sahf
adc
sbb
and
stc
out
add
fsubs
xchg
jge
xor
sbb
mov
js
and
rorb
sbb
dec
in
notb
and
or
sahf
and
inc
cmpsb
mov
test
imul
repnz
sub
xor
and
movsb
sub
cld
in
arpl
xchg
int3
xor
sub
dec
outsl
lock
ret
call
mov
call
sahf
hlt
int
movsb
jecxz
push
push
mov
je
in
dec
push
pop
ret
dec
out
and
lea
enter
inc
jb
adc
and
test
cmpb
adc
inc
pop
xor
push
divl
aad
add
in
push
cltd
inc
mov
pop
inc
dec
shrb
cmc
cmp
pusha
mov
popa
adc
xchg
mov
lahf
scas
out
pop
push
iret
and
and
mov
mul
and
inc
push
movsb
daa
cwtl
loop
push
jne
mov
and
pop
add
xchg
inc
dec
ds
into
roll
mov
ds
scas
popf
scas
stc
jne
mov
test
in
in
push
stos
test
cwtl
jns
dec
dec
loopne
jp
cmp
out
aaa
in
je
dec
dec
cwtl
lea
xlat
xchg
loop
pushf
ror
jo
sbb
jb
pop
ja
xor
sbb
xchg
out
sahf
push
cmc
in
insb
and
sar
cmp
push
push
xchg
rcll
loop
notl
xchg
insl
std
test
dec
xor
testl
push
in
add
or
push
outsb
andb
out
sahf
popf
sbb
sbb
mov
decb
nop
stc
cwtl
dec
shll
or
ds
jmp
push
pop
fbstp
shrb
movsb
xchg
adc
test
aas
pop
dec
pushf
xor
sbb
test
popw
mov
jle
sbb
inc
cmpsl
arpl
sub
or
dec
pop
cmp
push
mov
mov
sbb
xlat
xor
shrb
mov
imul
sbb
hlt
push
out
leave
nop
ffree
jno
call
and
mov
jge
mov
add
xchg
or
int
lock
sahf
lock
dec
mov
popf
test
mov
test
mov
mov
call
in
push
adcb
dec
jge
sti
xor
shrl
inc
cmpsl
add
jne
mov
add
push
test
ret
test
in
mov
mov
in
loope
cmpsb
fst
jnp
xor
cmpb
ljmp
and
test
push
mov
push
mov
xchg
ss
jge
test
rcrl
mov
out
je
and
mov
inc
fwait
lcall
outsb
ja
jnp
test
rcrb
cmc
rcpps
outsb
aad
out
and
test
ret
rorb
adc
mov
sbb
jbe
or
sbb
sbb
in
cli
pop
sbb
ret
mov
and
mov
pop
sar
jmp
stos
cmp
in
in
ret
daa
or
int3
imul
imul
in
in
xchg
shrb
pop
jmp
cmp
fisubl
lods
inc
cmp
xlat
inc
call
xchg
xor
jge
pop
lcall
mov
mov
xor
cmpl
shrl
sbb
add
add
movsb
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
inc
sub
movsb
add
loope
push
pop
bound
push
xor
mov
int3
in
cmp
push
cli
jmp
xchg
fmul
mov
push
dec
xor
push
jbe
push
jge
push
jae
mov
sahf
icebp
scas
adc
sub
cmp
fiadds
jns
scas
mov
adc
jl
aaa
sub
cltd
mov
pushf
jne
mov
dec
and
test
rcl
test
mov
mov
loopne
mov
push
outsl
xor
gs
cmp
sbb
ficompl
loop
js
pop
jmp
aam
cmc
xchg
adc
dec
insb
jb
andb
adc
aam
mov
push
jmp
fwait
push
es
push
aas
loope
sbb
js
fucomip
mov
mov
ficoml
les
mov
xchg
outsl
or
sub
scas
in
pop
jl
sbb
iret
inc
xchg
sbb
sbb
cwtl
ljmp
mov
cmp
test
in
ss
xor
shll
mov
cmp
leave
push
orb
cmp
inc
fidivl
fwait
stc
xchg
jg
xchg
repnz
daa
xchg
js
push
dec
and
sahf
sarb
or
aaa
mov
or
dec
pop
xchg
out
lods
shrb
mov
into
adc
rol
arpl
and
cs
mov
aad
sub
icebp
mov
cmp
push
rorb
ret
js
mov
test
int3
cltd
or
ja
pop
inc
cmpxchg
xor
rcrl
mov
xor
jecxz
fidivrs
and
inc
cld
jmp
sub
or
pop
push
test
sahf
dec
sbbb
sarl
daa
push
jne
movsb
cmp
ret
mov
insb
dec
cld
mov
leave
insl
push
outsl
sbb
pop
cmp
push
lods
push
mov
aad
push
and
dec
push
fstpt
lds
movsb
stos
xor
inc
mov
gs
mov
xchg
push
inc
dec
or
sub
lahf
push
jge
scas
inc
mov
sub
bound
scas
xchg
out
addb
push
adc
sub
outsl
mov
dec
add
jb
jno
test
repz
sub
mov
je
iret
pop
out
dec
xorl
les
ret
ret
mov
jle
mov
mov
in
lods
sarl
cld
and
xchg
aad
std
fisttpl
mov
cli
lea
cmpsb
fsubs
pop
ljmp
add
mov
aaa
sbb
negl
mov
daa
lcall
cltd
add
gs
andb
sbb
sub
sbb
mov
mov
rcrb
shll
sahf
loop
jbe
xchg
cmp
and
push
or
in
subl
pusha
dec
xor
jno
lds
sub
fs
mov
int
jg
nop
cs
repnz
filds
push
xor
jge
icebp
add
xor
fistpll
cmpsb
jl
addb
sti
dec
call
mov
out
sbb
xchg
loopne
hlt
ret
mov
aaa
sub
mov
sbb
cmpsb
dec
movb
mull
push
test
pushf
daa
inc
stos
js
aaa
mull
push
mov
jmp
pop
jno
mov
xchg
enter
mov
sbb
sahf
adc
sbb
add
in
xor
xchg
pop
dec
cmp
xchg
jno
mov
rcl
mov
pop
xchg
aaa
jmp
or
push
in
xorb
fisttpl
push
pop
ss
pushf
sbb
mov
icebp
jae
jmp
or
adc
dec
mov
mov
stos
fldlg2
jp
add
movsl
cmp
mov
lahf
jle
cmp
lret
pop
stc
out
insl
roll
arpl
mov
mov
mov
xor
push
cmp
lods
fstpt
mov
lret
and
adc
clc
sub
lret
leave
lret
sub
aam
jns
std
fs
fnsave
out
push
jns
sub
outsl
repz
mov
sbb
jbe
enter
fiaddl
cmpsb
rclb
imul
int
fwait
xchg
mov
pushf
mov
lods
lcall
push
lods
xor
dec
add
adc
out
mov
addb
adc
mov
jecxz
test
les
stos
fldt
enter
xor
ds
int
mov
in
dec
ret
add
lods
pop
fyl2xp1
sbb
pop
cwtl
int3
bound
subb
rolb
dec
push
lock
fstpl
pop
inc
stc
int
inc
aad
fs
cld
pushf
leave
pop
mov
dec
cmp
ljmp
out
push
hlt
inc
xor
std
mov
adc
imul
in
cmp
stc
sub
push
sub
mov
mov
ljmp
xor
pusha
cld
push
bswap
push
fstps
push
xor
sbb
and
std
outsl
loope
fists
mov
in
sbb
pop
ror
scas
outsl
imul
sbb
pop
sbb
jmp
jns
sbb
xchg
pop
mov
pop
jg
ss
jecxz
andb
data16
xor
push
dec
jl
pop
jle
add
lds
popf
mov
dec
aam
xor
mov
mov
inc
andl
mov
mov
mov
inc
out
andl
int3
cmp
mov
or
cli
stos
adc
mov
in
scas
addb
in
xchg
icebp
popl
in
or
outsb
push
pop
fisubrl
jp
inc
cmpsb
push
mov
mov
jnp
mov
movsb
or
ljmp
cmp
lds
pop
adc
arpl
fwait
jbe
repnz
in
int3
push
ret
daa
dec
cmp
dec
pop
cmpsb
out
sbb
iret
fs
xchg
jle
fmuls
shlb
mov
test
mov
ficomps
in
pop
sbb
xor
jno
mov
mov
in
cmp
aaa
mov
sub
call
stc
push
cmp
pop
jae
sub
sbb
pop
push
cwtl
xor
adc
cmpsl
clc
jl
pop
in
int3
call
sbb
pop
je
scas
hlt
aam
lret
pop
je
mov
push
jmp
dec
into
jp
arpl
shrl
das
aas
mov
inc
xchg
add
sarb
loop
mov
aaa
incb
cltd
sarb
fldcw
ffree
outsb
push
sti
mov
mov
mov
out
jnp
pop
pop
stos
xchg
mov
jnp
push
cmp
or
jp
fiaddl
and
sub
clc
push
jp
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
andl
sbb
loopne
adc
mov
stc
dec
hlt
ljmp
or
popf
out
out
inc
test
jmp
xchg
pop
xlat
lea
loop
push
popf
xchg
bound
xor
pop
sub
jecxz
add
clc
mov
dec
imul
lahf
mov
dec
aad
divb
adc
loop
xor
popa
adc
xchg
pop
jmp
sahf
aaa
ffreep
rolb
or
mov
pop
lods
sbb
inc
mov
cs
push
mov
and
orl
cs
inc
scas
add
cmp
shr
andb
lods
movsl
or
fs
jns
sbb
shrb
xor
cmpsl
out
scas
ss
ret
push
add
xor
outsb
mov
test
mov
push
lods
fisubrs
push
sbb
lock
iret
xor
fisttpl
mov
mov
push
clc
mov
sbb
inc
in
rcll
jge
pop
mov
cmp
daa
stos
cmp
or
cmp
pop
pop
in
gs
adc
ret
aad
cli
push
push
push
pop
xchg
rclb
sbb
mov
jnp
pop
mov
pushl
scas
xchg
ret
or
jnp
or
jns
sub
inc
jns
sbbl
mov
push
and
push
mov
hlt
in
call
cmp
xor
lret
sub
and
out
ret
jge
out
repnz
jnp
repz
cmp
arpl
mov
mov
outsb
cld
pop
enter
lods
addr16
pushf
inc
ljmp
jnp
fiaddl
mov
mov
and
pop
dec
fs
lods
pop
lock
sbb
into
sub
fwait
xchg
icebp
out
popa
leave
and
int
or
inc
sbbl
push
mov
repz
dec
xchg
fsubr
push
outsb
and
cmpsl
testl
sbb
mov
jg
out
insb
xchg
sbb
xchg
push
cwtl
adc
loopne
mov
cmp
mov
mov
fidivrl
lret
add
mov
stos
test
adc
je
mov
mov
int
rorl
stos
push
lea
mov
sarb
mov
inc
jle
addl
sbb
mov
jb
imul
push
insb
inc
repz
lods
inc
mov
sti
pusha
repz
scas
adc
in
jg
xchg
sub
cmp
ds
and
mov
arpl
sbb
xchg
xchg
push
xor
jmp
jb
std
ds
cwtl
ja
js
cltd
jbe
divb
lahf
mov
xor
ret
scas
aam
jae
pushf
push
test
outsb
mov
in
sbb
in
loope
fs
inc
mov
push
or
mov
adc
cmp
cmovne
popa
mov
es
inc
jge
mov
xor
add
sbb
pusha
xchg
cmc
bound
pop
in
push
jl
cmp
sbb
pop
call
sbb
fcoml
repnz
jbe
fstl
lcall
insb
popf
xchg
mov
mov
rcrl
xchg
mov
repz
pop
in
sbb
dec
cmp
jbe
and
push
mov
fcoms
push
and
outsl
adc
inc
js
mov
sbb
jns
inc
neg
ds
mov
jns
dec
jle
jmp
lret
enter
xor
shld
xor
mov
jmp
loop
es
mov
mov
dec
sbb
sahf
adc
sbb
mov
sahf
pop
ljmp
pop
sbb
aam
adc
ficoms
xchg
pop
test
xor
out
mov
aaa
decl
sahf
and
jmp
jae
sbb
stos
aas
imul
push
mov
xor
mov
pushf
es
cmp
cmp
andl
inc
jmp
addb
or
gs
dec
push
ret
dec
jb
orl
gs
jo
xchg
push
pusha
loop
pop
pop
push
lea
dec
loop
cmp
into
mov
les
sbb
sub
pop
cmp
out
adc
inc
xor
test
mov
ficoms
sarl
jnp
scas
imul
xchg
push
sbb
mov
add
arpl
sub
mov
arpl
inc
mov
or
roll
cltd
adc
mov
inc
cmp
xchg
dec
out
sub
movb
dec
dec
mov
imul
pusha
jmp
sbb
mov
cmp
loope
xchg
xor
lret
fsts
insb
lret
popf
push
test
lods
imul
add
add
in
aaa
shl
fimull
hlt
xlat
dec
mov
xchg
mov
pusha
lcall
cmpsl
mov
mov
mov
pop
fdivrl
sbbl
mov
push
fiaddl
dec
sbb
js
nop
mov
inc
movb
jno
insb
ret
je
adc
aad
push
repz
mov
movsl
mov
ret
push
jp
mov
xchg
pop
addr16
cmp
cmp
sub
xchg
leave
ljmp
movsb
flds
pop
rclb
filds
lock
jge
pop
into
jne
inc
enter
jle
iret
jg
xor
stc
mov
dec
pminsw
xchg
pop
cmp
nop
adc
sti
arpl
push
jl
aam
rcll
or
mov
mov
jge
int3
mov
xchg
push
in
lcall
aas
pop
xchg
sbb
fstl
nop
cmpsb
cmc
mov
pop
inc
mov
in
sbb
icebp
loopne
jbe
pop
jno
or
imul
push
dec
dec
pop
pop
loop
in
js
loope
cmpsb
lea
mov
add
gs
in
stos
inc
imul
cmp
xchg
std
test
pop
js
and
loop
or
rorb
xchg
cmp
mov
mov
inc
shr
xchg
inc
inc
into
add
daa
scas
pop
xor
and
scas
int3
dec
lahf
sub
lret
das
jbe
rcl
adc
test
xor
in
or
repz
jo
inc
sahf
insb
imul
pop
or
adc
dec
jp
loopne
in
test
xor
movsl
add
sbb
loop
rcrb
ja
es
ficoms
jnp
sbb
pop
push
or
outsl
ja
popf
popf
jae
push
dec
jae
pusha
pop
lods
cmp
dec
xor
or
mov
push
arpl
pop
pop
sub
lcall
push
and
and
and
inc
mov
bound
repnz
xchg
les
push
and
or
and
stc
cmp
out
mov
iret
push
pop
jle
in
xchg
dec
shll
jno
pop
cmpsl
outsl
or
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
iret
cltd
mov
sahf
adc
sbb
sub
pushf
pop
cmp
cli
sahf
lds
sarl
fnstcw
in
mov
push
in
clc
mov
mov
sbbb
lods
push
inc
movsb
pop
and
xor
imulb
jo
and
or
mov
inc
xchg
es
cmp
mov
in
repz
jb
scas
add
out
lods
or
test
lcall
aad
pushf
lret
jmp
xor
mov
nop
mov
sbb
add
movsb
mov
mov
xchg
sub
rolb
scas
fsubr
mov
lds
xchg
adc
mov
pop
mov
pop
sub
sbb
adc
add
js
dec
test
mov
ljmp
mov
mov
nop
sub
lock
jbe
dec
jg
in
sbb
adc
js
mov
sub
das
jb
sbb
mov
daa
xor
cmpsb
push
pop
mov
and
push
mov
xor
mov
je
stos
sub
pop
aad
test
push
sub
test
push
and
cs
cmp
loope
cmpsl
mov
jo
xor
and
adc
stc
xchg
pop
in
lahf
dec
adcl
dec
cmp
cmpsl
inc
loop
adc
inc
and
sbb
mov
shlb
push
stos
adc
push
into
mov
pop
stos
incb
leave
lret
mov
arpl
mov
push
cmc
gs
js
push
xchg
gs
jmp
into
add
push
inc
add
aam
push
orb
sahf
or
jp
jne
xchg
xor
rorl
adc
xor
pop
and
add
jbe
add
inc
sbb
adc
dec
dec
je
pop
pop
ljmp
jns
cmpsl
lret
sub
pushf
ljmp
cmp
push
rcll
mov
pop
jno
sbb
adc
add
xor
mov
dec
cmp
js
mov
dec
cs
clc
cmpb
push
pop
mov
xchg
popl
mov
fcoml
dec
je
inc
mov
mov
jnp
daa
sbb
imul
jecxz
insb
push
adc
dec
cmp
sbb
int
pop
clc
push
lahf
xchg
cmp
cs
dec
test
loop
iret
jno
fwait
push
sub
jmp
adc
inc
bnd
jp
mov
add
dec
repnz
ss
inc
repnz
in
dec
add
je
dec
shl
mov
mov
lret
sub
mov
mov
addr16
pop
sub
mov
pop
xor
xlat
adc
and
sub
out
jmp
pop
cmpsl
stc
xor
sub
add
scas
xchg
dec
stos
lea
mov
jp
test
pop
enter
int3
in
insb
sti
sub
or
stc
aam
pop
cmp
mov
lret
mov
mov
push
xchg
add
or
inc
cmp
addr16
mov
pop
pusha
jb
mov
adc
jge
add
scas
inc
subl
dec
cmp
aam
stc
sti
pop
leave
or
loopne
imul
pop
int
sub
test
xchg
push
stos
dec
fdivs
rorb
ret
dec
and
adc
inc
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
jo
cmp
sbb
ja,pn
lds
movsl
push
andl
inc
inc
push
mov
add
mov
xor
push
in
inc
sbb
xchg
out
mov
jae
dec
out
ret
cmp
adc
push
aad
sub
popf
inc
movsl
out
or
mov
inc
lods
xor
jecxz
pop
and
mov
ffree
lcall
inc
fstl
sub
inc
iret
mov
call
into
mov
mov
in
sbb
push
rolb
out
cli
pop
and
inc
mov
es
stos
sub
mov
shrb
sbb
into
in
aas
cltd
xlat
jl
sbbb
pop
loop
pop
shrl
jo
xchg
push
pop
cmp
cmc
xchg
adc
ret
ljmp
fs
test
dec
mov
pusha
je
pop
fisttpl
dec
arpl
jl
or
xor
lret
mov
or
xlat
pop
and
js
xchg
fwait
sbb
pushw
mov
adc
add
loopne
in
jne
or
popa
jl
or
enter
inc
rolb
outsl
in
loop
sbb
and
sub
jg
add
fwait
or
shll
dec
outsl
or
hlt
loopne
xorl
jecxz
movsb
mov
aad
popl
jge
pop
cmpsl
mov
pop
jb
cmp
mov
mov
and
scas
mov
jns
out
pop
ret
int
das
in
insl
lcall
add
sub
pop
repz
sbb
pushf
es
jno
jecxz,pt
sbb
sub
mov
pop
mov
repz
jl
hlt
call
mov
fsts
cld
mov
sub
or
cmc
pop
fldt
lods
arpl
stos
pop
push
mov
add
imul
nop
sarb
dec
je
xchg
aam
and
mov
ret
pop
out
rcrb
lea
cli
cmc
mov
xor
out
and
xor
sub
lret
mov
push
hlt
sbb
xchg
inc
mov
add
jbe
cwtl
stos
sub
push
ljmp
or
jp
outsl
sbb
test
mov
jle
insb
rcrl
add
mov
shlb
pop
sbb
dec
orb
das
xor
lret
icebp
mov
stc
xor
in
mov
imul
fisubl
bts
inc
in
insl
loop
and
pop
mov
repz
mov
inc
jae
xchg
cmpsb
cmc
pop
push
addr16
add
push
cmp
push
std
int3
nop
jg
lahf
in
sti
aad
int3
in
fsubr
aam
inc
ret
pop
cmc
jle
mov
or
sub
push
xchg
fs
lds
scas
lods
or
divb
add
jae
xchg
cli
sub
mov
fisttpl
and
imul
daa
fmul
add
xor
sub
insl
mov
and
jmp
push
push
int3
aas
imul
imul
pop
jns
loope
dec
push
pusha
loope
jae
int
movsb
and
mov
dec
pop
imul
stc
inc
and
mov
icebp
imul
inc
push
popf
sub
xchg
cmp
cs
or
jns
push
out
mov
insb
and
xchg
daa
xor
cmp
dec
sbb
push
mov
cli
inc
xor
jge
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
xor
sbb
sahf
adc
sbb
and
lcall
movsl
icebp
daa
pop
pop
mov
add
jae
pop
pop
push
adc
push
test
xor
rol
stos
sub
cli
xor
push
leave
notl
mov
rolb
int
in
mov
loope
movsl
mov
loope
cld
dec
mov
data16
repz
sub
je
jge
jmp
mov
sbb
ret
jb
mov
popf
outsb
pop
divb
dec
test
add
mov
lret
inc
sub
and
jno
lock
std
in
lock
dec
pop
mov
inc
je
mov
push
xchg
pop
testb
inc
push
cs
ljmp
cmp
jnp
sub
mov
lret
sub
add
scas
shrl
inc
adc
xor
fsubrs
loope
mov
inc
popf
jmp
or
mov
ret
push
aam
and
lahf
gs
xor
addr16
cmp
fwait
hlt
cmp
ss
lods
rcrl
add
shrl
adc
flds
inc
xor
pop
ja
mov
out
inc
in
and
or
loope
xchg
aam
outsb
mov
inc
xor
pop
ljmp
or
jg
lret
lahf
popf
or
add
fistps
jo
ja
es
out
insl
call
sub
fwait
mov
mov
mov
ds
or
and
jmp
mov
jbe
loop
popa
roll
mov
adc
adcl
stos
adc
sub
sub
hlt
out
cwtl
xlat
lock
aad
dec
push
orb
dec
add
clc
or
push
loope
jbe
pop
pop
jne
and
cmp
sub
leave
dec
cli
dec
sub
push
mov
mov
cltd
adc
mov
push
sub
xor
sbb
mov
insl
int3
mov
add
scas
jecxz
popf
imul
inc
mov
push
mov
into
stos
add
int3
test
mov
mov
ss
repnz
fbld
repz
pop
ja
in
test
cmpsl
repz
adc
sub
popa
lret
jge
int
add
adc
push
dec
lods
xchg
mov
cmp
xchg
sbb
sub
jb
rol
popf
adc
and
xor
jle
mov
aad
gs
xchg
mov
dec
out
cmp
movsb
out
out
mov
dec
std
cmovs
dec
cwtl
es
push
insb
sub
dec
subl
mov
or
sbb
pushf
scas
push
test
hlt
es
mov
in
rcll
xor
imul
divl
push
lea
mov
adc
push
jae
sub
fdivrs
cs
and
inc
mov
clc
xor
mov
daa
test
shlb
add
lods
add
and
or
fdivr
mov
pop
bound
cmp
mov
or
jns
negb
icebp
in
repz
xor
pop
gs
fstpl
mov
mov
xor
scas
mov
clc
js
push
scas
push
mov
in
dec
aaa
sbb
pop
lods
inc
sbb
inc
imul
inc
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
mov
mov
sahf
adc
sbb
or
mov
pop
mov
push
xor
pop
pop
es
and
imul
out
daa
pop
pop
adc
inc
and
push
arpl
adc
dec
subl
sbb
dec
inc
outsb
mov
icebp
imul
popf
pusha
das
adc
ret
data16
int
ss
sbbb
and
fwait
and
dec
cmpsb
lock
push
out
in
inc
in
int
push
in
out
jne
int3
mov
adc
sub
inc
lahf
and
sbb
xlat
push
cltd
jno
imul
or
and
mov
lods
sti
mov
popa
add
gs
cltd
dec
rorb
lods
adc
mov
lret
mov
inc
mov
je
ljmp
ljmp
ljmp
mov
xor
sbb
dec
dec
push
sub
imul
jg
ret
fistl
push
arpl
xorb
andb
gs
pop
xorb
out
mov
mov
jge
shl
jne
push
je
popf
cmp
mov
in
mov
dec
or
mov
outsb
push
mov
mov
xorb
int3
xchg
cmp
push
push
pop
shlb
push
cli
mov
popa
insl
lods
mov
add
popa
mov
test
inc
fs
mov
mov
or
cmpsl
mov
je
cs
add
addb
in
iret
aaa
rcrl
inc
enter
mov
cmp
add
sub
dec
sbb
jecxz
add
out
outsb
ficomps
stc
orb
sbb
sbb
or
mov
loope
sub
addr16
dec
xchg
fmull
fistpl
iret
adc
inc
xor
push
mov
push
roll
dec
sbb
pop
loopne
push
test
mov
cltd
js
scas
mov
int3
scas
jne
js
data16
or
ret
dec
sbb
sbb
inc
pop
imul
imul
xor
sbb
jae
lods
mov
repz
imul
push
pop
outsb
mov
loopne
inc
mov
adcl
inc
ja
pop
pop
mov
das
cmp
and
jmp
scas
ljmp
rorb
add
dec
sbb
inc
aaa
out
divb
or
fs
cmp
sub
pop
mov
jl
lock
cmp
add
push
int3
xor
jle
lods
outsl
arpl
sysenter
fidivrl
dec
xchg
cli
xlat
fwait
js
and
lret
mov
or
stc
lret
add
or
insb
jne
nop
cld
jo
ss
pop
in
shll
inc
adc
rcl
ljmp
push
dec
ret
cmp
inc
cwtl
jmp
sbb
fildll
inc
sbb
push
pop
outsl
in
mov
xor
adc
pop
mov
add
scas
add
in
add
in
push
in
jns
jb
mov
mov
movsb
push
lods
sbb
les
pop
cmp
jno
mov
fcompl
nop
and
xchg
repz
push
std
cmp
cltd
mov
sub
pushf
scas
dec
mov
sbb
push
mov
cmpsb
push
leave
dec
or
rcrl
or
inc
lods
xor
mov
daa
leave
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
push
sbb
outsb
adc
sbb
loope,pt
jne
js
mov
dec
jmp
ret
ja
icebp
fnstenv
test
cmp
lods
or
aad
inc
movsb
lds
inc
xor
pop
addr16
push
jo
lea
dec
mov
and
inc
in
scas
fs
add
mov
dec
flds
push
stos
lcall
push
dec
test
in
out
lea
dec
and
mov
lods
jb
push
pop
gs
pop
outsl
adc
sbb
aas
mov
inc
std
push
scas
pop
xor
add
xchg
into
xor
mov
adc
mov
mov
ficomps
imull
movsl
or
and
and
push
or
scas
jl
lret
outsb
leave
bound
stos
mov
fidivrl
rcrl
cmp
mov
jae
pusha
jp
ljmp
in
stc
mov
mov
mov
pusha
outsl
insl
aaa
out
orb
std
inc
les
mov
push
cmp
subb
xchg
dec
sub
jmp
dec
mov
cld
fmulp
pushf
out
mov
ds
inc
sbb
pusha
jae
imul
out
mov
das
mov
inc
pusha
jae
imul
insb
sbb
aaa
lcall
jbe
or
xchg
call
shrb
xor
mov
inc
mov
hlt
fdivrl
scas
pushf
mov
push
stos
add
jle
lods
push
sti
cli
xor
imul
cmp
iret
in
popa
daa
nop
movsl
in
mov
push
jno
mov
lods
out
imul
cmpsl
cmpl
cli
add
ja
outsl
call
dec
out
mov
or
scas
and
enter
loope
mull
std
inc
xchg
mov
loope
not
sub
in
repz
in
add
and
movsb
clc
call
in
sbb
repnz
enter
sub
pop
popa
clc
mov
xchg
jmp
dec
ret
jle
dec
call
inc
adc
aaa
inc
cmp
orb
mov
aam
fndisi(8087
cmc
push
repnz
lahf
and
xchg
or
subl
ds
adc
das
inc
mov
pop
dec
sbb
add
pop
in
adc
mov
xchg
xor
shl
test
ret
mov
mov
in
movsb
scas
jmp
or
cmpsb
mov
gs
lock
adc
dec
iret
pop
lods
or
or
jecxz
jge
mov
testl
jno
das
dec
inc
lea
scas
and
dec
cmpb
push
pop
pop
aaa
add
leave
sub
push
jno
adc
mov
sgdtl
add
xchg
xchg
outsb
mov
jle
scas
ja
lcall
and
int3
xchg
jecxz
push
push
fxtract
or
fwait
pop
pop
jl
fs
pop
stos
xor
arpl
sbbl
or
mov
push
outsb
idivb
lds
jmp
jmp
and
jno
cwtl
adc
push
mov
inc
cld
pop
cmpsb
mov
inc
sbb
mov
arpl
push
pop
mov
push
mov
imul
lret
test
and
xor
dec
mov
fimuls
addr16
dec
and
test
mov
cmpsl
test
das
imulb
pop
inc
jbe
negb
clc
xor
or
sti
add
add
in
ljmp
xchg
inc
movl
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
push
mov
sbb
outsb
adc
sbb
pop
mov
pop
or
fimuls
adc
lcall
mov
jne
pop
stos
rcll
fnstcw
and
out
test
adc
and
push
stos
ds
cmpsb
mov
mov
jne
and
aaa
sub
push
nop
cltd
inc
fisttpl
scas
mov
sbb
cmp
sub
jmp
adc
repnz
pop
jns
sub
push
std
xor
fidivl
je
cwtl
pop
movsb
ja
sar
bound
mov
adc
in
loope
pop
shll
ror
loop
sarl
adc
pop
cmp
sbb
inc
pushf
push
pop
or
cmpsb
repnz
dec
scas
adc
xchg
cmp
rclb
jecxz
jns
push
hlt
adc
nop
jae
xchg
scas
sbb
inc
mov
dec
and
int
mov
aas
int3
mov
xchg
lret
add
add
cmp
cmp
sub
add
xor
cld
xor
les
cmp
call
psubsw
ret
push
sub
fldcw
lods
mov
imulb
std
fadd
js
xchg
adc
cli
shrb
sbb
and
aam
jbe
jns
xchg
jne
and
stos
mov
pop
sbbl
shll
wbinvd
leave
mov
pop
xchg
cmp
call
lods
fucomi
cmp
inc
int
out
call
mov
xchg
adc
mov
pop
add
jg
jmp
jge
aas
into
sbbb
stos
and
adc
in
es
xchg
sub
adc
mov
xlat
push
sub
add
or
daa
lret
jo,pt
sub
stos
jae
push
dec
add
test
and
add
loopne
sub
sbb
or
std
lods
mov
adc
je
test
jns
jno,pn
adc
stc
xor
arpl
sbb
inc
cli
stos
test
pop
outsb
rorl
pop
fsub
icebp
mov
dec
fnstsw
and
repnz
jp
push
lods
mov
xchg
jno
fcoms
push
mov
call
mov
add
mov
daa
or
push
movsl
arpl
std
add
pop
and
icebp
adc
jbe
pop
jno
mov
ss
and
push
les
and
add
jge
xchg
dec
fmuls
sbb
mov
push
arpl
cmp
cmp
lret
aaa
in
stc
jns
aam
mov
jl
push
jno
jbe
popa
js
dec
leave
leave
in
mov
cmpsb
and
pop
mov
fwait
push
lods
in
mov
add
and
sub
in
mov
xchg
sub
xor
xchg
jmp
mov
mov
lret
scas
push
sbbb
rcr
add
and
mov
mov
mulb
sub
mov
pop
stos
jbe
mov
cs
in
xchg
fidivs
rolb
pop
fildl
inc
insb
dec
in
enter
sbb
or
dec
cmc
les
out
ret
add
jae
mov
and
outsb
sahf
js
jecxz
add
xor
rcrl
andb
or
dec
ficompl
in
mov
push
and
mov
movsb
mov
cmp
stos
lret
mov
xchg
add
daa
jbe
and
inc
lods
mov
filds
dec
cmp
cmpsb
arpl
adc
sbb
push
pop
mov
add
jo
xchg
jp
jne
cmp
cmp
push
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
enter
adc
sbb
sbb
popfw
and
mov
pop
lret
xchg
push
pop
mov
cmp
mov
jne
aas
das
das
clc
mov
jp
pop
rorl
or
jae
xor
test
mov
xor
in
shll
push
xchg
in
and
jo
int3
sbb
xlat
dec
mov
add
pushf
js
xchg
data16
xor
xor
out
daa
jmp
gs
outsb
adc
arpl
dec
aas
push
xchg
adc
xchg
xor
jle
xchg
sbb
sub
das
jge
test
dec
mov
xchg
mov
insb
and
sbb
dec
in
shll
jne
adc
test
loopne
push
loopne
in
lcall
bound
push
sbb
insl
std
cmp
xlat
push
xor
jp
xlat
gs
ret
imul
test
mov
jg
out
call
movsb
sub
mov
cmp
inc
cmp
test
sub
cmp
xchg
ret
ljmp
inc
rcll
mov
not
outsl
xor
or
and
ret
mov
push
jne
cwtl
pop
xlat
mov
cmc
xor
nop
cmp
in
pop
in
jecxz
sub
mov
mov
or
dec
xchg
or
insl
ret
mov
mov
push
pop
pop
jp
je
aam
popf
add
inc
subl
mov
xor
aad
xchg
sub
mov
jl
mov
xchg
sarl
mov
testb
popf
mov
pop
push
mov
pop
lods
ret
dec
sbb
xchg
std
mov
call
fiadds
imul
mov
arpl
sbbl
cmp
jbe
lods
lock
sub
popa
or
insl
inc
in
out
int3
es
movsb
mov
inc
sbb
cmp
adcb
cwtl
or
shlb
mov
jbe
stos
push
xor
fcom
cli
emms
sub
push
lcall
inc
rcl
sbb
ljmp
ret
hlt
sub
push
and
inc
pop
andl
or
rorb
sbb
popa
inc
imul
fwait
stos
mov
dec
loope
out
pop
out
jnp
movsl
pop
sbb
jge
dec
mov
mov
inc
jp
adc
push
sub
sub
pop
js
lea
sub
daa
cmpsb
sbb
sub
ja
sub
es
cmp
adc
mov
bound
dec
out
outsl
jnp
stc
negl
jno
cmp
hlt
mov
dec
fs
ljmp
addb
or
cli
push
xor
adc
imul
dec
popf
xchg
and
addr16
xor
xchg
flds
out
stc
loopne
insl
dec
adc
jecxz
je
dec
push
push
mov
sti
pop
cmp
hlt
mov
ret
cmp
and
std
cmp
daa
rorl
dec
or
pop
repz
out
mov
mov
mov
leave
mov
mov
lahf
andl
push
xor
mov
pushf
je
icebp
pop
cmp
mov
inc
stos
cmc
ja
lcall
xchg
arpl
movsb
loop
inc
fidivs
fcmove
adc
pop
lret
nop
push
push
sbb
test
hlt
inc
sbb
or
mov
and
ret
sub
add
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
stos
mov
stos
pusha
or
sbb
cmp
daa
pushf
mov
outsl
or
pop
inc
fdivs
repnz
push
std
jno
or
push
jae
popf
mov
sub
loope
push
lock
xlat
outsl
pop
jp
xchg
xor
mov
loopne
xor
popf
in
sub
jp
cltd
inc
call
pop
pop
mov
pop
xchg
mov
insb
sub
or
push
arpl
xor
or
call
xor
mov
out
mov
daa
inc
xchg
xor
rorb
dec
jmp
fsubl
jecxz
pop
cmp
dec
fisubrl
cs
pop
and
dec
fildll
mov
sbb
out
aad
popf
rcrb
mov
cmpb
pop
adcb
scas
jae
into
sbb
sbb
lods
xor
cmp
cmpsb
clc
pop
sbb
sbb
sbb
dec
xchg
cmpsl
outsb
add
shrb
pop
rorb
fldt
adc
shll
sub
enter
push
test
daa
sbb
mov
dec
mov
dec
movsb
das
hlt
popf
or
ss
push
arpl
fs
mov
pushf
in
xor
xchg
jo
fwait
les
fnstcw
clc
stos
mov
test
xor
mov
xchg
inc
mov
sti
fmulp
bound
mov
xor
movsb
add
fs
pop
decl
fildl
ret
pop
and
sbb
xchg
ffree
rcrb
or
aad
mov
mov
ror
inc
jle
mov
imul
jmp
repnz
xchg
cmp
xchg
add
sarl
jae
sub
mov
faddl
mov
dec
mov
dec
xchg
xlat
sbb
cli
xor
xlat
jg
stos
inc
shlb
rorb
mov
mov
mov
and
xchg
pushf
pop
fwait
movsb
sub
rorl
jg
jno
or
cmp
mov
push
sub
dec
jno
pushf
repz
or
daa
push
push
mov
or
je
mov
sahf
jp
add
fldl
addr16
xchg
out
push
ret
dec
repnz
arpl
push
je
adc
fcoms
xchg
enter
int3
jnp
mov
aas
std
pop
jge
iret
lods
fildll
add
ret
or
push
lock
stos
test
cmpl
xor
imul
adc
adcb
lods
and
fmul
aas
outsl
je
and
pushf
adc
lcall
add
xchg
xchg
push
mov
xchg
or
jo
outsl
idiv
int
ficompl
push
and
mov
dec
dec
and
cld
icebp
jae
ljmp
int
mov
in
in
mov
xchg
pop
cltd
std
dec
xchg
xor
hlt
sbb
loop
dec
mov
push
add
out
add
lahf
pusha
cmp
push
sub
pop
sub
sbb
rcrl
pop
lcall
sarb
mov
arpl
stc
in
loopne
mov
shrb
push
stos
jecxz
or
dec
jp
push
das
aaa
pusha
addr16
push
push
dec
inc
in
adc
call
into
scas
push
insb
les
add
inc
insb
mov
les
adc
enter
push
icebp
scas
das
cmpsl
popf
leave
sbb
ljmp
push
mov
in
inc
pop
sub
mov
shlb
test
fwait
dec
repnz
dec
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
ds
outsb
adc
sbb
outsl
clc
lret
sarb
les
in
ljmp
or
xchg
adc
xchg
fcmovnbe
arpl
xchg
cmp
mov
pop
in
mov
pop
sti
adcl
fcoms
push
pushf
cli
fs
pop
movsb
pop
jns
mov
add
es
lret
rol
push
jp
push
aaa
les
scas
jmp
jnp
into
dec
lret
pop
jno
test
xchg
pop
jae
adc
inc
aas
pop
popf
testb
sub
cmp
or
pop
rcrl
dec
inc
jbe
or
inc
daa
push
dec
and
jp
add
cmc
jmp
fdiv
add
add
in
pop
ror
mov
nop
pop
add
sub
aas
stos
addr16
pop
pop
xchg
mov
stos
push
cmp
fadd
stos
dec
ss
in
cli
adc
inc
or
lds
daa
adc
or
insl
fiadds
pop
push
mov
xor
lea
mov
pop
or
out
icebp
icebp
xchg
inc
adc
enter
mov
gs
push
jbe
int
inc
mov
dec
sub
sbb
gs
jne
mov
lcall
popa
test
jnp
xchg
pop
idivl
decb
pop
scas
rclb
repnz
in
ss
mov
mov
fdivrs
movsb
add
stos
jb
lret
xchg
pop
inc
inc
mov
inc
out
je
push
sbb
cltd
push
xchg
jns
sbb
lods
or
jle
and
xor
setp
and
pop
push
bound
pop
loope
movsl
or
arpl
mov
push
mov
inc
xor
push
in
jle
in
out
adc
adc
adc
mov
adc
ds
jecxz
fsubrl
inc
dec
movsb
shr
inc
nop
hlt
adc
xchg
add
out
xchg
fcmovu
push
push
imul
and
aad
in
pop
sbb
sub
sbbb
sbb
sub
shrb
pop
xchg
out
jg
and
popaw
cmp
sub
cmp
leave
pop
mov
push
shll
inc
xor
fprem
popl
popf
mov
lahf
push
and
shl
lret
es
jae
imul
adc
adc
lock
hlt
jae
mov
cs
xchg
enter
cltd
je
mov
sub
popf
int3
in
adc
mov
adc
rcrl
dec
mov
loope
dec
imul
cld
loope
xchg
mov
pusha
inc
sbb
dec
scas
arpl
mov
push
shll
xor
inc
pusha
add
test
sub
or
movsb
enter
loop
and
jle,pt
mov
cmp
jmp
add
iret
icebp
cmp
sub
fsubs
and
stos
lods
ret
sarl
imul
pop
mov
push
or
lcall
test
subw
adc
mov
pop
mov
pusha
and
ret
mov
in
mov
and
add
out
aaa
mov
scas
addl
mov
testl
or
jb
sbb
pop
lods
and
xor
ljmp
cltd
xor
mov
mov
mul
stc
inc
pop
inc
leave
lahf
xor
cmpsl
lahf
aas
iret
pop
mov
lcall
outsb
daa
loope
adc
pop
inc
xor
repz
into
dec
jmp
xor
into
adc
push
loopne
sbb
icebp
pushf
jmp
add
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
pop
push
cmpsl
mov
outsb
adc
sbb
push
loope
mov
loopne
xchg
sbb
and
mov
pop
jge
js
fs
int
jl
xchg
adc
xor
lcall
addl
repz
xlat
mov
and
out
cmp
sub
into
mov
push
sbb
imul
adc
mov
sub
pop
mov
shl
leave
inc
movsl
cmp
inc
test
push
mov
imul
fisttps
sarl
mov
cld
sarb
or
xor
ljmp
push
orb
addr16
shl
cli
popa
add
imul
test
sbb
int3
in
loope
mov
lret
test
inc
dec
xor
mov
icebp
sub
jecxz
push
sub
push
movsl
stos
out
add
icebp
push
or
loopne
inc
pop
ror
loopne
in
cli
stc
mov
pop
leave
cmp
sti
loop
mov
cwtl
arpl
sub
xchg
insb
jno
sub
cmp
mov
cmpl
push
les
xchg
adc
mov
addb
pop
lret
jle
xchg
dec
pusha
into
xchg
pop
dec
sub
pop
add
xor
push
call
pop
bound
in
imul
mov
test
sbb
push
add
clc
cmpsb
in
fstl
fisttpl
or
cltd
or
mov
fildll
inc
mov
mov
repnz
out
fld
imul
dec
movsl
or
stc
in
fwait
stos
loope
cmp
xor
outsb
xchg
imul
stos
mov
stc
sub
insb
scas
lahf
cltd
aaa
cmp
push
repz
ficoms
test
imul
lock
outsl
adc
pop
adc
dec
lahf
testb
jno
sarb
inc
hlt
xor
incb
cmpsw
cmp
jge
cmp
push
adc
xchg
add
xchg
or
dec
out
shlb
xchg
pop
xchg
inc
mov
add
shrb
int3
xor
jg
jl
loopne
iret
xchg
lret
int
sub
hlt
mov
adc
jae
nop
mov
adc
xchg
int
push
xchg
lret
into
sbb
int
ljmp
pusha
sbb
repz
jp
pop
les
mov
xor
outsl
adc
cmpsl
dec
jge
data16
jecxz
call
into
scas
push
loopne
ret
adc
cwtl
fldcw
mov
jne
jns
addr16
arpl
xchg
ss
inc
push
mov
pop
call
fmuls
mov
in
cmpsb
mov
push
lds
fsubs
aas
adc
add
pop
jb
dec
fs
adc
pop
jnp
sub
lods
cmpsl
mov
and
sahf
outsl
cmp
jo
push
pop
int
sbb
jl
repz
pushf
push
test
or
push
hlt
sub
fmull
push
adcb
lahf
cmp
es
mov
fwait
pop
mov
mov
test
and
lods
aam
inc
test
jp
add
add
inc
push
xchg
stos
je
adc
ficompl
sarl
pushf
inc
xchg
inc
pop
mov
std
push
xlat
shrb
mov
repz
xlat
push
mov
addr16
xorb
or
cmp
jno
insb
dec
iret
pop
lds
inc
iret
icebp
xchg
push
out
pushf
cli
in
iret
push
addb
enter
sbb
or
sahf
jno
das
push
pop
and
fstps
sbb
adc
loope
scas
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
mov
outsb
adc
sbb
push
jo
mov
mov
dec
xchg
and
push
jge
jecxz
push
aad
sahf
std
sbb
lds
inc
pop
jbe
mov
bound
fdivl
shll
lea
pop
xchg
shll
jnp
mov
sub
pop
mov
cwtl
lds
adc
js
sub
mov
adc
xchg
xchg
loop
dec
jae
pop
out
xlat
loopne
mov
repz
mov
xchg
scas
jge
add
jne
aad
out
jo
and
mov
test
pop
push
or
mov
push
push
mov
das
mov
dec
jno
out
pop
push
in
lret
test
xchg
inc
and
push
mov
test
xchg
or
test
xchg
sbb
jbe
xchg
or
xchg
dec
push
mov
movsl
jge
pop
je
vshufps
jl
cmp
fildll
jl
cmpsl
lock
jno,pn
out
cmc
aam
lcall
icebp
cmp
xchg
loopne
fisubrs
mov
daa
dec
gs
add
adc
pop
orb
mov
sub
sub
fildll
xor
idivb
mov
cs
adc
notl
or
mov
outsb
stos
sbb
cli
jmp
mov
push
sbb
add
sub
sbb
mov
jmp
dec
cltd
push
inc
sub
lock
sub
push
les
cltd
lods
jns
xor
test
pop
jnp
sbb
leave
add
inc
ja
scas
jle
xlat
push
faddl
jl
lock
xlat
inc
pop
cmp
cli
jnp
and
add
cs
lahf
jb
repz
les
cmpsb
dec
jno
ljmp
sub
or
cmp
fldcw
out
pushf
cmpsb
mov
shrl
insb
jb
outsl
push
lods
cmc
imulb
xchg
sub
xchg
in
xor
jb
fmuls
loope
mov
loop
out
jbe
pusha
push
popa
nop
inc
scas
cmc
jmp
sub
pusha
mov
pop
and
jae
scas
cmpsl
cmpsl
ds
and
xchg
test
jg
in
fcomps
inc
xchg
adcb
inc
sbbb
xor
dec
adc
pop
in
mov
mov
test
mov
jae
mov
mov
pop
mov
out
pop
loopne
lahf
jmp
jo
push
fistpl
shrl
pop
xchg
xchg
scas
dec
or
ss
ss
fisubrs
lock
jge
jg
cs
and
xor
andl
xlat
cmc
or
imul
and
dec
ss
lahf
mov
mov
leave
int3
or
sahf
fwait
jmp
lret
in
fdivs
packuswb
or
out
out
iret
jnp
push
xchg
dec
mov
int
in
movsl
pop
sbb
push
mov
cmp
ss
in
and
dec
mov
push
in
mov
mov
mov
pop
je
pop
out
xor
xchg
pop
xchg
aad
stos
test
mov
aaa
hlt
loope
int
mov
jno
dec
inc
xchg
divl
jge
or
nop
leave
stos
ja
jno
hlt
mov
mov
mov
andb
hlt
cmp
cmp
cmp
fs
push
cwtl
imul
jo
xlat
mov
jne
adc
pusha
dec
rcrb
jne
clc
sbb
pusha
cmc
out
lcall
add
add
in
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
mov
cld
jns
cli
idivl
dec
cmp
andb
sti
mov
icebp
pop
in
and
nop
mov
xor
xorb
adc
lock
cs
pop
pop
xlat
push
add
stos
clc
mov
jns
dec
mov
outsb
fisttpll
lds
add
outsl
add
sbb
aad
push
pop
xchg
xor
inc
push
push
lods
fisubrs
and
add
mov
stc
push
mov
je
psrlw
jbe
push
mov
fnstenv
outsl
cld
mov
and
xchg
outsb
test
pusha
mov
or
inc
pop
mov
pmaxsw
jns
test
push
dec
xor
repz
mov
das
sub
lret
fildl
cmp
dec
test
mov
or
in
push
je
pop
popf
in
aaa
out
gs
push
stos
out
stc
pop
cs
stos
hlt
ficoml
lods
pop
sbb
push
jmp
pop
push
imul
push
sbb
adcb
outsb
sti
mov
test
mov
jbe
xor
cmpsb
jo
xor
xchg
test
sti
xchg
int
das
lcall
movsb
mov
jg
mov
js
pop
inc
aad
call
xchg
scas
andl
sbb
pop
lcall
je
pop
imul
mov
into
lods
jb
jbe
pop
inc
mov
jbe
iret
mov
bound
arpl
dec
jmp
pusha
and
xchg
outsb
adc
xchg
ja
mov
or
sbb
dec
push
xor
jbe
shlb
mov
push
pusha
out
xchg
xchg
cmp
mov
notl
lahf
cs
or
fisttpll
mov
rcrb
lahf
push
mov
push
popa
sbb
dec
aaa
dec
xor
lods
and
add
mov
cmp
push
in
stos
shrb
xor
or
jae
lahf
pop
into
sub
stos
rorl
scas
sahf
mov
xchg
subl
scas
rclb
push
pop
fs
lds
jg
in
or
out
mov
push
cld
aaa
ss
push
pop
xchg
js
and
sub
and
jle
push
push
cmp
xchg
jg
leave
mov
mov
aas
xlat
pop
cld
popf
jmp
inc
mov
jnp
add
push
add
das
pop
das
lahf
pushf
inc
lcall
das
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
cmpl
sbb
adc
sbb
ret
fidivs
mov
dec
lcall
jle
aad
fsubs
sbbl
push
fcoml
sub
loope
lret
push
xor
cmp
dec
sbb
xor
jnp
jnp
mov
or
lea
cmp
add
ljmp
lds
int
mov
sti
and
cmc
aaa
fsts
inc
jle
bnd
scas
inc
xchg
jb
push
or
xor
loop
dec
movsl
add
ret
std
push
dec
xchg
fnstcw
out
sub
add
sbb
inc
sbb
add
push
loope
mov
inc
fmuls
cmp
cmp
sub
lds
ljmp
gs
mov
sbb
mov
xchg
fcoms
mov
xor
sarb
addl
js
arpl
dec
fnstcw
dec
dec
hlt
lret
add
mov
dec
mov
pop
mov
lods
push
and
jmp
in
les
jmp
xchg
mov
jge
bound
out
mov
and
sub
cmp
or
imul
cmp
leave
inc
outsl
pop
push
std
fisubrs
or
mov
movsb
sub
push
aas
idivl
imul
push
lret
dec
dec
fs
sub
stc
out
xchg
sbb
flds
jl
xchg
dec
inc
dec
dec
push
fs
pop
push
or
sbb
js
in
cmp
push
cmc
push
dec
rcl
mov
add
pop
fprem
loop
cltd
roll
mov
cmc
push
xchg
outsl
into
mov
shrb
int
sbb
lds
xchg
popf
int3
sbb
sbb
je
lds
aaa
sbb
sbb
mov
shlb
in
dec
stos
xchg
subb
push
mov
fstl
lds
lods
or
in
dec
inc
cmp
test
adc
pop
mov
repnz
stos
fwait
xchg
ds
jns
mov
mov
jge
sub
aad
mov
shlb
out
lahf
into
jnp
loopne
cmp
std
sub
inc
scas
cwtl
mov
std
xor
push
sub
in
jecxz
scas
rcr
cmp
mov
xor
clc
jnp
out
outsl
or
mov
frstor
xor
dec
outsl
xchg
or
jmp
pusha
mov
push
movsb
int
addr16
pop
mov
ljmp
push
leave
inc
cltd
or
out
lods
repz
rclb
inc
in
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
adc
mov
sbb
adc
sbb
movsl
movsb
xor
xor
nop
or
and
movsb
roll
in
icebp
test
ficomps
xlat
cmp
mov
ret
bound
test
add
lret
sbb
dec
xchg
adc
mov
inc
mov
adc
in
pop
xchg
in
sub
dec
cmp
pop
call
sahf
imul
into
icebp
xchg
ret
dec
or
sub
jno
xor
sbb
les
cmp
fdivrl
mov
andl
aaa
mov
jne
lret
mov
push
call
cmp
sbb
add
dec
xchg
mov
pop
xlat
mov
loope
out
outsb
adcl
pop
or
sti
call
roll
imulb
test
pop
add
or
sbb
es
xchg
mov
insb
sub
lcall
lea
add
add
hlt
pusha
push
leave
add
scas
jge
jmp
lcall
mul
lahf
dec
xchg
test
test
dec
rcrl
inc
shrb
and
push
scas
fisttpl
outsl
pop
cmpsl
mov
pop
mov
int
rcrl
mov
pop
mov
notl
push
int3
je
out
test
jecxz,pt
imul
push
sub
xor
sbb
andb
xor
sbb
and
in
cmp
push
pop
fcoms
push
add
lods
dec
jns
pop
out
cmp
jmp
insb
sub
mov
cltd
add
jg
mov
decb
xchg
mov
or
push
idiv
leave
jecxz
lret
or
mov
negb
adc
xchg
sbb
inc
aad
jmp
shrb
push
xor
inc
in
or
stos
and
adc
popf
mov
sarl
fwait
lret
repz
rorb
icebp
test
cli
xchg
or
xorl
aaa
push
lds
sub
add
sub
cmp
out
inc
inc
scas
jg
test
lock
hlt
mov
popf
mov
jb
in
adc
sbb
cmpsl
sub
insl
xchg
fsubrp
pop
cmc
xchg
clc
test
aam
mov
cmp
or
jnp
push
cwtl
xchg
je
in
mov
xor
jmp
pop
fdivs
sbb
pop
into
sbb
jae
push
xor
fcompl
sbb
adc
sbb
into
test
adc
push
jmp
inc
dec
js
pop
ret
bound
rorl
lcall
mov
daa
push
hlt
addr16
jl
inc
push
leave
push
movsl
inc
push
sub
mov
scas
imul
out
orb
and
xchg
inc
jg
pushf
push
in
dec
push
add
cmp
imul
loop
loope
mov
and
mov
cmp
in
and
clc
jg
test
sbb
int
and
inc
mov
data16
out
pop
mov
adc
fiadds
repnz
mov
jp
sbb
dec
sbb
out
inc
rcl
ret
mov
sbb
inc
call
out
mov
and
push
div
and
imul
sbb
or
or
xchg
push
jg
scas
dec
testb
sbb
mov
push
arpl
xor
and
dec
in
pushf
in
test
insl
jnp
ja
dec
add
push
jl
stos
sub
orb
aam
jge
mov
out
add
adc
orl
lcall
out
mov
mov
int
lods
xor
mov
jp
push
sbb
cmp
pop
add
daa
dec
insl
nop
push
and
into
pop
push
pop
repz
push
orl
daa
dec
mov
add
cmp
push
xor
push
pop
or
mov
mov
push
and
fwait
sub
mov
int
and
ror
in
in
into
fsubrl
hlt
or
nop
test
and
mov
outsb
push
mov
cmp
adc
cmp
xor
fldenv
cmpsb
addr16
and
pop
insl
pop
addr16
sti
std
repnz
arpl
pop
xor
sub
jge
mov
aad
leave
ret
lahf
xchg
je
dec
push
fdivl
lahf
fcoml
mov
rorl
xor
pop
cmp
lret
int
push
xor
scas
push
adc
test
sbb
xchg
nop
les
bound
mov
sub
xor
cltd
inc
and
or
cmpsl
shll
sbb
mov
push
xor
mov
push
or
push
aas
ret
mov
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
mov
fcomps
sbb
adc
sbb
scas
das
cmp
mov
jbe
adc
insb
lahf
xor
sti
inc
or
inc
xchg
inc
jmp
push
loope
test
shll
test
cld
adc
sub
mov
fstps
adc
and
inc
daa
movsb
mov
sbb
mov
add
das
movsb
pop
js
aad
lea
ja
or
daa
jno
pop
and
fnstsw
mov
out
maskmovq
imull
adc
jmp
and
lea
jl
inc
jbe
pusha
outsl
dec
sub
in
dec
in
xor
mov
cmp
xor
arpl
imull
aaa
inc
iret
popa
pushf
lret
arpl
cmpsl
lods
test
fstp
jmp
adc
fnstsw
cmc
lcall
pushf
insb
cwtl
gs
pop
in
not
sub
xchg
dec
loop
xchg
into
mov
ljmp
dec
insb
mov
push
scas
daa
xchg
sbb
dec
lock
lcall
inc
dec
inc
mov
mov
xor
mov
xorb
std
andl
inc
rcll
test
add
or
lea
xchg
lods
mov
fsubrs
mov
fucom
mov
or
test
jp
out
iret
sahf
jns
sbb
bound
mov
js
repz
mov
addr16
add
xchg
je
scas
lods
dec
les
fnstenv
adc
xchg
lcall
sbb
or
jns
sahf
ficoml
jmp
nop
outsb
and
pop
rorl
xor
mov
cltd
pop
stos
cmp
and
mov
lret
mull
xlat
adc
xchg
adc
js
cmp
mov
lahf
scas
inc
repz
enter
lret
shl
add
sub
dec
mov
repnz
ss
fldcw
enter
sarb
cmp
push
lods
jg
flds
jecxz
fistpl
jge
popf
and
addr16
push
mov
mov
into
jle
pop
pop
es
fstp
lret
cs
sub
addl
sbbb
idivb
xchg
cli
add
faddl
push
pop
xchg
imul
lea
ret
cs
pusha
das
in
mov
shll
adc
popa
inc
inc
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
sti
xchg
sbb
rclb
sbb
ljmp
mov
insl
pop
pop
mov
icebp
inc
or
lret
cmp
bound
imul
xchg
pop
cmpsb
sub
dec
std
sti
pushf
loop
xor
rcrb
adc
mov
je
stos
pop
sahf
into
and
fsubs
sbb
mov
mov
xchg
jbe
adc
xor
loopne
lods
mov
enter
xchg
sahf
mov
cmpl
mov
xchg
mov
lahf
xchg
mov
test
adc
fisttpl
push
mov
pop
lods
sbb
pop
scas
cmpsl
pop
test
out
mov
mov
rorb
or
sahf
in
popf
dec
enter
push
xchg
adc
fidivrs
out
lods
lea
mov
push
into
in
movsb
add
addl
in
arpl
test
mov
pusha
push
popf
bound
dec
std
imul
cmpsl
cltd
in
sub
push
out
dec
push
js
cld
daa
lock
pusha
push
cli
mov
test
mov
clc
or
sti
in
jne
mov
dec
insb
mov
sarb
jnp
jl
push
aam
insl
dec
inc
lock
xchg
dec
jmp
mov
xchg
inc
leave
or
jg
jne
jmp
aaa
enter
dec
arpl
sahf
repz
push
cli
inc
mov
scas
inc
push
jle
jbe
and
push
in
sbb
xchg
pop
mull
lret
leave
push
mov
push
repnz
lret
sbb
xor
pop
adc
test
sub
das
pop
dec
xchg
or
arpl
fdivr
mov
mov
mov
xchg
sahf
icebp
xchg
rclb
push
outsl
push
aad
fsubp
out
inc
or
add
gs
mov
iret
dec
dec
mov
push
mov
dec
pop
dec
push
or
xchg
add
add
dec
fwait
jo
iret
mov
xlat
lds
push
cmp
imul
cmp
and
push
sub
bound
or
sbb
js
push
jbe
cmp
add
into
jp
out
movsl
sub
adc
mov
or
adc
push
outsl
lahf
orb
mov
loope
imul
std
mov
mov
inc
pop
mov
jnp
outsl
pop
fs
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
mov
mov
rclb
sbb
jge
fistps
lahf
jge
sarl
jmp
mov
fwait
out
or
inc
or
jns
negl
xchg
and
push
adc
cmp
sbb
loop
push
xlat
cmpsb
dec
ljmp
jg
jb
jecxz
in
and
cltd
in
push
aas
stos
fldenv
mov
sub
dec
mov
psubq
jg
xchg
frndint
pop
xchg
cltd
lock
sbb
xchg
inc
fistps
sbb
bound
sahf
push
jo
adc
dec
mov
lock
jns
lods
cmpsb
shlb
push
jns
xchg
or
dec
push
and
adc
stos
push
xor
xlat
pop
movsb
xor
mov
in
xor
outsb
push
aad
cmpsb
push
sub
mov
mov
fsubrs
hlt
push
mov
lret
push
or
std
fisubrl
xchg
mov
xor
pop
or
into
pop
mov
push
insl
movsl
loop
mov
mov
pusha
imul
mov
rcrl
xchg
icebp
push
ljmp
shl
mov
stos
addr16
jmp
scas
adc
ret
lahf
or
in
push
jbe
jne
mov
fldl
jne
mov
and
mov
out
xor
sbb
xchg
and
cmovbe
cmc
mov
inc
xchg
mov
fsubp
add
fimuls
sub
xchg
sbb
dec
mov
and
push
jmp
addr16
sbb
dec
mov
mov
mov
imul
cli
add
jbe
cli
mov
jmp
pop
or
jmp
lock
fs
cli
mov
mov
fidivrl
data16
lds
aam
jle
lock
xchg
pop
das
adcl
cmp
dec
mov
dec
addb
lock
or
cli
add
and
adcl
cmp
dec
lock
sbb
call
xchg
fcmovnb
add
cmpsl
push
lahf
fs
enter
cs
push
mov
movsb
push
jg
movsl
sbb
cmpsb
sbb
vpsllq
hlt
mov
ss
pop
inc
mov
call
inc
es
push
es
std
mov
icebp
scas
inc
cmpsb
dec
dec
ja
loope
packuswb
lahf
cmp
jge
loope
cmpsb
test
sub
popf
lahf
sbb
cmp
imul
xor
add
jmp
sub
mov
inc
pop
and
leave
out
jle
shl
stos
into
enter
adc
sbb
cmp
sbb
imul
in
sbb
jns
insb
lret
pop
fsubrl
stos
mov
cli
icebp
push
push
adc
bound
push
push
insl
test
inc
int3
jns
pop
push
arpl
jbe
xlat
cmpsb
dec
std
fstpl
mov
adc
jno
cli
pop
xchg
loopne
test
test
dec
jmp
adc
pop
jb
testb
sub
dec
add
repz
add
arpl
arpl
adc
fistl
add
scas
push
test
xor
push
pop
add
dec
js
int
sub
imul
fcomps
pop
ret
cmpsl
jb
adc
pop
or
jnp
sbb
cmp
mov
or
insb
jno
out
outsb
mov
std
test
pop
inc
fbstp
ljmp
adc
add
push
xchg
cltd
lea
cli
cmp
in
into
dec
adc
lret
cmc
dec
outsb
mull
je
inc
add
inc
stos
loop
xchg
push
mov
les
in
push
jmp
jo
leave
jmp
js
mov
aaa
imul
push
inc
mov
sub
ret
nop
cmp
add
fcomi
adc
dec
flds
jge
sub
mov
adc
cli
mov
sbb
mov
out
xor
xchg
sub
ficoml
jge
jp
add
and
fstpl
daa
mov
xor
jb
sahf
push
fisttpl
mov
pop
xor
pop
lret
pop
outsl
or
ds
sti
inc
cmp
or
cltd
mov
or
test
lcall
adc
fbstp
sub
xor
out
and
dec
dec
ret
cmp
push
es
in
push
ret
sub
push
and
loopne
and
lods
push
in
sti
jno
mov
or
insb
mov
outsb
fwait
and
jle
mov
ljmp
xor
adc
inc
shl
pushf
mov
dec
clc
enter
stos
into
imul
fs
out
dec
lock
ss
aas
fcomi
int
jne
push
mov
mov
dec
mov
pop
mov
test
scas
test
xor
add
decl
cld
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
inc
lods
fadd
push
push
leave
and
sub
mov
cwtl
push
int3
cld
mov
sahf
ljmp
lcall
icebp
dec
js
sub
dec
out
xchg
push
push
jae
jecxz
push
negb
loopne
inc
fadd
dec
repnz
dec
sbb
inc
mov
mov
dec
add
dec
int
jae
jns
sbb
sub
arpl
in
mov
std
add
sahf
or
jnp
add
mov
mov
dec
mov
fnstsw
sub
mov
push
cmc
jle
dec
pop
jmp
sar
push
dec
mov
mov
outsb
inc
les
mov
adc
inc
in
stc
mov
imul
sub
cli
ror
cmpsl
xchg
mov
enter
cmp
jl
pop
aad
mov
sahf
scas
lock
insb
cmp
mov
mov
mov
pop
push
jne
cwtl
jge
repnz
dec
mov
rolb
mov
inc
loopne
in
nop
out
xor
in
pop
adc
xor
aad
cmpsb
and
push
js
dec
dec
push
sahf
jecxz
sub
int
adc
movsb
cs
jns
cli
mov
popa
jp
fcoms
arpl
add
xlat
xchg
aad
call
movsl
in
icebp
adc
test
inc
sbb
xchg
add
lret
jp
pop
cmp
cmpsl
xchg
int3
iret
mov
data16
mov
cwtl
and
xor
in
dec
pusha
clc
pop
xchg
xor
sub
fs
add
dec
mov
lods
pop
fsts
and
mov
test
xlat
imul
mov
sbb
xlat
dec
push
mov
dec
nop
loop
dec
or
or
loope
xor
xor
fwait
sbb
xor
mov
add
push
lretw
cmp
fists
mov
out
xchg
outsb
inc
mov
outsb
cmp
int
dec
mov
sahf
push
nop
fisttps
inc
leave
out
pop
stos
mov
out
lock
stc
in
fucompp
in
fcomps
bound
leave
andl
test
cmp
loopne
int
hlt
pop
out
cmpsl
ss
mov
push
icebp
push
lahf
insb
outsb
mov
mov
add
in
jb
aam
add
inc
or
sub
mov
clc
push
popa
enter
imul
adc
or
or
add
inc
or
pop
loopne
inc
fmull
inc
fmul
popa
add
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
dec
cli
addr16
rclb
sbb
cli
add
std
test
js
xor
int
gs
mov
push
movsl
pop
pop
pushl
adc
xchg
cmpsb
cmpl
xchg
push
fisubrs
mov
call
push
je
inc
push
rcl
loop
sti
aas
push
jecxz
ffreep
fwait
mov
sub
cli
push
inc
aas
insl
mov
jle
xchg
cmc
je
pop
fisttps
or
fimuls
mov
dec
pusha
pusha
or
jmp
mov
sbb
out
xor
arpl
iret
jo
dec
mov
or
sbb
mov
stc
test
push
push
stc
pushf
and
movsl
pop
cmpsb
in
imul
fxch
push
dec
fwait
stos
sub
jbe
pop
adc
test
cmpsl
cli
mov
or
int
pop
xchg
jge
es
xchg
repz
sbb
xorb
mov
mov
push
jg
insl
dec
test
fnstsw
out
and
add
lret
loop
loopew
mov
xchg
jns
enter
shll
ljmp
fstpt
scas
mov
jle
pushf
cs
xchg
dec
cmc
jae
inc
outsb
or
jmp
and
inc
leave
enter
xchg
adc
cld
cmpsl
scas
orb
mov
out
sbb
adc
mov
xchg
push
adc
aaa
fnsave
xchg
inc
loop
jno
shr
into
jns
popf
popa
mov
dec
pop
add
xchg
xchg
lods
lret
xchg
push
inc
scas
push
lds
pop
and
xlat
cmc
mov
cmc
or
sbb
add
xchg
jo
jmp
int3
ret
dec
mov
xor
or
sbb
scas
adc
sub
leave
xchg
mov
frstor
dec
sbb
lock
add
pop
dec
or
xchg
in
out
mov
cwtl
dec
xchg
mov
sarb
das
roll
adc
mov
sti
sahf
ds
and
add
inc
sub
int
cmpsb
rolb
inc
rorb
mov
scas
mov
shr
imul
or
dec
inc
jns
mov
les
jecxz
xchg
in
std
pop
xchg
xchg
pop
xchg
lock
pop
loope
cld
dec
jmp
out
mov
mov
sbb
fidivl
mov
in
pop
mov
hlt
mov
shlb
shl
testl
add
add
rorb
push
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
mov
sbb
rclb
sbb
std
add
xor
jne
loop
mov
lods
fs
movsl
adc
scas
pop
test
daa
ds
jge
mov
cmc
xchg
inc
ficompl
mov
pop
fwait
lahf
add
fwait
sbb
adc
cmp
sahf
fwait
xor
jae
ret
in
das
clc
add
or
and
push
mov
pop
xchg
jl
rclb
push
ss
push
sti
fdiv
mov
inc
iret
cbtw
xchg
mov
and
rcr
cmp
pop
inc
repnz
stc
adc
inc
es
dec
mov
pop
push
xor
ds
into
imul
lods
mov
mov
push
divl
or
cmp
test
loope
add
aad
xchg
jo
mov
xchg
ret
sbbl
jp
in
jno
inc
addr16
pop
pop
xorl
movlps
ret
or
adc
sbb
inc
mov
and
insb
mov
dec
out
pusha
and
jle
sbb
out
mov
shll
popf
out
xchg
and
cld
inc
and
xchg
cmp
xor
adc
dec
add
xlat
push
test
iret
adc
in
dec
shll
into
imul
mov
pop
pop
push
ljmp
mov
inc
jg
jbe
sti
notrack
push
push
pushf
imul
pop
jmp
xor
or
push
inc
leave
or
push
adc
xchg
pop
pusha
or
mov
mov
addr16
cmp
stos
loop
inc
fldenv
shlb
mov
pop
mov
jo
cmp
and
jecxz
int3
xor
xor
gs
stos
leave
push
jmp
add
dec
loopne
xchg
or
jne
and
adc
mov
inc
divl
jns
jge
cltd
cmpsl
jge
and
jno
data16
push
xchg
popa
push
inc
push
aad
in
cmpsl
cmpsb
xor
jbe
and
add
leave
js
inc
sub
adc
inc
ret
dec
out
in
sub
ret
enter
mov
jne
rolb
dec
std
movsb
ds
sub
lods
adc
lea
orb
call
fstpl
outsl
fstl
push
adc
and
sahf
bound
movsl
xchg
lea
imul
inc
fidivrs
pushf
daa
xchg
jecxz
outsl
mov
jae
in
xchg
lea
mov
and
add
xor
add
cmp
jmp
cmp
daa
sub
out
stos
mov
sbb
rclb
sbb
mov
pop
movsb
adc
repnz
mov
push
push
pop
int
idivl
dec
pop
mov
icebp
or
and
shlb
push
mov
and
cmp
push
or
out
mov
xchg
stos
loopne,pn
fistpll
adc
jae
xor
cltd
cmc
in
fdivrs
rolb
ficomps
clc
mov
ja
sub
scas
fldl
push
je
sub
dec
clc
or
arpl
repnz
or
jmp
in
sbb
mov
mul
lahf
mov
and
cmp
mov
mov
mov
or
xchg
sub
inc
rcr
stc
gs
sbb
and
jge
sub
xchg
mov
movsl
test
cmp
sbb
mov
shl
rcl
sar
icebp
and
insb
add
out
push
inc
sahf
pushf
push
orl
insb
test
stos
mov
xchg
or
jle
push
pop
pop
sub
subb
movsb
push
sub
lods
cmp
shrl
loopne
mov
lgs
pop
sub
stos
adc
inc
in
xor
gs
mov
test
dec
sub
sbb
sti
aad
movsb
pop
js
push
sub
in
js
loopne
pop
jmp
or
popa
dec
loope
into
lock
and
stos
push
int3
lahf
imul
mov
gs
mov
std
rcrb
mov
inc
ljmp
incb
cmc
mov
fcoms
sub
xlat
cmp
mov
jb
rolb
and
fimuls
inc
cltd
imul
cmp
mov
sbb
sarl
mov
pop
dec
das
push
cmp
out
fsubl
cmpsl
add
cmpl
mov
addb
shll
fstpl
or
lret
inc
mov
add
pop
push
mov
cli
aad
lods
cmp
mov
leave
adc
push
adc
fisubs
jp
push
mov
mov
repz
dec
and
and
xchg
jne
mov
imul
loope
pop
and
ffreep
and
scas
pop
jmp
fdivrp
dec
aas
xchg
xchg
data16
or
xchg
sbb
repnz
xchg
push
lret
pop
rcll
adc
cld
roll
dec
fisttps
lcall
mov
mov
inc
lcall
jae
jo
sbb
rclb
sbb
mov
fsubp
sarb
sub
adc
pop
push
adc
sahf
xchg
cli
mov
testb
popa
outsl
lcall
xchg
fisttpll
mov
daa
cmp
jae
aad
mov
movsl
int
dec
ja
xor
test
repz
mov
dec
xchg
popa
in
xchg
insb
cmp
xchg
movsl
mov
outsb
fdivl
mov
ret
add
inc
xchg
dec
jo
shll
cmp
mov
pop
hlt
cld
mov
js
and
ja
inc
out
adcb
adc
inc
fisubs
ret
out
std
repnz
push
hlt
ljmp
xor
mov
imul
pop
rolb
test
push
nop
addr16
fisttpll
or
xorl
popa
push
in
call
inc
push
lcall
rcrl
mov
pusha
cli
std
xchg
scas
stos
dec
testl
or
cmpsb
pushf
pop
mov
cltd
xchg
nop
pop
xor
aas
xor
pop
fldcw
adc
int3
jns
mov
jno
dec
les
dec
repz
scas
adc
inc
mov
cld
daa
xchg
mov
insl
push
jecxz
pop
fdivs
or
add
addr16
inc
push
xchg
in
mov
rcrl
insl
mov
in
pop
clc
stos
fwait
in
movsl
pop
movsl
fldenv
mov
into
pop
aam
push
or
sbb
jo
pop
xchg
xchg
jecxz
jge
test
jno
test
jg
adc
xchg
call
pop
xchg
pop
jo
cmpsb
dec
clc
or
inc
cmp
lock
out
mov
aam
int
sbb
cltd
cmp
jp
fidivs
push
cmp
daa
jl
mov
push
sbb
cmc
fsub
addb
xor
cmp
cmp
jbe
dec
or
jp
ret
divb
in
mov
loope
movsb
fst
and
sub
push
push
jg
movsl
xor
ret
dec
xchg
inc
lret
inc
xchg
test
test
jbe
scas
lock
or
dec
ljmp
divl
mov
bound
mov
adc
in
adc
inc
xchg
fcos
or
inc
adc
movb
mov
sarl
push
push
clc
ds
cmp
and
pop
ret
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
outsb
in
mov
mov
sbbb
jecxz
ret
js
lds
mov
lea
xchg
daa
mov
dec
and
es
fisubl
cmpsb
xchg
mov
fwait
ret
movl
mov
fidivrs
pushf
jbe
adc
or
sbb
repz
adc
mov
add
and
and
enter
sub
xchg
xor
xchg
jmp
shll
lock
inc
mov
lret
push
jg
rolb
popf
add
pop
dec
dec
jp
pushf
mov
pushw
add
scas
and
dec
adc
add
or
mov
push
outsl
daa
lock
cmp
mov
imul
or
int3
shrd
xchg
test
cwtl
rorb
testb
mov
cmp
jge
jb
pop
or
pop
pop
or
sbb
repz
and
sti
aaa
sub
or
or
adc
out
outsl
jl
ficomps
push
mov
jo
test
addb
in
xor
pusha
push
pop
out
inc
fimuls
mov
mov
sbb
pop
insb
pop
sub
nop
jo
insl
in
cltd
movsb
cmp
stos
inc
mov
pop
and
lret
frstor
xor
sub
data16
and
and
add
sub
adc
pushf
or
dec
das
pop
mov
or
inc
push
mov
jl
fsubs
push
dec
adc
sahf
sbb
adc
aam
outsl
das
pop
fstps
mov
imul
testb
pop
inc
jg
add
mov
les
mov
cmc
push
push
repnz
cltd
xchg
cmp
out
int3
mov
mov
push
pop
or
jne
imul
add
xlat
imul
mov
adc
push
rclb
cmp
inc
pop
and
fimuls
and
int
sahf
test
insb
imul
dec
or
inc
push
jnp
inc
add
inc
add
ret
jl
or
iret
pusha
lods
jp
mov
lahf
mov
xchg
arpl
inc
jg
add
insb
or
xor
rorb
xchg
stc
jns
cmc
mov
jbe
cmc
adc
sbb
lahf
inc
movsb
add
dec
lods
cmpb
adc
cli
nop
pop
sub
subl
xor
sub
lcall
adc
pop
sub
xlat
pop
mov
fwait
lahf
jb
sbb
movsl
sbb
add
rorl
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
inc
fdecstp
cs
jle
pop
int
test
adc
mov
or
daa
mov
imulb
sar
push
aam
ss
cmp
dec
in
jnp
or
pop
xor
into
outsl
jbe
pop
inc
sub
arpl
jno
dec
fadds
rclb
out
and
or
mov
idivb
sub
fsubl
mov
inc
pop
scas
lds
out
out
in
push
addr16
and
mov
addb
mov
sti
lods
test
push
std
insl
inc
and
lods
mov
sbb
popf
sbb
mov
adc
in
or
or
add
imul
lea
pop
xchg
inc
mov
jno
sbb
data16
xchg
imul
jmp
sub
or
jle
dec
add
stos
dec
and
das
mov
inc
insb
xchg
pusha
fwait
and
or
jbe
sub
sub
push
mov
adc
pop
mov
mov
or
faddl
or
xchg
lret
mov
gs
scas
cmp
add
push
lret
stos
push
stc
and
pop
pop
xchg
inc
xchg
lahf
sub
xchg
jp
ds
call
mov
in
negl
mov
adcb
and
popa
mov
divl
cmpsl
adc
pop
dec
sbb
mov
xchg
adc
movsl
mov
dec
je
stc
jle
xor
jg
jmp
pop
xchg
jns
sbb
mov
or
push
hlt
in
mov
pop
inc
ficoms
xchg
testb
cmpsb
hlt
repz
or
mov
in
mulb
mov
mov
inc
in
fdivrl
jne
sbb
xchg
lods
inc
and
xor
imul
xor
pop
shrl
xor
mov
out
pop
enter
js
push
lds
xchg
mov
into
jno
sub
fstp
xchg
mov
mov
mov
into
test
jp
data16
jecxz
sbb
jmp
cld
lahf
jle
ret
data16
popa
push
iret
ficoml
mov
cmpb
and
outsl
rcrl
or
popf
add
push
mov
cmp
insl
pop
sub
leave
test
in
mov
pop
fists
xchg
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
stos
jbe
sbb
mov
ds
push
ror
jbe
lret
loope
inc
xchg
stos
fnstsw
ja
nop
hlt
xlat
stos
or
stos
push
mov
pop
inc
imul
loopne
lock
cmp
cmpsl
or
dec
ja
xlat
cmp
stos
inc
mov
inc
mov
rcl
xlat
mov
rcll
cmp
imul
mov
aam
cld
movsl
in
xor
mov
jae
add
mov
outsb
inc
imul
xchg
mov
in
es
dec
or
and
jg
dec
stc
popf
out
dec
add
sbb
sbb
xchg
mov
sbb
ds
cltd
xchg
xlat
pop
sarb
imul
outsb
mov
jmp
and
mov
inc
scas
fcoms
mov
rorb
repnz
xchg
addr16
loopne
mov
repz
push
adc
pusha
inc
pop
push
sarb
mov
mov
cmpsl
adc
lds
sbb
xor
mov
cmp
pop
jecxz
push
pop
loop
ja
dec
xchg
dec
mov
mov
and
dec
hlt
aaa
dec
cmc
add
out
divl
mov
ss
pop
jmp
jp
data16
xchg
rclb
add
push
xchg
dec
xor
push
pop
cltd
cmp
xchg
jmp
out
pop
leave
pop
push
adc
fwait
cmp
das
inc
iret
in
cmp
xor
mov
out
sbb
int3
or
in
xor
jo
shrl
push
fwait
jmp
mov
mov
es
dec
xchg
and
jns
push
dec
loopne
jae
out
add
push
mov
and
sbb
pop
and
add
cld
daa
sub
push
jmp
jns
or
ss
dec
mov
dec
xor
pop
out
pop
test
enter
sub
in
lds
imul
mov
adc
in
inc
bound
es
or
bound
movsb
inc
xchg
pop
jge
pop
cltd
jbe
add
xor
mov
fwait
sti
mov
mov
lods
daa
bound
mov
repz
xchg
adc
outsl
loopne
add
xchg
imull
sahf
xlat
xchg
lock
xor
xchg
fldl2e
jl
cmc
loope
inc
outsl
cwtl
fisubrl
or
or
das
jp
lods
iret
pop
in
mov
mov
lret
ss
cs
xorl
cmp
add
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
xchg
mov
sbb
adc
sbb
ljmp
punpckhwd
scas
mov
pop
scas
lea
sar
fisubrs
scas
mov
pop
ret
in
lods
dec
dec
adc
mov
push
fs
repnz
add
xchg
and
mov
push
enter
sub
xor
and
scas
add
mov
mov
mov
ror
add
xorb
push
cmpsl
sbb
xchg
jns
punpckhwd
data16
mov
dec
adc
lret
fisttpll
pusha
cmp
dec
cmpsl
outsl
mov
popf
lret
lret
inc
imul
out
and
pop
mov
lret
stos
jl
cmc
fimuls
movsl
cs
test
fidivrl
out
out
flds
mov
mov
das
mov
lea
das
mov
push
cmpsb
or
imul
fidivrs
int3
adc
mov
push
push
sbb
imul
dec
sbb
inc
pop
sbb
fidivrl
fwait
dec
ret
jmp
dec
xchg
mov
je
inc
xchg
addr16
jnp
arpl
push
outsb
mov
xchg
add
jmp
jno
or
lock
int3
stos
or
jnp
xchg
pop
jbe
rcll
es
adc
sbb
std
push
push
pop
add
in
push
sahf
not
pop
rcll
aas
mov
add
pop
mov
popa
push
mov
lcall
xor
xchg
dec
cmpsl
inc
xchg
and
push
inc
push
fdivl
sbb
cmpsl
adc
lret
aaa
test
inc
arpl
test
sub
stos
add
adc
dec
jns
jp
and
imul
movsl
nop
in
mov
jno
aad
aaa
mov
cmpsl
push
xchg
imul
arpl
js
imul
mov
bound
je
imul
test
sbb
push
fdivrp
cwtl
mov
xor
and
mov
jae
xor
push
call
pushf
cltd
das
fcmovb
xchg
in
jnp
jecxz
fldenv
and
sbb
js
cwtl
out
les
stos
neg
mov
cmc
fists
xor
mov
shlb
mov
imul
mov
icebp
mov
or
adc
sbb
loopne
or
ret
dec
sub
jns
mov
adc
lahf
mov
cltd
mov
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
push
adc
push
xchg
sbb
mov
in
mov
ror
mov
cmp
dec
mov
sbb
out
mov
cld
jo
cmp
test
jno
fdivl
imul
xor
imul
cmp
cmp
xchg
add
mov
cmpsl
es
add
and
inc
hlt
add
mov
jle
mov
data16
inc
js
cltd
imul
add
jne
jle
pop
fldcw
out
push
insb
ffree
aam
mov
in
add
loope
jmp
mov
ss
mov
cmpsl
jno
ljmp
insb
cmp
test
mov
scas
cmp
rolb
inc
mov
adc
int
arpl
xchg
insl
lret
repnz
sbb
and
loopne
push
push
pop
dec
in
test
push
lods
aad
sbb
adc
testb
dec
mov
fidivrl
mov
test
mov
push
pop
mull
testb
addr16
lods
jle
and
into
dec
cmpsl
clc
or
fiadds
sbb
push
jno
dec
add
and
sarb
lds
sub
dec
rolb
push
bound
bound
dec
pop
in
mov
loope
jns
xchg
hlt
imul
inc
cmpsb
sahf
test
push
leave
and
data16
adc
lods
inc
in
cld
sbb
sbbl
sti
call
insl
mov
mov
ret
icebp
sub
lcall
roll
inc
jp
xor
jl
je
xchg
test
mov
test
push
hlt
ret
shlb
inc
les
inc
mov
aam
fdivrl
push
subl
dec
mov
sub
shr
xchg
adc
frstor
insl
pushf
fdivrl
dec
mov
push
ret
sbb
xorl
out
popa
ss
inc
imul
mov
dec
lods
lret
pop
fcom
pop
fdivrs
cwtl
cmp
mov
int
movsb
and
adc
cmp
and
or
std
dec
addr16
cmp
cs
popf
cmpsb
and
adc
lea
aam
sbb
movsb
test
rolb
or
iret
mov
mov
push
out
mov
sub
imul
push
out
mov
jp
es
cmpsb
in
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
js
gs
lcall
fists
sub
call
clc
mov
cmp
jo
lcall
and
mov
sub
and
rcr
push
inc
mov
ficoml
jbe
adc
icebp
xchg
or
xchg
pop
fistl
adc
adc
jnp
inc
jge
mov
outsl
loope
and
adc
add
jmp
adc
iret
ss
jae
and
adc
shll
das
dec
and
inc
aaa
mov
lahf
hlt
arpl
dec
pop
pop
mov
enter
sbb
cli
mov
dec
pop
stc
gs
mov
pop
mov
jmp
xchg
cmpsl
jns
sbb
push
jl
lahf
sbb
jl
into
pop
jnp
movsl
enter
adc
xor
mov
xchg
arpl
nop
lea
jne
shlb
and
push
xor
adcl
cmc
into
mov
xor
es
das
and
sbb
jnp
sti
push
xchg
mov
das
pop
aad
pop
lods
imul
fidivl
sbb
lods
pop
xor
cwtl
dec
fdivs
mov
dec
mov
sbb
mov
mov
lds
aam
dec
call
sbb
orl
xor
push
dec
jp
push
nop
xor
subb
jne
dec
std
mov
bound
loope
and
outsb
dec
and
mov
lret
in
aaa
adc
mov
xlat
mov
idiv
movsl
hlt
push
inc
fwait
popa
or
je
dec
fxch
flds
pop
lods
mov
mov
adc
push
and
inc
inc
into
xor
jne
setno
stos
xchg
gs
into
jae
pusha
out
pop
pop
adc
lock
mov
mov
out
sti
jmp
pop
inc
leave
adc
pushl
movsl
xchg
mov
rolb
test
push
movaps
dec
subb
stos
and
and
sbb
adc
mov
and
mov
sub
xchg
adc
cmpsl
out
jge
mov
mov
mov
push
mov
add
fimuls
js
sar
xchg
cwtl
adc
fiadds
in
cmpb
aas
and
xor
out
je
xchg
addr16
mov
cltd
gs
outsb
xchg
leave
fisubrs
jge
loope
leave
std
into
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
inc
pop
daa
cmp
out
fld1
pop
in
lea
pop
xor
mov
jnp
rcr
sahf
mov
cmp
inc
dec
jge
add
cmp
cltd
stos
cli
test
int
lds
mov
push
jbe
ljmp
jg
bound
test
xor
dec
cmpsb
adc
mov
add
jp
push
jnp
pop
cmp
mov
lret
mov
mov
mov
jmp
sub
or
arpl
add
sahf
call
pop
pop
movsb
rorl
mov
in
shl
out
pop
jns
jo
push
dec
jl
xor
insb
cltd
pushf
test
sbbl
mov
mov
jnp
and
sti
push
popa
notb
mov
rcrl
fisttpl
arpl
fwait
mov
mov
ljmp
jmp
jle
pop
sub
pop
out
sti
xchg
adc
sbb
dec
xchg
cmp
push
jno
xchg
push
imul
sub
cmp
out
lock
pop
xor
mov
or
mull
ss
push
add
repnz
mov
pusha
push
sub
xchg
rol
xor
push
mov
cmc
es
ret
xchg
test
call
out
data16
pop
movsb
mov
cmp
ret
or
cmp
insl
push
clc
nop
add
call
das
dec
xor
sbb
or
push
fistpll
push
xchg
mov
pop
clc
out
mov
pushf
fcmovne
sub
leave
lahf
in
jl
test
adc
fiaddl
mov
xor
dec
sahf
dec
xchg
sub
mov
mov
inc
push
and
test
push
in
xor
add
mov
cld
mov
loop
jecxz
mov
push
mov
sub
js
sti
sbb
mov
jns
stc
sbb
dec
cltd
xor
xor
add
sbb
ficoml
mov
or
mov
pop
insb
popf
and
mov
ja
jae
mov
cmpsb
pusha
mov
or
mov
sbb
popa
cld
lret
mov
xor
int
sub
mov
push
pushf
pop
ret
clc
mov
je
int3
push
and
pop
push
mov
cmp
test
and
sahf
es
inc
int3
xchg
mov
or
add
movb
sbb
scas
not
imul
mov
add
inc
add
sub
jmp
test
mov
push
scas
xchg
mov
lcall
ffreep
jnp
mov
or
aad
or
pop
mov
push
pop
mov
mov
cmp
push
or
shr
sbb
xchg
fisttps
inc
jns
xchg
out
xchg
dec
test
mov
fnstsw
into
pop
mov
out
pusha
add
mov
fmulp
adc
lahf
adc
andl
movsl
push
in
lea
push
fisttps
push
or
mov
sub
loope
mov
mov
mov
pop
xchg
loop
add
adc
add
pop
mov
mov
mull
mov
pop
and
adc
std
lret
pop
sahf
int3
addl
pop
stos
scas
mov
push
jl
rolb
fimull
xchg
dec
pusha
ret
cs
addr16
hlt
jnp
mov
ret
xchg
mov
mov
sbb
iret
int3
push
xchg
clc
aaa
mov
pop
jno
xchg
dec
cs
imul
fdivr
mov
repnz
inc
or
dec
aad
iret
out
lahf
test
mov
push
rcrb
jne
pop
adc
hlt
cmp
and
jne
mov
add
adc
stos
jecxz,pn
in
and
in
sbb
aam
add
in
add
xchg
fdivr
and
pop
or
mov
les
xchg
notb
mov
repz
xchg
pushf
adc
daa
sbb
xchg
sub
pop
fsubrp
pop
lret
in
cld
ficoms
cmp
xor
and
dec
cli
inc
fildll
leave
pop
mov
push
xchg
insb
mov
push
sar
dec
cld
pop
mov
mov
sub
pop
aas
pop
stos
movsl
pusha
leave
icebp
pop
mov
fwait
mov
in
test
test
mov
add
sbb
out
or
popf
xchg
pushf
mov
rep
jg
lea
bnd
movl
push
sbb
shlb
mov
imul
aam
je
inc
icebp
xchg
or
add
mov
mov
adc
ljmp
lahf
addr16
insl
cmp
push
sbb
cmp
push
insl
pusha
mov
jmp
mov
imul
pop
inc
mov
cmp
push
pushf
inc
adc
inc
sub
rclb
arpl
mov
fcoml
xchg
push
enter
xchg
hlt
lret
inc
mov
imul
and
int
push
shlb
dec
sahf
notl
insl
push
in
addr16
inc
repz
xlat
mov
sub
into
cwtl
cmp
mov
imul
icebp
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
lahf
mov
jl
sbb
sbb
pop
inc
in
jmp
xchg
push
stos
inc
push
sub
inc
out
inc
or
xchg
push
xor
pop
ljmp
add
adc
or
movsb
fdivr
add
push
movsb
push
push
add
hlt
inc
xchg
sarw
xor
mov
sti
cmp
ret
mov
das
stc
sub
mov
jp
rcl
pop
xchg
stos
je
sarb
cmp
mov
lahf
in
jno
adc
cmc
scas
dec
adc
add
sub
cli
pop
jge
test
push
mov
les
iret
pop
fidivs
std
adc
movsl
sar
or
arpl
or
mov
das
jle
mov
dec
popw
push
adc
stos
fsubrl
mov
mov
and
mov
push
std
mov
fwait
adc
mov
cmp
mov
mov
es
sub
xchg
inc
js
cld
mov
pop
fcompl
dec
movsl
mov
lods
push
and
xchg
xlat
jno
arpl
pop
nop
out
push
es
xchg
lahf
cltd
xchg
fs
xchg
ljmp
mov
popf
cltd
jno
xchg
pop
xor
xor
bound
jne
pop
daa
adc
xlat
inc
test
in
xchg
stc
xchg
inc
xorl
push
add
mov
inc
sbb
xchg
mov
daa
sbb
pop
jle
popf
sbb
in
push
jle
add
out
add
cld
add
cltd
ret
lds
adc
loopne
dec
cmpsb
fnstsw
iret
int
mov
jmp
sub
inc
icebp
mov
daa
jne
sub
push
shlb
dec
mov
pushf
adc
adc
adc
int
call
test
jns,pt
pop
fldenv
cmp
repnz
sub
jns
cs
cmp
mov
cmp
cwtl
test
cmp
lret
and
in
imul
loopne
int
out
sub
es
inc
insb
cmp
test
int
jl
xor
jae
hlt
cs
sub
ljmp
push
dec
cmp
jns
or
xchg
dec
mov
test
jmp
add
test
dec
sbb
add
test
pushl
test
decl
test
push
adc
add
test
ljmp
data16
add
inc
clc
shrb
add
jle
add
jo
add
dec
sub
sub
lret
inc
js
sbb
sbb
out
adc
ret
lret
pop
fisttpll
pop
xor
mov
loope
leave
jne
popl
daa
imul
sub
or
jb
cmp
jbe
add
add
push
xchg
add
mov
push
std
std
push
mov
repnz
mov
sub
out
dec
dec
aaa
lock
mov
jbe
ror
ficompl
pop
fcoml
rorb
arpl
push
or
dec
mov
mov
aaa
xor
popa
mov
cli
popa
xor
ss
rcll
in
clc
and
pop
repz
std
pop
cmpsl
insb
dec
repz
cmpsb
repz
push
stos
pop
dec
call
js
stos
lods
sub
sub
cmp
and
mov
fcoms
push
jo
mov
out
pop
and
dec
sahf
loope
mov
pop
push
dec
rcl
rcrl
sub
shll
adc
add
scas
sti
xchg
mov
xchg
int
push
mov
jge
cmpsb
dec
es
xchg
mov
cld
mov
mov
ljmp
adc
test
lahf
das
popf
inc
mov
orl
jb
aaa
cmp
aas
push
arpl
sbb
int
into
mov
or
int
xchg
sub
out
idivl
mov
sbb
adc
add
insb
xchg
leave
out
mov
xchg
int3
fdivrl
add
nop
dec
xlat
xchg
adc
into
fistps
dec
pusha
in
and
popa
push
push
movsl
fbld
jg
mov
leave
add
xchg
adc
test
jecxz
bound
rorl
daa
push
jo
or
adc
mov
push
mov
cmc
push
dec
fldt
jg
addb
xor
mov
sti
jle
cmp
mov
cmp
sbb
movsb
sti
xor
cmpsb
push
dec
sub
and
push
mov
cmp
movsb
in
xchg
imul
sbb
insl
aam
loope
xchg
mov
test
inc
ljmp
pop
mov
push
mov
and
repnz
xor
mov
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
mov
sbb
sbb
cltd
rolb
push
popf
push
fldenv
adc
in
lds
pop
adc
movsb
mov
dec
jae
mov
sbb
dec
adc
ret
cmp
test
mov
cwtl
lds
movsb
sbb
std
mov
pusha
cltd
jmp
jp
in
xchg
cmp
lods
sbb
ja
mov
mov
and
repnz
repnz
mov
push
cmp
mov
pop
inc
xor
leave
mov
mov
insb
mov
mov
arpl
andb
xchg
and
imul
and
sub
sub
xor
gs
mov
add
push
sar
pop
jns
lcall
jns
frstor
addr16
mov
ss
pop
sahf
cmpsb
push
push
icebp
lods
addr16
push
ja
cmpsb
lahf
inc
leave
hlt
sub
jg
mov
dec
rolb
push
fisubs
ljmp
ret
pop
lock
dec
fwait
js
in
mov
cmpsl
sbb
mov
mov
in
movsl
cld
mov
mov
data16
loope
cli
pop
mov
je
ja
or
xor
in
fimuls
popa
dec
lds
adc
das
mov
fwait
clc
imul
jmp
pop
add
sub
repnz
cmp
lcall
loope
clc
mov
xchg
sbb
clc
addr16
negb
test
daa
stos
sti
cli
cli
dec
ficompl
orl
and
test
pop
hlt
pop
cwtl
std
cmp
cmp
xchg
cmpsb
aaa
stos
aam
jl
movb
loop
inc
cs
mov
shll
lock
and
fdivrl
mov
push
dec
mov
cmp
pushf
leave
pusha
add
fwait
lods
and
push
mov
xchg
clc
divb
push
mov
lods
daa
popa
adcl
xor
rcrb
inc
inc
testl
jmp
testl
out
sub
sahf
repnz
xor
xor
cs
insl
inc
mov
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
dec
popl
mov
enter
aad
sub
daa
cltd
pop
xchg
jo
outsl
push
dec
arpl
call
jno
test
mov
mov
inc
xchg
insb
adc
mov
cmc
hlt
addr16
shl
call
rorl
lret
or
add
dec
popf
testb
xor
test
rcrl
mov
xor
mov
xchg
loop
add
jle
adc
movsl
repz
ss
cmp
inc
fnstenv
leave
sti
adc
es
idiv
test
xor
inc
push
repz
jmp
or
cmp
call
sub
cmp
dec
push
mov
add
push
jnp
xchg
cmp
or
mov
icebp
pop
stc
mov
into
xor
nop
insb
xchg
push
into
xchg
das
pop
pop
sub
pop
dec
lds
inc
outsb
xor
xor
push
int3
clc
inc
fmull
xorb
adc
nop
out
dec
sbb
lret
in
stos
test
ret
shlb
push
mov
fucomi
mov
ret
out
repz
sbb
mov
insl
test
les
pop
imul
mov
ret
cmp
mov
sub
inc
subl
dec
lret
jno
lock
add
push
jge
inc
mov
sub
push
xchg
cmp
sbb
jl
sbb
fimuls
out
push
cmp
inc
push
adc
pushf
rol
xlat
xor
cmpsb
decb
push
jo
out
jmp
js
and
arpl
fstpl
push
sbbb
xor
cmpb
mov
xchg
loope
and
pushf
push
jnp,pt
cmpb
mov
repnz
jne,pn
popf
in
lods
jb
adcl
cli
pop
xor
pushf
ret
sbb
mov
mov
in
ja
shl
scas
mov
sub
pop
inc
mov
xchg
fiaddl
and
mov
and
push
push
cltd
pop
in
lods
mov
mov
mov
add
adc
or
mov
jmp
pop
and
xor
pop
sbb
push
push
push
sbb
sbb
jmp
imul
push
sbb
adc
or
in
in
push
pushf
pushf
add
test
std
push
gs
mov
cmpsl
jge
andl
out
jne
ret
dec
scas
fucom
andl
mov
nopl
push
repnz
jbe
dec
out
xchg
arpl
mov
icebp
jl
sti
mov
push
fcomps
loop
push
cmp
dec
flds
rolb
pusha
int3
sbb
and
cltd
arpl
and
xor
shrl
sub
outsb
inc
xchg
movsl
mov
mov
jecxz
nop
sub
jb,pn
and
inc
dec
pop
int
clc
lods
repnz
dec
ret
jb
sbb
aaa
in
lods
dec
inc
cmp
scas
push
movsl
dec
loopne
in
repz
jg
lahf
cmp
mov
cwtl
sbb
sarl
stos
cli
mov
scas
fnstcw
in
jns
push
ret
mov
or
idivb
mov
in
repnz
ljmp
or
cmp
addr16
inc
in
xor
fildl
adc
mov
scas
mov
mov
cmp
sub
pop
or
cmc
pop
hlt
xchg
adc
inc
dec
lret
test
mov
or
jmp
jecxz
fs
mov
pushf
in
mov
push
xchg
inc
ficoml
in
rclb
in
scas
jp
push
hlt
ret
jo
out
jle
stos
mov
pop
jne
mov
in
pop
popf
pop
fnstcw
or
adc
push
sbb
stc
ljmp
mov
dec
jecxz
fdivl
dec
pushf
jae
scas
sahf
cmpsl
jg
ret
inc
jns
adc
xchg
dec
dec
mov
es
je
ljmp
and
mov
lahf
jl
clc
cltd
int3
popa
jne
add
xor
adc
pop
ja
jae
cmc
lea
or
out
fwait
push
jge
sarl
dec
lds
rcrb
outsl
push
xor
cmp
cmp
iret
sbb
lea
adcb
loop
dec
xor
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
mov
data16
jno
sbb
jmp
sub
push
or
push
mov
mov
ss
lods
fucomi
iret
in
adc
push
loope
push
xchg
adc
ljmp
pop
mov
js
mov
ljmp
adc
popa
inc
cli
xchg
sub
sub
mov
xchg
lods
sbb
adc
jmp
push
imul
and
mov
daa
aas
pop
adc
mov
jbe
outsb
mov
test
addr16
lret
or
or
js
lret
sbb
rcrl
jge
cltd
aam
mov
daa
pop
into
into
pop
fs
cmp
sub
lds
gs
mov
lahf
fsubs
dec
call
dec
xchg
mov
movsl
inc
mov
push
push
out
dec
gs
lahf
sbb
xchg
iret
ljmp
add
shl
add
jle
sub
lcall
xchg
adc
push
rcrl
shll
cmp
jns
and
fstpl
xchg
xchg
sub
dec
pop
inc
addr16
cmpsb
push
sub
lds
mov
add
imul
loope
sub
fists
pop
xorb
jb
adc
push
push
dec
adc
pushf
gs
fistl
and
call
cld
lds
add
mov
mov
adc
mov
andl
mov
push
mov
push
mov
jge
jae
inc
pusha
mov
shll
imul
jne
pushw
push
cmpsb
mul
ret
aad
jae
mov
aam
test
cmpsl
adc
in
shlb
sti
dec
shrb
ficompl
enter
add
xor
mov
in
dec
out
pop
push
das
cltd
subl
mov
vpmulhuw
lock
lcall
mov
stos
jmp
shr
inc
sub
xchg
pop
mov
sub
ljmp
sbb
test
pop
adc
or
mov
lods
rep
xchg
and
lcall
push
inc
movsb
jmp
out
mov
and
in
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
and
sbb
jno
sbb
popa
iret
sti
loope
movsb
xchg
mov
push
push
push
mov
ret
jae
fistpl
lahf
mov
sbb
add
xchg
cmp
repnz
cmpsb
sti
imul
mov
cltd
call
jecxz
push
cli
mov
and
gs
add
or
data16
mov
and
mov
sbb
xchg
aad
call
cmp
inc
movsb
push
lea
cmp
pop
inc
add
ffreep
into
and
mov
mov
push
mov
fisttpl
sub
lahf
and
xchg
iret
leave
xchg
outsb
inc
jle
enter
cmp
ss
popa
in
clc
xchg
push
cmp
adc
cmpsb
data16
push
push
bndstx
in
gs
push
xchg
rcl
lods
and
cmp
fwait
fstpl
sub
mov
inc
hlt
fdivl
icebp
fldt
stos
mov
xlat
inc
daa
fistps
jg
add
lea
xchg
xchg
les
or
sub
pushf
sub
push
add
mov
pop
lahf
cmpsb
insb
lahf
dec
inc
mov
out
mov
xchg
stos
push
add
enter
adc
loope
cmp
sbb
jecxz
ljmp
fs
aas
mov
lds
cmp
ds
out
mov
dec
and
add
pop
xchg
rolb
xchg
les
mov
sbb
sbb
push
jae
mov
lock
leave
stos
into
js
adc
movsb
test
les
shlb
push
and
fisubrl
inc
xacquire
jg
call
mov
adc
cwtl
loop
mov
out
cwtl
jle
es
sub
jmp
test
out
lods
xchg
aad
adc
nop
jae
in
les
add
mov
xchg
sbb
or
fsubs
or
and
adc
pop
cmp
lcall
lret
xor
add
scas
test
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
cmp
jl
pop
sbb
jno
sbb
psubusw
loopne
lds
test
fwait
jae
mov
jmp
mov
xchg
add
push
out
xchg
int
xchg
pop
jmp
aaa
add
out
fists
xchg
fcmovnbe
jg
and
pop
mov
jmp
adc
pop
dec
and
inc
mov
cmpl
mov
xlat
dec
mov
push
dec
rclb
mov
sbb
mov
sti
stos
push
inc
stos
mov
into
mov
mov
add
out
jo
cmp
test
subl
push
push
xchg
push
loope
in
mov
add
mov
adc
stc
pop
nop
stos
test
jle
dec
pop
testl
pop
das
mov
inc
lods
ljmp
lahf
push
flds
xlat
sub
jnp
cmpsl
insb
add
dec
imul
push
xchg
mov
dec
cwtl
pop
jg
or
cmp
fisubrs
outsl
xchg
icebp
mov
dec
es
call
mov
lds
sbb
shlb
adc
clc
xchg
push
icebp
pop
push
xchg
add
and
sbb
fstps
lods
xor
inc
scas
out
test
mov
ja
aaa
jno
mov
lcall
push
inc
int3
es
adc
adcb
sbb
jle
mov
xchg
inc
cmp
push
pop
or
out
lahf
jae
xor
in
out
stc
pop
ficompl
fs
lahf
inc
daa
mov
incb
cmp
loop
daa
jns
flds
repnz
fstps
xor
arpl
cmp
je
ficoms
sub
mov
xor
mov
mov
inc
add
iret
je
fistps
lea
int
xchg
pop
xlat
in
mov
cltd
repnz
es
iret
ss
xor
sahf
cwtl
ja,pt
mov
xchg
repnz
dec
pop
loop
scas
in
push
dec
imul
popa
mov
lahf
sbb
popf
jmp
enter
sub
mov
xchg
cli
rcrl
and
cwtl
or
fstpl
ret
lods
and
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
icebp
pop
xor
fbld
jle
aam
sbb
cmpsl
loopne
jb
lret
mov
xchg
ljmp
movsb
mov
pop
dec
clc
add
aas
dec
arpl
add
jp
insb
xor
pop
mov
xchg
dec
push
xor
pop
lods
lcall
jbe
adc
repz
jno
add
ror
ja
add
inc
mov
push
insl
out
pushf
ja
loop
nop
cmp
xchg
mov
out
fdivl
je
imul
in
push
pop
dec
or
xchg
scas
xlat
call
push
mov
in
push
repz
call
xchg
push
adc
push
add
vsubps
lods
insb
ds
das
nop
outsb
or
xchg
aaa
inc
dec
iret
xchg
mov
inc
test
push
test
push
or
pop
adc
repnz
icebp
mov
pop
pop
incb
sbb
push
mov
into
mov
shlb
inc
cltd
add
jno
pop
mov
dec
das
testl
xchg
jg
out
pop
lahf
repz
jno
add
jle
mov
push
or
rol
mov
scas
int
popf
push
cmc
pop
pop
sarl
dec
xor
addl
or
xchg
in
sbb
iret
or
mov
sbb
or
add
addr16
frstor
movsb
push
push
and
mov
pop
popf
xorb
lcall
dec
push
sub
mov
ret
pop
movsb
pop
xor
popl
sti
lods
fsubrs
push
adc
hlt
test
cld
add
icebp
mov
neg
jne
bound
pop
mov
push
in
xchg
leave
cmp
mov
xchg
and
ja
and
shll
jp
das
sti
xor
xor
push
ja
push
cmp
insl
aaa
cmpsb
push
into
xor
imul
int
fsubs
push
imul
and
insb
insl
icebp
roll
push
in
jecxz
aam
divb
cltd
xchg
pop
add
mov
push
mov
mov
sbbl
lods
in
pusha
insw
loopne
iret
rorb
ja
in
pop
cmp
std
sbb
and
xchg
sub
xchg
and
ret
sarl
xchg
push
in
movsl
push
inc
mov
xchg
push
scas
movsl
xchg
icebp
lods
xor
popf
stos
inc
pop
jp
test
pop
xchg
add
mov
insl
push
pop
sahf
inc
sbb
out
cli
leave
sub
gs
iret
aaa
addr16
xor
push
in
data16
negl
cmp
add
sub
mov
outsb
mov
inc
into
xor
scas
rorb
dec
jne
repz
add
pushl
or
pop
xor
push
jl
xlat
inc
xchg
jmp
sub
push
fwait
in
aaa
add
out
int3
push
inc
or
push
in
mov
push
mov
pop
cs
popf
push
or
in
out
or
jl
jo
fsubp
push
adc
dec
mov
setae
stos
push
jno
and
mov
stos
imul
test
push
or
xchg
xor
and
mov
lock
jo
lods
push
sbb
cld
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
xchg
fdivrp
aam
gs
add
mov
leave
mov
mov
sub
dec
mov
lods
xor
mov
movsb
fcmovnbe
pop
xchg
add
mov
push
add
lods
jl
mov
mov
aad
imul
sahf
ret
sub
mov
lahf
in
dec
popa
jp
arpl
xlat
mov
movsb
xchg
ret
jb
outsb
jge
sarb
push
mov
inc
andl
pop
je
mov
dec
add
or
add
fwait
xchg
pop
imul
out
cltd
cltd
or
aam
loopne
xchg
pop
pop
insl
mov
fisubrl
sub
out
mov
mov
lret
shll
fbld
inc
dec
mov
adc
repz
mov
fsubr
outsb
test
dec
xchg
int3
mov
inc
inc
mov
adc
xor
stc
ret
xchg
lock
jnp
adc
out
jbe
inc
pop
adc
adc
je
aas
sbb
cmp
push
repz
xlat
or
aas
sbb
mov
mov
dec
xor
mov
adc
in
xlat
aad
inc
push
mov
and
jno
mov
or
std
xor
mov
stos
xor
mov
scas
xchg
ljmp
sub
enter
xchg
or
sbb
test
jg
sbb
sahf
push
stos
insb
mov
xor
cs
stos
cwtl
cmpb
mov
pop
sti
fadds
lcall
push
leave
mov
and
pop
pop
mov
call
les
ret
dec
xchg
sbb
pop
cmp
iret
stos
rcrb
loop
push
mov
popf
aam
lds
sbbl
jno
or
push
loope
mov
and
bswap
cmp
push
add
negl
xchg
mov
ficoms
push
in
xchg
or
xor
sti
jns
push
sbb
cmpsl
popa
xor
mov
sub
clc
shll
stos
scas
and
aas
mov
gs
adc
pop
jecxz
push
and
loop
pop
cmp
lret
pop
or
jl
pop
aaa
js
cwtl
mov
xchg
mov
in
adc
inc
loopne
adc
inc
faddp
sub
pop
and
in
pop
cli
mov
cmpb
inc
jl
push
ret
scas
and
fcmovnu
test
push
sbb
mov
xchg
dec
popl
out
dec
and
dec
std
nop
dec
jnp
movsl
sbb
pop
negb
push
pop
repz
xchg
adc
xor
pop
lret
and
mov
loop
loope
inc
aad
jp
insb
test
mov
lock
stos
filds
into
faddl
testb
mov
cmpsb
divb
mov
pushf
fwait
addr16
jl
mov
insl
rorl
fstpl
sbb
adc
and
les
out
stos
cmp
push
decb
inc
lods
add
sbb
pop
leave
int
das
insl
mov
pop
sbb
in
icebp
or
dec
xchg
or
lcall
sub
shll
jmp
out
push
test
aaa
pusha
jne
jnp
ja
mov
pop
dec
push
cmc
push
faddl
or
in
push
in
cmp
ljmp
xlat
roll
lods
int
push
jmp
imul
mov
mov
out
in
in
sbb
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
movsl
mov
stos
adc
sbb
jne
loope
jns
in
jecxz
dec
or
mov
xor
and
jecxz
sbb
add
pop
and
dec
mov
enter
cmc
testl
fwait
shll
mov
mov
in
jl
cli
jne
clc
and
mov
mov
cmovbe
divl
js
push
sub
dec
inc
jp
cwtl
xchg
aas
push
pop
jne
fdivrl
mov
push
dec
ss
jle
int
mov
xlat
sub
in
add
cmp
nop
mov
jno
sub
lea
inc
lcall
sti
pop
mov
sarb
movsl
push
scas
jmp
jge
ret
test
imul
xchg
popf
pop
xor
cwtl
xchg
ja
gs
hlt
notl
ja
dec
and
outsb
and
test
xor
or
mov
outsl
dec
cmc
ljmp
jg
xchg
lea
stc
pop
rolw
inc
mov
sbb
out
fcoml
mov
leave
or
clc
loop
insl
or
mov
sbb
ud1
das
daa
in
iret
ret
or
sbb
sahf
movsl
js
xchg
cltd
sarl
lods
mov
adc
cmp
loop
cmp
sbb
je
inc
test
mov
jg
sub
pop
fcompl
rclb
in
inc
push
cmpsl
leave
addr16
loop
sbb
cmc
enter
push
popl
inc
add
popa
add
mov
loope
lock
mov
lods
pop
mov
test
mov
dec
push
jo
xchg
cmc
sub
jae
push
test
xor
push
pop
popa
stc
xor
lret
sbb
lret
bndldx
mov
adc
add
cmp
mov
push
jecxz
xchg
sahf
pop
or
bound
notb
daa
inc
iret
add
ljmp
dec
push
and
push
in
test
pop
fcmovnbe
lahf
dec
xor
lcall
mov
and
shrb
jge
or
es
and
or
shl
xor
jg
add
jb
or
jns
pop
dec
push
aam
or
dec
cli
and
inc
jbe
mov
stc
jp
inc
iret
addr16
xchg
mov
jecxz
dec
inc
sub
das
adc
mov
and
in
shl
mov
nop
dec
mov
nop
or
mov
clc
enter
or
cmp
inc
stos
inc
jae
inc
lods
push
pop
lock
sub
mov
ss
or
push
insb
rorb
add
test
jo
fistpll
dec
and
or
xchg
lcall
mov
push
popf
jno
daa
es
sbb
adc
into
popa
pop
insl
nop
adc
aad
mov
push
outsl
mov
ret
hlt
mov
mov
out
stos
arpl
mov
andb
sbb
pop
test
jecxz
inc
lcall
xorb
fistpll
cmc
std
out
stc
push
xchg
mov
pop
fldenv
or
sbb
jle
ret
fdivs
sbb
and
adc
sub
mov
fwait
adcb
icebp
xchg
test
sub
mov
stos
mov
or
sarb
leave
xor
push
push
push
sbb
xchg
add
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
sub
stos
adc
sbb
dec
dec
daa
or
and
cmpsl
inc
or
and
dec
neg
repz
rcrl
loope
pmulhw
pop
shlb
je
sbb
push
in
cld
mov
pop
cmpsl
stc
inc
inc
es
cmpsl
leave
cmpsl
or
inc
outsb
out
adc
mov
imul
inc
sub
ss
fwait
es
jns
lret
xchg
pusha
sbb
mov
mov
jmp
ret
dec
mov
push
mov
xor
mov
inc
mov
xchg
sbb
mov
dec
aad
or
xor
dec
nop
mov
xor
mov
scas
movsb
adc
fsubrs
std
cmp
ds
outsl
jnp
es
out
sti
dec
fdivl
dec
pop
xchg
pusha
mov
mov
jne
ljmp
mov
addr16
inc
rorb
mov
xorb
sahf
jne
fisttpl
popa
mov
xchg
pop
push
push
stos
push
sbb
xchg
xor
ljmp
lret
test
dec
xchg
push
jl
inc
add
into
mov
push
scas
sbb
out
aas
gs
daa
stos
cmc
in
outsl
pusha
jp
or
mov
dec
pop
cwtl
nop
popf
gs
inc
lock
pop
xchg
outsl
cwtl
insl
dec
or
andb
sub
les
sub
jle
dec
rcll
push
lods
adc
je
out
paddq
push
jle
fs
lea
or
cmp
jno
std
inc
inc
xlat
sbb
xor
cmp
mov
arpl
mov
lods
or
pop
push
faddl
mov
repz
pop
dec
scas
sbb
mov
ds
push
notb
rorb
cltd
out
sbb
out
mov
hlt
cwtl
jb,pn
fs
dec
jl
push
xor
jmp
push
dec
push
data16
int
push
cmpsl
or
sbb
int3
sub
es
add
nop
leave
je
jb
test
ljmp
je
xor
mov
xchg
xchg
dec
sub
popa
push
push
filds
dec
cmpsl
pushf
add
filds
call
inc
aam
ret
in
xlat
lock
xlat
cmp
jmp
xchg
sub
in
cltd
jo
cli
ja
and
loopnew
mov
jne
mov
mov
push
fbld
pusha
ljmp
or
popa
add
jecxz
jle
dec
xor
pop
push
inc
cmp
clc
cld
sub
jg,pn
xchg
imul
lret
push
mov
mov
xor
inc
push
mov
icebp
xchg
xlat
jge
push
push
nop
mov
xchg
inc
ret
mov
or
inc
or
mov
pop
loopne
adc
std
test
jg
testl
enter
push
and
or
sub
sti
negb
pushf
lods
sbb
insl
stos
dec
pop
mov
lahf
jae
pusha
mov
sub
pop
ret
loopne
push
out
xchg
aaa
or
jmp
in
or
cmp
stos
sbb
and
fs
cltd
repnz
sahf
into
jg
push
mov
lock
add
mov
mov
mov
push
mov
ss
sub
push
sbb
push
imul
inc
mov
jae
call
je
xor
lret
xor
js
mov
adc
add
scas
sti
push
mov
cmp
adc
sbb
mov
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
loope
idivl
sbb
stos
adc
sbb
mov
out
xchg
ficomps
pop
fs
xor
xchg
cs
inc
decw
xchg
jbe
call
add
scas
outsb
jo
mov
out
sbb
sub
pop
mov
push
pop
adc
test
mov
xchg
and
sbb
jae
out
push
pop
mov
mov
cmp
lock
jmp
imulb
ss
adcl
sbb
jp
add
xchg
xor
push
fldz
sub
lahf
ds
addb
lcall
push
push
pop
movsb
dec
jge
jmp
cmp
std
ficoms
fiaddl
lods
gs
or
pushf
cs
or
leave
adc
jl
inc
pop
mov
mov
jbe
cwtl
xchg
push
push
pop
stos
lods
dec
incb
paddq
adc
nop
dec
shll
clc
aam
arpl
fidivrl
xor
hlt
cmp
mov
mov
xchg
stc
lret
push
in
fildl
cld
inc
xor
cli
iret
call
cli
pop
decl
test
cmp
out
popf
sbb
jp
dec
cld
and
dec
adc
push
pop
gs
jbe
jecxz
push
xor
iret
sbb
aaa
jmp
icebp
fistpll
ss
arpl
fmull
mov
adc
ret
jbe
cmp
add
out
mov
sahf
push
jg
push
push
jns
sub
out
sbbl
cld
sti
xchg
dec
jb
push
jb
es
push
scas
test
sub
test
fisubrl
pop
mov
jne
mov
xchg
inc
mov
mov
dec
cmp
pushf
in
fucomip
rorl
lcall
jg
imul
fsubs
aad
out
out
mov
imul
or
outsb
push
xor
test
lock
mov
cmpsl
xor
rorl
and
fs
xor
arpl
jbe
ret
sti
inc
mov
sub
jae
sub
and
fldenv
cwtl
fists
ds
jmp
pop
dec
add
lahf
aad
push
xchg
pop
rorl
movsb
rorl
add
cmpsl
movsl
addr16
jo
mov
pop
test
sbb
push
sbb
lret
and
push
popa
inc
pop
xchg
cmp
jmp
ret
addb
xchg
mov
les
test
sahf
dec
cmp
xchg
cmp
loope
pop
decl
insb
call
mov
imul
rol
std
repnz
mov
inc
lea
cmp
inc
mov
mov
je
push
xor
xor
aaa
pop
subb
lea
mov
adc
int3
outsb
mov
movsl
mov
push
mov
add
nop
loope
mov
mov
sbbb
int
hlt
xlat
xor
adc
adc
lcall
mov
jge
mov
repz
in
out
mov
adc
push
ljmp
outsb
scas
push
mov
out
mov
adc
xchg
xchg
stc
and
dec
sub
insb
push
aam
jne
in
pop
test
sub
dec
hlt
xchg
dec
fimuls
fdivrs
in
dec
popf
push
rorb
push
sbb
fcoms
pop
add
add
fimuls
icebp
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
sub
and
sbb
jg
daa
icebp
mov
ljmp
pop
sub
mov
cmp
cmp
xchg
sbb
cmpsb
add
lock
icebp
lock
inc
xchg
mov
ds
add
lods
mov
les
or
cmp
sbb
mov
popa
insl
add
stc
dec
cmp
xor
pop
std
fnstenv
icebp
pop
sub
out
or
mov
insl
sub
jmp
pushw
mov
aad
popf
movb
xor
inc
data16
rcl
repnz
adc
les
std
fisttpl
inc
into
cmp
cmpsl
jle
xchg
nop
push
mov
jmp
test
sbb
add
xchg
dec
mov
in
mov
xchg
or
test
xchg
shlb
mov
enter
jbe
sahf
inc
sbb
xchg
mov
into
dec
xchg
pushf
cmp
cmp
fildl
sahf
pop
lods
mov
test
pushf
imul
push
inc
out
xchg
xchg
inc
xchg
xor
xor
fisttps
pop
and
in
sbb
sub
js
inc
aam
rcll
inc
movsl
xor
jo
bound
jg
or
pop
xor
daa
mov
push
jmp
push
iret
xchg
push
jnp
mov
add
cwtl
cmp
leave
xor
ret
adc
out
fisttpll
shll
adc
add
xchg
inc
insl
rorb
je
fs
pop
push
pop
pop
xor
and
cmpsb
mov
fmul
hlt
gs
sub
cmp
lock
add
cmp
inc
out
sub
and
push
fsubp
and
mov
jecxz
inc
insl
pop
ret
shl
out
and
fisubrl
cs
and
cmp
pop
aad
jl
imul
mov
sarb
cmc
jo
cs
dec
mov
sub
sti
sbb
mov
xchg
or
inc
mov
mov
stc
lea
xor
cs
pop
xlat
mov
cmp
iret
pop
dec
out
sub
call
out
shr
adc
lds
mov
pop
daa
data16
sti
pop
inc
loope
sbb
aaa
test
addr16
cmpsb
fimull
pop
in
in
or
adc
nop
push
mov
push
cmpl
xor
pop
insl
and
cmp
outsb
mov
insl
into
hlt
sbb
pop
pop
fbstp
dec
xor
and
test
es
pop
xchg
jge
stos
fsubr
into
arpl
js
sbb
out
shll
mov
and
mov
sub
in
mov
sahf
into
or
sub
lods
dec
fbld
mov
xchg
and
add
xchg
addr16
in
int3
neg
in
jbe
in
lea
sbb
ret
cmp
sbb
inc
test
jle
push
mov
inc
out
pop
lods
or
fadds
sti
lret
mov
push
das
fs
scas
jo
das
aam
lods
and
mov
jg
mov
jne
jp
in
stos
add
dec
inc
aam
sub
or
loop
loopne
popf
dec
or
mov
sbb
mov
sub
and
add
cltd
lahf
mov
clc
inc
enter
xor
and
aaa
mov
sbb
sub
repnz
subb
lahf
mov
xchg
faddp
cmp
cmp
repz
and
sahf
inc
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
mov
rclb
sbb
inc
sarb
mov
inc
pop
or
jg
cld
xchg
fdivl
mov
sbbl
test
sti
repz
lods
stos
jecxz
sub
xchg
enter
ss
fs
cmp
and
pop
fiaddl
or
sbb
rol
aas
test
mov
dec
std
test
inc
outsl
xchg
iret
fstl
jp
mov
fiaddl
adc
mov
bound
sbb
cld
mov
pop
push
push
mov
arpl
push
outsb
ljmp
inc
sbb
pop
add
inc
sbb
aam
rolb
mov
mov
gs
leave
cwtl
sub
cltd
cmp
dec
enter
es
ljmp
lcall
adc
insl
daa
adcb
out
xor
adc
insb
dec
mov
jnp
mov
mov
pop
xchg
popa
inc
imul
xchg
and
out
lret
es
jp
jle
mov
mov
lods
inc
ljmp
aad
sbb
and
push
sahf
mov
les
inc
es
sub
jnp
aam
push
arpl
cmc
mov
push
mov
lret
ret
inc
iret
les
movsb
adc
andb
mov
add
pop
and
jbe
cwtl
mov
addr16
add
dec
movsb
mov
push
add
or
xorb
enter
xor
insb
pushf
fwait
or
addr16
aam
sbb
or
sub
mov
pop
int
pop
sbb
mov
mov
aaa
sub
inc
popf
leave
rorl
and
dec
mov
dec
mov
xchg
sbb
fs
aaa
dec
adc
mov
nop
pop
fsubl
xchg
shlb
jnp
and
sbb
in
jge
and
mov
jo
xchg
es
adc
xor
pop
cmp
mov
icebp
push
push
aaa
add
cmp
cli
movsb
mov
out
cmpsb
inc
mov
in
stos
push
jmp
fdiv
pop
sub
mov
into
push
jecxz
add
mov
push
sbb
movsl
push
xchg
mov
nop
lret
dec
mov
pop
xchg
mov
nop
pop
pop
add
pop
jae
mov
icebp
mov
jns
cli
push
aad
int
dec
ljmp
ja
fcomps
adc
fs
or
lock
iret
dec
jp
push
cmp
adc
stos
xor
push
inc
mov
scas
sbbb
inc
aaa
lahf
mov
xorl
or
mov
mov
bound
aas
pop
pushf
mov
addr16
aaa
adc
lea
fildll
mov
scas
jge
ss
outsb
and
mov
and
add
add
cmp
js
adc
push
lds
jo
bound
push
jge
mov
xchg
mov
test
add
mov
fsubr
or
lcall
in
mov
cwtl
xor
and
push
mov
push
sub
sub
xor
loope
inc
iret
cmp
mov
out
andl
in
enter
dec
mov
jle
or
mov
inc
in
les
ret
mov
popf
dec
repnz
jmp
pop
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
aad
jo
and
sbb
adc
sbb
lock
aad
ss
outsb
jecxz
sbb
pop
test
xchg
sbb
cmp
cwtl
mov
cmpsb
push
pop
inc
push
sub
cmp
mov
jecxz
and
push
sbb
cmp
popf
iret
xor
mov
push
movsl
enter
call
push
neg
aas
xor
mov
imul
in
jne
gs
cld
lret
jae
jmp
jmp
add
sub
mov
js
test
int
js
roll
mov
adc
test
inc
popl
sub
mov
sub
xor
repnz
jne
fstpl
sub
scas
xor
out
mov
mov
nop
xchg
mov
pop
xor
push
push
pop
xchg
sub
sbb
mov
xchg
inc
jae
xor
mov
aad
xor
fiaddl
cmp
sbb
mov
fs
cmp
adc
pop
and
std
stos
sub
inc
push
mov
cmpsl
int3
int
mov
sbb
cmpl
movsb
aas
xor
cmp
xchg
xorl
ror
fs
mov
xchg
das
cmpl
pop
dec
jne
xor
fnstcw
hlt
pop
mov
adc
sbb
mov
stc
aas
jbe
push
ss
sub
mov
out
xor
movsl
pop
inc
and
pushf
push
sub
add
mov
push
movsb
cmp
and
lock
xor
sbb
mull
icebp
sbb
data16
mov
dec
mov
in
andb
add
shlb
repz
ja
mov
dec
out
in
xrelease
push
lcall
jmp
jbe
test
rcl
mov
add
push
orb
dec
xchg
ds
mov
mov
adc
movsb
adc
stc
arpl
hlt
psrld
pop
movsl
mov
mov
fisttps
xor
dec
fstl
cmc
cmp
sbb
xor
dec
jnp
mov
xlat
sbb
cmp
xchg
pop
dec
dec
call
bound
movsl
shlb
fisttpl
pop
test
mov
outsb
cmp
pop
xchg
xor
push
xchg
pop
rorl
jnp
cltd
enter
out
sbb
jnp
movsb
push
mov
lods
and
and
xor
push
ss
stc
mov
test
filds
not
mov
loop
lcall
jno
ljmp
xor
dec
fnstcw
lahf
jo
daa
das
mov
adc
jecxz
jbe
dec
sbb
gs
xchg
mov
jns
sub
jmp
ljmp
addr16
movsl
lret
jl
pop
int
fstps
je
call
shrb
testl
ljmp
cmp
jg
mov
xor
rcrl
mov
imul
stos
pop
pop
lret
jne
cmp
and
cwtl
push
iret
imul
jbe
cmp
sbb
lcall
mov
ljmp
out
sub
ret
jmp
sbbl
out
decl
push
clc
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
lods
mov
sbb
adc
sbb
xchg
nop
loopne
sarl
lods
das
sub
inc
mov
lahf
mov
repnz
mov
in
sub
adc
fbld
push
jns
lock
push
xor
js
aad
out
fmul
fisubrl
scas
hlt
mov
or
scas
shl
inc
insl
lret
cwtl
xchg
or
jne
ja
das
call
or
cmc
loopne
mov
jmp
pop
aam
xor
in
dec
gs
mov
cmp
xchg
lret
loopne
bound
sub
daa
iret
out
das
sub
aad
pop
pop
push
fcmovne
add
or
movsl
es
ficomps
xchg
outsb
fldt
loope
loopne
pop
stc
scas
mov
int3
mov
rcr
insb
push
int3
in
adc
insl
insb
sbb
push
mov
cmp
mov
gs
pop
cld
mov
int3
mov
and
xchg
push
pop
je
push
sahf
xor
or
outsb
mov
stc
add
add
pop
outsl
ret
out
lods
jle
xor
mov
dec
je
in
and
push
aam
es
popa
shlb
sar
lret
dec
cmp
jbe
ficoms
scas
xlat
sahf
fwait
pop
mov
icebp
mov
stos
mov
cmp
out
insl
mov
aaa
push
adcl
subl
mov
hlt
or
jne
aad
cs
jae
cmp
adc
mov
dec
and
ret
inc
rcr
xor
push
lret
mov
lret
sbb
mov
fistpl
popa
pop
leave
fwait
or
xchg
daa
stos
test
rcrl
xchg
lret
xor
subl
pop
mov
jbe
mov
cmc
push
xor
fwait
mov
bound
cmc
insl
mov
outsb
xor
push
rcl
pop
cmp
push
ret
cmp
arpl
cs
pop
mov
sar
popa
xchg
mov
and
scas
out
push
aam
mov
jae
pop
and
sub
fstpl
or
pop
xchg
gs
pop
xor
jp
lahf
and
imul
and
mov
cwtl
xor
or
and
int3
push
movsb
cltd
mov
cmp
cmpsl
mov
xchg
xchg
or
dec
mov
in
inc
jg
dec
mov
inc
aad
aam
sbb
pop
mov
ret
nop
icebp
jbe
mov
in
xchg
mov
inc
pushf
das
cltd
ret
enter
jecxz
push
data16
xor
or
mov
icebp
and
xor
into
add
jne
out
xchg
lds
sbb
hlt
sub
jg
xchg
adc
adc
or
jl
sbb
out
test
push
push
enter
arpl
out
and
mov
xchg
sbb
clc
jl
mov
add
bound
sbb
jge
adc
push
pop
ret
in
add
je
incb
cltd
fdivl
aad
push
pusha
rolb
xor
jle
movsl
roll
mov
mov
imul
pop
mov
shll
push
shrb
and
jb
mov
repz
fcmovnu
insb
cwtl
dec
jnp
cmp
cmc
loopne
test
mov
loopne
and
add
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
pop
inc
push
push
push
sbb
push
mov
and
push
sub
loop
cmp
popf
mov
je
std
push
jl
jae
push
cmp
call
movsl
adc
lahf
imul
mov
xchg
mov
movsl
out
cwtl
inc
test
mov
test
rol
and
mov
shrb
arpl
rcrb
inc
sahf
cli
mov
pop
rcll
cmp
mov
movsb
sub
lods
je
xchg
hlt
imul
mov
imul
sub
jb
and
pusha
fsubrl
aaa
in
cmc
scas
std
jmp
jcxz
in
sub
sub
cmp
inc
insl
mov
sub
dec
xchg
test
les
sahf
lods
pop
sub
test
std
loop
icebp
inc
std
cmp
xchg
idiv
inc
push
mov
sti
fstpt
lcall
shr
mov
lea
push
roll
mov
jb
iret
scas
dec
les
xchg
and
test
les
cmpsl
call
sti
pop
pop
pop
xor
test
pop
push
paddsb
cmc
arpl
xorl
mov
cwtl
sbb
pop
sbb
daa
arpl
pop
inc
jnp
mov
cmpsl
inc
sbb
stos
fdivrl
push
mov
pop
jle
inc
ror
icebp
xchg
sub
out
add
cmp
cli
mov
cltd
test
dec
push
fnsave
push
aam
sbb
das
call
sar
in
lcall
add
subl
lock
mov
cmp
repnz
dec
es
clc
jmp
es
mov
dec
in
faddl
push
push
lret
push
mov
jecxz
pusha
mov
std
mov
pusha
aas
or
push
sub
add
mov
xchg
push
stos
mov
pusha
incb
popa
pop
aas
data16
das
daa
sahf
cmpsb
pop
sahf
adc
add
daa
mov
xchg
sahf
xchg
jp
es
in
outsl
cmp
inc
cmp
and
sub
jg
repz
xor
fs
and
push
lods
loopne
xchg
cmpsl
lods
aad
loopne
mov
js
and
push
dec
out
test
adc
fs
xchg
or
add
mov
sti
jbe
or
sub
adc
ja
mov
divb
pop
xor
dec
push
sarl
xchg
inc
mov
or
mov
sbb
xor
sub
mov
mov
arpl
jo
pop
subl
ret
sub
lret
repnz
lret
adc
stos
mov
jge
shlb
jecxz
imul
out
les
mov
in
sarl
stos
rcrl
imul
sub
sbbb
rcrb
in
scas
xchg
dec
push
jns
jae
cwtl
stc
push
leave
push
or
mov
or
sahf
sbb
adc
fmuls
cli
or
mov
mov
inc
sub
inc
daa
cwtl
movsb
mov
mov
add
add
cli
mov
jo
lahf
sub
push
inc
scas
mul
stos
scas
lock
addl
xchg
add
push
dec
sbb
inc
mov
mov
mov
lcall
jg
or
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
leave
lds
push
sbb
mov
jge
js
arpl
lea
inc
dec
xchg
inc
ror
in
mov
loop
sahf
sub
cmp
outsb
sub
ret
jl
or
inc
dec
rcr
imul
cmp
xlat
mov
int
jno
mov
jo
pop
js
cmp
jnp
mov
test
lea
inc
and
inc
lock
jbe
adcl
jnp
mov
cltd
aad
rorb
sub
push
push
repz
inc
fnclex
ss
rcrl
bound
and
push
sbb
or
ficoms
xor
mov
sahf
and
rcrb
mov
push
and
jl
dec
loop
adc
pop
repnz
xorb
or
jbe
ja
popf
out
int3
dec
sbb
adc
sub
xchg
fsubl
stc
test
leave
cmp
xchg
stc
dec
pop
mov
fcompl
mov
dec
imul
daa
xorl
pop
or
push
or
sbb
and
dec
pop
or
fistpl
xor
cmp
or
mov
lods
push
test
push
push
out
adc
jns
sbb
add
rol
cmp
jb
inc
cmp
inc
xor
push
pop
decb
lods
dec
sub
ja
ja
push
js
loop
repnz
xorb
cmp
inc
ret
mov
movsb
jnp
xor
jno
nop
repnz
shrl
or
adc
push
pop
xor
mov
jmp
push
inc
push
cmp
xor
mov
call
jne
xor
jnp
inc
je
loop
jae
dec
loop
xchg
aas
xor
or
sbb
in
mov
aad
mov
ret
adc
pop
xchg
sbb
xchg
cmp
lea
stos
push
outsb
out
popa
icebp
aam
lret
jg
ds
or
cmp
cmp
mov
jg
xor
movsl
inc
in
dec
in
mov
xchg
pop
out
lds
sbb
add
mov
xor
mov
leave
dec
add
mov
jl
adc
sub
ja
aad
fwait
jb
adc
les
adc
lock
sahf
mov
fimull
or
mov
int3
int
push
mov
pop
mov
aas
sub
sbb
fcmovne
test
andl
fistpll
adc
and
cmpsb
mov
inc
add
cmc
pop
xchg
roll
insb
insl
mov
sti
sti
repz
lock
cmovb
push
sarb
mov
in
pop
jle
into
insl
or
stos
dec
jp
sarl
pop
and
jle
mov
sub
bound
pop
and
xor
dec
repz
in
pop
gs
in
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
pusha
stos
mov
or
sbb
cmp
xor
sbb
cmp
mov
clc
mov
outsb
dec
repz
add
test
sti
addr16
call
pop
mov
xchg
pop
jg
pop
cmp
or
lods
mov
xor
cld
iret
repnz
pop
mov
mov
orl
push
stc
lahf
orb
xchg
cmp
cmp
mov
sarb
jns
pop
or
or
imul
mov
add
cli
fsubs
fwait
test
pop
pusha
jo
sub
scas
inc
mov
fildl
cli
hlt
xor
enter
add
test
mov
cmc
out
sar
pop
aam
jmp
loop
dec
and
int3
xor
aam
out
ja
in
ljmp
ret
movb
sub
stc
shlb
or
jo
xor
sub
out
xchg
mov
sub
test
subb
cs
out
std
mov
fpatan
cmp
aas
sub
push
xchg
or
and
lret
add
push
dec
pop
je
cld
fiadds
stos
jnp
fldenv
or
push
mov
jbe
in
inc
les
roll
fists
call
pop
dec
mov
lcall
shl
sti
mov
jb
ret
mul
dec
pop
popf
xchg
das
ffree
sbb
push
inc
das
push
jnp
push
jg
mull
cmp
test
and
sbb
xor
hlt
sub
call
movd
shrb
movsl
jecxz
pop
pop
lods
lock
add
imul
orb
and
add
sub
test
pop
repz
inc
test
mov
sti
jbe
push
push
pop
movsbl
mov
mov
bswap
or
mov
aas
ja
xchg
stos
popa
enter
rorl
lahf
xor
in
insb
jp
lcall
mov
push
lcall
mov
insl
jge
fldcw
out
cltd
add
xor
jp
mov
dec
adc
add
cmpsb
loopne
adc
push
scas
cmpsb
push
xchg
pushf
xchg
mov
adc
loop
inc
pushf
sub
jae
aad
push
cmp
cmp
ljmp
call
or
xor
pop
insb
jno
leave
dec
jnp
mov
fs
adc
sbb
fisubrs
jb
pcmpgtw
subl
adcb
sub
add
and
pop
arpl
lcall
cmpsb
xor
packssdw
mov
cmp
dec
mov
push
adc
shl
push
cmp
xcrypt-ofb
cmpsl
test
js
nop
push
pushf
stos
popa
adc
addr16
cmpb
pop
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
xlat
out
aaa
push
add
sbb
test
in
sbb
mov
bnd
lret
cmpsb
das
aam
imulb
into
ds
push
rcrb
pop
xchg
xor
add
movsb
and
jecxz
push
iret
das
add
aam
outsb
mov
mov
scas
or
fimull
pop
or
fstpl
repnz
arpl
aaa
iret
gs
or
mov
ret
mov
sbb
outsb
mov
daa
mov
xchg
fidivrs
or
ja
jl
pushf
ret
les
sub
cmp
clc
fwait
pop
insl
mov
es
cmpsl
gs
mov
and
loopne
cli
mov
mov
nop
push
inc
fistpll
fdivp
cmc
jle
mov
cmp
push
xor
and
cwtl
xchg
aam
mov
aaa
or
mov
iret
mov
cmpsl
pop
push
mov
imul
cli
imul
cmpsb
mov
or
std
loope
adc
lea
arpl
mov
add
and
mov
mov
lock
jnp
js
pop
loop
sub
hlt
or
mov
insb
mov
loop
lret
mov
fisttps
sub
push
loopne
jmp
jno
out
adc
sbb
lahf
je
icebp
or
cmp
int
push
sbb
adc
fstps
jp
dec
sub
xor
insl
mov
xor
adc
out
cli
jp
xor
rcrb
hlt
inc
fstps
xchg
or
pop
icebp
call
fucomi
out
mov
enter
mov
push
sbbb
sbb
push
addr16
xchg
mov
or
mov
jo
imul
pusha
sbb
test
aad
out
lods
fisttps
mov
hlt
not
adc
in
addr16
adcl
test
or
cmp
in
arpl
mov
in
inc
ds
sbb
inc
leave
push
xor
stc
xor
and
and
add
enter
aam
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
mov
cld
push
sbb
mov
movsb
pop
gs
cmp
psraw
push
sbb
cmp
cmp
jnp
out
mov
pop
mov
cld
jg
ret
int3
subb
sbb
pop
cmp
cmc
push
mov
mov
jb
mov
xor
mov
rcrl
fcmovb
dec
inc
push
divb
mov
arpl
mov
pop
cmp
ret
sbb
sub
pop
push
fstpt
cmc
addr16
sbb
push
sub
xchg
sbb
sahf
xor
push
inc
jne
jg
push
es
rcrl
cmp
cli
sbbb
dec
add
into
addb
xor
pop
mov
out
cmp
nop
jge
insb
xor
pop
inc
loop
inc
movsl
scas
adc
movsl
xchg
cld
push
shlb
add
cmp
or
lds
push
out
pushf
pop
pop
aad
add
mov
ret
sub
scas
jl
xor
nop
decb
sti
fucomp
pop
rcr
jmp
sti
or
jecxz
inc
and
lea
adc
ret
jl
pop
or
dec
mov
pop
into
sub
fdivl
or
enter
mov
mov
lods
test
call
push
sub
sahf
mov
mov
popa
nop
lock
bound
xchg
inc
popf
in
dec
push
push
cwtl
mov
outsl
clc
sahf
js
popa
push
inc
test
mov
call
std
xchg
std
push
rclb
adc
xor
addr16
xchg
sub
int3
fdiv
jl
push
inc
mov
mov
arpl
test
push
fidivs
push
enter
sbb
cmpsb
pusha
xor
add
scas
jecxz
adc
inc
xchg
sub
aad
test
mov
je
pop
mov
jmp
lds
std
push
dec
sbb
shrb
mov
aaa
fiaddl
in
scas
scas
repnz
jp
andl
fwait
dec
icebp
shr
inc
addr16
mov
rol
scas
mov
scas
cli
rcl
push
lcall
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
jge
fbld
dec
add
adc
dec
mov
xor
pop
push
lock
dec
scas
adc
fs
xchg
mov
rorb
sub
popf
or
jnp
lock
aaa
mov
fisubl
in
incb
in
test
cmp
je
scas
adc
test
sub
in
pop
pop
adc
jmp
mov
sbbb
sub
inc
push
mov
arpl
lret
mov
cwtl
faddp
and
mov
jl
into
cmp
das
ljmp
loopne
jg
out
inc
mov
aad
mov
data16
fnstcw
hlt
mov
and
jle
jne
imul
lock
movsl
jecxz
sub
sbb
lods
xor
jle
aam
mov
enter
fdivp
out
jbe
arpl
xor
jnp
mov
xor
and
push
inc
mov
stos
jo
and
ror
add
push
in
cmc
cmpsl
aam
lods
jbe
xor
lea
jb
push
xor
and
repz
xchg
push
pop
dec
push
jo
pop
jge
call
mov
mov
neg
clc
cmp
aad
shr
push
popl
inc
out
mov
lret
push
or
call
push
push
ficoml
loopnew
test
loope
les
orl
inc
lret
mov
mov
xor
ja
imul
or
lds
jl
or
call
adc
popa
cmp
dec
outsb
jmp
and
fwait
aad
push
es
or
add
xchg
cmp
cmp
adc
mov
cmp
xor
xor
leave
icebp
cmp
cmc
cli
fs
push
add
push
jmp
mov
push
rcrb
and
or
mov
inc
iret
scas
push
adc
popl
iret
add
stos
xor
mull
xor
call
mov
stos
push
push
shrb
pop
jnp
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
mov
push
sbb
adc
sbb
popa
pop
sub
cmpsb
arpl
mov
icebp
sub
jb
mov
inc
adc
lret
jnp
jecxz
mov
xchg
cmpsl
add
push
fmuls
mov
dec
je
arpl
xchg
ja
popf
cmp
pop
dec
lahf
mov
add
fldl
div
daa
ret
sub
js
pop
popl
into
mov
repnz
lods
sub
mov
jmp
adc
dec
push
adc
call
lods
xlat
jl
pop
insb
jg
mov
cld
icebp
es
lods
jne
xor
outsl
fwait
iret
lods
cmp
jmp
jns
movsl
xchg
stos
sub
cwtl
cmp
sub
xchg
das
mov
fs
cld
mov
push
sarl
add
or
pop
or
outsb
addr16
push
and
pop
cmp
cmp
insl
lret
inc
xchg
add
ret
imul
or
jae
fucomip
pop
rolb
mov
push
clc
sbb
arpl
je
stos
push
cmp
shr
ret
in
and
mov
adc
sbb
mov
fnstsw
nop
sbb
mov
xchg
js
or
or
dec
and
jb
cmpl
int3
cs
stos
mov
cmp
sub
into
mov
mov
xor
into
and
cmpsl
or
pop
xchg
inc
xor
xor
hlt
dec
mov
movl
std
and
cs
dec
mov
sti
lahf
fwait
dec
add
mov
roll
fdivrs
dec
mov
mov
lock
fndisi(8087
repz
lahf
push
pop
fisubrl
ljmp
pop
hlt
sub
pop
adc
push
xchg
xchg
les
pop
adc
std
cltd
sbb
sahf
jnp
xchg
sarw
mov
push
dec
mov
sbb
inc
sub
movsl
lret
outsl
or
popa
mov
sub
cmc
sub
cmp
loopne
push
enter
mov
es
mov
dec
push
or
fcomi
test
push
mov
pop
js
divb
adcb
sbb
xor
nop
addb
stos
js
in
cmp
idivb
cmp
pop
or
fwait
jno
addr16
cmp
sub
lea
mov
mov
pop
mov
popf
dec
push
adc
xchg
mov
insb
push
mov
and
into
cmp
sub
xorb
in
xchg
mov
rcll
mov
aaa
fwait
lods
int
cltd
dec
cwtl
jle
out
imul
lret
cmpsb
xchg
inc
mov
xlat
dec
hlt
xchg
enter
xlat
sarl
sub
xor
and
nop
mov
mov
jnp
jb,pt
out
mov
test
jecxz
mov
pop
mov
mov
into
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
mov
in
test
push
js
pop
jle
mov
jle
orb
and
in
push
push
jb
jae
out
xlat
jbe
cmp
mov
and
icebp
lea
scas
fsubrp
dec
mov
cmpb
inc
mov
fs
imul
jle
xor
jo
xchg
lret
sbb
xlat
test
jnp
addl
int
movsl
cli
setle
xlat
les
push
mov
cltd
sub
mov
sub
jne
inc
or
nop
mov
fdivs
pop
cmpsb
orl
ret
xchg
leave
repnz
jmp
out
mov
lahf
add
mov
pop
sbb
mov
int
cltd
dec
aaa
cs
dec
or
popa
jne
jns
sub
loope
arpl
jmp
cmpsl
out
mov
xchg
xor
sbb
push
push
mov
mov
or
mov
inc
push
aaa
xchg
arpl
sbb
mov
lcall
mov
das
pop
dec
into
mov
mov
test
and
and
ret
pop
int3
pop
pushf
lods
icebp
push
inc
mov
mov
fdivrs
repnz
scas
adc
scas
dec
push
inc
inc
cmpsl
rcll
xchg
mov
in
mov
dec
in
sahf
addl
ror
pop
imull
sub
dec
aas
jmp
and
mov
cmp
mov
pusha
sbb
fcomps
mov
jns
mov
inc
enter
mov
xchg
rorb
outsb
lds
ja
pop
sarl
sbb
mov
std
jae
mov
loope
xchg
or
dec
and
lds
xchg
dec
and
hlt
jns
dec
mov
sti
xchg
jmp
adc
gs
fadd
push
ja
in
pop
inc
inc
xchg
loopne
dec
aas
call
mov
xor
mov
arpl
cmp
xchg
fnstenv
inc
shll
test
insl
popa
cmp
into
pop
push
sub
addb
push
ss
pop
mov
inc
and
jbe
insl
xchg
mov
push
mov
jle
add
pop
pinsrw
push
dec
jge
cld
pop
inc
fdivrp
dec
hlt
mov
jae
mov
loop
test
push
xchg
sub
jnp
adc
add
pushf
adc
jne
jge
jbe
and
lds
inc
mov
jmp
in
xchg
aaa
dec
add
insl
jl
enter
mov
and
inc
inc
push
mov
dec
pop
inc
nop
and
mov
or
jl
sub
jae
sub
test
sahf
jp
movsl
rcrl
adc
stos
push
les
cltd
fadds
insl
inc
mov
nop
add
jge
adc
repnz
int3
insl
inc
dec
movsl
sbb
ficomps
out
jg
imul
outsb
inc
push
js
addb
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
or
sub
imul
punpcklbw
mov
jnp
insl
mov
das
inc
xchg
movsl
ds
lret
jmp
lcall
add
in
lret
data16
mov
sbb
cld
hlt
xchg
bound
push
stos
lea
mov
inc
gs
dec
xchg
inc
cli
push
sub
xlat
lret
imul
mov
popf
mov
sub
test
push
cltd
lahf
mov
imul
add
mov
sbb
nop
mov
mov
insb
mov
jmp
add
movsb
fcompl
sbb
jge
or
subb
fdivrs
cwtl
xor
xor
xor
add
pop
nop
pop
mov
mov
jge
loop
gs
in
out
ljmp
mov
pop
shl
cmp
xchg
mov
sahf
sub
pop
arpl
jl
jge
pop
rorl
sub
mov
in
popa
push
mov
out
jmp
repnz
mov
lahf
xchg
xchg
push
iret
add
bound
clc
in
pop
push
lcall
mov
cwtl
scas
or
jno
data16
add
lods
sbb
or
xchg
jmp
bound
movsl
cld
adc
adc
movsl
outsb
nop
inc
jge
loop
imul
push
jb
and
stos
or
pop
push
add
mov
out
roll
jecxz
leave
xor
pop
mov
sub
jae
pop
jmp
aaa
aad
add
add
repz
push
xchg
pop
lahf
xchg
add
fistps
movsb
aas
cmp
cmc
repnz
popa
sub
push
dec
jb
cmp
sub
cli
or
mov
lret
and
or
push
popa
xor
jb
data16
or
cmp
subps
lret
mov
ret
movsb
lret
push
inc
mov
mov
cmp
sub
mov
gs
xchg
out
fs
pushf
lods
sahf
pop
adc
loopne
jmp
push
mov
dec
xor
mov
je
push
xchg
bswap
xchg
mov
int3
xchg
loopne
hlt
add
repnz
and
adc
int3
add
cld
movsl
mov
cwtl
dec
std
test
fidivrl
fwait
inc
mov
mov
dec
or
inc
jp,pn
mov
scas
push
mov
je
cmp
add
xchg
lods
xchg
fmull
dec
shrb
lahf
loop
xor
mov
cs
in
inc
or
out
ds
loope
into
cwtl
das
inc
add
push
mov
adc
cwtl
leave
into
xor
sbb
jmp
add
cmp
cwtl
scas
adc
sub
rorl
repnz
lds
jbe
sbb
fs
fs
or
sub
jnp
fidivrl
pop
push
cltd
mov
mov
and
jmp
cmp
add
scas
ret
lods
loop
inc
inc
sbb
nop
fbld
insb
xchg
jnp,pn
cmp
mov
loope
cmp
lahf
mov
dec
mov
dec
mov
in
cmpsb
inc
inc
je
xchg
imul
or
mov
add
jge
cmp
inc
sub
filds
arpl
xor
add
fisubs
pusha
ja
and
sti
out
and
sub
push
push
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
mov
out
jp
cmp
aad
inc
push
cld
insl
loop
movsl
test
ja
rcrl
fisttps
mov
repz
cmpsl
pushf
subl
les
mov
push
xchg
or
dec
jmp
push
or
ss
rorb
fstpl
test
xchg
das
fwait
stos
xchg
jae
lods
xlat
je
dec
mov
add
testb
jl
push
cmp
xor
dec
pop
pop
movsl
xchg
das
test
ret
out
into
lret
stc
cmp
fld
adc
js
inc
daa
sahf
and
xor
sbb
in
aam
pop
cmpb
adc
jg
adc
movsl
daa
pop
inc
pushf
mov
add
cmp
outsb
fstl
fists
in
pop
and
push
cltd
cmp
pop
xchg
ds
mov
sar
test
pop
and
leave
cs
sbb
fsts
cltd
test
aad
mov
bound
fisttps
or
lahf
fwait
gs
mov
xchg
push
ljmp
iret
adc
divl
sarl
rolb
popa
mov
lea
lcall
je
les
add
out
mov
outsl
cwtl
adc
add
popf
cs
inc
add
popf
rcr
sub
sbb
cs
icebp
iret
sbb
cmp
cmc
ret
clc
xor
andb
rclb
sbb
add
pushf
cmp
jecxz
imul
js
inc
aam
sbb
pop
dec
cld
loop
inc
into
call
add
cli
dec
pop
and
dec
repz
push
pop
lock
iret
es
add
or
inc
dec
loop
int
sahf
push
mov
mov
fwait
out
dec
in
and
fdivrs
lods
cld
inc
cmovae
shr
imul
sub
mov
js
shll
movsb
mov
or
loop
xchg
loope
and
mov
lock
daa
subb
lock
insl
sub
add
dec
subb
cmp
imul
xor
stc
jle
push
mov
inc
push
inc
or
int3
fbstp
cli
clc
xchg
pop
fmull
inc
nop
cmpsb
jo
cmp
and
mov
lret
mov
scas
popf
lcall
mov
xchg
orb
in
jmp
inc
sbb
ret
fcomip
jno
push
dec
mul
pushl
add
push
test
iret
inc
cmp
test
fcoml
aam
leave
inc
or
add
xchg
jae
xor
in
mov
ror
sbb
jl
cmp
cwtl
insl
shl
jge
pusha
sahf
arpl
fwait
push
nop
or
sbb
cmp
in
cmc
pop
jb
sbb
ucomiss
mov
jp
in
or
cmp
sub
dec
inc
sti
fldenv
loope
mov
shrl
loop
shl
in
jge
dec
push
clc
inc
sbb
shl
inc
lds
and
and
aaa
sbb
fs
or
and
test
jl
jmp
cmp
pop
rolb
jl
dec
lds
inc
sbb
mov
sub
std
dec
pop
sbb
dec
push
and
pop
xchg
popf
in
les
bound
pop
popa
pushf
or
cmp
fisubl
push
dec
or
mov
dec
mov
sbb
insl
mov
movl
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
jge
jo
fsts
sbb
sub
add
notb
lahf
fmulp
mov
sbb
addr16
rcrb
xor
xor
data16
mov
sbb
mov
or
rorl
imul
push
pop
cmp
pop
test
clc
in
mov
push
cmpsb
fs
mov
cmc
outsb
mov
cmp
in
jb
push
xor
jno
daa
add
cmc
adc
aaa
arpl
int3
mov
mov
jg
mov
lcall
sub
sti
gs
push
test
cmc
jne
into
mov
jp
jno
lea
das
push
mov
xor
jmp
mov
push
jae
pusha
adc
stc
int
add
sub
in
mov
xor
mov
push
pop
jbe
int3
inc
ret
mov
out
std
sub
clc
lods
lret
push
test
stc
dec
pop
xchg
jae
xor
xchg
jns
mov
or
call
and
mov
adc
dec
push
scas
push
ljmp
mov
mov
iret
stos
mov
sti
cmp
out
mov
cmpsl
loop
xor
mov
push
inc
and
push
arpl
sti
cs
inc
jnp
mov
in
fwait
dec
sbb
aam
aaa
ret
mov
and
cmpsl
in
mov
lcall
popa
push
ja
push
sub
div
mov
aas
jns
ja
and
loopne
and
dec
sub
shll
lret
push
fcom
push
sbb
fs
jmp
pop
ror
loope
loop
push
mov
mov
push
lods
inc
sbb
std
sub
push
sbb
jle
loopne
push
sbb
xchg
ret
in
leave
repnz
jbe
scas
loop
enter
xchg
sbb
call
jns
push
jmp
enter
mov
jp
dec
pop
imul
xchg
xor
jno
push
mov
rcrl
ret
sbb
test
cmp
clc
ret
dec
pop
shl
inc
ja
jl
and
mov
add
nop
add
dec
inc
movsl
lahf
add
mov
daa
addl
sbb
sbb
push
mov
mov
sti
cmp
bound
ja
adc
mov
imul
fsubrp
mov
add
insl
test
fs
or
es
icebp
sub
xor
or
or
or
scas
sub
pop
or
ja
dec
cmp
push
adc
push
mov
stos
xchg
test
mov
stos
mov
arpl
fs
sbb
mov
pop
shlb
mov
push
rcll
arpl
inc
mov
mov
ljmp
mov
push
push
mov
mov
xor
sub
cmp
pop
repz
sbb
cmp
ret
je
add
repz
fimuls
dec
cltd
jae
or
imul
add
xor
add
jle
leave
faddl
shlb
iret
xchg
clc
push
stc
aad
or
add
sub
ljmp
fsts
lret
mov
mov
jecxz
cld
dec
iret
and
repz
jnp
inc
mov
shlb
loopne
rcrl
fnstcw
es
repnz
or
jl
or
cltd
cmp
dec
pushl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
push
mov
not
push
sbb
fwait
das
dec
cld
adc
push
shl
jg
mov
pop
lock
loop
or
push
out
cmp
xorl
lods
xorb
adc
popf
movsb
dec
je
cld
push
or
xor
ret
in
xchg
loope
test
gs
sbb
jmp
scas
inc
dec
in
lahf
dec
push
aas
jecxz
lret
mov
push
jl
push
popf
sar
imull
push
inc
pop
push
or
push
movsb
adc
jno
out
push
lds
fistl
testb
and
add
and
inc
dec
insb
enter
jmp
popa
or
xchg
adc
outsl
lahf
cmp
ja
lahf
out
fsts
lret
int
jle
dec
data16
or
jecxz
xor
inc
cmpsl
mov
sti
insb
mov
mov
clc
cli
pusha
pop
js
inc
loope
push
mov
and
ficoml
jno
push
dec
inc
xor
lods
sbb
int3
jo
movsb
add
iret
out
gs
dec
or
cmp
add
jp
pusha
xor
pop
sbb
call
mov
sub
leave
aas
fcompl
pop
or
fidivrl
mov
shll
in
cltd
stos
pushf
mov
or
out
movsl
in
int
loopne
and
ret
mov
ficomps
cmpl
push
xchg
mov
mov
xor
scas
shl
dec
mov
push
jge
mov
call
push
push
push
lock
jecxz
les
sbbl
orl
mov
pusha
in
and
jns
pop
cmpsl
fmull
imul
lock
lret
xor
ds
cmpsl
jle
add
inc
jns
repz
push
lds
push
push
fiaddl
nop
xchg
adc
fbstp
das
mov
insl
jbe
xchg
in
push
mov
pop
push
out
pop
clc
dec
mov
mov
es
add
xorb
rcr
adc
aas
push
push
sub
jg
shlb
pop
cmp
insb
je
mov
xor
adc
aam
in
loopne
pop
xorl
rcl
add
call
je
cmpsb
mov
jle
in
pop
shll
inc
mov
xor
adc
shll
out
das
test
in
cs
pop
insb
clc
xchg
jmp
mov
outsb
mov
dec
call
jmp
mov
xor
pop
jmp
pop
xchg
or
cltd
icebp
call
in
or
inc
dec
mov
and
loopne
lcall
mov
call
outsb
fisttpll
pop
sub
sti
cmp
xor
cld
add
dec
sbb
mov
xchg
or
testb
fstpt
outsb
shl
call
push
lret
lock
arpl
call
xor
js
enter
cs
aam
pushf
repnz
inc
and
mov
stos
and
xor
out
fmul
mov
faddl
sbb
cltd
fildll
or
add
push
sti
push
ss
outsb
ret
out
xor
xrelease
lods
xchg
and
cmp
bound
sbb
incl
push
pop
mov
add
xchg
ss
sahf
add
orl
inc
fmuls
or
jmp
inc
add
rcll
adc
and
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
pop
mov
lcall
sbb
repz
fldl
sti
pop
push
sub
xor
movsl
mov
jecxz,pt
sbb
push
add
rclb
lahf
pop
fiaddl
xchg
out
xlat
movb
loope
leave
movsb
mov
cmp
stos
dec
mov
add
or
arpl
je
insb
or
mov
leave
push
call
push
add
data16
jae
dec
mov
xchg
fimuls
inc
fildl
test
lock
out
call
fnstenv
jnp
mov
stc
cld
push
andb
lea
fcmovnb
jle
sub
sub
and
cmp
mov
sarb
push
pop
aas
imul
mov
bound
aam
pop
push
mov
jbe
lods
push
pop
jecxz
and
push
repnz
mov
test
cmp
xchg
sub
mov
cmp
leave
scas
mov
sub
inc
push
mov
lret
pusha
shll
lahf
sahf
lret
mov
shl
jmp
dec
out
inc
xchg
pop
push
xchg
add
adc
xchg
push
je
mov
sub
ror
cs
test
jl
push
js
shrl
inc
div
mov
outsb
cltd
jge
push
mov
add
sub
mov
mov
mov
dec
sbb
and
pushf
adc
insb
jno
xlat
xor
jmp
jnp
mov
inc
xchg
mov
lods
push
jno
lcall
enter
mov
and
fldl
daa
fs
mov
dec
scas
jns
cmc
scas
cli
xchg
sti
pop
loopne
repz
pop
xchg
jmp
es
adc
sub
out
rolb
mov
gs
push
out
ds
rorl
daa
mov
push
dec
xor
xchg
mov
loope
scas
add
je
dec
rcrl
inc
pushf
cmpsb
adc
mov
mov
jne
sbb
sub
filds
repz
push
andl
mov
ss
sbb
sub
adc
aaa
aaa
pop
arpl
inc
loop
mov
js
je
mov
lahf
xchg
xchg
or
or
mov
lds
dec
cmpsb
lods
andl
jno
mov
mov
mulb
dec
aaa
out
in
xor
xor
adc
jnp
pop
push
adc
inc
pop
cmpsb
aam
dec
ret
xchg
cwtl
push
jae
neg
adc
cmpsb
jecxz
mov
add
ss
sbb
sub
jle
lcall
or
loope
xor
into
loope
int
nop
icebp
jmp
push
pusha
mov
psrad
fstpt
cld
decb
mov
add
call
or
insl
push
mov
icebp
mov
out
mov
push
scas
pop
and
cs
xor
mov
test
dec
cltd
mov
mov
decl
adc
movsl
push
xor
arpl
cs
push
cmp
xchg
repz
cld
or
mov
fs
sub
mov
outsl
and
sub
in
fwait
add
xor
iret
je
and
scas
popf
movsl
sahf
std
mov
into
std
sahf
push
outsb
mov
adc
push
mov
xchg
adc
enter
lcall
inc
add
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
push
cmp
mov
add
mov
mov
pop
movsb
mov
les
push
xchg
loop
dec
leave
repnz
pop
arpl
adc
mov
ds
aad
pop
inc
imul
enter
push
ja
push
mov
mov
mov
sbb
aam
cmpsb
sub
pushf
jbe
push
push
and
out
repz
cmp
push
dec
lods
out
jbe
add
xor
cmp
add
popa
filds
push
daa
jbe
mov
sub
push
mov
mov
mov
sbb
daa
pop
nop
dec
sub
jge
xor
cmc
sub
mov
xlat
fwait
pop
sbb
cli
sti
or
int
push
shll
es
xor
xchg
shrl
mov
jp
rclb
shrb
fsubrl
fdivs
pop
imul
pop
adc
repz
jnp
push
popa
mov
jge
rorl
orb
cmp
out
arpl
lahf
enter
lcall
stos
mov
andb
shll
inc
movsl
subb
lret
mov
lea
movsb
add
mov
ss
add
and
cwtl
cmp
or
cmp
add
dec
adc
mov
mov
repnz
or
adc
scas
mov
lret
push
popa
xor
adc
jb
icebp
push
test
mov
leave
push
xchg
xchg
lret
cltd
inc
and
loopne
mov
test
loope
aas
lods
out
sub
mov
mov
mov
sbbb
scas
jne
add
outsl
xor
jecxz
xchg
les
ficompl
nop
scas
sti
mov
mov
and
pushf
sbb
inc
lcall
xacquire
cltd
sub
mov
sub
movsl
inc
sub
cmp
shlb
mov
adc
jo
jbe
xchg
aaa
push
xor
stos
xor
or
mov
insb
sub
mov
incb
stos
aaa
mov
inc
fbld
cmp
sahf
cli
in
lahf
pop
cs
xor
sbb
mov
fildl
jbe
or
inc
mov
test
sub
push
cwtl
insl
fstps
jmp
mov
popf
pop
sahf
mov
push
dec
mov
loope
pusha
sarb
jo
lds
mov
rcl
push
sbb
cmp
outsb
add
add
and
jno
mov
das
out
jne
mov
shll
sbb
ficoml
mov
lret
inc
jbe
mov
inc
call
add
ljmp
push
sbb
jecxz
xchg
or
cmp
mov
xchg
stos
mov
enter
sti
lret
jo
jg
pop
jnp
cmp
inc
mov
out
sbb
outsb
cmpb
cli
fwait
mov
nop
push
rep
out
inc
fs
jnp
in
inc
icebp
xchg
mov
leave
into
or
pop
xchg
popf
das
or
mov
jmp
jge
scas
jl
std
pop
fcompl
fstpt
cld
mov
nop
and
sub
mov
movsl
sar
test
in
jne
mov
jle
insl
mov
sub
xchg
push
movsl
and
sbb
cwtl
ds
fucom
cld
test
add
add
lods
enter
incl
sbb
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
aas
cmpsl
mov
mov
leave
push
loope
and
loop
out
mov
xchg
lods
enter
cmp
mov
lret
in
xchg
cmpsb
shll
sub
frstor
mov
pop
add
in
cmp
push
mov
mov
pop
push
in
push
shrl
lds
push
loopne
push
sbbl
in
xor
pop
mov
fwait
and
out
pop
stos
mov
xlat
stc
inc
pop
bound
popf
movsb
sbb
mov
scas
mov
push
movsl
test
xor
mov
lret
pop
sub
das
nop
jno
int
call
loop
and
js
sarl
fldcw
sbb
push
out
push
cmp
xchg
and
gs
int3
mov
rorl
pop
mov
in
pushf
dec
dec
pop
lahf
test
push
fcmovbe
add
mov
out
bound
sti
dec
jnp
stos
aas
xchg
inc
fmuls
mov
cmpsl
push
shll
and
outsl
cmp
data16
and
movsl
lds
imul
sarl
subb
add
push
or
sub
inc
fsubrl
lock
push
cs
adc
jbe
and
lahf
sbb
jge
mov
fcompl
out
ja
test
scas
adc
jecxz
sbb
add
sub
xor
cs
ja
inc
lods
push
push
out
loopnew
scas
cltd
out
and
pop
mov
aam
push
shlb
movsl
inc
mov
push
addr16
adc
sub
rcll
xchg
push
sbb
inc
outsb
mov
in
cmp
push
cmpsl
mov
pusha
sub
fsubl
fdiv
cmp
shlb
daa
rorb
jp
pop
mov
and
pop
es
inc
dec
cmpsb
out
mov
pop
lods
jnp
push
inc
notb
push
les
mov
inc
andl
je
and
int3
or
cs
mov
dec
xchg
sbb
fisttpll
cwtl
addr16
testl
out
adcb
shlb
mov
js
je
push
pop
sub
and
jle
dec
jne
enter
fbstp
sub
imul
fistpl
dec
stc
xchg
mov
clc
pop
sub
and
push
mov
test
testl
cmp
sub
into
loop
imul
jne
jb
cmp
js
mov
and
mov
cmp
or
add
ja
mov
aas
data16
cmp
shrb
hlt
divb
cmc
pop
or
sub
fucomi
xchg
in
add
lods
outsl
mov
loop
mull
lock
inc
test
icebp
xchg
add
pop
repnz
jecxz
ss
jecxz
mov
lock
lahf
mov
adc
push
stos
push
rorl
mov
lds
lds
xor
repz
pop
lret
arpl
leave
aas
mov
hlt
push
and
cmp
push
pushf
js
cli
mov
xchg
cmpsl
add
shll
jecxz
sar
pushf
cmp
cltd
xor
cwtl
shr
sbb
fnsave
pop
imul
dec
sbb
xchg
test
mov
push
and
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
inc
addb
pop
mov
lcall
sub
mov
and
outsl
cmp
push
jle
or
inc
bnd
add
pop
movsl
push
mov
adc
mov
or
pushf
add
xor
cmp
fmull
mov
mov
js
addr16
mov
fstps
scas
or
xor
adc
xchg
jecxz
jmp
pop
adc
ficoms
lods
jb
andl
push
and
jge
in
dec
in
sti
daa
jp
sbb
dec
xor
fnstcw
movsb
xchg
mov
out
repz
lods
js
sbb
sub
addr16
movsb
adc
pop
ja
imul
xchg
add
enter
cmp
push
push
jmp
arpl
cmp
lret
fsubrl
push
mov
or
inc
pop
mov
and
cmp
xchg
cmp
pop
mov
cmc
add
dec
mov
mov
jg
daa
and
or
out
popa
sti
mov
pusha
adc
lcall
insb
xchg
fldcw
cld
int
inc
popf
push
push
push
test
cmp
sub
pop
jle
ret
int3
sub
daa
sahf
stc
jp
fldcw
adc
dec
sbb
loop
mov
insl
in
mov
adc
ds
mov
push
fs
mov
outsb
fildll
and
into
fisttpl
cmp
std
js
mov
shll
leave
rcll
xchg
add
inc
mov
std
nop
into
popa
mov
test
xor
insl
dec
stos
ljmp
loope
mov
cltd
nop
mov
dec
out
mov
test
aad
ss
fdivs
fs
sarl
xor
or
das
fists
sahf
xor
push
dec
pop
add
lret
dec
mov
pop
mov
cmp
test
mov
repnz
divb
shlb
or
push
sub
enter
pop
or
rorb
outsb
ret
pop
xor
and
adc
or
and
adc
mov
lcall
rol
out
cmc
and
adc
test
leave
mov
mov
mov
xchg
fwait
fs
cmp
dec
push
out
shl
xor
lock
iret
push
push
add
imull
xor
dec
push
sbb
jmp
cld
mov
jnp
add
add
inc
jp
and
test
test
xchg
mov
out
push
pop
test
ret
repnz
add
jnp
out
cmp
mov
push
cli
inc
mov
jmp
or
jo
xlat
int3
lea
leave
pop
cltd
fcmovb
int3
cmp
pop
mov
mov
xor
adc
in
les
pop
or
aaa
mov
in
mov
in
pop
cmp
es
out
subps
sub
mov
lret
sbb
sub
je
or
xor
lock
in
inc
subb
push
jb
push
jae
dec
sub
jae
hlt
sbb
xor
repz
adc
lahf
and
dec
jns
mov
gs
fwait
sbb
test
frstor
pop
pusha
and
mov
dec
xlat
sbb
and
xor
add
loope
xor
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
inc
fcmovnu
mov
mov
push
or
sbb
dec
xorb
ja
lea
mov
out
shll
adc
cltd
xchg
nop
xchg
loop
adc
jne
mov
ss
loopne
mov
pushf
icebp
dec
rcrb
sahf
aas
jbe
std
xorl
jne
ret
ds
inc
stc
stos
in
test
bound
movsb
add
dec
imul
por
inc
cmpsb
lret
sbb
xchg
adc
xchg
or
mov
pushf
stos
xorb
or
xchg
ret
iret
dec
out
xchg
bound
add
aaa
pushaw
or
add
and
cs
scas
hlt
movsl
jne
inc
pop
cmp
into
jae
ret
mov
cmp
lods
add
je
mov
xor
push
filds
lcall
loope
jnp
shll
pop
mov
jb
ljmp
sub
jo
mov
les
dec
cmpsl
dec
sub
and
add
inc
dec
jp
scas
mov
insl
jne
sahf
repz
push
dec
mov
out
jmp
out
sbb
jmp
mov
sbb
ljmp
push
fdivrp
mov
mov
and
or
aaa
into
pop
pusha
pop
ret
faddl
ljmp
mov
xchg
mov
mov
imul
out
pushf
dec
popa
or
xchg
xor
mov
sbb
pop
xlat
rcrl
push
icebp
pop
push
mov
sbb
imul
jo
xchg
sbb
lock
sbb
pusha
inc
adc
xchg
sub
inc
push
mov
div
xchg
pop
mov
out
xchg
xlat
lcall
out
divl
mov
mov
mov
add
movsl
push
sub
mov
cmp
int
fwait
imul
pop
mov
clc
enter
pop
loope
xchg
shll
mov
iret
mov
mov
scas
mov
pop
insl
xchg
adc
fs
pushl
test
inc
cmp
mov
pop
fs
fisttpl
mov
aam
fimuls
pop
clc
inc
xchg
dec
sbb
mov
xchg
push
jl
push
mov
pavgw
out
ja
jecxz
fnop
xchg
enter
pop
fucomip
aam
mov
xor
mov
push
or
and
int
pop
xor
fs
inc
orps
fcmove
adc
bound
fwait
mov
xchg
cmc
sbb
or
lods
mov
adc
cli
sbb
les
mov
addl
push
lret
dec
xlat
mov
mov
jg
xor
out
or
imul
shlb
dec
addr16
mov
shl
pop
add
fnsave
icebp
js
mov
int
hlt
add
mov
sub
xchg
data16
push
jp
ret
aaa
in
pop
and
dec
and
sahf
movl
jno
lret
iret
jmp
inc
testl
andb
pop
xor
ljmp
sti
pop
xchg
pop
mov
mov
fwait
aad
dec
cmp
xchg
add
mov
jbe
lahf
and
test
hlt
daa
aad
push
push
lret
repz
adc
pushf
cli
lods
push
mov
mov
cmp
dec
dec
jb
popf
add
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
dec
sbb
sbb
int
mov
pusha
dec
out
pop
jo
fisubrs
cmpsl
mov
movsb
nop
pusha
cli
fstps
incl
loopne
mov
imul
adcl
pop
ss
outsl
fistl
sbb
mov
cmp
xor
sub
jl
or
dec
sbb
xchg
daa
dec
sub
mov
xor
mov
dec
cmc
inc
jno
adc
aad
pop
lcall
cwtl
adc
je
mov
sarb
pop
cmc
inc
jp
xchg
mov
and
mov
dec
icebp
add
pop
arpl
jnp
rcll
cli
sbb
and
mov
xchg
std
adc
ret
ja
in
stos
jge
mov
adc
xor
cmp
jne
mov
pop
dec
jo
repnz
push
rcr
add
mov
outsl
cmp
inc
lea
xchg
jbe
je
xchg
lahf
xlat
movsl
inc
pop
gs
sbb
lcall
add
inc
cmp
enter
push
push
out
sub
jl
xor
inc
leave
jae
xor
cmpsl
mull
movsb
cwtl
leave
aas
rcrl
fcmove
rcl
int
sub
lods
icebp
inc
scas
push
mov
jae
sbb
gs
mov
and
dec
and
and
inc
je
aam
mov
xchg
cli
add
cmpsb
shlb
out
inc
and
pop
fwait
push
push
popf
dec
test
cltd
out
into
lods
je
xor
daa
incl
pop
fisubs
mov
fcmovu
cmp
in
mov
into
mov
cmp
jae
scas
bound
scas
insb
nop
popa
shrl
je
jmp
mov
mov
pop
pop
int3
xchg
push
ret
repz
jne
out
ret
dec
push
cmp
dec
jmp
inc
shr
popf
test
cmp
mov
insb
inc
pop
out
inc
jb
test
pop
clc
ss
int
rdmsr
and
adc
push
lahf
mov
pushf
loope
enter
bound
mov
lahf
push
ret
and
mov
nop
adc
imul
lods
sub
movsl
push
pop
adc
xchg
test
and
popa
dec
jae
pop
sbb
xor
adc
dec
mov
or
shr
int
push
scas
jmp
pop
call
test
xor
in
imul
mov
inc
sub
fbld
nop
sbb
ret
mov
or
or
sti
insl
outsl
add
ficompl
in
adc
push
repnz
cltd
scas
test
pop
aam
pop
push
add
lret
jns
mov
movsl
test
mov
push
lret
jbe
daa
xchg
rcll
insl
ja
mov
pop
jae
xchg
adc
std
pop
mov
movsl
xchg
dec
adc
push
fsubrp
repnz
faddl
lcall
je
mov
insb
mov
insb
add
mov
push
cmp
clc
push
mov
mov
sbb
push
fisubs
repz
mov
cs
and
aad
movsl
int
cltd
xor
int3
push
and
or
push
jp
xchg
add
out
add
sti
cmp
repz
jo
dec
push
lock
nop
push
cs
sbb
js
into
outsl
divb
in
cmove
movsb
jae
jg
jg
push
adc
inc
sub
mov
push
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
push
push
dec
and
fwait
xor
clc
mov
js
test
addr16
in
push
mov
add
scas
or
sbb
adc
jae
mov
int
dec
adc
and
adc
je
insl
inc
jns
insl
lret
xchg
aas
and
sahf
mov
dec
inc
dec
add
into
xor
pop
mov
xchg
mov
adc
insl
imul
pop
xchg
push
popa
out
pop
push
inc
push
pusha
or
outsb
lahf
rcr
stos
push
imul
lock
scas
cmp
dec
sbb
add
push
sub
test
jb
and
aas
inc
ret
test
sbb
repz
out
in
cmc
jp
adc
push
jmp
mov
pushf
mov
clc
sub
push
rcrb
loopne
mov
mov
gs
cltd
or
dec
hlt
jae
xchg
dec
jl
and
dec
mov
sub
or
xchg
mov
adc
jnp
ret
gs
bound
adc
call
inc
mov
push
pop
iret
loope
into
test
dec
add
jge
adc
jge
xchg
popf
in
int3
inc
pop
dec
mov
stos
cmc
mov
pop
fstpt
jns
test
addr16
cmp
cmp
lret
xchg
jb
stc
xchg
enter
jle
push
ss
scas
out
sub
aas
xor
push
cltd
cli
inc
aam
lret
sbb
out
mov
je
testl
xor
xor
lret
sub
insb
sti
sub
mov
cmc
popf
xchg
cmpsb
xlat
mov
pmaddwd
push
push
xorb
outsb
pop
cmp
cli
subb
mov
pushf
icebp
push
mov
sahf
add
sbb
mov
leave
sub
cli
xchg
div
sbb
cmp
lahf
sbb
lahf
dec
mov
repz
jle
lea
loop
in
shr
repnz
outsb
ret
cmpb
fnsave
addr16
in
data16
sti
cmp
cmp
xchg
andb
sub
xor
add
in
jg
pop
mov
jge
lock
inc
xchg
xorl
je
cmp
clc
mov
enter
fs
outsl
sub
outsl
jb
ljmp
cwtl
mov
data16
xor
sub
push
inc
dec
adc
mov
cmp
add
jl
lret
sbb
mov
pop
in
mov
repz
or
cmp
sti
pop
cmp
cmp
in
lret
jmp
arpl
cmp
xor
xchg
xchg
cmc
pop
aaa
push
mov
jns
pop
fimuls
stos
jle
mov
popf
mov
adc
mov
xor
fidivs
ret
sahf
leave
lods
loop
mov
inc
jecxz
nop
sbb
movsl
lcall
out
add
sbb
cmp
or
cli
bound
add
dec
incb
pushf
jge
ljmp
mov
sar
cltd
sub
inc
push
inc
pop
xchg
add
ja
inc
mov
fucom
push
and
cmp
sahf
push
sbb
in
shrb
sub
pop
mov
push
leave
jne
sbb
sub
cmp
sbb
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
jl
push
xchg
push
sbb
into
movsl
sbb
pop
call
insb
pop
xor
dec
mov
sti
jl
shlb
rorb
xchg
pop
rcl
add
rcrb
pop
jmp
cwtl
into
push
adc
pushf
lock
xorl
int
nop
sub
lret
cmpsb
cmp
sbb
cmc
jne
int
clc
dec
stc
inc
scas
cmp
ret
mov
bound
stos
dec
es
shl
push
cmc
xor
rcrb
or
and
or
dec
inc
aaa
dec
subl
sahf
nop
xor
add
sub
dec
data16
fisubrs
xlat
loop
pop
jmp
sub
cmpsb
mov
mov
mov
xchg
add
add
mov
pop
shll
pop
mov
adc
in
push
push
mov
stos
fidivl
dec
mov
jge
dec
inc
gs
jl
scas
inc
shrl
cmp
dec
imul
jb
and
arpl
jnp
out
xlat
pop
and
out
add
icebp
and
lock
and
lahf
ret
imul
hlt
mov
ja
not
and
xchg
sub
arpl
mov
mov
jo
inc
pop
adc
ficoms
aas
je
iret
outsl
aam
mov
dec
dec
adc
fmull
fnstenv
daa
mov
cli
adc
loope
mov
lock
inc
mov
inc
xchg
pop
leave
in
xor
jp
mov
stos
icebp
mov
mov
push
pusha
inc
lods
rcrl
loop
pop
pushf
repz
mov
dec
icebp
push
jmp
cmpl
mov
push
out
push
loopne
xlat
and
mov
inc
dec
int3
cmpsb
lea
daa
test
leave
xchg
movsl
int3
cli
add
add
mov
into
aas
and
cmp
mov
mov
imul
out
jg
sbb
es
xor
dec
sahf
inc
test
sub
xor
repnz
leave
inc
out
pop
in
pop
cmp
mov
mov
frstpm(287
or
cltd
add
fdivl
movsb
aaa
addr16
iret
jno
xchg
shl
sbb
shlb
jmp
sahf
and
addr16
xchg
mov
js
testb
test
jl
lds
bound
inc
and
jb
stos
dec
jecxz
mov
cltd
sbb
pop
add
sub
adc
pop
scas
gs
inc
insl
out
in
pop
sarl
pop
das
add
xor
sub
xchg
ljmp
mov
xor
movsb
fs
out
fs
inc
sarl
sub
orl
and
lock
andb
sti
jnp
mov
pop
add
xchg
mov
push
pop
mov
mov
hlt
sbb
lea
cmp
mov
das
fimuls
dec
stos
sbb
fsts
or
inc
call
addl
jle
mov
dec
js
mulb
xchg
jl
cwtl
mov
cmp
gs
sub
jae
sarb
out
xchg
sarb
enter
dec
fisttpll
cmp
xorb
sti
adc
mov
jbe
xor
syscall
jmp
push
fsin
addr16
data16
cmpsl
push
cmp
adc
sbb
push
add
lock
dec
xchg
mov
movsl
jns
shrd
shr
mov
mov
mov
jmp
push
or
sbb
aaa
push
lahf
jo
push
sbb
xor
cld
sbb
cmpl
sbb
dec
adcb
addr16
dec
mov
cld
inc
mov
mov
lahf
mul
mov
dec
mov
mov
out
mov
stos
or
xchg
xor
adc
xchg
xor
add
mov
mov
pop
sbb
mov
jmp
xchg
fists
insb
adc
int3
or
inc
js
jl
aas
pop
push
insl
repz
pusha
xchg
outsb
push
sbb
xchg
imul
ret
mov
hlt
adc
add
js
iret
movsb
pushf
push
pop
subb
jbe
repnz
insb
cmp
add
sbb
xchg
cmpsb
dec
mov
cli
mov
ret
cli
stos
dec
mul
xorb
push
mov
cs
xchg
shll
and
pop
inc
xchg
mov
cmp
pop
aaa
fiadds
add
das
jb
mov
push
and
mov
mov
ja
cltd
pop
pop
pusha
jecxz
sahf
les
inc
lods
xor
loope
jmp
fxch
add
ret
clc
ds
pop
incl
jo
subb
push
or
fisttpll
outsb
pop
or
xor
jle
lock
lea
test
sysexit
nop
jp
xchg
outsb
iret
push
inc
pop
popl
fdivrl
test
xchg
xchg
dec
mov
xchg
mov
fildll
stos
push
inc
popa
and
dec
lcall
test
mov
push
inc
pop
fists
push
shll
mov
addr16
test
daa
mov
lds
sub
repz
cwtl
mov
and
outsl
nop
mov
scas
push
stos
cmc
in
xor
test
adcb
repz
pop
ja
shll
sub
cmp
fwait
pusha
iret
lahf
les
call
xchg
test
add
fistps
sar
insl
push
mov
pop
je
xchg
popf
adc
lea
jb
imull
sub
repz
sub
mov
sub
add
xor
and
pop
enter
jmp
inc
out
dec
pushf
rclb
or
add
push
mov
push
xchg
out
xchg
pushl
loope
jns
out
nop
repnz
sbb
cmp
pushf
stos
je
pop
jp
lahf
push
pop
movsl
xlat
lds
daa
mov
inc
jl
orl
aad
cwtl
popa
pop
scas
ss
loop
lock
fidivrs
idivl
mov
fsubs
call
das
inc
pop
pop
add
pop
stos
xor
outsb
dec
lds
out
mov
stos
pop
fmuls
out
mov
js
lahf
pop
and
pusha
aad
lods
out
movsl
ss
inc
jne
or
mov
mov
scas
int3
xor
ret
ja
std
push
or
inc
or
movsl
cmpsl
cli
mov
mov
sub
fldenv
sub
lret
test
int3
jle,pn
cmp
repz
clc
xchg
pop
mov
push
sbb
das
pop
je
daa
dec
xor
jg
int3
rorb
mov
repnz
out
sbb
movsb
lods
jns
sbb
inc
pop
stos
dec
jb
nop
sbb
sub
mov
xor
or
sub
arpl
in
sub
mov
stos
xchg
scas
into
leave
pop
push
out
subl
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
cmp
pop
mov
sbb
jae
sub
loopne
mov
orb
mov
mov
cmpsl
xchg
pop
in
and
js
pop
std
test
lds
push
int
dec
inc
fidivrl
dec
sbb
xchg
inc
or
push
sub
pop
pop
jnp
sti
adc
or
sub
cwtl
mov
xchg
inc
lea
xchg
aam
inc
mov
cmpsl
sub
sbb
or
cmp
out
add
test
xchg
pushf
pop
test
sahf
roll
scas
cmp
std
out
nop
xchg
ljmp
lds
ja
xor
xor
push
inc
lahf
pop
gs
dec
mov
lret
mov
cld
mov
sub
pop
outsb
mov
test
pushf
or
jmp
test
clc
out
inc
es
sahf
lret
inc
mov
popf
cltd
pop
shlb
es
xor
xor
push
dec
popa
mov
lahf
sbb
add
push
xorl
xchg
sbb
inc
jae
nop
es
mull
cmpsb
out
xor
icebp
jne
cmpsb
add
jae
ljmp
mov
xchg
dec
ja
scas
movsb
addr16
pop
push
outsl
or
sbbl
test
adc
lea
lcall
mov
fcmove
scas
out
pop
mov
sti
push
frstor
imul
ds
pop
inc
nop
jge
jge
cltd
xchg
rorb
sub
stos
sbb
jge
or
stos
icebp
shlb
push
lret
sbb
inc
mov
iret
mov
jb
jnp
loopne
fstpl
stos
push
sahf
js
rclb
testl
add
sarl
jns
gs
into
mov
xchg
js
inc
shr
jns
dec
cmpsb
jb
and
outsb
dec
mov
mov
sbb
movsb
and
and
push
dec
xchg
mov
xlat
xor
sub
inc
xchg
add
repnz
dec
out
js
inc
aam
mov
push
cmpb
cmc
jbe
cmpsl
xchg
cmp
imul
or
js
cwtl
adc
out
ficoml
lock
mov
fcomps
mov
cmp
fnstcw
pop
out
sub
or
js
cmp
cmp
mov
cmp
pop
mov
aas
cltd
mov
jmp
xor
insl
scas
in
mov
mov
dec
mov
fdivr
jbe
xchg
jg
out
mov
bswap
sbb
xorl
jbe
and
in
sbb
push
mov
repz
jecxz
sub
push
and
push
push
popf
mov
and
and
jns
push
sahf
cmpsl
mov
dec
jne
and
imul
sbb
rcl
ret
test
inc
mov
mov
or
push
pop
xchg
push
testl
es
mov
xlat
fstps
mov
fmul
sti
jg
jle
icebp
sub
or
and
es
xor
jo
sub
idiv
add
lock
mov
repnz
add
divb
hlt
push
xchg
aad
add
je
insl
jne
shll
ss
mov
into
add
lods
in
aaa
dec
cmp
or
xchg
push
addr16
repz
dec
bound
pusha
stos
inc
fnstenv
sub
pop
push
stos
repz
xchg
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
idivl
push
sbb
sbb
mov
bound
out
in
push
or
insl
scas
adc
push
mov
xchg
xor
lods
scas
arpl
sbb
dec
or
inc
push
cmp
daa
sbb
addl
scas
sbb
shlb
cmp
xchg
sbb
dec
orl
mov
jne
pop
dec
lahf
popa
in
push
aam
int
inc
repz
adc
xchg
sub
inc
sbb
lock
inc
jno
xchg
idivb
movsb
mov
fstl
mov
push
cmp
jmp
or
or
dec
inc
cmp
ret
dec
inc
popa
mov
pop
mov
mov
jp
pop
ss
in
pop
popa
rorw
sub
js
test
sbb
dec
paddb
xor
cld
clc
pushf
dec
out
pushl
outsl
and
flds
iret
mov
stc
add
ja
repz
mov
imul
xchg
and
mov
stos
dec
fcoms
out
fstpt
stos
mov
call
lds
and
sub
add
add
aas
inc
sbb
mov
dec
xor
cmp
cmc
push
mov
out
cli
xchg
add
out
insl
adc
popl
push
dec
icebp
or
test
arpl
cli
dec
ror
popa
test
inc
cli
int3
in
adc
xchg
cmp
ljmp
in
push
sub
fstp
loop
aas
hlt
add
xchg
mov
push
pop
es
rol
dec
shll
rol
pop
les
aas
mov
stc
sbb
and
or
push
out
rclb
adc
adc
aas
nop
sub
push
mov
mov
mov
fnop
push
ret
sub
test
shll
mov
inc
sbb
mov
shll
or
out
jle
ja
mov
data16
mov
jge
sub
pop
loope
aaa
sbb
fwait
sbb
in
jp
cmc
je
pop
add
ljmp
in
jno
jl
push
jae
xor
mov
pavgw
adc
insl
push
push
push
data16
pop
repnz
iret
fcomp
push
pop
popf
int
cld
jns
stc
dec
jno
pop
sub
das
sbb
xchg
jle
jecxz
mov
sbb
ret
mov
adc
xchg
into
cli
in
add
add
repnz
add
fstl
andl
xchg
cmovae
dec
adc
es
sar
mov
aaa
jl
in
or
mov
subl
mov
mov
and
add
sub
pusha
and
jno
aam
cmp
pop
or
iret
lret
sbb
das
nop
pushf
fsub
mov
mov
mov
mov
aaa
or
mov
add
scas
stos
mov
lea
rorl
and
mov
lret
popf
inc
cmp
scas
adc
push
int3
je
iret
inc
lods
push
jns
out
out
dec
stc
mov
pop
sarl
rorb
cmp
fiaddl
ficompl
inc
fwait
iret
mov
cmp
subl
push
lods
pop
sub
cmp
outsl
cltd
inc
scas
mov
cmpsl
mov
jg
ljmp
or
or
test
xor
push
jb
dec
pop
cmp
pop
shr
sahf
inc
cltd
imul
jecxz
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
ret
mov
mov
add
lods
out
mov
xor
sti
mov
je
icebp
push
jo
pop
sbb
push
fcomps
pop
jmp
jp
push
mov
loop
ds
cmp
pop
mov
in
rcr
or
lock
movsl
sbb
fisubrl
popa
mov
xchg
lret
mov
fnstenv
jns
icebp
ss
push
push
dec
adcb
dec
in
into
cmp
inc
inc
sbb
add
or
or
test
aad
xchg
mov
dec
mov
mov
scas
outsl
jmp
lahf
insb
iret
ds
adc
test
orb
pop
mov
repz
sbb
xchg
outsb
cwtl
ss
enter
outsl
mov
dec
popa
dec
fisubrs
mov
repz
int3
dec
push
or
dec
jmp
xchg
sub
mov
inc
sub
push
pop
xor
fstps
fcoml
jb
mov
test
push
jge
xor
sti
mov
fidivl
fcoml
xchg
push
repnz
cmp
mov
push
adcl
mov
jg
add
pop
xor
push
jb
loop
lcall
jle
daa
les
mov
loop
addr16
mov
sbb
in
mov
xor
lahf
lods
pop
pusha
push
outsb
sbb
mov
mov
cmp
mov
push
adc
push
adc
inc
mov
adc
ss
dec
out
decl
add
pop
sbb
les
lret
repz
filds
mov
loopne
push
inc
ret
iret
cmp
sbb
fwait
push
sub
notl
leave
dec
inc
push
leave
cld
cmp
adc
jo
sbb
adc
leave
mov
push
jne
arpl
jno
push
adcb
and
lret
xchg
add
push
inc
push
stos
fisubs
jmp
jmp
lock
mov
scas
push
mov
dec
test
stc
jmp
movsb
in
push
xor
movsl
jns
dec
push
movsb
outsb
mov
lods
push
mov
loope
cmp
ds
nop
mov
mov
push
cmp
dec
insb
pop
ffreep
cmp
mov
or
add
xor
jmp
mov
lds
jbe
add
add
lret
iret
and
or
mov
es
shll
sub
iret
cmp
leave
cmp
inc
mov
mov
pop
cwtl
mov
sub
pop
xchg
pop
ret
cmp
decl
popf
pop
dec
jmp
xchg
rorb
shlb
test
and
mov
ss
shrl
push
push
inc
bound
out
jbe
mov
push
cld
into
imul
xchg
mov
fisttpl
xchg
out
adc
popf
xor
jae
shr
test
fs
xchg
movsb
lcall
ds
insb
jge
jmp
icebp
fcomps
arpl
jns
hlt
mov
xor
or
dec
cmpsb
dec
add
stos
pop
repz
cmc
mov
dec
and
mov
inc
and
xchg
out
inc
aaa
dec
les
add
or
lret
dec
ss
push
aas
call
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
in
outsl
mov
jae
sbb
jne
arpl
mov
mov
icebp
aas
int3
sbb
ss
icebp
mov
insl
es
fs
mov
xchg
stos
mov
add
push
fucom
push
xor
or
and
sarb
push
sbb
das
mov
sub
lods
ret
mov
jp
test
push
sub
mov
add
in
ret
test
push
adcl
cmp
and
dec
movb
jae
les
and
ljmp
sbb
push
dec
in
add
shll
clc
lods
sbb
shlb
xor
dec
mov
ljmp
imul
aaa
cmp
lods
in
subl
push
loope
sbb
adc
int3
rcr
inc
or
cmpl
out
ds
dec
and
out
mov
out
aas
in
out
test
inc
daa
sub
sbb
int3
std
mov
daa
cmp
bound
icebp
movsl
js
gs
jnp
pop
jb
out
sarb
or
sbb
pop
jne
outsb
xchg
rclb
inc
test
vmovaps
addr16
sbb
add
add
xor
filds
int
aam
mov
adc
ss
test
mov
inc
and
pop
lock
push
or
jle
adcb
add
jae
mov
into
and
outsl
cmp
sub
add
mov
jecxz
test
push
std
or
or
into
mov
imul
ljmp
xlat
add
call
jecxz
inc
aas
jnp
incl
dec
dec
fwait
mov
aam
push
lods
push
jae
cmp
inc
mov
aaa
add
adc
xchg
cmp
pushl
mov
std
cmp
loopne
sahf
xor
sbb
fnsave
sub
out
mov
inc
push
outsb
push
mov
xor
icebp
lods
adcl
scas
xchg
mov
adc
add
mov
mov
cltd
sti
fnstcw
adc
aad
cwtl
jne
xchg
adc
out
cs
jp
scas
jecxz
inc
xor
pop
xchg
adc
pushf
cmp
fadds
iret
es
insb
insl
inc
pushf
push
lahf
orl
mov
into
mov
rorl
scas
push
inc
mov
adc
cmp
xchg
cli
mov
mov
pop
add
mov
cmp
sub
xchg
es
lods
sub
sub
inc
mov
fiaddl
icebp
pop
lret
mov
enter
pop
xor
pop
adcl
pop
aas
cmp
sbb
stos
xor
jp
loopne
ja
loopne
fstps
ja
dec
add
and
push
icebp
adc
lret
sbb
sub
in
lret
aas
sub
jne
xor
cmp
and
xor
xor
lret
fimull
test
jp
rol
iret
pop
mov
leave
mov
push
xor
arpl
cmp
fldt
mov
or
xor
cltd
lret
lea
jb
mov
jo
inc
leave
gs
or
and
or
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
sub
out
out
imul
mov
stos
pop
sub
inc
negb
addb
pop
inc
jae
and
adc
jns
fs
and
push
lahf
out
add
popf
popa
push
push
frstor
loopne
and
and
cmpsl
shl
lods
mov
push
sbb
jp
xor
loope
dec
popf
dec
xor
push
pop
sub
daa
jg
daa
sbb
imul
pop
scas
xor
fadds
mov
data16
imul
push
mov
and
movsl
std
sub
mov
icebp
outsb
dec
cli
cmp
pop
lret
dec
lods
outsl
sbb
daa
nop
ret
adc
rcll
out
sbb
xchg
ss
jle
int3
cli
push
mov
loop
push
mov
mov
arpl
mov
stos
outsb
push
sar
push
sub
push
dec
imul
out
aas
sbb
xor
jmp
push
roll
addr16
sub
out
inc
enter
mov
add
insb
mov
mov
les
daa
pop
inc
push
add
bound
adcl
pop
stc
mov
dec
lea
pop
and
sbb
stos
adc
clc
mov
mov
push
jmp
push
scas
cmp
out
das
jecxz
ret
add
push
mov
adc
or
sbb
jno
xchg
cmc
std
fcompl
cmp
mov
mov
cmp
arpl
dec
cltd
aas
sar
add
add
loope
sbb
cmp
aas
fcompl
popf
jnp
imulb
xchg
lret
cs
mov
jno
js
and
jns
adc
push
jle
xor
into
xor
adc
adc
bound
or
push
loope
pop
or
fstpl
cs
push
mov
push
clc
jbe
xor
xchg
ds
and
fs
fiaddl
inc
bound
dec
stc
divb
lods
inc
cltd
sbb
mov
cltd
outsl
out
aaa
mov
inc
inc
les
xchg
push
subl
jmp
mov
add
out
jb
addl
xchg
ja
xchg
sarl
loop
cmp
push
sbb
mov
cmp
add
jns
cmp
shll
test
movb
cmc
aam
pop
mov
or
aam
or
ds
aaa
mov
dec
popa
add
push
mov
or
ljmp
pusha
inc
adc
mov
ret
xchg
cmp
push
mov
bound
push
loopne
mov
adc
movsl
fnsave
jo
sbb
in
mov
and
jae
call
enter
xor
cmp
jmp
jl
enter
mov
testl
mov
sub
scas
or
sbb
popf
mov
mov
int3
push
imul
push
lret
lret
xlat
sarl
fimull
add
inc
scas
jnp
mov
jl
dec
cmovae
cmp
out
mov
cmp
lea
les
inc
inc
mov
test
out
mov
sbb
lock
sub
jb
psubq
ret
lret
mov
lock
aam
inc
cmp
repz
cmp
jne
sahf
jg
mov
mov
outsb
icebp
pushf
mov
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
repz
lcall
iret
or
and
in
cmc
icebp
repz
xor
sub
xor
inc
xchg
xchg
mov
lcall
sub
iret
inc
add
repnz
xchg
push
xor
in
lahf
std
cmpsl
xchg
xchg
and
jns
mov
push
subl
in
lods
fistpll
pushf
mov
cmp
insl
dec
push
pop
sub
push
fs
jnp
mov
rolb
pop
xchg
mov
mov
pop
loope
ret
and
divb
jnp
push
xchg
xchg
repz
insl
test
cwtl
and
mov
mov
fbld
ljmp
push
clc
xor
push
mov
cli
mov
ret
fistpll
pushf
iret
cmpsb
ss
push
sub
pop
in
push
mov
xor
daa
pop
mov
inc
int
or
cli
add
insb
or
mov
mov
into
push
test
aad
or
jp
insl
outsb
pop
jae
movl
mov
mov
std
fists
xlat
add
aam
sbb
data16
push
push
xor
pop
pop
jb
pop
xor
push
mov
in
movsl
fcom
jo
cwtl
pop
aad
shl
jecxz
out
divb
shrb
dec
push
inc
adc
pop
pushf
pop
in
dec
out
fiaddl
or
hlt
xor
loopne
cmp
leave
outsl
cmp
cwtl
in
and
leave
xchg
repz
shll
add
or
in
test
ds
aad
mov
xchg
cmp
ljmp
xor
into
fwait
push
jnp
pop
sub
imul
movsb
pop
adc
inc
iret
data16
out
or
mov
mov
lret
cmp
inc
ret
test
fsubrl
and
jge
and
test
insl
pop
xchg
inc
inc
mov
ret
ds
out
or
and
push
mov
lcall
add
aas
mov
incl
stc
xchg
fst
insb
mov
mov
popa
ja
xchg
xor
add
xor
xchg
hlt
and
pop
ja
fists
sbb
or
ss
xchg
sub
aad
lret
dec
faddl
ja
iret
cmp
sub
jnp
add
pop
iret
testb
in
mov
sbb
ljmp
pop
mov
popf
mov
rolb
sub
outsl
aad
adc
mov
ret
cli
pop
mov
idivl
lds
xor
push
fildl
add
xchg
pop
je
std
jecxz,pn
cli
movsb
xchg
rcrb
bound
push
lock
test
insl
jns
fisubs
cltd
lret
jmp
push
xchg
and
sbb
xchg
pop
or
push
in
loop
enter
lea
stc
cmp
push
lahf
mov
xchg
daa
mull
sbb
jp
outsl
mov
ljmp
insb
flds
mov
loop
sbb
or
cmpsb
fiaddl
inc
cmp
jmp
push
movsb
sub
add
sub
xchg
fmuls
les
mov
jmp
testl
jns
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
cmp
mov
mov
pop
lahf
clc
or
mov
outsb
fs
lods
sahf
inc
jecxz
mov
xchg
jmp
dec
mov
ja
aad
fistpl
inc
jge
lock
push
sbb
push
sti
pop
mov
xchg
loop
loop
es
testl
mov
das
shl
adc
pop
mul
shrb
add
lahf
aad
mov
add
jg
bound
das
popf
push
mov
dec
cmp
xchg
or
je
test
dec
mov
fistl
add
cli
mov
xchg
inc
or
xchg
movsl
mov
mov
lahf
mov
aas
rol
sub
add
movswl
clc
sbb
xchg
ljmp
xchg
jle
cld
adc
and
rorl
in
xchg
out
xor
and
clc
hlt
ja
test
mov
fldcw
lcall
xor
or
adc
cltd
pop
jmp
iret
mov
mov
jbe
es
lahf
scas
lods
inc
or
mov
mov
sahf
outsl
insb
sbb
adc
out
push
jno
sbb
imul
adc
addr16
pushl
ret
push
test
sbb
mov
repz
cmp
lea
cli
mov
cmp
push
adc
lods
lds
in
sahf
push
pop
sahf
mov
rcrl
or
push
fstps
mov
push
cmp
cmp
and
lods
out
push
out
addr16
cmp
lods
xchg
sbb
cwtl
mov
push
push
rorl
mov
mov
nop
adc
pop
inc
lahf
fists
and
jbe
adc
hlt
data16
ljmp
mov
clc
cwtl
jnp
xchg
pop
pop
sub
lahf
sahf
stos
fs
popf
pusha
adc
jnp
lods
sbb
jp
xor
arpl
movsl
leave
jbe
rcrl
sbb
insb
dec
mov
fs
gs
das
xchg
or
jge
fsubl
and
sbb
mov
jl
sub
inc
arpl
popa
stos
adc
sbb
pushf
repz
fisubrl
fdivs
mov
es
orl
stos
xor
mov
notb
push
dec
dec
dec
aam
push
shrl
xchg
stos
jo
xchg
insl
push
ret
xor
xlat
xor
lret
push
mov
sbb
mov
xchg
mov
fcmove
data16
mov
inc
out
sub
push
mov
in
shlb
out
mov
fwait
dec
pop
mov
nop
test
das
jle
arpl
je
vpsubb
pop
ljmp
sahf
outsl
or
xor
fldcw
mov
jecxz
les
rcrl
add
loope
xor
mov
jmp
jns
aad
jg
js
xchg
ljmp
fwait
mov
sbb
xor
or
pusha
jle
xor
mov
out
add
pushf
adc
add
das
icebp
repnz
mov
push
mov
dec
rep
pop
aaa
fwait
sub
nop
jl
adc
out
mov
popa
es
stos
std
adc
test
xchg
jge
or
call
andb
mov
xchg
mov
jne
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
in
sbb
push
push
sbb
sub
dec
dec
pop
scas
adc
xor
cs
sar
or
lods
mov
xorb
jge
mov
jg
ljmp
lods
js
push
pop
or
fiaddl
xor
mov
bound
jp
icebp
jp
in
or
test
out
lock
out
push
aaa
mov
dec
cmc
pop
pop
scas
cld
mov
cmp
adc
fisubl
xor
aam
mov
mov
cmp
dec
push
mov
cmp
cmpsl
lahf
adc
mov
test
sub
cmp
inc
sub
leave
popa
push
cmp
xchg
jno
out
cmpsb
popf
mov
push
sbb
xchg
cmp
dec
xlat
andb
incl
adc
fs
test
cmpsl
stos
or
cli
dec
subb
mov
movsb
adc
adc
cmpsl
sub
sub
bound
mov
es
cmp
aaa
not
jle
pop
dec
jno
mov
sbb
ljmp
xchg
jnp
insb
cmpsl
shll
mov
xorl
mov
movsl
pop
jge
mov
cli
inc
jbe
in
pop
or
mov
dec
lahf
shl
adc
stos
cld
sub
mov
sub
mov
loopne
or
lahf
sub
push
fldcw
lods
roll
fsubrl
xchg
insb
sarl
popf
xor
and
mov
xchg
or
data16
out
and
in
mov
mov
test
sub
nop
inc
push
pop
or
loopne
sub
and
ljmp
dec
aaa
ret
cwtl
or
jmp
dec
shlb
push
cli
scas
fwait
popa
add
pop
xchg
es
ret
and
mov
mov
jb
fstpl
jb
xor
pop
enter
sbbl
xor
or
test
push
jb
icebp
or
lret
gs
loop
adc
popf
pop
fwait
cwtl
popa
adc
dec
sti
aaa
push
movsb
mov
ss
aam
push
stc
aaa
popa
push
jp
sub
arpl
in
out
inc
pushf
int
lret
aaa
xchg
aam
xor
fs
jp
addr16
pusha
adc
jmp
rorl
fcoml
jecxz
lcall
dec
sub
int3
ds
loop
fisubrs
and
dec
xor
jmp
insl
cltd
xchg
sub
jnp
mov
pushf
fisubs
rcll
push
outsb
jne
jp
mov
adc
push
shlb
arpl
in
mov
cmp
push
lock
movsb
cmpsb
mov
jge
add
xchg
mov
lods
sub
lcall
addb
dec
add
sarl
xchg
data16
scas
imul
fmuls
cmp
cmpsl
mov
add
icebp
or
outsl
mov
aam
mov
int3
scas
lods
or
mov
fidivs
loop
and
sbb
xor
xchg
sub
push
push
xchg
and
dec
stc
or
stc
sahf
inc
testl
and
aas
scas
cmp
out
sahf
int3
aas
add
pop
std
mov
stos
shlb
sub
aad
jae
enter
xchg
jbe
dec
call
fwait
mov
fcoms
les
insb
cmp
outsb
xor
pop
shl
mov
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
stos
jg
push
sbb
push
sub
int
push
out
jnp
jge
inc
sbb
out
das
std
or
mov
inc
stc
jne
fcomp
pop
xchg
idivb
cmp
nop
loop
fimuls
notl
xchg
inc
push
jmp
mov
fistpl
xlat
push
js
jns
int3
jecxz
arpl
popf
mov
jnp
mov
pop
arpl
fs
jmp
mov
enter
dec
and
sub
hlt
cwtl
icebp
cs
test
rolb
in
sbbb
jne
cli
test
in
cmpsl
in
cmc
lock
mov
dec
shrb
pop
fstpl
xchg
outsb
pop
sub
fs
in
fwait
divl
fxch
jo
xchg
adc
cmp
cmp
xchg
fnstcw
gs
in
outsb
daa
divb
mov
add
inc
sub
and
adc
scas
xchg
pop
movsb
push
js
sbb
pusha
stc
jg
inc
sub
mov
add
pusha
loope
enter
bound
pop
sahf
mov
mov
mov
lcall
sub
lcall
outsb
je
fiadds
ret
push
mov
hlt
in
aam
jecxz
loop
and
aas
push
xchg
jno
cs
cmc
dec
add
xchg
ljmp
pop
dec
roll
test
ds
das
clc
jecxz
cmpsl
and
test
jne
lcall
mov
push
lds
mov
jns
pop
dec
jbe
sbb
es
arpl
cmp
pop
or
jbe
adc
xchg
loopne
clc
jbe
pop
adc
jb
jb
fs
jbe
outsb
mov
clc
mov
popa
aad
mov
dec
lret
outsb
xchg
pop
sub
imul
pop
movsb
xchg
iret
imul
aaa
adc
cli
or
loope
fcmovnb
cwtl
xchg
ss
into
jbe
xchg
or
in
movsl
push
aas
or
add
js
cmc
sub
pop
in
aaa
dec
dec
jns
cli
or
adc
daa
add
xchg
mov
aas
mov
testb
push
insl
loope
pusha
pop
jne
out
das
jecxz
adc
mov
insl
jbe
lret
adc
pop
xor
pop
sub
mov
mov
lcall
pop
add
sbb
jo
in
cli
push
xor
xchg
test
imul
xchg
icebp
loopne
mov
push
pop
jl
mulb
orb
push
mov
aad
int3
sti
sub
push
pop
pop
fucomi
jp
movsl
negb
insb
popa
lret
stc
mov
movsb
mov
adc
xchg
and
jbe
aaa
mov
push
xor
outsb
test
xchg
sub
mov
sbb
cmp
pop
fcmove
rcr
les
push
xor
lcall
in
insl
cs
mov
mov
fs
xor
les
pop
test
jbe
xlat
pop
sub
pop
pop
insb
cli
rclb
sub
loop
push
ret
cmpsl
iret
cld
xchg
jae
inc
push
das
cmpsl
mov
hlt
xorb
addb
mov
popf
xchg
popa
lods
pusha
in
ds
fisubrs
scas
dec
sbb
out
jo
push
inc
dec
pop
cmp
dec
mov
cmpsb
sbb
dec
adc
in
mov
pop
cmp
cld
pop
rorl
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
sub
sbb
add
push
and
add
and
orl
pop
fucomp
sbb
ja
sbb
cmp
lret
leave
stc
sbb
xor
jnp
pushf
dec
loopne
dec
push
adc
mov
mov
mov
mov
dec
add
aam
cmpl
daa
rorl
and
fldcw
mov
ja
jae
mov
push
xchg
cmp
pop
sbb
push
dec
sub
push
and
decb
jmp
ja
add
jmp
and
or
mov
xchg
push
jecxz
xchg
mov
repz
stos
cmp
jle
cmp
adc
out
cmc
repnz
fsts
cmpsl
cmp
xchg
sarl
popf
enter
mov
sub
inc
jne
jmp
jmp
test
push
lcall
test
push
mov
jecxz
adc
sbb
and
adc
lods
dec
mov
xchg
mov
inc
dec
int
stos
sub
loope
repnz
mov
pop
insl
aaa
xor
mov
divb
cmp
adc
test
pop
into
add
add
fwait
jp
and
or
es
sub
call
sub
push
mov
sbb
dec
jae
add
loop
aam
inc
lods
cld
bts
int
int
aas
ror
xchg
and
add
dec
mov
js
sub
in
out
leave
jecxz
lret
shll
in
push
push
adc
int3
sahf
and
insl
pop
mov
sub
or
or
les
insl
inc
mov
lock
insb
ficoml
test
out
mov
push
mov
jno
dec
inc
or
cmp
divb
outsl
sahf
or
call
sub
cwtl
sub
adc
dec
lret
aas
scas
sub
and
jg
sbb
fldcw
jnp
rclb
xchg
lds
and
push
xchg
sbb
fst
lahf
lahf
mov
sub
loopne
out
aaa
jbe
push
xchg
adc
ljmp
push
sub
shll
pop
xor
iret
lock
aad
or
add
and
inc
jno
mov
aad
test
push
fisubrs
fcmovb
sbb
cld
movsl
adc
fnstsw
adc
push
cmp
sbb
inc
pop
loope
add
xchg
stc
jb
mov
loope
int
jnp
leave
and
cmp
shll
test
jl
sbb
imul
lahf
movsb
popl
sbb
movsb
add
mov
add
in
inc
inc
ss
test
sbb
out
loop
pop
lds
js
hlt
sahf
xchg
insb
mov
push
jmp
loopne
cs
jno
xchg
sbb
xor
cmp
les
aam
idivb
out
lahf
repz
push
push
or
jg
in
fs
repnz
pusha
test
lea
dec
pop
movsl
fisttpll
add
pop
and
lcall
adc
arpl
fmul
iret
pop
mov
mov
imul
dec
xor
lcall
pop
into
adc
jmp
ficompl
mov
gs
cltd
cli
int
aam
je
cmp
inc
and
and
sbb
add
inc
ret
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
aas
jle
mov
mov
ret
dec
fidivrs
mov
inc
movsb
dec
push
mov
push
sub
aam
in
cmpb
rcll
rclb
mov
push
mov
sub
test
pop
pop
push
lcall
pop
lock
rcl
dec
sub
daa
mov
jbe
scas
fldl
fldt
call
adc
adc
jp
enter
jl
xchg
repz
aas
imul
sub
dec
jle
leave
or
mov
hlt
adc
pop
jo
ds
cmp
or
int
and
sub
lods
das
jge
int3
sub
sub
test
je
fdivrs
mov
out
dec
cmp
loopne
lock
insl
aaa
mov
pusha
push
xchg
mov
testb
mov
lds
stos
sub
pop
push
sbb
rolb
fldcw
mov
inc
fbld
insl
xor
jae
stos
xor
or
or
sub
and
std
cmp
outsl
mov
mov
in
pop
push
push
add
out
mov
repnz
rcr
push
int3
addb
mov
movsl
daa
push
movsb
pushf
jnp
and
jmp
stc
shr
jae
arpl
fldt
lock
cmc
inc
inc
sub
js
mov
mov
or
jae
fisttps
movntps
adc
shrl
das
sbb
testl
or
aam
cmpsb
lods
or
cmp
adc
mov
pop
sub
nop
push
dec
jo
stos
rclb
jae
mov
bound
ficoms
sbb
gs
push
jg
jecxz
pop
loopne
fdivrs
cli
nop
xor
dec
mov
jmp
mov
data16
add
mov
push
cmp
notl
xchg
call
ret
out
dec
imul
stos
test
mov
mov
insb
sbb
push
inc
mov
imul
and
xchg
push
mov
pop
pop
add
test
mov
push
loope
stc
out
xor
push
cmp
out
mov
outsl
fs
movsl
jbe
in
mov
fsubp
out
xchg
mov
daa
fldenv
mov
dec
add
ja
mov
roll
mov
fldt
test
jmp
out
push
aam
xor
inc
aad
mov
test
mov
mov
mov
push
mov
pusha
pop
dec
jg,pn
insl
sti
jg
adcb
sbb
xor
xchg
loopne
pushf
testb
adc
ret
mov
lea
add
jle
adc
clc
mov
or
mov
jnp
in
popa
mov
sbb
push
add
jge
jmp
jne
mov
mov
shl
sub
mov
in
fst
rorl
out
mov
mov
push
mov
dec
pop
push
clc
je
and
lcallw
push
rcll
cmpsl
int3
xor
enter
xor
pop
js
lods
jbe
xor
add
in
pop
sahf
jne,pn
lahf
jp
popf
adc
inc
adc
add
loop
jae
cmp
mov
pop
cmp
add
rol
loopne
or
jmp
test
nop
lahf
jp
and
xor
jae
mov
mov
jb
loope
dec
pop
in
ficoms
loope
xchg
ja
cmp
mov
pop
push
mov
fidivs
cld
imul
push
stc
imul
sbb
push
push
fwait
mov
xor
or
pop
das
lcall
ret
shrb
int3
push
sub
push
xor
test
sbb
xchg
pop
std
rcll
mov
jg
loopne
push
ret
les
mov
mov
orl
in
aas
mov
mov
pop
aad
pop
jns
pop
sub
dec
xchg
push
mov
jmp
and
pop
or
mov
jne
inc
bound
xlat
repnz
and
jb
fcoms
icebp
dec
stos
lods
stos
mov
int
xchg
push
adc
aad
pop
mov
lahf
pop
xor
lock
fiadds
xchg
inc
enter
mov
les
cmpsl
push
jmp
iret
into
and
mov
or
lods
sub
mov
fcompl
cmpsb
cmpsb
xchg
dec
clc
cld
shlb
lods
sbbl
and
jecxz
arpl
push
cmp
leave
mov
push
fcmovnu
mov
inc
xchg
mov
adc
inc
repnz
aam
inc
mov
xor
repz
mov
inc
das
popl
les
mov
push
sarb
sbb
nop
lahf
push
cmp
aaa
and
cmp
cmp
inc
mov
mov
mov
jbe
pop
and
push
fadds
pop
es
fists
and
bound
adc
inc
jbe
fstpl
dec
lahf
sub
push
inc
xchg
add
lods
jae
orb
adc
aaa
into
xchg
out
xor
fldenv
clc
fsubr
adc
xacquire
ds
sbb
stos
int
lret
sub
jno
pop
jns
mov
roll
mov
es
es
pop
xchg
or
lahf
mov
cmp
popf
push
rorl
mov
shll
lret
daa
mov
mov
mov
pop
jl
neg
cltd
inc
mov
pop
fbld
cs
xchg
mov
push
arpl
enter
jo
je
dec
pop
or
jbe
pop
out
fdivrp
repnz
fisttpll
push
mov
les
loopne
push
jb
mov
or
push
jg
jno
mov
cli
mov
rolb
js
jnp
and
push
mov
mov
inc
arpl
fsubrl
mov
mov
pop
push
dec
in
ret
mov
pop
test
mov
sbb
pop
mov
push
int
sub
mov
inc
pop
inc
inc
xor
int
jns
js
jg
addr16
xchg
inc
xchg
add
std
jle
mov
pop
mov
adc
nop
jle
in
xor
in
jge
loopne
sarl
test
inc
add
xchg
pop
sahf
lods
in
adc
pop
push
and
fidivrl
lcall
xor
fidivrs
popa
frndint
mov
add
add
out
lods
jne
bound
clc
fdivp
cmp
call
insb
aam
roll
cwtl
adc
dec
push
sub
enter
shr
dec
lret
jno
fsubl
adc
xchg
popfw
in
out
add
pop
ja
pop
cmp
and
push
push
xor
and
nop
inc
sub
pop
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
lock
mov
insl
clc
ds
sbb
subb
add
je
xchg
rcll
jne
mov
test
lcall
xor
mov
lds
push
sti
jge
add
lods
lds
cmc
push
inc
insl
bnd
out
imul
jge
mov
adcb
adc
push
sub
xor
test
jo
in
test
decb
pusha
jl
ficoms
inc
cmp
faddp
or
mov
dec
ljmp
aaa
popa
aaa
inc
neg
cmc
aad
mov
std
sub
ss
add
cwtl
andl
lods
push
std
daa
insb
andl
xchg
imul
ss
fsubl
jae
clc
daa
int3
jae
mov
or
mov
pop
into
xchg
push
jmp
out
repnz
cmpsl
stc
scas
cmp
push
push
mov
pop
test
cmpsl
cmc
shrb
test
outsl
add
push
movsl
xor
cmp
popf
pop
popf
arpl
fidivrl
lock
jae
lock
and
mov
dec
in
and
pop
loop
xor
add
xor
xchg
mov
stc
mov
mov
jmp
aad
adc
sub
aaa
fdivr
and
mov
inc
mov
xchg
dec
inc
lahf
aaa
add
test
test
xchg
outsl
lods
test
gs
repnz
iret
push
add
jp
outsl
sub
xchg
out
xchg
dec
nop
adc
arpl
pop
cmpsb
push
test
xchg
inc
lret
lods
ja
outsl
ret
push
or
hlt
jbe
sahf
mov
adc
mov
xor
roll
fndisi(8087
cwtl
push
dec
mov
and
je
fdiv
rcl
pop
mov
adc
push
lds
js
imul
lcall
lret
imul
mov
std
or
outsb
pop
mov
cmp
insl
xchg
gs
lahf
in
jg
scas
jmp
sbb
xchg
pop
push
mov
out
leave
loop
mov
int3
lret
sub
pop
and
lods
pop
pop
leave
xor
dec
xor
fidivrs
xchg
cltd
out
iret
dec
sbb
mov
les
mov
leave
loop
inc
push
xchg
sti
cmpsl
sbb
pop
mov
add
cmp
fdivs
lods
xchg
xchg
dec
aam
xor
xchg
pop
aas
loop
roll
in
pop
jge
outsl
jb
sub
mov
add
inc
gs
hlt
mov
fsubl
dec
scas
inc
insl
jl
inc
daa
cmp
jmp
pop
or
add
adcl
mov
sub
jo
pop
push
push
popf
aas
xchg
mov
repnz
mov
jbe
adc
out
mov
clc
fwait
cmpsl
ja
rcr
sti
mov
aad
loope
roll
jo
inc
push
xchg
fstpt
add
mov
mov
adcl
add
xor
xor
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
mov
mov
flds
xlat
outsl
xchg
mov
sbb
xchg
mov
movsl
push
xchg
shrb
mov
mov
add
pusha
repz
jne
pop
push
aaa
and
test
aad
inc
iret
sbb
call
scas
insl
mov
sub
inc
shlb
in
in
das
jle
push
sbb
cltd
lret
add
jns
xlat
and
sub
push
add
imul
lea
xor
xor
dec
popf
aaa
xchg
lock
inc
fists
push
scas
add
pop
out
xchg
and
test
or
clc
into
dec
or
lods
js
inc
mov
daa
ja
sbb
and
cmp
mov
jb
dec
xchg
popf
pop
adc
ret
jp
push
aas
pop
push
mov
stos
movsl
das
cli
fsts
or
pusha
and
mov
pop
das
and
mov
js
or
dec
ja
xchg
shlb
pop
dec
mov
xchg
adc
push
push
out
or
xor
lcall
cld
xchg
es
and
mov
sarb
test
mov
mov
pop
adc
nop
dec
int3
xchg
adc
fwait
je
js
scas
sbb
mov
in
lods
pop
xor
inc
and
xor
icebp
loop
popf
sarl
sub
dec
push
lea
sbb
push
adc
cmpsl
xchg
adc
push
bound
pop
nop
punpckhbw
xchg
test
rcrl
aam
pop
xor
test
pop
jne
lret
pushf
lahf
stos
pop
adc
in
cmp
pusha
xor
pop
sbb
ja
shrb
sub
add
lods
inc
arpl
cmp
mov
ret
dec
or
stos
pop
inc
in
cmp
addl
das
and
and
lret
rorb
dec
mov
push
xchg
adc
mov
xchg
push
in
aas
xor
sbb
daa
ret
adc
dec
or
aad
ljmp
pop
xlat
and
jne
cmp
pop
dec
jle
cmc
insb
or
stos
dec
jo
cmp
in
mov
test
idivl
mov
mov
dec
jl
call
cmpsb
jle
subb
xor
mov
push
sbb
sub
mov
mov
cmpl
out
mov
mov
cmp
dec
mov
inc
es
or
sub
cmp
sbb
xchg
mov
push
adc
cmp
cmovge
jmp
jg
mov
aaa
es
data16
jp
jae
adc
sbb
cwtl
out
sbb
mov
shrb
sbb
pop
stos
repnz
mov
sarb
leave
mul
scas
xchg
sbb
outsl
popa
mov
sub
inc
nop
mov
add
add
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
adc
mov
addl
and
fadds
ja
add
pop
daa
inc
sbb
or
outsb
xor
lods
std
xchg
in
aas
call
mov
cmpsb
dec
add
inc
sbb
sub
ret
add
mov
pop
aas
jmp
repz
cltd
sub
push
xchg
je
or
into
lods
add
icebp
js
add
je
or
jmp
out
mov
mov
adc
sub
xlat
into
adc
or
push
push
je
or
cli
je
push
push
cmp
jl
rorl
add
insb
mov
pop
adc
call
cli
xor
xchg
repz
and
mov
sahf
cmp
test
jb
add
pop
cli
push
mov
ljmp
jecxz
cld
push
or
rcrb
and
pop
mov
mov
js
add
lret
loopne
mov
sbb
mov
jne
push
xchg
sbb
sbb
pop
int
sbb
add
sbb
hlt
aam
fstp
out
mov
sub
pushf
xchg
pop
mov
sub
or
clc
pcmpgtd
jg
xchg
mov
mov
repnz
add
xchg
adc
mov
aaa
pop
push
push
jno
out
mov
mov
pop
adc
pop
add
outsb
fbstp
pushf
dec
mov
jo
sbb
aad
jb
lcall
pusha
int3
stos
xchg
daa
outsl
pusha
add
xor
jmp
fdivs
orl
jp
dec
outsl
mov
addr16
adc
outsb
inc
sub
loopne
lock
fs
adc
pop
dec
and
ret
push
xchg
out
loope
and
add
sbb
jne
push
lret
push
mov
gs
sub
lds
and
lods
mov
xchg
push
cmc
call
dec
sub
stos
dec
xchg
test
lahf
inc
loope
je
out
xor
sbb
xchg
test
es
push
jg
movsb
dec
fcmovb
dec
inc
or
das
xchg
inc
push
cltd
enter
loop
sub
or
insb
cltd
out
ret
cli
cwtl
dec
test
sti
ljmp
iret
insl
stos
jns
gs
xor
inc
push
sub
push
add
lock
and
push
leave
pop
adc
lret
jmp
mov
movsl
popf
nop
cmp
sbb
and
jl
pop
imul
fdivr
mov
or
inc
ljmp
enter
push
xor
or
test
lcall
in
sub
les
sbb
push
daa
mov
loop
dec
fistpl
push
mov
push
adc
mov
sub
test
sbb
or
addr16
stos
jne
fcmovnbe
sub
repz
sub
rorl
jecxz
xor
mov
test
jge
sub
mov
lock
inc
orb
orl
sub
mov
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
int3
inc
test
push
sbb
mov
mov
cmp
call
lds
arpl
mov
cmc
xchg
or
mov
mov
ljmp
stos
mov
sbb
insb
leave
mov
fisttps
sub
xchg
xrelease
inc
add
sub
pop
inc
xchg
idivb
sbb
addr16
jmp
out
pop
movsl
push
jge
out
dec
cmp
xchg
dec
fildll
push
je
les
push
mov
test
test
out
push
mov
lea
icebp
loopne
sbb
out
pop
loop
pop
fisubrs
leave
in
and
sbb
mov
xchg
mov
and
je
push
or
ja
xlat
ret
push
mov
cs
sub
cmp
lds
inc
push
xchg
add
dec
xchg
ret
push
les
jno
fxch
push
push
mov
pop
pop
dec
adc
daa
std
xchg
adc
push
stc
sarb
xor
lods
mov
mov
push
jge
adc
sub
std
cmp
test
cltd
lret
lods
fadds
jp
dec
mov
dec
lcall
imul
xchg
xchg
or
pop
ljmp
jne
cmp
xchg
add
gs
and
imul
lods
push
out
add
add
cld
sbb
jecxz
cmp
dec
cmp
push
pop
lods
add
loop
insb
push
sahf
mov
pop
sbb
fnstsw
and
and
xchg
mov
inc
dec
insb
pop
adc
stos
adc
imul
sahf
and
mov
adc
inc
ss
mov
inc
insl
dec
pop
dec
filds
scas
inc
icebp
nop
ret
ret
outsl
shr
imul
add
mov
add
or
gs
sbb
fmull
mov
sbb
addb
ret
lods
xor
mov
cmp
mov
shll
sbb
mov
fs
mov
test
test
mov
iret
push
ds
xorb
inc
mov
jl
aad
mov
js
cmp
or
cld
ret
xchg
xchg
gs
push
mov
fmull
xchg
mov
push
xor
call
cli
sbb
popa
lea
mov
mov
ljmp
and
or
leave
pop
loop
call
test
xchg
incl
stos
mov
shll
add
mov
cmpl
int3
loopne
push
fs
dec
movsl
mov
or
into
int
dec
imul
jmp
jmp
pop
or
insb
mov
outsl
pusha
lret
xor
sahf
imul
fistpll
jo
xor
mov
xor
pop
cld
inc
and
aam
push
scas
xor
mov
fsubrl
and
sub
mov
xor
sub
stos
jle
sub
mov
loopne
push
lahf
movl
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
pusha
jo
pop
push
sbb
cmp
cs
test
cmp
ficompl
push
add
in
test
push
orl
or
cs
mov
js
mov
scas
js
outsw
sbb
and
scas
xor
or
into
out
outsb
push
test
cmpl
mov
mov
add
xchg
adc
aad
and
mov
aam
ret
cli
rorb
or
aad
jne
sub
inc
mov
cmc
sbb
adc
decl
lods
sbb
insb
add
ds
lret
push
sub
enter
inc
addl
push
push
or
sub
lea
aam
loope
mov
add
fwait
sub
pushf
lea
repz
hlt
push
or
aas
sbb
lods
dec
arpl
cld
das
pop
stos
push
push
cli
ds
xchg
add
int
lahf
sbb
adc
cmp
dec
push
ljmp
cmp
mov
mov
fimull
xlat
mov
xchg
pop
shrl
add
int3
subl
shl
add
mov
mov
and
out
mov
cli
cmp
cmp
rcl
mov
push
stc
sarl
fprem
out
cmp
aad
push
fiaddl
push
mov
test
out
pop
cmp
add
loopne
mov
inc
lcall
sub
fldl
mov
sti
xchg
pop
data16
jo
loop
xlat
lea
iret
setno
push
jg
pop
into
stos
mov
sbb
in
cmp
mov
movsl
out
dec
xor
and
pusha
sbb
inc
int3
lcall
stos
fwait
push
add
dec
jp
push
cltd
push
xor
sub
dec
pop
xchg
pop
push
nop
xchg
sub
mov
dec
ja
push
pop
inc
or
xchg
incl
fld
pushf
mov
pop
movsl
testl
repz
lcall
xor
ds
push
inc
dec
stc
stc
inc
push
sbb
pop
in
inc
inc
mov
sbb
inc
sbb
mov
shrb
add
data16
push
outsb
jnp
mov
mov
sub
pop
shl
mov
adc
jp
fwait
mov
popf
pop
mov
sbb
lret
pop
data16
fmuls
inc
aam
dec
jecxz
bound
loop
mov
data16
lods
fcomip
out
scas
mov
repnz
push
xchg
mov
push
imul
movsl
xor
mov
add
nop
adc
and
ljmp
mov
xchg
mov
inc
js
and
jle
add
jecxz
pushf
rcll
gs
add
das
jl
ret
mov
add
les
fs
cld
adc
inc
cwtl
push
or
pop
out
mov
inc
jmp
stos
mov
mov
sbb
xlat
ret
sbb
adc
cmp
ljmp
dec
addl
inc
add
scas
rolb
add
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
push
jns
rorl
sbb
sbb
inc
fimuls
sbb
in
cli
ja
stos
mov
inc
nop
pop
fildl
cmpsl
js
inc
push
cmp
lea
push
dec
das
add
mov
movsb
xchg
ret
jbe
jae
jmp
sub
push
loopne
mov
shll
pop
dec
push
mov
ljmp
add
mov
mov
mov
int3
test
mov
jne
adc
loop
js
sub
push
jb
and
mov
cmp
jae
mov
data16
test
inc
dec
sub
mov
scas
lea
xchg
lds
mov
mov
aad
scas
push
out
pushw
fisttpll
shlb
cmpsl
ret
popa
imul
incb
scas
jne
jae,pt
int
int3
jae
add
adc
adc
shr
mov
aam
imul
mov
and
inc
scas
icebp
sub
jbe
adc
lret
mov
mov
cltd
sub
xchg
pop
repnz
cmc
shlb
sbb
adc
icebp
sbb
std
les
inc
dec
aam
jno
sub
aad
mov
insb
mov
cmpsb
pop
iret
and
inc
mov
push
fistl
subb
out
dec
cmp
mov
int3
or
adc
mov
mov
outsb
xchg
cmc
ss
pushf
lcall
pushf
in
sbb
adc
icebp
stos
and
fstpl
adc
or
fists
aam
scas
enter
cmc
mov
sbb
aam
sbb
pushf
dec
loop
lret
xor
loop
mov
insb
loopne
scas
repz
pop
adc
dec
inc
out
fistps
mov
sub
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
add
cmp
cmp
sub
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
in
and
dec
insb
gs
arpl
push
outsl
inc
jne
jae
jb
je
inc
add
daa
inc
add
daa
inc
add
and
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
mov
and
inc
add
inc
add
and
inc
add
es
add
inc
add
inc
add
daa
inc
add
and
push
movsb
scas
or
movsb
mov
inc
add
inc
add
add
es
add
and
inc
add
es
add
and
inc
add
inc
out
sbb
inc
add
es
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
jle
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
and
push
movsb
stos
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
xchg
and
test
inc
add
loop
js
lcall
and
add
nop
and
and
addb
add
hlt
clc
sarb
sub
jle
add
add
jl
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
addl
sbb
inc
add
addl
sub
inc
add
addl
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
repz
sti
addl
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
adc
add
add
add
add
add
loopne
add
add
add
test
add
les
add
call
xchg
add
add
xchg
add
add
add
add
outsb
xchg
add
add
xchg
add
add
rolb
add
lock
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
sbb
add
mov
add
add
pop
mov
add
add
jl
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
orb
add
add
add
add
lret
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
add
data16
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
dec
mov
add
add
mov
add
add
add
add
cwtl
mov
add
mov
add
add
fimull
add
lock
add
mov
add
mov
add
mov
add
add
add
add
add
mov
add
add
mov
add
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
and
add
lea
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
test
add
test
add
test
add
xchg
add
add
xchg
add
add
add
add
outsb
xchg
add
add
xchg
add
add
rolb
add
lock
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
sbb
add
mov
add
add
pop
mov
add
add
jl
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
orb
add
add
add
add
lret
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
add
data16
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
dec
mov
add
add
mov
add
add
add
add
cwtl
mov
add
mov
add
add
fimull
add
lock
add
mov
add
mov
add
mov
add
add
add
add
add
mov
add
add
mov
add
