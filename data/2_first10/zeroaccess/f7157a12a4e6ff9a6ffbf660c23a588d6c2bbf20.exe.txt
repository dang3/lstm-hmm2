push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
xor
jmp
fstpl
bound
sub
pop
add
pop
jne
stc
in
inc
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
push
insb
test
mov
xchg
mov
mov
adc
mov
stos
mov
icebp
shll
test
popf
dec
bound
mov
das
and
or
andl
pop
push
mov
jno
rorl
js
sub
sbb
cltd
or
dec
shll
add
insb
inc
inc
sbb
sbb
test
clc
sbb
and
xchg
xor
out
adc
popf
sarb
insl
ds
scas
arpl
xchg
add
fisttpl
push
jns
sub
cmp
push
rep
lods
sbb
scas
test
push
and
ret
nop
rcll
mov
dec
xchg
adc
adc
in
int3
push
xchg
insl
into
mov
pop
ret
xchg
dec
push
jnp
xchg
mov
aam
jbe
mov
outsl
push
xor
mov
repnz
sbb
jmp
inc
mov
dec
sub
inc
push
orps
rcrb
aas
jne
mov
enter
aas
sbb
sub
lret
ret
lahf
sti
cmp
push
fidivl
cmpl
pop
dec
ret
insb
out
sub
jbe
lock
in
push
cld
push
std
outsl
testb
popa
icebp
enter
loop
into
leave
add
aam
dec
adc
sbb
stos
aaa
mov
mov
push
pushf
aaa
movb
mov
dec
outsl
mov
in
or
push
leave
and
cmp
movl
cltd
xchg
and
pop
sbb
inc
enter
xor
in
push
xor
inc
dec
lret
and
sub
mov
aas
dec
sbb
cmpsl
sahf
cmp
or
pop
test
adc
cmp
scas
loop
les
es
leave
cmp
and
fdivrl
push
push
jne
loopne
ljmp
mov
add
fsubl
clc
sub
fcomip
jne
pop
cli
aam
daa
mov
jg
cmpsb
push
outsb
call
aaa
jle
or
mov
jo
pop
adc
gs
push
push
xchg
lret
sub
jge
jae
int
cwtl
xchg
fwait
clc
push
adc
addr16
push
pop
and
mov
or
inc
push
dec
shr
out
pop
jge
out
mov
ret
fdiv
pop
or
mov
nop
movsl
push
aad
cld
add
std
cmp
jl
stc
test
jae
daa
scas
call
fmuls
lcall
in
enter
xlat
loop
jbe
xor
pop
jecxz
mov
jl
mov
lret
lret
cwtl
push
xor
shl
sbbb
mov
and
cmp
xchg
lods
lcall
movsl
or
pushf
std
mov
mov
test
insl
cltd
outsb
cli
out
pop
jmp
jb
xchg
into
int
lock
repz
out
fcoml
push
pop
sub
lcall
bound
fmull
in
mov
in
xchg
xchg
movsb
push
or
xchg
dec
int3
adc
lea
jno
dec
push
add
aas
xchg
jo
mov
xor
lds
arpl
insb
add
loop
mov
push
jp
mov
mov
orb
clc
lods
in
ss
and
cmp
shlb
dec
rcrl
sti
xchg
les
xchg
inc
jnp
in
and
push
lock
clc
jmp
add
ficoms
add
rorl
daa
jno
ret
xchg
adc
leave
add
iret
bound
inc
das
or
inc
cmc
xor
leave
jns
fcmovnbe
xchg
mov
push
cmp
lahf
push
imul
xchg
subb
ficomps
outsl
xchg
in
xchg
aas
dec
mov
andb
and
pop
les
adc
xchg
push
mov
or
call
dec
xchg
sbb
inc
mov
pop
mov
xchg
jl
mov
and
mov
cltd
xchg
hlt
xchg
xacquire
icebp
mov
fldl
roll
in
push
pop
mov
out
xor
fsubl
nop
push
loop
xchg
hlt
andb
jno
repz
push
mov
pop
pop
or
icebp
in
lods
movsb
pop
sub
cli
xor
loop
xor
jmp
outsb
mov
lcall
push
sar
and
inc
and
adc
push
test
cltd
cmpl
push
call
add
sbb
iret
nop
adc
mov
lods
adcl
or
nop
aas
pop
insb
idiv
adc
add
dec
inc
inc
pop
sub
dec
ljmp
test
mov
adc
pop
add
das
sbbb
adc
repz
jbe
mov
jo
ret
pop
bound
sbb
mov
ljmp
jle
ret
or
fsubs
mov
pop
lret
push
mov
jmp
mov
and
out
aas
mov
es
rcr
jnp
and
test
jae
fstl
mulb
xchg
inc
sub
mov
cmpb
and
sbb
sarl
rcrb
add
imul
push
mov
stos
pop
lcall
push
and
adc
repz
pop
out
jg
cmc
aaa
leave
xchg
cmp
idivb
out
pop
js
cmp
es
jb
mov
mov
mov
sahf
jns
add
shll
xchg
lcall
mov
leave
aaa
cmp
dec
mov
movsb
stos
xor
pop
jae
pusha
xchg
mov
test
mov
out
das
dec
cmp
and
xchg
ret
sbb
dec
or
and
jns
sub
mov
mov
mov
jp
in
sbb
in
popa
stos
test
out
jnp
lea
dec
js
push
stos
lret
cmp
inc
inc
lret
ds
or
jmp
and
jg
sub
mov
ret
shlb
and
cmp
std
jo
fldcw
mov
out
push
pop
cmpsb
in
sub
dec
shll
adc
out
mov
in
mov
pushf
push
aaa
push
push
xchg
mov
cmp
in
jbe
nop
mov
fcmovnb
sub
lret
lret
lods
rcrl
ret
fcmovnbe
mov
xchg
mov
jg
add
rcrb
mov
dec
adc
fsubrl
insl
leave
repz
fstpl
jne
mov
xor
mov
sbb
test
and
and
and
data16
in
in
lock
lahf
jb
cmp
mov
cmp
rcll
pushf
das
push
loopne
mov
repz
int
pop
or
push
rol
jb
ret
xlat
cmp
mov
dec
push
lea
xchg
jo
lret
mov
das
dec
mov
out
int
push
sub
lret
rol
popa
addl
xor
pop
jge
push
xlat
pushf
inc
sub
inc
dec
xor
dec
and
out
jl
or
push
adc
fldcw
ret
ret
je
pop
add
std
mov
lret
push
pushf
mov
add
imul
je
pop
sub
xchg
pop
sbb
cmpsl
cli
adc
xor
out
and
imul
sbb
push
mov
pushf
aas
sbb
xor
pop
int
subb
xlat
pop
dec
and
dec
and
and
daa
ja
addr16
dec
push
jnp
xorb
dec
cmpl
nop
clc
push
mov
mov
outsb
xor
lahf
sub
imul
jne
pop
inc
mov
or
outsl
in
pop
xchg
mov
rolb
cld
or
popa
stos
lock
pop
mov
arpl
daa
push
xchg
addr16
mov
fidivs
add
in
subl
push
cld
cmc
xchg
sbb
adc
jl
push
add
aad
cmpsl
push
movsl
adc
aas
inc
mov
aas
scas
sbb
mov
hlt
out
in
stos
sbb
ds
popf
rorl
idiv
cmp
push
dec
outsb
xchg
and
fs
push
ljmp
imul
and
roll
xor
rcrb
mov
add
mov
sub
adc
jmp
dec
jne
shlb
sub
sub
imulb
fnsave
jl
adc
packssdw
push
cld
stos
sahf
cmc
add
add
add
push
push
loope
imul
mov
enter
xchg
popf
hlt
in
mov
hlt
popf
xchg
mov
pop
pop
push
mov
push
mov
xchg
stos
xchg
and
jmp
faddl
push
inc
js
imulb
fidivl
negb
add
push
scas
mov
frstor
xchg
das
dec
pop
mov
enter
aad
cli
lret
and
dec
sub
inc
insb
loope
arpl
mov
dec
je
sbb
cmc
sbb
into
jo
mov
sub
and
out
repz
lret
sbb
inc
lea
pop
xchg
ret
mov
stc
pop
test
or
sahf
insb
xchg
or
repnz
xchg
add
andb
xor
cmpsl
sbbl
mov
scas
jmp
dec
ja
leave
mov
jo
xchg
cmp
adc
mull
dec
cmpsl
push
jo
leave
and
sub
xor
push
clc
enter
in
jnp
hlt
int
mov
aaa
ret
test
and
mov
push
push
mov
stc
leave
jg,pt
enter
outsl
jmp
push
jo
sub
pop
pop
xchg
ss
out
pop
imul
jno
jl
sbb
enter
jae
fistl
adc
inc
mov
imulb
mov
xorb
js
mov
hlt
ja
mov
jle
pop
imul
fs
mov
notb
xlat
insb
adc
sbb
jge
inc
cmp
jge
aaa
inc
dec
lea
mov
popf
push
mov
sbb
sbb
xor
pop
shrl
out
push
push
cmp
outsl
popl
movsl
jp
into
cltd
data16
adc
and
movsl
jne
loopne
arpl
jmp
mov
ljmp
das
popf
out
xchg
push
and
les
push
and
cmove
adc
pop
stc
aad
push
mov
ja
lea
xchg
outsb
pop
fisttpll
rclb
shrb
mov
leave
jo
lcall
or
cmp
mov
mov
push
mov
mov
mov
sub
dec
push
cmpsb
jp
sub
jb
push
or
push
pop
cmc
cs
dec
rolb
jb
dec
mov
cmpsb
les
jl
call
push
stos
mov
stos
int
shrb
jnp
fiaddl
stc
xor
jbe
fcmovnb
div
aad
pop
and
inc
addl
fildl
lock
dec
cmp
bound
out
or
femms
out
ret
mov
and
out
or
idivl
or
cli
mov
or
mov
insl
push
cli
push
jne
xor
sbb
ljmp
fiadds
js
jecxz
lods
sahf
or
out
jg
and
lds
ret
sbb
lcall
inc
sub
hlt
call
jp
push
inc
cmp
sbb
mov
inc
ja
hlt
shlb
mov
addr16
pop
xor
jbe
in
or
in
sub
sbb
adc
mov
lods
mov
adcl
or
scas
mov
dec
lahf
outsl
dec
cwtl
push
clc
call
jle
out
or
xor
test
and
popa
mov
adc
mov
adc
fcomps
mov
sub
mov
je
std
fistpll
lds
repnz
or
mov
sub
imul
push
iret
adc
mov
push
pop
and
out
inc
nop
push
call
or
cmp
push
insb
mov
std
mov
xchg
lea
cmpxchg
pop
push
mov
mov
cwtl
fstl
sbb
adc
pop
fiadds
orl
jmp
ds
jecxz
or
in
cmpsl
cmp
xchg
mov
pop
int
lahf
mov
sub
call
jbe,pt
jl
jns
dec
add
push
pop
mov
out
xor
adc
sub
or
sub
mov
cli
push
adc
movsb
adc
std
sbb
mov
mov
push
sub
movsb
fidivs
in
adc
xlat
jp
into
jl
in
loop
fisttpl
cmp
repnz
aaa
mov
movl
pusha
pushf
rcll
data16
and
les
fistpl
or
lock
xor
mov
loopne
or
enter
es
in
xchg
notl
mov
jg
sbb
cs
fildl
cmc
xor
mov
or
in
cmp
clc
data16
cmpl
lods
cli
mov
jg
sub
xchg
push
cmovg
adc
or
aas
outsl
jb
dec
cwtl
jb
in
cmp
fisttps
ljmp
adc
cs
pop
loope
insb
popa
hlt
outsb
mov
sub
xor
rorb
insb
imul
xor
sbb
ret
xchg
idivl
in
aam
mov
stos
les
cmpb
cltd
adc
mov
sti
xchg
out
ss
and
addb
nop
mov
xlat
adcl
outsb
sbb
outsb
jle
mov
bound
loopne
clc
fiaddl
daa
lods
push
in
popa
int3
adc
inc
mov
adc
xchg
sub
lret
test
ds
loop
test
inc
shll
push
outsb
scas
sbb
fidivs
loope
outsb
es
aam
adc
xchg
push
ret
movsb
fists
test
cld
push
int3
out
inc
jbe
push
pusha
cltd
jns
jmp
in
and
loope
push
jo
push
xlat
mov
mov
in
dec
ds
movsl
xchg
ret
mov
add
es
jbe
fwait
xor
or
adc
dec
push
lods
adc
mov
ret
dec
mov
stos
inc
lahf
cs
cmp
das
repz
int
push
xor
ror
sub
pop
dec
push
xor
pop
test
cmp
je
data16
jae
fdivr
sbb
in
ret
in
mov
pop
test
scas
sbb
divb
lea
xlat
popf
stc
mov
or
lea
ja
xor
xchg
loope
outsb
lcall
dec
ds
mov
jns
stos
sub
pop
xchg
dec
xchg
in
jb
mov
push
xchg
ret
fs
cmpsl
push
inc
test
pop
lods
cmp
mov
push
or
xchg
cld
jns
inc
and
mov
ja
cld
cmp
stos
adcb
jle
divl
push
mov
pop
ret
pop
mov
popa
aad
xchg
pop
dec
push
cwtl
lods
addl
jg
sbb
loop
daa
les
mov
push
lock
mov
pusha
sub
stos
xor
mov
cmp
js
mov
push
xor
dec
mov
fildl
out
xchg
push
add
dec
rcr
pop
xchg
lock
add
jno
movsb
inc
xchg
fildl
jg
or
adc
pop
cmp
popl
rcl
ljmp
pop
inc
movsl
pusha
int
dec
mov
int
push
mov
cwtl
cmc
fcoml
fcmovu
add
mov
lahf
xchg
xor
aam
sbb
sub
adc
fwait
sub
scas
dec
test
aas
lds
xor
outsl
cs
jno
or
add
ds
sub
dec
in
rorb
nop
movsl
flds
inc
imul
mov
and
xchg
clc
decb
cld
and
popf
jae
mov
in
icebp
inc
xor
rclb
ret
ljmp
jb
mov
imul
sbb
xor
in
scas
sub
inc
out
enter
lret
xchg
fdiv
cmp
fst
mov
mov
test
xchg
ljmp
mov
out
cwtl
push
push
mov
mov
stc
loope
lret
mov
sti
ret
std
push
jecxz
add
gs
pop
rclb
dec
cmc
xchg
cmp
movsl
inc
cmc
add
fwait
mov
int3
pop
cmp
cmc
incl
mov
out
cmp
jb
cmpsb
sub
insl
mov
mov
add
rolb
aaa
xor
add
ss
stos
fisubs
insl
mov
ja
ds
lahf
andb
pop
shll
push
mov
jae
imul
dec
rclb
add
rorb
shrb
fisubs
fidivs
xlat
jo
xchg
xchg
fdiv
pop
daa
hlt
gs
orl
mov
in
push
stc
int3
stos
mov
mov
or
push
rorb
test
rcr
push
push
cmpsb
push
leave
bnd
imul
leave
clc
or
out
cmpsl
add
repnz
je
jmp
popf
and
aaa
inc
jmp
or
cmp
mov
mov
ss
dec
pop
sub
dec
cld
add
jecxz
inc
mov
mov
clc
iret
outsb
xor
sbb
xchg
pusha
rcrb
inc
jg
add
movb
mov
adc
sarl
lds
adc
lret
mov
mov
mov
push
sub
and
scas
addr16
mov
mov
mov
cltd
outsl
aaa
sbb
jns
stos
out
call
sub
lods
aaa
cmp
cmp
mov
leave
dec
imul
adc
inc
and
loop
outsb
xchg
mov
sahf
push
push
subb
push
sub
add
arpl
out
or
jp
mov
inc
cmp
scas
sbb
add
aad
cld
mov
mov
push
lret
enter
les
enter
inc
sbb
push
subl
dec
ja
add
and
std
push
xchg
shr
inc
jnp
mov
call
insl
cmp
xor
push
sar
cmpsl
std
jl
add
mov
arpl
aad
addr16
lock
mov
cltd
js
js
addl
push
dec
cmp
data16
jl
push
leave
push
xor
adc
cmp
shlb
add
mov
pavgw
jae
mov
push
sub
and
dec
mov
and
fisttpl
xor
xchg
xchg
sub
sub
scas
pop
insl
fcompl
mov
das
adc
mov
dec
sub
cld
pop
add
or
shlb
test
sahf
les
mov
jae
add
testl
sbb
enter
push
push
clc
bnd
fs
call
dec
jno
cwtl
fistl
mov
sbb
jae
or
fcmovnbe
sti
push
repz
fwait
push
dec
jg
int3
fdivp
inc
adc
fimuls
and
and
mov
mov
movsl
jmp
mov
xchg
inc
insb
fwait
and
xchg
mov
mov
mov
and
mov
mov
sub
xor
push
in
cmpl
push
adc
aaa
cmp
test
sbb
push
pop
adc
inc
push
leave
loopne
dec
mov
push
or
pop
insl
dec
cmpsl
js
fmuls
bound
leave
repz
jno
in
iret
or
jge
addr16
cmp
add
mov
push
mov
js
gs
icebp
gs
jae
jns
pop
icebp
mov
lcall
dec
and
sbb
cld
adcb
inc
xchg
cmpsl
lcall
sbbb
mov
cltd
mov
out
ds
fcomps
sarb
dec
xchg
repz
pop
adc
push
push
lret
adc
mov
out
sub
nop
clc
lock
add
mov
in
jg
fdivs
xchg
jns
dec
cmp
enter
push
pop
jo
insl
inc
fistl
mov
xlat
sbb
push
mov
inc
mov
lret
add
inc
sub
cmc
movb
or
iret
lret
mov
rcrb
loop
out
xchg
push
jmp
jp
leave
cmpsb
add
or
pop
mov
fbld
xor
mov
stos
sub
dec
dec
mov
repz
fwait
or
sub
adc
aas
mov
add
fstps
subb
push
mov
test
cmp
sbb
in
inc
repz
mov
das
out
pushf
jg
add
sbb
fcomp
pop
cmp
sbb
nop
das
int3
pop
dec
loope
sbb
cmp
repz
push
xlat
jmp
mov
int
loopne
loopne
push
add
sbb
nop
mov
mov
ds
sub
inc
cmp
enter
xor
arpl
sbb
call
mov
pop
sub
pop
jle
cld
mov
xchg
dec
xchg
jo
cmp
test
xor
ss
xor
pop
pop
mov
xor
imul
ret
fnsave
out
inc
in
xchg
ds
lods
cli
fdivl
ljmp
or
aaa
out
icebp
pop
push
inc
cmc
mov
mov
jo
gs
int3
xchg
pop
jp
mov
push
pushf
out
push
stc
lea
jns
cwtl
xor
pop
inc
or
mov
cmp
xchg
pop
je
out
push
or
jne
test
mov
test
lods
add
leave
inc
aaa
jns
imul
pop
cmpsb
shlb
mov
lds
insl
lods
inc
fsubl
int3
insl
jecxz,pn
data16
shll
pop
cs
xchg
lahf
std
mov
sbb
push
mov
popf
and
jbe
sbb
stos
inc
movsl
lahf
or
jne
test
ja
in
int3
mov
sbb
jae
inc
jg
in
pop
out
xor
inc
mov
popa
jge
jmp
addb
hlt
jae
addr16
dec
xchg
lret
test
decb
imul
ret
inc
push
add
and
mov
nop
call
cwtl
loop
pop
repz
xchg
push
mov
inc
mov
xchg
aad
icebp
fcmove
pop
adc
sahf
mov
xchg
sbb
mov
sub
push
mov
movsl
aaa
stos
test
pop
jno
jb
test
out
jnp
movsl
dec
aam
gs
pop
movsl
stos
enter
jg
xchg
mov
andb
bound
xchg
xchg
xor
xchg
xchg
cmp
mov
jl
and
daa
xor
pop
sub
adc
xchg
adc
fildll
pop
pop
and
out
mov
movsb
inc
pop
cs
sub
out
xlat
lea
sbb
daa
dec
push
js
aas
sub
fucomp
enter
xchg
xchg
fs
jnp
xor
push
fcos
das
dec
stc
rcr
and
jbe
hlt
ss
sub
pop
inc
aas
scas
not
mov
jns
shrb
cmpsl
or
shrb
mov
enter
test
push
xor
mov
jb
jge
pop
jge
mov
clc
adc
sahf
dec
dec
scas
outsb
rorb
enter
test
stos
decl
notb
fucomp
cld
push
out
imull
test
adc
add
fisubrl
jle
ljmp
cs
mov
mov
push
lret
outsl
push
out
call
or
and
cmp
pop
mov
repnz
test
test
lods
aad
mov
push
mov
rcr
out
add
dec
sbb
push
and
or
movsl
jne
push
jl
inc
stos
jae
mov
or
das
dec
je
loop
jbe
insl
movhlps
sub
test
fwait
sub
cld
or
xchg
xchg
sbb
mov
cmp
push
outsl
push
mov
pop
push
pop
lea
out
jbe
fmuls
outsl
out
mov
pop
xchg
shl
xchg
hlt
test
rclb
jle
jmp
mov
cmp
aad
loope
mov
jno
xchg
aad
movsb
push
lods
inc
inc
loope
mov
xchg
lret
cmp
ror
or
scas
movsb
movsb
outsb
xchg
mov
mov
cltd
push
mov
pop
ret
hlt
out
and
mov
popa
inc
mov
sub
fcmovnu
mov
rclb
ljmp
mov
jbe
jle
lds
inc
or
xchg
loop
xchg
mov
push
add
sub
cmp
or
lret
shll
xchg
fs
enter
mov
test
cltd
xlat
fnstcw
and
inc
and
clc
sbb
adc
in
cmp
movsl
lds
into
mov
mov
nop
pusha
aad
or
sbb
insl
icebp
pop
cld
lret
lods
xchg
cmp
movsl
scas
cmp
mov
leave
inc
lcall
shlb
add
sahf
lret
loopne
lahf
lock
pop
out
cld
sti
stc
loope
aaa
and
ret
imul
and
cmp
inc
lock
iret
sbb
aas
pop
adc
mov
push
test
adc
push
orb
jmp
or
jecxz
and
jp
enter
pop
aad
cmp
test
cmc
mov
or
in
inc
into
inc
cltd
mov
xchg
sbb
enter
dec
fidivrs
stos
push
sbb
add
sub
cmp
in
dec
std
imul
iret
lods
jo
dec
jb
mov
sti
mov
push
stc
movl
cld
fnstcw
stos
fisttpll
leave
inc
mov
mov
adc
cmp
inc
ret
dec
and
leave
lret
lcall
mov
xor
clc
inc
mov
in
mov
add
imul
add
test
cwtl
dec
jge
sbb
push
leave
add
cli
inc
inc
mov
push
mov
sub
add
imul
inc
repnz
sbb
dec
std
pop
jb
rcll
into
jmp
movsl
test
push
sbb
lods
add
pusha
shrb
shll
gs
jp
cli
lods
lahf
dec
pop
pop
inc
or
loopne
sbb
into
push
dec
lods
jl
ja
pop
and
push
sbb
cmp
repz
test
inc
mov
fs
cmp
mov
inc
mov
insl
pop
xor
jne
inc
pop
or
dec
stc
ja
dec
sub
or
in
daa
pop
lahf
and
mov
xchg
dec
add
imul
rolb
aam
jne
and
cmpsb
mov
lret
dec
jb
push
mov
inc
add
hlt
dec
mov
cld
push
out
in
pop
adc
jb
mov
ret
addb
fldcw
mov
jp
mov
lods
sub
arpl
ja
aaa
fistps
push
nop
jp
sbb
adc
add
movsb
adc
int
jp
lods
dec
adc
fwait
xor
mov
int3
orl
mov
jp
data16
push
dec
pop
push
sqrtps
jae
jno
gs
xchg
jne
adc
inc
ficoms
push
scas
sub
xor
mov
mov
mov
xchg
lds
mov
into
andl
out
in
add
test
sarl
ljmp
add
dec
pop
mov
in
xchg
movq
test
adc
fwait
pop
push
inc
sub
dec
jmp
in
cmp
enter
jnp
lret
push
fcmove
and
inc
xchg
das
lods
scas
mov
xchg
cmpsl
dec
imul
ret
xor
repz
insl
mov
ret
imul
pushl
push
clc
or
cmp
pop
pushl
inc
dec
pop
and
mov
mov
stc
outsb
and
inc
aad
dec
lahf
sub
loop
mov
cs
shrl
loope
fcoms
testb
lahf
xchg
dec
dec
nop
loopne
sub
adc
cmovne
test
cmpsl
xchg
fidivrl
adc
ret
adc
add
cmpl
or
mov
push
int3
int
adc
pushf
rcrb
add
mov
mov
pop
rcll
shlb
je
push
cmp
mov
mov
loope
movsb
mov
jmp
test
push
jns
mov
ds
das
ds
in
dec
outsl
jns
and
daa
and
repz
pop
inc
data16
mov
leave
mov
inc
cld
movsl
lock
cmp
and
cmpsl
insb
jle
add
popf
outsb
sbb
xchg
shll
mov
add
pop
adcb
pop
jns
repnz
mov
shlb
shll
loop
push
dec
aaa
dec
daa
test
test
ret
lock
dec
jne
cltd
fbstp
ds
in
xor
cld
enter
inc
fsubrs
cli
outsb
in
inc
imul
xlat
jmp
jne
pop
fcoms
inc
jp
stos
xchg
and
cmpsb
sbb
les
pop
xorb
daa
adc
jecxz
imul
out
lock
jae
adc
scas
stc
not
pop
pop
push
push
pop
sbb
or
lods
pop
add
xor
js
int
pop
add
push
mov
movsb
test
idivb
stos
add
mov
inc
or
sbb
lahf
bound
mov
ja
mov
roll
pop
xor
mov
sbb
dec
lret
adc
lods
in
jbe
popa
ss
pop
mov
push
mov
and
xor
sahf
jo
push
imul
pop
je
mov
push
cmp
add
jg
xchg
arpl
adc
lret
scas
or
not
sub
pop
mov
lea
movb
mov
jbe
xchg
sbb
cli
pop
mov
push
inc
jbe
mov
pop
mov
mov
icebp
mov
mov
shrl
sbb
iret
sbb
jno
enter
mov
or
dec
loop
pop
fisubrs
jecxz
add
inc
add
pop
mov
loope
xchg
imul
aad
mov
ret
fucomp
dec
or
mov
in
idivl
xchg
ret
mov
loop
bound
lods
inc
insb
push
inc
loopne
lahf
rol
shl
push
not
xchg
das
sarb
int3
and
adcb
js
jg
adc
cmp
xchg
stos
clc
inc
pop
fsubs
out
mov
stc
shlb
mov
test
cli
iret
adc
stos
jl
dec
insl
sub
insl
int
movsb
mov
ja
jle
fnstenv
adc
cld
dec
daa
testb
mov
sbb
btc
push
lret
daa
sbb
xchg
mov
jns
mov
inc
lret
sbbb
pop
xchg
je
test
sbb
add
inc
jg
in
call
pop
shl
lcall
cmc
dec
xchg
sub
divl
lds
outsl
jbe
add
add
add
call
inc
shlb
movb
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fs
stc
les
pop
bound
fucomip
loop
add
xor
cmp
push
mov
imul
mov
fs
pop
stos
icebp
dec
testl
sub
add
cli
nop
inc
inc
push
movsb
mov
lahf
mov
sub
push
sbb
and
insl
stc
ss
cs
push
fidivs
outsl
jl
xor
lock
adc
pop
outsb
xchg
sub
sti
pop
cmp
adc
in
pop
imul
clc
mov
xlat
lods
adc
dec
mov
and
nop
inc
mov
imul
mov
adc
pop
mov
call
xchg
add
mov
lods
mov
nop
scas
mov
and
cld
aaa
repz
call
shrb
and
cmp
sbb
mov
sti
ss
orb
push
pop
adc
outsl
je
imul
pop
std
adc
xchg
out
sub
sbb
sbb
scas
mov
adc
pop
mov
sub
sub
push
in
out
lods
clc
mov
inc
xor
das
add
mov
orb
and
lcall
loopne
in
addl
cmp
pop
sti
shlb
rsm
mov
stos
adc
push
rorb
insb
dec
insl
mov
ja
dec
ffreep
test
or
jl
lret
sahf
adc
jb
mov
out
lahf
adc
or
xchg
dec
mov
in
addr16
add
cmc
mov
jno
dec
jo
inc
decb
mov
adc
lret
pop
outsl
aas
push
shlb
repz
jae
cmpsb
nop
sbb
sub
mov
les
insb
stos
fnstcw
aas
incb
pop
lcall
aad
mov
cmpsb
xchg
sbb
sti
in
mov
mov
divb
inc
jo
push
add
sbb
loopne
cld
mov
mov
sub
inc
xor
mov
mov
inc
sub
fisubrl
leave
pop
cltd
leave
imul
js
xchg
in
and
inc
in
adc
cmc
stc
cmp
pop
cmpsb
cmp
cli
jno
or
sbb
xor
xchg
pushf
jno
and
in
add
sbb
jecxz
daa
sbb
sub
lods
fwait
xor
f2xm1
and
cs
xlat
lods
mov
jns
push
sbb
xor
mov
popw
bound
mov
jno
cld
jp
or
test
cmp
lods
xchg
push
mov
sub
ljmp
imul
xchg
xchg
pop
fstpt
sub
xchg
sub
loopne
and
and
pop
xchg
cmpsb
or
aas
jg
inc
or
outsb
insl
sahf
mov
push
pop
jmp
push
imul
fdivrp
arpl
loope
pushf
notb
adc
inc
ja
mov
or
and
dec
dec
mov
sbb
xchg
adc
insl
loope
cmp
cmp
jbe
dec
fimuls
dec
cmc
stc
hlt
xchg
fdivs
mov
or
js
mov
stc
and
repz
sub
je
cmp
adc
psrad
or
mov
push
in
adc
cmpsl
pusha
aam
cmp
adc
or
add
ljmp
jnp
push
and
addr16
and
push
sub
imul
movsl
notb
fwait
xchg
cmp
xchg
sbb
gs
data16
negb
dec
icebp
mov
test
mov
sbbl
dec
insl
push
out
aaa
jle
divb
mov
notb
or
movsl
sub
mov
jl
jle
cmpb
pop
jmp
add
mov
jnp
jmp
mov
mov
adc
cmp
movsb
fdivl
xor
push
sub
mov
adc
lret
dec
ss
add
mov
mov
or
mov
jbe
cmp
mov
inc
loop
fldt
and
inc
sub
sbb
pushf
sub
pop
mov
and
cs
push
ret
in
sbb
mov
call
mov
das
mov
mov
psubusb
xorb
cmp
aad
add
dec
pop
aaa
jmp
rclb
jle
cmp
push
mov
fs
rorb
fisttpl
loop
mov
mov
pushf
push
fs
add
dec
or
dec
jne
jbe
cmp
cli
mov
ret
lcall
push
repnz
rcl
imul
jb
inc
pop
icebp
push
out
sbb
jp
orb
inc
lret
pusha
add
int
cmp
jp
jmp
pop
ret
dec
mov
mov
leave
sahf
arpl
lods
dec
jbe
xor
lds
mul
xchg
jmp
negb
xchg
imul
jecxz
cmpl
and
or
dec
movsb
scas
mov
int3
arpl
xchg
add
daa
xor
loopne
in
mov
jmp
mov
inc
push
fstl
leave
jae
and
push
ret
xor
inc
shll
ficoms
fcompl
daa
fstl
in
dec
mov
mov
incl
lret
jnp
sub
sahf
data16
loop
push
aad
pop
mov
or
mov
and
lds
jp
xchg
jge
sar
jle
adc
mov
js
cs
inc
inc
test
jnp
cwtl
add
push
jp
mov
xor
cmp
rol
mov
nop
mov
sub
stos
loopne
adc
pop
mov
iret
rol
xchg
movb
xchg
jo
add
test
frstor
outsb
ret
push
sbb
dec
xchg
dec
push
mov
out
push
add
ficomps
out
aas
loopne
arpl
in
adc
sbb
push
test
lret
mull
iret
cs
lret
or
xchg
filds
sub
or
jbe
push
inc
aaa
mov
mov
lock
fld
dec
mov
fucomip
or
adc
or
cwtl
add
cld
pop
lahf
mov
mov
mov
sarb
push
or
rcr
imul
xchg
push
stc
mov
cmpsl
lcall
inc
scas
cli
sub
fildl
lret
aam
pop
aam
subl
and
gs
xchg
gs
cmc
scas
mov
fucomip
sbb
xchg
scas
enter
mov
cmpsb
fmull
aaa
pop
addr16
mov
sahf
dec
xor
enter
and
xchg
mov
mov
pop
pop
in
nop
or
lea
cmp
push
sbb
xlat
pop
xor
int
cmp
scas
add
std
movsl
loop
ficomps
fyl2x
lods
leave
outsb
push
inc
cmp
sbb
rorl
and
add
adc
adc
jg
cmp
adc
rcrb
jle
mov
and
jg
mov
jo
jge
loopne
jae
and
ret
cmp
add
mov
mov
cmpsb
push
cltd
inc
imul
mov
jbe
jg
xchg
xchg
lods
cmpsl
xchg
sahf
mov
rcl
in
js
pop
imul
mov
loop
and
rcl
loop
fistl
jae
sti
dec
rcrb
push
cmp
mov
negb
jl
adc
std
mov
dec
cs
xor
ds
pop
imul
or
iret
xchg
hlt
fsts
out
add
nop
loop
adc
sbb
or
data16
pop
dec
push
pop
cmp
fstpl
cs
pop
pop
mov
rolb
loope
cld
dec
push
out
loopne
pop
aaa
insb
mov
or
push
mov
push
ret
cmpsl
add
mov
cmp
mov
pop
xchg
cmp
das
and
mov
mov
add
ret
into
adc
stc
icebp
in
adc
push
add
shlb
mov
add
or
not
ljmp
scas
cmp
rolb
or
mov
loopne
jnp
or
jmp
fisubl
rcrl
or
adc
mov
and
addl
adc
nop
cmp
aad
sbb
repz
pop
stos
sbb
shrl
jae
add
imul
fldcw
jae
ss
cmp
rcr
bound
cmp
cmp
mov
xchg
cli
xlat
jecxz
mov
cld
in
int3
cltd
out
fstpt
pop
push
pop
data16
sbb
mov
sbb
pop
cld
mov
stos
add
push
ret
dec
push
jmp
mov
sub
sub
xor
xor
sbb
mov
rcl
test
pusha
testb
test
mov
movsb
cmp
and
clc
jo
xor
xlat
lahf
xchg
lods
outsl
fdivs
jp
mov
shrl
cmpsb
or
fsts
or
mov
inc
insl
xchg
jg
mov
push
pop
and
sub
ret
sarb
divl
or
mov
jge
mov
fistl
and
mov
repnz
faddl
in
insl
xor
rcll
and
cmc
adc
sub
or
rorb
je
lret
mov
dec
lods
in
mov
fiadds
mov
lods
inc
pop
inc
mov
sarl
daa
shlb
jle
fmuls
push
out
rcl
lret
xchg
inc
fs
or
pop
mov
std
mov
add
inc
inc
pop
insl
es
mov
adc
jae
push
lret
mov
pusha
sbb
and
int
inc
xor
adc
les
xchg
mov
sbb
push
jge
std
std
xor
dec
das
je
push
jo
xchg
push
xchg
mov
arpl
loopne
xchg
lods
xchg
rorl
mov
jae
cmp
into
imul
add
dec
gs
dec
loopne,pn
out
sub
mov
loopne
lods
jbe
and
daa
cmp
xchg
ljmp
loope
add
xor
loop
dec
and
div
xchg
lods
push
jno
or
jns
mov
dec
stos
rcr
inc
gs
xlat
jmp
jle
xor
xorl
shl
shrb
add
sub
idivb
pop
into
ficompl
out
call
rcr
xchg
push
or
test
daa
xchg
call
and
shlb
insl
pop
int3
andl
bound
fistpll
or
xchg
outsl
xchg
sub
mov
add
push
es
pop
out
iret
cmp
mov
dec
jb
cmp
lea
mov
adc
mov
scas
or
mov
sbb
and
adc
rorb
sahf
add
enter
addb
push
mov
adc
mov
ficoms
clc
pop
and
dec
les
cmp
es
scas
pop
add
aas
insb
and
mov
jle
cmp
sub
push
pop
inc
adc
cltd
adc
cmpsl
lods
and
xchg
push
mov
adc
jno
das
jecxz
in
mov
cli
movsl
shll
ja
outsl
decl
scas
cmp
into
fisubrl
lret
cld
lret
scas
cmp
aad
push
sub
mov
mov
jg
mov
cwtl
fs
pop
cmpsl
outsl
aam
andl
mov
cld
mov
divl
leave
es
xlat
add
lods
mov
std
lret
cli
cmp
or
jb
imul
jg
lret
movsb
jge
loop
mov
loop
mov
sbb
das
or
xor
xchg
adc
ja
outsl
in
bound
jge
push
inc
mov
xchg
adc
mov
data16
pushw
mov
ret
xchg
fdivs
and
cmpsl
std
outsb
cmp
incb
adc
push
cmp
jmp
or
xchg
sbb
mov
into
mov
ljmp
dec
add
xchg
call
dec
jge
repnz
xchg
cmp
cltd
xor
in
cwtl
sub
insb
mov
fs
lret
xor
shll
push
jmp
mov
xchg
mov
bnd
loopne
imull
xor
loopne
inc
sbb
rclb
js
adc
std
push
testb
push
test
in
xchg
cvtdq2ps
scas
aam
xchg
add
sbb
jbe
xor
mov
adc
or
arpl
sahf
aam
or
xchg
out
jne
or
jg
sbb
dec
addr16
ret
add
add
cmp
xchg
es
popf
arpl
pop
ret
cmp
pop
push
xorb
xor
cwtl
and
leave
add
out
adc
stc
mov
inc
jne
add
or
xor
cmp
fwait
dec
iret
cmpsl
stos
cmp
push
iret
outsl
cs
add
mov
jne
mov
cmp
dec
test
aaa
jbe
stc
out
lds
out
shll
cmpsb
xlat
pop
into
push
xlat
insb
lds
sbb
mov
push
and
and
mov
xlat
push
sarb
lret
scas
inc
jb
cmp
in
shl
int
fwait
xchg
adc
out
movsb
jle
push
in
sti
jae
pushf
popa
inc
or
insb
lret
push
pop
pop
jbe
fisubs
xor
mov
shll
dec
dec
movsl
xor
aad
inc
ss
dec
push
inc
dec
test
push
dec
pusha
in
jbe
mov
mov
jbe
cltd
mov
sbb
in
adc
pop
mov
js
pop
cmpsb
jnp
insb
cmp
dec
push
inc
add
xor
mov
cmp
push
insb
sub
clc
out
cmp
add
or
jno
jns
jbe
stos
pop
jmp
dec
in
push
and
or
stos
adcb
cmp
inc
jns
and
sbb
jge
repnz
xor
dec
cmp
test
inc
lahf
sub
sbb
ficoms
jmp
test
mov
adc
lahf
add
pop
imul
inc
and
adc
dec
test
imul
lods
rorb
xor
pop
stos
mov
cmp
xor
or
mov
mov
add
cmc
fs
lods
fldt
xor
mov
cli
icebp
repz
sbb
and
and
xchg
into
sub
sub
sahf
dec
test
cmpsl
pusha
scas
cmp
lock
pop
pop
sub
pop
inc
dec
dec
in
mov
fwait
daa
pusha
daa
in
mov
push
idivb
leave
cmp
cltd
and
lahf
sbb
in
lcall
lods
or
daa
lcall
jp
dec
push
xchg
adc
iret
out
cmp
push
out
fcmovb
mov
dec
outsl
hlt
mov
lret
ret
minps
xlat
push
fmull
lods
mov
cwtl
jg
xchg
mov
cmp
iret
sti
cmc
fdivrl
arpl
xorl
push
bound
mov
shll
movsb
les
push
lods
dec
mov
in
sub
and
fs
sbb
ds
adc
inc
test
fcomps
lret
stc
pop
jmp
mov
cmp
push
sbbb
xchg
pop
push
pop
mov
repnz
imul
stc
mov
pop
lret
leave
pop
iret
shr
cmp
jmp
out
cmp
ret
mov
inc
cwtl
jo
dec
mov
ss
xchg
enter
aaa
out
cmp
or
jno
xchg
shll
sbb
inc
jl
jb
shlb
pop
push
adc
jle
mov
sbb
in
clc
or
clc
mov
xchg
pop
cmp
add
lcall
popa
add
mov
repz
or
out
mov
or
orl
lea
xchg
js
cmp
rol
and
or
xchg
xlat
int3
jle
add
movsl
mov
faddl
adc
mov
les
jl
das
adc
das
lcall
xor
mov
pushf
xor
loope
sub
subl
jmp
sbb
jne
das
andl
xor
mov
inc
iret
shll
cmpsl
mov
or
fnstenv
push
lea
roll
and
les
adc
xlat
outsl
sub
subl
rorl
sub
xor
mov
jp
fsubr
fldlg2
xchg
add
int
mov
xor
lea
jl
shll
jle
mov
js
dec
mov
pushf
arpl
inc
clc
inc
ds
icebp
add
shll
jle,pn
add
addr16
aad
and
jnp
outsb
stc
sar
in
mul
jae
arpl
popf
ss
jge
daa
jle
push
cltd
fadd
ljmp
adc
mov
add
lret
push
lds
mov
enter
or
hlt
imul
and
mov
out
jmp
cmp
daa
jp
cmc
mov
push
push
jbe
lds
loopne
enter
cli
push
or
dec
adc
jmp
sbb
sub
lcall
pop
dec
jecxz
add
mov
test
arpl
into
sar
fwait
neg
inc
xchg
jae
xchg
mov
leave
and
sahf
mov
dec
sbb
data16
cs
sar
enter
jb
mov
jle
in
dec
fldl
popf
add
mov
adc
js
out
mov
cs
test
stos
fwait
les
pop
mov
xor
push
push
cmp
cltd
or
int
shlb
lcall
and
xlat
fldpi
and
lods
imul
dec
fcmovnbe
pop
ja
xor
xchg
and
mov
into
sub
and
lea
push
scas
out
xchg
xor
mov
rcll
push
fistpll
aaa
repz
xchg
cmpsb
in
jp
stos
push
sbb
dec
mov
push
iret
cmp
insb
popf
mov
outsb
dec
dec
xchg
movsb
adc
mov
rorb
hlt
mov
stos
std
cmpsl
fucom
lods
loope
sub
into
inc
inc
aad
push
push
out
inc
mov
sub
sarb
inc
sbb
daa
add
cmp
hlt
jne
add
into
sub
call
jae
sbb
xor
mov
mov
fs
push
inc
mov
sub
scas
hlt
sub
dec
cmc
pusha
mov
adc
and
cmp
xchg
cmp
cmpsb
mov
xchg
iret
sbbl
mov
pop
pop
mov
adc
xchg
xchg
and
inc
inc
jmp
xchg
mov
sub
insl
add
add
and
or
mov
cmp
pop
mov
test
push
bound
mov
mov
adc
in
stos
jle
mov
mov
inc
mov
out
fisttpl
xchg
push
and
mov
push
sub
out
and
mov
ftst
fdivrl
pop
mov
mov
push
mov
bound
ret
scas
test
jb
outsl
popf
scas
test
popa
cltd
sti
scas
xorb
pop
add
mov
sbb
jne
dec
cmpsb
push
and
scas
and
dec
inc
sub
mov
hlt
mov
in
dec
sub
ss
push
mov
ficomps
and
lahf
mov
inc
sbb
and
lret
sub
daa
adc
rorb
popf
jnp
test
cwtl
push
aad
cld
cmp
xor
les
mov
xor
xchg
add
test
aam
push
push
mov
and
mov
jno
cltd
xor
fs
mov
data16
xor
repz
push
dec
cmp
inc
dec
cld
das
pop
lock
pop
std
cli
out
and
ljmp
sub
in
ss
fld
jo
shrl
lcall
imul
nop
cld
xchg
fwait
or
or
sbb
movsb
mov
dec
sti
es
fisttps
xchg
or
nop
inc
pop
adc
mov
aam
stos
push
adc
loop
sti
jp
and
cmp
hlt
imul
int
xorb
push
mov
movsb
fdivrs
hlt
inc
test
test
lret
cmpsb
or
sbb
jb
pusha
pop
in
sbb
cmp
xcrypt-ecb
cmpsl
int3
clc
add
repnz
cli
int
jns
push
mov
daa
inc
stos
xchg
dec
imul
push
push
xlat
shl
lret
pop
cmp
mov
loope
cltd
push
movsb
out
push
movsb
in
dec
lret
mov
in
ljmp
in
mov
fst
cmp
movsb
and
nop
fiadds
mov
xchg
cmp
ret
call
xchg
push
xchg
mov
mov
mov
sbbb
mov
icebp
ret
ret
sbb
bound
fsubl
idivb
mov
mov
aam
sbb
pop
fstp
out
push
push
aaa
mov
and
adc
popf
adc
es
xchg
mov
xorb
inc
popa
cmp
aam
imul
lret
inc
test
aaa
aas
and
fcmovb
adc
xlat
add
cmp
sbb
clc
sbb
test
jae
and
mov
icebp
mov
ss
ret
cld
mov
jns
push
mov
pop
adc
inc
xor
cmpsb
sub
xchg
flds
in
frstor
pop
gs
cmp
jmp
in
std
dec
adc
nop
add
cltd
and
xchg
pop
test
ror
sub
xchg
adc
test
xchg
adc
sbb
scas
ss
icebp
loope
add
fs
jp
and
scas
jbe
dec
sub
les
xchg
push
xchg
cld
fadd
in
xadd
pop
or
inc
add
pop
dec
loope
sahf
xor
xor
mov
push
dec
ss
xchg
xchg
mov
test
add
stos
in
repnz
push
push
leave
add
jne
dec
add
inc
pop
xor
in
mov
push
mov
cli
ja
jo
or
jne
xchg
inc
int3
pop
cli
dec
iret
sbb
int
xchg
callw
inc
insl
jnp
adc
pop
xchg
jbe
rclb
add
int
ds
sub
mov
cmpsb
mov
test
jl
mov
add
les
add
fnstenv
pop
sti
aaa
es
fdivl
inc
testb
and
lods
dec
dec
data16
mov
rorb
stos
mov
in
adc
pop
loopne
or
or
jbe
in
aaa
pusha
sub
adc
js
push
or
adc
jae
scas
jp
mov
and
stc
movsl
imul
mov
cmp
push
mov
daa
sub
push
scas
dec
push
aam
dec
ret
scas
insl
aaa
xchg
mov
push
xchg
outsl
mov
xor
outsl
pushf
push
dec
arpl
das
cmpsl
sbb
mov
cmc
mov
jne
fistpll
mov
out
insb
fistps
scas
pop
pop
hlt
aas
imul
std
or
out
lods
movsb
push
xchg
add
out
call
loope
mov
shlb
fcompl
or
sub
adc
jge
xor
pop
mov
int3
cmp
mov
adc
aas
inc
scas
lds
outsb
mov
fstps
mov
dec
cltd
sbb
lods
loope
in
add
mov
stos
addl
insb
jb
imul
sub
mov
notb
in
add
fchs
scas
fsubrs
notl
or
jbe
jnp
lcall
shlb
mov
adc
push
mov
and
and
xor
jae
insb
sub
mov
mov
sub
inc
xor
mov
mov
cmp
lds
loop
icebp
psubsb
loopne
lods
jp
rorl
mov
dec
rol
ljmp
pop
jo
push
mov
fwait
test
iret
mov
bound
clc
ja
les
lods
test
insb
xor
fs
mov
pop
add
stos
xchg
inc
pop
js
pop
sub
xor
clc
test
cmp
in
adc
insb
ja
arpl
rcrb
pop
fstps
inc
stos
rorl
cmp
aad
in
aam
mov
sbb
call
test
daa
rorl
push
fwait
lret
repz
mov
ds
out
mov
pop
jle
pop
out
and
loop
fucom
mov
adc
mov
cmp
pop
dec
ja
sbb
mov
push
sbb
xor
pop
pop
xor
xchg
cmc
jnp
xchg
mov
ja
lret
cmc
inc
cli
into
out
fsqrt
jae
test
test
cmp
gs
ljmp
iret
dec
mov
ss
xchg
sbbb
mov
cli
insb
sub
dec
enter
les
cmp
sbb
pop
arpl
add
stos
fsubs
scas
dec
scas
sub
jl
cmp
inc
push
loop
mov
mov
jno
outsb
xor
xor
ja
cmp
icebp
xlat
dec
xchg
and
sbb
pop
iret
fdivrl
push
sarl
lea
lret
mov
sub
sub
add
push
in
lret
pop
sahf
addb
cmp
xchg
ja
enter
push
shl
data16
xchg
inc
leave
sub
inc
nop
adc
hlt
and
aad
mov
fstl
pushf
aam
lods
inc
jns
icebp
lahf
xchg
aad
inc
xor
test
dec
fcom
hlt
sub
push
sub
lahf
jecxz
popa
cmp
pop
movsl
pop
imull
lds
call
inc
out
je
sbb
jge
sub
jne
push
or
imul
mov
addb
dec
in
push
cmp
out
insl
pop
fcoml
ja
mov
pop
cmp
jno
repnz
or
fstp
mov
mov
sub
and
xchg
jo
cmp
outsb
pop
mov
push
fstl
mov
mov
dec
fcompl
lret
ret
mov
mov
dec
out
mov
or
icebp
mov
sbb
outsb
mov
add
int
push
cmp
andb
shrb
mov
lcall
pop
push
xchg
xchg
jl
xorb
push
rorl
jmp
push
mov
enter
cli
inc
cmp
and
cltd
ror
insb
mov
movsb
jle
out
cmc
pushf
pop
xor
out
mov
cltd
shlb
jecxz
insl
test
mov
add
pop
div
aad
repz
stos
loop
dec
fildl
dec
mov
cmc
fwait
leave
ja
push
push
fistps
rcr
add
inc
imul
add
out
out
dec
push
out
xchg
jnp
sti
imul
mov
icebp
mov
es
ret
shll
push
fnstsw
mov
xlat
and
sbb
dec
dec
mov
addr16
shll
pop
cmp
xchg
dec
mov
repnz
adc
dec
pop
sarb
and
test
ss
or
lahf
sti
push
add
and
xchg
cli
lock
jmp
mov
jbe
sahf
jne
sahf
mov
or
push
and
mov
and
mov
cltd
mov
sub
jl
data16
das
addr16
shl
jg
inc
push
jns
dec
aam
xor
das
fcomps
lcall
call
xchg
pop
xchg
fstp
inc
adc
mull
mov
sub
adcl
cli
insb
sbb
stc
out
adc
xchg
or
dec
dec
imul
lds
lock
cmp
fdivrl
xor
xchg
pop
jbe
push
mov
push
mov
jecxz
test
inc
xchg
stos
push
xchg
inc
dec
pop
xor
mov
xchg
shll
jmp
mov
std
les
dec
or
or
fists
callw
repz
mov
stos
cmp
xchg
sub
adc
fdivs
mov
jmp
andl
mov
ja
hlt
push
and
mov
jmp
cmp
add
rclb
or
and
inc
jns
cmp
addr16
xor
add
xchg
push
jmp
pop
mov
adc
gs
out
fcompl
push
out
mov
and
sub
cmp
push
call
pusha
adc
out
dec
cmp
mov
xchg
xor
jnp
andb
jno
out
js
jbe
inc
movsb
loop
movsb
shrl
jecxz
jo
or
inc
pop
test
xchg
sub
out
arpl
dec
dec
stos
out
aas
pop
insl
incl
jno
ja
add
fimull
enter
cmp
int
out
sub
mov
pushf
jbe
pop
cmp
fidivrl
scas
cmp
push
xor
pop
jecxz
test
outsl
iret
push
and
outsl
rol
mov
das
mov
add
pop
test
mov
jl
jbe
lret
in
jo
rolb
roll
mov
add
pop
imul
sahf
mov
popa
nop
adc
and
push
repnz
loop
rcr
cmp
or
pop
xor
or
gs
cmp
mov
mul
xorb
cmpsl
jns
xchg
pop
shrl
xor
push
push
fsubl
sbb
std
mov
rcl
dec
pop
movsl
gs
mov
pop
add
das
lcall
add
pop
pop
jne
loope
mov
adc
data16
js
xchg
neg
xchg
fwait
dec
movsl
data16
in
xchg
dec
test
sub
add
xor
cwtl
dec
jmp
mov
fldl
jg
std
icebp
aas
jae
jle
fisttpll
into
mov
ja
sub
imull
dec
sub
stos
outsl
cld
in
sbb
or
ffree
and
cmpsb
aam
lcall
stos
icebp
imul
or
add
mov
sub
aaa
ja
std
push
inc
je
mov
pop
jae
xchg
dec
push
xchg
and
cli
inc
mov
and
outsb
add
jb
jp
enter
lds
inc
test
sbb
jg
mov
int
rorb
dec
mov
jae
inc
mov
loope
imul
pusha
icebp
je
mov
rolb
insb
xchg
loopne
or
push
mov
lahf
or
pop
inc
leave
jle
rolb
dec
jge
popa
lcall
sub
std
aas
cltd
xchg
hlt
aas
sbb
pop
or
fs
jle
mov
stc
pop
orb
cmp
push
sub
sbb
stos
mov
mov
add
jecxz
pushf
mov
xchg
sbb
and
loopne
cli
and
rcrb
lea
xchg
jp
jns
inc
aad
hlt
fstl
lods
adc
mov
popa
pop
shrb
cmp
jmp
fsts
jae
out
ss
leave
add
incb
and
inc
mov
sbb
les
ljmp
lds
and
subb
mov
cmpsl
pop
and
enter
pop
cld
xchg
inc
fs
data16
adc
xchg
push
rorb
and
pusha
hlt
inc
cmp
es
xor
adc
lahf
and
fisubl
stc
fsubs
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
idivl
stos
push
cmp
bound
pop
bound
push
mov
lret
or
mov
stos
clc
inc
dec
pushf
xchg
aas
mov
aam
jbe
mov
aad
xchg
lcall
jbe
xchg
cmpsb
call
xchg
lret
mov
fsubrs
popf
push
pop
repnz
addr16
rorl
add
mov
test
imul
movsl
bt
das
mov
faddl
or
cmp
xor
fcmovbe
inc
sahf
shrl
jns
xchg
sbb
rcrb
adc
mov
mov
adc
incl
pop
insb
cmp
mov
mov
cmp
cmp
cmp
iret
and
cmc
test
nop
dec
aaa
aaa
fisttpll
mov
mov
cmpsb
stos
pop
pop
mov
js
mov
sub
or
sbb
xchg
add
jne
insl
mov
mov
subl
xchg
dec
mov
fsubrs
sub
or
lret
mov
mov
mov
in
inc
cmp
jle
cs
rcll
in
addr16
cmp
imul
push
cs
or
mov
data16
xchg
ret
xorb
jp
insb
mov
mov
js
leave
mov
or
mov
cmpb
xor
mov
movsl
push
mov
xchg
cltd
pop
scas
mov
pop
xor
out
subl
xor
movsb
push
in
into
negl
cmp
shll
sahf
adc
ljmp
jns
inc
cmp
fdivl
mov
mov
push
jb
mov
xchg
loop
pop
jge
jle
in
js
xchg
rolb
add
xchg
idiv
push
stos
loope
mov
out
mov
mov
out
gs
add
lock
cmp
int3
mov
mov
dec
and
push
shlb
add
mov
cmp
int3
imul
xchg
das
adcb
or
rcrl
sti
mov
sbb
jb
push
mov
popf
in
pop
hlt
into
ja
jg
jnp
jmp
push
data16
inc
pusha
xor
mov
repz
cwtl
das
xor
cmc
imul
dec
aas
ja
fwait
imul
xchg
sub
cmp
inc
sbb
stos
mov
mov
mov
jg
nop
nop
jmp
adc
and
cmp
daa
lahf
cltd
jle
jno
cmpsl
mov
xchg
inc
push
xchg
scas
jno
pushf
mov
push
xchg
aaa
sub
andb
mov
jmp
or
add
pop
inc
cmp
mov
imul
xor
outsl
std
mov
std
cltd
dec
addl
inc
or
mov
mov
mov
adc
aam
mov
pop
out
pop
pop
dec
ret
inc
cltd
test
mov
sahf
mov
dec
std
in
mov
cmp
mov
ficomps
js
in
in
add
mov
mov
in
push
insb
pushf
pop
pop
imul
push
pop
pop
rorb
sub
popf
mov
pop
dec
and
sbb
add
movsl
adc
mov
cwtl
xlat
data16
and
jmp
mov
test
inc
inc
cmpsb
push
mov
cld
mov
jne
repz
shrb
xchg
outsb
fdivrl
stos
out
cmpsl
mov
pop
pop
mov
cmp
insb
mov
cmp
and
adcb
cltd
cli
xor
xchg
iret
es
cmp
dec
cmpsb
inc
clc
jns
lea
push
int3
pop
aaa
movsb
rol
and
sub
xchg
dec
scas
sbb
cmp
or
insl
jp
fnstenv
sahf
or
addr16
and
fldenv
lcall
fsubs
lods
hlt
stos
pop
pop
xchg
movsb
fcoms
cli
sub
hlt
adc
mov
lea
jmp
loopne
es
cmp
in
test
mov
lock
pop
divl
lock
outsl
pusha
and
mov
jmp
aas
pop
add
mov
mov
jb
nop
push
pop
inc
movsb
adc
xchg
pop
sahf
add
mov
clc
push
adc
lock
add
push
outsb
call
sub
jnp
lret
cld
dec
pop
jl
loopne
sbb
mov
and
das
pop
andl
lret
aaa
imul
inc
jnp
fsubs
push
and
lret
jg
imul
into
xchg
clc
test
cmpsb
nop
lret
enter
inc
mov
xor
pop
mov
add
outsl
dec
fsubrs
faddl
mov
cmp
icebp
push
or
dec
sbb
cmpsl
xor
push
xchg
and
dec
and
bound
popf
mov
mov
mov
jg
scas
lods
es
loope
loope
repz
or
test
xchg
sbb
subb
js
lahf
sub
js
push
imul
cmpsb
jo
dec
mov
and
pop
repnz
addr16
sbb
and
lret
ds
sbb
fsubs
arpl
and
pop
sbb
or
scas
sub
pop
in
ficomps
pop
push
and
loop
lret
cmp
dec
jbe
mov
sub
divb
xor
rcll
dec
sbb
fdivrs
adc
inc
les
es
dec
and
mov
push
xchg
cmp
and
pop
das
mov
sbb
xor
inc
jp
jns
jl
int3
sub
in
sub
ljmp
out
push
inc
pusha
sbb
mov
ss
cli
add
addb
dec
inc
lock
call
rorb
cmp
in
pop
fadds
lret
repz
loope
leave
stos
addb
enter
adc
mov
mov
mov
push
push
iret
xchg
sti
inc
mov
mov
xlat
mov
pop
push
and
mov
push
mov
cmpsb
test
sub
cld
mov
add
mov
mov
fadds
aam
js
ficompl
push
rorl
adc
mov
inc
mov
aam
dec
lock
callw
sub
jge
adc
into
sub
sub
enter
inc
fdivrl
or
inc
cli
lods
sti
push
mov
imul
xchg
test
adc
mov
fcomps
pop
or
push
xchg
stos
xchg
lea
add
pop
mov
mov
push
movsb
xchg
ss
movsl
push
push
or
add
and
adc
ds
jecxz
xchg
rcrb
frstor
jle
scas
inc
shrb
and
cmp
dec
sbb
and
dec
add
sub
push
jl
cmp
dec
loopne
jge
movl
int
xchg
ja
or
mov
mov
bound
std
andl
xor
jo
rorb
and
inc
cmp
sbb
mov
pmaxsw
adc
std
xor
clc
push
push
push
inc
mov
xor
out
adc
cmp
dec
ja
pop
mov
cmp
out
jno
xchg
in
cmp
jne,pn
add
sbb
mov
xor
pop
dec
cmp
loop
cld
fwait
sahf
xchg
insb
and
fsub
jecxz
xlat
lret
and
out
cmp
lock
inc
in
push
inc
in
clc
out
mov
or
lods
dec
xchg
push
into
fsubs
pop
push
adc
aam
enter
mov
scas
loop
insl
jle
cli
fwait
mov
out
mov
ficoms
cmp
aas
pop
sub
push
xor
push
in
and
adc
push
push
push
fcomp
add
ja
scas
mov
jg
adc
inc
cmp
iret
cmp
clc
ret
gs
mov
sbb
mov
mov
sbb
mov
imul
sti
aad
add
mov
std
push
aaa
sbb
hlt
or
mov
mov
pop
push
daa
fnclex
push
test
or
sub
insl
jp
fimull
adc
ret
lods
test
sub
dec
inc
cltd
cli
repnz
fs
jecxz
lahf
aas
adc
jno
xor
sbb
sbb
pop
push
pop
mov
inc
adc
inc
or
push
cmp
adc
xchg
bound
or
cmpsl
inc
adc
rcl
scas
fdivrs
pop
jge
test
les
fcoms
sub
or
jno
repz
inc
aaa
fnstsw
das
dec
xor
lods
push
mov
jno
sub
inc
repz
fisubrs
jmp
add
popl
add
les
arpl
add
inc
add
jne
push
cmp
nop
inc
fcoml
data16
dec
pop
xor
jmp
jo
cmc
movsb
enter
out
or
lods
testl
clc
shl
repz
fstpl
mov
mov
stos
and
cmpsb
ficoms
jbe
aam
fstpl
cld
in
out
dec
inc
es
mov
cs
lret
gs
dec
inc
pop
fcmovnbe
lret
push
jmp
nop
aad
ret
xor
cld
faddl
inc
xacquire
sub
or
sti
cmp
loope
push
not
popf
mov
pop
xor
cmp
dec
inc
jmp
fisubrl
xchg
jae,pn
xor
mov
add
cmpsb
mov
aaa
jnp
jmp
mov
test
jne
adc
jl
mov
data16
and
jp
nop
mov
ret
popf
loop
push
imul
push
add
pop
push
es
pop
loopne
imul
push
push
je
cmc
pop
add
mov
sbb
sbb
push
in
push
jp
fisubs
das
in
cld
popa
add
jmp
pop
aam
out
loop
fcompl
decl
je
addb
pop
popf
pop
and
mov
jmp
ss
and
std
xor
sti
sub
sbb
cmp
in
jl
adc
xor
and
shll
mov
sub
and
xchg
mov
aad
xlat
sbb
mov
leave
sbb
xor
cmp
mov
sub
dec
test
xlat
xor
xor
push
jne
call
sbb
pushf
mov
and
pop
lea
sub
jl
mov
scas
ljmp
gs
stos
mov
shll
mov
jle
xchg
cmp
pop
push
fildl
add
pop
mov
gs
bt
push
repnz
mov
mov
repnz
adc
das
mov
in
sub
add
adcl
sti
push
lret
adc
testb
adcb
fcmovnu
mov
mov
arpl
push
int3
or
or
jecxz
adc
popf
mov
loop
adc
or
in
aaa
push
pop
sbb
int3
sub
test
movsb
int
gs
xchg
mov
and
fisubrs
pop
mov
and
stc
imul
cmp
leave
enter
adc
mov
js
dec
sub
lock
add
popa
testl
pushf
adc
ja
cmp
cwtl
mov
das
jl
adc
in
fmul
add
fildl
sub
outsl
fs
pop
movsb
mov
cmp
ss
ficoml
dec
sub
push
pop
push
push
out
add
jo
push
fs
ds
mov
mov
push
cmp
js
aas
repz
push
shlb
push
push
hlt
sub
or
push
mov
mov
mov
outsb
xor
test
dec
out
stos
test
popf
inc
add
sti
pop
aad
pop
mov
leave
mov
lahf
inc
divl
popf
loopne
xchg
repnz
cmp
mov
adc
jg
fidivl
push
sub
leave
mov
mov
or
xchg
sbb
sahf
cmp
dec
or
or
xchg
mov
pop
lcall
pop
lds
push
add
pop
addr16
or
pop
roll
push
outsb
xchg
sub
mov
test
js
xor
cmp
dec
fidivl
adc
loope
cmpsl
mov
scas
and
cmpsl
lods
cmp
mov
decl
and
push
fmull
jmp
test
mov
lahf
in
stos
pusha
cmpsl
sbb
and
inc
mov
xchg
call
or
insl
cmp
inc
dec
mov
in
mov
sub
mov
xchg
imul
add
sub
push
jmp
jne
adc
push
lahf
data16
into
xchg
or
rorb
push
subl
pop
orl
jmp
mov
popa
dec
hlt
repnz
aas
cmp
xchg
popf
sahf
or
mov
push
test
cmp
loop
inc
fmul
push
dec
inc
jbe
fisubs
cmp
je
fmulp
sahf
mov
xchg
xchg
xchg
aad
rclb
fwait
std
shrb
adc
outsl
cmp
out
out
or
dec
dec
pop
cli
dec
cwtl
pop
pop
data16
mov
mov
imull
cmp
test
push
data16
les
jns
xlat
jne
or
inc
adc
int
loopne
loop
mov
cmp
shll
cmp
cmpsb
push
imul
lcall
repnz
pusha
fs
mov
push
incb
out
repz
add
pop
lret
dec
outsl
loop
sub
iret
or
ret
and
push
sbb
sbb
cli
and
cwtl
jge
das
mov
test
ret
jge
cmp
or
dec
stc
xor
testl
push
clc
jle
jge
pop
mov
push
push
out
mov
clc
jecxz
add
cli
jge
mov
fidivrl
in
ret
fisttps
leave
mov
int
xchg
adc
js
divl
pop
bound
icebp
mov
mov
adc
out
push
inc
mov
jbe
lcall
or
icebp
mov
loop
mov
loopne
cli
inc
jle
in
insl
inc
adc
or
out
enter
xor
jp
scas
push
pop
shll
mov
sbb
lcall
aas
jne
repz
insl
dec
push
neg
stos
dec
sbb
fcoml
fcompl
ret
test
ret
mov
sahf
push
xchg
aaa
lods
aaa
jno
sbbb
cs
ret
pop
inc
sbb
and
mov
cmc
movsb
fnstenv
mov
add
out
rcl
mov
mov
jp
pop
icebp
cld
fisubrs
lcall
sub
cmp
cmp
pop
enter
dec
cld
rolb
mov
inc
lods
lret
stos
sbb
xor
jl
out
sbb
repz
cmp
loop
or
mov
cmpsb
js
sub
adc
or
fistpl
flds
es
inc
jecxz
stc
sbb
fcoms
pop
mov
jge
out
pop
pop
and
add
popl
negl
and
fstpl
cmp
fwait
mov
adc
lahf
push
lds
mov
insb
test
nop
or
xlat
pop
add
sti
ds
imul
outsl
jo
cmc
pop
gs
rcll
cltd
push
mov
das
cld
jbe
sbb
nop
and
stc
mov
jbe
adc
and
les
xor
das
adc
ret
mov
push
inc
gs
adc
and
xor
lahf
stos
insl
mov
jae
fsubs
push
push
ja
std
mov
popf
js
xor
pusha
xor
xor
enter
mov
dec
xor
stos
add
xchg
ss
cmp
cmp
stos
add
aaa
mov
in
push
aas
daa
or
test
pop
mov
adc
adc
nop
inc
mov
xor
inc
inc
pop
idiv
push
or
ss
fists
lods
fistl
jle
aaa
out
outsl
sub
sbb
or
mov
stc
addl
mov
jns
or
xchg
inc
mov
outsb
cltd
xor
testb
rcll
push
es
rorl
sahf
add
jo
jg
inc
out
cltd
ret
lret
lods
pop
ds
in
lock
mov
sbb
fstl
lock
iret
pusha
imulb
std
sub
mov
pop
lret
in
lret
mov
add
xchg
pop
das
lahf
nop
mov
leave
stc
push
pop
dec
in
in
lcall
les
test
fiadds
pop
out
or
insb
fdiv
jg
xlat
scas
imul
cltd
sub
jmp
test
dec
xchg
adc
daa
pop
cld
in
cmp
mov
andl
cmpsl
cmp
cwtl
or
or
xor
outsb
or
xor
xchg
mov
stc
lahf
mov
jp
les
mov
mov
mov
xchg
call
inc
jae
mov
movsl
adc
pop
dec
mov
test
inc
and
jno
test
adc
jae
mov
fstpl
fs
mov
add
sub
leave
into
jns
mov
cmp
fwait
sti
js
and
in
lods
aas
hlt
gs
sbb
mov
sbb
xchg
lock
or
out
repz
out
push
pop
inc
cli
jecxz
ss
stos
dec
mov
cmp
gs
pop
pusha
nop
and
ss
into
hlt
mov
rorl
mov
lcall
lcall
sti
ret
leavew
test
fnstsw
jae
les
push
xlat
in
cli
jbe
aad
inc
mov
mov
jnp
sbb
fwait
xor
fs
inc
int3
pop
out
sub
data16
negb
fsub
aas
fldcw
dec
dec
fidivrl
and
outsb
fcmovne
lahf
loopne
sarb
lret
std
mov
jbe
call
int3
sub
sub
adc
push
jge
dec
repnz
int3
pop
inc
pop
pop
mov
jge
cmp
pop
in
loop
popa
mov
inc
cmp
out
lods
imul
daa
sbb
nop
repnz
ds
mov
sbb
fistpl
sub
lahf
cmp
sub
pop
mov
mov
hlt
in
pop
xor
adc
sbb
add
shll
rcr
ror
aad
pusha
jmp
xor
sub
leave
sahf
cmp
test
mov
cmp
lods
ss
in
sbb
and
xchg
jecxz
adc
stc
sahf
and
sbbl
xor
xchg
mov
cmp
dec
adc
xchg
mov
inc
jo
das
pop
mov
and
dec
in
insb
pop
ret
nop
sbb
or
cmp
ret
mov
scas
adc
cmpsl
test
js
lock
mov
das
pop
add
aas
xchg
sbb
add
fisttpll
cmp
xor
or
jg
adc
lret
popf
daa
xor
or
fildll
mov
mov
lock
hlt
frstor
mov
inc
add
ss
fistpl
mov
xchg
scas
inc
fidivs
lret
jg
aas
mov
mov
sub
cmp
mov
sbb
das
divl
mov
inc
xor
sbb
or
sbb
ja
repz
and
mov
in
push
fwait
cmp
sbb
jo
popa
lods
add
cmp
pop
fists
mov
jne
pmullw
jge
jae
jle
jne
xchg
pop
mov
mov
cmp
push
mov
or
mov
nop
orb
imul
push
adc
call
adc
sub
dec
adc
cmp
aad
push
js
jp
inc
jp
xchg
imul
cmp
aaa
mov
adc
dec
fildl
out
sahf
imul
cmp
sub
jns
into
cmp
cli
bound
addb
pop
int
mov
insb
sub
push
jo
pop
sbb
mov
xlat
shlb
nop
ja
ds
sbbb
sbb
mov
jmp
mov
ret
push
lea
lahf
jmp
aam
out
aam
fisttps
push
pop
xor
jp
lea
push
repnz
imul
cltd
dec
mov
insl
sahf
test
shll
dec
add
pop
mov
push
popa
or
adc
aaa
ret
clc
shrl
mov
xchg
popa
test
out
jge
outsl
rcrl
lahf
adc
insb
stos
or
pop
jne
aas
mov
mov
sub
mov
outsl
adc
cmc
ds
int3
sbb
adc
sub
jb
fisubrl
notl
mov
push
mov
dec
sub
sbb
xchg
jb
test
cli
push
dec
sub
fs
repnz
jae
in
adc
adc
rorb
jno
inc
ret
xchg
les
lret
fnstenv
dec
aad
xchg
inc
pop
or
mov
dec
xor
adc
cs
testb
lods
lock
dec
lods
xchg
push
insl
jae
movsb
repz
mov
bnd
repz
es
movsb
lea
mov
xchg
inc
shll
test
push
pop
push
jg
dec
leave
in
dec
in
idivb
mov
les
mov
mov
int
xlat
jbe
mov
xor
shrl
push
out
xor
sbb
aas
adc
rorb
mov
das
cmc
mov
push
int3
dec
gs
mov
clc
xlat
dec
jmp
add
mov
jecxz
push
es
fsin
into
lea
jne
das
push
push
lcall
push
dec
cwtl
stos
bound
lret
pop
ret
imul
jno
icebp
and
repz
mov
bound
xchg
sub
cli
ds
push
dec
je
je
pop
push
shlb
add
mov
sarb
cmpsl
test
add
and
stos
xor
cmp
arpl
popf
shlb
mov
fistpll
sbb
and
shrb
negl
sub
stos
lods
sbb
fisttpll
repz
in
or
xor
dec
xor
and
bound
xchg
add
inc
mov
into
push
jo
mov
and
cmpsb
mov
loop
es
popa
cs
mov
add
scas
out
push
xor
enter
movsl
das
mov
jno
pop
add
test
imul
add
lahf
ja
addr16
push
cmpsb
lock
xchg
cwtl
pop
jae
xlat
add
dec
or
jae
pop
xchg
mov
rcrl
xchg
and
push
leave
sbb
sub
cmpsl
mov
mov
mov
adc
icebp
push
sbb
popf
insl
lods
jb
dec
push
loope
outsb
jge
cmpsb
sub
xchg
xlat
adc
push
push
mov
or
outsl
ret
aad
jmp
inc
gs
fsubrl
sarl
outsl
fsts
ret
repz
xchg
xchg
es
scas
sbb
push
jae
add
adc
mov
xchg
pop
dec
js
daa
or
jb
push
loope
sub
jmp
jge
loop
mov
in
dec
lds
mov
sub
mov
pushf
cs
xor
sahf
lret
sbb
lods
leave
ret
scas
xchg
rcll
add
push
xor
or
pop
pop
sub
inc
cmp
mov
popf
lock
mov
ds
shlb
aad
lret
push
jae
cmpsb
call
adc
nop
mov
or
pop
push
mov
ret
ja
adcl
arpl
ss
jnp
mov
insl
int3
mov
xchg
inc
inc
arpl
xlat
adc
shl
xchg
jns
inc
pop
flds
mov
adc
cs
adc
dec
or
ret
rol
sar
mov
dec
mov
push
push
shrl
mov
jg
cwtl
fcmovnb
das
cmp
stos
mov
adc
das
pop
notb
jp
inc
in
mov
xor
mov
and
adc
jl
lods
xor
stos
add
jb
popf
sub
xlat
mov
jmp
jecxz
mov
mov
xor
sub
sub
mov
and
sub
lahf
jle
fldl
inc
jmp
xlat
imul
call
lock
push
test
ljmp
in
or
sbb
setns
scas
cltd
movd
fmuls
fcomps
sbb
pop
push
add
sub
jl
dec
test
cmc
or
xor
clc
lret
inc
or
das
fs
mov
inc
push
and
mov
jne
and
sbb
jl
out
ds
add
xorl
mov
dec
idivb
mov
xor
ret
or
push
mov
add
add
mov
fsubs
or
iret
out
lcall
outsb
push
and
repz
sbb
jns
sub
jmp
mov
sbb
imul
and
fsts
std
out
mov
aas
xlat
sbb
cmp
pop
es
arpl
and
sti
dec
cmpb
mov
imul
lret
fadds
cmp
fdivr
cmp
out
mov
cmpl
sub
nop
xchg
popa
mov
and
dec
mov
dec
stos
xor
dec
dec
push
stos
dec
pop
fstl
out
into
inc
lock
leave
gs
gs
test
xchg
mov
jnp
lahf
inc
call
ds
sbb
push
repnz
jbe
add
cmp
lahf
mov
inc
mov
lret
notl
xchg
ds
popa
and
add
jl
xor
sbb
mov
xlat
imul
gs
and
push
hlt
xchg
loopne
ret
pop
push
aam
push
mov
movsb
jecxz
cli
adc
fadd
cmp
rclb
pop
sub
lods
rorb
int3
mov
insb
sub
cwtl
testl
push
jle
pop
push
pop
and
test
js
lahf
scas
push
adc
pushf
mov
sbb
jns
xchg
outsb
fnsave
xchg
addr16
jl
inc
loope
sahf
repnz
and
adc
mov
sub
lcall
adcb
sbb
sub
imul
jbe
shrb
js
jp
sbb
add
bnd
jl
add
add
ljmp
fwait
inc
fucomi
xor
dec
or
ret
xor
loope
mov
sub
enter
jg
sub
out
ljmp
cwtl
lds
jle
shl
wrmsr
pop
inc
jl
mov
and
adc
adc
outsl
incb
shrl
jmp
das
pop
or
in
inc
into
inc
xor
frstor
cmp
or
icebp
jbe
or
repz
lea
lods
inc
push
sub
fdivl
adc
and
mov
mov
jecxz
jno
call
pop
repnz
adc
cs
movsb
add
cltd
xor
lods
std
push
xchg
es
jne
into
ja
pop
fistps
and
ds
hlt
in
test
sub
iret
mov
leave
fmulp
in
aad
inc
cmp
lret
add
ja
sub
sub
and
jns
push
rorb
loop
xchg
jmp
adc
sub
gs
xor
mov
push
in
add
sub
inc
mov
mov
add
or
xchg
in
cmp
jecxz
les
inc
dec
pop
or
cmp
call
lds
ret
mov
pushf
jmp
push
cwtl
faddl
cmc
mov
mov
add
cmpsb
dec
sub
mov
mov
hlt
mov
in
inc
sub
jmp
ss
pop
cmp
jbe
clc
pop
mov
jge
outsb
mov
das
int3
push
inc
leave
dec
jns
in
mov
or
push
out
jne
mov
pop
xor
pop
sbb
popf
mov
icebp
cmpsb
xchg
push
cmp
add
jecxz
ficoms
dec
out
es
das
repz
sahf
repz
scas
dec
pop
repz
push
mov
and
cmp
out
sub
adc
mov
das
sbb
push
jo
inc
mov
cmp
repz
push
dec
add
div
dec
push
jp
ret
inc
jo
js
inc
cwtl
popa
std
cmp
mov
add
pop
in
and
mov
les
lods
cmpb
sub
cltd
lret
out
jg
mov
pop
popf
pusha
and
test
jge
xchg
test
jno
or
or
aas
push
mov
jmp
outsb
outsl
add
jne
mov
add
xchg
fcomp
cld
scas
pop
lret
call
jbe
pop
push
mov
loopne
fidivrs
icebp
lcall
pop
outsb
test
loop
shlb
fwait
xchg
je
mov
cli
push
push
outsl
int3
into
xorl
arpl
ljmp
push
inc
inc
in
xchg
int
rcr
mov
inc
fs
ja
notb
dec
push
dec
ds
sti
loop
mov
cmpsl
inc
ljmp
jnp
arpl
out
addr16
dec
jecxz
insb
imul
adc
xchg
xor
test
push
je
mov
xchg
loopne
das
xchg
dec
jle
dec
xchg
loop
daa
inc
clc
int
sbb
cmp
stos
push
mov
fs
dec
push
xor
pop
mov
lods
out
pop
std
cmpsl
mov
scas
or
dec
cmp
or
xchg
xchg
sbb
sahf
dec
sbb
xlat
jo
rol
pop
out
cwtl
push
add
sub
jae
mov
or
lahf
jmp
or
mov
and
inc
sbb
int3
lods
nop
iret
mov
push
inc
jecxz
pop
and
mov
dec
clc
push
test
movups
aad
lock
loope
aam
pop
shlb
lret
aad
mov
and
or
jo
cwtl
mov
std
das
dec
add
mov
mov
or
sub
pop
out
fwait
cltd
pop
rorl
testb
in
cli
es
iret
jg
outsb
test
xchg
jl
adc
jge
sbb
and
mov
iret
cmp
sub
ja
mov
adc
mov
sub
and
pop
cmpb
mov
rcl
xchg
push
std
ds
mov
mov
out
adc
bound
jp
in
mov
ret
xchg
in
mov
sarb
rcrl
dec
arpl
xchg
fwait
dec
pop
mov
lret
add
stos
cmp
mov
cmp
shll
jp
add
cmp
xor
shlb
pop
push
insl
ficoml
movsb
scas
mov
jl
imul
xor
add
es
imul
mov
add
jbe
jmp
or
mov
rorl
xchg
dec
jecxz
das
adc
and
adc
sub
pop
jns
jns
rol
or
add
mov
xchg
pop
or
xchg
mov
leave
je
insl
jb
xor
mov
push
mov
test
add
inc
dec
ret
adc
ret
inc
or
push
in
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
call
mov
xor
xorb
and
xor
and
xlat
dec
ret
insl
or
ret
mov
xor
adc
shl
cmp
pop
shl
fld
mov
rorl
outsb
cld
xlat
test
or
in
aam
pop
pushf
nop
jnp
xchg
jmp
or
dec
xor
jne
pop
lods
pop
in
lods
pop
inc
insb
xchg
or
cmp
fistpll
pop
cmpsb
hlt
out
add
fidivs
movsb
mov
scas
scas
test
adcl
pop
mov
imul
mov
shlb
outsl
adc
add
or
xchg
sub
movsl
loope
in
sub
xorl
push
js
or
sbb
lods
cli
fs
inc
cmp
or
dec
lret
sahf
mov
push
mov
imul
pop
xor
mov
ret
fs
js
pop
aam
cli
popa
and
scas
sti
cmp
mov
aam
fadds
adc
push
xor
jbe
popf
rolb
jnp
sub
pop
jns
fucom
aam
mov
or
and
jb
pop
negw
rcr
xor
shlb
lods
lods
negl
imul
daa
or
ficomps
shlb
mov
push
stos
add
rcll
ss
push
fldcw
mov
mov
jb
and
push
xchg
sbb
repz
sbb
leave
das
add
add
cmp
mov
loop
sbb
jl
xchg
inc
bound
add
push
pop
cmpsb
movsb
ficoml
decb
jl,pt
pop
lods
pop
adc
push
sbb
mov
xchg
xchg
xor
and
loop
push
push
dec
es
sub
jp
sti
inc
mov
adc
mov
or
popf
pop
cmp
mov
dec
sbb
lret
mov
out
sub
pusha
mov
rorb
popf
and
mov
push
imul
or
jl
andl
pop
jle
mov
jns
pop
and
repnz
xlat
push
push
sahf
leave
xchg
adc
mov
dec
pop
bound
inc
clc
mov
inc
dec
out
push
stc
insb
sub
push
sbb
das
imul
das
xchg
add
shrb
jo
lahf
or
push
je
lods
add
xchg
sub
xchg
push
mov
in
sbb
gs
insl
mov
js
inc
ret
or
outsb
nop
cmp
aaa
pop
lods
cli
mov
jb
or
cmp
fwait
aaa
movsb
bound
mov
or
or
xchg
add
mov
cmp
test
std
jg
lahf
fwait
out
lods
in
adc
or
pop
xlat
pusha
outsl
and
jmp
push
roll
cmpsl
jmp
add
pop
dec
adc
mov
insb
or
fs
or
arpl
aas
pop
cltd
mov
loope
sub
or
xor
pop
inc
sub
cmp
hlt
dec
and
fcmove
ret
and
test
push
inc
dec
and
lock
cwtl
mull
add
loopne
cld
push
movzbl
lret
push
xor
shl
xor
xchg
lret
js
pop
xor
mov
jp
pop
pop
aad
cli
sub
rcrb
in
or
mov
push
lahf
call
imul
dec
lret
or
add
lock
jnp
int
xor
mov
xchg
dec
ret
outsb
fcomps
es
jno
outsl
popl
push
popf
cld
sbb
push
cmpsl
fwait
addr16
pop
or
data16
xor
idivb
dec
mov
dec
mov
and
daa
imul
mov
xchg
sub
lahf
ret
xchg
jno
pop
mov
lahf
ds
pop
dec
mov
sti
dec
xchg
lret
aad
push
sub
sbb
pop
xchg
mov
mov
arpl
ret
inc
xlat
xchg
call
mov
lret
clc
movsb
iret
imul
js
dec
jmp
mov
pop
loope
insb
pop
clc
sahf
idivb
aaa
test
in
sbb
add
clc
std
and
popf
lock
sbbb
fdivrs
ja
xor
in
loope
dec
dec
fwait
insl
pop
push
les
stos
movsl
fimuls
jmp
or
dec
or
push
stos
inc
cmc
shl
loope
outsl
xchg
mulps
xchg
mov
cmp
and
and
fwait
popf
clc
in
and
xor
insl
or
jle
and
dec
mov
push
test
dec
test
inc
xchg
out
jo
inc
cld
fisubrs
jno
xor
mov
cmpsl
or
cmpsb
cmc
mov
xor
fsubrl
xorb
fwait
repz
mov
mov
hlt
push
cmp
sarb
test
cmp
jbe
in
imul
xor
mov
je
out
insb
imul
mov
lret
inc
and
cs
inc
rolb
fldl
mov
jg
or
cs
mov
ss
jb
mov
adc
nop
sub
dec
test
xor
push
xchg
push
dec
cli
mov
fsubrs
and
test
pop
inc
pusha
and
movsl
aas
jecxz
dec
and
jno
rclb
add
dec
aas
stos
push
dec
inc
or
std
testb
sub
jmp
fimull
fld
jge
adc
lret
cli
rol
out
out
jno
xchg
ljmp
fcomip
jo
fildll
leave
test
repnz
rorb
clc
sbb
pushl
jmp
or
int
ja
push
pop
inc
xor
pop
adc
lds
push
in
cmp
pop
mov
adc
mov
jae
mull
sub
inc
in
movsl
ficoml
adc
cltd
movsl
xchg
push
cld
enter
insl
lds
and
adc
movsl
push
ffreep
add
data16
aad
out
inc
xlat
or
loopne
dec
xchg
out
sub
xchg
cmp
arpl
mov
mov
repz
sub
shll
pushf
cld
sbb
loopne
fcomps
nop
jne
push
stos
inc
mov
cmpsl
adc
mov
in
imul
sub
aam
fstps
xchg
lret
mov
cltd
in
rcll
mov
xchg
mov
iret
cmpl
ret
rorb
outsb
lock
dec
ss
xor
and
mov
insb
test
shrl
es
sub
test
and
add
xorb
xchg
xor
je
add
jp
cmp
and
sbb
xchg
ficoms
in
jnp
cmp
mov
mov
es
in
dec
sub
dec
pop
xor
call
inc
sub
mov
or
or
adc
and
fisttps
or
dec
or
cmpsl
sbb
stos
insb
clc
test
pop
clc
xchg
push
test
int3
cmp
or
int
inc
loopne
popf
out
xor
je
fwait
or
inc
jae
rorb
jmp
fwait
loope
jne
adc
push
dec
inc
jecxz
mov
scas
fadd
sti
sbb
rclb
sarb
pop
mov
cmp
and
into
je
jg
pop
push
shrl
push
push
loope
adc
adc
sub
inc
jb
mov
push
cmp
pusha
adc
push
lahf
lcall
fs
in
push
or
sub
sbb
cmpsl
xchg
cmpsb
in
cs
ficoml
fwait
test
je
icebp
add
xchg
int3
dec
xorps
push
cmp
cli
repz
xor
xchg
lret
cmp
mov
xor
xor
lret
sub
out
int3
jb
aaa
sbb
nop
mov
mov
xchg
cmp
lcall
ds
clc
sarb
addl
pop
aaa
shll
and
lea
sub
into
in
xor
js
in
cs
jo
sub
push
mov
pop
scas
sbb
leave
loop
and
jg
jb
mov
jg
mov
enter
int
lret
cmpb
movsb
sbb
ficoms
inc
pop
in
pop
call
mov
enter
sbbl
mov
sbb
test
mov
stos
ret
inc
xor
xor
rol
cs
lar
or
adc
pop
add
mov
ret
mov
insl
xchg
cmp
cmp
add
or
test
inc
test
in
sbb
imul
cmp
and
sarb
push
jecxz
push
hlt
divl
popf
dec
mov
insb
fsubr
shr
cmpsb
or
cmp
mov
insb
out
xchg
jbe
or
testl
or
loopne
and
movsl
pop
ret
xchg
mov
push
insl
sub
push
cld
mov
stc
ja
cld
bound
ret
mov
repnz
pop
rclb
outsl
pop
les
divb
mov
cwtl
sets
xchg
sub
lahf
repnz
lahf
std
pop
jl
mov
cmp
cmp
scas
or
aaa
cwtl
push
stos
mov
inc
xchg
jno
cmp
jl
pop
rorb
pop
call
inc
iret
mov
arpl
enter
adc
shll
movsl
push
sahf
cltd
lea
imul
pop
inc
and
mov
gs
mov
ds
add
lods
jp
cmp
jae
jae
and
lcall
scas
lcall
mov
push
xchg
std
movsl
mov
in
rclb
out
jp
out
add
sbb
add
jne
pushf
stos
sbb
or
inc
loop
xchg
jecxz
movsb
jl
or
or
mov
cmp
outsb
not
pop
or
adc
adc
inc
fs
hlt
inc
or
outsl
pop
jno
imul
xor
imul
mov
das
inc
in
inc
int
ror
addr16
jl
icebp
data16
push
bts
cmp
jo
mov
xchg
aaa
movsl
out
xor
push
xor
sbb
pop
xor
mov
mov
scas
movsb
push
sarb
adc
lea
add
mov
pop
push
lahf
or
adc
add
daa
shrb
mov
iret
mov
out
in
mov
cmc
jns
add
pop
xchg
fsubs
mov
dec
push
cmp
push
pop
fiadds
in
jae
cmp
roll
pop
fnstenv
dec
adc
ss
add
mov
push
cmp
cltd
inc
sub
fnstsw
cmpsl
sub
or
fucomi
sub
pushf
gs
xchg
mov
int
xor
and
out
sbb
cmp
pop
sti
iret
aam
popf
cmp
les
data16
mov
pop
clc
pusha
adc
and
les
out
push
push
jno
push
or
ljmp
jecxz
lahf
mov
pop
fprem
pushf
mov
or
mov
imul
test
xchg
mov
xchg
pop
daa
sbb
test
cmp
subb
sbb
nop
rclb
jecxz
push
sbb
or
ret
lea
add
push
cmc
aad
sub
stos
mov
sbb
jb
and
aad
mov
rorb
hlt
sub
xchg
mov
sbb
xor
daa
xchg
ds
fimuls
dec
in
fwait
adc
mov
mov
pop
scas
jl
dec
sbb
mov
xlat
mov
sub
mov
std
xchg
stos
enter
cmp
mov
mov
cwtl
push
push
xchg
imul
stos
lods
inc
xchg
fstps
js
mov
mov
fistl
push
adc
jo
dec
hlt
shl
orb
or
jb
jno
add
or
sub
aad
leave
bound
cmp
into
inc
sbb
insl
inc
pop
outsb
into
lahf
cmp
das
rcll
aaa
ljmp
jae
rclb
aas
lods
scas
sub
adc
jnp
in
clc
add
add
rol
inc
pop
sarl
test
jnp
je
cld
pop
cmpsl
sub
out
test
sub
scas
pop
in
xchg
sti
lret
mov
add
mov
fsub
data16
sub
fs
cmp
ja
pop
pop
das
mov
sub
iret
pop
mov
je
stos
pop
loope
adc
mov
or
sub
xchg
lret
pcmpgtw
sbbl
and
leave
scas
xchg
push
int3
and
or
push
sti
ljmp
ret
lock
cmp
jb
pop
sub
ss
incw
xor
mov
popf
and
fldt
mov
inc
ljmp
inc
sub
or
pop
xchg
and
ret
imul
in
in
cmp
ss
shll
inc
adc
cmp
mov
mov
add
data16
ljmp
lea
data16
add
pop
sbb
adc
in
lret
out
dec
and
insl
jo
pop
fnstcw
or
lahf
and
subl
mov
popf
dec
lahf
or
ljmp
sbb
mov
cmp
mov
popf
pop
insb
mov
pushf
mov
mov
push
pushf
xchg
test
mov
adc
ss
sqrtps
mov
mov
mov
mov
push
icebp
add
push
ficomps
and
loope
mov
mov
test
scas
push
gs
inc
cli
cmpsb
xchg
aad
or
jno
les
pop
cmp
ss
mov
or
jb
cmpsb
sbb
repnz
push
popf
lahf
xor
jmp
or
cmpsl
daa
mov
push
adc
adc
jl
and
fstpl
and
push
fbstp
popf
add
adc
shrb
into
frstor
jmp
ficompl
jmp
pop
imul
in
mov
sbb
mul
ret
mov
and
dec
lods
insl
pop
mov
mov
rorb
sahf
hlt
push
ds
push
ret
stos
lock
scas
das
cmp
sub
jge
mov
sub
aaa
dec
jbe
dec
arpl
inc
or
out
in
bnd
or
xor
mov
adc
inc
enter
mov
cld
arpl
sub
sub
les
imul
in
in
xchg
les
pushf
rcl
xchg
cmp
stos
sbb
jp
std
fsubrs
sub
ss
daa
inc
or
jne
call
push
test
xor
sbb
divl
mov
imul
or
pop
mov
push
popf
xor
gs
icebp
jge
jmp
test
jnp
mov
cmpsl
lods
or
ss
add
xchg
subb
arpl
sbb
das
lret
sbbb
out
fcmovb
mov
adc
filds
mov
push
mov
inc
inc
leave
enter
cmp
jmp
popa
lahf
jl
ret
push
ja
rclb
inc
pop
dec
imul
fs
lods
daa
add
imul
les
out
in
movsb
xchg
data16
cld
jo
in
pop
jnp
push
sbb
mov
xchg
je
and
test
add
and
mov
in
dec
pop
push
icebp
aad
fwait
in
cmp
fimull
pop
in
outsb
mov
aad
mov
mov
popf
jns
callw
std
or
lods
pop
pop
adcb
sub
frstor
lret
sarl
mov
sub
add
cmc
dec
push
inc
mov
xor
decl
xlat
push
jl
inc
leave
mov
popa
sbb
push
testl
sbb
nop
sbb
shr
fldenv
push
jecxz
mov
mov
sbb
movsl
adc
push
push
mov
dec
xlat
mov
sub
push
in
jge
loopne
mov
jnp
jg
lahf
push
mov
inc
out
enter
int
add
and
lods
pushf
or
cmp
xchg
stc
dec
stc
cld
lret
ds
push
cmp
mov
push
shl
jo
xchg
jg
xlat
or
loop
pop
jae
pop
mov
pop
loop
sub
andl
adc
add
pop
mov
scas
fcomps
push
pop
cmp
push
shlb
je
sahf
ficoml
jecxz
sahf
int3
push
cmp
push
in
cmpsl
dec
gs
stc
push
cltd
out
lock
imull
mov
cmp
outsb
out
or
ss
scas
add
in
cmp
push
or
cmp
inc
out
shrl
adcb
sbb
pop
loope
fistpl
sbb
shll
inc
addl
pop
add
adc
mov
xor
loopne
scas
push
push
and
ja
sti
adc
cltd
je
and
xchg
xchg
mov
pop
mov
sbb
popf
aad
js
pop
out
jl
push
int3
mov
call
fistpl
inc
lahf
push
inc
inc
je
cld
ret
xchg
pop
push
std
mov
adc
sbb
mov
rcll
xchg
sbb
sub
cmp
movb
jecxz
je
pop
sbb
ljmp
xchg
xchg
addb
or
aam
cld
shr
push
jb
pop
add
and
cmp
clc
gs
jl
int3
sub
loope
push
out
cmp
aaa
push
jge
mov
cmpsl
cwtl
jl
daa
sub
pop
xchg
or
in
in
jle
mov
adc
xor
negl
xchg
fistpl
add
lcall
sub
aam
xchg
mov
mov
addl
cmpb
xchg
pop
in
lret
aam
test
pop
cltd
xor
mov
pop
icebp
mov
shrb
pop
pushf
jg
sub
mov
mov
jb
call
xchg
data16
sbb
adc
push
cs
js
adc
pop
jp
or
jl
aaa
inc
adc
mov
andl
mov
pop
data16
jg
into
popa
mov
xchg
pushl
js,pt
mov
test
aas
in
pop
jmp
mov
mov
adc
sub
loop
dec
add
fs
fbld
in
jae
fisubs
ja
iret
pop
fmull
inc
fdivp
and
push
mull
cmp
enter
outsl
sub
idivb
jmp
add
pop
inc
mov
sti
mov
enter
hlt
or
cltd
inc
inc
neg
jne
fsubrl
roll
push
inc
and
je
aaa
mov
iret
div
xor
push
xor
jnp
cmpsb
sub
sbb
push
mov
into
test
scas
pop
ljmp
sub
jns
sub
and
cwtl
out
add
sub
pop
cs
stc
dec
lret
adc
fcmovnbe
nop
jg
mov
sub
sub
push
inc
in
insl
xlat
adc
inc
imul
pop
lea
xchg
and
stc
push
or
pop
or
push
mov
mov
sub
lahf
arpl
pop
popf
jp,pt
fdivrs
mov
xchg
into
jmp
daa
inc
mov
cmovle
push
or
and
cmpsl
jle
iret
dec
aas
sbb
cmp
pushf
ja
inc
cli
jp
fcoms
push
mov
repnz
inc
mov
fstpl
mov
out
jle
sti
js
cmpsl
jnp
loop
es
loope
call
ftst
es
mov
push
cmp
ret
jl
cmpsl
jnp
fadds
mov
lock
call
loopne
push
fs
jmp
sbb
jb
das
sbbl
into
or
jmp
jg
cmp
sbb
jnp
rcr
out
xor
arpl
dec
cmp
stos
mov
stos
inc
insb
arpl
push
lds
sbb
mov
daa
sbb
lahf
sub
xchg
push
mov
dec
test
insb
addr16
add
dec
pop
jmp
xor
adc
in
ret
xchg
mov
subl
xchg
lahf
pop
les
and
mov
loop
fwait
inc
in
mov
fwait
mov
sub
shrb
inc
xchg
popf
std
sti
addr16
add
popf
rcrb
stos
popa
push
xchg
mov
icebp
cmp
xor
outsb
lods
mov
mov
lods
repnz
dec
shr
flds
clc
pop
cltd
add
jge
jnp
test
nop
mov
mov
mov
daa
ja
arpl
les
into
xor
arpl
incb
sub
sar
jge
add
or
movsb
mov
sub
mov
int
scas
icebp
addr16
push
ljmp
xchg
lcall
inc
xor
pop
scas
pusha
int
call
jmp
push
mov
push
aas
imul
in
sbb
mov
inc
in
pop
andb
into
push
shl
mov
hlt
sahf
addr16
incb
aas
or
add
sub
and
mov
lahf
inc
pop
popa
inc
xchg
ret
mov
in
cmp
das
sub
imul
inc
xchg
loop
mov
mov
push
add
jns
jg
loop
loopne
pushf
sub
xor
jl
mov
sbb
test
xchg
push
ds
push
jo
mov
cmpsb
out
jp
push
mov
mov
ficoms
jno
mov
fisttps
xor
push
int
and
push
clc
mov
mov
movsb
and
test
shrl
push
int3
jecxz
push
inc
ss
outsl
sub
test
test
sbbl
lods
jo
loopne
shrl
pushf
pop
in
sbb
ret
cli
dec
insb
rorb
push
sbb
mov
jno
jge
imul
je
sbb
jbe
cwtl
fcompl
cmp
and
iret
mov
mov
push
icebp
outsl
xorl
hlt
xchg
je
imull
jl
inc
sbb
push
or
stc
aaa
lea
std
mov
stos
call
stos
fdivs
push
pusha
xor
leave
dec
adc
and
jmp
cwtl
inc
or
loopne
push
out
sbb
shl
xchg
fadd
xor
sbb
pusha
cltd
aaa
fnstenv
or
pop
xchg
xor
outsb
or
mov
dec
es
mov
cwtl
fisubl
in
pop
xchg
mov
cwtl
xchg
sbb
jg
or
push
pop
cltd
pop
jns
fidivrl
sub
aam
jo
sub
jnp
dec
cmp
daa
adc
mov
movsl
popa
inc
cmp
sub
mov
out
jno
es
xor
fcmovbe
adc
je
mov
cltd
inc
ret
push
loop
cmpsb
add
loop
cwtl
or
cs
sub
mov
mov
hlt
fiaddl
out
push
out
xchg
popa
push
stos
leave
sbb
or
stc
lcall
sub
popf
sbb
je
xchg
sbb
jg
mov
adc
or
mov
iret
mov
pop
mov
pop
mov
imulb
cmp
jno
sbbl
jle
inc
js
pop
cmp
or
out
push
std
repz
loope
cwtl
aam
cmc
add
sbbl
data16
std
shr
cmpsb
lds
jp
inc
mov
and
add
mov
in
jne
xchg
add
scas
push
or
lods
lret
and
jmp
xor
lcall
movsb
sub
out
push
mov
push
daa
outsl
in
test
mov
push
lcall
mov
adc
mov
and
lods
or
push
jo
mov
ror
cmp
push
ljmp
test
imul
test
aas
lods
adc
dec
movsb
cli
jnp
dec
rcrl
push
fs
mov
inc
into
pop
test
std
loope
inc
addr16
cmpl
cmpsb
aad
aad
inc
jae
xchg
stos
outsb
mov
popf
addps
mov
imul
mov
lock
pop
pop
out
adc
sbb
lock
mov
les
icebp
adc
ret
jbe
int
xchg
xor
enter
adc
pop
inc
sbb
hlt
cld
inc
cmp
lods
movsb
inc
or
outsl
in
std
xchg
shlb
xchg
xchg
adc
inc
andl
outsb
cltd
int3
jo
rclb
test
lahf
sbb
inc
imull
push
adc
xor
or
mov
or
mov
dec
ds
test
cmpsl
movsb
xor
adc
push
or
push
mov
imul
pop
mov
idiv
push
in
addl
dec
mov
mov
repnz
lods
push
cmc
test
ljmp
mov
mov
push
inc
cld
xor
cld
rcr
jecxz
sar
dec
sbb
jae
jle
popa
adc
imul
js
cmp
xor
iret
inc
push
dec
test
cmpsl
mov
imul
xor
insl
sbb
xor
cmpsb
add
sub
test
aas
rcrb
flds
jp
test
cmpsl
pop
mov
out
sub
pop
test
mov
cmp
push
jno
jnp
cli
jmp
out
mov
push
mov
outsl
cmp
pop
call
mov
shr
cwtl
mov
sbbl
dec
flds
popf
jne
pop
fstpl
std
stos
and
ficoms
inc
sbb
and
call
cmp
adc
dec
iret
xchg
pushl
pop
push
leave
pop
sub
jno
pushf
addl
aaa
dec
push
movsl
imul
fistpl
pop
xchg
xor
fadd
or
mov
fldcw
push
dec
mov
lcall
outsl
inc
inc
jmp
jge
mov
cwtl
adc
jge
fnstsw
or
cwtl
xor
lahf
and
ds
sbb
pop
xchg
aaa
call
pop
jecxz
xchg
inc
pushf
dec
gs
adc
rcr
jecxz
cwtl
pop
aaa
push
sub
lcall
iret
pop
lret
repnz
push
xchg
xchg
pop
testl
sub
pop
jno
mov
nop
arpl
dec
lahf
xchg
cmp
call
ret
mov
jmp
add
fdivs
fisttpll
push
push
fbld
cmp
leave
movb
jl
inc
int3
outsb
int
cmp
jo,pn
clc
inc
aas
or
sbb
sbb
dec
jge
scas
pop
mov
notb
push
pushf
movsl
pop
loop
stc
in
mov
pop
repnz
mov
or
fistpll
ja
imul
push
sbb
xchg
popf
sbb
lcall
fistpl
add
jl
inc
xchg
and
adc
inc
fistpl
lahf
push
jmp
or
lds
pop
pushf
and
jne
in
icebp
xor
es
mov
sbb
pop
and
dec
ss
jns
or
lea
stos
mov
ds
pop
xchg
jnp
push
stos
mov
aas
in
sub
or
in
inc
xor
repz
imul
push
stos
shrl
xchg
stos
jo
cmc
mov
and
sbb
aaa
cmp
pop
in
inc
push
jmp
insb
fldenv
cmp
lea
ss
stc
mov
jp
or
jnp
xor
pop
push
add
pop
jle
outsl
movsb
add
mov
sbb
lods
pusha
jl
loopne
inc
jnp
mov
adc
xchg
inc
inc
stc
pop
jo
dec
pop
roll
dec
or
pusha
aam
jl
add
jne
mov
out
clc
mov
inc
mov
das
push
mov
ja
jge
adc
test
inc
lods
dec
fisubrl
mov
js
mov
pusha
mov
sub
jle
mov
cmp
inc
shll
fwait
repz
pusha
aaa
js
xchg
int
cli
xchg
testl
lret
dec
imul
orl
cld
test
jmp
pop
mov
cmp
pmulhw
inc
cmp
cmp
cmp
jg
sbb
mov
loope
lods
mov
addr16
cwtl
std
repnz
out
or
lods
es
mov
mov
roll
or
pop
xor
mov
mov
into
mov
mov
cmp
dec
ljmp
inc
aam
jmp
and
mov
mov
sahf
or
subl
test
pop
mov
push
ja
mov
imul
mov
stos
and
jp
dec
subl
loope
pop
mov
fisttpl
mov
fwait
outsb
les
dec
mov
lea
jae
mov
insl
pop
hlt
lods
lea
sbb
rcrb
pushf
js
push
out
add
jbe
sub
cmp
mov
int
xchg
js
dec
adc
or
cmp
or
clc
sbb
ret
mov
jecxz
mov
sub
inc
add
les
mov
inc
sub
lret
scas
pusha
aaa
icebp
shll
jmp
fdivrs
aam
or
ds
ja
mov
int3
addr16
icebp
adc
loop
mov
xchg
stos
aam
push
pop
xor
add
push
ror
test
lret
xchg
cmp
sbb
lods
fldl
push
sub
imul
inc
hlt
mov
test
lock
fnsave
pusha
rorb
pop
aad
repnz
jmp
insl
lods
xor
push
pusha
stc
and
movsb
icebp
xor
cmp
jno
mov
mov
add
shr
mov
inc
xor
xchg
sub
sarb
lcall
inc
xor
fsubrl
fs
dec
xchg
xchg
fwait
adc
mov
fmuls
mov
adc
pop
jmp
inc
mov
iret
fimull
xor
sub
ret
addr16
inc
cmpsl
lret
adc
cs
lret
mov
test
dec
pop
dec
push
xchg
je
sarl
mov
pop
inc
add
jae
rorl
push
shrd
gs
push
or
iret
inc
call
inc
les
in
mov
xchg
xchg
stos
jae
test
push
and
std
into
cmp
movsl
cmp
inc
and
push
ficomps
mov
sbb
enter
xchg
and
cmpsb
call
and
mov
nop
pop
cmp
mov
and
repz
xor
fdiv
dec
enter
imul
jnp
mov
cmpsb
scas
aam
pop
bound
rorl
pop
or
jecxz
cmpsb
mov
sbb
adc
mov
int3
in
out
nop
and
cmp
fsubrs
out
push
inc
dec
push
dec
cld
mov
leave
mov
hlt
push
mov
int3
je
fnstenv
in
inc
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
mov
hlt
bound
pop
bound
test
and
aas
ja
add
cltd
ss
aad
adcl
mov
dec
cmp
addr16
cltd
shrl
sbb
dec
jae
inc
xchg
push
lahf
fidivrl
das
push
mov
rcr
jmp
and
jns
push
enter
lds
mov
xchg
mov
pop
jne
xchg
lret
xchg
mov
cmc
hlt
xlat
sbb
cmp
dec
outsb
xchg
iret
or
pop
push
jbe
dec
cmp
push
lds
or
inc
mov
pop
test
push
cmpsl
cmc
call
mov
and
out
add
mov
rolb
add
push
dec
sub
lods
lahf
push
cmp
fimull
outsl
roll
js
test
and
stos
inc
pop
in
iret
bound
cmp
icebp
and
sbb
mov
jnp
mov
dec
jmp
shl
cmp
push
jne
lret
or
cltd
js
lock
int
out
stos
adc
mov
jns
add
roll
rcrb
adc
push
cmp
into
daa
mov
icebp
ret
jne
in
fs
mov
rcrb
dec
insl
out
das
cli
cwtl
sbb
cmp
cwtl
mov
popa
push
out
pop
movsl
mov
sub
cmc
ljmp
fcom
mov
mov
adc
js
adc
sub
pop
dec
jns
aas
les
add
cmp
inc
pushf
cmp
test
pop
push
lahf
push
lods
inc
sarl
cmp
sub
loop
xor
lods
push
jp
pop
nop
xor
icebp
std
rcrb
dec
pusha
cmp
sahf
mov
insb
push
outsl
addr16
xor
loop
mov
pop
jmp
das
testl
mul
sbb
jp
jae
es
mov
jmp
daa
mov
xchg
cltd
out
filds
ffreep
nop
xor
fwait
xor
fmull
outsb
inc
cmpsl
out
adc
aam
and
jnp
inc
xor
cmpsl
je
xchg
sbb
jb
shll
loopne
btr
mov
jo
jge
dec
dec
add
xor
mov
push
sub
sub
lret
jg
fwait
aaa
xchg
jns
iret
jp
pop
jo
adc
clc
pop
mov
ds
cmpsl
hlt
inc
cmp
mov
out
bnd
pop
aam
cs
out
adc
out
mov
or
cmpsb
pop
push
jnp
xor
ss
inc
xor
push
stos
xor
mov
inc
andl
push
cmp
or
js
xchg
mov
nop
inc
cmp
dec
mov
mov
xchg
aaa
rclb
int
jns
inc
pop
loop
lahf
and
sbb
or
or
mov
mov
adc
call
add
jmp
mov
into
pop
adc
lahf
jge
cmp
or
dec
lcall
shrl
test
jge
push
aaa
int
mov
jae
push
imul
ja
pop
xchg
dec
mov
sahf
mov
inc
mov
pusha
cmp
inc
clc
andb
push
cmc
fs
leave
inc
push
push
fwait
push
ja
outsl
xchg
push
sahf
insl
mov
sub
and
cmp
loope
adc
sti
fsubs
loop
adc
ds
jno
adc
out
repz
jbe
jge
push
cmp
xor
fsubl
or
push
inc
adc
push
imul
xchg
mov
lods
or
loopne
jecxz
loopne
nop
js
jns
pop
xchg
mov
cmpl
and
xor
jmp
lods
push
push
fs
loopne
push
fimuls
aaa
pop
sbb
mov
jp
or
insl
jecxz
xchg
test
mov
jb
orl
add
lock
pop
xor
add
mov
rcrb
xor
cs
jbe
mov
lock
scas
xchg
or
scas
push
pop
push
dec
addr16
inc
fdivrs
lretw
clc
das
into
repz
lods
cmc
nop
jge
lcall
sub
out
dec
test
push
loope
xchg
push
int3
sbb
outsb
lret
mov
aaa
pusha
jge
adc
jecxz
fwait
xchg
lock
popa
arpl
hlt
repz
decl
push
pop
lods
pop
jno
cmpsl
xchg
cmpsb
stos
sbb
push
scas
mov
sbb
xchg
outsl
push
xchg
lret
jmp
pop
push
mov
push
adc
xchg
mov
xchg
mov
adc
shll
fstpl
mov
mov
imul
add
mov
stos
lea
int3
inc
pop
cmp
aas
addb
or
adc
in
push
shll
add
jnp
fbstp
adc
scas
dec
mov
inc
xchg
arpl
fsubl
jb
enter
fwait
arpl
xchg
fs
xchg
jge
test
les
rol
cmovp
addl
arpl
rclb
idivb
cmp
iret
test
mov
fisubrs
in
test
stc
rcrl
fisttpll
outsl
xchg
jecxz
out
enter
add
inc
repnz
add
push
js
inc
fiadds
or
int3
cli
aas
jno
mov
sub
js
mov
lods
jae
movsl
in
lds
es
push
push
ret
gs
xor
cld
test
stc
xchg
inc
fwait
adc
push
cwtl
mov
push
fwait
mov
mov
add
pop
mov
and
xchg
pop
fisubrl
add
sti
loopne
lret
jecxz
sub
lock
lcall
cmpb
cwtl
inc
lods
mov
inc
cwtl
push
out
icebp
dec
inc
add
and
aas
cmp
sbb
in
gs
fwait
xchg
cli
gs
push
lock
and
addb
inc
aam
xchg
out
mov
sub
inc
sbb
mov
xor
rclb
add
test
ljmp
mov
mov
dec
mov
xor
or
adc
jnp
out
cmp
out
mov
xchg
movsl
outsl
repz
cli
lds
adc
sub
in
into
stc
sbb
subl
not
into
scas
mov
int
hlt
outsl
push
and
inc
imull
xlat
lea
jbe
mov
sub
or
out
and
sahf
mov
dec
int
jnp
inc
test
jmp
xor
jb
xor
inc
mov
lods
push
cmp
push
outsl
ljmp
push
les
ret
xor
ljmp
push
test
call
std
test
je
call
rolb
lods
loopne
cmp
jb
lcall
movsl
cmpsl
mov
enter
lahf
aad
ljmp
shll
sti
cmp
pop
xor
sub
in
mov
inc
mov
push
adc
std
inc
dec
mov
add
jnp
mov
mov
or
or
fsubrs
jbe
leave
sub
jmp
or
push
xor
fistpl
enter
js
xchg
inc
sub
xor
dec
mov
insb
imul
push
sbb
andl
sub
inc
adc
imul
lret
jmp
out
lahf
jne
dec
mov
es
sub
gs
mov
subb
test
lds
je
inc
aam
std
in
pushf
in
push
dec
xor
dec
pushf
ds
sbb
daa
test
mov
xchg
mov
dec
pop
out
lahf
inc
sub
xchg
lret
in
and
inc
data16
sbb
lret
adc
add
dec
add
ljmp
testl
or
leave
jnp
fucom
mov
mov
fs
push
aaa
addl
add
scas
mov
jbe
mov
es
scas
movsb
ss
jno
inc
sbb
jno
pop
fstps
repnz
sbb
xchg
sub
jns
mov
and
jmp
stos
into
cmc
mov
xchg
pop
add
pop
fdivs
test
insb
pop
mov
test
std
bound
loopne
push
popf
sbb
jae
in
aaa
outsb
mov
outsl
fwait
mov
lret
dec
xchg
mov
mov
xchg
fwait
or
in
clts
push
push
mov
mov
movsl
cmp
mov
cmc
and
xchg
in
test
out
or
inc
mov
fs
adc
xor
movb
aam
dec
rorl
fnstenv
dec
cmp
sbb
test
add
fistpl
add
enter
andl
mov
repz
sub
sub
mov
imul
ret
pop
ljmp
sub
inc
xchg
push
inc
jle
xchg
xchg
jmp
or
mov
jbe
daa
push
clc
or
repnz
dec
stos
aam
jp
aas
or
sbb
mov
adc
mov
push
sahf
bound
lds
cmp
test
ror
gs
fldl
push
mov
cld
out
inc
test
or
sbb
pop
lcall
sbb
rcll
leave
add
rclb
loope
cld
jb
xchg
mov
daa
scas
cli
sub
push
bound
fcmovnb
xor
mov
inc
dec
inc
cs
jge
sbb
imul
out
stos
inc
leave
iret
inc
int
rorl
adc
add
fildl
into
push
jp
cltd
insb
insl
roll
shlb
xor
add
es
bound
push
scas
ror
ss
push
jne
push
pop
into
mov
addb
ret
and
pop
dec
insl
call
pop
notl
and
dec
hlt
sbb
sub
outsb
adc
fisubl
outsl
subb
into
rcrb
cwtl
push
mov
aaa
stos
std
fs
fisubl
out
inc
lods
push
dec
pop
lds
mov
or
dec
inc
daa
jae
mov
push
mov
push
divb
mov
gs
cmpsb
xchg
movsb
mov
push
filds
and
mov
rolb
fdiv
stc
invd
arpl
push
je
or
mov
out
sub
fldcw
pop
icebp
xchg
xchg
adc
xchg
mov
sub
pop
and
loopne
mov
enter
xor
xor
cmc
dec
mov
bswap
pusha
shl
lods
ljmp
sub
cmp
ret
xor
lods
lea
xor
call
and
xor
insl
daa
xchg
mov
add
lock
cltd
in
insl
or
pop
insl
lock
mov
jg
sahf
xchg
pop
mov
jnp
dec
and
cmpsb
test
movsbl
or
mov
and
mov
pushf
shl
fs
popf
inc
cmpsb
call
and
mov
cli
gs
xchg
push
sbb
jbe
test
ss
rcl
ss
sar
sub
test
mov
mov
call
popl
mov
add
xlat
or
adc
sbb
xchg
pop
jae
xor
ss
push
mov
or
ljmp
mov
nop
sbb
jle
mov
cmp
and
lds
jno
add
loopne
sub
aad
cmp
sbb
lea
stc
fisubs
pop
adc
jle
les
dec
es
pop
sbb
mov
jb
hlt
lea
jmp
in
cmp
push
cmpl
daa
stc
lock
sti
pop
into
mov
jno
mov
or
cmpsb
cmp
dec
dec
fs
jl
pop
push
cltd
cltd
mov
arpl
addb
and
fistpll
in
hlt
and
daa
js
sbb
jle
xchg
sbb
shl
jbe
clc
dec
jno
movsb
jne
dec
lcall
pushf
mov
dec
data16
jge
sti
pop
ds
mov
adc
push
outsb
inc
mov
xchg
and
mov
inc
fs
push
inc
pop
xor
xchg
fsub
sbb
jne
sahf
xchg
jae
dec
dec
xor
add
movsl
cli
repz
les
int
jnp
jge
add
cmp
inc
xor
pop
ljmp
cmpsb
leave
rolb
lahf
adc
dec
cmc
dec
fstps
in
jl
push
and
sbb
jns
inc
mov
rcll
xchg
dec
pop
push
cli
out
cmp
pop
inc
and
jp
dec
inc
push
inc
push
push
inc
daa
arpl
mov
push
pop
shll
xchg
orb
es
int3
mov
int3
adc
push
xor
imul
addr16
fisubrl
pop
mov
mov
and
or
shll
add
xchg
adc
jno
push
lods
shll
mov
push
out
xor
jecxz
icebp
outsl
mov
daa
scas
pop
push
jmp
add
xor
mov
addr16
xchg
xor
pop
lret
rcl
jl
mov
stos
add
incb
and
pop
dec
movsb
fwait
clc
lcall
rorl
pop
popf
mov
push
std
js
lods
sub
aas
xor
jge
cs
outsl
daa
push
lret
push
movsl
dec
movsb
xorb
addr16
fisubs
enter
xor
subb
jne
popf
repz
push
add
mov
insl
push
push
add
push
aam
sub
stos
xchg
scas
iret
mov
js
adcl
sub
rcrb
mov
sti
std
arpl
xchg
push
adc
inc
add
ja
scas
cld
xor
cli
test
shll
mov
call
lds
cmp
lock
cmp
xchg
sub
mov
xlat
xchg
dec
push
mov
scas
inc
pop
jg
mov
pushf
stos
push
test
and
mov
xchg
jp
sub
dec
adc
int
popf
in
cmp
out
jmp
scas
sub
mov
notl
je
sbb
push
sub
and
popa
fildl
imul
add
out
clc
mov
cmc
lock
repnz
movsb
cmp
jecxz
cltd
adc
mov
mov
fucompp
out
pushf
push
jnp
cltd
xchg
stc
jno
stos
shlb
inc
jno
mov
movsb
flds
cwtl
ret
mov
cltd
inc
xor
dec
dec
enter
xchg
push
mov
jg
pop
add
sub
mov
jns
push
add
sub
sub
call
aad
cltd
pop
ficomps
stos
sti
xchg
inc
dec
add
shrl
xchg
pop
std
xor
call
or
pop
add
fdivrs
scas
fsubl
scas
jo
jge
mov
cmp
in
fldl
mov
ja
sub
cs
push
repnz
js
sbb
jne
dec
push
push
popa
hlt
loopne
int
adc
jmp
out
jbe
imul
mov
push
xchg
mov
xor
xchg
outsb
dec
xorb
pop
aad
call
pushf
push
cld
xor
mov
out
mov
roll
stos
jg
repz
sub
pop
lods
cmp
clc
mov
sbb
hlt
and
loope
stc
in
sub
sbb
push
lds
mov
in
mov
fld
adc
stos
into
xor
jmp
cmp
inc
imul
or
cli
push
jge
jp
jle
addr16
xor
loop
ss
pop
repnz
mov
jg
sub
in
test
jecxz
push
xchg
mov
mov
push
cwtl
sti
dec
in
mov
in
fsubrl
xchg
loope
subb
js
sbb
pop
imul
mov
mov
cmc
adcb
scas
sbb
cmp
xchg
vprotd
data16
xor
pop
cli
xor
out
pop
mov
test
cld
popf
and
fwait
sub
mov
test
mov
jno
mov
cmp
lock
dec
jge
aas
popf
mov
jnp
test
gs
mov
stos
cmp
repz
mov
mov
push
mov
mov
dec
pop
pop
push
pop
jl
adc
ljmp
push
pop
and
inc
outsl
jnp
or
dec
dec
mov
arpl
mov
sbb
and
pop
jmp
dec
mov
jl
jnp
xor
jl
mov
xorl
and
fsave
xor
int
scas
rol
mov
push
push
mov
pop
xchg
xchg
imul
mov
cmp
aas
scas
jg
leave
shlb
xchg
lcall
jl
xchg
int3
int3
xor
outsb
cmp
mov
and
inc
scas
dec
push
cmp
es
jge
pushf
leave
les
cvtpi2ps
add
and
pop
adc
lods
leave
add
movsl
or
addb
mov
daa
pop
xchg
daa
or
inc
adc
addl
fisubl
push
mov
call
test
jp
loopne
aas
hlt
inc
sti
jmp
jge
xor
mov
jg
adc
cli
dec
ss
push
add
bound
pop
and
lret
int
aad
lea
mov
in
sar
or
push
adc
cltd
mov
push
sbb
repnz
jecxz
xor
push
jge
jae
jb
jecxz
sbb
mov
insb
jae
pop
dec
je
jecxz
outsl
xchg
rcll
cmc
pop
les
test
test
jl
in
mov
lods
dec
or
mov
push
mov
add
imul
fnstcw
dec
jns
jle
lcall
mov
sbb
sbb
mov
jecxz
dec
and
jecxz
dec
lock
pop
mov
mov
test
stos
fsubrp
inc
cmp
jmp
push
gs
stos
sahf
aam
dec
jmp
js
xchg
sub
in
sahf
mov
orl
xchg
adcb
jnp
or
lea
test
daa
test
loope
pop
push
xor
push
and
cmc
cmp
sbb
sbb
les
bound
imulb
cmp
and
jg
lock
or
int
push
jmp
dec
dec
rcl
pop
cld
repnz
jo
aas
jmp
mov
mov
sub
jg
pop
mov
cwtl
mov
cmp
push
movsb
call
test
enter
fbstp
push
mov
sbb
sub
enter
mov
data16
jo
mov
push
ret
xchg
lcall
movsl
test
ret
jns
push
sub
lahf
orb
jmp
loop
add
fldl2e
adc
mov
sbb
mov
mov
xchg
imul
cmc
lea
dec
fucomi
xor
xor
mov
xor
and
aas
jge
loopne
mov
lock
lret
push
add
push
add
out
fs
fwait
push
in
jecxz
dec
iret
jnp
ret
and
or
fcom
jae
out
jl
xchg
in
fldl
arpl
sbb
into
test
je
insl
outsb
push
out
ret
pop
loope
out
jb
mov
enterw
lea
mov
mov
ja
push
and
xlat
adc
mov
ds
lock
xchg
pop
cmc
cli
mov
inc
out
or
orb
in
mov
mov
xchg
not
sub
enter
sbb
aaa
ret
in
or
push
ja
stc
and
mov
mull
add
xchg
loope
pop
sbb
xor
ljmp
test
mov
sbb
outsb
add
cmp
cmp
mov
imul
aaa
pusha
in
jb
fs
xlat
mov
adc
sub
push
std
je
xchg
push
int3
rorl
repz
adc
mov
jo
divb
leave
lds
adc
jle
pop
and
sub
mov
xchg
imulb
jecxz
insb
scas
dec
out
pop
cmpsb
mov
xchg
mov
and
in
vdivpd
call
out
push
push
in
loop
out
cmpl
add
or
cmp
test
das
and
and
lds
or
jecxz
inc
cmp
call
jne
dec
pop
mov
in
pusha
lods
ljmp
and
jno
lds
leave
pop
and
jbe
sbb
and
test
lea
xchg
ljmp
popa
out
scas
mov
insl
movsl
test
leave
jg
mov
mov
rorb
push
pushf
pop
in
je
negl
sub
and
imul
and
les
sbb
sbb
inc
sub
xchg
inc
std
or
pop
jmp
xor
movsb
mov
repnz
cmpsb
mov
cmpsb
mov
push
jmp
push
sub
mov
jae
cmpb
in
loopne
jnp
xor
out
out
pop
cmpsl
movl
fcmovnu
mov
mov
mov
dec
adc
call
popf
mov
testl
in
imul
adc
nop
add
sub
cs
xor
mov
pusha
cmc
push
push
out
push
or
xchg
xor
mov
inc
sub
lock
cwtl
and
mov
fisubl
dec
cmp
sbb
xor
mov
stc
jge
icebp
mov
shr
push
cmp
aad
sub
insb
mov
mov
fadd
cmpl
push
out
sub
cmp
pop
out
jns
testb
je
test
stos
inc
outsb
push
and
rcrl
cwtl
xchg
push
push
pop
std
pop
cs
or
inc
mov
sbb
dec
push
movsb
jmp
je
negl
xchg
mov
jl
xor
inc
pop
inc
sbb
roll
sub
in
jo
je,pn
add
imul
or
shl
pusha
cmpsb
pusha
repz
add
sub
pusha
arpl
lahf
sub
addr16
imul
pop
push
in
test
mov
sbb
add
movsb
cmpsl
jg
adc
aad
aas
fcomps
hlt
ret
dec
mov
orl
xor
or
pushf
inc
call
mov
jno
ds
adc
or
lea
jbe,pn
les
and
or
sbb
or
sub
daa
cmp
pushf
push
lods
or
insw
push
je
inc
pushf
sbb
mov
xchg
pop
in
movsl
insl
sbb
cltd
xor
ficompl
jecxz
out
jno
xchg
adc
lret
cmp
or
in
frstor
mov
test
in
dec
shll
jbe
pushf
mov
mov
fadd
nop
jecxz
dec
mov
jbe
stos
add
stos
aam
insl
fcomp
jbe
push
xlat
lods
leave
xor
scas
lahf
inc
or
xchg
loope
or
pop
aad
ds
clc
inc
dec
inc
jno
aas
mov
pop
aad
les
jne
push
jmp
adc
cltd
ds
ja
push
add
cli
push
and
cmp
es
mov
xchg
pop
pop
ds
popf
sbb
daa
pop
push
stos
mov
xor
pop
cmp
mov
cmp
rcll
repnz
fs
mov
push
stc
movsb
scas
inc
stc
xlat
and
xchg
mov
adc
sbb
xchg
xchg
loopne
add
clc
add
lret
lret
leave
xor
sbb
fbstp
pop
pop
push
aad
jne
ret
ds
lahf
ja
les
mov
adc
push
in
repz
cmp
lods
movsb
lods
jmp
jmp
inc
adcl
sub
pop
loopne
sbb
mov
int3
inc
mov
icebp
cmp
mov
sub
inc
imul
stos
jp
call
arpl
cs
cmp
scas
push
pusha
xor
xchg
xor
jmp
out
inc
cmp
mov
in
pusha
jmp
pop
push
add
int3
or
stos
test
adc
adc
sbb
dec
test
pop
scas
dec
inc
mov
mov
movsl
push
out
shrb
mov
aam
shll
sbb
divl
sub
add
pop
jecxz
outsl
roll
pop
pop
xchg
cli
mov
cltd
adc
scas
addr16
sbb
dec
mov
dec
jne
dec
mov
rclb
hlt
in
sub
insl
enter
rclb
testb
jae
and
mov
xor
lret
jmp
ss
dec
scas
sub
or
sbb
fistpl
add
iret
pop
add
and
sub
cmp
icebp
push
mov
sbb
out
sahf
mov
orl
xchg
or
shll
inc
or
add
adc
push
mov
mov
outsb
mov
jmp
mov
repnz
cmp
lret
sub
ret
sbbb
ljmp
daa
cwtl
clc
ret
adc
mov
int
sub
imul
icebp
and
adc
call
mov
jb
mov
imul
ljmp
xchg
cmp
std
push
xchg
cmp
test
cmc
jnp
mov
ret
pop
into
push
mov
fildl
jne
imul
jge
xor
sbb
sub
mov
loop
in
ret
dec
and
lret
jle
ljmp
gs
push
dec
xor
shll
push
popf
loope
inc
cwtl
xchg
fildl
cwtl
in
push
cwtl
in
add
add
mov
in
mov
orb
dec
sub
iret
das
fwait
sarb
xchg
dec
xor
xchg
xchg
inc
stos
test
sub
sbb
xor
mov
ds
js
push
in
push
jle
cmp
dec
xor
mov
imul
adc
mov
cmp
mov
clc
popa
push
or
dec
mov
adc
aam
sbb
mov
ljmp
xor
push
scas
ret
inc
adc
enter
ret
cwtl
mov
mov
or
mov
mov
mov
lea
or
cltd
out
push
cmpl
inc
daa
mov
pop
jne
in
xor
xor
cld
js
inc
incl
mov
cmp
adc
pop
mov
or
push
loope
inc
pop
fbld
aad
xor
cmp
test
shrb
rcrl
xchg
jge
pop
jb
rcrl
dec
cmp
loopne
jge
pushf
enter
push
sbb
loopne
stos
mov
popl
jg
sarb
orb
out
pop
and
jae
push
mov
loopne
shrb
mov
mov
testl
lret
and
insl
dec
imulb
test
mov
fwait
mov
pop
mov
stc
popf
mov
add
cs
push
lahf
es
pusha
cmp
mov
pop
imul
inc
movsl
ljmp
or
cli
mov
inc
dec
sub
push
cmp
out
fsubs
inc
lret
test
mov
and
notb
mov
sub
or
mov
pop
pop
inc
xchg
rclb
test
push
repnz
scas
push
add
mov
faddp
inc
out
sub
sti
clc
in
dec
cwtl
ss
sub
pop
sub
mov
mov
xor
idivl
cmp
mov
jnp
xchg
xchg
push
ljmp
ds
lods
adc
sbb
sbb
iret
pop
sub
js
loope
mov
mov
mov
or
int3
imul
or
add
call
add
out
and
lret
push
inc
mov
pushf
ja
inc
movsb
adc
mov
mov
lds
out
std
pop
cs
rolb
pop
call
shll
int
cmp
test
mov
ds
lods
je
in
or
arpl
sub
push
xor
push
jno
jge
mov
mul
enter
imull
mov
xchg
push
mov
adc
xor
nop
cmc
aas
push
movsb
ror
jg
jo
mov
incl
adc
adc
mov
aas
cmp
das
inc
outsl
or
inc
pop
cmpsb
sbb
data16
dec
mov
mov
mov
inc
cmpsb
popa
in
jmp
xlat
inc
and
in
mov
pop
inc
outsl
jnp
inc
xchg
je
mov
push
sub
push
pop
fstl
jmp
call
ret
mov
imul
int
sbb
imul
test
sbb
repz
aam
mov
mov
outsb
pop
xor
dec
mov
ss
inc
shlb
repnz
mov
sbb
mov
jl
pushf
dec
jp
movl
js
jb
lret
mov
dec
or
shrl
mov
adcl
inc
cmpl
inc
push
in
pop
negl
push
fisubrs
push
mov
mov
mov
push
cmpsb
orb
test
jno
gs
enter
push
jmp
popf
inc
mov
sub
loopne
cwtl
and
push
mov
mov
sbb
icebp
and
shl
ljmp
daa
jl
mov
jecxz
imul
lea
xchg
clc
jnp
mov
pusha
inc
xchg
jae
imul
pop
lcall
xchg
ja
jmp
or
cmpsb
repz
cmp
stc
pop
repnz
push
jle
jecxz
std
ds
xchg
daa
jp
in
mov
fstps
pop
sbb
ror
fsubrs
sbb
adc
and
std
pop
mov
xor
adc
xlat
mov
adc
and
shl
add
or
sub
rcll
and
mov
lahf
xor
jecxz
jae
mov
dec
rol
pushl
mov
int
aaa
aaa
btr
cmp
lahf
push
leave
ficoml
repnz
xor
into
sub
idivb
push
into
lahf
mov
cwtl
add
adc
add
dec
pop
mov
xor
loopne
sbb
rorb
xchg
test
adc
fcoml
pop
rorl
icebp
adc
adc
or
mov
cmp
mov
add
ja
fucom
push
std
push
mov
divl
out
pop
mov
loope
icebp
sbb
aas
loopne
insb
lods
xor
cwtl
sbb
les
imul
cmpsb
push
pop
adc
leave
sub
test
sbb
call
test
add
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
add
add
jmp
bound
dec
mov
mov
daa
mov
push
xor
inc
cld
in
lcall
repnz
in
test
adc
clc
add
int3
insb
xlat
out
add
jb
xor
inc
add
xor
xchg
push
xchg
shrb
sahf
cmp
and
jmp
mov
in
dec
inc
dec
in
pop
call
rclb
xchg
add
dec
push
mov
lods
pushf
jp
in
dec
divb
cmpsb
pop
in
mov
add
hlt
xor
or
test
cwtl
mov
idivl
cmova
push
cmpsl
repnz
gs
mov
es
or
pop
sub
push
lret
and
test
movsl
xchg
lcall
jp
add
or
or
sub
jp
loopne
dec
test
ret
fs
mov
inc
or
cli
dec
stc
imul
leave
inc
dec
mov
dec
test
xor
push
mov
ljmp
divb
jne
into
push
dec
xchg
lds
xor
arpl
ret
pop
adc
int3
mov
test
cmp
jecxz
leave
fisubs
arpl
aas
mov
mov
jle
lea
stos
jne
and
negl
adc
addr16
aas
jmp
inc
and
shlw
sbb
add
and
and
jno
dec
or
into
dec
mov
das
data16
mov
or
cli
fnsave
xor
out
jns
xor
movb
or
pop
dec
mov
adc
push
mov
push
pop
mov
xchg
rclb
repz
dec
push
cmp
je
jl
push
and
out
mov
inc
adc
xor
pop
test
dec
les
out
xor
aaa
leave
movsl
cmp
sub
xchg
fmull
insb
sub
pop
push
stos
aam
hlt
outsl
push
daa
cmp
lret
es
insb
ljmp
inc
add
push
pop
sarl
pushf
data16
sub
je
jecxz
ja
push
inc
shlb
in
lcall
push
les
push
xchg
out
hlt
push
push
xchg
cs
stc
addr16
into
pop
push
fsubrp
pop
int3
pop
inc
mov
and
xchg
add
and
outsl
in
jae
sub
les
adcl
mov
adc
push
in
cmp
cmpl
pop
jb
adc
or
popf
stos
in
outsb
push
lods
adc
sub
mov
mov
mov
cmp
loopne
mov
xchg
sub
add
lret
jl
ljmp
or
add
sbb
jl
insl
inc
daa
sub
mov
leave
jl
cltd
loop
cltd
add
push
or
xchg
std
mov
add
or
mov
incl
repz
rcl
enter
mov
adc
outsb
in
jmp
lret
fsubr
cmc
out
test
dec
mov
loop
mov
out
sub
scas
clc
pop
inc
xor
dec
clc
mov
rol
mov
lods
and
lahf
push
into
out
ror
jae
sub
call
push
add
jno
push
inc
fdivrp
aaa
fildll
and
popa
cmp
aad
ds
imul
jp
lahf
fldcw
hlt
xchg
or
xlat
cli
pushf
mov
cmp
lock
fcoms
cmp
andb
movsl
std
lret
ret
pop
jl
ror
add
sbb
inc
adc
sub
push
cmp
rcrl
ret
lds
sub
xor
cld
daa
fadds
mov
push
popw
dec
add
xlat
fwait
adc
and
xor
add
cmc
mov
js
and
jo
ret
pop
fcmovu
mov
in
adc
mov
inc
stos
test
fs
add
or
icebp
jg
fsubl
les
inc
mov
mov
cmp
inc
inc
inc
adcb
rcr
int3
pop
scas
pop
shl
jne
pop
stos
mov
aas
or
mov
andb
sti
in
mov
jne
in
fstpl
in
subb
xor
push
repnz
or
cmp
mov
cmpsb
in
incl
lea
outsb
lret
nop
mov
dec
out
jns
enter
xor
xorl
es
movl
inc
mov
out
jg
dec
lcall
add
stc
mov
or
push
adc
xchg
and
push
jo
and
adc
pushf
in
mov
dec
mov
popf
jle
mov
or
imul
pop
mov
cmpsb
sti
fcoml
and
sub
mov
clc
dec
rcr
push
mov
push
outsl
xor
test
je
add
cmp
call
int3
push
push
aam
stc
lods
mov
loop
addr16
daa
xchg
inc
faddl
jl
dec
xor
or
cltd
dec
dec
xor
push
xchg
clc
add
daa
nop
lds
adc
dec
lahf
sti
xor
inc
leave
das
or
sbb
mov
jnp
dec
lret
stos
jl
fstps
inc
and
fnstsw
mov
fcoms
enter
aam
fdivrl
aas
mov
xchg
test
mov
inc
dec
aad
enter
pop
orb
fcomi
and
aaa
xchg
ss
ss
ret
or
dec
add
push
mov
loopne
out
movb
rol
push
out
pop
cmp
fdivrl
mov
pop
sub
mov
push
xorb
add
dec
roll
or
orb
pop
pop
add
jo
inc
inc
jg
mov
cmp
es
stos
int3
mov
adc
mov
push
add
outsl
das
xlat
sub
out
xchg
shlb
cli
aaa
mov
jo
iret
nop
dec
ljmp
add
cmpsl
testb
pop
daa
out
popa
pop
fimull
subl
mov
idivl
sub
push
mov
jno
jnp
and
lahf
scas
inc
pop
cmp
outsl
ret
fnstcw
cmp
mov
bound
xchg
inc
repz
scas
sub
mov
adc
jg
lcall
je
roll
lock
fs
pusha
jl
sbb
repz
pusha
movsb
sbb
gs
xchg
push
mov
mov
cltd
and
cmp
push
cmovno
sti
adc
inc
stos
adc
or
and
pop
xor
movsb
or
inc
sbb
and
test
mov
jl
fcmovnbe
cmp
lahf
mov
int
fscale
jge
or
lret
cwtl
jle
shrb
cmp
cmp
fstl
jns
pop
sub
imul
pushf
jne
xor
je
push
js
mov
test
pop
jo
loope
adc
dec
es
xor
imul
mulb
push
dec
adc
outsb
les
popa
notl
fwait
pusha
imull
sub
mov
faddl
mov
xor
cli
fidivs
sbb
pop
xchg
adc
push
mov
cmpsl
test
jg
pop
mov
cli
push
sbb
pop
sbb
out
sub
mov
outsb
inc
scas
inc
inc
mov
add
out
sti
cmpsb
inc
jecxz
dec
adc
jge
xchg
shlb
dec
rolb
rorb
mov
add
scas
push
mov
and
arpl
cmpsb
out
mov
aas
das
dec
testb
cmpsb
outsl
push
jbe
loope
xchg
xor
pusha
out
fists
fidivrl
dec
and
repz
ret
sub
push
inc
scas
lret
daa
ficoml
insl
jnp
mov
ret
or
lods
icebp
xchg
or
cltd
cltd
rcrl
push
cmp
dec
jno
data16
std
add
ss
xchg
mov
sub
mov
jg
cmp
ret
pop
repz
xchg
and
xor
ds
incl
loop
lds
sbb
test
mov
movhps
mov
cmpsb
aad
adc
int
mov
jbe
cmc
jno
das
sbb
sub
cmp
xchg
xchg
mov
mov
sub
pushf
out
repz
mov
sbb
sbb
aaa
mov
mov
push
shrl
jno
leave
lods
inc
in
aas
sub
mov
adc
ficoms
mov
inc
repz
push
out
and
push
imul
sbbl
orl
jmp
mov
fiadds
bnd
inc
or
fisubrs
xchg
sahf
cmpb
dec
sbb
stos
jmp
nop
je
int
inc
js
movsl
mov
push
lea
cmp
mov
sbb
xchg
xor
xchg
loopne
and
adc
adc
cmp
adc
mov
out
inc
cld
arpl
jle
icebp
and
mov
nop
mov
mov
xchg
movsl
dec
lcall
rcrl
cmc
xor
outsb
das
decl
addl
push
mov
push
loope
or
aaa
leave
jle
push
jo
lea
mov
addr16
xlat
int
jae
sbb
or
sub
xor
xchg
jae
lea
mov
repnz
or
arpl
mov
pop
pop
inc
nop
xlat
mov
aaa
pusha
pop
aaa
dec
jg
clc
jo
push
xor
sub
fsubrs
jne
mov
adc
mov
adc
sbb
jb,pn
inc
clc
xor
iret
pusha
add
dec
stos
mov
sub
test
dec
enter
add
mov
jecxz
imull
stc
and
cmp
mov
sub
mov
movsl
or
fsubs
stos
xor
cli
mov
in
imul
pop
fisttps
rcrl
mov
and
arpl
and
push
das
fisttpll
cmp
cmpsb
ficoms
sahf
and
je
xor
es
clc
dec
xor
fbstp
ds
ss
int
push
test
fnsave
jae
mov
scas
and
in
and
sbb
jge
sahf
addr16
jns
cli
cwtl
cltd
ret
xor
repnz
rcrl
or
fwait
mov
aad
pop
insl
mov
std
loopne
iret
sbb
xchg
pop
dec
cmp
cltd
xor
pop
pop
push
ret
xchg
fs
adc
outsb
mov
pop
aam
shl
and
sbb
push
mov
call
outsb
jo
mov
dec
ja
nop
lret
push
stos
dec
push
loop
pop
fdivs
neg
push
dec
aaa
in
adc
lcall
xchg
xor
mov
fisttpl
lahf
mov
pop
pop
movsl
and
test
cmpsl
mov
scas
cmp
iret
outsl
xor
mov
bound
mov
dec
sbb
ret
xor
adc
mov
pushf
test
xchg
sub
add
and
lea
jl
pop
mov
xor
jnp
sub
mov
xchg
enter
cltd
fimull
cs
fcoms
in
push
and
fadd
pop
mov
mov
adc
jmp
lea
dec
dec
xchg
stos
ss
xchg
cwtl
adc
pop
movsl
or
scas
adc
sub
sbb
push
pop
movsl
addr16
jbe
mov
outsb
inc
fcmovb
aad
rol
call
fs
pop
dec
aam
pusha
in
add
int
jp
clc
std
scas
hlt
jne
icebp
popa
shlb
add
fwait
mov
pusha
sub
ljmp
inc
or
push
lahf
pop
and
xor
xchg
pop
jno
ss
and
ss
pop
add
int
cmp
cli
jns
push
jnp
nop
dec
fistl
cmp
rolb
push
sbb
icebp
test
stos
mov
cmpsl
lock
or
data16
mov
mov
jmp
cs
push
lahf
or
fs
ja
sub
xchg
sbb
stc
test
ret
out
scas
scas
ss
je
jl
xchg
xchg
fstps
or
imul
push
xchg
test
clc
and
mov
aad
mov
xchg
imulb
inc
leave
push
inc
xor
xchg
pop
push
xchg
mov
cmpsb
call
repz
mov
je
dec
mov
aam
and
dec
mov
adc
mov
in
enter
jp
cmpsl
and
or
lods
xchg
mov
mov
xchg
jge
and
in
dec
dec
cmp
pop
mov
pop
cmpsb
inc
int
inc
and
outsb
cmp
xchg
sbb
or
push
rcrl
imul
js
xor
stc
mov
int
in
sub
pop
add
adc
sub
sbbb
in
mov
jo
into
pushf
inc
js
fistl
aad
jle
add
insb
pop
pop
pop
fadds
push
sbb
sbb
in
in
sbb
cmp
mov
inc
scas
jp
lret
mov
out
xchg
jl
mov
jns
push
cmp
and
aas
lods
adc
xor
adc
push
popf
inc
xor
sbb
sub
adc
mov
pop
mov
jg
and
les
mov
int
lret
xchg
mov
sub
xchg
adc
roll
or
ljmp
adc
bound
or
mov
ja
stos
pop
movsb
fildl
arpl
jge
and
movsl
dec
rep
lds
pop
lock
int3
lret
mov
sub
insl
mov
sbb
jne
iret
inc
dec
xchg
in
lcall
cmp
xchg
and
jno
xchg
pop
jge
xlat
aam
and
xchg
insl
hlt
in
pop
loope
or
pop
mov
and
inc
idivb
add
dec
xor
out
cltd
daa
xor
insb
xchg
sbb
lock
scas
adc
mov
dec
aam
outsl
out
cs
jecxz
sub
js
or
cmp
les
mov
mov
inc
or
insl
mov
jae
add
push
xchg
ljmp
aad
mov
lods
push
xor
nop
add
das
cli
repnz
test
test
and
pop
cmp
addr16
push
sub
pop
loope
sbb
mov
aad
fstp
push
testb
cmpsb
cltd
das
pop
mov
jne
mov
jle
xchg
fdivl
lds
sar
jmp
cwtl
jmp
mov
jmp
aaa
fmuls
jmp
dec
loopne
mov
xor
xor
fiaddl
lock
stc
scas
cmp
jbe
iret
sbbl
pand
cmp
xchg
and
or
decl
sahf
push
sbb
popf
xor
add
or
mov
rcll
div
std
xor
in
je
sbb
push
jl
or
adc
leave
in
jp
lea
fcoms
stc
push
mov
jge
mov
cltd
test
and
cs
mov
sbb
sub
leave
cmovbe
lock
pop
ror
xchg
cmp
jp
fidivrl
dec
lock
ds
imul
shll
adc
in
pop
dec
inc
les
popa
jp
inc
jecxz
rorl
dec
ja
push
in
sbb
nop
or
hlt
inc
mov
push
add
inc
or
jb
aad
and
and
ja
inc
push
mov
add
mov
pop
jne
int
in
pushf
adc
sbb
in
dec
add
out
xchg
mov
cmp
jle
push
ret
or
jmp
push
cmc
push
ds
push
insb
mov
loop
movb
cmpsb
iret
in
mov
test
lcall
xchg
and
mulb
fwait
inc
inc
push
ds
arpl
xlat
test
jge
or
inc
dec
shlb
lret
push
popf
aad
mov
adc
push
and
test
ss
jecxz
insb
loopne
leave
push
aam
cmp
dec
xchg
test
jmp
cmpsl
mov
sub
jmp
push
lret
mov
testb
scas
mov
bndldx
xchg
gs
or
or
lea
and
mov
daa
jo
dec
jnp
push
aam
shl
push
push
or
aas
add
add
add
cmovge
mov
shr
fadd
cmp
pop
mov
cmc
pop
pop
ficoms
push
jge
outsl
hlt
test
jns
sahf
insb
fwait
dec
stos
pop
and
es
push
ss
jp
cmp
pop
xor
jg
mov
push
jno
outsl
stos
jo
dec
mov
enter
scas
in
nop
fiadds
and
adc
mov
mov
lods
popa
popf
pmaxub
or
or
mov
jge
loope
xchg
lods
dec
mov
das
hlt
or
ss
pop
aas
fmuls
push
jecxz
lcall
sbb
dec
ret
cmp
pop
addb
add
stos
and
add
clc
das
outsl
pop
dec
xor
pusha
aam
add
scas
stos
cmpb
movsb
outsb
pop
je
rolb
or
lods
cmpsb
mov
mov
jle
cltd
aaa
fmull
dec
push
sub
out
jecxz
frstor
pop
jge
or
ret
cltd
pop
jo
xchg
sub
jmp
and
adc
jle
sub
in
fildll
cmp
push
pusha
dec
push
mov
ljmp
les
addr16
pop
jg
pop
sbb
aam
lds
cmp
pop
adc
fadds
inc
xchg
out
lret
mov
loopne
add
add
mov
jl
push
inc
aam
movsl
and
mov
dec
cld
jns
sbb
in
cmp
sti
adc
xor
mov
jmp
inc
mov
mov
push
and
xorb
addr16
fildll
fisttps
mov
push
pop
fxtract
stos
stos
and
and
mov
aas
push
lcall
andb
inc
pop
sbb
mov
aaa
out
mov
and
jl
and
test
pop
ret
add
mov
pop
inc
sti
add
xchg
push
pop
sbb
xchg
cmp
std
fcmovnu
mov
aas
mov
out
xor
lock
mov
cmp
popf
add
ljmp
lods
sub
pop
push
cli
sarl
leavew
sbb
sub
movsb
clc
imul
stos
pop
dec
mov
dec
mov
and
jae
pop
dec
sub
mov
popa
js
sahf
sbb
push
aam
mov
and
inc
stc
imul
cmc
sub
fistpl
mov
or
xchg
ds
sarl
test
push
inc
enter
in
aam
jle
and
out
gs
or
rorl
int3
push
ja
push
stos
push
lods
pop
sbb
adc
cmp
jae
rcll
inc
mov
addl
mov
lds
aad
lock
testl
sub
or
test
jbe
fiaddl
mov
gs
cmp
adc
xor
push
pop
dec
mov
or
inc
xchg
xor
mov
ds
adc
ds
dec
push
test
dec
or
mov
cld
dec
int
popa
fwait
jecxz
scas
sbb
pop
push
rorb
xchg
jnp
push
clc
and
xlat
xchg
lret
dec
push
cmc
xchg
pop
arpl
loop
ja
scas
and
jne
sarl
jge
mov
jmp
push
sbb
and
gs
cwtl
mov
pop
in
je
ret
fmuls
fsubs
push
mov
mov
dec
or
ret
mov
mov
cmp
add
xchg
in
pushf
sub
adc
adc
push
xchg
cmp
cld
dec
push
das
fisubl
outsb
test
push
pop
hlt
loop
inc
mov
sbb
dec
sub
test
shrl
jbe
inc
xchg
lods
mov
cld
in
mov
test
out
xor
mov
push
push
insb
push
or
aam
jb
pop
gs
cmp
dec
adc
adcl
in
mov
dec
jp
jbe
mov
cld
shll
or
mov
dec
imul
aad
add
jne
xlat
shlb
jae
rorb
add
inc
dec
xchg
pop
mov
sbb
sub
mov
rorb
add
aam
insb
xor
mov
mov
in
popa
xlat
adc
fidivrs
sbbb
xchg
in
loopne
lret
sahf
xor
es
mov
dec
stc
inc
inc
mov
cmp
addr16
xchg
and
in
imul
jmp
mov
ljmp
cmc
into
test
icebp
pop
das
cmc
adc
fwait
iret
xor
and
cmp
mov
adc
fldt
xchg
pop
fwait
jle
aam
sar
leave
cmp
sbb
add
inc
loope
push
pop
sub
or
je
lock
cmp
adc
adc
push
pop
pop
dec
mov
or
pop
arpl
sbb
das
stos
cmp
repz
repz
pop
push
pushf
rcll
incl
les
dec
mov
dec
fmuls
xor
fsubrp
or
or
xchg
push
xchg
sub
fwait
pop
dec
sub
mov
fnstcw
push
mov
mov
sbb
xchg
push
add
imul
jecxz
das
inc
scas
popf
out
clc
adc
xor
test
sub
pusha
xchg
fimuls
adc
push
or
mov
in
popa
enter
sbb
fimuls
adc
xlat
loope
jae
inc
mov
ja
dec
jno
std
bnd
jl
cmc
pusha
comiss
mov
ds
pushf
aas
rolb
ja
fs
int
dec
popf
enter
and
cmpsb
iret
fcmovnbe
mov
mov
loopne
mov
add
je
das
loopne
mov
or
inc
pushf
jl
test
outsl
cmpb
add
cli
dec
aad
sub
std
xor
loopne
jle
mov
cmp
pushf
nop
pop
push
dec
das
add
mov
mov
test
dec
out
andl
insl
xor
xor
mov
inc
adcl
jbe
jo
xchg
stos
sub
pop
rolb
mov
int
pop
iret
scas
push
dec
bound
jbe
mov
imul
ljmp
fstpl
and
cmp
cmp
sub
das
add
and
lcall
je
enter
into
dec
cmp
sbb
jnp
out
cltd
cs
mov
insl
pop
shrl
jae
jnp
pop
jb
inc
add
mov
shr
lret
mov
in
lcall
pop
imulb
ret
stc
aaa
xor
sub
push
rorl
bound
jle
mov
sub
inc
fnstcw
pusha
fildl
mov
adc
push
xor
push
pop
subl
fs
dec
lahf
pushf
and
shrl
or
fcmovb
std
shll
fwait
xor
subl
cmp
cmc
jnp
stos
mov
xchg
stc
pop
xor
jmp
adc
loop
xor
mov
inc
cmpsb
aad
and
mov
movsl
dec
jmp
jae
js
push
or
jne
frstor
jp
push
push
mov
pop
and
mov
insl
dec
pop
stos
or
push
sti
xchg
loopne
or
jmp
pop
cmpsl
cmp
mov
inc
pop
push
dec
pop
fnstenv
jne
negb
daa
and
adc
and
shll
adc
insb
sbb
push
or
test
sbb
loop
enter
mov
lods
popa
jb
sbb
out
mov
aas
sbb
push
inc
adc
adc
jb
inc
pop
andb
filds
aaa
and
je
sub
test
fmull
xor
lahf
sbb
and
in
arpl
cltd
int3
xchg
lcall
stos
ret
jno
pop
xchg
and
jge
ss
arpl
push
dec
pop
push
xchg
jecxz
push
jne
dec
xor
out
xchg
mov
dec
push
and
push
stos
into
pop
ja
int3
fnstcw
cwtl
mov
add
hlt
inc
sub
test
cwtl
push
out
or
adc
add
sub
push
imul
sub
fnstenv
cld
push
cwtl
outsl
movq
jnp
mov
sub
cwtl
lcall
cmp
test
lds
movsb
pushf
lret
pop
or
lcall
sub
add
icebp
fcomps
aas
or
push
les
add
stc
or
and
jmp
adc
lods
jge
mov
jecxz
inc
lds
repz
dec
loope
inc
jle
aas
dec
rcll
test
stc
js
jns
add
imul
xor
loope
lods
jo
das
add
inc
in
sbb
in
sbb
mov
mov
sub
insb
jae
push
int
inc
mov
fistps
clc
stc
pop
popa
in
ss
jnp
jg
mov
sub
xchg
repz
aam
dec
sar
out
jo
mov
in
mov
mov
push
dec
add
aas
xlat
imul
por
aaa
mov
shrb
repz
jne
adc
push
mov
fsub
lods
mov
bound
inc
rorb
sub
and
mov
arpl
dec
xchg
icebp
mov
rsm
repnz
or
add
leave
xor
cmp
and
repz
or
mov
push
dec
lahf
xchg
mov
mov
push
push
adc
fcmove
test
xor
insb
inc
mov
xor
push
je
loop
loopne
push
addl
mov
jns
dec
lea
out
cli
jge
in
pop
popa
sub
xchg
sub
inc
jl
adc
shll
dec
test
das
xor
in
and
mov
adc
pop
aam
in
adc
aas
xchg
int
and
gs
lods
sub
inc
out
sub
fmuls
cmc
call
repz
pop
xchg
inc
jns
out
je
in
jo
jo
add
push
in
sbb
xchg
enter
fbstp
es
bound
sbb
cwtl
add
push
stc
add
ja
mov
je
mov
cli
jmp
xor
or
push
and
sbb
mov
rcrb
push
push
jge
cmp
fs
inc
cltd
jae
gs
ficoms
add
in
adc
dec
sbb
add
or
xor
movsb
popa
mov
outsb
xor
xchg
jbe
jae
lcall
xor
stc
test
inc
xor
cmp
xchg
mov
jp
scas
inc
sbbb
fwait
mov
sbbl
add
jo
pop
fwait
jo
push
and
xchg
cmc
inc
or
pop
jecxz
shll
jmp
mov
cmc
dec
loopne
aaa
movb
fdivs
mov
cmp
mov
inc
dec
xchg
iret
sub
int3
nop
mov
and
jno
scas
push
mov
jae
iret
insb
lret
adc
cmp
daa
push
call
es
cmc
dec
or
sub
fldl
int
push
lret
data16
mov
add
push
dec
sbb
jp
lods
fcmovnb
gs
push
int3
mov
lods
push
jl
push
and
test
hlt
sarb
push
xchg
imull
mov
cmp
xchg
imul
pop
sbb
stc
out
int
xchg
mov
punpckhwd
in
fldcw
xor
scas
xor
enter
cli
loope
outsb
cmp
loopne
inc
sahf
adc
inc
pop
and
pop
addl
int
mov
sbb
pushf
ror
movsl
sbb
das
adc
sub
insb
inc
inc
shlb
push
xchg
mov
adc
sbb
jecxz
insl
in
idivl
jne
jo
shrl
loopne
loopne
sub
sbb
sub
mov
pop
repz
mov
push
dec
lcall
cli
jns
sub
or
xchg
je
adc
jae
mov
and
adc
sbb
in
pop
arpl
mov
out
ret
roll
out
xchg
push
and
js
jbe
in
in
xchg
dec
stc
sub
sbb
stc
or
adcl
or
mov
push
pusha
cmp
dec
popf
xorb
dec
stos
jno
jae
stos
xor
cltd
mov
and
lcall
mov
icebp
lret
dec
sti
stos
fnsave
cs
or
push
mov
cmp
jne
pop
cmpsb
jnp
and
inc
lea
push
cli
in
pop
mov
faddl
arpl
lods
test
in
inc
pop
xor
mov
out
adc
pop
sbb
stos
cld
inc
mov
loop
pop
pop
sti
fdivs
jo
repnz
shrl
shrb
sub
call
stos
cmp
fdivs
mov
jp
mov
lahf
psubsw
clc
push
jo
xchg
lods
xchg
push
pop
icebp
mov
xlat
mov
push
xchg
mov
icebp
add
sti
int3
push
aad
cltd
pop
sbb
stos
push
jmp
iret
mov
test
out
pop
xchg
lahf
and
xchg
and
and
fstpl
scas
inc
push
mov
xchg
and
out
cmp
push
fidivs
in
sbb
and
xorl
add
out
mov
dec
add
ja
shlb
add
clc
pop
scas
fldenv
leave
dec
rcrb
pop
gs
mov
pop
fmull
pop
mov
xchg
sbb
cld
add
roll
frstpm(287
and
jne
test
adc
mov
jl
bound
sti
xchg
jp
push
mov
bound
fstps
ljmp
pop
add
in
xor
add
out
comiss
cmp
mov
jno
repz
test
xchg
adc
ds
sbb
sti
cmp
popa
cmp
sbb
cmp
shl
mov
sub
or
xchg
push
add
mov
outsb
or
lahf
aad
lret
mov
rcr
rorl
mov
fists
stc
and
xor
xor
in
lret
sbb
rolb
jo
push
inc
pop
sbb
xchg
xchg
jno
jp
mov
sarb
lea
or
in
fcompl
cld
shrl
leave
fprem1
cmpsb
adc
xor
jnp
pop
mov
jbe
adc
mov
push
jno
cld
clc
lret
xchg
mov
jnp
add
cs
lds
loop
movl
and
inc
rol
sbb
lds
mov
push
xor
mov
sub
addr16
mov
lods
sarb
ret
adc
dec
rol
and
enter
xchg
aam
les
inc
ficomps
loop
loop
lods
adc
sub
cld
sbb
nop
or
fsubl
mov
sub
mov
das
scas
fcomp
push
aaa
aaa
xchg
mov
ja
cmp
js
cmp
mov
mov
cs
cli
cmp
cmp
xor
sar
adc
and
adc
adc
sub
mov
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
daa
fdivrs
dec
lea
jmp
bound
fsub
fists
inc
mov
aam
sub
je
out
shl
push
insl
push
push
out
pop
into
push
fmull
jge
cmpsl
scas
push
mov
jne
aam
and
pop
adc
fstpl
lock
pusha
cmpsb
push
fists
dec
sahf
xchg
lods
sub
mov
dec
fsubrs
int
cld
clc
loope
adc
inc
pop
movsb
cmp
dec
in
int
mov
jb
dec
pop
mov
mov
xor
jae
les
icebp
pop
loop
sbb
lret
pop
jle
push
pop
ficompl
repz
shrl
fisttpll
test
or
sarl
stos
aaa
mov
dec
in
lret
push
insl
ds
inc
fs
pop
pop
xchg
ljmp
dec
jne
sub
divb
ss
outsl
lret
pushf
or
pop
dec
fisubl
xor
mov
stc
adc
xchg
mov
ja
xchg
jne
mov
shrb
lcall
loop
fbld
mov
xchg
mov
cld
jnp
fisubrl
test
nop
idiv
dec
xchg
jae
leave
lods
data16
xor
int
out
add
pop
faddl
cmc
inc
pop
sbbl
push
xchg
mov
bound
lods
cmc
nop
pusha
mov
push
xor
jb
dec
push
stc
fwait
or
inc
sub
xor
pop
inc
xchg
jle
add
cmp
xchg
jbe
cld
sub
mov
mov
fwait
xchg
adc
fsts
es
fiaddl
sti
inc
pusha
inc
aam
mov
aad
fidivs
sbb
test
xchg
mov
dec
fsin
mov
push
and
cmpsl
test
cmp
mov
test
cmpsl
test
jg
test
pop
lods
cmp
inc
push
into
ljmp
inc
cmc
inc
adc
vunpckhps
inc
cld
lock
jne
pop
shl
push
mov
mov
add
mov
mov
scas
and
push
leave
imul
push
call
insb
mov
jp
pop
cmc
lea
aam
aaa
mov
and
xor
inc
test
jno
mul
inc
inc
sub
adc
scas
mov
jle
lods
aad
cmc
out
dec
cltd
cmp
dec
incl
sbb
adc
clc
lret
xchg
pop
adc
jo
pop
rol
adc
shlb
sarl
xchg
jnp
lods
js
pop
enter
rcr
xor
and
mov
add
adc
pusha
out
cmp
sbb
xor
iret
dec
shll
mov
paddq
movb
mov
lock
pop
icebp
mov
xchg
mov
jp
sub
adc
enter
ret
mov
jnp
adc
das
test
and
ljmp
adc
cmp
insl
lcall
fidivrl
dec
sbb
lcall
pushf
loop
jmp
pop
repz
mov
push
mov
mov
das
pop
mov
repz
ret
and
loop
lahf
sub
push
jp
cmp
into
jb
popa
adc
int3
cmpsb
into
repnz
adc
retw
in
pushf
lret
or
pop
dec
addb
pop
out
xchg
xchg
in
pop
lea
stc
and
jmp
testb
add
cmpsl
xor
movsb
adc
jo
xchg
sarl
es
mov
xor
inc
pusha
insb
arpl
mov
mov
sub
inc
xor
in
inc
and
inc
pop
inc
es
ss
loope
pop
xchg
cmp
shlb
lds
insb
adc
cmpsl
mov
test
pushf
cmp
sarb
cmpsb
cmpsl
outsb
in
or
inc
mov
js
jp
stc
lods
xchg
jbe
call
or
xlat
ljmp
stos
dec
sbbl
movsb
push
fsts
mov
pop
test
negb
and
mov
jmp
popf
aad
icebp
out
mov
fs
sub
jo
out
dec
cmp
ss
ss
sub
xorps
testb
fcmovne
clc
test
cs
xor
inc
pusha
mov
lods
inc
fisubrl
add
sbb
xor
mov
mov
push
stc
xchg
cmpsl
pop
call
js
pop
movsb
xlat
and
lods
sbbb
ret
insb
lods
fisubl
dec
fs
outsb
inc
xor
sbb
imulb
imul
jmp
fisttps
push
in
mov
adc
stc
pop
shl
pushf
dec
ss
push
pop
push
jb
bound
ljmp
outsb
mov
dec
lods
add
jecxz
inc
enter
bound
adc
es
jmp
loopne
lds
inc
xchg
scas
xor
fwait
clc
vpackuswb
dec
jae
pusha
fldl
jl
enter
inc
pusha
sbb
push
je
call
xchg
push
out
pop
insl
rorb
pop
repz
popf
out
test
mov
cmpsb
sub
in
pop
loope
bswap
in
mov
mov
in
jmp
jb
or
push
cmp
xchg
xor
mov
jp
mov
adc
adc
or
fdivr
mov
test
pop
jle
xchg
flds
mov
jbe
cs
mov
jbe
fcomps
outsb
rorl
jge
scas
mov
inc
push
lret
pop
xor
jo
push
mov
mov
in
mov
test
pop
fldcw
lcall
jo
xchg
inc
cmp
push
outsb
lret
jp
cmp
daa
test
enter
out
mov
adc
lahf
jle
loop
icebp
lea
shl
cmpsb
pop
jo
or
popa
xor
mov
add
cmp
icebp
jb
mov
cmp
lret
push
and
rcll
stc
mov
sub
fsubl
faddp
hlt
or
sbb
or
sbb
sub
aas
jmp
fchs
bound
test
xchg
ljmp
fmull
fsts
push
sub
dec
xor
sbbl
pop
shll
mov
jns
push
call
js
sarb
mov
push
adc
xchg
cmc
mov
push
pushf
jmp
or
mov
inc
push
xchg
repnz
jmp
ja
stos
addr16
int3
pop
ss
in
js
cmp
xchg
movsl
hlt
xlat
fildl
inc
cli
xchg
add
hlt
std
xchg
and
scas
or
outsb
fadds
add
lods
call
lock
mov
xchg
or
ja
pop
std
aaa
inc
sub
fadd
xor
push
scas
enter
or
cmpb
mov
ja
jbe
xor
push
cmpb
jge
enter
jg
sub
pop
jo
gs
sti
or
cwtl
xor
xchg
stos
and
mov
push
push
fldt
sub
fwait
mov
add
loop
addb
sub
xchg
and
fiadds
mov
ja
and
adc
sbb
gs
dec
and
insl
fwait
xlat
test
xchg
mov
punpckhwd
int3
adc
test
in
int
lods
push
fcompl
xor
push
stos
pmaxub
cmp
mov
repz
pop
jnp
in
mov
xchg
repz
lds
sbb
js
leave
clc
xlat
pop
pop
mov
pop
sub
movsl
adc
mov
dec
pop
divl
aad
push
rcrl
stc
rcll
scas
mov
imul
and
xchg
sti
aas
inc
sahf
in
in
into
and
add
cmc
sub
jns
fsubrl
and
dec
scas
xor
loop
repnz
inc
push
jne
lods
ja
jl
insb
sub
jae
adc
lds
push
fcmovnb
xor
insb
jns
xchg
jecxz
adc
add
and
fidivs
jno
inc
xchg
jg
mov
ficomps
push
xchg
mov
test
das
jle
mov
xchg
dec
outsl
fisttpl
mov
mov
lret
sub
popf
mov
gs
xor
pop
aam
jecxz
push
sbb
xchg
adc
cltd
mov
add
dec
jno
in
add
pop
xchg
scas
adc
push
jne
inc
enter
lods
cwtl
pop
cmp
mov
jl
push
out
call
lcall
cmp
xor
jae,pn
cmp
or
adc
xchg
stc
xlat
in
push
scas
movsb
cwtl
xlat
push
pusha
into
cmp
mov
arpl
sub
out
outsb
in
sbb
mov
sub
movsb
xor
jae,pn
arpl
or
les
les
test
cld
cwtl
add
fldcw
ja
push
pop
enter
stos
jl
sbb
mov
mov
aad
mulb
iret
pushf
and
scas
add
aaa
lahf
push
mov
setne
mov
out
mov
jb
das
int
cltd
mov
inc
in
inc
hlt
cmp
inc
icebp
sbb
pop
lcall
imul
xchg
mov
ja
sub
lods
xor
dec
dec
enter
or
inc
jg
rolb
and
and
jecxz
cmc
loope
iret
ds
or
sti
bound
dec
add
out
hlt
lahf
sbb
iret
cmp
icebp
adc
and
jecxz
outsl
xor
mov
loopne
mov
ds
dec
test
inc
ret
mov
cmp
push
stc
mov
sbb
cmp
sub
push
ljmp
ret
xor
call
xchg
mov
mov
push
jg
in
cmp
addl
jne
ret
mov
cs
pusha
mov
movsl
test
icebp
aad
xlat
test
mov
pop
mov
adc
into
and
xchg
and
fcmovnb
or
int3
xchg
lea
and
idivl
mov
insb
jecxz
lret
lcall
lods
sbb
lods
cmc
movsl
xchg
xor
pop
inc
or
hlt
pop
andb
mov
inc
popf
es
icebp
fbld
loop
rorl
test
sbb
stc
insb
adc
rclb
mov
sub
cs
or
aam
das
cmpsl
scas
sarb
pop
pop
cmp
and
in
sub
das
lods
or
loop
shll
call
mov
lea
lcall
mov
cmp
mov
push
ljmp
dec
xrelease
inc
aam
aas
out
test
hlt
or
out
test
add
jno
push
jnp
addb
rcl
fsqrt
jmp
fld
shlb
mov
cmc
lcall
lods
dec
pop
pop
jl
pop
sbb
jns
imul
and
bndstx
push
inc
stos
cwtl
adc
sbb
out
pop
arpl
and
xchg
adc
cmp
inc
jmp
cmp
repz
insb
add
xchg
pop
mov
arpl
jecxz
push
xor
lahf
aas
icebp
push
push
in
add
rolb
dec
jbe
dec
aas
add
mov
xchg
add
sti
mov
xchg
iret
sub
cmp
mov
xor
mov
xor
test
adc
out
or
cld
xor
and
stos
jae
test
aam
adc
mov
daa
in
xor
inc
dec
and
insb
cwtl
pop
add
js
lret
sub
ja
aaa
inc
inc
cmp
test
add
out
sbb
fdivs
cmp
stc
pop
or
lds
lods
jb
sbb
ljmp
rcl
aam
lock
xchg
sub
aad
mov
xchg
fildl
push
and
push
out
inc
push
inc
mov
movsb
outsl
loop
lcall
sub
dec
cmpsb
bound
gs
mov
into
lcall
pusha
inc
dec
xchg
lahf
clc
icebp
sbb
or
sbb
scas
dec
add
rcr
add
jl
fcoms
adc
inc
pop
push
adc
dec
inc
mov
out
into
aad
xor
and
cmpsl
push
repnz
xchg
dec
push
pop
iret
xorl
shll
movsb
jecxz
mov
mov
testb
mov
cmc
mov
mov
cmpl
movups
push
nop
fmulp
hlt
rolb
mov
call
incl
pop
out
mov
mov
pop
cwtl
in
scas
vunpckhps
pop
fisttpl
inc
pop
sub
pop
mov
mov
lret
out
fs
lods
pop
fcmovnbe
push
jecxz
pushw
mov
in
mov
daa
xor
jbe
mov
mov
je
scas
call
sub
jo
jle
pushf
mov
fstps
daa
dec
xorb
xchg
xor
dec
adc
dec
ficoms
lock
cmp
in
or
mov
dec
in
loopne
xchg
in
xor
cmp
pushf
dec
mov
mov
addr16
orps
fdivs
mov
adc
jne
xchg
fwait
lret
xchg
jb
pop
aad
mov
cli
gs
in
dec
pushf
add
shr
mov
dec
mov
adc
mov
push
cld
and
insb
jp
mov
mov
cld
cwtl
popf
pop
mov
inc
push
incb
cmp
pop
dec
mov
jno
mov
add
or
cmp
test
in
inc
stos
cmpsb
xor
and
add
inc
dec
cwtl
sub
lcall
adc
or
cmp
mov
outsl
pop
mov
mov
push
sub
in
imul
dec
dec
test
mov
imul
and
nop
mov
inc
and
popa
mov
mov
ja
jnp
fildll
or
jae
cmp
fcomp
aas
mov
jge
jne
jle
lods
jno
jo
mov
int3
dec
sbb
jnp
xor
adc
or
and
sbb
je
fdivrp
pop
out
inc
jb
fists
stos
repnz
jge
mov
out
push
aas
addr16
out
fidivrl
push
jb,pn
mov
adc
les
js
sbb
jp
mov
hlt
das
arpl
adc
and
fsts
nop
fildll
fs
cmp
inc
mov
adc
stos
xor
aas
dec
mov
popa
pop
pusha
sbb
jecxz
in
fcompl
jne
sub
mov
cmc
sbb
daa
sbbl
insl
incb
pop
mov
iret
test
add
movb
scas
in
insb
push
jbe
pop
test
jae
cmp
int3
cmp
mov
cmp
add
fcomps
mov
je
jmp
jne
pop
shll
push
sbb
add
push
add
cmp
sbb
inc
out
or
cmpsl
push
xchg
jb
insb
fistpl
leave
jbe
jno
lds
pop
and
aad
nop
dec
or
push
jge
xor
outsb
data16
test
mov
ss
out
jne
mov
lahf
fnstenv
cmp
flds
inc
aaa
push
pop
push
mov
inc
mov
pushf
fs
push
add
bound
je
push
push
xchg
stc
jae
xchg
dec
rorb
adc
loopne
fcomp
gs
ljmp
call
scas
jl
mov
rorl
sbb
arpl
pop
jb
rorl
dec
xorl
jle
or
mov
jge
out
aam
fldt
jmp
lret
aad
adc
jl
push
pop
lahf
into
push
lock
loope
mov
cwtl
fstpl
and
insl
imul
movsb
sbb
icebp
lock
push
outsb
adcl
addr16
mov
stos
mov
mov
or
bound
sub
rorb
inc
idiv
pop
mov
out
stc
loop
in
das
mulb
sbbb
stos
icebp
mov
adc
ror
dec
rcrb
gs
fmul
sbb
es
push
scas
loope
je
xchg
mov
cmc
popf
les
or
mov
mov
fsubrl
into
aaa
xor
mov
jns
pop
jle
pop
mov
popf
cmpsb
in
sbb
xadd
enter
xlat
jnp
pop
in
outsl
aam
jne
int
xor
inc
mov
push
test
negl
or
add
daa
sub
lock
cmc
cmpsb
fists
push
push
clc
push
xchg
sbb
dec
outsl
dec
test
popa
dec
dec
lods
mov
sub
scas
shl
inc
push
cmp
or
lea
dec
add
jnp
sbb
jns
stos
xor
pusha
jnp
pop
cld
add
call
mov
sub
mov
push
mov
inc
inc
sbb
pop
cld
std
rcl
pop
sub
mov
mov
subb
outsl
push
sub
dec
fsubr
ret
gs
fldcw
xor
add
inc
dec
jg
pop
clc
aaa
outsb
fsub
clc
pop
sbb
cwtl
jp
add
lret
jg
icebp
dec
test
pop
clc
mov
mov
dec
adc
mov
stos
ds
clc
push
jns
mov
mov
cmp
daa
fs
bound
repnz
push
in
test
mov
fdiv
sub
outsb
loopne
or
vpunpckldq
imul
sti
hlt
pop
ffreep
jb
rolb
mov
mov
lods
cmp
outsb
adc
andb
hlt
cwtl
inc
stos
jge
pop
inc
cmpsb
mov
in
shll
rolb
adc
cmc
ret
dec
jo
or
dec
add
pop
push
cltd
fwait
test
mov
xor
or
mov
sub
or
push
pop
cld
imul
call
adc
pop
je
imul
sbb
mov
cmpsl
mov
push
push
mov
sar
ficoml
rorl
clc
xor
jns
sbb
stos
sub
mov
jmp
push
xlat
push
or
ret
inc
jecxz
xchg
push
in
in
andl
leave
nopl
pop
lods
shl
jle
pop
ret
and
or
sbb
mov
jge
fwait
ss
ljmp
or
movsl
pushf
pop
stc
mov
xor
and
aas
cltd
popa
push
mov
gs
and
push
sahf
mov
mov
cmp
addl
into
hlt
pop
and
repnz
cli
dec
insb
push
leave
addr16
adc
imul
clc
mov
cmp
fiaddl
shll
daa
mov
adc
pop
push
cmp
icebp
inc
sub
imul
cmpsb
push
jmp
mov
cmp
cmp
or
sarl
mov
fistpl
repz
dec
and
in
aad
inc
fsubp
mov
lock
or
pop
xchg
mov
adc
mov
push
enter
mov
flds
mov
dec
cs
xor
cmp
mov
test
imul
or
push
shlb
popf
and
aam
out
int
and
test
pop
insl
int
adc
mov
inc
lods
insb
hlt
dec
jmp
sub
fbld
leave
lret
xor
stc
adc
cmp
mov
sbb
fadds
mov
dec
or
cmp
pop
mov
aaa
add
inc
out
jmp
xchg
sbb
sbb
dec
outsb
aad
icebp
je
mov
call
jbe
mov
into
xor
push
loopne
out
add
fidivl
push
dec
outsl
lcall
test
sbb
es
inc
cmpsb
or
lcall
push
out
add
lock
popa
or
inc
inc
ret
pop
cmp
dec
mov
adcb
adc
test
stos
mov
in
loope
inc
push
shll
push
loope
lods
outsl
push
mov
sub
or
sbb
and
imull
cld
je
aad
stos
mov
fld1
xor
mov
pop
mov
mov
es
dec
rcrl
adc
or
sahf
mov
test
inc
divb
icebp
scas
fldcw
or
movsl
lcall
jle
or
adc
jnp
sbb
and
or
jmp
jg
mov
or
inc
xchg
xlat
test
out
mov
popf
mov
adc
js
adc
jnp
xlat
stos
out
jne
sub
mov
jmp
inc
mov
mov
add
mov
xchg
repnz
push
sbb
sahf
jnp
sti
scas
shl
xchg
mov
xchg
daa
stc
jmp
cld
jnp
imul
fsubs
fadds
sahf
and
or
push
test
mov
bound
shrl
xchg
clc
pushf
test
aas
jns
popa
xor
pop
ja
sbb
xchg
push
and
scas
pop
cmpsb
jg
inc
sub
les
addr16
addb
in
ret
je
push
aam
xor
jmp
adc
push
add
jmp
adc
repnz
cmp
sbb
add
adc
das
scas
push
rcll
xchg
xchg
scas
aam
xchg
or
int
xchg
insl
xchg
xlat
nop
js
sub
out
shll
lods
subb
cmp
clc
decl
xchg
clc
ret
mov
sub
outsl
pop
inc
loop
push
inc
sbb
and
test
lds
xchg
pop
mov
push
je
ret
lea
mov
jb
mov
mov
insl
dec
aas
imul
push
imul
mov
cmp
sbb
shl
loopne
adc
mov
add
je
push
mov
mov
cvtps2pi
jge
mov
add
pop
push
sub
imul
addr16
lods
cwtl
lret
inc
cmp
cld
push
arpl
stc
add
andb
or
outsl
out
jbe
jmp
push
stos
sbb
lods
jg
sti
and
outsl
sbb
rcll
sub
int3
js
inc
add
rcl
das
push
cmp
inc
out
push
mov
fisubs
inc
fsubrl
cmp
mov
cmp
sub
push
mov
pop
rclb
inc
test
jno
and
push
movl
stc
mov
iret
and
daa
scas
cmp
xor
and
outsl
fs
mulb
shr
sbb
nop
push
jbe
sbb
iret
mov
xor
xchg
push
stos
mov
add
mov
loopne
cmp
dec
je
xchg
adc
cmp
xchg
mov
mov
lret
ja
iret
adc
aam
push
mov
sahf
jae
cli
dec
and
in
je
dec
cmc
lcall
xchg
mov
mov
rcl
idiv
pop
sub
jmp
add
push
fsts
sub
out
cmp
lods
pop
add
cmpsb
mov
xchg
fstp
push
clc
and
xchg
pop
mov
or
loop
xor
popf
xlat
push
cmc
sti
popf
pop
lock
xlat
lret
add
in
mov
pop
test
lcall
enter
ds
cmpsb
sbb
lds
add
ja
mov
cs
das
mov
or
sahf
std
xchg
lds
es
popa
mov
sbb
push
or
xchg
mov
cmpsl
mov
jno,pt
push
mov
add
sbb
mov
jmp
les
out
mov
mov
lahf
pop
pop
in
mov
stos
test
mov
aas
out
inc
push
or
scas
mov
out
or
jl
clc
ja
testb
out
mov
daa
aas
popa
int3
das
ret
and
xchg
fdivs
hlt
sbb
aam
inc
movsb
cmp
mov
cmc
sub
cmpsl
mov
outsb
cmp
mov
loopne
fisubrs
mov
pminsw
lea
clc
test
arpl
add
loope
ds
aaa
das
jl
dec
xchg
jle
mov
dec
dec
fs
movsb
mov
push
dec
fmulp
cmp
je
fs
mov
iret
sbb
gs
loop
cmc
mov
int3
sar
ficomps
sarl
movsb
xchg
jno
dec
in
jae
jp
and
jg
xchg
aaa
xor
cmp
fsubs
loop
jnp
rcrb
inc
loope
mov
sub
gs
cmc
int3
adc
fcom
inc
jnp
mov
out
mov
mov
jecxz
push
mov
dec
sbb
test
dec
adc
push
mov
bound
fbld
sub
out
call
aam
outsb
loope
enter
sbb
cltd
mov
mov
cli
xor
pop
pop
aaa
test
jg
adc
aas
testb
andl
jle
mov
addl
mov
or
mov
fcmovb
negl
xchg
mov
xchg
jb
jle
dec
add
je
adc
or
mov
scas
xchg
xchg
clc
sub
and
jb
sbb
out
movsb
dec
cltd
dec
mov
fs
inc
adc
mov
cmc
cmp
push
xchg
stos
mov
insb
outsb
cwtl
cmp
pushf
cmp
lret
into
insl
icebp
inc
gs
mov
pop
mov
mov
loope
cwtl
lea
xchg
out
movsl
lock
test
inc
addr16
daa
add
pop
pusha
inc
push
mov
mov
int3
mov
mov
lock
ja
nop
xchg
and
pushf
stc
test
fsubrs
or
mov
push
dec
add
and
fwait
xchg
or
addr16
les
or
int
ret
xchg
mov
shll
mov
fstps
repnz
sub
or
xchg
mov
sub
sahf
call
mov
lods
sub
adc
repz
repz
mov
leave
add
push
test
fcmove
add
adc
inc
sbb
cld
lret
push
mov
aaa
cmp
add
mov
push
fdivrl
inc
adc
jb
int
notb
std
adc
add
lock
ljmp
cmp
movsb
fxch
dec
push
pop
lods
push
or
and
mov
sub
dec
fbld
lods
lods
inc
adc
cli
sub
push
cmpl
mov
fdivrp
push
jo
pop
scas
in
mov
sbbl
shll
scas
jp
ja
pop
notl
jb
mov
sub
out
scas
add
push
xchg
sub
fimuls
jb
jno
imul
in
and
dec
and
add
pop
test
call
xchg
inc
pusha
bound
mov
xlat
jp
and
pop
push
jge
dec
pop
and
mov
sub
shlb
incb
inc
pop
jge
dec
add
jns
dec
jge
sbb
es
in
xchg
aas
inc
push
xor
andb
cmp
push
add
jmp
xor
mov
es
pop
stos
lcall
sbb
and
add
add
or
mov
or
aam
cmp
daa
mov
xor
adc
and
sbb
pop
int
xor
add
je
mov
cs
mov
ja
ds
xchg
fbld
jmp
lds
test
cltd
lea
xchg
mov
or
shl
or
push
imul
daa
out
pop
scas
js
js
in
cmpl
loopne
and
or
scas
fadds
scas
mov
push
add
xlat
aas
mov
loop
je
dec
rorl
or
in
sbb
iret
pop
aas
xchg
inc
cmp
ficoml
cli
rcrb
jb
cmp
sbb
rcrb
adc
or
adc
cmp
xlat
mov
mov
push
mov
jnp
pop
push
imul
stc
loope
add
cs
jl
dec
xor
loope
push
cmp
rcl
pop
sub
or
add
sbb
pop
adc
fstps
repz
lea
scas
pop
mov
or
dec
xchg
outsb
les
xchg
out
adc
aas
adc
inc
nop
dec
popf
test
rcrl
in
xor
inc
cwtl
rolb
jb
mov
mov
imul
or
lret
mov
ret
imul
mov
cld
mov
cmp
sub
and
xchg
ds
lock
adc
xor
in
mov
mov
fsts
inc
adc
fnstcw
andl
fsts
jge
xor
ss
mov
pop
mov
leave
pop
fs
mov
xor
sub
cmp
mov
ret
jo
mov
jl
fnstenv
shlb
fdivr
hlt
xchg
pop
scas
mov
loopne
mov
cmp
xchg
lahf
push
out
orb
mov
inc
sbb
mov
repnz
cmp
push
push
inc
jno
lods
orb
cmp
mov
jmp
in
fwait
mov
add
pop
or
adc
sbb
mov
and
jg
rcll
enter
add
pop
mov
dec
push
mov
sti
push
cmpl
int
xor
movsl
mov
mov
lea
movsb
jecxz
add
pop
movsl
jecxz
xchg
addr16
lods
test
insb
mov
push
ljmp
in
cmpsl
ds
divl
add
pop
aaa
iret
push
mov
divl
pop
mov
ret
cmp
test
mov
mov
cs
and
sub
data16
push
jns
cmp
mov
rorl
sar
aas
xchg
aad
sub
jae
push
jo
lods
adc
data16
push
mov
outsl
xchg
outsb
imul
fnsave
fldt
ret
in
adc
dec
ret
das
mov
xor
roll
inc
cli
add
sti
mov
adcb
pop
push
inc
jecxz
add
push
cmpsl
mov
fisubrl
mov
fisubrs
aad
cltd
imul
xor
or
enter
pusha
cmpsl
fwait
sbb
lret
or
mov
mov
pop
push
mov
xchg
and
pusha
int
mov
out
cli
sbb
mov
std
inc
mov
test
push
cmp
pop
jo
gs
scas
xor
pop
or
insb
fs
stos
leave
repnz
pop
les
nop
dec
or
dec
je
push
loope
icebp
mov
jae
mov
pusha
push
popf
rcrl
xor
mov
cs
pusha
icebp
mov
xor
lcall
push
pop
outsl
pushf
testb
test
lods
or
jbe
mov
in
mov
sbb
pop
pop
aad
inc
fistpl
add
adc
and
or
or
push
jns
fcompl
bound
cli
sbb
mov
inc
sti
sub
pop
mov
xchg
mov
enter
jl
rol
and
push
pop
or
into
or
dec
xchg
mov
pusha
in
xchg
cmp
lods
cmpsl
mov
popl
jae
dec
mov
movsb
sub
popf
push
mov
mov
xor
sbb
mov
and
sbb
test
ljmp
pop
in
inc
mov
lret
mov
ret
xchg
andb
test
enter
xor
testl
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
dec
mov
jmp
bound
iret
cmp
shll
ret
xchg
dec
icebp
inc
xor
clc
nop
cmp
shl
sub
or
imul
lret
gs
and
out
or
ljmp
sbb
add
bound
sbb
mov
rcrl
xor
push
leave
pushf
or
popa
insb
cmp
int
sarb
jnp
fldcw
and
or
cmpsl
aaa
mov
aam
insb
jnp
aas
test
pop
roll
xor
push
adc
test
add
cmp
xchg
psllq
mov
inc
or
ret
daa
fmull
test
dec
pop
mov
repnz
dec
icebp
push
dec
mov
pop
xchg
mov
cltd
outsb
daa
pop
imul
jp
and
dec
sbb
push
or
cmpsb
fwait
dec
jge
mov
mov
dec
jge
jb
mov
mov
pop
cwtl
ds
pop
and
ljmp
insl
push
pop
ret
dec
pop
mov
stos
mov
cwtl
cmovns
or
jno
movsl
push
sahf
mov
sbb
adc
fucomip
mov
xor
mov
ljmp
in
cmp
sahf
jo
ss
in
xchg
dec
add
mov
jecxz
jae
cld
fstpl
cltd
andps
and
and
push
cmpsl
mov
mov
xchg
jae
lods
loope
sar
inc
mov
xlat
jno
jp
push
fdivrl
call
out
loopne
jge
out
xchg
jg
les
dec
cmp
xchg
test
mov
ljmp
pop
pop
pop
pop
repnz
cmp
adc
xchg
das
cs
push
shll
mov
aas
pop
int
add
inc
jle
pop
cwtl
xor
sub
adc
fs
push
test
adc
mov
mov
cmp
fnstsw
inc
bound
inc
sbb
or
test
data16
pop
cwtl
inc
pop
and
out
add
loopne
clc
push
jae
ljmp
ret
sbb
push
lock
mov
leave
scas
sahf
dec
mov
sbb
sub
sub
ljmp
pop
repnz
lret
and
jbe
outsb
mov
and
test
repz
shll
sahf
or
shr
icebp
dec
jnp
es
dec
pop
ja
stc
pslld
fimuls
or
push
sbb
mov
popa
fisubrl
test
ds
fisubrl
mov
xlat
sbb
into
mov
pop
loope
sbb
mov
and
jl
cmpsb
cmp
in
mov
pop
lds
mov
cli
divl
jbe
adc
mov
and
ret
adc
xchg
push
and
mov
aaa
pop
imul
ja
jmp
xchg
imul
push
sbbl
dec
rcl
sbb
dec
test
mov
sbb
dec
lahf
adc
mov
aas
xorl
nop
out
mov
xor
push
mov
and
in
stos
sbb
leave
cwtl
cmp
and
test
in
push
push
test
cmp
in
pop
shrb
jnp
outsl
aad
shlb
pop
jecxz
std
xorl
clc
jle
repnz
pop
js
jmp
pop
inc
pop
mov
fidivs
inc
fistpl
lcall
data16
clc
mov
dec
mov
cltd
pop
cmp
jle
push
cs
push
sarb
pop
push
ljmp
lods
jp
stos
sbb
cmpsb
xchg
lods
cmpsl
mov
or
cmp
mov
mov
mov
jbe
mov
mov
push
bound
lea
loope
imul
fisubrl
std
pop
popf
pop
jnp
push
lea
jbe
andb
into
imul
jne
out
mov
add
sbb
mov
jp
inc
or
es
fcomps
or
repz
mov
xchg
mov
dec
sub
mov
fdivr
sahf
push
inc
push
dec
cmpsl
cmp
inc
test
fld
sarb
in
roll
mov
lea
sbb
std
add
sbb
xor
imul
dec
es
bound
fidivs
fimull
cmpsb
pop
push
dec
out
add
xor
cmpsb
push
and
mov
mov
cmp
ja
shll
sub
bound
inc
es
xchg
adc
dec
mov
lea
mov
inc
push
stos
fs
outsl
push
jne
jb
jge
insb
iret
sub
imul
sub
xchg
cltd
jnp
jae
popa
je
push
in
js
pop
dec
and
sub
or
xchg
and
out
fcomp
mov
jns
xchg
inc
nop
ja
add
mov
sbb
inc
jl
cwtl
jne
mov
push
in
jno
decb
sub
mov
jle
cld
xor
jnp
les
pop
rcpps
stc
cmp
dec
xor
in
jnp
or
hlt
mov
dec
mov
pop
lret
nopl
mov
popf
xor
orl
adcb
xor
jnp
or
push
mov
cmp
outsl
mov
sarb
mov
cmp
cmpl
push
push
inc
scas
xor
popf
ja
add
dec
inc
sub
les
aad
sti
sbb
sbb
push
lret
xor
mov
aas
lods
push
dec
add
or
push
lea
sub
int
push
cmp
pop
and
mov
mov
mov
in
mov
fimull
repnz
fwait
push
shl
das
dec
xlat
pop
ss
insl
and
inc
mov
lods
ss
addr16
and
sbb
push
mov
pop
test
insl
gs
call
cld
dec
pop
pop
rcl
ret
add
dec
jecxz
lock
outsl
ficomps
test
xchg
insb
lcall
or
lahf
iret
pop
mov
in
insb
add
ds
test
mov
push
pushf
push
jb
dec
outsl
mov
push
enter
fists
mov
add
subl
inc
in
fwait
cmc
jle
daa
out
fistpl
xchg
icebp
inc
and
dec
das
dec
pop
and
adc
stos
test
jno
test
movsb
das
fstpt
jbe
dec
inc
and
push
pusha
gs
push
lcall
sbb
bound
or
ret
xor
sbb
and
std
adc
mov
fidivrs
sbb
sbb
jo
out
pop
xchg
les
adc
mov
xor
jnp
je
mov
push
scas
test
aam
imul
push
fadds
and
push
add
adc
add
push
jecxz
xor
and
inc
mov
sahf
movb
adc
daa
sub
pop
pusha
nop
xchg
ljmp
cmp
mov
cmpsl
and
mov
sub
scas
pop
xchg
repnz
cmp
mov
mov
rolb
sbb
movsl
fnsave
xchg
jne
fcmovbe
mov
divb
pusha
fimull
inc
lock
ljmp
leave
sbb
lahf
pop
cwtl
movsb
adc
lret
mov
jbe
cmp
out
mov
in
mov
outsl
sti
xor
insb
pushf
repz
mov
ja
popf
inc
test
mov
xlat
xor
pop
aad
pop
or
shl
cmp
pop
jle
gs
dec
dec
sbb
xchg
inc
mov
outsb
ret
sahf
and
push
mov
jmp
cmp
cmpsb
movsb
mov
dec
loop
mov
inc
jg
inc
mov
orb
fwait
insb
inc
inc
push
sub
mov
cmp
fisubrl
dec
lea
jae
mov
dec
and
mov
es
nop
lret
in
dec
jp
xor
dec
test
test
jb
lret
cli
sub
test
loope
mov
xor
cmp
sbb
cmp
sahf
mov
mov
jge
lds
cmc
mov
stos
lea
lods
pop
push
popf
push
imul
out
fnstenv
push
cs
repnz
popf
push
decb
movsl
jmp
stc
or
movl
std
or
addr16
xchg
xor
js
shr
das
pop
or
sar
dec
pop
jg
scas
aas
je
rclb
fsubrs
sub
cmp
iret
insb
or
adc
fwait
sti
cltd
xorb
xlat
dec
mov
fs
adc
add
scas
sbb
fptan
mov
jmp
int
insb
imul
sub
in
sub
inc
add
insb
xchg
adc
adc
lcall
orb
sarb
outsb
jne
dec
sbb
add
jb
sbb
mov
jl
mov
and
sub
testl
push
sbb
adc
pushf
fimuls
push
movsb
out
mov
movsb
lods
pmaxsw
jno
clc
insl
scas
fldcw
inc
xor
popf
inc
lea
xchg
testl
outsl
lahf
mov
sbb
adc
mov
mov
cmp
xchg
pop
sub
ja
jns
xor
jecxz
lea
or
popa
ljmp
repnz
adc
jge
cmpsb
and
jbe
cmpsl
mov
xchg
and
push
cmp
sarl
sub
arpl
dec
mov
adc
out
sub
or
mov
call
call
mov
or
cltd
jl
sbb
into
and
xchg
cld
sub
add
scas
dec
cmpsb
rclb
scas
imul
fmull
cmp
decb
push
xchg
divl
pusha
test
jecxz
scas
data16
cli
mov
xchg
push
fucomi
sbb
mov
aam
lea
jmp
inc
adc
mov
out
js
mov
cmp
dec
adc
fidivrl
jno
jne
rcl
mov
test
mov
add
mov
or
cmp
pop
adc
icebp
sbb
xchg
cmpsl
and
loop
es
dec
xchg
lea
xchg
jbe
sbb
imul
rep
lods
stos
pop
sahf
pop
outsl
or
repnz
hlt
inc
sub
daa
or
push
stos
shll
sub
lahf
fnstenv
cmpsb
sbb
and
inc
mov
andb
movsl
lods
sbb
in
and
mov
mov
mov
je
or
mov
add
cli
or
and
sti
scas
cmpsl
and
iret
or
jo
xchg
or
fs
push
adc
sbb
xlat
adc
jno
xor
insb
sbb
fsubrp
outsl
movsl
or
jne
push
loope
aad
mov
shlb
sub
test
sti
lea
cwtl
pop
test
out
jae
enter
mov
sub
aaa
add
xchg
cs
mov
push
inc
fcompl
icebp
mov
or
movsb
jge
and
mov
adc
push
lods
push
cmp
mov
xchg
push
mov
dec
jg
fcmovb
add
push
dec
repnz
iret
out
repz
add
and
repz
stc
lock
sub
fs
push
xor
cmc
loop
scas
lds
mov
out
scas
or
xor
xchg
out
dec
adcb
cmpsb
das
xor
adc
bnd
mov
popf
ret
fwait
shrb
xchg
lea
fdivs
pop
out
aas
jne
pop
jl
push
xlat
mov
dec
movsb
movsl
ret
sbb
stc
xchg
jae
mov
jg
inc
mov
sub
lds
in
jmp
mov
test
mov
pop
das
movsb
cld
and
add
ret
test
dec
mov
mov
js
es
jb
xchg
ret
ss
out
inc
mov
jmp
lahf
cld
pushf
ret
xor
clc
cld
repz
es
mov
sub
xor
jecxz
inc
mov
pop
push
lods
dec
push
fstp
xchg
sub
pop
movsb
mov
fnstcw
adc
dec
mov
xchg
mov
dec
imul
loope
lret
mov
cmp
inc
jl
sti
pop
les
and
sti
fdivrs
hlt
out
insl
lret
fcmove
inc
sub
iret
enter
mov
sbb
mov
das
sbb
pop
xchg
inc
loope
inc
fldcw
or
inc
push
cli
push
hlt
sbbb
nop
push
das
js
adc
stos
imul
fisubrs
mov
fabs
add
xchg
and
in
lret
lock
and
movsb
out
sub
xchg
pop
lock
lea
mov
loop
in
dec
fmul
out
imul
add
or
sbb
inc
sahf
dec
notl
clc
dec
sbb
addl
popf
mov
mov
jle
dec
arpl
inc
and
sbb
xor
xor
lahf
jae
test
xor
xor
mov
in
fdivrs
repz
mov
sbb
cmc
mov
out
and
jp
fdivrl
jno
lea
cmp
lret
jl
bound
imul
pop
mov
out
fistl
pop
shll
sub
fnsave
mov
cs
cmp
cmp
ja
jns
rorl
adc
mov
decb
fisubrl
mov
mov
cmp
mov
pop
mov
adc
pusha
and
leave
pusha
inc
push
inc
js
dec
out
inc
sbb
xchg
sbb
jg
cs
imul
pusha
mov
jmp
dec
dec
adc
addr16
jg
fistpll
loopne
sahf
add
in
mov
dec
imulb
mov
adc
ss
and
test
add
roll
add
ss
jno
leave
mov
push
stos
js
dec
ret
inc
sub
xor
sbb
xlat
frstor
push
inc
jg
addr16
jne
ljmp
push
shl
call
test
fldl
push
aad
in
cltd
inc
xchg
scas
andb
ret
aaa
int
jmp
test
mov
sbb
inc
xchg
ds
inc
add
or
mov
push
frstor
xor
xchg
or
loopne
movsl
jno
imull
out
fwait
stos
xchg
movsl
add
mov
arpl
inc
or
pop
insl
jp
nop
pop
xor
sahf
inc
cmpb
scas
add
sahf
in
pusha
mov
andb
dec
into
pop
mov
sub
movsb
and
sbb
int
dec
enter
xor
ss
sub
bound
and
iret
pop
leave
outsl
hlt
dec
fwait
pop
mov
daa
inc
xchg
or
dec
pushl
push
nop
cltd
mov
mov
ja
lret
sti
lds
enter
xchg
test
push
xor
in
mov
movsl
cmpsl
mov
jecxz
aaa
rsm
and
mov
inc
pop
or
test
mov
mov
cmc
mov
pushf
idiv
ss
inc
loop
sub
pop
sub
cs
outsb
xor
ret
jb
jnp
out
mov
dec
push
lea
out
fnsave
mov
inc
xchg
dec
mov
mov
or
mov
ror
jb
data16
xor
xor
stos
xchg
ret
cmpsl
daa
lods
or
in
lea
imulb
push
or
dec
inc
in
jbe
outsl
lds
shrb
push
inc
leave
xor
rorl
adc
add
ror
gs
mov
loop
xor
or
jns
in
sub
movsb
test
jmp
cmp
packuswb
pop
cmp
insl
xchg
xor
je
inc
or
inc
mov
sub
mov
imul
idivb
cld
rcrb
js
test
mov
testl
and
xchg
cli
xchg
sbb
pextrw
add
add
xor
sub
imul
mov
nop
int
lods
mov
lock
es
or
shlb
mov
lcall
shll
jmp
mov
push
cmp
push
lods
cmpsl
push
pop
adc
pushf
rcrl
aas
mov
scas
idivl
fdivrl
out
insb
das
imul
popf
mov
add
aaa
jbe
fxch
and
jle
push
jo
and
cmpsl
lds
sub
add
lahf
inc
cmp
cvtpi2ps
mov
inc
loope
sub
sbb
enter
insb
jns
dec
sbb
jl
les
mov
mov
mov
or
dec
inc
lret
aas
inc
cmp
aas
insl
dec
xchg
jmp
insl
into
and
ror
mov
jl
jmp
lret
mov
stos
sahf
add
pop
aad
mov
lds
xchg
adc
lret
bnd
shlb
push
neg
fistps
ljmp
pop
test
cmc
sub
movsl
lret
andl
add
xor
xchg
jno
dec
and
dec
or
mov
jne
aas
lahf
out
testl
mov
stc
ljmp
adc
imul
sahf
movsl
loope
or
in
or
dec
xlat
scas
mov
shr
jo
daa
aad
mov
shlb
fisttpll
jg
and
dec
inc
jmp
aas
int
mov
icebp
and
mov
jne
sbbb
gs
lea
cmp
push
and
push
add
dec
adc
lock
xor
call
cmpsb
cs
sub
inc
pusha
pop
adc
xchg
fidivrl
hlt
or
clc
rcl
sub
sbb
out
in
cli
outsb
jns
xor
adc
lea
pop
cmpl
mov
jl
insb
pusha
mov
movsb
mov
shll
mov
ret
mov
movsl
loope
mov
jo
mov
roll
hlt
adc
mov
out
pusha
xchg
jle
es
dec
pop
pop
repnz
rol
cmpsb
dec
adc
add
add
and
orb
fidivl
add
mov
jne
and
test
xor
pop
loopne
sub
fstpt
cmpsb
mull
lds
cwtd
adc
dec
ret
jae
outsl
js
mov
outsl
xlat
std
hlt
imul
stos
adc
lcall
in
out
cmp
push
fs
add
movsl
jp
push
push
cmpsl
ljmp
in
inc
push
dec
and
pop
mov
xor
cmp
pop
fstpl
inc
and
call
push
sbb
or
add
ficompl
out
mov
rcrb
in
and
sti
fwait
and
popf
mov
lods
jae
outsb
popf
popf
ret
pusha
clc
flds
pop
add
daa
cltd
mov
jno
negb
leave
sub
mov
pop
jne
lods
mov
jmp
out
sub
dec
sub
mov
jb
mov
outsl
mov
mov
outsl
movntq
out
adc
and
lods
aas
pushf
rorl
mov
sbb
mov
xchg
into
imul
insl
adc
mov
outsl
jmp
or
mov
lret
push
dec
lahf
sub
popf
jmp
daa
dec
insb
addr16
lret
mov
ja
mov
clc
pop
pop
cmp
hlt
and
imul
inc
pop
jae
rol
jg
test
xchg
add
out
xor
sbb
push
mov
jns
fadds
icebp
outsl
pop
or
mov
out
js
xchg
jnp
push
scas
into
and
jne
sub
stc
dec
in
sbb
xor
outsb
call
sbb
mov
roll
sub
stos
lock
mov
shrl
inc
cmp
stc
cmp
push
sbb
lret
int3
incl
jmp
rcll
adc
add
dec
lret
jmp
roll
sbb
dec
mov
subl
loop
imul
in
add
lahf
movsb
jge
push
movsl
or
orb
dec
or
outsl
jb
inc
testb
xchg
adcb
and
stos
sbb
push
cmp
xor
jns
in
lret
ja
push
sub
sbb
xor
shr
clc
aaa
popa
in
aad
int3
fcmovnu
xor
mov
or
pop
xchg
inc
push
inc
movsl
xor
pop
push
stc
mov
jne
mov
or
or
push
and
mov
cmpsl
cmp
arpl
mov
add
bnd
ljmp
jge
jmp
int3
pop
dec
lret
ror
dec
adc
xchg
ss
shlb
jge
xor
jecxz
jecxz
cmc
xchg
adc
or
sub
lcall
cli
mov
daa
lods
mov
xchg
jns
mov
cld
add
dec
cs
lods
mov
dec
adc
mov
jl
xchg
dec
lods
nop
fs
lahf
ret
stc
adc
test
cmpsl
test
jae
aam
pop
push
inc
pop
mov
or
pop
mov
ret
movsb
call
xchg
nop
xchg
add
dec
dec
xor
push
cmp
clc
or
xor
mov
aas
test
cmp
mov
in
push
add
lds
jle
pusha
icebp
inc
pop
mov
mov
ret
repnz
test
xchg
mov
sbb
xor
dec
mov
testl
jno
ror
testb
les
pop
scas
loop
das
xchg
rcll
add
pop
ss
andl
and
lods
xchg
mov
outsb
hlt
in
inc
lock
pop
sub
sbb
cs
mov
loopne
push
xor
adc
out
cmpsb
pushf
je
xor
imul
out
adc
xchg
ret
arpl
hlt
inc
push
shl
idiv
jns
mull
mov
pcmpgtb
xor
jp
icebp
out
jb
xor
mov
pop
shlb
in
adc
add
fdivl
aam
sbb
mov
fistps
ss
frstor
pop
jl
arpl
inc
add
jecxz,pt
popf
in
ds
jb
pushf
cmp
repnz
mov
loop
add
and
xor
sbb
jae
fwait
cwtl
repz
incb
pusha
cltd
and
jbe
jp
mov
add
xlat
scas
rorb
sbb
ret
push
lret
fisubs
pop
sub
mov
add
sbb
in
int3
cmp
push
pop
add
int3
insb
jnp
pop
into
pop
add
out
pop
sbb
add
xchg
mov
sbb
stc
pop
out
enter
dec
pop
lret
cmc
pop
pop
lock
sbb
or
mov
cli
cld
or
sub
xor
loopne
call
data16
incb
or
dec
cmpsb
jge
test
pop
mov
inc
pop
dec
jno
push
xchg
stos
push
loope
cs
jnp
mov
xchg
scas
mov
adc
les
fdivl
jbe
push
add
cltd
cmp
sbb
ret
xchg
outsb
lods
fsubl
adc
cmp
mov
fidivs
or
mov
xchg
rcl
mov
push
shrb
arpl
pop
lahf
pop
and
mov
dec
leave
pop
dec
add
mov
ds
movups
jbe
jno
fstl
pop
out
out
lock
cmp
ss
or
and
adc
je
inc
outsl
add
jnp
mov
nop
stos
es
fdivs
xchg
jl
mov
dec
imul
mov
cwtl
rclb
mulb
and
jbe
data16
inc
dec
pop
daa
arpl
xchg
mov
mov
movl
cmp
enter
pop
fnstcw
jmp
cmc
sbb
mov
jbe
pop
leave
push
mov
mov
add
inc
xor
jle
mov
ds
ljmp
pop
and
fs
xchg
mov
into
jo
pushf
in
insb
xchg
std
leave
and
cmp
jne
icebp
data16
ljmp
lea
adc
mov
mov
push
leave
test
sub
sbb
mov
rorb
push
inc
sbb
loopne
push
cmp
xchg
mov
dec
sbb
gs
pop
lock
aad
fisubs
cmp
test
test
sti
or
imul
sub
mov
or
pop
mov
mov
sbb
popl
pushf
loopne
loop
jb
ljmp
aaa
incb
sbb
mov
mov
aad
fs
jp
fwait
inc
cmp
push
lea
sub
sub
loop
pop
mov
add
out
pop
xor
jle
jns
in
add
pop
cli
mov
fwait
scas
mov
cmp
mov
in
lcall
movsl
imul
adc
mov
sbb
in
jmp
sub
sub
xchg
ss
mov
in
andl
inc
mov
push
add
sbb
push
sar
pusha
xchg
mov
push
aad
jb
test
mov
sub
popa
aaa
scas
or
sahf
pusha
orb
push
fwait
stos
std
int
xor
xor
mov
lods
jmp
rorb
pusha
lret
jo
sbb
adc
dec
jmp
jecxz
push
data16
xchg
out
scas
add
pop
sbb
push
outsb
mov
ror
xlat
sbbb
iret
mov
test
mov
lcall
leave
aam
or
inc
cmp
insl
fwait
shll
lods
adc
add
sbb
bound
bound
push
leave
ret
into
mov
sbb
mov
xchg
pop
call
mov
sbb
mov
jecxz
jmp
sti
enter
movsb
lahf
mov
out
sbb
addb
cwtl
lock
cmp
mov
xor
dec
flds
jo
cmpsl
dec
nop
packsswb
sbb
lret
pop
movsl
dec
sahf
ljmp
add
test
push
push
pop
cmp
add
pop
rcr
test
mov
lds
inc
lret
cmpsl
jl
xchg
fbld
jle
cmpsl
dec
fwait
push
fs
mov
and
in
mov
out
sahf
or
add
fld
movsl
add
clc
cmpsl
mov
movsl
aas
jns
testb
cmpsl
push
and
and
jne
and
add
and
out
loopne
xor
aaa
and
and
fwait
scas
ja
fistpll
cmp
out
sub
aam
and
out
iret
mov
xchg
push
jo
dec
xor
lret
int
dec
and
cmp
xchg
inc
cli
or
jns
mov
lods
jle
push
lds
scas
mov
pop
mov
imul
push
mov
mov
mov
shr
dec
jecxz
test
mov
xchg
test
jmp
push
aaa
mov
roll
mov
jmp
or
les
cld
xor
xor
daa
pop
sub
sbb
push
pop
or
jmp
js
ror
ret
mov
fwait
call
inc
in
call
cmp
repz
mov
xchg
cmpsl
shll
xor
fcoms
ljmp
enter
push
push
mov
shlb
fwait
or
and
add
jno
xchg
fnstenv
mov
inc
cmc
xorb
push
movsl
jmp
dec
stc
push
xchg
add
incl
mov
sub
dec
mov
les
and
mov
dec
ja
mov
sbb
adc
arpl
test
daa
mov
add
out
mov
je
or
mov
sti
or
mov
mov
gs
cmp
sbb
dec
jge
cmp
and
push
repnz
or
cmp
pop
push
xchg
dec
imul
lds
sbb
push
xor
push
push
pop
fistpll
pop
out
dec
and
lret
xchg
or
jo
xor
pop
xor
loopne
xchg
inc
mov
push
aaa
mov
cmp
and
popf
pop
pand
icebp
je
fisubrl
cmc
sub
xor
sub
sub
xchg
cmp
outsb
sahf
mov
xchg
mov
adc
jb
and
or
adc
push
push
add
lods
jle
and
inc
xorb
pusha
push
and
leave
lods
aas
out
push
ds
shll
or
cmp
outsl
es
lods
pop
pop
aad
add
add
jb
scas
push
test
lods
inc
xor
jne
mov
mov
cli
int
ja
jecxz
pop
xchg
lds
das
and
add
subb
xchg
imul
out
sbb
mov
enter
into
or
test
movb
test
add
mov
push
imul
movsl
sbb
ljmp
sbb
enterw
fadds
sbb
lcall
clc
mov
xchg
sub
adcb
mov
fwait
outsb
mov
mov
adc
mov
dec
loop
pop
xchg
out
mov
xor
cli
cli
push
ret
jp
stos
xor
les
sub
fisubl
dec
and
xor
sbb
fldcw
sti
rdmsr
cmp
mov
rorb
xor
cli
xlat
xor
adc
adc
add
xor
xchg
out
adc
pop
jp
sbbb
add
fs
ret
sbb
out
mov
cmp
fs
xor
loope
subb
adc
jp
pop
js
fs
xchg
xchg
sbb
jg
jno
mov
loop
les
nop
cmp
inc
push
std
add
sub
fwait
xor
jns
mov
es
add
test
or
and
push
fstpt
cltd
sti
push
call
mov
addr16
mov
pop
xlat
fimuls
fcomi
push
sbb
fdiv
cmp
ficomps
and
int
sbb
les
dec
or
andl
cmp
enter
push
xchg
popa
push
mov
mov
inc
out
xchg
test
xchg
xlat
divb
adc
daa
stos
cmp
cmp
sbb
test
aad
test
mov
pop
and
pusha
pop
adc
pop
dec
dec
sbb
inc
repnz
inc
aaa
mov
pop
lea
cmpsl
xchg
pop
lods
imul
movsl
int
repz
int
mov
sub
pop
mov
addl
add
into
or
sbb
xor
outsb
xchg
cmpb
dec
sub
pop
add
icebp
or
dec
sub
sub
lods
fwait
lods
jne
or
aas
pop
pop
lahf
sub
popf
popf
outsl
sbb
scas
or
mov
repz
out
or
je
pop
sbb
sbb
pushf
addr16
fs
aaa
loop
jns
xchg
outsl
mov
frstor
or
imul
inc
mov
add
das
inc
xchg
pop
cli
jns
xor
dec
cltd
aas
lret
fs
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
or
popa
rcrb
rol
outsb
mov
leave
imul
xorb
stos
call
jg
test
dec
inc
xchg
ffreep
movsb
out
push
in
pop
hlt
pop
pusha
adc
mov
lcall
mov
fsubr
incl
lods
repz
push
rolb
ret
mov
insl
pop
and
call
add
cwtl
dec
das
mov
popf
sahf
shll
mov
fbstp
push
fwait
pusha
xor
or
or
mov
outsl
int3
jp
inc
rcrl
iret
pop
dec
stc
push
jl
push
sbb
das
sub
pop
in
push
push
sbb
in
pop
jmp
xchg
jp
mov
xchg
fiadds
ds
stos
xlat
daa
mov
int3
rcrl
mov
insb
mov
sub
call
insb
inc
cmpl
rcrl
dec
movsb
movsb
cltd
push
mov
push
test
pop
aaa
mov
mov
jbe,pt
icebp
jmp
mov
call
arpl
sar
mov
xor
sub
pop
lods
cmpsb
lcall
inc
adc
mov
out
notb
arpl
loope
mov
jge
inc
jge
pusha
dec
pop
cs
sbb
jno
gs
jbe
test
sarl
xor
adc
orl
lahf
in
jbe
add
fidivrs
mov
mov
cld
adc
push
lahf
mov
enter
cwtl
int
in
mov
jge
push
xchg
icebp
fisubl
frstor
addl
inc
outsl
repz
jge
not
pop
pop
ds
fcoms
out
gs
mov
insl
lock
xlat
jp
iret
add
lods
imul
mov
sub
test
xor
jecxz
lret
aaa
stos
adc
push
adc
xor
pop
push
jae
rcl
pop
cltd
mov
sub
scas
jb
jns
push
mov
push
dec
push
stos
xchg
data16
adc
insb
shlb
mov
sub
mov
xor
movsl
in
mov
jne
and
in
ficomps
jo
cmp
in
movsl
xchg
sub
and
insb
dec
negb
sub
test
shlb
repnz
shrl
cmp
jne
ret
imul
std
pop
lea
cld
mov
push
loope
jno
popf
popf
out
dec
xor
ret
std
push
mov
inc
rcl
jns
dec
insb
test
hlt
xlat
xchg
dec
clc
sub
fcmovu
clc
les
in
rclb
inc
cmp
xchg
pop
sti
or
xor
mov
repz
in
cmp
loope
ss
scas
push
pop
sbb
dec
test
xchg
lea
xchg
frstor
dec
sarl
cld
pop
xor
xchg
mov
ret
cmpsl
in
mov
push
cltd
test
sarl
push
fsubrl
into
sbb
test
xor
xchg
imul
lcallw
xor
pop
push
les
repnz
adc
fldenv
stos
jl
inc
push
gs
test
js
sti
add
hlt
stos
cmp
mov
in
cltd
mov
std
cmp
mov
loope
xchg
int
xchg
push
push
out
outsb
mov
mov
xchg
dec
pusha
fiadds
lret
insb
dec
and
lock
jnp
mov
movsl
icebp
xchg
jo
dec
outsb
lods
xlat
jns
dec
loope
pop
add
fiaddl
xchg
in
fists
mov
inc
sub
hlt
mov
cmpsb
fcmovnu
test
out
repnz
sub
test
insb
pop
and
shll
pop
clc
in
xchg
sub
out
xchg
sahf
fbstp
mov
ja
movsb
and
dec
sub
out
test
nop
testb
and
sub
dec
adc
ljmp
push
das
mov
pop
sarb
lret
add
mov
cs
les
dec
stos
cmp
outsb
sahf
faddp
inc
movsl
xor
or
jl
lcall
xor
push
decb
int
push
sbb
pop
mov
das
xor
jl
jl
inc
dec
jnp
cmp
in
ljmp
daa
xchg
sbb
clc
pop
mov
ret
aas
ret
popf
fimull
push
xchg
js
loopne
cmpsb
lea
jmp
add
sti
inc
or
mov
add
movaps
xor
jge
add
xorb
inc
mov
inc
jl
cld
sbb
bound
xchg
adc
cmp
cmc
mov
ret
xor
lea
popf
cmpsl
cmp
pop
xor
pusha
mov
add
xchg
jae
in
and
aaa
je
and
jnp
sub
imul
add
rcr
std
mov
mov
in
adc
jp
cli
inc
cld
push
push
stos
test
mov
loop
mov
cmp
pop
mov
clc
aaa
xchg
lock
jne
inc
adc
adc
call
pusha
inc
scas
push
sbb
rcr
gs
jb
movsb
mov
push
movsb
or
cmp
sub
sub
js
and
sbb
lret
data16
stos
ljmp
adc
inc
pop
sub
pop
int3
int3
xlat
cmp
std
pop
xor
and
ds
popf
xchg
mov
sbb
push
sarb
das
or
and
jle
jmp
sub
pop
les
movsl
cmc
or
pop
leave
sbb
mov
pushf
aad
pop
xlat
mov
xor
out
bound
xor
pop
or
scas
pop
add
loopne
mov
pop
dec
pop
in
or
mov
push
fisttps
xor
ss
cld
xlat
adc
imul
cmc
jbe
jp
lret
mov
dec
popa
fs
push
cmpsl
push
cmpsl
aas
or
clc
mov
dec
and
or
int3
lods
std
dec
clc
jp
mov
add
iret
push
push
xor
mov
popf
mov
lea
sbb
rorb
out
xlat
rcrl
cmp
fdivr
in
and
push
pop
cmp
mov
in
push
ss
push
xor
stos
inc
xlat
pop
out
xor
clc
pop
scas
shrl
mov
ljmp
div
sub
adc
loop
or
lods
push
xor
and
aas
mov
addr16
pop
xchg
test
aad
xchg
cmp
dec
shll
out
js
loop
in
sub
je
cmc
iret
jno
mov
push
subb
cmp
das
ret
mov
mov
test
mov
stos
pop
fdivrs
jo
outsl
and
pop
cmp
cld
adc
jne
stos
pushf
mov
jae
xor
out
lahf
das
iret
sub
xor
mov
test
aam
push
iret
push
arpl
adc
in
mov
mov
sub
pop
pop
add
clc
mov
fimuls
mov
outsb
addr16
push
cmpsb
sbb
cmpsb
ds
repnz
pop
test
data16
fisubs
sbbb
xchg
test
sub
mov
jle
aad
cmpb
rcrb
fnstenv
int3
cmpb
sbb
push
cmp
inc
adc
pop
imul
jbe
mov
into
sbb
adc
daa
lcall
cld
push
mov
xchg
daa
ja
inc
repz
mov
push
xor
js
fs
pop
shlb
mov
test
in
sbb
and
cs
arpl
mov
cmp
das
sub
call
decl
or
or
ja
and
mov
test
pop
mov
loop
pop
push
xor
mov
mov
sub
pop
push
out
pusha
push
outsb
jl
je
mov
mov
push
ss
lret
sub
sub
mov
sbbl
int
pop
push
xor
mov
push
mov
leave
and
clc
sbbb
xchg
jle
mov
pop
adc
pusha
push
xchg
fidivl
dec
std
test
xchg
push
mov
mov
xor
cli
pop
lea
xchg
arpl
cld
mov
jne
xchg
movsb
shl
add
mov
or
sbb
insl
mov
jns
mov
push
mov
imul
enter
fdivs
lea
xor
mov
fildl
cwtl
pop
call
out
sub
call
add
and
or
repz
repnz
push
mov
mov
or
mov
mov
pop
rol
jnp
lods
cwtl
pop
shlb
nop
xchg
test
cmpsb
jp
out
stos
xchg
mov
adc
aas
push
iret
adc
inc
add
mov
fisubl
lahf
iret
push
ret
xor
add
xor
out
dec
sbb
cld
push
repnz
inc
pop
inc
lds
shrl
jno
mov
dec
outsb
jl
lret
out
adc
insb
ja
jns
leave
jb
cmp
mov
xor
movsl
fcoml
je
dec
mov
pop
out
xchg
mov
xchg
and
sbb
dec
xor
clc
mov
loopne
add
and
addr16
inc
mov
pop
cs
mov
dec
sub
lods
es
push
js
push
cmp
insb
jp
movsb
mov
add
stc
insl
cmp
out
pop
sarl
faddl
mov
pop
inc
mov
je
inc
push
xchg
sbbl
fs
lods
stos
cmp
ss
or
and
jns
xchg
adc
jo
sahf
mov
mov
jp
cld
or
sub
shrb
xchg
repz
js
stos
xchg
in
pop
add
cmp
pop
stos
out
in
dec
mov
add
push
push
cmpsl
shll
ja
insb
fildll
test
xchg
fs
mov
inc
add
pop
je
shlb
popa
push
icebp
out
fistpl
sbb
das
mull
xor
cmp
dec
pop
xor
shr
add
jae
cmp
inc
pop
mov
cltd
jbe
outsl
sbb
test
fldt
loopne
in
addb
xor
pushf
xor
pop
aaa
in
mov
jbe
movsl
sbb
adc
loope
dec
andl
jae
mov
clc
add
and
jae
clc
je
insb
lds
fs
test
insl
pop
mov
popa
xchg
data16
cmp
inc
popf
sub
push
cmpsl
shr
and
xchg
sub
sub
scas
shl
scas
out
inc
cmp
pop
pop
jp
push
jl
dec
loope
leave
pcmpgtb
loope
loope
jo
push
inc
mov
icebp
jg
daa
sub
sub
cs
push
stc
adc
jp
test
sti
cmc
or
gs
cmp
test
mov
popa
mov
cs
repz
sub
mov
push
mov
cmp
andb
cs
cmp
mov
adc
aaa
cmp
inc
sub
insb
mov
mov
les
stc
gs
popa
shlb
xor
or
hlt
in
cli
enter
nop
flds
scas
into
out
out
add
sub
lds
call
out
push
xor
cmp
sbb
in
jmp
push
cs
sub
jp
xchg
sub
fsubl
sub
jmp
cmpsb
sub
pushl
scas
shrl
push
fs
adc
in
pop
gs
dec
bound
mov
test
sbb
sbb
add
add
call
sahf
sub
cmp
sub
pop
int
sarb
and
cmp
in
ja
xchg
or
ret
mov
fimull
add
inc
cmp
add
sub
mov
lock
sbb
adc
fld
rdtsc
jp
adc
xchg
xchg
fcmovu
or
jae
dec
inc
mov
hlt
and
roll
xor
mov
mov
out
xorb
aad
mov
stos
dec
xchg
adcb
sbb
dec
jp
and
xchg
mov
cltd
xor
mov
sarb
pop
scas
mov
push
movsb
aad
mov
ljmp
push
rcll
insb
xchg
in
bound
add
mov
mov
adc
or
les
subb
hlt
stos
sbb
xorl
inc
jb
icebp
or
adc
cwtl
jno
mov
enter
inc
aam
add
pop
or
inc
mov
push
imul
jle
mov
push
aam
testl
xor
call
mov
xchg
jle
xor
sub
ret
push
ficomps
xor
call
cwtl
xor
fbld
sub
inc
jae
clc
lcall
fdivl
add
and
das
dec
call
adc
fs
pushf
mov
xchg
mov
sbb
jle
mov
sub
sar
stc
xorl
dec
or
jg
loope
pop
jne
jl
sbb
nop
or
insb
push
lea
sbb
outsb
js
sub
int
push
cmpsl
jp
mov
and
sbb
mov
iret
jge
shl
mov
adc
and
sub
test
lea
ja
sbb
ljmp
xor
mov
sahf
inc
inc
iret
fs
xchg
insl
or
ret
scas
fisttps
sbb
sbb
jmp
in
cmp
iret
rol
cmp
jg
mov
movsb
test
call
cmpsb
dec
add
aad
xlat
lds
es
inc
imul
mov
add
fimull
ds
lock
push
ljmp
mov
scas
ret
sarl
adc
imul
fwait
cmp
in
jp
into
test
lahf
push
push
sahf
cmp
addr16
nop
mov
test
cs
cmpsb
jbe
mov
sub
push
sti
add
in
test
xlat
dec
inc
add
sbb
arpl
push
arpl
ret
js
push
xchg
aam
jbe
adc
xchg
aam
jmp
cld
inc
and
sbb
mov
pop
add
jo
ret
xchg
lret
mov
push
lcall
jb
fcmovnbe
mov
xchg
xchg
jge
sbb
sarb
mov
push
lds
test
sub
roll
jge
lock
xor
cmp
scas
xchg
daa
pop
and
inc
and
add
rcrb
push
out
jle
push
lret
rcl
mov
ds
or
dec
or
arpl
shlb
dec
repnz
mov
adc
cmp
sbb
mov
aad
fs
mov
pusha
xor
inc
loope
add
sbb
add
imul
movsb
mov
mov
push
adc
mov
jo
xor
fsubrs
and
push
jl
dec
shll
dec
jmp
clc
lret
scas
aad
iretw
mulb
out
or
cmc
adc
pop
movsb
push
jne
adc
aad
notl
jne
hlt
movsb
loope
xchg
cwtl
scas
and
sbb
divb
sub
lret
push
cli
loop
movsl
jmp
icebp
insl
rol
xlat
xlat
dec
insl
push
movsb
pop
inc
push
push
jg
imul
xchg
shll
stos
addr16
mov
int
sub
inc
mov
imul
sub
aad
mov
aas
dec
movsb
dec
pop
divl
or
idivb
add
xor
dec
jecxz
mov
rcl
add
aas
repnz
jne
adc
xchg
xor
out
inc
jae
cs
jmp
lods
jle
xchg
lods
cs
cmp
insl
popf
jo
lds
push
add
nop
jle
hlt
push
adc
xchg
mov
call
or
je
dec
popl
push
lds
insl
scas
pop
sub
pop
jae
test
inc
fidivrs
inc
enter
adc
lcall
adc
mov
in
movsb
repz
jo
xchg
negl
les
jle
sub
repz
xchg
jbe
data16
cli
shrl
loop
pop
mov
cmp
push
jnp
insl
add
pop
xchg
cs
clc
lret
jns
fimuls
push
add
in
add
xchg
shrb
fistps
mov
pop
inc
aam
pop
imul
pop
inc
fucom
adc
mov
dec
sahf
bound
and
and
aam
cltd
xlat
and
scas
jbe
xchg
pop
lret
insb
pop
in
into
enter
test
cmp
jbe
jl
fldcw
mov
cwtl
jne
les
jmp
loop
mov
xchg
stos
jg
andl
gs
and
in
call
mov
ja
jle
adc
int3
mov
mov
xchg
adc
mov
int
cwtl
mov
cs
mov
and
fldl
sub
add
mov
into
andl
call
push
in
fnstcw
sarb
ret
sub
cmp
mov
pop
pop
sub
sbb
mov
sbb
push
jle
add
jne
lea
fsubl
cwtl
and
adc
outsb
stos
mov
and
inc
sarb
hlt
xor
xor
in
aaa
fsubrs
add
movsl
lea
loop
out
sbb
aad
mov
adc
mov
call
repz
mov
and
pop
hlt
mov
dec
outsl
cwtl
mov
popa
and
lods
outsb
fimuls
sub
xchg
mov
scas
icebp
sbb
or
loopne
push
push
jae
ret
mov
pop
xchg
int
add
les
xchg
xor
rcrb
mov
and
and
xchg
lds
popf
pop
xor
arpl
sub
xchg
push
imul
lahf
jecxz
movsb
xchg
mov
or
adc
aaa
cld
pop
bound
xchg
aam
das
sub
roll
les
loopne
fwait
repz
add
ffree
inc
or
sbb
pop
das
enter
mov
xor
fstl
pop
shll
lret
enter
lcall
pusha
push
push
mov
iret
inc
mov
ret
mov
xchg
xor
jne
cmp
pusha
adc
pop
adc
les
fs
in
dec
sbbl
dec
sbb
dec
push
push
rcr
lahf
or
xchg
mov
ret
mov
lret
inc
xor
adc
cs
and
orb
or
inc
pop
and
aam
lret
push
xorl
pop
shr
nop
jmp
push
and
xchg
xchg
sub
lods
mov
add
or
cltd
mov
shrb
cld
sub
pusha
in
xor
or
cmp
inc
out
mov
fnstsw
outsl
leave
outsb
loopne
mov
push
jl
sub
push
mov
mov
pop
pop
je
loope
inc
arpl
jle
pop
into
popf
xor
paddsw
xchg
xchg
data16
sbb
outsl
ret
mov
cmp
inc
adc
cmp
aam
int3
in
imul
gs
enter
push
test
nop
subb
mov
test
inc
dec
mov
fidivrl
insl
pop
xor
out
mov
add
sub
jae
mov
or
xchg
inc
xor
cs
mov
xchg
cmp
add
mov
pop
pop
lock
subl
push
adc
nop
aaa
out
pop
sub
mov
ljmp
xchg
mov
test
daa
in
jg
and
push
stos
xchg
pop
rcll
pusha
sub
xchg
cmp
jo
frstor
xor
adc
mov
add
fcoms
cld
inc
inc
andl
xor
leave
aas
arpl
enter
imul
or
pop
repz
or
pop
or
test
imul
cmp
arpl
pop
and
mov
fnsave
mov
das
add
cmp
add
jae
repz
adc
data16
les
adc
jae
cmp
and
pop
cmc
and
push
loopne
leave
movl
je
pusha
fmull
and
jp
pop
aad
pushf
and
insl
data16
cmp
cmc
adcb
pusha
mov
cld
in
inc
test
adc
adc
enter
daa
sbb
add
jle
daa
loop
bound
lcall
lret
cmp
daa
rorb
dec
xchg
xchg
inc
sbb
pop
xor
and
mov
lahf
lods
aam
fwait
inc
jno
xor
lret
mov
shlb
into
insb
scas
mov
mov
inc
jbe
add
mov
jge
popa
mov
push
imul
jno,pt
pop
mov
mov
push
cltd
inc
and
inc
addr16
jne
stc
dec
mov
aas
mov
cmp
xchg
mov
sub
inc
cmp
in
push
pop
or
lods
es
out
xchg
mov
add
sub
int3
jmp
pop
jg
shll
cmpsb
movsb
lods
inc
sbb
arpl
inc
add
inc
dec
movsl
adc
pop
clc
mov
xor
lahf
push
icebp
xchg
pop
mov
jnp
out
shll
das
in
dec
cs
jge
addr16
out
inc
jle
scas
xor
sarl
arpl
mov
mov
cmp
imul
lds
in
lds
push
bound
mov
or
das
fiaddl
lock
sbb
jl,pn
sub
jp
xor
xchg
add
push
jbe
sub
stos
dec
push
fmull
lahf
adc
add
xor
mov
out
jnp
enter
in
fists
sub
mov
xchg
in
out
sbb
adc
out
and
shlb
adc
ss
jns
fsts
leave
xchg
bound
xchg
xchg
ret
mov
inc
mov
mov
dec
or
out
enter
in
mov
mov
adc
movsb
lock
movsb
pop
xchg
mov
pop
xchg
in
xchg
cli
mov
gs
inc
movsl
jo
jg
jne
adc
adc
jecxz
or
sub
loope
out
mov
jo
or
dec
and
les
inc
addr16
out
jp
ds
cld
loopne
pushf
inc
aad
aas
inc
or
xchg
lock
sahf
adc
aas
lock
push
jne
add
shrb
jns
pop
sbb
enter
dec
shlb
xor
push
sahf
pushf
add
mov
scas
dec
jb
add
pop
jne
cltd
inc
lret
movsb
sbb
dec
aam
ret
sub
fnstsw
divb
xor
aam
xchg
dec
adc
sub
subb
int
pop
mov
cmp
int3
inc
repnz
inc
scas
and
cmpsb
ja
ljmp
push
nop
xor
jecxz
mov
je
sti
push
dec
popf
or
fwait
and
sarl
mov
cld
xchg
dec
cmp
out
xchg
outsl
test
xchg
es
enter
aam
cmp
sub
jg
sbb
pop
and
sbb
orl
push
cwtl
xlat
jno
movsl
sub
cwtl
cmp
and
cmp
in
dec
cmp
fisubs
cmp
out
call
lret
imul
in
push
enter
sub
insl
icebp
imul
xor
icebp
inc
push
sub
ss
addr16
cmpsb
dec
jge
jo
mov
in
cmp
mov
and
cltd
faddl
cmp
jno
push
jge
pop
inc
je
cltd
in
cmp
enter
pop
movsb
js
scas
or
loop
pop
add
test
add
fsubrl
out
fldt
repz
jne
and
cmp
xchg
sbb
aaa
add
sbb
mov
adc
nop
enter
xor
xlat
mov
mov
in
mov
pop
or
arpl
inc
pop
in
sbb
jb
push
add
fsubrs
mov
aad
adc
enter
add
ret
incb
sub
pop
lea
sub
cmc
arpl
gs
mov
insl
add
inc
jle
jge
push
or
jne
and
lahf
lea
pop
rcll
jb
mov
add
fsubrs
jae
jb
test
fdivrl
sub
pop
pushf
xlat
test
push
jmp
shlb
pop
xor
repnz
xchg
sub
mov
ficompl
pop
in
mov
addr16
xchg
push
enter
mov
or
cmp
xor
in
into
push
repz
lds
icebp
fidivrl
push
dec
shrb
pop
dec
xchg
jne
notb
les
push
js
lods
jno
xchg
fcoms
pop
pop
jae
stos
in
dec
mov
scas
lahf
pop
xor
mov
mov
sbb
and
dec
cltd
roll
popl
test
dec
outsb
jg
repz
push
sub
ret
rorl
adc
jmp
xchg
int
adc
out
cmp
test
stc
and
push
nop
call
xor
enter
mov
addr16
rorl
in
ds
mov
inc
jne
out
lods
inc
push
xchg
sbb
cmp
cmp
cwtl
repnz
je
jmp
pop
daa
fs
and
jl
pop
jno
and
insb
pusha
mov
push
addr16
jo
mov
or
dec
roll
sbb
xchg
pop
loope
repz
int
or
scas
cmp
adc
aam
fmul
or
pop
inc
gs
push
inc
xchg
jo
sbb
pop
sub
aam
xor
push
xchg
cltd
pop
adc
test
pop
cmpsl
lcall
js
mov
dec
divl
imul
imul
pusha
or
cmpsl
aam
dec
mov
rcrl
push
js
test
push
repz
lock
sahf
push
push
mov
cmc
push
sub
jns
lods
mov
cmc
roll
cmpsl
or
xchg
outsl
stc
jg
jo
ss
pushf
nop
js
mov
pop
pop
in
sbb
aam
scas
outsl
jle
fldl2t
jns
aaa
xchg
mov
mov
loope
cmp
pop
int3
call
adc
push
xlat
jae
mov
repz
rcrl
pop
ds
ret
push
jl
pop
clc
dec
sbb
mull
sub
cmp
scas
cmp
cltd
sahf
push
sqrtps
clc
arpl
das
das
sti
arpl
loope
adc
call
outsb
push
addr16
lret
out
pop
inc
push
jbe
xor
jl
inc
push
xchg
fmuls
mov
mov
es
out
cmp
inc
mov
jmp
xor
jl
arpl
stc
xor
mov
mov
lock
faddl
rolb
push
mov
test
fldt
sbbb
inc
scas
xchg
in
push
pop
cmp
orl
mov
adc
pop
imul
stc
out
pop
frstor
mov
orb
xlat
in
stos
mov
sub
fdivr
inc
stos
sub
insb
lods
add
loopne
aaa
jmp
mov
imul
xor
cmpsl
idivb
mov
mov
xchg
loopne
inc
pop
mov
addr16
fisubl
inc
xchg
inc
add
pop
add
cmp
mov
aaa
add
fisubs
fwait
call
sub
lret
push
int3
fldcw
cmp
sahf
push
mov
decb
pop
pop
or
sub
adc
int3
mov
aam
arpl
push
sub
or
cmp
adcl
xchg
out
or
fadds
imul
sbb
pop
sbb
jle
fwait
insb
add
and
or
aas
mov
imul
leave
sbb
jl
pop
jae
or
adc
and
mov
adc
repz
push
and
mov
mov
pop
jns
xlat
mov
pop
cmc
jno
mov
sub
xchg
in
mov
and
mov
pusha
dec
jp
add
dec
jno
shlb
sbb
dec
add
lods
and
out
inc
mov
xlat
cmp
push
pop
xor
and
repz
jo
lret
mov
lds
mov
lock
aam
jge
addr16
arpl
sti
xchg
mov
jmp
lds
mov
mov
inc
sbb
fbld
xchg
negl
sti
mov
gs
enter
scas
imul
hlt
cmp
xchg
mov
lret
pop
xor
add
jnp
xchg
and
add
mov
cmp
pushf
inc
std
out
shlb
lret
xor
shr
push
push
call
mov
mov
test
mov
jp
adc
xlat
dec
clc
or
jns
and
xchg
bnd
cmp
cmc
and
jne
pushf
int3
sbb
dec
fimuls
mov
cs
das
pop
lods
stos
sbb
push
or
hlt
and
aaa
cltd
xchg
repnz
and
loop
out
and
push
imul
adc
sub
or
jle
mov
aad
aad
repz
mov
push
andb
adc
das
xchg
xor
mov
ss
pop
clc
push
ljmp
push
mov
xchg
test
mov
shlb
js
sub
pop
mov
adc
pop
sub
icebp
dec
xor
dec
addr16
je
ret
push
and
xchg
adc
jge
mov
outsb
cmpsl
inc
lods
pop
mov
push
lret
sbbb
imul
sub
je
mov
mov
adcl
into
mov
pusha
adc
mov
mov
mov
xorl
fsub
push
jl
push
icebp
outsb
mov
and
sbb
xor
sbb
fcom
sub
cwtl
ljmp
mov
pop
adcl
pop
lea
jp
in
dec
pop
jg
orl
in
mov
psadbw
fildl
inc
imull
leave
iret
mov
testb
and
negb
mov
outsb
cmc
mov
pop
ljmp
pop
aas
jns
lds
enter
popf
pop
cs
jbe
mov
ficompl
in
jb
adc
push
jg
rorl
sbb
hlt
popl
lods
lds
ljmp
repnz
add
ret
lahf
ljmp
das
jbe
xchg
outsb
fistpl
or
cmpl
push
xor
mov
jg
sbb
lods
push
popa
xor
dec
es
rolb
ret
loopne
inc
push
int
sbb
jne
in
and
nopl
push
xchg
js
lods
pop
testl
rclb
mov
std
popf
sbb
lret
and
xchg
jnp
inc
mov
js
xchg
shl
mov
int
or
fsubr
cmp
mov
repnz
inc
cmp
lods
adc
rcl
gs
jl
cmp
push
cmp
into
out
and
add
push
mov
repz
mov
inc
add
imul
out
push
and
out
setns
mov
fcmovbe
xlat
pop
dec
ljmp
sbb
ljmp
outsb
clc
subb
add
shlb
popf
xchg
daa
xor
cld
mov
xor
mov
mov
shll
mov
mov
mov
int3
cwtl
nop
fmuls
out
mov
negl
sbb
or
sti
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
push
enter
rcrb
hlt
add
fwait
dec
dec
sbbb
and
arpl
mov
inc
and
test
fdivrs
out
pushf
push
popf
pcmpgtb
push
adc
push
pop
dec
mov
divl
add
xchg
pusha
and
pop
imul
stos
pop
dec
cltd
and
mov
mov
add
dec
push
mov
mov
test
or
sti
push
mov
mov
hlt
shlb
testb
int
shll
shlb
hlt
aam
imul
shl
movsb
xor
add
add
and
sub
je
xchg
imul
xor
dec
mov
push
loopne
scas
add
mov
pop
or
sbb
stc
dec
adc
add
fs
cmp
lahf
add
aas
sbb
pop
popf
dec
rolb
cmp
inc
push
lret
xorl
push
adc
push
js
lcall
cmc
sti
ljmp
pop
mov
cmp
enter
xor
rcr
ss
insb
mov
or
loope
mov
jne
adc
xor
cmp
jns
jge
jnp
out
call
imul
jle
inc
jb
dec
xor
test
repz
pusha
dec
dec
inc
xor
repz
xchg
scas
sbb
popa
mov
rcrb
adc
mov
xor
push
and
cmp
sub
ja
insb
cli
cmpsl
bound
fwait
cmp
mov
inc
jecxz
xchg
adc
fiadds
addb
lahf
lds
adc
inc
lods
dec
cs
dec
push
pop
ja
ret
sub
jmp
xchg
mov
mov
xor
and
test
dec
sub
addr16
cwtl
popa
cli
pushl
aad
fistpll
movsl
ret
dec
dec
push
fs
clc
mov
cvtps2pi
out
and
cli
pop
cmp
test
iret
mov
lea
sahf
jnp
es
out
sbb
dec
cld
jae
lock
sarl
fwait
scas
dec
stos
insb
dec
mov
pop
push
jbe
mov
xor
test
decb
jno
bound
lahf
mov
sar
push
fs
dec
sbb
nop
mov
jbe
jae
sub
adc
fimuls
dec
mov
cmp
or
js
movsb
jge
push
pop
movsl
clc
mov
push
mov
sub
aam
sahf
call
shlb
call
cmpsl
or
mov
push
push
das
lds
test
pushf
push
mov
dec
sbb
repnz
inc
and
ja
add
out
pop
popf
adc
dec
or
out
movsl
jbe
push
push
repnz
xor
push
fidivrl
xchg
dec
imul
cmp
lock
test
mov
in
inc
ljmp
mov
push
test
xchg
ffree
push
xchg
scas
xor
fcmovbe
inc
movsl
mov
dec
mov
inc
sbb
sbb
aaa
popf
jb
shl
fcomip
sbb
pushf
jns
sahf
leave
push
xchg
xor
jmp
jge
cmp
hlt
cmp
push
push
push
push
dec
push
testl
ljmp
out
push
stc
rcr
mov
xchg
scas
mov
mov
adc
pop
dec
sbb
mov
adc
jo
lock
inc
lcall
add
xor
lds
mov
fcoms
xor
lods
enter
loop
test
aad
jns
leave
mull
js
mov
pusha
lcall
mov
fucomp
jno
andnps
int
mov
adc
push
mov
iret
mov
in
cwtl
mov
lds
cs
iret
andl
into
sub
cmp
outsb
aad
pop
pop
mov
add
test
jle
pop
iret
rcrl
sub
pop
fcmovnbe
xchg
stc
pop
jp
mov
xchg
mov
lock
sbb
or
mov
xchg
mov
cwtl
pop
jbe
scas
jge
jmp
daa
nop
les
test
jle
push
fsubrs
aas
mov
insl
dec
fidivl
adc
jecxz
roll
push
mov
sub
mov
cltd
mov
add
stos
in
sbb
ss
xchg
pop
jecxz
inc
loop
mov
fldenv
pushf
inc
jg
call
sub
cltd
jg
pop
sub
hlt
cld
imul
cltd
rcrb
inc
mov
sbb
fisttpll
add
mov
sub
rcrl
mov
mov
fwait
testb
les
xor
arpl
addr16
push
add
pushfw
jnp
les
pop
pop
popa
add
pop
movsb
adc
pop
push
mov
dec
divl
test
inc
cmovg
repnz
subb
and
mov
inc
rcrl
aad
mov
add
loopne
pop
lock
out
std
inc
mov
xor
gs
fmull
mov
or
leave
inc
mov
ret
or
add
xor
push
and
pusha
xlat
addr16
mov
pop
jmp
sbb
out
xor
pop
fsubp
aaa
pop
or
jg
shrb
jae
sub
mov
cltd
mov
nop
xchg
cmc
mov
adc
mov
iret
xchg
std
ja
lods
in
or
movsb
idiv
and
push
cs
gs
mov
xchg
pop
jmp
loope
cmpb
cmp
fwait
cmp
orl
sbb
out
int3
loopne
loope
int
adc
xchg
mov
out
ret
cmpsb
mov
adc
jb
aaa
outsl
ljmp
jmp
mov
add
dec
xor
jl
mov
fcomi
ficomps
bound
cmpl
popf
pop
xchg
hlt
inc
ljmp
jg
lahf
mov
or
scas
int
inc
iret
rcl
aaa
fwait
cmp
dec
jg
pop
mov
sub
pusha
cmp
pushf
sbb
mov
adc
fimull
mov
pusha
xor
sub
ret
adc
call
jmp
in
inc
sub
add
movsb
push
mov
and
repnz
popa
pop
lea
inc
pop
add
pop
push
sub
andl
or
add
sub
icebp
push
loopne
pop
xchg
adc
lods
lahf
notb
roll
xor
test
xor
repz
mov
inc
mov
sbb
test
test
push
jae
fildl
gs
xor
xlat
inc
sbb
sub
das
fdivl
sbb
push
in
pop
add
stc
cltd
mov
mov
inc
sbb
adc
lret
fwait
mov
adc
xchg
insl
mov
sbb
scas
pusha
xchg
outsl
test
pop
cmp
sbb
lcall
mov
loopne
xor
lods
adc
mov
xor
adc
inc
idivb
ss
stos
push
or
call
pop
adc
out
pop
std
out
jl
movsl
add
cmpsb
and
sbb
test
dec
pop
cmp
scas
push
lock
jne
and
mov
jns
aad
iret
fnstenv
sbb
push
in
push
cmpsb
add
jae
in
mov
scas
jg
inc
or
mov
fisubl
loope
dec
xor
dec
das
cmp
dec
add
mov
mov
aam
jmp
in
ret
cmpl
or
pop
inc
es
lock
outsb
nop
xchg
inc
loope
xlat
mov
shrl
mov
jnp
addb
sub
or
adc
in
jbe
filds
loope
and
out
imul
pop
jo
sub
mov
pop
push
inc
in
and
filds
aaa
inc
rorb
sbb
cmp
cmp
enter
mov
xor
mov
push
loopne
sub
sub
jp
int
imul
mov
sub
dec
scas
sahf
add
sti
andl
mov
mov
xchg
loope
aas
sbb
mov
and
in
stos
lahf
push
sub
iret
aad
int3
xchg
pop
adc
jb
ret
cmpsl
add
cmpsl
jge
into
sbb
lds
xchg
loope
out
inc
or
adc
sbb
fsubs
inc
shll
les
mov
mov
les
pop
add
or
xchg
sub
or
push
push
or
xchg
sbb
clc
jb
and
movsl
sbb
xchg
mov
mov
or
out
pop
mov
loope
daa
cmp
gs
out
inc
hlt
xchg
jno
aaa
inc
out
jge
ss
push
aam
jecxz
shlb
sbb
arpl
mov
mov
call
adc
repnz
jnp
adc
pop
iret
dec
and
out
sub
into
push
scas
in
xchg
jge
ret
pop
jb
cmpsl
js
dec
and
cmp
jg
jns
dec
xchg
loop
test
bnd
sub
mov
insl
mov
add
mov
cmp
mov
leave
push
fnstsw
fs
int
xlat
mov
fdivrs
xor
dec
add
ss
adc
push
sbb
pop
fistpll
call
insl
cmp
inc
dec
leave
pop
jecxz
mov
out
xchg
sub
adc
mov
outsb
sub
enter
sbb
je
jge
lahf
rol
inc
cmpsl
xor
iret
jnp
gs
in
or
lret
stos
or
add
stos
nop
stos
int
movsb
addr16
mov
int3
inc
repnz
repnz
aas
arpl
popa
and
jge
mov
mov
inc
nop
imul
mov
sbbl
mov
xor
gs
dec
dec
cmp
jne
popf
testb
lret
es
repnz
and
out
rcl
std
and
jb
ds
lcall
inc
hlt
outsb
ficoms
fistpll
jl
stc
mov
cmpsl
aam
add
out
notb
jecxz
mov
sti
adc
and
lret
xor
scas
sub
data16
and
fwait
push
lahf
ja
lcall
lret
scas
lret
clc
or
faddl
cmpb
or
mov
in
nop
fldenv
jle
das
mov
fdivrs
sbb
push
loopne
and
dec
inc
push
movl
stos
add
sub
cmc
rorl
shll
sti
mov
fs
mov
lods
int3
xor
add
les
mov
pop
adc
jbe
jnp
fdivp
add
mov
push
xchg
scas
add
div
insl
enter
orb
xchg
fsub
and
aaa
and
xlat
push
fs
or
cwtl
icebp
cmp
adc
sbb
loopne
xchg
scas
insl
outsb
jno
or
or
dec
pop
cmpsb
daa
cmpsb
gs
xor
sub
shlb
jne
insl
and
xchg
push
test
cli
sahf
sbb
imul
pop
ret
stos
in
call
movsb
ret
iret
mov
ss
push
cmp
lods
mov
or
xor
and
or
push
pop
sub
dec
push
out
push
push
cmp
jge
lods
js
add
jne
and
popa
sub
xchg
lcall
fcomip
bound
jbe
jne
insb
mov
xorb
lret
sarl
stos
or
pop
jnp
pop
xchg
push
inc
adc
inc
clc
ret
cmc
ljmp
pop
clc
sbb
pop
stos
sti
push
int3
out
jle
pop
pop
and
int3
sahf
sub
cld
aam
outsb
mov
fildl
xchg
in
shlb
xchg
into
and
into
sub
mov
stc
cmp
pop
xchg
xlat
in
das
xchg
inc
sub
xlat
add
dec
int3
jns
sbb
push
stos
inc
or
xchg
aam
nop
add
xchg
push
sub
lds
mov
and
sbb
pop
cmp
lahf
mov
add
cmp
add
cmp
nop
ja
sub
inc
push
push
add
mov
sbb
mov
pop
repz
dec
add
lods
orl
sub
in
out
cmp
mov
int
ljmp
cld
sub
mov
je
dec
cmp
cs
cmpsl
in
jge
insb
adc
imul
stos
xor
dec
loop
sub
fwait
btl
lds
js
inc
pusha
jmp
cmc
push
mov
movsl
ret
sbb
in
movsl
or
test
enter
pusha
movsb
jbe
push
out
add
or
jl
pop
mov
ss
xchg
cmp
cltd
sbb
add
mov
xorl
inc
sbb
mov
ficomps
jbe
lcall
pop
test
shll
cli
aaa
xchg
jae
mov
push
inc
clc
mov
xor
out
mov
mov
adc
dec
push
scas
sbb
cmp
popa
and
cltd
pop
fwait
pop
push
pop
lock
push
std
cmp
mov
add
fstl
xor
js
inc
xchg
push
mov
ja
jb
add
fwait
lock
insb
lods
cmp
inc
mov
mov
cmp
ds
or
lret
cmc
scas
pop
xchg
push
ret
ss
mov
and
adc
dec
or
sub
cmp
jo
push
iret
jge
lea
cmp
out
daa
inc
ja
mov
cs
push
sub
or
icebp
sarb
cmpsl
shlb
xor
pop
cwtl
rcl
ss
imul
push
sub
xchg
mov
inc
fldt
xchg
xchg
and
in
mov
jg
in
dec
inc
repnz
xor
mov
stc
pop
push
adc
cmp
test
mov
adc
cmp
out
lret
iret
gs
pop
dec
std
cltd
les
jo
test
push
ficoml
or
sbb
cmp
pop
push
push
xchg
xchg
lcall
dec
leave
cmp
mov
pop
mov
enter
repnz
and
mov
cmp
gs
push
cmc
push
inc
outsl
pop
dec
push
insl
xchg
ret
mov
inc
scas
cmp
pop
fldcw
shl
push
pop
and
push
xorb
sbb
int3
xor
mov
xor
std
mov
jbe
inc
mov
mov
xor
mov
sbb
dec
adc
push
mov
fstps
mov
popl
cmp
clc
sbb
mov
daa
rcrb
add
mov
xlat
jns
fidivrs
mov
mov
xor
ljmp
mulb
ss
js
lcall
inc
jg
inc
adc
test
mov
rcl
in
test
aas
pop
hlt
xchg
cmp
sub
cmp
inc
in
fimull
sub
cmpsb
into
jl
dec
outsl
cmc
mov
in
mov
inc
cwtl
cmp
test
mov
leave
dec
je
push
cltd
push
arpl
mov
jns
add
cwtl
mov
mov
lret
hlt
sbb
rorb
cvttps2pi
pushf
into
dec
xchg
dec
cmp
jnp
pop
out
jg
jbe
icebp
in
inc
repz
mov
push
out
cmp
mov
push
sbb
jle
ds
rcrb
stos
icebp
cmpsb
mov
in
out
and
dec
daa
scas
xchg
test
inc
or
push
sbb
test
and
pop
popf
push
notl
sub
cmpsb
pop
jne
or
xor
dec
mov
sub
icebp
jae
scas
or
xor
je
fsub
pushf
fists
push
mov
out
sub
dec
jb
push
das
push
leave
dec
lds
push
pop
out
test
adc
and
fcoms
mov
push
sbb
movsb
add
clc
les
jne
push
les
mov
adc
cld
fsub
in
xor
pop
in
adc
notl
out
int
push
xchg
push
cmp
sub
shll
in
lock
jle
in
or
mov
scas
fldenv
fsubs
lret
sti
mov
sbb
or
cmc
lahf
rep
xor
or
sar
aam
xchg
add
and
add
dec
stos
sbb
mov
aad
jbe
sbb
fidivrs
repz
xor
xchg
in
scas
push
xor
sub
test
push
sub
iret
lahf
in
dec
cmp
adc
notl
xchg
ret
arpl
insl
test
lahf
stos
loope
icebp
out
es
mov
outsl
push
push
push
inc
insb
shlb
call
testl
fcmovbe
mov
mov
pop
add
and
push
lret
jno
jge
out
mov
add
adc
aad
into
cmp
mov
imul
or
fldcw
cmpsl
int3
insl
andl
out
mov
adcl
loop
aaa
mov
dec
sbb
enter
push
add
xchg
bound
cmp
push
cmp
adc
jmp
jg
rorb
ret
test
sub
adc
jo
aaa
xchg
and
icebp
fstps
out
les
adcl
icebp
push
or
fwait
ja
add
fisubs
mov
xor
mov
jns
dec
and
pop
push
jle
mov
xchg
or
cmp
fsubs
cld
cld
pop
inc
lahf
insb
mov
pop
xor
xor
pop
or
xchg
out
aam
leave
sub
shll
push
into
decl
hlt
jl
sbb
iret
rcr
xor
adc
inc
shll
xchg
push
movsb
adc
bound
push
push
mov
sub
dec
pushf
loope
hlt
in
into
subb
sahf
dec
xchg
popa
fs
push
dec
xor
mov
div
xor
out
jle
aam
inc
movsb
fdivs
int3
lods
xchg
hlt
loope
nop
dec
fiaddl
mov
std
and
cmp
fsubr
dec
jb
in
loop
push
push
fidivl
push
jbe
repnz
in
ja
test
cld
inc
scas
insb
scas
in
xor
popf
fbstp
inc
shlb
ret
loop
jne
lods
xchg
adc
iret
adcl
dec
mov
and
sbb
nop
leave
inc
clc
es
mov
dec
push
sub
mov
sti
xor
sub
dec
int
inc
and
fwait
movsb
mov
mov
pusha
mov
mov
adc
es
lret
jb
adc
push
jb
rorl
into
mov
jmp
jno
lods
jo
inc
xchg
fcmovnu
inc
cmp
lea
pop
outsb
lock
mov
push
enter
arpl
dec
sub
pop
pop
je
cmp
and
ss
popf
jae
jecxz
xor
cmp
add
movsl
sbb
es
aad
sbb
mov
add
add
hlt
lret
out
in
or
call
cmpsl
mov
jecxz
pop
enter
movsb
fwait
arpl
mov
mov
sub
xor
lds
cwtl
xorl
idivb
outsl
cmp
mov
pop
mov
jo
jne
fbld
fstps
push
ret
mov
popf
xchg
xchg
push
je
pop
cmp
adc
inc
out
dec
cmpsl
and
lcall
daa
dec
call
mov
cmp
jg
rcr
je
xor
push
icebp
rcrb
inc
in
shll
pop
dec
jl
cmp
movsl
xor
faddp
into
jg
push
adcb
add
pop
std
cld
xchg
test
push
jge
pop
inc
sub
cmp
adc
fnstcw
lret
fwait
xchg
dec
dec
fimull
adc
je
cltd
xchg
mov
mov
sbb
test
lds
jl
aas
inc
inc
enter
out
arpl
xchg
mov
mov
mov
jb
loopne
fdivl
inc
sbb
jnp
popf
js
popa
lret
js
push
fs
adc
mov
dec
mov
rcrb
ror
leave
mov
mov
shr
arpl
nop
in
pop
out
push
movb
dec
scas
sub
pop
aaa
add
cld
xchg
shlb
inc
mov
clc
fcmovbe
jb
cmp
xchg
jge
sub
mov
repnz
fiadds
mov
lret
mov
call
mov
jne
lahf
sbb
mov
addl
pushl
mov
adc
sbb
or
aam
or
sub
in
fs
add
xchg
jle
dec
sbbb
cli
inc
rcll
pop
lcall
jecxz
cmpsl
adc
or
mov
push
inc
xchg
dec
pop
jno
or
xlat
xchg
cmc
pusha
jmp
add
or
ret
enter
or
or
jmp
lea
je
mov
out
lods
mov
fcomp
daa
and
push
mov
hlt
pop
mulb
jl
ret
xchg
push
cmc
inc
jge
hlt
push
sub
mov
adc
mov
adc
or
mov
ja
and
and
lods
jecxz
sub
dec
sahf
jae,pt
pop
pushf
xlat
xchg
cmpsb
xor
sub
push
jb
xchg
mov
in
jp
add
push
cmp
mov
or
sbb
fisttpl
push
push
inc
int
mov
inc
cmpsb
jge
mov
hlt
xor
cmp
out
xchg
add
pop
xchg
dec
inc
test
push
mov
push
sbb
fwait
cmc
sbb
cmp
les
testb
ljmp
mov
add
sbb
mov
dec
add
adc
push
sbb
nop
mov
adc
fwait
adc
and
insl
clc
pusha
jl
cmp
cld
out
xchg
cmp
adc
popf
cmp
inc
adc
jno
arpl
push
adc
leave
clc
stc
psubw
mov
jecxz
adcb
xor
pop
imul
cli
xchg
xor
in
cltd
push
add
daa
mov
pop
testb
jbe
cmp
push
inc
adc
hlt
mov
jmp
jg
adc
jo
xchg
adc
jp
setl
mov
push
jbe
add
insb
sahf
xor
push
loop
adcb
repnz
pushf
jb
iret
loop
test
movsb
sbb
mov
loope
push
gs
cmp
dec
mov
jle
orb
xchg
push
pop
pop
add
call
mov
daa
scas
ds
pushf
lret
gs
xchg
cwtl
ds
and
inc
or
jg
add
mov
and
std
jmp
push
pop
or
push
int
inc
mov
push
ret
add
cld
mov
xchg
nop
loop
imul
mov
sub
push
inc
jle
mov
xor
loopne
cmp
xor
outsb
enter
hlt
pop
int
outsl
movsl
or
leave
clc
stc
sub
xor
or
cmp
cmp
cld
push
cli
push
inc
pop
popa
pop
pop
jbe
push
mov
add
loop
push
fadds
sbb
sbb
rcrl
or
lahf
push
fdivrp
mov
sbb
sti
add
pop
ret
loope
mov
lods
mov
add
push
dec
ss
aad
inc
lret
out
scas
fidivrs
push
dec
adc
das
shrl
mov
imul
leave
cwtl
cmp
jge
out
cmp
and
test
mov
aam
pop
les
bound
jns
xchg
xchg
dec
adc
or
mov
adc
mov
popa
ret
stc
popf
in
test
mov
clc
fwait
stc
andb
add
dec
aaa
pop
outsl
cli
cmp
mov
loop
jno
into
stc
aaa
cld
fst
outsb
cmp
mov
mov
sub
sbb
sub
xor
filds
sub
jo
out
fwait
xor
enter
lahf
mov
mov
stos
rcrl
cli
dec
test
dec
pcmpgtd
gs
sub
stos
cmp
in
mov
popf
cld
mov
sbb
xchg
pop
jl
push
sahf
push
notb
stos
les
in
mov
and
icebp
pop
xchg
iret
loop
jne
out
scas
aad
mov
wbinvd
mov
mov
xor
fxch
popa
jecxz
dec
jae
jno
imul
sbb
inc
and
repz
mov
mov
icebp
cwtl
mov
test
fs
mov
and
cmp
loop,pn
jo
push
add
ss
push
out
fidivl
insl
scas
jle
out
sarb
inc
call
cmp
cmpsl
dec
adc
pusha
bnd
sbb
mov
jno
push
jae
adc
inc
xlat
aaa
mov
mov
mov
ljmp
push
adc
sbb
arpl
mov
sub
mov
test
xor
nop
in
sbb
cmpsb
xor
or
sub
out
add
pop
mov
dec
mov
dec
repz
nop
pop
mov
sub
mov
mov
pop
mov
mov
xor
int3
xchg
sbb
stos
pop
jne
jecxz
out
jb
lahf
imul
ficomps
add
xor
xor
or
enter
mov
xor
cmp
dec
xor
test
lods
out
flds
sbb
imul
arpl
push
in
cmc
add
push
lahf
rcrl
je
ret
bound
stos
xchg
dec
loop
fisttps
mov
pop
stos
xchg
rol
pop
loop
aam
sbb
call
jl
movsl
pop
sub
in
leave
stos
shr
add
ja
int
out
jmp
out
sub
pop
bound
ss
adc
int
insl
and
dec
sub
pop
fcmovbe
or
and
popa
push
ret
pop
ss
daa
xchg
imulb
lret
aad
or
mov
xchg
lret
push
pop
pop
xor
push
adc
in
movsb
cmpsb
cmc
mov
outsl
leave
push
add
or
or
out
xchg
push
test
repz
jb
cltd
mov
hlt
aad
pusha
sbb
mov
mov
lsl
sub
mov
push
movsl
sbb
push
mov
lock
test
test
jg
cmp
fisubrs
jl
and
leave
push
insl
pop
imul
dec
sbb
mov
clc
mov
and
pop
cli
cmp
xor
stc
pop
ret
inc
cmp
aam
in
call
cmpsb
outsl
ret
cmpsl
ja
dec
aas
filds
dec
loope
movl
call
sub
mov
jge
push
jp
dec
mov
xor
push
test
mov
setle
pop
sti
xchg
pop
cmp
jecxz
sarb
insl
loop
mov
jge
ret
in
mov
stc
pop
arpl
mov
aam
lcall
aaa
imul
mov
in
fcmovnb
les
mov
add
cmpb
mov
pop
dec
adc
ljmp
pop
insl
lret
cmpsl
dec
pop
jg
jle
jp
mov
into
outsl
mov
out
mov
daa
mov
out
fcoms
pop
dec
jle
inc
xchg
jo
xor
and
jns
pop
mov
cmpsb
lock
inc
mov
cmp
bound
mov
inc
jno
mov
or
xor
push
or
test
add
in
int
fildl
sub
call
pop
xchg
xor
in
out
push
lods
stos
shrb
cmp
lds
les
cmpsb
and
dec
sub
push
sub
add
test
xor
dec
loopne
sub
xchg
mov
push
mov
stos
fwait
cmc
fwait
or
push
add
rcll
cmpsl
jnp
xor
cltd
jnp
inc
orl
mov
mov
jmp
xchg
jmp
icebp
filds
jnp
xor
icebp
dec
mov
rol
adc
dec
sbb
jns
jb
dec
ret
cmp
add
dec
dec
xchg
ficomps
inc
ret
outsb
add
sti
pushf
jmp
es
mov
cmp
push
xor
rcll
inc
and
sbbb
in
dec
sarl
test
xchg
and
jmp
mov
inc
add
outsl
push
mov
jl
jge
clc
jbe
jp
addr16
je
shlb
xor
fadd
js
mov
and
jl
adc
movsb
mov
leave
hlt
iret
out
mov
sub
add
out
pop
mov
loop
repz
push
mov
cmp
push
movsl
xlat
into
dec
in
jbe
sub
adc
je
lcall
pop
mov
mov
mov
cmpsl
lods
fcmove
sbb
add
mov
adc
mov
std
xor
jnp
mov
or
pop
mov
mov
test
pop
pop
fwait
enter
in
imul
inc
mov
sarl
mov
mov
mov
inc
mov
out
push
gs
cmp
add
jl
cmp
stos
dec
rcll
cld
and
cmc
cmp
out
pop
inc
stc
fcompl
sub
rolb
inc
mov
fcomps
cmp
sub
push
inc
out
dec
popf
jle
jge
lcall
and
add
js
loope
jmp
lds
push
pop
repnz
sbb
test
in
sbbl
out
call
cltd
adc
mov
lods
add
mov
aam
add
jecxz
ret
mov
shll
cli
dec
call
fimull
testb
mov
lret
xchg
add
mov
xorl
or
inc
pusha
test
repz
repz
pfrsqrt
cmp
out
ja
imul
add
xchg
adc
sbb
int3
fldenv
std
mov
js
mov
jmp
test
add
or
les
fisttps
stos
mov
scas
jg
cmp
or
test
outsl
mov
dec
jl
xchg
mov
dec
lods
pop
fisttpll
cmp
cmp
jmp
and
aaa
mov
lahf
loop
adc
adc
xor
sbb
cmp
mov
aas
lret
jg
dec
into
das
dec
lret
loope
jno
cltd
fbstp
mov
popa
mov
inc
adc
iret
push
pop
nop
lods
push
inc
mov
nop
out
ds
icebp
xchg
call
loopne
cmpsl
pop
mov
rorb
cmp
jmp
insb
roll
out
sub
mov
jmp
nop
adc
jge
xor
pop
rol
lock
xor
js
cmp
cmp
lahf
dec
lahf
ja
add
loopne
mov
test
xchg
in
icebp
sub
ret
scas
push
movsl
aaa
aas
mov
sar
push
or
mov
add
ror
movsb
movb
pop
popa
rcll
fwait
or
jb
outsl
xchg
add
inc
ljmp
adc
mov
cmpsb
es
xor
out
aaa
repz
jae
adc
or
int
xchg
iret
repnz
add
inc
ficomps
in
adc
fldl
mov
aad
popa
inc
leave
fwait
xchg
std
mov
test
inc
mov
push
fiadds
inc
or
rorl
scas
shr
and
add
loope
mov
test
mov
mov
popa
rcrb
iret
dec
sub
arpl
roll
and
in
je
je
dec
mov
sbb
iret
dec
outsb
outsb
bnd
inc
pop
xor
mov
push
dec
hlt
std
stos
adc
ja
mov
in
das
dec
and
mov
or
pushf
jne
in
fxam
jns
xchg
int
inc
into
sbb
cld
lea
jns
insb
cmpsb
out
addr16
mov
out
popf
loop
sahf
push
dec
xchg
xchg
arpl
outsl
mov
push
fiadds
cmpsl
fcmovbe
push
shll
jecxz
push
pop
sbb
or
pushf
push
ljmp
inc
pop
loop
data16
inc
out
and
xchg
pop
dec
mov
push
das
sub
ficoml
ss
ret
nop
fimuls
fmuls
lcall
int
mov
mov
gs
imul
in
imulb
jno
stos
xor
incl
lret
push
and
jg
sbb
adc
popf
pop
imul
outsl
jg
outsb
and
push
xchg
or
xorl
cmpsl
cli
and
je
mov
or
je
in
push
iret
push
aas
mov
mov
sbb
xor
add
sti
clc
div
sar
adc
and
push
test
mov
xor
dec
aad
mov
icebp
sbb
dec
mov
imul
xlat
push
aam
dec
adc
imul
pop
push
lods
and
xchg
shlb
push
push
nop
movsb
out
inc
dec
xchg
cmpsb
inc
addr16
repnz
je
cmp
push
roll
xor
cmpsl
adc
dec
jp
rcrl
adc
mov
pop
insl
loopne
lds
lret
pop
pop
mov
adc
sti
aad
rcll
and
fucomp
inc
mov
test
inc
loop
mov
cld
or
push
sub
fcomps
aad
sbb
push
add
insb
in
stos
cmp
or
js
inc
push
incl
pop
into
lods
popa
add
mov
cmp
xor
mov
fisubrl
fnstsw
cmpsl
dec
js
xchg
sbb
jo
jbe
or
out
lods
fwait
mov
int
addr16
jmp
jle
cmp
je
and
push
jmp
sub
mov
popa
adc
jnp
push
clc
push
lea
mov
push
push
mull
mov
and
xlat
dec
cmc
fiaddl
xor
shll
jg
into
shll
mov
cltd
arpl
xchg
dec
add
mov
inc
add
mov
dec
or
je
ret
fs
xchg
or
xchg
shll
scas
test
aaa
inc
in
pop
sbb
jl
inc
xor
loope
and
sub
push
mov
inc
inc
sti
push
push
xchg
movsl
jge
inc
jg
mov
xchg
mov
xchg
mul
push
xor
rcr
pop
js
stos
adc
lods
pop
jbe
into
add
sbb
dec
in
cmp
lock
bound
sti
xor
add
push
fs
loopne
pop
mov
lods
cs
gs
sbb
ret
adc
push
jle
aam
fistpl
adc
nop
dec
push
in
call
sbb
lahf
loop
cwtl
xor
inc
xchg
push
mov
pop
mull
and
andb
dec
jbe
add
inc
xor
test
stos
loopne
pushf
dec
cmpsb
jns
lahf
lcall
cli
mov
mov
lods
out
push
jg
lahf
cs
push
or
cmpsb
mov
dec
xchg
in
and
mov
add
rcl
ss
in
loopne
adc
cltd
mov
imul
push
xchg
pop
jno
and
add
lds
sub
jmp
fistpl
mov
push
popf
pop
pop
jae
mov
mov
cli
testb
lds
dec
xor
lcall
lret
cltd
jg
cmpsb
enter
push
test
lds
cmp
in
jl
cli
shll
or
scas
push
rcll
xchg
insl
mov
popa
or
mov
jge
xor
stc
mov
mov
lods
cs
aam
dec
and
decl
push
call
jo
dec
adc
hlt
push
das
adc
frstor
cmpsl
lret
loope
inc
mov
imul
lahf
fmull
mov
adc
mov
sbb
mov
fs
and
sbb
or
popf
imulb
sub
xchg
mov
and
push
ja
mov
or
dec
enter
adc
mov
jne
jmp
adc
mov
sbb
aas
lods
sbb
xchg
jle
or
das
pop
daa
ljmp
outsl
call
pop
divl
stc
push
int3
push
stos
xchg
adc
push
xor
adc
push
ja
cli
mov
pop
lods
jbe
pop
fcoms
xor
add
cmp
adc
push
push
lcall
gs
mov
push
and
outsb
pop
mov
mov
icebp
ret
xor
or
loope
mov
movsl
sar
jnp
cli
aaa
adc
movsb
xor
rorb
lods
xor
pop
addr16
loope
xchg
mov
lds
dec
mov
ljmp
sbb
jl
inc
call
cwtl
and
data16
mov
pop
mov
xchg
mov
add
push
sub
push
repnz
adc
lcall
lahf
insl
xorb
jns
mov
cltd
jo
mov
imul
daa
out
pop
roll
and
leave
iret
sbb
push
or
mov
sub
iret
inc
stc
lock
xor
push
divl
xor
xor
lods
adc
cld
ds
xchg
sub
push
imul
stos
mov
ss
int3
inc
jno
fmuls
mov
adc
jecxz
loope
in
or
dec
aas
mov
or
and
daa
jp
lahf
scas
cmp
loope
dec
les
push
and
mov
cmp
mov
xor
call
fstl
outsl
xor
and
shll
stc
cs
aad
in
cmp
xchg
test
popa
push
cli
ret
sbb
lods
inc
xchg
adc
add
and
sbb
outsb
bound
dec
sub
mov
jb
shll
test
pop
cmp
icebp
mov
pop
inc
inc
ss
addr16
daa
sbb
cmp
mov
pop
out
add
mov
movsb
adcl
dec
jp
jae
ror
hlt
adc
divl
insb
nop
push
mov
les
push
add
mov
cmp
stos
inc
das
mov
fisttps
dec
fs
mov
cmpl
lock
imul
enter
ss
cmp
add
enter
mov
sub
leave
dec
sbb
stos
hlt
leave
mov
mov
flds
vpaddsb
jl
inc
sbb
jne
xchg
push
mov
cltd
imul
popl
outsl
subb
dec
and
jno
jmp
inc
incl
adc
pop
or
bound
lret
mov
push
cmp
movsb
pop
adc
jnp
popf
xchg
enter
out
movsl
test
shr
stos
and
mov
lods
sub
add
fdivrs
cmc
fs
xchg
inc
and
mov
ret
aaa
xchg
push
scas
pop
xor
mov
test
push
je
mov
mov
add
or
test
jnp
mov
scas
sahf
clc
call
outsb
jbe
punpckhdq
fcom
loop
jl
and
inc
js
aas
lahf
inc
js
dec
in
inc
add
int3
push
dec
into
cli
cltd
loopne
xorb
rcrb
cmp
scas
add
stos
subb
pop
cltd
mov
jg
mov
mov
xor
jno
sbb
and
int3
push
inc
aaa
pop
xor
pop
movsl
ja
mov
ja
les
int3
dec
stos
xor
push
je
bt
pop
clc
cmpsl
rol
lock
sub
subb
add
inc
jns
sti
outsl
sub
xchg
sahf
xchg
loop
mov
sub
stos
pop
and
lret
out
je
pushf
sub
ffreep
or
aas
cmp
std
jecxz
and
enter
pop
cmpsl
outsl
rcll
xlat
cmp
cs
xor
pusha
mov
in
jl
insl
rcrb
jne
in
lret
mov
adc
in
mov
rorl
insl
shlb
into
or
ds
xchg
lea
inc
dec
rcr
lahf
les
xor
sti
daa
pop
xor
lock
pop
adc
mov
cmp
xor
imul
in
xor
xor
imul
loopne
sub
or
dec
mov
jp
pop
imul
loopne
or
out
popl
bound
std
sbb
orb
setle
push
xlat
xchg
or
pop
test
xchg
mov
pushf
sub
dec
pop
out
adc
mov
cmc
xchg
call
es
popa
cmp
mov
inc
push
cltd
and
and
jne
mov
stos
xorb
lea
push
sbb
push
addr16
cmp
leave
rcrb
stc
adc
idiv
jp
dec
mov
out
pop
dec
mov
imul
cmp
imul
sbb
mov
push
sub
outsl
mov
test
lahf
lahf
mov
and
mov
lods
and
pop
sbb
sbb
sbb
pop
mov
icebp
cld
sub
lret
dec
cltd
test
or
jp
xchg
mov
shll
loop
mov
add
mov
fisttpll
mov
fisubs
fsubrp
out
xor
lahf
mov
daa
xchg
mov
mov
js
mov
jno
and
dec
jg
sbb
mov
cmp
add
stos
cs
fisubs
push
popa
adc
xor
out
cmp
icebp
mov
in
imul
pop
dec
pop
or
push
add
xor
sub
cs
jne
lock
mov
add
pushaw
hlt
lock
jns
push
cmpsl
mov
xor
mov
mov
add
and
aam
mov
mov
cmpsb
in
mov
pop
push
repnz
dec
mov
mov
imulb
subb
lret
sub
loop
fs
ret
xrelease
pop
push
pop
call
loop
aas
movsb
scas
data16
jp
popl
cmpsb
or
pop
mov
lea
jnp
stos
lret
das
jns
jnp
scas
cmp
mov
or
in
xor
inc
call
decl
pop
inc
xchg
repnz
inc
dec
mov
sub
mov
testb
pop
es
sub
xor
iret
icebp
addr16
outsb
and
and
iret
adc
outsl
jmp
pop
sub
fldt
mov
mov
inc
adc
dec
mov
out
lods
ja
jp
outsl
push
sbb
rcr
nop
aaa
inc
xlat
push
xor
dec
imulb
aad
mov
push
xchg
adc
add
cmp
xchg
popa
cmp
or
sub
push
aad
mov
sbb
push
lea
xor
out
mov
and
pop
mov
fistpll
test
repz
ljmp
gs
sti
jmp
ds
add
test
ljmp
movsl
nop
mov
ja
jl
movsl
out
and
sbb
sti
mov
imul
fidivl
mov
xor
leave
mov
lock
ss
mov
sbb
mov
jge
cmp
into
adc
dec
mov
je
push
push
mov
sub
rcrb
xor
cmp
adc
adc
js
loopne
pop
add
mov
mov
repnz
aam
popf
shlb
outsl
inc
push
pop
jb
mov
inc
mov
fimuls
xchg
xchg
in
imul
rcll
ds
ss
ss
cmpsb
add
adc
jle
xchg
mov
lcall
mov
xorb
cmp
stc
ja
inc
push
lds
outsb
arpl
cmp
cmpsl
push
add
dec
lcall
and
lods
dec
cmpsl
mov
cmc
addb
jg
pusha
dec
mov
inc
aaa
lods
cmp
js
pop
add
mov
pusha
int
pop
aaa
xor
pop
mov
pop
decl
inc
sub
jae
outsb
ret
and
shlb
sbb
push
fisubs
pusha
and
or
push
sbb
adc
in
push
or
dec
push
ss
pop
les
lock
test
jb
pop
adc
sub
fisttpl
mov
mov
pop
pavgw
xchg
cmp
xchg
mov
fistpl
cmp
or
mov
out
jnp
aad
inc
popa
jne
lcall
xor
and
mov
sbb
in
and
stos
nop
aam
shr
in
cmpb
inc
adc
jbe
repz
jo
mov
arpl
jbe
and
add
sub
sub
nop
es
pop
adc
mov
sbb
cmpb
pop
push
xchg
push
dec
repz
push
cmpb
jmp
outsl
dec
pop
cmp
push
sub
mov
lcall
bound
jg
cmp
in
pop
jb
mov
jecxz
add
ja
movsl
cs
xlat
pop
pop
xor
pushf
jp
je
das
jbe
dec
mov
cmp
jp
xor
xor
pop
push
fisttpl
sti
sub
mov
inc
mov
or
rcrb
or
addb
xor
xchg
ret
mov
in
lahf
and
imul
dec
add
incb
jle
movsb
push
insl
jb
jle
or
add
sub
xchg
adc
adcl
lgdtl
adc
dec
cmp
jl
lods
repz
ficompl
sbb
mov
dec
xlat
int3
pop
mov
fs
jmp
mov
or
sub
cmp
imul
sbb
ja
adc
add
imul
movsl
jmp
cmp
xor
lods
dec
jmp
add
fwait
std
pop
jg
push
es
xlat
mov
imul
mov
stc
sbb
aad
add
lret
rcrl
mov
lret
lret
in
xchg
in
loop
jns
push
cmpsl
stos
xor
nop
jmp
iret
negl
mov
and
add
and
cwtl
fstpt
aas
mov
ret
fsubs
pop
or
push
popa
addr16
cmpsl
cld
test
lock
dec
movsb
jg
jecxz
cs
xchg
imul
rclb
scas
dec
repz
fwait
mov
and
jmp
sahf
add
out
pop
mov
das
xlat
and
mov
les
imul
dec
push
add
fadds
pop
dec
mov
mov
cmp
icebp
sub
or
daa
mov
decl
mov
push
shlb
adc
adc
xchg
inc
xchg
add
je
imul
adc
imul
cmpsl
loope
sbb
dec
jns
jp
cmpl
add
adc
xor
data16
sub
mov
cmc
cs
cmpsl
out
out
dec
dec
cmp
faddl
addr16
xchg
xchg
stos
cmp
ds
sbb
push
inc
dec
roll
cmpsl
push
imul
sub
out
mov
lds
sti
dec
jmp
lds
xchg
cmp
cld
inc
or
and
dec
rcrb
jo
mov
push
fwait
lea
sub
or
incl
lcall
es
xor
pop
xor
lret
xchg
sub
or
pop
mov
mulb
fidivrs
das
cmp
add
int3
jl
pop
arpl
fldl
cld
xchg
sub
sbb
sbb
push
pushf
sbb
mov
lahf
xchg
xor
cld
stos
ffreep
hlt
jb
jl
loope
sub
jmp
mov
negl
adc
test
stos
int
std
and
js
test
daa
or
lock
sbb
loope
bound
and
fwait
jle
mov
xor
iret
in
mov
mov
or
pandn
push
mov
in
je
sbb
pop
jnp
pop
repnz
jo
mov
xor
aas
pop
les
xchg
push
sub
mov
fisttpll
int
dec
insb
pop
adc
stc
lock
dec
in
cmp
shll
dec
sub
xchg
and
mov
add
inc
mov
xor
push
aad
stos
scas
sbb
into
sub
out
and
lods
add
mov
sbb
and
daa
cli
mov
add
mov
dec
pop
nop
or
inc
add
and
push
pop
mov
push
jae
sahf
cmp
ret
mov
gs
sbb
mov
in
inc
mov
aas
dec
mov
sub
cmp
cltd
lahf
test
fwait
mov
sub
add
repz
inc
int3
out
cmp
popa
pop
mov
push
xchg
sbb
test
scas
sbb
push
sbb
pop
and
fwait
mov
xor
popf
push
mov
jecxz
xor
jle
aas
xor
popf
cli
in
push
lds
jae
push
pop
cs
lock
xchg
pop
mov
add
cltd
fistps
sbb
jno
jmp
nop
ret
add
push
ljmp
xlat
jp
pop
rclb
stos
test
mov
sbb
fs
data16
xchg
icebp
xchg
push
aaa
and
inc
mov
jl
sbb
pop
in
addr16
lret
pop
cmp
stos
rcl
pop
push
ljmp
subw
push
clc
dec
pop
mov
sub
xor
mov
insb
jg
movsl
test
cli
pop
call
mov
dec
ja
jne
and
repnz
fdivrs
cmp
iret
push
repz
hlt
xchg
push
mulb
mov
inc
jne
jnp
mov
xchg
inc
in
and
dec
cmp
mov
imul
frstor
jbe
xchg
or
ret
out
sbb
hlt
dec
movsb
ret
jecxz
pop
xchg
xor
dec
jle
mov
dec
jecxz
fisubrl
mov
shlb
jne
and
fs
int
pop
into
sahf
loop
add
leave
cs
cmpsb
sbb
fisubs
xchg
fmulp
hlt
lea
cmp
lahf
jo
jne
mov
or
inc
fidivrs
shr
decl
xor
clc
gs
mov
jecxz
cld
dec
mov
mov
lock
mov
lahf
int3
inc
in
movsb
sbb
add
sbb
stos
js
inc
test
mov
das
pop
pop
mov
loopne
iret
ret
bound
cmpsb
adc
and
pop
dec
nop
fprem1
dec
notb
orb
int
pop
dec
xchg
jo
pushf
xchg
xchg
or
mov
outsb
loope
idivb
lods
adc
push
sub
aad
les
pushf
outsl
gs
stos
cmovle
fs
std
mov
ds
cld
mov
stc
add
jae
test
push
jl
imul
dec
sbb
cmc
imul
inc
icebp
lcall
push
into
push
and
inc
mov
popf
jg
inc
sub
inc
push
cmp
fs
dec
ljmp
jnp
inc
call
pushf
jb
sub
je,pt
inc
pop
push
repz
mov
je
dec
mov
std
sub
pop
movsl
xor
dec
dec
mov
dec
push
lcall
repz
lock
stos
push
pop
lahf
insl
push
divl
mov
pop
adc
xchg
rorb
loop
jnp
mov
test
push
jge
jp
shr
inc
int3
sbb
stos
pop
ss
les
test
mov
bound
mov
jns
aad
daa
adc
sub
movsb
dec
rcr
mov
aas
mov
popa
ror
sti
xor
xor
inc
arpl
iret
shll
iret
mov
xchg
enter
mov
ja
dec
cltd
adc
push
inc
and
sbb
sbb
xor
in
int3
add
cmc
in
and
pop
pop
int3
cmp
jmp
test
cmp
outsb
pop
push
maskmovq
negl
dec
mov
cwtl
loop
adc
cmp
mov
dec
cmc
insl
loop
lahf
jb
in
lret
shrl
nop
xor
data16
mov
jo
push
and
and
fcmovnu
jnp
cmp
outsb
sub
or
mov
xchg
mov
test
push
mov
push
jb
cmp
test
dec
add
clc
jne
int3
orb
xor
shrb
lcall
adc
call
mov
popf
pop
repz
pop
ss
fsts
or
test
mull
stos
xchg
or
movsl
cmp
or
cwtl
lds
jae
mov
mov
std
and
call
inc
push
sbb
lahf
inc
mov
je
in
or
cmp
jno
xor
sbb
mov
icebp
sub
aas
jg
jmp
xchg
or
lret
outsb
icebp
inc
roll
mov
insl
mov
jge
imul
mov
inc
push
je
mov
sti
lret
sbb
mov
ja
inc
pop
das
aas
stos
adc
mov
ja
mov
mov
orl
inc
pop
out
inc
call
adc
mov
xor
and
lock
pop
lds
mov
xor
dec
mov
out
pushf
jmp
push
movsl
jl
pop
arpl
pop
inc
int3
aad
lret
adcl
es
fildl
xor
insb
pop
movsb
adc
scas
mov
neg
mov
push
scas
push
shl
lret
ja
adcb
fstpl
stc
or
cld
ds
jg
sbb
push
int3
sahf
pushf
pushf
pop
push
cs
mov
mov
int
ficomps
jbe
push
pop
mov
loopne
add
test
in
addr16
mov
insb
mov
testb
jbe
mov
lea
sub
jl
mov
aaa
jbe
ja
pusha
fidivrs
shll
or
scas
sar
pop
sub
jo
push
mov
jns
mov
mov
int
push
mov
scas
xchg
shrb
aas
repnz
in
out
dec
shll
test
fs
or
push
mov
and
insl
mov
mov
fsubs
dec
push
cmpl
imul
or
push
dec
call
mov
movsl
outsb
repnz
xor
aam
stos
mov
les
aad
push
xlat
or
in
daa
enter
xchg
aas
xor
movsl
sub
loop
int3
cld
push
mov
cmp
mov
push
xchg
decb
pushf
mov
dec
addr16
and
sbb
xor
or
fs
jne
and
and
ljmp
dec
shrb
ret
sbb
xlat
mov
or
imul
arpl
test
or
sar
xchg
es
dec
mov
into
cmp
ret
andl
int
xchg
xor
pop
xlat
es
pop
push
cmp
push
cmp
fisubrl
xchg
inc
and
mov
int3
cmpl
aam
push
cs
sub
mov
jg
pop
hlt
sbbb
lods
mov
inc
mov
shlb
shll
clc
filds
add
jbe
push
fisubs
mov
mov
or
test
jp
mov
adc
mov
sarb
mov
cmp
push
cmc
pop
push
and
or
subb
scas
push
add
repnz
mov
cmc
cs
cmpsb
movsl
fisttpl
insb
push
arpl
jl
mov
fsubl
sbb
mov
sub
xor
cmpsl
push
rorb
jae
inc
test
dec
sarl
mov
mov
aaa
mov
cld
push
out
gs
sbb
icebp
or
mov
add
out
faddp
jnp
xchg
mov
mov
iret
lods
xor
loopne
jp
pop
mov
hlt
xor
decb
les
outsl
or
sbb
shrb
rclb
ret
or
scas
hlt
leave
and
xchg
iret
aas
jge
test
mov
mov
in
shll
test
add
aaa
outsl
lea
xchg
pusha
cltd
mov
les
gs
lods
xchg
addr16
mov
loope
ljmp
pop
cmp
or
loop
ja
jae
adc
outsb
jb
sahf
pop
pop
cmp
pop
inc
sub
cmp
popa
adc
es
pusha
lahf
leave
push
inc
lock
add
lods
xlat
loop
lret
popf
rcrb
and
adc
lods
les
push
dec
test
out
stc
repz
fsubs
mov
imull
pop
pop
cmp
mov
rcr
sbb
xchg
jle
inc
mov
adc
add
shlb
inc
mov
cmc
out
lea
xchg
mov
rep
mov
pop
pushf
popa
pop
cmp
pop
sub
mov
dec
dec
rcl
or
cld
jne
and
pop
add
mov
xor
popf
pop
test
add
lret
jp
adc
sub
loope
mov
pusha
cmp
inc
jbe
mov
jne
fcompl
mov
xor
and
and
xor
mov
stos
adc
mov
add
lret
mov
mov
jp
push
fiaddl
xor
stos
adc
or
cli
or
lea
stos
mov
fmull
jno
sub
fs
adc
pop
xor
into
mov
jnp
lea
cmpsl
adc
icebp
pop
sbb
sbb
xor
test
iret
and
sbb
or
xchg
test
sub
mov
fdivl
xchg
es
popw
test
imul
sub
pop
frstor
cli
mov
daa
mov
mov
cwtl
cmp
int
pop
xchg
cmp
mov
sub
mov
loopne
xor
jl
or
mov
movsb
jg
cmpsl
jns
icebp
xlat
mov
popa
fdivl
xor
mov
inc
push
mov
int
or
add
mov
sbb
std
xchg
cli
pop
lea
xchg
and
ret
cwtl
push
mov
cltd
or
repz
popf
push
cs
jmp
push
sbb
dec
shlb
sub
popf
mov
nop
cmp
les
lods
rcr
imul
xchg
in
cmpsl
dec
fadds
data16
rorb
inc
enter
fwait
jae
mov
rolb
push
push
pop
stos
scas
add
repnz
daa
mov
sbb
fwait
pop
fisubrl
out
jecxz
xlat
inc
dec
push
bound
xchg
inc
xchg
cmpsb
dec
aad
repnz
xchg
pop
adc
xchg
popf
enter
mov
fs
push
jl
ds
adc
sahf
xchg
sub
jge
outsl
push
nop
std
jnp
xor
lret
dec
das
fidivrs
lods
push
call
pop
inc
js
and
gs
mov
xchg
out
add
push
or
pop
stos
pop
out
or
inc
inc
mov
and
repnz
add
xor
jae
ja
jecxz
test
mov
dec
push
repz
mov
rclb
xor
leave
rcll
cmc
jp
pop
ret
test
add
jns
repz
popa
outsl
rol
jg
mov
push
add
sub
inc
cwtl
mov
imul
xor
inc
adc
inc
mov
sbb
out
in
ljmp
or
cli
imul
je
movl
xchg
sti
xor
enter
sar
jge
mov
add
test
sub
jns
or
push
ljmp
push
enter
add
xchg
jle
stos
lods
mov
pop
adc
cmpsl
ja
out
ret
add
and
jbe
mov
push
mov
jbe
mov
or
mov
push
dec
ja
inc
or
and
pop
push
bound
sbb
and
add
nopl
bndldx
aam
dec
or
mov
test
clc
in
pusha
iret
add
cltd
or
mov
cmpl
pop
pop
fcmovnu
push
add
and
xchg
push
arpl
mul
pop
mull
push
or
mov
inc
jnp
and
mov
add
mov
aas
imul
mov
das
adc
mov
push
push
xor
xor
gs
sbb
xchg
imul
or
and
pop
mov
xor
in
hlt
jns
xor
arpl
imul
outsb
shlb
out
sub
jge
dec
nop
mov
popa
jb
inc
mov
sbb
pop
iret
or
or
mov
mov
jmp
fmuls
push
fsubr
or
loop
rcrl
outsb
iret
addl
dec
lods
cwtl
xor
movsl
or
or
ss
mov
xor
mov
xor
mov
in
mov
ret
add
lret
clc
idivl
pop
fnstcw
cmc
dec
mov
xchg
movsb
bound
xorb
sbb
sub
shrl
fldl
add
leave
outsb
outsb
mov
dec
imul
lods
push
or
push
and
mulb
xor
add
xchg
dec
test
mov
ja
adc
sbb
enter
jbe
lods
sbbb
fstp
xlat
sbb
cli
push
in
cmp
rclb
inc
dec
inc
ret
lods
mov
add
popf
pop
mov
data16
jnp
cmc
sub
test
mov
sbb
mov
xchg
ss
stos
mov
lods
aas
inc
xor
les
adc
mov
enter
fsubrl
push
out
mov
jmp
int
xor
sbb
in
paddb
pop
mov
test
out
dec
xchg
dec
pop
call
cld
popf
and
loopne
jnp
inc
shll
xlat
test
sbb
out
adc
mov
pop
mov
test
cli
mov
mov
enter
fmul
clc
xor
mov
aad
mov
cmp
mov
pop
sbb
xlat
mov
push
aaa
dec
out
fs
leave
mul
out
out
push
or
pop
insl
and
scas
into
call
sbb
dec
mov
push
bound
lds
sub
sbb
stos
int
mov
mov
int3
inc
xcrypt-ctr
cmpsl
pop
and
out
aaa
sahf
int
sti
ret
dec
je
mov
jle
add
cmpl
in
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
addb
cld
popa
bound
bound
push
movsl
dec
xor
push
decl
push
mov
xor
bound
inc
add
into
nop
js
mov
mov
xchg
or
mov
in
mov
adc
andb
push
pop
lea
mov
pop
or
pop
and
outsb
and
dec
lods
andl
xor
cmp
push
test
mov
inc
dec
mov
jne
pop
icebp
jne
and
outsl
xchg
mov
movsl
mov
popf
stos
cwtl
cmpsl
pop
mov
push
add
cs
test
bound
daa
push
jbe
dec
or
stc
ret
xchg
cmp
shlb
nop
repnz
jo
push
aam
lret
sub
lods
stc
fsubrl
pop
xchg
out
xchg
xchg
lock
xor
pushf
push
subl
add
jge
mov
lret
int3
loopne
pop
in
sbb
in
iret
shll
daa
xor
mov
in
mov
sbb
pop
test
dec
jne
sub
and
aaa
mov
cmp
adc
mov
loop
imul
xor
push
mov
popf
inc
out
jle
ret
sub
bound
mov
push
cmc
xor
xor
sub
adc
mov
mov
icebp
mov
mov
fs
lods
nop
jno
call
popf
jecxz
adc
mov
sbb
push
dec
inc
jb
push
test
mov
adc
push
inc
adc
iret
mov
pop
sahf
jg
mov
lcall
or
mov
in
lods
jecxz
mov
std
lahf
imul
imulb
setb
sub
cli
jmp
jge
mov
pushf
ficoms
fwait
cwtl
xor
inc
xadd
fisubl
xlat
je
lret
mov
mov
mov
jecxz
dec
test
xchg
mov
push
push
in
mov
test
outsl
pop
es
inc
sti
mov
cld
sbb
ss
mov
xchg
fs
sti
in
dec
inc
scas
inc
shrl
scas
push
idivl
jge
jnp
call
add
and
adc
add
pop
add
or
mov
lret
mov
std
jns
int3
pop
fstl
push
sbb
leave
jo
test
fcmovu
fs
inc
dec
fidivs
push
mov
or
inc
outsl
pop
sahf
add
loopne
dec
scas
jo
xchg
lds
push
adc
imul
sbb
shlb
cmpsb
adc
adc
dec
push
adc
push
dec
jge
pop
leave
mov
push
inc
dec
jp
out
mov
lods
and
fwait
stos
scas
sbbl
pop
insl
or
mov
xchg
pushl
movsl
mov
sbb
mov
pop
repnz
or
das
aam
and
or
loopne
daa
sub
testl
mov
cmp
add
cltd
rcrb
sarl
and
sub
fisubrs
mov
outsb
and
mov
daa
shr
cmp
sbb
pop
popa
pushf
push
shr
jne
clc
aad
imulb
adc
subl
sbb
shrb
test
mov
jmp
mov
mov
push
cmc
mov
sti
in
shrb
cmp
add
test
or
inc
cld
mov
xor
jno
fcmove
lods
adc
lcall
inc
sbb
pushf
sbb
sub
xor
dec
test
sbb
adc
mov
sbb
popf
shr
imul
inc
xor
dec
leave
bound
or
testb
pushf
in
jno
scas
imul
or
jns
insb
mov
and
push
cli
out
cmc
rcll
rclb
jnp
das
mov
mov
pop
and
lret
cmp
pusha
sub
addb
test
cmp
leave
fsts
sub
sar
jl
mov
xchg
inc
or
in
add
aaa
pop
mov
stc
pushf
sti
pop
ret
cmpsb
scas
lret
data16
dec
mov
sbb
ret
inc
dec
xchg
icebp
int
mov
adc
lea
sti
subb
xchg
out
dec
push
loopne
or
into
jo
repnz
push
mov
popa
mov
imul
es
pushf
add
jne
and
adc
inc
into
add
pop
sti
pop
push
call
test
addr16
out
int3
xor
sub
aaa
shl
lods
xor
adc
mov
ljmp
insl
fs
cld
jns
in
push
or
pop
jg,pn
bound
dec
inc
or
lret
lret
cwtl
mov
fwait
imul
jne
push
fadds
mov
adcb
push
mov
xor
xchg
ljmp
and
ret
pop
mov
fists
dec
scas
push
fwait
enter
adc
xchg
mov
cmp
or
sbb
inc
pushf
mov
das
cmpsb
sbb
push
divps
pop
inc
xlat
add
subl
adc
push
imul
xchg
ret
mov
dec
stc
sub
jecxz
push
mov
push
dec
cmpb
or
mov
jno
hlt
dec
outsl
les
test
push
mov
cmp
cmp
call
sub
xchg
fdivr
pop
cmp
outsl
rcrl
add
ret
cmpsl
adc
cmp
jo
sub
repz
mov
repnz
in
mov
ret
shrl
push
std
cmp
rorb
cmpsb
aad
clc
push
push
ss
xor
pop
inc
mov
and
mov
cmp
fsubrs
outsb
jns
and
fbld
repnz
jmp
popf
and
and
sbb
jmp
iret
pop
xor
jmp
jne
mov
push
arpl
mov
mov
fiadds
out
loopne
fdivs
inc
push
fsubs
pop
inc
mov
sbb
popf
push
mov
mov
push
mov
xchg
jmp
push
or
pop
xor
adc
fcoml
jne
insl
and
out
or
jb
sub
ror
fdivr
mov
and
lret
arpl
or
das
testl
xor
rcr
lret
jmp
xchg
mov
daa
sahf
pop
repnz
xchg
pusha
mov
jne
cltd
inc
sub
sub
add
mov
js
mov
cwtl
mov
imul
dec
in
push
lcall
movsb
sbb
jge
sub
imul
cmpsl
daa
xchg
sarl
je
lods
mov
xchg
jno
popf
dec
push
jecxz
mov
gs
fwait
xlat
fnstenv
xchg
mov
and
out
mov
movsb
adc
and
sbb
inc
pop
push
andb
mov
fistps
inc
imul
mov
xor
ficoms
push
inc
daa
pop
sub
loop
pop
cmp
out
add
outsb
test
push
rcrb
ret
adc
xor
loop
insb
jl
adc
jmp
notl
pop
push
cmp
mov
jno
pusha
pop
scas
sbbb
cmpsb
das
lret
jae
push
inc
adc
push
lret
fsts
inc
das
xor
ret
cs
cmp
aas
out
or
mov
sub
and
cmp
stos
mov
fldcw
dec
imul
insl
pop
mov
inc
pop
out
ret
push
xchg
dec
cmp
out
jge
aad
gs
xchg
xlat
aaa
cs
pop
shrl
fwait
mov
and
loop
push
cli
push
xor
mov
movsb
loop
sahf
xchg
addr16
cmp
xchg
cmp
sbb
mov
ret
nop
inc
and
lods
fstl
dec
fldcw
lret
aaa
push
ljmp
stos
or
dec
movsl
sahf
jnp
jae
push
in
daa
mov
cmpl
roll
int
xor
int
fists
push
adc
pushf
lret
push
sub
inc
jo
dec
adc
mov
cmp
xlat
adc
outsl
dec
shlb
scas
fsub
mov
scas
pop
scas
test
push
jnp
push
or
mov
rolb
jle
push
testl
frstor
add
mov
or
pop
mov
lahf
sti
fdivrs
ret
push
int3
stos
xchg
and
dec
scas
push
xor
aad
pop
cli
jno
imul
cmp
sbb
xor
xchg
lea
subl
xchg
lds
fisubl
xchg
jmp
shlb
sti
pushl
xchg
pop
ljmp
mov
or
mov
push
inc
push
loop
pop
cmp
add
sub
loop
lock
and
sti
les
pop
adcb
jle
jecxz
aaa
fnsave
dec
shlb
in
vpsllq
fdivr
movsb
add
mov
out
xor
test
fwait
cmpsl
rorl
sbbl
pushf
pusha
xchg
xor
adc
sub
scas
ficoml
mov
rcll
in
dec
lds
add
daa
ret
loop
inc
sub
repnz
lret
sub
mov
fiaddl
clc
add
test
nop
cmp
fisubl
js
dec
sbb
mov
mov
cmpb
aaa
rolb
jno
lahf
push
ud2
fs
loop
add
scas
mov
jl
dec
clc
inc
inc
loopne
xor
sub
push
jecxz
mov
or
and
enter
popa
jb
xchg
les
in
bound
js
push
outsl
sarb
xor
shrl
pop
ljmp
mov
insl
loop
subl
sub
es
adc
adc
push
add
push
inc
adc
mov
xchg
or
pop
loop
mov
mov
push
jl
xchg
repz
fs
push
insl
adc
cmp
or
mov
ss
loope
xchg
lea
push
fsub
xlat
xor
push
cld
jmp
test
aad
les
filds
iret
lahf
scas
stc
scas
jne
jno
inc
dec
mov
push
or
mov
ja
mov
inc
rolb
cs
inc
adc
daa
push
fildl
push
xchg
mov
and
push
adc
aad
mov
jg
sti
rolb
sbb
lock
popf
outsl
push
cmp
mov
pop
xchg
jbe
hlt
cld
std
sub
lret
call
or
cmp
sbb
adc
dec
js
jnp
sbb
leave
in
std
cs
scas
xchg
or
and
sub
push
jmp
daa
pop
and
imul
int3
bound
ret
fs
cmp
pop
jne
push
mov
icebp
popa
call
mov
jo
addr16
ficoml
lret
mov
fsubrl
dec
in
ja
pushf
arpl
int
xchg
pusha
les
outsl
xlat
mov
ja
and
and
sbb
xor
enter
adc
dec
incl
dec
sbb
stos
or
repz
xor
dec
xor
lret
pushf
xchg
sahf
daa
pop
sbb
shl
cmp
push
push
imul
inc
subl
neg
inc
pop
inc
out
scas
dec
js
push
and
call
dec
lods
aas
xchg
dec
lret
les
imulb
adc
fadds
lods
test
dec
jnp
sub
mov
xchg
dec
sbb
das
and
fcmovbe
enter
push
cmp
xlat
icebp
std
mov
bound
mov
outsb
loop
cmp
cmc
push
add
sub
roll
outsl
in
and
jmp
in
movsb
mov
and
popf
mov
mulb
stos
repz
loop
ret
pushf
dec
imul
and
sub
xchg
and
insb
and
repz
jbe
aaa
mov
sub
ret
das
sbb
jns
mov
fwait
xchg
mov
and
in
sub
push
ds
cld
add
inc
cmp
outsl
fs
aad
lahf
add
ja
das
pushf
mov
push
sub
lods
ficompl
sbb
subb
into
mov
dec
jl
test
mov
xor
stos
inc
and
ljmpw
inc
pop
push
mov
cmp
and
cmp
cmp
jno
cmpsl
dec
nop
lret
jns
pop
inc
sub
subl
daa
adc
pop
xchg
mov
mov
sub
fidivs
dec
adc
loope
rorl
aam
les
push
pop
lods
imul
outsl
ret
adcl
xchg
pop
jne
insb
imul
fs
pushf
jo
adc
rcrl
incl
dec
out
int3
or
arpl
or
mov
mov
and
in
cmc
fwait
cwtl
push
sahf
ja
cmp
sub
jecxz
or
xchg
ret
add
aaa
jae
mov
mov
scas
jb
mov
cwtl
cmpsb
fiadds
decl
cli
movsl
mov
cmc
ja
inc
std
mov
pop
adc
jecxz
stos
pop
inc
out
xchg
in
pop
and
mulb
push
call
and
xor
mov
fildll
sub
adc
cmpsb
mov
dec
scas
addr16
jno
cmpsl
pop
cmp
or
outsb
out
push
shll
popf
es
add
dec
out
fcmovbe
clc
jae
div
pop
cmp
imul
int
repz
ss
mov
mov
cmp
aam
add
cmp
xchg
into
fildl
imul
dec
repz
int
sti
xchg
mov
js
mov
pop
xor
cld
mov
mov
neg
jae
ficoms
mov
popa
loop
jne
lods
sbb
out
fidivs
fistpll
mov
fildll
sbb
and
xor
jno
and
ljmp
filds
cmp
mov
xor
insl
inc
in
mov
xlat
stos
mov
insb
insb
lcall
dec
pop
jne
and
and
ds
add
mov
push
inc
es
bnd
adc
xchg
stc
hlt
jp
xor
movsl
push
into
adc
sbb
and
mov
ljmp
push
rcr
mov
iret
jne
or
xor
out
pop
into
pop
jo
ja
xor
push
inc
adc
inc
movsl
sub
lfs
out
push
nop
lods
mov
xlat
int
int
jl
cmp
insb
jb
push
cmp
test
cli
inc
xor
aam
xchg
dec
xor
pop
xchg
mov
addr16
mov
mov
mov
mov
sub
lea
bound
sbb
pop
es
imul
jl
loop
ljmp
pop
test
fstpt
les
syscall
leave
pop
pop
jbe
and
lods
fs
pop
xchg
mov
sub
or
enter
in
adc
int
scas
sbb
cmp
outsb
xchg
xchg
xchg
xchg
rorl
xor
popl
mov
inc
adcb
push
imull
jnp
mov
add
cli
add
xchg
adc
mov
inc
stos
les
push
push
in
and
lret
dec
pop
movsl
addl
push
cwtl
mov
push
jb
jmp
mov
lods
mov
sub
inc
imul
adc
or
and
dec
adc
js
lea
lret
std
sub
orb
sbb
daa
mov
testb
dec
sub
jno
frstor
xlat
rcrl
cmp
cmp
adc
add
and
pop
mov
inc
inc
ljmp
scas
mov
repnz
cmp
xor
pop
notl
les
cwtl
nop
sti
jmp
fiaddl
inc
push
shrl
xchg
pop
mov
nop
jnp
xchg
orb
add
pop
jae
mov
clc
or
lahf
call
jnp
inc
daa
mov
add
or
jo
scas
jle
hlt
int
iret
push
jge
jp
pop
xchg
mov
mov
fstpl
data16
insb
adcl
mov
repz
push
mov
bound
xor
xchg
out
sbbb
jmp
adc
pushf
adcl
test
xchg
jbe
aad
push
lea
sub
xorl
pop
daa
sub
loop
mov
out
xor
movsl
lock
repz
jns
sbb
and
sub
jmp
sub
xchg
icebp
xchg
jo
inc
and
jmp
inc
cmpsl
jecxz
mov
cli
shll
dec
or
jmp
cmpsl
mov
cmp
in
mov
mov
pop
stos
lods
add
stos
and
scas
ja
dec
int3
sbb
add
clc
dec
rclb
stos
add
sarb
sub
adc
sbb
xchg
daa
outsl
popa
mov
dec
fdivp
xchg
xchg
ljmp
pop
push
push
adc
imul
int
movsb
loopne
lds
icebp
out
push
sbb
imulb
lahf
imull
leave
dec
push
sub
mov
dec
inc
or
and
movsl
shlb
decb
subl
mov
das
out
aam
lds
or
ret
jnp
jmp
arpl
gs
sbb
test
outsl
push
outsl
cmp
jae
add
cwtl
push
pop
sub
pushf
cmp
xchg
jl
sahf
or
pop
jne
dec
push
push
mov
shrl
and
cs
mov
sbb
stos
pop
out
push
leave
xchg
das
repnz
push
aaa
push
popa
leave
lods
sub
cmp
into
cmp
cmpb
cltd
add
popf
stc
icebp
lock
or
sar
jno
xlat
or
and
jb
lret
lock
shrb
fs
push
cmp
xor
std
pop
and
pushf
add
arpl
jp
js
push
xor
es
shr
mov
mov
not
inc
inc
jbe
cmpb
mov
xchg
push
cs
ret
and
aaa
int
arpl
or
inc
arpl
mov
lea
lcall
cmp
punpcklwd
enter
adc
rcll
lock
push
fcomip
psubsb
cmpb
pop
mov
cltd
sub
and
loope
fdivrs
mov
jb
dec
ja
dec
inc
and
mov
xor
fwait
cmp
mov
inc
sub
sbb
xchg
xchg
sub
jecxz
add
mov
enter
push
sbb
iret
aad
adc
inc
sub
ljmp
sbb
and
aad
add
push
jb
or
stos
lret
or
outsb
adc
cld
fimuls
pop
clc
xchg
cmc
jle
xchg
pop
out
inc
mov
insb
sub
es
call
pop
nop
rorl
fsubrs
cmc
das
arpl
jge
mov
out
adc
cmpsb
addb
mov
test
xor
xor
out
bound
lcall
jno
sbb
push
in
std
add
jp
daa
jae
sbb
pop
xchg
es
adc
testl
push
xchg
xor
inc
lcall
cmp
frstor
ds
and
jecxz
sbb
out
sbb
and
pop
dec
cwtl
fdivrs
addr16
xchg
sub
test
pop
and
mov
pop
incl
push
jno
add
dec
ret
xor
xchg
xchg
scas
mov
pop
mov
imul
loop
pop
or
mov
aam
insb
mov
cmpsb
dec
lret
xor
cmp
sub
fdivs
sbb
xchg
push
mov
push
dec
jg
dec
popf
pop
and
je
mov
sbb
dec
mov
mov
mov
push
dec
nop
pop
sbb
jb
push
and
imul
mov
or
jle
mov
mov
add
cwtl
lock
test
add
clc
les
leave
mov
repnz
push
loopne
xor
shll
iret
cld
and
dec
mov
xchg
ds
addr16
ret
test
push
inc
xorb
je
repz
pop
shrb
inc
dec
pop
xchg
jmp
loop
mov
mov
dec
in
enter
adc
mov
mov
mov
packuswb
sbb
loop
pusha
scas
flds
mov
jo
iret
and
js
popf
xor
xchg
out
std
pop
imul
jne
in
lods
int
aad
and
push
add
cmp
outsb
sub
ret
cwtl
push
dec
cmp
pop
mov
cmp
mov
add
cmp
dec
mov
mov
mov
lods
lods
rcl
arpl
dec
push
pop
jp
mov
push
mov
pop
bound
xchg
cmp
out
icebp
sub
jp
repnz
jle
push
pop
cmpsl
mov
push
addr16
pop
cmp
push
popa
xorl
mov
fildl
mov
sub
pop
xor
stos
js
pop
dec
mov
mov
add
pop
xchg
or
es
lds
jne
aaa
rorb
mov
addr16
push
dec
fdiv
lea
pop
cmp
cmc
pop
fs
dec
daa
jmp
and
xor
cli
pop
push
les
add
shrl
push
jp
mov
mov
fs
int
mov
xor
in
dec
cltd
aaa
cs
sbb
rcr
jb
dec
lds
pop
pop
test
out
mov
call
pop
add
in
rcll
mov
pusha
scas
jbe
aad
subb
cmp
mov
sub
loop
push
insl
adc
add
push
mov
popa
jno
adc
pop
pop
cmp
cmp
or
and
je
imul
xchg
push
push
cmc
xchg
sub
rcrb
addr16
add
inc
out
or
jae
xlat
arpl
push
iret
pop
dec
and
push
sbb
mov
xchg
fisubl
push
rcrl
mov
pushf
ljmp
std
or
push
and
pop
cld
out
cs
inc
shlb
lret
add
pop
sti
loope
push
bound
and
pop
in
sarb
adc
jns
mov
push
adc
mov
test
outsl
fcompl
sub
dec
pop
add
jg
das
stc
inc
cwtl
in
fidivrs
in
push
cmp
icebp
xlat
shrb
xor
adc
dec
or
rep
mov
cmc
xor
mov
dec
xor
repz
fnstcw
or
xor
inc
lock
mov
scas
cmpl
lcall
inc
mov
nop
dec
push
sub
out
sub
dec
cli
fidivl
ss
ret
jecxz
aam
mov
xlat
aad
or
push
insb
cltd
cli
mov
int3
pop
pop
sti
push
adc
dec
add
mov
shrl
sub
push
mov
push
in
jnp
push
dec
add
and
insb
push
mov
push
fyl2x
jbe
mov
scas
loope
fwait
lret
jae
adc
push
in
fisubrl
xchg
jmp
inc
repz
unpckhps
jecxz
add
outsb
push
mov
jo
jne
cld
enter
sub
xchg
jge
jb
out
in
xchg
addr16
or
mov
or
aas
pop
scas
shrd
and
out
sub
lds
sbb
and
ljmp
pop
in
push
cmp
pop
enter
inc
and
cmpb
out
or
adc
cmp
mov
dec
jnp
mov
popa
jg
or
mov
call
or
idivl
ret
mov
mov
neg
int3
dec
sbb
mov
pop
pop
push
int3
dec
mov
imul
adc
ljmp
xchg
cwtl
and
syscall
dec
or
inc
lret
enter
repz
and
popf
cmp
cmp
dec
repnz
cltd
loope
mov
mov
push
cmp
lea
sahf
adc
xchg
cmpsb
daa
jle
add
mov
xor
sti
loopne
cmp
stc
fisubl
loope
insl
hlt
push
adc
jae
jne
jg
or
xlat
paddusw
es
and
jmp
std
loopne
cli
mov
test
inc
or
push
or
mov
jno
push
lret
shlb
std
mov
inc
fbstp
leave
pop
pop
mov
sub
fiaddl
jns
xlat
sbb
push
aaa
push
cvttps2pi
dec
int
pop
movsb
int3
sub
sub
shlb
xor
pop
fs
mov
movsl
stc
pop
add
test
jl
cmp
inc
fdivrs
jno
pop
enter
xchg
lcall
push
pop
lods
stos
lahf
and
mov
sub
mov
aaa
or
sbb
push
and
push
gs
movsb
and
or
ficomps
pop
icebp
xchg
add
aam
fisttpll
pusha
push
cmp
mov
cwtl
sub
cmp
stos
mov
lds
mov
scas
pop
addb
mov
in
push
ljmp
mov
out
je
scas
repnz
dec
insl
jb
gs
out
pop
or
add
cmp
enter
pop
outsl
push
call
movsb
clc
push
push
insb
xor
jp
gs
hlt
leave
out
add
adc
jecxz
xchg
pop
lods
cmpsl
imul
into
rorb
test
dec
xchg
ja
xchg
stos
dec
jae
pop
sahf
add
jl
ret
lret
mov
sub
into
push
mov
jp
mov
arpl
out
aaa
dec
lret
xchg
jae
es
repz
jl
xchg
ret
mov
xchg
ss
adcb
imul
aas
push
decb
add
pop
adc
and
fstl
adc
mov
cmc
jg
shlb
mov
jmp
imul
fdivrs
les
add
and
out
stc
and
movsb
pop
dec
sbbb
shlb
fiaddl
sub
je
mov
mov
push
xchg
xchg
dec
sahf
and
adc
inc
ret
sti
pop
dec
add
adc
xchg
sub
orl
and
inc
push
in
aad
add
dec
mul
and
fwait
aam
testl
jnp
je
cli
jns
push
mov
add
sbb
testl
adc
scas
cmp
aam
pop
dec
adc
dec
sub
or
shl
in
cli
adc
adc
and
pop
dec
cli
xor
out
push
test
mov
ret
lods
or
icebp
pop
sti
mov
sub
mov
mov
mov
dec
xchg
insl
mov
sbb
sub
aam
mov
cmp
divl
sub
loopne
sbb
pop
push
mov
stc
xor
mov
pop
cwtl
adc
test
dec
hlt
add
pushf
and
mov
movsl
mov
bsr
aas
mov
push
cwtl
fnstenv
stos
push
mov
inc
js
cmp
xchg
mov
push
pop
push
ja
loop,pn
popf
mov
xor
mulps
fbstp
mov
out
arpl
lret
xor
nop
xchg
pop
in
fistps
cmpl
and
mov
or
add
mov
jo
and
ret
xor
sub
xchg
and
mov
popl
mull
aaa
xor
dec
fsubrl
dec
push
stos
mov
cmp
das
int3
xchg
hlt
add
push
sbb
ret
xchg
push
jb
and
xor
cmp
pop
inc
inc
fisubs
sbbb
sbb
mov
icebp
ja
leave
sbb
dec
scas
sub
mov
or
sub
sahf
push
jg
test
movsl
jl
mov
test
loope
test
push
outsl
dec
std
insl
repnz
sbb
or
xor
sbb
out
loop
xor
inc
lods
scas
stc
jb
sahf
fisubl
add
cld
adc
inc
jnp
add
push
add
mov
das
sub
sbb
ret
sbb
pop
test
icebp
mov
nop
fiaddl
jbe
and
jmp
sub
jl
hlt
xchg
movsb
test
movsb
add
adc
cli
ds
mov
mov
jne
movsb
ds
out
mov
scas
cmp
mov
lods
addr16
or
call
clc
sti
and
ja
sbb
iret
push
fwait
imul
cmp
inc
jo
aad
enter
or
fnstcw
mov
pop
insl
cmpsl
fsubl
test
xchg
jmp
jle
cmp
jecxz
mov
outsl
int3
sbb
dec
inc
mov
aam
mov
cmp
inc
cmpb
or
ss
les
imulb
push
dec
jo
push
inc
mov
movsl
icebp
cld
pop
dec
jno
popf
int3
mov
test
jns
outsb
add
je
test
mov
dec
xchg
fisttps
das
jae
mov
out
push
and
test
sub
mov
xchg
mov
fs
aaa
sar
mov
sbb
bound
mov
inc
fcmovbe
imul
test
stc
movsl
jb
mov
cmp
pushf
pushf
push
hlt
fs
xchg
mov
pop
aaa
imul
adc
fdivs
mov
and
popf
sub
pusha
mov
lock
xchg
in
mov
test
xchg
cltd
jo
repnz
pop
test
mov
pop
ja
jo
movsb
ljmp
cli
and
mov
aam
outsl
pop
sbb
mov
add
or
insb
mov
cmp
cwtl
xor
hlt
cmp
lds
mov
mov
rorl
xchg
movsl
sub
xchg
jno
xchg
mov
negl
rclb
sub
or
aad
mov
xor
xchg
mov
xchg
loope
mov
mov
jne
jg
addr16
push
and
lea
xor
fldenv
cmpsl
enter
stos
cli
pop
sbb
xchg
dec
lods
or
mov
mov
mov
cmpsb
cmp
sarb
call
mov
test
aaa
jle
add
mov
sbb
cwtl
jle
inc
mov
mov
stos
ss
mov
scas
push
add
popa
sub
push
movsl
xchg
and
pop
mov
xor
jnp
push
fwait
movsb
insl
movsl
aad
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
repnz
popa
bound
bound
in
repnz
stc
jae
dec
scas
mov
popf
in
inc
lods
sub
popa
jmp
sti
rcll
push
call
cltd
mov
lods
jl
add
movsb
icebp
lret
cltd
or
sbbl
loopne
pop
fdiv
xchg
pop
test
mov
jecxz
push
in
repz
test
inc
or
fwait
mov
ds
jmp
into
popa
fsubrp
nop
sbb
gs
enter
pop
es
nop
hlt
pusha
lcall
xchg
sub
adcl
jp
cmp
pcmpeqd
cmp
dec
and
enter
adc
push
xchg
roll
xor
jle,pt
mov
add
popf
int3
call
cmp
test
sub
inc
and
push
lds
enter
divb
push
rolb
add
test
jnp
leave
cmp
imul
inc
inc
cmp
stc
daa
ret
enter
add
xor
mov
test
arpl
in
imul
aam
mov
rorb
cmp
ja
adc
sbb
cmp
and
jns
mov
sbb
jo
addr16
lea
cmpl
in
je
pushf
or
sbb
ss
xchg
push
andb
push
mul
jle
cmp
sbb
jl
mov
cmp
jmp
int
mov
or
inc
xor
inc
stos
fldl
dec
mov
daa
jge
pop
and
mov
cmpl
mov
jo
fdiv
les
xor
mov
das
jle
xlat
nop
push
fs
out
scas
sub
enter
out
push
or
je
lahf
adc
xor
shll
dec
pop
fwait
xchg
mov
andb
push
sbbb
xor
xchg
push
jl
or
lods
jl
std
scas
inc
test
mov
lds
or
out
arpl
lret
and
jecxz
jmp
loope
cli
call
cmp
add
sub
pop
hlt
mov
jmp
outsb
inc
or
or
jae
shlb
pop
clc
dec
sbb
add
clc
rcl
push
cltd
aam
lods
loope
mov
mov
out
scas
aaa
and
dec
les
lcall
mov
xchg
stos
sti
xor
fmul
and
mov
loopne
dec
lock
sub
outsl
pop
xlat
lock
sbb
and
push
orl
adc
fnstsw
xorb
daa
add
insl
sbb
mov
push
pop
push
inc
xchg
xchg
pop
or
jae
fistpll
rolb
das
add
test
cli
push
xchg
insl
outsb
or
sbbl
jmp
pop
jge
ret
outsl
push
movsb
xor
sbb
inc
adc
leave
adc
push
xchg
dec
cmc
in
dec
inc
imul
mov
mov
cmp
sub
int3
mov
loop
ljmp
lret
inc
dec
jnp
lret
int3
xchg
mov
inc
xchg
stos
lock
loop
push
xor
xor
pusha
push
nop
rcr
aad
scas
imul
pop
cs
lods
sti
test
xchg
es
popf
xor
add
repz
inc
mov
add
xchg
xor
gs
lahf
inc
test
mov
dec
popf
outsb
and
pop
fistl
fildl
out
pop
mov
pop
mov
or
push
mov
repz
jb
dec
sub
arpl
add
addb
jno
scas
call
ret
or
xchg
jp
push
xchg
sub
fcomip
mov
mov
in
scas
cmp
cli
pop
or
cltd
and
xchg
lods
cmpsl
sbb
aaa
fwait
test
mov
pop
xchg
ss
fbstp
rol
dec
xchg
sbb
notl
add
xchg
mov
dec
call
lea
push
rcrl
repz
fs
lgdtl
movsb
mov
and
lahf
out
test
mov
add
xchg
push
mov
dec
rolb
cwtl
test
and
lcall
mov
adc
xchg
push
sbbb
ffree
push
mov
insl
data16
movsb
inc
cltd
cmp
jmp
stc
or
arpl
sub
and
push
in
mov
fwait
decl
addr16
cmp
std
and
push
dec
cltd
out
outsb
jno
pop
dec
incb
gs
push
mov
or
lods
adc
mov
mov
lds
jb
push
or
mov
add
lahf
ja
call
fisubrl
mov
mov
inc
test
or
insb
loope
inc
or
pop
add
add
es
pop
popf
outsb
sub
fidivrl
inc
inc
test
loope
jbe
pop
xor
ret
jno
stc
clc
sbb
pop
int3
jns
cltd
inc
adc
jne
jns
pop
adc
fdiv
add
pop
hlt
mov
ss
arpl
add
mov
pop
lods
mov
jnp
adc
xchg
sub
lods
cmp
xchg
gs
xchg
inc
out
mov
cmp
push
xchg
adc
pop
fs
pop
mov
in
mov
and
cmp
outsb
clc
aas
fldl
ss
jbe
mov
push
pop
cmp
fld1
nop
dec
cmc
dec
mov
sbb
sub
rcrl
cli
mov
or
addr16
mov
mov
cmpsl
bound
pusha
nop
mov
ss
jl
mov
add
push
xchg
pop
push
sar
imul
test
scas
and
mov
cltd
mov
xor
mov
cmp
aam
pop
je
pop
pop
cmp
xor
inc
mov
fwait
ret
in
rcrb
adc
sub
xchg
popf
stc
push
xchg
mov
push
jns
dec
jmp
and
mov
cmp
or
movsb
mov
pop
xorb
icebp
fnstcw
shll
cmp
mov
std
loopne
nop
test
sub
mov
inc
adc
jl
fiadds
lods
add
mov
jl
or
fmull
pop
cld
add
push
mov
add
add
pushf
mov
test
push
fwait
ret
inc
mov
mov
cli
fidivrs
js
daa
mov
rorb
xor
shll
sub
inc
movsb
jg
loop
adc
hlt
sbb
stc
testl
gs
icebp
pop
ret
das
loop
icebp
into
imul
mov
lods
add
fsubrl
in
xor
cmpsb
data16
test
out
lcall
push
cmp
sbb
mov
jbe
mov
imul
decb
xchg
jmp
and
arpl
pop
insl
in
ja
ss
push
inc
adc
sub
lods
das
pop
push
sarl
imul
pop
aam
mov
js
adc
stos
addr16
dec
leave
mov
cli
and
lcall
mov
xor
or
sbb
repnz
mov
in
test
push
lock
add
push
and
pop
pop
push
sub
sbb
jmp
dec
int
call
adc
repz
add
addr16
movsb
imulb
scas
pusha
lret
push
pusha
or
mov
cltd
or
rclb
je
mov
js
mov
sbb
adc
lret
mov
mov
imull
lcall
icebp
adc
xor
mov
mov
cmc
rclb
je
outsb
dec
mov
dec
sub
idiv
cmp
pop
push
mov
mov
adc
mov
popa
xchg
sbb
mov
sbb
pop
push
enter
enter
outsb
negl
cltd
lahf
lret
push
pushf
lcall
movsl
mov
xor
push
lcall
ror
ds
stos
mov
orl
mov
bound
insb
cltd
jns
fnstsw
popf
inc
sub
jg
mov
fwait
out
fisubrs
xor
repnz
xor
stos
xchg
adc
insb
xor
sub
ljmp
std
mov
mov
inc
sahf
or
adc
inc
xor
lret
inc
jl
lods
jo
push
or
mov
out
inc
pop
push
popa
bound
or
pop
sub
pop
repz
shrb
inc
cmp
scas
lods
jns
cmp
adc
mov
ds
inc
push
sub
movsb
lock
movsl
cmp
jle
mov
inc
mov
jle
xlat
mov
andl
xor
mov
or
cmp
imul
mov
mov
inc
call
iret
es
adcl
leave
ja
les
mov
push
ds
add
sub
add
jecxz
movsl
xor
clc
rorb
out
sbbl
push
add
dec
dec
mov
lret
imul
cmp
push
mov
sar
fmull
and
fwait
push
and
jb
fs
dec
subl
sbb
inc
or
call
xchg
sub
pusha
jle
dec
lcall
imul
push
add
in
dec
sbb
not
out
in
stc
xor
pop
pusha
cli
or
int3
push
or
idivb
push
xchg
mov
addr16
and
adc
sti
in
mov
dec
adc
out
shll
pop
dec
jb
loop
jae
add
and
repz
lcall
adc
push
nop
cmp
das
xchg
inc
dec
das
mov
adc
xchg
cltd
cmp
loop
lret
out
aad
aad
mov
mov
les
and
outsl
bound
popa
inc
mov
ret
lcall
test
mov
in
lcall
mov
arpl
xor
or
std
in
test
lds
cmp
sbb
or
rorb
cmp
xchg
stc
or
fisttps
dec
pop
out
dec
inc
lea
add
xchg
mov
cmp
notl
das
mov
inc
shr
in
hlt
push
xor
inc
cli
dec
sti
xchg
sub
push
cli
xor
adc
das
sub
ss
lret
pop
mov
xlat
push
adcb
sub
or
mov
fstl
or
mov
xchg
xor
insl
ja
cmp
loopne
data16
mov
shll
clc
adc
imull
xor
or
push
pop
adc
inc
scas
into
and
test
adc
lahf
int3
mov
or
popa
cmp
and
std
sti
imul
icebp
cmp
xor
and
sub
push
loop
or
jo
cmp
cmp
daa
lcall
leave
mov
mov
adc
mov
sbb
push
push
arpl
test
jnp
push
idivb
xchg
mov
pop
int3
cmp
out
mov
push
stc
add
pop
mov
sub
ret
dec
mov
rorb
outsb
push
and
pushf
aaa
xchg
pop
or
cmp
sti
push
or
cs
jb
push
pop
fdiv
dec
filds
repz
dec
sub
scas
inc
mov
adc
inc
mov
in
push
frstor
iret
lret
sahf
jmp
xor
sub
sbb
in
adc
enter
in
cmc
jo
icebp
int3
out
test
cmpsb
and
jmp
mov
repz
scas
sub
ficoms
call
sbbl
testl
cwtl
dec
mov
int
mov
test
or
nop
mov
aaa
daa
mul
movsb
shr
add
test
popa
test
xchg
aaa
xchg
bound
roll
xchg
inc
mov
xchg
adc
mov
mov
lret
outsl
test
aaa
push
mov
or
ja
fcomps
insb
mov
mov
xor
icebp
push
mov
je
sbb
test
imul
imul
add
add
jmp
shrl
fcmovb
popa
and
pop
xchg
and
lret
push
pop
ror
mov
cmc
sti
outsb
outsl
add
cmp
mov
sub
call
dec
pop
movsl
std
dec
mov
in
nop
roll
movsl
int
pop
adc
xor
ror
jl
pusha
out
fisubs
mov
add
insl
shld
mov
dec
mov
xor
and
or
cmp
cmpl
push
xchg
loop
lds
ret
lret
std
sub
aam
andl
add
lods
sub
fistl
push
fdivs
push
adc
pop
push
leave
scas
mov
xor
cltd
test
scas
sbb
lahf
jnp
test
ds
push
leave
xchg
or
or
push
push
rolb
pop
pushf
loope
adc
and
xchg
fisttpll
push
ja,pt
out
push
fimuls
cld
mov
int
idivb
lds
int
cli
push
xchg
mov
fsubrs
add
es
add
pop
pop
and
adc
nop
mov
arpl
daa
cltd
je
sar
movlps
testb
or
decl
mov
mov
xchg
iret
mov
adc
jp
push
push
sbb
rcll
xchg
sub
addr16
adc
xor
sahf
fsubrl
out
rorl
imul
adc
push
push
repnz
enter
aaa
cmp
fcomps
scas
aas
fmull
mov
pop
or
call
les
cmp
lcall
cmp
mov
leave
mov
icebp
fidivrl
pushf
mov
les
pop
out
cmp
push
adc
popf
nop
mov
repz
push
jns
lea
adc
jbe
mov
and
xor
int
fwait
sub
xchg
dec
or
in
xor
pushl
imul
push
dec
enter
push
loop
out
inc
ds
jb
pop
pushf
scas
and
loope
sarb
mov
and
push
jo
movl
cs
aad
in
movsb
es
inc
mov
hlt
mov
inc
mov
out
sub
loope
testb
stc
out
push
pop
or
pop
xchg
lret
cmpl
add
cli
pop
in
jmp
jg
mov
loope
push
mov
jb
pop
je
sbb
setl
sub
and
push
jmp
ret
mov
outsl
fmul
inc
xchg
jno
pop
cmp
subl
jecxz
out
test
push
movb
popf
jle
push
cli
push
movsb
int3
jl
nop
jecxz
cltd
mov
add
aaa
stos
pop
mov
cmp
sbb
pop
je
adc
das
cmpl
add
addr16
mov
push
or
sub
loop
push
sub
jp
adc
in
cmpsl
inc
cs
leave
jne
shll
bound
arpl
mov
sarb
adc
loopne
pop
andl
add
ret
rcrl
add
and
loope
add
cwtl
iret
or
das
repz
lahf
add
repnz
fidivl
popa
and
loopne
shlb
mul
fcomip
mov
or
sbb
xor
mov
jp
out
push
bts
lds
lahf
mov
cs
jo
xorb
push
and
fsubs
mov
insl
mov
repnz
and
and
gs
xor
imul
ja
jge
jno
jge
cmc
mov
mov
sti
subb
add
or
adc
jmp
adc
movsb
movsb
and
movsb
inc
sub
mov
fidivrs
pushf
popf
popf
dec
inc
scas
fisttpll
stos
add
jno
lods
lret
loop
loope
inc
add
out
stos
or
pop
mov
jg
xchg
test
icebp
add
es
and
xchg
mov
inc
shlb
jb
pop
mov
cmp
imul
push
jne
mov
add
outsl
stos
shlb
cmp
fwait
sbbb
or
cltd
sbb
clc
repnz
cwtl
mov
cmp
sar
rolb
sub
jns
push
sbb
ret
fwait
sti
mov
aaa
and
out
jmp
xor
push
mov
jp
outsb
dec
pop
mov
enter
aam
sub
push
js
mov
adc
es
inc
fisubrl
lock
mov
adc
lods
bound
pop
push
inc
jle
xor
mov
mov
aas
stos
lea
repz
cmpl
test
arpl
shlb
jmp
mov
sbb
cmp
js
xchg
inc
push
inc
dec
and
cmpsb
pop
jl
mov
or
imul
repz
inc
xor
xchg
cmc
xor
hlt
ss
frndint
popf
in
mov
mov
inc
loope
int3
cmp
aaa
pusha
mov
hlt
inc
or
mov
cmc
sub
mov
push
add
mov
xchg
cmp
jb
int3
adc
mov
lock
enter
add
pop
rcl
jmp
hlt
int3
sbb
adc
pop
popf
add
xor
mov
push
xor
mov
mov
into
xchg
lds
add
mov
push
sbb
das
mov
ret
mov
gs
lcall
neg
xor
xchg
mov
lods
in
in
push
leave
pusha
jbe
loope
arpl
mov
push
mov
aam
ret
mov
das
push
rcll
mov
push
fxch
cmpsl
sub
dec
dec
inc
mov
pop
jl
scas
mov
sahf
inc
bound
aas
sub
xchg
cmp
aad
add
out
das
lock
push
jmp
cmpsb
add
aad
lods
popf
sbb
dec
mov
mov
cmp
sahf
xor
sti
sub
jbe
xor
pop
sub
cmc
xchg
push
mov
pop
adc
sbb
stos
in
clc
mov
cmp
cli
pop
add
jne
pusha
stos
shl
movsl
out
mov
jae
ud2
jb
inc
xchg
lea
cmp
shlb
insb
fucomip
insl
jo
pop
imul
es
add
cmp
lock
sub
loope
mov
lods
xor
sbb
cmp
shll
rcrb
pop
cld
inc
mov
outsl
sti
jle
int3
add
xlat
pop
out
inc
iret
pop
mov
cwtl
testl
xor
enter
fwait
push
sub
jns
add
cs
cmp
dec
fdivp
popa
enter
rorb
ljmp
std
enter
int3
mov
sbb
outsb
sub
push
mov
mov
stos
cmp
inc
fldcw
inc
mov
ja
lods
dec
mov
jle
cwtl
cmp
out
fadd
xchg
negb
mov
sbb
sbb
fstpl
fisttpl
adc
in
stos
int
sbb
test
jo
mul
das
and
cmpsl
xchg
je
in
rcrl
add
push
incl
repz
jae
mov
dec
ficompl
push
inc
leave
or
mov
lea
shl
mov
pop
movsl
outsb
negl
rcr
in
rorl
fcmovu
adc
scas
mov
or
jns
sub
test
test
jae
xor
mov
pop
xor
js
fldlg2
mov
repnz
fidivrl
push
das
popf
xor
sbb
ret
test
inc
out
xlat
add
xor
cs
adc
mov
jnp
pop
sbb
xchg
pop
pusha
movsb
repnz
loop
cltd
jbe
add
inc
enter
out
and
inc
dec
insb
mov
adc
sub
sbb
ret
test
xchg
popa
cmp
jg
or
dec
lret
jecxz
push
je
mov
divb
call
dec
jp
xlat
xchg
imulb
out
dec
mov
push
andl
adc
cwtl
push
xchg
sub
sub
jbe
cmc
mov
fdivl
ds
jo
or
lods
rcrl
test
sub
cmpsb
ret
mov
xor
and
jmp
clc
sub
imul
stos
movsl
push
xchg
and
fistpll
movsb
movsb
fwait
dec
jo
jg
repz
fstpt
push
leave
daa
icebp
movl
loop
sti
push
pop
mov
lret
xchg
mov
fsubs
xchg
push
imul
mov
ljmp
ret
sbb
and
add
sub
cmp
sbbb
sbb
call
mov
inc
int
dec
ss
xor
push
mov
and
loop
ret
iret
or
pop
push
daa
pop
decb
fisttpll
shl
xor
imul
cmc
mov
in
push
imul
adc
pushf
mov
xchg
push
cmc
mov
push
outsb
mov
pushf
dec
enter
jmp
out
repz
mov
in
jno
lds
int
pextrw
mov
cwtl
pcmpgtd
aam
cmc
mov
add
test
mov
in
daa
addr16
jle
adc
xor
xor
adc
aaa
int
sub
fdivl
ss
mov
dec
xchg
popa
xchg
mov
loop
cmc
fwait
cmp
fldl
jmp
mov
dec
sbb
or
cs
jl
push
aad
pop
ss
ror
mov
and
push
int
adc
imul
sbb
or
inc
adc
adc
add
push
mov
cli
gs
mov
aas
out
xlat
push
je
pop
int3
inc
xchg
cltd
aad
dec
call
cmpsl
fucom
xchg
rcll
shll
aam
dec
out
jmp
imul
dec
push
pop
popf
sub
push
jp
gs
rol
push
sbb
push
xor
jne
loop
jo
mov
aas
jp
loop
dec
fstpt
sub
mov
movsl
and
outsb
or
pop
xchg
adc
enter
sbb
push
int
jno
lds
inc
push
mov
test
loopne
imul
test
shll
mov
dec
loopne
pop
stos
nop
mov
fwait
jge
lds
rclb
jg
sti
sbb
mov
kmovb
push
xchg
mov
or
dec
cmp
fmul
adcl
popf
mov
out
mov
ja
lods
data16
jl
cmp
xchg
xor
lahf
loop
loop
jbe
jp
roll
incl
jg
lea
pop
hlt
inc
ret
cmpsb
or
mov
pop
or
in
push
and
sbb
cltd
and
mov
xchg
xor
shlb
dec
sub
ret
sbb
test
pop
pop
xchg
into
out
psrlq
int
jmp
jnp
jnp
mov
mov
into
jnp
lea
das
dec
xchg
arpl
stc
push
and
sub
sbb
mull
jmp
rol
sub
dec
jg
mov
mov
add
js
ja
push
loop
jl
cmp
call
inc
cmc
into
cwtl
cmp
mov
mov
call
or
ss
xor
pop
xchg
xorb
popf
loop
dec
add
cli
cmp
pop
loopne
ret
lret
mov
sbb
out
pop
and
jp
js
gs
test
fists
sub
push
push
mov
push
jno
push
fisubs
fcmovnu
fistpl
dec
fcomps
das
divl
lods
mov
add
add
mov
fidivrs
adc
out
mov
imul
loope
or
leave
shr
push
mov
adcl
jo
fsubrl
jbe
pop
imul
sbb
dec
es
pusha
sysret
xlat
pop
jno
push
leave
mov
out
adc
ret
jb
inc
xchg
push
sbb
leave
mov
pop
stc
jo
xorb
push
in
cmp
add
stos
lods
in
inc
dec
lret
js
leave
inc
add
and
jne
jo
pop
push
imul
xchg
ss
xor
iret
mov
jns
jle
pop
cmp
or
and
jae
sbb
ds
inc
pusha
xchg
imul
lods
lods
movsb
dec
add
and
aas
dec
jne
out
cmp
push
jns
sub
inc
xor
xchg
jo
xchg
cmpsl
push
insl
xchg
mov
cltd
scas
aaa
inc
add
seto
adc
add
cmpsl
mov
outsb
cmp
rclb
orl
push
int
sbb
xchg
mov
outsb
xor
rcrl
mov
sbb
sahf
jae
repnz
jbe
xchg
jp
cs
pop
and
add
pop
aam
sbb
lock
jecxz
cmp
mov
add
and
pop
test
js
sub
cmp
jmp
mov
sub
lret
out
sti
adc
inc
cli
daa
out
mov
fildll
add
cld
insl
mov
stos
aad
ret
sti
fistpl
push
je
pop
repz
sbb
mov
call
sahf
cwtl
mov
jb
rcrb
push
push
mov
mov
push
or
mov
arpl
jl
sbb
inc
enter
jne
inc
xchg
icebp
adc
stc
fisubl
add
jge
push
addl
fistpll
push
andb
jns
cmp
rcrb
je
inc
jp
mov
inc
adc
pop
or
ret
mov
ret
scas
insb
fwait
jecxz
test
push
gs
add
cmpsb
je
inc
sub
or
and
push
hlt
outsb
shl
sub
in
inc
imulb
notl
cmpsb
dec
mov
bound
or
dec
mov
mov
cltd
inc
mov
jb
js
xorb
cli
outsb
aas
pop
xor
sub
popf
or
pop
sbb
xor
xchg
int3
imul
mov
pop
jbe
xor
mov
or
aas
popf
jo
sti
jmp
pop
or
dec
dec
fistps
addr16
sub
out
xchg
cmp
cwtl
xor
mov
push
mov
data16
sub
push
sbb
push
aad
mov
inc
jns
stos
xchg
jnp
sub
xchg
push
fs
dec
dec
scas
jl
xchg
std
xchg
or
mov
jecxz
mov
dec
dec
jbe
movsb
sbb
addr16
jbe
cmp
jl
and
pop
hlt
cmpsb
pop
nop
xor
jb
xchg
pop
or
jmp
adc
lock
pop
fldenv
cmp
je
jl
push
sti
repnz
jns
hlt
in
add
loope
mov
lahf
xchg
mov
out
ret
stos
inc
repnz
subl
mov
mov
aas
pop
das
mov
dec
adc
pop
das
jg
imul
mov
sbb
mov
aam
sub
pushf
cld
cmp
dec
and
movsl
in
jg
add
imull
dec
iret
push
adcl
stc
negl
pop
fcmovu
imul
leave
jns
fdivs
inc
leave
mov
mov
push
push
pop
ret
sbb
jno
pop
xchg
lea
jge
jae
negb
xor
xchg
test
lods
cmp
or
sub
dec
sti
rorl
test
dec
inc
xchg
insl
aam
lock
ja
xchg
push
inc
subl
inc
call
mov
fdivr
xchg
in
mov
iret
in
cwtl
sub
cmp
ljmp
xor
test
pop
inc
push
jl
shrl
filds
sbb
or
jne
adcl
cmpsl
mov
jp
jmp
cli
lahf
mov
adc
mov
mov
cld
or
jmp
loope
push
mov
daa
cli
mov
hlt
inc
in
mov
pop
adc
adc
popa
mov
xor
test
mov
movsl
loopne
imul
negb
push
daa
xchg
out
imul
leave
sub
stos
xchg
cltd
sti
push
pop
adc
movsl
jae
imul
testb
pop
ss
cmp
mov
daa
mov
fnsave
fidivrs
dec
cmp
iret
push
jmp
ret
jecxz
xchg
loopne
pop
push
cmp
iret
dec
mov
jp
sub
pop
push
pop
or
mov
pop
inc
movsl
dec
ss
daa
fisttps
les
mov
xchg
add
stos
jbe
es
adc
cmp
lret
ss
dec
leave
jnp
insl
fistps
iret
bound
and
push
sahf
and
aam
xchg
mov
cvttps2pi
push
xor
pop
push
push
xchg
xchg
ds
cmpsb
mov
stos
dec
test
test
push
inc
pushf
mov
stos
dec
out
dec
sub
cmpsb
pusha
lods
daa
dec
mull
sub
sbb
lods
gs
push
loope
and
sbb
xchg
lds
lret
cmpsb
sbb
lock
pop
mov
dec
lahf
in
movsl
pop
push
rolb
push
mov
rcr
pop
into
or
xor
inc
repz
or
call
outsl
jmp
or
sub
or
divb
stos
push
outsl
jmp
shl
mov
mov
dec
or
xchg
pop
lret
mov
repnz
cmp
js
imul
push
adc
adcl
orl
in
in
push
test
fcoml
shl
into
dec
or
adc
lcall
pop
je
sbb
movsb
xor
pop
push
iret
iret
ret
es
and
std
push
jae
jge
sbb
push
sub
out
cmp
jmp
dec
popa
and
sbb
shl
dec
loope
sahf
mov
dec
and
dec
inc
pop
out
mov
xchg
movsb
fbstp
arpl
lcall
scas
push
aas
mov
dec
sub
push
jecxz
mov
sub
subl
pop
rcll
es
pop
cmp
mov
inc
mov
cmpsl
jmp
je
shlb
insl
shr
out
pop
outsb
jb
sub
push
stc
jno
push
pop
push
sub
jnp
scas
jae
mov
dec
aam
xor
repnz
dec
stc
out
cmp
xor
mov
mov
sub
cmp
ja
test
jmp
test
cmp
in
loope
pop
insl
mov
test
mov
add
add
xchg
arpl
push
push
inc
dec
test
mov
out
cmc
les
outsb
push
dec
sahf
or
adc
or
mov
sbb
xor
mov
ret
pop
inc
jae,pt
and
mov
fsubrs
push
dec
or
or
mov
cmpsl
outsl
xchg
pushf
add
jbe
xchg
ds
and
fcmovnbe
adc
dec
aam
inc
pop
cmp
lret
clc
lea
in
jb
clc
xchg
fstl
inc
sti
sub
and
adc
cmp
jbe
inc
xchg
cwtl
lea
lcall
xor
jno
dec
or
enter
test
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
or
ja
add
bound
add
mov
pop
pop
jbe
fsub
jns
push
lcall
jg
mov
ficompl
imul
es
aam
push
rolb
push
xchg
nop
sbb
inc
or
test
xchg
repz
sbb
iret
cmc
pop
mov
push
mov
jle
das
std
sub
adc
add
add
add
shrl
adc
cmp
out
pop
xchg
push
fxch
add
bound
add
mov
loop
mov
movsb
xor
sub
sub
in
imul
push
inc
jmp
push
mov
stos
loop
movsb
les
xchg
das
out
mov
jno
iret
loop
jecxz
shrl
mov
add
sbb
call
sub
pop
jp
insl
je
jns
xor
adc
adc
pop
jno
push
mov
lret
sarl
add
add
add
sub
sub
addb
into
add
bound
add
aad
pop
xchg
pop
sahf
out
mov
lea
xor
in
xchg
xchg
shll
cmp
lods
cmp
in
sbb
leave
and
aam
scas
enter
or
inc
fs
fcoml
add
pop
addb
xor
call
call
test
add
add
add
add
das
and
aam
aam
ljmp
je
jge
daa
mov
add
add
dec
push
cmp
adc
cmp
stc
in
jecxz
sbb
jae
push
ljmp
push
ljmp
iret
dec
adcl
adc
mov
std
test
movsl
lods
pop
jae
sbb
addr16
das
xchg
test
stc
sbb
sahf
mov
mov
scas
lea
movsl
add
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
dec
add
bound
add
data16
or
sbb
and
out
push
ss
cmc
dec
xchg
xchg
xorl
loopne
stos
dec
mov
negl
les
dec
leave
icebp
add
cltd
in
dec
repz
dec
dec
push
movsl
lods
test
icebp
aaa
sub
add
mov
adc
push
test
imul
add
add
add
out
lods
cmp
stc
stc
daa
sbb
add
add
xchg
xlat
push
movsl
adc
adc
pop
push
mov
lods
pusha
inc
and
xlat
sbb
pop
sbb
iret
add
test
mov
jne
cmp
imul
in
sbb
aas
notl
xor
jae
add
add
add
inc
gs
aaa
push
xor
ret
iret
add
bound
add
sub
adc
pushf
in
ret
and
and
cwtl
in
push
mov
sar
jle
idiv
lret
or
mov
clc
add
fmulp
jecxz
sbb
jmp
mov
stc
cltd
or
pop
pop
test
mov
adc
xchg
pop
test
pop
pcmpgtd
mov
pop
sbb
add
add
add
dec
inc
sub
das
jle
jg
imul
or
push
loop
add
add
dec
adc
pop
imul
adc
call
scas
int
add
fisttpl
pop
lret
mulb
mov
es
or
scas
sbb
loope
les
and
and
out
add
pop
shr
incl
int
mov
sbb
movsb
nop
add
add
add
addr16
and
mov
mov
mov
dec
jecxz
add
add
mov
rcrl
ror
mov
aaa
mov
cmp
dec
dec
add
sub
fnstcw
jne
mov
xor
rcrb
jl
jne
sahf
and
push
fidivl
pop
and
xor
dec
in
loop
jle
adc
sbb
xchg
scas
xor
lea
inc
dec
nop
loope
repz
ds
add
add
add
or
ret
lods
sub
mov
mov
bound
add
xchg
jg
les
push
divb
in
call
mov
mov
add
in
std
mov
jns
enter
sbb
push
add
cmp
xchg
es
pop
or
ja
aad
sbb
jp
xchg
mov
pop
call
test
add
add
add
ret
pop
iret
fst
enter
inc
imul
in
add
add
fnclex
jb
in
lea
sti
push
dec
data16
and
pop
mov
jns
adc
rcrl
mov
fld
sub
inc
lcall
xor
shll
icebp
stc
inc
cmpsl
mov
shlb
sbb
or
xlat
lea
add
add
popa
pop
lock
out
repz
mov
ret
in
fsubrl
add
sbb
js
xchg
pop
pop
cli
out
cmp
inc
into
and
js
inc
cmp
ret
xchg
dec
clc
mov
or
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
mov
sbb
add
push
inc
add
sbb
inc
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
add
sbb
inc
add
inc
add
or
add
sbb
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
scas
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
mov
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
gs
lcall
add
add
pop
repnz
cmp
sub
gs
dec
out
popf
xchg
scas
dec
add
out
push
in
mov
jno
ljmp
xchg
mov
or
inc
jns
out
dec
dec
ss
mov
fs
jns
mov
in
cmp
adc
cmc
sbb
xchg
mov
add
add
add
mov
push
mov
xlat
push
shrb
cmp
imul
add
add
insl
inc
mov
fwait
cmp
pushf
xchg
adc
sbb
mov
mov
cmp
out
add
cmp
adc
movsl
orb
and
fidivl
push
sub
test
test
cmp
gs
push
fdivl
subl
cmp
lock
cmc
dec
or
popa
xor
add
add
mov
jg
ljmp
push
mov
bound
add
sbb
in
pop
sub
pop
cli
adc
sub
icebp
xchg
pop
jg
arpl
dec
cmp
test
insb
push
dec
add
dec
popf
xlat
and
cmp
fimull
mov
xchg
sti
rcll
hlt
push
testb
inc
xchg
shrl
xor
inc
mov
pop
add
add
add
cmp
cmp
in
fimuls
dec
or
das
fadds
add
add
lds
aas
inc
cmp
and
add
dec
or
lds
mov
sub
stos
cwtl
mov
popf
pushf
push
or
jl
dec
in
push
and
cld
mov
xchg
dec
nop
outsl
mov
lea
jl
push
jmp
orb
xchg
mov
add
jno
add
add
add
fnstenv
std
negb
sub
jae
test
bound
add
scas
into
loopne
sbb
lret
pop
xchg
ljmp
fstl
and
jmp
xor
and
cmp
sbb
lods
cli
mov
test
cmp
aas
rcl
pop
dec
and
aaa
xor
in
mov
sbbb
jp
decb
call
loopne
add
add
add
xor
jb
inc
mov
cmpsb
repz
add
add
shrl
dec
xor
inc
cwtl
cs
int3
sahf
mov
mov
mov
push
dec
xchg
adc
push
mov
ljmp
jo
sbb
cld
in
inc
loope
inc
or
push
adc
pop
dec
and
dec
mov
test
adc
mov
mov
add
add
add
dec
in
fwait
scas
fdiv
pop
sub
adcl
add
add
in
add
mov
dec
adc
mov
shll
add
in
arpl
incb
andl
cld
mov
xorl
add
pop
jbe
ljmp
mov
pop
pop
fsubrl
mov
pop
insb
add
add
add
add
push
add
xor
jb
insl
xor
and
mov
add
bound
add
and
jnp
pop
insb
shl
out
xchg
mov
test
sbb
mov
lahf
daa
mov
stc
roll
jne
ja
push
icebp
dec
push
dec
enter
lret
and
sbb
cmp
mov
adc
movsb
mulb
ja
xchg
dec
cmp
in
xchg
scas
pop
ss
mov
mov
or
jle
add
add
add
push
add
mov
out
or
xor
fiaddl
add
add
inc
orl
inc
xchg
bnd
jg
mov
test
xor
stc
sbb
add
nop
inc
outsl
in
popf
out
shrb
fs
jmp
sbb
nop
sub
mov
iret
inc
push
fmull
fcoml
xor
hlt
sbb
shrl
sub
fdivrl
mov
loope
jns
cmp
pushf
lret
or
add
add
add
jmp
repz
fimull
out
aaa
int3
cwtl
jnp
add
bound
add
sti
push
in
call
mov
inc
add
cwtl
test
mov
xor
inc
scas
sbbb
fsubl
inc
ret
pop
je
imul
mov
inc
hlt
or
or
test
jo
mov
xor
sarb
pop
mov
xor
das
xchg
mov
es
add
add
add
pop
inc
pop
iret
pop
aad
ss
dec
shll
das
mov
bound
add
inc
aaa
mov
mov
test
inc
mov
xor
adc
pop
push
xlat
pop
test
adc
push
sbb
into
xor
jg
ja
fsts
aaa
iret
sbbb
jge
les
jns
lea
xor
inc
in
mov
sbb
dec
int
cmp
test
movb
add
add
fwait
test
jg
inc
dec
sub
add
bound
add
out
and
cli
cmp
xchg
pop
push
ds
cmp
pop
xor
dec
addr16
dec
jge
into
xlat
jl
and
cld
enter
stos
mov
cld
int3
jl
inc
mov
outsb
mov
or
aaa
stos
iret
dec
or
mov
mov
cwtl
and
pushf
sbb
cltd
push
push
outsl
jns
add
add
add
outsb
jae
lret
jle
repz
daa
test
bound
add
mov
call
jnp
leave
int
sbbl
xlat
cmc
bound
xor
inc
in
lret
add
arpl
inc
aam
dec
inc
lret
test
cmp
cmp
push
sahf
cmp
add
cmp
fsts
pop
push
inc
sti
or
adc
cld
outsl
lret
ljmp
add
add
cmc
adc
adc
mov
lds
add
add
bound
add
cmp
xchg
dec
cmpsl
jno
jne
scas
mov
rorb
jmp
in
jle
mov
or
adc
jl
push
jmp
cwtl
insl
xor
adc
fsubrl
popa
cmp
bound
adc
sbb
cwtl
je
mov
add
cmpsl
sub
add
add
add
cmp
mov
rcrb
add
bound
add
lcall
dec
sahf
xor
mov
jle
jb
imul
mov
and
push
inc
in
fnstsw
ds
xlat
sbb
shrl
inc
nop
push
push
adcl
or
ja
stos
mov
jae
jg
cmpsb
aam
pop
push
rorb
scas
movsl
leave
pushf
mov
add
add
add
add
sqrtps
cmc
das
sbb
xchg
iret
or
pop
out
faddl
add
add
jnp
jae
sbb
mov
push
adc
jne
mov
insb
cmp
ss
pop
sub
mov
push
sub
sbb
pop
aad
inc
divl
addr16
hlt
sub
pop
mov
mov
push
cmp
xchg
rcrb
into
mov
mov
fwait
mov
arpl
or
add
add
add
sub
fildll
lds
sub
add
bound
add
and
mov
add
xor
je
lcall
mov
push
out
cmp
int3
or
ret
jno
or
test
mov
mov
mov
xchg
loop
sbb
movsb
cmpb
jnp
int
add
cmpsl
out
decb
xchg
sub
fisubs
and
js
sarl
mov
add
add
add
fs
testl
aas
xor
add
add
in
lahf
push
clc
ret
imul
or
lock
pop
lock
shll
scas
int
ret
and
dec
repnz
in
dec
cs
lahf
lcall
push
sub
test
aam
fnop
insl
fidivrs
xlat
jo
jae
movl
test
jbe
add
add
add
push
imul
lcall
add
add
cmpsl
cmpl
xlat
icebp
mov
xor
inc
scas
xchg
xchg
jo
push
mov
stos
lret
arpl
pop
loopne
inc
xchg
cmp
test
incl
out
dec
add
loop
out
outsb
inc
mov
xchg
test
cmp
gs
sbb
mov
into
inc
test
fiadds
xor
add
add
jne
jg
clc
cs
push
and
add
add
mov
idivl
lea
divb
cmp
inc
inc
call
dec
scas
stc
lret
add
mov
mov
pop
fiadds
pop
xor
or
int3
jmp
sbb
std
pop
mov
popa
repz
sub
daa
gs
add
mov
movl
pop
jnp
and
xlat
sub
add
add
add
mov
cmp
sti
dec
mov
je
lcall
add
bound
add
sub
das
jmp
and
mov
mov
adc
cld
adc
and
inc
cmp
stc
in
stc
xchg
mov
rcl
daa
cmp
and
cmp
jb
mov
data16
or
cmp
sbb
xchg
xchg
cmp
mov
cmpsl
fdivr
adc
lahf
out
aas
xchg
inc
lea
insl
stos
sldt
add
add
fists
dec
mov
xchg
adc
rolb
jmp
add
add
xchg
arpl
pop
push
lods
fstpl
push
daa
jl
mov
adc
push
pusha
add
cmp
or
fidivrl
sbb
push
mov
lcall
jo
aas
scas
xchg
xchg
xchg
les
pop
idivb
cltd
mov
cmc
es
or
lea
aas
fbld
add
xchg
fcmovu
fisttps
push
mov
roll
add
add
push
xchg
jo,pt
out
jns
jle
testl
stos
mov
jmp
stos
pop
mov
push
cwtl
adc
and
mov
mov
rcrl
outsl
mov
mov
jno
push
inc
je
repnz
cltd
int3
call
int
xor
mov
adc
add
fldenv
aad
mov
rorl
insl
add
add
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
dec
or
movsb
cmpsb
jo
mov
stos
nop
adc
in
mov
and
mov
push
call
sub
xorb
pop
enter
jns
push
dec
icebp
or
fsts
dec
dec
sarl
fs
scas
or
test
dec
scas
lret
mov
mov
data16
xor
add
jo
and
cmp
sub
dec
psrld
add
add
cwtl
xchg
out
adc
sbb
das
in
lods
ficoms
call
or
lret
jns
cmpsl
movsb
das
sub
lock
jle
test
je
push
mov
shlb
or
xor
dec
add
jb
mov
push
movsl
cli
gs
imul
pop
movsb
sbb
jecxz
sahf
adc
int
inc
add
add
add
xchg
nop
ffree
popf
aam
xchg
push
scas
jno
add
bound
add
ret
inc
mov
cmp
or
fstl
sub
inc
mov
jae
push
sbb
and
les
dec
out
sub
cmc
popf
in
cmpsl
sbb
adcb
or
call
fisubl
mov
sbb
in
je
add
test
xor
hlt
in
out
xchg
lock
adc
cli
sahf
xor
add
add
hlt
mov
jbe
hlt
mov
and
cmpsb
arpl
imul
rcl
add
bound
add
sarl
mov
cltd
mov
pop
gs
sub
push
mov
mov
imul
xorl
mov
push
xor
popf
sti
ss
fisubl
mov
mov
out
pop
outsb
mov
pop
pop
ja
lea
daa
inc
cmp
jnp
fistpl
mov
mov
add
add
add
xor
into
mov
sub
out
pop
addl
add
add
cmp
or
lock
or
xor
jae
adc
lods
mov
test
push
jecxz
aam
dec
push
aad
loop
es
insb
push
shr
jo
push
mov
xchg
dec
add
jns
sbb
push
gs
jbe
inc
jmp
xchg
int
aad
rcl
cli
aam
test
add
add
fucomi
outsb
and
pop
mov
xchg
roll
add
add
sbb
movsb
loop
pushf
mull
scas
sub
loopne
push
jne
jg
sbb
lock
repz
and
mov
and
dec
das
cld
int
call
setle
inc
push
lods
mov
inc
or
inc
and
push
fdiv
jp
inc
and
loop
xchg
imul
mov
addr16
test
add
add
add
add
mov
and
cmpsb
stc
roll
add
add
ret
fdivp
mov
and
shll
jo
fisubrl
push
imul
mov
lcall
out
mov
insb
push
and
lcall
lcall
cld
imul
ljmp
add
jg
outsl
fwait
shlb
dec
pop
inc
ret
bound
add
add
add
mov
and
jg
call
into
inc
mov
mov
aam
add
add
add
mov
inc
mov
retw
or
push
mov
xchg
inc
repz
fstp
cmp
fcomp
mov
push
inc
jno
cmc
push
roll
cmpsl
xor
xchg
mov
push
sub
push
aad
lea
pop
pop
jl
jp
push
scas
lea
jae
cmp
inc
mov
jbe
and
add
add
add
sub
sub
inc
ds
enter
add
add
andb
push
mov
ds
push
pop
stos
xchg
sbb
stos
std
push
jne
fimuls
mov
adc
push
add
rclb
pop
out
leave
pop
add
mov
iret
cs
test
inc
clc
jnp
fsub
xchg
mov
or
xlat
lret
mov
cmp
enter
mov
imul
add
add
add
dec
aas
int3
sbb
out
loopne
lods
je
xchg
nop
pop
aad
add
add
mov
push
pop
lret
xorl
xchg
and
push
mov
ret
mov
in
xchg
call
mov
imul
test
or
pop
shr
iret
adc
cmp
mov
shrl
out
inc
fistpll
jg
adc
add
add
add
push
test
fildll
mov
insl
jae
aad
add
add
pop
and
sbb
push
mov
dec
inc
inc
aas
push
repnz
mov
fwait
cmpb
cmp
or
and
stos
mov
jmp
faddp
and
enter
cmp
push
jmp
mov
mov
hlt
popaw
sbb
shll
add
imul
mov
dec
dec
test
add
add
add
fwait
loope
sub
sarb
add
cmp
icebp
jecxz
add
bound
add
sub
mov
in
fstpl
push
lret
mov
das
xor
add
sbb
push
jbe
or
add
inc
ds
fbld
test
sbb
mov
lret
or
xchg
xor
xchg
xchg
lods
pop
jl
dec
mov
aam
into
pop
add
inc
cmp
add
add
add
divl
dec
cmp
dec
inc
pop
out
inc
add
bound
add
stc
jl
hlt
cld
mov
pop
shlb
jb
mov
mov
std
sbb
or
or
adc
mov
push
lahf
push
pushf
inc
jg
dec
jl
divb
fidivrl
int3
ds
scas
jbe
inc
imul
xor
popf
inc
rcrb
push
les
shrb
in
add
add
add
arpl
jge
mov
daa
loopne
push
add
add
add
stos
mov
mov
and
jg
inc
adc
in
add
mov
or
imul
cs
ja
stos
int
subl
in
push
push
cmc
mov
push
adc
push
dec
add
inc
lret
daa
ret
mov
lods
jmp
cld
adc
add
add
add
daa
ss
xor
and
dec
adc
add
bound
add
jnp
shll
mov
lock
jg
cmpsl
bound
movsl
push
mov
dec
or
cmc
mov
mov
mov
push
sarb
or
cmp
fs
inc
pop
sbb
lret
int
ss
aas
movsb
fucomi
mov
cmp
nop
je
inc
jle
push
push
sbb
add
add
add
out
mul
aaa
cmc
xchg
lcall
mov
add
bound
add
add
jnp
mov
ret
into
push
rcrb
cmpxchg
mov
push
cmp
jmp
fs
ret
or
pop
pop
cmpsl
add
aaa
arpl
mov
push
dec
aas
or
fidivrs
xchg
lods
call
jp
dec
mov
cmpsl
push
movsl
jl
pop
inc
dec
pushl
add
add
add
push
aad
out
fucomip
ss
cmp
rcll
add
bound
add
xchg
lcall
fdivrs
add
sub
dec
js
jns
cmp
iret
cmp
lock
add
jge
jae
test
xor
mov
add
mov
and
mov
add
aam
cmp
fmulp
push
fists
xchg
es
fisubs
jp
int3
mov
out
pop
add
add
add
outsb
jbe
lret
outsb
negb
xchg
xchg
jne
add
bound
add
out
push
les
sti
sub
test
push
icebp
push
jge
xchg
sub
enter
dec
js
push
push
mov
shlb
sbb
sbb
cld
inc
stos
incl
mov
in
mov
sahf
std
loope
in
js
enter
hlt
jbe
push
inc
fwait
push
add
add
add
cmp
paddsb
nop
shrl
test
add
bound
add
hlt
push
imul
mov
cmp
cltd
sbb
sub
shl
std
xlat
xchg
add
sub
pop
mov
mov
andb
or
or
and
dec
scas
fisttps
mov
xchg
pusha
shlb
xchg
lcall
ffreep
enter
insl
imul
add
add
add
jle
call
cli
lcall
add
bound
add
jo
sbb
jge
push
mov
in
out
scas
test
ds
leave
shrl
data16
add
lock
ficompl
daa
shr
in
fadds
cld
leave
iret
inc
dec
fisubrs
popf
mov
pop
out
adcb
ss
push
jo
jmp
push
jnp
cld
sub
mov
push
mov
aad
push
add
add
add
test
and
pop
dec
hlt
data16
or
bound
add
jns
pop
mov
roll
fidivrl
xchg
lods
push
mov
pop
mov
arpl
and
sub
jo
push
jmp
daa
shrb
jmp
sahf
push
or
dec
jo
jmp
ret
jp
pushf
addb
sbb
mov
jnp
or
pop
mov
lods
stos
cltd
sub
movsb
popa
push
jo
stc
add
add
add
outsl
mov
jmp
push
fcmovu
in
ss
std
loopne
add
add
mov
daa
lahf
and
jne
std
xchg
bound
mov
test
lds
ss
sbb
rcll
xor
pop
mov
pusha
out
cltd
push
or
xor
xor
pusha
bound
or
jle
fwait
repnz
je
and
jbe
add
add
add
sbb
inc
jecxz
mov
jns
add
bound
add
test
inc
inc
addr16
aas
bound
or
scas
aas
sti
in
out
fdivl
addl
cmpsb
jo
dec
push
pop
out
xor
dec
fwait
into
xchg
dec
and
xor
mov
xor
push
test
add
int3
movsb
orl
mov
fwait
jmp
add
add
mov
mov
icebp
and
and
shl
add
add
mov
or
add
sub
push
fildll
bound
int
clc
mov
mov
fstpl
cs
inc
jmp
leave
lea
ljmp
push
sub
mov
pusha
xchg
cmp
sub
mov
mov
movsl
enter
adc
lret
pushf
mov
add
add
add
xlat
repz
das
cli
fists
dec
es
adc
popa
mov
loop
add
add
lds
mul
iret
sti
in
testl
roll
cli
or
jl
or
clc
xchg
in
push
dec
sbb
stos
xchg
or
push
jbe
push
push
cmp
adc
stc
cmp
lock
and
mov
sbb
repz
out
gs
inc
push
lcall
add
add
add
adc
push
adc
cwtl
out
jge
adc
add
add
scas
pop
cmp
ss
cmp
and
mov
enter
dec
fldl
adc
fs
adcb
mov
ljmp
push
fs
lret
pop
arpl
unpcklps
rcr
cs
lods
xlat
cmpsl
jl
or
mov
cs
sbbl
add
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
bound
add
add
add
add
add
add
add
pop
cmp
add
add
add
inc
iret
add
outsb
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
