push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
repnz
fisttpl
lds
lods
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
loope
mov
add
in
enter
mov
outsl
es
mov
fcmovbe
ss
fcoml
fsubl
into
es
lret
xchg
adc
mov
rclb
jg
stos
or
and
mov
insb
cmp
lea
lahf
andb
cmp
pop
aam
mov
mov
adc
lret
xchg
mov
shr
out
push
jbe
mov
cli
jmp
mov
js
rcll
scas
pop
mov
lods
cld
inc
dec
lea
mov
pop
xchg
mov
dec
out
and
mov
jp
pop
pop
mov
std
xchg
jb
dec
mov
sbb
repnz
popf
pop
test
sarl
pop
cmpsb
sub
adc
or
jl
andl
adc
mov
popa
shll
or
fcompl
mov
int3
pop
iret
jae
add
data16
jle
mov
mov
test
push
fidivrl
push
add
xchg
lods
push
pop
leave
out
sbb
sbb
xor
arpl
out
push
out
mov
mov
in
fcom
in
jns
push
sbb
ret
outsl
add
inc
lods
add
jecxz
test
fwait
pusha
cltd
mov
rol
cmp
pop
fstl
ficoml
dec
mov
xorb
dec
insb
pop
js
hlt
pop
mov
adc
adc
fcoms
ja
xor
inc
adc
rolb
cmpsb
cmp
clc
loop
insl
in
loopne
lock
insb
ds
scas
cmovp
int
fisttpll
fdivr
mov
lock
js
cmp
repz
ror
fcmovbe
and
pop
mov
mov
or
push
cld
imul
push
int
adcl
cmp
insb
dec
push
inc
xchg
xchg
pop
pop
into
cld
push
add
push
pop
fs
push
fiadds
rcrl
jecxz
push
mov
or
adc
aam
lss
xor
lock
pop
pop
adc
daa
outsb
push
pusha
inc
cmp
and
cmp
xor
mov
inc
push
fldcw
bound
pop
arpl
ljmp
mov
daa
jno
xor
aad
inc
mov
in
xchg
nop
jmp
inc
test
mov
push
pop
mov
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
test
adc
adc
adc
adc
mov
add
cs
adc
jge
or
mov
test
adc
out
inc
inc
out
cmc
sub
bound
pushl
daa
jns
inc
jl
ss
inc
in
inc
push
dec
popa
mov
jecxz
enter
push
shlb
jge
adc
cmpsb
push
rol
rorb
in
push
mov
mov
cmp
cmpsb
js
addb
jns
push
mov
nop
add
rolb
jge
incb
dec
sub
or
pop
cmpsb
sbbl
xchg
push
jge
or
subl
out
addr16
fcomi
mov
xlat
decl
sbb
ret
scas
or
mov
adc
fists
jecxz
repnz
adc
iret
adc
or
je
sbb
test
xchg
andb
dec
xor
movsb
mov
or
js
dec
loop
cmp
inc
fisubl
push
push
xchg
stos
stos
dec
or
pop
sbb
pop
adc
sbb
dec
jbe
push
gs
aas
jge
stos
addl
mov
repz
es
mov
xor
ja
pop
icebp
int
mov
pop
sub
jb
pop
fmuls
stos
cmp
add
jo
shlb
cld
outsb
pop
into
sub
adcb
mov
stos
in
stos
jae
arpl
jecxz
jb
xor
sub
outsb
pop
mov
cmc
adc
mov
or
lret
clc
out
xchg
out
dec
mov
outsb
div
push
sub
incb
cmp
jmp
lods
sbb
and
cmp
ss
jne
loopne
mov
loope
imul
jmp
gs
cmp
cmpsb
das
mov
or
mov
rcrb
mov
in
cmpsl
inc
cmpsl
fwait
or
inc
popf
adc
ja
lock
lds
pop
in
xchg
push
jae
inc
mov
mov
sub
sbbl
call
adc
cmp
shrb
jl
fucomip
xchg
lds
popf
out
mov
mov
stos
lret
dec
pop
scas
or
sub
jmp
dec
je
aaa
out
repnz
mov
ljmp
ljmp
push
mov
shll
mov
sti
lock
rorl
jmp
pushf
xchg
xlat
movsl
mov
stos
xchg
cmc
xor
fs
mov
jb
dec
dec
bound
pop
cltd
pop
fstpt
xchg
push
negl
adc
sahf
mov
ja
dec
outsb
dec
cmp
cltd
adc
adc
jle
insb
xchg
loop
je
adc
mov
or
xchg
rclb
jmp
cwtl
push
mov
adc
adc
mov
call
sbb
pop
out
movsb
insl
inc
inc
enter
lahf
in
cld
mov
push
repz
adc
mov
mov
xor
dec
jle
daa
or
cltd
pop
repnz
mov
lods
mov
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
pusha
sbb
dec
push
jns
cld
fs
adc
inc
mov
pusha
mov
lods
cmp
adc
mov
fdivr
out
int
fwait
outsb
ds
dec
sub
xor
scas
sbb
cmp
fsincos
lret
out
fcomip
out
dec
mov
test
inc
popf
add
inc
repz
out
shlb
push
xor
mov
test
sti
push
jns
fsubrl
testl
das
int3
cwtl
cltd
nop
aam
ret
sub
into
and
dec
or
jno
and
inc
cmpsl
push
xor
lcall
push
push
or
push
adc
pop
divb
std
jb
shrl
hlt
jb
les
ret
dec
in
out
xor
leave
es
jno
lcall
pushf
outsl
push
fs
test
pop
pop
ljmp
stos
pop
add
or
add
push
out
inc
pop
mov
jne
or
push
loopne
ss
stc
jge
sbb
mov
pop
ljmp
out
sbb
notb
enter
aam
dec
jo
jecxz
xlat
aad
mov
mov
cli
fimuls
mov
jae
das
push
add
pop
adc
or
xchg
mov
xor
mov
add
pop
lea
ds
outsl
pusha
cli
push
scas
mov
adc
or
jge
fdivs
pop
jns
or
xor
sahf
cmp
imul
jo
out
outsl
jg
sbb
mov
icebp
pushf
icebp
lods
add
and
call
lcall
lahf
cwtl
cs
cmpb
push
cmpsb
idiv
push
push
lea
add
daa
add
mov
push
fnstcw
mov
sbb
xor
jecxz
shl
ret
ds
jae
pop
divb
mov
cmp
dec
push
hlt
loop
inc
ss
std
nop
fsubrl
xor
and
jae
les
cmp
inc
and
inc
shr
fsts
sti
mov
test
repz
andb
push
shrb
mov
pop
ret
add
inc
inc
inc
push
addb
xor
fildll
test
or
adc
xor
mov
int3
xor
rcll
lcall
xchg
ja
ret
dec
lods
xchg
ret
test
ret
mov
inc
mov
jecxz
push
sub
repnz
inc
push
lcall
push
inc
div
jle
or
jmp
or
push
mov
pop
xor
les
cmc
ja
fiadds
stc
mov
es
outsb
mov
push
and
xchg
inc
ds
std
pop
inc
mov
int
jle
je
loop
and
lahf
ja
jecxz
jbe
cmp
pushf
insb
mov
gs
jg
int
mov
add
pop
shrl
mov
sti
or
mov
outsl
cmpsb
cmp
cmpsb
out
clc
les
mov
out
push
inc
sbb
js
pmuludq
aas
iret
add
inc
lret
lret
imul
imul
or
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
icebp
into
lods
add
adc
adc
adc
outsl
push
xor
cmp
shll
outsb
out
imul
xlat
mov
arpl
jno
sub
enter
popf
sub
nop
popf
cmp
mov
add
mov
pop
xchg
shll
or
jmp
push
inc
icebp
xor
imul
into
outsb
pop
dec
movsb
pushf
lret
mulb
or
out
sbb
xchg
and
pop
rorb
movsl
cmp
jnp
inc
outsb
sub
pop
sbb
lds
es
mov
movsl
mov
adc
jne
popa
xor
xchg
add
inc
insb
sub
dec
inc
sub
std
popa
movsb
sbb
inc
mov
fbstp
xor
stos
mov
scas
shrl
test
rol
xchg
or
mov
stos
ret
sarb
in
stos
cmpb
decl
lea
in
movsb
or
cmpsb
cmp
mov
dec
dec
lods
cmovp
fimull
mov
pushf
inc
addr16
push
imul
outsl
mov
push
cmp
pop
in
inc
mov
xor
lret
fiadds
ja
stos
push
inc
outsl
xchg
jbe
mov
addb
inc
sbb
fs
dec
push
pop
xchg
xchg
jmp
inc
pop
xchg
test
xchg
jecxz
fdivrs
mov
xor
hlt
sahf
out
sarb
lods
leave
inc
sbb
xor
call
fstpt
mov
jl
jnp
xchg
lock
xchg
aad
pop
add
jge
cltd
movsb
cmpsb
dec
sub
mov
int3
ljmp
daa
hlt
call
and
nop
mov
es
sbb
xor
sbb
push
lods
pop
adc
inc
call
jo
jle
and
and
loope
pop
xchg
cmp
adc
lds
lahf
xchg
loope
adc
and
xchg
push
sbb
mov
call
roll
insl
dec
dec
fimuls
fildll
imulb
inc
loop
loopne
push
xchg
mov
mov
lock
nop
and
mov
mov
aad
shll
jp
in
mov
inc
or
mov
push
jl
mov
movsl
mov
push
adc
in
add
xlat
ljmp
fldt
jmp
ja
clc
ss
ret
adc
fdivrp
xchg
hlt
sbb
test
xchg
rcrl
jne
call
mov
sub
ss
pop
fistpl
icebp
mov
stc
nop
mov
sbb
push
fidivrl
in
lds
cli
aad
loopne
mov
div
mov
jns
or
out
and
cltd
popa
ret
mov
out
cli
mov
push
xchg
pop
cmp
mov
xchg
daa
popa
imul
xor
push
addr16
pushf
push
or
mov
sub
cmp
xor
cli
sti
ror
cmc
mov
fcomip
je
mov
mov
xchg
icebp
mov
shl
aaa
sbb
sub
repnz
push
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
dec
pushf
ljmp
adc
adc
ds
cwtl
imul
xchg
jae
lahf
push
mov
or
push
xor
lock
and
or
pushf
mov
xchg
out
dec
sete
movsl
or
sub
xor
leave
xchg
dec
test
push
mov
inc
and
push
in
fs
push
or
push
js
fstps
jns
jno
ret
xchg
jl
xchg
jbe
jg
jae
push
jmp
mov
ja
sub
inc
mov
and
mov
int3
push
test
repnz
jl
cmpsb
js
mov
jne,pt
out
xchg
sbb
mov
loop
xchg
js
fcoml
ljmp
add
gs
xchg
jno
loopne
mov
sbb
cmp
xor
insb
cmp
add
popl
push
test
mov
push
adc
push
jle
les
cmp
add
pop
sbb
std
test
lret
dec
pop
sub
insl
pop
mov
les
inc
adc
leave
inc
iret
and
or
dec
sbb
les
pusha
jns
aaa
push
nop
aad
mov
cmp
inc
mov
aam
inc
sub
out
shlb
xor
out
xlat
mov
aaa
in
mov
pop
dec
jmp
xor
lret
hlt
pop
inc
jno
stc
pop
inc
inc
outsb
push
ljmp
mov
sarb
das
pop
sub
cmpsl
popf
cmp
adc
dec
push
adc
mov
hlt
xor
jl
sti
aaa
test
test
out
xchg
andl
das
dec
bound
stos
test
ds
out
push
cli
je
stos
push
sub
es
insl
test
pop
lock
fstl
nop
cs
jno
jge
cltd
jo
xcrypt-cfb
cmpsl
and
pop
cmc
jno
mov
stc
int3
sbb
call
push
pop
jg
orl
arpl
inc
cmp
clc
pop
xchg
fcoms
sub
mov
ud0
mov
pop
cli
mov
push
mov
fptan
jb
sub
in
sbbb
mov
inc
jg
and
into
xchg
ds
in
xor
aas
in
inc
sti
cli
xor
stos
sbb
pop
inc
dec
fsubrs
into
xor
out
or
mov
cmp
mov
inc
inc
adc
cltd
mov
push
add
ret
test
or
outsb
mov
adc
enter
rcr
mov
xchg
xchg
in
arpl
xor
ljmp
ja
lahf
icebp
add
cs
add
mov
pop
sub
mov
jbe
xchg
mov
jae
popf
test
rcrl
fistps
in
es
leave
jge
aaa
inc
push
loope
fstl
je
mov
in
rclb
xchg
or
popf
xchg
inc
mov
mov
xchg
mov
xor
repz
sbb
pop
jmp
dec
nop
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
jns
push
repz
adc
adc
aad
pop
or
jb
xor
loope
jmp
add
push
and
test
in
pop
mov
in
stc
dec
fs
mov
not
mov
mov
sub
les
lods
popf
clc
loopne
pop
adc
and
xchg
or
daa
clc
aam
mov
jns
mov
push
popf
pop
adc
enter
cmp
jb
jb
xor
add
mov
pop
jns
cld
sub
xchg
insl
cmp
clc
xchg
pushf
dec
cwtl
lcall
push
aas
adc
xor
out
pop
js
pop
xlat
lea
push
je
pusha
leave
frstor
aam
push
mov
xor
xlat
daa
sub
nop
mov
icebp
dec
sub
shll
and
dec
das
xchg
push
sti
in
lret
cmp
xor
push
sti
repnz
cmpsl
cli
mov
test
add
fists
xchg
xor
push
adcl
fwait
pop
pop
aad
pop
jl
jns
mov
scas
testl
shr
mov
fs
divl
mov
push
out
stos
test
aaa
xchg
rolb
or
mov
movsl
rolb
push
xchg
push
inc
and
in
lods
les
cs
fdivs
sub
push
add
xchg
jno
sbb
std
dec
vpcmpgtd
negl
mov
adc
enter
mov
jge
sbb
jecxz
adc
pop
in
pop
arpl
aas
mov
or
mov
in
insl
sahf
mov
sahf
scas
sbb
test
pop
sbb
pop
mov
lahf
daa
add
loop
cmp
mov
xchg
jecxz
mov
and
or
out
dec
cmp
shrb
jecxz
mov
add
frstor
dec
fwait
add
mov
shrl
xor
enter
mov
scas
sub
ficoms
dec
iret
fsubl
inc
int3
fdivrl
push
sub
ficomps
push
mov
aam
push
xchg
ficomps
int3
jnp
push
into
xchg
scas
movsb
imul
fdivs
mov
cmp
push
fistpll
loop
sbb
rcll
test
loope
aad
sbbb
rolb
les
into
push
lret
scas
cltd
mov
aad
punpckhdq
sbb
out
insb
adc
mov
out
lret
imul
das
jg
in
pop
and
sub
push
sysexit
cmp
inc
xchg
xor
mov
sahf
ljmp
push
add
sbb
mov
insb
xchg
and
dec
cwtl
sub
fcoml
ret
add
and
mov
jle
pop
inc
jns
inc
out
jl
push
inc
rorl
faddl
mov
cs
jnp
test
push
cs
push
dec
ret
add
sbb
sub
fbstp
leave
inc
je
xor
mov
leave
dec
and
xor
cmp
insb
xor
fsubl
or
add
aas
xchg
mov
add
jne
add
xchg
cltd
bound
and
push
jo
fistps
xchg
js
jmp
adc
adc
sub
pop
lcall
test
xchg
aad
or
incb
fs
outsl
jno
mov
sbb
xor
dec
adc
mov
sbb
lock
call
insb
push
pusha
add
push
dec
sbb
mov
add
push
jb
adc
scas
sbb
xor
dec
cmc
mov
mov
sub
mov
scas
loop
call
add
call
jb
dec
jl
cmpsb
push
dec
loop
cmp
insb
out
in
leave
mov
cltd
lret
push
xor
sbbb
int3
jns
xchg
xor
pop
test
cmp
jo
stos
lret
mov
insl
sbb
mov
in
mov
jecxz
pop
fwait
mov
outsb
loop
mov
sub
inc
aas
hlt
jmp
jns
mov
pop
imul
xchg
cmp
add
mov
loop
fisubs
roll
sbb
shll
outsl
adc
loope
pop
test
xchg
test
mov
fs
adc
or
cmp
dec
xchg
mov
loope
pusha
movsb
sub
test
and
cmpsb
inc
mov
add
jmp
out
mov
jb
je
mov
pushf
push
dec
cmpsb
sub
add
cmpsb
mov
nop
outsb
xchg
mov
sbb
mov
cmpsb
pop
in
ja
rolb
jmp
and
mov
out
aam
test
jbe
mov
push
test
add
rolb
add
outsb
loopne
mov
inc
jb
inc
xchg
inc
imul
push
cld
or
and
adc
sbb
pop
enter
push
out
mov
int
int3
into
or
out
ss
insl
jnp
jns
scas
stc
fadd
mov
insb
lods
je
cmp
stc
cmp
inc
lcall
xchg
adc
pop
jmp
mov
sbb
xchg
pop
mov
mov
imul
mov
outsb
add
mov
xchg
or
std
adc
stos
mov
insl
jp
cmp
mov
xor
xor
xor
fadd
mov
jmp
jl
or
stos
ss
xchg
data16
push
jb
xchg
sbb
pop
dec
sbb
inc
in
jns
jmp
fsubrs
xchg
mov
lock
mov
push
jg
mov
push
add
lea
adc
jns
movsb
popf
bound
mov
dec
fbld
xchg
in
cltd
pop
mov
addb
mov
jg
push
adc
jnp
lods
adc
sub
sbb
outsl
dec
adc
insb
xor
inc
insl
lock
mov
adc
shll
in
sub
call
inc
pop
xchg
push
sbb
shlb
lcall
jb
mov
lret
cld
add
xor
fcomps
lods
popa
test
stos
mov
roll
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
call
adc
adc
adc
and
sahf
push
lock
stos
dec
pusha
aaa
lods
dec
or
loop
adc
les
add
lds
cmp
bound
fdivs
outsb
imul
mov
jecxz
hlt
add
out
xchg
xor
test
out
sub
jne
andb
dec
ljmp
sub
movsb
into
push
and
sub
das
hlt
mov
idivl
and
lds
std
add
test
jmp
xlat
int
or
sbb
pop
pop
jbe
jno
pusha
xor
xor
or
jmp
push
mov
ds
int3
sti
fcomp
bound
mov
imul
xlat
fs
jmp
and
xchg
fsubs
xchg
cltd
fcomps
jmp
add
push
xchg
loopne
popf
adc
loopne
test
push
mov
push
sub
lahf
pop
mov
scas
ja,pt
sub
test
jecxz
dec
in
mov
xlat
add
ffreep
repz
in
sbb
cmp
aam
jbe
sbb
jne
mov
inc
addr16
push
sub
arpl
es
pop
push
bound
mov
xchg
mov
or
rol
push
leave
aaa
stos
mov
adc
call
clc
out
dec
lcall
sti
scas
inc
add
ret
xor
jne
in
fistps
gs
inc
jne
cmp
sub
nop
js
sub
call
sub
arpl
push
shrl
popf
insb
jg
rolb
movsb
mov
xor
lock
popf
cmc
adc
mov
loop
jnp
fdivl
sbbb
loope
cmpsl
sbb
push
jp
repnz
dec
add
iret
inc
jnp
stos
lods
dec
pushf
insl
sub
ljmp
mov
test
jbe
out
ret
pop
jl
int
cli
ljmp
push
fsubl
cwtl
sbb
faddl
insb
sub
call
leave
test
push
xchg
les
mov
subb
mov
add
and
jge
mov
std
jle
leave
add
sti
cld
andb
add
jp
inc
pop
sbb
pop
pop
orl
sub
mov
cmp
add
add
inc
push
rcl
push
jl
shrb
sbb
bound
lock
dec
adc
faddl
andl
cmp
outsb
inc
jns
inc
push
loop
cmpsl
in
loop
pusha
aam
pop
fldcw
ljmp
mov
and
push
mov
lahf
popf
cmp
pop
repnz
movsb
hlt
and
movhps
sub
adc
push
push
out
mov
mov
or
xchg
sub
fscale
sub
inc
push
adc
sbb
pusha
dec
sbb
add
shrl
data16
pop
subb
inc
adc
out
jecxz
in
jmp
into
adc
stos
add
sti
sbb
mov
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
cmp
and
adc
adc
mov
arpl
inc
xchg
loop
dec
jnp
es
push
sbb
or
mov
repz
mov
add
dec
loop
adc
add
and
inc
cld
mov
ds
add
mov
cltd
cmp
inc
lea
setns
mov
sahf
pop
std
ret
adc
xchg
push
ret
adc
jg
adc
jo
mov
out
inc
push
lahf
push
xchg
fdivrs
sub
jp
mov
fs
xor
adc
jbe
fildll
xchg
xchg
imul
jecxz
fwait
scas
and
mov
and
movsb
push
outsb
test
sti
data16
pop
push
add
test
push
iret
xor
das
cmpsl
xor
pop
shlb
pop
xor
addr16
adc
add
lcall
out
dec
cmp
sub
add
mov
hlt
adc
js
jns
jmp
or
inc
in
xchg
xor
inc
inc
xchg
xchg
xlat
into
aad
lds
adc
pushf
in
bound
jecxz
adc
shlb
inc
imul
lret
add
add
cmp
sahf
fadds
insb
and
xchg
in
pop
dec
ficomps
movsb
xor
out
jno
adc
fcom
jno
in
rorl
pop
lock
loop
lahf
mov
cmp
fldt
sub
mov
rol
xchg
lods
xchg
out
imul
test
pop
jae
and
xor
mov
stc
test
pop
adc
sbb
mov
popf
jle
sbb
shll
jle
test
mov
mov
gs
lret
mov
push
sbb
jnp
bound
push
sarl
xor
pop
lahf
add
loop
mov
mov
addl
dec
pop
popa
mov
add
mov
mov
pusha
xor
mov
dec
jns
stos
es
jmp
pusha
divl
xchg
sbbb
pop
stos
inc
xor
in
test
movups
cld
test
fs
push
pop
rcl
call
out
call
mov
scas
roll
bound
mov
ss
fcmovnbe
mov
sbb
pop
ljmp
test
inc
cs
rcll
sti
fists
shlb
mov
dec
add
hlt
xchg
nop
jnp
in
leave
insb
and
cmp
jecxz
dec
or
lcall
sub
or
or
push
cmp
xlat
fcmovnbe
push
or
iret
bound
or
and
xchg
lcall
mov
pop
daa
push
dec
fs
sub
enter
inc
fs
mov
cmp
js
incb
imul
mov
lock
dec
stos
mov
add
or
push
xor
pop
dec
and
pop
xchg
or
imul
and
mov
pop
cmp
out
std
cmpsb
loop,pn
xor
scas
xor
daa
ja
in
aam
nopl
and
adc
fisubrl
ljmp
cmpl
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
and
fcoms
adc
adc
and
je
add
xchg
sarb
dec
sub
pop
xor
inc
push
or
mov
jmp
stos
or
and
clc
movsl
adc
pop
aad
hlt
xor
mov
aam
push
and
fiaddl
pushf
cltd
lret
mov
push
jp
outsb
nop
push
subb
add
test
sahf
push
bound
cwtl
jbe
out
insb
scas
mov
aam
mov
or
and
cmpsb
pop
ja
jns
rclb
repnz
std
lods
pop
ja
inc
adc
push
push
pop
xor
pop
adc
xchg
arpl
xor
sbb
iret
dec
ret
lods
mov
mov
mov
mov
mov
xor
xchg
dec
cmc
mov
stc
mov
js
add
hlt
and
mov
jb
pop
cmc
jle
push
push
enter
sub
in
js
cld
arpl
or
loop
inc
xchg
insb
xchg
mov
pop
xor
pushf
or
arpl
lfs
mov
rcll
sbb
lahf
mov
pusha
orl
mov
les
push
aaa
dec
adc
pop
and
hlt
ljmp
je
pusha
clc
sbb
mov
jne
gs
mov
cmp
push
sub
mov
loope
cli
ja
xchg
jmp
inc
repnz
loop
sbb
add
sub
lret
shl
shll
rclb
adcl
push
lock
or
add
push
stos
insb
push
mov
lods
pop
ss
adc
mov
or
push
or
fdivl
dec
and
cmp
pop
cmpsb
push
dec
sub
cwtl
mov
mov
imul
or
inc
lret
adc
loop
roll
jl
addr16
mov
jnp
iret
scas
mul
xchg
notb
fstpt
rorb
movsb
pop
cwtl
sub
jecxz
int
arpl
jle
or
cwtl
stos
leave
xlat
outsb
jo
inc
or
lret
shlb
mov
test
adc
mov
inc
outsb
shlb
es
inc
xchg
pop
push
xchg
pop
xor
divl
rcl
mov
add
xchg
out
lds
dec
decb
and
lds
sub
sarb
push
inc
jmp
cmp
ficoml
fists
mov
adc
iret
mov
insl
iret
addb
adcl
push
mov
jnp
xor
ss
cmp
gs
loop
dec
adc
adc
mov
mov
in
cltd
pop
mov
push
inc
in
push
daa
leave
adc
sbb
lods
adc
sub
xchg
cld
in
es
stos
xchg
push
scas
adc
pop
addr16
jns
dec
in
adc
fstpl
and
jns
mov
xor
outsl
xchg
adc
cli
lock
loopne
inc
repz
add
mov
jns
in
dec
xchg
adc
subb
inc
or
mov
lods
add
loopne
jns
test
fcomps
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
inc
lret
adc
adc
adc
mov
sbb
push
cmp
pop
xchg
clc
and
lcall
dec
test
xchg
notl
or
push
dec
jmp
jmp
mov
cli
aam
jge
fisttpl
mov
in
lods
cs
pop
add
and
dec
hlt
inc
and
lahf
xchg
fadd
aaa
andl
ds
mov
popw
jge
stos
mov
insb
in
scas
ss
sbb
test
dec
rcr
aaa
push
nop
jl
xchg
leave
pop
mov
not
adc
jno
clc
lret
mov
cmp
push
aam
push
dec
jl
and
es
icebp
and
sub
or
stc
mov
inc
mov
out
mov
adc
imul
mov
push
push
mov
ret
test
cwtl
arpl
xchg
mov
int
sub
jmp
pop
mov
out
insb
leave
imul
mov
jnp
adc
push
jbe
inc
pop
sub
hlt
popa
or
xor
add
mov
mov
les
pop
push
popf
pop
jmp
ret
xchg
sbbb
mov
fwait
jnp
xor
cmp
shll
adc
aad
mov
fldl
pop
add
lcall
cmp
jae
or
subl
loope
rsm
push
imul
shr
inc
les
push
mov
fst
sub
xchg
adc
and
xchg
cmp
mov
adcb
ja
mov
mov
stos
pop
cmc
ss
arpl
decb
mov
sub
sbb
xor
mov
cli
or
int
in
das
push
cmpsl
orb
or
xchg
cmp
xchg
test
insl
in
or
out
or
cmpsl
inc
sub
xchg
mov
jae
repz
jb
inc
jo
sub
lock
xlat
push
mov
ret
pop
je
je
sub
xchg
xchg
add
jne
ret
push
shlb
addl
arpl
sbb
xchg
bound
addb
cld
pushf
or
sbb
jnp
xor
push
cmp
fiaddl
xor
push
mov
xor
scas
out
mov
jne
andl
push
addl
out
jbe
add
push
xor
rcll
xlat
into
test
outsb
scas
fsubrl
out
clc
jbe
mov
xor
inc
mov
sub
cli
adc
lods
and
rorl
ss
hlt
ds
add
mov
push
lcall
xor
in
jno
push
sub
mov
push
in
fldenv
push
shrl
pop
dec
adc
cmp
shlb
and
pusha
dec
push
push
outsb
push
mov
scas
mov
jne
xchg
call
fidivrs
sbb
xchg
push
sahf
cmp
adc
xchg
fidivl
push
nop
out
cmp
xchg
neg
daa
jl
push
mov
push
int3
dec
aam
jecxz
inc
int3
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
xlat
xchg
jno
adc
adc
adc
xchg
das
stos
mov
dec
xor
jne
push
add
testb
inc
repnz
mov
mov
push
popa
mov
mov
push
cltd
adc
es
pop
push
lds
xor
dec
push
int3
in
push
lea
ja
cmp
loopne
jmp
stos
clc
outsl
mov
inc
xchg
mov
xchg
daa
mov
repnz
add
push
pop
idivl
or
out
cwtl
in
push
clc
and
movsl
sbb
insb
inc
and
dec
and
lcall
pop
sbb
adc
js
loop
sbb
sahf
test
inc
add
jg
sahf
es
inc
aas
xchg
outsl
push
std
lcall
in
cli
push
jbe
fisttps
je
pop
push
adc
xor
ljmp
push
sbb
lds
psubsb
pusha
xchg
sbb
add
push
out
test
jns
add
dec
iret
std
repnz
adc
lods
movsb
or
xchg
and
pop
mov
or
clc
jno
inc
lods
pop
int
or
aam
jmp
mov
jle
das
enter
cmc
adc
rorl
mov
jno
data16
or
adc
sbb
mov
imul
adc
push
pop
dec
and
mov
dec
or
add
je
mov
sub
fdivrl
dec
adc
les
test
movsb
or
mov
ds
out
cltd
pop
js
testl
adc
jecxz
out
inc
dec
jns
xchg
xor
mov
popf
insl
push
mov
clc
jp
lea
xorb
push
or
cli
adc
jp
fisttps
mov
cmp
stos
leave
add
ds
inc
push
call
sub
or
test
scas
pop
mov
not
jle
lcall
add
in
push
inc
ja
xor
pop
rcll
pop
xchg
xor
fldcw
ljmp
mov
ja
mov
push
imul
sbb
mov
xor
dec
sti
or
shl
out
mov
mov
stc
adc
and
mov
cmpsl
xor
cmp
fcmovu
hlt
enter
aad
mov
jle
mov
cmp
xchg
lods
xchg
in
and
mov
fs
push
cli
mov
xchg
ss
gs
adc
into
cmp
sbb
movsb
dec
jnp
aaa
je
dec
jl
push
adc
movsb
push
mov
popa
fs
push
imul
dec
and
es
add
pop
mov
cld
out
jmp
sub
inc
fadds
cs
lods
inc
insb
testb
sbb
nop
ljmp
stos
xchg
cmpsl
or
add
push
sti
mov
push
shr
movsl
xchg
lods
inc
mov
out
stos
movsl
xchg
fisubs
ds
in
cmp
mov
jg
iret
sti
cmpsb
popf
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
mov
les
adc
adc
stos
mov
pop
hlt
push
loop
test
xor
cld
jo
popf
decb
or
jmp
push
out
inc
roll
or
gs
stos
aam
cltd
jno
loopne
or
js
jns
fdiv
ret
mov
jecxz
test
jns
js
scas
push
add
ds
loop
sbb
pop
push
mov
repnz
sahf
pop
jnp
movb
aaa
cli
xlat
pop
xchg
xchg
lret
pop
pushf
adc
xor
jmp
mov
ja
ret
jmp
inc
mov
add
mov
mov
cmpsb
movsb
push
rcrl
pop
pop
in
add
lods
sub
pop
clc
dec
mov
mov
push
xchg
test
insb
scas
or
cmp
fsubp
dec
rol
fcomp
mov
dec
lock
jge
lcall
repnz
into
out
pop
push
mov
ja
cmp
sti
out
ret
test
xchg
cli
jns
lods
mov
mov
sub
dec
mov
stos
mov
das
fmul
roll
shl
nop
test
or
xchg
cld
or
xchg
jo
das
jle
xchg
js
jl
loopne
pop
mov
xchg
mov
adc
int
cld
mov
dec
or
dec
push
mov
movsl
xchg
sub
xchg
leave
inc
xchg
xchg
jp
adc
pusha
inc
int
xlat
in
mov
inc
leave
jb
cmp
add
iret
out
bswap
pop
loop
mov
xor
or
je
jno
dec
xchg
sub
add
mov
xchg
inc
fs
lods
or
cmp
push
int
lret
or
and
cld
dec
mov
dec
jo
aas
fsubrl
inc
fldenv
sub
lret
test
inc
sub
push
jbe
or
out
loope
adc
push
repz
in
iret
sub
insb
mov
pop
leave
call
inc
xchg
loope
xlat
sub
popa
pop
or
repz
pop
enter
inc
cwtl
out
xchg
pop
jo
lret
mov
out
dec
gs
aas
cltd
push
lea
divl
and
lret
outsb
sbb
shl
fwait
iret
nop
dec
repz
loope
inc
xor
sub
cld
sub
out
mov
daa
mov
jno
fcmovb
clc
mov
adc
je
out
mov
stos
lock
adc
scas
mov
sbb
les
push
gs
imul
scas
in
pop
mov
cmp
jb
test
stos
pushf
xchg
xchg
shll
sub
lret
pusha
pop
out
fcompl
dec
sub
ret
sub
pop
push
je
pop
insl
jle
rcrb
mov
out
imull
inc
in
cld
pushf
je
lock
dec
insb
cmp
movsb
cmp
popf
mov
xor
pusha
aam
dec
sub
push
lahf
std
in
cs
insl
inc
push
jp
mov
ds
iret
xchg
jnp
jmp
dec
sarb
mov
jmp
cmp
in
or
loope
pop
push
sbb
rcll
ljmp
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
xchg
inc
ljmp
inc
and
adc
push
jmp
dec
mov
les
in
mov
mov
sub
pop
inc
icebp
cmp
or
sub
aaa
ds
pop
cwtl
fdivrs
hlt
jle
les
shrl
rcl
ds
in
outsl
push
call
push
mov
push
jno
cmp
xchg
xor
into
popl
jnp
ja
mov
add
adc
pop
call
test
loope
mov
popl
repz
push
clc
dec
repz
lahf
sbb
push
das
xchg
sbb
cs
cmpsb
js
fcomps
gs
sub
xor
pop
loop
and
or
jle
lea
mov
dec
pop
inc
mov
sub
pop
test
add
cmp
retw
pop
sbb
or
sbb
sbb
rclb
inc
aad
mov
gs
mov
out
jnp
push
lock
adc
dec
int3
out
mov
aas
sbb
push
inc
stos
cmp
xor
mov
dec
inc
dec
push
int
out
fucomip
or
push
cmp
xchg
mov
out
sbb
in
fstps
ret
lcall
repnz
push
cmp
sbb
add
loope
adc
sub
imul
cmp
pop
sbb
pop
ds
dec
xchg
xlat
pop
mov
add
stos
idivl
repnz
scas
mov
push
push
stc
and
popf
cmp
std
lock
loop
scas
mov
xor
xor
lock
adc
xor
dec
sub
push
or
jg
dec
xchg
or
mov
mov
sbb
shll
or
sbb
xor
inc
and
lock
les
inc
cmp
out
cltd
cwtl
mov
popa
mov
adc
rcrb
test
sub
pop
pop
and
clc
lods
cmp
cmp
mov
mov
push
mov
movb
push
movsb
push
les
lret
rorl
pop
push
jecxz
ja
call
into
sub
les
mov
fstpl
dec
xchg
cmc
nop
stc
dec
and
adcl
aas
hlt
adc
push
neg
jl
jmp
stos
imul
add
aad
aaa
jbe
ja
adc
jne
inc
bound
aas
out
and
jb
xor
and
inc
cmc
mov
mov
aas
or
mov
dec
push
mov
stc
jmp
inc
loop
insb
dec
movsl
inc
pop
sbb
inc
xor
dec
cltd
test
jl
or
mov
sti
xchg
in
fs
mov
bound
je
sbb
cmp
notb
mov
mov
addb
and
pop
addr16
pop
cwtl
push
xor
stos
sbb
enter
push
loopne
jmp
test
jl
jl
or
enter
out
dec
out
test
adc
jae
stc
inc
cmp
iret
ja
fdivrs
dec
rorb
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
jle
mov
adc
add
mov
test
lahf
mov
sbb
push
pop
call
adc
mov
ja
pop
adc
dec
in
sbb
or
ds
out
sub
aaa
cli
add
push
ficompl
jb
fwait
mov
mov
dec
orb
pop
stos
pop
jl
lret
outsl
gs
fstpt
inc
mov
jb
icebp
adc
jl
inc
mov
jae
test
sub
mov
testl
lret
lods
add
or
out
add
push
incb
jecxz
or
stos
scas
gs
mov
or
imul
xchg
cmp
adc
ljmp
mov
add
dec
test
lahf
and
bound
push
push
mov
insl
or
or
outsl
sub
incb
sub
ss
inc
fwait
dec
dec
lods
jmp
js
mull
dec
push
jge
or
sub
cmpsl
pop
cmc
xchg
stos
in
cmp
pushf
jmp
cs
cmp
arpl
data16
loopne
add
push
dec
movsb
popa
repz
out
sub
sbb
fildl
addb
insl
push
je
dec
sub
push
lods
mov
mov
scas
loopne
lock
sub
leave
and
arpl
cmp
sub
js
out
arpl
sub
cld
mov
into
idivb
or
cmp
cltd
movsl
and
mov
or
movups
pop
mul
cmp
jg
push
add
cli
loop
xchg
mov
sub
xchg
jne
test
jl
sti
sub
mov
xchg
addr16
andb
cld
lcall
mov
movsl
stos
rcll
shlb
sti
das
mov
imul
jmp
jbe
fildll
sub
mov
pop
xchg
or
sbb
test
cmp
xor
jne
pop
test
and
out
stos
and
outsl
cmp
lock
loope
iret
lock
sbb
mov
dec
sub
das
loope
in
ss
or
adc
mov
jle
jl
jbe
aas
or
rep
lea
pop
dec
data16
dec
imull
mov
hlt
daa
rcr
jecxz
mov
mov
shlb
mov
call
xchg
xchg
addr16
cld
pusha
lcall
inc
popf
xor
dec
int
arpl
lock
scas
lret
or
jg
in
pop
jbe
inc
jle
dec
pop
jo
or
cs
inc
ret
inc
sbb
jns
push
clc
inc
inc
inc
dec
mov
dec
dec
mov
pop
test
sub
pop
sbb
dec
mov
jp
in
lock
push
arpl
mov
andb
mov
lods
dec
lods
insb
ljmp
cmp
xor
cmpl
adc
and
jo
mov
ds
rcrb
jb
lock
dec
stos
in
pushf
mov
testl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
push
mov
adc
adc
xchg
jns
xor
sbb
rcr
out
sbb
dec
fildl
std
cmpsl
insb
ficompl
jp
lods
xchg
or
inc
sbb
btr
stos
dec
cmpb
in
repnz
cmpl
jae
add
shrl
or
and
loop
rolb
sbb
loop
loopne
data16
and
pop
imul
test
add
cmp
xor
fsubr
repz
in
adc
cwtl
dec
and
test
dec
cmpsl
xchg
mov
scas
xchg
xor
inc
xchg
popa
inc
sub
or
dec
das
xchg
in
inc
add
cmp
push
add
jo
adc
sahf
pand
out
mov
or
jnp
movsl
and
pop
imul
pop
lea
stos
je
in
sbb
movsb
mov
enter
inc
jmp
inc
loop
mov
call
mov
das
mov
aas
outsl
adc
jle
adc
loop
fwait
mov
rcrb
in
jp
inc
pop
xchg
out
xchg
push
inc
sub
xchg
into
inc
loope
adc
cmp
mov
xor
push
mov
std
inc
insb
sub
xor
ljmp
or
pop
lods
pop
and
jno
imul
lahf
popa
cmp
sub
jge
popf
mov
faddl
test
mov
xor
es
push
mov
adc
mov
adc
xor
frstor
imul
fldt
xchg
sub
push
nop
cmp
xchg
mov
pushf
adc
add
adc
ljmp
and
xchg
and
outsb
adc
mov
or
fsts
sbbb
testb
stos
pusha
sub
and
enter
pop
je
or
push
cmc
mov
or
movsb
push
push
xor
mov
inc
cmc
imul
pop
dec
adc
insb
lock
cmpsl
stos
and
stc
inc
xbegin
imul
movsb
adc
xchg
push
xchg
sub
and
ja
out
in
aas
inc
push
xchg
gs
fisttpl
mov
call
fsubrp
push
popa
fmuls
add
cmp
mov
jle
insl
cld
stc
ss
cli
test
xor
mov
imul
or
lds
test
ja
jle
mov
push
sbb
les
inc
mov
xchg
sbb
iret
pop
out
or
pop
or
pop
sub
push
aam
shr
adc
std
int
mov
ret
and
mov
xor
aad
sbb
adc
movsl
add
aas
insl
bound
mov
inc
ret
mov
xchg
xor
imul
lds
arpl
push
addr16
pop
mov
movsb
add
test
and
cmc
and
push
or
push
cld
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
in
rep
hlt
scas
adc
adc
adc
pop
cmpsl
sbb
jno
dec
in
push
cmove
leave
in
sbb
out
inc
xor
aad
rcr
insl
and
pop
sahf
pusha
mov
sub
jns
arpl
lods
cs
mov
daa
fiaddl
cmp
mov
pop
mov
outsb
test
push
cwtl
mov
sub
es
jns
popa
and
pushf
leave
push
pmaxub
stos
xor
lahf
test
xchg
push
mov
sub
pop
xchg
orl
or
out
insb
idivl
xchg
sbb
jecxz
mov
fcomps
orb
shll
or
dec
add
movsb
ss
imul
push
xchg
xchg
xchg
or
sbb
or
popa
inc
cmp
push
cmovno
push
aaa
jne
aam
mov
sub
adcb
test
mov
jo
in
in
adc
mov
mov
mov
sbb
das
insb
cmc
xor
ljmp
or
jmp
pop
jecxz
stos
add
fisttpll
xor
xor
ljmp
sbb
sbb
das
dec
cmc
sub
adc
rorb
fidivl
or
inc
sbb
dec
in
or
dec
mov
in
jp
adc
pop
sbb
call
sbb
mov
rclb
lret
xchg
cld
fsubr
jl
roll
dec
shrb
push
adcb
mov
bound
mov
or
sub
add
mov
push
mov
fs
pop
push
shlb
loop
insl
add
cmp
fcmovb
cmpsb
xchg
mov
jmp
dec
scas
xchg
lcall
faddl
xchg
mov
movsb
outsl
stos
mov
iret
lea
out
and
inc
mov
pop
aas
mov
sbb
pop
xor
mov
cmpsl
cmp
mov
shrb
rolb
mov
jg
aad
xor
ljmp
outsb
push
es
dec
shrl
insl
popl
mov
adc
sub
pop
outsl
or
jmp
pushf
gs
push
sub
bound
pop
fnstenv
jmp
adc
mov
lock
insb
or
xchg
fwait
mov
add
bound
cs
xchg
int3
mov
push
jge
inc
fnstsw
lods
mov
jle
sbb
sti
movsl
and
imull
loope
sub
aam
adc
clc
and
in
cmpsl
fwait
je
or
cmp
retw
push
pop
xor
test
pop
scas
and
push
dec
or
dec
mov
mov
jne
adc
or
push
or
mov
cmp
jno
push
es
daa
or
in
aad
arpl
cli
adc
pushf
jmp
push
xchg
add
pop
loopne
jne
sahf
das
push
lock
frstor
data16
aaa
cmp
and
xor
jg
mov
popa
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
daa
xchg
js
movsb
adc
adc
adc
mov
les
test
pop
ljmp
mov
cmp
cld
test
push
pop
jge
sub
mov
hlt
cmp
xor
mov
push
sub
jmp
push
mov
cmc
cmc
inc
cmc
mov
jmp
cmc
in
xlat
ds
pop
sbb
and
lods
cmpsl
jp
mov
dec
lret
inc
adc
mov
shrb
addr16
mov
cld
jmp
std
repnz
and
push
insl
ret
push
inc
mov
aaa
inc
into
fidivs
hlt
sub
inc
jno
adc
lahf
cltd
aad
in
and
push
pop
sub
insl
and
lcall
fdivs
and
push
cmp
cmp
pushf
inc
daa
dec
loop
int3
rcl
loope
repnz
xchg
imull
aad
mov
add
mov
xchg
xchg
fbld
xchg
sub
in
dec
mov
arpl
sub
jo
xor
xchg
in
jae
fsubrl
pop
sti
mov
lret
stos
jbe
pop
insl
data16
mov
stos
sub
mov
sbb
push
jbe
fldl
jne
pop
sbb
adcl
and
xchg
inc
pop
ljmp
cmpsb
or
sbb
jo
jbe
mov
cmpsl
mov
int3
xor
jne
ds
sub
dec
insl
pop
outsl
lret
adc
inc
test
shrl
cmp
or
jo
adc
pop
dec
and
clc
pop
fdivr
mov
jbe
clc
jnp
mov
out
jbe
movsb
mov
sti
mov
fs
cmp
add
popa
adc
xlat
pop
cmp
lret
icebp
xchg
or
ss
fnstcw
jmp
andb
imul
call
js
jnp
insb
std
mov
sbb
inc
push
cmp
pop
and
movsl
mov
aas
in
dec
sub
xor
dec
cmp
xor
repnz
sbb
adc
cmpsl
cmp
sti
and
add
outsb
adc
or
enter
xchg
insb
xor
jl
cmpl
xchg
in
adc
cmc
mov
jmp
shrl
in
xorb
adc
cmp
fsubrl
in
in
mov
push
mov
call
mov
gs
cmp
std
cmp
adc
sub
sbb
fs
arpl
push
jg
and
pop
insl
fdivl
arpl
movsb
pop
jo
clc
pop
jg
jmp
hlt
push
out
jns
in
in
xchg
movsl
xchg
popf
and
data16
enter
ljmp
cmp
jge
leave
pushw
inc
xor
push
ret
call
pop
cmp
scas
ja
inc
mov
lods
jp
dec
mov
jg
cmpsl
jge
xchg
cli
mov
dec
push
or
mov
add
jl
cmp
push
cmp
inc
inc
dec
push
popf
daa
aas
push
mov
add
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
cltd
mov
mov
adc
adc
fs
inc
sub
xchg
adc
int
jmp
inc
cli
aaa
lea
je
jp
adc
es
mov
ss
repz
in
inc
bound
idiv
cmp
mov
int3
inc
std
dec
sti
push
out
std
stos
andb
movsb
fmul
xchg
adc
mov
daa
xlat
addr16
mov
xchg
dec
leave
mov
dec
nop
mov
adcl
dec
mov
xchg
stc
mov
cmp
jecxz
cmp
arpl
pusha
ljmp
inc
nop
mov
push
es
adc
ss
inc
scas
aas
sub
icebp
lcall
jl
ja
fldenv
dec
cmp
lret
mov
mov
pop
mov
outsb
xor
aad
addr16
addr16
pop
fistpl
inc
or
xorb
ljmp
mov
or
jl
dec
dec
cmpsl
sbb
pop
pushf
dec
inc
test
lock
inc
cmp
loop
sbb
sbbl
hlt
sub
mov
cmp
loope
stos
cmp
lds
cs
adc
movsl
lds
enter
jnp
gs
jno
ret
or
mov
shlb
jg
pop
dec
scas
sub
fiaddl
mov
xor
cmpsl
imul
mov
dec
cmp
pop
fwait
pop
or
inc
mov
sbbb
sti
test
or
mov
inc
add
mov
ss
int3
mov
pushf
mov
push
lret
outsb
mov
xchg
inc
jb
ds
mov
inc
mov
loopne
hlt
xchg
mov
daa
insl
xchg
test
mov
cmp
mov
test
adc
out
lds
imul
adcl
mov
scas
mov
jecxz
cmpsl
jns
xchg
adc
inc
mov
imul
jns
pop
lahf
sub
fwait
mov
sbb
fimuls
mov
pop
xlat
insl
cld
xor
inc
adc
pop
mov
cltd
or
lret
jbe
and
pop
leave
hlt
jp
xchg
pop
std
aas
or
rcrl
xor
adc
ficoml
lods
insl
outsb
push
push
mov
pusha
cmc
dec
or
in
rol
jne
das
push
or
ret
outsb
mov
adc
adc
push
mov
inc
mov
add
jbe
cld
test
repz
jge
fcom
cmp
mov
fldl2e
pop
ret
inc
ja
test
hlt
dec
iret
pop
imul
lret
inc
mov
imul
xchg
sbb
aaa
push
cmp
call
mov
mov
stc
mov
push
mov
addr16
xchg
pop
cmp
cmp
mov
shlb
lods
cmp
repnz
add
rcrl
inc
adc
xchg
aas
xchg
sub
mov
xor
jecxz
or
jne
fldt
cltd
pop
dec
js
loope
jg
in
lret
in
xor
pop
and
sbb
test
mov
push
subl
or
cmp
iret
das
cmp
ret
push
xor
shl
xor
or
add
mov
jmp
xor
and
insb
lret
mov
loope
adc
adc
adc
mov
mov
daa
or
dec
inc
jno
or
sbb
dec
test
mov
mov
psubusw
xchg
aaa
cld
pop
fstpl
xchg
test
cmp
mov
or
das
jg
mov
add
ss
test
lcall
mov
inc
sbb
outsb
add
pop
sbb
lods
mov
mov
mov
sbb
int3
clc
mov
sahf
mov
sahf
or
repz
pop
adc
mov
mov
sbb
addb
add
jecxz
push
pop
movsl
repz
fcoms
mov
dec
xor
lahf
movsb
push
pusha
je
adc
shrl
das
mov
daa
repnz
int3
add
sbb
cwtl
mov
mov
pop
cli
lock
test
aaa
add
mov
dec
jne
test
push
in
enter
and
decb
xchg
lods
inc
js
sub
imul
in
mov
cmovnp
test
jle
xchg
and
mov
sub
outsb
insb
fucomp
mov
popf
pop
insl
mov
sbb
inc
leave
rcr
aaa
inc
popf
das
sbb
daa
in
adc
cmp
test
shll
insl
sbb
lods
sarb
icebp
push
or
push
inc
xor
adc
push
mov
movsl
addr16
outsb
test
lea
cmp
ret
arpl
push
push
push
pop
adcl
mov
test
ss
popf
in
inc
clc
inc
sub
loopne
leave
cmc
jno
pop
pusha
orl
push
mov
sarb
mov
stos
ficomps
push
mov
loop
ds
lods
aad
into
imul
lcall
call
repz
invd
mov
sbb
xchg
popf
in
push
mov
push
mov
cmpsl
out
fistpll
cli
adc
or
mov
das
pop
mov
fs
push
ret
mov
add
sarl
add
jne
inc
fldt
pop
xor
xor
frstor
cltd
aaa
out
lret
ret
pop
mov
sbb
pusha
push
sbb
ja
movsl
mov
pop
push
cli
out
insb
jb
mov
push
shlb
xor
and
push
das
iret
nop
mov
and
mov
xor
stos
jp
and
mov
mov
int3
push
fisttps
cmpl
fists
fistl
dec
push
or
sbb
sub
iret
sub
jnp
stos
jmp
imull
pusha
in
aas
and
or
fldenv
xchg
mov
out
movd
mov
mov
mov
lds
and
lret
out
inc
cmp
cld
mov
call
jae
jecxz
pusha
sti
inc
fsubrs
pop
pop
nop
mov
aas
mov
dec
pop
sbb
sub
stos
stos
decl
sub
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
and
adc
adc
adc
arpl
inc
adc
scas
lods
push
out
or
jae
cmp
dec
xor
xchg
pop
cwtl
jle
pop
sub
mov
and
test
push
dec
cwtl
xchg
cmp
fidivs
mov
jb
or
aam
arpl
cmpsb
pop
inc
pop
or
xchg
cmp
push
cmp
pop
and
fistpl
adcl
xchg
fistpll
add
jge
adc
and
arpl
push
in
iret
mov
sbb
pop
cli
bound
dec
fdiv
nop
jg
add
cwtl
xchg
aad
std
dec
or
add
popf
loop
mov
ljmp
xor
or
add
imul
jo
int
ret
insb
push
sbb
not
mov
fcmovbe
xor
scas
cmp
data16
mov
test
aaa
push
aaa
and
sti
mov
sub
aas
and
jnp
iret
add
pop
inc
es
decb
pop
out
jecxz
pop
dec
xchg
jecxz
add
pop
jb
adc
mov
cmp
add
repnz
aam
mov
fs
insb
aas
xlat
sbb
mov
repz
popa
loope
add
stos
ret
xor
add
stos
andl
dec
les
jl
outsb
or
repnz
call
lds
ja
jp
mov
ljmp
xor
jno
lods
xchg
sub
ljmp
arpl
add
push
pop
sbb
jp
int
shrl
mov
dec
push
and
ds
imul
bound
dec
push
in
idivl
in
push
sbb
push
xchg
dec
pusha
inc
pop
pop
mov
cld
jge
call
fmul
leave
pusha
jp
decl
lds
test
in
cs
leave
pop
sbb
cmp
mov
ljmp
jo
scas
fwait
out
out
or
pop
movsb
push
flds
sub
pop
fisubs
xchg
mov
push
out
sahf
loope
jg
mov
dec
jb
push
ja
sbb
enter
pop
ss
sub
push
adc
cmp
das
sub
dec
cmp
mov
lret
cld
cmp
sbb
adc
pop
inc
enter
aaa
popf
test
cmp
loopne
std
idivb
sub
mov
cmp
xchg
xor
sbb
push
pusha
inc
dec
rorb
rorb
repnz
imulb
inc
add
mul
outsb
lret
les
ljmp
ret
sub
jae
in
jp
mov
mov
xor
jo
mov
lods
aas
push
mov
cmp
imul
lahf
scas
dec
dec
inc
sahf
mov
xchg
je
xchg
ds
pop
xchg
pusha
std
inc
ljmp
mov
pop
stos
outsb
inc
lret
loopne
ds
ss
jmp
sbb
les
jno
and
jg
int3
mov
icebp
movsb
sbb
repnz
scas
out
mov
sbb
adc
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
sub
ret
mov
adc
adc
js
data16
sbb
outsb
je
aaa
sub
neg
dec
mov
scas
pop
inc
push
in
fld
mov
pop
inc
add
cwtl
xor
cmp
mov
rcrl
pop
dec
mov
test
inc
into
rcrb
sbb
fdivrl
arpl
cltd
repz
dec
in
pop
push
mov
push
add
lea
movb
push
add
add
sti
push
outsb
mov
cmovge
out
mov
mov
sub
xor
push
dec
jmp
adc
lock
cmp
cmp
mov
out
repnz
xchg
test
jecxz
stos
jecxz
inc
push
movsb
or
popa
stc
push
repz
repnz
lahf
pop
clc
xchg
ja
jmp
mov
cmpsb
push
mov
xor
jp
push
hlt
lock
mov
arpl
std
dec
lods
inc
mov
mov
ds
xor
lea
push
int
sub
leave
xor
jl
pusha
xchg
das
lea
aad
jl
cs
out
cmp
mov
les
push
aad
xchg
jge
cmc
in
aam
cmpsb
mov
cmp
pop
mov
mov
mov
lods
or
lods
in
jecxz
sbb
lods
icebp
arpl
push
mov
mov
test
adc
sbb
dec
imul
jne
xor
out
out
lcall
outsb
mov
push
lods
outsb
in
push
mov
mov
movsl
test
inc
jecxz
testl
xchg
push
jbe
scas
shlb
pop
dec
xor
cmp
lret
out
cmpsb
lahf
xor
dec
mov
dec
enter
sbb
sbbl
mov
dec
jg
out
call
xchg
rcrb
icebp
fsubs
pop
gs
push
rcrl
dec
jne
cld
cmp
mov
pop
shll
inc
outsl
or
xlat
mov
mov
xor
jo
testb
add
inc
and
shrl
psrlq
dec
cmp
inc
xchg
imul
fs
bound
cs
xlat
jl
fcomps
mov
popf
xor
fnstenv
and
jbe
addr16
cmp
enter
cmp
lcall
pop
push
mov
inc
pop
dec
nop
jno
loop
or
mov
test
lret
nop
cli
scas
sbb
mov
arpl
fnstenv
pop
fisttps
stos
or
out
and
lea
xor
inc
jno
dec
jnp
add
sti
es
xor
iret
sahf
mov
adc
xchg
lods
mov
insb
mov
mov
bnd
mov
xchg
push
adc
push
jge
mov
inc
adc
lret
pop
adc
sub
pushf
adc
or
add
mov
lock
fdivs
mov
sub
push
inc
jg
xchg
jns
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
lret
jmp
inc
push
std
je
pop
cmp
mov
mov
push
mov
xchg
xchg
fs
hlt
push
mov
mov
xor
orb
fisubrl
inc
movsb
and
mov
test
jg
adcl
adc
push
fwait
jl
dec
jne
xor
jge
std
or
faddl
sbb
xchg
pop
inc
in
aaa
out
jge
push
jge
stos
lods
in
mov
loopne
int
hlt
xchg
pop
adc
push
or
add
sub
mov
fsubp
pop
sti
cmp
adc
sbb
mov
mov
jecxz
inc
fsubr
adc
sti
arpl
inc
mov
loopne
test
leave
adc
and
jg
jns
cmc
es
imul
inc
xchg
mov
cli
dec
scas
pop
adc
dec
lds
inc
and
decb
test
scas
jno
inc
mov
push
xchg
movsl
je
rcr
push
pop
movsb
cmp
insb
icebp
and
adc
xchg
push
mov
in
mov
inc
sti
jg
data16
popa
fidivs
push
dec
mov
add
mov
sbb
xor
movsb
dec
or
cmc
out
mov
fmul
mov
in
cmpsl
jle
adc
add
adc
xchg
push
sub
aam
scas
xor
inc
fwait
test
popf
xchg
dec
mov
cmp
xor
and
js
dec
out
cmpsl
and
mov
cmp
stos
clc
mov
or
jge
test
fstpl
lock
std
aaa
repz
sahf
inc
or
xchg
mov
xlat
jp
sbb
sub
add
push
fisubl
dec
adc
dec
fisttps
in
and
jp
rcll
mov
cmp
jmp
shlb
jp
xchg
mov
and
cmc
push
jecxz
add
insl
mov
mov
lods
add
popf
push
fsubrp
mov
fiadds
mov
inc
xchg
mov
lods
lea
cwtl
jbe
pop
push
adc
mov
adc
pop
xor
adc
jnp
mov
adc
js
xor
insl
sbb
in
push
aas
mov
push
in
push
shll
push
lods
out
dec
sub
insl
addl
sbb
add
shll
int3
iret
arpl
adc
mov
shll
jns
jmp
xchg
mov
xchg
sbb
into
ds
rcll
fldenv
popl
imul
imul
mov
mov
adc
jo
push
pop
pop
mov
dec
add
push
mov
cmc
cmpsl
inc
jl
jmp
push
add
jae
and
adc
rcll
dec
mov
cmp
mov
lods
mov
mov
movlps
scas
pop
push
lds
push
xor
adc
rclb
add
aam
jl
jecxz
lcall
loopne
xchg
jne
push
lcall
scas
xchg
mov
xor
pop
jns
insl
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
lods
sbb
adc
adc
ljmp
jg
mov
out
dec
mov
shl
or
add
out
cmp
jbe
sub
cmp
in
cmpsb
clc
fmuls
rorb
scas
int3
dec
mov
mov
lods
push
xchg
ret
mov
sarb
push
jns
xchg
iret
fidivrs
cmp
sbb
imul
add
inc
cs
xchg
nop
rorb
lret
pusha
mov
add
in
loopne
stos
xorl
lret
out
imul
notl
outsl
fisubl
sub
repnz
scas
cwtl
andb
cmpsb
addb
xor
inc
jp
and
pushf
adc
int
pop
mov
xchg
mov
cmp
lahf
sbb
add
pop
xor
and
and
pusha
cmpsl
imul
jns
stos
ret
popf
in
cmp
mov
push
loope
sbb
rep
sbb
push
mov
mov
jbe
sub
jp
pusha
jae
mov
cmp
rol
test
and
xor
enter
subl
int
repnz
cmp
movsl
sub
test
jno
inc
jmp
cmp
out
aad
mov
dec
out
xchg
test
sub
xor
push
xchg
fnstcw
imul
lret
shlb
pop
mov
jg
jmp
cli
and
lea
sbb
dec
rcrb
pop
movsl
jp
xchg
add
sbb
mov
dec
out
mov
fmuls
mov
fistl
aam
inc
jb
int
rol
mov
outsb
mov
sub
lea
or
sub
xrelease
dec
stc
inc
aas
enter
icebp
push
sub
insb
jle
popa
test
push
push
or
xor
cmpsb
adc
fs
gs
push
mov
xchg
jmp
push
in
aam
mov
sti
dec
mov
lods
or
lds
test
test
xor
add
xchg
xchg
jl
lret
add
push
fidivrl
mov
imul
sub
xor
cmp
mov
in
stos
mov
xor
adc
js
cld
xchg
mov
xchg
or
insb
jge
daa
movsl
push
aaa
sub
lods
adc
mov
test
push
ret
pop
sub
sbb
out
in
xchg
int3
mov
push
lret
fs
push
sbb
mov
gs
xchg
outsl
inc
lret
push
mov
cld
aas
stc
push
in
rcrl
mov
cwtl
pop
pop
jo
nop
jmp
addr16
imul
inc
lcall
and
test
test
jmp
or
jbe
pusha
inc
lods
adc
pop
pop
pop
fwait
stos
orl
xor
adc
push
adc
jbe
cmc
pop
jo
arpl
mov
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
xchg
push
je
adc
adc
mov
mov
cltd
add
jne
xchg
xchg
out
popa
xor
add
lcall
lahf
cmc
add
pmullw
dec
shlb
xchg
mov
xor
sbb
mov
mov
adc
pop
mov
insl
test
icebp
stos
xor
pop
out
icebp
enter
mov
fmull
addr16
fcmovne
dec
loope
repnz
pusha
jae
xchg
fiaddl
in
xchg
pop
mov
loopne
pop
mov
adc
mov
je
test
xchg
and
jle
sbb
sti
int3
add
stc
mov
loop
adc
sahf
push
enter
paddusb
imul
sub
popa
push
add
scas
jae
mov
xchg
jg
fcmovnb
das
dec
stos
dec
push
dec
push
pop
in
sbb
add
and
aad
in
inc
stos
or
ja
inc
lods
jmp
push
inc
cmpsl
cmp
mov
cwtl
push
mov
or
xor
insl
or
pop
adc
inc
gs
imul
sbb
iret
push
lods
pop
lock
cltd
jo
jecxz
imul
test
mov
ds
mov
cmp
pop
xchg
pop
dec
out
popa
add
adc
cmc
addr16
ljmp
mov
negl
cmp
push
xchg
push
adc
push
stc
inc
and
cmpsb
dec
aaa
push
shll
sub
test
sbb
insb
imulb
pop
and
sub
adc
andb
pop
or
aad
andl
pop
mov
test
push
loop
shl
fisubl
call
gs
dec
test
or
and
xchg
clc
test
and
mov
lahf
adc
imul
push
or
int3
loop
adc
cltd
sub
lds
adc
fsubs
cmpsl
lcall
cmpsl
ja
xchg
push
mov
mov
mov
shlb
in
andnps
or
push
shlb
mov
decb
and
and
mov
nop
mov
and
adc
push
pop
mov
mov
int3
xchg
jne
leave
lds
sbb
gs
cmp
icebp
xchg
jb
jbe
push
sbb
inc
in
out
mov
test
ds
and
clc
adc
jnp
popa
incb
ja
outsb
xor
sti
daa
adc
jl
cmpsl
in
and
aaa
mov
ret
subb
sbb
ljmp
or
dec
addb
or
hlt
inc
sbb
sub
mov
mov
movsl
sub
cmpsb
sarb
imul
ret
sub
pop
mov
mov
das
jno
leave
and
jnp
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
sarb
fdivrl
mov
mov
inc
insl
inc
loopne
sti
mov
mov
ret
pop
mov
clc
repz
fnstenv
push
subl
adc
sbb
mov
mov
lods
pushf
sub
push
push
inc
mov
sbb
je
xor
jno
mov
repnz
jmp
cli
add
cmp
adc
xor
add
js
jae
cmc
xchg
cs
popa
aaa
inc
rcrl
mov
mov
and
lahf
push
jo
cmp
rclb
ror
insl
addr16
mov
pop
inc
jo
pop
jbe
test
sub
lcall
clc
mov
movsb
out
cli
mov
pop
xchg
cmp
xor
push
mov
cmp
pop
fsin
lods
js
jns
dec
dec
outsl
rcll
mov
shll
push
mov
push
stc
sbb
or
imulb
loop
push
xchg
aas
scas
popf
inc
xchg
flds
xor
lods
inc
add
mov
loope
fwait
sub
testb
jmp
mov
mov
mov
jae
push
ds
push
push
jle
mov
sbb
gs
nop
out
aam
shl
adc
cltd
jo
or
mov
cmp
or
pop
enter
pop
stc
or
pop
fs
or
add
jnp
mov
xor
loopne
push
inc
daa
loope
sbb
mov
xlat
popa
mov
pop
out
popa
push
popa
test
jge
loopne
into
ljmp
mov
sub
add
mov
adc
out
xorl
pop
cmp
outsb
push
jl
and
push
bswap
sub
add
jbe
xor
fstl
or
daa
scas
adc
dec
xor
insb
divl
xchg
fucom
and
pop
or
dec
lods
xlat
leave
imul
and
sub
inc
repz
scas
lea
cld
repz
add
add
jl
scas
imul
leave
cmpsl
adc
insb
dec
xor
push
add
xor
roll
sub
push
xor
sti
pop
repz
mov
jecxz
jno
ds
mov
adc
iret
add
mov
sti
mov
lock
mov
in
jge
add
ret
add
sub
mov
cmp
adc
pop
add
enter
dec
pop
je
aas
jbe
mov
movsl
icebp
dec
bound
out
push
fistpl
inc
fcomps
movsb
lods
icebp
xor
dec
mov
sbb
lods
inc
fists
sub
scas
xorb
popa
loop
mov
fisttpl
insl
subl
cmp
incb
rcll
or
jmp
iret
inc
adc
loope
xor
loope
test
test
cwtl
imul
into
adc
or
cmp
daa
xor
fwait
stos
cmp
out
dec
int
sub
push
fs
cmp
and
mov
enter
sti
add
loope
out
adc
inc
pushf
sbb
xchg
pop
push
ds
insb
pop
inc
jl
into
imul
lret
iret
jne
call
xlat
inc
pop
stc
mov
mov
cmpsl
jle
js
xchg
xchg
cmp
stos
idivl
outsl
xchg
sbb
cmp
cs
loopne
mov
daa
push
mov
jbe
pop
stc
jae
mov
mov
mov
inc
add
add
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
mov
mov
jge
mov
fidivl
iret
jle
loopne
inc
movsb
and
mov
stc
push
mov
leave
sub
add
jno
push
push
jge,pn
add
sbb
jne
lcall
scas
fisubrs
daa
pop
mov
mul
hlt
lea
loope
sbb
popa
mov
jl
fistps
nop
outsl
lods
pop
ja
imul
pop
cvtpi2ps
add
int
inc
lcall
sarl
cmpxchg
stos
push
mov
nopl
arpl
jno
addr16
repnz
inc
xor
stos
mov
fcompl
mov
inc
cmpsl
in
and
mov
push
mov
mov
and
insb
aam
stos
movsb
jns
add
and
in
pop
or
add
das
adcl
enter
mov
fwait
rep
dec
push
nop
negb
xor
mov
dec
sub
es
das
xor
lret
cmp
adc
jb
shlb
aaa
push
int3
cmp
loop
daa
repnz
in
movsl
fdivp
or
xor
das
add
mov
ljmp
jnp
cwtl
mov
aas
shlb
dec
out
mov
adcb
les
pop
jle
leave
mov
loop
into
mov
fxch
dec
cli
mov
or
xorb
or
dec
mov
sbb
pop
mov
jle
or
aam
in
jg
sub
lds
insb
jge
and
imul
mov
cwtl
ja
jmp
fsubrl
pop
adc
iret
or
cmpsb
bound
push
es
int
pushf
or
leave
mov
mov
mov
pop
cmp
dec
test
mov
lock
daa
adc
sbb
stos
fwait
sub
rcrl
pushf
dec
jg
fidivrs
xchg
insb
inc
sti
subb
lods
aam
mov
mov
sub
mov
sbb
sub
mov
das
pusha
fmull
dec
out
adc
call
popa
inc
adc
cltd
mov
dec
js
jmp
mov
adc
dec
cmp
cmp
test
call
and
jg
les
adc
xor
lods
test
xchg
lock
mov
aas
pop
jbe
push
sbb
aas
scas
push
push
call
bswap
dec
stc
or
push
dec
mov
cmp
out
in
jnp
or
sub
stc
cli
inc
xchg
jmp
popf
outsb
mov
icebp
lock
or
es
jg
cmp
test
pop
int
mov
loop
mov
subl
sbb
pop
out
bound
cltd
jno
mov
clc
into
pop
scas
fildl
and
add
inc
dec
dec
lods
popf
push
lahf
add
push
pushf
add
push
in
xor
or
aad
pusha
dec
sbb
cwtl
movsb
js
sbb
sbb
mov
dec
adc
mov
iret
stos
jp
mov
sub
sbb
and
je
pop
loop
nop
lahf
add
push
popf
sbb
add
or
shrl
jnp
fisubrl
lahf
gs
mov
jmp
out
pop
scas
in
mulb
aas
jge
pop
outsl
jbe
push
dec
mov
dec
repnz
outsb
std
xor
lcall
or
mov
out
aas
jb
popa
test
rcr
jnp
hlt
cmovbe
add
movl
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
push
in
jle
bound
adc
inc
shr
addr16
xchg
push
fidivs
jne
pusha
pop
lahf
dec
int
iret
cwtl
repnz
outsb
push
mov
loop
adc
jecxz
and
imul
mov
pop
in
repnz
je
lret
scas
int
loop
sub
lret
idivl
fsubrp
icebp
xor
and
loope
stc
inc
xor
sbb
jmp
iret
sbb
aad
fcom
aaa
xchg
inc
xorl
mov
cmp
or
mov
cmp
adc
or
out
insl
pop
decb
sahf
pop
mov
mov
mov
mov
cld
xor
and
inc
pop
mov
fs
inc
mov
jecxz
or
sbb
lods
xor
lock
loopne
iret
roll
dec
out
lock
es
xor
push
in
pop
xor
lods
sbb
xchg
dec
mov
jl
shr
cld
push
inc
nop
lds
insl
mov
das
js
mov
pop
pop
mov
cwtl
inc
lret
or
sarb
mov
arpl
iret
mov
push
jno
or
in
nop
add
nop
incb
addr16
rorl
in
sbb
push
leave
and
sbb
into
mov
rorl
push
lcall
sarb
loopne
aaa
hlt
mov
and
xor
dec
out
xlat
cli
xchg
stc
ss
call
sub
mov
pop
repnz
popf
rcl
mov
jbe
mov
cmp
cmp
ficomps
fdivrp
push
jbe
sarl
jb
lods
insl
pop
lea
pop
addr16
loop,pt
mov
bound
mov
call
leave
shr
test
sub
push
sbb
stos
mov
loopne
sub
movsb
sbb
test
fcomi
push
mov
lea
pop
sahf
jno
push
push
xchg
xor
cmc
in
adc
aas
sub
xor
ss
jno
cmp
jp,pn
aam
dec
dec
add
rol
xchg
lret
subl
sbb
mov
push
mov
xor
jb
mov
add
xchg
push
inc
and
mov
ja
shll
sbb
mov
dec
test
jae
mov
les
push
xchg
cs
cltd
adc
cmp
push
dec
or
test
cli
mov
test
dec
pop
repnz
or
cli
push
mov
outsb
fcoms
insl
or
into
dec
cmp
dec
addr16
repz
sbb
dec
mov
stos
jg
rcrb
pop
push
jge
xchg
sub
sahf
fistl
in
or
daa
cmp
inc
jbe
push
pop
or
data16
in
std
sub
add
push
shl
mull
adc
sarb
stc
bound
mov
xor
push
pop
sbb
aaa
add
pop
sub
sub
lods
pop
out
cmp
xchg
jns
ljmp
inc
dec
xlat
lods
push
out
dec
scas
pop
sbb
test
mov
sahf
fadd
cld
in
decl
xor
cmp
xlat
dec
inc
ret
es
stc
cmc
rcl
add
aaa
cld
pop
push
push
inc
das
aad
jle
add
xchg
sub
push
mov
enter
cmp
mov
cwtl
lods
std
sbb
dec
cld
popa
xchg
xchg
test
xor
out
loope
mov
subl
cmp
inc
pop
fcmovb
mov
cli
sub
rcrb
or
bound
fs
divb
xchg
hlt
pushf
in
mov
inc
rclb
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
push
pop
adc
mov
pop
and
cld
ret
push
sbb
scas
push
stos
out
arpl
pusha
jmp
and
inc
mov
outsl
repz
adc
inc
sub
and
jae
cli
cld
sub
in
jl
adc
sub
js
mov
enter
and
test
adc
dec
jbe
sti
mov
adc
jmp
add
in
daa
push
mov
call
mov
mov
mov
testb
xchg
addr16
fistpll
xrelease
fiadds
xor
je
xchg
inc
or
lods
sahf
test
iret
jle
outsl
jecxz
imul
lock
add
inc
pop
loope
icebp
jg
es
sub
inc
mov
pusha
out
add
rcrl
or
cmp
mov
adc
inc
jb
enter
pop
hlt
xchg
int
or
xchg
sub
adc
rcll
lods
pop
imul
mov
inc
dec
sbb
push
xchg
xor
mov
scas
add
fldenv
inc
insl
mov
cmpsb
rcll
bound
andps
and
lcall
push
jbe
adc
ljmp
sub
push
bound
xor
ljmp
mov
xchg
test
cld
dec
test
pusha
adc
dec
shll
sbb
into
add
mov
ja
pop
ficompl
cmp
lea
sbb
test
add
inc
mov
mov
sbb
subb
sub
jno
movsb
fcoml
test
jl
les
test
sahf
push
dec
pop
in
ljmp
push
stc
popa
push
pop
lods
jae
inc
or
mov
rcrb
sbb
rcll
sub
dec
dec
pop
mov
test
and
imul
add
movsl
mov
mov
and
pop
ds
add
subl
sbbb
inc
jo
insl
jecxz
mov
xchg
fisubs
lcall
movsl
scas
and
pop
and
sub
gs
aas
lock
jb
aaa
xor
aaa
push
cmp
out
mov
shll
popf
fisttpl
and
jmp
arpl
sahf
std
int
sbb
push
cmp
das
stos
pusha
push
fwait
iret
repz
scas
repnz
dec
frstor
pop
out
fdivs
test
jge
mov
mov
mov
push
adc
movsb
dec
lret
inc
aam
dec
ret
push
or
pop
bound
nop
pop
dec
xor
pop
lret
inc
rcl
xchg
adc
sub
xor
mov
fisubs
dec
fsubrl
mov
xor
out
fldenv
sbb
test
in
fsubl
jne
cmp
pop
cmp
rol
pop
xor
cwtl
sbb
sub
jg
aam
add
and
xchg
jl
movsl
mov
lahf
pop
fmuls
push
frstor
hlt
aam
cwtl
movsl
mov
imull
and
fsub
popa
and
cmp
mov
pop
push
in
out
sbb
inc
add
ss
mov
pop
out
call
jecxz
push
out
cmp
test
sbb
out
add
add
push
nop
mov
js
jnp
jnp
dec
loop
into
imul
lcall
cmp
push
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
iret
mov
mov
adc
sub
je
inc
add
enter
sbb
dec
or
xchg
push
inc
loopne
xchg
inc
and
mov
ja
out
push
mov
push
shl
lock
outsb
jnp
mov
mov
sub
outsb
in
jb
fsubrl
cmpsl
fiaddl
test
adc
int
and
shld
shll
cmp
std
cs
in
pop
and
addl
arpl
push
fsub
add
stos
shll
adc
loope
jae
das
imul
add
shl
push
adc
pusha
popf
adc
out
cmp
and
lret
pop
leave
in
enter
aaa
pop
lods
mov
mov
add
inc
mov
lcall
out
pop
out
loopne
xchg
or
push
mov
xchg
mov
in
dec
xchg
cmpsb
loopne
rcl
jbe
fdivrl
add
xchg
or
cwtl
push
inc
mov
adc
mov
inc
dec
push
dec
mov
push
pop
or
sbb
aad
lret
mov
adc
fwait
adc
mov
pop
mov
int3
dec
int
lcall
jmp
lea
sbb
xchg
xchg
xchg
subb
jmp
dec
push
iret
ds
aad
test
call
and
pop
pop
lods
mov
jne
rcl
sub
jl
into
mov
das
mov
jl
or
mov
and
xchg
jl
adcl
or
lods
popa
mov
imulb
jo
adc
loope
push
pusha
mov
ss
sti
jno
xlat
jbe
dec
dec
mov
jmp
aaa
repz
mov
outsb
inc
xchg
mov
push
xor
sbb
sub
pop
xlat
sub
mov
jbe
mov
and
sbb
adc
mov
sub
lahf
test
clc
scas
aad
mov
js
popf
mov
fcom
mov
popa
mov
icebp
push
sbb
call
adcl
stos
jae
clc
adc
mulb
test
pop
push
pop
or
pop
mov
fmul
rorb
out
pop
and
add
in
out
std
std
sbb
adc
jmp
push
test
xor
mov
push
and
jp
sbbb
in
xchg
cmpl
roll
js
jp
jge
jg
and
mov
push
mov
add
fcoms
test
xchg
mov
in
or
add
into
dec
mov
xlat
sbb
mov
xchg
stos
adc
dec
pop
push
jne
add
xorb
rcr
xor
icebp
jmp
cli
push
add
add
ja
adc
add
jb
pop
in
fists
push
dec
outsl
jae
jg
sti
jp
and
mov
inc
mov
pop
lret
pop
ficomps
jle
mov
in
in
xchg
xor
mov
jl
rolb
pop
scas
inc
call
jne
pop
mov
outsb
push
je
pop
lock
rol
lcall
daa
lahf
jl
push
into
cmp
ret
sbb
or
inc
cli
add
sahf
or
adc
cmp
je
sti
add
cmp
pushf
sbbb
leave
sbbb
add
add
adc
inc
clc
cmp
add
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
mov
mov
adc
cmp
sub
nop
ja
stos
insl
fcompl
jge
lea
aaa
pop
mov
push
int
jbe
adc
test
dec
push
inc
mov
imul
add
pushf
cmp
add
sti
dec
outsb
sbb
fiaddl
sbb
insl
sbb
subb
xchg
cmp
daa
inc
outsl
push
test
mov
dec
mov
or
dec
test
pop
js
fistpl
and
insl
sub
sahf
subl
push
cmpsb
inc
addr16
sbb
arpl
rorl
iret
lods
xor
cmpsl
mov
sbb
dec
mov
sbb
lods
scas
fbstp
daa
inc
iret
pop
das
iret
mov
cs
lret
sbb
or
cmp
push
mov
push
fnstcw
xchg
jmp
into
mov
mov
repz
lret
test
and
pop
cmpl
inc
dec
add
pop
popa
inc
ret
pop
loopne
xlat
add
imul
push
cmp
mov
xchg
xor
jmp
fildll
pop
dec
fidivrl
cld
das
bnd
jl
loop
movsl
cmp
dec
mov
into
xchg
hlt
xor
pop
and
adc
jmp
push
jnp
cli
push
dec
and
inc
mov
jns
call
dec
add
repnz
dec
sbb
lret
ds
ret
mov
adc
sbb
mov
stos
enter
sahf
cmpl
xchg
jae
pop
enter
psllq
dec
sbb
repnz
pop
in
mov
movsl
xchg
add
fldenv
cmp
mov
xor
and
aad
data16
rolb
repz
cmp
incb
mull
jne
pop
into
repz
dec
sub
pushf
out
cli
fcoml
xchg
push
dec
stc
pop
clc
or
test
adc
scas
data16
jge
aas
mov
jae
sbb
jmp
jnp
add
dec
push
les
lcall
xchg
mov
mov
out
sbb
mov
std
pop
mov
pop
add
sub
mov
mov
mov
fisubrs
call
mov
inc
loopne
inc
jne
icebp
jnp
sub
mov
add
pop
mov
fcoms
dec
add
mov
mov
inc
sub
ret
mov
push
ljmp
xor
mov
sbb
xchg
popf
in
cmc
push
inc
insl
pop
aad
clc
or
pop
pop
scas
imul
fisubrl
add
mov
lea
js
mov
sbb
sub
jp
fbstp
sahf
test
loop
testb
lahf
fimuls
repnz
bound
adc
sub
daa
mov
icebp
hlt
add
decb
jo
or
data16
fildll
and
xchg
testb
sbb
stos
not
adc
adc
cmp
lds
cmp
fimull
out
lahf
subl
jp
arpl
scas
gs
or
cmpl
nop
or
scas
aaa
test
adc
sahf
mov
test
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
sbb
adc
mov
adc
cmp
shl
xchg
or
xchg
insl
sub
dec
xor
iret
or
in
daa
jnp
mov
sahf
fildl
mov
out
addr16
pop
xlat
aad
mov
pop
push
iret
aas
jp
xor
loop
rcll
rclb
jb
imul
xlat
or
lret
cld
dec
outsb
std
jbe
call
sbb
inc
sbb
outsl
jmp
pop
shll
leave
es
adc
cmc
loopne
xchg
jg
add
test
xchg
mov
test
inc
scas
xchg
out
mov
test
jle
dec
mov
lret
mov
movsl
ficompl
xor
mov
lds
lods
js
mov
push
lds
push
int
imul
lahf
mov
add
mov
inc
fsubrl
sahf
xchg
and
xchg
sub
lock
jnp
inc
aaa
xchg
sbb
in
push
pop
rcrb
pop
or
jno
stc
mov
fcoml
fiadds
jae
xchg
mov
cmp
sbb
sahf
sbb
push
sub
jnp
loopne
aaa
data16
push
mov
add
insb
movsb
mov
cmpb
and
insb
or
push
xor
aas
push
and
mov
outsl
sbb
ret
push
add
sub
cltd
shlb
lret
sub
aaa
mov
add
std
xchg
or
push
in
test
outsl
shlb
imul
inc
add
cmpl
mov
inc
imul
xlat
jnp
shl
xchg
int
fmull
popa
xchg
cld
int3
je
loop
adc
or
enter
daa
movlps
cmp
mov
add
pop
inc
xchg
inc
cld
xchg
inc
std
mov
push
daa
enter
in
and
pop
jecxz
std
imul
mov
loope
mov
imulb
insl
push
cs
push
inc
sub
stos
or
lods
cs
mov
mov
mov
test
sbb
xorb
mov
movsl
mov
or
cmp
xor
adc
xchg
pop
hlt
pop
lcall
cmpsb
out
insb
jb
mov
dec
inc
mov
lds
or
mov
xlat
xor
bnd
loope
sbb
dec
push
lahf
push
pushl
push
pop
popf
cld
fists
mov
inc
fidivrs
cld
pusha
shll
xchg
and
js
mov
cld
and
dec
dec
dec
jecxz
cmp
jg
pop
mov
inc
jae
inc
and
xchg
sbb
xor
data16
and
test
or
lods
mov
pop
test
aas
sub
sub
or
je
jle
fwait
and
xchg
add
lock
or
das
test
jp
mov
pop
rcrb
pop
cwtl
insl
andl
pop
pop
or
lock
fdivrs
and
pop
add
dec
inc
adc
scas
sbb
push
lock
ret
xchg
dec
addl
int
jp
push
in
add
addr16
addr16
lock
fstpl
pushf
push
sbb
lea
fistl
stc
jecxz
shll
adc
adc
in
add
scas
pop
es
mov
mov
sub
mov
mov
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
insb
aad
adc
mov
adc
stc
cmc
jge
adc
mov
fiadds
subb
sar
push
adc
mov
sbb
mov
cmpsb
clc
and
popf
fs
dec
incb
psrad
jne
stos
mov
imul
mov
adc
mov
repnz
push
mov
clc
stos
dec
aas
cld
mov
shll
out
stos
scas
jle
mov
cmc
jl
ds
test
into
and
jle
bound
orl
imul
lea
sub
ja
sub
pop
sbb
clc
jl,pn
stos
pop
ss
cmpsb
cwtl
pop
cmpsl
sbb
jg
push
dec
jns
decl
xor
push
in
lods
je
mov
adc
in
dec
add
jno
imul
mov
mov
cld
add
xor
mov
fimuls
jecxz
mov
fcoml
mov
shlb
adc
xlat
or
jp
cli
mov
aam
sti
mov
or
mov
and
mov
sub
inc
dec
rorb
dec
sarb
int
dec
ret
pop
sbb
jle
in
ja
mov
test
adc
in
enter
mov
pusha
push
clc
pusha
fs
mov
scas
sbb
mov
int3
aas
rclb
xor
insb
addr16
pop
call
lcall
loop
movsb
jae
je
in
enter
and
and
icebp
mov
dec
inc
jae
hlt
dec
pushf
hlt
setg
mov
xchg
mov
outsl
jo
enter
jnp
das
loopne
mov
sub
or
push
idivl
adc
imul
loopne
lahf
test
loop
mov
sbb
jl
push
hlt
loope
sahf
imul
loop
jnp
insb
fwait
add
mov
mov
int3
cld
xorb
sbb
arpl
xchg
je
clc
or
repz
data16
inc
pop
jle
add
xchg
pop
repnz
loope
int3
test
outsb
movsl
icebp
cmc
pop
sbb
mov
mov
sub
lea
add
lock
pop
dec
stc
pop
push
xchg
test
cmp
sbbl
ret
inc
adc
jns
adc
push
xchg
cmc
out
fisubl
jle
jmp
mov
aaa
ss
mov
dec
cmc
xchg
cli
hlt
in
mov
pop
jecxz
jae
lods
mov
push
iret
mov
adc
roll
idivb
jns
cli
add
mov
repz
inc
jle
lcall
xchg
jmp
in
sbb
pop
or
inc
sbb
js
xor
dec
lods
fstpt
repz
adc
dec
and
mov
sub
into
idivb
cmc
cli
arpl
jle
inc
imul
rcrl
dec
xchg
cli
push
mov
test
mov
pushf
cli
push
mov
rorl
jnp
push
inc
out
pop
inc
mov
aaa
xchg
das
or
pop
sahf
fidivs
jo
and
imull
in
cmp
push
lret
cmp
or
mov
aam
pop
xlat
inc
into
pusha
aam
lods
scas
iret
jb
mov
testl
mulb
xor
enter
xchg
bound
fsubrs
sbbl
cwtl
insb
addr16
int
mov
ret
divl
rolb
dec
lods
inc
sbb
push
in
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
add
adc
mov
adc
scas
dec
push
ljmp
cmp
pop
and
js
cmp
repz
push
in
cmp
ret
fstps
fcmovbe
decl
stos
icebp
mov
lret
iret
push
sarb
sub
fldl
scas
repz
lcall
clc
xchg
fimull
or
xor
or
push
xor
mov
aam
in
decb
cmp
enter
imul
sbb
push
mov
enter
dec
mov
sub
add
test
adc
add
icebp
fsubl
mov
dec
inc
inc
mov
sub
fiaddl
pop
out
into
ja
das
mov
dec
rol
xor
mov
lea
xor
inc
orl
orl
aad
out
aad
xchg
fwait
xor
mov
lock
push
cmp
mov
adc
aas
xchg
xchg
xor
xchg
adcb
cmp
pop
out
notb
pop
xchg
mov
cmpsb
fstl
mov
jg
paddq
pop
push
popf
push
cwtl
clc
js
dec
add
scas
adc
xor
add
hlt
pop
in
setae
insb
pop
mov
cwtl
lahf
dec
mov
popa
inc
cmpsb
std
xchg
adc
cli
fisubs
or
icebp
int3
push
out
in
ja
into
fstpl
push
jns
ret
ss
pop
xchg
add
sub
inc
scas
adc
mov
jno
inc
lds
pop
sbb
sub
mov
roll
pop
mov
xchg
cmp
pop
add
xor
movsb
or
push
inc
inc
jo
sti
xor
jb
pop
adc
push
xchg
jecxz
ss
push
nopl
stc
jbe
mov
jl
pop
cmpsl
xchg
lock
adc
inc
jp
stos
das
popf
jle
stc
mov
mov
push
aam
pop
ret
xor
out
out
xchg
out
lret
mov
fs
stos
std
imull
enter
sub
sbb
aaa
lret
dec
cli
js
dec
xor
jg
xor
adc
aad
push
imul
mov
lods
fs
or
xchg
sbb
jns
lcall
outsb
scas
stos
push
sbb
cwtl
aam
adc
pop
push
push
mov
xor
rcr
into
fcoml
adc
jl
out
nop
and
mov
push
outsb
mov
repnz
lcall
mov
xlat
mov
lret
test
jmp
push
cmp
xor
push
stc
ret
jg
out
cmp
pop
xorl
and
imulb
xorb
bound
aad
int3
out
js
adc
add
jecxz
fistpll
cmc
lea
ljmp
pushl
mov
mov
aas
jbe
sub
mov
sahf
pop
xchg
stc
jne
sarb
sbb
push
xchg
pushf
mov
inc
sub
aas
and
imull
adcl
adc
add
adc
pop
pop
xor
mov
into
rorb
sbb
pop
std
jle
inc
addr16
sbb
loop
cmp
imul
movsb
popa
mov
mov
add
enter
lahf
fucompp
stos
test
mov
inc
jns
add
idivl
cmpsl
out
inc
movsb
and
or
je
push
add
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
inc
stos
or
adc
mov
adc
xlat
in
pop
sbb
aas
out
out
pop
dec
adc
imul
loope
ret
adc
lret
mov
je
movq
cmc
cld
inc
or
movsl
push
push
imul
push
aad
out
mov
fnstcw
pop
loope
xor
sbb
sub
cmp
xor
aam
sbb
imul
ret
mov
xchg
sahf
psraw
repz
shl
arpl
aaa
mov
push
mov
test
jle
sbbb
nop
mov
mov
fisubrl
lcall
xor
xchg
test
mov
xchg
icebp
add
cmpsl
scas
mov
sub
adc
add
cmp
test
mov
jecxz
jno
stc
jmp
xchg
xchg
mov
dec
inc
xor
push
jae
xchg
jecxz
mov
js
mov
mov
test
mov
cld
orps
ja
xchg
dec
out
mov
rolb
ret
xor
mov
repz
lahf
aad
push
fs
adc
adc
mov
xor
cmp
sbb
hlt
sbb
leave
pop
mov
sub
lds
add
fdivr
in
fnsave
jecxz
cmp
test
mov
arpl
lea
sarl
insb
scas
data16
lods
push
lahf
dec
cmpsl
mov
xor
lret
fdivrl
xchg
and
cld
push
adc
insl
scas
jae
popf
xor
push
pop
fcmovnu
hlt
mov
sahf
popf
jp
pop
inc
xor
ret
lock
loopne
adc
std
nopl
jbe
out
sahf
out
inc
addl
je
mov
mov
push
aas
mov
cmp
lock
push
adc
sbb
in
nop
inc
dec
fs
xchg
adc
mov
push
pop
cmp
mov
push
cli
in
lcall
ljmp
xor
pop
in
jae
jnp
out
mov
mov
cmp
mov
addr16
movsl
jl
or
andb
adc
fwait
jle
and
cmp
pop
xchg
xor
jne
pushf
cli
dec
add
cmc
sub
mov
pop
cs
dec
dec
nop
in
ja
lea
cld
cmp
cmpsb
out
daa
sbb
pop
pop
sbb
out
stos
xchg
cwtl
push
mov
xchg
sub
mov
sub
ljmp
into
sub
ljmp
jle
xor
jmp
sti
push
and
sti
cmp
lret
andb
jge
and
mov
jbe
fwait
ret
out
xchg
cmpsb
cmc
lret
aad
push
repnz
jno
pushf
xchg
inc
jp
ret
pop
sub
xchg
rorl
add
push
es
movsb
adc
inc
dec
call
push
and
in
dec
push
xchg
inc
sbb
sti
mov
pop
pop
test
pop
int
mov
push
shrl
cmp
fs
jbe
push
int
and
adc
sahf
loopne
inc
movsl
or
dec
clc
aas
adc
cmpsb
dec
adc
mov
fisttps
bound
dec
repz
jle
in
sbb
lret
dec
loop
stos
lcall
xchg
das
jl
out
pop
aad
fwait
sar
xor
adc
popa
xor
les
repnz
adc
push
outsl
fnstcw
sbb
shrb
cltd
and
push
xchg
popa
xor
mov
mov
movsl
mov
rcrl
lret
cld
sub
rcll
add
sarl
enter
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
push
xchg
mov
test
adc
adc
or
stc
push
insb
std
jo
insb
sub
pop
mov
mov
fmull
cmp
into
sub
stc
xorl
jle
xor
jne
scas
or
fisubrl
jg
imul
inc
out
mov
inc
iret
mov
sbb
jb
mov
mov
aad
stc
mov
dec
jp
cwtl
inc
mov
movsl
adc
fs
jg
inc
push
adc
loope
stc
aaa
lods
lahf
pop
xor
clc
inc
out
movsl
mov
mov
and
adc
xor
add
sbb
push
iret
loope
add
les
xor
mov
lret
mov
lahf
shrd
xor
movl
or
sbb
call
inc
pop
inc
pushf
mov
fisttps
jae
jnp
push
mov
aam
inc
test
cs
push
outsb
pop
pop
sti
in
je,pn
dec
sub
ret
sti
jge
stc
loop
jbe
or
scas
pushf
xchg
inc
inc
mov
shlb
sub
loop
or
inc
gs
setle
repnz
mov
mov
pop
andl
into
and
inc
cmpsl
mov
lret
lea
shrb
xchg
test
push
lcall
adc
aad
shlb
pop
test
mov
mov
and
adc
lret
and
and
adc
outsl
rorl
arpl
and
ds
xchg
mov
sbb
pop
sbb
cmp
js
mov
lahf
clc
arpl
cmp
arpl
pop
xlat
shlb
fisubl
insb
pop
cmp
add
nop/reserved
inc
inc
outsb
fwait
cltd
adc
pushf
repnz
mov
sahf
dec
xchg
mov
sub
std
fimuls
pop
inc
aaa
xchg
pop
fsub
and
adc
leave
push
fcomps
test
repz
out
inc
lods
test
aad
sub
mov
push
pop
sbb
mov
fwait
andl
xor
dec
arpl
sub
pop
inc
pop
and
scas
and
cltd
int3
pop
add
cmpsl
push
push
call
push
pop
hlt
fisubrl
insl
mov
add
test
test
stos
adc
js
xor
lret
sbb
test
enter
and
jo
data16
add
xlat
jno
and
lret
fbstp
sbb
test
ljmp
adc
and
call
push
outsl
push
sbb
ja
outsl
push
sbb
das
repnz
dec
or
adc
mov
inc
dec
cltd
mov
popa
mov
cli
jg
pop
sbb
lret
xor
pusha
xor
dec
insb
lcall
leave
xor
adc
and
das
push
lcall
xchg
or
das
xchg
fcomps
test
add
cmp
test
shrb
hlt
sarb
push
leave
and
mov
pop
jno
mov
fstl
mov
push
jge
repnz
adc
adc
pop
std
cmp
inc
adc
or
xlat
mov
ja
pop
cwtl
mov
pop
hlt
jg
mov
fstpt
inc
hlt
xor
add
clc
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
xor
fs
sbb
adc
jp
fbstp
stc
lret
xor
std
jo
xchg
mov
cmpb
sub
arpl
inc
jl
sbb
outsl
mov
mov
ds
cmp
mov
dec
test
xchg
daa
dec
xor
out
push
lahf
repz
pop
xchg
lods
fwait
mov
mov
and
je
or
sub
xor
push
pop
mov
mov
jb
rclb
sub
dec
faddp
out
mov
add
sbb
mov
xor
imul
ljmp
xchg
add
orb
aam
and
int3
sahf
loopne
mov
sarl
mov
pusha
cmpsb
dec
fnsave
push
mov
jns
sbb
fwait
sub
loopne
mov
lds
or
imul
dec
sti
cs
fmul
outsl
pop
jnp
mov
sti
pop
pop
and
aam
lods
in
push
sub
pop
adc
outsl
mov
cmpsb
aam
adc
movsl
and
mov
pop
mov
repnz
ss
push
cwtl
adc
lcall
and
mov
mov
mov
dec
mov
pop
fdivl
jp
push
pop
cmp
bound
es
lret
push
xorb
fcomps
inc
add
stc
cmp
stos
js
adc
inc
pop
ljmp
outsb
inc
cmp
js
ror
pop
inc
cmpsl
mov
int
pop
leave
push
xchg
dec
les
loop
loope
push
sti
mov
mov
stc
inc
or
mov
xor
add
stc
add
adc
pop
lret
loop
xor
adc
loopne
fildl
jl
aas
inc
shll
pushf
std
dec
mov
adc
testb
cmp
cmp
mov
aad
fucom
cmp
stc
mov
stc
arpl
gs
test
in
cmp
in
sti
jge
mov
enter
xchg
mov
mov
mov
xlat
ds
mov
push
movsl
pop
mul
addr16
mov
movsb
subl
jge
outsb
psllq
lret
outsb
jne
or
gs
out
hlt
xchg
mov
mov
cwtl
sub
out
cmpsl
jb
xchg
xchg
loopne
loop
mov
xchg
sarb
mov
push
test
sti
lock
sub
aaa
imul
iret
dec
inc
mov
ret
jnp
pop
js
inc
ljmp
push
dec
push
sub
xor
cmp
xchg
fisttps
pop
mov
mov
push
adc
sub
es
ljmp
cs
xor
outsb
test
pop
pop
add
cs
push
inc
insl
mov
icebp
inc
fcmove
mov
or
push
cmp
mov
les
addr16
movq
sub
jle
popf
scas
shrl
cmp
dec
nop
pop
sub
jge
jecxz
or
xor
inc
out
or
scas
adc
xchg
ficomps
shlb
rclb
pop
enter
mov
test
xchg
sub
loop
inc
add
mov
loop
or
out
fisttps
mov
dec
imul
sbb
xor
dec
js
or
mov
cltd
addr16
inc
sbb
scas
jnp
pop
inc
sbb
mov
jo
push
div
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
nop
and
cmpl
inc
add
mov
popa
or
push
mov
mov
xor
ficomps
sbb
inc
sbb
cli
dec
xchg
roll
aam
jp
xchg
in
xor
ljmp
jge
mov
xor
cmp
mov
pusha
cmpsb
popf
shrl
dec
sub
test
dec
loope
mov
loop
and
enter
mov
cmp
and
push
mov
sarl
mov
add
in
jb
outsb
jno
fnop
dec
xchg
mov
lods
sub
cld
lds
leave
mov
iret
mov
sub
xor
mov
repnz
mov
jb
xchg
pop
lret
cltd
into
cmp
sti
rcl
fs
sub
pop
xchg
ret
mov
inc
and
ja
mov
andl
icebp
push
aad
adc
mov
in
mov
popl
xchg
fisubl
ret
sub
add
and
stos
mov
sbb
repz
pop
jg
sbb
push
inc
mov
pop
daa
mov
mov
std
mov
or
in
cmpsl
add
les
add
inc
cmpsl
xchg
xacquire
fisttps
stos
aam
dec
or
cmpsb
js
shl
cmpsl
das
aad
or
inc
jo,pt
movsb
cmp
xor
mov
push
enter
inc
test
mov
mov
repz
adc
push
mov
lret
jmp
and
icebp
sub
cmc
sbb
mov
in
nop
sbb
mov
jp
mov
imul
and
mov
mov
js
mov
sub
push
mov
stos
jne
mov
aaa
ret
in
cmp
popa
in
dec
iret
paddq
test
ret
lret
add
jl
ds
cmpsb
lcall
sbb
cwtl
pop
pop
cmc
movsb
imul
xchg
mov
jo
daa
xor
or
es
loop
iret
mov
inc
push
jmp
gs
mov
xchg
dec
stos
jmp
xchg
cmpsl
test
shlb
adc
popf
push
jle
cmpsl
and
push
mov
out
sub
mov
orl
mov
int3
mov
and
setle
mov
idivb
cltd
out
lods
clc
xor
inc
cmp
pop
push
call
ret
jb
sub
test
jg
add
inc
repz
push
sahf
jmp
sbb
inc
jle
hlt
fcomps
sub
rclb
nop
cmc
xor
fists
fisttpll
mov
adc
out
pop
lahf
outsb
shrb
pop
sbb
mov
leave
mov
lahf
mov
call
out
pop
mov
mov
rolb
add
push
xor
iret
hlt
inc
mov
ja
movsb
mov
sbb
pop
jne
mov
inc
and
sbb
push
cmp
aam
test
ja
mov
cmpsl
imul
and
adcb
inc
insb
xor
cmp
movsb
out
mov
cmpsl
dec
pusha
inc
std
sbb
ds
lods
push
subl
xchg
leave
push
imul
pop
pop
lret
lock
pop
pop
xorl
add
je
sub
fidivs
popf
loop
jle
or
sbb
dec
mov
inc
clc
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
mov
test
mov
adc
jo
imul
sbb
fwait
jno
sbb
in
call
cmp
adc
or
and
mov
adc
pop
fstps
adc
inc
mov
fnsave
das
adc
inc
dec
stc
pop
cmc
cmp
mov
dec
aam
popf
mov
ret
sub
sti
sbbb
pop
mov
bound
sti
jge
mov
std
xchg
push
push
dec
and
mov
sbb
mov
xor
mov
jmp
jge
roll
mov
out
push
outsb
enter
std
gs
and
sub
jnp
out
mov
inc
cli
fisubrs
push
sbb
mov
xor
jb
mov
sub
test
lock
jo
xor
insl
jmp
push
and
pop
adc
rclb
icebp
add
pusha
test
jl
pop
movsb
adc
jecxz
stc
mov
pop
subb
loopne
dec
mov
adc
nop
mov
pushf
xchg
cld
push
and
int3
pop
and
aas
dec
loope
vxorps
adc
jle
repz
mov
bound
mov
mov
pop
lods
push
lahf
jne
iret
add
int
sbbl
sbb
sti
int
out
mov
movsl
xchg
scas
xchg
pop
in
add
out
out
mov
mov
push
cld
mov
loop
pop
into
xor
pusha
inc
push
rolb
and
int
test
test
fs
movsl
cld
andl
rcl
add
mov
mov
repz
in
sub
xor
push
add
sar
subl
call
xor
mov
stos
and
dec
adc
push
lods
jp
pop
jbe
cmp
lahf
sub
enter
jb
and
sub
xchg
push
jae
jmp
in
mov
lret
xchg
inc
scas
xchg
xor
leave
test
or
jge
cmp
xchg
inc
fimuls
mov
popa
jns
pop
pushf
cmpsb
jo
add
dec
pop
ret
mov
call
sbb
adc
aaa
out
adc
cwtl
dec
aam
mov
adc
scas
mov
xlat
cmpsb
sub
fcomps
push
enter
mov
push
or
js
mov
jp
inc
or
fimuls
out
mov
dec
aam
and
aad
hlt
inc
insl
data16
adc
in
sub
enter
xchg
in
dec
in
cmp
and
jecxz
je
sbb
inc
add
fstps
xor
and
shl
movb
movsb
fsubl
jmp
jb
movsb
push
push
iret
mov
adc
lret
movsb
adc
jbe
push
or
sub
dec
jbe
jne
mov
lahf
mov
fwait
sub
mov
mov
xchg
hlt
adcl
daa
insl
push
jmp
mov
sbb
mov
popa
inc
std
xor
sub
and
int3
pop
inc
ret
xchg
xchg
not
add
jae
sub
add
mov
push
lock
fstl
sbb
xchg
dec
stos
loope
repnz
test
xchg
mov
in
das
xchg
lahf
sub
xor
add
xor
lods
sti
mov
clc
mov
sub
sub
fstpt
mov
dec
push
jbe
and
xchg
fldl
movsb
pop
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
enter
or
adc
or
clc
push
jg
adc
and
mov
pop
mov
push
and
loop
loope
and
ljmp
inc
mov
ss
cmpl
and
and
dec
mov
jmp
xor
sbb
ss
dec
add
shlb
push
mov
cmp
out
mov
push
pextrw
nop
or
divl
dec
popf
inc
jle
addr16
pushf
pop
mov
xlat
pop
or
xchg
movsb
pop
dec
pop
jmp
adc
dec
pushf
xor
rorb
inc
sbb
les
lcall
rol
sub
push
fisttpll
flds
cmp
xchg
xchg
nop
jg
cmp
pop
fdivl
sbb
inc
mov
ja
lea
rep
in
cmp
pop
divl
or
inc
jp
mov
sbb
add
adc
xor
lcall
ss
addr16
scas
lahf
stc
pop
rcrb
lahf
cmpsb
test
rcr
shl
out
jno
mov
movsb
sbb
xor
xchg
dec
cmp
scas
mov
inc
pushf
add
adc
sbb
fistps
sub
jmp
ja
add
in
stos
pushf
xor
add
aaa
sbb
mov
sbb
cmp
push
aam
orl
push
sbb
mov
adc
jbe
loopne
ret
pop
cmovae
cmp
lods
jno
xchg
mov
pop
daa
or
ljmp
or
enter
data16
loop
stos
loop
cmp
sub
ss
add
sbb
lcall
cmp
stos
lcall
mov
ror
push
push
mov
mov
out
int3
in
or
inc
stc
sbb
andl
data16
sbb
dec
mov
fsubr
mov
mov
xchg
loop
mov
imul
fwait
into
dec
movsb
pop
int3
cs
xchg
cmp
xlat
sub
addr16
insl
cmp
add
add
xor
xor
add
pop
mov
aam
mov
xchg
mov
std
sbbb
mov
lret
mov
ja
mov
insb
mov
lcall
jmp
adc
xchg
sub
pop
leave
mov
xchg
cmpb
jb
iret
fsubr
jle
test
scas
xor
mov
out
rclb
jecxz
xchg
int
pop
or
cwtl
push
ss
add
inc
mov
pop
add
add
idivb
inc
or
jns
jne
pop
xchg
xor
fs
lods
cmp
mov
in
and
and
enter
std
inc
lret
lock
inc
sub
xchg
mov
leave
inc
or
shrb
insl
cmp
and
imul
jae
repnz
push
add
push
iret
shrl
cmp
pop
xor
xchg
cwtl
or
daa
sbb
jecxz
dec
pop
dec
lret
int3
jo
and
add
pop
jg
insl
sar
ret
pop
out
inc
pop
inc
mov
out
inc
lret
mov
ret
movsb
mov
nop
ljmp
fbstp
rorb
pop
add
js
cli
xchg
mov
cwtl
pop
xchg
fdivrs
icebp
ret
push
dec
test
test
orl
iret
add
add
pusha
inc
ja
pop
aaa
and
or
js
add
adc
adc
cmpl
aaa
push
in
sarl
scas
imul
mov
sarb
aad
inc
xchg
daa
cmp
mov
sbb
xor
mov
int
mov
mov
and
cli
out
ret
out
jl
sub
mov
fstpt
sbb
mov
xor
inc
or
dec
lahf
mov
or
shl
repz
jge
movsb
mov
pop
add
mov
mov
test
push
mov
dec
icebp
sbbl
ret
imul
jne
push
fnsave
popa
lahf
in
inc
shrl
mov
mov
mov
int
or
lds
mov
adcl
add
dec
int
mov
mov
jecxz
fs
std
mov
lods
and
lods
stos
xchg
inc
adc
lret
or
mov
push
push
out
add
fdivl
mov
shll
outsb
xchg
and
leave
lds
and
ds
das
push
adc
jecxz
orl
call
dec
das
insl
push
insb
or
orb
xchg
xor
stc
outsb
or
cmc
test
mov
jge
or
aaa
adc
icebp
popf
fsubl
addb
test
dec
gs
movsl
jp
dec
in
pusha
or
leave
pop
cmpsb
jp
clc
icebp
adc
nop
mov
sub
cmp
push
pop
pop
int
test
xor
fldl
sbb
xor
sub
sub
xchg
negl
subl
loope
cltd
xor
fists
aad
or
cld
pop
ss
sub
mov
fadds
call
sahf
mov
aaa
in
gs
and
push
xchg
push
jmp
into
jns
dec
mov
push
insb
lret
int
jp
cmp
idiv
jnp
inc
xlat
cmpsb
mov
dec
add
inc
mov
mov
sub
and
mov
scas
fstpl
es
inc
pop
out
movsb
dec
mov
xor
or
dec
push
insb
sub
adc
cmpsl
adc
loopne
je
pop
dec
mov
aas
cmp
aam
aaa
push
adc
movsl
pusha
xor
sbb
jno
ds
mov
mov
sub
in
mov
out
mov
loop
loope
mov
mov
out
test
xor
cmc
in
adc
mov
cltd
add
loop
cltd
pop
jmp
cmp
add
jnp
clc
sbb
jge
loopne
xor
subl
cmc
mov
sarb
js
or
aad
cmp
addr16
pushf
scas
cli
pop
xor
test
ljmp
sbb
push
mov
mov
ret
pop
aam
popl
push
xchg
push
into
je
je
push
lea
jge
icebp
faddl
and
stos
cmpsl
adc
out
mov
add
outsl
neg
scas
mov
arpl
test
pop
xor
lret
movb
xadd
adcb
sbb
setbe
add
mov
and
inc
jno
sbb
add
icebp
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
in
outsl
lret
lock
inc
cmp
fisttpl
push
xchg
in
out
pop
hlt
sbb
xlat
lretw
adc
aam
cmpsb
mov
inc
sub
arpl
popf
pusha
nop
pop
imul
jne
test
and
or
mov
hlt
pop
xchg
dec
pop
daa
sbb
mov
cli
rorb
push
or
ljmp
cmpb
xchg
xchg
pushf
jnp
jecxz
sub
outsl
mov
xchg
adc
push
sub
mov
out
lock
mov
and
mov
dec
mov
ja
ds
push
xchg
jg
mov
mov
and
test
hlt
fisubrl
push
xchg
aaa
shlb
dec
mov
scas
jl
gs
aad
popa
inc
lret
pop
sbb
pop
fstps
mov
push
xor
pop
lds
out
push
dec
push
sbbl
and
xchg
pop
movsb
add
dec
aad
fs
fistpl
cmp
lods
mov
shrb
sahf
lods
lds
add
scas
lock
sbb
mov
cs
aad
mov
mov
pop
or
adc
and
insl
pusha
mov
inc
and
mov
mov
adc
int3
pop
sub
push
loopne
push
add
sti
ja
xor
in
and
ja
adc
stc
or
les
lea
or
cmp
xchg
cmp
cmpsb
xchg
mov
sbb
or
xchg
icebp
adc
pop
inc
call
mov
cli
out
fiaddl
inc
or
sbb
mov
xlat
push
rcrl
mov
imul
imul
testb
dec
adc
cli
mov
hlt
sub
daa
push
in
aad
add
sbb
xor
push
mov
jae
addb
mov
inc
scas
sbb
mov
pop
adc
pop
push
loope
mov
pop
jne
aam
fs
stc
lret
mov
clc
mov
jl
rcll
adc
add
and
lods
enter
outsl
inc
mov
mov
jo
add
iret
loope
pop
outsl
xchg
ss
js
xorl
imul
pop
push
nop
xchg
push
mov
cmp
sbb
xchg
push
and
repnz
and
lahf
test
imul
out
leave
sti
pop
stos
lods
mov
xor
xchg
jmp
pop
nop
sti
test
and
mov
nop
push
stos
pop
fimull
and
mov
lcall
insl
pop
stc
jmp
jnp
jne
into
daa
dec
inc
outsl
and
dec
jbe
mov
loope
adc
jb
in
inc
push
sarb
push
jb
test
int
push
xchg
jb
fs
rol
hlt
push
cmp
add
test
call
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
pop
pop
out
stos
out
lock
adc
adc
inc
popf
sbb
sar
jo
jp
or
push
mov
fistpl
xor
mov
mov
ss
pop
dec
dec
push
push
fisubrl
sti
insl
sti
nop
cmc
pop
repz
clc
add
mov
lods
sub
movsb
pop
arpl
sub
push
pop
push
cmp
jge
rcr
mov
repz
pop
lods
cmpsl
xchg
int3
pop
out
inc
addr16
cmc
mov
in
and
cmp
xor
cmpsb
cmpsl
jl
bound
add
add
cmp
mov
repz
clc
nop
outsl
imul
loopne
add
or
xchg
imul
or
inc
ja
mov
jle
add
das
out
mov
push
jp
jo
imul
out
mov
xchg
mulb
jnp
push
cli
inc
lea
jp
pop
inc
or
xchg
sbb
mov
int3
mov
sti
mov
or
cmpsl
pop
movsb
jno
test
andb
dec
ret
jmpw
loop
dec
fcmovne
outsl
inc
das
gs
loopne
test
mov
inc
mov
and
fdivrl
sbb
gs
and
dec
in
cmc
push
mov
notb
or
lahf
mov
pop
andl
je
ret
loopne
ss
stc
xchg
outsl
mov
loopne
aam
stos
or
mov
pop
inc
hlt
lds
pop
mov
inc
ret
xchg
add
cmpb
rcll
xor
push
add
jmp
pop
bound
imul
adc
cmp
and
outsb
sub
cmp
push
push
sub
push
jne
dec
in
cmpsl
inc
add
and
pop
sbb
push
fbld
jne
fimull
sbb
sarl
sbb
xchg
popf
push
mov
repnz
add
popa
lahf
add
adc
mov
rorl
xchg
push
push
dec
ss
mov
xlat
mov
mov
adc
jg
cmpsb
bound
out
inc
inc
out
cmp
adc
mov
adc
adc
and
cs
sub
lods
add
lods
cmp
push
lods
mov
mov
or
pop
fdivl
ret
mov
popa
mov
jno
idiv
xchg
dec
push
testl
push
cld
imul
or
mov
sbb
ljmp
adc
repz
outsb
cmp
adc
js
pop
mov
pop
das
mov
lahf
xor
je
std
jmp
andb
dec
test
shrl
gs
loopne
std
fucomp
cmc
xchg
arpl
xchg
inc
sub
lods
stos
imul
cmc
ret
iret
mov
shll
add
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
sahf
test
adc
adc
inc
loopnew
mov
test
daa
adc
mov
mov
fwait
ret
push
add
rorb
das
ljmp
jns,pn
sbb
cmp
jp
cltd
jne
adc
sub
dec
ljmp
pop
xchg
repz
les
and
cld
fstl
push
push
inc
leave
push
jl
xchg
iret
push
iret
cmpsl
mov
cld
xchg
and
cmp
test
or
inc
andb
sbb
loop
mov
sbb
mov
inc
push
xor
rorb
adc
cmpsl
mov
loope
push
lods
mov
testl
inc
shll
sarb
add
xchg
and
pop
mov
cmpsl
and
imul
push
jge
cs
scas
sub
inc
and
repnz
add
or
shll
sub
lcall
movl
aam
cmp
push
push
mulb
movsb
dec
sbb
xor
daa
cmc
loopne
out
pop
aam
in
mov
outsb
pop
jno
aad
sar
add
sbb
in
bound
fsubr
jnp
xchg
loope
jbe
out
adc
cli
int
dec
in
mov
insb
stos
mov
fs
or
cmc
or
push
jg
mov
cld
xor
push
outsl
xorb
call
faddp
xchg
into
pusha
sbb
ds
sub
sub
sbb
adc
lods
js
mov
data16
pop
xor
insb
insb
mov
mov
dec
push
pushl
or
ret
dec
mov
loop
je
movsl
dec
mov
mov
mov
inc
inc
aad
std
add
je
hlt
and
shrb
inc
sbb
outsl
fs
das
jmp
aam
push
xor
and
xor
int3
cs
mov
lock
cmpl
fwait
push
jnp
inc
arpl
push
into
repnz
dec
jecxz
clc
outsl
stos
hlt
rcrl
ret
cwtl
inc
out
xor
inc
movsl
dec
sahf
push
clc
popf
cmpsb
mov
dec
pusha
fadds
pop
xor
popa
arpl
cmp
dec
cmpsb
testb
mov
pop
dec
out
xchg
data16
mov
mull
pop
dec
ja
pop
stc
fsubl
jne
stc
or
into
and
cld
test
enter
dec
aam
sbb
loope
scas
lock
add
shlb
mov
nop
cld
testl
lcall
jns
push
push
push
xor
dec
add
mov
popf
sub
mov
sub
cltd
imul
or
loopne
in
cltd
dec
mov
subb
sub
jne
mov
dec
cmc
xchg
jle
rcrl
negl
daa
js
push
cmp
loopne
mov
out
inc
mov
jb
mov
imul
lahf
cmp
mov
testb
dec
xorl
add
add
ret
nop
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
and
push
jecxz
adc
adc
adc
ficoml
lcall
mov
adc
sub
clc
call
addr16
loopne
and
gs
mov
sbb
lret
xchg
mov
in
negl
sbb
inc
sub
arpl
mov
aam
sub
pushf
out
inc
mov
and
mov
cmp
xor
dec
mov
stos
out
xorb
inc
test
pop
clc
mov
mov
push
mov
andl
pop
stc
inc
pop
les
pop
shrl
jl
dec
imul
sub
repz
mov
std
in
cmc
test
aad
mov
movsl
inc
ja
and
pop
push
inc
call
stos
add
or
inc
rcr
add
in
mov
clc
je
sbb
inc
fidivs
push
push
leave
push
fwait
out
inc
lcall
lods
or
leave
ficoml
jp
pop
or
lcall
int3
mov
cli
arpl
outsl
in
dec
pusha
fcom
pushaw
jno
cmc
mov
lcall
jns
subl
mov
sti
fidivrl
jle
inc
push
push
pop
adc
xchg
es
sbb
fucomp
lea
sub
add
fcmovbe
xor
xchg
mov
mov
add
aas
bsf
icebp
lods
cmc
push
lahf
cs
jp
push
add
and
fimull
pop
pop
cmp
cmpsl
daa
xor
daa
xlat
mov
xchg
sarb
insb
xchg
dec
sti
cmc
add
and
jb
push
xor
inc
mov
sbb
iret
outsb
clc
push
jno
imul
sbb
ljmp
jle
xlat
mov
sbb
test
pop
cmp
push
add
sbb
jge
mov
fmull
lods
pop
pop
add
neg
jecxz
jno
sahf
int3
or
add
or
xor
cld
mulb
fiaddl
mov
push
das
rcll
xor
dec
repnz
aam
sub
push
lret
scas
scas
mov
repnz
lods
aaa
repz
insb
shlb
mov
sub
jne
call
adc
push
jbe
shl
clc
in
sbb
sar
mov
cmc
mov
cmp
pusha
xor
rorb
mov
mov
dec
jb
movsb
jb
pop
push
sahf
pop
arpl
xor
xchg
or
push
out
lret
mov
lcall
mov
mov
pop
sub
push
test
clc
std
outsb
data16
xor
lods
popf
pop
adc
jbe
add
mov
xchg
lods
icebp
clc
std
mov
inc
jno
aad
loope
imul
fisubrs
dec
inc
rolb
ljmp
jmp
xor
jo
adc
test
in
dec
int
jge
sub
jns
repz
dec
dec
jle
lock
shl
icebp
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
roll
adc
adc
adc
xor
les
adc
sub
and
lds
sub
cmp
xchg
movsb
xlat
test
mov
ret
add
roll
or
jbe
movsb
rclb
mull
xor
push
mov
repz
cmp
inc
mov
rorl
xor
roll
push
mov
or
or
loop
stc
jbe
xchg
cmc
mov
jnp
mov
jp
dec
jmp
add
cmp
rolb
mov
loope
inc
lahf
xchg
push
mov
js
push
test
shll
push
ds
xchg
pmovmskb
and
sub
mov
mov
pop
push
mov
in
cmp
rsqrtps
fucomp
fisttps
xchg
push
ljmp
cs
outsb
and
repz
mov
dec
loop
je
pop
push
into
push
outsl
lcall
jmp
sub
jmp
in
inc
mov
fisttpl
inc
xlat
sub
sub
jo
aaa
shlb
in
cmpsl
push
mov
push
divl
push
bound
scas
int
add
inc
mov
outsl
lret
imul
sbb
cmp
fwait
xchg
leave
loope
fldcw
or
out
or
mov
mov
mov
pusha
mov
sar
jp
pusha
mov
sub
sahf
enter
addl
out
and
mov
add
cmpsb
ss
mov
imul
inc
xchg
stos
jno
sub
mov
xchg
xorl
mov
loope
test
or
add
or
add
push
xor
or
shlb
jmp
push
out
fs
add
pop
mov
and
pop
mov
in
jg
sbb
pop
dec
and
cli
aad
and
in
out
sub
pushf
movsb
lcall
gs
mov
lahf
roll
xchg
pusha
iret
mov
dec
mov
push
shrb
cld
mov
sbb
mov
cmp
mov
or
adc
xchg
fistpll
sbb
cli
mov
push
out
inc
addr16
out
cwtl
and
cmp
fwait
rol
in
test
sbb
mov
icebp
repz
inc
mov
jno
jl
and
add
out
mov
lock
out
jb
mov
xor
mov
mov
in
popf
icebp
and
pop
cmp
outsb
add
mov
lcall
loopne
arpl
adc
insl
mov
sub
es
jno
pop
loope
rclb
outsl
stos
mov
sbb
lcall
lret
fsubr
sub
pop
pop
mov
popa
push
cmp
loope
je
mov
dec
decl
decl
jl
decl
ret
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
push
stos
sbb
push
jmp
imul
mov
jo
cs
sbb
jno
insb
pop
sbb
adc
jns
stc
push
lcall
ret
mov
pusha
call
je
roll
jp
cmpsb
add
orb
sub
out
inc
lret
and
jmp
insb
test
pushf
jp
das
out
push
in
fidivs
lods
pusha
dec
in
ljmp
push
dec
mov
cmc
out
and
xlat
push
add
int3
and
test
ficoms
cmp
mov
loop
mov
and
stos
fcoms
shr
sbb
dec
pop
repz
lods
into
sub
add
test
mov
pop
sbbb
ljmp
xorb
testb
repz
pop
xlat
ds
xchg
subb
int3
inc
or
jmp
scas
add
out
fwait
in
xchg
pop
mov
xchg
add
nop
mov
popa
ljmp
mov
xor
lcall
and
push
mov
sub
pop
mov
out
jb
xchg
mov
lret
pop
pop
addb
adc
pop
sub
xor
fiadds
dec
loop
push
inc
lret
pop
int
outsb
add
mov
in
mov
les
push
mov
loope
add
mov
mov
pop
pop
and
out
adc
xor
fdivl
stc
test
sahf
sti
xchg
mov
or
loop
orb
stc
sbb
jge
jae
daa
sub
pushl
scas
mov
push
sub
mov
push
int
add
xchg
sbb
loopne
or
jo
xchg
ds
pop
sub
jp
iret
ja
adc
mov
mov
lea
or
insl
popf
dec
sub
add
push
lahf
sub
add
push
test
ret
lock
adc
adc
and
mov
in
mov
out
dec
mov
or
or
dec
push
std
dec
cltd
cmp
push
mov
jnp
int3
insl
dec
lock
jb
aad
xchg
sbb
imul
inc
jg
cmp
das
sbb
sbb
dec
adc
or
adc
xchg
ljmp
shrl
aaa
popa
add
and
scas
xchg
pusha
mov
imul
xchg
mov
cli
jmp
or
add
or
pop
mov
repnz
push
aad
stos
mov
dec
outsl
out
mov
add
insb
popa
scas
xchg
xorl
cli
pop
test
outsb
sub
scas
sti
lret
mov
pop
aad
hlt
mov
imul
push
test
popf
mov
andb
dec
cmpsl
cmp
hlt
insb
iret
adc
mov
push
mov
adc
jo
decl
decl
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
cmp
mov
adc
adc
mov
repnz
into
int
cmpsb
and
inc
fcompl
rclb
add
loope
cltd
mov
xorl
shrb
cmpsb
mov
sub
aas
mov
fcmovnbe
adc
jle
sbb
ja
clc
mov
scas
scas
ja
repnz
out
cmp
adc
testl
fnstenv
xchg
outsb
subb
jge
stos
mov
test
aas
mov
dec
push
aaa
adc
negl
and
and
cmpb
adc
das
mov
mov
pop
push
push
mov
adc
sti
mov
dec
cmp
ror
sub
dec
add
mov
call
das
mov
mov
mov
lods
or
scas
mov
das
adc
adc
repz
dec
clc
cmp
test
cmp
mov
fst
nop
cli
addr16
je
movsl
inc
enter
test
xor
adc
pop
cld
adc
cli
mov
inc
mov
les
sub
sub
mov
cli
push
mov
test
cmpsl
inc
lock
dec
inc
mov
daa
imul
add
sbb
jae
mov
dec
popa
xchg
sbb
in
sbb
cmp
sbb
jp
xchg
negb
imull
pop
sbb
add
adc
jmp
addr16
push
inc
aaa
jmp
sbb
jae,pt
add
and
in
add
fsubs
lods
adc
icebp
push
mov
fisubrs
loope
repnz
movsb
mov
jg
movb
or
adc
pop
mov
mov
xor
and
cli
push
add
pop
stos
sbbl
mov
dec
enter
mov
mov
mov
push
dec
jmp
inc
pop
jmp
cltd
lahf
pop
jl
fisubl
push
push
aas
xor
outsl
jle
mov
enter
popf
mov
leave
jns
repnz
cmpsb
push
daa
push
pop
push
mov
icebp
leave
cmp
cltd
movsb
push
inc
sub
pop
sti
mov
scas
sub
fs
xchg
sub
xor
stos
movsb
sahf
xor
int3
sub
xorb
xchg
lahf
in
adc
mov
pop
addl
push
out
cwtl
xor
rcll
push
mov
rcll
mov
insl
xor
push
cmp
mov
lcall
adcb
outsb
mov
in
repz
scas
scas
sarb
les
pop
fsubrs
loope
aas
xchg
add
sub
cmpsb
mov
dec
or
in
sbb
xchg
xchg
das
jns
loopne
sbb
mov
aam
movsb
xchg
inc
lods
push
inc
xor
push
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
mov
adc
adc
nopl
jno
fnstenv
cmp
pop
sar
test
fdivs
adc
hlt
ficomps
ret
mov
push
cmpsl
lods
cwtl
orb
in
pusha
push
dec
pushf
les
mov
sub
js
xchg
dec
add
xor
mov
pop
dec
add
add
xor
pop
jge
movsb
adc
in
fistpll
jo
adc
push
push
inc
mov
mov
sbb
sahf
mov
test
jns
in
xchg
int
xchg
push
fmuls
add
adc
loop
dec
cld
icebp
lea
mov
xchg
test
xchg
shl
inc
adc
inc
sub
and
imul
je
push
out
ret
mov
lret
in
clc
js
ret
fdivrl
popa
sub
movsl
dec
ret
mov
sahf
jmp
sarb
or
fwait
mov
xor
lods
rorb
push
pop
inc
mov
out
shll
mov
sbb
decl
sub
leave
in
xor
add
jo
xor
xor
sbb
xchg
movsb
pusha
inc
loope
jno
loop
les
jmp
popa
sti
test
or
sbbl
push
ljmp
hlt
sub
adc
negb
sbb
test
ret
insl
mov
inc
hlt
testb
es
jb
push
scas
pop
sbb
jne
push
nop
cwtl
jp
clc
out
adc
ret
jo
es
mov
ss
sub
inc
pop
addr16
mov
lahf
xor
jne
andb
mov
loopne
jecxz
mov
out
push
jp
aaa
pop
pop
sub
inc
xor
cmp
repnz
scas
mov
mov
jnp
pop
in
aad
fbstp
add
cli
or
test
adc
stc
pop
add
repz
popf
adc
xor
mov
add
lock
aas
adc
push
test
popf
test
jmp
inc
clc
testl
sub
mov
fs
xchg
push
mov
inc
loopne
jge
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
into
lods
test
adc
xchg
movlps
test
push
xor
insb
repnz
push
xor
jbe
sbb
inc
cwtl
dec
mov
repnz
and
or
mov
inc
sbb
push
in
mov
dec
cmpsl
jno
fildll
xchg
outsl
lods
cmc
mov
add
pop
pop
les
mov
pop
loopne
mov
out
or
jle
nop
test
fldenv
dec
mov
out
mov
sbb
sub
test
sub
xor
and
arpl
int
daa
repnz
dec
aas
adc
clc
in
fidivs
cld
scas
push
mov
rcll
cli
dec
mov
sbb
or
add
push
xor
and
jp
outsl
jle
pop
lods
xlat
sub
push
push
push
push
pusha
ss
push
xchg
inc
mov
push
out
mov
sub
mov
mov
sub
sub
sub
mov
das
int3
jnp
mov
sbb
mov
aam
mov
mov
dec
and
inc
fsubrl
cmpb
xchg
pop
out
push
xchg
cmp
pop
cmpsl
inc
sub
sbb
insb
cld
je
rorb
arpl
js
imull
notl
pushf
mov
sub
mov
aas
es
in
adc
pop
sub
inc
pop
lock
sbb
fistps
push
jmp
or
jmp
mov
push
lock
pop
mov
xor
pop
or
mov
inc
cltd
fldl
lods
mov
aaa
subl
test
test
dec
jl
sbb
jb
in
xchg
mov
add
leave
ficoml
bound
dec
repz
sbb
push
sahf
fcompl
mov
mov
jb
in
pop
pushf
jae
repnz
xor
push
sub
mov
and
ljmp
daa
sbb
add
and
or
push
rol
xchg
lahf
cmpsb
mov
test
adc
pusha
addr16
rcr
popa
jnp
adc
cmp
mov
mov
sbb
jmp
sbbl
cmp
aam
pop
lods
outsl
fmulp
lods
add
adc
xchg
movlps
addr16
cmp
cmp
sub
xor
cmc
orb
out
mov
lds
in
hlt
adc
push
aaa
fistl
mov
leave
insb
scas
jb
or
jne
mov
dec
cs
add
mov
jle
inc
addb
sbb
mull
orb
xchg
mul
lock
xchg
mov
mov
inc
pop
inc
or
mov
or
pusha
dec
in
mov
sbb
sub
jnp
jmp
ja
jl
xchg
roll
mov
cmp
inc
in
xchg
jg
jg
les
addr16
test
xchg
add
inc
pop
and
xor
jl
pop
ret
sub
das
frstor
inc
mov
xor
in
xor
aad
cs
jg
test
and
push
fstpl
jbe
hlt
push
shrl
je
jns
in
ljmp
dec
pop
lock
sub
xchg
dec
xlat
add
into
xor
test
sahf
test
pop
push
es
incb
cli
mov
cs
imul
mov
iret
rclb
ret
mov
fwait
ror
cmp
aas
inc
push
sub
sub
xchg
xor
loope
mov
jecxz
add
jno
dec
fs
dec
stos
jecxz
fsubrs
mov
xor
and
fadds
lods
and
or
adc
mov
mov
xchg
loope
fmuls
adc
xor
ret
sub
out
lret
outsl
jecxz
les
out
and
int
fs
into
mov
js
xchg
or
pusha
dec
clc
inc
es
nop
daa
clc
pusha
fcmovu
sbb
aaa
inc
jge
divb
mov
cmc
sbb
inc
stos
fsubs
nop
adc
test
jle
lcall
mov
rorl
mov
cmp
loope
xlat
repnz
mov
sbb
sti
sarb
sbb
fadd
or
daa
or
cli
sub
jmp
push
pop
lahf
mov
rorb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
cli
xchg
fidivrs
xchg
movlps
iret
hlt
adc
sbb
mov
icebp
jbe
ret
mov
mov
ret
jno
xchg
test
les
inc
bnd
clc
xchg
loop
mov
sbb
and
js
mov
inc
dec
rcll
repz
out
pop
mov
xchg
cld
or
sbb
mov
arpl
repz
out
ret
iret
movb
negl
and
scas
repnz
fidivrs
sbb
push
dec
outsb
jg
addb
into
sub
lock
daa
sbb
jae
add
stc
fidivl
loope
inc
lahf
adc
je
lahf
and
inc
and
mov
and
or
mov
js
repz
int
mov
lea
inc
int3
jne
test
sub
xchg
inc
lahf
xchg
dec
mov
in
sbb
sub
jecxz
lods
push
cltd
clc
cmpsb
mov
or
and
push
mov
cltd
mov
push
adc
repnz
and
call
or
aad
imul
jg,pn
aas
into
mov
or
icebp
inc
push
cmp
fisubrl
mov
dec
hlt
sbbl
es
mov
rorl
pop
jecxz
repnz
mov
add
iret
pop
xchg
xchg
stc
ja
data16
cmp
xor
and
lret
sbb
push
cs
aam
ja
mov
call
mov
mov
ja
cwtl
dec
insl
xchg
stc
fstpl
jno
dec
cmovno
ja
outsb
lcall
bound
in
ret
pop
xchg
outsl
rclb
mov
adc
imul
mov
push
fsts
lahf
push
aas
mov
pop
pop
test
movsb
inc
pusha
ss
push
lods
jnp
imul
insl
sub
add
push
mov
push
and
lahf
imul
ss
xor
jecxz
mov
repnz
xchg
test
out
mov
dec
fimull
add
int
test
mov
mov
add
xor
jmp
fnsave
cmp
add
add
adc
pop
lock
je
mov
sbb
adcl
adc
dec
xorl
clc
stos
adc
or
cmc
jnp
cltd
test
out
pop
mov
outsb
or
adc
shrb
push
xor
fistpll
aaa
mov
dec
sbb
xor
ljmp
xchg
xor
pop
adc
aam
lods
dec
jmp
mov
movsb
loope
jnp
ss
loopne
stos
les
ljmp
sbb
and
push
xor
pusha
mov
sti
cld
adc
dec
test
push
sub
and
mov
and
push
push
fadd
shlb
aaa
pop
daa
scas
in
adc
jle
mov
test
outsl
inc
sub
jl
xchg
push
mov
xchg
adc
jge
xchg
gs
dec
cmp
jo
sti
adc
mov
jmp
mov
js
inc
xchg
adc
lock
fs
ljmp
arpl
push
ss
sbb
mov
and
shlb
mov
xchg
pop
jne
fistpll
sub
lahf
test
in
rorb
xchg
xchg
inc
pop
mulb
push
gs
test
mov
lods
sbb
lds
cmp
inc
pop
pop
add
push
sub
aaa
adc
out
mov
test
mov
inc
sub
pop
insb
cmp
jmp
or
movsb
jecxz
xchg
adc
adc
repnz
mov
aas
sti
jge
sti
aas
jns
je
cmc
xlat
cmp
pop
mov
push
imul
sbb
daa
mov
fwait
icebp
sub
out
xorl
mov
push
in
sub
imul
and
cmpsb
jl
dec
push
iret
sub
loope
sahf
mov
sub
mov
inc
inc
push
mov
xor
movsl
dec
push
das
out
dec
inc
icebp
jno
cmp
xchg
xchg
repz
cli
sbb
loopne
mov
aaa
jbe
inc
xor
push
aad
xor
cltd
ja
lods
ret
leave
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
xor
mov
xchg
movlps
jb
call
rol
push
adc
adcl
push
sbb
in
popa
test
dec
adc
call
js
xor
pop
xchg
loopne
jmp
loope
dec
int3
inc
cmc
push
jg
cmp
nop
mov
dec
out
mov
adc
fcomi
dec
mov
sub
into
lret
popa
sub
loopne
ret
addb
lea
add
cltd
inc
stos
imul
sbb
iret
push
inc
lods
adc
sbb
pop
inc
or
inc
test
xchg
pop
out
faddl
adc
sub
jno
ret
std
out
mov
sbb
xlat
xorl
push
cmpsl
push
and
scas
cmpl
jno
cld
jle
push
loop
jl
adc
in
pop
pop
sub
pushf
scas
divb
jb
imul
jg
out
push
mov
adcb
in
inc
movsb
aas
stc
cmp
sub
shll
sub
push
fimuls
push
nop
jmp
sub
xchg
adc
loopne
dec
pop
pop
dec
inc
pop
mov
mov
xchg
insl
sahf
mov
je
xchg
dec
testl
adc
iret
xor
pop
xor
data16
inc
add
xchg
fisttps
dec
arpl
imul
push
test
mov
mov
push
fs
repz
lret
push
jbe
inc
jbe
out
cmp
mov
loope
sbb
test
daa
cwtl
orl
fldl2e
jle
dec
sbbl
in
in
xor
push
popa
mov
add
cmpsb
in
or
insb
sub
xor
push
fwait
mov
add
lret
dec
hlt
jne
lods
mov
cwtl
sbb
and
jmp
jne
loopne
shrl
xchg
lods
mov
imul
in
outsl
lcall
mov
daa
push
cmc
inc
dec
pop
mov
sbb
xchg
mov
mov
xchg
add
ror
mov
icebp
jmp
xor
dec
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
loop
add
adc
add
adc
leave
lret
in
pop
fnstsw
add
sbb
push
cmp
out
mov
adc
cmpsb
imul
js
movsb
jo
jae
test
push
jecxz
lods
pop
mov
stc
incl
fbld
jmp
adc
xchg
outsb
and
xor
orl
in
icebp
dec
cmp
sbb
das
jae
es
cmpb
push
xchg
push
sub
cwtl
sbb
pop
divb
dec
push
mov
repnz
pusha
mov
imul
jmp
lock
fldl
cmp
dec
in
xchg
inc
lret
mov
inc
or
sbb
in
cmp
sub
push
adc
loope
inc
ret
and
movsl
push
jb
sbb
ss
ds
add
cmp
push
movsl
fld
sbb
in
je
adc
jne
out
mov
ret
mov
je
lret
lods
cli
pop
xor
in
in
int3
xor
jno
pop
jle
mov
aaa
and
cmc
add
fdiv
jecxz
fldcw
ret
mov
out
xchg
leave
mov
icebp
out
jbe
ja
jns
mov
push
mov
cmp
rol
addr16
addr16
inc
aam
enter
in
out
imul
rclb
sarl
sti
mov
lea
xchg
pop
and
clc
sub
add
dec
cmp
adc
clc
cmpsl
insl
stos
cli
adcb
add
mov
repz
jmp
andl
xor
mov
lcall
cld
pop
xor
pop
mov
sub
jmp
pop
arpl
call
int3
outsl
xor
add
in
mov
pop
repnz
movl
mov
or
addb
movsb
es
loopne
push
ret
adc
jl
lret
iret
sub
aas
ja
mov
sub
sub
pop
and
fnsave
fldt
mov
sbb
adc
jp
pop
adc
mov
mov
lods
push
mov
leave
dec
adc
mov
push
jae
cs
imul
fwait
stos
aad
aas
xchg
fwait
call
push
pusha
ja
call
mov
leave
jle
cli
sub
mov
es
shll
bound
in
push
fldt
xchg
mov
and
push
push
ds
dec
ljmp
mov
xor
push
xchg
dec
mov
cmpsl
inc
data16
xor
cs
clc
fiaddl
je
adc
ret
nop
outsb
jmp
or
jg
stos
add
je
sbb
jg
mov
cld
adcl
push
int3
xchg
shl
imul
mov
int3
xor
xchg
pop
sub
fwait
test
mov
xor
push
divl
cs
xchg
js
dec
and
repnz
dec
popf
hlt
adc
mov
push
sub
int
lock
jmp
outsl
fsts
pop
popa
frstor
pop
int3
ja
sbb
jne
xchg
push
mov
push
jp
pop
test
sbb
push
in
adc
adc
pop
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
sub
adc
adc
adc
or
pop
out
dec
lcall
call
lods
pop
push
push
cmpsl
aad
or
xchg
lds
sarl
xor
push
iret
jbe
aam
scas
cmp
fs
dec
dec
adc
mov
add
xchg
addl
aaa
and
push
adc
and
inc
mov
out
mov
mov
sarb
cmp
ss
push
mov
xor
push
push
jbe
loope
cmpsl
xchg
js
xchg
xor
scas
adc
test
sti
pusha
dec
jg
fdivr
in
dec
sahf
push
aam
push
add
mov
mov
test
pop
jno,pt
and
das
jl
loopne
pop
push
icebp
xchg
jbe
fsubrs
pop
and
repz
sub
sub
fistpll
mov
sbb
sub
je
jo
or
enter
out
mov
or
cmp
add
jb
sbb
orb
sbb
dec
jmp
sbb
pushf
adc
roll
mov
ja
or
and
ret
enter
in
sub
and
cmp
out
loopne
pop
les
xchg
shl
xchg
xchg
xor
nop
in
fcomi
lods
cmp
lret
icebp
adc
sub
or
dec
shlb
and
xor
inc
mov
mov
lock
xchg
jbe
inc
movsb
cmp
jae
xchg
xor
xchg
jbe
sub
jae
cmp
cmp
jns
lods
cli
jmp
xchg
cwtl
sbb
mov
and
test
prefetch
imul
jmp
and
xchg
jge
js
inc
pop
push
mov
dec
adcl
out
stc
test
loopne
cmc
das
scas
jnp
add
push
scas
push
in
sahf
out
das
pop
lcall
pop
jmp
jns
xchg
xchg
jmp
lods
mov
int
sub
dec
xchg
xlat
sub
dec
xor
xchg
xor
sahf
inc
aaa
mov
push
push
inc
ja
pusha
daa
test
inc
or
jo
mov
lods
mov
movsb
test
mov
add
pop
and
xchg
btrl
roll
xchg
mov
dec
mov
push
xchg
out
xor
out
jle
cmpsb
or
shrl
orb
loope
cmpb
lea
sbb
stos
stc
push
call
rol
test
sbbb
cmp
sbb
out
mov
mov
lods
sarb
dec
sbb
sub
leave
mov
xchg
stc
inc
and
std
xor
fs
std
mov
jnp
dec
aad
dec
xor
in
aas
sub
and
dec
push
rol
sarl
pop
sub
dec
nop
push
sub
dec
shrl
call
xchg
in
jbe
loope
imul
dec
decb
inc
cli
cld
sbb
lret
sub
push
clc
popa
rclb
dec
jno
out
dec
push
mov
jbe
inc
xchg
jmp
jmp
out
xchg
push
cltd
addr16
mov
xchg
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
mov
jle
movsl
adc
add
adc
stos
push
ljmp
inc
and
mov
aaa
sbb
inc
test
cwtl
pop
in
xor
lds
pop
mov
or
dec
or
pop
adc
ljmp
test
sub
add
nop
test
mov
sahf
mov
stos
xchg
pop
add
je
stc
or
xchg
aad
jbe
mov
xchg
insb
dec
mov
outsl
push
in
lods
mov
jge
cmp
jmp
lcall
leave
test
jp
mov
clc
adc
jl
lahf
loope
hlt
cmp
testb
int
or
sbb
add
adc
add
pop
sahf
sbb
orl
jnp
mov
add
orl
jb
insl
pusha
push
addr16
push
and
mov
jnp
xchg
out
cmp
xor
dec
xor
mov
ja
stos
lahf
stc
mov
cltd
test
pop
pop
rcr
xchg
cs
movsb
ret
xor
jb
xlat
rorb
arpl
jecxz
jnp
mov
push
je
fnsave
pop
dec
pop
test
inc
adc
dec
mov
jmp
sbb
adc
add
sub
xor
stc
inc
movsb
cmpsl
xor
mov
movb
es
or
dec
mov
je
shl
adc
shrb
or
ds
andb
cltd
sub
adc
sbb
lcall
dec
xorb
daa
divl
and
adc
push
mov
stos
xor
jne
sbb
xor
mov
bound
jge
adc
dec
aad
add
cmc
std
ret
out
jmp
inc
loope
aas
insb
fcmovbe
jb
aad
add
loope
mov
lea
xor
adc
fcomps
cmp
mov
bound
adcl
lock
or
mov
mov
sahf
ret
mov
out
int3
pusha
inc
sbb
xchg
stc
jl
and
clc
push
pop
aaa
cltd
leave
mov
lds
fldenv
xchg
into
sbb
dec
push
pop
sbb
dec
popf
out
mov
mov
and
push
pop
test
dec
adc
sbb
in
repz
addl
mov
shlb
or
repz
push
xchg
jmp
push
jo
adc
push
cmp
adc
cmc
adc
xchg
fistpll
add
loop
pop
dec
and
push
out
push
in
adc
cmpsl
sub
dec
ljmp
ret
pop
dec
mov
jne
loope
xlat
mov
mov
dec
lods
dec
fidivrs
dec
jmp
cwtl
fisubs
ret
mov
sbb
roll
stos
in
icebp
mov
les
and
add
sar
add
adc
push
pop
loope
cltd
ljmp
pop
dec
mov
push
adc
add
loop
sub
jecxz
dec
outsb
sti
dec
adc
jne
push
or
sub
pop
xor
inc
xchg
int3
inc
loopne
sti
imul
inc
cltd
enter
inc
or
inc
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
adc
jle
popf
adc
jne
adc
jmp
into
lret
xor
scas
push
inc
flds
push
and
cmp
into
sbb
or
shll
imull
jnp
cmpsb
xor
inc
push
cs
scas
pop
push
jno
mov
movsb
sbbb
bound
arpl
jo
mov
fsubr
stos
inc
stos
xchg
lret
cmp
addr16
mov
test
cs
cmp
adc
push
pushf
inc
pop
cs
jae
pushf
sbbb
jle
das
icebp
dec
jg
fcmovu
test
sbb
in
xchg
and
ja
add
or
test
adc
dec
jo
sub
mov
mov
fsubr
in
int3
sarb
nop
or
and
lret
loopne
mov
xlat
push
xchg
sub
xchg
les
xor
xchg
push
je
rorb
popf
pop
lods
fcoms
cld
xchg
shl
stos
pushf
int
test
or
lods
sbb
or
xchg
mov
orl
popa
out
ds
push
les
xchg
xchg
out
and
push
add
ja
sbb
or
leave
fwait
out
mov
mov
xorl
push
sub
sarb
sahf
jl
dec
test
lret
mov
push
push
pop
add
adc
insl
das
jmp
mov
jne
mov
std
hlt
test
pop
lcall
loope
popl
and
xor
adcl
or
push
sub
jp
xchg
out
cmp
adc
shll
mov
push
fs
cs
adc
inc
pop
rolb
push
mov
xchg
jg
lods
stc
jbe
andb
aas
in
daa
fs
adc
cmpsl
popa
dec
add
repnz
aas
sbb
subl
gs
lods
aam
scas
push
mov
and
push
push
cmp
pop
jno
pop
cmpl
mov
fdivrl
lods
mov
sbb
xor
pop
add
test
mov
add
addr16
dec
scas
jecxz
push
xchg
dec
xor
cmp
rcl
cmp
stos
fists
or
or
adc
lahf
rcll
int3
gs
push
es
push
nop
cmp
imul
movsl
adc
addr16
mov
adc
lret
int
mov
cmp
mov
fidivrl
mov
xor
push
stc
pop
mov
mov
push
xchg
loop
fdivs
nop
xlat
jbe
mov
xchg
xor
insb
test
or
sub
or
mov
jge
adc
mov
or
icebp
daa
or
lahf
mov
idiv
push
movsb
cmp
mov
cld
repnz
mov
jecxz
pop
icebp
dec
sbb
cmp
lcall
xor
in
lods
ficompl
cmp
mov
dec
pop
cmpsb
push
xor
or
mov
fcmove
sub
cltd
jg
sbb
imul
mov
mov
adcb
push
and
dec
push
ficoml
imul
arpl
arpl
sbb
sbb
in
lahf
cli
mov
push
adc
xchg
std
testb
int3
scas
or
fimuls
and
sub
mov
call
dec
cmpsb
jnp
subb
pop
stos
cli
cmp
gs
shrb
jmp
dec
sbb
jno
sbb
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
in
int3
lods
sub
adc
add
push
fsubl
out
or
dec
cltd
mov
test
popl
lahf
pop
sbb
cmp
push
mov
xor
imul
xor
push
dec
inc
ja
sub
in
enter
das
sbb
push
cmp
sbb
mov
mov
into
insl
xor
xchg
cmpsl
inc
shll
jg
xchg
xlat
mov
clc
pop
mov
cmpsl
daa
xchg
push
ljmp
push
jmp
and
cmp
out
cwtl
dec
js
daa
sbb
hlt
push
add
jne
cmpsl
or
lods
xchg
and
mov
das
push
or
lods
add
or
mov
inc
mov
in
iret
rcl
adc
pushf
and
lahf
xchg
faddl
pop
adc
inc
sti
dec
jp
cli
mov
pop
sub
pop
jbe
loope
movsl
ror
std
dec
jmp
out
das
cmpsb
idivl
push
inc
sbb
and
mov
fwait
fcmovnbe
lock
push
test
fwait
sbb
adc
pusha
pusha
daa
ljmp
out
cwtl
aaa
dec
xor
in
hlt
and
mov
adc
or
repnz
mov
aad
mov
and
loop
mov
jge
ds
out
popf
xchg
loope
sub
mov
lods
jnp
jmp
push
mov
pop
pop
cmpsb
out
and
ds
es
vphaddbd
cmpsb
push
dec
jnp
adc
nop
dec
cld
mov
cld
jp
sbb
mull
dec
jmp
inc
inc
dec
js
pop
fsubrl
pop
int
mov
iret
mov
cmpsb
add
rcl
xchg
sbb
sbb
xchg
nop
out
push
imul
cwtl
sub
push
addr16
mov
nop
clc
aaa
in
testb
lret
repnz
ss
inc
push
pop
inc
xchg
xchg
movsl
sub
pop
outsl
cmp
outsl
or
xchg
pop
lret
dec
push
mov
clc
nop
sbb
adc
adc
cwtl
popf
fisubrl
iret
push
sub
loopne
push
stos
inc
clc
pop
orl
out
inc
in
xor
mov
inc
dec
int3
mov
sub
hlt
je
imul
dec
cmpsb
cmp
xchg
out
rcll
cltd
and
pop
add
shlb
adc
mov
stos
mov
decl
jmp
outsl
test
mov
and
int
cld
mov
pop
adc
jle
sub
adc
or
aaa
aad
cmp
sti
and
cltd
jbe
mov
je
jp
leave
mov
sub
push
push
or
rcll
adc
sub
xchg
cmp
sbb
fstp
mov
mov
and
repz
gs
mov
cmp
push
sarl
jb
mov
adc
push
lahf
addb
mov
lock
and
into
pop
add
lock
dec
inc
push
cli
inc
popf
das
ja
pop
lods
adc
ds
adc
adc
mov
shrb
fcompl
insl
xchg
dec
adc
sub
rorb
cmp
lret
mov
jp
aad
sub
mov
sti
ja
inc
mov
and
push
sbb
mov
mov
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
mov
push
mov
adc
movlps
stc
fs
sbb
test
out
mov
in
push
adc
ds
in
addr16
imul
cmc
pop
adc
jb
ss
test
aas
test
jge
xor
sub
scas
cmp
mov
or
add
clc
jecxz
jno
cmpsb
jne
sbb
scas
inc
in
repz
sti
inc
pop
shll
lods
subb
lea
dec
pop
dec
pop
scas
sahf
pop
mov
mov
insb
pop
and
test
mov
push
mov
sbb
mov
out
sahf
mov
cmc
int
clc
sub
pop
mov
iret
cmp
inc
jno
fmul
pop
xchg
push
pop
push
push
xchg
lock
icebp
ja
fists
lods
add
cmp
popl
lods
out
inc
jp
rorl
aas
fwait
jge
aam
xchg
scas
pop
push
and
movsl
icebp
je
shlb
xchg
sub
scas
nopl
push
jae
or
gs
nop
cmpsl
xor
push
sar
and
pop
fidivl
mov
jmp
shlb
adc
adc
mov
sub
cmp
lock
test
xchg
insb
pop
mov
cli
xor
outsl
fistps
daa
or
dec
in
hlt
rolb
andl
lock
insl
mov
lds
mov
cmp
loopne
enter
mov
test
popf
loope
insb
mov
mov
cld
aas
jnp
gs
popa
leave
ret
sbb
add
or
mov
dec
sbb
bound
testl
or
int
xchg
ss
out
jmp
sub
adc
mov
mov
jmp
push
data16
xchg
xor
in
outsl
stos
xor
in
and
movsl
or
add
pop
mov
push
cmc
xor
inc
data16
xchg
stos
stos
xlat
push
or
les
xchg
aam
jo
out
jbe
jl
mov
xchg
test
lahf
cmpsb
or
push
subl
pop
xor
adc
movsl
clc
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
xchg
punpckhdq
adc
decb
adc
jno
sbb
jge
jno
jno
sbbl
sbb
jle
cmp
int3
jl
and
loope
adc
push
pop
cmpsl
adc
insb
fdivr
nop
inc
ljmp
pop
inc
xor
push
out
sub
sub
int3
popa
stos
nop
cmp
pusha
adc
or
cld
inc
fcomps
cmp
fstl
ret
pop
mov
mov
push
rcrl
pusha
pop
repnz
cld
or
addr16
test
jp
out
cli
and
jns
into
faddl
mov
popf
je
jecxz
dec
xor
and
enter
leave
cmp
std
pop
pop
pop
pop
cld
jge
popf
pop
inc
and
stos
mov
bound
popf
fstpt
addb
jnp
pushf
mov
jns
jbe
dec
mov
pusha
jmp
and
leave
mov
js
add
in
lret
gs
push
popf
movsb
mov
inc
and
mov
subl
cli
orb
ss
xor
idivl
scas
das
inc
push
lds
mov
push
out
cltd
int3
jbe
jge
fwait
jo
jg
test
adc
mov
or
mov
lods
sbb
mov
mov
rcll
inc
xlat
and
lret
xor
inc
mov
cmp
lea
stc
addl
imul
mov
imul
sub
or
aas
test
out
mov
test
cld
xor
ret
fwait
adc
repz
cmp
xor
fdivr
push
iret
cmc
pushf
into
jno
mov
mov
jb
negl
out
insl
popf
in
or
icebp
sti
inc
jb
add
mov
xchg
adc
sahf
pop
and
andb
pusha
and
and
shl
fwait
jp
adc
arpl
mov
sbb
mov
adc
cmpsb
mov
dec
addps
mov
jge
push
outsb
sub
xor
sbb
int3
icebp
dec
cld
dec
fisttps
out
pop
mov
adc
sub
add
cmp
pop
xchg
stc
xchg
xor
xlat
push
test
jge
dec
dec
fwait
test
mov
sub
mov
test
je
inc
sub
cmp
cwtl
or
pop
dec
cmp
movl
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
rcrb
adc
movlps
or
divl
enter
call
push
dec
cmpsb
mov
xchg
lods
test
std
test
jg
jge
push
into
clc
enter
sbb
inc
aas
in
mov
leave
test
mov
xchg
mov
imul
mov
in
sahf
lods
nop
add
fdivl
test
cmc
loop
hlt
inc
inc
add
or
push
xchg
movsb
adc
repz
push
loope
scas
inc
dec
jmp
sbb
mov
insb
inc
mov
aad
int3
clc
adc
loope
jns
adc
xchg
pusha
bnd
jo
bound
mov
shrl
inc
pop
ret
fiaddl
adc
push
pop
lcall
ss
cmp
pop
mov
ss
cmpsl
adc
inc
jno
sbbb
add
fdivs
dec
mul
dec
jbe
mov
push
mov
jl
xor
jecxz
jae
mov
adc
setns
and
inc
mov
mov
adc
jge
lret
jae
arpl
or
inc
mov
mov
out
inc
lret
loop
stos
xchg
adc
xor
xchg
xchg
cmc
sub
jle
sbb
sahf
jg
fildll
pop
add
adc
das
sbb
cld
repz
movsl
das
xor
in
sbb
lods
push
clc
in
lahf
jle
pop
xor
nop
into
sub
das
mov
call
fidivrl
subb
movsb
mov
jecxz
ds
inc
push
sbb
xchg
xorl
insl
xchg
ret
and
orb
sbb
sub
rclb
stos
cld
cmp
xlat
mov
mov
push
mov
sub
daa
and
dec
ds
push
jecxz
inc
sub
repz
jl
inc
mov
pop
or
push
cmp
inc
in
popa
inc
add
adc
cmp
mov
idivb
call
loop
inc
mov
push
pop
mov
movsb
test
idivl
add
mov
and
adc
pop
jo
jge
int
mov
mov
fbstp
xchg
dec
insl
fs
mov
shrb
cmpsb
imulb
push
repz
les
lret
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
cmp
adc
movlps
adcl
popf
add
lea
xchg
int
enter
push
ret
orl
insb
inc
fisttps
lods
scas
adc
jg
adc
and
mov
cwtl
repnz
mov
aam
lret
out
enter
mov
adc
sub
nop
pushf
lcall
mov
sbb
push
cwtl
mov
or
xchg
jae
cmp
push
push
adc
fwait
jne
loopne
ja
pop
xor
jae
ss
arpl
sub
mov
imul
jl
and
lock
lret
jmp
sub
mov
xlat
test
jb
cmpsl
mov
test
inc
mov
push
xor
ret
jno
clc
ds
pushf
xchg
jno
cli
call
adc
and
mov
outsl
cwtl
and
jno
mov
or
adc
sbb
mov
enter
lods
push
pop
or
dec
mov
mov
push
jp
cltd
jmp
jp
sbb
jp
flds
adc
mov
sbb
add
fisubrs
jecxz
sahf
ds
ror
lret
xchg
roll
js
test
mov
imul
add
jns
cmc
mov
dec
call
sub
les
lods
imul
mov
outsl
in
dec
xorl
mov
icebp
out
out
sbb
sub
add
addr16
ret
rcll
xchg
cltd
sahf
sub
mov
je
nop
loop
andl
mov
icebp
stc
push
add
dec
in
popa
push
or
test
xchg
xor
sahf
out
jns
jmp
lahf
gs
sti
mov
inc
jae
xor
repz
insl
sbb
push
aam
pop
shlb
cwtl
mov
or
negl
push
popa
push
std
add
jne
pop
cli
push
orl
sarl
pop
sbb
orb
lea
daa
lret
aad
sbb
in
in
sbb
mov
pop
mov
lcall
cltd
sub
mov
xchg
pop
pop
decl
mov
xlat
push
xchg
cmpb
es
sub
pop
in
lret
fidivl
pop
rcl
mov
in
inc
add
loop
aas
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
pushf
adc
ja
adc
movlps
and
daa
sbb
xor
jb
push
lret
push
rolb
mov
int
repnz
xchg
cmpsb
mov
fstp
adc
bound
jnp
out
not
sub
pop
mov
test
inc
jns
call
enter
or
lea
push
mov
push
inc
fistpl
dec
in
xor
xchg
dec
mov
adcb
clc
cmp
and
loope
push
push
add
fdivp
pop
subl
jmp
dec
adc
je
adc
or
cs
sbb
cmp
scas
icebp
sub
add
aaa
mov
pushf
daa
enter
lds
leave
scas
stos
sub
push
sub
and
mov
fisttpll
adc
xchg
mulb
pop
adc
push
pop
mov
adc
cli
lret
adc
or
outsl
sub
jb
dec
lahf
mov
sti
addr16
imul
daa
shll
or
mov
xlat
stos
adc
int
dec
push
ljmp
gs
inc
idivl
add
test
inc
arpl
fistps
pop
aaa
adc
in
push
jge
and
popf
cwtl
xchg
rcl
mov
add
das
push
jge
mov
int
dec
lret
mov
movsb
stos
jg
mov
repnz
leave
push
mov
pop
ds
xchg
scas
rcrb
and
inc
sahf
ds
and
jge
mov
cmpsb
mov
pop
dec
jbe
sub
lock
push
adc
sub
xor
fsub
adc
adc
sbb
jnp
xor
into
outsl
repz
inc
ficomps
addr16
mov
pop
push
push
es
push
fwait
xor
negl
pop
lea
jg
sub
sbbb
cmp
push
pop
and
jp
push
pushf
es
popf
sarb
inc
pop
jmp
sbb
js
xor
inc
stos
dec
inc
xchg
insl
pop
clc
pushf
xchg
out
in
mov
mov
mov
mov
orb
ja
sub
jb
stos
pop
and
push
jl
arpl
push
cmp
mov
xchg
call
aam
movsb
testl
jns
aad
test
scas
rcrl
cltd
bound
cmp
loope
call
mov
jmp
js
cmc
repz
sub
and
lods
insb
loop
adc
decb
adc
xor
mov
inc
or
cmc
cmp
movsl
xchg
xor
cmp
push
push
add
cwtl
test
mov
xchg
xor
mov
shl
repnz
sub
arpl
in
int3
or
popa
dec
inc
push
and
rolb
in
cs
pop
fldl
push
imul
add
xchg
and
cmpsb
rcrb
inc
fdivrl
roll
mov
ja
outsb
aad
shll
lock
pop
out
sbb
popa
popf
and
lahf
adc
fwait
sub
lahf
scas
lods
push
cmp
popa
jae
dec
or
in
aad
jle
add
adc
int3
mov
jmp
push
movsb
idiv
dec
pusha
clc
jmp
push
in
jg
inc
push
xchg
popa
stos
inc
push
repnz
adc
shlb
mov
adc
pop
jbe
in
pop
xor
scas
stc
hlt
jbe
stos
sub
mov
push
ret
lods
mov
fstpl
sub
jp
jns
push
stos
xchg
movsb
and
pop
push
jecxz
pop
cmpb
pop
mov
mov
pushf
adc
sbb
insl
xor
ljmp
lods
mov
cmpsl
adc
dec
enter
push
push
dec
jecxz
insb
cmpsb
insb
jle
bound
pop
fwait
cmc
sbbb
sbb
or
std
push
mov
fnsave
dec
xchg
stc
mov
jb
xchg
das
xchg
pop
xchg
dec
inc
mov
nop
mov
adc
aam
outsb
push
cld
inc
jb
fbld
inc
test
mov
movsb
add
inc
fcmovnbe
adc
repz
sbb
ds
cmp
cltd
lret
in
dec
xchg
and
or
push
push
jns
pushf
insb
cmp
stc
xchg
nop
pop
scas
shl
cmp
xchg
xchg
call
dec
add
cmp
nop
in
inc
pop
pop
and
lcall
shrb
cld
pop
add
fwait
sbb
mov
scas
inc
out
xor
pop
leave
dec
xchg
cmp
sbb
jl
out
inc
js
std
das
jmp
sub
dec
xchg
jb
loop
flds
lret
fdivr
inc
xchg
shl
cltd
insb
mov
inc
pushf
fldl
xor
loop
and
stc
scas
push
adc
filds
test
push
ljmp
aas
mov
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
insb
ret
jno
adc
movlps
stc
xchg
nop
xor
xor
movsl
hlt
aas
lret
cli
push
xchg
dec
and
jb
fs
jo
sbb
loop
sub
out
jb
push
into
fistl
imul
call
pop
xor
mov
cmpsl
pop
mov
sbb
rolb
inc
test
test
mov
add
pushf
sub
cmpps
and
aas
adc
pop
out
dec
mov
adc
add
repnz
dec
and
leave
mov
sub
dec
adc
mov
stc
add
cmp
out
push
sub
fmul
movsb
mov
adc
pop
xchg
sbb
jbe
rorb
or
push
pusha
insb
pop
pop
xor
mov
mov
add
pop
jne
loopne
in
pop
push
addr16
ss
out
and
sub
in
fisubrl
xchg
sti
mov
mov
sub
jmp
lods
adc
aaa
mov
and
and
dec
cmc
jecxz
add
les
adc
in
pop
ret
cmp
test
xchg
orb
push
clc
arpl
mov
std
xchg
aad
aad
adc
hlt
cmp
pop
leave
ds
xor
mov
jno
cmc
es
pop
aam
xor
inc
dec
out
leave
inc
cmp
aam
add
mov
adc
sub
adc
ror
sub
and
pusha
sbbl
insb
out
cmp
cmpb
cli
andl
dec
outsl
jp
cmc
lret
jmp
cmp
sub
loopne
dec
loopne
cmp
sub
lods
out
jo
sbb
out
scas
adc
pushf
pop
xchg
or
sar
jae
dec
pushf
ljmp
ror
mov
sbb
notl
insb
pop
out
xchg
mov
fcomps
ljmp
sbb
mov
pop
aaa
sbb
mov
das
scas
fwait
jbe
cmp
jb
push
adc
xchg
lea
sub
clc
jne
inc
lret
cmpsb
aam
int3
out
jecxz
outsl
int
mov
mov
insb
mov
cmpsb
lds
sbb
aam
shll
scas
sti
dec
sti
lock
lea
or
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
cmpl
adc
scas
mov
mov
insl
and
jp
cmp
mov
jbe
aaa
andb
andl
mov
cwtl
pushf
inc
cld
xor
insl
mov
jbe
pusha
popf
and
pop
fistpll
xorl
jnp
pop
aas
int3
inc
movb
add
push
js
dec
sbb
xlat
insl
sub
sub
push
test
fistps
mov
bound
jne
inc
mov
and
sbb
jo
fdivrl
or
loop
ja
xchg
aaa
jl
mul
add
inc
jle
inc
stc
dec
ret
add
je
cmpsl
push
js
jmp
sub
and
mov
in
mov
clc
dec
pop
notl
pop
sub
jb
jno
mov
out
lret
repz
leave
xor
xchg
push
enter
pop
mov
inc
das
dec
xchg
inc
aaa
shl
loope
mov
xlat
es
out
or
aaa
mov
stos
sub
and
cmp
nop
push
push
xchg
stos
mov
icebp
orb
xchg
or
scas
js
call
insl
adc
fwait
mov
sub
inc
dec
and
adc
into
xchg
pusha
xor
mov
sbb
or
fwait
into
fimull
lods
sarl
repnz
sub
std
sbb
xor
and
mov
adcb
push
or
jns
es
popa
outsl
or
and
jmp
cs
or
xor
popa
repnz
and
sub
push
xorb
rcl
aaa
push
push
and
loop
aad
add
and
int
push
gs
in
int3
or
lret
punpckldq
add
sbb
jne
enter
ss
xchg
fisttps
add
cwtl
push
or
cwtl
xchg
repz
ja
imul
orl
stc
mov
inc
mov
xlat
sbb
loop
outsb
lods
jo
or
sub
mov
jle
lods
xor
sbbb
mov
out
arpl
xorl
es
adc
mov
faddl
out
in
scas
gs
or
inc
aaa
mov
arpl
jns
insb
in
das
mov
xor
inc
add
in
cmp
jae,pt
lock
fmul
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
pop
push
lods
arpl
adc
movlps
dec
xchg
adc
lds
xor
or
jmp
stc
daa
push
repz
rol
fwait
out
icebp
sub
push
rolb
into
movsl
in
scas
aam
xchg
mov
jno
movsb
lcall
mov
xchg
addr16
clc
push
into
xchg
xor
sbb
mov
or
lahf
xor
mov
cltd
arpl
fcoms
push
ljmp
lahf
in
cmp
setne
leave
cmpl
mov
sarb
jg
pop
adc
fstps
fucom
shl
xchg
lahf
jmp
cmp
out
loope
scas
shl
inc
pop
and
mov
outsb
push
xor
testb
imul
mov
cmpsb
mov
xor
mov
inc
mov
sub
imul
jecxz
inc
frstor
mov
fmuls
mov
jge
inc
test
int3
iret
int3
hlt
and
inc
stos
bound
daa
xlat
sbb
sub
xchg
js
xchg
xchg
push
cmpsl
xchg
mov
inc
and
dec
xor
imul
cmpsl
ljmp
jg
xchg
mov
xchg
adc
rcr
imul
pop
mov
dec
clc
cmpl
movsl
jp
and
hlt
cmc
lahf
push
xor
je
out
inc
mov
aam
ljmp
fdiv
xor
or
adc
inc
adc
sub
and
mov
adc
xor
mov
mov
lods
mov
fsubr
inc
pop
push
pop
jb
divl
int3
mov
scas
insb
dec
inc
jbe
jecxz
and
fnstsw
lss
xchg
dec
pop
xchg
inc
cmpsl
cmpb
gs
sub
push
xchg
call
data16
int3
or
add
and
and
loop
mov
loop
xor
enter
jl
popa
mov
push
fidivrl
sub
loopne
decl
dec
mov
mov
rcrb
stos
xchg
lcall
and
bound
loope
or
lds
pop
imul
out
push
fwait
push
sbb
pop
int
stc
data16
cld
lret
xchg
push
xchg
adc
ficoms
incl
popf
daa
andl
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
jge
push
popa
adc
decb
adc
loop
cmc
pop
jmp
xchg
jge
leave
xor
ss
and
pop
push
cmp
fsubs
test
or
mov
mov
insl
popf
adc
stos
inc
fnstenv
lahf
lods
pop
mov
xor
lcall
sub
out
hlt
mov
in
sub
xchg
cmc
push
lcall
jnp
jecxz
lock
popa
push
ja
jnp
fmulp
ja
inc
das
xor
popf
es
jmp
repz
repnz
push
fwait
in
mov
inc
push
call
cmc
mov
jns
mov
mov
xchg
cmp
outsb
enter
lods
and
jmp
sbb
scas
mov
ret
cmp
int
addr16
leave
ffreep
push
cs
inc
addl
push
mov
lods
xchg
xlat
roll
std
mov
arpl
in
push
pop
xor
push
cwtl
orl
inc
dec
iret
jl
movsb
push
inc
icebp
jno
mov
daa
cmpsl
xchg
adc
xchg
stos
pop
test
xchg
fdivl
dec
cmpsl
lea
jnp
loope
cld
adc
sub
fildl
in
fisubrs
out
sub
mov
inc
jo
out
rclb
fcmovb
movsl
imul
dec
jo
add
enter
mov
ret
leave
test
or
int
mov
and
pushf
jns
repz
mov
js
sub
outsb
inc
lods
sbb
sbb
in
xor
lret
jo
cwtl
iret
jb
hlt
mov
scas
and
push
or
sub
pop
sub
cld
nop
xor
mov
xchg
xchg
inc
cmp
es
mov
pop
imul
rclb
xchg
rcrb
rorl
mov
push
mov
mov
pushf
jp
cmp
sbb
movsb
stc
dec
and
or
push
scas
inc
or
roll
mov
adc
and
xor
xchg
cmp
xchg
ret
sbb
scas
icebp
std
lret
and
jmp
dec
add
pop
fisttpll
das
adc
mov
out
test
jb
push
xor
mov
cmp
xchg
xor
fwait
xlat
adc
cmp
call
sbb
ficompl
inc
insl
fsubs
xor
test
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
mov
decb
adc
das
or
dec
jecxz
std
mov
popf
push
addr16
imul
daa
popf
push
ja
xchg
add
jle
inc
mov
test
dec
dec
sbb
jns
lahf
push
fldcw
popa
push
movsl
mov
imul
push
adc
out
sub
popa
out
mov
outsb
dec
xorl
pop
cmp
pop
ljmp
enter
out
jle
or
dec
jge
loop
loop
jmp
cmp
ss
sbb
idivl
and
sbb
jbe
std
jmp
add
ret
leave
xlat
inc
lods
into
add
stc
jno
leave
gs
into
mov
mov
fs
arpl
in
iret
jne
pop
cli
sbb
aam
loope
arpl
ljmp
movsl
cld
and
push
add
mov
inc
or
mov
sti
out
sbb
cmp
sub
leave
test
sub
or
or
sbb
sti
mov
call
shlb
jge
xchg
aaa
and
imul
pushf
push
leave
or
pop
or
icebp
sbb
or
mov
adc
jno
sub
stc
fdivrs
mov
movsl
mov
dec
push
push
sbb
fwait
pavgw
inc
cmp
lret
xchg
js
imul
movsl
adc
sahf
dec
mov
adc
cld
xchg
push
add
je
jbe
dec
add
repz
rep
xlat
outsb
fwait
lds
or
sub
pop
xlat
gs
in
jno
pmuludq
loopne
rorl
mov
lock
jmp
dec
aad
aam
sahf
pusha
inc
ds
daa
fisttpl
lahf
mov
push
cmc
and
pusha
push
jp
or
xor
es
push
push
cmp
inc
js
mov
xchg
outsl
cmp
sub
jnp
jae
jg,pt
out
or
mov
sub
call
outsl
rorl
push
mov
lock
jbe
xlat
test
xchg
dec
or
in
pextrw
out
loope
sbb
aam
xchg
nop
cmpsl
je
scas
push
iret
cmpsl
mov
jae
cwtl
imul
and
in
jg
movd
jb
inc
add
mov
sbb
sbb
add
pop
decl
shr
add
add
bt
cmp
pop
scas
sub
inc
push
adc
decb
adc
dec
push
out
bound
sti
fistpll
inc
mov
sbb
mov
sub
xchg
sub
lret
shrb
mov
mov
ds
lea
mov
in
jo
dec
sbb
jnp
ret
jge
xlat
addb
mov
popa
test
ficompl
lret
jb
or
out
xchg
out
roll
rcll
dec
aas
push
lock
cmovo
mov
or
cmpsl
or
add
sbb
fists
out
cld
and
mov
or
mov
jmp
sbb
mov
sbb
mov
jl
dec
jmp
push
or
mov
js
ss
mov
jg
push
std
and
push
data16
popa
sub
faddl
lds
mov
jo
aas
ss
and
dec
push
inc
push
jbe
call
ss
mov
nop
push
aaa
dec
jb
lds
arpl
mov
mov
and
int
jmp
dec
scas
dec
rorl
pop
es
icebp
push
push
cld
push
push
mov
sub
jne
inc
inc
cmp
rcr
inc
mov
mov
sub
adc
aaa
lds
dec
out
jo
inc
inc
mov
adc
sbb
cmp
push
clc
xchg
pushl
xor
loopne
dec
sub
jmp
xchg
fistps
lock
push
jnp
insb
add
cmp
cmp
xchg
das
cli
test
mov
jno
lahf
repz
and
aas
push
inc
clc
mov
pop
xor
andb
xchg
cmc
out
add
xchg
mov
cmpsb
pop
and
fstpt
pop
pop
ja
ret
add
iret
mov
push
mov
cld
addl
stos
mov
add
adc
mov
movsl
pop
push
roll
scas
fmull
paddq
xchg
ds
inc
mov
fs
hlt
pop
xchg
data16
push
and
xchg
xor
scas
lret
in
ret
notl
int
mov
lock
xor
cli
mov
and
or
dec
fimuls
sbb
fs
mov
jo
rol
loop
mov
imul
js
sub
sarl
xchg
and
arpl
mov
cli
decl
test
inc
or
enter
add
or
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
or
push
dec
adc
decb
adc
or
sub
fisttpll
aam
jge
call
outsl
xor
add
mov
decl
out
aad
test
sar
testb
mov
xchg
xor
lret
dec
mov
pusha
std
fs
push
xorb
out
cmp
addl
test
cmp
rcll
inc
test
jle
mov
mov
mov
movsl
mov
stos
jb
lcall
orb
call
sbbl
jmp
aad
xorl
in
outsl
in
cmp
cmp
xchg
and
add
cld
and
mov
and
fiadds
jecxz
rep
xor
pop
mov
jp
lods
cs
out
ja
data16
les
fcomps
sbb
cmp
lret
push
xchg
icebp
sbb
add
hlt
hlt
jb
mov
test
xchg
adc
shl
out
cmp
jecxz
xchg
sub
mov
lea
and
popf
push
mov
or
out
jp
ja
xchg
cltd
jl
movsl
pop
out
sbb
dec
xchg
insb
push
lds
xchg
into
push
dec
loopne
in
enter
sub
mov
pop
sbb
xchg
andb
adc
add
cmp
filds
outsb
pop
das
std
mov
pop
aam
loope
shll
adc
xor
fxch
xchg
xor
mov
cltd
jo
lods
push
loope
pop
adc
xchg
mov
inc
pop
pusha
subl
test
add
xchg
mov
push
mulb
fiaddl
js
cld
cmp
mov
or
xchg
cwtl
sbb
cmp
into
mov
in
icebp
push
imul
or
push
pop
ficomps
pop
rcll
out
push
dec
inc
mov
lea
adc
mov
and
cmp
pop
xchg
xchg
jg
sub
push
jb
popf
sar
pop
inc
insl
pop
push
jne
mov
adc
sub
pop
ss
jns
stos
cld
and
scas
pop
or
xchg
sbb
mov
imul
lods
cmp
xor
lcall
iret
arpl
out
xor
sbb
inc
cs
push
das
mov
and
mull
dec
inc
mov
sbb
mov
cld
cld
sti
mov
adc
jp
in
jle
jg
sbbb
inc
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
adc
adc
adc
movlps
pop
test
sahf
sahf
or
outsb
mov
mov
arpl
adc
jae
pop
aad
xchg
mov
add
int
pop
inc
cmpsl
addl
or
inc
jb
push
rol
cmp
loope
testb
mov
test
mov
cmp
jns
lahf
ds
aam
mov
pop
es
outsb
popa
or
xchg
outsl
repz
ja
jg
push
pop
fbstp
add
scas
push
es
push
mov
rolb
jmp
aaa
dec
push
sub
mov
inc
lock
mov
stc
sahf
int3
pop
cli
dec
and
fwait
dec
stc
or
cmp
rcl
pop
lods
inc
in
jmp
and
xchg
and
shlb
dec
dec
cmp
inc
negl
lcall
mov
aad
cmc
enter
jne
ret
imul
repz
adcb
xchg
inc
jbe
inc
cwtl
mov
and
mov
mov
aam
rclb
mov
push
rorb
xchg
xchg
mov
push
mov
repz
lret
repnz
xor
push
pop
add
sarl
push
lret
addr16
iret
jo
cld
pop
push
jmp
je
inc
mov
xchg
dec
sti
aad
jmp
dec
mov
inc
in
xor
js
sti
cltd
pushf
xlat
and
imul
lahf
add
mov
and
popa
xchg
xchg
and
fsubl
lcall
scas
aam
jecxz
or
sub
lods
outsl
test
add
inc
xchg
pop
cwtl
mov
mov
xor
push
xchg
repz
data16
lret
dec
orl
jns
mov
lcall
add
xchg
add
fcoml
aaa
in
arpl
enter
adc
dec
or
jnp
jecxz
pop
mov
movsb
add
lock
aad
mov
and
incl
push
or
aas
dec
cmp
pop
lea
sbb
es
rdtsc
pop
fcomi
arpl
jge
outsl
sub
cmc
xor
sbb
mov
add
call
repnz
loope
ljmpw
fsubl
call
dec
es
push
sarl
scas
xor
or
adc
or
popf
inc
pop
pop
sahf
xor
test
out
xor
or
add
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
push
dec
push
push
insb
push
hlt
xchg
inc
push
sbb
adc
cmp
adc
inc
adc
sub
lds
fcoms
xor
cli
xor
loopne
sbb
in
push
sti
outsb
inc
push
loope
mov
hlt
or
aad
or
inc
pop
cbtw
jp
cltd
mov
fs
and
imul
mov
repz
aad
xchg
jbe
inc
sbb
push
mov
push
xchg
iret
lahf
dec
xchg
dec
or
std
std
jp
lret
and
shll
sbb
in
mov
popa
xchg
xlat
je
rcrl
fsubrs
mov
push
popf
icebp
sub
add
xchg
pop
ljmp
ja
clc
mul
test
sub
dec
xchg
jae
push
rcl
xor
inc
cmc
stc
xchg
xchg
nop
mov
iret
push
lret
cli
inc
outsl
xlat
cs
add
inc
mov
xchg
xor
adc
nop
rorl
adc
stos
mov
sub
arpl
cs
dec
hlt
dec
es
subl
add
sub
iret
cmp
jle
std
mov
lret
test
ss
hlt
xlat
push
sbb
test
mov
daa
loop
cwtl
add
dec
dec
mov
testb
jecxz
push
inc
inc
rclb
out
fs
mov
cmp
jo
or
aad
aam
sub
lret
std
in
ss
popf
add
cmpsl
mov
xor
cmp
mov
xchg
out
pop
lahf
and
push
ja
and
fadds
inc
aaa
add
sbb
inc
xchg
pop
mov
fnstsw
ds
push
gs
movsl
dec
sbb
in
adc
xor
and
xor
mov
jp
aad
jnp
subl
cmpsb
fwait
mov
mov
mov
repz
lret
lds
mov
frstor
fs
add
add
sub
enter
js
or
rcrb
xlat
adc
cmp
or
jbe
je
inc
pop
pusha
jmp
xchg
or
rol
movsl
hlt
imul
push
lock
cmpb
cmpb
scas
and
xlat
ds
imul
adc
push
insb
mov
mov
jmp
inc
adc
pushf
dec
add
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
stc
gs
sbb
inc
repnz
sub
mov
sti
inc
push
out
mov
mov
ja
lods
mov
js
xchg
or
xchg
adc
or
push
mov
jmp
rorl
jmp
mov
and
dec
clc
out
nop
jg
xchg
aaa
add
push
loopne
lds
inc
xlat
repnz
push
or
scas
jp
cmpsb
pop
adc
shl
xchg
jmp
pop
repz
or
or
shl
lds
cs
scas
jo
ljmp
leave
sub
sub
dec
mov
pusha
inc
pop
inc
out
xchg
pushf
dec
sub
test
jmp
stos
inc
inc
cltd
movsl
jo
iret
mov
jg
fdivrs
decl
out
fsubs
or
or
sub
xchg
stc
sbb
lahf
out
cmp
xor
nop
adc
inc
aaa
or
cmpsb
jns
std
adc
insb
popa
aas
ret
hlt
mov
xor
pop
adc
xor
inc
mov
loop
push
out
inc
and
fst
push
xor
inc
xor
add
in
div
push
and
mov
int3
push
sahf
pop
sub
insb
mov
pop
sahf
xchg
add
xchg
pushf
inc
ss
out
test
das
add
jg
lock
aad
outsl
and
stc
cmp
adc
cmpsb
aad
cmpsl
cmp
and
sub
lret
data16
adc
xor
and
je
pop
cltd
lret
fcom
mov
pop
out
test
out
push
jl
xchg
dec
or
pushf
jnp
ror
sbb
sub
xor
xchg
push
push
and
cmp
pusha
mov
mov
cmp
inc
jno
pop
mov
push
jge
jge
cs
daa
out
adc
mov
dec
add
jnp
inc
lock
in
cld
sub
sbb
bound
test
adc
mov
std
inc
int
cmp
aaa
cmc
jno
adc
jp
inc
fwait
sbb
cld
jae
push
fsts
outsl
cld
jle
test
nop
dec
in
pop
xchg
cmp
cwtl
adc
xor
insl
sub
rorl
push
sti
cld
in
inc
shr
push
inc
fwait
dec
pop
leave
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
or
adc
popf
movlps
or
xchg
inc
push
and
nop
jle
lret
call
movsl
mov
lahf
xchg
jle
icebp
sbbb
popa
cmpsl
jno
cmp
cli
xchg
adc
out
mov
je
push
cmpsb
pushf
insb
push
cmpsb
push
fistps
hlt
fidivl
mov
dec
rorl
push
xor
pushf
pusha
dec
int3
inc
popa
je
out
out
stc
leave
xorb
inc
adc
aad
icebp
cmp
pop
mov
dec
adc
stos
idivl
xchg
incb
jo
sar
adc
arpl
into
jo
dec
sbb
out
cmp
aas
out
jge
mov
mov
jo
push
pop
fimull
shl
js
sbb
shl
sbb
xlat
jns
gs
xor
xchg
pop
mov
sti
jg
cmpsl
enter
inc
xchg
iret
test
xchg
sar
push
adc
and
and
arpl
mov
dec
xor
push
cs
daa
jae
sub
sbb
pusha
in
mov
es
cmp
sbb
stos
stos
clc
xor
sub
outsb
sub
lret
ja
out
and
add
pop
fcom
daa
mov
jp
sbb
test
mov
mov
mov
fisttps
es
and
cltd
test
push
sbb
jg
ds
std
in
pop
inc
fwait
insb
stos
xor
cmp
inc
cmp
dec
jnp
push
negb
cmp
inc
out
jp
pop
or
testl
fimuls
scas
out
or
mov
xchg
inc
jmp
and
test
loop
xor
xor
sub
xlat
in
mov
daa
adc
fistl
push
sbb
and
dec
pop
pop
inc
mov
ds
pop
or
mov
outsb
mov
cmp
jecxz
adc
into
icebp
and
jg
orb
fdivrs
test
in
mov
pop
lods
push
xlat
aam
stc
test
pop
xor
lahf
cmp
repz
mov
mov
cmp
adc
mov
xchg
fsubrs
vfmsubadd231pd
mov
and
in
jp
add
adc
inc
insl
inc
mov
push
repz
lods
xchg
addr16
jns
adc
leave
popa
pop
cwtl
cmpsb
mov
inc
std
mov
pop
sub
jp
addr16
jnp
lods
inc
dec
mov
xor
sbb
xchg
xchg
mov
dec
mov
loopne
shlb
imul
and
pop
inc
mov
lahf
div
mov
xor
mov
jmp
xchg
add
and
xchg
and
sub
dec
pop
lods
dec
cmp
adc
add
xor
lcall
sbb
sbb
sub
leave
lret
jne
add
pop
in
and
adc
inc
mov
adc
arpl
and
mov
ret
xchg
ja
negl
pop
push
push
jp,pn
jo
jnp
adc
xchg
ss
push
jge
adc
xor
inc
add
dec
jo
mov
inc
cmp
jae
xor
push
fwait
popf
mov
popf
and
jo
sti
int3
js
lds
jle
push
xchg
bound
or
int3
mov
fcomip
outsl
mov
fwait
shll
fsubrs
bound
jno
adc
jo
cwtl
jbe
jo
ret
test
or
and
daa
xor
mov
mov
inc
sbb
mov
xchg
movsl
sahf
sbb
test
mov
xor
notl
ss
sbb
xlat
and
xor
rol
mov
and
and
lods
xchg
popa
lret
jns
call
inc
cli
mov
and
and
dec
setne
adcb
add
mov
and
mov
loope
push
rorb
pop
mov
sbb
adc
enter
addl
arpl
cmp
pop
pop
mov
cvtps2pd
sub
popa
dec
cmp
fldcw
sbb
popf
lret
cmpl
push
mov
sbbb
mov
mov
addb
outsl
imul
aaa
add
ljmp
mov
roll
mov
cmp
lret
jp
lcall
xchg
jl
xor
cmpsl
mov
ret
pop
lcall
cmp
pop
dec
or
push
popa
or
stc
dec
andl
sub
lahf
imul
adc
lods
sbb
dec
ja
popf
inc
stos
xchg
ss
jecxz
and
aas
insl
jnp
test
mov
ret
jge
push
lods
clc
data16
jl
in
jne
fwait
cmp
cmp
push
jl
sbb
pusha
push
sbb
cmp
mov
dec
jp
cs
sti
cld
dec
ja
lret
mov
js
sbb
call
out
xchg
cmp
sahf
inc
js
adcl
jp
lds
adc
je
inc
jecxz
mov
xor
xchg
enter
pop
cmpxchg
and
stc
enter
fistps
stos
push
cld
movl
or
and
icebp
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
fs
push
das
adc
popf
movlps
sbb
sbb
cmp
inc
lcall
fcom
xchg
movsl
std
jbe
or
adc
popa
add
addr16
jbe
jge
fstp
sub
xchg
cwtl
idiv
jp
enter
or
or
cmp
outsl
inc
addl
push
pop
lods
mov
and
shrl
inc
mov
mov
inc
dec
cs
sub
mov
dec
mov
xor
push
pop
push
jg
aam
stos
dec
xor
sub
or
and
pop
pop
push
add
cmp
popa
add
mov
pop
addb
jbe
gs
je
test
mov
inc
das
adc
lds
mov
add
hlt
mov
aas
mov
js
xchg
jbe
fiadds
lret
dec
enter
cmp
dec
mov
xlat
std
or
mov
mov
sub
push
fbstp
loopne
and
in
loopne
lahf
out
adc
inc
add
xor
ds
sbb
mov
mov
or
popa
jl
sub
pop
add
dec
push
fidivrl
pop
fs
mov
sub
gs
jmp
fmuls
pop
jns
mov
loopne
jecxz
xchg
stos
ss
orl
mov
adc
daa
insb
sbb
push
rcr
insl
and
and
popf
addl
cmp
push
insb
sub
and
adc
clc
pusha
mov
inc
lods
fsubp
push
and
mov
in
cmp
cmp
in
fsubl
in
mov
scas
mov
imul
mov
push
dec
das
mov
fiadds
mov
push
fsubrl
inc
mov
call
jno
push
in
pop
in
mov
jnp
add
sbb
mov
inc
cmp
incb
or
aaa
pushf
push
dec
xchg
or
sti
sbb
adc
fcomi
xchg
leave
and
out
mov
mov
xlat
test
adc
loopne
push
jns
and
pop
fidivrl
mov
xchg
adc
or
mov
pusha
cmp
call
pop
push
xchg
sub
inc
sbb
xchg
push
ja
xor
test
xchg
mov
scas
insl
hlt
jo
mov
cmp
mov
adc
pushf
cmc
jge
dec
jnp
shlb
stc
les
xor
sub
pusha
pop
xchg
xor
cltd
int3
andb
jecxz
inc
adc
xchg
dec
mov
xor
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
lahf
inc
add
scas
push
dec
mov
sub
sub
jmp
pop
fmul
or
add
pusha
sub
daa
dec
and
fists
movsb
mov
inc
jne
cmp
out
out
add
test
fs
xchg
sub
popf
ljmp
and
incb
mov
daa
mov
ss
into
cld
pop
mov
mov
mov
mov
js
xchg
cmp
lret
or
push
xor
aad
outsl
lds
nop
adc
fstps
sub
mov
ljmp
push
int
inc
stc
imul
add
jo
lea
mov
pop
jno
aas
mov
mov
cli
push
mov
dec
movb
adc
cltd
aad
mov
fidivs
mov
pop
insl
ret
pushf
movsb
cs
cli
pop
insb
imul
gs
adc
fs
lds
fdivs
jg
stos
mov
out
in
adc
xchg
je
xchg
xor
test
int3
imul
sbb
dec
pop
stos
lds
adc
dec
xor
insb
aam
fsts
push
jb
mov
or
sub
dec
test
fildll
imul
or
dec
jae
mov
mov
sbb
sbb
push
sets
pop
mov
imul
or
rorl
test
stc
cmc
sub
inc
imul
jle
loopne
push
scas
cmp
add
popf
and
outsl
pop
dec
into
loop
push
je
cmc
cs
dec
jae
jnp
dec
jae
sbb
sbb
mov
outsb
cvtps2pi
imul
xlat
and
mov
popf
aad
jae
ja
das
icebp
stos
xlat
lock
mov
mov
mov
js
jbe
pop
xor
push
and
pop
add
imul
push
push
movsl
mov
cmp
je
and
ja
cmpsl
pop
rclb
xchg
cwtl
jp
mov
mov
movsl
pop
xchg
shlb
push
dec
xchg
es
mov
jge
test
and
xchg
jo
imul
jns
fsub
pusha
add
out
xchg
in
in
add
jg
dec
inc
mov
jb
lods
push
sti
mov
sbb
or
cmp
push
and
das
fdivs
xchg
sbb
pop
sub
popa
push
scas
or
ds
jecxz
jnp
gs
adc
push
cmp
arpl
cs
hlt
mov
je
das
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
divl
sub
or
xor
loope
scas
xchg
sub
callw
xor
mov
imul
mov
js
std
scas
popa
cmp
hlt
data16
mov
cli
mov
add
addr16
or
pop
add
hlt
jecxz
sarl
je
imul
cmp
stos
add
es
fsts
dec
adc
call
jp
jne
lods
idivb
subl
rcrb
divb
dec
and
orl
lods
stos
or
sub
sbb
dec
jns
push
pop
sbb
push
shll
mov
mov
or
add
inc
shlb
mov
mov
xchg
insb
out
outsl
push
imul
scas
call
or
pop
push
es
inc
jno
adc
xor
fs
jno
aad
icebp
mov
dec
ja
cmc
loop
shrb
test
mov
or
iret
sub
stos
orb
add
or
dec
mov
jne
fisubrs
pop
out
fstpt
mov
cltd
sub
inc
mov
bnd
lahf
cli
ficomps
cmpsb
int3
ljmp
ja
xchg
lock
jbe
mov
push
mov
jle
xchg
decb
jecxz
out
mov
outsl
xchg
roll
aam
in
jg
inc
jg
std
adc
pop
adc
jno
testl
adc
incl
mov
rcrl
cmp
pop
jmp
pop
movsb
jne
popf
sbb
mov
add
mov
sti
xor
enter
in
mov
sub
add
movl
shll
es
push
jl
add
add
sub
add
sbb
pop
xor
dec
ret
popa
push
push
repnz
stc
and
int3
cltd
push
std
pop
xchg
repnz
loope
es
std
insl
testl
push
fwait
rcrb
dec
stc
jae
ficoml
pop
mov
jge
dec
mov
pop
icebp
clc
mov
imul
inc
int3
push
push
dec
pop
sbb
cld
push
in
aaa
pop
push
or
jbe
jae
dec
mov
mov
les
repz
push
push
sti
pushf
ljmp
cld
lret
push
pop
outsb
shll
int3
add
aam
out
pushf
and
mov
and
stos
movsl
jg
orb
test
xchg
cmpb
or
roll
aaa
push
push
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
inc
stos
xchg
pop
adc
iret
movlps
dec
out
pop
sbb
cmp
mov
push
cwtl
dec
pushf
and
xor
mov
pop
jo
into
popf
dec
rcl
inc
inc
cmp
stos
inc
lods
xchg
cmp
test
loop
into
cs
pop
cmp
and
pop
xor
inc
cld
cmp
xorb
ret
cld
lods
jo
in
enter
dec
cmp
stos
leave
rolb
out
repz
lret
adc
test
cs
test
ss
out
xor
jno
xorl
adcb
inc
cmp
clc
jg
sti
cmp
sbb
cmpsb
call
repz
loopne
or
push
inc
test
loop
hlt
or
mov
xchg
ss
data16
and
addr16
cmp
and
pop
jne
pop
mov
in
jmp
xchg
iret
inc
enter
mov
jo
xchg
add
pop
inc
pop
insl
xor
out
dec
xchg
and
add
cmp
daa
out
pop
mov
pop
and
cmc
scas
fld
cmp
or
mov
mov
iret
aas
cmpsb
icebp
out
cmp
pop
and
in
push
mov
clc
in
enter
xor
add
sbb
stos
shlb
in
sub
jne
or
lods
arpl
pusha
iret
inc
lcall
insb
out
aam
mov
dec
xor
push
push
jle
sub
in
test
adc
bnd
xchg
ljmp
stos
pop
pop
fisubrl
inc
dec
pop
push
cmpsb
test
mull
sub
dec
mov
push
adc
xchg
mov
sti
sahf
jge
push
fimull
xchg
lret
scas
add
mov
jp
ud1
sbb
inc
fisttpll
fsubl
test
loop
int
cmpl
fisubl
repnz
je
pop
dec
stos
mov
pop
jmp
jbe,pt
inc
loopne
mov
int3
inc
out
cli
mov
in
mov
push
pusha
dec
movsl
repz
dec
mov
cmp
pop
fnstsw
es
sbb
out
push
es
adc
stos
or
push
sub
push
jle
mov
cmpsl
fcoms
popf
jge
jl
jle
hlt
fldenv
xor
mov
and
nop
push
cmpsl
int3
sbb
pop
fwait
cmp
inc
cmpsw
rol
nop
lret
sbb
jne
jno
sti
lock
inc
aam
adc
stos
xor
out
and
push
pop
mov
je
mov
test
xchg
push
es
mov
and
or
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
jmp
js
sbb
adc
sub
fisttps
sub
cmc
sti
sub
imul
cmp
and
jle
xchg
insb
mov
xchg
daa
out
xchg
add
mov
clc
in
xor
in
push
jbe
pop
dec
inc
add
hlt
xchg
cwtl
dec
jb
xchg
sub
pop
ret
fs
mov
lret
pop
and
jmp
iret
dec
push
lea
mov
xchg
push
roll
and
leave
jae
mov
sbb
rclb
mov
lods
xorb
je
xor
xor
int3
inc
jne
sti
mov
sbb
mov
xchg
test
push
shrl
je
xchg
popa
or
mov
cld
dec
stos
xor
add
mov
std
sub
mov
call
sbb
daa
cmp
imul
adc
cs
stos
lds
adc
les
inc
adc
sub
mov
fs
fidivs
push
xchg
notl
xchg
cmpsl
push
adc
adc
xchg
sti
pop
jmp
cmc
push
pop
fiadds
outsb
sub
lcall
arpl
sbb
push
rclb
lea
add
adc
std
into
dec
add
movsl
subl
nop
push
xchg
sub
cmp
loope
inc
fwait
cltd
imul
cmpb
mov
inc
cmp
sub
mov
adc
out
xchg
clc
cmp
or
xor
nop
sub
adc
lcall
cmc
loop
mov
cs
mov
mov
popf
test
repz
xor
pop
mov
add
outsb
dec
push
pop
imul
out
and
neg
andl
add
cli
neg
add
add
lods
sahf
push
fwait
out
pop
sti
dec
mov
sbb
or
mov
cltd
add
xor
mov
pop
hlt
lods
mov
or
test
and
in
adc
mov
xchg
inc
push
or
orl
insl
mov
jb
movl
jb
and
xchg
inc
inc
mov
or
inc
test
and
xor
cs
jnp
subl
xchg
lock
in
addr16
sbb
sahf
or
outsl
push
roll
lock
loopne
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
lea
mov
or
adc
adc
push
cmpsb
loop
cmp
sbb
push
sub
cmp
sub
xor
inc
popa
call
push
fistl
insb
push
add
lds
outsb
js
bound
xchg
ljmp
mov
jmp
pop
push
pop
mov
dec
jmp
pop
hlt
or
std
lret
fs
mov
push
adc
jle
add
test
lcall
xor
mov
in
lea
xor
dec
pop
xchg
test
xor
in
adc
and
icebp
mov
aad
sbb
std
inc
in
movsl
cs
cmc
lahf
push
hlt
roll
inc
in
popa
pop
aad
or
arpl
fucomip
xlat
les
aaa
aad
jb
stc
push
and
xchg
xchg
fnsave
loopne
xor
mov
sub
lods
xlat
pop
pop
xlat
loope
pushf
inc
div
inc
popf
inc
shrb
mov
fsubrl
jp
and
pop
or
inc
lret
addb
in
dec
xchg
jb
jp
push
aaa
cmp
pop
push
push
lods
test
mov
cmp
xchg
xchg
leave
jge
dec
and
mov
xor
xchg
cmpsl
les
sbb
dec
lock
mov
sbb
pop
scas
or
test
dec
lahf
leave
cmp
stos
int
xchg
je
jo
jecxz
xchg
scas
frstor
push
adc
sahf
cli
pop
repnz
in
mov
ljmp
das
jg
add
scas
xchg
cmpsl
push
mov
bound
into
mov
test
repnz
ljmp
xor
pop
daa
int3
gs
hlt
xchg
loopne
std
lock
inc
push
pop
add
ss
mov
rolb
addr16
jns
lods
dec
push
scas
adc
aaa
xchg
mov
or
shl
sub
cld
add
push
ret
or
in
ljmp
les
cmp
xchg
pop
xchg
lock
aam
mov
scas
jbe
jno
xor
or
sub
enter
xchg
sub
lcall
pop
ss
jne
out
mov
outsb
ret
je
add
xchg
repnz
jg
gs
jp
and
xor
xchg
add
xchg
dec
out
dec
pop
fnstsw
daa
cli
out
pop
shlb
mov
mov
or
mov
mov
sti
jl
xchg
jb
testb
cs
mov
sahf
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
or
jle
unpckhps
iret
movlps
rorb
jmp
push
xchg
ds
pop
outsl
xor
push
pop
pushf
dec
sti
mov
cwtl
shrl
scas
mov
xchg
mov
push
fmuls
xchg
pop
mov
insb
loopne
and
pop
lahf
int
das
mov
lret
mov
inc
testl
jnp
leave
dec
xchg
in
popf
add
push
mov
mov
out
mov
jge
iret
push
cld
pusha
jecxz
fnstsw
push
mov
outsl
mov
cmp
jb
lcall
das
adc
cs
loop
repnz
int3
mov
das
cmp
insl
call
ret
lea
dec
div
in
inc
push
cmp
jnp
pop
aaa
xor
and
mov
cmp
pop
xchg
mov
push
sub
pop
mov
mov
or
push
xchg
ficomps
pop
adc
xchg
test
cltd
and
outsl
sbb
imul
fstpt
shl
mov
pop
or
cmpsl
pop
dec
sbb
or
mov
inc
cmc
stos
adc
dec
mov
xchg
lret
pop
mov
lcall
xchg
es
xor
or
cmpsl
mov
cmpsb
xor
out
xor
es
movsl
loopne
inc
pop
jae
aas
xor
sahf
loop
cmp
lods
pop
sar
ret
mov
sub
pop
inc
int
mov
fwait
imul
pop
push
or
cmp
out
lret
pop
stos
aam
jnp
push
pop
inc
push
mov
test
mov
jle
rep
inc
aaa
int3
jmp
lds
jl
fisubrs
mov
aam
add
fldenv
shr
jle
jmp
mov
xchg
notl
dec
hlt
mov
mov
mov
or
xchg
lds
jb
dec
push
dec
xchg
mov
mov
or
lret
out
jl
enter
mov
lds
out
sbb
jnp
mov
xchg
cmp
inc
mov
fists
int
movsb
js
add
stc
jo
jbe
mov
cld
mov
das
test
andl
int3
int3
fnstsw
es
lds
inc
and
aad
in
hlt
cli
xor
jns
and
jmp
in
dec
push
icebp
and
addb
mov
xchg
pop
adc
jae
xchg
rorb
je
push
push
or
or
jmp
dec
pop
imul
enter
data16
or
adc
dec
repz
filds
jle
iret
mov
sub
push
pop
inc
cli
test
xor
pop
shlb
lods
mov
sbbl
and
fwait
mov
rcll
pop
jns
adc
das
xor
je
call
outsb
jecxz
ficomps
mov
lock
jl
hlt
fisubrs
push
addr16
je
push
xlat
daa
pushf
popf
cmp
sbb
inc
mov
push
mov
or
push
std
hlt
shlb
leave
scas
aam
xor
ljmp
jge
bound
xor
fsub
stc
cld
ja
add
cmpsl
mov
adc
outsb
insl
xor
dec
inc
nop
xor
mov
nop
out
out
dec
pusha
mov
dec
adc
push
dec
pop
mov
into
push
push
push
mov
xchg
cmp
mov
loopne
mov
mov
das
test
insb
outsl
gs
jmp
jl
insl
fists
push
xor
pop
fbstp
loop
lods
add
mov
scas
pop
mov
jo
cmc
mov
dec
pop
aas
fldl
jge
ljmp
push
pusha
jl
xor
imul
push
push
imul
mov
push
mov
pop
mov
pop
xchg
or
repnz
stos
test
inc
or
popa
dec
mov
xor
cli
push
loope
test
add
inc
das
fsts
fcmovnb
xchg
mov
cld
cltd
sub
sbb
push
push
bound
int3
add
add
mov
jae
enter
jge
add
xchg
xor
lds
jmp
fnsave
pop
gs
add
push
xchg
outsl
sarb
or
add
negb
in
cwtl
push
cmp
mov
mov
rep
sub
lahf
stc
test
arpl
inc
lret
test
mov
out
push
fsubrs
dec
lret
jbe
add
xor
and
std
imul
ss
jo
push
in
loop
clc
movsb
jmp
in
xlat
mov
imul
test
and
movsb
arpl
lea
adc
fisubrl
mov
shlb
jp,pn
push
in
mov
mov
or
outsl
push
lock
iret
sbb
dec
add
mov
fistps
mov
xor
popa
push
pop
pop
cmp
sub
or
pop
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
mov
xor
jb
jge
fcmove
mov
mov
and
sahf
gs
push
xlat
addr16
inc
into
pop
jbe
imul
clc
sbb
outsl
cmp
jmp
dec
sub
imul
daa
mov
or
inc
add
insl
dec
adc
mov
andl
andl
popf
push
and
push
jg
test
gs
call
pop
in
xchg
xchg
dec
sbb
js
mov
fnsave
mov
loop
push
xchg
or
lcall
sub
cmp
or
rolb
adc
sub
lahf
leave
cmp
xor
adc
fdivl
inc
stos
fs
add
mov
daa
adc
jb
fs
pop
cli
call
pop
push
hlt
pop
sbb
lock
daa
sub
and
cwtl
test
divb
lods
mov
cmovb
ja
add
sub
aas
dec
sbb
arpl
pop
or
rcrl
push
dec
imul
sbb
in
mov
mov
mov
shrb
mov
or
cmp
push
dec
push
and
cmp
adc
lods
adcl
sbb
lret
addr16
xchg
sub
loope
mov
push
mov
or
pop
fwait
popa
xchg
bound
cmpsl
dec
ret
add
pop
and
out
sbb
push
or
fidivs
sub
xlat
stos
fwait
add
push
notl
repz
test
or
sbbl
push
loopne
jge
and
jl,pn
pop
cltd
lock
clc
inc
gs
fsubrs
out
xchg
mov
and
loope
das
movsb
lcall
out
or
cld
and
push
dec
or
mov
idivb
push
test
mov
lds
gs
jns
cmp
lahf
add
loopne
inc
xchg
xorl
inc
inc
daa
mov
mov
iret
push
xorb
pop
movsl
mov
xor
jecxz
and
xchg
pop
xor
mov
cmp
push
mov
cld
ret
stos
mov
fimuls
dec
cmp
xor
popf
shlb
mov
int
adc
test
stos
fwait
es
das
mov
daa
sbb
data16
pop
inc
rol
inc
and
fnstcw
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
mov
jle
call
adc
shr
cmp
inc
sbb
cmp
mov
test
shll
xlat
aam
xor
sub
pop
das
ret
mov
push
jmp
mov
stc
out
lret
mov
push
xchg
into
xor
add
sbb
jae
nop
xor
mov
mov
test
and
or
adc
test
insb
sbb
std
sub
mov
mov
sub
repnz
mov
mov
adc
ds
pop
ret
jmp
jb
outsl
aad
test
movl
testl
add
test
xchg
pop
popa
inc
xchg
cmp
sbb
xor
and
cmp
cwtl
clc
out
stos
jle
xchg
mov
and
outsb
scas
movsb
leave
jae
jmp
fwait
test
push
jmp
scas
mov
loope
sub
aam
repz
inc
js
xor
ja
mov
or
jmp
inc
push
mov
stos
inc
inc
pop
arpl
jns
fstl
repz
pop
adc
dec
and
int3
repnz
in
aaa
addr16
rolb
pop
and
popf
xorl
mov
ror
cmp
mov
sub
mov
xchg
in
cmp
dec
inc
mov
bound
and
mov
jg
inc
pop
jbe
cmp
mov
shll
js
jne
stos
inc
addr16
mov
stos
shlb
out
lret
sbb
repz
dec
mov
fsts
ljmp
adcb
mov
sbb
std
xchg
divl
xchg
inc
mov
cmpsl
shlb
inc
shlb
jo
xchg
out
dec
icebp
xor
ficoms
pusha
sub
push
sbb
imulb
dec
mov
imul
clc
xor
sub
daa
xchg
sbb
dec
shll
pop
iret
mov
cmpsl
lcall
add
jo
jge
ss
push
xor
and
ljmp
icebp
push
mov
lcall
fildl
addr16
jl
shll
cld
xchg
jo
jge
mov
js
jne
arpl
call
lret
test
dec
fcmovbe
sbb
pop
xor
roll
mov
cmpl
dec
mov
dec
mov
jnp
push
out
int3
mov
sarl
mov
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
xor
jg
xor
mov
in
in
lea
add
sub
fs
sbb
pop
test
pusha
cwtl
mov
jecxz
dec
xlat
xor
sti
mov
pop
gs
jecxz
cmp
out
bound
xchg
test
mov
jp
cmp
lcall
stc
movsb
sub
jb
sar
enter
into
hlt
sub
sbb
add
rorb
out
data16
fsubrs
pusha
push
fstps
cmp
outsl
popa
inc
test
in
or
adcb
inc
ds
mov
sets
sbb
cmpsb
mov
js
cwtl
sbb
cmp
mov
jbe
xor
repnz
out
xor
ss
pop
jne
fsubl
lea
outsl
or
mov
sbb
scas
or
aaa
test
mov
pop
or
sbb
sbb
arpl
sbb
push
jecxz
sbb
and
or
xchg
dec
sub
cmp
dec
and
js
push
jmp
aad
fsubrs
sub
inc
or
les
shrb
mov
sub
ret
mov
mov
out
add
dec
mov
and
fsts
cld
incl
adc
mov
inc
out
scas
cmc
clc
mov
jns
mov
stos
inc
mov
cltd
jo
scas
jmp
or
cld
mov
outsb
mov
fimuls
and
out
push
shl
inc
xor
jb
pop
push
jns
cld
dec
aaa
pop
in
push
add
shl
int
pop
data16
cmp
lods
out
mov
std
pushf
mov
cs
jmp
mov
mov
testl
stos
dec
cs
clc
popl
pop
in
fs
mov
sbb
xchg
and
xchg
lcall
or
sub
ss
lahf
dec
xor
add
nop
scas
es
enter
arpl
inc
pushf
cmp
aas
int3
add
jne
dec
sub
clc
push
mov
cld
arpl
jo
and
jo
pop
xchg
jp
push
push
movsb
mov
cmp
jmp
into
xchg
push
fcmovu
and
dec
std
push
fwait
pushf
push
scas
mov
int
or
add
bound
into
pop
js
lcall
in
and
sub
push
dec
gs
ret
test
js
xchg
xchg
adc
and
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
adc
stc
adc
adc
aas
popf
sbb
adcl
push
sbb
cmpl
xchg
push
es
gs
jl
sbb
adc
in
mov
inc
push
fidivs
test
mov
dec
dec
adc
fisubrl
int3
inc
add
xchg
dec
sub
cmp
arpl
bound
cld
jo
test
pop
out
or
mov
xchg
addr16
and
push
call
adc
cwtl
sub
xor
mov
push
jns
sub
inc
jmp
and
jecxz
mov
mov
push
push
mov
xlat
dec
les
sbb
push
loopne
mov
xchg
mov
iret
push
mov
push
jg
ja
push
shl
lods
xchg
mov
dec
jmp
and
test
cmc
lock
dec
loopne
fmuls
and
add
mov
fdivp
push
mov
hlt
mov
addb
mov
xor
call
call
sub
inc
dec
lock
pop
stc
xor
dec
jae
imul
pop
outsl
mov
cld
lds
aas
pop
pop
ret
dec
fcomi
jne
adc
cli
out
push
je
mov
das
and
test
test
int3
jge
lahf
sbb
jg
test
sbb
js
loope
lock
addl
test
in
and
sahf
and
out
int
cltd
mov
sbb
cmpb
dec
cmpsb
dec
test
repnz
jno
repnz
clc
sub
dec
cs
mov
addr16
loope
out
push
add
xchg
pop
fisubs
stc
cmp
or
dec
aad
aaa
sub
mov
cmp
sbb
or
xchg
in
jb
xor
or
sbb
add
xor
in
sarl
aaa
mov
pop
das
mov
pop
and
pop
lods
bound
leave
scas
in
jne
jns
aaa
pop
sbb
repz
and
clc
pop
lods
sub
jle
adc
mov
and
pop
lock
sub
push
shrb
sbb
fs
adc
addb
add
popf
mov
mov
push
push
clc
iret
repz
xor
in
or
jl
inc
and
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
or
ljmp
iret
movlps
adc
sbb
adc
sub
adc
sbb
sbb
pushf
push
das
test
loope
imulb
pop
movsl
sub
jp
xor
or
icebp
or
imul
cmp
inc
push
and
in
pop
xor
stos
pop
add
stos
push
sbb
movsb
sbb
push
mov
popa
stos
dec
fwait
xchg
push
sub
cltd
lods
xchg
sti
lods
repz
lods
pop
mov
push
cli
pop
add
sahf
pop
add
sbb
cmpsb
hlt
add
iret
inc
mov
add
jo
mov
loope
mov
movsl
xchg
addr16
idivl
or
pop
jmp
xor
cs
les
inc
cmp
cmc
mov
fsubl
ret
std
jae
inc
call
mov
and
subb
adc
loop
iret
stc
movsl
xchg
jne
pop
pop
push
aam
dec
xor
jns
xlat
or
ljmp
int3
inc
ja
popl
sbb
lock
mov
sbb
mov
lods
mov
faddl
data16
or
pop
test
loop
scas
popf
ds
inc
dec
sub
ja
ret
jo
dec
imul
mov
clc
xchg
movsb
pushf
and
shlb
pop
pop
mov
dec
rorl
dec
jb
addr16
test
push
push
fldl
test
movl
movsl
mov
xchg
push
shlb
popa
outsb
arpl
jbe
test
mov
push
dec
and
push
scas
das
mov
outsb
push
or
xchg
out
push
mov
adc
cmpsb
jge
stc
adc
sarb
sbb
adc
jmp
sub
dec
dec
pop
pushf
lods
pop
into
jp
out
add
mov
repnz
mov
pop
outsb
ret
pop
pop
rcrb
ret
inc
mov
test
cmp
enter
add
or
gs
in
je
ss
and
int
lahf
lods
ficoml
mov
aad
ret
mov
mov
scas
jmp
sbb
mov
push
mov
xchg
outsb
push
movsb
leave
lds
out
bound
cmc
lcall
cmp
mov
push
stos
fsubl
es
mov
add
das
xor
sub
lods
popa
mov
negb
add
inc
lcall
repz
aas
pop
mov
mov
xchg
hlt
enter
pushf
scas
sbb
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
inc
sub
jmp
adc
adc
movsb
into
out
daa
push
push
cmp
int
lds
jge
pop
mov
arpl
cmp
push
cmp
icebp
pusha
dec
in
sub
stos
in
stc
lcall
test
rclb
or
pop
mov
and
les
push
icebp
stos
or
add
add
test
andl
loope
inc
xchg
int3
add
adc
aam
cmp
add
in
das
lret
xor
lods
bound
mov
loope
xor
shll
xor
das
jecxz
arpl
or
mov
lea
data16
cmp
insb
pop
mov
mov
je
daa
imul
test
push
xor
add
pusha
shrl
jg
push
lods
sahf
rclb
mov
mov
xlat
lods
jbe
sub
into
or
stc
xor
shrb
push
int
pushf
mov
ljmp
int
aam
push
mov
and
sub
out
insb
and
and
mov
cmc
fimull
aad
aas
adc
fistps
cmpsl
je
lods
pop
adc
imul
cmc
add
dec
aad
dec
out
pop
inc
inc
and
or
sub
aas
stos
cmpsb
push
xor
sbb
xchg
mov
push
pop
sbb
or
xchg
add
mov
lock
into
inc
mov
cmp
mov
jb
xchg
pop
xchg
scas
insl
fwait
lds
mov
fwait
rcr
popf
stc
ret
jns
mov
jbe
aam
push
pop
xorl
in
inc
mov
cmp
mov
sbb
mov
scas
pushf
and
sahf
shll
fmull
insl
mov
fsubrl
jno
out
pop
gs
xor
push
mov
into
push
add
sbb
rcrb
cmpsb
lea
or
mov
rclb
ret
mov
jge
inc
stos
inc
das
xchg
xorb
mov
and
sub
dec
jl
xor
vunpcklps
jmp
ljmp
sbb
pop
mov
shrb
rorb
in
out
mov
pop
hlt
sub
cmp
out
ficoml
insl
jae
adc
cmp
std
inc
es
inc
add
dec
add
pop
loop
pop
push
out
jge
int
inc
or
xchg
nop
inc
push
loop
aam
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
dec
aaa
xor
ret
cltd
jno
sub
clc
mov
loop
iret
adc
add
addr16
movb
and
fildl
ret
inc
iret
mov
cmp
adc
jl
insl
outsb
jnp
jno
sub
cli
mov
sahf
mov
lds
imul
mov
adc
inc
and
mov
jg
pusha
fiaddl
pop
sbb
dec
icebp
push
dec
cmp
adc
in
add
iret
mov
insb
ljmp
pop
pop
jae
cmp
imul
lods
out
mov
mov
stos
lea
scas
inc
push
jp
jo
stc
mov
int
jb
add
pusha
into
cli
scas
rclb
add
pop
add
adc
inc
cld
xchg
movsl
inc
ds
pop
lret
mov
stos
hlt
mov
fiadds
dec
or
cmp
xchg
iret
xchg
icebp
leave
push
sbb
cmp
and
ljmp
xchg
sbb
ds
or
jo
inc
sbb
bound
shll
dec
mov
mov
dec
pop
repz
rcr
cmp
sarl
les
sub
aaa
cmp
out
mov
popa
xchg
shlb
inc
or
scas
mov
daa
cmp
in
les
scas
xchg
add
test
cli
aad
pop
push
aaa
jle
xchg
and
pop
xor
adc
push
orl
mov
pminub
or
int3
stc
pop
pop
xchg
aad
xor
sbb
xor
mov
mov
ds
subl
pop
xlat
data16
imul
mov
pushf
mov
and
dec
mov
cmpsb
push
pop
xchg
adc
xchg
stos
push
cmpsb
test
cli
ja
pop
pusha
or
stos
pop
lock
stos
push
fsubs
rorl
ds
jp
jnp
test
std
ss
pop
ljmp
or
mov
cmpsl
jo
in
lea
adc
xchg
fstps
mov
daa
icebp
in
insl
xchg
lahf
mov
pop
stc
mov
or
lods
inc
movl
repnz
lcall
in
sub
ucomiss
mov
in
jne
cs
inc
insb
mov
arpl
xor
scas
shr
xor
incb
xchg
jg
adc
xchg
xor
pop
aam
xor
cld
ret
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
adc
adc
movlps
mov
xor
stc
nopl
add
inc
cmc
and
repz
stos
cwtl
or
out
fwait
in
popa
sub
sti
test
pusha
xchg
imul
mov
jo
movsl
hlt
fisubrl
sub
movsb
inc
outsb
xchg
aas
dec
pop
mov
adc
das
adc
inc
xor
aaa
lret
sbb
out
bound
pop
daa
push
mov
mov
scas
xor
and
movsl
pop
stc
fdivrl
iret
sbb
subl
inc
cmp
loopne
mov
cwtl
adc
jle
movsb
fistpll
lods
mov
sub
js
inc
pop
xchg
push
shld
out
xchg
sbb
adc
ja
shll
xchg
hlt
push
nop
pop
lock
popl
out
mov
inc
out
pusha
idivb
insb
sahf
movsb
in
add
aad
stos
jnp
pop
cli
mov
add
sahf
fidivl
es
fiaddl
mov
push
cli
jmp
fnstenv
gs
cmp
test
hlt
add
insb
xchg
sub
add
es
sbb
inc
insl
out
mov
mov
imull
in
or
test
repz
push
push
cltd
sub
lahf
ret
xlat
rclb
pop
mov
addr16
and
pop
cltd
out
cmp
add
sti
frstor
dec
sti
cmp
sub
push
negl
push
sbb
addb
daa
add
jb
mov
ja
test
fcoml
mov
fsubs
call
mov
fwait
rorb
test
or
and
movsb
add
rolb
pop
jl
pop
pop
fcmovu
dec
sti
addb
and
int3
mov
test
enter
xchg
xor
add
leave
lds
sbb
aad
inc
adc
xor
push
fs
shlb
mov
sar
stos
aaa
sub
fcompl
in
fisttps
je
call
fnstenv
jo
adc
inc
push
xor
jne
inc
cmp
xchg
sub
into
xlat
sub
cmpsl
cmpl
inc
jle
aaa
imul
add
nop
push
or
jl
push
mov
cmp
mov
clc
js
mov
dec
aaa
ss
js
sbb
cld
loopne
adc
sub
push
push
mov
mov
push
sub
xchg
xchg
add
mov
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
scas
add
adc
movlps
pop
xchg
sbb
pop
jmp
dec
movsl
fnsave
jmp
call
cmp
fcoml
je
push
int3
sbb
cld
inc
bound
test
outsl
out
ficoms
mov
out
pusha
or
pop
divb
dec
and
xor
jns
inc
cmp
test
jl
mov
insb
rcl
rcll
ret
in
cmp
push
mov
xchg
in
out
add
jle
xor
jb
push
xchg
in
mov
mov
mov
mov
jns
ret
out
or
nop
std
xchg
xchg
jge
fnstsw
aas
out
adc
loop
adc
fcomi
jno
jo
mov
aam
sub
xor
add
inc
sarb
inc
popf
aas
in
mov
rclb
xchg
mov
sbb
pop
add
xchg
adc
cmpsb
add
sbb
sbb
pop
aam
xor
jb
cmp
imul
ret
aas
add
int3
outsl
mov
add
daa
pop
lea
jge
add
inc
mov
sbb
push
xchg
stos
out
repnz
dec
inc
out
mov
cmp
arpl
test
cmp
je
addr16
test
pusha
fstpt
insl
mov
xchg
clc
scas
stos
mov
sub
pop
jns
pop
or
jbe
popf
inc
mov
sbb
jae
and
cmp
jge
cmp
sti
jno
adc
std
out
pop
lea
stos
mov
fstl
push
addr16
loope
jge
push
add
and
dec
popf
inc
mov
adc
pop
inc
daa
adc
pop
inc
mov
mov
inc
out
loopne
xchg
ss
mov
jbe
lods
sub
xor
je
mov
enter
enter
mov
ss
jmp
jge
and
cmp
in
adc
mov
loope
or
cmp
das
notb
cmovle
pop
inc
nop
pushf
push
xor
loope
fcmovnu
and
addr16
push
sbb
add
or
push
lea
enter
lock
shll
sbb
outsb
inc
adcb
lock
loopne
sahf
std
outsl
xchg
mov
mov
shll
movsb
add
xchg
enter
dec
popa
repnz
stos
mov
inc
adc
stos
lock
mov
add
add
inc
and
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
mov
fcmovnu
adc
adc
loope
push
dec
int3
dec
adc
mov
bound
in
mov
movsb
mov
aam
subl
fucomi
mov
ljmp
hlt
dec
test
dec
loop
jne
adc
push
adc
and
out
test
sbb
int3
adc
popa
adc
stos
jmp
leave
outsl
and
xlat
cmp
pop
xchg
pop
xchg
mov
ja
jg
push
xlat
add
push
movsb
adc
test
adc
arpl
xor
in
jge
xchg
mov
scas
iret
push
or
xchg
aaa
mov
add
int
push
fimuls
icebp
jp
dec
mov
mov
mov
stos
in
sti
jno
mov
lret
lods
mov
add
xchg
test
je
push
adc
xor
sub
stos
push
insb
in
xchg
dec
mov
test
sub
lods
inc
pop
cld
push
mov
ds
push
lahf
xchg
loopne
jb
imul
push
sti
cmp
sbb
xchg
inc
add
xchg
pop
insl
loopne
imul
jne
sbb
rep
jge
int
sti
fsubrs
in
push
test
daa
scas
stc
xchg
rorb
dec
imul
movsl
jb
or
xchg
xor
dec
xchg
sbb
ficoms
and
imul
jecxz
bound
and
sbb
xchg
movsl
sbb
cmpsl
lret
std
sbbb
xor
jg
xor
add
dec
xor
adc
xor
cmp
pop
cmpsl
ret
icebp
mov
push
sub
or
jb
xchg
out
inc
cmp
adc
xorl
addr16
sbb
or
inc
dec
jmp
loope
inc
fimuls
aad
pop
jne
orb
mov
shll
popa
addb
ss
jl
inc
sbb
push
add
loop
adc
das
push
and
stc
cli
and
lcall
add
ljmp
mov
xchg
enter
push
andl
ficomps
fcomps
or
in
push
insl
push
pop
mov
enter
push
inc
mov
je
inc
push
sarb
push
pop
iret
add
add
lea
and
jecxz
push
xchg
pop
int3
adc
mov
xorl
loope
aas
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
js
rclb
adc
adc
mov
rolb
clc
xlat
mull
sbb
aaa
iret
pushf
outsl
and
out
sti
jbe
mov
leave
movd
arpl
aam
clc
sarl
sbbb
in
gs
sarb
mov
scas
or
repnz
nop
fwait
jne
push
cltd
push
in
mov
adc
mov
stc
xchg
daa
mov
xor
mov
rcrl
inc
dec
ljmp
xor
mov
ds
xchg
data16
iret
insb
xor
mov
cmpsl
sbb
jne
jp
mov
push
rorb
shl
and
sbb
hlt
mov
loopne
callw
cmp
cmpl
fidivrl
push
xor
jecxz
adc
jecxz,pt
pop
cmp
shrl
mov
std
add
ret
dec
notl
and
insb
pop
jb
std
sbb
pop
add
lock
adc
clc
mov
xchg
es
out
dec
ljmp
loope
dec
jo
adc
push
mov
push
cmp
sub
mov
insl
dec
jb
movsb
xor
dec
mov
stos
int3
stos
mov
fadds
push
mov
jno
mov
popf
and
movsl
out
popf
iret
ss
in
dec
jl
inc
aam
loope
sub
add
push
insl
jmp
jo
data16
jle
fnstenv
mov
xor
out
scas
add
fimuls
mov
inc
test
mov
mull
jge
sub
cmp
fwait
sbb
stos
inc
fistpll
adc
or
fidivs
xchg
mov
int
dec
pusha
test
repnz
pop
test
dec
pop
mov
icebp
sub
cmp
in
and
jmp
aam
cwtl
push
test
pop
imul
mov
add
pop
cli
out
jo
sti
lea
es
movsl
popa
fadds
pop
push
mov
adc
add
mov
stos
mov
push
pop
test
ficompl
mov
aas
fwait
sub
jecxz
sub
jnp
push
int3
jmp
pusha
jno
in
out
mov
and
fstpt
js
adc
cmc
pop
jbe
aas
pop
pop
addr16
and
dec
or
test
add
lods
stc
dec
xchg
xchg
xor
lcall
fnstenv
xadd
jg
js
clc
insb
lret
lcall
mov
push
pop
enter
nop
lds
sub
leave
inc
cs
mov
sbb
sbb
pop
stc
test
aam
mov
data16
cmp
in
inc
sbb
ret
jno
pushf
mov
jbe
xor
xorb
ljmp
jmp
or
sarl
gs
xor
or
xchg
sbb
mov
loop
inc
addr16
out
inc
test
andl
inc
pushf
mov
add
and
daa
push
fdivl
rcrl
imul
add
jne
sub
loope
and
addr16
inc
mov
in
xchg
and
aaa
bound
mulb
inc
or
mov
push
mov
sarb
test
cmpsb
mov
iret
sub
xor
popa
and
pop
test
vmaxsd
icebp
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
leave
lcall
adc
adc
add
sti
or
cmp
cmp
mov
lret
sub
cmp
inc
and
adc
push
or
sar
xor
lcall
arpl
ljmp
xchg
push
aaa
popf
fisubrl
xor
not
jge
scas
pop
stc
mov
adc
push
jl
fs
cmpsl
and
push
test
pushf
mov
mov
xchg
and
jnp
int3
jp
out
jmp
in
mov
dec
ss
push
jns
add
into
jle
jo
mov
addb
and
mov
inc
test
lret
inc
push
fcomps
and
mov
outsl
inc
sbb
or
mov
jo
insl
sbb
lret
inc
rcrl
mov
add
mov
aaa
dec
inc
jecxz
push
mov
cmpsl
or
mov
jns
aaa
dec
or
push
xchg
les
cld
dec
lcall
addr16
shrl
cmp
gs
push
mov
dec
sarb
ds
mov
fs
xchg
lcall
outsl
pop
sbb
push
xor
pop
push
addl
push
mov
inc
ret
inc
lcall
sub
push
sbb
jb
popa
mov
lcall
mov
insb
jmp
xor
mov
jnp
fbld
icebp
cmp
js
fs
mov
cmp
lods
das
pop
cmp
cld
cmp
and
call
pop
adc
jecxz
int3
sbb
leave
mov
int3
inc
out
xchg
lock
ret
mov
mov
jg
or
inc
shrl
push
iret
jae
push
cld
jbe
icebp
arpl
outsl
int3
xor
repz
dec
sub
push
cmp
aad
xlat
xchg
stos
loope
mov
stos
add
pop
push
bound
ss
push
pop
test
mov
and
lret
and
aam
js
xor
call
leave
inc
in
mov
enter
test
sbb
cmpsl
insb
ficoml
xchg
mov
cmp
jmp
loope
fldcw
sub
adc
imul
shrl
mov
aam
fistl
je
cmpsb
bound
and
fisttps
scas
mov
aad
inc
fs
pmullw
repnz
dec
fnstenv
test
in
into
xchg
or
test
xor
aaa
ret
loop
xchg
in
in
sbb
shrl
out
lds
mov
xlat
xchg
dec
iret
and
adc
push
add
es
fwait
pusha
stos
adc
push
pop
push
xchg
adcl
scas
mov
or
jg
push
dec
in
fs
fidivrl
lret
shlb
add
into
pushf
out
aas
ja
int
dec
cltd
mov
mov
sbb
pop
and
clc
jo
lods
and
in
pusha
cmp
lret
sub
gs
stc
into
outsl
out
sub
mov
xchg
call
jns
aas
stos
shl
xchg
and
cmp
mov
jne
jns
sub
call
data16
xchg
fwait
sub
sbb
imul
ret
inc
jns
sbb
imull
loope
and
ret
push
mov
mov
gs
out
jl
adc
cltd
xchg
mov
andl
clc
or
out
sub
stos
fucomip
push
adc
cli
or
mov
push
jg
jmp
outsb
mov
or
bound
fdivrs
pop
mov
or
sub
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
pop
mov
push
pop
mov
leave
push
add
push
dec
gs
xchg
lret
inc
int
lret
push
and
adc
clc
push
insb
jbe
mov
iret
std
pusha
sbb
sbb
sub
out
adc
cmpsb
and
dec
mov
or
sbb
xchg
loope
cwtl
cltd
adc
sub
int3
mov
dec
xor
ljmp
arpl
pop
in
mov
fs
jecxz
mov
or
mov
test
pusha
cmp
inc
push
xchg
dec
mov
stc
dec
push
pop
cli
inc
jg
jge
mov
cs
icebp
nop
shll
lret
test
outsb
jle
xchg
dec
loop
popf
pop
push
cmpsb
xor
loopne
sahf
mov
ret
adc
cmpsl
rolb
sar
or
in
jb
imul
xchg
fists
sbb
mov
pop
mov
xchg
outsb
aad
out
cmc
cld
jg
push
test
add
fdivl
push
jmp
loop
mov
sti
xor
loopne
push
xor
cmp
pop
jne
es
jnp
dec
insb
xchg
adc
test
mov
stos
rcll
scas
daa
mov
cmpsb
cwtl
push
sbb
mov
daa
pushf
cmp
mov
xor
mov
out
repz
push
sbbl
in
lahf
inc
sbb
pop
adc
jno
inc
out
imul
xor
pop
mov
scas
test
jo
testl
pusha
cmp
jmp
inc
pop
outsb
bnd
pop
pop
xchg
or
adc
mov
mov
push
add
or
adc
pop
cs
dec
movsb
insl
pop
daa
sbb
outsb
iret
jle
cwtl
mov
sub
cmovo
rep
test
mov
jle
add
insb
cld
xor
es
lret
and
jl
lahf
cmp
ficoms
pop
mov
xchg
inc
and
subl
ret
cmp
adc
jmp
pop
mov
mov
adc
xorl
jmp
stc
test
imul
lods
bound
testb
dec
inc
test
hlt
js
imul
test
lahf
jae
jae
lahf
jnp
add
negb
testb
in
cmp
and
add
mov
inc
jo
ror
jnp
imul
cmc
das
int3
icebp
mov
dec
pop
iret
pop
xchg
testl
mov
sub
in
mov
sbb
cld
dec
or
mov
ss
repnz
loop
notb
inc
jge
leave
mov
pop
repnz
aad
mov
cmp
lds
cmp
fsubrs
xchg
fucom
fsubrs
aad
test
sub
jo
and
xchg
out
mov
test
sub
pop
push
or
mov
push
test
xchg
xchg
mov
cs
adc
out
into
outsl
cwtl
add
stos
into
adc
inc
sarl
cltd
xchg
mov
test
in
es
dec
sbb
mov
xchg
arpl
pop
mov
pop
outsl
or
mov
mov
test
decb
jg
xchg
xchg
jmp
movsb
call
lahf
shl
push
inc
cs
lods
fs
xlat
aaa
movsl
outsl
lret
fxch
or
push
jl
sbb
hlt
lods
pop
outsl
or
and
loope
scas
add
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
out
aam
pusha
mov
adc
mov
leave
mov
or
adc
mov
ret
push
js
test
xchg
jle
cmp
incl
mov
adc
fcmovnu
xchg
inc
repz
int3
in
sub
shrl
mov
arpl
inc
pop
pop
aad
in
or
lret
jmp
scas
and
sbb
aas
insb
bound
fdivr
jg
repz
adc
sbb
cmpsb
sbb
and
insb
rcl
mov
mov
xchg
insb
mov
pop
pop
adc
push
cmp
fwait
sub
mov
in
pop
adc
adc
pop
mov
mov
daa
mov
nop
sahf
and
add
aaa
add
hlt
add
jae
xlat
bound
mov
push
add
lahf
pop
add
scas
mov
sbb
mov
sbb
xchg
mov
sbb
pop
cmp
adc
sbb
and
xchg
mov
pop
mov
ror
mov
pop
lcall
daa
push
add
lods
movsb
lcall
sbb
cmpsl
pusha
fmull
bnd
push
bswap
xor
jbe
adc
inc
jl
lods
adc
iret
pop
outsl
cltd
xchg
inc
daa
jnp
jns
inc
cltd
ffreep
int3
fs
mov
cs
loope
push
pop
xchg
mov
cmp
jl
xchg
loope
sbb
cmp
arpl
cmpsb
ret
sub
dec
mov
test
pop
aaa
rolb
jns
pushf
inc
das
cmp
ljmp
push
lret
jp
shlb
xchg
out
push
sbb
push
or
mov
add
xor
in
push
ja
add
pop
int
xchg
cwtl
cmc
shll
cmp
enter
mov
xchg
cmp
sub
push
push
dec
add
lahf
and
sahf
xchg
xchg
jae
push
sub
jmp
in
sbb
icebp
imul
sbb
mov
dec
hlt
xor
int
sahf
adc
test
dec
mov
ficomps
sbb
jae
out
xchg
xlat
push
clc
outsb
jbe
in
xor
sbb
jle
stos
out
xor
cmp
xchg
lret
mov
stos
mov
jp
adc
xchg
inc
add
test
push
cmc
mov
enter
hlt
lret
mov
adc
movsl
add
lret
out
arpl
in
xor
into
push
scas
inc
or
pop
stos
gs
bound
cmp
push
incl
push
adcb
xor
stc
das
scas
pop
loop
out
dec
test
in
cmp
or
add
mov
xor
jg
insl
fwait
sbb
inc
jmp
pop
xchg
inc
or
jnp
cmp
sub
lds
loopne
insl
mov
adc
mov
pop
int
push
jno
addr16
les
call
add
dec
jmp
adc
fnsave
sbb
mov
pushw
push
std
test
js
lds
push
inc
fwait
cmp
inc
ljmp
in
and
imul
jno
mov
xchg
cld
mov
sarb
call
inc
mov
mov
mov
leave
sub
xor
das
inc
hlt
xor
and
xchg
or
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
iret
pop
fists
xor
cmpsb
movsb
add
scas
and
imul
xor
jmp
mov
jecxz
aaa
cmp
dec
lahf
add
push
cs
push
ret
sub
cmc
cld
dec
insl
cs
add
popa
aaa
add
sahf
add
lret
fcomip
mov
add
adc
in
jbe
loop
push
mov
dec
mov
cs
sbb
out
arpl
outsl
dec
mov
imul
mov
lret
lds
jg
repnz
fnsave
leave
nop
sbb
push
movsl
sub
mov
or
xchg
add
cmpsb
out
mov
ja
lea
paddsw
sub
push
push
adc
insl
mov
stc
sub
mov
aam
dec
pusha
push
push
xchg
popf
nop
xchg
adc
cmpsb
mov
pop
xchg
pcmpgtb
notb
add
pop
insl
aaa
test
je
or
xchg
insb
icebp
ret
and
ja
add
xchg
in
adc
mov
adc
xor
cli
push
push
xor
lret
xor
leave
lret
test
push
and
lods
xor
fbld
int3
fisubrl
sahf
mulb
cwtl
jmp
js
push
push
pop
sbb
pop
xorl
subl
and
mov
mov
dec
into
sbb
loop
in
repz
xchg
daa
gs
popa
cmpsl
cmp
mov
adc
ss
jge
xor
imull
shll
fwait
fldenv
xchg
xor
cli
add
push
movsl
out
arpl
sbb
call
ss
push
jne
xorb
hlt
or
mov
out
push
pop
arpl
push
mov
jno
movsb
inc
and
sub
jnp
and
aad
jmp
lds
xchg
int3
cld
push
and
aas
sahf
fnstenv
or
cmp
lea
rclb
sub
xchg
in
test
and
adc
addb
mov
push
scas
cmc
lds
sbb
push
scas
push
pushf
pop
fsubl
sbb
mov
stos
push
push
cli
insb
push
sti
xchg
jmp
jg
xchg
aad
pop
cld
fdivs
test
dec
into
sti
mov
push
sbb
cmp
adc
xor
sbb
leave
push
das
xchg
jo
pop
insb
mov
sbb
outsb
stos
leave
xor
fwait
cmp
into
out
xchg
mov
rol
call
jnp
mov
call
insb
inc
pop
add
cmp
add
ret
xchg
pop
lock
adc
in
loopne
in
mov
je
fwait
out
sub
jne
ss
cltd
in
pop
sar
pop
daa
popf
out
jl
inc
inc
adc
or
mov
fnstcw
xchg
leave
scas
hlt
xor
and
dec
bnd
dec
divl
jecxz
mov
mov
mov
cmp
loope
cmp
xchg
mov
jbe
push
lea
pop
daa
cli
fdivs
xchg
notb
adc
stc
outsb
mov
add
mov
mov
js
inc
jge
lods
add
mov
cli
daa
popa
pop
out
xchg
lock
cmpsb
mov
inc
cli
insb
push
jg
xor
scas
insb
in
in
loop
push
into
pop
inc
xor
in
in
inc
ss
pushl
bound
add
add
jle
add
inc
test
insb
add
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
and
lods
adc
adc
out
sbb
xor
fdivrs
cli
je
push
sub
pop
test
and
cmpsl
mov
addl
shrl
test
in
lock
cmpb
cmp
push
stos
call
mov
inc
xor
sbb
es
popf
pop
push
dec
jns
jns
imul
test
dec
iret
mov
ficomps
mov
lahf
dec
shll
sbb
fldt
insb
dec
loope
jg
addr16
shl
mov
inc
dec
sbb
cmc
jecxz
xchg
cmp
push
cmpsb
cmpsb
adc
sbbl
or
inc
cmovne
out
fiadds
sub
sub
and
in
mov
mov
pushf
imul
dec
add
icebp
push
rcr
fisubrl
das
ss
sub
movsb
sbb
xor
iret
mov
repz
je
push
jnp
adc
dec
jno
and
adcb
sub
orb
out
das
cmp
push
push
and
xchg
mov
xorl
add
stos
stos
jg
outsl
mov
add
dec
mov
lds
sbb
rcrl
xor
in
jne
xor
in
and
je
rorb
dec
xor
cmc
mov
clc
aam
or
mov
mov
xchg
sub
movsb
mov
in
adc
in
xlat
inc
test
mov
rcrb
je
xchg
push
sahf
insb
lea
sahf
in
or
iret
dec
add
jb
add
mov
inc
call
mov
mov
mull
mov
pmaddwd
sbb
mov
test
outsb
lods
mov
leave
stos
sub
in
scas
jo
or
mov
gs
les
sub
lahf
aad
sub
cmp
push
cmc
lahf
and
push
shrl
es
stos
cmp
andl
mov
dec
enter
add
cmp
inc
pusha
jp
push
fisubl
push
inc
sub
mov
imul
sub
jne
xchg
pop
push
jmp
inc
sbb
jecxz
mov
mov
test
shl
movsb
fldenv
or
divb
xor
sar
int
jmp
xor
mov
sahf
rorb
add
stc
mov
xorb
xorl
out
movsl
stos
pop
pop
lods
add
inc
stos
push
or
cmpsl
ds
adc
inc
jge
pushf
dec
sub
mov
xchg
div
pop
aad
jnp
das
jecxz
mov
push
mov
mov
shl
fwait
in
lahf
cmp
sbb
inc
inc
push
daa
aad
scas
aam
ljmp
pop
lock
xor
sbb
scas
popa
or
cmp
dec
lock
gs
or
jl
push
adc
jne
mov
sub
fcmovnbe
in
popf
mov
dec
mov
xchg
pushl
ss
int3
hlt
pop
pop
xchg
pop
ss
or
js
xchg
shrl
idivl
jmp
shlb
aad
repnz
push
fwait
ja
aad
mov
testl
lret
je
push
sbb
js
test
test
pushl
xor
jmp
or
mov
mov
mov
mov
dec
mov
stos
adc
adc
inc
call
xchg
or
xor
aam
mov
loop
push
addl
push
iret
mov
scas
cmpsl
shrb
sbb
pop
mov
mov
mov
xor
aam
dec
jge
xchg
loopne
mov
loope
stos
scas
and
mov
dec
js
lea
jns
mov
mov
sbb
in
call
inc
add
sbb
shrb
test
hlt
add
adc
inc
int
mov
xchg
jp
in
push
lret
ljmp
scas
dec
arpl
jmp
mov
push
mov
mov
ret
sbb
scas
div
popf
scas
popf
jbe
mov
adcb
cmpsb
dec
arpl
pop
dec
fistpl
mov
push
xor
sub
inc
popf
and
movsl
hlt
xlat
bound
mov
dec
adc
mov
mov
je
inc
pop
inc
imul
subb
insb
sub
dec
fisttpll
adc
mov
mov
or
fs
mov
stos
mov
shrl
es
outsl
rclb
les
out
fisttpll
enter
fdivs
loope
mov
xchg
adc
jae
addr16
push
out
cmc
ror
lods
xchg
push
or
xor
push
adc
inc
lahf
push
xor
aad
xor
pusha
jae
pop
mov
dec
aad
rcrl
addr16
pushf
and
inc
aaa
mov
cs
adc
sub
pop
in
scas
fidivrl
push
inc
xchg
inc
mov
mov
or
pushl
in
ret
jae
test
out
imul
lds
fyl2xp1
pop
mov
mov
pop
xchg
mov
out
leave
pop
shrl
inc
dec
push
jnp
fdivs
rcl
es
cltd
gs
mov
pop
sti
adc
loop
out
movsb
ds
das
cwtl
sub
mov
das
fisttpll
xor
scas
jns
push
cmp
sbb
sbb
sbb
andl
mov
sub
mov
lods
mov
sahf
rol
cmpl
cmp
mov
mov
pop
inc
xchg
unpcklps
jns
xchg
add
in
or
pop
inc
sub
subl
stos
lock
std
les
inc
or
inc
sub
js
jle
jno
clc
addr16
adc
inc
mov
inc
mov
push
mov
repnz
lock
scas
movsl
insb
inc
xchg
adc
jmp
adc
xchg
popf
je
inc
int
jne
test
jae
mov
stc
sbb
and
jb
dec
sahf
out
jmp
add
cmp
or
sbb
pusha
fildll
or
push
test
mul
rcrl
or
xchg
pop
xor
mov
into
fisttps
and
dec
loop
mov
fmul
or
adc
dec
or
negl
xorb
and
adc
dec
fwait
sub
push
add
ljmp
shll
addr16
rolb
sahf
imul
es
mov
fwait
cmpsb
mov
xor
or
rclb
aas
mov
cmp
mov
sbbl
cmpb
out
mov
ja
in
mov
push
pushw
or
inc
mov
ljmp
sub
push
es
or
fcompl
loope
decl
decl
decl
incl
lret
add
add
inc
incb
cmp
ds
mov
push
pushf
adc
adc
ret
das
inc
jo
sub
jnp
inc
jl
mov
inc
pop
lock
int3
into
add
pusha
rorl
or
out
mov
popa
fld
aam
mov
outsl
jne
lahf
and
push
jl
push
data16
dec
pop
fisubrs
lahf
mov
insb
sahf
into
arpl
xor
aam
fsubl
fnstcw
mov
mov
hlt
jecxz
xor
ja
loop
jne
lock
dec
stos
adc
bound
mov
js
in
ljmp
dec
stc
push
inc
inc
push
aad
outsl
cmp
sbb
sub
lahf
in
mov
sub
inc
repz
sbb
jnp
push
test
int3
xchg
cwtl
mov
call
jnp
mov
or
testl
cmp
cmpsb
dec
push
sbb
push
xor
stc
cmp
jno
inc
mov
mov
xor
fistpl
or
adc
repz
cmp
fnstsw
arpl
and
sbb
sub
fidivl
pop
pop
cs
shrl
cmp
mov
inc
push
inc
aad
pop
stos
xchg
je
mov
rcr
mov
les
in
push
aad
jbe
lret
lret
sub
mov
in
enter
xorl
mov
sbb
loope
loop
popa
lds
and
mov
jns
in
sub
xchg
dec
add
jp
jmp
shll
and
shl
cld
xchg
xor
sub
jp
icebp
arpl
cmpsl
popa
popa
adc
xchg
or
cmp
mov
repz
jb
aaa
test
adc
cmp
fsubrs
lods
aad
ret
nop
xlat
imul
cmpsb
fwait
lods
cmc
popf
cld
inc
ss
int
pop
adc
addl
and
lock
cmp
add
mov
xchg
aas
cmp
loopne,pn
jp
nop
divl
lods
mov
dec
xlat
cmp
sub
cwtl
sbb
outsb
lret
test
xor
fwait
inc
push
and
inc
inc
xorb
jnp
sub
sbbb
or
push
mov
mov
ss
clc
sti
add
fildll
out
jl
add
sbbb
xor
push
xchg
aas
into
aad
xchg
ror
cli
in
sbb
shlb
popa
les
xchg
clc
mov
pop
std
and
pushf
cmpsl
enter
stc
ds
aad
enter
jb
cs
pop
and
ffreep
pop
sbb
ret
sti
sub
dec
scas
outsl
fwait
mov
xchg
xchg
cmp
sbb
or
in
mov
pop
pushf
xchg
into
jmp
imul
ds
push
mov
in
jg
aas
aad
fiaddl
cmp
gs
ljmp
in
fldenv
aad
nop
or
lock
lcall
jle
negb
jecxz
pop
enter
outsb
out
fnstenv
mov
in
mov
out
fs
xchg
adc
in
std
pop
dec
shrl
out
int3
icebp
fidivl
cmpl
adc
mov
fnstcw
jecxz
dec
push
push
scas
and
subl
xchg
cmpsb
repnz
cs
neg
mov
pushf
jmp
jge
jmp
cmp
mov
js
xchg
stos
push
lcall
push
fwait
fwait
mov
fcompl
movsl
scas
jne
cmpsl
dec
dec
fistps
mov
xor
mov
fcmovnb
pop
or
and
mov
jp
pop
outsl
subb
cmpb
mov
sbb
mov
mov
push
or
aad
mov
or
mov
mov
jmp
sub
pushf
ret
mov
cmpsl
mov
cwtl
fs
and
add
push
cmc
gs
sbb
mov
mov
repz
adc
push
icebp
aaa
pushf
sbb
aam
pop
inc
mov
inc
arpl
mov
das
push
ret
pop
mov
fnsave
test
cld
adc
je
xor
pop
push
push
sub
sarb
mov
inc
jns
xchg
cmp
leave
sbb
push
push
cmpsl
pop
adc
and
mov
inc
add
xlat
sbb
and
nop
cmp
xor
xchg
rcrl
jno
and
inc
mov
dec
adc
shll
xor
push
outsl
sub
mov
out
pop
sarl
ljmp
jle
fs
cmc
scas
xorl
jg
out
loope
adc
ds
movsb
inc
rcl
mov
dec
inc
dec
shrl
movsl
pop
imul
scas
jle
stc
pop
pop
and
in
aad
mov
or
shll
adc
rcl
pop
inc
sub
add
jmp
fadd
insl
or
cmp
fdivrl
out
fs
popf
mov
sbb
jle
stc
push
js
mov
fstpl
outsb
push
pop
ret
mov
pop
ret
repnz
xchg
ljmp
out
hlt
pop
jno
mov
sub
cld
adc
mov
pushf
inc
pop
inc
or
cmp
in
sbb
sbb
xchg
lcall
mov
push
lock
xchg
xchg
add
cs
leave
int3
jl
mov
mov
pop
leave
fcomps
rcll
lds
push
cmp
lahf
clc
add
cwtl
jnp
adc
jae
cmp
jle
jg
xchg
test
bswap
repnz
ror
lcall
shrb
xor
mov
fisubl
repnz
push
push
pop
mov
adcl
adc
lock
jecxz
loop
nop
cmp
sbb
push
movsb
pop
ds
add
out
mov
enter
adc
and
sbb
addl
pop
xchg
and
sub
sbb
loope
or
adc
int
cmp
cmp
inc
jg
sbb
xchg
mov
sbb
pop
xchg
cmp
xchg
mov
sub
push
outsl
xor
dec
and
jns
outsb
popa
add
add
addr16
int
pop
insb
push
addb
or
pusha
in
gs
fwait
lret
lret
nop
loop
insb
clc
pop
popa
cmpsb
out
pop
jmp
in
cld
add
push
pop
jp
es
lods
scas
xor
cmp
movsl
movsl
scas
xchg
push
dec
lret
jl
inc
jb
fldt
outsl
xchg
cmp
lea
imul
rolb
in
sbb
test
mov
or
pop
and
adc
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
cmp
lock
adc
adc
test
and
push
mov
pop
cmp
xchg
dec
inc
out
xchg
icebp
and
jge
jecxz
lcall
mov
ja
adcl
inc
cmpsb
test
adc
xor
jle
cmp
rolb
outsb
cs
call
inc
xor
mov
or
ljmp
adc
inc
dec
push
and
push
xchg
dec
cmpsb
rcrl
jge
xor
outsl
dec
fwait
sti
loopne
cltd
xor
lock
mov
jle
mov
outsb
lcall
insb
dec
cld
sbb
pop
xchg
ss
daa
lods
add
out
imul
push
rcll
bound
inc
out
sahf
and
fmul
loopne
add
mov
je
and
rcrl
adc
cmp
nop
ret
fsqrt
pop
mov
push
in
insl
es
icebp
outsl
push
ror
test
mov
je
mov
xchg
stos
loop
pop
jle
or
jns
aaa
jne
sarl
mov
jnp
ss
call
mov
loop
movsb
iret
imul
fldt
mov
jb
sbb
mov
inc
push
data16
sbb
fiadds
roll
cmpsl
mov
mov
cld
int3
adc
adc
faddl
daa
idiv
inc
dec
add
xchg
mov
adc
jmp
js
aaa
dec
add
movsl
mov
out
iret
enter
lret
mov
frstor
ljmp
push
add
jb
lock
or
jmp
mov
int3
test
pushf
jbe
inc
dec
lods
leave
cmp
jbe
orl
scas
cmp
push
push
cmp
pop
jae
add
pusha
std
int
add
and
sub
xor
std
lods
movsl
inc
push
out
mov
mov
xor
sbb
imul
pop
adc
fistpl
jno
fistl
xor
mov
dec
loopne
xor
dec
jmp
inc
shll
xor
movb
clc
push
and
inc
call
xor
push
push
push
dec
cmp
ss
dec
lret
nop
cmp
repnz
fcomps
rcr
adc
xchg
out
add
push
stos
out
push
mov
inc
jp
pop
test
xchg
rolb
mov
push
lahf
adc
daa
mov
pop
in
jne
in
inc
call
jl
xor
iret
adc
or
les
jecxz
or
addl
in
sbb
push
stos
repz
sbb
xchg
in
fnstenv
mov
call
lret
cmp
mov
sbb
add
sub
icebp
cmp
aaa
or
scas
xor
lock
inc
cld
dec
sub
mov
int
push
lea
popf
mov
xchg
outsb
mov
outsb
cli
xchg
adc
jge
xchg
mov
add
ret
shrl
popf
je
jmp
or
cli
shr
jl
cmp
testb
pop
inc
adc
mov
or
fwait
mov
loope
add
dec
stos
pop
push
dec
xlat
dec
and
and
add
mov
sti
sbb
cmc
pop
jmp
fnstenv
mov
ljmp
mov
jmp
sahf
pop
pop
adc
lahf
sbb
jle
mov
adc
inc
jp
xorl
sbb
pop
js
andb
xor
xchg
pop
pop
and
mov
xor
iret
mov
xlat
jmp
pusha
pop
mov
jne
fcompl
in
arpl
in
push
jnp
movsb
addr16
or
and
xor
xor
mov
xor
xchg
outsl
cmp
outsl
fs
cmp
mov
inc
or
or
add
mov
cld
flds
lahf
sti
push
mov
out
jle
ret
dec
fsubs
xchg
dec
cld
faddl
xor
push
rcll
pusha
mov
push
sub
stc
adc
and
or
jnp
out
jmp
daa
or
and
aas
data16
xchg
pop
inc
add
out
mov
outsb
push
lret
repz
pop
lock
sub
pop
adc
icebp
xchg
dec
fadds
xchg
shlb
sbb
add
xchg
out
into
scas
fidivl
insb
dec
shrb
pop
call
cltd
inc
out
frstor
repnz
cli
sub
pop
jge
add
lods
sub
dec
and
mov
add
jp
xchg
xor
in
push
es
cmpl
lock
clc
int
scas
ja
out
mov
cmpsl
add
xor
movsl
sub
out
pop
inc
or
xchg
out
push
cs
rorl
inc
popf
mov
jl
inc
out
pop
sti
cmpsb
dec
push
mov
mov
lahf
add
in
aas
xor
outsl
cmp
lock
mov
fdivl
addb
stos
mov
jo
pop
mov
push
stos
or
aaa
mov
fidivrs
cmp
jmp
xchg
add
mov
pushf
rcl
xor
and
jp
sbb
cltd
leave
ss
call
add
adc
scas
or
jbe
xlat
fisttpl
call
sbb
mov
sub
ds
sbb
jge
mov
sahf
push
dec
mov
sub
das
rol
adc
pop
sti
push
gs
pop
or
dec
lahf
inc
mov
shrl
clc
std
clc
leave
adc
cmp
into
test
sub
iret
sbb
mov
push
mov
jl
ds
cmp
cmp
fiaddl
rolb
inc
loope
leave
xlat
test
js
mov
cmc
mov
jmp
jg
or
sub
xor
lds
outsb
jnp
jle
and
push
sbb
outsl
jmp
das
stc
ret
rorb
jmp
out
fcoms
insb
loopne
dec
sbb
sbb
or
fisubl
and
std
jge
mov
xchg
cmpsl
push
popa
pusha
fdivrs
jnp
dec
xor
hlt
mov
int
or
das
daa
mov
outsb
sbb
jne
dec
add
jmp
out
add
shlb
and
pusha
dec
sub
ret
or
cmp
sub
inc
test
mov
divb
or
inc
pop
test
hlt
sbb
cmp
mov
pop
iret
and
je
mov
fsubrs
cmp
sbb
jmp
mov
mov
sub
nopl
lock
fnstsw
ret
mov
xchg
vpsrlw
stos
mov
sub
mov
decl
lea
test
incl
lret
fmuls
fdivr
decl
mov
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
push
pop
adcb
jb
mov
ss
rcll
outsb
lods
push
dec
push
pop
adc
pop
adc
mov
jmp
frstor
sbbl
movsl
sub
sub
test
jecxz
pushf
sub
popa
cs
xlat
in
insb
lcall
and
lock
fdivr
push
pop
shll
fadds
or
add
push
push
lcall
mov
mov
das
add
jns
iret
test
xchg
mov
repz
cmpps
mov
and
mov
dec
dec
xchg
lret
sahf
push
pushf
mov
sub
dec
psubsw
mov
mov
repz
rolb
add
pop
loope
fwait
int
mov
or
dec
jnp
pusha
cmp
cmp
mov
jge
sub
repnz
jmp
adc
add
pop
mov
sbb
jb
mov
es
pop
and
shll
xchg
mov
push
sahf
mov
lock
push
adc
add
sbb
mov
push
fimuls
and
add
and
mov
out
mov
scas
lcall
popf
mov
fucomp
push
sub
ret
or
pop
push
jg
push
fcoms
push
xchg
sub
jns
pop
jne
stc
jmp
xor
add
test
fdivrl
dec
ret
mov
cmp
mov
sbb
out
mov
lods
cwtl
xor
in
dec
loopne
push
cmpsb
jns
or
movsb
dec
sbb
pop
daa
push
out
call
aam
dec
orb
jbe
xchg
mov
cmp
or
popf
and
vdivsd
pushf
shll
cmp
insb
aas
sub
fisubrs
std
shll
mov
jnp
jns
and
cs
sbb
std
out
push
mov
clc
lcall
dec
incl
xor
test
cld
sub
sti
rcr
or
movsb
pop
stc
xchg
pop
cmp
shll
pop
rcl
test
or
jae
cmp
cld
in
push
scas
cltd
cs
imul
xchg
sbb
in
xor
in
les
mov
push
xchg
lock
ds
mov
mov
rorl
stos
add
out
pop
clc
mov
xchg
test
mov
insb
sti
or
or
scas
mov
addr16
nop
sbb
add
mov
outsl
cmpsl
pop
xor
or
xchg
inc
iret
cmp
das
daa
ja
jle
notl
clc
inc
pop
in
fiadds
and
daa
mov
cmpb
jbe
vmovaps
push
adc
sub
pop
mov
mov
cwtl
cmp
shrl
dec
push
mov
test
loopne
mov
dec
ror
sbb
and
js
xchg
dec
mov
out
or
stos
or
mov
mulb
jge
pusha
xchg
out
imul
xchg
stos
test
nop
push
sbbl
xchg
dec
mov
sub
loopne
scas
jl
xor
cmpsb
roll
sub
call
dec
or
imul
out
scas
mov
and
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
jp
mov
stos
adc
adc
mov
xor
popa
incl
or
test
stos
jg
push
pusha
insb
sbbb
xor
mov
into
adc
adc
subb
or
movsb
loope
outsl
and
push
xor
lods
lea
jbe
dec
and
mov
jl
add
fnsave
mov
and
aam
pop
sahf
imul
hlt
stos
jns
mov
test
pop
pop
dec
sub
ficoml
test
call
sbb
icebp
xchg
lock
ret
pop
out
rcll
dec
repz
cmp
ret
int
aam
add
insl
cli
adc
jae
mov
sbb
xchg
shrb
add
les
xchg
js
xor
cltd
fucomi
test
dec
shr
sbb
inc
adc
mov
mov
ret
cltd
out
test
mov
cmp
subb
mov
mov
out
sahf
insl
ret
mov
es
movsb
cmp
cmp
into
jp
cli
leave
imul
xor
out
popa
sub
jo
movsb
scas
mov
rcll
fsubrl
bound
repnz
into
stos
std
and
gs
dec
insl
inc
sub
mov
adc
sahf
add
fs
dec
mov
xor
ss
sbb
sbb
pop
pop
ljmp
iret
or
jo
dec
and
push
mov
add
push
lret
xor
add
outsb
subl
inc
pop
ret
std
mov
data16
ret
fldl2e
mov
mov
cmpb
inc
inc
ret
addr16
sbb
arpl
stos
in
shrb
sbb
pop
lcall
xor
jmp
mov
subb
cmc
jns
or
in
ja
lret
dec
mov
pop
pop
loopne
sbb
and
xor
divl
or
orb
imul
cmc
inc
shl
aam
out
push
data16
sbb
mov
sub
insb
pop
test
loope
mov
jae
mov
pop
aad
insl
inc
ret
int3
ljmp
stos
xor
rcll
cld
jb
mull
subb
into
nop
subb
push
push
roll
dec
mov
push
movsb
cmp
call
push
div
inc
inc
lods
adc
int
mov
add
movl
mov
xchg
rcrb
cld
sbb
loopne
cld
jns
inc
mov
sti
in
pop
repz
outsb
into
jno
jns
cld
xlat
insb
and
mov
hlt
push
mov
adc
xchg
fcoms
mov
inc
rcrl
lahf
sbb
das
les
arpl
adc
mov
xor
loopne
ja
dec
rcrb
js
fdivr
addb
and
leave
lret
aam
hlt
mov
jns
mov
ror
sub
ret
add
xchg
int
js
sbb
in
adc
jnp
xor
mov
adc
mov
out
mov
repnz
pop
loope
xchg
or
pop
inc
dec
or
adc
mov
movsl
dec
insl
inc
pop
xlat
es
stc
cmc
test
cli
xor
cwtl
push
scas
sub
mov
notl
mov
mov
jmp
mov
clc
mov
sub
jle
mov
push
jo
adc
push
subl
pop
fcom
nop
dec
cmpsl
or
outsl
xchg
xor
xchg
or
jmp
inc
mov
fsubs
mov
mov
inc
aaa
or
push
adc
cmpsl
aaa
in
dec
imul
and
sti
xor
sbb
ret
fcomi
cli
shll
or
outsl
in
stos
cwtl
rcrb
pusha
scas
sub
pop
mov
xchg
lock
push
stos
mov
ret
hlt
mov
in
fadds
les
ds
pusha
addl
cmp
dec
loop
enter
jmp
add
dec
pop
push
mov
jle
sbb
cmp
iret
mov
inc
mov
arpl
fistps
lret
push
push
mov
mov
push
dec
shrb
clc
outsl
testl
pop
jae
int3
push
jle
pop
pop
xor
pusha
push
es
rcll
push
jnp
addb
rclb
xor
mov
mov
ret
xlat
lret
or
scas
sbb
shrl
pop
mov
lahf
mov
mov
sbb
pop
push
sbb
inc
in
pop
bnd
push
sbb
data16
aam
rclb
xor
sbb
pop
mov
jmp
gs
adc
sbb
jb
xchg
mov
sti
mov
xchg
fmuls
popf
cld
push
cmp
xchg
mov
sbb
xchg
push
pusha
cmp
lahf
stos
arpl
lret
push
or
gs
cmp
lock
jl
es
dec
and
or
push
mov
fmull
aas
pop
adc
cmpsb
lods
dec
sahf
jl
adc
and
or
ljmp
xchg
sti
rclb
dec
es
or
sbb
mov
ret
push
enter
mov
or
xchg
jle
cmp
xor
push
insl
into
std
popf
xchg
cmpsb
adc
jne
add
fstpt
lock
jp
std
int3
test
out
stos
push
adc
aas
cs
inc
stos
fsts
in
mov
mov
and
or
loop
andl
shrb
mov
cmp
cwtl
mov
clc
addr16
sbb
add
adc
jmp
clc
lods
rcrl
cmp
cmp
lock
loop
adcl
dec
jp
sub
mov
push
rclb
lcall
sbb
mov
arpl
push
or
xchg
enter
xchg
pusha
or
hlt
xchg
mov
fcomps
jg
in
sub
xor
fbld
iret
push
scas
sbb
aad
rolb
test
sarb
cltd
aad
lea
mov
mov
inc
testb
insl
pop
sub
pop
mov
daa
xor
pop
jo
cwtl
or
cwtl
aad
std
ss
rorl
lahf
add
mov
dec
mov
in
xchg
les
clc
sbb
sbbl
push
add
xor
popa
scas
in
loopne
adc
pop
cmpl
xor
inc
cmp
enter
pop
clc
loopne
mov
dec
sbb
jle
mov
xchg
mov
lods
ficomps
mov
mov
pop
and
sbb
xchg
adc
negl
sub
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
das
xlat
sarb
adc
adc
pop
loop
push
adc
ss
mov
adc
xor
in
sub
adc
adc
cld
leave
inc
cmpsb
loopne
or
or
popf
mov
inc
jle
jbe
dec
cmp
in
imul
or
lea
std
mov
imul
mov
mov
pop
mov
mov
fldenv
stc
scas
stos
mov
mov
mov
pop
jae
jmp
fists
mov
and
or
and
xor
sub
sti
xchg
int
adc
sbb
pop
and
sbb
cli
xchg
cmp
movsb
mov
jb
push
mov
lret
shrl
sahf
inc
lret
loopne
fs
call
push
mov
pop
mov
mov
andl
rclb
jne
popl
jg
push
or
push
lea
fwait
pop
xchg
daa
inc
mov
pop
shll
in
stc
lahf
fwait
int3
cmp
jae
xor
and
in
sbb
into
xor
enter
adc
and
js
scas
aad
shll
mov
stc
cltd
inc
cmp
xchg
je
les
imul
and
or
cs
and
shl
jg
pusha
cltd
mov
or
pushf
test
mov
adc
inc
cmp
mov
inc
movsb
lret
nop
dec
pusha
adc
insl
outsb
pop
xor
subb
daa
mov
lods
clc
sub
cmp
mov
jae
fldl
out
scas
push
mov
cltd
aas
xor
mov
fldl
add
sahf
adc
jecxz
xor
popf
sti
or
mov
mov
pop
xchg
in
pop
sbb
daa
mov
inc
aaa
mov
jmp
repz
leave
mov
jns
push
jbe
mov
loop
push
adc
dec
add
std
sahf
mov
loope
out
sub
xchg
ja
mov
sbb
sbb
jne
smsw
dec
popf
pop
scas
int
push
dec
push
lahf
sbb
jne
jns
jno
and
pushf
sbb
out
outsl
mov
push
dec
dec
adc
in
bound
in
jge
or
out
das
mov
xchg
adc
jg
cmp
xchg
ret
adc
mov
pop
mov
cmp
cmp
out
mov
shll
fistpll
ror
test
filds
rcr
xchg
out
and
add
fcmovne
movsb
iret
push
pop
aaa
jle
sbb
int3
loope
aas
mov
pop
add
scas
jmp
add
pushf
sub
stos
movsb
mov
pop
cmp
aas
pop
into
das
clc
push
lahf
lahf
pop
add
mov
scas
cmpsl
inc
push
or
jnp
cmp
xor
dec
add
pop
dec
ret
cmp
lcall
sahf
xor
pop
int3
stos
push
std
cld
leave
pushf
pop
in
sbbb
mov
fs
dec
mov
fisubrl
add
xor
repz
and
jae
jns
mov
stos
std
xchg
pusha
subb
aaa
cmpsl
cmpl
lea
sub
cs
sub
inc
jg
dec
in
leave
push
or
mov
sub
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
stos
sbb
sti
out
fisubs
dec
mov
cmpsb
call
mov
and
adc
push
jl
enter
lds
jnp
push
mov
lcall
int3
clc
scas
dec
push
pop
data16
pop
adc
xchg
cmp
sub
rcrl
daa
cltd
mov
rclb
pop
out
iret
lods
or
mov
lcall
std
je
test
sbbl
outsb
sub
mov
hlt
testb
jg
movsl
leave
push
push
iret
adc
lea
cmpb
scas
or
jmp
out
fistps
xchg
or
js
scas
adc
push
xchg
xor
xor
lahf
cmpsl
mov
fnstenv
mov
mov
imul
cld
stos
cltd
xchg
test
xchg
push
push
repnz
rclb
das
mov
gs
adc
mov
insw
adc
and
out
mov
cmp
xchg
imul
cmp
shlb
iret
icebp
sbbb
pop
aas
ret
aam
or
mov
mov
xchg
cmp
push
stc
call
inc
stos
cmp
pop
push
jne
nop
fneni(8087
iret
add
xchg
push
test
insl
hlt
xchg
ja
push
fstps
sub
push
fmull
push
pop
pop
mov
das
orl
xchg
sbb
add
dec
loope
std
cmp
fadds
out
or
jb
hlt
mov
dec
dec
cmp
ja
add
fistl
mov
out
xlat
jle
incl
enter
dec
lret
scas
jmp
xlat
sub
loopne
lcall
lret
mov
lods
ficoms
outsb
push
push
pop
loop
mov
popf
loopne
clc
mov
imul
or
imul
jge
jge
push
push
roll
push
cmc
shrb
sbb
pop
cmp
loopne
fsubs
and
sub
js
mov
mov
outsl
test
sub
push
mov
fisubrl
ret
mov
je
int3
loop
jp
xor
lret
int3
fistpl
xchg
pop
mov
pop
lods
mov
xor
add
popf
call
mov
imul
jnp
rcl
ljmp
mov
testl
rcrl
push
jl
stc
lcall
push
into
push
jmp
jne
lcall
outsl
pop
jmp
and
push
xorl
mov
mov
rcrb
stos
or
mov
mov
jle
sbb
fidivl
fs
orl
loop
js
push
sbb
xor
jg
outsl
lock
mov
sti
mov
push
sahf
jns
out
mov
and
shrd
xor
push
push
in
movsb
sti
notl
mov
and
loop
cltd
cld
scas
or
xlat
outsl
mov
fcompl
call
shll
out
hlt
and
sub
xchg
xor
add
push
sbb
fildl
stc
and
or
jl
je
mov
or
mov
test
or
cmpsb
add
inc
adc
mov
mov
int
cmpsl
jp
mov
cmp
and
popa
out
orb
xor
stc
js
repnz
pop
aaa
pop
outsb
xor
shll
and
pop
addr16
mov
sbb
mov
jnp
xchg
test
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
xchg
sbb
adc
adc
inc
fsubp
cmp
xchg
lahf
les
mov
sbb
cmp
sub
cli
repz
orb
pop
jae
rcrb
cmp
inc
pop
xor
inc
ret
dec
mul
sub
lcall
popf
fldl
or
out
movsl
mov
or
inc
push
popa
ljmp
lret
sub
pop
negb
fdivr
orb
and
loop
popa
shrl
jae
jp
jne
xor
mov
push
mov
and
fmuls
xor
pushf
int3
sbb
add
nop
xchg
aaa
push
out
mov
call
sbb
inc
popfw
test
testl
dec
jne
add
mov
test
stos
sbbb
jns
ljmp
pop
push
adc
mov
andb
mov
mov
leave
mov
inc
jae
mov
dec
pop
mov
hlt
mov
xchg
inc
fwait
jp
sub
in
and
nop
call
mov
push
push
pop
mov
sbb
mov
mov
test
lds
pop
ljmp
lods
loope
movsb
push
sbb
push
fcoms
xor
xchg
cmp
push
sarl
lahf
movsb
in
mov
dec
mov
jno
dec
movsb
jno
cmpsl
sahf
add
mov
repz
imul
jbe
sbb
pop
push
repz
ljmp
stos
jge
loope
mov
pop
push
cld
cmp
repnz
add
mov
sbb
daa
enter
data16
sub
mov
subb
pop
mov
ja
aam
dec
sub
cltd
aas
mov
test
fldcw
loope
aad
lahf
in
imul
xchg
xor
xlat
nop
leave
and
mov
jp
iret
adc
xchg
fcmovb
ficompl
xchg
jp
pop
mov
std
test
lds
and
jecxz
inc
jg
xor
nop
push
fldcw
sti
loope
cmp
jne
fs
jo
cmp
inc
js
add
fwait
cmp
pop
dec
repz
push
hlt
mov
mov
mov
sub
adc
movsl
rorb
andl
daa
sbb
stc
fsub
cmpsb
sub
mov
or
out
fadds
pop
lock
jp
xor
dec
xchg
cmc
xor
adc
in
repnz
mov
mov
mov
xchg
or
xchg
pop
sbb
xchg
dec
lea
pop
mov
sbb
shrl
out
cs
imul
dec
xchg
inc
push
in
jb
fisttpll
lea
xchg
aam
sub
lock
repnz
lahf
sbb
fwait
add
inc
ds
out
pop
fcmovu
sbb
jmp
testl
pusha
mov
mov
nop
loopne
orb
outsl
jl
out
inc
cmp
xchg
pop
lods
test
sbb
inc
outsl
cltd
jb
push
mov
repnz
mov
ret
and
xor
data16
cmc
pop
adc
lcall
mov
and
mov
sarb
dec
loopne
dec
inc
mov
daa
ret
sbb
out
outsb
rorb
test
test
pushl
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
jno
pop
sarb
pop
mov
xor
jmp
sbb
mov
add
test
pop
push
jecxz
push
inc
jno
jo
shr
addr16
mov
insl
ret
imul
subb
outsl
rcr
out
mov
xchg
int3
in
push
faddl
sub
xlat
bound
push
popf
inc
jg
cmpl
mov
mov
scas
js
aas
in
xchg
ret
cmp
dec
lret
adc
xchg
xchg
pop
out
xor
sti
push
cs
add
ss
clc
das
or
test
sub
xchg
outsb
mov
pop
sti
mov
loop
cmc
test
pop
jne
fbld
adcb
scas
mov
call
inc
out
cmc
stos
add
or
test
xor
out
orb
cmpsb
arpl
pop
insb
rcr
rorb
pop
call
sub
subl
gs
test
dec
xorl
out
pop
jae
push
push
clc
daa
fisttpll
icebp
cmp
cwtl
ljmp
mov
imul
sbb
repnz
mov
and
mov
ret
jl
into
mov
and
ja
and
jl
jp
clc
jae
loopne
cmp
cmp
pop
and
pop
inc
pop
jl
xchg
jo
adc
lods
aam
or
push
test
xchg
pop
xor
rcl
ret
push
test
mov
push
cltd
cld
cld
and
call
ret
pop
idiv
out
jp
scas
test
dec
xchg
mov
xlat
test
sti
int3
push
jl
and
add
fwait
xchg
jecxz
ds
out
dec
push
ror
push
mov
mov
push
scas
push
lock
int3
cmp
push
sarl
iret
ret
sbb
xor
loopne
cmpsl
mov
push
int
push
sbb
jmp
ss
jb
daa
pop
cltd
hlt
aas
adc
pushf
push
cmc
push
mov
aas
inc
xor
mov
inc
test
lahf
or
push
enter
pop
aad
mov
adc
inc
ffree
adc
xor
mov
pushf
bound
ja
addr16
jl
add
sahf
fldt
jns
in
inc
jmp
xchg
ja
pop
mov
sub
shrb
movsb
push
popf
rorb
cmpxchg
sti
xchg
test
lods
ret
lods
push
and
xchg
inc
pop
or
bound
inc
mov
and
xorb
jb
shrl
lock
xchg
in
push
push
sbb
cmp
sub
js
pushf
add
out
ss
out
mov
out
dec
xor
pop
stc
shll
inc
mov
and
hlt
adc
scas
sbb
mov
imul
push
repnz
push
xchg
push
cmp
ja
jp
or
mov
repnz
sti
xchg
xchg
sbb
sbb
push
pop
insb
mov
push
jne
mov
push
out
lds
and
aad
stc
in
inc
inc
pop
add
in
negl
into
xor
int3
insb
dec
add
adc
test
inc
fistl
or
jp
clc
jmp
mov
sbb
cmp
mov
and
adc
jmp
xor
mov
cmp
cli
push
into
mov
xor
or
xor
repnz
add
mov
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
popf
xor
inc
dec
adc
adc
lods
sbb
cltd
and
nop
outsb
inc
inc
sbb
movsl
std
aam
xchg
mov
stos
mov
test
enter
mov
sub
xchg
or
push
xor
pop
sbb
adc
cld
lcall
adc
xor
push
loope
xor
lods
test
ret
std
sbb
cmc
sub
cmp
in
dec
mov
pop
push
sub
cmc
mov
sbb
cmpsl
not
popf
je
xor
xchg
cmpb
je
rcll
ficoml
mov
data16
and
lret
mov
rcll
fsubrl
nop
jmp
arpl
jp
xor
jae
mov
bound
cmp
sbb
cltd
cmp
arpl
sbb
cmpxchg
loope
xchg
aam
jp
int
jo
mov
test
mov
pop
jp
pop
sub
js
pop
sarl
jnp
or
bound
sub
mov
cmp
and
add
and
pop
add
mov
push
stos
mov
push
nop
pop
test
jmp
js
les
pop
and
outsl
mov
mov
jg
popf
je
dec
test
ret
xor
fwait
mov
pop
sbb
inc
movswl
lods
ficoml
aam
orb
xchg
std
push
jne
in
dec
iret
push
jmp
mov
inc
push
mov
shrl
out
dec
cmp
adc
mov
pusha
pcmpgtb
add
lods
shll
loope
adc
sbb
sub
cmpsl
pop
xor
or
stos
xchg
jb
or
dec
dec
test
inc
int3
pop
and
cs
and
sarb
or
mov
daa
add
lea
lahf
mov
mov
or
hlt
mov
pop
lret
lahf
iret
push
bound
movsb
mov
fistps
fdivs
cmpsb
sbb
scas
sti
sbb
ret
faddp
cltd
and
aam
add
popl
scas
mov
sub
mov
es
mov
cmpl
pop
push
mov
orl
jl
cmp
movsb
inc
mov
sarb
dec
popf
stos
inc
mov
mov
add
and
test
mov
sub
dec
test
adc
cmp
lea
aas
bound
add
bnd
inc
dec
dec
adc
push
sbb
repz
popf
in
iret
int3
fdivs
sbb
xchg
popf
rclb
xchg
xchg
push
cmp
pop
mov
or
packuswb
adc
xchg
je
and
loope
adc
jmp
dec
out
pushf
daa
int3
lcall
adc
sbb
sub
mov
or
stos
imul
cmpsl
push
adc
or
xchg
add
lret
test
sub
aad
inc
sti
sbb
stos
js
mov
dec
fsts
push
dec
insb
lahf
sbb
inc
scas
in
int
pusha
lahf
xchg
lock
shlb
adc
loope
sub
jbe
in
sbb
sahf
xlat
notl
mov
test
shlb
dec
mov
mov
pop
mov
loopne
pop
les
xor
mov
call
data16
scas
adc
aaa
sub
mov
jne
cmp
scas
xor
and
popa
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
jecxz
xor
or
inc
mov
sbb
cwtl
mov
cltd
cmpsl
flds
fstps
es
lcall
xchg
loopne
lahf
mov
dec
sahf
inc
popa
adc
xor
ljmp
rolb
rcr
test
pusha
sub
dec
in
pop
enter
or
pop
test
cli
in
pop
pop
test
mov
add
mov
mov
repnz
mov
mov
and
adc
mov
and
xor
mov
sbb
dec
outsb
test
data16
sbb
jecxz
push
lret
je
mov
testb
scas
or
insl
cmp
jb
lods
outsb
fcoml
outsl
jne
cmpsb
mov
sbbl
fdivr
sti
shll
test
mov
inc
fstpt
add
ja
hlt
dec
stos
inc
pop
add
lcall
jbe
fmull
out
add
fimull
test
out
daa
fcomp
sub
mov
addl
mov
in
les
push
xlat
lds
mov
jmp
fdivs
test
pop
outsl
in
pop
pop
jmp
lods
jnp
mov
sub
mov
ljmp
shrb
or
loope
sub
ss
shl
inc
or
xor
jl
test
pop
mov
mov
inc
mov
mov
mov
repz
andl
mov
cli
mov
xchg
xor
enter
push
sub
cmp
in
inc
lcall
dec
pusha
sub
jecxz
add
mov
lds
or
mov
dec
dec
dec
pop
mov
dec
xor
inc
inc
dec
dec
sarb
and
adc
adc
push
xor
mov
rcrb
jnp
dec
scas
sub
jno
pop
mov
mov
jmp
adc
and
pop
and
sbbb
lahf
push
sub
ja
cmpsb
pop
aas
jns
jp
aaa
test
testb
leave
sub
inc
outsw
fwait
adc
mov
or
push
daa
out
fcomip
xchg
push
push
nop
push
pop
bound
filds
fwait
mov
lds
or
mov
jmp
idiv
imul
outsb
cld
mov
and
out
shll
jno
xchg
scas
popa
dec
and
daa
jne
push
jne
add
aaa
mov
int
int
inc
iret
inc
flds
inc
ja
sti
sbb
mov
stc
mov
mov
les
iret
sbb
mov
mov
fsubrs
outsl
jae
cmp
cmp
movsb
jae
pop
and
hlt
jne
pop
jecxz
mov
mov
mov
movsl
sub
popf
ljmp
mov
inc
mov
addr16
lahf
add
fildll
cld
aad
xchg
loop
out
xchg
or
push
sub
call
cmp
ja
loope
push
mov
ljmp
leave
add
adc
adc
pop
sub
fcmovbe
sub
jnp
popa
insl
test
jne
test
mov
pop
mov
mov
aad
std
push
and
pop
push
lahf
popa
push
jmp
test
cmp
je
rcl
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
mov
adc
adc
je
xor
lods
push
repz
mul
out
stos
cmc
adc
mov
aas
loop
leave
cmp
jge
add
lahf
pop
sub
sbb
mov
sbb
test
out
push
ret
das
sbb
adc
lret
pop
pop
dec
inc
rorl
xchg
jbe
or
call
xchg
cmp
add
xchg
push
add
scas
ret
into
sbb
add
adc
out
popf
mov
fadd
mov
clc
mov
sub
dec
sub
pop
and
cli
aad
cld
pushf
sar
add
add
push
rdpmc
test
fdivrl
push
insb
mov
cs
dec
stos
cmp
or
pop
xchg
cmc
adc
sub
in
sbb
push
idivl
xor
cmp
add
ret
clc
add
cs
inc
or
fimuls
int3
jge
cmpsb
lods
push
in
jge
sub
xlat
mov
inc
push
inc
inc
dec
dec
dec
push
add
ja
test
cmpsb
or
scas
add
mov
stos
fs
mov
pusha
add
jbe
inc
pop
movsb
in
lock
icebp
cmp
mov
out
mov
sub
mov
xorl
cltd
and
jle
fwait
jno
inc
mov
clc
repnz
lcall
adc
pop
sbb
inc
imul
xor
adc
test
or
std
jno
mov
pop
fs
in
cltd
mov
jae
inc
jp
imul
pop
xchg
outsb
aaa
cli
mov
mov
mov
dec
ret
imul
scas
push
call
orb
popf
pop
mov
pop
fadds
rclb
loope
cmpsl
stos
xor
movsb
jo
and
pop
aas
int
imul
imull
lock
gs
push
and
out
orl
or
dec
mov
pop
lock
in
cmp
cmp
cmpsl
cs
pop
mov
or
bound
dec
ret
jae
cmpsl
sbb
daa
inc
cmp
popa
lcall
sub
fnstsw
push
sbb
xlat
mov
push
lcall
inc
test
mov
sti
out
sahf
mov
pop
xor
fdivr
out
xchg
push
dec
decb
test
dec
shll
ss
and
sbb
and
ljmp
jp
dec
lcall
mov
xchg
mov
mov
rcrl
popa
pop
fisubrl
ret
stos
lods
and
xor
sub
jmp
xor
mov
and
mov
clc
data16
imul
or
pop
pop
jl
test
xor
xchg
cli
mov
mov
xchg
lret
dec
sbb
adc
xchg
test
mov
xchg
adc
arpl
popa
popl
sbb
xor
data16
fs
pop
lcall
inc
fstps
mov
lret
mov
add
stc
lods
pop
push
and
inc
enter
scas
in
jbe
mov
daa
fnstcw
xor
ficoml
rcrl
clc
xchg
stos
xchg
push
xchg
mov
es
test
ret
dec
std
out
xlat
test
shr
lcall
addr16
fcmovnu
pop
repz
pop
pop
mov
dec
adc
or
add
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
out
pushf
lods
sysenter
adc
adc
pusha
pop
daa
ret
scas
and
stos
in
push
pop
dec
pusha
mov
and
sbb
cmp
dec
js
push
inc
xorb
out
inc
setle
jl
jae
push
sbb
aaa
dec
xchg
mov
in
sbb
mov
ds
idivl
push
lret
aad
mov
xchg
or
sub
fmul
ss
mov
movsb
bound
addl
mov
jae
iret
sbb
xchg
and
cli
lock
aaa
mul
or
push
int3
and
mov
pop
in
mov
xchg
jb
cmp
insb
lods
test
ret
mov
xor
jge
lcall
inc
cmp
pushf
cmp
in
push
fisubl
lahf
jecxz
jge,pn
and
jl
out
mov
call
add
aad
add
or
jo
xorb
mov
jae
dec
mov
xor
icebp
push
xchg
cmc
and
pop
je
jno
insl
sbb
add
jp
or
xchg
arpl
cltd
sub
stc
mov
push
add
adc
mov
mov
mov
dec
cmp
inc
repnz
ss
xor
xorl
and
or
pusha
push
jne
inc
dec
rol
and
lods
enter
jecxz
jl
cs
pop
cli
js
pushf
gs
or
lret
dec
xchg
lods
xchg
mov
je
lahf
sbb
ficomps
jle
sbb
lds
call
xor
jmp
dec
in
scas
int3
cs
leave
sar
or
std
xchg
stc
outsl
sub
shll
loop
imul
dec
hlt
bound
xchg
push
cmp
and
mov
sbb
rcrl
adc
iret
jne
xor
lds
call
mov
int
rcrb
mov
pusha
dec
adc
cmp
subb
cmpb
js
mov
cltd
xor
push
sub
push
inc
inc
das
or
mov
xor
addr16
sub
pop
mov
push
sti
jns
push
dec
adc
inc
in
mov
rcrb
test
addr16
dec
stos
sub
andb
out
mov
enter
or
add
or
lcall
cmc
lea
stos
xchg
push
mov
pop
jl
imul
aam
dec
ret
mov
int3
dec
ss
cmc
test
std
or
inc
pop
sub
mov
lcall
or
pop
imul
nop
adc
cmpsb
lahf
pop
jbe
sbb
xchg
mov
loope
mov
lock
mov
loope
std
je
ret
cmp
adc
loopne
test
aad
pop
sub
push
and
cmp
dec
sbb
add
in
dec
ja
hlt
push
outsl
jmp
int3
bound
int3
daa
cmp
stc
repnz
movsl
jne
mov
mov
aad
jnp
out
cld
mov
shll
into
mov
hlt
push
scas
dec
call
dec
cli
lock
pop
jns
loope
xchg
popa
sarb
repz
jns
gs
rcrl
imul
push
jle
push
sub
xchg
sbb
enter
and
xlat
jo
adc
push
mov
loope
call
jbe
ja
adc
jno
or
aad
push
dec
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
scas
insb
cmpsl
xor
adc
pop
aam
inc
pop
leave
repnz
and
push
loope
shlb
mov
lock
leave
inc
popf
out
or
ret
cmp
and
mov
std
xor
pop
jb
sbb
pushf
inc
pusha
sbb
std
add
mov
sahf
mov
cmp
or
lods
dec
mov
inc
pop
jno
nop
sti
sub
aaa
popa
xor
test
dec
or
jo
mov
les
roll
pop
push
inc
xor
aas
inc
ret
in
gs
mov
xor
sub
movsl
push
bound
adc
jmp
sub
cmp
sub
and
stc
fcomps
sahf
cli
sub
int3
sti
call
iret
imul
outsb
inc
iret
enter
pop
pushw
or
fisubrs
adc
test
shll
mov
dec
mov
orb
push
inc
adc
push
inc
inc
xchg
clc
or
pop
out
pop
loopne
cmc
dec
test
mov
xchg
rcr
ror
test
ja
pop
inc
dec
sub
pop
add
cmp
fadds
leave
jmp
bound
jg
jbe
out
mov
arpl
int3
loop
inc
jns
push
ret
popa
mov
add
or
xor
fwait
cmc
je
nop
cltd
divl
test
inc
fcmovnu
lods
mov
aam
scas
ret
mov
pop
cmc
movsb
sbb
loopne
outsl
jecxz
mov
aas
mov
push
popl
clc
test
pop
mov
cmp
cmc
jg
pop
lahf
into
sub
repnz
xlat
aam
fisttpll
iret
frstor
jns
call
stc
sahf
repz
cltd
push
js
cmp
pushw
inc
sbb
mov
push
pop
outsl
shl
jnp
ret
sub
inc
mov
xchg
sub
mov
sub
push
or
sarl
mov
jnp
mov
cmpsl
icebp
pop
mov
imul
daa
loopne
gs
ljmp
adc
sub
push
sub
adc
out
movsl
icebp
out
inc
lret
mov
or
jno
or
adc
aas
push
inc
push
lods
popf
xchg
testb
cwtl
inc
fldt
imul
pop
mov
pop
sbb
adc
cld
jle
mov
sbb
inc
sub
daa
cltd
or
out
mov
adc
das
loop
mov
sahf
arpl
loope
pop
cli
mov
setle
mov
mov
and
ja
leave
repz
sahf
adc
fucomi
mov
jbe
jg
loopne
divl
cmp
push
or
sub
sbb
nop
lret
jle
adc
mov
insb
or
fiadds
or
push
adc
cmp
xor
mov
pop
clc
sub
in
xlat
faddp
hlt
repnz
aam
lcall
insb
xchg
xor
mov
push
enter
ss
jge
addr16
mov
cmpsl
xchg
pushf
fistl
loop
jg
xchg
xorb
and
adc
pop
add
and
je
adc
adc
inc
shl
dec
xchg
jbe
stc
in
hlt
out
adc
lea
popa
push
fadds
or
addr16
mov
sbb
cltd
outsl
adc
adc
xor
outsb
xchg
adc
inc
adc
jecxz
sbb
jg
rol
push
mov
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
enter
inc
sub
adc
inc
mov
inc
jmp
cmc
dec
enter
push
lahf
mov
outsl
xor
adc
jnp
push
mov
das
aad
mov
call
mov
sub
jb
fisubs
jae
out
or
dec
lcall
iret
cmpsl
cmp
std
pop
sub
es
sub
mov
jae
lods
out
frstor
adc
push
mov
mov
pop
jp,pn
mov
inc
daa
and
fsubrl
xchg
in
sub
popf
imul
sbb
cli
into
and
insb
jb
psubb
mov
push
xchg
out
adc
jge
mov
fdivl
cs
dec
fcoml
inc
adc
lock
pop
mov
and
jl
pop
movd
mov
sti
std
cmp
cmp
sahf
sahf
cld
inc
cmp
cwtl
xor
vsubss
fiaddl
pop
or
ret
int
pop
pop
cld
mov
movsb
push
pop
or
push
daa
cmp
push
xchg
test
and
lea
fsub
sub
xor
fiaddl
in
out
ljmp
jns
int
in
addr16
lea
fbld
sbb
sub
fiaddl
cld
push
xorl
enter
dec
mov
pop
popf
loop
dec
jmp
mov
ret
jge
mov
and
loop
or
pop
mov
mov
in
nop
jae
and
lahf
and
cwtl
lahf
sub
arpl
mov
jg
mov
dec
adc
inc
orb
jae
cltd
mov
call
sahf
insl
add
cmc
jle
mov
jns
cli
insl
cmp
add
mov
aas
ds
rcrb
test
push
daa
add
mov
ret
in
je
mov
cli
push
xor
sbb
movzbl
shlb
movsb
and
and
pushl
fisttps
push
js
jno
testb
ds
xor
rcll
nop
mov
in
std
and
and
movsl
jecxz
into
add
add
push
or
mov
xchg
aas
xchg
fld
jbe
jb
inc
inc
jbe
mov
mov
mov
sub
fbstp
pushf
sub
and
inc
push
cmpsb
movb
pop
test
mov
sub
adc
je
fnstcw
mov
mov
aad
inc
rorb
pop
and
test
enter
lods
mov
or
jmp
psubusw
icebp
xchg
jae
add
jb
push
movsb
or
jne
push
push
repnz
dec
movsb
dec
xchg
jge
dec
hlt
xchg
hlt
mov
sbb
lcall
pop
mov
insl
outsb
out
sbb
lcall
xchg
lock
sub
xchg
insb
sub
test
push
sbb
xor
js
xor
fs
stc
cld
jne
shrl
push
cwtl
in
aas
lret
adcl
inc
inc
mov
pop
sub
popf
sbb
loopne
leave
xor
pop
fistps
xchg
movl
jp
shll
pushf
mov
adc
stos
xor
xchg
insl
sbb
scas
xchg
mov
dec
cwtl
fidivl
sub
ds
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
ror
enter
xchg
mov
pop
and
or
js
mov
sub
es
or
test
imul
movsl
js
xchg
call
mov
pop
daa
xchg
sbb
sbb
movsb
pop
test
mov
insb
xor
inc
in
dec
xchg
mov
out
inc
or
inc
ldmxcsr
dec
xlat
mov
xchg
and
jns
roll
jg
in
sbb
cmpsl
in
push
rol
mov
fmul
and
or
ss
ljmp
or
xorl
dec
pop
mov
inc
cs
pop
sbbb
gs
jg
jno
cmc
insl
ret
std
jl
mov
mov
inc
clc
aas
push
mov
add
int
loop
xchg
xadd
das
cltd
lcall
xor
mov
dec
sub
cmpsl
adc
cld
cmp
shlb
imul
aaa
push
push
out
mov
jno
push
push
jo
sub
fists
cltd
je
rcll
ja
fistps
pop
cld
sub
mov
mov
nop
add
push
adcb
xor
sub
or
jae
scas
or
out
negb
in
mov
ljmp
mov
popl
mov
sub
fsubl
dec
adc
push
outsb
in
idivb
shrb
and
into
dec
scas
mov
xor
bound
out
adc
lods
mulb
mov
mov
xchg
pop
push
neg
aas
pop
xchg
sti
xchg
enter
lret
xchg
push
push
mov
xor
push
xlat
mov
or
push
repnz
adc
loop
insb
gs
les
adc
lds
jl
xchg
inc
sbb
fimuls
into
push
test
xor
test
js
and
mov
shrb
jp
cmpsl
imul
push
fs
mov
mov
fisubl
imul
sbb
or
in
adc
or
nop
adc
inc
cmp
aam
mov
lods
mov
fisttpll
imul
jmp
jae
xor
inc
daa
or
push
sbb
adcl
sbb
jns
mov
je
cmp
add
inc
fcmovbe
inc
stc
cli
ret
stc
popf
mov
cmpsl
cmp
or
repz
mov
sub
mov
mov
int
inc
jae
push
add
out
jecxz
pop
lahf
adc
jb
icebp
mov
jp
mov
xchg
xchg
xchg
pop
iret
mov
shlb
daa
testb
add
fiadds
xor
pop
dec
scas
push
xchg
aaa
add
sbb
or
lahf
xor
ficomps
dec
dec
les
xchg
mull
sbb
add
loop
sub
les
mov
xchg
xchg
jno
add
pop
push
mov
ss
inc
shll
pushf
sbb
xchg
cld
or
cmc
lahf
cmp
rcrb
loope
or
and
or
push
fcmovb
lcall
sarb
fsubrp
sub
popf
cmpsl
push
cmp
movsb
ds
in
mov
sbb
faddl
adc
popf
lahf
add
inc
xchg
lret
int
testb
lcall
aam
stc
or
iret
push
add
xchg
push
add
mov
mov
mov
jmp
or
mov
adc
adc
push
sbb
adc
hlt
pop
sbb
daa
lcall
scas
xor
push
jnp
dec
aaa
test
cmc
int
mov
out
adc
mov
cmpsl
in
in
hlt
js
orb
out
xor
xchg
mov
arpl
shrl
aad
or
out
pop
inc
mov
mov
adc
pop
adc
out
lahf
ss
in
inc
loope
jno
bound
out
mov
lcall
jns
or
out
testl
pop
into
mov
push
test
scas
jmp
mov
jns
stos
and
andl
add
dec
cmpsl
xchg
in
mov
fiadds
mov
or
pop
inc
orb
cmp
mov
lds
dec
cltd
cli
and
push
bound
mov
and
pushf
in
sbb
or
sbb
and
je
jno
std
in
lds
jmp
stos
mov
mov
xlat
in
lods
cmp
dec
inc
pusha
cmp
in
add
push
add
in
push
aas
pushf
ja
aas
fucompp
nop
add
sub
or
gs
pop
push
test
sbb
cmpsb
jecxz
add
cmc
faddl
fldl
jnp
lods
mov
cltd
cs
clc
sbb
mov
adc
int
sbbl
mov
pusha
adc
nop
outsl
xchg
int3
push
push
dec
std
cmpsl
imul
jmp
jg
and
adc
stos
dec
dec
mov
jg
dec
cmp
mov
fadd
mov
add
fs
cmp
js
sti
xor
xor
js
shll
dec
lret
pop
cmp
pop
loope
insl
xchg
movsb
into
mov
xor
int
lods
loope
jb
pop
rcl
xchg
dec
out
roll
and
mov
stos
insb
outsl
cmp
xor
jno
addl
popl
inc
pusha
fsubl
rorb
fisubl
mov
xor
and
loope
pop
test
cmp
jo
push
sub
adc
add
xor
lret
popa
outsl
mov
aad
inc
mov
pop
hlt
push
jg
mov
shrb
subb
cmp
aas
sub
lds
test
adc
les
enter
mov
lret
or
scas
loopne
out
nop
in
mov
sti
rol
fcmovne
lods
jae
cmp
mov
out
test
push
in
mov
js
mov
jmp
lea
insb
inc
or
push
rcll
sub
es
ret
mov
sub
lods
ljmp
add
cmp
jns
sbb
cmp
dec
mov
cmpsl
inc
out
and
dec
jo
test
and
fisttps
stos
xchg
fnstsw
fwait
jge
or
lea
add
dec
call
dec
aad
push
scas
call
inc
or
pop
mov
xor
mov
arpl
adc
das
jg
movsl
push
inc
fs
aas
xchg
addr16
push
pushf
mov
mov
add
jmp
push
mov
sarl
mov
fisubrl
jae
add
aaa
fsub
pop
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
or
lods
or
adc
adc
clc
adc
mov
inc
cwtl
ret
mov
notl
lcall
fistl
outsw
aam
lret
sub
or
lods
aas
inc
sub
xchg
xchg
adc
imul
inc
shll
arpl
fsub
nop
in
ja
fiaddl
cmpsb
fidivs
adc
iret
lods
jbe
mov
je
fcompl
int
xchg
subl
clc
insl
fwait
mov
repz
pmaxsw
les
fwait
in
push
pop
ret
mov
push
lret
cmp
mov
adcl
repz
clc
orl
pop
jo
rcll
push
xchg
xchg
lahf
das
dec
xchg
fcmovne
add
adc
fmuls
lods
ret
cmpsb
pushf
lret
jmp
and
pop
push
and
and
add
daa
addb
lock
lcall
cs
test
xor
cs
cli
mov
cmp
int
andb
pusha
push
lods
insl
mov
cli
into
jo
out
mov
sbb
ds
lret
cmp
movsb
xchg
and
rcrb
pop
add
aam
push
pop
out
mov
or
outsl
inc
xorl
sbb
in
aaa
adc
inc
mov
les
xchg
sbb
cmp
mov
inc
jno
outsl
jle
and
dec
imul
mov
xchg
adc
mov
into
mov
sbb
mov
sub
xor
jp
rclb
mov
push
and
outsb
add
enter
jle
fmulp
out
sahf
jle
xor
push
bound
lret
xchg
mov
xchg
sub
inc
cld
cmp
mov
sub
hlt
push
fsubp
add
imulb
hlt
or
inc
inc
adc
in
mov
bound
cmp
data16
or
aam
enter
hlt
sbb
cmpsl
ja
mov
add
xchg
add
jg
lods
lret
inc
les
fnstenv
es
add
dec
jb
lcall
fwait
ljmp
sub
mov
out
loop
je
inc
inc
popa
repz
lahf
fcmovnbe
in
mov
xchg
jg
sbb
xchg
cwtl
lock
cwtl
mov
mov
pushf
addr16
fcmovne
xor
aas
cmp
adc
nop
dec
inc
gs
cmp
fidivs
roll
mov
loop
aaa
testb
adc
leave
pop
repz
mov
push
jl
ds
ficoml
shll
loop
dec
loop
add
mov
inc
xchg
lods
inc
push
jg
push
xchg
adc
aad
mov
inc
ds
nop
sub
stos
jne
push
sub
clc
jbe
xor
push
ljmp
push
mov
xor
add
or
sbb
push
sbb
xor
mov
fldl
mov
pop
repz
ret
ljmp
popa
hlt
stos
jne
repz
pop
mov
cmp
pop
cmp
subl
inc
xor
inc
fmull
outsb
imul
addb
movsl
push
pop
int3
adc
repnz
test
and
scas
push
adc
mov
jl
mov
aad
rorb
stos
test
in
scas
push
or
jbe
test
add
add
adc
add
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
cmp
clc
xor
push
push
xchg
call
les
add
mov
ds
mov
dec
out
push
push
cli
fnstenv
and
leave
movsl
and
cmpsl
lods
test
inc
orl
fstp
mov
subb
cmpsb
sbb
sahf
std
jns
pop
stc
cld
clc
xchg
fcomps
sbb
call
xchg
push
lock
sbb
aaa
lds
push
sub
fs
and
in
sbb
insl
leave
mov
pop
cwtl
mov
sarb
jl
pop
add
les
daa
and
stc
push
dec
push
imul
mov
insl
idivl
out
popa
test
imul
push
test
and
pop
subl
lret
loop
inc
or
lret
je
and
cli
xchg
dec
xor
pop
adc
es
sub
inc
push
or
in
xchg
fdivs
test
and
dec
jmp
int
add
inc
imul
lahf
and
pop
and
cwtl
sbb
das
imul
stos
je
adc
ret
pop
xor
imull
mov
xchg
mov
dec
and
sbb
fs
pop
push
add
lret
icebp
imul
shll
jo
sub
mull
push
xor
sub
outsb
xchg
leave
adcl
out
dec
cs
sbbl
inc
sub
inc
lret
pushf
mov
out
bound
lods
loope
mov
jmp
mov
sbb
pop
loopne
xchg
incl
mov
stos
scas
sbb
fsubr
lahf
mov
cmp
add
fmuls
cli
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
