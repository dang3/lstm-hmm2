push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
mov
addl
subl
sub
cmp
jp
jbe
fidivl
jae
dec
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
pop
and
jl
mov
add
cwtl
cli
bound
pop
or
and
cmp
dec
rorl
adc
les
cmc
das
or
sub
inc
cmc
or
and
cmp
inc
sbb
dec
repz
pop
bound
test
mov
pushl
loopne
pop
dec
adc
mov
or
cli
out
insl
outsb
daa
push
pop
roll
pop
pop
in
in
and
jne
sbb
lock
pop
sti
sub
enter
loop
and
fdivrp
js
imul
push
popf
push
cmp
int
fs
aas
roll
mov
addl
adc
movsb
push
mov
push
jmp
int
or
js
int3
ja
push
ja
sub
xor
xlat
shrb
jne
fwait
sbb
scas
push
add
in
xchg
mov
shlb
jl
aas
pop
aad
shr
mov
mov
je
into
insl
inc
pushf
aad
and
shrb
push
push
mov
adc
movsl
xor
adc
or
xor
mov
mov
jnp
lds
xor
lods
push
sub
sub
and
aam
int
push
or
in
je
inc
cmp
sbb
jne
mov
lret
fs
fbld
stos
mov
jns
lahf
sarb
daa
inc
xorb
push
in
popf
data16
jnp
xchg
fidivrl
mov
dec
push
out
pushf
loop
loope
lods
cmpl
mov
sbb
cmp
cmp
jmp
pop
inc
adc
dec
rcr
icebp
outsb
test
jnp
insb
adc
add
mov
dec
or
and
xchg
xor
scas
mov
inc
sbb
adc
push
in
add
lock
mov
mov
jo
loopne
push
fistpll
lea
adc
stos
icebp
test
cmp
lods
pop
lods
aas
cmp
pusha
rorb
data16
or
mov
mov
xchg
xchg
mov
aad
push
int3
dec
les
fistpll
mov
cmp
sahf
sub
pusha
in
dec
cmpsb
inc
sub
aaa
pushf
bound
adc
mov
jne
filds
fnsave
subb
sbb
loope
pop
mov
mov
push
or
outsl
jnp
push
mov
mov
pop
dec
sbb
enter
ds
movsb
xor
outsl
xor
or
jae
mov
cmpsl
pop
xor
jno
jbe
lock
mov
mov
out
pop
mov
aas
leave
cmp
mov
push
scas
pop
xor
fistpll
popf
mov
or
cmp
jno
js
imul
js
pop
fcomi
mov
or
scas
nop
xchg
movsb
mov
xor
inc
imul
adc
sub
xor
mov
cs
cmpsl
and
daa
outsb
or
cld
mov
imul
jne
lret
int3
jno
fwait
mov
dec
popl
loop
pusha
out
cmpsb
stos
sub
jo
aaa
and
add
pop
pop
jne
jle
cmp
aad
dec
xor
mov
test
push
mov
enter
clc
xor
xlat
mov
test
cld
sbb
adc
add
sar
add
sub
mov
mov
sbb
sbb
ljmp
test
cmp
fiaddl
iret
cmp
in
in
std
jno
nop
mov
int3
mov
sbb
test
out
iret
out
test
mov
and
mov
push
pop
push
std
xor
ret
inc
shll
dec
cli
scas
fs
jbe
je
call
lret
cmp
push
fisttpll
mov
lock
and
inc
sub
sub
xor
pop
out
mov
js
in
shrl
enter
cmp
pop
mov
in
scas
iret
sbb
repz
mov
iret
mov
or
xlat
jle
pop
cli
adcl
movl
bound
mov
lret
push
movsb
jge
cmpb
jo
xchg
mov
mov
sbb
or
outsb
mov
or
or
inc
dec
and
in
mov
sti
jbe
scas
and
mov
shr
push
out
sbb
ret
fldl
sub
sub
in
cs
dec
mov
mov
jmp
xor
mov
insl
sbb
xorb
fisubs
out
les
popf
ss
inc
or
test
xor
rolb
jge
mov
xlat
sub
push
hlt
lahf
mov
push
xchg
icebp
push
mov
shl
mov
in
pmulhuw
call
stos
xchg
dec
sbb
adc
push
test
xchg
jae
loope
pop
daa
xor
stc
and
inc
in
lret
jg
cmpsl
pop
fistps
repnz
clc
addr16
push
jne
cli
repnz
ljmp
jge
push
push
and
int3
add
mov
pop
add
jl
sbb
pop
cmp
pusha
and
lcall
cwtl
out
sbb
addr16
in
sbb
xchg
push
push
sbb
and
jecxz
sbb
aad
lcall
aam
and
adc
pusha
and
mov
adcl
outsb
rclb
mov
and
xchg
adc
mov
and
movsb
jg
dec
movsb
scas
sar
xor
xor
fisubrl
cs
dec
fnstsw
fisubl
and
add
mov
mov
les
loop
xor
test
rorl
mov
jecxz
xor
imul
dec
fstl
rolb
pop
mov
arpl
and
mov
inc
aam
outsl
loop
push
lcall
out
cmp
adc
inc
jecxz
push
mov
mov
add
leave
adc
xor
test
lret
dec
cmp
testl
fstpl
mov
mov
inc
in
sahf
mov
xor
inc
psubusb
and
dec
jae
dec
in
mov
mov
mov
sub
dec
stos
cmc
xchg
fstp
shlb
xor
xchg
leave
addr16
xor
cs
aad
ret
adc
addb
jno
dec
and
jge
cmp
cmp
fld
dec
push
pop
movsb
stos
sbb
mov
sub
push
sub
cmpsl
sub
jmp
xchg
out
addr16
add
or
stc
xchg
sbbb
adc
and
fbstp
in
mov
xchg
xchg
out
or
sub
testb
fistpl
jmp
xchg
pop
out
lea
test
icebp
push
or
push
mov
arpl
nop
mov
idivb
dec
cmp
enter
mov
aas
imul
insb
mov
xchg
ror
iret
stos
mov
rcrb
mov
loope
pop
loop
lds
insl
call
subl
nop
jno
push
mov
fwait
rcl
push
std
mov
and
push
out
push
rcl
dec
xor
inc
xchg
mov
xor
jp
out
arpl
in
cmp
push
jno
cmp
mov
iret
daa
loop
jp
mov
cwtl
jl
ljmp
jge
pop
aaa
out
or
mov
xor
lret
clc
jae
lahf
mov
fxam
clc
mov
aam
pop
jbe
jecxz
call
out
mov
xor
mov
lods
mov
mov
movsb
xor
push
jle
and
es
inc
das
mov
jmp
dec
pop
adc
jg
push
and
and
fldenv
add
popa
loope
ret
ss
and
jno
stc
sbb
pop
out
out
aad
dec
push
or
xchg
and
rorl
jb
and
inc
xchg
push
push
fistl
pop
xor
mov
cli
jmp
push
pop
push
mov
jp
cmp
lahf
sbb
fcmovb
cld
jbe
sub
call
add
push
stos
pop
mov
cmp
test
repnz
pushf
and
adc
sysenter
add
int3
clc
or
cmp
cwtl
push
testl
adc
addb
sbb
or
sub
popa
and
push
loope
pop
adc
mov
imul
push
call
xchg
and
mov
in
xor
sbb
xor
sbb
mov
dec
xor
sbb
sbb
jo
inc
xor
pop
xor
scas
ret
mov
push
mov
clc
xchg
push
sub
hlt
jg
imul
push
movsl
cwtl
sbb
adc
test
movl
test
fwait
ja
lret
lea
daa
and
cmp
int
fstpt
in
sarl
mov
fadds
mov
lea
jb
xor
xchg
rcrb
xchg
mov
clc
pop
inc
add
sub
call
sbb
scas
mov
mov
fwait
cmp
sbb
mov
push
cmpsb
jge
stos
push
push
fldenv
rcrl
mov
pop
add
pop
pop
push
bound
daa
adc
push
or
mov
push
push
mov
pop
sbb
push
push
mov
mov
inc
and
movsl
dec
outsl
aas
xchg
pop
push
sub
data16
adc
sub
pop
jl
mov
xchg
or
stos
and
imul
add
sbb
xchg
or
mov
shlb
adc
mov
xor
xchg
inc
cmp
test
jae
rcr
sbb
out
cmpsl
out
leave
sahf
jns
or
in
adc
fistps
pop
dec
daa
lea
pusha
inc
inc
jns
push
mov
fistpl
daa
daa
adc
sub
fstps
pusha
pop
push
aam
aam
add
clc
mov
test
lea
mov
call
inc
add
jp
push
stc
cmp
xor
jge
lods
rorb
sbb
jp
push
mov
jmp
mov
xor
and
push
insb
pop
movsl
arpl
ja
push
ja
dec
mov
pop
xchg
adc
and
dec
dec
ror
jbe
adc
and
scas
jge
mov
lock
jae
lret
stc
mov
lods
xor
jne
nop
nop
fistl
dec
pop
stos
push
xchg
sarl
mov
adc
movsl
aam
sub
aad
dec
scas
in
inc
test
mov
pushf
in
mov
cmpsb
pop
and
xlat
pushf
js
dec
hlt
les
mov
mov
jo
mov
mov
pop
push
mov
sbb
inc
adc
jl
mov
xchg
adc
xor
jbe
cmc
cltd
mov
jne
enter
xchg
adc
jno
or
bound
add
cmp
dec
cmp
aas
sti
addl
fs
fisttpll
fmul
in
pop
sub
fidivrs
xchg
mov
push
sub
leave
pop
inc
out
pop
sub
daa
jmp
xor
inc
dec
popf
gs
bound
xor
adc
mov
repnz
adc
or
pop
in
mov
dec
je
cwtl
mov
add
cmpsb
ss
rcll
cmp
lahf
movsb
jns
int3
push
fidivl
std
call
outsb
mov
mov
orb
addl
stc
fldl
mov
pop
inc
mov
mov
inc
mov
push
or
sarl
xor
ds
sbb
sbb
dec
aad
push
mov
cmp
roll
in
jo
mov
iret
push
dec
les
lods
in
aad
dec
inc
lret
mov
cltd
dec
pop
cmp
lret
adc
rorl
or
test
add
mov
cmp
fidivrl
jae
rcrb
vphsubdq
jno
ret
rcll
fsts
ds
cmp
dec
adc
stos
inc
mov
mov
loop
push
sub
fidivrl
in
cmp
jns
fldl
fdivr
std
movsb
or
xor
mov
push
addr16
xchg
and
sbb
adc
fcoms
mov
lahf
mov
or
ret
jbe
xchg
scas
and
xchg
addr16
in
xchg
adc
jb
dec
sbbb
mov
imul
cmp
test
out
dec
aaa
fistl
loope
xorl
mov
test
add
jecxz
adc
push
mov
mov
and
sahf
je
leave
jnp
movsb
aas
dec
adc
in
sbb
icebp
movsl
jne
fnsave
pop
repnz
xor
addr16
dec
fwait
jae
xor
loop
push
es
mov
nop
jae
outsb
mov
arpl
test
ret
std
pushf
xchg
fidivrl
test
subb
test
dec
xchg
std
sar
mov
popa
or
mov
cmp
mov
inc
mov
sbb
adc
lret
pop
es
xchg
dec
dec
test
imul
jbe
jnp
pop
or
add
and
lods
cltd
push
xorl
dec
out
jecxz
mov
out
pop
push
je
fxch
jae
outsl
in
cmp
orl
inc
xor
sahf
stc
testl
test
or
mov
movsb
stc
push
cli
jns
loop
mov
and
mov
push
das
xchg
xor
test
out
sub
inc
dec
lods
je
loope
pop
mov
add
pop
push
lods
out
jnp
mov
int3
push
mov
clc
fimull
mov
orl
dec
test
pop
jo
mul
das
fcmovne
inc
cmp
sbb
ss
fmull
and
loopne
pushl
adc
add
push
pop
dec
ljmp
jp
loop
jg
data16
rol
aam
jge
ds
jle
fsubrs
jmp
jl
movsl
fcompl
sub
gs
imul
sbb
sub
pop
call
xchg
mov
lahf
sbb
or
mov
popa
js
test
rorb
mov
lds
out
cmpsl
sbb
ret
aam
dec
fs
mov
mov
pop
outsb
jmp
inc
or
mov
clc
sbb
lret
lods
repnz
sub
sti
nop
jnp
rcll
sbb
popa
xchg
lcall
sub
repnz
mov
test
lods
or
push
mov
in
adc
inc
imul
sbb
scas
cwtl
sub
inc
sbb
jnp
mov
popa
cmpsb
add
repnz
mov
sbb
mov
es
pusha
gs
or
sahf
aam
nop
daa
jbe
icebp
mov
cs
xchg
outsl
mov
dec
in
outsl
cmp
pop
mov
mov
mov
pop
sub
aas
mov
mov
dec
pop
les
mov
repz
jle
jmp
pop
inc
push
jb
bound
outsl
pop
dec
gs
mov
cmp
mov
push
cs
mov
int3
fwait
mul
xchg
cwtl
lcall
mov
ljmp
cmc
pop
xchg
addr16
sub
lods
mov
daa
or
jp
pop
loopne
and
cld
jecxz
sub
or
outsb
inc
push
andl
jg
fldt
sub
mov
jle
adc
cmp
lock
cli
test
sub
ss
dec
aam
push
mov
mov
pop
gs
inc
mov
jp
out
fbstp
and
ret
idivb
nop
add
lret
std
repnz
movsb
mov
out
jbe
sbb
mov
fidivrs
lahf
cmc
mov
xchg
push
mov
data16
leave
add
push
cld
xor
lahf
sti
jno
jno
dec
push
hlt
adc
testb
mull
icebp
mov
test
sub
push
inc
shrb
mov
mov
add
ja
into
inc
lret
push
push
fcmovb
ret
jmp
sub
mov
cmpsb
adc
call
data16
repz
xor
mov
fsubl
xchg
addr16
and
inc
sarl
loop
dec
mov
icebp
push
push
data16
add
or
add
sbb
mov
mov
stos
xchg
test
mov
push
imul
sub
cmp
push
arpl
and
jne
dec
mov
call
xchg
leave
jl
inc
jmp
lahf
jle
es
cmc
stos
arpl
or
es
movsb
daa
ficompl
jmp
mov
sbb
cs
mov
dec
dec
js
jl
mov
loopne
gs
jnp
mov
stos
das
mov
cmpl
cmc
fcmovne
sahf
jmp
lods
nop
addr16
jg
out
and
push
dec
inc
push
mov
jns
repnz
or
jns
enter
loope
jo
and
arpl
in
mov
clc
inc
jbe
test
movsl
jge
pop
shll
cwtl
push
pop
shrb
movsb
leave
cmpb
and
xlat
pop
fmull
into
or
sbb
fldt
enter
imul
mov
insl
and
loopne
mov
cli
out
sarb
aaa
jle
shlb
jecxz
faddl
insl
rol
stos
jmp
cli
sti
sbb
sub
xchg
mov
cld
movsl
mov
pop
push
pop
ja
and
mov
xchg
dec
lods
or
into
dec
sub
and
sti
test
rcll
cmp
push
int
pop
out
loopne
mov
fdivrs
loopne
movsl
pop
add
adc
das
shlb
pop
lret
and
add
mov
sub
push
stos
scas
push
push
and
push
mov
outsb
rolb
into
push
xor
repz
jnp
mov
pop
xor
cld
jns
push
pop
aas
and
filds
cmp
or
mov
jmp
jns
jb
mov
and
idivb
lret
mov
aas
xor
and
sub
sbb
adc
mov
pop
and
mov
ror
mov
mov
fcompl
or
jbe
dec
imul
lea
loop
add
movsb
add
ret
stos
mov
mov
sub
data16
jnp
push
hlt
lret
mov
dec
repz
mov
xchg
mov
lcall
add
inc
aaa
push
movsb
movsl
test
mov
lods
xchg
lods
out
aaa
mov
adc
mov
pushw
pushf
xchg
jecxz
push
push
adc
pop
push
lret
jo
lock
pop
inc
pop
add
mov
in
cmp
imul
pop
leave
js
popf
in
into
dec
mov
arpl
sub
pop
pop
ficompl
add
paddsw
ja
enter
or
pop
push
iret
pop
sbb
xchg
test
xchg
mov
fwait
lock
mov
stos
mov
jmp
and
jns
push
cld
lods
push
lods
sub
lret
cmp
jl
repz
cmc
lcall
cmp
call
push
mov
jo
in
jg
cltd
addr16
pop
add
jmp
bound
cmp
pop
leave
jne
sbb
ret
dec
add
mov
sub
in
jmp
fcomip
outsl
pop
push
cmp
fstpt
scas
sbb
ss
mov
jmp
rcrb
push
or
scas
push
push
out
lret
pop
nop
sub
mov
push
and
push
mov
adc
out
cld
call
inc
add
inc
orl
lds
inc
lret
push
cmp
jb
push
sub
sbb
cmp
roll
sbb
negb
leave
push
mov
gs
ljmp
xor
das
jb
aad
push
push
adc
cs
push
into
icebp
lds
cmp
add
negl
inc
jp
or
outsl
push
xchg
bound
cmp
aad
mov
or
outsb
rcrl
or
push
out
jp
sbb
add
xchg
push
loop
sub
cli
cltd
outsb
pop
fwait
mov
dec
outsl
cmp
lds
imul
lret
ja
sub
cmpsb
sub
and
and
pop
jns
sbb
out
xchg
mov
aaa
cmp
filds
inc
xchg
sbb
mov
lret
jo
cmp
jmp
jno
pop
xchg
sub
popa
test
mov
dec
out
outsl
mov
inc
mov
loope
adc
push
cmpsb
mov
es
add
add
mov
icebp
in
mov
lcall
mov
xchg
ss
xor
sbb
arpl
adc
cmp
or
mov
stos
into
push
in
lret
repnz
aad
cmp
xor
pop
pusha
in
scas
cmp
rep
lea
popf
mov
sub
xchg
daa
inc
and
shll
xlat
push
mov
pop
sbb
push
mov
add
xor
js
enter
test
cwtl
out
fcmovnb
xchg
out
push
incb
loope
dec
stc
push
les
sub
in
pop
outsb
and
jecxz
jne
sub
icebp
pop
or
sbb
mov
int3
mov
pop
pop
sub
aad
lods
add
jne
dec
adc
xlat
lcall
jmp
loope
fisubrs
or
xchg
add
push
xchg
push
mov
dec
or
and
ds
mov
outsb
cld
cltd
push
adc
pop
or
or
mov
adc
mov
ficoms
je
lds
or
xlat
in
inc
movsl
mov
mov
rep
mov
test
fcoms
in
pop
stos
leave
push
cmpsl
scas
popa
test
testl
sbb
cmp
ss
fs
imul
sbb
daa
popa
sarb
cmp
mov
aam
inc
rsqrtps
jnp
xor
icebp
jmp
push
es
and
int3
je
ret
adc
pop
loope
cmp
call
test
std
scas
cmp
test
pop
sbb
lcall
xchg
test
sbb
sub
fcmovnb
stos
loop
mov
mov
jmp
jo
and
cli
test
inc
popf
rcrl
pusha
push
loopne
push
lcall
or
aad
cmp
dec
icebp
notb
std
push
mov
mov
dec
ja
subb
sub
ss
int
movsl
push
inc
adc
cmp
test
xor
ja
push
nop
xor
lods
mov
push
xor
cmc
scas
lods
repz
fidivrl
mov
fs
arpl
jnp
add
inc
mov
jno
push
jp
js
dec
jl
push
jbe
outsl
jecxz
mov
inc
add
bound
dec
sahf
sbb
mov
iret
adc
dec
cmc
mov
push
dec
push
and
jb
inc
ss
pusha
rclb
push
add
in
popf
push
mov
sbb
je
cmp
push
cmp
hlt
je
arpl
adc
mov
lahf
lods
inc
enter
pushf
pop
pushf
test
repz
jmp
add
adc
dec
in
push
ss
mov
mov
dec
dec
xchg
push
add
pop
push
rorb
idivb
dec
leave
lcall
std
push
pop
lcall
fcoml
in
add
in
scas
jmp
jne
jns
rcr
rol
xchg
fistps
rclb
rcrl
lcall
and
lret
rcrb
rorb
popa
iret
fmulp
push
jmp
movsl
xchg
inc
int3
inc
movsw
jne
cmc
add
xchg
mov
sub
stos
xchg
xor
jmp
lds
cmc
lahf
gs
in
outsl
nop
shl
loop
lret
push
idiv
xchg
sub
movsb
call
xor
daa
fwait
jp
cmp
adc
stos
outsl
imul
fistpll
xchg
imul
xor
inc
inc
daa
popf
out
push
bound
xor
test
int3
lea
loope
bound
push
push
dec
fisubl
add
sti
pop
jge
stc
ljmp
mov
aaa
stc
mov
sub
pop
xor
lods
push
xor
mov
xor
sahf
in
mov
dec
xchg
out
std
or
fnsave
pop
push
fcmovb
push
cli
int3
movsl
fdivs
cmp
leave
dec
fildll
test
call
cltd
adc
lret
add
or
jp
jb
jg
lret
dec
rol
pop
or
popl
ljmp
mov
popa
repnz
imul
xchg
repz
mov
cmp
adc
inc
mov
mov
xchg
push
insb
outsl
cli
pop
sbb
cs
pop
mov
or
cld
mov
cmc
test
pop
cmp
test
test
aad
mov
cltd
or
xor
lods
mov
out
ds
mov
leave
push
test
dec
lahf
sbb
sub
enter
pusha
int
jne
push
cwtl
lds
jb
sahf
cmp
or
jne
jge
and
loopne
and
mov
ljmp
sub
push
mov
out
in
xor
in
in
fldcw
ret
insl
out
enter
loopne
mov
hlt
fimull
jmp
test
dec
or
pop
nop
pop
outsl
pop
mov
pop
xor
ja
out
sbb
repz
int
in
loope
jg
insl
addl
push
pop
pop
push
mov
mov
dec
in
mov
jbe
push
add
mov
or
dec
test
notw
fbld
cmp
xor
adcl
leave
lods
popf
mov
mov
push
xchg
pop
cwtl
js
nop
jno
cwtl
push
xchg
push
xor
inc
out
sbb
jle
pusha
lret
loopne
out
or
lock
inc
scas
lret
mov
mov
push
adc
push
sti
lahf
xchg
jne
push
jg
out
cli
sbb
rol
int3
popa
xchg
stos
pop
adc
cmpsl
popl
inc
mov
xchg
in
cmp
repnz
fstp
sub
lods
cmp
jnp
aad
add
arpl
jl
sub
negl
sbb
dec
lock
cmpb
mov
xchg
cmpsb
je
cmp
or
cmp
push
fwait
push
mov
adc
frndint
sbb
add
pop
test
jp
inc
iret
stos
fnstsw
in
mov
scas
sti
imul
add
sub
xchg
inc
scas
dec
aad
and
sbb
insl
aad
dec
ljmp
ds
jae
stc
mov
enter
bound
adc
addr16
adc
add
je
push
dec
out
cmp
je
mov
cmp
shll
mul
gs
or
mov
cmp
iret
repz
mov
fcoms
xchg
xor
aad
fsubr
mov
popw
jmp
xor
adc
aaa
dec
aam
cwtl
add
adc
mov
adc
and
movsl
ds
lods
push
xor
stos
xor
hlt
sbb
xlat
sti
inc
divl
xor
outsb
add
test
andl
xchg
xchg
pop
fsubl
scas
push
and
lret
leave
test
es
call
mov
xchg
je
std
lret
jne
cmpsb
aaa
sub
imul
scas
mov
push
cmc
pop
cmc
and
inc
cmpsb
pop
inc
jecxz
xchg
dec
lret
mov
out
adc
and
in
aam
cwtl
mov
hlt
repnz
adc
cld
scas
xor
xchg
aaa
sahf
cmp
jmp
aas
sub
movsl
mov
outsl
sub
mov
xor
jae
bswap
mov
xor
adc
leave
pop
jb
lds
jbe
hlt
rcl
push
add
jo
pop
cld
mov
jo
xorb
jbe
scas
ret
data16
fistpl
outsl
jmp
loope
jmp
jmp
popf
mov
cmpsb
lcall
mov
lods
scas
fidivl
cmpsb
test
xchg
xor
xrelease
rcrb
mov
std
pop
stos
sbb
push
xchg
dec
mov
ja
jno
bound
div
jb
movb
scas
sub
dec
and
std
sbb
ja
sbb
insl
outsl
loop
call
lods
movb
ds
sbb
pop
pop
sbb
addr16
sub
fmuls
mov
add
fwait
inc
out
xor
cmp
cmp
loope
movl
add
jmp
or
mov
addr16
rorl
dec
cld
fisttpl
pop
int3
fistps
out
out
sub
xchg
mov
notb
outsl
testl
ljmp
add
cmp
adc
mov
out
data16
jns
or
test
adc
sbb
cwtl
cltd
pop
daa
gs
decl
mov
es
add
jge
dec
mov
les
or
or
mov
mov
mov
popl
lods
les
push
jae
fcmovne
lcall
scas
xor
popa
in
push
sbb
ss
sub
pop
inc
outsb
dec
sbb
adc
addr16
mov
lods
and
inc
ret
scas
fs
pop
in
ret
insl
push
dec
push
jge
add
mov
sbb
mov
and
jbe
movsb
imul
stos
dec
add
aam
fnstcw
imul
cli
sub
mov
sbb
jge
inc
ret
or
sbb
xchg
aam
aaa
enter
fsubrs
js
loope
arpl
int
inc
shll
xchg
dec
xor
lcall
xchg
jecxz
xlat
xchg
call
inc
xchg
push
fmuls
adc
adc
or
mov
adc
mov
dec
dec
sbb
ficompl
sbb
cli
or
shl
subb
push
les
sub
jp
push
add
xchg
or
xor
or
inc
jbe
popa
mov
imul
lods
hlt
pushl
jno
pusha
lods
add
cmp
arpl
jbe
inc
mov
mov
loopne
lods
pop
jno
xchg
ja
cmp
movl
sub
pop
sbb
cmp
std
and
ljmp
xorb
scas
sub
cmpsl
push
imul
fwait
roll
lea
xor
mov
xor
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
xor
jl
pusha
addl
xchg
pop
cld
cs
leave
push
aad
cwtl
fcom
es
mov
add
nop
and
mov
cltd
nop
xor
leave
sub
rolb
popf
fcom
jno
dec
bound
and
add
ja
mov
pop
daa
mov
inc
fs
sub
or
mov
mov
jmp
mov
pushf
sbb
pop
out
and
push
roll
mov
loopne
loope
stos
rcrb
fwait
pop
les
pusha
dec
aas
mov
sbb
adc
and
dec
shll
test
jne
enter
xchg
mov
jns
mov
push
add
adc
orb
imul
fwait
mov
fisubrs
lea
mov
adc
xor
aad
test
jb
jnp
sbb
loope
in
mov
pushf
inc
or
adc
lret
add
jg
xchg
scas
daa
bound
xchg
flds
into
xchg
pop
lods
test
aad
mov
outsl
fstl
fistpl
adcl
sub
xchg
movsb
xor
negl
ret
shlb
pop
stc
lahf
imul
xor
cld
dec
sub
cltd
or
pop
pop
adc
mov
jge
test
inc
sbb
sub
or
roll
jp
out
call
inc
xchg
dec
mov
in
lret
jl
pop
test
rcll
sarl
scas
dec
ret
dec
je
shrl
fucomp
arpl
roll
jl
xchg
clc
hlt
decl
add
xchg
mov
movsl
into
fucomi
xchg
and
roll
test
sub
arpl
imull
inc
pop
mov
fcoml
xor
icebp
cli
and
xor
push
mov
cmp
out
and
adc
push
fisubrl
pop
loop
les
fsubr
popf
pop
jle
sub
dec
push
and
jae
aaa
scas
lods
jmp
inc
xor
sahf
hlt
pop
cld
pop
and
jecxz
mov
mov
jp
inc
inc
xchg
imul
cmp
jl
fmull
pop
mov
push
pop
dec
loope
lock
inc
jne
fstpl
mov
lret
add
lcall
add
loopne
dec
scas
rolb
push
pop
mov
mov
cmpl
push
notl
fstpl
je
jge
les
jne
out
inc
ja
inc
popa
cli
add
ret
sbb
push
hlt
cmp
mov
ficoml
inc
neg
data16
int3
adc
or
fsub
jg
ret
adc
in
sbb
fwait
test
gs
push
mov
sub
fsubrl
push
push
lret
dec
repz
mov
lea
imul
mov
pop
and
push
sub
mov
mov
push
mov
and
pop
lcall
pop
rcl
popa
dec
mov
jno
pop
pmulhw
daa
pop
xchg
lds
push
sub
adc
xchg
jp
xor
cld
fs
icebp
jo
dec
data16
rclb
dec
out
lret
xchg
add
and
adc
idiv
cmp
cmp
push
cltd
jb
sub
jmp
dec
mov
test
jbe
aaa
js
aaa
test
sub
xchg
fmuls
xchg
nop
and
fiaddl
xchg
adc
sbb
xor
imul
mov
fsubl
inc
das
cmp
lcall
or
push
stc
lret
stc
out
dec
add
addr16
fstpt
cmpsl
or
data16
bound
data16
cli
cli
mov
pcmpgtb
data16
enter
jmp
jecxz
loop
test
xor
xor
xor
push
push
mov
arpl
pop
or
dec
rcl
sbb
jne
jle
aad
outsl
sbb
loop
mov
pop
insb
mov
pop
rorl
loope
inc
add
jnp
adc
ficomps
mov
aas
es
aam
les
lret
int
andb
cmp
add
jbe
mov
inc
mov
inc
mov
out
nop
dec
jg
mov
test
iret
jo
cmpsb
out
stos
or
mov
arpl
cmpsb
or
lret
xlat
scas
mov
into
add
xor
into
xor
cs
in
lret
cmp
andb
ret
inc
cmp
push
ret
lods
xchg
loopne
mov
dec
sbb
push
jne
std
cmp
add
adc
inc
and
add
call
xor
dec
dec
mov
cltd
push
sub
sbb
call
mov
jecxz
xor
loope
in
sbb
imul
and
add
ss
int
dec
aas
daa
adc
stc
lods
xlat
add
pop
sbb
inc
and
std
arpl
nop
es
xchg
pop
dec
std
push
mov
ret
sub
xchg
cld
jg
and
and
mov
js
dec
scas
rclb
sub
call
mov
rcrb
cmp
in
movsb
pop
mov
mov
cmpsl
rclb
fwait
cmp
in
sub
jno
jnp
clc
mov
ja
stos
mov
mov
dec
jmp
ret
jne
cld
jle
push
loope,pn
divl
stos
enter
mov
adc
shrb
sbbl
pop
lret
iret
addb
pop
loop
push
andb
stos
fs
lcall
mov
clc
aas
jbe
loopne
cmp
mov
cmp
mov
jb
inc
cmp
mov
push
jnp
in
cmpsl
fucom
movsl
add
pop
add
xorl
sbb
iret
mov
movsl
dec
push
dec
arpl
jle
xchg
mov
mov
mov
ficoms
adc
or
orl
into
xorb
xor
nop
cmp
add
ss
lds
sbb
inc
xchg
cld
mov
jne
inc
cmpsl
inc
jne
push
sub
ss
push
aad
or
mov
sub
shlb
sti
mov
shl
inc
push
in
add
ds
cld
push
insb
daa
outsl
scas
sbb
scas
mov
dec
jno
jge
adc
in
leave
or
cwtl
xlat
stos
mov
js
stc
loopne
push
push
pop
pop
pop
sbb
pop
xor
xor
xchg
movsb
popf
cmp
movsb
mov
cli
or
jp
adc
lret
fmuls
aam
mov
pop
pop
sub
jae
mov
cs
fpatan
dec
aaa
fcompl
inc
inc
leave
jp
in
dec
cltd
push
rolb
mov
cmp
or
int
xchg
hlt
pop
stc
pop
fidivs
lcall
sub
repnz
pop
sbb
xchg
dec
sti
sbb
pop
aaa
mov
data16
or
bnd
cld
fs
xchg
or
mov
push
sub
pop
pop
sub
rep
test
inc
dec
fsubl
dec
dec
fcomps
xchg
std
jle
iret
or
movsb
out
mov
outsl
pop
mov
cmp
dec
cmpsb
lahf
jo
mov
enter
mov
or
test
mov
xor
ja
lahf
rorl
ja
xchg
rorl
sub
dec
in
cmp
mov
and
mov
pop
mov
scas
or
jae
jne
enter
mov
jg
pop
roll
push
mov
add
insb
pushf
jge
lea
jp
add
push
std
mov
xor
out
add
data16
mov
iret
push
scas
into
pop
mov
test
inc
outsl
xchg
clc
mov
aaa
rorb
scas
xchg
fdivs
push
dec
imul
mov
inc
inc
fldpi
sbb
dec
mov
cwtl
outsl
repnz
and
inc
xchg
push
xchg
lahf
pusha
push
dec
pop
inc
cld
icebp
pop
test
inc
adc
xchg
mov
mov
mov
adc
jmp
fmull
test
imul
fnstsw
aam
jle
xchg
xor
arpl
pop
xor
push
lahf
mov
cmpsb
in
jl
push
lds
insl
or
ss
add
ljmpw
fisubs
cld
lock
jl
into
cs
jns
not
es
insb
cmp
sub
push
jmp
mov
mov
and
dec
shlb
rcrb
push
sub
or
sbb
loope
sbb
ja
cld
popa
push
imul
aad
mov
xor
push
cmp
les
dec
mov
mov
add
leave
jne
and
xchg
mov
xchg
pop
shl
inc
cmp
popf
mov
cld
xor
pushf
outsl
int
or
repz
xchg
jle
cmp
jnp
les
cvtps2pi
mov
push
push
out
and
or
adc
inc
fwait
stc
pop
pop
add
insb
add
mov
push
cltd
jecxz
dec
mov
jmp
fdivrl
aam
sbb
lret
pop
inc
sahf
pop
mov
jg
in
jle
mov
fs
xchg
shll
idivl
fwait
jmp
or
incl
in
bound
cs
mov
xor
mov
push
mov
enter
ret
fldl
fcomp
pop
jg
push
push
sbb
aad
pop
xchg
lcall
or
sbb
insb
pop
dec
fstpl
fnstenv
fisubrs
xor
clc
jnp
dec
jmp
mov
mov
xor
cli
or
out
pop
mov
imul
push
xor
pop
cmp
scas
movsl
and
xor
loop
lds
repnz
movsl
xchg
xchg
xor
or
bound
xchg
lea
jle
xchg
adc
repnz
dec
pop
jecxz
mov
fwait
mov
push
jns
loopne
repnz
fucomi
cli
mov
mov
fdivs
scas
es
rcrl
add
sbb
out
sub
and
pop
mov
imul
in
add
aam
add
push
bound
stc
inc
lds
jmp
aas
mov
sbb
xchg
mov
adc
fistl
loop
movsb
or
xchg
pop
imul
dec
in
test
or
pop
sarb
ret
and
jbe
lret
call
pop
fmul
sarb
aaa
movsl
ret
cmp
jmp
ja
dec
out
and
ret
lods
xchg
in
cmp
xor
dec
fwait
ret
sub
adc
mov
jnp
push
les
adc
arpl
fwait
out
jl
dec
mov
jb
mov
les
xor
imul
cltd
xchg
ljmp
cmc
test
scas
fcmovnu
clc
and
mov
or
mov
inc
insl
cmp
movsl
bound
xor
push
int
sbbb
imul
test
dec
fadds
imul
mov
jae
pop
adc
jne
cs
mov
pop
inc
je
pavgw
aam
ss
add
mov
fs
add
dec
stc
pop
xchg
push
push
add
push
push
xor
xchg
sahf
es
push
push
dec
shll
and
pop
shr
pop
inc
push
cmp
mov
push
push
xor
or
inc
mov
mov
xchg
mov
popa
outsl
shll
outsl
cmc
popf
call
les
xchg
rclb
dec
adc
push
bound
inc
mov
dec
popa
repz
inc
loop
in
push
xor
dec
mov
in
and
mov
jnp
mov
sub
stc
rorl
sbb
pop
pushf
iret
lock
ds
aaa
cmp
aas
loopne
and
and
mov
std
stos
fnsave
aas
pop
push
les
mov
repz
jno
jno
fisubrs
lret
xlat
ficoml
mov
ja
into
rcll
cmp
ret
and
dec
inc
dec
ljmp
ljmp
scas
iret
in
mov
push
popa
orb
inc
fdivl
daa
repz
jge
cs
shll
cmc
in
lods
jae
ret
mov
mov
data16
inc
mov
push
pop
ficoml
mov
enter
in
dec
pop
data16
rcl
mov
das
jmp
rorb
stos
mov
pop
mov
mov
popa
xor
mov
inc
xchg
push
int
xchg
xorb
ss
xor
sub
dec
push
jno
add
mov
ds
fldt
xchg
scas
pop
mov
sarl
into
clc
ds
outsl
mov
loope
and
add
cmp
sbb
xchg
adc
in
or
inc
clc
fcompl
sbbb
or
mov
ja
repnz
scas
hlt
insb
out
stc
rolb
popa
sbb
xchg
pushf
mov
lock
popa
sub
mov
in
lods
nop
cs
xor
dec
das
cld
or
ja
insl
xchg
sahf
push
jbe
cmp
es
add
sub
les
iret
jg
lret
sbb
jno
fnsave
insl
pop
test
in
xchg
jp
ss
out
roll
push
and
sub
adc
mov
xchg
adc
mov
fisttpl
and
pop
adcl
fcoml
pop
into
mov
call
jmp
add
aam
mov
mov
pushf
jno
shlb
cmp
add
and
push
push
sub
xchg
cmp
clc
sbb
mov
jle
test
psubsw
repz
or
lret
pushf
sub
idiv
in
test
add
push
loopne
xor
and
xchg
sbbb
mov
sub
cmpsb
adc
fisttpll
mov
jmp
pop
pop
out
add
pop
test
lds
inc
lods
lret
test
cmp
cmp
ret
ret
cwtl
imul
jmp
add
sbb
sub
xchg
xchg
out
and
cltd
or
push
nop
jne
adc
in
adc
dec
fs
lods
sti
insb
xchg
mov
adc
inc
lock
iret
nop
out
loop
mov
inc
ficoms
jl
leave
adc
fsubrs
dec
xor
pop
lods
xchg
mov
or
bound
mov
dec
insb
das
or
sub
out
or
cmp
dec
lods
cwtl
cmc
jo
shll
stos
es
mov
pop
mov
or
mov
and
ljmp
lret
fldt
xor
pusha
roll
fstp
xchg
adc
fwait
and
fs
mov
stos
js
add
push
sbb
mov
sub
pop
and
xchg
adc
scas
cli
icebp
sbb
jp
dec
je
stos
jae
cwtl
mov
dec
or
hlt
int
sti
ret
clc
adc
pushf
bnd
out
xor
lahf
dec
pop
dec
pop
fldt
cmp
mov
dec
sti
ret
pushf
fmuls
or
loopne
jl
vmwrite
scas
movsl
insb
enter
flds
inc
push
popa
pop
in
and
das
ret
mov
jne
test
cwtl
add
out
mov
faddl
dec
sub
mov
cmp
cmp
cmp
cmpsb
iret
rorb
xlat
jmp
jmp
push
repz
pop
sti
jnp
cmpsl
or
data16
aaa
xchg
push
rcrl
or
push
nop
cltd
ret
push
dec
sahf
push
in
mov
sub
mov
sahf
jnp
jp
cmp
cmpsl
sbb
lods
add
xchg
xchg
add
inc
xchg
loopne
testb
mov
nop
mov
aam
mov
cmpsl
pop
out
shlb
insb
push
ljmp
mov
hlt
pop
lods
mov
mov
push
fistpll
xor
lock
std
pop
call
jmp
xlat
fldl
sti
cmc
pop
loop
int
push
pop
nop
test
lcall
xchg
adc
mov
sub
mov
and
insl
imul
ljmp
lods
lea
jb
into
leave
and
addl
iret
jge
in
push
add
pop
cltd
std
std
mov
es
aam
jmp
xor
mov
into
mov
stc
mov
cmpsb
xor
ljmp
or
sbb
cmp
push
loope
lods
add
or
fsubs
popa
add
mov
pop
jmp
mov
fsubrl
pop
push
push
and
sar
aas
add
push
enter
lcall
repz
push
aaa
rorl
jo
lds
mov
mov
je
push
push
enter
in
sbb
sub
scas
xlat
adc
mov
lods
icebp
leave
push
sbb
fsubrl
arpl
or
stos
ret
xor
movsb
pop
in
je
xor
sub
dec
fs
mov
inc
pop
pop
leave
aas
es
mov
fnstcw
sub
fmul
lds
jae
pop
ret
xor
aam
icebp
cmc
popa
andl
aam
mov
orl
xchg
lcall
fwait
cmp
std
jb
sub
clc
mov
imul
mov
sar
add
adc
or
rcrb
stc
push
imul
sbb
jp
and
aaa
data16
int3
orl
aad
arpl
or
hlt
cmp
push
gs
popa
hlt
cmp
push
pop
dec
dec
insb
fdivrs
mov
jb,pn
loopne
mov
or
or
mov
icebp
pop
cmpsb
fisubrl
mov
sub
jo
pop
sub
jecxz
mov
and
scas
jns
mov
mov
adc
imul
cmp
mov
cmpsl
push
repnz
jle
push
in
or
or
ret
xchg
ficoml
ja
fstp
std
pop
jecxz
leave
push
jns
cmp
inc
pop
sub
pop
mov
test
lock
jmp
push
add
nop
insl
sub
lea
lret
xchg
sbb
mov
dec
add
loop
mov
insl
xor
fcmovnu
out
cmpsb
mov
and
xor
inc
aaa
cmp
daa
movsb
push
jecxz
and
dec
pushf
xchg
sub
out
loopne
ret
lods
dec
dec
ljmp
and
rorl
pop
mov
addr16
and
sub
pop
dec
cmp
pop
imul
pop
mov
rclb
pop
jge
and
insl
divb
and
mov
push
aad
push
sbb
imul
pop
int
mov
cmc
daa
repnz
dec
test
iret
inc
mov
jmp
add
cmpsl
xchg
xchg
stos
lahf
popa
fildl
mov
pushf
and
mov
stos
pop
bound
and
add
mov
ss
xorb
push
or
ret
mov
pop
ljmp
fcoml
push
pop
cmp
mov
mov
push
in
cltd
adc
out
std
jmp
add
xchg
dec
inc
stos
fdiv
xchg
ret
pusha
mov
mov
add
and
movsb
add
scas
lods
ret
jno
test
roll
insb
repz
or
cmc
and
ret
pop
or
roll
and
sbb
aam
lods
cmpsb
pop
int3
mov
cmpsl
stc
push
mov
mov
cltd
dec
jnp
pushf
jne
jle
call
pop
jmp
jmp
inc
inc
push
and
and
imul
lcall
test
testl
mov
divl
scas
fs
out
jns
outsb
mov
shrb
jge
mov
inc
rcll
mov
shlb
cmp
les
outsl
xchg
push
mov
xor
lret
mov
cmpsl
pop
in
mov
mov
mov
jp
or
cmp
fmuls
mov
mov
cs
jnp
xor
dec
sub
call
dec
hlt
fwait
add
je
faddl
inc
or
add
test
inc
das
push
test
sub
mov
cmp
inc
in
popl
cmp
sti
or
cmp
mov
lods
pop
cmp
lock
loope
xchg
jmp
pop
fwait
repz
adc
push
add
sarl
and
jg
jne
mov
mov
xor
movl
in
mov
xor
push
adc
int
leave
sbbb
push
gs
insl
jp
mov
insl
sbb
pop
dec
push
lcall
popl
fildll
pop
push
lods
mov
fists
cmp
popa
inc
and
test
adcb
dec
or
xchg
sarb
cmp
jmp
lds
pop
out
ds
sbb
fistpl
mov
sub
mov
aad
mov
push
xchg
out
dec
dec
mov
xchg
cmpsl
lea
rorb
icebp
arpl
dec
xor
pop
lods
adc
out
cmp
mov
js
mov
outsl
inc
mov
daa
inc
mov
addr16
lds
xor
cmp
mov
outsb
rol
test
andb
sarl
pushf
mov
mov
add
and
cli
mov
imul
and
dec
js
pusha
dec
loope
sub
and
mov
jecxz
loopne
test
sbb
mov
mov
fs
mov
mov
add
ds
mov
arpl
adc
out
mov
aas
cs
or
lea
bound
jae
ds
pop
dec
mov
fisttpll
outsb
cmpsb
lods
pop
pop
mov
mov
orw
add
push
lods
mov
jg
loope
std
lds
xchg
add
xchg
pop
adc
mov
push
inc
jae
cmp
push
adc
adc
xor
mov
pop
fwait
push
mov
mov
enter
daa
fiaddl
add
inc
fsts
push
mov
pop
jecxz
jle
cld
push
clc
ss
mov
mov
and
adc
inc
scas
pop
push
icebp
xor
negl
pop
xlat
push
into
fwait
cmc
xchg
call
add
push
mov
push
add
dec
pop
jbe
add
les
push
pop
fwait
mov
hlt
xchg
call
decb
or
imull
jne
adc
loope
int3
pop
movsl
jae
fadd
push
cmp
mov
xchg
push
sbb
push
sub
xchg
and
lret
stos
mov
fiaddl
cwtl
jbe
and
cld
and
sub
imul
icebp
xor
popa
dec
dec
push
loop
mov
mov
std
jae
jne
incb
cmpsl
cmp
aam
xchg
xor
dec
mov
adc
xor
inc
stos
sub
imul
leave
stc
inc
fwait
mov
fistl
fmuls
imul
mov
pop
mull
stos
sub
inc
ja
dec
int3
push
inc
testl
sub
repz
or
ja
mov
addr16
sbb
and
sub
dec
and
rorl
adc
fdivrp
mov
xchg
jmp
cltd
daa
push
xchg
cli
cmp
scas
xchg
aaa
push
cmp
xor
or
push
into
pop
pop
mov
fwait
add
sbb
or
scas
sarb
mov
dec
sub
add
or
movsb
xchg
notl
into
xor
sub
rorb
adc
fsubp
xchg
add
inc
and
mov
nop
dec
mov
daa
xor
es
xchg
cmp
mov
mov
push
add
inc
insl
out
into
jg
inc
inc
cltd
bound
pop
bound
jne
lret
lea
das
in
and
cmpsb
dec
andl
orl
aad
xor
push
call
ds
mov
adc
mov
add
xor
add
inc
cs
mov
or
lea
addr16
ret
adc
sub
push
push
dec
xchg
sbb
add
sub
test
lret
loopne
repnz
cltd
int
push
popf
in
arpl
xor
wbinvd
loop
bound
jmp
ds
jge
mov
cmp
sar
cld
mov
fisubrs
lods
inc
sub
inc
cmpb
jecxz
gs
lea
mov
mov
jl
cmp
arpl
test
aas
int3
in
orb
int
test
jne
pop
jno
jle
mov
jecxz
jae
lahf
dec
scas
idiv
loopw
cmc
mov
mov
outsb
dec
cs
shl
jno
sbb
loopne
ficompl
jl
dec
addl
into
lret
testl
push
roll
push
mov
mov
jae
mov
adc
adcb
xor
inc
cli
dec
mov
movb
stos
mov
mov
sub
and
test
dec
dec
sub
cmp
mov
mov
and
cmpsl
flds
call
pmaxub
pop
sti
dec
cs
or
inc
popf
mov
dec
sbb
jbe
sub
jp
mov
test
cmovae
ret
xor
js
xchg
push
sub
or
negl
dec
xlat
ja
std
movsb
mov
add
push
or
push
xchg
jl
mov
xchg
jge
pop
add
ljmp
das
dec
add
in
add
cmpsl
in
lret
daa
mov
test
and
nop
imul
lcall
je
sti
pop
stc
xor
inc
fbld
adc
loop
xchg
enter
repnz
xchg
out
int3
into
mov
repnz
lods
outsb
xchg
or
fwait
dec
test
dec
loop
sub
mov
mov
sub
hlt
jb
cmp
ljmp
mov
sub
imul
fidivrl
sahf
push
jge
clc
icebp
gs
movsl
stc
loop
sbb
mov
test
std
pusha
xchg
call
push
push
sub
arpl
movsl
sub
add
jno
inc
mov
mov
fdivs
test
sub
mov
iret
es
sti
and
js
pop
jle
xor
inc
int
xchg
nop
cli
bound
mov
scas
shr
xor
test
rcrl
test
fwait
jle,pn
in
mov
iret
in
push
sub
mov
sub
push
jnp
sub
and
xlat
pop
jg
jb
sbb
push
mov
add
add
fs
gs
push
inc
icebp
cmp
ja
loopne
seto
cwtl
sbb
and
or
xchg
cmp
adc
mov
xlat
popf
inc
pushf
repnz
inc
xor
stos
je
fdivs
test
rorl
cmp
leave
movsb
fdivrp
nop
lret
shll
movsb
cmp
sahf
sub
mov
xchg
or
out
pop
aaa
loop
mov
or
repz
es
mov
sbb
ret
mov
into
mov
stos
iret
push
inc
and
in
cmp
lods
xor
mov
fldl
repz
test
push
jb
jmp
dec
inc
and
add
insl
sub
and
fsubr
add
pop
cs
xorl
fsubr
push
orl
movsl
xchg
inc
mov
dec
movsl
lds
sbb
xchg
mov
lock
mov
fnstenv
shrb
push
jb
pusha
jno
lods
mov
ret
mov
loopne
dec
xchg
stos
xchg
dec
add
adc
decb
les
loopne
sbb
scas
xchg
mov
cmc
adc
outsb
adc
call
mov
fsubrs
sub
xchg
leave
mov
out
iret
lret
dec
inc
fisttpll
mov
mov
pop
ljmp
arpl
call
nop
adcl
adc
mov
dec
and
jne
xchg
out
ljmp
mov
rol
xor
push
push
stos
pop
test
adc
mov
sbb
pop
scas
fldenv
mov
xchg
jnp
inc
mov
loop
push
pop
test
and
xor
mov
popf
jl
fldl
xchg
add
jno
lds
mov
testl
inc
das
xchg
add
cld
test
mov
loop
popf
add
aaa
cs
sub
mov
mov
cmp
adc
mov
sbb
aad
add
adc
jmp
popa
sub
xchg
cltd
pop
push
inc
cwtl
repnz
movl
adc
adc
loope
adc
mov
mov
enter
push
movsl
scas
push
test
rorb
lea
loope
sarl
jg
mov
push
stos
iret
pusha
ret
hlt
mov
aam
jnp
mov
push
jmp
popa
jnp
cmp
mov
mov
icebp
cmp
and
pop
mov
pop
ja
mov
fdivr
or
in
sarb
subb
repnz
orb
push
or
sub
les
mov
call
movsl
mov
ja
icebp
sbb
pop
or
add
fwait
dec
jecxz
stos
inc
pop
or
sbb
push
scas
inc
xor
push
divps
mov
add
jmp
xchg
lcall
add
inc
push
faddl
mov
iret
cmp
lret
mov
cmpsl
push
pop
lds
xor
mov
mov
jecxz
pop
push
xor
aad
cmp
inc
outsl
or
mov
xchg
or
das
in
mov
adc
xor
pusha
cmc
cmp
inc
shl
cmpl
xor
clc
inc
pop
pop
outsb
ds
fcomps
mov
mov
and
pop
popl
cld
jmp
push
pop
add
hlt
je
xor
or
dec
adc
or
add
mov
mov
stc
mov
or
jnp
adc
push
cmpsl
in
pop
pop
sub
int
xchg
inc
arpl
shrl
and
xor
test
xlat
add
mov
lods
pushf
aaa
lahf
out
dec
jg
xchg
jae
mov
dec
fiaddl
inc
das
nop
hlt
int3
leave
test
xchg
ja
jbe
cs
stc
lcall
shlb
sbbb
shrb
clc
adc
or
outsb
loopne
sub
push
lea
xlat
lds
mov
shrl
fdivs
pop
lock
iret
out
js
cmp
push
mov
push
and
scas
fbstp
mov
mov
pop
and
sbb
andb
shrl
adc
sub
xlat
pop
xor
pop
xchg
xor
xor
mov
xor
hlt
xchg
adc
or
fstpt
movsl
aam
idivl
mov
cmp
roll
scas
mov
bound
push
orl
adc
jecxz
ficompl
gs
aas
daa
cmp
xorb
sub
int
xchg
repnz
out
sbb
rclb
xorl
jnp
test
divb
add
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
xor
call
xor
addl
mov
or
adcl
dec
sub
nop
sbb
fucomip
adc
cld
sbb
leave
pop
andb
xchg
clc
enter
pop
test
fsub
adc
jne
sbbl
aad
add
xchg
jae
pop
popf
pop
pop
add
sahf
cli
cmp
inc
mov
mov
stos
or
je
sub
push
aad
jmp
rolw
lret
in
adc
jne
xchg
dec
movsl
sub
mov
lcall
ja
xchg
add
daa
sub
fcoml
std
std
loopne
scas
adc
push
inc
sbb
dec
data16
outsb
push
jno
push
scas
adc
jge
dec
test
cmp
scas
dec
adc
xlat
scas
enter
and
ret
fmul
xor
fs
in
sub
int
pop
jne
arpl
xchg
push
movsl
rcrb
dec
sbbl
clc
sbb
aam
pop
pop
iret
mov
mov
dec
xchg
ret
iret
mov
cmp
sti
repz
dec
mov
xor
jno
fs
jp
insb
movsb
pop
addb
lds
pop
loope
or
mov
push
sub
std
ds
jmp
push
daa
inc
sub
cmp
sub
mov
lods
cmp
push
popf
enter
mov
lods
pop
das
ljmp
inc
add
jge
outsl
mov
inc
sbbl
scas
sub
push
lock
pop
dec
insl
pop
pop
out
shll
std
ja
cld
fldl
cs
lods
add
fists
or
pop
inc
stos
xor
push
fwait
js
sbb
lods
push
js
mov
xor
xchg
adc
enter
mov
repnz
sub
cmp
out
js
xchg
dec
lock
adc
push
in
and
inc
jbe
cli
inc
xor
xor
outsl
pop
push
into
mov
sbb
hlt
pop
cs
icebp
fstl
sub
ljmp
sti
push
sbbl
leave
jg
fucomi
shr
sbb
movsbl
mov
pop
xchg
in
hlt
fidivs
jp
xor
ljmp
out
mov
fidivl
mov
dec
pop
hlt
clc
push
pop
clc
or
mov
xor
xchg
clc
sbbb
xor
mov
les
adc
mov
stos
pop
iret
push
movsb
push
cmp
jbe
sbb
jecxz
std
push
ss
adc
fisubl
fstl
mov
mov
xchg
sub
repz
pop
jmp
fs
ficoml
push
rolb
add
inc
push
jecxz
pop
xchg
icebp
jecxz
add
cltd
cmpsl
testb
pop
inc
jecxz
addb
in
roll
ret
mov
test
out
pusha
mov
ss
jns
test
sub
bswap
stos
imul
pop
bound
sub
pop
int3
dec
lret
sarl
mov
lahf
stc
jae
xchg
inc
mov
pop
xchg
fs
loopne
inc
test
ficoml
stos
stos
nop
xor
lret
pop
sbb
or
fidivs
lahf
movsl
cld
fwait
jmp
mov
sbb
lods
jne
add
repz
lods
pop
dec
add
cmp
add
lock
sbb
aam
jnp
inc
cmpsl
add
and
jno
insl
ja
stos
in
adc
add
cmovge
out
add
jb
mov
cwtl
pop
stos
out
jno
cmp
fcmovb
clc
xlat
lea
pop
jge
popf
dec
popa
xchg
fs
push
test
sbbl
stc
pop
fucom
pop
xor
cld
inc
into
loopne
xor
ret
push
bound
mov
fistps
into
out
pop
mov
mov
fs
jne
and
fdivrl
sub
in
xchg
push
xlat
daa
ja
adc
pop
sbb
and
mov
xorl
and
jge
cmp
pop
gs
push
jle
sub
xor
adcb
xchg
jne
inc
outsl
je
clc
pushf
adc
addr16
push
mov
dec
xchg
or
in
mov
inc
inc
popa
dec
cmpsl
mov
xchg
lods
test
les
sub
pop
cmp
mov
stos
andl
add
les
mov
icebp
mov
mov
mov
mov
jp
mov
aam
inc
cmc
pop
inc
shrl
xor
test
inc
adc
or
jmp
fs
push
xchg
mov
std
fimuls
mov
rorl
pop
mov
xchg
mov
mov
cmpsl
mov
hlt
fisttpl
fs
inc
lret
push
xchg
das
iret
push
mov
das
mov
pop
adc
jbe
ds
ret
and
mov
out
rcpps
push
dec
mov
loopne
xor
pop
rcll
push
cmp
mov
cmp
rcrb
mov
push
dec
lahf
aad
int3
add
push
arpl
jl
outsl
add
lods
aaa
js
fxam
dec
mov
pushf
nop
notl
std
pop
mov
adc
inc
ds
sahf
jge
push
mov
jp
jge
pop
out
jle
repnz
icebp
lock
xor
pop
or
and
xchg
fadd
push
sbb
inc
adc
jmp
stos
push
pop
ficoms
or
or
inc
shr
sub
fwait
add
cmc
and
aam
pushl
adc
mov
sbb
inc
outsb
jo
out
lahf
xor
mov
test
inc
jg
in
jp
and
jae
inc
dec
pop
popf
fidivrl
into
movsl
repnz
or
enter
sub
adc
out
xchg
into
xchg
mov
lds
mov
xor
add
jne,pt
incb
cmp
scas
push
pop
stc
pushf
xchg
ljmp
in
mov
cmc
lret
push
push
push
int3
inc
nop
dec
hlt
out
js
add
mov
test
mov
dec
sahf
push
cmp
mov
mov
hlt
in
add
jg
stos
mov
sahf
shll
jnp
push
fmul
jl
adc
imul
daa
jo
adc
xchg
shll
cmp
test
mov
daa
lods
and
mov
mov
xor
cmc
mov
jns
xor
adc
out
scas
push
std
mov
jns
pusha
dec
in
xor
pushl
stos
clc
add
vpperm
jl
sub
mov
mov
mov
dec
mov
mov
xor
shll
mov
jnp
jmp
pop
xchg
cmp
xlat
sub
jl
out
bound
popa
adc
and
adc
push
stc
pop
push
clc
gs
in
sbb
dec
and
mov
loope
in
push
mov
push
jecxz
and
jno
mov
sbb
xchg
mul
xchg
sub
push
outsl
jb
movsb
pop
cmp
not
orb
sbb
bound
imul
repz
adc
ret
hlt
repnz
or
xor
adc
push
mov
loopne
and
mov
lods
pop
lea
add
push
clc
dec
stos
iret
xlat
andl
pusha
sbb
into
sbbb
push
push
push
pop
gs
mov
add
shl
mov
in
js
pop
mov
adc
jns
faddl
mov
test
rorl
add
int3
push
stc
imul
sub
fs
ja
mov
mov
fcoml
sub
popa
cmp
pop
popf
lret
inc
mov
pop
cmp
cmp
sti
sbb
jp
push
fs
cmp
mov
pop
out
js
jl
insl
mov
dec
jns
rcll
xchg
imul
sub
rclb
xchg
scas
mov
lds
mov
daa
fstp
ret
mov
or
dec
pop
or
mov
and
inc
jne
push
out
mov
popf
push
jmp
inc
mov
aam
mov
fimuls
jmp
test
pop
dec
add
adc
cld
sub
jecxz
leave
push
fadd
cmp
cwtl
inc
lcall
pop
jne
imul
mov
std
stos
ja
orb
or
lods
push
mov
fdivrs
xlat
outsb
xor
fbld
pop
push
cmpsl
jg
xchg
sub
dec
in
sbb
dec
push
fisttpl
lcall
insl
jnp
fsubr
aam
mov
sbb
fwait
xor
or
xchg
mov
cmp
and
lea
insb
aam
push
sub
fistl
adc
inc
out
cmp
sub
push
mov
adc
std
mov
aad
push
stc
ret
sub
lret
sbb
pusha
mov
fildl
sbb
mov
mov
cs
push
jno
scas
xchg
std
cmp
lahf
jl
movsl
enter
js
xor
xchg
adc
nop
inc
or
mov
or
and
lret
popa
shll
subb
pop
mov
pop
inc
imul
pop
jnp
or
adc
cmp
out
push
mov
test
std
jo
inc
sarb
aas
jns
xor
xor
and
add
mov
cmp
rolb
stc
cmova
dec
loope
stos
push
jmp
fwait
pop
in
or
fdivr
dec
cld
lahf
outsl
call
push
mov
shrb
addr16
mov
out
sbb
cmp
sbb
adc
push
push
mov
dec
add
stos
jge
sti
mov
js
xor
fs
pop
cltd
call
testb
movsl
or
jge
xorl
push
outsb
push
std
mov
adc
xchg
push
test
adc
aaa
stc
je
mov
sbb
decl
js
mov
lock
incl
lods
mov
dec
mov
mov
dec
insb
mov
js
gs
cmpsb
int
popf
fists
cmp
les
mov
cmp
or
out
jno
pop
mov
les
in
and
jo
add
leave
mov
fdivr
out
ror
ja
fcom
dec
fldl
inc
repnz
sbb
adc
push
xchg
mov
xor
and
xchg
rcl
lahf
cmp
clc
add
inc
cmpsb
lods
test
arpl
jne
mov
inc
or
addr16
inc
xchg
xor
mov
lret
push
in
cld
iret
in
ljmp
xchg
movsb
sbb
test
mov
mov
jne
add
xchg
in
std
jb
out
sbb
nop
add
movsb
fucomip
dec
mov
ret
xor
mov
xchg
lds
imul
sahf
movsb
sub
daa
sub
out
sub
pusha
dec
fimuls
stos
inc
data16
dec
add
and
push
or
sub
and
sub
xchg
ss
mov
lock
subb
scas
dec
sub
xor
sub
inc
loop
jge
mov
xchg
jecxz
fimull
xchg
popa
ss
mov
mov
inc
fsubrp
mov
cmp
negb
je
mov
iret
jmp
cmp
hlt
mov
jl
iret
sub
insb
movsb
xor
cmp
pusha
ret
test
add
dec
jg
inc
and
out
xchg
push
les
rep
dec
ja
ret
push
das
sub
inc
cwtl
cmp
sbb
daa
sub
xchg
imul
in
arpl
lods
or
mov
into
mov
ja
es
pop
jp
push
dec
xor
fists
push
push
jl
xchg
insl
xor
outsb
aad
hlt
addr16
or
pop
into
dec
mov
fdivp
mov
and
fcom
imul
ja
js
push
int
imul
xor
xchg
mov
int
pop
inc
sub
stos
imul
adc
pop
push
mov
and
gs
aaa
and
adc
add
mov
test
push
push
rcl
ds
inc
inc
sahf
mov
dec
inc
pop
punpckhwd
test
mov
lret
sub
ds
fwait
xchg
mov
adc
sbb
dec
es
inc
std
mov
imul
scas
lds
lds
addl
ja
inc
xor
jae
adc
push
pop
cmp
xor
pop
or
fidivs
pop
std
pop
int3
roll
pushf
repnz
mov
notl
pop
cltd
into
jb
dec
in
mov
push
test
push
fcoml
iret
xchg
pusha
loopne
stos
daa
or
xor
rolb
imul
out
push
imul
push
mov
les
clc
add
add
adcl
cli
sub
sbb
imulb
clc
fidivrs
add
loop
mov
jne
mov
leave
cmc
stos
not
pop
jne
sbbl
orl
push
adc
cmp
sti
mov
mov
xchg
stos
push
call
pop
das
iret
jle
lods
in
fisttps
add
sub
adc
push
ds
lods
frstor
scas
mov
xchg
pop
sbb
aaa
outsl
xchg
cmp
lock
push
sub
loopne
push
inc
in
fcomp
or
repnz
sub
je
jmp
jg
inc
dec
lret
mov
mov
sub
or
mov
push
push
jmp
sbb
fidivrl
jle
push
clc
cltd
loop
das
cwtl
add
sbb
push
lods
add
out
test
loop
inc
in
call
adc
clc
or
inc
dec
dec
repz
ret
insl
inc
xchg
xor
mov
rcll
aaa
ret
adc
fcoms
inc
jle
dec
cld
jne
or
gs
or
int3
mov
pop
xor
int3
popf
and
fwait
mov
add
enter
cmp
fucomp
daa
shr
testb
or
mov
rclb
mov
jge
xchg
clc
leave
cwtl
aas
mov
ret
fbstp
jl,pt
or
dec
movb
outsb
gs
scas
or
insl
mov
addr16
cmpsl
loopne
out
cmp
xor
jg
mov
sub
roll
jp
int
sbb
fsubl
sub
aad
fs
repz
jne
cmp
push
mov
pop
mov
loop
fbld
xchg
aas
add
jno
sbb
ret
shlb
cmp
fwait
mov
dec
fcomp
mov
and
icebp
lret
in
fs
mov
out
stos
js
out
jge
inc
push
rcrl
and
mov
jl
mov
stos
xchg
das
clc
mov
int
sub
inc
imul
inc
scas
push
bound
jle
cmpsl
or
mov
xchg
mov
jl
pop
adc
cmp
xor
fcompl
das
in
jae
inc
pop
insl
pop
pop
or
jbe
jne
stos
push
repnz
sbb
inc
call
mov
jmp
sub
and
jb
jne
lods
push
xor
or
jmp
cmp
lret
jno
cmp
push
outsb
and
mov
mov
pop
jmp
jmp
inc
jnp
mov
xor
xchg
shlb
mov
mov
mov
or
or
sub
jl
mov
lods
dec
pop
ss
cwtl
jl
jge
mov
cmp
lds
dec
adc
mov
mov
jg
sbb
popf
pusha
divb
mov
xchg
fcomp
std
ret
mov
in
mov
cli
push
or
inc
clc
rclb
les
inc
jbe
mov
sbb
dec
sbb
stos
negb
shl
and
ret
cli
add
cmp
cmp
adc
addl
aad
fdivr
xchg
fstps
sub
sti
sbb
mov
xchg
out
push
pop
mov
cmp
push
sbb
fisttpll
fstp
cmp
and
sub
insb
sub
jns
sbb
out
aaa
and
xchg
out
shlb
mov
testb
sbb
xchg
dec
dec
push
test
pop
cmp
iret
push
xchg
movsb
mov
xchg
jae
lret
push
js,pt
scas
xchg
jmp
mov
mov
push
mov
sub
push
or
testb
cmpsl
out
add
lahf
je
aaa
dec
or
sbb
sub
cmp
sbb
add
in
mov
icebp
scas
inc
call
aad
mov
scas
xor
inc
insb
pop
imul
jo
psadbw
bound
add
adc
sbb
sub
mov
sub
xchg
stos
jnp
jbe
ljmp
test
cld
pusha
xchg
mov
lcall
pop
hlt
out
sbb
cmp
loopne
out
jg
xor
dec
dec
cmc
add
push
push
jg
aad
dec
mov
cmp
cwtl
outsb
pop
sbb
sub
jno
jmp
repnz
and
fiaddl
clc
xchg
cli
lea
call
mov
shrl
xchg
sbb
sub
and
les
push
dec
xor
pop
pop
repnz
mov
mov
loope
or
mov
outsb
into
push
xchg
jle
cmpsb
movsl
jns
jl
pop
xchg
cmpsl
sub
push
fucomp
jmp
push
movsb
add
pusha
pop
jae
aas
jmp
ror
outsl
pop
jno
xchg
scas
mov
and
jo
inc
into
push
je
cmp
lea
test
jl
daa
outsl
cmp
stos
pop
jle
sub
lea
inc
fidivl
rorb
andb
push
mov
imul
xchg
and
adc
aad
ret
into
pop
mov
arpl
or
sub
cwtl
cs
jnp
aas
out
fstenv
cmc
push
test
cmp
push
inc
fwait
cwtl
mov
cmpsl
pop
jmp
scas
mov
dec
movsl
jb
mov
repz
sub
push
sub
les
cmp
addb
dec
jmp
mov
cmc
cmpsb
popl
pop
sub
push
fs
and
jb
sbb
lahf
daa
cli
push
cli
push
xor
xchg
out
ss
push
and
cmp
mov
add
push
sub
mov
mov
push
sahf
rorl
ds
xor
or
and
xchg
adc
fstp
fistl
inc
sbb
dec
inc
push
xchg
sub
jg
aaa
lret
loopne
mov
test
and
fistpll
std
test
movsb
incl
jp
aad
jb
test
inc
jb
mov
inc
test
xchg
lods
repnz
rol
mov
pop
xor
add
je
lea
mov
inc
repnz
and
jnp
cwtl
inc
jnp
imul
mov
cmpsl
jbe
mov
sahf
mov
ljmp
scas
pushf
jge
mov
test
in
js
push
inc
xor
ja
insl
pop
xor
sbb
sbb
ficoms
add
cltd
subb
pop
mov
in
fsubs
lret
push
xor
or
add
into
push
mov
dec
inc
inc
sbb
jb
popa
add
sarl
gs
cmp
xchg
adc
fcmovnb
inc
imul
adc
aam
pop
cmpsl
sbb
mov
mov
das
loope
xor
mov
icebp
cmp
sub
sbb
adc
inc
push
mov
add
ss
ljmp
outsb
cmp
xor
lret
mov
and
loope
dec
or
fcomps
in
in
pop
mov
cvtps2pd
pop
mov
xor
mov
enter
inc
cmp
iret
adc
cmpsl
mov
inc
xchg
lahf
mov
shr
mov
jno
aad
aas
repnz
cwtl
push
cmp
or
mov
dec
mov
cmpsl
push
pop
xchg
add
jnp
cmc
insb
push
jle
dec
int3
push
jmp
push
les
cs
xor
mov
inc
pop
pop
imul
mov
mov
xlat
mov
setae
add
bound
jl
test
pop
mov
es
sbb
sbb
push
loope
movsl
sub
fs
xchg
jecxz
sbb
jmp
or
xchg
xchg
xor
add
or
mov
fildll
pop
pop
ss
pop
mov
shrb
out
int3
in
sub
sbb
out
gs
or
les
hlt
pop
call
scas
and
jbe
out
and
xor
sbb
fimuls
add
es
mov
repnz
leave
mov
jl
inc
nop
lret
movsb
jg
sub
insl
mov
pop
pop
inc
pop
mov
sub
std
cmpsb
push
sub
fidivrs
mov
iret
mov
divb
cmp
pop
and
jo
mov
out
xor
mov
xchg
cmpsb
mov
std
sub
je
and
aad
andl
sub
pop
test
dec
pop
outsl
addr16
inc
int
gs
shr
add
sbb
add
adc
adc
adc
pand
sbb
test
mov
pusha
call
xor
iret
ds
xor
mov
dec
and
cmc
out
les
push
out
adc
dec
pop
inc
in
dec
or
sub
xor
cld
inc
pop
into
aad
adc
add
ss
vmaskmovdqu
rolb
jo
ja
outsb
xchg
shlb
ds
js
pop
in
mov
rcll
sub
xchg
cmp
add
jmp
int
or
mov
sub
jge
lcall
insb
subb
and
or
push
int3
fimull
das
dec
cmp
scas
push
lret
sub
sti
and
cmpsb
pop
int3
pop
mov
or
sbb
jecxz
pop
inc
mov
adc
xchg
or
sahf
lcall
aam
xchg
mov
add
imul
jo
jns
and
xor
in
mov
dec
das
add
daa
sbb
fnsave
sbb
add
mov
adc
mov
pop
or
jo
pop
xor
inc
mov
or
inc
and
fstpl
or
cwtl
xlat
in
mov
dec
dec
arpl
hlt
dec
fdivrl
fistps
adc
pop
dec
out
in
leave
aas
push
stos
fstl
shlb
and
scas
bnd
inc
push
xchg
pusha
xor
aas
mov
sbb
dec
fdiv
stc
adc
out
aaa
ret
push
xor
jns
mov
aam
call
adcb
icebp
add
sbb
jo
mov
or
stos
adcb
test
orb
imul
subl
mov
loop
jp
mov
test
jg
es
xchg
fistps
mov
dec
ficoml
cli
loop
mov
aaa
lret
pop
loop
dec
sbb
insb
and
or
or
test
mov
fidivl
and
or
push
push
pop
xor
addr16
jb
push
xor
mov
and
out
sbb
jmp
cmpsl
push
mov
out
das
lret
shl
or
mov
sub
pop
mov
xchg
cmp
mov
adc
cmp
push
out
push
sbb
add
bound
jae
out
addb
int
dec
pop
xchg
fwait
xchg
jg
adc
xchg
mov
das
lods
in
stc
mov
inc
loope,pn
xor
mov
xchg
ret
mov
lcall
outsl
popl
aam
sbb
hlt
xlat
lds
adc
sbb
jg
subl
das
sbb
out
push
or
mov
imulb
xchg
adc
rorl
cmp
aas
adc
adc
push
ret
aam
push
cmc
cmc
xchg
jne
pop
and
xchg
inc
jns
in
fwait
cs
enter
inc
jo
or
popa
pop
outsb
pop
add
and
out
mov
and
loop
pop
inc
lret
lods
jecxz
push
pop
xchg
pop
dec
orb
rcr
inc
in
mov
icebp
or
push
leave
add
test
push
dec
xor
sub
jb
aaa
mov
call
mov
mov
into
adc
sub
movsl
popf
mov
into
in
dec
imul
scas
ret
jno
xor
pop
add
ljmp
shlb
sbb
sub
imul
or
aas
mov
cmp
daa
mov
inc
aaa
pop
adc
adc
mov
pop
or
jne
stos
psubusb
daa
sti
sbb
push
pop
dec
adc
pop
cmp
jbe
repnz
jge
sbb
push
inc
js
mov
mov
sub
cmp
nop
pop
inc
js
adc
orl
xchg
jbe
or
pushf
push
cmc
pop
xor
push
faddp
daa
mov
mov
xlat
lods
xchg
inc
pop
std
in
sub
stc
inc
jo
adc
test
dec
in
loopne
xchg
aas
pushf
xor
cmc
fs
mov
mov
xor
lea
out
loopne
or
nop
cmp
pop
push
lock
jne
ficompl
sbbl
dec
jl
popf
dec
out
test
clc
fcmovnbe
sbb
dec
mov
push
pop
test
out
mov
adc
les
sahf
call
pop
frstor
and
jg
cld
scas
mov
shlb
out
mov
jle
mov
arpl
inc
xor
les
and
and
lds
in
movsb
mov
ljmp
shl
pusha
mov
jge
sub
mov
cmpsb
inc
repnz
inc
xchg
push
in
or
adc
xchg
ror
insb
popf
sub
fs
ret
fs
in
xorb
and
test
and
popa
jae
js
sub
cld
mov
cmp
lret
cltd
and
dec
divl
cmp
movsl
js
scas
nop
ljmp
outsb
dec
push
imul
mov
or
xchg
and
jne
int3
mov
xchg
or
outsl
mov
mov
mov
or
mov
loopne
lret
mov
ret
xchg
outsb
popa
fwait
nop
test
mov
loopne
add
mov
dec
dec
mov
xor
add
xchg
dec
int3
bnd
aaa
push
enter
out
pop
dec
cmp
xor
daa
dec
cmp
ja
mov
fidivrs
hlt
into
mov
pop
cwtl
adc
add
cmpsl
ljmp
arpl
pop
xchg
mov
jb
add
jno
dec
imul
mov
mov
cmc
add
adc
mov
jge
sbb
and
sahf
push
pop
cmp
enter
incl
ds
mov
leave
xchg
inc
ja
sub
test
adc
fwait
andb
or
sbb
sti
ds
cmp
cld
ja
divl
cmp
push
aad
mov
inc
cmpsb
cmp
mov
test
inc
aad
or
ljmp
mov
or
out
inc
jno
inc
cmp
mov
mov
add
pop
push
jne
out
shrl
xchg
dec
fabs
push
pushf
fsub
pushf
jge
fcmovnbe
push
iret
outsb
mov
mov
sbb
adc
ja
cmp
add
std
int
jecxz
fwait
sysenter
and
mov
add
rclb
or
int
shlb
je
jge
loope
lcall
push
lods
scas
ljmp
push
cli
hlt
cli
loopne
das
fdivrs
in
repnz
xor
faddp
rclb
jge
pop
cmp
lods
cmp
mov
or
dec
xchg
xchg
adc
sbb
das
sahf
shr
jge
fstp
sti
xor
fwait
xor
dec
fwait
xor
lcall
sti
rorb
sbb
cs
int3
ja
pop
lcall
mov
sahf
xchg
rcl
xor
mov
cld
cltd
rorb
out
xchg
iret
jmp
adc
fucomp
add
mov
xchg
shlb
push
fisubrs
test
fcoms
cltd
push
inc
mov
sub
mov
es
or
mov
xchg
cmpl
fisttpl
mov
xorl
add
nop
jns
pusha
mov
in
push
ret
or
mov
and
hlt
dec
xchg
push
jmp
push
shr
xchg
ja
jne
push
xor
sub
repz
shll
cwtl
stc
shr
icebp
ret
push
cmp
push
popf
mov
int3
dec
cmc
xor
ljmp
and
gs
fwait
cmp
sbb
ljmp
movsl
xchg
inc
or
jb
hlt
rol
mov
stos
sbb
popl
mov
es
mov
scas
sbbl
xor
cld
add
cmp
push
dec
les
push
xchg
push
mov
mov
shll
pusha
call
pop
sarb
sbb
add
dec
fisubs
xlat
in
or
movsl
imul
cmp
cmp
add
ret
dec
xchg
push
std
mov
outsb
arpl
pop
test
push
push
adc
mov
out
sbb
fsubs
js
sahf
push
jle
mov
sub
aad
push
cmp
sbb
jle
push
cwtl
mov
lahf
sbb
jnp
pushf
mov
xchg
dec
pop
mov
lods
mov
pushf
sub
mov
push
jle
xchg
sarb
mov
cs
sub
addr16
imul
imul
pushl
mov
pop
inc
stos
int
cmpsb
xchg
lods
stos
lret
push
xchg
int3
add
testl
xchg
loope
push
iret
sbb
fstpl
push
jmp
cltd
xor
test
insb
xor
pop
gs
scas
mov
shl
xchg
test
pop
ficompl
leave
push
mov
pop
out
addr16
inc
add
stos
add
or
sbb
ljmp
or
cmc
outsl
and
lds
xor
sti
lock
stos
mov
dec
and
push
xor
push
scas
cs
stc
cmpsb
es
and
xor
cmpl
ret
pop
sbb
or
movsl
lods
adc
das
stos
sub
cmp
pop
mov
in
mulb
sti
ss
leave
mov
test
sub
dec
xchg
pushf
mov
in
cmc
jns
sub
int
mov
fstpl
sbb
ljmp
dec
dec
jg
xchg
lret
jne
andb
rorl
and
loopne
and
jle
push
mov
mov
push
jl
popf
cwtl
xorl
pop
or
and
pop
add
das
ja
sarl
dec
out
test
jmp
mov
int
scas
outsl
stos
cltd
jmp
es
aaa
out
imul
mov
inc
mov
out
test
repnz
push
pop
push
pop
bound
and
das
push
cmp
and
fsubrl
jb
add
push
outsl
add
sbb
pop
out
push
cmp
dec
aam
push
sub
or
xor
and
lods
jb
mul
xchg
lcall
cltd
adcb
cmovns
mov
pop
popf
pop
or
dec
lret
cmp
aaa
mov
jns
loopne
lea
mov
cli
or
bound
xor
hlt
movsb
test
stos
and
add
les
push
push
push
push
sbb
sbbl
and
adc
inc
mov
xchg
out
cmpsb
pop
in
push
and
std
mov
cwtl
push
xor
nop
inc
stos
xchg
mov
sub
inc
rorl
jl
and
add
cmpsb
dec
sub
push
push
popa
fwait
xor
mov
test
add
movsl
sbb
pop
int
xchg
mov
xor
and
aas
dec
sbb
test
nop
sbb
mov
out
push
push
jl
push
sub
int3
xor
test
and
std
lods
cmp
inc
pop
mov
pop
push
mov
sub
pop
repz
test
ss
jg
pop
push
push
mov
pop
test
jae
cwtl
hlt
sub
mov
jns
pushf
cmp
lcall
fidivl
mov
sbb
sarb
out
jnp
mov
add
aas
clc
subl
adc
xchg
push
and
lahf
mov
enter
int
pushf
fucom
dec
mov
out
mov
fbld
xchg
xlat
sbb
inc
mov
adc
icebp
push
xchg
shll
mov
or
pop
add
mov
xor
cmpb
fmul
add
hlt
popa
stos
sbb
js
sub
xchg
push
dec
shl
mov
movsl
outsl
gs
in
fists
scas
sbb
and
seto
jne
lds
inc
gs
cltd
or
xchg
mov
push
das
sbb
jl
shr
mov
mov
push
sbb
sbb
loop
aad
and
lock
cmp
sub
adc
xchg
sbb
mov
add
xor
dec
dec
cmpsb
ret
jmp
mov
cwtl
clc
test
mov
mov
aas
push
enter
popa
cmovg
ss
xor
fmull
sub
cmp
jmp
xchg
test
mov
xchg
leave
dec
xor
pop
jmp
fcmove
lret
mov
lea
xor
xchg
fdivs
arpl
pop
movsb
xchg
bound
xor
imul
pop
orb
xchg
adc
xchg
and
in
mov
scas
jl
adc
dec
int3
jmp
and
aad
mov
les
mov
mov
mov
outsl
xor
mov
mov
das
in
sbb
sbb
lcall
out
rolb
inc
add
xor
es
pextrw
jbe
xor
push
xor
cmp
scas
pop
negb
or
mov
inc
mov
insl
ljmp
cmp
cld
fwait
lahf
imul
test
das
stos
xchg
push
cmp
insb
and
rol
leave
insb
test
jmp
cmp
push
popf
repz
es
out
push
push
aam
outsl
ja
cs
sub
pop
mov
stos
sbb
jg
add
adc
cmpsb
inc
andb
repz
shrb
lcall
call
or
push
sub
lcall
mov
sbb
inc
mov
jb
mov
fidivl
fnstenv
loopne
or
in
stos
push
sbb
sarb
and
in
cwtl
movsb
movsl
int
push
addr16
or
pop
sub
ror
fnsave
cmp
sub
sub
jle
in
mov
mov
sub
iret
test
sbb
imul
push
adc
sbbb
shrl
mov
dec
and
dec
in
inc
mov
aaa
push
dec
mov
xchg
mov
cltd
in
adc
clc
enter
shll
mov
jae
xor
xorb
add
cld
iret
popa
sbb
imul
adc
jne
cmpsl
add
out
sbbl
hlt
ror
push
aaa
test
mov
int3
sbb
and
xchg
rcll
test
xor
pop
lods
dec
push
fs
shll
xchg
or
loope
push
adc
cld
xbegin
movsb
mov
loopne
xchg
push
sbb
nop
fwait
push
mov
data16
fnstcw
xor
mov
push
scas
lahf
std
sub
fdiv
xor
jl
adc
repnz
fidivrl
lods
inc
sub
jecxz
cmpsl
add
and
clc
or
sub
mov
push
arpl
dec
pop
aad
lods
jbe
push
sahf
push
aam
lods
xlat
dec
loopne
sub
and
inc
push
inc
mov
cmp
xor
mov
or
fstpl
hlt
mov
into
fwait
mov
out
es
add
xchg
aad
nop
inc
loope
iret
imul
and
mov
or
xor
cmc
jo
pop
xorl
jg
testl
iret
andl
cld
dec
cs
mov
das
orl
push
adc
inc
cmp
mov
mov
icebp
movb
enter
into
leave
ljmp
call
sub
js
gs
cmp
mov
hlt
or
loopne
inc
xor
stc
adc
in
or
jl
and
ret
aas
into
jp
pop
sbb
cmp
sbb
mov
cltd
adc
inc
pop
and
repnz
adc
pop
mov
repnz
push
xor
iret
daa
push
sbb
aam
orl
popf
leave
dec
cld
sti
jmp
lock
sbb
fldenv
cwtl
jne
cmpsl
lods
pop
inc
imul
dec
rol
add
xlat
in
vmovhpd
add
lods
xor
mov
icebp
and
ret
inc
in
scas
add
mov
fsts
clc
sbb
filds
push
sbb
and
in
push
insl
fbstp
repnz
cmp
xor
xor
xchg
dec
add
enter
and
mov
call
int
cmpsb
nop
add
mov
outsl
fs
fisubrs
jbe
icebp
scas
subb
add
or
pop
loop
sbb
add
inc
das
adc
sbb
repz
xor
scas
mov
loop
sbb
mov
adc
jg
in
stos
ss
fnclex
dec
fmuls
jp
fistpl
push
adcl
in
in
das
mov
int3
ss
cmp
push
xor
jnp
cmp
insb
lea
aam
pop
or
in
cmp
ret
sbb
xchg
sub
sbb
dec
std
das
jno
mov
pop
sbb
daa
and
nop
fldl
pop
inc
sub
xchg
clc
jne
cs
ja
pop
add
into
popf
sbb
cltd
or
push
icebp
in
sbb
xor
cs
rcll
xor
or
or
sub
sbb
push
jns
sahf
enter
daa
aas
cmpsb
push
sti
icebp
push
jbe
jne
cmpsl
sbb
out
cmp
lods
xchg
sahf
mov
push
adcb
jmp
dec
cmp
push
shrl
mov
pop
sub
ret
add
push
stos
clc
shl
xor
jge
mov
mov
or
mov
inc
push
mov
jns
jne
testb
cmpsl
sub
andl
cmpsb
addr16
mov
push
or
xchg
push
jbe
dec
aas
ja
jbe
cmp
dec
aam
add
fs
inc
mov
imul
jne
dec
nop
fdivr
test
cld
loop
and
mov
stos
cmc
cmp
lea
push
sti
loope
xor
in
adc
dec
mov
lods
lds
xchg
fdivr
xchg
clc
loope
enter
and
lahf
sub
es
pop
inc
repnz
push
pop
cmpsb
push
push
sub
mov
popf
or
dec
xor
in
push
pusha
lods
gs
pop
mov
cmpsb
dec
sbb
cmpsl
dec
push
xchg
lds
adc
push
scas
nop
mov
adc
shlb
ja
out
xlat
je
inc
fadd
test
jle
popf
jno
xchg
movsl
aas
aam
movsl
fwait
inc
clc
mov
jp
or
sbb
ja
xor
cltd
lods
pop
mov
xchg
push
outsl
sub
rol
arpl
pushf
adc
jle
adc
pop
xchg
jle
daa
testl
add
outsl
add
sbb
rorb
xor
bound
imul
xor
and
sbb
ja
and
fldenv
xchg
xchg
movsl
cltd
xor
lea
or
cmp
mov
mov
popf
stos
push
dec
jmp
mov
sub
ret
std
fwait
in
in
lahf
enter
jbe
mov
add
outsb
fiaddl
sub
add
sbb
sbb
mov
call
jl
mov
sub
adcl
pop
addl
lock
cli
imul
xchg
push
fwait
xchg
push
ret
push
lods
fs
mov
push
je
adc
pop
ljmp
cmp
fnop
popf
mov
xor
xchg
adc
arpl
push
into
jns
or
pop
mov
int
xor
push
aas
mov
add
xchg
sbb
in
xlat
mov
mov
mov
arpl
jge
add
dec
dec
push
mov
jg
dec
mov
add
sbb
inc
adc
mov
pop
jmp
pop
bound
in
jge
loope
mov
repz
sbb
loope
aas
lock
push
push
mov
sub
movsl
add
push
les
imul
cmp
xchg
xor
insl
add
pop
push
addr16
mov
call
lods
mov
jno
inc
push
mov
cmpsl
repz
add
insl
scas
loopne
inc
dec
pop
xor
hlt
adc
adc
xchg
add
dec
push
test
jnp
push
scas
and
call
mov
add
mov
mov
bound
icebp
jne
mov
add
out
inc
fimull
and
add
or
cmp
sbbb
push
or
into
ljmp
ss
into
stos
int
dec
mov
dec
out
repnz
repnz
rcrl
out
add
jbe
or
sahf
in
dec
dec
test
mull
roll
aam
imul
ja,pn
pop
loopne
mov
lods
add
jecxz
mov
sub
aam
js
test
test
xchg
ljmp
push
ret
pop
jle
icebp
mov
loop
mov
push
pop
ret
insb
hlt
pop
out
push
mov
stc
dec
sti
push
test
les
stos
rorb
xchg
dec
mov
or
je
and
daa
fcomip
out
ret
xchg
fmull
mov
lds
push
adc
fcompp
rol
es
cld
outsb
push
cli
aas
xchg
mov
xor
int
cmp
dec
dec
pop
cmc
jno
push
dec
sbb
cwtl
xchg
scas
dec
out
jae
loopne
test
movsl
xchg
xchg
xlat
outsb
in
addb
jmp
and
repz
test
data16
mulb
jae
inc
clc
jo
sahf
stos
ret
enter
xlat
roll
push
pop
xor
std
pop
xlat
cmp
xchg
pop
push
pop
ss
loopne
test
push
cmp
dec
clc
lods
nop
lods
shll
lret
pop
xchg
js
out
sarl
xchg
fcomip
push
mov
insl
jecxz
inc
inc
ret
pop
adc
test
loop
jge
or
test
das
imul
data16
neg
xrelease
dec
sbb
sbb
imul
pop
insl
test
lock
lcall
jae
mov
movsb
xchg
cmc
movsl
jbe
loop
iret
out
mov
mov
dec
rcll
aas
add
jl
iret
in
aad
and
cmp
sahf
push
mov
int3
pop
push
dec
fisubl
inc
insl
sbb
push
xchg
in
push
cli
shlb
dec
fistps
mov
push
imul
cltd
jno
cwtl
pinsrw
sbb
data16
cmp
fisttpl
mov
inc
pop
jne
xor
push
sahf
push
mov
xchg
clc
leave
dec
filds
inc
loopne
and
jb
or
xchg
push
insb
ja
mov
outsb
lcall
jmp
sub
cmp
jecxz
scas
hlt
aad
fiaddl
mov
popf
lods
out
bound
shrb
mov
hlt
scas
pusha
mov
pop
pop
aad
xchg
sbb
out
push
shll
aas
sahf
div
sub
and
bound
stos
lret
and
sbb
xor
jmp
out
aam
xchg
in
or
repz
push
sbb
cmp
cld
js
in
in
adcl
stos
xor
xor
jnp
mov
xor
mov
es
inc
stos
xor
movl
mov
and
sub
xor
mov
aam
mov
rclb
aaa
lcall
enter
test
mov
repnz
xchg
jae
lock
xchg
jmp
pop
mov
add
shlb
test
dec
fdivrs
scas
add
pop
or
aad
adc
or
notl
pop
mov
xor
outsl
cltd
adc
cwtl
sbb
add
aas
push
lods
pop
lcall
pop
cs
lret
xchg
dec
add
xor
dec
in
fidivs
jno
ds
sub
test
inc
cmpsl
mov
mov
mov
or
push
and
sub
mov
mov
arpl
push
mov
iret
jnp
pop
stos
xor
test
es
cmp
sbb
adc
sub
aad
jle
add
jg
test
loopne
and
xchg
outsb
inc
xor
adc
push
mov
jle
mov
mov
clc
inc
mov
adcb
movsl
fstps
out
fcmovnb
mov
jmp
xchg
sub
sbb
mov
rolb
lea
dec
flds
fsts
call
push
scas
in
test
or
rcll
inc
js
jp
xchg
xor
int3
mov
sbb
inc
mov
sti
xchg
xchg
divl
into
dec
rcrb
add
inc
negb
jecxz
mov
loope
stos
in
fcomps
inc
rcrl
aaa
pop
addr16
sahf
add
jg
lretw
xchg
cmp
mov
adc
data16
leave
ljmp
dec
sbb
fdivs
cmpsb
pusha
mov
out
or
pop
orb
incb
pop
pop
pop
lods
dec
or
inc
aas
shll
inc
mov
pop
call
or
negb
mov
sub
xchg
mov
es
lret
jmp
pop
enter
out
pushf
mov
adc
push
outsb
lods
xor
scas
xlat
push
dec
mov
test
popf
stos
pushl
enter
idivl
adc
add
ret
addr16
jecxz
jns
lahf
jns
test
jle
mov
or
xor
xlat
push
shll
pop
aas
aad
loope
sbb
push
das
cmp
xchg
test
push
lods
out
jge
add
or
ret
mov
test
int
mov
or
xchg
fidivl
jno
das
and
push
xor
int3
or
stc
add
adc
cmp
cmpsb
xor
mov
sub
dec
cltd
mov
push
dec
cwtl
ja
icebp
or
es
stos
fwait
jne
xchg
cmp
jnp
add
andb
nop
mov
mov
mov
daa
pusha
fstps
jg
loope
jae
adc
adc
mov
pop
jbe
out
cmp
and
mov
loope
cmpsb
rcr
rcrb
mov
jp
sub
mov
enter
xchg
pop
add
lods
push
push
xchg
xor
jo
and
cmpsl
mov
xlat
dec
into
and
leave
push
hlt
out
xchg
cmp
in
pop
sbb
and
and
lea
pop
xor
cltd
xchg
out
in
fcompl
rcll
in
or
fmul
push
in
imul
xchg
mov
push
rcll
jno
dec
pop
outsb
xchg
push
sub
add
dec
xor
mov
div
fwait
pushf
and
lods
jae
insb
repnz
cmp
mov
and
scas
inc
lods
inc
dec
mov
dec
movsl
xchg
mov
mov
jmp
fcmovbe
mov
mov
push
ret
enter
xchg
add
ss
stos
mov
dec
sbbl
push
ljmp
lcall
jge
mov
shr
jmp
into
arpl
sbb
cmp
xor
std
pop
outsb
push
das
aad
rcrl
movsl
inc
lahf
push
mov
setp
cmp
pop
and
xorb
mov
add
xchg
aad
imul
add
pushf
nop
pop
add
dec
mov
cmp
fcompl
pop
jno
adc
xor
fmull
ss
int
frstor
xchg
inc
xchg
cmp
cmp
pusha
jmp
shrl
cmp
addb
xlat
stos
cwtl
cmpsb
and
xchg
imul
jp
out
mov
xchg
enter
and
cmp
icebp
shlb
inc
mov
adc
shlb
clc
push
scas
sti
jg
pop
scas
cmp
lock
adc
int
lret
xor
mov
jle
or
pop
lahf
hlt
jns
jno
sti
mov
add
aam
in
in
inc
nop
stc
sub
repnz
es
xor
or
jge
jmp
movsl
filds
idivb
clc
ret
ljmp
scas
jg
pop
jmp
mov
fnstcw
int
inc
push
repz
enter
test
sbb
lret
orl
test
mov
and
popf
push
mov
cwtl
adc
adc
loop
cmp
lahf
push
dec
push
pop
add
js
dec
inc
ss
and
pop
xchg
xor
mov
xchg
pop
iret
cmp
in
xor
in
in
lret
mov
push
push
adc
cmp
cli
inc
xchg
pusha
xor
in
jbe
mov
adc
xlat
pushf
pop
repz
push
add
sbb
shl
inc
xor
push
xchg
popa
rcrb
icebp
in
fdivrp
xchg
xchg
sub
mov
gs
insb
jbe
mov
xor
mov
popf
jbe
cltd
pop
push
mov
add
add
stos
xor
test
icebp
ljmp
mov
nop
addr16
rcll
jo
out
or
xchg
fisttpll
shll
shll
push
mov
xor
mov
cmp
add
outsb
fcoms
insl
jl
rcl
mov
jge
idivb
cmpsl
inc
lds
push
mov
sbb
sbb
jecxz
mov
daa
icebp
inc
xchg
cmp
gs
mov
adc
popf
lret
xor
sbb
jns
loope
es
mov
jo
push
mov
sahf
jge
pop
stc
int
repnz
cli
fnstcw
ret
stos
pop
imul
xchg
js
inc
mov
jg
sbb
daa
jmp
mov
xchg
leave
and
mov
mov
and
and
and
push
dec
adc
mov
push
add
pop
data16
pop
adc
xchg
sbb
cmpsb
or
std
cld
scas
mov
add
and
cmpsl
push
aas
fistpll
pop
test
lcall
ja
shll
sub
dec
lods
inc
jns
sbb
test
cmp
insb
push
rcll
data16
adc
push
cmp
sbb
push
es
mov
or
bound
mov
sbb
and
inc
mov
xor
or
adc
mov
lret
cmp
or
cmpsb
inc
push
filds
sti
add
repnz
mov
mov
out
sub
mov
xchg
jecxz
dec
sahf
sub
pop
mov
mov
stos
mov
leave
ficoms
into
cs
cld
sbb
sti
arpl
mov
dec
mov
inc
adc
repz
sub
iret
jo
sub
outsl
or
movsb
push
stc
into
ss
call
mov
ret
testl
mov
das
jae
push
cmc
arpl
sar
out
sahf
mov
mov
cmp
xchg
and
adc
sub
ret
inc
and
mov
ficomps
pop
jp
sarl
mov
or
aaa
cmc
stos
in
and
fdivs
orl
out
jl
dec
cmp
stos
xor
mov
call
scas
rcrb
mov
jl
mov
pop
jecxz
cld
icebp
dec
les
push
or
jecxz
pop
xchg
sub
clc
xchg
xchg
jne
repz
xor
insl
addr16
jb
push
dec
mov
jns
and
add
hlt
adc
icebp
mov
insb
and
add
mov
sbb
push
cld
sub
das
jg
movsl
xlat
lods
ret
xor
sbb
push
cmp
rcrb
sub
jmp
cmc
cltd
call
push
cmp
xor
dec
mov
fs
push
fs
ja
xchg
lds
stos
pop
jecxz
aad
push
sub
cld
mov
ror
notl
sub
dec
or
add
cmpl
cmc
idivl
fcomps
pop
pop
jle
mov
cmpsb
push
popa
pop
sbb
and
aaa
sbb
sbb
push
adc
je
div
adc
push
sub
sub
adc
sub
rolb
test
xor
sbb
inc
mov
testl
and
lods
andl
dec
ret
in
in
push
xchg
xor
outsl
in
cwtl
aam
rcrb
sarb
jmp
lea
mov
jl
pop
inc
out
adc
mov
cmpl
and
mov
and
cmc
test
sub
insb
fsts
jo
and
mov
insb
inc
icebp
in
xlat
or
jge
mov
xchg
mov
data16
jmp
imul
lds
loop
or
packsswb
adc
iret
pop
adcl
flds
add
je
into
int
pop
cmp
popf
push
sub
fucomi
or
mov
iret
shll
and
int3
lcall
mov
aaa
sbb
inc
xor
jmp
out
lcall
pop
add
out
xchg
inc
mov
movsb
and
sbb
sub
push
rorl
sub
xor
adcl
imul
push
daa
sbb
adc
sub
xor
sbb
push
sbb
daa
ret
fs
mov
sbb
mov
add
pop
lret
xchg
fimull
xchg
dec
jno
sti
pusha
cmp
dec
mov
mov
shrb
push
fwait
aaa
xor
jnp
mov
mov
adcl
or
lahf
lret
ror
dec
and
dec
jp
imul
sahf
lea
mov
pop
cltd
push
cwtl
xchg
lret
or
jmp
fistpll
dec
pop
mov
hlt
ret
xor
push
idivb
sti
inc
add
sti
mov
xchg
add
xchg
in
repz
or
mov
mov
lods
hlt
or
xchg
add
fbld
popa
call
fld
loop
cmp
push
mov
cmp
sbb
jg
in
push
jl
jno
addr16
or
sbb
and
pop
jns
lahf
call
xchg
cltd
jae
test
lods
mov
jns
test
movsl
push
cltd
push
cltd
inc
jno
sub
mov
mov
mov
xchg
xor
pop
ret
clc
jle
mov
adc
pop
outsb
add
push
ret
bound
dec
add
and
xchg
pop
cmp
cmpsb
push
loope
xchg
sub
test
sbb
push
int3
cmp
lea
int
sub
daa
xchg
arpl
je
jge
cld
sbb
stos
sbb
mov
add
jo
jnp
test
loop,pt
sub
inc
dec
or
pushf
xchg
movsl
mov
sub
sbb
jo
pop
pop
sub
or
inc
push
cmp
xchg
scas
xrelease
cmc
inc
xor
adc
ficoms
bound
mov
mov
cli
or
inc
sub
xchg
add
mov
rclb
cmp
xor
popf
lods
jecxz
pop
or
jmp
test
in
movsl
mov
loope
cmp
cmp
push
and
and
dec
bound
mov
xor
enter
sub
loope
mov
or
jo
mov
mov
les
das
xlat
addr16
out
push
dec
adc
std
pop
and
stos
in
or
add
jge
mov
add
outsb
shl
js
push
push
or
cmc
push
push
shll
psubsb
and
sar
out
cmp
fsubp
mov
test
push
repz
movsl
pop
lret
add
icebp
mov
jns
mov
stc
xor
popf
arpl
xor
jb
and
ret
jae
outsl
jae
mov
xor
into
das
mov
ja
inc
cmp
sub
cwtl
adc
and
sub
mov
xchg
subl
xor
bound
and
cmpsl
pushf
dec
push
scas
scas
sub
divl
add
cmp
lock
push
out
ss
in
fs
dec
enter
xchg
xchg
pop
loopne
cmc
rorl
popa
jg
jle
cmp
xor
or
xor
push
mov
or
xor
sub
pop
cmp
mov
jns
or
pushw
rolb
pop
ja
cmp
adc
popa
sub
xorl
stos
std
pop
mov
add
rcrl
xor
jno
cmpsb
inc
stos
orb
bound
push
sub
fstpl
mov
popa
adc
pandn
push
sub
push
test
out
shr
pop
in
insl
ret
inc
lret
imul
cmpsb
xor
mov
es
sub
pop
jns
add
imulb
xchg
std
xor
sbb
jns
sub
aas
out
addr16
add
ljmp
outsb
adc
cltd
stos
xor
adcl
sbb
fucomi
ljmp
out
adc
cmp
push
dec
or
and
xor
cmpsl
repnz
sti
mov
and
inc
xor
decb
xchg
jmp
add
mov
fs
pusha
adc
icebp
jge
xchg
jbe
jbe,pt
mov
fisubrs
inc
xchg
daa
adc
rclb
mov
aaa
inc
icebp
mov
push
xor
fincstp
call
pop
imul
sub
jne
test
sub
into
test
mov
incb
mov
das
ficoms
loopne
pushf
fsubrp
push
inc
mov
bound
lret
pop
inc
inc
aas
mov
mov
cmpsl
mov
xlat
dec
scas
fdivs
popfw
add
sti
mov
mov
pop
cs
ret
dec
cmc
xchg
out
mov
jmp
mov
in
cld
cli
xchg
ret
adc
xchg
das
sbb
xchg
mov
pop
xor
add
sub
sub
hlt
repnz
inc
cld
jp
inc
fs
fldenv
xorl
and
pop
ljmp
fdivs
test
not
pop
cmp
push
sahf
pop
dec
lock
add
add
int3
scas
sub
mov
ja
cmpl
mov
push
loop
xlat
icebp
iret
pushf
adc
push
fwait
mov
jns
jnp
lcall
and
inc
rol
and
push
sub
adc
jg
sub
lds
test
orb
int
iret
imul
add
xchg
xchg
std
call
xchg
incl
pop
pop
or
adc
stos
pop
mov
mov
or
xchg
cmp
mov
pop
mov
adc
es
and
lret
in
jge
test
adc
rol
jge
xchg
and
sbb
xor
and
sbb
mov
pop
imul
cmp
dec
fdivl
xchg
test
lea
lret
adc
jl
xchg
mov
push
mul
add
shrb
mov
mov
insb
jmp
test
not
mov
xor
dec
ds
std
rorb
stos
pop
or
mov
push
cmp
pop
and
stos
outsl
std
test
sub
pmaddwd
daa
and
jle
jl
cltd
xchg
xchg
cmc
add
lret
aam
test
into
lcall
fbstp
ja
and
fs
and
xor
and
xor
sbb
pushf
cs
and
fistps
arpl
movsb
je
fdivrs
fisubl
mov
and
int
xchg
incb
hlt
inc
add
push
cmp
adc
mov
mov
inc
inc
jnp
cltd
cwtl
sbb
pop
outsb
mov
mov
pop
das
dec
sub
leave
cmp
jp
mov
aam
push
push
cmpsb
mov
dec
dec
jne
dec
lahf
pop
pop
pop
fcoml
scas
sbb
outsl
and
pop
imul
mov
arpl
xchg
adc
cmp
lock
pop
add
mov
jbe
mov
pop
inc
sahf
inc
dec
sbb
jo
aad
rcr
scas
xor
push
inc
subb
push
popf
pop
int3
jno
sub
xor
xchg
hlt
subl
fwait
sub
les
mov
movsl
out
pop
call
xor
out
add
xchg
jb
jb
pusha
mov
xchg
lcall
loope
insb
aad
into
mov
scas
or
cmp
lods
mov
imul
je
popf
hlt
pop
fwait
dec
add
std
pop
aas
sub
lods
dec
sub
call
in
mov
out
or
jns
inc
mov
dec
mov
xchg
push
xchg
mov
shlb
pop
loop
sbb
mov
sub
add
fdivs
lret
sub
ds
and
inc
or
cmpsb
xor
dec
dec
dec
add
daa
hlt
xor
inc
outsl
sub
out
cmpsb
mov
xlat
cmp
inc
dec
lret
sub
aas
sbbb
xor
mov
insl
xchg
jns
dec
pop
addr16
sbb
les
fwait
loope
and
adc
in
mov
cmpsl
subl
jl
cmp
dec
pop
xchg
rclb
ja
dec
and
inc
mov
mov
add
pop
addb
mov
xor
sti
int
in
xor
adc
mov
lds
cli
repnz
push
xchg
fwait
jno
loopne
outsl
jb
mov
jmp
jp
loop
add
mov
sbb
cmpl
push
insl
ds
loope
cwtl
icebp
pop
mov
mov
mov
rorl
mov
fnstcw
sbb
dec
cmp
std
inc
xor
inc
adc
xor
sub
enter
neg
adc
xchg
orb
fs
mov
scas
jno
in
lock
push
aad
insl
inc
cmp
pop
xor
mov
out
pop
push
mov
daa
lret
mov
push
out
mov
orb
inc
sub
mov
sub
add
mov
adc
test
pop
push
xchg
mov
adc
mov
fidivrs
fdivrs
mov
icebp
mov
adc
lods
test
or
into
and
gs
fimull
jle
jg
hlt
loopne
outsb
push
orl
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
inc
icebp
adc
testb
jmp
les
into
dec
push
call
pop
push
stc
mov
push
sub
cmpsb
mov
cmpsb
jp
jge
ja
mov
mov
add
cmp
repz
test
ss
xor
lea
icebp
mov
push
dec
xchg
repz
pushf
sub
xor
cltd
mov
std
jg
mov
adc
xchg
outsl
push
mov
dec
das
into
pop
stos
out
push
dec
shrb
jp
inc
bound
push
ret
xchg
daa
pop
outsl
ljmp
sbb
sbb
pop
adcl
or
push
pop
ds
xor
jp
inc
aad
fisttps
pusha
push
mov
or
cmp
and
fldcw
xorb
or
in
add
test
dec
es
movsb
or
out
xchg
decb
mov
pop
or
insb
add
jbe
lret
inc
push
sbb
sub
mov
mov
repnz
inc
loop
mov
cmp
pop
lods
xchg
out
jne
and
das
divl
inc
call
adc
fsubrs
jge
inc
ret
sti
sbbl
xorl
sbb
bound
inc
add
or
mov
dec
popf
push
iret
aas
loope
divb
out
sub
push
xchg
jbe
push
icebp
test
sbb
lcall
mov
add
psubq
jl
add
adc
lods
lock
in
add
mov
scas
sbb
scas
mov
inc
adc
movsb
rclb
xor
outsl
cmp
push
sub
daa
sub
pop
jb
pop
bound
dec
push
dec
cmp
popa
test
sbb
stc
mov
in
mov
sbb
sbb
mov
jb
mov
sub
loope
mov
xor
or
mov
or
fbstp
stos
pause
in
xchg
sti
mov
or
in
add
dec
scas
or
mov
mov
xchg
mov
add
aad
xchg
arpl
mov
jne
lds
xchg
and
mov
jmp
gs
clc
lret
loop
push
imull
call
sbb
mov
sub
dec
or
loop
sbb
and
cwtl
push
fisttpl
out
xchg
clc
stc
pushf
and
enter
cli
hlt
xor
xchg
fistl
in
inc
dec
add
mov
aas
gs
xor
cld
push
fisttps
push
outsl
mov
xor
mov
sub
xchg
push
push
mov
jae
xor
fldcw
mov
out
loope
and
inc
ja
cmp
jg
addr16
std
outsl
and
xchg
mov
ret
lock
jnp
lods
sub
outsl
push
mov
les
jmp
xor
or
imull
pop
and
xor
sub
fcmovnb
cmp
adc
in
les
or
cmpsb
adc
fsts
pop
stos
mov
divb
jbe
in
mov
pop
int
call
and
orb
adc
insb
push
mov
sbb
lret
push
movb
int3
cwtl
imul
repnz
xor
popf
shrl
rcr
pop
xchg
setg
ret
rolb
das
stc
into
xorb
mov
or
movsl
in
adc
mov
cwtl
scas
mov
hlt
inc
jmp
outsb
lret
sbb
pop
pop
int
mov
out
out
out
xchg
xor
out
or
sub
stos
jecxz
loope
idiv
cld
mov
in
jno
cmc
test
sbb
mov
stos
adc
mov
cmc
imul
lods
arpl
jle
loopne
es
add
sub
movsl
cmp
add
stos
cmp
sti
rclb
add
cmc
fwait
les
dec
add
test
xchg
sbb
jge
call
push
test
jo
cmp
ret
insl
adc
jl
push
hlt
stos
mov
or
and
xor
dec
adc
jns
push
jbe
inc
pop
sub
adc
push
hlt
inc
cmpsl
and
imul
xchg
jns
mov
fimull
mov
sbb
mov
fsts
mov
lods
sarb
jbe
jl
sbb
push
push
andl
push
sahf
lods
pop
sbb
or
call
je
sbb
jle
mov
negl
add
sbb
mov
cmp
fstps
xor
xor
mov
mov
std
stc
pusha
cmp
sbb
xchg
ret
loope
and
sub
test
add
pop
push
scas
ror
daa
mov
mov
clc
add
adc
cmc
adc
pminub
pop
mov
or
sar
int3
mov
repz
jo
enter
mov
jb
cmp
shrb
out
aam
rclb
out
inc
cmc
daa
rorb
dec
add
iret
les
jnp
fadd
pop
sbb
xchg
out
jo
sbb
push
push
dec
loope
fstpt
outsl
iret
cmp
adc
and
lret
rol
jbe
fsubrp
adc
out
sub
daa
test
inc
bnd
sti
add
gs
push
adc
sub
lret
push
xchg
out
xchg
jp
push
das
xor
mov
jge
sub
xlat
bound
bound
adc
or
int
and
mov
roll
add
or
pop
bound
test
push
pop
inc
jecxz
int
push
mov
adc
inc
or
data16
pushf
sbb
imul
dec
push
dec
fnstsw
sbb
sbb
fdivl
mov
mov
std
jo
adc
clc
cltd
sbb
adc
negl
dec
aaa
fstl
leave
hlt
and
jg
orb
cli
js
out
adc
bound
mov
bound
imul
in
dec
sub
addl
stos
mov
jbe
mov
sub
adc
ret
es
sahf
scas
test
add
mov
ljmp
mov
jo
call
add
and
cmpsl
jo
xchg
jl
jp
pop
mov
lret
inc
fstl
std
mov
jmp
popa
mov
sub
xor
test
test
add
xor
pop
push
and
add
or
leave
fstps
and
aas
pop
cmp
xor
cmp
adcl
lret
mov
addr16
ja
icebp
mull
enter
mulb
adc
sub
sub
inc
sub
lea
mov
cmp
cltd
cmp
xchg
in
ljmp
mov
cmp
outsl
es
and
shll
sub
mov
push
nop
inc
out
dec
js
imul
pusha
push
clc
pop
jne
ja
lds
cmp
jno
notb
sub
xor
cltd
sub
popf
jo
cltd
fsubl
pop
mov
in
fs
inc
jge
and
aad
fdivrs
sahf
xor
sbb
pmuludq
xlat
and
pop
or
js
fistl
shlb
xor
das
stc
es
or
pop
fsubl
cmp
fmuls
inc
arpl
test
jle
mov
dec
push
mov
cs
popa
orb
pushf
mov
cmp
mov
call
pop
in
das
sahf
mov
repz
movsl
mov
pop
dec
scas
lea
shlb
fs
es
aad
lock
and
dec
loope
jp
cmp
pop
cmp
movsl
inc
mov
ret
cmp
decb
pop
cwtl
stos
pop
xchg
sbb
or
sbb
jb
xchg
jp
enter
push
xor
mov
scas
cs
push
enter
mov
jg
iret
xor
or
fstpt
in
clc
jbe
sbb
pop
push
adc
imul
add
mov
movsl
imul
sbb
ss
jns
out
movsb
adc
xchg
cmpsl
in
dec
sahf
lods
add
xchg
pop
add
sarl
hlt
sub
lret
in
pop
mov
je,pt
cmp
out
cmpxchg
cmp
shl
rcr
mov
pop
sub
and
xchg
jecxz
nop
xor
xor
lds
mov
add
mov
stc
mov
test
stc
out
fmull
fisubrs
sti
mov
nop
imul
sbb
xlat
xchg
pusha
je
ja
mov
clc
xchg
loop
xlat
sub
mov
xor
subl
sub
push
dec
jmp
push
lods
mov
inc
or
mov
in
cltd
dec
insb
mov
sub
pop
sbb
pop
ret
cli
mov
dec
outsb
add
mov
fsubp
loop
inc
xchg
in
pushf
mov
cmp
ret
bound
cmpsb
insb
jno
rorb
or
loopne
rclb
ja
sub
jno
add
mov
mov
pop
ds
pop
push
or
sbb
fs
or
fidivrl
lret
lret
mov
inc
loop
mov
inc
ret
push
notl
pop
and
add
xchg
mov
push
gs
cmpsl
mov
mov
jecxz
sti
dec
jl
jecxz
js
or
mov
das
fimull
aad
push
int3
mov
mov
mov
test
xor
sub
add
fists
sbb
sti
push
mov
in
in
sub
jl
jp
cltd
das
jne
fimull
jecxz
out
jno
add
xor
test
push
ret
push
sub
xor
dec
fidivl
xchg
js
shrl
pusha
push
sub
scas
orb
cmpsb
dec
sbb
push
cmp
or
adc
mov
mov
mov
push
cltd
push
dec
fidivrl
push
scas
jecxz
in
inc
scas
dec
and
dec
jl
enter
enter
outsl
and
push
loope
or
cmp
dec
addb
insl
gs
sbb
or
sbb
jge
shll
or
andb
jae
push
mov
adc
into
into
inc
mov
jns
das
mov
in
mov
xchg
sbb
ljmp
cmp
fdivrl
stc
or
out
test
leave
xchg
in
xchg
inc
int
mov
and
aas
cmp
xor
cwtl
sub
mov
in
es
mov
adc
xor
sub
pop
pop
sub
mov
test
mov
pop
push
in
movsb
push
outsl
out
cmp
mov
dec
insl
or
mov
sub
outsb
lea
std
sbb
loope
in
adc
fidivrs
mov
lods
jp
enter
inc
into
adc
dec
fwait
or
dec
adc
sbb
js
mov
pop
pop
fisttps
sub
jle
inc
fnstsw
lret
out
icebp
jmp
lea
test
mov
xchg
inc
inc
mov
inc
jns
leave
inc
and
mov
ffreep
xor
fidivrs
nop
mov
fnstenv
das
pop
imul
ljmp
aad
lea
loopne
push
xchg
jge
ds
cmp
mov
adc
lret
cli
out
push
out
popf
mov
add
pop
adc
dec
int
inc
xor
xor
xchg
ljmp
call
dec
shrb
sbbb
jge
sub
popa
adc
add
and
gs
xlat
mov
xchg
xor
jo
and
fdivs
xchg
xchg
sub
dec
lret
pop
push
mov
cli
imul
mov
notl
adc
push
add
add
pop
and
jmp
stc
push
mov
std
pop
dec
xor
sub
push
fnsave
data16
xchg
adc
sbb
in
mov
xor
stos
call
mov
mov
std
inc
cmp
push
popf
nop
loop
and
es
fsub
xor
cmc
mov
rclb
imul
push
bound
mov
jg
stc
mov
push
and
xor
pushf
sub
sbb
aad
cmp
aad
push
pop
mov
mov
dec
hlt
inc
mov
je
jge
js
sbb
std
es
sub
xchg
jne
enter
stos
adcl
icebp
mov
push
sbb
mov
adc
jno
lret
sub
leave
add
and
out
stos
aad
xchg
lea
test
adc
aaa
dec
fdivr
aad
icebp
push
out
push
push
and
cwtl
and
xor
jg
adc
add
mov
add
loop
scas
cmpsb
incb
inc
lahf
push
xchg
lock
xor
mov
popa
pop
mov
jnp
mov
addl
jno
inc
movsl
out
sub
call
cmpsb
mov
loope
mov
data16
lea
mov
hlt
ljmp
push
pop
pushf
add
movsl
add
imul
xor
addr16
mov
jge
shll
scas
ja
in
mov
daa
mov
inc
test
jne
adc
test
sbb
add
in
add
das
aas
lock
pop
stos
cmp
sbb
mov
sub
jp
sbb
cmpsb
dec
xchg
rcrb
inc
push
call
imul
iret
arpl
fwait
test
roll
mov
std
mov
test
dec
into
adc
in
mov
mov
or
and
testb
and
xor
fstpl
inc
xor
test
inc
jmp
out
sar
mov
push
push
fcmovnbe
xchg
and
xchg
mov
xchg
adc
mov
push
pop
pop
cmp
add
scas
insl
mov
xor
in
pop
test
adc
int3
sahf
daa
aaa
xchg
or
outsb
xor
inc
xor
mov
push
lods
sub
and
roll
xchg
mov
clc
fs
stos
sub
aaa
add
pop
inc
jge
pop
adc
dec
and
inc
das
add
dec
stos
mov
ljmp
mov
and
xchg
jb
fwait
scas
jno
cltd
or
inc
imul
sahf
jle
iret
std
mov
sub
dec
ficompl
pop
out
popf
js
std
pop
lcall
shll
bnd
mov
sbb
fcompl
mov
cmp
jge
stos
inc
test
jne
popf
adc
adc
mov
push
or
adc
ljmp
mov
jne
xor
xchg
jg
push
ret
or
loop
or
jmp
push
jae
jl
sub
mov
mov
xor
pop
xchg
sbb
cmp
adc
movsl
mov
push
pop
add
cltd
fstl
mov
daa
dec
mov
into
xchg
jo
and
or
dec
pusha
cmp
test
push
test
and
mov
mov
insl
fnsave
lcall
imul
sarl
notl
xlat
and
sub
lret
ljmp
out
sub
and
sahf
sub
cmpsl
icebp
dec
cltd
ret
decb
ja
mov
dec
rcl
mov
sbb
leave
popa
mov
push
lcall
js
lea
int3
mov
inc
movsl
or
loopne
push
push
jecxz
mov
inc
fdivrl
cld
and
lds
mov
push
sub
add
push
js
dec
or
fwait
repz
mov
popf
arpl
pushf
dec
mov
sarl
js
sbb
stc
test
pusha
es
adc
adc
or
movl
ret
icebp
lods
push
insb
jns
mov
jecxz
rolw
ret
cmp
fadds
ja
add
es
jns
xchg
jge
movsl
lods
ss
pop
mov
lcall
jmp
xchg
ljmp
movsl
inc
cmp
je
jns
push
pop
mov
fucom
ljmp
imulb
movsl
test
cltd
hlt
cli
std
sub
mov
xlat
cmp
fwait
test
out
insb
lods
xor
ljmp
push
aaa
add
cs
insl
insl
pop
add
test
orl
cld
mov
test
jg
inc
xchg
mov
jns
mov
dec
cmp
mov
jp
xchg
mov
jne
das
mov
cmp
lods
mov
popa
mov
and
jp
shll
pop
idiv
push
nop
inc
jg
sub
ja
mov
jns
xchg
scas
adc
xchg
inc
or
pop
mov
fiadds
clc
into
imul
dec
shrl
fcomps
sub
push
mov
fiadds
testb
add
lret
inc
mov
pop
pop
or
je
daa
cmpsl
aas
jl
add
sbb
push
fsts
loopne
xor
pop
pop
ss
dec
jge
inc
rolb
sti
aas
repnz
test
aam
call
lret
jg
jbe
and
popl
fcmove
cmp
push
push
insb
sbb
imul
jg
int
add
sub
shlb
xchg
pop
fstps
jmp
mov
dec
jmp
cmp
mov
fwait
mov
and
pop
lret
lods
das
jp
jle
out
jno
xor
imul
jno
xchg
in
and
lea
jg
cmpsb
mov
inc
jnp
loop
cmpsl
mov
ret
jge
sbb
mov
ret
aaa
inc
jne
xor
in
ds
nop
jl
cs
mov
aas
into
fwait
outsl
push
pop
pop
and
aam
dec
xchg
jb
adc
cpuid
or
into
dec
push
movsb
cmpsb
pop
stos
stc
in
dec
and
and
push
loope
movsb
pop
pop
aaa
stos
cmp
pop
js
cmp
xor
pop
and
fldcw
push
mov
xchg
loopne
addb
and
cwtl
sahf
push
lock
mov
call
dec
rolb
cmp
das
adc
incl
jge
inc
pushf
stc
imul
jnp
and
imul
mov
dec
aaa
xlat
ficomps
push
mov
repnz
pusha
xchg
clc
pop
mov
sti
jle
ja
mov
jne
rcr
popaw
jae
pop
addr16
inc
push
pushf
fidivrl
stc
adc
mov
push
push
or
dec
aam
mov
xchg
pop
sub
icebp
test
mov
jno
test
dec
or
lock
cmpsb
imul
mov
xchg
rcrb
out
out
leave
ss
add
ljmp
jne
mov
jnp,pn
xor
aad
mov
xchg
adc
sbb
xchg
dec
xchg
daa
sub
and
cwtl
test
mov
data16
outsb
add
xchg
mov
mov
rcl
aas
add
jne
xchg
pusha
mov
and
pop
stc
dec
jp
rclb
adc
pop
xchg
mov
inc
jp
lock
add
fbld
sahf
inc
inc
adc
mov
cmp
pop
mov
cmp
push
nop
xchg
sub
adc
xchg
push
dec
cmp
sbb
inc
inc
sbb
or
cmp
cli
lock
push
sbb
push
mov
mov
and
cmp
mull
cs
dec
clc
mov
dec
imul
push
sbb
dec
lret
add
xchg
cmp
stos
and
or
mov
sub
test
lock
lahf
inc
cltd
in
repnz
daa
fistl
cmpsl
mov
xchg
jp
fildl
adc
outsl
push
push
cmp
popf
mov
push
jecxz
rcrb
leave
shlb
lea
sbb
push
aaa
push
jae
and
xchg
aam
fsubl
sbb
or
cmp
cmp
add
cld
jmp
add
adc
adc
xlat
les
push
or
das
jae
and
push
cmpsb
mov
pop
sub
es
sbb
pop
out
mov
int
sub
push
mov
jl
dec
aam
das
shrb
mov
jne
push
and
sbb
out
jo
into
pushf
outsb
or
lret
lret
fcompl
jbe
push
fmuls
movsl
sbb
and
cli
dec
pusha
scas
in
sub
push
xor
test
cmp
int
adc
out
pop
push
sahf
fimull
dec
aam
inc
jmp
cmp
xchg
imul
sbb
es
jge
cmp
mov
mov
dec
mov
loope
pushf
je
fsub
cmp
jo
mov
cmp
inc
rclb
mov
loop
mov
loopne
imul
test
loope
loope
cmp
sahf
adc
sub
adc
ret
fdiv
mov
call
aam
ss
sbb
hlt
mov
sbb
adc
imul
sub
fstps
out
jnp
pop
fnstsw
cmp
cld
dec
mov
popf
or
mov
ret
mov
cmp
ret
dec
adc
push
push
and
mov
xchg
ds
loop
dec
sar
shlb
mov
pop
mov
xor
scas
test
andl
inc
mov
push
pop
pop
mov
jne
mov
hlt
dec
cmc
fnstcw
or
pop
call
pusha
or
aam
clc
std
in
jp
cmp
push
and
dec
xor
clc
mov
std
icebp
mov
rorb
incl
in
adc
int3
push
ds
mov
xor
pop
pop
aad
pusha
inc
loope
cmpsl
stos
ss
lea
in
dec
xor
and
mov
dec
stc
loope
fucom
subb
cmp
gs
jnp
cs
jb
ret
in
mov
adc
push
push
outsb
cwtl
lods
xor
std
sub
shld
in
shll
insb
cmovs
jne
dec
and
and
adc
rorb
push
stc
ja
mov
push
leave
in
call
inc
or
inc
xor
hlt
adc
test
xor
xchg
inc
cmp
imul
mov
and
xor
push
scas
jmp
sbb
iret
ss
jbe
rclb
xchg
out
mov
xchg
mov
mov
les
icebp
divb
pop
xor
mov
pop
push
cmp
xchg
push
fdiv
cmpsb
pusha
insb
popf
adc
jbe
fstps
mov
inc
jo
popa
rcr
mov
cli
sub
lock
push
sub
fs
shrl
jns
ret
jae
popa
movsl
lret
int3
mov
push
sub
sbb
push
mov
fstpl
outsb
mov
push
cmp
or
not
xor
jbe
pop
mov
mov
mov
sbb
nop
test
pop
push
sbb
or
fbld
jmp
inc
push
je
pop
jp
punpcklbw
add
lods
mov
push
cwtl
test
in
lea
shlb
movsb
outsb
fiaddl
mov
or
ss
stos
cmp
int3
jp
jge
lret
ficompl
ficomps
inc
xor
push
mov
push
pop
loopne
add
mov
xor
das
lret
xlat
mov
rcr
push
fcomps
mov
fldl
lea
dec
ljmp
mov
mov
lock
pop
sbb
movsl
sub
outsl
xchg
add
outsb
sbb
std
sub
loop
mov
xchg
push
xlat
pop
jge
movsl
xchg
pop
outsl
rol
jb
inc
and
fstpl
cmc
sbb
mov
sbb
xchg
jo
jg
push
mov
bound
call
loopne
adc
push
push
popa
out
pop
lods
lock
jge
cmpsb
xor
xor
xchg
ss
movsl
or
jg
popf
and
daa
mov
adc
mov
test
dec
in
mov
and
xchg
xchg
movups
dec
inc
push
and
mov
push
push
xlat
lods
and
or
add
dec
cmpsb
sahf
popa
xor
daa
mov
int
dec
mov
sbb
loopne
add
fildll
or
or
mov
push
add
pop
out
movsl
add
rcrb
mov
and
sub
int
mov
gs
sbb
and
fsubrs
push
jmp
aam
filds
inc
mov
rorb
lods
cmp
dec
mov
mov
mov
dec
out
push
dec
adc
xor
cmp
ljmp
imul
sub
add
or
dec
sub
stc
ljmp
out
inc
adcb
and
mov
pushl
aam
stos
mov
and
loope
roll
fisubrs
lods
pop
das
lcall
movsb
loop
cmpsb
icebp
lret
jmp
out
cltd
and
and
xor
lods
in
std
enter
imul
and
mov
inc
loop
xchg
adc
clc
into
inc
jecxz
push
mov
js
jne
aas
in
sbb
rol
jno
lret
je
push
sbb
js
leave
pushf
aaa
cli
in
pop
insl
sarb
mov
adc
fcmovb
mov
shrb
popf
push
sbb
mov
in
rcll
cli
mov
aas
and
xor
mov
push
mov
and
add
or
icebp
out
pop
subb
xor
dec
or
pop
or
and
mov
xchg
inc
jg
xchg
loopne
xor
dec
or
xchg
movsl
loop
insl
jle
xchg
mov
cld
les
xor
bound
je
pop
pop
inc
inc
xor
stc
lahf
nop
addr16
add
sbb
inc
out
divl
pop
add
dec
mov
pop
cmpsl
das
add
mov
mov
pop
jns
mov
inc
jb
mov
fsqrt
mov
pop
fwait
mov
mov
scas
jecxz
mov
or
xchg
shrb
aam
mov
out
je
pop
jmp
lahf
rorl
cltd
out
add
push
mov
clc
inc
mov
inc
aas
sub
stos
cmc
lea
arpl
sbb
mov
inc
cmp
dec
int
pop
xchg
pushf
cmpl
movsb
sbb
sbb
sbb
lcall
add
sub
mov
and
push
dec
mov
mov
out
add
mov
repnz
test
into
add
jnp
repnz
pop
shl
lods
into
subb
xor
pop
sahf
adc
pop
movhps
push
popa
je
dec
mov
mov
mov
iret
jle
mov
repz
mov
xor
mov
sub
lret
lds
xchg
fcmovbe
fcmove
inc
test
cmp
xchg
inc
gs
repnz
cld
pop
out
imul
test
aaa
mov
inc
aam
stc
cmp
lahf
cmp
or
pop
mov
sbb
sub
or
insb
stos
out
push
adc
mov
das
cmpsl
sub
xor
jbe
sar
sahf
dec
mov
out
xor
ja
mov
stos
imul
or
loop
clc
sub
and
cmp
mov
pop
jp
std
lds
cli
cmp
sub
push
leave
in
leave
cs
clc
and
mov
cmc
std
jbe
scas
lods
fildl
or
shlb
lret
fistpll
repz
pop
je
popf
imulb
fsubrp
mov
in
enter
xor
or
pop
dec
jge
push
rorb
or
inc
jmp
es
jmp
sub
call
into
push
push
fisubrl
dec
cmp
pop
xor
outsl
or
enter
sub
movsl
inc
jo
shlb
sbb
add
sub
outsb
sti
inc
imul
inc
ljmp
adc
mov
pop
push
or
push
add
lds
mov
mov
in
jle
test
jae
into
jae
mov
jne
push
je
dec
xor
scas
imull
je
push
inc
iret
enter
test
fistpll
insb
jmp
stc
aas
push
add
mov
push
adc
and
in
push
xchg
sbb
test
pop
add
inc
dec
nop
add
pop
dec
out
xor
push
pushf
inc
sbb
jb
test
sub
scas
pop
xchg
dec
aas
dec
adc
xor
imul
paddw
jl
jbe
inc
jp
lahf
or
inc
push
xchg
pop
test
jbe
mov
inc
add
ret
roll
int
stos
add
lock
xchg
stos
mov
mov
js
sbb
loopne
xor
add
jecxz
sub
pusha
push
xchg
shll
pusha
aas
dec
pop
push
shl
hlt
pop
or
xor
pop
inc
mov
lahf
ljmp
icebp
mov
das
iret
sub
test
mov
test
cs
ret
inc
xchg
push
mov
das
rcr
fmuls
lods
sbb
xchg
lahf
and
lcall
push
xchg
mov
sbb
add
jmp
push
in
imul
inc
stos
or
mov
popf
lods
movl
pop
std
arpl
popf
in
loop
inc
ror
mov
inc
adc
insl
or
stos
push
push
cmp
loop
push
icebp
daa
push
jp
mov
adc
pop
scas
leave
popa
imul
scas
inc
add
orb
xchg
decl
lret
std
test
mov
movsl
fidivrs
lods
adc
pop
aad
jns
arpl
jo
mul
pop
add
ret
pushf
add
dec
loopne
scas
add
cmp
sbb
jns
mov
adc
lret
xlat
jnp
mov
int
xchg
nop
mov
sub
dec
js
inc
pop
pop
dec
insb
add
mov
jp
push
mov
lods
fcomi
dec
fs
fnstcw
push
sub
pop
adc
fildl
jno
outsb
jb
xor
repnz
push
pop
icebp
xor
loop
fs
cli
inc
fildll
daa
inc
push
std
xchg
or
xlat
xlat
scas
aam
pop
inc
mov
mov
pop
mov
push
test
mov
out
pop
loopne
xchg
cmpsb
sub
imul
sti
and
jg
inc
push
inc
cld
fdiv
inc
cmp
cmp
in
dec
test
cmp
int
sub
push
mov
lock
push
mov
jle
je
mov
push
stc
pop
repnz
mov
sahf
mov
sub
and
lock
jbe
mov
mov
add
jge
in
mov
je
push
cmpsb
sbbl
loop
arpl
aad
notl
test
insb
push
jbe
fcmovbe
cltd
mov
lea
scas
pop
loopne
push
mov
jb
cld
xor
adc
repnz
movsl
jl
or
fstps
add
lods
sbb
inc
in
jnp
cmp
sbb
adc
mov
fnsave
in
movsl
into
mov
ss
pop
mov
fidivs
fidivs
call
or
stos
mov
push
add
add
add
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
nop
push
push
rolb
and
pop
aam
movsl
lds
or
leave
in
fwait
std
outsl
sub
test
or
pop
jmpw
je
add
xor
xchg
jae
xchg
fbstp
inc
cmp
push
das
scas
std
mov
add
mov
js
inc
xor
jl
fldt
dec
jno
sub
adcb
xor
sub
lcall
stc
data16
inc
sub
hlt
inc
xor
loope
in
pushf
fldenv
inc
sbb
cli
and
clc
dec
cs
lock
aad
test
andb
mov
xor
xchg
push
in
and
pushf
push
repnz
roll
dec
cmp
pop
push
loope
push
fs
jns
pushf
mov
popf
test
jae
add
push
adcb
ret
cmpsb
loope
cwtl
js
push
fistps
mov
imul
sbbb
sub
pop
push
add
shll
sbb
out
out
int
or
mov
pushf
subb
ja
jbe
jge
movsb
pop
mov
add
add
and
roll
mov
and
or
mov
subl
or
lahf
jb
test
adc
fsts
lods
ja
mov
jo
and
xor
mov
mov
xchg
mov
jecxz
xlat
jno
mov
jns
mov
cltd
mov
and
sbb
mov
dec
lahf
xchg
dec
pop
bnd
or
lock
ficoml
inc
lods
push
adc
sbb
or
popa
add
push
xchg
cli
mov
cmp
pop
lret
cmp
lcall
xor
or
insb
dec
mov
fs
imul
mulb
sahf
aaa
mov
mov
cmp
sbb
std
pop
fisubrs
jne
bound
xor
xchg
lock
movsb
dec
cmpsl
push
rcrl
mov
xchg
xor
add
xor
jg
jge
jg
xchg
rorl
xlat
insb
fisttps
mov
fdiv
push
push
loopne
mov
negl
test
pop
mov
test
aam
testb
insb
and
leave
pop
je
pop
mov
pop
lcall
fmull
scas
movq
mov
xchg
sub
lret
push
or
pop
pop
mov
xchg
shrb
stos
and
mov
es
add
lods
ret
enter
shlb
aam
imul
int
cmp
push
hlt
cs
dec
cmp
jb
pop
add
int3
sahf
inc
add
scas
decb
jp
shrl
lods
jecxz
and
cmp
shrb
loope
movsb
mov
mov
aas
aam
dec
lret
pusha
insb
add
xor
pop
mov
ljmp
lcall
mov
or
insl
and
inc
cmp
cs
add
movsl
jge
jg
sbb
test
stos
addr16
ret
ljmp
jo
sbb
sub
aaa
imul
jmp
jge
mov
sub
adc
cltd
cmp
nop
cmp
mov
xor
aas
mov
mov
les
dec
std
arpl
std
pop
shlb
enter
or
add
es
mov
iret
or
cmpsl
cltd
cwtl
lret
dec
adc
ret
push
cmpb
mov
mov
fsubrs
aad
jbe
rorl
xchg
arpl
lods
adc
lds
mov
arpl
adc
add
fsubrs
xor
cmpsb
pushf
mov
je
pop
push
mov
xor
outsb
hlt
hlt
ljmp
or
push
loope
imul
adc
dec
adc
paddw
idivl
inc
jp
ss
daa
sbb
jno
sub
sbb
dec
add
and
test
xor
sub
xchg
xchg
inc
or
mov
pop
and
shrl
mov
daa
fmulp
lock
cld
out
lods
and
out
icebp
pop
xchg
xor
mov
cmpsb
ds
cli
jg
into
mov
int
repnz
out
jl
fcoml
mov
push
stos
or
mov
cmp
lahf
jle
arpl
mov
jge
mul
sub
dec
dec
dec
fwait
jecxz
mov
out
inc
add
mov
out
add
push
lahf
xchg
mov
pushl
and
sarl
cmp
xchg
repnz
and
dec
mov
mov
pop
mov
outsl
push
xchg
movsl
xor
lahf
shll
dec
dec
and
jb
jno
cmp
movsb
cld
push
out
shrb
popa
frstor
push
hlt
mov
xchg
push
cli
inc
push
das
pop
out
pop
gs
push
jno
call
shr
rclb
sub
pop
add
push
xor
data16
sbb
stc
mov
ret
mov
push
sti
js
ljmp
pop
sub
xlat
dec
add
cmpsl
adc
dec
dec
or
bound
repz
cmp
adc
mov
iret
bound
clc
jne
sub
fwait
mov
cmp
add
imul
and
imul
mov
mov
adc
rorb
data16
mov
shlb
jmp
cmc
pop
push
sbb
mov
data16
adc
dec
xchg
fcomp
daa
xchg
pop
push
mov
xor
sub
arpl
push
aas
pop
pushf
andl
jno
inc
mov
ja
mov
cmp
ds
mov
lcall
popf
mov
xchg
scas
popf
sbbl
addr16
arpl
pushl
ja
jecxz
cmpsl
cmpl
cmp
pop
sarb
or
popa
cmp
pusha
aas
mov
aas
sub
xchg
xacquire
sbb
cmpsb
movsl
sarl
cltd
mov
call
icebp
adcb
data16
es
cmp
mov
rorl
push
adc
push
pop
sbb
push
inc
mov
addl
xor
pop
mov
pop
inc
sub
push
loope
lcall
mov
adc
sbb
aad
mov
add
adc
adc
sbb
scas
test
xlat
xor
inc
test
hlt
dec
int
mov
or
xchg
pop
inc
idivl
out
xor
mov
aaa
cld
lret
mov
jge
mov
or
sub
shlb
inc
push
test
mov
inc
sbb
pusha
mov
mov
movsb
iret
sub
not
fstpl
in
call
inc
aam
mov
sbb
pop
fcoml
clts
imull
fisubs
mov
xor
aas
cmc
mov
je
out
pusha
repnz
dec
mov
mov
in
mov
xor
test
jae
hlt
pop
inc
cmpsl
aam
pop
mov
lret
pop
cli
push
lcall
adc
stos
and
mov
inc
in
add
ja
jno
stos
sti
stos
inc
mov
fsubl
idivb
push
push
or
movsb
pop
and
dec
mov
in
sbb
or
inc
mov
cltd
ret
stos
xchg
into
jp
stos
mov
fisubl
dec
or
pop
xor
sbb
iret
fistl
cmp
jne
mov
cmp
push
mov
jmp
nop
jb
imul
add
xchg
adc
popf
push
sub
aaa
xor
sbbl
pop
adc
push
pop
mov
or
inc
push
dec
or
das
push
mov
jmp
mov
or
scas
imul
sbb
in
outsb
push
jmp
in
inc
mov
push
fiadds
xchg
sub
imul
mov
pop
mov
and
mov
stc
adc
push
mov
mov
or
stos
cld
repnz
cli
jge
inc
nop
lret
push
imul
cltd
pop
adc
fst
lock
adc
ret
xchg
vpshufd
mov
lock
int
cmpb
int
inc
lock
fistpll
sub
mov
xor
cmp
inc
lcall
sti
scas
pop
loope
mov
int3
ljmp
add
add
xchg
flds
cmp
dec
in
gs
push
ds
dec
and
imul
add
imul
pinsrw
sub
cltd
mov
inc
lock
dec
mov
pusha
pushl
das
test
stc
and
mov
push
pop
cmp
call
xchg
pusha
and
jnp
popf
add
push
xlat
lcall
in
aas
out
mov
inc
jne
aam
faddp
sahf
test
lea
jno
out
pop
jmp
mov
jp
mov
xor
and
scas
addl
daa
add
repnz
iret
inc
push
aas
add
cld
std
xor
nop
adc
lahf
in
jae
fcoml
xchg
push
cmpsb
adc
xlat
cmp
mov
popa
jmp
std
mov
cmp
pusha
aaa
mov
es
iret
inc
pop
jne
dec
repnz
mov
mov
or
call
mov
mov
shlb
pop
adc
mov
sbb
clc
jbe
shrb
loopne
sub
or
sbb
mov
call
aaa
addr16
push
gs
pop
imul
inc
lods
sbb
xchg
out
icebp
jo
pop
repz
pushf
aaa
inc
out
movsl
jb
bound
dec
and
push
lods
popf
or
sbb
leave
adc
push
cmp
in
or
or
in
inc
lcall
stc
sarb
mov
mov
fisubs
aam
xchg
jb
int
mov
push
mov
pop
sub
push
or
ja,pn
sub
xor
xor
push
cld
sub
inc
pop
sub
popa
fcmovu
out
jecxz
int3
mov
dec
fnsetpm(287
aad
cltd
sbb
inc
inc
sbb
stos
in
xor
sarb
shl
sub
mov
les
aad
mov
in
mov
repnz
outsb
ljmp
mov
sahf
push
insl
mov
loope
lea
mov
lds
xor
and
imul
lock
cmp
outsb
aam
add
popf
fstpt
mov
nop
pop
cli
aam
sti
repnz
jle
xchg
pop
cltd
in
cmpsl
pop
ds
cld
rcrl
xor
test
ss
mov
add
xchg
ret
outsl
dec
pop
fcmovu
lods
pusha
clc
cmpl
mov
pusha
lret
mov
jle
lds
fisubl
xor
sti
dec
roll
aam
cmpl
and
push
push
or
arpl
aad
sub
std
pop
dec
gs
xchg
cmc
push
dec
stos
add
push
ficoms
lcall
push
fst
inc
lds
adc
scas
push
mov
imul
stos
mov
sbb
call
pop
xchg
sub
xchg
icebp
jne
cmc
or
jmp
mov
xchg
dec
jne
vaddsd
arpl
and
stos
xchg
adc
adc
outsl
push
int3
or
test
pop
pop
aad
out
loope
je
xor
fldenv
mov
xchg
int3
lods
push
mov
or
stc
pop
pop
mov
sub
pop
xor
jnp
hlt
xor
jae
enter
jno
stc
push
lea
jo
and
cltd
inc
fsubrs
pop
cmp
pop
mov
std
lahf
call
push
pop
mull
xor
cli
mov
outsb
bound
push
mov
xor
std
pop
mov
push
mov
scas
lcall
clc
and
cmp
dec
push
sub
aas
mov
xchg
push
dec
insl
pop
cwtl
cli
js
adc
leave
enter
ds
aaa
incl
dec
scas
leave
xor
xor
fnstenv
fists
pop
mov
and
mov
xor
or
and
cs
sahf
daa
test
ret
and
out
jns
mov
and
jae
or
mul
pop
arpl
dec
lods
arpl
adcb
movl
xorb
pop
xor
mov
jecxz
push
scas
xor
xchg
leave
loopne
push
xchg
and
mov
cld
inc
idivb
dec
add
or
lcall
sbb
pop
lret
dec
xchg
pop
lods
pop
inc
push
rcrb
aad
fidivs
negb
push
xchg
std
mov
xor
jb
dec
jb
push
sub
xor
js
cltd
int3
pop
mov
inc
mov
cmp
jge
imul
sarb
cld
push
pusha
mov
xchg
ss
push
je
fbstp
cmp
aam
and
pop
arpl
loope
mov
xor
mov
dec
into
push
mov
fdivl
andl
sub
fdivp
push
pmaxsw
lds
add
cmpsb
cmp
cmp
cmpb
mov
fwait
add
jnp
sub
mov
inc
push
jbe
push
push
adc
shll
sub
jbe
ret
xchg
cld
mov
xor
sbb
and
test
jmp
cmpsl
lods
jg
mov
lods
jp
mov
jg
dec
imul
dec
add
cmp
cmpsb
cmc
stos
je
cli
jnp
shlb
shll
icebp
push
mov
inc
dec
andb
xchg
mov
and
cltd
cmp
mov
or
pop
mov
or
addr16
ror
cli
mov
mov
mov
loopne
fwait
push
pop
std
test
pop
clc
mov
mov
cmc
pushf
fsubr
cmp
mov
sbb
or
jecxz
loope
daa
or
aad
sbb
rcrl
test
pusha
ljmp
mov
mov
frstor
push
inc
mov
jg
cmpl
push
pop
cmpsb
mov
sbb
out
inc
dec
insb
data16
mov
mov
xchg
sbb
movsb
stos
gs
leave
sbb
and
in
lods
push
mov
rol
xchg
loopne
test
mov
shl
lcall
dec
mov
sbb
icebp
mov
xchg
cld
testb
and
cltd
frstor
out
daa
movl
mov
mov
das
jg
sbb
mov
pop
fldt
gs
fisttpl
adc
cmpsl
mov
movsl
sub
xchg
mov
xor
sahf
cld
shl
mov
pop
mov
ljmp
outsl
out
icebp
or
or
and
dec
testb
mov
pop
in
or
mov
mov
inc
addb
mov
mov
das
ja
lret
das
imul
sbb
int
clc
in
je
sbb
pop
xchg
mov
es
dec
jno
adc
push
inc
pop
or
xchg
inc
inc
out
aaa
xor
inc
push
ljmp
stos
jmp
mov
pop
or
and
in
cltd
fcompl
unpckhps
rolb
xchg
cmpl
jp
ja
lahf
dec
popa
sbb
add
lea
out
in
call
sub
or
pop
ds
sub
mov
lea
xor
push
loop
std
lea
adc
mov
cld
ds
lret
pop
in
stos
bound
add
add
in
inc
mov
in
aaa
push
ret
or
int3
hlt
ja
adc
pop
int
ret
in
fcoms
sbb
andnps
mov
rol
and
pop
jae
and
mov
push
in
dec
ds
inc
xor
sahf
repz
add
xchg
cmp
int
xor
and
dec
add
jne
and
mov
adc
ficoms
or
push
cli
mov
mov
ficompl
xor
pusha
test
testb
out
push
xor
cs
lea
and
dec
rcl
iret
xchg
push
rcr
dec
mov
in
xor
dec
sub
int
jl
cmc
insl
pop
ljmp
stos
xor
mov
dec
fists
arpl
pusha
xor
jg
mulb
xchg
popf
mov
repnz
mov
push
cmp
pop
xchg
cltd
sub
cmpsb
sub
popf
xlat
inc
das
arpl
pop
sub
xor
shll
and
filds
pop
add
dec
iret
lahf
mov
test
je
sahf
mov
mov
in
pop
pop
icebp
sbb
icebp
push
jge
mov
call
pop
icebp
and
mov
js
ret
aad
inc
push
dec
mov
add
dec
outsl
xor
fs
jmp
out
rolb
sarl
cmp
pop
str
adc
incb
push
insl
cs
cmp
dec
imul
push
xor
test
jae
push
cld
int3
push
mov
das
arpl
ss
inc
mov
repz
pusha
inc
inc
pushf
stos
mov
jmp
ss
cmpsl
imul
jne
lahf
mov
mov
mov
mov
sub
and
jp
jge
test
movsl
mov
pop
xor
std
test
or
jge
jg
mov
sarl
test
std
pushf
lret
and
cmp
add
stos
fdivl
and
outsb
std
add
cmpsb
mov
outsl
or
jb
or
shlb
jle
loop
xor
jp
pop
adc
pusha
lret
movsb
mov
outsl
jno
fnstcw
lods
push
cltd
ret
fcoml
pop
dec
adc
push
push
lea
and
in
mov
inc
jno
lret
xchg
xchg
lcall
dec
mov
inc
insl
cwtl
dec
jle
shll
jge
into
cmp
pop
movsb
inc
cmpsb
pop
ret
adc
pop
dec
xchg
jmp
ret
pop
cmpsb
jb
sub
lods
cmc
pop
mov
imul
pop
jae
mov
mov
push
pop
push
dec
cltd
xor
mov
setbe
cli
add
sub
fsubp
int
mov
mov
dec
mov
rcrl
repz
push
pop
mov
pop
gs
pushf
dec
push
stos
mov
jb
mov
sahf
push
roll
sub
mov
or
pop
xchg
add
mov
ss
jmp
in
pop
jge
add
pandn
mov
test
push
or
mov
stos
push
jnp
jecxz
mov
data16
cwtl
iret
es
push
repnz
dec
inc
add
ret
clc
dec
shlb
ljmp
leave
push
push
cmp
sub
and
or
icebp
mov
fwait
add
outsb
clc
test
lock
sbb
push
hlt
test
lret
test
cli
mov
adc
ret
les
adc
jmp
cmp
shll
jb
cmc
sub
push
xor
xchg
ret
ljmp
inc
pushf
nop
jg
cmp
mov
jno
xchg
cltd
test
enter
xor
add
fisubrl
and
push
push
xchg
movsl
and
dec
xchg
lock
sub
push
sar
mov
push
mov
sarl
ja
sbb
popf
mov
inc
and
aad
mov
push
movsb
outsb
dec
movsb
repnz
mov
in
inc
shrl
inc
les
pop
enter
test
push
mov
idivl
jecxz
loopne
push
mov
jo
call
das
fsubrl
push
unpcklps
aam
sub
inc
rclb
sub
push
scas
adcl
outsl
cmp
mov
mov
call
nop
jbe
clc
push
sub
inc
lds
fsubrs
mov
cmp
pop
or
sbb
jbe
dec
lods
push
or
sarl
loopne
enter
xchg
divb
inc
ss
push
cmp
sbbl
pop
fmuls
pop
mov
bnd
imul
outsb
mov
mov
stos
sub
xchg
inc
push
sbb
xor
sub
push
es
cmp
je
dec
mov
mov
fists
xchg
jae
jo
pop
subb
mov
xlat
cli
mov
push
jge
xorb
test
adc
stc
test
aam
out
adc
xor
lret
adc
xor
sbb
aas
fcomp
lock
lods
in
ljmp
xchg
jg
fwait
pop
lret
lret
push
aas
repnz
mov
ljmp
adc
add
stos
clc
mov
das
and
and
pop
sub
mov
jo
sbb
sub
pushl
jge
or
in
dec
loope
out
iret
dec
stos
mov
pop
sub
or
stc
loopne
push
or
bnd
inc
stos
mov
xchg
pop
xchg
inc
je
scas
and
aad
stos
arpl
arpl
jp
and
dec
shl
pop
pop
into
je
fsubl
int
cli
inc
mov
pop
mov
imul
je
cmp
sbb
insb
xchg
lcall
push
add
js
mov
add
pusha
sbb
dec
dec
repz
ds
test
mov
jbe
ficoms
loopne
cwtl
xchg
mov
jb
nop
mov
lahf
scas
jo
in
or
pop
stos
dec
adc
call
jae
adc
pop
stos
dec
aaa
or
push
pop
arpl
pop
call
inc
cli
fadd
fnsetpm(287
pop
lret
int
pop
ja
mov
out
adc
and
cmp
and
add
pusha
int3
iret
fcmovnu
xor
in
sbb
pop
outsl
into
sbb
push
int3
jns
mov
and
cs
cmp
ficoml
push
mov
pusha
add
loop
inc
test
in
adc
dec
sti
jg
jb
jb
or
pop
int3
cmp
xlat
xor
mov
lods
inc
scas
test
add
popa
test
mov
and
pop
jg
inc
or
out
mov
or
mov
enter
add
sbb
pop
pop
cmp
add
add
lret
xchg
scas
fsts
cmp
dec
stos
push
cmp
insl
sbb
mov
ret
pop
mov
jne
cld
aas
loope
mov
ficomps
add
mov
out
loopne
mov
or
pusha
jg
nop
adc
out
xchg
push
xchg
mov
push
lods
je
shrb
mov
push
xchg
les
add
jns
mov
loopne
ljmp
xchg
into
bound
inc
outsl
xor
mov
mov
push
jp
sbb
push
or
xchg
int
dec
popa
or
mov
or
add
lods
xchg
in
popf
nop
call
push
cmp
lret
outsb
movsl
pop
add
jno
sub
cld
lea
sbb
test
and
sub
call
cwtl
add
fcmovne
jno
inc
adc
push
cmpsb
push
sbb
scas
iret
jg
iret
mov
das
cmp
pusha
jp
sub
push
xor
xchg
xor
and
and
pop
test
inc
and
movsl
push
ja
sarl
and
and
popa
dec
cmp
icebp
test
mov
xor
repz
inc
mov
add
negl
das
clc
sbb
sub
push
xchg
jo
and
mov
or
mov
imul
outsb
mov
ret
xchg
mov
xor
cmp
and
jno
xchg
push
pushf
push
ret
jb
mov
push
jmp
hlt
fimull
cmp
or
jp
mov
and
inc
and
lds
adc
mov
and
or
jmp
leave
xchg
sub
jns
int3
out
outsb
aad
mov
mov
shl
scas
push
jg
nop
fstpt
leavew
cwtl
insb
pop
adc
cmpb
adc
arpl
loope
into
mov
sbb
add
inc
bound
adcb
scas
pop
mov
lret
shl
or
in
out
mov
cld
out
or
jp
gs
int3
xchg
ret
out
aaa
pop
mov
pop
lcall
cmpsb
aas
outsl
ret
stos
or
ret
cmp
lret
pop
inc
add
mov
cwtl
cmp
clc
repnz
xchg
inc
mov
sub
mov
inc
mov
pop
and
cwtl
fldcw
inc
lds
leave
xchg
push
setp
cmp
lret
cli
mov
xchg
divb
pop
test
out
lods
fiaddl
cmpsb
push
insl
sahf
test
inc
pop
mov
lds
out
rorb
mov
mov
pop
dec
in
data16
sbb
jae
and
push
push
push
push
and
pop
lcall
sbb
pop
mov
push
or
shr
sbb
int
loope
sub
add
cmp
scas
ds
mov
jle
outsl
mov
sahf
mov
mov
shl
add
aas
mov
pop
add
ret
mov
std
sub
add
bound
sbb
pop
mov
cld
mov
xchg
mov
scas
outsb
add
lods
sub
or
jne
movsb
movsl
mov
fld
test
lods
notb
clc
cmc
mov
xchg
lods
xchg
mov
and
lcall
cmp
pusha
cli
mov
mov
rcl
and
and
pop
inc
lds
out
idivb
in
outsl
push
in
jb
lods
js
scas
imul
data16
dec
loopne
divl
mov
push
aad
stc
sbb
push
test
mov
inc
rclb
loopne
xchg
cmp
push
cltd
mov
adc
add
out
les
add
or
adc
inc
adc
incb
mov
loop
sbb
xchg
mov
hlt
test
lret
aad
adc
pop
rclb
int
mov
icebp
jo
and
mov
sub
xchg
test
dec
mov
or
cli
mov
mov
push
in
outsb
jbe
push
cmc
daa
mov
repz
mov
nop
sub
sbb
in
mov
loop
loopne
movsb
stos
je
mov
leave
pop
rcl
je
cld
outsb
pop
jle
dec
pop
aaa
call
sub
cmp
sbb
hlt
pop
mov
leave
lcall
push
ficompl
out
lcall
out
test
push
daa
pop
clflush
push
hlt
mov
sarl
pop
inc
push
or
push
dec
cmp
repz
cmp
scas
into
cmp
jbe
cld
out
add
jge
or
mov
aad
sub
les
sbbb
shr
jno
xlat
pushf
lea
inc
loop
sbb
inc
scas
lcall
les
mov
xchg
inc
out
rcrl
push
jb
jb
pop
jnp
scas
in
cmp
popf
mov
fwait
sub
pop
lea
jl
dec
mov
push
or
inc
imul
pop
out
and
adcb
cmp
cmp
lds
push
sahf
movsl
add
jge
push
mov
in
mov
mov
cwtl
imul
adc
or
xlat
test
sbbl
mov
pop
pop
or
jle
sahf
dec
sub
movsl
nop
mov
test
push
inc
dec
aas
mov
push
int3
nop
mov
mov
fisttpll
pop
das
imul
inc
jge
iret
enter
xchg
cmp
pop
add
and
or
pop
popa
jo
inc
xor
mov
or
jno
dec
sbb
jb
mov
test
add
sub
iret
xchg
testl
mov
js
mov
repnz
imul
and
and
push
push
mov
and
jle
sbb
iret
cli
or
mov
inc
rolb
ret
sub
push
adc
sub
popa
pop
jmp
data16
xor
mov
xchg
sub
stos
or
add
sbb
fs
lahf
sbb
shl
into
mov
adcb
das
aam
scas
sarl
jg
sbb
xor
ds
mov
push
outsl
inc
dec
adc
int
xchg
fdivs
push
int
cli
test
push
and
cmpsb
jge
pushf
jg
js
cmp
xchg
shll
inc
jns
adc
mov
jge
test
aas
and
jecxz
enter
in
mov
and
pop
cltd
inc
pop
negb
outsl
std
mov
push
inc
cli
pop
push
inc
mov
mov
das
inc
fmull
loop
icebp
and
pop
les
stos
jae
pushf
mov
mov
aam
fidivrl
ljmp
stc
test
and
inc
lds
scas
enter
jb
scas
aaa
push
xor
pop
imul
js
fisttps
push
pop
add
ret
cs
cmpsl
lock
push
decl
int
sahf
and
es
ss
roll
xchg
and
push
scas
dec
and
fsub
push
xchg
out
popa
mov
mov
popf
in
neg
mov
and
icebp
fidivrs
mov
rcrb
sub
sbb
addr16
fs
popf
or
lock
popa
stc
js
inc
add
add
add
loope
xchg
sti
pextrw
inc
adc
adc
inc
jnp
sahf
cmp
xchg
sti
lods
lret
iret
push
or
repz
das
insb
pop
sub
hlt
fsubrs
loope
test
push
inc
loope
jne
adc
lret
push
insl
pop
inc
js
adc
inc
in
daa
push
ret
or
pop
int3
lahf
daa
mov
ljmp
gs
dec
in
pop
push
pxor
jns
mov
lret
test
pusha
ret
add
sub
xchg
mov
jmp
loop
bound
cmpsl
dec
lret
sub
pop
inc
mov
ljmp
push
addr16
push
push
cmp
dec
inc
add
xchg
sub
adc
pop
rcl
out
popa
fwait
sbb
iret
push
push
je
mov
cld
xchg
ud0
stos
push
pop
scas
adc
xlat
pop
fwait
scas
mov
xchg
lods
xor
stc
push
jmp
sub
mov
sbbb
xchg
adc
push
bound
xchg
enter
xchg
mov
add
cmpsb
jl
cmp
movsb
pop
fmuls
mul
mov
sbb
jae
das
stc
jmp
loopne
iret
xor
push
into
jo
push
cltd
fistl
sbb
pop
fsqrt
out
xchg
hlt
and
pop
push
lret
aam
push
mov
or
sub
es
mov
cmp
sub
fimuls
lods
mov
dec
mov
mov
int
aam
or
stos
jl
cltd
cmpsb
mov
jo
xor
test
hlt
adc
and
shrb
and
fimuls
mov
add
push
popf
mov
pop
cli
mov
je
push
push
pop
mul
cmpsl
mov
inc
cld
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
les
xor
addl
movsl
and
loope
addr16
pusha
aas
and
cld
lcall
out
ss
and
jo
inc
imul
jbe
dec
or
movsb
scas
inc
inc
dec
sbb
fbstp
aaa
mov
push
sbb
jno
outsl
rep
stos
in
test
ret
shlb
sar
or
ret
jle
in
js
hlt
mov
lock
push
outsl
into
sbb
pop
out
ss
out
ja
or
mov
in
aam
dec
repnz
fprem1
xor
insl
mov
xor
mov
rclb
out
mov
push
fwait
movsb
fmull
movsb
std
flds
mov
jb
popf
mov
je
adc
cs
push
sbb
sub
aam
cmp
adc
or
dec
or
xor
mov
loopne
imul
lods
xchg
test
mov
shlb
add
leave
mov
fwait
xor
pop
jno
xchg
adc
cmp
or
movsb
in
ss
sub
fnsave
imul
loope
sti
das
jnp
lea
pop
lds
pop
subl
cli
mov
lahf
pop
pop
nop
jecxz
sbb
cmpsb
fwait
subb
int
jbe
xchg
and
mov
js
push
js
enter
pop
jns
xor
xchg
ss
mov
pop
push
testl
push
jno
jmp
imul
adc
pushf
in
mov
insl
test
jg
imul
xchg
adc
mov
sub
sub
pop
aaa
dec
bound
cwtl
xchg
xorl
xchg
hlt
inc
cmpsb
mov
mov
ffree
imul
bound
lret
pop
in
mov
push
and
sub
fs
fucom
push
cmc
mov
outsb
addr16
in
movsl
dec
test
cwtl
push
je
dec
out
testb
stc
mov
psubw
lahf
pusha
je
lcall
std
push
jmp
xorb
and
xorl
dec
jle
aad
cltd
jmp
rcl
repnz
popa
incb
mov
outsb
inc
dec
inc
lds
jno
or
lret
ljmp
mov
push
outsl
pop
xlat
xlat
push
mov
jmp
scas
fdivr
imul
jnp
mov
jb
scas
push
loop
cmp
mov
mov
out
and
adc
loopne
mov
daa
hlt
and
lret
inc
jmp
aad
sub
outsl
icebp
repz
loopne
aas
aas
xor
or
nop
jecxz
cltd
cli
and
lcall
jno
inc
and
inc
jp
mov
insb
fadd
hlt
aaa
jbe
sub
jae
addb
sbb
rclb
aaa
fwait
dec
rcrl
xor
adc
std
or
aad
insb
or
jnp
jns
mov
xchg
lret
mov
fs
mov
aaa
ss
and
jne
aas
xchg
mov
add
pop
sub
sbb
dec
cmpsl
stc
dec
andb
pop
adc
xor
dec
adc
inc
or
movsb
insl
mov
push
mov
dec
adc
shlb
repnz
fistps
fisttpl
loop
add
in
mov
shl
cmpsb
push
scas
test
fadd
or
xor
sub
pop
mov
insb
xor
and
xchg
loope
stos
jecxz
fidivl
mov
push
les
mov
dec
ret
mov
inc
adc
inc
mov
fimull
mulb
pop
lods
mov
test
xchg
sub
jns
fstps
mov
ljmp
inc
jnp
add
push
and
ror
leave
and
je
movsb
inc
lret
sbb
out
mov
pop
daa
push
imul
add
jp
mov
sub
push
iret
sub
jno
push
mov
push
frstor
push
xor
stc
jge
cmp
jmp
repz
fwait
pusha
in
call
rorl
jbe
in
cltd
and
idivb
xor
mov
xor
sbb
movsl
aad
cmp
out
icebp
dec
adc
push
mov
pop
mov
lea
insb
mov
add
dec
cmp
nop
and
clc
cs
xor
push
pop
or
fisttps
jbe
lods
sbb
sub
in
mov
fsts
push
arpl
add
aas
pop
call
mov
stos
mov
std
pop
jl
not
fnstenv
arpl
xlat
fiadds
popf
and
popa
lahf
sub
rorb
push
nop
inc
repz
dec
aaa
scas
lock
dec
movsl
idiv
lods
loopne
xor
jl
in
mov
dec
js
scas
dec
sbb
pop
lcall
push
and
scas
daa
and
xchg
inc
inc
sbb
es
dec
aaa
jnp
xchg
push
xchg
jns
mov
or
xchg
mov
fwait
mov
mov
push
in
jno,pt
stos
aad
fucomi
and
sbb
adc
decl
out
jmp
inc
push
shll
add
pop
out
add
push
out
push
mov
fimuls
mov
dec
sub
sbb
test
lods
out
jne
and
and
and
add
popf
fcomi
test
sbb
les
push
out
pushf
push
std
mov
and
std
cmp
ds
ljmp
not
cmp
push
in
cltd
es
in
push
dec
adc
adc
and
sbb
mov
xor
mov
xchg
xchg
fwait
dec
shlb
mov
scas
hlt
add
jge
arpl
adc
inc
aas
jae
jae
mov
pushf
fdivrs
scas
shrl
adc
cwtl
aaa
inc
adcb
cld
push
xor
aam
mulb
addr16
xchg
xchg
out
jl
mov
mov
adc
lods
test
or
lock
or
or
push
rcll
inc
mov
xchg
pushw
adc
mov
lods
pop
stc
add
int
push
notb
es
dec
in
movsb
adc
pop
fs
fnstsw
mov
and
rcrl
outsl
hlt
jl
in
adc
subl
mov
imul
jns
andl
pop
sub
push
aas
mov
or
jb
add
inc
inc
inc
pop
lret
sbb
add
xlat
mov
fcomps
push
mov
js
xor
in
loope
push
mov
jecxz
and
add
xchg
mov
cmp
fdivrs
arpl
lods
cs
push
rcll
shr
stos
imul
mov
xchg
jge
lods
push
inc
shll
adc
in
jle
inc
enter
xorl
sbb
push
int3
mov
sbb
outsl
mov
dec
sub
push
stc
dec
lahf
xchg
and
jecxz
sti
push
cmp
mov
push
mov
and
mov
or
test
xchg
scas
pop
jbe
in
jmp
add
push
fisubl
add
adc
mov
mov
jnp
jecxz
add
jns
es
clc
push
cmp
ret
inc
jno
je
cmp
add
movsl
stos
and
push
stc
push
lcall
pusha
inc
out
add
cld
repz
pop
test
out
int
add
popa
add
in
pop
loopne
out
les
aad
cmp
lahf
test
dec
push
cmpsl
gs
push
arpl
pop
jae
aam
or
mov
push
cmpsb
arpl
mov
aad
sbb
sbb
pop
arpl
fldl
daa
rcll
stc
aad
sbb
inc
jns
jp
jecxz
mov
pusha
loopne
arpl
add
sbb
inc
inc
adc
push
dec
dec
out
mov
enter
mov
fldenv
push
clc
push
jnp
dec
sub
pop
cmp
jne
or
lds
aam
ret
repnz
bound
dec
cmc
jl
sbb
imul
test
mov
neg
cmp
mov
xorl
mov
lret
jmp
int3
mov
sub
pop
or
push
sbb
ret
sahf
cmc
push
dec
fcmovb
jne
xchg
lcall
mov
sbb
sub
jmp
aam
testb
cmc
lcall
pop
cli
adc
push
fcoms
mov
inc
and
push
lahf
mov
add
jp
fisubs
add
mov
jp
mov
repz
gs
loop
push
xchg
mov
lret
cmp
jmp
mov
push
mov
xlat
add
testl
pop
xchg
adc
pop
cmpb
cmp
sbb
daa
sub
mov
ja
sub
pop
andl
das
push
xor
lret
xchg
jnp
mov
dec
out
jp
xchg
arpl
sub
mov
sbb
jb
sbb
jne
out
insl
test
jo
jns
rorb
lods
or
push
call
push
dec
gs
bnd
imul
repnz
adc
in
jae
adc
cs
push
mov
cmc
mov
add
add
out
add
call
lahf
insb
adc
lods
aaa
rorl
fwait
inc
push
imul
inc
daa
cmp
pop
add
sub
fbld
nop
mov
xchg
xchg
and
js
call
sub
jmp
xor
int3
aam
jbe
lds
insb
adc
xor
mov
mov
mov
sub
sbb
pop
xor
mov
into
cmp
push
sbb
sbb
mov
flds
jl
adc
lock
inc
ds
es
out
inc
jp
xchg
sbb
mov
nop
dec
and
mov
imull
mov
aad
mov
sti
cmp
bound
lahf
aam
fsubr
xchg
notl
mov
popf
insl
and
mov
test
ja
wrmsr
fadds
rclb
or
push
lock
add
jno
lea
sub
cltd
repnz
xchg
mov
lods
mov
push
arpl
mov
jmp
movsl
mov
inc
xchg
stc
pop
jno
sbb
sub
mov
addr16
js
adc
cmpsb
punpcklbw
outsl
jp
lahf
xchg
cli
loop
mov
stc
mov
in
lods
out
shll
jp
cmp
popf
mov
lcall
jl
popa
repnz
repnz
jmp
mov
push
hlt
jge
inc
jge
sti
mov
inc
mov
imul
push
cmp
fstl
pop
sbb
sub
mov
sub
test
mov
mov
iret
pop
xor
aad
push
xlat
dec
movsl
je
movl
ret
jecxz
cli
sti
lret
lret
inc
sbb
xchg
cmpsl
stc
jp
xor
loope
pop
add
add
scas
push
mov
test
jne
xchg
or
add
stos
xor
sarl
mov
xchg
and
adc
mov
adc
adc
lahf
outsb
js
push
std
or
cmp
inc
fnstsw
jb
cmp
mov
lock
mov
mov
mov
lea
xchg
adc
dec
fstpl
adc
jne
out
test
icebp
fcmovbe
addr16
test
pop
test
lret
in
pop
xlat
popa
sub
or
gs
jne
add
mov
ja
add
cmp
push
shll
outsb
mov
dec
mov
loope
inc
sbb
add
xor
xchg
addr16
adc
cmp
pop
xchg
aas
sbb
mov
jle
in
daa
aas
jne
cltd
sbb
ljmp
andb
and
ret
stc
insb
fcoml
sbbl
sub
push
lahf
shll
jmp
negl
daa
imul
fcoml
sub
cmp
dec
add
push
rol
jbe
leave
ret
loopne
and
dec
or
inc
and
sarb
in
mov
or
mov
sbb
cmpsl
cmpb
xchg
xor
pop
xor
jns
pop
out
outsb
inc
and
mov
lret
iret
pop
daa
adc
ljmp
adc
dec
insb
sub
aad
pushw
mov
push
xchg
cld
lret
inc
jmp
sbb
or
and
movsl
aad
jns
jl
popa
or
pop
xor
push
loope
cld
roll
cmpl
inc
push
shl
ljmp
fsubr
adcb
inc
scas
inc
test
jb
hlt
and
mov
cmp
dec
ret
add
leave
gs
jle
fisttps
out
dec
mov
xchg
jb
push
adc
fwait
stos
sti
jno
lds
add
pop
test
sbb
mov
cmp
repz
mov
push
or
mov
pop
xlat
xor
gs
ja
fwait
push
loopne
fcmovnb
adc
inc
and
jbe
push
loop
in
mov
ja
icebp
daa
aad
jmp
mov
pop
mov
jno
arpl
mov
loop
add
cmp
push
inc
push
ret
pop
or
xchg
pusha
pop
adc
inc
jmp
popf
pop
mov
pop
mov
lock
jl
pop
jns
lss
mov
sbb
out
sub
je
ja
pop
xor
loope
in
push
inc
mov
push
imulb
iret
push
mov
scas
and
mov
lret
mov
daa
out
inc
sub
dec
pushf
jge
dec
ja
xchg
sbb
aas
sbb
jg
enter
sbb
lock
mov
mov
movsl
mov
iret
outsb
stos
icebp
jb
lcall
scas
sub
sub
lret
mov
sbb
add
aas
xchg
subl
adc
mov
fsubl
or
jecxz
mov
into
rol
sahf
inc
cld
bound
loope
adc
mov
dec
mov
mov
popl
mov
cmc
sbb
or
stc
lcall
je
push
sbb
jne
into
mov
or
cmpsl
data16
mov
lcall
nop
dec
imul
pop
push
xchg
mov
push
pop
in
and
icebp
push
aam
add
jae
popa
jl
push
jns
push
cld
mov
aam
and
fsubrl
scas
xchg
cmp
imul
push
cmp
aaa
call
loopne
adcl
ror
daa
xchg
adc
adc
mov
jmp
mov
mov
sbb
xor
add
pop
data16
cmpsb
xor
or
sbb
and
pop
movaps
or
jmp
push
repnz
sbb
mov
andl
insl
pop
movsl
xchg
je
jae
adc
pusha
arpl
push
inc
rclb
jmp
adc
fsubrl
adc
push
iret
je
pop
xchg
inc
push
arpl
testl
fwait
ss
or
les
pop
push
icebp
xchg
or
imul
add
push
cmp
repnz
ds
stos
cmp
jmp
mov
push
ds
int3
sub
mov
adc
rorb
jle
pop
fcmovnu
add
sub
or
inc
fldenv
sub
pop
call
and
rcrl
jbe
ja,pn
xchg
les
jge
mov
or
mov
xchg
inc
outsb
push
cs
icebp
aaa
mov
and
add
jp
sub
xchg
andb
out
mov
enter
stos
roll
pop
inc
pop
xchg
sbb
das
outsl
outsl
rol
mov
xchg
out
fucomi
dec
movsl
nop
xchg
xchg
in
jbe
xor
and
test
out
xchg
push
xor
cwtl
hlt
rolb
fs
fwait
mov
inc
dec
sbbb
jne
std
xchg
out
cmp
jg
bound
fmull
pop
cwtl
scas
aas
inc
lds
dec
cmc
pop
inc
loop
or
loope
pushf
imulb
and
pop
stos
leave
mov
mov
and
inc
xchg
int3
adc
dec
jge
sub
je
sbb
rcr
push
subl
fmuls
dec
cmp
stos
mov
mov
xchg
mov
out
pop
addl
push
mov
fistps
pop
sahf
cs
bsf
stc
lcall
mov
into
jmp
push
add
jae
dec
enter
frstor
pop
push
int3
call
push
sti
js
adc
cmp
or
pop
out
cmp
xchg
jns
not
lds
and
int
aas
jp
pop
sub
idivl
aam
xchg
mov
out
mov
lahf
xchg
cmp
std
gs
pop
cmp
and
add
mov
inc
test
xor
fs
adc
les
sub
mov
jnp
mov
jne
and
sbb
sub
pop
adc
stos
movl
insb
dec
mov
pop
scas
sub
aam
mov
scas
mov
mov
fstpt
push
pop
xchg
inc
loop
pop
loope
popa
loopne
adc
fs
and
sub
adcl
push
loopne
adc
pop
bound
icebp
push
bound
pusha
inc
inc
jbe
push
mov
fadd
lods
sub
mov
adc
stos
mov
into
jmp
out
pop
stc
jns
out
insb
js
aad
ss
cltd
lds
push
mov
pop
push
push
cwtl
inc
cmp
notl
mov
sbb
insb
cmp
lret
jne
adcl
xchg
sbb
mov
in
sub
and
repz
adcb
fucomip
imul
stos
int3
outsb
sub
lcall
icebp
push
pop
mov
arpl
rclb
pusha
aad
in
clc
mov
ss
dec
sub
shrl
sbb
push
mov
xchg
fs
mov
jbe
mov
cmp
pop
das
cltd
xchg
pop
xchg
dec
push
rol
cmpsb
jno
xchg
fwait
sub
mov
inc
mov
jo
mov
adc
cmp
imul
outsb
jne,pn
jp
dec
fwait
stc
jl
mov
xchg
hlt
sbb
mov
ret
pushl
sbb
adcb
mov
out
sbb
js
xchg
outsb
xchg
outsl
addl
sub
push
scas
iret
cmp
pop
push
stos
xchg
mov
push
data16
loop
lods
pop
in
and
movsb
divl
xchg
inc
mov
aad
and
inc
vunpckhpd
inc
pop
jo
dec
cmp
cmc
loop
aas
or
rol
loope
orb
jnp
ficompl
out
icebp
push
lret
enter
jge
xchg
dec
movsl
addb
jecxz
mov
rcrb
jle
jmp
adc
sbb
sbb
adc
sbb
add
pop
call
pop
xor
pop
cmp
push
inc
test
int3
fadds
aas
sub
das
pop
mov
sbb
dec
sub
add
inc
btc
popf
mov
push
xchg
mov
jg
inc
stc
lds
sbb
sti
call
xor
xchg
dec
je
xchg
pop
push
or
inc
xchg
mov
das
mov
outsl
test
js
adc
mov
js
xchg
out
jbe
xor
mov
jmp
dec
add
and
sbb
es
daa
sti
sbb
xor
fneni(8087
mov
cld
sbb
popa
in
xchg
cmpsb
aaa
inc
stos
les
mov
lods
hlt
lods
mov
dec
mov
mov
stos
jl
mov
ficoms
inc
xchg
inc
mov
orb
xchg
cmpsb
add
push
and
rorl
push
loopne
inc
popa
ss
clc
in
mov
inc
mov
out
ficompl
sbb
in
out
add
cmp
lock
xor
fcoms
mov
out
mov
test
push
mov
pop
or
sub
jnp
mov
xchg
daa
pop
stos
add
fsubrs
mov
cli
cltd
jbe
or
pop
sub
addb
xchg
ja
daa
sub
jb
cs
mov
inc
subb
add
add
xchg
gs
mov
mov
push
addr16
inc
cmp
test
jecxz
mov
adc
mov
xchg
cmpsb
mov
inc
data16
pop
cwtl
ljmp
inc
xor
push
and
jbe
aad
xor
push
mov
addr16
mov
sub
push
call
pop
sbb
add
inc
pop
inc
jg
dec
push
bound
mov
add
jbe
cmpsl
repz
and
pop
iret
scas
sbb
outsl
jmp
out
push
dec
pxor
pop
or
out
sub
stos
mov
pop
es
pop
sti
xchg
add
dec
call
xor
xchg
push
lret
stc
icebp
mov
mov
push
lahf
in
push
sbb
push
je
xor
cwtl
mov
sbb
in
test
adc
mov
clc
arpl
pop
inc
mov
mov
lcall
std
mov
jmp
rolb
popf
mov
mov
in
sti
bound
mov
sbb
sbb
aam
inc
add
cmc
imul
int3
cmc
and
clc
mov
xchg
pushf
fdivs
mov
ficomps
sub
sub
pushf
movsl
xor
mov
jae
stos
mov
jp
sub
xor
jbe
je
insl
fsub
pop
xor
cmp
ja
nop
pusha
insb
sub
stos
setle
cltd
sarb
dec
lret
lahf
jmp
popl
and
mov
xor
int3
inc
push
out
push
arpl
mov
sbb
inc
fldl
ds
dec
arpl
popf
pop
test
orl
and
cli
ret
cli
and
cmpsl
sti
das
imul
hlt
popf
repz
xchg
mov
mov
pop
pop
mov
es
scas
mov
stos
rcrb
aam
nop
insl
or
movsb
cmpsl
test
movsb
push
lds
enter
into
loopne
mov
pop
sbb
pop
popa
arpl
pop
mov
ja
int3
jns
loope
sbb
cmp
dec
jmp
pop
sti
jnp
sub
loope
out
cmpb
loop
in
sbb
inc
sub
mov
js
inc
mov
icebp
xchg
mov
sahf
xchg
pusha
cmp
jae
shlb
cmpsl
jns
inc
pushl
xor
shlb
dec
sub
xchg
mov
and
mov
pop
ja
inc
or
lods
dec
mov
imul
sbb
lds
fwait
ss
or
xchg
stos
incl
push
dec
mov
in
add
dec
push
mov
jo
or
js
inc
jle
pop
mov
in
jns
mov
sahf
call
jns
out
loop
push
add
mov
mov
repnz
les
sbb
repz
pop
outsl
jae
scas
rcll
int
sahf
js
sti
out
loopne
stc
jg
xchg
sub
cmp
push
jmp
mov
sti
push
inc
fs
mov
sub
xor
pushf
sub
ss
or
xchg
lret
divl
xchg
inc
jno
js
sub
lock
rcll
xchg
xor
xchg
fsubrp
inc
push
test
jbe
test
inc
adc
jle
cmpb
shl
xchg
icebp
dec
int
mov
or
xchg
cmp
mov
stos
inc
popf
imul
dec
lods
xor
add
mov
dec
pop
add
out
roll
ljmp
adc
aam
or
out
cmpsb
jmp
pop
push
outsl
fpatan
sbb
int
jecxz
popf
cs
add
sub
mov
iret
out
dec
sub
pop
lahf
and
aam
enter
repz
mov
jecxz
push
adc
jmp
xchg
sbb
insb
imull
fs
cltd
sub
cmpsb
push
cmp
fiadds
pop
js
loopne
test
dec
rcr
imul
ds
mov
mov
mov
js
xchg
jle
push
addr16
add
rcll
ss
repnz
mov
inc
xor
mov
ds
jno
insl
mov
sub
add
jb
push
inc
pop
sub
xchg
and
test
inc
or
dec
xlat
fadd
or
iret
xor
sub
sub
push
jge
inc
adc
rcl
pop
jecxz
aaa
ud2
xchg
popf
cmp
ret
insb
jno
mov
adc
adcl
mov
sub
testb
lock
sub
push
mov
mov
adc
cmp
xlat
sbb
add
xchg
push
mov
repnz
or
adc
ficomps
jmp
aaa
mov
cmpsl
jns
or
mov
mov
xchg
inc
mov
lret
sarb
or
mov
pop
stos
sub
pand
push
jne
add
pop
dec
sub
sub
sbb
shl
lds
add
shrb
mov
and
fs
test
stc
inc
in
cmc
ret
fldcw
fisttpl
push
or
addr16
fdivl
or
fldl
lods
inc
cli
ficoms
fst
daa
xchg
mov
ret
cmpsb
shlb
ret
pop
dec
mov
call
stos
mov
outsb
and
pusha
cmp
mov
stc
inc
or
sbb
repnz
pop
sahf
rcll
in
addr16
inc
repnz
sub
fiaddl
dec
xor
and
mov
cmp
mov
lcall
pusha
jmp
inc
in
stc
push
jle
pop
ja
cwtl
inc
lock
xor
cmp
addr16
sbb
xchg
push
lods
shrb
jo
subl
pop
cmc
aas
iret
pavgb
or
adc
xor
mov
test
mov
lock
cmc
ja
sub
addl
fdivp
notb
mov
lds
xchg
xor
xchg
jns
sbb
mov
pop
nop
repnz
mov
outsb
add
sbb
push
xor
sbbl
cld
ja
dec
and
out
xchg
test
fstl
int3
push
fs
ja
ficomps
jmp
mov
xchg
cltd
dec
xchg
mov
sub
int3
or
push
push
jge
loope
xlat
das
add
orl
sahf
or
ss
dec
test
pop
das
push
jmp
imul
or
push
leave
mov
adc
fsubl
in
sub
dec
sub
jge
jl
loop,pn
shll
enter
or
test
lds
or
ficoml
sbb
ljmp
aad
push
ret
stos
sub
mov
jbe
push
gs
mov
inc
push
in
inc
cmp
xchg
jno
pop
sub
insb
inc
test
je
mov
test
in
adc
jg
stos
push
pusha
hlt
test
lock
cmp
call
push
mov
test
mov
les
mov
jae
cmc
dec
mov
cmpb
jno
dec
jbe
js
pop
cmp
data16
adc
icebp
lods
dec
lds
pop
and
aam
cmp
fildll
addr16
push
xchg
imul
adc
pop
lahf
sbb
push
mov
insl
adc
cmp
pop
call
leave
dec
fidivl
sarl
das
cld
xor
int
cs
sub
imul
fs
mov
std
mov
jne
aam
xchg
xor
jmp
mov
mov
cmpsl
jg
push
pop
nop
push
jecxz
mov
dec
jge
add
push
shlb
mov
ljmp
idivl
xchg
out
xchg
add
mov
rep
jne
push
subl
pop
mov
lcall
fildll
sbb
sub
pop
sbb
aas
insl
cltd
sbb
aas
mov
insb
stos
lock
pop
fsubp
cmpl
sbb
loop
fsub
ljmp
jns
enter
pop
sahf
cmp
call
mov
int
lsl
mov
pop
lahf
out
mov
in
cltd
mov
push
and
nop
jno
stos
mov
shll
lret
mov
in
jnp
out
xchg
inc
dec
xchg
mov
pop
cmp
in
mov
sbb
lret
xchg
push
cmp
cmp
out
sub
jno
imul
inc
push
xchg
dec
xlat
insb
and
std
cltd
dec
pop
loopne
test
loopne
xchg
xor
mov
aas
or
push
cmpsl
sete
lea
or
xor
jo
sarb
or
subl
adc
ret
test
inc
addb
jbe
sub
int
outsb
fcompl
mov
pop
sub
daa
and
bound
jg
out
push
test
idivb
xchg
jno
adc
adc
and
loope
dec
xor
pop
cmp
mov
adc
push
jmp
cmpsb
sub
mov
mov
jno
add
mov
sti
inc
sbb
ja
xchg
repz
dec
cmpsl
mov
push
popa
fldt
xor
fsubl
add
outsl
jmp
add
mov
roll
gs
leave
gs
scas
push
jecxz
push
orb
mov
mov
push
aad
add
jnp
mov
sub
pop
jnp
xor
decl
jns
stos
das
rcrb
lea
add
mov
int3
cwtl
sahf
repnz
ja
gs
pop
outsb
or
jg
sahf
pop
mov
add
rolb
push
movsl
sbb
jge
scas
xor
addr16
je
adcb
and
out
fs
mov
sub
jg
mov
jp
cwtl
in
cmp
fsub
xchg
push
scas
imul
or
cltd
cwtl
jmp
outsb
fnstcw
push
push
loopne
sbb
lock
cmpsl
pushf
aam
je
mov
popa
shlb
jo
jns
adc
into
adc
mov
add
mov
stos
mov
or
sub
push
inc
xchg
push
scas
adc
sub
daa
popf
and
inc
dec
jmp
mov
ficoms
and
jns
rcrl
das
icebp
cmp
ds
xchg
into
push
jmp
pushf
push
jne
adc
rolb
sbb
dec
fists
sti
inc
pop
aad
push
mov
inc
or
call
mov
pop
mov
cmpsb
daa
add
xor
daa
out
dec
sbb
lcall
push
int3
and
data16
xchg
adcb
in
pop
or
fldt
xor
xchg
push
jne
push
dec
or
push
adc
lret
cmp
lret
lahf
mov
cmp
add
mov
xor
cmp
movsl
je
in
jnp
pop
int3
hlt
jne
mov
out
push
and
pop
pop
jb
fmul
mov
sbb
in
dec
cmp
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
xor
mov
cmp
jmp
mov
lret
in
inc
and
mov
cmc
mov
ret
lds
pop
mov
faddp
cmp
jmp
sbb
cmc
popf
sahf
xchg
out
mov
sub
add
into
inc
mov
out
ljmp
ret
adc
es
scas
push
inc
inc
pusha
push
jp
rcl
push
xchg
push
jge
sbb
out
mov
push
ret
push
mov
xchg
ss
cmc
and
mov
cmpsb
movsb
and
adc
shlb
aaa
adc
or
test
pop
fistpll
mov
sbb
fdivrl
push
enter
inc
sub
test
mov
adcb
dec
adc
mov
shrl
popa
mov
popa
cs
mov
fs
push
sbb
orb
psrlw
decb
clc
inc
and
pop
test
xor
iret
adc
daa
sub
sbb
pop
fimull
pusha
xchg
or
mov
rorb
arpl
or
imul
xor
sub
test
inc
dec
aas
inc
lcall
cs
lock
jo
cmp
gs
push
cmp
pop
sub
mov
bound
xor
push
movsb
movsl
addr16
xlat
mov
xrelease
jae
es
jl
sbb
stc
mov
jl
sahf
adc
jbe
cmpsl
sub
mov
jl
xchg
pop
ret
and
dec
js
leave
iret
mov
scas
outsb
pop
mov
in
mov
jmp
adc
sahf
fcoml
xchg
or
lret
popf
popa
and
mov
stos
notb
fidivrs
jle
xchg
fwait
add
and
dec
mov
jbe
cld
addr16
add
ret
jo
mov
sub
outsb
adc
addr16
test
xchg
add
aaa
xchg
add
pop
mov
pop
adc
sbb
mov
addb
repnz
cmc
mov
sbb
mov
out
sbb
ret
inc
mov
addb
jp
mov
dec
fstpl
mov
mov
imulb
cltd
dec
jns
sub
mov
mov
and
ja
sub
pop
fdivl
jge
sub
cmpsb
inc
mov
xor
movsb
pop
roll
dec
test
sbb
pop
rolb
xor
notl
pop
mov
inc
clc
dec
jmp
mov
adc
out
jne
jl
or
adc
pushf
enter
jns
push
mov
lret
pop
mov
pop
ja
je
jne
jmp
fstp
mov
inc
jne
jecxz
dec
data16
dec
inc
inc
and
jp
add
loopne
imul
lods
clc
repz
mov
sbb
dec
xchg
push
dec
loope
xchg
lahf
sti
test
or
jl
or
pop
push
pop
or
xchg
in
add
int3
rcr
ss
sbb
pop
jne
popf
cmpsb
out
and
push
mov
les
mov
lcall
mov
stos
dec
and
cmpsl
bnd
and
and
mov
repz
inc
mov
pop
jmp
daa
popa
sbb
cmp
fdivs
dec
loope
pop
push
rclb
fimull
push
fisubrs
stos
inc
mov
xchg
jnp
pop
cs
dec
xlat
daa
movsl
es
rcr
std
fs
bound
add
sub
push
bound
in
add
push
inc
push
pop
or
je
in
out
gs
push
mov
pushf
sbb
into
stos
rcpps
sub
repz
fld
mov
stos
int3
repnz
nop
xchg
icebp
mov
push
sbb
mov
mov
loopne
pop
aas
std
mov
push
testb
leave
push
loopne
cmp
lods
sbb
pop
mov
sbb
xor
outsl
sbb
pop
pop
leave
inc
jnp
out
stos
mov
pop
mov
insb
in
jnp
jle
inc
mov
std
icebp
add
mov
in
adc
daa
and
ljmp
dec
lds
dec
inc
mov
sub
inc
ss
sbb
out
and
int3
addr16
daa
jmp
xchg
dec
fists
testb
shlb
sbb
mov
inc
in
xchg
gs
xchg
repz
mov
mov
loopne
aad
or
fwait
adc
ror
adc
jl
push
inc
sub
ficoml
sub
adc
cmp
dec
xchg
pop
movsb
or
mov
pop
sbb
jp
mov
jp
mov
sub
pop
inc
jnp
push
add
rcl
pop
lahf
fwait
xchg
cmp
or
lcall
test
lret
mov
inc
mov
fldcw
mov
fmull
rol
adc
push
adc
test
cmc
xor
jecxz
arpl
std
xor
inc
adc
in
or
sbb
scas
stc
in
xchg
lods
sub
mov
shrl
out
gs
inc
mov
and
loopne
jae
daa
or
mov
push
adcb
pop
in
fistl
out
sbb
jnp
mov
jmp
pop
sbb
inc
jmp
lret
xor
arpl
pop
cli
sub
push
out
sub
mov
sbb
or
sbb
pop
popf
mov
cmp
cmp
jmp
cmp
data16
pusha
jmp
outsl
push
inc
jo
bound
and
lods
pop
out
cmp
call
sbb
pop
push
or
movsb
mov
xchg
dec
aaa
jbe
pop
jl
mov
imul
dec
lret
xlat
xor
es
adc
in
add
xor
sub
adc
pop
push
call
jmp
sarl
jno
popa
insb
xchg
push
icebp
inc
call
mov
jne
je
or
push
insl
fcomip
sub
push
push
sbb
mov
inc
test
jo
push
dec
test
push
cmp
aam
and
lock
dec
shrl
add
sbb
movsb
sub
sub
dec
add
test
cmpsb
daa
jne
sbb
xor
push
jmp
stc
push
sub
fwait
cmp
popf
fisubrl
jg
inc
or
cmc
call
dec
ljmp
clc
scas
sub
xor
ret
push
mov
xlat
lcall
inc
push
sbb
mov
pop
sub
nop
enter
mov
inc
dec
xorl
add
pop
fnstcw
lods
outsb
lret
jle
loope
subl
and
out
cmpsl
push
sbb
filds
insb
fldl
ljmp
push
fdivp
test
outsb
fidivrs
or
lods
pop
xchg
cmp
sub
lret
jmp
scas
orb
jne
imul
push
scas
cli
pop
or
pop
mov
push
fisubrl
xchg
mov
dec
data16
dec
mov
cmc
repz
mov
adc
shlb
sub
ss
xchg
das
pop
mov
mov
rorl
add
imul
data16
stos
and
lea
mov
test
push
aam
popa
pop
out
sbb
les
xor
mov
cmp
call
int
in
shll
lret
addr16
cli
cmp
outsb
mov
je
or
jne
jge
mov
sub
shlb
shl
jle
and
test
lods
faddp
pop
outsl
add
cmc
or
mov
sti
iret
fdivrl
push
aam
push
sahf
sbb
es
pop
mov
cmp
xchg
mov
popf
testb
test
imul
mov
and
push
pop
fadds
dec
mov
cmc
in
mov
and
outsb
fbstp
aaa
mov
sub
sbb
ja
iret
inc
xchg
adc
xchg
fistpl
and
fs
clc
inc
xor
std
xor
or
inc
cld
fldenv
jne
inc
mov
pop
fs
fidivrs
clc
nop
in
mov
clc
cmp
jno
inc
xchg
mov
adc
inc
xchg
mov
mov
add
xchg
push
xor
mov
mov
pop
cwtl
or
dec
test
sbbb
mov
ret
call
jecxz
pop
jp
lock
fsubrs
call
test
outsl
stos
int
out
jno
jo
das
fdivrl
sub
xor
int3
dec
mov
aad
fs
mov
aad
loopne
xchg
pusha
pusha
mov
fsubr
mov
xor
jo
out
push
loop
push
imul
push
in
lds
push
cwtl
mov
lock
jne
push
mov
leave
inc
sub
pop
outsl
cmp
dec
xor
gs
out
in
jns
mov
mov
sub
sbbl
mov
xchg
dec
push
jno
arpl
fadd
test
sbb
bound
xor
fisttpl
xchg
jnp
es
imul
aaa
mov
scas
sti
mov
add
repz
sti
add
pop
adcl
fnstenv
jae
in
or
into
or
enter
cld
cmpsb
std
push
mov
pop
inc
int
call
jb
loope
jmp
xor
cltd
sub
pop
pusha
dec
popa
into
stc
cmpsb
pop
cmp
dec
test
imul
adc
cmp
push
icebp
mov
bound
adc
add
pusha
xchg
mov
arpl
dec
inc
hlt
loopne
mov
push
push
sub
aad
cli
frstor
stos
mov
enter
clc
inc
lcall
push
insl
mov
and
repnz
movsb
xchg
jp
sub
fwait
insb
inc
adc
sti
push
xor
pop
fnstsw
jbe
xlat
lcall
cmp
or
cmp
pusha
in
mov
xchg
mov
je
fidivl
in
inc
shr
out
add
and
push
push
rcrb
mov
add
adc
ljmp
and
gs
leave
xchg
push
scas
test
cmp
jmp
adc
mov
hlt
and
sub
iret
jmp
test
mov
push
sbb
mov
xchg
sbb
mov
xchg
xchg
inc
lret
sahf
xor
mov
or
dec
adc
lahf
cld
pop
popa
movsb
subl
ffree
xchg
outsb
add
cmc
stc
sbbl
mov
push
jae
sbb
inc
cli
enter
xor
and
mov
mov
adc
cwtl
cltd
lcall
xchg
dec
cmp
lock
popf
adc
mov
incb
jno
shlb
test
cmpsb
mov
pop
push
xchg
mov
jb
aad
in
xchg
add
cltd
int3
nop
mov
enter
jno
lock
sbb
test
xor
adc
lret
rorl
xchg
out
add
ja
xchg
xor
ljmp
cli
iret
xchg
xor
jb
cmpsl
mov
insb
xchg
das
fs
xor
dec
mov
mov
out
test
ret
out
lods
sets
arpl
jle
mov
sbb
mov
mov
insb
mov
shlb
in
popa
inc
or
push
ret
adc
lcall
popf
xchg
imul
andl
mov
rol
mov
mov
mov
jmp
andl
xchg
leave
aam
iret
mov
mov
cs
adc
sti
jg
inc
sti
fmull
inc
push
sbb
sbb
cmp
jnp
daa
mov
xor
cltd
les
lret
popa
or
mov
out
sub
sar
int3
pop
mov
call
rorl
add
mov
repz
or
pop
push
lahf
adc
les
es
mov
xchg
repnz
xchg
push
test
push
sarb
loope
leave
pop
fildl
adc
scas
adc
fsubl
sbb
jmp
mov
int3
sub
xchg
shll
pop
pop
cmc
mov
adc
test
cld
add
data16
mov
in
mov
repnz
inc
dec
out
das
cmp
sbb
data16
cmpsl
mov
and
andl
loopne
cli
ret
and
or
jmp
loop
push
dec
xchg
mov
daa
cmp
cltd
or
cmp
inc
mov
jmp
push
mov
aad
mov
cmc
push
mov
call
fnstsw
add
jecxz
addb
fwait
in
mov
jnp
mov
movsb
mov
pushf
pop
shll
icebp
jno
loope
lcall
cmpsb
and
out
popf
xchg
test
sti
xlat
das
shrl
mov
mov
das
dec
mov
inc
std
mov
lock
xchg
mov
or
xchg
lahf
lret
add
cltd
sub
aas
add
xchg
mull
test
leave
mov
mov
aad
imul
clc
cmp
pushf
xor
and
dec
jno
scas
add
xchg
ret
mov
or
inc
xchg
cmp
add
pushf
je
das
push
xor
aad
mov
cmp
cld
dec
inc
xor
xchg
dec
pop
shl
sbb
and
in
pop
lret
cwtl
fsubrl
aad
jle
sti
pop
xchg
cmp
lcall
and
repz
fldenv
popf
mov
lock
mov
jnp
dec
pusha
mov
inc
or
push
xchg
les
ljmp
mov
test
ret
in
popf
mov
es
movsl
push
movsb
xchg
fidivrl
push
leave
jae
pop
std
adc
or
sub
xor
sti
add
xchg
and
xchg
mov
mov
xchg
sbb
lock
mov
imul
jb
cmp
lret
lods
iret
dec
inc
xor
das
pop
inc
jge
dec
sub
adc
cmc
mov
enter
loopne
outsl
add
icebp
in
testb
inc
jno
xchg
jns
rorl
inc
fs
adc
fsubl
mov
add
xor
push
call
or
xchg
dec
stos
jl
pop
cmc
in
in
adc
or
sub
sub
cmpsl
jecxz
xchg
sbb
dec
mov
dec
andb
push
pavgb
pusha
in
sub
inc
int3
mov
fwait
shrb
ljmp
js
icebp
mov
xchg
mov
scas
bound
and
push
fnstsw
sbb
xchg
push
push
fdivrs
popf
mov
clc
mov
imul
sbb
test
lret
push
mov
lods
xchg
jecxz
push
add
and
mov
xorb
ljmp
mov
test
popf
xor
push
aam
addl
and
pop
divl
enter
lcall
lret
lret
adc
lea
lods
push
rcrb
bound
and
mov
aaa
test
dec
xor
lcall
ffree
sbb
divb
rcll
dec
sub
push
jmp
mov
xchg
and
mov
cmp
cltd
xchg
dec
sahf
sbb
lret
into
mov
add
sti
mov
movsb
lock
and
fdivs
jb
lcall
jmp
add
push
mov
pop
add
pop
or
aad
jae
mov
bound
pop
cmp
scas
mov
fmulp
sub
sub
push
ds
and
ljmp
hlt
push
add
gs
mov
roll
xchg
and
add
lods
or
add
ja
loope
adcl
repnz
into
jl
faddl
cmpsl
sub
xchg
lods
inc
jns
fxch
les
jp
xchg
sub
ds
or
out
mov
lcallw
pop
lods
stos
rcrb
aam
or
lds
test
outsl
inc
sbb
mov
xchg
and
inc
xchg
adc
and
pxor
outsb
imulb
pop
aaa
sub
sub
nop
imul
stos
stos
push
dec
bound
cmp
sbb
and
stos
jmp
in
js
xchg
call
inc
out
loope
mov
loopne
and
je
idivb
fidivs
and
mov
je
mov
mov
mov
dec
fwait
mov
imul
cmc
lret
fimuls
cli
pop
fwait
or
dec
jle
push
lcall
xchg
mov
cld
std
inc
cwtl
mov
outsb
or
popf
nop
sbb
xchg
xor
push
cmp
xchg
push
out
ret
xchg
xor
pop
sbb
lea
mov
cmp
jg
cmpb
pop
cmp
add
mov
sub
and
dec
dec
loope
mov
mov
add
sbb
inc
outsl
mov
mov
xchg
aam
dec
test
hlt
incb
adc
popf
fidivrl
sahf
mov
btr
mov
test
std
mov
pop
push
jle
insb
cmpsb
add
mov
mov
fimuls
dec
movsl
dec
pop
cwtl
cmp
cmp
sbb
test
mov
mov
dec
pop
clc
in
pop
imul
lahf
fistps
idivb
pop
inc
mov
and
ja
cli
and
ja
je
out
push
mov
pop
dec
cltd
movsl
repz
inc
fwait
lds
jp
iret
mov
cmpsb
test
inc
out
sub
push
aad
movsb
inc
sti
loop
dec
out
adc
frstor
in
in
mov
in
xor
dec
push
stc
ljmp
sbb
pop
leave
cmpsb
adc
loope
lcall
push
cwtl
adc
daa
repnz
pop
mov
scas
xchg
ja
pop
subb
and
mov
out
imul
cmp
pop
mov
cld
mov
loop
repnz
jnp
inc
cmpsl
nop
rcr
mov
popa
faddl
mov
and
aam
xor
sbb
mov
inc
dec
lock
xor
int3
xchg
stos
pushf
test
xlat
adcl
lods
sub
loope
jg
bound
xor
cmp
insl
mov
loope
mov
mov
scas
mov
dec
push
insl
ret
test
or
xchg
mov
dec
xor
push
inc
jg
enter
negl
lods
adc
out
test
cmc
jge
js
cmp
xor
aaa
dec
xchg
std
dec
in
lahf
rcrl
movsl
mov
rep
adc
cltd
add
jno
xor
mov
rclb
sbb
sub
mov
leave
sbb
outsb
inc
pop
mov
sub
rcrb
mov
ljmp
jle
pusha
rcrl
adc
aaa
pushl
fnstcw
or
lods
push
loopne
xchg
and
pop
inc
add
sarl
imulb
pop
repnz
xchg
and
repnz
push
push
lret
andl
jno
mov
rolb
jg
lahf
jl
jl
out
add
push
in
xor
filds
and
sbb
loope
jp
inc
dec
ja
adc
mov
xchg
pop
cli
cmpsl
fstps
xchg
push
mov
inc
jns
or
in
pusha
adc
mov
xor
push
push
ret
pop
dec
cld
cli
mov
jmp
xchg
cmpl
xor
shrb
imul
out
mov
and
sbb
dec
xchg
dec
std
xorb
xchg
in
mov
in
lods
sbb
and
jmp
pop
sbb
std
int
push
mov
xor
mov
xor
sub
mov
xlat
mov
or
mov
mov
int
add
lret
sbb
add
or
jbe
mov
dec
xchg
fcmovnu
xchg
sub
mov
dec
inc
sbb
test
push
jns
xchg
repz
mov
mov
sbb
inc
pop
sub
push
int
enter
in
lds
pop
rcrl
sbb
sub
shlb
js,pn
loop
cmp
xchg
rol
frstor
lea
popf
loop
cmpsb
hlt
jae
ret
lods
mov
xchg
rcrb
xchg
jbe
imul
daa
ja
push
outsb
scas
inc
push
test
out
cmp
mov
push
sbb
in
arpl
xor
test
add
push
mov
sbb
push
mov
pop
mov
sub
push
or
push
jg
aam
adc
idivb
add
mov
jo
pushf
ds
cwtl
xchg
xchg
push
pop
or
pop
xchg
insl
cwtl
aaa
xchg
fcoms
sub
cmc
jg
push
mov
xor
xor
pop
out
and
cmp
in
testl
or
repz
xchg
mov
jmp
rcrl
inc
aad
test
out
outsl
fxch
and
mov
add
mov
push
imul
inc
pop
rcl
xor
cwtl
mov
push
sbb
dec
mov
jne
jae
mov
out
cmpsl
sbb
xchg
aam
cmp
dec
jle
jbe
fdivs
mov
data16
dec
and
xorb
and
scas
outsb
ret
xchg
into
cmp
std
cmpsl
adc
push
mov
xchg
jmp
push
into
or
mov
stc
sbb
sbb
aam
push
fsubrs
cmp
pop
pop
fildll
je
in
fsubrl
addr16
pop
adc
fsubrs
aam
lcall
mov
cmpsb
aas
lods
mov
xchg
jl
enter
and
adc
jge
pop
mov
and
mov
out
cmp
int3
inc
pop
or
js
xchg
ret
add
mov
lds
pusha
loop
fpatan
mov
aad
loop
dec
push
xor
pusha
jae
shr
xchg
or
cmp
movsb
cmp
mov
push
and
je
movsl
sti
subl
pop
rcl
ds
nop
into
es
inc
sbb
push
cmpl
mov
xchg
rol
and
pushf
or
cmp
call
in
lahf
jnp
adc
lods
inc
mov
daa
test
test
out
dec
mov
ja
test
xchg
adc
scas
sub
ljmp
add
test
xor
ja
aad
add
inc
jnp
jmp
add
inc
retw
cltd
xchg
pusha
lods
mov
sbb
mov
sub
es
ss
xor
push
xchg
mov
in
mov
jecxz
push
das
lods
cwtl
add
mov
cmp
cmpsl
cmpsl
cli
sub
mov
fdivs
adc
and
fld
sub
sti
js
es
movl
sbb
loope
dec
pop
lahf
mov
mov
ret
fisttpll
mov
jmp
in
fwait
iret
daa
xchg
notb
pop
icebp
js
or
lods
das
in
sbb
mov
sub
test
fimull
pop
movsl
fsubs
jg
inc
dec
icebp
repz
jle
test
jne,pn
sbb
dec
into
jno
mov
leave
lock
push
loopne
ds
xchg
push
aas
adc
mov
pop
mov
mov
and
jne
sbb
sbb
pop
inc
adc
je
xchg
rorl
xchg
icebp
jns
adc
cld
arpl
cltd
test
insl
pop
cmpsb
push
adc
jo
data16
jo
in
xor
jbe
subb
and
out
cmp
dec
je
mov
dec
inc
sarl
fcmovb
push
xchg
pushf
je
addr16
arpl
ja
imul
out
sbb
repz
aad
jne
add
mov
popf
jne
mov
push
iret
jmp
outsl
or
mov
xor
int3
add
int3
inc
ret
mov
or
mov
je
in
fcmovne
adc
lret
mov
popa
in
test
add
jge
in
mov
jge
cli
pop
popf
stc
movsl
jmp
out
insb
xchg
lods
lret
daa
mov
clc
fildll
and
push
jmp
cwtl
outsb
cwtl
mov
jns
inc
sti
jg
mov
or
jae
insb
fidivrs
mov
pop
ret
inc
fsubrl
repnz
and
sti
cwtl
add
mov
les
lods
test
into
xor
dec
add
push
pop
bnd
cmp
sbb
xor
loop
mov
or
in
sbbl
sbb
or
jno
mov
cmp
rolb
add
lret
inc
mov
adc
mov
int
xlat
mov
jmp
ja
popf
push
scas
sbb
mov
fadd
jge
add
cld
out
aaa
movsb
jo
in
sub
cmp
or
clc
cltd
add
sub
insb
pop
lret
insb
ret
adc
mov
pop
xchg
repz
pusha
xor
mov
cmpsl
lock
cmpl
push
fdivrl
mov
lea
jno
xor
mov
in
mov
repz
pop
push
or
stos
pop
adc
push
and
xorb
push
aad
adc
mov
sbb
xor
mov
mov
sub
sub
sbb
push
adc
loop
mov
into
lods
cmpb
push
xor
mov
jne
add
aaa
mov
add
repz
jnp
out
pop
xchg
fsts
nop
or
shrl
xor
mov
int3
in
lcall
push
ficoml
mov
fcoms
cmp
xor
aas
xlat
inc
pop
cmp
jge
pop
das
add
xor
test
mov
cmp
mov
repz
jne
jne
jb
dec
inc
pop
cmp
pop
mov
ds
fistps
or
mov
mov
dec
push
jl
lahf
add
add
stos
xchg
outsb
mov
test
adc
call
pusha
bound
aas
mov
loop
cmpsl
xchg
mov
mov
and
add
dec
push
lcall
cmp
xchg
sbb
repnz
sti
ss
xchg
rcl
mov
add
orb
fisttpl
push
cli
mov
fwait
adc
xchg
add
daa
push
adc
or
push
or
adc
sbb
loop
add
std
sahf
inc
popa
adc
dec
jp
sub
jecxz
adc
mov
jmp
push
int
mov
or
adc
in
add
or
pop
adc
sbb
sarl
or
mov
mov
xchg
and
push
je
das
bound
push
mov
jnp
pushf
and
shll
mov
mov
or
inc
adc
add
mov
test
bound
xor
stos
es
add
sub
xchg
ret
xchg
cmp
dec
icebp
xor
inc
rorb
mov
out
mov
aaa
sub
popa
lods
das
cmp
add
lahf
or
mov
test
mov
int
push
mov
dec
xor
sbb
call
jnp
into
push
rolb
std
rcll
cs
ja
ds
fstl
jmp
pop
mov
orb
sub
inc
or
fiadds
mov
sub
orb
xchg
aaa
sub
das
sbb
push
mov
pop
loop
int
pop
adc
sarl
aad
movsb
cmp
bound
xchg
jp,pt
insb
adc
inc
fistl
lcall
pop
xor
add
pop
xor
leave
ret
or
cld
es
inc
repnz
sub
pusha
gs
inc
mov
inc
repnz
idiv
mov
adc
sub
imull
inc
xor
mov
icebp
aad
std
pop
test
daa
cwtl
loope
jge
sub
cmp
mov
or
and
dec
or
shrl
ficomps
addr16
cmpsl
outsl
cs
fwait
push
or
add
jae
movsl
inc
lret
lds
push
mov
test
jno
push
jle
inc
fs
inc
popf
pop
lret
sbb
adcl
sbb
mov
fwait
insb
outsb
pop
bound
pcmpgtd
and
push
stos
js
jp
int
add
adc
jg
inc
jmp
lcall
cmp
outsb
nop
fistl
and
fdivrp
adc
lods
pop
sbb
testl
jle
cld
xchg
push
cmp
icebp
add
aam
in
lcall
imul
repnz
into
mov
pop
sub
xchg
mov
out
adc
mov
arpl
sub
jmp
fidivrs
xchg
or
jecxz
jecxz
sbb
lods
andb
push
push
jmp
ja
nop
scas
inc
and
lea
sbb
outsl
loopne
adc
lods
jno
sbb
loope
in
mov
adc
xchg
adcl
hlt
cmp
idiv
fbstp
pop
inc
repnz
ljmp
inc
fsubrs
adc
inc
lock
jg
and
sub
enter
pop
push
mov
fisubl
imul
add
lds
int3
sahf
stos
movd
mov
in
pop
sub
mov
movlps
stos
daa
push
je
and
popa
or
push
test
test
pop
jecxz
lods
fbld
mov
xchg
add
cmpsl
int
jmp
xor
popf
jmp
stc
and
enter
in
fstpl
dec
sub
outsl
add
add
or
add
add
fcmovne
std
addb
addr16
push
cltd
aad
xchg
lret
fucomi
loope
call
jno
mov
test
aas
inc
dec
mov
jae
jge
jns
arpl
idivb
cmpsb
ljmp
or
outsb
cmp
push
aam
pop
addb
dec
je
pop
fsubl
push
xchg
movsb
loope
and
adcl
outsb
aad
mov
imul
dec
rcll
cmp
push
inc
lahf
out
xchg
sti
test
les
jge
sahf
pop
push
leave
adcl
sub
loop
xchg
in
imul
bound
imul
nop
pop
shlb
fcomip
decl
stc
xchg
dec
and
cmp
xor
cli
shlb
call
js
pop
ret
out
cmp
mov
or
or
xchg
adc
inc
push
dec
aam
dec
and
stos
aaa
ja
sub
ja
outsl
mov
imul
and
inc
sarb
popf
inc
add
cwtl
or
insb
ret
rorb
in
shll
xor
ja
push
loope
das
out
jge
stos
in
sbb
ja
psubsb
leave
int3
sbb
mov
inc
fbstp
sbb
lea
jle
push
aad
gs
int
in
scas
into
rorl
fistpl
mov
mov
pop
sbb
aad
loop
xchg
add
stos
loop
mov
push
insl
and
jnp
push
das
pop
cmp
adc
addb
lcall
mov
sub
inc
loopne
cmpsb
and
push
inc
and
ret
jne
ret
daa
out
lret
push
cmp
fsub
add
or
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
mov
xchg
push
addl
in
outsl
inc
mov
lods
jecxz
mov
lret
xor
fs
cmp
test
xchg
mov
bound
and
flds
xor
inc
fsubrl
or
add
add
pop
int3
lcall
cmp
add
add
jae
xchg
mov
mov
jae
std
scas
stos
stos
loop
sti
jnp
addb
jno
add
xlat
inc
mov
mov
punpckhdq
cmpsl
jb
movsl
push
or
scas
hlt
push
insb
sti
in
js
push
scas
and
adc
xchg
in
jecxz
add
repz
testb
pop
hlt
pusha
cwtl
mov
and
mov
fildl
pop
jp
and
jno
or
and
mov
test
push
ficomps
ficoml
jns
xchg
mov
mov
gs
insl
dec
test
fldenv
mov
inc
insl
in
into
pop
fisubs
ret
out
mov
adc
icebp
xor
jecxz
push
pop
mov
addb
mov
mov
aad
xor
pop
or
sar
inc
xor
inc
test
in
adc
add
pushf
decb
cmpsl
cmc
insl
mov
jbe
mov
and
or
sub
in
in
mov
int3
in
pop
adc
dec
cmp
mov
pop
outsl
lds
dec
fdivl
xchg
int3
inc
fimull
jmp
mov
push
adc
in
push
leave
push
je
adc
push
test
fucomp
and
ret
es
jo
rcll
sbb
mov
lret
push
mov
jae
std
loope
out
xchg
outsb
or
push
scas
ds
mov
dec
movsb
mov
sbb
loopne
js
testl
ja
mov
out
mov
lret
inc
aam
jecxz
dec
xchg
mov
je
in
dec
jecxz
pop
fcomp
in
inc
adc
xchg
jp
xchg
mov
mov
fisubrl
dec
dec
cmp
fcmovu
pop
orl
fisttps
enter
push
pop
xor
push
adc
test
data16
jbe
pop
test
imul
inc
test
in
movsl
or
in
mov
mov
sub
push
pusha
push
push
jnp
add
test
and
jge
mov
and
xor
shll
loopne
dec
adcl
mov
jno
lmsw
mov
ja
inc
ljmp
or
pop
test
aam
dec
outsb
xor
dec
hlt
fs
dec
daa
nop
rcrl
into
dec
sahf
jae
add
xlat
inc
scas
sbb
stc
inc
ret
mul
xor
jg
sbb
or
js
subb
ljmp
xchg
add
mov
in
pop
xchg
jle
dec
fadds
jecxz
stc
les
out
ja
sub
pop
dec
and
outsl
jle
pop
scas
bound
mov
push
repz
cmpsb
push
cwtl
inc
insb
les
icebp
cmp
hlt
add
mov
aad
stc
scas
mov
mov
lret
mov
gs
sbb
mov
aaa
outsb
das
mov
push
jp
ret
ljmp
lods
or
push
fwait
push
dec
stc
lcall
xor
lods
pusha
pop
inc
xor
dec
test
not
pop
fldcw
sti
movsl
inc
and
stos
dec
loopne
push
push
or
incl
int3
icebp
lods
loop
sub
sbb
into
mov
push
in
jmp
sti
insl
cs
int3
mov
popf
xchg
mov
mov
les
movsl
mov
mov
pushf
push
jl
and
into
push
mov
mov
into
xor
inc
push
subb
xchg
mov
fisttpll
into
push
or
mov
stos
mov
jge
sbb
mov
ficompl
cmpsb
cli
add
push
pop
add
out
iret
dec
xor
dec
sub
pop
xchg
sbb
push
adc
mov
dec
dec
call
sbb
call
adc
in
jle
adc
or
ret
enter
pop
mov
out
push
jecxz
leave
ds
movsb
out
mov
inc
push
mov
push
inc
je
mov
cmp
lret
push
andb
in
sbb
dec
and
or
les
pop
and
mov
or
xchg
cmpsb
inc
ljmp
fmull
mov
sbb
pop
dec
jmp
dec
rcrl
repnz
imul
notb
fs
ja
jae
inc
push
sbb
jo
out
enter
lock
jg
pop
sbb
adc
lcall
inc
dec
inc
or
pop
fwait
push
push
icebp
sarb
mov
fnstcw
test
bound
imul
inc
inc
jmp
xchg
stc
adc
dec
test
push
je
adc
scas
push
sub
inc
mov
test
test
mov
and
jae
repnz
scas
daa
cs
add
push
add
loope
lds
stos
mov
xor
xchg
jmp
stos
mov
int
sub
inc
push
push
icebp
cmp
mov
adcb
std
pop
xchg
jmp
das
insl
mov
or
dec
rorl
fisttps
xchg
cmp
jge
cmpsl
pop
les
lahf
dec
insb
fnstcw
outsl
cmp
jle
movsb
imul
cmp
lret
pop
ljmp
cs
jb
jno
dec
test
sahf
nop
das
sub
jno
inc
ret
push
daa
sbb
cmp
or
ret
pop
xlat
jno
xchg
mov
dec
cmp
cwtl
xor
lods
scas
mov
popf
push
and
fcmove
dec
clc
out
add
aas
mov
jae
inc
inc
inc
pop
pop
xchg
test
push
push
stc
xor
stc
jno
fs
sub
push
fwait
pop
pop
inc
jne
sti
sbb
sar
shll
push
xor
push
mov
pop
das
pop
mov
xlat
sbb
xchg
inc
jge
popa
mov
lock
mov
push
out
and
mov
and
push
hlt
jecxz
subl
xchg
xor
sub
mov
or
daa
mov
inc
push
add
and
addr16
jb
xchg
add
xchg
push
and
andl
mov
sahf
mov
lret
and
loop
cltd
push
stos
mov
jecxz
push
aad
negl
cmp
cmp
push
fidivl
jp
sub
and
idivb
mov
vmwrite
add
mov
jle
xor
sub
xchg
cmp
jb
pop
test
inc
ret
popf
or
scas
cmp
jge
pushf
imul
add
add
mov
dec
sbb
lahf
push
ss
shrl
adc
lret
stos
arpl
push
cmp
mov
aas
dec
lret
testl
mov
loope
sbb
pop
xchg
cmp
out
adcb
test
orb
sbbb
int3
xor
jnp
shll
fmull
dec
mov
popa
cmp
stos
cld
xchg
jecxz
xchg
add
xchg
ljmp
xchg
mov
ret
mov
mov
adc
mov
jge
mov
shlb
push
ljmp
mov
sub
push
cvtpi2ps
mov
jl
js
mov
and
xlat
xor
pusha
shl
fadd
sbb
pop
andl
ret
repz
fadd
xchg
and
xor
nop
outsb
imul
mov
push
dec
icebp
shrb
les
in
int3
pop
mov
sbb
cmp
xchg
aaa
add
es
fistpll
std
mov
insb
adc
jbe
mov
dec
js
shr
leave
lds
xchg
notl
mov
stos
pop
leave
insb
imul
sub
out
and
int
outsl
mov
mov
pop
fwait
dec
jmp
imul
in
fs
std
stos
sbb
mov
mov
dec
jnp
es
push
mov
add
mov
inc
repnz
out
js
adc
negl
jbe
or
dec
push
lahf
test
jo
repnz
inc
xor
cli
sbb
jmp
out
fnstsw
aam
ss
int3
jno
xor
mov
xchg
pushf
rcr
or
pop
push
popf
lcall
add
vpsrlw
push
outsl
fdivrs
xor
clc
pop
add
sahf
fs
out
inc
outsb
ljmp
lahf
fstps
loop
call
call
xor
mov
out
sub
leave
pushf
fcoml
cli
cmp
cmc
and
rcll
repnz
inc
cmp
push
cld
testl
and
mov
lock
das
mov
inc
cld
xor
push
or
ja
push
test
in
mov
mov
in
push
xor
sub
and
adc
pop
push
lods
mov
cmpsb
repz
cmp
sub
je
push
add
aad
fisttpll
add
pop
xchg
pop
rcll
mov
mov
jmp
rol
insb
pop
nop
pop
mov
cld
cmp
push
int3
insb
pop
jae
test
cmp
xlat
xor
data16
lahf
pop
add
hlt
cmpsb
xchg
outsb
sub
js
pop
std
pop
dec
push
popa
mov
repz
aad
aas
dec
sub
pop
mov
gs
dec
fisubrl
orl
repnz
ficoml
push
fists
ja
or
xlat
mov
loop
pop
movsb
pop
dec
je
sti
into
lcall
imul
roll
into
aaa
pop
mov
aas
xchg
lods
adcb
fstpt
dec
aad
sbb
xchg
mov
push
push
das
outsb
or
and
insl
insl
mov
addb
mov
and
lret
icebp
xchg
pop
out
loop
vpmacsdql
out
or
mov
lahf
ficompl
sbb
shlb
aas
and
popa
sahf
push
fwait
cwtl
lods
sarb
or
xchg
xchg
mov
iret
test
inc
mov
clc
in
cmp
or
pop
jp
bound
imul
sub
and
inc
std
adc
sbb
stos
inc
jb
push
jle
pop
adc
push
dec
cmp
fs
lods
in
mov
aas
gs
ja
dec
imul
fdiv
push
shl
out
fistpll
movsb
pusha
xchg
mov
orl
jno
add
imul
xor
stos
xchg
stc
movsl
cld
sub
out
mov
cmpsl
daa
aaa
and
int
jp
aam
mov
push
lds
sub
movsb
loope
or
ljmp
pop
cli
jecxz
sub
scas
mov
xor
xor
push
adc
xchg
xor
rcrl
xor
xchg
bound
jo
xchg
insl
aam
rclb
movsb
xchg
cmpsb
popa
in
sahf
xchg
adcl
xchg
xlat
inc
into
cltd
mov
clc
mov
pop
push
jo
mov
roll
jmp
or
std
lock
rorl
or
jns
nop
imul
add
mov
push
jno
mov
push
jae
repz
mov
mov
push
outsb
dec
mov
xor
fnstcw
and
jns
cmpsb
flds
push
dec
push
jg
jo
pmaddwd
xor
ljmp
call
pop
int
popa
movsl
orb
sarb
add
fwait
cmpsb
aaa
notb
mov
push
lret
or
icebp
mov
test
mov
pop
dec
sbbl
cmpb
push
xor
test
adc
in
and
je
push
mov
pop
or
push
inc
clc
dec
nop
in
xor
in
shll
dec
ds
cmp
inc
mov
push
xor
pusha
int
dec
mov
mov
lds
jbe
xchg
inc
lahf
mov
sbbl
shrl
sbb
loop
sbb
sti
ret
loope
stos
mov
push
arpl
dec
push
lock
sbb
push
inc
fs
mov
test
jle
gs
hlt
shlb
rorl
push
push
xchg
jne
dec
sti
orl
pop
cmpsb
pop
mov
aas
iret
or
test
add
cmpb
into
stos
pop
stos
add
call
xchg
inc
xchg
add
add
jmp
push
mov
sbbb
mov
shrb
mov
sbb
out
mov
clc
cmp
pop
jmp
or
xchg
mov
hlt
cwtl
call
into
mov
icebp
or
pushf
divl
xchg
sub
addr16
or
addl
jp
mov
pop
push
xor
ljmp
sti
mov
sub
add
andl
test
mov
in
sub
test
in
sbb
inc
imul
jl
pop
fldpi
push
insl
notl
sbb
xchg
imul
sbb
enter
push
add
fisttpl
xor
xchg
sbb
or
sbb
push
mov
push
in
jbe
mov
mov
repnz
dec
and
enter
shrb
xchg
icebp
rclb
add
jp
daa
cmp
adc
ja
dec
orb
jmp
or
out
stos
lahf
jle
arpl
js
out
push
cli
fucomp
push
cmp
xor
mov
int3
mov
inc
ds
mov
ja
mov
stc
fiadds
and
xor
sti
jecxz
notl
cli
mov
in
xor
negl
nop
add
mov
les
adc
outsl
xchg
clc
mov
fcmovnbe
mov
jl
es
repnz
jae
popf
mov
push
xor
pushl
into
push
fldt
xorl
cld
pusha
mov
sub
mov
imul
or
inc
cmp
mov
inc
popf
xchg
sahf
mov
ja
stos
sbb
adc
dec
test
mov
pop
pop
je
popa
lods
fdivp
sarl
fwait
xchg
mov
push
repz
ret
and
jmp
add
jno
shrb
imul
pushf
out
aam
push
aad
test
cs
mov
loop
cmc
sahf
sbb
or
nop
sbb
adc
sub
add
ljmp
or
or
push
xchg
sub
rclb
repnz
sti
fs
in
fistpll
test
fsubs
or
pop
ljmp
outsl
lea
daa
inc
std
mov
dec
xchg
pcmpgtb
cmp
sbb
prefetch
and
xchg
or
xchg
sub
add
fsubs
inc
rcrl
sarb
pushl
lahf
rcll
rcll
push
pop
test
pop
jg
mov
bound
lret
lods
or
roll
adc
xor
xchg
jle
add
mov
and
js
cli
test
aaa
jns
inc
mov
jmp
xor
xor
xorb
push
sub
lods
sub
jne
or
ss
int3
mov
insb
pusha
xchg
xchg
sbb
scas
bound
repz
inc
notl
mov
popf
lods
jae
jb
popa
out
fdivrs
or
dec
lea
mov
out
fstps
adc
xchg
cmpsb
dec
mov
stos
aaa
mov
cs
sub
dec
or
mov
sub
jl
pop
push
fldlg2
sub
sbb
jecxz
test
mov
mov
sarb
push
mov
cmc
stos
aam
bound
fisubrl
movsl
lahf
jecxz
dec
daa
xor
in
adc
lock
cmp
popf
mov
mov
insb
movb
ret
sub
out
in
jl
scas
inc
pop
aam
push
adc
inc
popf
mov
gs
and
sub
sub
add
jl
incl
and
in
movsb
ljmp
les
std
hlt
mov
scas
push
mov
adc
or
sub
or
cmp
movl
mov
mov
pop
xor
xchg
sub
mov
iret
push
inc
push
sbb
mov
cwtl
jl
pop
inc
call
xchg
out
sbb
xor
popa
pop
cmp
fdivr
lcall
jno
outsl
addl
pop
cmpl
aas
jne
mov
dec
push
jecxz
sbb
outsl
mov
or
jo
in
pop
mov
sbb
pop
sub
out
adc
adc
cwtl
xlat
lahf
sbb
sbb
sti
cmp
pop
push
cmp
into
std
xor
ret
insl
adc
enter
in
dec
pop
mov
fwait
mov
cli
hlt
std
das
addl
into
aam
pop
xor
mov
xchg
inc
stos
cwtl
out
sahf
lock
pop
test
and
and
inc
ficompl
jmp
pop
jne
int
clc
xchg
daa
aaa
imul
sbb
xchg
repnz
mov
inc
stos
mov
daa
cmp
jae
mov
rorl
es
mov
in
div
xchg
and
scas
stc
and
popa
mov
data16
mov
push
jb
das
pop
jge
push
js
and
push
shlb
sti
mov
sub
or
lcall
loopne
jecxz
or
sub
testb
or
add
pop
jg
mov
mov
jae
test
int3
loop
mov
mov
je
adc
xchg
pop
in
out
outsb
clc
aas
pusha
leave
mov
adc
xorb
adc
stos
xchg
gs
nop
xchg
dec
mov
sarl
not
push
dec
popf
nop
cmpl
andb
stos
test
data16
inc
mov
xchg
in
lock
mov
shrb
adc
and
cmp
bound
rolb
call
aad
adc
mul
adc
adc
cwtl
test
push
fst
sti
ret
out
add
in
cs
xchg
test
mov
cmp
adc
xchg
add
xchg
lcall
or
ja
adc
orb
or
pop
jbe
notb
cmp
addr16
xor
iret
cmp
add
mov
mov
dec
cmpsl
mov
pushf
cmp
push
pop
xchg
ret
pop
cmp
dec
adc
cmp
xchg
mov
rclb
mov
jle
std
or
xchg
push
es
xchg
loopne
dec
sbb
inc
inc
add
jmp
push
jo
mov
imul
cmp
out
nop
in
lret
imul
push
scas
inc
stc
stos
xchg
push
dec
test
out
and
dec
movsl
xchg
nop
outsb
xchg
xchg
dec
push
ss
std
mov
push
push
addb
jle
fistpl
subl
add
sbb
int
jl
mov
cld
mov
mov
mov
xchg
add
pop
cld
push
push
loope
push
pop
mov
fldl
push
jno
xorl
pop
cwtl
dec
lahf
dec
pop
int3
fnstenv
cmp
or
push
jmp
js
push
or
push
sbb
push
jb
sub
popf
sub
mov
icebp
sbb
dec
push
stc
lods
lods
mov
sub
sbb
std
xlat
pop
fiaddl
cmp
jne
test
cmpsb
sbb
jnp
pop
fdivrl
lret
xchg
mov
add
adc
rcrb
arpl
dec
mov
andl
jmp
and
cwtl
push
fucom
into
mov
xchg
lahf
rol
imul
jg
sub
xchg
mov
push
inc
lds
add
mov
cmp
iret
icebp
pusha
nop
cmc
push
push
xor
inc
fsubrs
jns
xchg
or
cmp
pop
sahf
je
cmp
push
cmpsl
movsl
cvttps2pi
sub
int
cmp
or
push
jo
and
mulb
sub
cmc
adcb
mov
or
jg
fbstp
dec
mov
add
loope
and
dec
dec
out
imul
jnp
lcall
lds
faddp
xor
xchg
jo
bound
adc
arpl
ficomps
inc
push
into
xor
fisubs
call
ds
out
sub
fidivrs
outsl
stc
adc
imul
adc
in
and
sub
jg
push
dec
mov
aas
scas
lret
xchg
adc
pop
sbb
pop
fisubrs
es
mov
sbb
insl
jp,pn
add
dec
mov
and
das
cld
into
je
outsb
js
jl
dec
adc
push
addr16
and
stos
or
cmp
data16
or
pop
cmp
adc
shlb
scas
loopne
call
sbb
mov
jp
scas
lret
insl
fimull
jo
ss
sbb
mov
push
mov
out
inc
outsl
dec
out
ss
jecxz
sub
inc
loopne
daa
out
sti
jmp
adc
jnp
jo
adc
addl
lds
shl
inc
pop
frstor
mov
test
cmpsl
int
lret
inc
mov
test
cld
pop
sub
xchg
and
xchg
testl
adc
out
xlat
popa
mov
aad
gs
fcmovnb
lret
fidivrl
inc
cs
jmp
test
and
jns
lahf
shl
sub
lds
mov
xchg
inc
les
test
mov
mov
ss
xchg
cmp
mov
ja
enter
out
jecxz
popa
repnz
rol
mov
xor
cmc
xorl
shrl
xor
mov
fistl
mov
push
stc
mov
pop
out
or
and
jl
ret
cmp
out
sbb
push
outsl
or
dec
int3
pop
dec
out
in
and
int3
loope
add
out
add
push
or
and
jae
add
movsl
leave
mov
mov
rep
orb
and
lock
sub
xor
mov
mov
mov
add
pop
jno
adc
lock
mov
bound
adc
xchg
add
loope
stos
mov
mov
iret
faddl
test
clc
shl
imul
addr16
cmp
inc
adc
jge
addl
js
cmp
sub
leave
insl
mov
in
jg
sub
xlat
dec
mov
stc
xor
xchg
test
or
xor
sarl
jbe
or
jnp
xor
add
aam
xor
push
push
sbb
pop
and
and
stc
mov
test
xor
les
push
xor
mov
push
mov
dec
test
cltd
and
in
lret
push
add
sbb
mov
mov
jp
mov
mov
imul
jecxz
or
or
inc
nop
jecxz
icebp
mov
bound
inc
mov
pop
in
jno
imul
cli
repz
xchg
dec
inc
dec
mov
push
pop
scas
xchg
pop
cmpsl
mov
mov
jecxz
fdivrp
shrl
jecxz
int
idiv
or
outsb
sub
cs
aaa
sub
jbe
inc
push
stc
or
je
push
sti
ficoml
pop
and
aaa
outsl
dec
jbe
cli
or
mov
out
aaa
and
sbb
inc
lcall
in
fs
sub
cmpsb
in
dec
mov
xor
ljmp
xor
ds
adc
inc
push
or
stos
outsb
mov
mov
in
insl
cltd
pop
lods
enter
inc
cltd
push
jl
jmp
mov
dec
adcb
sub
loop
andb
scas
jecxz
xlat
mov
push
fidivs
sbb
data16
lock
dec
pop
dec
or
mov
cli
cmp
clc
or
scas
xchg
pop
mov
mov
mov
push
shrb
jb
xchg
mov
scas
xor
les
cmp
loopne
pop
orb
push
out
rcr
and
cmp
test
ljmp
push
and
cmovo
mov
ja
sti
pop
pop
shlb
popa
fadd
ljmp
repnz
outsl
fwait
in
fsubp
pop
pop
mov
add
repnz
lret
xchg
mov
jle
dec
insb
adc
outsb
jno
jb
inc
adc
aad
pop
push
out
pop
add
xlat
mov
dec
push
dec
negl
xchg
dec
insl
ficomps
out
dec
xor
pop
in
pop
jbe
ss
mov
adc
pop
addb
adcb
out
inc
loopne
cmp
inc
insb
mov
and
loop
or
bound
push
xchg
cltd
adc
aaa
roll
xlat
cwtl
pop
cmp
jmp
ret
xlat
mov
in
pop
and
jno
or
in
jmp
lds
cli
addr16
push
add
pushf
mov
push
addr16
or
std
stc
loopne
push
mov
mov
lahf
push
adc
out
mov
xor
push
push
xor
jg
mov
lds
movsl
xor
push
test
cmp
mov
jl
or
or
xor
push
pop
out
repnz
pop
inc
pusha
and
ds
xor
mov
jo
pop
and
in
shll
cmc
jecxz
test
outsl
or
pop
ds
insl
add
js
loop
push
out
rorl
popf
ficoms
jmp
mov
push
outsb
xchg
daa
lods
and
xchg
nop
ror
ss
aas
mov
xor
mov
jge
sbb
fbstp
cmp
jb
es
xor
jb
stc
jb
leave
adc
daa
jnp
out
xor
sahf
shlb
inc
gs
stos
push
push
pop
xchg
dec
stos
jecxz
adc
push
ja
stos
pop
xchg
daa
leave
leave
mov
fistpll
sti
pop
fcomip
push
std
outsl
pop
sub
les
push
popf
sub
mov
hlt
ja
jb
or
xchg
xchg
lea
cmp
ds
pop
sahf
or
pop
xchg
psraw
hlt
scas
sub
mov
adc
adc
test
in
jo
stos
mov
xor
mov
out
xchg
fld
orb
xchg
aas
test
or
dec
and
sti
inc
test
mov
or
shl
daa
push
jb
int
xor
or
les
sbbb
mov
jmp
mov
jns
mov
push
jno
test
sub
loopne
lods
cmp
pop
sub
sub
cltd
dec
cltd
mov
adc
inc
xchg
jbe
das
enter
ret
gs
sbb
jno
orl
add
cltd
lea
mov
inc
repnz
les
cmp
mov
rcr
push
sub
push
std
mov
out
dec
jo
es
das
mov
int
xchg
push
add
outsl
pushf
inc
pop
daa
push
fnstcw
roll
aaa
loopne
sub
mov
mov
rcrl
sub
xchg
xor
lock
mov
lock
and
sub
lea
lods
in
mov
sahf
stc
mov
hlt
mov
scas
inc
jmp
je
pop
aas
or
sbb
aad
out
mov
cli
dec
call
xchg
mov
adc
shr
adc
cmp
dec
mov
data16
mov
mov
push
lock
loop
jno
loop
ret
pop
cmp
arpl
sbbb
push
pop
jno
out
loope
aad
adc
leave
pop
xchg
in
and
shll
mov
lea
loop
fimull
pop
aad
rcrl
ret
movsl
xchg
and
in
mov
movsb
add
in
xchg
sahf
out
call
adc
adc
fsubr
and
xor
sbb
xchg
stc
adc
pop
loope
cmp
std
sahf
ss
cmpsl
and
push
mov
xor
cwtl
test
xlat
sbb
sub
push
jmp
mov
add
imul
addr16
sbb
sbb
inc
push
mov
dec
mov
or
addb
filds
lcall
mov
push
pop
inc
lds
lret
sub
mov
sbb
push
pop
ljmp
enter
push
mov
stos
and
pop
xchg
loope
out
movsl
adc
xor
lock
int3
inc
stos
cld
cmp
stos
addr16
rcll
inc
div
scas
ret
adc
in
jl
fistpl
cmp
mov
push
lock
mov
dec
xor
adc
out
mov
xchg
jge
mov
clc
dec
clc
in
push
xor
jmp
push
fsubrl
jecxz
iret
add
fstps
hlt
mov
repz
cmpsb
jg
addr16
call
inc
ror
push
xor
pop
xor
cmp
nop
out
xchg
ljmp
add
int
jp
pop
je
daa
sbb
inc
cltd
jmp
xchg
dec
ss
fsubr
lods
jg
jle
arpl
inc
push
pshufw
das
jbe
cmp
stos
mov
scas
adc
mov
out
and
jmp
cltd
pop
jmp
test
dec
inc
push
jl
xchg
fistl
xor
inc
and
jno
mov
xlat
sub
cmpl
xor
sbb
jnp
jns
insb
lahf
popf
cmp
jge
rsqrtps
out
in
mov
sarb
hlt
xor
ret
or
cs
mov
movsb
and
loopne
daa
lock
xchg
clc
dec
movsb
in
rcll
jge
std
sub
roll
cmc
fisubrs
je
and
and
pop
shrb
movl
pushl
inc
dec
mov
mov
sub
sub
test
test
jmp
dec
jg
mov
jecxz
enter
mov
xchg
rclb
int
nop
push
fs
int3
lret
jnp
sbb
push
jg
insb
mov
mov
bnd
jbe
cltd
inc
hlt
aam
loope
and
mov
faddl
cli
popl
add
imul
jecxz
xor
hlt
xor
mov
jns
bound
push
cmpsl
mov
loop
xchg
mov
popf
cmp
mov
dec
testb
sbb
mov
pop
cmpsb
sbb
test
xchg
mov
jae
je
rcrb
outsb
cs
inc
dec
lcall
push
lret
ja
int
imul
fwait
mov
icebp
ret
fwait
xchg
inc
stos
mov
pop
mov
mov
xor
sbb
mov
stc
mov
fldcw
mov
loopne
jge
faddp
mov
xor
data16
loope
clc
shl
or
cmc
jae
push
mov
mov
sahf
push
pop
jno
dec
xlat
repnz
pop
mov
jp
inc
sub
aad
push
sbb
fldl
subb
jae
sub
popa
lods
fidivrl
cmp
das
adc
lods
mov
xor
dec
and
pop
jge
sbb
shl
aaa
push
jp
call
btc
mov
mov
adc
fimull
movzwl
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
icebp
push
mov
and
addl
setae
xchg
shrb
iret
mov
mov
cmpsb
mov
scas
xor
gs
popa
sbb
sbb
cmc
inc
inc
outsb
call
xor
and
insl
xchg
mov
mov
or
fsub
iret
mov
adc
cmp
cld
stc
jecxz
adc
stc
sub
sbbb
xchg
rorl
rcrb
mov
outsb
out
push
mov
aas
sub
fildl
lcall
frstor
xlat
xor
je
xchg
mov
out
pushf
cs
nop
dec
or
sti
mov
push
imul
daa
cmp
aas
icebp
addb
jg
inc
add
in
xchg
dec
call
sahf
sbbb
lds
lock
mov
pop
mov
test
faddl
in
insl
pop
mov
arpl
cmpsl
addl
or
cwtl
repnz
pop
ficoms
cmpsl
xor
cmpl
dec
cs
pop
ret
and
mov
loop
cmp
push
adc
stos
lock
pop
popf
mov
xchg
mov
sub
jns
out
pushf
xor
xchg
mov
mov
jmp
cmp
fmuls
adc
and
add
dec
incb
and
mov
add
sbb
inc
ror
into
mov
popa
iret
push
adc
pushf
xlat
xorb
inc
out
add
loope
xlat
outsl
add
dec
xchg
add
andl
fnsave
ret
shl
shrb
or
jns
insb
push
mov
mov
call
sub
ja
cmc
js
adc
xlat
mov
cmp
loope
pop
test
mov
ljmp
cmc
inc
push
cli
push
and
mov
aad
jle
sub
iret
icebp
inc
fisubrl
mov
and
sub
cs
add
xchg
xchg
pop
repz
cmp
leave
or
nop
jl
cmc
aam
js
dec
mov
cmp
inc
js
mov
test
cmpsb
xchg
or
pop
mov
inc
cs
or
js
or
and
fdivrl
xor
sbb
xor
mov
push
in
cltd
rorb
or
and
mov
cld
or
inc
inc
pop
popa
daa
push
pop
jmp
movsl
and
cmp
insl
enter
cli
fwait
mov
je
mov
stos
shll
in
sub
mov
into
or
test
enter
jg
nop
mov
xor
lods
or
in
lods
cmp
loopne
push
subl
mov
into
in
xor
push
add
mov
sbb
jo
arpl
bound
scas
aas
push
or
inc
jae
js
and
outsl
fsubrl
sub
inc
inc
xchg
inc
lds
cmp
cmpb
in
cmpb
movsb
xor
add
fdivp
cltd
lock
mov
lahf
cld
das
rcrl
sub
es
xchg
push
xor
nop
pop
and
es
pop
lret
jae
fs
pop
mov
leave
mov
leave
xchg
dec
ret
sub
outsb
cmp
push
push
je
mov
sub
int3
mov
push
adc
xchg
add
mov
pushf
ficompl
stc
sahf
jns
xchg
popa
call
add
lock
stos
loope
std
in
mov
loope
sahf
orl
and
inc
and
in
xor
jmp
cltd
xchg
jbe
in
xchg
int
shl
add
push
and
test
push
dec
inc
mov
imulb
and
and
mov
cmpl
push
ret
incl
xlat
jecxz
mov
pop
movsl
out
mov
cltd
aas
je
adcl
add
mov
lods
arpl
mov
cli
repnz
push
mov
adc
mov
sarb
fsubr
push
notb
push
jb
push
sbb
inc
jne
push
pop
mov
cmp
mov
fnstenv
jno,pn
mov
cmc
mov
sub
adc
xchg
test
add
sbb
fldl2e
xchg
sti
xorl
dec
mov
inc
push
jg
lret
cmpsl
push
jecxz,pt
jb
inc
and
jnp
lea
mov
push
or
inc
fisttpll
enter
jl
sbb
sub
out
mov
aam
sub
jnp
mov
enter
push
pushf
aad
push
and
lahf
sti
cmpb
shrb
js
orl
inc
sbb
lahf
xchg
stos
scas
aad
mov
mov
fcmovnbe
mov
push
mov
add
out
sbb
and
leave
mov
xchg
push
mov
sahf
jnp
push
rcll
rorb
pop
xchg
jp
jno
insb
mov
das
outsb
dec
or
mov
and
std
js
mov
sbb
xchg
shll
inc
sti
cmp
cmp
push
cmp
and
cmp
adc
test
jge
jmp
adc
mov
subb
pop
loop
or
sahf
lret
dec
fwait
mov
mov
pop
mov
pop
xor
jp
das
inc
inc
lods
jle
fdivs
ds
xchg
xor
sub
push
test
stc
mov
cmpsb
pusha
cmp
into
jp
pop
mov
aas
or
jp
push
ja
adc
fildl
lds
push
dec
stc
sbb
add
test
or
ret
test
and
bound
out
mov
mov
stos
int3
pop
jbe
je
inc
cwtl
popa
insl
mov
add
rorl
cmp
xorb
push
push
mov
loop
add
shl
fsubl
lds
int3
add
fistl
cs
outsb
dec
stos
rcr
mov
pop
imul
push
enter
cmpsb
adc
xor
push
and
jno
jg
or
stos
call
test
push
mov
cmp
mov
push
cmp
adcb
cmp
lret
popf
inc
sbb
cltd
add
in
pop
push
arpl
pop
push
push
xchg
add
xchg
mov
mov
fiaddl
inc
lea
add
add
jae
enter
out
mov
pop
sbb
ljmp
jmp
lock
addb
inc
imul
fimuls
sub
pop
sbb
push
inc
cmp
mov
sbb
stos
dec
sbb
sahf
lods
and
fcmovbe
sarl
in
negl
repnz
fdivl
mov
shrl
fidivl
or
adc
sbb
mov
fidivrs
mov
pop
push
add
jno
mov
stos
and
arpl
adc
or
dec
outsl
icebp
lods
sbb
ffree
mov
inc
call
xor
cmp
mov
andl
out
xor
or
ja
jb
lods
or
das
test
shlb
mov
xchg
jno
cmc
add
xchg
addb
adc
mov
loopne
pop
xchg
xchg
add
sub
adc
mov
mov
fsub
clc
repz
mov
or
fsubrl
andb
push
push
das
push
pop
fstps
shlb
nop
push
xor
icebp
push
adc
adc
sbb
add
ret
sbb
push
pusha
scas
sbb
arpl
mov
mov
ficompl
or
mov
push
clc
mov
add
and
data16
add
xchg
adc
outsb
test
sub
jno
test
xchg
idivl
pop
call
stos
shl
mov
push
test
clc
mov
add
add
mov
adc
jle
xor
push
and
outsl
xchg
dec
xor
pop
and
sbb
roll
repz
and
adc
mov
sbb
jp
imull
test
mov
pop
pop
push
iret
pop
aam
cmpsb
in
sbb
addr16
call
test
iret
ds
cmc
jae
std
jl
inc
icebp
pop
repnz
fistpl
cwtl
in
subb
fwait
push
xchg
mov
jo
push
daa
mov
xor
inc
adc
jecxz
das
mov
test
mov
cmp
je
out
cli
js
test
push
pop
pop
jae
push
dec
mov
mov
push
inc
push
adc
or
popf
sub
and
sub
and
push
jo
addr16
inc
sub
bound
pop
sub
mov
or
mov
lock
or
in
xchg
adc
ja
jae
jecxz
and
dec
sbb
dec
mov
pop
sbb
sub
outsb
cld
sbb
clc
mov
jbe
and
inc
xchg
cmp
fsubl
xchg
mov
pop
test
pop
mov
and
bound
or
fidivl
push
fld
dec
mov
mov
add
stos
enter
stc
fdivr
inc
pop
cmp
loopne
jb
jge
call
aas
xchg
add
and
mov
int
inc
mov
int3
daa
push
and
lret
add
out
imul
adc
ror
pop
adcl
inc
inc
sub
in
test
adc
repz
lret
in
sbb
lock
adc
insl
lret
les
mov
lahf
ret
pop
mov
sub
mov
pop
jle
sub
mov
mov
les
rol
cs
sub
pusha
cmp
cmp
es
jmp
add
push
xchg
pop
mov
pop
dec
and
ja
les
cli
dec
repz
mov
mov
push
or
pop
jns
call
push
mov
cld
test
xchg
and
cmp
fistl
mov
cmp
dec
popf
sbb
push
sahf
into
add
fldz
mov
je
arpl
stc
cmp
sub
xchg
pop
inc
movsl
xchg
pop
push
adc
pusha
adc
add
fwait
loopne
pop
pop
lods
sbb
mov
and
mov
jmp
icebp
clc
jmp
jp
mov
inc
push
movsl
pop
mov
popf
in
and
jae
cmp
pop
inc
add
insb
fstps
fildl
ss
rcl
loope
dec
pusha
push
cltd
pop
or
sti
cmp
daa
add
add
out
js
sub
lods
mov
pop
push
and
rcl
mov
repz
cld
and
lods
and
popa
jg
jl
sarl
cltd
std
mov
push
mov
cmp
imul
leave
out
dec
xorl
repz
or
bound
mov
hlt
or
inc
in
ficompl
mov
push
stc
das
lret
int
lods
je
imul
idivb
xor
xchg
xor
imul
mov
scas
aaa
pop
iret
aaa
outsb
cs
and
sbb
inc
and
cltd
sub
outsl
inc
fmul
xor
xorb
sahf
pop
dec
lcall
sbb
in
fcomi
rclb
idivb
push
cmp
jnp
ljmp
movsb
add
cmp
mov
mov
das
shlb
loopne
inc
sahf
adc
incb
mov
fwait
jnp
shl
cli
add
dec
int
enter
cmp
xchg
or
cmp
inc
adc
sahf
loop
xor
iret
jns
out
jecxz
cmp
insl
je
shll
mov
inc
xchg
jl
mov
mov
pop
dec
sbb
sbb
bound
mull
fidivrs
ds
fldcw
das
jne,pn
lods
hlt
dec
stos
in
dec
inc
sbb
push
outsb
sub
pop
inc
iret
jp
add
cmpsb
dec
lds
and
sbb
and
push
dec
pushf
pusha
clc
js
jp
sti
das
jo
ficomps
rcrl
loop
inc
shr
pop
inc
jp
cmp
push
cld
rolb
lods
sbbl
add
flds
outsb
flds
or
inc
enter
aas
or
pusha
add
outsb
ret
out
mov
popa
jge
scas
cmp
cld
and
lahf
data16
mov
fdivs
jge
cmp
pop
push
mov
inc
push
add
mov
mov
gs
test
xchg
jno
pop
jge
inc
sahf
aam
and
push
adc
mov
insb
mov
mov
in
imul
xchg
das
fisubl
out
jns
movsb
shlb
mov
cmp
imul
push
jl
xor
mov
xor
mov
lahf
frstor
pop
sti
sar
xchg
add
rcrb
out
mov
pop
dec
shlb
dec
pop
mov
adc
cwtl
fwait
inc
fisubrl
lahf
add
adc
mov
jmp
popf
pushf
sarb
add
movsl
mov
mov
dec
cmp
cld
mov
and
inc
inc
mov
icebp
popf
sub
cmp
js
mov
addr16
arpl
loope
or
add
xlat
sbb
push
in
leave
mov
cltd
sbb
add
fstpl
xlat
push
jns
inc
pop
bound
jo
add
pop
dec
scas
pop
push
push
xchg
into
push
in
mov
jno
adc
or
dec
mov
movsl
jg
xchg
out
aam
cmp
xor
cltd
adc
mov
cmp
dec
cwtl
fldl
jns
repz
stos
ret
xchg
push
sub
mov
cmpb
lods
fcoml
sbb
test
fistps
enter
outsb
sub
nop
ficoms
mov
cmp
jl
pop
outsl
push
ret
sub
setne
jecxz
xor
loope
or
and
loope
shll
movsl
dec
sub
mov
mov
insb
jne
leave
stc
shl
mov
jle
cli
and
addl
lock
insl
add
xor
stos
fldt
pop
lods
roll
jmp
mov
jne
mov
jg
inc
mov
mov
cwtl
jge
xor
cmpsl
cmc
adc
or
adc
mov
jno
mov
fstl
scas
fs
daa
push
cmp
rol
rclb
stc
lahf
adc
dec
cmpsl
mov
rorb
lods
es
dec
dec
ljmp
scas
mov
popa
adc
dec
movsb
fcmove
mov
xchg
ret
and
push
mov
xor
roll
xor
pusha
push
ret
insl
sub
ret
jae
sub
mov
fisttpl
in
inc
push
lock
into
mov
push
ret
add
mov
mov
xchg
idivl
fildl
cmp
in
mov
inc
pop
lret
aas
in
xorl
adc
addr16
cli
fildll
imul
dec
dec
mov
or
dec
lods
and
add
jecxz
adc
add
test
mov
push
fcomps
xchg
and
fwait
jecxz
mov
scas
lods
mov
aam
sti
cwtl
xchg
jge
popf
pop
leave
cmpsb
leave
mov
dec
and
jmp
sub
ja
stos
sbb
fcomps
aas
in
xor
mov
imul
pushf
jmp
stc
dec
push
xorl
pop
mov
pop
and
dec
push
enter
fnstcw
xor
add
lcall
js
negl
shr
in
jl
bound
jnp
aad
mov
lds
icebp
addr16
xchg
pop
or
dec
jmp
enter
push
testb
and
movsb
push
pop
jge
xchg
mov
popf
xchg
lcall
adc
push
mov
xchg
lock
inc
and
inc
idivb
mov
movsb
xchg
pop
ret
inc
mov
dec
jle
xor
jo
sbbb
jmp
mov
adc
jb
xor
xor
xor
pop
xchg
shl
pop
pop
or
fnstenv
in
lods
mov
mov
add
inc
out
mov
jb
testb
xchg
scas
fisttps
test
xor
lahf
les
lea
jmp
mov
jl
js
std
data16
imulb
leave
mov
push
icebp
popa
push
push
cmp
xchg
xor
push
int
mov
subl
adc
add
fwait
call
iret
adc
push
cmp
inc
inc
jns
or
sub
xchg
outsb
imul
mov
sub
cld
add
mov
pop
inc
out
lcall
inc
mov
adc
popa
fs
andl
adc
fwait
sub
pop
mov
cmpsl
jbe
enter
xor
in
push
sub
pop
sbb
sbb
dec
sub
fistps
outsl
add
ljmp
mov
loope
cmp
cmpsb
adc
adc
jns
mov
jne
sub
mov
outsl
push
pop
xorb
mov
les
sub
sub
and
add
sarl
mov
aas
jmp
cmp
add
ficoml
sub
ljmp
std
jnp
mov
mov
xor
out
pushf
mov
dec
xor
arpl
fwait
test
mov
fcmovb
scas
mov
lea
aad
sar
cmpl
mov
mov
cmpsl
dec
jne
mov
sarl
es
fisttpl
pop
rol
dec
data16
cmp
andb
sbb
lret
jb
fidivrl
ret
xchg
cwtl
daa
ljmp
std
sub
cltd
imul
inc
dec
hlt
mov
jmp
lods
xor
test
ss
and
test
and
addr16
out
unpckhps
jg
mov
bound
cs
cmpsl
xchg
lea
test
cmp
arpl
xor
adc
cli
pop
nop
mov
movsb
fistl
stos
test
pop
test
push
in
scas
mov
popl
xlat
popf
and
dec
adc
xor
jbe
mov
add
popa
mov
sbb
pop
fs
or
movsb
add
shl
mov
outsl
cmp
lods
lock
xchg
mov
sub
or
mov
out
jle
cli
cmp
dec
mov
sbbb
sub
xor
xchg
pop
sbb
xchg
dec
mov
jns
aas
fstpl
gs
pop
aaa
in
xlat
jne
jno
ret
xchg
in
repnz
xor
xor
test
es
into
stos
imul
imul
mov
push
fcompl
add
cmp
jnp
pop
andb
xor
aad
test
mov
jg
sub
cmpsb
pop
mov
add
jmp
dec
les
in
cmp
xchg
mov
push
or
sub
xchg
mov
loope
or
cld
add
lcall
dec
push
lods
xor
xchg
mov
xor
mov
jg
std
test
adc
sbb
dec
jecxz
fdivrl
jnp
push
push
ret
fs
loop
add
popa
xchg
xchg
test
mov
push
sti
fstl
xor
shrl
pop
pop
loope
outsl
dec
cmp
or
idivb
cmc
call
imul
adc
mov
xchg
stos
xchg
loop
xchg
cmp
push
lret
mov
lock
fs
push
cmp
std
outsl
cmc
lods
mov
mov
dec
push
mov
cli
cmc
rorl
xchg
test
shll
jnp
or
and
pop
jbe
nop
jne
cs
lcall
add
icebp
mov
jge
cmp
jecxz
xor
icebp
pop
sub
mov
pop
into
sbb
mov
pop
fwait
pop
mov
fsincos
std
sbb
shl
aam
jmp
fs
sbb
mov
std
inc
push
mov
inc
adc
push
scas
push
push
xchg
adc
fisubl
pop
inc
hlt
in
or
sbb
pop
dec
adc
aad
lock
mov
popf
mov
paddsb
cld
fadd
ret
pshufw
int3
scas
pop
xchg
adc
bound
jecxz
out
rorb
jb
cmpsb
popa
shr
insb
pop
mov
fldenv
inc
lods
fnstenv
imul
inc
lret
lea
movsb
addr16
xor
out
test
mov
aam
pop
mov
popa
js
mov
push
push
lret
mov
jno
jge
mov
stos
mov
std
loope
push
adc
sub
mov
lock
cmc
dec
mov
mov
push
testb
mov
jns
ja
outsl
fidivs
fs
outsb
push
mov
aad
push
gs
mov
jae
icebp
js
int
push
sub
pop
jnp
gs
bound
adc
mov
aam
addr16
shrl
sbb
pop
pop
push
shll
mov
fildll
cwtl
jl
push
push
popf
popf
cltd
bound
xchg
adc
xor
sarb
sub
out
cmp
push
sbb
mov
sti
popa
mov
xor
aam
push
in
cmp
mov
xor
sub
popa
sbb
iret
ret
xlat
inc
lock
nop
dec
or
mov
xor
push
and
ss
mov
push
xor
jl
imul
add
loop
pop
lahf
pop
or
rolb
lcall
insb
inc
add
movsb
sub
and
mov
int3
and
xchg
push
add
inc
daa
mov
xchg
test
ja
enter
add
into
imul
pop
sub
out
push
dec
lret
mov
xchg
lcall
xor
jne
or
inc
out
cmpsb
or
pushf
out
int3
leave
ret
and
jg
icebp
mov
xchg
add
loopne
arpl
pop
adc
pop
gs
inc
add
adc
outsb
js
inc
repz
das
and
into
je
add
pushf
xchg
inc
icebp
pop
adc
mov
flds
sub
les
sbb
cld
cmpsb
adc
test
sbb
mov
adc
xchg
iret
inc
cmpl
mov
mov
sub
aaa
mov
cmp
jp
iret
leave
dec
push
push
test
xor
sbb
xchg
out
or
enter
das
pop
enter
bound
js
dec
out
loop
or
sub
fs
dec
inc
stos
adc
xchg
aam
sbb
add
pop
xchg
rcll
loopne
aam
sub
addb
int3
scas
stos
push
pop
testb
lret
scas
and
and
cli
cmp
add
push
dec
stos
cli
test
inc
xor
mov
inc
mov
stos
cs
mov
jo
push
shrb
les
jno
xor
lcall
scas
dec
push
push
test
pop
rol
pop
xchg
outsb
es
pop
hlt
inc
imul
xor
jno
repz
ficoml
jmp
pushf
je
in
lea
mov
mov
inc
stc
xchg
les
mov
pop
and
inc
add
cld
xchg
dec
dec
sbb
xchg
loop
cmp
lea
or
mull
mov
mov
pop
adcb
pop
loopne
rorb
es
mov
das
inc
arpl
sub
xchg
subb
pop
jbe
mov
shll
push
inc
movsl
lret
cld
fnsave
cmp
xor
fdivr
mov
and
ja
sbb
adc
repnz
cmp
orb
mov
mov
out
sub
test
enter
mov
stc
xor
mull
xor
lods
inc
sarb
cmpsl
dec
jp
push
dec
shlb
jb
data16
aaa
out
cmp
fisttps
mov
fldcw
pop
fsubl
fnstenv
scas
or
cmp
or
adc
add
cwtl
push
push
lds
push
out
cmp
cld
sbb
fiaddl
inc
inc
mov
xor
xor
mov
jle
add
aas
pop
lea
cmpsb
push
ds
mov
ss
in
jo
dec
push
sbb
inc
aaa
inc
pusha
jl
repnz
lock
aad
mov
xor
xor
push
fs
adc
popa
aam
push
mov
sbb
mov
sarl
dec
add
clts
push
adc
or
icebp
insb
test
pop
imul
push
dec
leave
add
sub
jne
pusha
adc
and
cmpsl
push
into
mov
jge
or
sbb
in
loope
jb
cwtl
lcall
out
sub
btc
or
lcall
cmpsb
call
and
insb
mov
clc
rcrb
lock
or
push
pop
arpl
aaa
or
mov
push
mov
add
stos
mov
add
push
and
lods
jmp
xchg
sub
mov
or
ss
dec
shll
dec
mulb
jb
push
add
pop
sbb
cs
scas
inc
cwtl
data16
dec
xchg
shll
pop
into
sbbb
pusha
mov
fmuls
subl
jno
out
jmp
sbb
stos
sbb
xchg
repz
repnz
inc
cmpsl
or
cmc
dec
dec
xchg
dec
or
fldenv
jl
jmp
lock
mov
gs
repz
outsb
xchg
cmp
jns
adc
daa
jo
xor
cmp
mov
pop
in
sbb
mov
dec
in
imul
pop
hlt
repnz
mov
insl
fnstenv
aaa
mov
adc
ds
sbb
pop
ss
cmc
or
xorl
jl
test
add
outsl
movsl
dec
loopne
jmp
leave
xor
cmp
test
mov
and
aam
pop
lods
cmc
clc
push
xor
jge
pop
lods
push
ss
shr
xor
int3
mov
hlt
sub
jae
xor
cltd
les
fdivrs
fcomps
mov
push
push
xor
mov
or
cs
mov
clc
mov
or
sub
sub
sub
pop
mov
into
inc
popf
je
nop
mov
mov
pop
mov
testl
fcompl
xor
sub
add
cli
add
and
xor
arpl
push
cli
mov
jb
idiv
mov
sbb
movsl
fimull
data16
sahf
ljmp
xor
outsb
rcrb
sub
or
in
mov
mov
jae
les
adc
or
mov
xor
pop
inc
cmp
mov
pop
sub
jecxz
in
ss
fcmovne
subb
test
cmp
movb
jl
stos
orb
cmc
test
or
dec
lcall
call
fsubs
mov
ja
inc
dec
pop
jmp
dec
mov
sahf
cld
scas
add
xchg
mov
xor
insb
shll
data16
jnp
aam
cs
and
hlt
lret
int
icebp
int
imul
add
and
jae
fwait
lds
mov
dec
xchg
clc
xor
lcall
add
inc
cmc
cmp
mov
mov
pop
call
inc
data16
shrb
in
xchg
mov
xor
xor
scas
mov
or
and
cli
adc
and
push
ja
rorl
rorl
dec
xchg
add
or
or
fst
mov
mov
pop
xchg
mov
push
lock
outsb
stos
or
iret
rcrl
xchg
mov
add
daa
lds
aas
fdivs
jo
or
adc
cmp
mov
les
cli
je
fwait
lods
lret
sub
mov
push
arpl
aad
xor
ret
cld
mov
jb
loopnew
jnp
cmpsl
daa
int
arpl
jo
push
adc
test
xor
jb
std
stc
fwait
and
aam
pop
mov
and
cmp
dec
lret
scas
stc
fcoml
sbb
pop
xchg
ret
out
and
xchg
rclb
push
loop
fiaddl
and
ljmp
and
adc
adc
pop
push
or
sub
ds
xor
push
push
pop
sub
add
jbe
push
sub
dec
push
sub
jmp
cmp
pop
push
mov
pop
enter
das
popa
inc
std
fistl
lret
ret
je
dec
push
cmc
popa
jmp
add
les
cmp
negl
push
jmp
out
imul
jns
aam
out
pop
pop
ja
push
pop
shl
inc
insl
xchg
mov
xchg
add
jp
xchg
int3
and
inc
call
add
sub
dec
sub
cmpsb
pushf
fcoml
in
cs
test
dec
mov
dec
adc
inc
out
dec
or
stos
iret
xchg
mov
and
adc
jbe
xchg
mov
andb
jecxz
test
or
mov
jle
cmp
test
lret
pusha
cltd
outsb
jne
scas
mov
and
cmpsb
into
stc
dec
loopne
sub
jns
incl
pop
dec
cmp
or
sub
js
or
xchg
das
add
pop
jl
add
ror
dec
mov
push
and
or
xchg
sub
inc
mov
mov
mov
fisubs
push
jge
cmp
mov
or
and
pop
pop
cltd
lods
push
push
push
cmc
inc
xor
data16
push
fdivl
cli
pop
cmp
not
add
aaa
bound
xor
lods
and
popf
hlt
pop
xorb
push
lret
in
es
fs
sub
data16
lods
imul
fdivl
jbe
pop
int
lahf
mov
xor
fs
mov
add
out
aas
hlt
insl
inc
pop
pop
xor
cwtl
add
daa
sbb
sub
stc
scas
jmp
js
data16
nop
mov
arpl
icebp
pop
add
mov
enter
mov
push
imul
nop
pop
dec
in
cli
xor
mov
jnp
xor
popf
xchg
xor
xchg
fadd
roll
or
xor
dec
shrb
in
and
mov
lret
or
ljmp
adc
dec
inc
clc
imul
decl
xchg
adc
xchg
push
enter
xchg
fwait
in
sti
xchg
cmp
push
les
fadds
xchg
sahf
fstpt
jmp
stos
push
or
dec
jecxz
out
and
inc
dec
mov
push
loope
adc
jmp
rcl
xchg
jns
movsb
mov
movsb
adc
imul
int
dec
mov
xchg
add
jae
xor
and
sbb
xchg
cltd
iret
arpl
sbb
shl
pop
shrb
dec
lcall
push
or
cmc
sub
mov
push
cmp
lds
mov
js
and
adcl
push
lret
xchg
pusha
pop
dec
je
jne
push
repz
or
push
xchg
mov
dec
into
add
outsb
les
ret
sub
inc
gs
cltd
ljmp
jo
adcb
push
icebp
testb
clc
pop
test
fidivrs
fdivrs
add
aad
jnp
adc
inc
push
aaa
fdiv
into
mov
orl
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
in
lods
out
pop
and
xorl
cmova
xchg
clc
inc
jl
nop
lcall
mov
lahf
cli
jne
jge
je
notb
cmp
out
inc
sbb
aaa
vandnps
sub
loop
push
push
jl
lods
sti
pop
or
out
scas
test
aad
movsb
shlb
loopne
sarb
rorb
xorl
mov
int
lock
mov
xchg
mov
cs
jp
or
andb
int
xor
in
aas
mov
or
inc
std
adc
adc
orl
sub
cwtl
imul
push
test
and
loopne
sbb
imul
imul
aad
xor
shll
pop
adc
mov
ss
jmp
pop
lds
sub
jmp
das
ret
xchg
cltd
mov
loop
mov
push
inc
xchg
sub
out
add
add
and
cwtl
dec
xchg
sarb
mov
jne
jecxz
arpl
pop
mov
scas
iret
insl
mov
outsb
mov
aaa
lcall
push
mov
pop
push
lahf
mov
push
mov
out
xchg
je
bnd
adc
ret
xchg
lret
jmp
fs
outsb
cmp
cmp
pop
outsb
sub
pusha
stos
jae
or
push
enter
push
ror
loop
xchg
mov
dec
jmp
in
mov
imul
loop
fsubs
iret
cmc
arpl
testb
cmpsb
cmp
loope
sbb
push
mov
pushf
jae
jnp
shr
cwtl
lea
aam
pushf
add
mov
ja
push
xchg
mov
and
rcr
cs
sbb
jb
je
mov
mov
loopne
xor
fstps
int
iret
in
loopne
sarb
mov
jecxz
inc
or
jo
sub
push
shrl
orl
adc
fidivl
ss
jecxz
inc
arpl
inc
in
popl
adc
inc
leave
pop
mov
bound
fwait
sbb
dec
xorb
loopne
mov
fsts
in
xchg
sarl
pop
in
out
sbb
hlt
fists
out
add
mov
fsts
mov
scas
out
shll
mov
ret
mov
pusha
jge
add
int
scas
sub
mov
in
popa
loope
mov
adc
xor
xor
lret
aad
out
lret
scas
enter
shlb
add
push
outsl
cwtl
and
test
push
mov
sub
mov
xlat
out
pop
xchg
sti
push
mov
sti
xchg
ljmp
ljmp
jns
movsl
push
shrl
repz
sti
pop
add
bound
bound
mov
mov
xchg
jle
or
mov
sbb
jp
push
loop
lods
addl
lods
and
jl
lcall
jp
push
in
sub
push
popaw
out
lcall
push
push
or
jmp
outsb
out
pop
xchg
cltd
mov
fwait
int3
and
hlt
pop
ljmp
xchg
sbbb
mov
xchg
xchg
dec
rep
jge
mov
icebp
inc
test
fwait
inc
test
adc
sbb
in
jle
mov
cmp
out
cmp
mov
dec
ds
sbb
lock
fwait
push
insl
imul
out
sub
into
fsubr
hlt
outsl
inc
aas
clc
mov
xchg
movsl
shl
jbe
push
sub
push
jno
or
pusha
pushf
icebp
mov
aam
lea
aam
sbb
push
inc
xchg
es
xor
sub
xchg
rolb
push
test
mov
push
mov
iret
adc
test
xchg
dec
inc
pop
fs
fs
dec
out
mov
sbb
jbe
gs
stos
aam
jbe
cltd
jl
mov
jae
iret
sbb
add
aad
pop
xchg
or
sar
jne
out
mov
xchg
mov
jmp
cwtl
push
rcrb
sbb
mov
mov
in
jl
lock
adc
loope
imul
xor
jno
daa
out
dec
sub
inc
mov
scas
mov
sub
mov
fstps
js
jmp
mov
mov
or
mov
add
sbb
xor
pop
pop
lods
repz
inc
pop
jmp
push
cmp
popf
pop
push
mov
dec
ss
jno
or
mov
adc
stos
inc
sub
mov
imul
shrl
addr16
xor
sub
cltd
push
mov
out
inc
enter
ret
sbb
das
test
mov
mov
mov
shll
loop
mov
cmpsb
sub
sbb
and
xor
js
pmovmskb
xchg
sbb
and
daa
dec
jo
lods
pop
mov
dec
xor
push
and
and
cmp
lret
cmp
fidivrl
lods
mov
ljmp
inc
ss
xor
mov
and
xchg
xor
or
jl
outsl
cld
ficoms
leave
test
lock
test
mov
and
mov
inc
inc
dec
les
dec
insb
notl
cli
mov
mov
sub
add
sbb
jg
iret
dec
pop
pop
ljmp
sub
shlb
and
add
inc
les
xchg
adc
xchg
xchg
jbe
xchg
adc
mov
push
out
inc
sahf
cmp
sub
pop
lahf
pop
xchg
pop
mov
out
jle
iret
push
repz
pop
sub
loopne
mov
dec
adc
add
dec
test
hlt
leave
fimuls
nop/reserved
cmp
rorl
mov
push
in
xchg
sub
ret
inc
rclb
data16
sti
int3
add
pop
adc
rolb
scas
ret
push
push
scas
sub
ret
pause
ja
outsb
dec
jecxz
sub
pusha
sub
ja
pop
sbb
dec
dec
xchg
gs
jns
jo
dec
syscall
cmp
mov
orb
pop
push
movsb
fcomip
jo
sub
loopne
test
pand
jl
xor
xchg
je
cld
inc
shlb
mov
ljmp
je
push
add
push
mov
adc
dec
sub
jo
or
out
and
or
pop
push
adc
in
mov
inc
scas
rorl
popf
push
xchg
mov
and
sbb
jmp
mov
pop
xchg
add
cld
xchg
push
das
sbb
pushf
mov
and
int3
fisubrl
incb
sbb
jg
dec
fwait
push
test
adc
mov
idivb
jbe
dec
sti
sahf
sub
dec
bound
loopne
outsl
push
sub
sub
outsl
scas
popf
mov
leave
cmpb
lods
mov
mov
or
aad
xor
inc
jg
mov
cld
xchg
xchg
insl
xorb
cmpxchg
movsb
jne
int3
mov
or
or
sti
or
cli
leave
dec
in
imul
inc
hlt
mov
or
cmp
and
stos
mov
jg
test
adc
jl
pop
xor
mov
inc
iret
subl
loopne
push
pop
sub
movsl
popa
repnz
repz
add
lods
std
jmp
add
js
sub
in
lods
jo
jge
movsb
stos
and
sbb
imul
int3
subb
insl
ljmp
lcall
aam
and
fldenv
cmp
shll
les
clc
dec
and
add
adc
lret
test
mov
test
jb
test
push
out
scas
dec
adcb
arpl
popa
mov
jne
stos
push
adc
pop
mov
inc
push
push
xchg
cmpsb
ficomps
mov
out
and
add
imull
sbb
rcl
add
or
cld
xor
cmp
push
lea
rolb
pop
int3
sarl
into
lods
arpl
and
sbb
hlt
push
repnz
pushf
push
pop
es
in
and
push
jmp
jge
sbb
jnp
xor
and
mov
jb
jo
enter
scas
ficomps
jb
jecxz
mov
aas
jo
out
cmpsl
xchg
push
aam
mov
inc
jns
cli
pop
pop
mov
cmp
jae
inc
mov
cmp
push
push
loop
aad
jg
sbb
mov
les
ss
jo
xchg
mov
je
loop
pop
pop
iret
xchg
icebp
xchg
hlt
es
mov
lock
sbbl
mov
dec
ret
loope
incb
das
lea
fnstsw
in
push
mov
and
push
push
or
movsb
daa
in
cwtl
shl
incb
push
cmp
pop
dec
imul
cmp
lret
mov
shll
jns
dec
cmp
lea
stc
inc
fcomps
loop
ficompl
xchg
loopne
sub
mov
out
rclb
mov
mov
sbb
jnp
xor
inc
repz
inc
sbb
rorl
jne
fsubs
mov
mov
mov
popa
push
insl
adc
dec
out
cmp
rcrl
dec
out
fs
cld
pop
mov
xlat
arpl
sbb
std
leave
sub
adc
pop
adcb
jp
andb
insl
push
pop
cli
insb
mov
mov
xchg
fnstcw
mov
dec
sbb
lods
xchg
inc
test
flds
iret
pop
lcall
mov
in
lock
push
loop
sbb
rorb
mov
or
sbb
xchg
and
jmp
mov
mov
mov
jmp
inc
cmp
mov
adc
jmp
insb
xor
or
mov
jae
xchg
cltd
sub
dec
mov
stos
mov
cmpsl
dec
dec
inc
lods
inc
mov
or
push
idivl
sub
pop
lret
leave
fimuls
inc
rolb
mov
enter
out
adc
xchg
mov
test
popa
repnz
pushl
subl
inc
ja
dec
xor
mov
mov
test
mov
xchg
test
scas
mov
jno
push
sti
sbb
fnstenv
pop
std
xor
and
lock
jae
fsub
addb
xchg
pusha
jl
stos
popa
popf
push
inc
out
fs
loop
push
mov
add
push
jne
cltd
xchg
sub
nop
cs
sbb
push
xor
sub
inc
xchg
mov
adc
aas
or
jmp
push
xchg
es
jmp
ja
int
push
arpl
ss
xchg
pushf
scas
cs
aad
jle
xchg
pusha
pop
jo
and
leave
hlt
loopne
test
adc
sub
insb
inc
aad
lea
mov
ljmp
sub
fwait
mov
movsl
mov
scas
xchg
xchg
inc
xchg
pop
ja
fstpl
es
sub
xor
loope
test
insb
pop
push
repnz
sub
pop
inc
sahf
xor
cmp
leave
sub
inc
out
iret
xor
ret
pop
fstpt
insl
push
mov
or
xor
repnz
ljmp
cmp
lcall
fdivl
jecxz
shl
insl
push
mov
cmpsb
mov
stos
fincstp
cmpsb
out
fisubs
mov
pop
push
cmpsl
or
pop
les
xlat
sub
ljmp
pop
fdivrl
lcall
or
cmp
ret
xchg
sub
leave
and
shlb
lock
push
outsl
mov
mov
rcr
popa
ljmp
lods
js
stos
out
sbb
mov
ds
fildl
sbb
jg
push
sbb
inc
cmp
cmp
shlb
jb
sbb
fsubrs
jmp
dec
sbb
inc
add
movsw
out
lods
in
bound
addr16
jb
imul
imul
push
add
enter
sbb
mov
adc
mov
adc
data16
xchg
rclb
sub
xchg
cld
push
sub
mov
add
aam
mov
repz
les
arpl
shll
inc
and
addb
dec
pop
sub
adcl
jnp
mov
cli
push
jge
mov
add
push
push
mov
xor
jb
fneni(8087
aam
movsl
adc
inc
loop
fistl
cwtl
add
ds
push
xchg
cld
sbb
push
adc
loopne
mov
add
pop
sub
out
ret
bound
je
addl
call
outsl
jno
jecxz
roll
xchg
test
xchg
and
fidivs
xchg
shl
mov
lock
stc
dec
pop
dec
or
repnz
push
inc
mov
push
out
mov
sbbb
sbb
pushf
inc
daa
pop
inc
lret
das
out
test
repz
enter
clc
or
aaa
mov
int3
adc
or
xor
cmpsb
add
dec
fdivr
push
cld
in
mov
scas
xchg
push
xlat
sbb
fnstcw
or
loop
cli
fmuls
les
ret
sub
or
inc
xchg
nop
or
xchg
xchg
dec
ja
stc
xchg
fwait
int
dec
shl
cmp
insb
fldenv
push
out
inc
nop
dec
jl
mov
cs
mov
sbb
mov
lahf
mov
add
lret
cmc
adc
sub
add
popf
insb
out
push
movsb
push
add
js
outsb
bswap
ds
ficomps
mov
cmpsb
cmpsb
mov
push
xchg
outsb
cmp
and
nop
mov
lods
pop
push
inc
pop
mov
mov
sbb
mov
mov
stos
decb
and
fld
imul
aam
mov
outsb
add
push
fldenv
clc
fistps
std
pusha
cmp
je
jp
test
ret
nop
cmpb
imul
lret
clc
sahf
fs
lods
ss
mov
push
ret
cmpsl
sub
xor
sbb
scas
push
insb
test
fnstenv
mov
or
popl
jo
cmp
mov
jmp
ljmp
cmc
loop,pn
sahf
push
les
push
jle
cmp
sub
xchg
push
cmp
mov
mov
or
loopne
xabort
mov
popa
aam
mov
sbb
movsb
dec
fsubl
push
into
enter
jecxz
cld
dec
push
pop
rolb
insl
fnstsw
jmp
lds
in
shrb
sub
cmp
cmp
or
lods
jmp
mov
pop
xor
test
ljmp
inc
xor
stos
sbb
ds
jnp
pushf
jl
jmp
xor
xor
les
adc
in
aam
sbb
dec
in
fimuls
lret
inc
xor
sub
mov
aas
and
xor
sbb
cwtl
adc
sub
and
shrb
notl
pop
outsl
mov
fadds
cltd
mov
xchg
or
arpl
xchg
xchg
push
cltd
mov
bound
inc
xchg
pop
movlhps
cmc
add
lock
mov
data16
push
pop
lahf
xlat
xor
jo
xor
sbb
mov
xor
mov
xor
mov
mov
in
sbb
jmp
mov
mov
out
fidivrs
mov
repz
movsb
jp
mov
mov
aam
test
jmp
adc
int
lahf
rol
pop
pop
sbb
push
in
mov
pop
fisubrs
mov
mov
addl
jns
out
xchg
sbb
add
ret
push
fidivs
and
mov
pop
xchg
mov
sub
dec
in
imul
scas
inc
sbb
call
lret
add
adc
adc
es
pop
dec
dec
and
fmul
movl
or
sbb
arpl
sub
add
dec
jl
into
pop
stos
sub
or
push
movsb
xchg
mov
insl
data16
shlb
sub
mov
fcomps
es
fwait
daa
xchg
outsb
out
xchg
sbb
in
xchg
xchg
inc
xor
imul
insl
mov
and
inc
and
cmp
and
enter
dec
xchg
nop
sbb
pusha
lds
lods
pop
bound
scas
out
scas
xchg
mov
and
leave
ret
adc
shl
or
in
cwtl
sbb
fwait
addr16
add
sbbb
push
fsts
hlt
xor
dec
in
mov
mov
mov
push
adc
jo
in
stos
mov
pop
repnz
push
rcll
fisubs
or
mov
jns
mov
mov
pop
call
mov
or
xor
jae
sub
int
xchg
mov
xor
insl
int3
lock
sbb
push
movsl
jb
sbb
xor
sbb
out
mov
loope
mov
mov
test
divb
ja
mov
xor
dec
adcb
fdivrs
mov
dec
xchg
xchg
push
out
movsb
scas
pop
mov
xchg
jmp
and
cmp
jne
fldl2t
shll
cmp
xor
loopne
test
jnp
sub
inc
cs
mov
ja
mov
pop
sbb
pop
leave
pop
test
inc
lret
inc
push
pop
dec
xchg
repnz
pushf
dec
pop
repz
es
rol
les
mov
push
mov
jae
in
add
inc
pop
mov
scas
add
jmp
mov
outsb
ret
dec
icebp
imul
sbb
inc
inc
movsl
mov
dec
sub
insl
cwtl
lock
add
cmp
cmp
push
mov
mov
adc
cmpsl
pop
push
push
and
lcall
les
aam
ja
jl
pop
bound
jg
mov
out
jbe
pop
icebp
dec
jl
sti
or
mov
mov
mov
movsb
lret
lods
mov
cmp
pop
and
orl
jno
push
fadds
pop
xor
cmp
or
xor
or
fwait
ja
push
test
mov
cltd
xchg
xchg
mov
jmp
movsl
into
icebp
sahf
xor
push
push
pushl
hlt
mov
divl
mov
sbb
jle
aas
stos
sub
lods
xchg
mov
xchg
cmp
or
int
sar
mov
cld
cmp
and
cltd
xchg
and
cmp
sub
and
mov
nop
dec
cld
jp
xor
add
leave
jbe
jns
lret
inc
pop
or
movsl
mov
loopne
les
test
push
icebp
lods
xchg
arpl
ret
lcall
xor
daa
pop
or
cmp
fnsave
out
andl
loope
jp
mov
add
lea
jp
jb
push
cwtl
loope
iret
mov
xor
mov
add
dec
sbb
mov
adc
push
inc
jo
icebp
jle
mov
pop
add
popf
imul
mov
cmp
mov
or
jbe
mov
xchg
adc
push
sbb
cmp
xchg
mov
push
movsl
push
dec
lods
fwait
rclb
scas
repz
or
jnp
mov
xchg
xor
in
cmp
xchg
dec
sub
in
ja
sub
imul
cmp
pop
add
popa
clc
repz
xchg
imul
xchg
xchg
mov
xchg
lret
cmp
stos
int3
idivl
jbe
sub
rorl
mov
lds
mov
jecxz
inc
add
xor
cmp
mov
repz
loop
ds
lock
xchg
cmpsl
loop
les
mov
sbb
inc
jnp
xor
lock
xchg
lret
push
ljmp
mov
push
pop
pop
dec
imul
testl
sbb
push
mov
mov
outsl
arpl
push
fnstcw
xor
dec
cmp
inc
and
push
jo
negb
pushf
and
dec
and
mov
popf
aam
cltd
je
sbb
jnp
mov
sub
sbb
jg
jnp
xchg
mov
xorl
movsb
jge
dec
sub
push
add
sub
je
cmp
cmc
addr16
jmp
dec
lcall
mov
adcl
inc
or
inc
lcall
sub
cli
lods
inc
fidivrs
shll
aas
dec
repz
dec
cs
insb
mov
movsb
lea
mov
inc
add
or
int
insb
aaa
andb
jno
jbe
or
jmp
fsubrp
repnz
mov
push
ret
xlat
mov
adc
push
leave
lods
mov
xchg
out
mov
pop
push
shrl
ss
xchg
insb
inc
notb
outsl
pop
lds
fcmovbe
push
or
or
jbe
sahf
and
sub
lods
fmuls
into
fwait
repz
add
and
enter
pop
and
mov
push
xor
dec
add
xchg
xor
insb
pop
lahf
adc
inc
jbe
rcll
cmp
out
outsb
gs
mov
pop
jno
fistpl
or
pop
inc
stos
and
xchg
mov
stos
movb
lret
xchg
ret
mov
pop
not
xchg
lcall
repz
push
jp
pop
jmp
push
or
mov
rcrb
stos
stos
enter
scas
add
jnp
or
or
ja
add
cli
dec
or
test
jno
ror
pop
dec
pop
xchg
mov
pop
jo
jne
call
sbb
xchg
push
xor
adc
mov
xchg
daa
pop
dec
jp
pop
add
xchg
movsb
sub
add
ss
sub
pop
stc
fmulp
jo
lret
cltd
mov
inc
mov
or
xlat
jg
mov
outsb
lock
inc
movl
xor
push
cmpsb
movsb
xchg
out
dec
lret
popa
into
out
lods
push
mov
pop
in
cmpsl
jns
fsubs
aam
sbb
cmp
daa
cltd
aas
aam
sarb
jl
aad
xchg
xchg
or
or
xchg
loopne
mov
pop
daa
xchg
jae
loopne
lods
arpl
mov
add
adc
rolb
xchg
mov
inc
add
mov
fcompl
dec
cmpsb
das
nop
iret
jo
shlb
stos
icebp
jmp
inc
cmp
adc
sub
push
ja
and
test
imul
add
adc
lock
and
sub
mov
sub
cmp
xor
fistps
mov
nop
push
stos
jecxz
or
jmp
push
push
jb
xchg
es
int
adc
or
fstps
xchg
inc
mov
push
sub
lret
mov
cmc
add
fisubs
imul
test
or
sbb
jbe,pn
insl
mov
or
popf
mov
mov
add
repnz
pop
js
jnp
pop
xor
jae
mov
mov
dec
out
mov
adc
inc
push
mov
imul
cli
xor
mov
push
mov
cmp
jo
sahf
and
call
data16
and
rcpps
pop
mov
icebp
in
pop
test
pop
adc
jne
fs
mov
sahf
sub
fsubrl
push
out
pop
push
in
in
out
pushf
push
jle
sbb
pop
imul
loopne
aas
mov
repnz
movsb
icebp
in
mov
xchg
pusha
call
test
and
push
into
pop
mov
into
hlt
arpl
lea
mov
pop
cmp
fisubrs
aad
jmp
aad
rcr
in
sbb
jae
sub
cmp
enter
ljmp
enter
in
rcll
lds
fcmove
push
mov
mov
xchg
cmp
push
out
mov
ret
addr16
dec
scas
lret
popa
mull
inc
push
mov
not
lret
jle
mov
ss
shl
or
mov
ret
xor
pushf
je
sbb
sub
movsl
mov
pop
inc
stc
fimull
pop
icebp
jge
pop
sub
sub
lock
cmp
push
outsl
dec
addr16
jno
stos
fildll
insl
sbb
mov
pop
mov
out
test
sub
popa
fcoml
xchg
xchg
push
fldcw
cmpsl
mov
test
fstl
shll
xor
sti
sub
mov
or
mov
outsl
js
cmp
insl
arpl
mov
xor
push
es
and
stos
push
cmp
int3
adc
and
aas
dec
mov
mov
lods
imul
xchg
clc
popf
dec
dec
pop
ret
std
dec
mov
outsb
xchg
xor
and
sbb
leave
cld
mov
adc
in
cmp
xor
pop
dec
xchg
test
cmpsl
xchg
in
gs
adc
xchg
movsl
mov
jb
mov
push
xchg
aad
sbb
roll
adc
insb
int
sub
push
xlat
ljmp
fsts
daa
movaps
gs
mov
jbe
out
fiaddl
xchg
add
ljmp
push
mov
push
out
movsl
fidivrl
inc
jmp
xchg
xor
dec
cmp
inc
sbb
cmpsl
mov
mov
cli
add
push
addr16
popa
mov
mov
sbb
adc
mov
push
jb
out
cmpsb
cs
add
scas
pop
stos
mov
lods
jecxz
lods
and
mov
cmc
pop
xchg
cltd
jo
pop
pop
sbb
sahf
jl
shl
dec
mov
lahf
lret
and
test
and
cmp
in
add
cmp
mov
mov
sbbb
ljmp
jns
pop
add
cmp
imul
and
mov
cmp
jb
dec
in
mov
fdivrs
adc
inc
mov
push
dec
lahf
movsl
sub
mov
push
push
adc
ds
sub
jp
jmp
mov
in
stos
jge
lds
sub
notl
faddl
push
test
push
mov
enter
sub
lock
fucomip
add
loop
notl
and
ret
dec
out
dec
push
nop
in
cwtl
add
pop
mov
mov
push
mov
shll
rcll
in
cmp
popf
add
xor
enter
jae
or
aam
xor
std
push
jge
push
pushf
push
dec
mov
mov
in
xor
adc
mov
dec
cld
cs
xor
aam
rol
cmp
mov
insb
sahf
neg
sbb
std
repz
fwait
push
imul
sub
and
push
loop
dec
iret
sbb
or
or
mov
xchg
jmp
mov
xor
adc
ret
dec
fldt
mov
adc
or
lcall
sbb
lock
dec
xchg
insb
aaa
and
and
jnp
jae
imulb
mov
add
sub
pop
pop
xor
stc
inc
dec
rclb
adc
insl
mov
xchg
mov
fcomi
pop
pop
shr
mov
sub
repz
add
jo
scas
jb
imul
jle
dec
fcom
fiaddl
and
int3
aam
adc
int3
lahf
insb
dec
movsl
ret
call
jmp
adc
pop
mov
cmp
push
fmull
xorl
testb
and
cmp
xchg
cld
mov
pop
iret
repnz
or
push
adc
popa
sub
mov
mov
mov
cmp
dec
cwtl
cmp
pop
inc
xchg
push
loope
jl
push
mov
pop
mov
and
or
mov
sbb
sub
lahf
sub
pop
outsl
outsb
xlat
inc
and
insl
cli
sarl
sarl
mov
push
cld
xor
movsl
xlat
pop
sbb
outsl
cli
push
mov
out
adc
sub
je
dec
ret
rcrl
xor
push
sbb
icebp
nop
rol
push
push
stc
pop
pop
jle
loope
xchg
or
sub
sbb
push
xor
sub
aas
stos
stc
scas
dec
sti
cmp
mov
xor
sbbl
cmp
cltd
jge
stos
popf
outsl
outsb
pop
dec
dec
hlt
inc
mov
out
xor
jecxz
lods
push
mov
add
inc
les
push
jbe
loopne
adc
mov
mov
enter
daa
lret
in
dec
pop
shll
imul
das
mov
rorb
aam
stos
push
insl
addl
lea
daa
fbstp
inc
mov
mov
or
and
in
push
and
or
pop
add
cld
xchg
xor
mov
dec
pop
jge
inc
mov
jno
outsb
les
movsl
notb
or
lea
xor
loopne
push
ds
out
adc
mov
cmp
xchg
adc
jae
enter
out
ret
pop
xor
xchg
scas
mov
push
stos
cmp
nop
inc
mov
into
inc
pop
cld
fisubs
push
ja
sbb
add
jne
stos
xchg
rclb
cld
repnz
cmp
vhsubps
out
cmp
cmp
addr16
hlt
cld
sbb
scas
outsb
push
push
push
jmp
cmpsb
cmc
sub
ret
sub
sub
repnz
jg
outsl
enter
leave
stc
mov
pop
xchg
ret
jle
stos
jp
xor
cltd
fdivrp
push
xchg
jae
mov
in
lods
int
cli
dec
mov
jmp
xchg
jns
cmc
dec
jg
sahf
mov
sti
xlat
mov
outsb
outsl
ficoml
cmp
cmpl
mov
jno
imul
jmp
sbbb
jo
pop
cld
ds
testl
sbb
mov
dec
mov
rolb
orb
jae
inc
data16
sbb
pushl
xlat
dec
adc
push
subb
ljmp
call
repnz
pushf
pop
rcrl
dec
mov
mov
and
movlps
lret
nop
lock
adc
push
cmp
stc
shrb
pop
bound
mov
mov
push
mov
mov
ja
xor
cmpsb
jmp
cmpb
jge
imul
jae
push
adc
mov
outsl
push
pop
xchg
lock
lds
ret
mov
test
mov
loope
cmp
rcr
enter
js
in
sti
sbb
cs
or
inc
and
or
jnp
add
mov
cld
pop
jae
push
cmp
xchg
add
cmp
imul
adc
add
mov
iret
sub
fldcw
jmp
mov
andl
sub
mov
addl
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
cs
mov
daa
pusha
addl
xchg
fisttps
mov
inc
lods
dec
lcall
pop
addr16
pop
mov
sub
add
and
adc
pop
test
adc
add
xchg
stc
mov
add
jnp
ja
sub
imulb
push
xchg
sti
mov
jbe
cld
test
fcompl
repz
call
test
into
mov
mov
in
mov
cltd
stc
movb
inc
shrl
sahf
pop
push
and
mov
imul
shlb
inc
stos
negl
arpl
popf
jno
jecxz
or
xchg
mov
ss
jns
cmp
xchg
mov
shlb
push
and
adc
add
jae
dec
rcr
ss
in
mov
pop
add
fwait
loopne
mov
fdiv
push
lds
sbb
jno
aaa
loopne
inc
lcall
dec
pop
or
addr16
adc
imul
jbe
insb
bound
shrl
jns
repz
mov
mov
mov
xlat
bnd
jae
xor
xchg
pop
insb
add
mov
pop
mov
cld
xchg
mov
cmc
mov
inc
int3
stos
mulb
mov
xor
mov
mov
add
inc
std
mov
out
xchg
pop
ss
aas
testb
pusha
imul
pusha
cmp
test
jne
mov
data16
sub
mov
icebp
icebp
xchg
sbb
inc
xchg
mov
push
mov
or
xchg
jg
push
in
mov
jmp
jecxz
aam
int
scas
add
clc
test
test
rcll
popf
jns
xchg
test
ficomps
test
bswap
aam
test
xor
cmp
adc
mov
xchg
xchg
js
sub
sub
pop
fwait
mov
inc
je
test
xchg
shlb
mov
and
mov
stc
bound
iret
sbb
jl
mov
mov
loopne
jno
pop
push
jmp
fs
mov
push
out
sub
sub
cmc
cmp
xor
dec
fs
lret
out
icebp
scas
test
in
xor
xor
loope
cltd
jg
lods
out
loop
outsb
leave
xchg
xchg
mov
dec
mov
sub
xorb
sbb
popf
mov
pop
inc
mov
inc
shrl
pop
lret
adc
lods
jbe
mov
stos
pusha
repz
pushf
add
mov
scas
xchg
pop
nop
dec
mov
repnz
ss
add
mov
loope
ja
xchg
jl
loopne
ror
loope
aaa
lret
repnz
aad
icebp
icebp
cltd
leave
xlat
pop
cmc
nop
into
subb
int3
rcll
mov
test
sbb
lret
jno
fcmovb
adc
in
scas
push
push
dec
test
push
mov
push
ljmp
mov
aad
dec
adc
push
and
fbstp
cmc
push
aaa
int3
lods
scas
xchg
call
jecxz
or
scas
pop
clc
fstps
shlb
clc
and
xchg
xchg
addr16
and
xchg
lahf
out
aam
mov
sub
xchg
lds
orb
ret
xor
inc
cld
fadds
mov
in
add
ljmp
pop
lods
call
sahf
adc
xchg
inc
dec
pop
pop
mov
jns
sahf
add
xchg
or
lcall
sub
pop
dec
out
cmpsb
add
jle
ljmp
js
je
cs
xchg
pop
mov
loope
pop
jl
xchg
push
in
in
add
sbb
repnz
push
bound
cltd
push
pop
into
mov
repz
add
loopne
aam
xor
pop
fmul
sbb
sub
test
ret
and
mov
inc
or
sbb
sub
scas
sbb
std
add
xor
inc
nop
xchg
lret
icebp
and
dec
jle
sbb
xlat
xlat
pop
stc
adc
xchg
xchg
sbb
sbb
sbb
or
push
test
dec
dec
mov
jne
stc
test
adcl
pop
sbb
xchg
jno
cmp
cmp
mov
push
icebp
call
sub
adc
decb
nop
sbb
or
xor
pop
and
push
and
cld
mov
push
sbb
jns
js
mov
mov
loopne
bound
mov
jmp
in
pop
jne
daa
clc
sub
pop
sub
dec
mov
movsb
cltd
addb
dec
repz
xchg
xchg
shlb
lds
in
lods
or
adc
js
std
ret
sbb
push
mov
jo
outsb
pop
aaa
icebp
roll
xor
xchg
xchg
lcall
cwtl
sbb
stc
or
fisttps
in
hlt
xchg
xlat
adc
in
inc
popf
jno
arpl
add
xor
cmp
mov
jl
std
cmpsb
xchg
mov
in
scas
arpl
das
xorl
ret
shl
jp
push
movsb
ljmp
cmp
rorl
iret
cli
cwtl
inc
js
mov
mov
xchg
xor
dec
pop
mov
mov
xor
xor
data16
loopne
in
gs
mov
mov
ja
in
or
jnp
sub
ljmp
and
add
js
dec
or
mov
sahf
jo
add
test
bound
int3
mov
out
int
das
mov
mov
mov
cmp
mov
cmp
cs
test
gs
inc
mov
mov
or
pop
insl
sbb
lcall
jbe
das
into
pop
mov
jns
dec
daa
xor
int3
mov
test
pop
test
inc
sbb
mov
stos
inc
adc
pusha
add
push
sub
call
lods
sbb
inc
add
xor
out
xchg
add
jb
or
xchg
ljmp
in
aas
mov
mov
loopne
lock
sub
aaa
aad
sub
in
and
sub
jns
jecxz
mov
push
sahf
mov
ss
mov
and
mov
jns
or
push
daa
cmp
ret
pop
loope
xlat
iret
jbe
adc
cld
ljmp
push
sub
cmpsb
outsb
cmpsb
sbb
das
imul
inc
in
dec
ret
mov
stos
xor
addr16
mov
fstpt
xchg
sub
cmpsb
or
xor
push
sbb
leave
imul
dec
xchg
mov
repz
inc
pop
ret
mov
int
or
cmp
push
aad
das
test
cmp
pushf
mov
int
mov
int
pop
jae
add
daa
mov
jl
push
adc
stos
int
mov
xor
cwtl
xchg
inc
in
inc
cmpsl
mov
fildll
aad
xlat
xor
stos
mov
adc
mov
cmpb
mov
in
fwait
xor
add
adc
push
mov
dec
push
bound
adc
xlat
push
inc
outsl
shl
adc
test
pop
xor
pop
sahf
repz
outsb
sub
cmpsb
lret
iret
movsl
pop
loop
and
lret
and
dec
jmp
and
aad
dec
pop
sbb
fstpl
adc
in
or
mov
leave
jl
push
dec
ret
lds
sbb
xor
adc
aad
lea
cmp
sub
lahf
dec
dec
jg
xchg
add
addb
test
add
sub
and
mov
inc
jne
or
inc
out
leave
cmp
mov
idivb
push
insl
xchg
shlb
mov
sub
mov
repz
sbb
sub
cmp
add
push
push
mov
jo
and
mov
mov
xchg
jo
je
mov
es
jns
mov
cmp
arpl
stos
hlt
lcall
mov
shll
mov
and
fildl
mov
mov
xor
lods
nop
sbb
fildll
rclb
push
mov
in
inc
add
sti
push
cmp
test
pop
adc
rclb
sub
adc
pop
fninit
ffreep
push
leave
fmull
arpl
xchg
mov
int3
adc
mov
ja
sub
pop
mov
mov
popf
or
in
xor
or
jns
in
stc
add
stos
dec
ficoms
std
out
stos
mov
add
mov
cli
dec
dec
pop
add
lock
inc
sub
inc
xor
and
arpl
dec
or
mov
rcrl
xchg
fisttpll
aas
mov
cmpsl
lods
jmp
cmp
into
popf
lret
aaa
mov
jge
jecxz
sbb
dec
es
in
cmp
dec
in
add
hlt
add
dec
adc
push
and
push
pop
xchg
sti
sbb
adc
push
or
adc
hlt
pop
mov
xor
add
sbb
mov
repnz
adc
sbb
dec
repnz
aad
into
in
stos
movsl
dec
hlt
inc
cmp
dec
std
pop
int3
jmp
ja
push
pusha
shll
and
push
sbb
stos
loopne
popf
jmp
add
inc
cli
inc
stos
and
ss
push
xor
rolb
and
div
mov
mov
cwtl
movsb
mov
shr
stos
negb
mov
into
mov
jae
loope
out
xchg
andl
pop
fdivrl
dec
fisubrs
xchg
push
push
pop
push
mov
sub
cmp
mov
sbb
push
adc
cmp
lahf
dec
jmp
sahf
outsb
movsb
sub
dec
mov
ret
push
adc
dec
xchg
stos
jno
xchg
sub
sbb
in
loop
push
stc
out
xchg
xchg
or
lahf
je
mov
clc
cmp
ret
lock
mov
mov
mov
faddl
cmp
cwtl
dec
push
jecxz
dec
mov
out
test
shr
js
jecxz
dec
mov
clc
xlat
or
or
ja
rcl
in
into
insl
shlb
daa
xchg
or
cmp
mov
push
in
xchg
clc
in
stos
jecxz
and
test
inc
inc
sub
jno
vmovups
sub
cwtl
or
cwtl
std
adc
dec
sahf
clc
sarl
pop
push
movsl
and
out
sbb
rclb
andl
fstpt
adc
enter
loopne
jge
or
sub
lods
int3
xchg
adc
pop
mov
call
sub
lds
inc
fstl
push
movl
xor
mov
or
or
push
jle
les
inc
fnstenv
aad
ds
std
test
add
jbe
cmp
lahf
sbb
adc
mov
fisttps
lret
sbb
sub
jbe
and
fadd
push
push
int3
xor
sbbl
mov
dec
xor
dec
jmp
mov
jge
notb
lret
pop
ja
cld
xchg
inc
rcll
jl
add
orb
roll
mov
pop
subl
rol
bound
lock
js
test
mov
in
js
mov
out
mov
xchg
mov
enter
gs
adc
xor
push
push
xchg
push
push
je
dec
lock
inc
xorb
incb
ret
pop
cwtl
mov
das
out
cmp
dec
call
cwtl
nop
icebp
xor
cmpsl
ret
test
ja
mov
fidivrl
or
icebp
cmpsl
adc
imulb
dec
sbb
lret
sub
fisttps
xchg
cmp
fs
imul
jo
pop
and
idivb
adc
test
mov
bound
sarb
enter
xchg
jg
and
pop
inc
shlb
mov
mov
in
dec
or
inc
push
fnstsw
xchg
mov
gs
jl
sub
test
out
cmp
sbb
mov
test
lret
mov
add
sbb
mov
stos
sub
mov
call
adc
out
xchg
outsl
push
je
jl
push
cmp
xchg
mov
imul
fwait
out
sub
nopl
jbe
test
add
cmp
mov
mov
inc
adc
jecxz
stos
inc
into
dec
mov
out
shlb
xor
cmpsl
lcall
jns
inc
mov
inc
aad
and
mov
jl
cli
add
cs
pop
sub
into
data16
lcall
mov
in
dec
xchg
mov
test
mov
lcall
mov
cmpl
lcall
cmp
cmp
andl
movsb
fistpll
aaa
mov
sub
aam
inc
test
xor
or
mov
hlt
push
inc
mov
and
adc
jae
jb
aad
pop
adc
xchg
testb
ret
adc
fs
xchg
loop
leave
push
mov
test
cmp
xchg
rol
outsb
jmp
sbb
insb
scas
jge
add
dec
cmc
mov
repz
jae
dec
lods
adc
xor
out
and
or
cmc
aas
int3
rolb
int3
sbbl
jne
bound
cmp
mov
sbbw
and
call
mov
jecxz
mov
adc
mov
mov
cs
or
pop
push
lret
cltd
pop
or
mov
inc
leave
sbbb
aaa
dec
loopne
gs
inc
icebp
or
cmp
and
lods
sub
cmp
kunpckbw
mov
xchg
or
outsl
ljmp
push
js
jecxz
fs
out
pop
jle
cltd
and
pop
repz
out
pop
mov
repnz
or
fadds
add
inc
inc
sub
loopne
mov
scas
sub
ds
pop
sbbl
xchg
repnz
ffreep
outsl
mov
jp
call
test
pop
int
mov
mov
jbe
sbb
mov
push
cltd
clc
push
test
and
xor
rcrb
in
neg
dec
nop
rorb
cmpsl
cmc
loope
sub
xor
push
xchg
sahf
cwtl
adc
pop
gs
dec
ss
xchg
lcall
adc
push
mov
push
sub
ret
loope
arpl
pushf
jne
and
sub
jo
jmp
jns
lret
mov
inc
push
je
lock
mov
or
pop
pop
ljmp
inc
ljmp
and
add
cmp
ljmp
or
insl
cmp
mov
rcll
xchg
dec
mov
fst
mov
push
push
or
inc
xor
xlat
lcall
into
cltd
in
insl
cwtl
das
mov
sbb
xor
fcomi
lret
mov
ja
addl
aad
mov
test
push
jl
cwtl
les
nop
add
xlat
scas
pop
rorl
in
in
cmp
or
xchg
sub
adc
mov
test
jp
test
scas
cltd
push
jg
push
sbb
fwait
xchg
lods
add
daa
subl
add
aad
icebp
daa
popa
je
das
adc
idiv
xor
xor
dec
dec
mull
sahf
pop
mov
jae
sbb
ret
sub
and
std
fistps
sahf
sbb
or
mov
push
add
push
stos
js
mov
adc
sub
mov
xchg
loope
mov
push
xchg
xchg
stos
dec
or
jl
clc
sub
push
mov
nop
ljmp
dec
ret
xchg
arpl
adc
and
je
out
fstl
dec
andb
lods
iret
testl
pop
pop
ljmp
int
cli
mov
and
add
leave
adc
add
jp
adc
dec
xor
mov
sub
push
sahf
shl
out
pop
xor
enter
mov
std
dec
clc
jle
mov
into
lods
fcoml
push
mov
mov
loopne
icebp
jae
mov
fldenv
popa
bound
les
mov
call
insb
jge
pop
lcall
js
pusha
cltd
add
add
push
stc
call
sahf
int3
adc
sbb
push
loopne
xchg
push
adc
xchg
adc
lods
flds
adc
ja
and
in
inc
frstor
pop
test
sbb
cmp
stc
lds
lea
pop
sbb
push
scas
mulb
rcrb
push
mov
cmp
push
scas
outsb
xor
dec
scas
jo
in
loope
sarl
jle
add
idiv
and
adc
pop
in
xor
lcall
adc
lret
mov
int3
or
aaa
mov
das
andl
cmp
imul
sbb
into
cwtl
push
mov
mov
shll
test
sbbb
push
xchg
andl
pop
push
inc
inc
dec
adc
or
js
sub
pop
sqrtps
sub
fisttpl
pop
loopne
add
mov
fisubl
sub
rclb
scas
or
in
in
and
push
les
aaa
jecxz
adc
ljmp
negb
mov
ret
xchg
xlat
insb
mov
add
jbe
xor
inc
imul
inc
and
dec
mov
test
inc
add
push
iret
lcall
sub
sahf
jb
xchg
out
insb
sbb
cwtl
xchg
aad
xchg
iret
rcr
fidivs
and
loop
loope
push
loop
lea
dec
jns
adcl
jae
and
and
cmp
or
cmp
jp
or
lea
fsub
insb
cwtl
pop
mov
and
push
inc
jge
fcmovnu
fiaddl
adcl
and
xor
fadd
cwtl
jg
cld
je
inc
sub
sbb
or
add
fs
mov
inc
add
int
ljmp
mov
xor
jg
pop
or
and
insb
or
jno
dec
fbstp
addr16
jne
ret
push
pop
mov
add
cmp
icebp
clc
test
xor
push
cmp
call
aaa
testl
mov
jle
scas
into
imull
mov
icebp
rcll
fwait
lret
mov
and
cmp
push
mov
cs
xorb
stos
pop
int
imul
imul
out
scas
ds
pusha
idivl
jae
xor
int3
sub
inc
cltd
out
adc
xor
or
mov
fidivrs
movl
adc
roll
inc
inc
jmp
sahf
xchg
lahf
mov
sbb
pop
sbb
in
mov
arpl
pop
cwtl
sahf
call
pop
popf
inc
test
scas
jmp
pusha
ss
cmp
add
push
adc
xor
push
imull
jmp
xor
mov
inc
js
les
repnz
pop
movsb
cli
mov
scas
je
gs
shlb
mov
pop
mov
xchg
cld
mov
pushf
jge
lock
mov
sbb
sub
inc
inc
in
dec
movsl
jae
leave
jl
dec
adc
mov
mov
xor
mov
aaa
sub
movb
ss
in
cmp
adc
in
push
into
pop
mov
fistl
add
pop
outsb
shlb
push
and
add
lahf
xchg
sarl
cmpsl
sbb
pop
jbe
push
xor
movsb
lock
nop
xchg
incl
push
das
xchg
inc
outsb
mov
pop
mov
stos
fs
xchg
fmuls
ljmp
jmp
sub
xorl
addl
gs
imul
out
das
and
fsubrp
adc
test
xor
stos
sub
ljmp
das
fcmovb
pushf
repnz
mov
arpl
imul
sub
in
jae
arpl
adc
inc
pop
stc
cmp
xor
mov
fisubl
push
sbb
sub
ret
pop
mov
or
mov
xor
pop
icebp
sub
adc
dec
adc
sub
inc
rcr
cmp
add
movsb
sbb
mov
xchg
loopne
xchg
iret
fisubl
pop
into
out
leave
nop
sti
adcb
movsl
loop
mov
lret
sbb
in
stc
dec
sub
bound
sbb
pushf
aam
pop
insb
sbb
roll
cs
andb
inc
push
aad
jne
jo
int3
sub
icebp
mov
pop
xor
jne
push
cmc
int
jecxz
insl
rorb
xor
push
lret
jns
clc
xor
out
movsl
mov
jmp
fcomp
clc
popf
dec
sbb
inc
cmp
adc
sub
jb
out
xor
add
or
sub
shlb
shll
and
push
in
aam
xorb
lahf
mov
dec
dec
xchg
mov
jle
fbld
ljmp
sahf
jns
into
jle
sbb
pop
push
jge
or
int3
mov
stc
cmovl
xchg
std
or
jb
in
cltd
movsb
aas
cmpl
xchg
shll
xlat
loop
mov
mov
lahf
cmp
mov
es
lret
xchg
mov
mov
mov
movsl
xchg
rcrb
and
xchg
scas
xchg
enter
sub
mov
xor
das
pop
pop
mov
arpl
scas
sbb
push
fidivrl
test
push
cmp
mov
mov
out
push
xorb
mov
mov
pushf
rorb
lea
ja
xchg
loop
sbb
inc
mov
adc
std
jmp
cli
repnz
dec
push
into
sahf
and
inc
xor
fcmovnu
ljmp
dec
mov
or
adc
mov
add
sbb
jnp
or
mov
jno
inc
lret
inc
dec
lods
adc
cmp
push
cmp
push
xor
jbe
jmp
xor
hlt
mov
or
movsb
inc
add
or
cmc
sti
dec
and
lea
repz
push
fiaddl
add
adc
out
pop
push
jle
iret
sbb
add
cmp
scas
add
mov
pop
jg
and
lret
add
push
fidivl
adc
das
jbe
dec
rclb
ljmp
div
and
push
xorb
call
mov
in
jns
and
xchg
cmp
push
pop
fbld
in
jbe
shll
pop
in
mov
adc
jle
jmp
lahf
into
mov
les
push
jnp
xchg
mov
jno
imul
fcmove
andb
push
pushf
jmp
les
inc
lahf
insl
loopne
std
sbb
dec
jo
div
fstpl
ds
out
mov
das
push
push
aaa
dec
jnp
sbb
push
xchg
xor
shl
arpl
jbe
or
sbb
mov
inc
xchg
mov
xchg
xchg
outsb
loop
in
inc
stos
mov
sub
mov
mov
sbb
dec
das
mov
icebp
rcrb
or
push
aas
push
cmc
or
shll
out
mov
lock
cmp
xchg
mov
xchg
ss
out
into
push
inc
inc
cli
adc
pusha
sub
aam
pop
in
xchg
inc
mov
sbb
stos
add
sbb
cmp
pop
into
jbe
mov
sbb
mov
push
mov
xor
repz
fwait
and
mull
xor
add
add
xchg
rolb
nop
je
push
scas
dec
sub
sahf
dec
inc
aad
sbb
push
xchg
sub
out
pop
push
daa
add
shrl
aad
movsb
push
cli
outsb
adc
sbb
jg
fs
sbbl
lret
and
or
mov
pop
jae
or
dec
je
xchg
xor
pop
pop
add
add
loopne
cmpsl
fildll
cmp
fcomps
push
in
js
in
cmpsl
or
mov
add
sub
mov
or
mov
xchg
push
ret
fisubs
xor
push
fisubl
adc
sub
inc
daa
cmpsb
js
add
inc
mov
aaa
adc
fisttps
dec
cltd
mov
xor
loop
jbe
cmp
inc
nop
jns
and
cmp
cmpsl
push
pop
xor
xor
lret
sub
or
test
cmpsb
add
aas
inc
push
pusha
mov
or
loopne
mov
mov
sub
xor
std
cmp
adc
movsl
sub
push
push
cwtl
adc
movsl
mov
mov
test
std
inc
cmp
xchg
popa
jle
movsl
xchg
fnstenv
sbb
loop
push
das
push
or
mov
mov
jle
mov
and
mov
das
in
lea
dec
es
mov
cmpb
adcb
pop
outsb
sti
cmp
test
test
out
in
sbb
out
cmp
sbb
jecxz
bound
cmc
pop
popa
aam
add
cwtl
mov
stos
or
fistpl
sti
inc
pop
inc
mov
mov
pushf
pinsrw
lcall
add
jo
adc
xor
add
test
cmp
repnz
fidivl
xchg
mov
or
cmp
rclb
cmp
lds
fnstsw
mov
imul
inc
in
leave
mov
in
fdivl
stos
push
push
fcompl
jno
shlb
loopne
xchg
push
mov
lock
cmp
cltd
stos
aad
add
sahf
lods
adc
mov
loop
in
insl
xchg
loop
pop
lds
jge
test
in
sub
xchg
dec
jecxz
addr16
xchg
xchg
cmpsl
pop
adc
cmp
cli
sbb
inc
js
roll
movb
push
shl
fcompl
xor
xchg
scas
inc
or
out
jae
xchg
sbb
push
mov
dec
add
sbb
fisubs
hlt
movsb
xchg
pop
mov
pop
or
imul
jae
cmp
popf
mov
push
out
xor
cmp
xchg
add
and
shl
clc
mov
add
ret
mov
rcl
push
bound
data16
es
mov
mov
sbb
int
xchg
adc
sahf
cli
jo
out
cmc
pop
jmp
add
lret
packsswb
adc
lock
adc
jecxz
push
std
test
jmp
mov
push
dec
push
pop
inc
imul
add
test
lea
adc
sub
test
lods
or
inc
test
sbb
fists
scas
pop
jle
mov
sub
inc
or
push
push
lock
mov
push
mov
movsl
mov
stos
iret
pop
mov
testb
aad
push
out
inc
ret
andb
add
jns
push
add
cld
sub
loopne
add
sarb
das
pop
insl
mov
jns
icebp
leave
jle
adc
or
jno
xor
push
daa
dec
jmp
adc
sbbb
fiadds
jb
int
fcomp
lcall
add
pop
dec
adc
cmp
push
inc
mov
shrb
xchg
sub
leave
mov
mov
popf
mov
mov
mov
imul
mov
rolb
cmp
pop
loope
or
rol
ja
mov
push
xchg
add
adc
adc
dec
inc
xlat
and
mov
push
lret
add
adc
bound
shrl
adc
jl
xchg
popa
faddl
and
popa
insb
sub
call
into
or
lret
js
inc
mov
jl
sbb
push
mov
mov
aam
pop
cmp
jp
lock
mov
outsb
in
lcall
xchg
and
jp
cli
and
nop
mov
mov
inc
adc
mov
es
inc
pop
sarl
xor
xor
aas
ss
xor
jo
sub
and
test
loope
pop
pop
mov
shrb
push
adc
cmp
add
popa
dec
xchg
pause
stos
cmp
int3
dec
bound
sbbb
fnstsw
and
inc
fisttps
fxch
cmp
mov
ja
rcrb
xchg
or
sub
lods
clc
cmpsb
xor
adc
pop
pop
xchg
push
enter
jo
add
push
repz
fwait
lock
pop
pop
mov
and
inc
loopne
inc
mov
test
sbb
ja
loop
push
hlt
mov
shr
push
xor
shr
push
mov
mov
inc
mov
and
and
int
mov
pop
and
xor
xchg
scas
popf
andl
fisttpll
pop
ret
push
xor
stos
xchg
push
aas
mov
fcmovnu
push
mov
stc
adc
insb
and
jns
inc
jae
inc
jb
data16
icebp
or
movsl
mov
push
mov
out
mov
jecxz
push
mov
pop
xor
rcll
dec
lea
scas
shll
sbb
cli
adc
es
popa
in
loope
movsl
push
fisubrs
jno
jne
xchg
inc
mov
xchg
mov
xchg
rcrb
push
push
ja
fists
in
int
dec
pushf
fidivl
and
lods
loop
mov
fs
push
push
sub
xor
push
fs
lods
lea
loop
adc
ret
flds
adc
or
popf
inc
enter
sub
dec
add
int3
xchg
mov
faddl
xor
push
in
pushf
adc
ficompl
in
das
into
mov
sbb
faddp
pop
push
mov
xlat
cmp
arpl
insl
or
mov
std
jecxz
dec
and
push
jmp
jp
inc
pusha
push
cli
sub
inc
stc
xchg
mov
mov
cmp
subps
or
inc
je
xlat
in
jl
popa
ss
xchg
daa
push
aas
add
mov
dec
dec
ficompl
js
mulb
adcb
dec
mov
out
shll
and
jmp
mov
ljmp
aaa
lahf
push
inc
stc
add
dec
adc
mov
or
loope
jo
out
dec
out
dec
subl
xchg
cmc
xor
push
xchg
ds
and
push
aad
mov
adc
ror
addr16
push
add
dec
mov
push
or
cli
int3
push
cmp
and
ja
dec
mov
das
sub
out
fcoml
sub
push
cwtl
imul
mov
mov
inc
int
cs
int3
cmp
data16
cld
mov
cld
and
ficomps
adc
gs
xchg
xchg
fbld
push
xchg
sbbb
dec
xchg
cmp
fsubs
ds
pop
mov
pushf
cmp
mov
je
xchg
cmp
lret
pop
xchg
jo
add
push
adc
add
test
add
add
xrelease
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
data16
fiaddl
orl
les
outsb
lret
and
jmp
or
test
arpl
pop
jle
scas
fiaddl
imul
add
mulb
loope
lock
push
add
mov
inc
lods
js
je
dec
aas
loopne
xchg
sbb
mov
mov
hlt
cli
fsubrp
cld
in
sti
filds
cmp
cs
add
popf
fiadds
movsl
sub
xor
ljmp
push
and
mov
inc
lock
test
sbb
push
dec
loopne
xchg
fisubs
and
inc
jae
jo
insb
xchg
leave
cs
lods
mov
mov
cmpsb
ljmp
fcmovnb
outsb
pop
lds
cld
and
jmp
ljmp
movsl
enter
mov
inc
pop
push
out
sbb
andl
mov
fistl
loop
jb
jno
inc
xchg
xchg
and
movsl
dec
and
imul
addr16
outsb
inc
jbe
push
jmp
xor
ds
mov
inc
aaa
icebp
cmp
das
jmp
decl
push
aaa
test
idivl
or
push
mov
and
mov
addr16
loopne
rcll
and
sub
ljmp
push
stos
add
sub
aad
fwait
and
push
cmp
pop
fisubs
adcl
mov
push
test
jb
sub
pop
out
sbb
pop
cmp
cmpsb
mov
pop
int
sbb
int3
xor
movsb
fsubrl
adc
and
ficoms
subl
fildll
popa
aam
or
mov
divb
es
and
rcll
xor
push
push
and
fadd
xor
jle
jle
mov
mov
inc
and
xchg
cld
adc
push
imul
addl
xor
lahf
mov
fld
ja
xor
fisttps
call
and
les
fdivrp
aam
gs
push
in
dec
push
notl
push
adc
pushf
pusha
hlt
stos
sbb
or
int
lock
xchg
lock
loopne
lods
or
adc
xchg
push
aas
pop
rcrl
mov
xchg
jns,pt
sbb
xor
fs
repnz
mov
pop
js
ret
popa
je
mov
xor
xor
iret
mul
rcrb
jecxz
push
fcompl
test
push
xchg
int3
xchg
cmp
cmp
aad
std
pop
lret
icebp
test
mov
test
inc
sbb
mov
outsl
nop
loope
pushf
mov
xor
adc
icebp
pushf
aas
loope
and
sbb
pop
cmp
stos
dec
sub
fisubl
mov
scas
inc
jae
add
mov
jo
or
shrb
sub
aam
fs
mov
in
xchg
je
mov
push
xor
pop
cmp
out
pusha
dec
or
fsub
cmpsb
pop
pop
rcr
gs
leave
xlat
sbb
shlb
mov
std
mov
fidivs
sbb
cwtl
arpl
adc
aas
push
incl
cli
in
test
data16
fldl
popa
xor
in
subb
xor
dec
shlb
std
ljmp
jne
cli
jbe
mov
sub
nop
popl
mov
lds
and
pop
fcompl
dec
push
pop
push
push
jbe
mov
jo
cmp
dec
mov
pop
push
js
xchg
mov
sbb
scas
xorl
rcrl
push
mov
daa
imul
xor
push
mov
aam
push
in
mov
fldcw
mov
mov
shrb
and
loopne
sub
dec
int3
inc
movl
loopne
inc
mov
add
pop
rcll
cwtl
outsb
aas
and
subb
jns
addb
xchg
push
insl
dec
mov
or
int3
xor
test
cmp
jg
out
xor
add
addr16
add
movsb
dec
push
sbb
test
jno
or
lret
cmp
sub
shrl
xchg
push
pusha
sbb
jne
inc
push
out
lods
addr16
xchg
jo
sub
mov
dec
enter
fneni(8087
out
xor
mov
and
push
jl
mov
or
cmp
in
ja
mov
sbb
mov
mov
loope
sti
mov
rcrl
cmpsb
out
mov
cs
or
push
jl
rcl
mov
push
or
pop
or
lods
daa
nop
xchg
mov
and
xchg
sbb
push
fildl
lret
fmul
and
xor
cmpb
add
inc
cmpsl
loopne
les
js
mov
and
push
inc
or
lock
ds
mov
xlat
jnp
or
lea
push
push
pop
sarl
sbb
add
push
xor
adc
push
andb
in
pop
ss
xor
cmp
test
dec
push
ret
dec
mov
push
or
cmp
dec
lahf
psubb
cmc
pushf
inc
cmp
roll
sahf
mov
test
xchg
subl
aas
shr
enter
or
push
or
lcall
lods
cli
int3
call
add
popf
aam
aas
jne
xchg
fnsave
fcompp
into
cli
test
and
bound
push
jmp
adc
push
cmp
call
pop
mov
xor
xor
or
mov
dec
fiadds
mov
mov
push
test
or
pop
imul
mov
xchg
jno
and
or
addl
push
xchg
sti
in
or
pop
jmp
jno
loop
pop
dec
xchg
inc
shlb
in
add
inc
dec
pushf
stos
mov
adc
enter
jmp
or
sub
scas
jle
inc
ss
testl
sbb
lock
lcall
push
sbb
das
enter
je
xchg
movsb
mov
inc
test
cld
add
add
fwait
lret
inc
push
stos
lahf
sub
std
pop
dec
fstpt
shl
fdivs
inc
dec
mov
ss
sub
insb
lahf
pop
jb
loope
mov
shrb
jg
xor
cmpsb
sub
adc
add
jl
repz
xchg
lock
xchg
int3
and
mov
lcall
inc
loopne
cwtl
and
popf
add
aad
pop
dec
stos
xchg
cmp
push
mov
ja
aam
pushf
mov
int3
mov
sahf
nop
fildll
jns
fsts
sbb
in
jecxz
dec
imul
and
mov
hlt
dec
repnz
fidivs
fidivrl
add
jge,pt
mov
out
cld
add
mov
das
push
pop
rol
lahf
cmp
add
adc
lods
sub
test
mov
scas
push
sahf
sub
add
in
mov
test
sbb
jp
popa
cmp
pop
aam
cmp
scas
jmp
ret
nopl
addl
mov
insb
fsubrl
jns
push
add
loope
test
test
jp
adc
xchg
icebp
sub
and
cmp
push
mov
aaa
stos
dec
js
ror
aam
xor
mov
aas
mov
xlat
adc
xor
js
cmpl
fildll
push
push
sbb
lcall
sbb
and
xor
or
xor
test
mov
pop
xchg
push
repnz
pop
xor
pop
or
popf
cmp
jo
mov
fisttps
mov
scas
xor
repnz
scas
stos
jecxz
mov
popa
push
out
repz
xchg
fs
mull
mov
push
mov
hlt
cmpsb
mov
nop
xlat
cli
jne
mov
out
jns
shl
cmp
inc
pop
xchg
icebp
ret
cli
xchg
pop
dec
in
inc
mov
jae
add
and
mov
ds
lcall
push
test
mov
xchg
enter
inc
insl
xor
ljmp
adc
loopne
pop
lea
inc
dec
add
add
jecxz
call
pusha
sbb
popa
push
lcall
loope
cmp
xchg
hlt
out
inc
mov
fldenv
shrl
out
outsl
cmp
repz
negb
mov
dec
jecxz
mov
call
popa
mov
mov
aaa
enter
mov
xchg
push
clc
jmp
outsl
fs
and
push
das
sti
fcompl
cmpl
push
lahf
add
push
pushf
movsb
sbb
stc
inc
sbb
xor
inc
jp
pop
and
jmp
lods
int
jno
lea
rorb
inc
xor
sbb
xchg
ss
xchg
jbe
cmp
jnp
sub
int
or
inc
cmp
add
push
jle
pop
xchg
xor
jno
cmp
into
mov
pop
cltd
xor
lahf
dec
push
mov
sbb
sbb
fistpll
lahf
pusha
push
call
cmp
jg
jnp
pop
in
xchg
jne
push
and
out
push
push
cmp
sub
xchg
gs
push
add
or
and
mov
insl
push
xchg
lahf
push
aad
pop
rcr
mov
in
pusha
add
or
pop
lods
mov
and
xor
mov
shrb
mov
cmp
push
inc
jl
dec
imull
out
fstpl
cmp
hlt
lret
xor
fwait
les
sbb
inc
aas
xchg
push
dec
mov
loopne,pn
and
sbb
bound
adc
icebp
test
push
sub
cwtl
fs
pop
or
cmp
mov
or
ja
adc
cld
and
bnd
sub
test
mov
sub
jl
push
gs
pop
jbe
jns
into
sub
add
hlt
sbb
les
pusha
sbb
xor
fists
sub
adc
mov
imul
int
push
mov
jl
jns
cwtl
mov
scas
or
jae
leave
mov
mov
xor
inc
pusha
imul
sti
jnp
mov
lret
xor
mov
pop
nop
sbbl
ret
fidivl
aaa
mov
push
rorb
cmpsb
lea
lds
icebp
pop
mov
call
out
outsb
mov
pop
cmp
aas
lds
xchg
insl
cmc
imul
pandn
lods
sub
jmp
pop
pop
xor
cli
mov
outsb
and
mov
mov
mov
repnz
lahf
adc
mov
test
jbe
mov
clc
or
repz
add
jmp
jmp
cmp
fildl
xlat
test
lds
cld
sbb
xor
ficoms
xor
mov
inc
repz
sbb
and
das
dec
pop
popa
pop
subl
aam
mov
call
addr16
cmpsl
sahf
xchg
daa
stos
loope
adc
cmp
in
xor
sbb
mov
dec
std
mov
jne
stc
aaa
xchg
and
jg
adc
pop
ds
dec
xor
daa
xchg
sbb
inc
push
dec
std
pop
cltd
ret
jmp
arpl
pop
jg
cmp
daa
or
pop
cs
fwait
lods
rcr
or
shlb
in
adc
sub
rdpmc
cli
xchg
fcoml
push
call
testl
sbb
mov
mov
lock
sti
inc
std
add
push
mov
jge
sub
adc
pop
add
add
jne
outsl
stos
jp,pn
gs
xor
popa
lock
adc
loop
and
je
out
loope
mov
scas
aas
lret
push
cmp
push
adc
imul
jbe
pop
leave
mov
mov
fidivl
daa
ljmp
pop
dec
jno
in
pop
test
add
outsl
adc
cmpb
sahf
aaa
test
xchg
test
cmp
push
adc
add
dec
fisttpll
dec
adc
mov
mov
test
adc
mov
and
cld
jmp
mov
lods
sub
xchg
sahf
mov
mov
add
test
xchg
nop
mov
push
aad
int3
notb
flds
call
js
cmp
lods
outsl
push
std
and
ffree
pop
notb
ljmp
mov
jae
push
jg
cwtl
fcompl
inc
punpcklwd
cmpsl
or
out
addr16
sub
jmp
mov
xchg
xchg
in
out
ret
cmpsb
push
scas
add
subb
lret
inc
pop
add
xchg
ficomps
lds
sahf
add
mov
xor
cli
mov
sub
stos
xchg
stos
sbb
imull
out
fwait
mov
dec
std
adc
fnstenv
jmp
cmp
pop
xor
into
cmpsb
out
movsl
vpaddb
shlb
inc
sbb
ja
adc
jp
add
jae
sbb
xchg
mov
dec
stos
test
cs
fstpt
fsubs
sbb
sbbl
scas
dec
mov
popa
xchg
push
movsb
add
test
les
cmp
sbb
or
mov
mov
push
dec
and
gs
inc
xchg
loop
xor
call
push
daa
or
hlt
ljmp
cmpsb
iret
outsb
push
enter
lret
jecxz
cmp
cmp
stos
adc
adc
cli
mov
adc
add
sub
adc
and
jnp
lds
out
int
jp
inc
imul
rcrl
jbe
sub
pop
cmpsl
and
daa
movsb
enter
gs
rolb
les
pop
gs
add
jg
sub
adc
inc
cs
push
dec
jbe
sub
and
call
dec
pop
and
fdivs
addr16
sub
iret
xor
push
fldt
cld
test
sbb
mov
add
nop
popa
jle
mov
daa
rolb
dec
ds
inc
xchg
jmp
mov
aas
dec
xor
mov
cmc
ficoml
scas
jp
fs
sub
ror
dec
xchg
ret
rclb
or
mov
push
pop
mov
scas
imul
pop
sbb
pop
ds
fisubl
inc
push
lcall
xchg
pop
and
xchg
movsl
shrl
scas
mov
popf
inc
scas
jge
stos
clc
lahf
bound
or
sub
dec
adc
and
inc
hlt
aaa
cmp
arpl
aaa
add
xor
dec
xchg
out
mov
fadds
add
jne
mov
jl
xchg
add
push
out
push
out
jl
mov
lret
loopne
sbb
ret
xor
pop
jnp
mov
xchg
pop
jge
shrb
pop
iret
or
negl
icebp
sub
ret
jae
xor
and
aaa
or
ss
xor
inc
les
lock
or
or
push
imulb
lret
mov
mov
mov
lods
jge
add
daa
into
cmp
popf
rorb
sbb
push
dec
inc
pop
adc
inc
popf
pushf
xchg
pop
sbb
mov
stc
mov
test
pop
addr16
xor
mov
mov
sti
mull
sbb
imul
sub
jb
in
jbe
cmp
pop
pop
je
outsl
sub
mov
xchg
cmp
cmp
cs
js
arpl
adc
inc
push
lods
mov
stc
lock
push
shrl
aad
decl
mov
sbb
aaa
xchg
inc
es
xor
loopne
imul
mov
mov
fs
push
std
scas
sub
pop
sbb
popa
pop
in
xchg
pop
dec
adc
popa
inc
jo
add
outsl
cltd
cwtl
ret
inc
clc
pushf
pop
xor
inc
push
add
ds
mov
and
mov
fcom
shrb
fwait
popa
push
pusha
push
push
stos
jle
lock
int3
incl
sub
sub
push
pop
mov
mov
xor
dec
cmova
das
sub
xlat
cltd
test
popf
pop
cmp
loopne
xchg
daa
add
cwtl
movsb
outsl
clc
jns
xchg
inc
sbb
mov
xor
fs
scas
push
adc
mov
flds
adc
repnz
leave
or
fildll
xor
int3
mov
sub
sahf
push
arpl
push
and
mov
cmpl
jbe
aam
mov
add
cltd
insl
xchg
fisttps
mov
mov
jl
popa
pop
mov
xchg
push
mov
ds
andb
add
loopne
dec
lcall
andb
mov
push
mov
in
xor
int3
or
sub
xchg
nop
bound
inc
sub
sti
icebp
ret
adc
sbb
cmp
lock
jbe
fs
adc
inc
push
mov
inc
mov
mov
push
mov
rorb
cmpsl
and
inc
sbb
jns
pop
scas
inc
mov
sbb
out
jl
push
dec
mov
lods
imul
je
jb
scas
pop
sbb
add
inc
repnz
sbb
clc
jns
mov
add
loopne
mov
mov
movsb
cmpsb
xchg
int3
and
xchg
lea
sbb
les
pushf
clc
sbb
in
and
inc
sub
push
mov
dec
mov
ljmp
outsb
push
sarl
lds
pop
and
jne
add
inc
dec
lahf
lock
stc
fsubr
sbb
sbb
leave
or
push
inc
add
movsb
jbe
data16
dec
subb
pop
and
mov
or
sub
out
and
inc
movsl
aam
cs
fidivrl
push
inc
aas
pushf
icebp
mov
mov
rcrl
fadds
push
popf
and
leave
sbbb
mov
or
adcb
cmpsb
call
mov
push
call
and
mov
mov
or
cs
dec
ja
leave
outsb
mov
mov
outsb
mov
adc
dec
mov
or
jmp
cmpl
dec
rcrb
lods
mov
int3
or
jle
push
popa
jmp
cmp
push
popf
mov
and
mov
mov
loop
or
int
sahf
fidivl
bound
fsubrl
cli
pop
mov
sub
dec
inc
xor
push
lahf
mov
js
dec
sahf
add
out
xor
inc
sub
xlat
mov
rol
imul
adc
outsl
hlt
fidivrl
dec
loopne
int
shl
out
or
int3
cwtl
xor
xor
fldt
sub
jns
dec
orb
insb
cltd
loopne
pusha
into
mov
lcall
lret
in
add
cmc
dec
cwtl
sbb
jne
packsswb
sti
dec
fs
or
scas
sbb
cmpsb
xor
cmp
cmp
int
mov
or
mov
inc
mov
std
inc
jne
cltd
sbb
and
dec
lods
inc
aas
or
test
jecxz
subl
rcrb
daa
inc
sub
shll
push
dec
pop
cmp
fisttpll
or
xchg
clc
es
xor
leave
in
mov
adc
pop
lahf
adc
dec
or
sbb
mov
inc
notb
inc
jle
lret
xchg
mov
push
int3
add
and
or
enter
push
stos
fcomps
sub
arpl
sub
mov
nop
cmp
subl
push
loope
cltd
pop
cmp
mov
xor
xlat
sbb
and
adc
add
jne
jns
xchg
pop
out
adc
inc
mov
mulb
ja
mov
sbb
iret
dec
or
ds
push
cmc
fidivs
sahf
shll
aas
jmp
subl
push
in
push
adc
std
jnp
sub
dec
pop
out
adc
ja
push
lret
xchg
outsb
xchg
repnz
sub
sbb
rolb
aas
mov
cwtl
sbb
inc
outsl
sbb
je
inc
jge
out
je
rolb
xchg
nop
pop
int
adc
pop
in
jo
xchg
shll
divb
sub
cmp
enter
or
loopne
jl
imulb
call
out
and
in
out
cmp
add
jbe
es
scas
cmpsb
jno
push
mov
or
xchg
imul
adc
push
repnz
int
fbld
iret
adc
les
shll
xor
mov
cmp
icebp
dec
inc
lods
stos
lret
aam
cmp
int3
lahf
xor
lea
mov
pop
std
inc
mov
jg
insl
rorb
add
pop
popf
rorb
cs
inc
add
sti
cmpsl
int3
dec
push
push
sbb
insb
inc
cltd
into
aaa
addr16
xchg
outsl
aaa
cmp
ss
jge,pn
out
mov
jbe
sbb
pop
adc
gs
jnp
mov
bound
daa
push
insl
jb
test
sub
cmc
bswap
aad
ss
out
arpl
sarl
inc
lock
std
inc
adc
ret
mov
inc
fcomps
daa
shll
and
jb
mov
nop
in
je
push
adc
fwait
xor
xchg
je
fildl
mull
imul
mov
jno
les
enter
scas
sbb
lret
std
repnz
cmpsb
pusha
inc
test
mov
jns
xchg
ds
out
shlb
cmpsl
icebp
push
xchg
ja
cwtl
inc
xchg
imul
leave
ja
repz
inc
icebp
xchg
add
xor
in
fsub
inc
dec
mov
or
lds
nop
ljmp
ret
adc
sub
fwait
push
test
inc
aas
ljmp
pop
es
dec
pop
shr
cltd
mov
sub
jne
fwait
dec
mov
loope
push
dec
dec
pop
push
outsl
jbe
in
xorb
adc
pop
push
ja
sbb
fldcw
xchg
rcrl
bound
xor
movsb
cs
mov
lcall
adc
repnz
test
xchg
hlt
adc
lahf
push
and
or
int3
mov
inc
jns
sahf
leave
aam
push
mov
xchg
or
in
dec
cs
and
cmpsb
pop
imul
pop
mov
stc
inc
imul
testl
cmp
and
lods
mov
mov
cmp
stc
test
sbb
fistl
jmp
add
daa
xchg
cltd
and
or
mov
or
pminsw
icebp
imul
movsl
hlt
out
adc
add
sbb
fldt
call
pop
inc
arpl
adcl
jge
inc
jle
outsb
in
cld
jns
cmp
cmp
fs
or
fwait
mov
xor
daa
push
jmp
xchg
pop
mov
out
jae
mov
lahf
cmpsl
mov
mov
scas
fidivrs
and
mov
push
xchg
inc
arpl
adc
pop
aaa
dec
mov
mov
aas
and
loope
sub
jp
inc
data16
test
push
mov
jno
movb
or
shll
adc
dec
ss
jg
in
jne
lret
data16
xorb
fcoms
jecxz
jns
jbe
lret
clc
xchg
or
sti
mov
mov
inc
repz
movsl
and
mov
dec
arpl
xor
jmp
inc
inc
push
daa
insb
test
movsl
push
aam
int3
bound
testb
xor
jg
pop
inc
pop
mov
add
push
hlt
ret
bound
sahf
xlat
nop
xchg
lret
jnp
and
add
pop
pop
lds
jg
inc
dec
mov
lods
int3
sub
jno
mov
lods
mov
sti
dec
xchg
in
ss
scas
roll
pop
pop
arpl
xchg
jp
jo
clc
fidivrs
or
sub
outsl
aas
mov
insb
inc
jo
imul
push
loope
icebp
mov
rcll
ljmp
or
lds
inc
sub
sbb
cmp
cs
out
mov
and
ret
cld
ljmp
test
mov
lea
sbb
mov
xor
jecxz
ret
jo
adcl
in
mov
inc
out
test
sbb
mov
or
scas
divl
outsb
push
sbbl
pop
adc
jno
or
lcall
xchg
adcl
xchg
in
or
stc
xor
movsb
aam
adc
cltd
loop
mov
sti
mov
inc
dec
mov
test
push
push
pop
xor
cmp
imul
movsb
adc
test
lods
push
jmp
push
lea
sbb
sbb
lret
sbb
lods
in
hlt
and
push
dec
lods
hlt
sbb
mov
out
sub
push
ret
lcall
or
cmp
repz
fcompl
ja
out
insb
aaa
or
mov
dec
pmuludq
jno
idiv
push
call
test
cltd
insl
add
cwtl
in
dec
in
adc
pop
mov
adc
xor
mov
repz
cltd
pop
lods
adc
pop
or
ja
ret
js
loop
cmc
sbb
out
inc
mov
jp
iret
clc
mov
add
xlat
xchg
xor
add
lods
push
aad
mov
cwtl
adc
push
int
ficoml
ret
nop
sbb
jo
mov
jmp
in
cmpsb
inc
adc
and
shll
jg
jno
mov
adc
adc
inc
xlat
repz
cltd
cmpl
out
xchg
xchg
sbb
push
ss
lcall
outsl
add
sbb
mov
jae
xor
mov
jmp
mov
cmp
pop
cmp
jnp
mov
out
cwtl
and
or
fcoms
xchg
ljmp
es
cltd
stos
jp
cmp
pusha
cmp
sbb
gs
dec
incl
lods
callw
scas
insl
adc
in
lods
inc
add
cmp
pushf
rcl
pushf
jnp
cwtl
push
add
nop
jb
dec
inc
ljmp
fstl
lcall
push
sbb
dec
jmp
aas
push
jle
jmp
outsl
ss
adc
cmpsb
jb
call
mov
adc
xchg
pop
std
in
repz
inc
scas
xor
jmp
mov
push
and
dec
jmp
push
fwait
push
and
insl
lds
xchg
out
data16
sub
jbe
pop
imul
pusha
in
jp
mov
xchg
lds
adc
dec
dec
mov
mov
sub
lret
inc
fs
inc
cltd
out
jnp
into
lret
rol
adc
sbb
push
mov
scas
adc
test
inc
out
stos
roll
or
push
outsl
rcrb
inc
adc
xchg
xor
lock
and
inc
push
scas
les
repz
xor
int
push
into
test
dec
jmp
orl
and
and
dec
push
push
add
mov
loope
inc
dec
addb
pusha
fwait
jno
jp
fs
lods
bound
daa
mov
mov
ljmp
sbb
out
jnp
je
mov
mov
push
ficompl
jns
sbb
mov
mov
dec
in
inc
pop
mov
jbe
push
cmp
lods
xchg
test
out
mov
aad
sub
fnstsw
pop
in
repz
out
or
dec
adc
mov
inc
mov
mov
mov
dec
sbb
in
and
xchg
fldcw
lock
jbe
and
aad
out
jae
mov
nop
call
sbbl
adc
inc
addl
sub
mov
cmpsb
lret
and
imul
fidivl
jl
cltd
mov
fisubrl
mov
mov
shl
adc
pop
sti
mov
mov
aas
lcall
roll
stc
movsl
sub
or
loop
mov
mov
inc
enter
stos
lock
cmp
int
inc
mov
loope
or
mov
push
jge
aam
inc
int3
cltd
jns
fwait
loop
lret
add
dec
test
add
mov
and
shlb
test
inc
aad
push
repz
adc
pop
stos
mov
adc
add
pushf
imul
push
jb
mov
mov
sbb
insl
jnp
int
xlat
inc
xchg
shr
push
cmp
popa
ljmp
rorb
dec
pop
shlb
icebp
lcall
mov
sub
inc
enter
movsb
idivl
frstor
push
fdivl
push
jmp
insb
adc
loopne
sub
daa
jl
jno
push
jl
inc
stos
jnp
xchg
in
mov
lods
dec
xchg
stc
filds
lds
mov
mov
cmp
fmull
subl
pushl
loopne
call
inc
fsubrs
test
lahf
pop
jmp
jno
sub
mov
rorb
sbbl
ja
mov
sbb
ret
jecxz
scas
cmp
xlat
xchg
inc
in
pop
mov
inc
mov
loope
jno
add
lcall
lcall
mov
fmuls
cmp
inc
jp
call
cmp
imul
rorb
mov
test
jp
mov
lods
jo
cmpsl
cltd
mov
pusha
inc
rorb
dec
inc
fimuls
fnstcw
in
pop
jae
test
mov
fsubl
inc
sub
lock
scas
jne
xchg
bound
fldt
push
pushf
jns
adc
negb
fstps
stos
lret
mov
fistpl
into
shr
sbb
dec
leave
push
push
xchg
sti
jmp
jle
in
jle
sub
sarl
mov
call
cmp
mov
mov
bound
mov
push
jge
jno
jnp
pop
push
ret
inc
jl
xchg
xchg
aad
addr16
push
cs
xor
gs
sub
jle
adc
in
sbb
pushf
dec
xor
inc
push
xor
mov
out
xchg
lcall
sbb
jne
loope
fsubrl
mov
leave
xor
call
mov
mov
outsl
popf
pop
xchg
cwtl
jecxz
jl
pop
mov
mov
jg
ficomps
arpl
xchg
shrb
inc
sub
xchg
push
xchg
insb
sub
out
jle
sbb
popf
popa
cwtl
xchg
ljmp
push
mov
pop
sti
dec
sub
xlat
testl
call
mov
inc
jno
repz
sub
in
jge
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
rcrl
sbb
addb
sub
inc
cs
ret
jmp
sbb
mov
mov
inc
mov
lods
sub
mov
test
rcl
mov
in
repnz
mov
in
aam
mov
mov
cmp
or
in
mov
jb
add
mov
jb
test
in
xor
cwtl
mov
dec
neg
inc
mov
dec
dec
pop
ret
xchg
scas
push
mov
mov
jle
cmp
jnp
add
rcll
cs
inc
imul
dec
jg
cmpl
jge
pop
lcall
cmp
pop
jecxz
sub
push
sbb
pushf
aam
leave
pushf
icebp
shll
sbb
clc
mov
ljmp
jmp
daa
dec
mov
into
jns
push
jp
call
es
pop
test
inc
lock
rcrl
cmp
jns
add
imul
je
fwait
push
out
nop
cmpl
cli
sub
mov
pop
inc
jg
je
jnp
mov
addr16
in
sub
in
rclb
dec
add
flds
mov
clc
adc
cmp
xchg
jb
in
orl
sub
test
test
fmull
inc
or
sub
adc
adc
negb
frstor
push
in
jb
and
xor
mov
sbb
lods
andl
add
out
or
js
out
pusha
shlb
xchg
push
insb
mov
add
mov
xchg
and
lret
test
dec
sbb
ror
dec
inc
xor
xor
cmpsb
mov
pushf
mov
mov
xchg
jb
adc
movsl
bound
cmp
je
daa
ret
mov
fcoms
push
popf
mov
je
push
adc
fstpt
movsb
nop
pop
add
arpl
das
mov
sbb
xor
xchg
sub
push
xchg
sbb
das
mov
mov
mov
repz
nop
gs
xor
ret
push
inc
pop
stos
adc
icebp
repnz
mov
lods
sub
sbb
dec
sbb
mov
fadds
cmc
pop
rcrb
push
lods
inc
pop
xor
popa
xchg
dec
jae
fst
or
push
lret
shl
xchg
roll
mov
push
test
xchg
adc
out
jo
or
push
je
rorl
arpl
xchg
iret
mov
shl
dec
outsb
jp
shrl
jp
cltd
xchg
jmp
lods
arpl
js
sub
xor
ret
es
push
negb
out
imul
jle
rorb
jecxz
or
mov
fs
incl
dec
push
lret
std
mov
push
xchg
or
ret
xlat
inc
xor
sbb
adc
or
xchg
mov
cmp
in
xor
and
sar
arpl
inc
dec
sbb
sbb
es
shrl
std
pop
je
mov
into
mov
jmp
pop
loop
lcall
mov
inc
leave
loop
enter
mov
in
jbe
fcompl
xchg
mov
pusha
fistps
nop
or
xchg
mov
jbe
gs
adc
and
push
sbb
stos
pop
movsl
sbb
or
mov
hlt
and
jae
fisubs
inc
inc
adc
lret
or
xchg
xor
dec
jmp
das
pop
mov
add
xchg
inc
out
jae
ja
fucomi
or
loope
jnp
inc
or
dec
enter
jg
aas
nop
sbb
adc
lds
xor
mov
lock
cltd
push
call
test
pop
imul
ret
push
ret
clc
in
stos
insb
xchg
insb
stos
pop
inc
adc
fbstp
mov
jp
fimuls
pop
jnp
add
cwtl
fwait
cmpsb
imul
movsb
decb
imul
mov
rorb
in
sbb
mov
cmc
xchg
out
mov
jl
cmc
lock
xchg
jmp
in
xchg
cmp
ficompl
mov
lret
jl
pop
cwtl
outsl
pop
sbb
mov
inc
jns
pop
std
xchg
mov
cmpsb
loope
popl
mov
aas
arpl
ret
sbb
cmp
mov
cltd
aam
ja
and
lds
sub
mov
mov
shrl
inc
cmpsb
sub
ret
cwtl
bound
mov
cmp
mov
xor
iret
je
or
adc
and
inc
lods
cltd
lret
loop
dec
jb
stos
jp
inc
mov
test
fcom
lock
in
in
dec
jl
repz
mov
cmp
cmp
sbb
or
out
mov
dec
outsl
add
push
xchg
sub
sbb
jne
xor
je
fldl
adc
out
bound
jne
sbb
adc
fwait
cmpsb
mov
icebp
ret
fcoml
sahf
jne
loope
xchg
pop
jae
and
adc
mov
loop
push
scas
ljmp
adc
jns
push
add
push
mov
leave
or
pop
pusha
xor
inc
ljmp
gs
mov
pushf
bnd
test
push
adcb
aaa
mov
cmc
leave
or
inc
mov
cmpsl
rcrb
push
clc
lret
rep
pop
repz
mov
pop
aas
jp
sahf
lock
cltd
and
push
adc
sbb
mov
pop
out
fdivrs
add
sub
sub
out
mov
repnz
dec
and
xlat
and
pop
xchg
pop
sbb
inc
hlt
xorb
cmpb
xor
rcrl
pop
popa
fsubr
clc
cltd
or
jb
sub
mov
and
icebp
idivb
push
inc
lret
mov
jp,pn
rcr
xchg
sub
or
loop
lock
mov
cwtl
xor
dec
mov
out
and
pop
fisubs
pmulhw
iret
and
dec
aas
mov
cmpb
mov
dec
mov
mov
int
cmpsl
decb
scas
es
adc
daa
es
jg
push
clc
pop
cmpsl
stc
adc
test
push
xor
mov
fmulp
xlat
sub
or
xchg
cltd
dec
and
push
jle
lret
aaa
xor
fstps
sub
lds
sub
inc
dec
sbb
xchg
mov
dec
cmpsl
sbb
adc
mov
adc
mov
inc
lock
push
pop
mov
inc
fcoms
add
pop
daa
sbb
and
sbb
frstor
mov
lret
push
sahf
push
cmp
incb
jne
lea
outsl
daa
call
enter
inc
jle
sti
addr16
cmp
mov
mov
mov
sbb
xor
sub
xchg
push
test
cld
mov
fsubs
rorb
sub
push
inc
out
test
add
cmp
bound
addr16
sub
pusha
jp
jns
dec
jo
inc
dec
or
pop
inc
xlat
test
jl
or
jns
popf
hlt
cmpsb
bound
aaa
cltd
add
lock
lea
pop
mov
int
push
repz
aaa
idiv
rcll
aam
xor
push
push
into
aas
jge
mov
sub
or
pop
dec
mov
lcall
andl
lcall
mov
mov
pop
cmpsl
xchg
incb
out
repz
pop
dec
imul
fst
mov
fdiv
fsts
popf
and
aas
call
xchg
out
xchg
test
std
sub
mov
xor
pop
imul
and
clc
shrb
mov
pop
loope
xchg
cmp
fsubrs
in
or
and
adc
cmp
fs
sbb
imull
cltd
mov
pop
scas
rorl
lcall
mov
jmp
push
pop
lret
mov
rcrb
lods
scas
pop
push
push
cwtl
sbb
aam
push
push
scas
mov
stc
imul
dec
push
sub
xlat
or
inc
nop
sub
movsb
pushf
jbe
mov
dec
mov
in
xchg
or
cmp
sub
stos
mov
aas
push
lods
pop
loopne
sub
mov
aam
sbb
int3
push
sbb
test
pop
pop
cmc
pop
adc
mov
inc
and
repz
add
xchg
mov
test
rcl
or
clc
and
fimuls
sbb
sub
imul
xchg
inc
das
mov
stos
lret
out
ret
movb
ds
xchg
pop
mov
xor
flds
adc
xchg
fsubrl
xor
insl
jmp
push
dec
xchg
loop
pop
call
jns
daa
lea
cmp
mov
push
cld
aaa
rolb
arpl
imulb
fcmovnu
add
flds
outsl
add
mov
or
shll
pop
dec
sbbb
add
imul
fdivrs
shlb
iret
mov
jno
push
jo
push
jbe
movsb
cmp
xchg
lahf
int
jae
mov
jle
hlt
xor
js
clc
mov
cmp
mov
jbe
arpl
jae
dec
sub
mov
jp
rol
fcmovnb
jmp
push
or
xchg
cs
mov
movq
sbb
dec
push
in
sahf
shr
notl
cmp
jnp
xchg
scas
adc
inc
fmul
mov
xchg
or
push
xlat
cmpsb
mov
mov
repnz
push
fsubrs
scas
lret
xchg
push
icebp
les
pop
sahf
inc
stos
ret
outsl
lret
push
out
jle
add
xchg
fsubrs
push
mov
aam
push
push
mov
icebp
and
push
mov
int
in
jmp
mov
pop
xlat
jnp
jns
mov
leave
gs
and
or
addr16
cmp
int3
and
arpl
sbb
xchg
jno
cmpsl
imul
test
jbe
pop
fdivrs
stos
sahf
out
cmc
daa
outsb
mov
mov
push
out
inc
out
pop
cli
cwtl
or
add
inc
adc
adc
pop
test
mov
les
pop
movsl
push
jp
inc
pop
imul
xor
mov
sub
cld
mov
mov
push
clc
or
lods
mov
addr16
xchg
and
and
or
mov
rcll
sti
mov
sbb
cmp
or
lcall
lods
sar
ret
cmp
insb
xor
pop
outsb
pop
push
fbstp
mov
pop
sub
test
outsb
mull
insb
mov
add
outsb
cli
outsb
aad
add
notb
aaa
pop
sub
popf
iret
imul
rep
mov
shrl
jne
or
jg
in
in
scas
cmpsb
push
add
push
fildl
mov
fidivrs
in
add
movsl
push
rcl
pop
imul
cmc
push
in
adc
data16
ss
mov
roll
lret
test
xchg
lcall
xchg
fcomps
cmpsl
fwait
mov
adcb
sbb
cmpsb
movsb
pop
pop
cwtl
pop
jecxz
daa
aaa
mov
pusha
sti
add
dec
nop
mov
mov
sbb
pushf
pop
pushf
out
hlt
cmpb
rcl
mov
xchg
cmp
stos
stos
fisubrl
ja
push
mov
shrb
adc
mov
aam
dec
cmp
lcall
xchg
fstl
adc
push
push
adc
icebp
push
push
sub
scas
clc
shr
inc
xor
fs
push
arpl
mov
jno
nop
js
fs
and
xor
jmp
adcb
clc
xor
xchg
ljmp
repnz
push
cmpsb
mov
ficompl
adc
dec
sub
imul
pop
fisttpll
mov
sbb
int3
jno
and
jbe
scas
inc
mov
mov
or
xchg
pop
sub
jge
insl
in
test
push
cmc
and
cltd
inc
test
stc
adcb
pmulhw
sbb
push
popf
xlat
scas
out
adc
mov
std
push
mov
sub
ja
mov
mov
jle
xchg
dec
or
mov
cltd
movsl
aam
jne
ds
imul
clc
and
dec
hlt
movsl
call
push
sub
push
jnp
imul
sbb
je
xor
push
mov
xchg
or
and
std
sub
xorb
mov
jle
lods
sub
in
call
lret
mov
arpl
inc
mov
cld
jmp
lret
pop
gs
mov
ja
scas
cmp
je
pop
mov
lods
push
inc
lea
mov
inc
adc
nop
fisttpll
leave
das
mov
shrl
cli
or
adc
fwait
stc
bound
pop
or
inc
xor
sbb
mov
loopne
out
testl
and
mov
mov
addb
push
jb
fadds
pushf
pop
cmpsl
mov
xor
jp
add
pop
mov
fistl
and
fistps
add
cmp
clc
sub
mov
movsb
pop
stos
inc
loop
imul
mov
push
rcrb
inc
insl
cmp
sub
and
mov
out
pusha
push
ret
or
sti
es
stc
sub
in
inc
mov
enter
or
fisubrl
sub
ja
xorl
arpl
popf
mov
call
and
xchg
ljmp
mov
jle
shrl
sbb
add
pop
lods
lret
aam
push
push
stc
fisubs
inc
xlat
or
and
jl
lcall
jo
or
scas
xchg
enter
leave
add
testl
sbb
dec
out
inc
jle
mov
sbb
cwtl
pop
dec
ljmp
sub
scas
repz
mov
icebp
fmul
pop
pusha
push
jecxz
sub
popf
stos
int
ret
inc
sbb
push
repz
pop
mov
xor
cltd
es
negb
cmpsb
push
jecxz
data16
mov
lock
pusha
outsb
scas
mov
add
and
test
jle
push
ss
shlb
xchg
inc
js
testl
add
xorb
mov
push
mov
push
pushf
xlat
mov
addr16
clc
ja
sahf
int3
jmp
push
sub
clc
sbb
xchg
mov
sbb
adc
out
cmpsb
push
mov
insl
rcl
sub
cmp
shlb
dec
xor
addr16
mov
xchg
imul
data16
pusha
lahf
mov
jb
adcl
lahf
hlt
jp
rcrl
clc
dec
sbb
mov
and
dec
xchg
lods
sub
push
ljmp
inc
movsl
movsb
ljmp
xorb
lahf
in
in
in
in
sbb
dec
jge
bound
xchg
and
xchg
icebp
mov
pusha
sub
sbb
jge
clc
imull
xor
lods
mov
push
pop
adc
lcall
aad
lods
ljmp
jp
insl
or
jns
cmpb
mov
mov
lds
push
sbb
int3
loopne
pusha
xchg
test
fdivs
mov
mov
jg
pushf
adc
mov
scas
mov
inc
leave
or
and
push
add
ja
fists
in
push
fisubrs
pop
sub
dec
pop
adcl
stc
mov
imul
pusha
jbe
push
dec
cmp
push
dec
dec
iret
push
jne
fisubrs
inc
inc
rolb
jae
xor
rorb
mov
insl
xor
add
xor
inc
inc
daa
cmp
repnz
mov
cmp
imul
fadds
push
or
dec
out
and
sub
dec
addb
sub
out
mov
ficompl
lret
stos
xor
jbe
or
lret
cmp
popa
ror
scas
dec
mov
fiadds
pop
cltd
inc
pop
dec
movntps
fldenv
push
jo
sbb
fsubrl
aam
cmc
jno
or
popf
unpcklps
mov
add
cmpsb
cmpsl
lcall
cmc
fsubrs
dec
leave
sub
pushf
dec
inc
cltd
clc
push
rcrl
or
sub
xchg
cli
pusha
pop
scas
inc
into
push
dec
mov
inc
repz
sub
push
insl
xor
mov
in
mov
movsl
cs
mov
cmp
mov
wrmsr
lock
daa
fcomp
inc
cmp
leave
push
mov
sarl
out
aas
push
lcall
mov
push
pop
cmp
cmp
xchg
cld
inc
pop
pop
adc
xlat
add
adc
jmp
dec
xor
add
inc
jmp
call
call
popf
pop
js
ja
add
jg
xor
cs
inc
enter
in
popf
imul
repz
push
xchg
xchg
lret
sbb
lock
gs
cmpsl
daa
mov
adc
mov
mov
lcall
call
mov
cmp
push
xlat
aaa
int3
addr16
loope
daa
lret
nop
movsb
pop
push
sbb
xor
xchg
pop
stc
insl
cmp
mov
cwtl
enter
aas
into
and
jg
cmp
test
gs
mov
iret
pop
fwait
xchg
jb
fdiv
out
divl
dec
inc
push
pop
repnz
xor
cs
cltd
dec
imul
imul
mov
sbb
push
movb
mov
pop
push
mov
xor
mov
lock
mov
inc
movsl
and
mov
adc
out
xchg
std
pop
int
jno
gs
pop
inc
xchg
inc
push
adc
fs
jg
jl
in
jg
mov
cld
js
imul
xor
push
xor
xchg
mov
popa
mov
aam
or
inc
lcall
push
rcll
wrmsr
ljmp
jge
mov
mov
mov
fdivs
sub
sub
fisubrl
scas
push
dec
or
adc
insl
pop
addr16
sbb
mov
leave
out
inc
push
sub
int
fcoms
stc
aam
xlat
scas
mov
fwait
jb
mov
ss
dec
divb
mov
dec
scas
push
mov
adc
mov
ds
jmp
insl
movsb
xchg
sbb
jmp
pop
cmc
ret
loopne
sbb
imul
push
mov
daa
out
jg
jp
push
je
sub
lock
mov
mov
sub
les
dec
pop
adc
push
jecxz
shll
cltd
inc
popa
or
pop
cmc
lods
jle
sub
stc
jb
sbb
xor
out
push
jecxz
xor
jecxz
xchg
xchg
fimull
dec
pop
fimuls
ret
cld
fcmove
adc
test
sbb
mov
jg
outsl
gs
sti
pop
in
xchg
adc
xchg
sub
xor
jno
inc
xor
test
or
push
sti
imul
sub
lods
mov
test
xchg
test
lcall
lret
mov
inc
test
cltd
sbb
js
fsubr
nop
jne
enterw
fstl
dec
roll
mov
or
int3
push
loopne
rorl
mov
repnz
sub
xor
adc
push
mov
mov
pop
fsubp
ret
in
out
out
idivl
pop
jae
or
push
lret
mulb
jmp
push
pop
jno
outsb
stc
cmpsl
stc
pop
lret
pop
sbb
repnz
push
sub
ljmp
push
xchg
negb
sub
out
push
cltd
mov
clc
movsl
andb
jmp
in
mov
mov
pop
das
ja
out
mov
shrl
cmp
lods
scas
std
cs
cli
cltd
mov
les
jb
xchg
mov
mov
bound
cmc
push
fdivrs
add
mov
loopne
xchg
aad
shlb
jns
lods
add
aaa
stc
fmull
sbb
mov
inc
jecxz
mov
loop
mov
push
cli
out
jo
mov
xchg
push
pop
cmp
jno
ljmp
iret
hlt
push
cmc
out
dec
pop
mov
pop
test
cmp
sbb
push
mov
sbb
pop
adc
jb
add
test
jno
and
nop
push
xchg
sti
fidivrs
inc
rorl
mov
dec
addr16
bound
and
in
jge
sbb
jp
sub
mov
and
or
jecxz
pop
or
push
jae
lods
pop
lcall
andnps
es
ds
jnp
inc
dec
fs
inc
out
push
xchg
dec
sub
shl
sbb
or
push
lret
dec
xchg
mov
fnstsw
xor
add
aas
hlt
cmp
lock
pop
fisubl
jge
or
mov
lret
mov
nop
cmp
lcall
fidivrl
lods
out
mov
sbb
test
xchg
dec
jns
pop
insl
push
xchg
fcoml
loope
xchg
pop
mov
cmp
sbb
xor
insl
mov
shl
mov
scas
xchg
sbb
push
mov
inc
adc
push
cmp
pusha
sub
fnstcw
lds
xor
xor
cmpsl
cld
jecxz
js
inc
out
mov
xlat
std
es
fcoml
test
sti
fmull
xor
sbbb
adc
jnp
popa
push
add
mov
xchg
dec
mov
or
sbb
sti
adcb
pop
jno
sbbl
loop
mov
jne
fiaddl
sbb
mov
fstl
aam
mov
rolb
jle
sti
ror
fcmovnbe
cmc
xchg
out
je
or
sbbl
xchg
shrl
into
cmpsl
xor
lods
fildl
pop
imul
ljmp
sub
push
cmp
xor
out
das
decl
push
inc
test
xacquire
aas
nop
pop
push
mov
xchg
sub
dec
xor
push
cmpsl
ja
cmp
xchg
adc
rcrb
insl
cmp
out
xchg
jg
cmc
xor
sub
push
pop
subb
jl
repnz
or
jecxz
inc
mov
test
bnd
xor
ja
scas
les
cmp
jnp
inc
mov
fisubs
ret
subb
cmp
pop
inc
stos
jb
sub
int3
jo
push
dec
push
and
sub
xor
xor
pop
fs
pop
xor
fisubrs
icebp
out
stos
add
mov
sbb
xor
or
scas
hlt
dec
or
mov
fstl
popa
inc
mov
adc
insb
inc
iret
mov
inc
or
mov
pop
and
popa
in
int
push
dec
popf
dec
fistpl
test
mov
jns
cmc
inc
fs
sub
loope
rcl
gs
repnz
xor
pop
es
imul
cwtl
fidivl
jle
hlt
xchg
popf
add
jmp
xchg
mov
jbe
aaa
notl
loopne
aad
sbb
icebp
push
stos
icebp
mov
or
xchg
push
dec
xchg
out
cli
jl
jg
xchg
and
pushf
mulb
push
sub
cmc
mov
sub
bound
push
fstpt
fsubl
pop
mull
pop
out
pop
aam
jle
insb
out
cld
ljmp
fwait
mov
xchg
dec
aaa
jae,pt
les
icebp
push
or
in
jg
fdivrs
roll
inc
jo
dec
jp
daa
mov
sbb
scas
adc
jne
xchg
sahf
ljmp
sarb
cmpsb
stos
jmp
pop
pop
lret
ret
repz
dec
cmp
dec
xor
push
cmp
sbb
and
jo
adc
jmp
cwtl
and
or
cmc
sub
sub
repnz
jmp
in
inc
fadd
dec
cmpsb
add
dec
jl
push
and
push
xor
cmp
cmp
xchg
pop
pop
test
popf
mov
cmpsl
sahf
pusha
out
sahf
sub
dec
and
push
xor
push
inc
dec
adcl
fincstp
lock
sub
popa
nop
and
adcb
out
cmp
nop
testl
mov
arpl
or
stos
push
xchg
lea
clc
js
dec
dec
insb
movl
jecxz
leave
cmc
inc
test
pop
daa
sub
inc
sbb
inc
push
xchg
aam
sub
movsl
fiaddl
dec
mov
dec
add
or
push
adc
into
loop
jns
inc
sub
xchg
mov
pushf
inc
bound
push
mov
sub
mov
clc
out
or
cmp
and
lock
test
inc
ljmp
mov
subb
hlt
adc
mov
in
movsl
dec
cmp
mov
shl
dec
dec
sahf
and
in
je
ret
notb
push
push
lahf
outsl
out
out
jp
fisubs
mov
insb
lods
pop
xor
stc
je
push
outsb
adc
dec
or
pushf
fidivs
out
sbb
cs
sbb
xchg
popf
xorb
xor
mov
xchg
jle
pop
dec
sbb
orb
lret
sbb
lods
push
inc
stos
sbb
or
or
shrb
ja
stc
jne
xchg
gs
shl
inc
lret
jo
mov
addr16
in
dec
into
jmp
mov
imul
jge
push
loope
je
jns
jmp
or
dec
sti
outsl
out
ja
and
and
je
xor
pop
fwait
rol
xor
loop
xor
leave
arpl
jl
push
lret
mov
imul
dec
aas
lods
clc
int
lcall
mov
mov
movsl
icebp
in
sbb
cmp
in
daa
mov
insb
js
inc
sbb
loop
mov
cmp
cmp
fs
cmpsb
jnp
bound
pop
mov
das
cmp
inc
bound
call
and
test
push
adc
add
fucom
lods
cmp
movsl
cmp
adc
push
pop
mov
setp
pushf
enter
pop
aad
xchg
aas
mov
push
fidivl
fs
divb
out
jo
xchg
scas
fmuls
test
fldenv
imul
mov
cli
out
clc
test
cmp
jne
scas
shrb
sbb
out
int3
scas
jnp
imul
mov
movsb
leave
sub
fwait
adc
cwtl
shll
lcall
sbb
mull
pop
rolb
lock
mov
or
jle
andb
mov
sbb
imul
and
adc
sbb
aas
je
mov
pusha
xorb
ret
das
adc
jp
scas
mov
xor
xor
push
mov
xchg
xchg
dec
sbb
sbb
jne
cltd
sub
jg
inc
push
cli
jbe,pt
test
push
jbe
cmp
push
dec
fsub
inc
cmpsl
jge
aas
loope
lret
mov
mov
lea
lods
stos
dec
jge
mov
xor
out
or
popa
mov
scas
mov
cli
lds
push
cld
mov
mov
rcrb
jmp
sub
hlt
dec
xchg
jo
mov
push
rcrb
push
mov
mov
adc
sub
xchg
gs
push
inc
out
push
mov
sub
mov
decb
add
popf
push
bound
sahf
mov
jns
cmp
xor
or
nop
xchg
in
and
mov
sahf
jb
sbb
sub
fidivrs
and
enter
adc
shl
mov
push
cmp
mov
gs
sbb
in
into
add
mov
add
dec
inc
dec
mov
enter
jmp
jae
jns
jge
xorl
scas
jo
cmp
jb
pop
movsb
cmpb
subb
push
mov
xchg
movsl
push
cltd
jb
xchg
dec
or
xor
test
pop
pop
in
mov
mov
xorb
popf
cltd
js
dec
sbb
negb
jl
or
inc
jb
ja
mov
cmpsb
out
mov
mov
sbb
jmp
jg
xor
out
xchg
xchg
andl
mov
inc
test
cmc
test
push
lds
in
hlt
mov
mov
dec
xchg
inc
arpl
aas
imul
inc
sub
pop
pushf
mov
mov
les
sbb
xor
xor
add
cmp
iret
or
add
fisttpl
pushf
jecxz
lret
cmp
lret
shlb
xor
lods
lcall
sub
inc
fiadds
cmp
or
outsl
push
push
cmp
dec
cmp
vunpckhps
ficompl
dec
pop
xchg
mov
scas
inc
jnp
adc
jbe
lock
jge
out
les
pop
adc
out
push
dec
in
fidivs
stos
jb
nop
dec
fs
mov
add
loop
inc
mov
inc
jns
mov
pop
dec
mov
pushf
pop
dec
dec
jle
shll
ljmp
call
sahf
js
test
xchg
xlat
mov
pop
in
push
ljmp
nop
loopne
adc
or
inc
lahf
jns
test
mov
cmp
mov
mov
aam
mov
fcoml
ss
sbb
jmp
xchg
insb
mov
sar
lret
inc
cmp
iret
mov
pop
fldl
movsb
shll
mov
mov
mov
push
add
mov
stos
aam
lods
call
mov
push
ja
sub
sahf
xor
jge
xchg
dec
fwait
in
mov
xor
mov
pop
sti
imul
xchg
nop
movsw
inc
or
adc
imul
fstl
andb
sahf
shl
jb
cmp
mov
mov
or
repnz
push
ss
rcll
aas
mov
call
sub
jmp
or
or
sbb
pop
mov
inc
enter
cmpsl
scas
sbb
test
ljmp
sub
add
inc
aas
push
mov
icebp
inc
sub
mov
mov
es
iret
lds
das
xchg
adc
or
mov
repnz
xchg
ss
fcoms
lahf
or
gs
cli
popf
popa
addr16
psrlw
mov
add
push
test
test
jle
lds
jmp
or
loop
and
rcl
inc
push
mov
aam
nop
or
mov
stos
mov
pusha
push
push
in
cld
xchg
push
fwait
pop
add
xchg
lcall
loope
or
inc
test
pop
lret
mov
push
stos
mov
rorb
test
cmp
out
icebp
ret
dec
inc
enter
push
fisubrl
loop
cli
and
add
inc
or
mov
xor
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
pop
and
popf
mov
cmp
cltd
ja
dec
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
