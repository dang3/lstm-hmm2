push
mov
sub
mov
mov
mov
jmp
sarl
lcall
jle
jle
add
into
xlat
cmp
rol
pop
add
push
mov
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
popf
cmpsl
and
call
jns
movsl
pop
loop
and
add
into
pop
loope
cmovnp
jb
mov
in
or
movsl
dec
inc
andl
push
test
subb
jne
bound
push
popa
out
cmp
inc
xchg
adc
add
cwtl
dec
mov
mov
mov
jb
leave
arpl
in
ljmp
mov
push
xor
std
int3
scas
stos
movsl
mov
call
notb
sub
dec
and
fcmovu
push
cltd
in
mov
lods
dec
jo
mov
mov
xchg
push
jne
cwtl
jmp
mov
fstl
mov
sarb
ret
push
cmpsl
outsb
jne
test
add
mov
loopne
adcb
cwtl
xor
loopne
xchg
ss
es
addr16
outsb
push
xchg
jb
dec
mov
fdivs
dec
pop
lcall
pop
pop
xor
outsl
ja
or
into
aas
push
cmp
xor
sbb
and
or
mov
xor
out
mov
mov
mov
sar
aas
ss
cmp
stos
das
pop
js
decl
fadd
dec
add
movl
cmp
jne
or
mov
andl
push
sbb
mov
sbb
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
add
dec
mov
jmp
sub
mov
adc
jmp
or
xor
jno
inc
lds
in
js
lret
jle
add
xor
ljmp
jp
cmp
cmc
out
sub
ja
lock
scas
adc
or
insb
lret
rcl
cld
enter
aas
testb
imul
xchg
aam
sub
inc
lock
mov
mov
and
lea
mov
fidivs
ret
nop
ret
aaa
pop
xchg
cwtl
popf
sbb
cmp
aaa
sub
add
push
lretw
out
repz
sbb
inc
mov
cmpl
and
sahf
outsb
mov
addr16
push
test
ror
loopne
and
adc
cmp
cmp
mov
adc
lods
insb
xor
fbld
adc
mov
fidivs
aad
push
or
mov
push
jp
lea
push
imul
cmp
jge
ret
stc
push
jnp
cwtl
stc
ds
ljmp
xchg
push
imul
lea
sbb
jbe
sub
mov
mov
and
mov
rcrl
pop
insl
xchg
cmp
inc
fstpt
or
or
cmc
insl
push
sbbb
in
adc
inc
dec
mov
mov
xor
pop
lock
popf
sbb
jbe
xor
cmp
data16
cld
mov
gs
xchg
scas
js
adc
fwait
inc
xchg
cld
repz
pop
sub
adc
mov
test
dec
pop
mov
sarb
jnp
push
sub
pop
inc
rol
les
ret
pop
jmp
in
lcall
push
pmuludq
fpatan
fmull
jl
jmp
inc
mov
cmpsb
sub
jp
sub
scas
rcrl
filds
push
mov
sti
xchg
enter
cmp
add
mov
add
add
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzwl
sub
mov
movzwl
not
addl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
or
mov
sub
mov
mov
push
xor
or
xor
mov
orl
movzwl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
dec
mov
or
mov
movl
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
movl
xor
or
sub
mov
xorl
mov
movzwl
xor
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
jmp
push
rcrb
popa
mov
xchg
xchg
hlt
add
adc
jle
jl
jle
sub
insl
xchg
icebp
popa
lahf
adcl
cmpsl
or
mov
jl
add
cld
push
jp
sub
outsb
push
add
cmp
xchg
daa
mov
cli
dec
xor
sub
inc
mov
out
stos
loop
loope
arpl
aad
into
cmp
test
ficomps
test
xchg
or
iret
das
insb
mov
fnsave
xchg
inc
hlt
daa
jo
mov
into
cmc
dec
lahf
add
or
gs
pop
scas
xchg
in
jns
adc
insb
cvtps2pi
push
mov
xchg
je
loope
inc
pop
jl
adc
shrb
xor
daa
add
or
dec
mulb
pop
jl
js
dec
xor
arpl
loopne
notb
sub
and
jb
jne
js
lods
jl
sarl
cmpsb
xchg
xor
pushf
sbb
fcmove
lcall
mov
jnp
nop
aas
mov
test
push
imul
iret
fistpl
lret
xchg
cmp
jmp
cmp
mov
pop
outsl
or
scas
inc
mov
push
xor
mov
rorl
movsb
pop
aam
inc
pop
ret
js
test
fsts
aas
add
je
sub
adc
jb
imul
cmp
faddl
pop
daa
std
pusha
mov
loop
sar
pop
adc
sub
sar
inc
ljmp
pop
add
popf
lret
xchg
and
xchg
xchg
fnstenv
xor
jbe
scas
scas
cld
aas
pushf
js
in
jb
shrl
shrl
add
data16
jg
cmp
jnp
insb
mov
in
xchg
inc
addr16
ret
sar
pushf
sub
mov
sub
push
xchg
inc
test
leave
sahf
inc
adc
outsl
rcrl
fidivs
insl
movsl
pushaw
daa
mov
cli
dec
mov
jmp
f2xm1
addr16
ja
icebp
jo
mov
inc
jle
js
jle
jl
jle
mov
or
test
add
push
lcall
dec
mov
xor
xchg
jle
or
push
test
fs
mov
insb
jne
inc
loopne
lcall
xor
sbb
std
in
or
xchg
mov
add
loopne
std
xchg
fisttpl
pop
and
insl
sub
idiv
sbb
sti
and
popa
dec
cs
dec
jl
clc
jmp
fdivrl
or
jecxz
loop
jns
mov
pop
mov
leave
inc
xor
mov
and
mov
outsl
lods
xchg
add
mov
rep
jno
lock
out
inc
aam
ret
mov
fwait
clc
fsubr
pop
scas
loop
jns
mov
xor
je
jae
push
ss
jbe
sub
ss
adc
fstps
dec
mov
cmp
sarb
test
rcrl
aaa
cmpsl
ss
cmp
add
sti
call
pop
push
rolb
daa
fidivrl
dec
adc
jg
push
pop
mov
in
sbb
js
ret
sahf
enter
inc
mov
jl
inc
xchg
lods
ss
lea
jne
lods
mov
adc
adc
cmpsl
adc
sbb
sub
cs
and
sub
jbe
movsb
mov
pusha
mov
cmp
jge
adc
les
les
stos
xchg
scas
mov
subl
rolb
movsl
adc
mov
jecxz
add
dec
jle
repz
pop
out
into
inc
aam
int
test
add
inc
sub
adc
mov
cld
scas
mov
sahf
dec
nop
sub
popa
ljmp
xor
inc
aas
lds
lds
and
arpl
notl
lret
inc
pop
ret
mov
or
cmp
jmp
js
sub
mov
dec
lds
add
adcb
or
inc
cmpsb
test
test
and
icebp
or
std
in
mov
pop
lock
push
mov
cmpsl
aam
mov
mov
enter
in
popw
jmp
aad
inc
mov
es
fldcw
adc
into
dec
in
pop
in
lock
mov
in
or
xchg
inc
js
iret
pop
rolb
mov
mov
lret
cmp
push
adc
imul
add
orl
test
test
mov
popf
clc
push
ror
push
fisubs
loopne,pt
or
mov
lock
stc
mov
lods
xlat
inc
push
jne
mov
imul
dec
xchg
dec
pop
mov
popaw
sub
lods
mov
and
pusha
lds
mov
fsubl
mov
jl
testl
shrb
in
adc
lret
mov
push
and
and
push
or
push
int3
sbb
inc
aam
lods
xchg
icebp
jmp
jecxz
in
add
adc
inc
gs
lea
fsts
outsl
call
pop
cmp
adc
pop
cmp
jmp
cmpsl
icebp
add
inc
pop
sub
and
jp
cli
lods
stos
dec
mov
cli
movsb
jp
aad
mov
jne
and
jns
ret
cmp
xor
test
imul
shr
rcrb
int
pop
jae
rorb
add
pop
popf
adc
rcl
in
out
mov
shll
cli
and
stos
subl
cmp
mov
mov
jnp
rcr
xlat
pop
icebp
imul
repz
jne
aaa
jmp
cli
dec
jmp
icebp
sahf
enter
iret
stc
adc
cmp
push
popf
jbe
lret
inc
les
mov
mov
dec
mov
aaa
loopne
insb
cmpsl
pop
repz
sti
cld
daa
je
mov
jmp
std
jecxz
es
popa
popf
popa
push
out
inc
inc
adc
cmp
jle
jl
jle
sub
std
shlb
cmp
pop
pop
repz
inc
stos
orl
or
das
add
jbe
xchg
aam
mov
or
cmp
pushf
mov
aas
les
jecxz
enter
pusha
in
add
data16
xchg
inc
jbe
lods
fbld
repnz
int3
sbb
push
loop
cmp
repnz
jne
push
dec
decl
pop
out
xorb
jnp
cmp
data16
sbb
in
adc
cmp
test
pop
shrb
cmc
pop
ss
adc
xor
jb
aam
mov
mov
in
lahf
testl
inc
jge
dec
ja
jb
or
cmp
xchg
inc
imul
notb
pop
data16
cmpl
lds
out
cmp
fsubl
jnp
mov
mov
sbb
lret
roll
mov
xor
sub
jge
icebp
les
sbb
je
movsl
xchg
xor
mov
aas
loopne
fwait
std
std
mov
lret
cmp
mov
sahf
jnp
fbstp
stos
dec
sub
sub
pop
inc
mov
daa
push
rcll
das
mov
clts
fcmovnu
xchg
ret
dec
cmc
mov
sahf
ficoms
push
pop
stc
mov
push
and
xchg
push
xor
pop
sbb
ret
out
sbb
adc
out
cmp
rcl
cmp
lods
lods
sarb
loopne
and
outsl
or
cmp
dec
adc
movsl
stos
and
fwait
dec
adc
mov
sbbl
cmpsb
xor
lods
fisttpl
or
les
adc
jmp
add
push
mov
test
sub
push
sub
shrb
mov
rolb
es
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
xor
xor
sub
push
addl
jmp
cmp
push
imul
jle
fnstsw
mov
out
jmp
aaa
push
adc
cltd
out
sbb
xchg
test
push
fcoms
mov
fucompp
repz
push
data16
icebp
movsl
jnp
push
gs
xor
inc
mov
sub
xorb
xchg
cmp
lock
cmpsl
adc
adc
rorl
stos
xchg
rol
aas
push
xchg
fldenv
xchg
sbb
xchg
jp
out
loop
pop
sbb
cmc
mov
mov
shl
or
shrl
lret
popf
and
lret
jp
and
iret
xor
shll
iret
cmp
cs
jp
dec
jg
sub
or
pop
rclb
or
es
jo
pop
repnz
fidivrs
movsb
xor
mov
pop
dec
ret
aam
aaa
lea
push
xor
sub
cmp
pop
xor
loope
aam
aam
shll
dec
adc
sbb
int
cmp
cmp
daa
jmp
lret
call
loopne
jns
sbb
inc
mov
addr16
icebp
fs
scas
mov
fisubrl
mov
or
xlat
add
jne
pop
js
xorl
aaa
psadbw
pop
pop
sub
popf
imul
adc
je
popf
mov
mov
add
mov
aas
das
fs
jne
jl
mov
jmpw
mov
pushf
fidivs
jbe
imul
outsb
cmp
jb
pop
add
and
dec
mov
inc
jno
sub
xor
inc
ljmp
jne
add
sbb
xchg
aad
aaa
enter
js
cld
or
lahf
jp
add
lret
pushf
js
push
cmc
vmread
sub
ss
sahf
mov
mov
loopne
and
inc
jnp
gs
mov
sti
dec
stos
adc
lret
fistl
aad
imul
jb
and
clc
push
enter
adc
clc
sbbl
int
shr
push
mov
pop
push
push
xor
pop
shlb
fcmovb
call
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
movl
jmp
inc
testl
xchg
or
lds
jl
jle
or
jmp
test
in
mov
sahf
repnz
fidivrs
pop
inc
mov
scas
in
ficompl
aaa
aas
fs
pop
pop
adc
scas
add
xchg
std
inc
lcall
lret
sbb
sub
popf
cmc
out
mov
adc
pop
jp
stos
outsb
mov
inc
cmpsb
sbb
add
add
cmpl
insl
and
dec
lcall
sub
std
and
out
test
fs
xchg
dec
test
gs
mov
cmpsb
dec
lods
loopne
test
loopne
out
daa
stos
mov
adc
jmp
sbb
push
xor
cmpsl
pusha
jbe
sarb
adcb
xor
popa
pop
and
cwtl
or
sub
andb
fsubrl
add
andb
test
mov
add
pop
adc
shlb
ret
push
into
sarb
push
mov
jo
cltd
fisubrs
adc
inc
add
dec
xor
ficoms
stos
lock
adc
and
lock
nop
xchg
pop
mov
popf
rcr
scas
and
inc
rcrl
add
mov
movsl
data16
jg
push
xchg
and
insb
repz
xor
jecxz
push
imul
mov
pop
idivl
xor
xor
insl
addb
push
out
enter
sarb
xor
mov
or
pop
jae
das
dec
sub
pop
xchg
mov
xchg
call
aaa
cwtl
clc
cmp
dec
add
pop
sbb
lock
mov
pushf
cltd
add
jmp
dec
hlt
jnp
jnp
add
or
mov
xor
int
xchg
xor
frstor
mov
xor
adc
jmp
or
scas
pop
sbb
in
insl
lret
cltd
aaa
inc
and
and
fildl
lock
mov
fstpt
imul
inc
pop
sbb
sub
cmpsl
mov
sahf
inc
ljmp
fcomi
repz
loopne
ror
out
adc
inc
xchg
clc
mov
sbb
adc
mov
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
jmp
and
push
xchg
cs
mov
insl
movsb
sahf
cmp
daa
adc
fnstsw
ja
notb
cltd
ljmp
adc
lret
pop
lcall
fimuls
fstpt
scas
dec
xor
sarb
mov
push
ret
adc
lock
rorl
sub
ret
pusha
adc
hlt
mov
push
nop
into
cmp
enter
cmpsb
gs
test
xor
push
movsb
enter
mov
adc
push
repz
push
enter
outsl
nop
cmp
aam
addb
pop
sub
adc
and
xor
lods
lods
mov
loop
push
imul
push
jns
inc
inc
mov
mov
adc
test
stos
lcall
mov
inc
data16
icebp
dec
add
das
ret
push
popa
icebp
dec
movsl
mov
aaa
cmp
pop
outsb
and
pushf
leave
bound
stos
inc
cmp
arpl
rcll
enter
call
sbb
mov
push
sub
pop
shll
addr16
testb
jbe
in
loope
inc
sbb
sub
out
out
popa
fisubs
inc
jg
xor
pop
cmp
daa
nop
les
hlt
sbb
leave
adc
mov
xchg
mov
cmpsb
testl
fwait
inc
sbb
sbb
cmpsb
jle
mov
fwait
ljmp
adc
out
das
dec
stos
fwait
lcall
sub
inc
inc
mov
test
push
scas
xchg
and
pop
arpl
jae
pop
out
cmp
mov
add
std
out
daa
filds
xor
inc
mov
pop
pusha
out
mov
sbbb
test
mov
out
cmp
jecxz
and
sub
cmpsb
push
cmpsb
das
js
daa
sub
mov
or
cwtl
adc
clc
mov
cmp
xor
jp
and
test
scas
lods
in
je
xor
mov
imul
in
test
sbb
mov
dec
dec
ljmp
mov
inc
je
dec
nop
iret
mov
pop
out
dec
cli
jecxz
or
xor
sub
test
inc
jecxz
mov
sub
cs
jno
sub
mov
in
mov
xor
mov
sub
add
xor
add
jmp
jl
fsubl
sbb
aas
cmpsl
mov
out
repz
jle
loopne
ret
push
outsb
movsl
adc
aam
insb
aad
jbe
adc
hlt
lea
stos
inc
push
idivb
pop
add
pop
imul
push
test
sar
mov
lcall
sbb
xor
into
in
shll
jne
or
sub
dec
and
lret
sub
mov
push
jb
test
out
ja
sbb
add
cmp
adc
adc
ss
mov
mov
and
cmp
ret
xor
ja
loope
push
cmp
sbb
rcrb
mov
add
dec
ss
push
jp
mov
cld
sub
cld
scas
mov
fcompl
pop
in
js
sub
in
mov
jae
ja
mov
roll
out
xor
into
mov
testl
dec
call
jle
aas
arpl
mov
xor
mov
fldl
sub
jo
push
mov
rclb
or
sbb
cmpb
frstor
push
pop
cmp
xchg
cltd
and
mov
mov
imul
inc
sahf
enter
sbb
dec
sbb
push
lret
mov
fldt
xchg
jns
mov
stos
pop
xchg
or
add
fdivrs
aaa
fcmovu
dec
xor
jmp
sub
mov
fsub
gs
push
mov
or
nop
in
das
adc
mov
jns
ljmp
dec
sahf
sub
js
cwtl
ljmp
cltd
or
mov
xchg
sbb
clc
imul
nop
cmp
adcl
mov
addr16
mov
sub
xchg
cmp
fistl
cli
cmp
pop
xorl
push
pop
call
imul
xchg
fld
pushf
push
and
in
add
xor
mov
ss
and
or
sbb
inc
leave
cld
nop
mov
pop
imul
sub
pushf
sub
cmc
das
pop
push
cmpsb
xchg
mov
lret
fisubl
lcall
cmp
imull
sbb
lods
mov
add
xor
inc
dec
mov
je
stc
sbb
xlat
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
and
mov
movl
xor
mov
orl
add
not
movzwl
mov
or
movb
movzwl
adc
jmp
popa
test
mov
sub
addr16
aas
pushf
mov
pop
jl
jle
mov
mov
rclb
cli
xchg
imul
pop
mov
loope
inc
jl
pop
adc
sub
stos
test
push
hlt
insl
xor
iret
negb
cmp
aas
loopne
insl
pop
inc
add
sbb
pop
insl
cli
add
sbb
inc
test
and
jno
cmp
and
sub
xor
icebp
ja
lods
in
daa
scas
ret
mov
dec
jo
test
push
dec
xchg
cwtl
mov
mov
or
mov
mov
push
xchg
imul
xchg
das
inc
or
pop
stos
aas
insl
pop
shr
xchg
movsl
lret
pop
shll
xchg
addb
je
fsubrp
or
fwait
mov
xchg
adc
out
dec
xor
imul
cmp
add
xor
fldcw
rorl
xchg
shrb
add
mov
and
out
and
or
shll
arpl
jl
leave
xlat
xor
arpl
jmp
xchg
sbb
add
pop
dec
lret
adc
popf
xchg
or
bound
sti
ds
stc
shrb
movsb
out
mov
jl
imul
xor
ljmp
inc
ljmp
inc
xchg
pop
xor
leave
aas
mov
leave
cmp
aaa
xchg
jge
jmp
mov
cltd
pop
lret
fstpl
or
cmp
dec
mov
aad
addb
pop
test
inc
lds
push
icebp
ds
mov
push
int
push
lahf
dec
push
sub
dec
jnp
shl
mov
or
xor
xchg
mov
insb
fsubrs
loop
nop
inc
jp
push
dec
xor
adcl
mov
sbb
addl
mov
cld
cmp
mov
sub
inc
incl
sbb
sti
pop
push
hlt
cld
adc
adc
push
daa
inc
dec
fcomps
adc
aas
rcr
or
sahf
xchg
sti
stos
inc
ss
iret
jl
or
pop
mov
mov
hlt
push
sub
leave
int
add
push
pop
dec
mov
imul
xchg
das
xor
imul
mov
mov
sub
and
fnstcw
cltd
jb
push
xchg
arpl
add
pop
bound
loopne
scas
gs
push
paddusw
in
faddl
stc
fnsave
ret
sub
add
lods
sahf
push
cmp
in
dec
ret
mov
in
cmp
rolb
mov
pushf
pop
jb
lret
mov
dec
jge
mov
mov
mov
ja
adc
or
pop
int3
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
negl
mov
xor
jmp
sbb
sarb
repnz
jns
inc
xor
mov
jl
jle
push
sti
push
imul
scas
push
mov
push
fmull
shlb
dec
sbb
addb
or
mov
xor
movsl
out
subb
inc
cli
mov
push
filds
cmp
inc
comiss
movsb
cmp
repnz
xchg
rclb
or
loopne
xchg
ja
sbb
mov
imul
aam
xchg
fmuls
mov
cmpsl
cmpsl
inc
push
repz
xchg
cld
xchg
jmp
pop
mov
and
adc
shll
xchg
xor
int3
pop
pop
xchg
loope
pop
out
pusha
test
fisubl
loopne
pop
testb
push
out
add
jp
ja
ss
or
stos
hlt
scas
ret
sbb
test
push
enter
push
push
sbb
inc
rcrb
inc
xchg
ljmp
mov
mov
in
mov
mov
test
mov
mov
cltd
mov
rolb
xor
js
pop
hlt
inc
into
adc
rcrl
fisubs
loopne
pop
lahf
jmp
adc
rcrl
push
incl
shll
int
rcll
mov
mov
cmp
js
loop
mov
jbe
int3
mov
cmp
or
fiaddl
in
pop
mov
or
xor
push
or
cmp
inc
jg
pop
adc
jmp
insl
pop
dec
push
fmuls
jns
fiadds
gs
ss
imul
and
jecxz
outsb
popl
cmp
loopne
jmp
sub
sub
inc
idiv
decb
push
les
xorl
inc
dec
pop
adc
cmpsb
jo
cld
dec
or
das
ret
jle
mov
jmp
pop
pop
adcl
sub
scas
mov
je
addr16
lods
repz
jno
movsb
sub
fimuls
shll
lahf
cs
or
ja
push
cld
scas
push
movsl
mov
lock
xlat
lods
imul
sbb
lds
fnstsw
out
cmc
adc
xchg
pop
bnd
lret
xchg
fwait
xchg
push
scas
add
xor
test
cmp
push
sbb
lods
jne
lahf
rclb
mov
shlb
mov
cld
sbb
mov
cld
pusha
dec
push
jmp
xorb
mov
fistpl
in
in
sub
add
adc
or
mov
call
hlt
outsb
mov
cmp
inc
mov
loope
jecxz
aaa
repnz
sbb
ficomps
pop
into
repz
lcall
aam
add
pop
repz
cld
xlat
adc
push
arpl
ljmp
cwtl
test
sub
mov
movl
movl
xor
or
adc
mov
not
mov
adcl
push
add
xor
mov
movl
add
movl
jmp
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
mov
xor
addl
add
cmp
je
adcl
push
inc
push
mov
mov
sub
add
mov
andl
mov
xor
movzwl
xor
mov
mov
orl
add
addl
movzwl
sbbl
mov
and
mov
sbbl
movzwl
xor
decl
add
mov
mov
jmp
xchg
sbb
icebp
adc
mov
mov
jl
jle
stos
and
xchg
dec
and
cmp
xchg
std
movsl
mov
mov
ljmp
push
call
pop
dec
jo
popa
sbb
inc
fwait
jae
movsl
sbb
or
mov
enter
jnp
or
xchg
cmpsl
inc
sbb
cltd
xor
push
lret
icebp
xor
fisubrs
or
or
xchg
ficoml
mov
rcr
int3
ret
add
stos
or
inc
jo
scas
call
inc
ljmp
lock
es
dec
mov
rcrl
push
inc
adc
hlt
das
dec
jle,pn
cmp
jg
ss
movsl
fisttpll
mov
lahf
mov
push
cs
hlt
xor
fsubrs
add
push
mov
mov
sbb
ret
dec
jae
test
push
mov
and
inc
sbb
mov
loop
cmp
cmp
in
jg
std
pusha
mov
jle
push
popf
or
shrl
mov
cmp
jge
dec
mov
xchg
jbe
xor
pop
cmc
sbb
test
mov
daa
mov
imul
dec
fmull
inc
sbb
scas
mov
in
test
pop
lods
xchg
gs
xor
xor
push
hlt
addr16
push
or
mov
cmpsl
leave
leave
xchg
lret
jl
cmp
mov
mov
lcall
sbb
inc
cmp
out
fsubrl
mov
out
aam
test
sbb
movsl
movsl
mov
aaa
sbb
ret
fs
add
push
hlt
lock
loopne
cmp
mov
pop
dec
xorb
imul
test
out
xchg
std
movsb
lock
adc
pop
lea
jmp
fiaddl
jl
cmpsl
inc
sbb
pop
cmp
xlat
push
aam
adc
adc
cs
roll
out
rcrb
loop
lret
mov
loop
ret
adc
sbb
enter
popl
cmc
pop
fildll
xlat
mov
mov
cmp
into
inc
jmp
push
out
jle
fdivrl
push
dec
and
adc
inc
add
cmp
push
je
fisubrl
jbe
xchg
jbe
roll
enter
push
pop
and
in
cmp
loopne
cmp
xor
cmp
jl
cmp
mov
jmp
rol
rcl
hlt
and
inc
das
aam
negb
inc
imulb
lods
cld
das
add
in
rclb
bound
xor
lret
ds
xor
jae
aam
fwait
cmp
les
ljmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
jmp
pop
arpl
out
xchg
imul
xor
mov
jle
pop
jl
jle
push
inc
push
int3
rcrb
repnz
adc
xor
jbe
push
xchg
sti
cmc
rcl
push
mov
int3
adc
cmp
xchg
in
cmc
mov
dec
mov
frstor
cmpsb
mov
out
out
mov
pop
das
in
es
out
das
jg
ja
dec
push
mov
sti
cmp
jb
dec
xchg
cmp
mov
and
das
icebp
or
cmc
adcb
jns
lret
jne
dec
push
ds
neg
movsl
mov
subl
xchg
mov
pop
mov
loop
xchg
loope
pop
xchg
mov
cli
jnp
mov
xchg
xchg
fcmovnbe
fbld
xchg
aad
test
popa
dec
lock
dec
jbe
mov
scas
adc
stos
std
ja
int3
xor
out
jg
addl
fisttpll
mov
push
cli
mov
rcr
leave
aam
sbb
add
movlps
test
jp
out
sbb
ret
outsl
fbld
mov
inc
mov
sarb
and
ja
movsb
sbb
sub
shll
mov
or
iret
imul
fsubrs
fdivl
push
lret
lret
lcall
mov
sub
fisttpll
xchg
push
xor
push
sub
fwait
jb
dec
ja
in
xchg
mov
inc
pop
loop
mov
adc
ret
xor
jbe
out
andb
xchg
add
dec
mov
sub
mov
test
into
int3
mov
mov
lret
lds
and
dec
mov
shlb
out
mov
jae
leave
sbb
fisttpl
inc
cld
leave
mov
nop
or
aam
sahf
ja
sub
xchg
insl
fnstsw
imul
jns
xchg
sbb
rolb
pop
repnz
and
mov
es
push
mov
jmp
cltd
mov
mov
jecxz
enter
jmp
out
inc
push
mov
cmpsb
xchg
adc
sbb
aas
xor
in
testb
push
mov
ss
add
push
shl
or
dec
out
out
std
pusha
push
pop
jb
fmull
rclb
push
pop
mov
sahf
sahf
and
mov
xor
jno
in
shl
imulb
sub
jo
adc
movsl
mov
int
pop
mov
clc
pop
or
mov
xor
aaa
mov
push
sub
das
or
xchg
push
jmp
cld
cmp
sarl
sub
and
mov
dec
cmp
test
inc
add
inc
adc
adc
lret
pop
push
js
jp
push
jl
dec
lret
mov
or
lret
or
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
jmp
addr16
movsl
insl
jne
in
shl
out
int3
repnz
jle
pop
jl
jle
ss
add
adc
cmp
out
mov
icebp
mov
not
dec
loop
outsl
fwait
notb
adc
push
call
popa
push
ja
adcb
out
pop
sub
dec
js
cmpsb
rol
shl
xchg
stc
xor
sahf
add
push
sub
out
push
bound
lahf
fcoml
and
arpl
cmp
dec
shll
fiaddl
mov
pop
daa
inc
int
into
push
rolb
fistps
das
pop
in
addr16
pop
in
insl
push
mov
xchg
mov
mov
cmp
in
pop
mov
jg
and
shlb
negb
fwait
xor
out
or
les
jb
jg
and
or
xchg
pop
push
pop
addr16
lret
movsl
pop
ret
or
imul
leave
dec
dec
loop
dec
nop
das
mov
stc
test
xor
sbb
dec
in
outsb
mov
shr
inc
cmp
and
aas
xor
adc
lds
cld
pusha
adc
scas
xchg
popl
icebp
out
mov
into
sbb
std
test
divl
aad
push
and
add
popf
xchg
push
adcl
mov
push
bound
cwtl
inc
aas
jo
mov
adc
in
lods
dec
mov
cld
pop
add
jmp
cmp
aas
and
sbb
cmp
shlb
or
add
dec
lods
fstpt
fistpll
cld
mov
jl
adc
xchg
arpl
push
scas
cmpsb
inc
jnp
rcrl
jae
adc
mov
adc
xlat
fnstsw
inc
out
mov
scas
shrl
aas
in
xor
or
stos
add
ja
mov
mov
dec
ja
rcl
or
add
jnp
fadd
pop
int
jecxz
cmp
in
adc
add
xchg
dec
xchg
sub
and
mov
cld
push
lods
scas
jecxz
adc
mov
mov
nop
cwtl
mov
pop
sub
add
bnd
adc
mov
cmp
pop
or
repnz
mov
and
imul
sbb
lds
shr
cmp
jge
movsl
mov
inc
add
adc
push
and
or
cmc
sbb
insb
stos
aam
or
int
mov
push
adc
xor
sub
popf
jecxz
leave
pop
dec
ficompl
imull
cwtl
adc
inc
shrl
iret
xchg
loopne
adc
push
xor
jo
cltd
jbe
cli
lret
clc
mov
mov
or
mov
leave
dec
sub
sub
and
enter
sti
jp
ljmp
lea
mov
incl
jmp
mov
xor
mov
jmp
jnp
ljmp
cmp
aam
sbb
pop
jl
jle
test
dec
mov
add
push
test
out
push
into
outsl
scas
out
ja
loopne
mov
ffree
xor
add
clc
mov
out
sbb
popf
dec
sti
fidivrl
scas
push
andl
dec
fidivs
loope
mov
ss
mov
stc
and
mov
out
push
fstpt
aad
cmpsl
rcrb
push
rclb
xor
xchg
scas
push
bound
mov
test
mov
mov
imul
dec
mov
lods
push
ret
andl
add
cmp
out
stos
fdivrl
aas
fnsave
fsubrp
test
pop
sahf
and
push
divb
movsb
push
ficoml
cs
ret
loop
das
push
jl
int
das
lock
pop
cmp
test
dec
cmpsb
test
mov
test
clc
push
jg
addb
xchg
jg
and
negl
xor
sub
push
cld
cmpsb
into
es
cmp
pop
mov
out
xor
xor
xchg
mov
bound
fadds
add
lretw
fistpl
inc
dec
and
xchg
addr16
gs
dec
push
inc
or
push
add
stc
push
inc
shll
jno
rclb
int3
jo
pusha
cmp
mov
lock
fisttps
cmp
pop
or
and
pop
push
adc
pop
das
fwait
mov
or
sub
mov
popf
adc
testl
jmp
cmp
insl
in
ret
push
fimuls
and
mov
fwait
loop
push
popf
lret
fucomip
lods
repnz
lcall
stc
jns
sbb
rcr
fisttpll
mov
test
das
and
stos
aas
ja
fmuls
stc
mov
and
rorl
lea
xchg
dec
cmp
fstps
jge
sahf
jmp
mov
push
mov
push
js
dec
insb
stos
mov
xchg
aad
into
push
dec
xchg
stc
mov
xor
stos
fimull
mov
and
icebp
ret
push
pop
sbb
lahf
out
and
xchg
xchg
mov
stos
push
insb
enter
aam
scas
cmpl
mov
dec
adc
in
jnp
icebp
mov
fmull
xchg
add
mov
loop
pop
xor
shr
cmp
mov
dec
push
cmp
aaa
pop
jns
dec
lcall
sbb
daa
xor
push
mov
xor
popa
fcomps
add
sti
lds
mov
sub
mov
sub
into
lea
scas
iret
sbb
mov
add
mov
pop
leave
ret
push
mov
push
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
adc
movl
movzwl
xor
mov
sub
push
xor
mov
mov
mov
xor
xor
jmp
fiaddl
imul
mov
xchg
stc
les
jle
dec
jl
jle
fs
add
push
lea
repnz
les
sbb
lock
or
jns
outsl
cltd
mov
pop
clc
dec
xor
or
push
cwtl
out
int
int3
test
adc
dec
cmp
adc
es
adc
mov
cli
mov
xchg
ret
out
andl
pop
loop
movsl
subb
test
inc
dec
arpl
cld
shrb
lret
sub
iret
iret
notb
out
loop
push
insl
insl
stc
scas
mov
data16
inc
xchg
cmpl
shrl
sahf
inc
push
push
imul
sub
jae
xchg
cmp
mov
dec
adc
out
pop
das
jbe
mov
mov
rcll
inc
ja
mov
aaa
inc
push
mov
push
cmp
pop
pop
jns
adc
mov
sti
pop
roll
popa
mov
cmp
adc
cmpsl
mov
sbb
sbb
je
addb
mov
fmuls
ja
mov
inc
lcall
sub
mov
jecxz
cmp
jne
lock
hlt
out
pop
jle
mov
push
inc
scas
cld
push
lcall
inc
or
mov
and
jmp
mov
and
shr
dec
pop
mov
dec
stos
fnstcw
inc
inc
xchg
sub
outsl
xor
ja
aad
cld
lahf
popa
shrl
pusha
or
rcl
addb
adc
prefetch
cmc
movsl
mov
push
testl
push
adc
in
jb
mov
addr16
and
cmp
ss
cmp
push
aad
jge
push
or
mov
xchg
jo
lods
out
les
hlt
jg
aad
jmp
sahf
int3
mov
cs
mov
inc
jb
sub
mov
or
sbb
push
clc
shlb
dec
lods
and
mov
jmp
ss
popf
daa
lods
mov
push
js
vxorps
shrb
fisttps
inc
push
inc
les
sbb
test
push
mov
mov
cli
inc
or
popa
adc
cld
in
je
sub
out
dec
adc
and
in
dec
aam
decb
mov
mov
jecxz
test
test
dec
aaa
rol
adc
stc
pop
mov
std
sub
and
dec
mov
mov
add
sarl
cld
mov
shl
lret
adc
sub
wbinvd
into
or
in
push
pop
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
jmp
rclb
mov
mov
cli
pop
fnsave
repz
jle
jl
jle
adc
push
jae
cmp
sbb
xor
inc
repz
leave
out
shlb
sub
mov
lretw
imulb
andl
mov
and
hlt
mov
scas
cmp
in
sbb
jb
pop
cmpsb
daa
xchg
dec
mov
mov
cs
shl
leave
and
cmc
ret
lock
addr16
adc
mulb
inc
mov
and
cwtl
sbb
shll
addr16
xor
push
mov
cmp
inc
cmp
out
and
imul
ret
mov
sub
pop
dec
arpl
test
hlt
push
loop
jle
jae
loopne
nop
mov
or
mov
test
dec
or
add
lret
lcall
aas
test
xchg
ret
add
and
mov
sub
mov
fcmovnbe
gs
outsl
adc
push
std
mov
mov
std
stos
movsb
lds
cli
jbe
fucomp
xor
mov
xlat
popf
or
aam
sub
inc
dec
push
sub
adc
lret
xchg
sarl
or
dec
jmp
lcall
add
sbb
push
dec
push
jmp
fs
adc
arpl
mov
sub
mov
popa
adc
mov
cmpsl
fwait
and
jbe
int3
mov
xor
aaa
xchg
push
mov
jle
repnz
cmp
adc
inc
adc
dec
movsl
sub
and
jmp
lcall
psrld
inc
mov
or
rclb
mov
or
outsl
add
sbb
pop
pop
pop
mov
xchg
icebp
dec
sub
sahf
dec
add
and
add
dec
adc
dec
bound
aam
jns
mov
fmull
jns
sub
fisttpll
mov
push
fstl
outsb
xor
inc
mov
push
jno
mov
hlt
jbe
lret
dec
push
adc
mov
xor
rol
xchg
inc
push
fiadds
das
outsb
adc
sbb
repz
push
idivl
jl
jmp
movsb
jle
add
out
outsb
imul
movsl
adc
jmp
pop
std
aam
jb
push
dec
cmp
test
ret
std
andb
je
sbb
jb
repz
jnp
pop
push
xor
enter
mov
push
xor
scas
sbb
lret
lcall
call
xor
sbb
enter
push
fnstcw
inc
js
inc
or
inc
cld
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
test
insl
mov
ret
into
inc
adc
jle
lahf
jl
jle
and
pop
test
xlat
mov
pop
add
bound
stc
sahf
xor
add
inc
sbb
mov
inc
mov
jmpw
cmp
fnsave
popl
pop
sbb
mov
pop
movsl
mov
push
mov
and
movsb
lcall
shll
les
call
dec
cmp
push
sub
imul
inc
xchg
pushl
ret
cltd
out
faddl
ret
sbb
or
loop
fdivr
adc
dec
insb
push
pop
loopne
push
lret
mov
mov
mov
nop
faddp
and
scas
outsl
mov
or
movsl
imul
inc
push
daa
adc
pop
fsts
xchg
cmp
inc
and
jns
js
mov
jne
inc
sbb
pop
cmp
xchg
mov
jnp
push
popf
lret
pop
jae
and
lret
adc
lcall
inc
push
sbb
and
fmull
jbe
xor
in
cmp
aas
jo
pop
lcall
mov
addr16
mov
popa
cmpsl
int
jae
ds
ret
out
mov
xchg
out
insb
xor
in
cmp
adc
push
mov
flds
roll
das
out
lds
mov
sti
adc
add
mov
mov
mov
mov
mov
ja
adc
jno
int3
into
mov
lods
lahf
jbe
lcall
add
push
push
pop
rolb
imulb
call
in
mov
cmp
push
icebp
inc
mov
push
test
repz
mov
lods
pop
imul
repnz
xor
stos
add
fdiv
push
popa
jo
adc
or
mov
mov
or
mov
mov
xchg
fsubp
fwait
jne
mov
leave
mov
repnz
ja
jno
adcl
in
loopne
mov
bound
mov
pop
jo
test
pusha
popa
push
test
fimull
cmpsb
mov
pop
lcall
hlt
or
dec
in
sbb
xchg
xor
push
out
and
mov
out
inc
pop
pushf
bound
repz
icebp
xchg
xchg
in
insb
cmpsl
ljmp
fiaddl
xor
inc
imul
add
sbb
fs
jns
add
inc
cld
cmp
rorb
bound
add
or
orl
xor
add
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
sub
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
add
mov
jmp
fs
in
lret
popa
jno
mov
mov
lea
jle
lahf
jl
jle
mov
loope
jp
popa
push
add
mov
movsb
dec
and
cmpsl
jnp
and
xchg
lods
cwtl
repnz
jae
inc
es
sbb
stc
sub
cmp
popl
scas
and
or
mov
mov
ljmp
add
repnz
adc
xchg
xchg
xchg
sbb
int3
xchg
mov
test
mov
push
adc
cltd
imul
stos
les
test
aas
fildll
dec
cld
sbb
xlat
cmp
out
lret
adc
mov
xor
jle
jg
dec
push
movsb
xor
mov
std
adc
dec
sti
jge
jg
outsl
pop
and
cltd
outsl
add
inc
pop
bound
outsb
sahf
mov
xchg
or
clc
rcl
xor
test
jo
jg
sub
dec
lods
sub
pop
sbb
mov
ja
mov
aas
mov
dec
js
adc
fldl
jno
enter
mov
push
int
rclb
or
push
pop
xchg
add
test
fistpl
cmp
lcall
leave
repz
jmp
pop
pusha
push
std
jg
or
popf
mov
jne
das
andl
sbb
cmp
movb
sbb
mov
push
mov
or
mov
jo
mov
mov
and
gs
aam
call
xchg
mov
dec
loop
push
dec
cmp
dec
xchg
insl
sar
push
or
inc
jne
divb
push
dec
and
add
adc
cltd
loop
mov
dec
dec
mov
push
stc
or
cmpsl
xchg
mov
pusha
dec
loopne
xchg
cltd
mov
mov
xchg
jno
idivl
or
cmp
sbb
popf
addl
and
and
jns
loope
pop
out
shl
xor
adc
or
nop
movb
test
je
cmp
js
xor
xchg
repnz
mov
test
mov
pop
sbb
ja
add
xchg
jo
push
push
cltd
xchg
mov
clc
jl
xor
sub
test
stc
fnclex
jg
add
add
rolb
mov
dec
das
mov
mov
mov
mov
jmp
jl
mov
xchg
rcll
xlat
sbb
sub
jle
jl
jle
in
frstor
psubq
or
xchg
mov
clc
pop
xchg
ror
jne
or
lock
sub
fimuls
jb
add
rorb
jmp
adc
andb
imul
jg
adc
popa
xchg
inc
aaa
ret
lds
sub
fcomi
fisttpll
aaa
jge
out
lock
addr16
daa
mov
mov
or
push
push
inc
inc
js
mov
shrb
jbe
icebp
and
xor
adc
mov
sub
mov
and
movl
pop
mov
dec
test
adc
cmp
mov
xchg
loope
sub
js
sahf
pop
push
notb
out
pop
xchg
stc
mov
mov
xchg
jo
imul
fbstp
lds
and
int3
mov
adc
sbb
mov
shrb
test
insb
aam
mov
fstps
inc
icebp
add
xchg
mov
fcomi
inc
dec
push
add
fldl
push
jmp
cmpsb
fidivrl
sub
xchg
add
jge
xor
addb
mov
lea
push
in
xor
push
cmp
mov
pop
push
pop
sub
jae
lcall
lods
loop
sbb
dec
into
jg
out
js
outsl
je
xlat
mov
gs
mov
dec
sbb
pop
xchg
push
mov
fstps
seta
call
mov
lret
enter
dec
inc
fwait
push
mov
lahf
push
incb
bnd
sbb
xchg
loop
test
add
sbb
mov
push
xchg
sub
push
jo
xor
dec
jo
xlat
pop
loopne
lcall
or
adc
sarb
cltd
xor
adcb
lret
xchg
jmp
cmp
int
scas
repz
add
jg
iret
mov
adc
xchg
lock
mov
daa
mov
jmp
iret
sahf
cld
out
in
mov
ror
lret
mov
outsb
push
push
imul
inc
aam
repnz
movsl
xorb
sbb
push
xchg
pop
pop
cmp
xor
push
pop
adc
or
or
cs
add
cld
icebp
insb
das
sbbl
ret
lods
in
imul
lods
pop
fmull
shl
subl
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
sbb
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
and
pop
icebp
jae
push
lret
jmp
dec
sub
sbb
mov
es
por
cwtl
cli
cmpsb
fsubrs
mov
clc
jne
ja
int
adc
out
and
push
xlat
mov
pop
sarl
push
dec
mov
and
and
jle
inc
not
cmpsl
in
cmp
push
mov
jle
lret
shll
dec
andl
mov
jmp
lock
lea
imul
shrl
mov
pop
cltd
jbe
arpl
iret
pop
andl
nopl
scas
pop
or
divl
add
jnp
push
orb
repz
mov
adc
lret
cmpsl
leave
xor
outsb
ds
out
push
in
int
mov
call
pop
push
mov
imul
test
sti
rolb
lods
and
pop
mov
xchg
faddl
sbb
push
clc
lret
gs
add
add
adc
sub
push
in
clc
mov
sti
pop
ja
popa
push
jnp
cltd
fadds
call
or
sub
dec
jo
stos
mov
popf
bnd
sub
lret
insl
ret
inc
addr16
cmp
in
ret
dec
nop
pop
mov
js
xchg
mov
dec
jnp
pop
push
lock
push
sub
jne
popf
pop
movsl
rcr
icebp
pop
xor
js
inc
dec
inc
shlb
mov
dec
out
push
pushf
sbb
repnz
popf
dec
or
imul
sub
ja
xor
adc
ljmp
and
lret
adc
and
fucomp
aaa
sub
dec
jb
push
lcall
pusha
inc
push
push
fwait
roll
mov
mov
push
cmp
adc
adc
sub
jg
push
les
mov
add
jns
xchg
dec
fidivrl
xor
xchg
mov
or
mov
mov
mov
mov
popa
test
mov
mov
mov
mov
mov
mov
test
mov
jne
jmp
sbb
sbb
bound
jle
sbb
ret
subl
cmp
lock
xchg
xor
mov
lods
jl
push
mov
adc
jno
shlb
loopne
push
imul
cmpsb
mov
je
xor
dec
push
sarb
mov
and
dec
repnz
ljmp
or
pop
fs
daa
sbb
roll
outsb
mov
mov
cmp
mov
mov
xchg
xchg
test
adc
lcall
pop
jbe
das
stos
std
enter
test
push
mov
out
and
addr16
pop
pop
ja
push
aas
ret
sbb
mov
sub
outsb
push
sahf
inc
mov
movsl
mov
pop
jno
rcr
neg
cld
mov
int
sub
jae
cmpsb
decb
lret
aad
mov
xchg
das
outsl
popa
xchg
sbb
inc
push
fildl
sub
ss
inc
push
in
or
pop
adc
cmp
sarb
dec
insl
addr16
adc
mov
ja
jae
dec
xchg
inc
in
push
sub
push
out
stos
shlb
xor
mov
pop
xchg
jno
insb
push
pop
cmp
jge
jno
push
bswap
dec
bound
jecxz
int
sub
mov
adc
push
xchg
push
outsl
mov
mov
scas
mov
xchg
sbb
dec
test
mov
loopne
adc
bound
rcll
popf
dec
sub
stos
fs
xchg
fucompp
sbb
lea
cmp
pop
cmpsb
jle
xor
shlb
test
cltd
enter
jns
dec
or
jle
push
enter
pushf
in
push
insl
jne
mov
insl
lock
pop
adc
cmp
hlt
add
mov
lods
push
mov
lods
push
popa
xor
movsb
mov
fwait
enter
xor
jbe
or
in
adc
jo
and
in
inc
enter
out
int3
rorl
xor
add
leave
ret
push
mov
sub
mov
subl
mov
xor
mov
mov
orl
movl
movl
mov
jmp
sbb
leave
in
icebp
xor
out
in
pop
lahf
jo
adc
jge
jle
push
insb
in
mov
push
cmpsl
les
sbb
add
negb
adc
popf
imul
idivl
lret
in
inc
xor
ss
ret
push
and
push
cmc
popa
test
pop
push
cs
pushf
mov
dec
mov
mov
jno
enter
push
enter
mov
cld
in
in
jle
out
loop
test
sub
les
add
ljmp
pushf
out
adc
pop
pop
push
dec
aas
cmp
xchg
pusha
adc
aas
jne
jns
rcrl
xchg
xor
adc
fdivrs
and
imul
fwait
jno
pushf
aad
jns
scas
addr16
aaa
ja
mov
lahf
dec
xor
fdivp
fisubs
push
adc
inc
cmpsl
sbb
fs
mov
inc
out
arpl
js
dec
pushf
cmp
push
mov
pop
jl
mov
stc
cmp
push
cmp
pop
push
leave
pusha
add
dec
lret
cli
iret
push
push
test
mov
sbb
rclb
jge
sbb
dec
popa
or
mov
push
or
inc
and
in
mov
mov
mov
push
int
out
outsl
pop
fdivs
inc
add
xor
out
mov
jo
ljmp
mov
test
mov
scas
xchg
push
sbb
or
je
std
pushf
mov
push
xor
sub
inc
cmp
add
jo
cld
pop
lcall
and
faddp
adc
pop
fs
and
cmp
lfs
push
lahf
movsl
je
mov
dec
cmp
xor
pop
arpl
outsl
or
cmp
out
in
pop
cltd
jmp
sarl
pop
mov
lahf
and
mov
into
in
push
cmp
sbb
pop
call
cmpsb
fwait
and
nop
dec
rcll
mov
cld
in
pop
loope
jb
pop
imul
cltd
testb
mov
xchg
push
lret
lods
inc
insl
fpatan
add
in
xor
ljmp
dec
push
mov
dec
sbb
sub
xchg
jecxz
mov
and
xchg
sub
shlb
push
adc
jge
add
dec
mov
repz
daa
sets
cld
pop
sbb
sbb
sbb
dec
jne
cs
mov
ficoml
mov
mov
pushf
cwtl
cld
ss
cmpsb
imull
stos
lret
mov
dec
dec
lods
adc
or
pop
cld
xchg
xchg
push
sbb
pop
mov
mov
xor
in
push
and
movsb
cmp
in
shlb
dec
aas
stc
mov
mov
idivl
push
roll
and
sbb
jmp
lock
pop
cmp
push
hlt
test
hlt
pop
cld
loopne
pop
fadd
test
or
pusha
cmp
mov
xor
movzbl
sub
mov
sbbl
add
incl
mov
xor
xor
xor
movl
mov
adc
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
xor
add
dec
mov
jmp
xor
movl
addl
jmp
movsb
fsubrs
jmp
mov
dec
xchg
int3
xor
sub
jle
ss
push
dec
xchg
dec
rcrl
sbb
hlt
lock
mov
pop
outsl
enter
cmpsb
testb
mov
imul
lea
je
mov
xchg
dec
hlt
push
dec
addr16
and
enter
mov
lds
mov
push
sbb
test
push
sub
out
popf
out
lahf
loope
out
jle
arpl
push
pop
shll
sti
and
mov
pop
cmpsl
bound
or
sub
and
push
mov
cs
jnp
xchg
xchg
mov
sbbl
cwtl
subl
sbbb
mov
dec
es
clc
sarl
and
sub
mov
out
xchg
adc
add
adc
cmp
jno
subl
jb
and
pop
cld
test
ss
insl
xchg
std
fs
xlat
popa
bswap
in
or
cmp
inc
test
xor
jno
out
sub
xchg
jne
call
mov
pop
sub
sbb
test
js
stc
mov
test
std
jo
ficoml
xor
ss
lahf
inc
cli
ret
or
jno
xlat
fdivl
lahf
js
fidivs
jbe
cmpsb
xor
add
dec
fdivr
roll
adc
mov
mov
mov
aad
imul
push
scas
loope
sti
test
mov
or
in
pop
fwait
aad
rol
mov
add
jnp
mov
mov
sbbl
int
lcall
jmp
out
cmpsl
outsl
fidivrs
pop
mov
dec
sub
add
ds
mov
jg
xor
sbb
jl
insl
xchg
or
mov
fisubrl
xchg
jmp
ljmp
add
add
and
mov
and
fdivrs
adc
dec
shll
and
cmc
xchg
mov
jl
fs
xchg
lahf
xor
es
push
add
mov
lahf
sub
data16
push
and
inc
dec
int
mov
inc
mov
adc
jnp
mov
sub
inc
mov
xchg
pop
imul
fwait
sahf
out
imul
add
out
sub
push
mov
add
sub
into
dec
cli
es
sbb
pavgb
lret
movsb
mov
out
enter
repz
fldenv
jb
dec
inc
add
dec
enter
inc
shrl
dec
dec
das
push
or
cmp
in
and
push
lcall
adc
in
dec
or
inc
mov
xlat
cs
lods
xchg
or
xor
addb
pop
call
jmpw
mov
dec
jno
or
xor
xchg
and
call
dec
push
insl
mov
mov
pusha
aas
sbb
outsb
fadd
or
mov
jnp
movl
sub
mov
xor
jmp
aaa
insl
pop
lret
repz
psrlq
fisubl
scas
jp
xor
sub
jle
dec
sbb
xchg
popf
lods
inc
xor
cmp
lahf
rcr
int
or
push
int
jns
ret
xor
hlt
sbb
or
xchg
mov
shll
mov
into
lcall
cmpsb
and
imul
lods
pop
push
mov
arpl
mov
xor
jl
lea
cmp
pop
jge
mov
dec
and
std
sub
es
or
jne
int3
sub
dec
jecxz
pusha
add
ljmp
add
das
jns
test
jne
lret
xchg
xor
inc
mov
sti
pop
jne
push
sbb
xchg
pop
adc
push
cs
lock
outsb
bound
adc
and
adc
das
dec
add
lahf
fisttpl
sbbl
push
xchg
ds
cmp
in
xchg
jp
fs
fnstsw
ljmp
dec
fimull
or
cmpsb
dec
pop
fldcw
mov
mov
lahf
push
lret
sahf
xchg
and
ret
stc
dec
dec
xchg
cmp
pop
push
xchg
movsb
and
push
test
push
cmp
mov
sbb
dec
fildl
push
aam
xchg
addr16
insb
inc
stos
stos
divb
ficoms
mov
ror
imul
and
jg
xor
jne
mov
lret
fsubr
push
add
cs
jns
enter
mov
mov
sub
xor
push
cmp
sub
and
cs
adc
int
inc
cmp
imul
pandn
pop
or
gs
adcl
xorl
pop
sub
sub
mov
cmp
and
pushf
iret
stos
cmpsl
jmp
mov
inc
out
out
test
out
in
sbb
lcall
sbb
or
or
add
movsb
or
pop
dec
dec
inc
inc
mov
ja
or
and
xchg
adc
xlat
nop
insb
jg
dec
orl
std
push
mov
mov
int
and
dec
jo
mov
sbb
mov
movsb
push
std
or
stos
mov
sbb
sbb
shrb
dec
repz
pop
ljmp
mov
jb
ja
sub
inc
rcll
daa
or
pop
imul
pop
mov
or
pop
or
pop
shr
xchg
pushf
push
loopnew
shrb
sbb
xor
std
dec
cmp
lods
pop
sbbb
mov
ficompl
pop
mov
mov
mov
setg
sbb
push
push
lret
add
mov
xchg
rcrb
js
dec
sub
loop
mov
inc
mov
bound
daa
sbb
pop
adc
mov
dec
and
xor
shl
pop
cmp
and
in
mov
lcall
pand
cmp
push
jg
mov
adc
xlat
jge
fwait
xchg
mov
inc
call
inc
add
add
add
or
add
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
movl
mov
mov
adc
movb
mov
decl
xor
subl
jmp
adcb
mulb
sarl
jge
jle
jge
inc
or
pop
xchg
adc
outsl
inc
fmul
jle
icebp
push
insb
mov
adc
pop
mov
sub
js
loop
ss
sar
in
cltd
mov
add
add
pop
cmp
popa
adc
adc
lea
into
mov
dec
lret
cmp
xchg
out
cld
cmp
and
pop
shll
adc
flds
pop
sbb
loopne
pushf
mov
mov
add
sahf
fwait
jle
dec
mov
mov
mov
push
in
and
lods
mov
test
shrl
xor
mov
mov
dec
mov
jbe
xchg
testb
cltd
int3
pop
stos
mov
pop
jecxz
test
adc
fnstcw
shll
pop
mov
sub
jno
push
or
add
sbb
fildll
xor
scas
fwait
orb
out
mov
jnp
mov
ljmp
adc
out
sbb
adc
or
inc
and
and
sub
insl
push
stos
xchg
sbb
dec
out
jmp
xor
mov
mov
mov
ds
jecxz
push
mov
popl
adc
pop
fistpl
ss
adc
es
fistps
rorl
stos
sbb
fisubrl
dec
leave
jecxz
mov
sahf
stos
cld
inc
xchg
mov
pop
call
xor
imul
inc
jmp
xor
data16
iret
outsl
pop
jle
mov
out
inc
and
xchg
adc
xor
dec
sub
daa
in
mov
out
daa
push
sbb
pop
mov
fst
and
loop
push
clc
jmp
xlat
sbb
test
pusha
imul
icebp
call
pop
lods
jns
out
loope
fs
cmpsl
inc
and
test
fildl
addr16
add
aad
add
and
push
push
stos
pop
clc
adc
sbbb
cmc
pop
loop
sub
push
mov
dec
mov
ror
cmpsb
loope
out
adc
nop
orl
cli
sbb
push
fcomps
jp
jg
call
insb
sbb
xor
int
push
xchg
push
clc
mov
pop
rcll
adc
mov
xchg
in
imul
adc
xor
mov
or
fwait
fcoms
fwait
cltd
or
inc
les
mov
add
imul
lret
add
dec
ja
sub
hlt
mov
xlat
cmp
outsl
mov
or
dec
lds
inc
lret
xor
push
xchg
mov
push
rorl
stos
repz
mov
mov
push
cmp
sub
stc
push
xchg
popa
movsl
pop
pop
push
xchg
lds
lock
or
add
pop
js
mov
movl
add
fdivl
movb
sbbl
push
movzbl
sbb
mov
mov
xor
xorl
jmp
lods
or
repz
repz
dec
cli
int
sbb
jle
sub
jle
xchg
jmp
aam
call
cld
inc
lock
push
jb
sbb
jg
roll
enter
ds
punpckhdq
fwait
cmp
pop
out
out
pop
lods
xchg
and
mov
js
in
xchg
imul
mov
pusha
out
add
out
movsl
enter
add
addr16
in
or
mov
mov
push
push
mov
jl
and
testb
xchg
icebp
dec
and
jge
push
dec
stc
pop
dec
std
jmp
movsl
sbb
lcall
mov
test
outsb
sbb
dec
in
rcrl
push
icebp
adc
pushf
clc
sbb
cmp
sbb
xor
imul
lea
push
jnp
push
in
les
cli
je
out
or
and
xor
pushf
inc
lds
fmuls
push
adc
jge
rcrl
cltd
sub
sub
pop
sbb
xor
arpl
jne
dec
rcrb
out
loopne
sbb
pop
lret
sti
inc
icebp
loop
int3
icebp
xor
jg
clc
dec
jmp
or
push
lahf
pop
fiaddl
insl
sbb
push
jo
inc
call
or
push
nop
int
mov
fisubl
mov
test
pusha
push
lds
lea
add
mov
lds
sbb
test
insl
rorb
pop
insb
inc
ljmp
mov
add
adc
out
xchg
clc
cld
mov
add
or
push
adc
pop
mov
out
ret
jo
mov
push
andl
daa
cmc
int
inc
int3
cmp
dec
xorb
sub
jns
and
pop
call
repz
xlat
cmp
pusha
push
xchg
les
popf
out
fimull
clc
mov
repnz
mov
xor
out
dec
pop
mov
scas
rcrl
push
into
jl
xor
jo
insb
psubw
ss
rcrb
xor
jnp
pop
pop
mov
stos
cli
push
popf
test
or
fwait
or
xor
call
jmp
imul
lahf
or
inc
xchg
xlat
out
test
fsts
and
imul
xor
imul
mull
pop
dec
xor
inc
sbb
pop
mov
or
testl
lods
xor
test
jmp
sahf
ret
jle
add
pushf
add
lcall
outsb
jmp
in
out
pop
sub
adc
inc
sbb
inc
inc
ret
or
adc
mov
add
imul
and
cmp
pop
jbe
inc
cmpsl
stc
fwait
out
adc
fisubrl
xchg
sub
sahf
cmpsb
and
push
or
aad
and
adc
fwait
sub
push
mov
pop
inc
lcall
and
cs
inc
add
inc
in
jmp
dec
push
test
xor
xor
jo
insl
and
jle
sub
jle
ret
out
fstpt
jno
cmp
sub
insl
lods
pusha
jmp
repz
movsl
xchg
fnstsw
inc
movsl
jle
imul
aas
sar
sahf
xchg
mov
push
adc
es
ss
dec
mov
enter
fwait
lcall
loopne
or
push
in
daa
fucomip
jle
jecxz
call
xor
stos
lods
xor
outsb
pop
mov
add
inc
pop
push
pushf
push
mov
cs
push
xor
in
sti
and
sbb
ret
lea
mov
pop
xchg
movl
mov
stc
add
cmp
sub
mov
inc
mov
pop
dec
xor
aaa
test
stc
jg
outsb
mov
jne
mov
int3
cwtl
xchg
mov
mov
stc
pop
adc
in
jbe
xlat
pop
repnz
jne
lret
psraw
mov
mov
mov
fimuls
xor
pop
loope
movb
out
xchg
mov
dec
jb
xchg
repnz
push
pop
xor
mov
push
lea
pop
pop
adc
push
lds
stos
or
test
cltd
dec
jb
mov
lahf
test
sbb
imul
mov
ss
and
shll
lret
fsubrl
pop
popf
pop
xor
push
jne
jecxz
push
bound
aad
inc
inc
dec
leave
pushf
jb
xor
aad
ljmp
movsb
or
mov
mov
andl
stos
push
iret
aad
mov
testl
sbb
movsb
leave
and
dec
ja
xlat
mov
inc
fwait
outsl
lret
scas
jl
sbb
test
loopne
mov
imul
repz
mov
cli
adc
add
add
or
sti
mov
xor
and
int
aaa
adc
fwait
adc
sbb
mov
cltd
push
jbe
mov
sub
ret
lods
dec
data16
push
mov
repnz
rcll
in
mov
jg
sub
inc
or
push
inc
mov
arpl
dec
addr16
in
fsts
push
jl
hlt
mov
dec
pop
in
mov
sub
repz
push
sub
mov
mov
popf
inc
pop
fstl
out
fidivs
dec
push
xchg
adc
sbb
xor
xchg
mov
pop
xorb
push
stos
repnz
sbb
push
xchg
pusha
push
out
repz
outsl
inc
dec
push
cmp
js
mov
out
bound
test
adc
fwait
stos
ret
cmpl
popf
mov
adc
add
ss
jp
xchg
mov
dec
jae
sbbl
xor
call
dec
loopne
stos
insl
fistl
das
jp
push
fcomip
mov
ret
sarl
incb
push
or
lock
xor
movl
add
xor
inc
insl
add
lea
incl
push
subl
pushl
jmp
mov
gs
push
fwait
movb
ret
sub
jle
out
scas
lock
or
xor
lret
xchg
push
add
fldcw
int
add
mov
movsl
jl
fcmovbe
jmp
add
fcomps
adc
test
aas
mov
or
inc
das
fsts
adc
imul
cwtl
in
cltd
add
stos
ja
test
lea
mov
sti
xorl
push
lret
jg
aam
push
cmpb
xchg
fisubrs
jl
test
in
in
xorb
ret
pop
sbb
push
pop
mov
insl
inc
cli
pop
fwait
int
ficompl
mov
loop
lods
gs
mov
mov
mov
jne
imul
test
cld
dec
subl
mov
jp
outsl
loope
mov
sub
fdivrs
jae
cmp
fiaddl
push
shl
adc
sahf
adc
dec
sub
out
push
pop
jge
sub
jmp
test
stos
cmp
cmc
lcall
mov
push
shlb
push
mov
cmpsb
mov
jle
xor
repnz
mov
popa
sub
sarl
loopne
mov
and
or
cs
jnp
lcall
lock
adc
jo
dec
sbb
dec
cmpsl
ret
lret
mov
mov
dec
movsl
inc
cmpsl
xchg
pop
pop
test
in
out
lahf
aaa
xor
clc
std
jge
outsb
js
jae
mov
aam
testb
dec
in
adc
out
sahf
inc
sahf
out
pop
fwait
inc
mov
ljmp
add
scas
jmp
in
or
pop
dec
popa
pushf
lods
loopne
rcrl
inc
test
and
insb
jmp
fs
fucomip
call
mov
xchg
jb
push
lret
stc
pop
scas
push
push
cmp
lock
add
jle
xchg
mov
push
xor
xchg
mov
and
sbb
or
or
mov
lea
aam
jbe
nop
dec
jecxz
adc
std
and
push
inc
dec
sti
in
dec
mov
sub
lcall
push
jge
inc
ret
pop
push
xor
fdivrl
rcll
sub
mov
mov
mov
movsl
cli
jo
ds
pop
push
ja
inc
das
add
fildl
dec
addr16
sub
sahf
pop
in
sbb
sbb
pop
int
ss
mov
cmp
mov
jbe
xchg
adc
and
cmc
mov
pop
std
cmpb
imull
out
cmp
inc
test
sbb
mov
inc
mov
out
xchg
shrb
movsl
sbb
pushf
sbb
sbb
cltd
js
in
inc
outsb
or
popa
repnz
cmp
popa
cmp
clc
cld
frstor
cli
test
addl
stos
sub
jb
cmc
push
xor
jo
jmp
aaa
dec
rcrl
jno
repz
push
and
ret
jle
sub
jle
adc
pop
jns
push
xchg
adc
test
or
adc
fidivs
lret
addr16
mov
and
xchg
movsl
cmp
lds
in
cmpsl
add
and
adc
dec
or
int
fistl
and
and
test
ret
jb
imul
pop
cmp
popa
pop
aam
mov
mov
cmp
rcl
cmpsb
fwait
insl
dec
enter
adc
pop
mov
sbb
and
pop
cmp
dec
loopne
shrl
lahf
xor
repz
xlat
fisubs
cmp
andb
scas
and
int3
mov
mov
push
push
xchg
rclb
jle
loopne
push
lret
dec
rcr
in
pop
mov
adc
push
lea
out
xor
scas
es
lret
inc
repz
xor
sbb
lods
mov
in
iret
iret
loopne
push
mov
mov
cmpsb
add
mov
pop
repz
cmp
or
mov
sub
stos
aam
xor
cmp
jno
push
loopne
jbe
xor
mov
adc
int
mov
jle
jg
pop
mov
cwtl
push
xchg
or
pop
aam
xchg
out
xor
int
aad
lods
xor
js
xlat
idivl
and
jg
lret
pop
loope
scas
xchg
clc
jo
fildll
mov
lods
enter
aad
xchg
out
mov
dec
flds
das
pop
les
jbe
dec
cmp
pcmpeqd
pop
cmovnp
iret
test
jnp
dec
ds
jno
les
xchg
add
insl
out
jmp
dec
pusha
shl
inc
out
or
xor
push
adc
xlat
lds
dec
add
mov
cltd
jo
mov
dec
inc
mov
inc
idivl
pop
jle
lret
xchg
mov
cmp
jle
hlt
jno
pop
jno
fxch
addr16
into
or
mov
push
mov
jge
aaa
dec
jbe
pop
aas
or
enter
repz
dec
mov
mov
sub
insb
cmp
sbb
sub
mov
insb
pop
icebp
mov
mov
push
nop
cmp
fsubp
sbb
cltd
bound
or
dec
push
pop
sub
sti
cmpsl
ljmp
xchg
loop
jno
sbb
insb
decb
fsubr
out
dec
loop
push
mov
loop
popa
mov
jle
ret
xor
sti
sbb
jne
pop
call
rolb
rcrl
dec
in
cld
mov
jno
xchg
xor
and
jecxz
push
daa
mov
dec
or
mov
jle
inc
add
fs
sbb
xor
ljmp
dec
stos
jmp
iret
and
leave
ffree
or
out
xor
lret
cltd
and
insl
add
int
test
and
sbb
sbb
mov
cmc
test
movl
je
lea
subl
push
mov
xorl
xor
sbbl
add
xorl
push
mov
jmp
mov
orl
inc
shrb
jns
adc
sub
jle
mov
inc
mov
mov
xor
fs
lret
aaa
in
lods
sub
mov
pop
outsl
jo
fildll
icebp
pop
ljmp
lea
push
lds
jmp
push
lret
loop
mov
lret
pop
in
lods
es
iret
in
pop
dec
in
pushf
mov
enter
insl
aas
bound
sbb
hlt
xor
out
fcomps
pop
pusha
inc
mov
lret
mulb
push
push
addl
xchg
mov
fs
pop
shl
jge
or
xchg
push
rol
fcompl
push
sbb
add
out
adc
jmp
push
adc
movsb
dec
shl
and
loopne
mulb
adc
lret
or
rol
fcmovne
aaa
leave
arpl
jg
sti
out
dec
push
and
scas
mov
ss
cmc
aad
fwait
imul
push
test
lods
fs
repz
adc
in
push
add
dec
dec
xor
xor
dec
sbb
sbb
jb
cmpsl
stos
out
orb
xor
sti
aas
test
mov
dec
lock
fisubrl
jne
mov
mov
lret
cwtl
jbe
cmc
xbegin
orl
test
jg
loopne
xchg
nop
mov
dec
pop
stos
call
add
sub
out
cltd
add
xor
push
sbb
dec
popa
and
jmp
clc
es
pop
scas
pop
or
mov
cld
push
out
adcl
jge
mov
call
cld
loop
xor
rcrl
sahf
insl
roll
or
sub
cli
cmpsl
xchg
ljmp
dec
xor
xchg
pop
push
out
sbbl
mov
xchg
mov
ret
sahf
add
movsl
xchg
out
mov
scas
adc
xor
ds
jg
inc
adc
pusha
addl
inc
and
or
outsl
fcmovb
and
outsb
xor
mov
adc
shl
std
movsb
or
and
and
push
cmp
jl
sti
ss
lret
push
lds
xchg
cld
mov
jne
subb
jecxz
ds
mov
unpcklps
ja
push
dec
outsl
cltd
or
mov
call
dec
pop
add
aaa
jmp
incb
sbb
daa
rcl
shll
ret
test
lock
leave
dec
je
std
xchg
lret
and
fidivrs
hlt
jle
pop
rclb
lods
mov
stos
sbb
testl
out
jno
repz
jle
fiadds
xchg
mov
setnp
lahf
rolb
sbb
addr16
mov
push
out
cli
sbb
sbb
lret
cmp
inc
and
jb
sub
mov
jle
dec
int
ret
mov
jecxz
xor
add
pop
sarl
jb
pop
flds
mov
scas
add
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
cmp
xor
rcl
lods
push
mov
cmpsl
mov
enter
jge
jle
mov
rorb
jno
mov
gs
decb
xor
ds
dec
cmp
out
dec
movsb
inc
jae
sahf
shll
out
inc
out
mov
sub
nop
insl
or
pop
pop
movsl
test
imul
scas
dec
jecxz
gs
dec
dec
cli
ret
jle
dec
inc
or
add
mov
mov
jne
cltd
pop
inc
pop
or
pushf
js
adc
sub
or
jo
cmpsl
cmc
add
xchg
sub
into
enter
xchg
mov
sbb
psubb
imul
andl
test
or
lret
dec
jecxz
push
or
sub
lods
cmp
lods
add
divb
jmp
jge
push
arpl
and
jnp
and
inc
je
dec
cmpb
mov
sbb
mov
sub
movsb
les
cltd
fldt
ftst
fwait
mov
stos
xchg
icebp
cmp
out
in
dec
push
sti
daa
ret
pop
imul
inc
lock
pop
xlat
aam
xchg
sub
xchg
popf
push
or
jbe
jecxz
xor
lret
aas
hlt
mov
cmp
call
dec
imul
out
pop
inc
cs
insl
addr16
scas
sbb
pop
mov
enter
lahf
movsl
in
cmpsb
iret
dec
add
dec
test
out
sbb
cmc
pop
pop
pop
xor
movsl
inc
test
ret
aam
dec
insb
add
jmp
shll
iret
add
mov
fimull
cli
push
cwtl
nop
or
xchg
pop
nop
mov
xchg
xor
sar
cmpsl
lods
jp
jno
jmp
add
andl
add
sbb
or
cmp
or
xor
push
ret
js
lret
jle
xor
cmpsl
addb
cwtl
add
test
xor
iret
jno
ds
rcr
add
pop
jnp
fwait
dec
out
cwtl
xor
mov
and
popf
pop
out
lret
inc
sbb
std
pop
sbb
add
sub
sub
btr
push
cmp
lds
repnz
pop
xchg
cmp
ss
call
fcoms
fwait
cwtl
pop
es
arpl
xor
daa
xor
sub
inc
mov
mov
jno
jno
inc
lea
loopne
fidivl
or
pop
jo
and
ret
fdivrs
and
arpl
fneni(8087
fld
pop
adc
sub
adc
and
or
shrb
loop
rcr
jno
xchg
ja
cmp
stc
pusha
enter
out
adc
adc
leave
lret
and
and
or
add
pcmpgtw
movl
xchg
mov
and
inc
decl
loopne
mov
xchg
cli
pop
add
inc
fcompl
test
out
pop
mov
jge
xchg
sbb
ficoms
xor
out
cld
jnp
shll
mov
pushl
call
jmp
pop
push
jl
mov
sub
adc
aas
xlat
jle
sub
jle
icebp
sub
out
adc
mov
xor
cmp
rcll
inc
push
cltd
add
dec
inc
xchg
ret
xchg
or
loopne
sbb
mov
negb
mov
and
shrl
sarb
imulb
ret
out
mov
loopne
mov
mov
push
adc
cmp
and
fidivl
test
or
popf
mov
movb
mov
xchg
pop
xchg
xor
inc
and
xchg
add
out
jl
jnp
aam
out
mov
jae
sbb
ds
repz
subps
pop
mov
push
add
outsl
movl
add
sub
xor
aad
mov
out
cmp
ret
or
movsl
or
lret
sbb
push
cld
add
mov
arpl
or
popf
adc
pop
cmp
cs
adc
inc
inc
mov
out
fnsave
xchg
pusha
sbb
lret
inc
nop
out
sbb
daa
inc
jle
int
pop
cmpxchg
sbb
aas
pop
cmp
dec
and
arpl
imul
clc
xor
int
push
loope
mov
adc
push
inc
loop
sbb
mov
xor
gs
nop
jns
push
add
je
jb
sub
inc
or
ret
jl
inc
aaa
or
sbb
cmp
mov
ret
fcmovne
add
stos
fcmovne
mov
cmp
sti
gs
mov
or
mov
pusha
mov
cmp
or
shr
add
lahf
cmp
dec
jbe
hlt
jae
mov
mov
push
sarl
add
push
lods
xorb
lahf
fsts
jg
fs
stc
adc
and
aaa
std
stc
dec
and
mov
push
mov
pop
add
je
xor
cli
xchg
pop
js
inc
cmpsb
push
pop
jne
jae
mov
xchg
jo
xchg
push
scas
insb
fdivrs
mov
insb
push
in
icebp
aad
ret
insb
fsubrl
add
lahf
inc
xor
lret
adc
loope
cmp
icebp
dec
movsb
add
sbb
jbe
test
pop
mov
and
push
fcoms
lret
add
data16
dec
and
addl
imul
jae
sub
aas
dec
pop
mov
inc
repz
inc
dec
ss
add
fbstp
xor
scas
pushf
daa
and
jge
rorb
inc
call
ds
pop
call
sahf
push
push
jmp
inc
ret
shrb
or
adc
cmp
xor
iret
mov
dec
iret
inc
ss
cmp
and
add
lret
js
or
push
in
push
sbb
imul
sbb
lods
push
iret
adc
xchg
xorl
mov
xchg
aad
call
add
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
popa
pushf
cmpsl
mov
jno
inc
xchg
popa
jb
int
pop
not
jle
sub
jle
jle
inc
mov
ret
or
shll
push
add
cld
cs
into
clc
sub
je
int
cmpsb
or
inc
hlt
mov
lcall
inc
jg
and
and
insl
repz
lock
ret
cmp
and
or
mov
xor
fdivrp
cwtl
xchg
aas
push
fwait
jns
or
jne
push
push
add
pop
pop
imull
mov
ret
adc
or
cmc
ficoms
pop
jmp
sub
adc
lods
sub
lcall
jmp
mov
and
sub
inc
adc
mov
mov
ss
sbb
pop
and
dec
incb
cmp
push
cli
pop
fisttpl
cmp
je
call
cmp
xchg
add
ret
std
sub
into
notl
sub
ljmp
xor
fdivr
xchg
pop
cwtl
dec
das
cltd
dec
adcl
sub
xchg
xchg
xchg
and
sbb
addl
insb
repnz
clc
add
cmp
arpl
mov
xor
ror
or
pop
jp
adc
test
outsl
sub
sarl
lods
push
call
sbb
fstpl
dec
mov
mov
popa
jbe
imul
mov
mov
jge
fidivs
daa
dec
inc
js
or
push
in
les
mov
pop
sub
adc
xor
mov
fisubl
sbb
pop
ret
mov
cmc
mov
add
push
stc
leave
push
pop
test
into
int
iret
repnz
cmp
cmp
lds
dec
inc
or
jo
pop
lahf
cs
inc
aad
pop
add
out
incb
movsb
lcall
and
jae
add
cmp
std
nop
mov
test
cmpsl
icebp
xchg
jne
pop
into
ljmp
lds
jle
ret
sti
pop
mov
sbb
mov
cs
mov
lea
mov
dec
and
popa
jno
add
pop
mov
andb
mov
mov
adc
xor
push
xchg
dec
adc
xchg
int3
adc
jmp
dec
add
mov
leave
push
push
repz
xor
ljmp
and
and
mov
or
adc
sbb
adc
mov
je
inc
push
enter
xchg
incl
or
aas
mov
dec
push
out
hlt
rol
stos
pop
or
vcmpnltss
push
cmp
loope
out
aas
mov
ljmp
sti
lea
pop
sub
cmpsb
aaa
into
and
pop
pop
mov
test
int3
in
das
xchg
popf
xchg
pop
sub
dec
lret
stos
icebp
sub
mov
int
lock
test
mov
leave
lods
add
or
bt
jecxz
shrl
pushf
mov
hlt
pushl
call
test
je
lea
push
mov
xor
jmp
test
cmp
push
mov
pop
mov
jge
jle
and
je
inc
mov
repnz
cmpsl
mov
and
iret
mov
stos
jp
pop
add
imul
cmp
mov
in
ja
ds
test
mov
push
mov
outsb
subb
addl
dec
std
lcall
pop
xor
dec
gs
mov
sbb
enter
clc
ja
xor
popa
pusha
pop
popf
xor
and
daa
xchg
mov
mov
or
cmp
push
inc
fs
in
mov
ror
dec
sbb
addr16
sub
cmp
jne
dec
sub
in
fimull
mov
mov
sti
je
mov
mov
and
lret
and
mov
rcl
jecxz
cmp
insl
fisubs
out
outsb
adc
sub
aaa
test
pop
jge
mov
cs
jp
cmpps
push
ss
cltd
or
cmp
popf
loop
add
mov
fcoml
imul
push
repnz
pop
test
test
jecxz
mov
scas
mov
jp
jp
addr16
mov
movsb
ds
testb
dec
adc
cmp
and
iret
xchg
bound
or
mov
mov
scas
jae
jg
fcoml
adc
dec
into
ds
int
jg
loop
int3
repnz
iret
movsb
inc
data16
jge
cmpsb
inc
pop
stos
test
clc
mov
orl
outsl
imul
cld
sbb
lea
shll
push
stos
pusha
adcl
aam
sub
xchg
add
lods
jge
jp
adc
cmp
mov
or
fiaddl
mov
fstpt
cltd
mov
jne
mov
push
add
sub
out
xchg
and
bound
add
push
dec
jg
fstpt
and
js
outsl
sti
bound
les
mov
lods
jle
rorl
sti
jmp
sbb
sbb
cltd
cmpsb
adc
pop
pop
jbe
gs
je
xor
mov
loope
pop
outsb
shl
cltd
mov
mov
cmp
fistpll
scas
sub
adc
dec
icebp
mov
xchg
xor
clc
dec
jbe
mov
lea
and
test
roll
nop
repz
xor
out
mov
push
cmpsb
jae
ffreep
dec
pop
insl
aad
jnp
pop
std
fisttpl
aas
imul
adc
lods
leave
int
enter
sahf
cltd
and
or
fstl
sub
pusha
pop
mov
push
push
inc
shll
xor
jns
enter
push
adc
pop
or
sbb
dec
pop
jae
lret
inc
adc
cwtl
movsb
sarb
mov
rclb
fwait
pop
out
sub
pop
loopne
mov
sub
or
fadd
test
addr16
mov
cmp
xlat
testl
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
shll
add
ret
loope
inc
rcl
jmp
pop
fdivrl
sub
jle
and
jno
arpl
sbb
xchg
lods
mov
dec
int
xor
subb
aam
push
or
cmp
mov
lock
mov
adc
jo
pop
insb
jp
cltd
ja
popa
jp
push
cli
cmp
xchg
mov
mov
or
dec
insl
ror
lret
xor
jle
adc
cmp
or
xorl
insl
mov
mov
jbe
push
icebp
adc
js
inc
test
in
push
insl
pusha
bound
jmp
pop
sti
cmc
sbb
mov
cmpsl
xor
mov
out
and
pop
xor
or
xor
test
enter
xchg
out
mov
leave
mov
inc
test
fcomip
in
pop
fstl
xor
jge
add
dec
hlt
les
clc
xchg
gs
leave
movsl
int3
pop
push
aad
jl
cmpsb
stos
inc
adc
sbb
ja
xchg
cmp
jnp
push
loope
test
out
lods
push
addb
xor
jle
cmp
fs
aas
lds
enter
mov
shl
clc
lahf
enter
iret
mov
daa
ds
mov
xor
jb
ret
push
push
loop
adc
xor
sub
clc
xor
mov
aam
mov
dec
add
test
jg
imulb
test
or
cltd
jnp
lock
out
ret
xchg
stc
lds
cmc
xor
bound
out
inc
sbb
loope
mov
pusha
hlt
mov
inc
aaa
adc
pusha
jb
mov
dec
dec
shll
inc
cmp
fwait
scas
fiaddl
sti
daa
test
pushf
push
out
pop
lahf
lcall
hlt
ret
xor
subl
imull
sbb
lret
inc
jg
mov
cmp
daa
std
jns
adcb
sbb
push
outsb
jnp
sub
sbb
divb
mov
jo
in
xor
adc
add
xchg
mov
cmpsb
mov
xorl
leave
das
lret
xor
push
loopne
cmpl
push
lock
sbb
jmp
mov
sbb
add
out
add
out
mov
xlat
sti
jmp
inc
dec
lds
fmuls
push
pusha
push
xlat
mov
adc
xchg
mov
test
dec
sub
or
and
ljmp
clc
fldenv
cmp
lahf
mov
mov
pop
out
dec
sbb
cli
pop
add
xor
aad
icebp
push
adc
fistl
mov
mov
test
xorb
xor
jmp
dec
icebp
xchg
arpl
cmp
mov
dec
adc
dec
rorl
and
jg
inc
clc
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
jmp
lcall
insl
sub
aad
rcll
fdivrs
sub
jle
comiss
push
mov
fwait
ret
pop
add
sub
jo
pop
lret
dec
test
ljmp
mov
push
pop
xchg
inc
xor
test
mov
adc
push
fcoml
into
push
lods
loop
dec
xchg
xchg
stc
lcall
adc
mov
or
and
xchg
mov
orb
dec
in
add
mov
and
orb
dec
test
adc
data16
jne
inc
and
xchg
fidivrl
adc
mov
inc
inc
mov
stos
and
das
jmp
out
jne
mov
mov
movsl
adc
insb
push
aaa
loopne
test
dec
in
clc
and
gs
inc
cmp
cmp
adc
push
jne
addr16
addb
lods
pop
sbb
jmp
adcb
popf
inc
cwtl
and
jmp
xor
mov
xchg
loope
cs
inc
push
into
mov
in
ret
adc
pop
test
cmp
cmp
leave
mov
adc
sub
addl
popl
cs
int
aaa
lahf
dec
push
xor
xor
push
mov
shlb
int
int3
sbb
or
arpl
mov
pop
test
mov
mov
inc
pop
mov
push
xchg
test
xor
cld
mov
lods
and
sbb
xor
push
sahf
jge
cmp
inc
xchg
sub
stos
out
add
sbb
insl
mov
lea
cmp
test
lahf
pop
pop
pusha
lock
int3
push
dec
inc
fucomp
dec
cmpsb
rcrb
popa
adc
mov
inc
lods
add
es
xchg
adcb
or
in
push
jle
loopne
cmp
pop
add
in
mov
xchg
js
mov
cli
outsb
mov
jp
sahf
loopne
xchg
cwtl
adcb
lcall
out
fwait
and
mov
repz
or
daa
pop
pop
mov
fidivrl
scas
inc
ja
sbb
push
sbb
in
adc
push
call
rorb
aam
cmp
in
jp
fisttps
movsl
imul
jg
mov
mov
gs
xchg
int3
hlt
loope
ja
sbb
je
rcrb
and
outsl
adc
enter
ret
js
ret
loopne
int
push
shlb
fdivrl
addl
iret
test
xchg
sahf
xchg
dec
adc
pop
mov
adc
ljmp
add
scas
lea
std
lcall
movsb
jo
adc
xor
ficoml
adc
aaa
adc
inc
mov
mov
movsl
cmp
add
fmulp
insb
and
mov
lock
lcall
mov
data16
xchg
jo
loopne
pusha
stc
ficompl
scas
arpl
data16
xlat
dec
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
jmp
cli
add
ret
popa
arpl
lds
out
jle
jge
jle
out
out
loope
out
jmp
jg
xor
clc
sub
loop
cld
xor
popa
push
outsb
xor
and
xchg
mov
loopne
xchg
xchg
push
cmp
jns
stos
push
in
loope
mov
hlt
insb
inc
and
xchg
jo
dec
or
xor
jo
and
push
jp
hlt
cmp
enter
mov
xchg
out
dec
xchg
pop
movd
sbb
in
xchg
xchg
pop
mov
cmp
mov
lahf
sub
mov
xchg
mov
andb
gs
std
jl
push
mov
sub
test
inc
stc
adc
loope
dec
test
mov
mov
mov
loop
sub
fwait
testb
jmp
mov
clc
cmp
push
int3
xor
sub
sbb
inc
in
fwait
loop
cwtl
and
addr16
fildll
aas
cli
xchg
inc
sub
in
jbe
cmp
in
push
movsb
xchg
pop
or
sub
movsl
popf
cli
add
insl
inc
or
fldenv
jne
movlhps
xor
scas
cmp
je
cli
jnp
sahf
adc
mov
mov
jp
ja
xor
or
mov
cmp
repz
jmp
xchg
fnstenv
dec
in
ss
dec
dec
adc
je
test
jns
loopne
jge
loopne
adc
push
icebp
dec
movsb
test
pop
call
jmp
mov
or
int
add
addr16
pop
mov
xor
out
jecxz
or
jb
insl
adc
ljmp
mov
dec
lret
imul
pop
jmp
lcall
mov
sub
xor
ss
aaa
or
mov
push
adc
xchg
lock
adc
xor
iret
aas
or
pop
fcmovu
or
inc
out
lods
sti
push
pop
mov
jae
stc
mov
subb
popa
repnz
mov
scas
in
pop
mov
mov
movsl
and
add
mov
or
ret
add
add
adc
aam
cmp
and
pop
cltd
popf
inc
das
fs
cwtl
sub
cli
mov
adc
mov
mov
fcmovbe
lods
out
lahf
iret
lea
rcrl
lahf
cs
fld
cli
data16
jns
mov
dec
ficompl
pop
mov
sti
xor
and
test
jmp
ret
lods
fsubrl
rcrb
gs
fwait
icebp
lahf
or
cli
shll
sbb
mov
mov
add
into
fsubs
mov
mov
rolb
aam
fimuls
xor
sbb
rcll
repz
add
mov
sub
out
or
mov
xchg
inc
cmpsb
pop
xor
rolb
jle
and
mov
out
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
jmp
outsl
adc
insl
popa
insl
jno
std
inc
add
sbb
dec
sub
jge
jle
push
dec
movsl
jns
mov
aad
cmp
jbe
mov
incl
pop
cld
gs
icebp
push
sub
mov
lods
dec
popa
jmp
incl
cwtl
ret
subl
rclb
sbb
lahf
shrl
rolb
stos
mov
xchg
mov
xlat
fnstenv
fcmovnb
push
lcall
dec
std
in
jp
push
mov
fcompl
inc
stos
jno
pushf
aam
jmp
xor
xor
adc
sub
xor
push
loop
mov
or
push
ficompl
xlat
mov
lock
mull
imul
test
mov
cmpsb
add
push
mov
fistps
push
xor
cmp
mov
sub
shll
roll
lock
sub
test
add
mov
dec
or
mov
and
jge
jmp
fsubrs
xor
rorl
mov
jl
aam
add
loope
lahf
inc
cltd
enter
adc
inc
adcl
sbb
jecxz
push
sar
loop
cmpsb
clc
sbb
insb
or
sub
inc
push
pop
dec
cld
popa
test
data16
fldl
push
jle
mov
push
jecxz
rclb
sti
xor
fiadds
dec
aas
adcb
test
mov
push
aaa
pop
cmp
mov
mov
ret
mov
mov
std
je
daa
push
mov
insl
insb
mov
data16
pop
pop
hlt
std
in
popf
decb
fadds
inc
lock
int
dec
js
mov
fldt
pop
pop
stos
pop
lea
pop
mov
dec
clc
adc
push
xor
cld
jecxz
aam
addr16
fs
mov
sub
outsl
pop
mov
xor
lahf
xchg
add
mov
xchg
cs
sbb
sbbl
add
cltd
loope
mov
aam
out
add
insl
or
mov
mov
sahf
orl
divl
push
ret
cs
xor
dec
mov
aaa
or
icebp
pop
push
cld
xor
gs
loop
sbb
sub
jmp
fs
ret
mov
cmp
mov
jp
mov
jle
mov
fisubrl
xchg
in
or
test
shl
lret
fmuls
rcrl
mov
into
sub
dec
sbb
sub
push
push
jge
faddl
cmc
es
sbbb
imul
mov
adcb
push
sti
repz
mov
mov
xchg
pop
and
rcrl
test
jmp
sbb
xchg
stos
and
stc
mov
call
sbb
cmp
nop
push
data16
rcr
mov
push
rcrl
leave
leave
xchg
xchg
adc
or
pop
leave
ret
push
mov
sub
and
push
or
mov
and
mov
mov
sbb
mov
mov
xor
movl
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
or
movl
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
add
xor
mov
add
mov
or
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
jmp
push
jp
in
jne
stos
push
nop
inc
inc
cld
loop
or
jle
pop
jge
sbb
push
sbb
xchg
lock
jecxz
mov
aaa
js
enter
pop
push
mov
ret
jnp
pop
pop
xor
mov
mov
mov
adc
dec
div
dec
aaa
cmpsl
dec
pop
iret
pop
cmp
out
pop
mov
xchg
cmpsl
inc
push
lock
inc
loop
jb
stos
jo
xor
out
test
xor
add
lods
pop
push
js
push
dec
pop
sub
xlat
fldenv
shll
clc
xor
rorb
aad
xor
sub
test
aam
cld
or
cmp
xchg
fidivrs
push
jae
push
cltd
inc
enter
daa
repz
pop
xor
push
sbb
inc
mov
test
lea
push
cmpl
fldenv
arpl
popl
imul
fdivs
mov
call
movsb
dec
mov
pop
xor
hlt
pcmpgtb
pop
aad
push
filds
xchg
push
xchg
test
stos
jnp
xchg
rolb
adc
jne
cmp
sub
sub
push
nop
push
outsb
aas
cmpsl
sub
and
pusha
push
cmpsl
bound
fsubl
std
hlt
hlt
mov
mov
xchg
add
jb
pop
addr16
andl
jp
fdivl
ss
clc
lock
filds
sti
lahf
fcmovu
jo
lret
inc
andnps
dec
loopne
pop
arpl
imul
ja
outsb
scas
fwait
mov
push
lds
mov
and
inc
filds
xchg
stos
xor
dec
fmulp
data16
add
sti
cwtl
lea
cwtl
mov
data16
out
cmp
out
pop
adc
xchg
scas
mov
out
inc
cmp
cmpsl
mov
adc
xor
insl
mov
icebp
and
push
repz
adc
fs
inc
test
fadd
fs
test
jp
push
cli
jp
pop
xor
mov
mov
add
shrl
pop
ret
nop
in
xor
test
push
aaa
jae
inc
addb
mov
or
pop
xor
mov
sub
stc
dec
push
mov
ljmp
pop
add
aas
fwait
xor
or
xor
in
add
push
popf
adc
popa
mov
sub
outsb
mov
in
stos
lds
iret
push
cmp
mov
sub
ja
lret
cwtl
adc
stos
loop
dec
xor
das
je
jecxz
aad
push
mov
insl
mov
jne
aas
jmp
pop
popf
push
repnz
pushl
mov
test
mov
jbe
push
sahf
xor
add
dec
mov
sub
movl
movl
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
not
movl
movl
or
movl
and
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
or
jmp
incl
mov
push
pop
das
xor
jle
push
jmp
pop
or
das
int
out
fstpl
xchg
in
mov
outsb
insb
movsl
aam
push
cmp
xor
jnp
or
push
cmp
jno
lock
mov
in
or
dec
sub
mov
adc
cmp
xchg
dec
xchg
loope
fstl
popl
sbb
mov
ret
and
aam
jbe
arpl
mov
xchg
iret
pop
mov
leave
in
jl
sub
scas
leave
ja
loop
inc
ret
pop
hlt
js
rcrl
in
test
lea
xchg
adc
stos
xlat
shll
or
sub
inc
popa
sbb
std
nop
dec
cli
cwtl
mov
and
cwtl
sahf
cmp
sti
inc
outsl
mov
repnz
and
in
dec
iret
stc
pop
subb
stos
inc
jno
out
and
outsl
sbb
pop
shrl
loope
sbbb
ljmp
idiv
mov
into
movsb
sbb
stc
andb
and
ss
mov
je
stos
divl
jle
enter
je
mov
gs
sub
jp
or
or
mov
adcl
out
aas
adc
cld
testl
push
test
js
insl
cli
inc
addr16
ret
adc
xor
lcall
popf
pop
add
fsubrl
xorl
mov
dec
jo
rol
mov
je
and
push
lock
cld
dec
cmp
jb
inc
out
jg
cmp
shll
mov
fldlg2
inc
nop
mov
or
jle
mov
fnstcw
enter
push
inc
inc
ja
mov
cmpsb
sbbl
push
fstpl
xor
mov
jg
jl
inc
jns
mov
outsl
nop
jl
mov
inc
stos
sti
push
hlt
roll
sahf
dec
cltd
outsb
outsl
in
addr16
sbb
cwtl
mov
lret
xor
sbbl
stos
rcr
xlat
add
xchg
orb
lods
rolb
fcmovne
xchg
mov
loop
add
adc
or
pop
xchg
dec
cmp
ss
mov
xchg
lahf
or
jae
mov
xchg
inc
frstor
mov
xchg
jnp
mov
out
xor
shll
sub
jne
and
sbb
lock
leave
pop
or
outsl
cli
inc
and
cli
in
sub
aam
mov
aad
sub
lahf
dec
lcall
test
and
mov
fisubrl
sub
loop
in
add
imul
push
dec
cmp
adc
or
mov
stc
push
pushf
mov
sbbl
sub
andl
mov
xor
add
movl
cmp
jb
mov
mov
sub
sub
mov
or
mov
xor
xor
sbb
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
xor
add
xor
or
sbb
mov
jmp
inc
int
popa
jae
push
in
mov
lock
jmp
jle
jl
jle
jl
pop
jge
addl
aaa
add
pop
add
and
das
sub
push
popf
mov
aam
les
xor
ret
jo
imulb
jo
bound
push
sbb
dec
in
movsb
push
test
xor
mov
mov
inc
loope
movsb
rcrl
lds
gs
clc
sti
test
cs
mov
mov
add
pop
sti
movsl
mov
lret
inc
cmpsl
add
adc
frstor
cld
or
xor
mov
fstpl
pop
xor
dec
fwait
aad
push
cs
fisubrl
mov
xchg
fiaddl
or
adc
leave
aad
repz
push
iret
dec
and
mov
mov
ss
mov
adc
mov
push
push
fwait
adc
pop
mov
dec
pop
into
xchg
xchg
call
or
push
sub
fistpl
jns
adcl
adc
ret
shrb
lahf
mov
call
mov
shrb
adc
jns
xchg
or
xchg
push
test
std
sbb
iret
pop
adc
add
ja
xchg
lods
fs
mov
outsb
cld
lods
xchg
pusha
xor
in
jnp
xchg
add
cmp
add
je
sub
out
sub
mov
int
pop
fmuls
orb
inc
and
add
inc
gs
insl
jno
loop
inc
mov
dec
sbb
lock
mov
adc
pop
mov
push
adc
mov
xchg
xorl
pop
insl
add
insl
ljmp
mov
sbb
sub
rorl
subb
addr16
jmp
call
notb
in
sbb
mov
jns
and
scas
sbb
clc
mov
or
jno
rorb
daa
aas
loope
rorl
das
mov
adc
sbb
mov
jns
lock
jl
jmp
test
mov
mov
fdivl
inc
mov
jmp
and
ljmp
mov
dec
ss
sbb
and
mov
xchg
adc
push
push
xchg
subb
or
add
vpmulld
les
and
mov
or
negb
xor
bound
sub
addr16
or
sarb
and
daa
out
xchg
fsts
inc
dec
dec
add
sbbl
imul
mov
sbb
mov
orl
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
sar
sub
stos
cmp
scas
rolb
idivb
data16
jle
sahf
jmp
sub
fstp
mov
sbb
mov
mov
mov
mov
add
mov
scas
outsb
cmp
mov
jg
lcall
mov
sbb
iret
jnp
add
add
orb
sbb
xor
mov
jnp
mov
pop
sub
and
repnz
adc
fildl
pop
inc
aas
aas
and
aas
jecxz
fwait
xor
popa
xchg
sbb
adc
push
std
adc
adc
mov
mov
outsl
push
out
out
jno
cli
and
mov
xor
inc
popf
mov
push
outsb
outsl
int3
xor
js
pop
inc
mov
or
inc
push
daa
out
aad
js
clc
add
cmp
into
pop
fbld
cwtl
mov
cld
mov
push
lea
stc
or
adc
fnstsw
pop
fwait
inc
xchg
lock
nop
in
or
pop
int
sti
daa
icebp
jnp
stos
ret
pop
dec
stos
mov
xchg
pushf
mov
stos
jno
test
or
or
mov
jnp
sbb
push
or
data16
cltd
jmp
add
cwtl
outsl
outsb
js
add
mov
aad
pop
ja
shll
sahf
int
ret
pop
jle
and
jp
add
jmp
enter
pushf
push
xor
in
cmp
push
sbb
push
push
iret
fwait
adc
movsb
setp
dec
dec
dec
sub
sti
imul
mov
inc
adc
repz
jnp
mov
or
and
in
lahf
jae
sbb
adc
aad
dec
push
push
jne
dec
movsb
and
imul
sbb
cmp
push
jmp
pop
in
mov
push
test
je
jno
cmpsl
pop
out
fprem1
bound
sub
sbb
cmc
pop
cs
inc
pusha
sbb
scas
xor
and
push
sbb
and
into
icebp
inc
xor
lret
sti
jge
daa
data16
out
push
dec
dec
add
jae
push
repz
or
mov
popf
cltd
and
jmp
stos
push
mov
outsl
and
lret
inc
pop
dec
pop
push
ljmp
add
push
dec
pop
xchg
sbb
jmp
fisttps
clc
cmp
mov
lock
jge
mov
dec
jle
ret
fistpll
shll
in
gs
mov
mov
dec
pop
xor
bound
vunpcklps
stos
std
out
cmp
pop
mov
fldcw
not
sbb
sub
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
push
jl
mov
ret
push
fdiv
jle
data16
jle
pop
sbb
in
in
setne
lds
test
adcb
idivb
push
in
sub
push
ja
call
mov
pop
js
movsb
loopne
cwtl
sbb
push
mov
push
fimull
nop
cwtl
xchg
add
out
jg
cmp
inc
loopne
fisubrs
idivb
nop
xor
xchg
std
cltd
fiaddl
ret
int3
pop
cmp
aad
rorl
xchg
or
pop
mov
mov
jg
aas
push
shll
pushf
cli
mov
scas
std
adc
xor
outsb
xlat
sbb
aas
dec
push
jl
push
imul
cltd
rcr
ljmp
movsb
les
fdivs
fucomi
movb
add
push
fsubr
cli
push
out
inc
adc
ljmp
pop
test
cmp
sbb
in
cld
inc
sbb
mov
and
adc
or
filds
fsubrl
ljmp
hlt
daa
inc
xchg
ds
xchg
adc
cmp
jl
decb
sarb
or
divl
mov
hlt
sub
mov
ss
loopne
push
shrb
stos
cli
push
sub
jg
xchg
outsb
addb
lds
sbb
lods
and
xchg
shll
stos
daa
fxch
mulb
mov
out
aas
insl
sub
mov
cmp
insb
clc
jb
pop
clc
ret
mov
dec
adc
sub
je
xchg
sahf
mov
mov
push
mov
movsb
or
xchg
shlb
or
dec
movsl
push
fimuls
stos
jp
ret
jo
lahf
imul
dec
xor
dec
pop
popf
sahf
push
sub
subb
jge
testb
xor
vmwrite
mov
pop
sahf
loopne
xorb
lods
imul
sub
aam
and
add
aas
sbb
mov
xchg
test
dec
cmpl
pusha
cmpsb
cmp
push
xor
push
cli
dec
aaa
nop
xchg
out
out
inc
sbb
push
adc
mov
and
movsl
dec
mov
dec
es
jmp
cmpl
data16
lea
icebp
mov
dec
pop
sbb
mov
call
int3
lods
pushf
repz
inc
jo
sub
jle
mov
imul
jl
mov
xchg
pop
or
lods
popf
push
fisubl
xchg
or
xchg
popf
les
fwait
sub
cmp
in
push
aaa
add
mov
xchg
xchg
add
fistps
loop
inc
ds
aad
pop
jne
dec
stos
or
dec
int3
xchg
insl
xchg
in
pop
setb
jle
pop
jns
cmp
sbb
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
in
aaa
mov
jo
jno
scas
nop
xchg
cs
sahf
push
data16
jle
and
shr
and
and
jns
pop
lods
ds
call
inc
mov
cmp
mov
mov
int
jle
mov
scas
mov
lret
add
ds
cld
sbb
cpuid
cmovno
stos
xor
das
int3
cmpsl
shlb
sti
adc
hlt
fistpll
fdivl
push
sbb
jne
and
xor
mov
and
add
pop
loopne
jmp
inc
sbb
inc
mov
and
addr16
into
jge
in
sub
orl
mov
fimuls
inc
cmp
lret
outsb
test
adc
jns
add
es
adc
pop
cmp
push
mov
adc
mov
jae
aad
es
test
ret
pop
pushf
mov
fdivrl
call
es
imul
int
or
je
xor
inc
les
cmp
push
or
mov
adc
test
mov
out
imul
xor
inc
cmp
mov
push
cli
add
ljmp
int
adc
movsb
out
push
fstpt
fcoml
ljmp
xor
lds
cmpsb
loopne
sub
sub
pop
call
inc
xchg
or
movq
jg
mul
push
ljmp
xchg
dec
push
mov
cmp
mov
hlt
out
xor
fld
icebp
fs
in
sti
movsl
mov
push
jmp
jno
mov
or
jnp
dec
mov
jo
jno
push
mov
rcl
or
ljmp
arpl
pop
movsl
aam
cmp
or
sub
nop
or
out
cmp
out
addr16
xchg
mov
test
test
mov
adc
or
aad
dec
inc
cmp
js
jne
dec
js
push
movsb
addr16
xchg
cmpsb
jecxz
sbb
sub
fs
shl
test
jo
cmp
fcompl
jne
pusha
inc
lods
fists
mov
fsts
push
js
addr16
or
push
jnp
mov
ss
dec
push
push
bnd
push
xchg
mov
sbb
push
aas
mov
sahf
sbb
xchg
jl
out
sbb
gs
jl
lods
lahf
fsubs
jecxz
inc
push
shrb
xor
aad
pusha
insb
shr
repnz
in
popf
add
cmp
mov
jae
es
add
pop
mov
or
xchg
push
imul
out
enter
cmc
and
jne
pop
and
fisubrs
push
mov
sub
add
fimull
xchg
add
add
push
add
mov
mov
xor
xor
add
add
jmp
push
dec
fcmovne
jecxz
jae
loope
add
push
lock
sub
jle
data16
jle
stos
push
jbe
clc
lcall
ret
dec
jmp
mov
bound
sub
sub
scas
movsb
repnz
push
les
mov
aam
or
inc
cli
repnz
fsts
fs
lret
call
adcl
mov
pop
daa
jae
push
dec
loopne
or
and
mov
push
pop
fsubs
jo
xchg
jnp
push
fwait
push
mov
es
cmpb
into
sub
push
inc
sub
loopne
push
mov
shlb
push
mov
bound
cmpsl
cmp
aas
stos
sub
sarl
cmc
inc
stc
or
xor
popf
mov
pop
mov
gs
push
inc
int
inc
mov
dec
adc
push
mov
in
bswap
mov
xchg
data16
aad
mov
cltd
popa
cs
mov
ficomps
cmp
andl
push
pop
mov
xchg
ret
mov
ljmp
xchg
sarl
ret
jno
ss
sub
sbb
jl
dec
sbb
add
cltd
std
jnp
ret
repnz
outsl
nop
insl
dec
jmp
or
aas
adc
fwait
std
scas
std
cmp
adc
sahf
mov
inc
jns
or
and
cwtl
dec
fists
rcrl
adc
adc
inc
push
fldenv
mov
sbb
inc
xchg
xor
shrl
cmpsb
addr16
lret
je
stos
clc
call
inc
jl
pop
sbb
insl
or
or
jns
inc
subl
push
ror
or
int3
data16
cmp
xor
jo
inc
shll
outsl
orl
push
cs
jne
push
cmp
lock
or
sahf
in
mov
stos
and
xor
sbb
cltd
int
jae
insl
ja,pt
fnsave
mov
test
or
push
inc
push
movsl
int
pusha
adc
cmp
mov
jae
adc
mov
popa
mov
iret
scas
cld
xchg
movsl
sbb
addr16
out
jb
out
inc
iret
mov
orl
and
cld
movsl
aas
pop
sti
push
add
adc
cmp
nop
out
aaa
lods
lcall
push
xchg
call
call
mov
adc
call
and
out
pop
das
pop
inc
adc
sbb
jg
jbe
out
sbb
pusha
cmp
cmc
ret
dec
out
aam
dec
jmp
repz
mov
xchg
inc
or
inc
mov
lret
scas
xor
inc
adc
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
ss
cltd
sub
mov
icebp
sub
call
jl
jle
test
xchg
xchg
enter
add
or
hlt
push
les
aas
sti
adc
cmp
add
sub
push
xor
inc
jb
or
xor
and
inc
mov
mov
and
ret
arpl
or
xor
insb
mov
mov
mov
adc
dec
xor
sarb
cld
sbb
cmc
push
test
sub
pshufw
adc
jl
sarl
aam
and
jno
stos
pop
push
pop
push
push
sub
sub
test
fnstcw
test
sub
mov
insl
xchg
push
adc
push
sub
mov
jns
and
rorl
je
jl
jns
or
shr
jl
xlat
aas
add
fldl
cmc
xlat
flds
inc
jg
or
insl
pop
movsb
add
addr16
add
xor
out
mov
popa
scas
mov
jb
jo
lds
mov
sar
stos
es
hlt
pop
lock
ja
mov
jg
sbb
jnp
xor
shlb
imul
sti
lds
sub
add
jmp
movsb
mov
jge
scas
adc
xor
jl
mov
outsl
cmc
ficomps
xchg
aaa
jp
pop
fimuls
push
lods
pop
test
das
leave
repnz
ljmp
add
ljmp
pushf
outsb
clc
stc
ret
or
out
sbb
jg
mov
xor
and
pop
mov
or
movsb
ret
or
jmp
movb
mov
mov
cmp
rclb
adc
insl
adc
out
test
inc
popa
ja
arpl
or
inc
out
repnz
lret
push
lods
fdivrp
cmpsl
sub
call
and
mov
push
sbb
pmuludq
adc
mov
xor
inc
xchg
xchg
push
loop
sub
lea
popf
daa
in
jmp
fstpt
xor
testl
pop
je
ret
mov
mov
es
xchg
and
cmpxchg
jae
dec
jecxz
ret
mov
jae
push
xchg
jb
jp
cwtl
and
lds
test
fwait
cmpsb
adc
lahf
es
mov
fwait
test
shll
lock
cmp
rcll
sub
add
int3
pusha
push
push
xchg
fsts
fistl
cmp
rcl
xchg
nop
xchg
and
stc
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
jmp
fnstenv
sub
mov
jae
jns
xor
jl
jle
data16
jle
jbe
stos
std
xor
pop
mov
mov
and
jne
cmc
add
arpl
ret
out
push
sub
sbb
mov
repz
add
push
push
xor
dec
lock
jmp
jbe
push
fistps
sbbl
xchg
packssdw
repz
pop
cld
nop
fisubs
inc
mov
sbb
out
negl
enter
jmp
pop
mov
stos
mov
in
dec
pop
pushf
jl
cmc
xchg
fsubrs
popf
jle
inc
sub
cmp
mov
xchg
popa
shr
and
jbe
jns
add
cmp
les
pop
fmull
xchg
es
pop
add
daa
jb
jne
notl
cld
xchg
xchg
addr16
xor
mov
outsl
push
push
je
push
cmpsb
lea
scas
push
sub
xchg
jg
add
cmc
mov
icebp
daa
fadd
push
add
imul
push
dec
mov
int
daa
or
scas
daa
fldl
dec
fidivrs
pop
out
std
mov
cmp
mov
push
push
add
mov
out
loop
sbb
fmuls
pop
push
jmp
jge
mov
movsb
push
or
inc
adc
dec
pop
and
and
and
inc
test
cmp
rcrb
mov
cmc
sub
mov
out
pop
add
js
mov
or
cld
pushf
lret
lock
dec
xor
xor
dec
jmp
ret
or
out
dec
pop
jl
mov
mov
sbb
and
and
inc
popa
movsb
mov
out
mov
mov
push
ds
ret
jbe
cmpsb
jne
cmp
cmp
das
sub
add
fidivrs
into
push
push
mov
push
cmpsl
xor
push
nop
push
dec
sub
aad
lcall
jno
jge
loopne
mov
sahf
jge
xchg
aad
mov
imul
movsb
pop
xchg
push
pop
pop
out
sub
call
pop
dec
lods
test
mov
adcl
pop
inc
pop
cld
pushf
ret
jle
int
lods
fidivs
dec
and
mov
sbb
mov
push
inc
fsubrp
imul
loopne
lret
movsb
xor
mov
mov
jns
pop
pop
or
test
pop
sbb
mov
js
push
xor
popf
or
mov
inc
xlat
ljmp
jo
push
xor
pushf
sub
jae
xchg
clc
and
lods
sbb
dec
inc
xchg
dec
ss
add
mov
mov
mov
mov
jmp
lods
mov
jno
mov
stos
jb
sbb
jmp
data16
jle
pusha
bound
cld
pop
mov
pop
xor
outsb
into
movsl
lds
in
movsb
mov
xchg
jns
fadds
iret
jno
cwtl
and
mov
ja
mov
sbb
push
repz
and
mov
cmc
gs
outsl
cmp
loope
sub
out
lds
mov
int
pop
stos
insb
movsl
test
js
leave
fdiv
int
jmp
and
xor
mov
xchg
and
insb
ja
ja
dec
adc
pop
aas
pop
jle
xchg
sub
jne
aaa
cwtl
adc
dec
mov
repz
push
cmpsb
mov
js
push
sub
add
in
sbb
mov
jp
push
sbb
roll
stos
into
adc
inc
dec
dec
int
dec
insb
cld
jno
pop
pop
movsl
ds
or
adc
add
xchg
push
add
sub
sbb
movsl
fmul
or
addr16
mov
and
cmpsb
ds
jp
mov
out
xchg
pop
dec
or
inc
rorb
mov
pop
leave
negb
xchg
xor
aad
xor
or
mov
mov
or
inc
ret
leave
xchg
jg
sbb
mov
cmpsb
lock
imul
test
out
insb
inc
jmp
mov
fists
lcall
jmp
out
in
sbb
xor
xor
scas
mov
outsb
into
jle
leave
js
insl
popa
push
xchg
shll
icebp
inc
mov
in
mov
stos
sub
shlb
pop
rclb
lcall
gs
xchg
dec
test
mov
xchg
mov
test
orb
lea
cld
adcb
dec
inc
jb
aad
push
push
inc
push
lods
mov
or
add
mov
loop
out
or
mov
push
pop
sbb
out
lea
out
add
jns
movsl
lret
pop
aaa
mov
jmp
mov
outsb
fwait
xchg
arpl
mov
cmp
push
test
out
rcrl
notl
pusha
xchg
cmp
stc
scas
rcr
pop
inc
mov
in
xchg
jecxz
mov
xchg
ss
adc
dec
and
sub
xchg
inc
das
pop
popa
mov
sub
pop
mov
add
fdivrs
lds
pop
fnstcw
cmp
lods
test
lods
pushf
jmp
movsl
mov
pushf
xor
mov
in
icebp
mov
adcb
mov
xor
shlb
clc
add
add
imul
add
jmp
xchg
lods
mov
mov
jae
bound
xchg
in
mov
data16
jle
in
pop
sbb
hlt
jmp
adc
sbb
cli
paddb
lret
pop
or
mov
mov
jle
popf
in
jmp
mov
xchg
xor
aaa
and
mov
add
pop
ja
das
lds
jo
inc
jae
mov
jg
jb
push
and
jae
dec
mov
push
or
mov
das
imul
fnstsw
lcall
jmp
imul
mov
or
cmp
andb
push
cmp
xchg
jle
fcompl
xchg
cmp
mov
cmp
fucomp
mov
es
out
rorl
dec
push
sbbl
outsb
adc
pop
aam
shlw
sbb
pusha
pusha
sbb
out
pop
jae
dec
mov
inc
inc
inc
fcomps
cli
test
pop
dec
cmc
jnp
sbb
je
mov
mov
jns
pop
and
xchg
xor
sbb
hlt
mov
sub
movzwl
lock
push
dec
or
jns
lods
outsl
leave
pop
dec
mov
mov
ljmp
dec
push
lahf
movsl
mov
mov
das
xor
dec
lret
jns
leave
jnp
dec
add
add
int
jle
into
pushf
pop
pushf
fwait
jae
pop
adc
jne
jge
push
insl
xchg
cmp
int3
add
aas
test
rcl
pop
outsb
in
fimull
movsl
lcall
ret
iret
cwtl
mov
ret
or
sub
aam
in
out
cvttps2pi
push
imul
and
mov
popa
jecxz
cwtl
call
inc
rclb
dec
push
repz
or
and
and
daa
enter
idiv
dec
xchg
xchg
out
dec
lds
sti
inc
mov
jle
inc
sbb
mov
add
cmp
popa
lds
inc
enter
fdivrs
xchg
ja
sahf
inc
stos
pop
mov
jne
stc
cmp
jns
lahf
bound
pop
jl
push
out
out
sbb
pop
xchg
dec
lahf
shr
lock
das
dec
mov
roll
sub
sub
ja
stos
mov
ds
jnp
cli
mov
sub
pop
nop
in
inc
jp
xor
movsl
pop
fwait
pop
popa
or
cwtl
add
and
pop
dec
js
inc
decl
lcall
jne
jb
xchg
pushf
push
nop
or
ret
add
mov
es
push
cli
int3
insl
mov
lcall
addb
sahf
test
cmp
or
fisubs
lds
les
cmp
mov
aaa
fiaddl
fmull
push
sbb
and
push
and
push
in
mov
mov
xor
add
jmp
cld
jmp
adc
inc
jno
faddl
add
data16
jle
xor
add
sbb
adc
adc
push
and
xchg
push
xchg
pop
addl
fldt
insb
cmp
lock
fbstp
movsb
in
fwait
sbb
pop
mov
mov
xor
cmp
and
shlb
das
mov
addl
dec
cmp
sub
mov
mov
jno
push
je
and
xchg
jnp
adc
mov
or
xchg
xor
cld
nop
cmp
push
daa
test
push
out
add
loopne
mov
xor
xchg
jle
sbb
xor
lods
mov
mov
std
cmpl
lods
xor
lret
cmp
inc
pop
sbb
sub
jo
dec
lahf
sbb
lods
inc
sti
out
push
and
cli
pop
dec
xor
sbb
adc
xchg
test
insl
fsts
push
or
shlb
sbb
cmovg
push
bound
sti
cmpsl
jle
sub
inc
stos
jnp
xor
jmp
fwait
jmp
xchg
mov
test
jecxz
xchg
movsl
push
dec
fsubs
scas
popa
hlt
or
sbb
and
cwtl
popa
add
mov
xchg
aad
cld
push
mov
outsl
jmp
mov
or
xchg
xchg
and
lcall
pop
adc
inc
stc
das
sub
lret
in
ret
mov
push
addb
and
adc
mov
arpl
outsb
movsb
cmp
xor
jecxz
fbld
mulb
mov
lret
clc
xchg
push
sub
mov
dec
or
js
jg
dec
repnz
ret
mov
cld
cmp
push
lcall
imul
iret
cmp
das
sub
ljmp
sbb
fadds
pop
add
adc
out
loopne
addr16
mov
fidivrs
sahf
push
mov
sub
insb
fwait
xor
cmp
xchg
shlb
sub
sarb
cmpsb
adc
call
test
pop
lret
dec
mov
sub
dec
sub
mov
js
lahf
xor
mov
pop
cmp
sbb
pop
insb
stos
inc
popf
out
js
in
outsb
dec
les
cli
stos
inc
xchg
xor
ret
mov
or
clc
inc
mov
call
xor
mov
push
jno
push
dec
add
jecxz
dec
pop
js
dec
negl
or
cmp
stos
outsl
in
mov
stos
stos
and
mov
add
leave
push
sbb
mov
jmp
stos
push
mov
xchg
cmp
loope
mov
jae
scas
xlat
mov
xor
sub
mov
jmp
sbb
cmpsl
pop
mov
loope
xchg
or
push
pushf
mov
data16
jle
call
test
lret
pop
sbb
sti
jl
push
push
divl
jae
mov
imul
adc
and
sbb
xor
loopne
inc
sub
mov
cmp
cmp
lock
inc
pop
push
mov
add
imul
jb
add
mov
cwtl
andb
dec
sbb
outsl
and
dec
movsb
aad
mov
test
inc
jmp
stos
dec
mov
ljmp
shll
fldl
jae
or
mov
dec
dec
aad
mov
sarb
push
clc
push
mov
xor
mov
and
out
xchg
call
or
xor
out
sub
xor
mov
test
leave
or
arpl
movsb
arpl
enter
lods
cmp
push
sub
mov
pop
add
rcrb
lds
rorb
imul
xor
int
gs
xor
into
adc
stc
cmp
lahf
sbb
pop
mov
popf
leave
aaa
fcompl
push
mull
xchg
in
fsts
repnz
sbb
adc
lahf
sub
jo
adc
sub
jo
test
pop
pushf
ljmp
adc
aad
cmp
or
scas
push
pusha
stos
xor
out
xchg
notl
sbbb
jnp
sub
jp
add
sti
imul
pop
outsb
out
xchg
xchg
jb
fbstp
jp
insb
pop
lret
xchg
lea
push
sub
test
and
and
insl
repnz
pop
je
leave
mov
jp
sbbb
addb
mov
test
inc
mov
xor
or
jp
insl
pop
lock
and
mov
xor
shll
push
sub
mov
fstl
jno
xchg
sahf
push
stos
in
fildl
scas
add
xor
scas
ja
adc
dec
in
fcmovnu
pop
pop
mov
aam
push
insb
xchg
jne
adc
push
mov
or
ja
mov
xor
ror
test
data16
dec
stc
call
jle
fiadds
outsl
push
jmp
cmp
int3
add
ss
adc
in
inc
and
bound
popa
jge
mov
adc
cli
in
inc
and
dec
mov
and
mov
or
aam
or
gs
insl
xchg
shlb
cmp
fs
adc
in
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
jmp
rcrl
popf
and
scas
mov
into
jle
mov
data16
jle
movsb
and
call
mov
dec
sub
dec
pop
mov
mov
in
fiaddl
mov
add
scas
mov
adc
mov
pusha
inc
cmp
cltd
sbb
inc
mov
lret
pop
in
test
pushf
dec
xlat
pop
cltd
fcoms
cmc
cwtl
scas
push
arpl
aaa
cmpsl
sub
sbb
loopne
fcmovu
fdivrs
adc
repnz
movsl
sahf
imul
test
ret
pushf
pop
aam
xchg
push
cmpsb
push
lahf
addr16
xor
movsb
lock
mov
xchg
cwtl
xor
pushf
stos
std
mov
cli
mov
in
cwtl
mov
shrd
cmpsl
addb
enter
mov
dec
cwtl
sbb
cmpsl
dec
add
or
jb
inc
sub
stos
or
in
pop
notl
out
orl
ljmp
sub
pop
test
mov
jecxz
pop
andb
cmp
insb
or
test
mov
jns
pop
push
scas
jne
xor
mov
test
popf
push
mov
out
test
cmp
mov
or
adcb
lea
mov
pop
test
imul
or
jmp
dec
mov
mov
lcall
in
push
fdivs
shrb
test
xchg
call
inc
push
pop
add
pop
push
sub
mov
mov
mov
lcall
ljmp
xchg
jo
inc
in
cld
jmp
loop
xchg
push
pop
jbe
push
adcl
rep
or
inc
outsl
adc
aam
push
adc
sub
xchg
sub
inc
add
cld
cmpsb
xchg
adc
mov
inc
sbb
adc
push
movsl
stos
testb
je
fisubl
jnp
adc
iret
ja
mov
popa
mov
cmp
inc
gs
mov
test
push
incl
insl
mov
aad
mov
cmp
test
addl
mov
test
push
shll
and
pop
add
jb
cli
mov
out
pop
dec
pushf
daa
inc
fstps
bound
aaa
mov
pop
push
out
jmp
out
enter
push
and
cmpl
sbb
insb
jecxz
push
mov
xor
std
adc
inc
cmp
js
nop
loop
fiadds
stc
push
pop
outsl
test
cmpl
push
lahf
xor
fisubs
data16
adc
out
outsb
repz
in
ror
jae
xchg
and
fsts
mov
jb
adcb
lahf
fildl
rorl
scas
xlat
mov
jmp
shrl
mov
loopne
cli
pushf
mov
int3
in
xchg
jle
data16
jle
sahf
sarb
nop
push
sub
lods
sbb
dec
jg
add
hlt
into
in
mov
dec
decl
rorl
outsl
fcmovnbe
or
ret
cltd
loopne
out
and
sbb
nop
fwait
pop
fimull
popf
int
fcompl
je
cwtl
clc
cmc
pop
xchg
pop
movsb
rorb
aad
sbb
push
jb
aaa
daa
pop
and
add
xchg
sbb
fsubr
pop
mov
repnz
lcall
jne
loope
hlt
pushf
aaa
pop
je
xchg
xchg
gs
pop
jp
addr16
mov
push
push
pop
push
nop
movsl
dec
jmp
mov
dec
cmp
dec
movsl
fidivl
jp
cmpsl
push
mov
je
and
jp
add
lods
mov
push
andl
lods
js
mov
in
and
lea
xlat
xchg
adc
fadds
mov
pusha
add
jecxz
std
dec
pop
or
addr16
mov
or
int3
insl
loop
rcrl
and
dec
push
outsb
nop
cmp
cmp
pusha
cmp
push
inc
sti
dec
andl
fisubrs
xchg
inc
xor
iret
jns
inc
jle
daa
andb
mov
pop
push
sub
mov
test
scas
fdivr
pop
scas
out
cmp
xchg
fstpl
mov
call
pop
xlat
inc
jg
imul
jmp
jle
mov
dec
mov
mov
aad
xchg
scas
lods
dec
pop
shrb
adc
inc
imul
mov
mov
jmp
sbb
daa
xor
lods
dec
data16
lret
je
and
jge
cwtl
in
push
ret
pop
push
roll
cld
jns
arpl
pop
stos
bound
std
push
dec
frstor
push
add
fsubrl
inc
inc
cmp
mov
jle
sbb
ficoms
jne
pop
jg
jns
hlt
imul
lret
roll
push
xor
and
and
insb
cs
mov
push
pop
je
je
pop
inc
pop
adc
sub
aad
insb
sub
gs
movsl
aaa
dec
frndint
shlb
test
inc
int
pop
jle
fs
mov
fld
adc
gs
or
loope
fimuls
adc
inc
popf
mov
in
sbb
mov
inc
dec
mov
fsubrp
inc
adc
cmp
push
add
movsl
cmpsb
enter
lods
rcl
pop
push
jp
rolb
inc
mov
xor
roll
icebp
notl
repnz
mov
mov
fwait
mov
push
test
xchg
pop
mov
jp
imul
xchg
nop
cltd
push
push
xchg
arpl
into
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
jne
movl
cmp
movl
jne
orl
push
addl
call
push
movl
push
andl
push
call
test
movl
je
sbbl
lea
orl
push
movl
movl
subl
movl
subl
movl
orl
call
orl
test
je
decl
xor
jmp
sbbl
push
andl
push
push
call
movl
jmp
adcl
push
call
sbbl
test
movl
jne
push
mov
add
mov
movl
adc
lea
mov
xor
lea
dec
mov
xor
mov
notl
mov
add
mov
mov
adcl
push
sbb
mov
movl
xor
push
xor
mov
adcl
add
mov
mov
cmp
mov
mov
je
andl
mov
xorl
xor
add
imul
mov
movl
jmp
addl
xor
add
mov
adcl
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
addl
add
sub
mov
movzwl
and
mov
addl
mov
xor
add
movl
cmp
movl
jne
subl
pushl
subl
pushl
subl
call
negl
mov
mov
orl
mov
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
addl
mov
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
sub
mov
addl
mov
subl
xor
addl
xor
add
mov
andl
xor
andl
xor
add
movl
lea
cmp
movl
ja
mov
orl
xor
lea
orl
push
movzbl
xor
mov
mov
addl
xor
lea
adcl
push
xor
xor
sbb
mov
addl
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
dec
jmp
pop
lods
xchg
je
jo
mov
mov
mov
xchg
jle
push
jl
jle
enter
in
nop
or
imul
adc
fsubrs
push
jp
cltd
int
pop
pop
mov
shrb
jecxz
mov
adc
div
hlt
lock
and
cwtl
out
bound
out
dec
sbb
clc
iret
divps
in
mov
fwait
and
mov
sbb
jg
fisubl
fisttps
aam
sahf
jg
xchg
pop
repnz
cmp
lods
dec
into
pop
mov
scas
aad
das
ja
sub
or
push
push
mov
dec
mov
sbb
pop
adc
adc
popa
push
imul
pop
rcrb
jmp
adc
mov
outsl
push
arpl
aas
mov
hlt
add
jg
xor
jne
xor
jecxz
dec
test
push
xchg
test
adc
mov
cltd
fmull
dec
cmp
vpshab
hlt
fimull
roll
mov
mov
mov
push
dec
cmp
jae
pop
loopne
icebp
ja
and
leave
fisubrs
jge
pop
adc
mov
xchg
mov
hlt
adc
sbb
bound
popa
pop
push
push
xor
fdiv
in
and
pop
add
loopne
push
jg
push
lock
xchg
loop
pop
mov
clc
mov
fcos
pop
add
mov
push
dec
xor
gs
in
shrl
mov
mov
cmp
mov
js
adc
cwtl
sahf
cmp
data16
lcall
loopne
fisttpll
push
or
xlat
jne
pop
and
pop
sbbb
sti
pop
jmp
cwtl
lock
adcb
cmp
loopne
xchg
lods
jmp
dec
rol
xchg
sbb
inc
push
scas
push
dec
stos
pop
cmp
xchg
loope
pusha
cmp
call
subl
mov
inc
add
add
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
push
push
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
and
mov
sbb
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
push
mov
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
arpl
jae
jno
lret
jae
sub
xchg
jle
push
jl
jle
into
sub
in
aam
add
mov
pop
adc
or
dec
lods
repz
jecxz
hlt
sub
or
adc
mov
and
xchg
fisttpl
dec
or
ljmp
ret
orl
mov
lock
pop
out
jl
lock
cmpsl
and
mov
inc
mov
movsl
cmpsl
test
adc
in
pusha
pop
xor
pusha
mov
xchg
dec
mov
cmpsl
or
movsl
and
std
sbb
or
fists
gs
xor
add
out
xchg
adc
aaa
sbb
loopne
mov
je
rorb
testb
sub
add
mov
pop
notl
or
mov
retw
test
push
or
jns
rcrb
pushf
movsl
js
and
dec
nop
xor
adc
ss
pushf
push
lods
mov
push
roll
push
sahf
call
mov
or
loopnew
xchg
into
ret
in
mov
xor
stos
mov
lods
dec
mov
sub
adcl
pop
sub
xor
movsb
cmp
cmc
les
out
jp
xor
pusha
jbe
dec
jbe
push
loope
data16
enter
sub
cmc
imul
inc
out
and
stos
test
lret
pop
mov
pusha
cli
mov
fs
les
xchg
imul
dec
jl
lahf
push
cs
or
sti
les
xlat
ja
cwtl
xchg
sbb
sahf
imul
pop
pop
aas
repnz
dec
js
pushf
repnz
pop
add
xchg
out
dec
sub
lock
inc
rcll
mov
ja
push
sub
lods
pop
sub
sbb
shr
inc
clc
jge
ret
sbb
cmpsb
and
mov
add
push
pop
sub
adc
mov
iret
sahf
fwait
mov
xor
jl
adc
add
inc
call
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
jmp
pusha
imul
cmc
mov
stos
insl
aaa
fcmovbe
hlt
xchg
jle
push
jl
jle
jbe
xchg
rclb
mov
sbb
push
std
and
outsb
ljmp
test
and
push
and
cmc
jmp
icebp
adc
scas
in
pop
cmpsb
sahf
out
stos
sbb
fs
sub
dec
mov
sub
xchg
shl
shl
out
call
orb
jb
out
push
sub
loop
push
sbb
sahf
or
xor
cmp
addl
or
sub
xor
xchg
sub
stc
lea
pushf
mov
cmp
cmpsl
inc
pop
sub
out
or
shrl
add
xor
or
repz
or
pop
aaa
test
adc
and
xchg
xlat
lret
daa
push
imul
push
add
in
xor
push
sub
cmp
adc
sub
pop
jns
add
icebp
pop
gs
or
xchg
iret
popf
mov
dec
out
sub
bound
push
ss
or
mov
idiv
stos
mov
lret
icebp
jp
rolb
sub
out
scas
jp
push
or
and
dec
jg
addb
lret
push
fildl
dec
jnp
icebp
dec
dec
add
mov
cmpsl
or
es
cmp
push
rcl
inc
xchg
add
cmp
lea
ds
insl
push
outsl
sub
iret
mov
fcmovbe
sbb
mov
cli
and
xchg
mov
mov
push
shrb
into
test
jecxz
add
push
ds
pusha
es
jecxz
mov
pop
jb
shlb
in
fmuls
adc
fwait
daa
cmp
mov
jg
rorl
push
imul
and
mov
call
mov
xor
into
pop
fnstcw
dec
adc
mov
xor
add
mov
mov
mov
mov
mov
mov
movzwl
add
movl
mov
mov
mov
xor
add
jmp
or
das
mov
push
test
rcrl
jle
push
jl
jle
and
sub
mov
clc
push
test
into
mov
inc
jnp
fnsave
vpsubsb
sbb
int
sub
sahf
push
sub
inc
outsb
cmp
jge
jmp
arpl
outsb
cmpsl
jl
pop
sbb
fistl
inc
rcrl
mov
inc
fst
mov
mov
push
fcmovu
pop
dec
gs
mov
jb
aas
xchg
dec
shll
mov
sbb
or
lock
insb
div
add
jecxz
cmp
pushf
sbb
add
ret
jns
xchg
dec
popf
clc
dec
mov
mov
aam
lret
fbld
test
aam
aam
clc
cmp
pop
push
mov
pop
mov
cmpb
call
cli
mov
jecxz
dec
outsb
lods
arpl
addr16
out
pop
pop
jmp
in
fwait
pop
xchg
fwait
into
inc
jge
mov
imull
rolb
pop
js
daa
fcmovnb
jns
xchg
or
inc
out
xor
leave
push
sbb
sub
or
shll
sub
mov
lret
filds
cmc
pushf
add
xor
aad
lds
nop
cmpsb
jge
cmp
sbb
cwtl
jge
mov
test
mov
popa
es
gs
jbe
adc
inc
xlat
and
test
pop
mov
mov
add
or
mov
stos
xchg
test
ja
stos
imul
xor
adc
xor
js
and
lds
mov
iret
cmpsl
sbb
inc
jmp
mov
nop
loope
outsb
aam
ror
xchg
adc
cmp
mov
mov
je
mov
aaa
cmp
inc
sbb
jo
inc
popf
insl
xor
inc
add
ficoms
leave
inc
out
out
dec
pop
adc
filds
mov
cld
bt
sub
add
sbbb
cltd
jno
jo
mov
popf
jle
push
jl
jle
add
fs
mull
xor
fsubrs
test
mov
data16
sub
xlat
mov
or
pop
and
xchg
sub
cmpsb
insl
sbb
lahf
popl
xchg
mov
pop
fadds
mov
mov
mov
pop
mov
and
shl
pop
add
stos
adc
jg
into
jo
or
andl
add
leave
or
mov
loope
pop
xlat
outsl
sbb
or
mov
dec
inc
shll
movsb
in
xor
cmp
in
xchg
ds
test
hlt
xchg
int3
pop
lds
mov
insl
inc
lea
in
dec
xor
adc
shlb
je
xchg
jecxz
lret
mov
mov
aad
adc
outsl
sub
mov
jne
sub
lret
jnp
add
lock
fwait
dec
addr16
mov
mov
test
adc
mov
subl
shll
out
inc
cmp
icebp
mov
inc
imul
xchg
cmp
subl
dec
add
insl
test
mov
rorb
pop
or
mov
loopne
sbb
cmp
pop
test
jmp
scas
xchg
fldenv
adcb
mov
push
std
jp
push
mov
movsl
sbb
arpl
icebp
sarl
adc
push
mov
xor
cmp
xorl
fldl
repz
xlat
xchg
lods
xor
xor
mov
mov
cmp
scas
mov
lods
sub
pop
bound
pop
jo
cmpsb
popf
xchg
sbb
add
inc
mov
lods
sub
or
and
mov
int3
mov
mov
je
mov
pop
cmp
int3
es
test
test
or
add
sub
add
xchg
mov
icebp
inc
cs
pop
adc
repnz
fwait
jle
push
jl
jle
and
jmp
xchg
fldcw
dec
xor
lret
cmp
adc
add
ret
sbb
add
adc
out
loopne
test
fisttpl
pop
cmp
dec
xchg
dec
ret
pop
push
out
das
repnz
cmp
xor
lods
adc
xchg
xor
inc
mov
imul
cmp
aaa
xor
aam
mov
adc
les
shlb
outsb
je
fs
xchg
cmpsl
es
sub
push
jecxz
jg
xchg
inc
daa
push
inc
pop
daa
push
repnz
or
pop
int
dec
mov
movsl
xor
and
dec
jno
xchg
sbb
lods
cld
dec
push
loopne
loop
out
jp
iret
ljmp
cmp
jl
xchg
aas
decb
loop
push
fld1
frstor
lds
inc
das
cwtl
shrb
popa
mov
push
mov
call
es
dec
stos
and
outsb
sub
jecxz
fildl
cmp
jg
mov
or
pusha
adc
das
or
ljmp
mov
mov
mov
test
out
sub
fisubl
and
or
lcall
jo
pushf
dec
movsb
shr
stos
mov
movb
xchg
pop
xor
mov
or
jnp
icebp
lea
add
js
mov
dec
dec
in
sbb
std
ret
or
cli
insl
out
sbb
jb
lods
sub
aas
push
sahf
iret
repnz
cmp
and
xor
out
mov
loop
inc
cld
fbstp
pop
out
adc
cmpsl
pop
cmp
std
sbb
jno
sub
jp
mov
mov
rclb
jl
pop
pop
shll
movsl
lods
test
pop
add
pop
cmp
mov
mov
xor
add
cmp
jmp
dec
iret
lods
dec
lods
imul
jle
fwait
test
jle
push
or
insb
out
push
mov
out
cmp
push
jp
mov
mov
mov
mov
sti
and
lahf
into
jns,pn
add
call
popf
sub
imull
je
addr16
inc
and
push
movsb
pop
mov
enter
out
cmc
imul
xchg
in
psubq
pop
and
test
xor
pop
sahf
enter
inc
jo
cltd
addr16
add
xor
mov
push
test
stc
repnz
fildl
dec
sti
push
sub
ljmp
pop
cmpsl
add
sbb
loope
cmp
dec
and
mov
xor
mov
cmp
mov
inc
adc
fsubs
and
dec
jmp
mov
loopne
ja
cwtl
mov
outsb
xor
push
jg
cltd
xor
iret
inc
into
jle
push
xchg
lcall
aam
shll
sti
push
jae
mov
xchg
inc
jecxz
sbb
xor
dec
inc
mov
dec
out
lods
pop
call
pop
pop
sub
pusha
in
add
movlps
jb
rolb
jmp
pop
add
clc
cltd
ficoml
fisubs
mov
cld
mov
and
dec
push
pop
jge
adc
test
dec
mov
mov
insl
ljmp
pop
loope
xor
ljmp
icebp
mov
jl
cmp
xchg
dec
stos
movsb
scas
mov
aaa
stos
mov
push
push
div
mov
test
mov
dec
mov
stos
mov
xchg
push
sahf
sub
or
cmpsl
mov
add
repz
jb
test
div
shll
repnz
jno
or
pusha
movsl
lahf
pop
cs
or
xchg
and
daa
mov
cmpsl
mov
inc
cmpsl
psubb
pop
arpl
out
dec
mov
stc
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
jmp
lret
mov
or
and
jb
adcl
push
jl
jle
data16
and
mov
imul
fdivs
push
sbb
jge
rorb
stos
dec
jle
push
push
jnp
adcl
sub
add
shll
shll
pop
fcomi
cmc
cs
lret
gs
mov
mov
rcl
pop
mov
jg
lret
xchg
sarb
pop
pop
fimull
mov
aam
xchg
push
mov
popa
xor
xor
not
jecxz
adc
sub
jno
pop
push
imul
xor
fistps
insb
aad
popf
mov
inc
loope
js
push
daa
call
or
adc
outsb
es
iret
mov
adc
clc
mov
stc
adcb
and
aam
arpl
aam
ficomps
dec
scas
mov
movsb
and
sbbb
scas
insl
call
jae
out
mov
pop
sub
je
inc
dec
lret
insb
std
push
mov
jae
ds
aam
jne
inc
xchg
loopne
push
add
mov
leave
sbb
in
popa
mov
loopne
jne
mov
stc
mov
scas
lds
jno
aad
sbb
adc
js
lods
punpcklwd
pop
fmull
sti
data16
or
sbb
sub
or
imul
push
mov
lods
ret
mov
fmul
mov
popf
ljmp
xchg
in
push
ss
test
test
jg
cmpsb
shrb
repz
push
lcall
out
xchg
dec
xchg
fnstsw
outsl
out
dec
xchg
clc
int3
push
adc
mov
cmp
pop
push
iret
jp
sahf
mov
addl
cmpsb
xor
insb
adc
jecxz
inc
cwtl
pop
scas
cmpl
xchg
lahf
call
mov
out
jle
cwtl
sbb
add
or
and
xchg
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
jmp
popa
ja
add
xorl
inc
mov
aam
movsl
jle
push
jl
jle
push
fstpt
lahf
mov
jb
push
mov
cmp
mov
and
mov
inc
mov
aam
std
dec
mov
lods
es
mov
sbb
lea
adc
call
xor
jns
pop
cli
dec
jecxz
negb
aad
mov
dec
push
inc
xchg
adc
xchg
in
es
out
xchg
add
faddl
inc
in
mov
or
ret
push
bound
cmp
sub
fimull
adc
pop
xlat
pop
hlt
xchg
sahf
pop
pop
icebp
cld
fnstsw
inc
push
ret
xchg
adc
pop
loope
pop
mov
push
into
add
jb
cltd
rcrb
sbb
mov
push
lods
mov
bound
xor
ljmp
xor
xor
mov
inc
cmc
xchg
aaa
and
pop
inc
es
fucomi
sbb
mul
int3
outsb
mov
inc
fndisi(8087
pop
pop
cmc
xor
add
push
inc
test
dec
enter
sbb
ds
mov
jge
pop
sbb
fistl
mov
sub
xchg
sub
fs
sbb
cmp
movsl
mov
fcoml
outsl
lods
daa
push
adc
add
mov
push
add
les
mov
pop
inc
test
push
pop
int3
fcmovnu
xchg
in
cmp
popf
xchg
into
jecxz
sbb
add
cwtl
aam
pop
dec
addr16
aaa
not
dec
dec
es
movb
pop
lods
mov
fisubrs
insb
lret
les
int
sbb
xchg
push
cmp
idivb
outsl
push
cltd
mov
cltd
xlat
lea
mov
jecxz
adc
dec
push
cmc
mov
push
pushf
mov
test
mov
repnz
cmp
leave
mov
add
or
out
test
fnstcw
pop
in
ss
mov
les
sbb
outsb
icebp
xor
jne
inc
jae
or
or
testl
sldt
add
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
cli
subb
cmc
stos
inc
push
jo
inc
xor
or
push
jl
jle
popa
out
insb
xchg
leave
out
jns
sub
test
xchg
loopne
cmp
cwtl
es
jl
mov
jo
dec
hlt
sti
pop
inc
push
pop
aam
and
xlat
and
xor
push
xchg
cmpsl
dec
sahf
lods
loopne
sub
popf
inc
cmpsb
clc
mov
hlt
test
fisubs
or
daa
fcomps
insl
xlat
repz
cmpl
mov
out
dec
in
and
adc
data16
in
movsb
sub
lcall
jp
clc
dec
stos
dec
xor
rcll
out
sub
push
into
not
mov
inc
add
addr16
movsb
movsb
xor
clc
mov
insb
mov
sar
ja
inc
call
cmpsl
inc
sub
testb
test
je
ds
or
stc
lea
ret
scas
repz
call
incb
fmull
test
mov
mov
push
and
pop
xchg
in
add
xchg
out
test
lret
imul
aas
mov
mov
out
into
pop
adc
mov
test
mov
jnp
mov
mov
cmp
fists
sub
ret
jae
add
xchg
cmp
xchg
jecxz
aas
flds
mov
in
je
push
das
imulb
ljmp
mov
int
scas
xchg
test
ficomps
adc
xchg
vunpckhps
mov
leave
out
cmp
sub
movsl
push
xor
ja
fwait
dec
leave
stc
loop
pop
mov
mov
mov
jnp
scas
bndstx
push
push
cmp
sti
pop
jl
mov
mov
or
in
cltd
or
out
test
adc
cld
cmp
or
daa
cmp
xchg
pop
xor
inc
mov
mov
xor
add
jmp
rcrb
gs
icebp
cltd
mov
and
add
mov
jle
xor
xor
cltd
iret
mov
daa
sbb
add
inc
xchg
jg
arpl
ds
lods
pop
sub
mov
fwait
add
xchg
les
int3
fadd
push
je
out
pushf
mov
mov
pop
xor
mov
pop
pushf
incb
xor
shrb
hlt
sbb
lfs
arpl
fadds
mov
push
fisttpll
mov
aaa
or
or
test
out
es
je
jge
mov
stos
lcall
inc
xchg
xor
lret
adc
jne
jge
dec
in
pop
pop
xor
jns
icebp
pusha
ss
ret
loopne
mov
jnp
xchg
leave
in
xchg
sbb
adc
or
push
inc
sub
std
pusha
mov
pop
nop
hlt
jb
pop
in
into
xor
xchg
xchg
pop
sub
sub
cmp
insl
aam
jp
mov
adc
inc
push
lahf
test
jne
add
push
mov
xchg
adc
add
aas
das
pop
sbb
shrb
stos
repnz
fidivrs
jg
icebp
imul
jns
jne
add
mov
jge
lods
subl
aas
popf
sbb
imul
or
mov
in
iret
inc
rclb
fst
adc
mov
and
add
popa
aaa
mov
xor
scas
pop
dec
sti
or
sbb
dec
push
scas
pop
stc
sub
mov
push
jnp
bound
std
mov
cmpsb
push
cmpsl
ljmp
sub
enter
outsb
addl
add
mov
mov
insl
or
pop
int
inc
fisttpll
mov
loopne
test
rorl
push
push
push
mull
sbb
or
inc
cmp
daa
jp
dec
cld
fildll
jp
ss
in
inc
jg
aad
cmp
je
mov
mov
mov
mov
jmp
js
sbb
cltd
ja
jno
cli
xor
sub
lods
jle
push
jl
jle
arpl
pop
stc
xor
pcmpgtw
jl
je
mov
std
or
or
cmp
sub
jmp
pop
mov
hlt
in
sbb
divb
sarl
out
or
lds
xor
pop
popa
fildl
add
push
cmp
pop
fisttpl
sar
mov
inc
adc
adc
movb
jno
pop
jne
shlb
inc
into
lcall
mov
mov
lret
mov
adc
lods
loop
cmp
out
into
lds
inc
das
popa
push
mov
cmp
push
inc
das
ret
daa
sub
cmpb
sbb
or
jmp
lret
in
push
inc
mov
insl
bound
or
clc
mov
xor
in
jmp
mov
mov
adc
xchg
and
sub
mov
lds
stos
aad
push
in
fs
or
movsl
mov
pop
add
frstor
repz
jp
cmpsl
mov
add
add
in
lods
cwtl
pop
xchg
fimull
bound
jmp
cmp
sbb
scas
fwait
cmp
cmpsl
aas
dec
and
jo
gs
int3
mov
pop
xchg
adc
or
add
fldenv
std
jl
ja
mov
in
jo
clc
repz
loop
rol
inc
lahf
mov
leave
iret
add
cmp
out
cmp
inc
mov
ss
stc
cltd
lahf
fs
cwtl
dec
mov
push
adc
outsb
cmp
xor
cld
mov
mov
lea
adc
leave
repz
and
out
cmp
jmp
cwtl
shll
aaa
je
xchg
pop
push
addr16
aaa
gs
push
lahf
stos
cmpsb
pop
mov
and
bnd
pushf
mov
cmp
and
push
mov
ja
mov
inc
clc
xchg
in
inc
dec
sub
pop
test
int
add
add
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
jmp
and
xor
adc
push
in
pusha
imul
jl
jle
or
mov
not
inc
pop
sbb
xchg
outsb
rorl
mov
pop
jne
or
or
push
sbb
mov
dec
cmp
inc
call
mov
sub
sbb
shlb
test
lea
sbb
filds
test
xchg
push
adc
aad
push
ss
pushf
mov
fnsave
insb
int
std
lds
lds
inc
scas
loope
mov
sti
sub
pop
cmp
lock
mov
stos
test
ljmp
sub
adcl
inc
loope
inc
fstps
lcall
mov
cmp
hlt
jbe
add
ljmp
sbb
or
adc
push
mov
dec
push
rcr
or
lds
sbb
addr16
xor
ret
mov
ret
push
pop
jo
cmc
push
lcall
pop
shll
data16
or
enter
adc
cmp
push
loope
sbb
or
mov
xor
insl
sbb
cmp
xlat
hlt
sbb
inc
testb
stc
mov
stos
in
mov
sbb
sbb
dec
cmp
cmc
sbb
test
jns
and
push
cmc
sbb
out
js
cmp
push
and
cmp
mov
xor
popa
jmp
aam
lcall
xchg
dec
out
orb
dec
pushf
ds
dec
jns
nop
lds
shlb
mov
loop
iret
or
mov
popa
in
adc
outsb
fldcw
push
repz
pop
inc
lsl
pop
vunpckhpd
pop
inc
loopne
out
or
das
inc
je
mov
movsl
lahf
mov
jne
inc
mov
mov
scas
adc
int3
dec
ret
sbb
data16
mov
out
mov
in
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
jmp
sub
add
popa
push
in
jno
mov
in
lret
test
jle
jl
jle
inc
pop
roll
adc
and
aas
mov
mov
xchg
pop
jp
ret
cltd
repnz
test
jo
dec
sbb
aam
test
aad
pop
addr16
mov
clc
adc
clc
mov
popf
cmp
sub
pop
dec
jecxz
js
sti
xor
lcall
shrl
andl
addl
adc
fs
fwait
test
daa
sub
pop
mov
mov
mov
or
sti
das
jl
ja
adc
sbb
or
cmpsl
pushf
cs
push
out
shr
push
notl
push
enter
addr16
into
adc
adcb
adc
xor
mov
dec
pop
xchg
bnd
mov
filds
dec
dec
mov
inc
dec
xor
cmp
daa
pusha
shll
sbb
insb
les
xchg
fbld
or
push
arpl
into
adc
pop
mov
inc
negb
jb
sbb
push
movsb
adc
loopne
ja
test
fs
cld
js
repnz
mov
test
mov
dec
mov
lret
or
xor
jecxz
dec
push
repz
cmpsb
mov
cmp
add
nop
mov
xchg
int
cli
fisttps
nop
add
addr16
mov
inc
dec
mov
push
testb
into
imulb
inc
repnz
mov
leave
arpl
jae
jl
lea
ljmp
sbb
sbb
xor
sub
in
sahf
repz
mov
xorb
andps
add
fisubl
push
pop
add
nop
mov
insl
testb
int3
mov
push
sbb
daa
push
ljmp
xchg
sti
mov
xor
add
add
in
popf
push
mov
cmp
mov
jle
jl
jle
or
lock
out
inc
push
pop
jmp
or
mov
dec
cmp
cmpsl
lcall
pop
push
sub
fcmovnbe
popf
mov
test
jge
jae
jo
mov
cmp
test
outsl
add
jno
jnp
mov
out
cwtl
mov
dec
add
jmp
jg
in
inc
scas
ror
pop
into
mov
add
popf
jmp
jecxz
scas
pop
test
or
xchg
call
jno
out
jge
pop
jg
lret
push
mov
xor
loop
rorb
xchg
push
shr
fimull
fcoml
call
or
scas
stc
xchg
mov
mov
or
test
inc
and
and
cli
ja
mov
das
jae
sbb
sbb
adc
in
and
sbb
adc
cmc
adc
movsl
loop
out
dec
xor
shr
int3
test
sub
int3
push
jle
iret
add
xor
jae
xor
popf
or
movq
outsl
adc
outsb
pushf
pop
pop
lods
clc
dec
jae
sbb
mov
lock
out
ss
mov
jmp
mov
std
dec
push
sbb
cwtl
ret
les
xor
sarb
fwait
mov
mov
and
orl
lods
sub
mov
ret
jbe
popf
stos
add
mov
cmp
or
mov
inc
jno
orb
xor
jns
or
mov
int3
enter
arpl
pop
cs
xchg
outsb
dec
jge
cmp
lods
or
aas
sub
loop
test
jae
inc
fnstcw
add
and
fs
bound
cmc
aas
push
sub
dec
mov
or
mov
sahf
xchg
mov
iret
mov
push
jl
movsb
lock
jmp
mov
add
and
sbb
or
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
jmp
iret
dec
mov
mov
icebp
dec
fadds
or
mov
jle
jl
jle
mov
dec
stos
xor
fldlg2
fistpll
pop
cmp
ljmp
mov
scas
outsl
fxch
pop
rolb
jb
jb
movsb
pop
mov
inc
cmc
mov
ds
or
inc
or
pop
aad
call
adc
cmp
leave
sti
sub
mov
into
adc
jge
icebp
adc
lds
push
call
or
and
insb
jle
fstpl
sub
out
call
mov
jp
jns
jae
in
jns
add
mov
push
data16
mov
xor
cwtl
mov
mov
inc
add
ljmp
push
cwtl
add
push
pop
jl
adc
iret
mov
fistpll
dec
std
clc
out
sbb
and
xchg
push
repz
movsb
cmp
mov
pop
call
insb
push
movsb
cwtl
pop
repnz
xchg
mov
dec
sbb
sbb
sub
mov
sbbb
sub
pop
in
cwtl
subl
xchg
mov
jl
mov
inc
pop
add
and
sbb
or
cmp
xchg
fwait
or
pushf
cltd
scas
cmpsb
mov
cmp
mov
das
movsl
sti
mov
and
inc
xor
cld
push
or
in
rcrb
sbb
jmp
fs
push
cmc
or
and
dec
adc
dec
test
out
xchg
xchg
jecxz
pop
imul
sbb
in
nop
jl
inc
or
mov
xchg
fwait
adc
addl
xor
adc
sbb
inc
xor
mov
aaa
xchg
lea
push
mov
pop
add
mov
add
ficoms
push
mov
jo
mov
mov
sub
not
xchg
xchg
inc
push
sub
jbe
xchg
shrb
sub
xchg
sbb
addr16
mov
rolb
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jb
movl
mov
andl
mov
add
jmp
out
xchg
aaa
jne
gs
xor
sub
lds
jne
mov
jle
jge
jle
sub
insl
mov
lea
mov
sub
mov
stc
xchg
scas
pop
enter
stc
jg
test
ds
and
push
mov
add
std
jb
int3
dec
into
out
shrb
pop
sub
testl
fidivs
iret
cmpsb
out
dec
xchg
shll
mov
gs
jae
shlb
fwait
aad
nop
push
xor
jnp
push
lods
dec
add
cmpsb
push
rolb
and
push
cmc
imul
out
push
imul
rcll
inc
jle
inc
roll
push
insl
inc
stos
jecxz
or
aam
imulb
add
ds
outsb
cmp
aas
dec
test
or
or
sbb
insb
lahf
xchg
jmp
push
cmp
stos
enter
aas
ja
movsl
lds
cld
cmp
push
mov
mov
int
shlb
loopne
push
jb
inc
cmpsb
cmp
nop
stos
inc
pusha
ljmp
data16
sub
les
mov
aas
push
ds
sbb
sbb
sub
out
mov
xchg
bnd
add
ficoms
push
negl
es
imul
aad
in
sbb
or
call
ja
unpcklps
sti
or
adc
pop
dec
sbb
mov
js
scas
out
fcoml
fmuls
scas
repnz
lods
enter
sbb
xchg
xor
int
mov
pop
jg
pop
icebp
or
lcall
or
jecxz
lret
xchg
adc
push
aam
notl
es
or
add
packsswb
push
loopne
pop
push
flds
xor
scas
fsubs
sarb
jle
or
scas
test
shll
pop
shlb
mov
add
mov
enter
ljmp
cli
nop
fsubrl
add
pop
movsl
into
xlat
mul
jno
notb
mov
sbb
lcall
repz
out
je
jno
pop
and
sbb
cmp
inc
mov
mov
in
filds
out
or
jle
popl
icebp
jbe
mulb
repnz
add
lods
ds
int3
mov
arpl
negb
daa
mov
or
call
mov
ss
and
ljmp
xchg
orb
adc
sbbl
pop
mov
xchg
fbstp
mov
mov
outsl
sbb
mov
lods
push
push
push
stc
push
mov
repz
add
test
prefetch
push
adc
push
dec
jae
arpl
in
adc
scas
add
shr
add
scas
daa
sub
cmpsl
leave
and
cmp
movl
jmp
dec
adc
sub
imul
jo
mov
jle
jge
jle
jp
sbbl
add
stos
sbb
jle
ja
sub
xor
mov
movl
add
pop
pop
sbb
lods
in
push
addr16
test
dec
mov
in
cmpsl
lea
inc
and
shlb
cmc
push
shrl
sti
decb
insl
stos
jmp
mov
mov
das
ds
mov
jle
lret
cmp
lods
lods
mov
out
and
iret
push
rep
xchg
insb
adc
pop
in
xlat
call
testb
and
sti
pop
lods
and
sbb
push
mov
adc
data16
or
push
fildll
dec
int3
mov
iret
dec
std
jecxz
mov
aam
cwtl
xchg
les
adc
lds
repnz
movsb
jge
leave
ljmp
or
push
adc
and
lock
dec
rorb
mov
ja
out
fidivs
push
popf
jnp
shlb
or
mov
adc
insl
mov
loope
push
sbb
ljmp
cs
jnp
test
pop
sub
ficompl
shlb
pop
and
add
cmpsl
inc
bound
sub
xor
xchg
lock
jns
std
jmp
aam
les
sbb
jge
adc
orl
push
sahf
sub
or
add
inc
fadd
pop
imul
sub
dec
add
or
or
jmp
mov
mov
mov
jge
xchg
dec
pop
out
lahf
sbb
insb
cmp
sub
dec
mov
lcall
adc
mov
gs
mov
cs
movsb
pop
mov
mov
lret
push
dec
js
jne
mov
rclb
or
sub
sub
xor
push
push
add
imul
sub
add
ret
insb
mov
jge
cmpsl
aaa
or
cmp
pop
js
xchg
pop
imull
das
jl
stc
mov
inc
shll
mov
clc
jecxz
inc
aaa
imul
mov
add
jp
outsl
fmuls
push
data16
dec
cmc
movsl
hlt
ljmp
in
iret
test
mov
pop
adc
lea
mov
or
dec
js
cmp
pop
shrb
cwtl
add
jge
push
jmp
mov
daa
iret
dec
ljmp
stc
inc
sarb
jg
popf
cmpsb
leave
fwait
imul
push
repnz
inc
jg
mov
push
jns
mov
cmp
push
ja,pt
xor
jmp
cmpb
hlt
xchg
jns
ss
dec
loopne
inc
jno
and
insb
pop
add
sbb
xor
pushl
inc
push
adcl
jmp
lret
xor
sbb
out
mov
jle
out
inc
insl
sub
cmp
jne
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
fsqrt
std
imul
mov
jo
and
dec
pop
xor
jle
jp
mov
push
and
icebp
lds
pop
sbb
adc
aaa
mov
js
dec
adc
mov
orb
mov
pop
mov
dec
into
scas
std
std
add
fstps
xor
imul
jg
jb
clc
xor
dec
pop
push
xchg
inc
ds
or
adc
push
sub
mov
mov
ss
lcall
cmp
xchg
stos
adc
jecxz
in
adc
movsb
imul
adc
fnsave
fnstenv
repz
ss
lret
push
ds
xor
cmp
enter
inc
dec
mov
push
mov
jecxz
popf
ljmp
jmp
sbb
jp
xor
sarl
jae
xchg
aam
test
sbb
inc
lret
into
stc
xor
jecxz
addb
cmp
in
jmp
xchg
inc
push
jb
dec
pop
aas
push
mov
mov
pop
mov
lods
xchg
push
and
pop
cmp
xchg
fadds
repz
out
arpl
adc
inc
jns
int3
iret
out
leave
gs
cmpsb
xchg
pop
stos
and
adc
mov
add
xchg
test
enter
rorb
adc
in
ret
sub
test
sbb
loopne
dec
mov
repnz
imul
std
push
pop
jae
fldt
cvtps2pi
sub
push
addb
dec
cmp
aad
test
mov
push
mov
test
ret
mov
test
gs
pop
dec
loope
dec
push
push
push
push
push
sbb
mov
sbb
xor
sahf
in
daa
stos
push
xor
cli
adc
ret
inc
jp
imul
aam
and
pop
xor
stos
stc
xlat
or
mov
idiv
aaa
dec
xchg
xlat
jecxz
rcrl
cs
ret
popf
jb
jnp
in
add
fcmovnb
cli
pop
mov
fimuls
mov
ja
mov
pop
rcl
cmp
xor
mov
stos
pop
sub
mov
int3
xchg
in
add
sahf
lds
mov
scas
xchg
cmp
nop
or
in
jnp
and
add
sahf
sti
jnp
and
loope
fsub
cmp
out
std
mov
loopne
cmc
lahf
mov
cmc
fnstcw
aad
xor
or
pusha
cmp
inc
lret
cmpsl
test
pop
in
mov
cmp
cmpsl
loopne
push
arpl
inc
inc
jp
and
pop
xchg
imul
xchg
test
cwtl
enter
inc
and
mov
xorb
js
inc
xchg
adc
fimull
in
jb
adc
fcomp
lock
xchg
dec
sbb
test
xchg
aad
mov
cli
and
lcall
xor
dec
or
dec
cmp
cmp
add
repnz
rep
cmpsl
xchg
or
push
scas
mov
jle
push
jge
jle
jecxz
push
xchg
push
mov
lods
inc
into
adc
lods
aam
movaps
pop
and
xchg
movsb
in
xchg
jp
imul
xchg
push
mov
jge
ljmp
dec
sbb
mov
aas
pop
loop
insb
adc
push
or
mov
fldenv
mov
leave
lea
sub
out
push
and
nop
icebp
lea
cmp
icebp
in
ret
sete
pop
in
loop
dec
imul
roll
mov
scas
rolb
out
insb
lahf
pop
insl
inc
xor
push
add
int
inc
xchg
nop
adc
xor
add
or
xchg
int
iret
sbb
cmpsb
dec
dec
push
xor
nop
sub
push
mov
adc
jp
mov
add
or
repnz
imul
jp
inc
adc
lret
out
jp
mov
fwait
das
xchg
in
push
jl
and
into
push
jns
push
jae
in
dec
imul
gs
lahf
pop
jle
popa
jne
movsb
push
xchg
rcll
sti
push
nop
psubb
mov
stos
pop
sbb
in
or
dec
jnp
inc
stos
push
es
and
xchg
idivb
in
scas
int
inc
pop
push
add
mov
pop
sub
negl
and
and
out
aas
gs
lock
icebp
cli
adc
cld
mov
cmc
sub
add
push
push
push
inc
and
mov
xor
inc
xchg
dec
jg
test
mov
mov
ljmp
jae
xchg
es
mov
flds
pop
pop
mov
arpl
arpl
sbb
movntps
popa
outsb
inc
jae
dec
push
inc
scas
jno
cltd
loop
movsb
ret
jno
inc
pushf
fs
adc
iret
add
dec
adc
roll
int3
add
pop
sbb
mov
xor
test
push
push
mov
inc
int3
add
add
jle
in
dec
xchg
jecxz
mov
cltd
cmp
mov
add
dec
mov
sahf
test
cmp
notb
jns
inc
dec
pop
adc
es
mov
sbb
add
loop
arpl
adc
pop
pop
cmp
iret
imul
cmp
subb
jmp
dec
dec
and
or
movsl
sbb
shll
aad
imul
in
cld
mov
shr
inc
je
daa
rorb
cmp
stos
mov
mov
jb
pop
mov
push
out
shll
dec
xchg
pop
jno
sbb
mov
cmp
fdivrs
pusha
sub
dec
jo
lods
xchg
add
into
mov
orb
in
loopne
test
bound
xor
or
fwait
cmp
stc
mov
cltd
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
jmp
int
mov
jno
imul
jp
and
push
jge
jle
addl
in
pop
loop
mov
xchg
inc
dec
ss
movsl
rcrl
ja
inc
adc
jbe
adc
daa
push
fs
xor
enter
ret
fadds
testl
imul
aad
int3
cmpsl
imul
pop
insl
fwait
jne
mov
sbb
popf
ljmp
sub
mov
je,pn
dec
inc
adc
jmp
sbb
aas
fdivs
movsb
loop
cld
test
out
push
push
mov
clc
rep
and
aad
and
fstpt
add
xor
sbb
pop
push
cwtl
xchg
test
lahf
inc
shl
fnsave
mov
mov
mov
fldcw
adc
movsl
aaa
jns
pusha
arpl
adc
outsl
fwait
adc
pusha
adc
and
bound
stos
enter
xorb
xchg
repz
mov
into
mov
or
inc
stc
jne
sti
mov
xchg
frstor
adc
cmp
and
rorl
les
xlat
sbb
cmp
repnz
sahf
and
sbb
or
cmpsb
mov
adc
iret
pushf
outsb
jae
and
adc
das
hlt
push
jo
cmp
out
lds
sahf
xor
mov
cmp
test
ret
and
mov
push
insl
mov
mov
xchg
xchg
lcall
ficomps
or
xor
mov
ja
or
push
jo
and
mov
les
mov
jecxz
mov
jge
insb
xchg
xor
adcb
sahf
pop
je
sub
jp
inc
sbb
std
ret
fisubs
cmpsl
push
fnstsw
cwtl
sub
cmp
lds
mov
aad
sbb
in
add
pop
cltd
cmpsb
das
loopne
sub
mov
lidtl
xchg
xor
pop
mov
or
iret
mov
ss
xor
and
push
into
ficomps
push
loop
add
and
ljmp
jae
push
mov
xchg
sbb
rcr
or
or
shll
push
sbb
mov
sub
movsl
movsb
sub
mov
repz
iret
xchg
mov
popa
les
xchg
arpl
xor
lods
add
lds
popa
inc
mov
dec
cmp
xchg
shll
cli
pop
jmp
sub
in
mull
rcrb
loopne
stos
jp
dec
mov
int3
call
mulb
cmpsb
adc
push
int
sub
xchg
xor
scas
ds
mov
mov
lods
in
add
pushf
out
arpl
xchg
lea
dec
popa
inc
ret
mov
in
sbb
imul
ds
or
add
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
xor
xor
mov
sub
add
mov
orl
jmp
iret
ret
rcll
push
popa
mov
ljmp
or
jle
add
hlt
dec
loopne
out
addr16
xorb
jp
adc
divl
dec
pop
cwtl
stos
mov
pop
divb
and
ja
jne
or
mov
mov
mov
jecxz
jge
pop
je
xchg
decb
sysret
mov
mov
mov
jns
jg
add
push
push
push
xor
int
pop
xchg
xchg
sbb
lret
pop
jg
pop
jae
int
in
out
xchg
notl
lahf
mov
sbbl
dec
dec
push
mov
rclb
std
int
dec
sbb
mov
jp
or
cmp
jae
fisubrl
clc
mov
mov
push
adc
xchg
test
stos
or
pop
xchg
out
in
sbb
pop
sarb
xchg
pop
leave
gs
inc
xor
push
loope
push
mov
jne
pop
jae
mov
xchg
mov
cld
movsb
call
sahf
or
xlat
mov
push
cmp
fmuls
mov
addl
mov
movl
push
jmp
rolb
out
fs
test
inc
jle
or
jle
js
inc
imul
adc
fadds
mov
out
in
jg
cmp
rcrl
daa
test
sti
or
xor
xchg
mov
stos
xor
mov
shlb
je
cmp
popa
out
movsl
inc
cmpsb
jno
pop
sbb
sub
pusha
adcb
push
in
adc
iret
cmpsl
mov
js
sbb
push
int
es
cmpsb
fwait
mov
mov
fwait
fwait
imul
sub
pop
mov
jl
inc
sbb
adc
pop
sahf
aad
xchg
jb
mov
lcall
and
dec
add
fwait
cmp
loopne
int3
movsb
mov
jmp
mov
in
adc
xor
movsb
insb
jae
push
adcl
sbbb
es
mov
add
jae
test
lcall
int3
lcall
dec
cld
jno
nop
call
sbbl
xor
movl
jmp
mov
push
mov
add
mov
adc
jle
jg
jle
pusha
fildll
dec
in
jp,pn
ror
jnp
ds
xor
insb
aas
sub
jge
notb
addr16
lcall
add
jns
out
push
adc
push
inc
loopne
jnp
inc
movsb
addr16
cmp
rcrb
mov
jns
push
in
mov
fsubr
stc
iret
mov
inc
rclb
pop
arpl
inc
adc
xor
inc
int
leave
mov
xchg
je
push
jno
ljmp
jg
add
out
sub
sbb
ja
andnps
or
testl
add
es
jno
dec
pop
jp
pop
bound
lods
and
cmp
out
mov
mov
test
xor
clc
push
jge
insb
inc
push
cmpsb
leave
mov
xchg
adc
sub
out
push
add
sub
dec
scas
scas
mov
pop
sub
jp
add
inc
lds
inc
sub
test
add
add
add
add
add
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movzbl
add
mov
andl
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
jmp
ficoml
addr16
loop
inc
push
insl
mov
cs
jle
or
jle
cmp
xor
dec
xor
and
bound
into
call
inc
rcrb
mov
notl
or
in
fldl
fwait
dec
rcrl
sahf
jne
pop
inc
fs
int3
orl
fwait
pop
insl
adc
cmpsb
iret
push
imul
addr16
pop
mov
jo
mov
push
sub
fmuls
add
dec
mov
push
jb
sub
mov
sbb
cmp
mov
out
dec
loope
xchg
pusha
jbe
int3
and
push
out
ret
popa
xchg
adc
xor
test
push
add
sarl
xor
js
xor
adc
aam
divl
test
mov
and
jg
jecxz
lds
mov
jne
sbb
xorl
jg
mov
scas
mov
dec
jno
pushf
arpl
inc
popf
jmp
into
mov
sub
out
xchg
xor
or
je
roll
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
movl
and
mov
push
mov
add
xor
movl
mov
add
mov
mov
jmp
xchg
push
lret
adc
push
xchg
stos
dec
xlat
xchg
dec
cmp
jle
xchg
jg
jle
aas
sub
dec
js
cmp
dec
daa
sbb
add
xchg
sbb
dec
mov
add
or
add
push
or
shl
lret
jp
or
jl
inc
sub
lahf
sub
mov
fldlg2
push
push
sub
dec
add
ja
mov
insl
lret
arpl
sarb
fists
inc
jmp
xchg
repz
dec
insl
mov
test
sub
jnp
negl
push
nop
mov
imul
xchg
lock
shll
mov
sbb
movl
fucomip
addb
adc
xor
mov
ja
enter
repnz
andl
mov
mov
popf
es
adc
jns
into
cwtl
test
push
mov
mov
mov
fsubrl
mov
insb
push
rcl
and
loop
hlt
add
in
mov
and
lcall
sbb
sub
pop
push
sti
push
test
xor
dec
xchg
je
outsl
cs
sti
jle
xchg
in
push
and
fs
scas
movsl
mov
fistpl
shll
lods
dec
mov
notl
insb
jnp
data16
mov
rorl
ja
lods
fadds
popa
sub
inc
pusha
data16
push
mov
pop
sbb
jmp
imul
jne
arpl
dec
mov
jo
loop
pop
lods
push
push
andl
test
movl
je
mov
sbb
mov
mov
mov
adc
jmp
xchg
roll
icebp
mov
test
xor
jle
jg
jle
mov
push
adc
in
nop
cwtl
and
ss
loop
and
pop
stos
rcrb
cli
es
pop
mov
push
je
adc
and
xchg
xor
and
pop
iret
test
push
gs
lahf
movsb
in
addr16
gs
leavew
xor
pop
rol
jo
push
or
adc
shll
lods
mov
xor
sub
sub
sub
or
mov
and
addb
dec
mov
cmpsl
movsb
out
sub
sahf
mov
xchg
mov
mov
into
ror
pop
cmp
sub
sbb
push
push
add
sahf
push
or
cmp
repz
or
pusha
and
mov
jnp
pop
gs
jmp
mov
cmpsl
in
imul
mov
jb
xor
inc
fsubr
or
stos
sbb
xchg
je
int3
fdivrl
push
jbe
pop
xor
pushf
jnp
repz
fcom
cmp
ljmp
dec
in
insl
movsl
sarb
in
std
mov
cwtl
pop
xchg
lods
add
lret
sahf
sbb
mov
fsubr
mov
jmp
xchg
and
aam
adc
jb
cmp
cwtl
add
bound
fidivl
lods
loop
dec
andb
adc
popa
or
mov
fdivrl
cmp
sbb
insl
das
mov
fs
andb
pop
hlt
jne
dec
or
cmp
xor
mov
add
lret
lock
mov
loope
push
and
rcr
or
insl
mov
adc
imul
mov
and
add
sbb
mov
addl
mov
xchg
sbb
jmp
pop
lods
es
repz
pop
mov
mov
adc
movsb
in
dec
jle
xchg
jg
jle
adc
xchg
adc
inc
dec
lahf
mov
pushf
lret
push
pop
inc
lahf
mov
insl
inc
test
fsubr
pop
mov
add
scas
dec
cmp
rorb
sahf
xor
mov
lea
arpl
dec
dec
ds
das
loop
shll
jp
mov
lahf
sbb
out
shlb
jg
pushf
xchg
out
out
movsb
std
jo
pop
dec
and
arpl
push
or
fdiv
test
dec
loop
push
mov
repnz
cli
push
mov
mov
shl
adc
add
pop
jg
ret
xchg
push
outsb
dec
repz
data16
jbe
xlat
pop
testb
push
pop
mov
jns
or
or
jne
pop
subb
or
aam
clc
scas
sti
mov
lods
mov
jne
push
sti
es
aas
mov
test
iret
adcl
xlat
or
dec
test
push
mov
rorb
pop
xor
push
mov
leave
loopne
daa
mov
cmp
stos
dec
push
orb
cltd
shr
mov
push
mov
sub
mov
sub
repnz
pop
push
inc
aaa
fnstenv
adc
insl
jb
es
or
mov
enter
inc
loopne
mov
in
and
jne
inc
test
aas
scas
sahf
xchg
dec
push
xor
inc
out
pushf
lahf
repz
es
xor
outsb
shlb
ret
ss
sbb
jmp
ja
and
dec
pop
hlt
pusha
icebp
cmp
add
add
jle
xchg
jg
jle
xor
and
xchg
aas
adc
andl
cld
ret
gs
push
dec
jns
mov
xchg
push
xchg
sub
cmp
popf
jg
filds
mov
aaa
ror
fstl
or
cld
in
add
shlb
testl
lock
jnp
rcl
test
or
cmp
add
mov
cmpsl
loop
or
add
lcall
sub
inc
bound
nop
dec
rcll
or
jne
lods
out
mov
xchg
icebp
fisubrl
xlat
mov
mov
pop
xchg
or
in
sti
jge
lahf
fwait
xchg
or
inc
pop
inc
jp
repz
repz
aad
jbe
mov
and
pop
rorb
std
adc
mov
push
lds
out
xor
sub
sti
decl
subl
fildll
dec
bound
or
lret
ficomps
xchg
daa
inc
dec
stos
lock
sbb
lret
fs
std
add
loop
test
cld
or
add
ror
lea
and
cltd
pop
add
inc
outsl
lea
test
mov
pusha
pop
imul
mov
cmp
stc
xchg
lods
in
hlt
insl
sbb
rol
lahf
or
xor
pop
fdiv
int3
sarb
push
call
iret
pop
mov
shl
popf
sub
testb
push
inc
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movzwl
or
mov
mov
mov
and
mov
mov
andl
xor
sub
xor
add
mov
mov
movl
je
mov
xor
xorl
add
movl
cmp
movl
jne
pushl
call
mov
xor
mov
xor
mov
mov
subl
xor
andl
add
movl
cmp
je
pushl
xorl
pushl
call
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
mov
mov
adc
mov
subl
xor
addl
add
movl
cmp
je
xor
jmp
xchg
imul
dec
jle
xchg
jg
jle
mov
test
int3
xor
scas
mov
leave
icebp
lret
bnd
pusha
mov
xor
sub
fs
cmp
mov
movsl
repz
inc
jno
shll
xor
data16
sbb
jmp
sub
adc
dec
inc
out
mov
xor
xchg
mov
fs
jns
repz
dec
lea
lret
inc
jb
mov
jle
nop
insb
ds
test
mov
jmp
out
sarb
enter
xchg
xchg
stos
adc
push
jae
and
dec
loopne
outsl
pop
jns
dec
push
and
jmp
cmp
adc
add
inc
xor
cmp
mov
or
cmp
popf
push
fsub
cmp
ret
aam
ret
cmpsl
es
imul
mov
shll
aad
or
xchg
pop
loopne
adc
mov
rolb
loope
mov
insb
cli
xor
add
stc
lahf
jae
add
out
mov
lds
fstl
jecxz
bound
sbb
daa
mov
adc
or
loop
xchg
cmp
inc
push
push
cmp
arpl
out
mov
add
dec
or
mov
int
ds
xor
jg,pn
inc
fmull
sub
sub
sbb
xchg
daa
andl
xor
jbe
insl
mov
inc
in
negl
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
adcl
add
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
xorl
add
jmp
addr16
mov
ja
adc
xor
xor
jle
xchg
jg
jle
call
jns
mov
push
mov
and
scas
arpl
mov
xchg
out
push
xor
imul
stos
je
xor
stos
jecxz
mov
add
sub
repz
push
dec
sti
fldcw
pop
das
jb
mov
inc
sbb
add
push
popl
jp
xchg
jg
push
in
stos
pop
outsl
imul
jg
inc
mov
push
inc
xor
cmp
repz
sbb
or
sub
clc
imul
pop
adc
mov
inc
inc
sahf
gs
and
dec
or
push
adc
mov
mov
test
jmp
add
push
inc
test
ret
xchg
jle
dec
push
mov
sbb
mov
scas
out
gs
lods
out
call
inc
xchg
out
and
and
fsubl
out
leave
inc
fistl
outsb
pop
sub
frstor
jbe
cmp
dec
inc
ret
pop
es
push
pop
out
or
adc
out
sbb
cmp
cmp
cwtl
mov
or
cmc
push
push
cmpsl
inc
cmp
push
fistps
int3
dec
xor
rcr
outsb
xor
xor
icebp
dec
addb
jl
xor
jmp
pop
xor
fdivrs
and
sub
mov
mov
ja
and
scas
push
push
test
scas
movl
in
ss
dec
jp
dec
aam
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
jmp
mov
iret
mov
test
fstp
data16
dec
push
jle
xchg
jg
jle
jmp
pop
pop
inc
lcall
sbb
mov
mov
fmul
into
dec
gs
mov
mov
add
shll
cmp
dec
repz
cmp
jno
jb
adc
push
xor
lcall
ss
jle
lods
lock
outsl
mov
inc
flds
loope
aas
mov
cmp
mov
sbb
cmp
fisubrs
mov
dec
std
mov
mov
aad
in
stos
xchg
inc
mov
stos
pushf
sbb
ror
icebp
jg
and
dec
xor
add
std
movsl
fs
lcall
mov
lret
adc
fprem
into
fwait
sub
pop
lods
add
les
sub
adc
cmp
sub
les
js
jne
adc
rolb
stc
cmc
jae
fmuls
sub
push
lods
inc
pop
test
pop
dec
or
dec
stc
xor
pusha
test
sub
xchg
div
cmp
out
notb
pop
aam
les
xor
cmpl
and
cld
pushf
je
adc
xchg
stc
sbb
inc
test
and
mov
and
les
ss
xor
push
push
sub
enter
sub
jne
not
arpl
add
pop
inc
pop
icebp
addr16
es
iret
lods
enter
and
lahf
jmp
or
mov
ret
mov
dec
jb
ret
mov
dec
sbb
testb
jmp
xlat
frstor
jg
cld
xlat
cmp
jle
xchg
jg
jle
and
dec
fistps
xchg
test
push
cmp
mov
push
or
ret
jns
sbb
ret
sbbl
bound
ljmp
and
outsl
xchg
test
mov
push
shll
fisttpl
jl
negb
scas
iret
lods
xlat
jecxz
stos
aas
push
xchg
dec
push
jmp
add
stos
xchg
mov
sti
stos
xchg
xchg
push
dec
daa
clc
or
inc
movhlps
imul
push
dec
clc
inc
cli
push
dec
sub
or
mov
inc
mov
popf
stc
inc
mov
mov
ss
iret
inc
mov
repnz
es
in
mov
pop
cld
jp
aaa
mov
push
rolb
std
cmp
sbb
in
xchg
loopne
fs
xchg
pop
cmc
xchg
xchg
cmpsb
pop
ss
test
std
xor
xchg
ja
fcomps
movaps
sti
pop
pop
inc
fsubrl
out
pusha
mov
adc
ds
sub
ret
in
fadds
cmp
inc
adc
unpckhps
and
sub
sub
or
xchg
jp
popf
adc
mov
or
or
outsl
iret
cmp
cwtl
pushf
sub
and
sbb
idivb
jne
subl
inc
dec
push
xchg
push
xchg
bswap
repz
fstpl
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
bound
movsl
es
popa
push
call
bound
jl
jle
xchg
jg
jle
adc
fcmovnb
fwait
mov
leave
jo
insb
mov
lret
in
int
xchg
inc
insb
pminsw
mov
loopne
ja
dec
js
jns
mov
mov
mov
dec
popf
inc
adc
xchg
ds
push
mov
jno
popf
imul
mov
dec
or
cmp
adc
and
cmp
and
sub
dec
fnstsw
je
aaa
fld
out
enter
xchg
xchg
cmp
cld
or
loop
shlb
out
or
mov
cmp
adc
out
or
jne
lret
xorb
enter
push
xchg
fildl
out
pop
ds
pop
je
roll
lret
sub
shrl
leave
stos
add
test
cmp
movsb
xor
jbe
out
shlb
pop
or
faddp
dec
in
mov
jns
repz
mov
test
inc
fisubrs
sbb
cmp
rcl
adc
mov
repz
mov
in
pop
das
popf
sar
loopne
pop
fldt
lahf
mov
or
int3
repz
mulb
mov
arpl
rclb
jg
jge
notl
in
loope
dec
xor
mov
adc
xchg
jno
mov
cmpsl
xchg
jge
fs
add
pop
or
pop
in
icebp
mov
fstpl
or
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
jmp
ret
ficomps
popa
cltd
ret
fs
outsb
push
pop
int
clc
adc
jle
scas
add
leave
inc
jle
roll
repnz
shl
lahf
lods
fbstp
xchg
ret
pop
add
cmp
daa
jo
inc
ss
mov
mov
and
mov
out
xlat
mov
mov
mov
test
xor
call
mov
loope
movsb
jns
mov
cmp
mov
shlb
outsl
mov
jge
outsb
xchg
dec
fiaddl
addr16
jne
mov
ret
adc
push
movsb
test
push
xchg
mov
int
addr16
filds
rcrb
pop
lea
out
data16
mov
sub
push
out
xchg
mov
jne
test
mov
testb
cmp
jmp
mov
jae
dec
pop
sbbb
and
mov
mov
or
dec
hlt
push
dec
test
push
leave
xor
xchg
sarl
mov
les
loopne
mov
cmp
or
pop
movsl
inc
pop
mov
decb
lods
dec
or
jo
lret
mov
clc
cmpb
lret
cmp
pop
cltd
sub
repnz
popa
data16
jnp
xor
aam
and
or
jae
jno
inc
ja
pmulhuw
hlt
scas
imul
ret
pop
add
stos
sbb
cmpsb
fldl
dec
lret
push
mov
bound
in
fdivs
loopne
inc
cld
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
out
or
xor
in
rcrb
mov
idivl
sub
jle
xchg
jg
jle
jno
into
int
in
mov
mov
lahf
push
addr16
lahf
and
inc
or
ret
ss
aad
pop
lock
movsb
sahf
and
les
cmp
cmp
pop
fisttpl
loopne
pop
loop
push
stos
mov
sub
and
mov
lret
or
js
aad
movsl
inc
mov
add
and
cmp
out
inc
or
mov
test
dec
mov
cmp
and
leave
jae
sahf
cmp
cwtl
lahf
ljmp
fistl
inc
mov
insb
inc
cmp
add
lahf
rcll
hlt
lret
push
add
inc
jae
mov
jo
dec
sub
cmp
lea
xor
dec
enter
push
gs
cltd
mov
push
sub
fnstenv
jg
adc
arpl
sbb
jle
mov
andl
lret
mov
jae
add
inc
mov
mulb
into
or
fwait
dec
dec
mov
je
dec
test
pop
and
inc
ret
in
inc
inc
imul
mov
test
adc
ljmp
dec
xchg
pop
mov
adc
xchg
push
int
out
fnsave
mov
loopne
mov
mov
add
fs
push
es
sub
bound
addb
pop
xor
jmp
mov
add
mov
jmp
inc
jae
pop
sub
jae
repz
orl
jle
xchg
jg
jle
lock
push
add
hlt
mov
dec
cld
test
shll
cmp
mov
shll
ljmp
and
repz
aaa
js
clc
rol
inc
adc
sub
outsl
pop
fdivrl
push
jb
iret
push
adc
les
sbb
mov
cmp
mov
dec
and
add
add
mov
cmpsl
cmp
ja
cmp
mov
and
cltd
iret
imul
push
hlt
aam
test
movsl
enter
cmp
mov
sbb
mov
jno
add
stos
movsl
fcoml
jbe
jns
in
int
in
iret
mov
data16
ljmp
xchg
cmpsl
mov
xchg
repnz
imul
dec
insl
cli
rol
and
fs
icebp
mov
ret
mov
or
sarb
je
stos
dec
xchg
testb
push
leave
jo
add
enter
call
outsb
mov
shl
cmpsl
ret
pusha
jbe
xchg
mov
rcrb
push
into
in
test
cmp
stos
int
cmp
sbb
xor
test
test
mov
into
std
or
cmp
cs
jmp
pop
and
rcrb
fisubl
lock
loope,pn
sar
xchg
and
and
sbb
arpl
arpl
inc
in
rorb
push
or
add
mov
add
sbb
mov
xlat
fsubrl
sti
inc
xchg
inc
fcompl
jle
jg
jle
xchg
in
and
test
or
sbb
inc
push
cs
and
iret
in
mov
add
scas
mov
pop
cmp
jo
dec
jae
dec
out
pop
inc
dec
push
fs
xor
test
push
mov
jp
insb
and
adc
dec
int
push
into
add
fildl
xchg
and
mov
inc
daa
xchg
sbb
std
push
lock
mov
fsubr
stos
insb
fmull
stos
sub
xchg
inc
hlt
gs
fwait
pop
scas
outsl
sub
sub
jg
cmp
and
push
xchg
in
xchg
mov
das
lret
sub
push
mov
cwtl
and
lahf
pop
sub
adcl
in
jae
sarl
sub
rorb
mov
xor
in
cmp
push
fs
xchg
nop
test
xor
pop
lock
clc
stos
addr16
fs
cmp
xchg
xchg
shrb
rolb
cltd
js
jne
pusha
mov
xor
int3
popl
push
xchg
or
adc
pop
int3
iret
arpl
test
jo
call
je
fistpll
xor
mov
dec
inc
divb
mov
imul
xor
cmpl
mov
dec
cmpsb
or
push
lcall
jnp
pop
mov
icebp
sub
xchg
jecxz
movsl
or
push
pop
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
cmp
pop
ret
cmp
sub
iret
push
imul
jle
jg
jle
push
stos
or
subl
add
cmp
xor
pop
lods
xor
lods
mov
jl
push
and
sbb
or
jmp
test
aad
xlat
push
sahf
popf
mov
pop
xor
out
or
cmc
scas
sti
pop
push
mov
imul
jle
adc
popa
or
addr16
fisubrl
push
stc
std
hlt
fstps
arpl
inc
push
scas
ja
mov
inc
lcall
loop
xlat
ret
into
push
bound
mov
cwtl
mov
pushf
adc
cmc
cmpsl
daa
xchg
icebp
in
cmp
cltd
inc
loopne
pusha
mov
sub
addr16
pop
test
add
popl
fdivs
nop
jmp
xchg
sti
test
jne
sub
clc
leave
call
pop
or
pop
mov
ja
cltd
and
addr16
xor
in
je
lahf
mov
xchg
dec
icebp
popa
lods
jmp
add
pop
mov
sub
repnz
mov
mov
int
adc
xchg
jnp
xor
xor
mov
xchg
dec
scas
pop
cli
push
fs
hlt
xor
push
pop
cmp
in
scas
and
or
jle
lock
push
cmp
or
popf
jmp
xchg
xor
adc
xchg
outsb
and
bndldx
outsb
call
mov
jbe
inc
hlt
fs
jg
ljmp
mov
pop
mov
or
xor
or
fstps
sahf
inc
cmp
subl
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
jmp
xlat
cs
jae
push
aaa
adc
inc
idivl
nop
in
pop
jle
xchg
jg
jle
hlt
outsl
cmpsb
inc
sbb
and
xchg
cmp
cli
insb
jae
mov
mov
lods
mov
and
cli
xor
inc
adc
xchg
les
scas
sub
cmpsb
push
mov
mov
dec
xchg
addr16
and
inc
dec
cmp
xor
push
daa
mov
faddl
mov
insl
in
mov
test
out
aas
pop
push
test
pop
sbb
fisttpl
aas
enter
scas
lods
push
fldl
pusha
mov
stos
scas
adc
mov
jle
sbb
add
hlt
rorb
ljmp
lods
cmp
cs
mov
loope
andb
lea
decb
inc
xor
movsb
mov
push
shl
lods
test
in
or
out
push
xor
jnp
mov
mov
arpl
and
std
lahf
lds
stc
inc
lahf
mov
popa
pop
mov
pop
mov
mov
shll
xor
cmp
leave
sub
or
mov
push
enter
dec
inc
inc
in
and
arpl
or
sahf
jb
ja
testl
lcall
or
or
scas
popa
xchg
pop
icebp
fbstp
mov
inc
lcall
cltd
mov
mov
imul
loop
mov
cltd
mov
jne
dec
scas
lahf
push
int3
mov
pop
cmc
stos
mov
fstl
mov
mov
mov
mov
mov
xor
xor
mov
add
div
jmp
pushf
das
or
mov
mov
push
popa
jb
and
jle
xchg
jg
jle
dec
movsl
cmpl
xchg
in
xchg
dec
or
push
out
addr16
test
sub
push
push
fdivp
outsl
jp
lods
jle
push
push
or
dec
dec
testb
bound
inc
cmc
sbb
mov
mov
fs
mov
loop
leave
inc
jle
mov
cmc
lock
es
add
faddl
add
sub
inc
imul
mov
jecxz
mov
fstl
add
xor
ja
mov
sub
adc
in
cmpsb
push
shl
lcall
push
mov
int
shll
adc
mov
es
mov
outsl
add
lock
add
cwtl
rorb
imul
rolb
imul
scas
add
cmp
roll
dec
mov
mov
dec
cmp
cmp
mov
stc
mov
int3
pop
pop
pop
mov
mov
or
sub
or
gs
xchg
mov
dec
lcall
mulb
jo
jo
iret
dec
push
xchg
push
and
sarl
jmp
push
jns
adc
and
test
sub
push
cmp
repnz
inc
fnstcw
movsb
lret
add
push
gs
jl
repz
mov
dec
icebp
push
outsl
fld
out
aam
stos
sbb
jns
and
mov
xchg
fildl
into
fildl
xchg
aaa
mov
cld
xor
lea
jmp
in
outsl
pop
outsl
jne
fs
dec
mov
jg
jle
jp
mov
data16
es
ficomps
jb
add
rcrl
je
enter
push
mov
add
cmp
pop
outsb
add
lods
faddp
lret
jno
sbb
sti
jnp
pop
out
cmp
push
sbb
cmc
mov
and
lock
dec
ret
cmpl
cmp
or
cltd
mov
cs
cmpsb
mov
xchg
test
cmovns
or
push
cs
movsb
mov
int
repz
mov
out
xchg
xchg
lods
mov
enter
sub
in
cs
mov
movsb
jns
adc
lcall
pusha
sub
dec
cmc
je
dec
adc
test
or
push
mov
ds
jnp
out
insl
and
je
adc
jp
push
jnp
jbe
and
lds
inc
lods
xchg
mov
pusha
pop
mov
mov
mov
es
cmp
outsb
out
test
sbb
mov
popf
hlt
inc
add
in
movsb
dec
or
mov
inc
scas
hlt
push
aas
mov
push
adc
leave
push
aaa
mov
mov
jne
add
js
cmp
adc
sbb
fs
push
pop
xchg
out
pop
test
repz
jb
mov
lods
hlt
add
into
lret
mov
outsl
xor
cmp
cmp
sub
std
mov
cwtl
sbb
sub
cmp
test
jp
push
mov
push
or
xchg
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
jmp
ja
mov
mov
mov
gs
xchg
jg
jle
fyl2xp1
mov
and
lods
or
lret
testb
loope
or
cmp
adc
or
icebp
imul
ret
imul
jns
addr16
sub
fs
les
cmp
add
test
mov
pushf
fdivp
xchg
enter
push
mov
and
dec
repz
es
adc
daa
and
pushf
jbe
add
imul
pop
jp
lock
imul
sbb
inc
loope
jl
inc
dec
sbb
aam
mov
vpcmpgtd
or
incb
mov
add
xor
loope
test
inc
push
aam
mov
fstps
and
repnz
pushf
sub
ficoms
nop
test
or
inc
std
push
mov
adc
xor
loope
inc
lret
and
flds
movsb
scas
fsubl
or
int3
outsb
clc
pop
fdivl
jl
inc
and
shl
stc
push
xchg
push
gs
test
add
pop
rclb
das
inc
mov
inc
aaa
push
or
sbb
add
pop
mov
sub
jo
jo
jecxz
mov
or
loopne
stc
add
push
jne
stos
std
jb
stc
stc
xchg
movsb
jae
xchg
mov
into
dec
test
js
pop
mov
mov
aad
pop
cli
push
sahf
xor
jmp
inc
clc
fisttpl
call
lock
icebp
insb
bound
xchg
jg
jle
add
jmp
push
std
mov
sub
outsl
out
inc
and
inc
int3
das
lods
sbb
pop
xor
jne
sub
in
in
out
or
xchg
aaa
xor
sarl
pop
push
mov
lahf
cmp
test
aad
xor
jp
and
cmpsl
pop
sbb
lret
outsl
cmp
push
stos
and
mov
in
xchg
pop
aam
mov
aam
mov
orl
stos
pusha
repz
push
pop
mov
xor
into
vshufps
aad
lods
in
adc
xchg
push
int
xchg
aam
xlat
xchg
mov
push
and
outsl
mov
and
jecxz
sti
out
mov
add
xchg
leave
je
pop
ds
cmp
push
sar
jge
pop
push
lret
xlat
jb
adc
jne
shl
mov
pop
imul
inc
jae
sub
das
es
repnz
call
dec
add
mov
push
in
sub
mov
push
sti
notl
mov
pop
inc
out
ja
jbe
or
fistps
push
les
and
mov
scas
out
dec
lock
in
add
mov
aas
inc
adc
iret
pop
and
repz
sub
pop
dec
stc
popf
pusha
inc
mov
nop
lcall
pop
dec
outsb
sub
movsb
cs
pop
cmpl
mov
fstps
xchg
in
xchg
mov
dec
jmp
mov
jae
roll
adc
test
jle
jg
jle
lea
cmpsl
pop
mov
inc
push
and
fidivrs
in
push
cli
jo
cwtl
testb
push
imul
imul
cmc
add
dec
add
cmp
and
jb
xchg
push
les
mov
roll
pop
pop
cmp
mov
lahf
cli
jns
arpl
icebp
jle
sub
scas
ficoms
mov
pop
sub
push
adc
fildll
int3
jl
mov
bound
cmp
xchg
cmp
popf
sub
aad
ret
loop
in
jbe
inc
push
aam
and
fnsave
inc
loopne
jo
xchg
inc
sub
mov
jae
cmp
mov
imul
or
shll
call
jno
push
ljmp
test
adc
mov
repnz
xor
xor
pusha
push
cwtl
ss
mov
nop
pop
das
pop
dec
and
xchg
or
xor
lds
dec
insb
adc
and
repnz
inc
or
dec
loope
add
push
add
xor
sub
pop
cltd
mov
sbb
mov
lahf
roll
mov
or
mov
push
xchg
pop
lret
add
test
hlt
out
mov
adc
xor
ret
jmp
sbb
rolb
pop
hlt
pop
mov
pop
pop
jmp
mov
push
mov
pop
add
jle
xchg
jg
jle
jns
or
nop
dec
cmpsl
and
inc
adc
ficoms
movsl
or
and
ja
mov
test
pop
dec
lret
push
mov
cmpl
out
mov
and
hlt
add
lock
cmp
add
out
mov
inc
xchg
push
test
out
xor
repnz
sbb
fistps
fdivs
fcoms
test
sbb
dec
inc
mov
out
push
lret
sbb
stc
jmp
cmpsl
pop
lret
test
ss
ja
nop
fdivs
popf
es
xchg
xor
or
adc
add
lret
out
hlt
mov
mov
push
cli
ja
mov
add
push
push
fdivr
jne
add
xchg
mov
test
add
push
cli
adc
fs
clc
inc
mov
test
inc
jo
cwtl
pop
scas
push
in
lret
cmp
in
or
pop
dec
sub
mov
inc
xchg
mov
inc
into
cmpsl
bsf
jge
adc
inc
cmp
notb
int3
pop
cmp
ror
out
pop
pushf
sar
scas
mov
lock
cmpsl
or
inc
inc
inc
jmp
daa
lock
lret
dec
fwait
push
add
mov
test
adc
dec
orl
pop
popa
mov
jl
xor
adc
int
mov
mov
push
es
and
xchg
jl
into
test
scas
mov
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
add
test
loop
ljmp
fsub
add
mov
add
add
cmp
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
lea
add
push
add
mov
decl
add
inc
add
add
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lcall
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
dec
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
je
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
xor
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
test
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
shlb
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
repz
add
xor
pushf
push
jb
lea
mov
loopne
dec
mov
into
add
iret
inc
call
enter
jge
xor
inc
inc
mov
mov
or
pop
mov
in
cmovne
add
in
cld
inc
sbb
inc
add
adc
sub
add
jle
testb
les
add
decl
mov
inc
in
mov
inc
mov
push
inc
rcr
inc
push
incl
out
inc
add
imulb
mov
mov
fcos
mov
in
jo
incl
mov
out
mov
mov
inc
cmp
test
std
in
add
cmp
outsb
add
push
push
test
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
fsubs
test
incl
test
inc
ret
mov
push
rolb
test
aam
pushl
add
or
incl
add
pushl
mov
mov
jp
decl
add
push
jl
push
orl
callw
lea
out
mov
data16
lea
lea
mov
in
cwtl
loop
mov
data16
push
jle
inc
pop
push
adc
cmp
repnz
inc
mov
cmp
lea
push
inc
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
hlt
xor
clc
ret
rol
mov
mov
rolb
push
add
inc
test
push
mov
mov
push
jmp
push
add
decl
add
cmp
decl
jmp
push
call
mov
lea
jne
decl
decb
mov
push
jmp
inc
pop
lea
daa
test
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
add
inc
ret
xor
pushf
mov
pushf
loopne
test
clc
dec
inc
xor
data16
inc
test
clc
inc
test
lahf
decl
incl
lea
rolb
cld
pushf
dec
test
add
incb
decl
mov
lea
aam
call
xor
mov
test
cmp
ud0
test
ljmp
mov
incl
xchg
add
add
inc
lea
mov
cld
push
mov
xor
add
push
addb
jmp
addl
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
sub
mov
push
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
movb
add
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
in
call
mov
mov
mov
out
addl
mov
inc
lcall
ljmp
mov
sbb
cmp
pushf
pushl
mov
add
aam
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
and
in
lea
jne
incl
jnp
mov
pusha
mov
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
cld
mov
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
pop
pushf
in
ret
push
test
mov
and
mov
mov
je
je
mov
mov
add
test
dec
and
test
push
add
or
adc
and
or
cmp
sbb
dec
ret
push
je
and
.byte
.byte
