push
mov
sub
mov
mov
jmp
adcb
shrl
movd
jle
jge
jle
xlat
cmp
rol
pop
add
add
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
jp
mov
sub
jbe
cld
inc
cmc
test
mov
jge
aas
sub
xlat
inc
out
clc
popf
jne
aad
xchg
xchg
fdivrs
cmp
std
aad
popf
pop
cld
int3
daa
cmpsl
xchg
mov
push
in
xchg
jl
sbbl
mov
dec
dec
sub
cli
notb
aad
add
cli
dec
mov
push
ja
stc
sbb
jle
inc
insb
lods
sbb
lods
icebp
mov
cmp
cmpsb
cld
loopne
lock
leave
mov
add
int3
sub
icebp
xlat
mov
data16
insb
xchg
pop
arpl
mov
hlt
cmp
lods
cmp
or
cld
dec
loopne
shl
add
sbb
roll
je
scas
sub
dec
mov
inc
push
ds
lret
out
sbb
test
cmpsl
mov
adc
imul
and
inc
or
dec
dec
dec
out
or
mul
dec
popf
fwait
fwait
inc
in
and
or
test
scas
add
jns
sar
jp
fsts
movsb
dec
not
pop
xchg
scas
jnp
stc
int
mov
or
dec
shrl
jnp
xchg
mov
sti
sbb
insb
xor
inc
test
inc
enter
sarl
pushf
push
cld
xchg
ja
inc
call
std
dec
cmc
mov
mov
dec
shll
jge
mov
pop
mov
loopne
mov
jle
jmp
cld
repnz
add
add
jle
inc
test
cmc
lcall
mov
cmc
daa
lods
inc
push
cld
pusha
mov
ljmp
cmp
jnp
pop
fisubrs
int3
jo
sbb
push
fcom
cld
adc
push
and
aaa
cld
int
pop
and
jo
push
dec
xor
roll
xchg
and
sahf
or
outsb
outsb
hlt
mov
mov
pop
pop
dec
adc
scas
fbstp
sti
adcl
xchg
xchg
andb
bound
xchg
jno
pushf
jb
lcall
stos
sub
push
lods
cld
je
mov
inc
mov
mov
mov
jns
sbb
push
rcrl
pushl
add
nop
sbb
cmpsl
popf
dec
mov
pop
cld
pop
arpl
data16
mov
and
cmp
jne
jmp
pop
pop
mov
mov
addl
push
xor
sbb
push
lock
out
mov
sarb
das
mov
adc
cmc
push
scas
mov
ljmp
xor
jp
in
imul
push
push
dec
aas
add
fs
cmp
xchg
xor
insb
dec
sub
push
pop
ret
mov
adcb
shll
pushf
jmp
leave
cmp
mov
stos
mov
out
cmp
inc
gs
dec
xor
scas
mov
out
cmp
add
lock
pusha
add
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
rorb
jge
jle
jge
jle
mov
adcb
mov
or
stc
inc
aaa
pop
lret
lock
sbb
popf
int
mov
and
loope
mov
fiaddl
icebp
sub
mov
je
out
mov
test
sub
imul
sbb
sub
mov
aas
out
sub
mov
and
mov
sub
aas
loope
push
sbb
inc
pop
ds
hlt
les
iret
jle
subb
pop
das
mov
mov
int
ret
mov
xchg
and
pushf
lcall
xchg
push
or
adc
arpl
cmp
mov
mov
push
xor
ret
shrl
andnps
mov
xor
mov
hlt
mov
lret
mov
rorl
aam
dec
cs
or
sarl
mull
push
dec
mov
inc
adc
pop
dec
mov
outsb
and
repz
push
je
adc
pop
cmpsb
pop
push
jb
lahf
jne
adc
insb
pop
arpl
adc
mov
xor
mov
test
dec
sbbb
cmpsl
inc
mov
jb
jmp
jno
push
data16
cmp
mov
fldcw
addr16
call
scas
data16
jge
decl
jl
xchg
lods
or
mov
insb
mov
and
add
or
and
mov
repnz
shlb
cmp
xlat
mov
inc
adc
lock
insb
push
rcrl
add
leave
sarb
dec
dec
hlt
inc
sbb
adcl
mov
dec
inc
sbb
push
mov
pop
cmp
imul
mov
xchg
or
add
test
inc
push
add
cld
jno
enter
cs
mov
mov
stc
push
sbb
lock
mov
xorl
outsl
das
inc
pop
cwtl
mov
mov
scas
cld
mov
out
inc
xchg
insb
mov
jecxz
mov
and
inc
dec
ret
dec
jle
mov
sbb
dec
inc
fnstsw
fidivs
sbb
sbb
repnz
cmp
stos
pop
mov
outsl
mov
ljmp
imul
adc
xchg
fcoml
mov
stos
push
bound
xlat
xchg
inc
sbb
lods
dec
lds
mov
movsb
je
adc
das
dec
adc
xchg
cmp
adc
in
mov
aad
out
popa
fistps
mov
cltd
sbbb
ret
loop
aad
jge
lcall
push
scas
jb
mov
pop
scas
mov
inc
xchg
nop
pop
mov
ret
fsub
insl
mov
daa
xchg
pop
jg
sub
mov
push
sub
pinsrw
repz
ds
mov
insb
or
lods
push
stos
sub
cwtl
ret
imul
bound
mov
sti
jnp
xchg
pop
xchg
or
test
mov
and
sbb
jp
test
jns
je
add
mov
mov
cmp
adcb
sub
inc
nop
xchg
push
dec
mov
in
dec
aam
ret
stc
add
add
jmp
cmp
or
movsb
aad
jle
aaa
mov
pop
sub
repz
ljmp
lahf
cmp
pop
push
push
sub
rolb
in
rorb
mov
push
and
or
or
push
fcmove
mov
aad
mov
adc
insl
push
lods
lcall
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
mov
jle
outsl
jge
jle
dec
pop
cmpsl
and
xor
ret
test
mov
ja
jae
out
loopne
mov
fsub
xchg
fnstenv
xchg
push
cmpsl
repz
pop
repz
cmpsb
lds
xor
aas
adc
sbb
xor
push
jbe
dec
add
mov
mov
push
or
lcall
and
cltd
adc
jbe
cltd
ret
rol
dec
pop
bound
inc
xchg
shl
add
popf
dec
cli
or
in
lcall
or
dec
test
and
push
mov
adc
scas
adc
cwtl
call
fmull
xchg
cld
cmpsl
pop
xchg
jb
cmp
les
xchg
in
xchg
adc
jge
fildll
or
dec
inc
sbb
and
push
sub
mov
inc
jg
xchg
cmp
xchg
inc
push
sub
dec
lds
hlt
movsl
stos
add
sub
jl
jne
ret
movsb
push
xchg
lock
mov
jne
enter
inc
sub
cmpsl
xchg
push
pop
imul
xchg
mov
xchg
add
add
sbb
dec
stos
cmp
pop
mov
shl
and
ss
popa
push
ljmp
pop
mov
xchg
mov
or
mov
pop
sub
jge
into
jns
rclb
pushf
loop
jb
and
sti
bound
xchg
xchg
mov
ret
mov
or
scas
push
jle
or
les
js
cmp
stos
pop
mov
pop
pop
sub
in
sub
and
cmp
or
scas
sbb
out
scas
ds
lods
sub
or
rol
lds
push
mov
cmc
fmulp
and
lods
mov
repz
push
lds
aas
sub
lret
inc
fcoml
push
out
xchg
fdiv
sbb
add
cld
jge
add
adc
and
mov
dec
push
sub
xchg
loop
add
mov
or
scas
cmc
clc
push
shll
bnd
cmp
mov
lahf
xlat
mov
pop
cltd
sbb
loopne
pop
and
lea
pop
inc
scas
mov
popf
aas
cmp
mov
test
push
cli
popa
cmpsl
mov
inc
mov
pushf
jge
xchg
loopne
push
scas
mov
nop
fbstp
out
shlb
cmp
out
xor
cmpsb
int
mov
bound
cld
daa
adc
push
in
cmp
out
xor
out
int
and
inc
and
xchg
jb
outsb
add
adc
cmpsl
pusha
cmp
cmpsb
inc
lcall
inc
je
loop
pushf
xchg
pop
xchg
test
nop
popa
jmp
popa
pushf
sbb
pusha
enter
jnp
pop
or
and
popa
push
inc
pop
les
cmpl
adc
lds
dec
dec
adc
mov
lret
std
aam
and
cltd
adc
cld
add
push
add
ror
pop
popa
add
fstpt
mov
test
jecxz
hlt
rcll
int3
add
jl
loopne
pop
lahf
sahf
movb
jge
cli
lret
mov
dec
fisttpl
jbe
pusha
icebp
cmc
or
outsb
lea
jns
scas
dec
fisubrl
ljmp
idivb
adc
pusha
or
push
pop
lea
xchg
jo
add
idivb
lret
jg
test
push
aas
cmc
sbb
mov
stos
add
mov
fwait
lret
inc
pusha
mov
ja
add
mov
xor
mov
sub
imull
add
test
or
inc
add
add
lret
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
push
xor
int
add
jle
sub
je
sbb
adc
cmp
call
call
mov
nop
pop
scas
ja,pn
push
push
loopne
les
and
jmp
xor
fcomi
mov
adc
pop
mov
mov
xchg
mov
jnp
mov
popa
scas
daa
es
daa
ja
stos
cli
or
pushf
sbb
or
cmp
int
mov
dec
mov
icebp
add
outsl
xor
lods
fcoml
add
aaa
cmc
ret
js
mov
shll
negl
and
jae
mov
mov
jge
xchg
pop
jnp
ror
inc
lahf
je
add
ljmp
iret
lods
mov
mov
and
jnp
inc
mov
mov
jo
std
jmp
lods
or
cmp
cmp
rorb
cmp
arpl
cwtl
xchg
lods
push
sahf
sahf
and
test
cmpsl
out
inc
xor
stc
cmpsl
mov
and
adc
cli
js
add
arpl
inc
insl
lahf
enter
sub
xchg
or
scas
cmp
fwait
stos
mov
push
in
adc
fsubrl
ds
pusha
sub
aaa
add
cmp
inc
aaa
and
repnz
fmulp
push
xchg
fs
lret
inc
adc
adc
data16
ret
mov
jne
fdivs
rorl
jmp
xchg
push
mov
mov
popa
inc
push
fmull
fistl
xlat
dec
pop
testl
lock
lea
xlat
imul
lret
adc
in
push
mov
and
call
mov
sub
testb
iret
add
loope
sarb
inc
test
add
xchg
adc
adc
inc
in
jmp
inc
je
mull
cmp
pop
jg
test
fiadds
inc
dec
fcomps
aaa
fisubl
or
pop
xchg
out
loope
pop
les
sbb
jecxz
xchg
jno
and
test
shlb
loopne
sub
leave
sub
pop
mov
imulb
repnz
pop
cmp
xor
push
aad
sub
ds
enter
pop
mov
rcll
movsb
inc
push
sbb
mov
shlb
adc
mov
mov
sahf
sbb
and
inc
and
mov
mov
jae
mov
or
ljmp
mov
idivb
notl
sbb
xor
les
ds
into
fcoms
in
dec
sub
adc
aad
shr
adc
icebp
mov
testb
mov
push
int3
push
in
subb
xor
push
test
xchg
insl
xor
nop
fldenv
xchg
arpl
or
lods
jb
jle
shrl
xchg
jae
jg
xor
mov
jno
nop
mov
outsb
stos
adc
ror
push
icebp
loope
fimull
shlb
in
or
pop
sarb
add
push
sar
mov
shll
fwait
addb
push
and
fcoml
mov
mov
test
ds
out
xor
lock
xor
or
inc
js
shlb
mov
push
push
movsb
jb
call
insl
push
lahf
and
bound
mov
cmp
test
std
ja
cmp
das
sbb
popf
xor
test
sub
lea
lret
push
lock
push
or
int
inc
pop
notl
dec
jmp
pusha
inc
mov
cmc
ret
outsl
pop
jbe
push
cli
nop
js
lea
inc
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
mov
jle
jge
jle
add
or
adc
sbb
cmp
mov
shrl
leave
je
lock
std
fdivr
and
lock
push
xor
outsb
xchg
mov
pop
into
adc
ret
sbb
mov
adc
std
loop
cmpsb
mov
in
call
xor
pop
popa
sub
mov
mov
and
and
pop
pop
hlt
add
mov
and
adc
lods
xorb
loope
mov
push
aam
test
xchg
fwait
es
iret
or
cmp
push
sbb
jg
or
jae
inc
pusha
sub
add
adc
inc
enter
pop
jns
sbb
mov
shrb
enter
ret
inc
out
pop
add
pop
aad
and
loopne
pop
inc
out
aaa
in
es
std
shll
xchg
movsl
hlt
arpl
jecxz
dec
xchg
mov
imul
cwtl
pop
fsubrl
cmp
gs
adc
fiadds
lret
push
and
lcall
xchg
repnz
aas
mov
loop
sahf
cmp
dec
mov
pop
ret
shl
or
xchg
testb
lock
xchg
lods
xchg
repnz
jl
xor
in
arpl
inc
testl
sub
push
imul
gs
cmp
fsts
xchg
mov
pushf
push
clc
cmp
in
ljmp
repz
popf
or
addr16
repz
stos
xor
or
jge
cmp
xchg
or
xor
xchg
shll
mov
xor
leave
lret
mov
int3
fnstsw
pusha
fwait
std
int
cmpsl
loope
repnz
mov
and
add
push
dec
mov
jno
out
fsubl
xchg
in
jns
pop
push
bound
mov
test
or
pop
test
test
push
cltd
pop
and
adc
adc
aam
out
insl
in
or
leave
adc
in
in
int3
test
cmpl
mov
xchg
xchg
adc
insb
and
lock
jno
fdivrs
fs
and
mov
stos
lods
pushf
mov
dec
aaa
sbb
push
fisubl
je
dec
jno
frstor
clc
fadd
out
sbbb
push
push
inc
jecxz
insb
jecxz
adc
mov
enter
sbb
aas
mov
add
arpl
insb
popa
enterw
mov
lahf
pop
enter
inc
adc
lret
imul
xor
add
xchg
repz
aam
cwtl
sub
or
stos
cmpb
adc
pop
out
xor
mov
repnz
xchg
loop
and
pop
dec
push
inc
cmp
scas
pop
dec
push
jns
xor
jle
pop
pop
fwait
std
and
stc
pop
pop
mov
insl
data16
cli
pop
xor
jmp
leave
jnp
cwtl
cmp
sbb
lret
scas
loope
jb
scas
dec
idivb
mov
add
lock
jae
sub
mov
cmpsl
lods
sub
imul
pop
inc
lods
sbb
sub
sbb
push
aam
push
jns
pop
sbb
data16
addr16
in
add
aas
testb
pusha
sub
lods
ja
push
sub
sarb
int3
ret
imul
sub
push
and
jae
sbb
adc
cmp
out
mov
sub
into
je
sub
pop
add
mov
insb
shlb
popf
add
adc
adc
mov
sub
xor
inc
pop
dec
loopne
or
push
push
or
xor
cld
pusha
loopne
sub
scas
xor
and
gs
or
shrb
in
scas
insb
or
fimuls
inc
rorb
or
inc
int3
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
dec
jp
or
icebp
and
jns
addr16
sub
outsb
inc
cltd
std
pop
rep
cmp
sti
xor
jmp
bound
jns
loopne
stos
ficoml
test
pop
xlat
and
sub
adc
aas
cmc
mov
mov
mov
add
push
xor
push
cld
inc
jecxz
cmp
push
vcmppd
xchg
cld
mov
jle
nop
in
movl
cmpsb
test
insb
mov
test
in
bound
in
mov
jecxz
lahf
cmp
push
xor
jecxz
push
insb
fadd
nop
iret
enter
pop
push
or
test
lds
push
flds
dec
inc
sub
loope
pop
push
mov
imulb
mov
add
xor
stos
imul
or
das
mov
rorb
mov
ljmp
sbb
mov
jmp
pop
inc
xor
and
lahf
sub
or
jg
test
sub
cmpsb
movsl
sbbl
or
mov
cmp
loopne
mov
dec
or
popf
or
jg
out
dec
jnp
ret
and
mov
or
iret
lahf
adc
push
jl
movsl
shr
jp
mov
jb
pop
dec
add
icebp
cmp
sub
int3
frstor
repnz
das
adc
xchg
incl
push
mov
push
fisubl
in
adc
dec
loop
sbb
and
xor
call
mov
popa
push
jle
sub
daa
push
imul
mov
int
repz
jle
fbstp
lods
ds
repz
mov
stos
add
push
push
or
test
loopne
xchg
out
lcall
jle
das
cmp
sub
xchg
in
jg
bound
dec
dec
jmp
maskmovq
divl
shl
cli
les
iret
jge
stos
adc
shlb
xchg
pop
stos
jmp
or
popa
adcb
mov
and
inc
fdivs
stos
sub
dec
pop
cmp
sbb
daa
jge
cmpsl
xor
movl
pop
mov
fnstsw
xchg
ret
jge
xchg
in
pop
dec
or
mov
test
inc
cmp
mov
push
mov
rcr
add
and
lcall
fs
or
sbb
mov
lds
add
jle
cltd
xor
icebp
cmp
imul
out
add
mov
aam
pushf
mov
jge
sbb
dec
cmp
sub
adc
inc
fsub
mov
aam
mov
mov
jecxz
aam
fcmovne
insl
and
rolb
jl
outsb
push
loop
int3
xchg
cld
jecxz
jge
push
aad
push
or
in
or
xchg
mov
test
push
inc
mov
dec
cmpsl
movsb
inc
fwait
addb
out
fadds
test
imul
mov
mov
das
push
cmpsl
xchg
sbb
add
test
push
push
adcl
ss
jns
jecxz
in
ss
sbb
ret
cs
push
xchg
jno
cmp
pop
and
imul
ja
test
test
fcomi
testb
xchg
jl
mov
imul
xor
push
adc
xchg
or
and
mov
sbb
pusha
popf
lret
cmpsl
shr
scas
mov
sbb
and
fildl
in
inc
sub
sbb
jb
cmp
and
sbb
popa
cltd
arpl
stos
add
add
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
add
cmp
cwtl
or
outsl
jge
jle
jbe,pn
fistpll
aas
idivl
pop
push
loop
into
aas
jae
add
mull
pop
lods
lcall
outsl
insb
sbb
lea
sahf
and
jnp
push
movsb
inc
daa
or
in
pushl
es
out
xchg
and
fstps
cltd
pop
stos
clc
mov
sub
rcl
jle
loopne
jns
lea
xchg
mov
ds
mov
int3
loope
cmp
mov
loopne
cmp
adc
ljmp
push
and
out
hlt
fmul
xor
and
push
push
cmp
ss
out
or
sub
inc
imul
dec
push
popf
push
sbb
push
test
sti
xchg
lds
xchg
push
cld
sbb
xorl
dec
dec
inc
mov
repnz
loopne
jb
and
test
aaa
adc
pop
dec
jbe
in
jecxz
hlt
pop
stos
xchg
ja
mov
mov
push
adc
cmp
sbb
andl
push
sahf
xchg
sub
push
cmp
xchg
sbb
pusha
mov
lahf
mov
push
enter
repz
popf
push
icebp
loopne
gs
jp
xor
mov
mov
cmp
push
fdivrl
xor
into
lahf
cmp
out
pop
adc
and
mov
test
cld
xchg
dec
adc
adc
add
aad
adc
push
mov
xor
aaa
and
rclb
adc
cmc
cmp
and
add
in
ljmp
mov
push
stc
ss
cwtl
or
pop
cwtl
cmp
and
mov
out
les
rcrl
jmp
sti
test
mov
xor
dec
and
cmp
std
jno
mov
aaa
aam
addl
ret
rcl
mov
sbb
aaa
fwait
sbb
and
mov
filds
sarl
test
xchg
add
jae
in
mov
ljmp
cmpb
xlat
clc
inc
mov
add
loop
adc
cmc
xor
xlat
in
pop
out
push
and
shrl
mov
inc
shlb
cltd
roll
insb
popf
movsb
jae
cmp
xchg
jecxz
adc
dec
mov
sbb
aad
cmp
pop
leave
jae
insl
lahf
pop
das
xchg
dec
push
ret
jo
out
pop
jecxz
dec
mov
mov
in
popf
mov
cmpb
icebp
xchg
test
cmc
mov
fsubrl
push
movsb
mulb
sahf
pusha
insl
out
enter
outsb
add
inc
jmp
ror
test
or
pop
mov
in
pop
sahf
lahf
fidivrs
leave
inc
xchg
lcall
movsb
mov
roll
fcmovnu
or
mov
lret
jecxz
imul
pop
mov
lods
xchg
dec
dec
pop
sbb
pop
jnp
stos
jle
xor
inc
push
fdivl
sub
cmpsb
xlat
cmp
fdiv
movsb
loop
cmpsl
sbb
sbb
xor
or
xlat
or
mov
loopne
pop
out
scas
lea
xchg
fldz
cmp
arpl
clc
aam
cmp
add
xchg
jmp
or
fstl
loopne
xor
or
pop
sub
push
out
and
ret
cli
push
jl
sub
sahf
lcall
aaa
imul
sbb
gs
sub
jp
iret
push
movsb
loopne
cmp
or
or
shrb
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
rcr
mov
jle
test
mov
push
ret
cld
jle
xchg
and
lock
adc
aas
inc
bound
pushf
jle
sbb
jp
sahf
je
mov
add
inc
in
sub
fildll
fimuls
cwtl
xor
push
arpl
cwtl
push
mov
mov
loop
pop
jp
ljmp
test
addr16
jle
aas
and
ja
mov
ret
imul
leave
push
ret
sti
or
pusha
insl
stc
or
movsl
adc
mov
ja
lods
orb
mov
call
js
out
out
pop
std
jns
add
cmpsl
xchg
pop
jno
fsub
dec
movl
lods
adc
xor
addr16
jnp
and
iret
in
cs
out
not
and
icebp
repz
cld
inc
dec
push
test
sti
cmp
jne
lret
jmp
stos
or
repnz
add
setno
clc
pusha
push
mov
inc
in
mov
es
jne
ds
lcall
jae
js
xor
ret
mov
arpl
pop
jp
inc
mov
mov
fimull
out
rolb
push
cmc
and
lret
outsl
xor
popf
bound
add
pop
ret
push
test
rolb
push
daa
push
loop
adc
out
cmp
sub
lret
imul
xorl
movb
xor
or
add
imul
sub
rorl
add
gs
repnz
jns
imul
bound
xchg
sub
aaa
xlat
push
xor
mov
inc
mov
jle
xchg
adc
je,pt
xchg
fisttpl
xchg
sbb
lret
sub
mov
icebp
inc
divl
mov
dec
mov
adc
subl
pop
inc
iret
adc
sub
xchg
clc
nop
xor
xchg
fmull
or
push
jbe
repnz
sahf
fisttpll
cmp
scas
xchg
cmc
pop
adc
dec
pop
mov
addr16
ficoml
mov
jmp
pop
push
cmpsl
insb
mov
lods
test
aad
cmp
mov
sub
mov
xor
adc
fldl
das
or
sbb
mov
enter
popa
mov
mov
inc
ficoml
loopne
in
cmpsb
xor
add
hlt
in
mov
jbe
mov
jg
mov
je
mov
stos
xchg
mov
dec
outsb
push
or
push
out
or
jecxz
ljmp
test
sbb
fsubs
insb
inc
cmp
iret
sbb
dec
mov
jbe
cmp
sbb
push
ljmp
adc
sub
push
fcoms
inc
shr
jbe
icebp
fwait
mov
pusha
mov
enter
in
cmp
push
nop
cwtl
and
dec
xor
les
xor
lea
std
inc
shl
sbb
ret
popa
fucomp
notb
ret
stos
cmpsl
push
cld
stos
add
cld
or
push
xchg
xchg
loope
stos
push
mov
and
mov
dec
lds
jb
out
sbb
jmp
cmpsl
pop
mov
sar
test
aam
call
repnz
pop
cltd
dec
xchg
cmp
and
fnstenv
cli
ljmp
cmp
mov
cltd
popa
mov
rclb
mov
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
dec
cmp
jle
jge
jle
outsb
movsl
jno
mov
pop
mov
cmpsl
cmp
mov
out
cmp
push
aaa
sti
push
jae
repz
mov
inc
dec
xchg
inc
fldt
cmp
loope
sbb
fidivs
imul
sbb
subb
mov
mov
out
rclb
inc
bound
jge
mov
bound
std
and
notl
and
mov
sub
mov
mov
push
pushl
cmc
lods
push
or
call
mov
scas
sub
add
fs
push
xchg
jbe
pop
push
sar
repnz
loop
scas
push
mov
aad
dec
mov
inc
mov
xchg
mov
mov
jbe
jle
xchg
sub
or
adc
mov
stc
pop
push
pop
adc
push
adc
cmpsb
pop
inc
test
sub
push
std
lret
insl
aam
cwtl
mov
pop
imul
cltd
lcall
aas
jnp
xchg
cs
rcrl
arpl
adc
sbb
jae
cmp
call
fsts
or
mov
or
mov
xor
cmpsl
mov
aas
movsb
sar
rclb
imul
inc
pusha
mov
sbb
jbe
movsb
xchg
aas
sbb
or
pop
test
jne
mov
xchg
jne
jns
test
out
cmp
orb
xor
mov
add
dec
add
jmp
xor
jge
fcomip
mov
lods
int3
push
popa
in
pop
lods
fildl
cmpsb
cmp
das
mov
mov
in
stos
loopne
mov
lret
pop
mov
xchg
jo
mov
mov
mov
movsb
cmp
pop
popf
out
and
lods
in
xchg
enter
insb
push
ret
dec
out
xor
bound
pop
ret
xchg
aas
mov
dec
leave
mov
shlb
mov
push
popf
add
jb
pop
jne
dec
fistl
adc
fwait
sar
mov
xor
andl
mov
jno
ret
imulb
insl
pop
aas
jae
xchg
mov
sti
aas
jns
and
sarl
or
xchg
push
jle
cmpsb
stos
cmpl
shrl
insl
jnp
cmp
jnp
xchg
mov
push
insb
movsl
xor
cmpsb
dec
xchg
dec
push
loop
mov
xchg
bswap
sbb
mov
repnz
loope
pop
dec
cmp
jecxz
mov
loopne
add
pop
ljmp
mov
xor
push
test
popa
cmc
aaa
or
lret
xlat
sub
push
push
add
mov
int
pop
pop
mov
mov
xchg
fnstsw
mov
int
xchg
push
popa
jno
adc
rorl
jmp
cmp
nop
movsl
aaa
mov
sub
and
nop
outsl
and
inc
push
rcrb
mov
adc
inc
sti
lock
push
fldenv
aam
xor
mov
push
scas
jg
sbb
ret
adc
sarl
or
xor
xchg
loopne
pusha
xchg
and
pop
push
insl
adc
aam
xlat
dec
int3
xchg
mov
test
lock
push
shrb
xchg
outsl
repnz
adc
sub
cmp
adc
fwait
ret
adcl
test
shlb
jae
mov
lea
sub
adc
movsb
pop
push
jns
mov
fstps
and
sbb
int3
dec
mov
pop
adc
sub
lea
rorb
ss
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
mov
jmp
negl
jle
into
xchg
fsubs
sub
sbb
sarl
sub
push
pop
push
lods
mov
jge
jno,pt
pushf
jbe
aad
xor
xor
cmp
cmp
adc
enter
xchg
xchg
leave
jp
add
test
push
jp
cltd
mov
mov
sub
ret
and
pushf
stos
and
add
mov
mov
jbe
and
sub
loopne
add
sub
mov
mov
cmc
or
mov
ss
sub
movsl
or
je
mov
sub
mov
jno
jae
mov
in
orl
adc
adc
popa
mov
pop
mov
shr
movsb
mul
pop
test
mov
add
scas
adc
mov
movsb
rcll
int
and
jmp
mov
mov
xchg
xor
inc
xchg
xchg
add
add
cwtl
jmp
test
inc
ds
mov
fiaddl
cmc
movsb
sbb
adcl
pop
dec
popa
insb
jecxz
aam
push
imul
cwtl
daa
mov
push
push
stos
addr16
stc
mov
scas
in
sub
sub
jae
add
out
adc
hlt
jae
into
js
fidivs
mov
sbb
push
push
jge
mov
fmuls
sbb
pop
xor
and
dec
push
imul
out
int
cmp
rcll
cmc
mov
cmp
or
lods
fisubs
jbe
fsub
and
mov
imul
add
jge
sbb
jl
js
adc
fst
je
mov
aad
inc
push
test
pop
xor
out
popf
outsl
jne
jnp
scas
repz
jp
add
fidivrs
push
dec
loopne
jnp
and
pop
cmp
mov
mov
pop
mov
inc
and
fistl
jmp
push
jno
loope
mov
jmp
sbb
aam
and
pop
mov
outsb
pop
add
push
adc
fs
jmp
fmull
int3
ds
push
gs
sub
or
test
or
insl
outsb
and
int
push
lods
lret
add
sub
and
mov
mov
mov
adc
jns
lcall
xor
mov
jmp
rcr
inc
push
pop
sti
rcrl
daa
roll
push
call
mov
push
mov
fxch
and
dec
sahf
ffreep
addr16
ret
mov
xchg
dec
pop
jecxz
jg
mov
inc
addl
mov
outsb
aas
mov
inc
jno
call
cmpsl
jp
cmc
sahf
push
sbb
inc
lock
addr16
cmpsl
xchg
dec
sub
pop
mov
cmp
ja
mov
lea
lea
cmp
xchg
dec
dec
pop
les
fcoml
lcall
dec
sub
mul
xlat
iret
sub
std
fisubrl
stos
lock
leave
and
jg
jno
stos
mov
imul
in
in
pop
ja
out
push
mov
jnp
add
cs
lock
xchg
push
out
sub
je
or
add
mov
js
mov
rcrl
jno
xchg
cmc
xchg
mov
jle
cmc
sub
sbbb
jbe
clc
jo
nop
jbe
push
xchg
sbb
sahf
out
lret
and
push
fmuls
mov
in
mov
pop
pop
aaa
xor
cmp
add
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
shlb
sbb
outsl
jge
jle
fisubl
sbb
fcoml
nop
mov
fstps
and
mov
pushl
hlt
cld
jp
cmp
mov
mov
nop
sub
movsl
int3
ffree
lock
push
mov
mov
mov
pop
std
sti
incl
add
das
mov
sbb
jae
mov
test
lods
inc
stc
cmpsb
push
sti
push
mov
jl
inc
shrl
mov
push
out
les
jns
mov
xchg
stos
fwait
inc
xchg
lcall
pushf
mov
jmp
dec
mov
xchg
mov
jge
pushf
sarb
dec
leave
xor
mov
inc
push
stos
popf
dec
add
pop
ret
push
jne
divl
dec
push
sbb
fcmove
inc
dec
ficoms
lds
aad
xor
cs
mov
xchg
add
test
and
lods
inc
insb
ret
add
bnd
repz
push
in
jg
dec
mov
outsb
out
mov
gs
popf
mov
in
aas
ja
inc
add
aaa
jecxz
cmp
and
pop
arpl
insl
mov
jnp
in
cli
xlat
lock
std
mov
scas
adc
mov
fstpl
shll
aaa
push
lahf
mov
rorb
outsb
mov
gs
mov
fdivl
or
mov
pop
push
mov
xor
jp
sbb
lds
xchg
ja
and
std
xor
js
cmp
sub
js
mov
flds
clc
repz
push
leave
xchg
popa
push
adc
popa
mov
movsb
out
dec
lods
lcall
pop
xchg
push
adc
mov
popf
and
aaa
test
mov
jns
pop
aam
push
add
pop
daa
das
nop
flds
icebp
sub
setbe
mov
sbb
mov
lea
sbb
insb
xor
int
cmp
adcb
mov
test
and
mov
insb
jg
gs
xor
test
jle
aaa
mov
sbb
imul
cmp
daa
adc
sub
sub
rorb
or
in
insb
push
jno
sub
hlt
std
stos
push
cmpsw
and
fbld
arpl
sbb
mov
xchg
movsb
cmpsl
push
jns
addr16
jne
jmp
add
xchg
fs
test
jne
pop
pop
mov
ret
xchg
sub
cmp
add
mov
sub
and
pop
in
mov
cmp
mov
cmp
pop
stc
push
outsl
jnp
shr
shlb
mov
fistpl
arpl
insl
das
in
sub
mov
inc
jle
ret
pop
scas
in
sahf
adc
lret
push
enter
lock
mov
sub
test
aad
push
adc
push
pop
icebp
mov
xlat
mov
xchg
jl
int3
lahf
int3
sub
sahf
adc
mov
loopne
cmp
cwtl
test
mov
lods
adc
sub
out
icebp
das
sub
stos
mov
in
scas
add
push
and
setae
aam
loopne
inc
or
sbb
xor
les
stos
push
scas
cli
push
das
adc
jl
rcrb
cmc
ret
gs
shrl
cmp
out
shl
xchg
lcall
lock
sub
int3
imul
sub
push
or
or
testb
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
add
aad
jle
outsl
jge
jle
cmp
cmp
lret
mov
sbb
arpl
in
out
or
sub
es
and
pop
dec
adc
ss
addr16
inc
dec
inc
out
mov
sub
in
sbb
xchg
imul
mov
dec
or
sub
sub
or
mov
pusha
imul
push
xchg
cmp
inc
mov
or
sub
lds
dec
mov
mov
sbb
scas
imul
and
pop
sbb
jg
jne
cmpsl
iret
mov
inc
rcl
dec
add
jb
mov
loope
sti
push
imul
xorl
xchg
fistl
pusha
pop
pop
jecxz
test
lods
dec
and
sbb
xchg
scas
inc
push
pop
or
cmp
lret
fstpt
fildll
decb
jmp
push
mov
into
add
imul
adc
repz
ficoms
jge
rorb
jecxz
cmp
enter
add
sub
jecxz
jnp
fcomps
xlat
pop
and
pop
cltd
data16
mov
test
lods
out
jae
fs
or
ja
jo
dec
cwtl
lret
or
iret
loopne
test
mov
enter
pop
pusha
stos
fidivs
call
xor
jo
push
xchg
xor
imul
adc
repz
pop
mov
xchg
iret
pop
nop
lret
jge
out
inc
push
lock
mov
call
sbb
sub
mov
mov
aad
inc
pop
outsb
and
ljmp
test
adc
cs
mov
cmpb
inc
outsb
sti
fists
bound
es
mov
cmp
push
xor
push
mov
cmpps
lahf
mov
adc
out
jle
dec
jnp
cmp
and
negl
mov
cmp
inc
jge
cmp
in
test
std
xlat
mov
xlat
lcall
cmpsl
jge
mov
cmp
push
dec
loope
leave
cmc
push
sti
mov
sub
cmp
negl
jnp
addr16
or
arpl
jmp
movsb
addb
inc
fwait
mov
scas
test
push
push
in
pop
and
mov
adc
fisubrs
adc
push
inc
sarl
pop
and
outsb
xchg
xchg
ret
jle
into
xlat
ja
adc
xlat
lahf
lods
xor
mov
sahf
cmp
test
mov
scas
cli
pop
cmp
loopne
mov
mov
stc
mov
sbb
cs
rolb
push
mov
adc
movsl
cmpsl
loopne
mov
xor
xor
dec
jnp
out
jno
push
add
cmpsl
sahf
lea
mov
and
pop
mov
xor
push
bt
js
rclb
or
repz
lret
aam
nop
jg
or
out
in
inc
fwait
pop
dec
mov
add
mov
mov
sbb
pop
jmp
inc
push
rcrb
daa
sahf
test
aam
fldenv
mov
push
scas
stos
or
cmp
stos
and
test
ja
ds
rol
sub
icebp
sub
xchg
stc
aad
jne
fcom
xchg
or
inc
sbb
ds
and
sar
lods
and
sti
cli
into
in
adc
test
mov
pop
mov
lret
lret
cltd
test
mov
outsl
fs
pop
pop
adc
pusha
add
xor
icebp
scas
dec
cmp
daa
test
aam
push
in
ja
pushl
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
pop
ret
jle
jge
jle
inc
adc
sub
dec
dec
ja
cli
add
inc
add
xchg
leave
daa
jnp
arpl
sub
mov
and
stc
mov
cs
sbb
fmul
arpl
sarb
xor
lret
ljmp
add
fwait
out
mov
and
push
and
pop
cmp
imul
dec
jbe
inc
sti
mov
cld
sahf
jg
bound
aaa
xchg
mov
jnp
call
mov
cmp
mov
pop
ror
xchg
pop
icebp
enter
pop
andb
mov
mov
mov
enter
hlt
mov
loope
in
cli
or
cld
rcrl
int3
ds
or
lock
jmp
push
add
in
fbstp
cmpsl
shll
push
mov
test
jmp
add
mov
pop
cmp
test
mov
mov
rcrb
pop
or
lods
ret
test
ficoms
popf
jnp
push
mov
pop
sub
shr
xor
xor
das
rcll
cmp
lea
adc
mov
cmp
inc
adc
pushf
add
jge
daa
call
mov
sub
cwtl
adcb
add
pusha
subl
repnz
mov
cmp
mov
jp
cli
repnz
dec
frstor
xchg
stos
out
jo
jge
sbb
dec
sbb
xchg
inc
push
stc
pop
icebp
pop
lret
and
test
jb
sti
cld
mov
ljmp
inc
mov
xchg
jne
daa
pop
push
pop
fisttpl
into
xor
jae
dec
and
pop
lods
mov
jbe
nop
rcrl
mov
push
das
fmuls
sti
mov
movsb
lret
pop
sbb
dec
jbe
fldenv
loope
sar
push
mov
mov
test
lods
aaa
cs
hlt
aad
test
icebp
mov
xchg
ss
gs
and
sub
das
xor
adc
mov
test
mov
sbb
push
xchg
pop
clc
ljmp
out
repz
jnp
cwtl
fs
dec
cld
mov
out
xchg
mov
shlb
pop
and
test
outsl
xor
outsl
sub
sbb
add
in
adc
mov
fisttps
push
mov
adc
sub
jmp
add
sub
mov
ljmp
into
test
movsb
inc
lahf
mov
xor
cli
vfrczps
xchg
int3
aad
out
mov
cmc
adc
ret
loop
dec
das
addr16
sbb
cmpsb
cltd
pop
clc
jns
test
push
adc
out
add
jne
in
es
sub
dec
rclb
jp
push
pop
mov
fnsave
sar
mov
add
movsb
jecxz
repnz
xchg
mov
inc
push
dec
pop
mov
pop
orb
dec
into
aaa
clc
insb
add
popf
jecxz
in
std
pop
push
jge
mov
pushf
xchg
xor
ret
dec
cmp
insb
xor
mov
cmp
or
bound
dec
xchg
int
xor
into
icebp
into
je
jle
inc
mov
xchg
push
push
adc
cmp
pop
add
iret
inc
add
popa
fimull
das
dec
pop
les
call
lret
mov
out
cwtl
imul
push
lret
adc
fnsave
mov
aaa
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
mov
push
lret
bound
dec
mov
or
cmp
inc
mov
fs
cmc
stc
push
dec
std
lds
mov
movl
fwait
dec
leave
pop
push
addl
mov
pop
subl
sti
jb
ja
lret
out
dec
sbb
loop
std
lcall
outsb
mov
sub
movb
cmp
rclb
pushf
and
inc
adc
addr16
mov
ljmp
test
jmp
xchg
mov
jg
addr16
and
pushf
lcall
hlt
adcb
jae
jne
movsb
sbb
das
mov
xor
test
cmpsb
sub
inc
and
mov
inc
bound
or
cmpsl
test
xor
push
jns
jmp
or
das
iret
mov
push
out
or
mov
xchg
cmc
fnstcw
aas
sub
xchg
jns
cmp
aad
ljmp
sbb
out
inc
cmpsb
scas
out
call
aaa
mov
and
dec
daa
jae
mov
pop
jne
push
push
cmpsl
dec
jle
mov
inc
push
in
aas
ss
and
xchg
mov
cwtl
repnz
sarb
push
mov
dec
pushf
cmp
das
mov
movsb
test
add
cs
ltr
aam
push
and
test
push
cltd
lods
mov
xchg
xor
mov
pop
nop
daa
inc
dec
sbb
shl
imul
imul
and
loope
jno
lds
ds
aad
loop
mov
xchg
lahf
jmp
cmp
inc
fcompl
fcomp
mov
ss
ja
fdivl
pop
rcrl
out
mov
pop
cmp
fstpl
test
notl
jle
xor
data16
lock
push
push
lahf
out
repnz
dec
pop
mov
mov
and
imul
jno
cmpsl
lahf
xor
xchg
lcall
dec
mov
enter
and
aam
mov
dec
dec
inc
xchg
mov
sbbl
push
sbb
decl
es
mov
sbb
pop
inc
test
jp
sbb
mov
cwtl
out
cld
dec
jnp
mov
fs
imulb
add
fwait
or
adc
lret
xor
ret
mov
rclb
jnp
movsb
push
daa
inc
push
cmc
push
pop
test
cmp
fsts
decb
xchg
mov
lret
jne
dec
movb
mov
lods
or
and
adc
sbb
cmp
arpl
stos
and
mov
cmc
inc
and
mov
push
add
jb
mov
pop
lods
ljmp
xchg
sub
out
mov
pop
mov
outsb
add
mov
mov
mov
and
test
out
imul
pop
push
pop
cmc
mov
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
lret
adc
sbb
sub
xor
jle
fwait
add
inc
lahf
push
fsts
jns
fiaddl
adc
ret
adcb
call
jne
xlat
xor
pop
cld
inc
pusha
pop
sbbl
dec
cmova
lods
pop
rol
mov
xlat
cli
arpl
inc
xor
lahf
addr16
sahf
mov
or
in
sub
hlt
rolb
cmp
scas
push
adc
loopne
dec
fcompl
jecxz
outsb
or
hlt
in
notl
xchg
sub
ja
lea
ret
jo
pop
push
pop
insb
stc
pop
push
sub
pop
add
out
mov
jmp
jle
cmp
mov
popf
add
xor
clc
xchg
aad
in
aaa
mov
out
adc
dec
jge
push
nop
xchg
and
mov
xchg
fisttpl
shrb
pusha
dec
inc
mov
mov
ret
imul
popa
jbe
mov
inc
aam
ror
dec
pop
sub
push
call
ffree
cmp
dec
add
lret
and
insb
pop
xor
nop
cltd
sub
or
lds
test
lock
add
test
fidivrs
xor
or
stos
xchg
push
mov
in
xor
ret
push
shl
enter
push
mov
lea
jb
mov
out
daa
mov
adc
mov
xchg
sbb
fcmovnbe
mov
ficomps
cmp
imul
enter
mov
xchg
xchg
mov
dec
or
in
orl
lds
pop
insl
sbb
sub
inc
fsubrl
and
pusha
sti
mov
push
mov
jae
push
jl
or
aas
xchg
cmp
test
jae
or
fs
sub
lock
mov
sarl
mov
pusha
adc
mov
int
and
xchg
ja
and
decb
xchg
ja
fdivs
test
jmp
psubusb
sbb
mov
aam
cmp
loope
iret
decb
pop
imul
xor
scas
mov
out
inc
xorb
jge
aas
jnp
clc
test
fcmovb
mov
imul
cmp
jns
das
sbb
inc
das
jg
mov
dec
ds
loope
jno
push
xor
mov
leave
jns
les
dec
dec
gs
cli
fwait
cmp
ljmp
out
iret
imul
mull
xor
xchg
pop
mov
jne
mov
dec
into
clc
ficompl
inc
lret
xchg
push
and
or
sub
addr16
in
inc
es
mov
ja
out
out
xchg
fcoms
pop
outsb
insl
add
jnp
mov
rcr
push
jmp
xchg
fwait
push
repnz
imul
popf
je
jb
fwait
dec
mov
into
fwait
push
xchg
ds
lret
jb
jne
pop
add
jmp
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
mov
mov
popa
push
or
iret
dec
mov
and
cmp
sbb
mov
xchg
into
mov
xor
xor
in
mov
sarl
dec
pusha
mov
std
pushf
xor
mov
pop
push
ja
and
xchg
jnp
popf
jo
sbb
jns
and
negb
pop
lea
ret
or
lcall
sub
in
outsl
dec
hlt
gs
imul
orl
jmp
or
mov
stc
cwtl
lods
push
jmp
aam
jge
jno
rcrb
push
mov
add
std
and
sahf
cs
sub
rol
fwait
dec
stc
out
jnp
vmovaps
xor
leave
xchg
inc
clc
xor
or
mov
sub
aad
xor
mov
popa
mov
mov
cwtl
add
pop
mov
pop
lods
imul
add
dec
mov
push
dec
push
nop
enter
pusha
mov
jg
insl
mov
ret
sub
xchg
and
mov
out
testb
mov
fnstenv
out
aam
imul
insb
inc
jl
pop
xor
pop
cltd
pusha
lcall
mov
int3
aaa
fdivs
lret
adc
imul
test
xor
add
mov
cmc
addr16
mov
aaa
sub
and
mov
mov
insl
lods
dec
xor
dec
cs
jb
outsb
inc
mov
dec
addr16
dec
mov
and
sbb
adc
test
aas
or
jmp
jns
int
xor
aam
jmp
aaa
or
pop
fadds
mov
cmp
and
movsl
sahf
clc
dec
fsubl
dec
jle
loope
out
popa
out
cmp
shr
iret
mov
imul
push
enter
inc
adc
jg
in
loope
sbb
push
adc
lcall
in
sub
daa
fistpl
inc
push
push
out
jae
icebp
fs
lahf
into
loop
iret
add
dec
xchg
loope
xor
les
add
cs
fs
call
ret
or
fisubs
add
pop
jecxz
adc
mov
or
hlt
jno
xchg
aad
push
fsubrl
ret
in
push
or
dec
mov
dec
lahf
int3
add
js
inc
jno
jle
movsl
add
or
and
lret
xlat
shlb
jae
decl
mov
in
into
daa
ficoml
xchg
faddl
aas
jmp
hlt
testb
mov
push
xorl
mov
pop
mov
sub
mov
lods
test
pop
std
inc
shrb
aas
js
jmp
mov
cmpsl
xor
sub
call
movsb
push
rcrl
jno
sbb
pop
xchg
jecxz
fisubs
mov
scas
adc
mov
cmp
cmp
xorb
pop
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
jge
xchg
mov
xor
jle
push
inc
test
call
js
cld
pop
ret
jmp
rcrl
ja
or
inc
mov
arpl
addr16
iret
add
xor
ficompl
mov
es
push
dec
cmp
push
inc
sub
loopne
dec
adc
sti
cmp
mov
mov
mov
cmp
fst
and
cmp
leave
inc
pop
and
int3
cmp
cvtps2pi
ss
test
xchg
jecxz,pn
mov
sub
xchg
xor
in
scas
cmp
jb
dec
outsl
xor
insb
imul
cmp
in
pop
xchg
xchg
pop
ds
ret
jno
sub
subb
jae
jne
mov
test
filds
or
pop
inc
test
or
imul
stc
mov
lock
pop
mov
imul
jnp
mov
into
test
push
jne
stos
mov
scas
fnsave
push
jge,pt
add
enter
scas
and
mov
shll
enter
pop
mov
popa
int
sub
in
fcoms
adc
pop
sub
xchg
fistps
orl
orl
push
fmuls
sub
jg
and
test
or
sub
cli
jle
scas
sbb
jmp
push
test
adc
cwtl
loop
popa
mov
xor
lock
add
shll
mov
scas
xor
push
mov
cmpl
mov
inc
das
in
das
iret
sahf
fldenv
or
mov
or
imul
mov
popa
jmp
push
mov
xorl
dec
fstps
cmpb
sub
loop
xchg
fldt
inc
xchg
pop
and
xor
shr
xchg
mov
and
xlat
mov
and
adc
inc
or
ffreep
mov
ret
movsl
mov
dec
out
jp
xor
dec
push
inc
cmp
addr16
add
pusha
push
adc
pop
nop
mov
sbb
cmp
shlb
or
xchg
outsl
scas
push
xchg
push
pop
out
and
insl
cmp
adc
inc
lret
imul
jae
adc
cli
test
push
stos
decl
sbb
dec
jle
adc
lea
inc
fcompl
fucomip
and
push
popf
inc
popf
std
test
sbb
mov
mov
sub
xchg
sub
shrb
into
cmpsb
jno
xlat
out
adc
dec
daa
subl
jmp
adc
int
add
lds
popa
jne
pop
pop
adc
mov
and
add
repz
fsubs
push
jbe
mov
loopne
mov
daa
push
ret
push
push
mov
push
push
loopne
adc
xor
xor
stc
movsb
gs
enter
push
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
ret
cmp
xor
jle
jp
gs
adc
cmp
push
adc
outsb
cmp
fstpl
xchg
movsl
add
ret
int3
xchg
pop
xchg
test
xor
adc
sub
or
push
sub
sbb
xor
stc
aad
dec
popf
mov
orl
xor
adc
ljmp
iret
dec
sub
sahf
jne
cmp
sbb
imul
out
jnp
sti
bound
and
push
fistps
cmp
inc
push
jno
std
mov
fcompl
jmp
stos
movsb
icebp
push
or
cmp
aad
dec
lret
subb
and
dec
popa
xchg
pop
stc
jmp
lret
inc
push
cmp
pushf
fs
pop
dec
iret
xor
aad
mov
mov
es
sub
mov
push
xchg
push
xor
cli
or
sbb
out
push
push
push
pop
push
pop
adcl
xor
sub
mov
outsb
or
sub
lret
jnp
cwtl
adc
sub
out
sub
ror
jbe
inc
push
or
movsl
iret
outsl
jbe
sar
mov
std
mov
out
lock
insl
push
scas
sub
mov
and
xor
xor
fbstp
fadd
mov
mov
jo
out
ret
dec
mov
inc
js
ds
mov
cmpsb
add
or
push
or
in
sbbb
jg
rolb
jecxz
out
int
dec
cli
lods
aad
add
mov
pop
push
sub
cmp
mov
in
cmc
or
adc
fcmove
js
insb
cmp
in
test
sbb
js
pop
jae
mov
push
clc
push
pop
cmp
pop
lret
jo
sbb
pop
sbb
dec
aad
addr16
mov
test
mov
nop
xorl
not
and
lods
loopne
push
jo
cmp
add
je
pop
jne
inc
popa
cwtl
pop
sbb
jmp
xchg
arpl
in
addr16
and
fwait
push
jo
cmpsb
outsl
push
loopne
xchg
mov
cmp
jnp
dec
mov
push
pop
aas
jbe
iret
pop
repz
jmp
les
je
xchg
xadd
lea
mov
sbb
mov
loope
jp
aas
ds
cwtl
push
xor
jnp
and
scas
mov
push
push
xchg
repnz
xchg
sbbl
ljmp
call
dec
movsl
scas
mov
pop
fwait
xchg
xchg
add
dec
sub
mov
push
adc
xchg
in
lret
ret
xor
lds
test
aaa
sahf
repnz
dec
sar
aad
inc
fsubrl
xchg
scas
mov
xor
aad
testl
inc
imull
xor
dec
pop
xlat
rorb
mov
negl
jns
jmp
inc
mov
fimull
add
add
jno
ja
shrb
inc
clc
push
loopne
jle
xor
jle
out
sub
cmp
loop
mov
lds
mov
leave
mov
and
mov
cmc
gs
mov
sbb
push
sahf
jmp
dec
push
mov
cmc
je
int
push
cmpsl
sbb
xchg
push
add
ljmp
lds
cli
sub
cmp
mov
ss
fwait
pusha
jb
lcall
dec
pop
mov
pop
andb
inc
lea
test
add
mov
mov
paddusb
pushf
and
mov
es
inc
imul
fdivs
repnz
roll
xchg
mov
in
xchg
movsb
mov
jp
pop
cmp
decl
lods
jno
push
sub
ja
fwait
in
jo
inc
cmp
lret
imul
fdivrs
sbb
jmp
stc
pop
aam
sbb
add
aas
push
jne
jns
dec
jbe
xor
les
shld
movsl
mull
sbbb
mov
add
stos
test
insb
insb
cld
test
jno
adc
pop
mull
movsl
shll
jb
xchg
jns
loope
cltd
mov
sub
out
lret
ror
icebp
mov
fbld
inc
cltd
out
in
divl
stc
pop
mov
les
int3
mov
mov
xlat
sub
popa
cltd
dec
xchg
es
mov
hlt
mov
sub
mov
dec
testb
sbb
sbb
sub
jno
ret
mov
shlb
and
push
add
fcompl
pop
adcl
bound
cmp
push
adc
cmc
bound
shl
cs
outsb
idiv
jp
xchg
test
jae
enter
and
mov
je
mov
js
enter
aas
mov
or
ljmp
or
jb
sbb
test
jmp
mov
ja
adc
jno
or
inc
xchg
clc
and
mov
mov
pop
sbb
cmpl
sbb
lret
out
pushf
mov
loope
cmp
out
sbb
jmp
jecxz
out
lea
jnp
pop
rcr
xchg
int
int3
jle
lods
push
xor
jae
lret
sbb
daa
cs
add
cmp
scas
mov
daa
iret
dec
push
cmp
les
add
push
ja
imul
mov
pop
add
jle
cmp
mov
sbb
xor
mov
add
mov
jp
lea
cmpb
shrl
xlat
pop
mov
mov
jnp
leave
push
dec
negb
dec
push
push
xor
inc
sbb
dec
or
pop
pop
imull
out
std
mov
add
pop
mov
pop
lahf
mov
bts
ja
push
jo
jb
scas
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
negb
dec
movsl
cmp
xor
jle
sbb
call
sbb
jp
cmp
pop
cmp
pusha
nop
negb
push
xchg
push
mov
ss
fstpt
lcall
inc
xor
nop
dec
cwtl
popa
ret
les
push
sub
jp
not
or
aad
mov
mov
int
or
fs
stc
mov
cwtl
nop
test
sbb
loop
mov
mov
shll
inc
enter
fistpll
scas
je
jnp
test
and
pop
fildl
jno
mov
aas
and
inc
or
pop
mov
cmp
dec
subl
pop
in
add
or
cmp
cmp
cmp
xor
aam
or
loopne
jae
push
jns
loop
mov
add
inc
push
mov
nop
not
sahf
in
call
add
jmp
jo
jne
and
adc
xchg
dec
adc
fdiv
xchg
xor
sbb
mov
adc
sub
les
lcall
add
sub
in
shlb
pop
cltd
lds
mov
into
jo
mov
scas
mov
xchg
push
sahf
add
dec
xor
push
pushf
adc
repnz
idivl
movzwl
and
call
repz
aad
subb
icebp
hlt
cmc
add
jmp
loop
loop
adc
cmpsb
insb
cmp
mov
fdivr
daa
inc
mov
push
imul
pop
mov
fcomp
imul
hlt
hlt
xor
jne
hlt
adcb
inc
in
aas
int3
leave
shll
arpl
push
in
cmp
hlt
arpl
imul
xchg
fidivl
js
or
xchg
lods
ffree
repnz
imul
test
sti
ds
iret
cmpsb
lea
dec
jne
mov
jbe
andb
jbe
call
out
in
mov
adc
jbe
gs
lea
jo
jns
push
sti
sub
scas
aas
pop
mov
imul
lcall
dec
rorl
inc
jno
gs
add
rcll
sub
and
push
mov
or
pop
js
cmp
dec
push
push
sub
dec
pop
xchg
xchg
pusha
out
popa
jl
xchg
aaa
es
lcall
loope
pushf
loope
fnsave
fwait
push
roll
xor
or
pop
jecxz
mov
jae
jge
insl
cmp
stc
outsl
mov
ss
cmp
lret
or
aad
pop
inc
icebp
sub
sub
dec
xlat
push
rorl
repz
in
loope
adc
or
int3
dec
mov
adc
or
test
xor
mov
push
out
sbb
addr16
push
dec
and
in
in
inc
or
adc
out
push
jne
mov
cmovge
or
xchg
xchg
sbb
clc
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
sbb
xchg
data16
jle
fistpll
cmpsl
iret
xor
rclb
mov
test
jb
sbb
jae
call
hlt
frstpm(287
jns
add
jge
imul
mov
dec
movsb
in
jl
fmul
or
std
xor
and
mov
xor
adc
sub
xchg
stc
inc
andb
mov
jb
in
mov
and
mov
jle
sti
sub
push
xchg
fbstp
and
add
lret
and
enter
push
and
rol
stos
push
lock
sbb
xchg
aas
mov
fildll
and
ds
mov
jmp
xor
inc
movsl
in
mov
xorl
into
iret
mov
xor
mov
dec
repz
jb
fildl
in
push
in
rol
repz
jmp
or
ret
stc
loopne
bound
jmp
jmp
int
icebp
inc
xchg
adc
sub
mov
and
pop
iret
xor
mov
pop
movsl
xor
push
into
enter
loop
push
dec
push
inc
je
push
outsb
lods
sub
push
das
or
xor
and
push
mov
in
cltd
sti
loopne
in
inc
lcall
js
jle
push
popa
scas
inc
mov
test
lret
adc
lods
jmp
pop
jmp
cmpsl
orl
inc
pop
fbstp
enter
das
add
adc
fnstsw
xchg
pop
bound
lcall
push
mov
imul
add
add
xchg
in
out
mov
push
cmp
sub
std
or
test
pop
les
mov
lea
scas
mov
sti
fst
shrb
adc
sbb
fisubrs
addb
aas
loopne
and
in
cmp
insl
repz
repz
mov
aas
fldenv
rol
sbb
shll
adc
inc
es
std
data16
sbb
ljmp
cltd
jmp
cmpsb
jge,pn
or
orl
xchg
cmp
out
xchg
out
scas
dec
sbb
pop
and
pop
or
mov
test
mov
inc
add
xor
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
out
pop
mov
jle
fwait
cltd
mulb
dec
dec
push
cmp
inc
pop
test
leave
sbb
inc
addr16
dec
aam
mov
scas
xchg
aad
or
aad
adc
pop
movsb
test
jbe
pop
bound
test
test
ja
mov
ret
data16
stc
rorl
ja
jmp
loope
xor
xchg
fwait
addr16
lret
jae
addr16
fisubrl
repz
lcall
in
or
jo
dec
cmp
int
xchg
sbb
cmc
adc
mov
lret
sbb
int
jecxz
or
clc
sbb
dec
xchg
sar
dec
xor
sbb
jne
fcmove
mov
popf
fcom
adc
fwait
and
adc
pop
push
dec
std
pop
mov
scas
dec
mov
scas
aam
cmpsb
inc
loopne
mov
xchg
adc
dec
push
push
fcmovnu
lahf
mov
pusha
out
and
jmp
or
in
sub
rcrb
mov
imul
es
bound
pop
xor
test
ret
stos
dec
in
fistpl
jl
push
ds
or
or
dec
lods
mov
inc
sbb
mov
pop
jecxz
ror
daa
fdivrl
cmp
sub
adc
scas
repz
add
pop
or
inc
cmp
jne
adc
adc
xchg
pop
mov
jg
and
ss
loop
sbb
mov
outsb
stc
nop
cmp
shl
cwtl
push
mov
bswap
repnz
sbb
lahf
inc
sbb
lds
sti
adc
imul
adcb
fs
push
loop
in
mov
std
cmc
es
std
xor
jb
cs
push
orb
mov
pop
call
fildll
pop
sahf
cmpsl
adc
sti
in
adc
in
push
sarl
sahf
cmp
inc
out
and
xchg
lods
fnstenv
mov
data16
push
push
scas
movsl
xchg
adc
shlb
cli
mov
and
pop
les
loop
test
xchg
xor
loope
or
or
dec
push
jbe
jmp
pop
clc
xchg
dec
lcall
fildll
cmp
rorb
add
in
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
pushf
jg
push
movsb
sarb
jge
jle
push
stc
mov
and
hlt
aaa
and
dec
xorb
ds
push
and
xchg
inc
sar
ret
out
gs
xchg
ljmp
inc
jl
cmp
push
into
mov
jae
repnz
cmp
pop
mov
test
outsb
jo
je
jnp
lret
test
clc
movb
dec
xorb
neg
and
sbb
mov
lret
inc
cmp
push
insl
mov
adc
add
cmp
lods
jmp
in
sub
xchg
lea
fsubr
cmp
bound
in
out
xchg
pop
insl
xor
mov
cltd
fdivs
jmp
ds
das
xchg
in
mov
imul
repz
and
adc
cmpsl
mov
adc
pop
stos
jmp
inc
xor
push
inc
push
dec
inc
ja
xor
out
sub
enter
and
std
leave
push
aam
ss
xchg
scas
jmp
xchg
push
lcall
mov
xor
sti
add
xchg
jb
sbb
cmp
pop
cld
or
pushf
fwait
andl
mov
fistl
dec
sti
sbb
mov
scas
xlat
lods
jge
add
scas
pop
mov
xchg
mov
in
shlb
push
daa
scas
lods
push
rolb
push
ljmp
lahf
cltd
xor
jns
cli
mov
gs
imul
xor
std
push
sub
or
js
jg
sti
cmp
sti
xchg
sub
sub
cmp
ds
ss
inc
cli
jae
cwtl
ljmp
xor
fnsave
mov
dec
and
in
out
xchg
jno,pn
and
cmc
fdivrs
sub
xor
xor
pushf
mov
adc
pop
add
pushf
push
jbe
outsl
ljmp
rol
fs
cmp
cmp
scas
loope
inc
mov
or
sahf
outsb
andb
mov
xchg
out
test
cmc
fwait
popf
fldt
mov
loopne
pop
push
mov
fcmovbe
jo
mov
fmull
adc
mov
and
pop
xchg
xchg
push
mov
sub
shl
imul
fists
ja
adc
fsubrp
incl
xchg
ror
cmp
test
test
xor
jno
ret
mov
test
add
add
jmp
mov
cmc
inc
mov
push
jbe
push
push
adc
inc
inc
xorb
jae
push
out
test
mov
jmp
and
jmp
adc
dec
dec
push
mov
adc
lcall
xchg
push
pop
push
xchg
pop
pushf
jge
jne
ds
mov
into
jp
xor
xor
mov
jne
icebp
mov
pushf
cmc
sbb
mov
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
fimull
jnp
push
iret
jle
and
jle
push
push
push
loope
das
loope
notl
xchg
dec
push
adc
inc
jno
sub
lcall
out
outsb
mov
aas
js
adc
dec
shr
subl
mov
ret
sbb
xor
jne
loopne
movsl
cmp
adc
sti
xchg
fistl
movl
mov
cli
stc
cmp
push
sbb
jg
push
cmp
push
cli
movsl
mov
add
lcall
push
adc
mov
dec
pop
inc
mov
dec
loop
jbe
or
ret
scas
xor
cld
call
jge
xor
pop
sub
or
mov
jle
xor
cmp
or
movsl
addr16
sbb
fs
test
mov
xor
cmc
xor
je
push
jns
insl
int3
xchg
adcb
out
xchg
pop
push
popf
rep
aaa
inc
out
in
insb
xor
xchg
rcll
stos
dec
pshufw
xchg
je
xor
lods
xor
push
pop
popa
xchg
leave
pop
loop
arpl
rcll
cmpsl
mov
mov
cwtl
inc
pop
adc
or
xor
cmp
shlb
mov
aas
stos
lods
push
hlt
shrb
shl
sbb
dec
sbb
push
cmpsb
sbb
inc
lret
and
pop
lret
xor
jo
cmpsb
jb
call
push
push
sbb
dec
imul
pop
xor
out
cmp
repnz
pop
xchg
loop
mov
fiadds
inc
dec
or
mov
mov
xor
cld
sub
push
scas
lcall
aam
out
enter
jbe
pop
adc
call
and
lea
out
lahf
cmp
ds
jns
inc
push
lahf
test
cmp
jmp
mov
mov
mov
mov
push
mov
stos
add
inc
clc
or
and
inc
and
lret
xchg
mov
xchg
sbb
pop
mov
fists
mov
xchg
xor
xor
xlat
mov
sub
and
xor
pop
ljmp
mov
insb
sub
das
imul
sbb
or
push
add
in
test
dec
cmp
adc
push
or
outsb
out
rep
cmpsb
testl
addr16
lea
std
in
aaa
add
and
ret
dec
js
mov
rcr
outsl
pushf
or
adc
popf
inc
sbb
repnz
mov
inc
adc
fs
add
xchg
std
jae
inc
ror
in
fisubl
int
xchg
push
xor
xor
sub
xchg
dec
push
addb
adcl
sti
dec
outsb
sub
sbb
adc
dec
call
inc
cltd
imul
pop
out
fldcw
and
or
mov
popa
scas
inc
sub
sar
es
movb
add
inc
clc
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
push
jnp
js
jle
and
jle
fldenv
xor
aad
mov
dec
push
cmpsb
xchg
aad
outsl
pop
and
pop
inc
data16
dec
fxch
xchg
sub
mov
test
mov
mov
in
xchg
lcall
ljmp
mov
mov
cmp
mov
jp
adc
repz
fucomip
push
rcr
hlt
ja
cli
es
ss
adc
pusha
push
adc
push
cmpsb
push
adc
fwait
cmp
jmp
test
movb
ret
mov
lods
popa
push
lahf
in
jl
scas
ds
dec
push
in
xchg
adc
push
xorl
dec
addr16
sti
sub
subb
push
dec
xor
fsubrs
stos
arpl
sub
pushf
fsubrl
std
lret
scas
scas
cmp
in
addr16
cmpl
fwait
rcr
and
pop
loop
cmc
stc
stos
pop
dec
xchg
inc
daa
xor
jg
loope
icebp
jle
xor
fst
push
int
cmpsb
inc
addb
sub
cmp
cmpl
dec
fnstsw
jae
cltd
mov
dec
mov
repnz
cmp
xlat
mov
xchg
mov
mov
imull
outsl
adc
mov
inc
movsb
std
orb
gs
push
out
jmp
imul
adc
fldenv
jmp
frstor
mov
pop
scas
pushf
xor
pop
rolb
or
shrl
mov
inc
inc
shl
into
jb
cmp
js
mov
scas
mov
push
pop
out
jnp
jle
lods
test
xchg
sub
mov
aaa
fiaddl
js
sub
inc
jb
mov
stc
fwait
pop
pop
mov
jl
jecxz
push
inc
cs
inc
add
adc
mov
or
lods
rcrb
push
mov
add
adc
inc
mov
xor
jle
xor
xor
mov
repnz
cltd
test
mov
sbb
adc
or
xchg
pushl
mov
pop
jl
adc
or
aas
cwtl
sti
inc
cltd
cmpsb
inc
pop
arpl
in
lods
hlt
mov
adc
mov
arpl
loope
inc
rcll
mov
nop
int
ficoml
and
inc
outsl
xchg
out
in
or
and
ret
enter
sti
cs
les
out
push
mov
cmp
push
and
fsubrs
and
cld
imul
push
fisubrl
push
fdivrs
scas
addr16
and
push
and
jecxz
add
mov
cmp
xor
jnp
cmp
jle
das
test
int
push
icebp
orl
cmp
movsl
jne
mov
inc
and
jl
jg
movsl
pop
lret
ficompl
ret
or
mov
inc
jg
push
rclb
pop
stos
pop
sub
adc
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
les
jle
in
jle
hlt
push
xchg
test
enter
rcrl
mov
push
ja
cwtl
or
push
jmp
insl
loope
pusha
loopew
mov
or
mov
lcall
mov
call
mov
roll
jno
movsl
or
fcomps
and
jns
das
sti
sbbl
aaa
cltd
push
cs
mov
pop
xchg
sti
cmp
sub
mov
xchg
ss
enter
pop
push
out
mov
iret
or
fmull
fsubrs
push
dec
addb
inc
loope
filds
sti
xchg
sub
ja
cltd
getsec
xchg
jge
lcall
fs
je
inc
pop
aam
rcll
aad
daa
fadds
xchg
imul
adc
arpl
or
sahf
or
cmp
cmp
adc
or
mov
sub
sbb
mov
test
push
js
int3
push
js
add
adc
inc
xlat
vcvttps2dq
jp
and
push
xchg
pop
mov
fidivl
sub
in
adc
into
pop
loopne
inc
xor
inc
mov
cvtps2pd
add
out
mov
mov
inc
data16
imull
clc
xor
inc
in
xor
xchg
add
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
jle
xlat
jle
in
jle
clc
jb
pusha
hlt
int
jb
dec
lahf
dec
cld
fs
cli
popf
xchg
push
cmp
cmp
jno
fidivl
movsb
insl
xor
mov
cmp
and
mov
insl
mov
cli
cmpsl
inc
in
xlat
xchg
ret
fmull
push
cmpsb
mov
and
mov
jns
mov
push
jnp
sbb
push
leave
bound
xlat
fimuls
loop
out
fistps
dec
rol
xor
cmc
mov
popf
cmp
dec
xor
xchg
ds
out
mov
pop
or
add
testl
cwtl
add
mov
stc
fisubl
cmc
push
scas
xor
mov
lea
pushf
dec
les
pop
fbld
test
mov
je
into
push
das
jecxz
push
cmp
cwtl
push
std
cmp
mov
insl
mov
sub
imul
lret
shlb
sarb
jo
cmc
imul
into
cmp
scas
sub
repnz
imul
sbb
xchg
jecxz
add
push
repz
push
pushf
adc
mov
or
adc
sbb
loopne
icebp
sbb
mov
mov
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
xchg
jae
dec
mov
xor
dec
xchg
jo
sub
outsl
and
in
leave
shlb
lcall
cmp
cltd
stos
cli
add
fstpl
or
sbb
into
test
dec
xchg
aam
pop
cmpsb
push
shll
sbb
and
fisttps
and
jbe
dec
push
les
sbb
mov
lret
cmp
subl
hlt
mov
push
sbb
mov
sbb
int3
das
ficoml
xchg
arpl
lods
xchg
jae
push
outsb
dec
or
mov
cmp
insl
pop
pop
mov
rcr
ret
adc
xchg
pop
jl
insl
or
push
fwait
and
cwtl
push
pusha
dec
xor
push
adc
cltd
sbb
jle
jb
hlt
jo
jno
cmp
subb
pop
enter
data16
cld
inc
add
out
jge
fwait
xchg
popl
aam
sub
call
imul
xchg
mov
dec
and
insb
sub
pop
jnp
repz
sbb
arpl
in
pop
xor
je
jne
shll
mov
dec
xchg
pop
pushf
leave
imul
movsb
int3
inc
mov
sarb
pop
jb
insb
jmp
into
push
mov
xchg
pop
cmpsl
into
outsb
dec
gs
aaa
lock
rcrl
push
fcmovnu
dec
lds
mov
test
add
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
loopne
sbb
jle
jg
jle
and
push
mov
jo
rclb
dec
push
lret
imul
outsl
fsts
pop
add
jae
adc
inc
mov
into
add
scas
pop
xor
arpl
aad
test
dec
repnz
insb
rcr
jne
test
push
jne
lahf
dec
push
xlat
push
inc
mov
mov
fwait
aaa
mov
dec
ret
mov
lret
cmp
sahf
mov
and
dec
out
sbb
mov
or
dec
adc
jnp
sub
jmp
mov
cwtl
jge
pushf
mov
in
sbb
out
movsb
cld
cmpsl
and
dec
mov
jle
add
fwait
pop
movb
rcll
add
test
lret
sub
sbb
fmul
jg
adc
gs
aaa
xchg
outsb
enter
mov
or
and
sarb
xchg
pusha
jbe
xchg
add
cmp
inc
flds
sbb
dec
dec
mov
loope
xchg
rolb
cmp
lds
and
inc
pop
out
and
rolb
xor
sub
mov
test
aad
jg
mov
jmp
push
sbb
mov
xor
add
jmp
adc
test
or
jle
in
jle
jo
inc
cs
rcrl
mov
add
jb
sub
jge
popf
fnstsw
mov
dec
outsl
icebp
inc
cmc
mov
sbbb
in
mov
aas
jo
jbe
dec
cltd
sti
sti
ja
cmpsl
testl
loop
dec
data16
lods
cmp
lret
bound
jle
inc
dec
dec
popa
jg,pt
jmp
push
xor
imul
jnp
jp
aas
cs
dec
in
mov
movsb
cltd
mov
add
add
jp
imul
shrl
or
jl
cmpsl
lahf
cmp
pop
jecxz
mov
in
jmp
neg
aam
xchg
decb
popa
push
in
push
decb
push
mov
movsb
int
add
js
inc
ret
inc
hlt
sub
adc
and
inc
int
shlb
push
gs
arpl
cltd
pop
inc
and
sti
flds
out
pop
push
adc
push
mov
mov
js
ljmp
mov
xor
xor
xchg
adc
jge
cld
cmp
mov
clc
gs
lret
jg
add
adc
sub
or
adc
add
dec
je
or
sub
lea
jbe
rcll
outsb
hlt
fwait
cmp
or
fnstcw
dec
cmp
xor
mov
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
push
cmp
jle
in
jle
mov
jno
xchg
jmp
xlat
adc
pop
mov
shlb
inc
ljmp
cltd
fiaddl
and
enter
aam
test
and
pop
subb
fs
or
push
xor
ret
mov
in
imul
mov
mov
nop
mov
scas
aas
mov
mov
or
cmp
and
push
sarb
pop
inc
dec
out
in
mov
incb
or
adc
ficoml
sub
add
add
pop
fs
dec
ficompl
pop
jg
mov
jl
mov
enter
inc
rclb
jg
test
jnp
outsl
out
stc
pop
cmpl
pop
sub
scas
fxtract
and
pop
sbb
pop
pusha
mov
fsubs
and
xlat
cmp
insl
sbb
scas
xorb
xor
and
roll
adc
mov
dec
inc
les
jb
gs
repnz
in
jae
imul
in
xchg
stc
aad
movsl
das
fisubl
mov
loop
adc
fsts
lods
outsl
scas
fstps
adc
in
lea
and
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
pushf
scas
fidivrs
in
jle
pop
dec
xchg
ss
sbb
push
fdivl
ror
test
loope
daa
push
add
ss
jb
mov
in
jo
adcl
pop
pop
fsubrp
rcll
and
fsubs
fsubrl
imul
mov
dec
aam
scas
fs
lods
sbb
rcll
jnp
cmpsb
jl
dec
insl
xchg
mov
jne
dec
fildl
add
push
sbbl
pushf
xchg
lea
lahf
fwait
push
imulb
cmp
mov
aam
cmp
movaps
pop
enter
test
stos
std
lahf
push
and
inc
out
pushf
stc
scas
xor
lods
or
mov
outsl
or
inc
jl
mov
xchg
pushf
inc
or
aad
negb
mov
insl
loopne
ficoms
call
push
pop
pop
mov
in
loopne
dec
or
lods
push
addr16
sub
sub
push
or
gs
mov
xor
hlt
cmpsb
ljmp
nop
cmpb
sub
fisubrs
cld
popf
stos
push
cmp
iret
jl
sbb
test
ljmp
xchg
or
xchg
popa
jbe
or
add
into
fdivrs
cld
out
sbb
outsb
nop
testb
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
inc
and
adc
jle
in
jle
bound
cmpsl
jge
pop
push
je
jbe
inc
mov
inc
push
imul
push
out
jl
addl
push
jl
mov
xchg
ret
push
insl
lret
movsb
jb
insl
adc
mov
ja
movsl
cwtl
sub
insb
adc
pop
or
leave
mov
fwait
and
lods
adc
mov
lcall
fdivr
movsb
into
jg
mov
sahf
mov
lahf
sbb
das
xor
jnp
mov
and
lret
bound
icebp
insl
xchg
or
add
addr16
mov
fcomps
aas
aad
sbb
imul
js
cmp
xor
push
adc
add
lock
icebp
push
loope
sub
not
add
int3
or
in
data16
ret
es
jecxz
sbb
stos
mov
lcall
adc
mov
shrl
in
ljmp
cmp
daa
imul
loopne
lcall
pop
push
mov
sub
iret
adc
sub
jmp
jmp
gs
dec
aaa
xchg
stos
push
mov
push
daa
or
aam
shr
ja
sahf
adc
mov
loope
adc
sbb
adc
std
pop
mov
rorl
jbe
ss
cmp
mov
mov
es
jne
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
jg
fists
inc
adc
daa
scas
adc
mov
push
mov
clc
addr16
mov
push
lcall
sbbb
mov
mov
mov
push
cmp
lods
adc
jmp
dec
xchg
mov
ja
xorl
lea
imul
pop
and
adc
mov
cld
lock
pop
dec
into
rcrl
ja
je
repz
dec
lret
in
outsb
jp
repz
lahf
out
in
insl
or
push
push
jnp
xorb
fisubrs
or
ja
cmp
aam
inc
test
lahf
xor
mov
rcll
in
mov
jge
jbe
xchg
push
ja
fcmovb
fdivr
fstpl
xchg
ret
jnp
idivb
push
inc
stos
popf
subb
add
mov
push
mov
loop
sbb
push
mov
inc
ljmp
inc
jne
in
or
mov
fmuls
fmuls
mov
mov
push
cmp
ja
pop
jbe
jb
pop
and
adc
add
or
imul
cmp
fcoms
insb
dec
dec
outsl
xchg
mov
addr16
dec
and
pop
clc
mov
adc
xor
pusha
push
xor
je
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
dec
jbe
fbld
jle
jp
jle
or
mov
insl
in
mov
out
jmp
inc
adcb
test
lea
faddl
iret
sbb
imul
xchg
in
cmp
sbb
sarl
inc
xlat
cmp
inc
mov
adc
sbb
clc
xchg
movsl
dec
sahf
std
test
cmpsl
andb
push
addr16
sahf
adc
pop
and
scas
das
jg
fbstp
lahf
inc
adc
jmp
inc
mov
jg,pn
mov
lahf
push
mov
pop
leave
cld
call
adc
cmpsb
lret
mov
mov
outsl
or
icebp
cli
cmp
popf
adc
scas
push
push
dec
int
in
fldt
cmp
mov
adc
cmpsl
and
fs
xchg
gs
jecxz
sbb
outsl
jmp
mov
cmpsb
sbb
test
cmp
dec
ljmp
repz
ss
std
dec
xchg
cmc
sub
adc
lods
insb
cmpsb
adc
push
and
mov
aam
lahf
imul
int
jne
mov
repz
ret
or
push
jnp
jae
lretw
sti
loopne
test
arpl
jae
pop
orb
dec
add
ret
xor
call
imul
sbb
mov
jnp
test
movsb
or
mov
cmpl
sbb
std
xor
outsl
and
pop
and
inc
cmpsb
icebp
cmp
dec
push
fstpl
xlat
jb
mov
movsb
push
cmpsb
jb
dec
mov
xchg
pushf
xor
sub
out
jge
out
fwait
sub
fldcw
lods
push
jg
xor
into
cmp
mov
mov
ficoml
stos
out
gs
out
xchg
mov
sti
xchg
jno
je
filds
ljmp
hlt
es
sub
jbe
cmp
roll
lock
mov
mov
stc
stos
push
sahf
dec
xchg
mov
dec
movsl
push
out
or
cld
fsubrp
sbb
ds
xor
push
add
imul
fwait
sarb
mov
push
addr16
and
testl
das
xchg
and
call
xor
push
adc
popa
push
addr16
ja
shlb
or
inc
lods
js
lods
mov
test
movsl
xchg
jb
and
lcall
fcompl
add
and
jecxz
out
pusha
dec
push
in
scas
ljmp
jp
cmp
xor
add
add
sbb
add
ljmp
xor
pop
sbb
fwait
mov
or
mov
mov
lea
jo
adc
fcompl
xor
dec
sub
mov
inc
in
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
xchg
insb
fnstcw
jp
jle
fcmove
and
xor
lods
add
daa
pop
repnz
lods
decb
xchg
mov
aas
loope
jnp
add
sbb
out
fldcw
jl
cwtl
add
push
fdivrp
fisubrl
sbbl
icebp
inc
imul
movsb
fmull
xchg
xor
mov
push
scas
sbb
ret
inc
popf
mov
repnz
fcmovbe
popf
dec
das
mov
sahf
jp
mov
jp
aas
adc
dec
pop
outsb
ret
cmp
jne
pop
cs
hlt
jno
pop
fildll
mov
lret
gs
mov
and
movsl
rcl
inc
je
add
adc
adc
sbb
cmp
sti
fadds
data16
sub
xlat
xor
xchg
mov
cmpsb
in
mull
mov
mov
dec
outsb
mov
call
ret
nop
int
fcos
dec
fmull
and
push
xchg
aas
in
cmp
ficoms
out
mov
sbb
test
int3
mov
inc
push
lahf
mov
loopne
out
sbb
pop
popf
sbb
jb
pop
sbb
and
pushf
pextrw
lods
mov
and
fsubr
jl
sbbb
sbb
in
add
fisubrl
shlb
add
ds
daa
add
push
pusha
int3
sarl
hlt
xorl
inc
stc
test
jno
pop
jl
fimuls
idivb
mov
cwtl
pop
adc
js
xor
dec
mov
data16
xlat
cltd
pop
call
push
lods
cmp
dec
arpl
mov
jle
out
lcall
pusha
mov
push
leave
sub
stos
add
jge
mov
inc
ja
popf
xor
inc
lea
sbb
out
xor
aam
scas
cs
ret
inc
or
inc
repnz
inc
xor
push
xor
daa
push
jp
ret
and
imul
pop
lds
jle
int
inc
movb
div
sti
dec
popa
push
or
lcall
into
insb
xlat
lds
adc
and
jle
push
adc
out
sahf
add
dec
jecxz
mov
fbld
sti
xchg
sub
ret
aad
sub
xor
pop
xor
and
test
in
es
lret
cltd
mov
add
sub
add
cltd
mov
dec
xor
pop
into
outsb
arpl
push
lret
cmp
daa
pushf
mov
mov
pop
jne
sbb
pop
out
rol
xlat
xchg
bts
bound
inc
pusha
pop
cmp
repnz
push
dec
push
clc
js
das
jle
outsb
sbb
sub
mov
in
sbb
and
mov
mov
cmp
cli
pop
adc
adc
adc
outsb
mov
adc
out
mov
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fstp
push
jmp
jle
jge
jle
adc
and
sub
sbb
add
dec
fmull
push
jns
jle
mov
sbb
hlt
push
cmp
fisubrs
out
or
jns
lret
sbb
rol
or
mov
mov
pop
dec
or
ljmp
jne
xor
cmp
call
mov
dec
popf
in
and
cmp
lcall
cmp
push
pushf
insl
std
cmp
pop
loopne
add
cs
push
cltd
js
das
and
sub
pop
rolb
pop
test
adcb
jecxz
dec
push
fildll
cmpl
xor
mov
test
inc
jae
jp
insb
push
int3
fnstcw
in
or
icebp
sbb
mov
adc
addr16
fstpt
push
jl
and
shll
and
and
mov
xchg
cld
add
push
sub
scas
cmc
mov
cld
test
ja
xor
xchg
or
add
pusha
jecxz
inc
lods
inc
cs
lods
push
push
testl
enter
sbb
cld
lea
fsubr
das
jl
cli
mov
or
in
jle
cmp
test
repz
outsb
iret
xchg
push
cmpb
push
push
ret
and
push
pop
inc
lahf
jecxz
mov
push
roll
les
mov
lea
call
xchg
pop
fwait
adc
inc
pop
push
imul
sbb
mul
xor
mov
hlt
lcall
mov
in
pop
add
pop
xlat
pop
cltd
sub
add
cltd
popa
dec
stos
sbbl
faddp
and
push
jle
inc
test
dec
inc
shll
xchg
inc
push
mov
fsubrl
rcrb
pop
jae
in
xlat
lret
imul
inc
popf
ret
stos
in
or
xorb
sbb
adc
les
sahf
push
add
jge
mov
nop
aad
dec
mov
sti
sub
or
in
cmp
sub
pop
jmp
lods
test
mov
push
cs
pop
ds
add
movnti
push
mov
outsl
sub
add
jmp
imul
sbb
cmpsb
fisubs
shll
and
xchg
rolb
xor
popf
jl
xchg
sarl
jmp
mov
cmpsl
cli
add
or
fisubs
push
push
ljmp
or
insl
pop
sbb
pop
stos
mov
enter
icebp
pop
sbb
xchg
jle
push
xchg
test
loop
out
fsubrl
test
sub
addl
lds
in
add
pushf
iret
incl
add
sub
dec
lahf
dec
lret
mov
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
outsl
xor
jle
jge
jle
orb
mov
jge
popf
mov
stos
into
bound
cmp
jnp
std
jg
ret
jge
outsl
aaa
lods
mov
and
dec
mov
test
or
pop
and
jg
push
popf
adc
pop
jae
loopne
repnz
fcmovnu
repnz
pop
dec
push
cmp
push
jae
add
jnp
pushf
push
jne
cmc
push
inc
pop
pop
mov
cmp
cwtl
sbb
push
or
scas
test
mov
in
enter
daa
xchg
jb
and
shll
xor
push
andb
push
jbe
insl
orl
popa
imul
pop
sub
inc
pop
inc
adc
xor
xchg
cmp
stos
insb
nop
sahf
or
dec
mov
and
fldt
sahf
int3
movsb
lea
sahf
mov
jne
add
lret
loopne
sub
aam
jecxz
dec
out
dec
subb
xchg
mov
cmpl
mov
imull
adc
mov
insl
jo
into
insl
stc
fnsave
pop
mov
int
mov
ror
inc
das
inc
ss
mov
nop
xchg
and
in
iret
fucomip
pop
cwtl
mov
sbb
add
roll
mov
sub
fwait
dec
sub
xchg
lret
adc
out
cwtl
dec
xchg
ljmp
xor
push
dec
dec
int
sbb
pushf
rol
add
push
xor
test
add
decl
inc
xchg
lods
popa
int
fisubrs
dec
scas
jne
insl
push
sahf
cmp
push
xor
mov
std
sbb
add
das
push
cmp
dec
cmp
mov
repnz
jbe
in
insb
sbb
push
shll
pop
sbb
out
dec
adc
bound
cmp
mov
nop
mov
mov
sbb
jne
sti
lahf
mov
maskmovq
imull
pop
mov
nop
lea
pop
sub
scas
jp
xchg
in
inc
xchg
xor
inc
jge
mov
and
das
dec
xchg
add
sub
movsb
push
js
jns
mov
lret
xchg
mov
xor
adc
call
jle
aam
repz
lds
dec
mov
test
aas
sub
int
and
bound
out
jecxz
mov
cmp
jl
xor
sbb
xchg
dec
mov
test
mov
jle
pop
add
fdiv
icebp
fucomip
inc
ss
jecxz,pn
mov
xor
aam
xor
iret
push
push
pop
les
dec
push
aaa
adc
xchg
sbb
pop
sub
cli
add
int
sbb
cwtl
dec
adcl
mov
jecxz
mov
cmc
lods
int3
jne
xchg
test
fidivs
fmuls
cmp
cmp
and
dec
lock
add
mov
mov
mov
jmp
enter
enter
sbb
mull
out
jle
jp
jle
mov
lods
loope
aam
or
test
dec
btl
mov
enter
insl
out
lcall
inc
pop
or
or
je
jmp
jecxz
inc
je
mov
lret
add
test
mov
xor
nop
pop
add
mov
and
push
rolb
push
iret
ficomps
push
pushf
jnp
stos
push
mov
stos
and
adc
into
rcrl
fcomps
push
dec
sahf
or
cmpsl
xor
push
inc
dec
sahf
std
jno
and
dec
pop
lds
mov
jp
rorl
icebp
fcomps
arpl
fwait
mov
enter
insl
and
mov
pop
fs
xor
mov
sbb
push
sbb
jle,pn
mov
outsb
dec
addr16
fcoms
xchg
sub
pop
add
and
pop
lret
mov
inc
jecxz
pop
or
add
jg
dec
jns
icebp
repz
in
cmp
dec
icebp
in
jnp
mov
pop
in
cwtl
pop
addl
lahf
jmp
inc
icebp
push
mov
out
gs
or
mov
sbb
ljmp
and
xlat
dec
aas
movaps
jp
adc
or
sbb
pop
popa
cmc
test
bound
lret
pop
or
cwtl
bound
add
sbb
mov
in
sbbl
popa
sub
cmc
inc
sub
mov
or
push
sbb
shl
push
lods
add
scas
add
iret
inc
jp
je
inc
jne
pop
imul
out
fsubrl
xchg
add
push
lds
mov
push
aas
dec
adc
adcb
iret
mov
repz
pusha
xchg
adc
loop
dec
jle
test
push
sbb
pop
xchg
jnp
js
sbb
cmp
lods
and
mov
push
push
sbb
add
dec
idivb
inc
adc
ljmp
hlt
shrl
push
jb
dec
pop
xorb
das
cmp
sbb
fs
in
bound
enter
jecxz
jbe
mov
cltd
inc
das
mov
in
lcall
or
cmpl
popa
dec
jo
push
mov
ljmp
push
add
mov
inc
bound
pop
out
dec
test
mov
xchg
pusha
cmp
andb
out
lret
jmp
incb
dec
hlt
jle
in
call
daa
mov
incb
mov
repnz
sub
sahf
jmp
lcall
fdivr
hlt
addl
pop
lcall
push
mov
shrl
clc
add
shll
loopne
push
jbe
test
xor
jmp
pop
sbb
jp
xor
xor
leave
cmp
fisttps
fwait
addr16
clc
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
xchg
cld
dec
addr16
jle
jp
jle
or
adc
imul
adc
xchg
add
fistpl
pop
ficompl
inc
stos
gs
mov
loope
mov
mov
sub
push
and
mov
mov
jbe
inc
xlat
iret
enter
ror
popa
xor
sub
xor
xchg
or
mov
dec
fidivrl
pop
sub
bound
dec
xchg
je
icebp
dec
in
ret
add
lret
scas
ret
adc
lock
in
jno
sub
ljmp
int
xrelease
repz
mov
dec
dec
fcom
cmp
dec
leave
loop
push
ljmp
punpckhdq
sub
inc
movsl
rcr
sarl
jp
nop
imul
lcall
add
sbb
pop
sbb
cmp
outsb
lds
lret
cmp
add
sbbb
aas
fdivl
ror
sub
call
sbb
in
and
pop
mov
xor
popf
rclb
dec
mov
dec
loop
scas
pushf
cltd
or
into
adc
shll
ret
std
incb
and
push
les
and
and
mov
mov
rcr
sub
jo
pop
icebp
ret
loop
push
lret
xor
dec
leave
jo
pop
in
push
adc
sub
mov
xchg
xor
sub
ljmp
mov
push
gs
mov
xor
adc
add
repz
cmc
mov
aaa
lds
shlb
lods
iret
mov
dec
shll
mov
fs
loope
pop
dec
leave
mov
push
mov
leave
adc
fidivrs
mov
mov
or
orl
xchg
add
jno
push
loop
aas
mov
je
push
xchg
sub
adc
pusha
cwtl
mov
add
hlt
jp
inc
ljmp
or
pop
scas
sbbb
sahf
cmpsb
xchg
cld
push
mov
mov
mov
mov
mov
ljmp
push
stc
push
and
mov
or
mov
pusha
mov
jmp
dec
jns
ss
xchg
push
push
push
sbb
call
cmc
or
inc
les
std
addr16
sbb
fsub
mov
iret
xchg
or
pop
faddp
xor
xorb
pop
imul
sub
inc
jne
call
adc
push
lds
rcll
enter
cmovae
loopne
cmp
sub
test
and
fldt
xchg
and
adc
aaa
daa
mov
out
les
jmp
in
notb
sub
jnp
ss
jle
jp
jle
mov
js
and
xor
not
dec
add
out
bound
cmovb
sbb
out
loopne
adc
dec
push
xor
pushf
imul
cmpl
xlat
je
push
mov
cmp
jmp
add
sahf
aam
arpl
pop
cs
movsb
mov
mov
ja
mov
inc
movsb
mov
mov
sub
push
mull
in
inc
fidivl
or
push
iret
inc
jle
mov
inc
pop
sbb
cmp
mov
sbb
lea
sbb
fwait
dec
sbbl
sarl
push
pop
inc
scas
mov
inc
sahf
mov
in
repnz
cli
cmp
pop
std
mov
jmp
mov
test
jb
adc
pusha
cmc
rsm
das
int3
shrl
pop
movsb
add
bound
and
outsl
scas
in
dec
add
in
call
add
ret
mov
aam
jmp
fwait
mov
in
xchg
xor
pop
bound
rcrb
adc
jae
or
mov
cmpl
movsl
pop
cld
mov
push
adc
and
call
jae
add
cmp
lds
sub
shll
mov
jmp
and
mov
jecxz
inc
cmp
push
or
pop
pushl
mov
fwait
int3
push
mov
mov
lock
fiaddl
lahf
xor
std
addl
sbb
ss
lahf
push
roll
cld
push
or
fldt
lret
stos
sbb
nop
pop
ss
or
stc
lret
adc
imul
pop
cmp
pop
pop
or
bound
dec
dec
test
fsubl
sub
inc
icebp
dec
pusha
sti
scas
data16
outsb
jb
mov
mov
or
lods
sbb
and
in
jle
nop
fdivl
inc
inc
cmp
add
push
ds
in
inc
xchg
mov
mov
pusha
push
and
dec
push
xor
mov
ja
and
cmc
es
sub
sbbb
pop
cli
pop
test
push
pop
or
int3
subb
test
jbe
mov
xlat
mov
mov
loop
cmpsb
or
in
jmp
mov
sub
mov
std
ret
popa
add
mov
cld
ret
fiadds
mov
push
pusha
pop
out
jne
sbb
jbe
dec
add
mov
xor
stos
lods
shrl
pcmpeqb
lret
jmp
fwait
push
mov
gs
out
xchg
test
mov
nop
addr16
jmp
sub
subl
nop
lret
and
in
add
test
adc
add
clc
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
leave
stos
add
jle
jp
jle
and
xchg
cwtl
pop
fmull
ljmp
pop
aad
xchg
push
push
cs
in
aaa
sbb
jecxz
push
push
mov
mov
add
out
adc
xchg
mov
loop
sbbl
popw
pop
in
fisubrl
adc
fsts
lret
popf
cmp
idivb
push
cmpsl
pop
pop
mov
xchg
jno
stc
rcr
aas
add
scas
mov
mov
addr16
into
and
mov
data16
call
cld
lods
sub
daa
dec
adc
cwtl
mov
cmp
push
pop
inc
inc
fsubrs
inc
outsb
out
and
cmpsb
sub
sbb
mov
stos
lahf
mov
fimuls
fsub
bound
fildl
xor
xchg
push
out
jge
arpl
inc
cmc
int
mov
ret
leave
mov
jge
inc
inc
jp
fisttps
sahf
dec
xor
mov
out
cwtl
iret
and
pusha
imul
mov
pop
shlb
sub
andl
xor
test
aas
adc
xor
out
xchg
sti
sarb
push
lds
cmp
cmpsl
add
out
adc
fadd
fdivs
push
hlt
in
enter
outsl
addr16
push
jle
clc
notb
sbb
in
sub
sub
mov
je
insb
insb
ss
dec
repnz
cli
mov
cmpsb
ficoml
pop
leave
popa
push
inc
pop
jle
xor
outsb
xchg
data16
jp
in
mov
add
ret
jg
sub
inc
mov
pop
idiv
jbe
loopne
mov
inc
hlt
cmp
clc
xor
jae
xchg
idivb
add
mov
xor
sbb
pop
sub
xchg
and
xchg
push
pop
jecxz
xchg
mov
nop
cmp
xlat
cmp
movsl
scas
ret
imul
lahf
add
addb
fstp
dec
fs
lret
data16
arpl
je
inc
rcrb
test
pop
xchg
gs
out
mov
icebp
scas
dec
rclb
dec
int3
sbb
push
pop
mov
ja
jge
daa
lret
out
mov
fs
lock
sarl
add
and
xor
popf
push
jp
jb
add
sbb
or
cmp
jecxz
xchg
out
pop
repnz
push
mov
jecxz
xchg
or
or
add
call
push
jb
push
fistpll
inc
jge
fsubs
lods
jo
push
cmpsb
out
xor
push
xor
rcll
pop
jns
add
mov
adc
push
insl
leave
or
xchg
sbb
xchg
rorb
addb
or
jmp
push
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
ret
jle
jp
jle
rcl
or
in
dec
pop
jge
add
insl
cmp
scas
fisttpl
push
fisttps
mov
je
movsl
lea
mov
addb
cmp
int3
and
test
insb
mov
shr
cmp
sub
sti
shl
xchg
iret
push
push
cmp
mov
leave
fsubrs
dec
push
icebp
repz
cmpsl
mov
jno
add
fxch
out
mov
in
rclb
xor
mov
mov
inc
imul
sbb
nop
stos
orb
inc
scas
rcll
push
xlat
mov
insb
adc
ljmp
jmp
mov
adc
adc
outsl
repz
cmpsb
scas
loopne
jecxz
pop
and
dec
cmpsl
out
call
adc
int
ficoms
dec
rol
cld
push
or
jg
and
fnsave
pop
ds
pop
lods
and
jns
xor
push
repz
xor
out
mov
ficompl
adc
cmp
lahf
inc
inc
les
pop
test
test
icebp
mov
add
sahf
pop
dec
xor
cmp
push
xlat
into
addr16
adc
sbbl
lret
inc
nop
xchg
lea
ret
cli
mov
data16
cli
outsl
pop
xor
push
into
mov
fnstcw
and
imul
inc
adc
ret
in
into
loop
pop
adc
fisttps
dec
cmpsb
stos
loope
aad
dec
lea
fistps
sub
jnp
loope
xor
ret
mov
mov
dec
stos
dec
sbb
es
sbb
sub
dec
sub
mov
mov
and
mov
jb
jle
adc
and
xchg
push
cmc
sbb
xor
lds
or
mov
icebp
jmp
lea
mov
mov
xor
fidivrl
push
xchg
inc
push
or
ret
dec
add
add
jnp
jb
sub
outsl
bound
inc
rclb
int3
or
push
pop
lock
xor
fsubl
das
mov
mov
enter
sub
subl
sub
lcall
xchg
push
or
ss
test
popf
rcrl
incb
fidivl
roll
dec
dec
je
clc
aam
lods
daa
adc
jecxz
popf
sub
or
cli
mov
mov
mov
mov
cmpsb
mov
movsl
cmp
test
sbb
rep
sahf
fimull
imul
jecxz
or
insl
insl
sbb
cmp
shr
out
jnp
jp
lods
jae
add
mov
sti
repz
lahf
sub
mov
inc
cmpsl
push
dec
clc
popf
test
ret
cs
xor
cs
mov
mov
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
or
sub
jle
jp
jle
adc
sub
outsl
and
xchg
adc
jge
mov
mov
aas
ds
add
movsb
lea
rorl
movsb
shrl
or
or
cmovb
les
in
std
fcomps
cmp
dec
in
scas
mov
and
movsl
and
dec
mov
aad
ror
repz
outsl
sub
mul
or
inc
lret
jle
push
pop
adc
sbb
scas
in
icebp
push
shlb
pop
fadds
mov
or
mov
pop
stc
push
mov
lret
ficomps
sub
jmp
pop
xor
fildl
rol
xlat
neg
jmp
lret
aam
xchg
lock
rcr
dec
pop
fidivrs
fwait
lods
pop
sti
rcll
lock
xor
shlb
test
cmpsl
and
xchg
push
sub
sub
nop
data16
ds
jmp
xchg
sub
sbb
add
repz
dec
les
mov
add
jmp
mov
adc
push
jae
adc
or
sbb
cs
cmp
imul
mov
ficompl
adc
fdivr
mov
nop
and
les
sbb
inc
rolb
aam
jb
test
push
pushf
sub
mov
lahf
jo
scas
jp
cmc
xor
push
cmpsb
push
dec
jno
pop
out
inc
popf
pavgb
push
add
sub
push
mov
pushf
push
jb
rclb
mov
jmp
adc
mul
jne
cmc
xchg
adc
inc
shll
icebp
fidivs
mov
adc
or
adc
das
mov
push
int
cmp
jge
imul
es
pop
push
mov
and
push
mov
cltd
popa
push
pop
and
ror
mov
mov
outsb
mov
cmpsl
adc
les
mov
mov
imul
movsb
pop
jmp
jg
sbb
adc
pop
lahf
movsb
or
scas
int
outsl
and
mov
push
shrl
and
ja
inc
and
xlat
mov
and
test
dec
ret
pop
inc
cmp
add
int
xor
xchg
mov
out
pop
pushf
enter
fucom
xor
mov
mov
xchg
and
shl
hlt
sbb
xor
pop
outsb
sbb
repz
or
sub
into
aad
xchg
iret
mov
jnp
mov
xchg
sbb
jmp
add
lcall
cmp
push
mov
int3
jo
inc
scas
sub
dec
push
jbe
ja
push
xor
cmp
add
andb
cmpsb
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
aaa
cmpsb
outsl
mov
mov
dec
inc
add
js
jmp
imul
jl
fucomip
into
xor
out
mov
shll
movsl
dec
stos
pop
add
fcmove
xor
xchg
sbb
cvtps2pi
jo
orb
sbb
cmp
sahf
mov
pop
popa
pop
mov
pushf
hlt
mov
push
in
pop
jno
out
fstpt
mov
ror
scas
inc
andb
loope
cmp
lods
ss
ja
lahf
adc
and
test
cmpsb
movsl
aaa
jg
loopne
scas
mov
push
xchg
out
push
inc
loopne
out
insb
jmp
call
dec
push
nop
cld
dec
stc
out
ret
psubusb
cmpl
les
loopne
pop
fadd
in
jno
inc
imul
or
xchg
jle
push
mov
xchg
adc
cltd
dec
mov
insb
mov
dec
add
mov
adc
pop
sub
xchg
outsb
mov
mov
divl
add
and
clc
dec
ret
xor
jge
mov
push
pop
dec
pop
mov
xchg
leave
faddl
out
pop
test
or
inc
cmpb
mov
pushf
fists
pop
xchg
clc
add
cmp
sti
jl
add
lds
ja
scas
lret
fadds
rorl
repz
out
fsubp
pop
ret
sub
push
cmp
jns
jno
gs
inc
add
sbb
out
xlat
js
mov
arpl
inc
dec
fidivrl
sub
fs
lods
sub
in
out
and
jnp
stos
hlt
loop
cmp
rclb
push
cs
bound
xchg
sub
iret
dec
cltd
jmp
outsb
lea
add
mov
rolb
push
jge
dec
orl
pop
push
pushf
std
test
cmp
popf
aad
dec
or
mov
jmp
xchg
xor
sub
jp
ja
repz
xchg
repz
std
jecxz
js
xchg
or
sbb
push
pop
out
out
mov
or
popa
mov
js
daa
pop
dec
or
popa
insb
fs
rorl
psubq
xor
or
es
mov
xor
cmp
aas
cmp
addr16
push
repz
inc
movsb
stc
mov
adc
gs
scas
push
sub
push
out
mull
cmp
pop
mov
aas
outsl
sbb
ljmp
mov
xor
sub
ret
push
pushf
xor
cmp
add
lcall
xor
lret
in
jns
icebp
pop
lock
je
nop
sahf
sub
out
adc
int3
test
mov
inc
inc
cmpsb
xchg
mov
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
enter
clc
jle
jp
jle
or
mov
popa
sub
out
jge
test
mov
aas
jle
pop
lock
into
jle
int
or
in
in
add
mov
js
dec
and
add
pop
and
out
mov
pop
cmp
jne
daa
dec
js
addr16
fwait
lods
cmp
cwtl
jne
sbb
cmc
jl
sarb
jmp
mull
or
out
jb
fwait
rol
add
cltd
popf
mov
push
push
ds
lock
fsts
hlt
pop
test
fsubs
pop
add
mov
push
ret
dec
lahf
popa
inc
mov
pop
xchg
pop
adc
mov
mov
dec
rol
ljmp
xchg
fstpt
repnz
cmpsb
ljmp
mov
cmp
into
fsubrs
scas
xchg
test
shl
vmwrite
mov
inc
jl
movsb
cld
or
loopne
es
jge
mov
inc
cmpl
lods
dec
je
test
mov
cwtl
or
and
cld
mov
jb
inc
push
jns
rcr
scas
mov
out
loop
pop
xchg
mov
sbb
xor
lret
add
data16
add
mov
outsb
jne
rol
insb
push
aaa
fcmove
xor
movsl
lods
inc
adc
scas
cld
ret
lcall
adc
mov
sbb
orl
in
cwtl
mov
pop
mov
cli
clc
pop
bound
push
inc
add
fidivrs
roll
jge
xchg
lock
sub
sbb
test
mov
outsl
jns
bound
mov
mov
adc
pop
js
and
xchg
jmp
insl
fs
xor
mov
mov
test
stos
mov
cmp
push
mov
or
leave
add
cmp
scas
pop
mov
addr16
push
or
popf
stos
mov
shll
out
sar
or
sbb
mov
push
pop
rcrl
mov
es
add
addl
xchg
push
mov
stos
gs
mov
cmp
loop
dec
and
sub
ss
js
mov
rorl
int3
das
repnz
out
in
sbb
cs
or
loopne
adc
rcl
sbb
push
stos
stos
mov
adc
pop
leave
dec
dec
ret
mov
cmp
jnp
outsb
sub
scas
lock
mov
pop
xchg
out
sbb
iret
ss
enter
jae
jl
call
or
lret
lret
cwtl
mov
iret
mov
xchg
jae
cmp
cmc
xchg
fbld
sti
mov
adc
sub
ljmp
or
lea
sbb
sbb
or
xchg
lock
add
and
neg
in
cltd
xchg
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
adc
and
xchg
jp
jle
subb
and
cltd
pop
flds
adc
pop
loop
lret
mov
cmp
sbb
xchg
int
mov
int
stos
dec
or
rcrl
fs
fdivrp
and
sbbl
mov
cld
ds
cmp
and
mov
sbb
push
je
cmp
sbb
cmp
aaa
imul
in
enter
pushl
out
mov
mov
pop
mov
adc
sbb
je
mov
cmc
jmp
mov
or
adc
lcall
out
cwtl
rcll
nop
testb
dec
and
jmp
xchg
push
out
pop
inc
sub
jo
mov
xchg
adc
stos
dec
cmp
scas
lret
idiv
pop
push
shr
subb
or
adc
lds
andb
mov
test
mov
mov
sub
cltd
js
shlb
push
mov
push
jg
push
dec
jnp
fldt
addr16
lods
push
sarb
jnp
add
inc
push
out
mov
lahf
cmp
xlat
push
dec
mov
push
hlt
cmp
push
lods
out
lock
or
xchg
and
outsl
xchg
dec
pop
dec
out
adc
popf
mov
mov
in
testl
jae
clc
iret
pop
pop
adc
dec
leave
sub
scas
in
adc
in
mov
std
jecxz
ror
jae
xlat
push
add
dec
andl
test
mov
fcomps
out
sbb
pop
loopne
jbe
cmc
test
pop
popf
push
iret
cmp
adc
xor
fstpl
and
mov
mov
jbe
inc
sub
fcoml
xor
movsl
inc
outsl
mov
inc
xor
jle
jp
and
pop
test
pushf
inc
pop
push
push
sbb
add
sbb
mov
push
and
std
loopne
jnp
inc
loop
sub
pop
xor
sub
test
inc
mov
loopne
sti
mov
aas
je
scas
cwtl
test
jnp
out
test
pusha
icebp
xor
dec
xchg
or
xor
fs
mov
ficoms
mov
adc
xchg
leave
mov
cmp
and
loop
es
dec
ffree
enter
out
jnp
mov
fmuls
or
jns
or
out
jbe
or
push
xor
daa
sub
xor
daa
xchg
leave
mov
push
mov
lods
loop
inc
sbb
insb
or
aas
push
sub
cmp
push
jmp
ficoms
jnp
or
xchg
pop
inc
cli
or
shlb
stc
xchg
or
mov
mov
jmp
out
xor
mov
loop
into
xor
xchg
cmp
jge
cmpb
jge
jle
lret
test
mov
mov
dec
sbb
mov
test
cmpsl
aas
imull
mov
mov
loopne
adc
xor
into
pop
inc
cmp
mov
xchg
adc
mov
pushf
dec
inc
cmpb
mov
cmp
mov
loop
xor
inc
cmpsb
adc
scas
sbb
inc
cmpb
sub
imul
aas
fadds
in
inc
fistl
daa
inc
xor
les
and
or
adc
sahf
in
sub
mov
popa
push
sbb
outsb
sub
xchg
mov
popf
jnp
sub
jg
pop
sbb
adc
or
mov
sbb
ss
insl
pop
cmp
sub
pusha
jmp
push
xchg
mov
mov
push
mov
jae
in
add
mov
repnz
aam
add
outsb
in
jmp
sti
jge
sub
shlb
or
pop
jne
imul
and
iret
cmpsb
das
lds
fcmove
mov
in
aas
jbe
add
cmp
rolb
push
jl
cmc
fbstp
mov
mov
mov
imul
push
sub
dec
push
sub
inc
jle
lret
push
mov
das
fcos
call
jo
push
sti
dec
xor
imul
cwtl
cmp
sahf
push
std
xchg
sub
dec
fisubrs
cmp
mov
rol
loop
push
xor
fisubs
les
mov
cmp
loopne
xor
xchg
add
push
lods
rep
mov
xor
out
aaa
mov
xchg
loop
or
andb
dec
push
ja
push
aaa
sbb
jbe
bnd
pop
shl
sbb
call
push
mov
mov
sbb
andb
and
test
mov
dec
cli
inc
xlat
xchg
push
insb
iret
test
adc
popa
fimuls
mov
jnp
pop
addr16
jmp
out
mov
xor
push
bound
and
stc
aam
mov
sub
mov
shrl
or
adc
fmulp
sub
dec
fsubp
outsb
ret
xchg
movsl
mov
rorb
push
cwtl
xchg
adc
jl
addb
test
cmc
gs
out
mov
out
pop
pop
cmp
stc
or
or
adc
adc
popa
outsb
jno
adc
clc
in
nop
imul
imul
subl
sti
je
sub
ffree
out
push
popf
pop
sub
ljmp
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
pop
lcall
jle
dec
pop
jne
out
fdivs
pop
xchg
push
inc
sbb
mov
out
sbb
lahf
imul
push
sub
inc
sbb
fnstcw
mov
fsubp
pushf
out
sbb
push
repnz
xor
add
in
adc
sbb
imul
xor
push
stc
inc
cmp
je
inc
stc
in
mov
jb
xchg
int
sub
cmp
cmpsb
out
lret
test
test
xor
int
sbb
scas
lahf
push
push
loop
iret
cmpb
fdivrl
xchg
dec
std
sbb
ss
xor
ds
and
incb
dec
pop
push
push
movsb
lahf
iret
ds
add
ja
push
scas
into
xchg
mov
jle
sbb
pushf
clc
sub
pusha
xor
stos
adc
into
pop
jae
add
xchg
dec
das
popa
push
jb
xchg
push
movsl
lods
push
cld
test
lock
xlat
ljmp
dec
fbld
jnp
mov
add
jp
push
and
jno
fcmovnu
leave
inc
loopne
enter
jecxz
xchg
mov
and
pop
sbb
sti
jg
jecxz
clc
sub
and
aam
cld
mov
mov
pop
and
adc
push
fwait
xor
mulb
clc
lret
push
rorb
sti
imul
and
jecxz
xor
push
arpl
arpl
adc
or
adc
push
sbb
pop
mov
cmc
mov
sbb
loope
lret
cltd
and
or
enter
cmp
pushaw
pop
enter
shrl
xor
data16
mov
int
test
arpl
test
lds
dec
lock
sbb
mov
or
add
inc
xchg
lea
in
mov
mov
mov
arpl
stc
or
inc
cmp
popf
gs
mov
lds
jnp
sub
sbb
and
data16
xchg
fisttps
xchg
cmp
xchg
pop
loopne
xchg
jp
movsb
test
adc
data16
and
int
push
mov
and
mov
and
fmull
xlat
int
mov
dec
bound
adc
mov
jne
cmp
mov
inc
dec
mov
sbb
out
dec
add
dec
push
or
das
pop
pop
jmp
sub
jne
std
into
lahf
inc
into
jnp
lret
pushf
lret
fmul
inc
shll
fistl
mov
std
jbe
rcrb
mov
sub
aad
fchs
adc
push
push
jle
loopne
lret
jnp
xorl
and
mov
sub
adcl
xor
or
dec
sbb
testb
mov
add
lea
mov
jmp
push
adc
shrl
cs
cltd
xchg
daa
mov
jge
jle
stos
jg
aas
roll
rcrb
mov
inc
pop
and
xadd
and
arpl
ljmp
push
and
pop
bound
adc
cld
or
movsb
jle
test
and
jp
cmpsl
mov
lock
pop
push
sub
sbb
pop
rcl
mov
inc
fidivrs
cmpsl
cli
jnp
rclb
movsb
inc
mov
cmp
in
test
push
push
imul
insl
shl
std
pop
mov
into
push
jne
frstor
mov
add
imul
clc
andl
add
outsb
movsb
mov
std
pop
pop
inc
aas
adc
das
mov
mov
mov
cltd
adc
daa
and
outsl
push
jno
lea
pop
rcr
out
int
and
out
jle
stos
jg
push
push
ror
fdivrl
cmpsl
xchg
push
xchg
sbb
dec
scas
ficompl
repnz
jo
test
in
inc
mov
jns
cmp
pop
fisubrl
sbb
dec
pop
dec
leave
push
push
test
call
gs
rolb
xchg
outsl
addr16
popf
cmp
push
push
cmp
subl
gs
mov
sub
mov
sub
or
pop
mov
lds
inc
adc
ja
jno
pop
iret
or
out
jecxz
xor
adc
aaa
cld
xor
pop
ret
loope
insb
dec
cmp
cmp
add
icebp
sub
add
adc
sti
gs
mov
and
sar
mov
push
out
fdivrs
mov
sbb
clc
test
mov
ss
push
fidivrl
outsb
mov
mov
xor
jl
rclb
jb
push
hlt
adc
lcall
pop
lcall
inc
lahf
mov
ret
hlt
adc
adc
fiaddl
mov
mov
dec
mov
addb
js
int
loope
ror
lock
sbb
ds
cmc
xchg
push
ss
mov
or
cmp
push
das
inc
lea
push
repnz
test
loopne
sub
nop
ss
or
sbb
push
adcl
pop
push
jnp
cmc
push
mov
cmpsb
test
dec
inc
fs
movsb
mov
xor
int3
dec
adc
leave
ljmp
pop
push
or
mov
ja
icebp
shlb
imulb
repz
rclb
add
imul
pop
fmuls
cmpl
cmc
pop
push
mov
not
inc
cmp
mov
rcl
loopne
dec
pop
mov
xchg
int
pop
daa
and
mov
pop
xchg
hlt
lods
enter
test
jecxz
bound
mov
sar
jne
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
out
push
mov
mov
addr16
loope
int
push
pop
mov
pop
mov
cmpsl
mov
cmp
jmp
ret
sub
fwait
ret
aas
jecxz
loopne
outsb
outsb
dec
or
roll
fistps
xchg
je
out
sti
clc
rcll
or
xor
test
gs
out
fwait
aad
lret
pop
lock
movsb
inc
scas
xchg
pusha
sub
in
jmp
dec
mov
push
into
aam
and
jmp
scas
jg
adc
sarb
push
sbb
dec
dec
dec
mov
fistpl
aam
xchg
inc
mov
aam
push
int3
aas
gs
or
sub
inc
jge
call
data16
ja
cli
ljmp
dec
xor
decb
xor
dec
xor
mov
orl
dec
jo
ret
inc
mov
mov
push
decl
aam
dec
sahf
add
popf
pop
enter
int
stos
and
mov
movsl
xchg
stos
pop
jno
sub
mov
pushf
testl
xchg
addl
adc
mov
push
push
daa
push
add
mov
adc
mov
andl
jne
adc
pop
mov
pop
adc
adc
adc
mov
jae
push
push
add
jne
adc
inc
xacquire
mov
lods
cs
xchg
pop
xor
aam
cmpsb
cmc
cmpsl
daa
and
sbb
push
sub
popf
dec
scas
mov
ficoms
push
int
inc
lahf
add
lcall
daa
imul
fstpl
lgs
call
jmp
or
jg
and
and
jno
lds
int
pop
push
rcrb
pusha
pop
sub
shll
sub
ljmp
cmp
test
cmp
sub
push
dec
mov
push
jnp
xchg
sub
inc
les
in
xor
adc
fsts
xchg
in
fcoms
scas
sub
xchg
pusha
xchg
xor
jl
loope
cs
pop
lret
mov
lock
fs
add
cmc
dec
mov
mov
dec
ret
in
lahf
loop
pop
mov
les
xchg
fbld
and
cmp
sub
sub
and
repz
xchg
pushl
into
push
cmp
jo
call
jnp
out
decl
push
adc
mov
push
les
shll
pop
std
adc
ljmp
and
inc
jecxz
mov
loopne
cli
sub
dec
sbbl
and
gs
inc
or
inc
or
in
rorb
push
add
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
data16
mov
xchg
jle
jge
jle
mov
pop
xchg
pop
jp
inc
xchg
cs
sub
jo
adc
mov
repz
test
bound
gs
in
dec
cmp
jl
orl
outsb
stos
shl
push
mov
das
jl
icebp
bound
mov
or
mov
pushf
or
icebp
aad
fisubrl
lcall
loop
fs
mov
push
and
xor
fiaddl
adc
fisttpll
fiadds
enter
inc
xchg
inc
sub
mov
or
mov
popf
and
inc
jmp
xor
leave
mov
ljmp
dec
mov
dec
addr16
scas
mov
mov
mov
xchg
or
mov
or
inc
jbe
xor
mov
push
fdivs
sub
mov
movsb
jno
add
cmp
push
xor
shll
cmpsl
jae
sbb
add
jl
xor
inc
popf
ss
adc
lret
add
sub
mov
add
rcrl
leave
xorb
in
push
sbb
mov
mov
mov
in
pop
pop
popf
adc
in
dec
data16
fildl
outsb
out
insl
and
je
movsb
sub
das
popa
cmp
adc
loop
xor
jp
cli
push
pushf
dec
movsb
test
pop
aad
jae
sub
int3
insl
add
not
xor
fwait
cld
mov
mov
mov
mov
and
leave
out
add
fstl
loope
movaps
insb
cli
xor
jmp
and
cmp
icebp
faddl
push
or
push
loope
mov
inc
jmp
lret
int3
pop
jno
lea
mov
imul
mov
mov
add
jno
mov
pop
insb
or
push
iret
je
push
icebp
jp
lcall
lock
adc
cmpsb
cli
daa
sub
int3
scas
jb
ljmp
or
faddl
out
adc
rol
adc
mov
jno
int3
mov
lds
lods
int
jg
cli
imul
pop
mov
inc
xor
ret
push
xchg
divb
add
mov
fdivrl
pop
or
andl
or
mov
sub
and
pop
dec
insb
adc
pop
mov
cmp
scas
mov
xchg
mov
daa
jne
jge
shrl
out
mov
mov
dec
subb
dec
out
or
dec
xchg
popa
jg
xor
jg
stos
inc
jmp
sub
in
mov
divb
jbe,pt
je
push
sbb
repz
sub
add
lea
stos
or
leave
stos
mov
jp
push
cmp
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
aam
add
sub
jle
jge
jle
push
sbb
out
dec
jl
call
jle
pop
lds
scas
inc
dec
into
into
out
and
adc
cltd
cwtl
pop
outsl
jmp
imul
loop
mov
pop
rorb
mov
pusha
ss
inc
pop
add
mov
pop
push
sbb
dec
rorl
bound
ficoms
dec
scas
or
adc
push
pop
dec
jge
lahf
xor
and
add
cmp
loop
adc
pushf
cmpsl
mov
fiadds
jbe
mov
clc
mov
sbb
imul
xchg
pop
jns
pusha
aas
mov
inc
and
rcll
push
sbb
lcall
add
push
xchg
loop
jle
jmp
decl
push
fstl
ret
call
jg
mov
inc
add
adc
fadds
loope
clc
sub
stc
mov
ret
add
icebp
mov
jae
imul
rcr
push
mov
jl
rorb
and
out
push
fwait
in
testl
out
repnz
xchg
dec
pusha
mov
cmp
push
mov
mov
cmp
in
add
dec
pop
mov
adc
dec
orl
or
adc
mov
mov
stos
mov
and
or
clc
pop
bound
loope
test
push
inc
jns
jo
test
inc
xchg
cmpsb
movsb
lods
in
sahf
test
jne
int
jo
notb
mov
repnz
push
leave
dec
ljmp
or
push
mov
mov
sbb
scas
cmp
mov
into
enter
mov
ret
dec
addr16
stos
lods
and
lock
or
pop
lea
or
sub
xor
std
test
inc
in
sbb
cmp
arpl
dec
xchg
xchg
inc
jle
dec
insl
shlb
or
mov
js
mov
push
jno
bnd
inc
adc
test
dec
push
test
dec
lret
outsl
sub
lods
cmp
inc
test
sub
addl
adc
jg
pushw
decb
cmp
inc
adc
hlt
rol
outsl
jl
adc
jb
ret
jne
sti
mov
out
loopne
rcrb
add
ret
popf
and
xor
cmc
dec
pop
adc
xchg
cmp
inc
jp
icebp
gs
iret
and
lret
loopne
mov
mov
or
fistpl
addr16
ret
int
sahf
bound
cmp
push
pop
in
jmp
mov
scas
ja
mov
add
push
and
sbb
dec
lods
and
xchg
or
and
jo
xlat
push
inc
mov
lds
iret
gs
loop
cmp
mov
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
cmp
out
nop
jle
jge
jle
out
dec
insl
adc
pusha
iret
add
dec
xor
faddp
cmp
idivl
jb
push
test
add
repz
mov
dec
pusha
xlat
mov
dec
scas
jae
jno
push
outsb
fnstcw
sub
scas
nop
and
pop
mov
sbb
hlt
push
xor
out
and
jae
push
xchg
sbb
int
lret
jbe
mov
rorb
out
das
xchg
lahf
ljmp
ljmp
jge
inc
loop
test
xorb
imul
mov
mov
push
xor
test
pop
mov
mov
dec
and
leave
sbb
in
lret
mov
aaa
ds
mov
sub
add
int3
add
fsubs
cmp
sub
bnd
or
adc
in
stos
xlat
jae
int
mov
add
jb
loop
addl
dec
mov
lds
xchg
aad
sbb
pop
push
lahf
ds
mov
xor
inc
jns
bnd
jmp
arpl
out
inc
cwtl
inc
int3
adc
add
cmpsb
fisttpll
jle
xor
adc
in
daa
movsl
push
leave
and
sahf
xchg
sbb
and
or
inc
int
aad
pop
ljmp
ljmp
aam
or
std
test
inc
mov
jns
fcmovu
mov
mov
icebp
mov
or
fnstcw
sbb
jo
pop
fsubrs
rclb
je
repz
daa
mov
or
jnp
mov
mov
inc
test
add
in
adc
mov
sahf
pop
inc
xchg
int
sahf
pop
mov
lahf
push
fwait
push
loope
call
ret
pop
std
je
dec
cltd
xchg
imul
roll
pop
daa
int
lods
adc
test
cmp
or
je
shl
call
inc
test
stos
ja
push
addr16
jmp
fs
cmp
mulb
cmc
push
out
mov
pop
roll
pop
pop
push
sub
jle
aam
and
pop
adc
cmp
sahf
notb
dec
mov
mov
popa
xor
and
sub
push
ret
and
call
pop
push
or
popa
insl
and
roll
pop
adcl
fsts
pop
and
fldenv
sub
ret
imul
mov
cmpsl
sbb
call
xlat
frstor
dec
popf
int3
sub
andl
cmp
sarb
xchg
fs
fnstsw
decb
test
mov
jl
test
arpl
ja
hlt
out
jo
push
sub
test
dec
lahf
jbe
add
ret
jbe
cltd
push
movsb
rolb
nop
ljmp
cltd
xor
dec
cmp
rorl
xor
jmp
das
subb
mov
xor
xor
jle
jge
jle
fisttpl
mov
es
sarl
enter
mov
stos
in
clc
in
cmp
push
pusha
pop
fldenv
in
xchg
rclb
xchg
mov
inc
xor
pop
jno
sub
aam
loopne
popf
sbb
push
stc
mov
imul
xchg
pop
or
sub
popa
imul
in
std
scas
and
int
cmp
add
add
mov
sub
outsl
outsb
jmp
outsl
push
dec
subl
fchs
outsl
add
add
mov
repz
and
sbb
leave
mov
mov
scas
es
mov
jle
je
add
sub
mov
mov
dec
dec
xor
push
and
cli
push
insl
fwait
inc
mov
imul
test
daa
push
mov
xchg
repz
and
setb
lret
mov
fldz
xor
outsb
or
pop
inc
pcmpgtd
cmp
dec
in
sarl
push
mov
test
shll
pushf
inc
iret
jmp
adcb
dec
mov
out
gs
in
push
scas
sub
mov
lret
sub
pop
pop
aaa
pop
sub
jae
aas
and
scas
shrb
aaa
jmp
push
sbb
daa
cld
fdecstp
pop
leave
inc
bound
gs
pop
dec
fdiv
mov
leave
add
scas
xchg
ss
push
cmpsl
sub
xchg
push
or
mov
test
call
into
dec
xchg
or
dec
adc
and
jmp
sub
inc
testl
stos
icebp
pop
adc
lds
and
cld
fs
rorb
decb
pop
mov
jle
cmp
adc
lods
cwtl
imull
insb
mov
jno
in
movsb
mov
xor
mov
inc
pushl
pop
lock
cs
fimuls
js
cmp
sbbb
hlt
push
mov
pusha
xor
dec
insl
jb
lret
pop
cmp
jecxz
xlat
ljmp
lods
sarl
sub
or
test
nop
sbb
fbld
or
jns
out
mov
ljmp
lahf
mov
dec
push
and
cs
dec
and
lea
cltd
mov
jno
pop
aam
pop
sub
mov
xchg
or
or
pop
mov
out
aaa
rcll
je
subl
push
xorb
rclb
js
andb
xor
out
and
shlb
aam
cli
std
xchg
fwait
popf
mov
mov
cmpsl
call
xchg
hlt
inc
les
push
fsubrp
or
movsl
clc
push
push
popa
imul
mov
or
add
add
cmp
adc
aad
fcoms
pop
and
jge
jle
jb
mov
or
jne
push
sbb
ljmp
cmp
jae
leave
outsb
out
pop
add
mov
push
sub
sarb
add
movsb
sahf
push
jo
or
ficoml
xchg
mov
and
jmp
push
fwait
inc
push
cmpsl
lret
inc
js
push
inc
push
test
pop
loop
jg
lret
sbb
scas
cmp
mov
pop
push
rcrl
dec
cmpsb
mov
push
jecxz
push
inc
mov
addr16
lds
xchg
pop
insb
shrl
loop
jecxz
enter
or
dec
push
insl
xor
enter
push
mov
test
das
cmc
push
in
cmp
and
cmpsl
adc
add
sub
stos
add
jle
sub
add
push
push
imul
test
push
repnz
stos
popa
cwtl
pusha
bound
mov
out
les
mov
inc
daa
push
inc
sub
and
out
ret
add
jae
or
xor
sar
lods
pop
arpl
faddl
xor
movsb
pop
cmp
std
pop
rclb
cli
dec
vcvtsd2ss
and
das
imul
lahf
fadds
inc
lret
sub
xor
stos
testb
pop
cs
pop
cli
adc
mov
lret
das
inc
rcl
addl
inc
and
sbbl
fists
cmp
andb
aaa
mov
and
and
outsl
scas
mov
aaa
clc
jecxz
rcll
out
push
push
jle
fs
xor
xlat
lods
cli
rol
dec
cs
jecxz
test
adc
dec
out
cld
pop
pop
pop
pop
repz
mov
hlt
push
lds
clc
xor
cmc
js
jo
outsl
mov
xor
test
lods
stos
jl
aas
xor
jmp
pop
shl
les
lahf
fsubr
movsb
push
addr16
push
pusha
cmp
xor
sti
das
ret
jae
repz
lock
leave
push
pushf
test
mov
sbb
mov
pop
push
cmpsb
sbb
add
jge
push
sbbl
jno
mov
aad
mov
aaa
adc
scas
xor
jl
inc
out
addr16
pop
or
std
jle
shl
out
mov
cltd
in
notb
cmp
lds
in
push
faddl
xlat
mov
xlat
cmc
leave
movlps
neg
xchg
les
push
clc
inc
and
sbb
xlat
ret
mov
push
lcall
lods
bts
in
sbb
sub
ret
es
or
fst
pushf
addr16
xchg
push
out
bound
inc
mov
jecxz
pop
adc
mov
orb
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cs
inc
add
cltd
jle
jge
jle
out
jno
and
clc
fidivl
int3
cmp
das
mov
pop
dec
or
jae
jmp
sub
push
fstpt
lret
jne
and
jmp
shrl
les
and
repz
test
mov
adc
sbb
mov
enter
sahf
scas
sub
bound
adc
cld
bnd
jnp
mov
pop
fsubrp
stc
push
lock
or
jno
outsb
imul
xchg
rclb
bound
popf
adc
shl
bt
fs
jle,pt
push
popf
mov
repnz
outsb
push
sub
push
int3
inc
xchg
in
xor
adc
add
mov
jge
gs
jl
xor
cmp
das
sub
enter
mov
in
jecxz
mov
jb
push
in
pop
lret
enter
pop
push
jecxz
mov
popf
push
mov
outsl
xchg
push
or
xchg
inc
mov
inc
mov
mov
repnz
in
and
movsb
movswl
dec
inc
cltd
jnp
pop
mov
call
xchg
inc
mov
mov
or
pop
mov
mov
add
sti
test
xchg
popa
push
test
adc
es
pop
movsl
adc
push
xchg
sub
jae
or
push
push
dec
mov
and
push
test
inc
mov
mov
mov
and
add
test
rcrl
xchg
int
xor
cmp
fnstcw
out
call
pop
dec
add
or
mov
sbb
lods
and
pop
clc
mov
cs
fisttps
notb
add
scas
mov
pop
push
jmp
leave
jno
iret
fldl
setp
dec
sbb
fxtract
data16
sbb
sub
dec
ficomps
adc
or
or
outsl
mov
or
pop
inc
dec
sub
sbb
mulb
xchg
add
lahf
in
dec
call
xchg
popf
cmpsb
xchg
push
inc
lahf
out
test
int3
sbb
das
mov
jmp
xchg
jecxz
add
stos
add
hlt
aad
popf
int3
push
aad
fidivl
fsubs
testb
leave
cltd
dec
shlb
or
in
in
sub
jnp
inc
jb
fwait
sbb
add
jo
shr
loop
mov
dec
cmp
mov
push
rorb
mov
fs
arpl
add
mov
cmpsl
add
jbe
mov
fnstenv
or
sub
xlat
sbb
mov
mov
js
or
lea
push
lcall
imul
nop
mov
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
incl
jnp
movsb
jle
push
jg
jle
mov
shrl
enter
stc
push
std
out
pop
pop
les
pop
mov
movsl
scas
int3
out
mov
pop
sub
mov
les
aaa
sub
stos
js,pn
push
ds
mov
iret
stos
movsb
test
mov
lods
mov
not
cmpsb
rcll
aad
xchg
dec
mov
add
sub
rclb
adc
cld
add
aad
mov
cmpl
dec
sbb
cmp
add
or
add
dec
imul
stos
loopne
sbb
popf
out
mov
jg,pn
rol
inc
pop
xchg
mov
std
std
add
xchg
xchg
fmul
out
sub
push
dec
inc
loop
repnz
jbe
push
push
pop
loopne
int
jne
scas
stc
hlt
and
popl
mov
js
and
ret
mov
lock
push
gs
lcall
lods
jb
push
addr16
shlb
addl
mov
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
ds
movsl
jle
push
jg
jle
xchg
ss
out
sub
or
ret
mov
jns
add
add
cmp
sti
sub
jb
push
lock
repz
ja
leave
js
aas
adc
test
xchg
aas
push
mov
popa
stos
lods
mov
mov
sbbb
or
mov
adc
insb
fisubrl
scas
cs
mov
popa
jne
or
or
and
push
and
xlat
push
push
xorb
and
add
jmp
inc
and
mov
dec
adc
adc
pop
push
inc
pop
push
push
push
mov
mov
in
lods
pop
std
sub
popa
aam
mov
mov
or
jb
adc
movsb
push
sti
aad
sbb
imul
mov
and
adc
imul
stc
add
jbe
imul
ret
outsb
faddl
mov
incl
std
xorl
jl
test
pop
mov
bnd
rorb
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
call
jle
jg
jle
ret
xor
jge
mov
and
adc
inc
jge
xor
add
mov
sub
inc
shrb
lcall
pop
ret
xchg
cmp
aam
popa
enter
aas
int
or
dec
jns
notb
jg
cmp
decl
pop
sub
icebp
cmp
mov
ffree
sub
movsb
imul
mov
loopne
fidivrs
popa
addr16
pop
sbb
mov
inc
fstl
insb
fidivl
pop
bound
repz
jle
or
out
js
pop
ja
xor
jbe
or
clc
jle
xchg
add
into
xor
cmpsb
cmp
scas
adc
pop
pop
pop
clc
jb
push
mov
test
inc
xchg
js
sbb
movsl
or
ljmp
stos
out
lret
pop
mov
movsb
jae
lock
dec
xchg
mov
mov
bound
add
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
mov
jle
push
jl
jle
test
sbb
mov
pop
jge,pt
out
xchg
push
mov
pop
cwtl
or
pop
sti
and
mov
dec
mov
cmp
das
mov
aas
test
fstps
mov
and
and
popf
sub
jns,pn
aad
mov
fbld
sub
sub
out
icebp
lods
fs
jle
aas
xchg
inc
aas
bound
mov
push
in
and
jae
movsb
dec
xchg
test
jle
and
xchg
loopne
cmp
data16
outsl
cli
push
mov
inc
push
aas
mov
xchg
mov
pop
or
or
inc
enter
pop
dec
cmp
leave
xchg
add
mov
out
scas
mov
repz
call
mov
pop
mov
dec
or
sbb
mov
rcrb
arpl
hlt
and
push
cmpl
sub
or
in
add
lock
xchg
and
mov
faddl
dec
sub
mov
mov
jne
cmp
aas
fistps
cmp
out
dec
inc
push
mov
into
jecxz
or
movsb
cltd
movsl
sbb
xchg
sbb
xchg
xchg
cmp
cwtl
call
xchg
pop
dec
jbe
int3
cmc
in
sbb
ljmp
mov
insl
adc
push
mov
xchg
icebp
mov
jo
test
sahf
je
rorb
out
jnp
mov
sub
xchg
call
aad
and
mov
xor
xchg
sbb
mov
pop
lahf
mov
ret
daa
imul
aad
sub
xchg
pop
and
push
jne
test
sahf
inc
notb
les
fimull
lret
sti
rcr
pop
dec
fldl
in
and
push
test
ss
push
add
mov
add
add
xchg
aas
add
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
dec
mov
lcall
cli
cmp
sbb
jb
jl
mov
cmp
insl
fistpll
mov
xor
lret
jo
loope
fadds
jo
and
push
dec
push
ret
xchg
and
dec
ds
xor
mov
test
xchg
iret
in
cmp
lret
dec
addr16
xchg
or
jle,pn
push
sub
push
xchg
mov
lcall
fbld
pop
xlat
mov
cmpsb
or
mov
cld
push
mov
je
mulb
lods
mov
push
arpl
inc
mov
hlt
jge
jp
iret
inc
or
mov
pop
aaa
outsl
add
aaa
or
loope
xor
xchg
adc
in
jb
jle
dec
push
sbb
and
repnz
push
push
fisttpl
xchg
jbe
pusha
sub
fs
cli
sbbb
push
mov
bound
dec
cmc
enter
aaa
cwtl
out
mov
push
adc
push
pop
ds
mov
add
repz
or
adc
je
fs
xor
or
adc
movsb
xchg
xor
es
fmuls
add
mov
jge
addl
pop
pushf
push
mov
scas
mov
inc
jae
out
mov
loop
push
or
sbb
sahf
jg
hlt
cmp
xor
out
or
andb
sbb
or
mov
xor
dec
cmp
xchg
lea
das
fsubrs
repz
and
mov
lods
jg
movsb
sub
xor
out
sahf
insl
hlt
xchg
aam
rcll
mov
shr
xchg
mov
jae
xor
sub
sbb
push
mov
pop
loop
push
sbb
inc
jge
shlb
fs
jo
xor
popa
sub
insl
loop
pop
inc
dec
and
pop
call
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
imul
fsubl
xor
fisttpl
and
xchg
into
push
xlat
adc
xchg
mov
mov
sub
or
push
pop
in
mov
xchg
xchg
push
jbe
arpl
xchg
outsb
sub
lret
dec
stos
sub
movb
adc
inc
sub
lds
and
push
jp
jnp
dec
xchg
pop
push
lock
adc
adc
dec
shl
inc
adc
sbb
mov
jle
jo
and
gs
fnstenv
mov
or
jns
hlt
or
jmp
cmove
jb
leave
in
sbb
and
pop
mov
shl
lret
dec
rolb
lret
jb
dec
into
dec
mov
add
gs
test
pop
pop
movsl
push
and
jae
insb
leave
aas
push
jnp
sub
imul
scas
popf
cmp
mov
outsl
adc
pop
push
not
sar
stos
into
imulb
mov
mov
and
out
or
dec
cmp
daa
in
test
data16
loope
or
pop
cmpsl
dec
pop
sbb
mov
ds
push
inc
sub
jmp
mov
mov
outsl
xor
inc
mov
shlb
sarb
fcom
mov
ss
xchg
rcll
cwtl
dec
xchg
into
nop
cmp
add
cli
pop
aas
dec
mov
push
out
pop
xchg
pusha
daa
lods
jb
fnstenv
push
ds
ljmp
repnz
fisubs
enter
jg
stos
xchg
int
xor
cli
scas
mov
ret
call
cmp
sub
jmp
xor
or
insb
and
inc
push
adc
and
sub
std
cmp
adc
sbb
subb
cmp
jge
test
cmc
jnp
lods
mov
sarl
pop
fwait
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
movsl
xor
dec
add
jle
pusha
iret
cwtl
scas
lods
pop
or
mov
jg
dec
sbb
jp
sub
inc
mov
int
jle,pt
aad
or
enter
push
mov
jnp
scas
jae
dec
loopne
mov
push
add
in
ss
push
in
push
cmp
and
cwtl
add
subl
dec
es
mov
enter
add
sti
into
leave
cmp
push
insl
xor
dec
xor
aas
mov
push
sbb
enter
or
pop
sub
mov
cmp
aad
mov
inc
sbb
sbbl
ret
arpl
cmp
mov
das
push
xchg
push
mov
test
lea
ficompl
cmp
mov
outsb
outsl
and
or
cmp
xlat
cld
pop
mov
mov
mov
mov
adc
xchg
xlat
xchg
pop
push
xor
jbe
or
mov
add
push
cmp
xchg
sti
xchg
aam
mov
inc
sti
sbb
mov
imul
inc
jno
scas
fwait
sbb
cs
popf
adc
out
lret
mov
xchg
add
stos
bound
ret
xlat
cmp
cli
mov
test
popf
cli
sbb
inc
or
push
jg
daa
cwtl
mov
adc
jl
ss
sub
adc
dec
cmc
add
lcall
and
scas
repz
sub
jbe
fcmovb
xor
push
adc
jecxz
sbb
stos
popa
clc
xchg
and
rcll
cmpsl
dec
dec
imul
subb
nop
or
and
push
add
add
mov
xor
addr16
push
rorl
push
popa
jecxz
sbb
jne
add
pusha
mov
pop
addr16
dec
jne
scas
sub
std
xor
jg
mov
lret
test
in
sbb
into
lock
pop
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
lods
xchg
scas
stos
jle
lods
jl
jle
out
and
mov
ret
push
adc
ret
sub
ss
inc
icebp
sbb
cmc
cli
out
xchg
lods
sbb
out
cltd
mov
mov
xor
int3
rorb
inc
cld
xchg
cli
mov
add
into
ljmp
push
out
gs
cs
mov
sub
add
inc
cmc
movsl
xor
testb
sbb
pop
xchg
and
stos
sub
in
imul
lock
pop
inc
add
sarb
enter
cmp
les
inc
and
xchg
in
and
and
movsb
lret
push
aaa
jecxz
jl
cmp
mov
push
lods
sbb
int
arpl
xchg
and
shr
adc
movsl
sti
lods
pushf
xchg
mov
jge
aas
add
lcall
jb
add
outsl
loope
mov
ds
xor
fidivrl
repz
or
fimuls
push
fnstcw
subl
push
and
popf
inc
sub
imul
imulb
dec
pop
sub
out
cmp
hlt
mov
inc
xor
lea
inc
and
jmp
aaa
pop
icebp
ret
mov
sub
inc
loopne
subb
add
push
imul
inc
fldt
cmp
notl
dec
test
sub
mov
imul
jns
inc
push
cmp
pop
xor
addl
test
lods
repnz
loope
out
adc
mov
inc
jle
push
push
notl
insb
repz
testb
mov
or
xchg
cwtl
ja
arpl
or
mov
jbe
xor
cmpl
cmp
mov
icebp
rorl
cmp
add
mov
call
xchg
push
jmp
jo
xor
int3
or
inc
mov
pop
test
loopne
mov
lcall
daa
mov
or
cmc
idiv
mov
enter
sbb
inc
in
cmp
jo
cmp
pushf
inc
or
add
stos
loopne
inc
cmp
sbb
pop
lret
enter
je
push
mov
imul
lret
frstor
call
pop
das
popf
mov
pusha
aam
mov
test
movsb
push
xor
std
sbb
mov
sar
dec
add
notl
leave
inc
in
or
pop
sti
lahf
lods
movl
subl
mov
addl
jmp
insb
xchg
xchg
in
or
xor
jle
lods
jl
jle
aas
jmp
or
adc
loope,pt
roll
mov
pusha
mov
shlb
repz
cwtl
insb
lahf
pop
imull
xchg
mov
fidivs
pop
nop
fld
in
inc
adc
ds
dec
or
sti
jl
cmp
adc
push
shrb
and
sbb
inc
es
imul
inc
push
pop
repz
sahf
mov
cmpsl
add
jo
pushf
mov
orl
jns
decl
push
inc
lret
stos
push
scas
std
jmp
adc
out
shrb
fcom
loopne
push
fimull
sbb
shl
imul
mov
xor
inc
jae
rcll
and
xchg
mov
pop
mov
rcr
adc
ljmp
sub
pusha
daa
ret
jle
fst
dec
repz
cmp
cmc
scas
cmovne
arpl
roll
mov
dec
or
xor
xchg
and
mov
sbb
and
and
inc
xchg
pushf
inc
roll
cmp
xor
pop
daa
jb
mov
js
sbb
je
imul
sub
sti
decl
jp
xor
or
in
adc
sub
dec
sbb
add
dec
loope
test
jmp
xchg
sub
in
dec
push
gs
out
jg
les
mov
loopne
aas
pop
enter
add
lahf
jl
add
mov
sarb
test
test
or
push
fldln2
test
jne
bound
adc
lock
push
rorb
cmp
movb
ds
jg
xchg
aam
fidivl
ror
scas
lahf
shrl
adc
inc
dec
dec
mov
scas
rcr
xchg
dec
repnz
pop
xchg
push
test
sbb
orb
push
jmp
fildll
loopne
dec
in
push
inc
inc
nop
jmp
imul
lsl
dec
loope
sub
jae
int
mov
sub
into
lcall
xchg
ljmp
cmpsl
jne
in
jge
xor
adc
dec
fdivrl
add
out
and
lock
cmpl
in
loop
dec
xchg
lcall
mov
pusha
or
fldl
add
dec
loopne
sbb
fucomi
sub
mov
frstor
test
aad
pop
enter
fdivl
xor
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
pop
ret
or
jle
or
jge
jb
mov
push
inc
mov
xor
fdiv
loop
xchg
arpl
fidivl
into
lods
int3
and
push
insl
dec
aam
in
add
call
test
pop
pavgb
rcrb
sub
je
xchg
xor
ss
sbb
push
les
cmpsl
or
insl
in
adc
pop
sbbb
int
cmp
dec
loope
pop
cmp
mov
push
and
mov
cli
inc
mov
fistpll
fiadds
push
addr16
jns
lret
repz
test
pop
fwait
arpl
xchg
jnp
pop
aas
xor
cmp
inc
mov
and
sub
mov
int
enter
out
gs
sbb
pop
out
xchg
mov
push
shll
gs
imul
adc
add
and
mov
scas
imul
dec
adc
xor
mov
adc
sub
cwtl
sub
push
pop
outsl
jnp
mov
hlt
pop
jecxz
sbb
jle
and
mov
adc
adc
mov
xlat
lods
pop
std
pop
or
inc
push
jbe
insb
push
dec
cmpsb
cmp
push
loope
imul
aaa
cld
jl
pop
dec
fucomip
cmpsl
stos
pop
and
lcall
lea
pop
cli
and
lahf
cmpsl
les
adc
lret
sub
adc
arpl
popa
rcrb
adc
sub
cmp
jne
sub
call
dec
out
lock
xor
scas
inc
loope
mov
into
arpl
je
lds
mov
mov
mov
mov
sbb
push
pop
in
lods
loope
xchg
setne
push
imul
pop
pop
or
pusha
jp
fisttps
testb
push
mov
adc
mov
mov
fldl
xchg
dec
cmp
mov
dec
lods
push
popa
fdivrs
lods
and
les
and
rorl
inc
mov
push
dec
js
shll
hlt
hlt
cmp
std
xchg
push
ljmp
push
repnz
fs
int3
aaa
dec
jecxz
std
fnstcw
nop
cmp
push
fwait
int3
or
push
sbb
cwtl
andb
mov
cmp
add
sub
adc
mov
in
es
cmpsl
idivb
fdivl
xchg
fwait
adc
iret
pop
nop
icebp
iret
in
push
hlt
adc
ljmp
pop
js
cmp
movsl
loopne
dec
sub
sbb
adcl
fsubs
repnz
xlat
adc
repz
test
icebp
add
jmp
lock
arpl
sub
scas
ret
rcrl
mov
jl
jle
inc
movsl
cmpsb
stos
jne
bound
fwait
cld
in
xchg
int
andb
mov
fnstenv
imul
les
flds
data16
adc
outsl
jo
ja
lds
push
pop
iret
hlt
cwtl
and
pop
xor
outsb
cmp
scas
push
hlt
add
cbtw
xchg
fisttpll
sbb
mov
pop
nop
addr16
addr16
lods
icebp
sahf
inc
pop
repz
jne
jmp
mov
andl
push
ljmp
scas
sti
mov
xchg
imulb
dec
cmp
mov
ss
cmpsl
xor
jmp
sbb
pushf
xchg
das
jp
mov
jp
pop
out
ret
mov
outsl
cmpsl
fs
test
rcll
shld
mov
fisttpl
jb
lahf
mov
sub
scas
mov
pop
push
out
les
pop
xorb
mov
movsl
and
push
dec
xchg
test
cli
bound
jle
jecxz
cmp
cmpl
dec
cmp
aam
cmpsb
xchg
adc
xor
jbe
dec
fcmovne
adc
dec
xchg
mov
enter
cmp
movsl
pop
adc
je
adc
jge
adc
pop
push
enter
arpl
data16
stos
jge
rcl
shlb
loop
adcb
xor
pop
sar
xor
sub
push
addr16
bound
jns
push
mov
jo
stc
jge
and
inc
fdivr
inc
sub
aas
jb
xchg
cmp
inc
jbe
pop
inc
lods
pop
bswap
jge
std
rcll
call
mov
leave
pop
and
sahf
test
or
loopne
outsb
and
cmp
mov
nop
sbb
and
dec
inc
mov
adc
xor
sarl
cs
fcmovbe
dec
insl
enter
xchg
lahf
in
push
je
cmp
or
xchg
or
mov
in
xchg
pop
fdivr
inc
movl
in
ret
pop
push
das
cmpsb
pop
or
and
jmp
ret
push
xor
lods
cmp
loope
mov
xor
cmp
call
roll
ret
mov
mov
scas
repz
into
jns
sahf
cli
fildl
cs
jl
inc
popa
into
jo
stos
and
stc
lds
ja
mov
aad
lods
dec
andl
sysexit
jg
pop
enter
inc
orl
or
add
dec
pusha
add
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
es
mov
jle
into
push
mov
sub
pop
mov
cs
inc
repz
cmpsb
adc
mov
loope
push
sbb
hlt
sub
cltd
dec
and
fst
dec
hlt
cmp
in
popf
rcrb
cmpsl
daa
push
mov
sub
inc
cmp
add
mov
pop
addr16
jae
lcall
out
popf
pop
cltd
xlat
lea
aam
sbb
push
pop
aam
addl
inc
jo
imul
push
pop
and
jbe
mov
faddl
movsb
rcr
dec
mov
mov
in
push
hlt
aaa
gs
inc
sbb
sbb
stos
adc
cmp
push
xchg
push
inc
cs
inc
jmp
add
bnd
cli
stc
mull
cwtl
popf
jns
shlb
push
jae
movsl
or
xchg
ljmp
add
sbb
dec
mov
std
sub
jge
adc
bound
dec
nop
adc
push
inc
int3
jle
fadds
push
mov
ss
or
adc
outsl
pop
jne
fisttpll
vmread
lods
bound
out
sub
xor
xchg
movsl
ss
shll
mov
push
ja
mov
lea
cmc
enter
popf
push
fsubrs
sub
inc
in
jg
je
and
mov
sbb
mov
jno
lods
andl
shlb
in
icebp
scas
sbb
cmp
aad
mov
push
test
dec
int3
inc
cmc
pop
popf
sub
cmp
js
sbb
xchg
xchg
les
cmp
xor
imul
push
push
test
jge
jb
adcl
push
mov
mov
out
inc
lcall
pop
cwtl
sbb
push
mov
mov
movsb
push
cmp
push
fldenv
cltd
in
pop
xchg
pusha
add
test
jno
dec
adc
xchg
enter
sbbb
cwtl
add
adc
xchg
jb
in
ficompl
pop
inc
pop
xlat
pusha
pop
mov
lcall
add
push
push
jbe
scas
cmp
shrl
xchg
fsubl
sbb
push
and
loopne
lods
inc
fcoml
scas
push
adcb
xchg
mov
and
shrb
inc
pop
cs
push
sub
daa
jb
mov
jnp
add
jne
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
adc
cmp
enter
jge
out
jg
pop
dec
insl
cmp
fsubp
mov
decl
push
imul
lea
nop
leave
imul
outsl
mov
stos
push
and
inc
int
enter
xchg
hlt
cmc
and
lcall
pop
out
xor
out
dec
insl
hlt
js
pop
in
dec
mov
clc
dec
mov
cmp
faddl
enter
aaa
pop
jbe
les
dec
mov
ja
xchg
push
aaa
pop
das
jle
push
push
sub
fstp
xor
jp
mov
ret
push
adc
and
ss
mov
aad
in
and
test
fidivs
pop
fstl
lock
loopne
xor
mov
sbb
xchg
mov
pop
test
test
push
bound
lahf
in
xchg
scas
xor
cmp
daa
jmp
cld
mov
daa
loope
cmp
mov
pop
push
int
fimull
hlt
jnp
sub
xlat
aas
adc
leave
inc
jns
aad
fldenv
in
out
sbb
inc
outsl
add
mov
fldl
mov
inc
es
push
dec
cmpsb
pop
push
aad
mov
mov
iret
test
aaa
jo
fchs
cltd
cld
adc
dec
dec
push
dec
adc
int
fimull
sbb
sub
adc
push
mov
ret
sbb
xchg
pop
lret
add
mov
pop
push
in
arpl
adc
jge
fisttps
pusha
mov
jge
xor
aas
dec
in
bound
xchg
mov
xor
xchg
pusha
cltd
test
mov
pop
cli
or
sbb
lret
data16
push
shrb
out
mov
push
push
ficoms
popa
lods
or
leave
out
mov
push
fnsave
scas
inc
or
lret
xorb
sti
in
shl
ljmp
cs
in
fcomps
jg
or
cs
push
imull
lcall
xorl
into
into
movsb
jp
imul
jl
mov
mov
jl
push
cmp
cld
ss
or
xchg
mov
std
inc
inc
mov
xor
test
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
xor
in
xchg
mov
jle
push
push
ljmp
mov
insl
dec
mov
and
in
mov
cmp
cmp
push
dec
adc
addr16
cmc
push
xor
popa
ss
sub
scas
sarl
mov
sahf
int
aam
or
cmp
cmp
add
add
xchg
push
testb
andb
test
repnz
pusha
retw
xlat
iret
shll
ljmp
push
sub
inc
mov
test
cmp
mov
lcall
gs
push
add
sarb
sbb
xor
fcompl
and
mov
jecxz
int3
sub
fucomi
nop
leave
test
xor
add
cmp
push
jecxz
xchg
imul
imul
adc
push
ret
jl
in
scas
rolb
rcrl
pop
lahf
cmp
scas
inc
sbbl
addr16
pop
pop
pusha
nop
xchg
ret
outsb
cltd
or
lcall
iret
cltd
adc
adc
mov
dec
movsb
push
shrl
mov
sub
mov
test
lahf
scas
fcmovnu
shlb
add
cmp
frstor
mov
enter
pusha
xorb
sbb
sub
xchg
imul
adc
mov
mov
nop
push
xor
cli
std
sub
mov
mov
xor
leave
enter
std
sahf
jg
mov
and
iret
ja
inc
jo
imul
cmp
lretw
mov
stc
dec
push
push
adc
fisttps
adc
inc
or
ret
lret
arpl
cmp
push
sub
adc
jmp
dec
out
push
sti
mov
aaa
dec
dec
mov
iret
fwait
cmp
jne
dec
fwait
addr16
fldl
insb
xchg
fmull
loope
es
or
jnp
mov
inc
stos
push
adc
xchg
sti
fs
sbb
jae
lcall
inc
sub
pop
cwtl
out
jbe
jl
out
xchg
popf
ljmp
pushf
clc
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
xorl
jle
jg
jle
outsb
xchg
in
mov
fiaddl
xor
sbb
cwtl
push
adc
cmpsb
int3
fnstcw
lods
ficompl
push
sbb
inc
lcall
push
imul
aam
mov
insb
loopne
pushf
popa
outsl
popf
mov
pushf
roll
and
stos
rol
es
push
out
test
cli
xor
sti
xchg
pop
pop
xchg
jmp
stc
lahf
loop
je
aam
push
int
pushf
aam
stos
jb
sub
fs
stos
xorl
addr16
jg
inc
pop
jmp
ja
hlt
mov
fnstenv
cmp
sub
call
xor
push
jo
xchg
ja
mov
cltd
mov
shll
cmpsb
subl
mov
sahf
mov
pop
adc
gs
pop
inc
mov
push
ret
mov
hlt
adc
cmp
xor
lods
addr16
inc
popf
inc
dec
outsb
faddl
outsl
mov
pop
push
pop
fisubrl
inc
xor
xchg
jge
jl
lock
aad
inc
push
shlb
xor
pop
call
js
sub
dec
shr
nop
inc
stc
cmp
test
xor
sub
sbb
inc
mov
out
movsl
push
sbb
jns
das
js
popf
push
negb
xor
imul
out
das
push
ljmp
jns
push
testl
out
pop
jbe
mov
pushf
loopne
bound
inc
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
rorl
jle
xchg
pusha
or
sbb
jae
and
loope
js
ret
dec
lahf
sbb
test
icebp
ficomps
das
int
dec
data16
jns
mov
mov
call
dec
jnp
dec
push
std
mov
sub
fsub
mov
in
clc
les
sbb
mov
cmpb
fiadds
jns
lods
pop
pop
xor
and
jmp
lds
lcall
jge
ss
das
stos
xchg
inc
push
scas
lea
popa
test
pop
cmp
loop
stos
imul
jl
xlat
fmuls
cwtl
shrb
movl
mov
sbb
and
jmp
xor
mov
das
mov
or
inc
jnp
add
sub
xchg
das
xor
xor
add
sbb
sbb
jmp
adc
or
jmp
inc
pusha
xchg
dec
push
das
inc
adc
and
mov
mov
cmp
scas
dec
jmp
cmp
out
cld
es
and
in
les
push
iret
push
sub
cmp
arpl
in
or
dec
mov
jg
mov
inc
push
mov
aad
in
scas
mov
mov
sub
lods
sbbl
popa
mov
add
mulb
pop
fists
jl
ds
lods
push
pop
ds
mov
or
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
dec
push
mov
cmovne
icebp
jg
jle
das
cmp
mov
fidivrs
jp
adc
shlb
mov
mov
sahf
in
xchg
imul
aaa
cltd
xchg
aad
scas
jne
and
cwtl
jno
and
pusha
push
int
add
orb
mov
lock
out
inc
clc
push
arpl
xor
add
jl
sbb
sub
sbb
sbb
dec
jle
ret
test
push
call
mov
xor
mov
lods
in
jb
xor
shll
add
adc
dec
sbb
mov
frstor
orl
in
dec
dec
mov
mov
lret
xchg
jp
mov
inc
mov
cld
in
popf
mov
xchg
sbb
out
into
xlat
jo
in
push
adc
lret
fistpll
xlat
inc
ret
adc
inc
sub
enter
xchg
or
mov
or
aam
ss
out
jl
push
je
dec
imul
push
adc
cwtl
and
jecxz
out
std
mov
subl
cmp
xor
cmpsl
push
sti
sub
push
cmc
stos
and
in
push
dec
fwait
ret
aas
mov
xchg
outsl
lret
insb
sarl
or
cmpsb
pop
ret
xchg
adc
pop
scas
ret
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
push
mov
jg
jle
fwait
lahf
pop
mov
pop
ficoms
rorl
icebp
es
aaa
imul
lock
movsb
cmp
mov
test
mov
jae
sbb
pop
push
ljmp
in
sbb
call
lahf
inc
movb
jo
dec
add
test
sub
pop
cmp
dec
xor
xor
and
dec
sub
pop
rolb
pop
loop
inc
push
popa
enter
or
ret
ss
jns
sub
leave
out
xchg
rolb
jno
mulb
int
pop
stos
mov
mov
adc
jmp
and
jp
mov
loope
jmp
into
dec
daa
add
lods
mov
test
in
lret
in
push
cmp
mov
xor
jmp
sbb
cmp
fsubrp
test
adc
or
pop
add
sub
dec
adc
inc
mov
sahf
xor
push
test
das
dec
or
mov
inc
aas
outsl
sbb
sbb
xchg
push
xchg
push
ret
or
cwtl
jge
and
sub
ljmp
scas
loop
rcrb
cwtl
cmp
sub
out
mov
cli
out
mov
push
lds
xchg
or
xor
inc
mov
or
outsb
cli
lahf
call
pop
or
jg
dec
sbb
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
ret
jle
icebp
jg
jle
push
or
rcrl
mov
out
aam
sbbb
and
cmpb
ja
aaa
push
cmp
hlt
lcall
jge
jmp
cmc
aam
ljmp
rcrl
fsts
leave
stc
scas
mov
cld
mov
pop
mov
les
shrl
pop
dec
sub
loop
mov
sbb
dec
idivl
int
rorl
inc
inc
mov
ret
sbb
lahf
test
push
bound
and
leave
sbb
mov
jl
rcl
xchg
push
fidivs
into
cltd
mov
daa
inc
ja
scas
jge
mov
ja
js
sub
cmp
cmp
cmp
idiv
sub
aas
or
sahf
add
in
pop
lret
out
mov
out
out
dec
and
add
loopne
lret
vunpckhps
dec
aam
push
xor
inc
mov
push
adc
sbb
out
add
mov
movsb
shr
repnz
push
ss
daa
add
jns
inc
add
shlb
pop
adc
or
pop
mov
pop
and
lea
mov
aaa
cmp
mov
fdivrs
and
out
xchg
je
sub
sbb
jmp
in
ret
out
push
orb
or
pop
cld
decl
jmp
ljmp
jo
fidivs
inc
xchg
inc
ret
jle
icebp
jg
jle
cltd
add
mov
ret
addr16
jnp
sahf
testl
jno
lock
or
inc
mov
into
mov
and
add
sar
mov
cmpsl
ja
jo
ja
test
pop
std
mov
enter
and
jle
adc
and
xchg
or
in
jo
subl
les
jle
movsb
pop
jns
jae
inc
out
cmp
cmc
outsb
and
push
jp
push
clc
dec
outsb
orl
incl
dec
add
and
jp
jmp
push
loope
popf
popf
pop
mov
je
mov
add
xchg
incb
ror
cmp
lds
stos
add
loopne
sbb
adc
mov
pop
pop
fsubrp
jae
add
adc
pop
fstpl
jecxz
mov
call
xor
mov
out
popa
inc
lret
or
pop
test
cmc
fldt
mov
sahf
hlt
xor
mov
dec
sti
je
cmp
mov
repz
repnz
jge
imul
aam
int
loopne
scas
call
sub
add
hlt
push
xchg
add
lock
movsb
shll
push
mov
mov
dec
scas
adc
filds
sarb
aad
add
dec
mov
pop
jecxz
or
mov
bound
cwtl
jns
pushf
es
sub
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
mov
sub
mov
es
pop
in
and
dec
jae
adc
data16
sub
nop
jne
fidivrs
pushl
sbb
sbb
dec
xchg
push
iret
mov
or
mov
inc
xor
mov
ret
js
cltd
jbe
and
dec
xor
mov
fcomps
arpl
cmp
jl
push
jge
imul
and
jb
jge
icebp
dec
into
das
cmc
lds
xchg
or
mov
jle
jbe
shr
dec
mov
aaa
or
lret
cmpsl
cwtl
mov
outsb
mov
imul
inc
test
xchg
or
fs
test
outsb
pushf
jne
add
push
cli
mov
out
pusha
push
mov
test
shlb
mov
sbb
je
dec
ja
dec
cld
mov
and
orb
and
push
outsl
push
xor
dec
dec
mov
out
aas
push
mov
pop
pop
fmull
addb
pop
std
cli
fildl
ja
testl
mov
mov
mov
call
imul
lods
add
mov
popf
mov
hlt
mov
scas
pushf
aas
sub
mov
popa
push
mov
repz
fisubl
push
addr16
mov
add
fwait
jle
stos
imul
add
and
add
les
dec
mov
dec
push
ret
mov
push
faddl
jmp
cmpsl
fisttpl
inc
test
fisubs
jl,pt
fdivrs
adc
jl
scas
aas
cmp
xchg
add
out
xchg
xor
call
pop
pop
das
mov
jg
in
mov
sbb
movsb
xchg
lahf
in
int
bound
out
add
xchg
mov
dec
jecxz
lret
sbb
iret
sahf
stos
push
rolb
movsl
jge
dec
adc
jb
sarb
mov
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
xchg
aas
and
jl
jle
add
stos
push
or
push
icebp
jg
mov
test
rcr
call
cli
pusha
adc
lret
cmpsb
into
aaa
sarl
pop
xlat
daa
jecxz
lods
std
mov
jp
xor
jno
adc
mov
enter
dec
pop
xlat
dec
nop
jns
mov
push
xor
aad
push
pop
stc
lods
jmp
iret
loop
xor
mov
shll
mov
mull
jne
dec
xor
mov
prefetch
andb
pop
pop
push
lahf
mov
pushaw
pushf
movsb
pop
pop
sub
add
in
mov
pop
pop
cmpsw
or
cmp
xchg
movsl
inc
cmpsl
cmp
sbb
dec
push
mov
popf
cld
stos
fstl
dec
jmp
cmp
sahf
loop
jge
mov
add
xchg
out
repnz
push
dec
inc
les
fidivrl
push
sbbl
test
mov
lret
mov
push
pop
jg
bound
cmp
add
mov
call
cmpsb
ret
cs
push
cs
adc
sahf
loop
inc
mov
shll
mov
mov
push
mov
rcrb
dec
ds
jmp
imul
inc
push
popl
clc
fbld
push
scas
fs
pop
stos
xor
loope
xor
subl
ljmp
jno
xchg
and
push
std
xor
inc
add
pop
mov
lahf
sub
sbb
fistps
rorl
cmp
mov
inc
enter
jl
repz
mov
push
outsb
rcrl
daa
jle
loope
lds
pop
mov
sbb
ljmp
pop
mov
inc
movsb
cmpsb
dec
pop
leave
je
neg
sub
sbb
inc
sahf
mov
sti
sub
outsl
xchg
orl
pop
mov
mov
jl
dec
xor
push
mov
mov
add
jmp
mov
imul
popf
call
jle
jl
jle
loopne
fimuls
jl
popa
jg
sbb
es
repz
test
add
cmc
jecxz
popf
lods
pushf
inc
adcb
leave
xchg
push
xor
add
nop
xchg
inc
and
adc
xchg
hlt
lret
arpl
in
adc
cmp
adc
sub
movb
cmpb
fs
jb
jne
repz
clc
push
sti
cmp
cli
mov
inc
in
jge
push
out
push
fsts
and
loop
xchg
mov
inc
dec
fsts
ja
std
xlat
in
jo
cmp
xor
inc
pop
jge
fs
in
jb
rorb
iretw
cmp
pushf
mov
mov
mov
lock
or
roll
pop
lret
lds
repnz
xchg
iret
dec
out
jmp
add
enter
in
enter
inc
xchg
or
ss
in
jbe
xchg
call
inc
cmp
adc
jno
adc
sub
pop
fisubl
sub
cltd
rcll
cwtl
adc
dec
lret
addb
jmp
push
scas
pop
callw
adc
fists
stc
mov
cld
sub
mov
test
nop
pop
sub
xor
mov
outsl
mov
iret
xchg
add
push
leave
ficoms
out
fidivl
int3
inc
lods
or
xchg
divb
enter
sti
test
push
shll
cmp
data16
xor
pop
into
mov
push
jo
xor
add
jp
pop
sub
mov
mov
jbe
out
fstps
shrl
daa
lcall
imul
test
aam
dec
xorb
mov
mov
sub
cmp
xlat
cli
insb
aas
sahf
dec
andl
pop
out
mov
mov
fidivrl
stc
stos
scas
or
jbe
jns
cmp
jmp
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
scas
iret
mov
add
add
add
mov
cmp
mov
sbb
cmp
mov
and
in
rcr
repz
mov
jmp
leave
aas
adc
jae
nop
mov
imul
push
mov
xor
fincstp
xchg
add
add
mov
mov
xor
mov
sbb
out
fistpll
outsl
leave
add
test
adc
cmpsb
push
mov
mov
call
je
movq
cmp
push
ss
pop
jmp
sti
or
adc
mov
js
or
mov
lret
ret
dec
jbe
or
loope
mov
mov
xchg
xchg
or
pop
jl
cmp
push
sbb
js
push
addl
lret
sub
dec
arpl
mov
inc
or
xchg
jno
test
sub
pop
arpl
push
dec
scas
dec
pop
outsb
subl
add
add
push
pusha
in
jle
lcall
push
fadds
add
add
add
inc
jle
lods
jecxz
pop
mov
inc
ret
pop
xchg
mov
fdiv
dec
lods
outsl
movsb
xchg
jmp
add
xchg
stos
sbb
lods
clc
ljmp
cmp
sub
push
cmpl
das
inc
push
inc
mov
pop
outsl
mov
xchg
dec
imul
adc
fwait
dec
stc
xor
adc
ds
jo
icebp
mov
jbe
sbb
scas
jmp
dec
or
das
cmpsb
mov
dec
and
push
xchg
adcb
and
ss
cmp
adc
adc
lods
daa
in
dec
outsl
gs
aam
xchg
mov
or
sbb
add
mov
loope
push
adc
cmpb
pop
rcrb
lret
inc
push
aam
call
test
add
add
add
mov
push
and
flds
add
add
add
ret
stos
nop
jnp
xor
mov
jne
dec
sbb
or
sahf
testl
mov
or
rcll
sti
mov
imul
fnstenv
faddl
aas
inc
inc
jo
add
add
enter
mov
adc
cmpsb
add
jg
and
and
dec
pushf
xor
jnp
xchg
in
push
and
clc
cmpsl
sub
fmull
jb
xor
sbb
inc
cmc
mov
shrb
xchg
sti
les
push
add
out
bound
sahf
xor
pop
mov
cmpsb
fisubl
and
test
mov
push
mov
xchg
xor
sbbb
inc
push
mov
jo
mov
inc
pop
mov
mov
jge
idivb
repnz
mov
fisttps
jb
pusha
pop
mov
flds
and
jmp
cwtl
add
mov
roll
add
jl
fiaddl
add
add
add
fisttps
rorl
popf
jb
daa
jne
push
xchg
test
xchg
int3
mov
sub
jl
mov
xchg
daa
mov
push
mov
add
mov
dec
fsubrs
in
inc
icebp
mov
mov
out
test
pop
movsb
dec
fcmovnu
xor
sbb
or
mov
popw
fwait
push
into
insl
or
xchg
sub
or
push
and
pushf
lahf
cmpsl
xor
stc
xchg
int
cmpsb
and
and
lcall
mov
aam
mov
jne
lret
adc
or
mov
and
ss
data16
xlat
add
xlat
daa
mov
inc
xor
or
dec
and
adc
mov
mov
mov
pop
lds
jle
mov
lods
mov
sub
mov
sarl
jbe
lock
pop
jae
or
pop
dec
or
adc
shlb
add
add
add
sub
mov
dec
test
jge
mov
inc
jp
mov
test
mov
or
push
loopne
push
mov
mov
mov
adc
dec
call
inc
insb
mov
pop
xchg
pop
mov
jb
add
inc
fisubl
jecxz
loope
jo
orl
notl
shrl
or
cmpsb
roll
xchg
xor
pop
lcall
inc
cmp
xor
mov
xchg
and
xor
arpl
ljmp
xchg
repz
xor
mov
dec
fmuls
adc
lds
cmp
aas
jge
out
jecxz
out
adc
gs
jl
xor
or
push
mov
imul
out
and
xchg
data16
pop
ljmp
jmp
dec
adc
xchg
jmp
add
add
cmc
insl
cmc
out
lcall
enter
shlb
ljmp
add
jmp
fxch
insl
nop
adc
loopne
xchg
insb
ja
inc
fiaddl
mov
mov
aam
mov
or
enter
jns
push
xchg
xchg
mov
mov
sbb
mov
pushf
dec
lds
fdiv
ja
pop
adc
faddl
mov
push
cmp
mov
test
dec
inc
add
jne
std
rcrl
gs
mov
fs
aaa
jmp
mov
cmpsl
popf
loop
lcall
andb
aam
jg
clc
shll
xchg
add
test
push
adc
push
into
cmp
rolb
jl
out
pop
lods
ljmp
js
std
sub
cmc
fcoms
leave
loop
loopne
mov
idiv
jnp
in
mov
lea
cmp
jae
sub
jne
sbb
add
add
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
push
mov
or
movsb
test
scas
js
cmp
fcoml
pushf
lret
mov
nop
push
popa
xor
ret
jbe
push
xchg
mov
push
adc
icebp
in
decl
xchg
pushl
std
icebp
push
stos
push
xlat
mov
data16
aam
mulb
mov
bnd
popa
icebp
jl
xor
and
test
fiadds
ljmp
sub
inc
mov
aas
xchg
cmp
xchg
cld
imul
xchg
fisubl
inc
push
aas
cmp
mov
stos
mov
loop
jp
iret
cs
push
lea
dec
ret
cmpl
mov
aad
popa
sbb
cmp
das
xor
add
imul
ds
sub
push
test
cmpb
xor
mov
ret
jnp
push
sbb
or
and
scas
sti
jle
pop
push
pop
repz
add
add
add
notb
es
or
add
cmp
push
out
xor
xchg
and
adc
rcr
sbb
fisubs
dec
aaa
adc
lahf
lahf
and
mov
xlat
pop
sarb
testl
test
sbb
pop
fstl
lds
in
cs
insb
movsl
xor
fcomps
pop
mov
adc
mov
or
int
pusha
rcll
sbb
adc
icebp
mov
push
dec
jb
hlt
mov
pop
and
pop
clc
jns
mov
mov
mov
cmc
jns
and
cli
popf
bound
popf
mov
push
fs
shlb
xor
push
arpl
in
xchg
add
arpl
dec
shlb
xchg
sbb
hlt
or
xor
arpl
cli
push
xlat
sbb
out
outsb
pcmpgtb
sub
scas
fs
stos
xchg
lahf
fnstcw
ss
lahf
stc
bound
out
insb
filds
add
add
add
cltd
cmc
dec
gs
std
sbb
es
dec
xchg
sbb
in
jmp
sbb
scas
jae
pusha
loopne
inc
je
int
arpl
stc
test
adc
pushl
xor
add
stos
push
std
jecxz
cld
xchg
frstor
test
push
dec
lock
jnp
fs
neg
enter
xlat
pop
sub
test
pop
ret
ss
insb
mov
push
mov
push
ret
mov
or
add
push
push
sbbb
add
mov
fbstp
cld
paddusw
stos
sub
push
jbe,pt
stc
jp
or
jecxz
in
lret
enter
sbb
bts
mov
movsb
std
dec
sub
mov
sub
push
arpl
in
adcb
imul
testb
je
jno
sbb
subl
sbb
outsb
test
adc
pop
or
xlat
scas
fildl
add
add
push
jl
jle
insb
out
adc
jnp
loopnew
add
add
add
inc
push
sub
int
outsl
inc
fidivs
push
cmp
into
jp
sub
test
frstor
sbb
daa
xchg
sbb
arpl
popf
mov
add
mov
fwait
call
sub
adc
repz
push
fisttps
adc
push
test
mov
push
or
sbb
aas
mov
repz
mov
dec
dec
mov
das
nop
xor
inc
and
or
enter
ds
int
and
xor
outsl
movsb
inc
popf
sub
fsub
mov
clc
movsb
adc
pop
idivl
insb
mov
and
ficompl
into
movsl
notb
xor
movl
cmp
popf
xchg
out
mov
push
push
stos
mov
adc
or
enter
and
and
mov
adc
in
xor
adc
loopew
add
add
add
inc
testl
fbld
hlt
pop
mov
mov
adc
push
push
test
cli
pop
sbbl
xchg
daa
sti
sub
sub
add
notl
mov
adc
push
pop
aam
ljmp
sti
fs
xor
xchg
sub
adc
out
xchg
mov
gs
mov
nop
xchg
or
pop
faddl
les
mov
fstpl
clc
test
lcall
push
out
pop
das
daa
dec
cli
je
call
repnz
xchg
and
lea
cmpsl
out
sub
jbe
imul
ret
loope
adc
and
dec
arpl
inc
sub
add
sbb
das
js
sbb
rorl
pop
mov
rorl
pop
dec
icebp
aaa
data16
jne
mov
lcall
add
add
add
dec
xor
imul
and
adc
adc
xor
iret
dec
cld
out
scas
das
push
xor
aad
inc
xor
fwait
loop
outsb
aam
xchg
es
jmp
jne
xchg
inc
inc
push
mov
jmp
fldcw
pop
jae
inc
or
push
call
mov
in
iret
sub
mov
rcll
loope
mov
or
fisttps
add
push
in
cltd
popf
dec
inc
lds
sub
inc
mov
jge
sub
mov
jb
push
jno
out
mov
rcr
and
jno
add
pop
mov
jno
mov
jmp
add
pop
in
mov
stc
pop
mov
pop
push
push
pop
sbb
add
inc
jo
sbb
xchg
inc
xor
inc
cmp
ja
popa
idivl
cmp
xor
pop
lret
mov
outsb
stos
or
add
add
add
jnp
sti
xchg
lahf
mov
cwtl
mov
add
add
add
pushw
test
flds
adc
scas
ljmp
push
add
sub
cmp
add
test
mov
mov
and
lods
out
sbb
rol
pop
fnsave
sub
pop
dec
not
notl
mov
cmp
push
push
push
insl
rorb
jae
adc
cmc
fcomps
sub
or
or
scas
xchg
sbb
in
out
mov
jb
or
inc
fisubrl
sar
daa
push
push
into
dec
or
jb
cli
ja
xor
cli
inc
scas
icebp
fs
call
ret
adc
insl
imul
lea
pop
mov
lea
cwtl
jl
jge
lcall
add
fwait
pushf
or
ret
jae
pop
addl
inc
cmp
ret
in
lret
test
sub
sub
pop
sarl
mov
cltd
addr16
add
add
add
sub
pop
mov
pop
js
adc
shlb
xorb
pop
or
fbld
dec
jne
inc
aas
clc
adc
sub
rorb
pop
fsubr
call
dec
inc
pop
push
pop
dec
popa
push
lahf
int3
pop
stos
inc
mov
dec
sbb
repnz
cmp
adc
pop
popf
in
inc
add
xchg
sub
popf
imulb
mov
imul
call
loopne
xorl
xor
js
inc
jge
or
inc
lds
sbb
ret
loopew
test
out
out
dec
adc
fcomps
lcall
outsb
xrelease
out
xchg
lea
jae
adc
push
xor
xchg
lods
pop
outsb
xor
in
in
ja
fwait
xchg
cld
dec
jnp
sub
push
mov
jo
out
outsb
insl
lock
std
repz
out
xchg
addr16
add
add
add
dec
dec
cmp
cmc
test
adc
pop
mov
push
mov
and
aam
or
mov
mov
cmp
jmp
mov
xchg
loope
pop
inc
lock
push
in
inc
xor
imul
mov
adc
dec
scas
dec
aad
pop
xchg
push
mov
and
loopne
jne
lcall
xchg
adc
mov
cmp
test
loop
mov
sbb
adc
and
cltd
pop
xchg
loopne
andl
scas
outsl
lret
pop
push
cvttps2pi
add
cmp
xor
mov
clc
pop
xorb
decl
leave
repz
sbb
loop
pop
rol
repnz
sbb
imul
loop
mov
pusha
sub
lods
fldt
int
movsb
xchg
xor
add
nop
fnstcw
or
imul
and
jmp
in
sub
cmp
arpl
je
or
addr16
add
add
add
cli
cltd
imul
fsubrp
jge
inc
sub
mov
xchg
out
push
into
xlat
fst
jecxz
test
xchg
jne
add
pop
ror
mov
sub
stc
fstpl
push
sahf
dec
icebp
or
rorl
push
fisttps
mov
inc
arpl
in
add
push
adc
jp
push
xchg
fsubrs
jecxz
sbb
mov
jb
int3
lods
mov
push
sub
push
and
shlb
sbb
pop
sarb
lcall
enter
push
add
ja
xor
iret
test
jge
adc
pop
inc
mov
cld
mov
push
inc
mov
sub
aad
andl
add
add
push
ror
sbb
arpl
pop
add
lahf
pop
sub
mov
cmp
in
add
add
mov
mov
push
out
add
add
add
test
imul
mov
inc
pop
scas
sbb
cmp
cwtl
pop
dec
cmp
sahf
pop
cmp
ja
or
insb
test
or
into
insl
dec
dec
jae
xchg
ja
dec
mov
test
insb
push
xchg
cmp
ret
hlt
jle
xlat
xor
lds
jne
fstpl
jp
sbb
cld
ret
xor
mov
out
or
out
adc
dec
ret
dec
or
lods
xchg
out
or
lcall
int3
xchg
sbb
mov
lock
imul
cmpb
push
push
sub
lods
ljmp
mov
aam
sub
mov
aaa
mov
xor
bound
stc
fnstsw
or
xchg
adc
xlat
jae
adc
loopne
shl
cmc
cmp
mov
fwait
dec
lods
lret
xchg
in
mov
incl
rol
fistpll
add
add
add
ja
pushf
adc
imul
loopne
push
jle
cmp
dec
and
push
sbb
dec
cmpsb
dec
xor
pop
cmp
jle
imul
sbb
or
fwait
out
mov
mov
mov
rcl
xchg
cmp
es
xor
in
pop
jg
inc
or
xchg
mov
mov
fmull
pop
dec
pushf
pop
iret
andl
out
mov
mov
test
xchg
cli
inc
xchg
cmc
negb
pusha
cmp
xchg
sub
pop
or
sub
test
pop
pop
repz
lods
mov
pop
mov
pushf
loop
sbbl
mov
ljmp
test
pop
xchg
stos
push
enter
inc
add
dec
sub
in
sub
mov
inc
dec
aaa
mov
ja
cld
pusha
xor
shl
outsb
aaa
and
xchg
mov
sbb
add
add
sub
in
negl
sub
movsb
mov
shll
add
add
outsl
aas
inc
pop
mov
out
hlt
pop
subb
mov
filds
fisubl
jae
sbb
mov
stos
aaa
test
or
leave
xor
loopne
call
cmpsl
dec
popf
mov
fs
int3
sub
sub
mov
pop
inc
imul
xor
cmp
inc
out
sti
add
pop
ud2
pop
jl
add
or
jmp
scas
cmp
orl
nop
test
repnz
rcrl
jge
shll
pop
jmp
sub
sub
mov
int
sar
jle
mov
testb
loop
dec
mov
and
push
add
and
adc
inc
stos
xor
mov
gs
fistl
pop
xor
aam
jmp
test
cmpsl
adc
hlt
xchg
add
je
add
subl
inc
mov
fsts
inc
sbb
fistpll
stc
dec
push
fsubl
ljmp
xchg
bound
inc
push
xor
push
mov
push
and
xor
call
flds
push
ret
inc
sub
je
movb
pop
pop
or
mov
aam
fcoms
push
sbb
clc
je
jle
andb
mov
fstpl
insb
adc
xchg
sub
repnz
mov
sbb
push
mov
fimuls
jg
mov
cwtl
nop
xor
jmp
mov
mov
adc
call
mov
daa
sarl
mov
popf
sbb
lahf
dec
mov
and
imul
sbb
sbb
lds
int
jns
rorb
test
in
ret
push
vsqrtsd
xchg
or
adc
dec
in
shl
rcrb
sbb
test
adc
dec
out
xor
mov
cmp
mov
push
push
push
mov
mov
add
add
add
clc
lods
in
sbb
add
sbb
ljmp
mov
push
inc
mov
mov
jle
mov
lds
test
shrb
int
enter
add
jne
and
mov
xchg
aam
push
mov
jmp
push
pop
outsl
shll
icebp
into
push
xchg
cmp
dec
popa
mov
inc
sub
pop
in
fs
add
xchg
pop
outsb
push
jo
ss
push
loopne
loope
pushf
pop
in
pop
mov
mov
roll
dec
ret
lea
mov
dec
movsl
fimuls
stos
lds
enter
aam
ss
adc
dec
movntq
mov
add
lcall
je
lods
out
push
or
sbb
adc
imul
mov
pop
jg
adc
push
outsb
repnz
mov
lds
add
add
repnz
add
pop
lcall
les
iret
mov
add
add
add
sub
rcrl
stc
mov
pop
mov
xchg
icebp
sub
pop
insl
movsb
or
xor
push
cmp
xor
push
xchg
jl
cs
mov
repnz
enter
push
outsl
movsb
dec
pusha
loopne
shrd
inc
dec
pop
mulb
cmc
ss
or
mov
inc
out
mov
add
mov
push
fcomi
std
pop
fldenv
push
andl
fiaddl
xchg
mov
pushf
sub
and
push
popf
add
test
pop
and
sbb
mov
fcomp
push
adc
leave
imul
jg
mov
out
adc
and
mov
mov
daa
shll
or
stos
mov
js
rorl
aaa
xor
sbb
aam
cmp
xor
adc
pop
mov
push
decl
push
xchg
addr16
add
add
add
jns
xchg
test
mov
xchg
mov
mov
xchg
jecxz
xor
push
xlat
shlb
jbe
xchg
push
leave
and
sti
jge
je
mov
cmp
jnp,pn
cmp
fimull
add
nop
push
int3
inc
pop
push
jne
ficoml
cmpb
and
push
dec
rclb
push
push
test
adc
jg
ds
cld
pop
pop
or
adc
or
aas
sub
fsub
daa
mov
sub
push
push
mov
testb
push
loope
scas
or
pushf
aaa
jnp
sbb
or
clc
in
pop
push
push
adc
sbb
adc
scas
faddp
shlb
repz
fwait
int
mov
sahf
lods
push
cmp
mov
jecxz
decl
and
shl
mov
into
adc
pop
or
iret
mov
in
dec
in
sub
xor
fadds
add
add
jmp
in
push
sub
lock
add
add
add
movd
mov
xor
or
mov
xchg
pop
jo
loope
lds
mov
out
and
xchg
jg
js
jne
int3
pushf
cmp
sub
cmp
icebp
jns
push
lahf
jg
push
inc
jo
cmp
shll
push
xor
jp
push
xchg
push
add
or
sub
and
mov
fstpl
sub
cmp
movsl
aam
xchg
pushl
mov
fists
jo
jnp
or
push
bound
inc
repnz
loop
jmp
roll
push
or
ret
cbtw
xchg
or
jne
push
in
gs
xorb
push
aam
mov
insb
fisttpl
mov
cmp
call
pop
mov
ret
inc
adc
jmp
les
test
inc
pop
jp
pop
push
and
and
mov
lcall
out
add
add
add
rcr
xor
shlb
inc
inc
imul
inc
add
dec
pop
out
cwtl
dec
loop
push
dec
cmp
cmpsb
out
jo
cmp
das
pop
call
daa
fcmove
adc
sbb
xor
lcall
fstps
mov
sbb
scas
xchg
sub
mov
jecxz
loopne
push
mov
out
cmpsl
lret
imul
add
xchg
lret
sar
sub
sbb
sti
jne
push
adc
and
or
mov
push
popa
repnz
xchg
sub
mov
mov
loop
mov
xor
xorb
or
push
xchg
cs
add
scas
sub
mov
jp
test
lahf
leave
add
jbe
aas
inc
inc
ds
pop
push
mov
outsb
fstpt
mov
cmpsl
scas
dec
test
popa
mov
add
inc
ror
lock
jnp
xor
xchg
add
add
add
add
enter
mov
adc
inc
cwtl
subb
ljmp
jno
inc
aas
daa
lds
cwtl
mov
fwait
and
mov
sarb
cmp
and
sbb
sbb
or
mov
sahf
sbb
pop
push
stos
test
xor
jb
jae
cwtl
loopne
outsl
add
mov
sbb
pop
in
inc
mov
mov
bound
jg
mov
clc
movntps
sub
add
sub
out
jno
int3
bound
push
pop
mov
mov
add
loop
mov
in
cld
or
cli
loopne
mov
lock
imull
mov
fs
cld
jp
mov
xchg
mov
mov
inc
xchg
jo
test
or
mov
jmp
xor
movsb
xchg
mov
add
pop
imul
lahf
movl
scas
jo
jne
add
add
repz
fisubs
mov
add
add
add
push
and
pop
fs
mov
jns
outsb
dec
sub
and
lahf
inc
or
jmp
imul
jl
mov
or
clc
mov
push
insl
and
mov
in
and
xor
clc
addr16
pop
mov
push
pop
icebp
js
push
cmc
call
std
mov
cmp
xor
aas
iret
and
fldenv
pop
adc
mov
in
sbb
sbbb
scas
adc
in
scas
movsl
lret
hlt
mov
mov
aad
push
bound
addl
push
adc
xchg
xchg
mov
xchg
pop
fcmovnbe
pop
das
shll
sbb
mov
mov
cmc
dec
xor
cmp
je
scas
ljmp
jl
dec
push
into
fwait
ds
arpl
push
pop
pop
adc
xchg
or
mov
cmp
neg
popl
sbb
pop
out
sbb
call
repnz
add
add
jo
push
clc
add
ljmp
push
push
mov
mov
mov
jo
adc
dec
xor
test
dec
sbb
pop
test
les
lock
push
pop
jnp
push
cwtl
push
sub
fcmovu
iret
adc
pop
cmp
push
jge
jle
mov
fiaddl
mov
inc
push
jle
scas
in
popa
out
adc
adc
hlt
ds
hlt
mov
rcr
xor
mov
pop
mov
pop
stc
fwait
push
inc
shrb
daa
sub
data16
fistps
mov
inc
mov
add
outsl
mov
add
jecxz
inc
push
and
cld
cmpb
and
dec
std
gs
mov
xchg
push
out
nop
xor
shll
fcom
fldl
jae
shrl
cmc
scas
sub
mov
repz
add
add
mov
scas
stos
xor
out
icebp
push
outsb
add
sti
inc
add
jge
mov
push
adc
aam
pop
sub
aad
xchg
dec
and
sbb
push
adc
movl
and
loop
call
fisubrl
push
push
cltd
mov
js
roll
mov
mov
movsl
les
aad
push
aaa
inc
les
and
ret
jne
fsubl
jle
popf
aad
pusha
test
cltd
mov
mov
and
or
icebp
xor
and
mov
sub
call
xchg
lea
shl
jl
pop
lcall
leave
mov
and
subb
testl
sarb
movsl
shr
inc
cmp
mov
jle
mov
out
xchg
pop
mov
pop
or
xlat
push
aas
adc
mov
lods
mov
pusha
cmp
pop
dec
lret
pusha
rorb
cmpsb
mov
out
addr16
add
add
add
push
mov
cli
sub
aad
shlb
jnp
jae
jne
adc
lahf
sbb
cmp
mov
cmp
mov
inc
popf
mov
xor
jns
ja
pop
mov
int3
inc
mov
pop
push
faddl
jns
jo
inc
push
cmp
jno
aaa
push
imul
out
movsb
adc
mov
mov
cmp
jno
imul
daa
outsb
adc
fdivrs
mov
xchg
out
push
mov
lods
push
subl
int3
cli
sbb
mov
test
push
jne
popa
sbb
leave
add
aad
dec
mov
mov
adc
bound
orl
test
iret
out
cmp
push
sub
mov
clc
popa
mov
andl
dec
cld
mov
mov
shlb
add
mov
xor
fistpl
mov
add
add
gs
testl
xchg
fwait
pushf
addr16
add
add
add
sbb
mov
and
je
frstor
pop
scas
loop
dec
fimuls
xor
inc
dec
sub
loop
jecxz
fyl2xp1
mov
loop
xchg
xor
into
inc
out
jns
cmp
scas
or
push
fstl
outsb
das
xchg
lods
cmp
dec
push
data16
xchg
cmpsl
ja
aad
inc
and
outsb
popf
repnz
shrb
xchg
jnp
aam
cmp
adc
in
aas
adc
faddl
sbb
dec
xor
jmp
jnp
rcll
adc
popf
movl
add
fdivs
es
push
cmp
cmp
mov
and
add
dec
stc
out
and
lds
or
push
js
call
mov
mov
les
mov
sub
sahf
adc
popf
xchg
push
xchg
ljmp
inc
dec
and
daa
lahf
mov
pop
das
inc
loopne
cmp
add
add
add
jns
jecxz
cmpsl
or
fwait
mov
sub
mov
in
jae
cmpsl
shrb
pop
mov
add
xor
sbb
lret
add
mov
sub
xor
aaa
and
push
mov
enter
pop
daa
inc
sbb
out
jmp
out
div
incb
mov
pushf
or
out
out
cmpsb
dec
xor
xchg
jp
outsb
xor
xor
fmuls
jecxz
rolb
aad
jbe
into
repnz
dec
jmp
rorb
adc
fucomp
popf
mov
xchg
pop
cli
rcr
dec
iret
les
in
loop
xor
fisttpl
call
cmp
push
cli
mov
push
mov
ret
out
ljmp
mov
jae
push
and
sbb
adcb
jl
ret
sub
inc
pushf
ja
inc
addr16
mov
fucomi
xor
cwtl
mov
testl
add
out
mov
mov
lock
jb
out
xchg
fstpt
in
scas
push
lds
pop
push
sbb
xor
mov
fisubrs
xchg
adc
jo
sti
cmp
mov
lea
test
stos
jmp
sbb
fisubrl
es
push
cmp
mov
pop
aam
sti
dec
insb
ret
mov
int3
jnp
dec
fisubs
inc
loopne
mov
stos
sarl
xor
inc
mov
xor
dec
sbb
loopne
andl
cmp
push
cwtl
cmp
fsubrl
imulb
inc
pop
fstpt
push
push
push
xchg
jae
gs
cmc
nop
lds
lret
inc
nop
push
mov
pop
xchg
out
and
add
mov
push
stc
lret
lcall
mull
pop
xchg
out
cli
push
add
call
arpl
scas
pop
jbe
push
inc
pop
jns
aas
loopne
sub
std
mov
addr16
add
add
add
push
jns
inc
mov
das
dec
aaa
xchg
pop
sbb
push
imul
dec
push
mov
push
out
call
in
xchg
pop
mov
adc
fwait
inc
subb
fstpl
jno
jo
add
adc
add
arpl
cmpsl
fs
adc
pop
mov
aas
push
outsb
movsb
dec
inc
push
sbb
mov
mov
andb
add
sub
nop
ja
lea
and
and
fwait
mov
fmull
jle
test
or
popa
or
in
jae
enter
add
dec
jns
clc
jp
cwtl
sub
and
pop
cmpl
rcrl
popf
inc
notl
xchg
adc
in
cmpsb
loopne
push
fmuls
cli
push
lahf
dec
mov
xchg
push
pop
cmp
mov
and
sahf
jbe
xor
jo
out
mov
insl
adc
jl
add
add
jnp
mov
fdivrl
add
add
add
jecxz
mov
adc
arpl
lcall
or
insb
ja
add
insb
pushl
in
sub
or
pop
cmp
inc
pop
testb
call
mov
cmp
sbbl
sbb
sti
pop
xchg
inc
xchg
pop
movsb
lcall
xchg
fisubrl
fisttpll
add
ljmp
mov
ljmp
push
jnp
add
xlat
aas
arpl
pop
lahf
daa
mov
subl
cmp
test
pop
xor
cmp
ret
aam
mov
push
jl
lds
jmp
mov
push
mov
ret
push
or
lret
inc
jo
and
lds
pop
in
mov
mov
ret
push
scas
fiadds
xor
filds
out
mov
push
adc
cwtl
adc
add
imul
gs
iret
fidivs
cli
add
add
add
adc
push
adc
cmp
bound
ficoms
jl
aam
and
pushf
or
mov
adc
subb
mov
lds
sub
int
cmp
out
mov
push
push
aad
shrl
jecxz
mov
mov
in
arpl
cmp
movsl
sahf
xacquire
outsl
das
je
dec
push
stc
sub
fdivs
cmp
loop
bndstx
jne
and
push
or
cmp
lret
xor
and
cmp
ret
imull
in
out
ret
xchg
into
xchg
ret
pop
or
mov
sub
sti
mov
push
lods
fwait
scas
loop
addr16
and
dec
dec
lods
dec
jmp
insb
aaa
lods
dec
aam
push
stos
lret
addl
sub
mov
int3
in
test
push
divb
test
adc
pop
leave
aaa
mov
xchg
mov
idivl
roll
add
add
add
arpl
mov
pop
inc
jb
sbb
fiaddl
cld
insb
xchg
addr16
scas
cmpsl
xchg
cmpsb
push
bnd
dec
outsb
mov
push
decl
xor
scas
sbb
sbb
mov
cltd
outsl
dec
push
outsl
pusha
sub
imul
and
ljmp
cmpsl
mov
or
je
xchg
jl
insl
xor
xor
push
sbb
mov
inc
mull
aaa
std
gs
jnp
outsl
call
data16
test
outsb
inc
dec
sbb
xchg
add
insb
stos
cmp
xor
ljmp
mov
scas
push
or
test
test
xchg
movsb
mov
mov
int
pusha
cmp
loop
int3
imul
aad
in
dec
xchg
movl
call
lock
mov
addr16
leave
xchg
rcl
pop
hlt
mov
ret
sbb
add
mov
fisubl
xchg
cmp
add
add
add
je
xor
test
inc
outsb
mov
lds
fst
pop
ljmp
pusha
push
fldcw
sbb
dec
push
mov
rcll
fucomi
int
add
xchg
loop
or
cmp
fisttpll
mov
add
push
popf
xor
aas
inc
fsubp
mov
decb
inc
hlt
push
jge
sbb
sub
xchg
call
movb
pop
mov
aaa
adc
mov
ss
jb
outsb
xor
push
mov
jle
jecxz
fs
fucomp
out
push
jge
mov
in
negb
scas
mov
push
pop
add
or
insl
xor
jns
inc
add
outsb
insl
jl
push
lret
aad
rcl
ss
sub
and
adc
adc
jge
lods
push
lds
pop
xor
mov
xor
push
add
jmp
imul
lahf
repnz
dec
cmpsl
dec
das
addr16
add
add
add
push
cs
lods
ljmp
mov
xchg
xor
addr16
in
sub
lcall
push
test
enter
jle
cmc
pop
loop
or
pop
inc
and
or
xchg
leave
mulps
dec
repz
jg
xor
shrl
pop
popa
xchg
shrl
mov
pop
cmpsl
sub
push
jecxz
repz
dec
in
and
sbb
dec
adc
add
aam
pop
lret
leave
out
mov
rol
jecxz
loop
lods
fnstcw
jae
xlat
adc
in
pop
in
mov
stos
loopne
out
mov
imul
into
xlat
jnp
and
loope
inc
pushf
push
xchg
sbb
sub
sbb
sub
shrl
loope
loop
enter
xorl
mov
add
pop
inc
mov
lds
xchg
dec
cli
js
push
movsb
and
lock
or
xchg
dec
bound
aas
sbb
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
sarl
sub
incb
add
add
add
mov
or
push
sbb
push
adc
in
popf
cmp
fidivs
dec
cmp
pop
stc
out
mov
cmpsb
iret
jns
push
insl
sbb
pop
fldenv
hlt
aas
mov
loopne
cmp
in
out
jae
divl
aad
inc
inc
jno
xorb
inc
imul
and
cwtl
mov
jne
stc
mov
test
dec
mov
insb
pushl
xchg
test
sub
add
repnz
dec
fidivrl
jle
pop
or
ret
mov
or
ret
cli
test
sub
xchg
icebp
lahf
xlat
cmpsb
pop
int
xor
pop
and
out
jp
jecxz
faddl
in
cmp
and
js
in
stos
mov
cmc
jecxz
mov
or
imul
into
daa
cltd
mov
push
add
int
xchg
xchg
mov
add
das
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
jne
cmp
mov
cmpsb
outsl
mov
sbb
jecxz
enter
addr16
push
hlt
pop
sub
cmp
negl
and
arpl
add
sbb
das
pop
and
mov
scas
adc
fists
xchg
mov
test
mov
mov
sub
adc
adc
popa
pusha
loopne
hlt
xchg
cmc
and
mov
push
lock
sbb
add
add
icebp
jno
mov
jmp
repz
xchg
dec
cmp
jo
sbb
add
mov
mov
add
pop
icebp
subl
or
jb
xor
add
rcrb
iret
push
mov
mov
mov
sub
rcll
shll
lret
gs
into
scas
gs
in
pop
imul
jnp
jecxz
add
add
aam
int
aaa
das
aam
push
add
add
add
push
mov
mov
aaa
add
daa
inc
or
repnz
pop
fistpl
or
shll
mov
pop
or
outsl
aas
lcall
push
gs
subb
lret
mov
push
xchg
outsb
sbb
dec
inc
stc
push
jle
call
adc
pusha
lcall
outsl
out
mov
xor
into
int
stos
insb
std
add
mov
addl
adc
mov
hlt
stos
arpl
xchg
mov
pop
repnz
les
mov
rcl
lock
adc
mov
mov
nop
jbe
loopne
pushf
lahf
add
xchg
and
xchg
mov
or
ljmp
mov
add
sbb
pop
cmp
mov
jecxz
cmp
decl
and
stos
mov
pop
arpl
addr16
sub
push
repz
xor
add
add
add
shll
sbb
jb
mov
mov
loopne
fiadds
sbb
jno
iret
and
aas
mov
imul
inc
ljmp
adc
push
xchg
mov
mov
cwtl
cmpsb
add
mov
add
ss
jecxz
mov
bound
xor
cmc
xor
jg
fstps
xchg
movsl
fidivrs
test
or
dec
mov
cltd
daa
jo
xor
sub
call
cmpsb
mov
fdivs
inc
js
arpl
hlt
loope
sbb
shr
rclb
xchg
in
in
pop
inc
scas
xchg
cmpsl
stos
fwait
jl
mov
mov
in
push
shrb
adc
fdivs
or
out
stos
sub
cs
sub
int3
into
mov
bnd
out
lret
push
sbb
daa
addb
outsl
mov
mov
push
pop
xchg
in
ds
mov
cmp
cmpsl
and
icebp
jae
idiv
cmp
out
cmp
cmp
pushl
xchg
xor
int
dec
add
add
add
add
mov
hlt
xor
pop
arpl
lods
daa
mov
add
mov
mov
les
mov
dec
jno
ret
push
divb
test
pop
push
mov
mov
push
xor
adc
or
inc
pop
sub
xor
sub
jae
stc
or
pusha
inc
hlt
xchg
xchg
ret
into
stos
cwtl
pusha
and
lahf
test
ljmp
jp
fmul
xorb
rclb
leave
mov
sbb
das
push
adc
jb
jb
cltd
stos
bound
push
in
mov
jg
adc
cwtl
mov
sbb
popf
lcall
cwtl
mov
pop
cld
stos
jmp
call
push
movsl
sub
mov
xchg
pop
loop
pop
sub
shll
xor
jno
adc
push
pop
pop
add
pop
shrl
mov
sahf
sub
repz
mov
adc
test
push
scas
mov
mov
add
add
add
add
scas
adc
stos
pop
int
shrl
bound
icebp
xchg
jl
pop
mov
lret
mov
mov
insl
mov
lods
mov
jnp
notl
push
mov
and
out
out
mov
mov
popl
sub
xor
pop
cli
mov
ljmp
jmp
and
xlat
push
cmp
push
pop
xchg
push
pop
dec
repz
hlt
xchg
lret
mov
mov
dec
arpl
imul
mov
or
sbb
inc
push
mov
mov
dec
xor
xor
mov
dec
fstpt
incb
and
cmp
pop
jo
xor
adc
push
iret
sub
push
arpl
jbe
add
pop
push
add
jmp
add
aaa
xchg
and
movsl
mov
mov
mov
ss
add
jns
cmpsb
pop
and
cmpsb
repz
iret
mov
addl
push
lcall
and
jo
push
dec
sti
xchg
mov
push
add
xchg
sub
cmp
sahf
test
mov
arpl
lods
aas
call
fildl
sub
jg
loopne
jns
inc
mov
out
push
push
mov
notb
lds
out
jae
in
and
cltd
mov
aas
mov
lret
sub
fisttps
mov
leave
jbe
cs
incl
fwait
rcrl
ficomps
sti
insb
shlb
inc
xchg
pop
xchg
and
xor
jle
xorl
mov
rcrb
xor
mulb
arpl
mov
add
gs
fisubs
mov
jge
xor
lret
jnp
cmpsl
pop
lods
push
sub
test
add
add
mov
push
jg
mov
jne
or
addr16
add
std
fs
and
lods
rcr
aam
dec
sahf
xchg
add
mov
cltd
lcall
repnz
mov
in
cmp
leave
lret
das
xchg
push
xor
push
test
push
out
mov
lea
cs
ret
scas
or
dec
call
addr16
cmp
insb
mov
sub
xchg
in
ds
inc
cmp
jge
xchg
mov
mov
push
jae
add
fcomps
sbb
adc
iret
sub
cmc
inc
jle
lock
or
inc
nop
popa
lret
xor
aad
add
mov
jb
jl
cmpsl
sbb
cmp
mov
movsb
pop
hlt
ret
cld
imul
dec
jl
cmp
jg
js
push
in
jl
lret
scas
mov
and
fld
cmp
aaa
xor
rcr
mov
std
push
clc
inc
stc
mov
mov
lods
imul
and
ljmp
add
xor
imul
aad
xchg
pop
adc
aad
dec
adc
lret
jb
mov
in
jmp
out
jae
lock
mov
inc
movsb
xchg
push
mov
stos
out
mov
rorl
jp
rol
sub
imulb
mov
jo
out
cwtl
insb
mov
pop
cmp
testb
fstpt
js
jbe
insb
stc
lods
test
push
dec
cmpsb
les
xchg
sbb
sbb
pop
test
hlt
push
in
or
pop
mov
jno
lds
or
adc
mov
sub
pop
arpl
inc
inc
shlb
sub
xlat
jo
outsb
add
test
fisubrs
test
faddl
shll
jg
imul
add
mov
cmp
or
or
addr16
add
add
add
xor
add
push
push
iret
lea
add
mov
pop
fbld
in
lea
dec
add
jl
insb
dec
ljmp
les
ss
xor
aaa
pop
fwait
jl
pop
inc
jecxz
aas
push
jne
mov
rorl
sti
ret
dec
aas
mov
push
jle
sub
je
ja
sti
add
push
orl
adc
mov
push
sbb
out
fidivrs
xchg
mov
add
pop
sbb
xchg
cmpsb
mov
sub
in
test
jl
inc
sti
sub
ret
mov
push
lods
out
jecxz
mov
push
in
pop
cs
mov
mov
popa
jecxz
imul
sub
add
mov
les
ret
cmpl
mov
cmc
cli
stos
jae
pop
sub
popf
andb
sbb
fdiv
roll
repz
jne
out
sbb
add
add
hlt
fbld
xor
dec
or
add
add
add
loopne
sbb
fildl
xchg
or
into
stos
cwtl
pop
push
sub
addr16
je
cmpl
shlb
inc
into
pop
push
cs
jecxz
push
adc
movsb
or
aaa
icebp
push
outsb
adc
js
mov
fwait
jne
mov
inc
dec
pushf
add
data16
bound
mov
dec
imull
mov
pop
sub
sti
adc
inc
sahf
test
icebp
or
xor
mov
sbb
mov
insl
sbb
mov
inc
push
pop
outsl
or
scas
ficoml
mov
xchg
dec
fwait
and
imul
pop
sub
inc
dec
cltd
inc
test
es
jecxz
shrl
stos
rolb
cmp
inc
mov
test
fstps
sbb
push
out
mov
imul
push
add
mull
pop
dec
enter
cli
dec
adc
mov
into
fwait
add
mov
imul
add
add
add
jmp
aas
xor
fcmovne
xchg
and
adc
push
das
in
aam
add
and
fwait
xchg
xchg
in
jp
xlat
push
pop
leave
hlt
popf
ficomps
test
xchg
adc
jg
jns
jne
inc
cmp
data16
dec
stc
je
pop
cmpl
pop
aam
lret
aad
ds
fs
mov
lods
out
jns
or
fildl
and
dec
in
push
stc
std
sahf
xchg
popa
push
add
pusha
mov
mov
xor
inc
sub
lds
push
ds
je
mov
pop
stos
mov
push
pop
leave
testb
xchg
pop
lds
filds
pcmpgtb
mov
mov
xchg
pop
mov
xlat
sub
xor
sub
jno,pn
popa
movsb
repz
xchg
insb
lcall
test
jl
test
out
mov
pop
sarb
in
ljmp
add
add
push
subl
mov
arpl
or
xchg
mov
aam
sub
pop
int
fucomp
sub
sbb
int3
mov
int
shll
push
cmpsb
jno
xchg
mov
jmp
loop
dec
cmc
pop
push
std
sub
imul
fdiv
in
jge
push
outsb
push
les
out
int
xchg
sub
sub
jle
cmp
mov
pop
insb
sahf
pop
int3
out
mov
add
xlat
mov
insb
lcall
mov
adc
mov
cmp
ret
or
cmp
in
dec
jo
std
push
dec
aas
xchg
mov
cs
xchg
out
inc
sub
or
cld
mov
adc
lock
jecxz
cmp
mov
pop
cltd
out
xchg
mov
std
fdivs
xchg
jo
pop
push
push
add
inc
out
aas
mov
shrb
add
add
add
adc
xchg
mov
cmp
pop
in
out
rol
mov
mov
lds
repnz
xor
in
repnz
aam
out
add
mov
and
shlb
cld
fldt
mov
mov
negb
icebp
pop
notb
jne
mov
mov
fwait
or
sbb
cmpsb
jecxz
mov
rorl
jnp
fs
dec
inc
sbb
daa
call
mov
repnz
xor
mov
data16
mov
or
aaa
out
ds
popf
into
repz
loop
lcall
sahf
fisubs
incb
hlt
cwtl
stos
lcall
mov
test
aas
mov
sarl
xlat
sbb
mov
lret
arpl
ds
bound
sbb
imul
jae
outsb
adc
jmp
add
add
bnd
dec
leave
and
inc
push
pushf
addr16
add
add
add
movsl
cwtl
push
add
mov
xchg
pop
popa
fs
jmp
adc
inc
inc
leave
sbb
out
adc
cmp
call
lods
dec
pushf
adc
mov
in
int
mov
rolb
adc
repz
pop
test
sub
fists
lds
stos
cmc
sarb
push
popa
mov
scas
xchg
mov
sti
xor
dec
mov
dec
aam
into
sahf
cmpsl
movsb
xchg
in
or
cmp
adcb
mov
js
adc
aam
lea
call
and
mov
cli
out
stc
fstl
inc
push
fxch
push
in
scas
adc
loope
inc
cli
adc
add
xchg
outsl
adcb
push
adc
inc
les
mov
cmp
repnz
sahf
mov
fdivs
stos
imul
leave
adc
sbb
in
out
ja
filds
jmp
add
add
add
test
jg
sarl
sub
lock
rcrl
inc
jl
xor
pop
mov
loopne
jo
cwtl
jmp
and
gs
jp
adc
inc
les
jns
pop
xchg
push
test
in
cmp
fmul
test
push
sarb
pop
dec
in
lods
icebp
iret
stos
xlat
mov
push
idivl
aam
jle
enter
pop
xchg
aaa
enter
icebp
iret
mov
subb
hlt
add
mov
dec
pop
xor
inc
mov
fdivs
shll
adc
fisttpll
cwtl
adc
xor
loop
add
mov
bound
dec
in
fistps
dec
xchg
fadd
xchg
int3
cld
jbe
outsb
testl
rcl
jo
cmc
push
pop
cmp
cli
mov
sbb
insl
mov
cmp
iret
mov
imul
outsl
xlat
aam
loopne
mov
cmp
pushf
call
add
pop
in
inc
push
or
sub
addr16
add
add
add
enter
mov
push
sub
pusha
cld
jl
jb
js
adc
mov
xchg
inc
push
es
gs
cltd
jne
pop
call
pop
je
addl
movsb
or
jle
int
inc
add
shr
cmp
outsb
mov
lret
ret
pushf
mov
rclb
out
sbb
sbb
lock
mov
into
push
int
xchg
das
loop
jnp
cmp
lods
lock
pop
xchg
cmpsb
popa
adc
loop
xor
pop
add
rolb
je
xor
outsb
mov
loope
sti
and
sbb
or
jne
popl
add
push
popf
cmp
sbb
mov
aaa
cwtl
iret
cmpsl
arpl
push
cmp
fwait
pop
in
adc
xchg
out
sbb
inc
rol
sbbb
adc
cmp
add
jg
neg
pop
daa
inc
pop
sub
add
add
add
dec
mov
adc
gs
test
dec
test
xor
cmp
jg
jo
fidivs
jns
cltd
inc
stc
jmp
mov
int3
jl
test
sub
fisubl
jno
lret
mov
shlb
or
sub
pop
call
repz
lret
push
movsb
mov
mov
jl
enter
mov
les
xor
pusha
iret
mov
jg
test
fidivl
xchg
fisttpll
daa
mov
sahf
les
inc
pusha
pop
arpl
outsl
test
movsb
cmc
into
push
add
fmul
bound
dec
dec
stos
aad
pop
pop
ret
push
xor
mov
mov
jg
inc
out
loope
aad
scas
cs
mov
pop
lret
lret
fidivs
lret
mov
repz
fimuls
mov
cmp
add
hlt
out
add
add
add
sti
jg
cmp
je
frstor
add
add
add
jo
mov
and
and
xchg
dec
movsb
cmc
out
lcall
or
dec
sbb
mov
cwtl
xor
movsb
mov
out
ret
jno
fadds
in
inc
rol
cmpsl
xchg
repz
pop
lods
adc
cld
jle
clc
dec
jns
es
pop
loopne
imul
dec
sbb
sub
lcall
mov
outsl
pop
jae
adc
test
pushf
cmp
adc
dec
int
ljmp
cmpsb
std
mov
or
stos
cmpsb
push
loopne
addl
or
xor
les
mov
aad
xor
ljmp
lea
mov
sar
imul
pop
push
xchg
mov
mov
cmp
ljmp
mov
lahf
and
lods
push
mov
jb
jb
cmp
mov
and
stos
push
pop
filds
add
add
jnp
fstp
fcompl
push
les
add
add
add
push
das
rcl
dec
sub
fwait
cmp
mov
sbb
test
sub
jnp
aam
mov
push
nop
cli
ss
xor
and
loopne
cmc
or
mov
lahf
imul
stc
das
cmp
xchg
and
mov
mov
call
adc
pop
adc
into
mov
push
xor
sbb
add
js
out
aas
in
inc
jb
sbb
int3
ss
sbb
and
jae
add
lods
movsb
inc
lcall
cmp
and
jle
push
fs
sub
pop
loope
scas
or
or
inc
jg
xorl
ja
insb
push
cs
sbb
sub
daa
and
xchg
pop
mov
or
daa
xor
les
pop
jmp
add
pop
or
pop
pop
call
mov
jno
std
outsl
mov
add
sub
add
add
add
xlat
add
sbb
dec
xchg
lahf
cmpsb
adc
jg
aad
mov
lea
insl
push
imul
xchg
sub
inc
push
xor
cmp
aas
pop
adc
sub
movsb
lahf
pop
inc
push
inc
fwait
sahf
loope
stos
adc
outsl
push
mov
call
mov
orl
js
push
jno
pop
mov
mov
or
push
addr16
mov
out
cltd
xchg
adc
inc
cmpsl
pop
jge
cmp
cmp
mov
sahf
push
lods
mov
dec
push
dec
mov
inc
mov
mov
jg
fdivs
mov
movsl
sbb
mov
dec
or
inc
mov
addr16
mov
imul
mov
rol
adc
in
pop
or
or
stos
sub
mov
dec
addr16
add
cli
cmc
in
pop
mov
pop
push
jno
cmp
mov
and
add
add
jmp
fnstsw
adc
add
add
add
lret
dec
jnp
rcl
mov
outsl
cli
sbbb
mov
jle
ljmp
adc
fcomip
push
out
cli
fwait
jo
cmp
pop
into
fisttpl
movsb
pop
mov
sahf
fs
pop
push
fisubrs
jl
lahf
daa
adc
jle
cwtl
dec
shll
and
fsubrs
js,pt
xchg
aad
arpl
pop
scas
xor
dec
leave
mov
mov
adc
push
inc
aas
and
sub
add
jg
lahf
pop
mov
dec
sub
dec
imul
xchg
imul
les
ljmp
cmp
push
jbe
cmc
enter
ret
mov
pop
fs
test
enter
push
loopne
mov
scas
lock
lahf
rcrl
ret
fadds
lret
scas
pop
orl
add
add
xor
test
test
lret
add
add
add
js
in
jle
mov
mov
mov
into
aad
inc
lods
ja
pop
outsb
sbb
hlt
lds
xorl
add
inc
xor
ret
dec
outsb
xchg
xor
or
sahf
dec
mov
scas
out
push
mov
ret
leave
inc
push
cmpsl
xchg
push
add
fidivrs
lods
popf
dec
ds
jns
inc
cmp
mov
call
cmc
or
push
daa
and
mov
les
dec
jns
out
outsl
hlt
mov
sub
sbb
pop
loopne
sbb
dec
pop
fisttpll
pop
mov
push
push
xchg
cmpsl
roll
stc
jmp
out
sahf
mov
xchg
pop
inc
aad
cmp
mov
inc
jne
push
jge
mov
adc
jp
cmp
call
xchg
das
gs
add
and
push
loopne
movsb
push
mov
jnp
dec
cli
inc
jg
int
xchg
lods
or
rcl
addr16
add
in
fstpt
or
loope
pop
bound
arpl
sbb
insl
imul
movsl
cmp
inc
inc
popa
repnz
aam
mov
pushf
cli
pop
xor
fdivs
cmp
sub
push
fwait
mov
xchg
adc
int
inc
loopne
jle
setae
lds
or
or
sbb
jg
mulb
test
pusha
popf
jb
inc
mov
sbbb
ss
outsb
hlt
sub
decl
notb
arpl
adc
jns
aas
shl
jne
lret
xor
xor
add
inc
xor
sbb
mov
lds
pop
in
mov
push
pusha
jno
jne
push
jno
jns
xchg
ds
mov
cmpsb
testl
cltd
pop
cmpsb
fstps
mov
and
loop
xchg
cmp
mov
and
enter
jne
lock
std
cmp
jle
fistpll
ss
aad
inc
addr16
add
add
add
pushf
mov
cs
fsts
cmp
and
int
jle
mov
push
pusha
sub
mov
dec
and
sahf
test
lock
and
adc
fnstsw
dec
ficoms
push
jg
js
or
sbb
mov
push
xrelease
cmpsb
cmpsb
lcall
shl
pushf
xchg
arpl
es
shrl
out
inc
pop
test
sbb
out
iret
inc
dec
out
rcll
add
out
and
mov
mov
dec
inc
add
lcall
dec
adc
js
aam
loop
fdivl
mov
cld
mov
fildll
or
sub
and
mov
push
jecxz
arpl
push
call
push
outsb
aad
pop
cmpsb
fisubrl
mov
sbb
lods
mov
sbb
out
cmp
xchg
pop
lds
xlat
ficompl
inc
add
mov
addr16
add
add
add
xorb
loop
adc
push
adc
call
mov
rolb
xchg
in
sub
call
test
mov
sub
or
ficoml
xchg
adcl
add
dec
xchg
rcrl
insb
mov
jnp
call
cmpsb
test
in
sets
pop
jmp
pop
jnp
pop
add
adc
adc
lahf
sti
es
dec
stos
push
push
add
dec
or
sahf
loope
sub
enter
fsubrl
push
cmc
mov
mov
inc
mov
and
dec
add
dec
xor
cmp
sahf
popa
inc
fcoms
lahf
jae
mov
mov
cmp
les
xor
jg
jge
dec
mov
lods
push
push
int
jmp
das
es
xchg
xchg
jbe
cmp
jne
lock
rorb
add
sub
iret
outsb
jmp
push
test
push
mov
add
add
add
lahf
add
loopne
inc
inc
dec
mov
imull
test
leave
das
xor
push
aas
dec
xor
out
pop
sub
and
ftst
dec
roll
sbb
cltd
mov
stos
outsl
pop
or
inc
lahf
inc
sbbb
adc
mov
inc
sbb
sub
jns
je
push
shll
jp
aam
mov
mov
cmc
mov
std
mov
push
cmpsb
add
jo
add
popa
or
lcall
xor
mov
add
pop
dec
pop
xchg
cs
mov
mov
stc
push
bound
int3
mov
sub
shlb
insb
dec
mov
mov
push
mov
movsb
xchg
or
pop
in
arpl
pop
and
sahf
ja
mov
ds
ss
fcoms
sbb
std
sbb
stc
cld
or
push
pop
sub
sbb
add
add
add
fisttpll
and
jmp
mov
lds
imul
stos
mov
repnz
mov
fnstsw
lcall
pop
leave
popaw
inc
popa
rclb
mov
or
movsw
dec
push
or
cltd
inc
imul
stc
xor
es
lret
pop
daa
or
add
sub
adc
jae
sbb
enter
in
add
nop
out
dec
pop
xor
andl
mov
ja
push
stc
in
mov
xor
ljmp
adc
pop
js
in
push
pop
jge
in
and
movsl
push
fistpl
inc
inc
xor
jmp
pop
loop
lcall
and
lret
cltd
shrb
bound
outsb
push
je
cmpsl
out
sbb
add
sahf
inc
imul
lea
adc
mov
mov
add
negl
adc
pop
xchg
cmpsb
aaa
mov
add
add
add
std
clc
dec
sbb
mov
dec
ljmp
lret
dec
xchg
cmp
mov
icebp
sbb
mov
mov
inc
mov
outsl
cmpsb
mov
into
push
mov
push
inc
jne
fimull
cs
lock
jo
inc
mov
pusha
sub
xor
pop
mov
sub
push
inc
js
cmpb
call
popa
push
mov
jb
jmp
xchg
jo
lret
mov
iret
mov
push
dec
mov
loopne
out
mov
test
mov
sbb
les
xlat
lods
loopne
jbe
fcomps
push
dec
cli
mov
dec
addr16
int
xchg
add
enter
sbb
sahf
addl
and
push
mov
lret
xchg
adc
sub
inc
dec
mov
lret
test
add
mov
dec
pushl
daa
scas
push
sbb
add
add
add
mov
xchg
in
pop
cmp
nop
xchg
shll
lods
dec
mov
inc
sbb
insb
push
cmp
jl
jl
xchg
inc
mov
xor
mov
addl
cmpsb
xchg
sbb
jno
scas
and
out
ret
pop
pop
mov
sub
dec
and
into
lds
mov
test
in
insl
inc
dec
pusha
out
pop
fdivr
jecxz
cmp
cmp
hlt
aaa
push
add
and
sbb
xor
adc
cld
insb
in
fucom
xchg
mov
rorl
inc
hlt
out
loopne
ljmp
popa
mov
inc
push
arpl
dec
sbb
dec
stos
icebp
or
cltd
cld
xor
mov
mov
add
ficompl
jae
mov
dec
stos
add
inc
and
outsl
lock
mov
fs
flds
aaa
subl
jge
mov
push
repz
int
push
repnz
or
pop
sub
inc
ja
pop
aas
dec
push
mov
addr16
add
add
add
das
pop
lcall
pop
jno
xor
adc
arpl
fisubrs
dec
in
out
add
sub
add
cmc
inc
jb
mov
outsl
stos
jg
and
out
test
fwait
in
jp
inc
xchg
cmc
lods
addr16
pop
dec
scas
notl
pop
cmp
add
and
mov
mov
cli
mov
adc
sbbl
ja
mov
cmp
or
push
xor
fmull
cmpsb
orl
popl
insl
shll
insl
push
and
outsl
aaa
jg
aaa
mov
push
shll
mov
cmc
jb
mov
and
pop
jle
lds
jbe
mov
xor
test
xor
jno
arpl
sub
cwtl
dec
jge
push
push
scas
aam
jmp
pop
stos
xchg
in
test
sbb
mov
fldl
xor
add
cmp
imul
pop
xor
add
repz
jae
ja
div
mov
cmpsb
mov
sbb
add
adc
jmp
lock
mov
pop
and
or
sub
cmp
fildll
sub
aam
jp
imul
pop
outsb
push
lods
push
rcr
push
mov
add
sahf
or
ss
gs
dec
outsb
xchg
xchg
cli
dec
sub
mov
xor
jae
loopne
fcmovu
fisttpl
sbb
pop
mov
cs
js
std
add
or
jno
aad
imul
in
repnz
cs
dec
adc
jl
pusha
pop
inc
xchg
sbb
xor
call
cmp
adc
or
inc
adc
lahf
jae
cld
inc
mov
pusha
out
mov
outsl
sbb
test
insb
out
xchg
xor
xor
mov
add
out
lods
movsl
mov
cltd
mov
mov
xchg
pop
bound
movsl
stos
pop
xchg
test
xor
cli
std
jg
push
pushf
dec
shlb
add
add
add
push
adc
cmp
cmp
adcb
sub
imul
push
inc
xor
mov
xor
mov
iret
insb
and
lock
imul
ljmp
push
or
dec
into
iret
arpl
in
dec
gs
movsb
and
ds
ret
and
pop
stos
popf
xor
fildll
and
and
jmp
lret
outsl
jp
loop
mov
stos
fs
or
lcall
mov
mov
mov
popf
cltd
inc
add
mov
clc
sub
push
movsb
hlt
xchg
add
shlb
push
sub
xchg
pusha
in
dec
mov
fimuls
sub
movsb
fdivrl
mov
xor
mov
dec
xchg
ffree
in
dec
xor
jno
jecxz
xor
xchg
xchg
ds
cmpsb
bound
add
add
add
mov
std
incl
sbb
pop
jno
mov
pop
add
add
add
loopne
pop
scas
pop
jb
cli
lds
lcall
imul
enter
aaa
mov
and
outsb
mov
add
dec
out
push
xchg
push
push
jg
cwtl
fsts
xor
xchg
out
pop
mov
or
jecxz
enter
sub
push
jbe
xchg
adc
adc
push
and
sbb
nop
jg
into
push
hlt
xlat
pop
les
inc
outsb
mov
adc
movsl
jle
add
lock
and
rcrl
xchg
or
popf
cltd
mov
fisttpl
cmpsl
leave
fnstenv
xchg
lret
shll
sub
push
test
es
mov
imull
dec
pop
enter
jb
rcr
loope
adc
test
test
jae
ret
cld
lock
inc
mov
push
push
addr16
imul
rorl
pop
and
cmpb
xchg
or
add
es
jg
pop
or
xor
and
add
add
add
cmp
pop
shll
iret
popa
and
push
sub
imul
cmp
dec
pop
push
jge
cli
lds
scas
mov
bound
pop
test
jno
sbb
pushf
ljmp
sar
cmp
aas
xor
pop
test
lret
pop
hlt
lea
adc
aad
ret
les
push
enter
mov
inc
pop
out
clc
push
and
addr16
faddl
mov
pop
xor
cmp
cmc
lahf
iret
addr16
loopne
stos
out
and
ret
cmpsb
push
leave
jno
jnp
bound
push
aam
sub
pushf
and
lret
inc
add
lcall
adc
lcall
pop
xchg
imul
ja
sbb
pushf
pop
jge
xor
mov
cmp
insb
sti
add
ret
sbb
push
add
add
or
dec
push
cmp
and
add
add
add
ret
clc
pop
loope,pn
cmpsb
xchg
sahf
jbe
mov
enter
fsub
fbld
adcb
popa
push
pop
outsb
cmp
fcoms
fistps
in
rolb
arpl
enter
push
sbb
aaa
shll
shrl
popf
sub
repz
jmp
popf
push
pop
addr16
pop
push
je
outsb
popf
jmp
sarb
out
inc
ja
push
sub
loopne
setp
jmp
sbb
icebp
jge
hlt
fsubl
repz
mov
cmp
aas
ds
loopne
jg
lock
push
test
jl
fsts
test
cmc
sub
test
inc
adc
mov
in
clc
mov
and
add
xchg
mov
dec
popf
fs
in
arpl
inc
fldt
xchg
xor
mov
xor
and
add
add
add
out
xor
mov
push
pushf
out
arpl
mov
pushf
je
mov
pop
push
sbb
pop
adcb
sbbb
hlt
js
jp
stos
sub
mov
nop
out
and
jg
xchg
out
imulb
pop
pop
push
lgs
std
xor
and
fcmove
fdivs
add
sbb
enter
fs
das
lret
pop
out
pop
adc
jo
add
push
or
das
nop
and
inc
xchg
sbb
mov
and
sub
jbe
mov
mov
mov
mov
jns
test
jecxz
loopne
test
jbe
pop
add
push
adc
and
and
xor
ljmp
flds
sbb
xchg
orb
xchg
sbb
cmp
cmpsb
rolb
add
ficoms
stos
sbb
call
mov
and
add
add
add
pop
mov
dec
out
popa
hlt
out
fsts
fadd
rorb
pop
loope
insl
fists
out
stos
sub
mov
dec
cwtl
sub
test
data16
mov
and
sbb
test
push
pop
daa
dec
add
daa
push
lret
jb
jno
cmp
cmp
repnz
ret
andl
hlt
test
stos
jns
sbb
lret
push
shll
jo
ds
jo
xor
adc
cmp
xor
ffreep
outsb
call
jb
jne
adc
push
loop
icebp
nop
push
pop
sub
mov
pushf
or
cli
add
jmp
mov
popa
mov
pop
dec
sub
sbb
add
adc
hlt
sub
cs
jle
jl
pop
mov
lahf
in
mov
icebp
cmp
mov
sbb
or
cmpsb
add
loope
xchg
in
inc
or
ja
dec
or
pop
mov
out
stos
jge
or
and
add
add
add
pushf
cmp
mov
push
inc
jge
inc
push
cmp
jno
lods
dec
xchg
mov
dec
ss
stos
dec
cmp
notl
cmp
inc
add
shrl
lret
addr16
outsl
flds
out
bound
aam
imul
testb
jl
outsl
das
xlat
icebp
cmp
cld
push
lds
mov
insb
lret
out
and
int
xor
add
aam
pop
in
jp
mov
cmp
sub
sbbl
inc
cmp
aas
jbe
in
push
push
or
add
aaa
cli
pop
outsb
dec
and
insl
sbb
cltd
pop
icebp
hlt
dec
mov
in
lea
cmp
jae
sbb
sub
scas
inc
scas
xor
fsubr
mov
xchg
mov
dec
lds
mov
test
nop
inc
sahf
add
out
mov
daa
cs
xchg
mov
jne
mov
pop
dec
or
out
xchg
iret
push
aas
add
add
addr16
add
faddl
int
push
inc
add
mov
jp
subl
add
jno
enter
dec
out
adc
cwtl
xor
mov
adc
out
popf
mov
xchg
pop
cs
in
pop
sbb
add
ds
and
pop
cwtl
mov
jmp
push
test
iret
cltd
out
stos
sbb
scas
rcll
sti
test
xchg
adc
add
pop
and
test
inc
aad
and
jae
xchg
test
cmp
xchg
sbb
pop
shrb
pop
cmp
mov
push
in
xchg
pushf
aam
mov
mov
test
add
mov
bound
int
pop
xchg
xchg
mov
outsl
pop
cmpsl
lahf
mov
pop
shll
ss
movsb
loopne
or
icebp
sub
lds
mov
jbe
repz
add
aam
add
cmp
out
loope
jns
mov
add
add
add
xor
ret
push
sbb
divb
and
mov
push
mov
clc
in
iret
and
mov
mov
stos
jg
rcrb
popa
out
test
outsl
inc
jmp
mov
int
outsb
and
mov
mov
mov
and
leave
push
pushf
mov
stos
insb
inc
adc
repz
ss
or
xor
and
js
movsb
adcl
movsl
outsl
stc
mov
incl
jg
adc
add
into
jns
adc
cmc
add
int
mov
out
lret
jge
test
mov
es
repnz
mov
lods
mov
sbb
daa
push
aas
xchg
jbe
cld
pop
jno
xchg
ss
cmp
mov
insl
mov
lods
mov
push
int
jno
xor
xlat
xchg
mov
mov
movsb
add
test
sbb
sti
push
mov
cmp
fld
addr16
add
add
add
push
and
sbb
into
push
movsl
adc
and
push
sbb
mov
xor
jmp
xchg
movsb
adc
sbb
jbe
mov
mov
xchg
into
mov
mov
fsubs
push
jg
shlb
rcll
addr16
aaa
rcrb
jnp
pop
fs
fsubs
faddp
and
jno
je
test
or
inc
cmp
mov
add
lret
xchg
cmc
fcoml
xchg
or
push
stos
or
out
lret
adc
hlt
aam
fwait
scas
je
ret
jae
movsl
fistpll
push
loopne
pop
mov
insl
xlat
aam
into
call
mov
jg
shr
inc
push
adc
adc
mov
cmp
aas
shrb
adc
movsl
into
dec
sub
or
push
das
popa
jl
inc
pop
sub
fiadds
mov
dec
idivl
cld
ret
add
lock
sub
add
add
add
pop
data16
dec
mov
jle
mov
xchg
rol
pop
inc
xor
fisubs
es
int
adc
sbb
lods
fdivp
pop
arpl
pop
add
adc
mov
sahf
pop
scas
sbb
iret
dec
add
xor
jae
fdivr
jle
pop
add
mov
push
inc
daa
insb
test
in
js
mov
push
jns
lock
jne
xchg
sub
out
push
enter
sbb
cmpsb
stc
inc
shr
mov
dec
mov
mov
subl
cltd
lods
scas
inc
xor
mov
nop
inc
push
and
pusha
fcmovnbe
dec
idiv
push
das
mov
stos
enter
mov
mov
sub
out
ret
jg
mov
sbb
loop
cld
daa
inc
jp
xor
fs
push
pop
mov
in
inc
pop
pop
scas
dec
out
add
add
mov
iret
mov
popf
outsl
js
sub
add
add
add
sbb
ja
cmp
mov
push
adc
adc
mov
and
mov
stos
aam
mov
in
jno
cwtl
push
and
jle
push
push
push
divl
mov
jmp
lock
arpl
inc
sub
or
sub
adc
cmc
pop
push
pop
icebp
icebp
in
lock
aad
imul
aaa
iret
daa
dec
jmp
pop
cmpsl
cmc
test
push
mov
or
test
mov
or
adc
clc
cmp
orb
pop
insl
xor
nop
out
adc
dec
sbb
ljmp
dec
loop
pop
pop
mov
shl
outsb
jl
pop
test
add
xor
and
cmp
mov
mov
arpl
mov
sbb
mov
test
or
jg
arpl
mull
add
add
mov
lds
daa
fsubp
sbb
fsts
push
je
je
push
xchg
idivb
or
aas
push
lock
push
mov
pop
enter
mov
xchg
and
sub
inc
cmp
xor
jmp
sbb
jo
fwait
imul
sahf
xchg
adc
pop
mov
mov
cmp
jl
dec
push
cmp
xchg
es
adc
insb
stos
movsb
xor
xchg
out
stos
push
cmp
add
cmp
fs
jl
aas
jp
test
jecxz
sbb
hlt
cmovl
lds
xor
cmpsb
push
jnp
into
xor
adc
pushf
gs
or
or
cld
and
cmp
mov
add
test
and
add
inc
imul
xor
jge
ror
cmp
negb
ja
ret
in
dec
std
shlb
cli
clc
cli
clc
sarb
sti
mov
jnp
sub
add
add
add
lret
ss
cmp
xchg
pop
fisttpll
aas
mov
sub
pop
cmc
mov
in
xchg
stos
push
mov
out
sub
sysret
movsb
rorl
rcr
jno
lahf
cmp
add
cli
xchg
jo
cld
xchg
push
pusha
pop
push
aas
ret
dec
hlt
sub
in
cmp
pmaddwd
jmp
insb
dec
loopne
sub
mov
cs
arpl
lods
pusha
jp
movsb
lock
and
mov
shlb
pop
popf
aad
adc
imul
pop
mov
cmp
or
sbbb
aas
inc
sbb
xchg
pop
sub
mov
push
stos
adc
ret
sti
mov
mov
adc
repnz
call
std
pop
loopne
hlt
ret
mov
rcr
or
pop
push
xchg
sbb
insb
insb
mov
cmp
jge
or
fildl
add
add
jnp
out
mov
sub
add
add
add
call
out
xchg
jmp
paddd
fiadds
push
ret
lcall
scas
das
movsb
stos
jmp
sub
fistpll
adc
lret
aam
pop
xchg
mov
pop
loope
xlat
lods
inc
xchg
out
jp
jmp
js
jo
adc
pop
call
inc
jnp
jno
in
or
xchg
xor
sti
std
dec
sbb
in
mov
div
repz
inc
or
xchg
and
icebp
add
dec
mov
stc
fs
push
adc
xchg
and
repz
outsl
std
jl
mov
jmp
shlb
aaa
or
sbb
adc
das
inc
ljmp
mov
cmp
push
jg
jne
fcmovnu
pop
out
inc
and
push
insl
push
mov
in
cwtl
ss
sub
push
and
lea
data16
cli
test
fs
es
data16
insb
daa
mov
dec
xchg
iret
scas
addr16
add
outsb
lcall
push
adc
inc
xor
test
dec
jbe
shlb
outsl
mov
inc
mov
xor
in
xchg
lret
daa
ret
aam
lsl
pop
scas
repz
inc
stos
mov
cs
test
lret
and
out
mov
jne
cmc
mov
loopne
js
test
stos
inc
das
repz
lahf
push
push
xchg
and
add
bound
test
loop
inc
nop
sub
imul
sbb
jle
mov
fiadds
dec
push
push
dec
cmp
test
sbb
inc
inc
pop
fs
pop
and
addr16
sub
add
mov
lea
mov
sbb
mov
or
sti
test
repz
inc
cmp
cmpsb
jecxz
xchg
in
push
jbe
bound
mov
pop
test
mov
sub
add
add
dec
mov
imul
jmp
add
add
add
fstpl
addr16
int
cmpsl
orb
loope
or
mov
mov
movsb
cmpsb
popf
cli
movsl
sbb
imul
add
fmuls
mov
sbb
cmp
adc
fs
in
jno
mov
repnz
das
mov
enter
pop
sub
loope
negb
push
dec
push
enter
xchg
cmc
sbb
pop
mov
cmp
shl
push
xchg
out
pcmpgtd
ds
and
cmp
mov
into
push
mov
aam
scas
pop
shl
dec
loop
icebp
in
jb
popa
and
jne
inc
pop
faddl
lods
nop
fcmovbe
cmp
jb
ds
mov
js
add
xorl
dec
mov
and
add
bound
ja
xor
inc
dec
popa
lds
lods
jb
pusha
add
adc
xlat
adc
pushf
push
mov
add
add
and
push
sti
cmpsl
enter
aaa
lock
addr16
add
add
add
xor
mov
and
imul
scas
bnd
lcall
imul
aad
imul
fsubrs
and
or
fidivrl
ret
mov
arpl
ds
mov
adc
les
outsb
sub
and
sub
addr16
out
pop
subl
test
pop
or
push
add
push
fidivrl
std
enter
adc
push
sarb
dec
or
movsb
insl
adc
inc
sbb
call
jne
sbb
xchg
das
dec
fisubrl
mov
pushf
rcrb
jmp
sbb
mov
sbb
jo
cli
aam
test
xor
loope
and
jnp
mov
mov
data16
mov
outsb
pusha
adc
jg
fldt
ret
xchg
cs
push
ds
orl
inc
out
and
mulb
push
and
std
mov
dec
push
test
xor
add
add
add
sbb
mov
dec
nop
adc
in
mov
sub
test
push
aam
push
cld
loope
testb
xchg
xor
aad
aam
or
cmp
stc
dec
out
push
int
inc
mov
sub
ja
mov
int3
mov
xor
sub
stos
inc
sbbb
inc
test
jg
xor
popa
fs
rcr
xchg
mov
mov
scas
mov
nop
jo
cmp
and
testl
imul
cmc
xchg
mov
pop
lahf
add
dec
push
add
sub
sub
jne
inc
inc
cmp
insl
cmp
test
sub
mov
xor
jg
inc
out
dec
xorl
ljmp
push
sbb
andb
xchg
lds
mov
mov
into
ret
fdivs
mov
jg
and
xor
add
lds
xchg
and
inc
and
lcall
add
add
add
out
sub
inc
lods
cli
sub
lock
out
inc
lds
or
test
mov
lret
fsubrl
out
sub
sub
jbe
push
xor
push
lea
sarb
outsb
aam
jmp
imul
popa
xchg
mov
stos
xchg
movsl
lahf
xor
fld
mov
dec
cmp
mov
mov
xor
mov
stos
mov
scas
xor
test
dec
or
adc
jne
lret
out
rep
js
gs
pop
ds
inc
iret
sahf
and
cmp
insb
push
sbbb
mov
dec
jl
mov
sub
pusha
adc
xchg
imul
jne
sub
dec
fidivl
push
imulb
xchg
in
popf
lahf
stc
in
das
adc
nop
push
xchg
lods
push
outsb
imul
xor
add
add
add
xchg
ficomps
cmp
lahf
aad
push
adc
add
add
add
stos
fistpll
mov
ljmp
jp
push
lret
xor
enter
xchg
in
jae
scas
adc
out
popa
xor
push
xchg
loop
add
sub
jbe
pop
ret
xchg
jae
test
push
inc
sbb
daa
fldt
adc
ss
ja
jno
fcomps
enter
mov
xor
sub
ficoms
adc
jae
aad
sub
add
lret
data16
xchg
dec
pop
push
movsb
xor
xchg
mov
xor
and
inc
mov
or
inc
adc
addr16
incl
inc
sarl
leave
std
rcrb
outsb
fs
push
mov
xchg
rcrl
stc
dec
loope
ja
insl
fwait
adc
adcl
sbbl
pushf
imul
xchg
jmp
in
fstps
inc
xchg
xor
cmp
add
arpl
ja
sub
add
sbb
xor
add
add
add
mov
outsb
and
cli
jo
loope
in
inc
mov
adc
xor
in
add
mov
cmp
loop
mov
lea
add
add
jmp
mov
cmpsb
loopne
scas
mov
jg
out
sahf
mov
sbb
mov
mov
cld
mulb
add
and
cmp
rorl
pop
je
ret
pop
mov
and
rol
loope
xchg
in
inc
adc
in
pop
add
test
sahf
adc
xchg
fisubrl
or
xor
mov
imul
insl
cmovl
lret
pop
pop
aam
test
push
push
fs
in
pop
mov
flds
imul
popf
and
sbb
cld
jmp
neg
mov
adc
aas
jno
shll
and
mov
cld
imul
xchg
insb
loop
sti
push
lea
cmp
add
lret
mov
or
fs
cmp
add
add
add
sbb
out
jmp
jmp
jle
test
test
add
stos
lret
ret
pop
mov
insb
or
outsb
outsb
test
std
aaa
dec
int3
sbb
adc
dec
adc
fistl
cmp
pop
leave
and
adc
inc
sbb
or
imul
out
inc
xor
ret
push
pusha
pop
mov
into
push
movb
stos
cmp
cmp
in
shr
in
scas
xchg
out
sub
mov
loopne
xor
pop
scas
sub
xchg
dec
dec
into
add
lret
std
xchg
and
jns
loop
mov
adc
aam
jbe
fs
mov
std
mov
lock
jb
inc
inc
mov
add
test
test
pop
fwait
and
ja
pop
mov
pop
jp
xor
or
or
pop
int
or
into
movsl
shll
lahf
pusha
ss
mov
sub
cli
sub
sti
pop
jge
neg
hlt
add
push
addr16
add
jmp
push
inc
andb
in
mov
push
or
mov
cmpsb
or
jno
mov
xchg
das
loop
outsl
cmpsb
dec
outsb
pop
adc
and
aaa
mov
sub
add
inc
cltd
test
adc
popf
adc
inc
mov
pop
mov
xor
and
push
push
sahf
xor
mov
mov
clc
xor
jg
shl
imul
out
mov
inc
out
out
lret
inc
mov
add
iret
xor
and
cs
cmpsl
popf
fidivrs
xchg
in
push
lds
mov
std
inc
add
xor
dec
jnp
mov
test
sbb
add
cmp
mov
aam
jge,pn
lahf
fimull
lea
jmp
hlt
mov
ljmp
rolb
sarl
fnstsw
or
and
cmpsl
mov
les
pusha
cltd
fsub
std
in
popf
in
stc
jmp
mov
add
add
add
inc
mov
loop
mov
mov
in
jmp
xor
hlt
pusha
push
arpl
imul
adcl
add
xor
dec
das
inc
les
sti
loope
fisttpl
or
in
pop
adc
cmp
ret
fcoms
cmpsl
adc
and
sbb
push
mov
add
add
sub
mov
pause
jmp
xchg
ja
lock
jno
imul
xor
lods
mov
xchg
mov
sahf
movsl
dec
cltd
sahf
clc
xchg
xorb
or
push
jg
xor
ja
pop
cmp
cmp
fnstenv
xchg
adc
or
cli
pop
cmpsl
sti
cltd
sbb
xchg
push
adc
in
aam
xchg
adc
sbb
cld
imul
lahf
clc
jns
sub
dec
cld
and
stos
jns
nop
pop
jp
jnp
sti
xchg
jle
jp
lods
cltd
xchg
push
in
aaa
add
add
add
or
addr16
add
outsl
mov
hlt
or
aam
cmpsb
or
mov
mov
sbb
arpl
push
mov
pop
xchg
imul
cltd
sbb
push
nop
pop
push
notl
lock
es
fsubrs
xchg
in
lods
jmp
mov
pop
pushf
mov
insb
sbbl
lret
adc
hlt
pop
push
mov
hlt
or
aaa
sbb
outsl
adc
dec
xlat
int
aad
pop
es
jg
sbb
loop
scas
insb
cmpsb
cmp
mov
or
jg
das
jle
xchg
fistl
into
add
jb
and
cmp
mov
add
fldenv
adc
mov
paddsw
js
mov
jp
mulb
mov
push
incb
cltd
cltd
pushf
sbb
xlat
cmp
cmp
jecxz
cmpsb
add
jmp
push
stos
lcall
mov
push
sti
decb
mov
in
cmp
add
add
add
arpl
dec
out
inc
ss
adc
cmpsl
cmp
pop
daa
lods
pushf
bound
jg
fwait
cmp
push
pushf
dec
in
add
das
and
pop
movsb
xchg
gs
fdivrs
mov
push
cmc
int3
pop
mov
pop
lret
xor
in
push
and
push
jmp
jecxz
mov
push
push
popa
push
jb
scas
xchg
xlat
stos
inc
icebp
xor
in
mov
cmpsl
dec
arpl
data16
inc
insl
ret
mov
fnstenv
dec
lahf
push
sti
and
adc
ss
mov
jne
jne
push
outsl
jb
int
test
aam
lods
sub
lock
shll
shlb
add
push
mov
imul
icebp
sbb
cmpsl
and
fs
int
dec
cmpsb
add
das
jg
daa
movsl
inc
repz
ret
mov
cmp
push
ret
cmp
xor
hlt
pop
insb
jno
cmp
add
add
add
dec
mov
mov
jge
mov
scas
xchg
mov
insl
movsl
clc
push
jle
les
outsb
sub
lods
sub
fwait
es
inc
inc
mov
xchg
scas
cmp
and
sbb
rcl
mov
sbb
adc
jo
lcall
cmp
and
jecxz
ljmp
add
std
cld
ds
mov
cmp
cmp
ss
inc
push
in
test
ss
sti
mov
and
enter
mov
movsl
cmpsl
adcl
pushf
js
adc
mul
mov
std
jmp
cmp
jg
mov
insb
xor
inc
dec
test
sti
push
stc
cli
mov
insb
scas
jecxz
decl
icebp
shrb
add
sar
pop
addr16
and
mov
daa
mov
push
add
aas
mov
imul
incb
ljmp
and
shll
add
add
add
jecxz
jg
or
push
fwait
cld
fcoms
xor
sahf
pop
call
mov
push
in
xor
ja
in
xor
adc
ja
or
fsubp
push
ljmp
push
lahf
jns
jns
mov
movsb
mov
xchg
dec
mov
cwtl
jmp
test
les
lock
nop
in
daa
arpl
mov
lods
xchg
lods
mov
fs
int
repnz
xor
cmp
jg
call
or
jns
aam
xchg
adc
and
das
cmpsb
sbb
cmp
dec
ficomps
jl
cmp
cmp
mov
stos
jl
insl
mov
jle
ret
fisubrs
mov
mov
jg
aad
mov
or
xor
and
fists
sbb
sub
jnp
loope
hlt
xor
and
jle
push
test
out
out
jge
add
add
rclb
nop
lcall
cmp
add
add
add
pop
jns
mov
call
mov
add
les
call
xchg
mov
les
mov
sbb
insb
aad
and
pop
iret
push
xchg
push
lods
sub
ds
jb
cmp
fsubrl
pop
movsb
inc
out
add
push
hlt
cmp
cmp
add
shrb
xchg
mov
sbb
jae
sub
xchg
enter
shlb
les
sarl
mov
xchg
jne
hlt
mov
mov
sarb
and
mov
out
add
dec
clc
xchg
push
cs
or
sbb
sub
out
fmuls
jmp
pop
mov
subl
mov
aas
nop
popf
orl
sbb
sub
push
rcll
daa
or
dec
dec
popa
mov
aad
sbb
shrl
dec
xchg
pusha
sub
aas
pop
leave
hlt
jl
dec
jbe
idivl
or
pop
push
movsb
addr16
add
add
add
std
mov
pop
adc
sahf
int
dec
fs
cmp
iret
repnz
fdivrp
shrl
xor
cltd
dec
sub
fldenv
push
add
stos
pop
add
stc
mov
in
adc
xchg
push
cmp
push
stos
push
repnz
out
cmp
sub
lret
jg
lods
cmpb
fisubl
mov
in
jmp
in
pop
adc
xchg
fcmovnb
in
mov
inc
insl
add
inc
sub
dec
ds
mull
loope
pop
mov
std
mov
pushf
push
fnsave
sbb
sub
sbb
shr
adc
jl
or
xor
imul
jle
push
cmp
inc
rcr
cwtl
into
xor
mov
and
xor
xor
mov
dec
cmp
cmc
fistpl
test
xchg
popa
push
mov
and
rol
movsb
mov
incl
clc
int3
cli
cs
mov
mov
add
add
outsb
sub
stos
fs
jmp
leave
aas
mov
cmp
add
js
xchg
out
scas
dec
xchg
xchg
daa
or
pop
daa
fs
push
push
div
xchg
jb
sbbb
dec
int3
dec
out
adc
or
decl
call
lock
push
xchg
mov
sub
lahf
mov
imul
test
cli
mov
fs
fbstp
mov
cmp
cmp
jge
mov
inc
xchg
dec
push
test
add
add
sarb
fnstsw
rcrb
ljmp
dec
stos
mulb
fnstenv
aas
push
pop
mov
dec
jmp
in
push
pusha
cmpsb
cmpsl
pusha
mov
pop
mov
inc
pop
addr16
ret
cmp
mov
ja
andb
xor
push
cmp
pusha
sti
dec
ljmp
je
mov
inc
and
xchg
test
movsl
cwtl
out
stos
xor
rcr
sub
imul
push
inc
mov
out
inc
inc
out
sbb
les
scas
fistpll
outsl
gs
jge
add
add
add
xor
enter
push
mov
fldt
xchg
push
add
or
mov
lods
sub
loope
inc
leave
movsl
cwtl
mov
and
mov
mov
or
inc
xchg
dec
mov
test
rcr
mov
push
pop
jp
out
mov
xchg
repnz
inc
dec
mov
movsl
pop
push
adc
or
std
jl
leave
pop
fstps
jp
xor
pop
xchg
rol
xor
push
int
add
adc
test
sbb
and
out
arpl
dec
fs
stos
push
dec
nop
and
filds
inc
pop
add
and
jecxz
pop
add
push
in
mov
mov
pop
shlb
push
idivb
jo
ficoml
dec
std
inc
imulb
dec
mov
sbb
orl
cld
sbb
addr16
scas
lcall
jmp
in
sbb
jnp
jnp
cmp
movsb
push
sbb
loope
call
add
add
mov
int
outsb
xor
lahf
push
cmc
cmp
mov
sub
aad
jbe
out
xchg
inc
add
test
into
pop
or
adc
sub
dec
cmpsl
popa
loope
jle
hlt
std
pop
clc
add
ret
idiv
bound
outsl
lds
mov
loope
xchg
jo
mov
xor
xchg
xor
jp
xchg
ret
dec
gs
mov
cmpsb
push
sub
imul
xchg
shr
daa
xchg
cmovo
cmp
jl
hlt
add
push
hlt
bound
xor
mov
mov
outsb
push
pushf
push
add
loopne
push
xor
xor
add
or
je,pn
add
mov
jmp
dec
sbb
aam
mov
pusha
fmul
lahf
jge
mov
inc
dec
sbb
push
jmp
jnp
int
stc
pop
outsl
lret
mov
out
jmp
fdivs
add
add
add
cwtl
shrl
mov
xor
sub
out
jne
adc
mov
jne
rcrl
fbstp
addl
jg
inc
add
sbb
jl
push
dec
xchg
ja
pop
shll
sbb
ja
je
dec
pop
aas
out
xor
jne
sub
mov
dec
fwait
xor
lea
push
pop
jnp
cmc
pop
fs
sahf
ret
test
or
outsl
push
in
loope
pop
jns
int3
dec
xchg
inc
sub
xchg
add
mov
jae
xchg
jmp
jge
stc
jo
adc
lea
mov
cwtl
mov
fdiv
cli
das
or
movsl
negb
pop
rcrl
fdivs
ret
scas
imull
cmp
sbb
insl
cwtl
icebp
bound
lock
add
test
and
inc
and
xchg
stc
ret
sbb
pop
int3
hlt
lret
clc
iret
dec
xor
cltd
mov
add
add
repz
cmp
lods
repz
mov
popf
clc
cmp
inc
add
add
add
jl
in
xor
loopne
pop
xchg
lahf
and
adc
sahf
sbb
jmp
dec
pop
jge
les
mov
lods
insb
jnp
mov
xor
jno
test
mov
cmp
xchg
add
js
fucomip
arpl
mov
xor
xchg
inc
lcall
lds
mov
outsl
into
xor
movsb
inc
in
popf
icebp
mov
idivb
mov
pop
sub
or
sub
ret
mov
stc
ret
xor
aam
lcall
mov
push
cld
push
movsl
and
scas
cmpsb
daa
stos
mov
lcall
jle
pop
xchg
push
sti
daa
sub
xchg
mov
imul
push
cmpsb
mov
cs
sub
mov
sbb
divl
cmc
enter
sbb
jne
push
lahf
mov
aas
daa
push
cld
push
std
jmp
dec
push
add
add
add
add
jb
jo
jmp
xor
pop
call
sbb
cmp
sbb
cltd
push
aam
dec
dec
lds
cmp
std
xchg
nop
test
test
xchg
mov
cltd
pop
dec
mov
into
ss
ljmp
sub
mov
jo
inc
mov
ficoml
jns
lcall
aaa
loop
loopne
mov
push
lds
fisttpll
pop
mov
addr16
mov
movsl
sub
mov
jb
mov
jp
mov
or
pop
xchg
std
xor
stc
in
int
enter
sub
test
adc
xor
cmp
mov
push
adc
pop
mov
or
adc
fldt
iret
fmuls
pop
loop
and
subb
ljmp
cs
fists
cmp
enter
xor
subb
shll
dec
push
add
sbb
dec
push
out
aad
insl
ja
mov
add
add
add
int3
cmp
clc
rorl
push
dec
xor
cmc
aam
mull
dec
mov
jecxz
dec
push
in
les
xchg
andl
es
mov
pop
test
and
and
mov
pop
mov
pushf
sbb
mov
sub
int
push
xchg
dec
std
in
xchg
or
pop
fcmovnbe
xor
into
frndint
fs
das
test
cs
xlat
push
pop
test
or
cld
xorb
inc
pop
lcall
jno
cmp
out
test
aaa
imul
daa
leave
or
and
pop
lods
ret
mov
cld
loop
inc
xchg
jl
xor
sub
lds
pop
lret
fdivrl
lcall
insb
insl
loopne
rorb
cmp
nop
mov
adc
pop
xchg
cmp
jle
push
aaa
pop
js
stos
add
push
mov
or
add
out
inc
add
add
add
sti
jg
xor
push
in
out
and
decl
in
mov
lea
das
es
sbb
jne
cmovns
xchg
push
cmpsl
mov
insl
lea
cmp
cmp
nop
jo
push
cmp
pop
push
jns
repz
xchg
xor
push
or
sub
mov
dec
dec
add
gs
mov
icebp
repnz
imul
adc
cli
addr16
mov
mov
xchg
jo
daa
mov
fs
loopne
or
adc
adc
sub
enter
fldenv
push
jae
mov
fisubrs
mulb
or
sarb
or
pop
imul
jecxz
insl
jbe
lods
outsb
pop
sub
bound
mov
jb
cld
mov
pop
mov
inc
scas
jg
insb
inc
aaa
sub
cmp
lret
bound
mull
adc
mov
ja
jg
xchg
orl
xor
add
add
add
mov
int
cmp
adc
xchg
mov
mov
sub
and
lds
movb
add
ss
call
fldcw
mov
mov
sbb
mov
jge
and
or
mov
testl
add
jp
push
mov
push
jl
cmpb
stc
ret
cmp
popl
cmp
mov
and
mov
sbb
inc
scas
push
inc
dec
sbb
jge
into
dec
negb
cmp
adc
xchg
xlat
stc
jne
cwtl
jle
cmc
je
lahf
fcomps
in
push
pop
rcl
or
pop
or
lret
aas
flds
hlt
mov
js
nop
fcoml
in
imul
jecxz
std
pushf
xchg
mov
pop
inc
fsub
push
jg
and
mov
add
adc
sbb
sub
rclb
inc
leave
and
dec
lret
jmp
imul
aaa
je
shl
sub
inc
add
add
add
lock
aad
imull
fwait
in
push
adc
xor
ljmp
movsb
arpl
loopne
les
inc
jb
jb
pop
jb
push
imul
jl
out
rcrb
mov
mov
sub
sarl
inc
bound
bound
sub
outsl
scas
stos
popf
mov
test
mov
rclb
push
shl
test
call
cmc
cmpsb
mov
pop
or
xchg
inc
repz
pop
out
enter
repnz
xor
sub
sbb
test
xor
cmpl
jo
test
lret
addb
cmp
inc
test
pop
adc
mov
sbb
in
leave
dec
leave
pop
fwait
nop
jb
ja
sahf
dec
popa
mov
dec
push
repnz
ja
mov
arpl
nop
jne
cltd
inc
das
xor
call
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
lahf
movsb
addr16
add
add
add
and
add
iret
mov
sub
ss
outsb
add
jecxz
rsm
mov
sbb
shl
dec
arpl
add
test
seta
leave
and
xor
repz
sbb
rorb
xchg
dec
cmpsb
mov
inc
xchg
adc
gs
xchg
call
sub
fwait
popf
fwait
xor
mov
sbb
push
fstpt
cmp
clc
lea
loopne
cmp
test
cmp
and
dec
callw
dec
xchg
pop
mov
lahf
js
test
pushf
call
mov
fiadds
xor
xchg
das
mov
fs
lds
or
mov
in
addr16
sub
cld
dec
popl
jae
stc
and
lds
test
mov
pop
jbe
in
mov
and
sub
clc
stc
test
mov
testl
or
shrl
sub
jns
xor
jg
mov
add
add
add
xlat
cmp
sti
jns
inc
jne
sti
fs
push
insb
repz
fdivs
add
xchg
lret
lret
sarb
nop
dec
pop
jne
clc
ds
cmp
add
fdivl
lods
cmc
jg
mov
cmp
push
and
std
je
dec
xchg
shlb
dec
and
cmp
and
and
enter
std
jp
mov
addr16
and
in
xorb
fldl
sub
repnz
std
daa
je
mov
ljmp
mov
inc
cmpsl
fisubrs
int
sbb
out
int
lcall
subb
lock
imul
jnp
scas
mov
jp
ret
sbb
imul
or
pop
lret
jle
xor
lret
es
fimuls
dec
mov
xchg
dec
je
fldenv
out
loope
ss
cmpsb
pop
push
mov
xor
xor
js
ret
jg
decl
rol
cmpsb
dec
nop
nop
addr16
add
add
add
in
ret
jp
repz
hlt
outsl
int
in
xor
fmull
pushf
ret
cmp
sti
pop
jmp
int3
inc
mov
pushf
jg
adc
dec
stos
ljmp
imul
pop
lea
fistpll
adcl
repnz
jno
push
push
sub
push
xchg
inc
jecxz
test
movsb
push
dec
cmp
dec
minps
adc
ret
stc
xor
pop
xor
cwtl
frstor
mov
scas
xor
stos
lods
aas
or
mov
stos
pusha
mov
lods
pop
mov
enter
bound
adc
mov
dec
scas
push
sahf
mov
lods
fisubl
inc
shr
out
pop
xor
mov
lahf
sub
mov
lds
jp
pop
lret
ret
lret
xchg
test
mov
pop
call
idiv
test
pushf
pop
adc
mov
out
aad
push
add
add
add
adc
cmp
popf
jne
ret
or
sbb
cmp
sub
mov
es
mov
sar
lahf
cltd
outsl
fsqrt
pushf
and
add
stos
jno
pop
movsb
loopne
cmp
push
mov
adc
arpl
inc
mov
push
pop
mov
cmpsb
sub
xchg
xor
jnp
insl
loopne
ds
pop
call
or
outsl
xchg
mov
push
arpl
stos
int
loopne
outsl
fwait
or
fmuls
mov
jo
out
ficomps
lea
pop
add
jns
sub
call
jbe
daa
xchg
cmpl
icebp
push
in
or
mov
jb
in
adc
mov
cmp
and
cmp
xchg
dec
pop
imul
popa
les
jno
mov
add
add
lods
xor
pop
lret
cs
sbb
inc
icebp
hlt
gs
dec
adc
xlat
xor
add
add
sbb
adc
cmp
jecxz
mov
sti
movsb
shrb
inc
shll
loop
shlb
sbb
leave
fcomps
add
dec
and
jae
adc
in
rcrb
fildll
into
xlat
inc
mov
aas
push
xor
add
xor
sbb
loopne
sbb
lret
test
adcl
mov
or
iret
lcall
subb
push
lcall
push
inc
inc
mov
adc
and
dec
mov
mov
mov
mov
inc
cltd
lahf
mov
roll
add
mov
cld
sub
sub
icebp
stos
int
adcb
pop
pushf
sbb
sbb
stos
or
lods
stos
aad
sbb
add
aas
gs
pop
repnz
dec
add
add
add
cmpsl
dec
enter
dec
data16
push
cmp
inc
movsb
dec
aam
fstpl
xchg
dec
cmp
jns
out
fidivl
enter
popl
mov
and
shll
or
inc
dec
cmpsl
inc
and
inc
fucom
and
stos
xchg
add
outsb
aam
js
mov
aam
push
xlat
das
stos
fiadds
mov
aad
pop
jl
popf
outsb
dec
nop
adc
push
bound
imul
adc
movsl
sub
add
in
popf
push
mov
repnz
lret
stc
xchg
mov
insb
jnp
dec
sub
or
shlb
add
mov
pop
adc
rorb
cmp
iret
int
aam
pop
sub
stos
jmp
mov
push
jae
lcall
std
pop
je
pop
cmc
data16
shrb
push
outsb
sbb
inc
fcom
adcb
cs
mov
out
fisttpll
lock
add
add
add
sbb
cld
stos
mull
mov
mov
add
cltd
mov
insl
sbb
mov
xchg
enter
xchg
mov
les
ljmp
or
ja
loope
cmc
jns
or
aaa
aaa
mov
dec
pop
dec
xor
mov
test
mov
mov
in
sub
adc
imul
loope
jbe
sub
sbb
gs
subl
push
ffree
xchg
ss
add
push
xor
les
test
imul
dec
adc
jl
aaa
xchg
in
repnz
or
lods
or
sbb
sub
lods
push
imul
lds
fs
mov
je
inc
pop
stc
and
sub
jmp
cs
mov
fcoms
out
mov
add
mov
hlt
add
push
int3
testl
add
add
mov
ljmp
add
add
add
xchg
sub
or
dec
lcall
sub
shll
jo
xorb
aad
aaa
xchg
add
xchg
adc
pusha
xchg
negl
push
mov
decb
sbb
mov
jmp
add
pusha
sbb
aam
inc
mov
xchg
pop
iret
sbb
pop
mov
movsb
xor
int
popa
mov
call
test
sub
popf
movsl
scas
mov
mov
mov
fdivs
aam
mov
outsb
imulb
xlat
jne
push
add
xchg
mov
dec
out
nop
cli
aas
mov
cmpsb
jge
xor
ljmp
and
jmp
mov
sub
arpl
adc
into
or
push
push
pop
jg
jnp
aaa
push
int3
inc
adc
push
add
test
cmp
sbbb
stos
hlt
pop
xchg
xchg
fbstp
sub
add
push
sbb
jmpw
fnstcw
jo
sahf
jb
jno
addr16
add
add
add
and
push
stos
mov
shll
cli
orl
aad
insb
mov
repz
adc
push
fwait
xor
push
jne
adc
idivl
push
dec
and
lret
pusha
mov
or
or
push
adc
insb
xchg
aad
mov
xor
cwtl
push
mov
mov
cmp
inc
out
mov
or
sbb
shlb
rcrb
jo
push
xchg
out
dec
dec
push
divb
cmc
ljmp
fdivrs
push
mov
xchg
loope
mov
cltd
subb
lahf
scas
and
aam
testb
mov
cmpb
jb
xor
popa
int3
pop
and
mov
popf
mov
or
test
movmskps
in
pop
jne
push
loopne
mov
push
mov
mov
push
iret
jb
pop
in
sbb
jno
mov
add
imul
out
mov
mov
je
sbb
add
add
add
lea
dec
in
leave
iret
lret
test
add
mov
dec
adc
adc
mov
and
jg
addr16
cli
jb
cmp
push
aaa
lret
push
std
jbe
in
shlb
stos
cmpb
dec
mov
rclb
push
mov
int
leave
bound
adc
or
shrl
xchg
dec
pop
xor
sbb
lods
inc
dec
mov
inc
xor
or
lock
loop
dec
pop
out
fwait
mov
xor
scas
sbb
sub
adc
or
xor
mov
je
int
xor
dec
push
jp
lahf
shl
int3
jl
stos
mov
loopne
lret
sbb
lea
xor
push
pop
stos
dec
or
sub
mov
stc
enter
push
arpl
add
pop
test
cmp
popa
lcall
imul
sub
add
add
add
dec
stc
mov
ljmp
addr16
add
add
add
fcomi
aad
outsl
cli
out
pop
ret
xchg
cltd
daa
outsb
mov
push
cmp
mov
es
divb
testl
out
cwtl
inc
loopne
jecxz
sti
sahf
andb
lock
jnp
xchg
stc
loopne
and
pop
dec
cltd
and
sbb
fistps
mov
push
test
dec
add
pop
jecxz
cmp
insb
add
pop
in
adc
das
jge
jecxz
sahf
dec
pop
lret
stc
xor
xchg
jg
scas
push
mov
pop
add
jle
cmpsb
and
cmc
adc
repnz
movsl
pushf
mov
in
cld
adc
xorb
cwtl
dec
sbb
pop
mov
scas
testl
push
sarl
jg
scas
inc
jp
jp
or
lds
cmpsl
sar
push
xchg
add
jne
mov
fidivl
movsb
jb
mulb
fstps
jle
lahf
ret
cvtps2pi
loop
movl
xchg
cmp
jle
jg
cld
lcall
and
add
add
add
dec
or
in
xor
jmp
mov
pushf
aaa
cmp
mov
xchg
mov
xchg
lods
cltd
insl
adcl
rorb
in
cld
sbb
inc
mov
fs
push
in
fsubrl
movsb
push
jmp
xchg
adc
movsb
and
add
mov
xor
mov
sub
dec
pop
js
std
mov
pop
jp
ljmp
fnstsw
xchg
fucomi
mov
iret
xor
ljmp
inc
das
or
xchg
xor
cli
jne
xchg
movsb
stos
push
js
repz
rcrl
in
adc
xchg
dec
push
xlat
test
pop
loope
clc
push
fsubrs
mov
push
cmp
sarl
push
sbb
sti
fidivrs
push
jae
push
xor
sub
mov
arpl
rorb
cmc
inc
popa
adc
dec
lock
mov
xchg
mov
pop
mov
addr16
add
add
add
lahf
push
subb
dec
ja
in
mov
test
push
jl
and
or
lds
or
adc
fidivrs
daa
jmp
or
addr16
int3
cmc
or
out
inc
hlt
outsl
jge
sbb
scas
pusha
and
popa
inc
mov
lds
dec
dec
mov
mov
lahf
mov
outsl
xor
mov
jmp
push
mov
xor
lods
scas
sbb
push
push
jmp
repz
jb
or
pop
push
xchg
pusha
xchg
aad
sub
shlb
sbb
jmp
test
call
sbb
pop
add
decb
adc
sbb
in
cwtl
cltd
xor
or
dec
pop
sub
sti
icebp
push
push
lea
pop
loop
bound
mov
popf
out
ret
jl
sbb
adc
jle
sub
popf
movsb
stc
out
pop
adc
cmp
add
or
mov
and
adc
addr16
add
add
add
test
dec
gs
inc
inc
jg
cmpsb
fs
add
fstpt
clc
xor
or
cmp
loope
enter
adc
idivl
movsb
sbb
jb
pop
mov
stos
lods
pusha
repnz
orl
sbb
out
push
in
jmp
in
mull
jae
shrb
inc
divb
icebp
push
pop
push
fdivr
push
cwtl
adc
std
push
mov
mov
xchg
mov
xchg
push
mov
jge
adc
mov
mov
xchg
lea
in
out
mov
push
push
dec
dec
lods
inc
outsb
cmp
int
test
test
jno
xor
cwtl
aam
adc
std
rorl
pop
mov
push
push
loopne
xchg
add
and
push
xchg
test
sub
das
shr
cli
jnp
pop
push
mov
jge
out
jmp
mov
in
sub
fsubrl
mov
out
cmp
ret
or
pop
xor
addr16
add
add
add
xor
mov
push
push
xor
test
data16
mov
mov
aad
mov
push
fldl
fwait
ret
pop
jnp
outsb
mov
push
sahf
das
test
mov
jo
jns
sbb
popa
xchg
sbb
repz
mov
jl
fists
jp
jg
sbb
sti
int3
xchg
dec
shrb
push
prefetch
push
adc
jo
jae
daa
nop
imul
and
cmp
jo
out
cmpsb
adc
into
cmpsl
jb
pop
and
push
jno
xchg
lods
cmpsl
faddl
dec
outsl
push
cmp
popf
mov
jbe
negb
jb
movsl
repz
inc
inc
cmp
dec
dec
in
and
stc
stos
adc
mov
movsb
frstor
cmp
xlat
daa
mov
mov
sbb
inc
jge
mov
push
inc
jle
adc
sti
shlb
loop
and
or
push
shll
out
pop
pop
pushf
push
pop
movsb
adc
addr16
add
add
add
xchg
mov
adc
nop
aaa
push
loop
xchg
push
popa
jne
pop
mov
jl
in
jo
sbb
dec
shll
lods
fisttpl
pop
pop
mov
cmc
dec
mov
push
jge
pop
lea
adc
dec
nop
call
add
mov
xchg
fnstsw
or
aaa
dec
fmulp
les
sti
push
es
jl
xor
dec
decl
jne
test
inc
and
add
cli
jle
xor
nop
adc
inc
je
int
pop
xor
jg
imul
fucomp
mov
jne
lcall
sbb
test
cli
dec
mov
mov
and
push
cli
pushf
leave
aas
fistpl
pushf
xor
and
xor
push
les
roll
xor
ljmp
scas
xlat
mov
dec
bound
aas
push
xchg
mov
mov
sbb
popa
stos
push
lcall
hlt
mov
stos
xchg
push
addr16
add
add
add
icebp
jae
mov
mov
lock
scas
cmp
test
sarl
and
repz
mov
pmulhw
mov
pop
roll
and
nop
mov
xor
pushf
push
pop
cli
cs
jno
in
cmp
xchg
and
mov
mov
xchg
fistpll
imul
pop
add
or
fstpt
and
push
in
xor
cmp
insl
pop
jno
ds
les
sub
pop
and
int3
dec
sub
dec
or
fld
push
push
lret
and
xlat
rorl
inc
addr16
xchg
sbb
in
es
mov
mov
adc
aaa
js
ret
xchg
jmp
inc
sbb
lea
iret
xchg
dec
and
mov
das
dec
xchg
xchg
inc
repnz
ss
cmp
inc
xchg
sahf
jge
pop
jge
in
std
scas
mov
and
add
add
jbe
idiv
imul
imul
pop
add
add
add
mov
dec
add
add
push
inc
pusha
cmp
xchg
mov
pop
sahf
lds
jb
mov
jmp
out
add
push
jb
xor
adc
dec
jae
push
push
leave
push
lods
rol
fwait
xor
add
cmc
popf
adc
xor
mov
clc
mov
das
inc
loopne
add
pop
fwait
add
inc
pop
xchg
movb
cli
cmpsb
push
outsb
fstpl
sahf
push
std
scas
xchg
ja
or
cltd
rcrl
lret
nop
les
mov
xchg
test
pop
jmp
push
cli
xchg
mov
cltd
adc
xchg
jmp
into
stos
push
push
into
add
out
jne
add
adc
mov
mov
lret
jae
shl
mov
shll
stos
lods
std
insl
ret
pushf
jne
push
xor
pusha
jge
xor
jae
fwait
cmp
stos
sarb
addr16
add
add
add
mov
xchg
pop
sahf
and
push
inc
repz
pop
sarb
sbb
stos
mov
jnp
push
xor
add
popa
adc
mov
sbb
sbb
adc
push
es
ret
aad
int
in
add
jmp
adc
or
push
leave
into
xor
outsl
mov
sub
fwait
jno
sbb
inc
dec
stos
fwait
dec
fs
insb
sbb
fldcw
or
cmp
add
into
cmp
cmp
mov
js
pop
aam
or
je
jmp
es
push
jae
xchg
mov
faddp
movsl
cld
jo
mov
push
dec
jecxz
stos
pop
mov
mov
cmp
out
jo
inc
jmp
jb
push
inc
push
ds
mov
lret
pop
iret
shlb
dec
in
cltd
lea
sbb
cwtl
pop
mov
inc
push
clc
mov
and
hlt
mov
cmp
pop
add
add
add
mov
stos
iret
push
inc
lret
lahf
dec
dec
inc
negb
test
xor
push
fisttpl
ljmp
shrl
shlb
xchg
std
xchg
jg
pop
mov
xor
movsl
cltd
or
aas
cmp
stos
mov
in
or
insb
mov
adc
loopne
mov
and
in
and
or
pop
sub
test
mov
push
xor
sbbl
enter
mov
fsts
cmc
out
cwtl
mov
daa
mov
sbb
xor
test
mov
std
imul
xorb
xlat
lcall
sbb
dec
push
aam
pop
fs
aad
popa
pushf
jecxz
mov
mov
lods
jne
inc
dec
cmpsb
das
pop
das
std
mov
and
xchg
jae
lock
outsb
imul
mov
repz
lock
pop
mov
scas
xchg
push
adc
out
mov
loopne
out
addr16
add
add
add
inc
mov
dec
mov
adc
cmp
xor
and
insb
mov
out
lret
rcr
adc
mov
lock
add
xchg
lea
out
add
lock
xchg
mov
mov
aad
jns
dec
xlat
rcr
xchg
mov
inc
popf
fidivl
shll
aaa
sub
pop
or
int3
mov
jg
xchg
daa
dec
imull
jmp
xchg
pushf
sub
repz
dec
xlat
cs
add
inc
and
mov
adc
or
and
cmp
cld
lcall
les
jge
es
pop
jp
mov
xchg
jle
mov
push
out
sti
jb
call
popf
xor
shrd
xchg
push
inc
fcompl
dec
cli
xor
push
mov
outsl
sub
test
mov
hlt
bound
fnsave
imul
test
or
fdivs
lods
cmpsl
jo
addr16
add
add
add
push
pop
lret
xlat
outsl
or
movsb
enter
xchg
or
push
mov
repz
lods
mov
sbb
jo
add
push
dec
bound
fiadds
fsincos
shr
pop
push
test
fstps
out
xchg
cmp
mov
aas
xor
inc
inc
sbb
ficompl
out
test
icebp
lods
aaa
int3
sub
dec
ret
int3
mov
cmp
jne
inc
ds
add
aam
cmp
jae
dec
in
pop
inc
jl
lds
test
out
sbb
and
xorl
shlb
inc
mov
or
leave
popa
daa
dec
xchg
imul
jb
jne
shrl
scas
mov
sbb
and
test
popa
ret
dec
imul
mov
mov
pop
jae
rcrb
dec
test
push
je
xchg
add
mov
pusha
pop
lock
push
addr16
add
add
add
or
and
push
ljmp
xchg
mov
pop
mov
add
and
xor
iret
out
xor
push
arpl
sti
dec
ja
test
push
push
mov
dec
sub
pop
cmp
mov
js
jb
ret
inc
mov
ja
movsb
jmp
jns
aad
popf
xchg
pop
or
hlt
leave
sbb
cld
xchg
arpl
cmp
leave
dec
cmpsl
push
push
and
fsub
lods
sti
mov
mov
std
imul
bound
jnp
sub
push
int
enter
xchg
inc
testb
loopne
push
mov
cltd
and
das
pop
sub
outsb
fisubs
sahf
sbb
add
adc
test
sub
repz
cltd
jp
push
cmpsb
enter
lock
out
jl
and
fdivrs
push
mov
dec
inc
jecxz
xor
test
add
add
movsb
jae
jnp
mov
ja
mov
les
add
add
add
mov
leave
call
shl
jl
pop
cmp
lcall
mov
rcr
add
jb
imul
push
imul
pop
bound
fwait
dec
pop
jae
push
sbb
mov
test
nop
rorl
adc
es
imul
sub
cltd
scas
sub
push
push
loopne
inc
pmaxub
into
mov
daa
lods
fstps
fldenv
pop
rcll
xchg
test
inc
xchg
jb
dec
dec
and
sbb
mov
outsl
in
cmpl
push
scas
push
xlat
mov
xchg
inc
cmp
cmp
inc
push
pop
out
jo
mov
cmpsb
repnz
mov
push
mov
xchg
mov
repnz
mov
fwait
inc
sub
add
rol
adc
add
fbstp
scas
adc
lahf
xlat
out
cld
mov
addr16
add
add
add
fiadds
jns
cmp
sub
xor
jp
sbb
dec
jns
sub
or
add
sbb
inc
push
and
sarb
or
or
dec
out
or
es
mov
xlat
ljmp
jne
mov
jnp
mov
je
push
addr16
push
std
sti
push
call
adc
mov
pop
mov
shrb
sbb
ret
das
mov
filds
test
lock
fsubrs
nop
out
mov
pop
int3
dec
packssdw
inc
mov
js
jnp
mov
fdivr
cmp
xchg
ror
pop
stos
xchg
jno
inc
inc
iret
test
aad
lock
sub
and
mov
popw
movsl
jp
push
fwait
xchg
jg
mov
dec
inc
hlt
mov
jmp
pushw
xor
pop
push
insl
movsb
popf
dec
movsl
pop
cli
and
divb
adcb
add
mov
add
or
dec
dec
addr16
add
add
add
and
sti
fdivs
or
fnstenv
fidivrl
mov
dec
xchg
push
out
sar
into
mov
ja
mov
enter
lahf
push
pop
jl
sbb
adc
lret
push
pushf
pop
push
shr
or
loope
dec
sub
cwtl
push
inc
out
mov
repnz
sbb
sub
aaa
jns
daa
mov
mov
pop
sbb
das
jg
popa
pop
mov
mov
xlat
mov
iret
jp
fiaddl
cs
jo
daa
mov
xor
and
int
mov
lahf
cwtl
add
aaa
test
push
push
mov
xor
les
aas
jle
xor
xlat
div
jno
mov
xchg
add
jo
icebp
jae
pop
imul
pop
dec
pusha
pop
mov
sub
jb
cmc
sub
cmpsb
push
mov
sub
inc
jg
xor
fimull
cmp
test
imul
and
fxam
data16
mov
out
into
push
push
inc
lahf
mov
addr16
add
add
add
in
cs
ds
inc
dec
xor
mov
push
cld
push
sub
push
subb
fs
dec
sbb
xor
fcomps
mov
mov
scas
sub
or
and
scas
inc
rclb
jbe
sbb
dec
sti
push
cld
or
subb
add
inc
aam
lock
stc
pop
into
mov
mov
inc
or
mov
call
xor
pop
loopne
popa
aaa
jo
jae
sahf
pop
xchg
xchg
jbe
add
roll
ljmp
jns
mov
pop
dec
adc
inc
fdivl
cmc
cmpsb
ret
outsb
pop
imull
add
test
sahf
das
mov
shlb
adc
push
test
mov
push
je
or
loope
shlb
movsb
lods
jno
inc
aaa
loopne
pop
std
stos
shl
movhps
pusha
scas
out
ds
sbb
push
daa
jmp
and
mov
jg
or
bound
add
add
add
cltd
sbb
jno
addr16
addb
mov
sub
sbbl
lret
lahf
fsubr
cmpsl
fs
ljmp
jbe
out
inc
out
cmc
scas
mov
adc
in
cmpsl
mov
sarl
mov
scas
ret
dec
fwait
push
test
add
fbstp
aaa
cs
clc
mov
inc
or
aas
adc
loope
sbb
loopne
xchg
iret
ret
cpuid
sub
adc
es
int3
xor
imul
arpl
fsubrl
imul
outsl
daa
pushf
xor
cmp
div
inc
sbbb
imul
inc
std
or
sahf
iret
ljmp
leave
pop
inc
adc
aaa
div
aam
cmc
mov
xor
idiv
popf
rcrl
xor
adc
fiadds
hlt
cmpsl
inc
cltd
xchg
mov
mov
or
and
sub
and
mov
pop
dec
or
addl
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
arpl
add
add
add
orl
pushl
sbbl
leave
jns
imul
xchg
insl
and
daa
sub
loope
lods
push
addr16
ret
jmpw
cltd
mov
sub
xchg
xor
xchg
push
sub
jns
lcall
call
inc
das
jb
leave
mov
push
imul
or
sbb
pop
fsubrl
out
add
xchg
insb
in
out
lret
mov
int3
sbb
add
mov
add
std
inc
int
add
pop
mov
xor
aas
pop
lock
jb
mov
cwtl
rcll
mov
pop
sub
test
xchg
test
hlt
push
ret
xchg
bswap
mov
inc
iret
sbb
xchg
xor
sti
or
or
xor
jge
pop
push
hlt
out
out
adc
jne
mov
add
add
idiv
jg
sub
pop
ret
add
add
add
stc
push
mov
fdivrs
into
inc
out
aam
sbb
cmpsl
inc
scas
addr16
push
and
jl
cmp
jns
loopne
repz
pmulhw
adc
mov
jl
lea
mov
xor
imul
imul
mov
add
gs
je
out
into
adc
outsl
lret
aas
mov
push
bound
cmpsl
or
jmp
jl
mov
pop
iret
dec
lods
jns
ljmp
call
add
bound
pop
aam
fwait
xchg
lea
push
push
lcall
movsl
xchg
ja
insl
loopne
pusha
pop
dec
push
out
pop
es
scas
xchg
lods
sbb
mov
fidivrl
and
ret
iret
jno
inc
scas
mov
aam
jg
test
jb
or
jle
inc
sub
pop
cmpsl
mov
jle
adc
insl
push
ret
repz
jmp
ds
movsl
fistl
mov
cmp
xchg
lret
mov
inc
pop
mov
fstps
xor
add
add
add
pop
ss
ljmp
cwtl
pop
push
hlt
jno
aaa
andl
xchg
push
pop
mov
aam
sbbl
ja
cmp
stos
andl
mov
in
lret
addr16
pop
call
jle
std
pop
pop
daa
xchg
in
add
popa
dec
or
inc
jae
out
lock
lods
sub
cmp
jl
fnsave
sub
movsl
into
and
inc
ret
test
flds
cli
icebp
aam
jecxz
in
add
mov
xchg
movsb
jmp
and
movsb
lahf
cmp
addr16
add
and
aas
das
cmp
cmp
dec
jbe
sbb
xchg
outsl
cmpsb
cmpb
xorl
mov
sbb
push
cli
cmp
popa
xchg
addr16
aam
imul
add
mov
insb
mulb
add
repnz
movsb
jle
arpl
addr16
add
add
jnp
fs
mov
out
cmc
inc
rorb
sub
inc
pop
cwtl
popl
jns
scas
mov
lcall
iret
sub
xchg
sbb
es
ret
mov
or
inc
stos
pop
test
mov
dec
jle
mov
mov
push
jmp
fsubs
test
dec
pusha
sbb
cli
adc
outsb
subb
imul
xor
jbe
inc
mov
push
jae
cmpsb
inc
outsb
std
icebp
jns
scas
push
test
mov
movsl
das
push
stos
mov
jne
jb
icebp
je
xchg
jle
xchg
jecxz
cmp
lcall
and
loop
ja
sbb
imul
js
roll
scas
lds
dec
in
mov
lahf
dec
incl
clc
or
xor
pop
jb
cli
xchg
es
fwait
and
mov
sub
jb
mov
xchg
mov
and
loop
add
add
jmp
sub
cmp
cld
addr16
add
add
jmp
mov
sbb
mov
mov
or
mov
inc
in
rolb
int
sbb
nop
loop
sub
pop
jge
cmp
fcmovne
mov
sub
jno
in
jno
into
in
jns
lods
mov
cli
inc
fistl
cwtl
fwait
cltd
mov
adc
dec
outsl
aas
pop
adc
lock
jo
adc
outsl
push
xchg
insl
dec
jle
mov
mov
stos
sbb
repz
and
mov
sub
mov
mov
inc
mov
jg
cmp
cwtl
or
xchg
lods
iret
popf
mov
mov
xor
enter
and
mov
jbe
push
movsb
and
sbb
mov
out
jmp
ss
or
or
sbb
jmp
pop
sub
add
add
mov
fnstenv
sbb
cmp
addr16
add
cmp
dec
aas
lret
jnp,pt
out
pop
dec
repz
lahf
rcll
addb
std
dec
cli
movsb
sbb
shr
scas
mov
push
in
push
jmp
and
jp
sahf
cmp
or
dec
inc
hlt
fildll
imul
test
flds
lock
scas
add
or
mov
daa
mov
call
insb
inc
hlt
xchg
clc
jnp
jl
xor
int
hlt
push
stc
dec
aas
sbb
in
adc
aaa
xchg
dec
cld
xor
xchg
mov
add
sbb
mov
ffreep
push
and
push
into
xor
fs
xorb
and
pushf
xchg
dec
xchg
movsb
push
mov
mov
adc
cld
xchg
and
in
cmc
add
aaa
dec
inc
jae
cmpsl
icebp
or
dec
idivl
scas
or
cld
lods
lret
xlat
sub
mov
imul
cld
je
jbe
jns
sbb
fwait
fwait
adc
add
add
add
fiadds
je
addr16
negb
mov
lahf
mov
mov
ret
inc
cli
cs
push
mov
arpl
add
mov
das
adc
cmp
mov
mov
or
scas
insb
movsb
roll
push
push
adc
fsubrl
push
ljmp
ficompl
out
mov
out
xor
push
pop
cmpsl
fwait
jmp
in
adc
ja
outsl
xchg
enter
idivl
sub
push
mov
and
and
cmpsl
punpcklbw
xor
pop
rcrl
jmp
loopne
cmp
mov
mov
or
jp
inc
or
emms
lods
sbbl
scas
push
mov
mov
adc
jbe
jns
das
jecxz
insl
movsl
inc
pop
or
mov
test
repz
in
or
cmpsb
adc
add
mov
lods
lret
mov
add
cltd
jmp
fildl
or
aad
addr16
add
add
add
out
cmp
push
stos
outsb
loop
or
mov
cmc
out
fwait
mulb
mov
xor
lret
xchg
sahf
sti
mov
and
aaa
xor
push
js
inc
mov
mov
mov
test
stc
das
icebp
aaa
in
pop
cmp
jb
ret
add
xchg
addl
ds
mov
xor
fwait
ja
xchg
inc
mov
add
xor
mov
cmpsl
sbb
daa
xor
es
into
or
arpl
sbb
out
icebp
or
sbb
test
push
cmpsl
add
mov
sub
pop
and
and
bound
les
xor
xor
sub
cld
std
cli
fisttpl
sbb
pop
popf
xchg
mov
and
dec
xor
and
repz
mov
sbb
pop
xchg
xchg
nop
cmpsb
mov
xchg
and
push
iret
repz
ret
notl
adc
xchg
and
test
daa
stc
cmp
xlat
jnp
add
add
push
jg
dec
xchg
dec
mov
add
add
add
mov
xchg
or
icebp
pop
sbbb
cltd
mov
pop
loopne
pop
inc
outsl
push
js
or
add
jo
push
mov
xor
pop
fldt
sub
lret
wrmsr
mov
push
shrl
mov
xrelease
scas
and
or
jge
sbb
pop
mov
in
lods
pop
dec
and
mov
int3
icebp
xor
pop
or
lods
mov
frstor
cmp
mov
mov
mov
cld
mov
xchg
dec
test
mov
popa
mov
and
lods
push
jecxz
sbb
repz
fisttps
repnz
cs
jecxz
xor
rcrl
test
pop
dec
sub
push
mov
jle
mov
mov
rep
cwtl
lret
fisubrs
mov
icebp
sbb
daa
aad
add
xor
dec
jle
iret
mov
fucomip
push
insb
xor
cmp
es
insb
add
add
add
ss
mov
fildll
push
jne
loop
cmp
push
dec
popf
mov
into
lret
xor
int
and
or
jle
ds
add
rorl
xchg
push
popa
ljmp
jmp
and
dec
mov
div
ret
inc
mov
lret
adc
cmc
aam
inc
adc
out
and
cmc
int3
out
popw
pushw
mov
inc
rclb
leave
jbe
adc
ljmp
sbb
lret
cmp
mov
jge
out
fwait
cmp
dec
xchg
in
lods
inc
jge
jecxz
lock
out
mov
push
in
adc
lret
push
or
sub
sbb
mov
dec
inc
shlb
jnp
aam
mov
arpl
enter
add
insb
movsb
jp
cmc
sub
inc
jl
lods
sbb
movsb
adc
mov
rcl
dec
cmp
xchg
cmpsl
aad
popa
js
cmp
mov
iret
add
cltd
imul
dec
out
iret
jmp
aas
in
push
data16
push
or
add
add
add
inc
insb
pushf
inc
aad
mov
mov
lahf
es
pusha
clc
mov
sbbb
lds
mulb
addr16
rcrb
lcall
roll
push
xor
andl
mov
rcrl
sub
popa
je
bound
pop
push
div
in
pop
out
shl
lea
mov
push
jns
jmp
and
add
inc
inc
cwtl
int
adc
pop
mov
and
pop
repz
inc
cmpsb
inc
ja
sub
out
or
loope
cmc
and
aaa
fists
cld
jle
dec
nop
adc
mov
sub
ljmp
inc
arpl
ss
add
xorl
mov
mov
sbb
in
add
push
mov
cltd
adc
xor
mov
push
mov
addr16
sbb
add
std
cmpsb
pop
dec
sub
sub
pop
aad
outsb
add
add
add
lcall
xor
fiadds
data16
js
es
jle
mov
shrb
and
xor
xchg
jge
adc
js
add
add
mov
mov
test
mov
push
cmpsb
jge
pop
outsb
pop
sub
mov
clc
or
add
in
adc
mov
enter
mov
lahf
outsl
aas
adc
pop
outsb
stos
push
add
pop
hlt
cwtl
lret
int3
stos
movsl
push
mov
xchg
xor
pop
xor
fdivrl
xchg
lcall
arpl
fists
and
sahf
xor
adc
dec
pushf
pushf
mov
scas
mov
push
jmp
movl
mov
add
scas
das
fcoms
imul
mov
in
jp
pop
movsb
jp
push
pop
outsl
inc
jmp
test
fs
xchg
add
add
neg
std
sub
dec
in
gs
outsl
add
add
add
hlt
popa
jge
sub
das
dec
jnp
adc
mov
enter
jmp
sahf
mov
xchg
std
dec
mov
mov
inc
in
cli
dec
ljmp
adc
jno
inc
scas
sub
jge
sub
fsubrs
in
fisttpll
repz
mov
sbb
les
sbb
scas
test
mov
subps
shrb
push
push
sub
pop
adc
inc
outsl
and
or
cld
jmp
fcomp
jl
out
jb
vmovmskps
ds
jno
ss
ss
pop
rol
mov
lahf
and
or
push
adc
mov
jp
lods
push
cmp
mov
dec
pop
fistps
pop
out
int3
adc
jp
sbb
xchg
push
fwait
or
pop
xchg
addr16
test
sbb
push
iret
sti
fisubs
jp
enter
push
subb
in
push
mov
mov
fwait
pop
addr16
add
add
add
outsl
ljmp
pop
cmp
cmp
sub
xchg
jmp
xorb
outsl
into
mov
cmpsb
fcoms
pop
cwtl
cmp
cmp
cmp
stc
jnp
cmpl
pop
jbe
push
sub
int3
adcb
mov
and
lock
shl
imul
dec
call
daa
or
lods
cmpsl
sbb
jmp
test
rcl
testb
push
clc
icebp
push
enter
mov
add
cmp
pop
jnp
xor
aam
std
pop
out
mov
bound
jnp
sarl
sub
inc
out
pop
jo
testl
pop
or
push
push
dec
mov
add
inc
lret
aas
cltd
sbb
jp
dec
ds
fsubl
and
and
mov
mov
inc
popf
lahf
mov
les
jmp
xor
lcall
out
sbb
ret
fisubl
add
add
add
sbb
add
mov
push
push
mov
jb
adc
sub
test
dec
add
mov
xlat
adc
push
xchg
mov
or
repz
nop
imul
mov
sub
mov
jp
cli
jmp
mov
js
xor
mov
fnstcw
lcall
dec
lods
or
aam
addr16
mov
adc
movsl
aad
jmp
mov
inc
dec
cmpsb
dec
into
call
int3
pusha
xor
dec
push
pop
mov
clc
shl
aas
into
mov
es
adc
fisubs
daa
test
push
mov
mov
mov
pop
xchg
lcall
xor
in
stos
out
xchg
push
inc
aas
xchg
addb
pusha
mov
push
ret
cmp
cmpsl
gs
add
jmp
addr16
cmp
adc
dec
hlt
dec
inc
popf
mov
or
outsb
daa
sub
ja
mov
repnz
fbld
add
add
add
daa
lcall
and
rcr
iret
fcmovnb
aas
dec
xlat
mov
mov
mov
xchg
pop
and
jns
jne
aad
iret
data16
test
adcl
mov
pusha
xchg
int3
jecxz
in
lahf
pop
cmc
push
orl
xor
inc
add
xor
mov
or
pusha
dec
push
arpl
jne
popa
cld
mov
cmp
aam
fbstp
and
clc
cli
jmp
mov
xchg
out
push
jnp
xor
ljmp
xchg
push
inc
fisubs
push
mov
add
in
jl
mov
and
inc
xchg
inc
pop
or
pop
sbb
in
addl
sub
movsb
cmp
insb
inc
icebp
cmpsl
or
jmp
lret
inc
jns
cmp
mov
mov
mov
push
lcall
sbbl
cmpb
cwtl
cmp
testb
int
mov
jnp
outsl
cmpsb
loopne
add
add
add
add
rcll
mov
adc
rorl
push
cwtl
mov
mov
push
jo
xchg
mov
inc
sub
out
mov
aam
sub
iret
dec
bnd
fmull
and
or
mov
fwait
mov
jo
pushf
pusha
sbb
and
stos
mov
push
cmc
fiaddl
imul
ds
jmp
cmc
mov
dec
mov
cmpsl
jecxz
nop
cmp
insb
xchg
sbb
aam
lahf
or
js
xor
jecxz
sahf
jecxz
pushf
das
inc
inc
xchg
xor
xor
sub
les
pop
testb
and
add
test
mov
cmpsl
sbb
or
xor
sub
lret
fwait
mov
cmpsl
jecxz
mov
or
mov
in
stc
fcom
hlt
xchg
out
pop
loopne
shr
mov
push
mov
push
pop
mov
lahf
sub
mov
dec
enter
add
cli
xchg
jle
push
je
xor
add
add
add
add
dec
jl
jno
insb
test
or
lods
out
lahf
xchg
sub
cmp
cli
sub
punpckldq
orl
add
jno
push
int3
orb
test
mov
mov
outsb
fcmovne
mov
inc
add
loop
rorb
jmp
stos
pop
in
xor
test
mov
sub
sub
cs
mov
sub
and
sahf
mov
adc
xchg
push
xchg
xchg
cltd
aad
cwtl
mov
addr16
lret
cmp
or
lea
cmp
jmp
jno
push
aam
andl
dec
outsl
inc
aas
or
mov
cmpsl
xchg
xor
stc
scas
sub
outsl
inc
jmp
aam
movsl
hlt
rclb
cltd
inc
jg
jne
scas
out
sub
push
ret
sbb
cmp
cld
jns
xchg
lret
add
add
fwait
jnp
aad
sbb
push
nop
addr16
add
add
add
mov
inc
xchg
std
add
ret
dec
out
jge
pop
iret
and
rclb
cld
cltd
dec
enter
orb
leave
sbb
dec
mov
adc
sub
push
cmp
mov
mov
xor
push
bnd
add
xor
pop
test
cmc
fwait
pop
or
mov
lahf
push
inc
arpl
std
dec
xor
test
data16
mov
jae
push
xchg
xor
imul
inc
pop
test
loope
xor
mov
fs
sub
lea
push
or
cmpl
push
dec
add
das
sub
add
inc
fldt
mov
and
popf
stos
lods
cmpsb
cmp
dec
xchg
or
inc
fwait
out
data16
mov
mov
pop
nop
loope
es
dec
mov
pusha
xchg
sti
adcl
add
add
std
mov
sub
ljmp
add
add
lds
out
in
cmc
leave
shl
mov
adc
out
aas
out
mov
mov
pushw
outsb
mov
dec
xchg
hlt
and
outsl
jmp
xchg
xor
xor
push
stc
lea
sbb
sub
scas
std
insb
shlb
jno
leave
xchg
fnstenv
cltd
rorb
sarb
fdivrs
mov
fcompl
insb
jecxz
int3
adc
cltd
repnz
mov
and
ficoms
add
mov
lock
lret
fistpl
bound
xchg
push
insb
xor
xor
das
addr16
jno
or
xor
push
dec
add
cmp
xor
ret
lods
aaa
pop
sbb
mov
out
push
add
ret
sub
adc
rcrb
push
dec
movsb
pop
in
cmp
pusha
mov
fsub
movsl
ja
insl
mov
pop
out
or
push
mov
cmc
adcl
xchg
fisttps
mov
cmp
ja
add
add
add
pop
lret
gs
or
stos
jp
lahf
xchg
int3
jl
movl
fcoml
push
sub
and
cld
dec
fbstp
arpl
push
lret
mov
or
xor
out
in
pop
add
nop
lahf
mov
dec
shrb
in
xchg
fisttpl
cmc
sahf
addr16
pop
jg
mov
pop
and
sarl
pop
push
pop
jecxz
fdivrp
addr16
int3
mov
fmull
sbb
sbbl
shlb
test
leave
sti
cwtl
adc
gs
cmp
sbb
or
sbb
pop
sahf
add
sbb
cmp
out
or
scas
outsl
nop
sub
pusha
cmp
das
out
int
insl
xlat
lds
sbb
pop
je
jle
adc
pusha
dec
pop
xor
lods
xor
push
inc
sarb
mov
sub
or
js
lods
popf
dec
add
add
bound
sub
sbb
js
add
add
add
sub
mov
adc
push
movsl
hlt
sub
rolb
out
cwtl
pop
lret
popa
lret
ret
mov
les
repnz
add
inc
or
lds
push
int
mov
mov
lcall
jp
sahf
mov
bound
mov
xchg
leave
push
cs
mov
mov
sbb
int3
shrl
mov
repz
or
push
test
imul
neg
cs
mov
sti
xlat
mov
fldl
mov
xor
leave
inc
adc
fistps
mov
xor
jmp
xor
shll
mov
xor
mov
xchg
inc
inc
pop
fistpl
test
jno
clc
stc
ds
jp
mov
and
cmp
inc
xchg
cli
repz
stos
sbb
hlt
jg
andb
mov
mov
add
jns
divl
in
sub
addr16
add
add
add
je
add
jmp
out
push
cmp
les
loop
dec
push
ret
in
stos
fiaddl
fmulp
jnp
out
sub
mov
inc
push
inc
imul
cmp
imul
mov
movaps
popa
push
cmpsl
out
pop
in
cwtl
push
mov
sbb
mov
pop
and
es
jnp
les
cmpsl
pop
insb
jecxz
mov
decb
mov
nop
lcall
jo
jb
outsl
jl
mov
pop
mov
jbe
mov
dec
popa
fnstenv
stos
mov
xor
popa
mov
arpl
xor
or
pop
das
push
fidivl
movsl
stc
mov
xchg
pop
hlt
icebp
call
sti
lea
adc
insl
mov
push
dec
add
and
popa
mov
in
inc
adc
xchg
and
js
lahf
cmc
xchg
cmpsb
sbb
push
dec
clc
fisubs
mov
mov
cmc
mov
add
add
add
and
pop
mov
push
movb
pop
dec
mov
call
mov
sub
xchg
adc
push
sbb
inc
rcrb
mov
xchg
xchg
xchg
jge
mov
out
mov
cmp
stos
addb
incb
popa
sub
mov
aad
enter
fcoms
mov
push
shll
sbb
sbb
lods
repz
xor
push
push
and
popl
xchg
out
pop
and
incb
dec
bt
pop
and
xor
jle
cli
mov
push
mov
jle
sub
mov
dec
negb
pop
popa
sub
sbb
push
jle
xor
add
fistps
add
inc
cmp
mov
jbe
xlat
xchg
sahf
insl
int
imul
dec
fwait
push
out
ret
rcll
mov
stos
shrb
addb
add
add
mov
outsl
jne
ljmp
ljmp
add
add
jmp
sub
sbb
insb
mov
adc
sbb
adc
shl
mov
jns
jo
sbb
sbb
adc
pop
js
sbb
js
loope
xchg
mov
adc
mov
lds
scas
push
rcrl
pushf
outsb
mov
dec
push
pushf
mov
sub
aas
xor
xor
test
jecxz
loop
int3
mov
lods
pusha
push
dec
nop
insb
adc
xor
shld
hlt
pop
and
sub
push
cmp
cmpsb
jecxz
cmp
cwtl
mov
cmp
mov
push
sbb
mov
sbb
push
dec
mov
inc
push
ret
add
ds
les
and
inc
jmp
mov
or
inc
imul
xchg
call
leave
cld
xchg
pop
push
imul
push
push
notb
sub
cltd
push
push
push
mov
sub
orb
ljmp
jl
xchg
fst
addr16
add
add
add
push
aas
inc
mov
icebp
test
push
orl
mov
xchg
loopne
andl
xor
mov
iret
push
fmuls
imul
jns
call
dec
mov
cmpsl
lea
adc
inc
data16
arpl
dec
wbinvd
adc
shrl
pop
lret
mov
mov
popa
fsubl
xlat
pop
dec
outsb
xchg
adc
in
pusha
sub
add
pop
xchg
cmp
rolb
fidivrl
test
hlt
cmp
cwtl
movl
mov
xchg
shrb
scas
leave
mov
pushf
push
in
inc
ror
or
icebp
mov
arpl
dec
xorb
push
push
lcall
dec
test
cmpsl
scas
or
pop
push
push
insb
xlat
bound
out
test
in
nop
inc
loopne
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
iret
xchg
ja
or
lcall
mov
or
xchg
sub
push
mov
add
cmp
insb
lret
sub
sahf
adc
push
mov
adc
dec
jmp
test
out
rcll
ja
add
jmp
addr16
lock
pop
sbb
xor
adc
cltd
lahf
daa
sub
in
stc
stos
inc
fs
test
push
pop
add
dec
xor
mov
and
add
mov
xchg
sti
jecxz
jmp
dec
fdivrs
jg
add
lods
adc
f2xm1
fsts
addb
inc
lds
sub
cmp
repnz
sbb
fst
sub
stos
xorb
push
xor
iret
sub
cmp
xor
add
outsl
add
inc
ret
xor
imul
rorb
add
mov
cmpsb
push
sbb
aaa
addr16
add
add
add
les
mov
push
jbe
mov
dec
fstpl
cmc
loope,pn
dec
xlat
pop
dec
cmp
and
lret
dec
scas
les
adc
mov
icebp
adc
xor
pop
in
adc
mov
fcmovne
adcl
jge
shll
pusha
jp
out
cmp
shrl
xor
push
shll
pop
loop
push
push
stc
pop
add
imul
sbb
je
daa
pop
lret
popf
push
add
aas
jnp
aaa
int3
int
repnz
xor
into
jg
scas
push
add
out
mov
push
fucomp
mov
incb
rcrl
push
xlat
cli
xchg
ja
cmp
aas
push
mov
jp
sbb
and
movsb
adc
ret
insl
lock
add
pop
sahf
mov
cmc
hlt
push
ret
sub
pop
pop
cmp
xor
cli
mov
cmp
add
add
add
push
push
lods
test
das
orb
cmp
xor
arpl
lret
ret
cmp
xchg
cwtl
mov
inc
cld
push
dec
sbb
repnz
fcompl
mov
sbb
bound
iret
xchg
pusha
pusha
xor
shll
test
mov
pop
dec
cltd
es
sar
sti
lods
ljmp
mov
leave
add
fildl
jo
repnz
test
popf
stos
movsl
fimull
dec
mov
mov
ljmp
mov
cld
lcall
push
or
popf
popa
js
in
outsb
in
jle
loopne
sbb
insb
push
jb
mov
in
inc
sbb
test
fistps
jae
xchg
mov
iret
dec
scas
std
mov
or
dec
mov
dec
xchg
add
mov
movsl
pop
mov
nop
daa
mov
jns
ret
cmp
xlat
and
mov
pop
cwtl
std
test
lcall
into
or
addb
add
add
mov
cltd
das
out
pop
sarb
inc
dec
pop
fidivs
lock
mov
ja
jbe
push
push
jecxz
pop
jge
inc
push
imul
mov
sbb
aad
inc
dec
repz
ficompl
fimuls
add
adc
inc
imul
test
inc
xchg
sub
and
or
jb
shrb
or
inc
and
mov
fsubl
xlat
mov
rclb
xor
fwait
sbb
add
mov
stos
inc
jg
lret
sbb
cmpl
xchg
pusha
adc
ret
jne
cmpsl
cs
mov
ljmp
lods
insb
sbb
popf
imul
sub
mov
clc
jmp
push
cmp
mov
movsb
out
jb
add
jo
mov
adc
fcoml
adc
movsl
int3
testb
daa
mov
pop
addl
add
xchg
je
pop
insl
pop
mov
gs
shlb
movsb
mov
lods
imul
lea
pop
pop
sbb
cmp
and
push
adc
adc
movsl
imul
rcrl
pop
icebp
lret
push
test
or
cmp
mov
push
xchg
icebp
in
out
push
xor
jg
or
or
aad
ds
jl
mov
xor
push
lret
cltd
mov
imul
dec
push
mov
cmp
scas
cwtl
xchg
enter
mov
popf
aaa
sti
aam
jns
sub
test
mov
add
mov
sub
int
xor
add
dec
push
loopne
pop
inc
cld
rorb
mov
sub
cmp
xor
sahf
dec
das
xor
jae
loop
leave
pop
gs
incb
aad
xchg
loop
pop
fistpl
stos
push
inc
mov
cmp
scas
lcall
adc
sbb
and
addb
add
add
jbe
or
pop
fsts
push
push
cs
outsl
push
insl
movsb
test
pop
ja
push
repz
sbb
and
jge
sub
in
jb
push
and
xchg
dec
into
lahf
out
movsl
xchg
and
pop
mov
cs
mov
loope
ret
push
or
fmull
push
mov
movsl
or
mov
mov
sbbl
and
xchg
sti
jo
mov
aaa
mov
leave
pop
dec
fwait
mov
in
movsl
sbb
pop
inc
cltd
pop
jl
jbe
and
sbb
lea
imul
jle
movsb
jb
mov
aad
and
xchg
adc
and
cmp
into
insb
cmp
and
shl
test
sub
popf
and
fstps
mov
sbb
inc
jl
out
jg
cmp
mov
arpl
mov
mov
jl
cs
idiv
jne
iret
xor
mov
add
add
add
sub
and
and
call
fdivr
sub
popf
iret
dec
divl
pop
pop
add
neg
js
js
shlb
jnp
add
mov
jecxz
out
lahf
nop
and
mov
xor
inc
and
stc
adc
daa
mov
pop
daa
movsl
daa
xchg
loopne
inc
bound
lret
adc
xor
cmpsl
out
cmp
fdivl
imul
pop
rcrb
ficoml
ja
jbe
imul
insl
mov
ss
loop
inc
xor
int
mov
hlt
mov
daa
pop
ds
daa
dec
sbb
sbb
push
sbb
pop
dec
push
sbb
add
mulb
aaa
sub
or
xor
sub
and
and
sti
xchg
call
xor
jl
lods
or
xorl
mov
add
imul
add
xchg
pushl
sub
loopne
xor
test
add
add
add
jle
cmp
xchg
gs
je
cmpsl
fxch
jbe
lret
fidivl
ss
adc
mov
xlat
add
inc
mov
xor
pop
repnz
sub
roll
jp
pop
in
jge
and
push
stos
dec
hlt
mov
jo
xor
push
jnp
pop
andl
bound
push
sbb
int
mov
push
adc
fisubl
bound
mov
bound
aaa
std
jle
add
fs
push
sub
outsb
mov
or
lds
push
jno
js
add
sarl
jb
testl
cmp
rorb
icebp
mov
add
jnp
lds
gs
mov
cmp
jbe
sbb
es
sbb
jb
jbe
add
push
pop
movsl
test
xchg
jmp
test
mov
xchg
scas
inc
jle
sbb
sub
mov
jge
std
sti
iret
ss
push
jno
mov
xchg
test
add
add
add
jge
mov
cmpsl
iret
mov
inc
repnz
jmp
aam
inc
lds
adc
jnp
dec
pop
sbb
push
xchg
sub
lods
push
mov
pop
hlt
mov
jae
pop
ret
out
orl
mov
jmp
xchg
cmc
arpl
sbb
add
lea
cmp
mov
adc
xor
and
or
jb
inc
mov
ficoml
test
and
sub
sahf
add
je
push
mov
pop
mov
clc
mov
fdivr
mov
pop
mov
scas
mov
rorb
jmp
ja
push
lcall
mov
xchg
pop
aaa
xor
stc
enter
inc
lea
jb
cmp
add
mov
sbb
push
daa
cmp
mov
push
sbb
or
pop
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
into
fildll
add
add
mov
mov
mov
out
mov
xor
adc
ret
xchg
push
stos
stc
insl
ss
repnz
or
fistps
inc
sbb
or
xor
inc
add
push
xor
andb
ficompl
ja
dec
out
xor
xchg
jmp
test
jg
lret
leave
fildl
or
push
mov
loop
mov
sti
xor
jle
imul
loopne
fldenv
mov
push
xor
sti
out
subl
lahf
or
mov
mov
push
pop
push
fwait
sub
lahf
clc
test
insb
xlat
jb
xor
cmp
jg
cmp
push
push
stos
pop
mov
mov
pop
movsl
cmpsb
cmp
addr16
shlb
mov
ljmp
mov
mov
mov
test
xchg
add
add
add
sti
push
fbstp
jp
loop
leave
push
pop
fsubrl
xor
lahf
ljmp
and
and
xor
iret
int
jg
push
mov
cmp
stos
pop
jp
decb
xchg
mov
and
cs
dec
dec
ja
sbb
sub
inc
push
jnp
inc
jns
jecxz
dec
std
fwait
mov
adc
sub
rorl
les
jmp
adc
mov
cli
scas
dec
dec
in
dec
dec
fdiv
cmpsl
cmp
call
aad
lahf
mov
dec
mov
pop
xlat
icebp
inc
int3
js
aad
sbb
lock
cltd
dec
sub
push
lods
jo
arpl
cmc
pop
cmp
int3
adc
and
lcall
clc
lcall
bound
xor
mov
cmp
call
xchg
sahf
dec
fsts
jae
mov
add
add
pop
test
ljmp
lock
xchg
sarb
ret
add
add
add
inc
jo
lahf
inc
rcll
lcall
mov
mov
dec
stc
les
sub
pop
xor
dec
ja
or
fs
test
ja
lcall
imull
jp
pop
hlt
mov
mov
daa
cmp
dec
mov
mov
dec
lahf
pushf
or
mov
mov
incb
lcall
fwait
jle
imul
cltd
nop
std
fnstenv
dec
leave
out
mov
or
rolb
jecxz
or
out
sbb
add
pushf
sbbb
sbb
lods
mov
das
popa
fisubs
push
mov
push
enter
jb
add
mov
lods
repnz
add
jle
pop
test
pop
roll
xchg
mov
idiv
xchg
cld
pop
lret
js
jge
xor
add
add
arpl
jnp
sbb
push
xor
xor
mov
add
add
add
mov
mov
les
push
jnp
adc
xchg
xchg
test
rcll
cwtl
sbb
sti
fcmove
scas
iret
test
sub
xchg
cmpsb
adc
sbb
roll
add
ljmp
in
shrb
popa
test
lea
lret
jp
in
mov
and
pop
daa
je
mov
cmp
das
pop
cwtl
push
cwtl
cmp
icebp
jecxz
push
pop
jne
mulb
stos
adc
or
cmp
sti
jne
lds
push
adc
scas
lahf
or
xor
lahf
das
andb
push
and
ficoms
xchg
adc
mov
fwait
mov
stc
rcll
ss
jp
pop
scas
fnstsw
inc
lahf
mov
sbb
test
std
gs
inc
das
out
out
mov
ret
and
jl
pop
cmp
mov
add
add
aas
or
mov
movsb
mov
cltd
mov
add
add
add
sbb
pop
enter
inc
xchg
je
lds
cmp
orl
push
jne
movsl
hlt
pop
fcoml
mov
aad
or
push
sub
pop
lret
call
push
inc
add
stos
dec
jg
pop
pop
mov
sti
pop
cmp
and
push
push
imul
idivl
push
cmp
cwtl
mov
cmp
into
jae
loope
pop
pop
scas
xchg
aas
push
inc
scas
push
cmc
ja
cld
mov
pushf
out
and
jnp
fstpt
cwtl
cmp
pusha
mov
shll
repnz
out
adc
jne
popa
hlt
lock
mov
sahf
jle
lea
inc
mov
out
or
scas
in
push
and
and
dec
jg
mov
not
in
or
pop
xchg
orb
cs
xchg
hlt
aaa
jno
mov
das
jns,pn
sbb
fistps
ljmp
add
add
push
outsb
fisubs
test
jne
fsubs
add
add
add
jmp
addb
lret
enter
arpl
ret
out
leave
scas
shll
ss
mov
or
push
or
sbbb
mov
pop
mov
xchg
sbb
mov
dec
lds
mull
adc
or
out
push
sub
dec
mov
mov
jae
or
xor
cld
aam
pop
cltd
mov
fisubs
mov
cmp
repnz
mov
rcll
inc
ficomps
xor
ficoms
mov
mov
insb
push
adc
dec
cmpsl
pop
movsl
jno
sub
ret
lret
test
adc
pop
inc
cmp
jo
cs
push
jge
scas
roll
sub
and
pop
into
jo
mov
sub
shrb
repz
mov
push
inc
jmp
gs
inc
cltd
dec
add
jp
cmp
mov
jns
iret
fcomps
add
add
ret
out
add
fadds
and
pop
add
jo
lock
and
inc
push
je
or
call
push
mov
fisubrs
cmc
shrb
in
push
cmp
pop
es
imul
add
dec
sbb
pusha
rcrl
mov
icebp
insb
pop
leave
mov
mov
or
sub
lods
jne
and
repz
fsubrl
stc
insl
mov
push
jnp
outsb
or
mov
fwait
decl
or
rcrl
adc
ds
push
addr16
and
pop
sub
jo
inc
dec
add
sbb
sbbb
enter
loope
pop
and
sub
hlt
lock
inc
xor
sub
sbb
popf
mov
out
xor
push
adcl
add
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
push
jb
test
add
add
add
jo
xor
dec
sbb
sbbb
sbb
or
neg
ror
pop
cmp
pop
mov
inc
xor
imul
mov
movsb
cmc
push
mov
inc
jbe
aaa
fcmovbe
sbb
fsubs
lods
in
mov
xchg
lcall
pop
cmp
cmp
xor
ror
clc
addr16
test
cmp
cmpsb
subl
ret
dec
aam
mov
mov
mov
jp
mov
xchg
dec
cmp
sub
dec
adc
sub
mov
test
and
pop
adc
and
out
fwait
mov
aam
lahf
inc
sti
cli
push
cmp
pusha
call
cmpb
insb
out
xor
lds
or
or
ljmp
test
loop
mov
ret
fmull
daa
rcll
in
lcall
ljmp
rolb
add
add
adc
std
out
ljmp
mov
add
add
add
fwait
cmpsl
addb
adc
nop
mov
mov
mov
sti
lcall
push
mov
jbe
mov
pop
ljmp
mov
int
movsb
adc
sbb
test
push
add
aas
imul
icebp
push
cmpsb
xor
jb
add
mov
dec
cmp
inc
mov
fnsave
lods
inc
add
or
xchg
cmpsb
ljmp
adc
cli
mov
sub
pushf
mov
out
test
mov
adc
in
outsb
inc
lea
and
js
cmp
push
xor
iret
das
mov
and
adc
jnp
scas
das
pop
lods
insb
or
mov
inc
test
inc
mov
jle
int
jne
mov
xor
repz
int
leave
sub
sbb
jle
lods
jmp
add
add
nop
int
or
addb
add
lods
les
jnp
mov
icebp
aam
stos
mov
add
add
jb
test
mov
andb
mov
lahf
xchg
test
repz
mov
aas
pop
cmpsl
jmp
adc
sbb
sub
lahf
fs
xchg
cs
out
ljmp
mov
push
mov
fwait
repz
and
cmc
sti
pop
jle
push
adc
movsb
adc
mov
push
test
and
mov
pop
mov
inc
mov
fwait
mov
push
xor
push
iret
mov
mov
pushf
cmp
movb
idivb
jne
hlt
test
or
js
fbstp
cmpsl
push
out
xchg
xchg
nop
and
mov
negl
lret
ss
clc
mov
jecxz
xchg
out
popf
push
cmpsb
sti
stos
jne
push
jmp
out
or
sbb
out
fimuls
adc
imul
and
mov
ljmp
sbb
out
lret
leave
xchg
arpl
mov
push
ss
jne
add
add
les
fcomps
add
nop
add
add
add
mov
add
mov
cli
add
daa
push
adc
pop
xchg
inc
cmpsb
sub
add
cli
sub
daa
pop
xchg
jne
imul
imulb
mov
push
fidivs
es
xor
in
stos
loop
stos
out
or
mov
lahf
popa
push
mov
repnz
add
add
xchg
fs
or
pop
mov
inc
mov
scas
ds
bnd
mov
ljmp
fisubl
ljmp
sti
std
rcrb
sub
mov
loopne
adc
xchg
and
jbe
imul
test
push
push
jmp
dec
loop
xor
scas
dec
cmpsb
lret
sub
out
fstpl
jns
mov
lahf
cmpsl
fcom
jle
mov
push
or
add
test
cmp
sarb
pop
inc
jge
divl
adc
and
add
insb
xor
lock
aaa
xchg
inc
inc
ljmp
dec
mov
std
inc
addr16
add
add
add
push
jp
jecxz
daa
sbb
pop
ss
std
dec
mov
mov
insb
es
sub
mov
lret
dec
int3
and
divl
mov
rcll
and
xor
les
push
xor
push
addr16
aaa
ja
aad
jns
loopne
fistl
jmp
loopne
bound
popa
lea
data16
mov
sbb
cmpsb
rolb
mov
add
sub
ja
jnp
or
mov
mov
pop
inc
or
ficoml
fstps
xchg
xchg
inc
or
in
and
rcr
cmp
mov
push
xor
in
aaa
xchg
pop
repz
out
repz
pop
dec
jle
out
repz
xchg
aam
mov
dec
cmp
cs
cmp
mov
xor
cwtl
imul
addl
add
add
aaa
shlb
cmc
div
testl
push
addr16
add
add
add
xor
cs
ds
jp
fs
push
repz
push
cs
mov
mov
push
imul
inc
inc
dec
ret
mov
mov
mov
sub
movsb
jns
xchg
test
icebp
xchg
aas
dec
adc
xchg
in
push
or
push
aas
sbb
jmp
mov
mov
xchg
and
fsubr
sub
xor
repz
leave
call
call
out
movsl
xchg
pop
add
push
lods
rcrb
jp
fwait
dec
push
fisubrs
xchg
std
arpl
xchg
sbb
sbb
jl
clc
test
xchg
mov
loop
arpl
out
fistpl
cwtl
cmc
jns
sbb
mov
sbb
pusha
insl
fcoml
movsl
icebp
mov
pop
mov
insl
cmpsb
negb
loopne
cmp
mov
outsb
inc
pusha
pop
push
nop
push
sahf
rcr
pop
adcb
gs
mov
addr16
add
add
add
sub
stos
and
fistpll
outsl
mov
shll
jno
sbb
dec
test
lea
inc
je
pop
lock
xchg
test
pushf
fcmovnb
fs
or
mov
cmp
lock
in
inc
mov
and
mov
push
scas
and
int3
addl
mov
jmp
dec
add
sub
jp
cmp
mov
stc
mov
inc
xor
ret
fwait
mov
and
mov
hlt
fstl
das
lock
stc
popf
push
jne
push
push
repz
jno
mov
notb
cs
xor
cltd
pusha
stc
popf
stc
cmp
daa
arpl
cli
das
es
cld
dec
pop
dec
add
xchg
adc
inc
mov
adc
adc
fcmovu
popf
sbbb
ja
or
aas
insl
test
mov
mov
mov
jl
jae
popf
popf
shll
cmpsb
jcxz
fimull
addr16
add
add
add
in
rorb
pop
dec
out
push
or
xchg
and
ds
pushf
mov
std
jae
mov
fdivrp
fwait
dec
cmp
rcl
pop
bound
and
mov
add
int3
aam
out
mov
sbb
xchg
fildll
sub
push
mov
or
cmp
je
fs
ret
leave
scas
gs
and
inc
repz
aad
push
div
jb
ret
sbb
addr16
jmp
lret
jmp
xlat
lret
sub
daa
jns
dec
imul
pusha
sub
dec
fcomps
push
mov
test
data16
sub
sub
dec
insl
inc
nop
bound
int3
push
pop
mov
dec
dec
setp
fimull
fstpt
pop
cld
adc
jg
mov
push
test
mov
shrl
sti
bound
cmp
adc
imul
int3
and
clc
jnp
jg
in
cli
enter
push
adc
addr16
add
add
add
cmc
dec
js
dec
sbb
and
aas
in
rcr
pop
jb
add
pusha
clc
push
jmp
mov
std
scas
sbb
dec
push
xor
xorl
adc
mov
sahf
incl
nop
pop
js
scas
inc
icebp
lds
add
lock
shlb
sbb
xchg
lds
adc
and
mov
outsb
nop
mov
pop
xor
push
dec
fdivrl
sahf
inc
sub
inc
fwait
mov
mov
dec
dec
jno
imul
and
loop
inc
xor
icebp
jecxz
popa
cmp
stc
lret
call
or
xchg
jge
push
out
and
pop
sbb
xchg
lods
adc
call
mov
pop
scas
xor
movsb
fwait
sub
xor
outsl
cld
pop
dec
ret
jmp
jnp
xorl
sbb
mov
addl
add
ljmp
cld
gs
mov
addr16
add
add
add
mov
dec
cmovo
fisttpll
push
mov
push
jne
inc
or
sub
add
mov
add
jle
pop
push
xor
pop
fst
mov
or
les
push
pop
adc
lods
jecxz
push
jne
mov
shr
js
adc
mov
push
adc
ret
inc
into
int3
stc
std
push
inc
xchg
imul
es
xor
lods
ja
out
or
inc
pop
lret
gs
jne
pop
inc
scas
inc
popf
xor
aaa
pop
repnz
repz
and
fsubrl
push
enter
xrelease
mov
mov
cmp
rolb
sti
pop
pop
add
ds
sahf
dec
sub
rorb
cltd
push
xchg
ret
aas
lds
std
jnp
mov
dec
rol
xor
dec
cmp
cwtl
and
popf
adc
sti
cmp
jp
scas
and
cli
and
cmpb
scas
xchg
into
ret
push
jl
sar
std
jle
pop
popf
scas
push
mov
add
add
add
aas
mov
mov
xor
shrb
hlt
sarb
call
cmp
mov
pop
mov
dec
jmp
loop
or
push
push
jg
sbb
lcall
loop
and
sbb
dec
push
xor
and
cmp
mov
rcll
inc
shlb
pop
dec
outsl
popa
sbb
cmp
hlt
enter
pop
or
sub
lds
pop
adc
mov
cmpsb
mov
dec
fstpt
push
add
roll
cltd
sub
xor
std
loopne
test
jb
into
lock
pop
push
lock
addr16
popf
jno
push
mov
adc
ficompl
sar
push
lock
dec
cmp
xor
int3
pop
aaa
ja
dec
in
cmpsl
icebp
js
adc
cs
or
jl
add
sbb
stos
xchg
cmc
outsl
sbb
push
loop
add
add
cwtl
or
stos
xchg
cmp
in
mov
in
addr16
add
add
add
inc
mov
call
stos
mov
mov
pop
test
into
neg
mov
jae
sub
xchg
pop
mov
or
testl
rclb
and
push
lock
xchg
scas
push
cmpsb
push
mov
xchg
insl
imul
cmpb
jp
roll
lods
pop
push
iret
inc
adc
sub
inc
xchg
test
and
mov
xchg
mov
push
outsb
push
fisubl
fs
push
fcmovne
mov
mov
fstl
pop
ret
mov
lods
cmp
mov
js
addr16
in
popf
mov
xor
mov
or
ret
enter
xchg
xchg
jmp
hlt
xchg
and
scas
loop
push
inc
mov
fistpll
pop
outsl
sub
and
pop
das
pop
mov
inc
sub
dec
sbb
imul
cld
leave
movsl
and
jle
fwait
and
popa
mov
xorl
addr16
add
add
add
lods
mov
popa
cmp
es
ja
mov
push
mov
xchg
jbe
fildll
ss
mov
dec
icebp
mov
outsl
xchg
push
push
mov
enter
test
xchg
adc
nop
fs
pop
outsb
jo
scas
mov
inc
rorb
mov
pop
adc
aaa
sub
add
cmpsb
adc
imul
push
subl
add
push
mov
lret
mov
mov
push
adc
icebp
xor
pop
xchg
inc
xchg
inc
movl
xchg
insl
mov
add
ljmp
movsb
fcmovne
ljmp
inc
mov
int3
repnz
xor
dec
sti
push
popf
jp
mov
and
notrack
mov
lcall
push
and
xlat
aas
dec
sbb
or
addr16
lret
pop
cmp
xchg
mov
mov
xchg
iret
adc
out
outsb
test
imul
out
cltd
fmuls
popa
and
xor
jns
test
fxam
rclb
sub
int
mov
xor
push
adc
aas
xor
repz
add
imul
popf
pop
dec
sbb
shrb
and
inc
jg
push
mov
pop
sbb
dec
xlat
test
jmp
or
push
push
adc
ds
mov
mov
gs
shrl
or
and
sarl
decb
fdiv
inc
out
or
push
ss
int3
or
pop
fdivl
outsl
mov
xor
mov
or
mov
jp
add
hlt
dec
push
loope
jmp
mov
cmp
arpl
sub
imul
outsl
vmwrite
hlt
addr16
add
add
add
cwtl
mov
ret
xor
stos
jb
xor
aas
fdivrl
sub
xchg
ljmp
push
addr16
dec
mov
or
pop
dec
adc
sub
mov
jnp
loope
and
jecxz
iret
fsubrs
mov
cltd
jle
jge
and
popa
mov
dec
jge
pusha
loop
jge
push
pop
mov
call
lds
stos
nop
sbb
cld
mov
mov
xor
add
mov
mov
dec
ret
jl
cmp
adc
and
fcomp
mov
inc
pop
bound
cmp
mov
and
sbb
scas
ret
jmp
test
push
push
jnp
outsl
xor
jns
xchg
daa
stos
xor
mov
adc
cmp
mov
adc
sbbl
popl
insb
sbb
pushf
add
add
add
pop
lcall
es
inc
xor
out
shrb
sbb
ret
pop
pop
xor
xchg
fisubl
imul
mov
xchg
sbb
aam
es
int
fwait
cmp
scas
cmp
adc
adc
pop
hlt
daa
rcll
clc
out
mov
adc
sbb
jns
and
inc
adc
je
xchg
sbb
mov
jl
mov
push
jb
inc
js
out
dec
cmp
mov
out
jns
inc
shrl
jnp
fimuls
jno
cmp
fiaddl
leave
pop
testl
or
enter
sub
dec
push
and
clc
scas
push
inc
jo
mov
fsub
xor
fs
and
xchg
push
push
aad
je
cltd
cmp
mov
cmpsl
bound
mov
daa
scas
loopne
pminub
in
mov
mov
imul
movsb
and
insb
cmp
addr16
add
add
add
sub
sarl
xlat
xor
ret
dec
test
mov
out
ficompl
push
dec
and
pop
jp
stos
push
sub
in
cmp
xchg
xchg
jns
stos
mov
addr16
es
mull
vmwrite
pop
xor
add
ds
add
xlat
scas
fadd
add
pusha
fdivl
adc
jl
popf
sbb
mov
jnp
xchg
xchg
mov
orl
jmp
sub
int3
les
mov
shl
adc
shr
lret
sahf
out
lret
pop
les
mov
push
mov
mov
fldt
sbb
xlat
xchg
leave
fincstp
add
aam
adc
add
mov
into
popf
lret
xchg
divb
jmp
jecxz
js
out
aam
lret
movsl
cwtl
cmp
popa
push
stos
xchg
lock
bound
inc
xor
add
add
mov
sub
lahf
mov
sahf
add
add
add
dec
insb
adc
inc
mov
jns
js
rorb
call
and
dec
or
lods
push
inc
aad
nop
push
mov
insb
mov
aas
dec
cmp
add
sbb
test
out
imul
dec
cmp
daa
jbe
insl
popf
popa
test
or
daa
aas
jecxz
xor
dec
push
imul
gs
sub
scas
and
or
repnz
daa
fisubs
mov
or
rorb
or
add
xor
xor
js
inc
loopne
sub
mov
testb
push
shll
inc
add
sbb
mov
push
inc
daa
imul
dec
jp
sbb
outsb
xor
cmpsb
pusha
sub
sbb
sbb
montmul
cmpsb
add
push
pushf
mov
cltd
sub
out
inc
sub
or
pop
adc
add
add
add
lds
inc
mov
jp
sub
rcrb
pop
jge
pop
fs
imul
fldl
cmpsb
rcrb
cmp
mov
xchg
push
les
or
mov
test
push
xchg
pop
ret
ljmp
adc
test
push
outsb
push
or
jge
inc
lret
dec
push
fistl
ss
xchg
add
enter
sbb
jno
test
adc
sarl
fsubr
mov
lret
aas
sub
jbe
inc
mov
and
stc
out
aad
mov
fnstcw
data16
jmp
mov
fneni(8087
mov
fucom
pop
inc
mov
lahf
or
rcrb
pop
fs
stos
push
or
push
out
inc
pop
out
mov
sbb
jmp
cwtl
fdivl
mov
out
mov
fsubp
out
lea
add
loop
test
mov
cld
mov
addr16
add
add
xchg
inc
and
ljmp
jg
in
arpl
loop
andb
sbb
pop
int3
mov
repnz
push
test
int
mov
cmp
mov
into
data16
fistpl
mov
enter
in
jp
jbe
fmuls
movsb
mov
lret
test
sbb
mov
adc
inc
mov
xor
push
xor
ret
fsubrs
lea
rorl
and
pushf
push
testl
inc
jbe
adc
lock
cmp
repnz
inc
test
mov
fisubrl
xchg
push
fmul
ss
add
shlb
test
adc
cli
pop
cmp
push
dec
sub
int
inc
stc
push
ljmp
inc
dec
or
loopne
movsl
pop
mov
mov
xlat
or
lcall
adc
addr16
add
add
jmp
hlt
stos
dec
popf
mov
insl
cmp
es
sbb
xchg
sti
es
orb
and
gs
xchg
xor
xor
sahf
insl
dec
add
ss
inc
test
imul
test
sub
dec
rcrl
mov
mov
mov
loopne
enter
fsubrl
xchg
insb
jno
adc
jecxz
lcall
add
sbb
sub
sbb
mov
dec
inc
sti
sub
jnp
popf
mov
stos
ds
bound
inc
ss
adc
out
and
test
dec
pop
xor
decl
jg
jp,pt
pop
les
push
sbb
pop
pop
out
frstor
mov
lcall
and
scas
loop
repz
testb
rorl
cmp
add
add
mov
inc
inc
add
mov
add
or
outsl
test
pop
inc
gs
mov
inc
sbb
xor
mov
xor
adc
popa
sbb
arpl
clc
lret
xor
lea
pop
xor
dec
flds
mov
adc
lods
test
sbb
sub
push
push
push
xchg
jb
movb
jg
test
mov
cmp
daa
insb
icebp
into
cmc
mov
mov
hlt
jae
inc
pusha
or
jecxz
push
xor
movsb
mov
cmp
scas
or
mov
jne
dec
inc
jl
or
daa
ds
lock
out
fcomps
lock
dec
pop
cmp
fsubs
xchg
pop
xchg
fadd
aas
les
adc
nop
or
jmp
xchg
out
std
sarb
inc
xor
in
aad
xor
or
dec
ret
sti
cld
jl
sarl
pop
and
mov
ja
add
add
std
inc
mov
mov
add
add
add
sbb
adc
popa
out
mov
xchg
pushf
adc
popf
jp
jae
or
xor
sub
fwait
dec
pop
insl
xor
loop
dec
int
sti
cmpl
xchg
mov
sbb
adc
cmp
loop
adc
jmp
les
push
or
in
sbbb
je
repnz
js
loope
cmc
jbe
mov
cmp
xchg
adc
push
loope
test
cmp
pop
mov
or
aas
insb
aad
pop
jnp
aas
mov
xchg
lods
jne
popf
or
or
jle
sahf
data16
mov
inc
pop
shll
pop
jbe
popf
outsl
pop
popa
loope
scas
cmp
rcrb
sub
outsb
mov
insl
repnz
jg
jmp
je
xchg
mov
neg
in
jmp
sbb
jne
xchg
xlat
dec
jbe
mov
test
cltd
and
pop
pop
les
add
add
inc
fdivl
push
dec
mov
movsb
add
add
add
push
dec
cli
sub
dec
cmp
or
iret
lods
inc
int3
sti
xor
int3
xor
mov
push
mov
ret
sub
mov
cmp
push
jo
stos
xor
push
adc
push
shlb
lcall
jmp
xchg
inc
xchg
js
push
sbb
test
pop
mov
cmp
cmp
ret
push
mov
or
jb
mov
stos
or
into
and
lods
mov
add
push
sbb
std
in
jb
outsl
sbb
sub
lock
popf
inc
push
jns
mov
in
cwtl
cmp
jo
mov
pop
nop
out
xor
push
or
pop
push
out
into
mov
inc
add
data16
xchg
cwtl
cmp
and
mov
inc
pop
test
mov
test
mov
xor
cmp
and
std
dec
push
push
inc
push
dec
aas
adc
mov
sbb
movsl
add
add
add
jo
sub
cmp
imul
test
adc
cmpsl
add
stos
sarl
cli
dec
dec
out
sub
jle
sarb
jl
jge
pop
jb
incb
clc
sub
scas
push
jnp
add
mov
daa
adc
adc
cmp
lds
pop
aad
leavew
push
cmpl
cmc
in
outsb
jne
jmp
outsb
cltd
xor
mov
aam
psrlq
mov
mov
fisubs
into
sahf
ja
add
pop
add
mov
dec
repz
ja
push
pushf
or
movsb
mov
paddsw
and
daa
pop
int3
loope
push
popf
inc
es
inc
iret
mov
aam
sbb
cld
mov
xchg
movsb
mov
scas
lret
repz
lahf
sub
ljmp
xchg
add
imul
jl
and
fdivrl
xor
pop
test
stos
hlt
jmp
cmp
jbe
aas
push
aas
cmpsb
add
add
add
xchg
sub
adc
pop
adcl
inc
sbb
dec
shr
sbb
imul
sbb
and
ss
jbe
adc
cli
fwait
rcll
test
fs
sub
push
and
dec
mov
jo
sbb
mov
push
fwait
or
sbb
insb
mov
movsb
mov
or
push
jg
cwtl
and
inc
adc
mov
inc
cld
ljmp
inc
xchg
adc
shrb
push
pop
dec
ds
popa
call
mov
cltd
icebp
dec
pushf
fcomp
jnp
stos
outsl
mov
das
sbb
add
dec
pop
or
cmp
add
dec
shrl
dec
xchg
pop
dec
fsubrs
sbb
outsb
sbb
mov
push
push
inc
pop
pusha
mov
ja
mov
ss
cmpsb
mov
push
lahf
dec
cld
hlt
xor
or
ljmp
add
add
out
xlat
out
jg
in
xor
fldenv
add
cmpsl
add
add
add
or
mov
rorb
or
in
adc
mov
in
cmp
mov
or
mov
sub
aas
push
sbb
dec
xchg
sbb
aad
inc
mov
push
xor
hlt
cmp
add
or
pushf
int3
inc
gs
sbb
sub
cmpsl
mov
mov
and
cs
cmp
and
das
and
cmc
sbb
into
int
adc
xchg
in
shll
data16
xchg
dec
dec
lcall
xchg
test
idiv
jl
icebp
add
jg
xchg
ds
int
jle
testl
shrl
aam
cmc
xor
lret
mov
out
mov
xlat
in
fidivrl
fidivs
and
sarb
js
xor
jnp
mov
xlat
jnp
sbb
in
ror
push
les
outsl
sub
lahf
ror
inc
mov
test
sbb
pop
fbstp
fldl2e
dec
outsl
pusha
addr16
add
add
add
loop
jecxz
or
sti
sbb
add
std
adc
into
outsb
pusha
pop
and
ret
mov
push
std
mov
cmp
xchg
bswap
into
test
fsubrs
into
fs
dec
test
inc
enter
xchg
pop
cmpsl
fsubrl
jecxz
insl
fimuls
jecxz
out
jmp
out
xchg
gs
mov
pushw
into
scas
mov
xchg
mov
bound
test
shl
pop
xchg
cmp
aam
dec
sarl
jno
push
sub
mov
mov
and
mov
sub
xchg
dec
repnz
pusha
cwtl
dec
cmp
dec
pop
aad
cmpsl
lds
jne
dec
scas
xor
xrstors
idivb
sahf
cmpb
dec
fadd
lock
call
jo
and
lock
fists
adc
add
add
mov
fadds
addr16
add
out
insl
xchg
push
inc
scas
push
rcrb
inc
and
add
add
daa
mov
jae
subb
pusha
inc
add
jmp
adc
ja
sbb
pushf
addl
sub
xchg
mov
pusha
decb
inc
mov
shrb
movsb
mov
ror
sbb
jmp
mov
jmp
hlt
fcomp
dec
adcb
fisttps
fisttps
mov
or
adc
jge
outsl
jmp
sub
mov
sbb
dec
xchg
and
and
outsb
insb
add
mov
push
pop
jb
out
mov
insb
fnstenv
ret
or
stos
call
fwait
sahf
xchg
mov
pop
push
out
pop
es
lcall
sub
loop
in
lock
add
fwait
dec
xchg
push
scas
jnp
sub
loope
mov
jmp
pop
mov
xor
mov
add
add
mov
push
sti
jmp
push
mov
testb
icebp
fbld
add
add
add
jge
mov
sbb
push
sbb
cmp
pop
lahf
pop
addr16
jp
xlat
mov
xorb
out
mov
mov
stos
add
adc
adc
loopne
jg
jno
ja
repz
cmp
dec
outsl
jge
les
xchg
and
repnz
dec
repz
xchg
sahf
cmp
fs
adc
sub
sbb
push
stos
dec
pop
xor
inc
fmull
hlt
mov
int3
stos
pop
nop
in
add
or
mov
jne
rcll
in
out
dec
dec
mov
cwtl
mov
enter
test
inc
cmp
sbb
and
push
in
dec
xchg
xor
daa
adc
sub
leave
push
xorb
sub
pop
mov
inc
movsl
sbb
mov
jecxz
lock
mov
add
add
add
lret
call
cld
fadd
or
cmp
mov
pop
xrstor
aas
unpckhps
sahf
icebp
sbb
shlb
push
adc
mov
cmp
cmp
mov
mov
push
mov
outsb
push
daa
testb
int
ds
scas
cltd
aam
push
xchg
and
jbe
lods
ret
jae
es
sub
sbb
mov
cli
testl
cmp
lods
loop
lods
cmp
aam
push
push
rdpmc
fld
mov
push
fldl
mov
jae
rcll
sbb
xchg
mov
jbe
lds
nop
mov
cmpsb
or
mov
bound
cmpsl
imul
pop
mov
jl
cmp
jle
mov
rcrl
add
pop
popf
fidivrl
pop
stos
mov
push
and
cwtl
es
je
inc
outsb
adc
mov
cld
mov
leave
cmp
clc
lods
add
add
add
pop
cmp
adc
test
movsb
dec
scas
arpl
negb
mov
xor
mov
pop
or
mov
lea
jae
pop
orl
push
sub
fisubrl
cmc
inc
xchg
push
into
xchg
test
xor
xchg
mov
sbbl
ds
outsl
inc
or
pop
lods
lods
inc
aaa
not
leave
add
arpl
push
push
sub
push
stos
jno
addr16
sti
sub
iret
ljmp
das
mov
insl
xchg
outsl
bound
es
and
dec
pop
hlt
mov
push
dec
sbb
cmp
add
ds
jbe
mov
leave
cmpsl
ret
stos
stos
sarl
cmpsl
push
cltd
adc
fidivrl
jnp
lahf
jmp
lret
mov
cmp
ret
push
or
lock
add
mov
dec
das
pop
out
cmc
mov
test
rcrb
lods
add
add
add
and
lcall
dec
push
clc
inc
call
int3
scas
add
stos
sbb
das
xchg
fisttpl
jecxz
sub
rorl
out
addb
lret
sub
pop
ja
jge
adc
fldcw
sbb
test
testl
push
xchg
cmc
inc
test
scas
or
sbb
jns
sbb
int
pop
lea
or
adc
cmp
xlat
es
ret
mov
insl
or
outsb
jg
in
pop
sahf
and
fsubr
mov
mov
sbb
cmp
jmp
mov
test
jmp
adc
lock
xchg
mov
je
nop
das
cmpsl
dec
push
inc
test
and
add
and
nop
add
dec
xor
ja
adc
dec
scas
je
xchg
xchg
pop
das
dec
xchg
mov
sahf
nop
dec
lea
add
out
std
dec
std
pop
lcall
xchg
pop
push
dec
sbb
add
add
add
mov
jle
mov
add
insb
xchg
daa
pop
adc
jb
out
lock
push
and
out
ret
aad
cwtl
cmp
mov
test
xor
out
cmp
in
jae
idivb
ffreep
inc
jl
cmp
jnp
imul
dec
lcall
cmc
fcoms
outsb
int
sarl
jb
mov
into
pop
cmp
cwtl
jg
rcrb
push
fs
pop
sbb
inc
push
lcall
xchg
jl
cmp
mov
add
push
lret
aas
inc
bound
xlat
mov
in
xchg
mov
pop
notl
inc
int
cltd
call
push
pop
cmc
mov
cmpsl
mov
roll
pop
cmp
inc
lret
mov
cli
push
outsb
sahf
push
daa
gs
aad
popf
cmp
mov
push
bound
repnz
cmp
ljmp
add
add
fidivs
loop
ljmp
sahf
stos
mov
add
add
test
cli
dec
xchg
call
adc
inc
jne
sub
inc
fisttpl
pusha
int
std
jnp
jno
stos
pusha
push
add
push
jns
inc
dec
aas
xor
mov
push
push
and
shrb
bound
dec
cltd
jmp
add
addr16
pop
xlat
fisubl
shlb
or
xchg
xlat
inc
popa
push
xor
mov
sub
das
lretw
or
mov
iret
movsl
xchg
insb
sbb
jbe
sub
or
int
mov
outsl
push
adc
aad
inc
rcl
popa
repnz
jmp
add
mov
mov
gs
enter
jge
push
mov
mov
rolb
lods
gs
dec
xchg
push
xlat
push
lcall
rolb
sbb
js
stc
mov
test
sbb
push
xchg
jg
jmp
std
mov
insl
add
addr16
add
add
add
xor
nop
inc
jbe
jne
sbb
in
hlt
jb
shlb
mov
push
leave
js
insl
lret
das
mov
or
in
push
adc
dec
xchg
cli
mov
aaa
xchg
jle
pop
fs
push
sub
mov
mov
das
mov
add
mov
sbbb
test
or
dec
fnstsw
sbb
or
pop
or
pop
sub
or
push
lcall
scas
aad
into
into
je
mov
pop
lea
test
dec
sbb
enter
cmp
mov
jmp
movsl
popa
and
mov
jb
icebp
test
xchg
fstps
adc
in
test
cmp
mov
jno
and
xchg
rol
out
ja
cwtl
neg
fs
test
jle
fmuls
dec
cmp
cmp
or
jb
sbb
es
in
xchg
into
push
mov
add
add
xor
inc
mov
adc
addr16
add
add
add
mov
mov
sub
mov
mov
xchg
mov
push
aaa
loop
dec
adcb
lock
lea
and
dec
sub
test
mov
pop
pop
sahf
xchg
mov
cmp
cld
jecxz
or
and
and
push
frstor
dec
in
mov
das
in
xorb
adc
cmp
arpl
adc
mov
loope
cmp
xor
mov
nop
pop
enter
test
xchg
jb
pop
mov
pushf
xor
sub
ja
into
imul
or
int3
ja
popf
mov
bound
icebp
ret
pop
mov
fistpll
lret
popf
iret
add
dec
ficoml
jg
sub
pop
mov
lods
sub
das
sbb
jp
adc
lcall
mov
add
push
pop
xor
cmp
inc
call
inc
addr16
add
add
add
pop
mov
and
shlb
shll
add
jno
ss
hlt
push
mov
add
and
and
xchg
jmp
pop
pop
gs
out
mov
das
fisubrs
clc
xor
test
hlt
pop
aas
mov
jecxz
shlb
outsl
dec
fldcw
mov
scas
stc
cltd
add
mov
sub
insb
lds
imull
pop
in
jnp
in
idiv
mov
and
push
push
ljmp
or
jns
mov
repnz
loopne
push
xchg
iret
xchg
adc
dec
fisubrs
mov
sbb
push
lods
and
sub
int3
pop
je
loopne
imulb
lret
ljmp
enter
adc
lahf
adc
inc
repz
rcll
adc
and
test
sub
rorl
stc
js
clc
inc
aad
cmpsb
cmp
xchg
ficomps
movl
add
add
jp
les
mov
arpl
fstps
add
add
mov
lods
sub
jb
add
ret
shlb
dec
or
int3
xchg
cwtl
mov
in
ror
jb
mov
pop
mov
out
loope
scas
cs
inc
icebp
mov
out
repnz
enter
pop
cmc
xchg
out
push
inc
cs
xor
pop
xchg
jp
pop
icebp
ljmp
aaa
out
sbb
jmp
cmp
cmp
sarl
push
jne
cmp
push
lea
xor
xchg
rcl
pop
out
mov
loop
test
sbb
fmull
clc
fcoms
cltd
sbbb
jae
dec
arpl
mov
and
inc
repz
roll
inc
add
arpl
push
mov
xchg
add
cmp
and
jne
bound
lahf
xchg
pusha
sbb
int
js
mov
or
cmp
loopne
imul
add
add
clc
pop
stc
out
push
pop
bound
andb
add
add
add
rclb
xor
or
hlt
jne
jp
sub
test
shrl
mov
xlat
fisubrs
call
jg
push
xorb
call
dec
sarb
xchg
mov
jecxz
push
lods
sbb
xor
movsb
arpl
dec
test
mov
mov
sub
push
repz
mov
inc
aaa
sub
xchg
je
push
es
je
mov
sti
cli
pushl
jle
fistl
std
sti
ficomps
or
cltd
rorl
push
push
push
push
push
push
inc
daa
pop
sub
int
sbb
ficoms
jno
pop
lock
adc
sbb
in
push
rcrb
pop
jmp
push
subl
fnsave
cmpsb
add
dec
ss
call
into
inc
mov
lods
push
outsl
andb
outsl
lock
sbb
mov
mov
dec
lds
cli
lcall
push
addr16
add
add
add
cwtl
sub
pop
imul
xor
mov
add
push
xchg
stc
je
jb
ficompl
dec
int3
scas
addl
jl
pop
ja
sahf
lahf
sub
cs
mov
jge
repnz
imul
jp
mov
dec
insb
or
hlt
rorb
js
sahf
jle
cmp
mov
ds
push
sbb
add
fdiv
mov
cmc
outsb
loop
jge
push
inc
inc
sahf
scas
in
sbb
adc
and
andl
xchg
call
fistpll
out
ds
xor
dec
and
sub
xor
add
or
into
aam
mov
hlt
push
sbb
out
ret
fmuls
xchg
and
jb
flds
fsts
cmp
jge
lret
or
aad
inc
fcomp
push
test
mov
xchg
add
dec
ret
xorl
insb
lret
and
addr16
add
add
add
pop
dec
and
scas
icebp
sbb
aas
insl
jl
js
xlat
subb
dec
int3
rorb
ss
int
jo
add
out
insb
ret
jo
and
iret
xchg
cld
push
mov
pop
xor
mov
shlb
ss
lock
adc
add
aas
adc
cltd
shl
sbb
sahf
std
xchg
pop
push
or
jnp
stos
outsl
pushf
iret
andl
test
mov
mov
pusha
push
dec
mov
lahf
lret
push
fcomip
xorl
out
jbe
jo
mov
test
rolb
or
int
mov
push
loope
iret
mov
out
aas
rcrb
sti
shlb
ja
ja
pop
mov
xlat
gs
dec
adc
xchg
fidivrl
jmp
loope
cmpsb
rcrl
js
lds
fists
repz
fmull
push
cmovl
inc
pushf
mov
pop
dec
pop
pop
sbbl
fstp
rorl
mov
mov
add
add
cld
decl
ja
iret
xchg
xchg
mov
fmull
mov
push
add
loope
or
pop
pop
mov
add
inc
xor
das
cld
sbb
out
xor
pop
sbb
stos
mov
xchg
arpl
adc
aaa
add
ficoml
cwtd
fcmovnu
sbb
xchg
repz
mov
or
cltd
mov
out
lret
xchg
jmp
push
add
ds
or
pusha
insl
sub
mov
std
loope
movsb
mov
or
movd
test
jns
or
dec
jle
ljmp
cmp
xchg
cmp
loope
sbb
push
lds
push
ret
ja
test
jmp
out
inc
loop
inc
mov
mov
sbb
es
mov
in
xchg
mov
pop
add
and
loope
mov
jecxz
out
mov
mov
out
addr16
add
jns
in
in
mov
xchg
out
inc
shrl
sti
jle
push
mov
add
and
sub
int3
dec
sbb
loop
mov
inc
cld
xor
adc
test
pop
fwait
jp
xor
and
dec
movsl
xchg
ja
push
rsm
pop
xchg
xchg
and
mov
icebp
xor
xchg
imul
pusha
and
add
or
jecxz
inc
sbb
xchg
pop
push
popa
sbb
fsubl
xchg
hlt
stos
push
imul
jbe
cmpsb
adc
adc
cltd
dec
neg
enter
jnp
decl
push
nop
insl
inc
mov
lret
cmpsb
icebp
lcall
stos
inc
push
or
pushf
daa
es
lret
sub
push
test
cmpl
or
dec
enter
jl
xorb
call
fidivl
enter
cltd
pusha
and
and
lds
sub
add
add
std
test
jg
into
lret
orl
add
add
lds
sub
rol
rcrl
push
xchg
xor
add
roll
mov
cmp
mov
mov
inc
push
xor
and
ret
pand
bound
movsl
aas
sub
shll
inc
mov
jo
or
mov
std
or
int
xor
loopne
icebp
inc
inc
adc
or
dec
jle
add
out
aad
cmp
dec
icebp
popa
add
xchg
sbb
add
push
xor
movsb
insl
cmpsb
faddl
mov
out
and
negb
ret
sbb
arpl
adc
hlt
mov
mov
cmp
jae
jns
pop
inc
in
mov
adc
jge
arpl
lss
in
add
stos
sbb
inc
mov
push
jp
push
xor
fwait
notb
rorb
mov
mov
add
add
add
adc
in
lcall
jae
dec
mov
out
pop
addr16
add
adc
lods
popa
fistpll
add
gs
insl
loopne
ljmp
xchg
cmc
jbe
add
cmp
dec
add
xor
sbb
mov
jmp
jg
out
jnp
xor
lahf
out
ret
adc
push
mov
sub
mov
fstpl
mov
add
jbe
push
jp
ret
insl
mov
jecxz
imul
inc
add
loop
and
inc
cmp
xchg
jge
xchg
or
push
add
lea
dec
xchg
jnp
bswap
movsb
les
iret
das
in
stos
add
mov
clc
fwait
in
push
jnp
mov
cmc
mov
add
pop
mov
pop
outsl
mov
jl
or
or
cmpsb
fnstcw
fcompl
push
enter
adc
in
xor
push
mov
push
jns
pop
xchg
jmp
lahf
push
xor
push
cmpsl
sbb
imul
adc
clc
dec
or
jg
dec
arpl
int
mov
add
daa
shlb
or
loopne
movsb
lcall
sahf
int
dec
adc
cmp
lds
fs
rol
cmp
dec
aaa
cmp
outsl
jl
insb
add
addb
movsl
add
xor
lods
inc
lods
cmpsl
mov
or
dec
push
scas
dec
scas
xor
fstpt
fcmovnbe
imul
aam
ja
sbbb
push
xor
pop
test
insb
inc
scas
xchg
insl
icebp
popa
cmpb
test
shl
cmpsl
cmp
dec
mov
xchg
int3
shrb
cltd
fisttps
in
mov
shrb
cmp
scas
jge
in
clc
add
jnp
mov
pop
mov
gs
decl
push
fistpl
push
dec
sbb
lret
inc
xor
cmp
les
std
pop
add
jecxz
ja
add
and
bound
mov
cwtl
stos
jbe
loopne
ficoms
cli
js
inc
ljmp
add
insl
sbb
outsl
mov
jp
jne
addr16
add
cld
dec
dec
lahf
addb
cmpsl
push
mov
xor
cmpsb
rolb
bound
pop
lcall
js
mov
mov
sbb
xor
scas
push
je
push
fwait
jae
fisttps
mov
inc
sub
or
mov
pop
outsl
dec
push
popa
sahf
mov
cmp
and
sbb
pop
sub
cmp
cmpsb
bound
aad
add
imull
lods
fldt
pop
dec
pop
nop
dec
jle
push
cwtl
pop
cmc
ljmp
mov
add
mov
xor
pop
into
jae
or
or
xor
push
xchg
in
lcall
dec
push
cmc
mov
cmp
cmp
inc
imul
mov
mov
cltd
cmc
testb
jmp
dec
mov
add
xor
mov
pop
fs
add
add
add
movsl
sub
mov
dec
mov
mov
mov
jp
push
xchg
lret
sbb
fidivs
bound
loope
lods
jmp
jecxz
lock
mov
dec
cmp
mov
stos
mov
push
js
mov
pop
add
cwtl
mov
lcall
sbb
add
stos
test
inc
call
jns
jo
or
movsl
add
and
inc
les
jo
roll
daa
imul
mov
sub
mov
xchg
test
in
pop
add
in
fnstsw
lcall
mov
adc
hlt
and
shll
mov
das
and
test
push
dec
push
xchg
adc
out
pop
std
cmp
fildl
test
dec
gs
or
lret
insl
loopne
addb
push
push
call
lret
cli
xor
addr16
add
lret
pop
out
mov
mov
les
mov
mov
add
vmread
pop
xchg
stos
and
imul
lods
push
sbb
fsubs
imul
loop
out
daa
psubsw
dec
sahf
push
cmp
jmp
lods
xor
cmp
imul
cld
push
sub
inc
pop
xorl
jle
fwait
cmp
jne
arpl
or
cltd
cmp
pushl
xor
sahf
insb
adc
les
jge
sub
lea
cmp
outsb
and
mov
cmp
loope
pop
mov
fldenv
fistps
dec
sub
sbb
xchg
in
jbe
pushf
cmp
daa
adc
mov
iret
movsb
mov
mov
jbe
and
push
mov
stos
mov
push
mov
ja
jbe
push
jns
shlb
sbb
pop
in
sub
roll
add
add
std
sti
leave
sti
iret
jmp
add
addr16
add
pusha
jg
xchg
jnp
mov
inc
pop
and
mov
sbb
xchg
cmp
xchg
add
and
cwtl
ljmp
fnstcw
lcall
pop
pusha
shrd
mov
cmpb
jecxz
ss
aas
fdivrs
xchg
pop
pop
in
jne
mov
fdivs
cld
mov
movl
mov
aaa
pop
jo
enter
stos
andb
pop
xchg
aad
pusha
popa
or
out
mov
gs
fwait
sbb
loop
dec
mov
ljmp
stos
loope
mov
lea
mov
add
xchg
lods
push
lods
in
or
sbb
sbb
lret
mov
std
sbb
inc
lahf
adc
sbb
shl
mov
cltd
inc
mov
sbb
jnp
mov
pusha
adc
pop
ficoml
dec
xchg
js
xchg
pop
jae
aam
inc
xorl
add
add
mov
xor
data16
add
add
lock
sbb
nop
adc
adc
sub
cmpsb
out
adc
push
or
add
inc
lret
loopne
jne
and
fildll
scas
push
and
popa
or
cmp
or
outsb
loope
xor
adc
clc
sarl
cmc
mov
rcrb
xchg
mov
ret
inc
xor
sbb
or
inc
mov
int3
out
cmp
lret
xchg
lcall
cmpps
out
dec
xchg
dec
hlt
cmp
loop
dec
outsl
mov
sbb
arpl
aas
rol
arpl
jg
mov
packssdw
push
xchg
aam
mov
bnd
mov
sub
lcall
cmpsb
ja
sbb
loop
dec
icebp
pop
jg
inc
sbb
ds
cltd
out
fwait
mov
or
jg
mov
sahf
loop
insl
ljmp
add
add
cld
cmp
jne
adc
fnstcw
mov
clc
xor
jne
push
mov
cmp
mov
mov
and
cmc
cltd
jge
es
js
cwtl
bound
mov
push
dec
sahf
pop
xchg
xchg
fiadds
pop
xor
and
push
mov
xor
cmp
mov
add
mov
outsl
insb
add
xor
icebp
cmp
loop
jns
stc
jo
mov
loop
mov
fs
pop
jge
push
xor
cmpsb
jge
imul
pop
mov
or
jne
jg
xor
subl
dec
cmp
popa
pop
sbb
imull
xchg
or
xchg
dec
lock
cld
jl
sub
fwait
jae
test
fldt
je
incl
mov
daa
fadds
ja
xchg
rorb
in
jae
mov
xor
push
cld
pushl
cld
sbb
addr16
add
add
xchg
rol
lods
fs
cwtl
mov
negl
ljmp
adc
lret
pop
sbb
les
pushf
sahf
orl
stc
mov
aas
and
adc
outsl
cmp
pop
imul
loopne
and
out
aad
xor
into
push
paddq
mov
push
push
das
ljmp
jle
or
movsl
pop
xchg
lods
pop
xor
sub
ljmp
shr
jnp
in
jb
lods
jge
pop
xor
in
out
sbb
adc
stc
adc
or
pop
ret
mov
loope
sbb
aad
mov
xor
dec
mov
dec
jg
pushf
mov
lods
mov
cli
mov
insl
xor
sti
test
mov
sub
in
es
dec
mov
cwtl
lret
xchg
xchg
sti
xchg
std
add
mov
xchg
out
xchg
in
mov
int3
ds
add
add
xlat
pushf
shrb
lcall
cld
push
mov
addr16
add
add
add
xchg
inc
jb
ror
aad
notb
test
ja
cmp
pop
lock
test
adc
gs
push
inc
pop
icebp
sbb
loop
push
aam
in
mull
popf
xlat
mov
push
push
mov
or
push
gs
sbb
rorb
cmpsb
mov
or
in
out
sbb
cmpb
mov
push
jns
in
inc
xchg
loop
mov
mov
cmp
pushf
lea
loope
shl
stos
and
or
adc
xor
in
dec
in
shlb
into
enter
or
call
inc
clc
cmp
cmpsb
mov
mov
mov
shr
rolb
push
lods
push
push
imul
stc
ror
call
imul
or
mov
mov
cmpl
add
test
mov
aas
scas
fldcw
les
add
add
add
mov
mov
insl
fistps
sbb
enter
ret
add
js
xchg
jnp
and
aam
sarb
into
pop
jno
mov
test
in
sub
mov
cmp
mov
mov
jns
lods
stos
and
leave
rcrb
cltd
int
dec
das
xlat
fsubrs
test
out
jb
enter
fsubl
or
enter
jne
ret
outsl
fs
push
data16
mov
enter
out
mov
dec
movsl
xorl
cmp
mov
shl
addr16
insl
jle
or
lcall
push
outsl
mov
dec
push
dec
push
sbb
inc
dec
sbb
out
mov
sbb
clc
cmp
cmpsb
pop
mov
fbstp
jae
into
cmp
aad
jmp
jns
sbb
cs
lods
movsb
mov
sbb
add
add
jne
jne
jg
loop
mov
das
lds
add
add
add
lret
xor
add
pop
adc
xor
in
aad
push
inc
or
fdiv
insl
sub
loopne
aas
inc
adc
xchg
inc
out
test
leave
or
mov
fildll
aad
repnz
jnp
stos
shll
dec
pop
jb
fstpt
mov
sbb
dec
and
sbb
stc
adc
sbb
push
mov
gs
sahf
int
icebp
in
cmp
mov
or
nop
shrb
pop
xchg
inc
in
rorl
insl
push
mov
mov
fsubl
mov
std
repnz
mov
adc
mov
and
cmpsl
test
arpl
or
cmpsb
xchg
inc
mov
pop
mov
mov
gs
pop
sub
inc
shrl
loope
call
xor
push
in
cmp
fstl
scas
xlat
test
add
add
dec
pop
mov
cmc
mov
adc
add
add
add
adc
inc
mov
mov
idiv
lret
idivb
adc
push
push
ret
lds
fldcw
jmp
jmp
imul
xchg
mov
pop
movsl
jp
divb
dec
mov
aaa
dec
push
pop
ret
andl
cld
insb
por
sub
aas
lahf
jae
call
push
xchg
out
dec
or
push
popf
jae
outsl
push
in
movsl
imul
rclb
scas
loop
jge
cmc
push
adc
mov
and
jne
mov
pop
jle
sbb
adc
mov
adc
xchg
repz
inc
or
mov
add
and
mov
stc
mov
push
adcb
adc
ret
dec
sahf
jp
shll
xchg
add
aas
add
je
inc
mov
roll
mov
add
sbb
fldl
lret
add
and
outsb
jle
lods
testl
movl
add
mov
fdivrl
sbb
test
inc
inc
or
iret
xchg
adc
stos
cmp
adc
push
jecxz
add
add
or
aad
jae
dec
add
pop
stos
stos
scas
push
push
outsb
testb
adc
sbb
mov
pop
cmp
mov
inc
mov
aad
push
fcomps
cli
cmp
add
mov
jns
aam
mov
test
sbb
movsl
cmp
ja
movsb
inc
test
mov
jmp
xchg
sbb
push
js
dec
jmp
data16
lods
frstor
sbb
in
mov
mov
pop
lcall
icebp
jb
add
cs
mov
and
sbb
mov
mov
inc
arpl
test
jp
mov
mov
add
fwait
xlat
addr16
add
add
adc
adc
pop
adc
dec
mov
cmc
lds
inc
ret
pushf
xchg
outsl
jle
out
ret
dec
rcrl
cltd
push
sbb
rcrl
mov
repnz
imul
sub
lds
jbe
ds
repz
pusha
add
mov
cs
mov
repnz
mov
inc
outsl
ds
mov
or
mov
in
and
cmp
cld
lret
mov
int
mov
nop
xchg
or
mov
gs
dec
or
pop
lock
lock
lret
lea
push
inc
cmp
mov
pop
roll
add
ljmp
add
imul
jge
inc
or
stc
int
push
pop
es
or
adc
repnz
arpl
mov
aam
jle
add
xchg
cmpsb
inc
fcomi
pop
cmp
out
and
add
add
out
sti
xlat
in
aad
loop
sbb
leave
add
add
add
sbb
push
cmp
jg
lret
xor
loopne
out
push
mov
sub
mov
cwtl
add
fwait
cmp
add
insb
adc
sti
sarl
sar
es
inc
mov
outsb
fisubrl
cld
pop
and
or
dec
add
sbb
gs
int3
mov
jg
daa
scas
addl
or
cmp
orb
shlb
dec
shlb
leave
xor
cld
sarl
pop
xchg
mov
scas
jae
movsl
xchg
das
popa
jnp
mov
xchg
add
xchg
jmp
inc
mov
js,pt
sbb
dec
gs
imul
dec
mov
outsb
and
adc
mov
mov
add
data16
add
js
sbb
mov
decl
dec
in
and
jg
ds
sub
cmp
jg
and
mov
repz
packuswb
add
add
add
push
push
daa
inc
movsb
je
pop
inc
mov
dec
inc
adc
pop
jle
jmp
clc
inc
push
and
push
pusha
sti
and
mov
enter
lock
cmp
pop
jo
out
stos
lcall
push
xlat
fsubl
das
lods
adc
add
cmpsl
inc
xchg
sti
pop
repz
sbb
xor
add
scas
xor
add
loop
rolb
dec
imul
lea
cmpsb
cmp
inc
fimuls
add
fsubs
push
xor
std
cwtl
push
fdivr
loopne
ljmp
or
sti
sub
jg
nop
aam
sbb
sub
mov
clc
test
ja
imul
xor
mov
jb
dec
mov
push
jo
mov
dec
dec
clc
xlat
js
dec
push
push
cmp
add
or
jp
fsubrl
sbb
or
jmp
ds
repz
fcoms
es
fiadds
addr16
add
add
add
jle
out
into
mov
add
xor
leave
add
cmp
sbb
sti
shll
shlb
sub
clc
test
loopne
cmc
adcl
lret
push
sbb
insb
cmc
out
das
frstor
push
mov
push
and
nop
loope
push
insl
jl
inc
jle
mov
scas
outsb
cld
push
cmp
sbb
testb
ja
pop
cmp
push
nop
out
ret
jbe
inc
push
xor
or
addb
jno
sub
mov
mov
push
add
imul
jl
or
xchg
mov
cmp
cmc
sbb
jg
inc
addr16
xor
sub
push
xchg
test
pop
insb
jns
or
lahf
or
push
pushf
pusha
mov
rcrb
mov
xchg
xor
add
add
mov
mov
push
adc
cld
addr16
add
add
add
cmpsl
pop
cmp
rcrl
pusha
cmp
fdiv
jo
out
xchg
sarb
inc
sti
add
jb
inc
pop
mov
xchg
cmp
push
push
xchg
jmp
cmpsl
testl
loope
in
or
int
mov
adc
dec
mov
sbb
add
data16
cmp
cli
je
cmp
mov
andb
test
sbb
or
cmc
scas
loop
xchg
into
adc
aaa
sub
out
iret
sbbl
or
pusha
adc
push
jmp
jge
fwait
insl
jo
stos
loopne
mov
jns
pop
mov
pushf
stos
ss
adc
test
or
loope
adc
adc
iretw
or
in
xor
pop
pop
xchg
scas
roll
push
sbb
out
fimull
leave
pop
jb
data16
pushf
xchg
in
jb
push
push
aad
dec
pop
out
add
add
enter
in
sbb
push
inc
push
jbe
leave
addr16
add
add
add
mov
sbb
arpl
dec
call
ret
mov
dec
sbb
call
mov
inc
xchg
scas
mov
jmp
aad
cmpsl
in
bound
rolb
inc
push
pop
scas
imul
mov
push
xlat
cmp
imul
lahf
and
push
loop,pn
aaa
pop
in
inc
xchg
adc
cld
in
popa
fwait
dec
ljmp
pop
xchg
shll
mov
xor
subb
and
lret
add
add
in
dec
sub
aad
ljmp
mov
sbb
jae
stos
repz
xchg
pop
jb
aam
push
fld
inc
push
cmp
sbb
add
lock
dec
lahf
jecxz
in
gs
loope
insl
add
adc
aam
mov
ja
bound
xchg
add
add
imul
cmc
call
inc
push
popa
outsb
mov
add
add
add
fcmovb
push
mov
fcoms
mov
sub
repz
push
sbb
out
roll
adc
inc
stc
jl
movsb
jp
imul
sahf
jmp
inc
mov
fists
mov
inc
jge
mov
lock
mov
jl
pusha
push
lods
pushf
mov
cmp
add
jb
sti
xchg
out
les
mov
dec
push
in
xor
dec
cmp
add
sbb
inc
sub
lret
adc
push
inc
lahf
cmp
call
jne
sbb
jae
ja
js
stc
out
or
enter
mov
inc
xor
fisubl
daa
mov
aas
arpl
scas
and
vmovmskps
pslld
bound
rolb
fst
subb
and
cmp
dec
and
test
add
push
rep
testb
movsl
mov
iret
sub
stc
pusha
xor
add
add
mov
insl
sub
lahf
lods
mov
xor
insb
inc
inc
inc
mov
add
popa
mov
and
and
xchg
jge
mov
enter
and
shlb
xor
lret
xchg
sbb
bound
sbb
mov
fucomp
cmp
in
pop
push
and
fldenv
pop
addb
mov
and
sbb
jbe
push
addr16
xor
hlt
ljmp
cmp
in
and
repnz
cmp
call
mov
mov
mov
int
jb
pop
lret
mov
mov
pop
cmp
inc
cli
or
mov
mov
leave
pop
test
dec
push
inc
mov
pop
and
cmovno
adc
add
xchg
inc
mov
cmp
xchg
gs
js
negl
stos
jge
push
xor
add
int
xchg
inc
xchg
push
adc
add
add
out
into
gs
cld
test
rolb
add
add
add
das
push
xchg
xor
scas
test
dec
mov
jo
add
outsl
push
push
xchg
bound
mov
negb
inc
outsl
lcall
mov
pop
hlt
jge
lret
adc
fnsave
and
pop
lret
jno
insb
out
outsl
or
test
cmc
repnz
andb
repz
inc
daa
mov
sub
imulb
adc
loopne
rcl
dec
sahf
pop
in
xor
ljmp
negl
lock
sub
frndint
test
aad
outsl
cli
ret
adc
and
mov
ret
push
popf
mov
daa
mov
outsl
addb
mov
ljmp
cmp
or
lock
xchg
sbbb
add
or
push
pop
push
in
or
aaa
rcrb
mov
xchg
mov
loopne
and
je
out
mov
mov
roll
add
add
add
int3
mov
iret
jne
sub
lock
cltd
outsl
dec
xchg
push
push
les
call
cmp
aaa
aas
notb
decb
inc
jns
mov
fdivs
je
lea
push
in
test
inc
mov
movsl
test
dec
push
xchg
mov
dec
and
sbb
fadds
jo
jo
test
pop
rcrb
stc
imul
gs
ret
fcoml
mov
cli
lock
sub
sub
inc
sub
sarl
pop
stc
jno
addl
xchg
pushf
test
jmp
push
insb
in
adcl
jl
daa
mov
jl
add
sarb
gs
lahf
cmc
add
lret
aad
rorl
stos
movsb
lds
clc
out
outsl
mul
lods
dec
sub
add
cmp
aaa
pop
sub
cmp
bound
into
enter
add
dec
daa
dec
das
outsb
imul
push
xchg
inc
adc
add
add
add
jne
imul
adc
fmuls
and
movsb
les
xchg
repz
xchg
jge
popf
popf
gs
call
sbb
iret
inc
repz
mov
and
aad
xchg
sbb
and
and
aas
repz
cmp
into
mov
xor
lods
cmp
outsl
cltd
es
out
mov
in
or
add
mov
dec
xor
adc
hlt
icebp
cmpl
push
push
sub
das
notb
cwtl
and
inc
push
mov
xchg
and
xchg
push
jb
in
inc
arpl
cltd
xchg
push
sbb
add
push
sbb
in
pusha
pop
fwait
out
xchg
lret
shl
jb
imul
mov
mov
mov
stc
bound
lds
adc
adc
call
inc
jbe
addb
call
out
lahf
ret
or
pusha
jno
roll
add
add
add
dec
mov
popa
inc
in
jg
in
repz
mov
sti
push
sahf
xor
mov
mov
xchg
inc
loope
sbb
and
mov
push
adc
or
scas
mov
test
inc
cs
ret
xor
sbb
lret
push
mov
lock
ljmp
cmp
aad
pop
dec
shl
bound
jno
or
fadds
cmp
jp
aad
mov
mov
or
or
rcrb
mov
aas
cmpsb
jmp
adc
adc
ljmp
fwait
mov
add
mov
mov
cmp
pop
xor
xor
pop
nop
fcmovnb
divb
sbb
cs
sar
or
loop
jnp
leave
mov
sbb
scas
getsec
inc
push
jne
jmp
cmp
fiaddl
and
sub
jae
nop
mov
mov
mov
pop
xchg
or
icebp
mov
add
add
cltd
test
int3
dec
filds
stc
fidivl
sbb
call
std
cmp
or
mov
dec
mov
xor
jmp
jecxz
xorl
push
xchg
pop
insl
js
andl
out
xor
sbb
adc
mov
dec
dec
sub
scas
lahf
fst
xchg
sbb
cmp
cmp
fnstcw
mov
sarl
sbb
pushf
shrb
lahf
lea
add
or
loopne
mov
pop
sub
dec
outsl
cmp
aad
pop
loopne
out
fsubr
es
and
icebp
push
mov
in
test
loop
in
in
xor
xchg
cwtl
lretw
sahf
cmpsl
cmp
bound
cs
icebp
mov
shl
jmp
and
inc
shlb
mov
jns
sarl
sbb
and
ret
fs
xor
in
in
dec
pusha
sbb
add
icebp
loope
mov
add
add
add
sbb
sub
dec
or
addr16
add
add
add
enter
mov
sbb
sub
stos
fsubl
adc
xor
fisubl
rcll
xor
lock
ljmp
andb
outsb
adc
imul
in
inc
lret
and
ja
xor
jns
gs
xor
dec
xor
jecxz
pop
mov
xchg
ja
cmc
aad
fs
jb
xor
and
clc
test
xor
or
mov
push
ss
popa
xor
mov
popf
cmpsl
push
lret
add
push
les
push
add
outsb
lods
cmpl
dec
sarb
ss
push
mov
push
or
mov
fs
dec
pop
push
sub
sbb
imul
in
sbb
push
data16
pusha
stc
jmp
out
xchg
setno
jg
ljmp
insl
cld
popa
mull
or
cltd
clc
fsubrl
add
add
ds
jae
clc
enter
add
add
add
insl
and
das
shl
push
mov
mov
xchg
test
test
rorl
ret
adc
in
loope
mov
popa
xchg
cmpsl
pop
je
pop
inc
loopne
add
lret
dec
or
dec
mov
cltd
jle
mov
sub
push
mov
xor
xchg
dec
sub
ss
ja
aam
scas
aad
sbb
or
mov
mov
rcll
into
pop
addr16
adc
xchg
shrl
test
int3
push
ret
pop
cld
mov
mov
mov
jno
dec
ljmp
aas
or
dec
stos
push
inc
jb
cmp
out
ljmp
mov
ljmp
test
es
leave
xor
jo
aam
out
cmpsb
pushf
hlt
adc
andl
call
mov
jmp
add
hlt
ret
or
xchg
and
idiv
lahf
insl
mov
sub
mov
xlat
add
add
add
in
lock
sub
dec
sbb
dec
push
add
in
sti
jmp
pop
pop
dec
dec
sti
int3
jp
lret
icebp
push
lahf
ret
inc
push
cmpsl
xchg
mov
add
add
sahf
gs
or
cmp
jbe
mov
xor
jnp
mov
sbb
mov
popa
iret
scas
add
lock
inc
adc
jl
push
or
mov
stc
cmpb
stos
dec
js
xchg
loopne
xchg
dec
and
iret
mov
pop
xchg
repz
add
xor
jmp
shlb
dec
fnsave
adc
test
std
push
jp
adc
pop
pop
sbb
mov
adc
push
mov
cmpsl
mov
jecxz
push
jmp
loopne
pop
and
popf
xchg
add
jge
xchg
pop
sbb
add
enter
push
mov
cs
xor
ds
add
add
xchg
ja
push
jg
leave
or
xor
fadds
add
add
add
imul
sub
or
push
pop
clc
movsl
inc
cli
into
sti
add
out
xchg
jg
xchg
jnp
inc
cmpsl
fwait
or
decb
shrb
add
imul
xchg
jl
es
sub
ds
cmpsb
iret
mov
xor
int
xor
add
or
mov
call
fcomps
adc
inc
in
push
testl
icebp
sbb
stc
jmp
cmp
sbbb
pop
lea
cmpl
aad
fists
daa
cmpsl
icebp
test
cld
push
pop
pop
pop
add
fucomip
negb
dec
sbb
lahf
ljmp
dec
ret
jo
pop
leave
cmpsb
test
inc
jmp
into
cmp
pop
mov
loope
xlat
je
dec
add
cld
rcrb
bound
cmp
popa
loop
sub
daa
push
push
mov
jl
imull
add
add
int
out
out
imul
nop
xchg
movsb
aad
andb
add
add
add
andb
pop
fbld
or
mov
lret
test
stc
imul
xor
sbb
cmp
jmp
xor
imul
lea
cltd
ds
jmp
adc
stos
lahf
cmc
cmp
push
push
in
or
mov
pop
push
push
lock
fidivrl
xchg
and
cmpsl
inc
mov
pop
out
dec
ret
xchg
pop
cmpsb
cmc
push
dec
repnz
pop
cmpsb
xor
fs
cltd
jae
jl
dec
outsb
movsb
pop
imul
sti
lahf
sub
and
cs
div
ret
subb
push
mov
lods
inc
out
rdpmc
jno
cltd
iret
dec
mov
mov
cmp
shlb
sbb
std
test
scas
push
inc
xor
inc
iret
shll
pop
outsb
and
push
or
push
and
pop
popf
adc
shlb
push
pop
mov
pop
mov
or
out
fldcw
push
in
sub
outsl
fiaddl
add
add
add
mov
push
lret
shlb
xor
mov
fldl
inc
cmp
mov
leave
jge
scas
out
data16
adc
xchg
fs
lret
js
and
stos
cmc
in
in
testb
arpl
inc
add
push
int3
daa
push
inc
jns
jle
pop
and
mov
scas
or
js
push
sti
arpl
lret
loope
mov
xorb
push
pusha
push
mov
jae
push
imul
fimuls
mov
adcl
xchg
mov
push
inc
andl
or
rorl
fnstenv
loope
xchg
outsl
or
imul
bound
lret
insl
mov
mov
subps
lret
jnp
pop
xor
popa
lret
pop
mov
mov
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
je
fildl
add
add
add
xor
jns
pop
std
test
int
into
sbb
loop
jno
or
ds
mov
and
jo
out
and
btr
jnp
push
push
xchg
or
adc
out
push
aam
cs
sbb
adc
fwait
popw
sub
dec
jge
pop
xchg
sbb
and
negb
inc
jne
lock
and
outsl
push
xchg
aad
pushw
sub
xor
lcall
mov
lcall
fadd
sbb
insl
and
mov
mov
lods
cmp
lret
loopne
adc
mov
ds
sbb
cltd
jns
push
comiss
jns
sub
std
lds
in
in
jbe
fsubrl
movsl
popf
lahf
push
mulb
pop
jae
push
pop
inc
in
fs
xchg
mov
and
jg
cmc
pop
dec
jle
jg
std
fstpt
mov
jnp
faddl
add
add
add
push
inc
and
in
add
add
pop
xorb
pusha
ret
inc
in
daa
roll
dec
sub
fnstcw
loope
cmc
sub
add
cmp
mov
std
mov
cmp
rcll
inc
fidivrs
and
dec
mov
loope
sbb
ret
or
inc
arpl
data16
xor
push
adc
in
mov
addl
adc
sub
test
clc
stos
jmp
push
push
push
cmpsl
xor
jnp
nop
push
pop
enter
push
out
inc
inc
inc
mov
iret
pop
or
push
and
icebp
push
jno
and
or
mov
sahf
push
cmpsl
xor
xor
or
fldenv
imul
in
push
dec
lea
ss
fdivrp
xchg
jb
dec
cli
sahf
pusha
js
shll
aas
cmp
ljmp
pushf
movsl
push
and
add
add
dec
rcrb
pop
dec
scas
jp
jnp
cmpsb
ficoms
sarl
data16
insl
jl
ja
fidivrl
jmp
push
gs
aam
ret
mov
dec
push
clc
or
sub
mov
xor
cltd
je
orl
mov
xchg
or
push
lret
daa
test
loope
aad
xor
aas
mov
jl
stc
jbe
aam
xlat
pop
cwtl
pusha
push
out
dec
add
incl
lods
sbb
inc
inc
jnp
cmp
adc
fwait
adc
ret
lcall
jmp
mov
mov
es
jnp
dec
and
cmp
fcompl
div
add
and
inc
stos
cs
sbb
les
outsb
cli
push
cmpsb
nop
or
out
lret
lcall
pop
js
xchg
xor
movsl
andb
insl
popa
pop
dec
lea
and
push
aam
pop
mov
push
and
sbb
add
add
sbb
jmp
scas
inc
call
fiadds
add
add
add
mov
ja
or
jb
fidivrl
sub
xchg
and
xor
pusha
std
imul
fldt
jecxz
test
mov
dec
neg
adc
leave
mov
jnp
aam
test
aas
les
cmp
movsb
mov
pop
adc
lods
add
xchg
mov
cmp
std
sarb
add
stos
popf
loop
adc
pop
shrb
shrb
xchg
mov
sbb
or
std
cmp
push
rcrl
nop
push
push
mov
xchg
ja
pop
xor
lret
aam
xchg
adc
frstor
push
pop
xor
test
pop
or
and
lods
les
push
xchg
jmp
sub
daa
xchg
mov
jl
and
xor
xchg
pop
insb
jmp
out
repnz
xor
add
or
hlt
cmp
mov
cmpsl
fimull
faddl
or
filds
add
add
add
icebp
loopne
pop
je
jecxz
aad
dec
mov
xor
jle
decb
or
mov
negb
dec
add
test
jne
pushf
add
sbb
jbe
outsb
push
pushf
aad
add
xchg
rcrl
leave
fs
mov
daa
pop
ja
js
out
fsubp
cmpsb
sub
subl
ss
pop
testb
lea
das
mov
dec
push
and
je
lods
inc
jne
stos
or
add
pop
sbb
lcall
test
dec
pop
mov
mov
adc
and
xor
daa
or
fcomip
into
imul
jle
sub
cmp
lds
jbe
scas
sbb
rclb
in
rorl
ja
jg
lret
adc
es
nop
aas
aam
mov
cmp
ret
xchg
sub
imul
sbb
add
jg
mov
lcall
fisttps
or
loopnew
add
add
add
mov
push
push
sbbl
and
dec
mov
not
fdivs
cmp
mov
mov
inc
bound
push
xchg
loopne
add
bound
fidivrl
push
jp
jle
ds
bound
jecxz
jmp
aad
mov
aas
push
aam
ss
jno
pop
or
fimull
stc
lds
push
js
ds
lret
inc
push
add
jp
or
push
mov
and
pop
jno
mov
test
and
idivb
push
mov
lret
aaa
or
lods
inc
pop
jmp
insb
cltd
mov
xor
enter
movsb
cli
ja
iret
adc
push
push
jg
movsb
addr16
push
lods
negl
push
jo
mov
adc
int3
sbb
dec
mov
xchg
push
adc
in
mov
adc
mov
mov
sbb
push
sbb
jns
xchg
xchg
mov
pop
int
loope
add
add
add
jns
xchg
int3
jecxz
jg
fadds
dec
repnz
cmp
outsb
jecxz
sub
push
mov
call
sahf
pop
pop
xchg
pop
pop
mov
test
insl
in
xor
mov
add
les
js
cwtl
lcall
in
sub
sub
lods
fistps
or
iret
dec
sahf
bound
in
sbb
arpl
iret
mov
fimull
cmp
js
xchg
call
mov
add
int3
jmp
movsl
mov
movsl
and
enter
orb
les
or
cmp
fidivrs
cmp
sbb
push
cmp
leave
push
lret
rclb
sahf
ljmp
insl
filds
shrb
popf
test
loop
xchg
pop
adc
jae
adc
pop
xchg
or
cmp
sbb
std
xchg
repz
or
sti
mov
int3
out
sub
pop
jae
fadd
fsubp
jnp
or
cld
in
loop
add
add
add
mov
lcall
in
shrb
inc
lea
scas
or
mov
js
push
mov
fwait
jno
mov
test
imull
int
or
popf
pop
adc
addb
addr16
inc
shll
adcb
jg
mov
insl
pop
xchg
push
mov
mov
add
out
lock
gs
mov
add
fistpl
xchg
fnstenv
add
repz
mov
call
cmp
ret
dec
push
in
jo
sbb
js
fs
test
ja
or
mov
cmp
into
pop
pop
push
mov
pusha
or
cld
in
aad
in
mov
add
in
jg
push
lock
pop
les
xor
adc
xor
push
mov
add
add
sub
cld
cli
jle
dec
nop
xor
loop
pop
jcxz
add
add
add
or
leave
cmp
cmp
fildll
nop
jecxz
out
pop
xchg
in
icebp
clc
clc
inc
jno
negb
add
mov
push
mul
xchg
icebp
xchg
into
jecxz
out
add
and
add
popf
push
dec
add
lahf
rolb
push
sbb
sbb
adc
mov
int3
movsl
push
mov
daa
popf
and
push
pop
mov
mov
rolb
movsl
dec
ficoms
repz
and
aam
mov
pop
jg
out
push
dec
incl
out
in
mov
inc
sub
inc
mov
add
stc
sahf
add
rorb
dec
mov
dec
add
inc
cwtl
idivl
ljmp
je
aad
xchg
adc
ret
mov
push
push
cmp
popa
and
xor
mov
int
test
lea
pop
jbe
ja
sti
aaa
out
ja
rorb
push
addr16
add
add
add
nop
les
and
fstl
pop
mov
mov
mov
pop
fwait
xorl
inc
shll
idiv
and
aas
mov
sbb
dec
inc
xchg
stos
xchg
pop
mov
pop
jns
sahf
push
dec
jp
jl
jl
cmpsl
jo
mov
imul
lcall
icebp
or
xor
push
and
jae
ds
mov
push
lret
mov
mov
fdivp
hlt
pop
push
adc
dec
ljmp
mov
or
dec
add
xlat
pop
out
outsb
incl
pop
cmp
popa
outsb
sub
inc
ss
loop
cmp
fidivrs
lods
push
jnp
jne
sbb
cmpl
popa
mov
dec
into
pop
add
ds
cs
scas
adc
add
dec
repz
enter
sti
jp
mov
add
add
into
arpl
pop
xchg
aaa
pushf
cmpsb
xchg
mov
add
add
add
testl
push
shll
cmp
fistpl
punpckldq
mov
gs
mov
adc
out
setg
adc
stos
push
stos
cs
pop
push
mov
ss
adc
inc
cmp
mov
fs
or
pop
or
aaa
jb
andl
pop
xor
ja
lock
cmc
out
lock
cmp
or
cmp
repz
inc
aas
fcompl
inc
and
jne
or
enter
add
cmpsb
movsb
jae
movsl
es
jb
mov
add
in
lret
jbe
xchg
mov
lock
xor
xchg
sbb
xor
arpl
pop
mov
adc
popf
mov
jae
add
std
dec
not
xor
xchg
popa
and
add
cltd
cmc
adcb
fcos
pop
mov
sub
add
add
add
mov
add
xor
repnz
inc
arpl
mov
jno
test
test
cmc
iret
shl
cmp
xlat
and
hlt
or
fstps
jno
movsl
fldl
inc
push
lret
push
daa
mov
lret
aam
and
fwait
xchg
out
fsubrs
sub
mov
and
xor
fbld
jle
mov
cmp
enter
mov
adc
xlat
jmp
std
cltd
cmp
pushf
icebp
add
mov
xchg
push
cmp
clc
das
nop
pop
inc
and
jns
ficompl
dec
jbe
enter
inc
jecxz
js
lds
out
shlb
bound
mov
out
cmpsl
sub
fnstcw
pop
shlb
les
jnp
fs
add
rolb
arpl
data16
outsb
adc
sbb
ret
stos
dec
mov
sbb
subb
dec
xor
addb
repz
lock
jg
in
and
aad
nop
addr16
add
add
add
out
xchg
sahf
jne
jp
or
fs
mov
shrl
cs
aad
pop
jmp
std
cmpsb
in
loop
rorb
xor
cmp
jmp
pop
mov
mov
or
xchg
adc
xor
out
shll
jnp
mov
stos
mov
jae
xor
pushf
stos
mov
imul
jg
sub
icebp
pop
imul
pop
dec
into
das
adc
shrl
mov
jmp
or
daa
mov
cmp
jmp
in
arpl
mov
push
dec
and
xchg
fildll
xchg
imul
jbe
out
xlat
sbb
mov
and
cmpsl
je
mov
xchg
sahf
test
call
adc
leavew
dec
test
lret
push
lea
ja
xchg
mov
in
dec
pusha
push
cmpsb
xorb
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
movsb
sub
addr16
add
out
mov
cmp
pop
cmovno
push
sahf
add
bnd
pop
popa
jbe
mov
xchg
xchg
flds
xor
or
add
stos
xchg
sbb
mov
mov
mov
pop
leave
adc
icebp
fisubs
scas
and
scas
pop
into
std
aam
mov
inc
ret
mov
adc
loopne
adc
dec
std
lds
mov
pmulhw
clc
inc
insl
jb
gs
ret
js
lcall
push
dec
jmp
jl
shlb
test
push
or
fcomps
mov
mov
out
mov
leave
into
das
push
out
jnp
add
inc
cmp
sti
mov
adc
pop
mov
outsb
add
push
nop
psubsb
cmpsb
and
inc
cmp
xchg
cmpb
dec
test
out
pushf
pop
cmp
xchg
mov
lret
and
stc
mov
dec
js
stc
mov
dec
int
int3
rcrl
add
add
add
xchg
jg
sbb
std
es
mov
xchg
idivl
sti
in
cmpsb
sarl
xchg
rcr
pop
pop
and
fistl
dec
mov
enter
sbb
daa
jmp
add
sarb
lods
ficoms
and
pop
push
js
lods
rcl
and
imul
repz
pusha
aas
pop
cmpb
mov
sbb
insl
shrl
movsb
fildl
ds
dec
dec
xor
scas
call
adc
push
sub
out
in
inc
fs
shll
sub
ss
mov
adc
ret
add
xchg
xor
mov
mov
add
int3
inc
stos
mov
push
lret
outsl
push
leave
insl
movups
dec
sub
and
xor
pop
cmpsl
pop
cwtl
mov
dec
lods
aaa
imul
int3
leave
mov
pop
insb
fildll
fwait
jns
jns
sub
ret
add
add
add
mov
mov
enter
pop
ja
push
sub
add
jmp
push
or
jmp
mov
stos
in
lea
pop
jge
insb
gs
xchg
insb
xchg
xchg
or
ss
pop
icebp
sub
cmpsl
nop
in
test
lret
cld
repnz
out
into
cmp
inc
xchg
mov
jge
data16
sub
xchg
pop
cmp
mov
cmp
xor
into
push
cmc
push
pop
mov
pop
insb
stos
gs
xchg
fisubrl
pop
cmp
xor
outsl
cmp
xor
addb
movsb
andl
cmp
mov
ds
and
add
popa
popa
clc
xor
and
movsl
dec
mov
rcrl
or
jge
adc
pop
inc
aas
test
pop
jmp
popf
out
pop
sbb
jg
mov
out
sub
sub
cmp
jnp
adc
jne
inc
jbe
pop
addr16
add
add
add
out
dec
push
insl
mov
fs
cli
rcl
cmp
sub
jp
orl
fistl
push
mov
push
jp
sarb
fldt
pop
push
push
xor
xchg
inc
cmpsb
movsl
push
pushf
mov
adc
test
in
in
jg
ret
pop
xchg
jp
clc
cmp
cmp
je
jge
sbb
imul
add
jecxz
in
movl
jbe
repz
mov
je
sbb
aam
test
and
add
mov
push
cmp
aam
jae
push
mov
stos
cmc
jmp
xor
sti
jmp
loopne
or
adc
push
mov
mov
inc
sbb
sbb
outsb
add
pop
xor
or
mov
arpl
xor
aaa
lea
faddl
mov
adc
inc
xor
ja
and
out
lods
xor
aas
xlat
fistl
das
push
loop
cld
addr16
add
add
add
mov
idivl
pop
sub
sti
hlt
clc
jge
mov
push
mov
mov
jnp
shr
dec
jmp
sub
shlb
dec
jb
outsl
iret
sbb
inc
xchg
daa
repz
ljmp
sub
imul
mov
push
push
mov
pop
mov
fisttpll
stos
lcall
lock
mov
out
pop
cmp
lods
jge
cmc
push
add
mov
in
in
in
out
sub
pop
sub
mov
dec
and
and
sbb
add
add
les
mov
dec
xchg
pop
mov
push
out
cmp
dec
xor
in
cmpsb
mov
and
addr16
cmp
sbb
nop
mov
in
xchg
ficoml
lret
ret
fstps
pusha
fcmovu
pop
or
dec
cmp
pop
jae
jno
mov
shl
add
add
jb
scas
decb
fisttps
loopne
mov
in
add
add
add
push
in
cmpsb
inc
sbb
cmpsb
mov
push
sbb
adc
frstor
mov
mov
push
xchg
and
hlt
mov
jge
lea
cmp
pop
mov
adc
mov
sub
cld
push
jle
or
xorb
ss
dec
inc
fstl
shlb
mov
imul
xchg
push
nop
jno
imul
pushf
cmpl
scas
xchg
push
les
dec
and
sub
sbb
adc
idiv
pop
xchg
inc
arpl
shll
loope
lcall
clc
xlat
std
xchg
in
lret
sbb
mov
add
dec
adc
jne
dec
xor
xor
jno
inc
mov
shll
adc
and
mov
repnz
jl
mov
sub
insl
mov
sub
and
loop
shlb
mov
xlat
mov
xchg
xor
ss
addr16
add
add
add
push
jne
push
lret
dec
jno
outsb
pop
lahf
imul
jmp
sub
adc
stos
imul
out
sbb
stc
jg
xlat
subb
sbb
iret
daa
test
sbb
xchg
lock
or
ror
lock
addb
mov
dec
and
movb
das
xchg
andb
jmp
cld
int3
out
sub
or
adc
stc
mov
aas
mov
add
in
xchg
cmpsl
mov
loope
xor
jne
push
and
adc
dec
xchg
xchg
sbb
or
cld
or
in
mov
loop
sbb
sbb
insb
cld
out
orl
std
pop
mov
adc
ds
xor
push
and
call
ljmp
inc
xor
cli
out
jo
mov
fsts
xor
mov
lock
mov
cltd
push
das
dec
pop
movsl
add
add
lods
cmp
lods
aas
mov
push
add
add
add
js
mov
xchg
xchg
and
dec
sub
dec
ja
inc
inc
js
adc
es
iret
bound
sub
aam
mull
lea
push
mul
xor
cmp
cs
sub
test
add
sbb
bound
lcall
sub
mov
cmp
or
mov
iret
add
in
js
loop
mov
jae
and
ds
les
push
in
adc
test
bound
xchg
or
cmp
xor
mov
inc
mov
in
sbbb
movsl
sbb
icebp
add
mov
cmp
and
ljmp
push
jge
addb
bound
jl
insl
sarb
ja
xchg
xor
xor
sub
mov
pop
cmp
insb
je
clflush
loop
fadd
sti
mov
ret
aam
lock
add
add
or
pop
negl
push
push
test
cmpsl
cmpsb
lret
cmp
sub
test
shrb
cltd
movsb
repnz
jmp
xchg
iret
hlt
in
push
jmp
outsb
or
movsl
mov
mov
shll
sub
mov
push
jg
das
mov
push
mov
mov
pusha
nop
arpl
in
ror
xor
push
sub
sar
out
xchg
int
fnstcw
std
jb
jl
or
mov
pop
in
test
je,pn
out
rcll
jnp
outsb
jge
push
or
scas
fcomps
bound
mov
dec
or
inc
add
add
sbb
call
aas
adc
loope
sub
fistpll
xchg
mov
stos
mov
push
sti
movsb
rol
push
lcall
test
pusha
and
cld
push
cmp
adc
neg
jge
xchg
jns
xchg
mov
jno
icebp
add
add
add
sti
lods
pusha
xchg
inc
fnsetpm(287
rcll
or
cltd
loopne
add
in
and
imul
in
orb
jmp
mov
test
popf
mov
adc
les
sbb
jge
fwait
subl
stc
stos
rol
mov
push
mov
jmp
call
push
fsts
loopne
inc
adc
icebp
fidivl
clc
int3
lea
std
sub
lahf
cmp
pop
int3
pop
or
imul
mov
filds
adc
imul
or
add
push
or
adc
mov
rclb
fldl
lret
jns
notb
sub
call
xchg
scas
cmp
jae
mov
rcrl
jnp
push
repnz
add
lcall
add
pop
cmp
outsl
jg
jg
sub
fcmovu
fs
jp
repnz
add
add
jb
cld
push
hlt
icebp
pop
adc
or
jbe
push
int
pop
int3
leave
sbb
sti
fld
sarl
bound
popa
jmp
lea
sahf
mov
mov
imul
pop
add
mov
icebp
into
imul
jns
xor
fwait
pop
cli
lods
test
mov
mov
inc
shrb
mov
cmpsb
in
mov
push
ss
push
sbb
xchg
xchg
outsb
sbb
push
add
xlat
inc
fs
adcb
mov
pop
sbb
cltd
aas
push
shrl
lock
imul
loope
jae
xor
les
push
outsl
mov
or
les
mov
iret
idivl
xor
jp
xchg
mov
jp
mov
mov
mov
sti
lods
sub
xor
shlb
inc
jmp
pop
js
cmpsb
adc
lea
push
or
aaa
add
adc
aaa
sub
add
add
ja
and
aaa
divl
jl
push
repz
add
add
push
push
or
push
lret
lret
pop
jne
xchg
dec
xor
and
jne
cmp
mov
mov
push
adc
add
sbb
stos
dec
lea
js
lds
push
lds
int3
inc
leave
add
movsl
je
mov
repnz
clc
add
xor
out
aas
jmp
dec
pop
sub
jl
outsb
fucomi
repz
and
add
jg
cmp
pop
mov
fdivrs
jp
out
pop
mov
sub
jne
test
in
mov
sbb
cs
movsb
sbb
mov
pop
mov
xchg
xorl
pop
mov
add
jae
xchg
cmc
js
mul
push
test
or
fld
stc
xor
dec
cmp
pop
mov
idivl
cld
insl
xchg
pop
fucom
push
call
jmp
js
xchg
sbb
pop
pop
in
xchg
jecxz
jmp
mov
pushf
adc
push
addr16
add
add
add
dec
loop
jnp
nop
dec
xor
cmpsb
or
mov
mul
sbb
jns
xchg
mov
inc
js
pop
sbb
clc
loop
test
xchg
fwait
dec
loopne
hlt
ja
js
cli
insb
mov
push
imul
fs
sub
jns
fistpl
inc
repnz
ret
aam
insb
hlt
inc
inc
inc
xor
mov
sbb
adc
js
movsb
rclb
test
pop
cmp
push
mov
mov
test
cmp
inc
repz
jbe
xor
fsts
xor
lret
addr16
and
fildll
mov
pop
cmpsl
arpl
dec
or
sbb
dec
mov
or
imul
sbb
and
xchg
cmpsl
mov
pop
fcmove
cmp
loop
inc
dec
popa
mov
mov
push
arpl
mov
mov
add
pop
jge
add
add
jne
pusha
popf
pop
and
cmc
add
add
add
adc
popw
inc
movntps
mov
pop
arpl
insl
mov
ds
dec
inc
pop
hlt
ds
sub
dec
lcall
notb
add
mov
xchg
dec
cs
lret
sub
inc
jbe
and
sub
clc
inc
mov
add
popf
lds
fsub
lods
dec
loope
dec
cmp
jmp
pop
mov
fdivl
sbb
xor
out
mov
ljmp
or
popf
xor
cwtl
das
sub
daa
and
fcomps
mov
xor
pop
and
cmpsl
add
in
ret
push
inc
ds
adc
xchg
push
mov
ret
mov
cmp
in
mov
inc
in
in
gs
bound
cli
xchg
shlb
push
inc
jmp
add
sub
scas
fdivr
fnstcw
jecxz
test
testb
add
add
test
dec
lods
xor
xor
mov
mull
dec
sbb
ja
pushf
xchg
adc
mov
push
ficoml
in
lods
xor
add
cmp
xchg
cmp
fistl
lahf
xor
lods
fucomp
and
aad
ljmp
fmuls
mov
mov
jbe
scas
mov
pop
xor
xor
dec
mov
fimuls
xor
and
mov
push
loopne
int
cmp
push
jmp
lcall
arpl
pop
in
adc
mov
hlt
mov
in
lds
lea
not
mov
xchg
xor
repz
call
sub
push
pop
lret
mov
incb
es
jg
jmp
pop
mov
xlat
jg
rolb
jbe
mov
jg
mov
test
ret
add
xor
jb
jae
xchg
cmp
xor
add
add
test
test
jae
cmp
pop
leave
imul
pop
leave
hlt
add
popa
stc
cltd
dec
jne
push
push
movsl
push
and
mov
mov
loop
sub
loop
cli
aam
movsb
push
bound
fildll
xchg
shr
in
in
xor
loopne
mov
mov
icebp
adc
jmp
fildll
leave
shl
in
ss
inc
andb
sub
push
pop
push
movsb
sarb
insb
inc
cltd
mov
addr16
xchg
sahf
mov
popa
lea
jmp
stc
repz
stc
inc
mov
pop
std
or
pop
scas
jmp
or
adc
repz
and
mov
or
xor
cmp
sub
jnp
dec
pop
into
mov
loopne
pop
call
enter
iret
stc
mov
cmc
cmpsl
int3
out
frstor
mov
das
leave
or
add
adc
int
in
idivl
js
mov
xchg
lea
insb
addr16
add
add
add
incb
andl
adcl
cli
push
cltd
dec
adc
jl
add
jecxz
dec
jno
lods
movsb
ss
daa
mov
add
cmp
mov
mov
add
and
jb
repnz
and
sub
sub
cmp
pop
xchg
fxch
jge
inc
xor
rcr
mov
outsb
inc
inc
xchg
clc
out
test
xchg
test
mov
or
repz
in
adc
dec
dec
dec
popa
leave
lods
adc
cld
mov
inc
adc
xchg
xchg
addr16
iret
push
xchg
inc
imul
out
out
add
rcll
in
rorl
movsb
add
xchg
mov
mov
scas
jg
jne
pop
mov
and
cmpsb
aas
fdivp
mov
adc
sbb
aas
jecxz
mov
add
push
lret
inc
xor
xchg
cmpsb
pop
es
inc
cli
aas
into
lret
pop
add
jmp
add
add
xor
mulb
mov
aaa
mov
sub
ss
fistpl
icebp
pop
loope
ror
xchg
xor
push
jg
add
addr16
sub
repnz
mov
lea
sub
cmpsb
jo
dec
sub
or
cld
or
or
lea
sbb
pop
loope
dec
pop
xor
or
stc
xorl
push
or
pop
addl
sbbb
xor
xchg
scas
pop
adc
jmp
je
arpl
dec
jb
pop
xchg
adc
mov
lds
add
psadbw
shll
cltd
push
lret
lods
rolb
ss
and
xor
enter
es
cmpsl
add
mov
mov
test
es
xchg
arpl
enter
paddsw
jae
jno
mov
lcall
into
data16
addr16
add
add
add
nop
mov
push
mov
jle
adc
dec
fcomi
mov
jg
nop
scas
mov
mov
loopne
inc
movsb
cmp
xor
fdivl
fldt
mov
dec
xchg
push
out
adc
adc
xchg
aam
mov
out
loop
push
mov
or
adc
sub
pop
fs
mov
loopne
dec
gs
popf
and
adc
mov
fwait
xchg
ja
xlat
imul
xor
outsl
xchg
pushf
jns
and
or
jg
cmpsl
cmp
test
jl
int3
pop
imull
jb
movsl
fadds
pop
lds
mov
scas
dec
insb
int3
push
sub
fcmovnu
sti
mov
dec
mov
mov
idivb
popf
mov
lods
iret
testl
adc
lds
xor
add
aaa
jae
cltd
dec
mov
jno
push
xchg
xchg
addr16
add
add
add
jnp
add
dec
xchg
mov
cmp
icebp
rcrl
ret
cld
pop
sarb
scas
sub
pushf
addb
sub
add
ljmp
scas
pop
push
dec
cwtl
mov
js
leave
mov
mov
push
mov
jne
adc
iret
xor
into
jge
mov
pop
add
dec
jp
in
cld
jmp
add
xchg
xchg
sbb
and
cld
adc
iret
xchg
orb
mov
pop
or
push
aaa
insl
cmp
or
fadd
outsb
sub
or
add
loopne
push
in
xor
sbb
inc
jnp
aam
push
mov
in
cld
xchg
cmpsl
dec
sub
in
xchg
pushf
add
pop
mov
movsl
iret
jp
int3
adc
hlt
and
or
xor
outsb
xor
divb
ret
orb
xor
cwtl
push
cli
adc
ds
into
nop
out
cwtl
jle
push
sub
dec
pushf
fstps
aam
cld
add
add
add
sbb
mov
and
jmp
mov
add
push
hlt
mov
inc
inc
outsb
jne
inc
fldl
dec
cwtl
lcall
push
xchg
push
adc
xchg
adc
shlb
sub
bound
scas
loope,pn
insb
stos
mov
ret
sub
lods
testb
repnz
test
inc
lods
pop
mov
dec
pop
les
fwait
bound
xchg
mov
xor
test
mov
clc
popa
jg
into
adc
mov
rorb
mov
mov
test
cmp
ficoms
mov
sub
cmpsb
scas
les
mov
aad
sar
sbb
and
leave
mov
in
pop
outsb
inc
mov
flds
jnp
cwtl
stos
fdivs
and
or
pushf
cld
ret
mov
in
inc
jecxz
pop
sti
adc
aad
insl
inc
sub
ret
jmp
jno
test
jg
push
pop
push
mov
addr16
add
add
add
jge
bound
les
and
lea
or
mov
test
pop
cmc
cmpl
or
fsubrl
add
mov
cld
mov
out
jb
loop
xlat
outsb
dec
jb
rclb
pushl
push
call
pop
into
mov
xor
cwtl
out
out
hlt
adc
dec
sub
lret
sub
ljmp
lea
shll
cmc
sarb
cmp
jp
push
ss
mov
mov
cmc
pusha
jp
stos
xchg
nop
pop
pushf
inc
xchg
rolb
mov
pop
sub
lods
shlb
movl
inc
lret
fbstp
jle
loop
push
jne
jne
lret
cltd
sbb
hlt
out
mov
fs
data16
in
movsb
push
xchg
sub
lcall
lods
cli
mov
adc
movsb
push
in
cmc
jne
sbb
js
xchg
hlt
incb
add
add
add
fstp
pop
arpl
inc
repz
imul
mov
lahf
and
xchg
dec
pusha
loopne
test
mov
jne
jl
ljmp
loope
cmpsb
pop
mov
jmp
cmp
jnp
pusha
pop
mov
int
push
mov
out
cmpsb
sbb
jbe
loopne
adc
dec
lea
jge
movsl
xlat
in
outsb
add
pusha
pop
mov
enter
mov
fidivl
out
mov
push
mov
cld
xor
mov
insb
pusha
cltd
jo
repnz
outsb
jnp
dec
popa
sub
push
jmp
imul
dec
sub
lods
into
mov
jmp
inc
lahf
cld
jno
push
shrb
or
sbb
les
aaa
jmp
popf
movsl
pop
in
push
mov
aaa
pop
dec
dec
fcmovbe
and
mov
sbb
shlb
aas
out
int3
mov
and
and
incl
add
add
add
test
lret
jg,pn
cmp
push
enter
aam
or
inc
cmpsl
xor
xchg
mov
jno
test
jp
rolb
and
call
pop
nop
add
test
stc
and
sub
inc
or
xchg
mov
call
out
lock
add
xor
daa
xchg
xorl
inc
pushf
out
xor
int
rcll
mov
lahf
imul
jns
arpl
gs
aas
cmc
jns
adc
mov
push
shlb
dec
stos
fs
mov
fistl
fiadds
fiaddl
inc
std
jle
mov
stos
fisttpl
mov
xchg
inc
sbb
les
push
or
dec
inc
xchg
lret
push
adc
or
outsl
adc
pop
lret
fmull
cwtl
cltd
push
mov
imul
stc
lods
loopne
inc
dec
or
mov
and
outsl
outsl
add
add
add
add
push
lock
jl
fmuls
shrb
mov
mull
enter
adcl
pusha
movsl
xchg
xchg
xor
push
push
mov
jb
xor
sub
mov
out
and
stos
pop
loope
add
loope
jns
faddl
test
xorb
pushl
sahf
ffreep
xchg
sbb
push
xchg
pop
clc
push
add
daa
mov
aad
xor
gs
aaa
test
xchg
jnp
sub
cld
add
insb
es
in
ret
xchg
test
xchg
enter
fisubrl
fs
xchg
dec
sarl
std
ljmp
mov
mov
sub
sub
cwtl
movsb
xor
sub
push
push
das
lea
pop
xchg
pop
fcmovu
lock
inc
insb
adc
mov
jne
rclb
xor
insl
cmp
aas
mov
mov
dec
jecxz
dec
rol
lret
clc
cmc
inc
stos
repz
or
add
add
add
dec
scas
and
inc
ljmp
add
movsl
jne
in
xor
jecxz
sbb
push
lods
push
divl
adc
das
ds
into
push
dec
jnp
xor
push
sub
push
outsl
cld
imul
in
notl
mov
push
aas
cltd
pop
in
sub
aad
insl
mov
adc
test
dec
mov
mov
gs
cld
xchg
rcrb
sub
rolb
pop
mov
ds
or
mov
xor
adc
pmullw
lret
dec
xchg
mov
xchg
mov
fiadds
sbb
sbb
push
std
or
push
imul
jno
das
cld
ret
xor
sbb
aam
or
imul
lods
inc
cmp
mov
pop
lea
clc
fldcw
inc
mov
add
add
std
aaa
mov
shll
jg
add
add
add
add
movl
int3
xlat
jb
sbb
pushf
cs
or
xchg
loop
into
into
cmpsb
add
test
mov
stos
repz
insb
rorl
pop
lcall
out
pop
push
fdivs
bound
jg
paddsb
xchg
sbb
add
or
movb
inc
cmp
pop
sahf
or
mov
fnstsw
dec
mov
movsl
mov
push
in
mov
jmp
leave
sahf
rcll
je
mov
fmull
and
pop
sub
fidivrs
cmp
mov
lcall
mov
adcb
mov
icebp
mov
cli
out
mov
fiaddl
xchg
sbb
xchg
and
test
dec
push
mov
stos
push
inc
and
or
jb
outsl
cmp
cli
mov
pop
ja
das
jmp
insl
aam
mov
scas
add
test
add
add
add
jno
fisttps
sbb
lcall
les
inc
daa
cmp
shll
push
lods
xchg
orb
jne
cmc
mov
dec
xchg
enter
push
fsubrs
in
push
in
xchg
pop
cmp
sub
cmp
dec
out
adc
loop
test
xor
inc
mov
iret
testl
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
orl
cmc
fnstenv
loop
scas
sbb
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
