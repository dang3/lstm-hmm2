push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
mov
sbb
sbb
adc
sbb
sub
rorb
cs
push
mov
psubw
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
hlt
adc
mov
insb
xchg
cmp
add
inc
add
fistpll
pusha
shll
daa
in
scas
ret
xchg
in
je
shrl
xchg
aaa
adc
push
jecxz
mov
int3
stos
ficoms
jp
jnp
sub
test
loopne
inc
hlt
sub
and
and
cmp
adc
das
loop
arpl
pushf
ljmp
jo
pop
sbb
test
sbb
stos
jmp
lods
cmp
xchg
lea
xor
mov
xor
scas
fmull
loope
mov
in
scas
and
jne
div
inc
sbb
mov
and
sub
xchg
xor
sub
and
cmp
push
rcl
jle
cmp
psubusw
fidivrl
fists
mov
lea
mov
sbb
xchg
jnp
mov
push
cmp
movsl
insb
or
jnp
imul
arpl
popf
sub
sub
mov
fsts
or
sahf
add
or
add
mov
stc
xor
mov
cld
inc
ljmp
cld
adcl
jno
jg
lock
aaa
in
inc
cmp
push
sbb
adc
mov
mov
sbb
mull
lock
dec
pop
hlt
pushf
push
out
rolb
dec
pop
push
out
fpatan
mov
add
ffreep
pop
or
gs
insl
push
inc
xchg
cmp
jg
sahf
mov
cwtl
mov
sbb
orb
scas
leave
jns
int3
aad
jbe
sub
ret
enter
lahf
or
mov
or
fnsave
cmpl
push
pop
and
lea
push
adc
cmpb
sbb
mov
push
lret
mov
jp
subl
inc
mov
mov
out
sahf
xchg
loope
adc
mov
into
xor
pop
lds
adc
sub
lret
out
lahf
fistpl
adc
xchg
cmp
mov
adc
pop
out
insl
cs
jg
mov
outsb
cwtl
mov
call
inc
xchg
mov
fistps
pop
xchg
sub
test
call
lret
sbb
push
cmp
push
repz
inc
adc
xchg
out
or
addr16
adc
push
or
shrl
dec
sub
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
mov
mov
repnz
rcrb
cmp
popa
je
pop
and
pop
or
pop
cltd
psrlw
xor
or
mov
les
pop
jae
xchg
push
add
cmp
imul
jbe
icebp
cmpsb
fidivrl
mov
dec
add
cmc
lds
mov
adc
lock
lret
out
mov
dec
js
outsl
and
and
pusha
push
mov
mov
lret
mov
jbe
dec
sub
fwait
cltd
pop
fiadds
cmc
nop
sbb
inc
xchg
call
lods
inc
mov
mov
out
test
and
enter
lret
push
mov
dec
mov
xchg
stos
movsl
cli
sahf
mov
adc
pop
adc
fsubrl
imul
aad
jnp
sarb
cmp
out
std
and
or
test
jbe
aaa
and
add
jecxz
and
hlt
jae
sbb
xchg
xchg
cwtl
test
lds
sbb
push
adc
js
add
mov
mov
pop
dec
xlat
sub
cwtl
out
mov
test
mov
mov
aaa
add
xor
lcall
mov
roll
subl
push
mov
push
ja
add
ret
inc
xchg
pop
test
adc
jo
fidivl
jl
xor
sti
fsubs
pop
mov
stos
das
mov
stos
repz
into
lock
xchg
mov
mov
jl
xor
sub
and
imul
imul
jge
and
jge
imul
imul
data16
ds
jns
cmp
add
call
int
pop
mov
inc
nop
lods
neg
cmp
fldcw
push
and
pop
enter
cmp
aaa
xor
jo
adc
mov
dec
sub
mov
xchg
mov
mov
fnsave
add
jbe
add
push
jmp
outsb
mov
xchg
inc
ret
and
ss
add
xor
mov
pop
cwtl
repnz
repz
jnp
xor
mov
aaa
sub
lods
mov
out
mov
cmp
dec
mov
inc
subb
mov
stos
pop
cli
ret
ds
push
and
incl
mov
rorl
jle
faddp
adc
adc
sub
mov
mov
push
inc
or
in
sarl
xor
mov
js
xchg
lea
xor
cmp
shll
add
xchg
add
cmp
sbb
jbe
mov
xorb
add
mov
inc
cmp
xor
out
rclb
jno
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
jbe
push
mov
sub
push
pop
shrb
push
jae
xchg
jmp
call
mov
and
mov
pop
pop
pop
mov
fmul
adc
mov
push
xchg
and
les
and
pop
arpl
push
in
jae
into
into
stos
aas
mov
add
lret
es
iret
scas
push
jle,pt
lock
push
add
rorb
lods
mov
xor
addb
insb
out
jnp
jb
inc
gs
jmp
xchg
test
test
in
shrl
sti
cwtl
mov
mulb
and
insl
gs
pop
mov
test
mov
pop
insb
pop
xchg
cmp
add
stos
pop
or
jp
loop
out
pop
daa
mov
lcall
jb
adc
popf
lea
mov
test
xlat
pushf
or
mov
mov
mul
jge
pop
sbb
mov
pop
adc
roll
inc
inc
dec
jnp
aad
lcall
sub
aaa
dec
loopne
inc
mov
mov
aaa
fidivs
sahf
push
adc
add
aas
out
mov
xchg
loopne
pop
cwtl
fbstp
int3
stos
jge
sbb
mov
pop
fnsetpm(287
adc
jle
fsubrl
cli
cmp
out
sub
jbe
ss
push
mov
lahf
call
repnz
mov
and
sahf
lcall
fistl
xor
jecxz
sbb
movb
lods
out
mov
sub
inc
mov
popl
jbe
lock
out
add
mov
jecxz
sbb
add
dec
ret
loope
pop
xor
xchg
jae
add
mov
mov
stos
push
daa
enter
adc
popf
jnp
cmp
jecxz
ficompl
outsl
into
and
pop
movsl
dec
enter
mov
inc
mov
sbb
add
outsl
je
adc
arpl
add
js
mov
mov
xlat
sbb
subb
mov
mov
add
mov
ret
je
mov
inc
hlt
mov
test
inc
cltd
jecxz
fpatan
imul
test
jae
mov
pop
cmp
sub
aad
xor
out
ljmp
movsb
dec
fisubl
loope
cwtl
add
fisttpll
outsl
push
mov
inc
repz
add
std
rorb
fnsave
in
jo
push
shr
mov
repnz
or
push
sub
repnz
jbe
push
into
sub
or
pushf
xchg
int
dec
jp
out
mov
add
ja
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
jno
mov
and
sbb
mov
hlt
sbb
ds
pop
xor
out
xchg
cmp
xchg
mov
mov
adc
rolb
cmc
jp
push
dec
push
outsl
cmp
popa
dec
sub
adc
or
mov
jae
cmpsb
push
jae
pop
arpl
in
sub
sbb
mov
sbb
jmp
ja
testl
add
movsl
or
and
mov
sub
cmp
outsl
pop
dec
lret
cmpl
sub
aad
leave
pop
test
cmp
push
ret
mov
fsubs
add
jmp
lods
mov
mov
ret
mov
das
jmp
js
test
mov
aam
insl
cmp
call
out
cwtl
aas
fwait
bound
or
daa
jecxz
cmp
jle
in
xor
and
push
mov
data16
and
inc
ds
cmpsl
ljmp
rolb
inc
in
cmpsb
sub
mov
mov
addb
fs
lcall
and
or
and
repnz
in
adc
mov
daa
mov
mov
jge
jecxz
repnz
lock
ds
xor
roll
xchg
iret
or
outsl
push
cwtl
fucomip
fadds
repnz
sbb
adc
pushf
call
enter
aad
pop
rol
scas
dec
mov
add
fmuls
je
mov
xor
lea
push
xchg
xchg
jp
roll
movsl
sbb
cmpsl
aaa
lea
lods
xchg
pop
xlat
sub
negl
mov
adc
jp
nop
xor
adc
stc
std
neg
rolb
mov
into
jl
aas
and
jbe
into
or
popf
mov
jbe
fwait
mov
xor
push
push
pop
cmpsb
sti
and
cltd
mov
adc
jno
jg
fcoms
icebp
mov
dec
add
sub
xchg
xor
out
mov
add
ja
jae
and
ret
fbstp
orb
out
and
mov
adc
scas
lahf
mov
push
data16
outsl
jp
cld
push
cmp
xchg
fistpll
adc
pop
or
and
or
push
mov
add
lods
mov
ss
or
test
out
cmc
rcl
mov
adc
cmpsb
stc
jecxz
pop
in
mov
or
push
mov
sub
sbb
inc
mov
iret
pop
xchg
mov
mov
dec
inc
pop
add
loope
dec
cmpsl
or
js
and
jno
mov
and
call
add
inc
icebp
xor
adc
in
repnz
mov
mov
aas
add
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
outsl
call
sbb
and
sbb
sbb
inc
sub
int3
ljmp
xor
cmp
mov
or
repnz
aaa
jbe
shlb
mov
fwait
in
bound
stos
lods
popa
sbb
jns
lods
imul
dec
mov
les
divb
adc
push
mov
mov
jl
mov
jnp
fwait
cmpb
popf
pop
flds
addr16
in
in
loope
sub
dec
mov
loope
int3
add
xchg
adc
jo
stos
push
inc
xor
ret
das
lret
ret
cmp
push
xor
jecxz
xor
int
sub
mov
orb
and
js
jl
test
cmp
sbb
xchg
clc
xlat
mov
mov
bound
test
sbb
cli
push
arpl
sub
es
pop
mov
lock
divl
xlat
mov
jmp
pop
mov
sbb
arpl
jle
sbb
or
call
sbb
pop
inc
ret
mov
test
mov
inc
les
dec
ja
xchg
push
inc
lret
push
or
adc
add
into
sub
and
pop
cld
push
xor
mov
mov
xor
mov
add
ss
addb
add
and
and
pop
xor
lahf
xor
inc
in
inc
lret
jno
mull
hlt
popl
aad
popa
dec
leave
fsubrs
xchg
incb
sub
adc
clc
inc
jo
fldenv
dec
mov
inc
cwtl
xor
ror
xchg
push
xchg
jbe
iret
je
mov
pusha
and
popf
ret
lods
mov
mull
in
std
xlat
outsb
jne
push
loop
out
test
fldcw
cmpsb
sti
in
out
jmp
adc
xor
sbb
mov
mov
loop
pop
iret
mov
xchg
push
cmp
jecxz
sub
adc
jnp
adc
push
mov
mov
movsl
rcrl
addr16
sbb
popf
dec
out
jge
inc
mov
or
hlt
fisubl
jg
fcompl
movsb
into
daa
cmp
xor
pop
fs
pop
insb
bnd
aam
clc
adcl
mov
xlat
xorb
roll
and
popf
adc
push
test
xor
jb
mov
fisttps
pop
addr16
mov
int3
cltd
xlat
lea
xor
jne
pop
pop
shr
in
fadds
xor
stos
sbbl
and
fdivp
or
or
push
pusha
mov
pop
sysexit
stos
mov
loop
out
sti
inc
dec
ret
in
sub
mov
xor
loopne
add
aas
pushf
xor
addl
add
shr
mov
adc
jmp
add
ret
xor
sub
out
fnstsw
call
sbb
and
sbb
and
stc
test
jb
aad
dec
mov
sub
lret
xor
pop
fdivrs
or
mov
cmp
insl
in
xchg
ljmp
or
jl
and
jg
xchg
mov
insl
mov
pop
mov
push
and
add
dec
xor
add
call
push
ja
gs
xor
adc
test
pop
sub
lea
je
mov
testl
pop
daa
push
ret
cmpsl
pop
lods
xchg
rorl
outsl
lahf
cmp
mul
das
jno
cmp
jbe
stc
sub
sbb
mov
imul
out
cld
jp
mov
rcll
dec
cmp
out
andb
jb
push
push
cmc
test
add
jae
adc
jnp
mov
mov
orb
aam
leave
sbb
lods
pop
push
dec
add
or
xor
jno
push
cmc
sbb
decb
or
or
inc
pop
inc
push
xorl
mov
bound
inc
jbe
pop
mov
out
pushf
pop
imul
cmc
aaa
push
or
xchg
nop
in
jb
jle
ljmp
fwait
push
or
repnz
jae
mov
push
sbb
outsb
sbb
mov
cli
inc
les
icebp
sub
push
adc
repz
push
cmp
imul
fwait
out
inc
sbb
sti
pop
jge
push
dec
sub
xchg
push
xor
pop
rorl
in
mov
xor
sbb
dec
pushf
adc
jmp
sbb
mov
xor
add
lahf
int3
push
sbb
mov
sbb
mov
cs
pop
scas
cmpsl
mov
or
cmp
sahf
repnz
sbb
and
fstp
xchg
jns
push
cmp
imul
out
push
add
sub
ss
enter
mov
mov
insb
and
cs
cld
out
test
stc
cmp
lea
push
mov
add
jmp
call
scas
xchg
adc
pop
lods
cwtl
xchg
adc
mov
pusha
enter
iret
dec
into
stos
addr16
cltd
mov
movsl
mov
sub
adc
jns
shl
jl
pushf
sbb
test
ljmp
and
dec
cmpsb
and
aad
dec
call
push
jmp
cmp
dec
aam
aaa
push
cli
jg
push
pop
loop
aam
cmpsl
sarb
jne
nop
dec
cwtl
fisttpll
lret
or
jnp
fldln2
and
mov
into
xchg
cmp
mov
pop
imul
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
pop
inc
mov
and
sbb
loop
divb
fidivrl
pop
jnp
sub
pushf
mov
pop
inc
inc
aaa
pop
test
jno
and
iret
mov
int3
out
xchg
test
push
ja
push
lret
mov
lea
popf
xchg
xchg
dec
je
and
or
lods
fsubrl
mov
movsl
xchg
aam
loopne
push
daa
shlb
or
push
ret
adc
lds
aas
jno
or
or
pushf
xchg
xchg
sar
scas
and
stos
jecxz
inc
jne
cltd
es
sbb
nop
orw
cld
call
xchg
and
xor
pop
cmp
test
add
push
cmp
add
cli
and
xor
dec
cltd
mov
mov
testb
sbb
inc
out
insl
inc
les
xor
scas
push
xchg
sub
paddusw
adc
callw
rorl
negl
std
or
mov
fstps
divb
add
mov
push
push
dec
lods
sti
sub
add
scas
arpl
jbe
xchg
call
pop
xor
add
xor
addr16
ljmp
scas
and
iret
gs
push
call
in
mov
fdivl
add
insl
cmp
int3
push
aaa
es
fucom
pop
xchg
xchg
loopne
jg
add
sub
testl
push
test
mov
xor
mov
inc
or
out
ret
inc
push
mov
call
stos
cmp
pop
test
in
mov
aaa
pop
dec
data16
pop
jo
xchg
sub
add
xorb
inc
ljmp
cmpsl
xchg
inc
enter
xchg
or
lcall
push
jl
mov
clc
jg
xchg
cli
mov
mov
aam
mov
test
insb
cli
das
call
mov
sti
in
adc
sahf
mov
inc
or
std
cmpsb
mov
decb
pop
fadd
sub
pop
inc
sub
inc
cmp
mov
cmp
pop
mov
mov
cmp
das
in
or
xchg
testb
stos
mov
scas
addr16
pop
fnsave
ss
jmp
jg
xor
movsl
push
push
push
cld
mov
outsl
outsb
add
push
stos
fwait
or
imul
scas
push
cmp
ss
cmp
jmp
lods
and
and
jmp
notb
pop
lret
icebp
sub
cmp
sbb
mov
ljmp
jno
fadd
cmpsb
popa
lods
popa
test
adc
jo,pn
pop
xchg
push
mov
daa
or
inc
xchg
call
test
or
sbb
dec
sbb
rolb
adc
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
push
stos
push
lock
and
sbb
std
daa
movsb
mov
rcr
scas
push
outsl
push
std
xchg
faddl
fistpl
add
and
push
adc
sbb
popa
dec
jno
or
add
xor
cltd
mov
rorl
jmp
sbb
ljmp
and
push
inc
and
sbb
rorl
sahf
outsl
data16
fmuls
pop
enter
xchg
lahf
mov
ror
push
in
insl
dec
flds
bound
dec
push
and
fisubrl
hlt
xlat
pop
daa
sub
inc
loop
insb
xorb
dec
jg
or
mov
movsb
fbld
sub
mov
push
fidivrl
inc
js
ljmp
push
jno
fdivp
jl
test
test
les
push
sti
adc
inc
push
mov
or
cmc
mov
mov
or
fnstsw
or
lea
std
lods
pop
lcall
lea
mov
lret
cmp
pop
mov
cltd
ja
out
mov
xchg
fcomps
fidivrs
outsl
mov
movsl
inc
movsb
push
mov
dec
mov
pop
pop
inc
out
jmp
add
insl
fstp
shlb
mov
mov
cmp
dec
and
mov
cmpsb
pop
mov
movsb
mov
pop
mov
mov
jecxz
stc
push
or
in
mov
or
int3
cmp
mov
cmp
aaa
or
repz
xchg
je
ror
in
dec
xor
fildll
add
add
xchg
adc
adc
mov
pop
mov
lret
or
adc
or
js
outsb
xchg
pop
in
inc
mov
rorb
testb
inc
cmp
or
jnp
sbb
mov
mov
push
mov
pop
popf
bound
mov
mov
jbe
sarl
adc
lds
adc
ljmp
pop
cmp
into
mov
lret
cli
cmp
jmp
imul
negb
sub
mov
push
push
jae
je
and
cmp
loop
and
and
add
xchg
mov
push
and
test
mov
xchg
xor
ret
pop
repz
scas
mov
nop
roll
clc
xchg
inc
and
cmpsb
les
inc
mov
popa
repz
cmpsb
in
dec
insl
jno
jle
mov
lahf
xor
dec
inc
xchg
data16
outsl
pop
loope
aas
aad
add
cltd
outsl
jecxz
popf
sahf
rcrl
ja
idivl
jp
mov
jg
push
nop
fcomi
ret
ja
dec
outsb
ja
out
repnz
mov
shrd
jmp
out
push
push
push
mov
ljmp
and
sbb
xchg
dec
fistps
inc
push
loope
xor
cld
adc
sub
sarl
xchg
push
or
jae
test
cmp
pop
aad
mov
add
insb
lret
in
int3
jge
inc
rorl
incl
xchg
mov
popf
sbb
mov
cmpsl
or
mov
pushf
sub
pusha
movsb
mov
cmp
mov
mov
fildll
dec
sbb
into
movsb
pop
sub
mov
push
xor
dec
fnstenv
js
or
sub
test
dec
fwait
jne
in
mov
pop
pop
and
jp
mov
mov
lcall
mov
and
cld
in
sub
ss
in
cwtl
mov
push
cs
xor
fidivl
call
pop
pop
bound
mov
jle
sbb
ljmp
add
mov
add
or
in
xor
arpl
popf
add
int
mov
jae
aaa
out
mov
fldcw
fstl
xchg
in
test
xor
cmp
mov
adc
mov
fdivrp
or
lret
pop
xlat
test
jae
jns
fildll
mov
outsl
in
lock
ja
xchg
imul
mov
cmpsl
and
pop
inc
pop
add
or
sti
jb
mov
and
es
mov
push
inc
pop
lods
fwait
imul
xor
lret
mov
push
jno
scas
out
push
imul
xor
inc
cmp
pop
ret
imul
cmp
imul
mov
mov
jmp
sub
fistpl
xchg
imulb
inc
or
push
jg
add
sbb
mov
clc
movsb
and
jne
jmp
xor
sub
fisttpl
enter
sbb
jb
ljmp
xor
sbb
stc
lock
adc
out
xchg
mov
or
pusha
dec
out
andl
mov
and
xor
lea
ret
mov
lret
push
popa
mov
into
stos
testl
ljmp
mov
faddl
scas
inc
inc
sbb
sub
mov
outsb
push
loopne
insl
mov
inc
mov
jns
jns
push
stos
repz
rclb
jns
cmp
movsb
pop
loop
jne
push
dec
aad
leave
sub
push
aam
inc
adc
fimull
scas
pmulhw
push
push
popa
stos
add
fwait
mov
dec
loopne
push
in
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
mov
jle
in
sbb
adc
sbb
xor
out
inc
cmpsl
dec
pop
sbb
test
sti
lods
jb
dec
push
jmp
mov
in
jle
sarb
pop
inc
mov
jbe
insl
jecxz
out
dec
popf
aaa
ret
and
and
loopne
sub
sub
sbb
push
imulb
fidivrl
insl
dec
jecxz
movsl
mov
xchg
lahf
push
pop
sub
xchg
mov
pmuludq
call
add
repz
mov
or
pusha
fadd
sub
scas
ljmp
bound
add
or
aad
test
enter
sub
jg
movl
mulb
ja
inc
shll
inc
outsb
pop
xchg
jbe
mov
enter
adc
shll
in
sti
mov
pop
push
pusha
test
xchg
test
shlb
dec
cld
aam
lret
cwtl
or
test
jecxz
pop
adc
pop
jge
push
sti
iret
mov
push
sbb
sbb
and
outsb
iret
cmpsb
dec
ficomps
iret
dec
or
orb
xor
xchg
jp
mov
mov
add
sub
and
arpl
or
test
outsb
mov
mov
adc
cmp
js
xchg
jge
cmp
xchg
das
pop
sbb
push
or
adc
push
loopne
pop
cwtl
lods
dec
push
mov
mov
add
cli
jl
or
pop
in
jmp
dec
add
imul
jmp
jecxz
nop
push
dec
dec
pop
outsl
mov
cld
add
xchg
lcall
or
jnp
scas
nop
rcll
dec
lds
push
jle
or
cli
jnp
or
stos
sbb
jae
adc
ret
xchg
dec
shl
adc
inc
or
mov
sbb
inc
scas
fsubrl
dec
pop
rcr
jns
jge
leave
and
stos
loope
test
out
add
pop
adc
scas
push
and
cmp
lea
inc
xchg
loope
jo
xorb
pop
ljmp
push
dec
jbe
adc
out
xor
cmp
jl
aas
mov
and
jg
addr16
insl
jl
sub
push
hlt
adc
mov
mov
cmpsl
mov
sub
in
jo
cmp
push
and
pop
arpl
sub
sbb
test
jmp
arpl
gs
scas
sbb
cmpsl
push
or
cli
push
in
push
add
jae
scas
cli
push
push
iret
push
jmp
xor
xchg
inc
pushf
lods
dec
push
clc
push
xor
adc
insb
shlb
mov
dec
cmpsb
mov
or
mov
test
mov
mov
fdiv
sbb
or
mov
jmp
nop
dec
nop
add
lock
xor
mov
sbb
and
sbb
iret
fdivrp
pop
insl
fidivrs
inc
stos
enter
clc
leave
xor
scas
scas
decl
in
icebp
mov
test
icebp
mov
leave
pop
leave
pop
inc
outsl
cld
mov
arpl
push
jecxz
push
or
lret
jno
lock
jb
mov
in
out
and
sahf
adc
icebp
inc
idivl
mov
aas
incb
and
jmp
aam
dec
in
sti
insl
add
outsb
cmc
mov
jp
push
push
or
repz
pop
cmc
rol
mov
jns
fadd
js
mov
ret
mov
mov
push
or
and
decl
lret
mov
jge
mov
pop
jno
inc
rolb
xchg
mov
inc
inc
ds
ds
add
es
lahf
aaa
into
bound
data16
xor
test
or
cmp
adc
int3
es
push
fwait
sbb
lock
mul
call
mov
data16
or
mov
cmp
sar
inc
fst
jb
faddl
out
mov
sub
mov
mov
lea
jno
fisubrl
mov
ss
in
jnp
mov
lods
jnp
jnp
iret
pop
dec
es
insl
in
insb
cli
mov
add
subl
loop
jns
add
push
les
xorb
call
push
out
dec
imul
sbb
gs
jb
lods
sub
pop
lahf
iret
test
push
enter
and
inc
xorl
jns
xchg
mov
lret
jb
out
shlb
call
loop
xor
repnz
fs
daa
inc
shl
aas
adc
ds
dec
les
mov
adc
sub
in
xchg
xor
mov
push
add
int3
jp
push
dec
test
push
gs
int
jp
movsb
addr16
loop
mov
jmp
push
lea
cmp
inc
ds
dec
sbb
add
and
loope
ret
xchg
lret
mov
aaa
add
add
in
xchg
and
loopne
mov
xor
dec
jns
enter
cmp
adc
mov
cmp
ss
sub
adc
sub
rclb
dec
add
int3
xor
pop
outsl
mov
xchg
jns
sub
adc
cmp
loopne
jge
ds
mov
mov
jl
mov
aad
dec
dec
mov
and
pop
lahf
call
roll
jbe
pop
loope
add
add
lods
test
shlb
decl
push
jg
leave
pusha
cs
jecxz
ljmp
fwait
adc
aam
repnz
notb
add
push
xchg
mov
aas
fdivrs
jbe
xlat
add
jns
fs
sub
insb
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
jne
popf
xor
sarl
push
sub
loopne
test
mov
cmp
push
inc
cld
clc
mov
int3
add
inc
dec
mov
xchg
fiadds
daa
stos
pop
stos
cmc
ret
mov
insb
data16
fistpl
setno
mov
add
cmpsl
leave
sbb
mov
test
mov
jae
int
out
mov
cli
cltd
pop
xor
idivl
or
mov
aad
sbb
dec
inc
sbb
outsb
jecxz
jg
hlt
cmp
rcrb
and
mov
inc
cmc
mov
or
jle
jb
mov
mov
nop
pop
push
sub
mov
xor
mov
jnp
and
ss
xor
shlb
push
dec
stc
mov
in
sti
lcall
mov
or
lret
cmp
pop
jo
cld
xchg
jecxz
mov
scas
aam
xchg
add
jle
jmp
push
out
push
push
and
mov
shrl
rcrl
adc
dec
xor
and
xchg
pop
outsb
cli
mov
out
pusha
adc
or
aas
push
cmpsl
in
popf
inc
pop
shll
dec
sbb
sbb
insl
push
pop
xor
sub
test
mov
data16
push
out
inc
push
add
xor
imul
stos
push
in
fwait
cmpsb
movl
sbb
or
add
stos
popf
adc
fwait
cld
dec
mov
jae
mov
sbb
imul
inc
idivl
push
xchg
movsb
lret
in
rorb
pop
gs
adc
cmp
push
push
pop
je
jne
push
pushf
sub
push
or
sub
out
mov
ljmp
jnp
mov
jecxz
fucomi
sahf
jg
sub
pop
pop
int
xchg
rcll
add
cwtl
adc
cmpsb
pop
and
js
cmpl
adc
mov
push
lods
shll
push
sub
je
inc
and
insb
push
lds
rcll
pushl
dec
loopne
imul
icebp
pop
lock
data16
push
push
adc
sub
jae
aas
cltd
mov
xlat
ja
cmp
push
fnop
xchg
dec
cmp
and
out
shr
xor
push
mov
into
inc
push
movsb
arpl
out
nop
xor
mov
rorb
mov
test
out
cmp
xlat
and
cmp
sbb
leave
repz
mov
lods
dec
sub
jno
bound
mov
out
cltd
repz
int
lret
inc
inc
pause
sti
xor
sub
mov
inc
nop
jg
cmpsl
mov
out
inc
rcrb
test
push
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
xchg
cmp
sbb
and
sbb
lret
jnp
push
repz
sbb
ljmp
cltd
test
push
scas
inc
leave
push
test
decb
xchg
out
sbb
out
inc
add
test
js
out
push
ja
popa
mov
push
scas
fisubrl
sbb
cli
cltd
ficoms
movsb
jmp
ja
push
aaa
jnp
in
subb
sub
in
ja
add
je
popa
popf
mov
and
test
sub
push
lcall
out
dec
imull
jecxz
and
sahf
jae
mov
pop
imul
stos
jns
shll
daa
pop
mov
and
das
in
xchg
mov
das
mov
add
xchg
es
insb
add
add
loop
call
testb
test
sub
mov
leave
dec
imul
and
pushf
out
dec
cmp
jg
mov
or
mov
dec
scas
sub
pushf
dec
sahf
pop
iret
iret
div
and
out
sbb
dec
les
inc
push
sahf
adc
xchg
idiv
xchg
lock
jno
cmc
sub
aas
into
add
popa
and
addl
out
or
std
xchg
sub
repz
shl
lcall
mov
cmp
popa
subb
xchg
pop
data16
sub
jmp
imul
pop
sbb
sub
imul
pop
add
mov
add
ljmp
sub
push
push
nop
pusha
stos
aaa
sahf
push
outsb
in
xchg
movsl
push
push
and
dec
sub
dec
js
and
push
js
xchg
jo
or
or
sbb
shlb
out
sbbl
inc
lret
and
cs
and
adc
movsb
or
mov
out
iret
pop
ds
dec
sub
mov
neg
push
mov
in
ret
cmp
daa
pop
mov
das
mov
cltd
jbe
addb
push
lock
add
mov
js
xchg
xchg
pop
push
loope
lahf
filds
lods
mov
dec
je
mov
fndisi(8087
mov
jp
jae
pop
cmpsl
jl
jbe
testb
ds
ret
int3
in
jno
in
rcl
mov
roll
mov
fistpll
mov
out
mov
xchg
clc
jae
xor
push
pusha
daa
adc
pop
data16
in
rorl
leave
es
inc
push
cmp
push
mov
mov
enter
imul
mov
cwtl
cld
jl
lock
insl
aam
jb
mov
or
mov
mov
adc
xchg
into
cli
jae
or
loopne
pop
lea
ja
jbe
lcall
test
push
imul
dec
cli
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
test
jl
int
sbb
adc
sbb
outsb
sbb
into
jnp
frstor
cwtl
nop
adc
xor
pop
loope
mov
mov
push
testl
andb
or
pop
loop
scas
les
or
popf
test
dec
fs
ljmp
cli
mov
pop
das
xchg
scas
pop
cli
lret
sbb
jbe
pop
cmc
cld
xchg
xor
arpl
sub
pusha
jmp
notl
jns
jg
cltd
pop
out
sbb
add
sub
adc
lock
or
pop
sbbb
lahf
fsub
inc
push
mov
std
mov
sub
jle
xchg
addr16
xchg
add
mov
test
pop
mov
scas
pusha
fnstsw
mov
cwtl
sub
or
sahf
jnp
dec
mov
mov
sub
out
mov
jle
xchg
popa
push
sub
lds
rcll
push
popa
shl
mov
ss
mov
fisttpl
xchg
pop
jle
push
jl
sub
dec
mov
mov
or
xchg
data16
sub
outsb
or
mov
cs
inc
xor
arpl
jmp
fidivl
das
dec
in
out
mov
push
xchg
mov
xor
aad
jno
mov
ds
mov
movsl
das
outsb
clc
rcr
add
test
fists
cwtl
and
adcl
ljmp
adc
add
int3
lret
dec
xor
dec
icebp
arpl
mov
mov
push
mov
or
push
ret
addr16
sub
add
mov
out
sub
fcomps
xor
lahf
je
dec
cmp
out
jp
stos
jge
inc
or
lcall
mov
lods
push
jecxz
cmp
cmpsb
aas
mov
dec
jnp
adcl
or
pop
and
movsl
inc
push
out
inc
cwtl
add
dec
bound
arpl
and
mov
dec
cmc
hlt
push
jbe
mov
sub
dec
xchg
cmovge
sbb
clc
sub
push
push
mov
clc
dec
mov
push
cmpsl
mov
jne
cmp
mov
adc
pop
or
imulb
mov
pop
push
fwait
das
mov
jge
inc
mov
mov
xor
inc
out
insb
mov
les
and
xchg
push
fstpt
xor
lock
data16
mov
push
dec
add
and
push
icebp
sarb
mov
and
addr16
into
cmp
ja
or
sub
stc
sahf
inc
sti
icebp
sbb
into
cwtl
dec
insl
xchg
inc
sbb
xor
lcall
lods
popa
jecxz
inc
iret
movsl
mov
sbb
xor
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
mov
sbb
adc
sbb
inc
loope
jnp
dec
outsb
leave
in
int3
cmp
and
mov
mov
jp
pop
out
loop
stos
cmpsb
insb
push
or
dec
test
cmp
push
test
das
fdivp
in
sbb
cli
cmp
ljmp
or
mov
fldt
push
dec
mov
nop
out
add
lcall
in
pop
cmpsb
mov
test
cwtl
mov
sub
push
mov
ljmp
cltd
ret
jbe
pop
movsb
xchg
daa
pop
div
call
xor
or
mov
sbb
push
sahf
xor
push
sub
add
mov
les
and
inc
cwtl
push
aas
sub
jo
movb
imul
mov
jg
mov
jl
repnz
hlt
xor
jne
xchg
fcompl
pop
jbe
test
mov
mov
push
stos
rol
jbe
hlt
fs
sbb
frstor
pop
dec
xor
ret
xchg
filds
jb
mov
rcrl
fildl
adc
sbb
outsb
jmp
idivl
or
inc
jmp
push
out
ljmp
xlat
out
sbbl
sahf
mov
lahf
mov
push
test
neg
jo
js
xlat
out
sbb
jns
xchg
mov
fldl
bt
cmpsl
jg
push
or
lock
insb
pop
and
icebp
and
xchg
xor
mov
mov
mov
fsubs
mov
inc
js
adc
xor
stos
test
out
dec
xlat
mov
cs
test
stc
mov
in
adc
insl
jmp
cmp
out
cmp
sahf
sti
fwait
mov
and
push
orb
cltd
out
popf
mov
xor
dec
cmpsb
inc
and
jae
push
ret
or
sbb
add
dec
icebp
xor
dec
sub
dec
pop
or
out
iret
aaa
mov
fdivrs
jne
push
pop
xchg
xor
sub
or
cli
fs
sbb
lds
cmp
cmpl
insb
sub
je
loop
or
fdivs
push
jnp
in
mov
cmp
xor
cmp
out
ss
movsl
xor
mov
xchg
outsb
pop
test
movsb
loopne
push
jbe
lods
test
daa
xlat
inc
lret
divl
add
and
sub
add
hlt
and
addr16
lahf
xor
mov
movsb
out
adc
inc
sarl
loop
fwait
or
xchg
push
xchg
fs
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
out
jl
rcrl
and
sbb
jo
or
clc
in
pop
xor
dec
cmpsl
mov
test
and
inc
sub
int
lds
movsb
push
xor
imul
in
call
xchg
out
xor
pop
mov
push
fists
and
jo
addr16
xor
adc
mov
int3
mov
cmc
pop
push
push
testl
xor
outsl
cs
pop
sti
aas
pop
int3
inc
dec
ds
pop
loope
int
or
mov
test
and
xchg
push
mov
pop
je
cmp
mov
jo
jns
js
jno
adcb
std
mov
hlt
cwtl
repz
mov
and
test
in
mov
scas
xor
fwait
adc
mov
mov
insl
pop
cmp
mov
jl
movsb
rclb
and
mov
std
int
push
push
mov
mov
and
pushf
pop
test
pop
call
push
cmp
sbb
in
sti
ret
test
test
mov
sub
or
in
leave
mov
call
sahf
imul
jl
add
scas
jmp
dec
push
sub
cltd
and
aaa
pop
add
clc
fsubrp
dec
pop
dec
push
pop
ror
mov
fwait
mov
stos
mov
mov
fwait
rorl
sub
jecxz
mov
xchg
or
xor
adc
mov
lods
addr16
pushf
dec
fucomip
xlat
into
sub
xor
adcb
inc
into
pop
out
je,pn
mov
imul
or
inc
mov
push
dec
aad
je
mov
addr16
xchg
pop
lods
pop
xor
add
sub
inc
mov
add
jo
std
idiv
popa
in
or
jno
jno
mov
xor
stos
mov
loope
xchg
fildll
add
ret
test
fisttpll
sbb
and
enter
andb
into
mov
rcpps
bound
cwtl
in
push
inc
inc
aaa
out
xor
hlt
pop
add
jp
pop
out
mov
pop
xor
popa
pop
frstor
fistps
and
pusha
dec
clc
push
roll
add
mov
cmp
add
jle
outsb
ss
test
add
es
popf
pop
scas
push
enter
xchg
jae
cwtl
sub
xor
aad
push
mov
mov
test
jns
push
fstpl
lcall
fnsave
int
add
push
sub
adc
push
rolb
clc
incl
pusha
les
mov
cmp
dec
push
jbe
int
jbe
stos
test
aas
xchg
cmp
lods
rol
loop
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
stos
cwtl
mov
sbb
mov
adc
sub
push
sbb
das
mov
pop
mov
sti
ss
test
in
add
or
xor
std
or
shrl
mov
mov
or
push
cmp
icebp
fsts
or
lock
lea
xlat
test
sbb
out
dec
imul
loop
in
test
mov
fprem1
cmc
push
das
mov
jnp
inc
xorb
mov
inc
push
jno
mov
cld
cmp
jmp
lock
sub
xor
jne
push
mov
aaa
lret
push
stos
xchg
inc
nop
popf
pop
ljmp
sub
sub
dec
movsb
add
test
cmp
xor
xchg
ret
call
mov
mov
call
mov
rcrb
cs
repz
out
xchg
nop
sbb
xlat
xorb
and
incb
fdivr
rclb
xchg
push
push
dec
inc
lock
adc
aad
jecxz
and
lock
pop
add
xorl
inc
cmp
xor
incl
xchg
xchg
mov
xchg
mov
dec
sarl
sub
lds
xor
jmp
stc
lea
pushf
adc
dec
into
push
or
or
mov
add
insb
inc
xor
inc
enter
movsl
xchg
xchg
lock
sub
cmpsl
xchg
popa
int
sar
mov
mov
int
xchg
jmp
push
test
sub
scas
dec
xor
ljmp
js
fiadds
xchg
sub
psubb
lods
mov
ds
sub
jae
push
insb
mov
mov
fsts
dec
inc
cmp
rcrl
pusha
or
xchg
repz
bound
mulb
push
mov
ds
stos
xchg
lods
xor
stc
mov
jg
sub
cmc
inc
mov
fistpll
cmpsb
jmp
lock
in
outsb
mov
pop
insl
cmc
inc
ret
sub
ja
adcl
hlt
inc
test
or
dec
sarl
fisttpl
fidivs
enter
orb
vpsubsw
sbb
daa
lock
jecxz
es
cmc
cmp
fwait
pop
inc
pop
push
xor
push
test
mov
mov
inc
mov
je
ret
sub
mov
pop
pop
daa
lea
aas
mov
cmp
inc
sub
sbb
aad
mov
inc
push
ss
mov
cmp
dec
dec
jns
xor
adc
dec
mov
inc
negb
xlat
repz
outsb
sbb
push
pushf
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
jmp
sbb
and
sbb
cmc
mull
rcrl
jns
jo
add
xor
dec
mov
sbb
jnp
dec
push
pop
mov
popf
mov
cwtl
es
pop
pop
fldl
lock
cmp
repz
adc
cmp
dec
je
shll
test
shrb
scas
cmp
shrb
push
insb
dec
ret
sub
mov
repz
shl
xchg
into
dec
jnp
xor
mov
dec
gs
xor
bound
push
stos
outsl
std
pop
mov
cmp
or
add
mov
jnp
jmp
lock
popa
arpl
test
arpl
mov
pop
insb
dec
mov
cmp
push
sbbl
shr
cmp
push
fwait
mov
fwait
and
scas
pop
dec
cld
mov
lock
push
jle
dec
or
sub
jp
sbb
movsb
or
mulb
call
clc
pop
push
int3
lds
mov
fsubrs
or
ljmp
jns
add
cmp
push
cwtl
cmp
es
inc
jae
dec
sbb
cmp
ljmp
shrb
mulb
mov
pop
xorl
sti
out
scas
pop
jne
jl
cmpsl
movsl
out
dec
push
and
or
ret
pop
xchg
dec
sub
ret
ds
test
mov
adc
xchg
cs
shl
mov
push
pop
mov
aam
mov
cmpsb
mov
dec
scas
negb
scas
mov
es
aam
sbb
popa
adcl
aas
add
aas
cltd
into
adc
pop
inc
cli
mov
xorb
adc
mov
test
or
mov
jl
mov
outsb
add
pop
fsts
adc
xor
sbb
cmc
arpl
and
test
cmpsl
adc
lcall
sbb
add
and
roll
add
mov
arpl
or
and
add
adc
cmp
fisubl
les
add
cs
and
adc
cltd
sub
adc
xor
dec
mov
and
cld
and
cmp
enter
enter
mov
sub
pop
pop
movsb
popf
push
lahf
rolb
ss
roll
icebp
mov
mov
imul
push
or
mov
cmp
sbb
and
dec
inc
cmc
leave
pop
sbb
out
add
jg
cmp
sub
jb
adc
add
adc
jg
pop
mov
jg
and
ljmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
add
inc
cmp
and
test
testb
mov
shll
decb
dec
jno
xlat
jge
cmpsb
jp
xchg
pop
in
mov
std
mov
in
jo
cmpsl
mov
pop
ret
pushf
mov
lahf
add
adc
andb
adc
lcall
mov
push
sti
cmpsb
xor
add
into
sub
lret
mov
xchg
aas
mov
sbb
pusha
xchg
es
les
or
dec
cmpsb
sti
mov
sub
lahf
adc
xchg
imul
lods
aaa
dec
mov
dec
inc
pop
fldt
clc
jbe
pushf
xchg
shll
mov
mov
mov
dec
add
arpl
lcall
xchg
sar
scas
in
testl
sbb
jp
xor
pop
xchg
xor
inc
fidivrs
jmp
and
push
lret
fstps
push
je
sbb
stos
and
add
jb
call
adc
xchg
add
outsb
adc
test
jae
xor
insl
add
mov
aaa
sbb
rcl
divb
mov
jae
lret
or
pushf
mov
mov
xor
sar
gs
or
sbb
fwait
js
pop
mov
int
ret
pop
xchg
and
pop
ret
fdivrs
fisubrl
repnz
test
mov
test
enter
fwait
scas
push
testb
add
test
arpl
negb
or
jle
or
popf
dec
jnp
es
add
clc
repnz
xlat
pop
std
and
cmc
push
xchg
fs
cmp
cld
in
mov
js
dec
jne
pop
and
pusha
fnstcw
jecxz
or
insl
je
test
aas
es
enter
in
pop
and
stos
inc
mov
arpl
movsb
stos
outsb
shl
inc
xchg
repz
sbb
setl
in
sahf
jbe
adc
scas
add
push
aad
inc
int3
cli
cwtl
and
push
mov
xchg
out
movl
jns
lret
xor
pop
pop
mov
mov
pop
movsl
outsl
jnp
mov
scas
and
or
fcompl
cmp
inc
push
jo
add
push
or
addr16
fistpl
in
mov
iret
shll
inc
xchg
in
repz
sub
subb
push
scas
sbb
adc
gs
jge
lret
testl
mov
inc
imul
popf
and
xchg
cmp
mov
xchg
and
repnz
adc
cmc
lods
mov
pop
mov
arpl
call
push
add
rol
loopne
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
mov
sbb
and
sbb
xor
pop
rcrl
ja
idiv
pop
or
aaa
ss
mov
xchg
mov
add
cld
cmp
iret
cmp
xlat
mov
or
cmpsb
pop
fcomp
subb
test
inc
mov
loop
mov
lock
dec
insb
adcl
enter
stc
sti
xchg
inc
or
mov
mov
and
adc
and
loopne
lret
in
and
xorb
stos
cmp
adc
test
push
jnp
hlt
pusha
push
sub
xchg
arpl
js
sarl
cmc
xlat
lcall
aam
shrb
xor
aas
fstpt
xor
dec
or
test
jae
out
loope
test
xor
ljmp
cmpsb
pushf
repz
and
pop
inc
lock
loop
mov
hlt
test
jb
pushf
mov
sub
and
mov
shlb
mov
push
mov
or
pop
shr
xor
push
xchg
mov
xchg
sbb
sarb
or
pop
out
adc
adc
setae
bound
repnz
clc
mov
or
jo
adc
xchg
fwait
leave
popf
mov
or
nop
jb
inc
es
cltd
inc
cs
pop
adc
mov
and
andb
pop
cmpsl
add
mov
cmp
mov
iret
xor
lea
movsb
push
adc
cmp
dec
cmc
out
fdivrs
lcall
jno
mov
lret
fdivs
ja
aam
jbe
jg
out
jmp
add
outsb
pusha
mov
adc
adc
dec
push
xchg
and
mov
mov
mov
push
js
xorb
js
mov
sti
orb
orb
pop
aaa
clc
ffreep
pop
sub
jmp
sub
cmp
enter
sbb
inc
enter
xchg
jp
arpl
stc
lea
dec
out
cs
cmpsl
cwtl
in
cwtl
add
outsl
lods
test
out
xor
arpl
pop
xor
es
jg,pt
cmpsl
clc
nop
and
xlat
adc
lds
jl
es
mov
cmpsw
clc
sub
pop
xchg
cmp
jle
scas
mov
rcr
ds
push
ret
jmp
or
add
shll
cwtl
ret
dec
mov
nop
pop
scas
xor
loop
cmp
push
mov
ret
or
inc
add
push
inc
xor
je
ret
pusha
ficompl
in
stc
icebp
icebp
sub
subl
mov
cmp
dec
orl
sub
xchg
loope
nop
int
cwtl
pushf
xchg
dec
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
mov
sbb
and
sbb
rcr
push
xor
lret
jns
push
jl
stc
popf
fdivs
int
daa
dec
test
and
jle
loopne
cmp
std
cmpsl
pop
cmp
enter
add
popa
cld
xchg
cmp
jns
popf
ss
push
jg
mov
shlb
inc
das
out
aad
mov
jne
fisttps
movsl
loop
movsl
push
je
icebp
mov
and
or
imul
fmulp
rorb
push
ja
sbb
gs
jp
push
dec
or
pushf
xlat
dec
int3
jle
cltd
xchg
adc
in
push
shlb
pop
jecxz
pop
cmp
jb
je
out
ds
jle
mov
jns
cmp
cmp
inc
lahf
sti
xor
into
shufps
inc
sbb
out
loope
mov
xchg
inc
testl
or
and
notl
cmpsl
je
push
xchg
inc
or
inc
stos
sub
xor
loopne
cmpsb
inc
cmp
test
mov
lahf
pop
stos
sbb
adc
popf
or
mov
subb
xor
push
in
insb
xorb
je
pop
xor
repnz
scas
sti
sbb
out
pop
adc
or
fistl
jmp
fs
dec
push
push
aad
xchg
xor
sahf
xchg
jg
mov
imul
mov
inc
or
mov
add
cmc
mov
stos
inc
imul
adc
and
xchg
hlt
mov
mov
pop
push
dec
scas
ret
push
adc
and
les
xorb
dec
not
fs
test
push
cmp
out
rcrb
dec
testl
jne
lods
jne
shrb
aad
mov
xchg
cmpsl
push
or
and
inc
sbb
pop
cmp
or
xor
cld
cmp
mov
push
stos
lahf
sar
sbb
outsb
pop
outsb
outsl
pop
sub
cmp
pop
and
flds
cmp
ja
leave
aam
inc
imul
fisttpl
test
arpl
xor
jg
aas
cmp
mov
inc
movsb
shlb
xor
xchg
push
in
arpl
push
add
fwait
push
lds
addr16
jecxz
pop
mov
dec
ss
push
ds
je
ficoml
gs
shll
sub
push
mov
pop
mov
mov
pushf
jl
xor
xor
mov
mov
dec
jb
xor
push
xor
push
out
mov
clc
and
mov
push
mov
push
stc
mov
sbb
cmp
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
mov
push
popf
sbb
and
sbb
ds
stos
mov
popf
xchg
inc
push
imul
stos
sub
mul
je
adc
jnp
rorb
out
dec
fsub
stc
pop
outsl
or
jp
mov
psllq
outsl
adc
sub
mov
add
lea
add
lods
or
mov
mov
pop
adc
std
jecxz
xchg
push
inc
sarb
mov
push
mov
xchg
and
and
xchg
aad
jns
xor
pop
add
push
mov
sahf
mov
arpl
popa
mov
or
fdivrl
movsb
shlb
adcb
push
adc
and
mov
stos
sbb
jp
and
push
and
cmp
add
lock
or
loope
pop
or
int
dec
pop
xchg
and
push
and
adc
pop
xchg
iret
pop
pop
inc
inc
xchg
mov
loope
das
dec
sub
fs
and
jp
or
outsb
mov
pop
leave
lcall
into
adc
sahf
shll
inc
xchg
cmpb
pop
add
out
dec
stos
inc
xchg
adc
add
add
add
xchg
add
xchg
and
leave
or
inc
stos
scas
pop
xchg
ja
leave
or
and
dec
mov
jl
xor
movsb
stc
jno
pop
fwait
push
or
hlt
faddl
subb
hlt
test
pop
mov
mov
fisubrl
sbb
mov
pop
out
sub
pop
test
mov
call
inc
sub
enter
outsb
imull
mov
sbb
sbb
push
jl
cmp
ja
outsb
push
data16
popf
aad
lahf
jl
mov
call
or
lahf
stos
out
jl
mov
out
jns
xchg
dec
mov
aam
push
inc
inc
push
imul
add
loopne
ljmp
fiaddl
mov
push
test
cmpsl
pop
cmp
loop
aad
jmp
push
adc
mov
and
mov
and
shll
and
in
dec
rcrb
ret
inc
or
jmp
ljmp
or
adc
or
mov
add
pop
pop
cmp
adc
mov
xor
test
adc
pop
aaa
mov
out
xchg
fsubs
fcmove
cwtl
push
push
data16
add
adc
mov
outsl
jns
gs
jmp
jp
stos
mov
or
shll
and
test
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
mov
and
sbb
daa
sbb
mov
leave
cmp
cmpsb
fbstp
in
cld
mov
dec
xchg
dec
push
out
ret
sub
dec
repnz
sti
in
out
sti
pop
in
stos
xchg
in
mov
loope
cmp
mov
adc
adc
jb
aaa
xor
fbld
jmp
pop
sar
cmp
cmpsb
mov
icebp
mov
sarb
mov
test
in
fildl
pop
mov
and
cmp
add
lods
adc
sbb
repnz
sbb
sub
push
push
imul
sbbb
rcrl
es
enter
ret
jl
mov
notb
ljmp
mov
shlb
mov
pop
jg
fimuls
mov
sti
xchg
enter
sub
cmp
fnstcw
arpl
cld
int3
test
sub
mov
ljmp
lahf
mov
xor
lahf
cs
scas
nop
fcmovne
jg
mov
mov
or
or
cmp
jmp
cld
fnstenv
inc
notb
sbb
dec
xchg
xchg
out
mov
aas
mov
pop
ret
dec
fs
repz
mov
inc
roll
adc
push
daa
adc
movzbl
lea
sbb
popf
cmpsl
add
ret
or
popf
dec
add
cs
xchg
ljmp
out
or
aas
add
fdivr
rolb
cli
in
lcall
cmp
xchg
pop
sub
lcall
into
lds
add
bound
test
and
add
out
mov
mov
and
xchg
jmp
mov
and
addb
cmpsl
inc
cmc
lret
xchg
cld
sbb
ljmp
mov
aad
inc
jo
jae
xchg
ret
pop
imul
mov
sub
push
mov
rol
insb
jne
mov
int3
dec
pop
mov
add
jae
jmp
es
xor
stc
push
inc
xchg
out
hlt
popa
ja
fsubl
pusha
scas
std
mov
aad
pop
dec
popa
cmc
sub
enter
mov
push
or
cmpsl
ret
loopne
xchg
cld
sbb
int3
inc
mov
cmp
push
jns
push
cmp
and
pop
xlat
jecxz
mov
cmpsb
testb
mov
pop
out
add
adc
and
cmp
scas
add
pushf
stc
movsb
mov
mov
inc
or
test
stos
ds
sbb
movsb
mov
xor
lods
insb
mov
xchg
dec
xor
sahf
cli
cwtl
ds
and
lods
imul
sbb
mov
jmp
pop
scas
insl
cmp
ljmp
shl
jmp
cmp
sbb
push
push
out
push
es
jle
xchg
sbb
and
sbb
out
sahf
xchg
xor
notb
in
mov
stos
or
jb
insl
xchg
jbe
mov
sbb
jle
scas
pop
repz
out
adcl
xlat
sbb
stc
xchg
xor
out
pop
in
fldcw
loopne
mov
add
sahf
ret
repnz
popa
xor
rcr
dec
pop
repz
dec
hlt
dec
ja
sub
pop
arpl
aas
jg
scas
jle
movsl
mov
pop
xchg
xchg
cmp
fnstsw
mov
movsl
dec
adc
and
clc
enter
arpl
pop
jmp
jno
out
mov
xor
iret
shrb
push
lds
mov
jne
pop
cld
or
ja
scas
add
push
test
popa
and
xor
xchg
add
push
xor
ret
adc
iret
pop
fwait
and
out
int3
push
sahf
sbb
sahf
lea
std
std
dec
sbb
and
sub
dec
mov
adc
jae
mov
sub
call
in
xor
sbb
dec
lret
movsl
mov
and
mov
and
ret
mov
dec
push
inc
xor
test
ds
add
pop
pushf
cmp
push
cmp
xchg
pop
daa
jle
mov
popf
mov
cmpsl
into
repz
ficomps
aam
lods
jle
adc
mov
jmp
leave
jecxz
inc
outsl
add
mov
scas
fdivrl
and
fnstsw
and
cmpsb
xchg
and
cmc
test
stos
dec
shll
sahf
out
es
in
arpl
xlat
int3
and
imul
mov
jo
mov
aas
sub
sbb
lods
mov
in
pop
jg
adc
filds
inc
scas
fwait
stos
mov
adcb
inc
orb
int
xor
je
xor
add
xlat
cli
dec
push
mov
loopne
adcb
jg
add
push
fnstcw
pop
xor
mov
jne
mov
push
dec
mov
cmp
mov
out
inc
aad
loope
mov
pop
cmp
xchg
filds
cwtl
push
mov
fcomp
sbb
jmp
mov
add
xor
xchg
xor
push
cmpsb
or
addr16
mov
add
jge
mov
xchg
and
sarl
popa
fldln2
push
push
lea
pop
cltd
shl
loop
pushf
cmp
add
mov
out
movsl
mov
and
imull
dec
xor
arpl
jae
icebp
lret
sahf
movsl
sub
scas
xor
sub
fs
int3
repnz
pop
push
adc
or
or
out
sarb
inc
in
pusha
inc
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
enter
add
test
in
inc
pop
testl
and
xor
in
aaa
jne
xchg
lods
sbb
push
jae
arpl
mov
cmp
out
gs
push
cmpsl
mov
or
sbb
jge
xchg
outsb
fnstsw
dec
addr16
into
lret
loope
sarb
inc
mov
xchg
mov
lods
and
and
adc
jmp
xchg
arpl
popa
xlat
pop
cltd
insl
push
mov
and
inc
inc
pop
mov
mov
test
ror
sarb
mov
dec
mov
rol
sbb
sahf
es
mov
flds
cs
cld
adc
pop
sbb
clc
sub
cmpsl
sub
leave
mov
add
insb
movd
les
repnz
insl
mov
adc
pop
pop
into
outsb
inc
xor
mov
cmp
bound
cmp
fimuls
sub
mov
lcall
sub
sbb
cmpsl
sbb
mov
xchg
add
xchg
mov
pop
andl
xor
mov
jmp
push
pushf
out
xchg
pop
pop
mov
frstor
or
sahf
popf
std
mov
xchg
xchg
popf
ret
testb
add
jbe
dec
imul
cmp
sti
and
sbb
xchg
loop
pop
add
es
and
mov
shlb
adc
dec
and
movsl
cld
or
lock
add
xchg
call
sbb
imul
das
mov
mov
jp
jle
adc
jle
push
mov
mov
in
sub
sbb
push
leave
ret
int
aas
lods
inc
out
ror
pushf
outsb
pop
call
jo
mov
sub
sbb
xchg
lods
xchg
sbb
insb
clc
jbe
daa
je
mov
lret
push
mov
stos
out
test
imul
dec
xor
add
ss
or
inc
push
aam
fcomps
jg
push
push
lahf
mov
scas
js
add
pushf
in
jb
in
xchg
out
pop
mov
ret
cli
cs
push
sbb
push
dec
lcall
test
scas
aaa
fdivr
cmp
mov
lret
xchg
sarl
lea
aaa
jecxz
loopne
movsb
sub
rolb
aad
or
add
mov
notb
fdivrl
ror
mov
add
xor
orl
dec
inc
mov
pop
xchg
cld
cltd
mov
movb
rorb
adc
push
pop
sub
adc
aaa
es
lahf
cld
test
mov
cmp
mov
jmp
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
lret
lock
and
sbb
adc
add
out
movsl
push
push
jno
pushf
int
mov
popf
call
xor
pop
add
jo
addr16
fs
xor
mov
daa
mov
sub
push
adc
data16
ljmpw
aam
ret
clc
movsl
xchg
rcl
sbb
js
jns
js
jbe
cs
adc
sbb
sbb
int
mov
or
mov
push
loop
cmp
add
popf
sbb
xor
xor
movsb
jp
push
and
inc
pop
and
push
fsts
rorl
add
sarl
cmp
push
ret
in
aam
lock
mov
xchg
shll
sbb
dec
repnz
cmp
imul
pop
int3
add
and
cs
jmp
jecxz
insb
xchg
nop
fcmovu
jecxz
stos
setnp
jbe
lret
das
test
push
loopne
push
and
mov
mov
dec
or
jae
jns
jg
aam
xchg
push
stc
add
pop
int
popf
inc
shlb
mov
dec
xchg
mov
ss
mov
push
fdivl
ss
cli
dec
sbb
jnp
jne
lds
popf
jb
ja
sarl
and
mov
cmp
imul
outsl
stos
xchg
ret
jno
int3
fisubrs
scas
sbb
add
inc
adc
outsl
repnz
xor
test
loop
lods
mov
icebp
test
loopne
lea
test
add
stos
pop
dec
adc
dec
fcmovnbe
push
add
pop
adc
frstor
fs
jo
dec
iret
stc
mov
out
frstor
push
sbb
sbbb
jecxz
mov
je
mov
adc
cltd
add
test
jmp
xchg
cmpsb
aam
loop
aas
push
pop
lea
jmp
cmp
in
sbb
shlb
out
es
dec
jle
lock
je
push
jmp
repnz
jnp
mov
inc
jmp
dec
mov
push
jbe
jecxz
fdivrl
sub
lea
aam
and
daa
sahf
and
mov
push
add
jmp
lods
fwait
inc
scas
lea
lods
adc
out
cmp
add
out
jle
pop
insl
mov
repnz
int3
pusha
imul
sarb
ds
call
or
mov
push
insl
jbe
sub
lods
dec
aad
jmp
rcl
nop
pop
jns
sbb
dec
dec
jno,pn
aam
arpl
sarl
sub
sti
mov
fs
jecxz
aam
xor
push
outsb
test
pop
dec
scas
into
mov
inc
dec
cltd
ficompl
adc
out
add
repz
pop
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
jl
jg
sbb
adc
sbb
mov
pop
inc
repz
outsb
jo
lea
call
subl
push
jp
mov
sbb
orl
test
jne
fildll
mov
inc
jae
pop
sub
movsl
aam
mov
loope
inc
sarb
ret
data16
movsl
xchg
mov
and
pop
fisttpll
aaa
xchg
mov
fwait
ja
ja
scas
int3
scas
pop
popa
test
ds
add
inc
vpsllw
inc
and
leave
mov
sub
into
cmp
stc
popf
mov
jecxz
sub
pop
arpl
jp
aaa
test
pop
or
sbb
push
pop
jmp
je
jb
outsl
addr16
pushf
in
stc
jg
sub
fsub
xchg
cmp
jecxz
xchg
cmpsb
insb
jl
mov
in
iret
outsl
jmp
out
int
nop
cmpsl
xchg
cmpsl
test
inc
lret
sub
adc
roll
loope
popl
xchg
lock
add
sub
addr16
xorl
sub
push
fstpl
rcr
ljmp
fdivs
mov
dec
outsb
push
testl
cmc
mov
adc
mov
aad
lds
inc
stos
cmp
scas
pop
mov
xchg
xor
sti
loop
pop
aam
cltd
xchg
push
sbb
add
lods
and
mov
mov
imul
insb
mov
jns
jge
in
aas
and
xchg
bound
sub
jp
mov
pop
cld
mov
inc
dec
adc
jmp
outsb
pop
dec
pcmpgtw
push
pop
push
lock
insl
pop
das
popf
fldt
clc
mov
insl
out
xchg
and
push
test
pop
addr16
data16
pop
or
sbb
and
jb
test
push
je
enter
in
and
pop
stos
mov
outsl
hlt
in
or
mov
dec
hlt
stos
movsl
shll
aad
addb
push
cmp
scas
xchg
insb
pop
xchg
and
popf
xchg
add
xor
shr
int3
test
out
add
in
rclb
mov
bound
cli
bound
test
out
mov
enter
pop
add
cmpsl
outsb
cmp
xchg
mov
xchg
mov
arpl
mov
out
cs
fsubs
es
add
mov
negb
push
imul
in
pop
and
stos
push
or
xchg
jle
in
jecxz
xchg
out
test
inc
sbb
std
push
movsb
xchg
pop
mov
fidivrl
mov
push
mov
dec
icebp
icebp
in
dec
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
cmp
jo
jns
sbb
adc
sbb
xlat
repz
inc
mov
lret
mull
mov
jno
outsl
repnz
daa
sbb
les
adc
sbb
leave
mov
dec
add
lcall
jecxz
sub
push
push
ret
or
flds
into
cmp
or
pop
cmp
out
inc
into
std
movsb
xchg
mov
dec
pop
sub
imul
pop
jp
jb
outsb
daa
inc
int3
movsl
cmc
fistpll
lret
pop
adc
cmp
outsl
sarl
call
inc
fnclex
adc
sbb
ftst
inc
cmp
subl
mov
push
test
je
mov
push
insb
or
sbb
push
mov
xchg
add
cmpl
test
adc
cmc
and
enter
or
xchg
sarb
filds
jae
jecxz
jge
lods
icebp
sub
scas
imul
ja
mov
push
daa
fs
in
fldenv
out
sbb
cmp
gs
jbe
sub
jae
xchg
xchg
clc
dec
arpl
lret
pop
pop
jge
jmp
or
scas
in
jg
push
inc
mov
add
div
mov
inc
mov
ds
imul
xlat
sub
icebp
cmp
movsb
dec
out
fldln2
movsl
sub
shrd
sub
arpl
shr
test
popf
daa
mov
xor
cs
dec
mov
push
aaa
sbb
shr
or
cmp
subb
lahf
inc
pushf
xchg
stos
pop
aam
add
subb
rclb
lds
sysenter
loopne
arpl
lods
movsb
jno
enter
sub
xlat
push
imul
dec
in
mov
dec
je
xabort
add
clc
inc
pop
or
stos
pop
push
and
push
jb
sub
pop
aam
aas
xor
jno
and
xlat
out
mov
daa
jnp
push
iret
repz
aam
inc
ljmp
mov
adc
addr16
scas
sbb
int
orl
or
call
pop
jl
lcall
pop
push
fcoms
jb
push
data16
adc
pusha
mov
xchg
and
or
cmp
xor
loopne
data16
or
sbb
faddl
ds
or
sub
addr16
out
inc
sub
dec
pop
lds
ja
mov
jns
clc
ljmp
pop
cmp
loope
sub
jmp
sub
loope
xchg
inc
data16
mov
add
pop
sbb
in
sub
addb
sub
dec
pop
cmc
mov
cld
xchg
jg
or
btr
push
popf
loope
inc
push
loop
xchg
icebp
xchg
sbbb
daa
decb
nop
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
pop
clc
lret
imul
outsl
add
int3
jae
imul
xlat
lods
cmp
enter
adc
es
xor
mov
inc
movsl
sub
dec
aaa
and
cmpsb
dec
andl
push
xchg
mov
xor
imul
or
ljmp
or
aam
ret
out
add
mov
imul
aaa
jns
leave
mov
jmp
movsl
push
aaa
mov
jp
iret
mov
jae
and
mov
mov
dec
cmpsl
xadd
xchg
icebp
sub
fcoms
sahf
add
jl
clc
cmc
dec
xor
imulb
dec
pop
dec
inc
popa
fadds
jle
mov
shlb
and
mov
je
pop
jbe
das
mov
js
repz
push
clc
xchg
or
ja
adc
jle
mov
inc
ds
mov
jnp
and
lret
stos
leave
cmp
in
mov
lods
mov
dec
neg
shrl
clc
xchg
into
jmp
or
sbb
push
std
movsb
in
fbstp
or
mov
mov
add
pop
popa
jecxz
pop
sbb
out
insl
pop
lahf
mov
mov
shll
sbb
cmpsb
pop
mov
push
push
in
mov
js
add
or
stos
call
clc
ss
push
mov
pop
xor
cwtl
int3
bound
test
push
cmc
pop
ss
cs
int
int3
incl
cwtl
xchg
in
mov
inc
pop
or
xor
leave
xchg
ret
xor
push
pop
loope
mov
sbb
addr16
in
mov
sahf
push
and
push
add
pop
je
inc
add
xchg
int3
push
push
mov
cmp
pop
outsl
inc
insb
in
icebp
shl
mov
xchg
or
fildll
push
sbb
jg
repnz
pushf
sub
xor
inc
aad
push
rclb
enter
sub
ss
or
xor
mov
xorl
jecxz
out
in
add
nop
sbb
add
push
cmp
leave
stos
sbb
push
dec
aaa
push
sbb
popa
xor
inc
inc
js
repnz
std
sbb
dec
pop
or
mov
dec
gs
or
cmp
mov
and
mov
int3
mov
cmp
in
insl
mov
mov
fstpt
pusha
push
adc
popa
loop
js
xlat
add
or
fsubl
push
xor
sbb
xor
idivl
add
sbbb
sbb
sub
lret
cmp
jo
stos
test
sub
cmp
xchg
and
mov
mov
sar
add
mov
cpuid
rorl
jl
xor
loop
int
cmp
mov
xchg
out
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
hlt
add
insl
sbb
and
sbb
push
sub
pop
mov
cli
scas
cmp
inc
jbe
jno
add
inc
pop
xor
sbb
out
lods
or
ss
je
cmp
inc
push
aam
push
cmpl
jbe
mov
test
cmp
jl
mov
xorb
inc
test
push
push
jne
popf
cmpsl
lds
cmp
dec
xorl
mov
mov
stos
push
loop
subl
inc
int
xor
mov
sbb
int3
pop
notl
and
aad
les
lcall
lds
adc
popf
jno
jmp
sti
xchg
cmp
and
cld
or
xor
push
sbb
mov
cmp
sub
das
ds
pop
pusha
bound
inc
sbb
xor
lods
cmc
add
popa
add
mov
pusha
lret
loop
sub
inc
sbb
cmp
push
ds
xlat
mov
cmp
outsb
addl
mov
sti
push
mov
pop
sub
lea
shrl
scas
in
mov
sub
jnp
ja
ret
dec
xor
clc
fs
mov
mov
mov
add
add
push
movsl
mov
inc
lds
lods
fildll
ds
jmp
pusha
push
outsb
test
loopne
jp
cmp
addr16
sbb
int
hlt
dec
inc
jns
mov
adc
or
jmp
fldl
mov
push
cmp
xchg
adc
push
ja
cli
mov
jp
ret
add
imul
subb
xor
pop
inc
jge
fwait
lods
in
push
adc
xchg
out
nop
imul
sub
mov
push
sub
add
cmp
test
sbb
shll
fimull
in
pushf
mov
into
jecxz
jge
push
mov
or
sbb
add
cmp
cmp
fmulp
je
fstpt
pushf
adc
leave
fwait
call
mov
sahf
sub
icebp
ret
arpl
movlps
jb
fcoms
push
push
cmp
mov
dec
adc
sub
fsubs
lret
subl
xor
fnsave
mov
xchg
loope
xor
and
xor
jo
adc
ret
arpl
xor
cwtl
lods
jnp
bound
mov
dec
fdivs
sahf
rorl
clc
add
cltd
and
mov
and
std
js
enter
xchg
mov
push
dec
test
lds
mov
arpl
dec
sbb
push
pop
pushf
adc
stos
bound
cmp
sub
rep
lcall
add
jmp
jmp
and
push
sbb
push
lods
fnstcw
adc
sbb
adc
in
lea
outsl
rcll
jbe
cmp
and
loopne
ja
in
ret
repz
xor
adc
stc
adc
iret
test
pusha
cli
into
dec
mov
push
push
dec
inc
sbb
adc
cmp
lods
mov
add
pop
enter
mov
inc
adc
adc
test
xlat
testb
jb
je
and
jmp
pop
fisubrl
cmpb
arpl
ss
jmp
cld
in
or
test
xor
cmp
adc
cmpsb
dec
mov
xchg
or
mov
mov
shlb
mov
mov
test
pop
fsubr
xchg
mov
push
sub
jecxz
push
pop
mov
inc
divb
jno
popa
ljmp
jbe
jne
sbb
cmp
lfs
pop
cmp
cmp
mov
jbe
sbb
and
and
xor
cmp
xorb
push
mov
imul
and
cld
push
jno
or
adc
insb
call
jns
or
test
aaa
add
test
xchg
mov
inc
adcb
ljmp
jmp
sub
in
icebp
inc
cmp
push
mov
mov
cld
pop
pop
lret
movsb
faddl
sbb
lock
enter
andl
xchg
lea
scas
dec
sbb
out
fdivrs
and
cmpsl
movsb
xor
popa
rcrl
leave
sub
fists
js
popf
test
andl
dec
push
xchg
daa
dec
ja
stos
in
popf
and
movsb
int3
jp
js
decb
nop
cs
adc
outsb
adcl
test
xor
add
out
clc
nop
push
xchg
daa
mov
dec
pop
jecxz
xchg
pop
popf
sbb
mov
dec
push
jnp
xor
sub
je
scas
dec
movsl
jge
repz
sub
arpl
push
fwait
jae
pop
mov
ss
add
pop
pop
in
xor
call
in
jp
fstpl
test
js
out
dec
aam
test
push
xor
dec
and
filds
fcompl
sbb
xchg
addr16
or
cli
into
dec
adc
cmpsl
lods
cwtl
xchg
pop
jle
or
popa
addl
jns
adc
and
hlt
jp
or
sub
loope
mov
inc
loope
jp
push
xlat
sub
decl
and
pop
repnz
mov
inc
shlb
or
and
pusha
sbb
movsl
les
pop
js
jo
xor
xchg
or
call
adc
push
jecxz
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
sub
sbb
adc
sbb
aas
pop
divb
mov
add
test
aas
inc
out
in
rorb
push
inc
and
insl
fucomp
imul
lret
mov
xlat
push
mov
cmp
les
cld
adc
push
test
insb
pop
push
fidivrs
insb
fstl
pop
and
testl
cmp
jbe
mov
sbb
mov
out
cmc
adc
xchg
xchg
xor
xor
sub
fdivrl
aam
adc
jle
int
repnz
push
and
repz
jmp
stc
adc
dec
addl
lret
insb
xor
pushf
repnz
add
mov
jb
adcb
dec
scas
cmp
nop
pusha
stc
cmp
int3
loopne
inc
rcll
lahf
jae
popf
fnsave
repnz
xor
test
fcoms
fsubrl
push
out
arpl
sbb
mov
fistpll
loopne
andb
inc
lea
cmp
js
jmp
outsl
in
bound
into
cmpsb
dec
lods
jae
enter
push
jbe
nop
dec
gs
in
or
xchg
push
mov
movsb
scas
mov
sbb
out
xor
cwtl
mov
xor
sbb
aaa
push
lods
push
pop
mov
pop
xor
push
mov
inc
sub
jl
mov
inc
add
jb
lods
popa
xchg
test
scas
dec
fdivrs
sbbb
leave
mov
cmpsl
fs
pop
lock
adc
ficoml
inc
imull
pop
jne
push
fadds
push
repnz
pop
mov
bound
sbb
dec
std
loop
cmp
push
stc
out
or
repnz
test
call
lds
push
fistl
packuswb
add
negb
popf
mov
inc
fprem
lahf
or
cmp
lcall
ret
xchg
xchg
xor
inc
insl
int
push
push
stos
pop
adc
pusha
inc
ss
in
mov
mov
pop
sub
arpl
jbe
loop
cmc
test
cmpsb
int
ljmp
insl
mov
sub
mov
mov
les
call
jb
out
dec
scas
pop
dec
stos
pusha
push
jo
jno
loopne
mov
xor
lahf
mull
jl
dec
call
dec
xor
adc
or
xor
outsl
pop
icebp
mov
stc
mov
adc
in
add
xchg
push
add
fstps
es
jle
cmpsl
js
dec
sbb
mov
iret
sub
shrl
mov
add
in
xchg
pop
jo
mov
cmp
lods
mov
popa
mov
xchg
stc
loopne
lods
aaa
mov
insl
mov
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
std
in
mov
and
sbb
aas
into
out
or
push
testl
mov
jl
test
leave
lock
popf
push
mov
insb
and
mov
nop
cmp
ss
sahf
adc
or
leave
mov
cli
jp
stos
imul
fndisi(8087
pop
rclb
aam
inc
pop
push
lea
fdivs
or
popa
dec
pusha
insb
ja
dec
pop
adc
inc
adc
popa
ss
ljmp
mov
shrb
mov
dec
outsb
or
js
loopne
mov
pop
jbe
daa
and
sub
ljmp
movsl
into
jle
xchg
jbe,pn
push
xchg
push
push
or
push
pop
sbb
imulb
mov
arpl
hlt
sahf
cmp
subb
inc
cs
fbstp
out
ret
and
testl
xchg
dec
jb
cmpsb
jne
inc
sbb
add
mov
aam
push
push
or
xlat
add
sub
or
xor
sbb
jecxz
mov
fwait
data16
mov
push
sbb
xor
pop
arpl
rolb
rcr
pusha
test
dec
fiaddl
push
outsl
xchg
arpl
mov
lds
or
mov
jg
sahf
push
addr16
dec
jle
inc
lahf
in
jb
mov
xchg
outsl
mov
pop
fistpll
and
fdivrl
pop
or
aam
notb
cmp
jg
ret
pop
cs
push
ss
adc
testl
and
and
xchg
hlt
sub
je
pusha
mov
xchg
cmc
testb
inc
out
and
stos
loop
push
push
xor
arpl
or
leave
cmp
sub
sbb
dec
aam
faddl
xchg
ret
pop
dec
sarl
fs
rorl
cmp
sub
subb
movsb
sbb
cwtl
aam
outsl
sarb
xchg
int
sbbl
das
out
int3
cmp
cld
inc
adc
das
inc
or
js
jo
test
jmp
mov
cmpsb
or
push
push
pop
xor
cmp
adc
in
add
cmpsl
xor
inc
cs
push
add
mov
dec
and
xor
ret
sub
cmp
sbb
jle
jl
and
les
xlat
sbb
int
inc
mov
push
test
or
xor
std
jns
and
mov
push
es
test
iret
xor
jae
andb
dec
cli
test
insl
jmp
adc
or
push
or
or
cmp
popf
adc
mov
in
clc
test
aas
cltd
leave
and
out
jne
rcll
add
add
adc
ja
jns
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
and
stc
out
push
push
in
xchg
mov
into
xor
rcl
sub
enter
or
mov
or
mov
int
je
sbb
jle
push
mov
sub
mov
in
xchg
and
mov
popf
and
out
aad
mov
adc
mov
xor
push
les
std
sbb
arpl
stc
jnp
and
dec
dec
stc
sbb
or
sbb
popa
dec
jecxz
and
gs
loope
repnz
sbbl
and
clc
dec
mov
test
outsl
ret
xchg
dec
mov
jae
jle
mov
push
pop
repz
xor
inc
jge
int3
xor
mov
movsb
subl
repnz
push
bound
icebp
push
cld
repz
outsl
fisttps
pusha
jg
testb
decl
sbb
cmp
sub
add
xchg
je
or
cmp
jno
and
adc
jge
or
adc
inc
xchg
inc
and
xchg
mov
and
sbb
std
fistl
xor
shlb
mov
sub
sub
push
dec
or
mov
shll
cli
mov
sti
xchg
push
fwait
mov
and
jg
sbb
mov
sarb
dec
sbb
xchg
aam
pop
outsl
mov
push
loop
sti
adc
mov
add
adc
mov
test
dec
add
dec
fnop
jp
test
cs
fildl
jmp
jo
stc
mov
stos
xchg
mov
shrl
push
lods
jae
mov
mov
sub
aam
mov
in
or
jecxz
rolb
dec
pop
push
out
xor
cmpsl
mov
testb
mov
shlb
adc
adc
jo
xchg
inc
negb
out
clc
fwait
pusha
xor
push
loop
icebp
xchg
push
loopne
outsb
push
mov
arpl
adc
mov
int3
pusha
addr16
fsubp
jge
mov
xor
les
jb
push
pop
dec
or
sub
int3
push
jbe
inc
icebp
lods
pop
lods
les
or
dec
push
xor
sub
ficoml
sub
aam
ret
jmp
lods
mov
xor
adc
repnz
or
les
outsb
sub
mov
inc
inc
fidivl
nop
xor
inc
or
test
loopne
lcall
and
inc
lcall
aaa
pop
push
xchg
lock
mov
paddusb
xchg
bnd
repz
sub
cmc
dec
adc
lcall
add
in
lock
jne
repnz
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
dec
add
dec
xor
jl
xor
push
fs
aam
mov
lock
push
jl,pn
and
cmpsb
pushf
int
jno
addr16
xchg
test
jnp,pt
out
imul
push
std
xchg
sub
xor
int
mov
ljmp
mov
push
rcrl
mov
dec
cltd
dec
xor
fcomi
and
sbb
out
testl
inc
popf
call
cmp
test
imul
in
shlb
sub
stc
fisubs
movsb
mov
inc
lods
lret
aad
shlb
int3
jg
cmpsl
jp
ret
lock
adc
mov
push
jo
xchg
sarb
js
jbe
rcll
rcrb
mov
mov
jmp
and
popa
inc
mov
mov
or
mov
jmp
jmp
outsl
push
lret
pop
stc
enter
push
icebp
xlat
int3
aaa
mov
rcrl
xchg
mov
or
xor
cmc
sub
xchg
aad
mov
and
adc
cs
mov
pop
dec
movsb
pop
and
cmpb
cmp
push
push
push
mov
xor
cs
sub
rcrb
daa
mov
add
adc
sti
mov
mov
adc
and
cs
stos
fcomps
in
sub
xor
mov
inc
negl
in
div
frstor
jmp
push
sbb
push
add
inc
pop
cs
mov
imul
lods
pop
std
pop
mov
cmp
cli
lcall
sti
pop
xor
mov
push
push
mov
es
sti
push
imulb
xchg
xchg
inc
jno
xor
add
or
push
mov
sbb
mov
mov
jb
inc
aam
sub
inc
shl
cmp
jecxz
sbb
rol
dec
xchg
pop
xchg
push
mov
fwait
or
and
lods
mov
inc
ficoms
in
pop
xorl
lea
fcomps
cmpsb
xlat
sub
flds
ret
or
push
lret
xor
jo
pop
gs
mov
dec
mov
bound
xchg
mov
push
pusha
adc
in
ds
xchg
jne
mov
out
cmp
sbb
mov
xchg
inc
test
jnp
cmpsb
ljmp
repnz
sub
and
in
sbb
mov
aas
jg
movsl
insb
push
add
dec
fbld
pop
pslld
movsl
xor
mov
pop
enter
mov
mov
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
xor
sbb
add
sbb
test
and
pop
cld
push
icebp
push
adc
inc
loopne
add
jae
mov
lods
dec
les
sbb
xor
call
fsts
aam
in
in
mov
dec
mov
jb
jae
nop
roll
test
movsb
adc
cs
icebp
inc
fdivrl
and
in
std
and
mov
xchg
mov
fmull
pop
inc
pop
and
xor
xchg
jle
lods
push
dec
xchg
xor
cmp
cmp
pop
xchg
movsb
in
push
fld
dec
mov
aad
jne
rcll
or
and
mov
dec
xlat
xchg
leave
cmpsl
shr
or
adc
rol
and
fnstcw
jnp
cld
inc
arpl
push
std
aad
insb
jle
stos
outsb
mov
push
mov
mov
jne
fwait
jecxz
jb
cmp
fnsave
repz
ret
lret
mov
imul
xchg
leave
xchg
lcall
pop
fwait
popf
ficoml
sahf
and
aam
shll
jne
sbb
cmp
stos
popf
sub
repnz
xchg
xchg
shrl
popf
popf
sar
leave
lods
or
and
test
mov
leave
test
pop
es
jl
imul
mov
or
lcall
push
cltd
adcb
mov
scas
fiadds
rcrl
mov
shll
dec
push
test
enter
jae
loop
dec
ds
push
andb
cmp
mov
jle
ret
or
add
mov
cmpsb
mov
aam
push
test
xchg
jp
add
push
je
dec
xchg
sbb
fwait
lods
pop
scas
add
aam
sbb
jns
outsl
sub
dec
shrl
jp
add
movsl
add
andb
mov
test
mov
lds
sbb
mov
and
mov
incb
in
out
xchg
popf
shll
cmp
pop
insb
lock
mov
inc
push
inc
cmp
bound
jle
and
jg
sbb
scas
pop
cwtl
cmp
push
mov
ffreep
jecxz
mov
pop
in
or
int3
sub
sub
sahf
mov
add
in
xor
fisubl
mov
ret
xchg
rcl
int3
mov
mov
test
sub
mov
pop
dec
xor
mov
sbb
xchg
push
out
cmp
out
rcrl
subl
imul
mov
pop
push
data16
sahf
adc
sahf
sti
adc
xor
lds
or
mov
call
loop
adc
cmp
imul
dec
and
aad
gs
mov
or
insl
andl
dec
shrl
jmp
dec
loopne
jne
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
dec
lcall
add
sbb
cmpsl
push
stc
xor
pop
mov
imul
dec
mov
ret
push
es
test
sahf
and
cwtl
push
adc
push
stc
cmpsb
mov
insl
add
push
ret
and
jbe
jns
decb
cs
jl
cmp
pop
in
inc
pop
clc
shl
adc
data16
cmp
sbb
or
fs
mov
jo
das
pop
sub
loope
aas
push
pop
mov
inc
jnp
pusha
scas
push
adc
push
std
fsincos
lods
ret
stc
mov
push
jle
add
call
test
mov
mov
cmpsb
push
add
add
arpl
fildl
sbb
lret
lahf
stos
cli
enter
lea
fs
xchg
xlat
push
fdivrl
loop
push
sub
mov
daa
mov
ljmp
movsb
dec
lret
or
mov
test
sarl
das
enter
cs
lods
xor
add
loopne
cs
int
pop
add
jne
ss
insb
xor
push
cmp
push
cmp
sub
fsubr
mov
or
mov
push
in
fadds
les
cs
push
test
pushl
mov
fiaddl
sub
test
jle
popa
sbb
push
lea
inc
add
push
in
pop
mov
jns
mov
mov
fmulp
xor
roll
movsb
cmpb
fst
es
sub
cltd
test
push
pop
rolb
fistpl
sbb
lods
sti
out
cld
enter
outsl
rcrl
pop
or
mov
iret
js
insb
mov
inc
std
sbb
out
pop
mov
add
push
test
dec
out
xor
adc
mov
jnp
push
xor
lds
or
imul
fwait
push
add
jle
pop
sub
aad
mov
cmc
xor
mov
lret
inc
cmpl
rcrl
adc
test
movsl
out
mov
not
jg
hlt
adc
fisttpl
xor
test
shlb
movsl
or
inc
dec
adc
andl
push
mov
das
inc
nop
mov
aas
pusha
push
je
push
int
jne
lcall
cmp
sub
pop
mov
mov
mov
lock
in
jle
dec
das
test
fdivp
sbb
and
cmp
lcall
cmpsl
adc
stos
jae
dec
and
push
repnz
mov
push
popa
dec
cmp
add
icebp
shll
xlat
cltd
pushf
jg
dec
out
jnp
mov
ja
gs
das
out
repnz
aam
add
aam
in
and
fstp
mov
cmp
pop
push
rcrb
inc
push
or
xor
jg
push
jb
pushf
sub
mov
xchg
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
call
cmp
sbb
xorb
call
mov
sub
mov
xchg
sub
push
dec
adc
ret
negb
inc
negl
nop
mov
in
loopne
mov
sbb
and
sarb
and
mov
nop
or
loop
sub
mov
xchg
jno
sub
and
sbb
or
mov
sbb
xchg
call
jb
add
cmpsl
cli
mov
push
enter
jl
push
or
jp
xchg
and
pop
out
push
xlat
cmpsl
mull
mov
jecxz
or
hlt
shr
pop
daa
xchg
ret
fwait
cmpsb
pop
imul
push
cmp
push
lods
out
inc
fstpt
jae
or
lret
sbb
xchg
pop
inc
into
cs
add
cli
jge
push
js
sbb
add
test
shl
mov
xor
sti
lods
add
sbb
inc
mov
pop
imul
pop
rcll
xchg
scas
add
mov
sbb
aad
push
dec
or
jg
cmp
mov
imul
jae
mov
mull
jmp
jl
push
aam
out
mov
lahf
xchg
pop
neg
push
test
xor
arpl
lock
data16
lea
jp
push
mov
or
dec
and
xchg
dec
and
inc
orb
popa
inc
and
movsl
jmp
ret
fisttpl
jecxz
add
mov
or
pop
mov
or
inc
stos
push
in
pop
xorl
movsb
jo
or
xchg
inc
add
sbb
add
adc
loope
scas
mov
inc
mov
les
and
pop
adc
int3
add
cwtl
andb
mov
pushl
pusha
cmp
xor
cld
ljmp
mov
push
xchg
cld
sbb
cwtl
inc
mov
inc
pop
repz
or
pop
push
lods
addr16
icebp
pop
shll
pop
sbb
js
pop
sbb
xor
inc
jmp
mov
xchg
inc
fs
ss
mov
xchg
add
xor
outsb
aas
sbb
fcoml
test
test
jle
mov
movsl
sti
cmpsb
mov
add
repz
mov
cmp
sub
lock
jne
mov
sub
lret
in
enter
sbb
jecxz
sub
mov
ficomps
cld
test
daa
adc
lret
xchg
addr16
mov
lahf
xchg
sbb
insb
aas
test
xchg
in
add
push
mov
dec
es
cli
cmpl
inc
sbb
insl
xchg
ror
pop
mov
xchg
fstl
push
gs
or
or
movsb
add
sbbb
push
cmp
xchg
shrl
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
bnd
call
adc
sbb
nop
mov
in
je
sar
mov
out
push
out
mov
lcall
leave
sub
jmp
push
test
stc
lods
mov
inc
xchg
test
jno
inc
xchg
test
jge
nop
pop
add
mov
shr
dec
dec
xchg
mov
imul
jno
jp
cmp
cmp
int3
addl
lock
mov
sahf
xlat
push
push
std
inc
nop
dec
daa
movq
aam
push
sub
movsb
cmp
out
jp
fucom
mov
fldenv
int
aad
test
or
in
xchg
pop
jae
sub
push
push
aas
push
lea
mov
xor
mov
dec
add
mov
sub
mov
cmp
jl
aaa
inc
mov
or
mov
cs
movsb
mov
dec
fsubrs
leave
inc
xor
jecxz
cld
pop
fisttpl
out
std
adc
xor
jns
xchg
add
mov
mov
int3
idivl
rcl
loope
lcall
mov
push
sub
xor
add
inc
push
movsl
mov
xchg
pop
mov
pop
mov
sbb
popa
cwtl
bound
mov
loopne
cmpsb
and
mov
push
inc
stos
fwait
jge
push
push
xchg
sbb
push
inc
xor
add
adc
jns
into
jae
push
pop
jecxz,pt
and
add
inc
mov
or
mov
adc
dec
icebp
push
outsb
or
or
ja
xchg
jo
jb
stos
jmp
bound
lret
push
and
stos
adc
dec
movsb
xor
jle
pop
jle
test
xchg
xor
push
jecxz
aam
dec
cli
jns
fimull
push
in
sarl
test
mov
scas
inc
cwtl
test
stos
sub
jmp
nop
sbb
dec
iret
jecxz
ja
xlat
cmp
nop
daa
adc
push
ds
xor
or
dec
xor
mov
aam
xor
mov
jb
sbb
dec
mov
pushl
out
jecxz
jae
sub
jae
pop
scas
insl
int3
jb
aam
pop
xchg
jle
int
push
inc
jns
int3
xor
out
in
rcll
adc
sbb
adc
mov
out
xor
mov
sbb
sbb
stos
dec
popa
es
pop
ret
jle
or
dec
loopne
das
sbb
pop
fildll
inc
mov
cmpb
iret
in
and
pop
shr
jg
es
js
xchg
sub
pop
mov
outsb
pop
sbb
jge
pop
arpl
insb
test
adc
test
jmp
sahf
ret
mov
pop
mov
iret
xchg
cmp
shll
sub
aam
or
inc
bound
add
hlt
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
mov
sbb
adc
sbb
pop
mov
int
mov
jnp
mov
or
rcrl
jbe
push
call
jno
fdivs
dec
inc
cmp
in
mov
push
mov
lds
or
aaa
jle
mov
sub
add
loop
mov
sbb
push
mov
dec
pop
push
rolb
leave
call
mov
cmp
and
sti
sbb
or
sub
mov
in
sub
jne
jnp
pop
add
enter
dec
orb
int
lea
movsb
lods
cmpsb
rorb
outsl
mov
xor
xchg
fst
mov
sub
icebp
lods
xor
jbe
mov
dec
pusha
fmull
pop
cmp
nop
dec
push
push
cmpsb
xchg
mov
pop
mov
addb
out
pop
cmpsb
and
jg
sbb
in
dec
cmp
add
push
shrb
fnstenv
fistpll
rcll
xchg
pop
pop
ret
dec
xor
mov
aas
dec
fwait
push
pop
lahf
push
pop
dec
mov
stos
inc
ret
inc
xchg
cmpsb
jo
or
shll
jb
adc
add
mov
xor
cmp
push
lods
es
shll
jb
xchg
mov
lods
out
rcl
pop
aas
push
clc
lret
in
lret
sub
data16
sbb
sbb
dec
mov
mov
fiadds
bound
push
dec
and
loop
push
cmp
xchg
inc
and
and
jns
adc
mov
int3
leave
lock
jb
bound
out
push
cmp
inc
push
cmp
imul
mov
movsb
mov
shrb
pop
xlat
inc
pop
int
mov
scas
imull
cmpb
xor
enter
ret
jg
inc
fisubrs
push
pop
out
cwtl
jmp
mov
lds
sub
movsb
cmp
cmpl
fadds
add
addb
mov
loop
mov
das
dec
shll
lahf
xor
lods
sbb
mov
bound
xlat
lods
insl
jecxz
mov
or
test
daa
fld
and
xor
outsb
out
jle
icebp
jmp
xchg
sub
iret
insb
das
pop
cltd
mov
imul
dec
aas
and
outsb
bound
or
ja
out
pop
pop
jns
mov
and
sub
dec
cld
push
jmp
or
and
mov
or
sarl
xor
push
add
sub
cmp
rcll
icebp
lock
cmp
andb
sub
inc
mov
lock
mov
add
jmp
add
push
sbb
ja
dec
in
jle
sub
sbb
adc
sbb
cs
test
in
addb
dec
in
pop
lret
dec
mov
sub
add
int
stc
push
jb
insl
sub
js
aam
or
pop
inc
cmp
sub
cmc
mov
xchg
mov
inc
or
xlat
scas
lods
dec
pop
test
into
xor
hlt
mov
inc
jbe
pusha
lahf
mov
shrl
xchg
fimull
and
dec
jnp
movsl
pop
mov
mov
sarb
lea
mov
in
aaa
cmp
cld
xchg
test
out
jmp
outsb
jb
xchg
rcr
xchg
or
jne
mov
mov
insl
in
push
fwait
movsl
in
shlb
outsb
cmp
jecxz
push
fs
sti
sub
push
adc
push
lock
and
dec
sbb
shl
in
mov
jle
adc
mov
outsb
movsb
cmp
mov
push
fistl
sbb
dec
test
push
xchg
pop
das
test
pop
in
mov
mov
test
inc
sbb
bound
adc
add
cmpsb
xchg
xchg
or
mov
dec
or
lcall
jae
and
mov
sub
sbb
shrb
insl
cmp
stos
test
movsb
mov
lods
cmp
imul
aam
repz
adc
rcrb
das
ja
add
pushf
movsb
and
aas
lahf
push
sbb
adc
fs
mov
ja
dec
not
stos
dec
xor
sbb
pop
and
popf
jecxz
inc
stc
xchg
fwait
popa
pusha
jbe
loop
out
out
repz
cmpsl
push
es
pop
sti
jne
lock
inc
sti
pushf
into
fwait
adc
jno
adc
or
inc
mov
xchg
or
add
out
add
or
cli
rcr
int3
adc
scas
pop
mov
mov
pop
jo
jmp
sub
xlat
out
xor
fiaddl
pop
addr16
movsb
test
aaa
test
and
sahf
pusha
adc
cltd
into
pop
icebp
and
idivl
and
dec
mov
icebp
in
push
push
sbb
xor
scas
mov
pop
pop
push
or
pop
js
insl
mov
mov
ja
cmpsl
xchg
mov
je
or
mov
sti
mov
gs
sbb
xor
or
mov
mov
mov
lock
iret
xor
test
push
into
push
dec
jl
sub
out
push
je
insl
fcoms
xchg
test
dec
mov
dec
popf
jl
mov
xchg
imul
insl
inc
fildll
hlt
aad
xor
shl
sbb
repz
jo
pop
xor
mov
leave
or
push
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
into
iret
jo
and
sbb
inc
or
xor
divb
cmpsb
cmp
out
push
push
in
mov
sbb
js
mov
xor
mov
jo
stc
icebp
and
xor
mov
test
jae
or
inc
incb
mov
ss
mov
out
or
cltd
xchg
das
hlt
push
pop
pop
cmp
xchg
jle
push
orb
cmpsl
insl
aas
jae
out
int3
int3
mov
shr
lods
inc
mov
xchg
sub
cld
jb
jb
in
jbe
push
or
inc
sarl
leave
dec
ret
nop
aas
fs
dec
dec
aas
push
lods
stos
cmp
push
test
loopne
mov
stc
jae
mov
lret
mov
jbe
popa
cmc
sbb
push
repz
ljmp
andl
mov
cmp
pop
push
jno
mov
dec
outsl
cmp
mov
jnp
les
fistpll
xchg
mov
sbb
iret
movsb
sub
dec
mov
mov
adc
fcomps
push
jb
fimull
std
add
inc
dec
mov
mov
push
push
repz
fsave
push
xchg
sub
and
pavgb
xorl
xor
pushf
repnz
inc
mov
xchg
in
push
pop
aaa
aaa
dec
xor
fwait
xchg
mov
cmpsb
data16
sarl
stos
fwait
jns
out
pop
aam
out
scas
push
inc
inc
popa
stc
cmp
rclb
mov
and
dec
les
cltd
or
addr16
daa
int3
popa
cwtl
lcall
mov
cmp
adc
test
sbb
ficomps
imul
test
pop
in
mov
fnstsw
lea
imul
cmc
xchg
xchg
ret
pop
push
mov
mov
mov
dec
and
sub
outsl
mov
mov
lret
movsl
or
int
xor
pop
cmp
ret
popf
xlat
insl
sub
fstps
mov
loop
out
out
sbb
loopne
jge
stos
and
sarl
xchg
cmp
je
sbb
ret
push
jle
sbb
jp
or
pusha
sbb
mov
or
lcall
arpl
jbe
jle
push
add
adc
insb
adc
sub
in
scas
mov
cwtl
jmp
into
cmc
movsl
sbb
mov
movsb
xchg
sbb
xor
sub
lea
lcall
lods
and
push
inc
sbb
cmp
dec
xor
mov
movsb
xor
movsl
out
mov
sbb
add
jl
xlat
xchg
pushw
cmpb
jge
cmp
xchg
nop
pop
lahf
shll
add
and
push
aam
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
cli
push
jle
pop
sbb
add
sbb
fsubr
mull
sbb
aas
mov
fistl
and
lock
lret
add
inc
roll
test
xchg
lds
vpcmpeqd
add
mov
xchg
into
rorl
xchg
psllw
shrb
mov
adc
mov
mov
mov
lcall
hlt
enter
mov
leave
cmp
push
sub
xchg
scas
adc
fstp
push
jns
je
cmp
test
inc
and
popa
push
hlt
dec
ds
push
xor
cmp
or
es
nop
push
push
scas
xor
pop
xchg
inc
sti
int3
fcmovne
test
cs
push
mov
jne
mov
sahf
mov
sbb
add
sub
dec
iret
dec
loopne
push
pop
test
jge
xor
ja
enter
negl
sbb
mov
adc
and
movl
inc
call
inc
lods
repnz
push
stos
fbld
test
sbb
or
stos
pop
jb
arpl
xlat
mov
test
xchg
ss
lods
or
push
arpl
imull
test
mov
inc
and
out
cmp
pop
movsl
lods
into
push
jbe
pop
test
and
idivb
mov
cmp
mov
inc
popa
xchg
scas
dec
dec
mov
jg
ljmp
sub
and
push
cmp
negb
add
fcomps
popf
mov
repz
pop
std
pusha
lods
and
test
mov
inc
loopne
fsubp
or
data16
mov
int
lds
mov
cmpsl
nop
and
pusha
mov
daa
lock
mov
mov
test
sub
outsb
imul
dec
adc
xchg
outsl
sbb
ja
sbb
xchg
jns
pusha
xor
pop
test
mov
mov
mov
mov
xor
mov
push
stc
sbb
xor
jle
and
jp
js
mov
sub
gs
jle
jne
jne
popf
and
jno
ds
add
sub
or
pushf
lods
into
mov
outsl
std
mov
cwtl
pop
mov
mov
lahf
cmc
and
push
decb
adc
jo
sub
mov
aam
imul
lahf
adc
inc
dec
pop
adc
xchg
lcall
jmp
icebp
out
adc
pushf
cwtl
insb
or
mov
mov
je
js
test
nop
ret
push
es
or
xchg
mov
sub
jo
sahf
adcb
cli
sub
inc
mov
scas
pop
push
and
mov
xchg
inc
dec
push
push
cmc
cltd
pop
mov
sbb
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
push
sbb
sbb
adc
sbb
add
in
incl
mov
cmpsl
pushf
scas
jno
sbb
pusha
add
jle
int
pop
mov
cs
fldenv
outsb
mov
ss
mov
mov
fists
call
push
std
out
movsl
cmp
xorl
push
mov
mov
xor
loopne
imul
sti
test
add
pusha
add
and
mov
insb
mov
xchg
pop
out
pop
mov
cmp
fxch
int
ss
icebp
rcl
mov
pop
adcl
shll
mov
fldcw
jecxz
mov
adc
movsb
repz
loope
jae
pushf
push
inc
in
or
mov
dec
fbld
dec
and
jno
and
mov
ljmp
and
or
xor
mov
pop
lods
jg
lds
cmp
pop
je
iret
rclb
xor
repnz
sub
jp
or
pop
nop
fnstsw
movsl
dec
cmp
jle
cmp
fimuls
adc
mov
jg
lahf
inc
jne
cltd
out
xchg
stos
outsl
push
test
lret
push
ss
pop
mov
aad
pop
and
xchg
aad
or
aad
and
mov
xor
stc
shlb
bound
fdivrl
cmp
int
aad
cmp
pop
inc
rclb
ja
mov
inc
ja
inc
repz
ss
sbb
scas
push
dec
shl
repz
ret
in
int
push
leave
add
dec
in
movsl
into
jne
std
pop
xor
add
mov
addl
lahf
mov
outsb
push
or
aam
mov
fwait
dec
push
loope
lcall
test
arpl
inc
call
test
add
mov
sbb
cs
xor
dec
shr
sbb
pop
fnsave
xchg
ljmp
scas
adc
cmp
jno
movsl
add
inc
movsl
jbe
ss
jbe
imulb
nop
pushf
lods
xlat
adc
aam
push
fadds
clc
popa
pop
mov
sbb
xchg
popa
mov
imul
pop
xchg
mov
pop
jb
ret
inc
cmp
or
mov
les
or
push
out
sbb
cmp
jb
ror
xchg
dec
xor
dec
xor
stc
push
xor
or
lock
iret
sub
mov
xchg
sub
scas
or
in
mov
cmpsl
movsb
int3
push
pop
or
pop
sbbl
in
push
jnp
xor
icebp
int
or
or
je
pop
test
aad
sti
shrb
addr16
das
fcompl
sbb
jnp
fildl
mov
pop
aas
out
stc
xlat
out
sub
sahf
and
xor
scas
ss
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
or
push
stos
pop
adc
sbb
adc
sbb
je
pop
mov
andb
dec
enter
jle
sub
test
imul
fucompp
dec
mov
jno
lcall
jne
lret
lds
hlt
push
pushl
mov
jno
ljmp
push
add
js,pn
rorb
jle
rclb
rol
adc
xor
stos
scas
push
int
xchg
iret
jge
or
and
and
adc
push
sub
push
xor
pop
inc
mov
stos
std
rcrb
push
insb
int3
test
mov
sbb
es
in
shrb
add
aad
inc
fdiv
js
call
lods
gs
mov
push
testl
jge
push
inc
or
mov
fisubrl
loop
and
jp
jecxz
aam
sbb
xor
int
movsb
outsl
dec
call
sbb
cmp
lds
cwtl
push
aas
lea
loop
add
sbb
mov
insb
lds
fildl
adc
push
cmp
pop
or
sub
insl
ljmp
int
adc
test
movl
lea
ret
mov
and
push
sbb
mov
in
aad
jae
fdivl
pusha
fimull
jge
inc
and
ljmp
movsb
gs
dec
and
pop
outsb
cmp
push
lods
jne
cmp
mov
xlat
outsl
jmp
les
mov
addr16
icebp
movsl
imulb
es
dec
fwait
out
cmp
cmp
push
inc
jbe
pop
push
xor
sub
sub
push
and
pop
ror
dec
mov
in
dec
mov
movsl
xchg
gs
push
repz
or
xor
lds
data16
roll
sub
mov
fstpl
sti
cmp
mov
scas
mov
mov
adc
out
in
sub
cmpsb
rcl
sub
mov
cmp
sbb
push
xor
adc
shrb
mov
xchg
test
test
dec
aad
test
mov
mov
ret
loopne
inc
or
movsb
int
movsl
pop
jo
pushf
push
xor
repz
or
lahf
mov
push
leave
xor
das
fsub
pop
fnstsw
adc
fimuls
pop
mov
lcall
mov
sub
imul
inc
mov
pop
push
jne
inc
icebp
cmpl
add
pop
cmp
faddl
jmp
ss
out
cmp
std
shlb
push
aad
push
xor
mov
leave
pop
adc
in
xchg
repnz
lds
dec
aad
add
scas
xor
stc
mov
add
jp
mov
adc
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
pop
outsl
mov
or
sbb
roll
das
and
add
xchg
pop
cli
pop
push
mov
into
lods
outsl
outsb
mov
dec
out
inc
clc
and
lahf
cmp
jo
jo
xchg
sbb
mov
lcall
cmp
idiv
jbe
dec
adc
xchg
dec
jle
out
std
cmp
fwait
aaa
sub
mov
imul
imul
test
pop
jge
pop
add
push
jbe
xor
cli
add
pop
adc
push
xchg
pop
xchg
sub
lret
sarb
adc
add
imul
jge
sub
ret
inc
pop
sbb
jno
xlat
imul
xchg
sub
adc
inc
push
aaa
jmp
sub
lcall
ficoml
mov
xchg
call
fs
and
out
push
lret
loopne
pusha
outsb
stos
jle
push
sub
xor
pusha
pop
cmp
cmp
mov
pop
sbb
out
sbb
in
or
movsl
add
xchg
xchg
mov
popa
push
in
mov
imul
jae
lahf
cmp
cwtl
jg
cmp
lret
sub
in
dec
jnp
and
out
and
stos
das
pop
adc
negb
cmp
popa
test
int3
push
fdivl
pop
das
inc
rcr
arpl
xor
cmpsb
cmc
pop
xor
movsb
cmp
pop
fwait
adc
and
xchg
cmpsl
dec
inc
repz
inc
scas
bswap
cmp
clc
or
jb
dec
adc
inc
push
not
ja
outsl
pop
es
in
ret
rcll
stc
scas
mov
repz
mov
pop
mov
testl
and
js,pt
scas
movsb
jecxz
xchg
pop
mov
dec
clc
mov
addr16
mov
push
push
cmp
cmpsl
sub
dec
inc
jne
rorb
lock
and
lcall
push
jbe
mov
xchg
popf
ss
pop
xchg
sub
stc
fcoml
sbb
fcompl
out
movsl
cs
push
in
repz
push
cli
inc
out
addr16
push
pop
sbb
mov
test
ficoms
leave
dec
enter
mov
pop
and
leave
mov
pop
in
jnp
outsl
insl
std
sbb
gs
push
push
pop
out
test
pop
xchg
shlb
adc
fs
pop
call
xor
dec
or
repnz
adc
pushl
push
sahf
xchg
aaa
adc
dec
jnp
or
xor
mov
fcmovb
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
mov
jle
pop
sbb
test
sbb
inc
pmaxsw
add
pop
dec
jmp
sbb
outsl
cmp
imul
mov
sub
adc
leave
fstp
rol
imul
mov
push
add
mov
jae
divb
cmpb
adc
repnz
bts
sub
cmp
test
adc
fildll
mov
push
sbb
adc
mov
mov
sbb
and
roll
cwtl
insl
in
jb
mov
out
add
mov
inc
jbe
mov
aas
xchg
push
or
idivb
dec
ljmp
inc
inc
lcall
push
loop
out
std
inc
outsb
popf
inc
in
push
ret
and
add
jmp
adc
sbb
andl
cli
xor
mov
xchg
dec
mov
adc
and
xchg
xchg
arpl
stos
or
mov
ss
add
sub
pop
stos
pop
sub
loopne
mov
sub
push
add
incl
mov
or
lds
mov
lahf
pop
adc
mov
mov
add
test
cmp
add
mov
xlat
inc
pop
cwtl
adc
adc
rcr
cmp
add
adc
loopne
mov
lods
adc
xchg
cmp
adc
sbb
mov
out
and
popl
std
sub
test
mov
pushf
test
pop
ss
shlb
or
std
xlat
mov
jno
ficoms
das
dec
gs
mov
cmp
pop
pop
mov
and
inc
ret
xor
dec
pop
cmp
sbb
dec
insb
adcl
int
fmuls
iret
sti
shlb
sub
inc
cwtl
mov
push
data16
fcomps
out
push
mov
rolb
sub
mov
inc
or
sti
ss
lret
scas
daa
sbb
push
jnp
cmpsl
jne
les
fwait
dec
mov
dec
bnd
out
lds
xor
int3
iret
cmp
pop
fucomp
add
std
movl
jge
and
push
fs
xchg
cwtl
jne
out
push
lret
jg
pop
bound
insl
mov
inc
mov
xor
in
bound
xchg
xlat
mov
jo
pop
dec
adc
push
test
fisttpl
inc
and
testl
adc
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
or
sbb
sahf
test
fsubr
not
pop
ja
daa
ror
stos
add
popf
pusha
push
pop
out
lcall
push
jmp
test
scas
and
in
xor
stc
or
icebp
add
mov
dec
subb
xor
rcl
jge
push
sbb
jmp
out
inc
js
jbe
push
in
lcall
mov
pusha
xchg
mov
mov
dec
ds
scas
dec
xchg
xchg
mov
pop
cwtl
aam
nop
fisubs
mov
lock
mov
xchg
adc
aas
sbb
cmc
mov
addb
ret
ljmp
jecxz,pt
pop
iret
lods
push
push
call
aas
out
jecxz
xchg
shll
jg
sub
mov
or
or
and
imull
or
movsl
fcmove
sbb
repnz
xor
dec
xor
inc
inc
push
add
mov
jmp
mov
inc
repnz
mov
mov
jg
xor
mov
push
sub
mov
cmpb
or
stos
adc
popf
xor
dec
xor
out
fnstsw
jecxz
inc
add
nop
pop
test
fldl
or
xor
xchg
mov
enter
adc
out
test
clts
fsubrs
jnp
or
ret
rorb
cs
shld
loop
ja
dec
sub
xchg
mov
ja
and
pop
cmp
enter
aad
aaa
popa
ds
cmpsb
cwtl
movsl
inc
fstpt
movsb
fwait
int3
mov
cmp
sbb
add
popw
xchg
inc
cwtl
fldt
mov
pop
sahf
jns
xchg
mov
rcr
cmp
mov
cmpsb
movsl
bound
and
lods
mov
jl
out
movsb
sub
in
cmc
enter
into
pop
add
pop
sbb
inc
push
pop
popa
cmp
mov
mov
test
sbb
xor
and
jns
mov
mov
xchg
js
push
xchg
push
push
ja
shrl
jl
push
cs
call
pop
insb
and
mov
sbb
mov
movsb
dec
cmp
ret
lods
daa
push
test
outsl
insb
push
adc
filds
xor
mov
push
lret
pop
push
shlb
insl
sbb
lods
jl
decl
aas
pop
push
pop
inc
fsubp
aas
inc
mov
lcall
dec
jno
repz
test
jl
sbb
popf
cmp
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
inc
jnp
lock
sbb
test
sbb
adc
sarl
cmp
cmpsb
or
ret
shll
cmp
xchg
iret
add
dec
adc
notl
stc
or
cmc
ss
cld
sbb
mov
lds
jo
add
xor
add
jns
fidivl
mov
flds
fwait
push
mov
xor
dec
xor
or
pop
xor
movsbl
sbbl
xchg
and
dec
xor
adc
push
fsubs
scas
pop
aad
or
adc
flds
mov
sub
pop
xchg
ljmp
mov
xor
stc
cmpsb
or
jb
repnz
push
ret
call
pop
scas
divl
int3
jmp
fsubs
dec
lcall
out
ja
mov
fstp
jne
or
jecxz
lock
and
arpl
cltd
arpl
inc
mov
aad
sbb
out
xchg
pushf
or
xor
jmp
call
xor
inc
test
std
or
stos
cmp
test
aad
mov
fsubrs
lcall
stos
xor
inc
push
rclb
addl
fmull
fwait
sbb
jb
or
and
or
fwait
aad
mov
das
jns
jb
pop
ret
cmp
or
fs
add
xor
pushf
sbb
xor
mov
jge
xchg
xor
je
adc
int
sbb
jecxz
out
aas
xchg
loop
shrb
push
jg
xchg
sti
daa
sub
cmp
sbb
icebp
and
sub
dec
aas
jo
jo
push
fbstp
pop
push
int
pop
bound
data16
push
das
dec
les
add
cli
pop
lock
jge
mov
and
std
aad
sahf
mov
orb
test
xchg
cmp
xor
int3
add
cmp
sub
int3
test
daa
frstor
inc
out
xchg
faddl
mov
dec
adc
out
les
jp
lock
insl
sbbl
roll
rep
lret
sbb
mov
gs
push
xor
fiaddl
xlat
jecxz
lock
mov
or
add
cmp
sbb
nop
sarl
fiadds
jns
and
add
xor
push
sub
insb
pushf
scas
testl
in
scas
loopne
out
push
adc
add
rcr
in
push
mov
and
inc
in
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
jg
jg
xor
sbb
sub
jg
xor
loope
out
adc
cmp
ss
faddl
inc
push
push
mov
mov
inc
and
pop
or
mov
xlat
out
fstl
or
xchg
scas
js
sub
sub
call
lahf
das
mov
sahf
in
jmp
adc
sub
les
sub
bound
adc
repz
sub
popf
mov
inc
imul
dec
pop
jno
jne
jecxz
lds
imul
std
in
pop
mov
mov
fwait
cmc
xorb
inc
cmpb
pop
pop
popw
movsb
inc
jb
inc
lret
loope
mov
mov
pusha
test
xchg
xor
adc
cltd
jb
lret
daa
std
iret
mov
ja
dec
loopne
dec
movb
sahf
in
mov
outsl
inc
mov
rorl
mov
push
push
push
dec
mov
mov
jo
pop
cmp
das
int3
and
mov
dec
or
push
std
shl
int
pop
jmp
mov
pop
inc
push
jl
inc
repnz
or
repz
pop
cmpl
cmp
lret
adc
aad
dec
or
add
adc
dec
jge
icebp
xchg
adc
dec
pop
out
inc
add
pop
int3
lcall
add
jbe
cmp
lret
jecxz
insb
jge
inc
aas
cld
push
mov
popa
sbb
js
shlb
lea
loopne
adc
jg
and
mov
jo
cs
pop
mov
aaa
sub
pop
lcall
cmp
or
sbb
mov
leave
push
std
std
adc
fninit
mov
push
push
flds
bound
add
mov
cmp
test
je
add
loopne
mov
and
cltd
push
jle
mov
mov
push
lea
test
xchg
mov
dec
inc
es
push
sbb
push
sub
repz
cmp
adc
pop
pop
jns
std
fwait
or
aam
arpl
jne
imul
popa
jge
and
enter
jle
sub
inc
inc
xchg
adc
mov
nop
arpl
movb
sbb
sahf
xor
cmp
idiv
cmp
dec
mov
pop
mov
add
das
xchg
or
fidivs
fdivrl
push
loope
jnp
bound
js
sub
jne
rol
inc
call
movl
jmp
aas
mov
mov
dec
mov
iret
jo
icebp
sbb
test
sbb
jg
stc
xor
mov
call
test
jae
leave
or
shll
rorl
daa
add
pop
sub
std
cwtl
xchg
call
and
mov
xchg
xchg
out
clc
cld
test
andb
add
loop
push
test
fwait
outsl
stc
sub
mov
sub
es
daa
cmpsl
lret
iret
hlt
mov
shll
dec
pop
jp,pt
imull
dec
rcrb
cmp
pop
cltd
lret
mov
test
jl
xchg
mov
in
insb
pop
jae
shlb
push
test
sub
jge
push
arpl
fwait
xor
lret
push
mov
lcall
dec
std
sbb
and
lcall
and
sbb
mov
sbb
push
mov
pop
adc
outsl
jmp
in
pop
std
and
add
xchg
xchg
inc
fnstenv
push
xor
inc
insl
shl
addl
sbb
mov
lods
lahf
movsb
daa
addr16
pop
sti
adc
inc
jmp
fildl
mov
mov
ficompl
push
les
and
test
call
imul
in
sub
rorl
leave
and
inc
lret
lock
jb
int3
cld
and
rclb
jmp
and
or
xchg
adc
push
push
loope
loope
insl
pop
test
test
or
cmp
or
out
lret
xchg
sbb
shlb
push
sti
sbb
daa
mov
inc
lret
pop
cli
int
in
cs
and
lret
pop
sbb
stos
ja
cld
inc
sbb
stos
fcomps
xchg
jbe
jg
mov
scas
pushf
jne
iret
xor
hlt
mov
movsl
cmp
addr16
hlt
cmp
std
xor
add
popa
jo
pop
mov
shll
subw
jns
negb
lret
jnp
push
xchg
jmp
aas
aad
jle
les
inc
jp
sub
fimull
or
out
es
test
cmp
fyl2xp1
in
inc
push
iret
xor
test
bound
test
in
scas
ljmp
and
ljmp
repz
sub
xchg
in
jl
icebp
ds
jg
inc
jbe
cli
repnz
loopne
jecxz
test
mov
sbb
adc
in
add
inc
and
sbb
mov
pop
jl
imul
div
mov
jmp
lahf
ds
xor
lcall
int3
aas
mov
test
sbb
add
mov
sub
dec
lret
dec
add
jp
inc
bound
jmp
insb
out
and
inc
or
push
jne
jo
push
adc
int
jecxz
jle
jae
pushf
inc
leave
fistpll
inc
das
dec
sti
jb
lcall
movsl
sub
jno
mov
test
ljmp
xchg
adc
mov
pop
dec
cwtl
push
dec
mov
int
add
testl
or
dec
test
inc
sahf
ret
inc
or
in
mov
adc
shll
out
sub
in
push
mov
rol
dec
adc
jnp
into
ret
sbb
into
pushf
mov
xchg
mov
cmp
cmpsb
xchg
iret
mov
mov
repz
data16
push
xor
imul
jnp
repnz
jb
in
jnp
dec
mov
mov
pushl
add
lods
imul
ljmp
fs
pop
mov
pop
cltd
cmp
jb
fimuls
mov
mulb
dec
inc
adc
lret
mov
lret
mov
push
aam
shrb
jecxz
fcomip
xchg
adc
mov
fidivs
push
sahf
sbb
adc
xchg
mov
lds
nop
out
or
mov
cmpsb
cmpb
enter
pusha
movsl
out
push
xchg
hlt
cmpsb
cld
fwait
dec
mov
push
add
fimuls
les
rorl
enter
bound
mov
fists
adcb
xchg
addl
jmp
sbb
lds
and
xchg
das
pop
add
pop
mov
push
xchg
rcrb
mov
mov
jle
push
pop
push
xchg
rol
mov
test
jnp
icebp
sbb
inc
dec
xchg
ret
imul
xchg
mov
lret
inc
and
leave
xchg
mov
mov
mov
in
sub
cmp
push
jmp
fstl
fstp
stc
outsb
pop
mov
lret
bound
cld
cli
jo
inc
ss
jnp
jae
sbb
and
push
xchg
push
int3
fistpl
jns
adc
mov
insb
cs
adc
in
fcoml
in
cmp
outsb
loop
lods
lods
aam
xlat
in
xchg
pop
in
mov
dec
dec
jg
test
cmp
xor
bsr
data16
into
jg
push
lcall
bound
mov
mov
xchg
bound
aaa
jg
jecxz
rorb
mov
jb
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
je
stos
xor
sbb
test
sbb
adc
sub
adc
dec
sti
xchg
ret
lahf
pop
dec
lods
mov
es
daa
cmp
outsb
orb
mov
add
orb
jl,pt
dec
ficoms
jae
mov
push
insb
fwait
sbb
cmp
inc
mov
movsl
push
mov
push
pop
mov
out
test
mov
mov
div
shlb
icebp
xchg
std
jl
cli
or
ret
push
jmp
shl
lods
adc
dec
mov
cmp
iret
xor
sbb
je
mov
mov
mov
inc
dec
aaa
popf
inc
jbe
xchg
add
sti
int
cmpsb
sahf
scas
sub
pop
add
push
mov
cmc
scas
cmp
mov
add
or
movsl
hlt
mov
popa
mov
stos
das
mov
mov
fcmovbe
cs
adc
cmpsl
insl
mov
jnp
add
mov
and
push
movsb
sarl
out
mov
and
es
test
pop
shrb
push
int3
jl
xor
ss
sar
jbe
sbb
mov
icebp
inc
sub
mov
fcom
iret
mov
loope
aaa
test
pop
adc
mov
lods
jae
inc
sub
fnstenv
cli
push
repz
sub
jecxz
popa
adc
jle
data16
lods
cli
aad
cs
es
enter
pop
mov
popa
mov
and
stc
aam
sbb
ror
push
xlat
inc
jg
sub
xchg
popa
mov
or
les
pop
xchg
lods
cmp
leave
xchg
mov
sub
sbb
shll
jge
jb
popa
fmull
hlt
inc
stos
pop
das
negb
inc
xchg
pop
pop
jnp
dec
sbb
insb
xor
call
mov
push
aam
mov
or
stos
loop
cltd
fsub
inc
jns
cwtl
out
orl
pop
arpl
in
mov
dec
movsl
je
xor
add
xchg
or
mov
cmpsb
mov
sub
into
dec
and
shll
imul
dec
sub
sbb
mov
push
pop
inc
inc
mov
andl
addl
sbb
sub
cli
aam
cli
and
mov
add
sarl
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
stos
shl
sbb
push
dec
daa
push
sub
sarb
loop
scas
out
imul
cs
data16
jmp
fdivl
icebp
gs
leave
cli
dec
xchg
push
mov
mov
insl
mov
repz
xchg
inc
mov
inc
rcl
cmp
test
jno
popa
cli
pushf
sti
fisttps
popa
cmp
inc
mov
lret
test
daa
icebp
test
out
adcl
inc
popf
out
dec
adc
in
mov
lods
add
es
adc
out
stos
inc
mov
pusha
sub
xlat
jmp
mov
pop
cld
test
das
mov
mov
or
ret
dec
jp
xor
push
sti
xchg
cltd
inc
ficomps
imul
lea
loope
int
test
outsb
push
dec
loopne
in
aad
add
addr16
push
std
push
pop
dec
xchg
das
out
imul
mov
push
jp
sbb
pusha
pusha
aaa
aam
sarl
push
sbb
test
push
inc
lcall
pop
jb
enter
pop
inc
fs
push
dec
std
cmp
ret
xlat
cmp
shlb
cltd
or
out
jne
lret
rcl
inc
xor
adc
cli
int3
enter
push
push
cwtl
popa
cmpsl
adc
and
insb
popf
mov
sbb
ret
xor
mov
sahf
adc
and
xchg
rcl
das
sbb
ja
movsl
jbe
les
fsubl
insb
push
sbb
sahf
cmp
jbe
inc
fisttps
insb
jb
mov
arpl
jle,pn
jne
adc
and
orl
xchg
mov
lods
call
sbb
shlb
add
ljmp
inc
inc
dec
imul
dec
cmp
jge
ret
fsubrs
ror
mov
cmpsl
fcomps
and
and
out
in
fiaddl
pusha
add
lock
notb
push
nop
pop
jle
fmul
push
fwait
mov
nop
movsb
outsb
dec
and
xor
jbe
cltd
push
dec
fdiv
aad
push
cmp
pop
mov
sub
lcall
enter
hlt
imul
ss
xchg
jnp
cli
out
fadds
or
jle
insb
dec
ret
sbb
movsb
mov
mov
aas
add
pop
je
mov
xchg
enter
xorb
test
std
jne
dec
cwtl
push
sbb
mov
int3
movsb
test
or
shll
mov
test
nop
xor
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
fnstsw
ficompl
sbb
adc
sbb
jmp
dec
jns
pushf
sub
mov
icebp
cmp
aam
ret
int3
push
sub
adc
push
xlat
jne
sub
js
fcoms
sbb
pusha
lods
icebp
jno
stc
outsl
xchg
jp
mov
cmp
xchg
cwtl
sbb
cmp
push
fistpl
orb
jnp
inc
in
jo
int3
mov
ljmp
repnz
mov
cmpsb
cmp
fdivrl
and
lret
rolb
or
mov
icebp
push
fdivrs
and
add
popf
jmp
or
xor
pop
pop
mov
jnp
ret
mov
enter
repz
xrelease
xchg
add
in
scas
ss
int3
syscall
popf
pop
jle
xchg
ret
ret
call
jnp
shll
scas
xchg
faddl
stos
mov
test
pusha
jbe
pop
ds
iret
enter
pop
popa
inc
pop
arpl
pop
add
call
mov
enter
aam
inc
sub
add
clc
cmp
imul
cltd
push
pop
lret
dec
hlt
adc
lea
loopne
add
mov
lods
cmpsb
mov
xchg
mov
test
push
cli
or
aam
jp
cs
add
add
cmp
and
clc
int3
add
notl
push
push
ret
push
aad
imul
jns
aam
stos
push
clc
sbb
gs
mov
cli
mov
jns
pop
sub
mov
test
jp
iret
sbb
dec
sub
mov
jae
jnp
mov
imul
xor
movb
sahf
and
decb
cmp
ja
lret
cwtl
xor
je
in
cmp
cld
or
pop
ret
pop
test
mov
lock
sbbb
mov
mov
jmp
push
jmp
inc
adc
mov
adc
mov
xor
and
sbb
push
movsb
inc
ljmp
pop
sub
std
cmp
rclb
push
in
push
je
fbstp
out
cmpsb
jp
div
inc
in
mov
pop
xor
negl
fistps
nop
fsubl
jl
ljmp
out
js
stos
rorb
lret
mov
mov
inc
jp
mov
fsts
fistl
inc
jp
fcoms
fwait
jge
mov
fadds
xchg
sbb
clc
in
jne
mov
ss
dec
dec
mov
cwtl
fcoms
and
dec
add
dec
mov
pop
into
lods
jb
sub
stc
ja
lock
cmp
lock
sub
inc
ret
pop
scas
inc
cmpl
pop
in
jo
push
add
or
pop
dec
inc
mov
inc
xor
inc
add
mov
divb
arpl
cmc
inc
adc
lcall
iret
pop
xchg
push
inc
cltd
sbb
mov
dec
flds
and
fcompl
pop
out
jg
cmp
je
mov
push
xlat
inc
test
cli
mov
dec
repnz
cmpsb
pop
fiaddl
adc
inc
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
pop
test
sbb
xor
sbb
pop
fstpt
add
in
push
jnp
scas
shl
dec
shll
and
jp
cmpsl
es
in
insb
cmpsl
iret
add
jne
leave
and
push
mov
aam
xadd
dec
test
pop
sbb
xchg
pop
insl
cld
push
jo
stos
jle
add
imul
xchg
ds
ss
mov
pop
fbstp
ljmp
imul
popa
adc
mov
mov
mov
mov
add
pop
iret
lret
xchg
in
sub
mov
stos
push
sbb
ss
cmpsb
push
xlat
pop
sti
pusha
repnz
or
loopne
imul
loop
dec
push
lds
sti
jbe
call
leave
movsl
bound
int3
push
arpl
mov
push
xor
sub
int3
fistpl
scas
add
jg
movsb
repnz
sbb
mov
sub
adc
pmaxub
jle
sti
repnz
aas
outsb
jp
xor
mov
adc
lret
cmp
loopne
mov
mov
adcl
push
mov
ss
sub
jb
outsl
xor
call
scas
mov
and
lcall
test
daa
aaa
cmc
ret
mov
sub
or
fs
enter
pop
psrld
push
sbb
and
stos
outsl
mov
sbb
xchg
pop
ja
fstps
mov
dec
inc
pop
xchg
cmp
and
push
xchg
and
jno
mov
jmp
push
push
ljmp
jo
mov
out
mov
leave
inc
xlat
mov
fdivl
adcb
lds
push
xor
and
out
or
test
push
int3
adc
movsb
xchg
daa
push
or
es
inc
loope
and
jmp
xor
pop
add
or
jmp
xor
sub
hlt
sysret
cmpsl
stos
frstor
lcall
leave
or
mov
jmp
test
mov
out
fsts
jmp
xchg
pop
sbbw
dec
mov
cltd
rclb
push
dec
daa
pop
or
das
mov
add
aaa
imul
jns
pop
cmp
mov
cmpsb
popl
js
leave
jns
or
repz
jb
imul
pop
xor
mov
inc
inc
gs
pop
push
mov
jns
test
roll
addb
insb
dec
leave
push
shlb
jbe
mov
adc
in
loope
adc
fcmovne
in
loop
int3
iret
into
xchg
push
sub
shrl
jmp
or
rorl
lock
jp
neg
ficoms
call
xchg
xchg
mov
cmp
mov
or
mov
into
mov
or
cli
aaa
cli
mov
nop
shrl
mov
movsb
add
idivl
xor
test
inc
std
sbb
adc
mov
mov
jmp
jle
aaa
add
shrb
mov
mov
mov
cmp
dec
or
sti
in
sbb
mov
cmp
and
dec
rorl
ljmp
pop
push
add
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
dec
xchg
adc
inc
hlt
adc
dec
or
imul
jmp
inc
and
push
and
sub
in
lret
and
leave
push
adc
fdivrl
or
gs
or
test
or
insb
mov
test
aas
and
and
ds
xor
lret
jl
push
pop
sbb
fwait
mov
fs
or
xor
xchg
lcall
outsb
mov
out
pop
mov
adc
pop
mov
cs
out
add
mov
mov
test
test
pushf
sub
xchg
loopne
es
xchg
rorl
imul
test
in
jb
cmc
iret
xchg
adc
adc
insl
mov
rcrb
xchg
les
jmp
outsb
cwtl
movsl
imul
xchg
mov
scas
inc
mov
ret
xlat
xchg
add
loop
fs
mov
pop
pushf
xchg
arpl
cmp
aaa
cltd
push
xchg
mov
jae
stos
push
ret
mov
pop
and
xchg
int
mov
cwtl
jge
sbb
pop
stc
xor
mov
enter
fcomip
test
or
lods
in
iret
movsl
xor
mov
dec
jno
push
jge
ret
das
and
in
into
dec
mov
cmp
add
popf
xor
mov
cmp
or
fadds
outsb
lret
xchg
add
mov
lods
stos
movsl
stc
cmp
push
jmp
add
dec
vcvtss2si
cmp
out
inc
xchg
push
mov
test
nop
cmpb
ds
push
lds
mov
jnp
or
mov
sub
pop
adc
mov
pop
push
insb
cmpsl
inc
or
jb
nop
aaa
pop
push
and
jnp
int3
push
aad
test
or
or
fsubrl
sbb
mov
mov
jp
mov
cmpsb
xchg
push
xchg
test
dec
xchg
pop
lods
cmp
jbe
mov
inc
cmp
push
mov
out
jns
js
ret
out
sbb
sahf
in
js
mov
mov
sub
subl
repnz
mov
mov
sbb
loope
push
cmpsb
xchg
cmpsb
into
cmp
out
xor
mov
inc
sahf
hlt
cmp
mov
and
jle
cmc
nop
test
out
jb
push
lea
add
shl
mov
sub
sbb
lret
out
out
jns
jecxz
sbb
push
xchg
mov
xorb
sbb
jle
fs
scas
pusha
mov
inc
scas
pop
mov
popf
adc
push
lahf
fidivs
sahf
push
inc
lods
jp
in
mov
mov
sbb
jne
stc
or
dec
dec
inc
pop
mov
push
jp
sbb
pop
jb
test
mov
xorb
inc
lret
mov
ljmp
lods
cmp
dec
loopne
stos
lahf
push
or
int3
rorl
call
lods
pop
aam
mov
jo
lret
iret
mov
pop
mov
mov
xchg
stos
cld
mov
sar
leave
xor
movsb
out
gs
stc
jecxz
mov
outsb
push
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
inc
fcomip
push
sbb
xor
sbb
push
inc
xchg
sub
sarb
pop
jle
and
adc
int
stos
sbb
cmp
pop
push
jno
lret
les
ss
cmpsb
in
push
hlt
and
rcl
pop
xor
mov
or
pop
mov
cmp
dec
pop
push
push
lret
popf
add
out
mov
jle
xchg
ds
sbb
mov
xor
daa
js
lods
lock
loopne
mov
ja
cli
mov
and
lea
xchg
out
nop
adc
pusha
rcr
add
outsl
fs
aas
cld
pop
ret
pop
stos
shlb
sbb
and
push
inc
ljmp
push
jns
gs
fdivr
int
fwait
into
pop
jb
push
jmp
and
mov
iret
mov
inc
repnz
or
fxch
mov
jmp
sbb
sbb
pop
movsl
in
rcrb
dec
adc
sarb
mov
inc
ret
xchg
push
icebp
aaa
dec
mov
rcll
add
or
int
outsl
neg
add
lock
mov
orl
je
stos
push
xlat
ja
mov
fsubrs
and
arpl
popf
sbb
sub
and
pop
pop
jecxz
xor
dec
movsb
cmp
inc
sbb
cmp
jnp
popf
andb
arpl
cmp
jmp
lret
sub
or
jecxz
mov
xlat
sbb
xchg
push
mov
cmpsl
mov
clc
xor
cli
mov
adc
mov
mov
sub
mov
dec
xchg
iret
incb
and
cmp
xchg
or
in
xor
dec
jle
push
sub
inc
outsb
data16
xchg
or
stos
xchg
dec
lock
outsb
scas
out
adc
jo
push
and
ret
jns
mov
outsb
dec
sub
pop
and
xor
in
pop
jb
lock
shl
pop
dec
fdivrs
or
pop
out
rclb
inc
cmpsb
flds
inc
lret
loop
nop
sbb
ret
test
sub
pop
nop
and
jbe
iret
cmpsl
das
sbb
in
shr
daa
pop
mov
push
popf
lret
movsb
mov
or
and
pop
into
mov
int
cmpsl
or
jmp
push
push
in
loopne
out
cltd
xlat
sub
out
xchg
cmpsl
pop
bound
es
or
outsb
adcl
dec
repnz
sub
mov
aad
pop
xchg
cmp
inc
insl
adc
mov
arpl
xor
mov
sbb
repnz
das
mov
movsb
cs
mov
div
xor
mov
jmp
test
ds
cld
sbb
jno
out
daa
cmp
out
xchg
sub
nop
loope
and
add
mov
lods
add
push
scas
push
leave
jp
subl
jbe
mov
xor
lret
loope
inc
cli
mov
js
inc
adc
push
sub
push
movsb
mov
lock
mov
fisubrs
xchg
insb
xor
dec
daa
push
or
inc
xchg
push
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
push
xchg
mov
xor
sbb
mov
push
jae
popf
and
mov
bound
imul
jg
sbb
inc
test
mov
xchg
mov
or
iret
adc
dec
pop
rclb
decb
push
adc
mov
cmp
mov
adc
add
mov
scas
xor
cmp
mov
sbb
in
inc
xchg
dec
orb
push
daa
enter
vcvtsd2si
out
in
je
sub
fstpl
add
inc
jo
fninit
and
mov
sahf
and
cmpsl
ffree
enter
int3
xor
addr16
cmp
jge
and
std
or
push
jnp
jle
ss
inc
adc
xlat
cmp
xor
mov
mov
sbb
jmp
cmp
jecxz
inc
cmpsl
mov
adcb
sti
jne
filds
mov
adc
in
and
cld
dec
fisubrl
add
mov
jle
into
push
arpl
fiadds
lcall
xchg
shlb
sbb
cltd
jg
movsb
mov
rclb
out
imul
push
pop
loop
movsl
inc
sbb
pop
mov
clc
cmp
mov
add
pop
cmp
enter
jbe
pop
dec
sbb
or
dec
cmp
bound
aas
jo
clc
repnz
sub
repz
call
insl
or
cmc
xchg
adcl
xchg
xchg
jge
or
xor
adc
and
add
movsl
dec
and
ja
arpl
mov
add
pusha
popa
out
xchg
mov
push
cmp
jns,pt
adc
je
cmpsl
mov
aad
ljmp
mov
or
push
cs
pop
es
stos
loop
das
out
mov
cmp
adc
es
enter
pop
adc
or
jp
mov
enter
sub
scas
xor
sub
sub
lods
mov
std
enter
popf
adc
push
push
enter
adc
ss
xor
cmp
inc
pushf
pop
ret
pop
mov
pop
bound
or
mov
and
or
dec
std
mov
jmp
call
dec
mov
mov
movsb
aad
stos
popf
jbe
hlt
adc
cmp
mulb
stc
mov
lock
cmc
jp
cmp
mov
fiadds
daa
imul
or
cmp
leave
stos
mov
out
jle
cmp
sub
xchg
sbb
gs
add
test
inc
pop
ret
rcrb
out
test
or
daa
lea
sahf
mov
sbb
ljmp
push
add
insb
mov
das
mov
ficoml
fiaddl
add
or
andl
pop
arpl
xchg
ret
gs
mov
mov
pop
push
leave
jno
stos
pop
clc
sbb
jo
loop
push
into
cltd
mov
mov
sub
cld
imul
lds
mov
xchg
mov
mov
lea
cmp
loop
xor
cmp
dec
xchg
ret
push
je
sbb
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
mov
jle
mov
sbb
xchg
xor
jmp
pop
fcompl
xchg
mov
sub
mov
ret
test
sbb
stos
das
lcall
scas
xor
push
cmc
pop
test
out
or
aam
aas
mov
mov
sub
test
cltd
and
std
inc
pusha
imul
imul
push
testl
aaa
cmpsb
mov
sarb
aas
xchg
insb
mov
mov
xorl
aas
sbb
popf
sub
lds
loope
cwtl
pop
pop
mov
push
dec
push
mov
ja
test
lock
mov
sbb
pushf
adc
adc
shlb
mov
adcl
xchg
ss
les
xor
arpl
jno
jbe
jbe
push
mov
test
xchg
lret
push
pop
jb
jle
jnp
dec
push
dec
sub
frstor
mov
sarb
hlt
repnz
mov
sqrtps
adc
sbb
inc
cmp
and
lods
icebp
mov
push
cmp
adc
and
pop
into
das
inc
ljmp
pop
xor
sahf
mov
loopne
mov
scas
loope
or
jle
push
jp
pop
jne
imul
or
cmpsl
adc
sbb
call
mov
fdivrl
fidivrl
adc
int3
push
sub
scas
dec
nop
mov
pop
inc
in
daa
mov
imul
xor
inc
cmp
pop
jne
push
and
xchg
inc
call
insl
fsubs
sar
popl
adc
xor
adc
add
std
ljmp
es
jl
mov
fisttpl
mov
rep
loopne
xor
iret
psubw
mov
out
lea
int3
bswap
sub
dec
pushf
lcall
mov
push
ret
in
sub
cld
mov
xchg
xor
push
fdivs
xchg
lds
jae
jbe
lahf
or
cmp
cmp
sub
pop
push
mov
pop
pop
je
fnsave
xchg
cmp
pop
sub
arpl
jle
inc
cmp
inc
mov
pop
mov
inc
push
push
fstps
stc
fistpl
fsubs
notl
xchg
mov
xchg
or
xchg
nop
mov
add
bound
fbstp
lret
mov
mov
jne
lcall
out
lret
dec
inc
mov
ror
dec
hlt
dec
and
inc
sub
cltd
inc
cmc
mov
xchg
jl
jge
xchg
call
inc
xchg
cmp
sbb
es
cmp
je
jl
pop
mov
dec
mov
or
jge
repz
pop
mov
push
pop
ja
ljmp
cmp
lret
push
lret
inc
cli
inc
pop
mov
pop
mov
mov
ljmp
ljmp
mov
inc
or
aam
lods
sub
sub
pop
push
push
sbb
sbb
sub
xor
xchg
dec
movsb
jns
sub
in
mov
shrb
xchg
lods
sub
push
push
das
push
aas
pop
pushf
in
pop
leave
or
std
pushl
and
ds
iret
and
outsb
aas
mov
add
incl
add
mov
insl
ret
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
and
loope
sbb
xor
sbb
shlb
mov
pusha
mov
out
jmp
xor
mov
lock
cmc
add
inc
aas
lea
lods
push
adc
addb
cmc
pop
cmp
inc
call
pop
lods
inc
pop
xchg
mov
cmpsb
scas
insb
push
dec
out
inc
js
push
push
jnp
ficompl
out
movsb
int3
fcompl
jge
xchg
test
shlb
subb
das
stos
std
sti
movsb
jg
shrl
push
sbb
and
loopne
cmpsb
loopne
ja
popf
xchg
xchg
jge
lret
lahf
or
mov
inc
in
push
cmp
xchg
push
sbb
xlat
cmp
pusha
pop
xor
test
ljmp
push
cmpsl
lods
jnp
push
xchg
mov
pop
dec
jns
cmp
sub
and
cmp
js
sarl
out
mov
xor
push
ja
add
cmp
xchg
push
dec
cmp
fwait
dec
std
fnstenv
arpl
xchg
sarl
xchg
pop
ret
lahf
and
mov
and
jg
loop
jno
scas
mov
mov
mov
daa
shl
stos
sbbb
cmp
push
cld
fucom
adc
lds
hlt
arpl
inc
push
test
lds
xchg
movsl
xor
mov
jns
sahf
pop
add
lahf
lods
mov
pop
rcrb
and
mov
loopne
dec
outsl
xchg
sbb
insl
sbb
xor
test
xchg
inc
test
push
lcall
stos
enter
out
insl
aad
add
icebp
pusha
jge
dec
aaa
movsb
xor
push
and
orb
xor
push
pop
loopne
pop
cltd
popa
in
ficoml
and
add
pop
stos
jo
jne
addr16
xor
or
imul
jo
pop
or
pop
lahf
lods
aas
mov
sbb
out
sahf
stc
cwtl
pusha
orl
loope
push
mov
repz
push
adc
push
outsb
xchg
xor
mov
aaa
push
jge
xor
and
std
mov
push
xor
xchg
out
lcall
jge
inc
daa
in
cmp
ud1
jg
movsb
negl
sbb
out
pop
out
or
nop
xchg
inc
ja
xchg
outsl
and
xchg
push
mov
test
outsl
sub
rcll
sub
roll
ret
cmpsb
and
pop
xchg
ljmp
cli
mov
adc
lahf
lea
xchg
sahf
push
out
mov
popf
mov
mov
ja
cwtl
mov
shrl
push
inc
arpl
aad
ret
pop
movsb
imul
jl
add
pop
cli
mov
inc
jns
cmp
inc
or
daa
mov
in
and
lock
enter
mov
shrb
mov
popaw
and
outsb
sub
mov
mov
push
pusha
cs
in
adc
pop
push
sbb
out
jmp
pop
xor
cmp
inc
test
lods
repz
sbb
out
xor
rcr
xor
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
pop
in
lret
jo
stos
sbb
test
mov
xor
or
and
cmp
rcll
cmp
push
lret
mov
maxps
jle
mov
mov
inc
add
hlt
or
and
lahf
push
lds
sub
jns
es
xchg
stos
add
test
xchg
icebp
orl
dec
mov
dec
ret
lods
fcmovne
sbb
cmpsb
or
xchg
pop
push
fs
xchg
cmpsl
jae
test
loope
rorb
pushl
and
push
popa
sub
adc
mov
incl
fisubrl
xchg
mov
mov
adcb
xor
push
xchg
setp
pop
rcrb
clc
jp
ja
shr
loopne
rcrb
test
sbb
add
test
or
add
or
pop
add
push
gs
in
insb
fwait
out
mov
test
push
xchg
repnz
insb
sub
inc
addl
add
ja
sarl
jae
adc
sbb
push
mov
sub
in
jnp
packuswb
adc
sub
scas
adc
rolb
xchg
ljmp
in
test
xor
dec
pop
xor
mov
push
orb
stos
js
fistpl
push
sub
dec
mov
fwait
mov
int
cs
inc
lcall
je
pop
leave
dec
xchg
lock
cwtl
or
or
mov
aam
sbb
xchg
pop
adc
jmp
sbb
clc
push
aam
jecxz
lods
mov
mov
and
shr
mov
xchg
pop
data16
lahf
pop
add
xchg
shr
mov
sub
and
jl
ret
xor
xor
jecxz
inc
jle
bound
out
fs
push
jae
and
cmp
sub
out
xchg
xor
pop
adc
cmp
sbb
xchg
pop
mov
lock
xor
and
jg
mov
mov
mov
and
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
or
sub
xor
cmovnp
and
out
xor
inc
cmp
arpl
arpl
push
lea
push
dec
xchg
iret
push
movsb
call
pop
or
or
seta
mov
ror
addr16
mov
sbb
cwtl
in
cmp
out
mov
jl
outsl
xlat
aam
int
mov
popa
or
popa
stos
dec
xchg
hlt
fs
imul
imul
ss
call
xchg
inc
lret
sub
mov
fldcw
movl
add
incb
or
push
mov
sub
cld
xchg
pop
call
jecxz
adc
lea
cmp
and
ljmp
add
int3
std
dec
jno
mov
movsl
sbbl
dec
mov
pop
dec
sub
icebp
popf
sub
leave
pop
test
lret
xor
cmc
cld
imul
lcall
sbb
jae
add
in
mov
pop
sbb
and
call
sti
xchg
idivl
aam
ret
test
rcrb
pop
cmp
insb
loope
cli
outsb
jo
or
push
push
dec
sbbl
xchg
inc
stos
pop
or
xchg
in
mov
cmp
push
jno
mov
mov
cwtl
stos
cmp
js
mov
sub
inc
mov
pushf
inc
xchg
pusha
pushf
jnp
hlt
mov
movsb
or
aas
out
pop
mov
fmul
xchg
out
inc
sbb
test
mov
jp
outsb
xchg
clc
pop
inc
imul
movsb
mov
fwait
sbb
dec
sbb
sub
or
mov
dec
push
out
pop
in
stos
or
push
outsl
fistpl
out
jne
int
jns
push
fstps
bound
daa
addr16
mov
mov
adc
test
jns
inc
xlat
pop
mov
push
jle
rcl
inc
into
mov
xchg
xchg
outsb
icebp
arpl
mov
pop
pop
cmpsl
xchg
ja
inc
or
push
adc
pop
mov
call
push
lock
push
jmp
sub
and
jb
push
stos
nop
fnstsw
mov
sbb
sahf
es
insb
push
push
xchg
mov
mov
stc
dec
bound
fxch
sub
adc
fnstsw
mov
dec
dec
push
mov
mov
lock
sbb
mov
outsb
dec
shll
mov
pop
outsb
dec
into
sbb
and
insb
dec
inc
jg
dec
push
andl
pop
xchg
mov
mov
lret
sbb
push
out
mov
negb
test
data16
sub
pop
adc
sub
cmpsb
arpl
jecxz
adc
fwait
adc
xor
leave
nop
xor
jl
inc
adc
jns
repnz
movsl
shrl
loopne
scas
sub
hlt
inc
sbb
and
mov
insb
cmp
bound
sbb
leave
das
mov
push
push
and
cmpsb
mov
outsl
dec
cwtl
mov
add
dec
sbb
add
xor
xor
cmc
imul
pop
cmpsl
aad
mov
xchg
pop
mov
mov
sbb
push
push
mov
mov
xchg
clc
insb
out
pop
cs
aas
add
and
pop
pop
leave
dec
cmp
insl
adc
in
sahf
mov
jecxz
push
inc
test
push
mov
mov
iret
cmpsb
shl
add
mov
dec
loop
mov
add
or
std
lahf
dec
cmpsb
push
iret
enter
add
scas
icebp
pop
aaa
xor
and
pop
in
xor
cmovs
stos
cmp
mov
lcall
jae
inc
push
mov
push
movsb
inc
testl
mov
icebp
xlat
repnz
jbe
jp
jge,pt
out
popf
into
inc
sbb
sub
cmp
mov
mov
dec
xor
fdivl
outsl
xlat
int
sub
cmp
mov
mov
popf
shrl
xchg
mov
jp
mov
push
mov
mov
xchg
nop
enter
stos
dec
out
shlb
mov
lret
mov
enter
test
adc
lods
adc
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
test
adc
sbb
pop
sub
outsb
push
jb
push
jg
fdivs
xchg
dec
and
fs
popf
decl
movsl
push
add
pop
mov
add
fs
jmp
fiadds
mov
lock
ficomps
adc
rolb
cs
repz
inc
lret
nop
push
jne
push
push
sbb
mov
and
dec
lods
pop
dec
jmp
jo
and
mov
mov
mov
xorb
pop
push
inc
push
lcall
pushf
ret
push
xor
daa
daa
sbb
je
bound
cltd
data16
mov
lret
cmpsb
dec
aad
imul
pop
sbb
movsl
or
or
push
push
mul
outsb
jae
or
aaa
dec
add
adc
std
push
loopne
jb
sub
sub
jne
cmpl
xchg
decl
jne
jecxz
aas
popa
repnz
cmpl
sub
icebp
stos
loopne
sbb
in
ret
jmp
add
push
dec
in
std
pop
xchg
mov
testl
jbe
rcrb
repz
daa
frstor
mov
leave
inc
imul
int3
ret
sbb
push
mov
ljmp
and
jmp
lods
ret
lock
imul
lea
fiadds
add
xchg
fwait
std
sub
adc
es
push
adcb
inc
mov
pop
inc
stos
call
and
push
inc
in
and
add
iret
shl
jl
sbbb
push
dec
xchg
mov
mov
loop
mov
lock
repz
rcrl
cmp
mov
sti
push
mov
dec
fiaddl
jle
push
mov
mov
imul
cmp
inc
xchg
adc
push
push
or
push
test
cmp
js
jbe
sahf
mov
addr16
jbe
test
call
fistpl
or
mov
out
loop
mov
outsl
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
fistl
jle
cwtl
sbb
test
pop
in
stc
sub
adc
add
test
lea
aas
insb
xchg
sub
int3
push
movsl
aaa
scas
mov
sub
mov
pop
leave
jle
fisubrl
ss
sbb
mov
or
fnstcw
mov
fcoml
pop
das
std
cmp
xor
jo
daa
aam
mov
push
loope
scas
mov
pop
push
jne
movsb
jmp
repnz
imul
pop
mov
push
andb
mov
xor
push
jne
std
icebp
xchg
loope
loope
imul
push
repz
insl
push
jge
jmp
scas
shr
push
insl
jnp
daa
jecxz
cltd
jle
sti
cltd
icebp
mov
nop
dec
mull
ret
sub
fldl
or
inc
in
add
sbb
jae
sub
in
rcrl
lods
xor
xchg
scas
sbb
dec
pop
rorb
enter
xor
sti
mov
mov
xchg
sbb
and
sbb
mov
js
enter
pop
xchg
insb
jmp
scas
push
in
popa
int3
adc
daa
dec
or
in
xchg
or
sti
lods
insl
fstpt
pop
mov
mov
movsl
mov
incb
pop
mov
push
add
and
push
cs
repnz
xor
push
ljmp
adcb
pop
or
js
mov
xchg
xchg
lods
out
mov
call
je
mov
jg
daa
fucomip
mov
insl
pop
ljmp
adc
int
ret
xchg
push
push
int
call
arpl
cmp
sub
je
fnsave
xor
in
pop
or
insl
scas
xchg
dec
loop
iret
dec
or
fucom
jecxz
jmp
jg
inc
aad
jnp
mov
rcrb
mov
mov
pop
das
lods
mov
cmpsl
mov
jns
rcll
pop
dec
mov
shlb
aas
push
xchg
mov
mov
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
mov
notb
sahf
mov
cltd
cmpsb
loop
inc
mov
inc
jle
mov
mov
jmp
jp
enter
repnz
push
xor
mov
mov
enter
fwait
aas
mov
jo
lods
jns
rcll
adc
ljmp
xor
or
icebp
xchg
jbe
inc
pushf
sti
cmpsl
jle
out
sbb
mov
jo
jne
sub
jecxz
in
push
xchg
iret
adc
enter
sub
stos
push
gs
js
mov
les
lcall
sahf
adc
dec
push
scas
add
into
adc
hlt
hlt
xor
std
lcall
jge
inc
cwtl
cmpsb
inc
std
repnz
mov
mov
test
mov
xchg
cmp
call
add
mov
imul
mov
jae
iret
cwtl
aad
daa
in
cli
push
xor
test
push
fiadds
gs
and
xchg
je
cmpsb
imul
sub
adcb
adc
mov
sahf
dec
clc
adc
shll
into
inc
sbb
push
cli
sarl
push
arpl
outsl
es
xchg
xchg
xchg
jno
lret
sub
aas
mov
lea
dec
or
fdivs
xchg
repz
cld
dec
aaa
and
push
cmpsb
cmpsl
sub
jecxz
dec
pop
mov
fldl
sbbb
out
xor
gs
jl
jnp
js
in
add
aas
xor
xlat
cmp
and
in
pushf
aaa
adc
sbb
pop
mov
mov
into
int
movsl
push
pop
pushl
stc
mov
mov
jmp
jb
fldt
mov
insb
and
lods
leave
jnp
cmp
mov
fbstp
cltd
fidivl
je
cmp
mov
xor
orl
lods
sahf
fdiv
faddl
fxch
lea
jg
cmpsl
hlt
leave
in
xor
mov
add
pop
mov
arpl
and
jb
sbb
insl
mov
icebp
mov
xor
or
jmp
push
and
mov
stos
pop
nop
sbb
test
out
sub
adcl
adc
clc
fisttpll
jmp
enter
sbb
dec
and
loope
shlb
fists
pop
insl
xchg
xchg
je
mov
pop
out
inc
xchg
xchg
das
loop
decb
xor
movsb
sti
in
or
pop
mov
pop
inc
sub
rcr
fs
test
ret
call
outsb
ror
pop
stos
pop
daa
mov
pop
dec
lods
stos
cmp
lret
fbstp
sbb
push
jbe
or
pop
mov
sub
cmp
lret
loopne
lods
sahf
pusha
fwait
sub
mov
pop
push
xor
push
and
int
cli
dec
test
inc
ljmp
test
cs
lret
dec
cmpsl
push
pushf
xchg
dec
mulb
dec
loope
inc
fisttpl
and
cs
xor
xchg
aad
cwtl
mov
jecxz
pop
inc
sbb
sbb
lds
inc
fistpll
pop
scas
mov
xchg
imul
fcomps
data16
fdiv
sahf
test
icebp
sti
movsb
fldz
imul
jne
mov
jbe
test
arpl
push
mov
data16
sub
lahf
aaa
in
mov
xor
movsb
lcall
cmc
push
aas
popf
ss
xchg
jp
flds
and
push
add
popa
rcl
cmpsl
add
push
and
adc
xchg
push
add
gs
dec
jnp
mov
js
pop
adc
iret
outsl
inc
mov
call
int3
jecxz
mov
lock
pop
in
jge
fidivl
sbb
or
sti
negb
rcrl
lea
mov
movb
sub
sub
test
inc
out
gs
sbb
jge
icebp
dec
imul
lods
mov
ja
mov
or
lock
adc
jg
leave
jne
mov
push
je
jecxz
dec
sub
dec
ljmp
push
fimuls
push
pop
pop
stos
mov
mov
jp
cmpsb
or
mov
cmpsb
ret
rorl
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
cmp
test
xchg
mov
inc
jo
sbb
fwait
adc
mov
or
sbb
les
insl
adc
stos
int
push
cs
jmp
pop
stos
enter
icebp
sub
fs
adc
idivb
testl
jl
enter
scas
fdivrp
sbb
mov
dec
addr16
cmove
mov
iret
fisubrs
cli
push
aad
subl
jle
pop
and
jp
adc
ljmp
fldcw
xchg
aaa
in
sbb
stos
jne
jge
push
push
pusha
repnz
leave
xor
or
push
xor
popa
int
sub
add
push
xor
adc
outsl
les
cmp
inc
push
add
dec
insb
xor
sbb
jmp
pop
mov
jmp
testl
popa
movsb
jge
push
pop
int
xlat
test
fwait
xchg
out
xchg
jb
iret
jp
test
lret
ret
daa
jl
add
incb
mov
mov
add
outsb
mov
sub
adc
push
pop
gs
stos
loop
push
hlt
mov
pusha
inc
add
repz
repz
dec
cwtl
scas
scas
push
and
mov
push
xchg
roll
cmp
shlb
jno
mov
pop
sub
mov
adc
add
mov
sbb
std
push
insl
push
cltd
dec
sub
and
mov
mulb
pusha
jmp
dec
idivl
adc
jmp
fcoms
mov
push
lds
jo
das
fucomi
ret
arpl
in
sbb
jmp
shlb
xchg
lods
lds
fld
outsl
xchg
inc
std
repz
movsb
mov
mov
and
dec
syscall
xchg
or
and
mov
rcrb
or
and
ja
outsl
xchg
jp
pop
das
lea
std
pop
pop
addr16
mov
pop
pop
sbb
fistl
cli
mov
ljmp
add
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
jle
xchg
sbb
sbb
pop
xor
or
adc
jnp
mov
mov
dec
add
fs
test
push
ret
aaa
mov
and
iret
inc
lods
loop
cli
pop
out
lds
jb
test
push
popa
popf
cmp
push
pusha
xchg
fcomip
or
pop
lcall
xor
sbb
add
mov
mov
ror
sbb
imul
mov
std
xchg
mov
jns
xchg
and
nop
adc
ja
cmpsb
gs
fists
sbb
dec
into
scas
ss
ljmp
xorb
movsl
lds
pop
xor
pop
sbb
cmpsl
xchg
imul
lret
dec
push
push
test
in
outsb
scas
leave
bnd
sub
dec
push
mov
int3
dec
roll
adc
test
insl
pop
imul
ficoms
xor
push
mov
aad
mov
lahf
jne
js
cmp
int
dec
xor
shll
pop
rcrl
sub
xlat
push
cmp
xor
in
adc
dec
dec
in
inc
or
jne
inc
insl
or
out
mov
adc
std
inc
adc
mov
aad
leave
hlt
popa
xchg
mov
popa
pop
loope
stc
mov
cmp
pop
daa
mov
dec
inc
insl
dec
xchg
inc
scas
mov
add
xorl
mov
rolb
adcb
out
negl
lea
test
sbb
sub
hlt
dec
fidivrl
jae
sbb
sub
inc
pusha
aam
pop
cltd
in
fistps
inc
aad
loopne
and
ror
pusha
scas
nop
cld
inc
test
sub
and
mov
dec
or
adc
fwait
loopne
in
and
mov
shrb
jb
das
pop
xchg
mov
mov
imul
inc
jp
pushf
add
push
adc
xchg
icebp
inc
jg
in
pop
push
std
sti
js
jmp
int
lea
cmp
or
out
and
mov
add
inc
fisubs
loope
and
jno
cs
fnsave
mov
popa
fldt
clc
dec
inc
in
dec
in
mov
push
lods
inc
push
pop
inc
mov
xor
mov
mov
xlat
add
sbb
jl
mov
das
movhps
or
cmc
mov
mov
lods
daa
mov
fdivl
mov
xor
push
push
push
dec
and
enter
push
mov
inc
scas
jge
and
enter
js
repz
pop
test
out
ss
fdivrs
into
jns
adc
js
cmovne
or
notb
cltd
and
sbb
and
pcmpeqb
clc
mov
mov
xchg
or
test
mov
js
jecxz
adc
leave
sub
or
aas
pop
xchg
push
mov
mov
insb
add
add
jne
inc
sbb
pop
clc
push
pop
jo
sbbb
jns
sbb
xchg
cs
subl
jg
test
mov
pusha
push
idivl
pop
mov
and
iret
adc
or
bound
mov
jae
lock
mov
dec
mov
push
lret
dec
xlat
shlb
pusha
lret
repz
pop
mov
dec
sbb
aaa
clc
xchg
cmp
pop
adc
roll
cli
mov
jg
addr16
repnz
sbb
add
mov
loop
xchg
rcrb
xchg
gs
outsl
push
inc
pop
pop
jg
or
mov
inc
sbb
jg
scas
add
rcll
cmp
inc
dec
subl
inc
sub
in
rorl
push
adc
iret
cwtl
pop
add
sbb
adc
pop
jp
in
or
lock
jb
jns
bound
les
mov
cmpsl
fldl
lods
xor
xchg
mov
test
xchg
dec
repnz
in
pop
gs
mov
mov
dec
lahf
mov
addr16
stc
in
lahf
pop
pusha
mov
repz
fcoml
in
cmpsb
mov
scas
pop
adc
dec
add
add
jne
jle
leave
pop
popf
add
dec
push
cmpsb
mov
das
adc
inc
outsl
mov
sub
sbb
cmp
int
into
push
pop
aas
xchg
icebp
xchg
mov
out
xchg
repz
push
fstpl
mov
repnz
xchg
jne
lds
add
lret
mov
pop
xchg
mov
mov
mov
jmp
push
mov
lds
mov
fs
jg
leave
cmp
jno
cmp
sub
test
bound
test
push
shll
cs
mov
insl
cmpl
imull
mov
fucom
or
xchg
decl
or
jp
push
lahf
adc
lods
dec
fnstenv
inc
loope
mov
xchg
int3
rcrl
ds
inc
push
jl
jge
adcl
es
sbbl
test
call
clc
aam
test
dec
mov
dec
int3
mov
cmp
adc
push
mov
shll
cmp
pop
das
cli
cmpsl
mov
popa
nop
xchg
clc
fbstp
addr16
sbbb
push
xor
in
enter
fadds
or
adc
aaa
popa
pop
pop
sbb
cmpsb
lea
and
jl
mov
sti
test
push
sbb
les
fists
cmp
pop
inc
rolb
jbe
push
loopne
pop
fldt
pop
sub
inc
das
rol
and
sbb
xchg
enter
fisubs
pop
mov
cwtl
fidivs
repz
pop
and
pop
lock
std
and
xchg
aas
pop
push
cli
mov
push
push
push
and
xchg
and
stc
int3
cmpsl
mov
cwtl
mov
xlat
fildl
les
inc
push
add
jns
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
cs
mov
sub
mov
push
aad
clc
fucomip
mov
jl
std
cmp
in
push
xor
imul
pop
dec
call
xor
bound
lret
adc
js
aad
int
xlat
xor
ret
adc
or
mov
scas
push
and
aas
dec
push
imul
scas
mov
testb
or
and
add
sbb
icebp
or
xchg
mov
in
fidivrs
sub
mov
push
in
imul
mov
test
xchg
ret
movsb
cmp
pop
push
adc
divl
sbb
fdivl
mov
xorl
mov
std
aaa
mov
in
insb
lret
mov
pop
jo
jnp
enter
inc
mov
push
jl,pn
push
jmp
add
sbbb
xlat
lcall
popf
push
xor
int3
ja
inc
and
dec
outsl
jns
dec
push
mov
les
mov
inc
mov
mov
insl
movsl
xchg
mov
dec
xorl
jp
stc
js
push
pop
test
jp
mov
mov
scas
xchg
test
push
xchg
stc
mov
sbb
fstpl
push
movsl
inc
movsl
mov
xor
mov
mov
sbb
loop
daa
add
jnp
add
sbb
adc
lret
and
add
mov
sti
mov
shrl
xchg
lods
push
and
and
sub
push
pop
adc
mov
xor
add
add
jb
inc
loop
fs
nop
cs
xor
aad
push
xchg
mov
pop
inc
push
out
mov
sub
jno
cmpsl
mov
dec
or
addr16
mov
cmp
mov
rorb
pop
loope
clc
loopne
mov
add
push
test
sbb
shlb
sbb
and
pop
add
aas
push
inc
push
ss
inc
pop
test
cmp
popf
lods
stos
add
test
mov
aas
pop
cmovle
mov
fnsave
data16
repnz
addl
lock
daa
pop
pop
mov
mov
or
out
xor
imul
mov
xor
jo
aas
outsb
fistpll
dec
add
push
mov
rclb
std
xlat
ja
pop
jno
pop
or
pop
jmp
fisubl
inc
int
or
in
pop
rcr
lahf
jmp
mov
in
xor
add
test
popf
cmp
dec
xor
add
jl
add
mov
sub
xchg
push
or
lods
lds
loop
or
das
xchg
add
jmp
pop
cli
cld
loope
shrl
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
enter
push
pop
stc
mov
pop
lahf
lea
je
jns
stos
leave
clc
addr16
popa
or
xchg
or
sub
fcmovnu
movsl
setge
and
nop
popf
rol
xor
xchg
fsts
outsb
roll
pop
jle
test
xchg
cmpsl
dec
mov
pop
sbb
and
push
movsb
nop
sbb
xchg
xlat
or
bound
sbb
sbb
jno
mull
stos
push
mov
xchg
inc
xchg
sub
mov
jbe
cmp
addr16
xor
enter
or
push
ret
aas
es
leave
or
or
cmp
push
div
and
xchg
das
mov
jo
leave
cmp
pop
sbb
sub
mov
mov
pop
xor
lock
xchg
icebp
outsl
mov
jp
sub
gs
imul
add
inc
cmp
and
jecxz
dec
cs
outsb
es
pop
xchg
cmpsl
mov
pop
jmp
pop
cmpsb
inc
in
dec
add
or
xlat
into
adc
popf
and
clc
dec
mov
aam
aad
pop
scas
sub
in
pop
ss
es
insl
dec
pop
into
pop
sbb
jb
mov
inc
es
hlt
xor
insl
sub
cmp
mov
cmpb
inc
or
mov
push
shrb
mov
test
lret
mov
test
xor
sub
or
lods
das
ficompl
fwait
test
mov
mov
pop
sti
mov
cmpsb
arpl
fstps
lods
pop
fsubl
pop
dec
movsb
rcll
add
das
test
loopne
ss
out
mov
shll
cwtl
ljmp
push
loope
sub
xchg
jo
mov
popa
fdivrs
roll
mov
mov
lret
pop
inc
out
pop
in
mov
push
loop
jne
xor
gs
mov
loopne
hlt
inc
jno
and
sub
mov
clc
js
or
mov
and
les
mov
nop
std
cmp
lcall
pushf
imul
cmpl
add
ss
add
jecxz
out
icebp
mov
js
pushf
int
or
inc
mov
decl
je
inc
push
add
int3
cs
popl
xor
addb
mov
mov
leave
int
loop
aam
mov
xchg
jmp
loope
dec
push
pop
loope
fsub
jp
imul
and
test
movsl
add
inc
test
int3
sti
xchg
and
jns
adc
add
idiv
sti
in
xchg
aas
xchg
fmul
or
cmc
add
or
sub
clc
lods
loope
sbb
lock
shl
sbb
mov
ss
ss
repnz
jns
mov
xchg
xor
xor
and
or
pop
aaa
dec
push
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
mov
jo
insb
sbb
jns
sbb
push
add
sub
pusha
push
xchg
inc
cmpsb
xor
scas
jle
xor
inc
in
xor
lahf
notb
xchg
xchg
mov
sub
mov
and
and
out
pop
out
jae
push
pop
in
dec
das
in
mov
pushf
jo
pushf
push
dec
insb
lret
addr16
xor
and
and
mov
fnstenv
cmp
stos
cltd
push
dec
mov
xor
and
push
iret
ret
push
dec
js
mov
xor
push
and
lds
ficomps
out
mov
call
and
insl
test
popf
mov
nop
jne
mov
push
stos
clc
cmpsl
icebp
mov
fsubrl
push
xor
std
and
negb
cmc
jecxz
dec
cwtl
int
fsubrl
enter
cmp
jb
fldcw
test
or
rcr
push
jp
fcomps
daa
mov
xor
jbe
cwtl
nop
sub
in
jmp
mov
dec
jmp
call
and
rclb
sub
stc
add
inc
pop
dec
sub
inc
fchs
int
int3
xchg
sarb
add
mov
fptan
xor
mov
iret
and
testl
pop
dec
out
dec
fldl
mov
xor
pop
arpl
cmp
push
mov
lods
in
imul
xchg
and
cmpsl
in
mov
push
sub
stos
insb
fcomps
sbb
mov
cmpsl
addr16
sub
push
out
or
add
roll
jbe
lds
es
adc
and
ror
data16
fnstcw
cli
add
into
pop
lret
add
mov
inc
adc
testl
or
nop
test
sbb
iret
insl
and
rcrb
mov
xor
sbb
push
inc
dec
jmp
dec
shl
fidivrl
pop
mov
jge
imul
mov
imul
add
stos
cld
add
das
push
cmp
pop
push
sub
iret
cwtl
jg
in
divl
adc
sub
lret
xchg
mov
repz
ds
cmp
sbb
jo
int3
inc
mov
sub
data16
jne
lock
cmpsl
bound
and
into
adc
xlat
out
xchg
popf
leave
js
dec
ja
insl
inc
fs
inc
push
cli
not
rcrl
test
out
stc
sbb
fidivrs
or
and
ficompl
mov
xchg
outsl
cld
mov
pop
jl
outsl
fsubrl
fistpll
daa
adc
aas
pop
lcall
inc
data16
mov
shll
call
cmp
jmp
sbb
jo
daa
jnp
test
push
jle
aaa
bound
bndstx
ret
mov
mov
test
or
add
jp
push
imul
push
inc
push
dec
mov
dec
mov
sbb
mov
xchg
cmp
ret
pop
or
pop
mov
or
cmpsb
mov
cmp
add
or
cmp
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
shrb
mov
sbb
sbb
xlat
cltd
sub
loop
mov
lods
aad
mov
xchg
lcall
stos
iret
cli
outsb
pop
push
mov
inc
mov
sub
movsl
cmpl
cmc
cmp
cmpsl
or
gs
lret
lea
pop
mov
add
dec
in
xor
inc
or
jae
xchg
and
xchg
dec
int3
and
bound
insl
arpl
mov
xor
call
xchg
xchg
sbb
xor
call
dec
frstor
jnp
stos
imul
sbb
adc
lock
outsl
subl
dec
jl
mov
arpl
popf
mov
mov
repz
push
jecxz
pusha
mov
repnz
inc
cmpsl
pop
daa
push
loopne
jbe
inc
mov
jbe
jo
sarb
push
and
shl
pop
jge
lods
jbe
inc
out
lods
cwtl
in
lods
jecxz
andl
out
dec
push
mov
push
inc
repnz
cmp
fmul
mov
rorb
xchg
mov
pop
mov
push
data16
sbb
pop
jecxz
loopne
dec
push
mov
or
mov
dec
push
adc
inc
xchg
dec
pop
sub
pop
sbb
mov
lcall
mov
xor
cltd
movsb
xchg
test
jle
mov
iret
fsubr
pop
cmp
cld
out
push
sbb
push
mov
aad
push
mov
rorl
add
add
xor
mov
cmc
scas
call
xor
mov
pop
jo
aad
or
dec
out
and
loop
and
sub
push
inc
pop
xchg
mov
pushf
xchg
jb
daa
adc
mov
pop
out
lahf
jmp
mov
and
or
add
and
jecxz
cltd
jns
lods
jg
jno
sti
add
mov
mov
and
and
fimull
addr16
jb
dec
clc
pop
cmp
dec
pop
call
inc
sub
fistpl
mov
mov
xchg
loope
aas
ss
insl
mov
cltd
push
push
stc
push
xchg
pop
push
xchg
xchg
div
stos
lcall
adc
add
mov
jno
xchg
xchg
aas
into
mov
xchg
push
inc
mov
sahf
adc
mov
mov
pusha
xchg
jp
mov
fwait
and
outsb
pop
fiaddl
jge
dec
pop
arpl
rsqrtps
into
dec
das
mov
pop
cmp
out
add
fstp
jecxz
int3
jbe
sbb
repnz
lret
popa
mov
or
lret
jbe
call
jge
jno
dec
push
xchg
loope
aam
cltd
popf
adc
jns
int
repnz
aas
ss
add
xchg
cmp
icebp
cs
mov
aaa
lahf
out
sub
jo
ds
sub
icebp
and
xchg
jp
inc
mov
push
shr
jo
xor
sbb
je
mov
cmpsb
jg
or
fnstcw
mov
adc
fadds
mov
out
fmuls
incl
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
cmc
cmp
pop
sbb
jns
sbb
push
sub
xor
movsl
or
dec
jle
xor
inc
std
and
flds
pop
into
inc
dec
xor
lock
or
mov
popf
test
aas
sbb
sbb
inc
das
xchg
mov
bound
lods
jle
cli
out
ret
add
or
jmp
push
and
mov
and
adc
shlb
xchg
test
test
or
jge
gs
ja
ja
aam
and
pop
cs
and
mov
push
mov
dec
inc
test
push
mov
ljmp
lret
ret
xchg
inc
andl
push
adc
jmp
ret
push
xchg
inc
xchg
pop
nop
push
data16
pop
cmp
jns
cmp
xchg
leave
aas
lahf
in
aad
cltd
ret
add
mov
pcmpgtb
mov
sbb
or
pop
lahf
adc
ljmp
pop
and
insl
sbb
jae
mov
mov
std
sbb
mov
dec
lods
add
cmp
xor
lahf
sbb
ss
inc
pushf
in
jecxz
push
lods
pushf
or
adc
psrlw
jp
pop
sbb
mov
and
cmp
arpl
in
ret
dec
xor
xchg
xor
imul
mov
pop
cmc
in
movsb
adc
outsl
mov
xor
leave
dec
mov
psubd
xlat
fidivs
leave
inc
sub
dec
ss
sahf
xchg
mov
sub
xor
ss
mov
push
mov
pop
ss
sub
dec
pop
jl
mov
adc
es
bound
lock
mov
sbb
dec
sbb
mov
js
or
cmp
rcrl
cmc
in
push
test
cli
lods
mov
in
in
in
imul
push
lret
gs
jb
mov
subl
nop
sbb
movsl
addb
xchg
enter
clc
push
cli
dec
xchg
testb
lock
imul
xchg
push
repnz
mov
pop
push
ljmp
pushf
movsl
div
cmpsb
jle
int3
cli
mov
add
mov
lds
inc
pusha
inc
add
ljmp
xchg
pop
stos
fld
xchg
js
xchg
add
insl
add
pop
insl
mov
xchg
xchg
pop
lcall
add
cld
sub
mov
pop
data16
lds
fcmove
add
xchg
cmp
and
aad
cmp
dec
sub
push
push
scas
cmp
mov
dec
insl
fsubrs
int
sarl
and
shlb
lcall
jmp
ret
sub
or
js
push
cli
jo
cmc
pop
xor
shr
dec
lret
inc
aas
nop
leave
sub
xchg
xlat
or
pop
lea
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
cmp
sbb
sbb
aad
dec
pushf
enter
jnp
lods
movsb
icebp
or
jecxz
cmc
jno
inc
add
or
sub
cwtl
lcall
cmpsl
inc
push
xchg
cmp
push
add
dec
sbb
jecxz
xor
popf
push
dec
sub
addr16
push
mov
xlat
pop
mov
fcomi
and
jb
pop
andl
or
test
iret
mov
int
and
out
cmp
out
int
pop
jb
jne
cmpl
lods
mov
daa
clc
inc
and
jl
xor
jp
decl
and
or
mov
bound
push
sbbl
mov
int
push
push
inc
pop
call
push
test
cmp
test
scas
popa
mov
push
xchg
mov
pop
dec
jo
aam
insb
movsb
sbb
cmc
inc
push
xchg
or
jmp
cmpsl
aas
push
xchg
dec
imul
mov
push
push
push
mov
sub
mov
mov
mov
mov
adc
jecxz
mov
jo
fstp
in
loopne
hlt
fcmovnu
shrb
xor
fiadds
cld
jl
in
sbb
aaa
or
and
in
adc
push
test
stos
sbb
ret
hlt
push
fiaddl
add
jecxz
dec
loopne
fwait
dec
mov
jnp
sub
lods
ljmp
rcrl
add
mov
mov
bound
push
bound
ss
and
sub
cltd
orb
adc
pop
cli
mov
xchg
cwtl
arpl
sub
cmp
ja
xchg
sahf
rolb
mov
inc
mov
fs
xchg
lret
je
popf
std
stos
dec
mov
out
sbb
lods
fiadds
xchg
pushf
dec
jp
imul
mov
lcall
mov
int3
aad
pop
add
push
mov
xchg
cwtl
xor
mov
je
shr
loopne
lcall
inc
adc
notl
sbb
in
loope
sbb
add
into
inc
lea
or
push
mov
add
add
xchg
lcall
cmpsl
pop
nop
sub
pop
daa
jl
jecxz
sbb
cli
pop
out
lods
stc
dec
das
sahf
jge
ljmp
mov
lock
push
cli
dec
mov
sub
jb
xchg
test
jbe
ficoms
sbb
stos
lods
pop
mull
mov
dec
pop
jb
mov
fst
dec
sub
fdivrs
mov
xor
test
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
aad
jne
sbb
and
sbb
pop
push
mov
frstor
out
mov
call
push
xchg
insb
fdivrl
daa
insb
pop
nop
pop
cs
jmp
sbb
xor
add
adc
fbld
orl
in
sbb
sub
xchg
dec
adc
daa
aad
dec
lret
test
push
cmp
pop
mov
mov
sub
mov
jae
pop
push
dec
jb
adc
jb
jp
cs
lahf
adc
aad
cmpsb
fisubrl
dec
iret
mov
mov
sbb
sbb
dec
test
sbb
push
jle
adc
cs
std
dec
sahf
mov
icebp
pop
cld
mov
xchg
popa
push
or
mov
loopne
lods
xor
jmp
test
push
mov
mov
aam
sbb
pop
leave
hlt
mov
aad
push
sbb
ret
dec
xor
pop
ds
std
loopne
jp
ret
sub
popf
rorb
sub
xor
lods
in
popa
repnz
jbe
mov
mov
scas
int3
cmc
push
lcall
push
repnz
push
xor
scas
out
xchg
out
subb
adc
inc
sarl
pop
inc
data16
lret
pop
in
mov
pop
mov
test
jmp
inc
cld
sub
sub
pop
call
lret
andl
pop
sahf
mov
and
jmp
xor
dec
push
pop
and
movsl
add
cmp
sub
dec
xchg
fwait
popa
lock
pusha
jb
xchg
stos
aad
pop
in
fisttpl
jmp
push
pop
enter
fs
div
dec
ljmp
ret
popa
nop
leave
mov
adc
test
mov
cli
push
out
ja
shl
and
daa
fs
popa
fistpll
outsb
inc
xchg
xchg
dec
sbb
movsb
adc
es
push
scas
pop
ror
dec
aaa
iret
dec
movsl
xor
lds
mov
loope
dec
test
mov
cmp
xlat
mov
rclb
mov
mov
push
cmp
out
xchg
icebp
fwait
mov
jle
mov
stos
iret
dec
jecxz
cli
fistpll
mov
add
mov
xor
arpl
jae
ret
inc
in
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
aas
sbb
dec
sbb
scas
adc
sbb
leave
and
dec
push
cmp
xor
mov
test
or
icebp
mov
lahf
xchg
pop
cmp
xchg
xor
dec
dec
or
xchg
inc
mov
mov
push
xchg
push
push
xor
icebp
call
imul
movsb
adcl
inc
addl
mov
mov
xor
xor
inc
mov
pop
mov
repz
scas
je
ds
mov
insl
push
or
notl
or
fldenv
or
pop
repnz
mov
xor
mov
pushf
lods
popf
pop
pop
testl
dec
lock
sbb
mov
rcrl
and
stos
jg
out
mov
loope
pop
fadd
mov
cmp
push
inc
call
mov
iret
movsb
jle
xor
fwait
roll
push
shll
rcr
add
jecxz
dec
shlb
cmp
loop
js
lock
and
ljmp
mov
adc
cs
scas
mov
pop
push
and
insl
push
push
pop
or
push
add
pop
stc
dec
fcmovne
sbb
pusha
cwtl
pop
js
lahf
mov
loop
mov
adc
push
mov
fsubrs
dec
enter
inc
fwait
adc
jnp
lds
fnstsw
iret
icebp
jecxz
test
sahf
push
jae
mov
sahf
aas
mov
popl
mull
mov
pop
loope
insl
jmp
jno
jae
stc
hlt
pop
cmp
mov
imul
xchg
outsl
sahf
sbb
cs
test
inc
ret
iret
jmp
or
lods
sti
add
inc
std
fisttpll
stc
jle
cmp
lods
ljmp
and
jno
outsl
stos
pop
cmp
adc
xchg
outsb
aaa
push
pop
pop
sbb
filds
mov
mov
push
jno
add
sbb
inc
pop
nop
xor
sub
out
add
cs
fiadds
xor
cs
cmpsb
mov
push
sub
mov
pop
and
aad
fldt
orl
aas
shlb
sub
push
ret
xor
movsl
jno
mov
pop
mov
or
cmp
add
inc
pop
test
ret
adc
mov
push
out
in
addr16
inc
cmc
fs
repz
xchg
adc
lcall
cmpsl
jb
dec
jmp
cs
data16
push
or
xor
mov
dec
in
out
and
scas
or
addr16
add
push
mov
test
sahf
movsl
cmpsl
xor
insb
popl
mov
add
fstl
repz
adc
dec
in
xor
and
pop
xlat
dec
mov
int
push
push
ss
mov
iret
jb
cmp
or
push
push
pusha
xor
push
gs
ljmpw
pusha
mov
sub
cli
sbb
movsb
jb
cmp
ljmp
fcomp
negl
add
add
mov
popw
fldl
shll
pop
inc
sbb
add
cs
movsb
xor
in
lcall
pushf
pop
mov
pop
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
adc
jl
inc
sbb
scas
adc
sbb
int3
loopne
mov
lock
in
sti
adc
push
or
mov
std
and
dec
filds
push
sbb
or
fsubrs
and
or
aas
jno
lret
xchg
lea
xchg
test
sub
mov
xor
jg
xchg
or
rcrb
addr16
mov
repz
sahf
loop
dec
outsb
mov
jno
add
jnp
add
dec
shlb
jge
cmpsl
mov
xchg
jle
ljmp
stos
add
es
xor
mov
jge
jl
es
testl
mov
out
xchg
ds
dec
dec
cli
cmp
rcr
inc
pushf
xchg
xor
fisubrl
stos
push
test
lods
repz
test
leave
es
mov
or
out
mov
shll
cwtl
clc
dec
jmp
mov
inc
out
inc
cmc
inc
mov
test
mov
neg
shrb
add
leave
xor
xor
add
push
add
ljmp
jp
cmpsl
adc
inc
push
sub
xor
pop
dec
icebp
pushf
or
inc
stos
out
lret
jp
sahf
iret
fsubrs
jae
aaa
xchg
test
mov
ret
in
push
pop
adc
xor
sub
shlb
adc
push
sti
icebp
jnp
sbb
jnp
scas
push
pusha
mov
xor
mov
add
sub
clc
mov
pop
popa
out
testb
push
mov
into
dec
aas
in
pop
cs
xchg
push
bound
adc
cli
outsb
cmc
lea
dec
dec
fsubrl
mov
insb
xchg
fidivrl
lods
roll
lds
adc
push
std
mov
movsb
jmp
xor
inc
jecxz
add
cltd
loopne
test
ret
or
test
add
or
push
loope
xor
cmp
inc
js
shlb
int3
cwtl
lea
roll
mov
mov
imul
or
test
xchg
and
mov
xchg
leave
dec
out
nop
adc
out
into
jp
pusha
int
push
addr16
scas
or
mov
pop
cld
add
sub
mov
add
stc
inc
ss
sub
lret
xchg
testl
scas
in
jle
xor
sub
cli
daa
jle
mov
in
push
in
mov
int3
mov
loop
shll
outsb
ror
imul
mov
sbb
inc
inc
notb
jl
jl
sbb
mov
fdivrs
movsb
jno
sub
mov
sub
fs
fdivrl
pop
lds
sbbl
xor
pop
rcrl
test
mov
pop
dec
and
push
aaa
pop
or
xchg
scas
pop
out
pushf
into
lret
mov
and
outsl
mov
xchg
pop
or
ret
and
ss
lods
fisttpll
jns
dec
cmp
shr
mov
adc
pushl
xchg
push
sub
xchg
adc
sbb
inc
push
aaa
add
sub
sbb
orb
insl
orb
and
mov
xor
jg
mov
fwait
std
cmpsl
sti
pop
mov
dec
mov
adc
add
push
push
int
outsb
cmp
cmpsl
out
jmp
mov
aaa
cmp
leave
mov
sbb
scas
fildl
movsl
or
iret
imulb
ret
fwait
out
pop
add
in
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
aaa
fwait
jo
sbb
notb
sbb
and
mov
or
mov
inc
out
pop
jmp
sbb
je,pn
add
lods
push
daa
jns
ret
notb
aam
int
mov
push
xchg
inc
mov
ja
faddl
xlat
cmpsb
sub
scas
jne
jns
or
popa
jmp
in
and
rcll
and
push
lock
push
icebp
mov
mov
or
lahf
daa
push
loopne
fstp
js
xor
lods
bound
insl
and
sbb
fwait
jle
fldl
and
pop
jge
jae
xchg
cs
lcall
jg
mov
sbb
mov
imul
sub
push
xor
test
decl
jo
into
mov
inc
out
in
jecxz
cltd
mov
cs
loopne
xor
ret
ret
mov
mov
xchg
testl
pop
cld
push
jbe
mov
cmc
outsb
ja
sub
push
add
adc
iret
aaa
inc
cwtl
outsb
fiadds
jmp
sarl
xchg
ljmp
cmp
inc
dec
or
setne
push
push
mov
push
or
test
lret
lret
cld
fisttpl
push
lds
gs
pop
lea
push
pop
cli
sarb
push
cmp
xchg
dec
movsb
repnz
inc
negb
cs
repnz
aas
loopne
fcmovnb
mov
jns
lods
pushf
dec
movsb
adc
sti
pop
xor
cmp
xchg
outsb
aad
sbb
adc
dec
push
sub
pop
hlt
shll
push
sbb
xor
push
cli
rcrl
mov
jno
aaa
aad
adc
out
sub
mov
jne
add
lock
loope
js
stos
xchg
in
inc
mov
iret
sbb
xchg
sahf
mov
fwait
int3
jns
jno
xchg
les
jne
cltd
jecxz
jne
sbb
aam
dec
or
repz
jbe
pop
jnp
fstpl
adc
stc
fcmovnbe
jmp
test
les
fwait
jae
sbb
gs
and
je
orl
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
add
stos
mov
cmp
sbb
adc
sbb
dec
xor
or
sub
pop
cmpsl
sti
or
dec
cmpl
adc
pop
jne
daa
in
aaa
addr16
xor
push
imul
out
jbe
movsl
or
bound
mov
sbb
dec
and
pushf
lea
cs
test
popa
insl
fwait
dec
push
xor
sbb
dec
xchg
aas
roll
add
cli
andb
cmp
fiadds
xor
sbb
sti
pop
cmp
pop
data16
int3
and
idiv
mov
andl
roll
fstpl
adc
and
xor
frstor
cli
mov
mov
stos
mov
fdivp
adc
test
cwtl
fwait
xchg
sahf
lods
dec
mov
cmc
push
cmp
dec
add
mov
cmp
outsb
push
cmp
imul
pop
lahf
and
mov
push
or
cmpb
inc
jle
dec
dec
cmp
fisttpll
mov
or
mov
cmp
mov
and
mov
aad
movsb
cli
imul
ffreep
outsb
sub
xchg
call
xchg
jae
int3
inc
out
arpl
push
cmpsl
outsl
arpl
pop
sti
daa
test
pusha
lret
adc
subb
pop
pop
pop
in
lahf
icebp
and
sarb
xchg
push
push
aam
add
rcrl
lahf
rol
adc
fs
sbb
lret
outsl
fdiv
mov
aam
lret
push
mov
pop
sbb
imul
and
pop
xchg
sub
and
inc
loope
adc
mov
sbbl
nop
sub
push
jl
xor
cmp
jge
inc
pop
add
addb
push
inc
jbe
pop
gs
ljmp
mov
mov
and
sub
dec
mov
fwait
sub
xor
lock
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
imul
jle
sbb
notb
sbb
inc
xor
movsl
in
out
aaa
pop
dec
jns
ret
or
cmp
xchg
icebp
mov
or
and
mov
cltd
mov
or
push
mov
sub
adc
push
mov
call
in
gs
pop
mov
mov
jnp
push
in
and
cmp
insb
cmp
and
pop
pushf
cmp
cmpsb
xor
int
mov
sbb
sbb
fwait
mov
xor
call
xchg
cwtl
jo
mov
ja
xorl
cmp
pop
aad
mov
add
mov
sbb
mov
out
push
jae
sub
popf
adc
daa
imulb
repnz
testl
push
shrb
out
xchg
test
js
mov
mov
and
jns
xor
sbb
daa
push
or
inc
fsubrs
sub
imul
jno
out
jp
inc
xchg
sbb
jecxz
cmp
loopne
push
ret
sbbb
add
push
cmp
or
cmp
das
mov
fcmovnb
in
push
dec
lods
stos
shlb
inc
xchg
clc
or
addb
mov
sbb
notl
mov
int3
push
imul
fxch
pop
cwtl
cmp
lock
pop
sbb
out
push
pop
test
not
dec
scas
inc
jp
cmpsb
rolb
movsl
mov
mov
es
aaa
fcomip
push
movups
mov
shr
lahf
jo
ja
shrl
call
adc
push
lods
xor
shll
ljmp
jnp
add
pop
aas
push
push
pop
or
jo
mov
pop
nop
sti
sbb
insl
sub
cmpsb
bound
lods
push
ret
push
icebp
and
insb
jb
mov
inc
insl
cmpsl
iret
aas
xchg
mov
adc
ss
fdivrs
aaa
xor
push
xchg
shlb
mov
popf
xor
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
mov
jae
lods
jecxz
sub
mov
and
mov
pop
xor
outsl
or
or
push
jmp
in
jne
pop
fstps
jae
lahf
push
jae
dec
xchg
loope
cli
xor
fldt
add
jne
xor
mov
add
or
xor
fidivl
cwtl
sahf
xor
cld
mov
pop
push
jne
mov
jne
jns
in
cs
mov
pushf
sbb
cmp
dec
repz
leave
mov
ljmp
rolb
je
scas
dec
sbb
inc
mov
dec
stos
out
adc
aam
lods
imul
cmp
xor
int3
sbb
lds
cltd
or
call
ret
add
push
xchg
cmp
pop
xchg
mov
xorb
pop
xor
jp
ja
arpl
sbb
inc
pop
sbb
pop
pop
jno
sahf
aad
inc
jp
cmp
mov
test
std
cli
mov
bound
inc
lock
push
mov
stos
repz
mov
xchg
repnz
stos
sub
push
leave
decb
mov
jne
es
pop
mov
cwtl
sub
into
jns
cld
es
outsl
dec
cli
pushf
add
pop
iret
and
or
clc
shrl
mov
jns
mov
data16
push
cld
pop
push
pop
xor
stos
and
mov
gs
cmp
inc
nop
xchg
stos
faddl
cmp
push
fisubrs
cld
adc
adc
shr
inc
pop
mov
or
stc
dec
imul
movb
test
and
push
shll
lret
cli
jp
adc
std
in
inc
cmp
pop
xor
xor
adc
je
insb
jp
jle
arpl
imul
in
push
stc
mov
lea
shlb
mov
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
mov
sbb
mov
loopne
ds
out
shll
cmpb
mov
cld
adc
and
adc
aaa
push
lock
cmp
bt
nop
pop
shr
in
xor
inc
out
addr16
inc
rcrl
inc
ss
jo
mov
pop
adc
jnp
lcall
into
jnp
aam
je
out
mov
lock
js
xor
daa
shlb
and
inc
sub
xchg
les
cwtl
xor
sbb
frstor
movsb
lcall
loop
rorb
lds
xchg
push
or
out
mov
int3
mov
jecxz
xor
es
xchg
xchg
sub
adc
jg
mov
cli
andb
cltd
out
movsl
or
je
push
jae
scas
push
pop
popa
fidivl
cmp
leave
push
mov
insb
pop
or
adc
xor
inc
dec
aam
or
add
add
sub
dec
enter
sub
ret
adc
push
cmc
xor
in
cld
shl
add
mov
mov
jb
lds
in
mull
enter
fstpl
pop
les
fdiv
jmp
std
pop
imul
inc
xlat
pop
fcos
dec
andl
mov
and
outsb
int3
fbstp
dec
lods
test
enter
pop
pop
push
add
enter
test
mov
push
enter
movsb
mov
addb
popa
or
sbb
out
adc
mov
mov
lods
jae
inc
and
or
cmp
mov
and
jo
add
and
inc
pop
push
pop
cli
outsb
stc
pop
pusha
mov
addr16
adc
in
jle
test
push
and
lea
push
mov
mov
jmp
aaa
and
dec
mov
push
out
fcoms
push
sub
sbb
adc
sbb
mov
or
pop
loope
roll
sbb
mov
sub
lds
fptan
mov
repnz
js
loop
imul
pop
xchg
xor
popl
mov
pop
add
inc
sbb
movsb
cmp
mov
gs
notl
pop
es
outsl
or
pop
scas
xchg
add
je
jp
xor
test
adc
shlb
fwait
sub
stos
mov
aad
fs
pop
shll
andb
in
inc
jp
fnclex
pop
jnp
repnz
push
imul
jae
cmp
outsl
movsl
and
jp
xor
mov
je
jb,pt
pop
rcrb
faddl
stc
xor
out
jae
xchg
repz
push
loopne
jle
jne
ficomps
push
test
das
jge
es
nop
xor
testl
adc
pop
sbb
enter
pop
xchg
lahf
daa
fsubrs
lds
cs
xchg
ja
sbb
adc
packuswb
mov
mov
adc
pop
test
inc
fs
push
je
cwtl
iret
imul
push
pop
and
dec
into
movsb
mov
push
push
add
mov
in
sub
ret
rcrb
push
sahf
inc
int
out
sbb
or
gs
push
mov
arpl
and
xor
popa
xor
inc
mov
pop
and
sbb
mov
jmp
test
lahf
and
repnz
inc
mov
out
jb
push
lods
dec
scas
cmc
jge
inc
push
mov
inc
lret
push
sahf
lods
or
adc
movb
dec
dec
unpckhps
sti
add
lock
cmp
scas
scas
xchg
fldenv
push
addb
lcall
pop
pop
push
nop
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
xchg
adc
pop
add
dec
fdivrp
mov
jo
movsl
sub
out
std
lret
adc
es
xlat
sbb
sbb
inc
sub
and
push
int
push
or
pop
adc
cltd
cmp
xor
imul
nop
icebp
ret
mov
jg
iret
cmp
jecxz
leave
test
xor
jg
in
mov
gs
les
ja
es
jns
or
orb
inc
push
mov
outsl
stos
or
popf
jo
repnz
pushf
dec
fnstcw
loop
xor
aad
outsb
inc
sub
dec
add
arpl
cmp
call
enter
sub
inc
cmp
or
sub
rcrb
jo
sub
push
push
cmp
in
adc
lret
sub
mov
push
outsl
out
call
jns,pt
ljmp
and
in
xor
mov
addr16
cli
inc
insb
addr16
mov
mov
mov
jl
mov
out
es
aam
out
jp
add
xchg
ret
push
xor
rcl
scas
dec
popa
lret
add
and
xchg
xchg
pop
pop
sub
aaa
xor
dec
jnp
loopne
mov
and
mov
idivl
fisubrl
inc
dec
xchg
or
push
mov
cmc
sub
sarb
sub
sbb
pop
sub
clc
stos
mov
xor
ljmp
outsb
inc
movd
jge
push
arpl
mov
pop
sub
imul
dec
xchg
mov
push
cli
les
push
lret
xor
push
push
mov
push
dec
arpl
sbb
mov
aas
loopne
xchg
aas
pop
fs
xchg
jns
add
repnz
scas
insb
mov
cld
test
xchg
or
pushf
cmpsb
mov
mov
adc
and
in
xchg
daa
dec
push
into
clc
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
mov
fistps
jne
test
xchg
xchg
and
test
cmp
je
sub
aaa
mov
bound
push
aas
test
test
pop
test
test
inc
cld
pop
icebp
rcll
xor
out
loope
insb
iret
sub
lds
sub
mov
and
xchg
mov
out
pop
xchg
sbb
mov
jnp
jecxz
test
adc
lcall
lds
loop
loop
cwtl
jne
mov
incl
jmp
dec
incl
out
ljmp
fmul
or
sbb
mov
pop
push
fs
lret
cmp
scas
or
pop
jge
dec
mov
shll
fistpll
push
rcrb
dec
pop
or
mov
lods
fnstsw
lods
and
imul
ret
xchg
push
ret
cmpl
or
and
inc
jg
sbb
lahf
adc
xlat
cmpsb
rcl
scas
xchg
pop
shll
lea
jp
cmp
xlat
pop
cmp
aam
jne
sbb
aam
mov
xchg
cmc
nop
icebp
dec
sarb
jmp
lret
loope
cmp
mov
movb
push
fucomip
jb
subl
adc
or
stos
adc
mov
ljmp
fs
in
inc
sbb
mov
shl
sbb
push
mov
arpl
loopne
inc
cmpsb
and
je
jl
pop
insl
sub
adc
jl
mov
fdivrl
js
pop
fwait
mov
sub
js
dec
jae
mov
push
cmp
cmp
mov
mov
es
je
jg
cltd
dec
pusha
movsl
ja
xor
jecxz
imul
push
sahf
mov
ljmp
or
jnp
bound
and
mov
cltd
out
mov
les
movsb
xchg
mov
fldenv
push
sub
or
fwait
inc
shlb
sahf
adc
xchg
out
cmpsb
aas
movsl
sbb
enter
ret
fcomps
and
shl
sbb
push
into
hlt
mov
inc
inc
push
mov
das
filds
lods
imull
jmp
je
mov
push
dec
pusha
jnp
jmp
or
ret
xchg
xor
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
rolb
sbb
sbb
sbb
push
rol
jne
test
adc
push
lock
aam
jne
mov
popf
jge
pop
dec
stos
aam
jns
mov
fidivrs
sub
jo
popf
aad
mov
stc
test
data16
xor
dec
xchg
cmp
sub
gs
movsb
mov
sbb
in
jle
shll
cmc
xchg
cmp
js
jecxz
cmp
xchg
outsl
loopne
fldl
cmp
bound
pop
or
mov
xor
mov
inc
imull
xor
sub
sahf
das
xchg
lret
dec
insl
jo
mov
push
outsl
mov
mov
je
jecxz
std
std
xor
lds
xor
xchg
mov
sub
out
sbb
out
push
ret
aad
add
popf
sbb
xchg
out
push
ret
adc
scas
sub
sbb
mov
sbb
movsl
ljmp
fdivrl
lods
push
push
cs
pop
mov
xchg
daa
daa
mov
fs
xlat
cmp
xor
daa
clc
arpl
sub
sub
mov
int3
dec
xchg
in
pop
mov
sub
nop
and
add
or
adc
push
addr16
sub
adc
push
lods
in
cltd
stc
sub
mov
mov
lods
push
cltd
or
mov
pop
xor
mov
push
ljmp
sub
gs
dec
cmp
subl
mov
cld
fucomp
insb
or
fisttpll
popa
loop
push
mov
mov
arpl
adc
fcoms
sub
pop
pop
adc
addr16
mov
pop
jp
bnd
aaa
pop
push
lock
jp
cmp
test
iret
dec
in
mov
dec
mov
add
jecxz
repnz
jo
mov
push
std
aas
cmp
mov
push
jno
gs
lods
inc
mov
test
xor
mov
push
ds
call
cmc
lret
inc
xchg
in
ss
jns
dec
mov
and
pop
push
push
mov
pusha
rcl
lahf
and
je
cli
pop
mov
pop
js
inc
cmp
inc
nop
fstpt
cmp
mov
mov
popa
add
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
jo
sbb
sbb
adc
sbb
insl
out
mov
pop
push
inc
leave
iret
loopne
mov
sbb
mov
into
fninit
or
push
sbb
sub
pushf
sub
add
inc
into
fsubl
lock
in
iret
xchg
bound
adc
pop
lcall
pop
cmpsl
repnz
outsb
add
dec
hlt
dec
sub
mov
xorl
mov
mov
adc
sub
cmpb
xchg
mov
lahf
stos
xchg
or
sbb
sahf
mov
shr
scas
mov
jb
leave
adcl
pop
int3
ret
push
cmp
xchg
jno
movsl
dec
fwait
loopne
or
mov
sbb
and
bound
add
pop
clts
push
add
fadds
jg
jo
ljmp
sub
call
push
adc
push
push
out
push
or
xchg
sbb
pop
movsl
je
mov
loopne
or
jl
push
sub
movb
icebp
jp
mov
inc
lahf
dec
push
sub
push
mov
dec
push
and
inc
pusha
ss
pop
adc
xchg
xor
fbld
mov
and
arpl
jecxz
arpl
imul
xchg
push
ret
cli
ret
push
bound
xchg
cld
and
jecxz
xor
jbe
xchg
jmp
sub
ds
in
cwtl
inc
popl
test
inc
lcall
ja
cmp
notb
and
mov
js
push
pop
scas
or
cld
icebp
test
xor
aaa
mov
aam
aas
mov
push
data16
adc
idivl
lret
data16
cmp
popa
mov
sub
pop
andb
sub
imul
mov
shr
push
lahf
dec
gs
enter
dec
movsb
cmp
push
dec
add
movsb
mov
push
push
xchg
addr16
pop
mov
xor
sbb
ret
cmovbe
jns
shrl
jge
mov
in
ret
rorl
xchg
lods
fcmovu
mov
sti
inc
outsl
mov
push
cmp
stos
shll
and
xchg
mov
insl
scas
mov
int
lret
xchg
sbb
call
call
cwtl
addr16
lret
test
push
push
scas
lea
mov
ss
clc
inc
int
sub
xchg
jno
imul
xor
scas
dec
scas
std
ret
xlat
fisubl
and
in
sarl
dec
xchg
and
xchg
in
push
mov
mov
xchg
popa
aas
xor
pop
xchg
hlt
mov
and
lahf
and
jns
cld
aam
cli
pop
testl
and
lcall
mov
lret
jo
mov
mov
or
pop
jmp
jo
aaa
test
push
insl
clc
mov
mov
in
rcll
cmpsl
or
mov
mov
pop
rorb
scas
pop
mov
dec
pop
in
outsl
mov
dec
outsb
mov
aad
push
fsubrl
std
pop
iret
xor
mov
pop
pop
push
adc
int
and
push
lcall
push
xchg
je
js
sub
push
jle
cmp
lods
mov
adcl
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
and
jle
adc
sbb
adc
sbb
mov
jmp
enter
mov
loopew
mov
daa
lods
mov
sbb
mov
jmp
pop
add
adc
out
mov
imul
mov
jnp
arpl
fldcw
icebp
ficoms
ss
in
or
pop
hlt
xor
shr
dec
xchg
outsb
addr16
push
sub
roll
popa
lcall
adc
dec
outsb
xchg
push
jmp
xchg
mov
cmp
lea
inc
cmc
lcall
loop
push
xchg
mov
jo
cli
les
rcll
mov
push
inc
das
xor
pop
inc
jae
into
mov
insb
je
push
daa
xor
cld
pop
mov
xchg
in
pop
stc
and
stos
mov
mov
or
out
mov
inc
rol
stc
or
jae
fimull
push
add
shrl
sub
sarb
fistl
mov
pop
xchg
ficoms
nop
xchg
adc
jl
loop
pop
sbb
out
jl
in
mov
aam
mov
jns
ret
shl
imul
or
fcoms
adc
push
cli
cmpsb
bound
cld
das
out
pushf
pop
hlt
ss
aaa
iret
inc
push
xor
into
xchg
push
xchg
dec
jmp
dec
xor
add
xchg
scas
mov
lds
ret
arpl
pushf
subl
pop
shrb
aam
aad
xlat
push
shrb
mov
xchg
pop
pop
dec
sbb
push
les
and
pop
jecxz
push
sahf
mov
cmp
inc
jmp
push
fiaddl
out
adc
fcmovbe
mov
xchg
dec
popf
push
dec
sub
dec
pop
cli
les
shrb
stc
cmp
cmp
scas
rcr
je
cmp
or
mov
dec
dec
mov
and
insl
jl
or
sbb
in
rcrb
jb
sbb
test
jb
pop
leave
insl
xchg
cmc
jmp
addr16
repz
mov
xlat
popa
inc
imul
or
ss
ja
popa
aaa
dec
dec
inc
jmp
push
repnz
sbb
dec
ss
cmp
mov
push
ljmp
xlat
adc
stc
fs
insb
cmpl
cmp
cltd
xlat
and
icebp
xchg
out
push
test
xchg
jmp
cmpsb
pop
das
cmp
mov
cmp
rolb
mov
and
sbb
lcall
push
ret
into
xchg
fdivs
jmp
aad
ret
inc
xor
imul
and
jecxz
mov
mov
jp
cmpsl
jne
inc
sbb
test
call
mov
in
mov
fiaddl
mov
or
cld
into
pop
cmc
mov
int3
rcl
fnstcw
call
cmp
arpl
xchg
mov
jp
sti
xchg
mov
adc
fcomp
xchg
jnp
push
pop
loopne
inc
sti
and
cmp
push
pop
dec
mov
jp
fcmovne
mov
xor
dec
in
dec
lcall
pop
adc
add
push
mov
sbb
mov
cltd
stos
jp
jl
sub
fnsave
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
push
mov
sbb
sbb
clc
and
inc
aas
gs
pop
enter
xor
cmc
sbb
adc
adc
dec
xor
or
push
inc
adc
jecxz
and
loop
in
inc
mov
data16
xor
leave
cmpsb
and
pop
cmp
test
mov
xor
fs
je
mov
testb
push
or
js
cs
sbb
and
jmp
loopne
ret
data16
or
push
lahf
cld
std
mov
xor
mov
decl
pop
inc
bound
cmp
cld
lods
pop
loope
push
aad
mov
imul
test
fwait
cmp
jmp
xchg
push
xchg
xlat
loope
loop
shlb
insb
repnz
pop
xchg
and
add
icebp
icebp
insb
push
lods
push
jno
or
add
and
mov
jns
jl
xchg
sbb
cwtl
movsl
add
fstps
out
popf
push
add
lods
xchg
add
ds
pushf
bound
popf
sbb
pop
outsb
movsb
sarb
adc
call
ror
fnsetpm(287
mov
sub
pusha
xchg
popa
cmp
adcl
push
std
xlat
pop
popa
xchg
pop
das
vpavgb
inc
rclb
in
xor
repnz
xchg
cmpsb
in
xor
fstps
push
adc
aad
popl
dec
dec
and
shl
popf
or
cmpb
mov
xchg
push
inc
mov
cmp
mov
or
sub
jmp
lods
int
iret
sbb
movsb
push
xchg
cmp
ds
cmp
jg
lcall
mov
jae
mov
and
inc
xor
xchg
out
inc
inc
loopne
sti
inc
cmp
fwait
xchg
dec
inc
inc
stc
pop
pop
cmpsb
sahf
inc
insl
mov
imul
out
xlat
jb
enter
xchg
jmp
xchg
and
jl
dec
mov
mov
sbb
cmp
cmpsl
rcl
adc
mov
push
xchg
cmp
push
stos
xorb
mov
lods
cmp
sti
stos
sahf
jmp
dec
in
sahf
jecxz
mov
out
sub
pushf
iret
mov
xchg
jmp
les
loope
mov
stc
scas
xor
push
add
inc
test
add
imul
push
jne
iret
fiadds
dec
jae
cwtl
xor
mov
or
xor
out
and
sbb
xor
sub
int3
cmp
cmp
ljmp
test
inc
aaa
shlb
xchg
xchg
es
mov
sub
or
ss
sbb
hlt
mov
aam
jp
add
cwtl
sahf
outsl
test
rcll
add
sbb
xlat
mov
push
cmpsb
dec
in
ja
aaa
ret
mov
outsl
idivb
repz
xchg
push
jns
push
fs
and
les
inc
mov
mov
fdivl
pop
ret
int3
cmp
cmp
jecxz
push
dec
push
push
cmc
or
sub
lods
adc
mov
mov
hlt
mov
cmpsb
mov
lcall
lret
add
inc
lock
fwait
or
push
push
jae
pushf
jl
jmp
call
add
subl
jmp
mov
push
in
xor
cltd
add
add
sbb
adc
sbb
loopne
sub
adc
jecxz
cmp
adc
sbb
out
movsb
or
movsl
sbb
add
sbb
xchg
mov
mov
and
into
testl
xor
cli
arpl
ficoml
cmpsl
filds
lret
nop
xchg
test
aas
push
add
xlat
add
xlat
nop
xchg
dec
mov
mov
in
sub
stos
cwtl
xchg
pop
mov
nop
arpl
in
mov
sti
lods
lret
or
lea
sahf
dec
cli
adc
dec
rcrl
and
in
push
xchg
cmc
cld
dec
lock
inc
dec
push
test
and
lea
in
mov
jmp
gs
lea
rcl
dec
sub
push
push
jo
rcrl
movsl
sti
add
adc
iret
cmp
movsb
cmp
pusha
aas
xchg
dec
insl
ds
mov
sub
mov
pop
fmul
cmp
sub
fdivr
fsubrp
xchg
dec
jmp
mov
iret
fwait
arpl
sub
jge
adc
leave
dec
addl
jp
cmc
sahf
pop
xlat
call
rcll
xchg
arpl
mov
idivl
ret
adc
pop
gs
cwtl
mov
mov
cmp
add
xchg
xchg
mov
mov
sub
jno
inc
test
ss
mov
or
push
mov
les
ss
stc
ljmp
adc
cmp
sub
repnz
mov
sahf
mov
iret
adc
mov
mov
pop
decb
sub
scas
mov
pop
loopne
movsl
enter
push
ret
and
adc
addr16
stc
mov
sbb
mov
jle
rolb
ja
mov
in
in
pop
into
clc
out
pop
dec
jl
sbb
and
data16
mov
mov
aas
and
jbe
call
inc
sub
scas
rorl
mov
js
iret
sbb
jg
push
sbb
out
in
push
jp
outsb
rol
push
xchg
movl
sub
add
inc
fildl
orb
push
mov
mov
and
add
lods
in
sbb
xor
sbb
cmp
pop
outsl
loope
pop
push
pop
insb
test
jae
jl
pushf
xor
cmp
fcoms
inc
fstp
ds
std
push
js
out
mov
jge
call
push
push
bound
sbb
test
outsb
xor
pop
outsb
mov
inc
pusha
jmp
xor
je
jnp
jno
jns
jno
or
cmc
sti
orl
adc
loope
dec
mov
jmp
scas
mov
mov
xor
aas
xchg
out
jne
pop
adc
cmp
int3
mov
or
cmp
sbb
pop
test
stos
cmp
xor
div
push
insb
pop
iret
ja
adc
out
movsb
adc
xchg
add
data16
insb
mov
inc
cld
stc
adc
test
cmpsb
es
cmp
lods
int3
or
pop
ja
add
in
mov
outsb
arpl
inc
dec
es
push
sbb
xchg
push
call
xorl
push
xorl
push
adcl
pushl
call
mov
mov
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
mov
fs
sub
fadds
mov
shrb
out
adc
pop
pop
stos
and
mov
inc
xor
sub
lcall
mov
jnp
xchg
arpl
bound
jnp
push
popa
js
cwtl
xlat
push
mov
jne
dec
adc
cs
sarl
push
std
jno
push
outsl
cmpsl
mov
lcall
fnsave
mov
insl
add
pusha
mov
sub
fwait
sub
iret
mov
cltd
mov
and
pop
icebp
fs
push
cmp
inc
adc
jns
test
pop
xor
push
sbb
adc
inc
pop
inc
scas
fdivl
clc
or
add
push
nop
adcb
cld
fnstsw
ds
sub
push
and
shll
pop
movsb
jbe
jns
jne
int
inc
adc
add
push
mov
insb
insl
sub
call
movsb
xchg
dec
cmp
dec
xchg
addr16
adc
test
lahf
xor
mov
je
inc
mov
daa
inc
jns
pop
rcrl
call
xchg
ss
sbb
and
mov
in
push
cmc
mov
and
ret
mov
mov
lods
pop
jecxz
fnop
mov
xlat
lods
mov
scas
into
push
in
mov
mov
lods
mov
xor
adc
rorb
shrl
xorb
xor
mov
fcoml
and
xlat
or
call
loope
inc
inc
mov
sbb
dec
sbb
xlat
dec
xchg
rcll
inc
int
std
xchg
lret
xlat
inc
cmp
hlt
push
push
out
mul
adc
iret
inc
inc
jne
sub
or
jp
xadd
stos
mov
popf
or
lds
out
lods
fwait
jg
sbb
lret
js
inc
loopne
cmp
inc
gs
cmp
jge
mov
fdivrl
sbbl
and
cwtl
mov
mov
push
andb
sub
stos
int
aam
mov
push
jne
xchg
cwtl
fsubrl
loope
mov
daa
or
xchg
and
or
pop
or
xchg
mulb
jp
inc
lahf
pop
inc
shr
xchg
mov
xchg
fcomip
push
xchg
sbb
dec
and
shlb
jge
sti
sbb
stos
push
lods
addr16
ds
stc
mov
rorl
cmpb
xchg
pop
pop
std
cld
mov
push
jne
out
cmpsb
xchg
popa
mov
int3
push
cmp
mov
sahf
xchg
loop
lahf
cld
stc
daa
sub
sbb
pop
mov
add
fwait
leave
sbb
lea
fdivrp
ss
jns
mov
pop
sti
dec
inc
xchg
dec
repz
add
push
dec
mov
shrb
sub
and
mov
aad
pop
adc
xchg
outsb
and
fnstenv
movsb
adcb
stos
jmp
cs
push
sbbl
sub
pop
mov
hlt
and
push
fidivrl
xchg
push
pop
push
sahf
clc
lods
push
sbb
aad
push
mov
xor
mov
mov
sub
sbb
fbld
push
xchg
cmp
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
sub
sbb
adc
sbb
xchg
lcall
aas
in
call
push
pop
dec
push
or
inc
and
ret
addb
notl
jnp
or
mov
loope
sub
insl
jle
sbb
and
push
aas
adc
enter
insb
sbb
aam
loope
add
nop
push
rcr
sub
shl
xchg
cmp
fcoms
mov
adc
push
pcmpeqd
xchg
mov
cld
mov
mov
shrl
sub
sub
lock
xor
stc
jns
cwtl
inc
sub
popf
scas
outsl
and
mov
mov
inc
pop
popa
fcmovnu
fs
stos
inc
out
fsubr
mov
repz
and
lea
sbbb
pop
sub
loope
jp
adc
cwtl
aaa
repnz
call
das
cmpsb
mov
stc
inc
pop
cs
ret
adc
jnp
sbb
jb
out
and
lcall
stc
testl
mov
fwait
sub
cmp
roll
scas
sbb
xchg
cmp
or
xlat
jle
gs
add
lea
ror
es
sbb
and
cmp
sub
dec
adc
loopne
rcrb
popf
mov
jno
in
leave
pop
pop
adc
je
in
daa
jno
and
aam
and
popf
cmp
les
test
es
icebp
lret
push
jno
xor
inc
ficoms
insb
and
inc
loop
mov
mov
movsl
mov
cmp
lahf
xor
movaps
imul
lds
mov
adc
sbb
lea
mov
lock
pop
and
shlb
aad
mov
mov
xchg
jl
or
mov
les
scas
fistpl
imul
xlat
pusha
and
test
xor
mov
xchg
mov
dec
mov
inc
or
cmp
out
push
testb
add
or
out
inc
jge
push
pop
das
insl
mov
ficoms
inc
lret
js
lret
adc
rolb
inc
jle
sub
cmc
jmp
adc
icebp
pop
xchg
mov
adc
js
mov
xchg
sahf
xorl
fbld
pop
dec
adc
fsubr
insb
mov
mov
or
lea
loop
adc
dec
mov
xor
rep
test
in
outsb
xor
ljmp
mov
data16
lea
mov
test
jns
mov
and
stos
dec
leave
mov
sahf
test
loop
dec
repz
sbb
xchg
jns
and
psadbw
int3
aam
jb
xchg
mov
and
sub
jnp
ss
push
fwait
mov
roll
fwait
stos
sub
addr16
jl
pop
sbb
mov
icebp
mov
fimull
and
jnp
mov
cmp
dec
mov
mov
dec
enter
dec
lods
adc
inc
push
dec
nop
pop
xlat
mov
cmpsb
iret
pop
xor
push
sub
ss
repz
dec
xchg
cmp
push
leave
dec
dec
pop
add
add
bound
inc
and
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
pusha
mulb
ficomps
les
test
cmp
out
gs
clc
popf
pop
cmp
add
fs
stos
push
cld
mov
in
nop
push
fs
data16
andb
andl
add
cmc
jns
or
sbb
push
cmp
ror
xorl
jns
pusha
jne
roll
push
imul
stos
lods
and
jge
imul
in
and
dec
test
imul
bnd
stos
fstps
xor
ja
stos
inc
test
pop
lods
adc
addl
aaa
repnz
pop
dec
outsl
or
adc
pop
jmp
sbb
cmc
add
lea
mov
adc
jns
pop
mov
adc
shll
ja
je
ss
xchg
pusha
cmovs
lea
sbb
inc
das
pop
cmp
sbb
sub
pushf
xor
sub
lcall
call
sbb
cmp
stos
stos
lods
sub
jne
int3
lret
pop
mov
scas
xor
xchg
jp
cltd
orl
mulb
pop
or
iret
mov
mov
addr16
or
sbb
xor
xchg
rorb
sub
insb
fwait
insb
popf
mov
mull
xor
inc
cmp
add
pushf
adc
pop
std
icebp
out
mov
call
std
repz
dec
dec
cmpl
cmp
mov
jp
loope
ret
into
fwait
movsl
xchg
repz
cmp
imul
cmpsb
cmp
sti
jp
ret
mov
shrl
in
aad
lret
repnz
xlat
pop
jbe
loope
xchg
ds
add
lea
mov
outsb
and
fwait
addr16
sbb
mov
popa
neg
push
pushf
insb
jnp
push
jmp
fsubrs
jg
test
adc
stos
mov
xor
push
out
test
imul
jge
cmp
xor
hlt
out
fs
sti
sbb
cli
dec
mov
pushw
xor
or
jmp
imul
out
fistpll
mov
xor
frstor
scas
std
xchg
pop
sub
mull
sub
and
push
fsubs
cwtl
or
cmp
pusha
cmp
fnsave
sbb
push
xor
roll
repz
ja
sbb
push
mull
jne
inc
test
ret
sti
and
push
mov
maxps
xor
mov
mov
dec
fwait
adc
int3
insl
fs
das
add
test
or
xlat
lcall
lods
push
mov
sbb
fmull
sub
or
hlt
cmp
stc
pop
mov
popa
or
divl
pop
test
test
adc
adc
dec
cmp
outsb
pop
outsb
out
xor
dec
dec
jmp
mov
test
xor
aas
notl
dec
mov
clc
les
in
stos
scas
or
notl
cli
lcall
mov
outsl
aam
addl
cltd
testb
cmp
cs
fisttpl
ja
lds
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
popf
sub
inc
jmp
sbb
outsl
xchg
shrl
hlt
xchg
or
dec
sub
and
pop
mov
jae
movsl
dec
push
xlat
or
mov
xchg
pop
jb
or
pop
and
loope
into
dec
push
inc
fst
sbb
fisubl
mov
sub
jbe
dec
adcb
into
rcrb
xchg
popa
hlt
dec
fildll
ja
icebp
icebp
lods
es
jp
lea
xlat
jb
sbb
mov
mov
cltd
dec
push
lock
jp
stc
mov
or
scas
out
adcl
push
movsl
ret
das
add
dec
loop
lods
leave
clc
mov
lock
adc
popl
insb
jmp
aaa
cltd
test
pusha
gs
mov
ljmp
fs
test
pop
sbb
lock
cli
jl
sbb
sti
out
nop
mov
jp
pop
aas
mov
lds
aas
out
notb
icebp
inc
mov
test
lods
int3
out
xchg
addr16
sub
mov
push
xchg
flds
and
clc
rclb
ljmp
add
dec
testl
inc
arpl
clc
mov
sbb
jo
dec
ljmp
fs
adc
jle
data16
add
aas
add
mov
mov
pop
sub
sub
mov
in
addr16
loop
cs
xor
rol
filds
push
inc
mov
xor
jp
js
lds
or
jne
shlb
shl
mov
decl
mov
repnz
rcll
lahf
les
cmc
popa
jp
jmp
inc
loope
out
and
jmp
jae
mov
lds
cwtl
fdivl
data16
mov
stos
adc
gs
pop
dec
int3
adc
outsl
lcall
cmpsb
add
mov
orl
cltd
and
lds
cltd
int3
movsb
cli
int
lcall
into
scas
je
pop
mov
jo
fcoms
mov
xchg
call
add
and
test
adc
and
aam
ret
pop
push
sub
push
sti
nop
cs
out
jg
movsl
and
or
jmp
test
jmp
and
sbb
or
pop
scas
es
mov
shl
xchg
fistpll
mov
fiaddl
loopne
or
cmp
push
push
add
dec
pop
fstpt
jb
jl
jle
jno
pop
mov
jp
jmp
pop
jae
stos
sti
mov
push
push
in
push
rorb
and
and
out
push
cmp
xchg
jp
shlb
push
cmp
repnz
shll
mov
jge
aad
test
clc
adc
sub
mov
pop
in
sbb
xor
jo
push
inc
sub
jae
mov
dec
sahf
add
divb
and
jmp
inc
mov
or
xlat
xchg
ja
lret
push
inc
xchg
xchg
lcall
jns
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
jae
inc
loope
sbb
adc
sbb
dec
lds
inc
mov
popf
jle
cmpsb
sub
xchg
pop
xchg
popf
pop
jl
pop
fcomi
movsb
add
in
lock
pop
in
cmp
sub
push
fwait
test
inc
pop
in
push
xchg
jne
icebp
rorb
mov
lret
popf
adc
push
sbb
add
push
jno
and
aas
cmc
jne
mov
sub
int
mov
mov
push
xor
gs
loop
je
push
imul
dec
pop
pop
pop
add
adc
out
xchg
outsb
mov
cmp
imul
jg
lret
jmp
in
in
and
or
stos
repz
or
or
lods
mov
xor
movsb
bound
cmc
pushf
add
xchg
sub
ret
xor
lods
sbb
mov
in
rorl
mov
dec
adc
mov
inc
outsl
pop
xor
rcl
cmp
mov
insl
das
in
push
lahf
insb
and
sub
mov
sbb
jns
push
inc
leave
fimuls
pop
je
cmp
lret
cli
movsb
je
adc
xchg
xchg
dec
sbb
in
fwait
out
cmc
jecxz
mov
sbb
das
in
aad
hlt
xorb
pushf
and
and
xchg
daa
mov
adc
arpl
scas
mov
ret
fs
femms
sbb
dec
pop
addr16
nop
insb
adc
or
inc
repz
stos
pushf
mov
push
inc
test
mov
test
xchg
movsl
les
gs
and
addr16
lock
jecxz
xchg
cs
gs
add
lds
inc
ret
in
push
push
pop
mov
xor
dec
mov
xorl
jno
and
sbb
das
pop
ret
test
ja
sbb
xor
mov
bound
jae
push
push
inc
rclb
xlat
pop
or
pop
lds
subb
add
stc
fsubrl
pop
das
add
daa
mov
pop
rorl
jne
push
mov
sub
and
loope
lret
movsl
push
int
ficoms
add
mov
adc
sub
test
jns
xchg
sub
ret
push
shlb
lock
jbe
les
int
cltd
adc
sti
xor
mov
dec
sbb
inc
push
std
lahf
mov
sti
mov
cwtl
sbb
push
mov
inc
lret
nop
cltd
jne
mov
sub
loopne
adc
cmpsl
cmp
jb
mov
cld
ja
dec
and
fisubrs
lods
fsts
or
ds
or
fs
int
shrb
push
imul
imulb
dec
mov
xor
sti
mov
icebp
or
push
fs
mov
push
adcb
push
aad
xor
repnz
or
jnp
std
sub
mov
movsb
aad
dec
mov
loop
movsb
or
js
out
adc
lea
jnp
es
cltd
decl
adc
aaa
mov
mov
mov
ja
shlb
hlt
in
jmp
mov
sarb
inc
jle
and
int3
shrb
or
pop
jg
cmp
data16
repz
jg
insl
mov
push
std
les
cmp
sub
std
pop
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
mov
fistl
sbb
adc
sbb
and
leave
jno
les
repz
dec
inc
insl
cli
neg
push
adc
inc
cmc
xor
xchg
sbb
pusha
daa
adc
xor
jmp
jecxz
fimuls
lods
jb
sbb
in
cmpsl
imul
mov
cmpsb
addr16
imul
pop
test
push
inc
mov
enter
xchg
push
jno
ljmp
xchg
movsb
hlt
lret
cmp
jnp
outsl
inc
loopne
cmc
popa
out
scas
adc
cmp
popf
inc
dec
cmp
sub
out
jle
lret
ljmp
jl
mov
dec
xchg
in
xacquire
xchg
jo
outsb
cmp
pop
adc
xchg
mov
sub
loope
sti
sub
int
and
in
call
inc
mov
dec
adc
push
enter
mov
movsl
mov
mov
sbb
push
and
mov
inc
fildl
pop
testb
cmp
mov
sub
mov
push
pusha
ret
fstps
jmp
rclb
inc
add
icebp
xor
andb
mov
clc
mov
or
push
pop
push
push
pop
xor
ret
xor
xchg
xor
rcrl
adc
add
adc
mov
cld
mov
scas
and
adc
push
xor
cmp
mov
enter
fdiv
adc
inc
adc
mov
cmc
cwtl
jae
mov
mov
inc
or
ja
fisubrs
dec
jo
loope
outsb
and
xchg
and
or
outsl
mov
lods
adc
dec
scas
test
jns
mov
ljmp
pop
sahf
cmp
repnz
je
push
cmp
and
loopne
in
scas
xchg
and
inc
lcall
aad
cmp
mov
test
or
dec
xlat
mov
mov
inc
imul
loopne
aaa
inc
mov
sbb
jecxz
test
cmp
sub
aam
scas
push
jbe
jmp
hlt
pop
cmp
and
clc
scas
inc
xor
sub
or
dec
mov
and
decl
cmpsb
data16
mov
test
or
out
xor
mov
mov
loopne
cli
out
xchg
mov
cmp
cmp
sbb
sub
push
js
mov
cltd
ret
or
lock
push
inc
dec
xchg
cmp
arpl
hlt
js
es
sbb
jns
scas
pop
subb
ss
in
movsl
or
jl
jle
rcrl
dec
jmp
mov
and
movsl
and
in
sbb
nop
mov
cmc
fistps
fisttps
js
movsl
add
movsb
add
pop
mull
jb
push
leave
push
mov
jmp
sahf
mov
sbb
adc
fwait
loope
call
jge
outsb
stc
idivb
jmp
aad
inc
sbb
cltd
inc
or
loopne
repnz
clc
mov
cltd
outsb
dec
ror
jle
xor
rorb
jmp
data16
loope
out
fimull
loopne
or
or
adcb
mov
aad
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
out
mov
sbb
adc
sbb
dec
xchg
fxch
and
out
cli
mov
dec
xor
xchg
nop
jecxz
sahf
jnp
lods
movsb
gs
mov
mov
jg
testb
pop
mov
fdivrs
int3
mov
int3
cwtl
and
movsl
add
jge
sahf
out
daa
adc
out
and
xor
clc
pop
cltd
mov
adc
out
cmc
in
movsb
int3
int3
fistps
imul
add
repz
addr16
rorl
xchg
adc
sbb
les
aas
add
fcmovnb
dec
inc
scas
push
mov
mov
pop
cmpsl
fndisi(8087
and
pop
jl
push
push
pop
pop
cmpsb
dec
sub
cmpsl
popa
jmp
push
sub
aam
lds
das
xor
imul
mov
inc
decl
push
movsb
sub
dec
mov
ds
fstps
push
mov
iret
sarl
fstp
jmp
lods
scas
mov
loop
mov
jae
int
add
int3
mov
dec
inc
cmpsb
inc
subb
add
sbbb
mov
mov
dec
shll
jmp
cld
cmp
sbb
scas
lods
xchg
xchg
dec
cld
mov
lock
push
cmc
test
adc
jg
pop
pop
call
clc
cmc
add
adc
outsb
jbe
fsubrs
in
lcall
push
sahf
ds
inc
jnp
or
sub
loop
addr16
xor
aaa
hlt
pop
sbbb
mov
lods
adcl
inc
lds
pop
jne
adc
cmpsl
loope
jno
lods
push
jb
cwtl
cmpsb
lods
lea
add
dec
cmp
xor
ja
sahf
push
inc
inc
loopne
cmp
and
ret
fisttps
aad
and
sub
loopne
xor
pusha
sub
leave
add
iret
push
push
jge
mov
clc
das
cmp
stos
lret
shrl
xor
push
mov
xchg
clc
dec
rolb
push
shll
popa
sub
repnz
cmp
gs
fsubrs
loope
shl
pop
test
mov
jbe
fcompl
addl
fsts
movsl
scas
pop
xor
dec
mov
sbb
jmp
faddl
pop
shll
push
xor
mov
cltd
mov
sub
and
mov
lret
sub
and
xor
clc
scas
cmp
add
std
ror
outsl
jne
pop
push
lahf
push
jmp
std
sub
fdivrl
popa
ljmp
push
aam
xor
sub
cwtl
stos
mov
xor
inc
dec
gs
idivl
inc
and
nop
addr16
les
ljmp
pop
push
add
xchg
mov
pand
or
jp
xchg
jnp
pop
aad
outsb
stc
mov
dec
arpl
xchg
lods
dec
sub
cwtl
sbb
push
dec
popf
popa
push
ja
and
dec
jl
jno
inc
test
cmpb
and
in
jmp
adc
sahf
jo
mov
dec
jnp
sahf
adcl
stos
addl
xchg
decl
xchg
inc
push
movb
jne
mov
dec
dec
fwait
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
das
cmpsl
mov
sbb
sbb
test
push
loope
xchg
repz
mov
je
push
shll
loopne
cmp
lahf
adc
mov
test
jae
jo
rorl
lcall
push
movsb
dec
sahf
in
iret
jle
or
clc
push
pop
arpl
popf
xor
das
xchg
and
outsb
daa
popf
mov
addr16
cmp
nop
scas
mov
out
xchg
xor
mov
fistpll
xor
lret
and
addr16
mov
lods
xchg
push
dec
mov
addb
or
stos
in
std
mov
jge
jle
inc
cmc
ja
les
xor
enter
push
mov
jecxz
adc
sbb
outsb
cmp
stc
inc
insb
mov
faddl
sbb
xor
mov
loop
ds
out
rcr
jge
xchg
sbb
mov
pop
into
jmp
cmp
iret
xor
and
push
push
out
jecxz
pop
je
xchg
negb
mov
out
pop
push
pop
loopne
hlt
out
push
jmp
jl
cmc
cmp
dec
push
xchg
push
out
dec
popa
adcb
pop
push
popf
pop
fwait
gs
data16
movsb
test
out
and
mov
fcomps
daa
mov
bound
incl
cmp
push
pop
adc
test
push
loope
ds
test
pop
sti
xor
pop
ja
mov
rorl
mov
ret
insl
pop
pop
xchg
xorb
lds
pop
sbb
mov
pop
insl
xchg
leave
jecxz
push
mov
push
es
ds
sbbl
add
pop
inc
icebp
loope
fldl
xor
jne
popf
fcmovbe
das
bnd
sbb
ffree
xchg
decb
push
push
xor
popf
out
pop
push
dec
cli
cmp
cwtl
stos
andl
ds
test
mov
mov
mov
inc
cli
mov
divl
inc
add
mov
or
sub
or
mov
add
rol
adc
mov
pop
mov
arpl
inc
jg
sbb
pop
xchg
lea
lahf
scas
xor
and
push
inc
outsl
push
sarb
shrl
int3
dec
shlb
ja
mov
dec
push
xor
movsl
imul
fs
adc
xor
shlb
cmp
mov
jnp
xchg
pop
adc
mov
cmp
sub
fsub
cli
cmp
mov
rolb
pop
mov
movsl
sub
sarb
popf
fs
add
inc
js
jne
inc
fisubs
shll
inc
mov
icebp
push
jle
pop
test
xchg
pushf
ret
mov
hlt
leave
sahf
mov
aam
jg
dec
jno
test
inc
sarb
xchg
psllq
ret
in
ret
in
addr16
out
xchg
xor
in
xchg
mov
sbb
pop
mov
es
pushf
inc
sti
imul
daa
xor
fsubr
push
js
jg
fwait
sub
in
jns
and
mov
ljmp
xchg
jb
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
popa
stos
mov
lds
sbb
adc
sbb
bound
in
cwtl
gs
ja
pop
mov
xor
cmpsl
inc
rolb
mov
pop
add
sti
adc
loop
stos
jmp
xchg
mov
jo
push
and
xchg
pusha
testb
in
push
loop
arpl
xlat
addb
lret
mov
ret
rcrb
mov
adc
xorb
sub
lahf
fiaddl
adc
jbe
or
jecxz
rcl
movsb
pop
add
fwait
les
push
rcll
lret
xor
sub
mov
cmp
pop
jge
inc
and
jle
and
mov
call
rolb
fidivrl
and
ds
sbb
es
xor
mov
test
add
cmp
push
jb
dec
lret
fwait
mov
and
xchg
push
in
mov
es
jbe
mov
and
int3
fidivrs
mov
pop
add
scas
mov
nop
lods
int
repz
push
lahf
lock
int
pop
sti
das
lahf
rcl
add
repnz
insb
stos
add
ss
jp
pop
je
outsb
insb
into
mov
mov
rolb
jno
cwtl
add
pop
ficoms
mov
aam
stc
loope
adc
stc
push
ret
push
xor
hlt
and
add
mov
push
inc
shr
xor
into
jno
clc
xor
and
pop
fs
jg
iret
test
cltd
pop
into
adc
push
inc
int
or
or
dec
pop
xchg
int
jmp
mov
pop
mov
addb
out
inc
popf
push
xor
cmpsb
addr16
addr16
hlt
lret
sbb
xorl
jbe
mov
xor
lods
popf
je
movsl
subl
cmc
inc
ret
jl
gs
rcrl
pop
jmp
shll
popa
stos
inc
ret
mov
sub
dec
stos
imul
xchg
insb
jnp
add
lret
jge
dec
int
test
popa
pop
mov
aam
roll
cwtl
jg
daa
int3
push
cmp
in
jnp
out
cmpsl
mov
cltd
aas
mov
in
mov
add
les
inc
inc
lret
fcomi
xchg
mov
push
add
xchg
mov
jmp
jmp
or
repz
mov
xor
in
fnsave
mov
test
test
ret
sbb
add
push
mov
in
or
dec
daa
sub
sbb
xor
iret
mull
iret
js
push
xchg
and
or
mov
fisttps
pop
xor
cmp
jecxz
test
inc
mov
cmp
push
adc
jno
push
test
cmp
into
dec
mov
ds
loop
mov
adc
inc
pusha
mov
jl
pop
xor
lock
aad
xlat
aam
ret
lods
mov
call
or
in
cmpb
xor
je
mov
xchg
mov
dec
int
add
or
repz
enter
int
add
out
negl
xorl
out
dec
cmp
mov
js
sbb
or
outsb
les
mov
adc
clc
pop
sbb
aaa
inc
mov
jp
je
and
je
and
out
pushf
decl
inc
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
mov
sbb
sbb
cmp
maskmovq
imull
sbb
jmp
or
add
sub
push
xchg
fadds
inc
hlt
test
jo
xor
arpl
das
xchg
jle
in
mov
cltd
dec
mov
dec
push
lret
into
div
sub
movsb
and
lcall
jno
cmpsl
outsb
jno
mov
movsl
inc
inc
xor
rcrb
outsl
lods
jae
sub
push
xor
sarl
mov
xchg
into
adc
xchg
dec
lock
jmp
filds
imul
mov
das
jecxz
mov
xchg
jl
or
out
mov
loop
out
dec
jnp
mov
fs
xor
add
push
dec
cmp
fisubs
mov
pop
outsb
sti
fdivrp
iret
stos
cmpsl
dec
or
cwtl
int
inc
push
pop
lds
pop
inc
xor
imul
mov
or
es
sub
in
push
adc
fstl
in
lods
test
pop
ss
cmp
clc
into
je
stos
lods
shl
lock
mov
clc
ficoms
lods
daa
jbe
mov
subb
dec
out
in
add
inc
cwtl
push
sbb
cli
xor
divb
mov
xchg
jmp
adc
push
int3
xchg
fiaddl
sbb
cs
sub
inc
pop
and
inc
sbb
test
shr
inc
fcomps
or
xchg
add
lahf
mov
cmc
sbb
or
aaa
ja
cltd
push
addl
cs
and
mov
mov
sbb
xchg
outsl
sarl
jecxz
xor
adc
cmp
int3
xor
aaa
scas
inc
add
imul
pop
or
mov
push
push
jb
lcall
sub
and
test
leave
xor
add
outsb
rorl
mov
xlat
push
sub
mov
or
shll
negb
adc
push
dec
sahf
pop
inc
andl
or
xor
shlb
fisubs
js
xchg
jle
in
sbb
fdiv
push
mov
mov
add
sub
mov
cs
add
movsl
jne
inc
fs
mov
dec
mov
mov
sub
mov
sub
jne
add
sbb
mov
fwait
ss
xor
jle
xchg
sub
push
pop
loopne
and
insb
rolb
push
xor
jmp
inc
scas
lahf
pop
loop
mov
jnp
adc
xchg
jmp
jge
push
imul
pop
jge
sarb
or
cld
movl
jnp
pop
jp
sub
clc
cmpsb
dec
mov
pop
addr16
dec
mov
test
out
call
mov
loope
dec
les
out
mov
mov
test
and
jb
repnz
mov
pusha
push
mov
adc
jecxz
mov
mov
popf
add
xchg
scas
push
sbb
jmp
dec
mov
in
jnp
ja
dec
enter
inc
out
adc
add
fwait
in
out
mov
inc
mov
cmpsl
cmp
mov
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
mov
inc
std
adcl
lods
stc
xorl
cld
inc
cld
or
jecxz
mov
imul
fnsave
inc
and
fsubrs
std
sub
dec
jl
jp
push
loop
xchg
add
mov
loopne
inc
in
xchg
pop
or
aad
in
insl
mov
inc
shlb
push
shl
add
inc
arpl
push
xor
and
jmp
or
mov
insb
jb
aas
and
aad
out
flds
aad
cmp
iret
enter
dec
dec
jo
data16
aam
arpl
jns
sbbl
jb
mov
push
mov
inc
into
mov
ss
jnp
sub
xchg
xchg
pop
jno
lock
mov
mov
ljmp
in
mov
stc
adc
leave
jp
bound
out
push
inc
add
push
sub
xor
adc
addr16
dec
sti
inc
cmpsb
jle
mov
ss
push
enter
mov
jl
sub
push
jle
xor
mov
adc
test
aas
lods
sahf
call
mov
fsub
jb
mov
pop
js
mov
insb
call
mov
pop
lahf
cmp
xchg
add
and
pusha
pop
and
mov
rcr
mov
mov
xchg
and
ja
imul
add
testb
aas
fsubrp
clc
cli
andl
int3
xchg
jecxz
idivl
pushw
popf
inc
adc
jno
xchg
lea
push
sub
iret
and
push
push
sub
lcall
jb
sbb
mov
xor
fsts
cwtl
push
rcrb
scas
lret
xor
stc
pop
mov
push
cmp
add
or
jae
je
fs
lret
gs
pop
dec
adc
mov
mov
fcmovu
adc
jle,pn
inc
or
push
inc
pushf
cmpsb
jl
jecxz
aas
jb
shl
dec
add
xor
cmp
imul
fmull
cltd
cmpl
inc
xor
fwait
lret
jbe
out
cmp
mov
ljmp
rcrb
dec
dec
arpl
stc
div
hlt
jle
adc
cvtps2pi
shl
xor
mov
push
rorl
or
fdivrl
mov
xchg
adc
and
cmp
push
fdivrl
inc
jg
push
jbe
jno
push
pusha
inc
and
lods
sbb
add
test
jmp
repz
or
loopne
add
add
cmpsl
lret
cwtl
sub
dec
dec
repnz
mov
out
paddb
daa
mov
push
mov
lahf
and
mov
shr
dec
das
setg
xor
cwtl
dec
test
jnp
popf
sti
hlt
in
mov
sbb
enter
icebp
cmpsb
cmpsl
bound
hlt
stos
movsl
cs
and
push
pop
cmp
cmp
int3
and
mov
and
fdiv
sub
and
and
clc
or
fdivl
ljmp
and
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
cmp
mov
lret
in
subl
pop
in
addr16
movsl
sbb
jnp
sub
adc
in
cmpb
repnz
mov
pop
adc
and
push
dec
sub
push
xchg
mull
mov
jae
adc
push
adc
sbb
insb
or
les
mov
adc
imulb
ret
sbb
cmp
arpl
enter
sub
mov
imul
outsb
cltd
adc
fs
cmp
pushf
jno
les
inc
pop
sub
adc
sub
mov
dec
adc
jb
es
mov
push
pop
ffree
jnp
inc
inc
pop
push
ljmp
adc
aam
cmp
fwait
mov
in
mov
mov
test
gs
das
add
les
scas
pop
jmp
test
insb
xchg
adc
jge
int
push
addr16
mov
sub
data16
xchg
sbb
push
jno
xor
sub
sbb
cmp
add
fmuls
sbb
movsb
fcomi
enter
ret
pop
out
adc
pop
jmp
sub
mov
into
inc
mov
inc
and
jecxz
pushf
les
scas
pop
aaa
mov
lds
and
dec
mov
mov
jbe
xor
and
leave
cmp
or
lods
test
gs
mov
gs
popf
jns
cld
loopne
loope
lock
mov
scas
pop
int
sub
aad
mov
cmpsl
mov
outsl
cwtl
cmpsl
fistpll
es
cwtl
int
dec
in
dec
idivl
mov
sbb
sub
dec
push
and
sbb
orl
add
jp
insl
fidivs
and
sbb
pop
aam
out
pusha
movsl
mov
aas
xor
cmp
cmpsb
mov
btc
pop
mov
or
cmp
and
mov
lret
lock
mov
jg
faddl
testb
arpl
jg
push
in
sub
mov
pop
ss
pop
movsb
pop
jp
mov
xchg
hlt
push
sbb
jbe
das
loopne
jg
mov
push
inc
ss
dec
imul
iret
fldenv
sub
push
or
ljmp
jp
pop
dec
and
fcos
sub
fdivrs
ret
sub
clc
mov
mov
nop
test
imul
popf
andl
jg
cs
insl
cmp
push
cli
jge
aam
stos
fimull
fwait
addr16
shr
xchg
pop
insb
mov
fcomps
mov
aad
mov
in
in
loope
outsl
mov
sub
xor
push
mov
and
cwtl
xchg
fldenv
shr
jo
add
rclb
xor
xor
cmp
add
lahf
fs
add
lods
cmp
jo
cltd
movsl
push
pusha
jne
mov
lock
enter
mov
mov
sub
sbb
fidivl
mov
and
jmp
cmp
or
loope
add
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
ljmp
sbb
adc
sbb
cmp
stc
pop
imul
mov
and
lret
or
pop
ds
sub
jl
dec
test
sbb
push
and
loopne
mov
pop
jecxz
paddsw
stc
lahf
adc
sub
jne
inc
mov
ds
mov
in
outsl
push
adc
sub
lret
mov
pusha
fwait
movsb
iret
vmwrite
pop
push
xor
jp
es
inc
bound
ljmp
pop
mov
ss
dec
jne
orb
dec
int
lahf
and
pop
clc
pop
or
aam
mov
sub
out
popl
std
dec
mov
lods
inc
outsl
mov
xchg
pop
aam
ja
test
int
sbb
aas
stc
popf
xchg
mov
mov
outsl
mov
andl
push
dec
jns
in
inc
aas
inc
jns
jnp
push
aas
push
fstpl
loopne
rorb
fisubrs
push
adc
les
dec
jbe
mov
dec
daa
xchg
cmp
sbb
test
int3
mov
clc
mov
xor
mov
mov
test
aad
nop
xchg
pop
jl
int
inc
jecxz
fwait
dec
cmp
mov
or
movsb
inc
pop
jo
inc
push
mov
mov
inc
cmp
pop
mov
push
mov
fcoml
jbe
xchg
push
test
push
lock
lods
mov
out
in
cmpsb
sub
sbb
in
js
gs
shlb
scas
js
addr16
sub
fists
dec
push
test
daa
xor
or
test
push
dec
xchg
aam
adc
xlat
loopne
xchg
xor
dec
sbb
pop
jbe
push
repz
cmp
in
fbstp
push
int
pop
ja
jl
jmp
jg
aaa
jp
movsb
push
imul
push
mov
or
or
js
test
fsubs
lods
mov
jno
cs
ss
mov
push
cmc
sbb
add
shll
fwait
sbb
mov
cmp
cltd
sti
rorl
lock
push
pop
aas
out
pusha
imul
or
pop
clc
inc
pop
shr
sbbb
mov
and
imul
sbb
cli
movsl
fwait
mov
jecxz
cmp
int
xchg
mov
dec
in
mov
shlb
out
aas
dec
lock
in
mov
sub
sahf
adc
jle
and
mov
or
pop
jne
sub
loop
dec
jg
enter
and
jl
mov
stos
sbb
pop
or
das
pop
xchg
ljmp
sub
mov
imull
push
lret
pop
rcll
aad
out
and
inc
sbb
daa
dec
jae
inc
movsb
repz
adc
mov
popf
mov
pushf
outsl
fs
test
repz
imul
xchg
lods
out
or
test
movsl
shl
sti
mov
cwtl
jnp
cmp
mov
outsl
mov
cmp
or
jo
jg
inc
and
insb
insl
sbb
pop
dec
stos
sti
imul
inc
cmpsl
dec
insl
dec
sub
jecxz
pop
push
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
jge
out
push
mov
sbb
icebp
fistl
mov
or
fneni(8087
push
pop
add
pusha
aam
mov
std
and
fbstp
fs
shll
mov
push
sbb
mov
and
jg
cmp
adc
pop
pop
test
cs
arpl
adc
mov
add
and
in
pop
loopne
mov
into
mov
loopne
stc
jge
mov
sahf
mov
mov
jmp
into
in
xchg
lds
add
jle
subl
push
bound
cli
popa
addb
sti
mov
int
cltd
jae
test
jg
ss
xchg
enter
popa
sub
punpckhdq
mov
sbb
cwtl
fnstsw
mov
rolb
pop
aad
cmp
or
dec
jne
cmp
mov
or
fs
push
bound
sbb
xlat
xchg
jb
xor
fsubs
in
test
test
inc
call
lods
out
jae
pop
mov
mov
les
cltd
dec
xor
cmp
sbb
cs
jle
lea
xchg
jb
lret
mov
adc
mov
sbb
jb
mov
addr16
hlt
sar
lock
and
mov
nop
sub
or
sbb
in
lds
pop
loop
fs
cmp
rclb
jp
xor
ret
out
cmp
add
cltd
add
mov
mov
and
nop
mov
lea
sbb
pop
clc
pusha
stc
enter
pushf
lods
shll
sub
xchg
xlat
movd
jae
inc
push
bound
fstl
stos
pushf
or
mov
int3
test
sbb
orl
insl
add
xchg
sub
scas
xchg
lock
pop
cmp
and
test
sbb
fsub
pop
stos
mov
or
mov
sbb
jge
mov
outsb
jne
push
mov
dec
lods
lret
pop
dec
dec
es
jle
inc
jbe
cltd
pop
shrl
and
mov
jecxz
sub
jl
scas
fsub
push
sbb
js
push
test
inc
shr
mov
bound
into
mov
idivl
arpl
fcompl
daa
mov
mov
or
xchg
or
lods
repnz
push
es
push
mov
push
test
das
subl
xchg
sysexit
lea
dec
xor
ret
push
repnz
into
dec
lcall
int3
jns
pop
sti
sahf
sbb
ds
dec
fwait
cli
sbb
mov
xchg
sub
fcomps
in
fldl
decl
hlt
push
sub
inc
repnz
mov
lret
leave
fstps
std
mov
dec
rorl
rorb
push
xor
push
xlat
test
call
and
negl
cmp
cmp
sub
ss
fsub
pop
and
lea
mov
in
jecxz
lcall
imul
or
outsl
faddl
inc
xchg
and
or
cmp
add
mov
pushf
xor
or
pop
in
lods
jg
jae
enter
popa
jg
lock
stos
sub
jae
mov
mov
jge
rorb
add
cltd
test
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
adc
sbb
adc
sbb
dec
xchg
out
push
mov
cmp
dec
jns
cltd
adc
sub
js
pop
mov
xchg
sahf
and
fbld
rorb
outsb
jmp
arpl
cmp
fcmovnu
push
jecxz
nop
fadds
cwtl
cmpsb
popa
gs
popf
int
mov
les
add
mov
cld
pop
cmp
sbb
xchg
mov
in
fdiv
ror
in
xor
mov
fs
jecxz
jl
and
aaa
lods
lods
mov
incb
mov
inc
lret
push
xor
ret
std
mov
adc
jno
dec
out
pusha
rorl
mov
lcall
dec
scas
jle
ljmp
daa
mov
mov
push
jbe
cmp
pop
mov
ds
ss
vpsrlw
shr
lret
insl
push
out
dec
in
cmp
stc
jne
push
mov
push
cmpsl
jo
fimull
dec
xchg
fnstsw
ljmp
mov
xchg
jnp
xchg
mov
sub
movsl
pop
xor
movsl
jne
mov
outsb
add
push
xor
pop
pop
cmc
push
mov
lock
add
rcrb
pop
xor
sub
xor
lock
ficompl
repz
mov
pop
out
jle
scas
movsl
dec
scas
inc
rcr
jl
push
ret
lods
pop
xor
inc
clc
test
ficoml
mov
xor
pop
and
std
mov
scas
inc
mov
xchg
jb
pop
and
fwait
xlat
and
sbb
cs
fsubrl
xor
mov
pop
stos
push
enter
leave
ltr
sarb
fcomip
mov
vucomisd
lock
fcmove
jns
insb
rcrb
jns
test
fcomps
fildll
cs
jns
rcrl
jbe
in
and
xchg
mov
test
cmc
sbb
and
mov
subb
enter
push
je
ret
movsl
add
adc
cmpl
adc
push
push
insb
sbb
mov
ss
cmc
lcall
jnp
rcrb
loop
jecxz
stc
subb
popa
mov
fisubrs
sar
jl
dec
in
xchg
xchg
push
enter
jb
aaa
sub
mov
cltd
popf
add
leave
pushf
push
popf
js
cmp
inc
add
test
adc
add
lahf
out
cmpsb
xchg
lahf
js
sahf
xor
gs
in
sbbb
mov
adc
test
lods
movsl
adc
sar
mov
out
lock
xchg
rorl
and
sub
cmp
test
sub
xor
sub
inc
inc
mov
pop
jge
pop
stos
scas
shlb
cmc
add
xchg
bound
int3
imul
dec
pop
or
push
sub
or
add
sub
ljmp
push
xchg
rolb
aad
jp
xchg
cmpsb
in
sub
sub
push
fidivrl
mov
lds
cltd
add
dec
scas
mov
sti
and
cmpsl
add
push
push
scas
cmp
sahf
mov
adc
and
sbb
cmp
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
or
push
sbb
adc
sbb
or
ficomps
dec
cmpsb
inc
push
lahf
inc
imul
aas
loopne
js
int
scas
mov
in
sbb
adc
adc
in
daa
sub
push
push
jno
es
push
dec
inc
pop
jb
xchg
sub
push
mov
into
vmwrite
mov
cmp
mov
jnp
pop
adc
inc
int3
xlat
inc
mov
mov
ds
shll
dec
es
in
cmp
mov
leave
dec
repz
and
push
movsl
mov
xor
addl
xlat
jae
sbb
push
and
pop
pusha
fisttps
xchg
das
jp
fwait
ret
xorb
insb
add
frstor
xchg
pop
inc
jmp
cmp
jp
xor
xchg
or
jo
aas
inc
test
sub
dec
push
pop
fisubs
shl
and
loopne
andl
inc
jbe
xchg
outsb
jne
fiaddl
and
test
jbe
pop
enter
fdivs
int3
xor
jle
inc
pop
movsl
jecxz
or
xor
sar
ja
cli
enter
enter
out
xor
mov
stos
out
stos
cmpl
sub
push
cmpl
in
test
lret
and
pusha
pop
mov
pop
cmpsb
mov
sbb
fs
stc
adc
mov
adc
push
sub
push
fisubs
pop
ret
pop
add
xor
jp
adc
sahf
pop
lods
xor
pop
mov
mov
push
add
mov
call
cmp
jl
in
xchg
ret
jno
rolb
push
daa
int
in
arpl
outsl
pop
filds
lret
icebp
shr
ficomps
hlt
daa
mov
rol
push
lods
jl
test
inc
or
xchg
pop
jbe
out
xchg
outsb
mov
stos
std
jo
or
or
adc
unpcklps
xchg
loope
sub
xchg
and
or
jecxz
mov
cmp
out
and
loop
aam
inc
sub
stos
in
cmp
add
dec
out
ficompl
aad
sbb
sbb
fs
lret
xor
lock
sarb
xor
mov
pop
or
ror
adc
or
inc
js
ljmp
sbb
int3
scas
xor
addr16
jecxz
call
pop
insb
ss
arpl
jg
outsb
sbb
movsl
sub
in
stos
lock
adc
shl
and
sar
dec
imul
xchg
pushf
jno
jge
adc
es
cmp
cwtl
jp
inc
ss
and
push
and
data16
mulb
add
aad
pop
xchg
loopne
jmp
mov
and
int3
xchg
mov
jl
sbb
jl
lcall
add
jmp
daa
mov
cmp
stc
push
das
gs
cmp
push
push
or
das
inc
dec
rcrl
fs
adc
push
jno
repnz
jge
inc
and
pop
mov
cmp
push
stc
ret
dec
pop
and
cmpsb
sub
mov
sub
test
call
test
jns
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
dec
push
mov
push
sbb
adc
sbb
pusha
repz
or
jae
add
push
cmc
push
jno
mov
jo
mov
jo
int
jb
lcall
hlt
jp
mov
fsubs
mov
test
pop
test
sbb
aam
out
loope
xchg
and
xchg
xchg
outsl
repz
inc
outsb
cmpsl
pop
push
or
out
push
sub
sahf
mov
push
add
je
pop
push
adc
lcall
bound
mov
xor
andb
popf
mov
clc
das
filds
sbb
mov
stos
mov
dec
popa
out
push
mov
push
push
dec
push
out
or
ljmp
xlat
mov
fsubl
sub
xchg
loopne
mov
sarb
mov
daa
fisttpl
pop
jo
loopne
sbb
shll
xlat
jg
fnstsw
mov
pop
jg
rcrb
jge
incb
push
dec
test
dec
dec
add
inc
sbb
inc
jne
push
cmp
test
xchg
decb
adc
xchg
scas
test
cmpsb
mov
mov
movsl
push
pop
sbb
or
xchg
add
add
cmc
push
fsubl
inc
or
out
test
test
jp
lods
cmpsl
xor
sub
and
inc
push
cmp
aaa
push
lret
pop
ss
outsl
jp
cmpsl
fnstsw
repz
mov
dec
mov
loopne
push
hlt
ds
mov
xchg
xor
cltd
aas
inc
imul
std
mov
insb
mov
push
xchg
add
dec
imul
xlat
sti
ds
adc
push
mov
and
or
cmp
jmp
push
and
pop
adc
insl
jle
insl
jmp
daa
vpsubd
adc
adc
ds
je
fsubrl
or
sbb
dec
xchg
inc
dec
mov
daa
pop
mov
push
imul
inc
jge
jbe
rcll
loop
loopne
je
das
fsubl
inc
stos
mov
cmp
hlt
xor
pop
mov
add
loopne
mov
xchg
mov
imul
pop
fwait
lea
adc
bound
addr16
push
or
imul
push
add
ss
cmpsl
rcrb
mov
rolb
adc
jecxz
enter
or
mov
dec
aaa
lock
in
movsb
testl
sub
jo
rcll
xchg
push
push
into
push
mov
push
jmp
mov
jns
push
aad
fmuls
sti
loopne
cmp
adc
sbb
xor
cmpsb
bound
aam
dec
addl
filds
cmp
mov
out
std
stos
repz
orl
or
jb
mov
adc
loop
sub
push
sub
sub
insb
orb
into
orb
outsb
xchg
pop
push
pop
sbb
pop
push
mov
pop
pop
xchg
outsl
and
movsl
xor
stc
mov
inc
cmp
scas
push
pushf
loope
mov
fsubrp
stc
inc
aas
add
lret
movsb
lds
sarl
push
out
sti
dec
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
in
pushf
xchg
push
sbb
adc
sbb
push
mov
and
mov
xchg
cs
lret
jo
repnz
stos
mov
or
mov
push
insb
into
xor
pop
mov
mov
xor
rol
jns
imul
out
or
inc
pop
adc
shll
pop
sub
cmpsl
popf
cmp
or
jl
repz
pop
or
push
jo
mov
xor
mov
cmp
push
add
mov
fnstcw
mov
pusha
adc
arpl
cmp
fstpl
push
inc
mov
mov
push
sub
pushf
ss
mov
ret
inc
loop
cmpsb
fldl
stc
psrlw
mov
bound
and
jl
popf
adc
test
xchg
mov
and
sub
shl
repnz
testl
orb
sti
jp
pop
xor
test
cmp
out
add
mulb
mov
ljmp
sbb
in
je
dec
pop
fstps
and
jmp
cmp
xchg
cltd
cmp
mov
mov
xchg
push
lret
ds
xor
sub
jp
aas
stc
mov
scas
das
mov
shl
pop
int
xlat
int3
aam
out
pop
push
fstps
repz
cmp
movsb
call
pop
cmpsb
dec
xchg
pop
jp
call
in
pop
fstps
in
xchg
popa
adc
cmpsb
xorl
mov
mov
xchg
add
andb
inc
scas
aaa
jecxz
aaa
mov
xorl
cmp
outsl
fcmovnbe
fwait
outsl
out
cmp
dec
push
pop
mov
xchg
pop
mov
jmp
inc
push
loop
aaa
lock
rcr
dec
gs
pushf
out
cmp
xor
cmpsl
jae
bound
sub
sub
sar
into
es
pop
mov
jp
je
mov
inc
repz
int3
xchg
add
std
repnz
adc
push
pop
inc
pop
mov
jo
lcall
xchg
cli
scas
faddl
pop
sub
ret
popf
cmp
jns
push
bswap
push
pop
imul
xchg
cmp
dec
int
mov
push
mov
inc
into
aaa
fcomp
loope
inc
adc
adc
sub
dec
xchg
and
rolb
cmpsl
adc
jo
sbb
push
mov
xor
sub
and
pop
iret
push
shl
test
pop
adc
pop
sti
in
shr
sarl
inc
lret
ds
and
inc
fs
push
test
sahf
stos
movsl
xchg
and
repz
sahf
pop
aaa
mov
push
cwtl
push
inc
out
cmp
sub
jb
mov
in
int
dec
xchg
push
in
sbb
mov
loopne
or
sub
cmp
addr16
xor
or
ds
push
addb
outsl
jecxz
xor
push
pop
pusha
fisttpl
jo
and
pop
inc
mov
iret
dec
scas
mov
arpl
push
icebp
xchg
jne
or
add
mov
cmp
fisttpl
mov
scas
cwtl
push
dec
jnp
in
aas
js
sti
fldt
popf
add
fmul
push
add
test
loop
sahf
dec
jnp
sbb
pop
jge
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
daa
stos
cmpl
and
sbb
loope
push
daa
sarl
mov
pop
xor
lcall
movd
ljmp
popa
jg
stc
sub
imul
cs
aam
cmp
or
mov
xor
jmp
jl
leave
sbb
scas
pop
adc
mov
ret
jae
enter
adc
dec
xchg
lret
or
and
out
cmp
sbb
cmp
imul
test
mov
sub
push
inc
add
and
stc
mov
cmp
insl
dec
shl
ds
mov
push
lods
cli
mov
hlt
xor
push
cmpsl
push
dec
es
cmpsl
cmpl
adc
scas
bound
pushf
xchg
adcb
rcrb
lahf
aas
inc
leave
add
into
jo
adc
orl
movsb
xchg
pop
adc
xchg
decl
mov
roll
outsb
stc
dec
pusha
xorl
lea
jl
scas
fcoml
dec
imul
sti
jmp
call
nop
aaa
test
xorb
pop
addb
add
add
mov
and
std
xchg
loope
dec
cmp
mov
dec
roll
jecxz
cmp
adc
data16
mov
popa
pop
vrsqrt28ss
rcrb
int
sbb
mov
pop
mov
adc
sbb
cmp
shll
stc
adc
pop
and
das
pusha
fidivs
in
xor
cmp
iret
lret
insl
icebp
inc
popa
jg
int
adc
sbb
into
pop
jecxz
sub
dec
movl
adc
je
push
flds
xor
jns
mov
lea
je
fwait
orb
cmp
pop
mov
mov
sarb
sar
push
push
cmpsb
test
in
orl
cwtl
dec
lcall
shll
pop
loop
push
sub
mov
cltd
sbb
adc
sarl
popa
sbb
scas
jp
fisubl
je
loope
inc
sub
pop
cmpsb
sub
andb
xor
roll
scas
lock
adc
test
mov
inc
jo
xchg
or
ficoml
fdivr
jecxz
lds
mov
and
and
insl
es
repnz
aam
test
ss
mov
ja
cmp
jns
fistpll
fisubs
bnd
cmp
inc
sub
xor
dec
std
jns
jp
pop
sbb
cs
addr16
cmp
sbb
cli
dec
mov
xor
and
adc
scas
je
in
push
xchg
cmp
mov
sbb
dec
ret
push
or
repz
add
push
popaw
mov
pop
dec
push
loopne
popf
leave
push
pop
add
in
imul
pop
push
pop
push
mov
inc
adc
stc
out
jne
insl
adc
dec
in
dec
xchg
jle
fisttpl
jb
sub
adc
clc
cmp
mov
add
fmuls
decl
ret
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
fldz
dec
jle
jns
sbb
adc
sbb
cmpsb
cmpl
cmpsl
dec
cmp
out
mov
sahf
jbe
scas
sti
cwtl
or
sbbb
fs
leave
stos
and
mov
lret
scas
in
je
das
in
pushf
jp
mov
mov
cmpsb
daa
andl
dec
push
dec
dec
je
aas
stc
in
fldcw
pop
push
jecxz
inc
bound
xchg
cmpl
inc
dec
nop
dec
xchg
sbb
loop
pop
jae
out
pop
outsl
and
movsb
aaa
push
fcoml
fdivr
xchg
andb
scas
test
andps
inc
cld
movsb
cmpsl
stos
pushf
sbb
inc
push
mov
mov
lods
test
loopne
dec
icebp
adc
ja,pn
fsubr
cmp
pop
rcl
cwtl
fildll
xchg
mov
and
xor
mov
pop
addl
fbld
sub
mov
mov
sub
scas
out
in
repnz
inc
xor
pop
loope
pop
dec
xchg
pushf
outsb
jae
hlt
xor
les
clc
out
mov
hlt
out
adc
or
mov
sub
mov
iret
lret
push
pop
xor
add
in
and
jl
stc
jo
add
mov
frstor
mov
int
adc
mov
ret
test
testl
rcrb
mov
jl
jp
test
lahf
jae
mov
aam
mov
jbe
xchg
mov
sbb
and
rorl
dec
sti
mov
cltd
call
stos
and
outsl
out
fistps
mov
mov
xchg
mov
push
push
mov
mov
pop
shlb
mov
push
inc
sbb
mov
xchg
ss
jl
dec
hlt
pop
adc
cmp
lcall
out
cmp
pop
pop
ss
clc
xchg
mov
out
fdivl
cmp
into
xchg
cld
pop
pop
cmp
jle
pushf
xchg
inc
lret
movsl
lock
sub
mulb
gs
sbb
adc
in
icebp
pop
ret
sub
ljmp
les
add
push
mov
xchg
jge
jg
push
mov
mov
sub
ret
add
cmp
pop
sub
mov
mov
enter
dec
sub
mov
loop
popa
sub
cmpsb
or
and
xchg
cmp
cmp
test
or
aas
rcrb
cld
and
xchg
add
push
or
add
iret
shl
adcb
add
push
mov
and
inc
or
mov
imul
push
popa
imul
mov
add
pusha
into
adc
push
mov
cmp
in
nop
ror
jnp
push
test
and
jae
iret
addb
mov
loop
sub
outsl
jo
or
xchg
jae
or
dec
sbb
push
jl
inc
sub
xchg
into
pusha
into
in
test
sub
lret
or
mov
iret
out
inc
cli
aam
sbb
or
pop
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
fadds
sbb
adc
sbb
rcr
hlt
mov
scas
inc
gs
dec
pop
push
out
cmc
push
fsubr
ds
cmpsb
xchg
mov
stos
cvtpi2ps
push
dec
icebp
jmp
pop
push
repz
insb
dec
orb
fldpi
pop
out
out
push
movsl
iret
imul
dec
out
lahf
mov
inc
cmp
sbb
sub
fwait
into
cmp
sbb
ss
clc
push
xchg
nop
dec
dec
ret
sub
push
mov
pop
shr
xor
sbb
fstl
sahf
lea
loope
ss
and
and
lret
out
jecxz
pop
pop
cmp
jo
lods
cmpsl
das
call
sbb
test
scas
and
movsb
and
jno
lret
dec
lret
inc
xchg
and
lret
xlat
and
mov
fwait
je
xor
xchg
or
arpl
pop
rcll
cld
jno
popf
mov
push
push
ljmp
cs
les
repz
cmpsl
jl
lods
lock
insl
xchg
push
test
stos
idivl
orb
xor
stos
addr16
push
fnstcw
enter
pop
push
or
xor
inc
sub
xor
fadds
pop
add
lret
cld
inc
xchg
xchg
pop
fsubr
jno
test
in
es
lret
xchg
out
xor
in
jecxz
cld
stos
ja
sahf
sti
aas
or
ljmp
sbb
sahf
pop
mov
cwtl
pop
mov
add
test
cmp
jp
push
cld
icebp
cmp
dec
loopne
cmp
lahf
push
mov
pushf
roll
iret
push
dec
cmp
mov
cmpsl
mov
add
repz
xchg
lahf
aas
in
sbb
pop
inc
xor
les
fbld
into
js
imul
stc
mov
lods
cmp
icebp
in
mov
jge
sbbl
divl
xor
scas
cmpl
sbb
mov
sub
fbld
pop
mov
mov
nop
jl
jns
fdivl
sub
dec
jbe
mov
pop
or
xlat
daa
shlb
dec
mov
or
or
xor
push
inc
xchg
jnp
jnp
dec
pop
shlb
es
jle
sahf
jb
cmp
shl
adc
rorl
fs
push
scas
and
lods
pop
shll
out
hlt
push
negb
enter
xor
lea
cmp
out
stos
scas
pop
inc
mov
mov
stos
mov
mov
xlat
mov
stos
pop
inc
ljmp
testl
adc
sub
xor
jge
insl
rclb
retw
xor
nop
pop
pop
inc
jo
inc
pop
jb
add
xor
jno,pn
sbb
fcomp
faddp
push
dec
xor
jmp
gs
sub
mov
or
add
mov
leave
lret
call
or
push
leave
test
imul
sub
addr16
mov
cmp
div
adc
stos
rclb
icebp
mov
out
pop
cmp
xor
sub
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
mov
push
sbb
adc
sbb
cmp
idiv
mov
xor
sbb
and
lea
push
sub
pop
test
adc
ljmp
add
rcll
push
pop
jb,pn
loop
dec
xor
push
subb
jp
mov
xchg
jg
dec
hlt
cwtl
jne
xor
pop
lds
jecxz
adc
stc
mov
xchg
iret
dec
xor
mov
fisubs
xchg
into
or
shrl
or
movsb
mov
mov
mov
dec
ret
push
jo
iret
pusha
push
lods
push
lock
push
sar
mov
out
cmpsb
and
push
mov
adc
out
test
push
push
and
add
int
jns
movsl
jmp
mov
fwait
cmpl
sub
or
or
adc
imulb
nop
repz
cmp
out
test
int3
push
mov
or
fisttps
mov
je
mov
dec
mov
inc
aam
lahf
imul
ljmp
lret
scas
jmp
leave
push
scas
pop
adc
es
sbb
aad
movsl
pop
ds
sub
cmp
shll
pusha
ljmp
jne
lea
sbb
jmp
stc
cmpb
aas
ljmp
fwait
clc
lcall
std
pushf
jl
imul
repnz
mov
push
out
mov
call
xchg
das
popf
push
pusha
xchg
push
lret
nop
sbb
int3
scas
in
jae
pop
jecxz
test
xor
cs
mov
dec
cli
inc
and
xor
pushl
test
adc
jo
sub
stc
ds
jge
fdivrp
dec
and
int3
mov
cli
push
fldenv
lahf
subb
sarb
mull
sub
cmp
jns
push
daa
cmpl
lret
mov
daa
xchg
adc
xor
xchg
cmp
ret
fs
jb
jl
mov
arpl
dec
jge
gs
xor
push
pop
outsl
or
dec
sti
sbb
pop
and
mov
test
xchg
jl
jl
in
outsl
sti
insl
je
jecxz
or
test
cmp
xchg
fwait
adc
ret
add
dec
pusha
pop
nop
neg
stos
outsb
les
inc
inc
mov
mulb
jg
ret
mov
in
dec
xor
or
pop
out
popa
loope
les
cmp
js
jno
xor
mov
stos
fldl
outsb
or
in
mov
das
mov
enter
cltd
les
and
lods
inc
rcrl
push
jae
mov
mov
aaa
cmc
ds
jae
popa
push
stos
pusha
add
adc
ds
push
mov
pop
aas
and
enter
mov
fcmovb
iret
pop
popa
push
loop
push
mov
test
dec
int3
dec
mov
fcomi
sbb
dec
nop
ds
call
stos
inc
das
cli
sti
enter
mov
mov
push
jne
divl
xchg
pop
push
scas
mov
inc
jno
mov
aad
sbb
movsl
pushl
and
int3
sbbb
repz
pop
jae
xchg
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
rolb
push
sbb
adc
sbb
jmp
push
mov
into
stos
fidivl
mov
jo
cld
test
jle
test
xchg
jb
push
insl
adc
les
mov
in
rorb
jecxz
add
sbb
add
push
pushf
or
sbb
cltd
int3
das
shl
das
and
mov
rorl
stc
adc
out
in
cmpsb
xchg
imul
jmp
jns
in
pusha
movsl
mov
jbe
cmp
imul
gs
out
lock
test
aaa
mov
sub
popa
xchg
and
inc
int3
or
or
pop
inc
icebp
dec
orb
mov
int3
sahf
fwait
or
das
vfrczps
push
dec
popf
add
in
push
mov
dec
mov
sti
jae
insb
sub
loope
in
hlt
or
jl
mov
roll
popl
push
je
sbb
cmpsl
pop
add
jl
push
fdivr
std
xchg
adc
cltd
lcall
mov
mov
jg
test
xor
addr16
clc
pop
and
jmp
lret
xlat
stos
adc
cmpsl
pop
add
mov
sub
jne
fstpt
loopne
adc
mov
add
dec
inc
and
pminub
fldl
xor
push
add
std
cmp
in
inc
popa
mov
jecxz
pop
fld
subb
add
cmp
in
insb
lods
mov
int
fs
je
or
push
mov
ljmp
jmp
jle
out
ljmp
lahf
sti
pusha
cmc
mov
cltd
imul
fdivrs
fsubrl
inc
jp
sub
enter
ret
pop
or
mov
xor
in
or
sub
sbb
jmp
sub
dec
sub
test
xor
mov
negb
pop
sbb
idivb
movsl
mov
mov
pushf
push
mov
out
xchg
stos
add
scas
ret
into
test
cmpsb
xchg
lods
movsl
mov
and
and
xchg
add
cmp
add
fistps
sbb
ret
test
push
aaa
test
dec
mov
sub
and
out
cltd
adc
xchg
and
int
shl
and
push
sub
push
pusha
mov
fimull
andb
clc
jo
aam
loopne
dec
xchg
push
gs
push
mov
pop
sbb
dec
push
or
pop
sub
xchg
popa
pop
pop
xchg
sbb
jge
testl
lahf
mov
stc
mov
mov
mov
rorb
push
aad
popa
dec
inc
ss
lds
push
jnp
or
or
adc
and
or
jne
push
aam
test
or
ret
int3
mov
js
sub
fdiv
pushf
jle
mov
adc
gs
hlt
sti
scas
aam
mov
test
pushf
jo
repz
pop
test
xor
cmp
fsubr
ret
lods
std
addr16
sahf
jl
dec
push
stos
cmp
hlt
fldl
fs
rcrl
out
push
jmp
rorw
das
pushf
daa
int3
mov
lcall
xchg
add
dec
mov
aaa
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
push
loope
mov
push
sbb
adc
sbb
clc
das
stc
mov
pop
jl
mov
cmp
mov
xor
push
loopne
inc
or
pop
inc
inc
dec
mov
pop
mov
outsb
jl
xchg
cmp
xchg
js
add
jmp
out
push
shlb
xor
frstor
cmp
rorl
mov
movsb
jle
hlt
mov
cld
int
jns
iret
mov
int3
xlat
adc
fistpll
jo
movsl
ljmp
push
lret
mov
cld
and
pop
divps
mov
mov
es
adc
jecxz
jae
sub
cmp
addl
push
lock
addr16
outsl
dec
stos
adc
mov
shll
xor
adc
jmp
xlat
aas
mov
jle
jnp
lcall
mov
rolb
fldt
pop
sub
aam
jmp
into
push
xchg
xchg
cs
push
mov
popa
mov
repnz
movsb
jnp
mov
idivl
out
mov
imul
jno
lret
pop
lea
ja
xor
popa
or
or
rclb
sub
sbb
mov
sub
jae
ljmp
inc
add
loope
jnp
sahf
in
pop
pop
jae
testb
and
and
pop
dec
loopne
sti
push
insl
jle
and
roll
lock
lea
mov
out
mov
mov
jmp
mov
lret
test
mov
dec
shrl
push
xchg
and
mov
push
outsl
popa
mov
pop
mov
dec
sub
dec
insb
pop
cmp
inc
fsubr
rol
sarl
push
mov
repnz
sbb
daa
or
xchg
push
sbbb
cwtl
xor
ds
movsl
ljmp
lcall
adc
fiaddl
and
in
movsl
cli
jp
in
rcr
xor
scas
int3
mov
mov
shrb
out
ljmp
pop
sbb
in
in
and
pusha
jno
dec
adc
jecxz
push
lahf
neg
sub
xor
pop
outsb
call
bound
xor
mov
popa
push
mov
sbb
and
repz
push
xlat
outsl
lret
xchg
or
xor
jge
push
out
dec
xchg
jo
scas
out
mov
into
push
xor
imul
sub
mov
paddsb
cmp
add
mov
ds
outsb
jmp
andl
jmp
cwtl
pop
dec
jg
xchg
or
les
xor
mov
and
mov
sbb
adc
xorl
mov
jb
mov
push
es
sahf
fildll
call
mov
ret
int
cmpsl
hlt
xor
pop
lea
inc
in
into
rcrb
stos
daa
push
mov
roll
fisubrl
adc
test
out
call
gs
scas
push
and
inc
xchg
push
mov
cmp
inc
in
movsl
pushf
push
ja
fsub
push
bnd
mov
push
mov
popa
mov
imul
adc
push
pop
adc
mov
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
pushf
repnz
push
push
sbb
adc
sbb
cmp
outsl
push
jle
adc
pop
hlt
cli
sub
jns
push
sti
fildl
mov
fwait
jns
mov
lock
ret
repz
push
roll
pop
in
data16
ja
dec
adc
sbb
addr16
push
adc
int3
jge
fldt
inc
pop
cmp
sti
jecxz
mov
arpl
cmp
pop
push
push
adcb
xchg
mov
and
in
pusha
push
fcoms
inc
dec
mov
adc
cmp
roll
mov
or
add
mov
jmp
movsl
insb
and
inc
aam
dec
aas
std
mov
mov
xchg
test
in
movsl
inc
mov
icebp
std
fucomip
hlt
push
icebp
dec
mov
out
push
push
push
out
adc
sahf
mov
movlps
iret
icebp
mov
sub
cmpsb
out
testl
push
sti
pop
out
shl
mov
lcall
mov
sbb
popf
cmp
test
into
mul
or
inc
mov
addl
lcall
decb
push
mov
mov
jb
out
sti
sbb
xor
mov
pusha
jo
or
dec
pop
push
in
daa
sub
stos
or
mov
jmp
cmp
adc
and
adc
es
push
lea
mov
into
adc
adc
mov
shlb
mov
loope,pn
cs
adc
xchg
adcb
jnp
xor
or
pop
jecxz
push
xchg
out
mov
dec
adcl
mov
ljmp
in
hlt
jae
popa
push
mov
lahf
sub
notb
push
push
xor
jbe
xor
push
push
in
xor
dec
call
xor
mov
sub
mov
cmpsb
in
push
les
addb
clc
mov
fsubr
aam
pop
cs
xchg
push
inc
mov
repnz
mov
jmp
push
movsb
imul
adc
fsts
xor
cmpsb
lods
stos
pusha
repnz
imul
pop
std
jae
out
jno
sub
rol
adc
jl
scas
bound
ret
dec
or
loope
shlb
mov
out
or
push
add
lock
fisttpl
jg
sahf
push
pop
push
stos
repnz
and
pop
faddl
and
mov
jae
mulb
jne
adc
sbb
in
mov
enter
jns
sbb
mov
push
es
nop
not
xor
pop
push
jg
dec
jns
sub
xor
and
mov
xor
std
jns
dec
mov
ret
movsl
insl
pop
clc
and
cmp
xchg
and
mov
mov
dec
enter
nop
ret
cmpsl
je
adc
stos
pop
adc
adc
movsb
and
vpmadcsswd
and
push
adc
push
into
fs
add
pop
jecxz
mov
fs
imul
adc
fsubrp
pop
xor
rclb
pushf
fsubl
bound
mov
pop
jle
mov
shlb
leave
shrb
sub
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
imul
sbb
and
dec
repz
pop
sub
sbb
inc
fnstenv
mov
cmp
push
mov
mov
pop
faddl
or
hlt
sbb
or
lret
or
inc
out
mov
jne
jb
jecxz
nop
mov
inc
push
pop
mov
mov
mov
mov
pop
or
mov
rorl
mov
inc
lods
cs
lods
mov
jg
icebp
pop
cmc
lock
lods
int3
push
or
out
shlb
daa
mov
sbb
mov
test
push
sbb
insl
je
aad
jo
in
int3
int3
dec
mov
sub
lock
cmpl
push
mov
out
jb
aad
pop
xor
push
sub
jne
cwtl
inc
lods
mov
sti
cmp
inc
mov
mov
out
dec
std
rcr
inc
out
inc
sbb
jp
cs
enter
sub
sbb
mov
inc
outsb
inc
adc
aas
push
push
dec
pop
ljmp
fidivrs
adc
xor
ficoms
inc
mov
je
lock
repz
and
mov
sub
dec
xchg
adc
jl
sub
push
add
add
repz
jns
outsl
xor
jl
in
mov
sbb
xor
jo
and
lods
repz
scas
push
adc
cwtl
pop
push
mov
push
mov
push
mov
ret
xchg
pop
add
clc
stc
ret
pop
cs
orl
gs
loope
sbb
out
je
jmp
lds
popa
jmp
aas
movsb
sbb
sub
add
repnz
push
scas
dec
mov
jnp
cmp
xchg
or
insl
test
push
add
out
pop
inc
repz
mov
jb
jb
les
cld
adc
push
adc
adc
inc
jbe
mov
dec
pop
pop
das
fisubrs
push
lods
ror
cli
call
add
mov
pop
mov
test
cmp
insb
scas
push
gs
mov
js
push
xchg
pop
dec
repz
aam
xchg
iret
in
push
loopne
fistpl
cmp
mov
movsl
mov
pushaw
pop
mov
rolb
fnstenv
mov
cwtl
jge
hlt
inc
aad
add
and
or
or
push
jnp
fisttps
std
mov
jnp
ja
imul
cmp
sub
pop
mov
ja
xlat
xor
push
jg
pop
xchg
popf
mov
xchg
push
pop
sbb
aam
loopne
xor
das
cmp
mov
pop
pop
mov
fwait
adc
popa
ljmp
jecxz
mov
out
stc
lea
dec
and
outsl
mov
xor
xchg
xchg
imul
cmpsl
sbb
mov
mov
inc
enter
jo
add
mov
cmpl
jg
inc
inc
cli
das
xor
sbb
sahf
add
shl
test
fistl
push
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
and
sbb
adc
sbb
roll
out
fdivr
je
mov
add
jne
sub
push
mov
cmc
jbe
sahf
pop
bound
loopne
repnz
int
in
add
xchg
cs
dec
jle
or
sub
adc
adc
fists
andb
jb
adc
mov
je
xchg
in
cmp
arpl
imul
out
jle
data16
out
inc
out
stos
adc
mov
mov
lods
mov
test
int3
push
adc
loop
dec
mov
inc
dec
dec
loopne
xor
dec
stos
cmpsl
jecxz
adc
jmp
xor
add
lret
adc
sub
lds
mov
iret
in
sar
xchg
fwait
cwtl
ljmp
adc
mov
js
in
sub
mov
mov
sbb
das
add
test
ficoml
andb
cld
xchg
fwait
enter
jmp
icebp
loope
addb
jp
ja
cmp
fistpl
pop
ds
or
stc
das
in
sbb
daa
cwtl
or
xchg
cmc
addr16
jbe
ret
jle
and
jns
in
mov
xchg
loop
inc
inc
xchg
sti
shll
adc
adc
or
jmp
cltd
sahf
push
pop
xlat
mov
call
lahf
insb
mov
jecxz
loop
mov
sti
sbb
fincstp
les
jns
js
mov
lods
and
pushf
in
fistl
enter
pop
in
out
mov
addr16
outsb
mov
add
xchg
cwtl
cmp
js
mov
std
rorl
xchg
xchg
push
or
rcrb
lods
dec
xor
movb
lcall
es
fsub
es
adc
push
jnp
dec
cmp
or
push
mov
mov
inc
sti
loop
mov
movsl
out
sarb
dec
sbb
xchg
ljmp
test
gs
bound
and
mov
pop
in
jmp
pop
dec
inc
outsb
pop
pop
pop
fimuls
add
and
ds
push
mov
dec
inc
pop
pop
in
les
lea
sub
jno
repnz
sbb
out
leave
push
cmp
imul
pusha
dec
jne
lods
lods
dec
sbb
pop
dec
jp
pop
mov
mov
sub
pop
mov
into
pop
test
pop
push
fucom
dec
push
in
sub
decl
testl
mov
xor
dec
push
stos
shlb
or
dec
sub
xchg
add
or
lock
inc
sub
jmp
iret
and
jp
hlt
push
xor
push
inc
pop
shr
push
adc
mov
push
ljmp
imul
xchg
pop
out
ret
mov
pop
rol
daa
adc
lods
mov
and
stc
jmp
shll
mov
mov
and
adc
inc
push
adc
je
inc
lea
jmp
shl
mov
out
sub
in
subl
push
xchg
addr16
jle
and
inc
shr
add
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
push
dec
mov
jnp
push
mov
dec
inc
pop
sbb
popa
dec
mov
bound
fidivrl
bound
icebp
rorb
es
mov
bound
jo
add
ficoml
mov
dec
jbe
gs
clc
repz
inc
lcall
insb
dec
adc
add
dec
pop
xchg
inc
and
lret
sub
lret
into
clc
sbb
shrb
jle
in
rsqrtps
lea
or
dec
pushf
dec
aad
mov
lods
xor
rolb
push
int3
enter
ret
lock
test
adc
sub
stos
jmp
ljmp
xor
push
shrl
pop
cmp
mov
mov
idiv
sarb
or
add
iret
mov
inc
arpl
push
dec
movsb
ja
cmp
lods
pop
adc
iret
imul
adc
adc
sub
dec
sub
lods
cld
popa
roll
fmuls
mov
data16
jo
inc
ljmp
fstpt
adc
add
add
sbb
out
jns
add
dec
push
mov
add
mov
dec
pusha
std
andl
icebp
arpl
mov
sbb
mov
xlat
jns
adc
cmpsl
fbstp
jne
pop
adc
add
or
mov
flds
and
lods
cltd
sub
and
fisubrl
mov
sbb
sbb
mov
sbb
push
cltd
push
xchg
int
inc
and
cmp
je
popf
jle
xchg
mov
ret
iret
inc
cmp
sub
aas
push
call
add
adc
filds
stc
or
sbb
jbe
lock
pop
pop
sbb
popf
test
mov
fsubr
xor
mov
int
es
inc
sub
mov
std
int3
push
cmp
inc
or
daa
fidivrl
lret
add
sub
jge
xor
xchg
add
sub
mov
scas
lods
cmp
incb
testb
jmp
cmp
aad
jbe
xlat
fmuls
mov
xlat
jl
adc
and
cmpsb
xor
adc
dec
or
fidivrl
mov
sub
pop
cmp
inc
sub
call
lock
jmp
out
pop
sbb
sub
loop
sub
in
xor
ljmp
pusha
mov
mov
dec
jle
repz
sub
mov
sbb
dec
stos
mov
xchg
push
dec
imul
pop
sahf
test
lea
jno
fiaddl
mov
jle
insl
mov
xchg
pop
int
ret
mov
jmp
mov
xchg
imul
sub
fimuls
aaa
adc
pop
push
and
jae
push
hlt
xchg
gs
push
xor
and
daa
pushf
push
scas
les
mov
lea
bswap
std
hlt
inc
es
fwait
cmc
push
sbb
pop
or
into
jmp
fstpt
adc
cmp
jp
in
aam
pop
cs
ds
test
leave
lds
adc
aas
sub
test
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
mov
and
sbb
and
clc
insb
push
mov
out
loop
xchg
mov
pop
outsl
es
dec
xchg
sbb
jp
mov
and
adc
ja
xlat
sub
stos
lret
add
mov
inc
ficompl
pushf
dec
xor
cmc
mov
out
outsb
stc
insb
movsb
mov
pop
xor
cmc
mov
filds
pop
ljmp
out
ja
jne
das
inc
mov
mov
xchg
xlat
sahf
xchg
out
test
mov
addl
or
push
das
push
int3
xor
ds
inc
pop
in
outsb
adc
add
jne
aas
adc
sub
xchg
and
inc
mov
ret
enter
xor
xchg
into
stc
pop
std
scas
lcall
loopne
cs
push
add
cld
mov
mov
lret
fldcw
aad
dec
xchg
out
lock
mov
sbb
jno
lcall
nop
jle
outsb
push
mov
mov
inc
inc
inc
std
xor
je
mov
dec
mov
sub
mov
fimull
adc
ja
xchg
xchg
or
scas
or
mov
outsb
lods
les
ljmp
mov
mov
mov
mov
jmp
cli
ret
mov
aam
andb
lods
fmulp
xchg
xchg
addr16
test
gs
xor
pop
cmc
out
out
pushf
lcall
mov
dec
pop
aas
cwtl
fnsave
popa
fcmove
jle
out
xor
add
fdivp
xchg
xadd
popf
fstpt
sbb
int
fcomps
ret
mov
cmpsl
dec
test
jecxz
fimull
insb
daa
sbb
jae
roll
cli
add
pop
flds
push
jp
stos
js
mov
and
and
mov
adcb
stos
sbb
adc
push
xchg
test
sbb
mov
lret
stos
cmp
aad
fisubrl
iret
nop
adcb
lcall
sbb
lcall
rolb
mov
sti
cmp
dec
ret
outsl
sub
sub
shl
mov
xrelease
rcl
inc
mov
dec
sahf
adc
sub
dec
sub
adc
dec
jl
xor
incb
inc
dec
je
xchg
push
sbb
xor
mov
imul
mov
jnp
ret
enter
les
mov
xor
inc
in
xchg
mov
pop
out
inc
data16
mov
mov
jp
jecxz
test
adc
stos
pop
test
in
rol
shlb
cmpl
sti
ds
sub
push
loopne
fadds
mov
mov
xor
mov
pop
sbb
jbe
mov
xchg
cmp
bound
cmpsl
das
lds
sahf
into
test
cmp
pop
xor
lret
aam
in
push
imul
rorl
add
xor
inc
enter
adc
dec
sbb
pusha
sbb
mov
inc
add
add
cmp
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
lods
outsl
mov
xor
sbb
adc
sbb
jns
mul
xor
push
out
cmp
aam
int3
pushl
mov
shll
or
ret
dec
sub
or
popl
or
add
ret
xchg
inc
mul
hlt
rolb
mov
push
jo
or
mov
rcll
jge
jge
aam
and
mov
mov
pop
in
loopne
mov
inc
jecxz
loope
cmp
or
aaa
bound
jnp
jbe
daa
test
ret
daa
cld
mov
pop
std
fists
sahf
or
cwtl
dec
xchg
ficompl
test
inc
sbb
add
dec
pop
and
pop
in
cmpsb
jo
xor
jg
out
dec
pop
adc
xor
fnstcw
mov
ljmp
fistl
jecxz
lret
fisubrl
jge
xchg
mov
test
mov
cmp
repz
push
popf
push
test
stos
sub
cld
xchg
inc
xor
shlb
aad
add
pop
xlat
cmp
pushf
push
cmpsl
xchg
pop
movsl
outsl
lods
insl
leave
ud2
xchg
lods
and
lret
mov
mov
mov
xchg
arpl
repz
das
push
adc
pop
jecxz
dec
clc
cwtl
sub
fldl
mov
add
sbb
out
aas
jmp
xchg
push
mov
or
inc
mov
rcrb
scas
mov
enter
rcll
rolb
jnp
mov
fldcw
fimull
fstl
add
fsubl
and
adc
jbe
adc
dec
push
mov
inc
xor
or
int3
pop
dec
mov
sbb
xor
ja
pop
out
sete
inc
lahf
mov
dec
andl
or
call
aam
xor
xchg
subb
bswap
aam
pop
jecxz
cmp
and
jnp
or
ret
ja
or
cmp
or
es
fildll
xchg
and
data16
add
push
inc
aam
lea
pop
jo
bound
push
push
out
xor
mov
sub
movsl
jp
call
nop
es
or
scas
decl
in
jbe
js
repz
push
test
mov
jmp
fldt
repnz
ja
sar
mov
daa
test
sbb
testl
fildl
mov
or
push
rcr
fists
loope
and
orl
push
cltd
scas
inc
sbb
or
dec
rolb
in
outsb
insb
int3
xlat
cmpsb
or
ljmp
test
mov
xchg
or
das
stc
mov
movsb
inc
stos
mov
popa
mov
inc
mov
push
mov
inc
mov
add
in
cmpsb
pop
mov
xchg
push
add
xchg
ljmp
xor
fwait
sub
xchg
imul
jge
mov
shl
cli
int
cwtl
flds
popf
sub
jecxz
popa
cltd
subb
stos
outsb
gs
sbb
outsb
mov
fcomps
shr
aam
add
cmpsb
dec
les
ja
or
fucomp
push
inc
out
jle
xor
xchg
jnp
jns
mov
mov
nop
dec
jp
inc
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
outsl
push
stos
cli
sub
sbb
adc
sbb
test
daa
daa
movsl
pop
adc
fs
cmpsl
cld
sub
aam
sbb
dec
cmp
pop
cmp
or
sbb
aas
fwait
rolb
pop
sub
out
push
inc
mov
pop
dec
adc
addr16
dec
shlb
xor
clc
adc
pxor
xlat
push
rorl
outsb
rorb
xorl
sbb
or
mov
inc
insl
insl
cmp
in
cltd
and
and
out
push
push
mov
sti
ret
mov
pop
mov
pop
xchg
mov
sub
arpl
sahf
cmpsb
jmp
popf
pop
mov
rcll
push
je
jg
mov
ror
lds
and
pop
push
rcll
jl
popf
or
mov
fsts
jg
push
mov
push
add
clc
into
out
xlat
popa
movsl
ret
sbb
xor
out
and
dec
popa
ret
add
xchg
les
dec
je
xchg
or
jns
popa
xchg
mov
xchg
add
mov
cmpsl
jae
loop
fists
loopne
push
adc
sbb
outsl
mov
and
or
ficompl
or
out
in
fidivs
push
sbb
jne
jecxz
sub
xor
and
insl
adc
cs
mov
jne
push
mov
fldenv
rclb
mov
rcrb
xchg
pusha
or
xor
popf
fnstsw
pop
into
mov
push
loope
mov
and
push
fstps
shlb
xchg
add
inc
adc
cmp
fwait
aam
je
mov
jl
je
loope
mov
adc
pop
sub
rclb
sbb
inc
repz
mov
push
jge
out
icebp
ljmp
stos
push
xorb
and
ljmp
jle
dec
jnp
adc
xchg
call
push
xlat
hlt
test
mov
mov
mov
push
sbb
in
shll
jle
dec
xchg
or
mov
fwait
insb
out
into
sub
cmc
cmpsl
push
jae
insl
cwtl
lcall
xor
xor
inc
test
stc
lds
mov
shr
xchg
js
inc
xchg
xchg
into
xchg
cmpsl
lcall
or
mov
mov
fdivr
mov
xchg
pop
or
pop
push
out
pop
ss
mov
push
cmp
fsubr
dec
jns
addr16
mov
das
xchg
cmc
sub
inc
test
out
sub
inc
pop
into
add
push
jne
iret
ret
out
sub
mov
and
pop
das
fisubrl
push
add
mov
mov
dec
nop
adc
popa
lahf
in
ret
nop
popa
lahf
push
icebp
scas
push
sti
fists
mov
jae
mov
cmc
sub
iret
jmp
cltd
sarl
pop
xchg
inc
gs
inc
fldl2e
inc
shlb
sub
arpl
jb
int3
inc
jne
xor
sbb
fldt
pop
ret
ljmp
aam
xor
pop
inc
fstl
push
popa
dec
jae
ja
pop
aam
and
sub
sub
xchg
cmp
gs
adc
cs
pop
es
mov
and
xor
cmp
ret
je
mov
push
iret
push
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
pop
jle
and
sbb
bswap
xor
ret
data16
add
mov
adc
cmp
popa
pop
outsb
stos
pop
insb
inc
xchg
sbbl
call
mov
and
fsubl
and
jae
and
xchg
mov
add
add
inc
jo
leave
jmp
jno
enter
push
cmp
aas
aad
inc
xor
adc
negb
roll
fwait
sarb
fs
pop
int3
rolb
dec
aam
mov
jbe
int3
test
test
inc
aaa
push
inc
icebp
xchg
mov
fsubrs
push
insb
in
sahf
daa
fnstsw
punpckldq
enter
inc
stos
mov
sbb
sub
xor
shrb
test
push
daa
jl
ret
int3
sub
sbb
in
addr16
mov
icebp
int3
lahf
mov
xor
sbb
dec
or
loop
rorb
sub
sarb
push
inc
fwait
jl
ljmp
inc
sbb
push
pop
dec
lds
mov
enter
jno
cwtl
sahf
pop
mov
mov
or
cmp
xchg
adc
ja
pop
pop
xchg
pusha
int3
cmpsl
and
cmp
add
fistl
xor
xchg
jge
mov
ret
pushf
scas
push
int
rcll
dec
cmpsl
mov
mov
movsb
lret
andb
gs
sub
sub
pop
or
sarb
inc
out
insl
mov
and
sub
sub
lahf
xor
std
rcrl
nop
xor
push
mov
jo
mov
xchg
rclb
push
add
stos
mov
cli
xchg
out
mov
sub
aas
fdivl
sahf
aad
shrl
cmp
mov
jo
lret
adc
lods
js
insl
add
xor
in
jb
out
lock
sbb
ljmp
sbb
add
sbb
movsw
and
inc
push
inc
mov
jl
out
pop
and
or
cmc
pusha
ja
sahf
imul
cmp
lret
cld
test
in
data16
outsb
and
dec
jns
or
xor
xor
mov
push
xor
mov
sbb
ss
fwait
mov
xchg
jo
addr16
ljmp
cmp
mov
out
jmp
push
pop
inc
pushf
adc
stc
jle
ret
cmc
jne
pop
dec
dec
jae
add
pop
loop
pop
or
fucomp
scas
jl
cmp
sahf
jno
sbb
mov
inc
mov
imul
or
sub
insl
dec
ljmp
jns
stos
sarl
fisttpll
pop
cmpsb
rorb
mov
xchg
dec
scas
jecxz
dec
mov
ret
fldt
fidivs
leave
xchg
pop
mov
sbb
out
jle
ret
mov
mov
movsl
daa
aaa
inc
adc
cli
rolb
mov
lea
lret
inc
sub
icebp
adcb
jmp
shufps
sub
imul
sub
xchg
cmpsl
out
sub
jae,pn
sarb
push
das
adc
inc
or
xchg
xchg
gs
ds
push
xor
loope
xchg
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
clc
sbb
jle
sbb
sbb
fdivl
stc
dec
xor
xor
mov
icebp
lods
inc
jl
or
dec
jp
mov
adc
testl
dec
aam
xchg
or
mov
and
lea
fisubl
cli
inc
fisubrs
lret
fistl
sti
cmp
adc
mov
xchg
add
sub
or
mov
mov
test
insl
inc
cmc
xchg
adc
into
xorl
pushl
fcoml
mov
cmp
js
repnz
dec
loope
jne
push
adc
filds
iret
mov
xchg
icebp
adc
xchg
dec
xor
sbb
arpl
or
sub
gs
mov
dec
adc
es
inc
popf
aaa
enter
cli
lea
in
je
aad
movsb
dec
div
mov
sbb
xor
push
push
xor
mov
outsb
or
cwtl
and
pop
call
daa
lret
xchg
pop
xchg
out
stc
xor
or
adc
mov
inc
pop
mov
sbb
ret
je
dec
addr16
mov
adc
pop
cwtl
dec
daa
aam
in
arpl
xchg
mov
ds
fucomip
sub
sub
xchg
lret
addl
mov
jae
and
push
mov
js
cmp
pop
outsl
roll
lods
push
cmc
xor
cmp
in
and
pop
mov
les
adc
in
jb
jae
fimuls
mov
and
shll
sahf
xchg
add
pusha
sbb
movsb
mov
lods
xor
and
in
stos
pop
mov
push
mov
jmp
in
or
xlat
sub
mov
sbb
je
jle
sub
dec
test
test
into
sub
xchg
inc
mov
add
call
adc
repz
push
dec
pop
ds
mov
add
jnp
sub
mov
sbb
negl
xchg
and
pop
push
mov
bound
lahf
cmp
cmc
jle
adcl
push
imul
outsl
inc
imul
shrl
or
add
xchg
addr16
test
jp
pop
mov
stos
xchg
or
pop
add
fdivs
lds
cwtl
and
std
lcall
fptan
pop
jge
das
pop
mov
adc
clc
addl
daa
mov
add
out
push
or
push
push
mov
mov
ljmp
sbb
push
adc
jnp
aad
xchg
test
ret
pop
mov
sub
xor
inc
mov
lea
lret
mov
out
inc
cmpb
jge
popf
call
cmp
mov
out
or
inc
add
fdivrs
lds
test
sti
jne
push
or
push
xchg
rcll
popa
out
xchg
sbb
sbb
jns
mov
jns
hlt
mov
xor
cmp
vmovddup
sbb
mov
repz
xchg
xor
and
out
rclb
sub
daa
jne
jg
mov
mov
into
cmc
adc
push
lcall
push
leave
xchg
adc
mov
lock
pop
pop
push
imul
lock
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
jl
pop
push
sbb
adc
sbb
fwait
mov
add
jb
iret
push
imul
and
pop
ljmp
ja
subl
mov
in
mov
mov
push
fldenv
add
js
stos
js
stos
cmpsl
jecxz
mov
lahf
mov
push
stc
pop
xchg
scas
dec
sbb
mov
cmp
add
into
adc
mov
movsb
adc
push
cmc
ret
movl
scas
insl
scas
insb
mov
push
adc
les
jno
push
xchg
lret
mov
fwait
sysenter
fidivs
es
movsl
les
jno
pusha
cmp
aad
pop
addb
rorb
imul
mov
ss
jecxz
and
lret
adc
jge
arpl
mov
sub
sub
cmpsb
dec
int
inc
or
daa
gs
imul
fsubrl
std
lock
jns
int3
dec
push
ja
jl
ja
fwait
cmp
xchg
adc
fldt
adc
jbe
mov
ljmp
lea
jmp
xor
mov
lret
mov
jae
pop
rorl
push
mov
push
das
enter
mov
xor
out
pop
cmpb
loopne
cld
xchg
cmpsb
test
adc
movsl
pop
insb
push
imul
jno
mov
xchg
xchg
stos
ss
pop
mov
lods
and
nop
in
in
lods
adc
lcall
mov
ljmp
pusha
ficoms
ss
popl
scas
pop
sbb
ja
adc
stos
inc
adc
lret
stos
xor
and
inc
pop
cmp
roll
inc
inc
add
pop
cltd
sbb
xchg
test
movsl
lret
sahf
push
scas
mov
adc
pop
mov
mov
insl
popa
mov
and
or
xchg
cmp
imul
leave
jbe
movsl
xchg
xchg
repz
cmp
adc
sbb
aad
mov
xchg
scas
rcl
popf
inc
in
repnz
fwait
mov
jne
adc
jnp
mov
sub
sbb
xchg
add
add
xchg
rclb
fcomip
shll
shr
idivl
pop
cmp
xchg
aas
repnz
or
mov
xor
repnz
lock
adc
lock
shl
cmpl
push
stos
mov
jbe
fs
xchg
mov
or
jg
mov
daa
fdivrs
lret
dec
enter
lea
in
divb
imul
jnp
mov
xchg
popa
push
cli
mov
in
data16
push
cmp
imul
outsl
pusha
pop
xor
test
jnp
mov
pop
sti
outsl
fsts
imul
push
pop
in
dec
insb
inc
inc
or
fcompp
inc
pop
cmp
fadd
lcall
lahf
and
dec
vmptrst
pushf
lahf
pop
arpl
push
jge
xchg
push
sahf
cmp
fwait
add
ds
lods
mov
repz
in
push
xlat
bound
pop
or
dec
es
jecxz
test
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
push
jecxz
and
push
sbb
adc
sbb
jecxz
sub
or
mov
fdiv
push
inc
xchg
scas
fidivrl
ds
xor
cmpsb
adc
sub
in
push
sub
pop
mov
sbb
cwtl
mov
or
lds
xchg
pop
int
pop
pop
out
cld
cmp
in
jo
stos
pop
sub
or
inc
push
or
cltd
enter
and
jns
daa
sbb
cwtl
lock
fs
mov
cli
add
fidivl
dec
lods
or
jno
outsl
pop
cmc
insl
jo
test
mov
in
fcomi
aas
in
inc
call
incl
inc
mov
mov
mov
xchg
add
xor
dec
aam
lods
insb
cld
lock
shll
mov
xor
rolb
push
mov
jne
std
jns
xor
fildl
sbb
mov
xor
pop
jb
adc
frstor
push
push
stos
inc
negb
scas
and
in
aam
gs
jns
data16
mov
sub
test
pop
pushf
push
mov
pop
and
push
cli
dec
lock
and
cmpsb
add
sub
std
pop
enter
or
add
xor
movsb
or
imul
xor
or
imul
in
mov
nop
and
fmuls
sti
fwait
out
sbb
movsl
clc
sub
xchg
adc
and
push
cli
xchg
fnsave
repnz
jne
mov
bound
test
sbb
std
add
bound
nop
pop
mov
push
mov
jb
lock
fildll
icebp
imulb
popa
ret
mov
aam
ret
xor
sbb
leave
xchg
add
not
xchg
and
jmp
mov
pop
mov
dec
lock
in
imul
adc
jne
mov
rorl
lds
mov
outsl
test
pop
fstps
mov
xor
gs
cmpsl
add
jae
and
xor
sub
arpl
sbb
mov
or
mov
push
xchg
outsl
add
xlat
stos
mov
mov
push
scas
sbb
dec
mov
out
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
mov
add
stos
xchg
add
nop
add
add
add
mov
add
push
nop
add
or
add
and
add
faddl
add
add
add
add
clc
test
add
xchg
add
cld
test
add
add
dec
xchg
add
add
add
insb
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
in
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
cld
daa
inc
add
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
insb
and
add
inc
add
sub
fs
add
inc
add
daa
inc
add
daa
inc
add
inc
add
add
daa
inc
add
es
add
push
movsb
scas
or
movsb
jl
inc
add
inc
add
inc
add
add
add
inc
add
es
add
es
add
inc
add
inc
out
in
inc
add
es
add
xchg
mov
add
inc
add
rcl
pop
xor
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
pusha
and
add
sub
add
add
scas
lcall
das
dec
add
pop
and
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
inc
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
fiadds
inc
add
addb
addb
addb
addb
addb
addb
addb
addl
or
inc
add
addl
sbb
inc
add
addl
mov
inc
add
addl
movb
add
addl
addl
fiadds
inc
add
addl
out
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
incb
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
jbe
inc
add
inc
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
test
add
add
xchg
add
lods
test
add
test
add
test
add
test
add
test
add
test
add
xchg
add
add
xor
add
inc
xchg
add
add
add
push
xchg
add
xchg
add
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
dec
xchg
add
add
add
jle
add
mov
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
je
add
mov
add
mov
add
ret
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
inc
mov
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
mov
add
add
bound
add
mov
add
add
add
mov
add
ret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
add
jl
add
xchg
mov
add
add
rorb
add
testb
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
