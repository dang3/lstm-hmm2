mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
xchg
nopl
jmp
mov
ffree
xor
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
cmp
jmp
mov
sbb
mov
push
mov
jg
out
push
mov
addr16
mov
push
push
pusha
xlat
lret
push
jmp
push
inc
sahf
sbb
rol
arpl
aas
add
call
cmp
das
sub
fmull
pushf
sahf
and
loope
pop
adc
xor
push
sub
loopne
sub
push
mov
mov
and
adc
stos
dec
dec
ret
clc
sbb
adc
xor
xchg
adc
xchg
mov
jns
sub
adc
jg
jp
xchg
aad
lods
in
ds
lods
sbb
cmpsl
js
ret
cltd
pusha
sbb
pushf
and
cwtl
mov
jg
out
out
pop
push
sbb
add
shrl
add
mov
adcb
pop
rcll
jle
repnz
andl
cmc
xchg
fsubrl
cmp
sub
sbb
js
stc
sub
ja
call
cmp
filds
hlt
lcall
arpl
cmc
jne
cltd
cli
flds
movsb
pop
hlt
inc
jmp
jge,pt
adc
mov
inc
sub
cmp
shlb
xlat
cmpsb
pop
int
push
pop
lret
push
jns
testb
push
or
fcmovbe
mov
jae
imul
sbb
xchg
lds
cld
adc
mov
dec
insl
mov
pop
xchg
dec
xchg
mov
jo
push
xor
push
or
mov
mov
adc
cwtl
popf
into
dec
popf
mov
xchg
cmp
push
inc
into
fstpl
xchg
xchg
hlt
test
lds
jmp
fnsave
nop
pop
jb
fwait
mov
sub
adc
jne
mov
xor
jge
dec
ret
cwtl
adc
xchg
cmc
les
ss
std
mov
mov
out
xchg
xchg
dec
enter
pop
jmp
mov
rclb
dec
mov
out
ja
mov
cmp
fimuls
ss
bound
pop
push
imul
dec
mov
inc
cmp
les
and
idivb
lods
inc
jbe
or
mov
pop
jb
out
mov
shrb
cmp
mov
iret
adc
mov
pop
ja
stos
mov
int
dec
inc
adc
es
sbb
and
cmp
mov
inc
push
mov
pop
mov
test
jmp
bound
xchg
jle
pop
inc
jo
insb
cmp
xchg
movsb
fwait
bound
inc
push
jnp
icebp
sub
jo
test
mov
jae
shll
push
and
sbb
mov
mov
fucomip
popa
imul
add
cmc
sahf
xor
sarl
and
sbb
sub
adc
xchg
jb
enter
aaa
cmp
add
fwait
or
stc
outsb
sub
xchg
mov
push
sub
xchg
or
mov
push
xor
sub
push
jmp
enter
mov
dec
leave
and
sbb
cld
add
push
iret
stos
rol
lret
imul
testl
sub
cmp
xlat
inc
sub
ds
sub
pop
in
inc
fidivl
push
lods
je
mov
andl
add
jno
je
cmp
add
ret
lods
popa
nop
and
inc
cmc
shl
add
cmc
insb
in
ffreep
sbb
xchg
rcrl
sbbb
or
out
fs
mov
and
icebp
dec
cwtl
jae
sahf
sub
xor
push
rcrb
sahf
inc
mov
and
jmp
outsl
mov
popa
pop
and
cmp
in
scas
pop
shlb
sbb
jmp
sahf
mov
push
pop
ds
arpl
popf
dec
jb
shlb
sbb
sub
sbb
fmulp
add
mov
popa
sbb
ret
aam
mov
testb
clc
jmp
pop
loopne
xor
or
xchg
rcll
jecxz
xchg
dec
aaa
in
xchg
jmp
inc
cltd
xlat
or
pop
jmp
ljmp
lock
adc
jge
add
jnp
sbb
push
scas
hlt
mov
inc
push
or
sub
jg
xor
dec
out
push
jns
daa
orl
mov
arpl
dec
xor
andl
dec
mov
dec
hlt
jge
dec
cmp
fidivrs
dec
les
enter
daa
aaa
test
cmp
scas
and
add
icebp
addb
push
stos
lds
rcrl
jle
pop
inc
adc
pop
sub
pop
mov
push
jle
xlat
mov
jmp
sbb
cs
jbe
in
sub
dec
sbb
push
jmp
loop
ljmp
mov
mov
lods
mov
lods
in
or
rorl
inc
pop
jns
inc
xchg
enter
mov
and
sbb
mov
outsl
xchg
inc
mov
xor
fdivrp
cmpsb
faddl
xchg
lahf
push
lea
lods
in
negb
push
sbb
jnp
enter
mov
lock
leave
mov
es
mov
and
jg
or
inc
sbb
pop
jne
pop
push
mov
ljmp
xor
mov
inc
push
mov
sub
in
inc
pop
xchg
aaa
aas
rclb
imul
jns
rolb
push
pusha
fsubrl
inc
cmpl
pop
or
mov
adc
out
mov
std
and
insl
mov
xor
loop
insb
adc
fs
push
inc
cwtl
xchg
stos
push
shll
and
fsubr
scas
mov
push
test
push
repnz
cmp
invd
sbb
rcr
mov
les
push
and
cmc
cltd
cmpl
lods
cld
sti
jnp
mov
mov
fistps
adc
mov
push
fstpt
mov
sbb
inc
movsl
aam
sub
add
mov
pop
out
lea
inc
mov
mov
add
mov
mov
lock
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
pavgw
fistpl
jp
mov
pusha
out
sbb
jbe
pop
lea
in
not
fstps
hlt
jmp
out
pop
mov
adc
rcrb
pop
xlat
data16
mov
shll
pop
cli
imul
and
ret
int
sbb
inc
test
aam
pusha
or
stc
sub
add
repz
sbb
idivb
icebp
mov
daa
adc
int
mov
jle
cwtl
addr16
sbb
cmp
add
fdivl
out
cmp
inc
movl
mov
pushf
mov
call
cmp
push
add
dec
gs
enter
inc
test
scas
in
aam
mov
lret
xchg
lods
add
mov
or
jne
imul
cli
or
adc
test
cmp
dec
aaa
and
rcl
repnz
jne
and
adc
mov
mov
into
fdivrl
fxch
pop
push
enter
fdecstp
lret
daa
adc
dec
lods
addl
jno
dec
cld
sub
enter
enter
std
push
or
daa
nop
mov
xor
xor
push
dec
test
mov
pop
adc
dec
enter
xor
scas
adc
sub
or
and
ss
push
lret
mov
cmp
sub
cmp
mov
mov
sarl
mov
inc
faddl
pop
addr16
jmp
lods
and
or
push
dec
fmul
dec
in
xor
adc
lds
les
push
stos
inc
ljmp
push
sub
push
push
clc
fsts
adc
mov
pop
incb
inc
cmp
scas
add
adc
add
mov
push
pushl
jne
xchg
test
jno
je
mov
fwait
shl
sahf
scas
lret
jb
les
imulb
mov
clc
aas
dec
loop
movsb
icebp
stc
nop
xlat
repz
push
aam
cld
jle
sub
cmc
push
icebp
xchg
clc
loopne
xor
mov
inc
pop
in
mov
insl
pop
sbb
add
pushf
xor
and
les
test
pop
out
dec
sarb
xor
mov
in
leave
test
ret
leave
sub
cmp
and
lret
mov
and
mov
xchg
xchg
enter
xchg
dec
scas
fs
mov
je
xor
adc
jmp
adc
mov
dec
dec
in
jl
inc
cmpsl
jne
mov
ljmp
jns
sub
leave
xchg
xchg
stos
jg
lret
nop
imul
mov
add
loope
stos
mov
test
test
fisttps
int
xchg
lods
cmc
repz
movsl
lods
cmp
icebp
sti
clc
cmc
jg
inc
loop
rcrl
test
insl
jb
sbb
mov
mov
xchg
mov
in
adc
mov
les
loop
xchg
data16
aad
arpl
hlt
mov
pop
scas
jnp
daa
test
cmp
sbb
xorl
es
dec
sbb
and
popa
ret
aaa
loope
dec
sbb
shl
int
rcll
std
faddl
lret
mov
dec
pop
pusha
fcmovnu
sbb
xchg
out
cmpsb
daa
pop
xor
mov
lret
push
xchg
movsb
loope
jnp
ss
pop
fidivs
cltd
mov
into
xor
cltd
aad
mov
lods
sarb
adc
out
or
jo
xor
xor
in
mov
idivb
or
adcb
jg
pop
incb
push
inc
adc
sub
jle
xlat
xor
jbe
popl
out
add
popa
inc
pop
push
sub
jnp
mov
dec
sti
shl
jge
jle
fidivl
fisubrl
aam
cmp
mov
data16
push
jge
movsb
sub
inc
jne
and
sbb
outsl
les
add
lcall
icebp
xor
cmpsl
repz
pop
mov
mov
and
popf
cltd
mov
adc
fld
es
insl
out
pop
mov
sub
fdivr
pop
shl
pop
lods
cltd
add
into
mov
hlt
jno
push
stos
or
dec
out
mov
incl
mov
xchg
fnsave
sahf
pop
mov
fidivrs
mov
ret
fiadds
fadd
or
lea
in
sahf
mov
cwtl
scas
rclb
loopne
lahf
pop
dec
mov
adc
pop
out
xor
pusha
mov
rol
inc
jae
insb
ds
mov
xchg
xchg
fisttpll
aaa
cld
fistps
mov
sbb
mov
dec
lds
stc
push
xor
insb
into
sti
xchg
inc
notb
shll
fdivs
repz
stos
sub
and
leave
jo
push
inc
adc
push
icebp
dec
clc
cld
mov
mov
dec
sbb
or
int3
ss
and
pop
jecxz
push
cmp
adc
clc
jg
jne
inc
shrb
sbb
sub
sub
mov
push
je
push
adc
imul
stc
adc
fs
fimull
int3
cld
inc
les
in
and
int
ja
pop
xor
jae
out
mov
sbb
mov
push
sbb
pop
adc
cmpsl
out
int
xlat
or
pop
add
sub
jae
fwait
int
xor
out
aad
inc
aam
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
nop/reserved
sbb
int3
daa
push
jnp
loop
out
mov
mov
rclb
imul
pusha
sbb
push
in
imul
neg
lret
push
jp
and
mov
sub
aam
jmp
ss
mov
xchg
push
pushf
mov
popa
xor
nop
mov
jo
lods
pusha
cwtl
test
or
hlt
and
adc
fstpt
stos
xchg
fistl
pop
dec
sub
sbb
inc
shlb
xchg
dec
or
adc
or
andl
insb
jecxz
and
lock
cmp
cwtl
and
fistpll
rcrl
pop
stos
or
mov
jl
cmp
mov
orb
pop
push
popf
push
add
icebp
flds
add
fistpll
mov
std
push
jbe
dec
mov
popa
dec
ret
rorb
movsl
cli
sub
mov
repnz
sub
sahf
jne
xor
cmp
sbb
inc
lret
mov
inc
data16
xchg
ja
or
rcll
mov
out
int
imul
mov
cli
xchg
movsb
cmp
xchg
dec
nop
dec
mov
shl
test
push
sbb
xchg
mov
sub
xchg
and
incb
push
hlt
xor
push
movsb
addr16
fcompl
daa
ret
jp
cmp
push
xchg
and
shll
sbb
das
mov
mov
movsl
dec
xorl
popa
jl
xchg
sarb
jp
adc
jo
fisubl
cmp
pop
mov
xchg
popa
std
fimull
mov
sbb
inc
loopne
sub
sub
sub
stc
inc
cltd
es
mov
or
out
mov
std
fwait
sub
sbb
add
jnp
jmp
mov
jmp
and
div
scas
push
out
adc
je
lret
xchg
mov
add
outsb
test
pop
add
and
int3
icebp
movsb
std
test
mov
lods
sub
movsl
test
movsl
rcr
push
test
jg
outsb
das
xor
jnp
popf
xchg
loop
jge
pop
sub
cmp
movsl
aas
fldt
sub
fimuls
adcl
nop
push
mov
dec
add
fbld
sub
in
loopne
jl
out
in
das
xchg
divb
xchg
xchg
imul
ds
push
mov
jo
dec
fisubl
pop
xchg
mov
iret
push
mov
mov
lret
jmp
pushf
out
sbb
xchg
sbb
ss
push
mov
mov
mov
stc
ljmp
lret
and
idivl
jg
mov
out
cmp
shlb
push
lock
pop
mov
mov
imulb
nop
mov
dec
cmp
jge
popa
mov
xchg
popa
rolb
rcl
jb
pop
mov
mov
test
mov
int
lods
pop
out
andl
inc
mov
cli
ljmp
inc
push
ss
or
xchg
jmp
les
mov
or
ja
out
inc
insb
lods
mov
sub
mull
in
bound
fs
add
data16
jb
lock
mov
and
mov
and
and
cmp
lret
mov
pop
aaa
in
int3
inc
leave
dec
and
adcl
mov
sbb
mov
hlt
jmp
pop
je
push
or
hlt
fiadds
or
shl
ret
aam
mov
sbb
sbb
daa
pop
std
pop
cs
lods
xor
call
adc
out
lea
shrl
jp
movl
add
push
cwtl
or
lea
xor
push
pop
cmp
mov
push
es
shll
mov
mov
push
aam
dec
pop
inc
jne
push
mov
das
popf
sbb
sbb
icebp
cltd
mov
movsl
ds
pop
aad
adc
or
or
repnz
xor
shrb
subl
mov
xor
lcall
xor
mov
pushf
push
sbb
mov
push
into
leave
sbb
loop
push
mov
mov
xchg
mov
mov
jmp
push
xor
andl
mov
iret
cltd
fwait
and
lcall
push
cmpsb
push
adc
ret
dec
aaa
dec
cld
test
sub
jne
mov
mov
stc
mov
inc
int3
jne
pushf
mov
xor
mov
sbb
pop
lods
pop
mull
cmp
rclb
cmpsl
dec
lcall
movb
mulb
popa
lods
test
lahf
xor
out
cltd
mov
push
mov
mov
cmpl
negl
and
and
imul
imul
mov
scas
sbb
xor
scas
in
xchg
add
sar
sub
dec
jecxz
xor
push
jae
adc
sbb
adc
dec
xchg
popa
mov
outsl
xchg
xchg
cmc
jne
push
inc
int3
pop
arpl
lea
lret
dec
iret
lret
das
loopne
popa
cmpsb
pop
xor
xor
mov
mov
cmp
mov
push
dec
mov
add
pop
pusha
das
test
lahf
push
pop
out
sub
cmp
daa
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
je
js
fimuls
pinsrw
pcmpgtw
mov
in
dec
dec
or
mov
adc
test
loop
dec
fnsave
push
and
divps
cmp
hlt
fsubs
add
mov
lock
push
mov
int
fwait
out
pop
mov
ds
sub
cmc
jg
mov
push
mov
fbstp
sub
aas
mov
movsl
pop
mov
popa
jecxz
inc
cmpsb
mulb
xorb
add
mov
out
pop
sbb
dec
jp
add
lahf
fmul
sbb
int3
adcl
push
push
xchg
shrl
out
mov
ficomps
fists
stos
or
push
jo
test
stc
sub
fsub
add
out
inc
sub
lret
gs
je
push
ret
inc
xor
xlat
out
mov
push
out
and
loopne
movsb
lods
decl
xchg
or
test
and
push
mov
push
leave
xor
push
pop
jge
adc
in
ds
roll
or
mov
or
js
lcall
xchg
push
or
jge
ljmp
push
jle
fidivl
mov
mov
push
in
mov
xchg
sub
mov
sbb
in
insb
clc
je
pop
adc
addr16
xor
jnp
mov
xchg
ds
inc
mov
jbe
dec
mov
imul
sub
inc
mov
inc
pop
insl
out
mov
xlat
push
jae
ds
lods
in
insl
inc
fistl
push
out
loopne
stos
dec
xor
add
mov
lods
stos
mov
fcmovnb
fs
xchg
mov
jle
sbb
icebp
mov
rolb
or
pop
push
lds
jns
mov
dec
rolb
pop
xlat
push
sarb
movsl
pop
fidivrl
adc
arpl
in
fmull
adc
jle
fstl
popf
imul
inc
mov
sbb
add
inc
and
adc
fsts
test
jb
xchg
adcl
loope
lahf
pop
sarl
jecxz
xchg
xor
dec
adc
jno
xchg
xorl
or
subl
mov
ljmp
lldt
mov
adc
inc
push
lret
nop
jge
fcomip
sub
ret
sbb
xor
mov
in
sahf
inc
inc
lea
xor
mov
xor
cmp
loopne
cmp
repz
inc
jg
sub
adc
add
push
cltd
cs
mov
insb
gs
loop
mov
mov
aad
sub
xor
jmp
aad
or
mov
adc
xor
ror
sbb
xchg
sahf
scas
ds
mov
dec
insb
scas
fldenv
sar
sbb
cmp
mov
cld
js
data16
call
cmc
cmp
fs
jmp
xor
movsl
loop
iret
xor
pop
adc
dec
dec
in
mov
test
test
dec
aad
arpl
sub
xor
and
fs
dec
repz
imul
xchg
scas
popf
mov
mov
dec
filds
adc
int3
or
mov
and
jp
xchg
popa
ljmp
adc
pop
jo
jge
test
mov
ret
rcrl
or
sbb
data16
popa
stc
sbb
xlat
adc
lods
xor
cmc
mov
shlb
loopne
ret
das
xor
mov
sub
sbb
faddl
lea
dec
mov
or
dec
popf
sbb
clc
xchg
jmp
arpl
or
jg
push
ds
hlt
nop
lods
cmpb
inc
out
pop
pop
ljmp
in
dec
sti
jle
cmp
sbb
jo
leave
aaa
push
sti
inc
adc
lea
sti
jmp
dec
jno
bound
jo
mov
and
nop
test
jo
jb
push
lahf
cmpl
popa
mull
rorb
pop
push
mov
and
inc
out
cs
or
fmull
mov
fisubl
push
ret
mov
add
mov
xor
sub
mov
xchg
xchg
xor
aas
mov
sbbb
or
mov
jle
add
push
aam
pop
addr16
into
mov
sub
adc
test
cs
pop
inc
dec
mov
add
adc
and
andl
push
mov
push
xchg
daa
sbbl
pop
subl
fstpt
stos
lea
mov
push
test
std
adc
inc
test
jmp
mov
cmpsl
lret
sbb
xchg
arpl
xor
mov
fucompp
adc
lret
xor
cmc
lcall
sub
icebp
mov
cmc
sbb
imul
into
xor
into
jb
sub
mov
push
cld
ret
push
sbb
aad
addb
and
loope
jne
push
lds
sub
cli
pop
mov
dec
or
shll
mov
stos
mov
xchg
sahf
lods
cmpsb
pop
insb
push
cmpl
out
mov
cmpsl
mov
mov
je
cltd
nop
pop
inc
jns
nop
into
mov
push
test
push
shll
or
pop
cmpsb
sub
cmpsb
xor
test
push
mov
cltd
cmp
mov
aad
push
xchg
pop
js
and
js
sub
mov
mov
sub
mov
jns
cmp
negl
insb
mov
xchg
imul
loop
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
loop
pinsrw
pmaxub
dec
jge
cmovs
xchg
icebp
mov
xchg
and
fadds
adc
mov
es
mov
aad
jb
push
push
sti
stos
xchg
inc
xchg
iret
ljmp
outsl
nop
pop
test
pusha
pop
int
fs
lret
push
mov
aam
cmp
aaa
sbb
jns
inc
xor
enter
es
adc
pushf
popa
cmp
movsb
or
lods
out
popa
mov
xchg
xadd
ret
iret
dec
cld
mov
inc
fwait
loopne,pn
sub
rclb
xchg
out
shl
loope
mov
jae
xor
dec
ret
jne
ljmp
cs
ljmp
push
loope
jge
dec
jmp
jb
clc
and
sbb
insb
pop
sbb
int3
add
dec
dec
pop
mov
into
and
inc
and
pop
mov
jecxz
movsl
adc
cmp
hlt
mov
fwait
pop
nop
xchg
sub
xchg
ret
pop
xchg
lahf
adc
sbb
clc
popl
add
das
es
nop
insl
sahf
jp
idivb
lods
jae
stos
push
out
mov
fwait
lcall
jle
fcoms
mov
and
test
test
movb
mov
push
fdivrl
lahf
xlat
in
jp
out
addb
adc
ja
out
jle
pop
jae
in
xchg
leave
mov
ja
insl
addr16
push
out
nop
sub
rcr
sbb
and
pop
adcl
mov
or
scas
ljmp
cmp
pop
pop
mov
mov
iret
inc
subl
add
or
cld
call
cmp
cmp
mov
cmp
add
shrb
push
sbb
and
loopne
aas
mov
xlat
jnp
pusha
mov
hlt
loop
lea
and
cld
sbb
mov
mov
mov
roll
mov
ljmp
lods
aaa
popa
mov
stos
xor
mov
stos
inc
xchg
push
das
jge
push
cmovae
xor
test
cmp
sub
in
clc
mov
push
lods
sub
scas
fnsave
push
mov
jg
icebp
das
add
mov
fcompl
sbb
mov
repnz
test
subl
sub
mov
ret
push
in
in
lahf
std
push
arpl
int3
out
fisttps
push
and
out
push
mov
sub
cmp
xor
lret
addr16
outsb
sbb
cmp
sub
les
ss
jb
push
flds
add
in
sbb
sub
daa
pop
ljmp
bound
or
ror
in
xchg
fidivs
or
mov
sbb
cmp
jae
movsl
or
mov
stos
sub
shll
fnstsw
fucom
std
insl
loopne
nop
push
imul
paddq
scas
push
pop
stos
int
mov
int3
mov
xor
push
mov
lods
mov
movsb
fs
aas
addr16
test
shlb
mov
ficomps
iret
inc
or
lret
fistpll
mov
sbb
pop
jge
mov
shll
jno
movsb
insl
dec
int3
xchg
cmp
and
mov
mov
jle
movsb
push
inc
adcl
stos
in
lahf
or
mov
add
mov
dec
push
and
dec
sarl
lea
jo
test
mov
push
addb
or
jne
lahf
repz
aad
xor
xor
xlat
fimuls
cmp
push
pop
xor
mov
aad
or
in
mov
mov
lahf
cmp
inc
adc
pop
mov
xchg
lods
cs
inc
mov
push
fistl
mov
push
xchg
fildll
cmpsl
mov
insl
xchg
insl
jecxz
and
add
inc
push
mov
jbe
sbb
pop
call
cmp
inc
adc
cmp
mull
push
mov
mov
sahf
and
fidivs
adc
pop
xor
aad
ret
dec
adc
data16
jg
jge
sahf
push
sub
sar
or
lret
inc
cmc
jno
hlt
inc
jle
adc
add
out
inc
data16
pop
jae
lea
leave
xor
inc
adcb
call
mov
jl
subb
and
es
push
mov
inc
cmp
lcall
sub
ffreep
and
mov
push
movsl
adc
xchg
aaa
mov
mov
push
test
leave
sub
mov
shrl
fisubl
shrb
mov
sbb
das
dec
es
mov
xchg
iret
daa
imul
cli
rorl
ror
xchg
xchg
adc
pop
ja
add
cmp
or
xor
std
call
add
jge
jb
pop
pop
xor
sub
mov
mov
mov
jle
jmp
imul
mov
lret
cmp
es
test
cmpsb
sbb
sbb
xchg
fwait
xchg
iret
xchg
int
cmpsl
cmp
mov
decb
and
add
ljmp
push
dec
ds
test
arpl
jb
fistpl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
stos
js
rorb
pinsrw
cmovge
in
sub
jo
push
fsts
fwait
in
aaa
loopne
outsb
and
cwtl
jo
test
jecxz
mov
mov
fistpl
loop
std
add
jge
test
fucomip
adc
mov
mov
inc
mov
or
mov
mov
mov
sub
xchg
xchg
fisttpl
roll
mov
mov
icebp
popa
fimuls
out
fldl
lea
jmp
dec
stos
mov
and
movsl
jbe
loope
cmp
pop
add
or
pop
mov
lods
pop
push
sbb
inc
test
ret
cld
xchg
mov
add
mov
cltd
test
dec
xorl
mov
adc
sub
loopne
jg
movsl
mov
fcomp
insb
jecxz
loop
pop
push
test
jnp
mov
in
xchg
ljmp
xchg
ret
lods
int3
add
inc
inc
repnz
inc
pcmpeqw
xchg
xchg
stos
jmp
stos
xor
xchg
pop
inc
mov
xchg
or
scas
mov
dec
ljmp
in
sahf
pop
mov
xchg
dec
rorb
and
lds
orl
insl
xor
je
jle
mov
mov
push
or
outsb
mov
cmpsb
iret
movsb
push
movsb
lret
mov
shl
sub
std
mov
mov
insl
shlb
jmp
cmp
fldl
push
pop
dec
scas
xchg
dec
fs
push
push
icebp
or
push
fidivrl
movsl
and
cmp
nop
push
sub
jmp
sub
jle
push
push
cld
dec
xor
in
adcl
push
imul
std
in
loop
fstl
ljmp
push
lods
pop
std
dec
fcoml
jmp
inc
or
leave
pop
sbb
jae
cmpsl
cmp
cmpl
mov
sarl
cmp
sub
movsl
enter
or
js
sarb
jge
mov
popa
lods
add
insb
or
push
add
adc
xchg
pop
lret
stc
and
xchg
mov
lea
ret
cltd
jno
lret
push
loope
add
push
or
sbb
dec
mov
scas
mov
cltd
adc
jl
mov
arpl
lods
mov
jno
rorl
dec
and
pusha
aaa
ja
mov
sti
adc
in
pop
xchg
sbb
cmpsl
test
cmp
dec
test
adc
fwait
test
test
mov
or
push
cmp
and
or
pop
sbb
inc
insb
out
jno
sbbb
adc
pop
adc
repz
shll
lock
sub
aad
inc
inc
cmp
cmpsl
mov
fcmovne
aaa
int3
fists
inc
mov
xchg
jno
cmpsb
mov
lret
out
out
inc
and
and
data16
inc
int3
xchg
shrl
and
in
push
rcrb
shl
rcrl
rclb
inc
mov
sbb
shlb
lret
imul
aas
and
scas
xlat
and
cmpsb
arpl
outsb
shlb
fistpll
clc
test
inc
cltd
or
cld
out
cld
inc
rcl
or
rcrl
sarl
repnz
lock
push
push
out
xlat
sub
lds
mov
lods
into
aaa
shr
sub
out
dec
cmc
mov
std
fs
jo
gs
aad
punpckhwd
push
mov
sbb
mov
das
dec
inc
mov
cli
xorl
pop
xor
test
adc
cltd
inc
cmp
aam
leave
cltd
jbe
sub
or
jbe
or
jl
repz
rclb
outsl
frstor
sub
into
test
lret
mov
int3
mov
imul
stos
mov
sbb
lret
fstpl
nop
insb
mov
adc
data16
mov
arpl
ret
sbb
dec
sbbb
shrl
push
rolb
xor
push
sbb
push
subl
xchg
and
add
dec
mov
dec
mov
dec
lea
bound
xor
or
jmp
inc
xor
rorb
push
cmp
pop
jmp
je
pop
aas
and
fbld
and
mov
pop
hlt
xchg
mov
loopne
loope
pop
or
mov
hlt
loope
mov
das
jecxz
ja
popf
add
das
push
ret
or
lock
rcrw
inc
iret
add
insb
jl
loope
jle
mov
or
loopne
stc
add
es
or
sub
cmc
std
loopne
cwtl
out
les
arpl
popf
cmp
xor
mov
movsb
mov
xor
mov
mov
add
inc
xchg
xor
and
push
mov
out
pop
add
mov
sub
adc
sub
jae
mov
enter
jp
ret
repz
fldl
out
push
mov
lea
dec
xchg
repz
imul
loop
xchg
repz
leave
xor
mov
into
or
lods
mov
inc
loop
rcll
ds
addr16
push
arpl
es
or
pop
xchg
jnp
enter
xchg
int
and
pushl
fildl
es
push
adc
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
cmpsb
mov
mov
add
movzwl
stos
in
rcrl
dec
xchg
out
ljmp
push
fldenv
pop
les
test
or
dec
shrb
test
mov
lods
inc
jmp
inc
adc
lods
push
xchg
divps
push
mov
fs
shll
mov
cs
or
mov
repnz
out
jns
or
sub
aas
js
lahf
jmp
lahf
xor
cmp
fdivrl
jmp
inc
testl
gs
mov
mov
xchg
popf
xor
fcomps
and
add
shlb
mov
and
lods
in
xchg
mov
push
sbb
insl
arpl
xchg
jb
sbb
mov
aam
and
mov
aaa
pop
and
pop
dec
sbb
push
std
loopne
xor
sub
cwtl
xor
aam
test
pop
adc
jne
push
ret
mov
xchg
mov
cmpsb
jb
push
lods
add
mov
xchg
out
xchg
add
pop
aaa
push
push
pop
jp
and
movb
orb
fwait
xchg
mov
jmp
cs
popf
push
sahf
sbb
jl
sub
jae
bound
in
pop
dec
and
bound
push
push
xchg
fsubrs
ljmp
mov
cmpsw
jne
fnstsw
sub
xor
sbb
lret
loopne
and
lret
inc
pop
cmc
fisttpll
sub
dec
sahf
test
stos
call
insb
xor
adc
aad
mov
pop
pop
cmp
popa
sub
add
test
dec
or
xchg
outsl
js
add
in
sub
jb
mov
in
push
or
into
jnp
sub
add
clc
jmp
mov
pop
jl
test
into
lret
fstpl
push
ficoms
inc
lock
fmul
mov
pop
nop
and
sub
push
xchg
popa
jmp
stc
daa
mov
mov
dec
cmp
shll
jns
jo
lahf
js
mov
push
sub
imul
xchg
loopne
adc
cld
ficomps
or
adc
adc
adc
or
sub
xlat
test
out
cmpsb
jno
xchg
push
xor
imul
nop
pushf
scas
jnp
or
movsb
cld
mov
cmp
loop
loopne
pop
mov
push
inc
notb
dec
cs
inc
push
insl
insl
arpl
vdivps
aad
cmp
adc
leave
stc
popa
loopne
test
in
cmpsb
popa
test
insb
fidivs
dec
push
mov
popa
cmpsb
pop
or
cmc
aad
adc
lret
inc
jns
add
mov
rorb
push
and
cmp
dec
mov
loopne
and
sti
gs
out
push
out
push
adc
mov
or
test
out
arpl
repnz
ljmp
xor
mov
jmp
imul
jg
dec
jl
loopne,pt
jl
dec
std
shrl
in
insb
inc
sbbb
mov
gs
cwtl
pop
inc
icebp
jmp
xchg
sub
in
aaa
dec
leave
rcr
sub
into
out
lret
mov
xchg
jg
lods
mov
ja
xchg
jo
lods
clc
or
adc
test
je
jl
and
mov
enter
add
sbb
mov
sbb
rolb
and
inc
fldl
movsl
movsl
xchg
mov
mov
push
cmpsb
fbld
in
jb
cld
in
sub
jb
adc
cld
adc
inc
pusha
pusha
andl
add
and
dec
sub
sbb
mov
in
and
dec
jl
cmp
test
bound
in
xchg
cmp
lock
mov
push
inc
sub
push
jl
mov
inc
pop
ficoml
adc
push
xchg
pusha
pusha
adc
fwait
lcall
adc
insl
ljmp
add
mov
cmp
adc
mov
sbb
jle
mov
mov
xor
loopne
lods
gs
or
lcall
push
rclb
push
mov
test
ret
or
test
cmpsb
arpl
int3
xchg
movsl
sub
add
fistps
aas
cmp
popa
push
rcrl
mov
adc
in
je
or
pop
repz
sub
hlt
fwait
hlt
repnz
push
jecxz
cmpsb
mov
and
clc
es
clc
sub
movsl
clc
cli
out
test
cmp
mov
pusha
dec
cwtl
loope
adc
adc
inc
pop
negb
dec
inc
mov
push
jmp
iret
xlat
daa
outsb
repnz
jge
iret
or
or
add
lahf
gs
aaa
daa
scas
mov
inc
dec
mov
scas
pushf
or
ret
inc
hlt
ds
pop
add
jp,pn
inc
clc
jecxz
test
hlt
mov
or
pop
sbb
int3
sub
inc
negb
jle
cmp
cmp
mov
ss
xchg
jp
push
mov
sbb
xor
ja
daa
rcrb
push
cmp
jns
add
cld
xlat
pop
mov
jne
lret
sub
rcll
aas
jb
xlat
inc
cld
daa
pop
dec
add
xchg
cmp
push
sbb
add
into
pop
cmp
mov
out
xor
xor
js
gs
jbe
lods
pop
sbb
fildll
dec
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
mov
pinsrw
cmove
mov
in
push
jecxz
and
xor
sbb
cs
dec
aad
out
push
enter
pushf
js
sbb
pop
jb
sbb
gs
adc
cli
cmp
jae
sbb
add
int
aad
nop
adc
lea
add
xchg
fldt
add
fistps
test
das
and
cmc
add
mov
bound
cmp
cmpsl
pop
fdivrs
fistps
or
and
pop
pop
ret
imul
decb
mov
pop
or
lock
pop
or
cld
cmc
lock
call
jl
lods
stos
cmp
pop
nop
mov
adc
and
dec
loope
std
sbb
dec
add
xchg
jne
mov
mov
loopne
fcom
mov
popa
ds
mov
push
cmp
and
or
push
inc
out
mov
repnz
mov
pop
imul
testl
pop
stos
add
scas
mov
mov
stos
push
mov
mov
adc
adc
push
jb
adc
xchg
mov
js
aas
cmpl
mov
in
ret
orl
in
test
decl
cmp
addr16
imul
stc
cltd
ret
cmp
mov
jo
in
sbb
push
in
cld
pushf
std
add
mov
test
inc
stc
pusha
mull
aas
nop
mov
lods
inc
out
dec
add
sbb
data16
in
dec
aad
jmp
cwtl
in
sbb
cs
sub
adc
inc
in
and
cs
js
imul
pop
loopne
lock
pop
push
mov
sbb
scas
pop
in
jae
jns
adc
imul
cli
jp
jno
fdivrs
jl
push
lret
xor
jne
mov
or
jns
rcrl
pushf
pop
and
cltd
mov
pushf
cmp
and
in
stos
nop
mov
aad
sub
rorb
or
mov
xchg
jo
cmc
lret
pop
jmp
jno
fldt
fdivs
push
xor
add
push
aad
addr16
sub
loope
aaa
cld
pop
cmp
pushl
decl
adc
imul
in
sub
sub
mov
lcall
fcomp
push
negl
jge
testb
lcall
in
mov
mov
sbb
gs
xchg
pop
lcall
test
cltd
mov
repnz
lret
je
cld
inc
sbb
ja
pop
lods
sahf
mov
xchg
add
dec
adc
loopne
push
push
adc
subl
dec
in
loop
and
sahf
xchg
insl
inc
std
xor
push
imulb
sbb
rol
and
jl
test
mov
mov
and
xchg
ds
js
test
test
sub
xchg
call
subl
js
inc
sbb
push
xchg
dec
fcomps
mov
ret
scas
nop
cmp
sarb
in
notl
std
clc
lcall
orl
dec
xor
in
int
or
js
pop
pop
clc
aad
rep
lds
dec
orl
push
push
sub
inc
xchg
and
scas
loope
ret
inc
das
arpl
sub
or
xor
xchg
mov
inc
mov
popf
sbb
mov
test
out
xchg
test
lea
lea
inc
arpl
adc
or
std
inc
lock
cwtl
in
int3
out
or
xchg
inc
js
out
push
and
xchg
popa
bound
andl
sbb
add
xor
sub
mov
clc
inc
arpl
lock
popa
xor
push
cmpsb
jns
popa
sub
lods
push
int3
lods
das
cwtl
cs
mov
sbb
movl
or
adc
stos
cmc
fcmovnu
add
and
out
imul
and
loop
aaa
and
roll
pusha
cwtl
sub
mov
test
pop
out
addb
gs
push
add
out
xor
dec
xchg
dec
in
inc
cmp
push
test
push
adc
es
adc
adc
mov
dec
mov
inc
das
out
stos
daa
clc
push
xchg
inc
lcall
dec
enter
dec
or
les
test
scas
bound
repnz
mov
js
sub
sub
cli
mov
fwait
and
ret
mov
inc
pop
lcall
imul
add
lea
dec
sub
cs
in
pop
pop
aas
fisubrl
daa
testb
cmp
shr
decl
loop
jecxz
ljmp
mov
mulb
mov
inc
adc
xchg
or
push
mov
mov
mov
pop
dec
lock
sarl
pop
addl
or
cmc
mov
dec
xor
cwtl
or
add
lcall
fcomp
dec
sbb
test
jp
mov
adc
jl
sub
inc
int
aam
and
or
push
xchg
nop
jl
or
fxtract
xchg
shrb
std
push
aad
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
xchg
ja
mov
pushf
pinsrw
sysenter
test
or
in
jl
fisttpl
rorl
inc
mov
mov
xchg
and
fs
ret
push
mov
and
das
sti
jbe
add
sbb
mov
or
nop
mov
inc
es
fstpl
repz
add
ret
int3
xchg
mov
jle
stos
push
mov
xchg
jl
sbb
lods
insl
xchg
stos
jbe
jg
shlb
insb
add
inc
dec
push
hlt
sbb
pop
push
sbb
sub
xchg
jno
sub
roll
and
mov
jle
fs
sarl
mov
sti
scas
repnz
mov
lea
call
xlat
push
mov
adc
imul
jo
popf
testl
and
cs
jg
lahf
out
mov
and
lea
inc
ds
ficoms
arpl
clc
mov
mov
jg
fidivrs
inc
test
adc
inc
fiaddl
outsl
xor
shll
push
out
insl
inc
shlb
icebp
push
sub
daa
or
fsubrp
popf
dec
popa
pop
adc
cmp
lcall
inc
mov
push
int3
inc
std
not
mov
inc
int
iret
enter
ret
rorb
pop
data16
cmp
mov
xchg
ja
lods
gs
and
mov
cld
sbb
mov
leave
mov
into
imull
fistpll
mov
out
xor
fcmovnbe
jnp
into
rcrl
orl
fs
adc
loopne
cmc
es
scas
push
js
cmpsl
in
fwait
xchg
cmp
sbb
sub
pop
bound
push
xor
ss
adc
jmp
push
and
mov
insb
out
add
sub
inc
lods
jge
cltd
stc
dec
inc
pop
add
jle
call
aas
pop
stc
test
popa
movsl
popf
push
sub
cmp
out
stc
jl
push
nop
add
mov
pop
icebp
mov
add
sbb
push
jno
aam
push
cltd
mov
jecxz
sti
pop
adc
mov
push
fcompl
cmp
mov
pop
shr
dec
dec
or
xchg
repz
pop
ret
aaa
push
fsubl
add
adc
mov
pop
push
ffreep
in
insl
push
inc
jecxz
data16
pop
lcall
mov
rcll
pop
xor
call
xchg
wrmsr
inc
arpl
movsbl
repnz
sub
sub
ret
nop
jecxz
sti
mov
cmc
jb
xor
push
add
enter
rorb
pop
hlt
outsl
insl
scas
jb
aad
adc
pop
push
mov
iret
cmp
lcall
cmp
fists
push
addb
jge
push
nop
aad
inc
sbbl
aad
pop
test
test
xchg
sbb
push
mov
adc
cmpb
rcrb
mov
pop
mov
mov
dec
repnz
xlat
inc
add
loopne
xor
jbe
mov
out
dec
ljmp
push
pop
sub
fstpt
or
xchg
je
fimull
daa
enter
out
mov
lahf
dec
leave
pop
and
sub
xor
iret
test
test
lds
loope
sbb
push
mov
and
scas
jo
insl
data16
xchg
in
imul
mov
fisubrl
fnstsw
mov
into
mov
fwait
outsb
jb
sub
mov
repnz
and
add
inc
inc
cmpsb
rcr
aas
jge
push
add
jbe
rcrl
dec
mov
sbb
je
sbb
test
xchg
dec
mov
fs
and
insb
imul
mov
mov
out
cmp
mov
cwtl
push
dec
pop
std
scas
cmp
test
pop
dec
outsb
ret
fiaddl
nop
xorb
loope
cmp
fwait
nop
cmp
add
add
mov
loopne
mov
lahf
imul
sub
cmp
mov
push
mov
negl
jg
pop
jne
and
and
sbb
pop
inc
xor
insl
inc
arpl
nop
or
jge
andl
or
xchg
popa
jns
pop
xchg
pushf
cli
out
cmp
movb
mov
lret
inc
cld
sbb
dec
jl
test
lock
xor
movl
and
cltd
xchg
mov
fwait
fwait
mov
cli
push
imul
mov
je
mov
inc
mov
nop
pop
sub
mov
mov
mov
or
xchg
dec
in
lods
cwtl
fs
or
sbb
roll
lods
lcall
leave
add
gs
and
mov
xor
mov
mov
sub
inc
stos
push
loopne
cs
sbb
cmpb
hlt
inc
bound
pop
xchg
xchg
rcr
dec
pop
ficomps
sub
cmp
fwait
in
xchg
pop
out
in
jecxz
nop
lock
jnp
and
jp
fildl
jecxz
mov
sbb
inc
and
sub
dec
aas
ljmp
mov
cmpsl
fnstcw
pushf
into
les
and
push
mov
frstor
lret
push
xor
js
jno
mov
xchg
jae
sbb
call
jbe
adc
cmp
jecxz
rorl
pop
fstpl
pop
cli
out
ds
js
outsb
jnp
jbe
cmpsl
push
inc
dec
sbb
xchg
shrl
inc
cmp
aas
xor
test
mov
xlat
jmp
fisubl
add
inc
mov
into
pop
pop
cmp
lret
shr
adc
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
pop
and
pinsrw
setg
cmpsb
jo
or
bound
lret
xor
push
ret
hlt
clc
and
movsl
jns
push
scas
pop
xchg
cmp
sbb
movsb
cmc
mov
pop
pop
negb
aam
dec
notl
push
std
nop
repz
sahf
dec
xor
ss
jno
sub
add
cmp
fcomps
mov
mov
insl
out
bound
pop
sub
xchg
cmp
lds
cltd
fidivl
js
addr16
jo
sbb
leave
movsl
sbb
jnp
jmp
adc
outsb
sbb
mulb
out
adc
std
inc
xlat
xchg
add
loope
mov
xor
jp
dec
cmc
pop
and
xor
adc
idivl
out
iret
scas
aaa
loopne
jmp
roll
mov
adc
xor
lcall
and
std
push
mov
test
rcrb
ret
aas
mov
test
lret
inc
cmp
cmpsb
pop
sub
in
cmp
fwait
jl
adc
cmc
gs
mov
pop
pop
cmp
ret
lods
jge
sub
mov
fs
cli
jecxz
sub
shl
pop
pushw
add
lods
pop
inc
mov
adc
mov
clc
out
leave
push
andl
mov
sahf
and
adc
cmp
in
fwait
jp
testw
xlat
pop
cli
jmp
in
inc
mov
cmpsl
cs
lahf
out
push
lea
es
xchg
lret
mul
dec
push
lret
hlt
insb
inc
mov
inc
fimull
dec
clc
mov
cmpsl
push
jae
dec
jmp
mov
push
inc
test
mov
aaa
sub
push
or
dec
subb
push
std
pop
push
popa
push
test
in
adc
dec
pop
pusha
and
xchg
and
les
jb
das
dec
dec
lds
jl
out
mov
or
jle
jne
in
nop
int
loope
loopne
add
pop
ret
lds
jbe
or
lret
fwait
rorl
jbe
cwtl
insl
stos
mov
mov
fnstcw
push
xor
xor
movsb
push
push
sub
stc
xchg
cmpsb
out
or
sbb
cwtl
mov
inc
jbe
fs
imul
outsb
add
mov
push
lahf
adc
and
xchg
repz
push
pop
or
out
mov
sbb
and
aam
popf
in
jecxz
adc
jmp
pop
aaa
mov
jb
scas
mov
ds
std
push
cld
xchg
add
rcrl
pop
jecxz
xchg
mov
mov
inc
out
rcrl
sbb
into
push
cmp
add
fbld
pop
push
jp
cltd
or
cmc
mov
xor
imul
and
out
mov
in
lcall
inc
aas
adc
and
icebp
dec
xor
xchg
cmp
fwait
mov
pop
ljmp
lret
test
fimull
in
nop
push
inc
inc
xchg
mov
xor
loope
fnstenv
push
lret
xchg
and
push
imul
pop
imul
xor
je
jg
inc
and
dec
nop
fisubs
mov
mov
xorl
or
divl
xchg
or
mov
movsl
sahf
test
jno
mov
or
div
icebp
cli
pop
imul
fs
sbb
xchg
mov
xchg
xchg
call
adc
xchg
lods
pop
adc
inc
inc
cmpl
mov
add
in
pop
scas
xor
adc
xchg
xchg
adc
sbb
sub
loope
or
rcrb
add
sbb
sub
repz
lods
xchg
jle
scas
sub
xchg
out
into
negb
mov
mov
mov
popf
inc
cmpsb
in
push
add
stos
ja
mov
mov
movsb
jbe
mov
and
mov
mov
xchg
shlb
xchg
pop
stc
push
rorl
cmp
adc
inc
andb
dec
lds
aas
out
or
fcompl
leave
adc
sub
imull
sahf
pop
cmp
and
in
add
mov
shl
cmp
paddusw
or
in
inc
repnz
push
inc
frstor
jns
push
mov
mov
arpl
add
inc
hlt
ret
xor
xor
jecxz
adc
xor
mov
mov
imul
inc
test
dec
xlat
cltd
inc
out
popf
imul
repnz
sub
sub
insl
jp
incl
fs
sbb
repz
iret
leave
or
shl
ja
sarl
xchg
lods
jb
xor
adc
push
adc
xor
add
dec
pushf
lds
sbb
in
pop
xchg
pop
testl
mov
addb
sbb
sbb
jo
vmovq
movsb
mov
dec
mov
pop
lods
jns
test
lcall
jge
mov
dec
call
jmp
add
cmp
mov
mov
add
cmp
xchg
ds
mov
mov
adc
sub
cmp
cmpsl
enter
pop
dec
adc
and
pop
flds
outsl
cmp
push
sbb
loopne
in
fidivl
adc
cmpsl
rorb
scas
rclb
xor
lods
and
push
xlat
cli
cmp
int3
push
mov
loopne
push
ficoml
sub
in
lods
dec
jmp
cmpsl
add
jb
cmp
in
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
jne
mov
les
punpcklwd
movsb
pop
inc
mov
or
testb
and
cwtl
test
mov
or
lea
ret
ficoml
push
push
mov
ds
fldcw
add
add
jo
ljmp
push
cld
icebp
fstp
fstl
fwait
xor
xor
adc
jae
pop
sub
pop
cmpsl
sbb
xchg
jnp
cmp
fistps
bound
mov
shrl
mov
mov
fsubrl
daa
shl
fimull
jnp
xor
sbb
arpl
mov
push
jg
test
fwait
xchg
cmp
push
test
prefetcht2
imul
pop
fisubrs
inc
cmp
out
push
inc
cmp
sub
test
sbb
pop
roll
lds
dec
mov
pop
or
sbb
lods
push
int3
out
pop
int
xor
andb
inc
scas
movsb
sub
and
jnp
push
mov
popa
pop
fcmovne
jecxz
mov
push
gs
push
decl
bound
mov
xchg
xor
or
loope
dec
test
cmpb
loope,pt
shl
push
cmpsl
push
pushf
out
mov
into
jge
and
scas
mov
mov
jne
mov
fdivl
push
xor
outsl
fldcw
inc
jne
push
cmc
pop
xchg
arpl
push
and
dec
xor
or
or
fidivrl
adc
mov
mov
cmp
mov
xchg
add
pop
mov
or
jno
cli
mov
sub
jmp
and
frstor
call
loopne
mov
jge
les
mov
mov
scas
fidivl
pop
fs
rclb
int3
inc
pusha
loop
sbb
fwait
push
cmpsb
js
lret
mov
andl
aad
stos
mov
xchg
jp
pop
jnp
out
jae
or
pop
dec
push
dec
xor
lret
gs
rolb
nop
insb
push
repnz
fcmovne
mov
popl
mov
or
jnp
jge
aas
je
fmuls
rcll
jne
in
mov
mov
test
inc
push
pop
loop
xchg
stos
shl
jl
jno
cmp
and
shrb
leave
aas
inc
mov
xor
push
mov
lock
pusha
add
jle
in
arpl
scas
mov
out
jnp
or
sub
mov
lds
jp
jl
jbe
adc
stc
leave
in
clc
push
out
inc
roll
cmpsb
inc
dec
or
mov
imul
mov
mov
and
pushf
or
add
xchg
mov
mov
jnp
push
das
xor
push
ret
je
insl
xchg
xor
mov
adc
push
in
inc
fbld
popf
push
jp
mov
es
decl
enter
into
mov
nop
fucomp
into
xor
dec
cmpsb
pushf
aaa
dec
imull
andl
decb
or
pushf
dec
aam
or
mov
test
or
mov
xchg
cmc
push
test
xor
int
push
jge
movsb
aas
nop
aaa
cmp
test
outsb
add
das
mov
cmc
pop
fsubs
xchg
mov
jns
call
fimuls
scas
fsubrs
mov
dec
dec
and
mov
stc
cltd
or
sahf
mov
push
cmp
cmp
push
pop
ss
mov
xchg
fwait
push
in
adc
ljmp
xor
or
adc
fwait
or
mov
sbb
jle
and
aas
and
mov
popf
mov
cmp
ror
js
jecxz
push
inc
and
mov
dec
sbb
or
stc
repnz
xchg
fldt
push
lcall
aad
rclb
jg
fidivl
lret
mov
test
xchg
roll
dec
lret
mov
dec
jno
ret
jnp
test
in
mov
outsb
cmp
or
inc
leave
mov
pop
outsb
push
fcoms
add
leave
inc
aas
clc
lret
mov
add
ljmp
xor
daa
or
andl
cmp
add
fistps
lret
or
out
push
pop
out
lock
or
jecxz
addr16
repnz
icebp
cli
jbe
and
push
jns
daa
inc
jg
mov
popa
push
add
dec
mov
mov
scas
mov
jae
mov
pop
sbb
mov
or
or
je
pop
int3
push
mov
pop
ljmp
out
sti
lret
or
push
pop
pop
xor
out
imull
push
in
mov
cmc
add
jge
dec
push
inc
pop
hlt
nop
mov
xchg
jae
mov
xchg
or
xchg
fistpl
daa
pop
jmp
mov
mov
dec
add
sub
fcomps
ror
inc
repz
test
mov
xor
scas
test
mov
es
jmp
jbe
stos
sarl
movb
stos
movsb
rcll
jle
push
test
pop
sbb
movsb
repnz
pusha
jb
lock
insb
stc
out
pop
xlat
movsl
dec
jecxz
pusha
sbb
mov
insb
and
sti
mov
in
pushf
xlat
stc
dec
and
into
jbe
imul
out
add
sub
pop
cmp
xchg
pop
add
push
jb
test
rclb
aaa
or
dec
ret
repnz
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
pop
adcb
rsqrtps
movsb
sahf
lcall
aas
and
sahf
inc
push
and
jmp
add
and
jl
ljmp
sbb
aad
or
sbb
ret
cli
inc
adc
push
mov
jns
in
mov
push
pushf
xchg
cwtl
outsb
add
jns
outsb
out
add
adc
clc
sarb
mov
imul
xor
fwait
loopne
inc
inc
cmpsb
push
xor
mov
fstps
aad
fs
and
mov
cmp
cmc
mov
adc
jno
mov
sahf
push
jp
xlat
outsb
add
loop
inc
sarl
xchg
sti
scas
lock
mov
or
fwait
sbb
sbb
iret
stc
mov
out
daa
ljmp
pop
mov
mov
das
adc
xor
in
adc
les
inc
fldcw
pusha
add
mov
mov
out
fwait
mov
mov
and
stos
icebp
mov
mov
cmpsl
subl
xor
int3
sub
push
xchg
mov
jp
outsl
addr16
sti
cltd
ds
movsb
fcmovne
rcl
in
fmul
cmp
and
xchg
sub
xchg
and
std
sub
xchg
inc
adc
ja
push
add
pusha
or
inc
adc
push
ss
ds
scas
ret
lret
aad
pop
out
lds
icebp
mov
push
mov
gs
pop
cmp
push
sub
pop
jo
lcall
adc
sub
mov
test
xchg
clc
mov
roll
jle
push
adc
dec
mov
sar
adc
out
pop
inc
mov
mov
push
hlt
scas
xchg
loop
push
add
jno
add
movsl
lahf
jg
lret
sbb
lidtl
ja
cmp
movsl
stos
out
mov
sbb
and
sub
fsubs
pushw
jb
shlb
hlt
dec
shrb
xor
fs
imul
xor
pop
repnz
or
push
js
lea
dec
push
push
sahf
std
rcrb
test
cwtl
aam
call
aaa
dec
mov
fistl
lret
add
aas
icebp
insb
in
xchg
adc
loop
mov
mov
adc
in
mov
scas
sbb
xchg
sahf
loope
je
cmc
cmp
movsl
scas
icebp
or
mov
mov
cli
xor
push
mov
cmp
cs
mov
inc
and
dec
push
shll
pop
lret
aas
sbb
rcrb
inc
movsb
mov
rolb
insb
sbb
mov
lods
shl
in
rcrb
into
mov
sub
cld
ret
jmp
sbb
mov
repz
hlt
xchg
pop
xor
dec
xbegin
enter
test
imul
shl
lock
in
cmc
hlt
shll
movsl
sti
in
ret
add
mov
add
aam
push
dec
sbb
fisttpll
mov
fstpt
iret
and
rcrl
fnsave
sbb
xchg
sbb
stc
sti
mov
adc
loopne
cli
flds
js
daa
movsb
andb
clc
inc
push
sahf
or
inc
rcll
add
dec
xchg
mov
test
icebp
cmp
test
das
cmpsl
sub
subl
int3
fcoms
add
dec
dec
lret
mov
pushl
push
inc
fsubl
push
push
int
add
dec
mov
std
aas
mov
js
add
and
mov
jne
in
je
mov
push
mov
and
cmpl
adc
pop
mov
lods
int3
subl
push
mov
xchg
inc
rcrb
mov
xchg
mov
jg
push
mov
cmp
cltd
and
jno
in
mov
inc
add
push
pop
inc
insb
xchg
shlb
popa
adc
enter
arpl
jge
rorl
jns
add
add
jge
in
les
fcoms
lds
xor
cmp
fs
jae
sub
fwait
cmp
cmp
dec
loop
pop
pop
cltd
leave
add
testl
cmp
test
push
adc
inc
movsb
lret
mov
xchg
lahf
xor
push
imul
jae
jno
jnp
adc
dec
repz
mov
dec
add
cld
arpl
cmpsb
pop
call
and
inc
pop
popf
or
xor
aas
adc
or
ficoml
inc
les
cld
repnz
and
movsl
xor
jle
jb
xchg
sbb
fcompl
fistps
loopne
inc
or
test
shrl
and
adc
push
mov
je
test
and
js
popa
fdivrs
stos
loope
and
push
sub
mov
mov
xchg
inc
pushf
imul
jge
mov
sub
inc
popa
fstl
add
dec
lea
xchg
leave
aas
lea
dec
arpl
sbb
ffree
mov
dec
mov
fsub
ror
mov
mov
adc
xchg
or
test
dec
out
add
dec
push
jl
pop
pop
loopne
push
lds
bound
into
sbb
test
jp
xchg
ret
jnp
xlat
cmp
xchg
lcall
loope
pop
dec
inc
clc
enter
add
and
push
push
jge
nop
mov
inc
repnz
call
xor
inc
push
into
div
xchg
xchg
inc
cmpsl
test
jg
stos
jnp
sbb
enter
jp
ret
in
mov
addr16
and
cld
dec
mov
imul
or
dec
das
data16
cmpb
js
lods
add
pop
pop
data16
jl
dec
popf
mov
adc
cmp
jb
cmp
sub
scas
sbb
and
sub
test
cmp
shrb
call
mov
cmp
push
inc
mov
leave
out
daa
fwait
cmp
loop
inc
inc
inc
dec
mov
ret
lret
daa
push
orl
or
insl
jg
in
xchg
das
js
call
cltd
push
sbb
fs
mov
xor
dec
ss
lret
inc
mov
inc
fs
rol
xlat
lods
stos
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
mov
add
pop
adc
repz
iret
imulb
bound
leave
cmp
add
ss
in
or
and
gs
xor
jl
insl
cmp
test
mov
std
adc
decb
xor
mov
mov
xchg
test
mov
sbb
in
lahf
inc
out
rcl
mov
mov
mov
aas
inc
and
xchg
inc
leave
jbe
stos
xor
fists
jb
enter
inc
xor
xchg
repnz
push
imul
scas
lods
std
inc
repz
test
pop
dec
mov
icebp
es
cmp
decb
pusha
testb
adc
dec
out
out
lcall
outsl
jbe
mov
cmp
aam
mov
jnp
add
outsb
jb
into
in
push
int
pop
adc
sub
bound
stos
pop
fmull
xchg
outsl
fcmovu
cmp
push
add
adc
mov
pop
aad
xlat
fsubrs
je
and
jb
push
mov
sbb
roll
bnd
ret
inc
mov
outsl
sbb
lods
shufps
cmp
js
cmp
out
and
fwait
mov
adc
or
sbb
aaa
out
das
cli
int
ds
sub
mov
push
add
mov
rorb
jge
jmp
mov
sarb
movsb
ljmp
rcrb
jecxz
cs
mov
movsl
mov
rclb
cmp
dec
js
sbb
cmp
lea
lcall
scas
xchg
mov
mov
ret
add
in
dec
dec
fisttpl
scas
pop
inc
xchg
xchg
fwait
movups
adc
or
or
pop
cmp
push
push
add
push
push
xchg
and
call
inc
shrb
or
inc
add
dec
jmp
cmp
popa
clc
mov
ja
test
movsl
push
in
mov
les
loop
xor
fisttpl
out
outsl
jg
xor
sbb
insl
sub
sbbb
daa
xchg
mov
fs
jge
repnz
movb
mov
push
stos
lods
pop
cmp
aaa
lock
add
push
ss
push
imul
insl
sbb
adc
loope
jecxz
sbb
jns
in
add
inc
repz
out
jge
adc
fcoms
sub
fsub
hlt
repnz
stos
popl
push
into
pop
fdivs
fldln2
mov
ficoml
incb
push
test
mov
loopne
add
je
gs
push
jno
js
and
fucomp
dec
xor
xor
pop
mov
xor
jo
push
jp
xlat
lea
clc
icebp
repnz
loopne
jmp
xchg
push
xchg
cli
cmp
and
inc
or
ja
mov
xchg
add
mov
mov
bound
mov
adc
pop
pop
lea
inc
xor
das
dec
mov
push
call
adc
popl
int3
cmp
sbb
lds
ret
cltd
cld
popl
int
int
jne
jg
ja
aam
je
mov
cltd
popf
mov
mov
fnstcw
aaa
sbb
lods
int
mov
cmp
sbb
pop
int
cltd
inc
adcl
lods
mov
jno
call
pop
xchg
call
cmp
jle
icebp
cld
pop
mov
add
shrb
mov
enter
jmp
les
dec
repnz
cmp
pop
jo
lods
or
imul
punpckldq
repnz
les
ja
lds
jge
adc
out
pop
int
mov
pop
push
incl
lds
xor
sbbb
pop
and
mov
fwait
sbb
dec
test
lret
mov
sub
fisttpll
mov
faddl
fidivl
repz
into
ss
push
stc
sbb
and
jo
shlb
mov
jns
lcall
in
fcoml
or
xorl
mov
jp
mov
movb
mov
jo
cmp
xchg
lods
sbb
aas
or
dec
aad
jmp
aaa
sbb
movsb
cmpsl
cltd
mov
cmp
and
fisubl
push
mov
cmp
push
jo
scas
cmp
aas
inc
jle
pop
icebp
mov
mov
out
aas
es
push
test
or
cmp
icebp
sub
test
inc
push
pop
insl
sbb
insb
xchg
cld
cmp
fmul
orl
int3
into
rolb
add
insb
mov
scas
test
scas
negl
sbb
dec
sub
pop
out
sbb
jo
test
loop
xlat
jb
mov
daa
daa
or
sbb
daa
adc
push
xchg
inc
push
cmp
cvtps2pi
xor
add
into
scas
test
and
js
cmp
in
movsl
mov
dec
push
aam
addr16
inc
inc
sbb
pop
jmp
mov
scas
xor
mov
ret
sub
fwait
in
movsb
mov
loop
jle
dec
xchg
xor
pop
aam
loop
push
mov
movsb
cltd
out
mov
mov
iret
inc
es
rcrb
in
push
xor
push
jb
fcmovnb
xor
inc
xchg
mov
ret
dec
lock
jecxz
ja
pusha
rclb
pushf
jecxz
adc
loope
mov
and
in
cmp
pop
xor
dec
fstpl
mov
nop
out
lods
add
int
or
lahf
pop
outsb
sarl
add
jb
jmp
add
cwtl
loopne
imull
pop
adc
repz
cmpsl
cmc
pop
and
pop
dec
popa
xchg
mov
inc
popf
loop
pop
insb
vmwrite
adc
sbb
mov
lahf
mov
push
add
sub
roll
inc
inc
push
mov
mov
iret
popa
cmp
sbb
jl
dec
imul
loop
imul
out
sub
push
sub
ljmp
shrl
and
lahf
out
or
sub
push
mov
fs
adc
notb
lock
push
dec
push
fnstcw
push
cpuid
aad
shrb
mov
xchg
ss
aaa
aam
pop
lret
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
cmp
mov
add
mov
ss
xor
inc
scas
clc
mov
test
xor
and
cmp
push
negl
subl
xorl
mov
lock
addr16
insl
inc
mov
scas
jns
add
lret
xor
popf
int
inc
inc
add
push
inc
xor
or
es
mov
jecxz
inc
or
xor
js
push
mov
fsubrl
push
andb
sbb
leave
xchg
inc
add
push
or
xor
aaa
inc
fisubrs
mov
mov
inc
inc
test
outsl
in
or
mov
sbb
imul
jg
mov
test
ret
jmp
loope
mov
out
mov
and
jecxz
pop
adc
outsl
movsb
or
out
hlt
pop
pop
hlt
xchg
mov
jle
js
aam
adc
ds
push
push
adc
inc
fistl
daa
inc
jmp
in
adc
mov
jmp
fldenv
push
inc
movsb
sbb
pop
pop
xor
stos
ret
popf
in
lods
push
js
mov
cltd
inc
cmovle
inc
insl
jo
cmpsl
jb
aaa
imul
jnp
imul
inc
push
cli
jp
mov
mov
and
dec
fiaddl
or
jecxz
sub
test
lds
imul
loope
popaw
jle
mov
aas
sub
inc
shr
lret
and
ret
xor
sbb
imul
mov
scas
ljmp
mov
xor
push
icebp
xchg
push
cmp
lds
mov
jge
into
gs
sbb
mov
adc
pop
fadd
xor
shr
sub
xchg
xchg
fcmovnu
popf
xor
adc
jge
sbb
jge
dec
and
mov
jae
cmp
mov
lods
dec
sahf
push
int3
sahf
gs
fwait
test
cli
cmp
stos
cmp
jmp
mov
es
sbb
outsb
cs
test
in
and
push
sub
shrb
pop
imul
cld
clc
adc
and
jne
mov
ret
fxch
divb
and
sbb
push
or
rcll
aaa
pop
dec
adc
shlb
push
out
and
fstpl
cld
pop
test
or
subb
xor
and
sub
add
gs
daa
fdivs
adc
nop
xchg
mov
add
mov
orl
jbe
push
mov
popa
add
pop
insl
pop
mov
fmull
mov
cwtl
test
mov
arpl
xchg
imul
movsb
pushf
push
ja
jo
adc
stc
mov
test
stc
ljmp
mov
lahf
shl
mov
xchg
xor
mov
xor
pop
orb
mov
or
pusha
int
xor
notl
lods
imul
rolb
dec
in
xor
sub
push
shlb
mov
inc
cmp
dec
mov
out
clc
jo
mov
jae
fcmovb
js
movsl
addb
mov
push
cmpsb
cmc
fdivrl
sub
hlt
xor
pusha
js
xor
and
xchg
jecxz
sub
jno
andl
call
and
mov
aas
dec
mov
jns
sti
pop
push
sbb
test
int
adc
push
rcrb
or
enter
lahf
cmc
pop
stos
iret
jbe
mov
or
mov
scas
jg
mov
xchg
lods
popf
psrad
cmp
cmp
mov
cld
arpl
adc
outsb
dec
adc
or
in
push
ret
push
mov
enter
add
lods
inc
xchg
popf
push
rcrb
cmp
mov
mov
jo
movsb
mov
push
add
pop
push
dec
pop
cmp
dec
ss
addr16
adc
sarb
sbb
sub
sub
sbb
in
scas
inc
insb
adc
xor
pop
add
xor
mov
fistpl
cs
leave
sbbb
dec
movsb
mov
leave
xchg
insl
test
jmp
fwait
mov
cmp
sbb
dec
sub
push
call
adc
adc
ret
popa
mov
push
xchg
das
push
jp
popf
push
testl
adc
sub
adc
lcall
xchg
enter
jle
mov
mov
fidivrs
lret
lods
add
je
push
imul
mov
inc
push
scas
mov
push
and
shrb
dec
outsb
mov
in
lods
push
pop
div
js
mov
setg
mov
pop
shrb
sub
add
movsl
pop
push
xchg
xchg
sbbl
push
inc
xchg
sbb
loopne
pushf
fmul
xor
pop
pop
rorb
movsb
nop
jbe
pushf
nop
lock
outsl
sbb
hlt
out
insb
loope
fcom
ja
mov
push
test
hlt
test
sub
xchg
xor
lea
idivb
dec
jl
fidivl
repnz
scas
cmp
push
icebp
xchg
into
das
aaa
xchg
xchg
insb
test
xor
ss
aas
mov
sub
inc
lret
lret
hlt
dec
lret
xchg
sbb
cmp
imul
popa
rorb
shlb
insb
sti
dec
dec
sub
aam
sti
psrad
into
pop
scas
pop
sbb
das
cmp
pop
xchg
push
fildl
popa
lds
add
popa
pusha
repnz
clc
cmp
pushf
imul
iret
bnd
push
gs
dec
fistps
sub
out
cmpsl
xchg
xchg
fstl
xor
xor
insl
sbb
aas
jp
mov
inc
xchg
arpl
pop
ja
mov
xor
push
inc
adc
push
push
mov
dec
sub
cmp
mov
adc
arpl
push
and
lock
cmp
add
ret
ret
mov
loope
enter
aam
sub
mov
movntps
je
mov
fstp
hlt
sub
cmp
pop
cmpsl
mov
inc
xchg
pop
pop
in
or
mov
jne
push
dec
pop
in
inc
notb
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
pop
loop
xchg
push
add
rcrl
mov
dec
push
cltd
imul
mov
cltd
out
dec
pop
out
in
inc
add
push
xchg
lea
leave
pop
mov
iret
push
jns
xor
inc
lods
dec
cmpsl
sbb
xchg
or
nop
or
inc
inc
xchg
aaa
dec
sbb
cmp
sub
mov
jns
pop
mov
das
test
and
and
repnz
push
xchg
les
pop
lock
inc
xor
fwait
cli
sbb
aam
xlat
stc
push
cld
popa
scas
daa
mov
inc
js
pop
std
inc
fnstcw
jno
mov
addr16
test
adc
loop
je
jae
fistl
scas
sbb
mov
std
adc
sbb
push
adc
cmp
mov
xchg
fidivrs
pop
inc
in
xchg
cwtl
test
jecxz
fisttps
pop
popf
cld
and
psubb
cmp
push
mov
cmpsl
mov
add
and
lods
mov
pop
adc
jmp
push
call
fnstcw
pop
testb
jo
dec
dec
inc
cmp
mov
repnz
andl
adc
call
jb
mov
popa
or
rcrb
adc
push
mov
pop
sbb
lcall
xchg
cmp
imul
cld
adc
push
shlb
and
mov
xchg
or
shl
out
lods
xor
stos
loopne
mov
mov
mov
or
fstpl
mov
jbe
movsb
fisubrl
orb
cli
rorb
sbb
mov
cmpsl
inc
jl
jb
add
mov
ja
sbb
push
push
add
mov
xchg
cmc
ret
test
adc
loopne
cmp
inc
cmp
mov
push
adc
inc
dec
mov
fsubrs
mov
test
dec
in
push
ljmp
sarl
inc
dec
ret
insl
inc
pop
bound
jns
mov
pop
sbb
stc
fs
in
dec
daa
sarb
xchg
imul
push
mov
dec
and
add
mov
pushf
stos
dec
mov
icebp
adc
add
pop
in
sbb
adc
imul
sbb
and
test
lahf
faddl
sub
scas
in
enter
ja
popa
add
mov
outsb
fsubs
adc
lret
lds
mov
xor
mov
mov
movsl
sbb
les
movsb
test
jns
jne
negb
jns
leave
and
xlat
mov
sbb
lret
sbb
jecxz
push
xchg
jns
pop
out
xorb
icebp
in
mov
loopne
push
push
and
xor
mov
mov
into
aaa
adc
jns
leave
icebp
ret
dec
inc
inc
pop
out
inc
pop
mov
dec
jnp
jecxz
sub
jb
jg
out
mov
dec
add
rolb
sub
std
test
xchg
stos
mov
inc
leave
les
add
lods
clc
test
shlb
outsl
in
dec
lock
loope
enter
popf
xchg
insl
loop
ficoms
inc
push
inc
loop
inc
insl
jb
inc
xorb
sbbl
hlt
out
out
test
out
lock
inc
xor
cs
loop
jbe
mov
inc
sbb
pop
dec
inc
fidivl
jle
jecxz
and
sbb
mov
cwtl
loopne
mov
divb
notb
push
cmp
jae
scas
cmp
add
inc
addr16
fidivrs
je
and
mov
jecxz
add
dec
aaa
sub
std
mov
pop
dec
out
jbe
pusha
out
add
add
sub
xchg
imul
stos
xor
xor
cwtl
inc
mov
cmp
mov
pop
outsl
std
mov
and
jne
fstl
fwait
push
or
mov
pop
mov
xor
add
ret
fisubs
leave
int
jo
jg
add
jle
pop
jmp
jl
mov
mov
gs
push
cmp
and
push
stc
movsl
and
push
pop
xor
sub
rcll
push
repz
data16
jns
imull
xor
xor
inc
mov
mov
xor
add
in
popf
mov
cltd
loopne
insb
push
adc
jae
fmuls
or
test
arpl
or
add
xchg
lret
imul
hlt
jnp
pop
push
leave
and
stc
inc
add
popf
mov
clc
xor
inc
shl
out
xlat
add
rorl
lock
jns
add
movsl
pop
push
test
push
inc
mov
or
pop
pushf
mov
cmpsb
cmp
or
dec
lret
stos
mov
rorb
test
pusha
icebp
sub
sbb
out
es
jecxz
jecxz
mov
add
mov
popa
push
in
cwtl
into
outsb
xchg
sub
sbb
hlt
repz
jge
jle
sbbl
xchg
inc
jg
lahf
sub
pop
clc
mov
sub
out
es
aad
int3
mov
dec
stos
mov
fldcw
sbb
cmp
int3
sbb
cmp
outsl
in
outsb
xchg
daa
mov
icebp
test
xchg
hlt
mulb
ror
leave
push
adcl
stos
loopne
bound
xchg
mov
imul
mov
jae
std
fcomp
dec
ficoml
jbe
xchg
stc
mov
inc
push
sbb
pop
loop
das
cs
fwait
or
icebp
add
dec
add
es
div
mov
mov
in
es
sub
leave
xor
and
loope
out
xchg
shlb
pushf
sbb
xlat
jmp
xchg
lahf
jp
into
add
xor
adcl
mov
jmp
pop
addr16
les
pop
lods
into
gs
stc
mov
dec
out
lret
cld
mov
jp
push
pop
sub
pop
jne
mov
fs
cmpsl
insb
aaa
inc
pop
jecxz
xchg
mov
jns
pop
add
mov
imul
push
mov
mov
mov
cmp
fbstp
xchg
fisubrl
mov
dec
sub
add
xor
dec
dec
scas
xchg
pop
push
in
fcompl
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
mov
xchg
cs
add
add
lds
lcall
push
je
popa
add
pop
inc
pop
mul
lret
cmp
xchg
inc
mov
call
push
xlat
gs
pop
insb
xor
test
mov
sub
push
movl
inc
sbb
sub
xor
mov
gs
add
js
pop
or
xchg
aad
lods
scas
xabort
and
mov
sub
adc
outsb
sub
and
std
out
xchg
aas
jl
loopne
jbe
adc
icebp
xchg
shrl
shlb
in
sarl
jnp
cmp
mov
hlt
pop
inc
push
mov
je
adc
cltd
dec
sbb
add
popf
insl
jno
xchg
rolb
cmp
fcoms
mov
ret
enter
test
push
cmp
push
call
out
in
enter
test
cmp
test
test
mov
lds
adc
gs
jbe
pusha
xor
pop
and
mov
pop
sbb
je
dec
adc
imul
sbb
adc
outsb
cmc
dec
push
xchg
lods
repz
test
fimuls
loopne
aaa
mov
insb
aad
inc
add
dec
dec
js
fadd
lds
inc
enter
vmread
addl
jne
lods
push
lcall
xchg
mov
jb
mov
test
cmp
mov
mov
fwait
movsl
fnsave
test
push
cmpsb
mov
or
inc
les
adc
inc
mov
ljmp
sbb
mov
adc
mov
mov
push
stos
mov
sub
cmp
loope
xchg
roll
dec
popa
pop
mov
xor
pop
mov
sbb
lea
push
inc
pop
movsb
lahf
ljmp
xor
arpl
mov
ss
xchg
mov
les
clc
cmp
push
rol
stos
cmp
test
stos
int
sub
fstpt
aas
xchg
bound
mov
stos
mov
out
mov
aas
mov
xchg
fstp
int
sbb
cld
addr16
in
mov
out
adc
xchg
cmp
pop
and
mov
out
jne
in
mov
or
mov
sub
dec
daa
xor
jo
imul
ljmp
pop
jp
rolb
mov
dec
pop
popf
decb
cmpsl
pop
cmp
test
loope
movsb
xchg
sbb
test
xor
mov
sbb
jae
cmp
leave
cmpb
inc
or
shlb
sbb
adc
dec
pop
fildll
xor
sbb
push
jge
push
xchg
rcl
sub
lods
jp
cltd
lds
dec
mov
je
and
push
pop
mov
hlt
jecxz
adc
pop
sbb
pop
int3
or
sub
push
dec
and
or
jl
mov
aad
push
loope
add
xor
pop
add
int
ret
lret
imul
rol
stos
sbb
cli
hlt
and
lahf
pop
lret
insl
jno
xor
ror
lret
jg
ja
mov
popl
stos
xor
push
lds
push
popf
in
push
cltd
js
mov
in
loopne
pop
push
dec
sub
shll
mov
and
cmp
lret
cmp
test
enter
cmp
fcompl
test
bound
mov
cli
dec
lret
push
and
xor
test
das
ret
pop
cltd
std
inc
mov
out
push
push
pop
out
inc
push
cmp
jnp
xlat
jmp
dec
mov
and
and
jmp
mov
jbe
or
xor
lds
dec
pop
popf
mov
add
inc
insb
xchg
lret
pusha
jae
xor
enter
in
repz
mov
mov
mov
cmp
mov
mov
mov
inc
addl
jns
cmp
mov
test
test
leave
rclb
movsb
xor
sbb
or
std
icebp
jo
and
rcl
sub
and
push
cli
jp
inc
xor
xchg
sub
in
dec
push
mov
xor
jnp
hlt
mov
xchg
mov
mov
or
and
pop
sbb
popf
das
in
and
test
ljmp
dec
cwtl
push
jne
arpl
je
push
sti
loop
in
xchg
sbb
and
ja
loop
cmpsb
movsl
out
jne
jno
pop
mov
mov
fidivrl
daa
mov
popf
arpl
sbb
xchg
mov
rcrl
xor
lds
or
mov
and
mov
adc
adc
popa
jl
mov
imul
out
cs
push
gs
dec
jno
popf
imul
daa
mov
xor
fxch
ret
gs
insb
lcall
dec
cmpsl
adc
or
dec
push
pop
ja
and
jb
mov
clc
outsb
sarl
lcall
lret
cmp
pop
xchg
jmp
and
fs
inc
xor
or
mov
cmp
cld
jae
mov
xor
push
jae
sbb
mov
stos
mov
sti
mov
xchg
mov
push
inc
scas
cmp
push
sub
cmp
scas
int3
mov
xchg
xchg
mov
inc
xchg
inc
je
out
cltd
lcall
and
loopne
dec
mov
call
adc
jmp
ds
push
movsl
push
mov
mov
js
pop
popa
inc
jne
inc
push
jg
gs
mov
mov
pop
rcl
les
insl
popf
mov
call
lret
mov
sbb
std
mov
loope
cli
cmpsl
cmpsl
ss
sarl
mov
std
andb
ret
dec
lea
loopne
stos
je
loope
inc
lret
scas
rorb
sbb
mov
xor
loop
mov
fisttpll
add
add
push
push
jp
jo
cmc
add
xor
and
sbb
rorl
sbb
les
sbb
push
insb
andb
sub
adc
hlt
jmp
pusha
mov
mov
movsl
ja
inc
xchg
andb
pop
add
lcall
jmp
jbe
dec
ficomps
push
jo
loop
inc
adc
repnz
cmc
mov
fs
push
mov
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
inc
je
in
inc
add
push
cmp
fidivrl
ficompl
pop
mulb
lret
les
and
icebp
ljmp
cltd
negb
add
shll
ret
mov
frstor
mov
dec
daa
repz
inc
add
int
cld
fs
mov
cmp
mov
mov
inc
xchg
sub
test
pop
xor
js
cwtl
mov
test
xor
xchg
movsb
mov
dec
mov
push
sbb
test
mov
lds
loop
rolb
jae
test
inc
pop
mov
mov
pop
addl
arpl
cli
push
int
ss
and
push
in
adc
out
mov
xchg
aas
call
mov
add
sti
xor
insb
mov
and
je
or
lahf
andb
and
jbe
or
sub
out
add
adc
mov
push
lds
or
push
push
outsl
mov
pop
jne
push
push
stos
cmp
jb
lock
mov
cmp
sbb
and
aaa
pop
sub
fcmovnu
and
sbb
in
rdmsr
dec
sbb
push
xchg
dec
in
fistps
dec
xchg
stos
cmp
sarl
or
std
and
dec
jge
dec
xor
lret
int
repz
orb
pop
clc
mov
popa
add
or
adc
dec
insl
clc
mov
addr16
push
mov
fmul
addr16
lret
cltd
jns
out
or
mov
daa
add
in
outsb
or
xchg
ja
loope
imul
fcom
adc
mov
jp
fsubr
and
push
push
nop
imul
sub
call
shlb
rol
pop
jbe
xchg
pop
mov
mov
les
mov
rolb
movsl
lret
cmpsl
cmp
cli
pushf
insb
add
cmp
mov
xchg
pop
adc
fwait
add
mov
orb
sbb
fldcw
shl
xor
pop
push
xchg
cwtl
lods
push
push
dec
dec
loope
sub
cmp
push
sbb
push
das
repnz
or
mov
sar
lret
push
inc
repz
or
pop
arpl
cmp
out
enter
insl
xchg
or
dec
fdivrl
test
orl
popa
scas
mov
outsb
cmp
dec
icebp
stc
movsl
xchg
cmc
xchg
inc
sub
dec
stc
cli
xchg
add
test
jg
pop
into
lret
adc
sub
xchg
pop
dec
push
pop
push
out
mov
xchg
loop
nop
outsb
mov
add
cmpsl
stc
mov
or
imull
aaa
cmp
dec
sahf
adc
dec
xchg
jmp
aam
repnz
ret
adc
jge
push
lcall
mov
ficomps
das
xchg
stos
cmp
mov
jnp
dec
push
lret
xchg
inc
sahf
test
push
cmpsb
sbb
aaa
adcb
lods
jge
add
repz
adc
push
inc
mov
mov
inc
aaa
jo
pop
stc
mov
mov
rorl
test
push
mov
xor
in
jmp
xchg
jge
loope
ficoms
shll
in
addr16
inc
dec
sti
lods
imul
mov
cli
jge
pop
pop
jae
mov
add
push
jecxz
pop
adc
stc
lahf
jle
fisubl
adc
enter
push
es
mov
inc
insb
movsb
jg
fstps
mov
andl
cmp
ffreep
mov
mov
into
xor
or
ret
js
sub
enter
push
sbb
cs
es
andb
sub
add
push
movsb
rcll
iret
jecxz
mov
mov
movsl
jge
ljmp
and
jecxz
pushf
sti
aad
pop
xor
out
dec
cli
inc
aad
lods
mov
mov
mov
movsl
fisubs
push
and
pop
jb
push
push
push
movsl
cld
insl
xchg
xchg
sub
push
nop
test
in
jmp
pop
sbb
mov
and
dec
jle
loope
jns
xchg
das
pushf
sub
outsl
ficomps
sahf
adc
scas
in
movsl
jmp
jbe
iret
cmp
mov
ret
jecxz
popf
push
mov
mov
das
roll
scas
out
and
mov
or
fwait
add
hlt
xchg
es
xchg
sub
ficoms
add
add
cmp
jbe
jns
pop
or
call
lods
pop
loop
cmp
cmp
lds
mov
mov
inc
push
cld
bound
adc
push
ficoml
mov
decl
ds
adc
add
ror
movsb
fwait
mov
pop
mov
dec
test
jle
adc
dec
sub
xor
cld
inc
xor
or
es
lcall
ja
or
jo
aaa
icebp
add
fiadds
gs
sbb
xchg
in
aaa
or
jbe
scas
mov
add
push
sub
push
inc
xchg
jg,pt
push
das
jb
mov
lods
and
jl
mov
xor
in
sahf
sbb
fldenv
in
sbbl
xor
mov
aam
lea
mov
xor
outsb
lea
daa
add
jl
lock
out
inc
or
lods
adc
inc
outsb
cmc
ja
cltd
shrb
aad
nop
je
jmp
rol
cmp
and
dec
sbb
shl
out
ret
dec
in
ja
jb
movsl
dec
cwtl
adc
jae
cld
inc
je
loope
adc
dec
mov
sub
jo
lea
mov
mov
adc
shll
xor
push
ss
sub
or
jae
mov
xchg
cmc
aad
aad
outsb
movsl
fwait
mov
jb
insb
outsl
inc
pop
scas
or
inc
lock
xor
lock
idivl
mov
mov
xchg
and
dec
inc
jmp
out
out
imul
and
daa
sub
subl
push
cmpb
popl
mov
or
sub
sub
stos
out
mov
pop
test
stos
inc
stos
fucomip
pushf
pop
and
repnz
pop
push
negb
dec
fimuls
movsb
fwait
js
and
or
test
test
pushf
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
add
in
lds
jo
ja
mov
xor
add
mov
dec
cwtl
adc
in
or
ss
xor
loop
dec
mov
xor
jp
push
fbld
into
rcl
cmpsb
adc
in
icebp
scas
and
jmp
std
xor
mov
or
es
xor
add
cli
mov
jns
mov
xor
mov
andl
push
lds
xchg
xchg
js
daa
sti
adc
inc
cmp
jae
cwtl
dec
jnp
dec
mov
inc
pop
push
sbb
lret
enter
push
test
pop
call
shrb
push
jmp
icebp
pop
fwait
dec
popf
and
add
out
fisubs
sar
cmpb
pushf
scas
mov
and
loop
inc
pop
clc
xchg
add
clc
add
mov
imul
mov
fxam
int3
scas
ret
lss
jle
add
dec
pop
jae
dec
fmuls
inc
jecxz
ja
cmpsl
mov
int3
add
and
jecxz
xchg
jp
jmp
xor
push
dec
mov
cmp
imul
out
mov
ret
mov
xor
add
mov
dec
pop
loopne
push
pop
or
mov
lods
inc
dec
push
jmp
ds
lahf
nop
cs
sub
inc
fs
pop
push
adc
dec
aad
or
loopne
movsb
cmp
push
mov
rcll
jnp
js
arpl
int3
cmp
xlat
pushf
cmpsl
sub
in
adc
sarl
cmp
dec
add
dec
inc
popf
popa
int3
xor
dec
push
inc
pop
mov
std
insb
cmp
scas
adc
in
inc
mov
or
roll
mov
add
das
es
jl
repz
scas
adc
pop
test
jbe
mov
je
sub
inc
ficoml
dec
in
call
popa
rcrb
or
cmp
pop
inc
jle
sbb
lcall
lods
dec
adc
ds
lahf
fwait
stos
or
inc
scas
push
add
cmp
jb
sbb
mov
rcrl
mov
daa
out
ja
fldcw
std
mov
pushf
inc
inc
xor
ds
ss
pop
pop
mov
adc
push
xor
insl
jecxz
jno
push
inc
dec
push
add
ret
mov
pop
jmp
ljmp
loop
fs
and
jnp
xor
mov
std
mov
xchg
stos
pop
rorb
int3
pop
ja
cmp
jmp
pop
call
mov
movsl
movsl
ret
push
aam
fnstcw
ret
dec
push
mov
adc
or
push
dec
mov
xor
test
adc
cmpsb
jle
in
movsb
and
mov
dec
xchg
mov
cmp
mov
mov
mov
jne
scas
shrl
lea
repz
add
test
daa
inc
dec
cmpsb
dec
mov
lea
bound
push
jns
mov
data16
push
inc
cwtl
nop
or
sbb
cmp
addr16
mov
out
int3
xchg
in
call
fiaddl
mov
dec
push
mov
movl
movl
in
fidivs
and
cmpsl
pop
pop
imul
in
loop
es
mov
add
and
test
rorl
pop
inc
pop
lret
lea
sbb
xor
sti
lds
mov
test
jno
dec
test
jp
fucomp
push
mov
loope
ret
cmpsl
xor
dec
inc
aad
fistpll
xor
out
sbb
and
add
pushf
lret
adc
outsl
fldenv
test
jge
mov
subl
rclb
fdivp
sbb
imul
les
mov
sbb
or
jle
jns
fldenv
xor
adc
xchg
sub
pop
fbld
movb
sub
pop
cmp
call
inc
xchg
pop
xor
add
mov
cmp
sub
mov
mov
and
lock
mov
lods
pop
out
imul
lret
sub
ret
bound
cmp
mov
push
outsl
aas
xchg
mov
sub
mov
imulb
lcall
push
xorl
scas
test
fistpll
mov
sbb
jbe
cmp
test
leave
pop
popa
inc
jbe,pt
and
faddl
jbe
sbb
push
lcall
enter
pop
cmp
push
jne
adc
arpl
aam
sahf
mov
xchg
push
jne
lock
inc
dec
scas
cmp
dec
push
popf
std
mov
add
lock
inc
mov
mov
jl
and
jno
xchg
inc
fstpl
or
adc
mov
daa
add
loop
mov
or
and
adc
fcom
aam
shrl
mov
aaa
jle
call
popw
xor
sbb
xor
dec
pop
xchg
xor
dec
jle
in
divl
fisubrl
outsl
in
inc
nop
xchg
adc
lret
push
lock
pop
lcall
pop
inc
mov
add
jp
cmp
or
mov
jl
cmp
in
sub
add
or
push
fnsave
mov
aam
xchg
push
lret
and
jnp
inc
inc
das
jle
jno
mov
pop
scas
shlb
in
cli
or
das
shll
subb
out
ret
mov
pop
push
mov
clc
inc
and
rorl
xchg
sbb
and
pushf
mov
stos
or
jnp
jecxz
in
lods
out
sarb
nop
icebp
gs
jge
push
insb
push
adc
and
insb
stos
add
add
pop
dec
sti
mov
push
jnp
mov
in
jae
dec
jg
dec
shl
push
test
jg
cltd
xor
shlb
cmp
in
jge
int3
mov
in
test
adc
dec
cmp
imul
daa
out
rol
int3
repnz
jle
adc
aam
and
nop
das
out
ret
sub
or
in
pushf
add
jnp
out
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
jo
mov
add
rorl
or
inc
xchg
in
fs
cld
cs
repnz
ret
das
add
arpl
mov
sbb
into
pop
lea
test
mov
imul
or
inc
mov
mov
fcom
xchg
cmp
add
jmp
pushl
mov
ret
or
fmulp
mov
mov
lcall
push
pop
push
cmp
adc
push
shrb
mov
divl
add
xlat
mov
push
mov
popa
ds
in
sub
in
push
lods
mov
fbstp
sti
fnstcw
mov
sub
push
std
push
imul
and
push
adc
aad
enter
or
inc
add
dec
subb
pop
jg
lret
xchg
mov
inc
stos
and
push
js
shrb
lret
scas
jge
cmc
cld
and
xchg
push
loope
sbbb
stc
push
iret
stos
sbb
mov
imul
jg
hlt
sub
mov
inc
dec
fdivs
sub
xor
nop
dec
std
pop
mov
in
and
mov
call
aam
shlb
jecxz
mov
icebp
iret
xchg
cld
mov
cmp
sub
pop
rcrl
cmp
sbb
arpl
lock
sbbl
push
mov
aas
je
jl
mov
leave
lods
jnp
lock
stc
imul
push
push
scas
sub
inc
daa
sub
outsb
or
sbb
pusha
mov
aam
jnp
out
mov
notl
out
xchg
mov
lret
push
mov
jae
popw
jae
xchg
push
inc
test
pop
fdiv
push
inc
rcll
icebp
testb
pop
aaa
imul
sbb
mov
dec
repz
mov
lret
push
pusha
cmpsl
push
inc
sub
mov
sbb
lahf
fstpl
inc
scas
sahf
cmp
push
movsb
sbb
jle
sub
addb
fisubs
adc
nop
xchg
mov
aas
cmpsb
sub
pop
cmpsl
mov
sbb
inc
out
xchg
sbb
out
xchg
daa
leave
std
stc
inc
pop
fsubs
inc
mov
int
jnp
stc
sahf
nop
enter
test
mov
mov
add
pushl
out
movsb
and
aad
js
lcall
jecxz
cld
fldcw
cs
cmpsb
fcompl
and
leave
pop
stos
outsb
add
jp
xor
mov
jmp
fcoms
orps
test
sbb
aas
push
lods
and
shlb
inc
lods
cmp
mov
or
jo
nop
cmp
out
fcoml
mov
inc
cs
add
mov
es
addr16
scas
sti
push
pushf
shll
sti
or
movsb
test
inc
fnsave
xchg
movsl
pop
push
mov
pop
imul
popa
movsl
pop
leave
push
shrl
xor
dec
loop
xchg
faddl
iret
sub
xchg
mov
push
leave
mov
mov
fwait
repz
mov
sti
mov
cmpsl
mov
pop
dec
rcl
xchg
sub
and
pusha
popf
les
popa
xlat
mov
or
rorb
mov
xor
das
rcrl
dec
std
xchg
push
add
or
sub
cmp
jge
popaw
xor
inc
mov
adc
mov
loopne
jge
jmp
dec
pop
jnp
and
bound
mov
sbb
sbb
jmp
stos
add
dec
jo
pushf
icebp
push
or
dec
sub
outsl
jns
jb,pn
or
mov
test
leave
dec
dec
mov
cmp
shr
xor
iret
icebp
fs
pop
xchg
fnstsw
lret
xor
dec
xchg
push
pop
aam
xchg
cltd
sub
fnsave
mov
jmp
pop
sub
add
imul
outsb
pop
lahf
mov
mov
xor
jl
xor
rorl
mov
fwait
cmp
and
jl
inc
lds
or
jno
xchg
sbb
lods
loop
pop
xchg
push
pop
aaa
dec
sub
daa
adc
addr16
std
cld
pusha
aam
shr
das
mov
xchg
add
add
push
lea
fistps
xchg
xchg
push
pop
scas
mov
aad
sbb
ja
jae
xor
pusha
lea
loop
adc
lcall
sbb
mov
adc
bound
push
inc
mov
fldt
pop
ret
push
or
inc
ss
nop
dec
std
imul
adcb
mov
notl
mov
outsb
sbb
pushf
scas
sub
rorl
xor
mov
imulb
push
pop
mov
add
xchg
into
outsl
sarl
push
jmp
or
pop
ret
insl
lock
into
lahf
rcll
sbb
xchg
xor
push
xor
mov
enter
or
push
add
subl
jmp
mov
add
mov
mov
or
mov
adc
daa
push
fwait
mov
pusha
movsl
and
pop
jns
fnstsw
mov
jnp
addr16
cmpsb
stos
sbb
lods
xchg
ficomps
mov
pop
add
das
ret
lcall
mov
or
mov
dec
push
int
mov
leave
gs
lcall
sub
inc
pop
mov
imul
icebp
push
xor
movsl
mov
cltd
sbb
add
pop
test
in
xchg
sub
push
dec
pop
and
ja
js
adcb
xchg
push
cmp
xor
sarl
inc
add
add
mov
push
sub
jecxz
lret
sbb
jae
mov
outsb
les
mov
inc
cmp
fxch
outsb
add
sub
inc
jl
and
cmpsb
rorb
pop
sbb
gs
stos
sub
jle
jecxz
and
push
fcmovb
inc
jb
mov
xor
add
int3
xor
nop
sbb
inc
shll
leave
aas
inc
mov
cmc
shlb
leave
push
add
pop
pop
mov
mov
jnp
push
or
adc
mov
stc
push
pusha
add
sbb
lods
xchg
add
adc
mov
sbb
xor
cwtl
xchg
mov
and
add
or
and
out
cmp
pop
sub
xchg
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
mov
add
jae
jl
and
xor
dec
add
cmp
mov
rolb
sub
aam
push
jns
cmpl
jge
mov
add
sti
lcall
cld
mov
add
in
mov
adc
data16
dec
leave
test
sub
movsl
push
lret
cmp
or
stos
ss
xchg
pushf
add
mov
bound
mov
push
hlt
jo
loop
sub
xor
daa
fldenv
jp
xor
icebp
push
lret
jbe
repnz
cli
pop
aam
rcll
xor
int
mov
mov
mov
xchg
sti
mov
mov
push
sbb
clc
mov
mov
mov
rcr
wrmsr
jb
xchg
icebp
sub
or
sarl
aaa
adc
jmp
mov
dec
push
aam
imul
sbb
cmpsl
ds
test
bnd
mov
fldcw
dec
cld
xchg
cld
add
out
inc
pop
push
lret
ds
insb
mov
das
mov
les
lds
lahf
lock
xor
sub
pusha
or
jge
add
xchg
cmp
dec
fimuls
and
enter
push
arpl
lret
out
cli
add
cmp
insl
imul
icebp
push
inc
and
es
stc
in
mov
imul
push
mov
fidivs
ret
pop
or
rclb
push
outsl
js
push
jge
fsubrp
cltd
test
sub
and
daa
jne
xor
xor
lods
mov
add
cmc
xor
ror
jbe
pushw
int3
pop
popf
sub
dec
push
mov
mov
mov
xorb
ds
lods
jp
jmp
pop
push
leave
in
shll
pusha
cmp
mov
fs
sbb
push
cmp
and
inc
xchg
test
jecxz
call
jno
jno
inc
mov
sbb
roll
sub
or
sbb
dec
adc
pop
xchg
pop
sub
cmp
push
pop
jae
aad
fcoms
pop
jns
in
mov
push
mov
test
pop
aaa
jo
lret
out
es
iret
inc
push
mov
les
ljmp
xchg
test
mov
shlb
gs
fcoms
mov
test
movsl
xchg
mov
aas
lock
mov
pusha
mov
fistpll
sbb
cld
fdivl
roll
jg,pn
or
jnp
mov
out
mov
xchg
pusha
sbb
scas
and
adc
mov
cwtl
into
inc
ja
xchg
mov
cmp
jne
jp
mov
cmp
sub
xor
xchg
mov
stos
pop
ret
cmc
or
lock
sahf
sbb
xchg
repz
push
movsb
adc
mov
fsubr
push
jg
mov
mov
test
icebp
add
les
pop
loop
push
adc
mov
test
addr16
sbb
inc
adc
aas
sub
sti
mov
popa
xor
pop
nop
pop
sahf
insl
add
adc
cli
ja
mov
mov
pop
icebp
jb
movsl
cmpsl
in
jge
or
or
std
jne
arpl
xchg
sbb
arpl
in
push
das
repnz
and
addl
int3
popa
imul
mov
stos
loopne
add
jg
push
dec
das
and
movhps
sbb
das
test
fiadds
sub
repnz
sti
mov
mov
inc
xor
or
jmp
jmp
jno
and
imul
sbb
fs
lods
jmp
pop
mov
adc
leave
cmp
out
sbb
xchg
loope
call
fisttps
movsl
mov
or
outsb
sbb
aad
or
cli
dec
jle
pop
fsts
inc
xor
and
sbb
push
xor
push
sbb
pop
sahf
push
or
enter
sbb
sbb
jmp
or
cs
add
jne
cltd
emms
sbb
sbb
into
jae
hlt
lock
push
sub
lods
daa
xor
cmpsb
jne
movsl
sbb
outsb
pop
adc
loope
repz
lea
mulb
popf
stos
sbb
adc
fisttps
int
jge
fs
push
leave
popf
mov
jl
out
jno
outsb
xor
sbb
js
lahf
push
cmpsl
sbb
scas
cltd
insb
iret
aas
aaa
pop
mov
cmp
test
xchg
adc
push
xchg
das
imul
push
push
jg
sbb
mov
arpl
lock
pop
test
pop
lds
xor
mov
shrb
sarb
jmp
xchg
mov
mov
cli
out
outsl
je
xlat
les
enter
jmp
push
push
fldcw
sbb
push
mov
cmp
loopne
call
fistpl
dec
fstpl
add
lcall
adc
xchg
sarl
or
sub
push
nop
fisttpll
ljmp
mov
fisubl
dec
pop
mov
sbb
mov
and
lahf
out
add
jne
incl
fbld
dec
fstl
xor
dec
ja
mov
stc
dec
test
sti
mov
pop
hlt
subb
bswap
mov
sub
inc
fisubrs
mov
mov
xchg
inc
dec
lock
mov
mov
and
notb
js
pop
test
cs
out
rorb
push
adc
inc
mov
push
cmp
std
jns
cmp
bound
out
xchg
lods
aaa
outsl
mov
testl
or
lods
push
jmp
inc
cmpsl
push
or
cmp
cld
inc
pop
inc
js
mov
ret
repz
movsl
pop
fstl
or
mov
rcll
xchg
cld
enter
ljmp
icebp
filds
dec
rorb
int3
ret
push
cmpl
addr16
xchg
imul
and
pop
adc
inc
mov
loopne
cmp
mov
hlt
ret
cmp
xchg
sub
outsb
push
data16
out
icebp
pusha
push
imul
pop
enter
jecxz
jecxz
ss
dec
lea
mov
pop
xor
mov
sti
lea
xor
xchg
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
mov
add
ds
les
sahf
popf
xchg
adc
jle
frstor
loop
xchg
outsl
dec
hlt
dec
inc
or
dec
jbe
lret
push
add
adc
mov
pop
dec
xor
or
rcl
pop
and
fldcw
fidivs
rol
push
add
push
aam
jo
dec
sub
mov
mov
and
and
incb
sbb
dec
dec
ror
int3
pop
sbb
out
in
mov
adc
jle
fstl
jmp
xor
or
jge
popf
or
std
push
mov
out
pop
in
mov
stos
mov
add
push
sub
es
mov
das
sub
in
cmp
fiadds
add
push
das
xor
lds
out
into
out
mov
cld
out
and
push
repz
pop
sahf
mov
dec
je
loopne
xor
mov
dec
push
fcom
inc
dec
into
jns
push
pusha
mov
pusha
fdivs
fcmovbe
dec
mov
lds
repnz
cmp
dec
jno
xor
sub
dec
and
jmp
rcl
jne
pop
lods
pushf
adc
or
push
pop
xor
jne
movsb
fwait
jns
ja
add
int3
jae
fs
inc
hlt
dec
sbb
addr16
cwtl
cmp
sahf
jl
movntq
cmp
pop
les
mov
jo,pn
sub
add
xchg
adc
or
and
stos
imull
sub
out
rclb
std
ret
xor
sbb
movsl
push
lds
test
add
iret
ret
gs
lea
cmp
jno
adcl
fsubr
les
lods
into
stc
push
push
mov
out
sbb
mov
dec
adc
mov
pop
push
int3
mov
sti
cmc
lcall
inc
inc
mov
sub
dec
jg
call
mov
jne
mov
mov
sti
inc
add
shll
aaa
dec
jnp
cmpsb
and
dec
adc
loopne
or
sbb
jb
sbb
mov
inc
out
sbb
rclb
xor
pop
pop
push
xor
mov
dec
xor
xchg
not
cli
mov
sbb
mov
xchg
push
cs
mov
xchg
push
sub
pop
andb
jae
xorb
push
nop
xchg
test
stos
push
test
push
gs
push
pusha
or
fwait
ljmp
cmp
dec
scas
rol
sub
or
adc
mov
mov
push
inc
dec
push
sub
jp
test
lea
fsubrl
movsl
jno
fcoms
xchg
call
mov
ljmp
loopne
xor
cmp
outsb
push
dec
data16
fwait
movsb
xchg
and
dec
mov
sub
sub
push
lds
shrl
inc
in
lahf
cmp
adc
dec
mov
xchg
mov
and
or
pop
add
rolb
ret
out
lea
pop
or
jno
sub
test
dec
fbstp
sbb
sbb
dec
insb
sarl
punpcklbw
fs
mov
mov
dec
ret
mov
out
popa
addl
cmp
adc
movsb
pop
sbb
jmp
popa
jbe
test
shl
fildl
gs
xchg
enter
sbb
mov
test
adc
pop
jge
lods
mov
ja
pusha
inc
adc
add
aam
popa
lods
mov
outsl
das
push
xchg
movsl
or
insb
lahf
ret
std
adc
shlb
sbb
xor
std
and
int3
negl
mov
and
fdivrs
jns
push
add
adc
adc
xor
mov
je
mov
out
push
jne
repz
sub
push
and
ss
repz
jo
jg
fisubrs
xchg
movsl
cmp
andl
adc
mov
add
scas
movsb
enter
adcb
add
cmpb
xor
or
or
in
ret
addr16
or
mov
adc
enter
stos
add
jg
push
das
mov
stc
addr16
out
sub
adc
or
push
inc
fisttpll
cmpsl
cltd
add
adc
or
and
jb
rclb
cwtl
test
cmp
and
fisubrl
cmpsl
jo
mov
outsl
mov
fdivl
xadd
adc
or
test
mov
pop
lock
pop
into
or
and
lret
xor
mov
daa
xchg
push
int3
push
xor
ds
push
into
repnz
js
pushf
push
out
int
mov
sub
test
out
mov
cmp
mov
mov
stc
jbe
fndisi(8087
mov
pop
jnp
dec
jno
xchg
jo
jb
jnp
mov
int
xor
add
movl
adc
inc
and
dec
addr16
mov
insb
jp
data16
data16
shrl
mov
lahf
mov
dec
fs
add
test
xor
test
adc
push
mov
ss
loop
mov
inc
mov
shrl
and
jle
mov
cmp
scas
rcrb
jge
dec
inc
adc
popf
int
int3
jecxz
mov
inc
pop
mov
shlb
pop
cmp
cmp
cmc
jns
out
jge
sbb
rclb
fadds
push
inc
test
pushf
jb
nop
orb
pop
cmp
mov
adc
iret
daa
call
out
inc
mov
sub
rorb
push
pop
xchg
rcll
idivb
ffree
cmp
sub
mov
dec
sbb
lods
in
pop
ret
xchg
pop
cmpsb
adc
pop
xor
mov
add
pop
mov
mov
mov
xchg
push
mov
cmc
cmp
sbb
add
cmp
lret
xor
mov
ja
inc
fwait
add
out
lods
shll
xchg
outsl
das
gs
jecxz
lods
or
inc
adcl
movsl
and
and
push
repnz
and
pop
xchg
call
mov
pop
or
xchg
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
inc
jl
js
call
cvttps2pi
lret
dec
cmpsl
add
cmpsl
lret
and
jne
jne
pop
lea
dec
sub
jmp
xor
into
iret
dec
xchg
mov
es
stc
mov
lock
out
xor
mov
cs
out
in
mov
nop
das
out
sub
jns
xor
inc
jmp
pop
gs
pop
jb
add
sub
stos
into
push
add
popf
jns
pop
hlt
cwtl
dec
add
out
imul
aad
lods
dec
xor
out
jecxz
in
ja
fwait
test
pop
insl
add
lret
cmp
dec
and
popa
jno
mov
sbb
test
jne
test
repnz
mov
mov
adc
add
and
adc
out
outsl
dec
les
dec
cmpsb
pop
dec
xor
mull
repz
ss
add
push
pusha
adc
imul
sub
jmp
mov
imul
stc
call
lods
pop
aam
out
xchg
arpl
jnp
test
cmp
and
push
nop
mov
popa
jb
fistps
repnz
daa
or
subb
jb
aad
and
xorb
sbb
es
fadd
xchg
ds
mov
lret
lret
or
mov
push
insl
imul
cld
cmp
mov
or
mov
aad
out
or
adc
mov
push
sub
addl
jp
mov
sub
js
aad
pop
xchg
ja
inc
adc
adc
sbb
sbb
cld
mov
je
sbb
mov
cmc
jns
gs
aaa
insl
xchg
add
mov
mov
adc
vmovaps
lret
aad
orb
or
jmp
dec
out
bound
sub
inc
lahf
ss
outsb
mov
pushf
cmp
addl
test
aad
ficoml
mov
fistpll
jmp
inc
je
adc
mov
scas
lahf
loopne
mov
stc
or
test
lret
mov
js
ret
ja
shlb
inc
test
or
pop
test
cltd
sub
adc
sub
jo
xor
dec
cli
mov
popf
mov
ficoms
or
pop
pop
xchg
out
movsb
aaa
mov
and
pop
ds
xchg
jecxz
movsb
inc
stos
mov
and
or
testb
inc
test
iret
xor
cmp
adc
sub
mov
jo
test
popa
mov
int3
push
int3
std
arpl
adc
inc
mov
push
inc
ljmp
aad
xor
std
inc
inc
mov
lret
add
jo
gs
mov
iret
jnp
adc
dec
clc
cmp
mov
in
pop
sbb
lods
fildl
mov
arpl
xor
adc
mov
out
rcrb
xchg
push
inc
sbb
mov
push
add
test
inc
fstpl
fisttpl
xlat
mov
cmpsb
push
stos
mov
insb
dec
js
cmp
pusha
mov
or
jns
cmp
popa
push
mov
rorb
xorb
orl
pop
loopne
xor
pop
mov
push
out
into
pushl
mov
aaa
push
or
jb
mov
lahf
andl
adc
mov
or
mov
dec
lret
cmc
cltd
out
mov
xchg
dec
stc
es
in
pmaddwd
addr16
jg
jns
daa
test
mov
pop
jp
lods
cwtl
and
loope
jbe
dec
jg
in
popa
mov
jno
xchg
pop
jp
movsl
lock
add
push
mov
pop
loop
rorl
xor
xchg
cmc
mov
and
inc
mov
iret
stos
sar
cmpsl
icebp
dec
jb
jp
dec
xchg
mov
xor
pop
adc
out
cmp
repnz
enter
xchg
ja
popa
push
and
sub
push
xor
sahf
add
in
sbbl
mov
push
xchg
fstl
mov
sbb
inc
dec
adc
data16
sub
jnp
sahf
jo
das
lret
jb
movsl
xor
insl
rdtsc
dec
cli
movsl
aam
aaa
and
pop
in
imul
shrl
adc
cld
shl
fisubs
inc
scas
fisubrs
mov
push
mov
mov
loope
xor
cltd
outsl
xor
mov
mov
mov
lcall
cmp
mov
push
add
pop
dec
mov
ja
dec
repz
daa
movsl
out
aaa
push
inc
lods
and
je
ficompl
inc
xor
and
pop
xchg
inc
mov
daa
mov
dec
aaa
mov
adc
insb
std
xor
cmp
and
iret
sbb
inc
lret
xchg
pop
fwait
int
mov
rep
xchg
std
out
xchg
adc
push
or
mov
add
sub
lods
rolb
test
outsb
and
push
arpl
movl
pop
test
fldl
int
lods
push
imulb
arpl
sbb
pop
loope
imul
lea
andb
mov
jle
enter
pop
jmp
adcl
clc
xchg
test
stc
call
nop
stos
pop
mov
fisubl
mov
lea
cmp
push
repz
ja
cmp
loopne
fsubs
jle
lret
fists
inc
mov
sbb
lret
daa
fidivrs
test
es
popa
push
xor
mov
popa
lcall
pop
jnp
and
js
adc
xchg
push
sti
into
cld
pushf
pusha
pop
jb
mov
out
movsl
cltd
xorb
lea
cmpsb
ljmp
sbb
xor
mov
and
add
push
jecxz
scas
stos
mov
scas
movsb
int3
pop
daa
call
stos
rcrl
clc
sbb
xlat
ss
xor
repz
aam
cmp
and
cld
jmp
in
std
push
movsb
xchg
jo
cmp
xor
popf
xor
insb
mov
scas
pop
sbb
pushf
test
test
inc
loopne
in
test
mov
sub
ret
fnstsw
fadds
mov
lret
mov
fs
inc
mov
lret
dec
sbbb
dec
sbbl
out
in
pop
aaa
push
fisttpl
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
nopl
sub
into
and
stc
fs
rorl
jge
cmpsl
test
loop
sbb
adc
sub
loopnew
iret
pushf
push
xor
or
adc
push
divl
das
and
ja
cmp
xor
cmp
mov
mov
xor
xchg
cs
or
loopne
xor
pop
cmp
cmpsl
mov
xchg
ficoml
xor
xor
pop
mov
lods
imul
mov
mov
outsl
arpl
das
pop
xchg
adc
xor
mov
iret
sarl
mov
sbb
fstps
cmp
jb
jbe
add
rol
ret
dec
loope
mov
and
mov
stos
arpl
lods
mov
cmp
sub
popa
repnz
popf
ret
jne
loope
lea
pushf
aas
push
sti
insb
in
adc
lret
ret
and
xor
data16
cmc
cmp
sbb
fisubrl
mov
push
jno
mov
sub
jp
push
push
stc
jo
dec
icebp
mov
xchg
mov
push
insl
sub
int
iret
out
das
or
push
xchg
jnp
rolb
xchg
xor
gs
dec
das
bound
sahf
arpl
pop
filds
mov
cmp
xchg
xor
dec
cmp
lock
pop
mov
sti
cmp
mov
gs
jmp
dec
add
jg
outsb
aaa
fwait
push
sub
lret
mov
ret
sub
clc
sbb
push
cltd
int
dec
icebp
push
shl
push
outsl
mov
cmp
pop
leave
movb
push
mov
movsl
sub
mov
test
ret
ret
cmp
shll
push
lods
ja
cs
mov
fists
mov
lods
adc
fnsave
mov
inc
push
push
outsb
push
dec
add
roll
push
inc
mov
push
sub
cmp
outsl
dec
add
xchg
ljmp
fcoms
jecxz
test
stos
cmpsb
repz
out
dec
jns
arpl
sahf
lds
xchg
movsl
pop
mov
sbbb
cmpsl
jmp
mov
test
aad
bound
loope
sti
xchg
mov
xor
mov
sbb
aad
lcall
xlat
inc
in
mov
pop
loopne
mov
and
ret
stc
xchg
adc
es
fisubl
stc
lods
pop
daa
test
jge
jmp
arpl
pop
fnstcw
sarl
lret
mov
or
mov
xchg
test
sbb
mov
mov
addb
dec
filds
jg
insl
sub
pop
jge
mov
add
mov
fnstsw
psubq
push
jae
mov
cmp
sarb
ja
mov
iret
or
lcall
and
mov
pop
dec
mov
add
lahf
cld
mov
adc
mov
lods
or
popa
cmpsl
movsl
xchg
inc
jg
notl
out
sbb
xchg
adc
jnp
or
mov
sub
cmpsb
arpl
mov
push
mov
jmp
xchg
aas
jl
mov
pop
or
mov
xchg
xchg
sub
xor
leave
aaa
xchg
cmpb
lods
rorl
ret
into
ja
fstp
push
enter
mov
sarl
pop
ljmp
or
fisttps
jmp
clc
je
daa
es
or
adc
mov
jle
and
nop
xor
pop
ficoms
addb
test
int3
enter
std
adc
jp
xorb
lahf
inc
xor
loope
xor
out
jnp
lcall
jmp
sub
cmp
cli
mov
sarb
mov
mov
ret
fiaddl
xchg
andl
outsl
push
adc
sbb
sub
sarb
mov
add
jle
push
in
cwtl
fidivs
cld
push
jle
sub
pop
fildl
fistl
mov
sbb
push
outsl
out
cmp
xor
jg
xchg
addb
add
push
mov
sahf
andl
inc
mov
push
sbb
xchg
adc
mov
hlt
lds
dec
int
sbbb
fmuls
mov
mov
out
sbb
push
je
mov
hlt
bound
cli
sahf
incb
outsb
mov
icebp
imul
inc
data16
xlat
cmpsl
lds
dec
fwait
loope
jmp
or
jmp
mov
push
cmc
and
xchg
pop
jecxz
inc
int
repz
and
cmpsl
out
ret
scas
lahf
xor
repnz
xchg
mov
mov
sub
cmp
es
icebp
test
jle
cld
insl
or
and
fiadds
cwtl
add
outsb
lret
mov
cmp
cltd
test
sub
adc
push
jb
push
dec
pop
out
push
inc
pop
fcoms
pop
dec
ds
jmp
repnz
lcall
inc
bound
in
test
cmpsl
shlb
adc
sub
addr16
jle
andb
in
out
pusha
cwtl
mov
cwtl
std
adc
or
leave
shrb
flds
js
fidivrs
out
inc
jge
and
test
push
jecxz
xor
xor
xchg
cmp
mov
loopne
and
add
sub
cwtl
push
sbb
mov
ljmp
ss
xchg
xchg
popa
jno
xor
dec
gs
mov
int3
fistpll
pop
mov
xchg
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
mov
loope
invd
add
bswap
int
sub
inc
inc
add
push
mov
fsubrs
scas
dec
inc
xor
test
pop
and
pop
push
and
mulb
mov
pop
cwtl
outsb
adc
in
or
ljmp
leave
dec
ficomps
roll
fdivrs
adc
cmpsb
xor
clc
dec
xchg
ja
sbb
call
cmp
push
or
cmpsl
pop
push
jmp
mov
sbb
adc
mov
in
push
pusha
aaa
out
rcl
cld
scas
mov
shrb
add
push
sub
inc
cmpb
shll
lds
and
jb
push
jge
mov
lcall
sahf
cli
mov
or
inc
xlat
pop
jge
shll
cs
xchg
int3
sbb
jg
pusha
stos
mov
mul
movsb
push
movsb
fists
push
lods
sbb
add
fcmovnbe
fmul
lcall
call
int
sub
imul
inc
dec
adc
inc
adc
sub
outsb
mulb
push
mov
cwtl
lret
pop
stos
fisubrs
mov
mov
or
clc
stos
fcoms
mov
scas
jmp
sub
cwtl
repnz
out
add
outsb
mov
cld
enter
adc
adc
js
push
inc
ret
ljmp
test
mov
fwait
cwtl
push
mov
imul
lret
imul
xchg
sahf
test
sub
rcrl
shl
mov
jb
dec
fdivrl
sbb
insl
add
add
mov
xchg
les
testl
sbb
push
test
faddl
pop
lea
stc
cld
sbb
leave
jo
cld
sar
sbb
mov
add
add
sbb
ss
pop
sub
xchg
fnstsw
xor
ficoml
daa
stos
pop
cmp
jge
mov
decb
bound
inc
aam
jmp
push
test
popa
sbb
ret
enter
iret
mov
mov
hlt
out
xchg
cmp
inc
push
mov
xor
adc
daa
or
push
shrb
push
fadds
dec
je
and
lahf
fistps
popa
rcrb
jecxz
into
push
cltd
ja
xchg
jle
push
shll
mov
bound
sub
sahf
and
mov
lret
adc
into
enter
xchg
or
daa
mov
add
or
sub
sub
or
int3
pop
shrl
test
dec
ljmp
dec
bound
xchg
mov
dec
push
pop
pop
ss
push
mov
lods
mov
ja
xor
arpl
inc
pop
xor
jle
test
inc
ds
sarl
dec
push
imul
or
or
test
jmp
mov
xor
cmp
fwait
cmpsb
push
mov
xchg
mov
dec
mov
cmp
lret
sbb
in
and
aaa
push
js
mov
dec
adc
je
dec
mov
inc
movsb
jp
int3
mov
fisubl
insl
sbb
rcrb
dec
test
sbb
and
stos
arpl
cmpsl
adcl
mov
sbb
add
hlt
mov
jb
inc
cmp
jg
mov
push
es
jge
faddl
pop
xchg
mov
pop
icebp
mov
push
incb
sbb
jo
fstpl
imul
popf
out
push
xor
gs
jnp
addr16
mov
daa
test
in
and
xor
or
sbb
xchg
mov
in
fstpl
push
mov
push
syscall
sahf
dec
pushf
add
iret
jne
sahf
or
outsl
inc
insb
pushf
mov
jp
cmp
sub
xchg
mov
sbb
mov
cmp
xchg
popf
int
add
lock
shr
lahf
dec
cmp
mov
outsl
inc
push
stc
mov
popf
fmulp
jne
pop
addl
sbb
das
add
sbbb
sbb
push
out
icebp
ffree
or
bswap
xchg
popa
aas
pop
ret
mov
pop
outsl
in
push
in
push
lock
and
lcall
push
mov
push
mov
je
or
test
push
jge
aad
mov
push
xor
popf
jno
cmp
outsl
adc
lods
inc
pop
fwait
inc
sub
mov
lock
inc
inc
sub
cltd
out
xchg
incl
adc
les
mov
sbb
lods
pushf
sbb
movsl
insb
js
jbe
and
cltd
pop
adcb
inc
lret
jb
outsl
lods
adc
cmp
inc
jge
pop
push
mov
out
hlt
lods
lods
jbe
xor
lods
loopne
fcomps
stc
shrb
dec
mov
test
mov
jmp
pop
xchg
fs
sub
jmp
push
outsl
fsub
cmp
mov
sbb
lret
test
adc
mov
imul
out
aad
jbe
jp
pop
addl
push
scas
mov
pop
jg
dec
push
mov
lds
mov
imul
adc
testl
jp
rol
call
fists
ret
shrb
leave
mov
inc
jp
andl
shl
shl
sbb
cmp
inc
inc
fadds
sbb
sub
cmp
push
nop
cld
shlb
ljmp
add
dec
in
push
cmp
fwait
xchg
and
ljmp
pop
jg
in
pop
sub
test
rcrl
pop
and
fwait
and
leave
jae
mov
xchg
clc
and
fiadds
cmp
jb
push
dec
enter
mov
and
in
mov
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
icebp
mov
invd
add
subps
movsl
lods
ja
pushf
into
mov
ljmp
repnz
hlt
jo
sarl
call
ljmp
xchg
push
pushf
pop
xchg
fnsave
mov
das
xor
stc
mov
add
sahf
mov
or
daa
inc
dec
sub
mov
movsl
repnz
mov
jg
out
out
push
cmpsl
pop
mov
adc
lcall
or
in
jle
ja
pop
dec
out
out
dec
rcrl
cmpsb
jns
add
xchg
roll
rol
jp
pop
pop
mov
adc
mov
jne
jnp
jg
cld
sbb
sub
and
cs
outsl
lret
test
and
lods
enter
daa
movsl
insb
add
push
mov
lods
pop
and
cmc
imul
pop
std
repz
pusha
jp
jle
mov
data16
mov
xchg
in
dec
dec
stos
jmp
fs
loope
xor
xor
mov
stos
jb
insl
imul
ljmp
and
mov
add
or
into
adc
stc
aas
fs
das
clc
popf
inc
pop
cmpsb
fidivrl
add
outsw
aad
xchg
jl
push
out
fistpll
shlb
cmc
fldenv
data16
out
push
dec
repnz
mov
jnp
and
push
ss
jle
test
fidivl
inc
jp
inc
and
cmpsb
sub
sahf
addr16
jle
test
mov
and
pusha
outsl
js
imul
jg
or
out
jbe
jg
xchg
adc
into
mov
xchg
sub
push
nop
dec
jecxz
movsb
iret
aad
sbb
enter
xorb
enter
orl
outsl
or
pinsrw
mov
inc
pusha
lock
mov
pusha
push
fs
cli
movsb
pop
adcb
in
push
mov
stos
sub
ss
pushf
clc
imul
les
jl
in
or
outsl
jle
mov
push
fnstsw
pop
lcall
cmpsl
dec
neg
add
fmuls
jmp
jno
js
jp
pop
mov
or
mov
ja
movsb
sarl
push
pop
out
mov
sub
dec
push
jnp
jecxz
iret
jmp
jg
aad
adc
jecxz
sub
mov
xchg
add
pop
add
dec
into
jnp
ss
enter
jo
out
lods
stos
pop
js
mov
popa
testl
cmp
pop
adc
adc
fidivrs
sbb
sti
addl
add
push
fcmovnu
or
arpl
clc
sbb
pop
test
pop
cmpsb
loopne
shl
mov
and
dec
adc
daa
das
mov
inc
sub
out
loopne
dec
xchg
ret
xorb
mov
inc
fwait
adc
or
and
xor
jmp
addr16
ja
dec
enter
mov
addr16
js
test
mov
push
pop
mov
lret
sbb
shll
js
push
cmp
mov
nop
pusha
popf
inc
pop
icebp
cmc
sbb
mov
loope
cmp
cmp
xor
xor
out
imul
xchg
loop
shrl
cmc
sbb
addl
jb
push
add
stc
jo
sbb
lea
sbb
adc
ficoml
pop
push
in
cmp
outsb
cmp
cmp
loop
jne
cmp
mov
fsubl
daa
mov
cltd
push
cmp
push
lret
sub
cwtl
pop
outsl
roll
inc
lock
mov
lret
roll
repnz
cwtl
sti
jecxz
insb
or
xchg
rol
lods
and
data16
mov
inc
outsb
std
lret
fcomp
fs
dec
js
scas
cmp
push
mov
adc
push
cmpsl
arpl
mov
or
es
or
jb
repz
cmp
mov
push
das
shlb
int3
pop
adc
rcr
shl
push
enter
mov
jge
jmp
stos
hlt
xchg
jge
and
into
xchg
call
in
inc
out
rcl
jmp
sbb
jle
pop
ja
pop
cmpsb
into
insb
or
ja
jnp
fstpl
out
popa
jmp
outsb
pop
test
mov
xchg
mov
pop
sub
movsb
or
and
xchg
inc
test
out
into
clc
ds
lahf
adc
arpl
stc
xchg
pop
mov
xlat
aam
mov
sub
pop
adc
push
dec
mov
sub
and
arpl
jne
in
in
jae
adc
fcmovbe
imul
loopne
fstpt
rcr
inc
push
jmp
rcll
mov
pop
hlt
xchg
pusha
sahf
jbe
sub
inc
inc
mov
adc
sahf
xchg
lahf
roll
add
lods
dec
fistpll
arpl
call
insl
push
es
enter
fldt
lea
sbb
enter
dec
cmp
bound
sbb
addb
fstpl
enter
xchg
shl
rorb
addb
inc
es
hlt
xlat
insl
call
add
xlat
andl
xchg
fisttpl
add
insl
sbb
sub
mov
add
mov
aaa
and
mov
mov
jecxz
test
cmp
add
dec
movsb
mov
shlb
shll
mov
add
mov
or
jo
fidivrl
xor
mov
sbb
shll
pop
mov
cli
std
jne
cmp
pusha
sbb
fiaddl
popa
inc
mov
jl
push
push
cwtl
sbb
xchg
jmp
cmc
push
jno
gs
aad
andl
sbb
sahf
out
xlat
adc
sub
scas
pop
popf
sti
push
cld
sbbb
icebp
pop
push
shrl
mov
insb
andb
push
push
sub
mov
dec
fwait
lods
adc
pop
adc
popa
imul
enter
dec
add
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
pmaddwd
push
sbb
jbe
push
inc
ss
dec
fs
jmp
xchg
add
push
mov
push
xchg
lea
imul
in
mov
sahf
push
icebp
mov
mov
jne
das
dec
dec
sbb
mov
jno
ss
lret
icebp
cmp
add
mov
ljmp
pop
imulb
out
lahf
cmp
popf
stc
adc
inc
cmp
mov
adcb
rclb
dec
shrb
or
pop
mov
adc
js
inc
xchg
repz
fmull
out
rol
or
jecxz
and
ljmp
add
add
sbb
movsb
iret
out
sarb
sbb
and
cmp
fisubl
loope
mov
stos
and
pusha
push
adc
lds
js
lea
enter
dec
mov
testl
addl
jb
das
into
and
jmp
pop
add
push
addb
stos
dec
insb
rcrl
inc
jl
das
arpl
inc
insl
imul
sarb
adc
adc
sub
rcll
ljmp
ret
filds
xor
daa
mov
adc
in
sbb
xor
or
push
std
lret
mov
loopne
leave
iret
mov
jnp
lahf
xchg
push
push
jns
adc
inc
das
loop
lret
aas
outsl
das
sub
lock
js
push
vcomiss
testb
loopne
sbbb
add
cwtl
ret
in
mov
mov
push
roll
leave
cmp
mov
lret
rolb
loopne
cmp
push
push
or
adcb
sbb
jmp
or
negl
push
outsb
jecxz
popf
mov
mov
int
ret
inc
shl
xor
lock
inc
enter
add
add
mov
repnz
pop
mov
lods
mov
mov
inc
mov
pushf
and
aam
xchg
in
sbb
mov
daa
int
lret
mov
call
nop
in
dec
movsb
cmp
push
test
jp
out
movsb
aam
sub
arpl
mov
mov
inc
mov
cmp
mov
cmpsl
inc
shl
push
imul
sub
shl
inc
lds
lods
test
dec
adc
into
dec
cmp
out
xlat
leave
mov
lcall
lock
adc
cmp
ret
mov
shrb
inc
cmc
inc
dec
arpl
je
js
jg
push
in
test
sub
push
mov
in
inc
fcmovnu
sub
stc
jg
aaa
push
inc
dec
in
pusha
or
dec
aad
dec
dec
push
jno
push
push
mov
aas
lcall
jp
sbb
orb
jmp
cmc
jecxz
fsubl
xor
mov
mov
stos
sbb
or
push
notl
movsb
sar
push
jecxz
push
pop
push
pushf
sub
cmp
in
jnp
pusha
add
mov
shll
xor
mov
inc
lods
pop
shrb
addr16
daa
outsl
jg
fcomip
sbb
arpl
loope
in
xchg
sbbb
jne
call
xchg
jle
out
test
push
arpl
les
mov
pop
adc
push
dec
push
push
out
into
push
xor
test
xor
add
or
pop
test
and
mov
enter
pushf
test
or
mov
int3
dec
push
lea
hlt
aaa
fs
loope
int
mov
inc
sahf
inc
add
repz
mov
dec
lcall
mov
mov
pop
insb
add
add
mov
add
dec
mov
pop
push
mov
push
sub
roll
xchg
lds
in
aas
call
sbb
pop
cmp
in
sub
xchg
int3
cmpl
andb
icebp
dec
std
xchg
mov
cmpsl
stos
aaa
xchg
jbe
jns
aam
dec
xchg
test
das
clc
add
stos
jns
mov
std
je
shr
cmp
add
test
insl
aad
je
imul
dec
pop
gs
mov
jns
ret
dec
mov
or
ljmp
add
in
cld
popa
scas
sub
test
scas
call
inc
aam
xchg
mov
adcb
push
dec
mov
cli
lahf
xchg
mov
sbb
out
loope
adc
leave
jmp
inc
out
push
pop
cmp
cmp
sub
sub
push
test
ret
stos
ds
cmp
ret
inc
ja
dec
jmp
and
test
cmp
mov
push
pop
fistpl
incb
mov
xchg
cli
dec
cld
push
inc
fcoml
push
outsb
mov
fistpl
or
ljmp
call
xchg
aaa
rorb
lahf
xchg
stos
test
gs
push
mov
fs
sti
pop
add
adc
cld
sub
cmp
add
sbb
sti
xchg
fadds
or
rorb
add
push
clc
mov
repnz
movsb
add
in
and
outsb
test
xor
popf
jecxz
loope
and
arpl
out
pop
cltd
push
dec
enter
xchg
test
jne
and
call
sub
fcomps
pop
movsb
pop
mov
iret
icebp
mov
jl
insb
cli
icebp
inc
sbb
mov
fadds
fidivrl
divb
aaa
pop
mov
fs
lcall
sbb
stos
les
outsb
pop
jno
loopne
mov
pop
repz
inc
mov
les
test
imul
mov
xor
and
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
lcall
invd
add
rsqrtps
lds
sahf
and
pop
sbb
aam
out
pop
jne
jg
testb
push
ret
out
movsb
xchg
outsb
test
out
pop
adc
inc
imul
inc
imul
addr16
xor
mov
inc
adc
mov
orw
or
or
inc
mov
mov
jge
fdivrs
jl
jns
ss
lret
aaa
sub
and
ds
dec
scas
add
ret
jge
fbstp
iret
lahf
stos
lret
fld
and
dec
lea
fldl
sub
enter
lds
pop
daa
dec
je
or
cmp
ds
mov
or
xchg
cmp
push
arpl
aas
dec
stos
mov
sbb
push
add
jl
out
pop
dec
jbe
or
fadds
icebp
daa
mov
loope
or
call
repz
sbb
mov
in
xor
jmp
shl
movsb
mov
stos
ret
push
sbb
inc
fsubrs
stc
imul
iret
push
mov
in
loope
shl
xlat
divb
shlb
stos
push
lret
sbb
xor
fsubrl
leave
repz
repz
cld
mov
lds
ret
div
leave
test
pusha
add
add
decl
xor
inc
xlat
mov
mov
adc
cld
popf
aas
inc
xchg
je
and
iret
push
mov
rorl
and
movl
mov
imul
test
adc
mov
mov
pop
mov
leave
cwtl
push
lret
pop
pop
pop
aaa
add
mov
pop
leave
jmp
push
dec
mov
cld
testl
aaa
inc
xchg
sbbb
repnz
pop
shlb
adc
int3
pop
cwtl
test
sbb
jae
sub
dec
pop
sahf
rcrb
dec
xchg
mov
inc
xchg
mov
aas
movsl
push
mov
adc
sub
pushf
xor
andb
ja
cwtl
pop
xor
negl
xor
loopne
in
push
in
aad
jbe
mov
cmpsl
fwait
ja
jecxz
lahf
xchg
aaa
shlb
push
xor
popf
lods
dec
pop
mov
mov
lds
mov
cmp
sahf
jmp
adc
lahf
cltd
dec
and
jo
sbb
pop
cld
pusha
jne
in
iret
shrl
hlt
call
cmp
or
sub
outsb
and
pop
pop
fists
mov
xor
enter
sub
jbe
inc
movntq
or
jb
fmuls
mov
dec
pop
mov
aaa
inc
ror
cld
cmpsb
jne
jp
loopne
xor
lahf
pop
test
or
sub
outsb
pop
xorl
add
xchg
sub
mov
push
push
lcall
fwait
imul
pop
aad
rcrb
sub
lcall
add
push
xchg
loopne
fistl
js
and
pop
clc
mov
cld
int
jecxz
sub
sbb
mov
minps
sub
or
stc
jae
push
shl
cltd
leave
adc
aas
pop
bound
inc
sub
insl
inc
int
test
mov
outsl
rolb
push
adc
mov
setge
xor
int
add
inc
insb
daa
jl
xor
push
jne
shlb
enter
inc
or
imul
popa
push
pop
add
push
push
sbb
or
dec
fld
add
out
jb
jecxz
rclw
dec
ss
add
in
push
movsl
dec
in
or
out
aad
cmp
mov
bound
xor
or
sub
mov
adc
dec
popf
add
push
mov
mov
mov
dec
loopne
xchg
inc
loope
xchg
sbb
out
bnd
ficomps
les
and
pop
out
sub
or
mov
xor
or
jno
sahf
sub
pop
ja
popl
adc
icebp
push
cmpsl
not
xor
mov
scas
mov
and
pop
and
pop
xor
cmp
cmp
jp
adc
adc
std
cmp
das
mov
xor
rcrl
pusha
imul
inc
outsl
das
xor
clc
inc
sub
jbe
cmpsb
add
mov
sbb
outsl
test
loopne
fidivrs
aas
hlt
sub
and
leave
es
cld
xor
mov
cmp
or
cli
mov
lret
cmp
mov
pop
fnstsw
jecxz
mov
push
cwtl
jnp
shlb
icebp
or
lret
scas
and
ss
pop
lcall
adc
mov
or
and
adc
xchg
fisttpll
cwtl
mov
or
adc
in
cmpsb
mov
mov
cmp
mov
je
inc
sub
sub
cmp
inc
add
rorb
sbb
inc
cmpb
cwtl
jnp
or
pop
add
in
pop
push
push
cmp
sub
dec
fistps
mov
mov
sbb
enter
dec
rcll
icebp
add
iret
dec
adc
inc
mov
rolb
fcoml
shrb
lahf
bound
mov
mov
inc
movsl
arpl
outsb
test
insl
addr16
sbb
mov
add
mov
xchg
jg
loope
mov
out
sub
sbb
sbb
lods
dec
adc
xor
cmpsl
jae
add
out
pop
shl
pop
loope
das
add
repnz
movsb
in
adc
cmp
or
arpl
jmp
mov
pop
idiv
jmp
mov
xchg
mov
mov
xchg
add
sete
dec
sbb
daa
icebp
sub
add
sub
hlt
lahf
lret
arpl
push
xchg
insl
lret
shll
pop
cmp
mov
mov
xor
sbb
iret
adc
mov
pop
and
sbb
xor
ljmp
sar
add
cmp
lods
ljmp
pop
push
pop
mov
cwtl
jne
push
imul
fld
clc
aam
lea
out
mov
loop
push
aas
push
pop
adc
fsubr
push
or
cmc
fstps
lret
or
add
xchg
mov
clc
xor
lret
pop
dec
pop
push
cwtl
outsb
clc
outsb
lahf
cli
sti
mov
inc
mov
cwtl
aam
xchg
push
enter
jg
mov
pop
addr16
lea
pop
mov
clc
ret
scas
iret
aaa
jae
add
push
inc
inc
ss
stc
js
mov
push
icebp
shll
icebp
jbe
out
or
mov
stc
roll
xor
or
enter
lods
fnstsw
ficoms
ja
pusha
js
mov
dec
push
subl
arpl
mov
adc
or
mov
xor
movsl
nop
xchg
or
mov
add
inc
test
sbb
dec
sub
jle
lret
adc
pop
lret
jp
and
xor
pop
and
ja
and
mov
inc
lret
mov
addr16
push
xchg
inc
mov
lahf
insl
jl
xlat
movsb
xchg
out
lods
and
pushf
test
sbb
push
imul
push
mov
in
xor
lods
xor
das
out
mov
movsl
push
rolb
lock
and
lret
push
push
bswap
or
stos
les
std
shl
mov
or
xchg
mov
jp
movb
mov
xor
inc
jge
add
pop
dec
and
xchg
mov
dec
xchg
clc
lods
mov
sbb
add
lcall
fwait
mov
and
fcomps
fdivrs
sbb
add
popf
or
enter
int
int
adc
pop
adc
xor
fwait
sub
std
std
call
adc
shrl
adc
ret
or
push
js
mov
or
fstps
hlt
sub
mov
jae
xchg
xchg
push
adc
std
fdivr
fcoms
lock
jecxz
xchg
push
hlt
pop
sbb
dec
fbld
mov
out
mov
add
sbb
inc
or
rcr
mov
in
es
cmp
ss
ds
insb
loop
push
pop
inc
push
jecxz
out
je
jge
add
test
mov
loopne
adc
add
adc
mov
cwtl
mov
dec
pop
jb
mov
out
jbe
ds
xorl
dec
jb
and
and
or
stc
mov
push
mov
push
push
movsb
xor
or
jmp
mov
call
fcoms
nop
dec
fisttpl
out
scas
add
adc
stc
sbb
jb
xor
loopne
xchg
rorl
insb
nop
cmpsl
mov
insl
dec
ret
or
stc
mov
cs
jbe
adc
and
jmp
sbb
cmpsl
aad
loopne
jnp
and
mov
pop
pop
inc
mov
stc
sbb
fnsave
adc
push
xchg
adc
dec
fld
shll
insl
dec
jecxz
mov
dec
dec
imul
imul
add
sub
fwait
cltd
and
mov
ficoml
push
lock
xor
and
mov
mov
push
sub
inc
dec
das
pop
sbb
inc
jl
add
inc
lret
lcall
hlt
adc
push
inc
adc
ret
mov
stos
or
xchg
mov
rcrl
gs
aas
int
push
cmp
add
xor
lods
sbb
xor
sbb
in
lret
mov
mov
mov
adc
je
imul
xor
adc
inc
enter
loop
mov
stos
lods
push
mov
jo
jmp
rcll
cmc
xchg
push
and
push
das
mov
test
adc
dec
jge
movsl
mov
out
aad
or
push
test
sahf
dec
sti
mov
sbb
iret
loop
cmp
or
fsubs
aam
mov
mov
mov
imul
sarb
cltd
les
pop
xchg
xor
rcr
or
arpl
test
jne
out
fisttpll
inc
loope
sub
push
ja
aad
movsb
mov
xchg
ret
std
daa
insl
call
imul
cmc
nop
dec
in
data16
cmp
lcall
xorb
mov
add
push
xchg
lret
xchg
push
xor
push
ficoms
pop
mov
in
add
jns
dec
mov
pop
into
push
loopne
imul
aad
icebp
push
mov
mov
push
cwtl
daa
lcall
je
sbb
xor
sub
loop
imul
dec
mov
movsl
or
stc
xor
mov
test
fwait
add
in
push
lds
pushl
cmp
cli
popa
dec
mov
push
xchg
test
inc
mov
jg
les
mov
xchg
xchg
ja
adc
test
jmp
push
out
dec
decl
es
test
test
jns
xor
push
add
push
ret
ret
iret
mov
cmp
cli
mov
add
pop
and
cmp
dec
or
xchg
aas
orb
in
push
sbb
xchg
test
les
cmc
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
test
invd
add
lfs
adc
fwait
in
repz
imul
jg
inc
ja
nop
lea
jecxz
or
mov
hlt
and
and
and
cmp
or
popf
xor
neg
mov
aad
mov
jne
cmp
jg
mov
inc
movsl
aam
pushf
or
inc
push
xchg
inc
push
arpl
xchg
mov
jl
ja
repnz
adc
adc
test
push
xchg
test
xchg
cwtl
pushf
fdivrl
je
sahf
mov
add
cltd
les
cmp
out
jp
out
outsb
cmpsl
sbb
pop
movl
xlat
mov
xlat
pop
jl
into
inc
cmpsb
scas
add
jnp
sbb
call
outsb
jl
hlt
cltd
inc
xor
fsubl
dec
les
out
movsl
fisttps
mov
xchg
ds
pop
add
mov
fst
adc
fsubrl
mov
scas
mov
mov
ret
push
sbb
scas
int
test
call
jne
out
mov
mov
pop
xchg
pop
cmpsl
js
or
sbb
mov
fwait
aad
xor
lcall
fmuls
adc
or
sti
xchg
mov
and
cmp
add
xchg
lcall
push
pop
add
inc
xchg
pop
push
loope
scas
cltd
fadd
mov
hlt
dec
sub
sbb
xchg
cmpsb
sar
adc
das
iret
xchg
out
xchg
mov
shll
mov
mov
push
or
aad
lods
aas
xor
out
mov
mov
cmp
mov
stc
pushf
dec
or
xchg
mov
dec
dec
mov
mov
outsb
movsl
ja
divb
ret
loop
std
jo
or
test
gs
popa
pushf
xor
stos
popa
decb
jecxz
lcall
outsl
out
lret
push
adc
lahf
xchg
fdivrp
aaa
xchg
cltd
push
lods
and
cmp
or
inc
pop
mov
mov
mov
insl
mov
out
pop
push
jg
and
in
aaa
sbb
inc
xchg
orl
push
sub
dec
xor
mov
rorl
pop
or
mov
adc
out
test
xchg
daa
lods
popl
ds
icebp
and
out
arpl
dec
or
jo
inc
jbe
dec
scas
pop
cmp
mov
out
shrl
sbb
xor
bswap
rorl
push
das
or
jecxz
inc
lcall
test
push
inc
xchg
enter
cmp
movsl
push
lahf
enter
xlat
pop
shlb
and
lods
jnp
imul
sbb
sbb
jne
add
sub
test
adc
jl
adc
fwait
cs
xor
popf
cwtl
setp
in
mov
dec
sbb
inc
imul
inc
cli
lock
sbb
ljmp
out
jne
lahf
jmp
pop
inc
popf
testl
mov
out
mov
fistpl
loop
js
mov
orb
loopne
push
adc
stos
jae
sbb
pop
das
test
push
aas
stc
pop
int3
xchg
inc
movsl
jbe
sbb
dec
add
jg
std
and
xor
je
test
xchg
add
xchg
pop
xchg
fidivrl
pop
and
cmp
out
lahf
repnz
ljmp
and
aad
rcl
ret
ret
sarb
les
or
dec
xchg
mov
push
sbb
xor
jb
mov
imull
negb
inc
call
dec
mov
data16
ljmp
repz
lret
sti
adc
mov
inc
in
sbb
pop
mul
jbe
cmp
sub
jp
jo
imul
cmpb
leave
add
mov
int
xor
pop
fimull
cli
jg
mov
test
sub
sbb
lods
or
cmp
sti
xor
mov
push
fisttpll
andl
xor
xorps
rorb
popa
out
repnz
add
cwtl
movsb
push
pop
xor
adc
lcall
call
pop
sbb
or
pop
sub
xchg
iret
lods
push
aam
mov
leave
mov
fwait
mov
out
notb
ret
rcll
into
mov
add
push
cli
or
aad
push
inc
out
pop
loop
adc
or
mov
je
test
sbbl
jge
jge
test
dec
cmp
adc
mov
pop
push
push
jb
sbb
test
icebp
insl
or
xor
pop
cmpsb
test
inc
stos
and
mov
inc
pop
fdivs
push
cmp
sub
add
pop
jp
xor
and
pop
pusha
in
lret
les
xchg
cmp
pusha
jle
imulb
imulb
outsl
pop
sub
out
xor
and
jle
mov
push
cmpsb
add
pop
inc
mov
outsl
cmp
mov
cmpl
xchg
push
pushf
fdivrs
nop
mov
add
mov
mov
out
or
and
jmp
aad
outsl
pop
lods
and
or
lret
xor
lock
push
cs
jecxz
insl
lcall
or
and
pop
push
sbb
cmp
inc
aas
sbb
sbb
pop
push
mov
aam
bound
add
cmpsb
cwtl
add
sbb
ljmp
lods
xchg
mov
inc
bound
inc
jle
pop
addr16
mov
dec
bound
cmpsl
repz
scas
out
sbb
push
jecxz
sub
pop
scas
and
xor
add
dec
mov
sbb
daa
orb
adc
dec
notl
addr16
fisttpll
pop
jno
jns
dec
icebp
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
data16
mov
add
cmpps
dec
sahf
filds
and
mov
push
lock
or
mov
clc
outsb
mull
imul
repnz
pop
dec
stc
movsl
and
or
xor
fcmovnu
add
adc
scas
bound
cmp
stos
mov
cs
mov
xchg
add
lods
js
mov
mov
jo
ss
popa
push
add
cmp
loopne
fdivrs
rcr
nop
lock
jl
xchg
xor
mov
iret
push
push
in
mov
out
cmp
dec
cwtl
mov
sbb
lea
sub
repz
in
mov
hlt
xor
cmpsb
cmp
xchg
js
jo
xchg
je
add
adc
or
or
scas
push
push
dec
jo
daa
aas
lcall
mov
iret
sub
jbe
in
popa
push
cmp
fdivr
hlt
and
jmp
sti
push
loopne
aad
sub
or
std
je
lret
fdivs
std
jmp
test
push
aas
cli
mov
and
cld
stos
sbb
or
and
jnp
sub
push
dec
in
inc
lods
call
mov
pop
outsb
and
jnp
lahf
jmp
in
sti
fadd
sub
push
mov
xor
imul
stos
nop
je
pop
outsl
mov
pop
jl
fwait
jne
sbb
jg
adc
aas
cli
sub
dec
call
adc
push
ja
call
xor
fmull
iret
push
cmp
mov
mov
stc
mov
adc
xor
xchg
dec
data16
loope
jb
dec
push
rcll
pop
inc
dec
das
pop
sub
cld
sbb
repz
int3
imul
cmp
leave
push
dec
and
outsb
outsl
push
iret
dec
jno
je
xchg
stos
mov
dec
enter
stos
cs
test
ljmp
jle
jle
sub
les
test
jle
rorl
jns
mov
or
mov
pop
out
into
pop
inc
lcall
mov
pop
mov
push
inc
pop
loop
out
dec
test
pop
cmp
inc
pop
cmc
mov
sbb
adc
mov
xchg
mov
movsb
or
cmp
jne
mov
and
daa
stc
pop
aad
aas
or
das
test
sar
popa
pop
add
xchg
jecxz
lods
pop
insl
sub
hlt
mov
and
pop
and
and
std
jae
dec
scas
aam
ds
adc
push
pop
fnstenv
cmp
lcall
daa
xchg
or
mov
ja
stos
xor
and
pop
mov
add
dec
cmp
dec
sbb
mov
adc
mov
rol
adc
push
mov
imul
fdivp
mov
mov
adc
xor
imul
imul
popa
mov
in
add
test
dec
popa
sti
aas
arpl
sub
je
subl
test
cs
jmp
push
push
pop
sbb
add
xor
ret
ficoms
cs
push
jne
or
push
push
dec
cld
out
sbb
pop
and
mov
xchg
dec
fsubrp
lret
push
pusha
inc
add
xchg
pop
push
test
jae
sub
inc
scas
xlat
jne
stos
or
shlb
shll
add
jno
repnz
sti
cmpsb
add
cli
adc
and
sbb
mov
subl
xor
or
inc
pop
add
aas
fistpl
mov
sub
out
push
mov
sbb
dec
shll
push
and
pushf
xchg
adc
pusha
fsubs
ljmp
mov
xor
das
xlat
sub
scas
mov
dec
inc
xor
out
xlat
faddl
xor
sub
sbb
or
push
xor
cmp
adc
xor
addr16
and
and
dec
push
ficomps
xor
std
inc
call
ljmp
and
pop
sahf
mov
imul
es
sub
out
scas
or
stos
pusha
arpl
push
imul
test
fwait
fs
sbb
pop
popf
xor
jnp
or
xor
fiaddl
sub
push
fistl
mov
push
stos
inc
cmp
mov
or
inc
adc
push
jp
outsb
sub
aas
fistpl
pop
inc
xchg
mov
icebp
outsb
sbb
xchg
imul
stos
dec
xor
dec
xlat
mov
xchg
and
or
repnz
aaa
test
mov
repnz
test
or
fldt
mov
pop
and
mov
jb
push
add
sbb
pop
pushf
sbb
sbb
or
xchg
xchg
push
and
outsl
imull
adc
xchg
or
xlat
es
cmpsb
mov
and
mov
insl
dec
repnz
sub
adc
sbb
mov
cs
adc
xor
repz
mov
lods
mov
pusha
xor
scas
cltd
xchg
pop
mov
outsl
xchg
xchg
xlat
xchg
aaa
cmp
sti
push
xor
and
les
lahf
dec
lcall
out
js
mov
mov
sbbb
xchg
scas
fdivrl
je
pop
jmp
add
cmpsl
and
lcall
push
stc
push
xchg
cmp
repnz
lods
lret
adc
addr16
test
shl
jmp
or
cltd
cltd
popf
out
xchg
inc
xchg
and
mov
jne
icebp
push
je
or
mov
out
and
lret
xor
inc
adc
add
stc
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
fistps
mov
add
setnp
mov
jmp
push
dec
popf
jnp
and
cmpsb
insb
aad
loopne
les
stos
call
adc
mov
or
daa
out
mov
jns
fisubrs
mov
shrl
pop
enter
in
mov
divb
xchg
mov
lahf
fs
push
iret
sbb
mov
fadds
sbb
insl
dec
mov
and
lods
int3
cmp
lods
jecxz
lods
pop
dec
push
add
adc
in
mov
cmpsb
sbb
pop
adcb
repnz
mov
fadds
out
jo
dec
mov
out
xchg
adcl
mov
mov
in
mov
leave
arpl
fnsave
notl
and
sarb
outsl
lock
sub
jl
call
daa
clc
jecxz
aam
add
jno
add
jmp
jp
shlb
pop
or
rclb
popa
imul
sub
nop
in
in
xchg
jae
cmp
dec
ja
addl
and
js
ret
xchg
je
cmpsl
imul
jle
or
loope
xchg
inc
add
jp
sub
gs
pop
xor
movsl
mov
cld
sub
pop
arpl
push
das
sbb
and
xchg
out
xchg
and
lods
cmpsb
sbb
fmuls
test
test
adc
sub
dec
ja
pop
sub
or
leave
scas
cmc
pop
push
rol
int3
insb
dec
push
pop
mov
fildl
adc
mov
sbb
lret
sub
frstor
cli
fsubp
aam
rol
stos
push
iret
pusha
dec
dec
hlt
mov
push
pop
mov
cmp
int
imul
dec
addr16
and
or
inc
dec
lods
adc
xchg
add
shlb
xchg
int
mov
cmp
mov
jns
inc
jnp
and
jmp
xor
jo
push
mov
mov
sbb
pop
push
ss
sbb
push
mov
shlb
leave
mov
push
mov
mov
jmp
int
mov
xchg
add
cmp
int
dec
push
inc
cmpsl
push
movsb
push
mov
int
xchg
mov
mov
inc
out
jp
sub
cmp
test
shlb
das
jne
jecxz
out
icebp
insl
jmp
sahf
shr
and
ret
xor
lods
stc
push
sub
inc
inc
rcrl
ret
into
pop
adc
aaa
jmp
fs
or
jle
jb
lret
sbb
cmp
notl
sbb
shrb
mov
out
out
cwtl
dec
and
pop
xor
rorb
adc
and
leave
xor
cwtl
mov
addr16
insb
jp
sub
inc
in
jecxz
test
lods
adc
push
sahf
fcompl
int3
pop
adc
pop
cmp
jne
es
push
shl
outsl
andb
andb
je,pn
or
sub
cmp
or
push
or
inc
mov
sbb
jle
jae
jmp
nop
ret
call
dec
stc
insb
clc
xchg
jecxz
or
fwait
jl
mov
mov
cmp
pop
mov
or
xchg
and
les
or
call
adc
push
sub
scas
push
pop
cs
lcall
mov
fisubrs
dec
dec
sar
bound
out
mov
dec
ja
sarl
xchg
test
xchg
std
out
xchg
mov
jl
iret
jo
inc
cmp
pusha
insl
mov
dec
dec
xchg
sahf
cs
pop
aad
icebp
aas
push
jle
fs
add
mov
push
push
in
cmp
jno
xchg
lea
xor
movsb
sbb
jno
mov
rorl
mov
repnz
arpl
and
dec
test
mov
push
mov
cld
mov
jno
push
out
ljmp
add
in
lea
loopne
push
adc
in
lods
dec
push
mov
data16
mov
xlat
cld
addr16
test
loope
pop
enter
out
cmpsb
inc
mov
push
cmp
das
test
and
fs
mov
add
add
dec
jmp
clc
or
jae
js
aaa
jecxz
adc
and
pop
ret
pop
out
sbb
adc
jp
pop
jne
stos
enter
sbb
add
inc
xor
dec
cli
pop
scas
jbe
jb
fs
cmp
inc
imul
sti
dec
sbb
aad
or
dec
xchg
push
and
cmc
fwait
ds
fldl
aam
out
dec
mov
fistpl
push
mov
mov
rcrl
mov
mov
aad
ret
jne
mov
pop
add
into
xchg
inc
adc
nop
ret
cmpsl
push
cmc
int3
cmc
lods
pusha
fldt
fwait
ss
push
aad
aaa
insb
sub
sub
push
adc
std
pop
ficoms
outsl
imul
and
xchg
jp
les
push
hlt
jecxz
push
aaa
mov
lret
dec
cmp
inc
leave
jmp
aad
jns
dec
pusha
xor
insb
movl
mov
in
pop
pop
cmpsl
sub
push
in
push
mov
popa
sub
pushf
dec
pop
xchg
adc
movsl
mov
call
mov
xchg
sbb
icebp
jno
lds
push
fnstcw
insl
test
pusha
jmp
push
repz
shrb
sub
int
sub
test
xor
sbb
sub
notb
neg
xchg
repz
mov
xchg
out
mov
dec
add
cmp
lea
data16
test
and
push
ljmp
add
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
psrld
outsb
push
adc
int
inc
xor
mov
mov
repnz
or
jne
adc
xchg
add
and
xor
fdiv
xor
xchg
mov
xor
loope
adc
inc
jno
ret
mov
call
cwtl
xor
or
cltd
push
cltd
dec
jle
loop
in
jecxz
sub
das
push
les
mov
mov
xchg
int3
enter
movsb
lcall
dec
cmp
and
push
xchg
ds
mov
mov
shlb
aaa
outsb
mov
mov
jmp
push
cmp
jb
std
mov
jmp
mov
push
sbb
inc
sub
push
std
mov
out
test
cmp
iret
mov
sbb
mov
cmpl
mov
es
or
ja
rcrl
into
jne
sub
push
or
xchg
push
das
fdivr
jge
push
and
pop
repz
adc
scas
test
pop
adc
cld
clc
movsl
pop
push
cmpsb
int
dec
clc
inc
sub
sti
sbb
mov
outsl
out
sbb
sub
aam
out
stos
into
mov
push
loope
or
inc
jnp
cmp
xchg
and
or
ss
cli
mov
adc
or
data16
or
pop
mov
xchg
jae
gs
bound
pushf
dec
pop
in
cmp
ret
push
movsl
sbb
or
sbb
mov
xor
xchg
cmp
mov
enter
dec
cmpsl
je
mov
cmovae
cmp
jnp
push
mov
into
cmpsl
add
aam
repnz
aam
into
movsl
sahf
test
fdivrl
popa
std
push
divl
sub
pop
rcll
sub
sub
loope
push
mov
mov
repnz
pushf
dec
dec
mov
out
push
enter
and
sub
push
mov
aad
push
cmp
add
add
fsubrs
mov
scas
fwait
dec
push
mov
clc
movsl
js
test
dec
test
xor
test
xor
jmp
dec
mov
aam
mov
pop
mov
push
ret
addr16
push
mov
jns
notl
test
sarb
mov
sub
add
jmp
movsb
lret
int3
lods
je
icebp
aas
dec
int
adc
mov
xchg
test
lahf
xor
test
inc
enter
cmc
and
sub
fcomps
insb
pop
dec
gs
mov
mov
mov
xchg
adc
push
lock
arpl
scas
loop
daa
push
sub
xchg
insb
int
dec
sub
stc
or
int3
push
je
sub
sub
dec
cmp
fxch
mov
fisubrs
fidivrs
cld
lcall
mov
loopne
cmpsl
pusha
shl
jne
mov
pop
pop
arpl
sbb
pop
popa
imul
pop
push
add
mov
mov
ds
stos
cmc
add
xchg
ret
stc
aaa
lret
gs
or
mov
mov
mov
outsb
lods
mov
mov
adc
loope
call
and
and
cmp
and
inc
push
cmpsb
cmpl
lock
out
out
push
subb
dec
test
dec
ds
mov
mov
jne
test
fs
imull
je
cmc
xor
mov
xor
iret
mov
movsb
add
and
pop
roll
ja
xlat
add
movsl
inc
scas
mov
int3
sub
in
je
xchg
ljmp
cmp
xor
fnstenv
and
or
clc
stc
cmpsl
mov
xchg
cmpsb
cmp
add
int3
xlat
bound
imul
jb
sar
inc
mov
dec
jle
rclb
sub
test
add
mov
iret
lret
std
pop
pop
push
mov
aad
push
or
pop
cli
mov
xchg
or
push
dec
mov
adc
ret
mov
jne
adc
dec
pop
out
dec
stos
mov
ss
movl
jb
lock
push
test
dec
insl
cmc
in
cmp
hlt
sbb
stc
sbb
fadd
cwtl
inc
aaa
lock
movsb
gs
and
jmp
xor
sbbl
push
loope
add
jmp
or
pop
xor
push
cmpsl
int
xchg
cmc
test
out
lcall
xchg
ret
xchg
dec
sub
push
jmp
push
xchg
out
mov
out
xor
je
lods
inc
adc
mov
hlt
cwtl
aam
adc
add
cmp
jg
xlat
popf
sahf
add
mov
lahf
test
inc
jne
jns
bnd
sub
lret
outsb
data16
enter
int3
jmp
add
inc
rcll
ss
sbb
inc
dec
xor
xchg
and
test
rcll
aas
push
inc
push
pop
les
in
outsl
or
ljmp
or
aas
pop
rcr
jnp
dec
aaa
inc
jle
mov
jae
mov
or
icebp
mov
movsb
sub
adc
fwait
iret
cmp
xor
dec
shrb
pop
xor
mov
cmp
movd
in
mov
xchg
cmp
sub
mov
das
pop
insb
mov
sti
mov
jg
pop
add
fisubrl
push
aaa
fldl
adc
adc
out
clc
and
cmp
mov
cmp
ljmp
mov
sub
push
push
push
mov
cmp
push
mov
movsb
or
xor
cmpsl
mov
or
movsb
jo
in
pushf
push
mov
xor
inc
jecxz
lcall
cmpsb
jb
or
int
adc
add
add
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
loop
xchg
mov
or
punpcklbw
repz
subb
or
sub
inc
push
scas
xor
sbbl
call
push
adc
insb
mov
lret
sti
in
cli
push
push
lds
jo
loopne
cmp
in
ds
dec
xchg
scas
cmp
xchg
leave
cmp
mov
scas
pushl
andb
inc
jl
jmp
cmp
nop
incb
movsl
sub
pop
push
test
mov
icebp
mov
mov
xor
mov
mov
or
gs
and
nop
cmpl
lock
mov
fstps
jmp
cltd
sub
aas
mov
in
mov
leave
add
mov
adc
repnz
dec
jb
imul
push
cmp
pusha
aam
pop
gs
adc
imull
mov
and
shlb
cmp
fmuls
mov
xchg
push
dec
fidivl
ret
xchg
sub
imul
and
arpl
pop
hlt
mov
inc
push
push
arpl
mov
aam
enter
mov
data16
dec
dec
mov
xchg
hlt
xchg
mov
repz
jp
jg
leave
lcall
add
jno
sub
sti
div
lcall
mov
or
loope
jbe
cs
idivl
sbbb
es
cmpsl
loopne
sub
sub
ljmp
aas
scas
and
pop
cs
pop
cmp
nop
adc
jp
jmp
mov
or
inc
add
int3
and
stc
dec
in
jo
mov
cmp
jge
cmp
mov
shrl
loopne
push
repnz
int
mov
hlt
inc
pusha
cmp
mov
aas
dec
in
pop
adc
loopne
lods
jns
xchg
iret
es
mov
xchg
xor
push
int3
jb
pop
push
and
push
jecxz
cmp
lahf
fmuls
dec
cmp
dec
and
shl
ljmp
xchg
lahf
dec
sbb
and
jbe
jecxz
cltd
setge
pop
and
lock
test
call
mov
ljmp
mov
outsb
das
fistpl
fcmovne
jg
xor
sub
and
rclb
jb
mov
adc
lret
or
pop
mov
pusha
test
mov
gs
inc
push
xchg
pop
pop
int
jmp
mov
aam
imull
and
xchg
pop
add
dec
sbb
lcall
mov
fistpll
mov
xchg
imul
push
ror
jnp
pop
pop
jge
sbb
fisubrl
test
repnz
pop
mov
jmp
cwtl
mov
out
repz
push
jg
jecxz
aas
fstps
push
mov
gs
cmp
xor
mov
pushl
idivb
imul
xchg
jle
icebp
pop
fs
test
sub
or
outsl
pop
mov
cmp
jo
stos
pop
movsl
jg,pt
mov
or
inc
xchg
jno
xor
jg
js
dec
mov
sbb
and
fildll
xor
sbb
dec
enter
jge
xchg
push
loope
jb
aaa
sti
js
inc
sub
jb
mov
loopne
mov
repnz
xchg
sbbl
dec
jbe
insl
mov
fsts
inc
scas
nop
ret
insb
addr16
cltd
dec
add
rcrb
xchg
dec
or
stc
mov
stc
rolb
push
cmp
pop
dec
ret
into
cmp
cmpsb
out
inc
stc
add
das
xchg
or
sub
push
cmp
push
test
mov
icebp
aam
or
lods
pop
call
sbb
cld
sbbl
shll
cmp
call
jo
cmpsl
add
fnsave
jmp
lret
xor
push
push
sbb
nopl
call
cmpsb
lcall
cltd
mov
test
fs
jecxz
test
movl
out
in
cwtl
pushf
mov
cltd
mov
mov
cmpsb
cmp
shll
jmp
mov
and
scas
mov
inc
lods
aad
xor
xchg
mov
scas
shlb
clc
cli
out
mov
in
jb
xchg
fwait
and
addb
jb
jno
mov
pop
insl
lahf
dec
sub
inc
xor
dec
mov
imul
pop
dec
pop
mov
dec
mov
in
sbb
push
ljmp
repnz
mov
adc
movsb
inc
fsubr
push
adc
mov
inc
add
pop
add
aas
adc
bound
aas
test
pop
add
push
ficoml
jge
scas
jbe
popf
pop
adc
aam
mov
jae
jb
cmpsl
fiaddl
xchg
mov
stos
push
sbb
inc
les
cmpl
mov
push
aad
pop
mov
fcmovu
adc
cmp
scas
fdivrs
repz
sbb
clc
loop
mov
dec
jle
and
xchg
jmp
inc
ret
shrb
lds
clc
add
inc
sub
data16
mov
lret
jp
adc
sbb
mov
bound
sub
movsl
pop
push
or
mov
int3
test
jle
push
ja
lahf
pop
adc
iret
xchg
loope
lds
in
xlat
fsubrl
pop
in
jae
xlat
out
push
fdivl
stos
stos
lret
cltd
mov
adc
sub
push
mov
mov
sbb
xor
inc
add
imul
rcll
add
pop
push
jns
sarb
inc
out
jle
int3
xor
idiv
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
mov
xor
fisttps
invd
add
jo
jb
mov
cmp
scas
leave
xor
enter
das
jecxz
add
lret
xchg
sti
mov
addr16
lods
rep
add
jnp
mov
mov
out
xchg
test
xchg
loope
xor
mov
xchg
dec
in
ret
adc
pop
arpl
mov
leave
movsb
loope
fimull
fisttps
fcompl
push
hlt
sub
out
orb
inc
popf
add
std
and
shlb
and
inc
pop
imul
adc
insl
xchg
lcall
hlt
movl
mov
in
aaa
add
ja
ss
popa
push
pop
mov
push
xor
add
test
mov
movl
mov
pop
cmc
insl
fildl
cld
mov
pushf
mov
adcl
xor
sbb
dec
in
test
inc
adc
pop
push
test
sarl
subb
cmp
stos
mov
inc
or
test
rolb
sub
pop
loope
inc
es
test
imul
mov
xchg
inc
xchg
xchg
jmp
add
push
lods
and
outsb
mov
or
cs
aam
je
xlat
adcb
mov
dec
lcall
lcall
lahf
loop
mov
and
subps
jg
stos
enter
xor
rol
fucomip
inc
push
xor
shlb
fidivs
stc
pop
push
into
dec
fsubp
push
cmc
inc
aas
test
iret
dec
push
das
mov
arpl
mov
mov
clc
or
add
lahf
stc
loopne
pop
cmp
fistpll
sub
add
sbb
stos
push
je
mov
or
jae
pop
pop
std
ret
add
and
mov
fwait
addl
imul
sbb
scas
pop
xchg
push
jbe
push
push
cmp
cmovg
arpl
fsubrl
inc
push
sub
mov
sub
sub
push
movsb
insl
lcall
cmp
fucomip
cwtl
mov
push
or
adc
mov
popa
lods
std
lret
and
dec
out
pop
test
mov
jmp
push
and
rcrl
push
inc
cmpsb
add
push
xor
cmp
pop
inc
cmpsb
push
rep
inc
mov
xchg
inc
lcall
fistpl
stos
divl
movsl
push
pop
pop
or
imul
push
sub
lcall
pusha
mov
jns
dec
cld
sbb
inc
dec
icebp
mov
std
add
add
rorl
pushf
mov
lahf
push
outsl
jb
cmp
xor
popa
rol
jle
stc
jmp
js
fucomip
nop
push
popl
out
inc
add
add
leave
push
mov
daa
add
pop
scas
dec
addr16
fwait
sbb
cmc
hlt
sbb
sbb
pop
adc
bound
mov
je
js
mov
push
aas
jg
xchg
push
or
sub
add
and
jge
jl
aad
insl
sahf
cmpsb
inc
shrb
mov
dec
push
jno
add
in
xor
ret
pop
dec
push
clc
pop
addr16
sub
mov
mov
add
push
push
loop
insb
jecxz
out
adc
js
push
cmp
jno
xor
push
mov
jmp
stos
cmp
push
jb
inc
sbb
sbb
imull
cmpsl
aaa
repz
dec
or
clc
mov
mov
push
fiaddl
mov
fidivs
and
es
pusha
ficoml
cmp
mov
aas
inc
loopne
scas
dec
divl
notb
ljmp
test
pop
pop
int3
sahf
sub
aad
jl
subb
scas
icebp
mov
xor
lahf
rcr
out
add
in
push
sahf
xchg
lock
or
jns
test
sbb
lret
mov
lcall
lcall
mov
inc
pop
in
shll
arpl
mov
adc
sbb
cs
push
icebp
push
fstpt
xchg
rorl
lods
and
sub
inc
adc
cmc
inc
mov
jns
pop
adc
sti
sbb
and
pop
jns
xchg
push
test
sub
movsl
jbe
insl
stc
jmp
pop
imul
out
leave
jle
xchg
leave
push
jb
lea
das
popa
mov
cmpsl
or
aas
aam
adcb
inc
stos
or
fisttps
xorl
mov
fstp
leave
xchg
lret
sbb
lahf
mov
aas
out
mov
sbb
sbb
lds
jae
shll
dec
cmpsl
hlt
rclb
out
xor
sbb
jns
iret
pop
mov
aas
adc
mov
lods
fs
outsb
jo
rorl
push
mov
test
cmp
adc
in
push
add
mov
and
sahf
lea
xchg
pcmpgtw
lahf
out
xor
in
push
sub
dec
mov
or
add
loop
xor
imul
data16
sub
ret
push
cmc
movsl
rcrb
test
add
inc
js
mov
into
inc
mov
mov
cmovnp
mov
jnp
xchg
mov
pop
js
movsb
or
arpl
repz
stos
mov
test
cwtl
push
xchg
push
push
mov
lds
sti
adc
in
fsts
hlt
jo
jecxz
fildll
negb
push
dec
mov
shll
pop
int
rcrl
mov
pop
sub
aaa
add
sub
push
mov
push
out
add
call
outsl
adc
loop
sbb
cmp
cmp
xor
fistpl
loope
repz
mov
jp
jl
les
fs
lea
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
psubw
xchg
xchg
scas
cltd
xchg
lahf
mov
inc
mov
lcall
mov
gs
pop
jp
stos
sbb
adc
mov
mov
std
mov
jl
arpl
leave
lods
pop
fwait
add
in
ljmp
bound
mulb
scas
stos
pop
inc
cmp
ret
aad
insl
hlt
fstps
cmp
outsb
sub
sub
aam
fcmovnu
add
cmc
jl
adc
das
int
leave
pop
or
push
out
into
popf
sti
je
or
xchg
add
leave
cmp
and
bound
andl
inc
mov
push
xor
test
enter
imul
stos
push
xor
pop
andl
hlt
cmp
pushf
adc
mov
pop
xchg
and
jae
dec
in
fstpl
jns
jo
xor
push
pushf
sbb
hlt
push
popf
repnz
jnp
es
inc
mov
clc
into
ja
lock
jl
sti
int
js
mov
xor
xchg
rcrl
and
jns
pop
aad
mov
xchg
mov
pop
xor
push
xchg
mov
mov
aad
fwait
xor
sarb
into
fsubs
bound
push
daa
adc
pop
out
jmp
faddl
mov
in
sub
arpl
cmp
repz
dec
sub
mov
push
adc
lock
lret
jnp
ficomps
loopne
mov
cmpsb
mov
jmp
mov
loopne
and
or
or
scas
mov
and
test
xchg
gs
xchg
push
cld
sbb
test
lock
shll
dec
sbb
in
out
ja
inc
jne
push
andl
movsl
pop
mov
jnp
pop
roll
mov
mov
shll
pop
sahf
stc
aas
jnp
addr16
popf
mov
jmp
into
mov
bound
jg
dec
mov
dec
aam
adc
mov
inc
in
or
xor
sbb
int3
xchg
or
inc
dec
ret
mov
adc
mov
jl
mov
mov
cmp
sahf
sbb
sub
jecxz
fldl
cmpsl
jl
repnz
cmp
mov
cmp
cmp
jo
or
lock
add
dec
dec
xchg
mov
adc
or
pushf
mov
clc
inc
lock
cwtl
imul
cmp
filds
inc
dec
bound
call
xchg
xorb
out
xchg
repz
cmpl
cmpsl
mov
sub
arpl
pop
stc
xlat
in
jb
js
fdivrs
sbb
xor
dec
bound
out
imul
fcomi
mov
jo
or
xor
sbb
dec
mov
xor
icebp
xor
mov
pushf
imul
pop
push
mov
mov
jecxz
jae
xchg
push
lcall
jno
jg
lea
in
mov
mov
jno
and
dec
push
or
cli
inc
ret
xor
movb
fisubl
ljmp
xchg
jecxz
push
push
inc
movsl
jle
ror
inc
leave
fstps
cltd
test
mov
xor
loope
sahf
sbb
stos
push
pop
pushf
mov
jmp
mov
sarb
xchg
pop
lret
cmp
test
movsl
pop
fisubs
push
into
push
lods
mov
sub
cmp
adc
pop
stc
push
add
in
push
mov
int3
sti
mov
call
xorl
xchg
jae
popa
stos
test
jecxz
push
push
and
repz
push
xchg
sbb
or
ficoms
push
inc
pusha
pusha
cmpsb
sti
mov
jg
enter
sbb
jmp
inc
dec
imul
and
pushf
ja
xchg
jecxz
and
in
hlt
aad
adc
sbb
mov
in
arpl
pop
mov
mov
dec
jns,pn
cmp
jg
icebp
call
int
adc
adc
lods
jns
popf
mov
push
mov
inc
xlat
cmc
mov
fwait
out
push
push
je
add
data16
leave
mov
test
xchg
stc
mov
cmp
cmp
push
adc
cltd
dec
div
jb
mov
jl
xchg
mov
mov
aaa
add
pop
dec
cli
push
jns
dec
lcall
jle
push
jae
in
mov
lcall
in
ljmp
dec
cltd
int
xchg
pop
or
adc
loop
mov
repnz
aas
adc
std
jne
inc
sub
out
imul
shrl
arpl
sub
mov
lcall
fstl
aaa
adc
or
arpl
sti
lods
pusha
hlt
xchg
push
push
stos
dec
sub
push
loopne
mov
xor
pushf
sti
std
aaa
jno
jmp
test
mov
cli
push
mov
and
mov
in
jns
sbb
mov
aaa
out
jno
in
ret
mov
jp
mov
sub
mov
popa
pop
pop
lea
lea
movb
jns
repz
jl
les
scas
mov
in
and
push
mov
aam
and
ds
sbb
in
dec
xchg
je
in
fadds
movsb
stos
xchg
ljmp
ffreep
out
lods
jp
movsl
mov
movsl
arpl
xor
sub
ljmp
jmp
sub
dec
mov
push
add
xlat
xchg
dec
add
push
push
mov
outsl
divb
cld
shll
inc
ss
mov
clc
mov
sub
sbb
int
cwtl
cmp
out
mov
imul
inc
rorl
or
cmp
cld
adc
add
xor
cmpsl
rcrl
mov
lcall
call
sbb
push
in
rol
loope
jmp
push
mov
cli
sbb
fnstenv
dec
adc
invd
add
pcmpgtd
out
pop
adc
jbe
aad
cli
into
mov
pop
or
sub
out
ret
ss
mov
sub
pop
fcmovnu
mov
popa
adc
push
adc
shrl
push
or
push
std
sahf
adc
addr16
je
push
jl
add
leave
inc
out
ss
or
and
xchg
negb
out
shll
lods
adc
adc
inc
and
cmp
sbb
cmp
mov
sub
xchg
mov
cmp
push
lock
aam
mov
ljmp
push
pop
inc
mov
rcrb
bound
lret
sbb
aas
dec
dec
movl
jae
add
cld
or
pop
out
outsl
mov
imul
push
movsl
xchg
mov
movsl
stc
inc
inc
mov
push
xchg
lcall
mov
sub
movsl
cmpsl
mov
imul
std
imul
xor
mov
pop
xor
sbb
or
mov
xchg
ja
stos
and
xor
sub
in
ret
mov
add
sbb
cmp
mov
es
sub
es
loope
inc
dec
lret
xchg
pop
and
jnp
fcomps
loop
pusha
daa
cmp
test
xor
out
and
in
cmp
jp
mov
int
fidivrs
ficomps
dec
pop
clc
sar
add
pop
out
mov
dec
adc
adcb
xor
xor
insl
jp
dec
in
mov
mov
push
mov
pop
push
mov
ds
dec
dec
lods
jb
mov
adc
insl
mov
cmp
add
fstl
jecxz
insl
dec
sbb
pop
add
fstpt
push
pop
mov
xor
jmp
jp
ss
add
bound
or
icebp
jae
testl
cmpsl
fistpll
aad
xor
call
sbb
int3
cmp
jmp
pop
push
adc
loope
adc
std
nop
dec
shl
andb
clc
sbb
jmp
xchg
inc
xchg
mull
xchg
les
subl
mov
inc
stos
pop
divl
fwait
add
jl
nop
mov
sahf
xchg
int3
mov
mov
fistl
mov
insb
out
iret
ljmp
repz
pop
cmp
cmp
and
gs
sub
out
cli
sbb
mov
mov
mov
add
pop
jecxz
push
sahf
test
push
fists
mov
mov
test
lods
sbb
imul
jp
push
mov
rcll
xchg
incb
mov
or
call
fcmovb
inc
jne
movsl
lods
in
pushf
push
add
in
mov
mov
aas
lret
sub
mov
loopne
imul
mov
repz
mov
pop
sbb
mov
and
inc
jne
push
fs
jmp
jbe
stos
xchg
pop
sub
out
int3
lret
aam
inc
push
mov
cli
punpckldq
mov
lods
push
adc
xor
push
stc
js
lea
mov
mov
inc
and
mov
cmpsb
or
push
mov
add
mov
imul
pushl
test
icebp
into
cltd
das
rcl
cmpsl
sbb
jge
fcompl
loop
cmp
xchg
dec
jge
inc
cmp
xchg
push
iret
shr
jmp
pop
mov
sbb
and
mov
leave
inc
shlb
dec
inc
add
mov
rol
xor
jnp
lret
test
mov
jbe
movsb
xorb
scas
ss
sub
insb
dec
push
cli
push
in
push
inc
mov
imul
movsl
das
bound
fwait
xchg
js
rcrb
movsl
xlat
lahf
jbe
cmp
sahf
popa
out
lock
outsl
inc
ja
sub
fsubrp
fcmovb
sahf
adc
mov
sub
adc
addr16
or
mov
xchg
daa
je
ja
les
sysret
inc
cltd
aad
pop
jge
dec
repz
mov
lods
jmp
jecxz
sbb
js
mov
insl
push
mov
movsl
dec
jecxz
cmpsb
dec
jne
pop
movsl
in
push
subb
imul
aam
xor
xchg
dec
addr16
cmp
or
lock
xor
gs
inc
inc
imul
into
test
or
add
in
pusha
aas
stc
lock
add
push
hlt
mov
sbb
repz
mov
stos
hlt
jecxz
enter
jne
aad
mov
or
xchg
xor
pop
sbb
xchg
ret
lods
jb
or
and
pop
in
dec
mov
fisubrl
outsl
out
sbb
xchg
ds
and
dec
mov
ljmp
test
mov
call
or
test
scas
add
shl
inc
dec
jmp
push
mov
leave
jmp
pop
sub
mov
fnstsw
mov
mov
pop
test
scas
xor
mov
std
or
sub
mov
inc
mov
sub
int3
mov
stos
std
gs
in
mov
movsl
xchg
loope
push
jno
fsubrl
imul
sbb
test
aam
jae
jne
xchg
xchg
stos
xor
outsl
add
mov
in
xor
loopne
loopne
or
and
dec
sbb
xor
adc
out
ret
cmpsb
or
fsubrl
in
pushf
jno
cltd
mov
push
adc
mov
ret
cmp
sub
test
cltd
xlat
xor
jno
pop
nop
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
inc
out
mov
pfcmpge
xchg
js
inc
push
dec
movsb
js
inc
fistpll
cmp
in
das
push
mov
or
sahf
push
aaa
or
push
jno
sahf
sbb
adc
mov
inc
insb
sub
sub
mov
xor
ds
xchg
sbb
testb
es
and
cmc
mov
or
or
mov
mov
inc
push
fdivp
inc
push
jb
sbb
add
loopne
jmp
add
xor
jns
inc
cmc
mov
or
jnp
xor
outsl
add
jo
add
add
jnp,pn
stc
fcomip
fidivs
popf
push
push
sahf
jp
mov
mov
push
addr16
scas
mov
pop
mov
jne
inc
mov
ljmp
pop
mov
sbb
out
fistpll
aas
mov
push
ja
sbb
pop
lods
dec
add
aaa
cmp
inc
pusha
adc
xor
cmp
add
in
int3
pop
mov
sbb
sbb
and
push
nop
sbb
inc
cwtl
adc
es
inc
je
subl
xor
cmpsl
mov
mov
add
aaa
mov
enter
pusha
fldt
inc
pop
ja
lcall
adc
bound
xor
mov
inc
pushf
adc
jae
nop
cmp
inc
int3
dec
mov
pop
pop
dec
out
adc
sub
fs
cmpsl
aam
enter
add
es
fucom
cmc
shr
std
xchg
xchg
data16
imul
enter
push
leave
rol
rclb
mov
mov
mov
xchg
mov
xchg
cwtl
repz
stos
ds
mov
push
scas
xchg
mov
cltd
mov
or
jns
shl
and
inc
stos
cmc
push
xchg
arpl
pusha
sbb
pop
xor
hlt
movsb
in
xchg
loop
adcl
mov
jmp
cld
jb
mov
cmp
lahf
or
sarb
addb
push
or
xchg
sub
aaa
mov
lds
sbb
sub
cmp
das
sbb
sbb
lds
mov
pop
add
fsubs
enter
xchg
push
sub
cmpsl
nop
sti
jae
mov
loopne
enter
mov
cltd
cmp
mov
insb
test
dec
or
ja
or
push
and
ucomiss
inc
xor
sub
xlat
pushf
pop
mov
dec
push
out
scas
andb
loopne
in
dec
sub
fucomip
jbe
sbb
popa
dec
test
xchg
cmp
mov
addr16
pop
add
stos
in
addr16
pop
aam
mov
adc
jbe
std
xor
sbb
mov
jl
lcall
mov
dec
out
push
or
mov
mov
jmp
jg
shll
mov
jl
cmpsl
les
es
cmp
and
mov
hlt
rorl
lds
or
adc
ret
leave
mov
inc
aas
fsts
test
adc
add
bts
fs
nop
sub
rol
xchg
push
aas
decl
in
sbb
cmp
mov
cli
fs
mov
pop
addr16
mov
cmp
adc
cmpsl
cwtl
flds
xchg
and
sbb
insb
sti
stos
mov
xor
or
ja
mov
pop
sub
out
stc
mov
cs
rcr
push
pop
mov
add
ret
pop
inc
gs
rcl
xlat
rol
in
cltd
sti
inc
bound
mov
pop
mov
popa
or
xchg
fs
pushf
inc
add
push
loop
fcompl
es
pop
inc
addb
movsl
adc
cltd
mov
inc
or
push
push
push
popf
push
fiaddl
push
test
xor
dec
xor
stos
loope
shrl
in
mov
aaa
pop
sbb
shlb
xor
adc
add
lods
jne
mov
mov
jns
mov
loop
adc
in
cwtl
out
mov
into
xchg
xchg
stc
xchg
hlt
fnsave
mov
jno
pop
nop
jle
sahf
addl
mov
push
ss
hlt
cmp
sub
mov
pushf
xchg
loop
sbb
out
inc
into
test
enter
cli
or
lods
and
nop
es
push
jne
and
mov
xchg
sub
cmp
das
mov
pop
cmpsb
sub
mov
pop
dec
adc
out
call
add
out
fwait
imul
std
pop
cmp
mov
sub
enter
sbb
sbb
pop
ror
sti
lods
nop
sbbl
arpl
xor
mov
or
xchg
pop
mov
xor
xchg
es
and
push
push
inc
and
insl
inc
inc
jae
imul
mov
stos
pop
loopne
sarl
mov
sbb
push
sbb
pop
test
sub
pop
addb
movsb
mov
dec
and
and
xor
jp
and
sbb
ret
or
lea
pop
mov
xlat
push
fldenv
mov
loop
xchg
dec
jmp
lds
push
hlt
outsb
cmp
sbb
das
arpl
adcb
xor
xchg
cmp
mov
in
xchg
xor
out
sbb
sbbb
addb
push
stos
xor
xchg
out
adc
cmpsl
sahf
cmp
test
out
test
push
dec
rcll
mov
push
or
or
test
jmp
or
or
lahf
fs
sbb
jmp
movsb
int3
nop
inc
cld
add
ljmp
fidivrs
xor
inc
es
xchg
pop
push
or
subl
mov
jno
push
xor
jae
mov
loopne
repnz
lea
test
and
fnstcw
jmp
xchg
sarl
mov
jae
arpl
mov
or
jo
mov
add
mov
sub
jl
outsl
mov
stc
cmp
mov
popf
xlat
mov
xchg
in
cmp
enter
inc
add
adc
clc
xchg
fwait
repnz
push
lahf
pop
sbb
inc
pop
mov
and
push
icebp
fildl
icebp
add
fs
xor
mov
inc
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
pop
push
xchg
sbb
mov
setae
adc
cld
or
insl
data16
movsb
mov
and
clc
aas
add
sbb
cmc
jl
mov
pusha
push
fiaddl
and
fwait
inc
xor
jns
lahf
sub
mov
nop
mov
xor
and
mov
repz
lret
test
lds
pop
adc
pusha
pushf
or
cs
shrb
add
sub
mov
lcall
sbb
sti
jne
dec
push
es
xchg
insb
mov
xchg
xchg
js
sahf
ret
scas
adc
bound
out
arpl
test
mov
inc
popa
xchg
sahf
add
xlat
imul
adc
pop
cmp
push
jne
stos
fwait
data16
cmp
cmp
push
add
sbb
cmp
xchg
xchg
cmp
xor
rclb
or
pop
and
inc
add
xor
xchg
dec
js
jae
dec
outsb
and
sbb
imul
outsb
sub
xchg
mov
xchg
xor
mov
test
movb
cld
pushf
cmp
dec
push
mov
dec
in
das
inc
jns
lcall
fcmovb
roll
lret
sbb
or
sub
in
jae
jp
inc
jo
pop
add
into
jb
gs
clc
int3
jne
pushf
jp
clc
mov
dec
or
outsb
and
stc
divb
cmp
cmpsb
cld
pcmpgtb
mov
ljmp
aad
jnp
xchg
mov
lods
daa
inc
cmp
xchg
xchg
data16
push
loop
lods
pop
cmpsl
lods
lea
inc
out
lret
aaa
addr16
add
leave
leave
mov
scas
das
inc
inc
insb
lahf
into
fistpll
in
icebp
call
pop
push
loopne
and
mov
shrb
and
repz
jbe
push
pop
sbb
xchg
fiadds
cs
stos
and
inc
pop
inc
orl
pop
pop
jns
addl
sbb
lods
cld
push
lahf
dec
add
pop
add
jae
clc
icebp
mov
imul
shlb
mov
inc
sbb
push
inc
lahf
add
test
mov
inc
stos
mov
or
dec
ret
testl
jecxz
dec
sub
int
hlt
iret
pop
cltd
ja
fidivrl
add
jge
jl
shl
loope
lds
icebp
cmp
and
pop
jl
inc
jo
scas
addr16
lods
leave
stc
xchg
insw
adc
pop
sbb
jl
jl
push
jne,pn
cmp
mov
int
adc
stos
xor
sbb
adc
in
or
and
jo
insl
lods
xchg
add
cwtl
icebp
sub
adc
js
test
dec
stos
insb
cmpsl
out
lock
cld
mov
push
jne
stos
cmp
xchg
data16
or
add
lods
cli
into
inc
push
inc
sbb
sbb
sti
push
stos
sbb
gs
and
lock
rcrl
xchg
cmp
loopne
int
cmp
push
or
in
jge
jbe
movsl
mov
insb
xchg
mov
inc
pusha
idivb
lea
je
repz
dec
icebp
inc
fsubrl
in
xor
fimull
leave
cltd
xor
fisubl
repnz
pop
adc
test
jmp
rcr
cmp
mov
pop
rcl
push
cld
jl
repnz
mov
sbb
sbb
pushf
inc
testl
adc
push
ds
in
loopne
fwait
or
xchg
popa
and
mov
lcall
in
test
adc
sbb
sbb
repz
inc
dec
cmpsb
sbb
imul
push
cld
sub
lcall
aad
pusha
mov
sbb
pushf
jnp
mov
cld
inc
sbb
pop
lret
xor
shl
xchg
out
pop
rolb
sub
sbb
ja
test
rorb
mov
neg
gs
rolb
inc
in
add
lret
or
xchg
lock
cmp
into
ss
push
pushl
push
sbb
sbb
inc
mov
push
out
dec
and
divl
mov
fidivs
int
cmp
cmp
fs
iret
push
inc
aam
cmp
mov
jnp
push
push
cld
ja
add
stos
in
sbb
or
shrb
dec
push
xlat
mov
xor
sub
cmc
in
xor
aas
mov
shrb
addl
xor
rclb
pop
jnp
test
inc
pusha
xchg
std
fisttpll
lds
cmp
mov
push
or
test
js
inc
add
sbb
aas
aas
adc
data16
mov
clc
mov
orb
mov
adc
dec
decb
xor
lods
jae
jae
push
push
das
push
cmc
pop
jmp
and
sbb
bound
push
mov
fsubl
xor
sub
loopne
sbb
aad
repz
mov
cmpsb
xor
or
paddsb
movsl
es
or
cld
or
push
jmp
sub
movsb
jne
push
imul
pop
and
mov
test
js
pop
push
arpl
xchg
mov
xchg
out
dec
fwait
loopne
push
fidivrs
mov
xor
call
imul
mov
aas
ror
lods
test
add
dec
mov
jge
pusha
fcmovnb
push
push
call
aad
sahf
stos
inc
flds
aam
les
add
xor
divb
xchg
pushf
jo
movsb
idiv
hlt
dec
mov
clc
pop
xchg
movsb
lds
stc
ja
cli
push
sub
mov
dec
xchg
xchg
fidivl
scas
mov
nop
pop
add
lods
mov
push
jo
and
sahf
mov
icebp
mov
repnz
and
lret
xor
mov
xchg
jbe
fists
cmp
pop
in
cmp
inc
or
pop
jmp
mov
cmp
mov
xchg
dec
int
inc
jns
jmp
enter
sahf
mov
lret
sbb
push
jle
and
imul
jb
out
sbb
sub
fadd
xor
inc
jno
fwait
das
mov
je
loopne
idivb
andl
fisttpl
insl
es
jae
imul
xchg
mov
xor
xchg
push
xor
jnp
cmp
sarb
pop
out
stc
out
mov
mov
dec
hlt
mov
jmp
popf
dec
sub
mov
adc
call
popa
lret
push
je
add
jne
enter
sahf
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
inc
fs
mov
wbinvd
mov
icebp
lods
cmp
adc
cmp
add
out
push
cltd
dec
cmpsb
cld
adc
pushf
pop
and
insb
int
dec
dec
push
aas
mov
cmp
xchg
add
outsb
es
push
int3
push
mov
int3
jle
inc
aaa
cmp
ja
lret
push
rorl
addl
and
inc
mov
roll
mov
jmp
cwtl
ljmp
adc
leave
sbb
lret
imul
rol
cmc
das
or
mov
sub
cmp
mov
sbb
pshufw
push
xchg
movsl
test
sbb
jecxz
daa
bound
xlat
inc
sub
or
fcmovnu
mov
lds
cmp
add
jl
sbb
cmp
ss
dec
push
scas
mov
or
aas
xchg
dec
orb
lods
out
cmp
cmp
cmp
pop
and
cmp
inc
push
sbb
cld
and
push
mov
cmpsb
xor
push
and
lock
mov
jmp
mov
stc
fwait
and
and
push
divl
push
out
sub
enter
jmp
test
mov
sub
jecxz
fsts
pop
lds
repz
outsl
clc
sub
mov
test
iret
jp
xor
jns
pop
cmp
push
inc
cmpsb
mov
lock
push
cld
dec
mov
jns
clc
cmp
dec
push
mov
int
loop
fsubr
push
jo
push
cli
movsl
cld
push
and
adc
movsl
dec
add
jge
sti
sub
push
inc
mov
cmc
mov
ss
pop
mov
jo
dec
into
or
xchg
xchg
jno
cmp
mov
clc
iret
repz
push
xor
xchg
hlt
dec
or
js
sbb
inc
jns
insl
cltd
scas
lods
push
and
add
xlat
push
ja
push
jp
lahf
movhps
jne
roll
push
push
call
jp
outsb
addr16
sahf
cld
movsl
dec
loope
popa
or
jge
dec
sbb
mov
xor
jno
loopne
scas
or
dec
repnz
or
js
ficompl
mov
jb
sub
and
cld
mov
cwtl
inc
pusha
repz
xchg
cwtl
movsl
dec
xor
add
stos
lods
sbb
fcoml
in
outsb
fincstp
mov
push
popa
jae
push
repnz
cmc
aas
dec
addr16
call
sbb
and
cld
xchg
and
fs
push
popf
mov
ret
gs
sub
popf
aad
fs
mov
and
std
xor
ret
ds
stos
imul
fwait
inc
push
cmp
add
mov
mov
sti
sub
pop
scas
push
jbe
sbbb
push
mov
int3
jg
jbe
inc
and
pop
outsb
loopne
xchg
and
pop
push
sbb
jp
popf
lods
sbb
mov
popa
fstps
push
pusha
mov
out
or
and
gs
push
fwait
std
repnz
adcb
cmpb
pop
mov
les
test
rorl
or
je
mov
xchg
pop
or
push
roll
xorl
pop
out
fs
sub
cmp
pop
pop
rcrb
movsl
cltd
nop
les
dec
jnp
xchg
stos
adc
mov
xchg
sub
popa
ljmp
movsb
daa
mov
sar
das
pop
lret
out
es
inc
fld
cmp
iret
leave
mov
rcl
jnp
loop
add
cmp
insb
push
adc
lea
nop
or
mov
add
pop
jno
cmc
and
add
jmp
test
jo
dec
xchg
mov
mov
sub
xchg
repnz
inc
hlt
outsb
cmp
pop
adc
jle
sbb
dec
or
push
icebp
jae
cs
fnstsw
es
inc
lahf
jo
repz
test
jl
xchg
daa
lods
or
cmpsb
dec
mov
arpl
repz
repnz
bound
mov
test
test
dec
push
or
out
xchg
aam
xor
mov
into
inc
std
bound
push
ja
movl
cmp
out
mov
fisubrl
aam
aam
shl
insl
mov
add
mov
mov
xorb
pop
out
push
add
movsb
sub
push
sahf
sbb
sub
ret
enter
pop
cltd
cwtl
fimuls
das
mov
push
popf
mov
int
pushf
jg
mov
clc
sub
adc
sbb
sub
inc
sub
add
insl
jnp
imul
and
leave
mov
and
lcall
jae
out
lock
push
rclb
imul
mov
jle
inc
enter
pop
sub
mov
mov
das
xchg
jne
mov
add
xchg
outsb
cmp
dec
push
inc
xorl
add
dec
push
xor
push
cld
sub
ja
xchg
hlt
inc
push
mov
jmp
jl
or
cmp
bound
fisttpll
scas
lods
test
loop
mov
jns,pn
leave
push
imulb
jp
jmp
aad
std
ja
jecxz
push
pop
jb
sbb
aaa
and
xor
add
pop
xor
vpaddsw
cmp
pop
or
stos
cmp
mov
rorl
inc
xchg
in
cld
jecxz
mov
mov
aas
ret
mov
ret
mov
sub
and
sub
rol
orb
sbb
in
sahf
push
sub
out
mov
cmp
shl
scas
cmp
and
das
fxch
cwtl
les
test
jbe
xor
mov
cmpsb
adc
mov
arpl
hlt
cmp
mov
push
mov
add
add
pop
push
imul
mov
pusha
ret
jl
xchg
sahf
push
scas
cmp
push
mov
std
lea
std
jbe
scas
ja
mov
xchg
std
xor
jp
call
mov
shrb
in
xor
out
cmp
mov
or
cltd
mov
xor
dec
push
stos
aas
jp
mov
cmp
imul
jno
xchg
mov
data16
push
ss
fstpt
dec
mov
test
rep
jae
sub
aaa
push
add
shrb
push
pop
insl
test
xchg
pop
je
mov
mov
stos
dec
mov
int3
out
xchg
enter
jb
fwait
movsb
cltd
jae
jb
into
fdivrl
cltd
mov
sbb
jns
sbbb
fwait
pop
inc
popf
movsb
pusha
sbb
adc
jmp
into
add
or
pop
sub
mov
and
xchg
mov
mov
sbb
inc
cli
in
loope
adc
cmp
rclb
pop
call
incb
divb
jl
sbbb
jle
sub
popa
push
jp
scas
movsl
or
leave
xchg
add
xchg
movzbl
cmp
sbb
popf
outsl
inc
mov
push
push
outsb
mov
sub
rcll
pop
dec
dec
mov
bound
jp
js,pt
push
sti
mov
mov
xchg
xchg
fisubrl
xchg
mov
add
cmpsb
subb
add
adc
mov
push
lret
jecxz
jb
xor
out
icebp
shll
nop
pop
mov
scas
aas
repnz
pusha
jns
and
pop
out
sub
xchg
je
lods
xchg
xchg
outsb
aas
push
lea
jnp
xchg
mov
bnd
or
inc
test
or
sti
loope
fisttpl
cmpsl
frstor
xchg
inc
mov
jmp
or
repz
cltd
popa
das
xor
mov
xchg
lods
jbe
ret
out
pop
je
dec
ja
dec
movsb
out
addl
jp
stos
repnz
push
mov
dec
mov
inc
mov
test
ffree
shll
ss
orl
lods
lea
pop
mov
ds
mov
pop
adc
in
or
mov
fists
xor
dec
push
pushf
jne
icebp
out
loope
xchg
cmp
push
jae
add
jp
xor
pushf
mov
mov
sub
sbb
mov
ja
or
adc
out
pop
inc
test
cmpsl
mov
in
or
sbbl
sub
pop
hlt
aas
dec
es
andb
shll
push
mov
jle
imul
inc
shrb
ja
rorl
into
dec
mov
repz
jge
cmpsb
cmp
testl
mov
pop
jns
jns
pop
outsb
int3
xchg
xchg
repz
gs
call
popa
mov
push
lret
push
paddw
aaa
add
std
jl
xchg
mov
xor
pop
pop
and
fisttpl
mov
dec
push
clc
icebp
xor
fdiv
test
repnz
mov
or
mov
sbb
pushf
insl
lock
rolb
int3
or
inc
or
jnp
sbb
mov
out
inc
daa
dec
dec
mov
insl
add
loope
outsb
clc
rcrb
imull
push
mov
rolb
insl
xor
sarb
ret
out
pop
sbb
outsb
andl
sub
lock
xchg
adc
cli
jmp
xchg
sub
push
add
stos
test
inc
jb
fldenv
lahf
adc
xor
test
arpl
aam
je
push
lret
push
stos
adc
xor
mov
lock
pop
int3
les
lds
mov
mov
push
xor
mov
mov
or
add
sti
data16
rcrb
sahf
mov
lret
adc
inc
and
pop
cmp
and
push
test
or
mov
adc
cli
mov
int
push
or
push
mov
jge
repz
dec
jne
pusha
cmpsl
ss
xor
icebp
lods
add
jbe
push
pop
cwtl
pushf
mov
int
xlat
add
cmp
es
ret
or
jnp
hlt
mov
and
push
push
leave
sbb
xor
inc
adc
adc
xor
push
jge
popf
or
std
jg
aam
sub
jbe
iret
int
inc
inc
fdivrs
push
and
pop
ljmp
xor
push
mov
fwait
ljmp
or
lods
add
fdivl
add
outsl
sub
fwait
push
xor
fsub
mov
roll
lret
dec
sti
xor
push
push
or
dec
rclb
outsl
cmp
or
out
lcall
cli
pop
xor
and
es
outsb
dec
pop
jp
sbb
jne
lahf
adc
xchg
push
mov
sub
insl
lds
push
ja
dec
bound
shr
dec
std
loope
mov
add
add
inc
fwait
cwtl
iret
lea
es
shlb
dec
aam
out
add
in
inc
pop
adc
cs
sahf
pop
mov
dec
pop
jp
mov
ret
aas
loopne
pop
mov
outsl
aaa
push
sub
loope
push
mov
test
jmp
jmp
hlt
addr16
lahf
aam
xchg
mov
or
or
xchg
push
lret
out
add
bound
add
xchg
mov
std
lock
adc
ret
mov
and
pusha
jae
aam
sub
push
mov
cmpl
and
xchg
inc
pusha
xchg
ss
mov
cmc
push
mov
push
enter
int3
sub
xor
jl
fldenv
aad
push
rcrb
jl
jp
gs
jg
jmp
dec
rcrl
sbb
test
jge
mov
add
divl
adc
xchg
cs
or
and
cltd
or
cmp
aad
xor
arpl
stos
xor
mov
gs
xor
mov
out
xlat
cmpsl
add
mov
flds
lret
and
and
sbb
push
sti
cmc
xchg
cmp
jns
xchg
movsb
xor
movsb
and
stc
sub
xor
push
mov
sub
sub
mov
and
jl
scas
inc
xorb
insb
xor
movsl
ja
lock
mov
scas
inc
lods
dec
imul
decb
pop
addr16
sti
cs
jns
dec
out
mov
ljmp
hlt
dec
or
clc
jp
jge
scas
mov
cmp
push
pop
and
movsb
dec
jnp,pt
mov
inc
cmp
pop
insb
insl
mov
in
stos
pop
mov
pop
cmp
mov
popa
sbb
cmp
leave
cmp
pop
test
ret
lcall
cmp
sbb
and
addb
es
mov
cmpsl
outsl
mov
sbb
jp
idiv
mov
jbe
imul
pop
inc
movsb
dec
mov
push
cmc
mov
lahf
lahf
movsl
mov
ss
mov
add
cltd
popf
add
or
lret
in
scas
lret
dec
push
cli
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
sarb
daa
in
adc
and
inc
add
sub
stos
repnz
movsl
cmp
ljmp
jmp
adc
mov
pop
enter
jp
das
scas
xor
xlat
mov
push
push
jmp
dec
xchg
mov
add
add
sub
fs
and
sub
mov
push
mov
dec
sub
and
mov
fldt
sbb
fsubl
loope
or
adc
loopne
lahf
xor
stc
jb
dec
jns
inc
mov
insl
dec
xchg
lea
sbb
addr16
pushw
push
xor
imul
lret
dec
ss
jae
adc
inc
js
xor
stos
xor
mov
repnz
mov
push
sbb
jno
ret
cmpsb
fwait
sahf
test
mov
ja
gs
and
aad
xchg
dec
cmp
or
fadd
jbe
shll
cld
inc
in
and
popl
xchg
xchg
push
mov
mov
mov
movsb
repz
adc
push
jmp
int3
cli
cli
inc
jecxz
out
movsl
mov
adc
sbb
rcrb
xchg
shrl
dec
iret
xchg
and
sbb
sub
xchg
out
xchg
fdivr
stos
mov
lds
mov
xchg
loopne
aad
rorl
or
cmpsb
pop
popa
andb
in
sti
jno
xchg
in
in
dec
sub
inc
and
hlt
mov
dec
push
xchg
pandn
cmp
lods
test
into
inc
jb
test
and
call
sbb
shll
jo
int3
pop
inc
adc
pushf
lret
andb
out
pop
mov
dec
inc
sbb
test
ja
push
cmp
rcrl
pusha
add
fnstcw
inc
into
or
pop
test
out
mov
lcall
jge
stc
jns
pop
pop
dec
adc
repz
mov
adc
pop
inc
mov
orb
data16
sub
fisttpl
inc
shl
stc
pop
pop
aaa
mov
mov
lahf
je
mov
mov
sbb
push
cmp
push
jle
xchg
push
fidivl
je
test
jb
pop
pop
iret
add
push
dec
out
mov
xchg
mov
fdivrl
fstps
push
mov
sub
clc
mov
add
aad
sti
jbe
jle
mov
or
jecxz
pushf
sti
daa
mov
dec
jo
pop
push
pop
icebp
aad
cmp
in
dec
xor
cmpsl
jae
shrl
adc
pushf
pmuludq
in
jp
jo
mov
ja
popa
fbstp
cmp
aad
aam
jae
sub
push
add
std
dec
sbbb
push
pop
inc
repz
xchg
adc
inc
aaa
pusha
xchg
xor
push
test
adc
xchg
push
cmp
push
nop
or
addl
push
xlat
subl
stos
lcall
fldenv
mov
call
scas
sub
fsubp
lret
in
pop
xor
lock
cld
jae
jae
jge
bound
xchg
inc
mov
and
fists
xor
nop
adc
test
or
jbe
pop
call
je
or
lock
aaa
scas
xchg
pop
sub
outsl
loop
push
lahf
fcoms
lcall
jbe
hlt
xlat
es
jge
pusha
xor
repz
test
loop
pop
daa
das
or
inc
loopne
xchg
adc
xor
xlat
add
push
and
push
and
or
outsl
adc
mov
hlt
mov
out
fucom
xchg
ja
xor
icebp
adcb
cmp
dec
add
insb
lods
add
mov
mov
adc
add
iret
pop
dec
stc
push
push
mov
test
leave
lcall
jecxz
xor
lahf
and
xchg
pop
cmp
pop
int
push
cmp
sbb
fs
ret
or
ljmp
repz
mov
movb
out
pop
cmp
jae
mov
rorb
arpl
add
jl
iret
mov
sbb
sub
xchg
sti
jp
mov
mov
adc
test
mov
mov
jne
movl
mov
push
jae
fwait
push
mov
outsb
enter
jbe
mov
mov
inc
mov
mov
mov
pop
xchg
xor
jae
dec
push
sbb
cs
and
xchg
sbb
jge
lret
add
in
mov
inc
inc
adc
and
and
xor
push
inc
data16
rorb
movsb
aam
push
out
in
push
xchg
sbb
cmp
shll
lcall
orb
add
ja
ja
out
pop
jb
adc
push
jae
loope
adc
mov
cmpsl
outsl
and
push
cld
push
test
das
sbb
xor
pop
add
stos
scas
movsb
popa
fistpl
sahf
mov
sahf
adc
and
aad
or
adc
cmp
mov
inc
movsb
test
outsl
jae
xlat
adcb
cmp
into
xchg
mov
pop
sarl
mov
mov
ss
push
dec
sub
inc
sbb
repnz
add
mov
pop
xchg
sub
stos
test
dec
fistpll
movsb
inc
push
or
dec
fs
xchg
adc
out
and
out
inc
or
cli
out
mov
jmp
enter
popa
pop
jb
out
adc
stos
mov
pop
negb
testl
stc
add
jnp
cmc
mov
mov
in
dec
fstpl
es
int3
fsts
mov
add
and
or
xchg
lcall
add
lods
xor
adc
adc
ret
jge
hlt
icebp
mov
jns
cmp
adc
lock
in
icebp
push
dec
add
pop
push
jg
leave
xor
jle
ret
imul
fdecstp
add
or
push
mov
fisubrs
dec
es
sub
rcrl
sbb
adcl
xchg
cmp
js
push
inc
mov
pop
lods
inc
rorl
inc
xchg
das
notl
and
sarl
xor
and
add
les
mov
rorl
movsl
push
nop
sti
inc
inc
jle
push
xchg
outsl
push
fisttps
jno
mov
inc
mov
movsl
pop
dec
jae
sub
std
push
das
pop
lret
fcomps
inc
dec
push
sti
cltd
mov
js
stos
out
or
iret
mov
cmp
mov
xor
dec
enter
pop
push
sbb
and
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
mov
pusha
push
cmp
adc
and
fxch
pop
and
shll
cmp
xchg
inc
loop
and
sub
pop
sbb
xchg
mov
cmp
push
dec
mov
imul
add
loop
lret
pop
shl
push
ds
addr16
sbb
xchg
movsb
jns
adc
sbb
add
push
es
or
mov
adc
adc
jne
pop
fdivrs
jg
adc
push
inc
repz
xor
in
inc
mov
inc
cld
jno
scas
faddl
popa
lret
or
inc
xchg
clc
sbb
iret
orb
or
shrl
cmp
rclb
cmp
mov
ret
xor
mov
insb
push
loop
test
mov
push
mov
pushf
pop
or
dec
icebp
mov
jno
mov
mov
or
inc
sub
push
sti
push
sbb
loopne
or
mov
inc
mov
and
fsubrl
mov
clc
dec
addr16
sbb
shrl
cmpsb
cli
add
inc
inc
or
sbb
jp
jle
mov
movsl
dec
dec
ja
push
cmp
mov
xor
xor
ret
mov
test
int
cmp
jl
test
inc
mov
sahf
xor
cli
or
cmc
out
dec
jne
push
orl
lds
daa
inc
cltd
xchg
shlb
fwait
orl
xor
leave
xchg
lret
sbb
xchg
sbbl
int3
push
aaa
mov
addr16
pop
xchg
sbb
sbb
leave
out
sub
pop
nop
outsb
cli
push
lret
loope
and
push
mov
xchg
xor
pop
pop
push
and
insb
dec
xchg
in
mov
xor
aam
sti
inc
or
movsb
mov
ja
lods
aad
mov
xor
jbe
pusha
mov
xchg
dec
imul
add
jae
jecxz
or
jge
sub
hlt
in
test
pop
jne
jmp
fsubrs
push
add
jmp
adc
and
aad
cmpsl
or
aam
out
out
lahf
or
mov
xchg
cmpsb
pop
push
fucomp
cmp
lahf
and
mov
xchg
js
add
icebp
lret
inc
mov
pop
adc
pop
mov
adc
pop
incl
out
int
test
xchg
and
incl
cmpsb
sbb
lea
cltd
in
xchg
pop
fsts
xor
sbb
dec
arpl
sti
test
push
dec
and
sub
cmp
or
push
pop
test
mov
dec
or
pop
pop
xor
jp
dec
gs
cmpsl
xor
test
jmp
cmp
xchg
out
push
or
shl
push
pusha
pop
scas
pop
mov
cld
inc
pushf
and
xor
inc
out
les
pop
add
adc
fcoms
ljmp
xchg
push
pop
cwtl
lcall
dec
xchg
xor
hlt
xchg
jne
arpl
sbb
sub
dec
push
ds
notb
out
test
cmpsb
push
mov
push
int3
sub
fnstcw
push
icebp
lret
mov
fisubrl
and
xchg
jbe
test
push
lahf
repnz
inc
pop
pop
push
into
sub
push
out
int3
fwait
jo
lods
mov
sbb
jo
or
insl
or
cli
std
mov
or
xor
pop
mov
push
or
xor
pop
movsb
mov
and
sbb
cmp
cmp
ss
jae
mov
lcall
xlat
cmp
inc
jnp
test
dec
fs
xchg
push
jge
mov
pop
xor
or
or
cmp
in
push
push
jnp
jmp
orb
out
xor
pop
cmpsb
jne
pop
int3
lods
xor
ffreep
or
adc
in
and
aaa
xchg
jg
cmp
movb
or
sub
notb
movsl
lods
arpl
leave
or
dec
mov
outsl
xchg
js
icebp
adc
in
xchg
push
pop
xchg
mov
and
sub
pop
or
sbb
jl
addl
and
das
adc
decb
dec
fwait
mov
sub
fnstcw
js
test
dec
fisttpll
in
ret
push
inc
pop
adc
iret
jo
les
loopne
movsl
enter
loopne
pop
cmp
aad
sbb
cmpl
mov
lods
test
dec
cmp
testb
mov
push
fstps
sbb
shrb
addr16
push
jns
aaa
cmpb
sti
xor
pop
jmp
mov
ficoml
cmpsl
or
data16
mov
jae
fcomi
jmp
loopne
in
repnz
sbb
mov
cmc
cltd
xor
mov
push
lea
jbe
add
dec
xchg
jne
mov
lods
push
daa
fcomps
mov
enter
jecxz
das
mov
fists
cmp
pop
add
lods
icebp
pusha
adc
adc
test
inc
cs
lret
repnz
outsl
mov
sti
ret
scas
cmc
int
outsl
inc
jecxz
pop
popf
mov
dec
jno
shll
xor
arpl
or
lret
jmp
mov
jmp
daa
out
pop
cmp
add
mov
xor
sbb
push
icebp
js
or
cwtl
lods
mov
iret
cmpsb
jge
dec
lret
leave
daa
jmp
jg
cmp
loope
sub
sub
int
mov
sub
cmp
and
mov
in
insb
ss
faddl
enter
add
push
jo
out
push
test
lret
in
xchg
lods
lahf
inc
data16
xchg
jnp
sahf
xchg
jg
lea
ss
dec
insl
stc
xlat
and
add
mov
or
hlt
stos
daa
mov
es
and
out
xor
rcll
mov
pop
fdivrp
sbb
fsub
sbb
inc
mov
ds
sbb
enter
dec
roll
mov
jns
loop
and
jb
sub
push
das
stos
imul
movsb
stos
push
push
lds
data16
inc
mov
push
mul
push
enter
mov
xor
push
das
lods
xorl
aam
je
adc
js
pop
sub
or
cmp
add
jl
aam
je
add
pop
out
and
filds
imul
push
fisttpll
adc
out
mov
aad
pop
jmp
testb
das
xchg
lahf
push
jmp
ret
mov
jecxz
push
pushf
enter
dec
lret
jnp
inc
faddl
scas
jb
adc
loop
sub
jne
test
xor
mov
xor
or
jmp
cmc
xchg
cmp
push
mov
adc
mov
adc
and
sub
icebp
inc
pop
mov
lods
js
aad
sub
jecxz
push
dec
sbb
iret
pusha
addr16
xor
std
mov
xor
mov
das
and
outsl
xchg
imul
insl
or
rcll
cmp
pop
add
std
dec
lods
pop
sbb
popa
mov
loop
cmpsl
inc
sub
jp
loopne
das
inc
mov
xchg
adc
add
out
xlat
popf
in
sbb
stos
shrb
lcall
fcoml
cmp
push
test
lock
ljmp
jo
aam
jmp
in
lds
xchg
push
mov
loop
adc
lret
and
xchg
adc
or
cmp
jno
mov
mov
out
repnz
push
into
je
jmp
stos
movsb
inc
test
dec
sbb
pop
shrb
cmp
lods
adc
int
popa
in
adc
out
mov
jg
es
and
add
adc
sbb
sbb
jbe
test
ljmp
mov
les
aad
mov
inc
imul
int3
stc
adc
cs
push
shr
mov
push
add
movsl
in
icebp
mov
pop
and
test
mov
dec
into
js
call
mov
inc
aad
cld
jg
cmpsb
lods
cli
or
mov
mov
sbb
out
testl
mov
ror
push
lret
jmp
xor
imul
mov
out
add
or
dec
pop
xlat
mov
inc
xchg
and
push
in
sbb
jb
xchg
scas
xchg
pushf
mov
int
repnz
pop
cmp
nop
xor
stc
xor
shlb
cmp
loope
sbb
adc
jge
fiadds
jo
cld
push
jnp
mov
bound
shrl
repnz
enter
push
mov
fists
mov
inc
fucomip
push
leave
adc
divb
ficompl
in
addr16
enter
dec
sub
sbb
jae
cmc
push
xor
lea
cli
fiaddl
shll
sbb
arpl
rcll
cmpsl
mov
mov
fs
js
iret
mov
jo
sbb
out
mov
mov
mov
fs
dec
dec
ljmp
adc
popa
lahf
lahf
ds
pop
inc
ss
cmc
jge
push
inc
jae
int3
and
les
push
adc
into
bound
mov
pusha
sarb
shlb
sub
shrl
inc
lea
push
or
test
mov
pop
sbb
dec
test
shrl
loop
cmp
icebp
sub
dec
stos
xor
jns
sti
push
xchg
in
add
lret
nop
roll
cmpsb
outsl
int3
sub
addb
jb
jle
addb
cmpsb
leave
test
test
push
sbbb
sahf
push
out
mov
je
test
pop
xchg
test
cmp
out
mov
and
cmp
shrl
lods
js
les
in
test
arpl
dec
jle
cmp
fsub
or
mov
push
dec
std
js
movsb
lcall
dec
and
inc
aaa
les
arpl
aad
fmull
pop
sbb
pop
leave
jmp
int
stos
push
test
xlat
mov
cltd
jb
jns
and
add
mov
lods
or
and
or
addr16
dec
and
xor
sti
push
test
add
stc
sub
mov
jp
movl
sarl
jge
sbb
pop
leave
int
jecxz
mov
cmpsl
or
test
push
mov
jle
mov
fidivrs
ret
shrl
xchg
jo
mov
adc
jae
mov
jecxz
sahf
pop
in
push
cmpsl
pop
pop
fiaddl
lret
mov
xorb
ret
mov
mov
daa
fistps
jp
lret
or
insl
movsb
push
in
mov
lcall
lret
insl
pop
xchg
adc
clc
jg
cmpsl
mov
xchg
lcall
lret
sbb
xor
shlb
inc
scas
cmpsb
lods
cmp
pusha
lods
dec
test
sbbb
std
js
sahf
xchg
jmp
and
sub
and
repnz
popa
fcomps
out
adc
leave
pop
xrelease
adc
into
and
repz
add
lods
mov
pusha
outsb
jb
call
add
jnp
out
arpl
cmc
enter
xchg
mov
xor
popa
stos
es
pop
adc
or
jae
loopne
testl
cmp
and
adc
dec
mov
rcr
cs
lock
in
mov
push
aaa
movsl
mov
xor
std
adc
insb
lea
in
xchg
sarl
xchg
in
cmp
lahf
sbb
push
add
pop
jecxz
and
adc
scas
in
in
sbb
mov
sub
call
mov
mov
mov
and
jle
mov
loope
sbb
sub
ss
sub
cmpsl
jnp
jle
jl
inc
adc
sub
outsb
mov
scas
xchg
and
divl
test
mov
pop
pop
enter
int3
jns
ds
ret
inc
dec
xchg
sbb
lds
dec
iret
cmpsb
mov
out
mov
nop
jno
lahf
es
cmp
xor
int
add
movsbl
out
ficompl
lahf
and
fldl
mov
incl
popf
pop
adc
xchg
adcb
xchg
xchg
test
pop
xchg
loopne
fcomps
icebp
push
lods
dec
cmp
mov
push
rorb
mov
mov
cmpsl
and
or
jl
pmulhw
cmp
or
mov
fcmovu
imul
sbb
adc
xor
pushf
inc
mov
dec
fisttpl
inc
stc
loopne
in
inc
in
dec
out
lret
cli
sub
add
loop
xor
int3
pop
stos
fists
jp
xchg
cmp
sub
xor
iret
dec
in
jp
out
andl
pop
xor
pop
dec
aam
xor
dec
and
fsts
cli
fstpl
mov
pop
add
adc
cmpsl
and
dec
xchg
mov
jmp
clc
pushf
mov
sbb
aam
testl
es
into
fld
loop
sub
add
in
mov
repnz
lret
outsb
fmull
sbb
inc
pusha
mov
fimull
icebp
mov
jb
out
adc
daa
and
xchg
mov
mov
aam
ss
jns
jl
int3
inc
loop
push
mov
pop
lret
into
aad
pop
xchg
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
pop
mov
in
arpl
xor
les
test
cwtl
ljmp
mov
adc
pop
stc
mov
xchg
xlat
movb
inc
ds
or
test
jne
cmpsl
mov
pop
stos
cmpsb
sbb
aaa
mov
out
inc
push
or
adc
mov
test
cmpsb
aam
dec
std
shrb
and
xor
cwtl
mov
rcr
push
adc
stos
aad
jmp
inc
adc
sub
xor
sahf
mov
sbb
adcl
pushf
mov
jmp
movsl
mov
ja
fcomps
or
dec
push
jmp
out
pop
mov
push
add
jl
iret
jne
aas
add
shl
or
mov
cld
outsl
lcall
loopne
out
adc
mov
scas
movsl
fcoml
fmuls
mov
test
ret
pushf
mov
and
pop
add
scas
sti
mov
das
ret
and
cmovne
mov
add
inc
decb
or
outsb
jp
and
shrl
je
push
sub
and
ret
push
outsb
mov
insl
aaa
push
mov
inc
into
lret
leave
ss
pop
rcrb
loopne
flds
pushf
js
sub
xor
test
pop
stos
icebp
lcall
mov
mov
outsl
setp
pop
sbb
fcompl
dec
mov
sahf
les
pop
lahf
adc
jg
or
and
bound
bound
and
in
call
bound
int
lret
add
sarb
mov
xchg
mov
xchg
pop
xor
aad
xor
xchg
add
lods
decl
mov
call
or
jle
je
addr16
arpl
mov
imul
mov
or
fptan
leave
jb
lret
insl
shlb
xchg
or
push
out
stos
into
inc
loop
fucom
jne
out
mov
stos
mov
mov
das
mov
movsb
xor
push
or
jl
adc
mov
arpl
in
or
andl
test
pop
mov
adc
mov
fistps
add
push
push
dec
cmp
pop
mov
std
dec
clc
enter
push
loope
mov
fbstp
ja
mov
aaa
add
mov
insl
shll
popa
dec
call
frstor
das
jp
subl
lods
fisttps
mov
sbb
cmp
xchg
int3
mov
insb
popf
int
lds
push
hlt
sub
sbb
inc
in
mov
cmpb
pop
inc
scas
dec
enter
icebp
add
scas
fwait
enter
mov
and
push
aad
sbb
push
sbb
cmp
insl
push
push
sbbl
repnz
mov
iret
mov
notb
clc
and
adc
cmpb
ljmp
xchg
sbb
pop
sub
pop
mov
lahf
imul
mov
bound
push
adc
pop
or
loopne
pop
in
push
cmp
inc
or
dec
pop
add
mov
mov
cmc
sar
addb
push
shl
in
out
jnp
mov
fnstcw
mov
fcomip
xor
mov
int
jb
add
sbb
rol
sbb
gs
jbe
and
lcall
jnp
js
or
orl
pop
mov
mov
test
dec
nop
outsb
inc
mov
mov
jecxz
add
dec
push
mov
insb
jge
or
fistpll
and
and
gs
cwtl
xchg
add
pop
in
lcall
fsubl
cmp
idivl
into
or
mov
clc
mov
outsl
imul
xor
and
jle
or
pop
jge
jae
jmp
xchg
gs
and
cld
rcr
xor
mov
jno
cmpsb
shll
aam
add
fbstp
pop
mov
sti
gs
jmp
out
pop
jg
sbbb
mov
dec
cmp
mov
roll
add
lret
enter
aam
movsb
addl
inc
add
mov
xchg
push
xor
xchg
pop
inc
push
cmpsl
push
pop
lea
sub
sbbl
jg
pop
pop
jge
ds
fs
xor
inc
dec
test
mov
test
xchg
push
adc
jge
mov
push
mov
iret
adc
sar
imul
mov
fldenv
xor
and
addl
aam
push
icebp
sub
add
mov
mov
out
aaa
push
inc
jmp
adc
push
shrl
mov
sbb
cmp
jge
pop
test
xchg
ds
out
ss
mov
nop
daa
arpl
iret
inc
loope
aas
in
imull
or
mov
xor
xchg
jp
js
jmp
push
mov
test
pop
sbb
push
ficoml
mov
jp
bound
mov
xchg
push
pop
cmpsl
dec
and
mov
pop
mov
push
push
fistpl
push
or
outsl
xor
jp
daa
repnz
mov
lds
mov
xchg
and
in
dec
insl
xchg
fst
loopne
cli
push
dec
and
insl
dec
addr16
in
or
lock
and
adc
ja
mov
shl
add
add
rclb
cmp
pop
dec
jmp
xchg
xor
rcll
iret
in
and
xchg
in
mov
mov
mov
or
adc
adcl
enter
xlat
mov
cmc
stos
sarl
sbbb
push
mov
mov
cmc
jne
mov
inc
xorl
inc
dec
outsl
rclb
movl
mov
pop
imul
iret
mov
inc
mov
test
lahf
jne
push
loopne
inc
sbb
inc
scas
js
push
sahf
or
js
pop
jbe
mov
jmp
ljmp
aas
sub
out
leave
jns
jl
inc
rcll
sub
popa
and
cmp
xchg
call
cltd
les
push
call
into
ror
loopne
cmp
mov
imul
mov
ja
mov
or
add
fistpll
adc
jbe
je
inc
push
pusha
push
andl
xchg
fildl
mull
cmpb
rorl
adc
movups
les
mov
xor
and
jmp
jne
add
subl
xchg
mov
adc
and
ljmp
or
clc
lods
pop
mov
xor
push
mov
aas
mov
into
and
xchg
pushf
add
adc
push
ret
scas
in
fwait
arpl
or
jp
stos
or
movsb
cli
sbb
nop
mov
cwtl
ljmp
lea
xchg
jnp,pt
stos
sbb
bound
dec
adc
xchg
xchg
pop
jo
push
sub
push
mov
pushf
push
lds
add
stos
cwtl
push
mov
sahf
pop
jp
int
pop
jp
jb
gs
lods
mov
ret
outsl
pop
loop
ret
adc
inc
inc
cs
fcmovnb
xlat
jmp
test
lret
mov
push
out
lret
icebp
xchg
out
lret
mov
dec
data16
sarb
mov
mov
mov
sbb
dec
std
jbe
ljmp
mov
jle
xchg
ficoms
shl
mov
sbb
xchg
jl
mov
imul
push
pop
push
or
mov
clc
jb
mov
mov
dec
jg
adc
add
lret
jp
mov
pop
cmp
xchg
or
jle
pop
cvtps2pi
int3
or
stos
fcoms
push
mov
stos
insb
and
cwtl
dec
ret
insl
pop
call
testb
fcomps
mov
and
stos
aad
mov
push
ds
add
leave
pop
loop
jmp
or
xchg
mov
jmp
and
shrl
xchg
mov
cld
or
xor
in
jle
sti
add
jmp
xchg
push
stos
leave
xor
jg
pop
sbb
pop
cltd
imul
cmp
jns
addr16
adc
mov
movsl
sub
push
cwtl
fcoms
pop
adc
add
cmp
mov
ja
push
inc
test
enter
fadd
push
int3
fwait
or
fs
xchg
gs
or
mov
stos
fildll
push
pop
iret
cmp
dec
jns
orl
inc
fdivs
mov
iret
add
inc
test
rolb
pop
pusha
xor
mov
pop
mov
mov
adc
push
test
sbb
aad
push
push
jge
gs
sbbl
mov
add
or
xlat
xor
in
scas
testl
push
adc
ss
fimuls
mov
cmpsb
insb
mov
mov
xchg
in
and
push
mov
mov
add
or
jp
test
outsl
cmp
bound
push
imulb
cltd
sbb
pusha
mov
push
lret
or
aas
insb
test
xchg
pop
imul
dec
push
dec
sub
xor
sbb
jb
and
xor
dec
push
xor
cmp
jb
int
cli
je
pop
test
push
jne
fwait
adc
dec
sbbl
sbb
fwait
mov
stos
inc
sbb
push
insb
int3
cmc
fidivl
pop
int
sub
add
fisttps
mov
sub
femms
sbb
mov
lods
std
je
inc
aaa
pop
lret
dec
xchg
bound
fiaddl
vcvtss2si
jp
and
sub
into
repz
inc
pop
lret
mov
sarb
or
mov
lea
int
pop
dec
fidivs
frstor
mov
push
in
enter
cwtl
aaa
sarb
adc
sub
clc
je
mov
cmp
pop
lock
test
jl
sti
ja
mov
xchg
push
mov
jbe
jnp
mov
and
into
inc
ds
test
jns
dec
xlat
jle
mov
fs
jg
xchg
cmp
xchg
test
dec
les
cltd
or
cli
addr16
push
shll
leave
xchg
stos
xchg
dec
in
sub
jo
xchg
inc
sbb
jl
sti
or
das
mov
ret
and
inc
stc
dec
mov
dec
jg
ret
stos
mov
in
mov
fsubl
add
cs
xlat
jae
push
stc
and
out
shr
dec
jns
in
lds
aaa
in
fwait
bound
fs
pop
pop
insl
ret
inc
test
out
cltd
mov
sbb
mov
xor
mov
int
xor
nop
pop
pop
or
push
xor
ds
and
rcll
fdivrl
xchg
fnstsw
iret
lods
decb
cs
xchg
inc
inc
and
shlb
sub
xor
jns
pushf
mov
or
jae
jae
mov
xchg
js
inc
pop
gs
loop
xchg
add
lahf
dec
and
movsb
xchg
rcrb
fcomps
mov
push
mov
stos
pop
cmp
cmp
sub
stc
addr16
inc
xchg
push
fisttpll
fdivs
push
dec
dec
dec
inc
add
mov
ret
cmp
test
jle
add
stos
aas
and
mov
lahf
push
sbb
cmp
test
sub
addl
shlb
mov
cli
sub
adc
pop
xchg
in
rol
iret
mov
insb
cltd
prefetch
or
xchg
je
mov
dec
fs
or
xor
call
fisubl
pop
jmp
sbb
push
stos
fstp
movsl
in
xchg
mov
xchg
aad
pushf
shll
mov
imul
dec
sbb
leave
and
arpl
add
int
xchg
sbb
and
setb
push
popa
movaps
cltd
loopne
mov
push
or
outsb
push
jbe
fidivrs
ja
and
imul
push
xchg
xor
dec
inc
pushf
movsb
movsl
addl
mov
pushf
sbb
daa
test
xchg
out
out
pop
xchg
outsl
and
sbb
jle
cmp
sbb
dec
inc
cmpsl
push
adc
test
repz
inc
ret
out
sub
lock
sub
inc
into
add
inc
cmp
ret
mov
add
cwtl
xchg
insb
jo
pop
jb
adc
inc
clc
xchg
out
and
mov
cwtl
into
lock
ljmp
out
gs
adc
ja
lcall
jb
cmp
or
stc
inc
fbstp
sarb
add
aam
pop
mov
bound
dec
leave
pop
in
fcoml
or
push
sub
iret
lcallw
push
addr16
or
xor
and
daa
or
enter
lcall
in
pop
pop
dec
push
inc
fs
iret
mov
faddl
jmp
mov
push
mov
ret
dec
clc
fiaddl
dec
push
out
nop
pop
loope
mov
pop
mov
mov
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
lods
mov
adc
and
sbb
popf
mov
xor
loopne
mov
jg
xor
mov
mov
test
std
and
stos
ds
push
or
jb
xchg
jecxz
cli
mov
cld
int3
or
inc
fs
xor
lea
dec
dec
mov
add
adc
and
cmpsb
jp
sbbb
push
push
or
mov
push
out
pop
or
pop
inc
dec
or
mov
negb
fcoms
fdivrl
bnd
push
dec
pop
push
lods
decb
fistl
push
shr
call
jb
std
add
cmpsl
cmp
push
and
dec
shlb
rolb
cmp
les
jbe
mov
xorl
jp
cmpsb
xchg
pop
pushf
das
mov
sbb
out
sub
sarb
mov
cmp
dec
out
mov
dec
mov
sets
test
xchg
in
dec
pop
inc
cmp
and
in
insl
test
inc
out
inc
icebp
sub
pop
popf
cwtl
dec
mov
pop
rol
cmpsl
push
out
ja
and
xor
mov
inc
push
iret
cmp
js
cmp
lret
sbb
mov
jg
lods
xchg
dec
cs
stos
mov
add
lock
vpmadcswd
xchg
movsl
xchg
sahf
enter
push
into
es
scas
or
fsubrl
shrb
jmp
lods
push
les
lods
cmc
or
in
aaa
inc
ds
out
sahf
mov
in
loope
or
aaa
mov
jl
sbb
dec
outsb
or
lds
and
add
jnp
dec
cmpl
jne
cs
push
mov
js
hlt
jle
mov
pop
push
les
sub
or
call
sbb
out
dec
imul
add
xchg
mov
or
xchg
mov
sahf
outsb
out
pop
pop
pop
cmp
xor
add
xor
test
scas
xor
iret
stos
xlat
mov
dec
enter
test
ss
fistps
and
addl
bound
movsl
call
add
gs
lcall
movb
dec
mov
jg
dec
mov
cmp
sub
cmc
mulb
push
push
js
jmp
or
pop
xor
iret
repz
push
test
mov
out
xchg
inc
dec
imul
imul
push
or
jge
push
nop
ljmp
lcall
jp
ret
lahf
clc
insl
cmp
cwtl
stos
add
mov
mov
pop
dec
ret
mov
fsubrs
ds
jnp
repnz
and
or
pop
push
xchg
fcomps
jmp
in
sub
mov
adc
pop
jl
arpl
cmpsl
jns
mov
in
pop
cltd
dec
mov
cmp
cmpsl
add
aaa
and
inc
xor
ja
in
leave
out
sarl
jnp
fimull
sarl
jmp
inc
xchg
sub
mov
push
std
push
dec
xchg
iret
push
and
call
mov
adc
mov
lret
repnz
inc
sub
cmc
aam
jns
jbe
jle
or
jne
fisttpl
sbb
outsb
pop
lret
stc
roll
and
fsubr
idivb
bound
cmp
mov
aaa
sub
lret
rclb
out
mov
sub
add
out
xchg
lret
ret
fisubl
mov
mov
mov
cltd
stos
movsb
and
sbb
and
sahf
jecxz
rcr
fstp
jnp
jecxz
addr16
and
xor
add
mov
inc
nop
sub
xchg
or
push
dec
pop
ss
fistl
xchg
sbb
jns
cmp
mov
mov
in
arpl
xchg
nop
in
rolb
cmp
jl
jl
sub
daa
in
dec
movsl
add
mov
sbb
add
xor
sbb
out
stos
in
or
pop
into
mov
and
xchg
fildl
or
jl
push
mov
je
mov
add
push
or
jo
dec
hlt
shrb
and
imul
lret
xchg
lcall
push
in
xchg
dec
push
call
dec
pop
push
lock
leave
mov
movsl
mov
inc
mov
enter
xchg
xor
in
popf
or
outsl
inc
mov
push
mov
and
outsb
push
test
push
outsb
adc
shlb
sahf
rorb
cmp
xor
icebp
add
sub
jnp
push
jns
mov
ss
jecxz
insl
popf
mov
pop
orb
xor
xchg
jle
adc
inc
pop
dec
je
xlat
xchg
scas
int
and
add
ds
jl
sbb
test
notl
cmp
push
sub
loop
stc
loop
loope
lods
movsl
lcall
xor
xchg
je
jecxz
out
and
repz
cmpsl
and
sub
pop
imul
in
pushf
or
add
jl
sbb
pop
clc
mov
push
jp
inc
adc
je
adc
mov
jno
icebp
xlat
hlt
mov
adc
push
or
mov
das
fidivs
or
into
aad
in
push
pop
push
push
pop
xor
mov
and
inc
push
in
jbe
in
jmp
xor
push
cmp
add
lds
rcr
inc
pusha
popf
das
jnp
mov
jne
cmp
std
repnz
call
cmp
insl
dec
jp
xor
daa
sub
les
lret
repz
outsb
in
mov
fcomps
mov
cld
call
inc
and
dec
mov
inc
stc
sahf
jne
mov
outsl
loop
sub
push
sub
add
aad
dec
addr16
leave
and
es
push
cmp
int
mov
inc
inc
or
nop
or
rcll
inc
jnp
pushf
xor
test
sbb
loop
sub
add
icebp
mov
ret
dec
cmpsl
lock
pop
cmpl
insb
lds
lahf
lods
inc
push
jnp
rcll
outsb
or
test
push
mov
das
push
jbe
insb
movsl
and
movsb
push
sub
fbld
adc
mov
mov
insb
imul
ret
add
fwait
into
xchg
mov
adc
dec
jge
fnstenv
sub
add
ss
mov
fisubl
xchg
and
clc
sbb
pop
paddsb
sarl
xor
pop
push
mov
sub
push
cmc
xorl
in
or
ljmp
xchg
fdivl
ret
push
add
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
jmp
xchg
pmaddwd
mov
icebp
outsl
push
and
rolb
xor
mov
bound
icebp
addr16
arpl
pop
add
outsb
pop
call
gs
pop
test
sbb
inc
scas
rorb
repnz
push
pop
cmpsb
ret
jae
inc
movsl
adcl
lret
cs
stc
imul
js
fs
dec
mov
sub
data16
xor
dec
jp
xor
adc
cs
arpl
mov
lea
gs
sub
xor
rcrl
and
imul
cmp
mov
jl
lret
fwait
dec
pop
adc
pop
push
push
jp
int
jbe
test
dec
adc
mov
pop
loope
adc
roll
add
mov
dec
and
in
imul
xchg
scas
imul
jae
push
push
ljmp
xlat
adc
hlt
pop
rsm
popa
gs
mov
int
stos
jb
and
fidivrs
fldl
pop
popa
shl
rcr
stc
out
add
outsl
je
jg
ret
dec
mov
add
or
mov
iret
add
mov
fildll
mov
sub
pushf
jmp
std
xor
push
xor
insl
out
mov
xchg
into
mov
orb
pop
fldl
inc
jns
jae
adc
addr16
mov
xor
sbb
inc
adc
out
fdivrl
fidivl
sti
cmpsb
mov
repnz
ljmp
jge
fnstenv
xor
mov
push
mov
or
sarb
aas
int
inc
sub
aam
gs
jmp
jge
sub
cli
lahf
or
mov
out
or
adc
xchg
xchg
mov
cmp
mov
sbb
mov
dec
sbb
and
push
repnz
xlat
mov
enter
leave
inc
pop
sti
into
cmpsb
mov
cmpsb
sbb
mov
shlb
fs
clc
jae
mov
xchg
loopne
mov
ret
shlb
inc
movsl
ja
mov
add
pop
pushf
jne
leave
cmc
je
sbb
je
in
sub
in
daa
mov
dec
les
jmp
gs
and
lret
mov
cmp
jnp
les
insb
lods
jne
into
xor
iret
xor
std
adc
xor
hlt
nop
mov
lock
cmp
mov
stc
jp
add
outsl
out
xchg
ret
jb
xlat
popa
imull
inc
scas
cs
xchg
xchg
jecxz
add
add
mov
sbb
test
and
mov
xchg
xor
dec
mov
pushf
cmpsl
into
xlat
xchg
por
lods
icebp
push
repz
rcrb
hlt
out
or
sbb
mov
and
or
bound
rol
outsl
sbb
shlb
jge
subl
test
sbb
fsubrs
dec
in
orb
push
cmp
jl
push
sub
jno
fistl
pop
push
pop
rolb
call
jno
fs
push
cmpsb
arpl
inc
subl
ret
repnz
arpl
vpmaxsd
or
xchg
adc
add
jp
cli
mov
sub
ja
testl
out
outsb
mov
push
loop
push
into
jnp
loope
mov
outsl
push
jecxz
into
cmp
mov
xlat
inc
into
lea
leave
or
push
mov
jae
psubb
aaa
add
inc
xchg
mov
xor
hlt
mov
push
jmp
add
pop
xchg
arpl
mov
cwtl
mov
jmp
push
xor
add
adc
sahf
xor
push
cltd
nop
mov
jae
mov
loopne
lahf
dec
cmp
or
ficoml
pop
xchg
dec
bound
imulb
dec
es
loopne
or
aas
mov
inc
lods
out
in
subl
jg
shll
addb
xor
imul
imul
add
sub
fists
mov
insb
mov
jns
cmp
mov
fbld
ja
mov
aaa
cli
jnp
ljmp
fsubs
roll
repnz
push
adc
mov
push
cmpsb
pop
movsl
jns
in
add
cmp
aad
push
xchg
push
inc
xchg
ret
cld
loope
adc
sbb
sbbl
sbb
shll
nop
pop
xchg
movhps
pop
lret
nop
jmp
mov
and
push
mov
adc
scas
hlt
cmp
push
into
ja
add
mov
adc
mov
push
clc
inc
pop
xor
jbe
jmp
rclb
dec
inc
push
sub
cmp
mov
out
jmp
jns
cltd
repz
mov
test
sbb
or
inc
inc
push
lret
mov
les
jne
daa
push
add
fsubp
push
fildl
pop
data16
xchg
stos
fcmove
xchg
les
mov
lcall
sbb
enter
cwtl
test
adc
adc
popf
and
mov
imul
out
mov
push
hlt
push
push
push
jae
daa
pop
test
nop
or
push
and
scas
mov
cmp
push
cs
sub
jno
pop
test
insb
pop
jns
mov
dec
adc
mov
push
cmp
in
or
mov
add
pop
jno
rorl
or
xor
add
add
cmp
dec
pop
lods
mov
push
pushf
xchg
mov
add
mov
pop
pop
sbb
scas
lods
test
subl
fsub
pop
test
jb
sub
sbb
sub
mov
std
cwtl
jb
pop
je
push
pop
lahf
add
inc
cwtl
add
lcall
pop
pop
jp
dec
js
lret
xchg
sub
pusha
sbb
mov
test
hlt
jmp
push
mov
jp
pusha
jno
pop
mov
lds
jecxz
sbb
cmp
xchg
out
inc
jae
jno
nop
sub
mov
xchg
xor
xchg
cs
dec
jno
ret
pop
push
push
jo
or
xor
dec
xchg
lcall
sub
imul
sub
dec
push
or
outsl
outsb
je
ret
repz
mov
ficompl
sbb
push
pop
sub
push
add
and
test
add
negl
mov
cmp
or
mov
ja
xor
imul
js
push
cmp
xchg
lret
lods
adcb
mov
xchg
addr16
lcall
sbb
push
jmp
sbb
push
adc
xchg
int3
xchg
pop
xchg
cwtl
nop
adc
and
xor
mov
mov
dec
scas
mov
icebp
mov
test
lahf
stos
and
mov
test
dec
jge
in
hlt
mov
insl
add
repnz
push
ljmp
mov
mov
dec
je
mov
in
iret
mov
pop
enter
dec
cmpsl
push
popf
push
jl
add
jg
fmuls
add
icebp
rcrl
or
add
decb
cmp
and
and
and
scas
sbb
decl
xchg
popa
sub
sub
clc
pop
mov
out
dec
call
push
sub
fisubs
cli
mov
ds
push
mov
ret
add
fbstp
sbb
icebp
enter
in
add
cmp
or
mov
rorb
insl
pop
hlt
or
filds
test
leave
mov
addb
cmp
rolb
inc
and
adc
mov
and
mov
stos
push
xchg
dec
xlat
mov
in
fwait
aaa
xchg
mov
lock
jo
mov
mov
adc
sub
clc
mov
push
and
jns
ljmp
xchg
mov
cltd
inc
andb
data16
aas
dec
mov
shl
xchg
xor
xchg
shlb
int
push
cmp
orb
xchg
outsl
xchg
movsb
lods
daa
cmp
push
jmp
adc
xor
jae
mov
mov
fwait
cmc
lret
shlb
sbb
sub
movsl
mov
rcrl
xor
ds
cmp
add
sub
sub
inc
jno
push
dec
insb
sub
push
stos
sub
xchg
lahf
push
int
pusha
jo
or
sub
sarb
fisubl
cmp
adc
lods
incb
and
test
jge
loop
scas
aad
ds
mov
dec
add
mov
cmpsl
jmp
or
add
sti
out
and
pop
sbb
mov
and
add
fxch
xchg
or
mov
xor
mov
test
mov
loop
add
loopne
inc
stos
jns
lock
xor
mov
inc
sub
sub
adc
loop
cs
push
icebp
std
xchg
fadd
sbb
xor
push
mov
shlb
mov
dec
movsb
loop
or
mov
incb
stos
mov
outsl
ja
xor
jg
pop
mov
inc
mov
outsl
or
mov
lea
je
pop
jg
xchg
mov
jns
jno
adc
into
add
je
ja
sub
aad
jmp
aam
jno
lock
sub
in
cld
or
out
out
pop
in
mov
sbb
in
add
sti
mov
push
pop
adc
daa
pop
xorl
and
pop
out
popa
fdivrl
lock
ja
enter
pop
xor
and
lret
arpl
ret
cld
cmp
loop
scas
loopne
mov
push
andl
sbb
xor
add
mov
jo
mov
mov
or
or
movsl
cwtl
mov
dec
inc
outsb
test
stos
add
sahf
jne
fists
movl
and
popf
lock
pusha
mov
nop
popa
sub
mov
xchg
rorl
push
mov
add
jb
sbb
mov
fs
sub
pop
xor
in
in
test
loope
in
jg
dec
lcall
mov
inc
lods
pop
adc
jae
aas
mov
test
and
dec
ljmp
sahf
lahf
or
pushf
cmp
adc
mov
lock
and
fs
movsb
add
enter
aam
jp
dec
fnstsw
xor
lods
sub
xorb
aam
pop
mov
inc
sarl
int
dec
or
shrl
and
xchg
dec
cmc
mov
cmc
mov
fwait
adc
adcl
inc
movsl
jp
pusha
inc
stos
insb
dec
bound
cmpl
mov
push
scas
push
xor
fsubrl
test
leave
mov
jb
pop
stos
push
jb
lods
and
or
das
sarl
jns
and
fwait
mov
outsb
adc
aad
add
rorb
repz
ds
mov
sti
stos
inc
mov
inc
lock
scas
fldl
mov
ds
fwait
dec
cwtl
xchg
add
xchg
testb
dec
sbb
jge
push
loopne
mov
xor
mov
outsl
mov
shlb
inc
inc
sbb
pop
sbb
fwait
stc
out
add
js
sub
rolb
mov
mov
sub
aaa
inc
repnz
ud2
dec
cmpb
inc
xor
dec
dec
ret
jne
call
or
push
notb
xor
ds
sbb
loopne
ret
xchg
cli
aaa
mov
xor
add
pop
cmp
or
dec
sub
fimuls
push
pop
pop
es
add
mov
int3
gs
in
mov
addr16
mov
sti
fcoml
jl
fwait
jl
adc
stc
fcomp
adc
shll
push
ret
mov
hlt
in
test
mov
xor
dec
lods
ret
enter
fsubl
roll
mov
popa
cmp
fsubrs
mov
lret
scas
or
mov
xchg
dec
test
popa
push
lahf
enter
mov
shl
jo
mov
pop
shl
or
lods
or
aaa
mov
inc
mov
ret
sub
add
lcall
int3
adc
jge
xchg
rorl
sub
fidivl
mov
cmp
aaa
inc
or
rcrl
jno
or
movsb
mov
mov
popa
push
cwtl
push
pop
dec
ret
or
enter
cmp
adcb
int
inc
jb
sub
ljmp
sbb
aas
cmp
pop
pusha
adc
mov
push
xacquire
mov
pop
in
lock
lcall
xor
mov
sahf
stc
mov
ss
jmp
clc
mov
pop
push
dec
or
clc
mov
clc
and
out
in
cmp
clc
sbb
or
subb
or
add
xchg
sbb
jmp
add
pusha
punpckhwd
xor
data16
icebp
inc
dec
aaa
test
jns
sbb
mov
pop
jmp
dec
mov
dec
aam
inc
jns
pop
xchg
loopne
loope
mov
mov
push
mov
cmp
xor
add
insl
add
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
add
pop
xchg
cmpsl
xchg
jno
and
and
and
scas
sahf
pop
mov
lods
push
sbb
adc
pushf
inc
shlb
pop
dec
sti
jmp
popa
xchg
stos
stos
pop
dec
or
aaa
mov
fwait
jge
les
or
add
repz
cli
ljmp
rol
sbbl
imul
bound
aas
nop
adc
in
sub
adc
clc
inc
inc
in
test
sbb
and
pop
movsl
or
clc
or
mov
pushf
xchg
movsl
lret
cmp
test
push
mov
mov
adc
cmp
pop
sub
scas
mov
out
imul
ss
cmpsl
aaa
add
cmp
adcb
inc
push
sub
aas
fs
sub
outsl
cmp
dec
inc
fsubl
push
lds
cli
aam
call
shll
or
jge
adc
aaa
iret
add
jbe
outsl
daa
lret
mov
in
push
mov
fs
push
push
hlt
lods
jbe
repz
ficomps
rolb
fwait
xlat
mov
stc
xor
dec
mov
dec
inc
push
dec
jnp
mov
cs
cmp
call
aad
mov
cwtl
nop
out
sub
jge
mov
stos
push
xchg
lods
std
aaa
nop
sbb
mov
out
xchg
and
aad
cmp
inc
shlb
rcll
int
add
fucomip
lret
mov
fisubrl
cmp
sub
ss
jl
pop
out
cmp
rcll
pop
fdivrp
out
xchg
pop
repz
inc
jmp
adc
push
inc
cmpsb
in
adc
jno
jp
lcall
fadds
testb
mov
repz
mov
arpl
shll
mov
mov
push
sub
dec
adc
push
mov
dec
sub
pop
push
aad
pop
in
push
stos
mulb
cmp
cli
hlt
inc
cmp
mov
mov
int
fstps
or
les
dec
fcomps
sahf
push
dec
leave
stos
stos
dec
or
fisttpl
scas
pusha
cmp
sub
dec
je
cmp
fdivrp
lods
leave
imul
dec
imul
push
jmp
daa
outsl
cmp
mov
subb
sub
es
test
dec
pop
decl
shll
and
in
clc
out
cmp
inc
inc
xlat
adc
rcrw
push
add
or
push
pop
mov
mov
add
adc
ss
gs
jle
dec
in
daa
popa
adc
test
xlat
pop
out
adc
or
fdivrl
jmp
inc
mov
xchg
mov
jl
popa
ret
shll
mov
pop
aas
aam
mov
push
jb
cmpsl
addr16
xchg
sub
ss
xchg
lods
pop
xor
and
mov
decb
adc
xchg
mov
sbb
arpl
pop
repz
out
push
test
das
push
movsb
aaa
mov
cmp
xchg
cmp
test
fisubs
cli
adc
mov
popf
mov
sbb
xchg
sbb
or
xor
sar
dec
xor
push
mov
jg
pop
sarb
push
add
jecxz
ss
mov
fistps
cmc
jg
lcall
mov
das
lret
sahf
lods
cld
xchg
sbb
mov
pop
cli
call
and
inc
push
mov
and
fs
out
add
pushf
mov
and
sub
int3
pop
rcr
mov
loope
push
mov
scas
cmpsb
repnz
inc
addl
loopne
inc
das
mov
cmpsb
sbb
int3
out
add
add
std
stos
pop
jnp
data16
mov
lods
insb
arpl
jae
cmc
pminsw
xor
adc
jne
shll
mov
mov
cmpsl
and
fldt
inc
or
cmpsb
mov
adc
cld
pop
xor
lods
hlt
mov
addr16
mov
scas
lods
adc
xchg
fiadds
sub
rclb
or
jle
mov
pop
pop
mov
push
xor
push
mov
jns
inc
mov
adc
xor
fwait
pop
adc
fs
addr16
lods
inc
ret
xor
sahf
aam
xchg
mov
lret
inc
mov
pop
lcall
hlt
jo
clc
call
push
cmp
and
jae
pop
lods
sub
scas
ljmp
pop
cmp
out
arpl
inc
rcll
and
inc
stc
pushf
lds
shlb
mov
cs
loop
sub
rolb
test
push
or
sub
sbbl
movsl
dec
sub
push
aam
imul
enter
orl
ret
add
mov
addr16
lcall
fcoml
aam
mov
xor
jo
lock
test
and
xor
out
mov
push
xor
lcall
xor
insl
mov
loopne
out
jg
mov
jno,pn
pop
and
shrl
adc
pushw
xchg
pop
test
and
test
rcrb
jnp
sbb
pop
xchg
mov
xchg
fisubrl
arpl
dec
nop
inc
or
fdivrl
inc
dec
cltd
leave
scas
jno
dec
sbb
pop
repz
test
lcall
xchg
mov
stos
inc
loopne
int
fisttpll
fildl
fcomi
shrl
lret
add
sbb
sub
mov
jge
xchg
fisttpl
inc
jns
call
shrl
fnstcw
xor
adc
mov
les
cmp
test
dec
loope
adc
mov
pop
mov
stos
in
pop
ret
cmp
pop
xor
jno
std
mov
fs
pop
lea
cltd
xchg
xchg
mov
sub
push
call
pusha
std
mov
pop
stos
icebp
out
fcoml
jg
out
and
xor
cmp
shlb
faddp
mov
xor
push
addl
fbstp
fdivrp
and
or
imul
xor
mov
repz
lea
ja
iret
insb
or
pop
jne
std
pop
fimuls
fmuls
push
iret
hlt
cli
insl
push
daa
cs
into
sub
in
mov
xchg
imul
sub
fs
repz
push
inc
dec
pop
stos
mov
pop
into
jne
sbb
scas
in
fwait
push
pop
call
pusha
dec
inc
cmp
ror
cmp
push
cmp
add
add
andb
jae
sbb
cli
clc
cmpsb
int3
or
daa
inc
mov
das
pop
jecxz
repz
test
pop
mov
adc
adc
mov
cmp
in
inc
ficoms
cld
fdivrl
sbb
mov
jle
dec
jne
stos
movsb
xor
push
loopne
repz
lretw
mov
jo
pusha
cli
and
dec
outsb
push
mov
sub
mov
and
orl
fistpll
clc
adcl
inc
or
scas
inc
inc
add
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
mov
sbb
jno
jnp
push
daa
outsl
nop
fiaddl
ror
adc
jecxz
dec
in
popf
jnp,pn
or
pop
rcll
in
lock
sbb
or
mov
sub
je
adc
push
sub
push
test
and
cmp
insl
lahf
mov
imul
loope
push
sbb
daa
testb
inc
cmp
push
add
pop
add
mov
pop
pop
inc
loope
fwait
mov
into
cltd
testl
mov
lahf
add
mov
clc
imul
cwtl
mov
or
fadds
or
call
add
jecxz
js
testb
cmpb
sub
rcrl
xchg
sub
or
mov
xchg
scas
xchg
mov
inc
sub
out
dec
shll
mov
sub
ds
sub
xchg
fwait
and
loopne
mov
push
sbb
leave
in
shll
pop
mov
pop
jmp
in
mov
cltd
cmp
cmp
add
je
call
push
adc
js
lcall
out
in
pop
sbb
inc
xchg
xor
push
aas
jae
inc
sub
xchg
mov
mov
out
movsb
jno
adc
repnz
mov
test
push
negb
jno
jbe
inc
sub
fcmovnu
push
leave
shl
test
push
das
xor
cwtl
clc
in
popa
test
pop
xchg
add
mov
xchg
stc
xchg
and
adc
or
lret
adc
push
mov
roll
leave
test
inc
and
jae
add
push
icebp
jg
mov
cs
bound
aas
scas
xor
andl
pop
hlt
stc
insl
notb
data16
mov
nop
jmp
xchg
int
je
jo
loop
ficompl
sub
adc
iret
into
pop
and
sbb
cmp
jl
test
xchg
mov
es
test
dec
pop
jb
cwtl
push
adc
inc
clc
push
ret
xchg
lahf
pushf
jns
mov
mov
adc
mov
rcr
in
out
popa
leave
fs
inc
stos
mov
cmc
push
cmpb
nop
adc
cmp
lret
adcb
jp,pn
fisttps
lcall
sarb
call
dec
jne
fidivrs
xchg
scas
stos
cltd
sbb
nop
or
and
cmp
aad
xchg
pop
push
pop
test
decb
mov
adc
mov
push
xor
mov
shll
shll
lret
pop
jbe
iret
push
sbb
dec
mov
and
mov
cmp
dec
push
repz
imul
xchg
mov
dec
xor
push
adcb
xchg
push
sahf
cmpsl
jmp
adc
inc
mov
pop
clc
outsb
cmp
shll
iret
jnp
inc
inc
js
mov
ljmp
cltd
mov
push
inc
cmpsb
mov
mov
xchg
cs
aad
push
in
imul
adc
scas
add
into
push
add
lcall
sub
pop
xor
cmpsl
in
out
subl
fsub
addr16
adcl
scas
fnstcw
repz
dec
cmp
inc
sub
and
pop
sub
addr16
add
mov
xchg
mov
outsb
mov
sbb
mov
push
sub
xor
cmpsb
jnp
pop
mov
popa
or
xchg
repz
dec
lock
movsl
jno
fstps
pop
xchg
dec
jle
ficoms
ret
cwtl
outsl
push
mov
mov
loope
jmp
push
mov
out
clc
lods
adc
adc
pop
jbe
ret
pop
cltd
loope
subl
rep
mov
pusha
jmp
push
sub
pop
pop
icebp
mov
mov
or
mov
inc
pop
sahf
andb
mull
lcall
cmp
arpl
pop
push
hlt
cmp
into
fs
sbb
movsb
inc
mov
cld
add
sti
cmp
loopne,pn
insl
xchg
bound
fisubrl
out
imul
inc
or
mov
ret
mov
xchg
mov
lcall
jmp
shr
pop
lods
pop
test
mov
jno
insl
fwait
and
in
loop
xchg
sub
sahf
ss
jbe
outsb
jle
test
and
or
dec
sbb
std
sbb
push
and
test
cmp
or
inc
xchg
scas
xor
push
in
or
pushf
pop
test
lret
push
arpl
ljmp
js
out
pop
loope
ja
add
jg
stc
call
cltd
fsts
and
into
and
test
cs
imul
aad
pop
shl
push
lcall
cld
mov
lret
adc
adc
sbb
scas
loopne
push
push
addl
sbb
dec
inc
dec
pop
sbb
push
cmpsb
or
mov
sbb
out
cmc
dec
sub
jbe
jno
xchg
gs
cmp
push
in
pushf
push
pop
iret
xchg
loop
lahf
in
pop
clc
push
imul
inc
cmpsl
or
jmp
aam
frstor
xchg
pushl
fs
mov
sub
rolb
sbb
lret
inc
dec
jns
pop
rorl
js
cmc
mov
rcl
push
inc
popf
incl
push
iret
lcall
int3
push
mov
mov
outsb
mov
je
mov
fdivs
adc
mov
test
aam
shlb
lret
sub
xchg
cltd
in
inc
jl
lock
mov
add
cmp
in
lcall
cmp
pop
in
and
sub
mov
cwtl
insl
sarb
aas
int
sbb
loopne
mov
dec
inc
push
mov
in
aaa
dec
loopne
jae
fnstenv
xor
sbb
out
xchg
dec
cltd
and
int3
ret
cmp
addb
adc
cmc
cmpsl
popa
dec
push
repz
and
sub
dec
cmp
push
popf
cwtl
lret
sub
hlt
stos
jmp
fdivp
sbb
jns
lahf
adc
sbb
xor
out
inc
and
imul
mov
xorl
scas
xor
inc
out
outsb
pop
jo
cwtl
pushf
insl
addl
mov
sub
hlt
addr16
mov
add
mov
cwtl
fbstp
js
push
test
rcl
jno
dec
push
out
inc
lea
mov
inc
xlat
hlt
xchg
add
sti
lret
fucom
cltd
mov
cmp
push
loopne
lock
dec
mov
cltd
ret
lahf
jmp
test
inc
int
cmp
push
fcoml
lahf
stos
dec
fnstsw
dec
pushf
mov
sti
cmp
jo
adc
and
dec
push
and
cmp
cltd
mov
inc
or
jmp
bound
push
popf
stos
xchg
mov
xchg
shll
jns
test
push
push
sbb
jns
lahf
push
rcrl
cs
aam
popa
mov
add
or
sti
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
test
adc
addl
mov
sub
jmp
add
in
mov
fwait
push
or
negb
mov
mov
push
shlb
je
inc
sub
push
xchg
out
pushl
xchg
lcall
out
xchg
cmc
dec
test
or
mov
mov
je
fisubrs
clc
dec
stos
jnp
sbb
adc
mov
cltd
testl
xchg
ds
mov
out
in
adc
pop
idivl
and
fistps
and
pop
fwait
and
in
vmovups
repz
mov
mov
ds
xchg
mov
inc
mov
aad
cmp
aad
and
fwait
dec
shl
adc
addr16
imul
adc
xchg
mov
xor
mov
or
sarb
cmp
xchg
cmp
ja
jmp
mov
jg
rol
and
cmc
orb
rcll
ja
pushf
inc
xchg
xor
aam
pop
mov
jmp
push
mov
movsb
out
sbb
lods
mov
xor
mov
pop
test
push
ss
and
mov
ljmp
jmp
clc
inc
mov
shrb
jl
push
dec
shl
stc
movsb
les
repnz
xchg
mov
mov
loop
pushf
test
jno
push
dec
rorl
daa
scas
icebp
xor
xchg
popf
lods
jnp
lcall
mov
ficomps
xchg
xchg
jl
push
fsubrl
pop
dec
imul
sbb
sahf
inc
test
je
add
add
push
test
pop
jb
cmp
dec
dec
call
mov
pop
jl
int
rclb
hlt
lock
loope
jge
loope
mov
add
dec
dec
dec
jg
dec
clc
rclb
inc
mov
aam
jb
push
sub
or
mov
xchg
es
aam
jb
das
pop
xchg
lock
insl
lea
inc
jnp
add
pop
xor
fnstenv
xor
or
subl
jl
xor
scas
insl
mov
pop
mov
mov
add
loope
lds
outsl
fstps
xchg
leave
sbb
cmp
aas
xchg
add
jnp
push
pushf
shrl
outsl
sarb
stc
pushf
pop
insb
scas
add
pop
mov
fcmovnbe
or
inc
xor
jl
pop
andb
pop
bound
repnz
mov
or
adc
and
pop
sbb
cmpsb
clc
sahf
mov
jo
movsl
int
das
jnp
adc
jo
xchg
call
add
out
jmp
in
enter
js
mov
push
mov
loop
inc
ja
or
lea
lcall
mov
in
mov
popa
mov
or
icebp
ds
mov
pop
inc
pop
or
lods
ret
pop
sub
inc
xor
mov
fstl
popl
mov
test
bound
xchg
jae
shlb
out
leave
mov
int3
imul
cmp
bound
pop
cmp
roll
xor
and
ljmp
sub
xor
into
inc
neg
outsb
dec
xlat
cltd
adc
adc
xor
mov
sbb
and
sub
push
and
inc
in
inc
int3
jl
push
push
cwtl
loop
and
jbe
jo
call
popf
fld
cmpsl
adcl
sub
subb
pop
fwait
scas
cltd
cmpl
stc
loope
sbb
sbb
sbb
pop
ljmp
xor
popf
fidivl
shl
mov
xchg
pop
fsub
sub
pop
push
stc
clc
fs
fistl
mov
sbb
mov
dec
jno,pn
test
mov
fdivr
lea
add
mov
jg
push
push
fistpl
lahf
sbb
insb
cmp
aam
jmp
push
clc
hlt
inc
fcoml
jo
mov
cmp
bound
dec
and
inc
js
arpl
mov
popf
mov
int
pop
loopne
fmuls
ljmp
aas
imul
or
xor
cmc
fucomp
inc
dec
movsl
or
push
lods
pop
mov
movsb
push
popa
mov
lds
pop
movsl
cli
cwtl
repnz
pop
dec
mov
mov
and
cltd
scas
push
push
or
mov
stos
int
xchg
data16
shlb
mov
insb
dec
test
mov
sbb
adc
in
adc
pop
jb
sub
ljmp
pop
mov
mov
mov
aaa
ficompl
mov
cmpsb
xor
add
add
repz
jmp
or
sub
dec
xor
mov
mov
gs
or
mov
arpl
enter
fldt
dec
adc
xor
cmpsl
mov
dec
sub
add
xor
clc
fsts
scas
adc
xchg
inc
gs
and
imul
aad
dec
test
daa
mov
call
push
insl
xchg
sbb
lret
sti
xlat
mov
loope
xchg
cmp
ror
sbbb
jne
mov
out
leave
fadds
inc
jecxz
xor
loopne
jmp
clc
ss
xorps
cmpsl
inc
mov
movsl
cltd
out
stc
adc
xchg
insl
out
fwait
mov
jae
outsb
push
jno
add
incl
lahf
lds
pop
repz
pop
adc
pop
les
test
test
mov
xchg
xchg
nop
jns
pusha
sub
loop
les
pusha
push
in
mov
movsb
lret
rcl
sbbl
aaa
lods
jno
or
sub
or
jg
flds
jne
pusha
pop
js
ja
pop
fcompl
cmp
jmp
out
sub
out
fidivrs
clc
hlt
adc
sbb
or
xchg
aad
push
xchg
mov
mov
in
mov
sub
flds
jp
push
hlt
dec
mov
jecxz
xchg
and
or
xchg
lea
xorl
cld
jo
and
mov
push
pop
sub
je
stos
push
pop
mov
stc
nop
cmp
insb
jg
and
div
arpl
fdivrs
notl
xchg
xchg
lret
sbb
jg
aas
outsl
push
cmp
pop
filds
or
jle
xor
popa
sub
imul
mov
mov
sub
repnz
sti
out
pop
pop
pop
gs
mov
arpl
repz
adcb
dec
jge
stos
sahf
mov
mov
repnz
lea
movsb
inc
inc
mov
adc
rorb
sub
decb
scas
in
inc
popf
mov
and
xchg
pop
mov
fsubrp
or
rcr
nop
xchg
orl
je
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
push
adc
addl
sub
and
pushf
loop
test
stc
insl
cmp
idivb
push
sub
xor
jp
sbb
pop
jg
sbb
adc
ret
int3
inc
stos
inc
mov
push
dec
sti
push
stc
scas
stos
inc
pop
cwtl
xchg
xchg
push
fwait
sub
dec
int
adc
sbb
hlt
lock
pop
xchg
sbb
xchg
test
xor
popa
dec
pop
pop
test
pusha
decb
dec
sub
call
rcll
adc
loopne
pop
jns
jne
lahf
and
das
addr16
fidivs
ret
xchg
loope
cli
xor
xor
sub
inc
fadd
roll
lds
xchg
push
push
fildll
jno
and
shrb
or
xor
outsl
lods
mov
loopne
cli
nop
test
in
sbb
xor
dec
jae
mov
adc
fwait
inc
mov
movsb
das
push
negl
je
scas
xchg
add
js
aad
icebp
sub
xor
addb
xchg
ret
cmc
jne
adc
sub
repz
cli
dec
movsl
into
js
push
push
adc
jb
fistl
jnp
inc
pop
iret
mov
test
repz
mov
mov
pop
dec
ficoml
dec
add
jb
jno
xchg
dec
fistl
test
push
pop
dec
ss
jmp
mov
and
mov
add
fwait
out
mov
int
sbb
xor
add
dec
mov
mov
stc
or
adc
jge
imul
pop
jg
pop
inc
aas
mov
out
scas
enter
cli
lret
repnz
cltd
push
aad
sbb
pop
push
arpl
mov
popa
pop
sub
std
mov
mov
and
lods
fucomi
fisubrl
loope
fidivrs
repnz
xor
jne
pop
iret
push
xor
movsl
out
inc
jp
fbstp
mov
adc
repz
loop
mov
xchg
dec
mov
nop
call
mov
jp
dec
or
ljmp
ss
bound
sahf
mov
jo
mov
pop
rcrl
clc
insb
mov
imul
lcall
ljmp
add
push
cmp
inc
stos
in
lds
inc
lock
data16
push
lahf
cmp
dec
cmp
imul
mov
dec
and
js
dec
ret
mov
inc
testl
adc
lret
push
ss
aad
cmp
mov
dec
dec
ret
out
jb
dec
push
pop
repz
rcl
repz
sti
inc
lahf
jg
out
mov
jbe
ja
std
xchg
ss
push
cli
adc
mov
cmp
fs
sarb
push
sahf
in
and
imul
xor
xchg
mov
ret
stos
lahf
pop
xor
fildll
sbb
orl
push
rorl
inc
les
lcall
adc
xchg
sbb
sarb
insb
push
xchg
sub
frstor
mov
sub
mov
sbb
pushw
je
inc
push
jne
inc
push
loopne
xchg
je
scas
or
sub
and
jmp
mov
or
insl
ljmp
push
xchg
adc
push
shll
lock
mov
xor
adcl
mov
jb
sbb
out
or
out
push
dec
add
call
ret
cmp
sti
pop
loop
enter
dec
sahf
dec
jmp
imul
sub
xchg
movsl
adc
push
mov
sbbb
xchg
jg
xor
xor
fdivrp
jns
mov
sti
les
inc
sub
xchg
jne
das
dec
sub
cmp
add
inc
sub
cmp
aas
mov
cld
jg
xor
repz
xchg
test
popa
dec
sbb
rcrl
pop
xchg
mov
and
push
call
adc
push
sbb
push
popf
outsb
ds
sahf
out
cmp
lock
shl
movsl
pushf
mov
testb
mov
cmp
mov
add
and
push
mov
lcall
mov
cmp
mov
add
icebp
int
mov
and
call
jb
idivb
adc
jg
mov
sub
rorb
mov
adc
addr16
push
in
jae
push
cmp
stos
dec
or
jle
std
jg
inc
cmp
sbb
jno
add
xchg
test
loope
adc
pusha
mov
sahf
out
jns
shl
xchg
push
add
test
mov
mov
jbe
movsb
mov
or
jle
in
jo
mov
jns
aaa
xchg
iret
sub
orb
pop
push
mov
imul
jns
push
or
and
mov
test
das
daa
mov
mov
cs
js
jo
fmuls
jecxz
or
xchg
sub
dec
push
mov
xlat
shlb
add
cli
dec
lret
cltd
add
test
push
mov
in
lods
adc
insb
mov
cld
add
sub
and
xor
popf
popf
or
xor
jae
imul
hlt
cmpl
sub
push
jg
xchg
jb
ljmp
sub
pop
mov
jb
movsl
push
push
out
mov
loope
xchg
lcall
sbb
xor
ret
jg
jmp
jecxz
in
rcl
popa
and
and
xor
sub
pop
xchg
or
mov
mov
mov
mov
stos
pop
data16
scas
fstl
stc
mov
and
ja
jg
mov
jb
iret
cli
sahf
mov
mov
int3
or
or
mov
jg
pop
add
icebp
aam
pusha
inc
adc
and
mov
jecxz
daa
stos
jl
or
subl
shll
mov
sub
loope
sbb
leave
movsb
popf
inc
nop
es
xchg
push
and
jmp
and
jmp
push
pop
fdivrl
dec
jp
movsb
hlt
mov
cmc
pop
mov
cmp
adc
pop
in
mov
mov
push
in
rcrb
out
add
addr16
dec
popf
push
add
push
jb
rclb
lea
pop
pop
adcb
mov
jne
arpl
lret
cmpsl
ret
mov
dec
adcb
xor
pop
pop
or
adc
out
movsl
aam
sub
pop
jne
or
fsub
fs
sbb
arpl
dec
sahf
aas
addl
sbb
jg
sbb
xchg
mov
std
add
clc
adc
cmp
fistpl
push
jns
enter
cld
mov
lcall
or
lods
cmp
jns
mov
sar
xorb
loopne
jns
mov
cli
jecxz
test
dec
push
mov
inc
mov
fadd
roll
xlat
lock
fnstsw
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
clc
mov
pop
sbb
dec
enter
push
outsb
cmpsb
push
jno
imul
subl
adc
mov
mov
mov
lret
jge
stc
lock
push
test
xchg
call
ret
sub
insl
pop
push
in
dec
inc
fisttpl
mov
jge
xchg
data16
ss
in
lock
scas
mov
cltd
cmp
outsb
sbb
fistps
out
jle
shl
in
shrb
pushl
outsb
test
mov
adc
mov
js
lock
dec
dec
jbe
pop
push
mov
out
in
push
xchg
adc
lret
sahf
jmp
das
lahf
sbbl
test
ret
jg
cmp
gs
dec
xor
inc
mov
pop
cmp
repz
inc
lahf
cmc
call
add
daa
adc
addr16
adc
lret
jecxz
jge
push
xchg
mov
mov
xor
cld
test
rorl
or
push
bound
inc
mov
push
test
mov
and
cmp
out
dec
push
push
push
pusha
xchg
cli
add
stos
popf
mov
mov
loop
fwait
cmp
inc
mov
xor
mov
and
bound
mov
out
adc
lahf
icebp
xor
sub
add
jno
push
pop
mov
push
inc
js
sahf
test
jo
xor
pop
or
sahf
ds
sbb
or
loop
inc
pushf
dec
xchg
cmp
sub
jb
add
insb
icebp
adc
cld
das
fisubs
arpl
insb
or
jne
xor
fldenv
shlb
xchg
cmpsb
mov
mov
loop
icebp
sbb
andb
jns
xor
out
hlt
jp
add
adc
iret
jecxz
movsb
ret
jp
lea
or
mov
push
scas
lock
pop
lcall
mov
dec
mov
mov
fucomip
movsw
and
cwtl
adc
sahf
in
lret
call
sub
clc
mov
pop
pop
test
cmp
pop
mov
pushf
cmp
sarb
pop
sbb
rcrb
pop
mov
xor
outsb
inc
shl
iret
xchg
sub
or
sbb
and
rcll
sbb
fidivl
ror
lock
bound
shrl
loope
xlat
cld
push
int
jnp
pop
mov
jp
nop
into
fcomps
or
cmp
lea
test
jmp
mov
mov
das
or
out
add
in
fsincos
fldl2e
adc
and
decl
dec
cmp
add
sub
sub
pop
ja
jecxz
pushf
jb
jns
and
rolb
nop/reserved
xlat
imul
and
add
pusha
adc
into
rorl
sub
scas
pusha
lret
xorb
sbb
dec
xor
mov
movsl
loopne
orl
jne,pn
or
sub
xchg
or
dec
ds
ljmp
out
je
push
xor
sbb
movl
mov
movsb
mov
je
mov
cmp
add
sahf
scas
addl
adc
inc
adc
icebp
pushf
ret
dec
iret
xchg
mov
jae
fs
into
cmp
jnp
clc
or
mov
imul
xchg
fs
mov
sarb
sub
call
pushf
mov
or
les
cld
aaa
sub
jl
inc
scas
lds
into
inc
sbb
imul
int3
mov
fs
or
shl
inc
sub
and
or
ret
sbb
adc
jmp
jae
mov
mov
xchg
xchg
push
cmp
push
jae
loop
ror
lret
jge
test
xchg
aas
pop
les
fidivl
jae
fs
or
fdivl
sub
pop
jmp
mov
subl
outsb
daa
fs
or
push
ds
pop
loop
cmpsl
cmpsb
sub
jnp
insl
lret
mov
lret
jmp
sbb
shl
fiadds
fwait
iret
and
mov
stos
fstl
loop
jne
pop
mov
mov
adc
sbb
sti
cmpsl
inc
xchg
mov
push
mov
dec
lock
or
pop
mov
insb
jb
xchg
stos
pusha
inc
shll
pushf
movsl
out
mov
les
push
add
or
or
popf
outsb
mov
aaa
mov
inc
mov
mov
es
push
sti
fisubs
fisubl
lds
stos
xor
xchg
out
pop
out
inc
repz
jl
lock
popl
mov
push
ss
sarl
xchg
stc
xor
jle
xchg
mov
sub
add
xor
pop
mov
into
jbe
jecxz
dec
jecxz
test
mov
insl
push
outsb
lods
push
xor
dec
rcr
in
mov
dec
xchg
mov
push
or
aas
imul
push
imul
movsl
ret
out
xor
xor
pop
lcall
out
and
mov
jmp
mov
inc
bound
mov
sub
cmp
xor
ss
int
jle
lahf
adc
loope
mov
adc
mov
xor
je
jno
mov
push
cmp
sub
shl
pop
pusha
cmp
sub
jo
daa
jo
mov
das
stos
pop
mov
xor
out
test
adc
push
cmp
clc
sub
dec
js
jmp
mov
or
std
inc
pop
fidivs
clc
push
pop
fmul
sbb
jg
or
es
sahf
out
lock
mov
xchg
cld
inc
fwait
cmp
lret
lahf
inc
dec
adc
cwtl
arpl
mov
out
aam
sbb
xchg
rcrl
add
rcll
lret
and
or
nop
push
movb
movsb
inc
mov
inc
mov
call
adc
rcrl
and
shll
sbb
push
mov
loope
cld
ljmp
cmpsl
mov
or
enter
pop
add
mov
mov
cmp
mov
popa
add
xor
and
xor
and
cmp
sbbl
push
repz
and
out
jae
or
jp
dec
mov
pop
mov
mov
cmpsb
bound
inc
stc
test
adc
gs
in
mov
sti
cmp
dec
mov
cltd
sub
dec
dec
cmp
jg
xor
fcompl
bound
aaa
sub
cmp
popa
nop
movsb
fcomps
push
stos
mov
scas
bswap
push
xchg
mov
enter
or
jo
outsb
rcrb
adc
add
int
je
daa
and
push
sub
imul
push
xor
pop
scas
adc
data16
es
lods
pop
sbb
pop
popf
stos
lret
jle
adc
jnp
fbld
lahf
lock
push
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
je
push
xchg
xor
jno
xchg
cld
fbld
mov
jns
fs
leave
rolb
movsl
push
pop
mov
aas
shll
mov
inc
outsb
shrb
pusha
mov
and
and
leave
outsb
pop
and
inc
inc
aam
cmp
xchg
fwait
and
and
jb
iret
adc
lods
jns
test
ljmp
and
in
add
mov
in
je
adc
clc
ds
sbb
into
and
cmp
jb
sub
push
in
les
inc
push
ljmp
adc
mov
adc
inc
hlt
ror
ljmp
dec
and
les
cld
and
into
pop
lret
lcall
pop
xchg
test
dec
shrb
pop
push
ja
xchg
xor
scas
cmp
jo
loopne
push
test
pop
das
hlt
imul
lods
fs
insl
cwtl
repnz
sbbl
sarb
in
jb
adcb
leave
stos
ss
cmp
xchg
pop
lods
test
cwtl
dec
ret
pushf
test
adc
dec
inc
lock
add
testb
outsl
add
sbb
and
mov
sub
mov
pushf
icebp
mov
inc
adc
sbb
popa
jmp
in
not
dec
ficomps
rolb
rcll
jns
test
fbstp
aaa
inc
xor
outsl
dec
ja
pop
into
ret
jo
push
std
iret
pushf
loop
addb
call
repnz
sub
mov
mov
pop
mov
lods
sahf
sbb
in
push
call
push
arpl
daa
dec
in
push
xchg
sbb
and
stos
cltd
inc
and
popf
sbb
shr
mov
dec
in
out
or
push
xor
outsl
insb
sub
loopne
popa
cmpsl
in
je
cmp
push
test
test
ret
repnz
dec
cs
sti
je
add
jmp
outsl
push
sub
call
push
pop
nop
add
jmp
xchg
xchg
and
testb
ja
popf
inc
push
leave
jmp
rorl
sub
mov
xchg
fcmovnb
jno
lcall
adc
mov
xor
xor
xor
lahf
int3
outsb
popf
lahf
into
adc
xlat
pushf
mov
sub
in
andl
pop
mul
add
and
xchg
in
fisubrl
or
ss
jmp
stos
pop
xchg
outsb
loopne
insb
pusha
push
fwait
pop
xchg
adc
sub
mov
cwtl
dec
or
fsubrl
hlt
pop
push
push
sahf
test
xchg
dec
lods
insb
xchg
jmp
mov
sbb
aas
ja
mov
push
sahf
and
push
xchg
mov
outsb
iret
push
outsb
push
das
data16
ds
cmp
loop
cmp
outsb
xor
sahf
mov
sbb
pop
dec
pushf
shl
pop
or
add
adc
jbe
les
fadds
pop
jmp
jo
mov
movsb
cmp
mov
push
js
arpl
or
or
movsl
xchg
mov
inc
dec
cs
fldt
jnp
mov
pusha
jge
clc
add
in
mov
jb
or
shll
sub
mov
cmp
pop
idiv
pop
loopne
ficoml
and
imul
push
je
xchg
lock
stc
dec
mov
mov
dec
sarl
sbb
pusha
lds
adcl
dec
mov
mov
lea
and
pop
push
jp
mov
sub
mov
inc
jbe
pop
and
ss
lock
rorb
cltd
fucomip
jp
mov
cwtl
rclb
xchg
cmp
popf
jne
sbb
ljmp
pop
lods
push
in
fs
jno
dec
jle
les
inc
dec
jnp
xor
push
mov
sub
push
arpl
les
in
cwtl
iret
and
and
dec
cwtl
mov
das
jmp
sbb
xlat
mov
and
mov
xchg
add
xchg
inc
xchg
and
xlat
pop
pop
hlt
and
data16
pop
cltd
stos
aam
lds
icebp
imul
sub
outsl
xor
jle
mov
mov
ds
dec
test
dec
pop
lock
dec
clc
int3
mov
mov
xor
pop
imull
icebp
jno
out
sbb
jmp
scas
rol
fcmovbe
inc
inc
pop
inc
jmp
repz
sti
cmp
push
push
sbb
or
dec
push
mov
push
xchg
data16
xchg
add
add
inc
pop
sbb
pop
fdivrl
inc
cltd
cmp
pop
movsl
push
rorb
push
and
aam
pop
xchg
test
jle
imul
jg
and
repz
sbb
xor
sub
inc
stos
mov
xor
dec
sub
add
fucomi
cmp
scas
mov
loop
add
sahf
addr16
loope
mov
shlb
xchg
stc
mov
xchg
inc
or
test
mov
push
xlat
imul
repz
out
xchg
sbb
sbb
mov
arpl
or
adc
ss
popf
ja
insl
xorb
test
ficoml
sub
ljmp
arpl
fildl
test
push
or
lods
inc
sub
nop
inc
cwtl
mov
imul
xor
out
adc
cmpsl
push
js
xor
mov
mov
test
mov
xchg
jns
pop
mov
int
lock
sub
add
and
cwtl
push
subb
dec
rclb
sub
dec
xor
jge
popf
pop
inc
and
mov
cmp
ret
inc
xchg
and
pop
shll
fucomip
pop
dec
and
je
int3
mov
push
cmp
fidivrl
popa
addr16
das
sbb
jo
and
push
cmp
iret
pop
sbb
popf
fs
add
test
nop
sbb
pop
xchg
add
imul
xchg
rolb
adc
stc
sbb
push
jecxz
stc
mov
sbb
in
cmpsb
jae
sub
lds
pop
enter
fbld
je
std
fwait
nop
fcomps
sar
lahf
iret
jmp
arpl
dec
mov
hlt
aaa
les
pop
aas
neg
inc
cmpsb
cli
mov
adc
cwtl
je
arpl
rcrl
scas
or
into
pop
mov
mov
ficompl
lods
mov
cmc
inc
jb
lds
fcomp
sub
mov
or
cwtl
jmp
test
cmp
fdivl
cmc
aad
sbb
mov
loopne
xchg
mov
iret
scas
movsb
pop
cmp
lock
insb
fidivrs
push
sti
in
inc
orl
dec
jne
pop
fisttps
pop
mov
lcall
lea
mov
push
mov
and
push
enter
mov
mov
fimull
inc
lods
xor
cmp
sub
ficomps
outsl
iret
imul
mov
rclb
je
fistps
ljmp
dec
loopne
xchg
sbb
cli
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
and
dec
insb
movsl
adc
push
lods
popf
sub
mov
in
jmp
fbld
pop
xorl
insl
mov
or
mov
in
nop
adc
sub
pop
shll
lret
push
mov
mov
lods
pop
ds
lret
xchg
cmp
out
sbb
addr16
push
lock
aad
inc
enter
sbb
lret
lldt
mov
scas
jecxz
dec
fs
loopne
jnp
or
sbb
movsl
add
fwait
ret
mov
out
inc
les
fdivrs
mov
call
imul
push
mov
sbb
sahf
js
sub
xchg
cmp
arpl
sbb
lret
inc
dec
movl
or
ret
xlat
mov
push
fiaddl
mov
int3
popa
xorb
push
dec
sub
pop
cmp
pushl
jmp
mov
out
movsb
mov
xor
outsl
cmp
repnz
cs
xor
orb
scas
hlt
pop
cmp
inc
jo
inc
les
push
rorl
sbb
sti
popa
inc
dec
test
in
test
xor
mov
mov
inc
femms
xor
xor
inc
jmp
and
mov
movsl
cmp
jbe
fstl
cmp
jno
or
cmp
push
inc
jp
cwtl
hlt
xchg
push
mov
add
aas
enter
in
imul
xchg
adc
and
push
push
outsb
push
push
mov
int
into
insl
xchg
and
jmp
mov
das
mov
into
xorb
fwait
add
mov
cmpb
pop
inc
mov
popa
adc
inc
les
xchg
pcmpeqw
sbb
or
scas
inc
pushf
add
push
xchg
outsl
into
xor
scas
les
mov
lock
and
fwait
sub
cwtl
mov
iret
addr16
adc
xchg
repz
das
call
xchg
mov
or
push
loope
notl
stos
lods
xlat
xchg
stos
ljmp
sti
mov
jl
mov
sbb
aaa
mov
add
mov
ds
orb
lcall
ret
sbb
testl
insl
xor
mov
jmp
mov
jb
sbb
inc
in
loop
test
or
fbld
mov
das
mov
mov
fwait
sub
cltd
push
les
nop
push
cmp
push
xchg
inc
dec
imull
adc
cmp
or
dec
mov
xchg
mov
stos
dec
dec
sbbl
or
mov
xchg
cltd
loop
mov
mov
xor
and
mov
jecxz
xchg
pop
xor
into
xchg
mov
sbb
pop
imul
jle
cmp
jge
mov
testl
pop
xchg
icebp
fldt
xor
icebp
jbe
sbb
inc
add
and
jg
rcr
jb
fisttpl
and
or
xor
fbstp
push
inc
in
pop
mov
xchg
pop
enter
mov
nop
add
outsb
shl
sbb
cld
in
mov
xchg
ret
fsub
mov
xchg
mov
imul
jge
xchg
push
push
push
cmp
cs
imul
jg
out
inc
adc
cmpsb
sbb
icebp
cs
adc
lods
lret
outsb
loopne
jne
xchg
push
fs
leave
ds
sarl
lcall
pop
shrl
out
fdiv
push
adc
jns
push
or
je
xor
mov
cmc
mov
popf
roll
int3
les
xchg
lret
and
ret
mov
cmp
call
push
and
mov
add
out
stos
cmp
arpl
mov
data16
sub
push
mov
shl
repz
add
xor
aam
movsb
adc
sahf
data16
ljmp
xchg
out
add
jae
in
aam
lret
mov
out
in
cmc
and
mov
mov
pop
test
aam
int3
incb
test
xor
xor
test
daa
mov
in
cmp
ja
pop
xor
fsubrs
lea
xchg
xchg
mov
xor
imul
xchg
mov
ret
or
inc
inc
add
aad
cmpsb
hlt
movsl
push
aas
mov
shll
or
jge
inc
jecxz
inc
jp
sbb
push
inc
pop
arpl
mov
inc
inc
lods
mov
ss
dec
leave
aad
sbb
dec
xrelease
xlat
xor
adc
jno
mov
ss
mov
inc
fmuls
dec
dec
fsts
outsb
add
mov
js
test
shl
dec
ror
pop
mov
push
and
icebp
xchg
movsl
stos
jmp
jp
fmulp
inc
movsl
stc
gs
xor
sub
not
fcmovu
call
fidivl
div
push
ror
jmp
adc
std
nop
in
sbb
fbstp
pop
xchg
gs
pop
subl
call
pusha
subl
sub
mov
test
scas
fmul
call
jp
push
mov
out
and
push
adc
stc
dec
and
shl
push
pop
out
iret
mov
pop
xchg
les
sbb
psubsb
fistps
mov
imul
andl
xchg
pop
ror
into
lret
push
mov
sbb
nop
and
call
fs
adcb
push
sbb
in
enter
pcmpeqd
jo
shl
std
pop
andb
sub
pop
mov
add
lret
addr16
rcrb
jbe
sarl
add
fcoms
or
push
std
cmp
jno
sbb
pop
imul
jns
fsubl
lret
xor
jecxz
mov
and
pop
aam
lods
into
stc
sahf
sub
subb
fstps
xchg
cld
pop
cmp
push
pop
fwait
adc
dec
and
out
sub
mov
jb
outsb
add
or
loop
lock
push
aaa
test
inc
pop
stos
pop
cmpsb
leave
mov
inc
call
jp
mov
cld
mov
movsb
mov
xchg
cmp
jno
sbb
adc
cmp
inc
jns
jg
cli
pop
fmulp
movsb
popf
inc
gs
xor
mov
ffree
sbb
lret
jb
loope
mov
btc
mov
jae
cmp
std
sbb
or
mov
mov
aad
insl
out
add
add
outsl
data16
push
pop
adc
sub
sti
and
push
mov
add
mov
xorl
jnp
stos
xchg
pop
loop
leave
clc
mov
aad
test
sub
xorl
aas
js
sub
push
ljmp
push
stos
dec
int
cwtl
repz
pop
ja
and
mov
mov
push
and
inc
in
xchg
leave
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
adc
scas
adc
jno
cmp
cwtl
outsl
test
ljmp
out
mov
mov
pop
je
lret
icebp
sbb
mov
stos
xor
test
dec
and
sarb
xor
cwtl
dec
decb
lods
out
pushf
mov
icebp
mov
adc
mov
xor
mov
pusha
xchg
cmp
fildl
mov
fimull
adc
fimull
insl
jp
mov
fdivrl
loop
shr
jo
iret
mov
jo
pop
jge
shlb
out
das
lret
jae
sub
repnz
xor
pop
sahf
jb
call
mov
popl
mov
out
mov
int3
mov
dec
cmp
cmpsb
scas
stc
addr16
push
inc
sub
mov
pop
aaa
out
sub
adc
inc
out
push
add
mov
mov
pop
adc
push
bound
push
add
jne
repnz
ss
push
xchg
jns
mov
cmp
in
dec
adcl
or
cmpsl
es
sub
dec
dec
aad
cmpsb
inc
push
ds
das
out
sbb
xor
push
sbb
jo
push
sub
sub
sbb
xchg
lret
adc
lods
mov
bound
lea
int
sub
imulb
out
cmp
sbb
fstl
loopne
mov
xchg
push
les
stos
ss
add
dec
xor
mov
in
pop
fnstenv
push
inc
mov
inc
fldenv
rcrb
arpl
test
and
cmpsl
fwait
cli
pop
cmp
push
mov
adc
test
jnp
dec
popa
jae
ss
xlat
icebp
lret
fnstsw
or
mov
jno
test
shll
mov
call
cs
enter
mov
dec
lahf
sahf
mov
les
adc
icebp
js
arpl
cmp
push
cmp
mov
xchg
in
pop
enter
cmp
ret
push
cs
dec
xchg
outsl
add
adc
cmpsb
enter
sbb
rorb
arpl
cmp
aam
jp
jnp
and
pop
repz
data16
out
sbb
jecxz
mov
sar
push
mov
in
or
sub
add
mov
js
sahf
pop
subb
movsb
ficomps
fstl
and
pushf
adc
push
sbb
fnsave
daa
sub
out
xchg
dec
add
mov
enter
out
pop
push
iret
sti
repnz
sub
notb
stc
lcall
popf
sarb
dec
pop
jl
xor
inc
int
arpl
psubusb
in
das
push
ret
inc
dec
call
popf
daa
adc
pop
mov
add
adc
push
mov
leave
xchg
repz
mov
or
jle
adc
or
ja
push
push
cmp
rcl
jl
jb
iret
mov
push
jae
xor
ret
cmpsb
inc
sbbl
and
lea
je
aam
in
mov
dec
xor
outsl
xlat
sbb
rcr
es
push
aas
jnp
ret
lea
sbbb
or
das
rorl
pop
adc
in
add
pop
push
push
push
xchg
xchg
fdivp
inc
push
ljmp
arpl
xchg
test
inc
roll
lcall
fwait
stos
jle
rclb
push
pusha
dec
rol
outsb
loopne
mov
xchg
insl
subl
out
xor
js
stos
leave
bound
into
sti
pop
xchg
mov
int
dec
test
test
sub
cmp
test
stos
rclb
loopne
xor
out
clc
popf
mov
js
loopne
pop
std
std
test
push
test
or
add
add
ja
cmp
mov
sub
cltd
jg
test
out
pop
add
mov
leave
lahf
test
mov
mov
xchg
adc
insb
sbb
adc
loope
xchg
enter
sti
xchg
rorb
pop
or
subl
inc
jns
test
in
add
xorl
loope
rol
in
orl
or
pop
in
popa
cli
xchg
pop
pop
mov
repnz
add
aad
faddl
mov
push
adc
push
add
mov
push
pop
shll
lods
js
and
fdivl
mov
movsb
and
cmp
arpl
xor
movsl
mov
data16
mov
mov
fucom
mov
jbe
imul
in
insl
and
imul
stos
mov
fiadds
pushf
stos
mov
popa
dec
lcall
aas
push
cld
jo
lret
push
out
jle
push
xor
scas
dec
std
mov
fs
inc
outsb
mov
mov
add
or
scas
cwtl
sub
fbstp
aad
cmp
and
xor
in
jp
cmp
int3
sub
dec
test
lret
mov
push
mov
cld
mov
dec
cmp
inc
popa
dec
mov
cs
jns
mov
mov
adc
cwtl
lcall
inc
jns
in
dec
add
xchg
fsubrp
or
add
sub
mov
int3
subb
dec
jle
and
scas
sarl
push
fimull
sub
mov
mov
mov
daa
cmp
int3
stos
push
add
movsl
stc
jno
push
sub
pop
mov
jl
sbb
mov
mov
sub
sub
insb
sbb
sbb
jae
jle
sub
fsubs
add
int3
mov
inc
and
mov
xor
stos
int
popf
add
dec
ja
lcall
rorl
xchg
mov
push
inc
dec
dec
or
xor
sbb
cltd
and
js
pop
xchg
jle
loopne
xchg
lock
cmpsl
aam
cmp
jle
and
inc
sarl
loopne
rcll
or
inc
add
icebp
scas
jp
and
pop
xchg
sbb
cmpl
into
xchg
out
aam
xor
fisttpll
mov
push
mov
imulb
mov
mov
dec
lret
adcb
mov
aaa
test
or
nop
xchg
xchg
loope
push
sarb
sub
test
ljmp
jbe
pop
pop
lret
adc
mov
mov
cmp
cltd
cmp
int3
stos
fdiv
leave
lea
ror
pop
jbe
gs
sti
rcll
mov
dec
inc
add
jno
pop
outsb
mov
stc
fwait
push
adc
jno
inc
test
repnz
mov
iret
sbb
das
xchg
inc
stc
out
ja
xchg
cmpb
adc
dec
ret
adc
mov
sahf
decb
pop
cli
dec
aad
mov
cli
aas
bound
xchg
ss
mov
xor
push
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
nop
dec
and
sar
emms
mov
xchg
lret
fadd
ret
add
popa
dec
xchg
mov
adc
les
jg
mov
push
sarb
pop
xor
leave
pop
mov
je
filds
xor
lahf
add
imul
fwait
pop
bound
mov
or
cmp
push
lea
sub
add
or
insb
ljmp
xchg
sbbl
or
xchg
pop
pusha
pop
js
push
push
dec
jne
test
cmp
xor
jbe
dec
push
sub
movsb
stc
stos
mov
in
sbb
in
inc
jg
sbb
setns
sbb
aaa
cwtl
push
inc
pop
ficomps
and
loopne
addr16
test
mov
or
int
cmp
cli
imul
popa
xchg
push
ret
xchg
lea
jne
stos
call
cwtl
fwait
push
mov
add
xlat
inc
inc
xchg
sbb
mov
inc
imul
pop
cmp
mov
jge
shlb
test
je
pop
shl
cli
mov
mov
xchg
aam
inc
lcall
dec
mov
xchg
daa
out
adc
fmull
push
ret
mov
cmp
loopne
adcl
mov
mov
xor
in
test
sub
adc
test
ss
stc
into
or
add
inc
cmp
and
mov
mov
inc
push
xchg
aaa
in
pop
in
dec
hlt
sahf
in
aaa
test
add
insb
mov
sbb
fbld
jp
fstpt
mov
ret
out
fs
sbb
inc
xchg
dec
popa
push
push
pop
push
inc
push
mov
fnstsw
sbb
or
outsl
idivb
data16
dec
mov
cmpsb
adcl
insb
rclb
enter
cmp
dec
addr16
shlb
sbb
and
cmpsb
cli
data16
fdivr
sbb
push
inc
shll
int
pop
lds
ss
mov
push
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
