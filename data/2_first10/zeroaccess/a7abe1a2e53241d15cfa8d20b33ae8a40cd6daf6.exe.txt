push
mov
sub
xor
mov
xor
mov
adc
mov
sub
push
mov
mov
mov
mov
jmp
mov
or
inc
xchg
inc
scas
xor
push
clc
adc
add
mov
mov
call
int3
or
adc
jo
movsb
xchg
jle
dec
mov
mov
xchg
mov
daa
and
push
sbb
sbb
pushf
dec
out
sbbb
add
sbbb
inc
ret
mov
movsb
in
jne
loopne
jno
aas
xchg
in
rolb
pop
or
sbb
notl
add
pop
fidivs
cli
xchg
cmp
or
pop
or
cmp
inc
cld
mov
leave
push
jbe
push
fsub
or
in
ds
scas
mov
sbb
bound
sub
test
inc
int
push
adc
js
mov
out
push
mov
mov
aaa
stos
dec
jnp
mov
mov
fcom
movsl
push
adc
jmp
rcll
add
cmpsl
fninit
sbb
cli
push
filds
push
je
addl
add
pop
lods
ret
data16
mov
and
mov
push
xchg
or
jne
rol
cmc
shlb
sbb
sbb
mov
sbb
imul
cmp
mov
sub
loope
out
test
stc
stc
das
repz
pop
test
or
adc
sbb
shrl
test
xor
mov
cmp
jl
mov
andl
call
jns
ret
sbb
mov
aaa
sub
dec
sbb
xlat
mov
jo
movsb
mov
jge
test
imul
fstl
pop
jns
push
into
or
pop
cwtl
mov
jb
jno
xor
jae
mov
into
sbb
cli
mov
or
push
shl
in
inc
ret
fsubrl
sub
hlt
fnstcw
mov
pusha
les
cmp
mov
sbb
mov
xor
adc
sub
or
inc
stos
inc
xchg
repnz
nop
pop
push
shll
testl
lahf
xchg
daa
cmpsl
cld
adc
mov
ljmp
mov
iret
xchg
xchg
or
xor
pop
test
mov
cld
mov
scas
add
in
mov
push
pop
in
xchg
jg
ljmp
gs
out
pop
dec
sub
cmpb
in
sbb
imul
fidivs
sub
shl
ja
rolb
inc
sbb
or
jne
inc
stos
shll
sub
sbbb
push
call
inc
dec
pop
loope
xor
gs
inc
inc
cmp
ja
les
add
jp
stos
push
cmpsl
xchg
inc
xchg
dec
outsb
xor
dec
cmp
or
mov
and
out
mov
inc
int3
test
aaa
fsub
sub
adc
pop
rcll
adc
repz
sub
jge
push
adc
dec
pop
jg
pop
shll
int
dec
pushf
nop
xor
cmpsb
sub
or
pop
cmc
movsl
add
adc
shll
fiaddl
ljmp
pop
push
inc
aam
call
cmp
fisubrl
push
call
fsts
data16
subb
inc
xchg
lea
add
jno
iret
rorb
mov
fadds
pop
fidivl
dec
cmp
xchg
mov
nop
jmp
pop
mov
js
aaa
je
inc
xchg
mov
push
rcrl
mov
xchg
orl
mov
leave
push
inc
test
pop
jge
mov
mov
mov
jg
ds
pop
xchg
or
fcmove
out
fisubrs
push
insb
xor
test
sar
imul
out
in
or
xchg
icebp
jo
insl
mov
shlb
mov
ss
add
push
push
xorl
or
cmpsl
lcall
mov
adc
dec
cli
lcall
call
inc
cmp
mov
xchg
fwait
sub
jmp
lds
dec
and
dec
hlt
into
fcomps
inc
and
add
dec
push
xchg
push
fstpt
mov
push
jno
out
imulb
lahf
hlt
data16
dec
dec
out
pusha
bnd
xchg
mov
jne
or
sbb
popf
push
cmpsb
pop
in
sbb
stos
cmp
loopne
inc
frstor
icebp
jmp
cli
imul
shr
iret
clc
dec
js
fsubl
xchg
dec
xor
lods
dec
shrl
push
out
loop
adc
inc
xlat
lock
cmc
sbb
lahf
clc
mov
xor
mov
or
pop
ret
dec
rclb
into
rcll
in
popf
les
loopne
mov
xchg
xor
in
test
icebp
sub
das
negb
scas
insl
cmc
cmp
push
sbb
rcrl
loopne
mov
daa
and
pop
std
data16
jno
xchg
pop
and
mov
push
mov
hlt
orb
add
imul
add
int
pop
push
pop
cmpl
sbb
clc
xchg
idiv
add
cmp
pop
push
or
mov
cli
lahf
sub
sub
xchg
mov
lahf
addb
jp
stos
sbb
mov
lods
mov
mov
fwait
pop
sub
add
cmp
stc
or
test
out
ss
aad
or
test
iret
jns,pt
andl
jmp
int
push
cmp
ret
mov
sub
test
mov
adcb
ret
adcb
xchg
test
dec
xchg
out
xor
jge
and
jns
rcrb
popa
outsb
xor
mov
popa
js
and
test
push
stos
aam
ljmp
lcall
dec
adc
loope
mov
push
dec
mov
xchg
mov
in
cmp
sbb
mov
jmp
add
or
jo
cs
jno
add
jmp
jae
xor
lcallw
dec
out
push
inc
sbb
mov
orl
orl
orl
mov
cmpl
movl
movl
jmp
movl
jne
push
push
push
call
xor
adcl
sbb
mov
and
sbbl
xor
adc
mov
sbb
mov
inc
mov
sub
mov
sbb
cmpl
mov
not
mov
jmp
movl
jg
pushl
call
sbb
or
adc
xor
or
or
sbbl
mov
orl
sub
orl
cmpl
mov
mov
movl
jmp
movl
jbe
pushl
push
pushl
call
and
and
xor
add
and
movzbl
add
mov
add
mov
sub
movl
lea
cmpl
mov
movl
jmp
movl
jg
push
call
movl
xor
add
sbb
or
and
xor
mov
addl
mov
and
mov
or
mov
mov
add
mov
add
orl
mov
mov
mov
or
mov
movzbl
or
shrd
cmpl
mov
mov
mov
mov
jmp
mov
jl
push
pushl
push
push
push
call
and
or
adc
mov
sub
shr
andl
mov
cmpl
not
notl
jmp
mov
movl
jne
push
call
movzbl
adc
and
movl
sbb
xor
add
adc
mov
mov
xor
orl
xor
or
mov
movl
sbb
jmp
push
test
pusha
stos
xchg
nop
hlt
imul
inc
push
clc
adc
push
clc
adc
mov
add
testb
pop
jmp
pop
fisubl
add
mov
sub
movsl
mov
mov
dec
mov
dec
fimull
stos
mov
aam
adc
add
imulb
push
cmp
mov
repz
inc
push
jns
add
call
or
push
adc
mov
cmp
xchg
insl
cmp
mov
dec
test
dec
inc
push
inc
sbb
mov
fstps
mov
push
test
sahf
cmp
es
lods
cmp
arpl
dec
mov
daa
inc
mov
jge
ror
hlt
dec
cmc
push
lret
aas
pop
lcall
jo
mov
dec
cmpsl
cwtl
clc
in
lods
test
gs
frstor
or
lods
enter
add
ja
pop
sti
mov
fidivs
popa
xor
and
sbb
shl
dec
fidivs
jecxz
insl
and
add
and
add
pushf
xor
and
or
adc
and
push
push
xchg
xchg
pop
mov
mov
dec
loope
cwtl
enter
adc
mov
js
mov
mov
arpl
pop
add
cmpsb
push
push
or
jl
inc
mov
dec
xor
jmp
int
push
mov
sbb
mov
in
xchg
cltd
addb
inc
sbb
dec
adc
jp
adc
xor
mov
popa
inc
and
nop
into
testl
mov
outsl
inc
shlb
fst
popf
dec
mov
daa
push
outsb
in
mul
sub
fwait
xchg
pop
mov
ficomps
jno
repz
cmp
mov
cmp
sahf
fldenv
add
or
das
iret
mov
push
sub
daa
dec
push
add
jl
ret
inc
je
std
addr16
iret
fsubs
ret
add
test
xchg
or
popa
lret
pop
sbb
ret
mov
outsl
pop
sti
popf
je
jp
movsl
inc
pusha
ficoms
notb
mov
movsl
pop
scas
iret
push
cs
lahf
push
adc
stos
xchg
jle
push
lcall
test
aaa
sti
aam
mov
rorl
fidivl
sub
sbb
mov
std
jb
rcrb
ss
push
movsl
idivl
loop
nop
stos
xor
clc
jae
addr16
gs
hlt
lods
mov
out
shrb
inc
push
mov
cwtl
ror
ds
push
mov
push
adc
xorb
cld
arpl
push
xchg
sti
cs
andl
and
call
push
pop
hlt
ds
sub
aam
sub
aaa
jl
pushf
push
mov
pop
fdivrs
mov
inc
nop
pop
and
div
dec
mov
icebp
bound
insb
cmp
movsl
add
sbb
ds
aaa
mov
test
aad
dec
push
push
mov
xchg
mov
push
xchg
test
mov
push
xchg
jecxz
ja
nop
popf
mov
mov
pop
je
scas
xchg
mov
ret
data16
mov
pop
in
add
mov
test
add
pop
cmc
add
and
adc
outsl
xor
cld
repnz
sbb
fisttps
adc
movsb
das
rolb
fsubs
in
test
fs
pushf
decl
daa
ret
mov
cmpsl
inc
icebp
adc
jl
out
test
adc
xor
stos
add
cmpsl
adc
insb
out
test
insl
and
push
cmpsb
adc
roll
sub
dec
in
rcll
js
cmc
mov
xlat
inc
lret
ret
into
xor
mov
repz
or
sbb
sbb
fs
cs
ds
xor
je
mov
mov
xchg
sub
scas
test
cld
pop
sub
mov
ljmp
fwait
cmp
test
pop
jge
lock
cld
inc
daa
xchg
mov
nop
pusha
add
pop
xchg
ljmp
test
lods
xor
aaa
fisttpll
stc
lea
filds
mov
xlat
jbe
sbb
jecxz
and
xor
lods
sbb
mov
xchg
xchg
aas
mov
pop
push
dec
hlt
sub
xlat
adc
sbb
jno,pt
loop
sub
ret
cmp
adc
pushf
cwtl
xchg
mov
andl
mov
xor
push
xchg
shlb
cmp
mov
xchg
mov
mov
jmp
pop
arpl
pushf
mov
jmp
lea
cltd
sub
div
dec
data16
jns
dec
mov
pop
xchg
test
xor
adc
rcr
rorl
push
subl
stos
cmp
pusha
or
jns
int3
fwait
and
shl
in
adc
outsl
mov
shlb
cmpsl
and
stc
push
pusha
sarl
cmp
and
in
loopne
fistps
push
popf
mov
les
add
or
pop
ljmp
ret
mov
adc
xor
fsubr
cmp
push
out
sub
stos
das
xlat
movsb
inc
mov
or
sub
lods
lret
pop
incb
sti
cmp
fnstsw
test
jmp
fidivrl
adc
push
imul
mov
mov
and
call
jl
xchg
adc
pop
cmp
or
or
push
dec
pop
sbb
movb
xor
jnp
xchg
rorb
divl
sub
mov
push
mov
mov
cld
and
jb
dec
push
jne
pop
dec
ret
adc
mov
mov
add
std
dec
das
mov
scas
stc
xor
imul
jbe
inc
test
adc
sbb
sbb
mov
pop
xor
add
and
dec
pusha
add
xor
and
add
popf
pop
popf
sti
mov
sbb
xchg
adc
aam
outsb
cmp
fstpl
loopne
inc
lock
movl
negl
movl
neg
movl
neg
movl
movl
add
movl
or
movl
mov
adc
movl
cmpl
movl
mov
jmp
not
mov
jle
pushl
call
sub
orl
movl
andl
movl
and
adcl
and
movl
movl
jmp
push
sbb
sbb
sbb
sbb
pusha
add
adc
lds
arpl
popa
adc
ja,pt
aam
mov
ja
dec
xor
out
dec
rcrb
insl
pushf
jmp
jns
pop
fidivrl
cmp
aad
or
movsl
dec
pop
cmpxchg8b
dec
sub
fcomps
push
mov
and
and
pop
adcl
test
sahf
pop
pop
cli
inc
sbb
icebp
imul
cli
sub
fcoml
cmp
xor
enter
mov
int
sbb
test
out
lock
sub
hlt
pop
pop
js
and
mov
adc
sbb
leave
fsubrl
add
imul
fisubrl
mov
cmpsl
scas
and
ficompl
dec
mov
push
notl
inc
mov
jo
mov
call
movsb
mov
push
push
std
into
push
loop
stc
shl
scas
imul
test
or
enter
lahf
in
push
jmp
subl
cltd
lds
lods
insl
ss
xor
adc
movsb
adc
or
rclb
mov
mov
clc
pop
int
mov
or
subl
dec
cltd
jle
in
inc
jle
out
dec
dec
daa
xor
add
shrb
movsbl
dec
mov
sbb
mov
inc
notb
dec
divb
mov
sbb
pop
scas
sub
sbb
cmp
test
mov
cmp
aad
loopne
add
lods
daa
ja
sti
nop
push
add
mov
xchg
xor
xor
idivb
jno
sbb
cmp
test
push
push
jmp
dec
sbb
pop
mov
or
imul
call
jl
mov
sbb
jmp
cmp
mov
pop
xchg
cmpsl
in
mov
mov
mov
ret
adc
inc
out
in
mov
lods
sbb
xchg
mov
nop
xor
cmp
mov
cmp
dec
inc
add
int3
mov
fcompl
fwait
in
sbb
inc
dec
in
iret
mov
mov
cmp
mov
mov
into
inc
and
mov
inc
call
push
sbb
sbb
es
and
test
xor
xchg
cmp
stc
or
adc
mov
test
fcmovnu
xor
in
add
nop
ror
xchg
sbb
test
int3
jmp
sti
mov
xchg
jnp
cmp
pop
pop
leave
inc
pop
and
out
mov
mov
mov
mov
push
test
out
je
addr16
pop
stc
test
js
push
pop
dec
test
sbbl
sub
sbb
jge
jnp
jne
je
in
test
inc
push
pop
inc
pop
push
stos
or
jge
sub
js
sbb
outsl
mov
or
sub
or
movl
ret
pop
xchg
fidivl
xchg
mov
xor
xchg
add
aam
push
dec
inc
mov
jo
xor
call
add
call
push
sbb
inc
push
inc
call
fwait
test
pushf
inc
and
out
add
dec
add
ja
adc
fnstcw
xor
aaa
sub
push
add
mov
dec
nop
aas
mov
pop
xor
dec
dec
sbb
adc
sbb
popw
les
outsl
ret
xlat
or
icebp
cmp
ja
sub
in
push
xor
insl
sub
in
fs
cs
shll
scas
gs
fisttpll
fcmove
lds
cli
in
addb
loop
pushl
nop
leave
ss
push
jnp
mov
mov
call
iret
hlt
leave
ss
popl
xlat
pop
ret
cwtl
sar
adc
test
sbb
add
xlat
icebp
bound
addr16
loope
mov
jmp
mov
sbb
test
sub
mov
add
xchg
jns
int3
scas
cmpsb
adc
test
ror
xchg
dec
mov
out
sbb
and
pop
push
and
lea
jmp
jno
mov
das
movsb
push
mov
xor
sub
bound
fildl
push
xor
bound
mov
xor
call
jne
and
in
push
push
lods
imul
imul
sub
push
js
dec
cmpsl
push
and
arpl
sub
scas
xchg
and
mov
push
int3
xor
xchg
mov
xor
repz
mov
xchg
jnp
pop
jbe
je
xchg
xchg
and
std
push
and
mov
je,pt
les
cmpsl
add
aad
testl
scas
leave
les
outsb
sub
shrl
mov
mov
inc
xchg
push
dec
jno
popf
jge
out
or
testl
xchg
push
mov
ret
aaa
dec
mov
sbb
jns
es
pop
mov
jae
enter
out
inc
stos
jge
mov
lock
sar
aad
xchg
dec
movl
xchg
jno
pushf
cltd
cmp
aam
ljmp
sub
xchg
lods
es
mov
out
insl
mov
int3
jge
mov
arpl
hlt
fisubrs
test
icebp
or
or
xchg
in
decl
adc
fcomp
dec
dec
sbb
mov
test
xor
jl
mov
mov
sbb
mov
mov
pop
aas
popl
iret
in
push
jne
pop
pop
dec
mov
scas
movsl
push
xchg
lock
dec
sub
shll
xor
movsl
mov
fidivl
in
or
sti
ret
and
jmp
fidivs
cs
xchg
jb
aas
daa
and
xchg
shrl
pcmpeqd
add
and
clc
out
or
loope
insl
jge
jbe
loop
push
notb
push
mov
adc
fildl
and
mov
jbe
pushf
mov
lea
pushl
addr16
mov
lcall
xor
pop
aaa
arpl
adc
pop
aas
cmp
dec
cmp
mov
cmp
add
inc
cwtl
inc
sbb
add
inc
pushf
jge
add
not
movl
cmpl
movl
movl
jmp
movl
not
je
push
push
push
push
pushl
push
push
pushl
call
sbb
negl
orl
subl
subl
orl
movl
movl
movl
sub
movl
jmp
loop
in
gs
ljmp
aam
adc
push
clc
adc
inc
test
jg
mov
push
xchg
jg
inc
in
in
mov
adc
enter
loope
lret
inc
xchg
out
pushf
push
jecxz
inc
rorb
loope
pop
call
or
cmp
mov
in
mov
ret
pusha
jne
push
repz
popf
cmp
sub
and
push
and
mov
add
adc
jecxz
das
cli
loopne
adc
mov
pop
mov
cli
es
adc
and
jle
into
sub
loopne
jb
rcll
jae
and
xor
jp
jns
lret
push
std
test
subb
cmpb
pop
add
and
dec
push
add
mov
ss
outsb
or
mov
add
jbe
stc
lea
jno
fs
rclb
mov
ja
push
xchg
leave
lock
or
bound
push
sbb
dec
movsl
push
das
dec
cli
inc
fstp
or
aas
aam
pop
or
sub
mov
movsl
xorl
test
lret
sahf
sub
fiadds
add
data16
leave
pop
cmp
pusha
test
ret
mov
mov
into
mov
jl
mov
das
cmp
sbbl
lea
adc
es
imul
cmp
mov
lcall
nop
cmc
arpl
sub
jbe
loope
sub
xor
cmp
push
stc
mov
fsubrl
adc
daa
mov
lret
ja
jp
clc
jmp
out
or
lret
andl
mov
lock
mov
sbb
push
aad
push
pusha
nop
scas
rclb
inc
js
jo
popa
enter
mov
bound
jb
lcall
repnz
mov
add
pop
sub
dec
test
fbld
mov
or
loopne
adc
rcrb
mov
nop
push
das
bound
loop
roll
andl
lods
mov
cmc
dec
mov
aad
sbbl
pushf
hlt
add
cmp
inc
cmp
btc
rolb
or
push
push
je
push
push
push
mov
xor
insl
push
dec
xor
aad
sbb
mov
and
add
testl
test
dec
std
mov
loopne
imul
clc
pop
xor
mov
in
mov
scas
jmp
ds
pushf
and
out
fs
mov
sbb
fcomps
dec
xchg
mov
js
stos
cmp
cmp
fistpl
rorl
sbb
mov
enter
inc
mov
lret
mov
loop
stos
iret
push
cmc
or
iret
push
add
ljmp
stc
ror
gs
push
xchg
loop
negb
add
mov
mov
or
mov
or
pop
inc
lret
sub
inc
in
dec
into
mov
repnz
xchg
fldt
aam
sbb
leave
bound
rolb
push
ss
mov
xor
mov
lret
jne
aaa
jg
cmp
ljmp
jle
push
pop
scas
std
xor
in
hlt
mov
in
leave
movsl
orb
mov
push
sub
loope
push
rorl
push
mov
xchg
pop
xchg
repnz
mov
rolb
pop
mov
adc
jp
bound
lods
stos
push
cs
and
cli
pop
sbb
xchg
xchg
sbb
xor
pushf
les
es
inc
movsl
jg
push
sbb
cmp
jbe
xor
cld
sub
movsl
push
cmp
add
push
xchg
and
sub
add
fimuls
inc
addb
sbb
adcl
psrlw
pop
stos
mov
pop
and
stos
add
sbb
adc
movsb
sub
sahf
loop
adc
lahf
push
sbb
sbb
mov
mov
xlat
push
mov
int3
fmull
jb
les
arpl
lret
fsts
stos
xchg
jae
hlt
add
insl
jne
pop
jmp
add
push
jmp
jp
nop
push
xchg
inc
or
mov
fwait
mov
pop
in
push
and
or
popa
aad
xchg
adc
xlat
stc
dec
insb
xor
sub
jl
push
jno
adc
fildll
push
push
jg,pt
jne
test
xor
push
das
mov
mov
sbb
cmp
out
xchg
sub
add
loop
inc
lea
popf
ret
leave
mov
sahf
inc
ljmp
dec
bound
out
jl
mov
cmp
js
sahf
cwtl
sahf
mov
xchg
inc
rolb
aad
adcb
popf
sub
imul
sub
add
adc
int
sbb
mov
or
lahf
or
into
popf
dec
or
ret
dec
sub
fnstsw
and
sub
ret
add
inc
aam
sub
aas
and
lret
pop
jb
repnz
push
ja
cli
adc
notl
stc
dec
movsb
out
enter
fstps
sub
add
add
push
pop
out
movsb
or
jle
xchg
xor
repnz
and
les
xor
es
fmulp
adc
lds
pop
mov
push
xchg
add
pop
cmp
out
movsb
mov
div
jb
movsl
cs
push
mov
jge
lea
jb
jg
inc
cmp
mov
hlt
outsb
mov
in
mov
dec
mov
push
xchg
jns
je
test
add
cmp
jb
push
movsl
fs
fwait
inc
fwait
xor
pop
scas
sbb
bound
xchg
in
outsl
sti
dec
call
pop
fldcw
lcall
xchg
mov
cld
popf
insb
rolb
ljmp
lret
inc
icebp
ret
addr16
sbb
ucomiss
mov
and
mov
xor
cld
push
pop
sub
mov
in
gs
xchg
fildl
dec
mov
push
filds
push
int
loop
inc
xchg
loopne
jl
adc
xchg
popf
fildl
out
aad
movsl
jge
push
xchg
add
inc
pop
adc
iret
movsl
adc
lret
mov
pop
insl
int
scas
sbb
mov
popa
cmpsl
mov
xor
inc
mov
movl
movl
mov
adcl
shl
xor
or
and
mov
push
xorl
push
sbbl
push
push
call
mov
mov
xor
mov
and
mov
orl
xor
mov
cmpl
mov
not
movl
not
jmp
movl
movl
jb
pushl
push
push
call
sub
and
subl
xor
andl
add
orl
xor
or
mov
adc
mov
cmpl
mov
movl
movl
jmp
movl
jg
push
push
pushl
call
or
sbbl
and
xor
not
subl
cmpl
movl
movl
mov
jmp
movzbl
jge
push
pushl
push
push
call
xorl
sbb
sbb
movzwl
xor
xor
xor
and
sub
not
mov
lea
cmpl
mov
mov
jmp
movl
ja
push
push
pushl
call
sub
mov
or
sbb
or
adc
or
cmpl
mov
movzbl
jmp
mov
jl
pushl
call
xorl
mov
mov
xor
add
xorl
mov
mov
orl
or
andl
and
cmpl
mov
movl
movl
mov
jmp
movl
movl
jne
pushl
pushl
call
adc
movzwl
sbb
add
mov
sbb
mov
or
or
xor
or
or
mov
or
xor
cmp
jne
mov
and
mov
or
shrd
shr
mov
sbb
mov
shl
orl
xor
subl
xor
or
mov
cmp
jmp
pop
fdivrs
sbb
cltd
fbld
fcmovu
adc
clc
adc
sub
xchg
jo,pt
jmp
xor
xor
pop
lret
cmp
ret
mov
leave
dec
scas
cmp
inc
xchg
and
xchg
jne
arpl
and
xchg
mov
es
adc
fildl
add
inc
xchg
stos
ret
and
mov
insl
add
lods
add
push
pop
push
pop
push
pop
ficompl
add
into
in
xorl
lds
shrl
testb
pop
mov
dec
fwait
adc
lahf
mov
or
xchg
sti
inc
fldcw
fmulp
push
sub
push
std
push
fists
jmp
int
pop
mov
mov
cli
lahf
ja
mov
outsl
sub
add
lcall
imulb
push
loopne
pop
int
sub
dec
clc
cmp
fmuls
cmpsl
test
dec
xchg
jp
je
jns
push
ss
mov
inc
imul
es
in
push
popf
and
pop
dec
insb
push
dec
in
mov
dec
mov
scas
out
lret
push
in
pop
push
movsb
inc
rclb
notl
push
dec
add
jecxz
mov
dec
movsl
filds
cli
out
pop
add
mov
pop
or
in
lret
and
sub
rep
add
les
mov
mov
daa
jg
or
cmp
movsl
scas
add
aad
pop
fnsave
add
in
cmpsb
mov
and
lds
add
outsl
jmp
inc
lea
dec
rcrl
test
inc
mov
inc
xor
cld
loopne
sbb
repz
sbb
mov
ret
add
add
int3
inc
data16
xchg
decb
out
push
jb
mov
repnz
stos
repz
push
cwtl
dec
lahf
pushf
mov
inc
jbe
fs
les
adc
adc
fstps
jbe
lds
dec
in
mov
cmp
mov
int3
cmp
mov
sbb
or
idivb
push
mov
leave
lahf
inc
pop
nop
shrb
iret
inc
push
hlt
jns
push
inc
test
sbb
sbb
scas
push
sub
movsl
cmp
mov
sub
call
les
sbb
movsb
pop
lret
pop
ljmp
pop
push
inc
fdivrl
xchg
sub
pop
popf
shlb
or
aam
psubq
in
enter
ja
test
lcall
js
mov
cmpsb
repz
or
sbb
aas
aaa
inc
rcrl
ret
mov
mov
mov
xor
mov
mov
pop
lahf
xchg
jmp
xchg
and
xchg
mov
pop
push
in
aad
xor
inc
clc
sbb
lcall
and
and
and
push
xchg
inc
jmp
dec
pusha
adc
sbb
or
mov
das
inc
inc
aad
or
and
jno
rclb
push
cmpsb
out
mulb
xchg
outsb
push
nop
clc
lods
push
scas
mov
sub
hlt
add
aaa
xchg
leave
pop
sbb
xor
ficoms
mov
and
and
mov
sub
mov
xchg
test
cld
adc
fcoml
mov
insl
fimuls
push
dec
stos
xor
je
rolb
sbb
push
or
jg
outsb
das
xchg
loopne
mov
lods
push
sahf
or
pop
sbb
mov
fnstsw
push
and
dec
push
aaa
xor
jns
cltd
ljmp
lcall
mov
out
cmp
push
cmp
push
mov
jns
daa
lcall
xchg
jp
add
jne
mov
rclb
pop
fcmovne
pop
xor
push
or
dec
testb
dec
inc
jae
pop
out
pop
insb
aam
fwait
scas
mov
cmp
push
es
loopne
ss
lcall
and
pop
xchg
jo
jp
xlat
and
lods
jno
and
ja
cs
inc
sbb
lret
push
mov
adc
lods
push
or
ja
xlat
repz
and
leave
bound
test
pop
add
jp
lods
lret
mov
sbb
loope
clc
xchg
lods
sub
xchg
jb
pop
mov
das
std
nop
jecxz
inc
add
inc
mov
cmp
jmp
xchg
int
cmp
test
jno
jo
scas
stos
inc
outsb
xchg
stos
xlat
add
mov
mov
mov
or
cmc
mov
xchg
sahf
inc
mov
loope
sub
push
rcr
das
fmulp
fwait
pop
cmc
je
inc
add
mov
loop
cmp
int
or
and
jecxz
jp
enter
dec
xchg
dec
push
jle
aam
sbb
or
mov
jne
mov
adc
mov
es
and
inc
adc
stos
sub
pop
mov
inc
es
repnz
xorl
lret
enter
out
rorb
jo
fsub
push
movsl
add
es
int
imul
pusha
out
add
in
and
daa
and
sbb
add
divb
ret
nop
mov
jbe
xor
stc
repnz
sub
mov
cmp
andl
pop
dec
dec
out
mov
ss
push
insb
sbb
push
mov
lahf
stos
les
pushf
ror
jno
movsb
nop
fs
xchg
xchg
and
push
pop
cld
test
add
insb
mov
loope
icebp
mov
inc
fildll
dec
mov
push
pop
out
test
negb
lret
and
mov
mov
pop
es
pop
out
xchg
jnp
sbb
aad
dec
or
mov
lcall
stc
sub
sub
ljmp
insl
push
add
dec
aad
sbb
dec
push
fidivrs
sbb
or
xor
jmp
mov
cmp
jl
movsb
call
ror
xor
jo
les
aas
xchg
movsb
not
bound
or
pop
jno
rorl
xchg
test
in
pop
fwait
xor
xor
dec
adc
add
inc
sbb
ret
pop
js
mov
stos
cltd
jne
cmpl
movl
mov
mov
jmp
movl
jae
push
push
call
inc
addl
sbb
mov
xor
mov
negl
sbbl
mov
cmpl
movzwl
mov
mov
jmp
movl
mov
jle
push
push
push
push
push
push
call
subl
xor
add
sbb
mov
xor
addl
mov
jmp
std
fnstsw
pop
sbb
cmpsb
pop
decb
insb
add
adc
push
clc
adc
test
cmp
and
cmp
mov
push
incb
in
push
push
bound
adcl
and
and
addr16
add
push
adc
fildll
sbb
out
fldenv
jae
sbb
sub
repz
std
popa
jns
mov
mov
push
stc
scas
jo
shr
lahf
out
popf
mov
movsb
das
pop
fs
aad
addr16
jo
in
lret
clc
ficoml
add
pop
mov
mov
mov
pop
inc
hlt
mov
scas
or
dec
dec
stc
xchg
je
call
data16
or
mov
stc
pop
xchg
adc
and
in
xchg
dec
pushf
sub
jo
dec
test
in
stc
int
xchg
in
jne
jns
getsec
call
dec
sbb
imul
das
js
addb
notl
ret
dec
mov
and
add
pop
sub
pop
stos
pushf
jg
mov
dec
je
pop
xlat
jbe
mov
ficomps
clc
jle
jl
pop
sub
das
and
jp
pop
push
adc
jo
fdivl
lcall
lret
stos
scas
mov
xor
int3
xchg
pushf
leave
jmp
addr16
repz
aad
es
call
jl
cmp
cmp
hlt
push
cmp
cmpsb
out
jp
and
mov
pushf
cwtd
fwait
add
nop
push
add
shlb
ljmp
icebp
insb
addr16
push
xchg
inc
xchg
sbb
xchg
lcall
out
je
cmp
enter
divl
sbb
jg
lcall
in
dec
sub
aad
clc
jo
lods
sub
and
pop
xchg
cmp
lock
sub
fnstenv
popa
ret
push
outsl
mov
jnp
xchg
sub
jns
xchg
popl
rol
fsubp
adc
jge
fnstsw
adc
lcall
cmp
outsb
fistps
push
sub
mov
pop
push
not
and
outsb
mov
xchg
pop
test
sarl
popf
and
sbb
cmp
cmp
int3
inc
dec
out
sarl
adc
jg
scas
mov
or
inc
pop
pop
loope
adc
xchg
dec
imul
mov
push
cmpsl
loop
adc
pop
repnz
jno
dec
fwait
and
repz
les
push
and
sbb
adc
rorl
sarb
cmc
xchg
jp
sub
mov
and
inc
jmp
or
pop
mov
adc
or
lock
sarb
push
xchg
bound
in
jno
jmp
cs
iret
iret
test
test
aaa
fadds
sub
or
add
pop
pushf
inc
pop
aaa
inc
jmp
push
aad
pop
xchg
xor
in
fnstsw
mov
jmp
fidivrl
sub
or
sub
xchg
loop
xor
jp
xor
aad
dec
sbb
push
ja
movsb
movsl
jbe
xchg
inc
cmp
adc
sbb
gs
cmp
sub
mov
jge
jmp
insb
mov
jno
pop
cmpsl
cmpb
mov
mov
push
adc
sub
gs
test
adc
stos
xchg
sub
mov
out
jmp
loopne
jns
push
in
mov
or
mov
sbb
scas
fistl
push
mov
inc
mov
bound
clc
dec
cmp
inc
cwtl
cmp
sahf
jbe
xor
test
xchg
mov
jmp
lcall
ss
loope
stos
sahf
dec
and
aad
imul
push
jle
out
nop
imul
gs
in
cld
lods
push
mov
xor
mov
adc
mov
push
dec
lahf
cmp
cmp
lahf
in
push
pop
lods
and
xor
fs
aad
inc
test
daa
imul
push
lods
enter
out
lcall
lods
pop
loop
in
add
addl
fsubl
jge
daa
out
xor
hlt
mov
aam
shl
test
jmp
dec
roll
sub
ss
rorl
std
fsubs
sbbb
push
mov
data16
jge
in
ljmp
xor
sub
lds
inc
sub
loope
push
mov
faddl
js
inc
xchg
int
add
or
cwtl
and
nop
push
in
stc
and
je
mov
imul
mov
out
mov
inc
mov
jge
mov
xlat
mov
loopne
push
fsubs
dec
inc
rcr
pushf
xchg
sub
mov
out
xor
cmpb
scas
dec
jae
cwtl
flds
lea
rcll
inc
ss
or
push
mov
mov
xchg
sub
test
aaa
jp
stos
ds
movsl
test
imul
jmp
scas
ja
aas
pop
pop
in
fstpl
and
inc
outsl
fists
mov
dec
or
sbb
cmp
sub
pushf
dec
adc
xor
mov
stos
inc
push
push
cs
push
mull
xor
or
aad
pusha
push
aas
push
inc
dec
sbb
sbb
jno
jns
and
idiv
jnp
sbb
mov
mov
mov
je
test
push
jbe
movsb
sub
out
add
pop
xchg
popa
sbb
push
sahf
es
mov
push
into
icebp
push
adc
inc
or
mov
xchg
sbb
xlat
dec
shll
sbb
dec
sbb
jae
and
cmpsb
or
pop
mov
outsl
xlat
add
push
mov
shr
push
pop
aas
movsb
pop
lcall
rolb
ljmp
pop
push
ljmp
cwtl
mov
cmp
add
xor
or
sbb
inc
sub
fwait
mov
repz
hlt
into
in
jno
repnz
mov
mov
mov
stos
mov
out
bound
xor
xor
add
mov
shrd
incl
mov
cmpl
movl
mov
mov
not
jmp
movl
movl
jne
pushl
call
sbb
neg
or
add
or
mov
adcl
xor
shr
mov
xor
or
shl
sub
mov
mov
mov
orl
add
mov
sbb
mov
sub
mov
shrd
or
jmp
je
stos
cmc
sub
inc
inc
out
xchg
ret
adc
push
clc
adc
mov
pop
inc
lods
mov
gs
sar
in
lock
in
cmp
stos
pop
iret
ret
movl
mov
xor
out
and
jge
outsl
sbb
pop
pusha
dec
scas
mov
pop
inc
iret
and
lock
mov
das
shlb
pushf
mov
mov
cmp
mov
jge
ds
cli
mov
arpl
das
mov
hlt
mov
daa
cwtl
xor
nop
ret
pop
jae
clc
push
push
fdivr
leave
scas
pushf
lea
inc
xor
jge
push
dec
mov
lahf
ss
or
pusha
or
mov
mov
jnp
movsb
ss
push
jp
push
adc
lea
or
push
mov
xchg
cmp
xor
push
inc
fcmovb
outsl
mov
dec
fidivrs
fidivrl
jge
cltd
xchg
cmp
sahf
loopne
or
jb
por
shll
je
mov
fwait
jae
mov
stc
xor
shll
icebp
clc
scas
ret
mov
popa
pop
xor
mov
nop
addr16
fstl
and
rcrb
std
pop
pop
daa
in
sti
adc
dec
sti
dec
idivl
ljmp
push
loope
xlat
nop
stc
stos
scas
iret
adc
ds
mov
pop
stos
scas
fcmovb
jecxz
cmp
jae
sbb
cmp
jg
rol
cmp
shll
movl
or
stos
fnsave
jbe,pt
inc
push
sub
sub
vhsubps
lods
xor
mov
sbb
push
aam
lret
dec
pop
rol
fucom
fisttpll
sbb
hlt
mov
cmpsb
pusha
sub
cltd
cltd
fistpll
push
xchg
mov
stos
jnp
jo
lret
and
or
xchg
addr16
mov
call
push
dec
jmp
test
sti
stos
mov
mov
test
cwtl
jl
cs
cmp
jmp
test
mov
adc
xchg
cmpsl
sub
out
cli
mov
jg
jmp
xchg
push
das
lods
pushf
pop
outsl
xor
fsubl
add
test
and
je
mov
out
sbb
stc
daa
sti
cmc
mov
andb
clc
pop
mov
push
sbb
or
pop
mov
repz
icebp
bound
sbb
add
subl
pop
out
xchg
add
jl
repz
sahf
push
adc
inc
repnz
stos
fsubrp
mov
adc
icebp
int3
test
push
mov
adc
jb
rcrl
pop
das
daa
lds
push
roll
cmpsl
lea
mov
jb
push
clc
or
pop
andb
test
popl
lds
repnz
mov
jno
aad
dec
add
sub
pop
aas
dec
daa
add
or
xchg
aas
mov
xor
div
cwtl
popf
addr16
mov
or
xor
repz
and
lahf
mov
hlt
repz
int3
cmp
cmp
outsl
sub
push
out
mov
mov
loopne
fstpt
pop
shl
in
and
lock
inc
call
lret
cmp
adc
lcall
cmp
jl
jge
addl
xchg
push
bound
aad
mov
iret
mov
cmp
test
mov
sti
pop
and
mov
pop
aad
xchg
xchg
cmpb
pop
sbbb
mov
mov
loopne
pusha
mov
icebp
push
cmpsl
pop
push
loope
out
cmp
mov
ficomps
push
pop
and
test
into
push
ret
mov
mov
pop
ss
shll
pop
jne
jge
mov
jmp
pop
bound
inc
je
js
out
int3
ss
xchg
pop
push
es
rcl
mov
mov
inc
cmp
mov
inc
faddl
jecxz
in
sbbb
popa
xchg
cmp
jmp
inc
out
xor
pop
dec
loope
xchg
cltd
aas
lcall
adc
pusha
sti
push
jo
mov
stos
xor
mov
insb
std
es
out
add
shlb
leave
lcall
ret
ret
movsl
aad
xchg
lods
sbb
stc
pop
nop
inc
jmp
and
xor
adc
movsb
or
or
pop
mov
lret
sbb
paddb
mov
sub
daa
xchg
fcmovnbe
jno
lahf
rcrl
sub
or
sub
jecxz
jo
nop
push
adc
lret
sbb
sub
leave
push
roll
pop
or
push
xchg
lods
jmp
lock
int3
loop
push
add
push
xchg
push
xchg
frstpm(287
fmuls
mov
push
lcall
arpl
push
inc
mov
adc
mov
imull
mov
insl
dec
je
lret
xchg
jo
popa
fildll
xchg
push
pandn
insb
push
test
mov
push
pop
int
xor
xor
lret
xor
testl
xor
or
adc
testl
addr16
aas
xchg
fisubrs
mov
xchg
stos
jmp
imul
cs
enter
gs
in
mov
cmpsl
jp
rolb
mov
sbb
cli
int
out
jmp
pop
add
hlt
test
in
or
adc
neg
movsl
jge
int
xchg
adc
xchg
loope
cmp
cmp
decb
hlt
int
lahf
mov
add
lret
pop
xchg
cli
push
and
iret
jecxz
jb
inc
pop
mov
flds
dec
stos
xchg
movsb
fs
stos
mov
mov
adc
rclb
in
jp
mov
fildl
out
inc
pop
insl
and
lahf
mov
or
mov
sbb
xor
sbb
pusha
jle
sbb
aaa
jb
adc
mov
add
lret
pop
negl
push
imul
xchg
sub
and
adc
mov
cmp
stos
adc
daa
stos
add
push
cmp
inc
dec
setl
cmp
ja
jnp
cltd
xchg
shr
cmpl
movl
movl
mov
jmp
movl
movl
jb
push
pushl
pushl
push
pushl
push
pushl
call
incl
mov
and
mov
xor
xorl
sbb
movzbl
sbb
mov
mov
sub
sub
mov
cmpl
movl
mov
jmp
mov
mov
jb
pushl
pushl
push
push
call
movzwl
xor
adc
add
inc
mov
mov
adc
mov
xor
notl
shl
cmpl
not
mov
mov
jmp
movl
jl
pushl
call
or
xorl
xor
sbb
adcl
movzbl
sub
xor
sbb
or
cmpl
movzbl
mov
mov
jmp
movl
not
jae
pushl
pushl
push
call
mov
sub
orl
adc
neg
mov
or
mov
mov
or
mov
and
mov
notl
shrd
xorl
shr
mov
cmpl
mov
mov
mov
jmp
movl
mov
jl
pushl
pushl
push
pushl
pushl
call
mov
mov
adc
xor
or
sub
addl
addl
mov
cmpl
movl
not
jmp
movl
jle
push
pushl
call
adc
xorl
or
subl
movl
or
add
add
mov
orl
xor
xorl
xor
or
shl
negl
jmp
test
out
pop
mov
mov
dec
sub
adc
push
clc
adc
push
xchg
push
cld
pmullw
imul
nop
and
out
shl
add
cmp
xchg
mov
sub
push
xchg
xor
cmp
jmp
cltd
fs
dec
jne
stos
inc
loopne
mov
lahf
out
cld
cmp
push
jp
jl
movsb
sub
and
ficoml
jne
mov
loop
ljmp
pop
add
adc
sbb
mov
xchg
das
lret
mov
mov
cmpsl
cli
mov
lret
ds
fdivrl
in
xor
mov
cmc
ja
and
orb
push
test
pusha
dec
sub
mov
push
movsl
dec
aad
jle
jmp
cmp
mov
cmp
push
push
sbb
lea
push
scas
call
push
and
scas
mov
iret
lret
xchg
push
or
out
and
xor
mov
negl
jmp
aaa
jb
push
sbb
out
jle
inc
or
jge
inc
mov
xchg
adc
cli
jb
xor
and
pushf
or
decl
fiaddl
fwait
push
in
pop
fucom
sti
push
hlt
lods
push
lret
or
pop
xchg
push
sbb
inc
adc
dec
mov
push
test
xchg
into
fdivrl
orb
fidivrl
stc
ljmp
push
in
fistps
jl
adc
in
jno
out
mov
jmp
cmp
bound
fisttpll
push
test
in
push
jbe
dec
mov
push
out
mov
xor
mov
loope
jae
mov
pop
call
pop
rcrb
adc
in
hlt
push
dec
imul
loopne
mov
mov
or
leave
and
pushf
hlt
xchg
ret
add
pop
rcrl
hlt
jmp
test
mov
cmp
lea
cld
rcr
mov
cmp
pop
stc
pop
mov
andb
ss
divl
ljmp
sub
xchg
sbb
loop
or
push
lret
dec
push
push
cmp
incb
cmp
ret
das
mov
sbb
ret
jge
mov
inc
loopne
icebp
push
dec
movl
das
cwtl
sub
cmpsb
xor
mov
xchg
out
pop
lods
repz
das
je
fnstsw
jge
and
nop
shlb
cmp
dec
rcll
add
jp
es
lds
and
je
ret
adc
cmp
stos
fmull
mov
and
xchg
inc
sub
xchg
sbb
fs
das
mov
loopne
sar
pop
mov
pop
iret
and
mov
dec
popw
fdivl
les
cli
add
jbe
and
es
dec
out
pop
mov
cs
sbb
out
sbb
icebp
mov
cld
cmp
pop
mov
mov
iret
repz
xchg
inc
cltd
notl
sub
and
pop
out
lret
es
mov
cltd
dec
aam
add
sub
sbb
sbb
gs
ds
xchg
adc
sbb
xor
dec
sbb
jo
pop
and
iret
sbb
jecxz
das
hlt
pop
loopne
push
add
sub
popf
push
dec
cmp
push
loopne
push
xchg
cmp
jns
addl
jmp
adc
cmc
xor
pop
mov
jns
dec
add
sti
es
lea
imul
cmp
and
inc
ds
jb
roll
lret
push
pop
jmp
ds
cmp
aas
sbb
sub
push
cmp
rcrb
rcl
mov
or
aaa
xor
adc
fs
out
lret
cmc
ret
roll
int3
and
mov
cmp
ljmp
fisubl
adcb
inc
xor
dec
adc
insb
jle
insb
inc
fcomi
jmp
cwtl
je
ja
push
js
add
shlb
mov
mov
mov
xor
mov
cmpsl
adc
mov
loopne
push
jo
jb
mov
dec
shlb
sub
adc
pusha
popa
int
push
jns
fildl
dec
jl
into
cwtl
es
pop
mov
mov
push
cmpsb
out
clc
mov
mov
jge
dec
mov
ret
sub
fcomi
ljmp
stos
lret
adc
xor
sbb
bound
lret
push
movsb
cwtl
pop
insb
adc
xor
pusha
mov
inc
mov
xchg
aaa
jg
and
ds
cmp
jnp
fs
movsl
sub
cmpl
mov
jno
jnp
test
xchg
xchg
je
fdivr
mov
adc
nop
jns
cs
push
sub
xor
dec
mov
add
sub
jmp
rorl
pop
jne
fcmovbe
mov
lret
pop
adc
cmp
pushf
jmp
negl
mov
adc
test
mov
ljmp
in
add
sub
cmpsl
int3
decl
mov
xor
negb
icebp
rcl
in
lret
dec
aam
mov
lret
iret
test
jl
sbb
mov
lods
insl
add
je
repz
divb
insb
or
shlb
fdivrs
inc
cmpsl
inc
rolb
stos
and
jge
js
and
rcl
les
sbb
xchg
push
xorb
fists
jg
cwtl
adc
adc
aam
imul
das
das
xchg
cs
data16
pop
and
xchg
mov
sahf
xorb
and
cmp
and
cmc
sbb
push
xor
pop
add
pop
dec
dec
lods
stos
mov
sti
or
cld
clc
popa
jae
fisubrs
filds
mov
pop
xor
cltd
mov
jno
and
mov
push
dec
mov
jg
pop
out
psubusb
lcall
jmp
xchg
pop
dec
dec
dec
sub
das
stc
mulb
out
in
lea
pop
mov
mov
das
psubusb
test
out
pop
jne
clc
cld
xchg
sub
xchg
push
add
push
test
sub
insl
jae
mov
mov
clc
pop
test
arpl
shr
adc
add
sbb
out
enter
jle
pushf
sub
or
xchg
lea
or
mov
xor
or
sub
mov
subl
shrd
shr
mov
cmpl
mov
movzbl
jmp
movl
jb
push
push
call
mov
xor
sbb
sbb
andl
sbb
sbb
mov
mov
cmpl
mov
mov
notl
jmp
movl
mov
jne
pushl
push
push
push
call
add
mov
or
addl
xor
mov
add
mov
adc
adc
xor
mov
andl
xor
adcl
or
shl
or
imul
mov
mov
addl
shrd
xorl
mov
incl
mov
andl
xor
shr
incl
mov
cmpl
movzbl
movl
mov
mov
jmp
movl
jg
pushl
push
push
call
adc
mov
or
mov
dec
andl
adc
adc
sbbl
mov
xor
or
subl
shl
sub
jmp
jl
mov
xor
mov
cmpsl
adc
push
clc
adc
fcmovnu
rolb
movb
imul
in
inc
pop
adc
out
jne
pop
sti
dec
jbe
xor
inc
cmp
sbb
frstor
nop
bound
addr16
stc
sub
scas
mov
mov
sysret
jno
sub
in
in
notb
cltd
int3
jae
mulb
add
jne
subl
jnp
adc
loopne
lahf
mov
nop
inc
xchg
js
aaa
sarl
shl
inc
push
xor
insb
pop
shlb
das
xchg
mov
int
ficoml
in
dec
or
cmp
cld
xor
xlat
mov
xchg
jo
push
and
or
sub
jo
push
repnz
cltd
out
mov
sarl
imul
cmpl
lret
cmp
enter
pop
mov
adc
int
jecxz
xchg
xor
ljmp
aam
lret
adc
data16
add
add
in
sbb
dec
popf
pop
add
push
jp
ljmp
inc
sbb
lods
jb
ss
jg
ja
sub
int
imul
ficoms
lock
cmp
inc
cwtl
push
dec
xor
mov
mov
gs
into
push
in
jno
push
inc
hlt
inc
scas
jb
aam
les
sub
mov
movsl
pusha
cmp
adc
jle
les
cwtl
in
mov
jae
iret
push
jmp
add
mov
ds
xchg
out
mov
loope
mov
pop
scas
lock
pop
ficomps
jecxz
bound
and
fstpt
cli
lcall
sti
cmp
mov
cld
xor
in
push
xor
fbld
lret
mov
cld
popa
rorb
pop
push
jnp
mov
filds
xchg
imul
mov
in
cs
pop
mov
mov
cmc
push
mov
push
cmpsl
pop
xor
xchg
out
jp
mov
decl
flds
fistpll
mov
mov
dec
bound
call
jle
inc
add
pop
fldcw
addl
or
push
sub
mov
inc
inc
outsb
inc
aas
pushf
sub
push
push
fcoml
xchg
cmp
scas
xchg
jmp
leave
iret
out
sub
mul
xor
ja
xor
adc
add
nop
push
add
lahf
mov
jo
add
es
dec
add
lret
icebp
clc
mov
test
adc
dec
mov
dec
dec
aas
jg
loope
mov
pop
repnz
jbe
jae
dec
shrl
lds
sbb
add
inc
test
fists
in
out
and
stc
ljmp
fsubrl
mov
mov
out
sbb
movsl
leave
ror
in
out
test
sub
cwtl
call
aad
ret
out
scas
test
mov
cmpsl
aad
xchg
repz
pop
out
add
clc
add
in
mov
cmp
jp
jne
sub
dec
movsb
outsl
mov
es
shlb
xor
mov
ja
mov
jne
push
in
cmp
popa
mov
int3
dec
sub
ljmp
cltd
mov
popa
mov
mov
shr
xchg
sbb
push
cmp
or
mov
loop
push
mov
and
jns
inc
sub
popf
pusha
jecxz
mov
call
pop
shrl
je
imul
xchg
int
fs
add
sbb
sub
cmpsb
daa
and
ljmp
jne
jno
in
dec
imul
jo
jle
xchg
cmp
sti
bound
mov
shl
or
ret
nop
cmpsl
mov
mov
xchg
nop
add
out
or
dec
scas
js,pt
cmp
mov
lods
lods
popf
arpl
pop
pop
xchg
sarl
fdiv
jnp
orl
pop
flds
cmp
inc
outsb
sahf
cwtl
sbb
xchg
xchg
dec
dec
adc
fisttpll
rorb
and
es
dec
sti
sub
pop
and
sub
int3
pop
add
aad
stos
shlb
out
dec
xor
rclb
cwtl
lock
ret
popf
pop
sarw
mov
add
cmp
stos
sub
or
inc
or
out
add
ret
dec
or
xchg
cmp
cmp
adc
shll
and
push
flds
add
xchg
and
push
in
xchg
mov
pop
add
sahf
ret
inc
test
push
lahf
shlb
icebp
add
dec
enter
aad
jno
cmp
add
inc
sbb
roll
jl
adc
cltd
pusha
mov
mov
rclb
jo
bound
in
fwait
xchg
or
xchg
addb
enter
jmp
out
xchg
fisubrl
dec
fs
add
adc
out
int
dec
xchg
push
test
pop
pushf
fstps
xchg
adcl
mov
dec
pop
push
cltd
mov
lcall
incl
out
lcall
das
sub
or
xchg
arpl
arpl
out
mov
jb
cmc
mov
add
scas
mov
insb
or
xorl
push
mov
seto
in
outsb
aam
ljmp
dec
ljmp
loop
hlt
aas
jg
sub
andb
outsl
subb
int3
mulb
addb
sarl
outsb
mov
pushf
mov
repz
aam
cmpsb
shlb
mov
ljmp
rorl
les
pop
cmp
fidivs
add
nop
jg
ja
and
aaa
xchg
test
out
into
jle
cmp
mov
push
pop
test
mov
pop
ds
add
xchg
xchg
rorb
pop
rcl
or
fwait
outsl
jne
push
scas
lret
int3
lcall
roll
test
hlt
push
mull
mov
mov
push
xchg
mov
pop
sbb
mov
aaa
jne
adc
dec
cmp
mov
fisttpl
and
xor
add
lahf
add
cmp
mov
movl
jg
or
mov
orl
mov
shrd
xorl
mov
mov
subl
xor
shl
addl
xor
subl
or
addl
shr
mov
mov
sbb
mov
and
mov
shrd
shr
mov
and
mov
mov
xor
subl
xor
andl
jmp
pop
leave
sti
subl
xlat
or
sbb
push
mov
push
clc
adc
mov
add
cmp
sbb
adc
pop
and
sub
sub
aad
fisubrl
jb
test
rclb
xor
aam
mov
std
push
lods
lds
imul
loop
lret
pop
loope
mov
jo
out
push
mov
sbb
jg
mov
add
sub
add
mov
xorps
pushf
jbe
jle
xlat
dec
mov
mov
repz
inc
add
mov
sbb
adc
xchg
cmp
xchg
xchg
lds
data16
ret
pop
into
add
mov
fld
jecxz
cmpsl
call
jnp
sub
dec
jl
cltd
cmp
jmp
enter
pop
in
int
dec
jmp
xchg
mov
rcrb
mov
jo
and
or
aas
nop
aad
pop
jge
cmc
mov
jecxz
mov
fnsave
or
adc
sbb
iret
stc
out
dec
push
data16
popa
outsb
mov
xlat
and
xor
inc
jecxz
lahf
insb
popl
cmp
sub
cmpl
jno
sti
cmpsb
test
cmp
add
push
xchg
jle
into
jo
ljmp
push
sbb
dec
nop
or
insb
sub
mov
or
pushf
mov
sti
stc
mov
pop
rcll
aam
cs
ja
push
push
ja
mov
loop
jge
dec
test
cmp
mov
jecxz
ja
mov
mov
aaa
pop
or
mov
jnp
outsl
and
ljmp
lret
jae
enter
add
lret
and
test
sub
lcall
movsb
fnstsw
or
inc
mov
arpl
cmp
fldenv
mov
mull
in
push
jbe
jecxz
hlt
das
hlt
loopne
mov
outsl
mov
adc
mov
add
or
outsb
mov
scas
cli
mov
cmpsb
nop
cmpsb
or
iret
sbb
sub
pushf
xor
aas
dec
and
mov
and
repnz
insb
xor
ja
mov
dec
aaa
sbb
add
gs
jo
jge
and
jno
pop
pop
xor
mov
xchg
or
xor
scas
xchg
into
xor
inc
outsb
push
cmp
adc
cs
jns
xor
cmp
cwtl
scas
ret
jle
inc
ret
cmpl
lods
sarb
mov
test
into
jb
mov
adc
daa
push
mov
outsb
in
mov
daa
bound
nop
mov
stos
jb
mov
fists
daa
out
sahf
xor
or
out
mov
into
mov
hlt
sbb
cmc
loope
into
push
mov
imul
sub
cmpsl
lahf
dec
fildl
cwtl
mov
lock
pop
outsl
into
out
popf
or
out
mov
cmp
outsl
sarb
mov
nop
js
push
mov
or
push
mov
aas
shlb
sbb
lea
pop
inc
lcall
xor
mov
insb
jmp
adc
dec
ret
jg
arpl
add
sbb
jae
mov
xor
dec
mov
clc
sbb
jp
jno
movsl
cld
mov
pop
and
mov
mov
call
jno
mov
pop
pop
arpl
mov
mov
leave
pop
popa
pop
pop
call
enter
sti
adc
pop
mov
mov
or
and
out
lcall
cmc
lods
fbstp
ss
mov
add
popf
sbb
cltd
dec
inc
ret
stos
dec
out
ret
push
xchg
mov
mov
mov
rcr
out
ret
cmpsl
mov
xor
mov
pop
scas
push
fists
inc
lahf
push
add
mov
push
push
pop
xchg
sbb
adc
jnp
scas
iret
pop
stc
mull
sbb
ljmp
imul
nop
std
inc
xchg
ficompl
mov
clc
dec
fwait
push
call
popa
lock
adc
and
pop
dec
insl
inc
pop
rorb
loope
pop
jmp
and
movsl
sbb
inc
fldl
imul
push
mov
loop
int
loop
push
test
ds
adc
sub
in
push
subl
fsubs
add
jge
sbb
mov
mov
inc
bound
mov
jl
and
ret
setp
xchg
xchg
jb
xor
int3
rorl
ficompl
adc
sbb
adc
mov
incl
int3
jmp
inc
pusha
jmp
scas
and
sub
cmpsb
adc
hlt
mov
push
outsb
sbb
hlt
mov
xor
movsl
push
fwait
sub
push
dec
sar
mov
fistps
jae
arpl
pop
hlt
into
fiaddl
movsl
xor
mov
arpl
cld
test
out
mov
adc
lock
cmpsb
jp
in
mov
ret
out
lcall
pop
add
xchg
das
pop
je
and
popa
cld
mov
stos
mov
sbb
sahf
pop
sbb
lea
jp
iret
cmc
pop
sub
leave
stos
jne
mov
int3
pop
es
dec
orb
add
mov
test
popa
inc
fs
mov
xor
xchg
pop
cmp
js
es
js
std
lods
mov
flds
jo
xchg
inc
fdivrs
shl
push
pusha
jecxz
daa
xor
adc
sub
fxch
cmc
adc
imull
loope
and
dec
fildl
or
movsl
repz
hlt
out
std
testl
cli
inc
jns
in
inc
popa
fmul
stos
ja
add
push
xor
sbb
jl
add
andl
adc
stos
cld
pop
xchg
add
sbb
push
push
outsl
ret
jne
outsl
lds
jle
and
js
lock
inc
je
fdivr
out
xchg
push
lods
adc
test
sbbl
in
jbe
mov
push
in
enter
mov
ds
outsb
imul
lahf
test
test
inc
jne
mov
sbb
mov
dec
jnp
insl
into
xchg
clc
stos
or
shl
andl
imul
jmp
mov
or
push
and
ljmp
xor
push
clc
adc
xchg
fmull
call
jne
mov
mov
cmp
sbb
insb
cltd
jno
xchg
aas
and
ds
sbb
push
scas
lds
cmp
jp
pop
test
sti
xor
icebp
je
push
push
fadd
addr16
ffreep
mov
lret
jb
popa
add
pop
pop
les
push
xor
mov
inc
mov
cmp
inc
push
dec
loop
or
or
and
inc
mov
or
mov
dec
bound
mov
idivb
popa
push
fstl
pop
loope
mov
test
sarb
fdivrl
xchg
mov
mov
sbb
sarl
cmp
int
lret
push
pop
in
inc
into
inc
sub
add
aas
pop
shrb
pushf
imull
or
sbb
out
shlb
xor
movsb
push
lahf
sti
out
mov
int3
mov
outsl
cmp
fwait
lcall
mov
or
jl
es
xor
push
fwait
call
sub
fdivrp
adc
std
lahf
das
mov
out
xlat
dec
inc
pop
push
sahf
inc
push
xchg
cmpsl
out
add
aad
and
pusha
mov
fdivp
lret
mov
std
sbb
test
sub
sbb
lock
mov
test
out
jle
mull
cmpsl
sbb
push
xchg
int3
or
jbe
mov
and
lods
popf
repnz
jmp
fiadds
fmul
lret
mov
lock
adc
clc
repz
pop
xchg
stos
mov
mov
ljmp
sti
mov
mov
subl
and
or
adc
pop
sub
sbb
or
jg
pop
bound
or
add
adc
test
cmp
cmpsl
or
fstl
or
xchg
fsts
mov
xor
arpl
aaa
imul
mov
sbb
fiadds
xchg
nop
shl
shlb
outsl
inc
out
movsl
shll
aas
test
mov
sub
and
jg
jge
ret
std
jecxz
push
pop
or
push
idiv
xchg
lcall
movsb
mov
and
mov
inc
pop
scas
gs
jp
and
les
xor
inc
inc
or
pop
or
xchg
dec
jge,pt
hlt
or
mov
xchg
xchg
int
scas
jle
aas
pop
mov
repz
icebp
fdivs
mov
or
inc
mov
xlat
pop
jecxz
repz
adc
jne
std
push
lret
fmulp
ds
test
push
jno
push
lods
add
xchg
jmp
jb
jg
push
roll
shll
add
adc
loope
cmpb
loop
insl
scas
or
xchg
jmp
fwait
and
das
and
jecxz
cwtl
push
int3
jge
push
jb
and
mov
cltd
pop
in
int
pop
xor
iret
fcompl
mov
dec
call
sub
xchg
out
imul
insl
aam
pop
dec
xor
bound
les
mov
push
xchg
mov
cltd
pop
stos
lock
and
rcr
shr
popa
jp
sbb
xor
mov
adc
movsb
cwtl
in
rclb
pop
repz
fsubl
jne
aad
icebp
int
mov
adc
dec
xor
adc
test
sbb
jp
push
std
iret
mov
test
sub
mov
jo
pusha
ret
ret
arpl
sbb
mull
lfs
loopne
data16
int
push
pushf
sub
cmp
jnp
mov
xchg
negl
dec
inc
int3
pop
mov
pop
subl
ja
test
loop
inc
xor
mov
push
in
jecxz
ret
popa
cmpl
iret
fucom
xor
lret
arpl
jp
stos
push
aam
pop
or
mov
lock
xchg
daa
add
orl
dec
mov
mov
cmpsb
in
lea
jns
lret
add
imul
lock
fistps
mov
insb
sub
je
negb
ss
push
es
js
sbb
sarb
jo
divl
xchg
sub
in
mov
lds
pop
outsl
xchg
lret
cmp
imul
and
xchg
dec
in
popf
dec
loop
jp
ret
insl
imul
jle
jno
mov
xchg
jno
shll
mov
mov
jne
and
incl
sub
jns
jbe
rep
xchg
orl
lret
mov
xchg
dec
sbb
adc
dec
xor
rcl
xor
mov
mov
andl
mov
pop
popa
bound
mov
decb
inc
mov
mov
jns
add
popf
hlt
cld
add
pusha
or
pop
push
or
or
clc
xchg
fstpt
jae
mov
add
ret
mov
sub
sarl
lods
test
push
push
xchg
jbe
psrlw
stos
adc
xchg
pop
ja
das
into
push
or
push
movsl
push
cmp
push
and
jb
and
push
dec
les
mov
mov
lock
js
repnz
lods
cld
add
andb
mov
mov
mov
mov
stc
mov
mov
hlt
mov
xchg
aaa
inc
sbb
adc
sbb
push
cwtl
mov
xlat
inc
push
jmp
rcrb
pusha
sahf
fsub
ss
aas
test
or
add
xor
fstp
and
hlt
cmp
sbb
stos
or
cld
dec
push
lea
mov
push
les
lahf
mov
cmp
mov
mov
cmpsb
cmp
push
mov
mov
xor
pop
cs
cmc
cmp
sub
lds
pop
adc
adc
loop
test
jl
je
jecxz
jge
frndint
mov
mov
inc
test
cmp
lret
jge
aas
or
inc
mov
xor
adc
mov
add
mov
xorl
mov
orl
shrd
mov
orl
jmp
or
dec
addr16
adc
push
sbb
aam
adc
push
clc
adc
add
xorb
lret
negb
das
shl
or
sbb
push
in
in
sub
insb
lret
jne
movsb
push
test
xor
inc
cmp
xor
hlt
jo
test
les
int3
jmp
inc
in
mov
pop
icebp
jle,pn
aam
int
sub
mov
decl
popfw
jmp
jle
or
fbstp
and
jg
icebp
int3
add
add
jne
ficompl
mov
mov
pop
and
rcl
int3
adc
mov
jnp
mov
xchg
or
or
inc
cmp
hlt
push
xchg
xchg
in
fldl
aaa
mov
mov
sbb
sbb
adc
repnz
cmp
mov
push
mov
cmovo
stc
int3
inc
lea
dec
int3
fistpl
jne
mov
or
inc
jmp
xor
and
movsl
push
jge
mov
rolb
jns
fcoml
xlat
jmp
sbb
inc
dec
jle
popa
ss
jmp
lret
ja
and
pop
jecxz
sub
outsl
cwtl
in
or
add
cmp
cli
mov
stc
pop
push
ja
incl
mov
and
movsb
icebp
lock
int3
pushf
dec
lahf
mov
mov
test
subl
cltd
nop
outsb
cltd
pop
mov
sub
pop
popf
jbe
daa
jns
adc
sub
lret
mov
repz
mov
leave
in
cli
mov
pop
adc
add
ret
xor
lods
inc
test
xchg
xor
pop
out
sbbl
xor
test
hlt
scas
test
into
adc
push
xor
loop
jecxz
shll
cmp
jmp
in
aaa
and
inc
cmp
mov
ror
push
xor
das
cmpsl
arpl
scas
leave
scas
add
xlat
mov
scas
sar
mov
jge
roll
subl
negb
push
push
sbb
adc
push
jbe
pop
sbb
pop
adc
jmp
ficoml
pop
fisubrs
cs
xor
or
mov
mov
adcl
addr16
outsb
movsl
fs
mov
in
mov
movsb
int
jmp
jle
or
stos
pop
int3
out
mov
mov
rcrb
lods
enter
or
sarb
push
cmp
mov
push
pop
mov
mov
mov
push
cli
pop
jo
out
jo
jmp
jge
pop
add
mov
mov
cld
les
xor
xor
mov
shrl
push
sarb
arpl
cld
cmpsb
mov
push
or
jnp
scas
and
dec
out
push
jmp
mov
movsb
adc
iret
push
popa
out
pop
cmp
les
jae
jl
push
cltd
jo
adc
jle
mov
mov
dec
js
ljmp
outsb
fisttpl
adc
sub
pop
stc
aaa
cltd
sbb
add
lret
adc
sub
jecxz
inc
leave
notb
je
sahf
in
xchg
jecxz
fucomi
mov
inc
aad
pop
mov
cmp
jecxz
mov
add
adc
sbb
subl
subb
int3
jnp
sbb
push
and
push
inc
lds
adc
lds
jmp
jecxz
int3
and
call
mov
jae
sub
jge
sub
sub
push
push
cmp
sub
jge
mov
std
pusha
pop
mov
push
pop
adc
frstor
icebp
fcmove
pusha
sbb
push
sub
mov
lea
ret
fsubl
pop
and
es
mov
ljmp
ds
sub
xor
push
ret
aas
mov
cli
in
movsb
cmp
pop
lods
sub
loope
inc
sbb
and
call
imul
jae
pop
pushf
psrlw
jl
cltd
mov
sbb
ja
daa
push
mov
insl
xor
es
fnstcw
mov
lock
or
mov
fimuls
mov
sbb
icebp
dec
loope
push
arpl
push
mov
jbe
sbb
mov
in
bound
dec
notb
jge
pop
mov
loopne
xor
sti
roll
std
ja
and
xor
cmp
mov
mov
inc
loope
push
je
adc
push
out
mov
sub
add
test
push
cmp
dec
pop
or
cmpsl
inc
pushf
mov
sub
aad
mov
push
adc
in
jae
scas
ja
sbbl
sti
pop
xchg
scas
outsb
jo
notb
jg
pop
push
mov
add
sbbl
fwait
mov
dec
lds
std
ljmp
or
mov
in
imul
jbe
pushf
popf
sbb
loope
es
add
insb
jge
and
add
test
mov
data16
outsl
mov
mov
scas
addr16
adc
fnstenv
pop
xchg
adc
and
xchg
stos
push
cwtl
mov
sti
dec
loope
xchg
mov
int
add
sub
inc
jne
mov
add
lods
repnz
cmp
or
ret
jo
repnz
dec
xorb
das
je
xor
and
lds
loop
or
inc
xchg
mov
xchg
sbb
add
fisttpll
shlb
sub
push
mov
inc
into
cmp
out
fdivrl
and
adc
out
insl
sub
and
loop
es
sub
push
mov
scas
lar
ljmp
inc
rclb
inc
jmp
mov
ljmp
jge
rcll
xorl
xchg
cmpsl
andl
out
lret
dec
jns
mov
int3
add
mov
mov
add
pop
dec
cld
adc
bound
dec
cmp
jo
js
mov
pop
mov
aas
rorb
lods
sub
iret
jne
out
or
push
dec
mov
pushw
xor
out
and
dec
or
shrl
stos
leave
mov
jnp
jnp
mov
addl
xor
orl
shl
xor
orl
or
shr
xorl
mov
sub
mov
mov
mov
shrd
shr
jmp
ljmp
sub
sub
push
pop
adc
clc
adc
mov
std
jge
push
jnp
fildll
movsb
mov
inc
jp
dec
lock
dec
mov
popa
add
popf
clc
mov
cmp
and
into
sahf
adc
jle
mov
rolb
mov
imull
cwtl
leave
outsl
inc
movb
cltd
shlb
push
push
push
adc
cmpsb
lods
pop
push
push
es
cmp
into
pop
stc
xchg
jo
fdivl
fwait
aad
add
cmc
xchg
xchg
stos
and
mov
lret
or
ss
rcl
xchg
pop
inc
fdivs
xor
mov
sti
inc
xor
mov
fldt
dec
adc
faddp
daa
arpl
loope
mov
ds
mov
popa
int
cltd
rep
loop
jg
ret
jle
cltd
pop
rcrl
jne
sbb
test
and
sahf
and
jecxz
cmpsl
imul
jmp
shlb
xchg
stos
mov
ss
je
repz
and
xchg
fwait
dec
sub
push
push
add
adc
xchg
and
mov
sbb
pop
jp
cwtl
push
xor
out
dec
pusha
ret
stc
jmp
nop
out
sahf
mov
hlt
adc
enter
jnp
and
push
jne
int3
cmp
add
inc
and
outsb
and
sub
dec
test
push
adc
sub
negl
jno
mov
and
push
cmp
mov
push
clc
pop
mov
inc
out
jbe
jmp
mov
sbb
cli
adc
mov
js
cmp
sub
mov
test
imulb
ss
lods
mov
lahf
mov
pop
cli
out
insb
or
lods
hlt
jbe
std
add
inc
dec
push
in
leave
fiadds
repnz
pop
data16
inc
fabs
incl
sbb
out
das
cmp
lea
lea
dec
in
insb
xchg
fldenv
dec
pop
lahf
push
adc
in
std
jg
les
or
hlt
mov
pop
xchg
push
lcall
sbb
sub
stos
adc
pushf
inc
jge
js
mov
ss
or
aas
dec
add
inc
jecxz
loope
sbbb
outsl
inc
mov
and
mov
ret
mov
shll
fnstsw
inc
loop
mov
shll
aam
lock
cmc
pop
mov
push
push
mov
cmp
aam
and
mov
push
sbb
inc
cld
mov
daa
jecxz
pop
pop
sar
push
aas
data16
enter
in
dec
sbb
dec
jne
lock
sub
mov
daa
sahf
xor
inc
repz
push
mov
xchg
cmp
in
xchg
xor
sub
orl
jp
repnz
pushf
fsub
shrb
cmp
cld
loop
adc
daa
mov
sub
lahf
jo
cltd
inc
fldl
add
jmp
aas
sbb
adc
adc
pop
and
mov
lcall
or
mov
dec
mov
jl
imul
cmpsl
fidivs
xchg
leave
dec
push
or
sub
mov
mov
repz
repnz
cmp
fcomip
fst
dec
inc
cs
aas
jecxz
push
dec
pop
dec
ds
stos
loopne
pop
icebp
iret
xchg
dec
mov
mov
pop
inc
mov
and
jecxz
fnstenv
mov
shrl
xchg
scas
ss
cmp
jg
lods
scas
call
or
mov
xorl
adc
inc
jae
add
xchg
jl
lret
ds
dec
jp
lahf
andl
les
daa
jmp
pop
movsl
les
sub
mov
movsb
adc
add
or
jo
fstl
mov
ja
dec
mov
or
xchg
sub
lods
rcr
lods
sub
xchg
imul
xor
sbb
push
or
aaa
test
stc
xchg
iret
push
sbb
mov
scas
pop
push
mov
je
outsb
push
pop
testb
mov
pop
arpl
mov
mov
hlt
popa
ljmp
xor
push
adc
frstor
sbb
outsl
pusha
rolb
adc
xor
sbb
or
popa
negl
adc
iret
push
pop
lcall
insl
jno
enter
in
inc
add
jno
xchg
test
pcmpeqw
push
pop
cs
push
xchg
das
rcl
movsl
or
mov
clc
imul
ficoms
sbb
sub
outsb
hlt
mov
mov
lret
adc
and
scas
mov
jmp
aas
or
arpl
jl
clc
inc
stc
fiaddl
or
add
int
inc
cmp
scas
inc
cli
mov
xchg
inc
das
sarl
das
mov
push
push
js,pt
loopne
and
rcll
in
daa
jo
jle
inc
clc
dec
xchg
pop
pushf
sbb
sub
cmp
dec
push
icebp
sub
imul
and
pop
pop
ret
xlat
sti
sub
jecxz
sub
stc
repnz
insl
ja
jecxz
push
outsb
jae
fsubs
cld
loop
loope
sub
jno
push
scas
push
mov
mov
das
xchg
inc
mov
adc
out
mov
sub
out
cmp
dec
add
out
dec
ret
pop
adc
enter
cmc
test
test
test
sbb
sub
cmp
mov
bound
orl
cltd
adc
imul
xor
fsubrl
adc
pop
mov
loop
inc
clc
jl
lcall
mov
jbe
std
or
mov
pop
adc
pop
cli
add
or
movsl
daa
and
imul
rcrb
push
scas
adc
stc
inc
and
jnp
push
inc
loopne
dec
push
and
push
rcll
mov
xchg
iret
loop
neg
lcall
test
dec
sbb
sti
xchg
jns
jg
jge
dec
into
dec
clc
icebp
and
xor
xchg
sbb
push
pop
jl
or
jb
clc
loope
out
dec
in
adc
mov
xor
add
sub
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
out
add
and
xlat
es
test
inc
inc
inc
pop
xor
push
clc
adc
ret
repnz
iret
lea
shlb
xchg
and
dec
xor
mov
jp
fadds
ljmp
scas
int3
arpl
or
and
jmp
insb
out
inc
test
xlat
jo
out
mov
mov
push
notb
fs
jnp
adc
mov
inc
mov
push
popa
out
sub
nop
mov
ffree
decb
and
fsts
mul
mov
and
lahf
adc
cli
mov
stos
in
push
lods
push
test
ficoms
dec
sub
add
les
stc
popa
push
jg
jg
test
push
inc
cmp
and
aaa
mov
xchg
adc
add
mov
adc
ss
enter
roll
testb
icebp
mov
faddl
mov
mov
add
pushf
je
add
or
aaa
repz
enter
imul
xchg
push
out
and
jno
push
xor
repnz
lahf
jmp
popa
out
dec
xchg
mov
repnz
xchg
cmpsb
sub
sbb
cmp
fnstcw
dec
aad
and
xchg
outsl
lock
sbb
mov
mov
daa
jmp
ffreep
sub
dec
fwait
xlat
mov
and
xchg
scas
or
jns
mov
popf
xchg
popf
add
scas
testb
fidivrs
mov
jae
shr
add
mov
sub
pusha
xchg
cmp
lcall
arpl
or
pushf
jl
push
in
push
je
out
nop
neg
stc
mov
add
pop
mov
call
xchg
ret
jmp
sub
mov
jmp
pop
adc
jmp
out
jno
orb
aam
mov
aas
shrb
jae
in
push
cmp
jecxz
or
sub
mov
into
in
stc
inc
sets
into
lods
loope
jae
push
test
call
xchg
xor
inc
stos
push
inc
dec
push
mov
mov
push
sub
loopne
push
pop
cwtl
cs
std
push
aam
mov
pop
cwtl
loopne
lret
in
push
ja
ds
lods
cmp
pop
sbb
call
fwait
sahf
cld
jnp
sub
fsubl
sbb
shlb
mov
mov
rep
push
xor
cli
xchg
data16
mov
adc
popa
or
and
or
fbstp
mov
leave
out
out
test
jp
lret
sar
inc
push
push
aas
loope
mov
mov
iret
add
mov
sbb
dec
call
es
int3
adc
dec
es
cmpsb
aam
cmp
sub
mov
imul
fwait
outsl
lods
loope
push
sbb
push
out
jmp
push
fistpll
js
add
ffree
mov
adc
pop
pop
or
imul
or
icebp
stc
and
mov
dec
in
iret
mov
push
test
jmp
into
leave
adc
gs
add
sbb
pop
adc
int
rcr
mov
xchg
sbb
pop
leave
fbstp
adc
outsl
dec
lret
lret
das
gs
and
sbbb
aam
loopne
loop
test
imul
adcl
lods
divb
fsubs
dec
adc
pop
insb
xchg
adc
push
jno
ljmp
sbb
out
mov
cmpsl
xor
or
out
std
xchg
stos
out
add
xor
outsb
dec
pop
sub
add
push
ss
shl
imul
lret
push
cwtl
jge
adc
scas
mov
mov
mov
sbb
sub
ja
test
out
daa
cmp
xchg
inc
jo
sbb
jns
repz
lcall
mov
jecxz
xor
push
jno
inc
or
mov
in
repnz
mov
cmp
dec
popf
aam
xchg
dec
inc
xchg
jbe
insl
mov
mov
mov
or
movsl
mov
or
js
cld
repz
xchg
mov
or
pop
fsub
call
inc
push
sbb
mov
in
jnp
fbld
cmp
out
mov
and
addl
or
stos
outsl
mov
es
pop
or
lods
ret
subb
loopne
pusha
stc
insl
jae
lcall
inc
lock
test
jnp
popf
es
add
xchg
jae
aas
mov
inc
xor
fmul
lret
lods
sarl
fwait
xlat
sub
es
dec
in
out
test
sbb
data16
pop
fldz
rolb
jne
out
ss
xchg
or
jle
cmc
xchg
sbb
std
mov
adc
test
ljmp
test
xorb
dec
lock
loope
inc
loopne
xchg
cmc
xor
push
push
sub
xor
out
push
stc
cltd
cmpsl
test
pop
iret
xchg
jnp
out
jp
sbb
cmp
mov
pop
jecxz
in
mov
dec
bound
ljmp
cmp
les
ret
and
sbb
mov
mov
icebp
xor
inc
jp
movsb
fstp
stos
fisttpl
mov
mov
push
lahf
je
loope
js
jne
sub
sub
add
scas
xor
icebp
adc
sti
andb
out
mov
dec
stc
add
jge
outsb
and
mov
stos
mov
or
hlt
jbe
sti
out
dec
sbb
xlat
fucomi
ret
rclb
adc
dec
fnstenv
ds
jnp
push
xchg
es
loop
out
sbb
or
jge
add
bound
mov
popf
sbb
in
movsl
popf
sbb
sbb
jmp
cwtl
pop
jecxz
xor
sahf
xchg
or
and
pxor
fdivrl
dec
jl
call
cmp
mov
jbe
push
bound
inc
or
cli
in
mov
xchg
jns
push
mov
or
push
cmpsb
mulb
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
jmp
inc
mov
mov
mov
adc
push
clc
adc
adc
roll
xchg
fldenv
sub
fs
jge
sub
repz
je
sbb
shll
mov
hlt
cltd
mov
into
push
lods
addr16
pop
mov
shll
xchg
xor
imul
mov
popf
fcmovne
inc
push
add
ret
lret
pop
sti
out
paddsw
fdivrs
pop
stos
pop
mov
lret
mov
pop
sarl
leave
xor
fbld
xor
testl
bnd
mov
pop
int
add
cmpsl
adc
cmp
pushf
dec
inc
sahf
arpl
scas
stc
imul
push
jbe
or
pop
push
lcall
sbb
stos
mov
hlt
xchg
sub
stos
ret
fsubrs
jno
push
and
fwait
ljmp
xor
push
jle
pusha
lret
mov
push
mov
lock
fcompl
mov
mov
fdivp
push
add
sti
fsubrp
daa
sbb
jnp
gs
or
ds
cld
add
jbe
mov
lds
mov
sub
xchg
arpl
fiaddl
stos
mov
mov
scas
xor
jg
fld
pop
stos
arpl
daa
fdivrs
lahf
sbb
cmp
sbb
imul
lods
bnd
push
lea
in
leave
leave
sti
aas
inc
or
test
mov
inc
mov
or
mov
subl
aam
push
or
out
push
or
iret
jmp
push
xchg
pushf
fs
out
sbbl
stos
add
aaa
rolb
sub
sbb
xor
testl
call
or
jmp
daa
fiadds
sbb
or
sbb
lods
pushf
xchg
lahf
mov
test
jp
fucomp
sbb
sub
pop
stos
jmp
arpl
push
js,pn
sub
std
and
sbb
push
pop
data16
xor
dec
test
in
adc
in
insb
scas
das
pop
and
push
les
pop
inc
and
pop
aam
sbb
pop
rolb
adc
mov
add
mov
xchg
or
adc
add
mov
lock
jmp
cwtl
inc
cmc
popf
dec
cltd
std
adcl
jb
mov
inc
mov
jnp
sbb
pop
xchg
fistps
ja
cmp
into
jmp
pop
or
sbb
ljmp
pop
or
daa
das
imul
movl
mov
sti
ljmp
daa
pop
jecxz
cmp
mov
xchg
jl
sub
cmp
loope
xor
orl
add
sbb
lea
ss
mov
sub
ret
jno
mov
pop
mov
add
in
std
jb
dec
or
ss
into
inc
movsb
ljmp
ljmp
inc
lock
stos
push
rolb
cmp
adc
mov
hlt
jae
insl
inc
addr16
xchg
cltd
das
pop
mov
movsb
xchg
add
xchg
sbb
adc
or
sbb
mov
sbb
add
inc
xchg
inc
insl
test
fisubrs
inc
push
rep
dec
sbb
xchg
sbb
popf
mov
shlb
dec
jb
mov
add
dec
data16
scas
add
int3
sbb
dec
mov
jno
aaa
stc
dec
ja
insb
pop
jae
dec
int3
sbb
leave
movsl
lret
dec
xchg
mov
jb
or
jae
aas
jns
mov
icebp
cmpsl
inc
out
and
sbb
mov
gs
mov
aas
cwtl
jno
jg
lea
mov
sbb
sub
adc
nop
lcall
loopne
fdivl
and
cs
and
inc
jno
pop
sub
inc
imul
nop
add
add
lods
jns
in
iret
std
test
fsub
inc
sub
loope
jecxz
add
mov
dec
xor
dec
xchg
repz
bound
inc
pusha
xchg
jb
ret
les
push
aad
sub
fucompp
xchg
fbld
push
inc
add
aaa
add
mov
ret
outsl
fsts
mov
push
daa
fcoml
inc
jmp
movb
gs
sbb
test
frstor
mov
and
sub
jge
scas
xchg
ret
sbb
pop
cmc
xor
mov
rolb
xchg
mov
mov
xchg
call
xchg
dec
mov
cmp
movsb
pusha
cmp
fwait
scas
out
roll
cld
jp
dec
cmpb
push
mul
icebp
adc
ss
addr16
idiv
lock
xorl
jge
push
mov
xchg
mov
lock
hlt
mov
jae
push
mov
xchg
imul
and
sbb
push
jecxz
lahf
outsb
test
jnp
pop
dec
mov
clc
cmp
sbb
mov
inc
lds
jmp
xchg
cmp
and
imull
push
mov
xchg
orb
fs
sub
leave
mov
push
rclb
dec
push
not
dec
lods
sub
aas
xlat
dec
stc
je
scas
push
sbb
sub
icebp
adc
dec
fs
cmp
mov
fistpll
pop
das
sahf
mov
shll
out
leave
orb
out
aam
mov
leave
cwtl
aam
mov
scas
push
and
stc
xor
mov
pop
mov
mov
int
leave
lock
aam
sub
xchg
lods
fistps
loopne
dec
jbe
ret
or
sti
xor
popf
cld
js
test
mov
pop
daa
enter
xchg
ja
and
push
pop
pop
daa
mov
or
add
sbb
and
stos
or
adc
inc
loope
movsb
aam
cmp
xlat
mov
bndstx
arpl
inc
xchg
xchg
pop
mov
movsl
and
pushf
jne
flds
mov
mov
and
jge
stc
mov
mov
sbb
fisubrs
push
mov
sahf
pushf
sbbb
les
pop
xchg
into
out
cld
fdivrl
adc
addr16
and
cmp
jae
lods
lock
adc
outsb
inc
loop
in
sbb
scas
dec
les
xchg
rorb
ret
or
cld
push
add
add
mov
sbb
dec
ss
inc
adc
push
clc
adc
fs
daa
es
adc
and
xchg
incl
cmp
out
inc
lds
incb
pushf
pop
jbe
sub
mov
xlat
daa
sub
int3
dec
fsubrp
hlt
mov
jecxz
mov
outsl
mov
dec
mov
pop
sbb
fisubs
dec
repz
sbb
mov
cmp
xchg
inc
lods
or
jge
pop
mov
aaa
sbb
mov
xchg
and
inc
dec
imull
and
std
mov
dec
sub
mul
and
mov
xor
cli
xchg
out
js
popl
rcrl
insb
dec
mov
jb
dec
inc
notl
inc
loop
mov
out
fsubrs
nop
arpl
mov
out
pop
mov
adc
push
add
mov
jl
mov
fidivrl
das
pop
mov
outsl
pop
mov
xor
sbb
nop
out
push
cmp
add
fnstsw
pop
movsb
mov
imul
rolb
cmp
ds
push
mov
mov
pusha
outsl
addr16
add
dec
popa
push
loope
jae
outsl
mov
or
pop
inc
pushf
int
xchg
outsl
imul
je
cmpsl
add
scas
cmp
dec
xchg
mov
add
decl
shl
std
jl
mov
dec
es
aad
cmpl
lret
adc
inc
aad
scas
inc
or
hlt
daa
push
movsb
mov
add
idivl
repz
cmp
sub
movsl
int3
add
sub
cwtl
push
mov
ss
outsb
cmp
mov
inc
jo
and
push
sub
jmp
clc
rcll
mov
insl
mov
push
mov
fsubs
or
jl
popa
mov
add
jp
xchg
dec
js
pop
xchg
jb
cmp
sub
out
xor
subl
in
ljmp
mov
nop
add
test
imul
pop
add
jp
push
pop
mov
adc
ss
mov
sbb
mov
sub
mov
add
int3
fisttpl
aas
fcmovbe
addr16
in
rcl
adc
lods
mov
out
or
lcall
jnp
insb
repz
add
into
xor
mov
push
jno
ljmp
ljmp
loop
fs
xchg
or
ret
aam
jmp
scas
sbb
mov
mov
je
fmull
pop
pop
mov
mov
xchg
cmp
and
jle
pusha
adc
stos
jnp
les
xor
jge
scas
and
xor
dec
pop
sarl
cltd
push
pop
sub
mov
je
push
fsub
lds
fs
cltd
sub
mov
leave
xchg
lcall
xor
cltd
adc
rclb
int3
int
imul
mov
inc
fcmovu
push
inc
mov
push
loopnew
es
pop
scas
xchg
add
ffree
or
cmp
call
data16
in
cmpsb
out
cld
outsb
mov
dec
push
fsubrs
mov
sbb
sahf
ss
mov
push
pop
outsb
stos
sbb
mov
jmp
add
loope
dec
lret
xchg
and
loopne
ja
cld
and
push
jne
cmp
xor
cltd
repnz
out
mov
sub
inc
enter
sub
and
push
out
out
adc
mov
lcall
das
in
inc
mov
setns
fildl
pop
lcall
inc
orl
inc
in
out
dec
insl
cmp
inc
insb
mov
daa
mov
bound
movsl
mov
pop
dec
jne
xchg
icebp
adc
aas
jg
fcompl
lock
movsb
xor
mov
jns
add
cmpsb
inc
cld
lahf
jno
pand
jbe
xchg
add
push
and
inc
outsb
cli
pop
and
outsb
insb
jne
lahf
cwtl
sub
mov
sbbl
mov
xchg
mov
addl
cs
sub
ds
add
stc
clc
push
push
add
xor
xchg
adc
add
xor
or
sbb
mov
dec
adc
setnp
jmp
imul
cmp
sub
xor
dec
sub
int
fmuls
push
lods
daa
and
push
and
cltd
xchg
mov
push
jno
ror
inc
mov
dec
sbb
jno
out
cld
addr16
xchg
scas
cmpsl
pop
inc
add
shll
ret
movsl
jno
jecxz
cmp
sbb
mov
push
rolb
sub
stos
in
mov
push
push
addr16
data16
loopne
sahf
mov
inc
jle
jmp
addr16
test
loopne
or
lock
sbb
fcoml
mov
test
std
push
cmpsl
pop
test
mov
pop
cld
loopne
pop
aaa
jle
loop
popf
shrl
add
lcall
in
cmp
jbe
nop
inc
mov
pop
lea
xchg
dec
xchg
call
mov
adc
inc
decl
mov
in
and
test
mov
mov
lods
push
test
test
je
leave
cli
inc
cmpsb
and
out
pop
sbb
inc
in
fs
arpl
fstps
out
cmp
mov
mov
mov
xor
jmp
jge
jge
fsubrl
cmp
repnz
lahf
stc
test
jns
mov
addr16
gs
adc
lds
xchg
pop
in
inc
arpl
int3
inc
test
fildl
mov
mov
es
enter
cmpsl
pushf
or
jnp
push
movsl
xchg
stos
mov
push
and
and
dec
cmp
iret
cmc
jp
lock
pop
repz
mov
lahf
pushf
loopne
xor
mov
mov
jp
push
cmp
cmp
inc
jo
dec
and
jne
sbbl
rcrb
dec
jb
pop
into
add
int3
int
mov
xor
int3
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
fs
xor
push
fs
fisubrs
adc
adc
push
clc
adc
jp
roll
xor
or
aas
loop
adc
cmp
xchg
sub
pop
xchg
push
jnp
xor
js
insb
jecxz
xor
jge
scas
rclb
cld
stos
cmc
jge
jecxz
sti
sbb
sbb
popa
pop
ja
sub
mov
lret
push
sbb
xchg
dec
mov
sbb
xlat
and
std
insb
inc
push
cmp
rcll
cwtl
ljmp
and
push
pop
mov
pusha
lods
inc
jb
loop
out
fildl
push
es
stc
mov
sub
lahf
les
lds
mov
jp
push
sub
push
xchg
add
xor
lret
cmp
lret
nop
jle
push
xor
icebp
sti
push
pop
pop
dec
imul
out
cmp
cli
push
mov
mov
mov
into
add
pop
cs
dec
popf
mov
pop
fsubrs
push
faddp
lock
iret
or
hlt
push
imul
cltd
cmp
sbb
movsl
inc
mov
mov
fs
into
dec
cwtl
and
mov
movsl
xor
movsl
outsb
jl
cmp
addr16
adc
rcrb
push
fisttpll
insb
jg
inc
jb
outsl
loope
pop
adc
adc
outsl
push
xor
out
pop
popa
insl
fists
ja
mov
aaa
jo
mov
cli
outsl
xor
sbb
pop
ret
addr16
cld
lcall
out
movsl
rorb
les
pop
cmc
bound
daa
or
pop
in
dec
jbe
test
xorl
aam
sub
dec
mov
mov
inc
mov
aaa
dec
hlt
sub
cmpsl
xchg
in
mov
xchg
and
mov
fsubrl
out
int3
inc
shll
test
mov
movsl
arpl
inc
add
lods
xchg
loop
mov
xor
cmp
mov
pop
aad
mov
js
xlat
into
stos
test
mov
movsl
push
shlb
fwait
jmp
and
and
pop
jno
scas
xchg
dec
cltd
pop
rcll
je
lods
add
inc
sbb
in
aad
xor
ljmp
cmp
jmp
or
or
movsb
mov
adc
jge
mov
lea
jge
lods
push
jne
movsb
mov
lods
xchg
jmp
mov
jnp
adc
xor
cltd
xchg
and
je
test
std
stos
subw
add
push
dec
mov
scas
jge
sub
inc
dec
adc
mov
jae
scas
xor
dec
js
gs
bound
test
js
repz
xchg
mov
stos
test
push
sbb
cltd
jl
out
sbb
js
adc
cmc
xor
adc
cmp
movsb
push
jnp
outsl
fdivl
roll
insl
insb
push
inc
les
mov
and
adc
xor
ja
lret
filds
push
jo
pop
xchg
jge
cmp
push
arpl
mov
push
popf
xchg
push
jle
inc
jmp
xor
xor
fcoms
jmp
push
mov
inc
sub
add
push
scas
sbb
push
sbbl
inc
cmp
loopw
imul
sub
cmpb
cli
cmp
push
push
jo
adc
sbb
lods
and
in
les
xchg
xor
data16
data16
iret
pop
dec
mov
and
sarl
add
mov
fcoms
inc
bnd
aas
cmp
jo
adc
and
stos
test
adc
stc
mov
push
xchg
and
jl
sub
inc
mov
cmp
cmp
dec
jns
mov
mov
sbb
dec
and
jns
mov
movsb
popf
push
xchg
test
loopne
mov
dec
aas
pop
xchg
add
out
add
cs
inc
shll
insb
ds
dec
test
fidivs
enter
mov
std
rcrl
rcrb
lsl
cmp
ja
or
sub
mov
fstl
sti
adc
jle
jmp
pop
or
inc
dec
and
in
les
je
mov
or
stos
int3
inc
aad
or
jmp
stc
pop
xchg
sbb
push
pop
mov
pop
jnp
sbb
out
dec
mov
stc
icebp
scas
stos
jge
outsb
mov
les
fisttpll
push
lods
inc
cmc
jg
test
cli
fwait
sub
push
xchg
adc
adc
jb
orb
adcl
jne
orl
fistps
push
mov
mov
lcall
push
rcrb
pop
jno
and
push
leave
es
sarl
mov
pop
lds
and
pop
xor
adcl
loope
fistpll
jo
adc
int
xchg
or
stos
push
xlat
mov
lea
cmp
sar
rcr
stc
lahf
flds
dec
test
lods
das
sub
adc
cltd
jg
sub
test
lock
push
bound
jge
add
inc
das
mov
cs
sub
jg
jle,pt
mov
jmp
mov
lahf
lea
dec
lret
push
stc
lret
aam
ret
or
sub
xchg
mov
subl
mov
sub
addl
mov
sti
and
xor
fstps
push
sub
cmp
pcmpeqb
outsb
je
mov
outsl
pop
les
or
in
add
xchg
push
das
lods
mov
sbb
xchg
aas
test
jmp
in
cmp
out
adc
test
cmp
xchg
mov
cltd
xor
in
inc
icebp
ret
clc
adc
push
pop
jno
stos
inc
ljmp
dec
clc
popf
inc
and
or
xchg
lds
das
fwait
xor
mov
push
xor
mov
imul
dec
adc
int
lds
aas
scas
aam
dec
in
lods
enter
add
in
loope
mov
xor
xor
or
mov
mov
or
mov
jmp
rcr
out
xchg
xchg
push
inc
es
nop
hlt
and
adc
push
clc
adc
inc
inc
in
xchg
cmp
push
mov
sbb
sbb
mov
dec
and
or
mov
add
data16
das
mov
shlb
xchg
lret
or
aas
cld
rolb
sub
pop
lahf
mov
popa
fisttpl
nop
xchg
test
dec
push
mov
lea
pop
aad
rcl
push
fistpll
adc
push
or
mov
jecxz
insb
sbb
dec
sbb
inc
jnp
pop
sahf
push
mov
push
inc
dec
jge
mov
jne
in
dec
and
jle
mov
pop
pop
iret
mov
xchg
pop
outsl
imull
adc
push
lock
test
xchg
mov
paddsw
mov
stos
jg
add
add
push
add
mov
ret
pop
repz
xchg
or
adc
add
iret
les
rol
fistpll
sub
jmp
fbstp
outsb
xor
iret
and
cmpsb
adc
lret
or
jge
ret
add
popa
mov
mov
pop
fisttps
add
test
in
insb
cmp
dec
jne
xchg
stos
dec
xchg
sub
fnsave
add
push
push
inc
std
xchg
pop
adc
xchg
mov
add
jmp
and
xchg
test
sbb
cmpsb
arpl
and
bound
sarl
fisubs
fwait
mov
sti
pop
push
cltd
ret
xchg
vmovaps
hlt
and
dec
mov
jmp
or
xor
ljmp
jl
and
cmp
xor
repz
insb
and
test
xor
push
lods
pop
testb
xchg
dec
add
mov
mulb
jb
xor
cmp
cmp
mov
mov
loopne
std
mov
adc
sub
push
adc
in
and
jae
outsb
xchg
add
adcb
lret
js
push
xorl
xlat
std
mov
mov
pop
out
int
push
mov
pop
std
fwait
int3
lret
inc
cmp
lcall
fsubl
test
test
dec
faddl
lahf
ss
out
add
sbb
jecxz
aam
adc
cmp
add
xorb
adc
pop
push
sbb
das
dec
mov
xchg
push
and
and
and
fnstcw
xchg
mov
int3
mov
inc
std
ljmp
jae
sub
cmc
and
mov
mov
inc
dec
popa
lahf
xor
add
cmp
cwtl
cmp
ret
addl
rcrl
push
sub
aaa
out
scas
jg
cmpsl
ss
push
add
inc
fucomip
fisttpl
sti
sub
pop
xchg
pop
xor
mov
stc
pop
divb
ja
mov
out
mov
sub
shlb
mov
fstps
lret
fdivrl
mov
dec
ja
push
addr16
dec
xchg
shlb
test
cmp
mov
sub
xchg
or
or
repz
lods
inc
xchg
and
fidivrs
push
dec
loopne
sbb
jno
adc
and
or
sub
push
sbb
xchg
fisubl
add
fstl
xor
mov
push
mov
push
rcr
andb
jo
sub
icebp
lods
inc
loop
lea
in
add
xor
cmp
or
lds
ret
ret
and
shl
fnstsw
aam
int3
orb
incb
ljmp
xor
pop
divl
mov
ja
fscale
or
fwait
insb
push
jb
aam
lea
sub
xor
loopne
xor
jae
jnp
bound
jbe
stos
xor
xchg
fwait
jg
sbb
add
daa
sub
push
das
or
arpl
mov
loope
stos
inc
std
out
xor
mov
in
test
xor
mov
mov
sarb
dec
repz
movsb
dec
push
cmp
ret
outsl
or
xchg
test
fidivl
inc
xlat
call
scas
or
arpl
fadds
lret
mov
scas
adc
cmpsl
hlt
test
sbb
int3
aaa
and
or
or
dec
inc
jae
or
rol
shl
cmp
mov
dec
jo
lret
sub
andl
lock
mov
addr16
dec
aam
add
jg,pt
sbb
rol
dec
cmp
stc
pushf
idiv
js
cmp
fisttpll
cmc
out
fimuls
fcompl
pop
jnp
or
test
jle
shl
sub
sub
dec
out
sub
cmovbe
test
dec
push
mov
jb
imul
mov
adc
dec
arpl
das
shrl
push
test
jne
jbe
mov
add
mov
sub
xchg
inc
inc
mov
outsb
shl
add
sahf
test
push
inc
add
mov
fwait
cmp
mov
mov
test
lahf
dec
out
mull
mov
inc
ds
and
addr16
aam
ret
sbb
insb
out
int
test
cwtl
dec
mov
jnp
mov
xor
pop
pop
cmpsl
pop
xchg
push
jo
dec
lret
pushf
pop
dec
int3
into
rep
jmp
scas
sub
aam
loope
xchg
sub
lds
lcall
pop
adc
mov
mov
daa
std
jae
das
int
out
jmp
mov
in
push
xchg
repz
add
gs
repz
xchg
lahf
sbb
xor
xor
dec
out
fstps
or
das
clc
jg
jae
div
rcrb
xchg
lea
out
fs
jp
cmc
pusha
call
stos
aaa
cmc
mov
sub
fs
out
addr16
mov
inc
pusha
pop
pop
sbb
cwtl
jbe
iret
jp
xchg
push
dec
mov
sub
outsb
lahf
cmp
jbe
dec
fimuls
arpl
leave
lods
shrb
outsb
sub
mov
and
push
and
rcr
mov
jl
aaa
sbb
sub
mov
lret
mov
js
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
add
xchg
rorb
adc
add
adc
negl
enter
sbb
sub
mov
adc
pop
inc
movsl
in
aaa
sahf
xchg
xor
mov
xchg
adc
fbld
ret
fwait
push
cwtl
ret
xchg
int3
pop
mov
mov
imul
mov
in
add
nop
into
inc
xchg
inc
fsubrs
mov
stos
out
xchg
push
or
sarb
stos
mov
sbbb
int
aam
or
xchg
repz
mov
in
jmp
idivb
pop
das
xor
js
shlb
or
repnz
or
mov
sbbl
mov
push
insb
repnz
and
lret
sbb
ds
test
outsl
pop
fidivs
push
rol
clc
aam
jae
or
mov
jne
cmp
jl
sbb
mov
popf
nop
ljmp
and
cmp
and
inc
push
lret
xchg
or
inc
sahf
jge
jg
pop
in
cmpb
sub
push
cwtl
dec
aad
fldt
adc
ljmp
jle
or
adc
fisubs
pop
pop
mov
repnz
xlat
and
cmp
jns
movsl
push
xchg
inc
test
icebp
icebp
dec
jae
es
cltd
scas
adc
enter
and
adc
jg
sub
pusha
fmuls
rcrl
xchg
enter
dec
out
xor
orl
inc
popa
push
loope
mov
fcomps
xlat
nop
jo
je
mov
or
and
push
lret
cmovo
push
hlt
xchg
inc
mov
adc
sbb
pop
ss
enter
ret
cmpsl
icebp
or
xor
and
inc
adc
mov
imul
xchg
into
push
leave
fidivl
pop
aaa
out
icebp
addr16
adc
sbb
xor
aas
mov
push
loope
fxch
ljmp
cs
jg
loop
pop
arpl
adc
mov
push
in
add
cmp
es
mov
push
cmpsl
xor
adc
sahf
jo
mov
out
daa
sub
icebp
sbb
jmp
ljmp
rolb
mov
fimuls
popa
daa
inc
mov
dec
push
mov
clc
leave
jp
aam
jne
mov
lods
lea
data16
ljmp
addr16
cmp
mov
cld
add
xchg
fisubs
rol
imul
loopne
loopne
add
push
xchg
test
mov
inc
sub
mov
sub
jae
push
mov
dec
dec
bndstx
shr
movsl
sub
fidivrs
cmp
test
pop
xchg
ds
and
mov
push
mov
push
xor
mov
imul
out
loop
fcmove
mov
stos
xor
xor
inc
ss
data16
inc
mov
mov
or
scas
test
sub
aad
dec
out
in
mov
test
fisttps
adc
adc
cmp
outsl
jb
add
inc
aaa
std
or
cmc
mov
ja
xorl
cmp
jmp
sub
cwtl
in
shll
and
ficoml
or
sbb
lcall
arpl
adc
mov
pop
dec
shlb
mov
imul
cmp
adc
mov
cwtl
pushf
scas
add
sbb
sub
icebp
sub
mov
data16
loopne
negl
xchg
rorl
adc
aas
xor
lret
fldlg2
das
or
lret
pop
push
mov
cmp
push
cmp
mov
sar
sbb
fs
mov
arpl
shrb
popa
inc
pop
insb
push
or
dec
fwait
pop
sbb
xchg
or
lods
out
lcall
mov
dec
lret
test
rolb
sbb
and
cmp
and
dec
bound
xchg
dec
ret
push
add
xchg
push
inc
ret
jl
movsl
stos
cmp
dec
lret
jl
jl
jp
cmp
sub
test
sbb
and
inc
bound
dec
xchg
adcb
in
loope
enter
sbb
pushf
cld
dec
xlat
stos
pop
or
iret
in
pusha
jae
imul
and
fbld
mov
sbb
sub
outsl
outsb
jns
iret
nop
ret
sbb
and
movsl
push
dec
and
add
xchg
out
xor
jl
int
enter
aad
cwtl
repz
fmuls
cmp
cmpsl
push
push
int
cwtl
addl
inc
icebp
fidivrs
iret
pop
mov
bts
mov
aaa
inc
inc
in
jno
aam
or
cmpsl
cmpsb
jnp
adc
lods
data16
cmp
and
ljmp
inc
sub
xchg
mov
das
pop
lret
aaa
scas
jne,pn
mull
mov
and
mov
js
js
fildll
mov
inc
sbb
fiaddl
lods
inc
sub
xchg
or
aaa
pop
inc
rol
push
in
dec
cmp
fwait
cli
fcmovnb
mov
stos
pop
outsb
add
shll
xchg
jle
movsl
xorl
jo
stc
cwtl
xor
xchg
sbb
shrb
xlat
in
das
test
loop
and
in
jmp
ja
cmp
xor
stc
xchg
jnp
fstp
jo
cmp
stos
sbb
and
jecxz
sbb
les
jno
push
gs
cmpsl
aam
int3
push
movsl
inc
jge
nop
xor
imul
pushf
sbb
mov
sub
xchg
jp
scas
loop,pn
mov
cmpsb
ds
icebp
add
add
stos
or
stos
in
jno
leave
push
mov
adc
add
and
mov
adc
sbb
sub
pop
jae
jl
mov
jmp
es
hlt
push
pop
push
push
out
fsubl
pusha
xor
sahf
cs
lock
cwtl
sbb
data16
fldenv
xor
les
lods
xchg
jg
dec
and
int
rorb
ret
add
mov
mov
shrd
jmp
aaa
aas
lods
and
andb
add
adc
push
clc
adc
pop
jge
sti
pop
mov
xor
cmp
lcall
scas
and
xor
rol
fs
push
xchg
mov
xchg
sti
fcmovnbe
push
xorl
in
ret
int
shr
imul
imul
xchg
xor
push
sub
stc
test
sbb
popa
add
ret
ret
mov
je
stos
js
push
ret
inc
xchg
lock
mov
pop
roll
int
adc
fldt
fstpt
lret
imul
push
adc
mov
stos
cmp
mov
xchg
cmp
lods
mov
inc
xor
mov
adc
movsl
push
mov
xchg
inc
mov
subb
jmp
into
fnsave
mov
scas
push
sub
push
adc
je
inc
sub
mov
inc
cs
dec
or
mov
movsl
test
nop
mov
insb
sbb
movsl
adcl
inc
scas
cld
daa
shlb
dec
sbb
jl
cltd
or
cs
fdivrs
cltd
rcrb
jle
stos
in
imul
mov
in
ret
inc
adc
mov
push
out
push
lods
daa
int3
nop
pop
jbe
dec
fisubs
out
adc
les
stos
adc
leave
or
addr16
das
in
loopne
jmp
data16
push
mov
out
jle
or
pop
out
ret
arpl
addr16
pop
sbb
aaa
dec
pop
lods
leave
lods
ret
push
dec
icebp
mov
les
sbb
insl
ficompl
or
push
push
mov
lret
es
out
ljmp
mov
sbb
xor
loope
pop
adc
pusha
xor
mov
xor
test
xor
push
mov
jge
xor
in
lods
add
push
fstl
push
dec
mov
jg
insl
push
jo
pop
xchg
or
mov
sub
or
jge
das
xlat
call
sahf
or
mov
cmp
in
jb
cmc
inc
xchg
inc
adc
scas
adc
and
test
lods
and
xchg
adc
pushf
enter
fsubs
jae
add
sub
outsl
dec
popf
stc
mov
decl
mov
sbb
out
push
movsb
cli
and
lret
jg
mov
es
shlb
shr
mov
adc
mov
sarl
xor
movsb
xchg
es
jne
lahf
data16
mov
stos
popf
outsb
mov
pop
add
push
imull
xor
sbb
hlt
inc
and
movsl
adc
mov
orl
out
pop
movsl
lods
push
or
dec
fdivl
mov
inc
scas
inc
sub
pop
and
mov
sbb
jb
dec
sahf
inc
pop
jne
fldenv
mov
popa
fwait
rcrb
add
adc
comiss
loope,pt
jbe
or
shlb
jne
mov
jle
in
test
sbb
cmp
int3
sbbl
loop
sub
mov
push
leave
mov
jbe
mov
dec
cmp
add
dec
mov
adcl
add
fldt
jo
int3
test
cwtl
dec
mov
cwtl
daa
xchg
inc
es
jmp
add
jb
cld
inc
fwait
mov
pop
pop
mov
enter
test
lahf
mov
popa
icebp
push
cs
cli
mov
xchg
scas
pop
fidivrl
mov
aad
xlat
or
stos
mov
dec
dec
xor
icebp
fisttps
lahf
jo
mov
movsl
pop
mov
pop
xchg
sbb
mov
sbb
or
mov
cmp
sbb
jecxz
pop
mov
inc
icebp
jp
addr16
pop
pop
xchg
es
sahf
mov
inc
repnz
loope
jmp
xchg
cmp
jp
sub
int3
int
inc
test
push
push
mov
jo
dec
in
or
inc
dec
nop
adc
cltd
loop
and
pop
cs
mul
dec
pop
repnz
sub
loopne
mov
lods
adc
push
cmc
fimull
lock
rcrb
sub
insl
enter
sti
push
inc
rcrl
sub
call
out
aad
es
push
insl
xor
mov
jbe
je
mov
inc
pusha
addl
xchg
sbb
push
pop
test
sub
push
lock
mov
inc
addr16
sub
stc
inc
adc
out
js
scas
pushf
pop
mov
aas
mov
adc
xor
and
movsl
repnz
fisubrs
jmp
into
fs
mov
xchg
lret
fstps
dec
movsl
push
sub
adc
outsb
jne
repnz
sub
add
cltd
aam
test
dec
nop
into
repz
sbb
or
test
and
push
jne
lret
and
in
cmp
cmpsb
push
and
es
loopne
mov
mov
inc
jb
adc
adc
mov
test
sbb
add
ljmp
outsb
loopne
sub
sub
out
adcb
imull
ret
repnz
push
je
sbb
lahf
clc
mov
xchg
ss
mov
adc
sub
and
adc
sub
aam
mov
lcall
loopne
sbb
inc
aas
mov
jb
loope
mov
xorb
xor
or
xlat
leave
inc
cmp
movsb
out
mov
pushf
pop
dec
xor
mov
roll
test
inc
test
js
bound
fimuls
xchg
ja
mov
jne
pop
mov
jl
out
outsb
ja
mov
pop
mov
push
or
repnz
mov
jae
push
sbb
ss
lds
sub
rorl
adc
addl
je
movsb
ret
inc
mov
gs
lahf
inc
and
xchg
xor
orb
push
push
sbb
lea
dec
or
pushf
or
push
icebp
jle
negb
push
and
sub
xchg
ds
insl
push
and
jmp
insl
stos
xchg
std
mov
jo
dec
movsl
in
addr16
jmp
or
pop
dec
mov
or
jmp
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
jmp
dec
jmp
dec
xchg
and
mov
push
notb
adc
clc
adc
cli
mov
add
out
xchg
lods
adc
add
loopne
xlat
sub
mov
out
movsb
movsb
notl
imul
cmp
and
mov
jmp
pusha
sbbl
rolb
push
ds
jmp
mov
or
fidivrs
adc
and
ja
les
mov
inc
xchg
dec
push
sub
xchg
mov
xor
xor
int
sub
ds
bound
les
imul
adc
mov
sbb
out
push
add
aam
push
test
dec
ret
insl
insl
stc
fistpll
shrb
insl
or
jo
fldcw
arpl
xchg
leave
or
shll
fldt
aam
fs
inc
nop
mov
jmp
sub
out
push
or
xor
mov
push
ds
adc
sbb
mov
nop
subb
std
mov
in
sub
dec
add
dec
shrl
push
arpl
dec
mov
daa
out
xlat
movsb
daa
mov
rcl
popf
orl
inc
andb
mov
ret
stc
cli
nop
sbb
fistpl
fs
scas
out
xor
lea
mov
sub
mov
push
add
mov
or
and
dec
xorl
mov
or
arpl
test
xchg
movsl
mov
jnp
aam
insb
mov
fisubrs
rorb
sbb
js
arpl
inc
fs
xor
outsb
rorb
jb
sbb
xor
pop
fimull
in
mov
ffree
and
es
jb
push
mov
jecxz
push
fs
mov
inc
aaa
hlt
iret
push
stc
les
ljmp
push
in
xchg
xchg
xchg
mov
js
and
inc
mov
rcll
sub
xlat
lock
mov
test
lcall
mov
pushw
hlt
cmp
stc
push
push
lret
cmp
dec
xor
scas
pop
cmc
sbbb
inc
cs
add
lcall
jmp
mov
idivl
mov
lods
mov
xor
dec
test
add
push
push
mov
xchg
in
adc
idivl
loopne
or
mov
ret
sar
xor
jmp
and
cwtl
push
das
dec
mov
jle
cli
shl
push
ret
aad
inc
mov
jmp
mov
xchg
in
mov
jno
shlb
ss
rcll
dec
jle
sahf
sub
and
jecxz
jbe
int
xchg
test
repz
pop
lcall
dec
sub
pop
cmp
sub
mov
xchg
inc
inc
lret
mov
pop
jo
ret
or
cli
push
lret
aad
outsb
adc
pop
dec
push
pop
mov
push
in
dec
cltd
and
jae
inc
movsl
jl
inc
imul
shr
pop
popa
int
xchg
out
sbb
sbb
in
add
mov
xor
or
ss
lcall
jmp
addr16
xchg
and
or
es
jp
hlt
dec
roll
rolb
sahf
ret
xor
add
aam
ds
push
ret
mov
sub
arpl
mov
inc
jmp
lods
es
fists
into
ret
mov
mov
mov
icebp
out
std
mov
xlat
and
insb
scas
pusha
pop
mov
add
imul
dec
jae
ret
addr16
cmp
fcmovnu
pop
xor
mov
out
push
inc
ds
repnz
outsl
lret
andl
fsts
pop
xchg
jbe
movb
cmp
jae
inc
mov
mov
mov
int3
out
insb
push
cli
or
insb
jp
test
cmpsb
push
cli
into
pop
dec
scas
mulps
pop
jno
cmpsl
or
add
fmull
inc
stos
pop
inc
gs
push
mov
mov
lret
sbb
leave
dec
repz
std
jl
sbb
lea
xor
popa
popa
sbb
pop
movsl
imul
jb
cwtl
fidivrs
shrb
inc
aaa
movb
inc
sbb
sbb
loope
xchg
cmpsl
jnp
jns
sarb
ja
pop
sub
adc
mov
mov
mov
jbe
bound
cltd
in
cld
dec
lods
leave
inc
test
outsl
dec
aaa
inc
andb
daa
clc
jne
in
push
and
cmp
mov
dec
xchg
mov
xor
jecxz
jbe
jb
loope
pop
fwait
sbb
or
sub
add
mov
icebp
adc
repnz
adc
das
ret
loope
loop
imul
push
and
or
daa
stos
lret
pop
adc
sbb
ljmp
and
ds
stc
js
imul
fwait
mov
jo
mov
nop
adc
jb
cltd
movsb
or
push
xchg
stos
dec
scas
adc
sub
test
or
and
mov
adc
lret
push
inc
inc
push
adc
pop
and
in
fistps
outsb
xchg
lret
outsl
outsb
ret
ds
ret
mov
imul
sbb
mov
test
xlat
and
mov
adc
xor
sahf
popa
adc
push
test
imul
cmpsb
pop
cmp
lods
push
mov
add
out
gs
pop
mov
sub
jle
lret
lret
mov
inc
mov
xchg
pop
test
sub
lds
pusha
insl
lret
sub
push
jb
lods
or
js
in
inc
cmpsb
lret
push
mov
in
lcall
cmp
cmp
mov
push
scas
adc
dec
pop
mov
inc
dec
cmp
aaa
mov
mov
mov
xchg
daa
mov
int3
and
fdivl
push
in
mov
sub
push
pusha
adc
push
pop
push
push
scas
int3
mov
test
js
xor
mov
shl
mov
shrd
shr
mov
mov
jmp
pop
inc
inc
mov
aas
push
sbb
mov
cmc
adc
push
clc
adc
adc
ret
add
add
pop
lea
lret
xor
fldln2
lret
sbb
ss
ja
dec
inc
pushf
and
cltd
mov
mov
fldt
adc
mov
jns
pop
or
jne
xor
jp
inc
pusha
das
test
shrd
mov
cmpsb
sarb
sbb
ljmp
sahf
icebp
xor
pop
mov
push
xchg
mov
sbb
fldl
lods
repz
ret
test
push
movb
mov
imull
iret
mov
add
insb
ja
testl
pop
push
push
icebp
pop
mov
sbbb
adc
int3
dec
sbb
inc
xor
add
mov
icebp
sti
inc
add
push
hlt
xor
inc
test
fadd
bound
stos
jl
jnp
cmp
mov
push
jno
fdivr
dec
cmp
out
int3
std
ds
sbb
or
lret
fisubs
jbe
add
rclb
sbbl
add
jnp
stos
stos
leave
xchg
inc
adc
pop
xchg
loop
nop
mov
ss
das
jp
push
sub
pop
sbb
jns
outsl
aaa
xor
cmc
jle
jae
ret
addl
sub
bound
mov
and
mov
mov
test
pop
lret
nop
push
cmc
es
sar
xchg
jne
sbb
hlt
arpl
push
add
jmp
push
dec
cmp
xchg
sub
cmp
test
stos
mov
dec
jmp
clc
outsb
orb
sbb
fwait
mov
adc
mov
in
xchg
mov
scas
add
repnz
pop
xor
add
mov
sub
movsb
mov
jnp
push
or
xor
lods
mov
push
xor
and
scas
dec
xchg
in
cmp
push
scas
mov
and
sub
enter
mov
insl
dec
gs
je
pop
hlt
int3
mov
test
dec
push
push
sbb
xchg
addl
sub
dec
dec
incl
arpl
jnp
filds
sub
xor
or
inc
stos
or
adc
xchg
jb
and
in
les
cmc
mov
call
imul
jle
outsl
xchg
roll
inc
push
imul
pop
mov
pop
cmp
mov
sub
push
xor
sub
mov
sbb
adc
mov
fnstsw
xchg
dec
jne
mov
adc
iret
jo
shll
xor
push
xchg
and
rorb
sahf
and
inc
add
jo
shrb
adc
js
leave
push
lods
adc
dec
dec
xchg
inc
arpl
inc
icebp
sbb
mov
mov
dec
aaa
enter
dec
dec
mov
scas
pop
js
mov
imul
stos
mov
cs
movsb
push
inc
repnz
add
test
mov
push
sbb
mov
jne
loope
mov
or
sbbb
test
ror
mov
mov
mov
mov
xchg
xor
cmp
repz
adc
xchg
dec
inc
lret
and
movsb
jbe
pop
push
jmp
jno
xor
outsb
shrb
or
ljmp
xchg
dec
sbb
outsl
sub
xchg
iret
out
inc
xor
xor
js
push
addb
mov
add
aaa
and
lds
repnz
push
in
jle
mov
lds
pop
out
inc
adc
loopne
cmp
aad
add
ret
xlat
outsl
popf
mov
mov
push
cli
jbe
jp
call
inc
sbb
leave
push
sbb
push
ret
pop
mov
mov
mov
js
movsb
sbb
addb
pusha
xlat
inc
shlb
jp
sbb
fmulp
vshufps
sub
cmp
jbe
pusha
mov
xchg
and
sub
cwtl
push
shrl
cmp
xor
fiadds
sarl
pop
cli
fcomps
cmpsl
cmpl
mov
xor
fstpl
mov
jecxz
jbe
into
sub
outsl
mov
xor
ja
pop
mulb
in
mov
gs
cmp
imul
data16
jle
icebp
push
fisttpl
or
mov
cmpl
inc
push
sub
shr
pushf
int
jnp
mov
inc
shrl
into
jo
aas
pop
adc
js
pop
dec
xadd
enter
mov
push
repnz
push
fs
sbb
add
in
enter
mov
fwait
hlt
test
fdivrl
icebp
insb
xor
push
aam
pop
arpl
and
cld
xchg
jmp
jmp
repz
stos
mov
cmp
fists
inc
xchg
xor
pop
or
and
gs
fidivs
push
pop
sub
bound
mov
inc
inc
cmpb
cmp
pop
sbb
sbb
mov
adc
push
stos
fmuls
fsubs
orb
cmpsb
pop
jnp
hlt
testb
ret
popf
sub
mov
and
add
aaa
sahf
add
cli
lods
test
cmpsl
inc
inc
repz
movl
sub
stos
mov
mov
js
daa
mov
sub
addr16
adc
pusha
jecxz
mov
mov
stos
aad
fisttps
sbb
cmp
fs
push
lcall
mov
dec
pop
or
cmp
test
rolb
mov
mov
cld
mov
out
mov
sarl
add
push
xor
call
pop
imul
and
jo
aaa
inc
adc
movhlps
inc
xlat
les
jo
in
jns
mov
add
pop
test
mov
mov
mov
cmp
cmc
or
imul
sbb
adc
push
sbb
ss
jb
test
cmp
cmp
mov
aas
or
ljmp
loope
cmpsl
rcr
loopne
sti
dec
std
dec
mov
adc
sbb
gs
xor
or
mov
shl
jmp
push
xchg
push
pop
push
es
adc
loop
xchg
out
adc
clc
adc
in
cltd
mov
add
adc
inc
and
stos
push
pop
ret
scas
fs
push
push
outsl
mov
shll
leave
push
scas
lcall
mov
xchg
mov
sub
fistps
pop
dec
push
loop
pop
fcomip
loop
cmpsb
push
sarl
and
pushf
movsb
ret
mov
sti
cmp
mov
mov
test
or
jae
jg
hlt
in
and
sub
mov
fmuls
and
repz
ja
ja
inc
sti
int
jl
xor
and
pop
dec
adc
add
mov
sbb
dec
aam
shl
sarl
das
mov
sub
xlat
mov
std
pushf
push
mov
or
je
xchg
push
pop
inc
ja
mov
or
adc
sbb
pop
jae
inc
cmp
loop
stos
mov
add
and
inc
cmpsl
ror
cs
mov
adc
pop
notb
pop
xor
in
arpl
inc
and
xor
fiaddl
adc
mov
pop
out
adc
cmc
int
sbb
stc
not
loop
sub
jge
iret
sbb
out
shlb
imul
nop
push
roll
frstor
out
jg
lcall
adc
cltd
push
aad
pop
sub
pop
push
xlat
ja
jecxz
add
mov
hlt
xor
and
dec
testb
out
mov
sahf
scas
scas
jne
dec
or
jae
or
sbb
rcrb
mov
jp
jno
je
bound
stc
xor
ljmp
cmp
sbbl
aas
and
push
mov
lret
rolb
mov
jbe
lcall
pop
push
cs
pop
mov
hlt
shr
sbb
lret
leave
lds
sub
ss
inc
shrl
mov
xchg
es
lea
in
movsb
daa
movl
and
mov
je
das
xchg
pop
xchg
push
loopne
imul
pop
dec
in
outsb
push
fdivrl
dec
test
lahf
icebp
movsb
jge
inc
pop
xchg
push
fimull
dec
pop
cld
mov
dec
add
mov
jns
lods
sbb
jb
mov
add
orl
rclb
xchg
sub
mov
sahf
and
mov
mov
inc
inc
push
shl
adcl
rcll
sub
xchg
daa
adc
inc
roll
loope
arpl
movsb
push
lret
mov
add
ja
fwait
jb
push
add
add
or
xchg
jb
outsb
dec
ret
cli
daa
das
sub
bound
pop
cmpsb
aaa
inc
hlt
xchg
sbb
dec
jle
stos
popf
cmp
pop
fdivrp
fstps
lock
xor
int3
xor
jl
adc
mov
faddl
mov
std
fbstp
jl
xchg
mov
stos
mov
sub
xchg
push
test
and
mul
loop
les
sub
mov
push
lret
push
daa
jnp
xor
sbb
mov
sar
xchg
mov
mov
add
repnz
xor
adc
inc
je
and
mov
lds
sarl
and
adc
jns
mov
inc
pop
add
cltd
addl
mov
iret
inc
sbb
fcmovnbe
dec
sub
jns
adc
sbb
out
js
add
sub
mov
mov
scas
mov
movsl
cltd
ret
or
xchg
and
inc
lcall
fs
push
in
ljmp
out
shll
test
je
or
ss
or
and
pop
mov
mov
ja
pop
inc
pop
sbb
sar
mov
pushf
int
pushf
mov
iret
inc
cmc
jnp
sub
jo
outsb
test
hlt
repnz
fisttpl
mov
out
inc
dec
add
mov
mov
push
outsb
sub
insb
lret
icebp
sbb
push
xor
pop
lock
sbb
icebp
cwtl
mov
sub
jge
or
jge
mov
rolb
std
movsl
cltd
decl
cmp
push
pop
je
js
pop
jecxz
in
mov
mov
lret
pop
xchg
mov
fwait
mov
xor
add
int3
xor
bswap
mov
cwtl
inc
bnd
push
das
and
or
push
adc
addb
das
leave
daa
test
xchg
sub
xlat
lret
lods
sbb
lods
ja
test
ret
cmpsl
jge
sbbl
stos
cltd
pop
pop
and
mov
sbb
pop
sbb
add
rorb
sbb
and
add
lret
pop
test
sar
sub
les
adc
push
or
or
ljmp
xchg
pop
dec
sub
scas
cmp
out
jne
pop
cmpsl
inc
mov
cmp
mov
orb
inc
mov
cmp
cld
inc
out
test
inc
add
pop
push
in
add
fists
psubsb
push
decl
lods
pop
jo
adc
or
sbbb
pop
sysret
push
sbbb
fiadds
cmp
push
cld
cmpsl
std
mov
testl
pop
out
mov
push
shrl
aas
add
test
mov
test
lret
mov
aaa
roll
pop
xchg
fisubl
mov
fnstsw
sbb
fnclex
mov
sbb
loopne
out
sbb
mov
xor
mov
orl
rcr
mov
sub
sbb
jne
pop
xchg
or
rcr
subl
adcl
jmp
into
sbb
inc
sub
stc
cli
lock
loope
scas
clc
stos
or
enter
jg
xchg
out
ljmp
lcall
neg
dec
out
fcmovne
enter
dec
in
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
pop
mov
push
xchg
enter
pop
sbb
push
clc
adc
arpl
inc
dec
or
fdivrs
outsl
push
mov
jb
jge
mov
iret
movsl
pop
adc
jo
xlat
sar
cmp
aad
jmp
into
popf
inc
dec
jmp
movsb
lea
imul
jnp
adc
sbb
out
cmp
popf
add
jnp
imul
mov
xchg
jmp
add
aaa
lahf
cmc
leave
xor
push
push
adc
inc
push
nop
int
push
jle
outsl
pushw
sub
mov
mov
cmp
in
push
push
inc
rclb
add
mov
jns
dec
mov
or
sub
cld
lock
aad
ljmp
stos
adc
inc
dec
pop
stc
jns
push
rorl
xchg
xchg
sbb
mov
sbbb
insl
inc
mov
jl
cmp
dec
pop
insb
dec
dec
fcompl
int3
int
pop
repnz
sub
stos
fadds
push
inc
and
sarb
aam
addr16
push
ret
std
aam
mov
push
lods
mov
lea
inc
inc
push
pusha
mov
out
dec
lock
pop
loope
mov
call
cmp
ds
lock
stos
outsl
aas
lret
sbb
dec
push
sti
sub
lahf
pop
pop
adc
cmp
les
mov
mov
add
fildll
sahf
xor
fsubrs
jl
cmpsb
lock
pop
fidivrl
jns
je
fisttpl
outsl
cmp
int3
pop
push
dec
xlat
jle
aaa
mov
and
inc
mov
rcl
xor
and
cmp
mov
lods
test
pusha
jne
mov
orb
loopne
fimull
push
sbb
lock
fsubs
sub
xlat
pop
addb
fwait
cmc
testl
sbb
stc
stos
loop
addr16
shll
scas
mov
fwait
repz
mov
jnp
sbb
hlt
push
cmp
addb
fimull
loope
das
cltd
into
cli
mov
mov
daa
jns
cmp
xchg
jmp
mov
inc
fmuls
dec
aaa
in
jecxz
addr16
mov
push
add
mov
lods
jp
jbe
loope
jmp
int3
sbb
iret
out
pop
int3
arpl
inc
cmp
and
mov
call
ljmp
jmp
scas
mov
sub
mov
out
clc
lds
jmp
xchg
inc
mov
notl
jne
jo
push
std
int3
add
test
xchg
pusha
push
pusha
std
jnp
xchg
mov
mov
enter
lods
fidivs
data16
mov
ljmp
cltd
notl
stos
dec
fisubrl
ds
inc
cmpsl
insb
loope
divb
add
mov
rcrl
lods
jmp
inc
or
mov
ret
jnp
mov
adcb
xchg
dec
into
adc
adc
mov
cltd
insb
xor
jmp
loop
ret
mov
sub
fwait
mov
shrl
xchg
mov
imul
xchg
mov
push
xor
sub
leave
incb
addr16
adc
cli
sub
jle
jae
inc
fldenv
aad
xchg
pusha
jno
cmpsl
jae
and
fimull
orl
orl
scas
add
bound
pop
outsb
or
mov
ds
pop
cmp
clc
lret
cmp
insl
dec
pop
push
popf
pop
mov
mov
or
mov
es
inc
leave
addr16
out
fnsave
mov
popa
in
inc
jmp
mov
pop
fistpl
and
xchg
jbe
and
in
adc
aas
jl
jmp
mov
dec
sbb
jp
cmpsb
push
out
inc
cwtl
adc
jle
test
js
sahf
mov
into
ljmp
out
adc
jo
scas
pop
jl
mov
repz
xchg
inc
loop
lods
mov
xlat
andl
cs
ret
xchg
in
dec
insl
push
jle
cmp
lsl
int
shrl
and
les
stos
pop
popl
jo
js
les
xchg
in
sbb
push
mov
bound
push
fsubp
mov
xchg
and
jo
js
push
and
and
aam
xchg
mov
int
mov
lods
adc
stos
movsl
and
sarb
adc
mov
adc
sub
lret
imul
inc
xchg
leave
clc
ljmp
mov
into
xlat
or
pop
and
repnz
out
fwait
ret
cmp
fisubrl
mov
xor
mov
sub
dec
repnz
xchg
dec
jecxz
pop
sbb
daa
jne
cmp
call
mov
fidivs
adc
cmp
push
adc
push
cmp
out
mov
scas
cmp
aaa
dec
jbe
dec
std
jo
or
jns
jp
lret
and
in
xor
aad
xchg
sar
add
dec
add
fistpl
iret
inc
andl
std
sbb
lods
aaa
add
inc
mov
pop
inc
std
mov
int3
lods
loopne
xorl
or
fimull
pop
hlt
cmp
addl
addr16
mov
stos
mov
inc
dec
adc
les
lods
andl
adc
repnz
scas
aad
xchg
imul
xchg
fs
push
rcrb
lods
and
outsl
pop
nop
sbb
movsb
imul
mov
cmp
daa
pop
xchg
pushf
push
cltd
sbb
or
jnp
push
xchg
sub
mov
cmpsb
mov
int
arpl
outsb
call
mov
xlat
cmp
and
and
cwtl
ss
lahf
adc
mov
sbb
ds
out
mov
or
data16
pop
adc
sbb
mov
xchg
xor
or
cmp
test
cmp
mov
push
push
rcll
loop
dec
popa
ljmp
xchg
mov
not
and
xor
mov
mov
xor
or
mov
mov
jmp
lds
jno
push
push
or
inc
subl
add
adc
push
clc
adc
les
jae
mov
sub
add
ja
xchg
adc
filds
dec
aas
ss
pusha
stos
xor
inc
mov
icebp
inc
hlt
sub
jge
jl
push
xor
and
xchg
cmp
addr16
les
je
pop
adc
sbb
bound
cwtl
test
sbb
fbld
mov
shl
lcall
int3
dec
inc
push
push
bound
dec
add
ret
xor
and
lds
and
xchg
out
es
inc
int
cld
ljmp
jecxz
sar
inc
cmpsl
xor
jne
aam
jne
das
std
repz
pushf
fcoml
sahf
mov
call
insl
andb
sarl
cmp
and
aaa
fcomps
push
cwtl
adc
in
pop
pusha
jmp
or
sbb
jle
add
push
jl
and
adc
dec
mov
les
mov
icebp
xor
inc
jne
shr
pop
inc
push
popa
inc
cmp
or
stos
arpl
scas
ja
xchg
pop
test
lods
jno
stc
mov
inc
sbb
imul
or
std
movl
inc
add
nop
mov
mov
cmp
xor
sti
xchg
mov
lods
add
out
cmpsb
cmp
iret
shlb
shrb
push
pop
ja
popf
lret
out
mov
xchg
cmc
fs
data16
arpl
sub
xchg
inc
mov
pop
divl
xchg
std
addr16
fadds
test
fisubrs
mov
mov
sub
jge
inc
xchg
push
mov
xchg
rclb
cmp
enter
imul
cmpsb
fwait
push
sbb
mov
out
add
sbb
dec
pop
pop
sbb
pop
jl
data16
pop
dec
ds
sti
into
sub
pop
sahf
jg
test
stos
dec
jo
inc
lret
push
loope
add
data16
xchg
or
loopne
fnsave
sub
inc
mov
mov
push
dec
hlt
dec
pop
outsl
ss
in
xchg
sub
sbb
cmp
ficoml
roll
cmp
stos
jle
bound
sub
iret
lahf
cmp
xor
frstpm(287
pusha
cmc
cmpb
cmpsl
outsb
loopne
cmp
jae
pop
out
push
pop
and
or
mov
pop
and
push
add
mov
mov
push
jo
popa
jecxz
test
clc
push
sub
rcrl
fldenvs
sub
mov
mov
sub
dec
xchg
adc
clc
xor
ja
hlt
inc
sti
in
rcl
hlt
sbb
lods
outsl
jo
nop
sub
xchg
enter
pop
repz
rorl
cmp
jne
inc
loope
shll
cli
call
decb
or
popf
fwait
movl
ljmp
notb
andb
inc
inc
ret
jae
fwait
push
jb
jg
push
es
cld
pop
mov
xchg
sbb
mov
inc
jae
rorl
lods
jmp
sub
and
int3
shll
out
mov
cmp
in
and
mov
cmp
into
lods
mov
xor
mov
test
hlt
xor
scas
sub
andl
mov
add
inc
add
call
out
sub
sbb
rolb
cmp
xor
mov
rolb
popf
aas
dec
xor
pop
cltd
stos
arpl
ds
or
popf
push
dec
sbb
sbb
xlat
fdivr
icebp
jge
daa
js
into
cli
mov
int
push
cmpl
stc
orl
cli
fsubr
jmp
lods
xor
jecxz
aad
xlat
std
loop
repnz
dec
and
dec
push
xlat
xor
dec
adc
das
lods
xlat
in
cmp
pop
sbb
mov
xor
pop
inc
jle
add
inc
dec
lods
sub
scas
pop
pop
mov
aas
mov
mov
rolb
or
fsubs
add
mov
push
cmp
cmp
orb
mov
pop
cmp
ss
andl
in
fisubs
fstps
stc
dec
and
mov
int
mov
hlt
into
push
mov
popf
xchg
mov
movsb
push
scas
cs
mov
push
and
dec
xorb
mov
dec
pop
jo
mov
mov
out
lret
les
lahf
cmp
inc
mov
jg
add
mov
jbe
pop
mov
cmpsb
hlt
mov
xor
lcall
movsl
fmull
adc
in
scas
dec
sub
repz
inc
adc
sub
cmp
inc
jne
cli
mov
dec
adc
cmp
popf
sub
adc
xchg
mov
mov
cmpsb
mov
daa
add
lea
sbb
cmp
or
lret
cmp
mov
iret
mov
out
dec
not
pop
test
lods
mov
mov
popa
stc
add
dec
stos
adc
mulb
das
in
fldl
pop
mov
repnz
std
sti
dec
mov
shrb
dec
push
repnz
dec
pop
and
scas
and
cmp
rcll
pop
jle
insl
test
pop
xchg
push
pop
add
push
data16
addr16
fildl
jne
insb
sbb
inc
call
jb
movsl
rorb
out
adc
aaa
push
repz
out
dec
or
scas
ror
into
imul
sbb
dec
out
fldenv
mov
loope
fdiv
lea
jecxz
mov
or
sub
out
sti
lahf
push
ret
jb
dec
aam
ja
push
pop
dec
dec
cltd
jb
mov
fst
mov
les
in
add
jnp
dec
cmp
add
jge
aam
call
or
mov
aad
sub
outsb
mov
arpl
outsb
inc
mov
jno
addb
movsb
je
xchg
std
cmp
mov
or
and
pop
pusha
mov
pop
xchg
jmp
sub
pop
scas
or
add
pop
fnstcw
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
jmp
inc
jle
add
add
add
scas
adc
push
clc
adc
insl
shll
mov
pop
test
sti
adc
sub
test
dec
mov
adc
out
jbe
sub
xchg
out
nop
scas
stos
or
idivl
jmp
push
out
push
es
push
lcall
adc
jbe
xchg
outsl
inc
mov
jbe
mov
ljmp
stos
outsl
popf
bound
int
sub
outsl
xlat
mov
mov
cmpsb
mov
sbb
ret
inc
xor
js
outsl
sbb
scas
lock
loopne
scas
cmp
es
addr16
cmpsl
jno
ret
jno
enter
mov
imul
jmp
adc
mov
out
cmp
mov
loopne
fistps
das
xchg
cli
mov
sub
mov
xchg
lea
dec
inc
mov
jmp
jl
arpl
jle
hlt
add
loopne
decb
mov
and
adc
pop
out
jg
fld
jne
daa
xchg
lds
jmp
or
lret
fisubs
bound
pop
inc
adc
sbb
sbb
popf
iret
outsl
mov
mov
lea
scas
fadds
xor
pop
mov
aaa
mov
lcall
add
mov
arpl
iret
pop
mov
hlt
pop
xchg
cmp
das
shl
mov
fsubrs
outsl
cmp
sub
push
clc
mov
push
cmc
inc
lahf
add
mov
out
loop
sahf
pop
iret
or
and
subl
cli
subl
cmpsl
adc
in
aad
pop
aad
and
mov
mov
mov
inc
or
mov
add
mov
test
mov
imul
nop
nop
call
gs
push
stc
popf
pop
sbb
sbb
and
bound
rorb
push
mov
lds
cmp
lret
out
movsb
repz
je
ja
sbb
xchg
push
mov
sbb
inc
jp
sbb
jg
testl
sbb
jb
push
loop
test
add
sbb
rcll
cmp
loop
adc
out
dec
push
xchg
scas
aad
out
pushf
sub
mov
adcl
mov
fs
aas
lcall
xor
popa
adc
sub
adc
cmpsl
in
push
daa
sti
icebp
mov
fs
sarb
or
or
cmp
fwait
jno
mov
push
xchg
mov
mov
adc
popf
rorb
ret
or
int3
pop
daa
test
rorb
pop
negb
and
mov
rcl
pop
xor
jne
mov
rclb
adcb
mov
mov
xor
mov
scas
loop
sbb
dec
stos
jns
out
mov
call
cli
xorb
xchg
lods
adc
sub
es
movsb
mov
jns
stos
xchg
scas
int
out
mov
sub
mov
and
and
lods
call
or
fildl
out
sti
cwtl
aaa
adc
xchg
test
xchg
dec
jle
xchg
mov
adc
xchg
mov
lcall
scas
sbb
scas
xchg
sbb
cld
or
rclb
sbb
inc
mov
ss
pushf
push
and
and
mov
cmc
cmp
and
jb
adc
mov
push
pushf
sub
and
add
xchg
xlat
sbb
fdivl
or
lret
loop
fidivrl
jecxz
sub
sub
sbb
lahf
add
or
push
mov
add
iret
addr16
sbb
jno
jno
mov
adc
xchg
mov
lret
pushf
mov
gs
imul
adc
cwtl
xchg
pushf
roll
mov
xor
movsl
mov
push
lcall
adc
cmp
add
call
add
test
add
mov
mov
push
loop
clc
push
std
add
mov
push
inc
sbb
aad
adc
adc
push
pusha
xchg
ljmp
cli
mov
pop
aad
lahf
mov
jle
mov
xchg
push
mov
stc
in
pop
pusha
xchg
lods
add
loop
imul
sub
mov
outsl
stc
loopne
mov
dec
hlt
dec
ftst
mov
cmc
or
pusha
rcll
loopne
sti
dec
mov
fs
sti
mov
mov
and
mov
push
xchg
inc
push
sbbl
movsl
jb
pop
das
dec
sub
aaa
jge
push
xor
xchg
shl
data16
dec
inc
sub
insb
push
pop
push
mov
sahf
aaa
js
push
xchg
inc
ss
mov
cmpsl
push
mov
aaa
pop
cli
lods
mov
cmp
mov
iret
xor
sahf
sbb
add
enter
iret
push
stc
push
cs
inc
lret
es
push
xchg
mov
mov
jbe
sub
data16
scas
pop
aad
loop
jns
repz
stc
lcall
gs
mov
icebp
outsl
or
stc
rcrb
stos
push
loopne
inc
addb
mov
xchg
sbb
addr16
mov
das
push
pop
dec
pop
dec
fcoml
or
outsb
pop
dec
cmp
mov
clc
dec
fisubl
cmpsl
and
jo
fstps
pop
or
mov
test
adc
in
lcall
push
xchg
xchg
mov
jb
lods
cmp
xchg
popf
ret
sbbl
mov
mov
rolb
mov
out
pop
jmp
lods
adcl
inc
int
into
leave
daa
mov
xchg
jne
mov
dec
xchg
ja
in
inc
popf
or
mov
sbb
insl
sub
inc
ja
divl
dec
insb
push
aaa
jle
push
xchg
imul
hlt
cmc
xchg
pop
out
push
push
pcmpeqw
das
mov
aad
pop
inc
clc
add
daa
pop
scas
adc
out
sub
jno
pop
loope
pop
out
jl
std
mov
in
cmpsb
rclb
jno
adc
pusha
inc
mov
cmpsl
jnp
add
fisttps
xchg
adc
test
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
jmp
test
and
push
mov
repz
sbb
mov
adc
clc
adc
dec
aas
loop
push
jo
enter
fldcw
orl
lret
xchg
and
ja
loope
push
mov
test
jae
fwait
pop
dec
mov
sbb
mov
jecxz
push
adc
lock
rcrb
stc
mov
mov
add
leave
fcoms
les
stc
mov
inc
and
mov
xlat
cli
jl
inc
aad
add
icebp
jnp
test
adc
cmp
pop
ror
andl
and
stc
mov
aas
arpl
mov
sub
xchg
inc
xchg
adc
mov
and
scas
dec
fcomps
sbb
xchg
scas
packuswb
cmpb
es
xor
aaa
fwait
push
pop
jo
out
leave
mov
cmp
mov
test
and
scas
pop
xchg
sub
out
mov
aad
je
aad
fldl
insb
aad
icebp
int3
lea
add
mov
and
xchg
cld
fnstenv
ja
icebp
mov
mov
sub
push
rcr
sahf
test
xchg
xor
ja
dec
xchg
fsubl
jl
sbbl
push
lds
mov
mov
xor
pop
jl
sub
mov
adc
subl
mov
jae
aaa
sub
scas
loopne
ja
dec
aam
push
pop
mov
and
xchg
rol
push
dec
andl
xor
mov
out
mov
in
add
mov
mov
ljmp
sbb
sub
andl
fldcw
mov
dec
int3
stos
and
leave
repz
pop
ja
imul
sub
mov
add
xor
jne
mov
mov
push
daa
push
stos
loope
xchg
cmp
xchg
mov
ljmp
das
aam
adc
cmp
leave
jb
enter
movsb
push
sbb
push
aad
pop
push
lock
ficoms
cmc
add
addr16
inc
push
mov
push
sub
push
xor
xor
jbe
sub
push
add
mov
xchg
in
and
sub
mov
movsb
inc
sbb
lret
or
je
push
sub
push
mov
iret
push
push
sbb
insb
imul
and
cmp
add
add
mov
fldt
int3
andps
es
outsl
bound
icebp
xchg
popa
inc
sahf
add
dec
sbb
jno
mov
inc
fst
mov
jge
mov
scas
xor
test
icebp
in
pop
pop
lcall
mov
out
call
rorl
shlb
push
pushf
jbe
cmp
jg
xchg
aaa
lds
sti
xchg
std
push
rcrb
add
sub
das
stc
mov
jge
lret
aam
xchg
dec
imul
adc
mov
dec
ficoms
lock
cmp
adc
dec
es
dec
sub
cld
loop
mov
push
mov
bound
pop
pop
mov
jbe
push
insl
outsb
adc
js
out
mov
dec
jnp
xchg
and
lret
and
in
sbb
pop
mov
jge
movb
and
lock
ja
js
out
sahf
jns
cs
das
cwtl
jp
outsl
aas
cmc
js
sar
int3
in
inc
arpl
mov
fistpll
retw
movzwl
mov
mov
das
out
push
dec
mov
xchg
jge
push
popf
outsb
sar
aam
jns
and
jb
or
sub
add
lea
les
mov
repz
mov
and
and
adc
rclb
sbb
dec
mov
xor
xor
pop
pop
in
int
outsl
lds
mov
insb
mov
ret
pop
xor
push
dec
jp
add
mov
push
dec
cmp
fsubl
scas
add
in
dec
jb
push
adc
out
divb
jb
and
mov
sub
clc
fwait
and
push
les
pop
in
out
pushf
jae
sub
lock
xchg
pop
outsb
stos
jecxz
in
testl
pop
imul
jmp
pop
or
xchg
mov
and
test
ja
xchg
stc
fwait
jge
imul
mov
inc
xchg
jl
xor
sbb
xchg
or
inc
in
xor
loope
sahf
rclb
or
mov
ret
js
or
lea
fcomip
push
loopne
and
test
ljmp
jne
dec
popf
shl
push
jnp
outsl
jp
xchg
inc
repnz
addr16
repnz
dec
outsb
jnp
jno
mov
mov
sbb
xchg
sti
testb
xchg
out
sti
jnp
xor
sti
xchg
dec
lea
inc
jae
iret
pop
sarb
aaa
fcomps
mov
xor
xor
fidivrl
sub
jo
out
jl
std
sbb
fs
mov
lahf
shll
test
aas
iret
sbb
xchg
dec
pop
pop
shll
jg
mov
inc
test
in
scas
push
pop
cmp
in
dec
aaa
bound
mov
cmp
leave
sub
sbb
add
xchg
or
mov
out
jne
lds
push
mov
sti
mov
enter
testl
std
scas
mov
xchg
push
push
cmp
stc
into
imul
pop
add
inc
sub
cmc
out
jbe
int
out
loop
ja
stos
shrl
add
sar
repz
out
inc
and
cld
sbb
sahf
daa
test
xor
xchg
loope
cmp
pushf
pop
ss
xor
push
aaa
mov
and
xchg
mov
xchg
adc
outsl
movsl
inc
jno
scas
jno
mov
popf
sub
shlb
push
inc
xchg
mov
and
dec
sub
into
addr16
push
mov
dec
push
mov
mov
pop
movsl
adc
lock
add
xor
bound
shll
cltd
push
arpl
xor
mov
push
mov
dec
push
test
jl
dec
dec
inc
xchg
lahf
push
pop
clc
lcall
das
jecxz
sbb
cmp
push
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
movsl
mov
mov
inc
repz
adc
pop
aam
adc
push
clc
adc
add
mov
cs
out
mov
mov
leave
push
mov
iret
mov
imul
xor
mov
stos
push
sub
or
pop
negl
sub
sub
mov
dec
jmp
imul
or
xlat
mov
or
dec
clc
and
xor
lods
or
push
nop
add
inc
lret
xor
and
aaa
movsl
push
in
les
test
mov
push
cli
dec
out
or
test
add
xchg
pop
dec
stc
jb
lcall
inc
xchg
scas
push
in
fs
mov
mulb
fmull
leave
je
add
mov
sbb
mov
cmp
mulb
add
mov
dec
mov
cwtl
push
in
loopne
inc
pop
pop
lods
add
mov
or
sub
pop
orl
test
loopne
mov
add
out
xchg
jae
push
sbb
scas
in
js
inc
mov
cmpsl
and
loope
or
icebp
mov
and
lcall
dec
push
lock
add
repz
scas
inc
fs
imul
push
jne
int3
lods
in
cs
push
and
sbb
sbb
xchg
push
and
xor
lret
out
pop
mov
lea
jns
ds
dec
sbb
hlt
pop
pop
gs
hlt
cli
imul
push
adc
test
xor
outsl
pop
push
push
jns
lock
dec
dec
mov
and
repnz
pop
push
add
je
je
leave
mov
dec
adc
xor
xchg
in
in
mov
jmp
adcb
cmp
lret
add
rcrl
xor
andb
rcll
sub
xor
nop
mov
pcmpeqw
hlt
adc
add
push
sbb
cli
inc
stos
pop
nop
inc
pop
mov
xor
es
lods
shlb
subl
test
adc
pop
enter
cmc
xor
cmp
or
mov
loopne
mov
call
mov
sarb
in
sbb
lcall
push
popf
jecxz
fnstenv
movsl
int
or
and
lcall
dec
rcrb
cld
shll
sbb
cmp
inc
fwait
jae
shrb
xor
aam
or
pop
jne
xor
push
add
orb
cwtl
rorb
das
jo
repnz
push
mov
rcr
sub
mov
dec
adc
loopne
adc
jle
push
in
lcall
inc
leave
int
jle
push
movsl
cmp
ss
rorl
jle
ljmp
and
pop
nop
fnstsw
lret
dec
int
js
fists
fisttps
loop
js
inc
clc
cmpb
fsubrp
cmc
cli
out
arpl
dec
loop
xor
inc
je
mov
loopne
cltd
dec
loopne
lahf
je
cmp
ret
das
mov
add
or
cli
andb
mov
lret
cltd
adc
cli
dec
dec
bound
mov
mov
pop
xor
adc
push
push
mov
xor
mov
out
cld
and
dec
dec
sub
bound
or
xchg
cmp
xor
sub
or
rcl
dec
push
js
mov
add
inc
fs
adc
xchg
push
push
sar
int
adc
mov
ds
call
jbe
add
push
clc
jle
testl
and
pusha
data16
sub
dec
mov
sub
jae
mov
out
movsb
andb
sub
jl
xor
inc
push
repnz
pusha
cld
inc
xchg
pop
mov
imul
arpl
inc
lret
in
adc
push
or
mov
in
roll
inc
movsl
popa
jmp
xchg
jg
or
pop
rcrl
fwait
mov
sbb
xor
sub
pusha
xchg
add
adc
ss
adc
push
sbb
cld
cmp
lcall
mov
mov
divb
jmp
mov
adc
repnz
jmp
push
add
or
push
mov
outsb
insl
push
in
incb
rcr
jmp
test
cmpsb
js
pop
pop
fcoms
ror
shlb
stos
lahf
js
ja
adc
scas
loopne
cmp
daa
lcall
jnp
adc
cmp
sarl
jle
sbb
jecxz
int
iret
fcom
inc
sub
lock
fld
pop
and
push
xor
je
arpl
ret
sub
fistpll
hlt
stos
jbe
push
enter
dec
movsl
ret
xor
mov
out
cwtl
iret
pop
loop
jl
outsb
or
adc
addr16
sar
rorl
xchg
popf
pop
rclb
nop
xor
aaa
jle
push
xchg
sub
mov
xchg
jmp
mov
jp
xor
jb
addr16
shrb
push
mov
xchg
mov
cwtl
shlb
les
push
call
fidivrl
test
and
sub
mov
ds
stc
mull
push
mov
dec
cltd
pop
or
sahf
dec
or
js
mov
inc
dec
adc
pushl
dec
jbe
mov
xchg
movsl
dec
mov
jbe
jnp
mov
and
adc
inc
jne
out
mov
dec
sahf
popf
int
nop
adc
into
adc
cmc
sahf
mov
mov
cmp
xorb
xchg
mov
mov
sub
push
test
jnp
pop
mov
add
inc
xchg
rcll
cwtl
add
ds
ss
fisttps
or
xor
lods
lods
and
inc
sbb
jle
inc
and
mov
enter
sub
repnz
movsb
pop
leave
or
enter
mov
enter
add
loopne
xchg
mov
sub
lock
ficoml
jp
leave
jle
mov
mov
into
sbb
push
mov
xlat
fdivs
mov
gs
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
jmp
xchg
inc
aad
les
push
fmuls
add
xchg
adc
push
clc
adc
or
mov
loopne
mov
pop
cwtl
pusha
mov
jp
push
jg
inc
adc
leave
popw
nop
jae
dec
bound
sbb
pop
sbb
sbb
dec
js
or
cmp
sub
stos
insb
xchg
mov
adc
sbb
lret
lret
popf
adc
xchg
inc
jmp
ficoml
inc
or
sbb
dec
sub
xlat
notl
jg
sbb
push
es
or
xchg
nop
dec
jle
mov
mov
adc
mov
int3
inc
mov
sub
out
lret
enter
ljmp
shlb
lcall
cs
shr
dec
les
gs
sbb
outsb
in
int
je
sub
pop
pop
ljmp
add
dec
lods
xor
jmp
push
rcrl
push
push
jns
mov
ds
jp
push
add
pop
dec
dec
lcall
cmp
movb
addl
xor
cmc
xchg
cmp
scas
pop
xor
cmp
adc
add
push
xchg
imul
cmp
pop
mov
pop
xchg
call
cmovs
dec
movb
mov
xor
in
ficomps
lods
std
xor
dec
pop
jle
out
cmp
dec
jmp
sbb
cmpb
imul
stos
jnp
nop
leave
mov
sub
das
sub
fstps
inc
xchg
test
or
jnp
mov
push
in
mov
mov
lods
faddl
incl
mov
pop
inc
imul
insb
push
fisubrs
cs
ss
mov
mov
stos
aas
cmp
or
cmpsb
xor
push
in
shr
enter
jp
iret
sti
inc
jnp
fwait
cmp
in
stos
popl
jge
aad
mov
xchg
pop
push
cmc
fs
popa
lcall
xchg
jmp
adc
jecxz
cwtl
xor
sub
movaps
jo
pop
ret
je
push
jae
test
or
cmc
mov
repz
fcmovne
rcrl
js
inc
data16
jmp
stc
insl
jg
ds
or
decb
and
into
outsb
shlb
shlb
mov
jne
and
fnsave
adc
xchg
mov
neg
popf
jp
pop
loop
add
hlt
cmp
sbb
and
adc
add
pop
movsl
sub
addr16
pop
pop
fsubl
lds
and
dec
test
les
xchg
add
movsb
jnp
imull
mov
cmp
xchg
dec
xchg
rclb
jns
or
push
mov
xchg
repz
cmc
push
decl
ror
cmc
xor
stos
sub
or
shll
pushf
mov
xor
pop
push
inc
test
sub
and
jnp
sub
xchg
cmp
jnp
pop
bound
jecxz
inc
stos
sarb
movsb
dec
jmp
mov
lcall
xchg
rcrw
ljmp
enter
cmp
inc
sbb
fnsave
fisubs
outsb
fistps
clc
les
pop
mov
popf
or
shl
jle
cmpb
lds
loop
sbb
adc
shl
fisttps
or
shlb
ficompl
xlat
jnp
fucomip
cmp
sub
mov
int3
mov
cltd
dec
mov
pop
cli
mov
icebp
in
push
pop
or
fsubrs
and
sbb
or
cmp
mov
enter
and
jp
pop
mov
inc
sbb
and
mov
add
repz
sbb
xor
cmpsb
popa
dec
sub
scas
addl
cmp
dec
sbb
arpl
or
in
xor
push
jmp
jge
push
xor
sbb
jecxz
in
pusha
mov
movsl
and
js
inc
jns
jle
mov
push
rclb
sbb
je
fcomi
mov
mov
out
inc
jb
xchg
jmp
ret
dec
pop
loop
xor
inc
push
hlt
dec
sbb
jg
shll
imul
std
mov
push
arpl
jecxz
hlt
out
jb
jl
push
add
cwtl
repz
cld
jmp
nop
pop
jge
loopne
shll
test
aad
and
sub
sbb
aam
addr16
bound
inc
andl
stc
inc
std
cmpsb
xchg
jo
or
lods
enter
lods
outsb
xor
in
jg
mov
xchg
les
sar
stos
mov
mov
push
shlb
dec
xor
movsb
pop
add
movsl
cmpsl
xchg
add
aam
push
add
stos
dec
leave
lods
sbb
dec
mov
and
in
daa
rcrb
and
fiadds
dec
jns
repnz
in
es
xchg
push
je
xchg
int3
add
mov
inc
sub
mov
insl
mov
adc
dec
mov
and
testl
out
es
add
dec
lds
add
stos
mov
xlat
loope
and
shr
imul
push
dec
rep
fidivs
xorb
cmpsb
loop
das
and
add
mov
sbb
ljmp
dec
jo
cmpsb
arpl
inc
jge
fdivrl
xchg
xor
outsl
cld
int
icebp
or
sahf
dec
in
adc
cmpsb
scas
jo
mov
mov
and
cltd
or
xor
xlat
xchg
pusha
arpl
test
jnp
roll
push
cmp
xorl
or
fmull
jmp
pop
lods
daa
add
sub
sub
lret
ret
or
hlt
xor
divb
xor
cmc
or
movsl
and
dec
testb
sbb
mov
inc
jns
loopne
in
shl
pop
mov
mov
add
fcomi
xor
neg
sarl
fildl
jnp
sbb
daa
pop
cmp
idivb
mov
sbb
xor
scas
cwtl
mov
mov
mov
jmp
push
lock
dec
jecxz
inc
dec
aad
mov
cmpb
inc
fdivl
rorb
movsb
ret
rorl
shl
jmp
lret
xchg
cli
icebp
mov
fiadds
loop
xor
push
clc
adc
jp
xor
cmc
sbb
ret
test
punpckhwd
shlb
add
rcrb
ficomps
scas
jbe
pusha
scas
dec
mov
mov
jae
jmp
mov
and
xor
and
icebp
xchg
cmpsb
fs
jge
inc
call
shlb
mov
mov
add
dec
stos
jl
sbb
repz
in
push
push
ljmp
pop
push
stos
add
out
dec
mov
jbe
fldl
mov
insb
dec
out
dec
or
mov
outsl
add
icebp
rcl
pop
lahf
test
xor
cmpsl
arpl
and
cwtl
pop
inc
ds
mov
xchg
adc
xor
pop
cs
jg
mov
lcall
outsb
lods
aas
inc
icebp
out
cmp
cmpsl
sbb
adc
sbb
sub
dec
in
add
mov
out
jmp
sbb
inc
lea
mov
bound
fldcw
lcall
out
xlat
aas
mov
xor
mov
adc
data16
xor
hlt
nop
out
xchg
insl
fists
push
pop
pushf
xchg
std
mov
mov
mov
mov
pop
fsubl
push
xor
aad
stc
test
clc
in
movd
ljmp
ror
and
sub
push
push
push
mov
stc
sub
jo
cmp
or
out
push
fstpt
iret
mov
loopne
pop
bound
fimuls
in
hlt
adc
push
sub
push
inc
pop
mov
lcall
mov
cld
gs
lahf
jbe
sub
xor
notb
inc
insb
mov
xor
pushf
scas
rcrb
push
pop
xchg
cld
jle
mov
and
stos
sub
fs
jecxz
mov
movsb
xor
js
pop
cmp
hlt
cmp
push
icebp
xor
mov
shr
cmpxchg
mov
xchg
scas
out
push
cmp
bound
mov
fmuls
xchg
pop
or
add
loopew
adc
mul
pop
pop
je
cmp
pop
add
push
js
lahf
in
pop
bound
bound
jns
jo
movsl
mov
pop
lcall
inc
dec
lock
rclb
jo
jmp
fs
cmpsl
cmc
sub
loop
jmp
mov
xchg
shrl
xor
xlat
outsb
repz
xor
fadd
pop
and
popa
aas
mov
cld
or
mov
fwait
rcll
es
inc
push
jge
cmp
push
mov
xor
dec
stos
scas
loope
inc
fs
lods
adc
mov
cli
pusha
jb
adc
imul
sub
dec
movsb
fadds
loope
cld
jo
add
cltd
pop
out
xor
inc
enter
push
lret
add
aad
add
xor
xchg
sbb
outsl
mov
xor
ja
fidivrl
mov
xor
je
ljmp
imul
fldcw
xlat
cmpsl
and
aam
pusha
inc
xlat
add
adc
int3
pop
jmp
mov
xchg
icebp
mov
pop
stc
fbstp
add
or
pop
les
and
insb
popf
add
pop
mov
daa
push
sbb
sti
push
shlb
adc
out
imul
not
mov
ljmp
sbb
movl
imull
mov
loop
sub
nop
ja
pop
and
mov
orb
add
sub
lcall
and
mov
and
fwait
dec
ss
jno
push
shl
dec
jns
mov
ss
jb
mov
pop
shlb
or
fwait
subl
adc
xchg
stos
sti
inc
push
cmp
imul
fstpl
out
repz
rcr
inc
in
fcomps
dec
sub
pop
test
xchg
add
push
cmp
inc
jo
ret
jmp
test
xor
imul
bswap
repnz
mov
dec
sub
dec
or
lahf
lret
add
jge
xchg
rol
stos
sbb
inc
ret
sub
push
cmp
push
sub
fiadds
fwait
nop
cmc
lock
dec
add
inc
fwait
push
movsb
and
test
int
add
pop
add
fsubrl
xchg
insl
in
cmpsl
inc
add
fisubs
mov
jp
xor
or
out
mov
jno
imul
xlat
mov
xchg
and
outsb
jns
jmp
cs
add
xor
mov
cmp
xorl
pusha
xchg
iret
mov
fstl
popa
dec
and
inc
mov
add
pushf
pop
sbb
rorl
cmp
adc
shlb
lds
hlt
adc
xchg
push
sub
mov
aaa
fdivs
adc
jmp
das
jp
fs
movl
movsb
push
scas
scas
dec
xor
adc
xchg
ja
mov
and
cs
pop
out
jmp
mov
xchg
fidivrl
roll
test
iret
cs
rcll
push
mov
sbb
jbe
aas
shl
mov
subl
mov
xor
leave
pop
jns
sbb
mov
push
jg
push
pop
inc
pop
pop
xchg
loop
jbe
add
out
inc
mov
aas
pushf
subl
lods
adc
leave
dec
stos
dec
lods
insb
popf
fildl
xchg
adc
int
addb
sbb
cmp
pop
in
xchg
add
idivb
std
rcrb
leave
out
push
inc
addr16
das
stos
lds
push
xor
notb
add
mov
sub
call
repz
jb
push
jb
push
icebp
sub
or
stc
lods
mov
hlt
jae
push
cmp
mov
aaa
test
push
fwait
xchg
cmp
or
in
sti
mov
push
sarb
add
std
push
mov
push
pop
xor
sbb
shll
push
mov
push
outsl
and
adc
mov
pushf
jge
xchg
inc
je
pop
pop
mov
loopne
sbb
lock
sub
mov
sbb
ret
xchg
adc
push
ss
aaa
cmp
mov
adc
xchg
addr16
inc
adc
test
ret
push
add
mov
imul
push
les
push
clc
adc
lcall
xchg
push
mov
push
dec
push
aas
outsb
fdivrl
mov
sbb
xor
icebp
imull
pop
rorb
xor
int3
or
jne
sbb
lea
mov
mov
pop
pop
mov
cmpl
insl
xorb
sub
sbb
lret
add
jp
negb
loopne
mov
dec
iret
je
push
push
outsb
mov
loope
mov
xor
push
mov
nop
mov
mov
mov
cmpsb
and
fists
push
imulb
mov
pop
fs
add
lods
aad
leave
fwait
clc
out
cmp
das
fs
mov
cmpsl
inc
faddp
adc
mov
rclb
popf
les
cmc
xchg
incb
add
daa
mov
loop
into
mov
xor
xor
mov
movsl
out
sub
not
mov
repz
mov
pop
aaa
das
inc
mov
dec
mov
push
push
mov
imulb
roll
mov
pop
outsl
fimull
mov
jecxz
mov
ja
mov
add
std
mov
arpl
and
adc
xchg
jle
mov
sub
sarl
aaa
and
add
mov
xor
out
mov
js
mov
fwait
in
fisubl
fstps
popa
push
out
int
mov
fwait
pop
sub
xchg
movl
into
jno
pop
push
add
mov
lds
pop
cltd
loope
cmp
adc
push
inc
dec
dec
push
negb
cmc
add
add
adc
xchg
mov
xor
sbb
pop
fcoml
iret
bnd
push
adc
ss
fsubrs
ret
and
adc
mov
or
and
jg
test
lcall
out
pop
xor
cmc
jl
add
dec
mov
jp
push
adc
and
cmpsb
mov
mov
arpl
stos
aas
jecxz
cmp
test
jge
cmp
outsb
pop
mov
out
into
jno
cld
or
mov
mov
sub
xor
test
cmp
inc
pop
je
cmc
mov
add
pop
pop
movl
jno
jmp
or
xchg
jge
sbb
es
shll
cmpsl
mov
xchg
push
mov
imul
xchg
jbe
in
outsb
or
dec
jbe
stos
and
stos
hlt
test
cmpsb
cmc
add
ja
lock
jb
pusha
fisttpl
push
shll
sbb
divb
dec
cmp
fwait
adc
mov
psubd
jmp
shlb
movntps
bswap
lahf
int
rolb
dec
adc
jle
mov
test
aad
mov
inc
mov
adc
jb
fmulp
out
jne,pt
fisubrl
pop
add
fbstp
es
lcall
mov
std
fisttpll
mov
cltd
pop
pop
outsb
popf
xchg
mov
cmp
daa
inc
mov
and
and
popf
hlt
mov
scas
or
mov
inc
lret
js
mov
sbb
mov
dec
mov
aad
mov
fistpll
rolb
inc
pop
mov
xchg
cmpsb
das
push
test
push
ljmp
push
pop
sub
xchg
bound
mov
xchg
mov
jg
add
aas
stc
cld
pop
mov
cmp
outsl
pop
cs
mov
push
call
jecxz
ret
fs
inc
int
in
or
and
fnstsw
sbb
test
inc
push
sbb
sbb
std
push
shlb
or
idivb
fsincos
inc
jns
int
and
lods
jo
add
jge
jle
mov
adc
sbb
sbb
bsf
xor
sbb
jnp
test
nop
lods
push
push
mov
dec
neg
fsubr
clc
insl
int
outsb
add
mov
xor
sbb
inc
push
pushf
lret
xor
pusha
push
fnstsw
clc
add
scas
pop
jecxz
add
dec
loop
icebp
popa
fs
xchg
aam
or
scas
sub
insl
and
mov
das
mov
stos
outsb
cmp
mov
pop
jl
shrb
mov
movsb
adc
sub
fwait
cltd
pop
jle
int
daa
sbb
fwait
inc
cli
xor
jecxz
je
jns
jmp
stos
ret
imul
int3
xor
mov
es
mov
mov
pop
push
mov
cmp
jne
jg
pop
sub
ret
or
rcrl
fisttpl
lcall
or
xor
popa
lcallw
xchg
test
xor
daa
testl
sbb
ret
pop
dec
adc
xor
xor
dec
andl
cmpxchg
pop
dec
test
movsb
daa
jmp
scas
push
clc
cmp
or
or
addr16
fiaddl
mov
out
mov
and
pop
inc
sub
daa
cmp
xchg
ljmp
pusha
enter
sub
cwtl
rcll
jp
iret
or
mov
cltd
pop
out
and
push
dec
dec
hlt
hlt
and
and
xchg
push
popfw
mov
fdivl
dec
dec
mov
cmpsl
add
push
sahf
scas
inc
add
jmp
push
ret
outsb
sbb
sub
xchg
jmp
int3
sbb
dec
add
aaa
mov
xor
ficompl
xlat
cmp
insb
mov
negb
sbbb
mov
pop
jbe
loopne
sahf
push
push
or
cmpsb
ds
mov
inc
xchg
xchg
fidivrl
mov
xlat
xor
push
into
mov
std
push
xchg
mov
inc
cwtl
jp
fwait
push
nop
pop
adc
movsb
ret
rorb
lods
mov
jg
push
mov
sbb
lret
pop
sbb
test
push
sbb
jp
pop
cmp
mov
xor
inc
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
jmp
dec
lds
stc
or
loopne
nop
mov
aad
adc
push
clc
adc
std
sbb
cltd
enter
ljmp
pusha
imul
fisubl
xchg
xor
out
push
adcl
cmp
xchg
dec
cs
ljmp
js
adc
and
lret
fnsave
pushf
dec
xchg
and
sbb
fnstenv
inc
aaa
test
pop
cmc
mov
push
sarl
add
pop
jo
jmp
adc
add
adc
adc
jmp
loop
lretw
addl
aam
mulb
insl
dec
fstl
add
push
xchg
push
hlt
subb
dec
imul
dec
cli
pop
xor
dec
scas
outsb
mov
cmp
outsb
sub
xchg
test
enter
inc
movsl
pop
repz
pop
mov
adc
popa
or
in
pop
aas
dec
out
inc
jnp
or
nop
adc
rcrl
aam
cli
adc
cmpsb
cltd
jmp
rol
scas
sbb
push
pusha
sbb
push
mov
js
movsl
mov
icebp
jne
das
cmp
push
mov
cmpsb
aad
xchg
mov
xchg
sbb
cli
outsb
je
loop
pop
adc
and
jle
ja
push
xchg
or
aam
xor
int3
jbe
lret
xor
jl
sub
mov
inc
aas
and
les
mov
xor
push
shrb
js
dec
dec
cmp
rorl
cli
or
xchg
scas
mov
fimuls
outsl
or
push
aaa
call
mov
add
xor
push
add
ret
mov
enter
out
pop
push
adc
cltd
push
ss
pop
mov
push
mov
pop
sarb
cmc
mov
push
repz
sbb
mov
xor
lret
cld
data16
inc
push
loope
and
push
mov
lds
pushf
push
sti
jge
mov
leave
mov
mov
xchg
adc
push
xor
jmp
test
stos
jne
dec
push
mov
sub
js
adc
std
bound
xchg
xor
out
out
jno
ds
push
cmp
lcall
jne
stos
in
jbe
inc
mov
shl
push
enter
adc
out
mov
std
outsl
incb
jns
mov
lret
ss
push
rorl
or
cmp
in
pushl
aam
dec
and
sub
stc
fsub
sbb
std
gs
pop
loope
shll
loope
jg
xor
lock
jae
rcrb
sub
ljmp
pop
xlat
or
in
gs
sub
mov
outsl
jmp
adc
pop
popa
inc
sub
pop
cli
jno
jge
xchg
aad
adc
xchg
jae
test
push
and
mov
xchg
popf
stos
mov
daa
leave
subb
jecxz
repnz
and
or
test
jecxz
push
sub
xchg
pxor
mov
fildll
lahf
pop
mov
push
sbb
xor
scas
adc
mov
and
stc
test
into
mov
adc
jae
rcl
mov
xchg
mov
decl
mov
sub
aam
pop
movsb
mov
push
out
fstps
enter
xchg
add
mov
dec
sbb
mov
add
and
jmp
inc
gs
ja
xchg
jecxz
pop
lds
mov
das
sub
arpl
scas
fdivs
mov
jmp
or
and
sbb
pop
lcall
push
lock
jp
cwtl
jle
imul
cmp
ret
shlb
loopne
leave
xor
push
mov
mov
push
call
lret
xor
dec
imul
lods
sbb
xchg
js
lea
jb
sub
out
add
sub
inc
mov
and
xchg
mov
imul
push
dec
test
dec
sti
push
ds
cmp
stos
ret
push
mov
or
mov
outsl
jno
mov
jae
add
add
in
cltd
in
dec
outsl
std
fsubrl
and
adc
xchg
repnz
push
push
sbb
inc
test
inc
jl
data16
es
sarb
lret
faddl
or
lods
mov
xlat
cmpsl
out
inc
punpckldq
sub
pop
test
fldcw
cmpsb
mov
repnz
mov
aam
es
call
loop
jne
movsl
js
xlat
pop
es
cli
cmp
jmp
push
out
fstps
fimuls
jne
lcall
inc
pop
push
push
and
mov
leave
addl
push
sub
pop
test
sar
fnsave
addl
arpl
xor
rsqrtps
cmp
mov
mov
dec
mov
and
dec
mov
push
pusha
movsl
dec
ja
lret
inc
sub
add
sbb
add
sub
aad
cld
cs
add
xchg
push
mov
cs
jns
and
adc
inc
push
push
lahf
and
outsl
nop
jmp
or
or
outsb
lcall
int
imul
mov
ss
mov
std
jmp
or
icebp
js
adc
int
in
je
dec
int
mov
cwtl
aas
leave
lods
orl
pop
mov
incb
into
dec
scas
insl
stos
arpl
cmc
testb
ss
lods
dec
sub
dec
pop
je
fidivl
aaa
pand
pop
and
jns
mov
loope
sbb
push
xchg
loop
jo
sbb
das
xchg
sbb
and
add
xor
push
xorl
movl
movsb
push
aad
add
adcb
test
adc
jecxz
inc
imul
aam
fcoms
rcrl
sub
xchg
js
shll
pop
xlat
dec
loopne
call
stos
gs
mov
lods
add
push
popf
dec
int3
cmp
lcall
test
into
insl
jns
push
mov
cmc
js
mov
faddl
inc
enter
xor
and
xor
adc
outsl
xchg
addb
adc
jne
shll
push
dec
inc
or
inc
in
dec
out
hlt
xchg
cmp
xor
add
cld
push
add
cmpsl
sbb
jbe
es
sbb
add
dec
adc
push
clc
adc
jnp
or
or
xchg
iret
cs
and
pop
add
pop
dec
inc
lret
mov
cmp
mov
cmp
arpl
cli
cltd
sbb
adc
pop
imul
insl
jmp
aad
xchg
inc
add
popl
dec
out
mov
jbe
and
dec
mov
pop
inc
pop
mov
or
loope
into
xchg
and
jp
or
sub
test
xchg
mov
inc
jg
inc
xchg
mov
mov
je
push
cmpsb
in
pop
adc
xor
je
push
fildl
pop
xchg
ret
stos
sbb
and
inc
inc
cld
movsb
lods
jg
sub
lret
xor
pop
cmc
outsl
jecxz
popa
push
sahf
divb
out
test
sar
adc
mov
push
pushf
or
cmc
into
mov
jae
pop
sub
inc
sub
cltd
movsl
and
or
xlat
push
mov
dec
fmull
jmp
dec
fcmovu
ss
jle
out
or
inc
test
xchg
push
cmc
add
xor
push
fstps
das
cmpsb
mov
xchg
aas
cmpsl
test
shlb
push
shl
lea
or
dec
fs
enter
stc
bound
ds
xchg
cltd
icebp
cmp
loopne
add
in
cwtl
popa
in
sub
mov
sti
mov
xor
sahf
imul
pop
sbb
jg
fdivp
test
xor
pop
ror
test
inc
adc
mov
jecxz
cli
push
or
mov
mov
sti
imul
xchg
lds
in
push
cmp
test
bound
jle
insl
stos
out
ret
sarl
sbb
leave
jle
add
and
daa
sbb
repz
pop
loopne
js
adcb
ljmp
mov
cmp
xor
mov
repnz
xchg
or
xchg
clc
sbb
in
pushw
pop
cmpsb
cmpsb
lods
or
fstps
push
ljmp
cld
adc
push
inc
pop
cltd
cmpsb
or
shlb
pop
shlb
leave
or
dec
in
mov
loope
ror
jge
push
popl
sbb
cld
mov
int3
lea
dec
movsb
lret
cmpsl
pop
sub
sub
pop
mov
dec
ret
push
gs
scas
sbb
or
rcrl
ljmp
pop
push
outsl
shlb
and
adc
mov
rcl
adc
fcoms
cltd
loop
lahf
stos
out
jmp
xlat
shlb
mov
andb
sarb
ja
jae
jne
movsl
enter
xor
mov
dec
lds
inc
jbe
inc
paddw
sub
adcb
push
leave
int3
lods
in
xchg
mov
hlt
inc
std
xlat
xchg
dec
xchg
add
mov
or
mov
popa
sbb
pop
or
clc
pop
je
in
add
ret
ret
iret
xlat
sbb
es
outsb
aas
insl
jb
mov
mov
in
jecxz
pop
repz
pop
push
stos
nop
sub
ffreep
lcall
inc
js
int3
sbb
xchg
jb
inc
jno
ret
jno
aam
hlt
scas
repnz
hlt
sbb
insb
pop
dec
inc
cwtl
mov
out
or
cli
out
stos
cmp
addr16
mov
adc
sub
push
fwait
and
mov
ja
cld
test
call
mov
stos
push
aam
jne
mov
push
pop
rcll
lea
ret
outsb
pusha
arpl
call
pop
jo
aas
xchg
mov
adc
jae
xor
int
cmp
xor
adc
adc
cmp
sub
test
lock
sbb
mov
cmpsl
xor
mov
xor
xlat
dec
test
ss
cli
mov
add
ljmp
or
pop
sub
jg
pop
cwtl
dec
xor
in
cli
gs
adc
lods
xchg
int3
xchg
repz
pop
aam
add
push
aas
and
cmp
inc
adc
sub
rcrb
rclb
mov
test
sub
mov
incb
and
xchg
enter
xchg
add
ficoms
packssdw
ror
aaa
dec
out
repz
das
orb
popl
mov
addr16
inc
imul
or
stos
subl
sub
das
dec
cmp
imul
add
and
popf
pop
mov
jnp
sub
adc
loope
pusha
enter
sti
pop
push
ss
xor
ret
lahf
cld
fs
pushf
or
test
fbstp
jmp
das
xchg
mov
and
jbe
in
sahf
add
jnp
popa
mov
inc
and
cmpl
pusha
jl
jl
xchg
iret
xlat
int
out
xorb
cmp
ss
mov
imul
cli
push
data16
aas
insb
lret
fldenv
das
jle
push
push
fdivrs
lret
rcrl
test
js
mov
ret
xchg
sbb
push
xchg
dec
add
push
mov
push
pop
sbb
cmp
xchg
and
dec
insb
rcr
leave
movsl
gs
outsl
decb
lods
es
or
fwait
mov
mov
xor
mov
pop
adc
cmpsl
addr16
int
call
xchg
xor
sbbl
jo
bound
pusha
sahf
push
jmp
xchg
jecxz
adc
push
and
imul
test
ret
push
lahf
push
cmpsb
movsb
push
bound
insl
xchg
loopne
loop
sbb
add
mov
nop
push
adc
testl
inc
fwait
cld
sbb
push
fmull
jmp
fs
test
pop
shrb
inc
andb
fldt
jl
mov
scas
fs
fsubr
unpcklps
loop
cmp
sbb
pop
scas
sahf
jmp
push
lea
cli
or
sti
repnz
mov
or
xchg
xchg
iret
clc
fcomps
mov
cmpl
sbb
jmp
push
insb
call
mov
mov
enter
adc
jmp
mov
or
mov
mov
push
jmp
adc
outsb
mov
mov
dec
push
push
push
adc
push
clc
adc
aam
add
mov
sbb
sub
rcll
nop
mov
jle
stc
popa
movsb
pop
add
push
cmp
sbb
dec
and
out
fs
nop
mov
jb
adc
cld
into
and
sahf
insl
add
shll
pop
mov
mov
shlb
jecxz
adc
testb
cmpsl
data16
ret
cld
outsl
or
add
cld
lea
adc
out
sbbl
stos
cmp
pop
xor
mov
aaa
push
aaa
xlat
xchg
ret
in
inc
xlat
shrb
mov
mov
insl
dec
ss
and
inc
inc
loopne
xor
push
add
xchg
add
out
xchg
mov
leave
icebp
addl
sbb
out
push
inc
mov
in
mov
int3
ret
dec
mov
xchg
xchg
test
inc
ret
inc
jg
test
jecxz
xchg
mov
in
filds
push
shrb
inc
jmp
sub
jns
dec
mov
add
fwait
mov
mov
xor
inc
cmp
pop
jp
inc
cmc
loopne
xor
mov
jbe
rolb
xchg
mov
test
aas
int
lret
push
add
std
cltd
daa
dec
int
cmp
add
nop
push
cmpsl
pop
frstor
xchg
jo
adc
mov
inc
mov
rcll
nop
cmp
push
cltd
mov
sbb
scas
push
out
adc
arpl
dec
in
cmpsl
into
idivb
stc
fists
sbb
test
dec
mov
mov
sbb
and
loope,pn
xchg
addl
mov
lret
sub
loopne
mov
push
lods
xchg
inc
pop
shrb
aam
leave
add
stos
jo
xchg
shrl
mov
or
cmp
rcrb
cmpsl
lds
aam
in
call
dec
fwait
and
xchg
mov
test
into
cmp
nop
sbb
gs
push
adc
outsb
cmp
fcoml
sbb
ficomps
and
sub
mov
mov
sub
xchg
dec
pop
test
push
dec
sbb
pop
or
ja
cmpl
aad
or
and
inc
test
pop
fdivrs
std
push
mov
icebp
push
addr16
push
push
mov
cmp
stc
mov
ljmp
sbb
nop
mov
sub
imul
lds
fnstsw
cmp
test
pop
mov
repnz
test
fs
xchg
mov
ljmp
in
mov
mov
mov
jp
mov
das
sub
mov
fcomp
outsb
je
jne
fidivrs
mov
shl
pusha
push
push
jno
push
sub
iret
and
out
sarb
loopne
out
push
dec
pushl
nop
pop
sbb
loope
push
in
shlb
ljmp
jp
daa
jb
inc
xor
push
sbb
enter
test
dec
les
gs
sbb
cs
into
hlt
je
fstps
ds
inc
mov
testb
pop
out
sbb
pop
push
stos
xchg
inc
xchg
xchg
mov
push
ja
mov
push
hlt
jmp
mov
bound
jp
sbb
push
sahf
nop
inc
and
push
fbld
movsb
les
cmp
cmp
xor
cmp
jg
jmp
stos
adcb
sbb
inc
fisubrs
aas
hlt
sbb
scas
push
mov
or
ficoml
pop
jg
shlb
sub
outsl
adc
in
inc
mov
push
repnz
pop
in
sahf
sub
pushf
je
iret
fstpt
pop
inc
loopne
cmp
orl
sbb
xor
nop
jmp
mov
sbb
xorb
jmp
and
adc
sbb
jno
mov
pusha
test
or
cmc
sub
or
cmp
xchg
add
js
push
lret
jl
scas
lahf
rorl
mov
jg
pushf
sbbb
jo
push
xchg
nop
daa
xchg
jae
ss
pop
fstpt
aaa
cmp
shll
subl
pushl
mov
sti
clc
push
ss
or
jle
fwait
sub
cmp
push
stc
enter
in
hlt
xchg
and
push
inc
notl
mov
shrl
jge,pt
jmp
push
cmp
pop
mov
jnp
xchg
fcoml
mov
xor
cmp
bound
repnz
mov
add
jecxz
dec
scas
bound
or
xor
lcall
pusha
mov
mov
pop
inc
mov
dec
jno
stos
mov
pop
pop
adc
pop
cltd
xorl
and
es
mov
fidivrl
cmc
xchg
insl
mov
rcll
sbb
insb
out
or
ja
out
mov
pop
cmp
pop
fimuls
lds
and
sbb
loope
insl
cwtl
xchg
sbb
dec
int3
cmc
xor
xchg
dec
sub
sub
inc
or
fistpl
pop
inc
imul
movsb
test
aas
sub
scas
ror
movq
std
jge
adc
mov
xchg
xchg
mov
imul
mov
mov
icebp
pop
xchg
ljmp
mov
sbb
mov
arpl
test
inc
pop
repnz
inc
test
rol
stos
mov
fisttpl
repz
frstor
int3
dec
lea
movsb
sub
int3
push
cmp
mov
jne
jae,pt
xchg
push
mov
cli
push
mov
out
rcrl
in
std
pop
cmp
outsb
ret
stos
inc
nop
inc
iret
sub
and
push
rcr
xchg
xchg
mov
pop
dec
je
xchg
sub
push
repz
in
lea
xchg
icebp
mov
add
outsl
es
jno
push
bound
dec
cmp
pop
lods
inc
and
sub
fstpl
pop
jle
mov
xor
sbb
inc
mov
lret
push
call
cmpsl
push
shlb
cwtl
mov
lea
inc
cwtl
movsb
push
mov
xor
inc
cld
sbb
pushl
jmp
add
mov
inc
insl
inc
pop
mov
xor
push
clc
adc
or
mov
or
scas
xchg
xchg
and
je
popa
xchg
cs
pop
repz
out
dec
mov
ds
push
push
notb
mov
cmp
xchg
sub
xchg
mov
jmp
dec
adc
test
cli
or
sbb
cmp
mov
fistps
or
mov
mov
sbb
loopne
leave
test
inc
outsb
orb
push
notl
mov
ja
repnz
adc
cmp
test
jns
mov
fisttpll
into
adc
sbb
adc
outsb
lcall
fimuls
lods
jo
jge
add
mov
pop
arpl
int3
mov
scas
pop
adc
mov
cmpb
imul
movsl
jmp
adc
jmp
nop
fcmovb
fdivs
push
cli
or
pop
lods
test
sbb
or
sbb
xor
pushf
push
push
push
push
mov
sub
xor
hlt
insl
imul
inc
lret
jl
ds
jne
jbe
pop
add
pop
js
ror
jl
arpl
icebp
and
iret
fisttps
out
bound
out
sbb
sub
inc
push
hlt
outsb
lahf
add
or
cld
xor
cmpsb
and
int
test
sub
and
or
fdivr
pop
sbb
gs
sub
daa
ret
test
stc
sti
jb
mov
sub
mov
out
mov
loop
mov
xchg
aas
inc
cmp
cli
iret
add
sti
stc
jb
xor
inc
sub
dec
outsb
xor
sahf
xchg
jb
cmp
mov
mov
mov
out
gs
aaa
pop
fwait
mov
inc
shl
outsl
aaa
std
cmp
cmp
fst
lock
mov
dec
push
mov
sbb
mov
push
pop
mov
leave
mov
rcll
imul
shrl
pop
idivl
lcall
aaa
ljmp
pop
mov
pop
ja
inc
dec
popf
sbb
arpl
jge
pop
mov
dec
ret
pop
stc
mov
out
popf
xchg
idivl
subl
nop
or
test
mov
lret
mov
lret
sti
mov
push
int3
mov
movsl
outsl
push
fmuls
in
push
ret
xchg
test
ljmp
mov
jl
lcall
mov
add
xrelease
inc
in
xchg
inc
jp
sub
mov
cmp
push
mov
rorl
arpl
adc
push
iret
sbb
dec
xor
pop
push
and
lret
mov
inc
hlt
xchg
repnz
aas
mov
in
ficomps
imul
nop
xlat
mov
pop
popa
push
jg
stos
mov
jne
adc
rcr
jb
stos
dec
gs
jbe
jp
imul
mov
lcall
push
jns
sub
data16
rcrl
pop
add
push
and
mov
cli
pusha
adc
shrl
sbb
mov
test
mov
and
jle
outsb
test
mov
push
adc
lret
mov
xor
push
mov
jbe
mov
jne
adc
sub
in
jle
decb
dec
daa
jle
dec
jle
add
add
push
dec
or
cmp
sti
enter
mov
jno
rolb
icebp
sbb
hlt
cmp
jp
bound
mov
and
adc
xchg
lret
imul
clc
imul
fisubs
xchg
repz
sbb
pop
and
ja
dec
xorb
lods
arpl
sbb
push
aas
xchg
mov
mov
push
imul
loop
xor
adc
jmp
iret
and
pushf
cmp
int3
jno
repz
inc
sub
inc
xchg
movntps
insb
cmp
dec
scas
loope
dec
movsb
push
adc
daa
lock
lret
add
and
movsl
mov
dec
inc
mov
dec
dec
iret
add
xor
jbe
popf
scas
sahf
xchg
mov
stc
sbb
pop
in
jmp
fistl
adc
xlat
mov
adc
xchg
idivl
sbb
jo
mov
dec
imul
mov
shr
cmpsl
jle
dec
mov
mov
fimull
bound
or
mov
mov
add
mov
es
sub
stos
pop
call
push
cmp
inc
sbb
push
sbb
sub
pop
lret
faddl
movsb
out
and
xor
daa
icebp
dec
add
test
je
jno
in
mov
jge
es
dec
pop
mulb
mov
pop
pop
and
or
add
cmp
and
and
push
loopne
loopne
jl
pop
popf
adc
jle
loope
das
sbb
adc
fcomps
dec
inc
lods
sbb
dec
sarl
fcmovnu
adc
dec
sti
and
sub
inc
pop
cltd
ja
xchg
inc
add
jg
mov
cmc
fimull
pop
fadd
movsb
jno
movsb
mov
push
add
fmuls
jnp
and
and
lods
mov
xor
data16
sahf
xchg
xor
pop
jno
mov
leave
jmp
inc
cmp
les
and
dec
sbb
mov
mov
loop
stc
pop
sub
dec
and
push
in
xchg
fcompl
int
add
fcoms
inc
mov
xchg
add
jno
into
pusha
adc
das
lds
mov
outsl
sbb
jecxz
shlb
mov
and
mov
lret
pop
ret
cmp
and
enter
cld
push
ljmp
adc
cmp
push
fisubl
lods
lret
out
jg
sbb
jno
adc
mov
icebp
push
cli
cmp
les
add
scas
mov
ss
std
fisttpll
or
mov
fs
aam
les
dec
pop
mov
lds
ret
hlt
pop
in
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
jmp
jae
jmp
dec
movsb
xchg
hlt
sub
xor
adc
clc
adc
lea
sub
add
jge
xor
testl
mov
loop
xchg
push
cmpsl
add
add
insl
in
mov
inc
call
adc
inc
inc
fstpl
inc
les
jb
fnstsw
push
xor
cmp
and
xchg
mov
pop
mov
pop
mov
clc
push
in
jmp
add
aad
jge
adc
sbb
cwtl
xchg
adc
stos
and
aaa
clc
inc
xor
mov
xlat
lods
inc
pop
fcompl
js
push
ss
pop
jns
sti
pop
mov
lods
in
mov
popf
adc
push
or
sbb
jns
and
outsb
imul
mov
xchg
std
mov
push
les
out
mov
sbb
std
pop
je
pop
xlat
aaa
sti
add
out
sub
mov
mov
adc
imul
shlb
or
xor
iret
shlb
inc
mov
pushf
les
lret
cmc
stc
jnp
in
adc
jns
add
mov
cmp
sub
push
lea
popf
and
jle
jnp
dec
mov
xor
mov
push
inc
out
dec
fldl
test
jge
aaa
sti
arpl
mov
adc
mov
call
nop
mov
cmovle
add
leave
inc
mov
scas
cltd
fldenv
xor
std
xor
pop
aas
lock
adc
repnz
cmp
push
out
leave
jae
inc
sbb
ret
xchg
push
jae
loopne
or
inc
fwait
mov
shrb
xchg
arpl
test
inc
stos
mov
loop
inc
loopne
sub
popf
inc
divb
mov
test
jnp
in
fcoml
in
push
out
mov
xchg
arpl
out
inc
shlb
pushf
add
movsl
or
mov
add
jno
mov
pop
lret
fwait
xchg
mov
jmp
xor
mov
insl
sub
jmp
sbb
das
dec
or
add
insl
dec
or
or
jae
xchg
cmp
sahf
adc
pop
mov
jne
sbb
jnp
push
and
popf
testl
mov
xor
lds
fdivrs
std
insb
pop
adc
jno
or
mov
mov
dec
jns
adc
mov
cld
ss
std
mov
lods
fdiv
gs
push
sub
sub
jnp
pop
and
or
pandn
mov
mov
dec
dec
mov
push
fsin
mov
loop
lods
movsl
sti
nop
push
inc
stc
mov
ljmp
ret
cltd
xchg
fisubrs
cmp
adc
pop
cltd
gs
mov
sbbb
jb
mov
dec
cmpsl
push
xorl
arpl
mov
clc
popa
pop
and
stos
or
xchg
jo
mov
jmp
adc
mov
push
in
call
loop
sub
cmpsl
adc
dec
add
or
in
movsl
jb
cwtl
push
nop
cmp
push
xchg
xor
cs
shrb
mov
pop
gs
pop
cmp
ja
jge
xchg
xor
jmp
adc
dec
push
test
lret
cmp
lret
jnp
sbb
je
lds
xor
push
test
xor
dec
aaa
push
push
aad
sub
sub
sti
jnp
xor
jmp
test
aad
add
sbb
inc
in
pop
xchg
sub
lahf
sarb
mov
pop
je
pop
lods
jmp
flds
test
dec
xor
jnp
testl
or
imul
cmp
mov
dec
int
inc
push
cmp
or
or
mov
xchg
imul
sbb
imul
mov
cwtl
stos
xchg
dec
xor
dec
cli
icebp
lea
leave
pop
adc
test
jns
jb
and
clc
xor
fwait
lcall
aad
cmp
jns
in
into
pop
inc
jle
pop
or
mov
or
push
in
pop
repnz
fistpll
in
push
jbe
mov
dec
getsec
je
pop
lea
je
inc
in
repz
shl
lods
sub
sti
outsb
sub
sub
add
es
cmp
mov
pop
rcl
test
push
cs
mov
cwtl
js
invd
pop
dec
stos
inc
add
or
loop
inc
push
inc
pop
je
int3
push
out
dec
and
mov
push
mov
nop
cli
and
and
jns
sub
shlb
into
sub
or
sbb
push
jecxz
sbb
fnstcw
mov
push
mov
or
lods
loop
pop
fistps
jne
test
mov
or
fadd
and
fidivrl
sbb
into
jbe
mov
cld
js
or
mov
push
loopne
jp
test
jp
shlb
ret
mov
add
stos
ficoms
jne
jp
add
mov
and
lds
fidivrs
cs
fmul
inc
enter
adc
imul
or
dec
xchg
dec
in
jecxz
jle
or
fwait
push
mov
mov
add
sbbl
xor
mov
leave
mov
mov
scas
add
fmuls
or
loop
cmp
ror
mov
cmpl
xor
mov
rcr
fwait
jmp
push
and
or
xorb
js
mov
cmp
mov
push
cltd
sub
ja
je
xchg
xchg
iret
sub
inc
jmp
jl
mov
fwait
es
and
fs
inc
imul
ss
jp
pop
xchg
ret
cli
out
or
imul
xchg
test
test
out
outsl
stos
sub
mov
fsubp
ftst
pop
dec
inc
add
and
nop
add
mov
lds
push
jne
cli
adc
jecxz
mov
leave
mov
add
insb
dec
iret
jb
fists
out
js
leave
pop
int3
or
xchg
addb
test
lea
jb
lods
fmull
xchg
fimuls
enter
add
or
mov
push
add
lods
jmp
nop
cmp
push
add
es
push
clc
adc
aad
sub
jg
mov
in
adc
jbe
xor
pop
xchg
shlb
stc
pop
daa
cld
mov
pop
jmp
xor
sub
sti
jno
fwait
or
xchg
jecxz
sbb
jecxz
negb
mov
and
jae
and
repnz
xchg
iret
mov
imul
arpl
lods
and
insb
cli
je
pop
mov
sbb
cmp
pop
pop
sbb
je
rclb
incb
mov
add
push
pop
lcall
fcmovbe
or
jge
push
or
lahf
jle
std
bound
mov
jle
insb
mov
xor
ffreep
sub
hlt
sub
stos
sbbb
aam
inc
sbb
or
stos
fsubrs
pop
lea
adc
sti
sub
roll
push
shrl
pop
jge
in
mov
cmp
cwtl
push
adc
fnsave
gs
mov
xchg
xchg
add
adc
mov
push
sarl
adc
push
pop
jb
ffree
loopne
ds
adc
fs
inc
jb
add
insl
mov
push
das
pop
or
mov
sub
mov
jne
push
jp
adc
int3
enter
dec
cltd
lock
adc
jnp
pop
imul
mov
or
idivl
mov
xchg
rcrl
stc
jmp
jl,pt
call
jle
inc
jp
jae
test
sti
add
stc
fcomp
subb
and
cmpsb
sbb
cld
sub
fadds
xchg
xchg
scas
cmp
xchg
add
sbb
and
mov
popa
push
push
ret
pop
mov
or
fcomps
dec
push
xor
cld
nop
nop
jmp
jns
jge
ffreep
jb
inc
sub
repz
xchg
dec
xchg
int
pop
dec
lock
loope
mov
nop
mov
pop
mov
cmp
xor
push
aad
aas
cmpb
pop
iret
add
test
ret
jg
add
test
lret
xor
rcl
cwtl
adc
jo
xchg
mov
sub
mov
mov
enter
pop
in
inc
xchg
mov
clc
jecxz
add
push
insl
jp
outsl
ja
dec
cmp
fs
mov
lods
out
enter
leave
jmp
test
test
jb
add
and
xchg
xorl
and
in
pusha
and
jne
test
mov
dec
cmpsl
pop
int
cwtl
sbb
scas
lods
push
push
jo
outsl
aad
push
pop
int
outsb
fucomi
daa
test
mov
and
jg
shrl
mov
ficompl
pop
cld
mov
bound
aad
jmp
test
andb
push
gs
add
mov
out
fs
outsl
pop
cmp
mov
ljmp
jne
lea
ja
aad
push
ljmp
or
je
and
arpl
loopne
lret
add
mov
fldl2t
cmp
stos
adc
xchg
jl
jbe
or
cmp
inc
cli
and
inc
dec
xchg
dec
jo
or
jmp
mov
mov
cmp
imul
repz
adc
push
fisubs
inc
test
hlt
jno
sbb
jne
lcall
dec
mov
mov
or
or
xor
mov
sbb
jns
es
xchg
sbb
pop
test
mov
xchg
xor
xchg
mov
dec
or
fs
leave
in
push
fwait
jmp
inc
mov
xor
and
mov
adc
xor
movsl
adc
pop
shl
mov
mov
imul
ret
sub
cli
pushf
push
lret
xor
pop
test
push
pop
stos
push
xor
xlat
push
jne
inc
and
dec
hlt
and
cmp
insb
pop
test
xor
xchg
adc
int3
imul
call
sbb
mov
out
mov
mov
mov
pushf
cmp
push
rol
cmp
stc
cmp
icebp
jne
sbb
ja
lods
lds
pop
faddp
stc
sbb
mov
jecxz
aaa
test
lahf
insb
mov
sbb
das
cld
jge
fs
pop
cmp
sbb
movsl
inc
push
out
jle
sbbl
cli
pusha
das
pop
ss
cmp
es
rcrb
ss
div
xchg
and
push
jmp
and
sbb
xchg
out
out
adc
aaa
or
roll
add
push
in
data16
movd
stc
in
inc
inc
jle
add
add
idivl
pop
stos
adc
sbb
inc
aas
ficoms
out
and
and
sub
icebp
test
in
scas
hlt
ljmp
mov
cli
sbb
sbb
daa
lea
pop
jle
aaa
push
daa
cwtl
out
ljmp
mov
push
xchg
inc
or
sbb
in
jno
adc
outsl
and
mov
push
push
das
outsl
in
xchg
push
mov
dec
add
incl
inc
rolb
out
fmull
mov
fmul
test
sbb
mov
lret
movsl
test
dec
mov
mov
outsb
add
add
push
ja
lahf
in
pop
or
ret
mov
or
sbbb
dec
jbe
jbe
movsb
or
iret
adc
hlt
push
xchg
repnz
addr16
add
and
mov
test
or
aad
rolb
jmp
dec
ficompl
hlt
pop
dec
dec
cmp
or
popf
mov
jnp
test
cmp
test
and
cli
gs
xchg
insb
push
mov
and
jle
loope
lods
loope
pop
data16
out
mov
inc
push
mov
xor
cltd
mov
pusha
in
jp
stc
es
std
enter
xchg
add
jge
mov
insl
xor
frstor
mov
lds
mov
xchg
dec
or
mov
cwtl
and
dec
push
xlat
les
jbe
imul
pop
inc
aas
repz
in
je
clc
inc
test
sub
jge
rorb
ret
add
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
jmp
mov
push
pop
or
enter
adc
push
clc
adc
jb
test
fsubl
insb
lret
call
lret
pop
xchg
mov
je
popa
pop
sub
mov
push
lcall
repz
test
mov
cmp
xchg
xchg
pop
cmp
xor
sbb
fwait
add
imul
xchg
and
pop
movsb
push
push
mov
les
mov
inc
jmp
leave
jg
daa
je
inc
pushf
out
call
adc
push
inc
hlt
loopne
and
mov
mov
mov
mov
js
std
movsl
push
dec
add
jne
aam
imul
and
ljmp
int
fadds
stc
mov
add
imul
pop
cltd
pop
stos
cmpsl
stos
inc
ret
cli
into
jmp
int
add
ret
test
and
clc
enter
fadds
fmul
mov
jns
bndldx
and
pop
stc
cmp
pusha
shl
into
sarl
je
test
sti
jl
cmc
mov
jg
out
into
sub
cmp
mov
push
pop
lock
mov
out
and
jle
stc
das
repnz
cmp
repnz
mov
dec
jo
mov
add
push
ss
rorl
jns
cli
fdivs
aaa
push
dec
pop
int
loope
sub
push
repnz
dec
mov
int
pop
push
hlt
xchg
int
fistps
adc
mov
mov
adc
pop
cli
stc
mov
inc
decb
push
adc
test
pop
cltd
in
push
xchg
and
cmp
mov
leave
mov
inc
ret
xchg
lods
aad
icebp
cmp
push
xchg
push
jp
pop
push
xor
jo
popa
dec
pop
jae
lret
jno
mov
loop
in
pop
dec
mov
jae
add
or
ret
add
loope
leave
pop
xlat
pop
cmc
xchg
loope
mov
lock
jno
sub
in
mov
sub
fcomp
push
mov
inc
testb
push
jo
shrb
inc
inc
mov
loop
test
leave
push
jae
pop
test
cltd
fcoml
xchg
stos
leave
push
mov
cs
loop
xchg
jl
repz
popf
mov
xchg
insl
lea
jno
mov
pusha
jp
loope
and
cwtl
shll
lcall
mov
or
aad
addr16
ret
dec
mov
out
xor
icebp
imul
push
xchg
insl
or
mov
clc
lock
push
pop
and
mov
inc
shlb
mov
outsb
lahf
jmp
mov
in
push
sbb
pop
cmp
jns
std
or
xchg
mov
cwtl
pushf
nop
and
push
inc
loop
xchg
pop
out
lock
aad
mov
dec
mov
or
push
lahf
or
push
scas
push
inc
bnd
mov
aam
mov
hlt
andl
push
cmpsb
in
fmul
push
mov
and
out
repz
add
mov
mov
sub
dec
addr16
pop
pop
dec
sbb
and
gs
out
repz
fwait
aas
int3
and
les
mov
mov
fildl
mov
sahf
shl
mov
inc
xchg
mov
mov
je
sahf
xor
push
xchg
imul
and
neg
pop
mov
jnp
mov
sub
sbb
mov
fisttpll
mov
sahf
mov
mov
push
test
lahf
lds
out
jl
es
lock
leave
shlb
dec
push
popa
sub
std
cmp
repnz
dec
mov
movsb
xchg
jae
dec
push
popa
pop
fldl
cmp
xor
xor
or
jle
ret
and
pop
cmpsb
lock
outsb
je
adc
iret
fs
dec
cmp
cmp
add
test
mov
jge
ljmp
or
adc
in
xchg
fsubr
dec
ret
mov
pop
insl
je
sbb
fwait
ret
test
lret
xor
cld
ret
push
fcmovu
xlat
fcomps
jo
lret
jne
inc
cwtl
sbb
mov
or
mov
inc
mov
std
pop
jne
mov
push
mov
loop
je
int
push
lock
push
jnp
lcall
jmp
ret
jo
lods
push
jl
inc
mov
mov
cmp
mov
rcrb
jns
xor
fwait
cmp
cmp
cld
push
and
outsb
mov
xor
mov
jnp
inc
xchg
sti
int
dec
out
push
cmpsb
shlb
add
sbb
xor
pop
mov
add
and
les
push
enter
pop
cmp
mov
xchg
cmp
inc
cld
mov
lods
mov
cmp
icebp
clc
lret
js
in
popa
sbb
inc
jo
sti
nop
mov
push
aam
fmuls
dec
pusha
aad
movb
inc
xchg
jg
push
fdiv
mov
out
rolb
mov
es
fistl
loope
push
jmp
pop
lret
out
mov
icebp
and
mov
or
out
mov
pusha
pop
arpl
mov
addl
xor
mov
lods
fs
push
and
pop
sbb
shrl
es
scas
lahf
arpl
arpl
or
dec
xchg
pop
mov
repnz
xor
idivl
xchg
adc
and
addr16
loopne
inc
icebp
cmp
popf
mov
xchg
gs
and
lea
dec
xchg
rorl
mov
cmc
cmp
pop
cli
popf
test
mov
pop
push
mov
pop
and
and
xor
outsb
rol
inc
out
pop
gs
cmpsb
stc
mov
mov
sti
push
hlt
ljmp
mov
out
pop
lock
pop
dec
xor
mov
test
dec
addr16
les
adcb
push
dec
dec
scas
pop
pusha
sub
sub
daa
mov
stc
ror
jo
iret
imul
jle
dec
mov
inc
shll
xchg
cmp
fbstp
aad
push
ljmp
or
mov
cmc
jl
mulb
pop
in
mov
sbb
and
dec
cmp
adc
inc
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
jmp
loopne
rcl
mov
mov
sbb
std
pop
xchg
cli
adc
clc
adc
arpl
jnp
dec
cs
sub
scas
into
je
int
sbb
movsl
and
add
xor
shl
pop
mov
mov
inc
lds
lea
fstl
roll
loope
clc
xchg
mov
dec
out
out
fistl
mov
rorl
add
ljmp
cwtl
and
xchg
inc
lret
jbe
fnstsw
jno
cmp
clc
mov
mov
cmpsb
bound
xchg
leave
mov
sbb
sub
in
inc
xor
xor
dec
mov
repz
ljmp
repnz
xchg
xor
stos
cwtl
push
inc
out
test
addl
add
pop
arpl
dec
pusha
fs
push
or
push
push
push
lret
pop
cmp
lcall
addr16
xchg
add
or
mov
das
ret
adc
fidivl
pop
or
insl
pop
cmp
mov
stos
icebp
inc
sbb
or
clc
iret
sbbb
or
jno
jge
ret
ret
dec
je
mov
jnp
mov
outsl
push
jp
and
lcall
lcall
cmp
dec
dec
mov
push
js
pop
add
cwtl
aad
mul
pop
ret
xchg
mov
sahf
out
mov
iret
mov
dec
mov
stc
out
cli
sub
dec
pusha
mov
in
jp
sub
dec
clc
jae
mov
sub
rcll
test
in
sub
ret
mov
loop
lds
adc
and
inc
mull
cmpsb
push
pop
mov
lock
int
imul
lret
xchg
inc
mov
and
lcall
pop
std
cmpsl
scas
push
or
mov
ror
outsl
test
and
mov
cmpsb
sub
xchg
in
mov
insl
cmp
jno
ret
cli
jmp
rorb
arpl
cmp
add
xchg
xchg
mov
sbb
and
loopne
mov
dec
mov
pushf
xor
mov
stos
icebp
add
je
xchg
dec
mov
mov
cmp
test
nop
and
into
loop
scas
push
adcb
fs
daa
jb
sub
fsubrl
idivl
outsl
pop
mov
adc
and
lods
inc
cld
adc
lret
jbe
aam
jbe
out
scas
dec
sbb
add
mov
dec
jg
outsb
pop
mov
dec
outsl
stos
add
icebp
mov
jb
push
fnsave
in
cmp
ficompl
adc
adc
mov
ljmp
sbb
lods
inc
add
mov
mov
or
mov
add
xchg
je
loope
out
xlat
and
or
int
xchg
jmp
icebp
or
dec
or
mov
mov
add
aad
notl
mov
imul
gs
jmp
int3
mov
sahf
mov
pop
lock
push
jl
hlt
mov
je
push
adc
stc
insb
scas
sub
sarb
dec
or
jbe
inc
aas
adc
push
gs
jl
jl
loope
push
mov
push
aas
loope
std
sub
sbb
mov
pop
dec
and
or
rcl
das
addb
sbb
sub
out
hlt
add
jo
or
cmp
jnp
dec
test
sbb
std
int3
push
pop
sub
jl
data16
and
das
mov
pop
adcb
or
xor
lcall
cltd
loop
cmp
dec
jno
add
jle
imul
pusha
cmp
inc
add
loop
aad
and
jecxz
adc
mov
imull
inc
adc
ret
mov
adc
scas
sub
adc
shll
stc
cltd
test
div
push
pop
jmp
cmc
pop
mov
sub
mov
icebp
int3
test
mov
inc
add
jl
test
dec
aam
bound
inc
add
sahf
xor
mov
pop
int
xor
xlat
or
outsb
loope
sbb
inc
add
dec
mov
pop
pop
sbb
fsubs
cmpsb
sbb
das
mov
mov
pop
testb
pop
mov
dec
subb
popf
sub
mov
lds
mov
int
jge
xlat
fdivrl
inc
inc
push
inc
pop
cmpsl
add
or
dec
inc
adc
out
adc
outsl
xchg
pop
inc
push
popa
push
sbb
sub
sbb
jle
icebp
jle
pusha
adc
insl
mov
sarb
push
or
jnp
cmpsb
cmp
push
shrb
sub
pushf
test
mov
lcall
and
mov
xchg
inc
mov
xor
ds
aad
aas
dec
inc
and
cmp
addr16
addr16
jle
ja
hlt
sub
imull
ss
adc
out
sbb
test
mov
pop
mov
mov
shll
aaa
outsl
xchg
push
mov
mov
les
movsb
dec
cmc
inc
push
fstpt
add
xor
sarb
cmp
lods
xchg
iret
sahf
daa
or
fldenv
cmp
repz
outsl
inc
std
cs
xor
pop
cld
lods
stos
rorl
fidivs
push
pop
repnz
inc
xor
scas
mov
xor
imul
ds
popa
adc
loop
cli
in
pop
pop
stos
test
adc
test
daa
clc
js
ret
push
adc
std
adcb
adc
loope
nop
iret
mov
cwtl
shrb
repnz
outsl
push
sti
int
add
pop
popf
stos
sarb
sbb
shll
push
out
sbb
call
shl
fbld
pop
in
scas
jecxz
mov
loop
dec
int
test
mov
mov
lea
jle
pop
ss
mov
cmc
lock
sarb
loopne
aas
insl
sahf
mov
mov
lock
sbb
and
lret
outsl
mov
pop
inc
cmp
ficoml
mulb
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
xchg
hlt
rol
xor
mov
hlt
aad
adc
clc
adc
hlt
das
push
stos
pusha
jg
fcomp
cld
popa
hlt
in
adc
add
mov
add
xor
std
fmull
jmp
inc
add
lock
xchg
cmpl
pusha
ss
fbstp
movsl
jle
lcall
repz
adc
xorb
inc
adc
mov
fiaddl
mov
aaa
in
imul
pop
xor
ljmp
int3
test
lcall
das
shlb
jecxz
loopne
or
pop
inc
cld
dec
outsb
pusha
or
push
loope
es
repz
add
movsl
bound
xchg
fbld
inc
call
add
lret
jae
cmpb
arpl
dec
test
data16
jno
lds
fs
faddl
pop
test
xchg
imul
xrelease
ss
dec
fidivrl
mov
and
sbbb
insl
cmpsb
push
jle
mov
bound
mov
clc
sub
stos
mov
leave
repnz
mov
hlt
les
data16
or
adc
pop
jns
push
mov
scas
ss
adc
negl
sahf
push
add
jbe
inc
test
repnz
cli
xlat
jecxz
pusha
jge
inc
dec
inc
insl
xor
fsts
and
sbb
jmp
addr16
inc
xor
inc
aas
lds
into
gs
add
and
inc
or
icebp
stos
push
jl
push
into
aad
lfs
out
loope
jge
mov
insb
cmp
inc
fldenv
jo
aad
pop
imul
cmpsl
xor
mov
adc
scas
pop
dec
mov
repnz
enter
jns
pop
inc
mov
lret
mov
or
inc
jmp
cmp
mov
inc
int3
or
ljmp
in
cmp
mov
insl
stos
ret
and
dec
mov
xor
sbb
cmp
sbb
ss
iret
in
inc
repz
push
cmp
jecxz
inc
sbb
sub
sub
push
and
add
add
in
test
lret
rolb
mov
add
sbb
xchg
cmp
or
adc
test
lahf
je
mov
lea
lahf
adc
mov
fildl
popf
mov
and
jecxz
and
lcall
jg
or
mov
sbb
jb
ret
fsubp
dec
cmp
or
pop
ja
mov
addr16
scas
ljmp
call
insb
roll
aaa
in
test
cmc
push
in
dec
push
scas
repnz
ror
sahf
cmc
xor
movsb
test
dec
stos
sub
outsb
mov
addr16
push
xor
test
and
mov
pop
xchg
sub
jge
in
scas
mov
iret
enter
ret
divb
jmp
add
sbb
or
pop
jle
pop
enter
cmp
add
dec
shlb
xor
call
out
cli
icebp
and
adc
shlb
mov
ret
add
out
loop
pop
mov
test
dec
testb
jle
cmp
shll
sub
sub
jnp
mov
icebp
inc
addr16
rorl
movsl
fidivrl
dec
shlb
xchg
mov
lret
lods
mov
pop
jle
movsl
pop
and
dec
inc
pop
xchg
dec
mov
and
pop
fistpll
jmp
cmc
lret
and
sub
leave
je
insl
test
bound
or
jb
push
rorb
call
mov
sbb
add
stos
add
lds
or
dec
add
stc
xchg
cmpsb
test
cli
sub
push
adcb
adc
gs
lock
hlt
inc
jbe
dec
dec
popf
dec
lcall
add
jp
test
enter
jecxz
icebp
adc
testb
sbb
inc
in
xchg
mov
dec
jge
lods
scas
fucomp
jnp
fwait
mov
xor
loope
std
fsubrs
add
and
sbb
sbb
insb
fucomp
daa
rclb
stos
ret
pop
imul
xchg
fnstcw
aam
adc
xchg
cmc
lock
pop
roll
hlt
sbb
push
mov
xchg
aam
xorb
or
push
adc
cmp
ret
call
fists
arpl
mov
pop
shrl
dec
pop
mov
std
es
inc
je
sub
sarb
cmc
xchg
mov
es
inc
add
jno
outsb
dec
xor
push
inc
jo
jno
push
dec
mov
outsl
add
cmp
in
jl
les
andl
cld
hlt
leave
push
cltd
jle
imul
pop
xchg
cmp
stc
xchg
mov
scas
lret
sub
test
enter
int3
jg
dec
cwtl
and
pop
dec
adcw
mov
popa
insl
cld
dec
sub
scas
nop
popa
sbb
xchg
out
and
loop
out
sbb
jge
adc
idiv
cmp
call
das
ficoms
cmc
xchg
push
lret
test
test
inc
icebp
test
insb
icebp
mov
repnz
mov
and
subl
aad
pop
sbb
cli
add
jge
mov
aas
cmp
xlat
mov
add
fcmovbe
xchg
imul
jp
sub
movsl
mov
leave
inc
jmp
sub
loop
roll
sbb
shll
cmpsl
gs
pop
das
push
das
popf
sub
lods
inc
enter
aas
mov
push
nop
test
adc
orb
dec
dec
rcll
cmp
pop
and
mov
push
push
add
fbstp
lock
cmpsl
cmpsb
hlt
shlb
pushf
jno
fildll
lret
mov
pop
pop
dec
jmp
mov
mov
test
adc
ficompl
xchg
add
and
dec
fidivs
xchg
nop
in
mov
sbb
adc
pop
push
loopne
dec
arpl
jecxz
cmp
fwait
adc
sbb
sbbl
cmpsb
lcall
ret
andps
adc
mov
fucomip
repz
dec
insb
into
mov
sbb
insl
out
ret
cwtl
and
shl
mov
mov
mov
shrd
shr
mov
mov
jmp
jecxz
fstl
inc
xor
and
adc
adc
clc
adc
insl
fdivs
push
cli
mov
adc
xchg
jmp
cli
test
iret
and
mul
jmp
pop
inc
and
sbb
dec
add
repz
sti
pop
jp
xchg
mov
lods
sub
mov
js
test
dec
std
mov
gs
mov
xchg
iret
jecxz
push
sbb
mov
pop
mov
dec
dec
jno
addr16
pop
lods
adc
cmc
xor
cmp
lret
je
lods
mov
add
lods
sbb
inc
arpl
cmp
mov
and
xchg
roll
inc
hlt
inc
sbb
inc
push
add
rolb
cmp
pop
mov
fistps
cld
cmp
dec
lds
mov
push
add
rcr
inc
ljmp
pop
xor
aaa
stos
xchg
nop
hlt
xlat
sahf
icebp
mov
sti
sub
icebp
pop
dec
pop
insl
mov
sub
int3
out
lock
xchg
or
mov
cmpsb
sbb
xor
fst
je
fwait
xchg
cmc
ds
jge
or
popa
or
and
nop
pushf
cmpsl
out
stc
dec
jno
push
shl
repnz
nop
mov
lds
xor
stos
xchg
mov
push
xor
in
stos
pop
add
add
pop
mov
push
cmpsb
ret
scas
jg
jae
dec
gs
xchg
pop
sbb
dec
loope
or
pop
inc
add
inc
int
js
icebp
inc
push
andps
mov
jnp
or
xor
aad
out
loope
out
rcrl
lock
lods
push
rcrl
aaa
sub
mov
cs
cmp
aaa
cli
dec
sbb
mov
xorb
push
outsb
mov
int3
out
xchg
xchg
push
pusha
pop
inc
nop
push
bnd
fs
call
xchg
dec
push
jecxz
sub
call
movsl
popa
sti
je
lods
sbb
test
and
loope
dec
rcll
inc
and
int
inc
sub
sub
cmc
test
cmp
out
mov
leave
lcall
cmp
xchg
ss
hlt
jae
imul
mov
mov
mov
cmpsl
xchg
loopne
jae
dec
sub
iret
movsb
fstps
cltd
jo
jg
adc
inc
push
or
sbbb
pop
or
nop
jmp
aaa
sbb
fadds
mov
or
sub
mov
loope
adc
mov
shrl
cmp
mov
lea
mov
and
push
outsl
mull
je
movsl
add
pop
shll
jnp
dec
aas
sub
das
add
mov
test
add
jo
stos
bound
stc
jnp
push
mov
inc
cmp
push
and
adc
jle
inc
mov
sbb
jb
cmp
sub
mov
pop
leave
or
xlat
pop
sub
add
mov
das
in
roll
sbb
mov
call
inc
add
in
xchg
mov
mov
adc
ss
add
mov
decl
mov
sub
lods
add
mov
cmp
stos
cmp
cmp
in
or
xchg
in
out
aad
pop
mov
int
cmc
aad
jp
fwait
cli
es
dec
subl
sbb
cmpsb
sbb
lret
sbb
cmp
jno
rorb
mov
xchg
pop
lock
adc
inc
push
inc
jp
andl
mov
in
dec
jno
std
push
jb
xchg
adc
addl
pop
push
loopne
ret
testl
mov
mov
dec
movsb
cmp
adc
mov
ds
mov
pop
gs
pop
test
mov
jae
cmp
and
sub
test
lea
ljmp
lock
mov
add
call
xchg
jg
clc
inc
push
jp
out
or
push
les
in
cld
or
sub
rorb
repnz
out
daa
popf
mov
lock
jnp
ret
inc
push
popa
mov
outsl
bound
sub
and
mov
enter
dec
jecxz
in
adc
pop
dec
inc
pop
pop
dec
mov
mov
xor
xlat
frstpm(287
or
imul
push
mov
aad
fs
loope
mov
hlt
add
mov
mov
js
cmc
lea
pop
out
int
mov
jg
int
push
aas
pop
sbb
mov
jne
push
imul
in
loopne
lods
dec
ja
push
aam
js
shll
ja
mov
jne
and
xchg
and
imul
adc
mov
jae
je
leave
add
mov
shrl
or
sahf
imul
dec
orl
imul
push
fdivrl
inc
mov
test
add
adc
sub
fnsave
mov
add
cmp
inc
ja
addb
adc
outsb
mulb
add
enter
int
and
xor
or
push
test
sub
aas
inc
data16
arpl
sbb
add
jmp
or
jge
xchg
into
lods
lods
xor
adc
ss
mov
sahf
lret
or
mulb
mov
mov
xchg
dec
mov
add
inc
leave
mov
sbb
in
les
and
sub
out
dec
adc
ljmp
jge
push
addb
pop
popa
fldt
jnp
std
int
pop
cmp
or
add
out
clc
dec
lods
adc
sub
jno
mov
dec
rorb
fs
add
xlat
inc
xor
aas
adc
adc
xchg
icebp
xor
das
in
or
adc
out
mov
popf
insb
mov
cmp
icebp
push
dec
sbb
cmp
outsl
pop
jo
jno
mov
cmp
mov
mov
shll
fistpll
in
jge
popa
adc
mov
jmp
mov
push
add
mov
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
jmp
pop
mov
push
or
pop
in
fistps
jecxz
adc
clc
adc
arpl
sub
and
xchg
imul
pop
push
sub
mov
mov
or
sbb
or
jb
sub
jg
popa
ret
jnp
lods
test
stc
lods
sbb
jnp
fwait
aaa
cltd
xor
mov
and
divb
dec
or
out
xlat
mov
xacquire
ss
jmp
add
ljmp
iret
out
and
mulb
dec
jb
xchg
orl
gs
fldenv
mov
mov
xor
mov
jnp
dec
sbb
add
insb
stos
xorl
cmp
or
inc
imul
mov
dec
push
mov
or
cmpsl
lock
pop
jmp
into
push
push
cmc
jmp
add
push
in
aaa
lret
lret
loope
loope
add
jnp,pn
cwtl
sarl
or
add
fldenv
pop
sbb
cmp
pop
pop
push
jae
mov
roll
cmp
cli
or
mov
dec
mov
jne
jge
push
pop
int
xor
popf
les
int3
inc
add
fwait
lcall
mov
add
lods
sub
fcoml
das
fs
in
stos
sbb
inc
mov
pop
cmpsl
cld
pop
dec
cmp
add
pop
fldt
sub
stc
clc
outsb
int
repnz
movsb
daa
sahf
ficomps
sti
dec
lret
jle
ficoms
xchg
test
lahf
fucomi
mov
xchg
pop
and
lret
lock
int
xchg
xchg
sahf
push
jmp
cwtl
test
filds
and
xchg
sub
stos
roll
mov
push
sbb
xor
adc
mov
jl
into
push
add
sub
loop
fucomp
xor
and
shr
mov
jne
cmpsl
pop
pop
ss
les
add
loopne
pop
xor
dec
cmp
inc
test
sub
or
dec
sbb
lahf
jbe
push
outsb
aam
ffree
mov
cmp
xor
imul
lahf
sub
cmpsl
xor
adc
push
outsb
fwait
rcr
imul
mov
in
iret
push
mov
inc
inc
mov
push
sub
or
xor
addr16
cld
sub
insb
add
fisttpll
jle
scas
pop
iret
xor
xor
xor
std
sbb
push
fnstenv
in
jecxz
adc
mov
enter
cmp
add
fcoml
push
sub
inc
test
sbb
cmove
mov
adc
scas
or
jo
imul
jle
and
pop
gs
sub
cmp
sbb
shrb
mov
gs
lds
jns
adc
dec
sbb
mov
adc
jmp
psrlw
inc
sub
mov
int3
clc
pop
fbstp
and
std
dec
mov
dec
leave
inc
mov
aad
les
cmp
sahf
test
push
faddl
push
fnstcw
push
inc
add
mov
mov
jmp
sti
clc
pop
ret
leave
arpl
mov
aam
cmp
pop
mov
in
sbb
test
cmp
aaa
mov
dec
push
vphaddwd
pop
pop
lret
dec
clc
sti
xor
js
sub
repnz
push
xchg
pop
cwtl
loopne
sti
adc
movsb
shrl
or
lods
jbe
mov
cmp
and
dec
movsb
daa
sub
jne
out
cmp
push
daa
es
outsl
repz
ds
scas
jne
das
aaa
cltd
cmpsl
sbb
mov
and
xchg
pusha
lods
out
xor
dec
jle
xchg
repnz
repnz
or
int3
xor
movsl
pop
ficomps
jnp
idivl
in
js
clc
aaa
push
xchg
pop
adc
inc
notb
dec
cwtl
cmp
mov
and
inc
lods
inc
les
or
mov
into
addb
ret
inc
scas
pop
jne
mov
and
in
imul
data16
lret
jne
adc
ja
lret
loope
pop
jle
mov
pop
dec
test
and
xor
mov
orl
lret
mov
dec
movsb
jo
int
mov
jnp
test
testl
cmpb
loopne
adc
mov
inc
cmp
and
push
jb
test
cld
fiaddl
dec
scas
popa
adcl
icebp
push
adc
pop
ss
dec
sub
xchg
xlat
shrl
hlt
in
out
pop
daa
and
fildl
mov
xchg
xchg
mov
int3
inc
dec
shr
ror
mov
je
subb
std
ds
fcmovne
push
jb
dec
jns
ror
mov
dec
popf
lret
in
jmp
lret
inc
nop
fldenv
mov
cmp
fstpl
push
pop
add
sub
jl
push
sbbb
sub
sbb
or
lds
scas
push
or
les
jns
pushf
xchg
je
cmc
pop
sbb
pop
bound
rorb
sub
add
sbb
mov
xor
stc
mov
dec
push
stos
shll
daa
in
clc
or
cmpsl
mov
outsl
push
adc
mov
dec
test
inc
fistpl
imul
bound
cmp
or
aaa
mov
xor
sub
in
shll
or
jae
or
pop
cmp
xchg
stos
jmp
push
int
xchg
cmp
ret
addb
sbb
testl
call
int
stc
add
lods
jl
notb
rolb
xchg
jle
mov
push
mov
mov
rcll
cmp
mov
ds
cmp
rcll
sub
bound
mov
jge
add
adc
inc
mov
jo
mov
addr16
push
mov
dec
stc
inc
sbb
xchg
movsb
add
and
arpl
pop
or
das
loope
mov
frstpm(287
orb
and
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
xor
mov
push
and
mov
pop
xor
adc
clc
adc
xchg
outsl
dec
push
mov
add
fs
xor
lods
lea
sub
cltd
xchg
aam
ret
loop
outsl
sti
pop
cmp
pop
mov
xor
push
xlat
cmp
setb
iret
loopne
dec
dec
jbe
fldt
das
jns
sub
pop
jg
and
rcrl
adc
mov
jnp
add
mov
movsb
rcll
cltd
push
inc
repz
dec
iret
decb
xchg
dec
lods
push
mov
push
xchg
push
inc
std
test
dec
mov
and
jmp
mov
insl
je
gs
leave
sub
aaa
xchg
push
or
and
cmp
scas
popa
push
movsl
fdivrp
sbb
mov
test
stc
jno
rcrl
pop
ljmp
lcall
or
sbb
mov
cld
roll
pop
add
insb
sub
idiv
or
xchg
sahf
out
jae
xchg
out
wrmsr
cmp
pop
rolb
fistl
ljmp
iret
pop
add
push
fstpt
rclb
aas
idivl
jecxz
and
scas
mov
leave
push
push
lock
sahf
push
adc
push
std
iret
mov
das
in
lcall
jo
mov
and
cmp
xor
fnstsw
into
ja
jmp
les
icebp
sub
pop
nop
pop
add
cltd
xor
sahf
mov
ja
jo
lret
inc
xchg
xor
nop
jge
pop
pop
push
jg
xor
xchg
pushaw
xor
mov
pop
movsb
jg
addr16
sbb
sub
js
ljmp
inc
cmpsb
jle
das
popa
leave
or
fidivs
jno
cmp
jns
or
sbb
int3
jmp
mov
fwait
cmp
push
dec
sub
jnp
inc
pop
xchg
inc
mov
in
inc
int
jb
loopne
call
jl
test
xor
std
push
scas
out
test
hlt
bound
xchg
repnz
or
test
xchg
jge
adc
cmp
hlt
stos
test
mov
sub
cmp
pop
and
cmp
ss
mov
and
and
push
fwait
icebp
clc
cmc
dec
std
pop
sbb
inc
sbb
adc
and
adc
cli
mov
cwtl
lock
pusha
sarl
cmpsb
add
pop
mov
test
xor
aas
adc
ss
cltd
jbe
out
push
sub
andb
shrb
out
jecxz
cmp
pop
icebp
iret
adc
scas
adc
in
lahf
mov
flds
adcl
int3
sbb
mov
ret
sahf
cmp
in
pop
sub
mov
dec
mov
mov
gs
stc
sbb
cmp
sbb
pop
xchg
scas
mul
push
pop
xor
mov
cmpsb
fdivl
sbb
insb
jno
enter
aas
fsubs
add
mov
lea
jnp
jae
repnz
and
jg
les
cwtl
inc
cmpsl
movsb
mov
in
ret
shl
mov
and
sub
loop
mov
mov
adc
loop
ret
and
lods
and
adc
sarl
stos
fcompl
cmp
aam
cmp
mov
enter
jge
outsl
jnp
xlat
sarl
test
je
ljmp
or
inc
nop
mov
clc
push
out
cs
data16
cwtl
or
enter
lods
jbe
pop
lret
and
mov
repnz
mov
jg
pop
mov
and
cld
outsl
jae
inc
mov
pusha
dec
xor
ret
and
out
arpl
bnd
lds
aad
dec
and
loopne
jae
into
dec
cmp
in
hlt
inc
lods
mov
sarb
add
mov
pop
imul
xchg
mov
push
or
and
adc
mov
das
mov
in
xlat
jne
xchg
add
lds
es
test
ss
fadd
sub
pop
adc
mul
push
lahf
lods
mov
jns
in
mov
jb
rclb
sub
repz
mov
and
fiadds
sub
aas
mov
lahf
mov
shl
cmpsb
add
mov
sti
rcrb
int3
mov
dec
push
aam
jae
xchg
and
daa
bound
mov
or
movsl
arpl
ja
inc
mov
cmp
repz
jb
cmpl
int
adc
push
dec
inc
mov
adc
pop
and
fs
je
int
pop
push
jmp
and
stos
cmp
jg
or
rcrl
pop
pop
mov
daa
or
stc
lahf
fsubr
cltd
lds
pop
jae
push
or
jle
enter
inc
xchg
fisubl
cmp
or
mov
dec
scas
fnsave
out
aad
dec
iret
sarb
add
mov
cmp
int
ljmp
rcrl
and
push
cli
mov
add
test
lock
xor
sbb
outsb
ret
leave
hlt
push
nop
dec
and
mov
aad
mov
dec
ljmp
adc
loopne
inc
shrb
ret
cld
jg
jl
shl
or
jecxz
push
cwtl
adc
dec
and
jecxz
push
jo
xor
insl
pop
rcll
push
jo
push
push
or
mov
ret
xchg
inc
push
adc
cmpsl
repnz
or
flds
aaa
scas
add
fistl
adc
pop
fwait
push
xor
xor
sbb
cli
adc
jns
jge
mov
sbb
fmull
or
push
outsl
bound
inc
icebp
add
std
clc
sahf
xchg
jbe
cwtl
clc
call
sub
push
mov
jge
lret
mov
cmp
shrb
push
xchg
cmp
xchg
sti
and
cmpsb
sub
out
and
addb
fcmovnb
cli
pop
pusha
adc
or
pop
xchg
test
clc
push
insb
in
imul
push
pop
pushf
out
push
push
push
pushf
ds
mov
arpl
data16
xchg
or
fwait
xchg
adc
pop
test
scas
test
imul
enter
insb
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
jmp
popf
scas
add
mov
aaa
shlb
adc
clc
adc
loop
fdivr
fidivrs
fldcw
lock
lret
inc
inc
fwait
stc
push
movl
sbb
andb
xchg
pop
pushf
dec
fwait
ret
push
outsl
test
cmp
mov
gs
in
pop
enter
cmpsl
aaa
daa
mov
iret
sbb
stos
mov
pop
bnd
fcmovnb
test
test
cmpsb
pusha
out
out
push
gs
mov
sub
dec
jno
cmp
outsl
xchg
jp
lahf
cmp
adc
sbb
shl
mov
mov
lods
mov
mov
fwait
xchg
aaa
add
aaa
setns
adc
in
or
sbb
jl
out
or
cmp
sarl
sub
int
sub
ss
push
pushf
test
xlat
xchg
sub
rcll
shlb
enter
rcrb
dec
cmp
aad
cmp
jmp
push
stos
test
xchg
and
sbb
mov
adc
aas
xchg
pop
and
dec
loop
fs
movsb
addb
mov
test
popa
ficompl
rorl
xorb
sbb
faddl
popl
lcall
xor
add
xchg
jae
push
nop
mov
cmp
xor
cmp
test
inc
shll
loop
movsb
je
lcall
xor
inc
in
jnp
loopne
jecxz
jns
mov
xor
inc
add
lods
mov
lock
mov
mov
retw
push
fstl
movzbl
mov
out
push
lds
jmp
out
inc
mov
mov
mov
cmp
es
inc
sub
xchg
ds
mov
mull
mov
push
push
nop
sbb
sub
daa
jle
test
mov
test
cmp
ret
stos
adc
fisttpl
xor
loope
inc
adc
xor
dec
sub
adc
xor
popa
sub
mov
inc
sbb
jge
inc
xchg
mov
fisubrl
add
adc
mov
lahf
sub
dec
mov
das
lcall
dec
js
add
iret
mov
push
jno
pop
les
mov
push
pushw
std
cmc
xor
clc
mov
int3
cmpsl
nop
adc
xchg
pop
xchg
pusha
or
dec
add
jmp
add
jbe
cld
inc
fsts
adc
jle
xor
popa
pop
mov
add
jne
shlb
loop
dec
fwait
pusha
gs
sbb
xchg
pop
cli
stc
out
out
push
add
sub
push
sbbl
mov
sub
fcompl
cmp
in
out
ss
loopne
test
cs
xchg
mov
lcall
and
pusha
jo
pushf
in
mov
test
pop
push
push
push
or
sub
inc
int3
mov
mov
pop
mov
loopne
push
dec
jno
arpl
stc
inc
jbe
inc
cmpsl
fnstenv
popa
scas
mov
mov
add
jle
jnp
jmp
and
pop
call
lret
xor
popa
test
or
js
xchg
jae
nop
xchg
inc
cmp
mov
pop
push
sahf
inc
pop
xchg
sbb
pop
sbb
popa
dec
lcall
cmp
mov
fs
leave
or
dec
lods
lods
adc
sar
sbb
sbb
ret
cs
pop
dec
repnz
add
add
mov
mov
push
loop
arpl
cmpb
nop
imul
adc
cmp
cmp
cwtl
cmpsl
push
push
mov
roll
xchg
insl
ss
sub
lds
je
aaa
mov
in
and
test
xlat
jns
outsl
addr16
shlb
aad
int
xor
fucomp
xchg
xchg
mov
adc
cmp
or
add
mov
movsl
add
jle
das
clc
add
add
ljmp
sbb
repz
add
daa
iret
mov
xchg
cmp
rolb
dec
mov
dec
fcmovb
jbe
cmp
mov
loop
movsl
push
inc
dec
cmp
enter
mov
fldl
lcall
sbb
push
pop
xor
repz
cmp
dec
je
adc
xor
cmp
iret
add
hlt
adc
ljmp
call
ljmp
and
push
aas
adc
dec
pop
pop
or
rolb
push
cmc
or
mov
and
add
fs
and
pop
and
dec
cs
jb
jbe
popf
bound
lods
clc
mov
mov
add
sbb
fbld
push
movsl
mov
mov
cmpsl
push
repz
jnp
fsubrs
push
mov
imul
pop
add
mov
lods
insl
cld
loop
jb
inc
gs
call
rcll
loop
out
insl
ret
pushl
or
mov
cmpb
call
jnp
or
mov
out
dec
cwtl
pop
mov
fsubr
xor
adc
dec
jmp
fists
and
push
xchg
inc
scas
popf
add
pop
xchg
inc
call
insl
cmpb
jge
push
pop
dec
insl
arpl
repnz
test
jmp
inc
sahf
subl
mov
add
lods
repz
rorb
dec
ljmp
ficoml
cs
xlat
xor
dec
jne
pop
pop
js
cmpl
and
adc
xor
cmp
or
dec
lret
aad
das
out
leave
pop
xchg
sti
fmuls
push
mov
and
idivb
mov
cmp
mov
inc
sbb
mov
pushf
push
mov
inc
xchg
add
mov
or
int3
cli
mov
loopne
xchg
lret
in
push
aam
inc
add
inc
rcr
mov
ret
ret
fiadds
sbb
xchg
sbb
or
andb
loopne
cwtl
xchg
push
fwait
pushf
ret
cmc
pushf
test
jp
mov
adc
pop
sbb
out
test
xchg
data16
pushf
imul
dec
mov
jne
sub
pop
and
frstor
pop
divb
rorb
lods
cli
add
out
add
jge
xor
or
jmp
lea
cwtl
sbb
sbb
adc
fs
adc
clc
adc
std
dec
cwtl
push
mov
xchg
adc
in
imul
nop
sbb
movsb
int
pop
jae
inc
divl
mov
testb
mov
mov
sub
add
insl
dec
or
leave
or
dec
pusha
inc
adc
push
xor
pop
test
inc
popa
ljmp
dec
push
or
fildl
adc
lret
dec
lods
bound
or
mov
add
insb
lret
adc
bswap
test
sahf
out
pop
mov
test
fnstcw
jmp
or
adcl
test
mov
mov
mov
and
rcrb
lock
cmpsb
mov
xor
loop
mov
jg
mov
hlt
icebp
inc
ja
or
je
test
adc
cltd
pop
lea
jp
leave
push
leave
pop
and
mov
mov
cmp
jnp
mov
popf
inc
mov
xor
push
jmp
jecxz
fwait
mov
or
xchg
cmpsb
sbb
jl
inc
adc
xchg
int3
adcb
sbb
dec
cwtl
sbb
ret
mov
sub
xchg
ljmp
insl
adc
jnp
movl
aad
test
mov
repnz
inc
cltd
addr16
push
jae
pusha
iret
std
xor
xchg
sahf
xchg
cmc
repnz
sbb
ja
pushf
push
in
mov
dec
cmpsb
sub
daa
mov
push
mov
test
negl
mov
arpl
jecxz
cmp
xchg
xor
repnz
adc
or
mov
and
mov
mov
mov
cmc
into
pusha
jg
mov
cmpsb
push
xchg
sbb
insb
loop
pushf
hlt
mov
lds
mov
cmp
icebp
lret
loope
sub
jb
or
repz
test
sbb
xor
mov
bound
in
xchg
sarb
lea
fldt
dec
and
rcrl
rolb
in
sbb
sbb
out
je
xchg
inc
imul
sti
xchg
mov
xor
cmp
sbb
jno
sbb
mov
push
out
dec
orl
push
sti
popa
out
popf
mov
mov
mov
loope
dec
mov
push
rorl
lahf
into
mov
lods
cmpsb
je
mov
inc
loopne
mov
or
call
xor
dec
stos
gs
sub
xchg
pop
scas
or
insb
jb
arpl
ret
test
inc
mov
adc
cmp
cmc
mov
pushf
inc
movsl
negl
in
and
ss
sub
insl
imul
mov
cmp
jecxz
and
jmp
sti
jp
shlb
pusha
stc
pop
push
fisubrs
xlat
pop
xchg
mov
jg
test
popl
in
ljmp
mov
out
aam
inc
jo
mov
les
xchg
jl
aas
imul
out
jae
xor
clc
xor
ret
ret
xchg
sub
jmp
shll
xchg
mov
xor
mov
gs
cmp
repz
scas
out
leave
inc
shrb
cmpsl
adc
fwait
push
dec
sbb
sbb
stos
sbb
mov
std
rcrl
imul
fldenv
daa
ficomps
push
ljmp
lods
imul
and
gs
add
add
sbb
sub
rcll
inc
es
mov
push
adc
ret
stc
and
mov
out
mov
xor
lea
ss
xchg
dec
xchg
jb
jecxz
in
pop
cmp
lock
sub
cmp
rorb
negb
sbb
add
inc
rcrl
mov
shlb
push
test
inc
and
pushf
or
das
pop
or
insb
dec
or
dec
pop
lret
inc
es
and
push
xlat
iret
cmpsl
push
imul
xor
mov
outsl
push
in
inc
in
test
cmp
mov
jle
out
sub
pop
and
sahf
xlat
xor
clc
in
mov
adc
leave
mov
lahf
out
xor
mov
repnz
mov
fildll
push
fisubrs
push
pop
clc
jo
xchg
fstl
inc
cmc
mov
jle
mov
es
and
sub
js
sub
add
push
lahf
add
icebp
lock
in
pop
sbb
lret
lahf
mov
xlat
mov
pusha
lock
sbb
gs
xchg
faddp
mov
xlat
push
sub
out
stos
fimull
sbb
fiadds
add
xchg
xchg
inc
push
scas
fwait
neg
fistl
fwait
daa
sub
xchg
mov
mov
ja
mov
xchg
dec
add
sub
push
adc
push
add
popf
adc
fidivrs
mov
popa
pop
push
les
aas
outsb
sbb
cli
insb
jnp
fsubrs
add
xchg
je
push
roll
fwait
inc
loopne
cld
daa
iret
aad
movsb
movsl
stos
pop
es
mov
fwait
jns
aaa
flds
dec
bound
mov
into
lcall
in
pop
or
mov
push
stc
stos
jmp
xchg
call
add
and
cmp
into
data16
loop
push
sahf
lret
jmp
sti
push
lea
cmp
xor
cmc
xchg
jmp
mov
adc
loope
adc
mov
mov
sbb
push
xchg
mov
sarl
sbb
outsb
iret
xchg
mov
mov
rclb
adcl
inc
daa
sbb
sub
fs
xchg
rcr
imul
push
or
shrl
orl
push
xor
daa
inc
sbb
out
jecxz
icebp
cmp
inc
popa
or
jle
arpl
dec
out
push
in
and
test
mov
jmp
mov
cmp
test
ficomps
stos
lock
loopne
jb
and
cmp
jg
sbb
fwait
nop
add
movsl
mov
xor
loop
push
dec
out
jle
loop
or
mov
mov
dec
mov
mov
mov
mov
xor
shl
xor
jmp
dec
fisubs
dec
dec
push
out
xchg
repz
rorl
hlt
push
fwait
adc
clc
adc
mov
or
les
loopne
js
and
test
scas
cld
push
lahf
cmp
incb
xor
mov
ficoms
push
stos
in
dec
ja
lret
xchg
bound
sub
lahf
mov
pop
ficomps
pop
add
dec
pop
or
sbb
lods
cmp
push
clc
je
push
cltd
xchg
cld
subl
div
mov
and
inc
imul
xchg
popf
jns
aad
stos
lods
das
mov
mov
mov
push
outsb
and
shlb
xor
pop
fwait
in
pop
pop
mov
fwait
mov
xor
pushf
lret
push
cmp
movsl
mov
lahf
mov
fmulp
xchg
test
std
and
mov
xchg
std
mov
or
ss
sti
aam
cmp
push
stc
lret
mov
mov
mov
jb
aas
sub
xlat
adc
imul
into
mov
mov
and
decb
pusha
add
fldenv
orb
cli
dec
int3
sub
adc
adcl
adc
cs
add
sarb
leave
xor
lea
insl
or
ja
push
ret
and
mov
jecxz
push
push
fisubrl
and
inc
clc
aaa
aad
push
mov
shl
push
push
mov
pop
mov
loopne
lea
fmull
out
push
pop
jecxz
jnp
fdivl
cmp
cmp
sbb
push
xor
sub
xor
mov
fwait
mov
dec
pop
cli
pop
sbb
repz
ret
stos
insb
repz
je
sbb
xor
in
movsb
xchg
pusha
pop
push
jge
add
xor
jne
gs
hlt
cwtl
mov
cmc
dec
out
outsb
xor
stc
mov
out
stc
ss
gs
inc
mov
pop
dec
xchg
mov
mov
int
shll
popl
lcall
popf
mov
test
movsl
sbb
push
sub
pop
mov
pop
mov
fwait
dec
lds
cmpsl
adc
mov
lcall
test
mov
add
bound
or
xor
sbb
sub
xor
icebp
xchg
in
mov
cmpsl
xchg
xchg
push
pop
dec
jne
push
or
lock
cmp
mov
sbb
cmp
notl
adc
cs
fisttpl
scas
mov
add
mov
mov
ret
jo
je
int
xrelease
lahf
push
movsb
cmp
leave
mov
enter
movsb
insl
xor
mov
or
fisttps
xchg
je
nop
outsb
lea
jns
xchg
jo
nop
arpl
xor
sti
or
in
out
and
sub
adc
fldenv
pop
nop
jae
xchg
stc
pushf
dec
stc
mov
xchg
popf
pop
cmp
jne
cmpsb
hlt
sbb
cmp
adc
jae
xor
push
cmpsb
stos
mov
mov
mov
mov
inc
pop
cs
test
stc
movsb
into
repz
jno
push
pop
sbb
xchg
mov
pop
or
out
pop
or
repnz
adc
aas
inc
xchg
notb
mov
data16
decb
js
mov
push
sbb
pop
iret
cmp
imul
lock
lods
movsl
leave
repnz
mov
sahf
fistl
add
cmp
imul
xchg
sbb
out
xchg
into
or
in
sbb
arpl
sub
fildll
sbb
fistps
aaa
imul
jb
pop
test
inc
adc
pop
sti
pushf
jg
dec
or
pop
rclb
mov
mov
pusha
inc
or
data16
inc
inc
xor
call
inc
mov
mov
fadd
out
out
aam
popa
xor
xchg
das
sub
test
sub
dec
nop
adc
lahf
mov
lods
roll
adc
lahf
pop
sub
sub
add
aad
mov
subb
out
rorl
aad
or
mov
push
outsb
fsubr
aas
insl
inc
lds
int
js
sbb
rcrb
mov
inc
scas
jnp
cli
jmp
cmpsl
scas
in
out
sub
xchg
cmpsb
out
mov
enter
leave
pop
or
test
or
rcl
inc
sub
aad
xchg
mov
test
and
add
aas
adc
gs
outsl
fisttpl
in
rcl
inc
loope
push
shlb
clc
shlb
test
push
dec
pop
aas
test
enter
cmpsb
popa
push
movsl
xor
adc
jo
adc
cwtl
and
es
je
xor
xchg
push
and
lcall
aas
into
jns
cmpl
sub
or
dec
lea
fcoml
xchg
jecxz
mov
popa
daa
xor
in
sbb
insb
movlhps
cmovl
mov
pop
cmc
int
mov
inc
scas
pop
add
mov
push
cmc
and
xchg
loopne
idivb
gs
and
sbb
adc
jne
stc
cmp
repnz
adc
adc
daa
jns
xor
mov
jne
pop
std
loope
ja
push
mov
sbb
mov
test
xchg
ficomps
fsubs
aam
popa
sbb
dec
pop
xchg
inc
sub
cmp
inc
inc
cmpsl
inc
popf
mov
arpl
mov
pop
fstl
fmul
dec
test
sahf
jl
adc
ret
cld
loop
pop
inc
xchg
in
sub
adc
movb
mov
sub
jb
cmp
rcrb
xchg
mov
fdiv
jecxz
ret
shll
ret
add
cmpsl
icebp
cmp
movsb
adc
leave
hlt
push
leave
test
push
pop
and
faddp
dec
sub
cvtdq2ps
out
sbb
mov
or
adc
pushaw
js
addb
dec
movsl
dec
pop
xor
or
das
inc
and
fistl
mov
dec
out
movsb
cld
jb
pop
or
sbb
lock
xchg
je
cmpsb
cmp
xchg
stos
pop
psllw
fwait
mov
movsl
pop
ret
mov
enter
jmp
push
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
jmp
cmp
sub
jae
fs
inc
xchg
lea
adc
clc
adc
sub
push
cld
mov
xor
xchg
and
clc
imul
xor
pop
mov
leave
mov
add
stos
insl
out
inc
cmc
outsl
sbb
ja
inc
sub
lahf
add
jl
aam
mov
or
push
test
test
mov
sbb
mov
sbbb
pop
mov
dec
addr16
mov
adc
jp
lock
sahf
insl
pop
cmp
or
and
push
shll
aam
insb
repnz
cmp
cmp
push
dec
lods
aad
xor
outsl
test
mov
fildll
aas
jle
add
repnz
stc
out
int3
push
add
arpl
cmp
lods
lret
iret
aas
rclb
rcrl
and
lcall
fwait
and
call
stos
ficompl
jl
add
lods
pop
jle
ja
and
jbe
jnp
dec
popf
push
test
in
mov
outsl
pop
jbe
adc
add
inc
leave
test
test
cmc
push
js
lock
aaa
xchg
sahf
mov
dec
xor
mov
mov
jne
aam
xchg
push
mov
add
mov
stos
insl
mov
ror
int3
sarb
loop
mov
pop
mov
clc
adc
sub
icebp
add
cmp
cmp
adcl
pop
dec
rolb
out
iret
popf
adc
or
xchg
mov
dec
sub
lea
add
sarb
repnz
stos
js
or
scas
insl
push
sbb
xadd
aaa
mov
fstpt
cmp
das
adc
testl
fwait
push
outsl
pop
pop
gs
mov
in
pop
push
push
mov
pop
cmp
ja
push
xor
sub
pusha
xor
shlb
stc
mov
cmpsl
sti
mov
jmp
std
mov
call
addr16
sarl
aad
xor
mov
mov
imul
adc
ret
and
add
jns
addb
mov
push
xor
and
jae
xor
xor
insb
mov
popa
add
shrb
dec
enter
in
sub
mov
loop
lahf
xchg
inc
pxor
push
xor
insb
jle
clc
fnstsw
cmp
push
and
push
loop
cmpsb
mov
nop
add
mov
cwtl
out
out
mov
jae
sti
popf
in
dec
sbb
stos
test
mov
jae
or
cltd
mov
sbb
mov
push
mov
pop
and
loopne
pop
adc
pop
xor
dec
xorl
xor
mov
es
push
pop
aaa
test
and
jg
xor
sbb
xor
sub
pop
mov
movsl
shlb
sbb
dec
inc
je
pushf
in
cmp
pushf
mov
sahf
adc
pushf
jge
dec
andl
fsubp
mov
dec
mov
dec
add
in
xchg
xchg
mov
jno
or
mov
test
inc
cmp
and
or
jno
jecxz
imul
or
jo
clc
lret
inc
pop
scas
test
scas
push
adc
sbb
inc
test
cmp
or
stc
int3
fsubrl
jb
jl
pop
pop
rcr
push
lods
mov
lcall
sahf
sub
pop
push
mov
movntq
jl
sbb
cmpsl
pop
and
add
add
lahf
sub
pop
push
and
jl
push
push
fcmovb
sbb
pop
out
testl
xor
push
pop
or
repnz
rcr
mov
push
mov
nop
call
sbb
scas
cmpsl
ret
dec
mov
and
lret
js
sahf
test
test
lods
and
cmp
imul
add
add
rcrb
repz
adc
in
pusha
cmpsl
xchg
shll
mov
adc
xor
daa
mov
pop
stc
push
jae
cld
pusha
outsl
cli
sub
pop
test
ret
cmp
out
pop
adc
mov
sbb
or
dec
jmp
data16
sub
fmull
mov
out
push
push
fimuls
or
sub
and
pop
mov
mov
pop
sub
repz
push
stc
loopne
push
lds
out
js
sub
cmp
sarb
movsl
xor
pop
sbb
mov
jmp
stc
cmp
int3
icebp
xlat
or
movsl
fwait
outsl
cmp
xchg
push
in
or
add
dec
sbb
mov
sarb
fistps
jmp
out
pop
xrelease
les
scas
ret
sub
mov
cmpsl
es
in
push
mov
test
fidivl
daa
mov
jne
cld
mov
idivl
stc
mov
pop
iret
cli
push
mov
or
adc
loop
mov
sbb
jecxz
cli
or
ret
out
js
enter
jnp
jle
mov
push
adc
mov
loopne
sub
inc
jb
sbb
jnp
jl
and
lds
fimuls
ret
inc
dec
pusha
test
mov
shll
add
cmp
clc
mov
mov
jns
jmp
push
push
xchg
mov
icebp
cmc
inc
mulb
int
push
jbe
mov
adc
push
or
mov
and
push
fwait
cmpb
and
test
adcb
xchg
fwait
jecxz
rcll
mov
push
sbb
mov
fidivrl
xor
inc
ja
sbb
adc
dec
add
or
mov
dec
lret
lds
push
inc
mov
fists
pop
sbb
sub
xor
jg
and
lret
addb
cwtl
popf
push
mov
and
xchg
movsb
mov
insb
jnp
jbe
sbb
aam
jmp
arpl
shrb
aam
jecxz
mov
out
mov
iret
int
pop
push
or
shr
mov
mov
or
mov
mov
push
pushl
push
jmp
jmp
or
aam
mov
inc
aad
adc
clc
adc
pop
xor
movsl
fistps
sub
sbb
rcrb
jo
stos
aad
jmp
cli
push
xchg
jmp
mov
scas
adc
xor
jne
sub
jb
add
jmp
jge
sub
into
scas
push
xchg
cwtl
push
fcmovnu
mov
imul
inc
pushf
xchg
or
fdivrl
mov
or
jl
fwait
add
cmp
inc
push
addr16
cmp
out
and
add
xor
lret
call
pop
insl
in
dec
ficompl
insl
leave
mov
fistl
push
inc
jecxz
fcomps
cwtl
fisttps
into
cld
xor
lahf
stos
mov
dec
inc
in
call
mov
mov
fistpl
push
fmull
pushf
mov
xchg
sarb
and
or
xor
push
test
xchg
stc
sbb
cltd
adc
in
cmp
test
or
lods
sub
xchg
cmp
fadds
push
sbb
test
aaa
add
hlt
sahf
cmc
inc
aas
pushf
shrd
in
dec
add
jecxz
lahf
or
decl
fsubrl
das
jbe
dec
fwait
adc
inc
cmp
rcrb
or
stos
pop
test
sbb
negl
pop
xchg
scas
pop
cmpsl
pop
int3
icebp
fwait
inc
adc
les
mov
insl
outsl
in
dec
mov
inc
inc
pop
jae
fs
xor
inc
mov
push
xor
mov
mov
push
stos
sar
cld
and
xchg
dec
mov
rorl
xor
aaa
pop
and
inc
add
inc
jo
ror
mov
cld
punpckhbw
xchg
jp
push
pop
mov
jg
popa
pop
shll
jl
ret
sub
pop
je
das
ljmp
xchg
cld
jmp
dec
cmp
movsl
mov
stos
jns
add
subb
subl
sub
shlb
mov
cmpsl
adc
xchg
and
gs
jmp
jo
fcomps
cmp
xor
fcmovbe
mov
out
les
jecxz
stos
lret
xchg
dec
ja
dec
xor
or
jecxz
gs
mov
sti
imul
dec
push
popf
int
inc
inc
jmp
add
aaa
in
inc
mov
lods
adc
stos
popa
mov
insb
cmpsl
fwait
xlat
test
jmp
js
push
push
or
pop
mov
lret
xor
cmp
inc
decb
sbb
ret
pop
shr
inc
outsb
xchg
lods
iret
adc
fsts
out
dec
xchg
adc
sbb
sub
mov
cli
pop
nop
jns
pop
push
shlb
ja
mov
push
rclb
ss
mov
in
in
aaa
es
jae
scas
sbb
adcl
mov
fsubl
jae
push
or
adc
or
fcom
sub
sbb
fcomp
movsl
push
pop
jae
int
pop
add
jns
mul
out
out
and
leave
in
mov
mov
add
add
pop
adc
jbe
and
sarl
jl
mov
mov
lock
cmc
jno
out
imul
push
sbb
xchg
push
addl
cmpsl
pop
jp
gs
mov
mov
sub
addb
bound
lods
int
cld
daa
lds
loopne
add
js
jb
xor
imul
and
sub
or
mov
jge
xchg
insb
mov
xor
pushf
stos
rcll
add
mov
dec
jmp
dec
add
xchg
lret
dec
std
imul
mov
mov
pop
shl
jns
push
and
pop
add
mov
jns
cmp
cld
xor
sbb
popa
pushf
shll
or
fcmove
cmpsl
xchg
xchg
ljmp
mov
ds
sarl
mov
fcmovnu
outsb
add
dec
sarl
pop
jmp
inc
dec
test
mov
sbb
sahf
mov
inc
mov
push
ror
push
pop
add
movsl
and
bound
adc
nop
hlt
mov
or
ret
es
icebp
xchg
cmp
push
inc
push
xor
scas
cwtl
cltd
xchg
jp
cli
add
or
jns
jae
lea
push
mov
add
pop
mov
sti
or
lock
iret
test
xor
clc
cs
je
cmpb
in
out
das
xchg
dec
out
pop
aam
add
xchg
fs
add
stc
jo
adc
aaa
or
cmpsl
shll
xchg
cltd
arpl
fsubrs
mov
lcall
sbb
lret
test
mov
daa
mov
mov
fmull
pop
inc
lods
jo
lea
imul
dec
mov
shlb
insl
aaa
or
out
sbb
sbb
push
xchg
jno
frstor
rol
test
mov
test
or
lahf
ret
add
pop
push
or
and
hlt
movb
fidivrl
sbb
nop
test
push
cltd
jb
lret
mov
pop
mov
push
in
pop
jnp
mov
or
jl
jae
dec
rorb
or
sub
orl
aaa
repz
mov
or
jns
and
add
sbb
ret
loope
xor
in
jne
lret
xchg
sub
xchg
lcall
cmc
iret
cmp
xor
and
push
add
mov
loop
out
clc
lret
pop
cmp
or
inc
arpl
xor
push
jp
mov
imul
xchg
jns
andb
cmpsb
mov
dec
imul
pusha
pushl
xchg
je
sti
int3
iret
test
mov
pop
jmp
repnz
stc
dec
lea
jg
or
mov
cmpb
pushf
jb
loop
movsl
sub
cmp
mov
jne
repz
lds
addb
testb
mov
jb
ja
mov
adc
pop
icebp
jmp
or
cld
push
add
or
in
enter
imul
xor
push
clc
adc
inc
loope
push
push
and
push
jp
add
xchg
std
push
mov
lea
fcomp
jl
push
sbb
fdivs
jge
mov
je
scas
fisttpl
repnz
and
mov
sbb
add
pop
in
mov
fs
inc
jb
mov
inc
xor
test
xchg
sbb
adc
inc
push
dec
fsubr
cltd
xor
and
jne
adc
leave
and
jb
cmpsl
jle
sub
flds
mov
into
pop
mull
mov
and
outsb
jo
push
lret
pop
or
sub
out
cmp
jg
mov
jb
insb
inc
mov
mov
inc
mov
fbstp
dec
push
cmp
mov
ljmp
xor
int
add
xlat
inc
jno
js
out
bound
xchg
test
das
int
mov
cmp
pop
jae
mov
scas
scas
jo
dec
aad
push
shrb
or
push
and
mov
cmc
push
out
mov
int
pop
nop
jle
cmp
adc
inc
xlat
ds
int3
dec
scas
fucomip
jle
lock
leave
sarl
mov
fldt
scas
sbb
fs
jp
scas
push
xchg
addr16
sbb
adc
aas
insb
push
fsubr
imulb
mull
sarl
inc
dec
inc
test
xchg
xor
icebp
mov
dec
jo
mov
push
dec
stos
rcrb
xor
das
mov
jnp
dec
lock
dec
and
or
inc
xchg
mov
repz
insl
lods
andl
repz
push
daa
mov
xor
js
arpl
mov
and
dec
mov
test
test
xchg
xchg
push
mov
jecxz
pop
mov
gs
jb
fs
dec
mov
sbb
mov
bound
sbb
mov
mull
push
test
movl
test
pop
add
or
cs
mov
invd
sbb
in
cmp
lcall
imul
mov
add
stos
aam
sub
outsb
rcrl
and
sub
adc
add
les
js
leave
imul
notl
inc
pop
mov
cmpl
ret
sub
leave
xchg
sbb
mov
jl
add
enter
pushf
dec
xchg
inc
jmp
pusha
xor
aaa
sub
hlt
in
add
addl
jbe
inc
test
cmpsb
je
divb
je
arpl
rcl
mov
mov
ljmpw
or
mov
pop
rcrl
shll
cmc
and
push
iret
xchg
mov
push
int
movsb
stos
push
lcall
jbe
pop
pop
daa
ja
dec
adc
loopne
xor
ficoms
and
sti
mov
pop
mov
lcall
je
jl
sbbl
rol
adc
jo
xor
mov
lret
sub
sub
jb
sahf
mov
cwtl
in
push
mov
lea
dec
sub
xorl
loope
mov
and
mov
std
das
inc
pop
sub
inc
fnsave
add
lcall
pop
jecxz
jle
mov
imul
push
sti
xchg
rcrb
out
push
movsl
and
push
mov
outsl
push
sbbl
inc
lret
scas
or
xchg
cwtl
push
mov
outsl
mov
rcll
push
pop
xor
je
dec
push
je
xor
repz
adc
jmp
mov
or
fists
mov
pop
push
loop
push
aad
cli
xchg
mov
inc
call
cmpl
dec
xlat
push
pop
sbb
fidivs
jmp
and
dec
or
or
add
mov
or
test
je
les
mov
loope
mov
mov
movsl
cmpl
or
and
jo
fwait
inc
and
inc
sarl
mov
cmp
cmp
lods
enter
and
and
push
and
pushf
mov
or
sarb
es
pop
push
xor
mov
mov
loopne
jg
aad
repz
mov
arpl
mov
xor
or
arpl
loop
or
das
ss
push
pop
jnp
lahf
mov
testb
push
clc
cwtl
test
inc
jmp
mov
stos
mov
sbb
clc
nop
add
xlat
pop
push
loopne
sub
cmc
cmp
lret
adcb
rclb
sbb
mov
mov
insb
xchg
sub
mov
and
nop
xor
inc
arpl
gs
fsubl
mov
xor
fldenv
and
pop
or
jb
hlt
add
mov
cmp
pushl
add
pop
cli
push
sub
sub
pop
into
sbbl
and
sbb
sub
or
inc
or
scas
into
hlt
xor
push
cmpsb
stc
xlat
lods
add
adcb
dec
lods
or
mov
cmp
gs
iret
sub
jmp
lods
scas
fstpl
jo
push
mov
shrl
mov
ret
jb
sub
sub
cmp
cmpl
sub
and
xor
pushf
cmpsl
scas
mov
pop
jnp
lock
movsl
or
mov
add
into
call
int
mov
out
pop
cmp
fwait
outsb
push
outsl
push
cmp
jmp
and
js
mov
cmp
repz
enter
outsb
jnp
lret
jno
push
or
in
mov
cld
aaa
repnz
xor
dec
jae
cmp
mov
sub
and
aas
lret
mov
mov
ret
jns
or
sti
scas
jle
sub
icebp
or
rcl
cmc
cmp
add
pop
pop
and
inc
xchg
imul
int
push
popa
add
jmp
in
cmc
dec
stos
dec
sub
add
or
push
jne
adc
clc
adc
shlb
xor
stos
mov
cld
lret
int3
jge
xchg
sbb
popa
mov
arpl
sub
add
add
int3
add
and
test
repz
mov
cwtl
xor
mov
scas
sbb
stos
mov
add
clc
stos
js
xorl
adc
cmp
mov
lahf
cld
je
lret
jecxz
jb
pop
mov
fmull
scas
lds
lcall
push
sbb
hlt
dec
fwait
or
ds
dec
daa
mov
mov
xchg
push
cmpsl
jno
out
push
mov
sbb
sbb
aas
add
mov
mov
or
rorb
loopne
sub
cltd
or
cmp
insl
scas
xchg
pop
push
movsb
cmp
push
jns
clc
pop
jne
cmpsb
cmpsb
pop
cmp
sbb
push
ja
fidivl
cwtl
testl
mov
dec
pop
xor
fstp
jmp
sub
bnd
pop
mov
xor
or
inc
pop
test
push
sahf
inc
lock
inc
pop
dec
pushf
sub
dec
cmpsl
mov
lcall
mov
push
pop
mov
push
cld
mov
add
or
mov
push
mov
mov
sahf
sahf
lods
adc
cmp
loope
lods
cmp
cld
cmpl
pop
stos
dec
sbb
or
xor
mov
and
mov
rolb
arpl
addl
xor
int
mov
push
adc
aad
pop
leave
popf
movsl
ljmp
xchg
sti
into
je
adc
jmp
mov
mov
mov
pop
mov
fistpl
sub
lds
push
xor
mov
mov
add
pop
pop
mov
outsb
and
stc
xor
xor
shrb
mov
add
aaa
stos
int
gs
jl
scas
sub
scas
testl
add
mov
in
sti
inc
leave
pop
sub
loope
je
sbb
cmp
adc
xchg
lahf
push
jg
fsts
insb
add
and
jg
ret
lock
dec
shlb
ret
ret
or
push
mov
lcall
pop
sub
mov
pop
xlat
and
xor
test
cltd
pop
popa
clc
mov
rcll
in
loope
or
inc
bound
push
sti
jo
pop
push
mov
aam
inc
jo
std
sahf
out
sub
outsl
test
push
cmc
jo
dec
test
inc
cmp
repnz
sub
insl
int
cmpsl
lret
adc
adc
jae
xchg
cmpb
mov
ja
sbb
push
xorb
and
fcoml
jae
clc
into
stos
push
sbb
xchg
jb
jmp
fadds
xchg
mov
jo
add
pop
push
sbb
add
into
push
pop
fstps
addr16
repnz
insl
inc
outsl
daa
pop
jb
aaa
push
or
mov
sbb
mov
daa
mov
jns
or
or
test
xlat
stos
nop
outsb
enter
jb
cmp
push
push
aas
mov
mov
call
sbb
and
repz
add
push
subl
lahf
cmp
aam
scas
xor
pop
out
add
dec
loope
shlb
addb
fneni(8087
jb
out
sub
pop
lds
dec
adcb
sarb
lock
jo
fs
jmp
lret
sbb
jnp
dec
test
fidivl
daa
loope
sub
ja
cltd
jl
repz
in
f2xm1
pop
cmp
sub
mov
fwait
xor
xchg
shlb
push
mov
mov
lock
fldenv
sub
push
jo
xchg
roll
pop
inc
imul
test
iret
sub
pop
scas
jge
or
push
cmpsb
cltd
jmp
pop
cmp
mov
jae
jecxz
mov
push
das
adc
int3
movsb
repz
movsl
je
jmp
int3
std
push
daa
mov
push
in
leave
and
fildll
mov
mov
xor
push
mov
mov
xor
or
xor
stos
mov
shll
scas
hlt
sbbb
fnstsw
mov
lds
inc
mov
fs
sbb
inc
repz
sbb
loop
mov
out
pop
adc
mov
adc
jno
clc
inc
fstl
aaa
adc
pop
cmp
daa
and
add
popf
jb
mov
xor
fsubrl
rol
push
mov
popf
repz
scas
jne
pop
adc
hlt
aad
ss
jmp
cmp
add
aas
fwait
sti
inc
shll
mov
out
jmp
ror
jmp
call
imul
and
sub
ret
xchg
sub
rcrb
mov
cmp
mov
add
js
lcall
iret
adc
aam
jl
rcr
and
lcall
les
imul
fsts
push
cwtl
popf
cli
xor
fmuls
repnz
jp
das
addr16
dec
adc
xor
mov
push
pop
jno
cld
push
rcll
sbb
jno
xchg
jb
mov
mov
sbb
loope
pop
sbb
push
mov
scas
pop
dec
fidivrl
cwtl
xchg
repz
leave
lock
rclb
cltd
pop
adc
jg
repz
mov
arpl
mov
ficomps
jmp
js
pop
int
shrb
inc
add
xor
ljmp
das
and
in
pop
pop
add
xor
sti
jle
jns
daa
and
daa
xchg
ror
fimull
sub
addr16
and
movsb
popf
in
mov
insb
movsl
xor
mov
inc
enter
test
roll
stc
es
das
or
es
xor
dec
and
stos
clc
shrb
je
cltd
into
mov
push
xchg
test
pop
cmc
sbb
insl
popf
pop
mov
xor
sahf
dec
aas
jl
hlt
mov
ss
test
js
push
mov
shrd
jmp
sbbb
pop
mov
pusha
push
push
out
cmp
pusha
insb
add
adc
push
cmp
add
add
cmp
jne
loop
out
call
rorb
jmp
xor
push
lods
mov
mov
gs
sbb
push
mov
stos
mov
scas
pop
cmp
out
cmp
adcl
sub
lds
fisubrs
daa
or
inc
push
leave
or
je
sub
adc
and
sti
gs
fidivrs
dec
cmp
aaa
jle
sti
pop
push
cmp
scas
jb
jl
shll
test
push
es
adc
dec
adc
js
sub
dec
sub
leave
lods
loop
inc
pop
add
mov
outsl
dec
aad
sub
add
sbbl
mov
loop
inc
aam
mov
push
cmp
lods
adc
out
ds
xchg
ret
add
lods
xor
cmp
jae
in
inc
fdivp
aam
xchg
rolb
pushf
xor
repnz
cmp
pop
sbb
xchg
mov
clc
xor
push
sti
jg
adc
adc
fnstcw
mov
jg
mov
and
jno
jle
xchg
lds
gs
fnstenv
sbb
jecxz
jne
and
push
mov
test
xor
mov
mov
pop
pop
nop
cmp
pop
fadds
ljmp
aam
inc
pop
adc
dec
pop
adc
mov
push
cmc
or
fbld
pop
xchg
fdiv
add
sbb
mov
or
push
bswap
lods
outsl
ret
sar
in
xchg
aad
mov
jno
xor
pop
loop
fs
xchg
stc
rcll
cmc
adc
out
ds
and
adc
pop
pop
jl
inc
aam
scas
movsl
mov
aaa
and
dec
jne
xchg
adc
cmp
sub
gs
add
pop
sti
adc
jns
xchg
das
adc
or
pop
cs
or
and
push
out
jnp
push
xchg
cmp
enter
add
sarb
sub
mov
adc
xchg
mov
cltd
inc
xchg
shrb
and
mov
push
push
push
ret
pop
out
bound
inc
pop
lods
mov
push
inc
mov
xchg
and
cltd
mov
repz
mov
test
sbb
lea
mov
push
cltd
mov
mov
dec
inc
and
mov
mov
test
sub
mov
add
cmp
pop
pop
xchg
nop
inc
cmp
mov
test
rcrb
test
jno
lods
xchg
jp
cmp
push
loopne
addr16
push
int3
leave
mov
pusha
push
sbb
mov
cwtl
testb
lods
mov
shlb
xchg
addr16
or
stos
cmp
and
negb
mov
mov
and
add
pushf
xchg
jle
xor
adc
jo
pop
mov
or
shl
mov
ja
fnsave
mov
push
hlt
je
icebp
mov
repz
mov
add
and
jnp
add
add
repnz
and
and
jbe
jno
and
ds
pop
loop
arpl
fisubs
push
sbb
jb
adc
rcr
arpl
mov
test
adc
jge
dec
sub
xor
mov
outsl
jg
jne
cmp
push
dec
shll
idivl
in
cmpsl
fwait
scas
add
clc
les
imul
sbb
cs
int
imulb
out
ss
sbb
in
lret
lret
and
repnz
jmp
xchg
les
stos
nop
push
int3
sahf
jae
add
pop
mov
push
dec
repz
xchg
fs
scas
lds
das
rclb
iret
sbb
jnp
sahf
imull
aad
or
sbb
sbb
lock
fdiv
pop
fistl
xor
mov
scas
fcomps
loopne
inc
aad
xchg
dec
sbb
lods
or
data16
lods
add
test
rorl
adc
inc
and
in
pop
jl
test
cmp
xchg
xor
add
adc
lds
repnz
flds
mov
jo
shlb
push
aas
push
mov
push
and
mov
sub
sbb
mov
push
testl
sub
inc
mov
push
out
fbld
sbb
or
int
xchg
shl
cwtl
push
sub
arpl
fwait
outsb
xchg
movsl
mov
lock
pushf
ret
inc
outsb
scas
ljmp
jl
mov
xchg
test
rcr
pop
sbb
jno
mov
xor
pop
jns
iret
cmc
hlt
jns
rorb
mov
cmp
jmp
in
fstpt
mov
popw
sbb
cmpsl
ret
xlat
cmpsb
pop
popf
daa
mov
mulb
aad
call
scas
push
bound
push
ja
enter
adc
and
jmp
xchg
ds
inc
push
xchg
mov
addr16
int
sahf
adc
inc
adc
std
push
fisubrl
xchg
sub
inc
dec
jge
fldt
popf
cmp
in
xchg
cld
test
push
xor
rcll
lea
push
addl
cwtl
int
cmp
sub
lock
cltd
xchg
sahf
or
cs
mov
cwtl
cwtl
add
idivb
fstpl
mov
mov
dec
in
fcomps
in
scas
push
dec
enter
or
aaa
sbb
addr16
sbb
mov
lea
addr16
and
xchg
xchg
int
test
mov
bnd
arpl
test
hlt
fwait
loopne
inc
mov
pop
out
push
push
loope
testl
out
aad
or
scas
cmpsb
inc
adc
jl
sbbl
jl
inc
icebp
xor
mov
jbe
orb
fsts
dec
inc
xchg
xchg
sti
xchg
sbb
cmp
pop
sahf
add
test
add
inc
push
rolb
sub
out
cmp
xchg
shr
shr
xor
push
xor
jmp
mov
push
push
push
mov
outsb
incl
aam
adc
clc
adc
popf
shlb
loope
out
xor
adc
sbb
add
popa
and
enter
mov
nop
mov
add
es
aad
es
dec
bound
lret
push
dec
out
cmc
mov
mov
mov
test
add
lds
xor
fisubs
sarl
xchg
dec
xor
rcll
mov
mov
push
mov
mov
xor
mov
xchg
mov
mov
mov
ficompl
mov
lds
dec
insb
test
sub
leave
je
mov
push
push
push
pop
mov
js
dec
std
push
inc
negl
cltd
sub
pop
jo
in
insl
sbb
dec
inc
mov
in
popf
adc
dec
sbb
lods
push
push
sarb
fwait
pop
fsubrs
ja
xor
repnz
pop
shr
loop
sarb
mov
scas
cli
lret
scas
sub
cmpl
jecxz
xchg
ljmp
ds
cmc
loope
cwtl
imul
adc
or
fcomps
xor
hlt
and
lock
mov
out
dec
icebp
fstpl
adc
and
pop
fstps
jg
ret
movl
mov
loope
jg
adc
dec
xor
sarb
popf
xorl
repnz
rorl
mov
mov
mov
inc
cmpsb
mov
xchg
aad
and
add
stos
inc
fnsave
mov
cli
inc
add
push
test
das
pushf
pop
jnp
sub
pop
popf
adc
or
jae
dec
sbb
add
sub
inc
cmp
cmpsl
xchg
call
mov
cmpsl
push
mov
mov
mov
mov
cmpsb
cmp
lods
sysret
out
sbb
pop
mov
out
es
mov
ror
into
push
mov
cmp
add
data16
je
loopne
push
lods
loop
cmp
mov
inc
mov
pop
sub
pop
sub
cmp
mov
lods
sub
fists
pop
sar
stc
aam
xor
dec
cmpsl
adc
adc
inc
jecxz
xchg
std
imul
out
mov
ret
andb
test
std
or
shr
jae
and
call
sbb
inc
cmp
xchg
rcll
sub
add
js
movsb
xchg
fisubrs
mov
in
xchg
pop
je
loop
sub
push
insb
mov
adc
cmpsl
clc
cmp
mov
in
shl
cbtw
test
mov
mov
cld
mov
enter
inc
pop
inc
aad
test
cmp
pop
arpl
mov
out
les
lods
dec
sub
adc
test
push
adc
cmp
rcr
orl
js
inc
xchg
ds
sub
filds
push
jge
pop
cmp
rorl
out
insb
mov
rorl
cmp
push
decl
mov
scas
js
xor
sub
fbld
lahf
lret
ljmp
in
insl
jmp
pop
push
push
scas
push
push
push
mov
stc
sbb
fstl
flds
mov
sbb
pushf
xchg
mov
pop
sub
int
lods
mov
pop
ja
fwait
dec
sbb
push
pushf
addr16
mov
ds
mov
sbb
int
int3
sahf
insb
sbb
adc
out
xor
inc
aad
dec
fcmovnb
inc
adc
out
push
dec
or
dec
imul
gs
stc
push
add
dec
jg
and
call
bound
pop
cmpsl
lahf
push
xchg
jp
fsts
mov
pop
sbb
xchg
das
lods
and
xor
imul
or
sub
xor
mov
cmp
or
call
sub
xlat
mov
fistps
ret
sub
cmp
push
repnz
fs
aad
scas
adc
cmp
shll
add
adc
pop
negl
ljmp
call
std
or
out
mov
loop
roll
pop
pushl
scas
test
outsb
test
fwait
loopne
mov
flds
js
stos
loop
jae
addr16
test
arpl
dec
test
cltd
mov
cwtl
pushf
jbe
arpl
in
mov
mov
sbb
dec
inc
push
insb
sti
mov
xchg
pop
in
aaa
inc
lods
pop
lds
mov
or
pushf
out
add
add
add
pushf
pop
jnp
dec
adc
mov
ret
and
mov
cwtl
and
out
hlt
lcall
xchg
push
stc
test
mov
cmp
dec
out
jo
xor
cltd
xorb
jge
insb
in
mov
jp
cld
or
aad
leave
out
or
push
out
mov
outsl
push
inc
push
ss
fildl
cwtl
ljmp
outsb
jns
shrb
inc
in
not
inc
lret
or
pop
xchg
sub
stos
lds
pushf
lahf
movsl
mov
js
mov
adc
sub
jnp
ret
roll
and
mov
xchg
sub
test
cmpsb
adc
xor
and
adc
xor
xchg
in
adc
es
jl
cmpsl
xchg
mov
js
loope
aam
repnz
mov
js
clc
ret
xchg
or
mov
shlb
adc
dec
cmpsl
addl
adc
loop
pop
dec
mov
lret
and
stos
xor
insl
mov
inc
push
fadd
scas
jle
cmc
and
pop
mov
inc
add
insl
cmp
repnz
dec
lds
clc
mov
pop
xchg
mov
inc
jmp
test
mov
sub
inc
cltd
popa
icebp
dec
into
insl
jp
mov
jnp
mov
aad
cmp
pop
xor
jle
pop
mov
add
dec
ljmp
add
adc
cmp
and
pop
imul
jo
pop
imul
cmp
loope
popa
arpl
mov
xor
prefetch
ds
mov
cli
ds
pop
das
or
out
xchg
fisubs
cmpsl
sti
in
or
ret
lea
xlat
jg
repnz
xor
icebp
pop
push
inc
mov
dec
pop
add
adc
push
call
shld
shl
mov
jmp
push
hlt
jmp
push
or
movb
hlt
pop
cwtl
out
inc
adc
clc
adc
dec
addr16
mov
gs
mov
fsubl
mov
add
ljmp
push
loope
rclb
jbe
or
push
pushf
out
sti
sahf
xor
ss
cwtl
xchg
loop
negl
sbb
sub
sarb
xchg
fmuls
add
aas
hlt
push
and
jb
jmp
es
mull
adc
xlat
push
sub
lock
iret
jg
shrl
fiadds
fisubrs
cmp
ss
pop
xor
out
cmp
push
fldcw
insb
gs
add
lods
push
and
push
push
adc
fstpl
sti
dec
icebp
mov
dec
pop
pushl
cmpl
arpl
push
gs
cli
push
jp
add
popa
inc
lret
xlat
xchg
cli
sti
mov
lret
ljmp
ret
adc
or
and
sub
div
fdivl
inc
mov
push
push
mov
mov
in
adc
inc
push
cltd
or
inc
jae
add
nop
mov
push
dec
pop
push
jbe
pop
popf
int
xchg
lods
pop
dec
adc
shrl
cwtl
push
enter
js
lret
push
mov
fmuls
cmpsb
mov
stc
repz
nop
popf
cltd
dec
cmp
popa
xchg
out
jl
out
adc
cs
jp
jae
out
fistps
sub
xchg
pop
cmp
roll
push
pop
or
fdivrp
stc
xchg
fcoml
jg
dec
dec
jbe
fldt
jne
xchg
loopne
pop
mov
fcmovnb
idivl
mov
cmp
iret
adc
mov
pusha
test
pop
mov
out
push
jmp
imul
repz
std
inc
addr16
dec
cmpsb
sbb
aam
repnz
sub
mov
and
push
imul
adc
inc
leave
testl
jl
cmp
jg
fistps
cmpsb
enter
xor
sub
fyl2x
jecxz
inc
sub
fisubs
int
aaa
shl
ret
dec
addr16
out
adcb
adc
mov
push
add
cmp
pushf
xchg
mov
aas
popf
insb
dec
les
data16
inc
stos
mov
mov
add
clc
adcl
mov
sbb
and
adc
in
clc
jb
xchg
dec
xchg
mov
adc
xor
loope
jecxz
test
lds
xlat
xchg
ljmp
negl
call
or
bound
movl
adc
lahf
out
imul
incb
aam
dec
ror
or
jp
push
insl
inc
stos
push
mov
xchg
sbb
in
fistps
mov
js
insl
cmp
adc
mov
pop
push
addr16
je
pop
inc
or
push
sub
addr16
popf
mov
hlt
pop
shll
or
mov
cmp
movl
adc
pop
inc
inc
sbb
push
jae
sgdtl
xor
jle
and
popf
arpl
sbb
ds
call
test
stc
mov
adcw
add
loop
or
negb
test
pop
sub
imull
cmp
aad
adc
scas
pop
push
leave
xchg
jo
mov
cmc
test
xchg
int3
cmp
xchg
int
enter
sub
inc
sub
dec
addr16
enter
xchg
inc
insl
int3
xchg
hlt
shl
in
dec
roll
lock
add
popa
sbb
xchg
push
cmp
data16
call
movsb
inc
push
jae
dec
mov
mov
push
mov
fwait
inc
cmp
xchg
jns
pop
stos
mov
out
outsl
iret
pop
push
fnstsw
or
dec
scas
pop
sarl
cmp
mov
mov
pop
mov
mov
ret
mov
jnp
cmp
fwait
jp
push
push
test
outsb
bound
mov
inc
xor
rcrb
jp
notb
push
out
mov
push
jo
push
out
outsl
pushf
mov
sbbb
pxor
lret
pop
pusha
xchg
les
push
mov
popa
lock
adc
sub
cmp
sahf
outsb
xchg
in
or
stc
movsl
ss
jae
cmpsl
int
lea
nop
and
push
addl
ret
fs
test
push
mov
lea
fcom
jmp
dec
aaa
rclb
push
mov
lods
xor
pop
mov
fstp
mov
push
or
filds
adc
stos
jl
mov
stos
outsb
sbb
mov
cmp
scas
mov
add
inc
pop
in
jl
mov
xchg
dec
push
stc
add
add
cmp
dec
ljmp
inc
pushf
jo
jnp
inc
mov
push
xchg
jmp
xor
adc
mov
inc
cwtl
and
sbb
adc
in
movb
mov
insb
xchg
inc
pop
push
clc
xor
lcall
pop
pushf
adc
insl
lock
pop
aad
in
cltd
adc
add
cmc
aad
ja
mov
subl
add
push
ret
rcll
sbb
mov
sarb
sub
pop
ficoms
aad
fsubl
pop
pop
push
adc
and
xlat
inc
dec
dec
pop
dec
sbb
inc
xchg
mov
xchg
push
mov
pop
jbe
jmp
daa
int
dec
push
push
jp
mov
cmc
and
add
ljmp
idiv
sahf
cltd
fwait
xchg
add
repnz
add
adc
enter
pop
loopne
jmp
jg
faddl
push
int3
sti
repz
popf
adc
xor
data16
sbb
and
cwtl
lods
ljmp
inc
std
loopne
decl
test
sub
ret
and
xstore-rng
cmpsl
inc
pop
inc
addb
and
daa
pop
das
cmp
popa
in
ret
inc
gs
jg
fwait
repz
push
lds
hlt
adc
sub
test
sahf
mov
or
lock
xor
cli
out
mov
mov
inc
jnp
movsb
pusha
call
xchg
sub
add
mov
loop
inc
sub
mov
adc
rorb
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
inc
mov
cs
jmp
push
shl
push
sub
adc
lds
jae
or
fistpl
pop
aaa
lods
lcall
and
jle
adc
imull
mov
jle
dec
dec
into
js
int
mov
cmp
leave
aam
jg
inc
sbb
iret
xor
inc
mov
fsubp
push
pop
xor
sub
and
xor
push
lods
jge
sub
inc
inc
xor
test
jge
jmp
mov
push
cmp
adc
sbb
pusha
sti
clc
std
scas
fcmovne
jb
sub
mov
ja
subl
rcrl
xchg
jo
dec
sbb
jmp
sbbb
cld
jle
sub
jecxz
adc
and
inc
sbb
adc
push
mov
and
add
jne
push
sub
and
mov
daa
repz
loope
outsl
leave
mov
push
dec
in
and
cwtl
pop
cli
adc
enter
and
fiaddl
lret
mov
addr16
mov
inc
add
sbbb
in
xchg
dec
dec
push
jnp
insb
xchg
pop
subl
scas
lods
cmp
xchg
mov
loopne
mov
jle
add
xor
test
mov
and
sub
jb
pop
aam
subl
or
jmp
rolb
int
pushf
test
xor
icebp
fdivr
cmp
movb
mov
mov
xchg
add
aam
mov
mov
out
adc
inc
int3
aaa
hlt
out
arpl
sbb
mov
inc
lret
mov
jge
jmp
call
sbb
lahf
cltd
les
jne
ret
shll
mov
shrl
or
sahf
aas
insl
shlb
mov
jbe
and
pop
cli
in
ja
in
jo
fiaddl
mov
mov
lea
jb
out
xor
fmull
cmp
adc
inc
adc
movsl
or
jmp
loop
data16
lock
pop
sbb
push
sub
sbb
ja
sub
and
jge
mov
gs
push
sbb
jmp
jbe
test
clc
push
push
jecxz
adc
fwait
movsl
arpl
bound
and
mov
out
inc
mov
jle
sbb
stos
jae
sub
pop
cli
xor
data16
mov
pop
sub
arpl
sub
add
roll
cwtl
pushf
jb
push
mov
sub
stos
mov
fistpl
mov
push
rcll
shrl
or
push
mov
sahf
add
orl
pop
mov
adc
ret
out
add
dec
in
enter
outsb
jg
xor
cmp
shrl
lret
and
movsb
sbb
mov
scas
and
cmp
mov
pop
jno
add
popa
jecxz
push
lods
pop
and
pop
mov
outsb
push
cli
loopne
xchg
fnstsw
rorl
mov
into
out
jecxz
pop
mov
into
fs
into
es
jle
xor
out
xlat
out
gs
cmp
inc
add
push
inc
movsb
inc
cmp
add
mov
in
sub
mov
lock
xor
dec
in
xor
fisubs
xchg
inc
inc
ficoml
or
add
fisttps
divl
ret
dec
sahf
sbb
pop
and
call
mov
shrb
cmp
or
xor
add
sbbl
xchg
or
xchg
lahf
jns
dec
sbb
in
sub
jl
jecxz
gs
cmp
mov
pop
imul
fwait
das
dec
push
and
js
pop
mov
sub
je
add
xor
je
cmc
pop
lret
push
xor
movsb
sub
pop
adc
hlt
inc
jl
mov
mov
jnp
sti
sbb
push
cmp
mov
mov
mov
popf
and
lahf
cmc
adc
aam
push
push
push
cmpsl
sbbl
pusha
hlt
std
repnz
loopne
cmpsb
rcll
fidivs
sub
movsl
stc
and
inc
mov
xor
daa
mov
lret
pop
out
stc
inc
leave
idivb
loopne
test
call
outsb
ret
daa
in
pusha
mov
fsubs
add
cmpsl
push
xor
push
xor
jl
cld
push
loopne
lcall
daa
daa
or
hlt
xor
xchg
scas
push
jp
pop
mov
push
aas
pushf
outsb
jo
movsl
leave
adc
faddl
add
int3
adc
adc
pop
lret
cmovbe
movsb
dec
pop
jle
adc
pop
sub
stos
fs
movsb
outsl
loope
cmc
add
scas
dec
inc
cld
lahf
cli
icebp
mov
lret
push
and
jbe
dec
clc
xchg
and
sti
xchg
data16
int3
lret
jl
cli
cmpsl
in
inc
xchg
mul
pop
aam
test
and
ss
int3
xchg
shr
and
dec
sbbl
jmp
cmpsl
push
scas
pop
out
inc
mov
les
fcomp
fmuls
repnz
xor
clc
pusha
int
arpl
dec
nop
mov
addr16
xlat
and
loopne
das
dec
push
lret
pusha
xor
loope
adc
loop
enter
int3
arpl
mov
xchg
scas
out
mov
sbb
mov
js
pop
sbb
push
adcl
cs
cli
xchg
xor
sbb
add
cmc
mov
rcll
jmp
je
sahf
mov
dec
loop
sbb
cmp
roll
mov
leave
cmp
lea
das
icebp
cmpsl
cmc
add
mov
push
dec
mov
test
insb
cwtl
pop
fidivl
xor
das
lods
sbb
xchg
mov
mov
loop
dec
cli
fmulp
fwait
rcll
popf
fwait
movsb
xor
cmp
out
mov
mov
mov
sbb
incl
popf
je
jb
sti
outsl
push
dec
mov
sub
xchg
cmp
mov
and
add
mov
cmp
loope
jnp
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
jmp
jmp
dec
int
xchg
jle
or
inc
xchg
pop
adc
clc
adc
repnz
or
jecxz
jp
sbbl
mov
mov
mov
mov
lahf
mov
ret
or
je
pusha
jns
fiadds
jns
or
outsl
mov
mov
fbld
es
sbbl
sbb
sub
inc
push
pop
pop
pop
dec
icebp
repnz
sub
dec
pop
repnz
loop
jge
push
ror
stos
cmp
mov
mov
sbb
dec
adc
sbb
rep
int
xchg
mov
enter
rol
repnz
iret
jmp
xchg
push
nop
pop
push
add
shrb
int3
faddl
sbb
dec
dec
dec
inc
sbb
cmp
inc
xor
adc
xchg
jbe
mov
aas
testb
out
test
jg
mov
stos
aas
push
or
mov
stos
xchg
sbb
dec
je
mov
ror
and
adc
mov
adc
add
mov
cmp
sti
mov
gs
lret
cmp
aam
in
xor
pop
sub
sbb
mov
and
sbb
add
xchg
and
mov
aas
pop
xor
push
and
das
fimull
cmp
frstor
popa
insb
or
or
adc
and
stc
nop
sub
xchg
xchg
out
adc
jb
clc
stc
inc
jb
or
sahf
dec
xor
sahf
cmpl
mov
cmp
scas
xor
dec
push
pop
push
lods
int
ret
pushf
pop
mov
and
or
sete
mov
andb
push
mov
popf
mov
cmp
mov
xchg
lock
xchg
fwait
in
or
inc
cltd
stos
and
jmp
loopne
outsl
mov
das
lock
ficompl
cwtl
sarl
jl
cmpl
clc
gs
sbb
jb
cmp
dec
ds
or
cmpsl
mov
push
mov
xor
pop
inc
adc
sub
out
fstpt
jnp
lret
add
mov
arpl
sub
fcomp
shr
lods
pop
push
or
cmp
xchg
jnp
cmp
inc
lahf
icebp
int
test
mov
mov
xchg
lea
ss
or
shrl
xor
xchg
bswap
sbb
mov
jp
xchg
fcomp
mov
aad
cmp
dec
mov
pop
das
adc
imul
cld
or
mov
pop
fs
aas
xor
sbb
das
mov
lods
and
inc
jmp
push
mov
mov
add
dec
cld
insb
pop
or
dec
mov
xchg
cmc
dec
clc
xor
mov
mov
test
push
push
pushf
jge
adc
and
mov
ret
out
addb
js
dec
scas
sbb
xchg
ret
xor
inc
mov
xchg
sbb
mov
cwtl
xchg
test
out
lds
jne
sahf
lret
jmp
add
lea
aaa
rcrb
std
inc
fisubs
in
lods
push
retw
mov
xor
ja
and
shr
popa
mov
mov
xchg
cmc
inc
or
jmp
lock
xor
sbb
add
sub
mov
pop
lea
mov
cmc
sub
sbb
adc
jbe
dec
mov
or
pop
hlt
imul
lret
sarb
nop
into
outsb
test
mov
xchg
js
ss
jecxz
jg
jbe
push
cmp
fwait
xor
jbe
mov
mov
lds
dec
pusha
adc
and
loope
push
xchg
mov
add
mov
sub
adc
mov
cwtl
je
or
lret
insl
sub
jo
mov
movsl
add
push
adc
lods
mov
cli
sarb
jno
cmp
int3
cmp
add
add
lea
pop
pop
mov
mov
push
sub
inc
cs
fdiv
mov
in
sub
inc
rcl
fcoml
add
aad
filds
push
push
sub
fwait
inc
xor
jecxz
lock
add
jbe
das
xchg
jbe
and
xchg
jb
xor
outsb
fwait
mov
push
ljmp
add
mov
das
cld
cmp
cltd
ljmp
aaa
xor
cmp
and
iret
ljmp
fld
sbb
mov
dec
mov
outsl
pushf
ljmp
push
mov
dec
pop
xchg
icebp
lret
cmp
mov
arpl
pop
or
mov
aaa
pop
cmpsl
fwait
cmp
xor
add
mov
push
pop
sub
dec
cmpsb
ljmp
adc
mov
cmp
hlt
mov
paddq
ret
push
dec
cmp
cmp
out
js
push
lret
mov
inc
xchg
xchg
add
lcall
push
out
dec
jge
in
pushf
call
mov
repz
mov
imul
push
mov
setne
rol
cmpsb
nop
hlt
sub
fdivrl
jp
adcl
aas
adc
dec
clc
leave
jmp
in
jp
dec
daa
sub
dec
imul
add
lods
xor
pop
rolb
hlt
pop
or
push
lcall
jmp
imul
or
jno
aad
push
push
mov
sub
test
es
push
sub
nop
pop
je
in
sahf
iret
mov
lcall
pop
jmp
or
push
outsl
rcl
outsb
sbb
stos
arpl
push
jns
or
shl
repnz
mov
aad
idiv
hlt
ss
popf
dec
mov
dec
sbb
mov
in
xchg
adc
inc
call
or
int
pop
lcall
js
push
mov
stos
and
fs
movsb
adc
pop
ret
sbb
repz
jecxz,pn
mov
cld
mov
je
xor
aam
push
sbb
jno
mov
pop
aas
dec
sbb
ret
stos
or
ss
ljmp
add
ret
movl
cmp
movl
jae
movl
cmp
jmp
ret
icebp
imul
scas
sbb
or
pop
aad
adc
or
xor
inc
inc
andb
adc
leave
adc
cmp
mov
jp
ret
movb
mov
mov
pusha
imul
les
in
inc
cmp
inc
andb
testb
inc
cmpsl
lods
sbb
xor
loope
dec
std
mov
push
int3
data16
xor
xor
jg
fisubl
insb
fistl
lret
inc
out
int
je
add
orb
or
sub
and
mov
dec
enter
xor
inc
sub
dec
xor
lods
iret
push
or
cmp
xchg
movsl
adc
int
pusha
popf
xchg
jl
xchg
daa
adc
push
js
lea
popa
mov
scas
pop
aaa
aad
xchg
cmp
leave
adc
mov
mov
sub
ds
xor
es
mov
ds
xor
cld
push
mov
rcl
test
rcl
in
movb
pop
ljmp
mov
sub
cltd
in
fcompl
in
xor
ret
and
sub
cltd
cmpsb
test
mov
in
lock
xor
pop
jo
dec
inc
jae
stc
je
mov
sub
lock
or
cli
sub
popf
imul
mov
popa
sahf
mov
fistps
cmp
inc
cltd
mov
mov
cmp
call
cmpsl
out
stos
stos
pop
xlat
adc
mov
out
jle
pop
decb
cmp
syscall
orl
lret
push
icebp
orl
push
arpl
repz
popf
int
jnp
xchg
bound
fcmovbe
adcl
mov
gs
leave
sub
fnstcw
cmp
add
add
pop
rclb
mov
xor
push
rcll
dec
shll
jo
mov
loope
lcall
in
sbb
jns
div
gs
adc
lret
cltd
jns
cmp
or
dec
das
bound
xor
test
clc
or
pop
xchg
cmpsl
xor
or
cmp
jo
fstps
jge
push
cmp
cmp
mov
cltd
jp
jb
and
std
rcl
sub
jmp
inc
pop
xchg
into
stos
notl
or
aad
dec
sub
cltd
mov
adc
mov
add
inc
adc
xchg
divb
shll
cmp
xchg
mov
sbb
scas
and
je
adc
in
leave
xchg
sbb
inc
add
inc
test
je
jo
and
add
sub
dec
and
movsl
sub
setno
push
mov
pop
mov
inc
cmc
lret
sub
fwait
jno
dec
sub
xchg
fwait
adcb
insl
push
jne
pop
dec
jmp
inc
push
xchg
cs
xchg
int3
daa
stos
jno
fisubrs
mov
stc
cmp
adc
jle
pop
xchg
rclb
cmp
jns
jns
jnp
aad
dec
lahf
sbb
fisubrl
sbb
push
xor
aad
sbb
xchg
sarl
pop
push
inc
pop
sbb
lock
fistpll
jp
xchg
lret
mov
jecxz
in
mov
jo
lahf
add
mov
out
stc
lahf
xor
mov
ret
push
xchg
pop
jb
pop
cmp
push
jmp
cmp
inc
loopne
mov
xor
subl
mov
jge
xor
es
mov
or
and
lods
xchg
jecxz
pushf
mov
mov
mov
les
stc
mov
adc
fisubl
dec
in
push
mov
into
imul
ret
stos
out
jne
mov
mov
mov
loopne
lret
xor
dec
sbb
shll
ss
out
sbb
and
mov
xchg
imul
dec
inc
out
lods
mov
outsb
cmp
ljmp
sti
mov
jle
and
mov
lds
icebp
mov
or
jno
movsb
jb
sub
push
inc
mov
and
aam
adc
aaa
jmp
andl
mov
loope
mov
aam
xchg
es
inc
jbe
data16
or
scas
bound
or
neg
int
test
aaa
arpl
ret
push
movsb
out
flds
ud0
cmp
mov
jmp
pop
and
outsb
jae
pop
or
inc
mov
push
lds
scas
xchg
mov
roll
movl
sbb
iret
mov
out
shl
repz
sarb
cltd
cmp
mov
mov
inc
pop
roll
or
and
mov
loop
test
clc
std
cmp
lds
addr16
xor
xchg
out
jle
fsubs
mov
push
jbe
or
test
push
or
push
ret
and
aas
sbb
xor
lret
xchg
xor
pop
cltd
in
mov
mov
into
in
lret
pop
mov
xchg
sub
cs
dec
sub
and
in
shlb
loopne
roll
dec
and
pop
cmp
aaa
and
cmp
mov
mov
pop
mov
shrb
stc
sarb
stos
add
or
mov
scas
sbb
daa
jbe
xor
mov
sub
mov
mov
push
mov
sub
pop
mov
push
xor
loopne
cmpl
mov
test
test
push
xor
mov
subb
jae
fwait
rcrb
and
test
cmp
int
adc
in
push
push
pop
ret
dec
in
daa
or
jnp
lock
jmp
push
pinsrw
mov
ffree
daa
mov
filds
outsb
xor
daa
dec
int
or
pop
movsl
jecxz
leave
dec
sbb
les
imul
xchg
repnz
mov
sub
sub
xchg
xchg
movsl
cld
pop
add
xor
mov
test
cmp
cmpsl
lock
lock
pusha
pusha
xor
push
test
mov
adc
scas
xchg
adc
lods
cltd
scas
int3
sub
testb
pop
arpl
adc
movb
add
enter
sub
aas
push
push
or
push
das
add
mov
inc
mov
lahf
int
das
jg
pop
nop
lods
mov
mov
push
ret
in
xor
lds
inc
xchg
test
dec
sub
jae
sbbl
shrd
movl
shr
ret
mov
xor
orl
and
jmp
add
ss
ss
cs
mov
cmc
inc
sbb
lret
adc
adc
clc
adc
dec
adc
sub
pop
cmp
cmp
adc
mov
popl
mov
sub
mov
mov
push
stos
pusha
add
cltd
in
aaa
dec
push
adc
sub
add
mov
nop
xchg
outsl
xchg
jo
in
dec
flds
aad
ljmp
lods
pop
xor
sub
or
sbb
xor
jo
leave
insb
decl
out
call
nop
pusha
dec
lcall
push
movb
sub
inc
add
jo
insb
sub
inc
sub
xchg
mov
clc
pop
inc
es
or
jmp
or
lods
mov
adc
popf
or
ret
aas
dec
pop
sar
inc
roll
and
mov
jne
fldt
inc
lret
jl
xor
outsb
arpl
push
fcmovnb
and
sbb
loope
inc
mov
or
xor
in
insl
push
jmp
inc
rorb
lret
sub
dec
cmp
jecxz
jmp
adc
mov
cmp
fwait
movsb
inc
fyl2xp1
shlb
lret
jecxz
out
stos
cmp
in
scas
int3
jl
cli
cltd
js
out
xchg
seto
ss
adc
outsb
lret
sub
mov
push
inc
xchg
inc
lret
mov
outsb
pop
negl
cmpsb
movd
xor
cld
pop
lret
xchg
adc
lahf
imul
dec
push
dec
or
fdivrs
jnp
fsubl
sbb
inc
in
cmp
fcomip
ja
or
xchg
pop
cmp
inc
and
jecxz
js
xchg
popa
cmpsl
incb
cmp
inc
inc
jmp
inc
cmp
cmp
pop
push
and
push
sbb
ffree
subb
mov
scas
and
or
adc
jmp
cmp
push
sbb
orb
mov
pop
xor
fwait
or
rol
inc
stos
inc
lahf
or
js
pusha
outsl
mov
movsl
cmpsl
mov
out
scas
dec
jle
mov
enter
loop
push
or
shlb
push
je
mov
test
cmpsb
and
or
aas
xchg
insb
mov
imul
mov
add
push
lods
ss
scas
xor
push
mov
adc
jmp
mov
mov
or
jo
inc
bound
roll
push
sti
mov
stc
mov
shlb
popf
sbb
lcall
dec
add
mov
mov
fmul
dec
inc
int
jno
iret
or
mov
mov
mov
dec
jbe
imull
jb
adc
test
lock
mov
scas
adc
dec
dec
mov
dec
bound
cmp
push
fs
mov
int
push
lahf
inc
add
sub
popf
xchg
mov
sub
dec
push
mov
loope
out
adc
or
out
stos
inc
inc
and
in
out
je
xchg
sar
inc
sbb
in
sub
push
scas
cmp
jnp
sbb
in
sub
or
stos
sbbb
inc
xchg
mov
jns
fsubl
jo
add
in
mov
jle
fbstp
fbld
mov
aam
cmp
pop
mov
sbb
adc
hlt
mov
movsl
xor
out
add
in
gs
lahf
dec
or
cmc
mov
shlb
lods
je
add
sbb
cmp
ret
pop
mov
into
and
gs
fbstp
jge
sarb
pop
enter
shll
andb
imul
out
dec
xchg
push
out
stc
sub
sub
loope
inc
cmc
mov
lahf
adc
imul
sub
addr16
sbb
cmp
mov
pop
push
cwtl
cli
add
jl
arpl
adc
dec
adc
sti
int
cmc
std
arpl
out
ficomps
push
fiadds
lret
inc
pop
mov
ds
jne
mov
mov
xchg
repz
mov
mov
scas
repz
pop
das
stos
and
cmp
outsl
ss
cmpsl
add
jmp
popl
xchg
rcrl
mov
xchg
loope
push
insb
sub
cld
or
mov
ss
sub
cmp
xchg
mov
rcrl
add
imul
outsl
dec
sub
push
icebp
outsl
rclb
or
lcall
iret
or
mov
adc
add
pop
fisubl
gs
pause
push
cmpsb
sbb
aam
add
mov
cmp
mov
sbb
lea
push
dec
mov
xlat
mov
cmpsl
cmp
push
int
psubw
jnp
lret
cltd
out
jg
fucomp
aad
data16
bound
inc
mov
das
xchg
loope
nop
pop
sub
pusha
jnp
pop
int
add
ja
lret
jl
scas
je
cmp
int3
cltd
jno
dec
sbb
mov
stc
mov
jl
sti
xlat
imul
outsl
aas
ret
test
outsl
dec
cmp
movsb
xor
adc
cmp
shrl
mov
loopne
xor
stc
jae
xor
ror
pushf
and
bound
icebp
fdecstp
cmpb
cmp
jo
jge
sbb
mov
into
dec
jae
scas
push
push
fucomip
lret
mov
stos
xchg
mov
dec
sbb
lret
gs
std
dec
ret
and
mov
int3
push
out
sub
subb
call
push
call
mov
xchg
orl
call
jmp
mov
push
cmc
rcr
lahf
cmpsb
cmp
movsl
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
jbe
pushl
pushl
call
adcl
subl
sbbl
add
xorl
incl
movl
xor
xor
add
mov
mov
movl
andl
mov
movb
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
pushl
push
call
incl
subl
xor
xorl
orl
orl
or
orl
or
movb
subl
movb
movzbl
mov
addl
sub
addl
imul
cmpl
mov
mov
jmp
mov
jne
pushl
pushl
push
pushl
pushl
pushl
call
movzbl
xor
sbb
orl
andl
subl
orl
movzbl
subl
push
adcl
and
mov
movb
orl
movb
andl
movb
sbbl
movb
andl
mov
mov
add
adcl
imul
mov
or
mov
subl
and
mov
movl
cmp
movl
ja
mov
and
mov
sub
mov
cmpl
not
mov
jmp
mov
ja
push
push
push
pushl
pushl
push
pushl
pushl
push
push
push
pushl
push
call
movzbl
and
sbb
xor
xor
or
adc
mov
sub
mov
not
mov
mov
movzwl
movl
movzwl
shr
andl
or
xorl
sub
andl
mov
movb
xorl
movb
mov
mov
xor
add
movzbl
cltd
push
pop
idiv
mov
movb
movb
mov
mov
add
movzbl
movzbl
cltd
idiv
mov
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
mov
push
push
push
call
mov
mov
mov
or
mov
mov
shl
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
orl
push
add
push
xorl
mov
dec
mov
shrd
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
or
xor
or
mov
sub
xor
adc
sub
xor
xor
adcl
neg
shr
xor
mov
not
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
pushl
push
call
addl
movzbl
sbb
sub
xor
xor
mov
xor
or
mov
notl
mov
shl
subl
mov
xorl
shrd
add
xor
movl
shr
adc
mov
mov
xor
mov
sbb
or
mov
or
mov
sbb
mov
mov
mov
mov
add
mov
cmpl
movzwl
movl
jmp
mov
notl
jae
call
adc
sub
and
xor
sub
adc
movl
mov
mov
add
mov
addl
mov
cmpl
movl
mov
movl
jmp
movl
jne
push
call
neg
xorl
or
xor
xor
or
or
add
incl
inc
mov
add
shl
xor
shld
movzwl
or
mov
shl
mov
xor
xor
movl
movl
movl
movl
cmp
jne
cmp
movl
je
mov
and
mov
mov
cmpl
mov
mov
not
jmp
movl
je
pushl
call
adc
or
incl
subl
sub
mov
movl
xor
shld
orl
shl
sbbl
xor
decl
xor
movl
cmp
jne
cmp
movl
je
mov
mov
sub
and
mov
mov
add
mov
addl
shl
mov
addl
xor
andl
shr
addl
or
mov
cmpl
mov
movl
movl
jmp
not
jl
push
pushl
call
add
and
or
adc
and
adc
adc
sub
mov
orl
mov
adc
mov
xor
add
mov
add
mov
sub
mov
orl
push
adc
pop
orl
sub
mov
add
notl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jb
push
push
push
pushl
pushl
call
orl
or
mov
adc
dec
sub
sbbl
lea
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
pushl
pushl
pushl
call
movzwl
and
xor
adc
neg
subl
xor
mov
movzwl
add
mov
mov
orl
xor
adcl
shr
addl
shl
or
mov
adc
movl
cmpl
mov
movl
not
mov
jmp
not
movzbl
je
push
call
sbb
xor
or
add
and
mov
mov
movl
xor
shr
addl
shl
andl
or
push
lea
push
lea
xorl
push
adcl
call
cmpl
movl
mov
mov
jmp
mov
movl
jge
pushl
push
push
push
pushl
push
call
sub
adcl
movzwl
adc
or
movzbl
sub
mov
mov
xor
or
sub
and
mov
add
mov
xor
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
adc
mov
mov
or
adc
and
adc
orl
notl
shr
cmpl
mov
movl
movl
jmp
movl
movl
je
pushl
pushl
pushl
call
subl
or
sub
neg
notl
adc
shl
cmpl
movl
movl
mov
jmp
notl
mov
ja
push
pushl
pushl
call
movzwl
sbb
xor
and
sub
sbbl
adc
or
push
lea
adcl
push
or
mov
mov
or
shrd
xorl
shr
sbb
mov
mov
adcl
xor
adcl
xor
xorl
or
subl
lea
adcl
push
shl
orl
call
dec
mov
and
mov
xorl
xor
mov
sbb
mov
shl
shr
movzwl
sbb
or
or
push
lea
xor
xor
sub
push
add
mov
neg
mov
and
shrd
cmpl
movl
not
mov
jmp
movl
movzbl
jge
push
push
pushl
push
pushl
pushl
call
mov
mov
or
sub
movl
movzbl
sbb
mov
or
mov
xorl
xor
xor
sbb
shr
mov
or
mov
xor
andl
shl
sbbl
xor
addl
or
xorl
lea
push
call
inc
mov
adc
mov
movzwl
or
xor
xor
shl
shr
cmpl
movl
movl
jmp
mov
mov
jg
pushl
pushl
push
pushl
pushl
pushl
call
movzwl
xor
inc
or
inc
mov
xor
add
sub
or
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
andl
or
mov
movl
jne
cmpl
movl
movl
jmp
movl
not
jl
pushl
call
and
adcl
subl
andl
movl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
push
call
pushl
call
test
jg
movl
movl
movl
mov
adc
mov
sbbl
imul
orl
or
and
mov
xor
mov
movl
movl
mov
or
mov
subl
mov
push
subl
add
movl
push
movl
adc
orl
push
push
andl
call
add
mov
adc
mov
movl
or
movl
cmpl
mov
mov
jmp
mov
movl
jle
push
call
adc
movzwl
sub
adc
subl
adc
mov
mov
sub
mov
and
and
movl
xor
movl
cmpl
notl
movl
movl
jmp
movl
jae
pushl
pushl
push
push
call
movzwl
adc
mov
sub
andl
xor
xor
and
cmpl
mov
movl
jmp
mov
mov
jbe
push
pushl
call
addl
xorl
adc
sbb
add
add
movl
movl
and
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jne
pushl
push
call
sub
mov
adc
mov
adc
xor
add
xor
mov
xor
mov
mov
mov
movl
and
cmpl
movl
mov
movl
movl
jmp
movl
movl
ja
push
call
subl
sub
andl
adc
sub
xor
or
sbb
cmpl
movl
movl
movl
jmp
movl
jne
pushl
push
call
mov
add
neg
sbbl
or
subl
sbb
cmpl
mov
mov
mov
jmp
movl
je
pushl
call
adc
add
inc
or
and
add
mov
and
mov
movl
or
andl
or
add
adc
and
and
subl
xor
mov
orl
xor
movl
cmp
movl
ja
movl
jb
cmp
ja
cmpl
mov
mov
jmp
movl
ja
push
push
call
xor
sub
subl
xor
or
sub
add
movl
or
movl
movl
add
movl
cmpl
movl
mov
mov
jmp
notl
movl
jg
pushl
push
push
call
not
sbb
or
or
xorl
add
movzwl
sbb
mov
xor
or
mov
sub
or
movl
cmpl
movl
mov
jmp
mov
movl
jne
push
push
pushl
push
push
call
xor
movzbl
or
xorl
mov
add
or
and
adc
movl
movl
sbb
mov
mov
subl
sub
incl
and
and
or
mov
sub
adc
pushl
cmpl
movl
mov
movl
jmp
movl
not
jl
pushl
push
call
sbb
xor
sbb
or
adc
mov
and
mov
cmpl
mov
not
movzbl
jmp
movl
jae
pushl
call
xor
sbbl
mov
mov
sbb
or
mov
xorl
lea
sub
push
pop
subl
xor
div
add
mov
sub
xor
pushl
mov
movzwl
or
pushl
cmpl
mov
mov
movzbl
jmp
movl
mov
je
pushl
pushl
push
call
xor
or
add
xor
adcl
xor
or
addl
adcl
mov
sbbl
pushl
and
or
pushl
mov
addl
pushl
addl
xor
xor
pushl
adc
mov
sub
pushl
orl
call
movl
add
movl
mov
or
movl
xor
movl
mov
mov
or
mov
mov
subl
sub
xor
mov
and
mov
orl
xor
shr
imul
pushl
call
xorl
dec
cmp
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
call
movzwl
sbb
movl
xor
xor
and
xor
add
add
xor
adc
neg
movl
cmpl
movzwl
movl
jmp
movl
movl
jbe
call
negl
xor
add
xor
neg
xor
adcl
cmpl
mov
mov
mov
jmp
movl
movl
jae
push
call
xorl
xor
adc
add
and
movl
adc
or
mov
movl
mov
andl
movl
mov
sbbl
call
cmpl
movl
not
movl
jmp
not
not
ja
pushl
push
push
push
call
mov
mov
sub
and
neg
adc
sub
or
add
sbb
lea
cmpl
not
mov
jmp
mov
jae
push
pushl
call
adc
mov
mov
sbb
andl
adc
adc
adc
mov
addl
lea
cmpl
mov
movl
mov
jmp
mov
movl
jge
push
pushl
push
pushl
push
call
xor
and
movzbl
and
mov
and
addl
mov
mov
sbb
mov
and
mov
sbb
mov
and
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
push
push
pushl
call
orl
addl
xor
add
xor
xor
sub
add
mov
mov
sub
or
sub
xor
cmpl
movzbl
movl
movl
mov
jmp
movl
movl
jne
push
push
push
call
or
sub
xorl
xor
or
mov
mov
or
sub
shl
cmpl
movl
movl
mov
jmp
mov
movl
jg
pushl
pushl
call
mov
xor
xor
sub
imul
mov
mov
sub
and
sub
add
not
shr
dec
or
mov
xorl
mov
sub
mov
mov
xor
add
or
mov
mov
mov
sub
shrd
shr
cmpl
mov
mov
jmp
movl
jg
push
call
adc
xor
add
adc
adc
or
adc
xor
and
mov
mov
xor
xor
or
mov
push
pushl
lea
push
shl
call
lea
push
mov
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
push
push
sbb
push
movzbl
sbb
movl
movl
or
movl
movl
neg
mov
mov
mov
mov
xor
and
subl
mov
cmpl
mov
mov
jmp
movl
movl
jb
pushl
call
and
adcl
mov
and
add
dec
xor
and
subl
add
mov
xor
xor
movzwl
xor
mov
orl
movl
neg
movl
adcl
mov
xor
cmpl
movl
movl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
sub
add
sub
mov
mov
or
mov
mov
sub
sub
cmpl
mov
movl
movzwl
mov
jmp
movl
movl
jge
pushl
push
push
call
add
inc
movzwl
and
adc
and
sub
subl
mov
add
imul
not
xor
or
mov
div
adc
sub
mov
mov
sub
and
mov
or
movl
movl
mov
mov
and
movl
movl
add
movl
sub
movl
movl
mov
mov
imul
add
or
and
sub
sbbl
mov
sub
andl
mov
sub
mov
sub
andl
add
sub
mov
andl
xor
subl
div
mov
adcl
sub
mov
add
movzwl
sub
mov
sub
movl
xor
movl
mov
mov
sub
and
movl
add
mov
xor
cmpl
mov
mov
mov
jmp
mov
je
push
call
and
or
sbbl
mov
adc
addl
movl
adc
add
mov
xor
div
cmpl
mov
movl
mov
mov
jmp
movl
movl
jb
push
call
or
mov
sub
xor
or
adc
andl
dec
sbb
and
cmpl
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
push
push
push
pushl
call
sbbl
sub
sbbl
mov
sub
mov
and
mov
or
and
sub
sub
mov
movl
and
movl
mov
mov
xor
movl
sub
movl
mov
cmpl
mov
movl
movzbl
jmp
movl
ja
pushl
push
pushl
call
mov
sub
movzbl
add
mov
orl
xor
mov
xor
mov
and
mov
xor
adc
xor
adc
push
xor
pop
movl
div
cmpl
mov
mov
movl
jmp
movl
movl
je
push
push
push
pushl
call
inc
inc
xor
sbbl
mov
xorl
xor
orl
div
movl
mov
movl
or
sub
sub
cmpl
mov
mov
movl
movl
jmp
movl
movl
jb
push
pushl
push
pushl
pushl
pushl
push
push
call
negl
xor
mov
and
mov
adcl
mov
adcl
movl
mov
cmpl
movl
movl
movl
jmp
movl
mov
jle
push
push
push
call
andl
addl
andl
sbbl
sbb
sbb
mov
andl
xor
orl
div
andl
imul
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
push
call
or
and
adc
or
neg
xor
orl
xor
sbb
imul
add
xor
mov
sub
mov
mov
subl
movl
movl
subl
movl
sbb
mov
cmpl
movl
mov
jmp
movl
jge
pushl
call
adc
subl
xor
xor
mov
sbb
adcl
or
cmpl
mov
movl
movl
jmp
notl
movl
jg
pushl
push
pushl
call
orl
sub
sbb
xor
xor
adc
andl
add
orl
or
and
or
mov
addl
xor
sbbl
div
sub
mov
sbbl
imul
or
add
xor
mov
incl
sub
cmpl
movl
movl
movl
movl
jmp
movl
je
push
pushl
call
addl
movl
subl
or
xor
andl
mov
cmpl
mov
mov
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
pushl
call
xor
add
sbb
or
adcl
mov
mov
adc
sub
xor
movl
mov
and
and
cmpl
movl
mov
jmp
mov
movl
jge
push
push
pushl
push
pushl
push
call
orl
xor
xor
adc
mov
xor
add
xor
mov
not
movzwl
sbb
sbb
add
cmpl
movl
notl
mov
notl
jmp
movl
jb
push
pushl
push
push
push
call
adc
movzwl
sub
adc
add
adc
andl
mov
sbb
or
xor
cmpl
mov
mov
jmp
movl
je
pushl
call
movzbl
or
mov
andl
mov
adc
addl
mov
sub
mov
movzbl
adc
adcl
sub
mov
mov
xor
add
sub
imul
movl
cmpl
mov
movl
jmp
notl
movl
ja
push
call
sbbl
mov
sbb
sub
sub
add
xorl
movl
xorl
movl
neg
mov
adc
and
mov
adc
add
adcl
add
add
or
cmpl
not
movl
jmp
mov
mov
jl
push
push
call
mov
adc
movzbl
adc
sub
notl
sbb
add
or
xorl
sub
mov
movl
xor
movl
adc
movl
cmpl
mov
mov
jmp
mov
mov
jg
pushl
push
pushl
call
andl
orl
not
add
add
mov
shr
sub
xor
xor
mov
lea
movl
push
orl
call
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
call
or
neg
add
sub
xorl
xor
add
cmpl
mov
mov
mov
jmp
not
jl
push
pushl
push
call
mov
xor
xor
or
xor
xor
sub
or
or
xor
or
mov
sub
and
or
mov
mov
sbb
or
xor
add
sbb
and
lea
mov
mov
mov
sub
or
movl
sbb
movl
cmpl
movl
mov
mov
jmp
mov
movzbl
ja
push
push
pushl
push
call
mov
mov
sub
imul
mov
mov
and
sbb
subl
xor
movl
movl
movzbl
adc
mov
movl
movl
movzwl
sub
movl
movl
subl
mov
add
mov
and
dec
sub
mov
sub
lea
mov
orl
mov
mov
sub
mov
imul
sbb
and
cmpl
mov
not
movl
movl
jmp
movl
movl
ja
pushl
push
push
call
add
orl
adcl
negl
andl
subl
movzwl
and
not
imul
cmpl
mov
not
jmp
movl
jl
pushl
pushl
call
adc
add
adcl
sbb
subl
mov
or
mov
lea
mov
cmpl
movl
mov
movl
jmp
mov
jbe
push
call
sbbl
and
movzwl
adc
sub
mov
mov
sbb
xor
or
and
mov
cmpl
mov
movl
not
jmp
movl
mov
jge
pushl
push
push
push
pushl
push
call
add
orl
sbb
add
neg
addl
sub
movl
adc
movl
movl
cmpl
mov
mov
mov
movl
jmp
movl
jg
pushl
push
push
call
sbb
xor
sbb
mov
sub
mov
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
pushl
push
call
mov
mov
sub
or
inc
add
sbb
or
and
add
mov
mov
mov
xor
xor
xorl
mov
addl
call
adcl
mov
orl
mov
orl
mov
cmpl
movl
mov
mov
jmp
movzwl
mov
jl
pushl
push
pushl
pushl
push
call
add
movzbl
adc
mov
xor
add
add
mov
sub
add
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
not
push
push
cmpl
mov
movl
movl
movl
jmp
mov
mov
jge
push
pushl
pushl
push
push
pushl
call
xor
add
subl
adcl
add
sbb
mov
sbb
mov
xorl
or
movl
jne
xor
xor
mov
sub
or
mov
mov
cmpl
movl
mov
movl
jmp
movl
je
push
push
pushl
push
pushl
push
push
push
push
pushl
push
push
push
call
or
decl
andl
adc
sbbl
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
andl
subl
cmpl
movl
je
and
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
notl
shl
ret
mov
xor
mov
decl
xor
and
shl
ret
xor
xor
ret
