push
mov
sub
xor
mov
xor
mov
adc
mov
sub
push
mov
mov
mov
mov
jmp
mov
or
inc
pop
int
fists
adc
push
clc
adc
xchg
push
sub
fimull
mov
fsubl
int3
or
adc
jo
movsb
xchg
jle
dec
mov
mov
xchg
mov
daa
and
push
sbb
sbb
pushf
dec
out
sbbb
add
sbbb
inc
ret
mov
movsb
in
jne
loopne
jno
aas
xchg
in
rolb
pop
or
sbb
notl
add
pop
fidivs
cli
xchg
cmp
or
pop
or
cmp
inc
cld
mov
leave
push
jbe
push
fadds
icebp
push
mov
sbb
mov
cmc
iret
stc
ds
lcall
push
push
dec
cmp
les
push
or
stos
mov
loope
test
push
sahf
arpl
lret
ds
ds
repnz
sbb
icebp
andb
mov
push
movsl
xchg
push
insl
imul
test
or
inc
sub
or
or
shr
imul
loopne
sbb
ret
iret
mov
hlt
and
fstps
jae
mov
xlat
dec
add
test
cs
push
test
push
sub
in
shrb
aam
mov
push
xlat
shlb
push
sub
xchg
ret
dec
mov
in
inc
inc
and
cmp
sub
lcall
mov
push
cmp
xchg
mov
addl
jo
iret
xchg
lods
scas
jns
xor
xor
xchg
jecxz
out
xchg
std
in
dec
in
pop
or
insl
jnp
or
out
imull
loopne
outsl
data16
mov
das
inc
jge
sti
xor
push
push
incl
icebp
or
jae
clc
gs
mov
leave
outsl
fisubrl
stos
pop
imul
test
out
les
sbb
shrb
das
leave
inc
lea
imull
ds
shrb
push
inc
pop
loop
dec
arpl
xchg
sti
in
xchg
dec
lea
sarb
mov
xlat
pop
incl
cld
lea
mov
cmp
clc
cmp
mov
inc
xor
jbe
roll
loopne
addr16
sbb
add
push
mov
mov
divb
stc
f2xm1
push
push
test
andl
push
stos
pushl
ud0
movsb
adc
es
or
fcoml
jbe
insl
imul
loopne
fisubrl
out
fisubrs
xchg
sub
inc
mov
adc
adc
cmpsl
aam
xchg
adc
fsubrs
pop
adc
ficoms
jne
sub
hlt
cli
popa
pop
push
sbb
or
sbb
mov
aas
mov
lcall
mov
imul
icebp
fwait
outsl
in
mov
mov
add
in
push
lea
and
mov
daa
cmc
or
int
or
push
jge
and
decl
lods
int
loope
fsubrp
aad
xor
clc
cmp
loope
cmpsb
repz
mov
cmc
fists
mov
dec
xchg
push
lock
arpl
sbb
jae
test
aas
outsl
pop
cli
cwtl
leave
or
pop
dec
in
pop
xor
loope
sub
pop
stc
cmp
out
and
jp
and
bound
and
stos
sub
cmp
push
iret
pop
add
pop
addr16
xorb
in
daa
out
enter
cld
and
mov
shlb
mov
adc
out
ret
ret
mov
xor
psubusw
push
aad
and
push
dec
dec
push
sbb
jge
mov
push
jmp
clc
mov
out
repnz
into
leave
cmp
sbb
out
push
stc
dec
mov
mov
int3
or
out
out
pop
out
into
cmp
jl
or
fldenv
and
jnp
aaa
mov
stc
ljmp
js
sbb
push
rorb
adc
jle
test
dec
divl
cmp
sub
es
inc
mov
inc
mov
mov
add
cmc
dec
jecxz
rcrl
loope
aaa
ret
jnp
jge
sub
jb
and
sub
cmc
and
sub
dec
cmc
fdivrp
ficoms
cmpsl
xor
xchg
aaa
or
xor
andb
decb
ffreep
idivb
xorb
shl
xchg
mov
and
mov
cmpsl
lret
into
dec
sbb
jae
push
cld
fistpl
sti
incb
lahf
mov
jo
or
add
lcall
dec
scas
int
test
jg
cmp
dec
lret
dec
push
or
pop
adc
mov
jmp
xor
add
jne
mov
je
and
pushf
mov
mov
or
notb
jno
arpl
lods
mov
lods
sub
sti
scas
jns
arpl
add
xor
cli
and
movsl
pop
push
push
mov
jg
mov
fnstcw
pop
hlt
popa
xchg
mov
loopne
in
aam
cmc
add
inc
in
fcoms
loope
xchg
push
mov
jno
xchg
lock
aas
lods
mov
sub
pop
cs
stos
push
or
nop
jmp
test
out
mov
stos
insl
je
testb
and
je
xchg
cmp
adc
movsb
ret
cmp
cmpsb
out
lahf
xorb
jnp
and
enter
mov
pop
or
iret
inc
fbstp
ret
inc
mov
in
mov
jo
mov
jno
int
push
repz
test
clc
pop
xchg
fsubrl
std
or
ret
pop
push
and
inc
imul
jg
jbe
pop
push
int
icebp
sahf
jp
lret
aaa
jle
dec
dec
adc
sbb
icebp
test
add
fsubrp
je
sbb
add
add
inc
dec
arpl
or
push
pop
mov
ret
jno
pop
jmp
popl
insl
aad
mov
jns
add
push
xchg
into
testb
push
fsubr
xor
push
mov
addr16
fsubs
cs
test
pusha
dec
std
jne
out
loopne
lahf
cmp
push
dec
lret
jp
insl
mov
mov
flds
hlt
sbb
mov
orl
orl
orl
mov
cmpl
movl
movl
jmp
movl
jne
push
push
push
call
xor
adcl
sbb
mov
and
sbbl
xor
adc
mov
sbb
mov
inc
mov
sub
mov
sbb
cmpl
mov
not
mov
jmp
movl
jg
pushl
call
sbb
or
adc
xor
or
or
sbbl
mov
orl
sub
orl
cmpl
mov
mov
movl
jmp
movl
jbe
pushl
push
pushl
call
and
and
xor
add
and
movzbl
add
mov
add
mov
sub
movl
lea
cmpl
mov
movl
jmp
movl
jg
push
call
movl
xor
add
sbb
or
and
xor
mov
addl
mov
and
mov
or
mov
mov
add
mov
add
orl
mov
mov
mov
or
mov
movzbl
or
shrd
cmpl
mov
mov
mov
mov
jmp
mov
jl
push
pushl
push
push
push
call
and
or
adc
mov
sub
shr
andl
mov
cmpl
not
notl
jmp
mov
movl
jne
push
call
movzbl
adc
and
movl
sbb
xor
add
adc
mov
mov
xor
orl
xor
or
mov
movl
sbb
jmp
push
test
pusha
stos
xchg
nop
hlt
add
fists
adc
clc
adc
mov
enter
jmp
adc
andb
push
adc
std
ja
outsl
push
mov
loopne
push
push
and
test
fs
push
mov
fdivl
push
in
mov
sbb
test
enter
and
cmc
enter
enter
ds
ret
pop
sbb
mov
push
pop
inc
fwait
xchg
outsl
sub
sbb
mov
add
aam
push
les
push
and
ja
mov
scas
dec
daa
mov
pop
add
pop
inc
shrl
ljmp
or
idivl
cmpsb
sub
push
mov
scas
lea
pushl
mov
sti
inc
sub
shll
cmp
outsb
std
dec
ljmp
cltd
or
jbe
adc
xorl
sbbl
scas
test
mov
dec
mov
loop
cmp
test
lea
sbbl
fimuls
dec
bsf
shll
ret
mov
or
or
outsl
mov
es
sbb
mov
cmp
dec
jae
lods
fwait
testl
mov
adc
inc
loopne
dec
stos
pop
lret
movsb
addr16
mov
stc
mov
adc
mov
push
test
fwait
ret
sub
xor
aam
daa
scas
jl
mov
mov
scas
mov
in
scas
pusha
data16
test
les
xchg
push
mov
mov
jb
pop
dec
cmc
cmpsl
out
imul
and
cld
or
pop
test
and
scas
mov
mov
dec
rcrb
push
jecxz
mov
or
dec
inc
push
inc
lahf
negb
cmp
inc
out
jmp
pop
int
pop
pop
out
test
cld
inc
aas
inc
sbb
les
aas
pop
ljmp
pop
pop
lods
lea
jo
and
das
std
pop
in
jmp
jmp
test
pop
pusha
jae
adc
rclb
ds
cmp
imul
cmp
scas
shlb
js
adc
sbb
push
and
les
hlt
xchg
push
cmpsl
add
mov
mov
lcall
loope
mov
ss
dec
jge
cmp
lods
pop
or
xchg
push
or
cs
out
mov
rclb
pop
stc
iret
mov
andl
mov
jecxz
cs
cmpsb
mov
fsts
xchg
push
aad
mov
xchg
xchg
xor
jne
out
loope
jmp
push
out
adc
hlt
in
push
dec
pop
arpl
int3
mov
ds
sbb
es
repnz
mov
adc
ss
test
push
jae
cmp
mov
test
xor
stos
mov
xchg
jle
xchg
inc
push
jmp
push
sub
cmp
mov
push
pop
push
xchg
movb
insl
xchg
in
jp
xchg
aam
add
pop
push
iret
add
lds
adc
jecxz
loop
aas
push
push
lods
jg
rcrl
sbb
pop
rcll
mov
aaa
sbb
add
clc
fdivrp
dec
push
test
mov
pushf
jb
xchg
in
imul
rolb
stc
jo
ljmp
rcr
cmp
lcall
sbb
pop
jmp
lret
fldt
xor
into
or
xor
sbb
scas
pop
popa
dec
mov
push
fsubs
mov
aaa
jecxz
sti
push
rclb
or
dec
mov
shrb
xchg
loope
jno
and
insl
xor
stos
add
mov
out
inc
mov
aad
add
jmp
sbb
xchg
mov
imul
pop
jge
mov
clc
jbe
repnz
mov
and
scas
je
mov
std
and
fsubl
fisttpl
xor
xchg
xor
scas
cmc
cmpsb
lea
fwait
pop
sbb
or
push
fisubl
je
mov
jnp
adc
std
xor
lahf
mov
pop
and
in
mov
dec
test
pop
test
orb
or
inc
jbe
ja
or
jno
aaa
xor
mov
dec
icebp
jae
mov
repz
pop
fistpl
or
xchg
pop
dec
adc
and
jo
fisttpll
enter
test
or
lcall
dec
push
nop
lcall
inc
arpl
scas
fstpt
xor
mov
mov
and
cmpsb
mov
out
push
adc
out
call
sbb
cld
cltd
or
sbb
mov
rclb
cmp
leave
ja
les
frstor
dec
sbbb
sbb
cmp
scas
xchg
and
loop
stos
xor
stos
lahf
dec
imul
sti
sub
clc
in
push
lock
daa
loope
aaa
imul
fidivs
push
sbb
xchg
mov
imul
cmp
in
test
dec
mov
xor
mov
inc
je
lahf
mov
rolb
dec
in
adc
andl
dec
orb
cmp
scas
insl
dec
pop
aad
adc
mov
in
lea
jg
adcl
add
xor
or
iret
mov
gs
test
leave
pop
aas
cmpsl
and
mov
pop
in
cmp
xchg
xor
or
sub
adc
aam
fistpll
adc
clc
sarb
insb
mov
les
add
push
mov
add
ja
fcmovbe
push
test
fmull
rolb
stc
loope
and
push
stc
adcb
mov
mov
fisubl
pop
pop
ljmp
dec
push
push
xchg
adc
pop
sub
cltd
or
xor
loopne
add
into
dec
push
lods
pop
jno
les
imul
das
jo
test
and
movsl
scas
pop
xchg
testl
jecxz
pop
add
jge
sub
or
sbb
add
out
lret
pop
daa
xchg
subb
cld
shr
sub
xchg
adc
or
fldt
inc
xchg
outsl
inc
add
negl
movl
neg
movl
neg
movl
movl
add
movl
or
movl
mov
adc
movl
cmpl
movl
mov
jmp
not
mov
jle
pushl
call
sub
orl
movl
andl
movl
and
adcl
and
movl
movl
jmp
push
sbb
sbb
sbb
sbb
movl
push
clc
adc
subl
popf
push
out
gs
lret
lds
xor
mov
in
arpl
js
fsincos
cmpsl
and
dec
mov
bound
lret
adc
push
stos
push
outsl
xor
and
cwtl
cmp
mov
inc
lods
sub
iret
fwait
push
nop
mov
scas
mov
shll
or
mov
xchg
mov
outsb
pop
push
lods
add
xchg
or
pop
xor
jmp
pop
icebp
jmp
lret
std
aad
sub
xor
in
sbb
jg
cmp
dec
dec
jbe
testb
or
jne
shrl
pop
adc
outsl
pop
jns
pop
test
jl
mov
pop
fsubr
add
and
and
aam
inc
in
sti
fcmovb
pop
sbb
mov
add
dec
pop
lcall
rorl
mov
movsb
mov
insl
cs
cmp
xchg
addr16
mov
and
jb
mov
popa
in
cmp
outsl
mov
lret
test
xor
mov
out
jp
push
ja
xor
mov
in
imul
xlat
mov
stc
es
daa
cltd
imul
push
and
icebp
stc
test
adc
leave
aad
jns
jecxz
jle
pop
lds
in
push
loop
xorl
dec
movsl
sarb
mov
dec
sti
xor
or
pop
js
rorl
les
ret
push
outsl
jno
sbb
movsb
xor
or
insl
xchg
sbb
insl
sti
pop
andl
xor
popf
mov
xor
orl
mov
repnz
outsb
mov
jle
cltd
pop
fimull
je
aad
pop
mov
sub
cmp
xchg
aaa
dec
stos
adc
jne
in
mov
or
jle
or
xor
mov
sahf
dec
cmpsb
hlt
popa
mov
lds
je
mov
add
ds
lds
shll
pop
or
out
stos
leave
nop
pop
mov
push
sub
jno
imul
adc
mov
xchg
inc
or
subl
lea
jecxz
push
jne
je
out
xor
and
je
xchg
add
repnz
test
clc
xor
nop
mov
sub
jnp
out
addb
mov
lret
in
dec
cmp
ja
mov
das
nop
adc
bound
mov
pop
shrl
loope
repz
std
aas
xor
push
fdivr
or
mov
inc
inc
scas
dec
and
lahf
mov
int3
xor
movsb
lock
fsubs
jp
aas
jnp
scas
call
ljmp
and
cltd
fsubrs
lea
push
cmp
in
mov
sahf
je
and
hlt
sbb
adc
aas
andnps
popa
clc
mov
cli
push
mov
mov
adc
xor
and
pop
jns
insl
std
or
loopne
xchg
popa
sbb
arpl
xchg
xchg
lods
aad
call
daa
adc
sub
idivl
pusha
daa
gs
cltd
in
xchg
push
icebp
and
add
jb
ret
dec
js
and
pop
dec
cwtl
cmpsl
stos
jle
stos
add
mov
or
xchg
xchg
stos
fidivl
aam
sbb
mov
xchg
inc
jg
jp
sub
mov
out
cld
mov
sbb
xchg
loope
out
xchg
cmp
loop
push
push
test
pop
ret
adc
adc
dec
push
mov
dec
mov
call
xchg
adc
sub
mov
jle
mov
stos
bound
cmp
rcll
xor
pop
inc
pop
loop
popf
mov
sahf
das
sbb
fistpl
add
push
jle
ficompl
push
sub
pusha
dec
inc
sub
js
daa
in
mov
sahf
filds
inc
pop
stc
cmp
pop
xor
mov
dec
adc
pop
mov
insl
hlt
notl
lock
adc
out
ds
pop
xor
decb
mov
cli
xor
mov
lds
mov
push
push
sahf
and
mov
mov
pop
popf
das
cmp
mov
xchg
inc
movsb
dec
sbb
sub
cmp
lret
sti
sbb
rclb
cli
mov
in
xchg
jp
sub
ja
push
add
dec
sbb
push
mov
push
repnz
outsb
mov
sub
sub
sub
inc
mov
call
ja
jp
das
rolb
outsl
in
jb
pop
jae
inc
sbb
rorb
sbb
mov
scas
cmp
pop
dec
sub
cmp
into
or
rcrb
movsl
imul
add
fwait
movsb
or
ret
mov
xor
pusha
push
in
adc
gs
push
mov
dec
data16
mov
daa
je
ds
jne
xchg
xor
mov
icebp
sbb
inc
push
push
andb
popf
or
ret
mov
jge
xor
xchg
and
pop
jnp
orb
adc
popa
dec
or
and
dec
adc
or
push
ret
cmp
jmp
jns
push
aad
sti
push
aad
push
pop
mov
addr16
dec
xchg
mov
dec
daa
stos
repz
pop
lahf
iret
test
add
cmp
mov
mov
pop
jo
and
int
pop
mov
lret
push
jmp
inc
cmpb
jmp
sbb
clc
lret
ficompl
cmp
ljmp
push
repnz
loop
iret
sbb
or
std
inc
jne
push
xchg
pop
xlat
js
sub
xchg
stos
xor
repnz
cmp
dec
std
dec
sbb
lret
cmpsl
rorb
inc
pop
pusha
jne
in
out
dec
sbb
sub
lea
jbe
lcall
rolb
and
pushf
movsb
popa
vzeroupper
sbb
lahf
lods
fldcw
xchg
frstor
mov
cmp
or
add
repnz
jo
add
lret
jl
popf
mov
rcrl
xor
jnp
das
mov
movl
movl
movl
not
movl
cmpl
movl
movl
jmp
movl
not
je
push
push
push
push
pushl
push
push
pushl
call
sbb
negl
orl
subl
subl
orl
movl
movl
movl
sub
movl
jmp
loop
in
gs
ljmp
aam
adc
push
clc
adc
push
hlt
rolb
mov
adc
jl
je
sbbb
sbb
pop
mov
nop
in
loopne
inc
xchg
rcll
mov
test
sbb
insb
addb
adc
cmpsl
push
aad
mov
orl
add
stos
mov
fmul
loope
int3
ljmp
dec
pop
cmp
push
jb
std
inc
or
and
jns
das
lahf
dec
ss
xchg
push
pop
mov
xchg
sahf
bound
popa
pop
leave
subl
sub
testb
xlat
nop
hlt
or
jb
movsb
xchg
jb
pop
inc
mov
les
adc
movsl
cltd
insb
mov
movsb
lea
ret
cmp
jae
dec
cs
insl
ja
dec
add
sbb
or
and
jae
les
adc
xor
jecxz
negl
add
shlb
sub
orb
cs
jg
imul
push
push
lahf
mov
notb
out
int
stc
sahf
les
and
mov
in
out
fwait
pop
adc
or
mov
push
pop
cmp
pop
fcoml
les
push
mov
ret
xor
aas
clc
rolb
fiaddl
xor
sub
add
das
push
push
adcl
jg
push
sub
pop
ds
jne
adc
push
flds
add
test
and
ja
insb
cs
xchg
mov
das
into
push
int
sti
pop
xor
iret
aad
mov
and
pop
outsl
pop
pusha
and
add
mov
mov
sbb
adc
sub
orb
aas
sarl
push
jnp
pop
and
pop
mov
xor
cltd
or
push
lcall
mov
mov
rol
incb
lods
mov
negl
imul
push
in
lods
insl
and
or
sub
addr16
inc
sub
insl
sahf
sub
push
and
pop
mov
jo
push
daa
aaa
sbb
jns
movsb
outsb
xchg
sbb
cwtl
pushf
js
in
cltd
fcompl
int3
jae
fisttpl
leave
sti
bound
pop
xchg
in
sbb
xchg
mov
outsl
bound
sbbl
mov
rcr
mov
xchg
jnp
jmp
repnz
adc
and
ret
push
cmp
in
mov
xor
shr
xchg
pop
sbb
lret
mov
int3
adc
mov
lods
int3
or
dec
dec
in
cmp
and
cmp
push
inc
std
cmpsl
loop
shll
stos
out
mov
mov
imul
fadds
outsb
cltd
push
leave
imull
mov
cmp
mov
pop
pop
dec
leave
xor
fsubl
inc
scas
mov
sub
shll
mov
movsb
push
mov
inc
sbb
xchg
pop
sti
mov
jb
jne
mov
arpl
cmp
dec
ret
and
loope
xchg
cwtl
sbb
jmp
outsb
and
pop
call
leave
adc
andl
rorb
jle
dec
fcomps
or
dec
push
scas
or
cmp
mov
sti
sbb
addl
add
test
out
pusha
in
push
bnd
push
pop
xchg
loope
or
popf
loop
je
aad
imul
mov
fmull
inc
cli
xchg
incb
lods
pop
into
lret
rcrl
mov
sub
faddl
mov
mov
lret
inc
cs
or
pop
sub
adc
popf
cld
pop
cmp
mov
inc
push
xor
sub
insb
mov
mov
pop
mov
dec
adc
inc
aad
add
inc
mov
mov
cwtl
ljmp
inc
pop
in
add
ficoms
mov
jnp
adc
xchg
call
test
daa
mov
hlt
cli
lock
sbb
xchg
int
xor
jecxz
xor
pop
ja
push
inc
out
or
mov
ss
sbb
out
jnp
lock
jns
arpl
sbb
dec
fildll
imul
adc
adc
imul
pushf
cmp
rcrb
xor
or
fs
xorb
mov
notl
fldt
xchg
xor
repnz
daa
in
or
sub
sub
movsl
add
sbb
movsb
inc
cmc
pushf
jecxz
int
and
mov
pop
mul
mov
mov
cmp
xor
aaa
movsb
pushf
jo
insl
mov
mov
mov
or
and
cli
out
mov
jnp
add
push
jns
in
mov
mov
int3
testb
jge
loop
sub
sub
jnp
hlt
ficoms
adc
xorb
push
iret
sbb
test
je
inc
push
mov
js
cmp
subb
fcomps
outsl
and
test
icebp
jp
gs
iret
insb
add
into
into
popf
inc
add
push
lret
movsl
jbe
std
mov
push
cs
push
xor
frstor
cmpsb
sbb
add
in
imul
in
sbb
xlat
sahf
pop
xorl
lahf
fmuls
cwtl
vsqrtpd
mov
or
test
lret
dec
sub
adc
outsl
fistl
push
dec
rcrl
mov
arpl
mov
ljmp
lds
ret
jnp
xor
movsb
xor
js
push
cmp
xchg
ret
mov
ds
inc
jno
push
das
xor
push
mov
loop
add
or
cmp
fldpi
mov
daa
stos
add
adc
punpckhwd
pop
loopne
cltd
push
adc
fistl
adc
mov
popa
xchg
xchg
inc
sahf
mov
lahf
xorb
sub
jbe
lods
cmp
hlt
aas
mov
sub
orl
pop
pop
std
xor
inc
push
dec
dec
testb
and
sub
popa
xchg
or
mov
pop
fdivl
bound
rcrl
insb
sub
in
inc
mov
movl
movl
mov
adcl
shl
xor
or
and
mov
push
xorl
push
sbbl
push
push
call
mov
mov
xor
mov
and
mov
orl
xor
mov
cmpl
mov
not
movl
not
jmp
movl
movl
jb
pushl
push
push
call
sub
and
subl
xor
andl
add
orl
xor
or
mov
adc
mov
cmpl
mov
movl
movl
jmp
movl
jg
push
push
pushl
call
or
sbbl
and
xor
not
subl
cmpl
movl
movl
mov
jmp
movzbl
jge
push
pushl
push
push
call
xorl
sbb
sbb
movzwl
xor
xor
xor
and
sub
not
mov
lea
cmpl
mov
mov
jmp
movl
ja
push
push
pushl
call
sub
mov
or
sbb
or
adc
or
cmpl
mov
movzbl
jmp
mov
jl
pushl
call
xorl
mov
mov
xor
add
xorl
mov
mov
orl
or
andl
and
cmpl
mov
movl
movl
mov
jmp
movl
movl
jne
pushl
pushl
call
adc
movzwl
sbb
add
mov
sbb
mov
or
or
xor
or
or
mov
or
xor
cmp
jne
mov
and
mov
or
shrd
shr
mov
sbb
mov
shl
orl
xor
subl
xor
or
mov
cmp
jmp
pop
fdivrs
sbb
cltd
fistps
iret
adc
push
clc
adc
pop
or
repnz
sub
mov
shl
adc
xchg
faddl
pushf
addl
enter
out
inc
sbb
popa
sbb
addr16
or
sahf
clc
dec
fwait
int
data16
scas
jae
push
xor
sarl
push
xor
jg
scas
mov
jae
aas
outsl
dec
subl
jle
jp
push
out
stc
lock
xor
xchg
xor
dec
rorl
jp
test
fldl
fdivrs
and
hlt
add
mov
dec
xchg
adc
aaa
lods
or
out
or
inc
jg
push
or
test
xchg
or
icebp
movsl
and
jmp
xchg
data16
push
sbb
cmp
lods
das
popf
lds
and
jp
dec
insb
into
dec
loope
outsl
inc
or
sbb
test
jne
jle
sbb
inc
sbb
insb
sbb
jg
pop
in
jb
and
or
cmp
xchg
test
cmc
inc
sbb
pop
add
cmp
mov
mov
mov
add
es
adc
inc
mov
movsb
dec
loop
stos
icebp
wbinvd
mov
shll
aam
adc
push
jge
lds
adc
jp
jnp
stos
jae
js
mov
mov
in
sub
mov
push
aad
leave
test
mov
add
fwait
xor
or
mov
adc
scas
fnsave
pop
popa
jbe
out
xchg
mov
shl
cmpsb
pop
sbb
into
inc
lcall
jmp
out
negl
mov
negb
movsb
outsl
cmp
lret
adc
sti
andl
push
lahf
cmpsl
stos
ficompl
mov
mov
in
add
popa
mov
call
mov
insb
pop
add
int
adc
out
rcll
ds
int3
arpl
pop
adc
push
cmc
arpl
pop
cmp
cltd
mov
mov
divl
in
pop
inc
ja
fsts
leave
inc
ss
add
xor
jg
jne
mov
call
lods
pop
loop
bound
xor
das
outsb
xchg
push
mov
enter
into
push
in
movsb
cmc
loop
sub
mov
fimull
push
prefetch
mov
add
ds
inc
negl
scas
aas
push
or
mov
and
sti
xchg
pushf
jae
jne
pop
pcmpeqb
gs
xchg
xchg
outsb
dec
lahf
xchg
sbb
inc
sub
rcrl
jns
loope
aad
cmpsl
loop
mov
insl
push
js
jae
push
mov
cmpsb
mov
test
imul
mov
into
iret
push
sahf
inc
xchg
sub
lds
insb
dec
out
mov
pop
xchg
idiv
xchg
enter
push
je
xorl
jb
daa
decl
loope
mov
jmp
dec
xchg
sarb
ret
xchg
pop
mov
lcall
and
add
mov
dec
jg
xchg
pop
mov
sub
mov
mov
stos
or
loope
xchg
imul
mov
jne
decl
push
call
pop
pop
aaa
jae
loop
ss
inc
xchg
inc
aas
out
pop
xor
imul
out
sub
decb
cli
jno
in
stc
push
ja
cmp
insl
xor
fmul
cmp
add
adc
pushf
xchg
pop
icebp
stos
aas
insb
adc
dec
incb
inc
push
cltd
icebp
mov
dec
mov
out
jp
test
xor
repnz
mov
inc
ljmp
fdivrs
mov
or
bound
sbb
cmpsl
cmp
test
mov
mov
shl
sub
adc
adc
test
mov
push
jae
cmp
mov
pop
lods
push
push
cmp
dec
push
lahf
retw
push
fadds
loopne
pop
cli
cltd
ss
jno
in
dec
push
stc
call
pop
iret
sti
or
add
add
mov
push
and
cwtl
test
sub
divl
mov
sub
adc
and
pop
pop
and
notl
mov
mov
push
or
ret
pushf
into
xor
xchg
jl
and
test
sub
insl
lock
or
movsl
inc
pop
sub
sar
sbbb
stos
sbb
add
jl
xor
daa
stc
outsl
ja
out
lea
sbb
dec
into
pop
imul
sub
mov
adc
dec
mov
hlt
adc
subb
push
pop
mov
jge
sbb
xor
mov
push
faddl
pop
push
insl
pop
stos
pop
ret
jle
inc
or
popa
jg
jns
loope
stos
popa
lea
cmp
xchg
mov
stos
cmp
xorb
push
pusha
add
dec
fs
jecxz
scas
bound
dec
inc
adc
pop
or
xchg
fisubrl
mov
jb
lret
inc
push
add
pop
mov
push
cli
cmp
inc
dec
inc
inc
out
mov
lods
mov
cs
dec
mov
negb
adc
cmp
xchg
jg
shll
leave
pop
test
data16
lret
leave
test
xchg
sub
ljmp
fistl
adc
lea
sub
or
pop
adc
ja
out
dec
mov
mov
lcall
and
sahf
frstor
xchg
loop
pop
notl
jno
in
pop
pop
push
loopne
lds
test
jmp
addr16
scas
ss
jmp
cwtl
test
and
cmc
mov
fs
jecxz
or
addr16
cmp
call
test
hlt
xchg
fwait
dec
test
cmc
dec
jbe
xor
mull
idivb
jecxz
dec
and
mov
sbb
and
sbb
dec
jae
mov
mov
fldenv
ret
adc
leave
and
cltd
xor
push
or
jge
sbb
or
jle
pop
mov
stos
sub
cmpsl
sub
ss
out
cld
arpl
test
sbb
xchg
cmpsl
mov
or
mov
adc
or
add
add
movl
mov
mov
jmp
movl
jae
push
push
call
inc
addl
sbb
mov
xor
mov
negl
sbbl
mov
cmpl
movzwl
mov
mov
jmp
movl
mov
jle
push
push
push
push
push
push
call
subl
xor
add
sbb
mov
xor
addl
mov
jmp
std
fnstsw
pop
sbb
cmpsb
pop
decb
lods
add
adc
push
clc
adc
or
cmp
sbb
and
mov
pop
pusha
ror
dec
sub
test
loopne
and
jecxz
insl
fimull
into
jo
ja
les
aaa
inc
out
hlt
leave
ja
add
mov
outsl
jb
lds
icebp
ret
pop
stc
or
outsb
test
jecxz
movsl
xchg
mov
mov
mov
aaa
pusha
popa
ret
push
cld
jae
outsl
imul
arpl
jmp
jo
push
jnp
push
add
shrl
cmc
lcall
push
movsb
mov
sub
sarb
stos
fwait
shlb
pop
push
sbb
jno
fmuls
and
lods
inc
test
loop
xlat
or
xchg
imul
sub
mov
pop
insl
or
ret
std
inc
jg
fdivrs
xor
dec
sbbb
sbbb
rcrl
xchg
mov
in
ret
add
xchg
or
daa
sub
in
sub
mov
inc
inc
mov
pop
sbb
fwait
jmp
sbb
addl
jmp
inc
mov
xchg
mov
insl
lock
sbb
jecxz
ret
mov
push
or
call
push
sub
in
jle
pusha
add
push
push
rcr
fsts
mov
add
je
pop
mov
jbe
pusha
dec
sub
iret
fldt
lds
loope
call
pop
mov
cmp
pop
jnp
sub
jle
cmp
adc
imul
sbb
pop
call
jb
xor
sub
repnz
pop
inc
mov
dec
imul
lret
cmp
in
aaa
push
push
inc
mov
or
scas
xor
mov
js
subl
cmc
and
cmp
aaa
aam
repnz
ja
mov
cmp
or
and
fstpt
sub
js
mov
aaa
xor
test
mov
loope
adc
sub
dec
cmp
cltd
or
cwtl
or
add
lret
movb
mov
push
cltd
les
push
mov
xorl
loop
dec
mov
int3
imul
fisttpl
pop
dec
or
adc
or
hlt
add
inc
cwtl
jg
inc
rclb
push
and
data16
insl
adc
inc
popa
lret
mov
inc
js
jle
fldcw
out
pop
inc
xchg
xor
bnd
sbb
sbb
pushf
adc
call
pop
or
call
or
mov
orb
into
add
sbb
inc
push
test
xchg
in
jae
cmp
and
mov
inc
jecxz
and
pop
scas
jns
dec
lds
movsl
xor
in
icebp
adc
out
fcmovb
cs
lods
jle
test
lret
bound
ss
jnp
xchg
rcll
jb
xor
jg
lds
push
imul
sub
push
repnz
cmp
mov
mov
add
pop
xor
icebp
mov
add
popf
pop
push
mov
mov
sub
data16
sub
out
pop
adcb
and
scas
or
fists
call
das
dec
stos
je
in
adc
or
mov
bound
ds
sbb
lods
or
into
jno
ficoml
mov
repnz
lret
les
sbb
adc
aas
mov
mov
fnstsw
aad
fstps
jnp
inc
xchg
push
imul
sub
push
aaa
mul
mov
mov
mov
xchg
daa
pop
add
add
sbb
es
fwait
add
repz
inc
out
mov
pop
in
sub
pop
sub
xchg
scas
scas
push
pusha
cmc
outsb
aaa
addr16
or
xor
jp
and
adc
sbb
sahf
or
iret
cmc
lds
in
mov
xor
mov
repz
mov
adc
mov
ret
ja
cmp
inc
sar
xchg
push
mov
pushf
add
ljmp
mov
movsb
cmp
lods
xchg
cmpsb
xchg
scas
out
clc
mov
int3
ja
ret
or
inc
push
insl
adc
aam
add
ret
ja
mov
jp
mov
jge
xchg
mov
imul
dec
lret
aas
shlb
mov
lahf
subb
lea
mov
mov
sub
push
das
imul
das
imul
mov
mov
sub
jp
outsb
rorl
imul
fisttpll
add
xor
jmp
push
adc
inc
in
lods
int3
es
mov
add
push
movsl
cmc
ja
es
div
sbb
popa
adc
incl
sahf
jae
insb
xchg
idivb
jb
outsb
jbe
adc
mov
jg
jge
rcrb
aam
scas
addb
and
xor
rcr
enter
sbb
push
sub
dec
mov
aaa
iret
inc
sub
cmp
mov
jne
cmp
push
lea
cltd
insl
push
loopne
jecxz
pop
or
mov
sbb
es
cld
lds
ljmp
mov
lock
es
test
and
movsl
mov
and
ds
subl
shl
lcall
inc
pop
mov
test
cmpsb
jge
adc
ret
and
inc
lret
out
clc
inc
outsl
xchg
fistpll
push
push
pop
stc
loopne
and
std
xchg
mov
pusha
mov
loope
push
mov
jle
adc
cmp
dec
mov
add
cmpsb
push
andb
test
xor
test
lea
adc
or
arpl
inc
loopne
call
xchg
jne
push
mov
and
mov
out
push
outsl
pop
add
dec
aam
aam
std
shlb
jmp
xchg
push
imul
pop
jo
jle
out
inc
cmp
xchg
ss
adc
adc
jnp
and
sbb
cmp
mov
lahf
jg
jl
dec
dec
mov
lea
inc
cli
sub
fdivrs
jg
aas
testb
fistl
je
cmp
fbld
and
xor
xor
add
mov
shrd
incl
mov
cmpl
movl
mov
mov
not
jmp
movl
movl
jne
pushl
call
sbb
neg
or
add
or
mov
adcl
xor
shr
mov
xor
or
shl
sub
mov
mov
mov
orl
add
mov
sbb
mov
sub
mov
shrd
or
jmp
je
stos
cmc
sub
inc
lods
jmp
inc
xchg
ret
adc
push
clc
adc
mov
std
cmp
cmpl
loopne
and
aad
pop
movsl
jl
dec
and
in
test
aas
movsb
sbb
pushf
cmc
mov
repnz
imul
inc
mov
in
and
push
or
or
out
and
inc
inc
jbe
test
in
in
and
push
jmp
cmp
iret
clc
call
xchg
xor
repz
pop
push
pop
sbb
pop
sub
push
push
pusha
sub
push
mov
cld
mov
xor
adcl
jmp
gs
push
roll
mov
xor
push
pop
jp
inc
popa
mov
jb
popf
out
mov
int3
add
bound
inc
jae
xchg
in
push
loope
push
pop
lds
mov
inc
lcall
and
pop
int
data16
jmp
imul
push
outsl
rcrb
imul
fcomps
mov
ret
push
test
push
pop
cmpsb
pusha
sbb
add
or
leave
addr16
fldcw
xor
pop
pushf
mov
and
sub
das
dec
or
sub
adc
scas
xchg
fistl
jp
push
scas
mov
mov
test
imul
inc
jns
mov
sti
sbb
pop
sub
add
cmp
add
push
jno
sub
mov
pmuludq
xchg
fldcw
push
pop
mov
mov
iret
and
out
xchg
push
jle
loop
jl
adc
insl
subb
xchg
scas
roll
inc
mov
dec
out
mov
cmp
lret
fs
aad
sub
out
cwtl
fists
and
nop
scas
nop
cs
mov
xor
sbb
hlt
adc
mov
ja
orl
fiaddl
lock
out
pop
js
popa
dec
pop
push
mov
push
mov
mov
shll
fists
xchg
mov
outsb
jp
in
adc
xchg
xor
dec
cmp
or
fcmovnu
cwtl
rclb
aam
jo
lcall
push
adc
test
dec
xchg
js
movb
fld
mov
rclb
xlat
or
xor
push
sbb
lret
jbe
mov
add
push
or
mov
or
xchg
adc
scas
lcall
leave
lds
arpl
pop
popf
pusha
ret
adc
rcl
inc
shrl
xchg
sub
add
cs
xor
dec
mov
subl
cmp
xchg
fnstenv
mov
out
sti
jno
inc
xchg
into
test
loope
pop
jle
int3
fnstenv
int
cwtl
mov
es
mov
js
stos
sub
cmp
dec
sti
mov
cmp
icebp
insb
movsl
js
mov
jbe
push
out
sbbb
in
pop
pop
mov
inc
sub
xchg
sub
rol
xor
cmp
int
pop
inc
mov
jo
lret
adc
and
gs
ret
std
lock
addr16
test
ret
je
adc
cld
mov
inc
inc
sahf
ret
cmp
sub
mov
stos
dec
scas
push
cli
dec
dec
ds
sahf
inc
je
imul
pop
shrl
or
xchg
aad
leave
dec
movsb
repz
imulb
leave
imul
xor
clc
loop
xchg
cmp
xchg
in
ret
inc
mov
jne
out
out
mov
xchg
in
adc
aas
dec
or
mov
pop
gs
mov
in
rcrb
mov
popf
mov
xor
insb
scas
and
jle
add
and
add
movsl
push
push
cld
xchg
sbb
mov
or
sub
frstor
adc
stos
sub
imul
enter
mov
test
sti
xchg
jns
mov
cli
push
mov
fcmove
fisttpl
inc
inc
js
mov
xchg
cmp
ret
mov
mov
and
js
xchg
fwait
jno
daa
jo
aaa
icebp
and
jmp
pushf
mov
lcall
jb
dec
xchg
mov
out
imul
leave
or
xlat
shlb
mov
icebp
aam
xor
test
bound
cli
fiaddl
xchg
jns
jae
push
insl
pop
push
push
xchg
jmp
nop
loope
cld
mov
dec
push
or
xchg
inc
push
jl
in
cmp
cmp
shrl
aam
or
stos
fisttps
xchg
mov
pop
hlt
lret
fists
mov
mov
jge
sub
mov
push
lds
pushf
push
fwait
mov
mull
jp
add
push
xor
ds
cmp
add
mov
fmuls
fnsave
fisubs
jb
pop
cltd
arpl
ret
fnstcw
push
mov
mov
mov
aas
or
in
mov
push
sbb
int3
std
or
fdivp
mov
pop
jae
xor
and
int
mov
mov
sbb
lret
call
xor
outsb
lret
jmp
out
jg
lods
push
inc
fimull
js
scas
sub
cwtl
outsb
sbbb
or
inc
adc
mov
sub
mov
mov
ret
aas
sbb
and
lcall
add
movsb
pop
pop
pop
lods
loope
lcall
mov
out
push
push
hlt
and
xchg
xchg
outsl
ja,pt
je
add
pusha
xchg
enter
mov
sub
mov
xchg
mov
lret
mov
jno
fiaddl
xor
mov
and
aad
mov
mov
push
and
aam
mov
lret
clc
iret
pop
cli
cld
push
adc
xor
xchg
inc
xor
jle
adc
or
out
push
insl
imul
sbb
fcomip
jecxz
clc
pop
imul
and
sub
sbb
inc
lahf
les
out
je
cltd
xchg
test
dec
xchg
imul
pushf
pop
test
push
dec
cli
xor
ds
jmp
push
in
mov
xchg
sbb
pop
mov
mov
out
call
es
add
movl
movl
mov
jmp
movl
movl
jb
push
pushl
pushl
push
pushl
push
pushl
call
incl
mov
and
mov
xor
xorl
sbb
movzbl
sbb
mov
mov
sub
sub
mov
cmpl
movl
mov
jmp
mov
mov
jb
pushl
pushl
push
push
call
movzwl
xor
adc
add
inc
mov
mov
adc
mov
xor
notl
shl
cmpl
not
mov
mov
jmp
movl
jl
pushl
call
or
xorl
xor
sbb
adcl
movzbl
sub
xor
sbb
or
cmpl
movzbl
mov
mov
jmp
movl
not
jae
pushl
pushl
push
call
mov
sub
orl
adc
neg
mov
or
mov
mov
or
mov
and
mov
notl
shrd
xorl
shr
mov
cmpl
mov
mov
mov
jmp
movl
mov
jl
pushl
pushl
push
pushl
pushl
call
mov
mov
adc
xor
or
sub
addl
addl
mov
cmpl
movl
not
jmp
movl
jle
push
pushl
call
adc
xorl
or
subl
movl
or
add
add
mov
orl
xor
xorl
xor
or
shl
negl
jmp
test
out
pop
mov
mov
aas
ss
aad
adc
push
clc
adc
adc
cmp
das
cli
add
dec
fnstenv
push
dec
jg
out
test
clc
out
xchg
xchg
or
sbb
xor
dec
cmp
add
add
push
mov
xlat
push
out
push
hlt
aad
and
sub
cmp
mov
call
in
cmc
dec
stos
add
xchg
cld
cmp
add
adc
ds
cld
add
sub
cs
jmp
jne
ret
adc
xchg
ret
push
pushf
iret
add
movsb
outsb
stc
cmp
js
adc
mov
loope
dec
xchg
push
popf
andb
inc
ss
push
pop
shll
outsl
cltd
pop
inc
je
mov
dec
dec
xlat
push
or
jnp
dec
les
adc
xchg
or
orb
mov
sbb
cwtl
push
push
lds
lret
into
adc
enter
jns
flds
mov
push
xchg
dec
push
add
push
mov
push
nopl
and
nop
out
jmp
lcall
daa
xchg
dec
ret
push
jnp
movb
sahf
loopne
sbb
into
stc
in
pop
into
jae
cltd
ss
xchg
fs
sbb
and
gs
pusha
imul
adc
in
lcall
stc
adc
cs
lods
js
mov
or
mov
mov
xor
or
fisubrs
dec
into
loopne
and
push
xchg
cmpsb
push
sbb
into
inc
lods
es
rclb
mov
xor
mov
pop
fdivs
ret
push
imul
loop
stc
sub
pusha
std
or
pop
popa
sbb
loope
sbb
add
xchg
mov
adc
scas
xchg
mov
sbb
cmp
xor
lea
dec
std
jae
sub
or
and
out
pop
mov
mov
push
in
inc
mov
lock
fldenv
xchg
in
cmpsl
and
push
sub
lea
pusha
aas
int
and
pop
push
adc
jmp
cli
push
jg
fdivl
ret
jp
xor
xor
dec
fnstcw
or
xor
inc
pop
xchg
out
pop
mov
ficoms
mov
mov
adc
rcrl
pop
push
xchg
mov
aam
lcall
adc
add
mov
out
add
sbb
and
fwait
adc
jp
add
out
xor
mov
dec
in
mov
int3
outsb
and
sarb
jae
sti
push
push
or
sub
in
mov
outsl
dec
std
jle
out
fildll
mov
es
pop
xor
adc
jmp
mov
je
sti
cld
mov
fisubrl
xchg
int
xchg
aad
dec
push
movsl
cmp
cmp
push
xchg
js
push
loop
add
mov
mov
pop
and
dec
or
nop
and
por
jle
rol
inc
xchg
mov
paddusw
jle
mov
pop
dec
xchg
sub
sub
enter
push
std
clc
sbb
outsl
mov
push
roll
jnp
enter
add
push
sbb
mov
or
sub
mov
push
scas
repnz
movsl
andb
mov
popf
push
xchg
mov
ljmp
pushf
and
inc
hlt
dec
outsb
rcll
adc
jne
sub
in
dec
popf
or
push
test
and
in
push
jno
ret
in
test
mov
xchg
mov
add
sbb
mov
jp
aaa
push
cmc
push
adc
mov
sub
pop
xor
push
mov
mov
andb
adc
sbb
cmp
hlt
outsb
clc
xchg
pop
andb
dec
mov
jmp
sbb
pop
stc
mov
idiv
sbbb
lahf
iret
imul
icebp
cmc
movsb
loope
sbb
popa
jnp
addl
fwait
mov
jno
rcr
pop
cmp
jle
mov
mov
and
inc
sbb
stc
push
leave
sbb
jns
mov
jle
rcrb
shl
jns
int
aaa
fisubrl
int
push
sbb
jp
sbb
fcmovb
mov
mov
hlt
loope
cmp
in
jmp
insl
das
fdivl
mov
iret
jp
pop
ja
xor
cmpsl
das
in
cmpb
mov
cld
adc
aad
mov
pushw
ss
insl
or
mov
jecxz
sbb
movsl
jae
and
jmp
jg
or
pop
sub
in
icebp
ja
in
test
inc
rcrl
add
iret
mov
dec
push
jae
dec
add
add
dec
mov
adc
push
aad
mov
sbb
pop
push
lcall
ljmp
aad
push
fwait
out
mov
inc
xor
adc
leave
adc
push
stos
or
rol
test
mov
mov
clc
popa
mov
and
ljmp
mov
out
fldt
lcall
stos
push
jecxz
mov
push
js
xchg
out
add
les
ficoml
jbe
push
cmp
pop
xor
adc
inc
repz
movsb
fldenv
fsubl
inc
or
fistpl
bound
popa
pop
dec
xchg
and
push
mov
sbb
inc
jge
and
rolb
insl
cmp
jne
push
arpl
addb
jmp
or
jne
add
repnz
xchg
fnstenv
push
inc
not
daa
pusha
xchg
mov
adc
xchg
inc
dec
fisttps
sbb
mov
inc
or
mov
or
mov
mov
inc
add
inc
push
ss
in
dec
jl
fadds
inc
imul
jle
mov
xchg
hlt
push
inc
dec
fidivrl
stos
mov
push
je
cmp
dec
adc
push
cmp
insl
ret
ret
xchg
add
pop
ror
rcll
scas
pop
cwtl
push
data16
lahf
sub
xor
mov
inc
jb
enter
ret
pop
jge
push
push
sarl
xor
int3
mov
pop
gs
lcall
inc
enter
pushf
inc
sti
mov
mov
cmc
rorb
add
rorb
adc
sub
mov
subl
shrd
shr
mov
cmpl
mov
movzbl
jmp
movl
jb
push
push
call
mov
xor
sbb
sbb
andl
sbb
sbb
mov
mov
cmpl
mov
mov
notl
jmp
movl
mov
jne
pushl
push
push
push
call
add
mov
or
addl
xor
mov
add
mov
adc
adc
xor
mov
andl
xor
adcl
or
shl
or
imul
mov
mov
addl
shrd
xorl
mov
incl
mov
andl
xor
shr
incl
mov
cmpl
movzbl
movl
mov
mov
jmp
movl
jg
pushl
push
push
call
adc
mov
or
mov
dec
andl
adc
adc
sbbl
mov
xor
or
subl
shl
sub
jmp
jl
mov
xor
dec
testb
cmpsl
adc
push
clc
adc
or
leave
push
sub
or
call
inc
nop
stos
xchg
rcrl
fcompl
add
xlat
vsubps
out
adc
flds
dec
repnz
mov
repnz
repz
fdivrs
lds
mov
aas
jmp
cmp
cmp
lds
jb
push
and
xchg
pop
test
dec
xchg
fadds
cltd
shlb
cmp
out
push
aaa
repnz
lcall
scas
shr
mov
in
in
or
adc
adc
dec
hlt
loopne
sbb
sbb
popa
or
pop
pop
ret
std
xchg
loop
dec
inc
jge
pushf
and
push
cwtl
mov
pop
push
jecxz
lock
pushf
cwtl
dec
xor
enter
movsb
scas
push
unpckhps
cltd
xor
inc
or
sub
cmp
rolb
daa
xlat
add
and
xchg
inc
sbb
xorl
mov
rolb
mov
outsb
outsb
addr16
mov
ret
or
iret
jmp
addr16
push
inc
xor
test
fisttpll
xchg
push
adc
jb
mov
mov
fstpl
cmp
mov
sub
adc
lods
movsl
pop
pop
cltd
jbe
push
mov
jmp
xor
lret
fidivs
cld
sub
insl
mov
mov
ret
aam
in
icebp
stos
pushf
mov
mov
add
cmp
sbb
aad
je
cmp
dec
ret
xor
add
enter
inc
adcl
nop
lahf
dec
call
sub
aam
jnp
xchg
mov
stc
fildll
xchg
dec
in
popa
push
negl
xchg
push
mov
inc
jbe
cmp
ret
jp
in
mov
rcr
mov
inc
adcb
fldcw
les
idivb
aaa
fdivl
mov
fidivrs
movb
pandn
out
lods
sub
test
xchg
xchg
dec
xchg
mov
notl
hlt
dec
dec
lea
inc
pushf
jo
psrlq
fs
jmp
xchg
jl
lods
jns
rolb
outsb
xor
adc
or
movsl
sub
mov
negb
loope
mov
sbb
xchg
pop
iret
or
xor
or
in
inc
enter
mov
dec
mov
and
dec
pop
sub
out
lods
inc
scas
mov
push
push
xchg
les
in
mov
sub
mov
push
dec
daa
or
rclb
add
sub
out
jle
out
mov
fwait
mov
jecxz
cmp
shll
add
mov
push
test
jge
sahf
inc
push
dec
sahf
out
arpl
sub
aaa
pop
pop
adc
hlt
xchg
xchg
xchg
adc
mov
lcall
mov
pop
mov
xor
ss
pop
inc
sahf
jno
orb
xor
cld
sub
jge
push
out
jl
pop
iret
sub
dec
adcl
sub
inc
sbb
int3
push
sub
push
ja
sbb
mov
fstpl
cld
iret
push
sub
insb
pop
test
cmp
fwait
sub
cltd
insb
add
mov
mov
dec
fcompl
notl
sahf
ficomps
adc
pop
lahf
shrl
xchg
or
cmp
out
sub
pop
shll
addr16
pop
arpl
mov
out
push
add
ja
lahf
movsl
loope
pop
push
dec
or
out
mov
cmpsb
mov
cmp
xchg
push
or
adc
outsl
or
movsb
bound
fwait
mov
ljmp
iret
cmp
fldt
mov
ficoml
inc
push
xchg
addl
je
les
lret
data16
xchg
dec
cmc
mov
lods
ret
fadd
jmp
mov
push
cmpsl
gs
jo
aam
mov
xchg
push
mov
sub
inc
cwtl
scas
xlat
in
idivb
test
jne
inc
into
insb
lods
mov
adc
or
dec
pusha
rcl
in
incl
stos
add
xlat
in
pop
jg
sub
in
mov
test
movsl
lahf
outsb
subb
jge
mov
xor
jbe
lock
xor
or
test
call
cmpsl
lods
jg
cltd
daa
adc
inc
add
adc
rol
cmp
movsb
decl
out
out
xchg
je
mov
mov
inc
stos
out
lret
cmpsb
cs
mov
and
std
mov
idivl
out
dec
dec
arpl
adc
aam
loopne
aam
cli
pushf
inc
mov
jbe
test
stos
add
dec
pop
pop
orb
xchg
sbb
sbb
mov
jle
dec
or
loop
imul
mov
push
push
orb
inc
pop
nop
add
jp
dec
ds
pushf
negw
adc
jne
inc
add
mov
dec
test
fidivrs
push
enter
scas
jmp
mov
push
pop
xchg
mov
xor
mov
mov
sbb
mov
xlat
scas
stos
push
sub
mov
pop
add
xlat
ficoms
insb
adc
add
daa
inc
xor
push
aam
or
fs
and
mov
call
into
adc
test
sbbl
cmp
lock
out
ljmp
pop
jae
lcall
jne
aam
stc
jg
push
aad
or
cmp
es
lods
mov
xchg
out
mov
inc
sarb
iret
push
fs
pusha
pop
jae
or
sbb
mov
pop
sbbb
popa
rcrb
adc
dec
sub
and
jnp
xor
fisubl
test
sub
inc
mov
rcrb
xchg
punpckldq
mov
jb
push
xor
push
mov
and
and
sub
jmp
inc
jg
lock
std
lods
mov
repz
mov
or
pop
bound
fwait
push
enter
cmp
pop
jge
fistpll
fwait
mov
add
lahf
add
cmp
mov
movl
jg
or
mov
orl
mov
shrd
xorl
mov
mov
subl
xor
shl
addl
xor
subl
or
addl
shr
mov
mov
sbb
mov
and
mov
shrd
shr
mov
and
mov
mov
xor
subl
xor
andl
jmp
pop
leave
sti
subl
xlat
or
int3
pop
push
mov
push
clc
adc
xor
sub
movsb
push
or
inc
inc
dec
ja
push
movsb
inc
dec
jg
mov
adc
push
cs
aaa
daa
js
inc
jb
dec
imul
fs
std
stos
add
pop
jae
scas
mov
mov
dec
mov
jno
pushf
orb
out
fimuls
in
or
sub
jns
mov
cwtl
mov
flds
mov
stos
repz
popa
inc
adcb
jg
arpl
icebp
leave
push
mov
sti
cmp
jae
loop
mov
push
sbb
insl
jne
push
shll
fistpll
push
push
xorl
paddusb
jb
sub
sti
dec
stc
mov
insl
out
inc
sarl
movb
out
dec
cs
ss
add
andb
ja
cwtl
cmp
mov
call
push
cli
pusha
mov
mov
sti
jns
cmp
fwait
or
adc
pusha
rcll
lds
cli
xchg
and
cltd
xor
je
ss
or
sbb
push
mov
add
ljmp
inc
xchg
mov
call
shlb
loopne
mov
movsb
test
in
cltd
faddp
in
ret
add
das
pmullw
aam
xchg
stc
and
icebp
popf
setae
xchg
fisubrl
test
xchg
pop
loop
inc
lods
test
ret
xor
cmp
jns
sahf
sub
shl
cmpsb
xlat
cltd
sub
push
in
sub
int
ljmp
cltd
cmp
xor
push
or
pop
shll
dec
pushf
mov
incb
jecxz
pop
adc
adc
pop
popa
enter
pop
stc
hlt
enter
in
mov
xor
mov
pop
lods
data16
pop
adc
out
pop
dec
cs
aad
push
jecxz
icebp
jo
or
in
fwait
inc
and
mov
mul
mov
dec
cmp
mov
xchg
mov
mov
xchg
or
lret
mov
xor
xchg
lret
stos
mov
mov
pop
inc
push
imul
xchg
int
or
dec
loopne
inc
add
jle
xchg
fistpl
aad
shlb
in
push
int3
xchg
cmp
loope
sbb
mov
jmp
nop
sub
xor
and
popa
jo
mov
inc
mov
sub
jp
iret
pusha
filds
lods
lcall
enter
mov
or
adc
sbb
add
xchg
mov
xchg
jne
xchg
sbb
js
lcall
imul
sbb
lret
std
aaa
lcall
outsb
fistpll
nop
iret
pop
shlb
jo
xchg
xor
jb
pop
les
rolb
or
lret
pop
rclb
rorw
jmp
sub
mov
xor
pop
in
adc
ret
out
ds
int3
mov
bound
cli
mov
xchg
fwait
je
enter
jg
sub
pop
mov
das
mov
lods
out
sbb
pop
and
cs
test
repnz
xchg
xor
pop
dec
mov
das
inc
inc
fcmovne
addl
mov
clc
sti
aaa
sbb
inc
mov
push
stos
inc
jnp
int3
pop
test
frstpm(287
aad
test
pop
ror
push
shr
push
into
xor
cld
adc
cs
inc
test
sub
lcall
xchg
fwait
out
testb
sub
mov
add
fiaddl
fimull
aad
pop
das
mov
in
mov
mov
fidivs
repnz
and
or
or
pop
sbb
enter
mov
mov
jnp
in
xchg
icebp
popf
and
loopne,pn
pop
lods
mov
push
shll
xchg
into
imul
pop
mov
mov
insb
cwtl
mov
ret
fsub
outsb
loop
aad
jmp
push
leave
out
xlat
lahf
and
dec
mov
adc
add
into
push
and
add
insl
cmp
and
xchg
fwait
xlat
adc
jno
lahf
dec
cmpsl
sbb
xchg
xlat
mov
jb
sbb
push
or
sub
push
cmp
sbb
ljmp
fisttps
stos
rorl
std
ljmp
aas
add
int3
ja
mov
popa
cmc
pop
scas
ds
cmpl
lret
inc
lods
and
out
cmpsb
sub
xor
adc
fiadds
daa
sbb
mov
loope
push
dec
aaa
fdivp
push
stos
inc
fwait
in
sbb
push
mov
xchg
sbb
cmp
mov
jb
jns
cmp
adc
push
mov
mov
sbb
rcll
xchg
pop
mov
in
jge
xlat
jo
sbb
sbb
and
push
xchg
sub
xchg
xchg
lock
pop
pop
jp
jg
loop
jns
xchg
icebp
dec
and
xor
out
stos
roll
inc
pop
add
decb
jb
mov
fdivrs
mov
loopne
mov
cmp
sbb
sub
sti
jle
stc
cs
std
mov
jp
adc
in
in
mov
fistps
adc
movsb
fwait
loop
push
sbb
sub
and
mov
rorl
jp
lods
inc
lods
cmc
and
std
dec
add
fisttpl
mov
sub
xor
mov
adc
add
mov
fisttps
push
mov
xor
loop
sbb
jp
cmp
sbb
lret
pop
sar
nop
mov
push
and
rorl
xor
jp
inc
fisttps
idivl
sbbl
mov
push
icebp
inc
mov
add
mov
lods
xchg
popa
mov
xchg
sbbb
jmp
shlb
out
mov
out
or
dec
mov
mulb
mov
lret
dec
fsubp
adc
out
in
mov
lods
dec
or
ret
in
and
cmpl
dec
js
shrl
cmp
in
ss
mov
and
lcall
push
xor
push
aad
xor
mov
sbb
sahf
push
sub
test
mov
and
mov
xchg
imul
mov
or
shl
andl
imul
jmp
mov
or
push
and
ljmp
pop
xchg
jge
adc
clc
adc
mov
inc
aam
mov
outsl
repnz
dec
xchg
sti
or
mov
jo
lcall
subb
adc
adc
adc
mov
loopne
inc
sub
dec
or
ja
mov
mov
in
jge
clc
fisubs
mov
adc
cltd
mov
sub
add
loop
inc
mov
push
addr16
scas
int
or
sub
repnz
mov
mov
popf
lods
jge
pop
outsl
int
arpl
and
mov
inc
lret
movsl
mov
mov
mov
mov
fldt
cmpsl
stos
mov
sub
in
sti
adc
mov
out
xlat
inc
popf
fsts
ret
sub
in
mov
dec
test
aam
mov
jp
adc
std
enter
jmp
mov
add
cltd
xchg
push
mov
sbb
std
test
test
fwait
lret
out
fstps
int3
sbb
loop
jno
sub
and
mov
push
sti
push
mov
add
sub
cld
stos
add
and
jecxz
sbbb
rol
lock
or
daa
std
insb
jne
jnp
fsubl
stos
jno
sahf
cmovae
sub
and
movsl
out
add
lock
ret
fdiv
mov
pop
fnsave
movsl
push
daa
sbb
mov
add
push
xor
insl
mov
int
mov
loop
xor
fisubl
jnp
lahf
inc
aad
push
adc
xchg
push
xor
push
dec
insb
xor
insb
push
lock
mov
sbb
mov
sub
sbb
mov
cli
jbe
stc
push
das
cmp
sub
mov
andl
push
in
or
das
cmp
sub
pop
mov
dec
rorb
jl
mov
pusha
sbb
jmp
jecxz
cmpb
jno
mov
jge
lret
stc
pop
sbb
xor
scas
fs
or
dec
stos
mov
lods
inc
out
int
adc
sbb
loopne
jl
dec
test
fiadds
inc
pop
cmp
cwtl
mov
mov
mov
mov
in
testb
js
sub
clc
mov
mov
pusha
dec
xor
shll
cli
bound
imul
xchg
lock
cmpsl
xor
ds
sbb
mov
xchg
xor
addr16
cmpsb
add
hlt
lods
or
adc
loopew
push
xchg
jmp
dec
test
mov
pop
push
adc
adc
imul
dec
xor
or
popa
sub
add
out
add
inc
adc
sub
gs
push
and
dec
lret
in
pushf
xor
mov
xchg
aas
outsl
out
push
or
cmp
mul
mov
cmp
dec
or
imul
sar
dec
aaa
push
push
lret
sub
outsb
sbb
xchg
push
pop
addr16
xor
in
cmpb
sbb
ficomps
and
ja
imul
imul
push
push
cmp
aam
aam
jo
orb
popa
cli
stos
insl
shr
xchg
aad
xor
inc
je
repnz
jmp
fsubl
inc
mov
add
inc
adc
pop
xor
and
std
add
xor
ljmp
lcall
popf
dec
imul
mov
mov
nop
cmp
mov
mov
jecxz
insb
xor
and
xchg
int3
sbb
incb
and
or
mov
out
mov
pop
cmpsl
test
fidivrl
lods
sbb
sbb
dec
jle
inc
test
sbb
test
movsl
out
add
xor
int
push
loope
fisubs
popa
lcall
pop
push
test
mov
xor
pop
xchg
sub
scas
mov
adc
pop
out
je
or
test
push
je
icebp
sub
lods
jae
lods
sub
out
fcmovnb
imul
xor
sub
sbb
and
cs
lds
sub
int
dec
push
push
add
call
inc
xor
pushf
pop
mov
inc
mov
nop
lds
push
cmp
push
mov
std
and
lahf
and
xlat
sbb
jmp
testl
ss
inc
mov
dec
inc
xor
push
sub
cmp
mov
aas
add
into
mov
dec
int
fsubp
mov
push
mov
lret
adc
in
mov
lret
pushf
shll
stos
and
imul
inc
nop
fsubr
inc
rcr
dec
sbb
adcl
lea
push
jl
fsub
sub
loop
loope
daa
in
sbb
xor
pop
xchg
ds
out
fwait
dec
call
lock
xor
add
in
push
decb
pushf
adc
mov
xchg
dec
int3
aad
pop
lahf
iret
hlt
ja
or
jle
imul
xor
aad
mov
call
pop
pop
in
cmp
and
mov
cmp
into
stos
push
in
mov
mov
sbb
mov
stc
mov
mov
sub
loopne
jbe
inc
dec
jp
dec
mov
mov
cmp
add
shll
pop
jecxz
movsb
cmp
mov
in
mov
cmp
and
lcall
sbb
rcrl
jbe
ret
mov
imul
addr16
jno
mov
imul
dec
push
sti
xor
outsb
icebp
in
clc
movsb
jno
insl
daa
or
sti
movsb
jne
repz
incb
pop
pop
sub
mov
mov
xchg
or
and
push
je
fildll
test
idivb
mov
sbb
pop
jp
cmp
mov
mov
ja
xor
aas
aad
mov
ljmp
int
scas
dec
xchg
fstp
dec
adc
fildl
pop
sub
test
push
push
icebp
je
xchg
dec
sbb
notb
inc
cltd
mov
je
and
adc
mov
add
mov
xorl
mov
orl
shrd
mov
orl
jmp
or
dec
addr16
adc
push
nop
hlt
aam
adc
push
clc
adc
xor
sub
push
sub
or
inc
xlat
test
jnp
mov
into
push
push
sbb
mov
xchg
and
testl
dec
mov
dec
int
adc
test
xchg
adc
mov
ss
int3
stos
cmp
pop
pusha
popa
inc
test
jecxz
inc
inc
addr16
mul
jle
mov
fbld
clc
mov
in
aad
jns
add
cmpps
dec
sub
xor
jp
add
fisttps
inc
insb
das
add
pop
cmpsb
movb
xlat
pop
mov
mov
or
xor
mov
cmpsb
jle
cmp
adc
push
mov
mov
ffree
jbe
mov
add
lret
pop
sarb
mov
dec
lds
ja
lret
sub
and
sarb
fidivl
ss
mov
ret
pop
cld
out
cmp
pop
mov
mov
jmp
and
or
mov
push
xor
xor
xchg
sbb
push
adc
jmp
movsl
fistps
add
adc
xor
add
pop
test
sbbl
dec
adc
shl
xchg
stos
inc
push
xor
xor
in
push
out
fsubr
add
roll
dec
loopne
mov
ret
pop
movsb
cmp
push
mov
test
lds
jp
loopne
int3
nop
push
mov
pop
popf
sahf
dec
or
loopne
dec
dec
insl
mov
stos
js
shr
sbb
iret
jbe
iret
sar
ljmp
imul
fimuls
xlat
mov
fidivrl
lcall
mov
loope
mov
sbb
sahf
adc
sbb
dec
cmp
pushf
add
adc
sub
adc
add
lcall
in
push
pop
lret
je
test
mov
notl
or
addr16
or
roll
enter
push
xchg
cwtl
cltd
xchg
pop
jle
icebp
stc
or
iret
daa
mov
icebp
popa
push
fcompl
push
aad
add
add
pushf
mov
icebp
and
rolb
sbb
hlt
adc
rorl
mov
pop
mov
lods
add
cmp
and
mov
mov
call
or
mov
sub
jne
pop
jne
or
inc
hlt
fiadds
fwait
xchg
pop
xlat
sbb
aad
ficompl
xchg
movsb
fimull
sub
lods
cld
push
cmp
into
mov
add
out
je
inc
adc
cmp
nop
sbb
xchg
into
adc
and
or
mov
cs
inc
dec
insl
mov
stc
cmp
cmp
or
mov
scas
adc
cmpsb
cltd
aad
and
imul
jb
xchg
movsl
rcl
mov
ds
aas
sti
or
push
jg
push
push
sahf
mov
push
aam
jnp
repz
mov
pop
jle
and
xlat
or
cld
or
cli
cwtl
and
mull
cmp
fidivrl
dec
dec
mov
insl
shll
sbb
in
das
lods
sub
add
xchg
out
inc
jg
sub
or
sbb
dec
insl
stos
lock
fistl
je
adc
ficomps
fcomp
shll
mov
in
movsl
popf
mov
cmp
fistpl
adc
inc
ret
add
pop
adc
jmp
jmp
inc
cmpsb
push
push
sub
scas
lods
fs
sahf
xchg
adc
cli
pop
nop
cmp
sub
lret
in
sub
lods
sbbl
lret
and
xchg
xchg
test
adc
es
sbb
dec
jns
or
test
sbb
lret
pop
xor
idivb
dec
das
and
sar
jge
inc
ljmp
jb
cmpsl
and
cltd
jo
mov
mov
shlb
fnstenv
ljmp
bound
addl
cs
and
imul
push
jns
rcll
fincstp
cltd
jecxz
popa
test
add
int3
es
hlt
pop
pop
adc
loope
test
push
fisttpl
gs
pop
xchg
ficompl
lcall
push
int3
add
std
aad
daa
add
aas
loopne
inc
push
adcb
mov
jnp
xchg
and
pop
adc
jmp
and
paddsw
xchg
std
or
or
cmpsb
or
sub
stos
cltd
mov
hlt
xlat
pop
push
sahf
in
xchg
or
popa
sub
repnz
push
xor
jle
mov
ljmp
in
and
mov
sbb
cmp
repnz
cld
pop
jge
xor
mov
std
jns
push
xchg
inc
enter
repz
ret
push
mov
push
fs
inc
in
call
or
scas
sub
lahf
scas
push
scas
or
push
out
aas
pop
lret
push
stos
pusha
dec
ret
adc
adc
lods
addb
fstps
pusha
sbb
sub
lds
mov
in
nop
dec
shrl
daa
pop
and
fildl
xchg
pop
pop
sbb
fstl
jb
out
pusha
add
mov
xor
mov
mov
lret
or
scas
mov
leave
lahf
pop
cmpsl
addr16
xchg
xchg
aam
mov
mov
xadd
fisubs
mov
sub
outsl
int
rcrb
mov
jmp
jle
loop
sub
out
lcall
and
sbb
and
rclb
pop
mov
inc
push
cmpsb
dec
mov
fsubrs
add
test
loop
dec
mov
test
mov
pusha
mov
sbb
fcomps
mov
push
vpmovzxbd
or
xor
arpl
push
lock
xor
in
stos
and
dec
orl
jl
lods
cmc
push
es
xor
movsl
leave
jmp
add
or
mov
addl
xor
orl
shl
xor
orl
or
shr
xorl
mov
sub
mov
mov
mov
shrd
shr
jmp
ljmp
sub
lcall
adc
clc
adc
arpl
push
dec
adc
call
fucomp
lcall
adc
fldenv
ret
cltd
lret
jns
call
cmc
into
daa
adc
cs
sub
xchg
lods
jge
mov
mov
mov
pushf
mov
fldt
stc
add
lea
dec
xor
stos
enter
int3
pop
mov
mov
sub
lods
dec
shrl
inc
push
vpmullw
jp
subb
movsb
popa
mov
daa
pop
jne
add
cwtl
mov
das
cmp
nop
fidivl
mov
out
inc
sbb
jbe
cli
popf
popf
lret
mov
jecxz
pop
stc
or
push
sub
pop
lret
adc
xor
add
dec
dec
mov
mov
push
and
push
repnz
mov
xor
add
fnstsw
jno
push
or
sti
push
hlt
cmpsl
cmp
popa
test
xchg
jne
out
adc
mov
leave
and
or
xchg
inc
loope
pop
dec
dec
mov
sub
push
mov
xor
rolb
cwtl
mov
mov
mov
inc
adc
or
leave
shrb
outsl
mov
fdivrp
sbb
stc
pop
or
xchg
xchg
push
add
xor
lret
lock
std
popa
mov
fsubrs
jp
push
mov
jbe
aaa
stc
and
push
test
enter
rcl
lea
adc
rclb
dec
xchg
cmpsb
iret
stos
rolb
adc
shlb
xchg
test
fildl
push
or
out
stos
pop
ds
movsl
xor
jno
imul
mov
inc
fmull
jnp
sbb
sbb
add
out
das
sbb
sbb
pop
sub
sbb
dec
or
fdivrp
iret
sbb
mov
lret
lcall
in
adc
mov
xchg
pop
mov
xor
inc
ret
sbb
repz
loope
or
push
xchg
sbb
mov
and
ss
stc
mov
xchg
inc
xlat
addr16
movsb
inc
jle
cmp
pop
pop
out
dec
mov
sbb
aam
ss
ds
mov
and
add
sti
dec
subb
push
imul
ljmp
aas
in
scas
in
inc
daa
sti
cld
lds
das
fsubl
xor
mov
mov
and
sbb
push
aaa
push
ret
push
std
test
jmp
lahf
jae
dec
add
fisttpll
je
les
sarl
push
push
pop
lahf
cmc
sub
scas
jb
add
shl
arpl
inc
sarl
pop
inc
pop
scas
push
push
int
or
call
sub
icebp
add
mov
adc
imul
mov
lods
mov
or
aaa
dec
out
inc
xor
cmpsl
sub
push
or
mov
mov
fs
hlt
idivl
outsl
test
fs
inc
xor
mov
xchg
outsb
sbb
ss
mov
and
sub
jo
call
dec
add
mov
cld
xor
or
push
insl
fmuls
mov
jnp
js
pop
inc
out
sub
enter
lcall
xor
jle
sarb
dec
adcl
jnp
test
mov
jmp
xlat
bound
fisubl
mov
in
sarl
mov
movsb
push
fisttps
xchg
pop
out
rcrl
sti
mov
and
lahf
adc
inc
jecxz
mov
aam
jmp
sub
lods
inc
test
cmp
xchg
ret
pop
sub
outsl
jbe
out
pop
in
outsl
inc
mov
repz
cmp
mov
xchg
fwait
sub
pop
and
sarl
sbb
adc
test
lahf
and
cld
xor
ljmp
or
xor
mov
in
mov
insb
jnp
jmp
cmp
cmpsb
cli
inc
mov
and
mov
and
adc
adc
mov
lahf
pop
cmp
xor
sahf
mov
lock
in
in
repz
stos
cld
mov
add
mov
and
add
xor
jmp
xchg
in
or
push
sbb
scas
sub
push
cli
cld
test
scas
enter
mov
pop
fisubrl
testb
in
pop
and
mov
fsqrt
xchg
out
xchg
dec
shll
inc
dec
mov
pop
in
negb
inc
xchg
pushf
mov
xchg
cmpsb
lcall
outsb
mov
loopne
and
sub
sub
push
mov
xor
out
repnz
add
aam
test
pusha
xchg
outsb
mov
add
insb
das
mov
or
add
and
out
insl
lods
pop
sbb
mov
lods
mov
sbb
or
leave
pop
out
push
popa
jle
add
mov
mov
insb
xorb
ljmp
mov
sbb
mov
jl,pn
xchg
pop
andb
lahf
inc
add
loope
aas
cltd
dec
or
daa
mov
scas
dec
cwtl
stos
test
xchg
icebp
adc
stc
lods
pusha
std
data16
and
fstps
and
orb
lret
or
dec
or
adc
pop
push
jb
pushl
push
into
lahf
aam
in
out
lods
ss
clc
outsl
xchg
cmp
jle
rclb
repz
sbb
mov
mov
pop
and
jo
cmpsb
cmp
aas
mov
loop
add
out
dec
xchg
or
cmp
adc
add
xchg
mov
mov
lret
jp
test
mov
mov
bound
gs
ret
mov
xor
push
icebp
clc
push
sbb
lock
out
dec
jmp
dec
and
daa
push
test
mov
mov
push
jnp
and
lcall
loope
pop
push
adc
xor
mov
inc
mov
mov
adc
scas
repnz
arpl
mov
mov
fistpl
xor
inc
and
dec
in
adc
mov
xor
add
sub
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
out
add
and
xlat
es
test
inc
shlb
xor
push
clc
adc
cli
cmp
push
int
fcmovnu
dec
or
enter
inc
nop
daa
or
inc
lret
sbb
lods
data16
arpl
outsb
out
push
and
aas
repz
and
ficompl
insb
rorl
iret
cmp
scas
sbbb
inc
jp
sub
inc
xor
adc
push
les
xchg
fmuls
sbb
mov
inc
test
lahf
andl
xor
sbb
neg
xchg
test
jmp
fbstp
mov
fwait
cmc
les
std
ss
push
sbb
xor
outsb
push
xor
sbb
xchg
rorb
mov
ret
pop
rcrb
xchg
out
sbb
aaa
in
mov
pusha
out
mov
fcmovnbe
add
sub
mov
lea
inc
shlb
xor
jbe
mov
mov
shll
sbb
mov
add
sbb
sub
xor
scas
aam
repz
stos
pop
pop
mov
ss
and
push
addr16
pushf
pop
sti
andl
lret
dec
mov
in
jae
je
nop
hlt
sub
inc
mov
dec
xchg
and
add
pop
add
and
xchg
repz
sarb
loop
int3
in
push
scas
outsb
adc
subl
push
sahf
jne
xchg
in
ljmp
dec
sub
lods
xchg
add
mov
mov
js
sbb
xor
jg
stos
call
mov
shll
aas
dec
or
push
pop
jae
insl
mov
add
jnp
in
cmp
pop
inc
call
dec
iret
and
cwtl
in
and
popf
and
xchg
add
mov
stos
mov
xchg
imul
sub
rorl
xorb
aam
add
mov
ret
dec
mov
sub
sub
mov
push
or
and
cli
mov
cmpsb
stc
sbb
dec
test
push
test
pushf
movsb
xchg
lods
push
fs
xlat
mov
rol
mov
pop
cmp
out
les
add
lods
fcoms
mov
mov
out
pop
bound
cmpsb
pop
clc
mov
mov
lahf
sbb
das
lcall
mov
pop
mov
mov
mov
jae
push
push
sbb
cli
push
sub
inc
cmpsb
and
mov
xor
sbb
cli
sbb
push
adc
and
scas
xchg
imul
xor
loopne
out
test
xchg
ljmp
push
or
adc
imul
gs
inc
scas
jecxz
mov
sub
adc
or
loope
orb
jae
mull
and
das
into
pop
dec
push
adc
cmp
insb
dec
xlat
ja
dec
push
cmp
add
imul
xor
add
dec
inc
inc
mov
cmp
mov
fidivs
fildl
arpl
mulb
lea
test
push
ficoms
xchg
stos
insb
repz
out
cld
xchg
popf
inc
mov
inc
fwait
aaa
mul
push
dec
test
imul
dec
pop
out
pop
jmp
fwait
iret
into
loopne
imull
scas
lods
and
jae
cmp
aaa
push
mov
je
and
in
push
fstps
in
xor
pop
ror
pop
and
lock
stos
jae
dec
in
int
mov
lahf
push
mov
js,pt
testl
div
mov
sbb
inc
fdiv
xor
jnp
dec
jp
out
sbb
insb
in
jge
sub
testl
test
std
imul
mov
pop
mov
aad
bound
lods
push
movb
cltd
xchg
add
call
mov
mov
test
shl
inc
std
or
or
mov
push
jecxz
sti
push
push
dec
lcall
call
mov
mov
sub
fbld
xor
test
push
in
push
shll
test
frstor
push
push
into
adc
sbb
push
and
xor
mov
rcll
imul
pop
int3
andb
push
lds
scas
mov
cld
xchg
lds
mov
xchg
into
xor
ss
cmp
in
xchg
rolb
scas
clc
adc
fwait
push
jge
mov
or
daa
mov
mov
mov
mov
push
ret
sbb
jo
in
and
mov
je
hlt
movsl
dec
dec
es
push
push
sarl
imulb
imul
insb
enter
push
jbe
dec
push
mov
adc
or
sti
and
cs
mov
stos
push
push
movsl
cmp
sbb
xchg
enter
fsubrs
rorl
aas
cmp
jnp
sbb
les
inc
fcomps
xor
ds
dec
mov
clc
push
jl
adc
jecxz
mov
lret
or
cmc
popf
fldt
adc
dec
test
idiv
mov
inc
push
gs
sub
or
mov
xchg
push
shl
jmp
mov
pop
push
jo
daa
push
or
ja
pop
cmp
jmp
popa
imul
imull
nop
adc
ds
in
xchg
lahf
push
push
dec
inc
inc
cmpl
loope
lds
sbb
rcll
out
jmp
leave
jae
xor
or
call
push
xchg
xchg
dec
inc
lock
out
and
push
call
lret
lea
jbe
and
mov
out
movsl
add
addr16
mov
sub
sahf
cmpl
xchg
ss
loop
adc
cmp
push
sub
icebp
pop
adc
lcall
push
imul
cmp
sbb
gs
jle
movsl
sbb
sti
xor
out
clc
scas
pop
add
and
xchg
xor
sti
les
inc
insb
pop
imul
sbb
mov
addl
out
cli
dec
mov
mov
sahf
dec
mov
sub
jae
mov
push
mov
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
jmp
inc
mov
mov
icebp
neg
xchg
push
adc
push
clc
adc
std
js
sub
ljmp
fdivrl
lods
ds
arpl
mov
adc
jo
popa
or
sub
mov
sub
adc
sbb
xchg
dec
jp
icebp
pop
movsl
int
dec
xor
addr16
sub
cmpsb
cs
cmp
ficoms
xor
out
std
cmp
es
cmpsb
jo
xchg
inc
pusha
out
jb
cmp
sub
bound
sbb
cmp
cmp
pusha
mov
fs
out
in
mov
dec
lahf
psrlw
insl
repz
icebp
or
sub
and
int3
sbb
pop
inc
mov
pop
or
testl
popf
dec
add
push
jbe
jl
cmc
iret
lret
xor
pop
into
std
std
out
adc
cmp
pop
jle
rcrl
subb
push
or
sub
dec
add
xor
call
sub
jecxz
enter
ret
lret
push
mov
cmp
mov
jmp
std
jmp
or
inc
push
out
jp
inc
adc
fmuls
pop
mov
add
in
inc
jb
push
push
sub
mov
pushf
hlt
jbe
out
xchg
cmpsl
jle
testb
cwtl
fmulp
sbb
ljmp
pop
pushl
cmp
icebp
mov
rcr
inc
dec
add
pop
and
aaa
out
mov
pop
lods
mov
add
fwait
xchg
jno
test
jae
mov
xchg
shll
movsl
cmp
add
pusha
shr
stc
fwait
pop
das
mov
mov
cmp
or
and
imul
cwtl
les
test
rorl
cwtl
clc
mov
pop
push
sbb
je
lahf
pop
mov
or
mov
int
loopne
mov
sahf
mov
or
jns
inc
jae
sub
fidivrs
lret
nop
ss
adc
xchg
push
lea
add
push
imul
je
sub
sub
js
stos
scas
das
jmp
orb
loope
cmp
enter
mov
cmp
fisttpll
insl
jge
jns
mov
nop
push
adc
mov
sbb
sub
hlt
add
negl
xchg
mov
xor
xchg
test
xchg
push
inc
push
mov
enter
mov
xchg
adc
std
mov
iret
out
fwait
lock
push
lock
or
sub
pusha
mov
jge
inc
shlb
xchg
mov
das
add
sbb
mov
into
jb
inc
and
push
inc
push
stos
push
sbb
pop
ss
and
lods
jo
xchg
data16
pop
jle
jmp
lock
inc
ds
jb
mov
arpl
shr
mov
inc
pop
and
arpl
andb
repnz
scas
mov
mov
push
or
pop
lods
jmp
xchg
mov
or
lds
lahf
rorb
jns
pop
inc
iret
push
aad
jnp
push
lds
pusha
cli
jg
adc
cmp
xlat
sahf
mov
cmp
jo
out
leave
mov
dec
inc
pop
or
int
mov
stos
movsb
xchg
sti
fdivrs
shl
push
repz
out
cmp
jo
pop
rorb
push
icebp
test
lock
roll
cmp
jno
pop
ss
notl
xor
repnz
sub
cmc
mov
sub
rcrl
mov
pop
jbe
out
in
push
fadds
je
pop
or
cltd
lods
xor
pop
cld
cmp
dec
and
mov
and
jmp
mov
cmp
add
and
cltd
repnz
or
push
mov
in
xchg
mov
std
jb
and
or
mov
mov
cmc
stc
push
test
jge
inc
adc
cmp
mov
jle
mov
sub
cltd
out
mov
push
add
lds
inc
pop
sub
das
fs
stos
push
sbb
std
jbe
sahf
je
add
jmp
notb
cli
ds
aas
inc
pop
das
loope
jg
inc
mov
aas
fisttps
jns
test
loop
xor
and
mov
lret
pop
cmc
or
arpl
sub
lods
cs
int3
popa
scas
movsl
sub
cmc
push
cmpl
aad
sub
xor
mov
movsb
sbb
pop
stos
comiss
imul
jge
xlat
sbb
jle
mov
push
or
cmp
jg
out
cwtl
or
pop
mulb
es
or
out
lock
mov
sahf
jo
loop
xchg
out
cmp
mov
std
adc
push
push
ljmp
daa
incb
mov
notb
jmp
or
xchg
dec
inc
mov
cs
fbld
add
push
incb
int3
sbb
mov
fstpl
cmp
shll
jno
in
pop
fidivrl
or
sarb
xchg
insl
xchg
xor
mov
sbb
push
mov
orb
cwtl
cli
clc
mov
into
mov
sbb
test
lahf
and
nop
jbe
pushl
movsl
push
dec
and
inc
les
fdivrl
push
lds
ret
adc
xchg
insl
sbb
aad
and
mov
sub
push
pop
and
xor
pop
cmpsb
mov
sbb
cld
mov
inc
mov
in
paddb
push
cmc
jnp
and
fisttpl
imul
sbb
and
aad
scas
push
cmpsl
test
pop
popf
xchg
and
push
add
mov
popf
or
enter
fistpl
adc
adc
adc
inc
iret
adc
les
daa
mov
jo
insb
pop
pushf
dec
mov
addr16
inc
test
insb
jge,pt
cld
pop
lahf
and
pop
mov
dec
cmp
pop
cld
in
or
dec
dec
jl
push
imul
jg
scas
dec
fistps
xor
or
mov
jmp
add
mov
sbb
dec
ss
inc
aad
adc
push
clc
adc
dec
add
cwtl
lret
lret
std
fisttpl
xlat
add
mov
fwait
mov
dec
lcall
mov
jmp
sub
sub
popa
add
ret
in
pop
push
xor
icebp
into
or
mov
rolb
jb
outsb
xor
cmp
out
dec
adc
mov
push
std
adc
xchg
out
mov
lds
out
aam
sub
leave
fmul
and
enter
xchg
pop
cmp
or
scas
sbb
scas
js
dec
out
in
adc
jl
inc
mov
outsb
dec
mov
scas
enter
lods
in
popf
xor
std
dec
push
es
lret
add
aam
and
push
cmc
stc
outsb
pop
fisttps
addr16
aaa
push
and
cmp
lcall
sub
out
mov
mov
stos
xor
cmp
repz
arpl
mov
xchg
mov
jne
adc
pop
mov
ljmp
sbb
ss
gs
ljmp
or
mov
xor
add
shll
sahf
into
cs
xorl
es
or
and
lret
iret
push
cltd
inc
icebp
out
xchg
fiadds
xchg
mov
jmp
dec
rcrl
pop
sbb
sbb
or
ss
xor
lods
xor
push
loope
adc
xchg
stc
sub
add
mov
cs
xchg
or
sti
aam
inc
fcompl
jl
jb
out
test
jns
mov
mov
in
in
cmp
push
jmp
jo
mov
fbstp
bnd
jp
inc
ljmp
xchg
in
fwait
mov
stos
cld
add
adc
lods
inc
lock
iret
and
mov
or
fwait
dec
xchg
adc
add
jo
lcall
push
sbb
and
mov
scas
mov
rcrl
call
xchg
scas
pop
push
lret
push
daa
mov
mull
xchg
mov
jmp
lret
mov
push
lret
ret
sub
pop
stos
scas
push
mov
or
loopne
es
mov
imul
aam
out
sbb
gs
in
fistl
sub
or
mov
in
ffreep
cmp
and
ja
arpl
fldl
sbb
cmp
or
mov
push
imul
sub
fsubrl
divl
xchg
mov
pop
cld
mov
push
or
or
dec
fisttpll
int
push
pop
dec
xchg
loopne
lods
lcall
push
ja
cmp
sbb
mov
jo
aas
fldz
inc
mov
imul
inc
cmp
or
jp
test
lret
shrb
mov
hlt
dec
out
pushf
sbb
and
hlt
inc
popf
push
xor
inc
je
pop
sub
sub
and
or
orb
aas
scas
shr
pop
mov
in
jl
push
pop
pop
scas
mov
lds
mov
inc
xchg
mov
mov
push
adc
les
scas
test
adc
push
rcrb
jno
and
pop
ret
pop
add
adc
inc
jo
call
lahf
adcl
data16
int3
scas
sub
pop
and
ss
lds
cmp
or
sbb
decb
add
adc
xchg
pushl
adc
aas
dec
out
enter
inc
stc
pop
les
mov
loope
test
mov
mov
repnz
cmc
ror
loopne
mov
cmp
sub
xchg
scas
xchg
sbb
pusha
sbb
xlat
dec
sbbb
imul
cmpsb
movsl
stos
push
loopne
adc
cltd
push
js
xchg
fwait
mov
add
push
aad
mov
push
movsb
add
aad
into
jno
xor
xchg
or
jl
rolb
xor
xchg
pop
cmp
rcr
pop
decb
fstpl
fsubrl
fidivrl
push
jl
pusha
cmp
xlat
and
sbb
sub
scas
lahf
int
int3
lret
mov
aad
push
mov
pop
push
adc
cltd
nop
and
adc
xor
push
xchg
push
mov
sbb
dec
rcll
and
lcall
int
out
lret
mov
xchg
shl
pop
cmp
nop
xor
cmp
dec
jne
or
add
dec
xor
jmp
ror
addb
xor
xchg
addr16
sbb
arpl
idivl
sbb
mov
insb
sub
mov
orb
dec
push
ds
aam
js
mov
jg
data16
ljmp
adc
jg
xor
mov
popf
filds
test
scas
stos
aaa
lret
rcrl
push
jmp
cli
sahf
push
loop
adc
cmp
jecxz
mov
mov
arpl
or
cltd
int
mov
xchg
shl
int
jae
popf
mov
out
stos
loope
rcr
mov
sahf
pop
push
mov
cmp
xchg
pushl
mov
daa
cli
xor
nop
movb
sbb
aas
or
xchg
jmp
mov
in
and
pop
rolb
imul
pushf
or
push
sbb
xor
lret
mov
das
mov
inc
dec
and
jne
adc
shll
ljmp
jnp
mov
xchg
jno
pop
dec
pop
outsb
insb
xchg
pop
mov
mov
mov
mov
push
ljmp
repnz
xchg
icebp
sahf
xchg
xor
cmp
mov
mov
add
clc
adc
mov
rorb
jno
shll
xor
xchg
movsb
inc
cs
xor
add
push
or
insb
sub
xchg
add
sbb
pop
mov
ror
mov
sti
jae
rcpps
push
xor
push
or
cmpsl
roll
std
adc
push
jmp
cmpsb
mov
fbld
ljmp
pusha
sub
stos
mov
cltd
testl
push
sbb
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
fs
xor
push
fs
fisubrs
adc
adc
push
clc
adc
repz
or
negl
addr16
mov
mov
sbb
popl
leave
mov
pop
sbb
and
out
pop
loope
pop
xchg
scas
loope
dec
aaa
push
xor
out
fimull
fcoml
stos
fisubrs
in
sti
xchg
or
add
pop
xor
iret
sbb
push
mov
cmp
pop
sub
pop
push
adc
fistpl
and
js
dec
lahf
xor
mov
mul
ret
pop
mov
imul
add
xchg
adc
fcoms
ja
or
push
outsb
rorb
lahf
test
mov
iret
outsb
mov
xchg
xor
jp
push
sbb
je
sbbl
jle
repz
in
sbb
stos
pop
dec
or
leave
test
sub
xlat
movsb
mov
mov
mov
or
mov
sub
push
cmp
fistpl
scas
stos
pop
outsl
aaa
mov
add
adc
in
and
repz
les
mov
call
shl
lods
dec
inc
inc
jg
fcmovne
lds
iret
js,pt
jg
pushl
aaa
ss
cmpsl
dec
pop
dec
cmp
jp
cmpsl
push
cli
push
sub
pushf
mov
or
pop
cmp
mov
sbb
push
out
jge
xchg
in
ja
jg
push
push
call
pop
pop
lret
cmpsl
bound
sbbb
les
dec
sub
scas
subb
das
mov
in
daa
xlat
push
mov
sbb
and
mov
stos
aam
mov
lret
push
shlb
jl
push
xor
push
cmp
cmp
enter
rcll
jno
rol
outsb
jge
jmp
jmp
mov
add
daa
jg
rcrb
fs
je
sbb
subl
pop
adc
repz
xchg
inc
lds
arpl
push
jno
imul
pop
push
jbe
pop
dec
jae
dec
sub
arpl
sbb
stos
int
in
sbb
mov
lret
aam
dec
adc
loope
ret
and
paddusw
fimull
dec
cmp
xchg
mov
and
lods
or
add
inc
and
sbb
and
clc
xchg
mov
jno
mull
addb
stc
push
mov
cmpsl
xor
xor
rcrl
cld
data16
cltd
push
nop
data16
lret
dec
dec
xrstors
xchg
xlat
xchg
subl
popf
push
mov
faddl
cmpsl
xchg
dec
sub
mov
lods
cmp
sub
jne
mov
test
cmpsl
push
xchg
clc
lea
fs
scas
pop
xor
xor
xorl
dec
and
jl
add
sarb
add
stos
jnp
push
sub
lods
and
cmp
xchg
jp
mov
push
cmp
and
mull
pop
addr16
jp
subb
cmp
leave
xchg
pop
jno
cmp
or
jbe
cmp
add
jmp
and
sarl
outsb
and
sub
adc
push
imul
pop
add
aad
pop
adc
popf
fisubs
cmpsl
enter
aam
sbb
xchg
dec
cmp
loopne
sub
pop
ss
sub
bound
mov
imul
fidivl
push
orl
mov
sub
dec
imulb
mov
inc
fcoms
sbb
cli
push
insl
bound
dec
loopne
popa
jns
xchg
sbb
mov
sbbl
test
or
or
aad
xchg
sub
cmpsl
xor
leave
scas
jno
xlat
bound
leave
adcb
pop
cli
stos
bswap
and
gs
push
cmp
or
sub
jp
push
mov
pop
ffree
mov
push
ret
push
and
mov
jo
es
mov
cltd
xchg
add
cmp
mov
loope
das
stos
mov
mov
and
out
loop
add
sub
lea
dec
pop
rorl
mov
mov
xor
ss
jp
shrl
clc
xor
shrb
pop
push
cmp
inc
inc
push
sub
popf
and
fs
insl
aaa
push
int3
mov
mov
xor
jle
popf
ret
push
xchg
popa
sub
inc
jne
pop
cmpsl
and
sahf
inc
pop
popa
sub
ja
jne
lods
jne
pop
xlat
add
xor
cmc
mov
sub
ljmp
mov
imul
xchg
mov
sub
jecxz
mov
inc
shrl
inc
mov
sahf
mov
ret
loop
xchg
and
arpl
add
pushf
mov
call
xor
push
lret
jmp
inc
pop
and
sti
pushf
and
les
add
aaa
jno
icebp
pop
inc
mov
mov
loopne
and
inc
movb
dec
xor
out
std
sbb
mov
insl
out
call
idivl
inc
and
sub
outsl
sbb
inc
pop
andl
cwtl
imul
add
push
dec
or
push
jle
daa
jmp
xchg
js
hlt
fisttps
std
pop
xchg
sub
cmp
pushf
dec
fmull
mov
cwtl
test
mov
bound
fcoms
or
ja
nop
jmp
mov
xchg
aas
add
in
and
xor
push
sbb
mov
push
mov
adc
out
cmc
xchg
fdiv
push
mov
out
lods
mov
mov
sbbb
lea
out
mov
nop
mov
jne
pop
jle
mov
mov
pop
pop
add
hlt
xchg
out
cltd
or
jns
js
and
popf
jl
adc
inc
dec
out
xor
cmp
cmp
adc
out
outsb
xchg
mov
push
call
dec
jge
xor
sub
aam
fists
jns
hlt
cltd
push
jle
xchg
or
lahf
dec
and
adc
leave
jp
pop
cwtl
push
subl
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
rcr
out
xchg
xchg
push
inc
es
nop
hlt
or
and
push
sbb
adc
and
sub
inc
adc
dec
xlat
dec
adc
aaa
xor
dec
inc
xor
jge
xchg
mov
int
ficoms
cmpsl
mov
repz
daa
shrl
outsl
mov
mov
je
test
pop
fs
stc
push
mov
nop
sbb
push
cmp
vphsubwd
mov
xchg
sub
sub
mov
jmp
mov
jb
adc
fwait
mov
mov
ficoms
mov
psadbw
enter
push
add
fcmovnb
add
movsl
test
and
inc
test
cld
movl
popf
in
add
mov
and
loop
push
xchg
mov
xlat
sarl
xchg
jns
inc
jb
mov
arpl
popa
mov
test
inc
sub
jb
mov
js
arpl
cmpl
xor
cwtl
popa
sbb
and
jno
and
jl
adc
lock
outsb
popf
lret
aas
jno
arpl
pop
mov
push
filds
rolb
imul
outsl
mov
out
loope
lock
ds
add
xchg
sbb
xlat
jp
xor
ret
jmp
lahf
movsb
scas
pop
xchg
mov
sbb
fistpll
pop
adc
xchg
lds
jns
mov
and
fldenv
adc
popl
pushf
or
outsl
ret
push
lahf
jns
jno
dec
sub
and
pop
jns
aad
lret
addr16
mov
jne
out
mov
xor
cmp
inc
xchg
rolb
imul
in
add
sbb
sarl
iret
mov
faddp
fwait
ret
jbe
jo
jnp
rcll
push
out
pop
dec
pop
pop
inc
pusha
mov
dec
dec
les
jmp
cld
testl
in
pop
sub
inc
xchg
fistps
fistps
sub
data16
and
add
push
mov
loopne
and
pop
dec
xchg
movb
aas
sbb
pop
mov
roll
hlt
aaa
dec
pop
icebp
in
sub
mov
les
sbb
cmpsl
in
repz
dec
cs
sbb
fs
or
data16
push
sub
out
cmpsb
or
or
sub
mov
pop
xor
out
mov
out
mov
dec
add
sarb
mov
std
jl
or
scas
mov
pushf
mov
fistl
add
jns
add
mov
negl
or
divl
pop
mov
pop
xlat
mov
mov
mov
fwait
into
adc
in
lret
sub
test
gs
leave
mov
pushf
sarb
es
clc
mov
and
mov
clc
inc
push
ss
ret
add
mov
and
jge
mov
lahf
add
adc
rolb
inc
scas
insb
insl
jo
mov
scas
pop
ljmp
arpl
mov
mov
aam
push
aad
push
int3
xor
cmpsb
push
or
shrb
sub
and
jp
imul
out
popa
xchg
addr16
mov
jns
dec
test
xchg
ret
sub
push
add
cwtl
inc
push
push
push
iret
mov
adc
popa
shl
pop
ret
mov
cmp
dec
mov
data16
adc
iret
test
in
inc
mov
sti
gs
sbb
and
outsb
addb
stos
pop
adc
out
rorb
sbb
clc
or
mov
in
les
rcll
subl
imul
ret
stos
adc
call
xlat
jno
fs
xchg
mov
push
and
enter
or
jae
testb
xchg
xchg
es
es
test
lret
rorb
xchg
shr
mov
aas
je
fcoml
mov
and
add
push
push
sbb
popa
xchg
xchg
cmp
loop
daa
sbb
je
jge
mov
fisubs
sbb
popl
daa
mov
out
cmp
leave
pop
pop
add
lds
mov
js
gs
clc
xor
lret
jae
inc
shrl
adc
loop
in
push
or
stos
push
mov
jge
mov
push
adcl
pushl
faddl
out
xchg
cld
in
ret
andb
fcmovnb
add
out
cmp
into
add
imul
in
fsubrp
mulb
dec
cmpb
cs
clc
xor
xchg
ljmp
adc
mov
push
mov
clc
push
mov
mov
sbb
cli
sbb
fidivrl
mov
adc
je
xchg
push
push
pmullw
andb
jno
and
mov
fwait
cmpb
les
dec
sbb
repz
test
mov
push
xchg
mov
test
jno
mov
adc
dec
imul
repnz
aam
pop
dec
movsb
aam
aas
push
fisttpl
or
in
or
mov
pop
stc
dec
out
push
mov
ja
or
lods
mov
sub
mov
xchg
pop
mov
addl
pop
sub
adc
cwtl
repz
pop
and
xor
mov
sti
xchg
mov
cwtl
mov
popa
stc
lds
add
xchg
rcrl
imul
std
fs
sub
aad
sub
xor
or
pop
jg
lret
mov
xchg
movsb
scas
jge
inc
mov
insl
nop
fbld
or
hlt
sbb
into
and
mov
sbb
scas
xor
loopne
add
fdivs
enter
lods
pop
loopne
pop
fcoml
enter
dec
xchg
iret
push
loopne
subb
pop
loopne
and
add
or
loope
pop
jo
into
and
jns
jle
lea
lock
or
jno
push
mov
add
mov
fidivs
fstp
mov
sar
dec
inc
pop
mov
in
jecxz
dec
in
mov
hlt
shrd
shr
mov
mov
xor
shl
jmp
add
xchg
rorb
xor
push
clc
adc
rolb
mov
cmp
movsl
push
leave
movsl
shr
lods
dec
test
push
sub
pop
xor
xchg
aam
jmp
loop
mov
or
mov
sarl
xchg
loopne
popa
adc
shlb
jno
movsb
xor
pop
push
scas
data16
cs
fisubrs
lret
repnz
cltd
fwait
sahf
jns
in
xchg
push
cmp
daa
cwtl
inc
lret
mov
test
test
and
and
mov
data16
outsl
in
mov
mov
shlb
jnp
jb
loopne
out
sahf
inc
jae
cmp
mov
mov
cmp
icebp
fstpt
mov
out
dec
dec
cmp
xchg
lcall
test
sbb
inc
retw
leave
out
dec
push
scas
add
jp
in
outsl
jno
clc
into
scas
loope
dec
xor
es
in
adc
jo
inc
push
scas
mov
test
mov
lock
pop
xor
mov
test
gs
push
push
test
adc
loop
mov
jle
outsb
jbe
mov
sbb
fcompl
repnz
push
sbb
sarl
sbb
pop
xor
mov
add
imul
push
pop
xor
fbld
cs
adc
pop
xchg
int3
in
gs
cmp
cld
ret
sbb
sbb
pusha
add
shll
js
cmpsl
popa
push
ds
test
jge
movsb
mov
dec
aaa
nop
lods
pop
xor
push
add
ss
mov
data16
lds
dec
cmp
rolb
lret
mov
shlb
inc
lahf
test
and
push
int
mov
loopne
push
mov
pusha
sar
mov
pop
xchg
stos
sti
xchg
pop
inc
inc
icebp
sbb
xchg
out
aam
or
dec
mov
mov
push
sbbb
jno
xor
dec
lock
ret
xor
dec
pop
sub
mov
mov
xlat
inc
mov
cmp
bound
cmp
xor
xor
test
mov
push
mov
dec
repz
cmp
scas
cmc
cs
or
jns
xchg
sub
cmp
imul
and
mov
xchg
cs
cmp
or
mov
jg
mov
mov
xor
sub
out
push
cwtl
outsl
in
or
fidivs
jb
inc
push
dec
dec
sbb
imul
mov
mov
daa
loopne
clc
cmpsb
lea
pop
adc
cmp
mov
pop
int3
sbb
add
mov
out
jnp
mov
cmp
cmp
sub
in
mov
lret
cmp
addr16
scas
dec
cmc
inc
jp
stos
push
fldcw
ret
lods
fnstcw
sub
fdivl
shlb
cltd
pop
and
aas
hlt
stc
sub
pop
push
cmp
sub
gs
cmp
sti
mov
imul
or
adc
shrb
inc
mov
cltd
test
and
sub
add
cmp
mov
popa
movsl
cld
hlt
loopne
outsb
mov
loopne
cmp
and
cwtl
xor
notb
sbb
and
cmpsb
popf
arpl
ljmp
mov
test
iret
popa
fsubr
push
xchg
out
mov
enter
cmp
dec
xchg
and
xor
dec
and
jecxz
imul
lea
or
jecxz
sub
mov
and
mov
popa
lret
cmp
cld
rorb
sbb
add
mov
pop
xor
lods
iret
int
dec
ja
mov
fstl
stos
mov
std
sbb
mov
mov
stos
incb
add
xor
fimull
push
imul
loop
out
inc
dec
push
daa
mov
mov
cld
pop
insb
xlat
insl
movsl
nop
mov
fdivs
lret
push
das
nop
pop
and
push
pop
rorl
push
xchg
sbb
lret
xchg
cli
lock
pushf
xchg
mov
test
push
inc
and
sub
mov
mov
stc
xor
into
enter
sbbl
inc
bound
dec
fucom
add
xchg
addr16
faddl
je
cmp
sub
sub
dec
xchg
jecxz
clc
inc
sub
rol
mov
fcmovnu
pop
jl
ljmp
inc
mov
jmp
mov
sub
cmpsl
out
xchg
and
push
xor
cmp
mov
aas
lods
sub
adc
out
cmp
ds
pop
int3
movl
cmp
xlat
jnp
and
popf
adc
adc
movsb
add
dec
sbb
pop
mov
dec
stos
push
mov
lret
dec
repz
add
hlt
inc
lock
pushf
cwtl
in
cltd
mov
sub
mov
psubsw
in
int3
inc
ret
add
stos
mov
shrb
push
mov
repz
inc
inc
adcl
sub
fucom
fdivrs
shll
cmpsb
outsl
ljmp
cltd
sbb
dec
mov
pop
lcall
cwtl
adc
cs
aam
or
and
stos
loop
push
mov
outsb
sub
xor
lea
insl
inc
das
cltd
pop
jg
jle
jne
pop
data16
mov
mov
data16
add
aad
icebp
mov
jmp
adc
or
xor
jnp
je
ret
loop
loopne
test
mov
xor
hlt
fnstenv
and
stos
fsubrs
jbe
adc
dec
mov
aam
clc
dec
or
lds
pushfw
stos
pop
shlb
xchg
cld
shlb
or
repz
xchg
jmp
cmp
jecxz
bswap
repnz
xchg
jle
clc
fstl
jl
aas
cmp
sub
repnz
lods
adc
jmp
pop
cmp
xor
dec
xchg
cwtl
insb
call
sub
dec
nop
lods
xor
lock
aam
sbbl
ret
xchg
inc
daa
stos
jno
movsl
aas
push
adc
push
sarl
push
mov
mov
mov
cmp
arpl
aas
xor
mulps
out
jle
pop
ljmp
ret
add
mov
mov
shrd
jmp
aaa
aas
lods
and
andb
pop
aam
adc
push
clc
adc
push
out
insl
sub
lcall
ret
sarb
mov
std
gs
dec
mov
jne
or
sbb
pushf
pop
xchg
mov
pop
sahf
xchg
lock
cmp
sbb
xchg
cmp
pop
ds
sbb
mov
mov
outsl
sbb
mov
js
xchg
push
adc
ja
jge
jge
fildl
pop
mov
iret
mov
stc
imul
pop
mov
or
jmp
inc
out
ficompl
pop
mov
ljmp
pushf
pop
inc
jmp
ret
rclb
adc
fdivs
push
ja
iret
repz
ret
xchg
dec
mov
imul
dec
mov
fistl
pop
mov
add
xorb
pop
or
in
mov
mov
data16
xchg
lahf
pushf
xor
mov
rcrb
addr16
notb
shll
xchg
push
sbb
push
mov
cld
adc
insl
arpl
jbe
inc
add
insl
shrb
jae
push
xchg
sbb
pop
mov
insb
lea
pop
inc
push
ficomps
loope
cmp
arpl
lds
stos
inc
push
fdivr
pusha
push
outsb
cmp
je
mov
push
push
dec
sbb
jno
fwait
pusha
stos
aas
cmpsb
mov
jo
shl
pop
flds
outsl
rorb
mulb
pop
test
popf
lcall
and
mov
insb
xlat
pop
movsb
outsl
rclb
sbb
dec
ljmp
adc
clc
mov
je
mov
enter
pop
stos
arpl
test
arpl
in
xor
jae
adc
add
mov
xchg
lods
sub
das
nop
inc
movups
adc
jne
mov
inc
jbe
insb
sub
or
lcall
pop
dec
jb
popf
stc
push
pop
test
adc
stos
pop
dec
cs
jne
test
mov
adc
cmp
inc
in
js
mov
cmp
xchg
push
mov
xchg
mov
push
inc
xchg
sub
movsb
pop
nop
push
sbb
xor
xor
xor
repnz
scas
bound
inc
popa
mov
adc
movsb
mov
outsl
pop
push
movsb
ret
shll
xchg
scas
mov
imul
mov
data16
xchg
xor
dec
and
outsb
push
scas
loope
and
shll
aaa
pop
and
mov
push
daa
pop
nop
pop
repnz
sbb
in
xchg
pop
fadds
mov
xor
cs
xchg
mov
les
or
mov
xchg
push
insl
das
addr16
cmpsb
mov
mov
push
jbe
mov
aam
dec
movsl
les
sti
mov
fs
jle
mov
sbb
stc
je
mov
cmp
aas
inc
push
idivl
adc
jmp
faddl
or
mov
mov
das
inc
lret
data16
andb
lock
ret
es
pavgw
mov
mov
sub
test
push
xchg
mov
sub
and
addl
outsb
or
mov
add
add
push
mov
es
jl
cmp
inc
jge
sub
aad
mov
testb
push
fsubrl
filds
mov
xchg
ljmp
xor
xor
cmp
clc
cmpsb
or
jb
ds
nop
inc
les
fwait
push
ss
xchg
cmp
mov
adc
xor
int
mov
adc
push
push
sahf
push
ret
jle
js
fldt
push
outsb
ds
xchg
lret
dec
subl
outsb
in
in
icebp
push
cmc
clc
mov
cmpsb
mov
stos
dec
sub
ds
xchg
lcall
movsb
push
call
dec
test
out
loopne
pusha
sub
sub
add
imul
push
push
scas
adcl
inc
and
out
popf
push
add
popf
fstp
mov
jae
lahf
sbb
les
aam
decb
jmp
ljmp
xchg
xchg
adc
jl
sbb
insl
or
jg
incl
and
xchg
inc
jno
leave
lret
fdivrs
adc
shlb
loopne
pop
stc
push
imul
jecxz
nop
flds
in
sbb
xlat
or
mov
je
vandps
andl
push
int3
in
push
inc
fldl
aad
aaa
inc
imul
xor
mov
repz
mov
add
mov
add
or
in
icebp
testl
out
aam
mov
jg
sbb
mov
cmp
cmp
aas
push
sub
mov
push
jno
dec
loope
mov
loope
daa
cmp
fs
sbb
jno
fstpl
sti
sub
mov
addb
scas
jp
or
subl
jge
lods
pop
pop
fsubl
mov
pop
cld
das
dec
inc
add
sti
push
cwtl
jge
mov
rol
mov
xor
aaa
xchg
pop
mov
mulb
fidivs
xchg
into
addr16
xchg
mov
ja
sub
std
test
inc
push
std
mov
jne
popa
imull
sub
int
sub
dec
lea
ja
test
scas
aam
test
pop
mov
jp
adcb
push
mov
sbb
mov
add
or
push
pop
ret
shrb
ret
jno
rolb
jno
ja
and
jbe
das
mov
push
mov
jge
or
pop
arpl
cld
test
ja
dec
cld
mov
pop
popa
dec
pop
hlt
inc
scas
adc
mov
jno
sarl
jg
in
pop
xchg
xchg
test
jb
dec
xor
mov
es
adc
lcall
stos
hlt
rcrl
push
lds
pop
add
int3
and
in
insb
mov
cltd
cmp
out
cmovnp
pop
popa
in
out
gs
pop
cmpsl
jle
ss
xchg
addr16
xchg
test
push
inc
jle
jmp
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
jmp
dec
jmp
dec
xchg
and
mov
repnz
pop
pop
adc
clc
adc
orb
sub
jb
jl
and
aaa
cs
jg
loope
jo
jp
mov
aas
in
cs
jl
test
shll
aad
call
sbb
rcrl
gs
jo
push
lcall
pushf
cld
repnz
mov
push
pushf
andl
in
cmp
outsb
jp
inc
mov
ret
je
into
stos
sahf
mov
pop
jecxz
jecxz
insl
movsb
ds
mov
mov
and
pushf
lret
sti
fbld
mov
lret
flds
inc
inc
les
scas
dec
mov
lds
mov
add
jnp
mov
in
fdivrl
test
leave
ds
push
jb
jmp
out
lahf
movsb
jmp
insb
mov
addl
scas
repz
stc
dec
or
xchg
leave
and
sub
mov
sub
mov
repnz
push
imul
inc
jo
xor
mov
enter
mov
repnz
popf
subl
lods
jge
in
jnp
mov
pop
imul
xlat
out
adc
insl
pop
pop
mov
ljmp
aaa
gs
or
mov
jg
sub
pop
sub
sub
daa
ret
pop
out
xchg
sbb
std
in
movsb
sub
icebp
scas
aam
add
jl
cmp
movsb
dec
jae
mov
xor
jle
repz
xor
xor
xchg
pusha
push
je
pusha
jae
mov
dec
inc
sub
sbb
push
popa
call
cli
repnz
and
repnz
mov
sbb
repz
push
ss
scas
outsl
call
bound
xor
test
dec
std
pop
imul
sbb
outsb
mov
lods
sbb
sbb
xchg
push
xchg
push
shll
popa
xchg
clc
push
pushf
cmp
sub
js
std
cmp
cmp
adc
cwtl
ja
mov
inc
jle
fstpl
sbb
cmpsl
add
mov
jbe
sbb
popf
les
shrb
xor
sbb
movsl
and
addr16
mov
push
out
int
or
xor
imul
jg
mov
and
test
ret
sbb
rcrb
xor
jns
push
out
or
fmuls
jo
mov
shrb
outsl
fisttpll
lods
shrb
add
mov
bnd
leave
jecxz
leave
or
rol
xorb
cli
data16
cmpl
leave
dec
shrl
fnsave
jno
cwtl
imul
xchg
adc
and
or
inc
stos
dec
stc
in
fisttpl
add
call
int3
dec
mov
mov
dec
xor
mov
mov
scas
or
inc
leave
xchg
pop
and
dec
in
lods
je
push
call
sub
in
inc
pop
into
or
adc
pop
cmpsb
push
cltd
mov
xor
jb
lea
or
jp
sarb
lock
sbb
push
add
int
xor
cli
xchg
ljmp
out
mov
lcall
fdivs
jmp
or
add
imul
xlat
dec
pop
xchg
mov
dec
std
cmp
and
std
arpl
mov
pushf
into
enter
scas
mov
dec
sub
jmp
enter
adc
fdivp
sbb
orb
cmp
xor
out
cmpsl
leave
inc
movsl
sbb
ret
pusha
aas
sahf
repnz
repnz
fistpll
or
inc
lods
daa
mov
stos
jg
mov
jbe
xchg
push
movl
xchg
daa
xchg
hlt
jmp
fistpl
adc
scas
push
stc
fiaddl
mov
mov
mov
sub
inc
adc
out
push
inc
mov
scas
push
mov
cld
jecxz
cs
std
leave
dec
out
xchg
mov
pop
cld
ret
inc
inc
sub
lods
out
fimuls
inc
jle
loop
push
inc
and
jg
mov
push
scas
dec
mov
inc
orl
jmp
push
adc
mov
jg
insl
add
neg
cmp
fnstenv
das
into
xchg
int
les
push
iret
xchg
dec
rolb
aas
loope
mov
ret
aas
faddl
and
dec
sbb
stos
dec
cmp
hlt
sbb
adc
xchg
jmp
push
and
jae
add
push
dec
xor
ror
sbb
mov
out
inc
les
int3
stos
sub
aad
jb
cmpl
scas
mov
ret
and
pop
mov
movsl
testl
cmp
sbb
stos
cmp
lea
jbe
test
cltd
bound
std
cmpsb
xchg
mov
mov
shr
call
out
sub
stos
movsb
jle
sub
pop
aad
fistpl
pop
nop
jecxz
fcomip
nop
lods
jecxz
shll
pop
fs
ret
scas
push
cmp
push
out
movsl
cwtl
add
adc
mov
testl
dec
xor
xorl
adc
sbb
ja
outsl
int3
lock
xchg
sub
jg
cmp
xchg
xchg
inc
jle
push
sarl
out
sbb
sbb
aas
fnstsw
ret
jno
ljmp
movsl
fistl
aam
das
jge
adc
or
aas
fiadds
xchg
les
lret
das
add
or
xlat
stc
dec
push
in
loope
dec
pcmpeqw
cmp
scas
ljmp
and
insb
inc
outsb
cmp
jmp
sub
movsb
out
inc
ljmp
popf
gs
fmuls
inc
loopne
sub
jb
stc
inc
imul
mov
jo
test
xchg
jne
pop
sbb
push
aad
xchg
push
cmc
movsb
cmp
repnz
cmp
or
xchg
add
insl
sbb
movsb
dec
inc
inc
les
push
cli
fldt
jne
pushf
aas
xchg
dec
dec
dec
repnz
mov
enter
inc
jns
xchg
test
lock
adc
mov
shl
mov
shrd
shr
mov
mov
jmp
pop
inc
inc
mov
aas
push
sbb
cmp
adc
push
clc
adc
jecxz
imul
mov
sub
jge
jns
mov
fs
shlb
clc
fs
loope
sbb
and
or
scas
jne
mov
repz
pop
mov
jne
cmc
pop
cmpb
inc
lods
mov
sti
xchg
movb
enter
lret
sbb
pop
mov
cmpsb
pop
addr16
adc
jmp
fcompl
idivb
inc
pusha
in
pop
lret
jae
pushf
cwtl
and
cmp
xor
and
test
xor
jb
cmp
cs
loope
lods
xchg
cmp
push
fdivrs
or
call
jne
stos
xor
cmc
into
dec
inc
sbb
or
test
repnz
movsb
mov
lods
std
iret
out
cmpl
aas
stos
dec
cmpsl
nop
ret
cmp
insl
sar
sbb
dec
subb
or
out
in
repnz
xor
or
mov
add
inc
push
loope
les
lret
pop
je
mov
out
in
loop
out
mov
and
pop
icebp
shlw
xchg
adc
push
sti
pop
jg
add
or
dec
xor
xchg
xchg
in
push
or
fnsave
mov
and
fcmovnb
sahf
pop
mov
nop
popa
xchg
fs
dec
repz
ja
jmp
cmpsb
leave
mov
gs
mov
dec
xchg
and
repz
icebp
dec
jmp
mov
cltd
sub
mov
dec
fistps
jbe
cmp
imul
lahf
or
push
pop
push
or
jne
adc
cmp
out
add
sub
mov
sahf
sbb
addr16
fsubrs
inc
or
loop
and
cltd
xor
sbb
push
testl
ficompl
out
in
in
cli
cli
lret
mov
fbld
scas
ret
frstor
mov
out
jg
inc
iret
ret
xchg
jmp
sub
mov
pop
mov
loope
scas
pop
jecxz
and
pushf
or
xor
jl
sbb
movsb
stos
and
xor
mov
mov
adc
pop
aaa
scas
stos
push
sbb
in
clc
pusha
scas
sub
fs
and
call
sub
adc
fwait
mov
pusha
fsqrt
cmp
mov
clc
test
ljmp
cmc
sbb
add
aam
cmp
xchg
dec
push
inc
mov
and
imul
fcompl
mov
and
out
xlat
push
pusha
xchg
pop
sarb
mov
and
fisttps
mov
pop
xorl
testl
outsb
cli
pushf
out
push
cmpsb
das
loope
lods
dec
sbb
push
jo
and
adc
rorl
sub
add
pop
push
cmp
sub
sbb
jmp
ja
adc
sub
xchg
inc
mov
cmpsb
fildl
mov
xchg
xor
arpl
and
dec
dec
outsl
cmp
adc
divl
out
call
dec
movsl
into
insl
pop
mov
mov
cmp
test
sub
or
repz
dec
sbb
sahf
and
aad
jp
mov
aam
jae
and
add
pop
pop
sbb
leave
push
out
shlb
mov
jne
rorl
cli
daa
ss
xor
or
push
push
mov
push
push
movsl
dec
frstor
nop
jecxz
cmc
xor
xchg
xor
xchg
cmpsb
fbld
dec
inc
mov
je
push
ljmp
xchg
pushf
out
in
rclb
orb
cmc
mov
mov
xchg
out
sub
lcall
movsl
xchg
cwtl
mov
mov
pop
clc
fsubrs
ficoml
xor
lret
cmp
xor
push
cli
push
bswap
push
push
ret
pop
adc
sub
and
jae
out
push
out
or
xor
shrb
fnsave
jbe
pop
fisttpl
push
xchg
stos
add
and
test
cli
or
repnz
popa
lret
xor
es
dec
in
push
test
mov
out
xchg
push
or
fcompl
test
inc
mov
push
xor
mov
clc
push
mov
mov
negb
leave
mov
xor
call
fs
arpl
sub
mov
jge
pop
inc
inc
jae
movsb
aaa
jge
repnz
cmp
mov
js
in
xchg
loop
pop
dec
lret
pop
pushf
pop
xchg
ret
in
and
push
mov
xor
pop
mov
shrl
lret
mov
xchg
mov
sbb
cwtl
leave
inc
insl
jecxz
lds
sbb
push
test
bound
xchg
mov
arpl
dec
fnsave
add
add
cs
xchg
push
lahf
insw
jns
dec
dec
xlat
add
mov
int
cmc
cmp
mov
in
pop
lods
insl
or
jmp
or
lods
scas
ficomps
inc
mov
mov
pusha
adcb
addb
hlt
mov
outsb
xor
imulb
sbb
adc
or
test
or
je
mov
xchg
movsl
dec
mov
jb
rcrl
push
loopne
jne
or
jne
add
lret
mov
xchg
inc
pop
push
mov
lea
std
and
andb
push
add
push
cmp
roll
mov
enter
pop
push
mov
in
sahf
sbb
pop
iret
cmpsb
pop
push
in
adc
nop
cmpsb
loope
add
outsb
les
or
imul
pop
xchg
pop
xchg
dec
mov
add
sbb
sbb
icebp
stos
leave
shlb
mov
lret
mov
mov
sbb
fistl
xchg
popf
shrl
jp
loop
or
mov
pop
enter
lds
bndldx
fisubrs
imul
lcall
jae
cmp
loopne
and
sbb
cs
xor
or
mov
shl
jmp
push
xchg
push
pop
push
es
push
xchg
fcomp
xchg
out
adc
clc
adc
xor
imull
jp
adc
mov
sbb
sub
aaa
mov
jbe
push
jnp
xor
out
jecxz
mov
nop
jl
mov
or
lock
xor
or
je
nop
ret
or
data16
in
cmp
xchg
faddp
sbb
xchg
add
mov
push
push
lret
movsb
pop
mov
ds
dec
push
popa
sbb
popa
sbb
lret
adc
add
add
adc
adc
pop
push
daa
adc
dec
sbb
or
fmul
mov
xchg
mov
jns
pop
fcmovne
stos
push
cmpsb
aaa
loopne
aam
stos
adc
cmpsl
jl
mov
aam
out
imul
inc
ficoml
xchg
mov
jno
add
inc
loop
out
loop
jne
cmpsb
sub
popf
roll
mov
int3
jmp
xor
das
pop
or
pushf
pop
movsl
add
mov
icebp
xor
fs
stos
cmovbe
and
push
pop
push
ucomiss
iret
xor
jl
inc
jno
pop
add
dec
mov
movsl
add
mov
and
out
xchg
cmpsl
aad
add
fnsave
mov
xchg
adc
push
sub
outsl
and
test
mov
dec
lret
out
or
dec
test
cmp
inc
jmp
aaa
cmp
xchg
stos
mov
sti
and
xor
or
dec
popa
inc
push
jecxz
mov
mov
ret
cwtl
js
icebp
loop
outsl
daa
or
jge
sbb
inc
sub
cmp
xchg
imul
gs
subb
xor
movsb
adc
in
dec
mov
fildll
mov
sub
cmp
iret
xchg
xchg
mov
xchg
mov
jns
mov
mov
jmp
mov
jmp
xrelease
flds
cmc
js
jle
or
cmpsl
repnz
sbb
insl
xchg
es
sbb
clc
xorl
cwtl
fimull
xchg
mov
or
push
adc
mov
loop
fsts
imul
lret
outsb
push
dec
pop
in
sti
xchg
jne
add
dec
pop
popa
repz
cmpsb
stos
lods
add
insb
fsubrl
sub
and
dec
or
push
dec
jno
or
arpl
repnz
cmp
iret
stc
lods
xlat
mov
mov
sub
and
shll
lods
lock
mov
das
rcrb
enter
dec
jl
push
aam
sub
dec
jbe
hlt
fcoml
pop
pop
pop
cmp
dec
xchg
popf
fcmovnu
mov
call
mov
fcmove
cmp
mov
xchg
scas
or
sbb
ret
popa
sub
and
push
dec
jmp
rclb
das
iret
stc
mov
mov
fsubr
push
sbb
or
pop
push
xor
pop
imul
inc
fwait
push
mov
fcoml
pop
je
adc
call
lods
mov
rol
rcrb
mov
lcall
add
loop
add
ja
sub
cmp
nop
and
or
ds
imul
push
mov
push
icebp
fucomi
adc
icebp
js
loope
js
push
inc
lea
test
add
jno
in
mov
test
jns
bound
in
mov
imul
push
ljmp
ret
adc
ret
in
ffree
add
nop
fs
add
scas
jo
rolb
jnp
xchg
xchg
pop
icebp
mov
sbb
scas
data16
xchg
insb
mov
test
inc
into
dec
mov
mov
mov
sub
jp
or
lret
xchg
sub
lahf
test
adc
mov
pop
pop
mov
idivl
cmc
xor
mov
lahf
out
test
cmpsl
inc
ret
push
shl
addr16
pop
push
imul
addl
add
lods
pop
mov
push
mov
inc
mov
sub
push
popf
pusha
sbb
add
sub
mov
ja
jecxz
hlt
and
dec
pop
jmp
push
pop
cmp
jae
aaa
sbb
push
test
xchg
aaa
repz
xchg
xchg
pop
icebp
mov
and
idiv
mov
lock
add
dec
sti
ljmp
xlat
call
rep
or
mov
cltd
push
and
into
push
mov
pop
test
outsl
mov
push
adc
popf
pop
lahf
or
pop
push
dec
xor
inc
daa
or
sti
mov
adc
pushl
adc
push
pop
pop
ret
test
out
jns
mov
movb
or
fwait
pop
lret
aam
ret
repz
fsubrp
fadds
fsubs
bound
and
add
loope
jle
xor
out
cmp
js
adc
sub
je
xchg
mov
or
adc
and
addb
pop
cmp
push
ror
xlat
loope
sbb
out
jl
cmp
leave
push
fdivl
and
or
inc
mov
add
xchg
lret
lods
cmp
sarl
pop
sub
lcall
jnp
das
push
das
divb
dec
push
xor
test
xor
ret
dec
inc
push
xlat
shrb
inc
sub
mov
repz
popf
loopne
lcall
pop
nop
or
gs
lret
xchg
jmp
and
stos
push
ds
mov
jne
jno
mov
sti
aam
ds
jns
mov
dec
hlt
int
add
or
xor
inc
jp
mov
out
sti
loope
dec
bound
andl
ds
shll
mov
mov
sub
lahf
lods
call
lds
arpl
pop
cmp
xchg
cmc
sub
jno
cmp
xchg
movsb
std
sbb
pushf
or
out
add
push
jle
push
insl
lock
pushf
jle
inc
lods
iret
dec
aaa
clc
cmc
test
movsb
pop
cli
mov
add
xor
repnz
notb
les
jnp
mov
jns
cmp
add
rclb
arpl
out
stos
or
out
dec
push
mov
cmp
andl
shl
inc
sahf
lahf
and
movq
sub
popf
jmp
or
test
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
pop
mov
push
xchg
enter
cmc
stos
inc
inc
aad
adc
push
clc
adc
push
xor
add
outsl
pop
mov
arpl
pop
add
addr16
xchg
daa
jg
dec
jo
test
std
and
leave
inc
mov
ret
lret
adc
dec
lods
mov
shl
outsl
movb
jecxz
or
popf
dec
pushf
lahf
jo
inc
and
es
rclb
and
inc
add
xor
jne
bound
mov
sub
jo
dec
jns
mov
mov
dec
arpl
mov
inc
push
adc
insb
mov
inc
sar
popf
dec
push
pop
mov
sbb
test
repnz
push
push
popa
out
add
and
hlt
or
aaa
xor
lock
loopne
dec
pop
push
jg
hlt
imul
loopne
xchg
pop
je
faddp
push
push
push
int
fcmovu
loope
sub
popf
pop
pop
push
cmp
dec
pop
xchg
mov
dec
js
paddw
stos
push
mov
add
cmp
gs
cmp
movsb
and
test
stos
fcmovne
push
sti
aas
out
adc
movsl
loop
imul
adc
divl
xchg
movntq
inc
add
gs
mov
push
push
sub
jl
xor
fidivs
das
fiadds
popf
xchg
lret
aas
js
popf
fistl
sbb
int3
inc
dec
xor
or
cmpb
xchg
inc
xchg
les
fidivl
adc
in
xchg
pop
imul
pop
dec
xor
push
push
rol
enter
lods
pop
xor
and
pop
or
jno
in
mov
push
jecxz
push
daa
sahf
push
jne
or
fimull
daa
adc
movsl
outsb
and
je
insl
mov
pop
mov
pop
and
cmp
dec
je
push
cmp
adc
xchg
and
xorb
cli
jbe
jns
or
mov
stos
pop
shrl
xchg
inc
or
adc
cmp
test
push
out
push
fsubs
out
and
stos
ret
sbb
pop
push
dec
sbb
enter
and
cmc
aaa
mov
xchg
data16
out
movsl
add
lcall
in
fs
inc
adc
mov
enter
push
nop
dec
adc
jns
add
fdivs
push
cmp
test
mov
fisttpl
push
pop
mov
add
jecxz
mov
mov
pop
or
rorb
jge
mov
mov
mov
lods
dec
jp
cmp
pop
dec
stos
cmp
dec
inc
jmp
int3
sbb
push
add
add
aaa
nop
jno
test
xchg
xor
rolb
aad
add
mov
mov
loopne
and
xchg
pop
ret
jp
sbb
out
inc
out
jecxz,pn
fwait
mov
ja
scas
int3
cmp
lock
xorl
jg
or
or
sti
jge
das
js
cld
movsb
xor
xchg
popf
or
nop
push
xchg
into
or
inc
xacquire
mov
jp
stos
mov
outsb
fwait
test
mov
xorl
clc
jg
adcl
jle
adc
push
movsb
xlat
add
inc
adc
add
sub
lock
xchg
cmp
push
mov
pop
test
ret
idivl
inc
sub
inc
cltd
push
jle
lahf
loop
shll
jecxz
cltd
inc
cmp
cmp
ljmp
cmpb
shll
out
cs
dec
sbb
adc
inc
mov
xchg
lret
pushf
pop
xor
jns
jb
call
or
out
and
sbb
pop
outsl
daa
jmp
inc
out
pop
jge
mov
or
mov
cs
jl
fldt
dec
sbb
out
in
mov
mov
mov
mov
aas
fildl
and
movsb
iret
jecxz
daa
and
inc
mov
out
test
cmpsb
dec
mov
mov
mov
dec
xor
pop
add
cltd
cmovbe
adc
pop
fisttps
fsubs
jbe
lcall
jne
fwait
sub
enter
and
mov
fistpll
cs
xchg
jmp
dec
mov
xchg
xor
mov
and
addl
outsl
xor
negb
sbb
push
jns
cltd
roll
inc
pop
mov
jnp
and
je
punpcklwd
sbb
push
fildll
loope
ja
je
rorl
cmp
adc
jno
dec
sbb
loopne
xchg
cli
or
cmp
jecxz
sub
mov
xor
bound
mov
xor
enter
fisubrs
outsb
adc
andnps
sbb
leave
cld
inc
inc
cltd
xor
and
cmc
cmp
lahf
pop
pusha
pop
divb
leave
add
pop
xchg
push
and
and
adc
inc
inc
es
lods
push
fiadds
aam
mov
mov
leave
mov
sbb
xor
and
nop
imul
jmp
aam
cmp
jp
repnz
xlat
xor
lret
gs
adc
lea
mov
mov
lock
lahf
je
lret
fwait
lock
sbb
sbb
pusha
stos
cld
mov
mov
xor
push
aas
xchg
jge
adc
roll
js
inc
lock
inc
jns
mov
lret
pop
pop
pop
les
mov
neg
mov
ret
add
imul
add
fistl
push
arpl
xorps
fldcw
mov
cli
inc
dec
loop
cs
cmp
leave
in
add
int
cmp
xor
or
add
sahf
mov
mov
mov
mov
clc
outsb
and
pop
scas
jne
enter
ss
sbb
xchg
orb
pop
pusha
lret
mov
dec
cmc
mov
std
popa
inc
pop
fwait
mov
push
push
jo
int3
add
aam
rcl
add
jecxz
inc
mov
and
dec
inc
or
js
pop
js
or
mov
lock
not
and
xor
mov
mov
xor
or
mov
mov
jmp
lds
jno
push
push
or
inc
inc
lahf
jo
adc
adc
push
clc
adc
mov
jp
inc
loopne
rcrl
pushf
dec
ficoms
or
addr16
add
ret
xlat
scas
cmp
mov
imul
mov
inc
aaa
fcom
mov
xor
xchg
mulb
sbb
adc
sti
ret
sahf
sbbb
aam
adc
jnp
insl
in
mov
adc
dec
imul
fcomps
jne
or
aam
cmpsb
test
pop
mov
aad
sub
inc
pop
mov
cli
push
inc
int3
jno
pop
stos
xchg
dec
push
out
pop
xor
xchg
inc
fimuls
arpl
scas
and
inc
test
in
fdivrl
jne
ljmp
int
js
mov
sub
pop
out
push
aas
sarb
lock
ss
out
cmp
js
cltd
out
jecxz
ucomiss
sbb
adc
cmp
pop
movsl
ret
mov
dec
or
fnstenv
cltd
bnd
lret
adc
stos
js
in
push
aam
and
into
push
hlt
movsl
outsl
sbb
sbb
or
dec
xor
iret
inc
lods
stos
jns
lcall
push
icebp
push
test
or
shrb
fistpl
cld
js
insb
pop
fistpll
int
rsqrtps
testl
loope
jbe
cmp
mov
shlb
xchg
out
mov
xchg
sbb
adc
pop
mov
cmc
lods
jae
jb
test
and
mov
leave
pop
fimuls
add
imul
out
ret
xchg
push
jno
aad
sub
sbb
lcall
inc
movsb
xor
loopne
or
jae
jbe
cltd
shl
pop
push
jle
rol
fmulp
xchg
fsubl
imul
mov
mov
out
imul
test
and
mov
dec
pop
subl
pusha
es
and
popa
popa
stc
pop
sub
mov
aad
adc
stos
scas
ss
stc
and
into
push
mov
adc
sbb
iret
adc
mov
jnp
imul
mov
mov
das
mov
fstpl
sarb
inc
xor
mov
insb
rcll
cmp
loopne,pn
xlat
inc
divb
loop
roll
push
mov
cmp
sbb
pop
and
dec
adc
dec
fcmovbe
mov
or
divb
es
inc
dec
cmp
mov
jnp
sub
mov
cs
push
not
loopne
std
mov
fmulp
out
sarb
sbb
inc
push
sti
and
inc
sbb
xchg
pushf
cld
inc
jb
decb
js
ljmp
xchg
mov
in
lds
stc
ljmp
cli
cmc
add
mov
stc
mov
dec
mov
sbb
shlb
bound
cmc
loopne
jmp
icebp
dec
cld
push
lods
fisttps
repz
test
or
inc
into
out
jo
mov
sub
adc
lcall
mov
pop
push
cmp
pushf
pop
push
out
cmc
ficoms
dec
and
and
cltd
push
popa
sub
sbbb
cmp
mov
movsb
sub
stc
mov
inc
aam
test
inc
scas
and
or
pop
mov
cmpsb
out
xchg
cmc
sti
jp
xchg
and
pop
cmp
push
subb
sub
mov
pushf
aad
outsl
into
mov
and
jg
rorb
mov
xchg
pop
je
mov
mov
gs
in
fdivs
push
cmp
out
push
cwtl
pop
insl
neg
mov
inc
jg
xchg
fistpll
pop
icebp
fcoml
stos
decb
lea
fsubrl
stos
lret
inc
enter
std
jns
or
test
sub
sbb
add
cmp
or
movsb
jmp
mov
inc
xchg
ds
push
fidivrl
hlt
jp
sub
stc
xor
or
inc
jp
imull
jmp
jns
inc
ljmp
xor
lret
adc
jb
cmp
mov
cwtl
out
std
loop
out
and
test
addr16
mov
add
fiadds
lahf
pop
es
iret
mov
fstps
xor
jg
pop
xchg
inc
and
inc
ljmp
cltd
aam
call
inc
call
push
push
data16
xor
adc
sub
xor
xor
das
popl
bound
jmp
in
pop
dec
shrl
ljmp
mov
insl
es
mov
negb
mov
sbb
repz
mov
cmpsb
or
add
pop
add
fs
sub
pop
ljmp
sbb
sbb
inc
xchg
xchg
inc
test
adc
in
shlb
insb
lret
mov
in
aas
insb
mov
lahf
cli
xchg
loopne
arpl
pusha
rclb
hlt
jl
cmc
mov
push
fwait
das
out
aam
data16
dec
fs
int3
ja
or
sahf
lahf
jae
sub
std
xor
test
fldenv
aad
adc
jns
and
xchg
inc
ficoms
inc
imul
inc
and
add
mov
loop
mov
xor
insb
pop
cmp
mov
jnp
popa
push
stos
ja
cmp
mov
and
sbb
dec
jp
adc
xchg
and
scas
push
cli
adc
cmp
add
jg
jo
push
mov
test
scas
sbb
or
push
add
add
cmp
push
sub
jmp
mov
sbb
jb
cmp
sub
push
test
sub
out
sub
add
push
xor
and
enter
es
addb
rcll
xlat
stos
mov
vdivss
leave
dec
push
and
or
ret
and
add
mov
sub
mov
sbb
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
jmp
inc
jle
add
add
add
scas
adc
push
clc
adc
sbb
add
xchg
mov
xchg
scas
cltd
adc
int
shl
leave
outsl
jmp
mulb
shll
push
pop
and
das
cmp
xchg
or
not
mov
xlat
shl
inc
stc
mov
dec
mov
loop
pushf
rcl
popf
pop
push
lret
pop
or
mov
bound
js
and
roll
or
cmp
bound
out
push
das
sub
loopne
xchg
pop
push
push
pop
cmc
mov
loopne
inc
sbb
int3
add
into
enter
daa
xor
fnstenv
imul
push
aas
adc
mov
aaa
dec
jge
xchg
test
in
jecxz
int3
sbb
mov
inc
xchg
mov
jae
mov
push
iret
aad
dec
jecxz
mov
push
add
and
popf
leave
or
cmp
pop
loope
repnz
sbb
bound
sub
loop
mov
mov
jmp
shl
ds
iret
insb
inc
cli
pop
ja
pop
mov
scas
ficoms
lret
test
fistpl
out
mov
sbb
clc
imul
xorb
mov
mov
stc
daa
in
iret
dec
call
mov
mov
pop
addr16
repz
xchg
xor
adc
add
inc
xor
pusha
cmp
and
stos
shlb
adc
ret
pop
xchg
mov
dec
outsb
fs
xchg
pop
fsubs
sbb
add
push
jle
shlb
jecxz
imul
or
cmp
inc
addr16
mov
mov
push
mov
push
add
call
mov
outsb
lcall
push
movsl
repz
rcrl
inc
shrb
adc
orl
mov
inc
in
xchg
or
and
ret
and
int
outsb
push
fisubrs
dec
jl
and
and
pop
inc
or
insl
iret
xchg
mov
sti
cmp
movb
mov
inc
dec
popa
dec
mov
in
mov
mov
jae
jg
cwtl
jnp
lcall
jno
push
iret
loope
rorl
bound
add
fdivl
js
mov
pop
iret
mov
sbb
js
inc
int
cmp
pop
cpuid
push
adc
jbe
xchg
pop
jne
xchg
testb
out
ljmp
add
xor
ja
cli
loopne
push
mov
jmp
lret
jecxz
fnstenv
and
insb
dec
pop
push
push
mov
and
mov
and
lods
mov
sub
rcrb
mov
test
pop
popf
jle
loope
xchg
push
mov
ds
cmp
addr16
dec
jbe
fisttpll
repz
cmp
pop
test
std
sbb
shll
int3
add
inc
and
mov
and
push
int3
xor
xchg
mov
jne
das
add
sbb
push
std
push
mov
pop
shlb
fs
dec
sub
jo
inc
jbe
push
cmp
iret
mov
xchg
lock
mov
mov
loop
fimuls
mov
rolb
mov
xchg
es
and
mov
out
xchg
mov
push
mov
xchg
adcb
pushf
scas
jne
mov
mov
dec
cs
cmp
mov
adc
mov
enter
or
mov
fcompl
sub
cmpb
or
leave
inc
mov
xchg
cmp
dec
adc
sbb
lcall
aaa
daa
sub
mov
fiadds
call
out
mov
lods
sub
jmp
sub
fwait
rcr
push
cmp
and
mov
mov
adc
rcrl
sbb
pop
loope
mov
fidivs
scas
ljmp
lret
lds
pop
push
mov
sahf
rorb
xchg
sub
outsl
push
jmp
je
and
clc
xor
outsl
shl
and
jmp
pushf
movsl
test
imul
sti
pop
jl
test
cs
cltd
cld
sti
add
ja
in
lahf
pop
lock
fs
inc
mov
mov
push
das
xchg
movsb
dec
add
dec
jp
mov
pushf
les
dec
jge
daa
xor
cmpsl
into
test
push
call
addr16
push
mov
sbb
jecxz
dec
lods
js
xchg
add
mov
outsb
mov
imul
cmp
insl
jnp
test
xchg
add
sub
cmpsl
fwait
jae
fmuls
xchg
in
adc
leave
and
jmp
mov
in
rorb
lock
inc
outsb
sub
test
xchg
pop
push
add
sbb
inc
mov
push
fcmove
addr16
adc
add
mov
mov
xor
insl
dec
testb
mov
test
push
push
int
pop
dec
test
je
dec
sub
xchg
popf
cmpsl
mov
jmp
and
icebp
call
sub
or
cmp
lret
mov
push
mov
jo
mov
int3
jns
inc
xor
cwtl
repnz
jo
jle
mov
sti
daa
sbb
pop
jp
in
cltd
in
bound
daa
imul
test
lret
lcall
jnp
xchg
sbb
inc
xchg
push
mov
scas
mov
xchg
sub
sti
push
adc
mov
jmp
pop
adc
sti
mov
and
scas
adc
pushf
pop
call
mov
aad
xchg
dec
inc
inc
loop
and
in
test
dec
iret
outsb
dec
mov
dec
mov
orl
add
shl
pop
int
push
call
jl
adc
mov
movsl
in
dec
mov
xchg
adc
loopne
daa
insb
jecxz
fdivrs
nop
add
jns
mov
mov
xor
jecxz
adcl
into
in
pop
sbb
cmp
adc
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
jmp
test
and
push
mov
repz
xor
add
adc
jge
push
std
cwtl
xor
cmp
and
das
cmp
fisubrl
mov
rorb
call
cmp
mov
ds
stos
sbb
push
push
dec
aad
and
ds
fidivs
mov
andb
in
mov
in
lcall
adc
dec
roll
incb
pop
mov
mov
sub
aas
outsb
bound
adc
pop
repnz
mov
push
cmpb
jne
movsb
subb
aad
or
mov
das
adc
jnp
push
sbb
sbb
outsb
xchg
mov
insb
ja
jne
push
movsl
pop
pmuludq
dec
mov
in
ret
or
lcall
loope
adc
sub
dec
call
push
jg
neg
cmp
and
mov
incl
repnz
pop
mov
sbb
inc
xchg
lds
in
clc
shrl
leave
mov
sub
aaa
mov
movd
sub
dec
adc
bound
pop
es
mov
cli
pop
xchg
enter
iret
or
movb
fisubrl
addr16
dec
rorb
mov
cmpsl
mov
je
fnstsw
push
jns
jnp
imul
lods
push
jne
mov
jp
test
aaa
jmp
jmp
gs
mov
xchg
fwait
pop
nop
je
or
mov
movsl
xchg
das
push
jno
pop
jno
xor
xchg
fadds
lret
loop
push
gs
pusha
loope
push
add
jecxz
hlt
mov
clc
xor
jne
mov
dec
xorb
and
std
mov
sahf
ljmp
loopne
int
popa
subb
pop
icebp
xor
mov
xor
je
imul
in
xchg
cmp
mov
jp
imul
outsl
cld
add
jle
arpl
xor
mov
aad
popf
shrl
cmp
cltd
xor
addl
inc
loope
dec
mov
ljmp
in
ja
sbb
call
daa
xor
addl
jge
icebp
loop
xor
test
or
pop
test
and
sbb
sub
stos
lret
pop
add
fst
or
sub
bsf
mov
add
sbb
xchg
push
inc
or
ret
rol
jp
or
scas
push
ret
ljmp
adc
lds
pusha
xor
inc
insb
and
fstl
scas
cmp
out
int3
imul
iret
cwtl
adc
sub
stos
out
dec
jbe
mov
std
ds
insb
punpckhdq
testb
test
je
incl
sbb
mov
arpl
mov
jle
call
fisubrl
push
gs
std
inc
or
orb
mov
sub
inc
push
ret
inc
clc
dec
xchg
jbe
mov
xchg
test
out
inc
repnz
arpl
add
xchg
add
or
jae
lahf
es
test
pop
mov
ja
rolb
fmull
jge
sarl
cltd
mov
add
into
dec
or
subb
cmp
int
mov
add
rcl
xlat
aaa
das
call
lock
rcll
fmull
mov
cld
cmp
test
push
outsl
pop
pop
push
test
iret
scas
dec
or
xchg
clc
inc
hlt
jo
adc
lret
test
dec
repz
and
aad
push
jb
mov
pop
popf
hlt
dec
inc
pop
push
imulb
jno
inc
nop
sti
cmp
mov
es
mov
pop
lcall
lock
mov
cmp
pop
inc
pop
sar
call
push
or
inc
push
inc
adc
and
leave
mov
and
lea
js
in
add
push
adc
sbbl
and
push
out
std
outsl
stos
aad
shrb
std
adc
das
or
pusha
mov
sub
lods
push
fsts
xchg
or
mov
pop
cmp
jbe
std
and
js
xor
faddp
sbb
std
pop
inc
jge
imul
repz
push
xlat
test
push
fdivrs
pop
jmp
push
and
jl
add
xor
shrl
push
jo
jno
pop
shlb
cmpsl
lods
test
rorl
adc
and
fldcw
adc
xor
jp
fsubl
push
xchg
les
inc
cmp
push
push
mov
pop
adc
mov
icebp
dec
jmp
mov
mov
xchg
arpl
rcr
bound
jp
in
pusha
cmpb
sbb
cld
push
jle
lcall
loop
mov
dec
add
lods
in
jecxz
sbb
push
dec
in
pop
lcall
faddp
aaa
mov
mov
dec
gs
sbb
sbb
ss
pushf
mov
leave
outsb
dec
or
aam
mov
or
fildll
push
xchg
les
pusha
imul
lods
pop
outsb
or
sbb
mov
aad
push
push
lret
xor
lea
icebp
dec
imul
imul
cmpb
pop
ret
out
jne
lods
jnp
mov
mulb
mov
stc
fsubl
mov
out
mov
jns
rorb
xor
ret
cmp
imul
adc
jp
aam
cmpsl
sub
xchg
stos
pop
inc
fdivr
add
jo
lea
mov
repz
dec
in
ds
jecxz
jb
add
mov
jecxz
and
dec
and
jae
pop
shlb
sub
xchg
xor
loop
inc
cmp
sbb
adc
sub
mov
pop
jecxz
imul
clc
xchg
fwait
push
or
or
scas
mov
mov
cmc
jmp
jnp
push
cs
cltd
cmp
mov
pmulhw
xor
xor
add
dec
and
push
cmp
imul
cmp
aad
jns
xor
mov
pop
mov
and
je
js
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
movsl
mov
mov
inc
repz
dec
xor
xor
push
clc
adc
and
mov
pushf
loop
notl
mov
xor
fistpl
adc
in
jle
mov
sub
jmp
pop
fcmovnu
jns
push
inc
pop
sarb
sbb
insb
fwait
push
xor
test
into
cmp
in
dec
mov
jmp
jo
loopne
mov
and
add
mov
cmp
and
add
insl
std
add
jno
adc
mov
and
dec
fnstcw
loopne
xor
pop
pop
ret
les
pop
mull
shll
inc
adc
inc
subb
ja
or
loope
xchg
das
ja
xchg
or
fists
clc
shlb
fwait
inc
imul
fdivl
xchg
mov
cli
ljmp
out
subl
and
sti
mov
roll
sbb
dec
push
inc
xor
rolb
pop
fbstp
sub
jmp
test
popa
push
sbb
mov
sarb
adc
and
sbb
mov
nop
movl
inc
pop
jbe
and
lahf
ja
and
aas
xchg
hlt
or
jnp
scas
jp
daa
sub
clc
or
shr
roll
inc
lock
push
lahf
sub
xor
xchg
mov
into
mov
lock
cmovno
cmp
stc
sbb
ret
sub
inc
outsl
xchg
push
cmp
stc
outsb
addr16
adc
movsl
inc
stc
lds
sbb
mov
aas
int3
out
rol
jl
xor
call
push
xchg
fistpl
test
lahf
cmp
and
jo
pop
ret
jb
dec
or
push
movb
mov
cmp
daa
rcll
dec
sbb
outsl
out
jg
cs
fsubrl
inc
jecxz
int3
cld
pop
xlat
jecxz
movl
xchg
cs
mov
mov
sbb
cmovle
testb
mov
clc
jae
mov
frstor
rcll
xchg
ret
popf
popf
xor
inc
in
test
inc
sub
iret
ja
sub
sub
hlt
sub
sbb
add
pop
stos
mov
cmc
and
sbb
mov
dec
pop
lret
jge
lods
sahf
jae
fdivl
mov
pusha
scas
sub
add
orl
pop
mov
scas
mov
or
sub
pop
andb
mov
lea
gs
mov
jno
inc
cmp
mov
repz
dec
or
jbe
or
ss
pusha
lret
pop
cmp
jecxz
out
les
lock
xor
jmp
jle
dec
scas
in
scas
dec
and
movsl
mov
in
xor
enter
jl
mov
in
dec
xchg
pushf
xchg
movsb
adc
hlt
jmp
movsb
mov
and
rorl
push
push
and
andl
inc
add
mov
cmpsb
push
xlat
jno
test
roll
adc
dec
jl
pop
imul
hlt
scas
stos
popf
xchg
mov
xchg
or
xor
fs
or
ja
ret
pop
enter
mov
hlt
fwait
lea
jnp
ret
sbb
das
loop
push
sub
push
into
inc
stc
jmp
jne
fisttpll
sbb
stos
push
xchg
sbb
fists
and
arpl
aam
int
enter
push
es
out
mov
insb
cmp
out
xor
lock
jge
out
sbb
fcoms
xchg
movsb
mov
cmp
add
adc
and
mov
in
movsb
test
outsl
outsl
in
js
rep
lock
std
das
jne
mov
jno
or
sti
pop
and
fdivrl
xchg
lods
loop
popa
mov
push
cmp
cs
dec
aad
dec
jg
jecxz
filds
jmp
inc
faddl
xor
enter
push
push
loope
mov
dec
jns
jmp
roll
fcompl
out
cmp
loope
imul
scas
popa
lods
test
lods
ljmp
aaa
mov
cmp
dec
insb
lret
dec
nop
aam
xchg
mov
dec
negl
int3
gs
add
push
dec
iret
push
or
and
dec
int
xor
rcll
aas
leave
sbb
push
mov
insb
push
cwtl
lock
cmp
jo
cs
in
pop
test
xchg
xchg
xlat
dec
and
xchg
mov
push
imul
daa
lret
cmpsb
xchg
sub
in
pop
les
loopne
xchg
ret
nop
or
dec
xor
or
cmp
lret
adc
and
enter
lahf
lea
and
push
pusha
sub
cld
out
adc
jno
lcall
loop
std
cwtl
test
loop
sub
pop
std
sahf
jmp
mov
jge
mov
or
pop
in
or
xorl
scas
or
test
xchg
pop
xchg
lods
mov
sbb
pushf
js
les
xchg
inc
lea
outsl
orl
mov
lods
push
inc
stos
mov
sub
das
jp
dec
outsb
into
sbb
popf
and
negl
fwait
mov
into
push
shlb
pop
xchg
gs
loopne
sbb
stos
mov
lods
mov
jle
add
adc
pop
adc
mov
or
ds
subl
out
pushf
mov
hlt
cmc
inc
cld
clc
adc
les
push
scas
out
fcomps
pop
jle
std
jbe
mov
repnz
pusha
dec
sbb
mov
pop
ds
int
sbb
pop
fldl
cwtl
jae,pt
or
scas
data16
test
mov
push
push
mov
pushf
push
push
outsb
push
mov
sub
cli
hlt
movsb
sub
shrl
loope
add
jae
insl
inc
sti
jge
or
or
xchg
mov
mov
mov
inc
sbb
push
mov
xchg
jecxz
sahf
in
dec
lahf
xor
sub
rcrb
fbstp
and
out
mov
fwait
xchg
stc
add
imull
xchg
add
add
inc
rcr
bound
push
stos
xchg
jmp
ret
adc
jmp
fwait
jge
adc
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
jmp
xchg
inc
aad
les
push
fmuls
add
jbe
inc
adc
clc
adc
mov
cmpsl
addr16
out
movsl
incl
dec
mov
add
rcrb
fnstcw
pop
pushf
sub
mov
fsubs
insl
imul
movsb
addr16
sbb
jge
rorl
into
pop
icebp
cmpsl
mov
push
outsb
out
inc
dec
or
add
or
sub
mov
push
in
mov
ffreep
test
push
lock
rol
xor
dec
into
shrb
repz
and
adc
xlat
fsubrl
mov
inc
or
adc
fcmovne
mov
lods
sub
xorb
add
dec
clc
imul
pop
adc
inc
jl
inc
sub
pop
int3
and
pop
add
leave
cmp
roll
aad
movsb
out
imul
add
dec
stos
pop
fwait
insb
sbb
addr16
out
push
fsubs
adc
push
popa
push
cltd
push
dec
stos
fbstp
stc
sub
shll
aam
cld
adc
mov
icebp
adc
cvtdq2ps
mov
jmp
iret
sub
aam
sub
sarl
jns
out
mov
std
mov
je
mov
test
push
lret
mov
adc
xlat
ficomps
pop
in
bound
jecxz
and
aas
xchg
sahf
mov
andl
roll
repz
cmp
jle
out
and
mov
out
cmp
outsb
add
mov
mov
dec
test
xchg
jb
sahf
ljmp
es
loopne
cmc
jae
imul
and
fnstsw
es
repz
clc
mov
mov
pop
sbb
add
aaa
pop
sbb
insl
mov
xchg
dec
shl
int3
popa
repnz
stc
int3
filds
stc
dec
inc
push
hlt
cmp
loop
dec
xchg
rorb
sub
mov
mov
adc
dec
sub
aam
mov
xchg
sbb
lret
mov
push
loopne
outsb
dec
ja
movsl
sbb
jae
and
jge
cmp
and
and
aam
jne
jge,pt
out
scas
inc
push
insl
mov
mov
cs
dec
jae
jg
lahf
cmpsl
fdivrs
sub
cmp
jb
xchg
lahf
es
mov
push
mov
hlt
out
sub
das
sub
fidivs
lock
jg
fidivl
jb
add
out
xchg
fsubrl
sbbb
out
sti
xchg
add
repz
cmpsl
push
aaa
rcr
lods
stos
xlat
and
inc
mov
sbb
sub
jg
lea
shr
pop
pop
or
xor
fwait
jge
mov
mov
scas
fwait
js
adc
add
arpl
mov
test
sbb
mov
fsts
mov
dec
cmp
stos
and
push
sbb
mov
insb
fldenv
iret
sub
dec
das
dec
sub
jno
or
or
push
ljmp
fbld
jo
jns
pusha
gs
mov
mov
lods
ja
adc
imul
stc
scas
jmp
add
pop
xor
aad
adc
mov
dec
add
or
js
xchg
add
clc
stos
lods
sbb
rorl
xchg
andb
test
rorb
jmp
loop
mov
xchg
sub
neg
mov
pop
sub
std
cmpl
xor
pusha
inc
push
inc
out
rcrb
je
push
xchg
lcall
aas
repnz
lret
out
push
rolb
mov
lock
mov
push
pop
imul
jge
test
ret
in
jp
adc
xchg
dec
filds
stc
or
sbb
add
int
dec
push
test
test
ret
es
adc
xchg
lret
add
jae
mov
add
les
xchg
xor
std
popa
push
mov
test
xor
dec
pop
mov
xchg
xor
insl
xor
cmp
add
in
xchg
sti
xchg
or
push
adc
jmp
mov
pop
mov
push
adc
cmp
sub
pop
dec
jmp
push
fchs
adc
lahf
rcl
scas
adc
push
aad
dec
ja
call
jae
adc
xchg
and
test
mov
sbb
test
xlat
movsl
jp
mov
jno
jbe
movsl
jg
loop
stc
add
call
ret
inc
inc
pop
xchg
idivl
add
jae
sub
loopne
in
in
sub
push
pop
hlt
fdivs
scas
push
dec
rorl
adc
sbb
in
xor
test
js
xor
xchg
insb
mov
mov
mov
nop
lds
push
std
mov
mov
loopne
xchg
lds
xorl
mov
mov
xchg
cmp
push
loope
xchg
sub
mov
inc
pop
es
repnz
out
xchg
in
aam
jg
mov
inc
mov
lahf
jmp
pop
fisttpl
jb
mov
jg
add
imul
or
into
cmpb
mov
push
insb
dec
scas
aas
mov
mov
iret
and
das
sub
pop
xlat
pop
mov
jge
mov
cmp
movsb
lret
hlt
mov
push
les
xchg
and
xor
jnp
test
lret
adc
out
scas
cmp
shrb
imul
test
mov
mov
frstor
test
mov
push
xchg
cltd
fbstp
add
outsb
fsubr
dec
jp
push
push
push
hlt
push
mov
std
adc
xor
cmp
fdivrl
sub
mov
addr16
cltd
js
cwtl
lret
cld
imul
jbe
dec
xor
test
sbb
dec
test
add
fs
inc
mov
mov
ror
jl
scas
call
rorb
mov
mov
mov
daa
sbb
cmpsl
mov
das
inc
adc
dec
ret
daa
push
cmpsb
inc
out
scas
pop
xchg
stos
inc
push
mov
in
sbb
test
dec
outsl
cmp
adc
movl
jp
or
xor
push
lret
mov
xor
shld
xor
mov
mov
shl
jmp
lret
xchg
cli
icebp
mov
fiadds
jo
add
adc
push
clc
adc
jl
jae
fwait
shrl
out
in
pushf
add
ret
dec
pop
pop
daa
mov
ds
xchg
adc
cmp
negl
or
sahf
insl
jmp
out
pop
xor
pop
mov
popf
and
jno
in
fisubl
cvttps2pi
add
leave
cmc
std
aaa
jmp
sub
cmc
aas
in
sbb
xor
mov
stc
mov
enter
add
adc
out
pop
lods
add
sub
iret
xchg
cwtl
lcall
jbe
adc
ret
pop
mov
cmp
sbb
lods
and
push
enter
ret
cli
mov
mov
bound
aad
xchg
dec
cli
mov
ja
test
das
push
xor
cs
or
enter
mov
xor
mov
lret
push
inc
out
shrl
or
mov
ret
pop
add
insl
fbld
lock
loop
das
lds
out
addl
in
pop
push
mov
subb
shrl
mov
fwait
or
pop
xchg
mov
cli
arpl
inc
sbbl
or
mov
adc
cltd
push
dec
xor
lcall
sub
jns
out
mov
sbb
push
bound
in
mov
and
xchg
rorl
mov
pop
cld
scas
pop
popa
xor
add
and
mov
sub
rep
jl
insl
add
out
push
sbb
bound
outsb
ds
or
adc
sbb
pushf
sub
lods
push
lret
lea
jmp
inc
outsl
pop
rcrb
mov
jp
cmp
or
dec
or
in
stos
jg
sti
pop
test
mov
sub
out
adc
sbb
in
and
inc
sbb
in
mov
out
cld
adcl
int
mov
das
dec
enter
popa
popa
loop
xor
xor
ss
pop
outsb
jne
sub
xor
out
xor
push
sub
jecxz
add
cmp
cmp
sar
lods
mov
ret
inc
pop
inc
dec
adc
les
cmp
push
mov
mov
cmp
or
repz
rorl
inc
bound
insb
aam
enter
idivb
xorb
xor
sub
add
jae
xor
add
mov
sbb
add
mov
push
jb
out
xchg
sti
enter
out
mov
xchg
std
repnz
push
ds
mov
dec
adc
mov
pop
in
jmp
iret
mov
push
cmp
imul
mov
pop
call
stos
sbb
or
ret
xlat
inc
int3
and
push
loopne
aam
pop
cmpb
icebp
lods
in
push
push
inc
xor
push
and
in
test
popa
add
inc
fcoms
jb
ss
mov
sbb
pop
fnstenv
and
ret
scas
outsb
xchg
adc
hlt
mov
dec
jbe
inc
dec
jns
cmc
les
roll
ljmp
loop
xchg
push
lcall
push
lds
in
pop
and
jmp
cld
int
jns
dec
jl
mov
insb
push
mov
mov
popf
lds
mov
jp
mov
xchg
and
movsb
rcrl
faddl
incb
hlt
mov
mov
push
test
insl
xchg
cltd
jae
add
ljmp
mov
movsl
into
mov
verw
fmull
lods
xchg
test
iret
test
cs
and
jbe
out
dec
or
inc
xor
rcl
repz
xor
pop
insb
adc
dec
adc
xor
insl
fcmovne
sbb
shll
fldenv
test
push
push
data16
lcall
outsb
xchg
adc
cmp
aad
sub
pop
or
push
outsb
push
shll
sub
cltd
sbb
mov
pushf
jg
jne
dec
push
leave
pop
repnz
xor
dec
popa
sbb
iret
aaa
jge
xchg
sarb
sbb
adc
movl
xchg
push
loop
push
lds
jne
sbb
jle
or
mov
xor
xor
popa
jge
nop
dec
and
movsb
jno
test
pop
push
jge
jl
clc
dec
out
ja
scas
sub
cmp
sti
mov
int3
into
fisubrl
sub
xor
mov
fcmovb
mov
dec
pop
shlb
in
dec
cltd
jecxz
push
cmp
adc
incb
mov
mov
das
cwtl
imul
fwait
test
jno
dec
jg
icebp
pop
push
pop
push
cmp
add
cli
mov
fs
sbb
pop
xchg
out
enter
fistpl
cltd
movsb
int3
lods
mov
aam
dec
testb
insb
adc
cmp
jo
and
push
cmc
xchg
sbb
mov
adc
stos
sahf
sbb
adc
orb
addl
dec
cltd
mov
mov
cmp
es
pop
test
aas
dec
jecxz
push
mov
mov
xor
pop
rolb
out
xor
adc
popa
dec
jo
aam
jne
cmp
mov
push
push
test
inc
enter
fsubrs
mov
repz
sbbb
sbb
data16
out
cmp
les
pusha
cld
int3
dec
stos
dec
inc
mov
adc
gs
sbb
outsl
cmpsb
adc
add
push
sub
push
fstps
mov
iret
add
and
out
xchg
sub
push
in
or
cltd
adcl
mov
lock
ljmp
pop
test
cmc
daa
cmpsb
sbbl
hlt
pop
stc
cmc
cmp
stc
mov
push
mov
cmc
sub
aaa
sbb
je
test
jl
jno
inc
and
mov
jo
push
daa
inc
add
and
add
test
bound
xor
orb
xor
add
mov
int3
cmp
mov
lea
test
fcmovnbe
insb
xchg
fdivrl
dec
cld
cld
cmc
xchg
jnp
dec
int3
mov
push
repz
int
push
adc
xchg
addr16
inc
adc
test
ret
push
add
mov
imul
push
sti
pop
xchg
push
adc
pop
xor
jg
dec
mov
ss
dec
out
push
lods
xor
das
ret
dec
add
in
push
cld
or
dec
inc
xchg
popl
jge
mov
push
stos
or
adc
jmp
dec
mov
fcoml
fdiv
cs
jl
std
mov
and
pop
add
insl
or
fstpt
sbb
aaa
pushf
dec
cmp
add
push
lret
push
dec
mov
mov
pushf
push
rcll
add
loopne
adc
int
incb
mov
mov
push
pop
pop
ret
add
jp
mov
test
subl
lahf
pop
push
jge
xchg
adc
mov
sbb
or
orl
xchg
pop
insb
dec
out
mov
jne
push
mov
add
pop
mov
loop
jno
mov
push
and
loope
jnp
in
sub
popa
lea
fcom
dec
imul
and
jb
sti
dec
mov
arpl
push
loopne
mov
inc
fs
xchg
aas
in
or
dec
cmp
jne
rorb
pop
mov
push
sbb
in
mov
cmc
adc
mov
inc
scas
push
ljmp
pop
push
test
stos
arpl
cmp
dec
rorl
sbb
shrl
inc
cmp
mov
or
pop
hlt
jne
lea
popa
xchg
pop
subl
cmpsb
push
pop
lods
push
popf
dec
and
xchg
lock
sbb
dec
outsl
push
fcoml
addr16
add
into
movsl
lock
test
ja
cli
mov
pusha
push
addr16
loop
dec
mov
push
lds
out
sbbb
inc
repnz
loopne
sbb
mull
cmp
fnstcw
mov
or
inc
jae
cmc
out
in
mov
inc
add
dec
aas
popa
lahf
xchg
adc
shr
repnz
pop
mov
adc
mov
adc
divb
push
je
into
xchg
adc
push
fnsave
test
fsubrl
jmp
pushf
enter
aas
lds
mov
jae
push
mov
pop
fnsave
arpl
icebp
mov
mov
ret
imul
outsl
xchg
push
les
clc
popf
or
in
bound
movsb
scas
cmp
test
jmp
js
push
lea
add
nop
inc
mov
add
sar
popf
pushw
jl
andl
out
xchg
rcrl
icebp
xchg
out
sub
stos
arpl
and
in
out
sbb
arpl
movsl
adc
sub
hlt
pushl
imul
fs
dec
repnz
xchg
xor
ljmp
jb
enter
inc
fs
mov
xchg
movsb
push
addr16
fdivrs
shll
xchg
sbb
fstps
fimuls
lds
xor
cmp
nop
outsl
or
cmpsb
iret
and
and
jmp
shll
outsb
nop
fwait
mov
add
out
fstpl
pushf
femms
jno
mov
mov
push
imul
or
push
ja
into
xor
dec
pop
mov
pop
ret
pop
outsb
sbb
clc
out
xchg
push
add
and
aas
sbb
sub
lahf
sbb
popf
or
xchg
pusha
xor
in
les
lret
jp
sub
cwtl
jg
pusha
xchg
xlat
jecxz
ds
lret
cmpl
jecxz
xor
dec
pop
insb
jp
add
push
mov
stos
psubusb
xchg
daa
mov
sbb
cwtl
test
out
or
sbb
sbb
xchg
pop
cmp
stos
mov
fs
xchg
dec
cwtl
cli
pop
cmp
mov
mov
xchg
pop
loope
js
mov
dec
ret
sbb
push
addr16
arpl
mov
add
dec
dec
fldl
jnp
and
mov
jmp
push
xor
sub
push
pop
mov
inc
inc
cmp
sbb
or
inc
jae
insl
sbb
pop
dec
sti
cmp
cmp
adc
sub
movsl
sub
sbb
fwait
push
cmp
mov
pop
repnz
adc
loop
mov
sub
inc
or
pop
add
xlat
push
into
test
or
lcall
or
push
jae
xchg
ret
xorb
sub
fildl
test
push
bound
cmp
inc
sub
dec
jno
imul
dec
mov
jns
mov
and
call
fimuls
sti
hlt
push
jae
fcomps
add
pop
mov
in
aam
sub
jge
enter
arpl
in
movsb
jecxz
cld
mov
popf
sbb
jmp
adc
cmp
dec
add
jo
xchg
outsb
imul
add
aad
or
loopne
int
loope
daa
pop
imul
fwait
pop
pop
mov
xchg
das
mov
mov
ret
jl
icebp
jnp
push
pop
adc
mov
sbb
dec
add
dec
lret
ja
in
aam
xor
sbb
add
dec
adc
xorl
inc
push
and
int
das
jno
jge
mov
mov
push
stc
add
jl
mov
sbb
adc
mov
sub
jmp
ret
add
jp
pop
adc
jo
ss
loope
hlt
ja
mov
clc
mov
cld
cwtl
js
ja
xor
nop
mov
sub
into
fiaddl
lds
jle
addr16
in
popf
add
mov
leave
stos
and
fbld
dec
stos
imul
decl
imul
pop
outsb
mov
lea
pop
or
jecxz
sti
clc
fisubrs
cli
jp
xchg
cmp
cltd
xchg
mov
or
pusha
cmc
inc
add
testb
andb
push
inc
mov
jne
out
sub
aad
test
jns
lret
jmp
bound
test
mov
xchg
fsub
jnp
jle
xor
stos
popa
loopne
mov
cmp
dec
cmp
cwtl
mov
fwait
xlat
cmp
scas
sub
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
jmp
dec
lds
stc
or
loopne
xchg
loop
inc
aad
adc
push
clc
adc
xor
add
gs
add
lcall
push
fisttpl
mov
pop
push
inc
sahf
shrl
push
arpl
cmc
inc
jnp
ljmp
xchg
xor
push
hlt
push
dec
inc
rclb
cs
iret
pop
mov
mov
adc
neg
pop
pop
xchg
xlat
mov
ret
jne
sub
xchg
test
xchg
jmp
xor
mov
imul
jp
test
fwait
or
pop
xor
xlat
mov
mov
mov
and
addr16
loope
pop
lods
xchg
fwait
cmpsl
add
dec
stos
sbb
and
xchg
adc
rol
add
dec
xchg
push
cmc
add
jp
inc
cltd
push
mov
push
insl
mov
daa
ds
unpckhps
fcomps
push
test
cmp
test
mov
leave
ret
dec
add
int
xor
sbb
shl
sbb
insl
ret
mov
cmp
mov
fwait
cmpsl
inc
mov
push
jno
mov
jl
dec
sbb
mov
pop
xchg
fnstcw
or
icebp
test
test
int3
rclb
movsl
sbb
test
shlb
out
ds
cmp
push
cmpsl
jno
cmc
sbb
clc
sub
hlt
mov
popa
lahf
insb
scas
sbb
pop
add
mov
jb
sub
decb
clc
bound
push
repnz
cmpsb
adc
mov
push
jno
cs
and
xchg
cwtl
test
aam
xor
xor
push
add
int3
insb
daa
loop
dec
add
leave
test
ret
cltd
inc
scas
add
ror
inc
adc
lock
icebp
insb
xor
lret
je
stos
mov
es
or
flds
scas
loopne
or
fidivl
je
cmc
mov
dec
sarl
rcl
mov
movsb
int
add
dec
cmp
pop
test
sbb
rcl
inc
pop
sar
cli
dec
cmp
mov
outsb
sbb
mov
ja
nop
mov
pusha
push
repz
sub
popa
add
rcrl
inc
xlat
jmp
cmpsl
and
in
pop
pushf
pusha
add
push
jno
inc
pop
mov
push
inc
push
aaa
mov
sub
xchg
and
xchg
cld
ret
jmp
stos
repz
push
movsb
xor
xlat
out
add
shlb
xchg
jecxz
adc
push
inc
and
out
jno
cli
scas
or
add
imull
mov
insb
cwtl
adc
lret
cmpl
xor
bound
push
adc
rcl
out
lahf
jae
jns
push
nop
pop
pop
stos
inc
int
cmp
add
pop
push
pusha
fistpl
pop
push
test
leave
cli
push
mov
lret
cmp
adc
or
incb
xor
sub
shl
jg
xchg
ljmp
sahf
adc
shll
and
aaa
add
lret
mov
mov
idiv
sahf
je
in
jg
mov
rcrl
sbb
outsb
iret
mov
lock
xchg
mov
iret
sub
lahf
xor
pop
cmc
scas
and
aad
sub
xor
mov
sbb
xor
mov
fidivrl
inc
dec
mov
rolb
cmp
dec
cmp
sbb
add
mov
aam
pop
subb
mov
fistpl
xchg
pmaxub
movl
insb
les
fstl
push
mov
cld
rorl
xor
cmp
aas
insb
add
inc
out
into
cli
cmp
enter
push
dec
mov
mov
jmp
jmp
jb
sbb
outsb
cmp
jae
mov
xor
call
mov
pushf
push
push
pop
sbb
int
sbb
nop
pop
addr16
test
cmp
xchg
call
mov
pushf
out
adc
xchg
inc
stc
sub
add
add
cmp
ja
push
insl
ljmp
fxch
sbb
mov
out
mov
movsl
ja
ja
jae
ja
jp
fildll
sub
jp
sub
sub
sbb
cld
mov
adc
cmpxchg
cmp
or
or
mov
aas
insl
xor
dec
fsts
int
cmpsl
out
sbb
push
inc
shlb
dec
mov
loopne
xor
add
pop
mov
hlt
push
xlat
ficomps
pop
insb
iret
xor
das
fwait
test
mov
pop
lret
lahf
sbb
push
push
and
push
xor
and
dec
aad
repnz
pop
lea
sub
mov
rdtsc
push
inc
test
aaa
inc
outsb
test
lods
jbe
loopne
and
adc
aam
rcll
fistpll
nop
stc
or
lods
mov
inc
cmp
lods
mov
pop
lock
jo
add
aad
cmpsb
jo
cmp
fidivl
rcrb
subb
stos
lods
stc
xchg
or
mov
push
jmp
dec
xchg
inc
popf
lcall
stos
sbb
hlt
ja
mov
cmpsb
lock
das
inc
dec
loope
dec
scas
sbb
xor
jbe
leave
cmp
jle
cmpxchg
jge
lcall
jo
pushf
cmp
out
jp
xchg
insb
test
adc
pop
ljmp
cmpb
out
pop
mov
orb
and
cli
lret
dec
mov
sbb
gs
xor
rolb
rorb
fptan
sub
inc
inc
xor
and
out
sub
mov
dec
xor
das
iret
mov
push
repnz
sbb
jmp
push
lods
in
lods
sbb
cmp
push
enter
jg
adc
lcall
fistl
sbb
xchg
adc
or
scas
cmp
push
inc
xor
in
xchg
push
sahf
inc
cs
cmpb
paddb
xchg
clc
popa
fisubrs
xchg
sub
ss
cmpb
push
add
mov
or
jbe
cmpsb
mov
cmpsl
sti
fidivl
inc
sbb
adc
push
add
cld
push
add
cmpsl
sbb
jbe
es
sbb
and
adc
adc
push
clc
adc
pushf
or
mov
mov
ret
jg
inc
imul
lret
mov
pop
sbb
sub
cwtl
outsl
lea
cs
stos
fs
dec
dec
or
lcall
mov
shlb
icebp
xor
and
add
ds
sub
cmp
popa
mov
push
addr16
jmp
arpl
jns
push
and
mov
push
sub
into
xchg
xchg
add
dec
jle
mulb
lcall
leave
insb
push
pop
jg
jge
inc
fcoms
xor
push
repz
cs
cld
shll
xor
stc
adc
xchg
out
in
out
mov
in
and
cmp
push
or
jge
imul
ds
inc
filds
cs
scas
mov
ret
mov
out
push
ret
mov
std
adc
xchg
pop
insb
test
loope
imul
test
jae
ja
repz
dec
pusha
shl
push
cld
pop
shrb
push
jp
dec
pxor
add
pop
insl
mov
int
pop
push
push
cmp
cmp
add
mov
into
sub
jno
or
mov
jg
push
cmp
add
int
ret
aaa
jb
leave
jp
int3
add
xchg
pushf
movsl
adc
int
outsb
cld
pop
cmp
sub
add
pop
arpl
mov
mov
push
cmp
mov
shrb
fcoms
shrb
push
pop
decl
add
int3
test
pop
int
mov
xchg
jae
push
dec
push
push
clc
push
cmpsb
and
adc
test
iret
cwtl
add
int3
loope
loopne
cmpsl
xchg
fwait
lret
pop
mov
aad
popa
outsl
or
pop
cmp
mov
jnp
movsl
iret
jge
movsb
cmpsb
mov
movsl
jge
cld
xchg
mov
pop
rclb
icebp
enter
lds
mov
ret
dec
call
outsb
mov
stos
sbb
out
adc
shlb
scas
fcmovu
out
pop
mov
inc
jne
shrb
mov
popf
inc
fwait
popa
fistps
mov
pop
lahf
jp
jl
pop
imulb
xor
xor
dec
test
dec
xchg
faddl
insl
test
fdivs
out
pop
jo
movsb
in
dec
fs
sub
add
imul
xchg
jl
sar
sub
faddl
and
mov
addr16
mov
adcb
and
aad
mov
jg
fnstcw
ficompl
lret
pop
aaa
cwtl
push
adc
pop
push
mov
inc
add
cmp
pop
jecxz
inc
mov
lcall
pop
lret
adc
icebp
call
outsb
int3
rcrb
insl
mov
mov
les
sub
filds
sbb
push
andl
sbb
cmp
add
shrl
in
sahf
fldt
cmp
shrl
inc
data16
popf
or
addl
push
sbbl
add
xlat
xor
adc
into
dec
jb
lds
lret
sbb
lods
adc
std
leave
scas
inc
iret
xchg
fists
rorl
inc
fstpl
push
or
jbe
pop
jmp
pop
dec
int
aaa
ja
sahf
fwait
stos
sahf
push
add
push
sbb
jno
pop
enter
push
add
mov
cmc
sub
sbb
cmp
scas
adc
cmp
imul
je
ret
scas
ja
pop
mov
std
ljmp
test
call
xchg
icebp
sub
cmp
jno
and
mov
xchg
pop
xchg
into
inc
mov
xchg
lret
mov
cmp
iret
in
push
aam
dec
mov
lret
mov
dec
aad
xor
or
shrl
mov
lock
add
or
adc
inc
dec
mov
sbb
inc
pop
sti
mov
mov
or
dec
movsl
int
pop
fwait
shrb
mov
mov
mov
jo
sbb
ds
adc
xchg
shrb
test
shr
sub
jno
sub
cmp
fsubp
pop
or
xchg
inc
addr16
add
popa
fadds
xor
mov
imul
xchg
hlt
adc
cmpsb
dec
in
mov
xchg
fcmovb
notb
mov
mov
leave
fwait
stc
inc
adc
scas
fldcw
insl
add
jle
cmc
pusha
imul
pop
jbe
xor
lea
ja
repz
mov
xchg
cmp
out
cli
cmp
adc
sbb
iret
clc
xlat
pop
xchg
jne
movsl
xor
lds
jmp
mov
and
or
adc
gs
push
sub
or
mull
repz
neg
loop
xchg
ret
stos
cwtl
shll
dec
jns
loopne
mov
js
dec
dec
aam
mov
arpl
movsb
mov
enter
inc
pop
lock
ret
arpl
cwtl
inc
inc
push
add
or
lcall
shr
sub
sub
pop
int
insb
pushf
mov
dec
sbb
shll
mov
gs
jb
xchg
mov
sbb
int
xchg
sbb
enter
lods
or
xlat
sub
fldt
mov
xchg
loope
add
je
mov
jns
dec
cmpsb
cmpsb
out
inc
aaa
outsb
pop
mov
int3
jns
push
mov
sub
push
add
outsb
jle
in
cld
nop
and
mov
and
mov
incl
adc
mov
cmp
ss
bnd
das
inc
xchg
aad
mov
cmp
lea
popa
adc
enter
jg
imul
enter
rclb
lock
push
test
jne
cmp
rcl
pop
mov
push
sbb
and
mov
nop
in
lea
and
cmp
jecxz
arpl
add
or
mov
rolb
sbb
in
jbe
pushf
fmul
or
pop
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
jmp
adc
outsb
mov
mov
inc
mov
push
push
adc
push
clc
adc
or
mov
aaa
imul
in
test
nop
mov
test
sbb
mov
inc
mov
mov
test
outsl
mov
mov
pop
xchg
add
pusha
mov
mov
aam
and
xchg
mov
push
inc
adc
lahf
dec
jnp
outsb
inc
int
jge
sbb
iret
push
mov
lea
repz
sahf
int
inc
imul
jo
xchg
shll
lahf
in
and
sub
mov
rolb
inc
xchg
cli
dec
loope
or
lds
jb,pt
sbb
push
pop
fisttps
ret
sbb
push
push
or
adc
testb
push
cwtl
inc
mov
and
jl
mov
inc
mov
jge
dec
pusha
mov
stos
pop
fdiv
push
outsb
mov
jae
dec
das
cli
xchg
xor
pop
fstp
pop
sub
cmp
mov
inc
pop
loopne
je
add
pop
cmp
sbb
sub
mov
pop
lret
push
pop
or
lret
lods
stos
scas
pusha
inc
fsubs
inc
jns
daa
mov
fstpl
fstpt
loop
gs
ficoml
inc
shrl
add
ja
push
mov
dec
jae
inc
in
and
sti
xchg
lcall
pop
cs
sub
fldl
xchg
mov
xor
push
incl
inc
ror
dec
ljmp
rorl
ja
cmp
sub
outsl
ss
push
ljmp
add
adc
and
in
mov
insb
sarb
data16
jmp
inc
call
cmp
lahf
jl
outsl
call
xchg
data16
andb
and
mov
sbbb
mov
inc
fadd
int
and
pop
std
aaa
int
es
mov
inc
add
dec
inc
dec
int3
push
scas
sub
inc
pop
jmp
mov
mov
scas
sub
xchg
enter
inc
std
test
mov
insb
test
sub
push
mov
inc
sub
paddusb
cmp
sbb
iret
dec
sbb
sub
in
mov
imul
push
in
sub
and
push
mov
out
sbbl
adc
jae
pop
jbe
push
xchg
adc
aaa
rorl
inc
aas
xor
mov
push
mov
push
xchg
in
popa
mov
imul
daa
push
push
repz
rcr
add
lock
ret
and
add
mov
mov
data16
repnz
and
xchg
cmpb
mov
sbb
fisttpll
sbb
fwait
and
push
ffreep
sub
push
jbe
and
inc
cmp
mov
push
idivb
jne
mov
pop
xchg
adc
ljmp
in
push
pop
aam
cmpsb
mov
ret
and
inc
loop
jno
jns
jnp
dec
mov
push
push
pop
mov
stos
idivb
lret
clc
and
imul
and
and
push
dec
jb
inc
mov
cmp
xor
push
aad
mov
out
xchg
out
fbstp
or
jge
pop
xor
xor
testl
or
call
add
mov
hlt
mov
cmp
sub
sub
xor
dec
and
push
rolb
inc
cmp
inc
test
push
sbb
iret
aas
inc
pop
or
jmp
pop
sub
dec
cmpsl
test
mov
les
lret
int3
mov
out
xchg
gs
es
das
sti
cld
xor
jmp
inc
mov
das
in
mov
dec
loope
jno
mov
std
pusha
pop
push
into
mov
add
imulb
rcr
xchg
fcoms
and
sbb
aam
pop
mov
inc
pop
mov
fsubs
dec
les
scas
push
test
in
cmp
adc
int
cmp
loopne
rolb
mov
aaa
xchg
scas
std
jo
add
sbb
xor
sbbl
fistpl
fwait
jle
leave
lcall
lods
sbb
pop
fs
pop
mov
repnz
call
sar
jne
and
pusha
mov
clc
and
arpl
adc
cmp
cmp
push
inc
push
es
and
jbe
cmp
add
test
bound
mov
call
sub
insl
xchg
loop
mov
fmull
popf
sub
pop
fs
fwait
dec
gs
shlb
pop
lahf
jb
aaa
out
sbb
jbe
push
je
aaa
dec
xchg
pushf
inc
add
sub
aas
popa
filds
sub
mov
sbbl
xor
add
sbb
add
adc
cld
dec
jno
push
lods
iret
xchg
into
loopne
movsl
cs
sbb
lods
sub
mov
daa
popf
loop
das
xchg
pop
int
outsb
nop
cltd
cmpsl
xchg
xchg
pusha
mov
and
add
loope
fdivrp
mov
insb
repnz
adc
sahf
push
push
xor
out
fld
pop
jne
push
and
push
out
and
jp
sub
aad
inc
test
xchg
fists
leave
sbb
xchg
test
lahf
xor
mov
clc
add
sub
es
clc
jecxz
roll
cmp
ss
jne
sbb
mov
mov
in
dec
sbb
push
lods
jns
sub
leave
inc
xchg
bound
fistpl
aad
call
into
cltd
mov
or
jo
cs
filds
daa
mov
mov
dec
inc
aaa
or
mov
or
ficompl
cmpsb
in
push
aad
loop
adc
rcrb
cmp
cli
fisttpll
lret
iret
arpl
push
pop
shrl
xlat
push
or
xchg
mov
lahf
popa
jb
aas
lods
push
int
lahf
daa
mov
inc
push
int
mov
pop
dec
mov
pop
add
cmp
sbb
pop
xchg
push
sahf
jae
mov
pusha
movsb
xor
mov
dec
enter
int
cli
mov
mov
sbb
scas
sbb
mov
shll
xchg
mov
sbb
jne
jmp
add
mov
inc
insl
inc
pop
add
jl
xchg
inc
adc
push
clc
adc
ret
add
xor
jae
jbe
mov
fwait
clc
ljmp
loopne
fildll
cmp
or
nop
xor
lret
scas
rcll
test
stos
rcl
into
pop
outsl
ret
ret
dec
add
jbe
popa
shlb
and
orl
cli
pop
and
ret
xor
cltd
cmp
in
ss
adc
pop
pop
stos
cmpsl
lods
dec
mov
xlat
movd
mov
sub
test
mov
lret
aad
mov
xchg
ljmp
scas
adc
gs
fs
xlat
or
xlat
dec
loope
pop
int3
int
mov
mov
inc
fpatan
mov
sbb
dec
cmpsb
int
int3
pop
mov
imul
or
mov
movsb
cmpsb
mov
insl
and
jo
adc
fbstp
push
fmuls
shl
in
sub
jnp
add
dec
lret
inc
add
iret
arpl
cmp
cltd
mov
push
daa
rcll
xor
shl
xbegin
mov
sbb
adc
into
out
mov
faddl
sub
sbb
mov
and
gs
or
sub
loop
mov
sarl
std
cs
jno
push
cmp
dec
les
sub
xor
jecxz
xchg
adc
ret
mov
pusha
push
in
cmp
xchg
dec
lock
mov
inc
mov
les
push
arpl
aaa
js
mov
xor
imul
mov
push
dec
add
daa
add
scas
dec
push
adc
jmp
sub
or
push
xchg
fists
mov
inc
adc
inc
add
cmp
aaa
rcl
cs
es
mov
push
pop
fistps
test
push
stos
mov
fbstp
and
push
mov
cmp
inc
loopne
push
lret
sub
popa
notb
mov
mov
std
mov
dec
push
xor
lods
or
mov
push
in
pop
mov
sbb
pop
xchg
inc
lret
popf
adc
sbb
or
jo
mov
addl
mov
in
insb
insl
mov
popa
jge
nop
dec
test
push
pop
cmp
mov
mov
sahf
mov
mov
test
inc
mov
test
pop
inc
in
mov
jecxz
sub
addr16
cmpsl
sub
stc
lods
and
jb
or
push
push
imulb
cmpsl
in
repz
sub
inc
sub
and
xor
xchg
xor
jbe
and
xchg
pop
fiaddl
mov
xor
jg
hlt
jnp
mov
or
mov
and
les
pop
rolb
adc
cli
daa
push
ljmp
rcrl
cmp
cmp
mov
cmp
sbb
les
push
sub
adc
inc
sub
sub
test
push
je
xchg
jne
test
fidivrs
mov
and
addb
int3
pop
add
dec
mov
inc
pop
lds
subb
mov
mov
mov
adc
lea
push
std
lock
fwait
mov
push
xor
adc
sbb
cmp
dec
pusha
shrb
dec
addr16
adcl
hlt
or
or
rcr
cmpsb
movsl
mov
xchg
fwait
mov
xchg
adc
cmp
int3
rolb
xor
and
jge
inc
cmp
mov
popf
or
lock
jbe
xchg
adc
lds
xor
rcl
mov
jb
cmp
xchg
iret
mov
dec
jae
mov
or
jmp
and
and
cltd
divb
movsl
xorb
or
fistps
out
insb
add
out
ja
add
cld
and
scas
shrl
jns
push
adc
into
scas
scas
cld
clc
adc
cmpsl
jl
cmp
jbe
test
and
xor
cld
bound
addr16
sub
lret
popf
mov
push
pop
scas
outsb
lret
aaa
int
outsl
jl
fnstcw
push
inc
or
and
repz
fisttpl
inc
stos
push
mov
cmp
cli
jae
jecxz
mov
loope
sub
and
or
and
adc
dec
xor
sbb
jnp
lahf
jmp
xlat
inc
cmp
pushf
pop
test
jae
push
pop
lret
dec
cld
push
leave
or
test
mov
xlat
daa
stos
xchg
or
cld
fstp
es
mov
adc
dec
int3
pop
stos
mov
addr16
stos
inc
mov
cli
fsubs
mov
shr
out
mov
js
rcll
mov
pop
idivl
xchg
pusha
pop
sbb
mov
cmp
mov
sbb
push
clc
or
orl
mov
mov
adc
jbe
xchg
and
jne
add
jbe
mov
sub
or
out
dec
imul
sub
fsubl
movsb
and
jbe
sub
jne
mov
add
and
sti
daa
mov
int
jmp
push
jg
adc
inc
insb
mov
mov
xchg
and
hlt
insl
loop
add
je
pop
dec
sete
dec
cli
fwait
mov
sbb
rorl
mov
xor
les
mov
out
mull
fs
mov
ds
in
xor
add
mov
or
loopne
out
rcrl
data16
lods
inc
testl
adc
sub
mov
nop
arpl
movsl
pop
pop
das
jle
addb
es
outsl
and
xor
sub
fisubrl
loopne
dec
xlat
pop
scas
enter
or
lods
mov
inc
pop
clc
loopne
ret
popf
cltd
stc
jns
mov
daa
sbb
fxam
imul
fdivrp
scas
or
inc
mov
ljmp
pop
sbb
jbe
lods
lock
xor
cwtl
jno
sbb
and
push
and
gs
jb
pop
jns
mov
cmp
or
je
or
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
jmp
jae
jmp
dec
movsb
xchg
hlt
cli
mov
adc
push
clc
adc
loop
jns
xor
js
and
lret
mov
es
adc
inc
pop
push
push
pop
pop
jne
ljmp
push
inc
rol
mov
gs
cs
pop
sbb
cmpsb
jno
mov
add
xchg
sbb
jl
add
fs
fldt
movsl
push
aaa
mov
push
xor
xchg
ja
rclb
es
cmp
addl
cmp
pusha
or
xchg
mov
popa
ds
outsl
mov
outsl
sbb
cwtl
pop
jmp
mov
leave
push
or
jbe
dec
daa
or
xchg
negb
aam
ret
sub
test
shrl
or
xor
out
xchg
out
lods
daa
sbb
lods
sbb
rcrl
xchg
pusha
stc
lcall
mov
movsl
call
xor
push
movsb
call
lock
cli
adc
mov
or
inc
push
cmp
xor
nop
je
lea
addr16
stc
movsl
movsb
imul
xchg
in
cld
xchg
fwait
jg
shrb
push
push
dec
mov
push
std
mov
insl
arpl
cmp
js
cld
pusha
push
ljmp
icebp
adc
sub
popf
scas
or
xor
jle
pop
aaa
mov
scas
lds
add
fisubl
repnz
sbbl
xchg
cmp
xchg
lea
inc
inc
push
xchg
push
test
pop
mov
inc
dec
icebp
aam
push
pop
sub
rorl
test
aas
or
dec
enter
inc
mul
sti
push
addr16
push
xchg
stos
lcall
inc
fmull
push
je
sub
jo
mov
sub
sbb
pop
inc
pop
mov
push
cltd
dec
cltd
cmc
inc
push
incb
xor
int
push
mov
dec
movsb
mov
shlb
scas
mov
div
mov
push
enter
mov
push
jno
xor
xchg
pop
out
pop
cmp
stos
mov
fs
negb
push
xchg
subl
push
std
cmpsl
cmp
mov
cwtl
in
enter
popa
pop
imul
mov
lret
imul
or
inc
std
jbe
test
dec
inc
popf
call
pusha
movsb
mov
loope
addr16
cwtl
mov
ljmp
aad
jnp
cld
iret
subl
insb
in
stos
subl
xchg
sbb
mov
jnp
ret
mov
adc
add
and
mov
cmp
jno
gs
cltd
sub
lahf
and
aad
jp
add
ss
loope
repnz
push
insb
xchg
rcll
test
mov
cld
mov
imul
movl
xor
aad
fcompl
pop
outsl
ret
fwait
ret
out
rorl
xor
and
xchg
xor
hlt
nop
loopne
push
in
repz
jo
push
mov
adc
mov
lods
leave
and
cs
ljmp
add
xchg
fucomip
and
and
xchg
rorl
fidivrs
mov
add
mov
mov
jp
mov
jbe
inc
ds
test
push
imul
out
xchg
bound
mov
in
clc
sbb
jecxz
pop
mov
popl
ss
cmp
mov
add
insl
add
and
cs
fscale
cmp
aas
lods
jbe
sti
inc
or
dec
cwtl
mov
and
ljmp
int3
dec
jae
fistpl
add
fdivp
insl
loope
mov
pop
fisttpl
stos
cli
adc
lcall
aad
dec
cmp
repnz
push
push
xchg
data16
cld
in
inc
pop
outsl
dec
test
mov
sti
or
jmp
add
pop
push
ret
pop
imul
into
inc
insb
lea
push
cmc
push
add
push
subl
jmp
jp
clc
lret
iret
pop
xor
jmp
mov
pop
xor
lcall
loopne
jno
out
mov
popa
leave
jg
jb
imulb
clc
fwait
sti
sub
sbbb
test
fwait
cmpsl
jnp
sbb
dec
test
jl
scas
rcrb
dec
push
or
cmpsl
scas
mov
cmp
jnp
push
out
and
jmp
je
jp
inc
add
ja
jno
or
int
mov
mov
push
adc
sbb
notl
rcrl
push
mov
xor
fs
xor
in
dec
add
test
and
cmpps
jmp
stos
mov
xchg
adc
popa
call
stos
jo
js
sbb
std
mov
sbb
sarb
ljmp
push
xchg
mov
push
xor
gs
mov
call
and
test
sahf
jbe
mov
lahf
lahf
call
movsb
repnz
stc
mov
js
sub
xchg
iret
push
adc
fistps
repnz
scas
sub
adc
jnp
mov
rsm
push
jmp
fnsave
lods
lea
pop
mov
sahf
rcll
mov
dec
ret
arpl
hlt
mov
inc
sbb
cmp
cs
add
or
push
mov
add
mov
dec
jmp
mov
cli
sbb
mov
fiaddl
dec
gs
or
mov
pop
in
add
scas
and
jno
jmp
push
xchg
mov
in
mov
fisubs
add
or
xchg
aad
jp
inc
xchg
cmpb
mov
mov
aas
and
xchg
push
or
pop
xchg
lock
push
cli
and
mov
fstl
sbb
jno
pop
pop
into
stc
dec
loopne
cltd
pop
hlt
bound
aaa
dec
cmc
mov
mov
push
test
int3
imul
pop
push
fnstsw
es
mov
push
and
pop
mov
in
daa
lods
and
ss
sbb
xor
or
into
or
out
mov
rcrl
or
lods
enter
add
or
mov
push
add
lods
jmp
nop
cmp
push
add
adc
push
clc
adc
jmp
out
test
dec
cmp
pop
sar
jbe
mov
lock
adc
and
and
insb
xchg
mov
flds
nop
cmp
imul
adc
push
nop
inc
add
filds
imul
idivb
xor
sub
in
stc
pop
mov
pop
movl
test
in
ljmp
stos
gs
adc
pop
clc
jg
sbb
xchg
dec
inc
cltd
sub
mov
fnstenv
addr16
mov
ret
scas
mov
sbb
mov
mov
jne
cs
and
mov
test
push
loopne
aam
push
jle
ret
and
push
xor
cmp
adc
ljmp
test
outsb
pushf
pop
mov
and
xchg
mull
lahf
pop
pop
sti
pushf
les
dec
mov
shlb
inc
insb
cmp
inc
xchg
loope
cmp
and
adc
sarl
stos
and
fwait
sahf
xchg
xchg
xchg
ret
in
mov
hlt
xchg
sahf
fcmovne
incb
mov
ret
lods
inc
sub
mov
mulb
and
into
adcl
insb
aam
push
sub
and
inc
jge
or
negb
in
push
xor
ficoml
and
out
stos
movsl
adc
insl
out
arpl
dec
ret
std
dec
cmp
test
scas
inc
jg
sqrtps
sub
call
add
mov
pop
repz
mov
push
fidivrs
mov
insl
xchg
in
icebp
dec
mov
sarl
js
mov
out
adc
xchg
rcll
jae
test
and
in
movsb
push
inc
jmp
out
ljmp
jl
fs
jnp
push
aad
pop
dec
jp
push
dec
mov
push
test
inc
xchg
pusha
hlt
iret
adc
insl
test
lahf
pop
test
or
or
mov
adc
xlat
push
imul
jmp
push
bound
stos
mov
sbb
cwtl
test
es
pusha
mov
out
xchg
push
jmp
inc
mov
aad
push
movsl
mov
aam
sub
mov
mov
shrb
pop
mov
xchg
mov
in
andb
out
add
lcall
pop
cmp
vmulss
sbb
aaa
jae
push
fimuls
pop
ret
sub
cwtl
movsl
ss
dec
popf
daa
sbb
cmp
orb
sbb
and
mov
mov
int
cmc
outsl
sub
out
shrl
ret
enter
daa
lcall
add
clc
sbb
outsl
lahf
jle
push
sbb
sbb
test
xchg
push
dec
cli
outsb
sbb
div
sub
outsb
mov
lods
jbe
enter
movsb
and
addr16
cli
adc
inc
cli
mov
adcl
iret
mov
jns
shlb
jle
int3
and
add
pop
out
cmp
repnz
mov
and
call
scas
sub
movsl
inc
shll
pushf
pusha
jle
test
mov
and
popa
iret
sbb
or
add
xchg
and
mov
mov
movsb
sub
or
out
push
dec
xchg
testl
mov
dec
test
and
mov
mov
inc
adc
adc
pushl
pop
dec
out
xchg
mov
jle
push
test
fnstsw
add
ret
das
inc
ss
and
cmp
and
xchg
xchg
push
push
fldl
dec
xchg
fsubp
ljmp
imul
mov
cmp
pushf
xchg
ror
lock
cmp
mov
push
lock
mov
aas
xchg
stos
fcompl
inc
jecxz
and
push
gs
mov
and
adc
jl
out
cmpl
mov
ljmp
inc
cltd
cmp
jnp
or
cmpsb
outsl
push
xchg
mov
popf
in
mov
and
pusha
adc
hlt
mov
cmp
stos
orb
mov
push
cmpsl
mov
cmp
xchg
or
lret
cmp
ss
mull
ret
xor
adc
push
adc
inc
xor
sub
movsl
outsb
shlb
lds
dec
mov
fsts
dec
test
loope
cmp
scas
rcr
mov
lods
pop
xchg
push
xor
lahf
push
js
jbe
xchg
or
orl
dec
jno
fidivs
inc
aad
leave
xor
pop
xor
test
xor
scas
pop
sbb
or
lcall
sub
push
or
sub
cs
call
inc
mov
ret
pop
mov
pop
or
push
xor
in
enter
mov
dec
sbb
mov
sub
jnp
roll
ret
mov
push
outsb
push
mov
frstor
xchg
test
sub
ucomiss
xor
int3
jno
ret
push
mov
inc
test
xchg
pop
or
popf
cltd
std
imul
mov
push
lret
mov
cmpsl
inc
xlat
mov
cmpb
loop
clc
push
stos
push
jecxz
in
cld
pop
sbb
cwtl
scas
ficoms
adc
out
jmp
insb
ja
mov
jo
sub
mov
movsl
test
addb
adc
push
or
add
ficompl
add
loop
loope
mov
add
arpl
inc
add
insl
mov
jle
jmp
incb
out
jne
push
mov
mov
push
lods
clc
test
adc
push
pushf
mov
push
cmp
and
sub
fs
lods
xchg
push
jb
arpl
pushl
inc
adc
arpl
pop
dec
inc
xor
push
andl
or
pushf
popf
fwait
hlt
and
adc
or
adc
mov
into
js
sbb
rorb
ret
add
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
jmp
mov
push
pop
or
mov
adc
clc
adc
rcrl
jns
or
and
in
daa
fwait
mov
xor
ss
mov
add
adc
lret
imul
mov
xchg
clc
adc
andl
pop
sub
or
xor
lods
aad
cmp
test
movsb
stc
pop
jge
and
mov
sti
dec
loope
or
inc
xchg
add
movsl
pop
sbb
mov
je
or
or
sub
adc
mov
lods
xor
push
push
mov
icebp
mov
aam
inc
jo
xor
shrl
mov
decb
std
ds
test
in
leave
inc
mov
rcrb
sti
jae
insl
jp
sub
hlt
xchg
mov
outsl
std
push
aam
add
je
bound
mov
jecxz
xor
mov
cmp
sbb
test
push
out
jmp
sbb
inc
inc
sbb
and
mov
fsubl
fldenv
lods
inc
sub
lds
mov
xor
xor
push
addr16
in
jge
ss
test
aaa
sbb
insb
pop
sbb
aaa
cmp
sub
js
push
loop
adc
mov
out
lahf
ja
dec
push
cmp
mov
adc
mov
mov
frstor
fcmovnu
add
jbe
pop
sbb
pop
cmp
out
ret
addl
push
and
movsl
jle
movsl
test
add
sub
neg
ficompl
pushf
pop
fstl
into
fs
fcmovne
xlat
xchg
pop
orb
fistps
mov
outsb
mov
and
sbb
mov
push
add
in
sbb
cmp
das
aas
xor
dec
pop
stos
cmp
faddl
movsb
fisubs
mov
mov
orb
test
pop
push
xchg
inc
or
shll
lahf
dec
sbb
push
cmpsl
mov
pop
cli
cmc
dec
pop
ret
sub
mov
jno
outsb
lret
inc
mov
lret
cltd
inc
sub
cmp
mov
inc
push
pop
xor
dec
repnz
sbb
dec
mov
sub
shll
inc
lahf
cmpsl
mov
pop
es
lahf
imul
jmp
out
imul
jae
outsl
inc
dec
outsl
and
repnz
mov
aam
pop
mov
cld
cmc
sub
pusha
scas
inc
pop
push
in
and
mov
or
add
push
jne
xor
call
mov
jo
ljmp
mov
movsb
nop
mov
mov
lock
sbb
stos
fbld
gs
sub
mov
les
scas
add
adc
jb
xor
shlb
add
sub
inc
dec
push
out
pop
rclb
ret
jns
jmp
sbb
sub
cmpsl
xchg
cmc
xchg
pop
test
and
imul
mov
xchg
loopne
jge
adc
xor
pop
pop
xchg
add
xchg
ljmp
les
add
les
mov
jl
jmp
push
and
xchg
sub
rcrl
jg
and
faddl
sub
jp
sub
insb
cmp
cmp
mov
add
cmc
cmc
lods
sub
inc
xchg
test
inc
rcrb
pop
scas
push
arpl
adc
sub
call
test
inc
filds
mov
stos
ljmp
sub
mov
mov
lahf
add
outsb
loop
int3
xchg
cmc
push
sbb
dec
xchg
push
xchg
inc
stos
lret
in
je
inc
mov
mov
cmp
movsl
xchg
push
ja
add
dec
sub
cmp
sbb
jns
xor
loop
jnp
idivb
mov
pop
fcompl
rcrl
jb
cmp
out
cmpsl
dec
or
scas
lds
mov
mov
mov
ja
stos
lahf
loope
stos
in
sbb
xor
jle
cmp
ja
adc
lret
xor
mov
jns
cmp
sub
ret
les
clc
and
push
orl
sub
sbb
stos
push
mov
cwtl
jae
add
mov
lret
push
adc
adc
popa
jg
cmp
pop
adcl
jg
inc
jg
lods
cmp
pop
aad
inc
pusha
jl
mov
mov
push
cli
imul
repz
and
and
push
add
adc
cmp
cltd
xchg
push
addr16
outsb
xor
mov
add
call
imul
and
stc
sbb
jl
inc
repnz
stc
pusha
testl
inc
call
inc
pop
sbb
sbb
xchg
in
nop
jo
jg
movl
push
inc
sbb
mov
jge
nop
add
rcll
cwtl
xchg
in
sbb
and
pop
or
fisttpll
pop
adc
decb
lods
hlt
or
cmp
pop
mov
ret
mov
dec
ljmp
cld
jle
push
sbb
sub
mov
xor
dec
hlt
jg
sbbb
mov
int
xchg
xlat
mov
mov
repz
leave
add
aam
sbb
dec
mov
out
xchg
and
clc
jae
xor
xor
pusha
andl
push
mov
pushf
insb
movsb
dec
sub
fldcw
int
mov
mov
jns
arpl
xorb
mov
scas
xlat
sti
push
cmp
shr
cmp
jae
jmp
mov
push
inc
dec
pop
pop
sub
nop
fdivl
xor
cwtl
popf
or
push
loop
pop
or
lods
xor
pusha
xchg
jg
sbb
adc
pop
mov
dec
scas
cmpsl
jge
int3
daa
adc
push
test
mov
mov
inc
or
mov
sbb
jmp
push
sub
push
jg
insl
jmp
xor
sub
pop
push
out
push
pop
cmp
and
push
imulb
pop
sbb
push
fistl
mov
add
sbb
int
loop
xor
jo
adc
xlat
inc
mov
adc
or
inc
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
jmp
loopne
rcl
mov
mov
iret
mov
adc
clc
adc
push
leave
enter
adc
fdivl
test
out
push
mov
aad
dec
mov
pop
xlat
push
cli
lahf
fildll
lods
adc
daa
test
add
or
sbb
rcll
cmpl
frstor
les
adc
inc
cmpsb
shrl
adc
daa
aad
xchg
or
or
mov
lret
scas
add
mov
jmp
push
dec
push
mov
std
xchg
mov
adc
mull
pop
xlat
loop
sub
xchg
mov
push
push
cmp
fstp
in
fldl
hlt
xchg
push
test
jb
jl
leave
lret
xlat
test
enter
inc
scas
clc
xchg
out
adc
gs
lcall
imul
jo
mov
test
dec
mov
jne
xor
lods
add
xchg
pop
add
mov
insb
cmpsb
mov
jo
rcr
mov
aas
popf
sub
insl
jns
xor
and
movsl
or
ffree
jb
adcb
push
insl
scas
push
decl
sahf
mov
cmpsl
or
xchg
inc
les
add
and
hlt
bound
repnz
inc
call
stos
mov
dec
lock
pusha
sbb
clc
arpl
hlt
divb
rorl
mov
repz
iret
push
popa
aad
shll
fdivl
pop
cwtl
push
idivb
add
pop
and
sti
xor
out
andl
push
dec
sbb
push
xor
sbb
inc
cltd
fistpll
test
test
mov
push
orb
push
or
and
ljmp
mov
sub
orb
fnsave
mov
push
js
pop
dec
add
pushl
sub
pop
lock
fwait
gs
fucomip
sbb
sahf
stc
mov
add
cmp
es
mov
in
pop
rclb
sbbb
and
and
sub
or
mov
notb
cmp
jp
sub
cmp
xor
lahf
data16
dec
sahf
xlat
push
xchg
cmpsl
push
movsl
mov
mov
pop
stc
pop
mov
inc
stos
jbe
adc
daa
pushf
out
lea
inc
dec
adc
ja
hlt
adc
imul
leave
sbb
xchg
mov
in
dec
jge
test
xor
repz
sub
mov
ffreep
out
shlb
adc
popa
add
xchg
mov
inc
push
popf
sub
mov
mov
test
jb
call
mov
cmp
addr16
stos
mov
clc
push
gs
jmp
xchg
nop
shlb
pop
inc
fadd
xchg
sti
or
jns
pop
js
rorb
or
xchg
shrl
movsl
repnz
packsswb
xchg
cs
jbe
lret
loopne
lcall
jmp
add
out
fidivl
in
cwtl
push
mov
sub
sbb
mov
adc
popf
xchg
daa
test
psrad
and
jg
stc
push
sbb
pop
rcrb
dec
test
inc
repz
jns
or
mov
add
fistl
jae
lcall
popa
lcall
mov
fidivrl
jbe
mov
lea
insb
inc
inc
scas
pop
sbb
mov
das
mov
mov
adc
test
rolb
scas
sahf
sub
hlt
pop
cmp
imul
addb
xchg
clc
jo
lret
sbb
sti
fwait
xor
jb,pt
stos
or
call
movsb
es
cs
mov
loopne
in
mov
adc
dec
in
mov
ljmp
lods
mov
mov
mov
sbb
test
mov
inc
add
mov
inc
and
les
cwtl
or
inc
test
dec
add
xchg
rorl
mov
cs
ret
xor
add
mov
imul
push
aas
out
xlat
outsb
test
add
iret
gs
mov
jp
jno
jecxz
sahf
mov
xchg
and
pop
add
mov
roll
dec
sarl
mov
mov
clc
mov
pop
jbe
xor
in
pop
movsb
push
jp
mov
inc
pause
push
cmp
scas
rcll
push
pusha
insb
or
pop
mov
je
or
inc
lea
jecxz
aas
inc
clc
mov
push
cld
out
or
xchg
mov
jo
adc
icebp
mov
jnp
mov
lea
fwait
add
test
lea
rorl
sub
sbb
ret
or
push
ror
sbb
pop
sub
dec
push
js
lock
sub
inc
insl
fs
or
sbb
ret
inc
insb
mov
adc
test
call
sbb
icebp
fcoms
cmc
adc
or
out
adc
in
mov
dec
arpl
inc
fadd
cmp
lret
xor
mov
mov
push
lret
fcmovnbe
xchg
loopne
jbe
xor
cmp
inc
xor
lcall
lret
icebp
insl
cmp
dec
or
sub
icebp
movsb
test
daa
and
jb
test
pusha
lock
inc
lret
loopne
jecxz
imul
gs
sub
lea
test
mov
sbb
mov
or
rorl
push
pop
outsb
add
push
mov
push
jb
sub
jmp
push
fwait
pop
aad
insb
int3
fadds
xchg
std
in
enter
jmp
pop
test
add
cmc
int
xchg
cs
rol
lods
push
pop
fwait
xchg
ffreep
loop
xchg
xchg
pop
xchg
movsb
mov
repz
icebp
push
ror
iret
dec
adc
sub
adc
loope
or
icebp
sbb
pop
insb
push
push
mov
jnp
and
and
movsb
dec
push
aad
pop
add
mov
sub
add
les
pusha
adc
jbe
inc
jno
cmc
sbb
inc
loope
jg
seta
pop
or
xlat
pop
or
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
xchg
hlt
rol
xor
mov
add
in
adc
clc
adc
insl
xor
or
mov
push
loope
mov
xlat
adc
xchg
rol
xchg
pop
jmp
ret
mov
pop
inc
add
fcmovnbe
pop
mov
out
or
and
adc
dec
lea
and
rcll
or
call
cmp
mov
imul
mov
sbb
sub
mov
inc
sub
ret
jge,pt
dec
mov
test
nop
movsb
mov
pop
sbb
aas
aaa
cltd
andb
ds
mov
sub
call
push
popa
ror
sar
nop
pop
mov
repnz
popf
dec
mov
in
sbb
xchg
ds
xor
js
imul
test
lcall
sbb
xchg
add
test
pushf
sbb
push
push
add
iret
sbb
in
aas
lea
cmpsl
jno
mov
xor
icebp
sub
adcl
inc
sub
cmpsl
loope
das
and
xchg
pop
cltd
jmp
sbbb
jp
mov
rorb
das
das
cmp
xchg
dec
xchg
cmp
ficoms
mov
xchg
fbstp
fmull
lds
mov
scas
sbb
js
mov
dec
pop
jg
aam
call
dec
adc
mov
es
xor
dec
mov
mov
loopne
mov
adc
xor
sbb
dec
inc
jl
lea
or
jl
dec
aas
ss
repnz
test
cmp
dec
seto
mov
pop
jns
movsb
mov
mov
mov
insb
sub
bound
fs
les
insb
or
outsl
lret
lods
inc
adc
nop
inc
mov
in
arpl
mov
adc
pusha
fwait
scas
popl
sbb
push
inc
in
jg
ja
push
add
jecxz
or
mov
xchg
lds
mov
xchg
sar
cmp
and
iret
jmp
call
or
mov
mov
stos
mov
std
cmp
jge
lcall
add
xor
outsl
push
push
sub
mov
inc
data16
and
fcmovnbe
adc
jecxz
loope
call
fwait
popf
xchg
pop
or
mov
lret
test
out
pop
sub
leave
ret
mov
add
stos
fidivs
ljmp
mov
adc
rorl
roll
cmpsb
loop
fcmovb
int
stc
add
fisttpl
test
movsb
mov
cwtl
mov
outsl
sar
mov
mov
sub
pop
aad
hlt
mov
int3
sbb
mov
addr16
lea
xor
in
mov
shlb
inc
out
push
xorb
cmp
cmpsb
rclb
cmp
mov
xchg
in
popa
insl
mov
adc
xor
and
insb
loope
aaa
push
shrb
or
or
cs
jae
addb
or
sbb
pop
and
xchg
pop
dec
sbb
xchg
cmp
xor
jbe
popa
pop
sub
mov
lods
adcb
hlt
loop
or
cwtl
negb
push
xor
dec
mov
out
cmpsl
ljmp
add
push
bound
add
and
jge
test
ja
lahf
sub
mov
pop
dec
dec
pusha
or
jns
dec
push
push
xchg
lods
psubb
xor
fwait
outsl
in
jl
pop
sub
mov
or
js
insb
dec
in
aam
stc
mov
repz
mov
mov
adc
roll
loope
dec
mov
xlat
mov
cmp
loope
imul
sub
adc
sahf
jb
pop
imul
jae
add
in
inc
jle
ret
and
lret
data16
out
fucom
mov
lret
ds
int
inc
xor
roll
repz
aaa
sbb
stos
inc
and
sub
pop
push
aaa
mov
loopne
mov
daa
loop
inc
mov
imul
fldl
dec
adcl
and
mov
nop
mov
mov
xchg
mov
adc
test
pop
mov
in
inc
xor
repnz
imul
and
sub
xlat
mov
ja
mov
insl
dec
pop
sahf
outsl
popl
test
loope
test
lret
scas
sub
rclb
jmp
pop
sbb
mov
pushl
xchg
xor
lock
pop
push
rorl
dec
iret
lock
shll
adc
mov
adc
inc
inc
sbb
xor
inc
and
and
shr
mov
call
aaa
std
and
ret
push
inc
adc
or
lods
xchg
mov
outsl
imul
sbb
es
cld
mov
jge
mov
syscall
lock
mov
add
jno
ja
xor
cmp
iret
test
repnz
xchg
xor
push
jo
adc
addr16
push
lea
mov
mov
mov
and
frstpm(287
loopne
mov
shll
lahf
push
aam
cmp
cmp
daa
insl
insb
push
adc
imull
in
adc
add
dec
imul
rorb
test
or
xorb
xchg
iret
mov
inc
mov
test
xor
lret
push
js
xchg
in
jmp
idivb
xchg
aam
fiaddl
jno
in
xchg
lods
sbb
pop
lock
cmpsl
subb
xor
hlt
mov
xor
test
enter
stos
inc
inc
or
sahf
xchg
or
test
xchg
jb
xchg
test
hlt
cmpsl
enter
or
xorl
mov
adc
sbb
adc
dec
lea
inc
fwait
dec
dec
jp
iret
jae
mov
mov
stos
icebp
leave
push
sahf
js
stos
xchg
jl
into
xchg
shlb
test
jmp
jg
rcl
xchg
in
mov
xchg
rsm
adc
jnp
cmp
fsub
imul
cmp
mov
sub
pop
es
leave
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
jmp
jecxz
fstl
inc
xor
incl
adc
adc
clc
adc
insb
jg
std
mov
cltd
das
add
xchg
jne
jnp
fists
movsl
mov
push
repnz
and
mov
fst
inc
das
or
mov
push
inc
push
pop
dec
scas
pop
ja
xor
sub
icebp
movsb
orl
mov
stos
lret
insb
frndint
test
pop
fsubr
sbb
fsubl
fsub
mov
scas
test
xlat
push
dec
fldcw
xchg
inc
icebp
and
pop
movsl
cld
xchg
test
push
cmp
not
clc
xor
ret
cmp
stc
and
test
int
xchg
outsb
decl
cwtl
sub
test
pusha
push
out
sbb
jno
imul
rcl
std
adc
shrl
shrb
rolb
xor
mov
sbb
cli
rolb
jl
push
sahf
adc
ljmp
shl
cmp
inc
mov
push
inc
sub
push
cs
mov
pop
fiaddl
mov
jl
in
mov
test
inc
mov
std
cmp
sub
jl
mov
in
jo
cmpsb
movb
mov
arpl
jp
mov
cmpsb
outsb
push
jb
bound
loope
cs
sarb
sbb
pop
push
subl
icebp
ds
clc
lahf
push
popw
in
shrl
lahf
jecxz
sbb
xor
cltd
add
sub
push
insb
xchg
adc
pop
and
ja
dec
jp
sbb
ja
pushf
insb
and
leave
mov
xchg
mov
mov
nop
cltd
inc
int3
aam
into
pop
lret
adc
or
sbb
bnd
jne
jp
dec
fstpl
adc
cld
push
int
cmovb
jl
stos
jmp
movsb
adc
jl
adc
jns
jne
dec
add
jo
outsl
mov
or
popf
in
xlat
ss
and
das
sbb
mov
sti
cld
push
sahf
subl
nop
ja
rcll
aaa
aam
mov
jle
sub
xchg
cmp
mov
jb
int3
push
cmp
in
push
or
leave
movsb
pop
adc
pop
jg
rclb
xorb
fstpl
dec
dec
pop
sahf
mov
sbb
jmp
mov
pop
out
sub
mov
mov
insl
out
call
arpl
mov
lock
jne
frstor
adc
rcll
cmp
pop
mov
xor
cmpsl
roll
jp
add
fnstcw
insl
or
cmp
push
lods
cmp
pop
inc
fdivrp
notb
aaa
or
dec
inc
adc
sub
imul
cmp
lahf
mov
mov
aam
sahf
mov
iret
inc
inc
ja
movsb
aaa
cmpsl
sub
push
push
add
cmp
jnp
mov
add
lods
cmp
sub
xchg
and
outsl
notl
aam
dec
sbb
dec
pusha
imul
push
xchg
jo
out
cmpsb
int3
lea
gs
jbe
mov
dec
rcr
xchg
js
lcall
sbb
sbb
nop
popf
data16
in
std
pop
cltd
pop
sub
pop
push
xor
mov
jb
pushf
cmp
dec
adc
xor
or
outsl
ret
xor
jno
arpl
mov
pop
nop
pushf
mov
cmc
jns
push
dec
mov
imul
jbe
subb
aas
scas
jo
outsl
lret
mov
jmp
push
mov
imul
cmp
pop
in
ret
into
inc
cli
lods
pop
insb
mov
cli
push
aas
test
bound
dec
fcmovnu
ds
mov
or
nop
iret
inc
or
add
jp
std
rorl
rcrb
push
mov
jns
xor
stos
stos
dec
rcrb
xor
cmp
les
insl
cs
or
push
clc
fsubl
imul
out
sub
pshufb
fisubrl
into
cltd
dec
sbb
mov
inc
and
sub
push
cmp
enter
fcmovnbe
js
inc
nop
inc
or
dec
pop
das
inc
jae
mov
push
outsb
loope
popa
jp
mov
arpl
adc
dec
fwait
mov
dec
or
adc
int3
push
ds
add
xchg
mov
mov
fisubrl
or
sbb
mov
arpl
mov
test
add
sub
add
sub
xor
ret
mov
scas
popa
push
cmc
sarl
and
in
fistpll
lret
mov
shlb
out
xor
push
out
ret
jmp
dec
cmp
lods
or
xlat
js
push
loopne
test
rolb
push
adc
cld
cli
es
or
cwtl
fidivs
dec
int3
sarb
pop
cmp
adc
pop
arpl
ja
daa
xchg
mov
data16
xor
push
insb
aaa
in
and
imul
xor
jecxz
testb
push
sub
inc
sbb
outsb
int
mov
xchg
add
mov
enter
mov
or
sub
inc
push
orl
inc
pop
and
aas
push
ja
sbb
dec
js
jnp
ds
cmp
mov
xchg
cld
fsin
jbe
sahf
mov
xchg
pop
jbe
lcall
xchg
sbb
xor
jae
in
loope
sbb
dec
mov
xor
hlt
cmpsl
inc
leave
test
vsubpd
sub
in
out
test
mov
cmc
lock
dec
mov
cwtl
mov
push
jle
imul
fidivrl
dec
into
jle
mov
rorl
imul
cmp
dec
int
lods
pushf
sbb
filds
scas
sbb
shll
push
inc
imul
push
jmp
mov
aas
or
out
cmpsl
lea
insb
icebp
call
in
pop
dec
das
cs
nop
cmp
pushf
mulb
jmp
cmp
dec
mov
xchg
popf
pop
cmp
adc
push
loopne
mov
sti
xchg
bound
fnstcw
xchg
insb
cwtl
cwtl
xor
sbb
xor
mov
sub
sbb
aaa
movl
test
mov
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
jmp
pop
mov
push
or
pop
in
ffreep
mov
pop
push
jecxz
adc
clc
adc
repnz
lea
in
xor
mov
xlat
dec
adc
add
mov
push
mov
push
dec
bound
lods
out
push
pop
cmpsb
fisttpl
lods
push
or
rorb
jl
pop
adc
rcrb
ss
jge
dec
shl
xchg
addr16
push
shrl
test
jmp
sub
sti
repz
outsb
xchg
push
push
mov
cltd
bound
mov
jl
es
pop
jg
sbb
xchg
lret
jns
xchg
pusha
xchg
test
cltd
sub
lret
bound
addr16
mov
xor
mov
bound
mov
lods
pop
jnp
inc
imul
mov
cmp
dec
jbe
push
push
xor
cmc
rcr
stos
or
add
or
or
cs
mov
test
loop
mov
test
pop
stos
scas
dec
icebp
fadd
inc
sub
icebp
sbb
popa
jmp
pop
mov
sub
faddl
ret
jecxz
sub
mov
adc
or
hlt
xchg
sahf
ja
xchg
enter
pop
mov
cmp
sarb
xor
jmp
ret
out
add
cmp
mov
arpl
mov
xchg
aad
sarl
test
xor
andl
jo
sub
xchg
jp
jo
inc
push
out
sti
xlat
xlat
sub
addr16
push
bound
lret
dec
shlb
inc
inc
outsl
push
dec
aad
add
and
sahf
jno
push
xor
mov
mov
ljmp
fcomps
and
gs
pop
pop
mov
mov
push
cld
js
sbbl
adc
int3
add
and
decb
hlt
scas
push
sbb
pop
rolb
ret
sub
mov
cmp
inc
cmp
sarl
mov
lcall
imul
imul
fcomp
or
pusha
leave
lock
stos
out
jne
mov
mov
adc
jecxz
pop
insb
adc
test
adc
fs
cwtl
mov
leave
add
insb
ficoms
push
or
lahf
mov
sub
lea
test
pop
aam
adc
rcll
pop
xor
jo
or
add
push
sub
pop
push
shlb
xchg
cmp
mov
cmp
subb
jno
xchg
add
sbb
mov
cmp
out
mov
cli
jb
jg
clc
mov
mov
cmp
pop
or
and
dec
lods
jnp
push
test
popa
out
insb
es
gs
roll
aam
jbe
push
icebp
jae
add
das
lea
xchg
fmull
xchg
sub
rorb
jle
rol
clc
pop
out
daa
sbb
loope
and
stos
push
inc
imul
jb
cmp
add
pop
sbb
add
adc
push
stos
int3
cmp
xchg
icebp
mov
test
loope
push
mov
push
or
cmp
xor
es
xor
lea
sbb
int
mov
ret
dec
js
test
mov
idivb
scas
pop
gs
scas
add
sar
daa
rsqrtps
sarb
bound
xchg
push
pop
dec
pushf
loop
sub
icebp
arpl
cmpsl
icebp
adc
xor
addl
adc
sbb
mov
popa
fwait
mov
data16
xchg
xchg
arpl
cmp
add
jg
addr16
jmp
jns
cmc
adc
jnp
pop
mov
cmp
andl
insb
fst
dec
adc
xchg
insl
scas
pop
shrb
fldl2t
insb
js
movsb
dec
shrb
adc
aaa
cmp
xor
mov
sbb
rcll
aaa
gs
cmc
sub
icebp
add
adc
inc
mov
add
push
sbb
scas
arpl
adc
mov
or
out
add
ret
pop
outsl
frstor
gs
insb
push
or
or
dec
mov
repnz
push
sub
std
cmp
xchg
hlt
clc
shrb
shlb
fs
pop
dec
xor
loopne
lods
push
ss
int
jmp
mov
pop
mov
or
inc
idivl
daa
xor
ds
rolb
sbb
mov
sar
mov
jle
xchg
mov
push
mov
ficompl
jo
cmc
hlt
pop
les
sub
jle
xor
gs
mov
mov
xor
push
push
xchg
jbe
scas
cmp
clc
lahf
mov
mov
mov
sbb
pop
mov
push
clc
mov
ret
les
movsl
test
insb
insb
mov
out
inc
and
jge
mov
jg
cmp
mov
push
repnz
pop
aas
push
push
arpl
jl
es
shrb
bound
cmp
movsl
mov
mov
fstpl
mov
fbld
xor
mov
jae
lea
adc
dec
pop
push
and
out
pop
jmp
xchg
xor
inc
test
cmp
je
push
je
sub
xchg
fucompp
lcall
dec
mov
xchg
test
out
dec
jno
cli
roll
inc
pop
mov
loope
mov
int3
xor
in
imul
pop
gs
push
jle
div
jg
jno
mov
inc
pop
dec
out
add
jae
add
or
mov
jo
mov
fstp
xchg
push
stc
mov
dec
out
ret
pop
cwtl
and
xchg
and
dec
or
jle
mov
mov
bound
mov
mov
outsb
rorl
out
jae,pt
inc
hlt
fildll
in
xchg
xor
fmuls
iret
mov
dec
fwait
sub
test
adc
or
pushf
add
roll
fdivrs
xchg
popa
out
jecxz
inc
jecxz
popa
out
divb
inc
scas
cmp
sahf
in
jmp
iret
xchg
pminub
ljmp
cmc
lret
and
push
sub
add
and
ja
inc
push
lret
fcomp
xor
inc
jnp
in
cmpsl
in
mov
stc
idiv
jecxz
sub
dec
enter
ret
int3
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
xor
mov
push
and
mov
add
inc
xchg
aad
adc
clc
adc
ret
add
icebp
repz
pusha
add
test
out
jb
bound
cmp
ss
push
test
bound
inc
xorl
dec
mov
in
xor
mov
xchg
jmp
inc
jle
fistps
add
adc
bound
aam
lret
or
bnd
aam
and
repnz
push
jge
pop
gs
add
xchg
cwtl
push
mov
out
mov
xor
cli
cmc
mov
mov
pop
pop
in
adc
jae
dec
out
mov
mov
adc
in
popf
or
and
bnd
int
xor
add
popf
call
repz
xchg
inc
outsb
cmp
pop
xchg
jbe
int3
sarb
addl
pushf
test
xchg
cwtl
mov
adc
in
sbb
inc
mov
stc
inc
fucomip
in
js
lret
lret
push
frstor
fidivl
subb
pop
in
cltd
negb
cwtl
pop
inc
pop
stc
xchg
or
adcl
sub
cmp
lods
pmuludq
jb
cmp
or
push
jp
rclb
pop
popa
outsb
sbb
push
xchg
rclb
aas
loopne
mov
mov
push
scas
cmpsl
cmp
mov
jnp
mov
test
dec
sub
xor
push
mov
aas
adc
filds
mov
out
in
in
iret
sub
xor
dec
pop
xor
pop
inc
cmp
stos
mov
xor
or
xchg
test
lods
inc
xchg
test
jmp
scas
inc
or
xchg
cmc
scas
ds
popa
sub
xor
xchg
mov
dec
addr16
and
push
mov
push
fcomps
repz
mov
gs
int
mov
push
sti
rol
aam
jb
stc
insl
push
nop
lret
mov
and
lods
ljmp
jle
jo
push
jo
mov
mov
add
bound
test
cmp
xor
dec
leave
loope
jo
push
dec
fwait
add
jbe
je
xchg
pop
ds
sbb
test
cld
shll
daa
testl
push
mov
inc
jae
mov
hlt
repz
push
js
xor
dec
xor
and
scas
sbb
outsl
jg
mov
fs
repnz
xchg
mov
push
cli
cwtl
rep
push
loop
mov
mov
loopw
push
pop
jp
dec
mov
dec
push
push
cmovl
imul
cltd
idiv
data16
and
xchg
cld
in
add
sbb
rcl
push
movsl
and
pop
jnp
xchg
or
out
adc
mov
pop
scas
in
push
pop
call
orl
mov
rolb
cmc
int
hlt
shrd
mov
sbb
jmp
mov
out
fstpl
push
jecxz
pop
mov
mov
xchg
sbbl
fimuls
outsb
adc
jb
outsl
test
mov
sub
enter
push
jne
add
xor
xchg
stc
fcoml
xchg
fists
push
jb
push
push
inc
push
jns
lcall
mull
daa
mov
xchg
rorb
lods
rcrl
xchg
sbb
xchg
xor
inc
dec
cmp
cmp
push
xlat
stos
lret
xor
sub
push
jl
pop
leave
das
hlt
adc
ret
mov
fldl
mov
jne
push
mov
in
int
add
mov
jl
fnstsw
cli
sahf
popa
sbb
movsb
lock
mov
push
cld
loopne
aaa
sbb
push
lahf
xor
sbb
mov
push
inc
in
bound
rcrb
adc
add
loopne
xchg
shl
sub
mov
mov
push
push
mov
notb
imul
stc
cmc
das
repnz
rorb
push
xchg
int
test
push
push
or
sahf
jp
cmpsl
jmp
xchg
gs
add
xor
aaa
inc
icebp
xor
mov
pop
inc
lret
xchg
fnsave
js
pop
adc
sbb
mov
cmc
xlat
les
xor
lret
or
mov
cmpsl
xor
mov
cmp
mov
jecxz
or
cs
mov
inc
sahf
mov
push
fistpl
sub
and
mov
mov
push
adc
pop
iret
cli
pop
shlb
data16
add
xchg
ds
push
lahf
es
scas
jae
sub
dec
lcall
push
pop
xor
test
mov
add
xchg
jo
outsb
dec
mov
insb
aaa
sahf
scas
int
fcom
jl
xchg
adc
mov
add
jns
into
push
sahf
lea
loop
cmpsb
mov
cs
sti
mov
lds
scas
scas
fists
in
rolb
pop
stos
fcmovnu
cmpl
adc
int
cmp
mov
ss
jbe
pop
add
jbe
jle
jo
mov
pmulhw
lahf
sub
dec
cmp
popf
xor
or
cmp
sahf
scas
sti
xor
out
xor
lea
cld
mov
jle
mov
bound
mov
iret
ja
mov
push
cmp
popa
xlat
aad
fdivrl
push
sub
and
iret
sahf
mov
andb
mov
mov
pop
mov
mov
cmp
xchg
and
test
xchg
bound
push
pop
icebp
adc
test
sarb
ficoms
push
call
mov
mulb
sahf
shll
test
adc
hlt
inc
sub
arpl
jmp
push
jp
push
lds
in
jns
push
ficomps
aas
xor
hlt
xchg
test
pop
sarl
pop
cmp
out
repz
push
inc
sarb
out
cltd
in
mov
jmp
inc
or
mov
movsb
call
addb
test
xchg
es
xor
aad
test
xor
cltd
jno
push
push
jne
fmul
nop
bound
in
icebp
stc
mov
cmp
shrl
arpl
cltd
movsb
or
push
jne
gs
mov
jecxz
rorl
out
sbb
subb
add
push
shl
mov
mov
xor
xor
mov
mov
jmp
popf
scas
add
mov
aaa
shlb
adc
clc
adc
mov
fwait
sti
idiv
mov
std
into
shl
enter
fbld
adc
pop
fisttps
cmp
inc
pushf
push
das
and
ja
mov
sub
shl
or
out
data16
pop
sub
push
rcll
inc
xor
shlb
fwait
insl
sahf
adc
js
pop
mov
std
les
loope
xchg
inc
dec
pop
aam
shlb
mov
add
adc
add
xor
out
inc
jmp
xchg
data16
insb
jne
out
cmp
outsl
add
bound
scas
das
push
and
fwait
mov
mov
mov
sub
fidivrl
fs
mov
sbb
pop
xchg
cmpsl
pop
fistl
stos
push
lea
test
mov
jnp
outsl
jl
rclb
mov
das
pop
cmp
lcall
les
xchg
out
inc
fistps
test
sbb
and
out
fwait
inc
jge
add
lcall
jne
into
insl
nop
inc
shrl
hlt
sbb
jle
sbbl
xchg
lcall
xor
sbb
fdivrs
jmp
mov
mov
imul
jae
jns
xlat
dec
test
hlt
loop
mov
lock
pop
cwtl
pop
sar
nop
mov
out
cmc
inc
imul
adc
rcl
pop
call
jbe
cmp
add
adc
arpl
xor
push
ret
movsb
push
inc
jmp
mov
add
aas
outsl
pop
mov
repz
mov
loope
jo
ljmp
rcll
cs
sbbl
push
mov
mov
icebp
xor
xor
lret
daa
leave
or
xchg
jl
test
stc
jge
dec
sbb
push
mov
cmpb
cltd
sub
jp
sub
les
pop
xchg
inc
jbe
pop
adc
lret
or
xor
mov
fists
xor
adcb
jg
ss
add
enter
inc
test
mov
xchg
clc
xlat
add
inc
mov
push
in
or
pop
sbb
das
imul
adc
cmp
fadds
out
mov
add
or
repz
addb
inc
addr16
insl
das
mov
jb
arpl
dec
std
pop
jne
add
inc
mov
jb
pushf
or
and
inc
shrl
sbb
cmp
cmp
loope
outsb
mov
sbb
jno
aaa
mov
pop
in
dec
mov
pop
cmc
push
xor
sbb
sbb
dec
orb
add
loop
add
shll
push
cmpb
xor
mov
loop
push
aam
lahf
pop
sub
add
jle
cld
lahf
or
add
jp
mov
add
push
lea
xchg
pop
lods
xchg
mov
xchg
into
cltd
daa
mov
or
cmpsb
repnz
jmp
filds
test
test
xor
add
icebp
adc
sub
bound
dec
adc
inc
adc
dec
sahf
stc
cld
add
insl
pop
sub
or
movsl
cmc
nop
ficoms
push
xor
push
sti
inc
lret
xchg
clc
mov
mov
and
lock
sbb
mov
cmp
arpl
aas
pop
popf
jmp
sub
popa
add
test
sbb
in
push
and
mov
in
pushf
jecxz
lods
adc
in
push
incl
test
sub
aaa
mov
ficoms
loope
jl
sub
pop
jecxz
add
lahf
dec
mov
jle
lods
fadds
add
dec
inc
cld
push
stos
pusha
insb
xor
dec
outsl
push
mov
xchg
std
dec
dec
inc
push
imul
add
mov
mov
into
mov
sbbl
out
push
xchg
mov
clc
sbb
lods
xchg
xchg
lock
sbb
fisttps
xchg
sbb
pop
cmpl
pop
mov
ret
adc
jg
aam
xchg
mov
scas
movsb
xchg
out
sar
mov
sub
test
gs
jo
dec
nop
mov
hlt
fs
cwtl
sti
fistpl
js
pop
jge
jl
mov
mov
outsb
ss
sbb
mov
lcall
mov
xchg
mov
and
jns
mov
adc
popa
mov
insl
aad
insl
inc
ja
pop
cmpl
mov
inc
jns
lods
gs
aaa
adc
mov
pop
jb
mov
dec
andb
jnp
int
push
mov
add
push
add
mov
mov
mov
mov
lret
enter
or
test
fcompl
scas
pop
dec
jl
or
repnz
addr16
inc
jecxz
mov
pop
ret
js
fsubs
and
mov
inc
dec
and
add
stos
and
out
movsb
loop
clc
push
push
xor
movsl
testb
add
int3
mov
stos
push
ficoms
loop
jno
gs
push
pop
imul
mov
jbe
sub
fldl
pop
jb
insl
sbb
mov
int3
adc
adc
mov
or
cltd
std
fldl2e
fcmovu
stos
pop
or
jbe
fiaddl
scas
ficompl
repz
lods
aaa
jl
jo
push
mov
in
daa
push
mov
xor
mov
scas
jo
jnp
and
mov
cwtl
push
and
mov
je
xor
mov
into
aad
xrelease
je
enter
lods
xchg
test
push
mov
scas
mov
sbb
jp
and
int3
fildl
xchg
clc
mov
push
xchg
add
sub
fwait
js
dec
test
stos
je
mov
push
jnp
mov
clc
pop
push
or
cmp
pop
mov
add
and
mov
js
adc
addr16
loope
rol
mov
rorb
lods
cli
add
out
add
jge
xor
or
jmp
lea
cwtl
sbb
sbb
iret
shll
test
adc
push
mov
ljmp
dec
inc
pop
out
fidivrl
sarl
jnp
cmc
ss
std
xor
mov
movsb
call
incb
or
add
repz
mov
movsl
mov
mov
andb
pop
jle
insl
pop
mov
loopne
mov
or
cs
call
movl
cmpsb
sbb
shlb
adc
jnp
shll
pop
fldcw
xor
pop
jbe
jo
adc
pop
cli
pusha
mov
sbb
jbe
aad
repz
xor
lret
inc
fnstsw
daa
aad
mov
bound
shl
ret
pop
les
testl
movb
and
jno
vprotd
das
dec
daa
xchg
pop
pop
pop
mov
dec
cmp
repz
fdivl
iret
fs
push
and
sub
lds
aam
jecxz
mov
pop
aad
fisttpl
sub
push
pop
push
adc
push
loope
mov
push
jp
sub
push
cmp
sti
in
rcl
add
sub
jbe
and
out
xor
fists
shl
jg
pop
and
jmp
mov
push
dec
shr
inc
cmp
loop
hlt
sub
dec
sarb
sub
lods
xor
jns
jnp
sbb
cmpsl
xorl
in
push
xchg
addr16
das
leave
dec
xchg
loopne
xchg
inc
imul
cmp
xchg
mov
jns
shlb
test
or
mov
gs
cld
jl
or
mov
pop
inc
mov
loop
test
add
aad
or
dec
mov
shrb
push
xlat
cmpsl
cmp
int3
incb
adc
orps
adc
bound
cmpsl
or
cld
pop
in
pop
lcall
shlb
fcoms
adcb
xor
or
call
repz
pop
or
aam
mov
outsb
dec
lahf
fwait
sti
je
jp
push
or
je
push
mov
adc
adc
and
push
mov
inc
pop
test
mov
cld
mov
je
ffree
mov
lcall
jmp
lret
xchg
push
sahf
sbb
addr16
or
or
cmpsl
add
sbb
xchg
mov
jo
ret
pushl
push
mov
jecxz
negb
in
fistpl
loopne
pop
mov
mov
push
add
fisubs
dec
inc
rcrl
pop
in
push
push
es
ret
bnd
lock
or
inc
or
repz
lcall
push
mov
inc
fiadds
mov
lret
adc
jnp
lret
rorl
addr16
xchg
shll
cmpsl
dec
xchg
push
dec
push
jae
loop
jae
lea
cmp
push
jmp
imul
adc
cmp
enter
push
int3
mov
enter
xchg
jns
push
sbbl
ret
jmp
std
xchg
ds
lds
pop
rclb
stos
lods
mov
dec
mov
mov
insb
mov
in
les
pop
push
xlat
insb
ss
je
push
cmpsb
or
lea
sub
out
int
sub
shll
pop
mov
out
lret
adc
je
inc
cmp
inc
out
js
lahf
sub
dec
sub
bound
xchg
push
adcl
lods
pop
pop
sub
sub
ljmp
lods
jg
shrl
adc
mov
pop
jnp
sbb
stc
cmc
fstl
pop
mov
lods
jge
int
dec
push
xchg
ljmp
and
aam
loope
inc
xor
movsb
push
mov
xor
mov
stc
int
dec
sarl
shl
pop
cmp
cmp
sbb
and
ficoms
es
int
pop
mov
pop
push
or
ja
mov
and
adc
mov
and
std
add
push
sub
stos
hlt
stos
sbb
dec
ret
in
xchg
dec
stos
adc
push
adc
shl
pushl
das
stc
xchg
mov
ror
cli
loop
push
dec
subl
fiaddl
pop
push
sbb
pop
adcl
sub
cmpsl
fistl
in
xor
dec
ret
inc
mov
mov
mov
mov
mov
jne
das
xor
xor
mov
mov
dec
cvttps2pi
das
pop
mov
xchg
xchg
dec
mov
inc
inc
iret
stos
jno
leave
in
or
inc
out
js
dec
xchg
pusha
add
iret
xchg
jne
sahf
push
or
xchg
inc
es
mov
arpl
mov
inc
pop
mov
push
jbe
scas
mov
xchg
jle
mov
push
push
repz
adc
xchg
and
mov
imul
ljmp
sbb
rolb
push
sarl
fisubrl
jg
sti
aad
xor
dec
ljmp
int
sahf
pop
xchg
cli
clc
data16
lods
inc
sub
pop
dec
sub
test
mul
pop
xchg
mov
push
lea
andb
mov
cld
xchg
and
mov
xchg
and
sub
arpl
push
xchg
in
ja
aas
adc
dec
mov
lret
adc
inc
out
fsubrl
inc
das
scas
repz
adc
add
push
outsl
jmp
mov
pop
inc
inc
clc
ja
dec
push
daa
pop
xor
gs
jb
incb
ret
ret
cli
ja
rcll
icebp
or
lret
fstpt
outsl
xchg
mov
out
xlat
in
repz
jp
mov
out
mov
inc
and
mov
push
add
setp
cmp
mov
std
ss
gs
pop
mov
sahf
xchg
in
mov
push
and
dec
dec
leave
push
and
push
shll
je
xchg
xchg
inc
xchg
mov
mov
inc
mov
ds
cmp
pusha
cmp
rcr
rcrl
je
dec
pop
les
mov
pop
cld
mov
cmc
mov
dec
xchg
test
inc
mov
call
mov
sub
pop
std
sbb
mov
jns
push
out
cld
pop
rorl
hlt
mov
mov
mov
mov
xor
shl
xor
jmp
dec
fisubs
dec
dec
push
out
xchg
repz
push
push
adc
clc
adc
xor
add
cmp
push
pop
jl
sub
dec
dec
xchg
xchg
add
push
stc
push
std
mov
mov
mov
jp
call
movsl
out
insl
adc
and
cld
adc
or
dec
rorl
and
xor
arpl
mov
xlat
scas
pop
test
dec
xchg
jge
into
fwait
pop
fsub
cltd
je
jp
pop
je
mov
daa
fisubl
shrb
test
mov
or
punpckhbw
mov
push
rcl
fdivrl
data16
xchg
xor
or
pusha
mov
enter
fimuls
push
add
pop
xor
sub
inc
lea
jae
out
or
inc
lcall
jne
add
lods
pop
and
sbb
sbb
dec
mov
jb
arpl
mov
cmpsb
mov
lcall
call
pop
lods
das
or
and
inc
pop
xchg
xlat
aas
in
dec
or
cmp
push
xor
jecxz
push
cs
push
and
out
xor
cmc
inc
xor
cltd
or
or
scas
into
mov
jp
test
jno
lret
outsl
pop
popf
and
sbb
jecxz
aad
pop
mov
or
arpl
sub
clc
jo
lods
inc
xchg
cwtl
adc
adc
mov
pop
subb
lret
sahf
push
cli
lret
fstpt
cmp
mov
jp
sbb
pop
jg
xor
or
xchg
push
inc
xchg
add
testb
xchg
sub
imul
pusha
fs
sub
xchg
mov
leave
sbb
pop
leave
push
fnstsw
xorl
xor
xchg
pop
outsb
daa
pop
adc
rcrl
push
mov
dec
in
mov
cmpsb
mov
xchg
dec
xchg
andb
mov
push
pop
shlb
scas
adc
fnsave
lods
inc
pop
inc
jns
inc
rcrb
addb
test
xor
dec
aad
mov
mov
movsl
push
ret
ds
and
pushf
dec
sbb
jnp
sub
jbe
xchg
mov
sbb
dec
adcb
mov
jne
jae
insl
mov
pop
lahf
dec
mov
cs
ret
out
adc
mov
push
mov
leave
or
mov
mov
pop
in
cli
mov
xchg
xor
icebp
jl
mov
test
int
xor
mov
out
jp
pop
push
inc
lods
push
xor
icebp
adc
xor
adc
ret
test
inc
ss
jl
mov
and
neg
or
lods
sbb
and
or
adc
ret
inc
outsl
xlat
jo
push
xchg
fldl
xacquire
or
or
add
leave
test
inc
or
sub
mov
mov
and
adc
aas
xchg
ret
adc
and
test
pop
sahf
sbb
and
cmpsl
jmp
mov
mov
repnz
mov
inc
cmp
ss
stc
mov
jb
cltd
mov
and
shrb
test
rol
mov
clc
shrb
imul
dec
pusha
lods
fwait
pushf
push
out
push
xchg
fildll
clc
xor
lret
cmpsb
push
insb
enter
pop
sarb
jo
sti
push
xchg
fmuls
and
das
pop
loope
sbbb
shl
jecxz
add
ja
push
in
das
lret
sub
inc
dec
push
repnz
pop
imul
xor
insl
clc
mov
xchg
ds
out
jge
sar
lea
jp
imul
xlat
pop
arpl
rorb
in
push
fildll
jmp
sbb
mov
gs
pop
mov
push
push
xor
sbb
jle
iret
mov
mov
into
int
notl
sub
push
jno
xlat
in
addl
dec
push
xchg
cs
addb
lds
jmp
pop
outsl
out
push
in
out
out
mov
in
xor
mov
shrb
in
enter
xchg
or
lahf
sub
ja
xor
in
and
shrl
xlat
orb
add
stos
lods
jge
or
pop
and
inc
leave
inc
mov
mov
xchg
ljmp
icebp
pop
mov
mov
mov
push
pop
inc
mov
jge
mov
clc
fcoml
rol
inc
aaa
subb
xor
in
into
pusha
adc
cmovno
lret
mov
cli
out
sbb
leave
cmp
and
add
and
jb
xor
rcl
push
mov
in
push
fcoml
mov
sti
hlt
sbb
push
dec
hlt
addr16
addr16
push
inc
xchg
loopne
mov
adc
cli
insb
inc
aaa
cld
lret
pop
test
imul
inc
repnz
rolb
jl
std
lahf
arpl
stos
mov
cmp
movsb
in
sub
mov
aas
pop
test
xor
mulb
jno
jmp
aad
fidivrs
xchg
xor
xchg
out
push
pop
rorb
shll
divl
and
call
jno
mov
cmpsb
hlt
sub
pop
shrb
subl
iret
pop
or
adc
or
lret
jecxz
inc
sbb
jp
inc
shl
dec
xor
dec
pop
ret
xchg
pushf
test
jno
lods
mov
jmp
fbstp
push
aam
out
sub
dec
or
mov
jle
and
push
cmpsl
sbb
iretw
inc
int3
stc
nop
nop
sbb
fadds
lods
insl
cld
loopne
add
out
sti
dec
push
push
push
mov
mov
out
lods
push
rolb
subl
or
pop
cmp
pop
jns
insl
je
mov
mov
fistpll
adc
and
inc
and
loope
pop
mov
test
cmp
mov
imul
xlat
test
jbe
adc
stc
shlb
fdivl
imul
mov
jl
cmpsl
shlb
xchg
sbb
adc
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
jmp
cmp
sub
jae
add
sti
pop
xchg
lea
adc
clc
adc
ret
sub
pop
rol
mov
sub
lods
push
popf
fnstcw
inc
imul
xchg
aas
pop
push
mov
gs
addr16
push
arpl
out
movsl
or
out
outsl
or
cmp
es
add
add
dec
js
pop
xchg
sbb
sub
in
je
es
movsl
mov
call
jmp
mov
ja
lods
xor
popf
xor
lret
into
sub
loope
push
stos
mov
and
test
sbb
or
adc
cmp
inc
xchg
fnstenv
iret
adc
stos
pop
mov
data16
out
and
pusha
or
mov
jle
sbb
dec
sub
xor
lcall
loope
dec
sub
push
or
pop
adcl
ret
shll
je
jbe
and
loopne
inc
mov
push
ss
xchg
das
out
rcr
leave
add
mov
mov
hlt
xchg
filds
sub
fnstsw
cmp
sbb
cmp
jg
out
push
pop
mov
movsb
jmp
sub
mov
mov
push
mov
and
fnsetpm(287
sbb
mov
nop
inc
or
aad
xchg
icebp
fldl
push
js
loope
rcl
test
mov
and
adc
mov
push
sbb
fdivrl
fsubp
ret
xor
mov
xchg
pop
push
sar
outsb
sbb
pop
mov
rorl
mov
imul
mov
mov
fs
cmp
inc
jmp
hlt
push
jnp
outsb
or
popf
stc
es
inc
call
cmp
pop
cmp
fiadds
dec
dec
popa
mov
lcall
int
daa
pop
sub
pusha
cmp
in
icebp
inc
cmp
inc
js
testb
mov
jns
mov
xchg
lods
add
sbb
and
test
dec
xor
lret
mov
xorl
cmp
pop
jecxz
fcoms
or
push
outsl
repnz
cmpsl
dec
push
jge
int
lock
std
mov
leave
lods
movsb
call
test
fs
rolb
outsb
xchg
and
ds
xor
cmp
scas
popa
fstl
data16
mov
pusha
mov
test
pop
push
out
je
mov
or
sub
sub
dec
jns
sub
insl
mov
mov
test
mov
je
fchs
sub
mov
inc
mov
adc
enter
repz
aaa
push
aaa
lock
mov
addl
mov
inc
loope
push
pushf
jge
or
js
outsb
sub
cltd
and
fwait
pop
sti
popf
dec
xchg
js
pusha
sbb
sarb
in
and
outsl
push
cmp
mov
test
into
xor
loope
mov
imul
arpl
out
int3
cmp
push
pusha
or
push
les
loop
fwait
ljmp
out
jmp
or
sbb
jb
ficoms
push
aaa
push
jno
jecxz
push
lods
fmulp
rolb
xchg
xorb
cmp
fcomps
rorb
rorb
add
push
mov
mov
in
sub
xor
inc
out
pop
xchg
popf
hlt
fbstp
mov
mov
ret
cmp
aam
push
mov
test
xchg
adc
int
arpl
push
push
jns
xor
mov
aad
rcr
xchg
fcomp
inc
test
xor
inc
or
cmp
or
movl
mov
cmc
add
mov
sbb
test
xchg
pop
in
fs
mov
xchg
ss
xchg
push
fadds
fiaddl
pusha
jmp
pushf
xchg
lea
or
xorb
add
push
cli
aad
lret
inc
jge
ss
jmp
mov
pop
loopne
mov
mov
cmp
fisubrs
not
xchg
fistl
jns
rcl
mov
ficoml
mov
das
pop
jae
in
or
sub
loope
xchg
fnstsw
fisttpll
xor
push
cltd
mov
xorb
or
scas
sbb
iret
adcb
mov
pop
cmp
popa
jnp
addr16
in
fcoml
lock
pusha
inc
aas
rcl
jg
xchg
push
mov
dec
push
mov
xor
andl
push
rol
adc
mov
and
or
adc
jl
cmp
adc
lahf
insl
je
lods
add
jle
sub
and
xor
repz
stc
xor
addr16
and
ret
sbb
insb
cmp
clc
xchg
or
movsb
add
je
jb
pop
in
add
movsb
pop
aam
fdivrl
xchg
or
add
add
jne
mov
add
idivl
out
out
test
mov
or
pop
pop
iret
loope
repz
ret
jno
add
xor
add
addb
aad
xor
into
push
cmp
ret
mov
dec
add
repnz
dec
jno
or
push
mov
adc
xor
lahf
add
xlat
adc
xchg
pop
movsl
pusha
es
in
dec
xchg
mov
jo
popl
mov
fsubl
inc
jl
scas
stos
gs
lcall
xor
pop
pop
test
xchg
pop
pop
aaa
adc
aad
les
adc
xor
movsl
pop
xlat
jno
sub
jge
or
clc
filds
sub
aas
cmpsl
imul
dec
jae
shlb
mov
adc
mov
adc
add
mov
xorb
shr
sbb
std
fsubrl
mov
movsb
iret
shlb
mov
and
fldl
pop
fists
shrl
cmpsl
mov
xor
iret
lret
pop
jo
xor
mov
mov
push
cld
cmp
mov
mov
inc
les
das
shr
push
dec
cmp
out
roll
xor
movsb
pop
sub
scas
mov
pop
mov
enter
insb
sub
xchg
out
jnp
popa
mov
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
jmp
jmp
or
aam
mov
xor
push
clc
adc
push
add
push
dec
sbb
sbb
cltd
and
inc
rcr
add
lods
sbb
test
in
sub
insl
ss
rcr
ljmp
nop
call
adc
stc
gs
aaa
mov
loop
inc
jmp
or
cmp
jnp
dec
popa
add
and
aam
push
aas
ret
xchg
xchg
insl
jb
or
xor
jg
in
pop
es
jnp
mov
cmc
addl
or
fistl
cmc
cld
jg
leave
and
add
mov
sbb
out
mov
push
cmpsb
adc
dec
dec
dec
sbb
sub
lods
mov
jmp
inc
outsl
push
pop
push
movsl
mov
push
outsb
push
sbb
mov
cmp
or
add
into
imul
fsubrs
sbb
fwait
test
and
or
in
out
test
jecxz
pop
loope
ja
pop
subb
andl
pusha
sti
lahf
mov
cld
in
mov
ds
mov
mov
stos
pop
outsl
mov
daa
jecxz
insb
repz
inc
cmpsb
addl
lcall
ret
aad
int
mov
sarl
faddl
pop
lcall
insb
dec
daa
movsl
sub
jl
xor
pop
into
dec
out
lock
cmpb
outsb
cltd
and
popf
jo
lods
cmp
fiaddl
adc
xchg
lock
push
lahf
xchg
daa
push
jno
in
inc
cmp
dec
sbbb
popa
add
push
inc
or
loope
fisubs
gs
imul
inc
std
std
cli
jnp
lcall
aad
xor
mov
cltd
rcr
jb
jbe
outsl
sbb
stos
je
dec
lcall
in
inc
push
cmp
cmp
sbb
ss
call
jnp
cmp
or
pop
scas
sub
adcb
incb
xlat
push
xchg
mov
scas
and
lds
pop
push
jecxz
sub
pop
inc
int
test
mov
and
call
sub
pop
fs
cmc
lret
ss
ljmp
and
mov
repnz
fdivrl
arpl
into
push
push
fisttpll
push
dec
in
xchg
mov
xor
pusha
and
push
popa
test
ja
push
push
les
jmp
fs
roll
dec
push
pop
xorb
lods
xor
push
lahf
test
fwait
xlat
sbb
dec
cli
leave
in
imul
push
jl
cltd
cld
mov
es
pop
ret
and
insl
mov
cli
mov
test
jo
jp
sbb
add
and
lret
in
cmp
push
pop
and
movsl
imul
xor
dec
repnz
xor
mov
fst
jo
imul
push
je
xor
inc
inc
sub
test
xchg
push
sarl
data16
gs
scas
roll
and
jle
sbb
push
adc
cmp
int
cmpsl
mov
gs
cmp
dec
push
and
sub
sti
and
into
scas
lahf
or
or
push
mov
mov
cmp
fcomps
cmp
decl
roll
mov
sbb
add
jb
sbb
pop
push
inc
mov
ss
cmp
jo
xor
ja
nop
es
inc
fwait
mov
test
call
stos
pop
ljmp
and
cmp
aam
jg
pop
lret
dec
xor
cmpsb
push
sarb
add
aas
aas
cmpsl
std
fisubs
lcall
sub
mov
out
testb
mov
mov
lea
cs
cmpsb
inc
aaa
xor
inc
mov
mov
and
lret
cmc
jle
pop
mov
lret
push
push
movsl
jle
in
mov
rcrb
outsb
pop
push
ret
add
clc
sbb
movsl
push
leave
notb
mov
dec
mov
cmp
mov
xchg
jns
sbb
push
les
xchg
movsl
mov
push
push
movsb
out
hlt
jg
sbb
mov
adc
inc
nop
sbb
xchg
jle
lret
push
mov
rclb
add
int3
les
mov
fwait
mov
xchg
imul
shrl
mov
mov
movsb
movsb
lods
enter
dec
lods
jns
mov
test
outsl
push
xchg
adc
sahf
xlat
incb
fdivr
mov
mov
ret
add
add
push
insl
fnstenv
jne
push
jl
movsl
lds
js
push
dec
or
ja
mov
pusha
test
mov
mov
insb
mov
mov
push
mov
push
sub
aam
arpl
and
inc
jb
xlat
fistpl
aam
movsb
pop
addl
inc
rol
repz
arpl
xchg
test
arpl
jne
hlt
cs
push
inc
lea
jns
inc
jmp
jp
push
and
push
pop
in
mov
mov
shll
dec
sbb
mov
pusha
sub
popa
push
divb
adc
ds
pop
or
aam
jp
and
jb
lret
pop
xchg
dec
ret
add
push
mov
jmp
into
out
cmpsb
mov
cmp
or
mov
lcall
push
fidivrs
mov
jp
xchg
xor
icebp
mov
mov
ss
pop
cs
and
daa
lret
cmpsb
or
cmp
mov
shll
fisttpl
xchg
jle
add
push
mov
mul
push
cld
dec
movl
xchg
jge
dec
pop
sahf
xor
pushf
pop
dec
cmp
cmp
cs
push
mov
add
aad
in
sbb
fstpt
sub
push
cmp
popf
and
jl
mov
ss
mov
xchg
sti
inc
adc
popl
imul
xchg
inc
sbb
cmc
sub
mov
add
add
sbb
sbb
rcr
insb
pop
xor
mov
cltd
stos
mov
cmp
mov
push
add
or
in
enter
imul
pop
adc
adc
clc
adc
imul
cwtl
repz
mov
pushaw
imul
lock
adc
test
push
add
shrl
mov
push
mov
pcmpgtb
adc
push
adc
subb
xchg
das
push
cmp
mov
out
clc
sub
shll
mov
movsl
mov
push
jp
loope
int3
pop
bound
pop
add
jne
iret
loopne
int
mov
pop
xchg
mov
cld
sub
stos
mov
imul
xor
mov
pop
mov
push
ret
insb
inc
dec
loope
loope
add
outsl
jne
into
adc
mov
sbb
pop
out
aaa
in
test
push
repnz
aas
and
pop
icebp
adc
imul
mov
xorb
cwtl
addb
xlat
sub
mov
jg
push
mov
push
add
insb
mov
and
les
and
mov
inc
add
shl
sbb
hlt
or
push
notb
insl
addr16
pop
movsb
mov
cwtl
push
lahf
add
out
adc
stos
loop
lret
jb
jmp
dec
outsb
xchg
fnstenv
jae
ret
stos
pop
loope
in
jo
test
add
insl
mov
les
adc
repnz
dec
push
je
ja
push
push
dec
cltd
stos
mov
repnz
xchg
rcrb
xchg
fistl
ja
aas
mov
in
mov
xchg
nop
add
cmp
out
mov
insb
pop
push
test
add
leave
in
out
pop
mov
scas
sbb
negb
je
adc
out
jmp
xor
add
into
add
adc
cmc
lret
push
mov
loop
in
pop
ror
push
add
iret
hlt
test
stos
sbb
cmc
out
daa
jle
mov
and
ds
or
in
mov
cmp
push
inc
js
inc
pop
or
pop
mov
mov
out
inc
fcoml
aas
leave
sbb
out
inc
ficoms
mov
xor
jmp
fs
jmp
sub
bound
jno
jbe
pop
jns
sub
mov
mov
jmp
push
mov
shlb
lret
mov
push
cmp
add
repz
testl
jnp
xor
dec
or
shrl
push
aam
push
xor
xor
aad
lcall
shrb
loop
mov
jns
inc
mov
jo
popf
sbb
jnp
mov
inc
dec
adc
jb
inc
mov
fistl
ds
jne
jl
aas
mov
roll
jno
in
out
add
bound
loope
pop
sbb
icebp
xor
sub
sbb
je
mov
mov
in
addb
push
jle
repnz
mov
fdivs
inc
inc
mov
js
testb
jge
cwtl
push
aas
ds
daa
mov
cmp
inc
sub
add
adc
subb
cmp
jne
cli
scas
add
and
adc
and
mov
add
push
scas
ficoms
lds
dec
xchg
cltd
dec
insl
sub
dec
imul
outsb
xchg
pop
repnz
add
sbb
lret
jns
xor
mov
ret
lret
ljmp
and
int
cld
xchg
test
data16
xor
jnp
sbb
cmp
sbb
push
mov
and
mov
lret
add
cmc
cmpsl
mov
dec
outsl
and
scas
push
leave
shll
repz
sahf
jb
imul
xor
xor
out
push
repz
or
hlt
or
rcrl
lret
cmp
test
out
lds
aas
cmp
call
loop
add
shlb
sub
mov
lods
stos
mov
pop
mull
aaa
lcall
dec
mov
cs
loope
xor
dec
mov
push
or
bound
mov
adc
sarb
stc
pop
inc
jl
inc
aad
ret
addr16
or
mov
mov
xor
and
adc
jp
add
xchg
sbb
and
hlt
jae
mov
pop
sbb
jl
pop
xchg
insl
loopne
mov
inc
mov
imul
push
xchg
clc
daa
push
xchg
pop
xchg
pop
loope
aaa
shll
mov
pop
pop
jns
test
pop
out
movsl
jl
jbe
inc
and
pop
pop
fs
dec
sarl
sbb
xchg
sub
sub
mov
leave
hlt
lret
jb
daa
push
dec
and
dec
push
push
das
xorl
pusha
jae
call
sub
dec
fcmovu
and
addl
sbb
stc
aaa
xchg
psubd
or
and
push
xor
xchg
in
and
sbb
push
pusha
stos
aas
add
push
sub
xor
clc
jp
fnstsw
daa
cmpb
arpl
or
subl
and
lods
jecxz
xchg
scas
lds
xchg
sub
xor
fsubr
jno
mov
js
inc
or
push
push
sub
jmp
pextrw
mov
pop
xor
aad
mov
mov
jg
push
fstps
jne
ljmp
adc
pop
shll
fwait
push
std
das
sbb
xchg
push
pop
mov
outsb
xchg
and
jg
sub
test
mov
mov
sbb
sbb
sbb
arpl
icebp
mov
sahf
pop
adcb
sahf
mov
mov
dec
cmp
cmc
mov
inc
cmp
ljmp
push
iret
out
inc
lret
ljmp
cmp
pop
mov
addr16
jp
pop
add
es
jmp
add
adc
pop
mov
pusha
decl
and
xor
push
out
pusha
pop
fstps
xor
mov
jbe
pop
sbb
outsb
enter
popa
add
jmp
in
cmc
dec
stos
dec
sub
add
fists
adc
clc
adc
insb
mov
dec
xlat
adc
push
and
out
bound
mov
push
les
in
xchg
clc
xor
mov
mov
dec
dec
add
fisubl
push
test
and
test
ja
add
cmp
and
xchg
or
cmp
loope
jnp
js
sub
mov
and
loop
repz
fstl
jo
mov
ljmp
dec
adc
lods
inc
out
xor
in
jmp
pushf
xlat
mov
aam
std
pop
mov
mov
in
sbb
scas
adc
shll
out
jmp
add
std
jecxz
or
ret
push
gs
ja
push
movsl
adc
in
and
loopne
clc
sub
add
seta
sbb
addr16
cmpsl
pop
pop
sar
mov
pop
xchg
fsts
fisubl
orl
push
int3
adc
test
mov
sub
mov
xchg
out
push
clc
sub
xlat
dec
dec
cmp
push
test
bound
add
jl
addr16
push
repz
leave
add
daa
mov
aad
push
xor
sbb
outsl
outsl
je
push
out
adc
stc
fucom
aaa
lods
or
jmp
ljmp
adc
pop
test
out
out
fisttpll
dec
lea
sbb
pop
pop
xor
out
cltd
ja
cmp
out
xlat
adc
jns
pop
inc
stc
lock
jbe
xor
jecxz
lahf
dec
jno
dec
mov
jmp
pop
dec
popf
mov
dec
mov
sub
mov
and
xor
arpl
shl
push
mov
fst
outsb
xor
cmp
je
jae
xor
xor
xlat
add
pop
sbb
push
mov
mov
add
fs
mov
dec
scas
pop
call
sbb
sarl
pop
mov
xor
in
and
jecxz
rorb
mov
or
cld
adc
adc
push
int3
mov
data16
fs
inc
popa
xchg
test
mov
and
inc
in
push
mov
lea
add
jp
insb
pop
push
movsb
pusha
enter
imul
cli
mov
mov
pop
push
pop
sbb
fisttpl
scas
into
push
cmp
mov
pusha
mov
dec
aas
sar
cmp
sub
std
push
add
loope
in
loopne
pop
adc
pop
jecxz
xchg
jmp
add
cli
jae
sub
std
je
xchg
push
pop
pop
les
shrl
jg
mov
in
cmc
mov
push
sub
les
mov
cli
scas
scas
pop
sub
bound
cmp
scas
and
test
push
cmpsl
fwait
ds
xchg
mov
xchg
add
inc
test
xchg
cs
adc
adc
fucomip
std
aad
dec
or
jg
jecxz
call
jle
push
sub
push
fisttpl
mov
xchg
xor
das
fimuls
fcomps
fsubl
in
sub
dec
dec
into
inc
incl
pop
sub
sahf
xchg
sbb
vpshuflw
mov
adc
in
jb
cld
call
iret
ja
cmp
mov
mov
nop
cmp
sub
push
in
stos
out
fnstenv
ja
movsb
jecxz
adc
mov
mov
bound
xchg
enter
test
test
fbld
fsubs
mov
push
xchg
push
sub
adc
adc
addb
jns
scas
adc
add
pop
inc
mov
lea
adc
les
sbb
pop
xchg
lock
cwtl
or
fwait
divb
push
mov
stc
aam
push
xchg
icebp
addr16
inc
push
sbb
cmpsb
ja
loope
add
add
pop
outsl
pop
mov
push
cld
lahf
mov
icebp
mov
and
pop
cs
cmc
scas
ds
in
mov
mov
dec
mov
loopne
pop
jp
or
or
pop
sub
cli
dec
pop
pop
sbb
mov
mov
sarb
or
sbb
loop
into
pop
aam
lea
into
push
sarl
pop
pop
xchg
cwtl
add
mov
lods
dec
out
lret
test
inc
dec
mov
enter
loopne
stc
int
pop
cmc
les
mov
cltd
or
sahf
imul
out
in
dec
insb
mov
add
jns
mov
popa
std
repz
in
cmp
sti
jns
rclb
scas
es
push
cmp
icebp
sbb
pushf
imul
or
mov
cli
fwait
outsl
ljmp
iret
cmpsb
lret
pop
leave
mov
enter
bound
mov
scas
popf
pop
cmp
push
adc
or
dec
jmp
popf
inc
imul
inc
and
or
std
jecxz
test
fisubl
sbb
lahf
inc
mov
hlt
add
mov
mov
sub
add
pop
lds
cmp
and
jl
js
push
sub
jb
jo
int3
mov
inc
cmp
repz
mov
adc
xor
jl
cmp
stos
push
ja
repnz
inc
cwtl
and
sub
push
jp
xor
mov
fcmovnb
aam
pop
fwait
pushf
pusha
mov
fwait
fwait
jge
xor
push
mov
int3
arpl
jne
arpl
ljmp
sahf
inc
in
dec
and
dec
out
jno
test
in
dec
scas
xchg
mov
rclb
jns
adc
fldcw
aas
and
mov
jmp
sbbl
add
aad
push
addr16
mov
xlat
fildl
jg
idivl
jp
into
push
std
mov
jnp
lret
adc
jb
xchg
pop
inc
aad
mov
or
dec
pop
jmp
mov
aaa
icebp
or
jl
inc
sub
outsl
push
shrb
jo
or
loope
ret
inc
icebp
add
cmp
cld
push
fidivrl
push
and
xor
mov
and
cmp
pop
dec
fwait
mov
fcmovbe
stc
pop
add
and
inc
je
arpl
mov
mov
shrd
jmp
sbbb
pop
mov
pusha
push
push
out
cmp
aaa
rcr
fists
adc
mov
stc
sub
dec
lcall
push
or
or
add
jmp
or
adc
mov
test
mov
mov
cmc
mov
repnz
xlat
popf
fidivs
pop
push
loopne
movsb
test
inc
fldt
jbe
lds
sbb
inc
sub
pop
std
mov
jae
mov
xor
call
fs
std
mov
pushf
xchg
out
jecxz
sahf
stos
jno
sbb
insb
inc
push
jnp
data16
sahf
sbb
dec
lahf
and
test
movb
pop
mov
out
xchg
test
and
push
pusha
daa
jp
xchg
push
ret
push
insb
rcrb
pop
ljmp
out
mov
sti
mov
pushf
mov
add
xchg
mov
jmp
pop
pop
movsl
and
aam
push
movsb
das
mov
sub
enter
movsl
sbb
dec
add
or
xchg
or
cmp
leave
lock
pushf
jle
ret
sbb
gs
cmpsb
adc
lahf
ror
out
ret
sbb
fucomp
out
mov
pushf
dec
or
ljmp
dec
mov
mov
mov
pushf
pop
pop
push
scas
or
int3
xor
pop
and
dec
mov
test
lods
sbb
es
lods
lret
xchg
iret
sub
les
sbb
sarb
push
xlat
or
test
push
das
pop
or
push
cmp
out
or
das
cmp
or
lock
push
pop
outsb
jecxz
sbb
xchg
push
fs
sbb
or
mov
call
xchg
mov
subb
popf
or
mov
sahf
clc
gs
mov
fwait
sub
call
xchg
sbb
cld
jno
repz
scas
insb
jns
push
inc
icebp
scas
push
or
rolb
stc
mov
pop
out
push
in
pop
sbbl
or
xor
adc
push
jnp
leave
daa
dec
fnstenv
das
cltd
inc
div
pop
cmp
xchg
gs
test
jno
lods
scas
stos
mov
testb
adc
inc
add
mov
in
jns
jle
in
cmp
sub
add
pushf
imul
lcall
rclb
cmp
mov
call
mov
cmc
jnp
adc
pop
adc
stos
scas
ljmp
int
adc
lods
inc
les
fcmovb
movsb
jg
push
ljmp
jnp
add
loop
push
std
mov
cltd
clc
adc
js
add
negb
xchg
inc
pop
ljmp
push
xor
decb
and
out
xor
rorb
mov
icebp
push
je,pt
loop
call
shl
jle
sarl
ljmp
test
lret
out
and
pop
scas
push
dec
mov
orl
push
lods
xchg
cmp
pusha
repz
lret
add
mov
js
mov
inc
mov
out
leave
ds
jp
jl
cwtl
inc
je
cs
fcmovu
lcall
out
adc
cmp
popf
lea
mov
popf
mov
sti
leave
dec
and
sub
inc
daa
clc
jmp
fcmove
js
movsb
mov
out
mov
in
and
fwait
or
fidivrl
das
out
outsl
test
adc
and
xchg
xor
mov
push
cmp
andb
fcmovnu
test
cli
stc
fwait
sti
cli
sarl
lea
popf
cwtl
pop
insb
dec
jno
iret
pusha
mov
stos
jl
pop
sub
jne
add
mov
push
insl
ret
loopne
ret
or
cmp
jmp
add
adc
lret
dec
jmp
mov
cmpb
push
lcall
std
imull
lcall
rcr
fldlg2
cwtl
lahf
out
cmp
ja
or
pop
aad
lret
jo
inc
xchg
pop
lds
mov
out
gs
cmp
sbb
fsubrs
dec
mov
mov
lods
mov
in
stc
imulb
and
add
jb
sub
jae
dec
cwtl
mov
aaa
jg
and
test
dec
jnp
lret
mov
testl
xor
cmpsl
out
movsl
lret
ret
xlat
mov
xchg
popf
std
pushf
pop
scas
push
jno
cli
sbbb
mov
loopne
adc
push
mov
sti
add
ror
or
stos
fistl
fildll
sbb
mov
cmpsl
adc
cmp
mov
sub
ss
add
or
cmp
imul
sbb
and
sbb
inc
adc
mov
add
mov
inc
inc
sub
fildll
pop
jmp
pop
jns
lret
hlt
sbb
mov
adc
rcll
xchg
ljmp
and
subb
fadds
cmp
sbb
out
movsl
ret
xchg
jg
xor
stc
jns
sub
int
cmp
mov
jbe
and
and
add
je
ss
aas
pop
lahf
xor
movsb
aam
insl
push
xchg
pop
cmp
aas
mov
mov
xchg
mov
jl
ds
xor
cs
and
ret
add
fs
jno
cmp
test
xchg
jle
popf
int3
repnz
mov
aam
call
cltd
push
and
mov
ret
lahf
xor
xor
cmp
and
cmp
xchg
mov
ds
mul
xchg
and
mov
xor
mov
outsb
les
je
divl
dec
mov
xchg
and
inc
push
cli
movsb
adc
push
mov
cmp
xchg
outsl
std
mov
daa
stc
xchg
scas
ret
xor
mov
sub
cmc
loop
aam
jno
push
xchg
dec
sub
int
push
cmp
stos
out
sbb
scas
in
sbb
or
mov
loope
xchg
enter
add
mov
cmp
push
cwtl
stc
mov
pop
dec
or
add
cld
cld
daa
xchg
jl
pop
cmp
jmp
xor
push
xor
jmp
mov
push
push
push
mov
rcrb
inc
aam
adc
clc
adc
mov
push
popa
cs
pop
js
xor
test
cli
cmpsl
sahf
fnstenv
jle
dec
dec
shrb
dec
rclb
int
ljmp
push
mov
xchg
jne
repnz
shll
pop
in
lods
lcall
sub
pop
shlb
add
sub
outsl
pop
add
movsl
sahf
jo
inc
movsl
rorb
lds
imul
dec
dec
lcall
fisubl
push
sbb
adcl
push
fstpl
xchg
stos
cli
mov
mov
in
ljmp
movsb
mov
in
sub
or
cmp
or
fnstenv
lea
aas
cmpsb
cli
pop
and
push
imul
push
dec
and
popf
adc
push
dec
jmp
inc
int
inc
jb
outsl
int
insl
push
push
cmp
dec
scas
dec
int
idivl
add
into
lret
mov
or
stos
sbb
mov
pop
gs
lods
mov
fcmovnbe
repz
mov
xchg
pop
xchg
out
insb
and
xlat
lcall
mov
sahf
ja
fnstsw
jo
fldl
lret
frstor
fidivrl
pushf
stc
ja
or
mov
pusha
jne
out
insl
mov
and
jae
fs
inc
dec
jo
test
js
loop
out
popa
mov
notb
push
sahf
pusha
scas
mov
std
ret
mov
int3
outsb
xchg
int
cli
lds
push
mov
test
incl
ret
inc
fldln2
call
popf
data16
in
mov
push
aaa
push
shll
lods
and
faddl
mov
std
jg
outsb
fistl
imul
cwtl
stos
and
dec
and
subl
push
jns
test
xchg
xchg
xchg
pop
test
xor
adc
mov
lldt
jb
pushf
mov
fsts
rolb
jb
pop
call
cmp
dec
add
sub
sbb
lds
xor
loope
xor
repz
sub
shl
pop
adc
or
and
push
pop
insb
push
popfw
xchg
ljmp
fiaddl
data16
insl
mov
dec
cmpxchg
pop
in
leave
mov
das
cmp
mov
push
sub
or
in
xchg
rclb
movsb
sbb
sub
ja
jp
mov
mov
adc
shrb
sbb
pop
scas
std
jnp
pusha
outsl
pop
pop
pop
fcompl
inc
pop
in
arpl
shr
xchg
stc
sub
in
cmp
xchg
mov
dec
mov
sbb
enter
icebp
in
xchg
repnz
push
adc
pop
out
arpl
dec
push
pop
xchg
mov
sub
aad
and
cltd
outsb
mov
sub
dec
aam
pop
lahf
cmp
or
mov
push
mov
les
xchg
mov
lods
pop
push
dec
ss
rcl
data16
mov
pop
into
cmpsb
adc
scas
or
jb
jge
jg
push
jnp
cmpsb
lock
adcb
inc
sub
enter
sub
test
xorl
rep
fstpt
std
xadd
ljmp
in
jecxz
sbb
sahf
mov
mov
leave
sub
xchg
mov
out
inc
sub
movsb
rcl
outsl
std
push
sbb
add
invd
push
mov
xchg
ret
adcl
pop
fildll
dec
std
into
xor
push
xor
jb
xchg
mov
in
xchg
es
or
fiadds
les
stos
std
and
sub
arpl
sar
jge
outsl
push
xchg
add
mov
cmc
lea
dec
dec
lret
stc
pusha
jle
mov
xchg
push
xorl
xchg
pop
out
adc
nop
mov
rcll
pop
pop
rorl
sub
mov
out
ljmp
push
jae
aad
adc
aas
push
cli
inc
xor
imul
add
ficomps
mov
jge
out
hlt
lds
mov
inc
insl
sbb
pushf
faddl
test
cld
inc
add
sbbl
popa
addr16
ror
in
xor
or
cmpsb
sub
pushf
inc
xor
stos
push
fwait
nop
and
cmp
sub
jb
mov
sbb
push
sahf
jle
sti
jmp
aas
lods
mov
ljmp
mov
adc
std
aad
mov
shrb
mov
sub
jl
repnz
cwtl
xor
sub
or
xor
jns
pop
cs
cmp
xchg
insb
jp
push
cltd
add
lock
mov
xchg
aaa
mov
fisubrl
out
push
imul
xchg
cmp
push
movsl
test
and
lods
dec
mov
push
xlat
xchg
adc
pop
sti
repnz
xor
hlt
cmpsl
push
xchg
insl
std
xor
adc
jmp
lods
push
and
rclb
lret
orl
enter
or
rclb
icebp
push
adc
insl
movsl
subb
fdivp
add
and
xor
xchg
into
out
das
in
pop
movb
divl
dec
mov
mov
mov
enter
inc
adc
cli
fmulp
je
dec
lods
stc
mov
repnz
sarb
es
sbb
adc
orb
das
sbb
pop
mov
cmpsb
iret
sti
jmp
test
cmp
jnp
pop
hlt
inc
and
push
xor
pop
xchg
pop
sbb
fs
adc
push
loope
mov
fsubrs
push
mov
jg
test
and
sub
lcall
push
jae
pop
popf
stos
imul
jp
sub
imul
sahf
sar
cmp
or
pop
add
ret
rclb
ficompl
hlt
stos
jge
xor
int3
insb
hlt
out
inc
xorb
adc
xchg
cli
sarl
into
shlb
daa
subb
dec
jbe
js
loop
sub
push
cmp
loopne
addb
sarl
xor
cmp
xchg
pop
lods
or
jecxz
in
out
icebp
loope
xchg
cmpsl
sbb
dec
out
cmp
fstpl
fcoml
mov
mov
mov
push
push
push
call
shld
shl
mov
jmp
push
hlt
jmp
push
or
movb
hlt
test
fs
adc
clc
adc
lods
and
mov
imul
fildll
mov
test
rcr
sbb
sahf
pop
xor
adc
cmp
mov
xchg
loope
pushf
mov
popw
loopne
jle
daa
orb
testl
add
pop
aad
lods
or
mov
pop
adc
popf
cmp
mov
fildl
out
stos
or
in
inc
and
jg
es
imul
pop
scas
pop
mov
insl
sub
sub
and
pop
fiadds
pop
add
gs
xchg
xchg
mov
add
dec
lret
jno
in
loopne
mov
ss
repz
jne
xlat
adcb
or
add
test
pop
in
cmpsl
inc
fwait
xorb
cmp
xchg
adc
xor
adc
js
mov
stc
lahf
adc
ss
jo
sbb
rcr
popa
and
xor
add
inc
pop
in
cmpsl
inc
mov
movsb
jmp
inc
pop
lock
fwait
mov
sub
fucomip
xchg
dec
cmp
mov
mov
pop
out
dec
jns
adc
add
aam
les
xlat
mov
mov
das
mov
lea
sbb
stc
insl
add
test
pop
mov
add
lret
int3
sub
pextrw
addr16
xchg
jl
mov
out
repz
sub
adc
jne
cld
fisubrl
jnp
mov
mov
jmp
or
jp
sub
aas
adc
cmp
dec
or
shlb
pop
jle
adc
mov
xlat
es
add
pop
data16
aaa
sbb
pop
js,pn
xchg
sbbw
stos
lds
daa
sahf
cmp
lcall
adc
mov
pop
cmp
inc
push
push
adc
add
ja
loopne
pop
jl
aam
addr16
inc
fstl
add
or
xchg
and
sub
adc
fisttpl
mov
adc
jo
fadd
mov
je
lds
ret
xor
pop
fwait
push
nop
inc
imul
and
push
scas
stos
ror
mov
xor
jne
and
sbb
jmp
hlt
pop
push
sbb
shlb
sub
mov
push
dec
movsl
loope
add
rcr
mov
mov
movsb
xor
xchg
xor
in
xlat
loope
stc
inc
lods
es
lds
sub
mov
or
mov
adc
mov
push
test
pusha
xchg
mov
or
lret
sarb
jge
clc
xor
sub
ljmp
mov
sbb
pop
pop
shlb
push
pop
les
lock
or
mov
mov
and
lret
test
mov
in
pushf
or
std
in
andb
adc
int
test
pop
mov
add
and
mov
cli
aaa
gs
cmp
or
jne
mov
int
pop
sahf
xchg
sub
dec
movsb
mov
in
and
test
inc
and
sbb
mov
cmp
jmp
xor
mov
int3
addl
push
mov
pop
adc
add
mov
in
jnp,pt
pop
int
dec
pop
pop
add
and
push
inc
dec
int3
adc
ljmp
aas
mov
inc
mov
aam
sbb
out
xlat
dec
outsl
xchg
xorl
add
mov
pop
xchg
mov
cs
cltd
es
mov
int
mov
clc
sub
aad
mov
or
pop
sbb
and
inc
pusha
mov
or
negb
xor
cmpsl
or
scas
mov
rolb
std
cmp
andl
xchg
movl
adcl
inc
dec
pop
test
std
lea
movsb
repz
xchg
outsb
xchg
jne
add
push
jecxz
push
vpackuswb
mov
fiadds
shlb
aaa
or
jb
inc
inc
insb
xor
xor
sbb
sub
pop
xor
lods
cmpsl
jnp
push
adc
sbb
cmp
inc
xchg
call
stos
xor
adc
mov
xor
fwait
cmp
mov
rclb
pop
call
push
adc
dec
jae
stos
jae
fwait
lods
push
or
add
sbb
cmp
out
fwait
cmp
mov
dec
fistps
out
or
or
mov
jge
adc
sub
clc
dec
ret
mov
out
in
xlat
lods
fwait
xchg
xchg
repz
test
in
mov
scas
sbb
sbb
or
cli
sbb
or
into
xlat
sahf
in
pop
xchg
pop
sti
pop
les
sbb
mov
sbb
push
sbb
lea
add
sub
rolb
push
out
dec
js,pt
xlat
cltd
jne
or
fsubrl
mov
leave
jno
ret
add
sahf
aad
cmp
lock
lods
cmpsb
mov
shrb
data16
or
aas
or
sub
imul
mov
mov
loopne
cmp
cmp
iret
xor
fmul
stos
jae
mov
popf
sbb
fnstenv
cmpsl
cwtl
cmp
fmull
dec
mov
hlt
xor
enter
cmpsl
test
inc
test
imul
xchg
push
gs
push
add
mov
pop
adc
adcb
xor
push
idivb
sbb
mov
add
jne
sahf
popa
ljmp
rcrb
hlt
mov
mov
lods
popf
fstpl
xchg
loopne
enter
subb
lret
dec
movsb
mov
and
test
cmp
dec
clc
and
cmp
push
push
add
jbe
mov
and
pushf
push
test
adc
rorb
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
inc
mov
cs
jmp
inc
aam
push
sub
adc
movsb
mov
lcall
insb
pop
mov
xor
ja
xor
sub
cwtl
push
hlt
mov
rcrl
add
mov
jecxz
icebp
mov
mov
and
sbb
shlb
xchg
aad
or
inc
aam
pushl
sub
mov
xchg
ss
insb
push
rcrl
pushf
dec
lods
and
jmp
les
or
lea
fwait
sti
fucomip
jle
in
outsl
loopne
imul
lahf
movsl
push
mov
xor
mov
repnz
and
mov
jne
mov
fdivl
sarl
fidivrl
movsl
inc
test
cmp
bound
pop
mov
cwtl
sti
cs
aam
push
add
scas
dec
gs
xor
std
repnz
shll
xchg
push
xor
dec
cmpsl
dec
shlb
cltd
adc
cmp
xchg
cld
test
inc
mov
jmp
and
aas
dec
in
jl
outsl
movsb
aaa
cmp
lss
mov
outsb
rolb
insl
jne
cmp
test
filds
leave
add
bound
push
adc
add
adc
mov
loop
inc
mov
and
mov
and
sub
push
lods
popf
fwait
jb
loopne
imul
push
fwait
mov
je
mov
jnp
adcl
subb
sub
out
xorl
sub
ss
push
mov
xor
aam
adc
add
es
cmp
repnz
ficompl
mov
mov
sub
push
outsb
pop
push
xchg
pop
xchg
das
mov
in
imulb
bound
adc
xchg
ss
pop
dec
jne
cli
stc
arpl
mov
pusha
stc
sub
nop
out
mov
bound
push
adc
jae
cmp
fwait
add
cmp
inc
dec
and
inc
das
mov
mov
mov
cmp
xorl
addr16
orl
test
inc
repnz
icebp
pop
cld
mov
pop
or
lret
pop
rclb
mov
xchg
xchg
gs
insl
nop
js
mov
mov
mov
mov
popf
xchg
popf
cli
jg
push
cmp
out
cltd
lcall
mov
into
xor
pop
into
aas
ficoms
push
ss
shrb
lods
sub
sub
dec
imulb
mov
push
cmpsb
cltd
sahf
outsb
pop
push
mov
insb
or
lock
mov
cltd
add
or
sub
jge
mulb
out
or
dec
test
cmp
adc
push
inc
stos
daa
lret
repz
push
ret
adc
sub
inc
dec
scas
inc
xor
or
sbb
inc
sbb
push
add
orl
inc
clc
push
test
sbb
jecxz
xor
push
jae
test
mov
mov
nop
orb
std
sub
incl
decl
mov
sub
or
lret
pop
movsl
in
push
dec
stc
cmp
dec
sbb
or
scas
fwait
or
sbb
xchg
dec
aaa
push
inc
mov
add
jbe
push
lahf
mov
mov
cmp
adc
sub
loopne
cmp
sub
inc
or
dec
jns
sbb
inc
loope
pop
and
and
cld
xor
pop
mov
ret
pusha
imulb
cmp
add
repz
mov
ljmp
mov
iret
shrb
in
jmp
rcrb
out
lret
inc
arpl
lret
adc
sbb
xchg
jl
ds
mov
mov
cmpsb
cmpsb
insb
mov
and
add
popf
xor
push
sub
pop
fwait
aaa
sbb
rorb
and
xor
pusha
pushf
xor
sti
mov
mov
adc
imul
cwtl
int
scas
adc
scas
mov
imul
push
sub
fwait
pop
jp
inc
xchg
cmp
and
test
ds
icebp
fsubr
lret
popa
dec
stos
dec
cmp
jmp
sub
mov
xchg
jp
xlat
pop
fildll
mov
jno
lods
dec
fstl
arpl
and
shlb
cmpsb
cmpsl
fs
and
adc
mov
int3
xor
jmp
mov
jp
leave
xor
xor
xchg
scas
bound
mov
jle
loope
cltd
cs
jae
int
hlt
pop
xchg
cmpsb
mov
test
jbe
mov
out
test
add
and
add
dec
sarb
imul
jge
push
pushf
mov
xchg
adc
sbb
xchg
pushf
iret
push
cmp
scas
cmp
push
mov
repz
stos
mov
cli
ficoml
aad
decl
xor
cmp
mov
mov
xchg
dec
in
mov
fists
inc
mov
rol
out
aam
test
fwait
lret
jmp
inc
outsl
cmp
dec
loopne
into
gs
sti
sbb
aam
in
add
add
dec
xchg
outsl
fs
inc
insl
mov
flds
inc
inc
mov
cmp
sti
lret
rclb
ljmp
xor
inc
setp
into
jb
jbe
adc
push
in
mov
or
fildl
femms
push
jge
cld
pop
decb
in
jns
outsb
add
mov
jmp
fiadds
xor
mov
stc
loop
test
pop
pop
out
cmpsl
into
fistl
loopne
xor
test
xchg
cltd
mov
jne
movsb
cwtl
pop
pop
mov
lahf
sub
lea
sbb
mov
test
mov
stc
cmc
cmpl
icebp
movsl
mov
or
adc
push
xlat
pop
repz
jo
andl
aaa
dec
leave
icebp
lods
dec
cmc
inc
int
sub
cli
cmp
mov
cli
hlt
shlb
add
xor
outsl
adc
ficoms
mov
cmp
pop
ficoms
xchg
shrl
jae
xor
cmp
andb
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
jmp
jmp
dec
int
xchg
jle
or
fists
clc
adc
sbb
add
cmp
sbb
xor
into
sub
and
lea
pop
ss
ljmp
lods
testl
or
ljmp
cmc
sbb
jle
jnp
rorl
add
add
or
shll
test
add
clc
lods
add
in
push
mov
dec
lods
dec
dec
loopne
lcall
outsb
jne
pushf
xchg
push
daa
jle
xchg
add
xchg
fisubl
gs
cli
rcr
test
push
push
rorb
pop
or
or
loope
push
into
cmp
push
add
push
xchg
dec
inc
cmc
cmp
jbe
push
in
out
dec
clc
dec
xchg
cs
push
lock
inc
add
idiv
out
cmp
mov
loope
repz
stos
std
inc
add
sti
fbld
repnz
push
xor
pop
out
in
movsb
or
mov
icebp
imul
lods
xor
div
xlat
aaa
into
cmp
fwait
call
sbb
lds
lret
pushf
xor
enter
add
push
cmp
sub
aaa
sbb
mov
inc
pop
cmp
mov
rorl
sbb
shlb
popa
out
sub
xor
mov
leave
ja
cmp
ljmp
test
add
xor
repnz
jl
mov
shll
out
arpl
inc
and
add
sub
daa
int
mov
push
enter
dec
push
sbb
inc
sbb
xor
push
mov
mov
aas
or
shr
jg
cltd
mov
mov
and
cmpb
lret
out
dec
lcall
inc
pop
dec
push
pop
push
inc
out
sub
or
aad
in
sbb
hlt
faddl
sbbl
rorb
pop
popf
mov
jns
and
sub
push
ljmp
rolb
fimull
das
cltd
push
jns
out
std
outsl
xor
sarb
es
adc
stos
ja
sbb
jnp
add
sbb
sub
lods
movsb
mov
fistps
mov
xchg
loope
pop
push
jecxz
loope
mov
int3
mov
jb
lods
xlat
jb
rorb
adc
add
cmp
mov
jo
or
rolb
pop
mov
jns
mov
iret
addl
xchg
stos
test
stos
or
mov
add
and
sub
jl
es
mov
repnz
mov
mov
xchg
mov
dec
pop
aaa
out
enter
mov
dec
test
sub
adc
pushf
inc
shlb
jge
add
cmpsl
cmp
jg
adc
lods
add
inc
sbb
push
data16
xchg
fnstenv
adc
sub
lret
lea
and
aam
rcll
push
mov
xor
push
push
cmc
mov
jle
inc
das
cmpb
cltd
out
xor
pop
jle
add
shlb
fwait
ja
rcrl
sub
in
jb
jmp
jle
push
data16
push
fisubl
dec
stc
incb
mov
xchg
inc
jns
pop
push
pop
outsl
inc
dec
cs
adc
sub
jle
push
sbb
ret
hlt
add
test
lods
add
ljmp
nop
pop
push
jo
inc
dec
inc
add
stos
pop
cs
sub
jae
xor
xchg
push
outsb
sub
mov
cmc
jne
jl
in
pop
fucomip
or
mov
mov
cwtl
jle
mov
dec
lods
pop
test
adc
movsb
or
mov
in
int
int3
sub
in
lock
inc
inc
cs
jmp
mov
cmp
aam
stos
and
inc
pop
insb
xor
and
cmp
cs
dec
mov
sbb
stos
jmp
test
jecxz
pop
and
repnz
jno
aaa
sub
nop
rcll
jp,pt
insb
adc
mov
lods
sbb
mov
fnstenv
fcompl
repz
adc
ret
enter
dec
andb
repz
fldcw
add
hlt
inc
or
mov
push
dec
dec
pop
or
bound
sub
xor
jecxz
fcos
or
fnstcw
mov
leave
mov
mov
in
les
iret
dec
cs
in
adc
ret
shll
push
iret
scas
mov
sub
xchg
lcall
adc
jb
xor
add
aas
test
sbb
push
sub
inc
sub
pop
paddb
daa
test
sbb
mov
stos
add
ds
int
sub
mov
mov
pop
push
loopne
pop
mov
divl
lahf
cli
push
sbb
sbb
inc
push
mov
add
adc
adc
loopne,pn
out
sbbb
int
daa
out
xor
ret
jecxz
clc
inc
inc
loope
ja
int
and
jne
insl
and
add
je
cs
out
loopne
gs
hlt
into
call
push
test
cmpsb
mov
sub
aaa
cs
or
xor
lods
leave
dec
stos
loope
sub
outsl
sbbl
add
pop
xchg
ret
add
push
mov
adc
xor
lea
ja
ficomps
pop
movsl
repnz
ja
mov
mov
xchg
les
adc
int3
es
sbb
mov
hlt
xchg
add
pusha
loope
jnp
rolb
aas
xchg
out
in
enter
or
out
sub
rolb
xor
inc
sbb
pusha
push
mov
pop
fcomi
hlt
es
orb
mov
das
addb
push
push
pusha
cmp
push
in
jns
or
dec
rorb
lods
or
cld
inc
pop
mov
inc
mov
lock
cmp
test
cmp
stos
repnz
sbb
mov
mov
shlb
mov
jg
xchg
mov
enter
push
sbb
push
call
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jmp
ret
icebp
imul
scas
sbb
inc
movsb
hlt
aad
adc
hlt
cmpsl
push
mov
fdivs
push
repz
add
xor
adc
movsl
sahf
or
out
sub
pop
or
scas
mov
cld
sub
movsb
jns
mov
sti
repz
out
dec
pop
push
repz
mov
out
bound
inc
or
inc
fs
cmp
in
inc
test
jmp
fs
mov
pop
and
sahf
dec
xchg
mov
dec
mov
pop
leave
ficoms
and
stc
xor
cmp
sbb
pop
mov
jnp
cmp
aad
mov
es
cmp
pop
mov
ret
xchg
cli
or
lret
add
insl
mov
mov
adc
cs
mov
pop
leave
mov
out
or
ret
cmp
scas
aam
sahf
cmp
cmc
cmp
fldcw
scas
out
nop
frstor
lds
imul
mov
and
adc
lcall
cld
jge
gs
pop
test
sbb
or
or
loope
pop
mov
loope
faddp
jge
shlb
and
clc
arpl
out
adc
in
ja
es
xchg
aaa
inc
xor
pop
out
popf
pop
xchg
iret
add
test
cmp
adc
adc
adc
xchg
iret
mov
and
mov
sahf
enter
es
cmp
xchg
popa
daa
mov
rclb
jo
jg
data16
mov
inc
je
nop
leave
testb
cli
fmuls
mov
hlt
int
dec
or
jns
cmp
push
hlt
data16
pop
test
nop
or
lock
mov
lds
cmp
mov
pop
jb
hlt
ds
mov
jmp
and
cmpsl
jmp
in
loopne
test
mov
push
mov
lret
shl
cmp
pop
jmp
cli
cmp
fwait
stos
addr16
adc
xchg
int3
test
clc
and
push
aaa
clc
mov
dec
xchg
pop
sti
push
out
jge
movsb
mov
or
cltd
call
cwtl
xchg
jae
fildl
dec
rcrb
je
mov
fidivrs
aaa
test
shll
in
loop
cli
lahf
lahf
cltd
sbb
bound
and
movsl
inc
pop
mov
nop
lea
jmp
xchg
iret
movsb
lahf
lds
rorl
push
sahf
jae
aas
insb
xchg
fs
popf
roll
xlat
int
int3
adc
flds
aad
push
xchg
mov
push
aam
xor
mov
shl
aad
in
xchg
mov
or
dec
movsb
add
mov
or
xchg
pop
and
dec
xchg
mov
push
fldenv
jp
dec
push
jb
movb
ret
inc
fld
xchg
sbb
mov
or
cltd
mov
mov
jne
jle
outsl
sbb
add
lea
cmp
pop
fiaddl
push
cmp
int3
fisubl
sbb
lahf
ficomps
stos
jnp
in
roll
mov
mov
xchg
dec
sub
push
in
leave
jp
add
mov
mov
mov
adc
cli
dec
outsb
shlb
js
jge
pop
outsb
mov
mov
sbb
mov
ds
push
mov
data16
gs
dec
stos
pause
fsts
xchg
sbb
xchg
add
xor
pop
hlt
cmp
adc
inc
lret
sarl
xchg
loopne
pop
and
ror
mov
nop
aad
jmp
cld
outsb
jg
mov
mov
or
lret
stc
cmpsl
or
xor
adc
sub
adc
and
dec
js
jg
pop
xor
lret
sbb
mov
cmc
push
lcall
pop
in
xchg
popa
inc
imul
or
dec
cltd
nop
cld
or
mov
fisubrl
aad
icebp
jecxz
ret
lret
inc
adc
sub
push
or
xor
jno
in
sti
or
mov
movsb
mov
sub
jo
cwtl
sbb
xchg
pop
mov
jo
xchg
inc
lds
adcb
push
xchg
and
push
add
in
das
mov
add
cmp
cmp
jo
add
lea
test
jecxz
inc
enter
mov
fwait
out
sub
sti
aam
sti
dec
daa
test
jle
insl
cld
sti
gs
lods
xchg
insb
push
es
mov
shll
cmc
addl
sub
daa
adc
mov
mov
ror
cpuid
adc
popa
scas
ljmp
lds
xor
xor
sub
icebp
daa
rcrb
test
sub
jnp
in
test
or
lret
xlat
scas
loop
inc
sub
pop
push
xchg
lret
sbb
sbb
or
mov
and
jg
add
and
pop
push
bound
pop
lcall
pop
jae
imul
cli
jl
add
nop
je
loope
mov
dec
jb
clc
inc
shll
cmp
pop
ret
aad
test
outsb
add
dec
push
pop
pop
fistps
in
inc
inc
sbb
add
and
add
push
and
jp
in
dec
or
jns
lcall
xchg
xchg
movd
xor
sar
popa
mov
jno
loop
xor
test
les
sahf
xchg
cmpsb
dec
shlb
jmp
test
push
fdiv
jmp
stc
inc
mov
mov
outsl
mov
fcmovnb
pop
jbe
adc
es
push
pop
ds
mov
movsb
push
bound
and
jne
mov
rcr
dec
cmp
mov
adc
xor
xchg
enter
frstor
movsb
jecxz
fldenv
lret
orl
pop
adc
xchg
das
push
lods
adc
mov
add
imul
add
xchg
inc
push
and
sbb
mov
test
mov
leave
js
jne
inc
fwait
sub
mov
daa
cwtl
mov
pop
jge
or
xchg
sbb
shr
daa
xchg
cmpsl
ljmp
inc
push
mov
pop
push
flds
dec
dec
cmpsl
test
enter
subl
mov
pop
out
sti
roll
popa
mov
cmp
mov
dec
mov
fisttpl
pop
mov
paddw
lcall
xchg
cs
fildll
jns
xor
cmp
adc
mov
out
jecxz
and
mov
stos
mov
jg
mov
xchg
stc
xor
push
roll
popf
outsb
fstl
sbb
sub
jecxz
je
or
insb
push
pop
icebp
loope
fwait
dec
mov
jl
aam
movsl
pop
in
call
movsb
xchg
adc
add
sbbl
shrd
movl
shr
ret
mov
xor
orl
and
jmp
add
ss
ss
cs
mov
cmc
inc
jg
les
cmpsl
clc
adc
adc
stos
mov
ljmp
push
xor
mov
mov
mov
aam
in
into
inc
mov
cmp
aas
inc
insb
adc
or
jle
adc
fsub
mov
inc
or
in
fldcw
in
popa
cwtl
int
inc
lret
jle
mov
shrl
dec
inc
cld
push
push
or
in
mov
call
pop
fildll
xchg
cltd
jno
hlt
and
enter
ret
imul
xchg
lahf
cmp
cmp
fldcw
in
arpl
jnp
enter
test
mov
sbb
mov
mov
xor
lret
imulb
push
mov
xchg
mov
movsb
roll
subb
add
bound
repz
add
dec
push
aas
mov
loopne
clc
and
rcr
mov
dec
cmp
cltd
fldl
cmpsb
jno
add
and
cmc
xchg
push
cmp
pop
mov
std
jl
loopne
add
mov
enter
imul
or
jecxz
sbb
insb
jle
call
inc
add
in
aaa
in
adc
aad
je
orb
sahf
and
pop
fstpl
and
cmp
add
push
and
xor
pop
push
mov
pop
mov
nop
lods
daa
lahf
pop
cmpsb
js
jmp
or
sbb
dec
repnz
add
and
popf
sarl
mov
mov
faddp
add
insb
inc
out
inc
aad
push
push
inc
mov
cmp
scas
data16
popa
pusha
pushf
adc
jae
push
mov
test
adcl
jnp
adc
add
icebp
mov
mov
mov
sti
data16
mov
sbb
or
jo
xchg
daa
xchg
mov
test
cmpb
inc
push
arpl
adc
sub
add
jmp
sbbb
cmpsl
scas
and
xchg
xor
mov
mov
mov
xchg
inc
sbb
stos
stos
sub
mov
inc
js
aaa
inc
lods
jecxz
xchg
leave
jbe
adc
adc
out
movsl
sbbb
inc
gs
adc
leave
jmp
cmpb
movsb
clc
adc
cmp
adc
arpl
rep
cmp
fistps
loopne
mov
leave
xor
pop
out
sub
sub
loope
je
test
push
bswap
mov
pushf
and
mov
in
pop
jb
fwait
add
pop
sub
popf
jl
sbb
and
lods
into
or
lods
pop
fstps
sub
clc
xlat
adc
sti
sub
mov
or
sbbl
subb
cmp
add
std
mov
test
push
nop
mov
and
add
fistpl
dec
popf
pusha
cmpsb
mov
fcmovb
push
sbb
lcall
lock
es
int
ds
inc
lcall
aam
fisubrs
shll
hlt
divl
jb
out
pop
push
pop
std
imul
dec
fwait
mov
inc
movsb
or
test
mov
cmp
xchg
call
mov
pushf
inc
dec
mov
in
loopne
sbb
leave
mov
test
xchg
push
ljmp
push
or
or
cmp
cmp
sbb
adc
push
mov
std
loopne
pusha
push
push
cld
imul
in
pop
aaa
ret
cmp
push
dec
movsl
adc
jno
out
jno
sbb
mov
nop
sub
cmp
cmp
or
scas
pop
lods
out
xchg
jp
int3
push
xchg
mov
dec
mov
push
cmpsb
ret
fdivs
mov
adc
outsb
jno
insb
sbb
jne
lahf
push
out
int
das
mov
notl
push
push
mov
das
cmp
pop
pop
and
inc
inc
cmp
cli
push
sbb
mov
push
xor
into
xchg
or
sub
xchg
les
or
push
stc
dec
sub
and
mov
test
push
icebp
push
pop
movsl
ss
fidivl
int
cmp
ss
fsub
inc
mov
mov
xchg
cmp
rorl
xor
aas
stos
jmp
test
std
lds
popl
pop
test
cmp
fnsave
dec
or
xor
inc
jecxz
sub
cs
ss
dec
and
xchg
xorb
les
loope
sub
in
call
int3
lds
repz
add
pop
mov
ret
and
test
pop
clc
sbb
int
pop
iret
jnp
jne
pushl
mov
add
pusha
movsb
mov
out
inc
sub
and
xor
call
subb
aam
mov
repz
scas
push
or
xor
xchg
inc
xchg
inc
mov
clc
xor
jae
xor
inc
jnp
inc
mov
test
mov
jae
dec
jb
jbe
mov
jbe
scas
push
inc
dec
add
adc
adc
pop
jbe
pop
repnz
sub
sub
enter
sub
pop
icebp
sbb
movsl
clc
xor
shlb
push
dec
lahf
adc
sar
mov
mov
sahf
jl
das
add
or
or
mov
mov
mov
hlt
in
xor
icebp
ficomps
loopne
dec
inc
incb
in
ret
or
pushf
sbb
inc
push
dec
cld
xchg
push
rcr
sbb
inc
xor
ss
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
jbe
pushl
pushl
call
adcl
subl
sbbl
add
xorl
incl
movl
xor
xor
add
mov
mov
movl
andl
mov
movb
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
pushl
push
call
incl
subl
xor
xorl
orl
orl
or
orl
or
movb
subl
movb
movzbl
mov
addl
sub
addl
imul
cmpl
mov
mov
jmp
mov
jne
pushl
pushl
push
pushl
pushl
pushl
call
movzbl
xor
sbb
orl
andl
subl
orl
movzbl
subl
push
adcl
and
mov
movb
orl
movb
andl
movb
sbbl
movb
andl
mov
mov
add
adcl
imul
mov
or
mov
subl
and
mov
movl
cmp
movl
ja
mov
and
mov
sub
mov
cmpl
not
mov
jmp
mov
ja
push
push
push
pushl
pushl
push
pushl
pushl
push
push
push
pushl
push
call
movzbl
and
sbb
xor
xor
or
adc
mov
sub
mov
not
mov
mov
movzwl
movl
movzwl
shr
andl
or
xorl
sub
andl
mov
movb
xorl
movb
mov
mov
xor
add
movzbl
cltd
push
pop
idiv
mov
movb
movb
mov
mov
add
movzbl
movzbl
cltd
idiv
mov
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
mov
push
push
push
call
mov
mov
mov
or
mov
mov
shl
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
orl
push
add
push
xorl
mov
dec
mov
shrd
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
or
xor
or
mov
sub
xor
adc
sub
xor
xor
adcl
neg
shr
xor
mov
not
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
pushl
push
call
addl
movzbl
sbb
sub
xor
xor
mov
xor
or
mov
notl
mov
shl
subl
mov
xorl
shrd
add
xor
movl
shr
adc
mov
mov
xor
mov
sbb
or
mov
or
mov
sbb
mov
mov
mov
mov
add
mov
cmpl
movzwl
movl
jmp
mov
notl
jae
call
adc
sub
and
xor
sub
adc
movl
mov
mov
add
mov
addl
mov
cmpl
movl
mov
movl
jmp
movl
jne
push
call
neg
xorl
or
xor
xor
or
or
add
incl
inc
mov
add
shl
xor
shld
movzwl
or
mov
shl
mov
xor
xor
movl
movl
movl
movl
cmp
jne
cmp
movl
je
mov
and
mov
mov
cmpl
mov
mov
not
jmp
movl
je
pushl
call
adc
or
incl
subl
sub
mov
movl
xor
shld
orl
shl
sbbl
xor
decl
xor
movl
cmp
jne
cmp
movl
je
mov
mov
sub
and
mov
mov
add
mov
addl
shl
mov
addl
xor
andl
shr
addl
or
mov
cmpl
mov
movl
movl
jmp
not
jl
push
pushl
call
add
and
or
adc
and
adc
adc
sub
mov
orl
mov
adc
mov
xor
add
mov
add
mov
sub
mov
orl
push
adc
pop
orl
sub
mov
add
notl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jb
push
push
push
pushl
pushl
call
orl
or
mov
adc
dec
sub
sbbl
lea
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
pushl
pushl
pushl
call
movzwl
and
xor
adc
neg
subl
xor
mov
movzwl
add
mov
mov
orl
xor
adcl
shr
addl
shl
or
mov
adc
movl
cmpl
mov
movl
not
mov
jmp
not
movzbl
je
push
call
sbb
xor
or
add
and
mov
mov
movl
xor
shr
addl
shl
andl
or
push
lea
push
lea
xorl
push
adcl
call
cmpl
movl
mov
mov
jmp
mov
movl
jge
pushl
push
push
push
pushl
push
call
sub
adcl
movzwl
adc
or
movzbl
sub
mov
mov
xor
or
sub
and
mov
add
mov
xor
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
adc
mov
mov
or
adc
and
adc
orl
notl
shr
cmpl
mov
movl
movl
jmp
movl
movl
je
pushl
pushl
pushl
call
subl
or
sub
neg
notl
adc
shl
cmpl
movl
movl
mov
jmp
notl
mov
ja
push
pushl
pushl
call
movzwl
sbb
xor
and
sub
sbbl
adc
or
push
lea
adcl
push
or
mov
mov
or
shrd
xorl
shr
sbb
mov
mov
adcl
xor
adcl
xor
xorl
or
subl
lea
adcl
push
shl
orl
call
dec
mov
and
mov
xorl
xor
mov
sbb
mov
shl
shr
movzwl
sbb
or
or
push
lea
xor
xor
sub
push
add
mov
neg
mov
and
shrd
cmpl
movl
not
mov
jmp
movl
movzbl
jge
push
push
pushl
push
pushl
pushl
call
mov
mov
or
sub
movl
movzbl
sbb
mov
or
mov
xorl
xor
xor
sbb
shr
mov
or
mov
xor
andl
shl
sbbl
xor
addl
or
xorl
lea
push
call
inc
mov
adc
mov
movzwl
or
xor
xor
shl
shr
cmpl
movl
movl
jmp
mov
mov
jg
pushl
pushl
push
pushl
pushl
pushl
call
movzwl
xor
inc
or
inc
mov
xor
add
sub
or
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
andl
or
mov
movl
jne
cmpl
movl
movl
jmp
movl
not
jl
pushl
call
and
adcl
subl
andl
movl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
push
call
pushl
call
test
jg
movl
movl
movl
mov
adc
mov
sbbl
imul
orl
or
and
mov
xor
mov
movl
movl
mov
or
mov
subl
mov
push
subl
add
movl
push
movl
adc
orl
push
push
andl
call
add
mov
adc
mov
movl
or
movl
cmpl
mov
mov
jmp
mov
movl
jle
push
call
adc
movzwl
sub
adc
subl
adc
mov
mov
sub
mov
and
and
movl
xor
movl
cmpl
notl
movl
movl
jmp
movl
jae
pushl
pushl
push
push
call
movzwl
adc
mov
sub
andl
xor
xor
and
cmpl
mov
movl
jmp
mov
mov
jbe
push
pushl
call
addl
xorl
adc
sbb
add
add
movl
movl
and
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jne
pushl
push
call
sub
mov
adc
mov
adc
xor
add
xor
mov
xor
mov
mov
mov
movl
and
cmpl
movl
mov
movl
movl
jmp
movl
movl
ja
push
call
subl
sub
andl
adc
sub
xor
or
sbb
cmpl
movl
movl
movl
jmp
movl
jne
pushl
push
call
mov
add
neg
sbbl
or
subl
sbb
cmpl
mov
mov
mov
jmp
movl
je
pushl
call
adc
add
inc
or
and
add
mov
and
mov
movl
or
andl
or
add
adc
and
and
subl
xor
mov
orl
xor
movl
cmp
movl
ja
movl
jb
cmp
ja
cmpl
mov
mov
jmp
movl
ja
push
push
call
xor
sub
subl
xor
or
sub
add
movl
or
movl
movl
add
movl
cmpl
movl
mov
mov
jmp
notl
movl
jg
pushl
push
push
call
not
sbb
or
or
xorl
add
movzwl
sbb
mov
xor
or
mov
sub
or
movl
cmpl
movl
mov
jmp
mov
movl
jne
push
push
pushl
push
push
call
xor
movzbl
or
xorl
mov
add
or
and
adc
movl
movl
sbb
mov
mov
subl
sub
incl
and
and
or
mov
sub
adc
pushl
cmpl
movl
mov
movl
jmp
movl
not
jl
pushl
push
call
sbb
xor
sbb
or
adc
mov
and
mov
cmpl
mov
not
movzbl
jmp
movl
jae
pushl
call
xor
sbbl
mov
mov
sbb
or
mov
xorl
lea
sub
push
pop
subl
xor
div
add
mov
sub
xor
pushl
mov
movzwl
or
pushl
cmpl
mov
mov
movzbl
jmp
movl
mov
je
pushl
pushl
push
call
xor
or
add
xor
adcl
xor
or
addl
adcl
mov
sbbl
pushl
and
or
pushl
mov
addl
pushl
addl
xor
xor
pushl
adc
mov
sub
pushl
orl
call
movl
add
movl
mov
or
movl
xor
movl
mov
mov
or
mov
mov
subl
sub
xor
mov
and
mov
orl
xor
shr
imul
pushl
call
xorl
dec
cmp
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
call
movzwl
sbb
movl
xor
xor
and
xor
add
add
xor
adc
neg
movl
cmpl
movzwl
movl
jmp
movl
movl
jbe
call
negl
xor
add
xor
neg
xor
adcl
cmpl
mov
mov
mov
jmp
movl
movl
jae
push
call
xorl
xor
adc
add
and
movl
adc
or
mov
movl
mov
andl
movl
mov
sbbl
call
cmpl
movl
not
movl
jmp
not
not
ja
pushl
push
push
push
call
mov
mov
sub
and
neg
adc
sub
or
add
sbb
lea
cmpl
not
mov
jmp
mov
jae
push
pushl
call
adc
mov
mov
sbb
andl
adc
adc
adc
mov
addl
lea
cmpl
mov
movl
mov
jmp
mov
movl
jge
push
pushl
push
pushl
push
call
xor
and
movzbl
and
mov
and
addl
mov
mov
sbb
mov
and
mov
sbb
mov
and
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
push
push
pushl
call
orl
addl
xor
add
xor
xor
sub
add
mov
mov
sub
or
sub
xor
cmpl
movzbl
movl
movl
mov
jmp
movl
movl
jne
push
push
push
call
or
sub
xorl
xor
or
mov
mov
or
sub
shl
cmpl
movl
movl
mov
jmp
mov
movl
jg
pushl
pushl
call
mov
xor
xor
sub
imul
mov
mov
sub
and
sub
add
not
shr
dec
or
mov
xorl
mov
sub
mov
mov
xor
add
or
mov
mov
mov
sub
shrd
shr
cmpl
mov
mov
jmp
movl
jg
push
call
adc
xor
add
adc
adc
or
adc
xor
and
mov
mov
xor
xor
or
mov
push
pushl
lea
push
shl
call
lea
push
mov
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
push
push
sbb
push
movzbl
sbb
movl
movl
or
movl
movl
neg
mov
mov
mov
mov
xor
and
subl
mov
cmpl
mov
mov
jmp
movl
movl
jb
pushl
call
and
adcl
mov
and
add
dec
xor
and
subl
add
mov
xor
xor
movzwl
xor
mov
orl
movl
neg
movl
adcl
mov
xor
cmpl
movl
movl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
sub
add
sub
mov
mov
or
mov
mov
sub
sub
cmpl
mov
movl
movzwl
mov
jmp
movl
movl
jge
pushl
push
push
call
add
inc
movzwl
and
adc
and
sub
subl
mov
add
imul
not
xor
or
mov
div
adc
sub
mov
mov
sub
and
mov
or
movl
movl
mov
mov
and
movl
movl
add
movl
sub
movl
movl
mov
mov
imul
add
or
and
sub
sbbl
mov
sub
andl
mov
sub
mov
sub
andl
add
sub
mov
andl
xor
subl
div
mov
adcl
sub
mov
add
movzwl
sub
mov
sub
movl
xor
movl
mov
mov
sub
and
movl
add
mov
xor
cmpl
mov
mov
mov
jmp
mov
je
push
call
and
or
sbbl
mov
adc
addl
movl
adc
add
mov
xor
div
cmpl
mov
movl
mov
mov
jmp
movl
movl
jb
push
call
or
mov
sub
xor
or
adc
andl
dec
sbb
and
cmpl
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
push
push
push
pushl
call
sbbl
sub
sbbl
mov
sub
mov
and
mov
or
and
sub
sub
mov
movl
and
movl
mov
mov
xor
movl
sub
movl
mov
cmpl
mov
movl
movzbl
jmp
movl
ja
pushl
push
pushl
call
mov
sub
movzbl
add
mov
orl
xor
mov
xor
mov
and
mov
xor
adc
xor
adc
push
xor
pop
movl
div
cmpl
mov
mov
movl
jmp
movl
movl
je
push
push
push
pushl
call
inc
inc
xor
sbbl
mov
xorl
xor
orl
div
movl
mov
movl
or
sub
sub
cmpl
mov
mov
movl
movl
jmp
movl
movl
jb
push
pushl
push
pushl
pushl
pushl
push
push
call
negl
xor
mov
and
mov
adcl
mov
adcl
movl
mov
cmpl
movl
movl
movl
jmp
movl
mov
jle
push
push
push
call
andl
addl
andl
sbbl
sbb
sbb
mov
andl
xor
orl
div
andl
imul
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
push
call
or
and
adc
or
neg
xor
orl
xor
sbb
imul
add
xor
mov
sub
mov
mov
subl
movl
movl
subl
movl
sbb
mov
cmpl
movl
mov
jmp
movl
jge
pushl
call
adc
subl
xor
xor
mov
sbb
adcl
or
cmpl
mov
movl
movl
jmp
notl
movl
jg
pushl
push
pushl
call
orl
sub
sbb
xor
xor
adc
andl
add
orl
or
and
or
mov
addl
xor
sbbl
div
sub
mov
sbbl
imul
or
add
xor
mov
incl
sub
cmpl
movl
movl
movl
movl
jmp
movl
je
push
pushl
call
addl
movl
subl
or
xor
andl
mov
cmpl
mov
mov
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
pushl
call
xor
add
sbb
or
adcl
mov
mov
adc
sub
xor
movl
mov
and
and
cmpl
movl
mov
jmp
mov
movl
jge
push
push
pushl
push
pushl
push
call
orl
xor
xor
adc
mov
xor
add
xor
mov
not
movzwl
sbb
sbb
add
cmpl
movl
notl
mov
notl
jmp
movl
jb
push
pushl
push
push
push
call
adc
movzwl
sub
adc
add
adc
andl
mov
sbb
or
xor
cmpl
mov
mov
jmp
movl
je
pushl
call
movzbl
or
mov
andl
mov
adc
addl
mov
sub
mov
movzbl
adc
adcl
sub
mov
mov
xor
add
sub
imul
movl
cmpl
mov
movl
jmp
notl
movl
ja
push
call
sbbl
mov
sbb
sub
sub
add
xorl
movl
xorl
movl
neg
mov
adc
and
mov
adc
add
adcl
add
add
or
cmpl
not
movl
jmp
mov
mov
jl
push
push
call
mov
adc
movzbl
adc
sub
notl
sbb
add
or
xorl
sub
mov
movl
xor
movl
adc
movl
cmpl
mov
mov
jmp
mov
mov
jg
pushl
push
pushl
call
andl
orl
not
add
add
mov
shr
sub
xor
xor
mov
lea
movl
push
orl
call
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
call
or
neg
add
sub
xorl
xor
add
cmpl
mov
mov
mov
jmp
not
jl
push
pushl
push
call
mov
xor
xor
or
xor
xor
sub
or
or
xor
or
mov
sub
and
or
mov
mov
sbb
or
xor
add
sbb
and
lea
mov
mov
mov
sub
or
movl
sbb
movl
cmpl
movl
mov
mov
jmp
mov
movzbl
ja
push
push
pushl
push
call
mov
mov
sub
imul
mov
mov
and
sbb
subl
xor
movl
movl
movzbl
adc
mov
movl
movl
movzwl
sub
movl
movl
subl
mov
add
mov
and
dec
sub
mov
sub
lea
mov
orl
mov
mov
sub
mov
imul
sbb
and
cmpl
mov
not
movl
movl
jmp
movl
movl
ja
pushl
push
push
call
add
orl
adcl
negl
andl
subl
movzwl
and
not
imul
cmpl
mov
not
jmp
movl
jl
pushl
pushl
call
adc
add
adcl
sbb
subl
mov
or
mov
lea
mov
cmpl
movl
mov
movl
jmp
mov
jbe
push
call
sbbl
and
movzwl
adc
sub
mov
mov
sbb
xor
or
and
mov
cmpl
mov
movl
not
jmp
movl
mov
jge
pushl
push
push
push
pushl
push
call
add
orl
sbb
add
neg
addl
sub
movl
adc
movl
movl
cmpl
mov
mov
mov
movl
jmp
movl
jg
pushl
push
push
call
sbb
xor
sbb
mov
sub
mov
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
pushl
push
call
mov
mov
sub
or
inc
add
sbb
or
and
add
mov
mov
mov
xor
xor
xorl
mov
addl
call
adcl
mov
orl
mov
orl
mov
cmpl
movl
mov
mov
jmp
movzwl
mov
jl
pushl
push
pushl
pushl
push
call
add
movzbl
adc
mov
xor
add
add
mov
sub
add
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
not
push
push
cmpl
mov
movl
movl
movl
jmp
mov
mov
jge
push
pushl
pushl
push
push
pushl
call
xor
add
subl
adcl
add
sbb
mov
sbb
mov
xorl
or
movl
jne
xor
xor
mov
sub
or
mov
mov
cmpl
movl
mov
movl
jmp
movl
je
push
push
pushl
push
pushl
push
push
push
push
pushl
push
push
push
call
or
decl
andl
adc
sbbl
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
andl
subl
cmpl
movl
je
and
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
notl
shl
ret
mov
xor
mov
decl
xor
and
shl
ret
xor
xor
ret
