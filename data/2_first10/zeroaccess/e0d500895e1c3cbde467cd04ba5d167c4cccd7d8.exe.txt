push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
push
push
fdivrs
jle
cli
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
bound
lahf
push
add
movsb
sbb
insl
and
lods
adc
jbe
aas
sub
incb
shrl
lock
inc
decl
popa
pop
or
push
push
jl
int
or
add
mov
pop
inc
popf
insb
mov
fstpt
movsl
and
subl
out
fdivr
cs
cmp
and
jae
addr16
sbb
out
aas
into
out
repz
sub
jo
adc
push
sbbb
push
mov
ficomps
adc
movsb
inc
inc
pop
xor
cmp
xor
frstor
mov
sub
pushf
jmp
mov
mov
loopne
mov
fmull
sub
push
jo
es
popf
mov
pop
fmuls
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
mov
xor
cli
jg
jle
jg
jle
xor
cmp
cld
mov
or
sbb
aaa
lret
fnstcw
xchg
sbb
mov
inc
jne
or
add
mov
mov
cmpsb
or
pop
ror
jo
shl
outsl
sbb
push
mov
adc
lods
fmull
jmp
fisttpll
inc
sbb
push
bound
fstl
ljmp
inc
adc
pop
mov
mov
sti
out
jb
sbb
lcall
jae
xchg
ljmp
pop
sbb
hlt
arpl
mov
jmp
jecxz
push
sahf
mov
divl
mov
jo
inc
and
jb
andl
xchg
dec
jb
cmpsb
push
in
add
leave
sbb
cmp
xorl
mov
or
sbb
pop
into
dec
mov
cmp
inc
iret
int
out
mov
loop
sbb
std
cmpsb
lret
or
subl
sbb
cwtl
fnstenv
sub
rclb
out
dec
adc
xchg
ret
rclb
or
sbb
popl
pop
mov
inc
xchg
inc
dec
xchg
mov
mov
icebp
imul
ja
and
rcr
call
fnstcw
sub
xor
xor
neg
jmp
cli
fcompl
jno
cmp
sbb
jge
jle
jg
jle
test
or
divl
clc
mov
nop
or
cmp
ret
pusha
repnz
pop
scas
push
push
mov
enter
inc
or
or
push
push
jle
hlt
sub
shlb
xchg
ret
fbstp
data16
insb
aas
or
jae
push
stos
daa
scas
sub
push
mov
out
in
mov
mov
lock
push
jae
xchg
divps
sbb
adc
outsb
int
int
enter
fisttps
into
addr16
mov
lret
mov
out
repz
loope
lock
in
imul
pop
in
fwait
jbe
cltd
jnp
dec
push
sub
call
push
push
bnd
pavgb
inc
jg
repnz
xchg
sbb
les
mov
mov
xor
pop
cltd
daa
adc
rclb
dec
xchg
xchg
xor
call
es
loopne
adc
popa
in
subb
icebp
lcall
cltd
js
into
xchg
adc
mov
cmp
into
sqrtps
xor
add
movsb
fs
adc
add
mov
cs
mov
xchg
jmp
jno
add
cld
push
fidivrl
pushf
subl
ds
inc
adc
add
in
dec
sti
mov
and
dec
jmp
jns
in
loope
imul
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
sbb
cmpb
cli
jg
jle
or
inc
or
jo
or
es
jmp
pusha
fldt
mov
push
fmuls
mov
cmp
ja
aad
sbb
imul
data16
loope
sahf
loope
leave
fnstcw
out
or
gs
xor
insb
cmpsl
outsb
fwait
pop
cwtl
popl
js
mov
loop
push
clc
sbb
xchg
cmpsb
bound
dec
gs
jae
orb
xchg
iret
sub
test
adc
dec
dec
add
mov
cmc
stc
fucom
orb
or
add
call
dec
add
aaa
mov
fidivrl
push
aad
int3
imul
test
adc
or
jae
jnp
fstl
icebp
cld
stos
add
add
pop
push
ss
or
xor
lds
rcll
sub
les
lds
jg
push
std
popl
adc
mov
lcall
pushf
add
jge
test
push
loope
mov
or
jg
sahf
push
cmpsl
push
jge
push
push
adc
mov
lds
inc
pop
rcrb
fwait
addr16
in
mov
xor
sbb
mov
lods
imul
js
sahf
bound
scas
push
cmp
scas
imul
push
xchg
push
icebp
loop
cld
icebp
stc
mov
jb
imul
mov
jmp
xchg
mov
push
jo
adc
dec
xchg
fcmovnb
inc
push
js
jle
jg
jle
push
or
cmc
imul
icebp
lods
sbb
aam
daa
repnz
xchg
xor
push
jno
mov
push
adc
adc
movl
cltd
add
pop
sub
add
movsl
xchg
les
sub
leave
push
add
adc
xor
fnsave
in
sti
xchg
push
inc
into
enter
sub
sbb
rcrl
ret
mov
xchg
or
je
push
dec
movlps
xlat
sahf
cmpsl
popf
push
sbb
push
pop
add
jae
add
popa
adc
fs
aam
loope
xchg
sbb
xor
jns
les
xchg
push
or
ret
push
lcall
dec
push
enter
push
adc
add
icebp
movsl
test
adc
imul
xchg
fstl
filds
sbb
fs
xchg
jb
push
in
inc
sbb
lods
divl
outsb
mov
sbb
xor
mov
xchg
jecxz
lret
int3
test
sahf
ficoml
sbb
out
lcall
xchg
outsb
std
stos
add
dec
inc
xor
movsl
mov
cmc
mov
fbstp
rcrl
adc
xchg
cmp
jecxz
movsb
xchg
aaa
mov
xor
inc
imul
inc
and
clc
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
mov
jns
jle
jg
jle
lea
aad
mov
mov
fdivs
xor
arpl
lods
and
push
jge
ss
imul
inc
lret
add
js
push
or
aam
rorb
mov
int
test
cmpsb
push
dec
call
or
push
push
inc
add
ljmp
mov
popf
repnz
mov
insb
jnp
iret
fbld
sub
movsl
sbb
call
push
cmc
repnz
adc
mov
jge
movb
sub
cld
pushf
lea
and
mov
lret
js
scas
mov
or
xor
and
mov
and
jnp
push
xchg
adc
maxps
adc
daa
outsl
das
lock
pusha
adc
pop
xor
je
xchg
fimuls
sub
es
stos
push
adc
cmp
mov
loop
movsl
jg
xchg
fstpl
mov
cwtl
test
jge
aaa
xchg
outsb
js
push
push
jl
sbb
mov
pop
in
push
cwtl
hlt
outsl
fadds
xlat
mov
dec
dec
pop
sbb
sahf
add
adc
mov
sbb
pop
sti
shlb
int3
pop
mov
dec
test
mov
data16
xchg
xor
ret
pushl
inc
aaa
or
push
jno
movsl
cmp
lret
cmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
test
pop
jle
cli
jg
jle
lret
xor
lods
loope
pop
xor
xchg
test
add
cwtl
cmp
pushl
xchg
ret
adc
and
idiv
push
loope
adc
lcall
dec
lds
inc
mov
imul
or
das
dec
add
pop
fldcw
xchg
mov
dec
dec
pop
adc
xor
cmp
adc
inc
adc
rclb
faddl
push
sbb
ljmp
push
lea
cs
arpl
in
fs
icebp
cmp
leavew
sbb
or
iret
inc
add
jmp
cli
lock
pop
or
sbb
add
fnsave
push
loopne
pop
sub
fmul
sbb
ror
push
jnp
push
jg
xor
ljmp
inc
xor
rcrl
xchg
aad
sbb
and
sub
fistpll
cvttps2pi
pop
in
loopne
lods
and
js
inc
add
add
jne
jp
lods
push
push
inc
fwait
cmp
cli
imul
fidivrl
ror
dec
xchg
pop
inc
sub
dec
sub
xor
iret
sbb
movsb
daa
cmpsb
idivl
aaa
sub
mov
je
lock
jo
test
push
and
mov
pushf
and
sbb
aad
cmp
test
mov
mov
lret
das
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
clc
jns
mov
xor
pop
jno
mov
into
xor
xor
and
insb
aam
pop
jle
mov
xchg
scas
pushf
fmul
pop
addb
mov
and
das
inc
negb
xor
push
mov
scas
mov
pop
in
shll
push
repz
mov
je
shll
pop
je
inc
xchg
mov
dec
sbb
or
adc
mov
sub
int
mov
mov
repnz
cmpsb
stos
sbb
pushf
test
and
push
frstor
xchg
sbb
xchg
mov
icebp
loope
in
loopne
mov
pop
aas
add
stos
lea
loope
mov
and
ret
fbld
leave
push
andb
lahf
xor
add
movsl
dec
inc
mov
mov
movsb
push
data16
mov
mov
fisubrl
push
loope
jno
or
xchg
ja
mov
add
lds
push
push
and
in
sbb
daa
test
mov
push
popf
add
gs
mov
and
mov
push
fdivl
xchg
dec
scas
push
push
pop
dec
das
test
lahf
inc
imul
insl
mov
xor
mov
inc
mov
fldcw
data16
dec
jbe
cmpl
sub
icebp
sbb
jmp
orb
sti
xchg
sbb
xchg
mov
add
jmp
cmc
dec
and
jno
push
mov
fildll
addr16
add
cli
jg
jle
sub
mov
lods
and
fwait
jnp
dec
inc
loop
cmp
sbbl
sub
loope
arpl
or
inc
in
lahf
inc
add
push
jb
push
sub
out
push
shl
mov
or
in
call
fdivl
adc
je
mov
in
jno
mov
or
test
lret
in
aam
xor
sub
push
push
dec
sub
dec
push
leave
push
mov
sub
stos
test
cmc
pop
test
jle
jb
or
add
in
fwait
mov
movsb
fisubs
lea
das
mov
sbb
mov
sub
fs
add
adc
sbb
pop
arpl
outsb
push
sub
inc
nop
adc
insb
mov
sub
imul
cmp
icebp
test
xchg
ret
cld
jb
mov
lods
jnp
jnp
jno
add
xchg
sub
inc
stc
pop
pop
pop
pop
popf
and
xchg
jecxz
lcall
push
enter
xor
cmp
insl
test
inc
mov
inc
xlat
in
inc
repz
movsl
or
decb
fldl
and
cmpsb
mov
sub
shl
int3
mov
cmp
push
xorb
mov
shrb
adc
jp
cmc
test
and
jno
das
or
xchg
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
sub
faddl
lcall
jle
or
xchg
xchg
je
cmpsl
pop
sbb
adc
jnp,pt
and
pusha
out
mov
push
inc
jnp
daa
mov
sub
push
or
mov
pop
jle
std
loopne
jmp
jg
xchg
jp
cmp
push
push
test
leave
sub
pop
push
jmp
pop
pop
sub
mov
into
lahf
in
movsl
pushf
xchg
jmp
cli
out
sbb
jg
fsub
inc
gs
data16
lahf
or
inc
repz
mov
mov
cmpl
imul
xchg
pop
mov
inc
mov
mov
psrlw
pop
xchg
and
and
push
lods
or
out
int3
mov
sbb
dec
test
nop
lods
je
movsl
inc
cmp
shrl
sub
push
in
pop
jne
subb
xchg
xchg
jmp
pop
inc
sbb
mov
movsl
push
mov
aad
icebp
imul
mov
cmp
rorb
push
cmp
dec
popf
mov
cmpsb
xchg
into
out
push
xchg
lock
sbb
pop
sbb
jecxz
mov
xor
and
pop
dec
or
mov
sbb
je
inc
jns
or
add
int3
aas
mov
in
int
loope
lock
push
dec
adc
fdivs
inc
adc
push
fs
sbb
in
loope
pop
push
cmpsb
push
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
sarl
add
cli
jg
jle
outsb
sub
jge
bound
insl
jb
add
mov
mov
dec
test
fists
mov
adc
push
inc
idivb
insb
dec
sub
je
add
aad
mov
in
cmp
int
mov
mov
sbb
pop
nop
dec
cmpsb
jecxz
out
mov
in
mov
dec
in
lods
sub
dec
sub
cld
imul
fyl2x
cwtl
jo
jae
jle
add
int3
adc
cmp
pop
pop
out
out
mov
dec
cli
adc
add
pop
ror
inc
pop
pop
mov
out
xor
add
xchg
out
sahf
sub
aas
inc
mov
nop
sbb
stos
fwait
psubusw
into
sbbb
jbe
sub
enter
popa
push
test
sbb
std
push
inc
mov
mov
mov
fisubl
call
xor
stos
push
pop
mov
ret
jle
xor
push
popf
xlat
ds
pop
dec
aad
or
or
inc
dec
xchg
cmp
shll
ja
mov
insl
lods
pop
test
jmp
lahf
or
jg
pop
pushf
pop
scas
in
mov
xchg
push
push
andb
push
mov
test
jo
xor
in
cmp
xchg
pop
sub
popf
mov
dec
cmp
push
push
mov
add
aad
push
xchg
sbb
cli
lahf
mov
cmp
shr
in
adc
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
dec
arpl
jns
push
jle
cli
jg
jle
fsubrl
add
repnz
xchg
push
push
cmpsb
jecxz
sbb
das
adc
call
add
push
sub
or
add
and
js
outsl
sub
add
fistps
add
xor
adcb
mov
test
cld
mov
mov
mov
daa
pop
dec
mov
mov
sub
mov
or
mov
es
add
xchg
insl
rcrb
outsb
in
add
in
jmp
dec
cmpsl
sbb
stos
mov
xlat
ljmp
adc
mov
jg
fdivr
dec
pop
stc
cli
push
test
inc
mov
insl
aas
imul
ret
inc
push
add
inc
ret
aam
jmp
mulb
in
or
fs
mov
rcrl
stc
mov
stc
lods
repz
pop
xchg
add
xor
popa
loopne
jge
jae
mov
outsl
gs
adc
test
adc
sti
lds
pop
jne
cmp
jo
into
loopne
inc
xchg
aaa
adc
inc
sbb
into
std
adc
pushf
insl
xor
add
mov
mov
addr16
loop
iret
std
daa
mov
xchg
adc
popf
out
inc
lret
cmpsl
and
fwait
jne
mov
xor
loopne
cmpsb
nop
rcll
andw
cmp
fdivr
adc
dec
rorl
clc
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
imul
cs
jle
jg
jle
pusha
pop
out
xlat
mov
sub
orb
out
flds
or
leave
ret
cmp
lret
loope
and
sbb
mov
shrb
mov
xor
xor
xchg
cmpsl
pop
pop
inc
ljmp
adc
xor
loopne
stos
pop
ficompl
fwait
ds
cs
or
jno
mov
sub
cwtl
test
and
pop
rclb
std
or
mov
jae
in
adc
mov
cmp
or
add
imul
enter
jl
and
ds
nop
stos
inc
bound
jae
aam
dec
xor
dec
push
add
push
daa
jns
sub
mov
jnp
inc
pop
jge
ljmp
sti
push
inc
mov
shll
cmp
pop
and
btc
xorb
push
stos
pop
cmp
pusha
mov
dec
cwtl
arpl
decl
sbb
mov
fstp
ficompl
rcr
mov
aad
xchg
or
pushf
test
dec
in
pop
sbb
adc
sub
cld
xchg
xchg
orl
or
sti
leave
xor
lea
cmpsl
pop
cs
mov
cmp
push
cmp
lcall
pop
loopne
enter
daa
push
popa
aam
inc
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
ds
popf
mov
cli
jg
jle
sbb
shrb
push
dec
dec
enter
fs
in
test
fisubrs
ljmp
stc
inc
inc
fwait
dec
pop
push
lds
out
or
jbe
xor
in
data16
pop
adc
rorl
popa
adc
adc
outsl
in
xchg
sub
pop
sbb
lods
adc
add
cli
adc
mov
xchg
jmp
push
mov
push
xchg
xchg
sbb
adc
outsb
adc
sbb
push
jae
imul
shl
insb
sbb
sub
mov
pop
enter
ljmp
aas
aaa
or
or
mov
dec
push
aas
into
or
inc
xor
and
xchg
lahf
jp
pop
repz
rorb
xchg
jle
cmp
mov
mov
cmpsl
xchg
orb
adc
sub
inc
je
je
cmp
or
sbb
push
sbb
ja
es
imul
outsl
cltd
jno
push
mov
cmp
mov
pop
xchg
cmp
pop
lods
and
or
imul
in
lret
cmc
mov
mov
insb
jge
in
xchg
push
movl
shll
mov
ret
xlat
bound
and
jge
cltd
adc
inc
mov
jecxz
sub
test
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
ljmp
jle
jg
jle
idivb
fbld
idiv
stos
dec
mov
push
add
lret
and
lock
js
or
out
das
popf
lcall
pop
mov
daa
or
xor
movsl
dec
fsubrl
dec
faddl
mov
and
loopne
jg
testb
lahf
push
insb
xchg
fwait
cmp
test
push
popa
mov
dec
adc
or
xchg
mov
nop
mov
mov
daa
shr
ljmp
cmp
pushf
adc
and
lods
xor
mov
mov
repz
lods
jmp
testb
cmc
mov
outsl
mov
inc
mov
cwtl
sub
or
shll
and
subb
movb
sub
fdivp
add
xor
jmp
cmp
rclb
pop
enter
push
mov
mov
test
sbb
cmp
pop
add
rcll
ret
sbb
rcll
repz
jae
push
cld
ds
iret
pop
cwtl
push
test
not
jbe
fwait
adc
movsb
sbb
mov
dec
test
sbb
popa
inc
push
xchg
lock
jno
cmc
jge
ret
xor
lcall
inc
fbld
sub
mov
ss
test
add
add
jl
aaa
sbb
ror
push
push
push
cmpsb
or
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
invd
mov
jle
cli
jg
jle
insb
scas
pop
lea
sbb
fdivs
inc
pop
out
das
cmc
scas
jno
mov
sbb
jmp
cli
xor
push
jge
andb
push
add
cmp
add
jnp
mov
test
mov
inc
mov
xlat
lods
cmp
leave
or
xchg
cmp
inc
sub
or
bound
scas
out
mov
rcll
jnp
mov
cltd
mov
cmpb
loop
pop
sub
lret
cmc
je
or
xchg
test
push
push
rcrb
sub
push
insl
enter
push
outsl
or
pop
rclb
mov
cmc
fcomip
lock
addr16
xlat
repnz
das
mov
push
push
adc
enter
sbb
mov
mov
mov
iret
test
inc
jae
pop
test
loope
mov
fistpll
adc
mov
push
mov
fldl2t
mov
xchg
idivl
push
ss
aaa
pop
insb
xchg
mov
pop
loope
inc
jmp
push
mov
mov
push
popa
mov
jns
cwtl
xchg
pop
jge
sub
aas
clc
xlat
jg
in
cli
dec
sahf
push
push
mov
fisubrl
or
addr16
fwait
xor
xchg
test
bound
ret
gs
jp
mov
ja
pop
lods
loop
fstpl
in
xor
mov
xchg
lret
stos
and
pop
sarb
lods
mov
push
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
sub
cli
jg
jle
inc
add
test
inc
pop
mov
mov
sub
xchg
mov
fldl
data16
cs
aad
aaa
scas
insb
xor
nop
enter
popa
dec
out
out
idivl
sahf
pop
mov
lds
gs
adc
mov
insb
sbb
xchg
movsl
xchg
pop
sub
jg
fcoms
mov
bnd
and
je
aad
fistl
xchg
dec
xchg
mov
ljmp
mov
jg
pop
and
rcrb
and
add
or
pop
and
cwtl
js
push
push
insb
or
repnz
mov
insl
mov
xor
cmp
sub
jge
adc
cwtl
jae
inc
xor
fwait
adc
into
mov
cmp
mov
daa
jne
insl
mov
gs
subl
push
aas
neg
add
sub
stos
imul
popl
mov
inc
adc
xor
fwait
inc
aas
xor
mov
push
mov
insl
cltd
jbe
add
loope
movsl
clc
inc
pop
sbb
mov
push
add
mov
cmp
jle
stc
in
movsb
aad
adc
pusha
push
add
mov
rorb
push
sbb
je
aaa
std
jl
int
xor
mov
mov
sbb
sbb
jne
fsub
or
mov
call
mov
mov
add
pop
jmp
add
mov
adcb
sbb
jg
jle
xchg
xchg
dec
loopne
fidivrs
add
jno
cld
fwait
pop
jecxz
and
fsubs
push
shll
nop
add
xchg
std
hlt
dec
mov
xchg
stc
sbb
adc
addr16
stc
testb
rcll
decb
pop
push
add
mov
in
jl
add
push
add
pop
cmc
rclb
mov
add
gs
mov
cmc
sahf
fidivrs
in
pop
std
and
lahf
fildl
mov
push
cmpsl
or
dec
aaa
lods
in
pop
jne
jp
mov
and
jns
jae
mov
inc
push
jae
dec
or
cmpl
sbb
movsl
add
dec
stos
or
cs
lea
cld
pop
cmpsb
bound
arpl
and
sbb
push
fnstenv
imul
and
or
ds
jbe
out
mov
stos
jp
stc
inc
int
hlt
imul
test
outsl
setnp
and
repz
dec
inc
jnp
daa
push
enter
mov
jp
pop
aas
ficompl
imull
into
mov
inc
subl
fsts
push
ss
ss
jo
notl
cs
lock
mov
test
into
sbb
out
push
mov
aas
aam
pop
push
sub
lret
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
jnp
adc
jle
inc
xchg
add
enter
sbb
imul
pusha
push
lods
sti
or
data16
bound
adc
hlt
sbb
into
push
mov
jae
dec
push
jnp
xchg
pop
arpl
pop
xchg
adc
int
adc
dec
mov
insb
mov
cmp
mov
enter
xchg
push
lahf
mov
cmpsb
clc
mov
shr
xor
and
loopne
sub
jl
test
ficoml
and
scas
pop
inc
xor
inc
xchg
mov
inc
fwait
or
cmp
mov
sbb
pusha
sbbl
sub
stos
sub
or
cld
arpl
hlt
test
sub
adcb
dec
je
add
jns
jge
mov
incl
push
add
mov
push
or
ljmp
adc
mov
sbb
es
sbb
push
inc
push
lcall
push
jecxz
shll
push
xchg
or
jmp
out
orl
clc
shrb
ret
mov
outsb
int
push
push
adc
sbb
jecxz
rorl
xchg
nop
adc
sub
fwait
lea
pop
xchg
xor
loop
in
push
adc
add
mov
xchg
dec
push
movlps
adc
ds
dec
incb
lods
sar
stos
repz
mov
mov
mov
dec
lahf
jl
repz
add
orl
ljmp
add
jb
ret
xchg
xorb
loopne
lods
popf
jmp
pop
aas
sbb
xor
ret
sbb
je
dec
cmp
push
popf
fadds
cwtl
xchg
push
mov
ja
cmp
fcoml
sub
push
test
push
and
dec
jno
push
mov
adc
bound
jecxz
and
lcall
sti
add
xor
out
js
pusha
cmp
or
repz
push
stos
xchg
mov
and
add
dec
cmc
rorb
jmp
jp
sbb
pop
inc
int3
dec
clc
xchg
outsb
jo
xchg
push
pusha
ja
andb
pusha
inc
lock
inc
jno
sub
mov
add
clc
mov
pop
mov
cli
or
dec
test
inc
mov
and
and
fs
dec
pop
add
pop
sbb
cli
or
shlb
cmp
jl
jbe
mov
push
sub
jmp
lods
mov
inc
xchg
push
sbb
mov
mov
mov
push
sbb
jle
mov
sahf
xchg
adc
cmpsb
cmpsb
gs
insl
inc
test
xor
out
lret
es
lea
xchg
mov
out
cwtl
in
inc
les
test
inc
add
sub
inc
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
fcomip
push
and
jle
pop
jl
jle
xchg
mov
cmp
and
insl
add
xor
das
pop
movsl
mov
dec
inc
bound
aad
int3
jo
lahf
adc
or
dec
lods
fwait
xlat
nop
or
push
in
cmp
cmc
fs
stos
aam
mov
cmc
add
cmp
push
cli
sbb
test
mov
test
sbb
testl
sbb
lods
push
into
fildl
mov
xor
enter
pop
orb
aaa
bnd
push
pop
mull
add
enter
sahf
sub
shll
push
mov
sbb
hlt
or
rorb
imul
out
jp
push
pop
mov
push
and
jno
push
dec
pop
dec
xchg
adc
popf
stc
nop
packsswb
shrb
jo
nop
add
shll
jne
xchg
jle
notb
pop
leave
or
ret
das
mov
bound
aas
mov
mov
mov
add
cld
pop
cmpsb
test
mov
inc
xchg
leave
movsl
fisubrl
add
cmp
jmp
andl
flds
aad
out
adc
and
in
pop
imul
ljmp
sbb
jb
push
jge
fdivrs
inc
lahf
push
adc
hlt
enter
inc
cmpsl
mov
shll
mov
mov
int3
ja
cmp
jae
mov
xor
dec
in
jmp
jns
aaa
adc
xor
jno
sbb
mov
mov
das
dec
jbe
add
dec
dec
cmp
cld
sub
cmpsl
jg
loop
xor
movsb
in
fcmovnb
scas
adc
jbe
xor
sub
cmc
sub
jge
neg
pop
mov
dec
iret
mov
pushw
int3
rclb
stos
pop
mov
test
in
loope
cmpsb
insl
icebp
xor
test
lea
or
xlat
push
movsl
and
addl
ret
imul
inc
sbb
mov
sbb
mov
pop
outsl
jno
inc
sbb
pop
les
daa
and
fsubrl
cmpsb
add
subb
mov
ret
jnp
mov
mov
inc
cltd
inc
xlat
push
negl
repz
xlat
cli
jnp
dec
aas
inc
add
rcrb
push
test
dec
cmpsb
into
test
jbe
mov
push
xchg
mov
xchg
cmpsl
fidivrl
push
mov
cmp
dec
push
and
pop
inc
incb
stc
pusha
inc
xchg
or
call
cli
int
aaa
jnp
repnz
mov
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
ret
or
jle
pop
jl
jle
mov
jb
sbb
movb
and
das
mov
add
out
or
les
jae
cltd
sbb
in
dec
mov
fisubl
dec
sub
arpl
push
sbb
xchg
dec
icebp
xchg
sbb
fs
sar
ret
daa
mov
movsb
sub
ds
test
fimull
and
cmc
arpl
cmpsl
enter
sub
into
jne
in
pushf
add
xchg
test
xchg
fwait
pop
xchg
cmp
xor
out
add
or
cs
sarl
add
clc
xchg
cwtl
push
jno
inc
mov
mov
mov
dec
in
fidivs
or
addl
mov
std
fstpl
aam
push
out
jne
inc
mov
out
data16
push
sti
xor
cld
mov
ds
push
pop
ja
test
sti
sbb
push
insl
jnp
cmpb
jecxz
in
or
loopne
inc
mov
cs
or
mov
cltd
xchg
fstps
mov
cmp
testb
js
adc
jecxz
iret
or
cmp
cmp
dec
test
jecxz
inc
push
cmp
movsb
outsb
loop
test
in
xchg
je
pushf
cltd
sbb
movsb
pop
popa
cmp
imul
cmc
push
inc
repnz
push
dec
mov
mov
mov
pusha
dec
inc
int3
stos
ss
jo
rep
std
pop
mov
inc
pop
test
js
movsl
mov
push
jb
sarb
xchg
pop
push
shrb
mov
arpl
mov
and
xor
inc
je
cmpsl
inc
and
cmp
mov
dec
aaa
je
pshufw
or
mov
add
add
jecxz
mov
push
mov
aam
rcrb
addr16
aad
dec
dec
in
mov
out
jnp
jae
cltd
aas
fistpl
stos
in
aam
fimuls
xchg
xor
push
icebp
negb
sahf
int3
sub
pushf
iret
in
dec
leave
and
push
push
sub
imul
cmovno
pop
or
fisubrs
ljmp
jle
jb
mov
mov
sub
sbb
mov
pop
jno
sub
nop
rclb
cmp
or
insb
mov
mulb
mov
push
mov
mov
sbb
dec
xchg
imul
adc
rorl
cmp
dec
xchg
and
cmp
fsubl
mov
mov
add
pop
push
cmp
rolb
mov
loope
jbe
cmp
cli
mov
lds
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
jmp
jle
jl
jle
sbb
cmpsl
lret
aaa
inc
clc
stc
ret
aaa
xor
div
imul
or
ds
fs
xor
xor
jmp
mov
xor
lcall
add
pop
ja
lock
sahf
cs
mull
sti
enter
popa
sbb
lods
call
pop
pop
into
xchg
or
stos
outsl
xor
sbb
inc
test
sbb
faddp
xchg
notl
pop
pop
ljmp
shrb
xor
inc
sub
lods
jno
mov
push
xor
add
mov
das
jb
adc
aad
adc
cmpsb
into
add
cli
loopne
xor
inc
xorb
mov
cmp
leave
dec
cmp
ljmp
and
and
push
mov
and
int3
je
or
cmpsl
xor
mov
imul
sub
out
das
mov
adc
repz
xor
adc
sub
sbb
rcrb
pushf
inc
insl
test
xor
stos
loope
jmp
scas
mov
add
mov
pop
ljmp
sub
je
dec
pop
scas
mov
sbb
dec
cld
sub
out
in
addb
xchg
inc
xlat
add
inc
xchg
push
dec
pop
nop
cmc
sbb
lahf
pop
pop
adc
orl
xorl
mov
mov
mov
push
cltd
lret
pop
aaa
xor
or
fcoms
pop
subb
nop
lock
adc
addr16
jns
lcall
rcrb
outsl
pop
in
imul
sbb
cmp
xchg
and
repz
mov
xchg
fadds
sbb
cmp
arpl
in
jb
sahf
rolb
lock
push
movsl
cwtl
sbb
movsl
adc
cmp
testb
loopne
leave
aas
push
mov
sbb
cmp
repnz
insl
test
aaa
sbb
icebp
scas
pop
dec
nop
mov
sbb
inc
mov
jecxz
mov
mov
imul
sbb
loope
dec
stos
es
roll
cltd
lret
test
jns
pop
sbb
mov
mov
or
mov
push
dec
xchg
out
ja
test
jp
cmc
inc
push
adc
fs
loop
mov
and
sbb
test
push
push
ds
inc
mov
mov
jns
js
jecxz
mov
test
xor
jmp
add
dec
popa
jno
jne
xor
jle
outsl
fsts
pop
sbb
pop
jl
jle
and
stc
jne
xchg
adc
jecxz
sbb
and
fmuls
add
xchg
aaa
stos
out
push
mov
mov
enter
lahf
mov
mov
jp
xchg
cmp
sbb
fisubrl
jmp
into
pop
adc
inc
or
imul
push
stos
and
imul
pushf
push
nop
xor
bound
sbb
pop
xchg
nop
data16
lahf
xor
xor
xchg
pop
pop
mov
insb
mov
shrl
mov
mov
out
imul
jle
mov
sbb
sbb
mov
mov
add
sbb
pop
dec
inc
cli
cmpsl
sbb
bound
pop
cmp
iret
mov
dec
and
push
xchg
cmp
or
push
mov
push
jg
ror
dec
mov
jmp
sbb
call
xor
mov
shlb
mov
mov
xchg
dec
arpl
pushf
inc
or
inc
or
pop
push
or
jno
bound
fmuls
jne
dec
std
stos
daa
xchg
xor
sbb
lret
add
dec
imull
stc
scas
cwtl
add
push
and
cld
dec
xlat
mov
out
pop
mov
subb
scas
xchg
inc
add
xchg
jp
adc
sti
enter
sbb
lret
je
das
xchg
lock
in
or
xlat
push
adc
dec
addl
xchg
out
xchg
mov
jg
mov
jae
jns
cld
jle
fnsave
out
gs
fsubp
shll
fdivrp
test
ss
ret
out
mov
xor
outsl
repz
dec
mov
dec
test
adc
stc
xchg
aas
cld
push
nop
cmpsl
insl
mov
data16
push
lahf
repnz
sarb
adc
cmp
sub
pop
inc
jb
lret
inc
add
sub
cmc
inc
mov
lcall
repz
fsubs
cld
lock
pop
add
or
or
pop
push
mov
inc
cwtl
xor
pop
push
into
push
mov
xchg
enter
les
xchg
mov
pushf
mov
xor
cmp
into
pop
mov
mov
mov
daa
sbbl
test
aad
in
adc
xchg
push
fisubrs
jo
std
adc
out
clc
call
stc
sbb
call
gs
pop
inc
xor
insl
push
aas
ljmp
and
add
jge
adc
rcrb
lds
inc
fsubrs
test
movsb
loop
out
xchg
lds
mov
arpl
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
xchg
dec
mov
mov
jl
jle
lret
aad
pusha
stc
or
incb
jbe
inc
xor
outsb
xchg
pop
inc
pop
jae
mov
jo
mov
testb
fwait
inc
into
push
cwtl
mov
outsl
push
push
inc
xor
xor
jecxz
aad
ljmp
loop
pop
mov
dec
inc
insb
ds
add
test
xchg
leave
fwait
pop
jnp
mov
sbb
test
jnp
jecxz
ret
sahf
ja
xchg
daa
add
rcl
sahf
ds
dec
push
jns
mov
gs
cmp
ret
cmpsl
sub
sub
cs
fstps
in
jge
jo
rol
fisubrs
jo
idivl
mov
imul
mov
adc
pop
and
mov
arpl
repz
sbb
and
push
mov
push
mov
pop
dec
cmp
xchg
xor
dec
addb
push
out
pushf
sbbb
repnz
insb
cmp
cmp
mov
scas
jmp
push
mov
or
pop
xor
mov
jno
aam
mov
out
adc
ljmp
nop
bound
add
xchg
fdivl
movsl
sub
imul
loop
mov
add
push
sub
sub
insl
icebp
jno
or
mov
mov
movsb
repnz
dec
ret
aas
lock
bound
dec
ret
mov
adc
cmp
or
rcll
lahf
shrl
xlat
das
xchg
jecxz
or
in
push
sbb
and
mov
loop
push
mov
ret
sub
sar
mov
lods
subb
add
lret
sbbl
cwtl
ljmp
cmp
iret
mov
jp
pop
xor
std
and
jp
xchg
sbb
sub
jno
les
gs
and
cli
jne
mov
sub
dec
inc
sub
inc
sbb
inc
and
cmp
pop
adc
push
jbe
test
aas
jo
sbbl
sub
pop
push
xchg
jl
ljmp
rorl
sahf
pop
jnp
push
inc
mov
adc
fcomip
push
mov
test
inc
pop
inc
xlat
jl
aaa
sbb
negl
sti
cwtl
push
adc
movsl
jo
xchg
bound
stos
stc
push
and
inc
mov
std
push
jns
push
cmpsl
xchg
ss
inc
jmp
in
negl
xchg
js
testl
jmp
sub
xchg
mov
inc
js
stc
adc
iret
cmp
in
pop
sbb
scas
pop
inc
jbe
mov
hlt
cmpsl
testl
test
test
rolb
shr
imul
add
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
loope
mov
jl
jle
cld
mov
and
mov
es
clc
les
dec
jbe
xchg
mov
and
in
jl
movsl
sub
jle
sbb
dec
adc
sti
loopne
xchg
imul
or
pushf
insl
add
or
pop
sbb
push
xor
cmp
ljmp
mov
in
lods
xor
outsl
nop
ret
push
and
rclb
mov
aas
rclb
dec
xchg
jge
push
cwtl
cmpsb
sub
mov
in
mov
or
in
inc
addr16
or
idivl
pop
icebp
ja
stos
push
inc
xchg
aad
push
pop
cmp
clc
or
mov
pop
cmpsl
call
jnp
jae
and
fdivs
loope
sub
jne
lds
idivb
inc
mov
xchg
popa
pop
js
sbbl
jecxz
pop
inc
scas
idivl
fnstcw
leave
push
and
popa
jbe
lea
rcll
mov
add
stos
int
stos
aad
subl
adc
adc
movsl
arpl
int3
mov
xchg
js
sub
rcrl
push
lods
or
jbe
xchg
cmp
jns
push
xchg
push
mov
repnz
or
mov
jp
lock
push
fsubl
xor
mov
jge
mov
adc
mov
cmp
sti
out
xchg
outsb
call
sahf
fnstsw
movsb
movsb
xor
mov
add
rcrl
popa
rorb
es
mov
int
jecxz
jbe
lret
mov
aas
addr16
or
add
add
jge
mov
pusha
mov
or
mov
mov
sub
out
out
sbb
in
jle
jl
push
std
dec
push
or
ficoms
cltd
sbb
in
int
js
scas
cld
psubusw
xor
imul
rclb
jecxz
cltd
scas
cmpsb
fldenv
mov
dec
dec
jo
mov
dec
fmull
push
xchg
dec
xorl
ret
sub
dec
imul
stos
add
jmp
xlat
test
pop
in
int
hlt
push
mov
lret
push
jne
jmp
sbb
mov
dec
enter
mov
das
push
jo
test
mov
xlat
cld
xchg
mov
nop
push
and
dec
outsl
pop
stc
pop
xchg
xor
xchg
cmp
int3
outsb
sub
push
add
lret
fdivr
int3
repz
mov
cmp
movsb
and
adc
scas
xlat
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
mov
jle
pop
jl
jle
divb
daa
shll
mov
lahf
mov
push
push
out
test
or
call
fidivrs
dec
loopne
fsubl
pushf
pop
enter
or
lret
aas
xchg
divb
popa
lret
adc
lods
les
sub
or
int3
mov
popf
aad
add
into
and
sahf
repz
sub
enter
repnz
das
pop
call
adc
pop
imul
xor
sbbb
mov
inc
xchg
mov
adc
or
mov
cmp
push
shll
mov
fstpl
lea
add
subb
pop
dec
push
jmp
xor
add
scas
inc
testb
xchg
je
or
outsb
mov
fisubs
icebp
cmp
sub
mov
rcrb
loopne
xchg
jne
icebp
rol
call
fisttpll
pop
jno
addr16
ret
xchg
pop
in
cmc
mov
push
sti
jl
lret
fstp
sarb
rcrb
mov
mov
sub
adc
xor
clc
pushf
adc
cmp
lcall
insl
sbb
push
or
jp
and
or
pop
push
out
pmaxsw
sti
loop
sbbl
pop
test
mov
add
gs
pop
jp
lds
and
inc
addl
daa
mov
ja
mov
into
mov
sbb
adc
cmp
add
xlat
mov
and
int3
push
sbb
xchg
int
lret
pop
mov
out
fwait
cmp
arpl
nop
dec
out
inc
cmp
clc
rolb
mov
dec
dec
fcompl
sbb
mov
or
lcall
insb
cmp
cmp
loop
lods
iret
test
and
jae
fsubs
clc
idivl
ja
xor
xchg
jno
mov
out
mov
js
xor
pushf
fs
fiadds
dec
dec
mov
test
repz
pop
mov
out
cmpsb
mov
out
bnd
fsub
sti
not
mov
mov
push
in
fsts
push
sub
jmp
or
cltd
lret
mov
xor
pop
shlb
mov
ss
leave
out
data16
push
sub
mov
push
xlat
inc
xchg
lds
jnp
jns
add
jecxz
pop
fsubs
pop
jmp
cltd
hlt
fdivs
sahf
jle
pop
push
icebp
mov
cmp
leave
dec
in
xchg
ret
and
fists
inc
add
dec
lret
add
push
jl
cwtl
scas
cmp
outsl
mov
mov
add
scas
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
insl
leave
cmp
imulb
jle
jl
jle
dec
cmc
push
jg
arpl
les
jo
mov
sbb
in
jnp
push
mov
mov
scas
push
loope
pusha
or
popa
dec
mov
add
lret
daa
xchg
aad
movsl
push
xchg
nop
divb
jmp
imul
xchg
fcmovb
adc
lcall
popf
fsubs
notl
rcrl
sbb
cwtl
pop
push
dec
jne
bound
mov
inc
jg
xor
mov
stc
push
jle
mov
add
int3
adc
adc
xchg
test
dec
aas
ret
mov
pop
pop
aaa
test
in
pop
jecxz
xchg
in
and
adc
fsubs
push
sub
push
dec
arpl
xchg
in
bound
or
adc
fadd
pop
fcoml
push
xchg
adc
fwait
mov
mov
sub
stc
lcall
mov
ja
decl
aam
jge
test
add
lock
adc
js
inc
mov
pop
cli
popa
cmp
add
out
sub
scas
jno
adc
lahf
sti
sub
cmp
outsl
aas
adcl
xor
inc
dec
cltd
mov
xchg
pop
sar
cli
pop
repnz
pop
ror
xor
mov
rorb
fsub
sub
loope
add
mov
xchg
and
div
jmp
lea
stc
pushf
dec
push
cltd
fdivl
push
std
mov
imull
jecxz
cltd
ds
pop
mov
cmpsl
push
pop
out
pusha
sub
xchg
lods
subl
orb
adc
mov
sbb
add
rorb
stos
cltd
lods
pop
cwtl
imul
ret
xlat
imul
mov
adc
lock
sarl
lods
jg
fstpt
cmp
shr
xchg
xorl
fwait
jne
mov
adc
out
clc
dec
imul
fdivs
or
xlat
fwait
mov
mov
in
mov
mov
mov
aad
aas
iret
decb
jns
mov
gs
cmp
sub
out
mov
push
xchg
inc
incb
lock
jb
nop
sbb
mov
lods
jbe
lahf
mov
and
cmp
xchg
std
popa
stos
cmp
and
ret
enter
mov
pop
xor
dec
push
mov
sarl
jns
sub
xorb
out
dec
insl
js
data16
lods
lds
or
in
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
sbb
shrb
jle
pop
jl
jle
sbb
shrb
mov
push
fwait
je
jae
add
enter
mov
repz
stos
mov
rorl
rcr
fwait
repz
or
int
roll
shlb
jae
sbb
imulb
fstps
shrb
xor
int
adc
xor
push
jbe
les
jg
lds
nop
mov
loopne
mov
xchg
mov
mov
shlb
add
in
jl
lret
imul
inc
and
mov
mov
inc
xlat
shll
lock
mov
testb
mov
dec
xchg
xor
fbld
push
mov
hlt
push
ljmp
add
test
loope
je
push
lock
pop
jo
mov
out
pop
sub
inc
fidivs
and
test
dec
cli
xchg
ss
sbb
daa
fcoml
adc
leave
sub
mov
scas
daa
fiadds
jb
add
out
cmp
or
cmp
xor
iret
xlat
or
gs
in
dec
sbb
xchg
cmpsl
jge
outsb
mov
fbstp
mov
add
mov
arpl
movsb
add
mov
int
jne
push
dec
and
aam
outsl
xor
aas
js
or
data16
movsl
popf
imul
sti
mov
jp
mov
das
les
in
dec
outsl
fistl
mov
dec
roll
roll
lds
jecxz
mov
jecxz
imul
sbb
jb
mov
xchg
and
icebp
sbb
loope
xor
cmp
jecxz
scas
addl
fsubl
push
clc
dec
push
mov
bound
gs
dec
xchg
inc
mov
ja
sbb
xchg
clc
push
aas
popa
in
sarb
xchg
sub
and
loope
cmpsl
jle
xor
movsb
lret
std
xor
enter
jp
pop
jb
mov
pop
jo
shll
mov
adc
pop
cmp
lret
push
or
mov
enter
xchg
rol
fmull
mov
test
lret
xchg
add
sub
sbb
mov
test
mov
pop
push
lds
ljmp
mov
into
jg
shll
into
xor
pop
sub
js
sub
xor
hlt
push
and
xchg
mov
lret
test
lds
pushf
ret
leave
jle
into
cld
mov
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
inc
loopne
cmp
jle
sub
jle
push
mov
lods
dec
and
dec
xor
push
inc
arpl
lods
call
into
push
cmp
fisubrl
sub
xchg
cli
sbb
clc
repz
or
jne
out
addr16
adc
mov
xchg
sbb
repz
jo
inc
test
inc
jl
adc
xchg
in
stos
push
shll
sub
sub
and
mov
imul
sub
mov
push
sub
daa
sbb
cwtl
pop
and
imulb
adc
xor
in
in
cmp
xor
mov
sahf
mov
push
stc
dec
out
adc
jle
or
mov
pop
mov
insb
cli
fnstenv
sub
push
aad
adc
push
ja
mov
and
out
daa
pop
ss
add
cmpb
inc
mov
mov
mov
add
mov
daa
jnp
mov
jb
mov
jl
push
cmp
sub
enter
mov
jae
in
inc
mov
cli
and
xchg
imul
adc
cwtl
lds
push
xchg
xchg
sub
clc
mov
and
pop
inc
cmp
sti
dec
push
jg
and
lcall
xor
cmp
pop
cmp
fcomp
aam
scas
mov
loopne
test
push
rdtsc
fsubs
insl
dec
cwtl
jns
add
sub
repnz
xor
std
sub
push
and
mov
jge
sbb
aam
std
mov
sbbb
xchg
lock
add
out
dec
ds
stos
sub
add
mov
cmpl
repz
or
call
sub
movsl
inc
xor
pop
cli
push
xlat
pop
and
jmp
jecxz
inc
jbe
aaa
mov
int
dec
fcomps
daa
shl
movzbl
jmp
xchg
cmpsl
dec
inc
decl
imul
mov
test
inc
sbb
enter
das
int3
mov
mov
test
lahf
sub
cltd
add
adc
push
mov
dec
and
mov
scas
push
adc
push
xchg
pop
cmpsb
xchg
and
add
std
inc
jmp
popf
jb
je
xor
pop
push
adc
mov
cmp
ret
lret
jnp
insb
push
popa
inc
scas
movsl
jp
and
out
daa
ret
pop
pusha
mov
push
xchg
mov
aad
popf
mov
pop
mov
cltd
sbb
xor
stos
mov
pop
ficompl
push
add
dec
cmpsl
pop
xchg
add
mov
sbb
push
repz
cld
cs
cld
loope
cmp
lock
xorl
cltd
sbb
cltd
mov
push
jbe
xchg
push
lods
mov
add
fcomps
in
adc
push
scas
pop
dec
or
mov
mov
std
addr16
push
mov
jmp
dec
popf
sub
mov
add
mov
adc
fisttps
insl
or
add
inc
or
inc
cld
test
clc
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
fisttpl
je
mov
popa
and
xchg
inc
mov
mov
fwait
lds
movsb
testl
fsubs
push
dec
cld
cmp
movsb
jg
xor
movsl
mov
mov
adcb
cli
in
cltd
hlt
and
sub
fnstcw
push
push
fistpl
out
mov
xlat
frstor
xchg
cmp
pop
int3
fldt
pusha
mov
push
xchg
dec
aas
cld
lcall
jnp
das
es
cmc
dec
jae
sbb
jo
hlt
dec
and
out
mov
mov
imul
scas
pop
fsts
fwait
mov
or
inc
daa
pushf
mov
aas
push
mov
lret
lea
jmp
lahf
les
repnz
jecxz
das
xchg
cmp
sub
ljmp
push
jmp
adc
lea
out
leave
cmp
or
and
test
xchg
and
xor
xchg
add
xchg
fwait
adc
cmc
aaa
fwait
rcrb
xor
mov
pusha
lahf
data16
dec
mov
mov
pop
cmp
call
filds
addr16
cmpsb
ret
push
inc
fldt
loopne
popa
add
adc
pop
sub
into
aas
test
mov
daa
adc
add
mov
xor
jnp
push
mov
movsl
inc
push
xchg
add
jmp
sub
mov
add
push
xchg
xor
pusha
sub
mov
mov
push
jp
mov
push
mov
mov
loop
lds
add
pop
add
stos
sub
push
pop
adc
daa
sti
lds
ljmp
mov
push
insb
push
rorl
in
inc
inc
rolb
pop
aas
insl
mov
mov
adcb
mov
xchg
xor
lods
mov
jne
das
movsb
cmpsb
fnstenv
and
clc
insl
mov
sbb
mov
fistpl
and
jo
xor
xchg
jge
inc
pop
test
repz
lock
push
out
movsl
xor
add
jno
movsb
mov
pusha
dec
lds
iret
into
aam
int3
mov
loope
loopne
push
push
incb
imul
data16
jl
mov
loope
jp
mov
clts
sahf
adc
outsl
inc
and
loop
inc
mov
add
out
sub
insl
xchg
mov
jnp
stc
add
data16
mov
sbb
lret
sub
mov
fstpl
adc
and
mov
cmc
lea
push
out
pop
sbb
in
fwait
cmc
stc
mov
mov
addb
xchg
scas
mov
dec
push
pop
mov
das
dec
jle
or
dec
inc
jbe
inc
jl
add
icebp
neg
jmp
jne
sub
test
test
mov
dec
push
fsubl
jge
jle
dec
add
clc
adc
add
push
stos
sbb
jge
xor
inc
enter
iret
das
incb
je
jle
stc
xor
jecxz
icebp
lods
mov
dec
cs
inc
pop
mov
jl
push
xchg
js
or
stos
fsubl
or
cmpsb
cli
scas
fnsave
and
jecxz
cmp
shlb
sbb
inc
rolb
inc
addr16
fcomp
sub
ss
ds
lock
sub
loopne
out
cmp
sahf
lods
cmp
loopne
jmp
xchg
cmp
mov
lea
xchg
outsb
add
stc
cmpsl
arpl
inc
mov
or
sbb
add
cmp
adc
jns
jl
mov
add
les
mov
mov
xor
mov
xchg
sahf
das
or
inc
fwait
xor
mov
push
push
push
jmp
and
push
xchg
shll
popf
jb
xchg
lods
jecxz
sub
rclb
call
cmp
xor
addb
cmpsb
adc
scas
fcompp
xchg
mov
and
pop
jmp
adc
inc
dec
loop
pusha
jnp
sti
jmp
xchg
imul
or
icebp
pushf
pop
sbb
cmp
jno
mov
inc
adc
fidivs
jne
cmp
mov
fadd
inc
jns
dec
pminub
insb
das
das
xor
sarb
cld
adc
jbe
fmull
lea
repz
lds
pusha
mov
popa
pop
adc
inc
sub
je
sbb
enter
push
inc
inc
jbe
inc
or
xor
mov
sbb
cmp
jae
sub
cmp
lahf
sbb
jns
mov
jb
push
sub
jae
leave
inc
pop
mov
push
adc
mov
fwait
cmpsb
pop
call
into
cwtl
mov
addb
movsb
mov
push
js
fisubrl
ret
jae
dec
sub
fisttpl
or
aad
sahf
jbe
add
mov
or
fisttpl
inc
in
jecxz
orl
je
repnz
jno
xchg
sbb
xor
or
shrl
and
pop
cmc
hlt
push
int3
popf
xchg
ja
adc
lea
add
sti
js
sbb
push
adc
fmuls
adc
pop
aad
sub
sahf
stos
pusha
fbld
cmp
mov
lods
push
xchg
mov
sbb
or
loopne
outsl
icebp
test
mov
negb
cmp
cmp
insb
ljmp
psraw
push
out
pop
xchg
pop
inc
int
movsl
sti
rclb
push
fdivl
xor
notl
dec
dec
into
sbb
jns
lea
xchg
pop
cmp
add
dec
dec
mov
and
push
pop
fcompp
xchg
lret
int
int
lock
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
jbe
and
jle
sub
jle
movsb
pushf
adc
ljmp
cli
sbb
xchg
push
hlt
push
or
mov
cmp
fldt
mov
cmpsb
into
dec
aam
les
push
sub
mov
and
daa
das
mov
xchg
cmp
xchg
push
into
inc
push
cs
or
cmp
mov
repnz
pop
in
cmp
push
jbe
xchg
cmp
dec
sar
iret
roll
stc
loope
fsts
cmc
lds
inc
mov
jo
jb
jge
cmc
mov
enter
cmpsl
outsb
mov
xchg
xchg
xchg
popa
sbb
imul
shl
pop
jecxz
sbb
and
fistl
clc
inc
cmp
xchg
stos
xlat
shlb
and
popf
jg
lret
mov
movl
pop
dec
dec
pusha
mov
xchg
cmp
pop
pop
or
cld
xor
lcall
adc
in
aad
andl
fwait
repnz
into
std
addr16
xchg
push
cltd
sub
xchg
pop
fs
jmp
inc
nop
out
or
out
inc
cmp
fcoms
fimull
dec
mov
adc
push
call
mov
int
xor
or
inc
or
mov
adc
jno
jge
mov
xor
lods
pop
lds
and
fdivrs
mov
lea
or
test
aad
lock
aas
pop
call
fs
out
faddl
cmp
stos
xchg
ss
jp
mov
add
inc
push
adcl
jp
push
bound
int
xchg
mov
or
and
mov
imul
inc
push
push
jns
enter
jle
pop
sbb
pop
std
sub
out
stc
jmp
push
sarb
in
loope
out
cld
scas
mov
sub
shlb
bound
sbb
rcrl
push
mov
mov
stos
leave
cltd
jp
mov
sub
or
push
jp
adc
and
xchg
fildl
std
mov
and
fldt
dec
xchg
xchg
imul
loop
pop
fistps
jecxz
push
jge
pusha
pop
adc
jmp
jae
push
cmp
leave
dec
xlat
push
scas
jb
mov
jmp
push
cld
push
fcmovbe
dec
pop
cld
cmp
pop
out
jns
cmp
push
mov
lods
sub
imul
jnp
pop
dec
and
mov
lods
jg
sbb
out
ficoml
cmp
fcompl
roll
cwtl
shll
test
adc
or
mov
ss
pop
lods
sub
pushf
inc
out
and
mov
in
dec
stc
ja
xor
lahf
xadd
test
std
mov
int
nop
sub
jg
sbb
icebp
or
jnp
fsubrs
xor
test
decb
andb
push
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
fiadds
cmp
mov
dec
andl
xchg
imul
or
fcmovnbe
lret
dec
daa
fwait
in
into
shlb
xlat
inc
movsb
loope
mov
fisubrl
test
aaa
roll
leave
add
push
cltd
adcl
pop
xchg
sbb
jns
xchg
ret
inc
add
dec
cltd
cmp
pop
mov
pop
sbb
push
pop
cwtl
push
cmc
stc
enter
in
add
loop
jne
js
adc
test
adc
fsubs
lods
int3
cld
inc
and
jb
aas
icebp
fldenv
lods
add
mov
jb
dec
mov
test
or
sbb
xor
icebp
xor
add
or
jb
cwtl
add
sahf
dec
xchg
xor
inc
add
jl
push
in
ror
test
pop
xor
test
sub
jmp
push
or
imull
xor
mov
lret
xor
aas
sbb
das
test
psubd
test
mov
pop
xchg
rclb
cwtl
out
mov
pop
xchg
add
jbe,pt
pushf
add
add
jo
jecxz
push
aam
test
or
es
dec
xor
fucomp
mov
fidivrs
push
mov
popf
inc
stos
enter
add
std
push
jno
inc
mov
and
cmpsb
adc
lret
inc
mov
dec
and
fldcw
and
icebp
lret
cmp
mov
mov
daa
lea
out
add
and
aad
ss
rclb
jle
xlat
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
aaa
sbb
inc
cmp
mov
pop
or
adc
fdiv
ret
scas
xchg
inc
mov
mov
rolb
or
sbb
sub
js
mov
ret
decb
aam
repnz
sar
push
or
sahf
sti
and
ret
inc
jp
or
pop
xchg
repnz
adc
loope
scas
aad
pusha
dec
dec
jno
push
rcrl
pop
incb
jo
mov
sbb
sarl
movsl
imul
xor
push
insb
jle
mov
pop
adc
lahf
adc
or
sub
push
jle
adc
pop
push
lds
shll
mov
cmp
add
out
sub
in
mov
repz
out
mov
sub
flds
es
outsb
scas
sbb
mov
push
cld
sub
cmpsl
cs
cmp
daa
xorb
sub
jae
lret
dec
lahf
xor
and
pop
cmp
and
das
outsb
xchg
mov
aas
xchg
inc
into
mov
xor
repz
cwtl
out
in
cmp
inc
fstpt
push
adc
push
mov
ja
lock
mov
jae
out
xchg
mov
pushf
das
aam
fwait
pop
push
add
mov
jbe
jl
add
mov
inc
mov
push
push
jmp
repnz
sub
and
iret
xor
cwtl
pop
test
loopne
sub
adc
fcompl
push
pop
jnp
je
rcrb
cmp
xor
mov
cmp
rolb
add
ss
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
test
push
sub
push
pusha
test
push
ficoml
outsb
cmpl
cmpl
lret
stc
lds
movsl
sbb
sbb
insl
and
sbb
mov
imul
xor
jmp
mov
repz
xor
leave
ficoml
push
ljmp
push
loop
shr
popf
add
sub
addr16
enter
repnz
pop
mov
repnz
push
in
adc
sbb
outsb
inc
inc
cmp
lods
jae
mov
divl
lock
ds
jmp
js
push
sub
pop
pop
inc
movsb
jo
pop
shlb
rorl
repnz
push
imul
push
jl
pusha
dec
cld
or
popa
dec
xlat
add
pop
stos
test
hlt
test
ljmp
xchg
xchg
in
and
pop
mov
sar
cmp
adc
pop
cwtl
test
add
enter
sub
ffreep
lahf
lahf
fimuls
sbb
daa
inc
inc
loop
enter
pop
sbb
out
cmpsb
sbb
jmp
inc
xchg
lahf
pushf
lret
fimuls
cmp
lcall
push
jmp
loope
andb
or
mov
fwait
lcall
adc
pop
loope
xchg
and
xchg
push
mov
out
jo
mov
adc
dec
ss
out
jg
daa
sub
and
mov
test
inc
outsb
faddl
dec
xchg
sbb
push
aad
and
sbb
lds
ret
xchg
rcl
cmp
sub
jmp
add
test
jmp
and
in
popa
push
lret
xchg
adc
les
mov
xor
and
mov
jbe
or
mov
mov
jecxz
sbb
mov
inc
jge
lods
and
in
mov
inc
shlb
pusha
les
mov
pop
lock
fcoml
sbb
lea
or
sbb
ja
das
es
adc
xlat
aas
out
push
inc
xor
xor
je
movsl
push
addl
fildll
popl
mov
lret
pop
mov
cmpsb
jb
outsb
cmp
dec
mov
lea
sti
aaa
lock
xchg
stos
push
movsb
sbb
pop
mov
pop
mov
mov
mov
and
test
sub
mov
or
sbb
sub
xchg
rcrb
cs
add
push
add
scas
loop
cmc
test
stc
cld
mov
mov
insl
push
dec
adc
rorb
dec
std
call
inc
aaa
loopne
loopne
xorl
hlt
outsb
adc
fisttpl
lods
xchg
adc
xor
push
pop
cmp
fistpll
mov
push
push
scas
xor
dec
call
sbb
mov
cli
mov
and
and
insb
mov
fdivl
scas
or
aad
pop
push
push
xchg
mov
lret
push
sahf
lods
dec
int3
daa
jb
pop
mov
xorb
mov
sbb
popa
push
pop
insb
push
cmc
jp
and
shrl
add
enter
mov
xor
push
xor
sbbl
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
filds
test
ret
add
inc
mov
dec
lret
mov
or
outsb
mov
call
add
inc
push
lahf
leave
or
lret
fs
ljmp
arpl
leave
test
jb
mov
movsl
lds
inc
int3
out
add
pop
loopne
mov
testl
mov
data16
je
jle
mov
xchg
movsl
lods
sbb
cmp
xor
sbb
add
push
mov
and
dec
push
fildl
int3
jle
in
sbb
pusha
lahf
xchg
stos
cmp
out
xor
xor
lahf
popa
jmp
xor
ja
fucom
mov
xor
push
cmp
mov
stc
jl
cmp
out
ds
push
mov
mov
mov
and
scas
repnz
testb
out
imul
mov
xchg
push
aam
pop
sbb
sbb
mov
lret
xor
mov
mov
ja
stos
call
seto
lea
jmp
rolb
mov
dec
jnp
mov
mov
mov
push
add
pusha
mov
and
push
push
adc
iret
jmp
stos
adc
xchg
add
xor
xchg
aas
and
inc
shl
lret
int3
out
fistpll
nop
les
insl
mov
adc
xchg
mov
popa
jno
adc
das
lods
jo
mov
push
loopne
test
dec
jl
insl
ss
aaa
loope
out
sti
into
mov
outsl
mov
iret
out
lahf
incl
sub
mov
inc
add
jne
fisubs
add
aam
int
cld
pop
push
xchg
or
in
js
sbb
adc
out
cmp
jle
stc
inc
jo
gs
out
rcl
pop
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
loopne
add
adc
jle
add
pusha
enter
mov
dec
mov
xor
test
std
lret
push
dec
sbb
push
mov
cli
xchg
pop
repnz
repnz
inc
shlb
popf
vmread
and
inc
cwtl
pop
dec
bound
js
loop
pop
stc
icebp
mov
jmp
cmpsb
pop
push
pop
lret
iret
into
dec
or
jg
inc
inc
jne
das
and
sti
shlb
and
push
mov
push
or
stos
outsb
jno
push
lea
icebp
dec
mov
xchg
imul
dec
lcall
outsb
lds
test
fs
jns
and
sub
xrelease
mov
pop
cli
scas
clc
out
lods
in
inc
call
stos
mov
mov
out
jl
je
fsts
daa
cltd
mov
insb
lea
fsts
mov
xlat
cmp
adc
fcmovnbe
sbb
xchg
into
inc
aam
fwait
movsb
fwait
and
aaa
lahf
cmpsl
xchg
xor
add
outsb
mov
scas
enter
stc
lcall
cmp
das
int
incb
sbb
hlt
arpl
jg
insb
leave
test
fidivrl
in
or
test
mov
sti
and
pop
enter
xor
or
call
mov
lds
roll
icebp
or
fsubl
cmp
lret
ret
fisubrs
mov
in
fcmovnb
rorb
xchg
dec
es
pop
push
stos
ds
imul
in
mov
or
sbb
insl
push
cmpsl
adc
or
fldt
sbb
pop
popa
push
cmc
xor
test
xor
and
psubsw
lea
addr16
sbb
push
lea
cwtl
or
imul
stc
jl
out
mov
roll
mov
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
lret
mov
jle
add
cmp
dec
sti
sbb
sub
jne
and
divl
int
push
lret
imul
pop
cli
test
stos
jns
sbb
ret
mov
xchg
mov
fsubs
scas
dec
inc
out
pop
mov
and
sbb
jle
or
insl
add
lods
pop
test
dec
mov
xor
popf
mul
fildll
fcoms
fiaddl
imul
sahf
jnp
pop
cmp
outsb
adc
sub
lods
jbe
pop
sbb
sti
or
xchg
xor
adc
ret
fs
popf
and
mov
jl
jno
jne
inc
cmp
and
adc
test
mov
inc
ret
out
mov
xor
js
pop
test
outsb
into
cmp
ret
nop
push
test
cli
push
push
ret
ljmp
stc
mov
lds
and
aam
or
insb
lret
mov
cmp
arpl
leave
cmp
outsl
jl
jae
sub
pop
mov
xor
les
or
and
and
jns
movsb
xchg
xchg
leave
jno
xor
mov
clc
mov
es
mov
out
lahf
mov
mov
push
js
je
add
mov
push
xchg
arpl
sbb
jp
inc
jae
sub
lret
fsubr
or
hlt
adc
add
leave
mov
in
clc
sahf
jl
inc
aaa
push
mov
int3
loop
or
or
fadds
jl
ljmp
mov
in
pop
xchg
add
cld
xchg
xchg
adc
or
pop
lods
sub
pop
or
icebp
push
jb
push
inc
cmpsl
mov
add
sbb
and
adc
sub
xor
aaa
jno
je
loope
sub
adc
rcr
push
cmp
inc
adc
andb
rcll
mov
out
jmp
inc
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
cmp
jle
add
sbb
lahf
jl
dec
adc
imul
push
les
loop
arpl
adc
mov
sbb
xor
add
aaa
out
out
jge
pop
and
cmpsb
loopne
push
push
dec
nop
lods
testl
cmp
imul
lds
data16
into
xchg
xchg
fwait
mov
scas
or
jno
push
cmpsb
cltd
sbb
mov
xchg
cwtl
gs
mov
inc
push
bound
ret
push
mov
and
pop
call
leave
or
lds
int
jmp
jae
pop
adc
mov
cld
dec
sbb
in
popa
stos
sub
shrb
xor
add
test
call
xchg
pop
imul
sub
sub
jp
pop
aam
int
popf
nop
push
outsb
aam
adc
flds
out
and
sub
and
push
inc
adc
stos
adc
popa
pop
mov
movsl
into
stos
and
mov
iret
negb
pop
mov
jmp
push
mov
mov
jnp
jl
mov
xchg
roll
and
xchg
adc
fidivl
std
and
xchg
xor
adc
fiadds
and
adc
stc
in
pop
lock
popf
js
aas
jmp
pusha
and
ror
mov
clc
cmpsl
in
jae
mov
pop
add
mov
int3
arpl
or
pop
sti
fists
dec
popf
xor
test
add
sbb
jo
mov
mov
sbb
incb
mov
push
xchg
repnz
xor
imul
pop
adc
movaps
push
negl
ret
imul
cltd
mov
adc
or
aam
dec
shlb
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
jp
lret
and
jle
xchg
xchg
aas
outsl
lret
cmp
imul
dec
add
dec
imul
jae
out
ds
popa
insb
in
out
adc
mov
pushf
stos
cmc
test
push
mov
mov
push
int3
arpl
movb
in
ret
sub
push
ret
icebp
dec
ljmp
mov
inc
mov
push
pushf
imul
mov
fimull
int
pushf
jnp
mov
out
mov
mov
push
sub
or
movsl
rolb
dec
push
std
push
ss
out
mov
adc
xchg
sub
jo
mov
dec
mov
les
jge
mov
jae
cltd
add
push
and
test
fistpl
lahf
cmpsb
out
and
adc
stos
dec
mov
add
push
dec
hlt
cmpsb
outsl
repnz
cwtl
jnp
push
mov
fists
cwtl
daa
or
xchg
notl
mov
mov
cmp
ficoms
into
push
imul
inc
mov
pop
sbb
pop
add
ljmp
arpl
add
test
add
fsin
push
cmpsb
xchg
add
les
add
cmpsb
add
leave
mov
repz
mov
cwtl
scas
pop
sub
daa
popa
rcrb
dec
es
dec
dec
inc
xor
pop
fistpl
in
mov
mov
add
scas
hlt
mov
sub
xor
fcoml
push
imul
sbb
rcl
pop
cmp
xor
cmc
arpl
xor
xchg
cli
aas
stos
js
dec
and
in
or
pop
into
adc
aas
add
testl
xchg
test
push
adc
jb
jnp
xchg
cmp
mov
pop
and
xchg
and
cmp
add
fsubrl
xchg
inc
sub
int
in
outsl
in
loopne
sub
pop
test
inc
xorb
das
aas
mov
out
out
pop
or
inc
loopne
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
dec
xor
in
jle
and
jle
and
rorb
push
add
jb
cmpsb
insb
and
pop
repz
sbb
xchg
scas
jb
into
subb
sbb
wbinvd
jbe
fisttps
cmp
call
pop
sbb
aaa
sub
pop
add
cmp
aam
cmp
xchg
mov
mov
push
les
test
pop
or
jp
sbb
hlt
sbb
xchg
xor
shl
dec
pop
fsubrs
es
dec
cmp
sbb
lahf
jbe
cmp
stos
addr16
test
icebp
cmp
outsl
jo
mov
jmp
cmp
loopne
cltd
test
and
dec
rcrl
cmp
fwait
sbb
mov
dec
cmp
jns
out
mov
rcll
pop
lret
testb
mov
ret
mov
inc
xchg
pop
addr16
dec
mov
iret
push
cmp
loop
or
mov
nop
sbb
cmpsl
mov
adc
pop
test
movsl
jbe
fadd
subb
orl
xlat
xorl
roll
dec
push
popf
in
nop
cmpl
in
scas
outsl
dec
xchg
jo
mov
push
and
call
jb
dec
adc
adc
iret
cmp
or
mov
loop
arpl
in
or
dec
fstl
pushf
lock
mov
mov
out
test
lods
push
jo
sub
inc
sub
sbb
cmp
push
stc
lahf
and
xorb
in
and
push
push
mov
int3
pop
lret
xlat
testl
jmp
lods
fsts
out
adc
push
pop
leave
push
stos
cs
pop
aas
inc
mov
mov
push
inc
leave
hlt
xlat
sub
outsb
inc
mov
jns
push
repnz
pop
inc
ftst
test
adc
inc
add
inc
add
outsl
aaa
inc
add
inc
add
add
jg
xor
add
mov
jle
and
jle
jg
stc
push
clc
xchg
xchg
push
gs
sbb
inc
jbe
and
cld
leave
insl
fs
addb
imul
push
jb
repnz
orb
in
std
bnd
addr16
loopne
add
scas
pusha
pusha
jmp
push
sbb
cmp
xchg
mov
ss
addl
pop
pop
fs
add
inc
mov
cmp
push
hlt
dec
enter
jbe
mov
adc
pop
repz
repz
sbb
and
insl
stos
out
mov
add
lret
ret
fisubs
sub
sub
or
fst
in
push
pusha
sub
inc
mov
pop
push
ret
sub
mov
sub
mov
cs
and
cmpsb
mov
clc
out
and
test
imul
xor
imul
gs
dec
int
fidivl
andb
sub
enter
cmc
in
lahf
mov
out
inc
adc
int3
ja
inc
cmpsl
fimuls
cmp
mov
and
push
adc
dec
aam
jle
dec
or
and
loope
dec
dec
lcall
push
or
int
dec
jl
js
ja
dec
std
out
loope
sahf
int3
cltd
into
adcl
call
or
mov
into
add
pop
dec
mov
adc
jge
push
or
mov
aas
paddusb
fisubrs
or
xchg
push
lea
mov
ljmp
aam
sti
aas
mov
hlt
fwait
adc
insb
dec
pop
xchg
mov
mov
movsb
jne
xchg
cltd
xchg
mov
cmp
test
adc
xor
mov
xor
mov
fnstcw
lretw
fnstsw
cld
lds
fsubs
mov
cli
mov
aad
sbbb
add
lret
sub
sahf
cld
inc
gs
sbb
es
jmp
pop
pop
fwait
or
ss
add
jl
add
dec
cld
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
push
mov
jle
and
jle
mov
in
pop
jno
test
fsts
xchg
jg
imul
mov
jle
lcall
imul
sub
clc
test
and
adc
fs
jl
pop
stos
xor
cmp
jle,pt
stos
pop
arpl
cmp
cmp
insl
cs
repz
cmp
push
out
adc
imul
outsl
test
xchg
ja
and
push
je
and
fstpt
cmpsb
xchg
in
jmp
mov
jg
pop
lds
push
sbb
xchg
xor
jmp
in
push
and
shll
cmp
sahf
push
mov
sub
pop
je
clc
fsub
pop
call
cmpsb
or
inc
adc
enter
and
and
repz
dec
push
mov
loope
lea
ja
lret
dec
orl
pop
mov
sbb
test
or
dec
aam
imul
sub
jae
push
inc
jbe
pop
loope
sbb
sub
out
mov
push
pusha
out
xor
bound
fiaddl
jecxz
insb
fwait
inc
xchg
fsubrl
cmp
mov
xchg
xchg
xchg
or
xchg
ret
mov
mov
cwtl
adc
ds
call
test
mov
adc
insl
aaa
std
cmpsl
cmp
pop
fldt
iret
rorl
xor
sarb
mov
or
daa
fsubrl
daa
mov
dec
test
inc
sub
cmp
cld
sbb
jnp
cmp
dec
movsb
inc
imul
mov
xchg
cmpl
jmp
cmp
xchg
cwtl
call
xor
faddl
sub
mov
std
lods
or
push
mov
sarb
sub
loop
loopne
lock
mov
out
loop
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
xchg
sbbb
data16
and
jle
jecxz
sub
push
mov
stos
aas
or
pop
test
xor
jl
and
inc
rcrl
inc
mov
rorl
lea
dec
inc
outsl
leave
mov
scas
idivb
cmp
cmp
add
idiv
mov
mov
sahf
js
fwait
sbb
iret
inc
and
bound
popf
or
in
es
arpl
xor
ja
loop
sarl
or
inc
push
push
cmp
cld
loop
and
mov
shlb
js
xchg
out
and
das
inc
sbb
jae
ficoml
adc
aas
mov
aad
sbbb
cmp
xor
popa
test
cmpsb
adc
daa
out
nop
scas
in
adcl
sbb
dec
das
xlat
scas
cmp
cmp
sub
mov
iret
or
push
cli
xchg
sti
rcrl
ficoml
stos
mov
mov
xor
xor
sbb
subb
pop
in
lea
ljmp
sahf
push
loopne
popa
int
push
and
cs
outsb
test
movsb
punpckldq
inc
out
pop
lods
dec
inc
jo
mov
clc
fcompl
or
aam
sub
sarl
xor
lret
dec
repnz
pop
int
movsl
out
jmp
test
stc
xor
jns
mov
stos
lods
mull
aaa
jb
add
leave
orl
xchg
push
nop
mov
xchg
mov
sbb
dec
cli
pop
push
sbb
sahf
out
xor
dec
mov
hlt
pop
push
lods
scas
xchg
mov
fs
stos
imul
or
jno
es
mov
pop
sbb
and
pop
pop
call
movsl
stos
in
scas
mov
jno
or
daa
shlb
lea
shll
adc
jge
mov
imul
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
add
adc
mov
mulb
push
xchg
mov
adc
cmp
add
out
jle
xchg
dec
lods
xor
pop
les
mov
pop
lcall
stc
mov
rclb
mov
movsl
ds
adc
stos
mov
scas
sub
mov
test
bswap
cmpsb
mov
pop
rclb
pop
inc
xchg
sbb
fists
fimuls
jo
ret
mov
and
cltd
insl
pop
repnz
out
rcrb
lea
imul
test
adc
adc
cs
mov
aas
xor
fsubrl
cmpsb
pusha
lahf
dec
pop
jae
push
cmc
fisttpl
in
mov
lods
std
mov
addr16
push
xchg
aaa
and
xor
in
fs
rclb
mov
jne
xchg
dec
or
shlb
xchg
adc
xorb
and
gs
mov
jge
dec
mov
das
ss
and
xchg
std
push
pusha
xor
out
xor
add
repz
jae
mov
push
popf
popf
jae
lods
outsb
dec
dec
pusha
insl
cmp
mov
pop
imul
ret
mov
xchg
mov
jae
out
sbb
mov
cmp
imul
pusha
imul
imul
jb
xor
lods
pop
fimuls
movsb
insl
les
bound
or
inc
subb
loop
imul
cltd
cs
inc
pop
fdivrl
ja
std
fsubrs
movsl
fnstsw
clc
xchg
or
xor
xchg
cmp
test
lock
cmp
or
push
mov
inc
shll
dec
xchg
pop
jg
stc
jle
adc
enter
sbb
ret
dec
dec
test
cmp
jo
fs
adc
xor
push
test
or
addb
outsl
outsl
inc
les
xor
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
mov
jle
and
jle
hlt
imul
jb
pop
mov
mov
popa
and
inc
dec
lret
ss
and
out
sbb
mov
shlb
stos
push
adc
rcrb
cmp
leave
rcrb
outsb
into
pop
stc
sbb
mov
lcall
push
xor
mov
scas
sbb
lret
or
cmc
insl
add
or
inc
add
clc
call
push
inc
xchg
aad
pop
inc
ret
dec
das
fdiv
dec
xor
push
adc
mov
or
popf
inc
sub
mov
jb
out
enter
add
inc
push
sti
test
sbb
in
inc
les
pop
lret
imul
stos
std
inc
mov
add
cmp
mov
pop
std
or
mov
pop
mov
mov
dec
push
mov
mov
mov
cmpsb
sbb
push
sbb
add
enter
sahf
or
xchg
enter
sahf
lcall
mov
aam
or
jle
jmp
lahf
fadds
clc
aam
popa
or
or
into
cltd
add
and
push
in
repnz
pop
movsb
jbe
fwait
jg
mov
loop
mov
sub
int
leave
cmp
scas
push
inc
daa
push
mov
leave
cmp
cmp
lds
adc
repz
cmp
enter
fistl
inc
xchg
pop
inc
movsl
cld
sub
in
push
sub
lea
push
add
test
stos
dec
fisttpll
mov
or
xchg
inc
jnp
sbb
addr16
jg
leave
sub
mov
jg
and
out
or
in
nop
and
push
push
xchg
js
mov
aad
icebp
dec
aaa
arpl
pop
jg
pop
cs
push
es
jmp
jo
je
and
adc
adc
xchg
ror
inc
in
mov
adc
rcrl
lret
clc
inc
pop
stos
cwtl
sbb
push
inc
pop
test
inc
or
inc
or
jne
jmp
lods
mov
outsb
xorl
pop
sub
fnstsw
and
jle
inc
xchg
das
xlat
mov
shrb
negb
xchg
pop
in
push
adc
push
pushf
lret
lock
mov
mov
dec
ret
inc
mov
out
lea
mov
inc
inc
push
loopne
or
divl
add
fbld
in
adc
bswap
lds
pop
mov
imul
push
cmp
jge
jne
dec
adc
sti
loope
sbb
faddl
fnstenv
xor
adc
daa
fistl
cmp
or
jmp
outsb
pop
bound
mov
stos
divb
clc
mov
mov
stos
mov
jmp
dec
jp
or
mov
ss
or
movsl
jecxz
xor
or
xchg
sbb
subb
xchg
jb
bound
stos
fwait
pop
ret
bound
pop
outsl
std
fadds
bound
and
imul
and
loop
mov
push
sahf
movsl
ret
xlat
dec
push
les
cmc
and
push
rolb
ja
icebp
sub
sbbl
out
leave
out
leave
jo
int3
mov
lea
dec
sbbl
adc
add
xchg
ret
imul
xchg
test
fcoml
adc
lcall
cmp
sub
repz
shlb
cmp
push
sbb
repnz
popf
pusha
test
push
clc
shl
mov
mov
dec
fsub
movsl
orb
jg
mov
cltd
xchg
cwtl
sarb
xor
xchg
js
and
imul
fstps
mov
scas
int3
lods
cld
xchg
xchg
push
and
adc
repz
or
mov
mov
mov
inc
repnz
pop
or
fcmovu
ret
inc
fildll
in
aaa
stc
sub
scas
push
inc
arpl
dec
mov
movsl
popf
adc
mov
popf
cs
loop
push
jne
sbb
sbbb
aam
fcmovnbe
adc
add
stos
testl
mov
es
xchg
cmp
fcomps
mov
mov
mov
lea
jbe
test
in
call
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
dec
mulb
jb
cmp
popa
std
and
inc
stc
or
enter
xlat
or
dec
add
popa
shl
pop
and
aam
dec
pop
stos
or
mov
insl
mov
sbb
xchg
or
fdivs
jnp
in
add
and
xor
jp
push
icebp
push
inc
es
jmp
bound
pushf
fsts
je
movsb
mov
bound
push
add
je
pop
notl
mov
cwtl
pop
pop
stos
pusha
insb
repz
pop
sbb
dec
add
fs
test
add
mov
adc
cld
arpl
in
push
dec
jl
sbb
ss
addr16
add
sub
aam
lock
sub
inc
add
test
mov
cmp
movsb
pushf
dec
adc
dec
cmpl
or
and
mov
sub
cwtl
adc
stos
sarl
dec
dec
xor
sbbb
adc
popa
test
mov
pop
cmp
iret
das
fistpll
pop
add
std
sbb
cli
cli
push
adc
dec
lret
sbb
push
mov
data16
into
dec
lods
aas
mov
xlat
mov
mov
mov
push
into
and
jecxz
mov
std
arpl
xor
shrb
roll
mov
ret
dec
std
or
lods
fmul
xchg
sbb
pop
cmpsl
fs
cld
dec
adc
int
xlat
pusha
fcoms
subl
inc
cli
insb
cmpsl
sbb
push
mov
xchg
bound
dec
scas
mov
fists
mov
out
mov
xchg
cmp
pop
movsb
std
xlat
addl
sbb
jbe
cmpsb
test
cmc
js
test
mov
push
push
pop
es
in
adc
bound
cmp
push
mov
sbb
dec
or
pop
mov
adcl
lock
decl
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
inc
and
fnstcw
cmp
cmp
push
and
lcall
in
inc
or
mov
int3
push
pusha
pop
add
int
jg
and
sub
hlt
ljmp
js
jne
pop
cmpsb
jns
lds
popa
xor
add
push
xchg
es
pusha
lock
cmp
mov
pop
mov
test
xchg
arpl
int3
push
enter
sub
out
push
mov
xor
bnd
fnstcw
enter
sub
add
rclb
add
jge
fwait
adc
cs
gs
outsl
loope
hlt
cmp
jecxz
cwtl
int
lcall
test
mov
lock
jecxz
add
jo
insl
leave
insb
std
jns
sbb
outsl
gs
adc
loopne
loop
lcall
paddd
mov
sub
sub
ss
enter
xor
ds
inc
cmpl
jmp
out
es
sbb
xchg
shlb
lahf
inc
out
cmp
jns
ret
scas
notl
and
js
cmc
pop
test
xor
and
adc
xor
mov
adc
test
mov
aam
sbb
and
jo
lret
and
ljmp
or
cmpsb
or
mov
mov
add
lock
sub
pop
outsl
lea
movsb
inc
push
ljmp
cld
outsl
cmp
mov
lods
jae
adc
dec
jecxz
dec
movsl
push
les
xchg
sbb
rclb
pop
out
iret
stos
pop
scas
push
or
xor
stos
adc
int
xor
jp
pop
pop
imul
sti
inc
mov
mov
dec
in
scas
mov
push
dec
test
icebp
adc
enter
addr16
adc
lgdtl
fnstcw
mov
test
lret
insl
cmp
cmp
cmp
arpl
jbe
arpl
xchg
jge
xlat
add
mov
fimull
cmp
ret
daa
mov
mov
push
sbbl
jmp
lds
popa
mov
fisttpll
jg
in
jle
jl
jle
mov
mov
sub
mov
xlat
cmp
sub
fsubrl
shll
sbb
pop
fwait
into
pop
sbb
lret
loope
notl
scas
out
mov
jnp
fldcw
mov
jmp
lret
sub
shr
outsb
cwtl
shll
dec
repz
lret
outsl
mov
nop
cltd
popa
dec
jne
push
sub
mov
shl
sbb
sbb
pop
or
mov
call
in
add
fwait
push
mov
jmp
shl
repz
mov
dec
mov
jbe
lcall
std
sub
cmp
cmpsb
xor
jmp
pushf
loopne
inc
outsl
and
cmp
sbb
jne
xchg
sub
in
pop
ret
insb
or
lret
dec
xor
imul
mov
sub
leave
mov
shrb
das
push
shr
idivb
xor
mov
xchg
dec
clc
adc
adcl
lret
addr16
sahf
mov
jnp
lods
stos
xchg
ret
insb
mov
pop
mov
adc
adc
jns
fwait
insb
xchg
mov
fistl
xlat
jne
cmp
mov
ja
cmpsb
jl
jne
jp
ss
mov
sbb
xor
mov
cmc
inc
sub
rcrb
mov
enter
jl
fnstenv
pop
pusha
pop
dec
ffree
mov
mov
pop
addb
stc
leave
mov
push
das
ss
call
ljmp
inc
jbe
lods
cmp
clc
pusha
and
mov
int
stos
jle
scas
fstl
cmp
je
xor
dec
jne
mov
mov
shl
into
and
sub
loopne
xor
cwtd
mov
cli
addb
out
pop
inc
xchg
fimull
fildll
dec
ret
mov
pop
enter
mov
mov
cmp
jnp
sbb
inc
inc
add
push
fsub
in
iret
test
sbb
and
mov
xchg
pusha
lahf
mov
ret
frstor
jb
leave
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
add
jle
cmp
sub
in
cld
xor
aam
jmp
movsb
pop
pop
out
lret
or
sub
lods
cwtl
mov
fstl
jmp
lods
push
cmp
add
cmp
addr16
xor
mov
std
mov
dec
pop
add
mov
mov
and
jbe
push
jae
enter
stc
adc
or
clc
enter
jecxz
or
data16
sbb
fldcw
loopne
inc
adc
inc
dec
leave
andb
jne
cmp
pop
fldl
ds
mov
repnz
daa
inc
fmuls
out
sbbl
sub
repz
inc
add
xchg
shrl
sahf
push
push
stos
out
mov
or
mov
lods
push
or
xor
sbb
daa
inc
push
mov
imul
test
mov
movsl
popf
arpl
jnp
sub
jns
std
mov
jb
into
jecxz
mov
inc
mov
jae
cs
jecxz
xor
mov
and
dec
aad
jne
fcmovbe
xchg
dec
test
shll
js
cmp
loope
fistps
cli
in
lods
xchg
mov
das
inc
xchg
test
push
call
pop
or
gs
out
mov
push
mov
adc
inc
or
pop
faddl
inc
or
fisubrl
aas
fidivrl
sub
jmp
adc
testl
xor
and
cld
jnp
cmp
rcll
aas
orb
and
mov
xor
xchg
or
lea
fucomip
movsb
ljmp
inc
inc
test
loop
pop
xchg
xchg
scas
mov
andl
cs
mov
in
out
mov
ret
popf
push
cltd
mov
rcll
adc
enter
adc
std
das
or
out
and
scas
subl
shlb
sub
idivb
movsl
into
mov
sub
call
imul
push
pushf
imul
mov
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
mov
loopne
jle
jl
jle
les
idivb
stos
pop
rorl
dec
cld
lods
mov
pushl
cmpsb
pop
xor
roll
adcb
rol
mov
sbb
add
mov
lock
aam
clc
in
sub
pop
push
push
test
mov
inc
inc
mov
sbb
out
fwait
xchg
cmp
push
shl
mov
dec
out
xor
cmc
push
inc
movsl
dec
fwait
mov
or
je
mov
and
pop
jb
mov
enter
push
movsl
inc
push
xlat
les
jl
mov
loope
out
push
es
push
in
or
daa
jbe
mov
inc
inc
push
push
jbe
cli
imul
push
clc
lods
inc
sbb
in
out
jp
xchg
dec
mov
fstpt
ds
cld
filds
popf
and
adc
loopne
imulb
popf
out
pop
rcrl
jp
or
loope
fsub
adc
and
fisubrl
xor
mov
mov
adc
cmp
icebp
jle
pop
pop
cmpsl
fwait
pop
dec
xor
test
decb
pop
daa
icebp
fs
jmp
dec
clc
or
cmp
push
pop
dec
inc
inc
stos
add
adc
add
loopne
xor
and
mov
mov
add
sbb
in
jle
cmp
jbe
daa
adc
clc
xchg
lcall
add
pop
mov
cmp
sub
aas
adc
lds
jp
dec
xor
jg
subl
and
int3
out
xchg
bound
or
jmp
xchg
xchg
xchg
xchg
sub
sahf
arpl
or
mov
loope
cmp
out
add
sub
push
lcall
mov
pop
or
cmp
cltd
daa
xchg
inc
imul
stc
add
incb
jge
cmp
fcmovnu
xchg
xchg
adc
lcall
pusha
test
out
push
test
adc
jl
rclb
mov
fldenv
xor
in
stos
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
int3
inc
bound
cmp
jne
push
mov
xchg
stos
xchg
xchg
adc
xlat
fcomps
lcall
hlt
push
push
into
cmp
dec
cwtl
mov
loope
enter
stc
sarl
int3
fildll
daa
movsb
repnz
aas
xor
jbe
jecxz
rcrb
mov
add
mov
aam
idivb
xor
xor
sub
sti
ss
mov
mov
int
dec
mov
pop
mov
mov
insl
sub
push
adc
pop
and
jae
out
cmpsb
or
xor
loop
xchg
dec
fbstp
adc
or
jns
fucom
in
fwait
cwtl
in
adc
adc
xchg
cmp
mov
adcl
out
mov
in
inc
xchg
das
sub
jge
test
jp
or
mov
movsl
repnz
fdivr
mov
addr16
cltd
jge
cmpsl
cwtl
pop
sbb
pop
cmp
outsl
mov
sbb
cmc
into
cmpsb
imul
rol
xchg
enter
xlat
ljmp
shrl
and
orb
pop
das
popa
in
jle
xchg
mov
scas
aaa
mov
stc
jmp
mov
iret
inc
mul
movsb
es
push
fiaddl
cmpsl
in
inc
cmp
push
test
jmp
xchg
je
int
test
into
scas
lock
push
int3
bswap
push
fildll
xchg
cltd
mov
lret
fsubs
aad
lret
pop
filds
lods
inc
add
insl
adc
and
xchg
mov
mov
cltd
lds
xchg
adc
lock
and
sarl
fdivrl
push
in
shll
loop
das
inc
repnz
nop
mov
mov
movsb
push
xchg
cld
add
std
mov
or
and
sbb
inc
inc
pop
cmovno
pop
jno
loopne
mov
push
xor
inc
mov
mov
icebp
dec
dec
jl
push
cmp
jecxz
mov
inc
into
mov
int
inc
pop
js
push
hlt
cmpsl
xchg
sub
add
scas
mov
stos
ret
sub
ret
cmp
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
mov
jle
jl
jle
insl
subl
xor
es
add
out
xor
push
js
pushf
dec
sbb
mov
in
dec
xor
insl
sbbl
sahf
jns
ffree
push
in
inc
iret
dec
pop
stc
add
fidivs
bound
je,pn
fmull
jnp
lret
push
mov
push
int3
pop
mov
or
adc
lods
insb
sahf
rclb
cmove
adc
into
cmp
jne
pop
addb
ds
stos
sahf
shlb
cmp
icebp
iret
inc
repz
mov
ds
aam
movd
mov
aas
xchg
push
int
push
push
sti
inc
jno
inc
inc
adc
lea
lea
mov
cmpb
xchg
jbe
out
or
add
mov
je
xchg
les
decb
sub
xchg
mov
sbb
adc
adc
jl
jae
xchg
sub
adc
xchg
or
push
or
loopne
add
push
dec
jne
repz
jl
mov
cmpsl
enter
cmp
stos
xchg
into
movsl
pushf
imul
dec
cwtl
loopne
arpl
enter
add
and
es
andb
sbb
scas
out
push
bound
pop
in
daa
enter
mov
pusha
and
and
lcall
sahf
lea
add
inc
adc
outsl
outsl
sahf
movsb
pop
ss
shl
or
cmp
and
pop
sbb
in
dec
mov
pop
insb
imul
test
int
lahf
aam
orl
mov
push
bound
xor
pop
fsubp
and
mov
add
mov
lahf
mov
popf
mov
lret
dec
bound
push
mov
aad
xchg
in
mov
mov
mov
mov
jmp
adc
pop
or
add
cmp
or
bound
insb
stos
stos
adc
ss
add
push
mov
subb
inc
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
xchg
mov
shr
jle
cmp
cmp
into
xchg
es
inc
mov
pop
leave
out
cmp
sub
add
xor
repz
ds
pop
push
push
fs
dec
outsl
mov
mov
faddl
je
lcall
dec
sub
push
xchg
outsb
xor
test
adc
cmp
jo
xor
mov
insl
ljmp
decb
iret
fnstcw
les
cmp
add
fcoms
dec
ret
jne
jbe
or
sub
or
push
cltd
pop
adc
pop
or
push
or
sbb
mov
iret
and
mov
in
adc
add
fidivrl
add
and
mov
lods
xchg
jmp
std
jnp
pushf
mov
xchg
jp
sbb
jb
out
loopne,pt
xchg
repz
sub
jbe
shl
sbb
ret
icebp
aas
sahf
pop
popf
test
lea
or
sahf
aaa
and
pop
outsb
add
repnz
xlat
test
das
or
fucom
outsb
and
repnz
in
jg
jge
repz
fs
icebp
lcall
lcall
xchg
mov
call
rorl
sarb
clc
cmp
dec
xor
sbb
mov
lea
mov
test
or
mov
cmp
adc
int
negl
fstpt
jecxz
sahf
pop
lahf
insb
out
rcrl
cli
fbld
mov
rcrl
incl
and
aam
mov
adc
fsts
jae
pop
repnz
push
std
out
xchg
sub
mov
out
sti
and
mov
pop
ljmp
sbb
mov
or
insb
aaa
pop
inc
mov
fwait
adc
into
mov
cs
ljmp
or
xchg
add
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
lds
inc
repz
in
add
and
push
fists
lret
jns
iret
sbb
std
jl
rcrb
mov
cwtl
aad
xor
pop
xlat
fmuls
aas
js
pop
dec
mov
push
dec
popf
jp
daa
adc
cmp
push
ss
into
scas
dec
fmulp
mov
jg
rorb
push
mov
or
sbb
hlt
test
jo
push
in
push
mov
add
fcomi
jae
xorb
inc
dec
js
imul
pop
jle
jmp
pop
aam
jo
call
fiadds
sbb
ja
daa
enter
arpl
sbb
mov
stc
stos
ret
pusha
jnp
cld
push
ds
hlt
call
sbb
clc
mov
lret
scas
iret
add
into
xchg
mov
inc
out
sahf
sbb
dec
pop
repnz
lahf
in
and
subl
xor
sub
gs
paddq
and
push
mov
adc
icebp
fmulp
out
mov
dec
test
in
xor
mov
lea
add
outsl
mov
movsl
arpl
in
jnp
adc
test
cmp
mov
sub
push
mov
pop
sub
inc
mov
cmc
fisubl
ds
mov
shlb
out
fists
insb
jg
mov
sbb
test
jno
adc
mov
roll
xchg
inc
shll
loopne
pop
movsb
test
outsb
mov
jnp
xchg
push
popf
cwtl
push
mov
js
mov
jb
mov
js
dec
jnp
sub
adc
je
jbe
sub
imul
lds
cli
repnz
jle
adc
pop
aaa
scas
insb
icebp
push
insl
das
gs
and
pusha
call
inc
adc
callw
dec
gs
push
adc
pop
pop
mov
inc
inc
aas
mov
ds
cmp
xchg
dec
in
cmp
push
dec
and
sub
stc
out
mov
add
inc
shrl
or
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
push
push
and
jle
jl
jle
pop
icebp
arpl
mov
imull
stos
repz
push
mov
add
cmpsl
add
sub
mov
ret
cld
add
inc
mov
psllw
push
xor
cmp
sbb
in
frstor
scas
test
pop
xorb
jg
jbe
loop
mov
push
repnz
aaa
mov
pop
mov
test
add
mov
pushf
ret
jne
push
cli
sti
sbb
aas
cmp
mov
inc
pop
pop
mov
xchg
jo
push
push
cwtl
loopne
inc
dec
xchg
fmuls
xor
hlt
cmp
addr16
mov
jmp
cmp
jnp
inc
sub
fucomip
sub
lret
dec
add
push
lods
pop
jb
jle
sub
jmp
fnstcw
and
aas
mov
mov
pop
xor
dec
hlt
je
push
adc
jne
sub
loope
jae
mov
pusha
cmpsl
pop
in
sarb
je
jp
hlt
sbb
mov
pop
or
stos
push
push
xor
jno
data16
jae
cmp
loop
jb
movsl
out
imul
addr16
es
push
jno
movsb
in
dec
jnp
xchg
mov
cmp
lcall
xor
fdivs
or
xlat
out
jle
sti
cmp
ret
faddl
lods
add
inc
xchg
jb
ss
jnp
cmp
mov
out
dec
adc
sub
sub
mov
loope
nop
pop
mov
add
outsl
dec
fstl
sub
mov
pushf
testb
lret
cmpsb
fwait
cmpsb
test
inc
out
sbb
aas
sbb
pop
jo
and
and
mov
inc
push
dec
fcomps
and
std
and
jecxz
inc
cltd
or
int3
jbe
or
sarl
xorb
pushf
mov
sub
mov
cmp
std
push
inc
push
lret
fcoml
cli
xacquire
and
push
test
cmpsl
popa
or
out
test
or
mov
repnz
stos
ss
xlat
inc
mov
cltd
divb
aas
decb
cli
mov
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
dec
jnp
subb
jle
cmp
movsl
enter
xchg
js
jg
and
jle
pop
mov
jo
mov
leave
mov
mov
int3
jg
shll
and
dec
hlt
xchg
adc
insl
sub
xor
inc
idiv
fsubs
pop
cmpsl
mov
sub
fcomps
fs
pop
or
pop
loope
mov
add
in
push
or
in
mov
sub
mov
push
mov
or
mov
pop
or
mov
mov
inc
pop
mov
inc
pushf
dec
push
xchg
in
mov
testl
orb
dec
or
scas
ljmp
js
es
aaa
cmp
pop
sbb
pop
enter
xor
push
jnp
pop
or
push
loopne
xor
dec
cmp
jb
push
cmpsl
mov
inc
xchg
mov
and
cmp
lock
insb
dec
jle
or
addb
into
pop
out
and
loopne
sub
lods
push
lods
and
daa
adc
dec
mov
imul
cmc
adc
cld
lahf
mov
lret
mov
mov
sub
or
ficoml
push
stos
dec
sbb
mov
xor
and
pop
movsb
cmpsl
fisubl
push
push
dec
mov
repnz
in
inc
push
add
jo
xor
test
pop
cmp
xchg
mov
mov
mov
jns
push
or
sarb
cld
fwait
push
rcll
bound
jo
mov
fldl
cmc
fstpt
stos
fldenv
enter
push
pop
mov
pop
into
shr
rolb
pop
dec
es
push
sbb
sbb
ret
lcall
push
ss
in
jbe
lea
cmp
xlat
out
or
insb
xor
xor
pop
movsl
fs
divl
sarb
iret
clc
fisubl
jns
aad
or
call
stc
xchg
sbb
xor
inc
mov
adc
inc
cs
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
mov
in
call
jl
jle
mov
outsb
lock
fisttpll
sbb
aam
pop
and
add
mov
xchg
add
js
inc
push
mov
test
mov
clc
adc
push
jg
pop
or
adc
test
mov
cmp
fmul
popf
and
sub
clc
xchg
es
inc
xchg
xchg
sub
movsl
xchg
js
xor
sbb
mov
mov
push
or
mov
xor
adc
pop
mov
lock
cmpsb
mov
das
jae
in
xchg
jne
int3
cld
xlat
sbb
jmp
push
out
mov
jp
insb
dec
out
add
icebp
and
test
push
add
push
scas
add
and
rorb
test
jns
dec
fcoms
jmp
xor
cltd
jp
fildl
jmp
sbb
jne
jnp
sbb
xor
imul
inc
cltd
aaa
sub
nop
js
and
fdivrl
cwtl
jne
jmp
mov
in
jb
or
mov
or
cmp
cmp
movsb
ss
xor
das
sahf
push
dec
dec
pop
gs
mov
jmp
cmpsb
push
shrb
push
adc
jle
mov
and
or
scas
aas
ror
movsl
mov
in
lret
cmp
out
stos
and
push
js
add
mov
jge
fdiv
jmp
mov
mov
test
imul
nop
mov
inc
push
and
mov
cld
shr
mov
jle
add
sahf
lret
sbb
xor
mov
fldt
sbb
jmp
mov
mov
jmp
jmp
cmp
pop
outsb
push
pop
js
daa
mov
enter
in
ret
orb
xchg
test
cmp
cmp
xchg
and
mov
lods
hlt
sahf
and
push
daa
xor
mov
vpackssdw
mov
push
push
xchg
scas
addb
clc
gs
jne
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
inc
dec
add
cmp
mov
lods
lock
push
std
mov
xchg
xchg
dec
mov
jge
icebp
mov
pop
push
aaa
je
or
test
outsb
xor
pop
bound
cmp
push
cmp
and
addr16
test
daa
mov
sub
adc
cmp
sbb
lods
lret
pop
mov
aas
sub
xchg
pop
push
mov
pop
xchg
outsl
in
mov
jbe
push
push
xchg
inc
mov
loope
and
in
mov
filds
push
and
cli
sub
pop
dec
and
test
push
add
cli
aas
mulb
pop
outsl
stos
aam
arpl
sub
mov
scas
xchg
call
mov
cmc
pop
out
int3
loop
fcmovbe
pop
push
popf
or
fwait
pop
test
cmc
add
es
js
dec
or
mov
fwait
or
ljmp
mov
lret
sbb
xchg
loope
sarb
sbb
xchg
lret
sti
bound
loope
lock
push
dec
cld
aam
fisttps
fnstcw
mov
mov
in
mov
icebp
gs
test
clc
xchg
jge
add
ret
jns
mov
lods
sbb
clc
xchg
or
mov
mov
fs
pop
cmp
hlt
enter
gs
lods
inc
mov
cld
shrl
enter
xchg
stos
out
lds
mov
sub
inc
dec
inc
movsl
call
ret
pop
push
ret
and
fmul
and
inc
shrl
inc
rolb
inc
roll
leave
sub
sub
pop
sbb
int
xchg
andl
cli
aas
ja
movsl
push
es
leave
xchg
inc
xchg
dec
pusha
sbb
sbb
lods
mov
insl
sbbl
sub
daa
rcr
push
xchg
out
fisttpl
adc
stos
enter
or
and
iret
ds
xor
fisubrl
mov
stos
xchg
cmc
mov
cmp
jmp
or
sahf
lods
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
lcall
jl
jle
add
xor
push
sub
and
cmpsl
xchg
mov
mov
scas
cmc
jge
lds
cli
mov
lahf
cld
dec
pop
jle
jns
sub
sub
ds
aad
inc
inc
xchg
cmc
mov
dec
in
shrl
mov
pop
ret
xchg
mov
mov
lods
mov
sbb
adc
push
mov
sbb
jmp
out
loopne
add
dec
fmull
lahf
pop
lods
xor
xor
xchg
mov
inc
mov
pop
sub
int
call
mov
icebp
mov
dec
xor
dec
xor
push
add
fbld
mov
xor
dec
mov
roll
icebp
clc
popf
xchg
aas
adc
dec
rclb
repz
or
pusha
mov
ret
repnz
ljmp
repz
jl
push
inc
jl
or
ret
fsubl
in
sub
adc
sbb
sarl
int3
dec
cmc
sarb
sub
inc
cltd
lea
adc
xor
aaa
ret
push
dec
pop
ret
adc
in
mov
push
mov
mov
mov
adc
push
scas
mov
fst
dec
pop
pop
mov
xor
pop
cmc
jmp
test
js
inc
pop
ja
sub
mov
insb
mov
push
clc
arpl
dec
mov
push
adc
movl
decb
jns
mov
int
call
out
mov
adc
hlt
xchg
pop
dec
mov
xchg
in
movsl
push
xchg
in
loope
mov
ret
add
mov
aaa
pop
aas
adc
test
fisubs
xchg
sub
in
iret
shrl
xchg
xchg
push
mov
push
out
pop
push
pop
push
lds
mov
mov
popa
shll
jmp
sub
leave
out
ljmp
cmp
daa
cs
adcl
mov
daa
ds
shll
fdivl
test
sub
arpl
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
int3
aam
adc
sti
jle
cmp
popf
pusha
jg
cmp
mov
rclb
mov
pop
scas
addb
jno
dec
cmpsl
fsubrp
sar
cmp
xchg
adc
pusha
movsl
dec
mov
subb
jle
xor
out
fwait
jae
fstp
adc
mul
cmp
or
and
push
mov
dec
and
fidivs
cmp
cs
and
jno
and
imul
ds
cmc
ja
in
mov
je
lcall
sub
andb
dec
mov
fistpl
sub
xor
inc
pop
pop
xor
les
scas
jae
jl
pop
adc
cmc
sub
ret
push
lcall
inc
mov
mov
push
dec
mov
loopne
ret
ret
cmp
dec
fnstsw
pop
mov
int3
icebp
shl
rol
lret
imul
inc
ja
xchg
bswap
and
ss
ret
and
int
jb,pn
jb
cmp
cmpsl
out
daa
fisttps
cwtl
sub
push
pop
mov
inc
xor
js
rcll
shlb
rep
imul
rclb
stc
int3
insl
mov
mov
out
dec
pop
push
and
jo
add
scas
mov
mov
mov
divb
mov
xchg
jne
rol
or
fwait
out
lods
add
add
cmp
test
pop
imul
rcrl
mov
lods
sbb
fs
fdivs
hlt
outsb
cmpb
pusha
sub
cmp
or
aas
mov
cmpsl
repnz
add
aam
rcrb
data16
out
lahf
shl
daa
outsb
ret
enter
or
imul
mov
mov
loopne
sub
ja
mov
inc
fisubs
into
mov
mov
xor
push
into
out
adc
repz
negb
dec
lods
push
push
xor
repz
inc
mull
and
out
sti
xchg
aas
aaa
rcrl
add
ret
jg
jmp
adc
push
test
pop
in
in
sbb
pop
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
addb
jle
es
jge
mov
mov
fs
enter
pop
inc
hlt
sbb
cmp
mov
cli
xor
mov
dec
sub
sbb
mov
dec
and
pop
sub
pop
push
mov
addr16
stc
or
adc
fimull
in
js
push
adc
dec
inc
sahf
inc
dec
sub
add
push
xor
pop
mov
pop
jecxz
repz
adcb
xchg
mov
mov
pop
ret
and
lahf
push
dec
dec
pop
cmpl
or
movsl
aam
inc
scas
ror
fwait
addr16
mov
lahf
mov
inc
mov
cmp
clc
xchg
inc
jns
add
xchg
sbb
lret
mov
movb
dec
fcmovnu
stc
aad
fwait
mov
dec
push
or
mov
shr
push
loop
out
repnz
test
dec
sub
mov
push
pop
mov
setno
imul
push
es
je
outsb
dec
sub
push
stc
dec
mov
mov
data16
mov
hlt
lds
inc
repnz
pop
dec
inc
orb
mov
inc
xor
dec
mov
pop
lcall
cmp
mov
push
sbb
sarb
mov
or
jae
movsb
aas
insl
cmp
subl
sarl
push
fmul
iret
cmpsl
dec
out
das
arpl
sub
gs
rorb
jae
cmp
andl
xchg
xor
mov
enter
mov
jle
push
scas
mov
adc
add
and
dec
stos
subb
or
enter
xor
fidivl
mov
add
sbb
das
out
adc
mov
jmp
xchg
adc
ljmp
jb
push
insb
pushf
xchg
dec
popf
loopne
cmp
dec
sub
ror
aaa
pushw
jb
into
mov
mov
dec
add
pop
cmpsb
imul
scas
cmpsl
bound
pop
mov
repz
or
mov
ficoms
xbegin
cltd
xlat
adc
mov
adc
jmp
std
roll
in
scas
shrl
mov
jmp
dec
loop
lds
push
jo
mov
sub
pop
dec
stc
dec
xchg
cmp
pop
sub
sub
cli
xchg
fisttps
xchg
lods
sbb
and
loop
loopne
inc
rcrl
scas
sahf
inc
sub
notb
mov
push
push
push
rcrb
jmp
imul
inc
lods
dec
js
and
push
lret
mov
xor
cmp
popa
sub
out
push
loope
cmp
mov
xchg
outsb
repz
add
jmp
cltd
cmp
pop
loope
push
ret
jbe
into
cld
inc
xor
test
loopne
mov
inc
into
jg
test
pop
pop
clc
mov
cmp
push
sub
cmc
mov
fldl
pop
mov
inc
clc
inc
adc
in
mov
loope
xchg
cltd
push
mov
in
mov
leave
pop
movsb
adc
sti
jmp
pop
add
mov
pop
clc
sbb
idivl
cmp
pop
fimull
cltd
and
sahf
es
nop
sub
outsl
xlat
cmc
ds
int
pop
and
dec
mov
cmp
int
mov
mov
pop
and
ret
mov
int3
dec
cwtl
sarl
fisttps
push
and
adc
imul
mov
add
add
push
pop
repz
push
jmp
mov
adc
lea
cs
in
test
in
or
rorl
fwait
sub
pop
fistl
mov
pushl
cmc
adc
sub
ljmp
fimuls
mov
xchg
imul
cmp
js
push
std
adc
pop
bound
jge
sti
jmp
jg
arpl
sub
outsb
sti
inc
arpl
xchg
xchg
dec
les
sub
sbb
mov
lahf
jbe
mov
xor
xchg
test
dec
ja
lock
pop
popa
cmc
mov
stos
jl
lahf
mov
stos
sub
fmull
push
rorb
movsl
jns
jo
cmp
mov
sbbl
cwtl
pop
adc
mov
mov
dec
mov
scas
stos
xchg
inc
push
in
repnz
lods
test
out
or
dec
inc
mov
loop
or
xchg
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
rorl
jle
cmp
mov
popf
mov
aaa
loop
addr16
je
sar
cmp
or
cmp
loop
and
jno
and
jo
mov
das
repnz
loopne
ret
adc
push
dec
iret
sbbl
cmpsl
pop
push
lret
test
or
xor
dec
in
inc
ficomps
pop
cmp
ja
ds
fsubs
sub
inc
jp
aaa
push
fistps
mov
jno
jbe
enter
jae
iret
jne
in
test
adc
movsb
sub
roll
cmp
inc
orl
scas
cmp
mov
fcoml
pop
push
and
test
das
mov
leave
mov
xor
nop
push
mull
sti
fdiv
jecxz
bound
sub
pop
push
mov
fldt
mov
addl
std
sub
push
mov
pusha
je
imul
jne
sbb
fs
mov
aaa
out
sbb
ficoml
int
int3
les
push
js
push
jbe
sbb
arpl
mov
imul
leave
std
xchg
and
xchg
push
bound
adc
dec
es
inc
or
inc
push
fs
js
mov
dec
test
lods
jmp
test
std
jae
lret
imul
in
add
pusha
dec
or
pop
sub
es
cmp
je
mov
push
jae
out
mov
in
xor
js
in
sti
outsl
xor
ljmp
repz
jns
pop
aad
insb
dec
sbb
mov
sbb
add
test
mov
andl
in
rcl
jb
push
inc
mov
jno
add
push
cmc
inc
out
mov
pusha
mov
sub
addr16
ret
and
xchg
add
out
mov
sbb
movsl
mov
testb
xchg
ds
shl
out
jo
mov
xchg
and
jne
ret
mov
lret
mov
mulb
pop
fldt
enter
cmc
jg
lods
aad
leave
shlb
push
std
popf
outsl
jbe
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
addr16
cmpb
jl
jle
inc
out
mov
cli
in
mov
add
or
sbb
loopne
test
pop
icebp
jle
push
inc
pushf
mov
cmp
into
xchg
or
jge
pop
roll
sbb
aam
mov
pop
and
lcall
push
mov
pop
sub
rcrl
loop
stos
jae
dec
orb
or
push
enter
out
daa
mov
out
push
jecxz
or
mov
decl
push
bound
sub
pop
pushf
sub
jae
adc
add
out
fisubrl
shlb
in
xor
loopne
or
pop
andb
daa
inc
dec
mov
mov
test
stc
pop
fidivrl
repz
lods
pop
test
lods
sti
sub
add
addr16
mov
xor
jbe
lret
stos
push
mov
rorb
pop
pop
aad
repnz
jns
mov
std
push
cwtl
in
dec
aaa
mov
sbbb
or
nop
test
pop
out
jo
or
gs
movsb
lret
xchg
inc
out
aaa
and
loop,pt
ja
popf
cmp
ss
add
adc
push
dec
cmp
fmul
cmp
or
push
ja
out
in
dec
sbb
dec
fs
xchg
push
mov
push
mov
daa
push
bound
loop
sahf
add
and
mov
push
std
or
mov
jmp
fwait
push
sub
pop
add
jne
lret
sbb
aas
int3
sbb
insb
mov
cmc
ljmp
cmp
pusha
scas
cwtl
xor
sub
mov
dec
popf
movsb
push
or
popa
das
cmp
add
pop
pop
jnp
adcb
js
sub
decl
repz
and
mov
ret
fidivs
cld
je
xchg
jge
and
mov
cmpsb
xchg
in
das
test
outsb
push
sbb
imul
sub
out
cltd
hlt
jl
arpl
adc
sbb
roll
mov
push
adc
shr
add
add
mov
cwtl
mov
mov
cmp
mov
cmp
roll
push
and
movsb
xchg
cmp
mov
push
fdivs
insl
test
iret
or
cmp
xchg
fsubl
js
inc
adc
xchg
es
add
repz
pop
sub
arpl
inc
cmp
bound
rcll
jle
in
push
int
xor
xchg
add
incb
mov
jl
jno
sbb
push
cli
xor
add
push
inc
fisttpll
add
fdivr
or
xlat
xor
pusha
lcall
add
mov
enter
fstps
pushf
in
pop
std
sbb
mov
cmp
das
inc
outsl
outsl
rcrl
sbb
sbb
ret
pop
cmp
dec
call
push
shll
ja
ret
fdivs
cwtl
lea
arpl
shrl
int3
inc
adc
jae
cmpsl
sub
lret
call
add
lea
sbb
addr16
mov
ret
mov
xor
shl
pop
cmp
sub
les
dec
xchg
enter
sub
pop
pushf
mov
mov
rclb
mov
mov
cmpsb
sub
ja
test
bound
mov
cmpsb
adc
xor
push
mov
mov
xor
mov
ret
jns
mov
aaa
stos
inc
movsl
test
xor
scas
insl
popf
movsl
mov
jnp
mov
push
and
push
inc
jmp
xchg
hlt
sub
lret
xor
push
int3
add
lock
mov
or
cli
imul
xchg
mov
mov
or
cwtl
mov
sbb
or
dec
sub
xchg
xchg
sub
ret
in
inc
jmp
stos
adc
dec
pop
pusha
add
xchg
enter
std
add
jl
sti
sarl
mov
dec
jns
pop
aad
mov
fdiv
push
inc
lahf
repz
out
fldl
dec
xchg
mov
add
fiaddl
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
lret
bound
jle
jg
fimull
jle
fidivrs
push
pop
out
mov
mov
mov
call
xchg
sti
lock
jp
add
sbb
call
sbb
xchg
incb
cld
insl
sbb
xchg
lahf
mov
or
push
mov
ror
stc
dec
or
xchg
stos
ss
lods
pop
iret
inc
jo
and
push
out
adc
xor
dec
stos
je
cld
loopne
fstl
imul
cltd
xchg
lcall
pop
loope
shrl
insl
fadd
dec
in
leave
loope
mov
out
nop
daa
mov
or
jg
cmp
cmpsb
movsl
enter
mov
dec
les
aas
xor
mov
outsl
pop
test
inc
repz
imul
and
xorl
enter
xor
repz
shrl
and
jbe
mov
stc
or
xchg
pop
mov
into
shll
imul
mov
inc
shrb
cmc
add
mov
sbb
or
push
xor
lea
pop
call
xchg
cwtl
scas
mov
cmpsl
jg
sbb
gs
lock
pusha
data16
decl
imul
dec
mov
enter
sbb
jmp
adc
pop
arpl
dec
leave
sahf
adc
ret
aaa
sbb
pop
out
ljmp
and
jns
push
push
scas
push
inc
xlat
test
or
and
xchg
jle
adc
ljmp
xchg
imul
aam
jns
add
mov
dec
or
mov
in
into
jle
call
ret
aas
push
sti
jnp
mov
mov
icebp
fdivrs
xchg
mov
inc
imul
hlt
pusha
and
aas
dec
xchg
inc
js
or
add
rcr
outsb
fdiv
push
sub
jmp
ret
dec
mov
pop
xchg
inc
dec
aaa
mov
push
mov
sbb
shrb
push
imul
into
loop
flds
add
push
std
dec
sahf
push
push
add
aas
jmp
scas
sub
jle
cmp
pusha
leave
mov
add
pop
pop
and
data16
and
sti
sub
les
test
mov
jmp
push
dec
mov
push
pop
subb
jle
inc
push
pop
mov
pop
lret
je
aas
shrl
or
fnstcw
mov
pop
outsb
fstps
or
push
push
out
out
inc
pop
loope
jae
dec
inc
push
fisttps
mov
pop
xchg
jp
push
rorb
mov
push
xchg
jp
pop
xorb
xchg
dec
mov
js
or
jnp
add
adc
sub
test
sub
xlat
in
insl
dec
fidivrl
cmpsb
scas
cmc
imul
test
arpl
stc
pop
stos
popf
and
sti
daa
popa
inc
jge
mov
dec
jne
out
aad
sarb
popa
aad
test
pop
mov
pushf
push
shl
movsl
int
insl
insb
push
inc
aas
inc
lods
lret
scas
or
cs
in
or
loop
inc
xchg
or
pop
inc
add
jl
jmp
jmp
or
push
lcall
fisubs
adcb
adc
jmp
push
js
lds
and
xor
lcall
push
xchg
test
in
cmp
sbb
daa
in
mov
imul
loop
lock
push
xor
lcall
xor
xabort
les
lahf
call
cmc
shll
mov
loope
push
popa
sbb
push
setno
xchg
and
lcall
ljmp
pushf
fisubrs
push
in
jl
mov
lret
xor
adc
cs
imul
aam
repz
add
cmp
sub
mov
into
in
cli
sub
mov
mov
inc
sbb
dec
fdivrl
mov
mov
aas
aaa
daa
mov
es
lret
sbb
and
mov
sbb
fildl
in
ds
mov
add
xor
testl
and
repz
nop
mov
stos
mov
inc
mov
in
scas
roll
xchg
jmp
sahf
testb
push
repz
jae
ficoms
pop
int
mov
mov
cmp
std
aam
sbb
push
push
xchg
mov
movsb
fsubrp
sub
into
cli
fwait
cmpsl
jecxz
adc
shlb
subl
dec
jmp
fsubr
mov
out
imul
inc
or
cmp
pop
sbb
dec
pop
aam
sbbl
lcall
repnz
jae
imul
xchg
push
stos
lods
inc
pop
and
push
adc
aam
adc
xor
dec
rcrl
outsb
sub
aad
or
lods
insl
jle
jp
add
push
xchg
popf
jl
lret
lock
xchg
inc
mov
inc
xchg
pop
repz
xchg
mov
sbb
es
lahf
jp
sahf
or
xchg
lahf
into
cltd
subb
outsb
mov
loopne
mov
jg
lret
and
lret
popa
mov
les
xchg
push
data16
mov
test
push
mov
rclb
and
cmpl
ret
xchg
rsm
cmovp
test
imul
inc
jmp
mov
ljmp
ds
xchg
test
mov
loop
jl
push
cmp
hlt
xor
adc
gs
adc
cltd
lret
js
sbb
adcb
stos
sbb
mov
daa
das
outsl
sti
bound
lahf
out
add
jmp
shll
sbb
daa
jnp
xchg
add
mov
mov
les
cmp
cmp
imul
jno
or
scas
xchg
pushf
and
cmp
mov
or
push
subl
test
adc
in
out
outsl
jle
and
lods
lahf
cwtl
adc
xor
int
mov
push
fbstp
adc
ja
lahf
mov
mov
add
roll
or
xchg
xchg
cmp
mov
loop
push
mov
je
and
ds
dec
scas
lds
jle
fdivrs
cmc
popf
vpunpckhbw
fs
fs
aad
stc
sarb
stos
xchg
sarb
inc
jp
scas
fdivs
das
popl
stos
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
add
out
mov
jle
cmp
rcrl
inc
cmp
ficompl
stc
adc
sub
pcmpgtw
push
sarb
push
lods
incb
inc
push
fisttps
or
pop
cmp
ret
mov
inc
lods
and
loop
ret
cmp
mov
cmp
inc
push
sub
fucomip
push
jbe
int
and
mov
loopw
sub
repnz
rcrb
mov
cmp
mov
jmp
ja
cmp
subb
xorl
aad
xchg
call
adc
out
adc
test
pop
mov
jns
enter
mov
es
outsl
xchg
cli
or
mov
and
pop
cltd
inc
cmp
aam
push
dec
adc
mov
insb
imul
into
imul
cmp
sub
or
sub
test
lds
addb
inc
js
fucomip
cmp
add
test
or
mov
data16
inc
add
shlb
add
aaa
daa
rcl
xchg
test
sub
ss
pop
sbb
inc
add
push
icebp
cmp
mov
pop
sbb
dec
mov
addr16
jbe
loope
sbb
ret
iret
sub
sbb
push
fistpl
ficoml
push
and
fdivr
mov
ja
push
out
fsubrs
adc
in
or
loop
xor
xchg
xchg
aas
lods
shll
rcrb
sbbl
mov
roll
aad
sbb
loopne
ds
fidivs
add
sahf
cmp
call
jae
ss
push
push
les
sahf
bnd
pop
icebp
xor
in
mov
repnz
add
mov
mov
addr16
lods
nop
int
and
lea
lret
out
out
arpl
fsubrl
stc
jp
pop
testl
lea
mov
mov
cmc
mov
pushf
sub
mov
ret
jge
shrb
mov
mov
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
dec
jl
jp
jle
jl,pt
jle
inc
mov
xchg
xchg
cmpsl
test
add
lea
xchg
subb
aas
ret
mov
mov
sbb
adc
leave
push
push
lcall
add
clc
cmp
loopne
push
inc
call
loopne
mov
scas
popa
out
push
add
inc
add
fs
shll
mov
xchg
cmp
dec
mov
xlat
pusha
ret
int
shll
pop
xlat
je
inc
jns
cmp
mov
mov
lcall
lods
or
jmp
lahf
sbb
mov
outsl
inc
and
sub
inc
loop
incl
mov
mov
ret
or
movsl
mov
xor
aas
push
mov
cmpsl
aam
out
nop
xor
and
ficoml
bnd
or
call
adc
fiadds
push
mov
in
jno
pop
scas
inc
fcompl
std
aaa
leave
xor
cmc
imul
scas
jle
idivl
inc
movsb
bound
sar
lods
push
aas
out
cli
dec
and
imul
push
mov
imul
push
cmp
call
mov
pop
loop
call
jnp
call
iret
xchg
mov
sub
test
jl
sub
dec
lods
sbb
xchg
sub
mov
xchg
or
mov
cmc
mov
add
mov
pop
bound
cmp
or
xchg
test
movsb
mov
cmp
xchg
lods
ret
in
call
std
ljmp
call
out
loopne
jo
data16
mov
push
sub
aaa
aad
fimuls
repz
imulb
add
or
fstpt
jb
cmp
out
cmp
mov
adc
push
push
pop
mov
leave
mov
out
popf
mov
xchg
adc
stos
push
add
push
add
arpl
fs
scas
cld
lret
jno
push
pop
cmpsb
inc
call
loop
andl
pop
cmp
imul
aaa
int
push
mov
clc
jmp
mov
mov
xor
add
jmp
orl
imul
fdivrl
jle
jl
jle
in
loope
and
jno
scas
cmp
pop
or
pop
mov
push
cmp
jo
push
lcall
or
add
lds
inc
test
mov
sbb
or
lods
pop
int3
nop
mov
out
jg
mov
gs
ror
cld
les
lds
push
and
lock
stos
push
sub
sbb
adc
loop
jae
xor
ja,pn
mov
fwait
cli
sahf
inc
xchg
lds
dec
psllw
sub
push
add
dec
inc
outsb
mov
out
adc
lods
adc
icebp
sub
sahf
sbb
pop
push
inc
lea
push
mov
popa
jl
aam
mov
push
mov
lea
shlb
mov
pop
add
adc
push
sarl
sbb
inc
aaa
dec
sarb
mov
jg
fisubl
aaa
mov
jae
rcll
push
inc
pop
or
push
sub
ja
stos
or
incl
aaa
jns
flds
mov
or
movsl
imul
mov
jnp
andl
nop
xor
jns
fcmovnb
and
mov
mov
sbb
inc
fs
mov
cld
stos
sti
rcrb
dec
out
cmp
dec
add
outsb
adc
sub
dec
call
push
jmp
xchg
mov
cmc
hlt
push
add
in
pop
mov
xor
dec
sub
jmp
aaa
xlat
inc
or
icebp
inc
movl
sub
daa
pop
arpl
pop
test
push
sbb
mov
inc
mov
add
inc
push
xor
pop
sbb
repz
dec
mov
mov
pop
sbb
shll
add
mov
or
pop
or
movsl
pop
push
push
mov
shrb
call
in
ss
and
jmp
lret
jnp
mov
push
pushf
mov
xchg
test
mov
bound
ret
cbtw
adc
mov
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
or
dec
pop
out
inc
out
push
repnz
inc
outsl
xorl
cmp
inc
sarb
iret
int
addr16
inc
repnz
sub
jmp
push
loopne
jle
dec
movsl
mov
test
push
mov
ss
ret
xchg
sub
inc
sub
jbe
cmc
sti
popa
mov
or
dec
popf
push
mov
xchg
shll
mov
jae
mov
addb
ret
mov
jns
inc
mov
leave
int3
lock
int
mov
add
mov
scas
cmpsb
es
sbb
lret
or
sbb
mov
fmul
sbb
jae
or
repnz
push
fnsave
int
cmp
or
stos
stos
and
leave
and
cmc
jo
cmp
loop
jo
stc
in
int3
sub
lret
rcrb
dec
inc
cld
fwait
xorl
cmp
sub
sub
mov
mov
push
mov
push
incl
cmpsl
insb
fisttps
insl
mov
mov
gs
push
inc
add
push
into
xor
sub
movsl
cwtl
mull
in
xchg
ficoml
xchg
inc
fdivrs
push
and
ljmp
push
cmp
cmp
lods
jp
lret
jnp
repnz
rcl
fdivrl
push
xchg
iret
addl
imul
movsl
negb
push
dec
inc
daa
adc
inc
lock
sbb
mov
mov
add
rclb
mov
test
clc
pop
enter
mov
lea
scas
sub
cmpsb
mov
add
inc
cmp
mov
xor
mov
xchg
adc
loop
jae
pop
add
xor
lahf
mov
pop
fdivrl
dec
popf
out
or
push
lcall
adc
scas
or
dec
mov
bound
cli
rcrb
dec
shrl
sub
cmp
mov
test
or
insl
adc
roll
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
negl
or
jg
jle
add
xchg
cs
fisttpll
rcrl
pxor
in
arpl
and
inc
lock
or
scas
and
fimull
fildl
mov
clc
outsb
shrl
bound
sti
adc
or
out
dec
jl
push
mov
repz
pop
jg
push
jnp
and
adc
inc
stc
in
lea
inc
mov
mov
fwait
pop
pop
int3
pop
cmpl
loop
lods
add
jl
mov
inc
push
test
data16
enter
push
mov
fcomp
xchg
push
and
cmp
fs
es
ss
in
sbb
ficomps
scas
add
xchg
js
pop
das
lods
shlb
inc
mov
jp
stos
push
sbb
subb
pop
push
push
adc
pop
lret
adc
lods
sub
mov
out
fwait
rol
out
test
cwtl
and
nop
xchg
pop
lds
lock
pop
je
je
cmp
dec
inc
decb
pop
aaa
inc
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
lods
or
jle
jg
jle
xor
aad
jmp
adc
leave
fbld
and
add
in
cmp
orl
scas
xchg
adc
xchg
adc
aaa
imull
adcl
pop
mov
push
test
mov
imul
lods
data16
shll
fs
not
xor
test
sbb
js
inc
xchg
and
push
xor
cmc
incb
pusha
arpl
adc
xor
repnz
jge
out
sbb
pop
ret
push
pusha
je
or
cmp
push
jl
mov
clc
aad
jmp
dec
mov
add
js
sti
pop
jge
cmp
lcall
xchg
add
shrl
or
xchg
lret
dec
mov
sbb
pop
icebp
fs
push
inc
aam
lods
pop
clc
loope
int3
xor
fmull
daa
fisubrl
aam
fidivrs
xchg
mov
and
jo
les
mov
stc
les
and
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
cmpsl
cwtl
dec
jb
jle
adc
jle
jae
mov
inc
push
mov
or
ss
aaa
fsts
jae
pop
or
or
fwait
pop
inc
cmp
mov
add
sub
push
aam
and
test
aas
inc
int
lock
pop
and
imulw
popf
jge
mov
inc
add
jle
cmp
popf
movsb
xor
in
mov
mov
iret
stos
add
testl
roll
xchg
mov
aam
xor
pop
inc
pop
imul
out
stos
in
int3
jmp
sbb
test
adcb
push
cmp
push
sub
jae
cli
ret
test
sub
xor
mov
pop
dec
negl
jne
jmp
xchg
test
fiadds
loop
pop
in
sahf
cmp
sbbb
xchg
data16
pushf
inc
jae
xchg
adc
push
daa
jno
scas
popa
mov
lahf
mov
jmp
sub
call
add
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
jmp
cwtl
jle
adc
jle
inc
popa
fucomp
mov
clc
sbbb
jge
xor
aad
mov
mov
push
sti
or
imul
fwait
sbb
xor
imul
mov
pushf
inc
xchg
mov
leave
jecxz
push
mov
mov
adc
inc
xor
ja
repnz
into
adc
call
mov
jb
mov
cltd
jns
test
pop
shrb
bound
xor
mov
cmp
clc
cs
std
lods
push
adc
icebp
push
mov
inc
jp
cli
loope
pop
sub
mov
mov
aas
sub
arpl
xorl
mov
shlb
popl
jne
xchg
rorb
fsubrl
xchg
mov
add
mov
loopne
inc
pop
pushf
and
sub
fs
hlt
out
or
inc
movsb
dec
icebp
mov
in
movsl
or
and
lcall
push
test
bound
inc
adc
mov
cmpsb
and
jnp
fstl
fwait
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
mov
jo
cltd
jle
adc
jle
adc
mov
lret
xorb
divb
sub
out
dec
mov
dec
mov
mov
or
push
pushf
pop
adc
sahf
xor
xchg
sub
loopne
lods
pop
loop
dec
jo
lods
cmpsb
cs
adc
test
add
add
fsts
dec
push
push
sbb
sub
jno
sahf
loop
cmp
mov
enter
push
rcll
cmp
loop
xchg
pop
mov
cmpsl
xchg
jmp
ficoms
inc
mov
daa
cmp
sub
lret
mov
scas
test
and
cmp
mov
jmp
lods
lock
jmp
dec
mov
pop
imul
cmp
sub
sbb
loope
shl
in
ljmp
ss
lret
sbb
mov
ret
aad
mov
rorb
pop
pop
jmp
sub
push
mov
cmp
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
sub
jp
movsb
scas
or
inc
mov
push
add
mov
shl
sbb
sbb
ror
pop
mov
add
pop
mov
pop
repnz
inc
subl
or
and
push
pusha
mov
daa
insb
ljmp
fbstp
ret
out
repz
call
insl
aad
inc
sub
outsl
aam
sahf
jnp
push
cmp
test
and
scas
fstpl
sub
call
jb
jp
add
fisubrl
jp
aaa
add
pusha
push
sbb
mov
stc
pop
sbb
cmc
int
out
mov
mov
xor
or
insl
or
pop
out
ret
addl
sbb
add
outsl
push
sbb
mov
out
push
push
rclb
outsl
push
aaa
test
mov
jp
mov
loope
mov
cmc
push
imul
mov
add
mov
dec
flds
int
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
insl
pushf
psrad
jle
pop
stos
sbb
mov
jge
addr16
mov
push
mov
jb
adc
push
test
push
xchg
hlt
fdivl
jecxz
popf
orb
in
lea
insb
std
popl
mov
jecxz
dec
cld
mov
in
adc
mov
jne
ljmp
insl
int3
cwtl
fbstp
adc
into
sahf
and
enter
in
cmp
movb
sbb
xor
stos
push
adc
int3
and
icebp
cmp
fmull
std
movsl
push
mov
cwtl
stc
mov
push
call
rorl
in
outsb
inc
mov
mov
lock
pop
jno
es
cwtl
scas
add
arpl
cmp
jbe
ja
mov
fdivr
mov
sbb
inc
jmp
fwait
pop
loope
cs
add
sbb
aaa
xchg
jnp
mov
aas
push
pop
rcll
das
add
sub
mov
mov
pusha
add
mov
cmp
je
mov
fsubs
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
cmp
jg
jle
and
test
lods
push
cmp
xlat
inc
sahf
pop
ss
enter
leave
rol
mov
cmp
sbb
push
jnp
inc
in
popf
push
push
xchg
pop
shlb
push
cmp
loop
pushl
or
popa
xor
mov
pop
sub
lret
xchg
push
cmpsb
cwtl
push
pop
jno
das
popf
adc
mov
mov
shrb
jge
push
or
mov
mov
ljmp
add
dec
rorl
xor
xor
and
xchg
jl
xchg
push
fdivl
clc
push
sbb
pushf
int
sbb
dec
dec
aad
rcrl
in
pop
jge
mov
scas
pop
sub
dec
jge
sub
aaa
decl
push
test
pop
jbe
clc
jmp
sahf
xor
push
loop
sbb
sbb
xor
lret
sbb
inc
rclb
push
pop
pop
cltd
pop
xor
cmp
xchg
xchg
cmp
les
sbb
daa
cs
sbb
fists
or
mov
pop
popf
out
or
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
pop
stos
lcall
jle
jo
aas
inc
sbb
sbb
aad
add
xchg
adc
xor
mov
xchg
icebp
xchg
lea
in
mov
lret
movsb
in
xlat
fsub
fldt
aas
pop
and
mov
data16
add
adc
fwait
cltd
add
mov
pop
inc
xlat
in
testl
in
inc
xchg
mov
fcmove
cmpb
clc
pop
rcr
aas
jge
dec
popa
jno
lret
and
cmpw
dec
and
jecxz
xchg
or
lcall
sbb
mov
pop
shll
jecxz
test
shl
cmp
and
jge
outsb
pop
inc
and
add
sbb
and
xor
inc
mov
jg
mov
jnp
dec
or
sub
inc
xchg
cmp
rorl
sbb
mov
cmp
xchg
sbb
sbb
lret
mov
or
int
into
xlat
mov
ret
add
mov
cmc
mov
push
sbb
dec
sbb
test
pop
push
lds
xchg
xchg
into
outsl
je
and
pop
sarb
in
dec
lds
bound
mov
sarb
mov
rorl
popa
inc
mov
push
xchg
popa
cmp
xchg
pop
mov
aaa
lea
stc
mov
aas
adc
out
push
xchg
lock
or
pusha
ljmp
or
cmp
inc
push
shll
out
or
addr16
or
sub
push
cmpsl
sbb
pop
dec
pop
xchg
mov
int3
lcall
enter
loopne
loopne
sub
test
mov
fsubr
nop
outsl
pop
int3
sub
std
adc
cmp
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
leave
or
jge
lret
imul
adc
inc
adc
cmp
es
rsm
mov
sub
and
push
push
pop
sub
adc
xchg
enter
out
jae
sub
sbb
loope
cs
imul
lcall
es
mov
xchg
fs
adc
pop
mov
mov
xor
mov
mov
cmpsb
mov
cmpb
fs
inc
setp
and
int
xchg
adc
ss
in
stos
imul
test
jo
pop
hlt
xchg
mov
sub
mov
enter
imul
or
es
xor
or
cmp
or
dec
pop
sub
stos
pusha
cmp
call
dec
inc
add
push
mov
or
or
xchg
sti
cmp
mov
fadd
pop
adc
push
push
repnz
addb
test
arpl
jne
xchg
sti
mov
lock
clc
cltd
mov
push
push
aaa
adc
enter
stc
pop
pop
mov
fs
cmp
cmpsb
inc
mov
mov
sbb
inc
adcl
sbb
int3
sub
inc
mulb
mov
sub
out
mov
inc
dec
je
enter
fcomps
addr16
inc
sub
mov
sub
adc
nop
jl
inc
jb
aas
or
fisubrs
mov
inc
mov
dec
cld
cmc
leave
add
xor
cli
add
aam
pop
addr16
cmpsl
sub
daa
daa
jne
push
jne
adc
inc
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
movsl
mov
jle
test
cmp
and
xor
ret
int3
adc
dec
cmp
adc
inc
lock
sub
jb
mov
mov
mov
mull
andb
inc
imul
sbb
add
xchg
scas
aad
mov
lock
ficompl
mov
xchg
xchg
sbb
shrl
leave
pop
fcomps
packssdw
mov
cmp
cs
sub
jmp
pushf
mov
repz
jnp
stos
test
sub
into
dec
mov
lret
insl
ret
xchg
clc
push
mov
pop
notl
lret
push
or
cltd
xor
stos
mov
in
cli
pop
mov
dec
inc
pushf
sub
mov
pop
push
jg
enter
xchg
pop
xchg
dec
jb
cmp
mov
outsl
repz
je
mov
adc
xchg
test
icebp
pop
push
fwait
add
dec
pop
outsb
rorl
or
mov
adc
push
mov
dec
testb
lahf
les
sbb
cmp
out
push
jns
mov
outsl
adc
andl
dec
cmpsb
push
sub
push
into
lret
lods
fwait
test
mov
iret
jp
mov
int3
icebp
jecxz
enter
xor
not
cmpsb
mov
add
fdivr
pop
daa
cltd
inc
sbb
in
cltd
jbe
dec
scas
lcall
add
loopne
leave
fidivrs
clc
xchg
pop
out
inc
mov
or
nop
xlat
mov
testb
nop
inc
sub
jb
sub
js
aaa
les
popl
aam
pushf
aad
adc
pop
inc
test
xchg
add
xchg
push
scas
sbbl
cmpsb
add
push
cmp
shlb
pop
dec
jl
mov
scas
mov
ja
push
sub
test
flds
clc
cmp
xchg
test
ret
inc
popa
sbb
ljmp
push
popf
aam
out
fisttpl
lahf
stos
sbb
lcall
sbb
icebp
lods
xchg
add
subl
pusha
or
movsb
clc
sub
cmp
movsl
nop
pop
pop
dec
mov
mov
push
jae
ds
xor
fucomip
dec
jge
mov
test
jo
pop
inc
ljmp
mov
ljmp
cmpsb
stos
add
sti
add
and
cmp
jl
lods
mov
sub
leave
jnp
fsubs
mov
cmpsb
sub
pop
inc
dec
or
mov
in
pop
xor
ret
out
jns
insb
xor
in
int
inc
pop
mov
pop
in
xor
jg
shrl
lret
cmp
mov
outsl
sbb
xchg
stos
mov
mov
rcrb
addr16
mov
enter
test
inc
add
add
add
leave
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
loop
lods
jle
jl
jle
jle
rclb
test
stos
enter
movsl
pop
test
nop
imul
add
aaa
andb
aas
dec
adc
insb
rcrb
lock
sub
mov
sub
push
cli
into
push
lahf
jo
lret
cld
stos
adc
ljmp
sti
mov
fwait
loop
add
rorl
aaa
xor
sbb
dec
xor
push
adc
out
jp
imul
in
push
sub
sub
xor
or
sbb
push
ss
sarb
dec
fistpl
divb
sbb
and
sbb
jns
or
ror
xchg
mov
or
std
orb
in
xor
fstl
sub
stc
push
add
cmp
mov
imul
repz
mov
push
test
add
sub
mov
pop
push
lds
inc
xchg
pushw
cmpl
or
push
loop
mov
lods
sbb
dec
sarb
jne
cmp
fisttpll
nop
dec
jl
xchg
mov
mov
out
xchg
andb
pop
jnp
sbb
or
psubd
mov
pop
and
scas
push
inc
mov
and
pop
sub
jbe
fnstsw
mov
ficoml
sti
cmp
sahf
add
xchg
or
sub
mov
sbb
add
push
push
addr16
add
mov
cmp
pop
test
hlt
or
pop
gs
xchg
mov
rcrl
pop
das
push
or
imul
in
insl
xchg
mov
adc
push
orl
push
in
push
insb
loop
jle
cltd
inc
lret
jp
lret
adc
xor
mov
mov
mov
mov
xor
stos
mov
adc
test
xchg
repnz
xor
and
movsl
xchg
test
les
push
aad
adc
loope
jecxz
cmp
mov
cwtl
clc
in
lock
ja
lcall
cmpsl
mov
mov
stc
xchg
clc
call
rcll
ljmp
inc
xchg
lock
divl
cmc
lret
shll
fmull
test
adc
pop
push
cmp
aad
pushf
imul
add
xor
adc
xchg
xchg
add
inc
rol
xor
insb
xlat
inc
mov
sub
hlt
scas
cmc
inc
xor
jl
int3
cld
stc
mov
or
rcl
loopne,pt
inc
out
add
push
cs
jmp
lods
jp
pop
push
ljmp
scas
pop
jb
scas
sub
out
or
sbb
pushf
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
jnp
stos
jle
jl
jle
cmpsl
inc
fcomps
or
call
fcoms
fucomip
mov
das
jmp
lahf
and
xchg
and
jp
hlt
mov
cmp
cmp
and
fisubrl
push
dec
addr16
sbb
addl
lds
test
pop
mov
sbb
popf
test
add
pop
enter
cmp
data16
int
xor
jmp
in
jae
stos
and
mov
lods
scas
mov
mov
test
outsb
mov
dec
cs
shl
or
push
icebp
out
mov
cmp
dec
mov
loop
movsl
idiv
push
xchg
mov
xor
fldenv
pushf
popa
dec
or
mov
testb
daa
mov
movsl
add
int
jae
add
cmp
sbb
int3
mov
jne
and
test
sub
in
aad
jg
aad
dec
jns
adc
test
pop
mov
insb
lock
mov
iret
ror
into
rcrb
pop
push
mov
or
outsl
xor
ret
push
das
cli
add
mov
jle
pop
in
pop
cld
leave
mov
shrb
test
ja
js
or
pop
mov
dec
minps
mov
xchg
sbb
xchg
fwait
sub
sbb
lods
mov
cmpb
pop
cmp
pop
sub
loop
inc
ljmp
adc
mov
popa
pusha
pop
iret
jb
or
or
jb
xor
sub
rolb
popa
sub
mov
sbb
scas
jp
pushl
loopne
mov
push
out
sbb
vmwrite
insb
sbb
mov
inc
js
fstpl
pusha
enter
dec
mov
imul
das
outsb
mov
das
add
mov
push
dec
dec
cmc
cmp
int3
xchg
add
aas
or
ss
iret
lahf
mov
xchg
jno
fwait
add
pop
fisttps
mov
scas
cli
fldl
in
push
cmp
adc
rorb
pop
shr
inc
pop
add
mov
loop
sub
rorl
mov
imul
xlat
adc
mov
xchg
mov
add
std
lahf
xor
or
push
movsb
test
ja
dec
xor
jae
xchg
rcll
test
dec
sub
mov
mov
mov
stos
adc
jnp
aaa
sub
sbb
push
jns
ss
mov
adc
out
xchg
add
mov
push
stos
inc
sbbl
pop
imul
jne
xor
dec
cltd
inc
dec
push
sbb
push
das
je
fcmovbe
in
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
aam
arpl
mov
jle
jge
jle
fmul
xchg
and
xor
sub
xchg
mov
lods
push
movsl
dec
sbbl
aaa
push
rorb
lods
das
movsl
lcall
orl
mov
arpl
sahf
out
mov
xchg
mov
and
iret
fucom
pop
xor
pop
push
pop
les
or
jl
push
and
lcall
scas
mov
movsb
add
mov
xchg
insl
or
mov
and
cmp
rorb
movsb
cld
fnstenv
rcll
arpl
jge
negb
pop
rol
cmp
and
jnp
push
adc
out
and
movsl
lds
loope
inc
push
push
mov
add
punpcklbw
addr16
jno
out
inc
call
arpl
stos
sbb
inc
xchg
inc
or
inc
add
cwtl
cltd
out
xchg
loop
enter
bound
xor
outsb
jno
push
clc
push
pop
leave
nop
inc
enter
daa
aaa
pop
mov
pop
lret
dec
push
cmp
jo
xor
mov
sbb
jg
xchg
ds
mov
adc
lcall
imul
jns
lods
sub
dec
lods
lods
les
jns
jmp
cmp
jns
cmp
pop
test
icebp
int
dec
add
lods
cwtl
in
aas
and
sub
test
push
dec
or
ja
icebp
mov
push
lahf
fcomip
mov
or
push
mov
push
stos
out
xor
cmp
sbb
das
xor
sbb
xchg
lcall
sbb
les
loop
fsubrp
loop
mov
in
cmp
arpl
outsb
nop
inc
ret
orb
cmpsl
ss
pop
xchg
insb
mov
jg
pop
mov
jmp
inc
adc
stos
add
imul
inc
movsl
jp
in
inc
int3
in
aaa
clc
fiaddl
sub
inc
lock
lea
in
xor
and
adc
dec
jg
flds
mov
movsb
rcll
xor
cld
icebp
mov
call
gs
jecxz
cmpsb
mov
das
add
leave
dec
xchg
in
cli
adc
and
imul
imul
movsl
dec
pushfw
mov
movsb
xor
inc
or
imul
dec
fldcw
push
cmpl
xor
dec
dec
outsl
lods
add
xor
fnsave
adc
inc
stos
mov
mov
imul
imul
sub
outsb
inc
inc
cwtl
int3
movsl
sarl
repnz
mov
loope
incl
jbe
rorl
and
jno
push
mov
in
fisttpll
add
into
inc
cli
jae
rorl
lock
inc
or
sarb
jmp
or
pop
jno
xchg
add
xor
fidivs
jle
mov
shr
fwait
arpl
mov
pop
or
in
repz
lods
or
push
ficomps
cmp
lock
sub
inc
mov
xchg
cltd
loop
movsb
int
popa
pushf
insb
movsb
pop
icebp
or
std
mov
push
out
loope
inc
loop
xlat
jmp
xchg
pop
dec
xor
iret
test
mov
icebp
mov
mov
xchg
js
sub
arpl
adc
cltd
cltd
es
daa
mov
and
lock
es
xor
bound
shll
xor
pop
jmp
xor
mov
jbe
in
aam
xchg
sub
adc
jge
addr16
sub
jae
cmp
iret
repz
sti
sbb
adc
lahf
imul
or
add
dec
stos
cltd
and
cwtl
cmpsl
push
fs
cmp
push
mov
cld
out
lea
daa
test
lret
xor
testb
rcl
jnp
scas
aad
popa
xchg
jge
mov
mov
mov
ficompl
gs
negb
adc
mov
jmp
cmpsb
lret
mov
les
inc
mov
xlat
jle,pt
stos
push
out
hlt
idiv
cld
xchg
jbe
or
and
sbb
insb
sarb
popf
adc
and
inc
add
lock
adc
lret
divl
mov
xlat
xor
fwait
xor
daa
imul
repz
mov
lret
inc
fiaddl
sbbl
sti
cmp
dec
cmp
fwait
mov
ss
call
lods
mov
out
test
ljmp
in
and
inc
aas
add
popf
in
cmp
xor
mov
cmp
in
jecxz
cmpsl
xor
fsub
add
cwtl
bound
cmpsb
sub
xchg
nop
ja
mov
xor
dec
inc
fcoml
jne
imul
xor
cmpsb
les
fdivs
push
shll
mov
test
imul
sub
scas
rorl
jge
test
fwait
rorl
in
jbe
daa
cs
mov
and
cmp
mov
out
mov
dec
push
and
push
mov
leave
mov
xor
cmp
mov
ret
arpl
test
int
in
sub
adc
fidivrs
or
mov
sub
push
popa
call
lods
mov
mov
jb
mov
sub
push
inc
push
pop
mov
push
mov
add
call
cli
mov
dec
inc
jne
mov
xor
ss
cltd
lods
dec
cmp
or
xor
les
lock
pop
sbb
repnz
fisubs
icebp
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
stos
inc
into
fdivl
jle
jno
push
push
mov
xor
leavew
loope
int
mov
xor
in
es
and
lret
or
inc
int
dec
pop
and
xor
or
ss
shrb
mov
lret
movsl
inc
adc
adcb
ds
push
lcall
int3
hlt
negb
call
add
int3
or
js
mov
pop
pop
xchg
iret
mov
fstl
push
sti
mov
iret
int
adc
je
int
sbb
ret
ljmp
inc
sti
fsubrl
ja
and
out
outsl
pop
or
cli
mov
nop
pop
flds
sbb
mov
add
lret
test
outsb
test
jg
out
icebp
lret
movsl
outsb
jmp
inc
repnz
sbb
test
cmp
out
mov
fnstenv
sbb
fcmovbe
push
push
inc
aaa
add
xor
xchg
adc
push
aaa
popa
std
es
mov
jmp
sbb
nop
and
or
push
mov
lahf
daa
and
clc
or
push
test
daa
mov
xchg
loop
jb
push
fisttpl
jae
call
cmp
rcr
shrl
js
jnp
jge
enter
mov
insl
pop
enter
mov
insl
notl
popa
test
jmp
and
xchg
mov
add
push
fsubs
mov
test
movsl
add
fisubrs
lahf
hlt
leave
and
ds
imul
outsl
iret
lods
movd
ja
shll
fcmovbe
cmp
out
sahf
jp
mov
stos
ss
scas
nop
sbb
sbb
push
jmp
adc
jnp
popf
cwtl
popf
das
sbb
hlt
mov
out
mov
mov
or
push
adc
movsl
sbb
and
mov
cld
jmp
out
fadd
adc
jmp
arpl
ds
pop
mov
or
fst
push
out
ljmp
add
pop
std
lds
repnz
push
xorb
xchg
cwtl
pop
xchg
mov
mov
cli
add
mov
push
inc
in
and
shll
mov
push
sbb
ret
lahf
outsl
sbb
xor
and
xchg
dec
lds
je
fnsave
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
sbb
inc
adc
repz
int3
out
push
ds
sub
pop
jle
pop
cmc
xor
sarb
jp
xor
sbb
test
je
xchg
lea
int
xchg
fsubs
ss
push
push
mov
add
fstps
out
adc
mov
aas
pop
jnp
out
cmp
aad
enter
lret
or
jle
mov
scas
cwtl
ret
push
sbb
inc
jle
imul
xchg
xchg
adc
ficompl
aam
stc
jns
ja
adc
jl
sti
shll
mov
aam
test
inc
xlat
aam
mov
rcr
aas
adc
pop
popa
repz
jae
outsl
out
cmpsb
mov
cmpsb
cmp
push
mov
cmp
enter
jg
xchg
jns
mov
push
subl
fldenv
mov
ja
daa
fimuls
stos
imul
sub
jmp
test
lods
sbbl
jae
sbbl
xor
sub
cmp
rclb
test
sub
sub
lds
cli
js
cmc
cmp
inc
imul
enter
movsl
aam
add
gs
ficompl
aad
aaa
cmp
mov
sub
std
sbb
sub
incl
adc
cmpsb
mov
xchg
dec
mov
lods
idivb
cs
jge
pop
jbe
push
sbb
sub
push
xchg
rcrl
sub
mull
cld
ljmp
orb
cmp
push
xchg
xor
ja
cmp
xchg
leave
pushf
aad
repz
add
lcall
test
pushf
xor
mov
adc
arpl
mov
in
scas
cld
sub
sbb
dec
test
adc
mov
mov
test
xor
push
dec
loope
xor
pop
fs
es
mov
mov
stos
mov
scas
subb
ret
dec
xor
inc
imul
popf
shr
add
push
addr16
jge
insl
mov
sub
int
fsts
mov
imul
mov
or
cwtl
mov
ret
rcrb
cwtl
mov
xchg
movsb
mov
lret
sbb
jno
xlat
enter
and
and
daa
xchg
adc
call
jmp
add
fdivl
lock
xchg
pop
arpl
sti
push
scas
jl
jle
push
leave
imul
dec
xchg
push
pop
fnstsw
flds
push
pop
ja
and
inc
pop
push
enter
mov
pop
jge
adc
add
rorb
xor
adc
mov
inc
and
pop
dec
dec
dec
push
or
mov
in
xor
les
shrb
mov
sbb
fildl
or
cmp
inc
sbb
inc
jnp
clc
shr
mov
mov
repz
lds
nop
jbe
mov
mov
and
sub
int3
sbb
orl
inc
jae
mov
mov
pop
aam
xor
rolb
dec
fdivrl
test
dec
add
mov
inc
aam
in
outsl
sbb
aas
adcb
fisubrl
inc
mov
movsb
aam
sbb
dec
push
cmpsb
pop
cmpsb
pushf
cmc
mov
jno
add
add
cmc
fmul
notb
mov
push
aaa
icebp
push
xorb
nop
sub
push
fisttpll
push
mov
xor
sbb
dec
xchg
insl
in
mov
xor
mull
and
sub
or
mov
clc
inc
in
fdivr
shlb
mov
push
cmc
in
add
adc
mov
xchg
cli
mov
jmp
mov
xor
in
nop
xor
and
push
pop
arpl
ret
and
in
addb
push
orl
and
dec
inc
jmp
mov
aad
outsl
fldt
scas
add
bnd
rcrb
daa
jge
loopne
js
dec
add
jl
dec
and
mov
je
movsl
mov
or
cltd
insl
mov
in
mov
arpl
imull
inc
cmp
dec
jmp
xchg
ljmpw
mov
inc
sub
mov
mov
sbb
mov
mov
aas
nop
ffreep
roll
addb
adc
mov
mov
mov
xor
push
mov
ja
fst
ljmp
test
out
inc
jge
popl
outsb
push
mov
fwait
int3
icebp
cmc
jle,pn
cmp
mov
scas
movsl
add
pop
testl
cmp
outsl
shlb
nop
push
mov
psubusb
mov
sub
sub
mov
inc
pop
and
inc
test
jb
cmp
pop
repnz
push
iret
call
and
roll
pop
mov
rcr
je
or
and
add
add
add
push
push
lock
outsb
dec
mov
push
jmp
jle
scas
jl
jle
mov
cmp
or
or
xor
sub
mov
dec
xor
ljmp
push
ret
stc
sub
adc
sub
fidivrs
xchg
aad
mov
jmp
into
or
je
jne
push
xchg
inc
add
pop
jg
add
jbe
cmc
in
lds
mov
bound
push
fnsave
add
push
cmp
popf
jl
mov
addr16
xchg
pop
in
test
sub
jnp
jne
xor
jo
dec
pop
lock
daa
push
sbb
lcall
lret
shrl
aam
int3
and
movsl
sti
lahf
jg
adc
mov
int3
push
movsb
clc
add
lock
aas
std
and
adc
ret
ja
popa
and
in
std
adc
mov
loop
xor
pushf
lcall
cmp
add
dec
stc
subl
jb
hlt
jge
pop
mov
push
loop
ja
and
mov
sbbb
jg
adc
test
movsl
adc
mov
aaa
or
movsl
add
xchg
mov
rorl
imul
sbb
rol
pop
outsl
sub
ss
add
cs
enter
popa
push
and
scas
ja
sub
rcr
mov
or
add
lea
inc
test
enter
aaa
mov
dec
out
sti
mov
addl
jbe
inc
pusha
incl
mov
pop
push
insl
test
in
fwait
adc
ror
or
mov
imul
dec
and
js
sub
movsb
lahf
call
pushf
pop
cmp
rcl
xchg
xlat
mov
test
mov
jnp
aad
add
dec
jle
frstor
lcall
xor
loop
cltd
pop
adc
test
cmpsl
das
mov
std
rolb
loopne
or
dec
sar
out
test
scas
jne
xor
stos
fsts
jle
fldt
bnd
mov
cmpsb
cmp
insl
lea
dec
mov
gs
pop
jg
sub
pop
mov
call
xor
adc
mov
movsb
push
inc
add
adc
es
fs
cmp
out
imul
mov
fs
push
out
mov
out
and
sub
call
pop
lods
pop
mov
inc
cmpsb
adcb
mov
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
std
sbb
jle
jl
jle
rcr
bound
cmp
ljmp
mov
dec
jmp
push
outsb
int
mov
sahf
sub
aaa
pop
fs
mov
adc
cmp
sbb
pop
mov
mov
lods
mov
icebp
loopne
mov
jmp
mov
or
aam
js
xchg
test
or
fsubs
and
lds
out
imul
mov
mov
adc
insl
lret
or
mov
test
xchg
mov
adc
dec
nop
fstpl
dec
mov
xor
xor
inc
dec
adc
push
aaa
icebp
push
jnp
mov
cld
push
pushf
pop
xchg
popl
xchg
push
push
sbb
cmp
mov
test
dec
jl
outsb
pop
cltd
jecxz
add
fisubl
fsubs
ficompl
jle
push
sbb
xchg
dec
sbb
nop
shll
cltd
gs
subb
leave
dec
xor
push
dec
inc
pop
hlt
and
pop
jecxz
movsl
sbb
pushf
hlt
ljmp
mov
loopne
movsb
push
arpl
sub
imul
add
sbb
dec
cli
jmp
sbb
push
xor
sbb
pop
fnstenv
test
scas
addb
fcmovb
sti
sbb
in
insl
and
mov
fdivrp
push
xor
adc
push
xchg
dec
mov
pop
cmpsb
xchg
xchg
orb
sub
pop
cmpsl
or
aas
outsl
sub
xchg
pop
sti
rcrb
push
jle
and
inc
jbe
rclb
dec
and
or
outsb
mov
mov
jae
daa
enter
xor
mov
jne
mov
adc
push
pop
in
fildll
stos
xchg
pop
lret
mov
adc
pop
imull
scas
xlat
add
xchg
ret
mov
es
pusha
xor
lret
das
loop
add
arpl
jno
into
jg
pinsrw
push
arpl
loop
jl
adc
sub
jle
fsubrl
xorb
call
mov
in
and
or
sub
and
stos
fistl
and
add
shll
enter
nop
adc
adc
and
xchg
and
xchg
in
enter
adc
mov
movsb
adc
in
aaa
or
lods
sub
fiaddl
cmp
sbb
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
xlat
mov
jle
jl
jle
lea
adcb
sarl
imul
lcall
pushf
pop
js
mov
mov
loope
out
es
jecxz
mov
ja
ja
sub
lcall
loopne
in
int3
fdivrp
clc
or
xor
adc
mov
addr16
pop
out
inc
outsb
cld
add
mov
jne
insb
cmpsb
jne
inc
pusha
mov
mov
movsb
cmpsb
ret
add
sub
int
jg
pop
stc
imul
lock
das
in
cmp
push
bound
jno
inc
cld
test
adc
or
mov
rclb
stos
jg
mov
push
lcall
jmp
pop
xchg
push
push
inc
iret
addb
xchg
int
fwait
jmp
es
mov
xchg
lret
dec
dec
xchg
jb
xchg
jmp
out
mov
shll
sbb
and
test
jl
push
push
xor
push
adc
pusha
out
jo
xchg
cmc
fildll
movsb
outsb
lret
call
mov
and
ret
cs
or
mov
push
in
lock
lret
dec
testl
ret
lock
pop
push
pop
mov
popa
gs
cld
adc
fwait
cmp
es
sbb
add
mov
stos
mov
lret
mov
and
movsl
jle
pop
mov
cmp
fsubrs
or
fsubrs
cmp
inc
xor
and
jbe
data16
mov
push
jne
rorl
jbe
mov
popf
and
sub
ljmp
fneni(8087
repnz
inc
and
inc
push
dec
int
outsb
push
cmp
nop
cld
and
add
sbb
jno
popf
icebp
push
dec
je
sbb
sub
push
jns
popa
inc
flds
shrl
xchg
pop
mov
lock
rorl
ja
mov
inc
lods
xchg
nop
nop
or
dec
test
aaa
pop
jmp
call
notb
hlt
out
xchg
pop
push
push
xor
movsl
sub
movsb
cmc
cmpsb
movsl
lods
aam
shll
test
mov
test
ficoml
les
sub
xor
or
sbb
rcrb
pop
repz
jae
mov
cmpsl
xor
cmp
mov
insb
pop
or
ret
mov
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
stc
shrl
jle
jg
jle
pop
test
aad
xchg
adc
inc
repz
popa
jmp
fcom
or
in
dec
adc
push
inc
xor
lret
mov
xchg
ja
adc
jno
adc
scas
negb
push
int3
ss
loope
mov
inc
lret
cmp
xchg
mov
sbb
and
push
and
jo
in
ret
xor
orl
xlat
test
jbe
push
xor
mov
xchg
ret
or
movsl
daa
pop
lods
mov
das
and
mov
cmp
scas
dec
cs
imul
mov
jno
leave
jg
fmul
jbe
push
lcall
mov
aas
sub
inc
fistl
cld
inc
imul
jl
lods
jbe
pop
sub
mov
sub
mov
inc
je
lds
xor
and
fstl
sbb
hlt
push
push
mov
ss
test
call
jo
jnp
mov
test
popa
push
pop
and
xchg
lea
incb
es
loope
inc
addb
sub
dec
push
push
in
sahf
xchg
mov
in
and
cmp
mov
scas
mov
xlat
mov
inc
xor
cmpsl
sbb
jo
fldcw
push
jl
add
dec
mov
xorl
jp
imulb
mov
push
jae
push
jp
mov
shr
mov
mov
subb
pop
adc
dec
xchg
jb
cmpsl
inc
into
outsb
rcrl
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
es
push
fldcw
jle
movsb
jg
jle
mov
outsl
add
shlb
subb
call
ja
lds
cmp
movsl
mov
les
mov
and
imul
repnz
add
cmp
das
cs
aam
pop
xlat
stc
adc
and
jle
xor
jno
push
iret
bound
and
repnz
sahf
arpl
nop
sbb
or
aaa
cmp
sbb
sbb
mov
add
dec
icebp
push
fnstcw
pop
testl
or
push
mov
mov
loop
test
jg
xchg
jp
lcall
xor
aas
mov
mov
push
dec
mov
push
loop
or
xor
test
mov
add
or
test
push
hlt
popa
fcoml
test
mov
rorl
pop
xchg
out
cmp
mov
dec
xchg
add
fistl
jb
in
mov
fs
adc
lret
mov
dec
insb
add
mov
shll
sub
or
adc
out
xchg
and
mov
mov
pop
mov
push
and
cs
in
lods
xchg
xor
in
xor
pop
addr16
sbb
in
loop
movsb
cli
mov
adc
jge
sub
fld
add
repnz
mov
xchg
rclb
jmp
cli
pop
xchg
adc
iret
cmp
add
fsts
pop
xchg
mov
stos
xor
cld
je
mov
shr
add
add
or
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
push
and
add
add
add
fbstp
stos
cwtl
outsb
out
jmp
loop
hlt
xor
frstor
scas
orl
out
mov
lcall
mov
push
sahf
push
cmp
inc
jmp
cwtl
shlb
add
jecxz
jge
dec
fimull
in
inc
mov
popf
dec
hlt
and
lods
into
lahf
jge
orb
xor
adcb
and
clc
sbb
sbb
xchg
pop
push
lods
bound
popf
adc
push
in
lods
scas
push
js
jp
xor
inc
xor
xchg
pushf
je
out
push
cmp
sbb
mov
push
jbe
je
add
aaa
adcb
jmp
cmp
imul
cwtl
mov
popa
mov
adc
mov
pushl
xor
aam
sbb
cmc
hlt
xchg
call
lcall
push
lods
cmpsb
flds
pop
ficoml
in
jle
lcall
and
rolb
add
add
lahf
cltd
das
insb
jno
fcoms
sarb
mov
xchg
jp
loope
push
ds
xchg
jnp
pushf
adc
notl
lea
sbb
sub
out
push
flds
pop
cwtl
scas
or
testl
sbb
std
fcmovb
jle
in
bound
popa
fidivrs
dec
rorl
lret
mov
inc
mov
insl
mov
and
push
add
movsb
mov
mov
mov
and
fisubrl
mov
jmp
cmp
fldt
push
out
lods
stc
fcmovne
pop
mov
das
mov
setge
or
cld
sbb
loope
sbb
enter
enter
mov
in
notl
lods
or
mov
shr
ficompl
test
outsb
or
pop
jmp
sbb
adc
sub
sbb
rorl
add
add
adc
mov
mov
push
dec
and
in
add
add
add
pop
das
add
cmpsl
and
dec
xor
cs
adc
inc
sarb
ss
shrl
xchg
inc
sbb
cmp
ficompl
pop
jecxz
into
push
cmp
ja
aad
daa
sbb
mov
push
arpl
fwait
and
out
insb
pop
push
or
insl
pop
xor
fsubl
int
neg
call
imul
negl
adc
push
mov
dec
mov
aam
push
rol
xor
push
mov
repnz
cmc
mov
lahf
sbb
add
sbb
sub
pusha
fcmovb
inc
fdivs
stos
repz
scas
mov
xlat
xchg
cmpsb
addr16
mov
scas
loopne
out
mov
adc
loopne
fcoml
inc
jl
or
mov
lds
ss
rcrl
sub
insl
mov
incb
lcall
inc
pop
adc
add
subl
roll
pop
ja
stc
call
add
add
nop
mov
sbb
and
pop
fwait
xor
ljmp
fiadds
push
mov
mov
xor
mov
adc
or
cmpsb
dec
leave
adc
clc
push
ss
xor
dec
sti
mov
sub
lock
jle
xchg
sub
jge
sbb
add
mov
mov
fdiv
mov
ds
pop
ret
mov
nop
repz
out
cld
mov
dec
jmp
fdivrs
stos
fimull
lea
jae
push
js
rcrl
test
xchg
sahf
push
cld
popf
pop
add
test
xor
add
flds
gs
mov
jl
jo
jg
xor
sbb
cmc
add
or
adc
sub
imul
lret
mov
movsb
call
add
pop
jae
or
pop
dec
or
dec
inc
adc
aad
add
add
xor
out
sbb
mull
scas
call
jne
shll
aam
mov
scas
mov
sub
mov
cltd
or
js
push
pusha
sub
add
aam
or
pop
and
nop
int
push
insl
cli
lcall
pop
movsb
inc
inc
sbb
sub
mov
push
jne
sbb
mov
sti
cmp
sti
mov
fs
adc
movsl
xor
imul
je
mov
fcmovb
leave
in
mov
inc
lgs
stc
mov
shrb
jg
xchg
mov
mov
mov
mov
movsb
aaa
ja
mov
popl
aaa
pop
or
cmp
xchg
push
sub
lahf
jae
jae
sub
xchg
dec
lret
imul
add
and
cmc
jae
mov
out
inc
mov
adc
scas
xor
jns
adc
jg
cmc
insl
cmc
out
lcall
enter
mov
pop
lock
add
add
add
pop
repz
lcall
rcr
adcb
jp
lahf
mov
aad
jecxz
push
adc
mov
mov
xor
and
add
das
incb
and
cld
js
je
cli
out
mov
popa
lods
or
insb
push
mov
loop
int3
cmp
outsb
aaa
fcomip
imul
mov
movsl
inc
dec
jb
xchg
push
repz
xlat
mov
sahf
jecxz
je
into
stc
xor
shl
add
and
test
popf
push
adc
clc
push
and
outsl
pop
cs
xchg
pop
scas
push
inc
lods
daa
inc
mov
cmc
fisubs
sub
loope
push
adc
decl
pop
mov
xchg
mov
xor
pop
or
mov
outsl
pop
sbb
sti
fs
push
lcall
pop
xor
xchg
mov
jle
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
cmp
adc
or
cld
test
mov
mov
sbb
out
mov
dec
push
sub
imul
fcoms
xchg
xor
lods
jmp
pop
mov
add
sbb
mov
mov
mov
out
jno
inc
in
or
add
addr16
xor
mov
inc
mov
pop
in
icebp
push
mov
jo
lret
jecxz
mov
movsb
iret
jno
cmp
pop
jbe
out
cmp
jmp
jbe
pop
jp
mov
push
jge
push
mov
or
sub
dec
push
push
add
dec
cltd
push
inc
in
cs
mov
out
insl
mov
cmp
shrb
shlb
hlt
fistl
mov
or
sub
mov
dec
pop
mov
andl
add
add
jle
and
scas
sti
jle
pop
push
pop
mov
jae
clc
fadds
add
add
or
inc
in
and
int
mov
jns
mov
pop
mulb
lds
sub
add
lock
inc
cmp
jge
out
push
mov
sub
dec
and
jno
pop
cmp
call
dec
jecxz
xor
lods
inc
add
pop
das
lcall
push
icebp
into
dec
push
aas
jns
xor
mov
mov
nop
jmp
dec
arpl
xchg
inc
out
ja
mov
stos
push
mov
dec
inc
or
cltd
fimuls
les
iret
int
daa
lds
xchg
repz
adc
or
stos
jns
adc
mov
insw
xchg
mov
leave
and
mov
lods
repnz
dec
aam
and
lea
fldl
data16
dec
data16
das
rorl
addr16
fldcw
fsubp
pop
add
adc
ss
jns
xor
fwait
inc
cmp
or
cmp
add
add
negl
arpl
js
xlat
cld
flds
add
add
push
popf
cltd
inc
stos
xchg
ret
sbb
add
cmp
inc
jecxz
mov
sub
and
mov
mov
scas
ljmp
les
push
dec
jmp
shl
xlat
xor
lea
mov
outsl
lret
xor
lea
pop
sarl
loope
aas
loop
cmp
mov
jge
sbb
nop
dec
jbe
cli
sbb
push
sarl
mov
stos
lods
mov
mov
das
testl
xchg
pop
xor
sub
test
aaa
aas
fcmovu
mov
add
adc
mov
mov
mov
lods
pusha
stos
scas
idivl
mull
lcall
xchg
xor
mov
mov
addr16
loope
add
push
push
sarl
sbb
loop
fs
xchg
adc
jmp
mov
and
sub
mov
add
xor
push
jl
jle
insb
out
adc
fildl
add
add
pop
adc
mov
dec
or
sti
dec
adc
stos
xor
sbb
sarb
jl
pop
test
stos
test
sbb
movd
mov
loope
rol
mov
loopne
cmp
mov
cmc
sysret
pop
xchg
popf
push
out
inc
cmp
leave
pop
cmp
pop
lods
repnz
fs
jg
mov
arpl
xor
add
sub
loope
mov
pop
add
mov
jle
and
paddusw
mov
pusha
pop
add
out
xchg
xchg
ficompl
movsl
mov
test
in
fsubs
pop
stc
jne
push
fistpll
ss
nop
xor
inc
test
fs
mov
jg
repnz
dec
cmp
sbb
addb
or
inc
iret
bound
xchg
aas
push
mov
inc
leave
jno
stos
mov
mov
into
movsb
es
mov
adc
in
xor
adc
add
add
add
add
imul
ss
fisubs
leave
nop
xor
xchg
div
cmp
or
jne
push
xor
fabs
xor
jae
mov
xor
mov
push
jge
adcb
push
push
mov
and
mov
xor
daa
out
xor
mov
fisttpl
test
inc
or
jecxz
shll
adc
popf
insb
hlt
stos
fiadds
clc
outsl
or
aad
es
xchg
lea
repnz
js
and
or
movd
sbb
adc
inc
jbe
inc
pop
clc
sti
inc
mov
or
ret
jp
hlt
push
divl
sbb
push
xlat
xor
out
in
sub
xor
or
jl
dec
mov
xor
rorb
cmc
and
mov
jno
push
cwtl
call
sub
mov
dec
sbb
mov
test
mov
pop
movsl
jo
jl
add
add
data16
jne
mov
lcall
add
add
add
lret
sub
cld
sarb
clc
push
jo
les
bound
lock
scas
xor
add
mov
jns
mov
xchg
mov
and
jno
scas
dec
das
push
and
rolb
add
jb
dec
adc
cmp
cmpsl
insb
ret
pop
fsubrs
xor
push
mov
lock
das
sub
movsl
in
push
mov
shrl
cmc
fptan
xchg
pop
cmp
mov
jb
pop
push
lods
into
out
or
inc
jp
sub
xorl
push
jecxz
pop
adc
ret
xor
cmc
cltd
cmp
jae
jne
pop
sub
adc
es
sti
hlt
or
pop
int
dec
int3
mov
mov
fstpt
push
fnsave
loop
jo
int3
inc
ja
test
pop
leave
push
mov
pop
int3
mov
call
daa
lahf
aad
loope
mov
jb
mov
stc
xor
jo
repz
or
add
add
add
jnp
sti
xchg
lahf
mov
xor
or
add
add
add
dec
jbe
dec
sahf
xor
xor
and
loope
fcmovnu
mov
jnp
or
xchg
fmull
jecxz
mov
out
dec
sbb
xor
add
mov
imul
sbb
adc
dec
lea
jne
dec
je
mov
cmp
sbb
xchg
sahf
xchg
nop
out
jmp
sub
add
clc
sahf
mov
and
and
push
sbb
cmp
mov
xor
outsl
outsb
cmp
mov
jns
inc
mov
mov
mov
std
fisttpl
mov
orl
mov
aaa
push
mov
cli
out
mov
sbb
popf
pop
lret
punpcklbw
pushf
xor
push
mov
aas
inc
jo
lods
xorl
mov
xchg
mov
push
xorl
push
jle
cmp
add
sbb
in
loop
das
adc
cmp
lods
jmp
sub
pop
sarl
mov
out
filds
add
add
daa
aad
out
mov
mov
sub
add
jmp
test
cltd
jnp
leave
mov
and
cltd
xor
in
and
pop
cli
jne
cmp
out
pop
ret
pop
ret
clc
loopne
pop
test
mov
scas
ficoms
out
ja
jmp
jecxz
mov
shrb
in
sbb
mov
dec
call
fnstcw
lret
push
xor
cmc
rcll
fwait
pop
sbb
movsb
rolb
pop
jnp
fdivr
or
neg
js
pushf
adc
pop
popf
lea
cmc
icebp
mov
add
repnz
es
inc
out
or
add
arpl
cmc
sbbb
xchg
dec
popa
sahf
les
xor
or
inc
fisttpl
lock
mov
dec
sbb
pop
mov
nop
cmpsl
add
lods
cwtl
jge
or
mov
scas
roll
add
repz
std
repz
ss
fsts
add
add
add
jae
nop
mov
out
popa
and
xchg
cli
outsl
mov
and
mov
add
fisubrl
movsb
out
and
pop
cli
mov
mov
inc
sbb
pushf
and
or
and
bound
mov
jns
leave
cwtl
sti
xchg
ret
scas
imulb
dec
jb
addr16
mov
int
cmp
lret
cltd
pop
call
cld
mov
pop
imul
push
fcomi
add
push
sub
loopne
mov
cmp
iret
stos
int3
lods
xor
cli
mov
popa
xor
lret
test
jg
add
lahf
dec
push
lcall
sbb
scas
iret
ret
lcall
adc
out
sbb
push
pop
or
into
shl
dec
adc
pop
ljmp
pusha
in
inc
das
cs
in
sub
cmp
arpl
je
push
and
add
add
or
cwtl
and
and
pop
test
sti
lds
fnstsw
inc
lret
mov
leave
hlt
ficoml
and
or
insl
pusha
xchg
lea
movsl
out
inc
je
test
mov
pop
adc
in
lds
and
das
sbb
out
mov
test
inc
mulb
jg
or
or
jmp
mov
outsl
jp
dec
into
or
imul
push
sbb
das
mov
in
enter
test
sbbl
jns
inc
cmp
sbb
sub
mov
jo
inc
mov
push
mov
add
nop
je
addr16
mov
push
test
out
mov
aad
ja
nop
inc
into
and
cmp
scas
xchg
out
sub
call
aam
pop
fstpt
notb
jmp
imul
arpl
dec
arpl
insl
lcall
mov
inc
sub
subl
add
add
and
add
sysenter
lret
xor
insl
pusha
dec
popf
sbb
inc
add
sahf
xor
mov
test
cmc
sarb
outsb
jmp
into
sub
adc
pusha
fdivrl
les
pop
dec
lea
sahf
or
sahf
xchg
jo
mov
scas
sub
sub
jg
and
sub
adc
cmp
pop
decb
xorl
fchs
fildl
std
das
insb
jae
lods
shlb
push
push
add
jbe
lcall
cmc
mov
loopne
cwtl
mov
int
or
les
jmp
leave
push
enter
ds
cmp
add
push
sbb
fstpl
ljmp
data16
cmp
push
stc
mov
js
adc
mov
cmp
and
push
lea
jecxz
or
js
lods
stc
inc
mov
cs
pop
xlat
dec
xchg
addb
sbb
lret
xchg
in
mov
incl
rcll
add
add
add
rcll
lods
js
sbb
xor
lcall
push
mov
sub
iret
sti
loope
mov
rorl
lahf
nop
test
pop
sbbl
xchg
mov
push
inc
stos
push
xchg
jbe
jae
ret
xor
in
call
sbb
clc
lcall
pushl
mov
push
mov
mov
dec
jg
popf
int
mov
test
loop
push
push
mov
fdivr
fcomps
xchg
cli
clc
or
scas
stos
hlt
insl
fwait
jo
mov
je
call
repz
jmp
push
ret
push
and
test
jge
pop
or
dec
dec
fmuls
xor
jbe
jno
cmc
sahf
lock
mov
js
dec
pushl
add
push
push
daa
cmp
xor
lret
sar
mov
fisttps
subb
and
dec
cmp
mov
push
sbb
push
mov
ljmp
add
inc
mov
in
negl
sub
movsb
mov
in
add
add
push
shll
mov
cmp
lret
pop
dec
cmp
pop
adc
or
imul
jnp
les
pop
mov
fildl
out
sti
jo
inc
daa
push
mov
movsl
add
jo
movsl
push
incl
or
and
cmc
lret
jae
jecxz
je
dec
not
push
dec
hlt
mov
cmp
rclb
add
lock
fwait
int3
gs
push
mov
ds
inc
loop
shlb
xchg
jae
sub
lret
inc
icebp
pop
push
movsb
das
sbb
orl
stos
js
aam
imul
iret
jb
rclb
lldt
repz
fiadds
scas
jns
je
in
dec
daa
pop
lcall
incb
insb
jb
stc
xor
cwtl
pushf
mov
jp
inc
dec
push
xor
lods
push
xchg
outsb
mov
sub
inc
and
xchg
imul
lret
out
ds
mov
add
add
mov
stc
dec
push
fdivl
in
add
add
loop
sbb
cmp
jno
mov
jb
dec
pop
pop
and
adc
dec
ja
dec
ljmp
xchg
fmulp
pop
call
enter
test
dec
cld
ficoms
mov
fadd
sbb
outsb
mov
hlt
cmp
int
add
pusha
loopne
shl
fadd
fiaddl
push
xor
cmp
mov
mov
xchg
mov
psubusw
push
sahf
jcxz
dec
adc
mov
and
cmp
jno
imul
mov
add
stos
inc
or
ficomps
adc
push
inc
insb
mov
adc
mov
or
cmp
mov
int
paddsb
push
pusha
enter
pop
mov
outsl
sahf
out
test
iret
add
sbb
jb
lcall
out
repnz
ljmp
or
test
out
loope
or
add
add
adc
push
push
push
mov
imulb
add
add
add
out
pop
cmp
mov
xor
int
xchg
lds
pop
sbb
xchg
bound
hlt
loop
add
mov
dec
mov
shl
repz
cmpl
push
mov
mov
imul
xchg
jne
push
xchg
pushf
push
adc
push
mov
fistl
fstl
cmp
std
rol
xor
mov
icebp
mul
sbb
xor
mov
inc
xchg
movsb
xor
cs
jmp
add
into
sbb
enter
fisubrs
daa
add
outsb
fs
mov
add
and
inc
loope
or
addr16
aaa
daa
sub
mov
adc
loop
inc
jae
push
ljmp
lret
incl
sub
or
fnstcw
jb
xchg
push
scas
ja
cmp
inc
hlt
sub
repnz
or
mov
jnp
popa
out
repnz
add
pop
lcall
les
loop
push
xor
add
add
add
cmpl
push
ds
leave
cltd
cmp
cld
test
sbb
xor
int3
push
push
fs
loopne
fsubrs
cmp
fmull
in
pop
iret
add
mov
mov
mov
sti
and
inc
mov
jmp
out
repnz
cltd
mov
lods
into
xor
add
dec
push
xor
mov
ret
movsb
sbb
inc
xchg
lock
adc
pushf
mov
xlat
push
adcl
hlt
imul
and
roll
in
adc
andb
and
jno
stos
cmpsl
mov
aas
jmp
mov
notb
leave
xchg
mov
js
nop
lret
or
insb
or
push
fisttps
lds
jnp
mov
popf
out
popf
lods
mov
mov
xor
adc
inc
lock
jae
add
add
mov
push
decl
sbb
arpl
add
add
add
sub
pop
out
loop
in
popf
pop
or
adc
sbb
push
or
inc
jo
push
outsb
push
out
xorb
cmpb
fistpl
ljmp
aam
popf
outsl
push
in
lret
aad
icebp
xor
sub
repz
sub
fiadds
mov
push
data16
imul
mov
mov
std
xchg
pop
sbb
daa
mov
sub
add
mov
mov
in
or
lds
clc
addr16
lods
sub
and
push
out
push
in
inc
adc
fstl
mov
lret
rol
es
scas
shr
lret
adc
adc
dec
cs
fcoml
int3
popf
je
push
outsb
outsb
mov
push
xchg
out
std
inc
mov
sbb
js
cmpsl
movsl
cmp
add
ror
adc
cli
cs
shrl
insl
add
iret
cmp
ret
fs
lods
and
cmp
sti
fsubp
inc
push
sub
sub
jmp
add
out
int3
pop
xchg
jns
lahf
push
pop
cmp
jecxz
outsl
idivb
jno
lods
cmp
pop
fldt
call
cmp
push
and
push
pop
sub
push
pop
clc
aaa
in
inc
mov
mov
das
daa
leave
fnstenv
push
jmp
push
cmpb
inc
in
in
into
and
outsb
ja
fs
mov
mov
pop
inc
mov
adc
pop
in
add
mov
pushf
sbb
push
and
je
jmp
jb
hlt
mov
in
jae
arpl
ja
test
ret
mov
lret
test
dec
fwait
mov
cmp
roll
add
push
push
rol
push
out
popa
lock
mov
hlt
cmc
and
xor
out
in
in
cmp
sbb
movsl
or
movsl
mov
mov
push
cmpl
lods
divl
push
mov
mov
adc
fwait
and
and
mov
lcall
ljmp
cs
jp
inc
push
mov
fsubrp
addb
lcall
push
push
cmpsl
cmp
decl
sbb
int3
into
dec
subl
pop
lds
lea
inc
or
ds
loope
lods
xchg
stc
mov
push
fucom
cwtl
out
cli
mov
dec
mov
pop
ret
jne
add
and
aam
xchg
popl
fcomi
mov
or
xchg
jl
icebp
in
xchg
lods
imul
clc
jae
data16
sahf
inc
adc
rol
outsl
add
nop
mov
push
cmp
adc
or
fstpt
xchg
inc
cmpsb
lfs
mov
inc
and
mov
leave
clc
push
inc
int3
andb
rcll
mov
push
adc
jg
arpl
lods
inc
mov
push
xor
inc
lods
adc
int
fsubs
add
add
inc
ror
lock
jnp
xor
xchg
xchg
scas
sbb
add
add
add
jmp
cmovae
mov
or
add
cmc
iret
push
mov
lds
xchg
mov
cmpsb
pop
pusha
lret
std
dec
dec
call
fcmove
faddl
stos
rcrl
fsubrl
jmp
mulb
pop
pop
leave
test
cmc
fisttpll
mov
push
pop
mov
xchg
jbe
adc
cmp
cmp
push
mov
xor
into
negl
cmpsl
dec
xchg
sbb
sbb
nop
jl
loop
sub
outsb
mov
adc
push
cmpsl
ja,pt
fcoml
incb
sbb
inc
lahf
mov
sti
sub
mov
pop
jmp
je
xchg
add
add
jae
mov
bound
push
out
pop
sub
push
mov
jns
pop
stos
or
cs
fidivrs
sbb
cld
fstps
popl
hlt
push
sub
adc
dec
add
pop
and
repz
fisubs
xchg
popf
and
add
add
loope
sub
mov
in
and
xchg
fildll
stos
in
in
into
fimuls
xor
dec
jne
leave
rcrb
jb
push
inc
dec
shl
jns
push
ja
mov
pop
cmp
shll
imul
dec
aad
stos
repnz
pop
in
leave
outsb
adc
dec
stos
shrl
adc
stc
adcb
mov
and
xchg
loope
inc
dec
xor
or
int3
mov
std
stos
and
lcall
repz
mov
nop
mov
sbb
xor
jmp
orl
movsl
ja
iret
cs
jb
and
adc
pop
popa
leave
adc
cli
inc
or
faddp
jne
lret
sub
xchg
outsb
dec
jae
push
push
jne
sbb
cmp
pop
or
add
jp
and
fisttps
xchg
sarb
pop
fisttpll
pop
notb
shrl
hlt
iret
out
sbb
cld
sbb
xor
add
add
add
jns
ucomiss
fdivrl
and
test
movsl
stc
pop
pop
call
jge
xor
xlat
jno
dec
jnp
and
push
xchg
mov
sub
xor
mov
adc
jbe
adc
loopne
xlat
pop
jns
stc
pop
ds
arpl
call
mov
inc
ret
cli
test
sti
nop
xchg
sbb
dec
xchg
push
adc
js
movsl
repz
push
add
jg
test
xchg
ds
jle
je
lods
pushf
loope
inc
xor
shll
ljmp
hlt
sub
lds
inc
dec
rcrl
outsl
les
push
xchg
adc
hlt
adc
push
out
std
jnp
mov
xchg
xor
inc
out
ret
and
out
movsb
bound
cli
sub
dec
jnp
mov
sub
pop
sub
psubb
sub
iret
rcrl
loopne
jp
dec
or
insb
gs
sub
xor
shrl
cmc
scas
sub
mov
dec
out
add
add
add
gs
lret
outsl
dec
scas
lock
into
ret
mov
outsl
dec
pop
xchg
sbb
jno
pop
lahf
gs
mov
mov
or
sub
rolb
or
and
and
les
cmp
mov
push
xchg
mov
sbb
out
or
lock
cld
sub
jo
fsubp
scas
fiaddl
js
push
mov
dec
bnd
adc
rcrb
adcl
sub
xchg
scas
in
or
pextrw
ffreep
sbb
jae
sub
mov
pop
clc
mov
ja
test
fs
and
cmp
cmp
jg
insl
add
push
jnp
pop
push
add
repnz
psraw
mov
fcompl
cmp
sbb
add
mov
fcomps
lcall
nop
adc
in
fdivrp
fsts
mov
sbb
ja
add
add
pusha
rorb
cmpsb
mov
mov
push
out
add
add
add
into
inc
pop
mov
inc
mov
cmc
jbe
mov
and
push
jmp
test
cmp
inc
mov
adc
outsb
out
mov
mov
lock
dec
cld
cmp
mov
mov
pop
out
sbb
addr16
mov
iret
roll
jp
inc
push
mov
jecxz
std
lret
and
lods
test
xor
sbb
out
push
push
dec
outsl
mov
cmp
idiv
adc
and
incb
nop
rcr
gs
inc
push
or
test
or
jle
ds
jbe
jae
xor
xchg
fs
xchg
sahf
add
jle
cmp
xchg
or
sti
pop
popa
pop
xchg
aas
mov
cmp
mov
jne
lock
imul
sbb
cli
jnp
ja
out
xchg
mov
mov
pop
insl
mov
push
outsl
cmp
subb
add
add
gs
testl
sti
mov
add
add
std
stos
lods
movb
jbe
pop
mov
addl
fnstsw
aad
inc
and
sbb
andb
xlat
shrb
mov
mov
pop
mov
out
into
jns
icebp
movsb
cld
xchg
movsb
xchg
arpl
jmp
inc
int
rcrl
adc
shlb
sbb
add
sbb
adc
push
hlt
xchg
call
aas
cwtl
iret
enter
outsb
jg
decl
pushf
dec
in
rcll
mov
mov
mov
in
shll
and
ret
xchg
mov
rcl
or
loopne
and
xchg
movsl
inc
add
call
mov
lea
and
lahf
shr
sbb
imul
pop
in
hlt
and
push
mov
xorl
mov
xchg
out
addl
add
and
daa
lahf
mov
pop
das
popa
add
pop
icebp
add
add
add
mov
push
dec
dec
outsl
jle
push
fnsave
stos
popf
gs
jecxz
pop
test
push
imul
mov
iret
loope
add
lea
aam
mov
pop
js
mov
test
inc
mov
cmovbe
xchg
movsl
and
ljmp
outsb
fildl
and
lcall
out
pop
iret
setl
or
out
xchg
mov
ss
xchg
pop
mov
call
mov
in
loope
out
out
bound
jae
xchg
mov
cmp
mov
rorl
addr16
mov
fwait
adc
sub
aaa
jmp
adc
pop
pop
out
cmp
ret
pusha
adc
scas
in
ficomps
cmp
test
push
aas
jp
cwtl
jb
cwtl
pop
aad
push
mov
push
push
les
xchg
ja
lret
push
adc
sbb
pop
and
jg
mov
fucomi
xor
inc
mov
repnz
add
add
xlat
les
addr16
mov
mov
push
mov
scas
or
lods
and
lock
xchg
mov
pop
cmpsl
jb
jo
lods
movsl
clc
jne
rcr
fimull
add
xor
bound
dec
pop
xlat
xor
mov
lahf
push
into
insb
lods
or
fld
mov
stc
dec
popf
roll
cmp
fmull
decl
adc
pop
mov
sarl
daa
adc
sahf
cli
pop
stos
push
cmp
movsb
push
sbb
cmpsb
mov
iret
es
outsl
jmp
into
cmpl
push
pop
pop
scas
sub
mov
mov
out
sbb
idiv
inc
jne
mov
fwait
ljmp
and
xchg
imul
cmp
out
mov
cmpsb
lds
rcr
lahf
push
mov
scas
mov
ss
nop
push
loopne
jne
lahf
pop
mov
xchg
mov
jbe
push
inc
pop
jns
aas
loopne
sub
repz
add
add
and
jne
ja
lods
cld
int3
mov
pop
inc
outsl
repz
pop
pop
xor
sbb
pop
movsb
loope
sbb
adc
shlb
imul
lds
jns
int
mov
mov
sahf
push
cmp
roll
add
jg
mov
mov
adc
jecxz
adc
repnz
ret
sbb
push
dec
addl
pop
cld
mov
sub
push
das
fstpl
in
lods
cli
sub
out
dec
xchg
pop
push
push
sti
push
cmp
shlb
mov
out
pop
lods
xchg
xchg
or
and
mov
flds
sub
and
push
lea
sub
mov
not
ljmp
imul
popf
xlat
fwait
mov
or
dec
insb
pop
iret
test
mov
xchg
insb
addr16
out
and
test
out
mov
cmpsb
sbb
jnp
mov
subl
fs
add
add
add
xor
loope
jge
cmp
addr16
ret
lods
cmp
scas
pop
mov
cltd
pusha
insl
test
sbb
les
in
mov
out
das
insl
push
pop
add
inc
push
jle
pop
subb
test
fisttpl
fdivl
lock
sub
das
pop
sbb
call
jecxz
jecxz
push
gs
and
pop
pop
pop
out
adc
leave
mov
adc
push
add
iret
clc
lret
mov
jns
scas
inc
push
mov
jo
out
out
cmp
in
or
mov
out
sub
pop
inc
push
jnp
add
mov
cmp
out
and
mov
ljmp
mov
mov
cltd
jbe
pop
adc
addr16
pop
icebp
pop
movsl
movsb
lods
hlt
dec
aaa
pop
and
pop
sub
push
fnstsw
xchg
lahf
mov
mov
add
add
xlat
pop
xlat
jg
mov
fstps
add
add
add
sbb
inc
push
hlt
push
mov
cmp
int
jnp
mov
xchg
loopne
sbb
idiv
fcmovnu
inc
mov
mov
pop
mov
xchg
fsubp
imul
mov
adc
dec
sbb
jge
or
mov
push
fsubrs
fldt
shrb
and
ficomps
xlat
fs
cwtl
add
and
testb
inc
inc
lods
insb
sub
nop
cmp
ja
mov
loop
pop
cmc
xor
sbb
push
jb
lods
rcrb
push
inc
or
fdivr
sub
stos
xchg
or
pushf
call
xor
popa
loop
outsb
mov
mov
mov
or
mov
je
shll
lds
ja
cltd
jae
xor
inc
xchg
mov
fld
stc
xor
add
test
xchg
pushf
ja
adc
xchg
mov
idivl
lea
clc
insb
testb
add
add
call
pop
iret
insl
std
pushf
inc
in
inc
push
lods
sub
xor
repz
arpl
shl
and
inc
xchg
jno
mov
in
ss
out
sub
sarb
mov
pop
aam
stos
mov
mov
dec
push
repz
sub
sti
or
sbb
aad
mov
cli
jp
lods
mov
push
inc
adc
mov
xchg
sub
repz
inc
cmp
pusha
mov
mov
mov
aad
or
repnz
das
outsl
cmovbe
push
imul
das
xchg
push
sbb
sub
jmp
stos
cmpsb
add
popl
cltd
rorb
cmpsl
adc
loopne
jmp
fnstsw
les
imul
push
xchg
pop
and
sbb
fldenv
aam
test
cmpsl
jl
aam
loopne
adc
scas
roll
fistl
add
sbb
and
xor
fsubl
test
mov
ficompl
js
jo
add
add
add
cmpsl
idivb
mov
pusha
incb
or
aad
pop
jo
mov
inc
in
rclb
and
int
repz
jmp
and
popl
in
mov
and
cmp
and
in
cltd
leave
inc
cmpsb
sbb
ljmp
xor
sbb
pop
push
adc
inc
adc
ficomps
mov
dec
xor
rclb
pop
jp
mov
std
jg
cwtl
and
inc
xor
sub
into
enter
xlat
mov
adc
jmp
iret
add
xor
push
ss
mov
or
mull
push
fldt
shrb
inc
dec
and
cmc
lea
repnz
cmpsb
mov
lods
inc
movsb
dec
mov
imul
imul
sarb
cltd
mov
lret
cmpsb
cli
jle
hlt
sub
jbe
pop
insl
aas
xchg
pushf
jmp
imul
lahf
repnz
mov
clc
add
add
add
int3
mov
xchg
test
sub
add
mov
and
cwtl
add
sub
sbb
popf
fistl
jg
dec
xor
xchg
call
outsl
dec
decl
cmp
lods
push
push
jno
bound
sub
cmp
or
mov
test
adc
mov
dec
xchg
in
and
xchg
mov
sbbb
xchg
mov
insl
hlt
imul
ret
or
pop
js
sub
adc
lods
movsl
xor
scas
iret
faddl
pop
sub
orb
inc
cld
or
pop
adc
mov
jae
mov
ss
xchg
dec
adc
sar
dec
mov
jae
push
les
iret
mov
cld
xor
sub
mov
ljmp
inc
and
into
mov
sub
sub
or
mov
jno
dec
push
test
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
hlt
push
ss
js
add
add
add
iret
stos
xor
cs
mov
cli
mov
pop
cmpl
cmpsb
jno
ret
sub
ret
cmp
fistps
mov
and
dec
push
jp
in
ret
ljmp
std
jo
bound
addl
xchg
xchg
inc
dec
bound
adc
fmuls
sbb
aad
adc
ror
shl
mov
push
fisttpl
arpl
mov
and
repnz
xchg
adc
mov
cmc
je
pusha
dec
and
xchg
lcall
lret
add
lea
insl
jns
ror
push
imul
pop
and
fwait
fcoms
xlat
repnz
mov
cld
mov
repnz
lret
subl
leave
mov
mov
pop
mov
clc
mov
xchg
push
iret
shlb
mov
xor
push
popa
pop
jmp
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
push
mov
addr16
sub
test
imul
sub
push
das
mov
cmpl
aaa
icebp
sti
addr16
dec
out
jne
mov
jp
mov
pop
cmp
jae
fidivs
test
mov
les
cmp
addb
adc
inc
inc
sbb
cmp
nop
xchg
xlat
into
cmp
in
cmp
mov
sub
sbbl
jo
js
pop
ljmp
add
inc
cmp
loopne
loope
push
or
ret
test
xlat
outsb
or
out
jge
and
jae
rorl
push
out
pop
mov
cltd
cmc
subl
mov
sbb
jle
sub
xlat
outsl
and
mov
je
xchg
repnz
push
into
fists
and
xchg
popf
lods
inc
mov
sub
inc
cs
ss
jp
mov
nop
test
aam
int
aaa
das
aam
and
add
add
add
ret
pop
mov
mov
out
cmp
test
leave
pop
mov
push
and
jns
in
cmc
cli
push
shlb
rclb
cmp
inc
jno
push
adc
dec
or
out
or
scas
mov
pop
jnp
push
popa
cmp
mov
mov
inc
pop
push
cltd
subb
xchg
xor
nop
add
test
jb
xchg
cltd
and
inc
in
arpl
fisubrs
sarb
stos
call
mov
arpl
jnp
js
sbb
insb
aas
cwtl
mov
pop
stos
enter
mov
cmp
int
fcompl
pop
mov
imul
mov
sbb
or
mov
in
inc
or
jp
stos
add
dec
mov
xchg
xchg
int3
aam
iret
pop
into
enter
icebp
cltd
test
adc
daa
push
or
shlb
xor
fldcw
inc
std
adc
pop
arpl
addr16
sub
leave
mov
add
add
add
lods
shrl
ljmp
out
hlt
cmpsl
sbbl
adc
cltd
mov
sbb
notl
into
insb
mov
sahf
cmp
jne
fldcw
or
pop
jb
and
cmp
imul
js
lret
mov
xchg
fwait
inc
test
push
mov
dec
mov
mov
mov
mov
gs
dec
fcmovb
pop
jle
push
pop
pop
stos
repz
test
sbbl
ljmp
mov
fdivl
mov
push
jmp
fmul
outsl
jns
sub
fs
pop
movsl
inc
leave
jnp
dec
imul
aaa
mov
fdivrl
in
cld
xor
push
pop
in
jae
mov
dec
lods
loopne
popa
jne
mov
call
pop
xchg
in
int3
or
movsl
sbb
out
push
out
dec
mov
push
mov
xor
fisttpl
rorl
out
jg
shll
push
sbb
add
add
out
out
pushl
xchg
xor
cmp
add
add
add
in
test
ficoms
or
dec
insl
das
dec
into
push
cmp
outsb
scas
pop
das
mov
daa
cwtl
xor
testb
mov
dec
inc
popf
xor
mov
push
and
or
vpcmpeqb
mov
jnp
aaa
in
or
sub
mov
ret
imul
into
les
into
xchg
jecxz
iret
cltd
in
and
cmp
push
js
jg
mov
dec
mov
push
aad
add
aas
mov
lds
and
mov
scas
imul
push
cmp
dec
dec
loopne
cmpsl
inc
pop
jmp
jp
scas
in
data16
inc
cld
movsl
and
mov
push
add
add
adc
push
bswap
mov
xchg
pop
pop
fisubrs
pop
fdivrp
jns
mov
pusha
xchg
push
leave
leave
notl
jns
cli
aas
sub
xor
lret
inc
loopne
icebp
adcb
push
cmpsb
insl
inc
jo
loopne
mov
add
push
scas
mov
mov
add
add
add
sbb
pop
cli
and
push
jp
push
sub
jl
pushf
xchg
jmp
push
js
push
sbb
stc
aad
dec
jo
hlt
adc
mov
mov
xchg
xchg
lock
lcall
sbb
sbb
mov
arpl
mov
xlat
or
data16
mov
xchg
inc
mov
enter
jo
mov
loopne
sbb
pop
sbb
mov
fisubrl
or
sbb
cmp
mov
mov
repz
sbb
push
gs
push
out
iret
imul
pop
insl
mov
jg
adc
jl
push
pushf
push
stos
cli
mov
jle
or
pusha
or
jle
add
xchg
push
movsl
dec
xchg
push
add
insl
movsb
mov
stos
loop
inc
outsl
inc
add
xchg
pushf
sub
inc
jl
mov
sbb
in
idiv
js
add
and
popf
ja
mov
cmp
xor
cs
push
aaa
xchg
and
movsl
mov
mov
mov
test
incl
add
add
cmp
add
mov
and
pop
sbb
sub
ljmp
fs
rcll
mov
flds
mov
dec
cmp
inc
inc
fs
inc
jnp
mov
add
cmp
or
insb
pop
aaa
aaa
iret
movsl
js
into
dec
jecxz
jbe
stos
xchg
push
fimuls
cmp
sub
test
xchg
addb
pushf
std
movsb
pop
dec
mov
in
int
mov
insl
adc
xchg
add
pushf
rcl
or
add
hlt
jl
lahf
scas
fcoml
mov
mov
inc
pop
jge
dec
jne
lahf
push
sbbb
xlat
inc
movsb
loope
sub
lock
xchg
push
dec
xchg
push
scas
mov
jl
das
sbb
xchg
or
or
sbb
mov
adc
cld
aam
lods
out
push
xchg
push
subl
push
or
daa
int3
push
xchg
fdivl
mov
int
push
daa
xchg
add
add
add
xor
lds
mov
sub
lock
adc
mov
sub
cmp
pop
adc
ret
movsl
adcl
sub
jae
jecxz
xchg
jmp
xchg
insb
pop
idiv
sub
sub
cmpsl
mov
sbb
pop
jl
mov
sub
inc
push
add
dec
jne
fidivrs
addr16
mulb
imul
or
adc
repnz
iret
cs
xor
or
pop
daa
adc
xchg
and
adc
fimull
dec
push
rorl
aam
gs
sbb
test
mov
lret
lcall
jo
cmc
dec
jns
mov
adc
sbb
push
fcmovnbe
mov
jle
jle
push
shl
in
icebp
xchg
and
jl
inc
mov
in
fs
ret
lcall
ret
inc
stc
mov
mov
lods
imul
movsb
mov
add
add
add
add
aaa
add
xchg
xchg
mov
xor
mov
jmp
push
ss
test
pop
or
mov
je
cmp
addr16
or
xor
bound
ret
cli
mov
sbb
dec
testl
jecxz
xchg
jb
lahf
outsb
jno
inc
insb
in
pop
xor
sbb
cwtl
or
mov
and
test
in
push
sbb
stos
out
push
lret
mov
pop
xchg
push
dec
inc
pop
sbb
push
in
jnp
and
insb
xchg
add
je
cmp
jecxz
cmpsl
push
mov
dec
sti
pop
pop
xchg
and
insl
cwtl
jae
rcrl
dec
cmp
popf
sbb
sbb
cwtl
inc
andl
xchg
mov
adc
mov
insb
mov
push
rol
dec
mov
xchg
repnz
ljmp
xor
push
out
cltd
pop
std
iret
fstpt
adc
inc
mov
xchg
sub
scas
or
cmp
in
into
jg
add
add
add
adc
mov
popa
enter
enter
mov
or
daa
pushf
jmp
stc
shrb
jg
mov
mov
mov
sub
xchg
sbb
pusha
dec
mov
lock
push
cmpsb
push
mov
orb
stc
mov
adc
sbb
data16
je
fnstcw
push
jno
xchg
xchg
xor
roll
stc
dec
ds
pop
cld
jg
sub
dec
inc
or
aad
push
xor
ss
hlt
dec
outsb
sti
or
cmp
popa
pop
xlat
push
ror
mov
repz
xor
das
inc
sub
or
mov
popf
sbb
inc
idivb
cld
cwtl
shll
mov
pusha
mov
push
cmp
sahf
rcrb
mov
lcall
mov
mov
inc
sbb
push
xchg
xchg
enter
push
fbld
ja
and
add
add
fsubrs
mov
jle
test
or
js
shrl
mov
mov
mov
cmp
idivl
pop
and
adc
adc
xor
push
and
je
xchg
add
loopne
and
push
mov
pop
mov
pushf
sbb
adc
push
push
loope
xor
insb
inc
xchg
dec
cmc
inc
pop
mov
sub
rcr
pushf
nop
stc
or
lea
out
outsl
jnp
loop
xlat
jbe
stos
hlt
and
fildll
pushf
imull
mov
test
imul
mov
inc
jns
add
jno
adc
cmovge
leave
add
dec
or
or
cmp
push
push
mov
mov
clc
ds
mov
jbe
arpl
mov
adc
cld
add
imul
xor
call
aad
das
mov
into
fwait
add
mov
movsb
add
add
add
dec
push
lock
sub
lods
pop
icebp
outsl
cmp
pusha
xor
cmp
mov
cmp
push
les
and
xchg
and
adc
jbe
cmc
xlat
push
mov
cmp
adc
lahf
insb
dec
mov
pusha
mov
mov
aaa
dec
stos
push
xchg
sbb
hlt
mov
scas
pop
repnz
outsl
stc
xchg
ds
push
sub
lahf
movsl
jl
cmp
xchg
scas
lods
jno
ja
or
fidivs
dec
jmp
inc
mov
in
mov
pop
mov
mov
cmp
fsubrl
and
lods
outsb
mov
clc
int3
jmp
lods
lcall
inc
mov
pushf
sub
dec
rcrl
shrb
push
lock
mov
out
add
push
xor
imul
lods
aaa
out
test
cli
and
or
adc
popf
pop
jecxz
gs
jl
test
out
mov
pop
sarb
in
or
add
add
shl
into
adc
addb
mov
xor
sub
jae
ret
out
xchg
insl
mov
dec
cmp
mov
xchg
xchg
lods
adcb
sarb
aam
push
jge
mov
mov
mov
in
into
cmpsl
test
pop
pop
lock
push
js
fdivrs
cmc
and
pop
jmp
adc
xchg
loopne
pop
dec
push
jl
push
mov
hlt
add
fbstp
psrlq
shlb
mov
jmp
jb
pop
xor
dec
movsb
aam
push
xor
arpl
xor
mov
sbb
add
mov
movsb
lods
fildl
jge
xor
cmp
xchg
stc
adc
or
or
mov
sti
xor
sub
rcrl
add
pop
std
xor
xor
pop
push
dec
into
jbe
sti
inc
out
aas
mov
rorb
sbb
push
add
add
add
daa
out
push
push
mov
pop
filds
into
dec
arpl
push
in
lcall
sbb
inc
add
mov
or
push
gs
insl
mov
cmp
mov
repnz
in
stos
jecxz
add
inc
mov
iret
fcmovu
aad
xchg
mov
sub
xchg
daa
fimuls
jmp
adc
shl
lcall
adc
cmp
leave
outsb
icebp
sub
sbb
imul
pop
cli
jno
jp
js
loopne
mov
and
ror
sbb
inc
ja
add
pop
pop
or
shlb
cld
add
and
test
scas
sbb
imul
dec
and
push
dec
leave
xor
mov
jnp
lds
jge
sub
out
gs
xchg
popl
and
je
cwtl
insl
or
shll
pop
push
bnd
dec
leave
and
pop
push
call
add
add
rcl
lret
jbe
shlb
out
mov
cmp
aaa
ljmp
jno
mov
sub
sti
dec
outsl
lahf
andb
pop
inc
xchg
test
andb
jnp
fdiv
push
jecxz
leave
and
scas
sets
dec
movsl
and
dec
jno
jbe
das
inc
std
outsb
mov
xor
pop
andb
mov
int3
lcall
bound
adc
pop
nop
scas
pminsw
dec
inc
mov
mov
pop
fadd
add
pushf
mov
movsl
xor
aaa
mov
mov
insl
out
stc
xchg
insb
dec
and
dec
cmp
clc
or
mov
cli
enter
cmp
ror
xchg
push
hlt
leave
jmp
pusha
mov
fsubrs
or
fistl
mov
jbe
mov
push
fdivrl
sbb
inc
ret
sbb
in
out
ja
filds
arpl
add
add
cmpsb
movsb
pop
repnz
dec
xor
in
adc
mov
cmp
xchg
push
xchg
adc
push
pop
pop
sub
jno
mov
mov
loop
mov
push
incl
mov
push
bound
jmp
lahf
cmp
cmp
pop
outsl
mov
inc
jp
cmpsl
add
sbb
push
mov
lahf
icebp
std
lret
sbb
rolb
sbb
xor
out
loopne
mov
cmp
cmp
orl
scas
xlat
outsl
fbld
insb
in
inc
imul
clc
fiadds
mov
mov
jmp
pop
nop
jne
sarb
mov
arpl
pop
lahf
repz
fst
inc
push
jecxz
or
call
sub
jle
pop
add
inc
inc
cltd
lock
jne
pop
xor
mov
fistl
hlt
fdivrp
das
faddl
jmp
add
lds
scas
test
in
inc
push
or
push
mov
add
add
push
sbb
pusha
add
loop
out
out
out
pop
cmpsl
daa
sbb
sar
popa
pop
mov
popf
ret
push
negb
xchg
shrb
push
sti
fmull
xor
cltd
or
out
negb
cmp
pop
mov
mov
and
testl
push
xlat
cmp
jle
xchg
cmp
pushf
in
arpl
mov
push
or
sub
scas
in
push
sahf
adc
pop
movsl
pop
mov
sbb
push
bound
insb
outsb
jecxz
in
iret
add
lcall
mov
mov
xchg
outsb
inc
xchg
outsl
int3
xchg
cmc
popf
fwait
in
sub
and
and
inc
jne
xchg
daa
popa
repz
lods
mov
imull
mov
inc
lahf
pop
test
movsb
dec
ret
test
test
faddl
add
add
jg
neg
pop
daa
inc
in
dec
mov
add
add
add
xlat
push
pop
mov
shlb
loopne
cmpsl
inc
add
xchg
or
jbe
add
lret
mov
sub
je
xchg
mov
sbb
adc
call
push
jp
add
mov
aas
in
int3
mov
movsl
and
and
sbb
sbb
aad
popa
sub
xchg
cmp
icebp
mov
adc
fnstsw
adc
aaa
cld
out
jae
fimull
lock
out
lret
ljmp
sahf
fsubrs
dec
loope
xlat
ljmp
std
xchg
add
out
add
mov
xor
sar
lds
mov
jns,pt
or
int3
rcrl
xor
cmp
pop
fisttps
loopne
push
pop
in
push
test
sub
mov
jno
push
and
jle
rcl
andl
cwtl
jo
cmp
sti
jg
cmp
je
ljmp
add
add
scas
xchg
sub
and
xchg
mov
aam
dec
pop
jne
or
sub
and
ljmp
cmc
inc
fdivrp
repz
dec
test
out
push
out
jae
xchg
fmul
mov
lea
dec
imul
mov
stc
fsubrs
ficoms
jbe
cmp
rolb
outsl
fwait
insb
push
movsb
inc
negl
icebp
lret
lock
cwtl
int3
fidivrs
rol
int
mov
inc
cli
fcmovbe
leave
sbb
jl
icebp
cmp
dec
mov
mov
mov
jo
push
dec
push
repnz
or
rorl
and
jae
adc
sub
dec
inc
mov
outsb
jl
shrl
sub
sarl
or
dec
fdivl
test
mov
std
rcrb
movsb
test
push
je
xor
pop
sbb
test
mov
lret
loopne
sbb
loope
scas
aam
jnp
fstp
fcompl
adc
cmp
or
add
add
popa
dec
jmp
sub
je
and
in
fisubrl
mov
fcmovnb
adc
xor
xchg
dec
push
sbb
jle
lret
leave
repnz
cmp
in
mov
aaa
cmp
pmovmskb
pop
jecxz
lahf
and
and
imul
adc
sahf
out
xor
idiv
sub
sub
cli
ss
repz
inc
xchg
inc
sub
pop
jmp
popf
mov
out
arpl
xchg
dec
fldcw
aad
mov
enter
in
xchg
fucomi
arpl
inc
negl
xor
test
sbb
adc
out
lcall
ret
lea
xlat
rorb
call
cs
test
xorb
xor
and
xchg
pop
dec
fabs
adc
mov
or
lcall
mov
cmpsb
xchg
fwait
popa
mov
aaa
xchg
mov
push
jp
cmpb
push
lahf
lahf
inc
bnd
or
scas
pop
aad
mov
jno
std
outsl
mov
add
pop
enter
add
add
jo
adcb
mov
cmp
cmp
icebp
in
fwait
cmp
lods
in
insb
out
and
and
mov
lock
pop
ficoml
xchg
out
int3
leave
inc
jbe
jb
fsubs
push
out
pop
sbb
pop
jns
ret
pop
sbb
sbb
dec
inc
subl
int3
adc
inc
mov
movl
es
fcomps
cltd
sahf
lret
sub
ja
cs
dec
orb
cli
cmp
sti
mull
and
push
mov
call
add
icebp
flds
adc
mov
lahf
stc
xlat
daa
xchg
pop
shlb
mov
cmp
out
movsl
stc
mov
cmp
adc
xor
and
movsb
sub
jno
dec
sahf
jae
pop
xor
lahf
loopne
cmp
movsl
sub
pushf
lods
sbb
xchg
pop
stc
sbbb
loope
jmp
fisttpll
push
add
add
add
aad
or
xor
insl
cld
sti
xchg
mov
pop
cmp
outsl
sbb
movsl
sbb
in
sub
mov
pop
and
xchg
and
dec
lds
push
xor
cs
dec
cmc
pop
pop
jmp
in
mov
leave
lea
sar
ret
dec
mov
rorb
and
in
fnsave
push
cmp
int3
push
rcr
orl
add
insl
pop
int
xor
lcall
fcoms
inc
mov
pushf
shr
int
pushf
xchg
add
add
ss
and
mov
xchg
mov
push
jmp
cvtps2pi
jb
insl
adc
std
inc
repnz
stos
stos
lret
mov
aas
mov
negl
inc
mov
cld
mov
add
jp
scas
jae
or
fwait
cs
mov
cmpsb
adc
dec
or
loope
push
lcall
lahf
out
dec
or
add
add
xor
test
aad
push
rorb
add
add
add
and
frstor
xor
dec
aas
arpl
mov
push
jns
or
aas
sbb
mov
inc
mov
fs
loope
leave
adc
mov
sbb
shlb
in
xor
mov
push
aad
scas
out
nop
xchg
jb
nop
aas
test
out
sbb
push
nop
push
sub
jbe
arpl
xchg
dec
adc
fsubl
mov
aaa
fsubl
pop
xchg
push
enter
mov
or
cmp
inc
fsubl
jle
push
jmp
dec
lods
aam
jns
sbb
push
cmp
es
pop
sbb
cmp
mov
cmp
cli
addb
fimuls
jbe
jno
pusha
es
dec
and
sub
push
scas
movsl
rorl
jns
pop
cmp
ss
xchg
xchg
sub
leave
cs
pop
shll
bnd
movsb
sbb
jbe
shll
bound
roll
add
add
cli
inc
jg
int
xchg
lods
or
seta
add
add
pop
fwait
sti
add
dec
pushw
aaa
fildl
gs
sub
pop
fwait
popf
cwtl
pop
mov
stc
insb
sti
push
push
je
fbstp
mov
push
xchg
stos
je
test
pop
fstpl
or
shll
sub
mov
insl
or
roll
push
pop
das
jno
out
inc
les
call
adc
outsb
mov
inc
lods
lods
aaa
push
push
xor
outsb
aad
push
test
stos
rcll
mov
or
lods
push
xor
xor
outsl
shl
jmp
mov
dec
sbb
xchg
sbb
cmpsl
mov
inc
jp
inc
lcall
jbe
decb
outsl
push
jae
pop
jo
test
mov
std
inc
lret
in
in
push
xchg
dec
std
and
pushf
out
jb
or
adc
xor
add
nop
cmp
test
test
lock
std
cmp
jle
fistpll
fidivrl
push
mov
fcoms
add
add
add
xchg
xchg
add
fnstcw
in
addb
shrb
mov
mov
out
mov
loop
mov
daa
push
sub
ja
mov
call
cmpsb
add
sub
xchg
insb
xchg
or
pop
cld
xchg
mov
fwait
sar
jne
sbb
xlat
in
jo
cmp
jne
mov
clc
add
lods
jb
jno,pn
popf
fcoml
rolb
add
std
sahf
mov
mov
idivb
mov
jmp
jne
mov
fdivs
cmp
test
shl
into
mov
jns
outsl
pop
imulb
je
into
mov
lcall
lock
jle
sub
dec
pop
push
shll
cmp
loop
mov
adc
pop
arpl
aaa
in
inc
out
xchg
mov
xchg
cs
ss
imul
aad
inc
cmpsb
enter
sub
pop
addl
add
xchg
pop
lds
xlat
ficompl
inc
dec
inc
add
adc
add
add
or
ss
dec
adc
daa
cmpsl
xor
push
aam
sub
cld
out
cwtl
cmp
xchg
aas
sbb
shr
and
popa
fldl
mov
push
or
movsb
jns
sbb
ss
adc
sub
dec
xchg
and
lods
push
lahf
das
into
sub
push
fs
adc
adc
pusha
rorl
mov
push
sub
arpl
jge
or
test
dec
pop
mov
mov
cmc
aam
jp
cmp
pop
jae,pt
push
popf
bound
insl
sbb
cmc
fstpl
dec
lods
rcrl
xchg
in
xlat
addb
ljmp
inc
pop
dec
xchg
mov
sbb
or
cmc
mov
mov
sarl
scas
fs
add
fimuls
jg
addr16
xchg
aam
cld
inc
xchg
gs
adcb
std
je
push
test
lret
inc
cmp
out
aaa
fdivrs
dec
jmp
dec
scas
iret
outsb
jmp
push
test
shl
loopne
add
add
add
inc
jecxz
cmpsl
int
or
adc
cs
mov
xchg
mov
arpl
jl
test
negb
fildll
xchg
mov
cmp
ja
loope
sub
xor
dec
sbb
pop
pusha
and
xor
sahf
ficompl
loopne
stc
popf
jae
mov
lock
adc
loop
lret
pop
test
imul
fs
leave
lods
pop
fs
enter
add
ds
push
cltd
aam
mov
iret
je
mov
push
sbb
dec
pusha
jns
mov
dec
cli
ret
add
jne
les
sub
outsb
pop
pop
cmp
outsl
lods
fisttpl
mov
test
or
push
pop
fdivrs
pop
lcall
jae
jmp
shl
mov
outsb
in
sbb
adc
xchg
or
hlt
in
mov
lods
pop
push
lods
fsts
jns
stc
out
pushf
addl
add
sbb
std
sbb
stc
cld
or
cmpsb
jp
js
adc
add
add
jo
jp
negb
mov
mov
scas
mov
xchg
andl
movl
add
pop
icebp
outsl
adc
mov
add
mov
cmp
loopne
loop
cmp
stos
ss
cmp
mov
and
jg
mov
cmpsb
mov
and
in
pop
xchg
fisubrs
or
cmp
push
sbb
xchg
arpl
mov
xor
pop
push
out
jecxz
jno
shrl
xor
mov
lds
lret
insl
ret
xor
aam
push
cltd
or
es
add
mov
inc
popf
mov
rcll
pop
std
shrl
sub
xlat
lret
pop
jns
mov
mov
mov
mov
jne
cwtl
xchg
fwait
lock
cli
jle
test
inc
inc
es
jl
inc
jg
fistps
aaa
pop
mov
jne
jle
pop
mov
lods
mov
dec
xchg
in
mov
into
lds
add
add
pop
test
scas
repz
cld
adc
mov
loop
adc
add
subb
lds
ljmp
sarb
sub
into
outsl
xchg
sahf
push
xchg
out
pusha
sub
cli
dec
ja
dec
xchg
inc
rcr
jge
xchg
mov
push
cli
aam
lea
nop
push
jno
mov
loopne
dec
pushf
cmc
into
push
sbb
xchg
cmp
int3
cld
mov
xchg
testb
mov
test
push
cmp
pop
jae
adc
mov
xor
adc
fidivrl
dec
inc
add
jecxz
cmp
loope
fcomps
sbb
pop
ds
cmp
xchg
xchg
fcomp
fs
or
xchg
fldenv
push
mov
mov
fcmovne
mov
nop
sub
sti
inc
lea
cmp
gs
int3
cmp
or
dec
sbb
js
adc
and
and
fs
push
mov
jae
sub
xchg
das
in
inc
fucomi
pop
dec
int3
mov
dec
pushl
inc
inc
adc
in
push
add
add
add
push
and
stc
lret
clc
mov
dec
iret
and
divb
fldcw
jnp
ret
mov
and
adc
pop
fs
jle
testb
out
or
sub
xor
dec
push
negl
sbb
inc
loopne
dec
mov
rolb
jns
sub
mov
bound
out
jo
ljmp
stos
jne
out
aas
mov
loope
aad
or
fcompl
movsl
mov
out
xor
div
sub
adc
inc
outsl
mov
xor
lock
iret
imul
xchg
ret
xchg
aas
aam
enter
add
mov
adc
mov
xchg
dec
mov
cmp
std
mov
sub
xchg
push
adc
addb
push
dec
or
ljmp
mov
or
xchg
sbb
xor
lods
adc
cwtl
jg
jp
add
add
inc
ja
pop
aas
dec
push
xchg
add
add
add
pop
movaps
rclb
pop
push
outsb
lea
xchg
mov
add
push
xchg
jge
filds
pmullw
sahf
data16
or
hlt
xor
xor
mov
push
rcrb
fcompl
cmpl
fwait
mov
mov
and
scas
or
push
insl
dec
sbb
stc
lea
and
sub
mov
dec
xchg
mov
shl
jl
push
jae
add
cli
ja
xlat
and
add
xor
int
cmp
jge
dec
lcall
cwtl
cmp
or
mov
and
iret
out
sub
mov
sub
and
pusha
rcll
or
mov
xchg
out
jae
jl
fwait
dec
pop
mov
xor
dec
dec
out
cld
sbb
popa
jnp
fadd
fsub
int3
lcall
mov
hlt
jecxz
out
mov
add
xchg
jae
ja
div
mov
jne
clc
hlt
sbb
add
add
ret
out
mov
mov
incb
push
lock
sub
jae
sbb
jg
data16
cmpsb
mov
sbb
outsl
ret
pop
fists
in
or
or
fbld
add
imul
loopne
pop
and
sarb
xchg
add
inc
cmpsb
inc
jb
xor
ja
push
jg
push
imul
jecxz
add
aas
mov
fadds
enter
fwait
pop
mov
mov
sbb
xchg
push
or
cmp
push
inc
fildll
add
jnp
pop
enter
jle
and
test
ja
mov
dec
mov
out
xchg
pop
dec
icebp
idivb
js
sub
pop
jge
daa
cmp
push
outsb
icebp
push
test
or
lea
mov
add
xor
pmulhuw
iret
gs
in
add
jns
or
dec
or
sub
insl
repz
aad
hlt
addr16
subl
dec
in
mov
add
xor
cli
std
jg
push
pushf
dec
pop
or
add
add
mov
stos
dec
in
cwtl
mov
xor
and
add
inc
repz
jp
mov
or
xchg
int3
mov
mov
test
mov
xor
pop
cs
aam
push
aaa
out
mov
pushf
push
jns
imul
aad
xchg
inc
sbb
xchg
ja
jge
shlb
push
loop
or
push
push
imul
arpl
cmp
pop
test
sar
cmpsl
inc
arpl
mov
jbe
ret
popf
negb
push
inc
test
jns
pop
addps
pusha
mov
xchg
adc
mov
cli
push
push
mov
jne
inc
int3
ja
test
pop
addb
fwait
adc
inc
dec
jnp
stos
rcr
mov
nop
enter
ja
hlt
aam
push
jnp
dec
sub
mov
fcomps
fbld
mov
add
add
mov
std
incl
sbb
cli
or
cmpsb
cld
sbb
add
add
pop
inc
xor
adc
shl
aas
pop
cltd
scas
lods
loope
jnp
push
pop
stc
pop
cld
mov
nop
daa
xchg
xor
xchg
mov
or
xor
adc
data16
add
stc
mov
jne
push
inc
mov
divl
fcmovb
pop
mov
push
js
pop
cli
push
inc
pop
push
mov
aad
mov
icebp
or
jno
int3
mov
call
pop
hlt
scas
shll
push
int
ja
pushf
ret
push
jnp
inc
fs
enter
daa
mov
mov
sbb
xor
pop
push
pandn
inc
pop
inc
jge
xchg
mov
add
adcb
dec
inc
cmp
pop
insb
pusha
sbb
xchg
fstpt
cltd
cltd
sbb
xchg
inc
out
jno
jmp
data16
call
jp
inc
sub
jle
aaa
push
adc
add
add
es
jg
pop
or
xor
out
addb
add
add
add
fisubrl
push
mov
cmp
fimuls
adc
popa
inc
xchg
cmp
jg
push
adc
mov
xchg
xlat
or
mov
jae
clc
divss
cld
jnp
pop
xchg
cwtl
and
addr16
movsl
add
push
data16
mov
sbb
repnz
inc
je
sbb
mov
in
bound
shr
outsl
mov
aas
mov
push
fwait
xor
inc
dec
mov
fucom
xchg
ret
or
push
pop
sub
mov
call
pop
sub
sbb
scas
clc
mov
add
std
jmp
fldl
push
sbb
push
test
pop
inc
dec
or
dec
arpl
aam
mov
add
cs
inc
mov
int
xchg
fcmovne
test
stc
add
mov
loopne
das
mov
or
repnz
idivb
pop
shlb
cwtl
arpl
add
add
or
dec
push
cmp
sbb
add
pop
cmp
pop
and
sbb
js
in
push
sbb
push
repnz
jp
dec
jae
xor
into
mov
in
pop
cmp
mov
je
adc
inc
cmp
ret
jns
in
shll
hlt
arpl
push
cmpsl
out
out
pop
cmpsb
pop
testb
gs
jecxz
xor
mov
negl
fsubr
or
in
leave
enter
sti
sti
xlat
je
imul
jmp
lcall
mov
adc
sub
shl
push
fcoml
and
jecxz
movsl
icebp
lods
adc
sbb
xchg
icebp
sbb
fs
xchg
xor
pop
lret
jnp
mov
std
imulb
inc
xlat
into
mov
adc
sbb
repnz
cmpsb
and
movsb
inc
jmp
mov
stos
mov
jl
inc
jmp
jg
out
jne
add
add
stc
lods
xor
mov
add
push
add
add
add
and
scas
or
xor
in
cmp
lcall
cmpsl
fldl
jnp
int
aas
jno
stc
outsl
xchg
pop
shrl
jae
lods
inc
je
adc
pop
and
stos
pop
es
or
inc
xor
mov
xchg
jns,pn
adc
or
mov
stc
push
push
int3
jne
sbb
add
xor
fsts
loop
dec
fidivs
xor
in
int
pop
cmpsb
movswl
adc
test
xchg
in
sub
in
mov
test
pop
hlt
pop
xor
jecxz
push
sub
mov
xchg
push
cmpsl
imul
push
adc
inc
add
aam
insl
fs
sarb
sarl
dec
adc
addb
mov
rcrb
loopne
stc
and
ja
je
imul
std
jp
push
cltd
cmp
repnz
add
ficoms
stos
sbb
call
mov
or
add
add
add
jecxz
mov
sub
adc
das
xor
lahf
xchg
das
mov
lret
test
mov
roll
pop
movd
or
imul
movsl
sbb
int3
add
pusha
dec
pop
test
bound
fidivrs
insb
test
imul
sbb
mov
jl
arpl
dec
test
incb
adc
xchg
mov
cmp
loop
aam
add
cltd
mov
add
es
rolb
lret
push
and
xchg
insb
dec
gs
and
in
pop
inc
neg
je
jp
mov
aam
pop
xor
outsb
es
push
stc
je
mov
jno
push
sbb
pop
dec
aam
and
cli
mov
jne
mov
push
movsb
jo
ret
add
mov
out
stos
jge
or
and
add
add
stos
popf
mov
aas
sbb
faddl
jno
hlt
lock
sbbl
repnz
sbb
cwtl
jmp
rcrb
out
adc
cmpsl
adc
xchg
inc
push
repz
xor
mov
popa
out
sti
sbb
subb
add
jle
dec
daa
or
pop
xlat
adc
dec
inc
dec
lea
xchg
mov
xchg
sub
pop
lods
inc
push
ss
inc
into
mov
cmp
sub
cltd
add
or
sbb
sub
pop
sahf
into
pop
jmp
lds
mov
cld
push
dec
pop
rorl
pop
addr16
cmp
cmc
notb
mov
into
lods
push
out
lock
addr16
jp
int3
lds
mov
jg
negl
push
pusha
or
lret
mov
pop
push
mov
lcall
inc
jmp
xchg
mov
push
pop
cli
jp
ds
dec
or
out
xchg
iret
push
aas
xchg
adc
add
add
add
mov
or
dec
lcall
xchg
push
shl
rcl
lcall
xchg
pushf
mov
stc
inc
jecxz
inc
ljmp
jb
std
cs
xor
or
cmpl
movsl
in
pop
lods
xor
xor
cmpsb
jg
leave
lock
adc
cld
ljmp
inc
sub
add
mov
pusha
mov
push
xor
inc
jbe
lret
and
cli
es
cli
gs
lods
fst
jmp
push
sti
and
dec
xchg
inc
cmp
stc
adc
sbb
pop
dec
repz
not
xor
jae
gs
les
gs
imul
sbb
scas
imull
data16
xchg
sbb
adc
xlat
sub
sti
outsl
or
dec
lock
mov
lret
add
mov
lret
pushf
mov
add
add
in
add
cmp
out
loope
jns
jns
dec
hlt
sbb
add
add
add
sub
dec
mov
scas
xchg
cld
sub
pusha
dec
fistpll
mov
or
xchg
mov
repz
jns
out
pop
test
cmp
cmpsl
xchg
fisubl
divb
adc
popa
dec
lds
aas
mov
setae
adc
push
aam
inc
pop
hlt
adc
sbb
subl
imul
adc
stc
int
or
imul
pop
call
mov
shrl
mov
adc
push
push
xor
std
add
sbb
and
mov
jle
loop
loopne
cs
sahf
push
repz
pop
mov
mov
dec
mov
dec
xchg
lods
imul
daa
lret
push
add
rclb
clc
xchg
hlt
es
jp
paddw
rcr
mov
sbb
push
and
out
insl
clc
enter
test
sbb
sti
push
mov
and
inc
xchg
sbb
add
add
add
sbb
xor
mov
mov
aad
xor
ret
sub
push
mov
mov
imul
andb
out
push
jb
stos
dec
mov
lret
pop
mov
andb
push
call
mov
jae
cmp
add
xchg
xchg
sarb
pop
das
loopne
mov
shlb
int3
stc
jno
inc
fsub
idivb
into
pop
lret
mov
clc
cmpsb
add
outsb
data16
mov
push
neg
loop
inc
cld
fsubr
ljmp
leave
movsl
movsl
stos
cmp
mov
mov
repnz
mov
adc
in
stos
and
xchg
pushl
fs
sbb
lcall
fidivrs
lods
and
push
cli
or
sbb
adc
push
sbb
sbb
xchg
push
aad
bound
addr16
movsb
inc
js
test
add
mov
dec
idivl
cld
ret
add
or
pop
and
add
add
mov
xchg
inc
call
xor
inc
gs
pop
pushf
mov
pop
push
int3
mov
fisubrs
std
pop
aam
lods
outsl
push
xchg
pop
mov
pop
in
cmp
test
push
daa
ljmp
aas
mov
pop
fcmovne
pushf
push
and
cmc
and
push
cmp
rorl
sti
ret
pop
cli
sti
mov
mov
out
jmp
repnz
shll
dec
or
insl
inc
ret
sbb
ret
xchg
loop
push
lock
addr16
out
or
sub
test
fidivrs
lahf
lods
test
push
out
pop
sbb
jae
aas
sub
mov
jmp
loopne
mov
insb
sub
rcll
sbb
lea
wrmsr
gs
sub
mov
shll
jns
push
fdivrs
add
adc
push
push
or
add
add
mov
iret
mov
data16
inc
inc
and
add
add
add
cmp
xchg
inc
cmp
mov
int3
sti
stos
test
push
sbb
icebp
dec
sbb
out
popl
add
not
adc
and
cmp
ljmp
aad
test
mov
ja
push
in
jno
mov
das
mov
int3
xchg
cwtl
jae
pop
add
cltd
xchg
sub
das
or
xchg
jbe
inc
jecxz
mov
xor
jo
cmp
or
add
push
ror
mov
test
push
into
das
sub
cwtl
xchg
cmp
stos
cmp
dec
inc
das
cld
fbld
inc
jecxz
add
decl
mov
mov
test
imul
in
lahf
push
mov
dec
inc
sub
dec
scas
stos
test
loope
setl
es
cmp
cli
enter
std
aam
mov
enter
or
jg
arpl
pop
andl
add
add
lock
mov
movsl
xor
loop
out
test
mov
rclb
pop
mov
sbbl
not
les
cmp
or
xchg
inc
add
pop
out
mov
pop
pop
repz
fiadds
iret
sbb
and
cltd
dec
sub
pop
inc
pusha
and
mov
jmp
data16
push
jne
xlat
jns
lret
adc
xchg
lret
mov
jns
mov
pop
cld
scas
adc
cs
sahf
int
inc
divb
sub
inc
in
andnps
std
adcl
jg
shrl
test
sbb
fwait
mov
xorl
jecxz
movsl
xor
ja
inc
lret
repz
push
adc
shll
push
jbe
push
cmp
pop
les
mov
jg
xchg
fcmovne
cld
jb
popa
pop
mov
inc
sub
mov
cs
fcmovbe
add
add
add
xor
clc
cli
clc
sarb
sti
mov
in
sub
add
add
add
push
rclb
push
pop
pop
movsw
sar
mov
push
je
pop
sbb
cmp
fdivrl
or
dec
lods
push
add
add
adc
les
or
sarl
addr16
fwait
shl
cmp
jmp
pop
outsb
jmp
push
mov
jmp
mov
test
adcl
outsl
xor
sti
ror
fcomi
push
sbb
pop
jecxz
mov
inc
fs
xchg
pop
fldl
popa
cmpsb
rorb
loope
cli
out
fmul
in
mov
mov
cmpsl
stos
in
mov
inc
mov
jb
xor
mov
sub
mov
mov
lahf
sbbb
cmpsb
adc
add
add
push
insl
hlt
arpl
ljmp
or
push
sbb
jle
inc
cmp
mov
lret
lods
hlt
sbb
mov
shlb
lds
push
loopne
loope
push
xchg
lods
test
xchg
and
pop
jp,pt
xor
add
add
jnp
out
mov
shl
xor
add
add
add
jp
mov
mov
cmp
xor
orb
pop
xchg
inc
or
add
push
mov
ja
and
dec
mov
into
arpl
loop
xor
or
insl
leave
lods
lds
xchg
push
jmp
cmp
or
xor
dec
sub
pop
fldt
insb
cmp
pop
cmp
xchg
lods
xor
dec
and
push
pop
int
aas
loop
movsb
and
pop
out
test
dec
xchg
sbb
push
push
mov
ss
mov
call
dec
fcmovne
push
imul
mov
cmp
mov
mov
jb
xchg
xor
fisttps
shl
mov
cwtl
inc
aad
jne
jl
xchg
mov
fisubrl
sbb
cmp
xlat
daa
mov
testb
mov
icebp
out
adc
fs
es
data16
insb
daa
mov
push
sub
add
add
rorl
mov
sbb
xor
fldl
fisubrl
and
incl
dec
inc
nop
cld
and
imul
cmp
jne
pop
mov
and
mov
insb
scas
std
or
xor
jle
inc
mov
xlat
dec
xchg
mov
inc
popa
out
popf
jl
pop
movl
loopne
push
push
adc
outsb
es
push
addb
scas
dec
inc
xor
cmp
xchg
mov
ror
sarb
lahf
fisubrl
sbb
and
pop
std
jbe
cld
cmc
mov
and
icebp
cmpsb
dec
cs
pop
sbb
ja
sub
mov
mov
int3
out
loopne
pop
mov
lods
and
sub
pop
das
jno
push
dec
add
fstpt
fnstcw
sbb
inc
xchg
stc
addr16
shll
js
lahf
and
cmpsl
adc
mov
dec
clc
mov
fldcw
add
push
cmp
add
add
add
jl
aaa
stc
cli
sbb
mov
icebp
mov
mov
lret
loopne
jb
xchg
or
sbb
inc
push
clc
cmp
ljmp
mov
dec
or
lcall
adc
inc
scas
xchg
sbb
popf
sub
mov
dec
inc
adc
or
int3
fwait
or
mov
mov
arpl
frstor
adc
mov
adc
enter
ret
ljmp
fdivr
adc
stc
mov
stos
push
clc
in
pop
fwait
xlat
sbb
in
mov
out
xchg
in
call
aaa
xor
les
sub
pop
sub
and
push
inc
std
cwtl
into
movsb
jb
mov
jecxz
insb
inc
fstl
mov
mov
sub
cs
dec
sbb
repnz
fs
les
adc
add
add
and
push
sti
cmpsl
enter
mov
adc
add
add
mov
subl
jno
sbb
or
test
and
repz
testb
mov
xchg
xchg
adc
push
sti
xor
mov
fs
jbe
fdivr
add
dec
cli
cmp
xchg
stos
and
add
and
jge
push
call
gs
add
fdiv
xor
mov
pop
cli
lcall
push
mov
imul
out
out
xorl
adc
sahf
pop
xchg
dec
or
jp
mov
lock
movsb
pop
jmp
dec
data16
mov
int
lods
sub
in
adc
rcr
lea
cli
sub
shrb
out
or
gs
mov
mov
mov
cmp
and
aad
jg
stos
test
xlat
sub
mov
xlat
mov
test
mov
xor
icebp
mov
push
and
std
mov
dec
push
sbb
add
add
add
xchg
or
and
int
add
call
int3
aas
inc
mov
addr16
jge
xchg
idivb
das
jmp
push
push
ficoms
mov
cmpsb
sbb
cld
lds
push
out
jno
add
cmpsb
jle
mov
mov
iret
push
sarb
bound
push
loope
out
and
jl
push
outsb
mov
into
add
lock
and
push
js
add
sub
leave
je
cmpsl
xor
xor
aas
pop
mov
pop
lahf
xchg
xor
enter
pop
cmp
dec
daa
jg
push
cwtl
je
mov
cmp
mov
mov
jle
pop
mov
push
fistpll
pop
test
shlb
xchg
test
sbb
sahf
shl
mov
pushf
inc
dec
mov
clc
push
dec
add
cltd
mov
aam
or
sahf
jnp
jle
jnp
lds
xchg
and
inc
and
lcall
add
add
add
mov
xor
decb
sbbl
xchg
inc
push
xchg
push
icebp
inc
adc
sub
std
outsb
test
clc
scas
nop
fwait
push
pop
mov
jle
mov
out
aas
inc
dec
int
aam
sbb
out
in
mov
adc
stc
std
xchg
add
lcall
xlat
sub
sahf
mov
imul
pop
push
aas
mov
jle
sahf
pop
mov
sub
pop
and
mov
clc
movsb
stos
cmc
sub
fwait
sub
push
enter
loopne
out
push
lods
fwait
ret
ret
in
nop
mov
leave
sbb
and
mov
sti
push
je
scas
pusha
gs
aam
mov
push
ljmp
mov
jo
jbe
xor
inc
dec
aad
ja
enter
and
mov
je
arpl
ret
jle
mov
fiaddl
ret
ficomps
cmp
lahf
mov
enter
add
add
add
sarb
push
loopne
mov
test
fs
mov
aad
andb
add
add
or
stc
stc
add
xchg
push
cmp
mov
adcl
xchg
mov
cmp
jge
fimull
adc
push
mov
addr16
mov
cmp
std
stc
in
decb
jns
int3
mov
dec
or
in
or
mov
addr16
dec
imul
cmp
mull
mov
shlb
push
out
in
ds
cmc
ja
icebp
xor
xor
jno
lea
pop
push
call
sbb
pop
lods
jns
mov
pop
dec
ja
sti
xchg
mov
pop
or
cmp
iret
aas
loope
push
or
imul
inc
hlt
hlt
lods
pop
dec
stc
arpl
js
into
cmp
sub
inc
mov
outsl
sbb
add
lods
xor
mov
cmp
and
pop
repnz
das
add
add
add
cmpsl
loope
xchg
pop
sbb
xchg
fyl2xp1
movsl
not
imul
mov
mov
scas
push
jmp
es
sbb
sub
aaa
lahf
cmpl
rolb
iret
xor
cmpsb
push
mov
mov
dec
lcall
mov
sub
mov
inc
stc
push
cmp
pusha
in
mov
inc
mov
sbb
push
lods
and
push
dec
mov
mov
mov
insb
lods
dec
cld
sbb
fistl
js
out
xor
insl
mov
rcl
inc
lcall
clc
clc
mov
mov
jmp
add
cmc
test
mov
mov
lret
cmpsb
dec
xor
dec
call
mull
push
cli
mov
jg
aaa
jmp
iret
and
cmpsb
shlb
bound
insb
incb
add
add
lret
mov
or
insl
ss
push
xor
add
add
into
cmp
mov
and
pop
dec
ljmp
cwtl
shlb
aad
pop
mull
test
xchg
jb
stc
push
xor
pop
xor
out
pmulhuw
lds
out
daa
mov
pop
int
out
sub
daa
pop
fstps
push
fwait
test
push
jmp
dec
gs
jge
xorl
outsb
dec
adc
pop
jns
nop
add
je
jb
pop
mov
nop
int
dec
mov
jl
cmp
mov
xor
dec
rclb
add
gs
xorl
insb
lea
nop
in
dec
cmpsb
idivl
std
dec
cmp
popf
sarb
push
sbb
movsl
aas
stc
orl
loop
push
out
cmp
fcmovne
popa
mov
out
pop
movsb
mov
lret
cmp
add
xlat
imul
and
add
sub
sti
pop
jge
neg
hlt
add
xchg
push
xor
add
add
in
dec
ja
movsl
jo
fimull
decl
xlat
fsubr
pushf
ret
xchg
mov
mov
icebp
repz
in
scas
mov
test
test
test
dec
sbb
push
add
daa
adc
loope
jae
stos
shrl
cmp
push
fidivrs
sub
daa
pushf
mov
pop
mov
xchg
pop
add
lock
cmp
pop
cmc
jns,pt
and
adc
loopne
out
mov
mov
sbb
test
mov
add
mov
data16
cmp
xor
loopne
cmp
in
lods
cmp
lahf
mov
jg
les
sbb
sbb
or
out
push
sti
lret
rcrb
out
mov
ret
jb
stc
in
rorl
pavgw
mov
push
fcompl
add
out
movsb
leave
rolb
add
add
fsub
std
in
popf
in
stc
jmp
daa
pop
out
pop
xor
add
add
lret
iret
imul
bound
and
jmp
jb
and
jge
or
notl
aad
incb
lods
push
inc
stos
inc
jae
inc
mov
sbb
ret
mov
inc
jo
scas
jno
jno
sbb
push
aad
pop
in
nop
mov
pushf
ficoms
dec
int3
mov
jne
and
adc
jbe
dec
push
cmpsb
aas
inc
or
ror
sbb
in
pop
pop
test
in
cli
mov
xor
inc
cwtl
cmp
jl
rolb
lret
outsb
lahf
stos
cltd
inc
jnp
lret
sbb
icebp
fmul
leave
cmpsb
adcb
mov
sbb
mov
mov
int
mov
push
pop
inc
xchg
sbb
adc
pop
mov
das
cmp
es
pushf
stos
sub
das
outsl
sarl
sub
mov
sub
out
jp
pop
daa
sbb
mov
xor
mov
adc
add
pop
jp
jnp
sti
xchg
jle
jp
lods
push
pop
and
pop
xor
add
add
mov
inc
xchg
mov
cli
pop
jns
jp
and
packsswb
clc
dec
mov
cmpsl
pop
or
shrb
xchg
sbb
or
in
push
jmp
push
lds
xchg
popf
xor
xor
xchg
test
xchg
or
daa
test
pop
test
xchg
mov
mov
outsb
shlb
lock
jo
sbb
xchg
jecxz
fsubs
gs
mov
inc
xor
ret
testb
fnsave
mov
arpl
adc
push
mov
clc
sbb
aaa
adc
dec
pop
jecxz
cmp
mov
ss
stos
mov
cmp
sbb
les
xor
jb
or
adc
fisttpl
das
pop
cmp
ljmp
mov
sub
mov
in
dec
push
inc
jo
dec
cwtl
or
fisttpl
inc
mov
pop
leave
stos
arpl
jo
test
mov
push
sti
decb
mov
mov
xor
add
add
std
pop
dec
add
pop
mov
lods
int
sub
xor
pop
cmp
imul
lods
mov
cmp
and
add
push
rorb
mov
jle
pop
xor
pushl
ss
test
aaa
xor
das
sub
xchg
sub
push
sub
adc
imul
jmp
jns
outsb
imul
inc
fs
adc
adc
jno
and
jmp
out
adc
sbb
cwtl
push
add
jmp
je
imul
inc
add
enter
inc
sbb
pop
insl
rcrb
test
gs
mov
lahf
sbb
int3
jb
icebp
jmp
out
lods
xchg
sbb
loop
inc
daa
mov
inc
sub
mov
and
push
enter
rcrl
mov
sti
xchg
pop
and
inc
repnz
fiaddl
add
add
cmp
xor
hlt
jbe
mov
add
add
pop
testb
inc
test
cmpl
ja
dec
adc
sbb
sahf
pop
or
div
pusha
loop
sahf
fldt
adc
jecxz
flds
pop
jae
iret
mov
icebp
or
out
fistps
mov
scas
inc
dec
shlb
xchg
lock
loop
pop
in
mov
and
and
mov
pop
subb
sar
mov
xchg
imul
push
mov
and
ja
lds
sub
in
or
ds
xor
jnp
cmpsb
vmovsldup
pop
dec
adc
movsb
jne
sbb
out
ja
repz
fnsave
fldl2e
adc
fldl
andl
push
sbb
in
negl
mull
cs
outsb
mov
dec
jg
xchg
and
cs
mov
repnz
ss
push
xor
pop
in
enter
cld
cmp
add
into
mov
aad
add
add
cmp
jge
stos
lea
shrb
sti
scas
push
add
add
push
mov
movsl
lock
aas
add
adc
cmp
mov
imul
rolb
jno
and
outsb
jmp
or
mov
test
and
push
insl
lea
jl
cmc
xchg
mov
sub
add
out
fldcw
or
jno
in
push
push
int3
ror
and
clc
imul
add
in
out
jbe
inc
mov
push
fbld
lret
mov
mov
movb
out
adc
orb
add
gs
jns
push
pop
inc
fcompl
adc
pusha
jmp
add
fidivrs
cld
push
std
aam
std
xor
daa
js
mov
loop
and
fs
push
adc
and
ja
pop
mov
mov
popf
cli
rolb
sub
push
xchg
ficomps
gs
fdivl
adc
and
and
sub
mov
divb
rclb
nop
lcall
aaa
add
add
add
loopne
push
xlat
pop
pop
cwtl
pop
push
sub
insb
jg
andl
mov
fwait
mov
push
add
cmc
inc
lods
incb
js
jp
push
sub
push
cmp
clc
outsb
dec
js
popf
arpl
pusha
xor
sub
pop
sti
test
adc
push
or
icebp
iret
aad
pop
adcb
test
push
out
mov
lds
jmp
add
xchg
dec
sarb
jns
mov
xor
jl
daa
loope
adc
dec
insb
adc
scas
test
xlat
dec
or
xlat
push
loopne
inc
mov
push
adc
mulps
mov
into
fcmovb
mov
push
sub
xchg
lcall
sbb
int
xchg
adc
pop
xchg
subl
data16
sbbl
ljmp
mov
dec
sub
cltd
mov
js
or
test
mov
gs
pop
xchg
push
jl
dec
jbe
idivl
or
push
push
jo
add
add
add
sbb
push
pop
cmc
es
test
add
inc
or
int
mov
addb
cli
xchg
pop
rcrl
pop
mov
hlt
mov
arpl
jmp
movsl
loopne
sbb
xchg
daa
jge
or
sbb
out
and
xchg
shlb
xchg
sahf
gs
fwait
pop
push
pop
inc
pushf
insb
jmp
leave
inc
add
add
popf
or
cmp
sub
cmpsb
and
mov
ss
pop
rcrl
xchg
push
jg
movsl
in
push
les
mov
jae
push
jno
xor
lret
xor
push
enter
aas
mov
inc
jg
nop
pop
or
daa
movsl
dec
nop
add
addr16
pop
call
add
movsb
lcall
shlb
push
je
mov
imul
and
add
xor
xchg
push
adc
adc
xor
pop
add
cmp
xchg
and
outsb
sub
stos
fs
jmp
leave
aas
sub
les
add
add
ss
or
rorl
sar
jno
testb
sbb
xchg
stc
or
cmp
shl
cld
xchg
sub
mov
stos
cmpsl
push
pop
movsl
cld
aas
aas
popf
pop
adc
inc
les
out
pop
out
jmp
cli
mov
scas
pop
sbb
jl
dec
scas
inc
test
mov
adc
mov
lods
adc
jp
test
loope
subb
mov
dec
ds
mov
or
lret
outsb
cs
pop
sahf
lds
adc
inc
mov
mov
xchg
mov
dec
inc
stc
shrb
insb
sbb
mov
daa
cmpsl
test
icebp
sbb
mov
in
shll
dec
sti
mov
xor
testb
lea
fwait
push
test
or
fs
jnp
push
xor
inc
test
call
rcrb
aad
nop
stc
inc
sahf
lret
xchg
stos
imul
jecxz
or
les
scas
fistpll
outsl
gs
mov
js
add
add
add
outsl
lret
sahf
pop
std
scas
push
in
push
xlat
enter
push
xchg
fstps
je
push
std
scas
int
or
sub
out
mov
and
divb
fwait
cli
mov
dec
mov
fidivs
mov
cmp
cmp
aaa
arpl
lret
loop
imul
repz
pop
popa
leave
push
sti
gs
data16
sti
xchg
jl
sub
push
daa
out
and
lods
test
test
nop
test
cmp
sub
outsl
aam
ret
hlt
and
test
xchg
jecxz
je
xchg
push
andl
ret
dec
lret
and
mov
push
pushf
dec
mov
add
loop
sbbb
in
mov
mov
bound
xchg
cmp
loopne
loopne
cs
mov
loope
ret
mov
lds
fidivl
adc
xchg
sbb
jnp
jnp
cmp
movsb
push
sbb
scas
dec
loopne
cmp
add
add
or
mov
push
inc
enter
push
stos
inc
and
jne
pushf
mov
adc
or
mov
jp
lods
jl
jno
rorl
adc
push
xchg
sbb
nop
lcall
dec
ret
iret
arpl
test
shl
xor
pop
mov
pop
xor
inc
push
dec
cmp
icebp
fstpt
fmull
out
jnp
pop
push
xor
jle
xchg
pop
lcall
fimull
and
sbb
rcll
cmp
push
or
scas
nop
cmpsb
jne
pushf
dec
das
cmovne
into
cmpsl
test
scas
xlat
fsubs
pop
mov
sub
add
dec
and
mov
add
sub
pop
sti
fwait
ret
enter
stos
loop
stos
dec
and
repz
pop
sbb
lret
out
sbb
and
and
add
stc
mov
mov
outsl
lret
mov
out
jmp
adc
fiaddl
add
add
ja
mov
cmp
mov
dec
or
cmp
je
xchg
popf
push
loopne
leave
or
pop
jo
xor
push
imul
dec
decb
pop
adc
popf
mov
mov
sbb
sub
cld
loope
adc
cmp
and
xchg
mov
dec
mov
sub
ret
push
sbb
aad
je
pushf
add
data16
cmpsb
out
pop
ss
pop
push
xchg
imul
out
xor
enter
mov
popa
xchg
xchg
aaa
push
es
jbe
inc
insl
fidivs
jp
dec
mov
ss
cmp
push
or
xchg
xlat
shrb
adc
sar
fcomp
repnz
arpl
mov
ror
test
std
and
sub
sub
loope
xor
cmp
sub
add
xor
push
jmp
idiv
and
das
cmp
lods
repz
mov
dec
loope
scas
test
add
jnp
mov
rorl
jmp
or
lret
test
arpl
sahf
in
add
pushf
and
mov
adc
sbb
push
rorl
cwtl
cli
scas
test
js
in
xchg
iret
fistpll
ljmp
jnp
or
scas
xor
test
pop
les
pop
call
rcl
sahf
in
mov
dec
bound
push
repz
fcmove
jp
enter
dec
sub
je
shr
arpl
cmp
mov
out
mov
cmp
shr
mov
adc
mov
jmp
fnstcw
jo
or
das
rcl
sarb
lret
jp
adc
jmp
pop
in
xor
dec
pop
jb,pn
adc
xchg
inc
aas
in
cmpb
mov
jno
or
mov
push
pop
pop
int3
mov
xor
shrb
push
andb
ljmp
leave
aas
daa
push
cld
push
std
jmp
dec
push
in
mov
add
add
add
or
push
mov
fcoms
cld
into
repz
adc
js
outsb
lods
xlat
scas
stc
test
test
pop
ffreep
push
gs
xor
notl
xchg
sub
sub
or
dec
fnsave
jge
daa
je
mov
test
jne
add
clc
or
or
adcl
out
mov
ds
hlt
iret
inc
shll
mov
fstl
ret
and
ss
inc
ret
lods
adc
sbb
fwait
or
ss
lea
jno
aad
fcomip
fwait
mov
sbb
std
push
sub
ds
jecxz
fcom
fsub
fistl
test
xchg
jae
sub
ljmp
xchg
adc
pop
and
repnz
in
lds
cltd
mov
xchg
or
dec
or
inc
or
lcall
add
add
sbb
dec
push
out
aad
jo
jmp
mov
add
add
add
inc
aad
in
gs
jb
sbb
stos
adc
push
mov
loope
jno
stc
lea
mov
testb
and
movsl
jecxz
fdivp
sub
cli
pusha
cmp
in
imulb
cmc
lock
shl
mov
lods
mov
adc
es
aas
je
rcrb
pop
enter
jle
push
xor
es
je
inc
sahf
pusha
mov
lret
popa
pop
push
inc
dec
lahf
mov
jp
outsl
mov
pop
sub
xor
shrl
std
repnz
inc
pop
shl
sbb
sub
mov
scas
mov
xor
testb
xchg
mov
push
enter
and
ds
das
jmp
stc
sub
jecxz
xor
icebp
inc
insb
pop
mov
in
test
adc
dec
cltd
mov
mov
dec
push
test
imul
stos
add
push
mov
or
in
test
add
add
or
inc
ret
cltd
pop
mov
dec
mull
cmp
hlt
dec
inc
outsl
lock
jb
test
push
cmc
test
jmp
popf
pop
sub
push
movsb
aad
or
sub
mov
cmp
pop
enter
aam
bound
dec
adc
outsl
popf
and
cmpb
dec
push
incl
dec
cltd
push
adc
mov
or
ja
bound
mov
push
idivb
jg
lods
dec
and
jp
xor
incb
inc
fiaddl
xchg
inc
sub
sbb
pop
mov
call
movb
je
mov
cmp
sub
stos
inc
loope
dec
and
ja
inc
lock
out
imulb
push
xor
mov
sub
jno
enter
sub
push
mov
inc
dec
out
xor
enter
out
push
jnp
xor
add
add
add
jg
xchg
orl
push
xchg
inc
add
add
add
adc
sahf
mov
push
jb
ljmp
call
stos
call
mov
jge
cmp
jge
mov
bound
sar
icebp
sbb
pop
push
mov
push
xlat
pushl
rolb
pop
fcmovne
stc
mov
pop
jmp
sbb
aas
lods
inc
lcall
pop
sub
inc
jne
push
nop
mov
aas
lahf
cmp
inc
xor
cmp
in
mov
inc
enter
fiadds
mov
sbb
incb
aam
addl
adc
push
mov
inc
push
insb
fcomi
cmpsb
cltd
stos
sbb
mov
sbb
rcrl
lods
or
nop
cltd
sbb
inc
pop
or
bound
lret
scas
mulb
adc
mov
dec
xchg
jno
push
ljmp
and
stos
pop
mov
jp
jl
adc
and
dec
lret
jmp
imul
aaa
je
mov
add
add
add
stc
xchg
insl
xchg
or
mov
lret
adc
insb
mov
data16
and
xchg
xor
xor
jne
ret
cli
scas
sub
cmpsl
shr
int3
cmp
inc
popa
mov
add
mov
lods
repnz
jmp
pop
xchg
daa
mov
mov
insl
mov
or
sbb
das
sti
sbb
mov
xor
imul
push
int3
in
ljmp
into
mov
inc
inc
stos
push
jo
mov
shlb
jmp
fbstp
or
jae
pop
loopne
xor
and
push
shll
mov
mov
mov
in
daa
repz
and
inc
int
inc
xchg
stc
adc
cmp
fwait
loopne
adc
xchg
add
sbb
sbb
clc
cmpsb
cmp
imul
fisttpll
lds
cmc
cwtl
xchg
push
sub
mov
cmp
add
mov
adc
pop
loop
lea
add
lds
fwait
adc
pop
mov
adc
movl
sub
pushf
jo
stos
adc
or
pop
js
dec
adc
xchg
xor
mov
rorb
and
cmp
call
cs
sub
push
mov
test
lods
aaa
adc
mov
lret
fsubl
jmp
mov
jmp
pop
push
test
aas
dec
adc
xorb
fidivrl
repnz
inc
aam
mov
push
addr16
pop
mov
stc
xor
and
and
dec
ljmp
jmp
jb
push
rol
imul
inc
cmp
loopne
fwait
orb
ds
xor
mov
mov
add
or
outsb
movsl
adc
sub
jns
xor
jg
inc
push
inc
add
add
add
xlat
mov
pushf
cld
and
push
arpl
adc
enter
pop
cmpsb
cmp
pop
mov
loopne
cli
pushf
sub
outsb
add
lods
lret
xchg
sub
pop
shlb
gs
cli
pushf
and
and
adc
adc
loope
nop
or
fldt
mov
dec
sub
xchg
cmc
test
inc
sbb
out
cmpb
inc
sbb
popa
pusha
pop
mov
sbb
jno
cmpsl
pop
xchg
int
aam
push
gs
pop
shll
push
popa
mov
shll
xchg
cmp
jg
test
dec
xor
dec
movsl
aad
movsl
push
and
inc
mov
mov
aas
jmp
xor
int3
mov
xor
push
jle
test
or
push
nop
pop
inc
in
sub
adc
sub
pop
xor
test
fdivrp
mov
add
add
add
ret
jg
decl
rol
xchg
cwtl
mulb
inc
add
add
add
addl
stos
icebp
subb
mov
imul
out
insb
mov
add
repnz
or
mov
dec
int
pusha
loop
cld
cmp
sub
inc
cmp
aas
mov
cmp
fistps
cmp
andl
cmp
jb
dec
ja
out
xor
add
push
mov
dec
ja
and
cld
sbb
jmp
scas
and
bound
ds
fwait
and
push
jle
or
mov
mov
adc
ds
inc
call
push
mov
xor
stos
or
repz
sarl
jmp
sub
xchg
jg
and
xchg
in
mov
push
insb
add
outsb
jp
jp
sub
and
jge
icebp
adc
adc
jno
rcrb
aad
mov
add
das
mov
out
aad
mov
push
test
add
add
add
scas
push
mov
ficompl
out
mov
test
mov
adc
gs
dec
cmpsb
inc
jnp
pop
sahf
xchg
std
or
mov
int
and
xchg
rcrb
mov
bound
addr16
inc
cmp
mov
lahf
and
sub
adc
in
dec
dec
and
xor
fisubrl
sbb
dec
fldcw
jl
mov
icebp
das
fdivrl
pushf
pushf
mov
stos
std
rcr
add
lret
lcall
push
xchg
fstps
and
insl
and
cmpsl
push
inc
sub
mov
mov
pop
test
into
pop
addr16
cmc
mov
pop
mov
cld
jmp
lret
sti
push
pop
adc
ret
jnp
mov
mov
adc
cmp
push
fstps
push
sub
or
sbb
rcrl
adcb
pop
inc
pop
cwtl
cmp
add
mov
cld
loopne
inc
icebp
hlt
gs
dec
adc
test
lods
inc
add
add
add
out
push
cmp
cmpps
xor
addr16
orb
mov
cmp
xchg
mov
add
dec
out
push
test
out
pop
push
insb
mov
sub
adc
fdivr
std
or
and
enter
or
add
sub
stos
pop
jno
xchg
pushf
popa
mov
xchg
lcall
mov
sub
sbbb
test
inc
movsl
xor
push
or
imul
jl
xor
add
in
mov
ja
jle
js
bound
outsl
fs
cmp
out
pop
dec
int
xor
mov
mov
cli
pushf
or
mov
jle
lahf
imul
pusha
cmpsl
cmp
cmp
imul
ret
cmpsl
xchg
popf
sbb
sbb
lock
and
xchg
call
std
data16
mov
add
add
aas
gs
pop
repnz
dec
add
add
add
imul
fisttpl
push
and
mov
fdivs
lahf
jmp
test
inc
data16
xchg
movsl
push
mov
xor
cmp
push
call
jmp
cmp
repnz
imul
adc
ret
cmpsb
push
pop
and
mov
mov
fsubs
mov
cmpb
shrb
test
push
cs
cmp
xor
pop
enter
fnstenv
or
mov
dec
push
adc
lods
jecxz
int3
mov
add
inc
xor
mov
ljmp
arpl
mov
jae
clc
fisubl
push
push
push
and
int3
xchg
fnstcw
sub
out
xchg
sub
dec
scas
jmp
and
aaa
push
out
push
mov
imul
movsb
ret
hlt
pushf
push
jle
in
and
mov
add
add
out
fisttpll
lock
add
add
add
rcrb
adc
inc
push
sub
out
sbb
lods
movl
mov
mov
xchg
stc
xchg
inc
outsl
aaa
xor
jge
jge
or
push
mov
mov
daa
push
repz
mov
call
fcomp
orb
jmp
in
stos
sbb
inc
sbb
rcrl
xchg
cmpsl
fwait
dec
xor
and
pop
mov
sub
leave
in
xlat
cli
mov
into
sub
sahf
mov
jle
aam
dec
xchg
lock
ds
sbb
es
xlat
xchg
jo
mov
push
cmp
adc
rol
sub
subl
mov
push
and
das
iret
mov
cmp
rol
inc
dec
fidivl
js
jo
push
mov
andl
sub
movsl
lods
call
fildl
add
add
mov
ljmp
add
add
add
add
sarl
stc
xchg
xorb
cmp
test
cltd
hlt
mov
xchg
rolb
lea
test
push
adc
inc
aaa
sahf
xor
cmc
adc
mov
in
push
jbe
fstpt
jbe
inc
xor
shrl
adc
or
cmp
loop
into
jp,pt
in
jle
mov
divb
out
insl
inc
mov
mov
movsb
fdiv
movsb
in
and
or
pop
js
shl
dec
push
hlt
out
mov
jae
inc
and
and
mov
push
shrb
rclb
icebp
sbb
mov
sbb
sbb
cmp
xor
popa
lret
pop
shll
sbb
pop
lcall
popa
jne
push
xor
mov
aas
mov
mov
lea
mov
aaa
add
mov
dec
movb
add
add
jmp
out
aas
jo
sahf
jb
sub
lea
add
or
mov
daa
lds
testl
mov
jbe
cmp
in
dec
pusha
inc
cmc
nop
xor
push
lods
xor
pop
xchg
push
mov
pop
mov
jp
mov
mov
lcall
xchg
dec
mov
in
pop
and
pop
std
mov
lods
mov
loope
out
xor
dec
sti
sub
cs
lret
les
mov
iret
cld
xor
mov
dec
movsb
jnp
aam
jge
aaa
jnp
or
cmp
cli
icebp
addl
mov
cmpsl
mov
jns
rcrl
mov
mov
or
add
jns
sti
or
rcrb
fistpll
imul
in
cmp
shlb
shrl
push
sub
in
push
xchg
push
sbb
lods
call
push
and
pop
mov
mov
hlt
cmp
imul
out
mov
mov
push
sbb
rorb
add
add
cmpsl
inc
mov
adc
xchg
inc
jl
sbb
push
into
dec
mov
dec
fstps
mov
or
mov
std
or
mov
out
mov
mov
dec
ljmp
outsl
test
jle
add
int3
nop
mov
out
sbb
decb
add
and
pop
jecxz
sbb
xchg
shrb
sub
data16
lock
pop
inc
jecxz
and
ja,pn
dec
sub
insb
mov
push
hlt
imul
add
test
fstps
pop
cmpsb
scas
movsl
push
js
in
pop
cmp
and
mov
push
jno
cmp
jno
mov
jle
into
enter
xchg
pop
sbb
cmp
popf
jbe
xlat
or
mov
daa
addr16
out
hlt
sbbl
inc
push
cmpsb
movsl
lea
mov
or
add
add
add
dec
stc
mov
ljmp
les
add
add
popf
cld
test
jns
sub
dec
jmp
push
lret
lds
adc
mov
cmp
mov
fildl
mov
inc
xchg
sbb
fdivrs
and
push
jno
cld
sub
xchg
cmp
in
sub
ljmp
or
xor
sub
lea
jnp
fs
xlat
dec
and
out
xor
shrd
or
pop
dec
pushf
icebp
rolb
outsb
mov
arpl
jbe
cmp
ljmp
mov
sbb
dec
xchg
jo
cmp
push
lods
icebp
sbb
fs
ja
out
add
hlt
sbb
negb
loop
lds
hlt
sti
add
rcl
andl
movsl
call
loope
rcll
loopne
xchg
ret
ficoml
xor
fwait
inc
fsub
cmp
insl
mov
fwait
inc
push
nop
add
popa
xchg
cmp
jle
jg
cld
lcall
stc
enter
add
add
add
xor
cmp
pop
das
push
lods
outsl
js
push
mov
dec
mov
cltd
daa
iret
xchg
mov
lahf
inc
cmpsb
out
xchg
push
lret
ret
je
imul
call
js
insb
sbb
dec
int3
shll
push
cld
out
in
dec
arpl
pop
icebp
cld
je
pop
pop
int3
lahf
popa
add
enter
pop
fidivrl
in
xchg
imul
cmp
ret
cmp
cltd
push
jmp
cmpl
xchg
scas
xchg
mov
jp
mov
add
mulb
cld
inc
xor
gs
jns
and
insl
insl
xchg
pop
mov
add
or
jecxz
pop
orb
popf
jmp
cld
or
imul
rcrb
jecxz
sbb
cmp
leave
fidivrs
mov
add
mov
xchg
mov
pop
incl
add
add
add
adc
jp
ljmp
jecxz
fcomi
push
adc
mov
add
pop
mov
pop
pop
jne
jmp
push
mov
hlt
lcall
adc
ficoms
cmp
mov
xlat
cmp
xchg
in
or
cmp
jmp
inc
stos
pop
mov
add
xchg
dec
sub
mov
pop
xor
mov
lds
sub
sbb
movsb
and
je
mov
repnz
and
movsl
fwait
pop
roll
mov
out
or
std
fiadds
xchg
sahf
mov
pushl
das
adc
outsb
cmp
icebp
jl
outsb
xchg
rcrl
cmp
xchg
int
sub
loopne
pop
fs
add
nop
mov
je
xor
mov
stos
lret
mov
jge
cld
xor
or
mov
and
adc
rclb
add
add
enter
mov
lcall
fs
sub
movsl
pop
in
cmpsb
adc
das
ficoms
idivb
sub
mov
mov
jns
cmpsl
mov
pop
cltd
aam
std
mov
inc
pop
jbe
xor
pop
lret
jbe
or
shl
movsb
in
cs
fimull
cld
pop
loop
inc
push
andl
popf
mov
fdivl
filds
js
fldcw
insb
stos
mov
out
pop
cmp
gs
int3
xchg
inc
int
cli
sbb
dec
ds
jne
mov
jae
imul
lods
cmc
mov
shll
adc
pop
loopne
adc
lret
jmp
mov
push
mov
sbb
gs
cmp
jmp
enter
mov
aas
add
testl
mov
cmp
add
fsubrl
mov
out
cmp
ret
or
test
push
add
add
add
xor
jae
jecxz
add
shl
mov
test
inc
aad
out
dec
aas
in
insb
lahf
aas
adc
ja
addb
mov
hlt
repnz
insl
cmp
jbe
fsubrs
inc
add
pushl
mov
mov
add
fidivl
call
sub
xor
or
xor
sbbb
mov
cmp
lret
and
shr
and
jnp
daa
sbb
pushf
add
jbe
xchg
jns
xchg
je
cmpsl
sbb
push
adc
mov
int3
fcomi
or
push
out
cli
pop
dec
roll
mov
fisubs
adc
cmp
cmp
adc
sub
fsubs
out
test
outsl
mov
xchg
mov
mov
dec
xor
mov
outsl
fwait
mov
mov
xchg
mov
sub
pusha
xchg
gs
add
loopne
xor
adc
or
push
shll
out
pop
pop
pushf
push
push
adc
add
add
aas
jno
rcr
cmp
xor
sub
xchg
pop
hlt
rol
adc
ret
movsl
inc
loop
jae
cmp
lcall
add
sub
aad
mov
out
data16
mov
fnstsw
jb
pcmpeqw
lods
cli
stos
xchg
cwtl
jae
inc
xor
rcrl
or
icebp
int
jo
les
sub
mov
pop
lahf
jb
sbb
and
push
dec
mov
inc
jne
jno
or
ficoml
lret
cltd
jae
add
test
hlt
mov
ret
dec
enter
inc
cmp
in
imul
cmp
jno
je
cmpsl
loope
mov
mov
cmp
lods
fstpt
push
cltd
inc
mov
mov
in
fwait
fs
fidivl
xchg
mov
cld
mov
cmp
int
xchg
adc
sbb
sbb
mov
int
sub
stos
push
lcall
hlt
mov
add
add
add
mov
sbb
fcmovnb
cmc
adc
xor
mov
orb
cmc
jg
push
iret
imul
stc
push
inc
cmp
push
add
xchg
and
addr16
add
xor
ss
in
mov
xchg
mov
pop
test
mov
mov
push
adc
ja
in
lods
push
out
add
cmpb
sbb
sahf
int
dec
repnz
xchg
icebp
adc
lret
pop
fstps
pop
add
push
push
in
out
sbbb
fsubp
xchg
sub
stos
mov
xchg
aas
clc
add
cmp
lea
mov
cmc
push
adc
and
lret
push
adc
mov
addb
and
je
mov
adc
pushf
movsl
jmp
pop
xor
pop
clc
leave
and
xchg
bound
imul
sti
cli
add
push
add
add
add
cmc
lahf
sbb
adc
mov
dec
jno
test
lret
jo
sub
in
js
inc
testb
stos
js
jnp
sbb
outsl
jno
pusha
shlb
pop
lret
imull
dec
mov
or
push
arpl
push
stos
xchg
lret
inc
xor
aam
test
lods
scas
xchg
adc
test
mov
or
es
and
cmpsl
xor
ret
mov
jo
add
out
out
insb
hlt
mov
or
add
jno
xor
xor
add
or
sbb
sub
lahf
dec
inc
jne
mov
push
fistl
movsl
jle
les
fisttpll
dec
test
sarl
dec
mov
ficoml
pop
push
push
lods
inc
out
and
aas
mov
decb
cmc
sbb
push
lret
dec
mov
outsb
js
dec
addr16
push
outsb
inc
arpl
add
add
fwait
cmp
stos
sarb
in
add
add
add
pop
mov
adc
cs
into
pop
adc
jns
pop
pop
out
jb
mov
imul
popf
aam
test
pop
sbb
mul
out
mov
mov
or
xor
jo
jmp
and
insb
inc
sarb
fisubl
popf
mov
inc
xlat
pop
push
pop
pushf
xor
jb
jb
cmc
mov
ss
mov
push
sbb
fcmovne
mov
jb
jmp
icebp
fwait
sti
popa
dec
js
sub
subb
daa
xlat
test
add
xchg
add
or
inc
ret
or
pop
mov
cmp
sub
push
pop
fsubrs
xor
mov
cltd
mov
jp
push
addb
popa
pop
push
sub
out
push
adc
out
arpl
repnz
sub
and
ja
push
xchg
or
add
inc
push
clc
mov
and
hlt
xor
sub
push
add
add
add
add
inc
ja
cmpsb
movsb
mov
sbb
iret
call
sub
std
es
fsubr
test
dec
cmp
in
sbb
gs
mov
jbe
xchg
cmp
sbb
add
jmp
inc
outsb
add
xchg
mov
cmp
fidivl
dec
or
addr16
gs
pushf
aaa
push
cmc
xchg
cmpsb
out
daa
or
or
loopne
xor
jne
lods
mov
loopne
and
mov
out
mov
popf
xor
fildl
cmp
insl
pop
addb
test
dec
adc
sahf
es
sbb
and
dec
lock
shll
aad
inc
mov
fldenv
push
add
lahf
inc
pop
xor
fistps
loope
jge
ds
sub
add
lods
sub
cmp
dec
clc
lcall
std
pop
or
cmpsb
gs
pop
aas
add
out
std
pop
scas
xchg
push
adc
out
mov
push
inc
or
in
push
add
add
add
fstl
inc
arpl
adc
jle
xchg
mov
lods
dec
aas
dec
dec
push
shll
jecxz
out
in
lds
inc
sub
fstpl
fisubs
xor
out
xor
sbb
xor
adc
add
shl
cmp
xlat
int
fldl
jo
pop
add
pop
mov
or
out
mov
pop
out
pop
xor
pop
xchg
mov
bound
lret
scas
aas
mov
jbe
inc
mov
stc
fiadds
mov
pop
fsts
test
dec
or
pop
cmp
xchg
in
nop
pop
jne
aad
jne
gs
xlat
push
fnstsw
lahf
ret
out
mov
xchg
xor
xchg
xor
lahf
rorb
arpl
lahf
bound
lcall
sbb
dec
xchg
repz
lods
and
xchg
xchg
pop
pop
xor
sti
repnz
mov
test
or
fdivs
xchg
lahf
dec
lock
add
add
add
dec
cmpsl
or
lret
pop
shlb
dec
dec
movsl
xorl
rolb
lock
popa
fmul
sahf
fcomps
adc
std
dec
orb
xor
inc
stos
adc
and
shr
test
mov
pop
mov
mov
iret
and
sahf
pop
xlat
loop
stos
daa
cld
adc
jnp
movsb
test
cmpsb
lahf
ss
out
push
sub
xchg
clc
aam
std
in
push
ret
data16
lahf
adc
push
out
stc
ja
inc
inc
mov
in
rorb
xor
mov
pushf
ja
in
inc
adc
push
jmp
and
add
ljmp
jle
test
movsb
les
pop
or
sub
fdivrp
loope
insl
pop
cmc
into
addl
in
ds
pusha
pop
jge
divl
nop
jmp
aam
adc
sarb
ljmp
add
mov
and
das
cmp
pusha
out
lock
push
hlt
pop
add
add
add
xchg
push
je
test
dec
std
stos
stc
outsb
push
pop
xchg
adc
xor
lods
xchg
popa
inc
jnp
int3
inc
xor
pop
call
sti
shl
inc
addb
jnp
mov
mov
ret
lahf
mov
ljmp
mov
cli
cmp
addr16
sbb
shlb
pop
adc
call
cmc
jo
test
out
push
sahf
cs
mov
jle
ljmp
xlat
cltd
int
mov
xchg
or
dec
sub
and
aam
lea
mov
dec
mov
jge
mov
xchg
jns
lea
sub
lcall
movsb
sub
inc
mov
jo
ljmp
push
mov
sbbb
lods
test
stc
sbb
ss
repz
es
mov
mov
push
dec
mov
push
and
fsubl
mov
ja
mov
and
ljmp
add
sahf
aaa
fisubrs
mov
test
mov
fiaddl
lds
mov
mov
inc
inc
mov
js
ljmp
mov
in
das
test
add
sbb
jae
lea
lcall
mov
out
fucom
cli
xor
jmp
cmpl
sub
cmpsb
scas
js
dec
or
dec
xchg
adc
lds
ret
jmp
dec
je
data16
cmp
sub
mov
jb
jl
out
inc
sub
or
or
adc
cmp
nop
fisubs
or
out
jne
jle
fld
cmpsb
rcr
inc
ja
mov
shll
fucomip
scas
mov
pop
xchg
stos
imul
pop
mov
mull
sbb
dec
jge
mov
test
lock
xlat
loope
lods
test
jae
arpl
add
add
xor
xlat
out
cld
idivb
cmp
pop
add
add
add
shlb
inc
int3
jg
or
cmp
out
push
push
hlt
and
xlat
add
addr16
fmull
std
aad
mov
push
jmp
ficomps
or
add
cwtl
imul
mov
adc
lahf
cmc
dec
cmc
shll
push
fs
jmp
mov
sub
or
mov
divl
loopne
sbb
sbb
leave
ja
or
or
in
ss
pop
jl
push
xchg
mov
into
jo
nop
push
cmpsl
inc
fwait
or
inc
adc
pop
scas
jmp
movsl
gs
jno
sbb
in
cmp
pop
hlt
pop
adc
mov
and
test
jo
es
jp
sbb
inc
jb
sbb
adc
jg
or
jle
push
in
fidivrl
jno
cmp
fsubl
add
add
mov
add
pop
adc
add
add
add
cmp
icebp
push
stc
cmp
ljmp
or
push
push
fimull
insl
mov
repz
or
or
pop
fidivrs
mov
lret
sub
inc
add
add
outsl
ficompl
dec
push
arpl
add
push
adc
push
insb
mov
rolb
insl
push
pop
jo
loopne
and
sbb
adcl
dec
subb
push
movsb
sbb
sbb
jl
cmc
sarb
cld
repz
fcompl
iret
leave
inc
mov
inc
mov
cmpsb
mov
ds
out
out
push
inc
das
stos
xor
sbb
pop
cli
int3
xor
push
ljmp
shll
dec
xchg
pop
cmp
inc
dec
ss
in
bound
add
jae
ja
sub
push
outsl
mov
fldcw
adc
sbb
ret
or
inc
push
out
into
push
push
inc
lahf
mov
add
add
add
add
adc
fsubrs
into
in
adc
dec
lods
sbb
sbb
mov
dec
cmp
jg
add
xchg
leave
adc
xchg
pop
aaa
xchg
lret
pop
mov
ret
cwtl
dec
jmp
or
inc
and
jle
movsl
rorb
fstpl
repnz
stos
push
inc
cwtl
fucomi
cltd
fcoms
or
flds
cvtps2pi
push
xor
dec
push
pop
push
mov
add
into
and
cmp
inc
mov
dec
sub
fsubs
fadds
jbe
and
scas
push
out
sub
scas
push
mov
test
sti
mov
arpl
loopne
popa
aam
jo
xrelease
mov
pop
fisttpl
aad
imul
dec
dec
push
movsb
stc
sbb
les
xchg
cmpsl
dec
xor
insb
adc
sbb
neg
push
pop
dec
fistps
pusha
jns
int
mov
inc
fidivs
pop
and
mov
jg
or
or
add
add
mov
or
sub
insl
xchg
inc
rclb
jl
loope
scas
xor
fisubs
fbld
addr16
rclb
aam
jbe
xchg
mov
dec
fs
jg
mov
push
out
cli
lods
adc
jge
mov
arpl
xor
rolb
inc
lret
xor
cltd
dec
sub
in
mov
and
mov
sub
pushw
shrl
fs
inc
ret
sahf
xor
jae
mov
testb
pushl
in
sub
cmp
pop
cmp
xor
sub
cmp
push
cmp
mov
mov
xchg
popf
sbb
push
mov
mov
xor
mov
sub
sarl
push
es
mov
lods
dec
jo
in
imul
scas
in
push
mov
shrl
add
add
lahf
pop
cmpsl
jne
mov
sti
in
mov
add
add
add
mov
icebp
aaa
adc
and
mov
mov
xchg
dec
decl
adc
pop
popf
add
xchg
daa
and
jae
inc
hlt
xor
cmpsl
cmpsb
jbe
aaa
jmp
dec
int3
mov
add
out
imul
push
lods
jae
shlb
sahf
jmp
inc
mov
pop
mov
dec
mov
pop
adc
or
or
xchg
jmp
cmp
insb
pushf
adc
add
scas
sbb
test
out
jg
imul
fdiv
and
jb
mov
mov
dec
cmp
lds
hlt
push
pop
jo
push
leave
ljmp
cmp
popl
jb
push
mov
pushf
scas
mov
mov
sub
nop
add
adc
into
pop
add
insb
cmp
add
idiv
jg
sub
flds
adc
add
add
add
xchg
mov
mov
pop
icebp
mov
fstpl
mov
stos
out
call
mov
cmpsl
add
pop
sub
mov
pop
cmpsl
mov
fildll
sub
adc
mov
mov
fcoms
xlat
adc
js
fisubrs
out
vsubps
inc
jo
and
jno
inc
mov
in
push
sbb
imul
jo
cmp
cli
cmp
and
sti
push
pop
jl
stos
jnp
imul
insb
das
and
xor
in
mov
pusha
cwtl
sbb
icebp
shlb
or
lock
cmp
pop
push
nop
lea
xchg
into
test
andl
bound
sarb
cmpsl
daa
adc
dec
fbld
lcall
fiadds
xchg
iret
fistpl
or
push
adc
testb
lods
mov
add
add
pop
mov
fstps
mov
adc
add
add
add
fwait
dec
push
popf
sub
adc
jo
subb
adc
mov
nop
mov
ja
sub
popa
pop
stos
out
shlb
add
jmp
dec
adc
int
repz
popf
ss
push
mov
cmpsb
scas
mov
movsl
hlt
pop
pop
dec
sbb
push
pushf
stos
sbb
sbb
jno
outsl
cwtl
call
fmuls
xor
push
daa
mov
fadd
mov
lcall
int
fs
adc
fdivl
lds
fisttpll
lahf
xor
or
push
inc
xchg
jnp
push
mov
mov
adcb
mov
push
mov
loopne
cmp
xchg
or
dec
jne
dec
loopne
xchg
push
pop
mov
addr16
mov
cmp
inc
or
push
leave
xor
notb
mov
lock
pop
fisttpll
add
repnz
movsb
jle
arpl
xor
add
add
jbe
cmp
loope
add
jo
pop
pop
sti
xchg
fisubl
dec
movsl
mov
repz
cmc
in
mov
and
cmp
push
out
nop
mov
shrl
repnz
jae
push
inc
mov
jno
ret
test
mov
push
jge,pt
mov
sbb
xor
inc
arpl
push
or
push
test
inc
xchg
int
aas
adc
pushl
clc
dec
and
mov
pop
add
cltd
ficompl
repz
je
ljmp
rcll
je
insb
repz
sub
mov
and
imul
xchg
jbe
and
fmuls
mov
aad
jge
pop
mov
mov
sbb
pop
jge
stc
lds
in
mov
insl
pop
or
nop
into
divb
into
repnz
or
mov
stos
sub
stos
out
jmp
sub
fwait
pop
mov
sbb
add
add
add
cli
stos
stos
mov
push
sbb
xorb
mov
xchg
mov
scas
ljmp
or
sbb
cmp
add
push
mov
pop
mov
inc
push
and
imul
sub
aaa
push
pop
push
aas
shr
ret
std
incb
out
bound
dec
out
add
dec
es
mov
dec
jno
shlb
stc
mov
sar
loope
rcr
mov
stc
adc
mov
cs
mov
clc
push
xchg
or
sub
fnstenv
adc
xlat
pop
lret
push
int3
imul
sub
mov
test
xchg
cmpsb
stos
jmp
add
mov
dec
and
cld
cmpsb
xchg
push
ret
adc
jge
jo
pop
aaa
or
or
cmp
inc
jl
and
mov
mov
jle
pop
mov
add
mov
shll
fnstenv
icebp
cmp
add
add
bnd
dec
ficoml
or
pop
imul
dec
out
aad
movsb
or
cmp
add
mov
daa
pop
jns
ja
clc
js
dec
int3
cld
xor
dec
push
or
adc
lahf
loopne
in
mov
js
loope
fldenv
movsl
jo
pushf
xchg
cltd
mov
cmp
lret
cmp
into
and
or
cltd
or
imul
addl
ret
xor
pop
sub
ds
cli
rcr
jge
sti
js
push
out
mov
out
fsubrs
xor
mov
mov
xchg
jnp
jmp
divl
lret
jno
ret
aad
das
rolb
mov
inc
push
aas
shl
mov
ds
adc
mov
lcall
cltd
push
mov
ret
push
push
stc
test
aad
mov
loop
bound
neg
addb
add
cld
je
jbe
jns
sbb
sbb
aam
and
add
add
add
push
xchg
sbbb
sbbl
pushf
xchg
or
into
push
pushf
arpl
xchg
mov
shll
xchg
test
pusha
movsb
sub
xchg
pop
push
mov
lahf
scas
push
xchg
jmp
xchg
into
mov
popa
dec
andb
shlb
jg
call
test
mov
mov
pop
mov
test
ja
sub
push
push
imul
js
test
or
cmp
les
popa
lret
inc
sahf
jne
mov
push
es
dec
imul
xchg
in
sbb
fcomps
in
addr16
dec
or
add
cmp
hlt
sub
cwtl
repnz
sub
jle
jg
popa
lds
mov
fdivrs
inc
sbb
out
int3
fs
push
repz
add
push
cltd
jmp
fildl
or
shll
add
add
add
sub
imul
pop
cli
lret
adcb
cmp
nop
call
push
ljmp
in
dec
aam
lods
in
add
stc
pop
pop
xchg
xchg
jno
mov
jo
cmp
in
mov
shrl
subb
xchg
fdiv
movl
xchg
decb
sbb
pop
add
pop
inc
loopne
in
iret
push
mov
adcl
push
outsl
mov
mov
cli
push
jnp
scas
jne,pt
daa
fstps
stos
js
mov
jp
aas
and
sbb
add
cmp
les
push
sti
cmpsb
pop
adc
shlb
pop
shlb
nop
cli
dec
sbbb
shll
mov
test
in
cli
les
push
loop
jmp
mov
cmpsb
rcll
mov
mov
push
jg
dec
xchg
dec
int
push
sub
add
add
add
popa
sbb
jmp
sbb
fidivl
lods
addb
xchg
push
cmpb
loopne
xchg
cmp
test
mov
sbb
pop
fsubs
jns
mov
test
loope
shrb
lahf
sbb
ljmp
stc
test
add
ret
push
xor
aas
test
std
xlat
pop
ja
inc
xor
fisttpl
testl
orb
xchg
jae
add
jno
lock
or
jg
mov
jbe
lret
filds
cltd
add
stos
xor
stos
cli
inc
fadds
les
sti
repnz
cmp
mov
lock
sub
jb
add
nop
sbb
sti
pop
jo
mov
sub
or
mov
cli
repz
into
sub
cmpsb
and
stc
hlt
fldenv
add
add
mov
fucomip
push
insb
xor
mov
imul
add
jnp
popf
es
out
jae
add
mov
in
adc
aam
stos
push
sub
lcall
dec
inc
mov
arpl
mov
xchg
add
enter
jl
inc
mov
out
mov
xor
sbb
nop
mov
mov
inc
inc
aad
outsb
sub
and
push
push
movsb
test
fsubrl
sbb
call
xchg
mov
imul
mov
ds
pop
push
lss
jns
jge
add
cmpb
sahf
or
dec
pop
jl
je
sbb
lds
jg
inc
in
repnz
or
jmp
roll
mov
test
push
xor
shll
dec
sti
adc
rcll
mov
ss
pop
mov
js
fwait
add
test
and
cmpb
push
push
out
shl
mov
mov
add
dec
out
iret
jmp
aas
in
push
adc
jmp
add
add
cmp
scas
xor
and
in
cmpsb
adc
scas
xor
mov
push
adc
pop
mov
or
repz
sbb
insb
and
xchg
adc
lock
jg
testb
mov
and
fsin
data16
sti
in
xor
into
popa
test
mov
sbb
push
jae
daa
dec
add
mov
adc
mov
imul
out
and
mul
mov
lods
dec
cwtl
fmul
pop
ret
xchg
pop
adc
jmp
loopne
adcb
aad
or
inc
lds
mov
adc
dec
in
lcall
mull
repz
gs
pop
imul
rcrl
push
pop
push
lea
ljmp
dec
in
mov
mov
mov
setbe
repz
out
push
rcll
rcrl
add
add
std
cmpsb
pop
dec
sub
sub
imul
add
add
sbb
jnp
jno
adc
mov
push
add
jecxz
xor
mov
pop
xchg
xor
repz
out
cmp
mov
push
icebp
imul
cmp
mov
add
aaa
test
sbb
cmp
aaa
and
fldt
jbe
stc
add
je
clc
pop
sub
add
mov
dec
lahf
push
cmp
mov
fwait
and
mov
pop
pop
adc
out
push
test
dec
add
addr16
popa
fidivs
sub
es
lret
xchg
xchg
xor
enter
lcall
xchg
xor
stc
jle
test
mov
inc
fisttpll
cltd
adc
and
mov
das
adc
sahf
sub
dec
add
add
mov
push
mov
or
cmpsb
pop
sub
dec
xchg
lret
pop
dec
and
mov
pop
adc
add
add
neg
std
sub
dec
mov
test
insb
add
add
add
push
faddl
or
xor
jecxz
sbb
mov
dec
cmpsb
int
fwait
ja
insb
mov
fsts
mov
sbbl
call
mov
and
mov
outsl
mov
mov
mov
iret
xchg
cmp
out
push
cmpb
fidivl
sarl
iret
xor
outsb
inc
int
shrb
mov
push
pop
sbb
je
fmul
sub
lods
out
mov
dec
leave
pop
imul
das
xor
inc
loopne
inc
and
jg
sub
jne
bound
hlt
dec
adc
repnz
xor
push
mov
adc
cmp
bound
push
sub
loopne
jmp
sub
adc
out
stc
pop
shrb
adc
jbe
mov
movsb
jecxz
lock
jg
jne
mov
bound
cmp
inc
jb
sbbb
push
subb
in
push
mov
sbb
add
add
add
xchg
sub
push
push
push
xchg
outsl
jl
pop
cmp
ds
call
sahf
adc
in
cmp
ficoms
scas
dec
cmp
loop
jbe
and
fldl
push
subb
test
negl
inc
jb
push
fstpt
dec
fdivrp
adc
mov
inc
aas
aam
dec
lcall
jns
push
push
mov
jge
cmc
jl
xor
push
mov
fisttps
scas
dec
sbb
inc
repnz
ret
cmp
imul
xchg
xor
or
shlb
mov
stos
cltd
mov
mov
add
inc
inc
gs
mov
or
jg
push
sub
jle
or
xor
jp
jns
mov
sbb
rolb
arpl
pop
loope
xchg
lcall
dec
cmpsb
lret
jp
inc
and
sti
xor
inc
cmp
xchg
add
add
add
ja
out
sbb
sub
outsb
add
add
add
mov
mov
int3
test
jl
unpckhps
popa
pop
rclb
push
mull
inc
mov
push
out
ds
je
loopne
push
data16
or
and
xlat
cmp
arpl
sub
add
dec
ds
dec
jno
call
jmp
jg
jle
popf
test
xchg
pop
jno
call
std
pop
and
out
jg
xchg
jecxz
add
mov
sahf
or
push
lods
adc
je
inc
pop
jne
adc
and
inc
mov
jae
addr16
aam
imul
sahf
int
ljmp
inc
mov
in
ljmp
clc
dec
mov
dec
mov
in
sub
or
lea
mov
test
mov
stc
test
xchg
adc
inc
xor
push
test
cmc
mov
dec
xchg
sbbb
les
out
xchg
cmp
add
sub
test
adc
add
add
sub
ja
mov
mov
add
add
mov
lods
js
rcll
dec
lock
jo
int
and
sub
and
push
mov
xor
enter
mov
fwait
push
pop
pop
int3
insl
push
outsb
stc
mov
fwait
jg
popa
aam
je
in
xor
fldenv
loopne
gs
dec
push
xchg
mov
stc
push
int
daa
gs
inc
sbb
inc
add
hlt
iret
testb
lods
xchg
push
dec
aaa
sbbl
cmpsl
xchg
mov
and
and
sarl
in
dec
scas
aad
test
sub
sbb
int
sbb
lods
mov
arpl
stos
and
sbb
aaa
dec
ljmp
lahf
sub
lret
xchg
into
fldt
mov
sbb
shlb
mov
popa
fsubrp
mov
lea
jg
sub
flds
outsl
sbb
add
add
cmp
jnp
outsl
cmpsb
loopne
outsl
aas
or
add
add
cmp
adc
xor
or
xchg
xor
or
jae
inc
xor
jmp
scas
xor
mov
xchg
mov
enter
mov
sub
in
lock
lcall
clc
aad
push
sub
gs
pushf
aam
cmp
sub
mov
mov
out
and
dec
mov
testl
jle
and
sbb
popf
cmp
mov
jmp
mov
loop
jo
inc
and
sbb
pop
dec
dec
xor
push
cmp
or
adc
pop
push
sbb
subb
add
inc
xchg
imul
mov
ss
inc
aas
mov
or
rcll
jnp
and
jecxz
das
mov
and
dec
lock
inc
cmp
push
fisubrs
pop
lret
or
fstps
push
clc
inc
fildl
add
add
cli
xchg
jle
push
je
push
dec
pop
push
jno
add
add
xchg
aam
pop
addr16
insb
je
pop
bound
or
cmpsb
or
popa
imull
push
mov
dec
imul
mov
in
sti
addr16
mov
pop
mov
movb
fmull
sarb
adc
outsb
xchg
push
xor
and
fsubrs
invd
imul
ret
pop
ficompl
lret
inc
xchg
mov
arpl
or
mov
js
push
push
cmp
cmp
mov
or
negb
mov
inc
adc
inc
faddl
pop
lock
inc
xor
cwtl
arpl
fxtract
or
arpl
cltd
mov
mov
dec
lret
nop
jp
jmp
sbb
cltd
cmp
push
push
cmp
dec
stos
and
mov
pop
or
xchg
xor
hlt
jae
fistl
nop
push
adc
jmp
jecxz
inc
aaa
dec
fwait
jnp
aad
sbb
in
adcb
add
add
pop
test
adc
push
stc
xchg
lea
mov
idivb
hlt
jle
mov
cltd
dec
fidivs
insl
jp
push
mov
call
mov
sub
mov
mov
jge
cmp
scas
xchg
adc
lcall
adc
and
fsubs
leave
inc
push
lods
dec
or
bound
push
add
xchg
dec
sbb
mov
or
inc
xor
out
xchg
cmpsb
mov
clc
in
cmpsl
mov
inc
xchg
mov
pop
jno
mov
faddp
jecxz
in
xchg
inc
mov
add
cmpsb
add
mov
xchg
xor
cli
int3
push
jl
std
xchg
idivl
shl
push
mov
cmp
xor
xlat
insl
xchg
rcl
mov
add
cs
movsl
or
ret
or
push
imul
add
add
std
mov
sub
add
add
add
mov
test
dec
mov
ds
xchg
push
stc
stc
cmc
rcrb
xchg
in
dec
jge
inc
nop
stos
mov
test
mov
ljmp
mov
push
mov
int3
rcll
add
icebp
dec
js
pushf
gs
daa
inc
rolb
and
xchg
daa
jbe
cwtl
adc
lahf
mov
mov
jecxz
icebp
mov
mov
mov
or
push
and
mov
lea
daa
sbb
out
es
push
lcall
idivb
sbb
sub
test
mul
lea
mov
sbb
ja
cmc
iret
vmread
js
dec
sbb
jno
xchg
movb
inc
outsl
and
xlat
cltd
xor
cmp
dec
jae
mov
dec
addr16
mov
jbe
in
fs
mov
mov
push
lret
jns
add
add
fstl
lret
sbb
add
add
add
mov
add
mov
imul
iret
push
mov
jae
xchg
in
cltd
ss
rcr
sub
lds
push
jg
adc
int
negl
push
adc
or
cld
cltd
outsl
xchg
jns
arpl
bound
aas
ret
pop
subb
cmp
mov
lret
loopne
loop
mov
xor
cs
cmpl
dec
sar
rolb
xchg
mov
stos
mov
cli
mov
shr
daa
fwait
outsl
into
or
pusha
stos
leave
and
push
cmp
or
into
xor
cwtl
jp
pop
adc
pop
ds
mov
mov
ja
pushf
jmp
mov
sbb
subb
addb
loopne
push
cmp
xor
js
in
mov
add
fldt
movsb
jmp
insl
imul
aaa
mov
sbb
cmpsb
inc
in
aas
mov
dec
mov
ret
inc
in
mov
mov
out
sub
sbb
jne
add
add
in
fs
adc
push
sub
cmp
outsl
call
out
sub
lods
inc
int3
psubusw
or
push
inc
cmp
mov
dec
in
add
jmp
jb
nop
push
rolb
cmp
outsb
jge
push
sbb
in
clc
push
pop
movsb
pop
xor
ja
jg
shrl
fdivs
mov
cmpsl
int
mull
subb
mov
aas
filds
ja
mov
icebp
mov
mov
cmpsl
sbb
ret
mov
jae
and
pop
adc
sbb
or
lods
test
repnz
ljmp
inc
fs
xor
jbe,pn
push
stos
aaa
ljmp
fwait
sbb
pusha
mov
ficompl
xchg
xchg
orl
mov
shrb
xor
jns
divl
in
sub
fs
add
add
sbb
aas
ss
hlt
push
sub
mov
xor
inc
fcoms
lods
push
add
cmpsb
inc
push
or
fstpl
sbb
pop
pop
ja
jns
push
pop
nop
xor
popf
xchg
aad
and
leave
dec
imul
jl
cmp
jmp
notb
imul
in
sub
int3
into
test
or
jbe
in
lret
adc
fiadds
push
push
mov
add
imul
aas
lret
loop
fsub
xor
out
adc
clc
cld
call
mov
jbe
add
lock
mov
mov
push
sti
dec
pushf
out
into
fdivrl
jge
mov
lret
mov
jne
test
aaa
jmp
mov
push
cmp
jp
jbe
clc
fisubs
mov
mov
lds
push
add
add
ret
mov
xor
add
cmp
inc
imul
outsl
xor
xchg
push
in
add
stc
fnsave
das
andl
in
repz
push
leave
cmp
and
xchg
into
nop
fiaddl
stos
xlat
inc
pop
hlt
test
dec
dec
sbb
enter
mov
push
adc
jo
mov
adc
arpl
mov
push
mov
std
stos
gs
addb
and
and
mov
mov
repnz
xchg
pop
push
rorb
jp
popf
nop
add
and
jmp
stos
jbe
mov
pop
les
in
jno
push
pop
mov
addr16
dec
int
pusha
mov
addr16
outsl
push
addr16
js
inc
les
xchg
test
xor
dec
mov
and
popa
cmp
cld
das
adc
mov
popa
mov
add
shlb
mov
shlb
popa
insb
js
add
add
inc
aas
dec
int3
insb
push
loope
popf
in
pushf
xor
push
mov
jl
cmpsl
lods
hlt
jecxz
mov
daa
shll
push
iret
fcmovu
sahf
push
pop
mov
lcall
daa
inc
dec
in
jl
dec
and
xchg
mov
add
push
jecxz
hlt
adcl
xchg
mov
lds
adc
xchg
sti
or
sti
lret
test
xchg
arpl
in
mov
dec
add
adc
xchg
fs
xchg
mov
cmp
cli
outsb
sub
inc
jne
cmpsb
sub
orb
or
stc
cmp
in
push
stos
push
sbb
outsl
mov
adc
jge
fisttpll
loop
mov
push
push
sbb
enter
addr16
dec
call
push
ret
mov
loop
stc
aas
in
xchg
inc
push
jbe
repnz
jo
out
out
pop
pop
jl
orl
mov
jb
stos
arpl
adc
push
xor
add
testl
iret
jo
add
add
add
mov
lods
xchg
pop
jno
scas
dec
jo
repz
push
repnz
stos
ja
add
sbb
adc
and
mov
lcall
mov
mov
test
out
imul
jmp
and
mov
inc
jl
lds
jecxz
xchg
lds
inc
and
icebp
sub
mov
test
in
cltd
ret
sbb
adc
inc
xchg
jmp
std
std
cmpl
add
pop
adc
dec
enter
or
ss
pop
sbb
data16
pop
xor
stos
clc
repz
orb
test
jbe
outsl
mov
fwait
add
jb
dec
mov
pop
sub
lret
mov
popa
xchg
push
inc
mov
test
add
divb
in
sahf
xor
cmp
in
in
or
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
inc
pusha
dec
lods
out
add
mov
ret
cltd
cmc
addl
ret
out
xchg
test
int3
dec
and
pop
xchg
sub
in
fwait
adc
ja
adc
or
jp
jmp
add
or
and
or
sub
fldenv
add
in
loop
loope
mov
test
ja
mov
call
int
inc
push
push
sub
and
inc
out
mov
push
sahf
inc
sahf
outsl
out
lcall
outsb
out
negl
stos
push
shlb
mov
shr
mov
sbb
dec
ficomps
dec
mov
jl
pop
test
fildl
popf
lret
adc
inc
mov
cltd
scas
jecxz
add
mov
lahf
fwait
lret
mov
cmp
dec
dec
mov
mov
push
popa
adc
ljmp
xlat
xchg
shll
and
add
cmpsb
push
sbb
mov
js
add
add
add
or
jno
or
idivb
andb
lret
jl
jo
gs
mov
cwtl
ret
push
test
in
loop
leave
push
xor
pusha
or
stos
js
int
imulb
pop
inc
and
jge
pop
xchg
push
sbb
enter
addr16
int
cltd
mov
ljmp
xor
sbb
pop
or
andb
push
insb
stos
jecxz
enter
orb
dec
xor
sahf
pop
adc
scas
int3
fs
cmc
cmpsl
dec
arpl
push
mov
lock
inc
jb
jns
in
mov
cli
jne
adc
jo
and
pushf
mov
ficompl
iret
mov
lea
jle
push
mov
xlat
movd
sbb
mull
push
mov
fcmovbe
inc
pop
xchg
jl
xlat
jg
pop
lea
add
repz
outsl
mov
sbb
xchg
cmpsl
add
add
add
cmp
cli
mov
and
and
jl
add
add
push
iret
in
xchg
pop
int3
out
insl
daa
sub
ret
add
inc
jl
ljmp
jge
cltd
enter
sti
js
popa
jbe
js
sub
inc
jb
and
sub
inc
aad
fisubs
in
lods
test
inc
mov
fmuls
scas
jae
call
js
mov
mov
cmp
mov
test
insl
xchg
clc
lds
jns
cmp
pop
pushf
ja
ret
loopne
scas
push
test
cmp
and
lret
cmc
xor
inc
sub
icebp
or
pop
mov
pop
loopne
lea
xor
cmp
mov
sbbw
test
pop
xchg
xlat
xchg
arpl
sub
sbb
inc
in
jnp
push
and
pop
mov
out
popw
xchg
arpl
dec
fisttpl
and
in
test
pop
jl
sub
mov
aam
rcll
lods
test
add
adc
add
add
test
lcall
rcrb
mov
add
add
popf
and
inc
inc
incb
and
mov
iret
fldcw
mov
push
mov
dec
ss
loope
sub
push
mov
push
data16
in
in
loop
push
add
mov
ret
out
mov
imull
adc
xlat
test
insb
push
lods
mov
int
cwtl
dec
xchg
insb
pop
cwtl
subl
fwait
je
pop
aaa
cmpsb
ret
inc
stos
incl
push
jle
inc
pop
adc
push
jg
fsubrl
pop
mov
and
ret
push
dec
mov
jge
jl
fprem1
dec
pop
rcr
call
cld
ljmp
scas
in
jns
jge
jl
push
aas
lret
cmp
xchg
cld
movsl
pop
mov
lret
movsb
xchg
sbb
inc
lretw
mov
lods
inc
jecxz
add
push
fistpll
loope
fistpll
popf
stos
emms
lret
xchg
imul
or
dec
cmp
testb
daa
mov
cmp
add
jecxz
sub
push
in
mov
xor
mov
inc
inc
movsb
adc
add
cmpsl
pushf
addl
es
sarl
or
xrelease
lds
xchg
xchg
out
mov
dec
mov
popa
into
jb
addl
pop
mul
jns
cli
fisttpl
sbb
hlt
dec
push
arpl
js
add
test
ret
xlat
sub
jecxz
aad
dec
cwtl
xchg
es
mov
std
xchg
adc
loop
call
sbb
mov
jae
ljmp
mov
fmul
stos
fnsave
test
ja
mov
push
std
and
inc
fucomp
dec
dec
imul
jo
cltd
pushf
or
lods
inc
les
popf
mov
jns
jne
mov
jb
adc
movsb
stc
dec
mov
mov
je
inc
mov
inc
scas
dec
scas
lcall
adc
sbb
dec
stos
jp
mov
add
add
nop
fiaddl
cmc
or
sub
pop
test
ficoms
orb
aaa
movsl
icebp
icebp
and
push
adc
cld
add
data16
push
repnz
push
enter
pop
inc
es
mov
rcll
xchg
jne
call
insl
push
jg
dec
pusha
in
mov
das
xchg
dec
test
cltd
pop
fdiv
icebp
arpl
scas
lock
js
xor
mov
outsb
data16
pusha
mov
xor
in
xchg
add
imul
aad
sbb
insl
int3
mov
out
mov
xor
bnd
in
stos
dec
imul
xchg
dec
fists
xor
lcall
jbe
push
loop
mov
subb
push
into
cld
mov
cmp
xlat
lods
rorb
ja
addl
add
jl
cs
idiv
jne
iret
pop
xchg
add
add
mov
popa
pop
xor
add
std
jg
or
add
cmpsb
inc
outsb
mov
jb
jae
xor
xchg
jb
fdivr
js
or
push
mov
sbb
add
mov
mov
mulps
fs
pop
jae
fcoms
mov
or
push
jle
sbb
mov
lea
int
orb
pop
stc
pop
mov
mov
inc
cld
rclb
jne
stos
sbb
push
dec
inc
loope
mov
outsb
jge
icebp
in
rolb
lcall
mov
fistpll
inc
cmp
and
xchg
dec
ret
ss
leave
fcomi
inc
addl
push
inc
dec
jmp
stos
movsl
rorb
call
dec
xchg
pop
sbb
inc
dec
mov
jns
push
dec
mov
mov
fldt
repz
push
xchg
xlat
and
xchg
xchg
pushl
sub
testl
add
add
insb
jp
cli
jb
mov
mov
es
dec
cltd
pop
out
push
call
rcll
jp
ret
in
stos
xchg
lret
mov
sub
sti
mov
sub
jnp
dec
mov
cmc
and
ret
dec
or
add
outsb
pop
fistps
cld
into
xchg
call
rolb
andl
das
or
add
and
inc
rolb
mov
jnp
fisttpl
imul
adc
dec
ret
js
cmp
push
jno
jo
mov
test
loope
es
pop
dec
sub
cmp
add
dec
mov
cmpsb
jno
and
mov
push
xor
ffreep
pushf
or
scas
pop
scas
sti
leave
movhps
je
xchg
into
inc
jmp
add
aad
test
xor
xor
movsl
jl
push
enter
push
int3
pop
push
sub
aad
stos
mov
or
mov
lret
mov
jge
std
sti
iret
ss
push
jno
sub
ret
add
add
add
ss
sub
addr16
mov
sbb
adc
and
inc
and
cmpl
fnstsw
or
shl
outsb
jg
idiv
jnp
lea
cmc
fst
les
pop
int
pop
sub
or
sahf
cltd
dec
lret
movsl
adc
xchg
repnz
test
adc
or
fcomp
cmp
push
enter
pusha
or
cltd
sbb
jle
out
icebp
test
mov
outsb
out
mov
dec
mov
imul
mov
xor
push
rol
sub
jb
fildll
scas
ror
fistpl
icebp
dec
idivl
mov
fucomi
insl
mov
ficomps
mov
adc
cmp
loope
pop
and
mov
aam
add
js
testl
loope
sbbb
xor
or
mov
mov
pop
adc
fistl
and
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
mulb
add
add
fwait
sbb
call
mov
pop
xor
dec
pop
xchg
sub
fists
mov
aaa
jmp
adc
jl
lods
jbe
dec
pop
insb
mov
mov
mov
cmpsb
mov
sbb
jb
jno
lcall
pop
jl
adc
mov
aam
mov
jl
ficoms
jecxz
mov
xor
sbb
sbb
fildl
mov
out
mov
negl
push
adc
xchg
xchg
movsl
data16
das
push
popf
fdivl
push
jo
mov
cmpsl
add
rcr
mov
out
pop
inc
sar
pop
divb
xor
sti
inc
mov
sbb
add
pop
insl
mov
sbb
xor
punpckldq
ja
xchg
adc
fildl
mov
mov
jmp
test
pop
cmpsb
shrl
sbb
loopne
arpl
dec
cli
add
sub
xor
popa
mov
mov
mov
test
add
add
repz
mov
mov
inc
or
sbb
mov
push
xorb
stos
push
or
xchg
shlb
out
jl
pop
in
mov
mov
add
inc
xchg
add
rcl
js
xchg
inc
cmp
dec
insl
in
mov
mov
xchg
or
popf
push
into
in
fnstcw
push
dec
fcomi
or
mov
or
or
iret
xor
mov
arpl
inc
xchg
jns
mov
mov
and
andb
pop
out
push
out
in
cwtl
jmp
fwait
inc
flds
cmp
sahf
mov
fs
cltd
pop
mov
cmp
jno
or
push
mov
aad
int3
movsb
sbb
and
rcrb
test
enter
xorl
lret
fs
addr16
fldl
cmpsl
hlt
clc
fistps
mov
sbb
cld
outsb
dec
cmp
push
inc
pop
dec
sub
mov
pop
cli
and
out
ljmp
lock
xchg
mov
mov
add
add
leave
cwtl
xchg
mov
add
out
andb
add
jo
incl
aas
dec
test
scas
push
sbb
imul
and
dec
cltd
gs
out
orb
cs
shll
or
enter
mov
aam
out
cmp
das
mov
cmp
sub
sbb
rolb
mov
push
xorl
inc
lods
pop
fcomi
dec
shlb
dec
jmp
mov
mov
add
mov
adc
inc
mov
aas
mov
bound
aad
or
in
adc
pop
adc
fidivrs
dec
add
ljmp
mov
mov
outsl
cmpsl
shll
jge
ss
jno
rcrl
mov
jo
lret
lds
add
arpl
jnp
sbb
push
xor
xchg
add
add
xlat
mov
gs
jb
lods
push
imul
push
cmp
xchg
jle
out
cmp
xor
mov
inc
je
and
jge
ss
pop
call
mov
insb
cmp
push
lret
je
jmp
leave
js
jp
lods
into
fidivrs
jbe
add
jno
inc
push
inc
inc
mov
sbb
push
or
fstps
add
sub
rcrb
imul
pushf
cmp
dec
ficoml
xor
arpl
shl
aaa
adc
dec
shl
dec
mov
aas
lcall
push
fcoml
lods
pusha
popa
imul
bound
dec
stos
jns
mov
jno
xchg
cs
push
lahf
jnp
scas
adc
and
out
es
push
xchg
mov
movsb
pop
sbb
sbb
int3
shll
mov
loope
mov
or
jbe
dec
lods
push
or
arpl
push
aas
or
mov
xor
in
repnz
add
add
add
add
jp
popa
out
inc
push
xchg
outsl
or
gs
dec
dec
push
movsb
push
mov
dec
cmp
stos
mov
mov
call
dec
ret
or
test
mov
jns
orl
insb
sub
jge
leave
push
sub
mov
shlb
jnp
push
loope
xchg
mov
mov
or
rorb
inc
sub
fwait
mov
les
fcmovnb
push
pop
add
insl
arpl
cmp
xchg
pop
js
sub
inc
nop
cmpsl
dec
push
js
aad
pushf
call
dec
insl
pusha
dec
cli
add
cmp
cmp
sub
jbe
or
ja
lds
leave
movsl
movsb
mov
fs
cmp
or
psubw
lcall
out
out
add
in
cmp
pop
dec
xor
inc
or
pop
sub
add
insb
fidivl
bound
sub
lods
mov
add
add
mov
insl
add
popf
repnz
jp
sahf
out
nop
xchg
inc
dec
aaa
push
into
call
push
mov
mov
out
shll
scas
scas
mov
mov
or
mov
loope
pop
fwait
and
fdivrl
cltd
adc
adc
push
pop
out
movsl
lret
dec
fistpl
mov
push
leave
and
lcall
add
repz
mov
dec
jne
pop
pop
mov
xor
xchg
gs
xchg
cmpl
xor
or
push
hlt
imul
pop
inc
push
pusha
test
jb
mov
pop
adc
push
push
je
das
lock
mov
imul
xchg
xchg
nop
cs
stos
les
jecxz
jbe
mov
jnp
fcomps
leave
incl
int3
or
hlt
mov
sub
das
std
ss
fnstenv
insl
mov
and
jecxz
mov
lods
cmc
push
add
add
cmp
mov
jns
jmp
add
add
add
in
sub
into
and
das
push
aas
cmc
xor
jmp
sbb
cmp
icebp
push
insl
adc
jmp
je
jl
push
fistl
enter
mov
loop
adc
or
ret
loope
lods
add
out
je
mov
pop
xchg
mov
or
in
add
sub
insl
inc
popf
fwait
xchg
jge
mov
das
jp
xchg
push
push
dec
cmpsb
or
shlb
ret
xchg
je
lret
sbb
sahf
push
rep
mov
mov
cmp
mov
and
out
out
pop
sbb
stos
rorl
les
loop
repz
mov
sbb
imul
or
pop
xchg
mov
adc
jnp
lahf
adc
pop
movsb
push
shrl
out
lea
cmc
cmp
fldt
out
hlt
int3
nop
dec
lods
mov
xchg
inc
pop
cmp
adc
outsl
ds
jl
push
in
add
add
int
fstp
iret
push
cmpsb
fadd
dec
inc
xor
add
add
loope
inc
insb
int
in
mov
js
pushf
or
jo
test
sbb
dec
test
or
or
imul
mov
mov
jp
xchg
arpl
xor
movsb
insl
push
js
dec
jmp
jl
and
stc
dec
sub
xor
xchg
cwtl
lret
add
dec
push
dec
adc
fmull
and
fcomps
add
push
dec
dec
jo
stc
mov
jb
and
popa
push
ljmp
shrl
lcall
in
iret
outsb
or
lret
out
insl
xchg
jmp
jae
jl
pop
mov
xchg
imul
adc
xchg
repz
xchg
adc
mov
add
jg
xchg
scas
call
decb
mov
xor
sbb
sbb
or
arpl
jmp
lods
and
cmp
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
cmp
jmp
sahf
lea
jecxz
jl
xor
icebp
shll
mov
stos
mov
repz
xor
add
outsb
or
mov
jecxz
jbe
mov
stos
or
ss
sub
filds
cmpsl
pop
std
cmp
push
inc
stc
cmp
fidivrs
xor
fcmovb
hlt
fdivl
push
clc
shrb
mov
pop
sub
pop
in
leave
dec
mov
ficoms
in
aad
jmp
int
out
lds
dec
or
test
imul
in
sar
mov
mov
add
push
sub
push
in
push
movaps
xor
pop
adc
movb
stos
jmp
int3
dec
mov
push
xchg
mov
insb
dec
pop
inc
das
call
or
push
inc
rcrl
or
pop
cs
xchg
in
add
xor
xchg
pop
psadbw
lret
lock
js
add
add
lods
les
jnp
mov
icebp
mov
fidivrl
add
rorl
rorl
das
push
xor
movsb
inc
fsubrl
into
xor
sub
popa
xchg
or
fbld
scas
test
std
mov
mov
test
mov
loope
mov
fs
shlb
sbb
rcll
test
into
jo
out
leave
jl
pop
test
setae
jno
mov
xor
pop
shlb
scas
imul
aam
outsb
mov
or
add
sbb
mov
or
sahf
popl
pusha
sub
sub
ja
pop
loope
push
mov
adc
in
mov
xchg
mov
cmp
mov
mov
repz
in
jne
lret
out
inc
xor
jns
es
and
xchg
jno
sub
mov
lods
idiv
bound
ret
inc
or
test
fcomps
add
test
add
add
add
cli
enter
xor
mov
xchg
push
fcmovb
orb
push
movsl
out
mov
sbb
cmp
add
decb
cmc
ds
mov
xchg
cmpsb
cmp
dec
dec
sub
rol
outsl
xor
cmp
xlat
out
xor
mov
sub
jmp
in
loop
inc
lods
cmp
pop
push
cld
dec
shr
icebp
inc
mov
jp
jnp
pop
fistps
popa
jmp
add
imul
inc
xchg
inc
cmp
xchg
arpl
push
add
out
roll
xlat
xlat
ror
mov
push
or
imul
jle
add
push
std
into
fcomps
ret
enter
add
sti
aas
jb
or
inc
nop
decl
std
mov
sti
movsb
repnz
and
hlt
js
adc
jecxz
cmp
adc
adc
ljmp
dec
mov
movsl
add
add
add
add
rorl
sahf
sub
or
lock
push
xchg
in
leave
outsb
mov
dec
lods
or
les
push
pop
loop
adc
mov
mov
rcrl
std
mov
pop
pop
dec
mov
scas
mov
lret
jns
xor
sti
sbb
push
sahf
into
push
or
add
push
adc
test
inc
or
outsl
cld
and
js
jmp
push
pop
mov
imul
lds
sub
scas
gs
cltd
ret
sbbl
call
mov
and
loope
jmp
sbb
shlb
lds
push
loope
push
push
out
jg
mov
add
in
nop
arpl
cmc
cmp
add
xor
test
xchg
xchg
call
jb
test
push
pop
mov
repz
mov
inc
ret
and
cmpsl
dec
ficoml
mov
pop
aaa
shlb
cmc
div
testl
dec
enter
add
add
jl
cmc
leave
push
adc
das
xchg
lret
push
int3
jnp
mov
mov
jae
jb
and
pop
pushf
fstl
mov
push
mov
and
push
fcomip
sbb
sbb
add
test
fstpt
lds
hlt
ja
les
iret
aad
adc
sti
mov
dec
mov
mov
hlt
out
add
ret
pusha
pop
inc
adc
xchg
cmp
fiadds
js
stos
les
and
fxam
in
adc
lahf
stos
push
std
dec
test
outsb
in
fnstenv
sbb
mov
enter
mov
or
sahf
gs
push
push
int
sbb
mov
cld
mov
shrl
mov
jle
jmp
rcrb
inc
pushf
test
cmp
dec
shll
out
jne
dec
jbe
mov
cld
dec
jmp
inc
pop
push
nop
push
sahf
rcr
pop
adcb
inc
ret
int3
nop
add
add
add
int
inc
sub
xchg
inc
add
and
jae
orl
pop
push
push
lahf
push
js
aaa
cmp
pop
testb
fwait
mov
dec
cmp
cmp
jl
jg
shll
mov
pop
nop
stos
sub
lea
push
mov
xchg
jno
mov
sahf
sbb
cli
lahf
xchg
rcr
mov
jbe
icebp
jge
pop
dec
adc
inc
xor
movsb
nop
or
inc
dec
mov
ret
fsubrl
xchg
into
sub
xchg
xor
cmp
or
push
or
daa
ja
bound
stc
popl
dec
arpl
sarb
lea
xor
cltd
xor
enter
and
push
sbb
inc
jo
inc
push
mov
aad
push
rcl
cmp
jne
push
cltd
ficomps
adc
out
push
inc
out
add
cmpsb
jl
add
add
arpl
cmpsb
jcxz
fimull
rclb
add
addb
mov
leave
pop
pop
mov
lock
adc
mov
stc
adc
and
lods
push
lods
pcmpgtb
sub
add
ret
outsb
into
je
pop
pushf
mov
out
mov
movsb
mov
dec
push
add
pop
pop
mov
sub
and
pop
sbb
hlt
mov
sbb
push
and
sub
add
lret
pushf
push
mov
adc
mov
jne
or
push
les
mov
icebp
lea
rcrl
xchg
xor
in
dec
push
mul
or
sbb
adc
bound
cmpl
cmpsl
cld
test
fisttpl
dec
repz
push
push
push
lcall
mov
lds
fisttpll
dec
inc
cwtl
pop
movsb
cmpl
dec
xlat
push
mov
int3
cmpsl
sbb
ret
jb
inc
inc
dec
mov
push
cmc
mov
cmp
ror
gs
mov
add
out
clc
jnp
jg
in
cli
enter
dec
ljmp
add
add
dec
movsl
cs
pop
or
mov
sub
lcall
out
dec
and
sub
fimull
icebp
xchg
sahf
xlat
xchg
test
mov
dec
daa
sbb
lret
jecxz
add
into
or
dec
sub
dec
mov
fistpll
cmp
das
and
stc
std
and
repz
mov
or
lahf
pop
std
fwait
imul
jae
mov
pop
sub
lods
sbb
imul
push
imul
cmpsl
movsl
call
loope
movsb
pop
call
xor
jecxz
sbb
dec
xchg
iret
popa
add
pop
push
xor
mov
xor
daa
popf
lods
stos
rolb
pop
stos
test
in
fidivrl
sub
inc
adc
push
ret
xor
lds
test
mov
mov
loopne
addr16
ljmp
outsl
mov
jp
mov
jo
add
add
lods
faddl
fbstp
cld
gs
mov
fcoms
add
pop
outsb
gs
add
or
sbb
inc
and
aaa
add
mov
sbb
and
push
iret
in
push
stos
cmp
dec
arpl
sub
mov
mov
and
jg,pn
mov
jp
in
bound
repnz
test
lea
lcall
cltd
loopne
hlt
pop
xchg
ds
hlt
loop
inc
jmp
inc
sub
mov
stos
cs
dec
jecxz
ss
fmuls
fs
push
mov
inc
frstor
mov
rclb
add
leave
adc
xor
inc
xchg
adc
call
bound
pusha
add
ljmp
adc
lds
rcrb
adc
jg
mov
xchg
sub
mov
xchg
outsl
mov
int3
mov
iret
adc
les
mov
out
xor
add
pop
aam
dec
pop
jl
sar
std
jle
pop
popf
scas
xchg
out
mov
xchg
add
add
add
dec
pop
mov
inc
sbb
lods
rcl
gs
jb
mov
int
stc
pop
mov
outsl
and
hlt
sub
add
imul
arpl
add
jne
add
shlb
fimull
jl
insl
aad
bound
insl
lcall
iret
jecxz
je
aam
test
dec
cs
inc
ficoml
clc
and
test
ss
icebp
popf
test
mov
mov
add
int
sub
inc
xor
lahf
arpl
outsl
pop
gs
rcrb
stc
jle
es
xchg
cmpsl
gs
cmp
cmpsb
mov
pop
dec
cmp
xor
bound
pop
mov
push
lods
sub
pop
jle
in
jb
xchg
stos
jo
loope
pushf
or
jno
aas
push
popa
sahf
add
jnp
lcall
adc
addr16
jae
add
inc
mov
and
push
dec
movsl
inc
jne
cmp
cmp
in
in
cmp
loopne
add
add
add
movsl
sbb
out
inc
mov
jo
pop
jl
pop
inc
stos
add
adc
sbb
sbb
jecxz
xchg
adc
addr16
int3
pop
pop
push
xor
and
inc
rorb
or
cltd
dec
int
ss
je
push
popf
lret
pop
push
arpl
dec
mov
adc
adcb
jl
pop
pop
insl
jp
mov
or
mov
sti
out
and
fmul
lock
testl
outsl
mov
jp
cmp
cmp
lret
out
arpl
dec
mov
xchg
data16
mov
xchg
ss
mov
sti
mov
lret
xor
jo
add
and
into
call
aas
cwtl
out
insl
dec
mov
pop
cmpsl
dec
hlt
pop
icebp
cmp
inc
loope
push
cld
add
mov
xchg
movsl
roll
cmp
outsb
cmp
imul
sbb
xchg
sub
fwait
and
popa
mov
xorl
in
add
add
add
jne
mov
in
sub
repz
dec
jnp
xchg
out
cmc
fwait
dec
nop
jge
sub
movb
ret
or
xchg
mov
fistps
ljmp
mov
jnp
inc
daa
dec
inc
sub
out
bound
enter
icebp
pop
sbb
or
push
outsb
pop
mov
push
adcl
sub
pop
push
rcrb
bound
or
adc
cmpsb
mov
lea
rcrb
out
and
aam
insl
pusha
out
sub
mov
repz
in
mov
mov
dec
in
inc
test
push
mov
loope
pop
lods
sub
or
fwait
fadd
int
addl
lods
fmull
in
or
mov
ret
jae
dec
aaa
cmp
dec
inc
ljmp
or
lock
js
popa
movsl
mov
lret
arpl
xchg
aas
jb
jmp
roll
add
add
dec
std
out
xlat
aas
dec
sbb
or
call
add
add
movsl
inc
add
loopne
dec
mov
push
int
adc
outsb
icebp
inc
pop
andl
push
fs
loopne
adc
pusha
mov
outsb
push
xchg
fwait
cmpsb
fisttps
sub
and
xchg
es
or
or
lods
iret
test
add
push
in
sbb
test
jle
lods
fstps
addr16
xchg
bnd
xor
scas
cmpsb
fwait
sub
out
mov
test
adc
shlb
sahf
hlt
xchg
dec
in
popf
outsb
test
xchg
sarl
subl
in
gs
mov
mul
or
xchg
aas
in
add
jg
cmp
cmp
fwait
movsl
mov
or
jg
iret
xchg
popa
ret
and
jle
aad
push
pop
das
mov
or
push
xor
lret
movsl
adc
sbbl
cmpsb
jecxz
sub
movsb
inc
jmp
lcall
imul
outsl
vmwrite
imul
cwtl
add
add
add
push
cmp
sbb
divl
and
lcall
xchg
fdivs
in
lods
xchg
inc
ret
cld
and
rol
and
pop
bound
xchg
shlb
push
rcll
popf
fnsave
cmp
sub
mov
mov
test
pop
and
xor
loope
repnz
cmp
hlt
jae
mov
mov
jp
fwait
jnp
inc
xor
shll
jae
mov
sbb
jbe
aaa
inc
into
mov
adcl
outsl
pop
sti
ljmp
add
xchg
mov
sahf
ss
cs
lock
ret
shrb
jo
sub
aam
push
lods
loopne
jp
xchg
repz
jo
pop
jge
jo
and
hlt
xchg
aad
mov
push
jmp
incl
inc
push
sub
sub
in
dec
addr16
shrb
add
adc
sbbl
popl
or
add
add
icebp
fsts
lcall
bound
xor
cmc
lods
dec
out
jg
outsl
dec
addr16
xchg
jbe
jmp
jp
mov
add
inc
lcall
data16
dec
repnz
shrl
insl
and
dec
and
mov
cmp
inc
aam
scas
pop
enter
adc
lret
stos
dec
cwtl
xor
push
inc
dec
lcall
push
sbb
mov
fwait
popf
test
push
in
daa
adc
fidivs
push
clc
or
mov
mov
test
jae
leave
pop
mov
imul
push
xchg
mov
xchg
aas
repnz
sub
mov
mov
push
ficoms
push
add
mov
or
xor
imul
cmpsb
jo
mov
xor
les
mov
xlat
pop
les
nop
test
rclb
int
pushf
adc
sbb
bnd
mov
imul
movsb
and
minps
add
add
inc
and
pop
push
fcompl
ds
jns
dec
sbb
ss
add
int
outsl
jne
hlt
xchg
adc
mov
pop
cwtl
fisttps
jp
lods
aam
aam
cli
or
dec
dec
mov
cld
or
jb
pop
add
dec
ret
mov
and
dec
push
outsb
cmpsl
xchg
test
inc
enter
mov
inc
std
or
lds
push
mov
loopne
push
test
test
or
int3
imul
lds
and
and
ss
push
fdivrp
and
add
mov
adc
mov
xchg
cld
push
pop
movsl
and
sbb
xchg
in
inc
sub
or
mov
and
xchg
js
loop
cmp
push
std
pop
cmpb
mov
mov
push
push
pop
imul
ret
mov
aad
arpl
cmp
pop
lds
mov
aam
popa
testb
add
mov
jge
jg
ljmp
in
lahf
mov
out
mov
add
add
and
out
push
loop
fld
pop
add
stc
push
icebp
dec
inc
mov
pop
pop
stos
test
lock
je
leave
rolb
sub
imul
xchg
and
lcall
and
cwtl
dec
negl
sbb
mov
mov
jl
or
lods
pusha
jge
and
mov
adc
insb
les
in
mov
je
ret
imul
cmc
rcll
iret
imul
stos
mov
sti
test
jp
popf
adc
cmp
movsl
inc
fnstsw
add
mov
cmp
dec
mov
out
out
jmp
sbb
jp
outsl
cwtl
mov
popf
imul
mov
mov
cmpsb
leave
dec
mov
orb
mov
iret
outsl
sub
pushf
push
jp
and
daa
or
enter
cmp
push
xchg
subl
sbb
lcall
push
add
ja
out
inc
sub
or
or
stc
cld
pushf
add
add
add
int
jecxz
sarb
in
xchg
add
pop
mov
cs
imul
stos
pop
cmp
in
inc
les
aas
and
aaa
xchg
cmp
rcl
cltd
xor
je
mov
sar
loop
scas
fsubl
rcrl
sbb
or
xlat
inc
adc
scas
sub
arpl
jne
dec
jae
jae
or
ja
scas
xchg
aaa
xchg
xchg
das
in
arpl
mov
sbb
lahf
push
mov
or
sbb
inc
cmpsb
xchg
mov
fists
insl
or
cli
sbb
dec
cmp
jmp
int3
out
pop
push
inc
push
mov
divl
ret
dec
sub
jbe
movsl
add
push
push
inc
or
add
sub
mov
and
xchg
mov
je
into
insl
lea
sti
sbb
inc
and
mov
fnstenv
mov
jmp
add
pusha
test
mov
cld
mov
add
add
cmp
sbbl
sbb
add
and
pop
sbb
sbb
xchg
test
add
sbb
and
dec
fcmovnu
fs
inc
sahf
mov
test
insb
inc
arpl
test
jg
mov
daa
lret
lock
in
xchg
mov
dec
or
es
mov
sahf
pushf
push
xchg
int3
sub
jmp
or
mov
or
sub
movsl
cmpsl
and
clc
inc
in
pop
push
sbb
fmuls
add
mov
out
inc
aas
jmp
popa
mov
push
in
push
inc
xchg
xlat
jg
lods
adc
mov
das
shlb
adcb
adc
jg
sarl
inc
jp
shll
mov
and
inc
popf
or
jnp
call
mov
ss
xchg
fldenv
imul
or
jecxz
je
add
add
mov
repz
repz
nop
dec
xchg
add
add
add
add
adc
stc
pushf
decb
mov
lods
fstl
test
inc
xor
and
mov
or
out
sahf
or
lds
push
adc
jb
push
mov
fiaddl
fsubs
fimuls
mov
mov
dec
unpcklps
xchg
xor
push
lahf
dec
xchg
dec
mov
inc
dec
fdivs
jae
sahf
jmp
cmp
mov
inc
inc
cmpsl
subl
xor
nop
jecxz
scas
ljmp
fs
fstpl
sahf
in
jg
jnp
push
sub
notb
jp
xor
inc
incl
mov
add
call
hlt
scas
orb
sbb
cli
loopne
fimuls
and
xchg
lock
das
int3
jnp
xchg
bound
cmpsl
cmp
inc
mov
xor
cmp
mov
jmp
ljmp
cmp
lods
movsb
mov
mov
inc
inc
add
mov
add
int3
and
sti
scas
sahf
lds
cmc
sub
mov
enter
mov
movsl
sti
cmp
ljmp
mov
jbe
stos
stos
push
popf
mov
pop
int3
stos
sahf
aaa
jo
sar
cmp
popf
loopne
cmp
fxch
hlt
adc
and
cwtl
pusha
sbb
mov
push
cs
pusha
pop
push
xor
shlb
js
jno
xor
sbb
fisubrl
and
das
leave
repz
cwtl
sbb
out
cmc
out
out
jp
test
movsb
subl
jno
shl
xchg
cmp
xor
std
inc
call
or
mov
fsubrl
dec
mov
daa
aam
or
mov
mov
daa
daa
dec
lea
in
in
or
hlt
jle
pop
lock
addb
inc
pushf
inc
rcl
sbb
je
jmp
int
xchg
xchg
push
sarl
or
sbb
inc
mov
add
add
add
cmp
addr16
movsl
and
jge
cltd
flds
decb
ljmp
int
daa
shll
insb
notb
push
push
jl
int
inc
jl
push
outsl
adc
ja
orl
addl
stos
fs
repz
in
pushf
out
scas
add
add
mov
rcrb
pop
xchg
cld
mov
fs
inc
pop
push
xchg
sbb
loop
fidivs
mov
clc
mov
inc
leave
sbbb
das
jnp
scas
dec
pop
pop
mov
sub
fs
adc
inc
jmp
in
xor
mov
pop
rcrb
xchg
xor
mov
cmpsl
xchg
fwait
pop
fsubrp
dec
mov
and
jl
scas
lds
lret
mov
jp
push
in
repz
sbb
dec
push
push
mov
xchg
imul
add
packssdw
imul
out
jl
mov
sahf
shrl
lds
add
add
inc
fdivl
push
dec
mov
adc
add
mov
aad
mov
pop
fdivp
pop
incb
out
test
stc
mov
cmp
call
jmp
mov
dec
rcrl
xor
sub
cmpsl
out
jo
orps
cs
roll
fbstp
pop
mov
loop
rcr
push
jbe
call
sbb
imul
cltd
sti
sbbb
fs
and
mov
jge
in
mov
inc
and
mov
push
mov
mov
push
jb
pop
mov
lret
lods
movsl
in
push
pop
sub
cmp
rcrl
push
mov
sbb
dec
push
bound
mov
or
push
lods
divb
sbb
js
bndldx
iret
bound
mov
jl
out
gs
out
cwtl
jmp
mov
cwtl
or
adc
iret
xchg
mov
and
sub
mov
push
loopne
xor
xor
jmp
adc
mov
sbb
into
shll
add
js
xlat
inc
cmp
popf
cld
mov
pop
stos
in
adc
push
je
sbb
cmp
xchg
orl
mov
fiadds
sahf
arpl
aas
inc
icebp
xchg
pop
mov
xor
outsl
xchg
jge
enter
ss
pop
xor
aas
push
adc
xchg
in
sar
je
mov
xor
js
and
rorl
ror
xor
hlt
dec
add
enter
mov
push
jne
or
and
pop
stos
sbb
fstl
shlb
jae
fsubs
mov
mov
sbb
pop
in
aad
cmp
mov
bound
insl
pop
fsubl
fildll
cmp
mov
cmp
fdivrs
scas
adc
je
repz
out
fiadds
dec
out
andb
push
dec
stc
pop
lret
bound
negl
sbb
add
stos
hlt
jmp
cmp
jbe
sbb
mov
add
add
sbb
jo
push
or
mov
dec
and
insl
pop
inc
icebp
and
and
dec
sub
or
xchg
je
nop
mov
call
inc
lret
pop
popa
sub
pop
mov
xor
cld
push
jns
lret
sbb
inc
hlt
or
fnstsw
jge
jo
mov
add
xchg
addb
sub
into
lods
inc
aam
movsb
mul
inc
pop
mov
jmp
pushf
sbb
stos
mov
test
ret
adc
iret
jmp
push
xchg
sbb
or
cmp
je
or
push
ffreep
adc
mov
shl
lcall
add
jmp
jae
pop
aaa
jo
fisubrs
addb
imul
std
push
test
pushf
or
mov
xor
pushl
out
mov
and
dec
int3
push
pushf
push
jmp
cld
lret
sbb
add
add
push
nop
out
xlat
out
jg
in
xor
fxtract
stos
shrl
movsl
add
add
add
mov
enter
jmp
mov
pop
leave
mov
lds
pop
add
outsb
xor
ret
mov
jae
jecxz
es
fstpl
xchg
enter
daa
ficomps
pop
movsl
cmp
out
cmp
out
push
and
pop
stos
inc
dec
jle
in
mov
arpl
das
adc
or
jnp,pt
sub
ret
dec
cmp
sub
cltd
nop
push
sbb
xchg
push
popa
sub
mov
subl
shlb
mov
ret
push
loop
inc
xorb
rorl
pop
xor
adc
negl
dec
sub
push
push
push
dec
scas
or
dec
lds
push
cmc
mov
lahf
and
fildl
fisttpl
cmp
cmc
mov
pop
lret
das
in
dec
mov
add
sbb
and
push
pop
push
sar
sbb
pop
fbstp
fldl2e
inc
add
test
cmpsb
add
add
add
outsl
inc
adcl
jmp
cltd
decl
or
outsl
insl
mov
inc
out
jbe
pop
mov
push
in
cmp
sub
dec
mov
fdiv
and
mov
rolb
add
sub
dec
adc
inc
dec
lret
std
cmp
ret
test
stos
ds
sub
mov
fs
mov
inc
push
lret
and
repnz
inc
hlt
outsb
stos
jl
fcoms
cmp
ljmp
addr16
xor
cld
negb
sub
jne
cmpsl
and
inc
push
into
and
rorl
insb
dec
xchg
loope
inc
jns
push
nop
dec
sti
xor
fisubs
xchg
sbb
lahf
pushf
and
inc
lods
dec
mov
inc
repnz
test
pop
sbb
pop
jp
int3
mov
sti
and
mov
mov
sub
inc
lret
dec
jp
ja
xor
dec
test
add
add
mov
fadds
and
add
add
add
xor
fisubrl
inc
cltd
popf
add
xor
xor
jne
xor
xor
lds
shr
subb
int3
inc
mov
or
out
mov
adc
aas
pop
inc
sbbb
outsb
out
jmp
mov
adc
adc
movsl
push
dec
inc
push
add
mov
dec
mov
xchg
inc
mov
or
popf
xadd
dec
fisubs
pop
mov
subb
test
fsub
icebp
packssdw
push
xor
ret
push
mov
adc
outsb
std
popf
sbb
aad
ret
movl
sub
and
stc
outsl
dec
data16
or
or
out
jb
enter
imul
xor
cmp
pushf
sub
mov
mov
ret
mov
push
lods
pop
int3
mov
mov
pushf
push
test
mov
add
hlt
sbb
clc
fistl
lret
jnp
sti
jmp
push
mov
not
and
shrb
test
add
add
inc
fcomps
mov
inc
push
fmul
add
mov
add
frstor
jecxz
stos
sbb
inc
jbe
and
jge
mov
clc
sbb
sub
data16
out
ja
cwtl
rol
sbb
lret
lea
popf
daa
test
and
arpl
mov
push
push
push
mov
adc
inc
push
adcb
inc
push
mov
mov
and
add
pop
decb
movsl
mov
and
leave
or
outsl
movsl
jne
imul
mov
push
jecxz
es
lret
mov
and
mov
dec
xchg
fisubrl
or
dec
mov
push
icebp
dec
inc
mov
arpl
mov
push
xchg
inc
scas
out
mov
jne
xor
and
fisubrl
out
push
imul
mov
jecxz
lock
aad
sub
add
add
add
test
and
push
sub
das
cmp
cmp
or
std
mov
mov
sbb
and
call
fisttpll
ret
mov
mov
sbb
ret
add
dec
mov
imulb
js
jecxz
or
lods
sbb
cmp
in
cld
jnp
das
push
scas
mov
in
dec
or
lahf
rcrl
test
cltd
cltd
add
arpl
and
mov
stos
test
xor
sar
stos
je
cltd
pop
xor
dec
rcr
push
sub
insl
dec
push
pushf
xchg
andl
ja
jns
lret
adc
icebp
divl
in
pop
xor
xor
push
sub
mov
in
movsb
data16
aas
pop
push
mov
fmuls
pushf
inc
mov
mov
lock
push
insl
inc
loop
mov
sbb
cvtps2pi
lds
cld
or
mov
cld
mov
leave
in
iret
outsb
xor
add
or
pop
inc
dec
mov
scas
mov
push
int3
mov
add
je
and
cmpsb
out
sti
fs
aaa
add
cmp
mov
xor
dec
cli
aad
sarb
cs
in
dec
orl
sbb
or
or
jb
xor
mov
lret
stos
push
sahf
test
cmp
stos
push
lcall
jbe
adc
jae
xorl
dec
pop
cli
enter
dec
push
pop
fisubrl
cmc
jle
dec
cmp
cmp
hlt
mov
adc
add
adc
outsl
jbe
jp
das
gs
or
adc
jb
adc
mull
add
imul
adc
or
mov
leave
inc
push
lea
imul
mov
rol
adcl
jg
rorb
icebp
mov
dec
das
pop
out
cmc
mov
push
cmp
stos
add
add
add
pop
leave
dec
dec
push
add
aas
xorl
sub
fs
aas
sbb
or
cmp
cltd
xor
shll
popa
ret
or
in
enter
pop
mov
or
pushf
cmp
and
stos
and
push
lds
incb
inc
mov
mov
movsl
inc
std
cmc
cmp
arpl
sbb
test
mov
hlt
xor
or
inc
ds
in
sub
sbb
add
rclb
sub
mov
jno
aam
mov
xor
sahf
fadd
ljmp
and
cmp
hlt
add
pop
insl
cmpsl
sbb
daa
xor
les
inc
stos
sbb
into
mov
testb
or
push
gs
sbb
in
mov
je
push
cmp
xchg
jne
or
dec
cwtl
pusha
pusha
sub
gs
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
stos
push
add
add
add
push
sub
mov
fstpt
jne
addb
cmpsb
adc
movsb
and
and
das
sti
lret
push
sbb
idivb
in
inc
or
movsb
fsubrs
push
mov
out
inc
scas
adcl
and
test
jne
pop
sub
adc
and
mov
in
hlt
cwtl
ja
test
sbb
push
push
test
movsb
movsb
outsb
inc
xchg
sti
mov
aaa
adc
popa
in
testb
jno
inc
jp
lret
ret
arpl
les
mov
xor
jb
or
add
jns
mov
repnz
mov
cmp
xor
add
cltd
mov
jmp
sbb
test
outsl
cli
push
or
cmpsl
arpl
lea
mov
pop
jle
adc
push
mov
fs
in
mov
or
loop
lahf
jo
mov
fidivs
loop
ljmp
mov
pop
mov
lods
add
add
add
pop
mov
sar
jp
dec
cmp
ficoms
out
insb
fxch
ljmp
out
lods
cwtl
scas
inc
sbb
scas
mov
dec
sti
sub
push
rorl
mov
add
inc
pop
xchg
xor
cli
add
lahf
shlb
dec
xchg
mov
mov
pushf
mov
cmp
xor
mov
mov
loopne
inc
xor
sub
shll
pop
mov
dec
or
pop
xor
adcl
hlt
nop
pop
sbb
push
dec
push
hlt
decl
sub
out
sbb
rcrl
pop
push
push
lret
cmpsb
aad
pop
mov
aas
inc
sbb
std
test
mov
push
dec
jnp
mov
mov
pop
out
fldl
out
cltd
mov
cli
je
lret
and
sbb
and
mov
jg
imul
or
mov
es
add
add
xchg
jg
jmp
std
mov
add
inc
scas
add
add
add
mov
or
xchg
mov
in
es
adc
mov
mov
addl
push
and
out
rcrb
daa
leave
shrl
in
lods
je
push
add
push
mov
call
sbb
aas
rep
xchg
ret
inc
sub
cmp
mov
pop
leave
mov
push
shll
or
pop
sbb
mov
push
fdivrs
stos
mov
loopne
dec
cwtl
je
add
mov
into
push
sahf
push
pop
loop
xchg
or
pusha
out
hlt
push
jecxz
pop
xor
fsts
xor
add
jle
lea
push
sbb
and
setp
loopne
push
add
jl
adc
sbbl
imul
stc
frstor
push
and
jo
xor
fldenv
mov
test
lds
repz
sub
in
and
sub
add
imul
out
pop
jmp
js
pop
lods
in
add
add
add
add
xor
inc
mov
xchg
add
scas
add
add
add
outsb
or
sbb
mov
adc
inc
jbe
sub
cwtl
ss
lret
outsl
into
stos
inc
test
pop
fildl
and
mov
mov
xchg
mov
imulb
ljmp
cmp
pop
les
leave
xor
in
dec
lret
mov
jno
and
into
sub
out
in
adc
push
sub
les
mov
pop
xchg
xchg
insl
push
sbb
pusha
mov
outsl
push
inc
mov
dec
mov
mov
mov
xchg
cmp
mov
pop
das
xchg
sub
leave
push
push
push
mov
sbb
jnp
xor
xor
popf
xchg
inc
fildl
std
ficompl
clc
and
sub
rcl
xor
xor
or
enter
out
fisttps
out
addl
shlb
add
xor
cmp
inc
call
das
dec
mov
add
add
mov
je
cmp
int
lret
idiv
sbb
shlb
jo
scas
pop
test
mov
in
jl
push
lret
out
sub
sub
test
xchg
movsl
cmpsl
icebp
aaa
jl
push
inc
dec
sbb
test
subb
int3
pop
js
cmp
sub
stos
fcom
jl
mov
adc
addb
mov
jle
insl
mov
inc
pop
pop
mov
fbld
test
mov
mov
ror
clc
leave
lret
lea
and
fs
loope
ss
push
clc
xor
push
xor
jg
sbb
xor
pop
cli
cld
cmp
inc
pusha
or
pop
sti
dec
pop
or
imul
push
pop
movsb
mov
push
pop
mov
or
sbb
fldenv
imul
jbe
shlb
push
lret
repz
std
in
push
jo
insb
pop
jecxz
es
les
mov
arpl
adc
mov
add
add
std
jp
lea
shlb
pop
push
and
fwait
xor
cmpsl
push
fstpt
pushf
pop
sub
fcomps
and
push
xchg
call
jmp
sub
cmp
cmp
pop
in
sub
mov
ja
sbb
or
jle
sti
mov
mov
jae
imul
lock
lahf
push
adc
push
rcr
pop
pop
add
outsl
mov
xchg
sub
cmp
call
xchg
inc
cmp
add
testb
adc
bound
iret
ret
lahf
ret
dec
cmp
pop
arpl
add
adc
lods
out
sub
pop
and
sbb
int
push
fildl
or
jecxz
jecxz
or
adc
cmp
fiadds
sub
js
mov
add
pop
inc
mov
lret
cltd
mov
out
push
add
push
fs
jno
dec
or
pop
stc
out
push
pop
bound
push
push
mov
add
add
ja
inc
cwtl
adc
nop
mov
popf
sbb
lahf
xor
inc
dec
cmp
push
fbstp
int
jo
in
sbb
data16
pop
flds
jne
push
roll
fsubl
push
or
addr16
pop
lcall
and
adc
mov
cmc
mov
cmp
repnz
loop
push
into
pop
loope
pop
iret
cmp
cs
cmp
fcomps
test
mov
jp
xor
sbb
add
bound
cmc
pop
outsb
in
ret
mov
cwtl
loop
jle
pusha
mov
mov
pushf
xchg
scas
filds
inc
fcoms
adc
orb
sbb
xchg
mov
mov
imulb
lret
hlt
xchg
dec
les
push
inc
jb
adc
fwait
adc
adc
into
xor
int3
or
in
mov
jg
jns
aam
es
out
push
sbb
lds
cli
lcall
push
push
mov
add
add
test
xchg
sub
pop
inc
shlb
leave
test
xor
out
xchg
cld
dec
pop
xlat
in
aam
out
iret
and
outsl
aas
clc
in
xor
and
push
or
stos
cmpsb
mov
mov
gs
and
inc
xor
or
inc
fidivrl
sbb
pop
mov
out
mov
cmp
insl
dec
jbe
and
and
sub
inc
jp
scas
sbb
add
aaa
dec
gs
jns
call
pop
dec
mov
jg
push
mov
stos
pusha
in
push
or
dec
aam
add
xchg
int3
loop
xor
push
fldl
jmp
rcr
sub
sti
xchg
sub
mov
xor
pop
mov
repz
popa
hlt
mov
sub
sub
sbb
rolb
adc
jle
js
pushf
inc
cmp
xchg
mov
add
jp
mov
lock
jne
push
imul
jecxz
int3
xorl
insb
lret
in
sbb
add
add
add
cwtl
push
mov
sub
pop
mov
mov
or
orl
push
inc
add
sub
aaa
int3
iret
sbb
adc
invd
popf
pop
scas
insb
sbb
xchg
popa
lods
jecxz
mov
int3
ljmp
aad
push
add
inc
pop
dec
inc
aas
dec
dec
sbbb
push
mov
mov
repnz
pop
int
fldcw
mov
pop
push
adc
packsswb
fs
inc
dec
hlt
cmp
mov
orl
arpl
shrb
mov
inc
orb
dec
mov
jge
cwtl
inc
punpckhwd
pop
pop
jno
mov
loop
in
stc
hlt
and
hlt
sahf
or
xchg
aas
mov
push
popa
sbb
add
adc
xchg
adc
lock
add
iret
sbb
aas
pushf
mov
pop
jg
xchg
push
icebp
dec
insl
xchg
or
adc
dec
pop
pop
sbbl
fstp
rorl
sbb
add
add
aaa
or
movsb
mov
adc
mov
fdivrs
fmull
lods
ret
xchg
fnstsw
outsb
aas
rcrl
xor
push
sbb
pop
sbb
out
adc
ret
xchg
and
sti
out
in
adcb
lcall
xorl
adc
repnz
js
fidivrl
push
jb
push
dec
and
dec
fnstenv
push
adc
xor
dec
dec
repz
pusha
dec
out
push
inc
shll
mov
movsl
clc
repnz
mov
adc
cld
jnp
push
adc
push
and
imul
mov
inc
or
mov
stc
mov
cmp
jp
mov
inc
jmp
das
xor
call
mov
frstor
xchg
lret
or
stos
xchg
add
ljmp
aad
lret
loope
mov
jecxz
out
mov
jl
arpl
add
add
add
stos
bound
jae
push
mov
xor
decb
ss
pop
add
xchg
decl
mov
cmp
aas
sub
and
mov
sbb
sub
fdivl
xchg
xlat
daa
jo
dec
popf
mov
loop
out
cld
xor
mov
mov
ljmp
or
inc
jae
idivb
jmp
in
leave
fmull
stos
inc
sbb
out
ret
mov
shll
insb
mov
icebp
xor
xchg
ret
jle
popa
aam
mov
loope
pop
sub
insl
jmp
cwtl
push
xchg
dec
push
xchg
repnz
xchg
mov
rol
cltd
dec
push
and
fldcw
sub
mov
test
jb
and
xor
mov
jnp
mov
mov
shlb
addl
inc
dec
push
jne
jecxz
mov
cli
and
mov
pop
add
push
xchg
test
jg
into
lret
orl
add
add
cmp
arpl
leave
cmc
push
mov
push
movsl
cmp
imul
dec
shll
or
mov
mov
add
out
xchg
popa
bound
mov
xor
inc
adc
pusha
xlat
sbb
mov
mov
lahf
ss
les
mov
aas
xor
sbb
add
sti
jp
sub
cmp
je
leave
repz
shr
fs
adc
mov
int3
repz
roll
js
inc
jmp
xor
mov
adc
jno
insb
cwtl
push
das
add
fwait
scas
in
sahf
mov
ja
sbb
mov
addl
pop
or
mov
jl
pusha
nop
sub
xchg
push
mov
mov
leave
sbb
insb
mov
push
mov
mov
mov
test
loope
scas
lds
in
cmpsl
pop
push
sub
lock
in
lcall
jae
dec
mov
jbe
cmp
add
add
roll
jne,pn
mov
sbb
push
adc
mov
dec
shrl
scas
notl
aad
mov
cmp
loopne
repnz
test
std
sbb
clc
enter
std
inc
aam
adc
jo
and
jb
pop
mov
dec
mov
add
cmpsb
jnp
pop
test
mov
fidivrl
icebp
inc
or
pusha
aas
push
shlb
mov
test
ja
mov
and
sub
mov
jae
jo
and
push
scas
hlt
dec
and
and
pushf
or
fsubrl
push
stos
mov
cmc
mov
and
data16
mov
bound
in
xchg
sub
insl
pop
add
lods
jnp
mov
jmp
mov
inc
fwait
jbe
ret
test
adc
aaa
xchg
cld
adc
cmp
clc
or
add
or
test
add
add
sub
jg,pt
dec
arpl
sub
add
add
pushf
jae
jp
bswap
pop
xchg
insl
cld
mov
cld
sbb
mov
call
mov
push
dec
repnz
dec
xor
xchg
mov
adc
mov
mov
xchg
lock
gs
aaa
es
cmpsb
incl
inc
mov
lods
test
add
adc
shlb
in
stc
sahf
adcb
jnp
mov
jno
mov
fsubs
enter
jns
ja
outsl
fcoms
sbb
fidivs
jae
mov
outsb
xor
xor
loope
jo
iret
mov
mov
mov
cmp
push
xchg
pop
adcb
xlat
mov
sbb
outsl
or
ret
mov
loop
jecxz
mov
dec
outsb
and
push
sbb
pop
shrb
xchg
mov
fildll
movsb
in
icebp
jle
repnz
jl
jecxz
add
add
out
idiv
outsl
mov
icebp
insb
popf
mov
mov
add
mov
mov
int3
mov
inc
cmp
mov
xor
jo
cwtl
or
jp
cmp
iret
xchg
inc
xor
inc
pop
mov
or
dec
call
ret
cld
mov
aas
add
insl
and
data16
sbb
pop
pop
movsb
movsl
mov
lahf
pop
cwtl
and
cmpl
xor
xchg
cmpsl
daa
fbstp
or
xchg
sub
jge
lock
cld
jb
inc
test
jae
push
and
in
in
repz
repz
iret
insl
adc
repz
cli
outsl
mov
pop
shlb
cmp
lret
out
pop
fbld
aam
clc
insb
enter
push
pop
movsl
ljmp
mov
daa
sbb
mov
xchg
call
cmpb
test
xchg
dec
outsb
push
sbb
repz
ret
or
lcall
mov
or
mov
add
add
inc
fbld
mov
pop
xchg
jne
lcall
add
jmp
xor
loop
addr16
les
adcb
jne
xchg
or
mov
mov
adcb
mov
stc
lock
mov
ss
jb
mov
shrl
fs
into
inc
mov
ret
mov
ja
jo
lahf
sub
xor
in
mov
addr16
push
mov
popf
in
lods
sbb
push
sbb
jle
add
rorl
rcr
mov
push
adc
stos
scas
outsl
mov
inc
fimull
sbb
jbe
jo
mov
js
aaa
mov
xor
ljmp
xor
xorl
jmp
daa
roll
mov
cltd
jl
sub
mov
xlat
lds
pop
mov
adc
shr
ret
sub
jb
and
popa
mov
aad
bswap
push
sldt
add
push
push
call
repnz
xchg
test
add
add
add
adc
jnp
dec
adc
push
cmc
bound
ret
clc
and
and
test
clc
aam
jl
pop
add
into
bound
dec
mov
inc
pop
lcall
loopne
stos
xchg
lcall
sahf
lcall
jno
aam
or
popa
jb
push
ds
adc
push
pop
mov
bnd
scas
loope
push
les
stos
or
push
mov
xor
scas
xor
mov
push
inc
sbb
lock
push
and
or
aam
data16
dec
jp
add
scas
jnp
in
sub
push
xchg
sub
fldcw
jge
fstpl
add
pop
fadds
shrl
outsb
push
push
mov
or
gs
enter
pop
lock
cwtl
jg
in
cmp
push
es
mov
ljmp
icebp
dec
scas
sub
xchg
sbb
jmp
mov
test
stc
lcall
add
add
std
sti
leave
sti
iret
jmp
sub
jl
add
add
add
jnp
cli
mov
push
cwtl
clc
push
xor
es
sbb
shrl
mov
jbe
xor
sub
add
imul
ret
popf
adc
clc
xchg
dec
mov
enter
rcrl
cmc
or
adc
jne
jae
icebp
repz
lea
fists
mov
pop
mov
sar
push
cmpb
xchg
in
dec
xor
inc
loop
lods
mov
jbe
shll
fnsave
adcl
inc
addr16
xor
fstl
shl
xor
cs
stos
push
sub
inc
cli
shll
mov
insl
pop
stos
push
mov
dec
loope
stos
imul
scas
adc
push
jno
test
add
arpl
aaa
lcall
test
out
loopne
inc
push
xor
jns
in
daa
nop
mov
cmp
sub
pushf
pop
or
loopne
out
pop
or
movsl
stc
jecxz
add
add
mov
xor
mov
add
mov
mov
mov
mov
mov
fnsave
mov
sub
imul
mov
jge
adc
sbb
inc
xchg
cmp
push
push
cli
pop
and
adc
xchg
stc
cltd
dec
shll
xchg
jge
lcall
jl
pop
mov
cmp
mov
loopew
xlat
xchg
testb
test
push
mov
test
adc
loope
sbb
mov
shl
mov
mov
pop
jmp
das
push
sbb
dec
xor
adc
sub
xor
xor
sbbb
lret
xlat
dec
mov
adc
cmpsb
jb
movsl
mov
iret
es
flds
mov
ja
mov
adc
popa
loop
cmp
dec
inc
or
fdivp
movsb
add
mov
adc
mov
arpl
cmc
shrl
pop
and
es
pop
mov
fwait
mov
or
jg
mov
sahf
loop
adc
adc
mov
add
sbb
lock
les
push
iret
enter
xchg
movsb
pop
sub
and
outsb
xor
mov
pop
cmp
out
jecxz
stos
cmp
push
mov
pushf
lea
dec
lea
js
movsl
add
mov
sbb
call
mov
jbe
and
push
jp
mov
movsb
mov
icebp
sbb
test
add
iret
gs
xchg
enter
add
clc
inc
mov
add
icebp
adc
or
sub
mov
push
xor
ds
jb
jnp
lods
rcl
test
rorl
or
repnz
int3
gs
inc
cli
test
and
push
fcoml
adc
scas
xchg
sub
repnz
jno
jl
jne
or
fxch
aad
add
mov
sub
push
mov
arpl
xor
push
cld
pushl
cld
sbb
mov
add
add
add
pushf
mov
nop
cld
iret
outsl
into
push
xor
xor
repz
mov
push
mov
xchg
mov
popa
loop
add
insl
pop
adcl
mov
ja
fiadds
push
movsb
pop
mov
movsb
scas
add
jl
lods
xor
cltd
outsb
jg
cmp
fsubp
xlat
in
mov
push
rclb
xchg
addr16
xchg
enter
aaa
idivb
xor
inc
xchg
adc
mov
enter
xor
dec
pop
mov
jmp
arpl
and
sub
sar
mov
mov
sbb
dec
popf
or
inc
mov
imul
shrl
outsl
imul
out
xchg
es
jmp
and
jae
lcall
imul
xor
push
dec
out
dec
add
and
ja
xlat
pushf
shrb
lcall
cmp
roll
add
add
es
pop
jae
xorl
mov
add
movsb
test
add
in
out
insb
in
xchg
adc
push
mov
cwtl
push
imul
mov
roll
mov
sbb
cld
int
icebp
mov
mov
outsl
cmpsb
mov
gs
sub
xchg
into
pop
outsl
jg
xchg
xlat
pusha
lret
xchg
in
sbb
ret
push
loop
lea
sbb
xchg
aam
mov
into
sbb
hlt
jno
xchg
sbb
das
cmp
mov
mov
stos
push
mov
subl
sti
dec
xor
out
jb
vcmppd
or
lea
lods
mov
inc
dec
lds
mov
jno
push
cmp
pushf
lea
cmp
int
cwtl
aaa
fidivrs
jl
movb
je
insl
fists
xchg
inc
addr16
sbb
lcall
add
add
test
mov
aas
scas
fnstenv
or
nop
ret
add
add
adc
shlb
mov
sbbl
pop
dec
lds
aas
out
jno
adc
mov
add
inc
cmp
ljmp
in
mov
mov
std
notl
mov
inc
subl
inc
adc
loopne
lret
xchg
mov
mov
cs
pop
lods
ljmp
test
fidivs
jl
stos
sbb
jnp
adc
sbb
addb
shrl
xchg
adc
and
dec
jne
imul
add
movsl
pop
push
xchg
lret
outsb
jno
loop
sub
mov
or
or
out
clc
leave
shl
or
scas
or
push
jge
pop
shr
leave
repnz
or
ficomps
mov
or
pop
std
and
cmp
pop
sub
jo
imul
add
add
jne
jne
jg
loop
mov
jno
ret
add
add
add
mov
xchg
pop
test
dec
outsl
popf
mov
std
imul
cwtl
push
addr16
ret
pop
pop
ljmp
lahf
loope
sbb
mov
inc
cmc
xchg
jae
insl
stos
nop
push
sub
ds
add
add
fcmovu
ret
jne
scas
mulb
shll
inc
movsl
lret
mov
pop
testb
push
sub
stc
int3
andl
inc
add
xchg
dec
sbb
xchg
lcall
mov
sbb
ds
jae
mov
add
insl
jmp
fcmovnb
cli
xchg
das
shl
aas
cs
enter
mov
arpl
sbb
call
jge
pushf
add
insb
jbe
lret
inc
jg
mov
push
jo
std
or
outsb
push
push
lods
lods
add
inc
push
ja
clc
scas
lcall
mov
or
lock
mov
push
add
sbb
mov
cmc
mov
push
cwtl
les
add
add
popa
jg
fsubs
sti
inc
and
mov
pushf
in
fisubl
in
fsubs
loope
pop
mov
xchg
and
loop
dec
ror
int
mov
dec
rolb
or
sbb
sti
and
mov
dec
push
mov
cmp
sbb
push
xor
bound
outsb
or
inc
lahf
pop
and
ror
pop
cmp
scas
in
jnp
stc
pop
cmp
fyl2xp1
add
mov
repnz
cmp
lea
push
ljmp
push
daa
bound
nop
shlb
enter
xor
inc
les
test
lods
xchg
test
scas
iret
or
dec
or
idiv
jns
pushf
gs
test
popa
pop
adc
daa
fstl
stos
sub
mov
mov
loope
dec
lret
scas
and
xlat
pop
pop
and
sbb
pop
cmp
sbb
lcall
test
mov
add
and
outsb
jle
lods
testl
lds
add
add
or
aas
fistl
pop
sti
cmp
cmpb
mov
xor
mov
dec
and
cld
adc
xor
pop
leave
test
ffreep
push
push
rorb
mov
xorb
pop
pop
cld
loopne
mov
scas
mov
negl
cs
cli
inc
push
adc
and
dec
dec
jb
dec
sbb
cmc
daa
jg
fidivl
sub
das
mov
xlat
push
xor
ss
pop
das
push
cmp
mov
hlt
lret
mov
xchg
cmp
dec
pop
push
xlat
leave
inc
dec
outsl
mov
mov
fdiv
xchg
mov
out
lock
in
sub
push
std
mov
mov
inc
call
jle
adc
xor
ret
or
mov
dec
icebp
stos
ja
pop
arpl
inc
adc
and
ja
sbb
and
and
pusha
test
test
add
add
mov
xchg
insb
xchg
cltd
outsb
jp
movb
add
add
pop
adc
mov
sti
sahf
int3
aad
dec
inc
in
or
bound
adc
mov
xchg
lea
stos
outsb
mov
ss
ret
pusha
loopne
mov
sub
out
mov
aas
out
insb
xchg
out
adc
and
dec
loop
lock
hlt
sub
or
out
xchg
aaa
add
mov
jbe
insb
in
lods
iret
mov
mov
mov
sub
jmp
imul
cmpsb
ret
adc
stos
int
pop
in
xchg
add
cmp
push
adc
cmp
das
or
es
mov
shrb
in
mov
stc
pop
test
repnz
lds
jl
or
jmp
cmp
add
iret
xor
aas
aam
cmp
loopne
mov
int3
cmp
push
rcl
mov
and
pushf
inc
jno
cli
ret
mov
xchg
push
cmpsl
cmp
mov
mov
movsb
int3
dec
test
sbb
xlat
in
aad
in
fistpll
mov
movl
add
pop
loop
imul
test
push
dec
xchg
mov
adc
outsl
adc
push
xchg
ljmp
mov
adc
cld
xor
sub
in
lret
test
imul
sub
aaa
jno
sbb
mov
xor
or
jae
popa
mov
adc
ljmp
inc
mov
and
fs
jb
sti
push
inc
mov
les
out
jge
addr16
lods
arpl
pop
mov
nop
lret
dec
pop
out
pop
in
mov
pop
lcall
adc
shrl
jg
iret
push
hlt
lcall
jle
rol
pop
push
sub
out
int3
push
jae
ljmp
cld
jo
leave
aas
pop
pushf
adc
jb
les
lret
ds
mov
xor
adc
filds
xor
jo
sub
cmpsl
and
aam
int3
pop
repz
add
ds
sub
cmp
jg
and
mov
out
stos
push
add
add
add
sub
out
aas
lea
pop
mov
ret
mov
pop
mov
dec
sbb
pop
lcall
or
jle
inc
cmpsb
and
adcl
std
aaa
lock
lret
xchg
cmp
cmp
jg
in
gs
xlat
cmove
ret
dec
pop
pop
dec
and
stos
push
add
out
adc
xor
xor
lds
fidivl
xchg
or
ret
sbb
push
xor
mov
js
dec
push
cmp
imul
jbe
or
mov
aam
pop
dec
adc
and
pop
out
xchg
mov
test
and
lds
push
pusha
cwtl
stos
push
daa
mov
lea
aam
and
rcrl
sahf
out
xor
fwait
push
dec
mov
adc
test
out
pop
ss
add
xor
sub
dec
pusha
mov
shl
out
mov
out
cmp
and
scas
cld
and
jmp
ds
repz
fcoms
loop
data16
leave
add
add
add
in
scas
dec
adc
inc
ret
sub
stc
lcallw
pusha
bswap
lahf
ss
or
push
xor
lods
xchg
lret
scas
sbb
xchg
pop
loop
outsb
repz
idivl
and
pop
lds
add
dec
ja
xor
mov
pushf
or
jmp
iret
incl
ja
out
or
out
inc
cmp
and
dec
rcll
jo
iret
insb
sti
mov
sti
ret
cs
stos
inc
xlat
test
pop
insb
cli
mov
into
clc
mov
lret
mov
mov
pop
loop
sub
dec
lcall
repz
sbb
in
cs
jae
inc
shrl
jmp
cmpsl
mov
mov
cmpsl
pop
jge
inc
into
into
sbb
push
nop
or
lods
loop
imul
ficomps
pop
jnp
mov
insl
cltd
sar
pop
das
sbb
add
mov
mov
mov
lret
add
add
scas
mov
mov
bndstx
sub
leave
repnz
inc
and
cmpsl
xchg
out
jmp
dec
repz
adc
adc
stc
fildl
lock
lahf
pop
push
mov
mov
enter
add
add
shlb
push
cmpsb
inc
push
jg
sti
mov
inc
and
or
xor
andb
nop
sub
jecxz
fistps
xor
pop
int3
popf
daa
loop
xchg
aaa
and
mov
xchg
mov
jbe
mov
mov
jmp
mov
adc
or
push
or
ret
movl
lahf
add
pop
imul
insl
in
xor
stc
push
xchg
mov
adc
pushf
shlb
cmpsb
xor
fisttps
pop
aam
outsb
mov
cmp
jp
js
push
fs
cs
incb
add
add
enter
in
sbb
push
inc
push
pop
push
push
mov
add
add
add
gs
hlt
add
addl
test
xchg
push
jmp
sub
mov
loop
faddl
fisttps
outsb
push
jge
or
mov
stc
push
int3
xor
nop
movsb
imul
repnz
xchg
loope
xor
xchg
push
bsf
int
xchg
jp
gs
mov
lret
push
addr16
fcmovbe
stc
filds
jmp
rcr
mov
inc
sbb
mov
pop
sbb
add
mov
movsb
mov
cwtl
xor
into
divb
sbb
push
pop
push
test
test
outsb
mov
adc
sub
xchg
fnstenv
jecxz
pop
xchg
xor
call
mov
xor
sub
sbb
popf
pop
add
in
mov
popa
or
inc
pop
icebp
and
xor
cmp
xchg
xchg
gs
incb
ret
mov
into
int3
jne
imul
cmc
call
inc
push
popa
jl
sbb
mov
add
add
and
xor
popl
jae
mov
fstpt
pop
push
pop
das
test
aas
and
sti
pop
adc
cmp
aad
insb
sar
out
or
xor
push
xor
icebp
cld
lds
mov
outsb
scas
jb
les
mov
out
mov
aam
jmp
scas
push
mov
mov
fsubp
and
ljmp
loopne
jb
test
pop
add
pusha
inc
leave
inc
add
xchg
inc
cld
cmp
push
jp,pn
push
fisttpl
movsb
dec
ljmp
xlat
or
xor
and
les
mov
xchg
sbb
cmp
aam
pop
into
push
xchg
stc
sbb
imul
jne
add
jb
addr16
add
insb
inc
sub
xor
push
dec
lock
ja
xor
es
mov
xor
les
std
stc
xchg
movsl
mov
iret
sub
pushf
pop
repnz
add
add
lcall
cli
lcallw
or
cmc
mov
jg
sbb
call
dec
mov
and
popa
jp
inc
stos
pop
jbe
into
lods
mov
or
dec
insl
dec
pop
cwtl
jbe
cli
icebp
xor
ljmp
mov
ficoms
dec
pop
and
fmuls
js
push
daa
xchg
mov
sbb
xchg
cld
jge
mov
imul
xchg
ss
popa
fs
sahf
repz
ja
cmpsl
fildll
fcomp
and
sbb
sub
add
cmpsl
arpl
sub
in
xchg
rcll
into
out
adc
stos
push
xcrypt-cfb
cmpsl
in
dec
mov
incl
inc
mov
push
cmp
hlt
sbb
sahf
add
push
popf
jle
jecxz
xor
mov
loop
push
xchg
insb
xchg
jns
popf
add
mov
out
out
out
into
gs
cld
test
add
add
add
fldl
inc
push
subb
or
pop
test
add
mov
mov
lock
lds
outsb
pushf
xchg
fs
inc
pop
imulb
mov
in
mov
mov
push
pop
xor
sti
clc
pushf
adc
jb
xlat
sbb
cli
jns
xor
stc
jo
fiadds
jmp
cmpsl
push
sbb
add
lret
pop
dec
ret
rcll
les
or
jne
add
std
inc
pop
sub
repz
push
sbb
jo
bound
mov
hlt
or
js
pop
lods
mov
fldl
das
and
aad
push
fsts
scas
mov
pop
subl
adc
jne
lods
inc
bound
adc
cmp
jmp
adc
adc
push
pop
pop
xchg
icebp
jb
lret
std
in
addl
test
jp
shl
mov
mov
xlat
inc
cwtl
pusha
mov
loopne
and
je
out
mov
movsb
into
adcl
lcall
cwtl
out
mov
or
inc
insl
insb
jnp
data16
stos
add
je
repnz
or
shr
mov
jle
fld
fldl
and
add
inc
repnz
pop
push
jmp
mull
xor
push
cmp
sbb
inc
and
movsl
jae
or
shlb
outsl
imul
mov
fsubrp
sbb
cwtl
inc
adc
pop
add
ror
sub
fadds
cli
pop
inc
mov
fistl
test
adc
sar
aas
out
push
jns
add
or
sbb
jns
cmp
dec
cmp
pushf
xor
sti
test
outsb
xlat
and
imul
add
push
psadbw
and
adc
addb
jo
xlat
into
cltd
dec
icebp
xlat
dec
or
adc
jge
add
adc
mov
call
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
dec
les
enter
add
add
dec
mov
das
inc
insl
scas
pop
std
push
mov
mov
jp
jp
aas
mov
sbb
xor
inc
sbb
inc
mov
dec
inc
bound
test
hlt
xchg
xlat
sbb
cmp
lds
mov
ljmp
push
test
out
sbb
outsb
sub
cld
in
aam
lds
fiaddl
test
dec
in
xor
cmp
dec
ja
push
and
xchg
cmpsl
dec
sbb
mov
lods
ds
xor
aaa
lret
mov
adc
fucomp
push
js
xor
jns
pushf
xor
in
sub
and
pop
shl
xor
xor
les
cmp
loop
or
cmp
adc
lods
and
mov
je
ds
icebp
sub
repnz
xor
jno
push
mov
lahf
hlt
cpuid
push
pop
jb
jp
call
out
lahf
ret
or
cmp
into
int3
roll
add
add
out
adc
icebp
pop
cltd
repnz
std
lock
jge
ja
imul
das
adc
out
shll
mov
or
fdivr
clc
shlb
push
outsl
add
sub
sub
jo
inc
jecxz
adc
sbb
mov
add
xchg
mov
lret
inc
subl
shlb
shll
sub
frstor
ljmp
pop
inc
inc
and
mov
pop
arpl
push
fld
and
inc
sub
push
fucom
sahf
mov
mov
and
dec
mov
adc
js
insl
sbb
and
pop
push
into
pop
or
add
fwait
mov
adc
pop
out
icebp
dec
loope
pop
mov
inc
icebp
daa
pop
jp
xor
jmp
test
push
or
add
dec
mov
imul
sbb
stos
xor
mov
mov
mov
pop
xchg
or
rolb
add
add
mov
out
aaa
out
out
xchg
call
sarb
mov
into
inc
push
loop
add
scas
rclb
nop
xchg
out
lcall
add
inc
cmp
jnp
scas
rol
xor
gs
or
mov
pushf
and
lods
subb
mov
outsl
adc
cmp
pop
push
std
pusha
nop
andl
repz
mov
cmpl
cltd
aaa
or
lods
jp
js
aas
or
pop
test
xchg
sbb
xchg
xchg
jg
fdivs
mov
fwait
loop
or
push
addl
jb
xor
mov
std
xor
pop
pop
sbb
aas
js
push
push
outsb
jo
or
in
jge
mov
inc
pavgw
push
push
cwtl
dec
pop
or
xchg
mov
inc
ret
lret
test
cltd
mov
mov
ja
sbb
fsubrs
xor
add
sbb
sub
dec
outsl
pop
outsb
lock
add
add
add
sbb
adc
sub
popa
mov
jmp
imul
jno
mov
gs
dec
mov
ja
sub
push
in
cmp
mov
fwait
jnp
push
arpl
inc
jmp
cli
adc
mov
sbb
jne
cmpsb
pusha
fidivrl
in
fidivs
icebp
movsb
mov
sub
clc
fadds
xchg
cmp
cmp
je
mov
cs
or
nop
push
cltd
sbb
pop
jp
add
xorb
add
push
insl
sahf
add
adc
movsb
mov
dec
xor
hlt
ljmp
adc
out
fldenv
inc
add
call
mov
arpl
pushf
mov
sbb
or
shrl
mov
imul
push
test
rorl
mov
fmull
mov
pop
xor
pop
rcll
push
mov
mov
mov
pushf
adc
ds
jae
or
xor
aam
add
add
imulb
mov
imul
sub
push
pop
ljmp
mov
dec
mov
dec
xchg
cltd
jbe
fidivs
cmp
negl
push
sbb
lret
xchg
mov
inc
lea
imull
lods
das
loope
adc
iret
aad
sahf
xchg
sbb
loop,pn
fisubrs
pop
mov
pop
adc
cs
pop
out
or
pop
push
dec
leave
fucomi
xchg
je
pop
sub
mov
mov
ficoml
pop
icebp
lods
cli
flds
fsubs
sbb
sbb
and
pushf
into
pop
mov
cmp
mov
push
gs
andl
add
fs
and
mul
jge
jl
adc
jbe
add
fbstp
and
jecxz
or
divb
xchg
fdivrs
dec
insb
loop
add
push
test
fidivrs
cmpsb
nop
pop
or
js
dec
and
sbbl
add
xchg
and
idiv
lahf
insl
mov
icebp
outsl
in
aad
add
add
lds
ja
dec
les
in
xchg
cwtl
push
out
aam
push
pop
add
jmp
in
sub
aad
xchg
jge
mov
push
popf
adc
ret
pop
test
jl
jnp
mov
pop
cmp
dec
push
cmpsb
or
testl
mov
cmp
inc
sub
or
xchg
popa
pusha
mov
stos
fidivl
ficoms
lods
xor
jg
push
xchg
push
jp
in
mov
mov
sbb
orl
push
sbb
lds
pop
inc
pop
adc
push
jmp
out
cmp
jg
dec
mov
daa
inc
adc
xor
aad
dec
in
cmpb
fwait
js
xchg
js
xchg
mov
ljmp
roll
cli
inc
jmp
iret
mov
dec
cmp
stos
rolb
test
jmp
adc
mov
jo
cmpsl
in
add
adc
rorb
add
add
xchg
ja
push
jg
leave
or
scas
sbb
push
add
add
scas
jecxz
inc
mov
push
jmp
and
pop
mov
cmp
jnp
and
shll
and
movsl
out
aad
js
lcall
call
adc
or
push
mov
imul
ficoms
sar
mov
jmp
pop
dec
mov
aaa
in
mov
fstpt
add
jmp
test
mov
inc
test
pop
sbb
push
inc
inc
inc
xor
mov
mov
insl
mov
push
dec
lock
mov
pop
int
xchg
sbb
cmp
into
xor
orps
dec
jle
xor
mov
mov
push
push
xchg
mov
les
int
fcomps
push
or
mov
outsl
out
mov
mov
daa
stos
mov
inc
inc
sub
ret
push
push
push
ret
sbb
xor
add
add
int
out
out
imul
nop
xchg
movsb
sub
add
add
add
xor
enter
shrd
addb
in
and
jecxz
aad
dec
xchg
mov
mov
mov
mov
mov
fildll
pop
fcoml
sbb
out
sbb
das
call
push
pop
dec
sub
push
sub
adc
les
mov
mov
dec
loop
sbb
mov
in
inc
sbb
cmp
jb
fldl
mov
in
loop
scas
sarb
mov
pop
xchg
push
insl
dec
das
movb
add
cmp
cwtl
subl
add
daa
mov
jae
adc
call
push
mov
fcmovnb
andl
and
xchg
adc
dec
jno
pop
test
fwait
pop
push
lret
sbb
jle
jo
bnd
sbb
jl
xchg
cmp
xchg
mov
jns
out
fldcw
push
in
sub
and
fadds
add
add
repnz
fwait
inc
out
js
stc
in
lods
and
clc
movl
mov
std
adc
mov
stos
jge
jno
icebp
or
add
jno
dec
das
or
mov
pusha
sbb
or
test
mov
and
dec
int
push
nop
rcrb
in
in
cld
sbb
popf
faddl
dec
xchg
add
jg
repnz
ret
std
fstpt
push
fdivs
stc
jbe
push
lret
stos
sbb
sbb
cmp
sub
sbbb
cwtl
xchg
pop
scas
jg
mov
xchg
ret
xlat
jecxz
dec
loopne
stos
ret
inc
dec
mov
jecxz
adc
mov
dec
inc
lret
xor
test
icebp
hlt
call
test
arpl
dec
ss
sbb
or
xchg
aaa
mov
out
pushl
jge
sbb
in
dec
pop
pop
outsb
jo
pop
sub
cmp
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
int3
pop
in
flds
add
add
mov
stc
mov
mov
sub
je
add
or
lret
or
mov
and
or
into
stos
cmp
push
mov
jbe
mov
jmp
push
iret
in
xor
sbb
enter
mov
and
or
sub
push
pop
fisttps
mov
push
mov
imull
cli
add
sub
xor
in
sbb
cli
push
ljmp
adc
cmp
add
ret
cmpb
lods
popf
testl
repnz
pop
cmpsb
mov
push
pop
inc
jbe
pop
push
inc
aaa
shrl
sbb
ja
adc
mov
jmp
inc
cmc
sub
jae
loope
mov
daa
and
movsb
stos
clc
aas
stos
nop
jmp
lock
fdivl
icebp
stc
sub
push
sarl
jl
push
jge
sti
mov
sbb
pop
dec
jle
jg
std
fstpt
stc
push
mov
add
add
jbe
scas
jg
inc
xor
or
std
xchg
ljmp
push
jp
repz
dec
inc
aam
lahf
popf
cmp
dec
dec
movsl
scas
jl
test
std
xor
aas
cmp
sbb
adc
test
xchg
arpl
xchg
mov
mov
jo
hlt
cmp
sbb
mov
decb
aam
xchg
jle
cmp
xor
sbb
push
call
cmp
clc
mov
pushf
lods
rcrl
fcmovnu
je
push
push
dec
aad
cwtl
push
rclb
mov
and
fiadds
sbb
dec
test
pop
bswap
iret
movb
imul
rcl
sti
pop
or
dec
push
shlb
and
cwtl
pop
dec
xor
sbb
or
sbb
fwait
dec
sbb
cld
xchg
std
push
inc
sbb
dec
jl
test
in
add
xchg
ljmp
insl
sarl
push
fmull
push
test
mov
out
mov
es
push
lcall
add
add
mov
sti
idiv
lods
pop
sbb
or
fildl
add
add
stos
or
call
pop
sbb
xor
xchg
and
rep
cmpsb
add
jbe
and
shl
andl
insl
inc
jle
jnp
sahf
jg
cmpsb
mov
add
push
adc
xchg
xchg
sarb
and
outsl
mov
pop
adc
add
pop
jge
out
dec
xor
lds
daa
mov
xor
mov
lods
fnstsw
rorb
ret
push
fisubl
cltd
add
imulb
adc
and
iret
adc
mov
movsl
sbb
xor
rolb
adc
pop
jo
lds
push
sub
aam
add
xor
jne
mov
mov
xor
ffree
pop
or
inc
xlat
test
pop
nop
sbb
add
push
into
cs
in
push
je
adc
leave
jmp
scas
inc
call
clc
faddl
add
add
sbb
lret
mov
fadd
and
mov
mov
std
test
or
sti
pop
dec
fdivp
stos
in
test
cli
cli
cmpsb
pop
das
jbe
int3
les
fcmovnb
iret
xchg
mov
sbb
dec
xor
cltd
mov
inc
aas
inc
mov
mov
jge
subl
push
aaa
or
pop
repz
mov
arpl
xor
cmc
lahf
sti
fcomp
popf
fists
out
xor
mov
xchg
imul
pop
mov
mov
subl
jo
mov
into
mov
arpl
adc
xchg
js
sbb
shrb
jecxz
and
add
jne
in
sbb
sub
mov
mov
test
sub
pop
sub
cmc
cmp
and
sbbb
cmpsl
fimull
faddl
leave
cmp
add
add
xchg
sub
bound
pop
imul
adc
sub
mov
scas
push
ds
jp
ljmp
and
mov
and
mov
mov
pop
lods
pop
lock
inc
xor
xor
orb
fcoml
dec
xlat
fidivl
outsl
nop
cmp
movsb
or
mov
popa
mov
je
das
dec
fs
xchg
mov
sarl
mov
jb
test
into
es
stos
or
hlt
rclb
jl
add
jmp
jae
jno
sub
cltd
jmp
dec
in
das
mov
or
push
test
faddl
cmpsl
fists
popf
mov
insb
stos
xchg
incb
push
in
push
mov
test
pop
adc
sbb
or
mov
mov
jb
pop
hlt
xchg
push
movsb
shrl
in
xor
jne
jne
scas
jmp
leave
int
adc
arpl
subl
jg
mov
lcall
fisttps
or
add
add
add
add
add
pusha
cmpsb
add
fisttps
add
push
mulps
dec
in
sarb
lods
mov
cmpsb
jmp
cmp
gs
pop
xchg
mov
push
insl
lea
popf
in
adc
mov
inc
cmp
int
xchg
jo
sub
or
dec
mov
mov
pop
cmp
movsb
pushf
sahf
sarb
or
out
arpl
or
xor
xor
xchg
call
ja
xchg
dec
dec
sub
pop
xorl
dec
push
ret
mov
es
mov
and
mov
push
pushf
test
in
jne
loopne
push
add
nop
rolb
cmp
setb
clc
mov
addl
ljmp
sbb
insb
loop
cmp
xor
mov
mov
and
jnp
cmp
fwait
neg
das
push
sbb
inc
sub
inc
cltd
pop
push
jo
mov
add
add
mov
jns
xchg
xchg
mov
repnz
jnp
loopne
add
add
testl
rcrl
jmp
outsb
icebp
popa
or
mov
ss
push
add
cmp
loopne
stos
sbb
frstor
call
cld
sti
fwait
je
jl
cmpsb
add
xor
jecxz
in
sarb
addr16
mov
jae
hlt
sbb
lret
cmp
cmp
mov
icebp
add
adc
sbb
out
mov
in
rcll
cwtl
ja
adc
arpl
push
mov
pop
sbb
jge
out
push
repnz
adc
jmp
jecxz
xor
enter
pop
data16
mov
fmull
pop
addb
stc
pusha
mov
cmpsb
xchg
mov
out
push
dec
popa
popa
leave
in
sbb
jge
cmpb
mov
lret
dec
push
ss
xchg
and
jo
mov
mov
sti
inc
push
out
push
mov
pop
cmp
jae
fadd
fsubp
jnp
or
cld
les
loope
add
add
pop
ja
cmovg
or
shl
add
enter
cwtl
repz
in
mov
mov
insl
jmp
icebp
xchg
loopne
jne
xor
test
mov
lret
adc
or
test
scas
orl
cmpsl
sub
push
mov
cltd
popf
add
test
std
mov
lods
scas
mov
dec
xchg
xlat
pop
and
sbb
cmc
and
sub
ret
aad
pop
cmpsb
xor
add
pop
stc
out
cli
test
enter
in
into
nop
test
mov
rorl
daa
jne
insl
inc
inc
xor
leave
insb
leave
mov
int3
fs
fs
push
cmp
mov
add
sub
pop
outsb
add
sub
scas
imul
jp
jne
test
mov
push
mov
cmp
call
hlt
cltd
jle
inc
and
pop
ds
aas
mov
cmp
push
cmp
sub
cld
cli
jle
dec
nop
xor
ret
or
add
add
add
xchg
push
xor
test
mov
fwait
int3
jmp
insl
call
lret
and
ss
outsl
aad
push
sahf
shlb
push
and
stos
inc
mov
sbb
xchg
mov
cmp
ja
dec
xchg
aad
adcb
mov
cmpsl
mov
cmp
scas
mov
cmp
cmp
pop
js
cmpb
xlat
call
mov
mov
mov
pop
cld
mov
push
mov
leave
jge
mov
dec
aaa
loopne
cmc
adc
jg
add
adc
in
jmp
imul
call
mov
mov
mov
xchg
andb
fsub
inc
cmp
andl
dec
jns
aaa
bound
mov
adc
mov
jg
call
ret
dec
xchg
mov
lea
pop
jbe
ja
sti
aaa
out
ja
test
add
add
add
and
add
fldl
cmp
xor
sbb
and
push
lods
push
sbb
cmc
add
dec
sub
icebp
lahf
insb
xlat
fisttpll
data16
sbb
arpl
insl
push
jmp
cs
sub
and
rcll
sahf
repz
xor
pop
jmp
or
jg
push
out
adc
or
stc
xchg
mov
mov
add
loop
add
xlat
out
push
scas
push
lock
jge
pop
addl
xor
inc
add
add
sub
jnp
pop
dec
stc
cmp
mov
jecxz
dec
fwait
and
repz
add
fistpl
or
mov
sub
rcrb
adc
idivb
adc
dec
push
cmp
notl
xor
shlb
and
add
xchg
bound
test
inc
into
data16
push
addr16
sub
add
add
into
arpl
pop
xchg
aaa
pushf
or
add
add
add
mov
xor
ret
fstpt
xor
lret
ljmp
sub
xchg
pop
or
jmp
idivb
pop
sub
rcrb
out
push
push
std
sbb
pop
aad
mov
mov
lcall
pop
aad
push
pusha
cmp
mov
dec
or
repz
les
jo
addb
movsb
stc
aad
int
sbb
pop
add
and
mov
je
xor
xor
add
mov
out
movsb
fs
cs
aaa
imull
ret
pushf
adc
pop
je
push
jmp
adc
xor
mov
mov
push
je,pt
xchg
mov
scas
ss
mov
int
fsubrs
inc
fwait
insb
inc
rolb
pop
pushf
xchg
sub
addr16
imulb
dec
push
es
jno
int3
add
add
add
ja
lcall
mov
sbbb
add
add
add
jmp
mov
leave
mov
aam
fs
push
sbb
jae
xchg
sbb
jbe
les
mov
fstpl
push
inc
ret
xchg
inc
jns
xchg
out
es
loop
das
fdivp
test
hlt
inc
push
jns
arpl
xor
and
fldt
sbb
mov
dec
jg
inc
sub
repz
clc
ja
pop
sub
gs
pushf
mov
and
out
sbb
in
out
mov
push
adc
lea
dec
push
sar
rolb
inc
ret
scas
push
lods
data16
push
sbb
daa
mov
xchg
cs
inc
mov
mov
andl
insl
inc
out
lds
nop
jne
into
into
adc
fnstcw
xchg
scas
notb
pop
inc
adc
fs
pop
cmpsl
test
mov
mov
inc
dec
rcrl
mov
mov
repz
lock
jg
in
and
lahf
add
add
add
sti
in
mov
jbe
and
movsb
pusha
das
mov
pop
popa
aaa
cltd
cmp
cmp
push
dec
unpckhps
push
subb
or
mov
inc
xlat
inc
test
int3
dec
mov
icebp
stc
mov
lret
mov
inc
iret
xchg
xchg
js
popa
jb
lea
adc
cwtl
aam
xor
push
add
out
daa
mov
pop
xchg
cs
fsubrs
xor
mov
loope
out
mov
add
dec
sahf
xchg
scas
shl
xlat
jmp
idivb
inc
jmp
shll
mov
pop
pop
cmp
xchg
mov
stos
ds
mov
std
push
inc
cmp
dec
cwtl
sbb
fildl
lret
cmpsl
sub
cli
stos
stc
cmp
lcall
mov
das
inc
or
es
aad
push
cmc
cmp
mov
out
js
jmp
gs
sbb
inc
fildl
add
add
pop
xlat
fistpl
adc
and
add
add
add
cwtl
adc
mov
pop
and
sub
xchg
jb
and
xor
adcb
cwtl
xor
pop
fadd
insl
xchg
fimull
ds
mov
stc
jmp
cmp
xor
xor
mov
dec
and
inc
push
jle
in
inc
sbbb
rolb
shll
xor
mov
push
fdivrl
jecxz
aaa
cmpb
ljmp
push
inc
inc
inc
add
ficompl
adc
fldcw
mov
inc
ljmp
lock
fbstp
xchg
cmp
insl
mov
xchg
out
mov
push
mov
mov
dec
xor
sbb
jo
or
or
push
mov
aas
popa
dec
sbb
or
or
xchg
popf
xor
arpl
in
lods
leave
cltd
std
lock
jbe
add
add
mov
dec
js
stc
mov
dec
int
aas
lds
and
add
add
add
push
into
pop
cmp
test
in
jae
enter
mov
sbb
div
je
sti
in
adc
mov
xchg
cmc
jge
xor
xchg
std
aam
int3
jecxz
mov
sti
jne
mov
push
and
lahf
adc
mov
jecxz
push
lds
push
sahf
out
je
jmp
xor
push
into
mov
ss
insb
mov
scas
stos
sub
clc
lret
jae
and
cmpsb
std
pop
fcomps
sub
mov
out
shl
sbb
movsl
cmp
push
test
mov
sub
xchg
sarb
movsb
in
fdivrs
xchg
dec
popa
sbb
out
out
inc
aaa
xor
xor
shr
adc
fisubrl
out
push
pop
fstps
popf
inc
shl
lock
xlat
sub
pop
sbb
adc
mov
add
add
insl
repz
fwait
jns
jns
mov
pop
sub
add
add
add
test
clc
jno
dec
mov
or
xor
jbe
cwtl
mov
and
les
inc
pop
add
pushf
iret
popa
mov
dec
es
mov
push
int
xor
or
adc
outsl
mov
mov
scas
jmp
int
mov
mov
inc
lea
pop
adc
push
dec
lods
mov
dec
lcall
cmc
sbb
icebp
lods
outsl
mov
rol
sahf
int3
sbb
dec
dec
ja
ss
mov
mov
jp
mov
arpl
push
cs
push
add
pop
test
cmp
sbb
leave
fisubl
cmp
cmpsb
dec
xchg
pop
pusha
enter
adc
stos
jecxz
adc
jnp
xor
sbb
xor
frstor
in
loope
test
push
test
push
cmp
cwtl
shrb
mov
xchg
xchg
js
pop
xor
adc
mov
iret
push
sbb
popa
pusha
cmp
jnp
adc
jne
xor
les
add
add
add
mov
test
push
push
push
add
push
jge
shlb
cmp
dec
xorl
mov
and
dec
jmp
xor
jle
pop
jne
mov
inc
mov
and
out
jne
push
push
arpl
inc
xchg
in
aam
test
mov
pop
sub
fdivrs
popf
dec
or
pop
mov
orb
pop
lock
pop
jbe
mov
leave
call
ret
xchg
jmp
movsl
xor
loope
sbb
ljmp
cmp
out
add
pop
xchg
rcrl
xchg
cli
lds
ljmp
movsb
gs
scas
dec
push
aad
pop
fistl
mov
xor
roll
cltd
pop
pop
lahf
jns
mov
mov
mov
cmp
jg,pn
pop
bound
cwtl
stc
and
sub
cmp
mov
mov
pop
cmpsl
inc
loop
data16
out
lods
xor
aas
xlat
fistl
das
xchg
sub
xor
add
add
add
jbe
and
popa
cmpsb
sti
ljmp
and
cmp
inc
push
dec
lahf
in
pop
jp
cltd
pop
lock
push
cmp
push
shlb
out
cmp
rcl
dec
inc
test
cmpsb
dec
sbb
pop
push
sti
cmp
ret
rolb
cmp
insb
jmp
inc
scas
cltd
inc
or
pushf
inc
adc
push
jecxz
pop
sar
push
test
adc
jnp
pop
push
cmc
inc
lahf
mov
adc
sti
or
xchg
mov
mov
in
adc
mov
scas
movsb
inc
push
cmp
ret
jmp
add
repnz
xor
dec
icebp
mov
jne
push
mov
jle
shlb
mov
or
add
fwait
loope
mov
mov
outsb
test
sub
jmp
out
push
dec
out
movaps
in
sub
leave
cmp
adc
add
jb
scas
decb
fisttps
loop
or
add
add
mov
xchg
inc
test
jge
push
adc
loop
cltd
lea
lods
test
das
xchg
in
scas
pop
mov
inc
icebp
cmp
fidivrs
mov
adc
mov
loopne
ss
push
mov
mov
push
mov
imul
cmpsl
sub
std
pop
inc
fildll
psubsw
je
sub
out
add
sbb
pop
jge
insb
out
test
test
mov
cmp
out
into
sub
cmp
adc
lods
sub
loopne
insl
or
fiaddl
add
push
loope
sub
pop
push
fnstenv
jns
jge
inc
pop
cs
fidivrl
int
test
xchg
ss
into
jmp
and
aad
pop
movsb
jecxz
cmpsb
mov
mov
jno
aas
pop
inc
stos
xlat
xor
test
gs
mov
js
test
sbb
or
mov
xlat
mov
xchg
cmp
repz
add
add
add
and
js
lcall
mov
inc
cli
xchg
imul
mov
stc
sahf
fnstcw
out
inc
addl
loop
rorl
ja
int3
cld
lods
mov
mov
test
cmpsb
lret
cmpsl
inc
jno
push
mov
pop
xchg
movsb
rcrb
aam
lods
jae
insb
jmp
pusha
insb
xor
imul
enter
stc
into
jmp
xchg
lods
pushf
mov
aad
xor
xchg
shll
mov
fiaddl
mov
pop
inc
xor
inc
sbb
nop
adc
pop
add
out
insb
mov
lods
arpl
sub
repnz
adc
jecxz
js
mov
mov
jp
shll
gs
out
jle
hlt
in
aaa
add
cli
sbb
pop
cmc
mov
popf
mov
add
push
adc
mov
std
cmpsb
cmp
xor
out
jle
push
lods
cmp
lods
aas
mov
jno
pusha
cmp
add
add
add
mov
inc
fwait
mov
ss
cltd
cli
adc
sub
outsl
add
adc
mov
mov
sbb
sahf
dec
xchg
jo
sarl
cmp
pop
mov
or
aad
stos
jg
fnstcw
dec
repz
mov
lahf
lds
pushf
mov
loopne
rcrb
jge
xchg
dec
mov
sbb
pushl
shlb
push
add
or
ja
std
lret
jbe
rclb
push
popf
lret
xlat
shll
jecxz
pop
outsb
negl
mov
mov
and
sbb
xchg
mov
test
lea
rol
sub
inc
scas
mov
jb
popl
or
dec
push
dec
lea
cmp
in
sar
cwtl
inc
push
sub
imul
jo
jno
jae
das
push
jp,pn
call
popa
test
int3
lret
iret
cmp
and
imul
test
add
add
mov
sti
mov
dec
mov
ljmp
add
adc
xchg
mov
mov
mov
sub
movsl
es
test
loop
add
daa
xchg
ret
or
mov
bound
sbb
or
cmpsb
rclb
mov
jg
ss
aaa
data16
inc
fs
jp
bound
push
pop
pop
into
sbb
cmp
dec
sbb
ljmp
or
aad
sub
jb
sbb
mov
lret
pop
add
xchg
push
bound
in
dec
mov
out
inc
or
shlb
insl
repz
cmp
in
mov
adc
xchg
loop
or
cmp
ficomps
sbb
cmp
mov
insl
std
mov
add
jge
js
shr
aas
jno
cltd
mov
jecxz
dec
cmp
or
scas
pop
mov
test
in
in
add
add
into
adc
neg
jge
xchg
jns
sahf
cltd
lods
incb
add
add
pop
cmp
xchg
adc
cltd
movsl
sub
dec
divb
aad
cmpsl
mov
insl
dec
xchg
or
adc
ja
ret
clc
hlt
jnp
js
push
push
int3
sbb
jge
loope
xor
sbb
dec
lods
pop
icebp
std
jge
jae
jns
mov
inc
push
test
out
popa
sbb
pop
fimull
and
lretw
cli
adc
aam
sub
test
jecxz
pop
jmp
add
fidivrs
int
jle
outsb
mov
mov
dec
mov
mov
push
mov
pop
mov
movsl
inc
ljmp
sub
cmp
dec
call
out
adc
loopne
mov
into
in
stos
fs
outsl
pop
inc
sbb
cmp
inc
adc
pop
jge
aad
repnz
rcr
imul
jp
pop
cmp
outsl
jg
jg
sub
fcmovbe
mov
cwtl
dec
icebp
add
add
add
aam
mov
out
mov
push
ficoms
and
loopne
cltd
test
inc
sti
dec
ljmp
pop
in
xchg
stc
sbb
cmp
add
loope
int
nop
adc
xchg
cmp
nop
add
rcrb
mov
test
js
insl
push
cmp
loopne
mov
push
int3
lods
lock
pop
push
and
fistps
repz
jns
sub
push
call
dec
xor
test
lods
gs
decb
pop
jecxz
push
clc
lock
sbb
filds
fwait
movsl
in
mov
push
xor
jmp
test
sti
lock
and
jp
jg
jge
push
pop
pop
add
out
jb
popf
mov
iret
pop
dec
mov
mov
stos
jecxz
movsb
pop
xchg
idivb
sahf
fmull
push
add
jmp
adc
cmp
or
add
out
imul
or
dec
ret
ja
and
aaa
divl
movsb
pop
cmpsb
dec
repnz
add
add
les
sub
lods
pop
add
fmul
andl
into
jbe
in
xchg
rcrl
xchg
xchg
pop
xor
jmp
stos
stos
cli
push
das
scas
popf
add
ficomps
push
cmp
test
shrb
lock
addl
xor
stos
lods
push
roll
sbb
cs
push
nop
aam
add
dec
sub
sahf
and
movsl
stc
and
arpl
add
scas
rclb
movsb
dec
xchg
fsubs
jbe
out
add
ljmp
std
int3
mov
add
rcr
adc
insb
push
push
nop
and
cli
bound
push
enter
test
repz
add
mov
xor
xchg
mov
je
loope
mov
outsl
jno
adc
sub
mov
test
and
repnz
lcall
nop
jmp
gs
sbb
fmull
in
xchg
jecxz
jmp
mov
shll
add
add
add
jmp
push
incl
mov
jp
add
and
aas
cmp
inc
fistpll
mov
std
fbstp
push
nop
mov
call
mov
repnz
stos
stos
imul
in
sbbb
pop
mov
loopne
jg
or
mov
shll
movsl
bound
cmpsb
mov
cmp
mov
test
lret
sbb
data16
cli
insl
mov
lretw
xchg
jecxz
pusha
pop
jne
cltd
in
inc
mov
cmc
xor
scas
xchg
incb
push
rcrl
cmp
jnp
push
push
es
cli
add
jae
mov
add
inc
or
or
dec
pusha
jne
inc
mov
xchg
mov
push
xchg
jmp
jns
adc
out
es
cmp
dec
in
xchg
push
clc
and
dec
dec
add
cmp
repz
inc
dec
repz
add
jle
jne
pusha
popf
pop
orl
add
add
and
jp
iret
pop
and
nop
adc
mov
inc
pop
and
ds
std
pop
imulb
xor
ret
xchg
iret
jl
insl
flds
addb
pop
and
xlat
jmp
shll
nop
lcall
mov
sar
shrb
cmp
mov
jl
lcall
cltd
test
cmpsl
cltd
mov
call
xor
gs
frstor
lcall
jmp
and
icebp
fwait
push
scas
test
push
pop
mov
fs
and
mov
fiaddl
add
jnp
out
or
int3
rcr
imul
jle
sbbb
cwtl
pop
sub
jmp
popa
pop
mov
and
imul
jmp
popf
stos
daa
xlat
mov
dec
in
scas
jle
lret
aaa
pushf
mov
and
inc
cmp
ds
jnp
add
add
imulb
mul
xor
cmp
add
add
add
ja
fsub
pushf
xor
loopne
loopne
jecxz
sub
sti
mov
outsl
aas
xchg
push
cltd
sbb
mov
clc
add
jns
sbb
mov
pushf
add
push
int3
insb
mov
or
insb
jge
int3
adc
test
jbe
mov
and
lcall
jp
xorb
loop
mov
fldcw
xchg
jno
into
mov
inc
fisubrs
inc
gs
jb
dec
cmp
cmp
add
xchg
pop
ljmp
inc
mov
data16
and
cmc
movsb
repz
dec
sbbl
out
test
imul
jno
or
gs
aas
adc
ja
rolb
pop
fmuls
dec
mov
loop
cmp
out
lcall
push
loope
vandnps
std
cld
pushf
sarl
arpl
in
int3
add
add
ret
add
xor
jb
jae
loopne
ds
testb
add
add
xor
mov
xor
jnp
push
inc
cmp
or
orb
pop
xchg
pop
pop
cltd
clc
xchg
nop
push
or
sub
daa
adc
sub
xchg
mov
lahf
sbb
fs
fmull
call
das
dec
mov
jecxz
outsb
sbb
leave
xchg
lock
inc
sbb
push
xor
shll
and
mov
sbb
sarl
xchg
lds
dec
clc
jp
sbbl
cmp
jecxz
xchg
add
xor
sbb
repz
gs
shl
test
pushf
mov
in
inc
lret
pop
sub
out
out
push
and
pop
incb
pop
cli
repnz
jno
sbb
shrl
xchg
leave
cltd
ficoml
xchg
dec
hlt
push
in
loop
ds
cmp
stos
movsb
pop
enter
pop
inc
mov
pop
pop
sbb
nop
adc
int
in
idivl
js
mov
add
loop
testl
add
lahf
arpl
sbb
jae
les
lret
adc
jmp
fcomps
add
shlb
int
adc
sbb
xchg
cli
stos
pop
xorb
jp
outsb
lds
jne
dec
nop
rclb
pop
int3
nop
inc
gs
pop
stos
int
dec
jo
dec
jno
imul
cltd
adc
add
jmp
xchg
and
negl
push
cmpsb
xor
push
sub
or
in
inc
js
aad
push
push
imul
jl
insl
sbb
mov
inc
jl
push
push
out
cmpl
add
ss
mov
sahf
pop
sbb
ret
lahf
std
sub
xchg
add
mov
sarl
xchg
scas
xchg
repnz
sub
push
cmp
ljmp
lods
jp
sbbl
dec
push
sub
or
shrb
pop
mov
stos
fnstcw
pop
in
mov
subl
add
add
jecxz
inc
cli
aas
into
lret
adc
or
fs
add
add
add
repz
dec
ficompl
sbb
mov
xchg
mov
jbe
pop
loopne
movsb
jp
cmp
daa
popf
cmp
xchg
mov
xor
daa
cmp
loopne
cmp
fxch
test
inc
cld
es
jmp
add
lret
or
popa
fcmovnbe
xchg
push
mov
stc
mov
sub
pop
jp
fdivl
cmp
adc
stc
stos
test
int
fsub
cmp
or
push
icebp
sub
pop
or
fstl
aad
sahf
out
jne
stc
mov
cmp
mov
xchg
xchg
pop
pushf
inc
les
mov
flds
jle
ret
enter
mulb
ret
xchg
insl
test
dec
inc
mov
push
add
pop
push
mov
mov
mov
shll
fsts
sbb
nop
stos
jbe
push
cs
pop
jmp
mov
js
mov
lcall
mov
add
add
add
aam
adc
ret
shl
push
dec
xor
lock
sub
loopne
fadd
shrl
repz
in
and
ja
sub
jne
jge
dec
xchg
lret
sbb
xchg
das
sbb
fsubrs
hlt
push
sub
sbb
inc
int
add
cmp
arpl
mov
pushf
outsb
and
mov
xor
mov
sub
or
cmp
xchg
sub
mov
test
insb
or
xchg
cmp
adc
scas
testb
std
sbb
and
mov
pop
stos
xchg
subb
ds
jp
je
mov
xorb
sti
adc
pop
push
popa
push
aas
popf
ljmp
pop
fs
jno
mov
lret
push
inc
imul
sub
lock
outsl
das
dec
sbb
loope
xor
aaa
jae
cltd
dec
mov
jno
lret
fisubrl
add
add
aam
rcrb
or
fstps
sub
push
aas
int
sbb
push
test
out
fcompl
pop
inc
jo
sbb
push
imul
lock
jne
or
and
add
rorl
add
dec
xor
iret
mov
ja
stos
call
jbe
std
hlt
sti
sysret
adc
mov
aas
inc
test
pop
mov
cmpsl
pop
cmpsl
rol
test
aaa
inc
jecxz
jge
test
jb
and
stos
stc
and
cmp
mov
inc
je
les
cwtl
hlt
ds
pop
das
mov
pushf
mov
jmp
jge
adc
sub
int
cmp
loop
ljmp
cld
mov
cmp
xchg
mov
aad
mov
mov
push
jno
sbb
or
push
cmp
mov
mov
dec
xchg
out
mov
sub
lahf
and
ljmp
add
ds
into
nop
out
cwtl
jle
push
sub
dec
add
sti
add
add
add
adc
cmp
xor
jnp
mov
insb
jle
stc
pusha
mov
push
lods
add
sbbl
cmpsl
fwait
sbb
adc
ja
out
and
fsubrl
xchg
pop
sub
loopne
and
pop
push
aas
jecxz
cmp
out
jp
mov
mov
ss
jecxz
push
daa
mov
pop
jns
nop
paddsb
mov
dec
add
add
dec
call
outsl
insb
mov
mov
add
and
cli
cmpl
or
adc
push
cwtl
adc
mov
pushf
adcb
stos
stc
cmp
cmp
push
mov
cmpsb
outsb
sbb
leave
test
pop
jb
or
pop
dec
jge
xor
daa
adc
lods
cltd
daa
shll
sub
out
xchg
add
xor
frstor
mov
mov
arpl
adc
lea
adc
sub
add
add
test
jg
push
pop
push
mov
je
add
add
add
syscall
pop
dec
xchg
clc
insl
dec
test
test
xor
mov
scas
jge
movsb
outsb
or
mov
pop
mov
dec
sbb
lret
pop
call
jge
out
mov
xor
xchg
fxch
push
jg
shll
adc
js
pop
push
xchg
ds
outsl
xor
and
push
adc
jg
gs
divb
daa
imul
shll
arpl
mov
xor
xchg
in
inc
adc
leave
sti
add
enter
push
dec
xor
pop
mov
push
xor
aaa
insl
adc
hlt
add
push
push
ljmp
les
in
pushf
mov
mov
jne
dec
xor
mov
scas
cmp
ret
cltd
or
fidivs
push
mov
mov
xlat
sbb
insb
sub
lds
pop
stos
and
push
push
cmpsb
add
add
add
movsb
push
in
cmc
jne
sbb
js
lcall
add
add
aad
xor
xchg
mov
sub
cmc
repnz
add
insl
scas
cmpsl
clc
sub
mov
sbb
ds
fs
or
xor
adc
xor
lods
mov
dec
loop
aaa
sarb
xchg
and
mov
pop
arpl
mov
outsb
mov
nop
sti
dec
lods
xchg
lods
pop
or
add
pushf
aad
gs
cmp
pop
cltd
into
mov
mov
xor
push
cmp
cmp
push
fs
mov
mov
test
lds
movsl
addr16
and
gs
add
and
inc
cmp
fistpll
lea
mov
in
inc
das
movsl
inc
push
mov
in
ret
pop
mov
mov
mov
bound
push
xor
stos
sbb
pop
es
and
push
mov
xor
sbb
add
add
out
shlb
aas
out
int3
mov
pushl
add
add
add
jl
popf
leave
add
dec
int
addr16
cltd
int
daa
scas
testb
inc
pop
sbb
jnp
mov
scas
pop
iret
lds
mov
fdivl
and
pop
cmpsl
pop
je
xchg
mov
push
adc
les
mov
mov
jb
lahf
mov
inc
lea
lahf
jge
cmpsb
or
imul
out
lahf
call
or
sub
add
xchg
jg
fnstsw
xchg
sub
stos
dec
mov
cmp
or
out
rcrl
inc
sbb
gs
rolb
lock
inc
dec
xlat
jle
or
cli
and
jae
loopne
test
dec
mov
jnp
mov
push
lea
outsl
jae
adc
cmovnp
mov
ljmp
andl
fmul
mov
mov
mov
hlt
mov
fiaddl
push
ficoms
dec
mov
outsl
mov
or
mov
and
pop
dec
push
cmp
add
add
inc
fsubs
nop
mov
fiadds
out
pop
inc
mov
iret
jl
iret
repz
popa
out
cmp
rcll
fildll
xchg
adc
mov
das
stos
clc
mov
rcrb
out
xchg
pop
and
pop
mov
jns
sbb
sarl
mulb
cmovbe
pop
out
lods
xor
mov
pop
pop
fcoml
push
das
push
cld
inc
decl
push
push
sbb
sbb
call
dec
cwtl
or
das
aad
test
icebp
jg
sub
pop
cmpsl
shrl
ud2
xchg
in
jo
sub
arpl
push
jae
cwtl
or
ffreep
pop
mov
jge
int
inc
xchg
test
hlt
cmpb
fildl
repnz
test
xchg
popf
stos
push
decb
fwait
out
sbb
mov
std
xchg
and
mov
rcll
xor
xlat
enter
pop
sbb
mov
dec
rol
lret
clc
cmc
inc
stos
repz
jg
push
test
add
add
add
les
cs
sbb
mov
dec
jne
inc
sbb
mov
adc
add
stos
push
pop
mov
mov
mov
movsl
xor
icebp
aad
mov
cmp
push
stos
mov
fwait
test
push
aaa
push
push
xchg
pushf
test
insb
insb
adc
mov
add
pop
bound
pop
push
jns
stc
ficompl
loopne
xor
jge
movsl
inc
pushf
jno
stos
adc
mov
adc
and
mov
shl
incl
lock
in
int3
dec
roll
pushf
push
lgs
jecxz
push
fcmovnbe
iret
test
or
frstor
lods
cwtl
mov
push
xchg
jge
adc
mulb
jp
cs
xchg
xchg
mov
xor
fs
cmp
jecxz
or
mov
data16
insl
pop
xchg
push
fst
and
js
add
std
aaa
mov
shll
jb
add
add
add
add
mov
mov
xchg
jne
aad
fisubl
sub
or
xor
andl
xchg
mov
adc
nop
adc
mov
xchg
and
sahf
adc
lds
rcr
xor
or
cmp
dec
and
fadds
lret
aas
xchg
mov
pop
xchg
pop
xchg
push
sbb
aas
into
or
cmp
iret
fwait
or
loop
out
jb
pop
pusha
repz
fimuls
mov
cli
mov
sub
std
cmp
in
push
sub
inc
mov
imul
mov
or
sub
arpl
add
outsl
in
lds
jb
ljmp
hlt
jo,pt
pop
outsb
icebp
adc
xchg
lret
push
dec
pop
dec
jg
loop
sbb
bnd
mov
push
xor
movsb
nop
xchg
pushf
insb
dec
ja
mov
lods
jb
je
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
inc
add
ss
add
ss
add
ss
add
ss
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
adc
in
lock
in
dec
fs
test
or
pop
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
