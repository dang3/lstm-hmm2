push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
jne
cmp
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
out
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
into
cmpsb
test
jl
jmp
inc
sbb
add
xchg
je
in
push
cmp
test
cld
loopne
and
fwait
jmp
outsl
aas
dec
and
cwtl
push
jp
dec
cmc
mov
sub
nop
and
or
dec
mov
les
ret
inc
loopne
mov
popa
fidivl
js
adc
sahf
je
mov
rorb
mov
ds
push
imul
fisubrs
xchg
and
bound
sub
jns
add
jnp
outsl
aaa
in
stos
mov
or
dec
pop
mov
xor
fistps
mov
lcall
and
pop
test
mov
scas
xor
mov
sbb
adc
lret
push
ret
fstp
ret
sub
lret
jp
push
jmp
icebp
dec
mov
js
mov
ja
pop
lea
xchg
aad
test
std
adc
je
push
ljmp
fisttps
push
jae
cld
mov
in
add
xchg
clc
mov
shrb
nop
jecxz
sub
cmp
xchg
jno
pop
pop
repz
aam
jl
sub
les
jg
cmp
mov
jmp
clc
icebp
mov
icebp
ficompl
shll
jo
jo
sbbb
and
push
inc
or
gs
sbb
sub
in
insl
cltd
or
adc
mov
xor
mov
addr16
pop
add
jns
pop
add
jmp
and
sbb
xlat
mov
js
adc
and
adc
loop
aaa
xchg
movsl
pushf
xor
pushf
mov
rorl
mov
pusha
lods
shr
jae
rorl
dec
fdivl
test
cmpl
roll
xchg
aad
insb
lcall
jle
sub
fs
decl
and
pop
xchg
or
movsb
mov
xor
pop
lcall
test
rcl
lds
fwait
inc
mov
sbb
lret
repnz
sarl
les
jl
pop
add
mov
je
dec
int
cmpsl
sbb
cwtl
popf
or
cmpsl
out
pop
push
mov
ret
daa
outsl
pusha
std
xchg
test
ljmp
nop
sti
popa
lods
lcall
cld
inc
cmp
push
stos
in
jb
push
lock
sub
mov
lds
xchg
addr16
push
aam
push
push
add
push
fistpl
adc
fstpt
gs
mov
xchg
fwait
inc
mov
movsl
arpl
inc
push
scas
fchs
xor
shll
out
repnz
repnz
pop
or
es
scas
mov
fsubs
jl
mov
add
sbb
test
push
mov
hlt
push
inc
aad
mov
es
and
outsl
loopne
loope
jecxz
mov
pushf
jmp
push
insl
jp
test
lahf
fsubrp
inc
sub
mov
ss
lret
cmp
in
daa
mov
mov
hlt
mov
inc
int3
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
add
jl
jo
jle
jo
movsb
test
jmp
cld
je
xchg
mov
out
mov
js
cmc
je
test
ds
dec
jl
adcl
jp
ja
mov
incb
imul
sub
ss
cmp
shrb
fimuls
dec
pop
je,pn
push
in
pop
mov
and
push
out
movsl
mov
xchg
push
iret
pop
cltd
sub
mov
pop
jno
push
jns
ds
repz
pop
xlat
cmp
mov
cmp
orl
cld
in
and
mov
in
push
cmp
add
icebp
mov
into
cli
mov
fwait
dec
mul
pop
inc
jns
sub
cwtl
inc
popa
pop
sub
adc
call
test
push
xchg
fimuls
dec
xchg
xchg
push
xlat
lea
dec
lods
mov
or
pop
mov
push
cmp
and
fs
aaa
cmpsb
jne
adc
loope
adc
cwtl
push
sbb
jnp
out
mov
cs
ds
sub
sub
cmp
aad
popf
mov
clc
and
inc
xor
cmpsb
or
or
nop
fwait
jmp
and
pmaxsw
add
adc
adc
in
mov
cltd
pop
imul
popa
xchg
stos
das
cmp
xor
add
ds
out
jg
mov
movsb
inc
popa
mov
aad
pop
adc
mov
jne
lods
shlb
cs
enter
jp
hlt
push
test
cld
stc
inc
test
xchg
icebp
sub
sub
cmc
fildll
pop
sbb
je
test
xlat
jmp
mov
sub
mov
loop
mov
sub
push
scas
push
hlt
adc
loop
push
or
inc
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
stos
fwait
mov
jo
jo
hlt
sbb
or
xchg
inc
and
cmpsl
out
daa
jl
sub
popa
jg
aad
cmp
ficoml
dec
pop
aas
testb
enter
cmp
out
bound
xchg
mov
pop
in
stc
mov
std
std
scas
jo
adc
push
movsb
and
pushf
dec
fsts
je
outsb
sbb
cmp
stos
push
xacquire
fcom
scas
arpl
nop
cli
in
aad
lcall
andb
mov
aaa
mov
hlt
ja
lods
fbld
adc
mov
adc
jge
in
add
aas
pushf
cmc
mov
sti
gs
cmp
push
mov
outsl
scas
lret
cmp
pop
push
into
cmp
push
imul
hlt
test
shl
jecxz
push
and
lock
in
cmpsb
insb
sub
and
push
and
inc
xor
mov
mov
or
es
xor
in
xchg
cmp
sbb
sbb
dec
dec
cwtl
mov
mov
jge
shlb
lcall
adc
push
es
jne
es
mov
or
ret
and
push
push
push
xchg
mov
inc
leave
in
outsb
cwtl
mov
out
mov
gs
cld
jnp
inc
sbb
repnz
mov
jns
imul
pop
push
push
jne
adcb
vpsllw
sbb
dec
sbb
mov
cs
cmpsl
xor
out
add
fisubrl
js
ljmp
divl
fcompl
or
mov
mov
imul
pushf
lret
mov
cmp
arpl
test
pop
imulb
gs
fistl
mov
mov
out
mov
test
repnz
ret
in
push
les
stos
cli
pop
jl
movsb
and
cltd
dec
movsb
sbb
fsub
jbe
inc
lock
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
fbstp
jo
jo
rclb
jecxz
or
jmp
mov
out
jmp
int3
sahf
movsl
sbb
fbld
orb
xchg
sub
push
jmp
mov
loop
mov
sbb
mov
int3
loope
stos
jbe
sbb
mov
xchg
test
mov
mov
into
sub
push
fwait
outsb
inc
mov
mov
lret
pop
lods
dec
and
lock
or
pop
aaa
mov
popa
sahf
cmp
shlb
pushf
sub
push
out
shrl
add
xlat
mov
dec
fcmovb
arpl
movsl
and
sarl
and
dec
push
mov
test
cmp
adc
cmp
inc
mov
fimuls
jo
mov
fwait
shl
out
outsl
test
push
or
fidivrl
sbb
subb
xor
xchg
icebp
adc
push
and
xor
dec
and
enter
lods
sbb
lret
adc
int3
in
icebp
pop
xchg
dec
cmp
xchg
imul
adc
insb
js
mov
mov
scas
mov
jnp
push
xchg
fwait
loope
mov
pop
xchg
xchg
push
xor
ss
add
scas
mov
mov
mov
mov
xchg
ljmp
sti
push
jge
shll
sbb
ret
xchg
xchg
mov
cltd
xor
das
pop
test
mov
sub
jnp
mov
push
mov
test
cwtl
in
insl
pop
pushf
cmp
push
sub
popa
bound
aas
jo
idivl
dec
xchg
xor
and
jbe
roll
ficoms
in
ljmp
and
cwtl
jle
xchg
hlt
push
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
jl
jo
jo
jo
jo
enter
xchg
clc
cmc
mov
dec
adc
out
out
std
xor
std
loop
pop
mov
jnp
js
popf
mov
jbe
xchg
mov
inc
cmp
out
add
xor
out
loop
or
insl
mov
xor
mov
das
ljmp
hlt
cltd
shr
inc
add
or
add
mov
sbb
add
push
out
mov
cmp
push
and
fs
xchg
adc
pop
or
addr16
dec
mov
ljmp
dec
lret
add
sbb
push
pop
mov
pop
jbe
add
rolb
arpl
add
leave
arpl
repz
jl
in
in
sub
push
dec
fmuls
popa
xchg
push
out
fcoms
sbb
mov
cld
sub
pop
sub
add
mov
rcrl
xchg
sbb
incb
imul
mov
aas
mov
add
aam
hlt
cmp
clc
fisubrs
shll
loope
sub
fisubrs
and
gs
adcb
xchg
cli
xor
push
mov
ljmp
xchg
inc
mov
mov
fnstenv
adc
mov
or
jmp
shl
mov
push
pop
pop
pop
popa
mov
mov
imull
sub
ret
insl
int
negl
jl
xchg
push
mov
mov
dec
sbb
ret
push
xchg
mov
mov
sbb
xchg
or
or
aam
aaa
push
gs
mov
jl
lcall
test
sub
cmp
jge
into
xchg
lods
cmpl
mov
rcl
sub
aam
pop
jne
sbbl
xchg
push
data16
push
fmuls
cmp
jmp
ret
gs
cmpsl
insb
sbbb
or
jo
jle
jo
cmp
incl
dec
add
push
inc
mov
jnp
fbstp
push
js
dec
pop
jb
aam
or
cmp
shll
cmp
dec
add
push
lret
jnp
pop
std
push
add
xchg
scas
test
cmc
push
cmpb
push
lods
xor
or
mov
push
fdivrl
ret
js
dec
or
inc
jns
pop
add
notb
leave
mov
insl
ret
mulb
repnz
dec
inc
loope
ret
pop
fnstenv
iret
enter
xlat
sub
jae
rcrl
push
fldenv
mov
xchg
sbb
ret
js
outsb
jmp
cmpl
stc
imul
jb
mov
sub
pop
cmp
cmp
dec
fadd
fdivrl
addr16
leave
jnp
leave
sub
fcomp
cltd
lahf
inc
push
jnp
aas
lret
jae
and
imul
test
popf
cwtl
add
pop
shll
jbe
fldenv
cmp
mov
mov
add
push
or
xor
adc
imul
imul
xchg
cmpsb
dec
jmp
mov
movsl
jge
fwait
insl
dec
cmp
pusha
or
or
mov
movsl
cwtl
notb
loopne
or
mov
cmc
jge
ret
cmp
push
or
testl
jle
mov
scas
jb
jbe
and
and
arpl
fwait
ljmp
out
inc
mov
push
mov
ss
fisttpll
lods
sub
pop
mov
movd
cmp
mov
fidivrl
out
lods
iret
repnz
xchg
inc
dec
and
mov
movsl
cltd
inc
fs
into
pop
jb
sarb
test
popa
fmulp
out
in
push
mov
repz
mov
jp
sbb
test
inc
in
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
add
jo
jo
enter
mov
xor
jb
fwait
pop
test
sarb
mov
xor
jb
je
mov
mov
mov
mov
push
dec
je
cli
and
in
aad
je
insl
es
cwtl
aad
pushf
push
repnz
aam
in
mov
xlat
jecxz
push
movsl
mov
cmp
idivl
push
popa
iret
fmuls
sub
popf
jecxz
loop
adc
ja
adc
loop
in
push
cmc
mov
pop
mov
jecxz
or
int3
jmp
iret
rclb
and
inc
in
push
cmc
repnz
shlb
mov
call
stos
ljmp
mov
push
pop
or
pop
inc
dec
mov
mov
xchg
cmp
je
add
xchg
mull
repz
and
or
sub
sarb
add
ret
lds
dec
pop
inc
jge
inc
jo
xor
cmpsl
sbb
cmp
or
cmp
inc
inc
jno
dec
push
in
jbe
cwtl
cmpb
inc
xor
adc
insb
dec
out
lret
lret
faddp
sub
icebp
mov
ljmp
sahf
inc
mov
push
xchg
dec
outsl
js
xor
clc
popf
ja
clc
mov
icebp
test
ret
xor
out
das
adc
mov
mov
or
and
jmp
addr16
orb
hlt
outsl
push
ds
aaa
jno
jge
sahf
lods
js
outsl
movsb
scas
sarl
dec
mov
in
adc
in
dec
push
pop
dec
ret
cs
clc
push
mov
jbe
push
push
dec
sub
dec
add
inc
mov
mov
iret
push
call
out
or
sbb
mov
add
test
loopne
negl
mov
add
rorl
xlat
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
pusha
jo
jo
jo
jo
lcall
dec
cltd
and
dec
pusha
mov
int3
cwtl
or
divb
fildl
jne
cs
xchg
or
and
scas
test
sbb
mov
jnp
pop
dec
in
out
imul
pop
cltd
ficoms
jno
inc
test
ficompl
jge
stos
mov
jmp
jb
ret
popa
pushf
or
lcall
push
repz
sub
imul
push
lcall
xchg
stos
jp
jno
sub
sbb
inc
and
cmpsb
jb
lods
call
or
popa
jne
jle,pn
repz
loop
imul
sti
and
arpl
outsb
lea
in
and
cmpsl
sbb
adcl
sub
inc
pop
sbb
cmp
scas
or
xchg
push
and
jbe
mov
scas
mov
mov
movsl
fdivr
pop
test
sub
and
push
out
adc
mov
add
rclb
nop
sarb
xchg
jge
mov
cs
inc
xchg
in
mov
dec
push
pop
dec
inc
pop
jo
or
gs
enter
es
inc
inc
jno
jae
cmp
in
xchg
xor
popa
jb
lds
fs
xchg
cwtl
mov
push
adc
pop
and
rol
arpl
imul
push
repz
xlat
xor
mov
xor
mov
cs
push
lods
test
mov
js
mov
push
cmp
or
mov
jle
and
fstpt
pop
gs
and
aaa
sub
clc
add
pop
pop
stc
mov
test
dec
jge
add
dec
shl
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
cmpsb
sahf
or
and
mov
loop
loope
dec
mov
push
stc
pop
push
popa
mov
data16
shrl
add
mov
popa
push
xchg
les
cmc
push
ja
mov
clc
pop
mov
rcrb
loopne
sbb
in
jmp
je
or
dec
jb
mov
movsb
cs
mov
xchg
int3
sbb
ljmp
xchg
in
into
xlat
test
aas
jecxz
iret
jbe
sbb
insl
clc
fwait
cli
inc
xchg
orb
push
jno
add
lcall
jle
mov
imul
and
imul
hlt
xchg
xchg
mov
mov
aad
cmp
outsl
in
xchg
adc
cmc
push
xchg
xchg
xchg
addr16
or
in
stos
pushf
sbb
jg
fcmovu
dec
daa
fisubl
loope
mov
mov
pop
mov
data16
stos
dec
lods
fisubrs
fdivrp
mov
pop
pop
cmpsl
sbb
out
aas
adc
adc
xchg
dec
mov
cwtl
xor
cmc
inc
mov
mov
and
cmp
aam
cld
shrb
repnz
xchg
aas
xchg
xchg
stos
mov
stos
ja
push
ret
jmp
adc
push
xor
cmp
or
repz
xchg
lock
sbb
push
sbb
shll
push
sbb
shll
test
pop
mov
push
mov
aaa
rcll
pop
pushf
mov
adc
add
movsl
iret
jbe
aaa
into
cmp
in
jecxz
mov
fmulp
stos
cmp
popa
ja
push
or
or
cwtl
imul
fwait
xchg
loop
sub
cmp
sti
jb
cld
out
add
mov
dec
inc
add
icebp
sbb
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
pop
out
outsb
out
testl
loop
dec
rcrl
loop
into
adc
inc
push
sbb
push
or
popf
cmp
mov
cmp
pop
pop
lods
push
adc
iret
pop
lret
test
pop
add
bts
push
push
mov
bnd
cs
mov
sbb
in
sub
fldcw
jle
popf
out
sub
fadds
jmp
push
gs
aam
mov
pushf
daa
out
call
fs
jb
dec
pop
loopne
mov
inc
test
and
mov
imul
adc
mov
add
and
mov
cmp
mov
add
aaa
xlat
test
adc
movsb
mov
sbb
push
ret
xor
mov
ss
fldl
cmc
pushl
push
std
out
test
test
adc
jl
fstpl
sti
jbe
test
or
mov
out
movsb
mov
mov
fstps
mov
dec
push
shlb
cmpsl
mov
mov
push
dec
outsb
xor
outsl
mov
xor
les
rclb
lods
repz
or
lea
dec
fmull
aam
mov
repnz
or
jnp
push
pop
pop
bound
inc
js
je
jne
or
sbb
sub
and
inc
mov
adc
lret
pop
mov
xchg
sbb
pop
xchg
lock
das
lods
pop
je
pusha
inc
ss
lret
or
fisttpll
out
fbld
mov
test
xchg
mov
sbb
insb
pop
jecxz
jmp
enter
aam
jp
fs
fdivrl
adc
sub
cltd
sub
mov
pusha
sbb
rorl
pop
mov
lods
sbb
mov
mov
mov
test
and
es
push
nop
test
jge
fcmove
jmp
fdivl
jmp
sarb
stos
aaa
mov
stc
mov
movsb
scas
mov
scas
inc
pop
mov
xchg
and
cmp
in
data16
add
in
or
fwait
push
gs
adc
mov
mov
inc
mov
inc
lret
xchg
pop
jnp
sarb
popa
stos
data16
pop
repz
rol
std
dec
lock
mov
mov
in
std
lahf
js
jbe
insl
pop
jbe
inc
mov
out
inc
ja
jg
lcall
in
or
add
in
add
jmp
mov
ja
push
aas
xchg
out
adc
jo
mov
jge
xor
or
and
shrb
call
stos
fisubrl
mov
popf
push
lret
fisttpll
lock
mov
push
jb
inc
cmc
push
add
mov
scas
sti
jg
hlt
cmp
out
push
sbb
dec
adc
lcall
loop
sub
stos
int3
pop
addb
leave
loopne
test
outsb
xchg
push
xchg
jb
mov
cs
xchg
or
sub
cmp
outsb
fs
aam
push
std
nop
es
rorl
add
sub
fcompl
mov
xchg
lods
fs
sti
adc
fucomi
pop
mov
sub
pop
lock
pop
jbe
push
or
and
sarl
test
sub
out
xchg
mov
hlt
addr16
lock
sbb
sbb
leave
dec
inc
xchg
or
and
add
add
gs
hlt
int
sbb
lahf
adcb
mov
jp
scas
sbb
std
ds
adc
jns
rcrb
shll
mov
sbb
xor
jge
cli
aas
imul
pop
cmp
gs
cmp
cwtl
aam
insb
gs
shrb
in
add
or
ret
test
loopne
nop
jb
in
mov
in
sarl
pop
mov
push
lcall
sub
fstps
dec
out
repnz
ds
mov
fisubrs
cwtl
icebp
fcmovnu
stc
js
inc
addr16
sub
sub
pop
stos
mov
or
and
cmp
cmc
fstl
add
mov
pop
jle
loop
pop
xor
sti
scas
push
dec
hlt
mov
lcall
xlat
insb
or
ljmp
xor
fbstp
outsb
gs
pop
dec
mov
pop
scas
sbb
sub
sbbl
add
cmp
mov
flds
push
push
es
leave
cmp
mov
mov
lods
cli
ljmp
and
outsl
popf
mov
rorl
push
mov
xor
add
testb
das
or
mov
mov
ja
xor
ljmp
daa
xchg
cmpsl
daa
ljmp
fisttpl
xchg
pop
negl
stos
repnz
repnz
cld
mov
lea
push
fcomi
mov
imul
sbb
cmpsl
cwtl
cmc
fwait
mov
xchg
loopne
mov
mov
mov
xor
add
jmp
fistl
loope
lds
add
push
inc
adc
pop
jo
mov
es
xchg
adc
add
sbb
mov
jns
sahf
and
cmp
and
rcrb
loopne
cli
cmpsb
xchg
int
ds
dec
or
mov
push
repz
lods
mov
cmp
loope
std
fldcw
aad
push
dec
test
sub
pop
xchg
xor
ds
ror
add
gs
fwait
aad
cmp
aad
xor
add
bound
dec
pop
xchg
mov
iret
and
mov
out
aad
lods
add
fcmovbe
loop
pop
push
push
adc
and
mov
or
mov
enter
int3
test
inc
loopne
xchg
data16
js
mov
js
pusha
fstpt
dec
lea
pop
outsl
or
sub
sarb
sub
and
and
push
js
jns
mov
push
outsb
into
mov
xchg
bound
adc
fimuls
fidivrl
jle
mov
cmp
cmp
ss
shlb
scas
mov
push
dec
popf
aam
mov
sti
add
jle
out
xchg
cmc
fdiv
fs
sub
clc
and
lret
mov
pop
mov
push
xchg
or
mov
stos
xchg
add
insl
setns
or
inc
pop
leave
jo
scas
mov
ret
add
fists
aaa
pop
std
sub
call
shll
xchg
sub
push
pop
loopne
in
xchg
push
mov
mov
jge
push
xorl
lahf
mov
cmpsl
iret
sub
repz
sbb
es
pop
idivl
mov
push
stos
mov
mov
mov
or
movl
add
clc
pop
sbb
aas
xchg
and
negb
pop
jno
mov
pop
inc
inc
push
add
in
mov
loope
pop
xchg
push
arpl
ror
push
pop
mov
lods
stos
pop
push
mov
pop
cmc
testl
mov
jae
inc
fistl
into
add
faddl
push
out
inc
or
mov
mov
in
pushf
lret
or
in
sbb
mov
insb
dec
ret
cltd
dec
and
ret
cmp
jle
xor
sarl
push
cmp
pop
pop
pop
imul
out
sbb
int3
lret
jecxz
mov
push
lods
repnz
adc
cli
xor
mov
mov
or
scas
cli
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
mov
or
cmp
jo
jle
jo
fcmovnbe
les
arpl
mov
jp
adc
icebp
dec
mov
addr16
dec
clc
fnsave
or
jmp
cmpsl
pop
mov
das
pop
sub
xor
cmp
std
movsl
cld
sahf
inc
roll
mul
lods
ljmp
xchg
xor
mull
xlat
xor
ret
shll
and
loopne
push
stos
pop
sub
pop
cmp
dec
jbe
cmp
add
sbb
movsl
xchg
adc
loopne
inc
mov
mov
inc
and
and
stc
in
adc
xlat
jmp
xchg
mov
je
shl
xchg
daa
sbb
sub
rcll
shll
dec
pop
cmp
out
cmp
sbb
pop
lods
cli
fsubrs
int3
xorb
adc
cltd
sub
test
or
popf
es
dec
xor
push
inc
jle
add
dec
les
inc
outsl
test
cmp
std
out
push
push
rcrl
mov
ds
aaa
test
push
ja
insl
aaa
mov
mov
add
inc
lods
pushf
adc
jl
jp
rcll
lret
jo
mov
test
divb
lret
out
pop
sahf
mov
inc
xchg
neg
jns
mov
jle
ss
das
bound
or
and
pop
mov
cmpsl
jne
push
shl
fldenv
fdivs
xchg
inc
insl
ficomps
outsb
mov
inc
add
sub
stc
mov
mov
int3
int3
push
push
scas
cs
pop
rol
ss
inc
int
pop
je
push
dec
fcomi
fiaddl
sub
push
jb
mov
call
mov
and
lock
scas
push
add
push
push
push
adc
cmp
inc
repnz
xor
sti
and
ljmp
ljmp
pop
iret
cmp
jmp
outsb
scas
cwtl
inc
mov
mov
sub
stc
cmc
mov
push
arpl
jl
jl
fwait
aam
scas
mov
dec
in
rcl
inc
mov
out
cmp
jl
lahf
int3
jmp
clc
daa
pop
dec
test
or
dec
mov
adc
jecxz
mov
sbb
pop
mov
pop
mov
rol
mov
sbb
jb
movsl
jae
add
fimuls
pop
fwait
cmc
mov
cmp
insb
pop
std
cmp
xchg
js
sbb
jle
inc
dec
jmp
test
sub
test
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
adc
cmp
bound
lods
jl
xchg
movb
imul
sub
sub
pushf
out
add
add
sbbb
jnp
jne
shl
xchg
jp
and
cmp
or
xor
adc
sub
cld
lcall
jae
or
lahf
loopne
push
and
lahf
aas
add
andl
aam
adc
inc
xor
sub
inc
push
icebp
scas
movsl
repnz
add
mov
int
cli
xor
mov
pop
lea
lcall
pop
push
fwait
dec
sub
das
popa
lahf
icebp
movl
rcll
movsl
sub
xor
dec
je
sbb
cmp
addl
fidivrl
mov
inc
adc
sarb
dec
mov
cltd
mov
sbb
ret
orl
jle
ss
mov
mov
push
mov
push
mov
mov
xor
frstor
movsb
adc
stos
dec
mov
nop
dec
mov
lahf
mul
xchg
data16
lret
ret
jae
adc
repz
inc
cmp
add
mov
jmp
movsb
push
add
mov
adc
fxam
test
mov
sbb
ror
clc
xor
xor
addr16
pop
dec
push
dec
push
mov
xor
or
jo
xchg
and
ljmp
insb
enter
stc
or
push
dec
daa
add
add
sahf
mov
sub
xchg
jns
mov
out
adc
nop
and
ss
int
xchg
sbb
inc
bound
xchg
ret
aaa
das
leave
xor
stos
das
and
jmp
mov
les
pushf
pop
mov
jbe
dec
pop
stc
mov
mov
aad
xchg
pop
outsl
inc
inc
outsb
push
mov
and
mov
pop
sbb
dec
mov
pop
xchg
mov
mov
cli
inc
pusha
inc
jp
sbbb
push
and
adc
inc
leave
mov
mov
cmpsb
lods
cmp
lret
clc
fldl2e
adc
jg
ljmp
mov
sub
dec
neg
mov
aad
push
and
add
inc
mov
and
push
fisttpl
sub
movsl
cmpsb
mov
out
mov
jecxz
fisttps
in
xchg
or
test
insl
pop
test
shrl
pushl
dec
and
push
subb
imul
jge
and
jne
xchg
pop
dec
xchg
adc
test
fcoms
inc
add
adc
jge
inc
popa
jle
nop
sub
lcall
adcb
outsb
pop
iret
mull
xabort
jecxz
fisttps
subb
stos
pop
pop
cmp
push
jg
imul
pop
movsb
stc
neg
addb
mov
push
and
mov
movzwl
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
push
lds
jo
cmp
and
mov
cmp
shll
in
xor
cmp
ljmp
enter
mov
pop
aam
xchg
rorl
dec
pushf
sbb
and
mov
les
cmp
into
out
sbb
cmc
sub
adc
cmovne
test
and
pop
in
pop
enter
mov
testb
nopl
rorl
push
iret
in
xor
mov
add
js
andb
lods
mov
or
idivb
push
add
das
jmp
outsb
sarb
add
enter
sub
insb
test
push
leave
mov
loope
rolb
and
imul
xchg
lret
testb
and
inc
dec
mov
in
add
pop
repnz
sbb
repnz
dec
mov
lret
lcall
sar
test
jae
push
sub
push
call
jbe
pop
push
stos
mov
sbb
sbb
sar
hlt
pushf
or
mov
nop
dec
xlat
mov
jle
and
dec
lea
jge
xchg
mov
xor
rcr
mov
jns
adc
push
incl
push
lods
in
push
insb
cmp
fcompl
sbb
je
pop
mov
std
je
jnp
fistpl
iret
dec
cwtl
adc
pop
push
xchg
sbb
fwait
xchg
mov
xor
jle
sub
inc
sbb
addr16
fcomps
stc
and
xchg
inc
lret
aad
add
cmp
and
add
push
fisttpl
pop
push
xor
cmc
push
jg
mov
push
or
inc
or
cmp
sbb
ljmp
sub
loope
jp
dec
inc
sub
mov
lock
lds
cmpsl
clc
or
loopne
fldl
jns
jns
sbb
je
inc
idivl
in
fwait
push
lret
or
pop
iret
lods
dec
push
mov
cmp
scas
inc
xchg
rcll
jmp
pusha
lcall
push
pop
xor
sbb
push
and
sbb
jle
and
or
jmp
jne
dec
mov
jnp
imul
inc
hlt
out
es
loopne
jns
repnz
stos
jl
lret
push
push
rolb
insl
les
arpl
ds
std
stos
jecxz
cmpsb
jge
add
jno
sub
cwtl
push
xor
adc
cmp
out
stos
mov
jmp
mov
int3
test
xor
popf
push
jge
jbe
pop
fwait
dec
lds
lea
jg
pop
xor
in
les
push
xchg
stos
jb
into
idivl
lahf
ss
cmp
cltd
mov
add
inc
pop
scas
lea
js
inc
xorl
testb
sbb
outsb
mov
lods
jg
adc
pop
call
sub
call
sub
loopne
aas
movl
mov
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
inc
xor
jge
jo
fcmove
dec
or
iret
push
dec
scas
xchg
shll
popf
xor
cmc
icebp
xor
push
jecxz
xchg
push
xor
bound
fnstenv
int
mov
sub
dec
pop
lret
adcb
jge
out
sbb
and
aam
xor
fnsave
in
fisubrl
daa
sub
data16
pop
push
loop
push
pop
fwait
push
mov
lock
jno
out
in
popa
imul
inc
jae
sub
fst
and
inc
popa
mov
xchg
xchg
lahf
mov
jns
inc
xchg
and
mov
ja
and
insl
pop
movsl
xchg
mov
ja
sub
mov
inc
pop
jnp
stos
faddp
int
fisubrs
int
pop
sbb
das
add
orb
mov
push
or
jp
insl
pop
test
xor
adc
or
jge
add
xchg
out
push
adc
scas
jecxz
jge
sbb
daa
movsb
xor
insb
adc
lcall
pop
sbb
sub
in
cli
or
sbb
loopne
xor
push
push
jl
and
rclb
push
adc
cmpsb
adc
add
in
je
jb
mov
ja
mov
cli
mov
nop
stc
repz
mov
jo
inc
mov
mov
inc
js
shlb
inc
arpl
inc
dec
lret
cmp
and
aaa
inc
fists
std
mulb
sub
test
cld
or
pop
ret
pop
mov
cmpb
push
pop
outsb
lcall
pop
je
mov
ret
test
adc
test
xchg
inc
and
sub
cs
xor
jae
fisubs
lahf
dec
jb
xchg
dec
dec
fstpt
add
xorb
cmp
xor
lret
xchg
das
es
sbb
jns
jg
out
sub
push
mov
pop
cmp
dec
into
sub
in
shlb
sbb
add
arpl
enter
mov
nop
jb
andnps
mov
loopne
arpl
and
jmp
sbb
pushf
xchg
sub
test
call
stc
pusha
aaa
add
add
pop
out
or
jno
push
sti
dec
cmp
sbb
ret
jae
push
loope
mov
ljmp
mov
xchg
push
and
or
in
and
push
scas
insb
lock
or
jg
outsb
popf
popa
lds
cld
jle
sbb
inc
sbb
xor
mov
mov
test
xor
outsb
iret
mov
outsb
int3
inc
or
das
aad
fildll
int
xor
decl
sbb
xchg
push
sub
jle
aad
inc
add
cli
pushf
or
add
ds
cltd
jbe
sbb
xchg
lods
lcall
iret
mov
jne
cs
icebp
dec
ja
int
scas
ja
iret
mov
adc
clc
inc
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
sqrtps
xchg
dec
sbb
cmp
sub
or
ljmp
rcrl
dec
push
jbe
rorb
popa
js
nop
mov
push
push
dec
push
mov
mov
jno
lret
popf
aas
shr
pminsw
mov
pushf
outsb
lds
adc
sub
clc
push
lret
or
rol
xor
in
arpl
ret
sbb
lret
lock
pop
jne
or
aas
ss
jb
out
sbb
and
stos
lcall
sbb
add
and
fsubrs
dec
pop
dec
mov
sub
jmp
xor
and
or
or
adc
imul
cmp
shrl
fldt
pop
jl
xorb
into
dec
mov
push
cmp
negb
and
push
jne
into
repnz
xchg
fcos
movsb
test
mov
dec
pop
jns
xor
not
fs
dec
call
lahf
stos
loop
jg
js
push
sarb
push
xchg
jnp
xchg
inc
int
iret
inc
stos
pop
mov
insb
push
aas
xchg
fisttps
sbb
push
xor
aam
aas
push
lds
or
pushf
leave
test
and
lea
or
stc
cmpsb
rclb
mov
inc
xlat
data16
inc
dec
mov
and
icebp
dec
mov
packssdw
cmc
out
sahf
cmp
out
sbb
jmp
pop
pop
cmc
sub
std
andb
and
add
aad
pop
adc
ret
ss
in
jb
or
loope
outsb
and
aas
push
mov
mov
lret
filds
add
movb
cmp
jnp
add
push
sti
ss
push
xor
inc
lahf
aam
test
in
mov
iret
xchg
fnstenv
jg
jl
jbe
addr16
int3
push
cmc
and
pop
pop
insl
sbb
iret
into
push
cli
insl
fstps
movsb
ficoml
in
fwait
cmc
mov
jl
cvtdq2ps
xchg
cld
mov
scas
cs
jno
xor
push
xor
daa
push
icebp
xor
rclb
test
insb
lea
lods
jp
cwtl
mov
mov
push
pop
sbb
mulb
cmp
xorl
fcmovbe
and
or
fistpll
add
mov
outsb
mov
pop
clc
icebp
imul
xchg
adc
sahf
negb
scas
adc
xor
jmp
adc
and
cmp
pop
shrl
mov
or
shlb
es
sarb
push
or
out
orb
daa
test
mov
in
adc
lret
pop
inc
fidivrs
xlat
stos
xchg
loope
stos
mov
test
ja
sub
int3
mov
mov
cs
lock
push
sub
dec
mov
or
jecxz
repz
outsl
es
mov
adc
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
push
cmpsl
push
stos
or
jo
cmp
test
in
sbb
jge
into
pop
pop
xchg
mov
into
int3
neg
adc
push
and
add
rcr
fs
mov
scas
or
dec
lock
gs
mov
push
jle
lods
jecxz
jge
pusha
or
adc
mov
imull
pop
lret
repz
loop
xchg
mov
insb
jg
mov
mov
jl
push
sbb
mov
pmullw
mov
push
sbb
je
mov
dec
das
pop
ret
pop
pop
fldenv
xor
and
mov
pop
mov
sbbl
popf
cmp
push
mov
mov
clc
fsubrp
inc
or
out
sub
lods
imul
fcoms
rcrl
sti
gs
das
lods
sbb
sti
ljmp
fidivl
add
push
sbb
jae
mov
xorl
loope
sub
aad
push
mov
cmp
lret
in
test
mov
xchg
xchg
repz
clc
push
movsl
adc
lods
out
movsl
testl
ds
mov
and
push
cld
lock
push
int3
dec
in
out
jae
imul
in
adc
mov
dec
mov
and
orb
xor
cmpsb
in
mov
dec
jl
sbb
cld
ss
clc
psubd
mov
stc
xor
dec
into
xor
ljmp
mov
repz
sub
jp
pop
xchg
push
jae
adc
pop
dec
mov
push
inc
loopne
icebp
and
push
and
ljmp
decb
jg
fsts
nop
add
ret
jmp
loopne
fsts
aas
jle
push
iret
and
mov
ss
sti
test
nop
cmp
inc
mov
mov
daa
hlt
aad
mov
mov
cmpsb
pop
mov
xlat
cmp
hlt
sub
out
jle
adc
jnp
dec
mov
xchg
and
xchg
bound
call
imul
nop
push
cmp
add
cmpsb
andb
roll
lea
push
addr16
call
jae
ja
enter
dec
neg
leave
xchg
jge
or
mov
fwait
stos
cmc
fldenv
inc
iret
outsb
inc
sub
cs
mov
cmp
ss
stos
mov
ret
lods
jle
add
mov
pop
roll
imul
xchg
roll
aas
push
add
out
mov
je
push
ljmp
mov
push
out
scas
mov
or
jnp
mov
js
mov
ret
addr16
mov
enter
icebp
addl
and
das
xchg
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
fidivl
test
cmp
aam
xor
hlt
lea
aad
popf
push
pop
xchg
push
mov
pop
loopne
xor
fisttps
cmp
in
mov
pop
and
mov
enter
mov
repnz
mov
xor
adc
orb
adc
ror
lcall
xchg
stos
sub
and
jecxz
xchg
test
lock
jmp
cmp
jge
leave
lods
andl
in
leave
cmp
xchg
and
or
inc
sbb
out
dec
xchg
outsl
aaa
mov
mov
xchg
pushf
sbb
mov
cmpsl
sbb
push
loopne
cwtl
sti
xchg
fadds
sbb
jecxz
jg
jno
add
pop
test
cmpl
xchg
sbb
xchg
push
inc
xchg
push
cli
enter
fidivrs
mov
and
aad
imul
or
dec
ret
mov
mov
fists
mov
xchg
sti
fcomi
mov
loop
dec
jno
sbb
or
cmp
movsl
sbb
jg
jbe
daa
mov
xchg
mov
jb
xchg
cli
das
js
ljmp
cmp
inc
sti
int3
sub
rorb
jo
hlt
ret
mov
dec
add
or
inc
jle
dec
mov
in
sahf
dec
shl
add
cltd
lds
mov
jg
arpl
and
mov
mov
pop
in
xor
rcr
insb
lahf
cmp
jns
jo
mov
jae
in
xor
xor
mov
out
xor
pop
loopne
repnz
iret
cld
ret
dec
or
jbe
xor
dec
mov
cwtl
mov
dec
cmp
inc
mov
cs
mov
pop
imul
jl
test
jl
popa
mov
sbb
jnp
mov
mov
xchg
lods
and
mov
je
addb
aaa
rcll
or
sbb
int
into
test
mov
and
sub
lods
scas
xchg
stos
mov
jns
pop
or
push
lock
test
and
insl
std
cmp
push
jg
gs
add
cmpl
jle
add
adc
ds
mov
jno
pop
push
imul
test
enter
loop
xor
cmp
test
pop
mov
mov
jecxz
nop
pushw
mov
add
cmp
push
add
xchg
popf
and
pusha
ret
pop
push
test
lret
and
xor
cmc
loop
pop
ja
lods
xchg
mov
jecxz
push
and
sub
mov
paddb
out
test
or
push
jge
roll
jmp
fistpll
notb
inc
add
jl
jne
arpl
or
add
movl
mov
movl
mov
jmp
or
daa
arpl
fisttpll
pop
std
pop
xchg
jo,pn
cmp
lods
or
xchg
imul
sbb
xorb
lods
or
dec
jmp
jns
pop
mov
scas
in
sarl
xchg
test
fwait
sahf
jnp
jmp
cmc
mov
push
sbb
sub
pop
mov
xor
in
xchg
ret
xchg
arpl
lods
dec
shrl
sbb
in
sti
pushf
cli
mov
inc
mov
sbb
out
cmpsl
fs
cmp
test
popf
mov
xlat
push
xchg
add
insl
mov
or
dec
call
and
andb
cli
pop
imulb
pop
test
ret
cli
add
sub
subl
and
mov
addr16
push
mov
mov
fisubrs
dec
test
pop
cld
rclb
mov
inc
shl
mov
aad
fcomps
fildl
pop
and
pop
ja
hlt
inc
push
sub
fwait
mov
shll
pop
mov
repnz
jne
mov
repz
bound
fstps
mov
test
inc
and
cmp
sbb
rol
xchg
loopne
imul
jg
repnz
sbb
xchg
loopne
mov
scas
adc
cmp
notl
aam
ljmp
mov
ficompl
xor
add
cmpsb
mov
movhlps
je
inc
push
test
or
fwait
lods
js
shlb
xchg
pop
and
mov
ss
add
icebp
test
stos
mov
cmp
mov
fwait
lods
cmc
inc
pop
mov
add
or
lcall
push
loope
aaa
jnp
and
push
call
mov
scas
scas
cmpsb
inc
test
leave
jne
xorb
das
fdivs
xchg
fcomps
sbb
cmp
rcrb
arpl
ret
popa
adc
xlat
dec
mov
test
jmp
inc
inc
cs
fisttps
cmp
pop
sub
jle
in
popf
mov
out
call
lock
sub
mov
faddl
cmpsl
je
in
leave
cmpsl
and
aaa
movsl
mov
fs
ret
and
sub
mov
loope
and
je
xchg
pop
loope
adc
inc
pop
dec
cmc
push
dec
test
push
call
fsincos
movsb
dec
mov
xor
mov
in
in
test
mov
ret
jae
push
cmp
xor
mov
mov
pop
push
inc
push
sbb
mov
or
sahf
mov
sub
pop
inc
adc
sbb
xchg
cmpsl
sub
in
and
adc
fs
loopne
inc
dec
and
test
flds
in
inc
push
insl
ret
je
dec
xor
pop
daa
inc
mov
cmp
je
outsw
jge
into
aas
loopne
push
dec
mov
cmp
inc
shlb
cmp
cwtl
xchg
insl
inc
mov
mov
rorb
test
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
shll
mov
jo
jge
jo
fsts
xor
cmp
mov
push
aad
test
mov
inc
mov
int
into
ljmp
or
pop
push
out
push
pop
jl
arpl
cld
fisttpl
adc
fwait
scas
fcmovbe
out
adc
push
adc
fwait
cmpsb
mov
mov
adc
ljmp
push
fsubrl
lret
jae
in
fnsave
sbb
and
mov
cmp
sbb
addr16
jne
push
push
negb
clc
ret
mov
sbb
push
leave
jo
adc
out
dec
jecxz
sbb
je
fbstp
mov
pop
fucomip
push
lods
mov
stos
push
cmp
sahf
add
or
xor
pop
dec
inc
add
push
xchg
sbb
cmpsl
lcall
dec
xor
adc
push
xor
lahf
leave
fisubs
fildl
pop
mov
sbb
xchg
jo
pop
pusha
ud0
mov
outsl
popa
insl
gs
leave
hlt
or
cmc
cli
loop
push
mov
mov
mov
mov
dec
pop
js
fstp
cmp
outsl
test
dec
sub
in
lods
repz
and
mov
outsl
adc
ljmp
jecxz
xor
aaa
cmpsb
lcall
xor
lock
xchg
push
out
leave
and
daa
mov
sbb
jmp
dec
xor
icebp
out
adc
ret
repnz
adc
fcoml
rolb
jl
test
and
in
xor
test
xchg
cmp
insl
je
shll
xchg
inc
cmp
pusha
inc
aaa
pop
ror
cmp
mov
fcomip
ret
gs
cmc
jo
dec
dec
push
outsl
lock
jmp
xor
xchg
pop
mov
mov
adc
lea
cmpsb
dec
cmp
pusha
pop
mov
xchg
scas
push
fidivrl
stos
lret
dec
mov
incb
rol
sub
mov
stos
outsl
push
repnz
push
mov
out
push
sarb
sahf
cmp
enter
mov
dec
fdivrs
mov
sahf
jne
outsb
mov
mov
sub
outsl
cmp
add
sarl
loop
inc
and
fidivs
pop
xchg
push
lret
jl
add
test
dec
int
clc
jecxz
imul
xor
push
mov
pop
repnz
fs
xor
push
repnz
js
push
mov
popa
shlb
mov
mov
jno
push
shr
jno
push
rorl
loope
mov
pop
jnp
das
inc
ds
js
inc
jne
fwait
jecxz
adc
fdivrl
mov
fs
lock
lret
mov
loope
bound
fcmove
into
add
mov
xchg
mov
xchg
dec
lods
pop
leave
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
xchg
cmpsl
fsubrl
adc
jo
stos
jle
jo
sbb
int3
mulb
push
outsl
push
push
loopne
xchg
lcall
lods
dec
pop
aas
fs
incb
pop
dec
cmc
stc
xchg
pop
or
sti
outsl
inc
aam
in
lcall
pop
jmp
mov
xor
mov
repz
or
mov
pop
push
fwait
out
mov
enter
xchg
push
ds
mov
stc
in
fsubr
clc
and
flds
icebp
pop
or
gs
data16
aam
mov
cmp
test
dec
mov
xor
lret
xor
dec
xchg
dec
jne
std
cmp
push
jmp
fimull
and
popf
fs
cli
dec
adc
ss
in
aas
and
hlt
mov
mov
mov
mov
jnp
nop
sbb
cld
mov
daa
imul
xor
mov
xlat
mov
fdivr
pop
mov
adc
insb
jne
nop
pop
adc
push
aas
lcall
sbb
mov
sarb
jge
jle
sub
imul
aam
jecxz
arpl
or
js
push
pop
and
ja
dec
das
inc
sbb
xorb
jecxz
stc
imul
test
fcomps
and
or
je
adc
sub
jle
popa
sahf
inc
sar
insb
lret
inc
repz
push
mov
or
int3
sahf
scas
pop
repz
mov
add
pop
jg
mov
and
decb
test
push
addb
or
inc
add
rcrb
daa
mov
imul
pop
xchg
push
fidivs
pop
loop
fwait
and
pusha
in
fs
hlt
adc
cmp
stos
fstl
call
mov
cmpsb
int3
arpl
ds
dec
lods
jge
inc
leave
pushf
jno
cli
nop
scas
ss
pop
mov
pop
pop
pop
adc
sbb
fwait
push
faddl
cwtl
pop
mov
es
push
xlat
pop
pop
sub
scas
icebp
pop
add
sbb
loopne
int3
pop
mov
ret
je
orb
mov
or
dec
mov
addr16
jne
mov
or
out
push
decb
mov
jno
iret
ret
sarb
mov
mov
xchg
inc
cmc
jb
mov
add
mov
pop
mov
push
outsb
fistps
movzwl
and
mov
jmp
ja
and
dec
xchg
ja
dec
xor
jo
pop
ror
jl
bound
mov
jno
xor
popf
push
push
jp
add
adc
add
cmpsl
sub
add
gs
mov
jbe
inc
insl
stos
xor
dec
jns
dec
bound
sbb
mov
fstpl
push
xchg
add
out
dec
stc
addr16
int
nop
repz
mov
mov
add
into
clc
daa
ret
test
aas
repnz
dec
aas
fisubrl
cmp
test
jae
cmpsb
inc
push
jo
or
aaa
or
xchg
bound
dec
inc
jle
sbb
aam
int3
cwtl
sbb
test
outsl
ret
fldenv
in
mov
das
jo
inc
add
mov
and
xchg
fdivrs
fbstp
dec
popf
mov
sbb
push
dec
test
stos
push
inc
dec
cmpsl
scas
sbbb
pop
lahf
and
push
jp
popf
cmp
fisubl
pop
fxch
sub
pop
add
lods
out
jae
ret
mov
dec
lret
gs
mov
jle
sbb
sysexit
mov
inc
jbe
jle
test
xchg
jmp
iret
fstl
cmp
sbb
arpl
jb
pop
mov
pop
and
pop
sti
lods
sub
stos
aam
cmp
mov
test
out
push
test
int
dec
call
cs
mov
mov
in
mov
and
push
jle
sbb
sub
div
inc
xchg
fs
push
mov
in
test
clc
or
pop
sub
movl
out
unpcklps
dec
bound
mov
sti
dec
test
idivl
loop
pusha
testl
push
jbe
inc
mov
orl
testl
aad
inc
loope
in
jge
add
jbe
in
sub
repz
mov
jae
adc
jl
inc
arpl
in
mov
fcmovnbe
mov
or
ret
std
negl
cld
stos
popa
inc
sub
into
inc
outsl
movsb
jecxz
inc
sbb
mov
daa
das
xchg
pushf
push
xor
pop
xchg
gs
sub
in
add
mov
das
int3
aad
xchg
jnp
dec
bound
fwait
inc
out
push
fmull
sti
cld
stos
or
mov
mov
adcb
rorb
icebp
push
cld
cmp
cmp
inc
andb
pushf
fbstp
push
sbb
push
je
push
dec
sbb
cltd
lods
popf
js
add
inc
clc
xor
jnp
add
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
push
call
stos
jle
jo
push
roll
sbb
xchg
push
and
lcall
xchg
leave
mov
jbe
cmp
adc
mov
lds
pop
jg
fcoml
lock
imulb
mov
data16
sub
dec
imul
push
shll
iret
nop
push
les
xchg
fildl
jle
rorl
sahf
rcrl
out
push
in
lock
mov
jl
add
nop
xchg
enter
sahf
repnz
scas
lods
popf
sarb
inc
fidivrs
xor
sub
inc
sarl
leave
pop
or
cli
outsl
cld
inc
cmpsl
jae
pop
movsl
sbb
mov
inc
mov
add
les
pop
and
cmpsb
int
repnz
xor
jbe
push
ret
in
xchg
insl
fsubs
pop
add
and
ljmp
push
xor
sets
xor
jle
mov
popf
stos
jbe
mov
jl
nop
stos
sbb
xchg
int
and
adc
or
sbb
fcomps
stos
leave
push
in
dec
fldt
jae
jbe
inc
push
cli
shrl
cmpsl
insb
test
adc
es
mov
cmp
jb
addl
mov
dec
test
push
mov
add
or
jo
xchg
mov
mov
xchg
dec
ficomps
xchg
xchg
sti
aam
push
clc
pop
push
leave
jl
sub
mov
inc
mov
jle
andl
stc
pusha
and
cli
adc
sub
adc
jb
cld
gs
xchg
in
test
cmpsb
jne
icebp
les
rolb
adc
je
in
addr16
or
aaa
lds
sbb
xchg
jle
mov
push
cmp
jnp
push
cmpsb
stc
popa
mov
sub
aad
cltd
aas
aam
call
jns
testb
sbb
fiadds
push
jp
jecxz
mov
aad
out
or
sarb
popf
xor
ljmp
pop
ret
mov
mov
push
pop
aad
xchg
bound
aaa
es
dec
loope
sbb
dec
inc
and
push
mov
pop
jae
push
inc
cmp
cld
aam
je
sbb
push
fcoml
das
cwtl
ljmp
sub
nop
ss
fwait
xor
jg
in
adc
out
and
xorb
addr16
pcmpeqb
mov
std
cltd
push
mov
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
loope
iret
ds
jo
cmpsl
jg
jo
sbb
and
add
shlb
sbb
test
es
aaa
std
mov
push
ud1
push
push
inc
fwait
das
push
inc
xor
inc
ret
jae
dec
cmp
cmpsb
ret
fcmovnb
iret
and
sub
int3
add
push
outsl
mov
push
ret
sbb
or
adc
les
pop
pop
out
fdivr
add
jl
ss
inc
jae
in
rcrb
push
sub
imul
ljmp
inc
mov
imul
xchg
xor
into
lods
jne
je
nop
mov
xchg
xchg
js
scas
test
inc
sub
mov
lods
sbb
fistpll
cld
fisttps
jle
mov
jo
jl
fcmovne
dec
sarb
jecxz
jb
mov
test
in
push
popf
mov
mov
mov
inc
lcall
sahf
scas
insl
cld
cmpsl
dec
pop
fs
insl
jge
mov
jo
dec
xchg
sub
or
inc
cmp
cmpsb
inc
testl
ret
inc
into
jne
rorl
push
mov
lcall
mov
fildll
adc
mov
jne
fimuls
lret
cmp
dec
xchg
jle
aaa
jbe
int3
and
ss
sbb
mov
xor
shl
pop
stc
mov
ss
push
fsubr
into
dec
dec
push
mov
adc
es
mov
push
movsb
les
jle
insb
push
ret
and
jnp
mov
mov
je
mov
push
leave
rorl
jb
add
add
or
add
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
add
cmpsl
jg
jo
cmp
or
dec
shll
jae
push
insb
sbb
jle
adc
inc
shrb
and
dec
inc
dec
jne
mov
dec
xor
pop
push
jge
mov
out
sbb
insl
mov
pop
xor
and
stc
xchg
cmpsl
outsb
sbb
mov
dec
mov
sti
sarb
pushf
int
push
xchg
loopne
pop
outsl
sar
sub
jg
subl
inc
lcall
sub
inc
mov
sbb
pusha
setbe
jnp
iret
sbb
std
inc
mov
iret
mov
jle
xorb
inc
scas
xchg
arpl
iret
data16
bound
fmulp
mov
pushf
clc
fwait
push
sbb
xchg
push
lds
dec
add
outsl
push
aad
adc
sbb
inc
pop
dec
mov
xchg
cmp
jno
jge
pop
ret
movsl
adc
mov
bswap
mov
mov
jecxz
mov
test
mov
je
cltd
mov
aam
sub
cmc
aam
mov
or
test
icebp
out
popa
mov
xchg
les
cmp
cmpsl
jmp
cmpl
jle
cmovne
jmp
lahf
cmp
aam
ljmp
mov
daa
loope
lcall
xor
mov
mov
arpl
pop
in
cs
push
mov
arpl
stc
push
xor
shlb
jo
fadd
ret
lahf
in
inc
loop
add
les
mov
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
daa
scas
in
mov
jo
jg
jo
xchg
or
xchg
pop
das
lahf
nop
scas
inc
loopne
or
rclb
subl
js
and
test
dec
sahf
sarl
or
cmpb
push
in
adc
xor
addr16
into
ret
pop
call
and
fwait
iret
icebp
jbe
iret
jns
cmp
repz
dec
jb
imul
adc
ds
pop
add
pop
in
xor
push
out
lret
add
sbb
mov
jne
pop
mov
das
les
inc
shl
xchg
js
pop
fwait
mov
fldl
mov
xchg
mov
inc
scas
movsl
dec
xor
fmull
cmp
popa
pop
int
xor
test
adc
dec
push
in
adc
aam
insl
mov
das
out
shlb
data16
vmwrite
or
jmp
pusha
cmp
sub
add
cld
scas
aas
lods
or
mov
and
imul
adc
fildl
jb
fistl
xchg
dec
mov
mov
mov
mov
cmp
out
mov
push
icebp
popa
cmc
xchg
sub
inc
push
or
roll
pop
les
dec
adc
arpl
cmp
pop
testl
mov
push
les
rcrb
push
push
std
and
popa
and
int3
xor
adc
push
dec
cmpb
xchg
add
negb
pop
pop
test
out
insb
mov
fs
das
in
adc
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
jp
xchg
das
xor
jo
loop
jo
int3
lods
jl
push
push
mov
mov
inc
mov
xor
xchg
scas
gs
es
sub
repz
les
gs
lods
in
cmpsb
shlb
jb
int
lea
ficoml
roll
jp
aas
stos
dec
mov
hlt
inc
outsb
lret
repnz
repz
or
or
xchg
lock
out
popa
pop
cli
sub
rcll
mov
push
cmpsl
dec
and
jbe
add
out
mov
aad
lret
out
mov
dec
inc
pop
xchg
ja
fistpll
mov
orb
cmpsb
xor
jae
mov
fsubl
bound
jb
jl
sub
lahf
pop
nop
loope
sbb
mov
cmp
add
sbb
add
out
xor
jb
jge
sbb
mov
cs
dec
dec
sbb
push
push
into
out
lods
xor
fadds
cld
orb
xor
sbb
and
or
mov
loop
xchg
cmpsl
add
in
pop
fldcw
mov
mov
and
orb
cli
push
push
sub
or
fs
out
jno
add
cli
jns
test
stos
dec
cmpsb
xchg
adc
out
adc
pop
imull
adc
lret
das
and
xorl
pop
in
fstp
jne
into
push
sahf
ret
call
jno
add
cmp
lock
dec
jg
call
dec
mov
lods
sahf
jb
es
push
mov
push
sbb
sub
into
daa
mov
pop
xor
pop
fdivrl
sub
std
adc
out
fwait
int
pop
push
push
pop
jb
sarl
shlb
mov
push
add
dec
daa
pop
fs
cmp
or
lret
out
mov
fstpt
jecxz
xchg
int3
test
scas
ja
aaa
add
cs
insb
outsl
sarb
dec
loopne
cmpsl
aas
jp
iret
jge
inc
stc
push
jecxz
js
lds
xchg
jge
fisubs
out
xorl
rcl
stos
or
cltd
outsl
xchg
pop
fimull
pusha
mov
xor
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
adc
push
frstor
jle
jo
xchg
scas
std
outsb
ds
jbe
lods
lods
mov
sbb
insb
jg
push
pop
jmp
jbe
out
aad
fwait
sti
aam
test
js
jecxz
repz
or
mov
testb
stos
pop
shrb
jbe
inc
pop
mov
mov
outsl
pop
cmp
ds
insb
fs
jns
das
push
rclb
addb
cmpsl
add
sbb
in
int
pop
cmpsb
sti
cs
xchg
mov
icebp
xchg
arpl
fwait
bound
orb
push
hlt
test
lods
jnp
jbe
push
fisttpll
lret
imull
mov
daa
pop
sub
and
cld
dec
mov
adc
stos
in
push
push
call
jb
cmc
sahf
or
movsb
jb
ja
dec
pop
adc
xor
jae
mov
pop
xor
cvtps2pi
mov
les
push
pop
sbb
ret
dec
pop
fiaddl
fcomi
sbbl
pop
leavew
dec
jp
and
jmp
lret
inc
pop
adc
jne
test
sbb
or
shrl
popa
stos
movb
inc
lods
jbe
inc
adc
inc
inc
cmp
push
mov
enter
mov
lret
arpl
add
sbb
stos
cmpsb
and
cmp
jp
roll
sub
xor
jb
imul
inc
out
lret
mov
pop
js
pushf
adc
and
inc
mov
xor
push
mov
sub
mov
mov
inc
lret
adc
mov
scas
ljmp
popf
mov
cmpsb
add
lea
sti
rcrb
or
stc
sub
leave
sbb
jo
std
andl
enter
lcall
cltd
inc
mov
xor
mov
pop
pop
inc
mov
dec
pop
in
popf
pop
mov
xchg
xchg
push
inc
movsl
scas
and
test
mov
roll
iret
aam
fimuls
insb
insl
lcall
int
sahf
fldenv
fs
dec
fidivrs
loopne
cli
std
lds
sub
lcall
push
andl
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
sbb
fs
lds
and
jo
imul
or
shrl
jno
aam
jnp
mov
aas
xor
mov
dec
hlt
sbb
jecxz
push
into
pop
sbb
scas
addr16
out
mov
jo
test
ljmp
int
xchg
cli
hlt
mov
jge
adc
in
lock
cli
mov
lcall
mov
decl
jmp
rcll
pop
ja
dec
push
sub
lret
cmp
popf
add
pop
es
fistpl
sub
aam
cmp
cmpsb
leave
or
mov
mov
insl
adc
and
test
cli
int3
xchg
mov
dec
leave
push
mov
adc
lds
dec
xchg
jbe
push
insl
and
mov
cltd
inc
jbe
mov
shll
inc
mov
sarb
jecxz
out
mov
hlt
into
loop
pop
and
or
and
jecxz
bound
insb
scas
lods
lds
loope
les
lds
push
in
stc
das
mov
or
dec
xor
stos
xchg
and
push
lret
adcl
int
or
cmp
les
sub
jl
ljmp
and
sarl
mov
xchg
and
xor
call
ja
mov
jecxz
icebp
adc
dec
pop
into
mov
xchg
in
js
push
mov
mov
scas
aam
ja
pop
pop
ljmp
push
imul
xchg
xchg
inc
mov
mov
rcrb
dec
jg
ja
xor
iret
lds
mov
add
mov
mov
cmc
inc
push
add
test
ret
lret
xchg
test
jp
xchg
rclb
cmp
in
xchg
cmp
or
cmpsl
inc
jo
lcall
xor
mov
scas
mov
and
rclb
pop
out
gs
or
fistpl
xchg
mov
adc
outsb
xchg
adc
lds
push
dec
ja
mov
rcrl
loope
jbe
xor
mov
aam
sub
xchg
sti
iret
das
xchg
xchg
jle
xor
mov
das
mov
jns
mov
cmp
jg
mov
mov
lods
ss
ret
jp
lds
jg
mov
in
arpl
jecxz
cmp
mov
ja
pop
cmp
fs
scas
cld
test
xor
aad
je
int3
pusha
xchg
cltd
pop
push
mov
inc
je
xorb
mov
mov
pop
data16
insl
sbb
arpl
sbb
xor
sbb
xchg
dec
aas
imul
movb
push
test
xlat
add
in
shlb
scas
mov
or
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
stos
mov
mov
jo
cmp
adc
repnz
jo
add
and
dec
lock
pop
out
add
jp
aaa
imul
fs
jne
sbb
jecxz
mov
push
cvtdq2ps
scas
sbb
or
fsts
in
sbb
mov
dec
sub
test
sbb
test
ret
add
pusha
push
sti
pop
mov
ja
sti
jo
addr16
data16
pop
scas
sbb
push
movsl
add
call
jl
ja
je
push
push
push
cmp
addr16
jnp
scas
inc
mov
shll
mov
cld
cwtl
insl
jle
insl
cli
shlb
iret
loop
push
mov
out
rclb
push
jge
mov
rcrl
mov
mov
mov
movsb
sbb
iret
and
loop
jbe
cmp
add
fsub
inc
add
test
jecxz
outsl
daa
in
inc
fstpl
inc
pop
je
nop
mov
sub
addr16
test
mov
subb
add
clc
aad
je
jecxz
xchg
js
adc
insb
xor
int3
pop
aam
lret
in
sub
out
jno
adc
pushf
or
mov
imul
mov
daa
addr16
inc
ror
pop
mov
jmp
push
dec
lods
add
or
mov
cmc
or
mov
call
and
aad
and
fdiv
int3
fiadds
sub
fnstsw
into
ja
xor
icebp
pushf
mov
push
mov
mov
pextrw
or
js
xchg
or
xor
les
negb
cli
clc
xor
dec
cmpsl
xor
out
shll
daa
sbb
iret
out
je
out
xor
roll
cwtl
outsb
inc
cmp
outsl
arpl
mov
push
mov
loop
xchg
xchg
jle
jecxz
pop
mov
xchg
sbb
lea
lahf
stos
test
sbb
rcrl
into
mov
test
mov
imul
push
aaa
xor
sbb
sub
cli
jae
mov
sbb
dec
lock
jnp
lock
lret
pop
in
cmp
cmc
in
pop
sbbb
bound
pop
xchg
adc
jo
idiv
stos
xor
sub
inc
mov
sub
jbe
push
aad
lods
dec
mov
repnz
data16
lret
jbe
mov
loop
lock
xlat
in
out
pop
repnz
mov
mov
jge
rolb
repnz
stc
xor
adc
out
int
pop
icebp
sbb
mov
xchg
jns
cmp
aam
fiadds
sub
mov
test
add
sub
aad
jg
test
push
xchg
imul
dec
cltd
stc
inc
enter
pop
pop
vmovsd
adc
xor
scas
popf
mov
inc
add
cwtl
leave
adc
filds
movsb
fidivs
ret
jp
fisttpl
sar
inc
add
call
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
sbb
out
insl
test
jo
rolb
xor
pop
flds
lahf
insb
shll
out
loopne
push
add
rcrl
mov
xchg
sub
mov
xchg
or
or
dec
pusha
mov
jnp
mov
push
ds
js
add
sub
xchg
insb
and
scas
cmp
sbb
aad
loope
stos
cmp
and
in
ficoms
inc
xchg
mov
adc
outsb
decb
mov
jle
je
outsb
xor
adc
sahf
loopne
les
cmp
rcl
mov
or
fs
mov
add
xor
jl
cmp
shrl
scas
xor
in
xor
fisttps
je
sub
out
fists
cltd
dec
xchg
pop
mov
gs
jp
stos
cmpsb
mov
mov
mov
aaa
fstl
cs
adc
fdivrs
popa
out
test
fnsave
inc
pop
cmpsb
ja
cmp
jl
push
sbb
mov
ret
loope
xor
xchg
test
mov
jnp
sbb
mov
sub
sub
sbb
dec
in
pop
xchg
mov
cmpsb
lods
push
and
mov
xor
add
stc
mov
mov
inc
dec
or
xchg
aaa
cmp
fsubrp
push
inc
iret
xchg
sub
sub
nop
jg
scas
clc
or
gs
sbb
lods
out
jg
sub
test
inc
jmp
jg
sbb
jae
sub
xchg
sub
adc
outsb
dec
cmp
imul
push
jle
aam
int3
cmc
movsb
cmp
daa
cs
jno
inc
scas
xchg
mov
cmp
and
add
mov
es
mov
mov
inc
das
lret
sub
push
das
sbb
lahf
in
jb
xor
cltd
add
cwtl
xchg
xor
scas
out
fucomp
jecxz
mov
fimull
mov
jp
xor
lods
mov
in
sub
sub
loopne
dec
nop
aad
xchg
mov
andl
xor
fsubrs
sahf
sbb
bound
aas
or
or
push
in
xor
jge
mov
inc
xor
pop
je
jo
adc
inc
out
dec
jge
in
call
pop
mov
cmp
mov
jmp
cmp
dec
push
adc
cmpsb
lret
push
ja
cld
sub
pop
stos
jmp
out
out
cmp
lods
add
pop
das
shl
inc
out
and
loopne
insl
cs
add
jae
repz
add
dec
or
cmpsb
in
pop
outsb
inc
inc
pop
dec
out
js
cmp
lret
dec
mov
hlt
and
sub
jmp
push
mov
loop
stos
mov
mov
cmp
xor
sub
ljmp
nop
aam
or
xchg
mov
fwait
mov
pushf
or
cltd
ds
jno
push
mov
and
cmp
mov
xor
add
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
dec
fldenv
int3
jo
and
jo
jl
insb
push
push
aad
pop
cmp
out
js
mov
sar
jge
cmp
icebp
dec
adcb
aad
ds
lahf
lods
push
aaa
enter
add
inc
adc
insb
jecxz
stos
pop
lahf
call
sbb
fsts
sub
repnz
sbb
add
push
fsubrs
jmp
pop
outsl
inc
divb
adc
outsb
push
imul
dec
or
xor
arpl
jle
lods
sbb
lahf
leave
aas
xor
sub
push
faddl
sbb
push
sub
mov
cmp
push
pop
xchg
mov
xchg
xor
je
repz
push
push
push
jle
dec
aad
data16
jne
add
hlt
sahf
sub
xchg
outsl
jl
pop
pop
sbb
lods
inc
xchg
sub
or
fcoms
in
int3
mov
jge
push
cmp
test
pop
mov
jb
mov
xchg
andl
dec
sbb
cmpsb
std
jl
lods
pop
popf
data16
fwait
cld
mov
jbe
fidivrs
stc
or
add
int3
xchg
lods
cwtl
pusha
in
add
mov
cmpsb
jmp
std
pop
and
inc
push
cmp
fs
aas
xor
cmc
iret
push
inc
mov
dec
jmp
js
aam
ja
xchg
xor
xor
cmp
jbe
mov
dec
fisttps
sarl
lea
test
inc
jno
iret
xchg
scas
and
rol
sbb
or
mov
mov
popf
arpl
fwait
push
hlt
repz
pushf
fs
sbb
pop
aad
ret
xor
push
mov
or
xor
mov
push
insl
mov
daa
sbb
lds
jp
inc
shlb
push
nop
arpl
in
wbinvd
out
dec
in
not
cwtl
adc
inc
xor
int
adc
dec
test
out
mov
loop
push
mov
daa
daa
dec
mov
dec
popf
fcomps
pop
std
mov
xchg
inc
int
xchg
sarl
mov
rcl
xor
mov
jb
mov
std
xchg
rol
into
fsub
add
pop
int3
push
mov
lods
sbbl
dec
iret
loope
cld
cmp
sbb
push
idivl
mov
xor
aas
inc
adc
and
mov
push
dec
fildl
in
push
movsl
add
or
inc
dec
cmp
es
in
hlt
pusha
out
bnd
ret
or
std
inc
inc
jle
movsb
popa
hlt
daa
mov
jle
repz
add
mov
jae
daa
jb,pn
jg
roll
orb
mov
aaa
sti
push
xchg
push
sahf
cwtl
out
push
add
xchg
lods
shl
pop
out
jp
mov
sub
into
sahf
daa
sub
je
stos
ljmp
push
sbb
inc
in
lcall
movsb
xor
jo
pop
xlat
xlat
loope
xor
add
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
jmp
leave
jo
and
jo
add
push
cmp
or
mov
cmp
pop
xchg
repz
mov
dec
jns
and
int3
push
pop
aam
or
aam
js
xchg
mov
lea
sub
rcrl
inc
imul
and
push
push
xchg
jmp
pop
xchg
loop
jmp
sbb
xor
push
pop
sarl
sbb
inc
in
insl
iret
int3
cmp
enter
jne
xchg
cmc
sarb
dec
subl
xchg
push
imul
leave
out
mov
popa
push
xchg
out
cmp
nop
ss
inc
mov
xor
loope
test
mov
pop
push
cmpsb
push
xor
sahf
xorl
inc
repz
incl
or
mov
and
insb
das
ret
and
repnz
cs
sub
lahf
fdivr
ljmp
pop
repz
aad
mov
and
lahf
shrl
and
cli
pop
sbb
outsb
add
jno
fldt
and
inc
aas
pop
mov
inc
clc
add
sbb
jnp
adc
aam
repz
mov
je
mov
ss
scas
test
je
repnz
sub
xchg
mov
mov
rclb
or
mov
mov
test
das
mov
popf
jns
loop
mov
gs
shll
iret
movsl
andb
mov
adc
lds
or
mov
jmp
call
adc
xchg
roll
or
nop
popf
mov
dec
sbb
inc
cld
add
cs
or
xchg
mov
loope
ds
data16
push
fldcw
xor
mov
iret
cmp
mov
sub
sbb
cmp
xchg
mov
cmp
push
roll
and
mov
bswap
popf
cmp
xchg
and
dec
hlt
inc
mov
jo
mov
adc
jl
or
and
adc
paddsw
xchg
inc
scas
add
sbb
fildl
cmp
push
xlat
dec
lods
lcall
ja
or
pop
dec
push
movsb
lahf
push
iret
mov
lret
push
mov
adc
ljmp
shlb
out
or
pop
outsb
inc
pop
pop
in
pop
ror
mov
mov
cld
add
cmp
xchg
and
fs
cmp
mov
push
mov
lods
pop
push
lea
mov
scas
xor
or
aad
int3
pushf
ficoml
jp
jnp
loope
outsl
outsb
push
rcl
mov
xchg
sbb
jecxz
add
inc
mov
jg
int3
sbb
fidivl
out
mov
jmp
xchg
sbb
jle
cs
jmp
or
cltd
imul
inc
or
push
rclb
xor
jp
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
jne
cli
xchg
pop
aad
jo
jge
jo
mov
gs
or
sub
imul
sub
out
imul
cld
ss
stos
pop
jnp
out
jl
mov
and
pop
test
xchg
mov
mov
jbe
in
sbb
adc
fldt
add
sti
mov
jle
sub
mov
int
lods
scas
into
mov
cmp
out
sarb
insl
mov
bound
nop
dec
inc
and
addr16
test
sub
mov
lret
push
push
lcall
fimull
mov
enter
test
mov
inc
pop
pop
sub
mov
int
imul
mov
iret
xor
and
xchg
or
test
jl
ja
jb
jge
int
ljmp
lret
inc
ljmp
inc
pop
fs
inc
clc
xchg
push
rorb
and
xchg
test
cmc
orb
shl
sub
sbb
lcall
cld
pop
pop
fsubp
inc
jg
mov
push
data16
scas
mov
inc
pop
inc
cmp
and
stc
mov
dec
jg
cld
mov
dec
repz
mov
out
jp
xor
lds
pop
movsl
loopne
xlat
dec
adc
std
push
sub
imul
in
adc
cmp
inc
jae
and
dec
testb
dec
jmp
mov
xchg
mov
adc
inc
push
fs
xor
and
std
mov
aaa
dec
sub
jne
test
rorb
and
out
mov
mov
mov
push
jl
mov
sub
inc
jmp
inc
dec
cmp
push
mov
inc
and
iret
fs
push
cs
shr
xor
add
jnp
pop
cmp
sbb
dec
adc
add
fisubrs
je
insb
dec
scas
jo
xor
out
pop
mov
scas
mov
mov
shr
xor
fsub
push
pop
test
push
dec
mov
mov
jle
sub
nop
cld
xchg
test
and
inc
jnp
jp
fsubl
add
add
movsb
or
or
mov
daa
fs
pop
fiadds
lret
stos
pop
stos
je
mov
cltd
adc
add
dec
xlat
out
pop
add
scas
clc
nop
enter
cmpsl
lret
outsl
repz
pushl
mov
loopne
cltd
xor
fwait
xchg
or
loopne
retw
fs
gs
outsl
jne
push
les
jns
dec
fs
lret
sub
test
xorb
daa
int
fcomi
jae
icebp
adc
add
dec
jg
pop
jne
xchg
js
sbb
mov
jle
xchg
sti
cltd
lcall
cmc
add
and
fwait
mov
das
mov
inc
add
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
push
mov
inc
aaa
shlb
and
jo
dec
xlat
add
push
sbb
test
pop
pop
dec
push
and
jae
pop
xchg
dec
mov
cld
outsl
mov
mov
and
pop
sub
je
fdivs
mov
dec
pop
das
add
imul
js
inc
pop
xchg
pop
push
lahf
jnp
jns
sbb
jb
dec
sub
rcrb
test
inc
xlat
mov
test
sarl
lods
push
in
mov
and
insl
cmp
push
jns
clc
pop
mov
mov
repz
cmovs
cmp
sub
sub
shr
push
inc
aas
popa
add
mov
jge
and
popf
dec
cltd
push
pop
in
sbb
mov
sub
mov
mov
ret
push
sbb
or
cmp
sub
push
ret
gs
fldenv
fldl
mov
or
lret
nop
sbb
adcb
int3
fidivrs
cld
nop
jo
jl
scas
std
stos
mov
insl
dec
data16
push
add
in
imulb
pop
in
sub
jo
faddl
out
adc
dec
sbb
dec
ljmp
aaa
dec
in
pop
movsl
lds
into
push
or
mov
adc
push
insb
xor
inc
cltd
leave
popa
int3
cltd
push
xchg
mov
or
pop
lds
sub
add
push
jno
decl
ss
out
rorl
sub
nop
inc
ret
or
movsl
bnd
xchg
cs
mov
xchg
mov
sahf
das
in
cmp
xchg
bound
addb
sbb
mov
mov
in
xor
adc
xchg
sbb
imul
push
push
ret
sbb
arpl
les
sub
lcall
mov
movsl
and
adc
sub
or
and
mov
daa
movsl
in
mov
adc
mov
xchg
mov
aam
push
lret
mov
adc
sahf
ret
das
leave
adc
adc
xlat
xor
aaa
in
pop
bound
and
push
mov
mov
inc
out
sti
push
es
cmpsl
loopne
cld
xlat
jg
in
call
sarb
lock
roll
sbb
pop
into
scas
inc
lods
pop
out
into
test
insb
dec
xlat
adc
ret
ja
js
push
dec
vmread
je
sbb
or
inc
call
cmp
and
aam
or
ja
push
lea
shlb
dec
push
data16
mov
and
imul
jbe
lea
test
loope
jae
cmp
inc
xor
mov
sbbb
lret
rol
add
aad
inc
insl
les
ljmp
cmp
jno
mov
sbb
dec
scas
mov
mov
jbe
xchg
pop
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
out
jo
and
jo
pop
mov
insb
out
stos
pop
lret
jecxz
jge
lret
call
add
les
inc
mov
insl
scas
aaa
cli
test
and
inc
lcall
dec
cld
adc
popf
or
shl
outsl
mov
jno
or
rcl
xor
add
inc
jle
mov
jns
dec
xchg
mov
outsb
mov
cmp
test
pop
in
adc
add
adc
sbb
inc
xchg
iret
cwtl
xchg
in
mov
divl
flds
dec
and
cmpsb
cli
push
and
push
mov
imul
out
xchg
dec
xchg
mov
out
fisttpll
repz
cmc
out
repnz
xchg
sbb
enter
fidivrl
add
xchg
jo
das
push
cs
inc
and
push
xor
lods
dec
call
fcoms
mov
ret
and
or
lock
pushf
pop
mov
movsl
aas
pop
bound
cmp
daa
jge
sub
ficoml
pop
mov
pushf
inc
xchg
pop
mov
sbb
scas
add
fiadds
push
sub
xchg
aaa
xor
and
jg
sbb
xchg
adc
xor
or
jns
pause
adc
pop
negl
xchg
add
add
push
ret
dec
loopne
ja
gs
jmp
jle
nop
outsl
in
adc
add
repnz
xchg
rclb
shlb
sti
push
push
cmp
pop
lods
mov
jo
sub
jnp
mov
jg
push
mov
bound
xchg
fdivs
jb
push
lret
js
xor
mov
jne
add
add
push
pop
inc
xchg
cmp
add
mov
inc
loope
sbb
std
sub
fisttps
dec
inc
and
ja
jp
mov
fcomps
or
sub
and
stos
dec
lcall
outsl
inc
or
push
adc
jb
pop
xor
psubsb
out
test
sub
fstpt
arpl
adc
dec
fs
int
sbb
sbb
inc
out
icebp
pop
xchg
push
mov
shl
mov
aas
jb
lret
add
sub
add
xchg
mov
icebp
cmp
mov
jmp
mov
or
jne
shlb
or
leave
imul
adc
inc
inc
rcll
pop
jns
mov
or
fwait
hlt
imul
shrb
int3
push
lret
ljmp
outsl
pushf
inc
stos
sub
in
mov
xsavec
popa
test
nop
mov
addl
sbb
fwait
and
das
xchg
mov
lock
and
lea
pop
sbb
or
xchg
andb
in
out
lock
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
mov
jo
and
jo
sub
mov
cltd
mov
mov
out
mov
mov
icebp
and
pop
or
iret
lret
out
pop
jecxz
pushf
out
xor
into
mov
pushf
mov
and
sub
inc
jo
mov
loope
mov
pop
mov
sub
mov
push
stos
das
fistl
adc
mov
arpl
adc
pop
mov
dec
and
cmpsl
fimuls
inc
fcoms
pop
das
addr16
xchg
xor
in
clc
sahf
pop
mov
addr16
shrb
cmc
jno
sahf
bound
inc
xchg
xor
jge
ss
adc
dec
fldt
pop
add
sbb
int
test
rorb
outsb
pop
push
cltd
roll
jecxz
lcall
mov
lods
lret
imul
stc
sbb
lahf
lahf
sbb
jge,pn
sub
enter
cltd
push
rclb
adcl
pop
lret
sarb
test
jge
mov
mov
ret
mov
cmc
fmuls
hlt
sarb
fcmovne
test
sub
xchg
ret
cmp
jg
addr16
dec
iret
repz
mov
test
scas
ss
aas
pop
jmp
inc
ljmp
xchg
push
and
pop
and
or
mov
popa
adcb
ret
mov
fsubrp
ljmp
mov
add
mov
mov
outsb
mov
fptan
cmp
cmp
push
dec
imul
popa
ret
in
lea
enter
mov
inc
int3
call
into
xor
jbe
xchg
inc
jl
adc
sbb
sub
mov
decl
cmp
push
mov
push
les
mov
xor
push
inc
inc
dec
aas
cmc
lea
fidivrs
mov
mov
std
fldl
mov
pop
cmpsb
cmp
mov
stos
pop
cmp
push
lods
pslld
xchg
shlb
mov
xchg
lds
dec
adc
arpl
not
lret
imul
nop
xchg
mov
sbb
lahf
mov
call
jp
movb
stos
mov
mov
fwait
lods
push
aaa
add
addr16
xor
xor
out
jp
xchg
fmulp
lret
mov
jl
aas
xchg
sbb
and
add
addr16
mov
inc
fwait
jae
addr16
orl
xchg
aam
dec
jecxz
ss
mov
jl
test
or
pusha
mov
stos
nop
dec
dec
test
lock
push
mov
sbb
scas
sub
push
movsl
jae
inc
fisttps
sahf
imulb
add
cmp
mov
xchg
jbe
dec
scas
fnstenv
jns
mov
jp
jae
clc
adc
call
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
fnstenv
and
jo
das
jo
and
fcompl
ret
xchg
mulb
mov
jb
rol
in
or
xlat
mov
clc
push
aad
outsl
fidivrs
cli
cmpsb
shlb
sub
cmpl
xor
pop
or
lods
sub
mov
andl
push
inc
sub
lods
push
inc
das
xchg
add
in
and
jmp
je
xlat
dec
cli
xor
mov
haddpd
hlt
stc
je
xlat
adc
rolb
movsb
dec
fcmovb
xchg
and
mov
mov
fdiv
mov
in
add
std
xchg
fistpll
jo
cltd
stos
sbb
lret
jo
jle
fadd
jl
pushf
jle
popa
lcall
and
pop
stc
ret
inc
fistps
jno
push
or
inc
and
and
std
popa
lahf
lahf
jmp
cmpsb
and
lock
and
mov
mov
or
scas
sub
fwait
in
xchg
adc
aas
inc
xchg
cmp
push
dec
into
adc
mov
cmp
jl
out
into
es
cwtl
out
mov
xchg
stc
fistpl
das
fistpll
jecxz
cmp
mov
popa
jg
mov
insl
jg
scas
sbbl
nop
mov
inc
test
js
sub
test
lods
bsr
ret
mov
loop
ret
or
bound
jecxz
ror
push
cwtl
mov
leave
adc
adc
or
imul
mov
icebp
cmc
movsb
mov
orl
daa
sbb
fstps
cmp
popf
inc
mov
inc
stc
aam
loop
js
mov
int
jae
dec
jmp
mov
aaa
icebp
fdivl
cs
adc
mov
and
mov
jb
inc
pop
add
movsl
test
fcom
adc
out
daa
mov
add
mov
sub
mov
xchg
adc
mov
jge
mov
lds
pop
mov
gs
out
cltd
pop
les
dec
inc
add
fwait
pusha
and
test
repz
dec
in
sub
dec
fs
jnp
stc
adc
sbb
shl
imul
xchg
dec
outsb
cmc
std
mov
or
mull
test
sbb
imul
jle
pop
sbb
dec
jne
sub
or
mov
xchg
into
lea
jp
sub
sbb
into
ficoms
mov
out
add
or
into
push
push
jnp
adc
sub
dec
xor
out
jg
pop
pop
pop
and
jb
or
lds
mov
mov
outsb
mov
jo
jb
mov
sbb
fdivr
out
int3
push
xchg
push
test
dec
test
jle
into
fiaddl
jl
xchg
ret
jmp
outsb
lods
lcall
dec
add
pushl
lea
jmp
add
out
out
xor
call
test
mov
jo
and
jo
aad
jecxz
sub
xor
mov
mov
adc
cmp
push
or
xor
cmc
mov
into
mov
aam
cmp
xor
jl
insb
jbe
add
cmpsl
pop
push
mov
adc
jbe
int3
xchg
pop
mov
add
icebp
mov
lret
mov
or
rcrl
xchg
xor
jmp
insl
jnp
pop
mov
adc
pop
xchg
call
sahf
cs
mov
scas
xchg
mov
lcall
cli
fcmove
cmpb
into
std
inc
cltd
inc
cmp
ret
pop
push
mov
xor
jnp
jne
lods
cmp
xchg
mov
mov
and
mov
cmp
add
cmp
lds
enter
pop
xor
xor
ror
sub
jae
int3
jae
cli
jmp
push
pop
stos
sub
fmull
xor
dec
jge
repz
add
add
cmp
ja
imul
mov
bound
das
popl
shl
adc
test
loope
clc
les
data16
push
prefetcht2
push
pop
mov
out
add
cli
push
popa
inc
adc
cmp
cmc
sub
inc
cmpsl
mov
loop
sub
in
dec
cmpsl
adc
sbb
cltd
jmp
pop
push
fildll
icebp
cmp
pushf
jp
mov
int
mov
testb
xchg
subl
jmp
test
int3
mov
mov
je
sbb
cmpsl
add
jge
xor
adc
and
and
in
sbb
sahf
jecxz
ss
iret
int3
incb
add
stos
pop
fwait
pop
fs
jns
mov
test
pop
xchg
rcl
jno
push
jo
mov
push
cmc
pop
pop
insb
and
cmpsl
andb
addr16
movb
aad
fidivs
daa
shll
mov
mov
or
rol
aad
rolb
cmp
fcmovne
and
xchg
sbb
push
fbstp
cld
fs
mov
dec
lcall
std
sub
fwait
incb
cld
dec
dec
roll
mov
gs
adc
loopne
imul
mov
shll
jb
mov
movsl
sbb
popa
sahf
and
ficomps
and
inc
mov
ret
sub
test
cmp
mov
adc
mov
rcl
sub
aas
jae
mov
mov
lods
sub
xchg
xchg
jl
inc
mov
jno
inc
add
add
push
mov
test
sbb
lret
test
mov
xchg
scas
shrl
ljmp
sahf
cmp
fmull
add
jp
dec
cmp
inc
test
inc
repnz
loopne
in
xor
cs
jecxz
pop
sbb
add
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
aaa
loop
daa
loop
jo
jge
jo
js
repnz
cs
lods
ss
pushf
outsb
xor
or
push
subb
mov
sbb
into
mov
mov
scas
fiaddl
ja
adc
mov
jg
fdivs
push
orl
mov
cld
std
adc
dec
fisttpll
mov
jb
je
mov
aaa
cmp
mov
push
inc
xlat
mov
daa
sbb
imul
pop
mov
fldt
add
dec
pop
and
pop
addr16
add
sbb
das
fiaddl
sbb
cmc
int
push
adc
add
cltd
dec
mov
jle
scas
inc
and
mov
das
mov
lret
je
xchg
add
push
sub
lods
sub
sahf
jns
sbb
mov
movsb
movsb
add
fmuls
leave
mov
mov
lea
fdivr
jmp
or
lods
addr16
jbe
daa
xchg
xchg
lcall
cltd
adc
lds
mov
popa
insb
xor
dec
push
movsb
iret
mov
cli
or
jle
pop
mov
fcoms
aaa
cmp
sbb
nop
dec
inc
enter
mov
cmp
jo
repnz
inc
mov
das
sub
ljmp
jbe
mov
dec
sub
inc
adc
sti
jbe
insb
lods
jne
int
jg
lock
mov
test
mov
push
loopne
adc
xchg
jle
mov
leave
ret
enter
add
push
popa
ret
dec
xchg
xchg
jnp
lahf
psubusb
rorl
sarl
mov
add
xchg
gs
mov
xor
orb
movsb
popf
mov
mov
out
sbb
xor
xchg
xor
push
stc
out
lret
or
cmp
adc
mov
outsl
bound
cld
dec
shlb
add
js
sar
xchg
mov
dec
fwait
sub
outsb
xchg
sub
mov
popa
push
xchg
jb
stos
jecxz
pushf
jmp
mov
lcall
mov
sub
movsl
mov
push
das
popa
popw
outsl
frstor
push
jbe
pop
mov
popa
lcall
xor
sbb
xor
mov
jo
sub
insb
test
mov
daa
std
ss
jb
rclb
push
or
test
mov
outsb
pusha
sub
adcl
adc
dec
insl
xor
push
xchg
mov
and
in
fnstcw
arpl
or
pop
data16
call
adc
mov
idiv
ds
fldcw
jge
test
or
outsl
movb
dec
push
fwait
push
adc
fistps
aas
dec
fistl
in
lods
negl
out
notl
stos
int3
loopne
adc
push
add
and
inc
add
dec
add
add
mov
ja
add
xchg
sbb
jo
and
jo
cmpsl
outsl
pop
scas
popa
sub
dec
outsb
aaa
pop
mov
xor
push
adcb
repz
adc
iret
dec
or
out
push
out
int
and
mov
ja
std
xchg
pushf
pop
aas
loopne
sbb
pop
jo
mull
int
test
ds
add
aas
jp
fstpt
adc
jnp
fs
cwtl
push
dec
jl
outsb
adcl
arpl
cmp
xor
movsb
fs
cmp
movsb
add
dec
sbb
lret
out
add
pop
or
jecxz
add
push
sbb
js
shll
mov
xor
rolb
fmulp
pop
out
inc
and
stos
cmp
divb
mov
aas
or
daa
insb
std
jl
add
and
add
in
fcmovne
ljmp
cmp
aas
jle
sbb
push
sbb
sub
jno
mov
jecxz
xchg
or
mov
inc
xchg
mov
cli
xchg
stc
rcrl
jo
mov
inc
stos
or
fisubrs
push
jmp
xor
mov
hlt
pop
stos
push
pop
mov
in
xor
icebp
cltd
inc
sub
into
mov
sbbb
inc
and
or
stos
hlt
mov
cmp
gs
push
imul
add
mov
and
and
xlat
adc
clc
jp
cltd
inc
lods
push
sub
lods
inc
xchg
dec
dec
mov
fsub
psubsb
cmp
ss
jmp
mov
xor
mov
testl
add
and
inc
pop
in
stc
jbe
inc
pop
movl
mov
add
add
jmp
hlt
enter
adc
sahf
fildll
inc
testl
das
lret
dec
jbe
rolb
cmc
pop
or
fidivrl
icebp
adc
cmc
sub
fsubrl
jno
xchg
xchg
jne
scas
or
mov
xchg
movsb
push
xchg
test
lds
mov
cmc
test
sub
and
inc
pop
ret
sbb
hlt
dec
push
adc
cld
addr16
inc
popl
mov
or
cmpsl
mull
pop
loop
imul
pushf
jbe
push
pop
movsl
pop
dec
mov
mov
mov
sub
push
pop
in
cmpsb
add
adc
int
and
or
push
ret
jecxz
addb
push
stc
and
push
xchg
cmp
enter
or
add
hlt
aaa
sub
setnp
scas
xchg
int3
and
mov
hlt
and
push
sub
dec
mov
push
loope
inc
sub
add
insl
xor
add
jecxz
lahf
int3
data16
xchg
int3
rolb
nop
add
fs
pop
push
inc
aas
xor
fcmovnu
iret
int
mov
mov
pop
dec
into
mov
pop
pop
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
mull
in
jo
lahf
jge
jo
push
out
mov
cs
subl
js
gs
fcoml
push
arpl
xchg
in
cli
out
lcall
mov
fists
mov
ss
nop
in
push
loope
xor
mov
dec
ja
ret
adc
pusha
insb
test
xchg
loope
ss
sub
jp
in
push
mov
test
jl
dec
add
pop
scas
stc
loopne
mov
enter
popa
adcl
jle
inc
sub
sub
stos
dec
les
sbb
pop
ja
lahf
or
or
les
mov
sub
insb
lods
and
xchg
into
test
ss
push
dec
mov
mov
lock
sub
inc
xchg
icebp
xor
nop
popf
pop
add
lock
jbe
into
mov
pop
test
aas
mov
in
jge
aaa
jmp
push
mov
movsb
mov
sub
jl
and
and
pop
mov
in
dec
inc
clc
enter
xchg
arpl
add
out
inc
pop
cld
lcall
stos
bound
adc
int
xchg
arpl
test
gs
fsubrl
in
mov
mov
outsb
sarb
mov
ror
dec
dec
fmuls
sbb
jge
mov
bound
int
cmp
imul
mov
es
sbb
pop
cmp
outsl
je
push
leave
dec
or
push
xchg
rclb
aaa
push
pop
adc
pop
add
dec
ljmp
jno
jbe
mov
push
sbb
mov
pop
ret
leave
xchg
push
addr16
orb
jl
or
lock
xchg
lea
out
pop
pop
mov
pop
enter
mov
or
imul
lea
lds
subb
jmp
adc
dec
inc
mov
scas
inc
cld
adc
or
out
adc
stos
or
and
stos
adc
sbb
mov
xchg
ret
and
ss
flds
pop
dec
lahf
imul
out
xchg
push
push
sub
loopne
lods
rclb
movsb
inc
mov
or
jle
cmc
roll
scas
pop
pop
das
mov
and
sub
cmp
add
scas
pop
pushl
ds
cltd
test
adc
mov
push
movsb
jg
dec
out
and
adc
xlat
inc
addr16
sbb
jne
inc
sub
rcll
jmp
push
sub
sbb
cmc
jae
enter
sub
jge
jne
push
cmp
movsb
push
push
dec
mov
mov
outsb
cmp
mov
fdivl
repnz
fisubs
add
iret
loopne
inc
iretw
scas
xor
test
in
pop
adc
jnp
fwait
mov
scas
xchg
fnsave
ficoms
loopne
mov
inc
add
cmp
dec
std
and
and
jge
add
repnz
add
push
addr16
adc
add
pop
jo
push
aaa
into
mov
out
mov
sub
jmp
sbb
ss
jns
lret
add
sub
jmp
enter
inc
mov
imul
and
mov
mov
push
in
push
and
int
aam
fiaddl
shll
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
lret
push
es
jo
mov
mov
xchg
shll
mov
dec
pop
les
mov
stos
mov
aad
dec
orb
push
inc
lods
mov
imul
mov
and
cmc
ss
rcll
pop
adc
aas
jmp
nop
lock
clc
mov
ret
mov
jmp
mov
popa
aad
loope
cmpsl
pop
and
and
cmp
ficomps
lret
jecxz
sub
mov
xor
or
pop
cmc
mov
sub
inc
fistps
cli
inc
rorl
jmp
pop
cmp
pop
js
xchg
in
jb
repz
pop
fidivrs
mov
push
sub
aad
push
push
test
inc
mov
cld
mov
neg
mov
add
push
mov
pop
and
sbb
inc
cmpsl
mov
fistpll
xchg
jecxz
jnp
frstor
sbb
push
hlt
inc
xchg
dec
aas
push
xchg
mov
in
lds
test
mov
insb
test
jae
loop
imulb
dec
bswap
inc
push
divl
ljmp
dec
repz
sarb
jecxz
lods
push
push
xor
and
loop
lods
xchg
cmpb
repz
jns
sbb
es
sti
loop
jns
fstl
shlb
bswap
ljmp
fcomps
subl
cmpsl
and
inc
jno
cmp
pop
loopne
or
sub
push
lcall
lahf
repz
sub
pop
ror
or
xchg
mov
inc
xor
repnz
add
push
mov
repz
add
in
cmpsl
stos
and
dec
inc
pop
sbb
dec
and
add
add
aas
cltd
cmp
pop
mov
and
jmp
cmpb
ljmp
xor
nop
xlat
iret
and
pop
push
xor
cmp
outsl
sti
fidivs
sysenter
pop
dec
fwait
push
mov
pop
push
popa
iret
shrl
outsb
cwtl
add
jb
xchg
jecxz
fwait
cmp
inc
xor
mov
clc
das
xchg
aad
mov
jbe
out
mov
jle
das
in
push
out
imul
pushf
in
pop
push
pop
push
clc
loope
jg
xchg
faddl
mov
imul
or
loopne
popa
insl
xchg
lock
outsl
sbb
jae
les
mov
xchg
inc
iret
dec
mov
rorb
in
jnp,pt
sub
aaa
icebp
and
fnstenv
dec
sbb
lcall
add
xchg
push
sub
add
sahf
repz
ss
mov
sub
in
int3
stos
jae
push
mov
mov
cmp
push
cmpsl
pop
xchg
into
std
data16
jle
das
mov
mov
lret
cmp
sbbl
inc
or
pop
mov
xchg
mov
cwtl
popa
cld
jl
sbb
lahf
jg
fisttps
mov
in
sbb
call
movsb
outsl
push
roll
sar
stos
std
imul
mov
icebp
sub
or
push
mov
pop
jb
icebp
add
adc
movsb
jge
aas
fsubrl
jno
shlb
push
inc
sahf
out
and
std
icebp
dec
inc
jno
cmp
jae
inc
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
fdivrl
dec
cmovne
jo
lahf
jge
jo
dec
mov
cmpsb
push
leave
lds
sahf
mov
or
jno
enter
mov
push
inc
test
sub
add
notb
dec
imul
fucomp
mov
sbb
in
push
adc
out
dec
xor
or
push
cmpsl
xchg
inc
sbb
andb
repnz
into
mov
aad
add
test
dec
jle
push
std
pop
in
adc
imul
mov
jbe
or
push
push
ret
adc
mov
push
sti
mov
test
mov
loop
sub
stc
pushf
jmp
mov
and
loopne
out
outsl
push
bound
mov
adcb
scas
cwtl
inc
out
test
push
cmpsl
mov
jbe
les
arpl
mov
jb
scas
jnp
xchg
lcall
fld
pop
inc
dec
cltd
inc
push
pop
xor
aas
mov
cmpl
mov
cld
fst
or
mov
addb
in
dec
ret
adc
sbb
push
movsl
mov
mov
test
sub
sti
mov
push
dec
pop
add
push
movsl
ja
push
inc
sti
jae
in
arpl
push
sti
sub
mov
pop
ljmp
add
and
push
cmp
es
dec
inc
gs
out
dec
sbb
mov
les
stos
call
adc
jl
stc
mov
fsubs
sahf
mov
in
pop
mov
pop
fbld
lret
lcall
inc
into
sbb
add
out
fcoms
pop
fistpl
pop
add
push
xchg
shrl
cmc
push
sbb
outsl
pop
mov
jecxz
pop
aaa
mov
addb
enter
in
cmp
mov
scas
aaa
push
pop
daa
pop
push
testb
xor
adc
sbb
cld
mov
clc
jnp
pop
cli
adc
popf
cs
popa
out
push
test
mov
andl
stos
fnstenv
mov
lods
sbb
andb
test
lahf
or
and
add
mov
insl
rclb
es
enter
jge
lods
lea
movsb
jmp
int3
jae
sbb
add
addl
call
add
pop
cmp
out
inc
fs
xor
cmp
bndstx
xchg
fxch
ret
jge
inc
scas
adc
loope
dec
aad
and
aam
pop
jge
cld
mov
cmpsb
adc
aad
adc
push
dec
clc
or
test
fstps
scas
es
or
sub
fidivs
pop
add
lea
sub
ljmp
lea
xchg
faddl
daa
sbbb
into
leave
inc
roll
stos
fisttps
add
mov
mov
cmc
cmpsl
cltd
push
sub
sbb
fists
mov
popa
dec
jb
aad
adc
inc
test
jle
add
jl
sub
jp
icebp
lock
aas
hlt
sahf
jno
xchg
cmp
xchg
hlt
cmc
int
push
arpl
add
sbb
inc
in
cmp
sub
mov
fistl
push
es
decb
cmpl
clc
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
dec
outsl
jo
in
jo
lahf
jge
jo
xchg
out
dec
mov
movsl
add
out
jo
mov
mov
out
mov
aas
in
inc
in
xchg
mov
or
mov
inc
lret
sub
adc
ds
fwait
out
fwait
xor
cmp
int3
or
inc
mov
push
ret
lock
xlat
or
push
push
leave
pop
iret
mov
sbbl
add
jg
or
or
imul
and
enter
sbb
pop
mov
mov
mov
push
dec
dec
mov
outsl
mov
scas
test
sbb
jmp
das
or
lods
movb
mov
ret
ret
das
xor
mov
xchg
movsl
sbbb
and
sub
mov
out
xor
insl
mov
sbb
notl
das
mov
xlat
ret
pop
jne
into
out
shrl
pop
jb
add
xor
repz
test
sub
xchg
in
xchg
lds
mov
dec
ljmp
jg
xor
jmp
mov
aam
push
push
adc
test
adc
fcmovnb
sbb
cmp
mov
addr16
mov
fnstenv
adc
sub
test
push
mov
ds
cltd
mov
adc
xor
inc
pop
inc
add
mov
imul
imul
ror
pop
adc
das
scas
cmpsb
cld
iret
insb
push
in
mov
std
xor
pop
imul
popa
xchg
frstor
mov
dec
xorl
pop
dec
lods
loop
dec
mov
in
mov
adc
or
das
subl
adc
gs
jns
mov
sbb
fldenv
push
mov
cwtl
stc
lods
xchg
adc
jge
xor
and
fisttpll
out
jle
jle
adc
hlt
mov
push
mov
outsl
mov
pop
pop
mov
push
and
bound
cmc
inc
sbb
mov
fsub
pop
loope
jmp
and
pop
lods
cs
mov
lds
cmp
dec
out
test
add
jp
ret
out
or
push
movsb
scas
popf
sub
pop
fistl
sbb
in
and
shrl
out
cwtl
imulb
outsb
cli
mov
cmpsb
inc
xor
mov
int3
int3
in
in
sub
mov
stos
pop
jns
push
pushf
and
and
sub
repz
fistps
hlt
or
push
inc
andl
mov
cmp
jne
cmpsl
push
arpl
sub
cmp
pop
xor
addb
adc
scas
jecxz
call
ljmp
repnz
inc
mov
sub
test
mov
fidivrs
int
push
das
inc
ss
movsl
sarb
testl
add
nop
push
loope
xor
lcall
int
sbb
movsl
jl
or
ljmp
popa
lret
shlb
in
sahf
jle
mov
jns
arpl
push
mov
mov
cs
jle
cmpsb
jl
jle
sbb
mov
imul
out
stos
xor
fisubrs
xor
psubsb
add
movl
cmp
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
sbb
add
jo
lahf
jge
jo
jbe
push
ficoml
inc
popa
out
popa
or
mov
loopne
mov
std
je
jge
lods
mov
lcall
lods
repnz
mov
cmp
icebp
das
jmp
pop
sbb
cmp
std
lahf
jae
stc
lea
pop
sbb
scas
sub
pop
inc
inc
data16
mov
out
mov
cmpsb
inc
fsubs
xchg
stos
inc
dec
mov
cmc
sub
or
addr16
into
clc
fs
push
pop
loope
push
dec
daa
inc
or
outsb
daa
push
ljmp
fistps
push
sub
jns
mov
dec
push
inc
cmp
scas
cmp
sbb
ljmp
push
pop
fmul
mov
lods
stos
sbb
push
sbb
adc
das
cli
pop
stc
and
add
xor
xor
push
shlb
mov
sbb
xchg
mov
cld
mov
fsubp
sub
in
push
xchg
inc
enter
inc
mov
fs
sub
out
lahf
stos
jecxz
mov
stos
mov
cmp
mov
xchg
enter
add
jo
or
pop
pop
xor
ja
incb
sbb
pop
addr16
adc
dec
dec
bound
dec
js
addr16
mov
daa
js
adc
dec
inc
test
sbb
inc
jbe
pop
mov
pop
pop
fcmovbe
push
in
cwtl
xor
push
jg
push
stos
and
lock
imul
sub
mov
pop
jns
mov
add
loopne
pop
out
sub
icebp
dec
adc
repnz
out
cmp
and
rcl
add
dec
out
mov
in
jns
popf
and
sub
data16
dec
jmp
cmpsl
ret
push
pop
ljmp
inc
mov
out
add
mov
xorb
dec
daa
insb
js
in
lock
jmp
movsl
mov
repz
insb
and
in
push
inc
and
xchg
mov
aaa
ficoms
dec
xchg
arpl
lods
out
movsl
mov
xor
repnz
pusha
inc
inc
stos
pop
xchg
jbe
mov
xchg
pusha
ret
sti
or
pop
sub
pop
outsl
cmp
dec
pop
inc
mov
int
fisttpll
inc
dec
xor
and
sbb
pop
imul
and
pop
test
xchg
andl
inc
ljmp
jb
push
inc
scas
gs
xchg
inc
dec
fldcw
test
adc
test
aad
push
cmpsb
adc
cltd
cld
jmp
xchg
pushf
out
inc
xchg
cld
push
dec
adc
pop
push
cmpsl
inc
mov
dec
inc
mov
testb
in
or
dec
xchg
xchg
prefetch
inc
inc
fdivrs
mov
enter
or
outsl
sbb
xchg
je
rcrb
xchg
pop
imul
lret
jmp
and
mov
pushf
icebp
imulb
ss
loop
push
andb
into
out
jb
add
push
hlt
lret
pop
iret
stos
xorl
xor
xor
leave
sbb
jo
pop
lahf
inc
dec
pop
xchg
sbbb
popf
xor
icebp
sbbb
idivl
inc
xchg
mov
sbb
ja
lahf
pushf
mov
cli
pop
dec
inc
dec
fs
pop
ja
dec
loope
arpl
adc
inc
ret
add
pop
hlt
add
mov
fnstenv
push
fsubs
mov
push
xchg
jbe
add
jmp
shlb
sub
lret
mov
cli
jo
lahf
jge
jo
fstps
mov
out
mov
aam
sbb
jmp
cmpsb
arpl
ja
push
jbe
hlt
imul
jno
xor
sti
xchg
leave
repz
into
jg
fidivrl
push
and
arpl
lahf
xor
mov
jmp
sub
push
mov
insl
push
xchg
ret
cltd
push
pusha
loope
and
popa
test
mov
cmp
sub
push
xor
dec
jno
xchg
addr16
dec
fldenv
hlt
mov
orb
mov
sbb
enter
xchg
sub
test
adc
mov
lret
or
in
cmp
xor
in
cs
leave
mov
lea
test
loop
minps
loop
mov
fs
adc
mov
sbb
cld
cmp
pop
stos
pop
mov
add
mov
add
or
jnp
mov
mov
add
cmc
cmp
push
lods
outsl
cmp
and
or
and
or
inc
xor
shlb
mov
xlat
popf
popl
dec
jmp
leave
lahf
xor
into
fmul
xor
xchg
orb
cwtl
pop
stos
ficompl
aam
sti
sub
jle
pop
pop
sahf
loop
mov
adc
adc
scas
fwait
nop
mov
cli
sbb
xchg
jns
fdiv
aas
mov
test
jmp
pop
cwtl
cmp
mov
push
xchg
mov
lods
ficoms
out
scas
fstps
or
jae
shlb
aaa
insl
stos
or
outsb
sar
fdivs
bound
push
in
xor
jae
inc
scas
insb
or
dec
imul
aaa
ds
into
jp
sub
dec
mov
cmc
sub
dec
fwait
and
mov
mov
aam
aas
pop
mov
cs
xor
cmp
or
mov
lock
and
sahf
scas
sbb
js
inc
sub
add
sub
pop
xchg
cltd
add
jg
pop
stc
mov
add
cli
enter
addr16
mov
ss
adc
outsb
inc
jle
test
or
jo
xor
add
sbb
mov
es
inc
pop
shl
arpl
add
mov
mov
into
fstpl
popa
and
jno
out
add
outsl
jae
dec
cmp
ja
aaa
push
test
push
push
mov
adcl
sbb
jbe
mov
ret
outsb
adc
pop
sbb
or
pop
arpl
iret
add
stos
hlt
fistpl
jmp
sbb
add
sbb
xchg
adc
lods
jbe
aam
add
jno
es
data16
push
sti
add
adc
sub
loopne
aas
hlt
out
popa
lret
adc
sbb
repnz
fcoms
xor
sarb
xchg
mov
lock
mov
scas
jecxz
mov
ja
adc
cmp
popf
das
pop
add
call
jns
cmp
push
mov
mov
inc
and
outsl
mov
mov
lret
push
lahf
sbb
jns
push
ret
inc
cmp
sbb
test
sbb
or
jp
fisubrl
lret
sub
adc
add
insb
popa
inc
pop
orb
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
add
jo
lahf
jge
jo
cmp
xchg
ss
lret
xchg
test
inc
pop
pop
addr16
mov
inc
push
test
lods
pushf
inc
or
push
inc
cmp
ret
xor
sbb
mov
sub
cwtl
and
mov
mov
mov
xchg
or
xorb
or
mov
cwtl
sbb
das
ss
mov
sbb
ret
ror
lea
clc
enter
pop
xchg
arpl
mov
std
jge
inc
movsb
mov
sbb
out
mov
repz
loope
repz
hlt
enter
inc
daa
push
sub
orb
mov
inc
add
ljmp
addr16
push
push
mov
fsubrs
mov
fcoms
call
inc
cld
div
movsb
jecxz
sbb
mov
loopne
cmpsb
push
jae
nop
xchg
into
or
sbb
or
stc
cmp
call
imul
stos
loop
cltd
icebp
sub
ret
mov
insb
loop
cmp
clc
push
fnstcw
cli
je
shl
addb
jns
cltd
mov
out
test
jns
fldl
sbb
pop
insl
jp
push
cmc
dec
fstpl
dec
les
cmpsl
and
ljmp
xchg
jle
mov
inc
out
dec
stos
jb
sub
adc
push
mov
inc
adc
out
lock
jmp
mov
hlt
cltd
insb
jle
test
mov
ret
jae
and
gs
mov
mov
inc
sbb
in
call
out
add
js
xor
cwtl
mov
xlat
inc
add
sti
add
mov
aas
int
icebp
cmp
xor
sbb
insb
cmpsb
adc
jge
fnstenv
cmp
xchg
lods
test
xchg
mov
mov
push
mov
xchg
inc
popa
pop
dec
adc
pop
xchg
mov
aaa
testl
cld
aam
dec
xor
ret
pop
ret
sahf
inc
arpl
push
mov
test
push
jle
cli
insb
xor
or
mov
lret
inc
xchg
add
outsb
mov
cltd
cmpl
cmp
push
out
push
loopne
jle
and
popa
or
pop
movsl
or
mov
pop
jmp
and
mov
mov
rorb
iret
adc
lods
push
lret
or
xchg
faddp
test
cmpl
jns
mov
sbb
xorl
sar
push
dec
out
jo
pop
jbe
jge
lret
inc
xchg
xchg
push
int3
out
int3
xchg
lret
scas
cmp
scas
lcall
repnz
repnz
lods
imul
cmc
out
repz
ss
add
dec
add
cs
js
es
and
push
out
es
pop
xor
idivl
cmp
or
lahf
sbb
dec
in
test
in
pop
dec
dec
jbe
cs
jl
mov
aas
cmp
add
mov
inc
sbb
sar
aas
je
mov
arpl
or
add
mov
adc
sti
mov
test
pop
jbe
dec
adc
gs
xorb
xor
divb
test
push
iret
inc
ja
xor
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
jno
pusha
xorl
jge
jo
into
jb
ficompl
movsb
add
mov
push
sti
das
repnz
sub
lods
sbb
dec
in
mov
adc
adc
outsl
test
fsubrs
xchg
andl
popl
jecxz
out
addr16
cli
or
cmpsl
adc
addr16
enter
test
push
std
pop
mov
lds
push
add
fldl
dec
adcl
loop
sbbl
sti
lea
es
or
xor
or
rorb
dec
xor
fwait
lcall
cmp
aaa
pusha
inc
or
mov
mov
sbb
inc
shll
lcall
inc
movsb
rclb
jbe
shlb
cs
mov
call
ficoml
addr16
mov
dec
aam
jae
jns
scas
xchg
ss
mov
adc
cli
mov
sahf
pop
dec
dec
or
loopne
mov
dec
or
xchg
out
dec
jne
dec
inc
jecxz
jmp
or
jo,pn
lret
pop
xchg
cltd
or
add
pop
fwait
das
inc
pusha
mov
adc
mov
dec
push
jmp
or
or
sahf
addb
inc
or
out
mov
cmp
sub
push
mov
ja
nop
jae
mov
and
ja
add
push
jbe
add
in
xchg
int3
arpl
out
cmp
cld
rclb
mov
inc
movswl
out
lahf
jecxz
xchg
fidivl
into
in
test
out
rcrb
cmpsl
dec
sti
push
fs
and
addr16
sbb
aas
jmp
sbb
push
jl
xor
adc
cmp
jl
shl
jg
push
pusha
subb
or
daa
inc
gs
mov
sbb
adc
sbb
popa
pop
gs
sarl
mov
in
rcrb
icebp
add
push
addl
xchg
shl
aam
mov
inc
fdivrl
pop
dec
in
sub
sub
je
xchg
xor
and
pop
push
ret
rorb
negb
adc
test
jge
fildl
notb
lds
cwtl
lods
add
fisubrl
push
stos
addr16
inc
sub
sti
jmp
add
sbb
fadds
mov
xor
pop
mov
mov
movsl
add
xchg
add
cmc
insl
adc
je
shr
loope
cwtl
push
std
hlt
push
cmp
adc
vprotw
or
dec
inc
cmp
scas
pop
dec
xlat
sbb
inc
pushf
dec
ja
or
xor
adc
adc
lock
mov
xor
cmp
lods
xchg
pusha
and
inc
mov
ret
jecxz
add
hlt
negb
or
xor
jl
sub
imul
sub
mov
inc
ja
mov
pushf
push
mov
mov
cmpsb
arpl
scas
fistl
sbb
or
movsb
icebp
add
xlat
jecxz
in
sahf
or
in
mov
test
sub
scas
bound
lock
xchg
mov
sarb
idivl
das
bound
gs
lcall
jl
enter
mov
rcr
adc
jmp
aas
into
xor
js
decl
push
mov
sar
xor
popa
data16
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
jo
lahf
jge
jo
test
xchg
xchg
and
repnz
popf
mov
pop
lds
cmp
mov
push
sub
dec
mov
inc
jo
mov
add
insl
out
je
add
xchg
adc
and
sub
in
mov
xchg
and
xor
aam
mov
iret
iret
xor
mov
and
cmpsb
ret
cmpsb
inc
repnz
jbe
cli
jp
pop
cmp
mov
subb
movl
or
aaa
jg
aad
mov
aas
fisubrs
sub
mov
inc
into
aaa
lods
testb
or
nop
xor
mov
pop
movsb
subb
in
aaa
das
ds
out
lret
xchg
frstpm(287
and
movsl
xchg
lods
cmp
data16
rclb
cmpb
pushf
sub
pushf
stos
test
out
cltd
dec
pop
lahf
sub
mov
loopne
inc
shlb
ret
leave
pop
mov
nop
inc
inc
enter
std
push
insb
cmpsl
mov
mov
jb
xchg
mov
lds
clc
xchg
test
in
ljmp
lcall
xchg
xchg
xchg
cwtl
test
ljmp
or
ret
sub
je
hlt
nop
cmp
cmp
xchg
push
mov
lds
repz
mov
mov
sbb
mov
mov
inc
sub
mov
push
mov
dec
cmp
popf
fldl
nop
mov
mov
or
and
xchg
add
iret
jp
dec
out
mov
ds
js
icebp
arpl
dec
jae
bound
popf
cmpsl
sbb
xchg
push
aad
movsl
lahf
je
cmp
andb
inc
test
mov
cld
add
cmp
pop
or
ja
mov
adc
or
pop
dec
leave
sarb
lea
pop
mov
orl
mov
rcll
pop
test
cmp
outsb
pop
stos
movsl
jecxz
int
out
std
push
xlat
enter
sti
roll
and
out
pop
dec
in
repz
sahf
outsl
nop
in
shrb
cmc
lock
pop
or
dec
hlt
fldt
add
dec
mov
clc
jnp
repnz
jae
mov
imul
divb
frstor
mov
jle
inc
mov
xchg
in
sub
popa
cmp
mov
fcoms
adc
imul
ss
inc
push
xor
icebp
adc
movsl
movsb
sti
bound
sbb
xor
xchg
repz
sub
cmpl
insb
xor
inc
mov
lods
mov
test
mov
lea
pop
inc
mov
inc
gs
or
adc
repz
or
xchg
mov
out
dec
iret
pushw
sti
movsb
and
dec
pop
cmpsb
jle
frstor
xor
in
movsb
xor
aam
mov
enter
jge
sub
cmp
fsts
cmp
mov
xchg
xor
repz
and
and
mov
and
cmp
mov
test
cmpsl
iret
je
xchg
dec
in
fbld
test
cltd
sub
out
inc
mov
outsb
insb
outsb
add
ret
inc
mov
mov
mov
arpl
and
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
ds
xchg
jmp
mov
lahf
jge
jo
jl
and
leave
stos
push
stos
mov
cmp
in
xor
sub
sub
es
fwait
pop
add
int
cmp
mov
popa
cmpsb
arpl
xchg
ss
andps
ljmp
xor
loope
gs
loope
gs
cmp
push
in
addr16
outsl
dec
push
leave
lods
or
sbb
outsl
aas
adc
pop
cmpl
push
pop
jne
mov
mov
scas
xchg
mov
or
sbb
shr
cmp
push
scas
cli
negb
sbb
xchg
jns
push
stos
loope
stc
cwtl
jecxz
arpl
xchg
push
test
and
add
push
outsl
in
insb
cmp
iret
pop
jnp
rorl
outsl
out
xchg
shrb
imul
cli
popf
fs
xor
test
std
popa
fnsave
bound
clc
in
dec
and
adc
rcrl
inc
push
out
adc
movsl
inc
shrb
jp
add
cmp
jns
mov
je
adc
sub
lods
out
xchg
mov
mov
fmuls
inc
push
popf
imul
testb
sar
sub
inc
jae
mov
out
push
nop
jl
mov
cli
ljmp
mov
rol
loop
adc
hlt
xchg
jmp
shrl
adc
or
inc
mov
iret
and
in
icebp
sarb
xor
hlt
dec
jmp
sbbl
xchg
xor
fsubrp
lret
mov
std
sub
cs
lret
pop
incb
subb
jp
lods
cltd
jp
push
cmpsl
pusha
jl
in
inc
call
enter
aad
adc
lahf
aaa
scas
jae
loopne
rcll
jmp
cltd
add
xchg
andl
imul
xor
jo
xchg
aaa
push
jae
cmp
dec
sub
mov
std
cld
dec
fisubl
insb
rorb
push
scas
mov
lock
xor
push
or
aas
sbb
pushf
cld
xor
sbb
cli
or
testl
adc
or
shrl
add
add
xlat
jmp
into
sbb
xchg
insb
xchg
pop
xor
bound
imul
inc
inc
pop
stos
int3
scas
ret
jle
inc
pop
mov
adc
pop
stos
movsb
sbb
dec
js
adcl
aaa
fwait
push
jo
push
fwait
inc
scas
sbb
mull
mov
mov
pop
pop
mov
inc
push
imul
xchg
ds
xchg
xor
cmp
dec
mov
fadds
loop
push
add
lds
lods
daa
in
sbbl
jno
adc
xchg
enter
xlat
popa
mov
ret
jg
push
dec
push
fistl
inc
xchg
cld
push
clc
dec
in
outsl
mov
add
add
repnz
jmp
popf
pop
mov
sbb
sub
jb
xor
andl
add
test
sarl
nop
out
pop
cwtl
dec
xchg
sarb
pushf
pop
cmpsl
ja
cld
jp
cmp
push
add
repnz
movsl
mov
dec
cmp
dec
inc
mov
mov
lods
addb
mov
xlat
inc
and
test
fsub
mov
pop
cmp
pop
scas
dec
or
das
inc
add
mov
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
ds
sbb
dec
mov
lahf
jge
jo
inc
inc
xor
mov
test
xchg
adc
push
leave
ret
adc
jl
xchg
xchg
sbb
cmpsl
cmpsl
cs
fs
jmp
outsb
add
or
cltd
push
mov
andl
fwait
cltd
pop
xchg
inc
xchg
xchg
fs
mov
loope
outsb
push
pusha
aad
aaa
ljmp
dec
outsl
in
popa
jp
push
push
int
icebp
int3
push
xchg
or
mov
xchg
dec
xor
jge
std
push
push
cld
dec
mov
pusha
outsb
scas
lahf
je
cmc
push
mov
pop
inc
xchg
mov
add
adc
inc
rclb
adc
psubq
imul
movsb
lcall
dec
test
sarb
enter
sub
mov
pushf
sbb
movsb
call
dec
inc
xchg
cmp
pop
scas
push
ret
mov
mov
fbld
jne
inc
daa
dec
add
stos
or
scas
das
pop
cmp
imul
sub
loope
pop
fistl
adc
shll
divl
clc
and
or
lds
pop
lods
dec
gs
adc
cs
add
or
loope
xchg
dec
lahf
mov
jbe
subl
repnz
data16
fwait
fwait
movsb
repnz
pop
pop
jns
negb
sti
jg
lcall
movsb
ss
dec
arpl
jne
sbb
je
orb
and
sub
aad
stos
cld
hlt
stos
lahf
fldt
hlt
fstpt
nop
ljmp
or
loopne
rolb
pushf
mull
inc
jno
sub
lods
add
dec
and
lods
push
pop
jnp
adc
cli
clc
xlat
mov
addr16
xchg
sub
cwtl
ss
shl
cs
cmp
jo
push
xor
sub
cmp
sbb
inc
in
test
xchg
mov
xchg
data16
sbb
cmpsl
mov
jae
cmpsb
fildll
push
add
lea
jg
xchg
pusha
sbb
push
pop
in
dec
outsl
jne
mov
cmp
fs
imul
jl
push
ja
sahf
ja
in
loop
adc
pop
cmp
push
cltd
sti
push
insl
das
mov
aam
rorb
push
xor
mov
or
dec
mov
cmpsl
inc
testl
xor
sbb
outsl
inc
cmpsl
pop
mov
mov
loopne
ja
add
xor
xchg
xchg
cmp
rclb
xchg
std
stc
xchg
les
mov
enter
jl
mov
xchg
js
insb
mov
stos
cmp
dec
sbb
addr16
lock
sbb
imul
mov
xor
jp
push
subb
in
dec
fcoms
cmp
dec
in
fists
aaa
xchg
shl
and
sub
add
and
xchg
cmp
loopne
dec
ss
cmp
inc
sbb
lret
aaa
ja
call
xor
xchg
jo
out
cmp
xor
dec
in
sbb
fdivrs
int3
inc
xor
hlt
pop
fnstenv
jg
mov
add
xlat
mov
mov
sbb
cmc
lds
xor
sub
int
mov
loopne
lods
adc
dec
int
mov
jbe
insl
in
mov
mov
add
or
jge
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
rol
lods
int3
in
xchg
jo
lahf
jge
jo
and
sahf
lahf
cmp
jns
lea
dec
sub
roll
pop
xor
cmc
das
inc
cld
data16
test
mov
push
popa
jle
jae
test
shll
sbb
xchg
and
jnp
pushf
jmp
hlt
fsts
fldl
cld
dec
sbb
cld
pop
mov
xchg
mov
cmovnp
inc
stc
jbe
leave
xlat
movsl
pop
shlb
inc
enter
fwait
adc
mov
cmp
nop
cld
out
add
nop
cwtl
test
jns
dec
lods
sub
adc
mov
outsl
enter
fsubrl
in
sub
cmpsb
mov
fisubrl
push
mov
insb
cmp
push
idiv
in
cmpl
mov
sbb
adc
mov
mov
daa
pop
sbb
addb
mov
inc
outsb
imul
loopne
sbb
cmp
push
xchg
out
add
add
fbstp
mov
dec
cmp
or
ret
mov
in
cmp
loope
cli
xor
in
jae
stc
xor
fbstp
push
stos
vmovntps
jbe
clc
mov
pop
add
dec
filds
jmp
mov
ss
adc
adc
in
gs
arpl
pop
js
sbb
sub
adc
sbb
xorb
jb
mov
stos
loope
push
bound
pusha
int
ret
dec
les
mov
push
push
sahf
or
mov
or
int3
xchg
mov
xchg
mov
xchg
mov
ret
adc
pop
and
dec
xchg
or
sub
testl
sub
add
fstl
sub
sbb
ficoms
pop
mov
cmp
ficoml
xor
push
jmp
pop
scas
in
push
or
cmp
loopne
inc
insb
dec
negb
inc
mov
mov
in
hlt
fildll
lret
jle
mov
sarl
mov
mov
mov
ret
jp
jg
or
mov
out
lret
jg
daa
sbb
out
leave
xor
cmp
stos
aad
sub
xchg
out
mov
shlb
mov
out
imul
rolb
and
add
mov
jl
les
in
pop
or
push
into
into
mov
mov
dec
sti
jnp
mov
ja
lods
ret
cmp
push
mov
and
mov
bound
lds
xchg
mov
jae
add
mov
dec
mov
inc
and
jmp
cs
aam
jne
daa
xchg
mov
mov
cmp
inc
insb
push
xchg
and
cmp
mov
pop
out
mov
mov
arpl
out
jp
loope
push
lcall
xchg
in
xor
mov
dec
imul
xor
jmp
adc
dec
mov
in
pop
dec
jnp
mov
jns
inc
cmp
mov
jmp
cmp
cmpl
and
or
mov
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
cmpl
or
or
jo
mov
add
rolb
xchg
out
dec
push
cs
icebp
loopne
lret
mov
push
fidivs
insb
cmp
and
sub
and
lcall
xorb
in
shl
mov
dec
out
leave
sahf
inc
dec
call
sbb
repz
daa
lods
mov
fnsave
mov
addr16
das
sbb
sbb
in
test
shl
xorl
cld
mov
int3
add
mov
adc
popa
push
push
mov
jl
and
popa
into
aas
loope
mov
pop
aam
or
into
dec
push
xlat
and
cli
ds
repz
jbe
add
push
add
and
push
sub
pop
addr16
jp
adc
sbb
popl
in
inc
mov
repz
pop
in
sbb
fsts
push
inc
fdivr
sti
mov
rcrl
je
adc
push
mov
in
pusha
lods
mov
in
dec
adc
sbb
mov
fdivrs
xchg
fcompl
popa
repz
ds
es
inc
in
xchg
popf
inc
add
mov
fldl
stos
push
add
and
pop
cmp
mov
inc
shll
mov
dec
lods
inc
and
adc
cwtl
data16
or
stos
sub
add
scas
cmpb
mov
and
jecxz
sti
mov
sti
xchg
decl
xchg
push
add
in
in
pop
addr16
and
mov
jnp
jb
aad
mov
push
jge
xchg
aam
cmp
fdivrl
push
adc
mov
mov
roll
cmp
pop
or
mov
gs
inc
or
mov
shrl
rolb
sub
jae
push
lea
aad
or
xor
fcomip
inc
sub
in
stos
sbb
mov
mov
or
adc
int
test
cwtl
mov
out
jb
fstp
push
shrl
frstor
cltd
incl
dec
out
pop
inc
or
aaa
xlat
dec
sub
xor
sarb
dec
je
mov
rcll
scas
jae
jp
xorb
xchg
pop
gs
call
enter
cmpsb
in
stos
jg
inc
and
mov
nop
sarl
dec
jge
stos
test
dec
sub
addr16
fisubrl
rorb
ss
push
jns
je
cwtl
hlt
inc
fiaddl
fstl
out
or
push
fisubs
adc
cmc
dec
pop
fcoml
inc
mov
mov
mov
mov
dec
rcll
adc
xor
xor
das
test
lock
lods
mov
rclb
stc
mov
adc
xchg
cld
ljmp
out
push
les
push
test
push
jae
xor
pop
test
insl
dec
push
out
fisttpl
jmp
jl
jp
xchg
call
adc
imul
pop
lods
fsubrl
push
adc
ret
mov
into
xchg
push
adc
cmpsl
jne
cmp
cmp
sti
jecxz
or
fiaddl
inc
lret
sbb
fisubrs
test
jmp
pop
repz
insb
mov
cmpl
mov
adc
stos
rorb
or
int3
push
xchg
aas
ret
xor
jo
jnp
bound
add
data16
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
les
push
and
popf
jo
lahf
jge
jo
cmp
sub
push
pusha
jns
xchg
sub
jge
out
out
inc
jl
std
xor
push
fmul
and
rorb
inc
add
mov
popa
int3
scas
pop
inc
dec
imul
push
mov
icebp
out
jns
mov
and
int
jp
jg
fwait
mov
mov
mov
push
xchg
xor
lahf
outsl
jecxz
daa
addr16
repz
stc
rol
and
call
cvtpi2ps
ja
mov
sub
sub
hlt
mov
xorl
cmpsb
jae
adc
cs
out
mov
sub
fstpl
mov
mov
fstpt
into
sbb
add
mov
stos
jo
out
lods
xorb
aam
mov
icebp
jbe
addr16
pop
inc
push
and
push
adc
clc
dec
clc
test
fdivrs
inc
xchg
inc
push
add
jb
jg
push
or
add
jnp
mov
shll
mov
push
out
ljmp
in
push
inc
sbb
lret
int3
das
fwait
cmp
xlat
and
popf
add
ja
lahf
aad
dec
or
pop
das
cmp
imul
in
movsl
mov
mov
push
rclb
in
sub
add
fucompp
lret
mov
sub
loope
frstor
xor
inc
cs
inc
jae
cltd
paddq
inc
and
mov
outsb
mov
aam
dec
and
jmp
mov
mov
mov
sub
push
jbe
dec
mov
addr16
cmpsb
call
jle
mov
lods
dec
adc
jl
in
movsb
ss
sar
mov
popf
sub
lret
mov
add
gs
pop
cmp
sahf
pop
jne
cmpsl
imul
cli
xchg
mov
pop
pop
imul
cmp
push
pop
mov
lock
mov
hlt
bound
cld
js
and
add
xchg
shlb
mov
adc
sub
lds
pop
insl
pop
sub
stc
and
jge
test
je
movsl
dec
xor
dec
mov
hlt
mov
mov
pusha
sub
icebp
lods
mov
dec
mov
enter
ja
adc
dec
pop
shrb
jnp
cmpb
shll
hlt
pop
jnp
mov
pop
xchg
jle
aaa
mov
mull
out
mov
mov
orb
dec
push
pop
imul
decl
lock
sarb
or
addr16
rep
scas
xor
cmove
repz
cltd
jg
leave
aaa
pop
std
xchg
scas
daa
jb
xor
xlat
push
sub
enter
lds
jns
and
out
cmp
icebp
lret
pop
add
mov
fnsave
push
stc
into
mov
add
sbb
cltd
or
in
jp
ficoml
into
fcomps
jne
aad
inc
mov
xchg
sbb
in
sahf
stos
inc
cltd
inc
pop
sub
addl
mov
push
scas
xor
outsb
into
dec
jo
cmc
fs
pop
pop
cmpb
push
pop
xor
cmpsb
stc
mov
dec
mov
out
sub
aas
pop
jp
push
inc
andl
mov
or
mov
pop
scas
push
jno
cmp
insl
and
cmp
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
insb
rorl
jge
jo
pop
jl
lock
aam
out
test
shl
push
shlb
ret
daa
ficoms
add
repz
ja
daa
cld
push
lods
and
and
mov
mov
mov
dec
in
fcomi
fs
pop
or
xchg
popa
pop
pop
test
pusha
push
or
mul
out
ret
or
sbb
popf
rolb
jb
cmp
std
stc
inc
cmpl
das
iret
pop
cmpsl
mov
dec
mov
mov
add
sbb
aaa
inc
mov
push
adc
xchg
xchg
or
mov
cmc
inc
dec
rcr
inc
iret
fcmovu
loopne
jae
imul
testb
shrb
mov
iret
roll
out
mov
push
loopne
xchg
rolb
sbb
bound
and
cmp
inc
push
out
test
jns
cmpsb
sti
push
and
lock
stc
repz
push
dec
add
push
pop
jno
or
or
int
mov
das
lea
push
aad
add
shlb
lahf
xchg
jecxz
stos
ficoms
sbb
adc
add
jb
jmp
dec
cwtl
sbb
jmp
sub
jne
cmpsb
test
idivb
lods
cmp
dec
pusha
out
mov
imulb
dec
xchg
mov
enter
jbe
cmp
pop
out
movl
arpl
adc
scas
sbb
cmpsl
adc
fwait
pop
xchg
dec
dec
decl
mov
cmpsl
mov
inc
mov
pop
jmp
jne
cmpsl
adc
mov
xor
sarl
sbb
shrb
loopne
iret
inc
mov
sub
cmp
xchg
jecxz
sbb
loope
jae
out
fcoml
cli
insb
mov
sub
add
sbb
push
mov
jmp
incb
lds
xlat
xor
lods
movsb
dec
jl
pop
inc
mov
rcr
push
or
rcrl
or
movsl
stos
in
pushf
push
push
ror
dec
pushf
xchg
pop
dec
adc
cmp
in
fildl
insl
leave
mov
ret
test
popf
or
sbb
adc
out
cmp
jnp
pop
or
sti
inc
pop
stos
sysenter
jmp
loopnew
loop
leave
mov
arpl
loope
mov
int3
adc
int
or
mov
orl
xchg
leave
inc
imul
inc
fsubrp
or
add
jno
sbb
jmp
mov
inc
sbb
inc
es
jg
mov
out
imul
daa
mov
jle
sbb
xor
cli
mov
xchg
loopne
ss
pop
sbb
lock
jne
lret
inc
movsb
jge
mov
movsb
call
sarl
mov
mov
cmpsl
xor
dec
std
jmp
jo
inc
pop
test
test
ret
or
lret
adc
repz
mov
iret
dec
or
xor
loopne
movzbl
mov
ret
jno
inc
ja
dec
xchg
movsb
int
xor
pusha
fisttps
mov
aaa
rcrl
or
fstl
shrl
and
sbb
sub
pop
repnz
pop
and
mov
jge
jg
scas
fstl
out
out
or
or
mov
loop
mov
xor
movsb
mov
inc
adc
mov
jge
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
ret
cmpsb
jo
ret
jg
jo
pand
add
fcomps
in
mov
in
jno
aaa
lods
adc
dec
mov
jbe
push
std
cmpsb
adc
inc
hlt
cwtl
xchg
or
into
mov
pop
adc
lcall
popf
int
lahf
lock
or
std
jo
pop
pop
dec
in
stc
cltd
ret
inc
ds
sbbl
shrb
mov
xchg
imul
or
add
stc
xchg
es
clc
rorb
add
test
movsb
andb
push
and
cmp
lea
lret
dec
pop
aam
outsb
or
dec
icebp
jge
fcmovnbe
les
loop
lock
dec
lds
les
arpl
stos
nop
push
aas
xchg
adc
aas
cli
pop
ret
add
inc
and
push
mov
push
or
out
mov
mov
xchg
mov
mov
and
frstor
sub
hlt
push
pop
xchg
cwtl
push
cwtl
and
out
in
loope
jecxz
popl
or
mov
cwtl
jg
xchg
pop
rcrl
add
adc
fdivrs
push
and
xchg
adc
adc
add
std
std
inc
add
add
add
add
or
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
and
jge
cmp
jo
or
mov
daa
mov
stos
inc
adc
dec
add
push
and
push
dec
ljmp
out
jns
cmp
xor
sub
aam
and
mov
movsl
fists
fsubs
lods
mov
lret
movsb
clc
and
fbstp
mov
test
mov
and
outsb
and
sbb
mov
push
pop
add
push
fiadds
adc
dec
std
gs
push
loop
movsl
jo
pop
add
pop
push
adc
mov
pop
push
xchg
or
orl
mov
and
push
jbe
xor
aam
leave
jne
fsubl
sbb
outsb
mov
test
and
xchg
xlat
aas
cmp
cs
xor
test
adc
add
lahf
push
lcall
fldcw
cld
ja,pn
jle
dec
or
mov
cmp
xchg
sub
xor
pop
pop
add
test
lds
fildl
in
mov
lret
jbe
jg
ret
fwait
cwtl
xchg
mov
inc
call
and
lea
mov
jmp
rorl
sbb
add
mov
jo
mov
sbb
std
xor
iret
fistpl
mov
inc
dec
and
arpl
jne
test
inc
aas
aad
movsb
aaa
mov
in
sti
or
pushf
outsl
pop
lret
adc
xorb
movsl
add
mov
lock
out
jne
mov
call
dec
insl
jnp
cli
or
dec
addr16
add
pop
sub
cmp
cmp
es
adc
imul
icebp
or
cmp
xchg
adc
push
aas
into
int
das
pop
out
push
inc
mov
lods
fisubl
nop
xchg
mov
mov
pushf
ss
add
jecxz
ss
je
inc
inc
inc
pop
inc
adc
cmp
adc
je
in
fcoms
out
jo
cmp
push
cld
xchg
ljmp
jns
lret
cli
mov
les
rclb
pop
push
gs
call
sub
test
dec
shl
lret
and
lahf
push
or
mov
xchg
das
pop
jno
inc
and
repz
sti
xor
jg
mov
dec
jmp
and
xchg
out
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
xchg
gs
pop
push
mov
jo
aad
jbe
sbb
adc
out
in
xor
xchg
pop
adc
push
or
test
lods
push
mov
adc
add
enter
and
popf
je
mov
outsb
imul
roll
or
fstl
je
push
push
std
inc
pop
mov
cmpsl
outsl
les
sarl
pop
inc
mov
sub
xor
inc
jae
les
das
dec
pop
scas
cld
in
jne
mov
add
daa
sbb
sbb
jo
jb
push
inc
inc
stos
int
insl
xor
ss
pop
xchg
sub
xor
aas
xor
jp
sbb
test
test
jo
cmpsl
cmc
add
push
adc
js
xor
jno
in
in
fmull
das
sub
sbb
or
movl
or
dec
pop
jnp
test
xor
jmp
or
inc
stos
pop
call
add
cmp
in
aam
incl
cmp
call
pusha
pop
add
xchg
jmp
mov
jmp
sti
cmp
mov
and
in
je
pop
push
mov
mov
adcl
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
test
mov
jo
ss
add
loop
adc
push
imul
scas
das
repnz
xchg
xchg
gs
inc
loop
nop
loopne
pop
and
data16
mov
pop
daa
push
enter
push
testb
xchg
call
push
clc
push
fs
jbe
clc
cmp
push
int3
in
jmp
loope
xor
sub
or
pop
pop
lea
cmpsb
lods
leave
xor
push
jmp
lds
es
pop
aam
cmp
pushf
jo
test
int3
mov
int
sub
pop
add
ficomps
fs
mov
mov
add
lds
cld
popf
outsl
xchg
in
add
ret
adc
xchg
stos
xor
add
jg
mov
sbb
mov
in
das
pop
mov
push
rcll
test
pushf
inc
xorl
cmpsb
ss
addb
cmpsb
out
xchg
ds
das
mov
push
inc
or
mov
stos
mov
mov
addr16
push
hlt
and
aas
out
outsb
mov
mov
mov
lcall
jbe
cmp
rolb
add
xor
jb
aam
xor
jecxz
test
lret
or
add
in
inc
add
movb
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
sub
insb
imull
jo
and
lret
daa
jl
dec
or
lock
test
mov
jns
sahf
sbb
xor
movsb
fildl
shlb
scas
lret
inc
jbe
xchg
call
pop
sbbb
lcall
jno
jmp
lods
fildl
sarl
lea
je
cmpsb
dec
xor
fs
les
sbb
aas
addr16
push
or
inc
sbb
dec
sbbb
push
add
push
pop
mov
pop
pop
jmp
stos
imul
and
jg
xor
sbbb
rclb
sub
mov
jmp
adc
pop
push
test
es
mov
add
mov
xor
inc
inc
jmp
test
aas
into
or
data16
xchg
outsb
xchg
out
jle
xor
cmpsl
push
test
push
lods
repz
jae
loope
push
out
xor
mov
mov
adc
mov
lods
sub
sahf
push
xor
out
sub
icebp
dec
mov
cmp
sbb
shl
lock
dec
repz
push
jno
cmp
mov
movzwl
jmp
movntps
push
rep
mov
push
jle
cmpsb
adc
jo
jg
jo
movsl
and
icebp
cmpsb
and
int3
rclb
dec
cli
cmp
dec
or
adc
sbb
mov
pop
mov
or
sub
jmp
fs
xor
add
or
fcmovnu
sub
sbb
mov
pop
jno
mov
ljmp
lods
imul
jmp
push
aaa
mov
dec
mov
inc
loopw
gs
into
pop
decl
mov
add
leave
ljmp
test
or
shrb
mov
lock
lret
cld
int3
xor
ror
jb
into
sbb
pop
pop
or
ficomps
mov
pop
lcall
lods
xor
js
jnp
push
popf
jae
xchg
jg
sti
push
in
scas
sbb
aas
fs
lock
incl
cmp
mov
jge
push
ja
dec
jle
xlat
test
imul
js
push
data16
mov
xchg
psrld
insb
je
push
iret
or
cmp
das
and
xor
and
push
push
lret
cs
dec
and
outsb
mov
dec
cs
jg
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
add
dec
or
jg
jo
mov
loop
les
jno
cmp
into
cmp
dec
xchg
xchg
sub
mov
inc
mov
jbe
in
adc
stos
mov
test
fiadds
xor
jg
aaa
ljmp
sbb
sahf
movsb
popa
sub
pop
mov
rclb
cwtl
cmp
add
mov
xchg
xchg
mov
out
jecxz
pop
pop
pusha
cmp
fidivl
xchg
mov
cltd
inc
push
mov
cmp
or
inc
pop
sarb
pop
sbb
jg
or
xor
pop
xor
or
rcr
jo
test
sahf
sbb
jnp
xchg
push
pop
dec
insb
mov
xor
aas
add
popf
jp
in
cmpsl
sub
movsb
mov
adc
cmp
add
and
inc
nop
jno
adc
cmp
jecxz
push
cmp
in
arpl
pop
stos
add
outsl
add
dec
test
adc
xchg
arpl
fsubrs
mov
lahf
cld
insl
aas
shrl
add
adc
icebp
js
fmuls
xlat
cmp
test
pushf
jb
add
inc
cld
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
add
jo
ret
jg
jo
insb
fst
aaa
sbb
inc
sub
push
scas
sbb
shrb
pop
inc
dec
sahf
lock
fcomps
jns
push
mov
mov
pop
fisttps
xchg
mov
push
pop
pusha
pop
repz
addr16
mov
jge
dec
sbb
sbb
jno
dec
mov
repnz
pop
push
sub
inc
cmpsb
mov
pop
mov
stos
xor
push
jl
loope
pop
adc
inc
stos
aam
pushf
leave
mov
dec
and
dec
xor
add
mov
and
outsl
sbb
xor
mov
outsb
loop
mov
and
adc
in
addr16
cmp
sub
mov
ret
enter
add
jmp
ficompl
adc
hlt
or
int
js
cmp
push
scas
mov
mov
or
ret
mov
pop
lret
mov
mov
add
mov
jns
in
pop
add
add
lods
adc
sbb
cmp
notl
xor
add
ret
mov
mov
cmc
loopne
aam
aaa
fbstp
mov
dec
sbb
js
add
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
ljmp
ret
jg
jo
adc
jmp
rcll
or
call
popf
push
mov
enter
pop
gs
scas
or
test
lea
xchg
and
xchg
and
out
xor
dec
mov
inc
popf
jl
cmp
lea
cmp
and
dec
aam
jnp
pop
jp
popa
out
outsb
inc
aam
stc
aaa
xor
dec
js
and
in
push
cwtl
xchg
push
adc
outsl
push
push
cmpsl
lock
xor
stos
push
aam
jbe
orl
adc
repnz
xor
push
mov
pop
pop
loopne
shrb
adc
dec
fcmovu
inc
cmp
lcall
ficompl
fldl
xchg
mov
enter
push
test
stc
cmp
lcall
bound
data16
jmp
out
imul
sub
aam
stc
xchg
mov
and
mov
xchg
pop
shr
pop
rorl
xor
mov
in
rcrb
in
add
jecxz
and
dec
loop
fcoml
faddl
xrelease
insb
out
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rorb
orb
jo
ret
jg
jo
cwtl
mov
xchg
neg
sub
inc
imul
stos
das
mov
idivl
xchg
mov
ljmp
sbb
pop
call
out
add
test
pusha
mov
inc
jne
jle
push
adc
add
scas
addr16
cld
inc
push
mov
int
jmp
dec
call
push
xor
mov
sub
rcll
cmp
mov
add
pop
push
ret
insl
iret
or
movsl
xor
xchg
lret
in
cmpsl
and
fldt
push
std
aas
fstp
jne
adc
lods
mov
icebp
dec
mov
mov
stc
inc
jb
adc
fildll
repnz
aad
sahf
test
imul
ljmp
jb
push
add
or
inc
jb
pop
push
push
dec
or
sub
ret
int
xchg
mov
lret
cwtl
testb
lahf
and
add
or
loope
jmp
lock
gs
adc
cmp
push
fimull
inc
push
mov
push
into
sub
icebp
add
out
push
call
pop
popf
mov
cmp
adc
push
add
loopne
loop
cltd
div
ljmp
sahf
adc
movsl
addl
clc
jmp
inc
gs
icebp
imul
mov
jo
ret
jg
jo
jns
shl
enter
repnz
popf
sub
jnp,pt
and
pop
xor
mov
out
sbb
scas
rolb
stos
in
icebp
fwait
push
xor
sub
xchg
add
scas
pop
xchg
hlt
scas
movsl
cwtl
cmp
punpckldq
lods
es
sbb
mov
sti
or
rcll
cltd
in
leave
jl
add
mov
xor
je
inc
xorl
push
jne
or
mov
fistl
add
mov
push
push
jo
out
and
fimuls
or
lods
add
imul
imul
mov
xacquire
lret
cmpb
js
jo
xchg
mov
pop
inc
xchg
insl
jp
xchg
daa
cmp
xor
movsl
test
push
divl
add
dec
xchg
adc
cmp
imulb
sub
stos
data16
mov
xchg
sar
ss
mov
mov
aaa
mov
xor
subb
and
xor
aaa
mov
js
jo
out
out
ja
dec
cmpsb
mov
and
lea
xbegin
call
loope
shrb
add
int
add
add
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
sbb
inc
xchg
jo
int3
in
cmp
or
outsb
addr16
jnp
jnp
and
leave
js
pop
adc
arpl
stc
mov
ljmp
les
in
repnz
or
fistpl
sbb
fucomip
xchg
pop
fwait
mov
cmc
arpl
and
shrl
es
sub
ret
xchg
andb
in
or
aaa
popa
lds
dec
sub
ret
outsl
scas
mov
outsb
fsubl
sbb
dec
push
adc
sbb
in
imul
jns
sub
lcall
xchg
dec
dec
mov
xor
mov
js
out
insb
es
or
es
push
test
cltd
cld
pop
dec
dec
lcall
fbstp
sahf
xchg
sub
add
aam
or
and
or
popf
mov
or
mov
fistps
mov
xor
fwait
outsb
ret
push
xchg
rcll
in
sbb
std
mov
std
xchg
ljmp
out
idivb
leave
inc
add
jmp
imul
mov
inc
testl
mov
pop
xor
and
inc
clc
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
mov
jo
jge
jo
fs
mov
or
jecxz
lahf
dec
call
cmp
mov
pop
mov
sub
movsl
add
and
xchg
mov
add
fidivl
sti
ret
hlt
test
fs
loop
pop
and
adc
rcrb
hlt
push
adc
lcall
xchg
mov
jbe
jo
sub
jno
test
movsl
test
pop
fdivs
inc
pop
int
cmp
movsb
sbb
cmpsl
es
mov
xchg
xor
data16
pop
jle
pushf
in
mov
cmp
mov
mov
xchg
dec
fwait
cmpsl
xchg
adc
sar
dec
push
daa
dec
mov
fisubs
leave
cmc
mov
outsb
lret
mov
adc
cmp
jne
inc
cli
mov
add
popf
sbb
mov
icebp
jne
pusha
mov
mov
sbb
mov
dec
adc
insl
add
jno
inc
and
xor
add
add
pop
mov
hlt
dec
or
and
icebp
jl
inc
out
cmp
mov
sub
int3
js
aad
sbb
shl
cmc
dec
fsubs
inc
clc
insb
xor
adc
pushf
inc
sub
xor
out
in
je
inc
cltd
sahf
and
rol
movsl
mov
data16
sbb
jmp
pop
jae
xor
orb
inc
add
pop
flds
xchg
push
addr16
mov
stc
movsb
clc
jnp
int3
jae
rcll
pop
mov
inc
test
xor
pop
xchg
sbb
lods
inc
call
or
mov
outsl
repz
leave
dec
out
mov
mov
pushf
ret
jae
mov
ljmp
in
xchg
sub
jnp
cmp
add
leave
scas
jecxz
pop
xor
stos
sbb
jno
stos
push
xchg
mov
mov
pushf
cli
add
sahf
inc
mov
dec
pop
jae
pop
jl
jge
jge
xor
mov
push
inc
lea
fistl
out
add
pusha
sbb
ss
cmp
push
sbb
das
stos
mov
repz
xchg
cltd
mov
push
repz
mov
ss
int3
jl
sub
fistps
cwtl
shlb
push
cmp
xchg
ja
cmc
or
cmpsb
xchg
add
push
add
aam
shll
aad
out
incb
pop
dec
insl
cmpsb
pop
adc
movsb
cmpsb
sbb
das
mov
or
xor
pushf
jecxz
enter
push
int
scas
and
pop
inc
stc
out
stos
es
mov
pop
lret
imul
icebp
pop
lock
xchg
push
dec
push
push
pop
aas
jge
gs
aad
int3
sub
sub
xlat
in
push
jbe
inc
push
call
jnp
or
or
cmc
jl
imul
icebp
cmc
add
xchg
int
sbb
icebp
pop
dec
dec
leave
inc
hlt
leave
adc
lock
mov
lret
sti
xchg
mov
call
inc
leave
lahf
mov
fwait
sbbb
inc
mov
dec
mov
dec
sbb
je
fadd
lahf
fmull
mov
dec
cld
sbb
xchg
inc
pop
repnz
jp
lcall
mov
xor
mov
or
popf
sub
js
pop
arpl
iret
sbb
mov
decb
lret
mov
lods
lock
and
jmp
insb
mov
and
inc
add
lds
add
mov
cli
xor
testb
mov
jo
mov
jge
sub
sub
addl
mov
xchg
sahf
push
xchg
adc
daa
jmp
arpl
clc
addr16
cmc
inc
imul
jmp
dec
mov
add
pop
xchg
pop
fwait
call
jbe
out
xchg
iret
mov
mov
add
sub
inc
mov
mov
or
lcall
clc
jbe
push
and
mov
int3
or
test
cmp
imul
lock
pop
repnz
lcall
xor
xchg
jp
loope
sar
popa
mov
arpl
into
jno
adc
or
in
jmp
xor
sub
pop
iret
js
dec
pushf
add
aaa
sub
cwtl
or
cs
aaa
sar
add
and
fsubrs
lock
mov
inc
lahf
lahf
push
fwait
sub
mov
cltd
lea
and
iret
or
xchg
adc
push
mov
pop
std
mov
xchg
fs
push
inc
add
out
cli
mov
mov
setnp
mov
pop
jb
sub
inc
and
mov
call
aam
cs
xchg
add
inc
hlt
mov
pop
lret
sub
sub
or
sbb
sarl
add
pop
aaa
loopnew
xor
lret
or
mov
or
divb
test
add
repz
lea
jl,pt
aaa
mov
test
adc
popl
shr
mov
push
in
dec
or
or
sub
sarb
and
mov
incb
ret
stc
js
lods
adc
dec
scas
jo
cltd
sbb
mov
mov
sub
dec
push
iret
jl
lea
cld
adc
cmp
test
mov
scas
ret
mov
ljmp
fimuls
mov
mov
in
cmp
cwtl
push
sub
arpl
lahf
je
shrl
imul
addr16
inc
pop
popa
int
or
mov
or
scas
out
sbb
dec
and
mul
cs
mov
fwait
mov
lret
or
test
cmpsl
and
insb
jns
fdivl
mov
rclb
push
jnp
dec
push
js
adc
imul
adc
outsl
push
mov
lods
push
shlb
mov
imul
outsl
movsl
mov
adc
sub
mov
dec
into
adcb
aam
push
mov
inc
xor
in
fimull
pop
ss
add
xchg
mov
adc
pop
movsb
loope
cmp
inc
dec
inc
movsl
jnp
cwtl
cmp
in
jnp
and
mov
bound
call
aaa
decb
xlat
sbb
mov
fsubrl
test
icebp
cmp
pop
ds
jbe
adc
xchg
jno
lods
push
dec
push
inc
filds
ds
stc
or
jns
das
nop
lcall
cmpb
add
push
jl
cmp
push
divl
adc
jnp
jnp
js
insb
push
cmpsl
loope
repnz
and
mov
and
subl
aaa
imul
test
push
daa
loope
pop
inc
lds
mov
sbbb
mov
test
inc
cld
xor
or
loop
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
out
xor
jge
jo
and
hlt
mov
sub
jecxz
push
inc
imul
add
cmp
xor
dec
test
pop
enter
adc
inc
cld
jl
add
mov
pop
aam
shll
xchg
push
or
pop
inc
mov
lea
mov
popa
adc
xchg
fnsetpm(287
inc
iret
aaa
rolb
fisubrl
pusha
lret
notb
in
imul
rcr
and
test
aad
dec
xor
mov
mov
test
imul
fisttpll
outsb
dec
cs
shrl
add
push
sub
or
in
dec
sarb
ja
jo
cmp
daa
dec
cmpsb
jg
sbb
adc
fisttpl
and
mov
adc
jbe
pushf
aas
pop
xchg
mov
sub
out
or
mov
xor
push
testb
rcr
push
push
pop
jecxz
or
lret
bnd
inc
in
and
xchg
dec
les
insb
add
pop
inc
jp
sahf
xchg
gs
pop
imul
inc
push
aaa
int
pusha
inc
sbb
imul
mov
js
xor
stos
jae
outsb
dec
mov
inc
cmp
into
push
pop
mov
pop
inc
out
pop
xor
cmp
sbb
ret
lret
sbb
push
cli
adc
bound
jge
in
ss
push
and
lahf
aaa
jmp
scas
cltd
lds
pop
sbb
mov
push
jbe
ljmp
stos
sub
in
and
xor
push
outsb
aaa
mov
sti
stos
mov
or
popf
movsb
inc
test
jmp
mov
pop
stos
inc
push
movsb
lahf
cwtl
mov
sbb
pop
xor
push
ss
inc
popf
fistpll
jns,pt
pop
sar
sbb
push
push
sub
push
jo
jmp
lock
mov
mov
fldenv
repz
fwait
outsb
sbb
popa
js
pop
sub
mov
fstps
xchg
jmp
mov
sahf
add
es
push
addb
repz
jb
fadd
mov
leave
pop
xor
sbb
sti
clc
xchg
cmpsb
adcl
shr
cli
mov
or
push
lea
pop
sbbb
inc
fisubrl
aad
pusha
mov
or
add
jno
cmp
or
out
cmc
dec
lea
sub
leave
mov
xchg
jae
push
fnsave
mov
hlt
insl
pusha
add
mov
std
xchg
loopne
cwtl
xlat
or
cmpsb
outsb
movsl
je
jmp
and
add
xchg
cmpsl
dec
notb
add
int3
lea
orb
push
pop
and
sbb
and
xor
scas
insb
add
je
mov
xlat
pop
pop
dec
xlat
sti
pop
ret
mov
jl
es
xchg
arpl
ret
lock
cmc
dec
and
mov
xor
fidivl
bnd
or
std
fimull
cmp
sbb
jae
inc
int
dec
pop
xlat
mov
sahf
das
push
in
jg
dec
push
adc
fcomi
mov
fwait
lret
dec
sub
push
xchg
mov
inc
rorb
and
xchg
out
pop
pop
movsl
jns
pusha
mov
iret
pop
in
decl
push
xor
sub
fdivrl
addr16
push
cmpl
jae
dec
or
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
xchg
fdivrs
mov
add
addr16
xor
add
popf
dec
jae
cwtl
jbe
sbb
das
sub
pop
jecxz
sub
dec
ljmp
popa
add
add
outsb
jecxz
adc
pop
mov
inc
test
nop
loope
out
sub
imull
mov
mov
popf
mov
ja
std
rcll
ds
sbb
sub
pusha
add
jle
dec
add
les
dec
mov
xchg
cltd
sub
ret
aaa
jecxz
cmp
adc
movb
and
in
push
repnz
call
push
outsb
outsb
push
adc
cwtl
int3
mov
adc
fs
call
test
jle
dec
jp
pop
cltd
lcall
push
imul
or
test
lea
lahf
push
psrlq
pushf
adc
xor
adc
mov
nop
cmpsb
mov
pop
stos
sbbb
sub
jo
push
sbb
mov
es
rcrb
into
lock
xor
sbb
mov
or
std
xchg
stos
push
xchg
sub
sub
fcomps
xchg
jl
popf
mov
pop
clc
xor
ja
in
rcrl
seto
cltd
popa
pop
sbb
js
inc
adc
mov
inc
fwait
orb
push
and
lock
push
std
mov
sub
push
nop
mov
pop
add
sub
inc
xor
mov
fcomps
jge
push
mov
or
sbb
cs
mov
xor
fwait
jl
push
dec
pop
nop
cmp
popf
push
mov
icebp
andl
iret
ret
popf
dec
xlat
cmp
int3
inc
cmpsb
lcall
ror
int
ror
mov
mov
mov
lcall
out
sub
inc
cmp
mov
pop
dec
mov
and
jg
adc
int
idivl
inc
lock
and
add
fwait
pop
push
sbb
sub
jg
mov
dec
test
jg
sub
pop
lds
mov
inc
xchg
sbb
je
xor
jbe
fwait
mov
addr16
movsl
mov
xor
jne
sub
or
xchg
jns
orl
pushf
add
in
sbb
frstor
cmc
repnz
mov
push
mov
adc
imul
or
fdivrl
sbb
mov
js
cmc
rolb
das
in
mov
and
clc
inc
js
dec
or
pop
sbb
xrelease
mov
push
sbb
and
adc
mov
mov
cmp
enter
cmpsl
je
or
rcrb
sub
cmp
shrb
je
test
push
sub
push
sub
loopne
icebp
jno
xlat
jge
std
mov
mov
sarb
sbb
pop
mov
nop
dec
sbb
arpl
xchg
push
mov
add
push
frstor
push
cmp
cli
lcall
mov
stos
mov
fwait
jl
mov
cltd
test
add
int3
xor
cmp
ret
dec
pop
lds
es
insb
test
testb
out
andb
imul
mov
sti
fadds
mov
jne
sbb
mov
add
jmp
outsl
mov
or
imul
bound
je
inc
jo
mov
inc
mov
sbbl
adc
iret
andb
out
push
mov
inc
pop
or
cmp
and
sti
mov
xchg
loop
dec
push
cmp
popa
hlt
addr16
push
pop
xchg
repz
test
test
mov
dec
sbb
pop
cld
out
pop
popa
out
jnp
mov
sub
cmp
mov
push
fbld
stos
or
cmc
jmp
xor
jae
xchg
cmp
std
xacquire
sbb
push
jge
cwtl
jae
addl
dec
mov
pushf
into
add
and
mov
jge
arpl
loope
imul
and
mov
cmp
mov
inc
push
loop
andl
mov
jno,pt
inc
mov
pop
and
lods
ja
mov
lcall
lods
mov
mov
stos
iret
adc
xchg
in
mov
pop
mov
xchg
scas
mov
push
sub
outsl
and
lret
xchg
in
lahf
aas
shll
shrb
ds
pop
popa
mov
dec
or
imulb
sti
jge
cwtl
or
in
pop
cltd
cmpsl
mov
cmp
cltd
movntq
out
mov
xchg
or
pop
pop
dec
mov
push
hlt
arpl
lret
mov
add
push
or
xchg
ja
add
mov
insl
dec
push
add
pusha
dec
das
loop
movsb
jge
out
nop
scas
fsubl
jl
push
pop
test
jmp
stos
jle
adc
sbbl
pop
pop
bound
sbb
or
pop
inc
adc
add
inc
xlat
jns
lods
xchg
dec
jp
push
movsb
mov
pop
mov
dec
or
xor
xor
pop
xchg
fsubrl
pop
bound
leave
jb
mov
push
sub
dec
mov
into
mov
mov
add
dec
lahf
test
sbb
andb
ds
dec
xchg
inc
mov
aam
test
pop
ret
jns
fisttpll
add
add
jp
and
sti
int
pop
and
movsb
shlb
lock
test
mov
pusha
dec
sub
sub
std
mov
lret
insl
xchg
sub
aam
mov
test
leave
and
mov
aaa
popf
mov
xor
and
jl
movsl
mov
data16
jecxz
push
test
mov
cmpsb
xchg
jge
mov
scas
insl
fwait
pop
jb
leave
fcoml
xchg
icebp
push
lods
repz
pop
mov
inc
sub
sub
adc
jp
cs
in
mov
adc
push
sub
lods
cmp
std
jno
jbe
es
and
lock
test
stos
test
scas
call
jb
int3
scas
sbb
bound
xchg
mov
jecxz
test
leave
xlat
test
es
lret
loopne
ret
inc
adc
adc
adc
std
cmp
jbe
fmulp
lcall
mov
and
sbb
lock
mov
jne
mov
leave
jb
lods
movsl
adc
cmc
cmp
xor
xchg
xchg
cmp
adc
jmp
jbe
jne
ljmp
lea
cmp
jne
lret
and
lret
std
inc
ss
sahf
dec
ljmp
and
aaa
and
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
inc
jo
pop
jge
jo
cltd
jl
bound
inc
push
stos
cmp
dec
cmp
addr16
stos
pop
hlt
daa
fists
mov
jmp
insl
and
addb
pop
add
andb
push
aas
adc
inc
pop
scas
jp
and
and
int
pop
jmp
imul
mov
add
into
aas
in
dec
les
ret
xor
fwait
nop
sub
mov
add
ss
mov
dec
es
stc
mov
pop
stc
fs
inc
sub
out
inc
mov
xchg
leave
jmp
push
push
arpl
pop
cmp
lret
inc
fmull
mov
insl
ret
jecxz
loopne
mov
int
dec
ljmp
ret
xchg
pop
outsl
inc
repz
pushf
lods
xchg
arpl
stc
push
jle
outsl
shr
insl
test
int
cmc
int
add
test
popa
mov
sti
nop
cmc
dec
pop
add
sub
push
pop
mov
jl
popf
jg
aas
add
push
fidivs
pop
cmp
and
xor
push
jl
shrb
shrl
ret
daa
jg
and
call
les
cmp
sub
sbb
jg
stos
push
lds
mov
mov
daa
adc
in
out
mov
subb
xchg
xor
adc
sbb
sarb
xchg
pop
jo
roll
push
cmp
inc
out
mov
fstl
add
clc
jnp
aaa
xchg
sub
pop
add
cli
arpl
int
mov
sub
stc
bound
xchg
repz
loopne
lock
ret
ss
lahf
dec
andb
and
push
mull
dec
sbb
and
imul
movsl
mov
add
rorb
subb
jb
es
scas
mov
mov
pop
les
sub
out
cmpsl
mov
outsl
lcall
cmp
inc
fidivrs
add
sar
or
adc
ret
roll
xchg
jecxz
pop
mov
inc
mov
mov
imulb
push
inc
and
jmp
pop
bound
insb
xor
xchg
clc
sbb
dec
or
jmp
xor
cs
sbb
and
mov
cmp
sbbb
inc
into
gs
repz
imul
arpl
mov
mov
sub
lcall
mov
and
outsl
lods
cmp
stos
insl
pop
fisubl
cmp
fnstsw
outsl
lcall
dec
mov
ja
lcall
mov
mov
mov
inc
loope
adc
stc
mov
mov
push
test
jle
out
out
inc
orb
fnstenv
push
adc
insb
mov
aaa
shl
and
loopne
pusha
mov
int3
rcrb
mov
xchg
sti
dec
gs
push
push
lea
outsb
loop
out
movsb
test
dec
data16
mov
xor
into
dec
test
and
dec
mov
pop
sbb
jae
sbb
repz
outsb
clc
cltd
rclb
clc
int3
jo
push
cmp
ja
insl
shrl
pop
pusha
pop
dec
inc
pusha
jnp
inc
mov
movsl
ret
mov
popa
sbb
and
aam
test
or
jle
sub
xchg
dec
or
mov
neg
cmc
dec
push
test
or
jb
nop
jne
notb
push
add
std
je
nop
xchg
xchg
in
pop
xor
mov
jnp
dec
mov
sub
inc
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
xchg
lds
push
lods
mov
sub
jbe
cs
ds
sbb
mov
iret
sub
mov
push
cmc
cwtl
xchg
mov
adc
sub
pusha
jns
cmp
stos
xchg
pop
xlat
mov
das
sbb
adc
mov
movsb
in
fbld
ret
add
xchg
mov
jecxz
fiadds
cli
imul
outsb
mov
add
xchg
test
adc
out
daa
pop
test
scas
lret
or
xorb
jns
add
mov
xchg
in
outsl
jmp
add
jns
sti
movsl
xor
and
pop
xor
dec
xchg
xchg
pop
sbb
into
loop
push
xlat
xor
insl
inc
jne
fsubrp
cmp
popf
popa
cmp
lret
push
or
sbb
sub
or
fidivs
js
mov
mov
negl
adc
iret
xor
pop
pop
test
mov
fwait
in
or
and
xchg
mov
cltd
dec
inc
shlb
inc
jae
clc
shlb
push
mov
outsb
fcompl
inc
cltd
in
outsl
inc
shll
xchg
and
pushf
hlt
pop
add
loope
pop
out
xor
inc
stos
test
sbb
rcrb
js
pop
call
std
getsec
or
jmp
pop
int3
repnz
es
das
add
sub
shlb
mov
jne
shlb
inc
mov
outsl
loope
sub
pop
push
test
mov
adc
xlat
cltd
mov
push
or
mov
scas
das
test
ja
cltd
scas
icebp
ficoml
jno
jmp
jg
mov
lea
fwait
dec
in
cs
or
test
xor
sti
mov
js
pop
sbb
adc
pop
dec
sbb
inc
mov
clc
divb
sub
xchg
cs
shll
push
mov
dec
xchg
xor
xor
or
mov
lret
fsubr
fdivl
in
adc
and
mov
daa
insb
ja
cmpsb
lahf
aam
ds
or
pop
ss
aad
mov
fistpll
fisubrl
push
addr16
sub
sbb
loop
push
lds
cmp
jge
bound
inc
add
movsl
and
xor
and
outsl
cmp
pop
dec
adc
and
cmp
sahf
loope
insl
sbb
and
mov
sub
js
pop
mov
and
mov
xor
and
push
mov
adc
lock
adc
add
cmp
add
mov
push
das
sbb
ret
push
inc
push
push
arpl
cltd
fbstp
das
ret
add
cmc
pop
mov
push
cmpsl
mov
adc
fiadds
push
jns
int
aaa
adc
in
out
fiaddl
daa
shrb
les
stos
pop
fiaddl
flds
mov
mov
mov
test
push
dec
je
jecxz
push
testl
mov
or
adc
cld
mov
inc
xlat
daa
popf
pusha
add
jp
mov
ftst
mov
rolb
out
cltd
cmp
jmp
xchg
mov
test
inc
push
jb
int3
inc
stc
inc
addl
jg
icebp
sub
lret
pop
arpl
cmpsb
cld
jns
lret
icebp
mov
push
int
or
sbb
xchg
loop
mov
mov
sbb
xchg
ds
inc
push
xor
std
fs
sub
cmp
mov
mov
pusha
xlat
loopne
sbb
fldenv
rclb
adc
jno
mov
icebp
std
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
sub
jecxz
dec
jo
pop
jge
jo
xchg
sub
cmp
not
xchg
out
scas
sarl
je
mov
pop
fnstcw
mov
aam
xor
dec
lahf
fwait
mov
push
lahf
icebp
mov
faddp
adc
xchg
pop
mov
int3
bnd
mov
scas
mov
cmp
loopne
cmp
andl
adc
mov
gs
add
jnp
mov
jge
cs
sbb
mov
mov
movsb
repz
popf
mov
and
movsl
fwait
xchg
repz
addr16
stos
andb
inc
cmpsb
sbb
push
push
insb
pop
loopne
inc
push
pop
subl
and
jl
out
pop
cld
xor
stos
imul
movsb
xchg
push
fcoms
movl
test
pop
in
sbb
jo
mov
cmp
loope
push
pop
xor
ret
cwtl
xor
ja
loopne
mov
addr16
cmpsl
loope
push
enter
mov
aad
dec
cmpsb
subw
sbbl
fisttps
loop
ficoms
add
jbe
dec
dec
mov
les
inc
loopne
imul
jecxz
xchg
lods
sbb
leave
clc
shlb
popa
push
shrl
and
add
inc
test
cltd
je
add
aas
ja
stos
add
in
imul
inc
sbb
mov
mov
pop
jg
adc
js
ds
idivl
sbb
sarl
adc
sub
divl
movsb
bound
fwait
in
dec
adc
lods
jo
in
subl
into
insb
and
js
stos
stc
je
inc
sbb
xchg
sub
mov
mov
bound
jge
int3
mov
loop
aas
mov
loope
jne
push
stc
sub
pop
mov
mov
and
add
out
mov
rcrl
jp
movsl
sbb
in
sbb
or
pop
out
inc
inc
xor
or
out
push
pop
outsl
adc
scas
xchg
jno
call
test
pop
ds
mov
jns
enter
movsl
push
ds
loope
cmp
jl
xchg
enter
push
inc
or
jmp
xchg
fsubs
pop
stos
adc
ja
nop
sbbl
sub
popf
jns
inc
mov
push
mov
xchg
or
add
sub
pushf
test
xlat
loope
dec
inc
mov
addps
dec
and
bound
jae
mov
sbb
mov
mov
push
xor
lods
stos
inc
cmp
lret
sub
cmp
and
lahf
arpl
ljmp
lahf
into
repnz
or
leave
xchg
mov
xlat
repz
cmp
repz
imul
int
rcrl
xchg
mov
xor
xlat
cld
jl
mov
mov
add
shlb
cmc
ja
dec
inc
js
unpckhps
cmp
insl
push
int3
imul
icebp
mov
mov
std
dec
mov
test
mov
adc
xor
mov
orb
fs
jmp
jecxz
cmpsb
nop
cmp
push
mov
lods
mov
mov
dec
dec
scas
mov
adc
subl
xchg
gs
push
add
fadds
xchg
inc
daa
int
or
stc
xchg
lock
jno
lret
sbb
inc
inc
or
js
push
lds
stos
sub
fwait
in
ret
cltd
bound
push
pusha
pop
or
lock
push
inc
mov
gs
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
or
push
jo
pop
jge
jo
movsl
loop
sti
jae
call
and
daa
orb
inc
popf
dec
pop
ja
pop
outsb
dec
sbb
or
pop
bound
cmp
pop
lret
imul
ficomps
sub
dec
mulb
xor
add
outsb
aas
adc
sub
push
mov
push
jo
sti
xor
mov
xchg
inc
mov
cmpsb
incl
pop
dec
sahf
sahf
xchg
inc
push
mov
mov
pop
cmp
adc
mov
loopne
in
aas
and
inc
lcall
mov
lods
lods
sbb
nop
cmp
lds
mov
xlat
add
loopne
push
xchg
out
add
jg
push
inc
jg,pn
inc
add
push
push
insb
bound
and
inc
or
add
cmp
mov
push
inc
nop
dec
imul
in
je
sarb
or
cmp
inc
pop
addr16
xchg
fwait
js
rcrb
cmpsl
lret
daa
in
daa
dec
push
pop
into
mov
push
mov
xor
sbbb
xor
jnp
lods
imulb
fidivs
add
out
push
clts
jns
lret
or
mov
jns
jmp
mov
xor
loop
lods
push
adc
cltd
adc
xchg
dec
push
shrb
in
cld
arpl
mov
inc
cmpsl
adc
xor
mov
data16
aaa
pop
sub
cmp
dec
pop
xor
cmp
mov
jbe
addl
scas
shl
popf
js
sub
stos
add
insl
mov
or
test
lret
or
stos
in
cwtl
test
xchg
adc
mov
loope,pt
push
lock
mov
dec
fs
fistl
rol
stc
in
mov
mov
nop
jmp
stos
push
stos
or
inc
push
add
pop
fnstsw
xor
outsl
sub
inc
jmp
mov
loopne
enter
jns
xchg
bound
adc
push
sahf
movsl
dec
outsb
xchg
push
cmp
rolb
cwtl
mov
inc
rcr
in
and
adc
frstor
pop
pop
fsqrt
dec
sub
push
sbb
call
jecxz
call
push
pop
call
xchg
aad
je
add
or
int3
loopne
inc
jb
push
rolb
fdivs
fwait
mov
xor
sbb
je
sbbl
mov
int3
pop
fdivrs
adc
inc
hlt
sub
ds
rcrl
or
lgs
sar
cmp
outsb
and
push
icebp
test
xor
xor
negb
push
cwtl
pop
fsubs
fldenv
sub
das
pushf
cmp
aam
push
cs
sub
rclb
cmp
dec
in
or
xor
repz
mov
mov
sub
aad
inc
aas
das
leave
dec
ljmp
imul
push
cs
int
cmpsb
inc
push
or
jnp
stos
jmp
int
push
xor
cld
aaa
push
mov
fsubr
rsqrtps
sbb
mov
push
jae
lea
dec
sub
jae
jmp
pusha
lds
sbb
in
mov
inc
hlt
aaa
inc
inc
ss
push
sbb
aam
xchg
add
sbb
mov
orb
ljmp
jp
aam
ds
iret
jb
mov
cmp
aaa
enter
ss
xlat
cld
aaa
dec
loop
cwtl
loop
push
cmp
mov
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
mov
push
jo
pop
jge
jo
xor
test
loop
pusha
ficompl
stos
aaa
sub
sub
inc
sub
mov
mov
mov
loope
pop
mov
pop
addb
or
cmpl
xchg
inc
inc
stc
outsl
incl
out
mov
jmp
shl
inc
xchg
clc
hlt
pop
test
popf
mov
jae
sbb
dec
jp
xchg
mov
or
mov
daa
jmp
jp
ss
fcmovu
rcll
adcb
jns
std
mov
mov
sbb
in
gs
neg
gs
faddp
aas
push
mov
sub
insb
sbb
sbb
negl
mov
sub
shll
test
stos
dec
in
sub
pop
cmpsl
push
dec
xchg
lods
repz
cmp
push
jge
xor
fmull
sbb
mov
insb
mov
inc
lahf
pop
insl
mov
cmp
mov
aas
sbb
push
inc
mov
cli
xchg
movsb
in
loop
push
aad
xor
push
lcall
mov
scas
adc
mov
xor
into
mov
xor
loopew
addr16
rcl
mov
mov
xchg
imul
imul
js
adc
push
call
xchg
shrl
add
das
xchg
cld
enter
mov
add
movl
lea
sysexit
sbb
lret
out
cmp
cmc
stos
popa
int3
loop
pushf
sarb
xorb
push
lods
insb
jp
inc
xchg
pop
jp
jnp
ficoml
psadbw
test
cmp
mov
fwait
cli
cbtw
xlat
jns
popf
xchg
mov
out
shr
popa
xor
cmp
add
int
subl
aas
xchg
sbb
jle
add
mov
pop
outsl
fdivl
mov
adc
sub
cld
lea
push
xchg
and
lahf
pop
jl
jl
inc
or
outsb
xlat
add
test
push
fcomps
xor
test
ret
jbe
mov
inc
in
pushl
jl
mov
test
jae
add
add
add
push
pop
mov
cld
lock
sbbb
icebp
pop
adc
dec
iret
popf
cmpb
loope
mov
adc
out
fld
pop
enter
aam
inc
aad
pop
cmpsb
andb
in
mov
adc
repnz
shr
push
xor
mov
iret
stc
or
sbb
mov
xor
cmp
cmpsb
inc
dec
or
or
aas
icebp
pop
pop
orb
insl
es
xchg
sub
sbb
aad
jp
icebp
xchg
subb
cs
insl
adc
lods
mov
into
out
out
leave
inc
cltd
lods
incl
hlt
out
leave
jge
or
js
sbb
icebp
sub
ficoml
or
pop
leave
push
pop
jb
jno
xchg
insb
mov
stos
push
push
dec
rcrl
jns
ficoms
fists
mov
in
mov
dec
push
cmp
sub
gs
aaa
ja
cmp
pop
daa
cmp
push
inc
fimuls
ss
outsb
popf
mov
push
or
or
insb
or
icebp
rcll
xchg
sub
std
test
add
pushf
test
bound
negl
jp
dec
sbb
cmpsl
ljmp
loope
les
dec
inc
dec
sub
ret
sub
xor
mov
pop
test
repnz
gs
icebp
xchg
cmp
and
or
mov
add
or
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
pop
mov
adc
jo
mov
sahf
xchg
sub
or
pop
cld
outsl
xor
sub
out
mov
loop
pop
call
insb
fcmove
int
push
inc
cmp
rol
les
daa
jns
jno
pop
outsb
and
adc
mov
sti
faddl
fiaddl
jns
in
loopne
sarb
and
xchg
and
push
call
mov
cli
mov
add
lods
stc
dec
jae
mov
xor
push
mov
js
fistl
stos
or
in
xor
inc
mov
jl
jne
add
ss
lods
insb
adc
ror
lcall
iret
and
aam
cmpsl
rep
fisubs
idivl
test
xchg
lret
add
adc
dec
push
push
loope
fwait
push
insb
xor
lcall
jb,pn
notb
pop
adc
jo
add
scas
xchg
or
test
aas
mov
lret
js
pop
mov
jg
pop
andb
out
mov
adc
sahf
push
cmpsb
cmp
cmc
mov
js
pop
inc
pop
push
pop
jmp
push
aad
push
pop
fsts
and
mov
into
pop
stc
fbld
cmpsl
xlat
les
ret
pushf
ret
and
scas
imul
dec
out
mov
jne
sbb
mov
mov
cmp
pusha
lods
dec
fiaddl
lret
sahf
or
pop
stos
pop
xchg
push
out
mov
test
mov
mov
jmp
jb
inc
xchg
inc
xchg
lret
mov
scas
inc
jbe
inc
imul
push
mov
xor
mov
loope
push
jle
push
mov
popf
stos
ret
cmp
mov
lock
cwtl
dec
mov
test
cli
mov
cmc
mov
xchg
sbb
aam
jno
out
cltd
sbb
fcmovnu
jmp
xor
fwait
push
scas
in
orb
jecxz
repz
rcll
pop
arpl
aas
pop
fdivrl
mov
je
ss
sub
gs
or
xchg
iret
int
cltd
loopne
and
in
or
rclb
lret
in
mov
dec
push
or
out
push
or
add
adc
mov
dec
cmp
sub
adc
xchg
or
cmp
dec
iret
jno
mov
inc
enter
leave
mov
lods
insl
inc
pop
lret
data16
xchg
dec
enter
ljmp
repnz
add
stc
std
inc
add
filds
add
hlt
xor
fwait
repz
inc
xchg
aaa
mov
pop
jo
mov
and
shrb
popa
push
lcall
sahf
gs
push
scas
mov
in
outsb
sbb
xchg
int3
mull
nop
jl
leave
mov
adc
jns
sub
repnz
jecxz
inc
and
clc
enter
pop
xchg
sbb
dec
and
filds
incl
cwtl
loopne
enter
inc
inc
stc
test
insb
adc
cs
dec
scas
xor
pop
ret
mov
pop
jo
lea
push
jmp
repz
jl
aas
mov
testb
push
sub
xchg
out
pusha
outsb
mov
sbb
iret
cmp
hlt
pusha
mov
cmp
sbb
xor
cli
mov
pushw
mov
add
adc
gs
xchg
sub
xor
mov
jno
xor
cmp
push
mov
xor
mov
push
neg
aam
imul
arpl
or
mov
pop
sbb
fists
mov
cmp
dec
in
std
mov
mov
add
enter
xor
jecxz
push
cmp
lods
into
jnp
xchg
xor
in
cmpsb
xor
test
scas
lret
stos
jb
mov
int
or
pop
rclb
filds
cld
mov
pop
test
jno
mov
mov
jge
insl
sub
clc
pop
add
dec
dec
lods
adc
movsb
hlt
push
add
pushf
les
mov
out
pop
or
xchg
push
sar
mov
mov
stc
mov
xchg
hlt
push
mov
pop
sti
adcl
outsb
out
fistpll
inc
inc
rep
out
lock
xorl
jmp
sub
insb
fstpl
add
mov
adc
loope
insl
dec
fstpt
test
jl
pop
xlat
mov
dec
scas
jle
je
lret
out
data16
mov
mov
mov
mov
sbb
enter
fisubrl
pop
test
mov
mov
in
cmp
repnz
push
mov
xchg
adc
pop
adc
mov
xchg
mov
and
les
lds
or
xchg
xchg
arpl
adc
mov
add
xchg
into
xorl
sbb
jg
icebp
xor
cltd
sub
ss
je
jo
mov
leave
inc
dec
xchg
or
mov
mov
ret
ficoms
outsb
in
jl
mov
push
enter
inc
adcl
ljmp
loop
push
xor
loopne
ljmp
incb
add
add
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
xchg
fmul
pop
jo
mov
lret
rorl
fistps
xlat
jmp
jns
add
dec
cmp
sub
fildl
mov
mov
lods
daa
daa
jb,pt
xor
dec
popf
pop
sbb
and
test
lods
xor
ret
int3
inc
mov
ret
mov
mov
lret
bound
cmp
lret
xchg
cmp
adc
imul
frstor
out
mov
pop
inc
adc
shlb
aad
dec
adc
mov
mov
xorl
xchg
stos
aaa
push
xchg
sarb
dec
mov
or
push
or
push
ljmp
incb
xchg
ljmp
xlat
and
add
fisttps
loop
das
aas
or
sub
push
cld
outsb
scas
jae
in
lea
cmp
retw
mov
cmp
or
lcall
jle
xchg
loop
mov
push
or
repnz
xchg
out
push
aam
rcrl
lahf
cmpsl
or
sbb
mov
pop
lods
clc
mov
xorb
sar
jno
cli
and
lea
or
lock
shrl
pop
cmp
and
int
mov
pusha
popf
jnp
pop
jb
pop
testl
push
mov
sub
lret
fcmove
jmp
pop
sbb
dec
leave
mov
aam
jp
cmpsl
adc
push
push
out
jg
jecxz
not
sub
and
sbb
add
es
mov
imul
outsl
xchg
mov
cmp
daa
cld
addr16
leave
push
jne
mov
xchg
xchg
sub
jecxz
push
add
push
mov
lds
sbb
xchg
jg
xchg
stos
leave
pop
das
iret
xchg
insl
stos
mov
and
out
loopne
repz
xor
outsb
xchg
or
mov
adc
add
push
mov
mov
movb
push
aaa
lock
or
mov
mov
sbb
push
jo
cmpsl
loop
mov
mov
mov
and
mov
movsb
out
and
mov
lock
imul
xchg
or
das
cmp
bsf
mov
xchg
fstpt
fsubrl
or
aas
aam
out
pop
sub
mov
out
inc
xchg
mov
clc
je
pop
or
or
inc
cmp
sub
sub
insl
stos
cmp
test
add
add
and
inc
add
dec
in
add
pop
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
popa
int
adc
jo
jle
jo
mov
out
mov
xor
lock
dec
pusha
sbb
repz
pop
icebp
test
sahf
jmp
lods
icebp
adc
xor
inc
dec
sbb
in
out
push
xchg
leave
sbb
aam
ret
jl
mov
out
int3
sub
js
incb
ss
es
inc
push
sbb
sub
mov
xorl
cmc
cmp
pop
sbb
inc
inc
mov
mov
insb
pop
cli
pop
stc
test
sbb
fistpll
shll
or
fisubrl
xlat
sbb
cmp
and
lock
mov
cmp
in
pushl
std
lods
fadds
sub
add
dec
out
pop
ja
in
test
pop
dec
push
inc
mov
enter
cmc
add
cltd
dec
cmp
rolb
mov
mov
cmpsb
repz
xor
adc
jecxz
dec
ficompl
repnz
cmp
mov
adc
insb
lret
stos
jne
mov
push
adc
add
push
mov
jl
and
push
sbb
xchg
sub
push
push
popa
fwait
out
fiadds
pop
cmp
jns
sahf
sub
mov
jno
sub
vpunpcklbw
add
out
stc
jns
out
divb
int
mov
cmpsb
inc
and
lea
outsl
lods
shlb
pop
loop
cli
push
add
push
inc
mov
shrl
xor
jp
fidivrs
mov
mov
stos
jne
out
mov
gs
loopne
es
xchg
sbb
push
cld
mov
imull
hlt
cwtl
and
ret
push
fmul
cmp
aad
cltd
lcall
inc
push
cld
sub
popf
ss
sti
test
rclb
pop
out
lods
push
fs
aas
pop
aam
rcr
xor
push
xchg
cmp
dec
inc
add
and
push
mov
mov
cmp
pop
mov
in
cld
nop
stos
imul
push
movb
pushl
jns
dec
outsl
addl
mov
xchg
jne
scas
in
in
mov
push
and
adc
mov
aad
pop
inc
test
dec
ficomps
or
cmp
cwtl
jecxz
int3
lahf
sub
mov
cmp
mov
push
out
pusha
fwait
ds
push
imul
mov
imul
mov
notl
jbe
dec
mov
and
imul
out
sbb
inc
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
adc
jo
jle
jo
retw
xor
or
jae
xchg
fs
not
mov
cmpsl
stos
stc
jp
and
inc
inc
or
pop
hlt
pop
push
add
jle
xchg
xchg
lea
insl
out
push
call
xchg
and
adc
add
popa
jecxz
out
sbb
xchg
adc
inc
cmp
mov
stos
popf
pushf
std
dec
rorb
sub
sub
loope
shll
sub
rcll
and
jbe
std
sbb
stc
pop
add
mov
xchg
jne
dec
or
cli
divb
icebp
sub
and
loope
bound
inc
dec
sub
mov
or
jae
loop
call
stos
fdivr
bound
aas
sub
xchg
mov
es
enter
or
popa
repz
cmpsl
in
sbb
das
in
in
sub
mov
inc
pop
bound
xchg
push
pop
add
daa
stos
icebp
test
lcall
aas
mov
outsl
add
cli
out
mov
inc
and
fcomip
es
push
jp
loop
icebp
mov
lret
std
mov
inc
or
cltd
je
push
prefetch
or
das
mov
mov
pop
das
sub
divl
or
lock
out
repz
inc
mov
push
fs
sbb
test
pop
clc
sub
xchg
mov
sbb
cld
ficoml
imul
adc
xor
aas
and
lds
and
repnz
mov
ljmp
sar
aas
pop
insl
sbb
shlb
into
popa
mov
movsb
push
in
lret
enter
lahf
pop
sbb
mov
iret
ds
xchg
mov
xlat
out
je
ja
add
in
das
subb
and
ss
lret
sub
pop
sbb
mov
jno
and
cmp
in
mov
pusha
push
or
jbe
sbb
adc
ficomps
mov
insb
mov
push
aas
dec
bnd
shll
and
dec
cltd
mov
xchg
fiaddl
out
push
pusha
dec
repz
push
sbb
js
push
mov
jne
sub
aaa
cwtl
pop
aas
mov
test
dec
leave
jno
in
arpl
pop
mov
mov
sbb
inc
in
xlat
pop
fldenv
add
jge
cld
out
xchg
jp
xchg
aam
inc
data16
or
inc
cmpsb
mov
shll
mov
mov
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
push
jl
mov
jle
jo
dec
xchg
ret
outsl
out
arpl
adc
jns
xor
js
push
insl
enter
push
pop
xor
add
loopne
outsb
shrb
fs
xchg
push
test
dec
pop
int
rorb
addl
sbb
pop
sahf
je
rclb
js
lret
std
mov
fisttpl
or
jns
adc
jp
push
fwait
cmpb
movsl
mov
xor
and
mov
rep
js
inc
enter
xor
in
adc
incl
cli
insl
in
adc
aas
sbb
mov
imul
sarl
add
sub
loop
push
cmpsl
cld
jl
jge
jp
int3
sub
push
sahf
inc
push
es
mov
shrl
pop
popa
stc
pop
adc
or
sub
pushf
cmp
and
adc
fldcw
or
jns
stos
daa
cmp
orl
call
out
jo
popf
std
xor
call
add
inc
shlb
mov
arpl
mov
outsb
mov
orb
notb
testb
mov
xchg
cmpsb
ret
dec
js
lock
outsb
pop
shr
cld
scas
hlt
jp
cmc
adc
xor
dec
inc
ljmp
mov
imul
shlb
add
push
in
mov
insl
push
das
xchg
xchg
fcomps
mov
adc
in
in
xor
fs
xchg
jo
lret
fsubp
mov
ret
ret
dec
loop
mov
insb
inc
je
adc
jge
jmp
les
or
adc
inc
mov
or
inc
std
cmp
in
push
dec
cmc
push
jnp
push
fimuls
add
call
cltd
scas
and
ja
cld
shll
test
sbb
cs
sbb
fistps
xchg
mov
lods
jbe
xchg
outsl
addl
mov
stos
ja
in
test
rol
jg
pop
jmp
mov
in
ljmp
mov
adc
dec
or
pop
jg
mov
inc
out
xchg
andl
jae
add
jg
test
das
sbb
sahf
arpl
and
and
test
pop
xchg
jno
adc
mov
inc
push
or
mov
add
pop
push
inc
clc
das
adc
or
ret
cs
in
pop
xchg
sbb
pushl
dec
sahf
fldt
inc
in
pusha
mov
and
xor
orb
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
fucomp
outsb
jo
mov
fstps
fcomip
aaa
push
sbb
int
inc
mov
push
shll
rolb
out
jecxz
popf
adc
jl
xchg
pop
inc
orb
dec
pushf
call
leave
mov
aaa
adc
dec
ret
jmp
iret
or
jecxz
xor
dec
adc
aaa
and
cmpsl
and
push
cmc
fprem1
pop
mov
ds
add
lea
add
es
dec
ret
push
xlat
mov
rcrb
inc
and
testb
je
dec
mov
push
lods
sahf
mov
into
out
fucomip
out
loopne
mov
and
mov
sahf
mov
scas
test
lcall
lret
rcrl
in
inc
cmp
jle
push
enter
xor
jns
inc
jge
leave
movsb
or
int
or
push
cmp
scas
or
nop
out
pop
add
and
sti
xor
push
mov
jnp
xchg
repnz
sbb
jg
ud1
frstor
pop
push
pop
mov
aaa
mov
test
sbb
pop
push
bound
enter
movsl
into
sbb
outsb
jnp
stos
sbb
pop
outsl
sub
arpl
jbe
fcoms
dec
push
adc
jo
fs
inc
cmpsb
icebp
out
into
les
pop
les
aaa
adc
cmc
sbbl
mov
jne
pop
cmpsb
xchg
test
test
pop
xor
loope
push
inc
mov
daa
mov
clc
andb
arpl
ss
sahf
mov
imul
push
aaa
imul
pop
loop
lcall
shll
sbb
test
jnp
push
int3
dec
cmp
dec
icebp
sbb
aad
mov
int
mov
xchg
jb
dec
push
inc
data16
jmp
and
pop
mov
subb
add
test
cmp
dec
mov
mov
in
xchg
mov
mov
je
jb
js
mov
adc
jge
inc
mov
jnp
in
shr
mov
or
inc
aaa
stc
xchg
lods
adc
jns
and
stos
add
mov
jge
xchg
mov
insb
push
mov
dec
data16
pushf
xlat
fimuls
movb
jp
scas
dec
ja
cmpsb
mov
jbe
xor
push
mov
jle
decb
into
pusha
xchg
mov
sbb
xor
xor
jl
and
shld
clc
jne
pushl
jmp
and
lods
shrb
in
gs
mov
mov
xor
sti
and
xlat
mov
fmulp
icebp
fabs
fdiv
jge
lahf
mov
divl
je
sbb
shll
or
lret
cmp
jle
mov
repz
lahf
push
call
mov
mov
in
inc
scas
adc
lods
ret
insl
sub
mov
ds
pop
add
mov
in
xchg
adc
and
dec
sbb
lea
or
jge
lea
shlb
loop
pop
pop
adc
lods
popf
push
shlb
inc
enter
mov
sbbb
ja
js
pushf
push
popf
sub
popa
fwait
mov
lahf
loope
push
scas
repnz
ret
inc
lock
shl
adc
xchg
dec
fwait
popf
test
pop
or
jmp
test
dec
enter
xor
fiadds
icebp
fdivr
in
add
sti
cltd
sub
inc
ret
repz
aad
or
mov
mov
aam
pop
dec
inc
incl
fbstp
or
pop
stc
xor
adc
mov
mulb
jecxz
mov
sbb
sbb
dec
mov
repz
sub
test
xor
jmp
mov
sbb
sub
pop
pushl
mov
or
mov
rcrl
inc
aad
and
mov
shll
cmp
mov
jne
dec
mov
push
add
test
imulb
insb
adc
sar
mov
dec
cmpsb
or
subl
xchg
ret
test
lea
mov
mov
pop
jno
cmp
and
incb
mov
jne
mov
xchg
sub
stos
addr16
pusha
les
push
dec
pushf
and
out
sub
and
fcoml
jl
repnz
push
jo
or
sbb
iret
stc
adc
sub
int
push
pop
pushf
mov
mov
sub
and
movsb
mov
lcall
out
clc
aam
fstps
xchg
pop
push
push
shll
idiv
cmpsb
mov
push
ja
lret
push
or
push
push
jne
mov
push
sarb
addr16
push
leave
xor
lcall
sub
push
stos
push
cmpsb
inc
pop
pusha
or
int
mov
sub
cltd
stos
sbb
mov
mov
push
push
movsb
xchg
xchg
push
push
push
cmp
add
ja
jmp
pop
insl
and
xor
insl
jp
or
or
int
jle
jo
mov
sbbl
xchg
push
les
lcall
std
xor
repz
dec
fiadds
cli
mov
jmp
repnz
out
lret
insl
shll
ret
adc
or
push
lods
dec
inc
pop
loop
push
bound
popa
push
push
lret
cmp
dec
cld
push
cld
test
cmp
in
sarb
push
mov
mov
test
pop
jne
pusha
nop
pop
push
add
pop
fcompl
ret
test
xchg
ljmp
testl
sbb
sbb
pop
xlat
sub
addr16
and
or
das
add
jo
inc
pop
mul
cwtl
xchg
or
inc
adc
in
adc
push
in
cmpsb
xor
out
lret
xor
fs
xchg
add
les
push
ret
shl
lret
loopew
pop
out
pop
mov
mov
or
mov
leave
in
fbstp
xor
sbb
ret
stos
rolb
cmp
lret
cmp
xchg
std
adc
lret
xchg
movsb
mov
loopne
in
std
fdivp
mov
rorb
push
dec
xchg
inc
fisttpl
ret
and
fs
fdivp
repz
dec
cmpl
sbb
lcall
leave
push
les
lahf
sub
jg
xchg
adc
test
inc
subb
jge
dec
jmp
cld
cmp
cli
sbbl
mov
test
xor
or
aaa
push
dec
jbe
push
jne
lahf
dec
and
imul
mov
stos
cld
shlw
sub
ja
mov
sarb
outsl
dec
rcrl
sbb
repz
push
jne
jb
cltd
loope
pop
js
sbb
inc
loope
inc
mov
popf
fimuls
pop
mov
pop
xchg
jbe
dec
sub
jp
mov
inc
rcrb
sub
test
adc
fcoms
clc
cmc
add
orb
loop
subl
pop
fdivrs
lahf
roll
xchg
leave
fsubrs
xlat
add
out
or
mov
pusha
mov
out
neg
loope
cli
cwtl
xchg
jmp
xchg
push
adc
mov
aaa
push
or
and
mull
aam
jecxz
mov
imul
xlat
push
mov
mov
std
dec
in
das
add
inc
xor
filds
push
xor
hlt
ror
xor
xchg
notb
inc
loopne
inc
cld
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
int3
xchg
inc
jbe
jo
jle
jo
adcb
aam
outsb
outsb
push
scas
stos
or
call
inc
ja
bound
push
add
roll
les
add
addr16
mov
or
popf
andl
inc
bound
mov
add
jo
push
and
sbb
mov
sbb
sarl
dec
test
push
and
xor
sbbb
in
test
imul
fdivp
mov
arpl
dec
and
and
fisttps
xchg
stc
pop
mov
out
repz
fistpl
sbb
xchg
cwtl
push
pop
je
push
popl
mov
bsr
cmp
in
cld
or
mov
into
loop
mov
xlat
or
xchg
xor
lahf
inc
sahf
lcall
mov
loope
adc
js
xor
xchg
pop
cmpsl
push
leave
jb
iret
aad
popa
and
into
adc
lods
dec
mov
into
lds
jmp
ret
adc
repnz
imul
outsl
in
mov
data16
das
sub
dec
xor
data16
push
cmp
cld
mov
cli
jmp
outsb
test
leave
push
inc
sub
inc
and
push
sub
lcall
ljmp
cmc
pop
adcb
mov
leave
imull
leave
cmc
adc
jge
insb
dec
cmp
in
int
jle
mov
add
mov
cmc
mov
je
insb
inc
push
and
adc
dec
cmp
test
and
mov
mov
sbb
std
loop
cmp
imul
xor
pop
cmc
inc
pop
icebp
fldl
mov
mov
jecxz
shlb
aas
dec
cli
and
pushf
repz
fldcw
cmp
leave
sbb
xchg
mov
int
jl
sbb
arpl
cmp
push
cmp
fistpl
cs
inc
mov
pop
or
or
xchg
cltd
mov
xor
jecxz
stos
es
jo
add
add
lahf
sbb
jne
xchg
pop
icebp
jb
mov
and
add
fimuls
jecxz
stos
scas
imul
add
popf
mov
xor
lock
or
sbb
insl
or
into
inc
repz
insb
jmp
repnz
divl
and
out
test
jecxz
jnp
pop
stc
add
rolb
stos
shll
in
cmc
sbb
dec
push
insb
ss
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
pop
pop
roll
jle
jo
aaa
xor
loop
iret
lods
inc
xchg
sti
push
xor
pushf
and
popl
sub
mov
pop
add
adc
or
mov
addl
test
call
xchg
pusha
das
push
push
or
cmpsb
jp
pop
push
ljmp
lea
sbb
push
cmp
push
push
jg
cmpsb
mov
pop
in
sbb
scas
clc
aad
push
mov
scas
inc
push
mov
fistpl
dec
fs
cmp
test
inc
push
mov
aad
sahf
jae
adc
out
mov
add
pop
push
mov
and
stc
xchg
inc
add
mov
fwait
rclb
es
fs
xchg
jmp
adc
addr16
or
in
cmp
loop
pop
and
in
xor
in
sub
jno
aaa
or
push
mov
out
mov
pop
xchg
jg
mov
into
jne
mulb
and
xlat
dec
add
fdivl
push
insl
cld
push
outsb
mov
rcrl
pop
sub
pop
fwait
inc
add
fdivl
outsl
cmp
andb
xchg
mov
push
and
test
or
or
sbb
cmc
xchg
jo
pop
dec
mov
xchg
and
push
sbb
xor
cmp
data16
arpl
add
push
cmp
ljmp
pushf
xor
sahf
stc
xor
inc
adcb
pop
pop
xchg
insl
insl
sbbb
jmp
into
pop
jle
mov
mov
push
subb
bnd
dec
fistpll
xchg
repz
mov
rcll
pop
or
sbb
mov
cmp
idivb
xor
stos
or
mov
adc
lret
mov
in
or
or
dec
aaa
pop
ds
sub
pop
dec
xor
lret
push
jp
xchg
inc
xor
test
loop
xchg
jmp
xchg
aad
decb
push
pop
movsb
xchg
fs
iret
rcll
hlt
jg
das
inc
and
stc
dec
cmp
adc
dec
adc
mov
out
lods
sub
adc
stos
mov
jl
imul
loop
out
arpl
inc
mov
push
ret
mov
test
mov
and
push
push
pop
xchg
sub
or
inc
sar
mov
cli
xor
cli
jne
or
mov
jne
call
mov
jmp
ret
sbb
sub
jno
pop
or
mov
jo
jle
jo
out
jb
cmpl
mov
mov
cmc
and
dec
add
rcrl
hlt
mov
test
inc
adc
loope
stos
ja
jb
ret
push
pop
xchg
fldl
inc
jne
fisubrs
dec
pop
push
jmp
and
pop
popf
adc
push
jae
rclb
jbe
mov
sub
repnz
insl
jg
sbb
or
xlat
fistpll
je,pn
mov
jae
push
inc
test
xchg
les
cltd
lods
loopne
inc
sbbb
popf
sarb
int
dec
pop
or
dec
int3
jl
mov
loope
stos
or
pop
sub
xor
xor
cs
xor
push
and
adc
sub
scas
stos
or
fnstsw
mov
in
cli
loopne
push
je
xor
hlt
and
xor
insl
ja
push
addr16
dec
fs
push
pop
xchg
push
add
shll
int
jae
sub
add
or
pop
cs
test
in
jge
adc
ss
dec
arpl
push
mov
test
pop
push
mov
les
into
aad
inc
inc
push
or
daa
insb
cmc
popl
sbb
into
ja
hlt
outsb
js
fnstcw
out
fisttpll
ljmp
test
sti
test
repnz
lods
daa
imul
lock
dec
addr16
popf
imul
jbe
xchg
pop
mov
mov
xlat
and
xchg
push
lods
iret
popf
xchg
lcall
cwtl
dec
test
shl
mov
mov
sahf
out
adc
cwtl
add
out
inc
pop
lods
cli
lret
mov
insl
ret
mov
xlat
adc
leave
sub
jmp
mov
push
jb
xor
jns
lahf
adc
ficomps
add
jb
data16
mov
dec
popf
push
and
add
addr16
cmp
addl
mov
stos
push
repnz
mov
inc
mov
push
daa
push
in
push
test
jge
aam
xor
mov
add
notl
sub
add
ret
adc
in
je
or
imul
bound
sub
rcr
xchg
xor
push
aaa
xchg
cmpsb
hlt
das
xchg
arpl
add
mov
and
movsl
mov
insl
dec
adc
ds
push
add
loopne
push
xor
test
adc
xchg
divb
add
mov
jae
mov
mov
xor
jmp
add
mov
jb
jge
jge
subb
adc
jo
jle
jo
cmp
jns
mov
movsl
in
pop
in
les
nop
dec
add
fstpt
sub
sub
pop
mov
test
push
mov
jo
pushf
fsubrs
orl
or
in
adc
push
mov
jge
cltd
sub
mov
push
jecxz
arpl
pop
repz
and
inc
mov
cmp
in
mov
outsl
mov
ret
shrb
shlb
adcl
mov
cmp
cmpsl
sub
mov
add
andl
es
cltd
insb
std
sbb
sahf
movhps
test
repz
add
mov
int
push
outsb
fbld
shll
pop
xchg
push
dec
push
imul
sub
mov
shrl
js
mov
sbb
xchg
and
jno
ret
scas
loopne
or
push
in
jnp
adc
adc
pop
cwtl
std
icebp
test
clc
cwtl
shrb
xchg
pop
cmp
popa
jmp
ficomps
add
mov
jge
addr16
pop
fdivrs
push
add
xchg
add
fcomi
xlat
daa
pop
inc
sar
push
xchg
sahf
out
shll
data16
jmp
shl
add
imul
mov
mov
pop
jae
imul
push
jg
sub
out
rol
enter
insb
cmpb
fsubrs
mov
cmp
sub
gs
pusha
xchg
fs
sti
stos
jmp
cmpsl
mov
mov
push
icebp
jmp
mov
pop
jo
pop
xrelease
loope
in
fldenv
jecxz
and
ja
ficoms
and
outsb
dec
or
xchg
xor
mov
lahf
sbb
mov
lods
sbb
in
popa
les
adc
pop
mov
or
adc
aaa
pop
or
lea
xchg
gs
lret
push
or
adc
sbb
mov
dec
in
add
sbb
ljmp
jmp
push
push
jmp
int
mov
mov
and
cmp
or
push
cmpsl
dec
ss
stos
cli
leave
and
cmc
inc
scas
shrl
lods
xor
jg
insb
sub
popf
sub
fxch
mov
mov
xor
cmp
mov
xchg
inc
aas
imul
jg
nop
jns
sti
lret
out
add
mov
in
movsl
cwtl
xchg
jo
pop
add
cltd
or
in
jb
mov
add
mov
sbb
and
outsl
xlat
pop
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
xlat
add
test
mov
mov
outsb
scas
adc
push
insl
cs
test
jo
push
cmc
hlt
nop
xchg
or
jo
adc
cmp
ss
lret
testl
fldl2e
das
xchg
fcomps
popf
rcrb
mov
addr16
les
dec
and
inc
mov
xchg
mov
mov
shrl
mov
jmp
sahf
out
lock
xchg
lret
mov
int
pop
xor
out
cli
sub
xor
bound
push
jmp
out
push
pop
out
and
sbb
andl
sub
imul
aaa
imul
sub
lret
mov
xchg
xchg
aam
push
xor
jge
mov
repz
push
add
or
shll
lcall
mov
mov
xor
xor
cmp
loopne
inc
mov
jb
js
jne
repz
sbb
jp
adc
imul
sbb
sbb
shll
fstpl
and
sub
push
aas
scas
pop
push
pushf
loopne
cmp
xchg
cwtl
pop
rorl
sahf
lcall
cmpsb
movsb
int3
stc
or
arpl
sub
cmp
mov
andb
adc
out
pop
mov
fnstenv
leave
les
ret
xchg
xor
pop
cmpsl
fisubs
jno
sbb
mov
repnz
or
jp
xchg
in
faddp
mov
aad
faddl
xchg
flds
in
mov
insl
xor
mov
xchg
and
sbb
xchg
pmullw
loopne
ficoml
fwait
imul
xchg
xlat
cmc
sub
jp
imul
dec
mov
mov
or
aam
cmp
pop
mov
mov
les
cltd
gs
inc
jmp
insl
int
stos
jnp
cmp
jmp
dec
cmp
xchg
jbe
sub
dec
pop
push
and
scas
lret
pop
xor
jg
out
cmp
pop
lahf
lahf
sub
sub
fildll
out
idivl
in
cwtl
in
mov
mov
push
push
adc
sub
dec
ljmp
mov
jno
cmp
in
mov
fstl
jbe
inc
push
mov
rcr
add
fidivl
mov
xor
std
clc
fcoms
ds
xchg
ja
icebp
xor
insl
pop
inc
lea
arpl
lret
decl
mov
adcb
jno
mov
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
fcmovb
xchg
pop
movsb
js
jo
jle
jo
add
es
inc
sub
inc
jo
xchg
movsl
mov
jp
leave
mov
sbb
add
adc
jg
rcrl
push
sti
push
out
in
shrl
xor
pop
cmp
out
mov
mov
jne
add
or
movl
mov
mov
mov
xor
jnp
xchg
mov
or
mov
in
movsl
dec
and
in
inc
loope
add
push
sub
jp
sub
mov
das
add
cmp
das
adc
or
xchg
into
jns
dec
mov
in
jne
out
sti
int
xchg
ret
aas
outsl
mov
adc
cmp
in
push
mov
les
jnp
lods
divb
adc
popf
pop
pusha
jmp
and
adc
xchg
xchg
mov
sub
out
fidivl
or
adc
mov
inc
imul
sbb
xor
into
dec
sti
add
test
xchg
insl
pop
xchg
sar
push
sbb
imul
dec
rolb
cmp
xor
xchg
pop
sub
cld
xor
mov
cmp
sbb
xor
dec
mov
jl
mov
ret
mov
sti
nop
leave
pop
xchg
inc
fs
inc
xchg
out
push
aad
fsubrs
push
xchg
adc
fstps
in
jbe
sbb
xchg
in
xchg
cwtl
pop
xor
subb
mov
adc
cmp
loopne
imul
ja
je
adcl
cmp
int
push
xchg
mov
jge
pop
bound
gs
test
cmp
fistl
aad
mov
rorl
jbe
rcll
ret
repnz
inc
xchg
mov
cmp
xlat
xor
sar
adc
iret
jp
shll
pop
push
fs
mov
mov
subl
nop
pop
mov
pop
mov
rcll
sbb
jns
shlb
ja
dec
int
js
test
mov
inc
mov
popw
lcall
out
test
repnz
adc
push
cltd
mov
cmc
jmp
push
cmp
repz
flds
pop
mov
call
dec
fwait
push
and
cld
lods
mov
cmp
jb
inc
and
jmp
shll
xchg
push
stos
in
icebp
pusha
pop
lea
imul
mov
pop
push
dec
pop
mov
xchg
sub
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fldenv
jg
mov
iret
cli
roll
jl
jo
les
lds
bound
sbb
pop
pop
mov
inc
sbb
and
sub
pop
mov
ret
mov
scas
inc
ss
pop
cpuid
sbb
cmp
jbe
add
jg
or
scas
je
sbb
in
loop
dec
inc
mov
or
stc
mov
call
insb
add
adc
add
aaa
jne
adc
fwait
jmp
popa
adc
ds
cmpsl
clc
cmp
mov
jg
jmp
loop
rcll
insb
aas
mov
sub
xor
mov
push
or
stos
cmp
mov
cmp
bnd
loop
jl
push
lret
imul
arpl
push
out
jmp
mov
push
call
clc
cmp
loopne
sti
push
out
sub
jo
jp
cs
pusha
in
mov
sbb
pushf
lods
mov
ret
sub
jne
out
sbb
mulb
mov
into
inc
outsb
test
mov
push
push
loope
or
loopne
loop
dec
callw
pushf
jo
jl
pop
out
repnz
repz
es
lea
in
jecxz
pop
movsl
sbb
dec
into
repz
add
repz
xchg
push
inc
insl
nop
fwait
ja
cmp
jae
jbe
mov
fidivs
das
in
scas
ss
scas
and
enter
orb
jge
adc
xorl
xchg
sbb
dec
push
insb
dec
fwait
decl
xor
jmp
jno
cli
std
in
cltd
mov
dec
xlat
pop
std
or
ds
cltd
xchg
cmp
sbb
dec
push
lret
aas
lret
cmpsb
dec
repnz
push
mov
rcll
xchg
imul
xor
ds
mov
mov
pop
cmp
or
in
scas
scas
out
sti
movb
fildll
add
or
scas
jne
jge
xlat
pop
cmp
push
icebp
pop
sbb
pop
pop
sti
movsb
loop
push
pop
les
inc
test
mov
mov
adc
outsl
out
xlat
and
or
push
push
mov
push
fiadds
and
into
xchg
sub
call
mov
rol
pop
cmc
push
sbb
inc
jnp
scas
call
ljmp
es
wbinvd
rcll
sbb
shl
or
mov
sub
inc
dec
pop
cmp
pop
push
push
jbe
into
cmp
inc
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
dec
add
jo
jle
jo
or
jbe
gs
xchg
loopne
xor
push
mov
xor
jecxz
xchg
cmc
xchg
pop
and
aad
jge
jno
iret
mov
repz
cwtl
test
xchg
rolb
lods
sub
adc
repnz
incb
xor
les
in
rorl
sarb
xlat
sbb
xlat
add
mov
mov
and
mov
insl
rdmsr
push
repnz
push
std
clc
nop
mov
xor
roll
data16
dec
jle
imul
pop
mov
push
push
cmp
cmp
insl
push
pop
leave
aaa
inc
inc
mov
in
inc
mov
imul
jnp
sub
adc
imul
testb
in
stos
mov
lret
mov
push
push
stos
out
sub
cmpl
je
xchg
mov
lea
pop
and
push
sarl
pusha
jno,pn
cltd
popa
lock
loope
gs
addb
dec
push
dec
push
ret
jno
popf
cmpsb
sub
mov
mov
sbbb
mov
stc
in
push
sub
push
jmp
imul
lods
pop
xchg
bnd
inc
pop
adc
mov
rol
pop
push
gs
cmpsl
mov
out
and
aas
pop
cld
mov
cmpsb
pop
mov
es
test
xchg
rolb
xchg
out
or
lds
cmc
aas
sub
or
lcall
inc
jae
out
ss
clc
mov
nop
inc
shlb
ror
pop
mov
mov
jae
xchg
push
fadd
cmc
fimuls
and
les
push
and
inc
jno
push
out
mov
jno
or
mov
mov
sub
push
nop
outsb
psllw
js
push
stos
stc
add
frstor
adc
cmp
or
call
scas
clc
jp
popf
outsl
dec
int3
pop
ja
aad
or
ds
adc
pop
pop
push
cltd
mov
and
and
and
aaa
xchg
in
pop
xchg
ficoms
inc
cmpsb
xchg
xchg
pop
mov
push
aam
mov
xor
inc
mov
ja
aad
inc
dec
shrl
sbb
xor
sbb
in
inc
das
mov
cld
mov
jo
and
cli
lock
sub
add
jecxz
jns
pop
and
in
jecxz
leave
jecxz
inc
pop
lret
dec
xlat
rcll
outsb
cmp
les
xor
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
iret
adc
movq
jle
jo
xchg
xchg
out
cmp
insb
stos
sti
and
add
mov
adc
cwtl
cltd
ret
fidivl
in
cmp
fnstcw
enter
xlat
inc
fisubl
sub
shl
cmp
adc
out
push
cmp
int3
fwait
out
popa
jg
jmp
or
inc
int
and
xchg
xchg
outsb
adc
rcrl
or
push
xchg
frstor
sbb
add
jae
dec
push
push
divl
out
test
daa
mov
mov
and
lcall
cmp
rorb
jnp
fwait
push
lods
enter
add
mov
shrl
roll
sub
push
or
mov
cwtl
int3
arpl
mov
inc
mov
stos
jle
sbb
mov
mov
xor
lret
fistl
mov
push
clc
push
cmp
loop
push
fdivrl
dec
jmp
mov
adc
outsl
mov
fcmovu
mov
mov
fwait
lret
or
fidivl
adc
mov
mov
imul
pop
ret
leave
daa
push
fs
in
xlat
mov
xchg
mov
aas
arpl
test
pop
lret
lret
sti
xchg
cld
jb
dec
or
sbb
mov
add
test
scas
out
je
lea
fldcw
in
and
mov
scas
lret
out
enter
pop
mov
test
ds
jp
and
rorl
test
sub
mov
mov
int3
inc
inc
cmp
push
mov
dec
dec
adc
in
add
cwtl
jg
cli
mov
int3
ret
cld
xchg
jns
in
in
in
jmp
je
add
xor
les
cmc
icebp
lock
and
add
hlt
mov
mov
cmpsb
mov
xchg
push
stos
stos
and
add
mov
and
es
pop
mov
insl
inc
pop
adc
add
mov
add
xchg
push
mov
mov
fnstsw
sbb
adc
pusha
pop
pusha
das
push
cmp
out
enter
add
out
xchg
sahf
sti
insl
xchg
call
or
test
and
mov
inc
xchg
aad
mov
pop
inc
stos
jp
in
test
pop
fwait
xlat
mov
stos
xchg
dec
pop
and
mov
fstp
lods
cmp
pop
push
lds
rcll
sub
push
cld
jmp
or
adc
jae
ret
and
add
add
add
push
fdivrl
pop
xchg
aas
nop
das
into
jge
or
jo
jae
push
shlb
mov
outsl
shlb
sub
adc
outsb
sbb
stos
out
es
ss
outsl
cwtl
dec
nop
pop
imul
rcl
out
ss
xlat
push
xchg
outsl
sub
fwait
nop
imul
rclb
lds
ljmp
scas
cmp
aad
inc
pop
lret
cmc
daa
jmp
add
mov
mov
mov
sub
add
test
lea
pop
or
inc
pop
jl
xchg
mov
aam
add
mov
cmpsl
or
xor
mov
xchg
push
pushl
push
jge
mov
lods
nop
lret
adc
sub
xchg
cli
lods
int
push
aad
pop
insl
and
aas
inc
adc
adc
ret
in
popa
in
clc
add
xchg
mov
es
repz
adc
cmp
add
into
ficoms
dec
jg
mov
xlat
dec
jbe
dec
inc
testl
inc
sarb
jae
loopne
jne
and
xor
jbe
cmp
jecxz
pushf
daa
test
cwtl
adc
xchg
push
nop
leave
pop
inc
mov
fdiv
out
sub
test
imul
and
sahf
insl
test
or
loop
mov
xchg
fisubs
pop
or
adc
outsl
xor
and
push
jecxz
push
je
stos
cmp
push
mov
pop
scas
push
mov
das
dec
and
dec
or
icebp
inc
jg
sub
sbb
jne
es
or
mov
add
jne
imul
sbb
decl
pop
or
or
loop
push
add
lods
lock
mov
xchg
dec
lods
fsubrs
arpl
imul
xor
outsl
push
jge
mov
stos
sbb
cmp
or
dec
movsb
adc
sbb
xor
cld
adc
inc
pop
add
push
inc
in
fstpl
mov
call
popf
push
add
clc
int
inc
dec
movsb
sub
jns
popa
pop
jae
mov
jle
adc
and
or
ds
imul
ss
add
mov
sbb
mov
inc
cmpsb
out
add
cmpsl
ret
and
lcall
xchg
movsb
pop
xor
jno
out
xchg
dec
inc
dec
out
jne
fldt
hlt
lods
add
int3
mov
aam
test
outsb
add
mov
mov
mov
mov
jmp
dec
fistpll
arpl
pop
jp
mov
out
orl
jo
imul
pop
inc
and
fwait
or
jnp
shl
lret
lea
call
mov
sti
add
pushf
push
in
lds
cwtl
enter
jmp
in
mov
or
sbb
repz
xor
pop
pop
test
ficoml
inc
dec
xlat
js
cmpb
nop
jg
and
pop
enter
insb
jl,pt
cmpsb
inc
inc
cmp
nop
jo
daa
rolb
in
sbb
fbstp
sbb
sbb
aas
pop
lret
fldpi
jne
hlt
xchg
pop
in
sub
std
jmp
add
sbb
mov
mov
inc
std
adc
ret
mov
cmpsl
mov
sub
push
xor
pop
add
outsb
pop
movsb
adc
rcrb
fldenv
push
mov
ret
fldcw
stos
jecxz
xor
fs
orb
fwait
ret
sub
push
leave
shlb
sar
add
push
fcomps
cld
lds
rorl
mov
jbe
add
cmp
cmp
ds
dec
aas
std
pop
std
xchg
repz
insb
imul
fldpi
xchg
testb
cld
clc
dec
sti
les
xchg
sbb
int
aas
xchg
and
push
in
pop
stc
xchg
lock
push
les
cli
arpl
push
divb
into
out
mov
stos
pushf
test
jae
clc
sti
mov
dec
int
loope
mov
add
push
gs
out
ds
jp
icebp
ss
xchg
jle
or
mov
inc
pop
rcll
and
vmovhps
adc
cmp
mov
loop
aas
mov
fwait
lcall
addr16
shlb
inc
addr16
in
scas
dec
in
imul
andl
jecxz
mov
xor
push
xor
add
dec
jg
dec
and
xor
nop
movsl
pop
imul
sbb
test
xchg
cmpsl
inc
jo
addr16
xchg
out
lret
pop
xchg
outsl
outsl
cs
or
sti
ljmp
xor
sub
and
sub
jo
sbb
jno
sar
cli
and
fs
shll
push
iret
mov
xor
mov
arpl
sbb
sahf
adc
sub
enter
lret
es
orl
adc
daa
inc
iret
pop
fildll
lcall
ret
test
outsb
adc
cmp
out
or
push
push
out
lock
jle
popa
add
pushf
jp
xchg
gs
and
ret
push
or
rorl
add
call
roll
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
cs
mov
pop
jg
mov
shrb
mov
outsb
inc
and
stc
out
inc
jno
daa
jp
aas
add
pusha
xor
or
shll
fs
jns
jmp
movsl
js
mov
clc
adc
jnp
cmc
lahf
xchg
repnz
cld
mov
aaa
js
ret
scas
fidivl
sbb
push
dec
mov
test
cmp
sarl
inc
xlat
mov
and
roll
sbb
or
mov
xchg
rorb
cmp
mov
incl
pop
into
xchg
or
dec
ds
dec
imul
mov
push
das
xor
add
push
jbe
sbb
mov
xorb
or
subl
aaa
jmp
rol
popa
test
or
pop
clc
mov
cmp
adc
push
jecxz
add
lods
icebp
xor
dec
cmp
jbe
popa
rorb
aas
scas
daa
inc
ss
paddd
into
sbb
shr
inc
fcmovnu
or
jne
pop
or
pop
int3
test
and
stc
je
push
or
jmp
lds
nop
int
mov
sbb
stos
fs
mov
sub
ljmp
test
stos
or
mov
outsl
loope
jmp
xchg
popa
adc
mov
pop
adc
fidivs
jne
mov
cmpsl
popf
cmpsb
addr16
sub
inc
leave
popf
jo
push
mov
mov
xchg
aas
push
movl
aam
pusha
mov
cmp
mov
into
jns
hlt
movsl
and
jl
sub
xor
push
xchg
insl
shll
push
dec
cmp
dec
les
xlat
push
dec
adc
jbe
call
jo
mov
lock
xchg
pop
fst
pusha
jmp
and
xchg
jge
pop
cwtl
lds
test
jnp
push
jo
add
arpl
push
popf
ret
inc
and
push
cmp
mov
dec
out
inc
int3
jno
jp
mov
sub
xchg
subl
call
adc
pop
packssdw
leave
adc
mov
test
or
mov
movsl
aas
lea
sbb
push
cs
cmp
outsl
cltd
inc
daa
pushf
test
jb
aam
test
enter
stos
nop
sub
gs
cmp
es
push
jl
outsl
std
sub
out
cmp
push
push
dec
or
or
mov
cmp
dec
or
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
xor
adc
jo
jle
jo
mov
aaa
data16
and
push
fmull
fdivrl
lods
inc
ret
repnz
cmpsb
jo
pop
arpl
push
shll
pop
push
mov
je
dec
add
pinsrw
inc
outsb
movsb
or
and
sahf
movsl
mov
sub
out
jo
dec
inc
test
and
cmpsl
fisubs
popa
cs
sub
or
xor
std
fisubl
jle
add
push
in
pop
mov
out
fucomi
leave
or
popf
fwait
cmp
inc
lret
mov
push
aad
cmp
adc
xchg
cmpsb
and
repnz
sbb
cli
jp
fdivrs
cmp
sub
pop
jns
or
lcall
ret
pop
out
rolb
cmp
add
xor
adc
push
jp
mov
daa
outsl
out
and
cmp
movsl
or
lret
mov
fisubrl
inc
insb
dec
add
stos
lahf
out
push
loop
mov
pusha
dec
int3
in
xor
jp
and
popa
xchg
xor
jl
jb
daa
mov
xlat
in
dec
ds
into
divb
das
mov
xchg
lret
inc
inc
add
test
cmpl
inc
mov
add
jo
sbb
mov
mov
pop
mov
xlat
mov
mov
imul
mov
cmp
das
xor
scas
test
or
mov
mov
adc
xlat
addr16
or
test
outsb
fs
push
sbb
xor
mov
pop
cmp
jecxz
enter
out
jnp
xor
out
jbe
dec
imul
imul
cmc
jnp
push
pop
imulb
mov
aad
push
mov
ja
fmulp
into
popa
aam
pop
xor
and
xchg
push
dec
mov
cmp
in
addr16
jo
arpl
xlat
into
and
dec
or
adc
push
xchg
inc
adcb
xor
sbb
mov
insb
ss
aam
pushf
ja
pop
lods
lods
cmc
mov
cltd
aam
aam
sub
cmp
dec
or
je
pop
jle
shrl
ja
sub
mov
sbb
cltd
ss
jns
jnp
ss
shr
bound
dec
and
xlat
aas
xchg
scas
lods
punpcklbw
shlb
push
scas
shr
mov
adc
int3
test
fldcw
or
add
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
fistpl
jo
jle
jo
aaa
mov
repnz
ret
pop
gs
mov
pop
sbb
add
fists
lds
mov
inc
pusha
arpl
push
mov
lea
and
mov
push
mov
or
addr16
movsb
pop
lret
mov
test
lcall
data16
lea
xchg
cld
cmp
sbb
adc
mov
les
jbe
and
mov
arpl
xor
repnz
jne
xchg
cmp
add
test
add
ret
adc
ror
shrb
addb
xchg
adc
ret
pop
fistpl
stos
aaa
jmp
dec
add
pop
xor
ror
loopne
testl
ja
or
and
jge
popf
lds
push
cwtl
pop
repnz
cld
jns
adc
cltd
jae
mov
in
test
mov
ja
int
adc
dec
and
xchg
and
lret
cmp
sbb
movsb
lret
mov
ret
mov
out
mov
inc
jge
and
loopne
xchg
outsl
push
mov
pushf
add
jo
sbb
pop
mov
xor
push
mov
inc
movl
dec
jle
ret
and
sbb
xor
mov
sub
dec
mov
std
xor
push
lcall
into
sub
lods
pop
cld
mov
frndint
addr16
adc
outsl
mov
out
shl
lahf
mov
and
cmp
pop
movsl
jne
adc
insl
push
and
lret
cmp
xor
lret
cwtl
adc
xlat
insb
jns
mov
jg
pop
gs
pop
or
je
push
mov
data16
inc
inc
mov
jmp
adc
sar
xor
loope
les
insl
push
filds
adcl
rcr
sbb
jae
jecxz
push
push
or
xor
jno
movsl
mov
xchg
and
call
fsubl
js
jnp
int
cmp
sbb
adc
ret
fmul
icebp
imul
je
in
clc
adc
pop
inc
fisttpll
adc
cmpsl
cld
adc
int3
in
and
sbbl
and
shrl
mov
cmpsl
push
jb
gs
mov
xor
lea
lret
jmp
cmc
std
fs
jno
mov
stos
or
movsl
pop
jg
mov
daa
call
frstor
xchg
sahf
sbb
adc
inc
add
dec
mov
mov
xchg
imull
rcl
stos
push
hlt
ret
inc
fcoms
mov
sub
lods
xor
data16
scas
out
mull
fidivl
inc
push
push
clc
dec
xchg
rol
repz
addr16
ds
push
and
mov
mov
shlb
rep
outsl
jns
inc
push
ret
cmp
jge
xchg
sub
and
or
or
iret
outsb
xchg
push
ret
mov
enter
ret
jnp
les
pop
addr16
mov
and
pop
repz
mov
cmp
xchg
pushf
xchg
add
dec
enter
pop
mov
push
fcmovbe
cli
and
inc
pop
mov
mov
aas
adc
push
inc
into
lea
xor
xor
dec
negb
mov
pushf
fdivl
loope
xchg
stos
test
insl
xor
xor
push
sub
sbb
jnp
xchg
cld
addr16
mov
or
imul
or
ds
pop
mov
int
sub
pop
lea
outsb
dec
sub
dec
xor
mov
outsb
lret
xor
jmp
xor
popf
jnp
sub
ds
lods
pop
mov
std
push
cli
cmc
push
pop
pop
mov
push
ret
iret
in
add
mov
mov
xor
cmc
bound
adc
fimuls
mov
inc
sbbb
scas
hlt
push
xor
xchg
aas
out
inc
icebp
sbbl
mov
fwait
gs
decl
and
daa
iret
mov
aas
lods
scas
jge
fadds
push
jo
pushf
jae
jle
add
faddl
test
loopne
or
das
mov
loop
mov
xchg
hlt
cmpsl
jnp
jge
xor
cmp
popa
aaa
lret
loope
outsb
inc
xchg
sub
sub
pop
xchg
add
fldenv
ljmp
dec
insb
xchg
or
adc
add
aad
mov
sub
mov
or
sub
imul
sarb
pop
mov
jge
jp
loop
sub
mov
mov
iret
mov
cmpsl
and
inc
test
push
insl
or
test
les
jne
sbb
or
mov
sahf
cmpsb
ja
mov
sbb
and
ja
pop
mov
mov
xchg
insl
mov
dec
loop
jns
mov
arpl
rorb
sbb
loope
sahf
lock
ljmp
in
filds
add
outsb
ds
loopne
outsb
outsb
mov
mov
dec
out
sbb
jo
jle
jo
jmp
sub
insb
shrl
jle
shll
sbb
jae
sub
pop
pop
scas
xor
mov
into
sbb
sbbl
xchg
push
xchg
adc
xor
sti
dec
inc
lock
scas
cwtl
in
mov
enter
mov
dec
or
pop
sbb
xchg
outsb
cmp
dec
lods
xor
add
sarl
roll
push
cltd
mov
js
mov
shrb
mov
rorl
int
mov
xor
fisttpll
pop
jmp
cmpsb
mov
cmp
add
int
lahf
pushf
dec
sbb
mov
mov
cmc
jae
loope
sbb
push
xor
pop
cmc
mov
ds
or
jecxz
or
or
insl
enter
push
cmpb
test
mov
sub
je
mov
mov
int3
shrl
cmc
mov
jae
adc
inc
mulb
iret
sbb
mov
jecxz
jp
push
pop
outsl
lods
clc
push
sahf
es
jle
dec
bound
jo
lret
jnp
jl
push
das
lcall
pop
jp
dec
loopne
jge
movsb
xor
push
orb
dec
sahf
iret
sub
push
popa
add
push
leave
lds
xor
cmp
aaa
xchg
lods
jl
add
ret
ja
push
jp
bnd
in
fldenv
jne
lds
dec
xorb
fistl
mov
cmpsb
pop
mov
fmuls
dec
stos
rcl
test
sbb
jmp
sarl
ja
mov
loop
or
ret
pop
cmpsl
inc
push
ljmp
cmc
insl
outsl
xor
rclb
es
dec
int3
jp
mov
insb
insl
inc
and
lods
cmp
sbbb
mov
sub
push
mov
inc
pop
pop
or
add
pop
repnz
ljmp
push
pop
push
mov
lea
adc
inc
inc
je
pop
mov
mov
mov
imul
xor
jae
fistps
jae
testl
cmpsb
sub
mov
pop
cli
and
push
aaa
sub
pusha
fistl
xchg
push
faddl
lods
jnp
nop
mov
lret
decb
ret
in
dec
icebp
cmp
in
push
cmp
dec
pop
adc
fcomip
mov
xlat
in
sub
add
std
sub
inc
mov
sarb
lods
cltd
aam
and
pop
clc
mov
adc
shlb
xchg
xchg
jnp
fnsave
outsl
ss
mov
mov
add
call
push
aas
insb
pop
leave
mov
sub
ret
dec
inc
imul
add
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
inc
cmp
pop
aaa
sbb
mov
xchg
dec
cli
xlat
xor
dec
stc
and
and
add
movsb
push
nop
push
adc
add
cmp
movsb
xorl
lcall
mov
xlat
sub
jp
sub
cmp
cmp
cltd
mov
and
xor
push
fistps
push
lahf
inc
mov
and
andb
xor
adc
or
js
xchg
stc
mov
lods
xchg
icebp
mov
push
daa
sbbl
mov
jl
mov
aaa
and
test
inc
leave
test
or
aas
xchg
lcall
sbb
mov
sahf
je
push
imul
push
xor
sbb
insb
jle
mov
fiadds
ljmp
movsb
inc
mov
and
gs
dec
push
repz
ljmp
mov
stos
jb
sub
stos
xchg
xchg
movsb
outsb
xchg
btrl
scas
mov
lods
lds
sbb
mov
mov
icebp
repnz
shrb
loopne
sub
and
mov
cmc
gs
daa
xchg
in
shr
dec
ret
inc
out
sub
std
mov
pop
imul
test
scas
es
mov
leave
icebp
dec
adc
push
lahf
xchg
fldenv
add
stos
aaa
pop
xchg
pusha
outsb
mov
and
test
mov
out
imul
enter
pop
inc
int
ds
mov
jae
fwait
xor
int3
jae
ja
lcall
jb
faddl
arpl
sub
sbb
movsb
xchg
jnp
xor
pop
int3
pop
pop
in
call
push
xor
std
loope
outsl
add
sti
cltd
stc
js
xchg
cltd
dec
outsb
mov
mov
imul
dec
cmp
adc
int
mov
int3
mov
test
lock
xlat
std
lret
ret
add
jmp
dec
cmc
jg
or
lds
lret
jno
mov
sahf
sbb
loopne
xor
sub
cmp
dec
pop
aad
inc
sbb
shlb
pop
xor
in
pop
jge
add
icebp
in
ret
les
gs
std
jae
outsl
movsl
movsl
push
xchg
movsl
push
xchg
jle
dec
sbb
mul
jb
iret
push
aad
or
lds
lret
add
cmpsl
xor
lcall
mov
aaa
out
lcall
bound
and
cmpsb
mov
iret
adc
and
push
dec
xchg
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
xor
scas
add
es
mov
cli
imul
imul
shll
add
outsl
mov
imul
aas
lret
add
push
xor
and
mov
cwtl
mov
xlat
mov
xor
cmp
fsubs
dec
stos
xor
cmp
push
in
add
xchg
add
adc
clc
cmc
xor
dec
sub
push
sbb
outsb
rolb
adcb
or
jae
roll
daa
adc
add
faddl
sbb
out
xlat
pop
loopne
scas
js
sub
and
arpl
pushf
mov
jge
push
pushf
aad
jnp
cli
sbb
jne
mov
push
loopne
enter
xor
mov
jmp
out
or
cmpsb
test
jo
xor
and
test
inc
pop
out
mov
add
push
test
sar
sub
mov
test
fnstcw
imul
movsl
jo
and
fwait
and
mov
dec
movsl
mov
mov
xchg
jno
pop
fbstp
stc
pushf
dec
aas
jge
and
into
or
nop
xor
jg
xchg
in
mov
cmp
bound
mov
fwait
sub
mov
ret
pop
pop
mov
jbe
push
add
xchg
stos
sbb
push
push
aad
mov
imul
lds
push
xchg
add
stos
push
inc
pop
inc
stc
inc
push
bound
punpckhbw
stos
cmp
adc
test
pop
dec
push
xchg
xor
xchg
dec
repz
fimull
out
cmc
and
std
iret
aad
test
sub
xlat
push
or
push
imul
mov
cmpsb
or
nop
push
iret
mov
enter
xor
jp
xchg
jp
inc
test
push
push
mov
arpl
in
scas
negl
xchg
or
fidivrs
dec
icebp
xor
cltd
int3
mov
iret
fists
lret
je
shrb
sbb
xor
xor
or
adc
hlt
mov
mov
cmp
daa
xchg
dec
jle
mov
mov
adc
popf
ss
pop
adc
dec
daa
or
mov
lods
xchg
mov
movsl
cmpsb
ds
mov
fcomps
and
mov
xlat
mov
fsubl
and
cli
dec
lds
mov
jmp
and
xchg
sub
xchg
push
xlat
rol
mov
int3
pop
mov
lds
ds
jno
aad
jecxz
aaa
lods
pop
cmp
xchg
jl
out
dec
and
cmp
loope
xor
cmpsl
lods
insl
fcompl
pop
push
fucomp
inc
xor
add
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
sbb
mov
jle
jo
sbb
adc
and
bound
xor
shrl
arpl
mov
pop
jecxz
cmp
iret
adc
popa
push
sbb
pop
icebp
int
and
cmp
xchg
mov
dec
in
or
jns
xchg
in
mov
adc
mov
push
out
push
in
push
in
adc
or
adc
or
sub
xchg
jb
dec
adc
sti
std
push
jmp
xchg
adcl
lods
add
lahf
jo
xchg
loop
and
int3
out
aad
icebp
jp
sub
fmull
out
mov
iret
xor
push
rcrl
xor
inc
fiadds
pop
aam
mov
sub
mov
dec
jbe
insb
fwait
bound
push
ret
or
rorl
fldenv
pop
mov
divb
inc
xchg
dec
xchg
adc
xchg
jo
adc
pusha
mov
jmp
jge
cmp
loopne
push
xchg
lret
inc
add
cmp
jecxz
rep
jp
and
or
pop
and
fdivl
xchg
shrb
xor
pop
jecxz
fisttpll
popf
mov
cmp
cli
mov
mov
insl
dec
dec
mov
pop
in
shlb
rcr
pushf
dec
ret
pcmpeqw
mov
mov
ja
sub
test
cmpsl
push
int3
fs
adc
add
mov
xor
xchg
xor
jb
cld
cwtl
mov
out
sbb
mov
pop
inc
in
in
jnp
adc
repnz
cmc
or
mov
mov
mov
sub
cwtl
lret
aad
push
clc
and
mov
jns
popf
mov
jge
loop
inc
and
or
or
or
inc
lret
ret
or
adc
dec
inc
sub
in
hlt
dec
ret
xor
and
push
jns
daa
push
or
imul
mov
aam
push
pop
bound
imul
adc
imul
cmc
andb
fwait
in
inc
popf
push
pusha
inc
cmp
cmpsb
lock
iret
dec
push
loopne
push
add
aad
mov
test
pop
popa
jl
je
xor
nop
outsb
cs
mov
dec
dec
daa
lret
mov
or
jno
lret
jecxz
mov
lcall
aaa
mov
sub
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
