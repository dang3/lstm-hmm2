push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
mov
jle
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
mov
xchg
mov
mov
mov
aas
jge
inc
rorb
adc
push
xchg
mov
dec
cmp
sbb
jecxz
mov
fsubrp
jl
cmp
push
cwtl
fldt
or
mov
or
mov
adc
movsl
pop
push
fldl
and
cli
dec
addr16
and
loope
jne
addb
mov
mov
inc
lret
sub
ja
mov
test
add
mov
sub
mov
int
lods
push
xor
push
das
add
jno
push
pop
or
adc
clc
cltd
mov
xchg
jmp
adc
xchg
mov
ror
adc
in
jns
rcrb
and
clc
mov
push
jge
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
mov
jg
jle
jg
jle
cmp
cwtl
imul
shlb
mov
mov
adc
push
and
cmp
enter
mov
sbb
fs
lea
or
xchg
push
inc
in
fsts
push
ljmp
jmp
cmpsb
lcall
inc
push
lret
or
jne
popa
fistpl
cmp
daa
push
add
nop
test
ror
xor
inc
mov
jg
push
cmp
int
xchg
repnz
test
out
in
sub
ret
push
sbb
cmp
cmp
push
xlat
inc
das
rclb
and
pushf
mov
movzbl
dec
sbb
cmp
mov
mov
sbb
inc
imul
lods
cmp
aaa
aad
pop
pop
cli
push
jp
xlat
mov
lds
sti
ljmp
aas
lret
jle
xchg
stos
popf
in
xor
pop
iret
xor
loope
ds
test
mov
repz
add
out
sub
sbb
sti
repz
push
sbb
cmp
xchg
mov
jle
inc
sub
les
pop
or
jb
xchg
jge
shlb
ja
adc
test
pushf
mov
int
shlb
movl
lgs
xchg
add
loopne
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
sub
jge
jle
jg
jle
out
sub
mov
or
jle
jb
ss
xchg
cwtl
mov
fs
cmpb
mov
and
call
gs
inc
aas
test
dec
fists
out
js
mov
hlt
pop
scas
aam
es
outsb
jle
loopne
mov
sbb
loop
push
mov
mov
mov
ret
pop
lret
dec
daa
loopne
xchg
pop
mov
xchg
push
ret
jg
ja
fmulp
dec
or
lods
cmpl
sub
pop
sbb
ficoml
getsec
enter
fwait
loop
stos
jno
lods
shl
int3
pop
inc
cmp
pop
sbb
je
out
repz
adc
outsb
or
push
lea
test
mov
nop
bnd
sti
xchg
mov
movl
pop
push
inc
mov
es
iret
sbb
shlb
add
dec
add
and
jne
neg
enter
dec
das
cld
fdivrs
jg
stos
jp
cli
inc
lret
pop
dec
mov
add
sbb
gs
inc
inc
in
nop
cmpl
mov
movsl
movb
das
ffree
pop
push
xorl
jnp
cmp
cmp
cmp
cmp
xor
dec
mov
pop
andl
pop
jne
mov
lcall
jp
inc
sbb
or
mov
mov
pop
sbb
hlt
sub
add
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
push
jle
jg
jle
inc
mov
mov
dec
pusha
xor
sbbb
inc
cmp
ja
mov
xchg
mov
into
data16
push
rorb
cli
lods
cmp
xchg
repnz
mov
xor
andb
cmpsl
inc
sub
adc
cld
inc
in
mov
sbb
cmp
lock
push
jnp
lcall
nop
jp
push
cld
mov
ret
mov
movsb
movsl
fbld
sbb
xchg
ja
adc
subb
jl
pop
inc
xor
mov
sbb
mov
data16
out
int
sbb
adc
scas
rcr
push
test
sbb
lahf
push
push
mov
pop
adc
scas
xor
xor
flds
fsub
pop
cld
mov
xchg
push
imul
mov
cmp
leave
xor
add
dec
int3
test
sub
lds
sub
jp
mov
mov
cmc
ds
pop
fidivs
imul
xchg
fimull
mov
mov
movsl
std
mov
std
jnp
in
out
bsf
cmp
mov
cmp
fcomp
cltd
xchg
push
insl
push
ror
jg
imul
call
cld
fiaddl
sbb
enter
sbb
aad
adc
fsubs
aaa
push
or
fnsave
addr16
inc
lret
es
pop
outsb
aam
sbb
cld
pop
out
mov
cmp
gs
mov
jmp
xchg
mov
push
jo
adc
dec
and
movsl
push
js
jle
jg
jle
popa
push
shl
icebp
xor
pop
cli
cmp
adc
ljmp
imul
pop
lock
movsl
cwtl
sub
nop
adc
push
divb
dec
mov
pop
stos
and
pushf
bound
or
jmp
lea
mov
sub
lret
scas
push
pop
int3
das
jbe
imul
fstpl
jge
xor
insb
cmp
pop
loopne
icebp
pop
fidivrl
pop
divl
pushf
fs
or
repz
mov
mov
cs
inc
xor
sub
xchg
insl
pushf
and
rcll
push
mov
mov
imul
mov
push
ret
cmp
out
adc
scas
and
jp
mov
xchg
sbb
xchg
in
add
cmp
mov
stos
mov
mov
mov
fwait
dec
lods
sub
sbb
int3
sub
jp
push
push
dec
push
mov
out
dec
aad
lods
dec
pop
push
fsubrs
in
aad
mov
arpl
jae
decl
rorl
xor
lret
inc
jl
and
scas
mov
xchg
adc
dec
imul
imul
out
mov
nop
cmpsl
mov
pop
pop
push
adc
mov
hlt
xchg
fsubs
cmp
dec
mov
inc
mov
dec
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
in
movsb
jecxz
mov
jle
jg
jle
dec
hlt
dec
aaa
xchg
stos
mov
mov
jbe
lret
push
pop
xchg
aad
sti
loop
outsb
or
sub
pop
clc
int3
add
outsb
cltd
xchg
jle
add
xor
pushf
mov
lahf
mov
bound
insl
inc
xorl
loopne
dec
mov
nop
xchg
rclb
icebp
or
sbb
sub
shll
into
movsl
test
outsl
ret
add
or
in
test
xor
aaa
gs
daa
cmp
mov
dec
sub
dec
inc
adc
ds
jne
adc
out
xchg
sbb
mov
fsubrl
lock
lds
lret
push
xchg
jno,pt
jecxz
ret
fmul
lock
pop
fimuls
gs
ret
jae
or
adc
push
les
inc
fs
pushf
imul
add
push
fdiv
lret
shrb
je
lds
out
push
das
pushf
or
dec
push
jecxz
loop
pop
cmp
repnz
push
or
sbb
fwait
stc
jp
adc
movsb
aam
sub
jnp
ljmp
mov
hlt
in
pop
popa
add
shrb
rclb
out
xchg
imul
stc
ret
cmpb
nop
and
dec
insb
jle
mov
out
int
stos
inc
sbb
enter
dec
lahf
push
pop
add
fcomps
push
lret
shlb
loop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
fstl
pop
jle
cli
jg
jle
mov
mov
inc
leave
dec
jns
jl
pop
lret
cmp
mov
insb
cltd
in
aad
xchg
mov
loop
or
subb
xchg
dec
rclb
push
mov
jbe
fsts
mov
fisubrl
mov
cmp
jecxz
mov
scas
fmull
sbb
inc
jecxz
rorl
enter
or
adc
push
or
shlb
sub
push
les
test
jp
sub
cli
cmp
js
es
ficoml
adc
pop
mov
rol
jecxz
sbb
mov
jecxz
sbb
cmp
cs
lret
outsl
mov
sbb
mov
jmp
jo
ss
cmp
cmc
lcall
jbe
push
lcall
mov
xlat
mov
test
xchg
enter
jb
xchg
sbb
xchg
mov
rcrb
lock
push
and
add
inc
push
xchg
test
aad
movsl
push
xchg
sub
mov
pop
movsl
adc
fildll
cmp
lock
cmp
ret
push
fisubl
testb
pop
and
in
and
jmp
mov
sbb
mov
inc
mov
xchg
lock
pop
sahf
cmpb
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
cmp
es
rolb
push
das
icebp
cmp
jmp
cld
jge
mov
aad
out
daa
mov
test
add
push
and
xchg
arpl
aaa
cmp
addr16
andb
mov
nop
add
pushf
xlat
mov
mov
nop
sti
sbb
iret
adc
pop
jmp
cltd
lea
lds
test
inc
jp
add
das
mov
adc
bound
xor
fldl
sbb
mov
int
fcompl
mov
jno
scas
mov
xchg
push
in
cltd
mov
jp
ret
insb
mov
sbb
cmp
mov
loope
and
push
aas
mov
popa
stc
movl
fiadds
fsubs
pop
orb
jmp
jmp
dec
xchg
xor
popf
push
inc
xchg
or
jl
cli
scas
mov
test
ja,pt
cli
and
mov
lret
or
ss
cmp
and
mov
pop
call
pop
mov
cmp
ss
lahf
cmp
mov
fwait
cmp
add
push
je
int
dec
xor
fstl
jb
xor
pop
mov
mov
popa
sbb
cmp
std
inc
sti
sub
mov
mov
add
jmp
cmc
dec
and
jno
push
mov
mov
add
cli
jg
jle
xor
pop
jg
pop
sub
mov
mov
fildl
mov
cmp
adc
insl
test
pop
mov
push
test
stc
jmp
into
inc
mov
ljmp
xor
push
mov
jnp
cld
pop
mov
dec
fdivl
xchg
out
repz
mov
mov
pop
jno
imul
push
cs
repz
cmp
adc
rcr
pop
sub
push
sbb
into
pushf
les
cwtl
or
jge
hlt
jo
mov
test
in
adc
ja
jg
gs
movsb
mov
addr16
lret
fbld
xchg
nop
clc
inc
fcoms
fs
jl
cmc
pop
pusha
fcmove
in
xchg
mov
loop
mov
call
mov
and
rcll
cmpsl
cmp
or
sbb
push
cmpsl
cld
or
adc
aas
cs
push
mov
push
repnz
xlat
pop
cmovb
js
cli
xchg
xor
movsb
and
cmpl
lahf
rol
or
aas
sbb
add
push
ja
jp
add
mov
lock
push
sbb
or
orl
ret
cltd
rcrl
mov
xor
adc
jge
enter
fnsave
js
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
stos
push
sbb
cli
jg
jle
pop
sub
add
int
movsl
aad
ljmp
or
and
sbb
loopne
inc
ret
mov
pop
adc
xchg
out
ja
and
jg
mov
inc
cmp
lret
mov
in
sbb
ffree
ds
aaa
in
sbb
pop
cwtl
ret
push
xor
hlt
int
pusha
nop
ret
mov
jne
cmpsl
aad
mov
popa
ret
outsl
mov
cwtl
and
ret
dec
inc
xor
jl
lock
imul
hlt
push
enter
xchg
xor
imul
mov
mov
mov
fildll
les
inc
call
inc
and
push
xchg
mov
sti
addl
pop
sbb
cli
xchg
sub
movsb
push
aam
cmpl
xor
mov
add
push
imul
push
bnd
pop
rolb
inc
or
ja
lea
pop
imul
sub
imul
jmp
cmc
cmp
or
neg
out
fdivrl
push
loope
js
out
dec
inc
sarl
pop
push
push
cmpsl
xchg
push
scas
push
cwtl
pop
stos
test
loope
pop
out
mov
lahf
sub
jae
push
repz
movsb
push
jb
dec
jo
shll
ja
pop
rorb
xchg
dec
cmpb
loop
cmpsl
sbb
inc
lock
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
xor
jle
jg
jle
jo
dec
adc
xchg
mov
enter
cmp
addr16
fmul
out
ja
inc
ja
jne
test
or
mov
les
cmp
enter
xor
or
testl
or
cmpsb
popa
scas
xchg
in
ret
cmpsl
movsb
movsb
fdivrs
sub
out
hlt
pushl
or
mov
rclb
inc
adc
ja
fisttpl
mov
ret
mov
inc
inc
cs
and
stos
add
ss
add
cmp
lds
enter
sbbl
xor
adc
cmc
dec
pop
xchg
js
pop
out
leave
fdiv
frstor
nop
push
push
mov
jmp
ds
pop
cmp
out
outsl
jmp
dec
dec
movsl
jbe
sahf
ret
mov
adc
outsl
mov
mov
lcall
cmp
adc
mov
mov
sbb
lock
cmp
scas
mov
in
adc
jnp
int3
test
adc
out
xchg
dec
and
popf
cmp
sbb
lods
xchg
cmp
sbb
ret
out
daa
sub
aad
pop
jge
fisubrl
icebp
cmpsl
sbb
cli
clc
pusha
scas
out
popa
mov
jge
ss
je
jmp
push
cmp
out
sub
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
and
and
mov
jg
jle
xchg
inc
push
xor
mov
test
cwtl
inc
mov
call
inc
dec
fldcw
into
les
outsb
mov
mov
adc
ja
xorb
cltd
mov
insl
xlat
push
movsl
gs
push
mov
mov
das
out
xchg
sub
jp
fimull
lods
pusha
or
mov
sbb
inc
xor
xchg
ljmp
mov
lds
inc
das
ljmp
das
or
push
xlat
push
sub
ss
repz
bound
push
stos
xorb
daa
cs
popf
cmp
rolb
pop
hlt
push
js
stc
icebp
cmp
lock
out
mov
call
mov
shll
add
icebp
cmpsb
test
les
mov
or
mov
pop
push
mov
xchg
sub
push
shlb
pop
cmpsb
push
jo
data16
mov
dec
dec
test
push
or
cmp
push
out
rolb
lret
std
pop
sbb
icebp
stos
clc
or
es
cwtl
cmp
and
xchg
loop
cmc
xlat
cld
pop
in
push
out
push
outsb
fsubl
or
and
inc
push
fstpt
sbbl
loopne
mov
mov
in
imul
sbb
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
pop
outsb
sbb
jle
jg
jle
lcall
in
push
es
mov
add
xor
sbb
cli
rcll
and
dec
call
jns
jmp
pop
rolb
loop
arpl
or
pop
orb
adc
mov
sbbb
sbb
sub
cltd
add
ficomps
and
fcoml
insl
dec
popa
dec
inc
push
mov
add
jns
mov
imul
push
mov
enter
mov
jns
and
fistpl
push
jl
lock
add
pop
into
cs
mov
mov
lea
fdivrs
sub
int
dec
inc
mov
leave
imul
xchg
fs
jp
inc
push
es
sahf
cmp
mov
mov
jne
dec
aam
xlat
aad
addb
pop
jae
push
mov
adc
adc
push
sahf
test
jp
or
adc
in
xchg
js
loopne
mov
and
popa
mov
ret
out
mov
mov
mov
mov
add
hlt
jp
ror
sbb
ja
fmul
mov
out
cmp
je
je
in
and
adc
xlat
dec
ret
popa
scas
stos
dec
and
jbe
push
xchg
push
mov
cltd
cltd
xchg
movsb
popf
or
cli
hlt
xchg
ret
cs
rclb
inc
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
mov
or
jle
js
daa
inc
ja
ds
cmp
das
mov
popa
jl
mov
data16
stos
push
sbb
test
jecxz
mov
xchg
pushf
jg
sub
add
fcompl
mov
pop
xor
xchg
movsb
shll
pushl
enter
aam
dec
rclb
ljmp
mov
lret
jle
test
outsl
xor
popf
adcb
pop
daa
mov
inc
sbb
or
in
push
dec
ds
lock
fimull
pop
jae
sti
out
sarb
jo
dec
xchg
sbb
sbb
cmp
leave
mov
cwtl
push
dec
mov
cmp
sub
jmp
sbb
int
dec
xchg
dec
pop
and
adc
mov
lahf
xchg
mov
call
xchg
in
mov
in
mov
lcall
add
xor
or
out
add
push
xlat
xchg
and
fwait
cli
fldenv
cmc
inc
rcl
roll
inc
lahf
push
dec
jle
cmp
out
out
jecxz,pt
push
xchg
aas
test
xlat
outsl
es
dec
mov
adc
test
loopne
pop
mov
hlt
add
xlat
das
or
push
loop
stos
cmp
int
jmp
pop
cmpl
out
sub
das
cmp
cs
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
push
in
mov
or
cli
jg
jle
in
cs
cmpsl
jbe
test
movsl
adc
in
insb
and
pop
fs
std
push
xor
inc
je
imul
loop
mov
adc
pop
popa
cmp
inc
repnz
jnp
into
cmp
or
sti
push
adc
popa
lcall
sbb
scas
roll
bound
xchg
inc
jg
push
or
inc
bound
pop
cmpsb
xchg
or
cmp
repnz
lods
pop
sub
pop
adc
js
enter
fldz
jge
insl
mov
push
mov
push
or
mov
dec
sub
fxch
out
imul
pop
push
mov
cmp
negl
push
gs
rclb
shr
or
pop
stos
sbb
setb
repnz
jns
aaa
fcompl
mov
call
fildll
jl
xchg
je
sbb
mov
sub
mov
sub
jb
jns
push
aas
sub
aad
and
bound
lds
push
or
jmp
xchg
ja
sbb
stc
iret
jp
xchg
ret
notb
mov
pop
insb
loope
mov
add
pop
andb
xor
cli
call
push
sarl
testb
enter
push
ljmp
push
outsb
adc
cli
int3
dec
sbbb
dec
xor
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
and
mov
jle
cli
jg
jle
sbb
mov
lahf
pop
xor
xor
sbb
xchg
iret
ss
xor
inc
into
mov
movsb
and
push
inc
lahf
pop
jg
jmp
sahf
push
mov
inc
shl
repz
mov
jnp
lock
call
sbb
ret
out
sbb
lahf
test
xchg
jmp
loop
or
mov
and
repnz
push
dec
sub
lock
jbe
loopne
cltd
imul
outsb
out
lods
cmp
insl
in
jp
out
or
out
push
add
test
xor
adc
lea
loopne
push
sbb
dec
jne
push
bound
mov
mov
sbb
sbb
mov
test
mov
aaa
loope
cmpsb
sbb
stc
orl
pop
mov
xor
jge
cmpb
sar
jl
scas
pop
int
sub
mov
and
xor
js
jg
aaa
loope
imul
popf
cwtl
dec
mov
popf
fimull
mov
test
outsl
mov
mov
sti
mov
xor
sbb
lret
gs
icebp
loope
scas
addr16
lret
sub
or
aad
scas
inc
push
add
cmpb
or
add
in
xor
pop
jmp
sahf
loop
loope
roll
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
inc
or
push
jle
cli
jg
jle
test
or
sub
sbb
lods
dec
sub
cltd
incl
mov
push
jg
cmp
mov
adc
push
or
and
mov
cmp
fsubrs
push
filds
movsl
scas
roll
sbb
mov
push
stos
sbb
test
mov
stc
or
dec
push
mov
add
push
loopne
mov
imul
adc
jo
lcall
jg
pop
decl
push
mulb
sub
aas
pop
inc
sbb
loopne
jo
inc
addr16
adc
and
jne
jmp
into
push
cmp
lea
sbb
jb
rorl
pop
je
test
sbb
stos
xchg
add
fidivrl
rclb
pop
lods
xchg
dec
pop
out
jecxz
pop
cmp
aad
dec
and
fsubrl
jno
mov
sahf
xor
cmc
mov
mov
rorl
jmp
scas
and
xor
sub
sbb
mov
jle
arpl
inc
leave
push
cmpsl
orps
out
outsb
sbb
mov
mov
mov
inc
sub
mov
shlb
aad
jg
xor
fnstenv
mov
jo
scas
fcmovne
push
dec
sar
out
fs
imul
cmp
jecxz
jb
aad
call
mov
mov
add
pop
jmp
add
mov
adcb
mov
jg
jle
movsl
shl
int3
mov
out
std
sbb
add
test
mov
push
mov
inc
add
or
cmc
scas
ret
roll
mov
jo
rcrb
int
test
pop
pop
sub
mov
mov
dec
jecxz
popf
xchg
mov
add
addb
daa
mov
fsubrs
mov
sbb
repnz
mov
sbb
clc
scas
mov
and
out
pop
stc
pop
popf
fisttpll
ret
cli
mov
pop
out
xlat
addb
mov
inc
int
cmp
sub
popa
pusha
fnstenv
add
lahf
je
in
lret
inc
cltd
outsl
mov
aas
mov
clc
arpl
das
lods
inc
fmulp
dec
mov
dec
lahf
shll
cld
lret
jl
and
sbb
movl
repz
inc
mov
icebp
xchg
push
inc
xchg
call
add
out
pop
sub
mov
int
mov
mov
popf
nop
icebp
add
ret
call
ljmp
dec
push
lret
pop
cmp
xchg
movsb
push
xlat
and
out
xchg
aaa
loop
jmp
sub
sub
xchg
lds
js
xchg
inc
jns
cmpsw
outsl
xor
subb
pop
mov
sbb
loopne,pt
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
movsl
push
adc
jle
xor
dec
lods
pop
ja
fdivr
inc
jbe
sub
lret
adc
cmp
mov
push
mov
adc
test
imul
je
mov
xrelease
inc
xchg
gs
sub
adc
sub
add
jl
adc
movsb
movsb
sbb
mov
shrb
ficoml
push
xlat
lret
repz
xchg
push
mov
mov
movsb
xlat
and
rorl
jnp
sbb
push
aam
pop
xor
fisttpll
sbbb
mov
ja
pop
add
lea
movsl
cmp
or
lds
add
addl
inc
mov
shlb
sub
sbb
fists
insb
das
rcrl
out
shl
mov
push
das
adc
pop
in
or
push
int3
sub
add
ror
int3
int
lods
insl
jbe
cmc
movsl
mov
cmp
add
fldt
jns
ret
add
je
fs
fs
jecxz
int
push
pop
int
scas
xlat
notb
fwait
jmp
pop
fucomp
push
lods
add
daa
sub
xchg
adc
idiv
cmp
scas
lret
hlt
icebp
lds
pop
orl
mov
push
add
fwait
push
out
xor
repnz
dec
fsubp
out
cmpsl
sub
popa
push
push
fsubs
xchg
cmp
je
xorl
inc
xlat
cli
mov
xchg
push
mov
jbe
mov
xchg
out
out
pop
mov
negb
mov
mov
frstor
ds
arpl
in
aam
xlat
test
clc
ljmp
dec
xchg
push
sub
fdivs
jg
inc
jo
jmp
jb
push
sti
sub
dec
int3
out
mov
loop
fsubs
sub
aas
push
outsb
sbbl
aaa
cs
jne
add
imulb
xchg
sub
std
pop
fs
loopne
adc
cmp
and
pushf
fcoms
cmp
int3
push
sahf
jnp
mov
loopne
add
pusha
stos
out
aad
dec
dec
out
mov
scas
cmc
xchg
inc
sbb
ficomps
cld
mov
sbb
test
jecxz
push
lret
outsb
movsl
pop
std
jecxz
mov
mov
shll
shll
pop
inc
cmc
xor
int
cld
jno
adc
mov
aam
movsl
dec
inc
ret
inc
adc
push
dec
xor
jb
and
loop
js
into
adc
lret
dec
mov
xor
out
jne
pop
jo
mov
scas
das
xchg
leave
repnz
mov
fs
rcrl
mov
sahf
popa
push
pop
push
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
pop
pusha
mov
adc
pop
jl
jle
add
jle
jle
or
outsb
lret
push
push
xlat
in
insb
inc
sub
fdivrl
adc
lret
xor
sub
ret
iret
jnp
arpl
scas
movsb
in
loope
sbb
std
fildll
push
sub
and
xchg
call
sarb
sbb
rolb
pop
jnp
add
ret
clc
pusha
mov
mov
adc
popf
dec
call
xor
mov
fstpt
sub
push
or
pop
mov
add
mov
imul
dec
frstor
jl
dec
sbb
popa
push
das
lcall
adc
in
push
cltd
sub
fstpl
sarb
cmp
xchg
cmc
clc
cmc
fsubp
and
pop
sti
cs
loop
xor
out
sbb
mov
loopne,pt
pop
in
pop
mov
pusha
imul
xchg
jmp
es
dec
das
add
mov
fstl
xchg
lcall
iret
jae
mov
jg
jbe
adc
push
scas
pop
mov
cmp
aas
push
shlb
cmp
sahf
push
outsb
repnz
sub
cmpsl
call
mov
inc
std
pusha
repnz
addr16
cld
rcl
out
das
dec
jl
mov
les
xchg
or
sub
push
fldl
sbb
std
imul
push
mov
mov
dec
add
test
mov
movsb
test
idivb
insb
sbb
mov
xor
clc
outsb
sbb
sub
pushf
jg
call
cmp
scas
sub
cmc
jl
jl
ficoms
lock
inc
fcomi
or
lds
das
jle
adc
xor
xchg
lahf
lahf
lods
insl
mov
mov
lret
lret
push
mov
std
mov
lret
mov
fisubrl
call
lahf
test
lock
dec
rol
ret
jmp
xor
shll
jbe
mov
lds
out
in
pop
aas
jge
pop
out
mov
or
roll
push
shlb
hlt
mov
and
mov
or
mov
dec
jp
xlat
xchg
sti
pop
sahf
popa
jo
sbb
ss
aad
xchg
cmc
outsl
pop
jnp
nop
adc
mov
push
cmc
out
frstor
xor
pusha
test
jb
cli
or
dec
sub
mov
fadds
inc
aas
fmull
mov
jns
inc
pop
xor
pop
fiaddl
mov
pushf
scas
mov
clc
xor
mov
shlb
aad
popa
je
dec
push
add
push
lods
hlt
push
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
pop
shrb
jle
pop
jl
jle
mov
lods
push
push
dec
scas
inc
jnp
ds
pcmpgtw
dec
cwtl
in
dec
sub
sbbb
mov
push
nop
popa
icebp
cwtl
insl
int3
ret
pushf
cs
dec
mov
push
repz
mov
idivb
cmp
enter
leave
and
pusha
push
dec
clc
xor
js
or
fs
loop
adc
pop
in
mov
sbb
adc
sub
push
xchg
xchg
imul
dec
test
daa
arpl
xor
and
mov
test
movsb
xchg
pop
out
cmpsl
cs
fnstenv
pop
add
or
aam
lcall
aaa
test
pusha
xor
or
repnz
outsl
sub
stc
inc
jnp
je
jl
jno
mov
sub
test
cs
packsswb
sub
rclb
cmpsb
ja
ljmp
lea
ds
inc
dec
testl
jp
fadds
ljmp
push
push
lods
or
je
sbb
push
add
pop
sub
out
stos
xlat
in
jbe
mov
cld
scas
outsl
lcall
int
insb
mov
loopne
rcrl
out
sar
mov
pop
sbb
mov
shl
jg
pusha
mov
jle
jne
int3
inc
addr16
adc
bound
xor
in
aaa
popa
mov
push
mov
xchg
adc
mov
xchg
mov
or
mov
or
mov
int3
xor
inc
mov
roll
cmp
loopne
pop
fstl
dec
xlat
int3
xchg
cltd
cmc
xchg
out
push
push
call
xchg
ret
push
sub
mov
out
dec
pop
cltd
out
movsb
ret
push
or
les
jl
out
ret
inc
cmc
setns
es
dec
mov
popa
cwtl
cmp
fstps
outsb
aad
pop
stos
pop
push
xor
sub
in
xchg
add
sub
int3
add
and
cmp
imul
icebp
bswap
pop
push
jle
fs
fnstsw
push
scas
xchg
inc
mov
pop
sub
mov
sub
leave
int
add
xor
cmpsl
bound
push
lea
sub
into
sub
mov
call
xor
insl
insl
xlat
pop
xchg
mov
adc
pop
and
rcrl
cmp
fsubr
fldenv
out
dec
int
mov
ret
mov
leave
cmp
sbb
repz
fisubl
cwtl
sbb
jp
pop
add
mov
test
xor
mov
test
dec
mov
ret
jge
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
sbb
jle
pop
adc
mov
test
sub
mov
int
test
jle
in
test
push
cmpb
and
xorl
sub
bound
pusha
sub
lcall
sub
add
loop
das
mov
mov
mov
bound
sbb
xor
xchg
sbb
repz
loope
add
push
inc
sbb
dec
sbb
bound
mov
dec
insb
out
add
inc
sbb
xor
pop
stc
rcrl
xor
movsb
pop
lds
xchg
jmp
xor
adc
fs
movsl
xchg
dec
popf
sahf
in
pop
insb
rcl
xor
scas
xchg
es
jl,pn
mov
push
sahf
int
cwtl
jnp
xchg
lds
gs
rclb
dec
gs
fcmovb
fstl
adc
push
int3
mov
xor
and
jae
adc
pop
adc
cltd
mov
rcll
out
out
int
clc
insl
outsb
out
mov
xchg
std
call
cltd
pop
inc
jae
mov
adc
adc
pmaddwd
daa
popf
call
xor
fcomip
in
mov
sarb
dec
adc
push
xor
and
xchg
enter
fwait
mov
outsb
aam
pop
mov
add
clc
cmp
or
add
mov
cmp
mov
fnstcw
adc
xchg
add
xchg
fsubs
xchg
movsb
dec
jg
loop
sti
sub
std
or
in
lahf
sbb
push
into
lock
shll
mov
jecxz
cs
sbb
push
push
aad
jns
cmc
scas
xchg
or
cmp
in
scas
stos
addr16
testl
xchg
icebp
jecxz
cmpsl
push
cld
add
cld
jge
xor
sbb
loop
out
pop
push
movb
or
lcall
xchg
in
and
div
les
cmp
jl
push
jns
cmpsb
or
sub
jmp
push
sbb
mov
scas
iret
into
pushf
lret
mov
mov
ja
in
fwait
jecxz
out
roll
pop
imul
mov
pop
scas
sarb
fwait
addb
or
cmpsb
or
adc
cmc
adc
sbb
leave
fdivl
sbb
fnstenv
push
jne
jle
cmp
cmp
imul
out
lea
mov
int
cli
data16
and
and
jmp
and
xlat
jns
fdivs
shl
dec
pop
cltd
cmp
lahf
fcomp
nop
leave
imul
xchg
repz
sarb
jmp
add
dec
popa
jno
jne
xor
jle
stc
dec
stos
pop
sbb
pop
jl
jle
cs
adc
test
pop
inc
xchg
pop
repz
or
mov
jl
and
dec
out
mov
cmpb
inc
mov
cwtl
addr16
mov
dec
sub
xchg
shl
mov
ss
mov
ds
leave
in
xor
push
jl
jbe
fs
ljmp
pop
mov
fldl
mov
mov
cmp
sub
sbb
bound
into
hlt
push
aam
xor
sub
enter
add
or
roll
mov
or
push
aaa
inc
rcrl
popf
xlat
nop
jb
inc
pop
jecxz
pushf
mov
adc
xorb
decb
leave
mov
cwtl
mov
std
mov
jne
insb
ret
mov
pop
or
mov
scas
test
adc
rcll
sbb
adc
leave
jo
out
or
lds
repz
dec
in
adc
dec
pushf
pushf
inc
jl
push
daa
sub
scas
and
mov
push
lods
mov
sbb
data16
gs
fcom
aam
cmp
sub
jp
or
mov
sub
cmpsb
aas
adc
insl
add
fcomp
inc
mov
in
adc
push
sarl
divl
and
and
mov
mov
cmp
jp
shlb
xor
push
or
sub
push
jmp
rol
rcrb
push
xor
push
ret
in
repz
mov
cmpsl
push
sbb
sbbl
sbb
out
icebp
mov
dec
in
or
cmpsl
mov
je
decl
loopne
mov
sahf
add
enter
ficomps
jge
arpl
pushf
sbb
stos
adc
fldt
test
xchg
lcall
js
cs
shlb
adc
shl
repnz
flds
divb
lret
dec
or
cmp
sub
inc
icebp
mov
cmp
jmp
xchg
lcall
push
std
mov
mov
outsb
push
pusha
push
sub
sub
nop
cmp
aas
repnz
stos
sub
push
jns
stc
push
pop
sbb
imul
mov
ret
pop
ficoms
xor
fwait
cmp
sti
iret
pop
popf
dec
outsl
cli
xorb
cmp
cmp
inc
mov
sbb
inc
cmp
inc
int3
pop
and
dec
pop
scas
sbb
jne
fcom
lahf
sbbb
pop
fidivs
enter
fisttpl
cmpsb
push
fists
add
loopne
imul
rolb
sub
es
dec
mov
cld
add
jmp
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
bound
jle
pop
jl
jle
movsb
pop
mov
lock
jns
ret
cli
and
adc
pop
add
adcb
aam
jno
mov
sbb
incb
add
push
in
stos
cmp
lcall
xchg
inc
adc
outsl
sbb
pop
je
ret
ljmp
outsb
mov
or
outsl
push
adc
mov
jmp
into
jle
adcb
xchg
cltd
cwtl
out
and
test
les
iret
and
mov
xchg
mov
push
inc
or
lret
mov
dec
in
scas
push
scas
dec
mov
sti
jnp
insl
cmpsb
cmp
mov
enter
sahf
and
push
mov
mov
fyl2xp1
xor
movsl
test
mov
in
push
stc
popa
dec
mov
in
insl
or
movsb
int
cmp
xor
notb
je
mov
inc
mov
adc
jb
sub
xchg
xchg
sahf
sub
mov
add
cmpsb
cli
pop
popf
lods
sbb
and
aas
lcall
nop
add
mov
in
enter
fdivs
pop
ljmp
fxch
pop
xchg
fiadds
hlt
out
adc
xor
push
mov
and
mov
sub
jbe
and
pop
xchg
ficoml
lcall
leave
divl
xchg
cld
mov
cmp
dec
dec
idivl
pop
andb
ret
mov
out
adc
jmp
fcomip
mov
test
shrl
ljmp
cli
sub
adc
lahf
fnstcw
mov
inc
fsubrl
pop
push
pop
sub
xchg
cmp
popa
dec
clc
fildll
mov
ds
push
lcall
mov
movsb
lock
cmp
or
subb
adc
lds
jp
shr
insb
inc
movsl
mov
gs
stc
cmp
cld
sub
pop
in
or
or
repz
sbb
pop
mov
add
fldenv
xor
pop
cmp
gs
dec
or
bound
outsl
mov
dec
aad
sbb
dec
lahf
jnp
pop
out
fdivrs
xchg
jle
adc
gs
and
jne
jle
stos
outsb
mov
ret
mov
mov
int3
ja
sub
out
push
jne
push
cmp
std
jg
in
inc
cmp
xlat
sub
and
clc
imul
pop
or
fsub
xchg
data16
dec
add
jns
mov
add
push
imul
fs
je
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
and
jle
pop
jl
jle
xchg
mov
jbe
mov
sub
lcall
sub
mov
sbb
imul
arpl
adc
bswap
inc
pop
mov
psubb
cld
fs
mov
mov
in
icebp
cli
je
mov
xor
adcb
lcall
cli
adc
mov
fld
xor
and
test
inc
sbbl
pushf
stos
push
push
add
xor
icebp
inc
adc
repz
sub
xor
xorb
fldenv
jae
mov
pop
ret
lea
and
mov
mov
mov
pop
insl
jae
mulb
mov
lds
dec
arpl
mov
aam
lock
pop
mov
push
scas
clc
push
insb
lcall
inc
pop
jl
xlat
aaa
pop
push
clc
mov
std
fdivr
in
add
addb
jo
xor
jae
imul
mov
xor
shlb
out
dec
scas
insl
fsubrs
jne
rclb
sti
cwtl
leave
inc
dec
jge
test
sahf
daa
dec
mov
jecxz
das
mov
push
or
dec
inc
out
jl
lcall
in
xchg
cmp
rclb
out
and
dec
push
dec
mov
adc
xor
jmp
push
inc
mov
int3
dec
daa
dec
cmp
stos
push
sub
cmp
cld
lahf
in
pop
leave
inc
push
jno
xchg
out
orb
mov
dec
lods
mov
aad
popa
or
cwtl
fdivrl
xor
xchg
jbe
gs
pop
icebp
rorl
dec
adc
shrb
pushf
inc
dec
push
imull
lahf
out
loopne
addr16
add
jg
sub
pop
or
pushf
xchg
hlt
neg
mov
mov
xchg
pop
sbb
xchg
dec
mov
movsb
mov
pop
int
loopne
out
daa
jg
fidivrl
loopne
fsts
movsb
cmpl
xlat
out
push
push
jbe
mov
jne
cmpsb
push
inc
sub
mov
mov
sbb
sub
sbb
jbe
push
adc
aam
pop
aas
pop
leave
les
add
cmc
imul
gs
push
cmp
and
lcall
xchg
pop
aas
dec
mov
js
cs
xchg
fwait
xchg
push
add
inc
adc
and
or
jns
popf
popa
inc
xor
mov
jae
xchg
scas
push
push
mov
inc
pop
fisttpll
jbe
lcall
push
in
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
shr
pop
mov
jle
pop
jl
jle
test
push
push
xchg
lock
jnp
mov
shll
mov
dec
nop
xor
fs
lahf
out
or
scas
movsl
xchg
xlat
mov
pop
pop
pop
push
ds
add
mov
out
in
sbb
sbb
jecxz
addl
xchg
or
jmp
imul
push
mov
cmp
xorl
fdivp
sbb
push
push
loopne
mov
push
jle
sbb
pop
push
adc
cltd
fistl
inc
xchg
inc
pop
imul
repnz
fs
push
push
or
cmp
nop
cmc
insl
mov
cmc
insb
loopne
notl
dec
mov
and
fchs
xor
jb
sub
shll
cmp
mov
mov
lea
scas
les
flds
xchg
leave
sub
sub
dec
jae
stos
add
sub
aaa
mov
dec
enter
jg
xor
mov
orw
xor
aas
stos
xchg
mov
fcomp
fcoms
push
jp
sbb
aaa
pop
cmp
adc
dec
cmp
and
loope
pop
sti
xlat
mov
stos
cli
inc
sub
push
xchg
cmp
out
insl
push
sub
loope
aas
sarl
sub
shl
xor
cmp
insb
adc
mov
hlt
sub
mov
and
xor
push
mov
ds
inc
dec
loope
pop
sbb
call
jge
gs
fs
sub
gs
int3
mov
mov
dec
das
lret
mov
adc
faddp
out
pusha
sar
pop
stos
sbb
mov
rcrl
mov
je
lahf
jmp
xchg
imul
and
into
and
cmp
adc
adc
add
mov
jmp
xor
mov
and
outsb
pop
dec
cmp
adc
mov
les
rorl
rol
sahf
lret
or
xchg
cmp
inc
sti
pop
inc
insl
and
xor
xchg
in
and
gs
lret
inc
lods
fs
mov
loope
and
pop
test
sti
push
int3
cmp
imul
enter
mov
add
xchg
xchg
stc
cmp
flds
mov
xchg
inc
inc
into
lock
cmc
inc
mov
mov
int3
mull
dec
movsb
pop
jge
inc
imul
enter
je
test
repnz
jbe
inc
int3
stos
adc
loopne
push
or
insb
in
mov
mov
ljmp
scas
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
pop
and
jle
jl
jle
popf
push
and
dec
out
add
xor
int3
repnz
movsl
adc
fdivl
sbb
hlt
jecxz
call
inc
dec
scas
adc
hlt
jecxz
ljmp
aad
sub
sahf
out
mov
lock
xchg
call
lcall
insl
mov
cmp
mov
mov
jg
in
adc
add
bound
sbb
ret
lea
cmp
dec
jne
int
fdivr
ret
aaa
scas
jge
out
in
mov
stos
inc
dec
mov
push
loop
lock
push
aam
add
add
jl
bound
xchg
cmc
push
addl
pusha
jl
jge
ror
fsubrl
sub
inc
mov
out
inc
cmp
pop
sub
mov
push
mov
inc
imulb
add
dec
loope
ret
jl
cmpl
mov
mov
add
xor
movsb
mov
decb
xchg
enter
stos
fidivl
rorb
icebp
stc
pop
push
mov
rorl
sbb
add
cmp
jmp
xor
fadds
adc
fwait
cmp
jns
xor
popf
inc
lret
xor
pop
ror
jecxz
add
pop
dec
cltd
xchg
je
mov
jl
outsl
bound
add
pop
mov
mov
out
sbb
add
mov
dec
push
or
inc
pusha
shr
mov
xor
test
inc
loop
jns
imul
inc
dec
icebp
js
and
sub
dec
outsl
cwtl
movsb
out
lea
pop
icebp
hlt
cmp
jecxz
jo
int3
xchg
mov
lds
test
add
adc
fcompl
in
and
stos
pop
lret
sbb
fists
add
lret
fbstp
cltd
fwait
add
lods
push
ret
sbb
push
pop
cmp
cli
fstl
repz
rorb
clc
inc
fisubs
dec
dec
out
outsl
jns
iret
push
xchg
jle
mov
mov
aam
xorb
xor
stc
mov
push
clc
scas
int
mov
pop
adc
push
jl
sub
inc
popa
icebp
xchg
add
enter
das
cwtl
jnp
iret
xorl
cli
mov
sub
xchg
cwtl
cmpsl
xchg
push
mov
xchg
movlps
jg
clc
and
lock
test
fsts
stos
in
xchg
xchg
mov
mov
orl
xchg
push
jg
push
xchg
sub
fs
adc
xor
lret
shlb
mov
mov
fstpt
add
inc
add
jge
aad
pop
cs
xchg
mov
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
mov
shrb
jle
pop
jl
jle
pop
fists
push
pop
push
push
sub
inc
fbstp
dec
cld
add
dec
mov
cmp
sbb
leave
scas
sbb
popl
or
fdivrl
xor
mov
sub
sbb
push
repz
hlt
sahf
or
or
cwtl
pop
mov
iret
xchg
cli
scas
cmc
push
xchg
or
ljmp
sub
rorl
or
notb
dec
lea
mov
xchg
nop
icebp
test
mov
xchg
add
mov
in
les
sahf
arpl
and
mov
inc
testl
clc
pop
insb
lcall
jbe
xor
jecxz
xchg
mov
js
loope
dec
mov
cmp
cwtl
add
jmp
inc
out
ret
jbe
mov
push
dec
dec
and
loope
xchg
xchg
or
mov
cmp
sub
test
repnz
movsb
in
or
mov
fcoms
pusha
orl
cmp
dec
cmp
jo
pop
lret
imull
inc
and
test
jge
sub
inc
cmovge
jl
das
push
xor
and
and
cltd
loop
fstpl
xchg
adc
nop
inc
push
jecxz
cmp
je
dec
clc
cmpl
pop
xchg
xor
push
xor
add
hlt
cmpl
clc
je
ffreep
jns
pop
xchg
sahf
aam
addr16
fidivs
loope
jmp
out
sbb
insl
cli
lret
adc
or
inc
xor
movsb
test
adc
adc
add
dec
pushf
mov
jo
mov
das
xchg
int3
xchg
ljmp
jmp
out
push
push
xchg
jae
and
sub
pop
int3
stc
notl
clc
xor
add
cmpb
pop
stos
dec
mov
or
mov
inc
scas
stos
adc
repnz
jle
mov
xchg
shrl
test
push
imul
dec
fcmovne
data16
ss
testb
sub
add
je
addb
mov
push
or
aas
in
cld
or
cmpsl
repnz
mov
cmp
fs
mov
js
addr16
or
clc
ja
mov
jo
fwait
sbb
out
es
mov
mov
lock
push
sub
adc
mov
push
shr
jo
dec
stos
jmp
pop
fisttps
mov
insb
inc
mov
and
fsub
roll
lods
rclb
fidivs
sub
loope
sbb
orl
mov
cwtl
or
lock
xor
dec
sub
add
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
add
jle
sub
jle
je
sahf
jno
lahf
jge
rorb
scas
out
jno
or
js
mov
push
cltd
mov
ficompl
mov
popa
and
ret
ja
push
mov
int3
flds
mov
fildll
pop
sbb
or
dec
aad
scas
mov
xchg
ret
push
mov
test
adc
fisttps
jno
pop
inc
adc
pop
inc
shlb
dec
and
lock
mov
jae
repz
clc
mov
mov
popf
mov
aam
lds
mov
push
call
imul
lea
pushf
mov
dec
and
movsl
mov
push
shrl
aam
stc
cmp
xchg
out
cmpsb
or
mov
sub
out
push
pop
lea
sub
in
jg
lcall
out
int
test
pushl
xchg
das
or
js
pushf
rolb
lahf
inc
scas
fstl
in
fimull
in
lods
jns
dec
rcll
sub
push
mov
in
addr16
scas
cld
fildll
push
int3
pop
sbb
sarl
cmp
hlt
mov
inc
iret
pop
hlt
faddl
sahf
sbb
out
push
cmp
or
inc
loop
fisttpl
xchg
sbbl
je
pop
add
sar
cmp
imul
inc
mov
inc
xchg
andb
addb
push
inc
ljmp
and
add
adc
popa
jl
mov
mov
addl
dec
cmp
les
adc
cld
ror
idiv
cmp
cmp
adc
btc
sub
ds
add
js
lret
divb
in
add
mov
popl
leave
pop
xchg
dec
cmp
xchg
adc
loopne
adc
cmp
aad
push
jle
in
imull
sbb
sbb
mov
push
loopne
push
jl
stos
outsl
imul
cmp
ret
je
ret
push
lret
mov
lods
mov
icebp
mov
pushf
sub
gs
in
pop
xor
in
adc
fdivrl
push
test
das
add
cmp
adc
jae
cmp
jo
and
cwtl
leave
lods
sarb
les
pop
lods
jg
pop
xor
cmpl
into
mov
adc
lea
pop
jno
rcll
mov
adc
add
pop
dec
dec
hlt
fiaddl
repnz
add
mov
jle
xchg
cmp
xor
stos
call
insb
xlat
xchg
sub
stos
insb
sbb
lahf
mov
cmp
lods
nop
push
xor
fsubr
movsl
mov
mov
sbb
aad
jge
aam
sbb
cs
sahf
mov
xchg
mov
hlt
sbb
push
sub
imull
int
lods
jle
aam
cmc
push
aam
mov
aas
ror
cmp
or
add
inc
or
inc
cld
test
clc
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
inc
outsl
fstl
xor
and
in
jbe
xor
repnz
mov
pop
and
pop
outsb
push
pop
gs
data16
andl
pop
push
shrb
je
sarb
and
out
and
mov
inc
fcomps
cmp
shll
daa
test
js
lock
sbb
out
xor
push
mov
jne
les
dec
pushf
data16
test
adc
aam
pop
and
jecxz
sbb
jae
loope
cld
xor
adc
aas
dec
stos
icebp
dec
data16
mov
or
rorl
jmp
sub
stos
push
movsb
dec
push
aad
daa
ret
add
leave
les
or
fwait
add
pop
pop
mov
popa
jmp
sbb
lea
xchg
jo
ds
ja
or
pop
cwtl
out
mov
cmpsb
jle
xchg
hlt
jns
mov
jl
sarb
cwtl
test
scas
mov
sub
shlb
push
movsl
cmp
or
in
add
or
add
loope
pop
sbb
mov
ret
lret
lods
push
push
stos
loopne
cmp
sub
mov
jno
fmuls
enter
add
mov
js
mov
push
add
and
mov
inc
cmpsl
imul
cwtl
jbe
jo
fdivl
cmp
jns
mov
mov
dec
mov
into
or
push
imul
add
adc
cmc
scas
sti
sub
shrl
xchg
mov
or
ljmp
sbb
enter
inc
stc
sub
mov
icebp
cmp
cmpsl
jp
mov
lods
cmp
lods
fsubrs
dec
test
decl
jne
or
loopne
mov
stos
push
lods
jno
jbe
pop
mov
sbb
shll
push
xchg
ja
test
jl
jl
fld
stos
inc
push
sbb
pop
out
dec
xchg
xchg
daa
sbb
cs
std
inc
mov
jmp
movsl
std
cld
mov
lret
push
cmp
inc
mov
test
inc
loopne
mov
scas
fnstenv
iret
mov
cmp
js
add
das
test
mov
jns
dec
mov
aam
leave
scas
adc
inc
add
cli
les
push
movb
dec
mov
mov
sbb
adc
in
int
dec
test
mov
and
mov
hlt
and
test
ret
pop
xchg
adc
xchg
or
out
ja
ret
cmp
mov
adcl
out
data16
ret
fsubs
out
push
or
bound
pusha
andb
mov
leave
add
fstps
scas
out
fisttpl
xor
fs
push
mov
rcll
jg
pop
leave
jb
inc
test
xchg
jae
fisubs
in
adc
addb
fsts
sub
nop
xor
neg
jmp
jne
sub
test
test
mov
push
lret
xor
sub
jle
clc
pop
sub
enter
lcall
mov
imul
loopne
jne
jle
xchg
out
and
xchg
shll
roll
push
mov
mov
out
stos
push
push
rclb
stc
adcb
mov
ja
pop
or
dec
mov
or
dec
push
sti
push
out
jmp
mov
pusha
inc
lods
stos
lahf
mov
rorb
xchg
andb
or
lds
aas
push
xlat
scas
jnp
ficomps
cli
fxch
inc
fidivrs
lcall
scas
xor
mov
shrb
cmp
mov
fisttpl
pop
pop
cs
mov
push
sti
xor
stc
cmpsl
and
ljmp
mov
mov
dec
jmp
cmp
jb
jp
inc
or
nop
pop
cmpsl
xor
fs
cmp
loopne
mov
bound
adc
push
jne
fisubs
scas
or
mov
ret
stc
aaa
mov
xor
pop
mov
xchg
bound
int
sbb
nop
jb
xor
push
mov
add
dec
mov
int
stc
add
xchg
shll
xor
mov
or
stos
addr16
mov
sub
cltd
pop
cmc
mov
mov
lahf
push
addr16
loop
sahf
test
aam
add
push
inc
lods
cmp
lods
cmp
pshufw
inc
cmpsb
out
cwtl
orb
mov
mov
push
mov
mov
ret
inc
icebp
subb
dec
andb
dec
xchg
addb
pop
or
in
mov
fimull
sub
movsb
lods
pop
dec
fistpll
jg
xor
data16
fmuls
test
push
add
outsl
gs
mov
lcall
adcl
mov
mov
xorl
ret
pop
dec
and
outsb
sbb
sbb
testb
ficompl
popl
aaa
mov
pop
ds
mov
mov
jb
movl
out
cs
lods
jae
xchg
iret
mov
ficoms
inc
mov
pop
enter
and
push
outsl
pop
aam
mov
mov
pop
push
pop
mov
and
sub
mov
push
inc
negl
sbb
xor
inc
push
cmp
outsb
dec
dec
icebp
xor
fisubrs
mov
mov
fisubrs
in
adc
pushf
repnz
dec
maxps
pushf
stos
out
xchg
lret
mov
das
test
sub
aam
mov
add
or
xchg
out
push
loop
movsb
dec
xor
lret
repz
or
rol
icebp
movsb
lea
out
aaa
push
jmp
shrb
pop
fidivl
mov
hlt
cmp
cmp
mov
ljmp
and
inc
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
ficomps
jle
sub
jle
jo
das
repnz
ret
loop
scas
aas
pop
lahf
out
mov
insb
std
pop
push
aad
mov
std
clc
dec
xchg
and
sbb
es
push
loopne
fwait
push
mov
jecxz
pop
xchg
inc
mov
popf
push
movsb
stos
fsts
adc
int3
arpl
movsl
lcall
nop
enter
rolb
inc
andb
mov
adc
addr16
pop
scas
ss
add
or
cmpsb
add
xlat
xor
je
into
inc
shll
sub
notl
cltd
mov
cmc
das
cwtl
pop
sbb
pop
lahf
add
gs
or
cmpsl
insl
loopne
add
sub
lds
out
and
test
and
popa
test
aaa
popf
jmp
in
or
mov
xchg
mov
or
inc
aas
sub
mov
push
fs
out
and
shrb
inc
mov
insb
cld
push
adc
and
scas
fdiv
lods
pop
insb
or
add
out
ljmp
inc
jnp
and
mov
cwtl
xor
pusha
push
or
rol
xchg
sbb
insl
psllw
xchg
inc
xlat
js
aas
jo
sbb
imul
dec
adc
sbb
inc
inc
lock
insb
xchg
and
ret
lea
repnz
jne
insw
xor
add
xor
aas
andl
addr16
push
cmc
out
sahf
xor
test
cmp
out
sahf
shrl
mov
les
mov
jge
sbb
sbb
push
lret
rcrl
fs
push
and
xchg
fidivrs
repnz
dec
adc
or
ret
inc
push
rorl
cmp
cmp
push
test
lock
dec
inc
ret
push
sub
rcr
lds
xchg
nop
aad
rcrl
pop
mul
jno
xor
mov
jae
leave
mov
mov
scas
insl
jp
dec
cmp
adc
or
mov
leave
lods
sub
cmp
dec
fldl
rcl
lret
test
xor
popa
call
loopne
mov
movsl
mov
popa
es
jg
mov
mov
pop
int3
ja
call
sbb
push
mov
pop
inc
cmp
xchg
mov
rcll
jbe
test
cmp
jge
add
xchg
jae
lahf
push
rolb
sub
fcoml
sahf
cmpsb
xchg
jne
pop
test
cmpsl
outsl
mov
mov
lahf
or
addr16
nop
cmp
ljmp
sbb
std
sbb
loope
mov
cli
pop
js
xchg
into
pop
fcompl
bound
sti
rol
sarl
repz
or
es
imul
cli
ja
lahf
add
cmp
into
repz
in
icebp
lock
loop
push
scas
lret
subl
add
add
or
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
jo
cmp
mov
data16
push
cld
out
ds
xor
push
lea
shrb
in
repnz
inc
loope
movsl
xchg
push
xchg
jmp
cmp
movb
pop
and
adc
push
fwait
shlb
clc
push
fcoml
addr16
icebp
aam
mov
cmp
test
push
icebp
mov
sbb
movsb
pop
shl
sub
inc
add
push
leave
push
or
xchg
imul
sbb
cmp
sbb
fadd
push
and
add
stos
adc
test
gs
cmpsb
jo
repz
subl
in
movsl
mov
in
cmp
add
scas
sub
adc
in
cmpsb
negb
mov
xor
sarl
or
jae
std
push
jle
dec
xchg
dec
xor
fistps
or
cmpsb
and
fisttpll
test
daa
int
push
pop
mov
iret
pop
inc
mov
jmp
testl
dec
mov
jae
xchg
ret
adc
lock
ja
xor
lods
mov
repnz
and
mov
pusha
insl
les
pop
push
adc
lods
insl
push
jo
mov
aad
xor
sub
in
cli
adc
ja
in
xor
mov
xor
mov
sub
mov
jg
test
push
dec
adc
cmp
xchg
push
inc
jl
mov
xor
and
imul
int
pop
dec
mov
add
dec
pop
mov
std
add
dec
sti
shr
mov
pop
push
lret
pushf
cmpsb
inc
dec
jnp
push
shlb
push
sub
fcmovb
cld
push
mov
sarl
sbb
adc
inc
add
roll
push
jge
add
rolb
getsec
inc
add
fiaddl
add
cmp
es
repz
movsl
pop
xor
jne
pop
inc
cmp
mov
xor
jb
mov
pop
fwait
inc
scas
addr16
addr16
inc
insb
repnz
xchg
das
pop
fimull
cli
jge
push
popa
jg
ljmp
jb
std
aam
mov
cltd
xor
fwait
inc
push
addr16
pushf
inc
cmpsb
cltd
jge
dec
xlat
adc
sub
in
outsl
xor
mov
add
or
mov
mov
sti
les
xchg
xchg
aad
sub
jl
adc
gs
insl
adc
add
mov
sub
add
xchg
add
mov
repz
jge
mov
insl
in
xor
xchg
push
sarl
mov
je
xor
dec
aaa
xchg
mov
test
cltd
cmp
inc
mov
xor
fwait
mov
push
cmp
sub
daa
in
cmp
mov
out
and
inc
xchg
aas
std
pop
das
jp
inc
xchg
sbb
sub
pop
jne
or
sarb
call
pop
push
cmp
cmpsb
gs
dec
out
adc
cmp
scas
std
fs
lds
or
mov
stc
add
stos
mov
fisubrl
pushf
icebp
sarl
lahf
add
iret
in
adc
cltd
in
jnp
sub
sbb
call
or
push
ficoms
imul
sub
inc
insl
jecxz
aad
add
stc
sub
aas
jg
ds
stc
or
and
and
xchg
dec
and
mov
movsb
out
dec
shrb
sub
pop
clc
pop
sbb
or
sub
rol
into
inc
add
jg
hlt
push
mov
getsec
inc
add
inc
add
add
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
shll
pop
mov
sub
push
cmpsl
pop
gs
cmp
scas
cmp
cmp
gs
scas
adcl
cld
dec
lods
jle
inc
mov
lods
ds
inc
cmp
outsl
and
sbb
and
outsl
lods
pop
iret
adc
xchg
rolb
mov
orl
lret
mov
xor
xlat
shrb
hlt
sbb
dec
mov
ljmp
push
jns
cmp
xchg
sbb
fildl
dec
aam
push
mov
jbe
lods
pop
mov
or
add
xchg
movsb
jne
mov
aad
adc
add
cmp
jne
sub
rcrl
mov
lds
sahf
dec
rcll
and
add
mov
in
inc
cmp
int
add
jge
neg
stos
jnp
cmpl
out
cmp
popa
mov
xchg
jnp
mov
stc
out
cli
icebp
and
incb
inc
jg
fidivrs
pop
in
clc
mov
sbb
cmp
adc
or
xor
push
pushf
push
lahf
xchg
pop
xchg
in
in
in
adc
nop
add
pop
push
sub
scas
jbe
sub
int
jbe
jno
mov
sarb
xlat
loopne
add
fwait
idiv
call
xor
jmp
ret
ss
nopl
popa
mov
mov
loopne
xchg
icebp
xchg
mov
and
mov
xchg
pop
push
ds
adcb
xor
leave
cmp
dec
pushl
call
test
jmp
and
in
popa
push
lret
xchg
aad
dec
outsb
int3
les
mov
mov
test
xchg
jmp
pusha
mov
mov
and
aas
lret
arpl
cmp
es
push
add
and
je
es
adc
sti
mov
movsb
pop
lds
dec
imul
mov
leave
inc
cld
cmc
jno
fldenv
jp
mov
mov
psubw
jne
outsl
in
inc
or
push
fdivrp
add
pop
mov
cmp
push
pusha
hlt
adc
loop
mov
leave
mov
adcl
pop
fiadds
lds
inc
inc
in
hlt
lret
pop
sbb
xchg
adc
arpl
mov
jmp
mov
testb
ja
clc
dec
xchg
scas
std
pop
or
js
mov
enter
into
xchg
or
mov
mov
jo
push
test
aam
inc
mov
cwtl
popf
sub
mov
push
push
iret
aam
mov
pop
sub
pop
jne
mov
sti
mov
sarl
adc
icebp
dec
addr16
andb
jl
jno
push
push
adc
es
mov
add
mov
pop
pusha
fs
pop
daa
call
mov
movsl
jl
pop
repnz
adc
test
lock
mov
mov
mov
insl
xchg
jmp
xchg
push
pushf
sbb
adc
insb
mov
stc
into
cltd
xchg
in
cmp
pop
inc
dec
xor
push
inc
rcr
test
mov
cmpsb
fstpt
adc
ret
cwtl
into
imul
add
inc
sbb
inc
jl
cmp
cwtl
xor
adc
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
dec
cwtl
or
jle
add
pop
popa
subl
mov
loopne
inc
inc
clc
adc
jno
test
push
mov
mov
imull
arpl
cmp
je
mov
aad
cmp
lock
movsl
jb
sub
push
inc
mov
enter
das
loopne
sti
mov
cmpsl
mov
lea
sahf
ljmp
xor
dec
into
push
movb
fcomp
pop
inc
andl
jbe
out
loopne
mov
mov
movl
xchg
cmpsl
ss
push
cmp
ret
push
mov
cmp
fistps
clc
sbb
pop
andl
cmp
jbe
dec
pop
cli
add
pop
sbb
scas
test
pushf
fisubrl
stos
pop
loop
and
push
xchg
sub
sbb
sahf
xchg
xlat
xchg
push
push
fstpl
aad
mull
popf
movsb
push
mov
dec
mov
mov
outsl
cli
ret
movsl
xchg
jp
stc
inc
add
mov
in
es
adc
or
sbbl
xor
cmpsb
and
xchg
je
sub
into
adcb
insb
vpmadcsswd
sahf
pushf
xchg
nop
nop
in
fs
mov
mov
sahf
bnd
push
leave
insl
sti
cmp
js
jle
pop
jae
fistpl
xorb
std
jl
push
data16
and
ds
and
rcll
sti
std
les
mov
push
adc
dec
fidivs
dec
stos
sub
lret
mov
mov
enter
call
inc
roll
js
stc
sbb
pop
pop
mov
fbstp
pop
movsb
rcl
cmp
jb
and
arpl
aam
clc
mov
pop
push
xor
xchg
sbb
jbe
aas
ficomps
mov
sub
push
dec
lea
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
push
mov
inc
adc
jle
add
or
call
outsl
decb
sub
sub
in
in
jg
fisubrl
int
jbe
inc
test
movsl
test
jmp
and
mov
mov
mov
inc
mov
xor
jmp
sub
lods
iret
mov
repz
jnp
push
sbb
lcall
fsubrs
js
hlt
jg
scas
cmp
scas
push
fbstp
dec
cmc
cmp
fdivr
pusha
insb
jb
sbb
mov
push
dec
subl
sub
lea
mov
inc
cli
orb
push
and
outsl
lahf
addr16
mov
test
sbb
rol
fs
mov
xor
in
push
or
mov
xor
or
sbbl
cs
sub
fs
in
xor
stos
fdivrl
iret
loopne
xor
lcall
ds
pop
icebp
fidivrs
ret
mov
int
jae
push
cmp
add
testb
imul
shr
mov
pop
and
mov
repnz
sarl
in
push
cmpl
cwtl
fcomp
ror
and
pop
rorb
mov
jl
icebp
cmp
imul
ss
mov
dec
mov
sub
sub
mov
mov
pusha
dec
ret
xor
imul
or
adc
dec
sbb
lock
dec
iret
xor
roll
jns
jne
mov
gs
bnd
jnp
push
ja
lock
in
sub
aaa
mov
xchg
ja
dec
shufps
insl
and
or
testb
jae
int3
mov
rcrb
mov
sbb
imul
cli
sub
or
inc
mov
or
aaa
inc
mov
push
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
clc
hlt
sbb
into
jle
add
sub
mov
cmpsl
mov
sub
aas
stc
scas
icebp
inc
pop
or
hlt
sub
sahf
and
mov
inc
mov
shll
es
jmp
js
loop
mov
cmp
shrl
out
jp
sbb
test
ja
cmp
xor
les
lock
and
mov
sub
cltd
fcoms
das
push
cmp
pop
test
push
in
decl
add
lock
add
sbb
jno
iret
stc
das
cmp
pop
mov
add
jnp
xchg
add
sbb
mov
cld
out
sti
pop
xor
lock
ja
push
add
push
dec
les
inc
push
outsl
jo
rcr
rolb
add
add
out
mov
lock
mov
fadds
sub
nop
mov
xor
dec
cltd
xchg
daa
adc
sbb
and
xchg
out
sub
adc
out
push
inc
pop
jg
cltd
push
push
cli
in
xor
mov
add
mov
sub
je
scas
mov
out
jbe
mov
jns
or
cltd
ljmp
push
fsubrl
roll
out
adc
cmp
xor
andb
lea
into
push
insl
rolb
sub
cmp
and
xor
mov
cmpsb
ja
mov
mull
lock
sbb
jo
push
outsb
nop
sub
into
cmpsl
mov
push
cmp
imul
push
test
in
in
and
jg
call
adc
les
xor
add
xor
pop
cmp
aaa
int3
jb
lods
cmpsl
dec
cmp
push
cli
popa
and
dec
insl
inc
rclb
arpl
adc
aam
and
ljmp
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
popf
fwait
pusha
aam
int3
jle
add
cs
push
mov
ss
lea
pop
rcll
xchg
mov
xchg
mov
call
inc
nop
jg
mov
inc
xchg
lods
fnstenv
out
shlb
mov
jnp
in
rcrb
clc
xchg
mov
or
mov
imul
xchg
pop
xorb
inc
rorl
dec
pop
sbb
or
stos
orl
pop
stos
fsubrp
fbld
sarl
cmpsb
mov
add
pop
pop
stc
test
mov
jno
sbb
mov
rcrb
fidivl
lds
out
mov
mov
fiadds
aam
xchg
or
push
dec
push
bound
daa
mov
shll
pop
and
iret
jecxz
roll
add
repnz
inc
mov
push
popf
mov
mov
inc
and
xchg
pop
lret
loope
std
bound
data16
push
out
outsl
stos
add
out
pop
pop
jmp
fistps
ficoms
lret
xor
mov
jb
fs
mov
sub
scas
jno
int3
jp
idivb
out
pusha
inc
decb
dec
or
pop
inc
mov
ret
lods
or
inc
flds
cmpl
into
xor
mov
mov
xchg
sbb
xorb
lret
and
inc
adc
imulb
aaa
xchg
mov
mov
ficoml
out
and
add
sbb
popf
xchg
inc
xor
jl
test
aam
pop
push
lret
test
sbb
ja,pt
push
cmc
mov
push
ret
or
in
arpl
add
pop
or
dec
sub
fstps
pop
loopne
int
inc
mov
xor
mov
dec
cltd
xchg
xlat
cwtl
mov
cmp
add
sbb
or
scas
push
xchg
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
ds
and
jle
inc
sub
mov
push
jo
adc
movsl
pop
sbb
daa
xor
sti
sbb
mov
cltd
imul
xor
and
dec
fcmovb
pop
lods
xchg
sbb
sub
jmp
fwait
iret
push
jp
sub
je
mov
cld
mov
jmp
dec
shlb
movb
and
scas
popf
mov
lods
inc
shlb
mov
sti
outsb
cmp
xor
data16
roll
pop
jecxz
push
cli
lds
add
mov
add
loope
mov
inc
jae
dec
mov
mov
dec
push
jp
ss
cli
mulb
add
adc
pushf
movsb
sti
or
ss
test
repnz
adc
mov
mov
out
lret
cld
inc
repz
cwtl
push
mov
clc
les
jg
stos
cmp
stos
pop
js
cmovne
pop
ss
xchg
rol
cmpsb
sbb
dec
int
push
std
pop
adc
push
add
or
xchg
inc
jp
test
mov
sub
arpl
jb
sahf
dec
jae
lods
mov
stc
push
inc
sbb
fiadds
hlt
scas
sub
ja
or
ret
cmpsl
xor
sbb
pop
enter
cmc
rcl
dec
test
lcall
clc
inc
cmpsb
fmul
xor
pop
mov
and
mov
xor
push
in
inc
lret
dec
cld
cmpsb
xchg
pushf
dec
ja
daa
mov
icebp
bound
in
and
stos
inc
orb
insl
cmp
testb
mov
stc
mov
inc
jp
jl
lods
loop
data16
push
aaa
cmpsb
pop
xor
imul
inc
outsl
xor
push
or
pop
and
dec
cmp
push
pop
mov
repz
inc
loope
and
cld
add
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
loope
push
add
enter
jl
jle
lods
outsb
pop
dec
rcll
popf
fs
lret
mov
inc
and
iret
cs
and
pop
fimuls
add
adc
fstpl
cmpsl
xchg
sahf
or
lods
lret
adc
loopne
and
lret
mov
faddp
shlb
insb
in
push
add
sahf
add
popa
cld
into
push
nop
xor
cmp
mov
xor
loop
push
sub
mov
in
js
mov
call
fmul
roll
cltd
test
jbe
cltd
mov
mov
xchg
xor
lds
jle
sbb
iret
xor
mov
dec
lcall
rcrl
xchg
and
insb
test
mov
mov
jge
mov
movsb
xchg
cmp
in
subb
out
sti
mov
inc
pop
fidivs
dec
in
jmp
or
aam
dec
add
xor
in
scas
inc
adc
jno
cli
sbb
dec
or
xchg
dec
rcr
or
inc
and
shl
jge
stos
adc
arpl
sub
repz
dec
incl
ljmp
or
xchg
cld
adc
enter
push
dec
push
icebp
ret
mov
shll
adc
stos
add
jl
or
mov
mov
ret
xor
ds
inc
and
lods
mov
pop
stos
popf
outsb
cmc
or
push
jns
xchg
fwait
push
jb
cmpsb
lea
ret
push
sarl
xorl
stc
inc
sarl
jns
shll
sub
enter
xchg
std
jmp
pushf
adc
lock
sub
xchg
out
xchg
adc
and
imul
aam
aam
or
push
xchg
dec
popf
inc
or
pop
aas
fwait
mov
cli
andl
mov
pop
sti
push
aaa
mov
cmpsb
push
hlt
cmp
mov
pop
stc
cmp
test
mov
cmp
dec
fnsave
dec
aad
test
sbb
roll
pop
mov
fnstcw
xor
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
adc
and
jle
sub
insb
pop
fisubrs
sub
push
cs
jle
pop
mov
jno
push
sti
cmc
push
test
or
xorb
insb
mov
sub
imul
shrb
aaa
push
mov
movsl
mov
adc
xor
rcrb
and
sub
test
movsb
test
lahf
sti
test
dec
jmp
jnp
test
es
inc
cs
repnz
push
sarl
movsb
jns
mov
pushf
jno
mov
xchg
pop
cmp
and
cmc
cwtl
fsubrl
popf
lods
xor
inc
xlat
jnp
out
popf
jle
mov
outsb
sub
adc
or
loopne
cmp
mov
jl
rorb
nop
xchg
cmp
inc
inc
cmp
int
jmp
xor
repnz
int
pusha
popa
cmp
mov
daa
ret
jo
adc
je
imul
sahf
push
and
das
mov
fsubrl
sbb
mov
bnd
push
ret
pop
leave
or
mov
in
or
sbb
in
adc
or
cmc
popf
mov
and
in
stos
pop
adc
scas
sub
push
xor
xor
sub
cmp
gs
pop
insl
xor
fs
sub
xchg
aad
xor
adc
divl
fldcw
xor
fisubrs
adc
sahf
mov
sub
fdiv
cmpsl
pop
int
dec
jns
outsb
xchg
sub
cmp
jg
jno
in
in
repnz
sub
and
mov
pop
out
rcll
into
into
push
xor
sub
xchg
std
pop
rcll
imul
loope
cmp
ret
pop
in
push
push
test
cmc
mov
dec
enter
fnstcw
int
pop
in
rcr
adc
adc
addl
shrl
cmc
mov
lret
sub
mov
fdivrs
pop
mov
loopne
js
aam
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
sbb
jl
jle
dec
ja
jle
lcall
aas
sbb
das
imull
iret
cltd
stc
mov
inc
dec
mov
scas
xchg
ljmp
imul
inc
jge
inc
add
sbb
in
stos
lahf
jno
das
xchg
adc
sub
pop
mov
sbb
je
fisttps
and
aad
imul
lods
je
popf
jge
mov
push
idivl
into
mov
shll
xchg
pop
pop
xchg
xchg
insl
dec
xor
mov
jle
inc
push
dec
xchg
mov
sub
sbb
inc
jg
and
aam
push
gs
sbb
cmpsl
jg
faddl
out
push
xchg
fsubl
test
mov
ljmp
jg
cmc
fs
ss
stos
hlt
in
scas
xchg
aad
mov
lcall
sti
fnstcw
stos
inc
outsb
dec
jg
stos
mov
mov
clc
mov
mov
ret
ljmp
mov
pop
adc
xor
xchg
lret
mov
pusha
test
mov
xlat
jmp
mov
cmp
pop
or
popa
popf
adc
adc
inc
mov
daa
add
push
mov
mov
jnp
xchg
imul
cmc
xlat
add
cmp
stos
and
mov
out
insl
mov
sub
shlb
in
out
cli
pop
arpl
jbe
dec
cs
push
mov
dec
outsl
xor
pop
xor
ss
iret
fistpll
sub
cs
xchg
scas
int3
out
xchg
addb
or
nop
jae
cmp
push
repz
add
xchg
repnz
stc
pop
and
mov
pop
xchg
cmc
sub
sbb
sti
add
addr16
xor
jns
test
popf
es
popf
andl
pop
fst
mov
mov
rcl
ss
dec
sbb
div
rcrl
add
lock
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
mov
les
and
jle
pop
lcall
add
cmp
xor
fadds
inc
jle
inc
in
dec
push
xchg
in
mov
mov
fistpl
mov
test
movq
stos
dec
sbb
pop
pop
ret
mov
push
add
jmp
sub
mov
nop
gs
ret
dec
xchg
insb
fwait
movsl
dec
icebp
cmp
sti
in
sub
in
or
xlat
mull
repnz
test
pop
repz
aas
push
adc
or
fisubrl
sahf
xor
loopne
shrb
clc
mov
mov
sbb
cmpsl
je
sub
and
push
mov
inc
sub
jne
inc
mov
test
fcmovnbe
xchg
add
and
jge
loop
cmp
add
and
add
in
ficompl
int3
xlat
movsb
je
mov
pop
pop
sub
adc
inc
xor
test
call
or
pop
enter
dec
out
mov
and
jne
repz
iret
sbb
fwait
mov
xchg
int3
and
and
ss
insl
icebp
jl
ja
mov
dec
inc
call
js
mov
mov
aaa
aas
pop
cmp
jbe
out
clc
jp
xlat
icebp
ljmp
xchg
and
jg
enter
icebp
pop
dec
mov
in
sahf
leave
cmp
push
inc
loope
test
dec
out
xchg
fisttpll
dec
repz
mov
mov
aam
data16
fsts
jg
cltd
sbb
das
popf
scas
mov
cmp
pop
test
cmc
push
mov
outsb
pop
pop
popf
and
outsl
mov
jmp
rdseed
xor
pop
div
inc
sti
mov
lock
ja
sbb
sbb
xchg
enter
orl
ljmp
stos
jne
inc
arpl
mov
pop
or
js
out
or
sub
push
mov
aam
inc
and
jae
mov
ljmp
loope
rcrl
int
lods
hlt
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
add
movb
xchg
or
cmp
inc
ficoms
push
pop
out
and
movsl
pop
push
subl
in
adc
idivl
movsl
mov
adc
push
mov
out
sub
pusha
push
in
rorb
add
aam
mov
pop
test
push
jecxz
dec
pop
pop
and
push
jae
jnp
mov
pop
repnz
jae
hlt
jbe
out
mov
xor
ja
insb
xchg
sbb
aas
push
sub
lret
adc
fisttps
in
or
je
data16
nop
loopne
int3
adc
mov
mov
or
movsb
lcall
out
sbb
jb
push
in
jmp
hlt
push
dec
sub
int3
push
mov
dec
sti
inc
or
xor
pop
std
xchg
arpl
push
push
and
ds
fcompl
xor
sub
mov
test
inc
pop
ret
es
xor
fmuls
jge,pn
xor
adc
movsl
mov
push
fwait
mov
mov
ret
fwait
dec
adc
adc
pop
pop
ljmp
dec
add
push
jecxz
inc
sub
imul
or
cs
cmp
in
pop
fadds
loope
decl
inc
loope
mov
lahf
enter
cmc
xchg
jmp
int
js
cmp
insl
xlat
xchg
dec
mov
adc
ja
xor
out
add
dec
shld
adc
cmp
and
mov
fnsave
mov
es
dec
insb
repnz
sbb
test
sahf
and
adc
mov
mov
dec
jmp
hlt
xchg
cmp
jo
addl
mov
cmpsl
mov
add
ljmp
ficoms
xchg
sub
xor
shll
jp
jno
mov
pop
push
add
add
inc
xorb
cli
into
dec
fsave
pop
jno
in
cmpsl
pop
shlb
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
adc
jmp
fistpll
and
jle
cmc
ret
push
mov
jno,pt
sbb
insl
jb
hlt
dec
lods
sbb
jg
ret
out
hlt
pop
dec
xchg
sbb
pop
cmpl
xchg
xor
das
push
xchg
jo
js
push
xchg
push
test
fsts
adc
fabs
leave
push
dec
prefetch
packsswb
ret
leave
fcmovnu
pop
cmc
popf
arpl
addl
hlt
into
sub
sbb
lahf
xchg
cmpsb
test
adc
mov
fcoms
cmp
addr16
mov
cmc
jno
sub
gs
cmp
mov
adc
dec
icebp
mov
mov
orl
jge
jg
in
pop
adc
lret
jns
adc
mov
outsb
cmpb
aad
pop
lods
xchg
push
mov
push
shlb
xchg
xchg
punpckhbw
sub
mov
ja
pop
xchg
addb
sbb
imul
mov
mov
sub
test
lods
loopne
mov
or
dec
cmp
mov
insl
mov
ja
sub
jmp
mov
and
mov
inc
adc
repnz
push
mov
cmc
xchg
rcrl
xor
jle
pop
nop
push
in
lods
nop
shlb
mov
mov
xor
sub
rcrl
stos
xchg
pop
stc
mov
addb
mov
inc
pop
lods
adc
push
and
inc
cmp
std
fs
into
movl
dec
sub
daa
sub
repz
rcrb
or
mov
cmp
and
inc
mov
hlt
mov
ja
add
mov
jmp
jno
sub
gs
pop
adc
push
push
jo
testb
ret
popf
orl
outsb
pop
aam
addr16
cs
mov
repnz
imul
adc
or
or
jne
jmp
lods
mov
outsb
xorl
pop
mov
gs
fnstsw
and
jle
mov
loopne
mov
sbb
fiadds
popa
std
jp
orb
push
pop
popf
mov
add
jg
mov
inc
inc
xor
mov
std
bound
pop
stc
or
mov
cmp
pop
loopne
int3
sub
mov
cwtl
rorb
lods
mov
xchg
sub
mov
jb
cmp
and
ret
insl
dec
dec
dec
adc
mov
push
cmp
push
fsubrs
ja
dec
lea
fadds
dec
dec
outsb
loopne
mov
inc
lret
mov
jnp
in
adc
rolb
in
jno
push
cltd
popa
sahf
add
shlb
xor
sbb
mov
aam
inc
ja
enter
add
je
lcall
jb
add
fs
shll
imul
rolb
add
inc
jmp
in
ret
mov
frstor
jbe
jne
jecxz
jne
or
or
fstl
pusha
mov
sub
pop
bound
adc
stos
inc
push
pop
xorb
mov
or
test
sbb
mov
stc
loope
adc
pop
push
sub
rolb
sbb
cwtl
out
addr16
pushf
xlat
pop
xchg
out
es
lock
into
xor
mov
pop
inc
xchg
lret
aas
jg
test
add
rol
subl
xchg
xor
inc
bound
mov
inc
push
mov
mov
aaa
lock
xor
test
lds
adc
repnz
sbb
lock
mov
imul
sub
or
and
daa
dec
loopne
iret
adc
std
fstpt
out
js
pop
mov
adcl
xchg
cmpsl
push
out
add
rorl
fstps
addr16
dec
inc
mov
mov
loop
cmc
xor
cli
cmpsl
lock
xor
cmc
cld
ficomps
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
into
scas
cmpl
outsl
outsl
push
lock
rcrb
fnstenv
pop
and
std
jnp
ja
push
ret
movsb
shrl
cmp
lret
or
jle
scas
loope
or
lea
loop
push
sti
xor
mov
popf
mov
icebp
xchg
stos
fisttps
fadds
jb
lahf
call
rcrb
push
pop
push
test
jp
jecxz
call
loop
dec
rorb
ljmp
xor
add
mov
sahf
daa
inc
mov
push
mov
pop
fninit
push
jae
sbbl
dec
loopne
stc
cli
mov
push
pusha
push
popf
hlt
mov
inc
adc
sub
test
hlt
inc
xchg
xchg
push
push
push
clc
jno
repz
mov
mov
arpl
dec
mov
mov
mov
cltd
and
mov
rcrb
mov
addl
and
sub
inc
cli
scas
xor
push
adc
in
sbb
xchg
icebp
repnz
lretw
enter
ja
xor
mov
ds
out
jmp
pusha
push
and
xchg
fcompl
das
jae
out
scas
inc
mov
cmp
cmp
push
into
cld
cwtl
sbb
pop
imul
lods
dec
outsl
ret
mov
loopne
jle
mov
inc
int
sbb
dec
push
dec
pop
inc
add
push
out
xorb
pop
mov
mov
jge
outsb
popa
icebp
in
test
in
scas
pusha
scas
jg
sti
add
mov
enter
push
out
jbe
cmp
lds
inc
popa
fdivl
or
out
jbe
dec
in
or
fwait
pop
xchg
dec
pusha
in
stos
adc
subb
inc
jp
and
pop
imul
cmpsb
sarl
pop
mov
jg
inc
mov
nop
dec
inc
xchg
sub
outsl
in
mov
faddl
fwait
enter
mov
in
mull
mov
sbb
push
inc
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
in
cs
fnstcw
cmp
sub
jecxz
cmp
xor
fisubs
faddp
sub
jmp
xchg
mov
loop
test
sub
mov
cmp
stos
fdivrs
repnz
aas
mov
addl
lcall
sub
ret
mov
addb
sub
fwait
adcl
dec
inc
add
lret
xchg
dec
pop
cmp
cmp
mov
rcrl
mov
ds
scas
iret
dec
addr16
and
dec
and
mov
pop
fs
push
xchg
xor
loope
or
clc
nop
int3
adc
push
add
int3
mov
sarb
test
loop
iret
add
dec
push
adc
cmp
add
fldenv
mov
loop
push
movsb
dec
mov
jl
jl
jmp
into
adc
test
cmp
xlat
xchg
fwait
dec
test
dec
loope
jg
jmp
lret
dec
lea
mov
repz
mov
jle
jb
shrb
arpl
neg
cmp
lods
in
cmp
jmp
sub
ljmp
inc
cltd
ret
push
adc
outsb
ljmp
sub
fisubl
mov
xchg
cmp
std
xlat
push
sti
rcll
js,pt
xchg
xor
aaa
iret
xchg
xchg
cmp
fcomi
pop
or
inc
cmp
xchg
fldenv
fwait
js
xchg
sbb
jge
sub
das
lods
in
mov
jecxz
sbb
imul
mov
outsl
add
or
push
inc
cs
movsb
outsb
stos
adc
fistpl
pop
aam
in
cltd
pop
outsb
shl
mov
mov
push
cmp
fcmovbe
and
test
lods
sbb
jbe
out
jns
lock
movsl
xchg
inc
mov
cmp
or
inc
mov
xor
mov
or
aam
pop
adc
jno
stc
mov
mov
ss
imul
push
sbb
cmc
adc
out
xlat
push
push
sbbl
jmp
lds
popa
mov
fisttpll
lods
jle
jle
cmp
fisubrs
repnz
sbb
pop
cmc
inc
mov
xor
sub
jno
jnp
cmp
or
movsl
xchg
add
xchg
cli
mov
pop
push
jle
inc
pop
idivb
and
gs
sub
xchg
xchg
push
cmp
mull
jbe
test
arpl
loop
lods
subb
mov
test
fwait
ss
pushf
mov
jl
jl
hlt
shrb
aam
stos
xorb
pop
mov
adc
inc
not
cmp
pop
mov
in
inc
adc
add
jbe
movsl
fists
and
nop
testl
in
jbe
dec
push
rcl
leave
mov
sub
and
xor
xchg
das
shlb
jmp
jns
mov
fwait
xor
push
and
mov
les
cmp
pop
test
inc
out
mov
and
test
or
jp
aam
in
mov
dec
pop
loope
dec
aas
andl
lret
imul
rcl
std
sahf
stos
mov
jge
mov
mov
icebp
mov
rclb
mov
rcrb
mov
sbb
call
cs
adc
loope
js
jae
xchg
enter
mov
fst
in
lds
ret
or
cmc
or
loope
add
pushf
cmc
lods
testb
mov
jl
adc
add
xlat
push
outsb
arpl
cmp
pop
mov
dec
jmp
pop
pop
insb
jmp
daa
sahf
scas
jecxz
lock
jge
test
jae
adc
out
jl
fdivl
ja
push
and
sbb
adc
jp
les
int3
mov
push
incl
and
popf
test
in
mov
sub
sbbb
adc
pop
xor
hlt
inc
mov
lds
xchg
or
insb
push
leave
scas
pop
dec
call
roll
aaa
inc
add
xor
add
test
add
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
adc
int3
cmpb
jle
cmp
out
andb
shrb
fmul
dec
inc
leave
bswap
fdivp
leave
mov
xor
std
out
stc
dec
inc
jbe
cmc
mov
jae
enter
lods
jg
mov
jbe
sub
fdivrs
or
fistpll
add
mov
jne
frstor
lock
jno
xchg
jbe
lahf
clc
outsb
dec
push
push
mov
aam
jl
cmp
and
jnp
stos
inc
jbe
cmpsl
lock
mov
cmp
mov
bound
lods
xor
push
loop
push
mov
fimull
bound
outsl
jb
dec
clc
mov
cltd
xor
lahf
repnz
pop
roll
sbb
mov
popf
inc
xchg
ds
or
ljmp
fdivrs
ljmp
xchg
jp
ss
mov
clc
mov
xor
pop
xchg
outsl
xor
imul
movsb
icebp
rcrl
hlt
loopne
add
pushf
dec
sub
push
or
lds
fwait
mov
addr16
and
insb
xchg
je
xchg
mov
cmc
jno
inc
jecxz
mov
and
and
div
sbb
inc
stos
cmc
push
inc
pop
pop
and
xchg
repnz
dec
in
test
and
neg
cmp
adc
and
jnp
lahf
rolb
lods
or
jae
mov
fistl
or
ja
cmp
mov
mov
fadds
ficomps
sbb
mov
sub
mov
neg
loopne
push
dec
cmp
addr16
sbb
ret
inc
les
imul
movsl
in
dec
sub
cmpsl
sbb
das
mov
and
mov
scas
pop
or
cmpsl
iret
xlat
repz
lret
inc
pop
out
and
push
and
mov
inc
imull
cmp
inc
clc
popf
cmp
pop
ret
pop
and
lods
ds
pop
jnp
push
sbb
pop
xchg
fsts
mov
adc
cmp
push
mov
mov
orb
fisttpl
scas
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
add
loopne
jle
jl
jle
jbe
jecxz
mov
sub
xchg
out
pop
jbe
mov
mov
in
testb
jmp
rcr
xchg
sub
adc
cmp
and
sub
push
and
popa
cmp
and
push
hlt
xor
popf
mov
adc
scas
xor
neg
lock
out
pop
cmpsl
aad
jne
jnp
push
sahf
xchg
inc
out
hlt
into
xor
mov
cmc
push
inc
out
fs
xor
push
call
cmp
push
clc
or
ds
fdivs
lret
mov
fmul
and
xchg
stos
xor
in
es
jle
mov
shr
ret
leave
dec
jne
hlt
imul
int3
jmp
pop
push
pop
scas
aas
rcl
in
mov
xor
pop
fcomps
outsb
sbb
mov
loop
dec
pop
push
notl
ds
or
rclb
cmp
clc
and
xlat
pop
mov
sti
or
push
les
push
or
lods
aad
push
dec
sub
int
xor
loope
movnti
pop
movsb
mov
pop
mov
enter
dec
and
aaa
test
stos
popf
xchg
lcall
popa
loopne
adc
jecxz
mov
push
popa
jg
mov
cmp
sub
pop
inc
loopne
test
bound
cmp
je
mov
jg
in
imul
test
fnstcw
pop
add
pop
pop
sti
idivl
lcall
dec
push
loope
xchg
aaa
jns
fldenv
mov
inc
outsb
xlat
jl
int3
push
sbb
sarl
pop
push
push
push
jg
mov
sub
jge
mov
movsl
and
int
repz
movsb
int
enter
jns
push
fcompl
mov
and
jne
and
pusha
cmp
xchg
sahf
xchg
ljmp
sub
cmp
lods
and
adc
out
jg
or
bound
jmp
and
and
mov
test
test
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
cmpsb
xchg
arpl
cmp
subl
icebp
jl
test
mov
ret
out
enter
mov
les
mov
sar
pop
or
or
out
lret
rcrb
jmp
leave
mov
xchg
jns
hlt
dec
add
push
das
xor
and
je
cmp
mov
add
das
mov
fwait
sub
shl
cwtl
hlt
in
fmuls
push
or
adc
jmp
sub
call
aas
push
or
sbbl
in
ret
pop
xchg
call
popl
outsb
mulb
xchg
jo
outsb
dec
nop
mov
mov
cmp
lahf
cwtl
pop
and
rcrb
jae
popf
out
sub
sbb
sbb
xchg
xchg
mov
sub
lahf
cmc
icebp
mov
inc
sbb
ljmp
push
mov
mov
sti
and
jns
js
mov
test
and
xchg
and
sub
stos
ret
dec
jb
or
xor
lods
clc
push
adc
insb
cmpsb
pop
xor
lea
or
leave
loopne
xor
sbbb
int
and
lcall
loop
xchg
sti
les
dec
enter
js
ret
cwtl
fcmovb
mov
and
mov
mov
lret
adc
lods
fnstsw
adc
sub
or
cmp
pusha
repnz
mov
daa
mov
jae
cltd
sub
xor
shlb
aaa
or
dec
adc
push
iret
jbe
popf
sbb
fdivs
ss
inc
lds
and
or
arpl
add
aad
mov
jb
testb
mov
mov
dec
mov
xor
in
cmpsb
scas
mov
outsb
mov
notb
roll
rolb
out
and
ja
jbe
fcmovu
outsb
mov
data16
das
repz
fs
lods
pop
cli
dec
sbb
mov
adc
test
lahf
rclb
jmp
imul
and
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
stos
scas
push
in
jle
cmp
xchg
ss
insb
ret
jg
lret
sti
into
adc
repnz
cmp
outsl
outsl
inc
or
lcall
lods
sub
stos
adc
mov
and
xor
fadds
sub
mov
cmpb
push
xchg
dec
in
pop
jl
rolb
push
test
test
mov
orb
daa
stos
sub
xchg
adc
jecxz
adc
adc
dec
cmp
icebp
push
or
cli
xor
pop
in
mov
jb
movsb
push
fbld
jnp
xchg
call
scas
cltd
iret
loop,pn
pop
mov
in
pop
xor
neg
xchg
dec
sbb
dec
pop
lds
and
and
dec
sub
fcomp
xchg
mov
cs
hlt
lods
loopne
lcall
mov
jg
stos
pop
cld
daa
mov
adc
jnp
add
es
in
cmp
push
or
push
pushf
inc
daa
aas
jns
ss
das
testl
sub
lea
faddl
dec
ss
jne
pop
lea
aas
stc
or
mov
and
pop
mov
xchg
inc
xor
mov
push
xor
jmp
pop
pop
fcomp
push
jg
movsb
movsl
jle
xchg
movsb
add
int
push
lods
jp
dec
xchg
mov
in
fs
jo
pusha
mov
xor
push
jno
adc
lods
hlt
mov
or
stc
aas
fs
add
push
jmp
pop
jb
gs
or
fsubrl
outsb
js
fisubrs
adc
das
movsb
test
gs
pop
lcall
or
and
stos
aaa
jl
fnsave
fwait
aaa
and
fisttpl
lret
adc
xlat
mov
pop
cld
icebp
pushf
inc
rcll
test
les
test
mov
or
push
cmp
repnz
sarl
cltd
mov
mov
push
pushw
shl
nop
adc
push
aas
call
mov
outsl
addr16
hlt
mov
mov
sbb
mov
enter
xrelease
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
inc
inc
dec
sub
jmp
jle
jl
jle
and
repz
iret
outsl
orl
adc
mov
fildll
sbb
add
jnp
adc
xor
imulb
xchg
inc
cmp
negl
les
jb
aad
dec
enter
movmskps
nop
pop
jp
jbe
mov
and
stc
inc
xchg
fsub
call
xchg
stc
add
xor
lds
idivb
jno
pop
leave
test
rclb
clc
cmpsb
sub
push
mov
stos
lock
es
dec
and
xor
cmp
clc
mov
and
sbb
aaa
sbb
aas
push
mov
jge
stc
fisubs
jecxz
inc
dec
les
ror
adc
test
jp
test
and
xchg
icebp
push
rclb
das
sub
jecxz
loop
push
jg
or
fstps
dec
repz
add
or
inc
jmp
cld
xor
cltd
es
mov
push
push
inc
xchg
xchg
popf
out
mov
jmp
push
ss
fadd
or
pushf
addr16
addr16
pop
xchg
lcall
dec
jl
xchg
mov
aam
jge
xchg
mov
nop
xor
sub
lcall
mov
sarb
jno
addb
stos
aas
xchg
dec
or
pop
out
les
lcall
stos
ret
iret
and
insb
out
adc
test
lock
adc
shlb
lea
jo
or
sub
xor
je
xor
clc
dec
xchg
hlt
es
ret
push
fs
xchg
sarb
lds
popa
call
cmp
insl
es
xchg
jno
jae
fs
cmp
xor
loop
mov
mov
sub
jo
cld
leave
xchg
mov
repnz
addr16
lods
stos
jb
outsl
jge
test
fcmovu
shr
or
filds
int
sub
mov
stos
or
mov
inc
int
enter
or
imul
add
je
add
out
aaa
inc
add
add
add
leave
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
inc
mov
jecxz
and
inc
adc
cwtl
sub
fwait
jae
add
lcall
dec
imull
daa
sbbb
aad
hlt
ja
lcall
out
jbe
es
enter
mulb
adc
out
push
sub
push
sbb
mull
aaa
ss
cwtl
cmp
mov
iret
cld
popf
int
imul
negw
dec
xor
loope
ja
das
and
jbe
pop
dec
pop
mov
ds
adc
mov
xor
jle
xchg
cmpsl
inc
xchg
lods
sbb
xor
es
inc
or
sub
hlt
call
or
ja
div
mov
jnp
mov
sbb
in
sub
mov
jmp
push
testb
negl
outsl
ret
mov
adc
lcall
icebp
rolb
pop
push
ret
xchg
outsl
std
idiv
push
cli
jmp
push
fwait
jge
xor
mov
dec
lahf
nop
fabs
fisttpll
clc
std
daa
jae
push
sub
cmp
cmpsb
sbb
adc
mov
cmp
jmp
push
or
lret
cmpsb
mov
addr16
jl
push
push
je
cmp
jno
and
sbb
js
popf
mov
outsb
sbb
sub
shr
cli
pusha
test
fistl
xchg
js
pop
push
sbb
leave
mov
pop
shrl
push
aaa
lret
sub
adc
sarl
push
pop
push
movsb
arpl
jge
ret
stos
jg
mov
or
mov
mov
fsubp
inc
lods
stos
jg
mov
xor
in
aas
jae
sti
jb
int
arpl
xchg
sbb
mov
lock
stc
sbb
aas
mov
enter
inc
add
test
jne
je
jge
push
movsl
sbbl
jge
aad
leave
call
adc
mov
sub
test
dec
aad
mov
push
push
cmpsl
mov
subb
sub
inc
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
push
pop
xor
jle
jl
jle
dec
xchg
mov
push
push
lds
xor
cld
data16
mov
rcrl
mov
fnstsw
aas
subb
fidivrl
fnstenv
cmpsl
mov
or
pushf
cmp
mov
sbb
pop
inc
cltd
rcll
push
shrb
fs
bound
test
jae
cld
push
mov
jns
movsb
mov
aad
cmp
cld
ret
xor
fisttpl
lds
cmp
ljmp
dec
mov
cmpb
repz
xor
pop
shl
mov
inc
outsb
lods
repnz
jl
in
lcall
lret
adc
jle
jmp
mov
push
ja
dec
aad
dec
xchg
vandps
jns
jns
mov
inc
jle
fcoml
push
jecxz
addb
sbb
loopne
pop
lods
add
test
jle
bnd
cmpsb
xchg
adc
pusha
dec
mov
dec
scas
push
addr16
mov
push
inc
push
cmp
rcr
pop
pop
push
and
mov
jl
sbb
popf
xor
scas
lea
or
pop
jp
xchg
notb
and
or
jo
jmp
in
pushf
or
stos
addr16
insb
sti
mov
mov
inc
mov
or
jnp
outsl
cmp
out
xchg
jne
jmp
push
leave
sti
adc
and
sub
adc
push
dec
mov
mov
xchg
fcmovne
scas
push
idiv
mov
cmp
jmp
test
jb
cs
rorb
ljmp
mov
jg
push
add
adc
mov
data16
mov
xchg
jb
add
aaa
push
lret
fistps
or
es
mov
cmp
cmc
mov
loopne
or
loope
shll
inc
xchg
adc
iret
addr16
jne
stc
mov
sbb
sbb
aad
idivb
mov
es
cmpsl
cmp
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
push
popa
push
mov
bnd
cmp
out
aas
fcoml
lea
or
mov
sbbb
xor
push
je
jae
xchg
cmp
jae
or
aas
pop
arpl
cld
mov
nop
je
scas
ss
ret
stc
pop
inc
test
push
sbbl
jbe
add
jnp
andl
push
ja
mov
rcrb
insb
int
andb
mov
repnz
outsb
xor
mov
insb
gs
sbb
fistpll
fpatan
pop
and
xchg
jmp
lahf
sarl
push
ljmp
cwtl
jns
inc
add
loope
mov
mov
mov
add
insl
cli
mov
cmp
imul
adc
outsl
popa
fidivl
mov
lret
xchg
mov
ljmp
mov
mov
adc
inc
lea
insl
cmp
dec
outsb
mov
cmp
mov
jecxz
int3
sub
icebp
pop
jne
ds
int3
pop
dec
push
scas
jns
imul
leave
sub
jo
inc
push
xchg
pop
stos
fyl2xp1
fucompp
sbbl
lcall
inc
inc
xor
pop
or
push
push
adc
pop
jb
lds
fnstcw
push
adc
dec
dec
xchg
stos
inc
push
inc
pop
enter
iret
cli
std
dec
pop
leave
xor
aad
and
xchg
dec
mov
popa
mov
es
scas
xchg
cld
loopne
das
mov
and
repnz
ja
dec
and
test
lods
mov
ret
nop
test
lcall
pop
xlat
mov
aam
jmp
pop
loopne
mov
adcl
pusha
cmpsl
sahf
or
lds
xchg
bound
out
mov
lcall
jle
loop
dec
jb
leave
jbe
inc
sbb
add
sti
hlt
mov
pop
cmp
mov
xchg
push
incl
mov
roll
aad
add
lcall
sbb
leave
pop
aas
pop
fdiv
shlb
popf
aaa
das
and
mov
pushf
int3
inc
mov
add
bound
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
xor
call
jl
jle
fs
jne
jg
data16
add
ror
ss
lcall
cmpsl
rcll
mov
pusha
xorb
push
xchg
cld
xchg
and
mov
nop
inc
push
fiaddl
fistpll
cs
clc
icebp
jle
mov
xchg
rorb
push
inc
inc
add
adc
ffreep
sub
push
and
andb
jg
insl
movsl
dec
shrb
pusha
pushf
cli
in
inc
xor
stc
push
xor
adc
cmp
sti
cmp
adc
jle
and
movsb
pop
aam
and
push
xor
loopne
inc
scas
and
mov
add
fcoms
or
cmc
pop
mov
inc
addr16
mov
sub
std
test
shll
in
xchg
stos
stos
popa
mov
lods
int3
cmp
dec
xchg
out
cli
loope
sbb
je
jecxz
cs
stc
push
push
inc
fptan
test
jnp
iret
or
cs
mov
adc
inc
mov
push
lds
movsl
adc
test
int3
es
loopne
orb
mov
jmp
sti
mov
cmp
lcall
mov
adc
mov
pop
sbb
repz
lods
adc
scas
popa
mov
mov
xchg
sub
mov
lahf
icebp
dec
and
data16
xchg
xor
and
pop
mov
inc
pop
sar
inc
inc
jo
mov
jae
inc
icebp
inc
aam
xor
adc
xor
loope
mov
dec
fcoml
fsubs
push
insb
testb
pop
test
jb
sub
mov
push
xchg
test
loope
es
not
mov
jns
pop
inc
mov
lea
das
lahf
mov
mov
inc
movsl
jg
mov
and
inc
adc
cmp
les
sub
push
sbb
das
cs
stc
and
pusha
mov
pop
push
mov
jb
xchg
jae,pn
mov
pop
lret
jmp
jne
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
in
jno
mov
jle
cmp
daa
push
sub
adc
std
or
adc
push
ficoml
xchg
lods
aaa
pop
movl
lods
shld
adc
repz
sbb
jmp
sets
xchg
mov
lea
int
adc
add
xchg
clc
pop
in
mov
popf
fcmove
xor
mov
sbb
mov
int
in
dec
jecxz
pop
in
jne
push
outsl
push
mov
dec
inc
out
jle
outsl
jne
inc
pop
push
fs
repnz
sbb
or
repnz
mov
jae
cmp
sbb
mov
pop
push
or
mov
inc
xchg
mov
lds
mov
mov
and
cs
cmpsb
sbbl
xorb
aaa
insl
arpl
and
inc
into
flds
xchg
mov
cmp
jnp
push
inc
test
fwait
icebp
xchg
imul
jge
push
xchg
push
incb
xor
mov
in
sbb
ljmp
xchg
add
add
or
sahf
xchg
add
jl
and
mov
dec
in
call
in
mov
pushf
subb
sub
arpl
js
fmull
mov
dec
sbb
ror
or
sbb
sub
inc
sbb
fbstp
mov
aas
in
ficoml
sub
movsl
ss
jne
add
pushl
and
push
pop
push
sbb
or
push
mov
add
sbb
dec
enter
dec
ljmp
flds
pop
sbb
pop
nop
jle
repnz
push
jg
or
sbb
add
cld
sbb
aas
test
test
xchg
loope
add
cmp
aam
pop
sahf
jecxz
push
mov
add
sub
sub
lcall
hlt
fidivl
jecxz
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
gs
jl
jle
cmp
cwtl
outsl
or
add
enter
loop
lods
lods
pop
xor
and
out
cs
xor
xor
xchg
mov
sub
rcrb
imul
xchg
andl
mov
cmpsb
mov
xor
and
push
jmp
adc
sahf
and
scas
aas
xchg
test
scas
cltd
jno
scas
decb
push
and
cli
cmp
pop
mov
fwait
gs
fdivrs
fwait
rorl
dec
mov
dec
jg
dec
push
pop
rcl
xor
das
sbb
add
mov
push
fs
pop
jbe
sarl
adcb
sarb
push
mov
test
jb
pop
rol
in
repz
push
cmpsl
scas
out
in
mov
or
sub
insb
ja
inc
push
popf
push
add
adc
xor
inc
cmp
add
cmpsb
lock
mov
adc
jns
add
push
lret
xchg
xchg
push
xchg
icebp
test
pop
jg
push
aad
push
cpuid
cwtl
into
in
out
dec
xor
ljmp
aad
mov
sbb
js
jb
push
inc
subb
mov
mov
sbb
push
mov
xor
dec
repz
add
push
enter
lods
test
adc
outsl
sub
daa
cltd
in
aaa
imul
aad
cmp
dec
cmc
stos
test
js
mov
loope
sbb
cmpsb
shlb
enter
sbb
incb
pop
iret
shlb
in
mov
jmp
sbb
jo,pt
imul
daa
jl
js
mov
and
cmp
push
sbb
int
push
fcmovb
mov
outsl
sti
aas
adc
jae
addl
out
add
cli
cmpb
mov
scas
arpl
inc
lods
fsubrs
push
pop
cmp
cmp
fiadds
mov
loope
mov
dec
add
ret
add
lret
aam
mov
test
jp
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
mov
sti
jle
cmp
sub
cmc
scas
ffree
jmp
cmp
mov
xchg
ret
pushf
js
popa
add
inc
ja
loope
add
test
push
add
rcl
xor
daa
imul
mov
js
adc
movsb
testb
jl
in
cmp
adc
aas
mov
insb
scas
push
xchg
aaa
popf
push
push
and
mov
fdivl
mov
pop
xor
ja
ret
addb
hlt
add
mov
jl
fwait
in
dec
dec
dec
add
or
lods
icebp
push
add
js
ss
mov
cmp
jno
sti
js
shlb
adc
jecxz
fildl
xlat
xchg
sarb
and
jns
and
shrb
gs
or
dec
pop
loopne
xchg
mov
repnz
sahf
and
nop
pop
and
cmpsb
jbe
sti
xlat
fimull
sarb
push
jno
pop
sub
cmp
shll
adc
sub
push
testl
xor
scas
mov
in
jecxz
test
mov
jb
inc
jae
or
push
mov
sbb
xchg
mov
push
and
ret
lret
mov
jp
aas
jne
mov
lret
and
stos
fistpl
loopne
mov
or
jae
fdivrl
add
mov
xchg
mov
xlat
mov
fistl
cltd
inc
fucom
pop
xor
lahf
mov
dec
sub
sub
cmc
pop
sahf
jmp
daa
mov
iret
mov
and
das
mov
int3
dec
mov
lcall
dec
lahf
push
mov
stc
push
rcrb
adc
icebp
inc
lcall
adc
jge
ja
leave
negl
push
inc
insl
or
jne
jmp
lock
push
mov
stc
aas
gs
xlat
sub
loop
cwtl
ror
out
inc
and
out
jp
mov
dec
in
ds
pop
mov
rcrl
in
mov
fsubrl
dec
pop
mov
nop
inc
int3
inc
dec
fisubrl
ret
movsb
adc
ja
cmp
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
roll
jle
insb
and
xchg
fldl
sub
or
lods
mov
add
mov
sub
push
mov
call
sbb
cmp
cmpsb
sbb
popa
test
cld
divb
stos
into
cmp
pusha
mov
xor
adc
add
and
dec
push
mov
imul
xor
insb
pusha
or
xlat
pop
cmp
enter
das
daa
ficompl
jmp
cmp
jp
stc
lret
xchg
xor
xchg
or
xor
mov
mov
rcr
clc
in
out
push
jle
scas
lahf
icebp
mov
in
sub
fadd
imul
xchg
sub
sub
popa
out
fidivs
ss
xor
push
dec
xchg
pop
xlat
mov
xlat
out
add
repnz
icebp
outsl
je
push
mov
icebp
xor
addr16
mov
push
mov
int
fs
jae
out
into
push
ljmp
aaa
or
pop
fs
loope
or
lret
stc
adc
pop
ret
stc
mov
adc
leave
dec
push
loop
data16
cld
or
mov
stos
fdivl
inc
sub
push
add
movsb
stc
xchg
jbe
dec
jge
ss
push
push
adc
push
sar
insb
out
jns
movsb
sbb
sbb
cmc
or
cmp
psubsb
mov
notl
dec
pop
mov
mov
sbb
out
xchg
jg
adc
pop
jge
cmp
bnd
lock
sub
adcb
fucom
xor
js
cs
dec
pop
jns
mov
sbb
ret
mov
cmpb
or
std
fldenv
stc
pop
or
xchg
mov
ds
aas
cld
mov
ds
mov
clc
les
push
out
pop
sbb
test
into
outsb
mov
or
jno
lods
mov
pop
jb
jne
fcomps
sub
nop
and
xchg
fistpl
pop
mov
loope
cld
jne
mov
mov
pop
es
mov
or
rorb
and
inc
in
scas
shrl
mov
jmp
dec
loop
lds
push
jo
mov
sub
je
sti
dec
xchg
cmp
pop
inc
popf
stc
pop
sub
lret
xchg
dec
mov
adc
sub
dec
dec
ret
ja
lahf
hlt
inc
sarl
jne
loopne
test
ss
outsl
fsubl
sbb
call
imul
aaa
pop
or
flds
cs
movsb
fsubrp
jl
pop
aam
out
shll
out
call
mov
dec
pop
loop
pop
jmp
stos
leave
int3
fdivr
ss
ss
mov
mov
cli
jns
icebp
popf
adc
pusha
mov
jo
popa
gs
test
add
push
movsl
loope
pushf
adc
ds
icebp
push
and
add
xchg
fcomps
add
mov
xor
in
sub
aam
pop
int
cmpsl
mov
push
aad
aam
xchg
test
lret
imul
arpl
cli
les
inc
pusha
cltd
scas
cld
cli
loope
dec
aad
push
loopne
movsl
dec
dec
and
out
dec
decb
stc
xchg
push
sbb
inc
ja
xor
or
push
jne
xchg
and
insl
dec
sub
bound
mov
loope
mov
sub
xchg
add
pop
rcrb
xchg
adc
cmp
roll
xchg
stos
cmp
roll
addl
jecxz
fucomp
or
jl
aad
dec
jge
adcb
push
nop
test
or
mov
xchg
imul
ret
stc
lods
ss
sub
dec
xchg
rorb
pop
dec
add
add
mov
mov
aad
add
enter
dec
test
rcr
push
jnp
sbb
out
ret
fwait
js
fistl
cwtl
push
push
pop
cs
rorb
int
xchg
in
lret
out
or
je
xlat
fdiv
mov
cmp
xorl
push
test
cmp
xchg
ds
std
les
add
jns
lea
not
and
mov
cs
movsb
in
loop
dec
icebp
xchg
xlat
push
int3
arpl
cld
imul
repnz
test
shl
lock
xchg
pop
ret
and
inc
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shr
scas
es
adc
jle
cmp
dec
fs
xchg
icebp
lahf
inc
push
int3
lret
inc
lods
cmp
cmp
jmp
or
and
lcall
add
fwait
out
leave
sbb
sub
mov
ljmp
or
pusha
and
mov
ret
shlb
stc
fdivrl
mov
stos
inc
xchg
ret
fisubrl
lahf
xlat
mov
fs
inc
push
mov
bound
pop
outsb
lock
insl
jno
outsb
mov
dec
fwait
test
aas
and
dec
push
jg
jne
mov
and
aaa
mov
push
into
fs
adc
mov
movb
xchg
and
mov
inc
clc
test
pusha
js
cmp
inc
jbe
in
jmp
jp
aam
out
add
fldl
popf
lcall
arpl
adc
push
mov
imul
bound
jne
jmp
xchg
jl
fwait
sete
shll
jle
movsb
adc
cmc
lods
and
mov
lods
cmpsb
lahf
out
sub
scas
push
sti
insl
int
std
gs
add
cli
mov
pop
xchg
pop
jae
je
cvtdq2ps
in
lds
or
sub
daa
push
fadds
push
pop
mov
clc
jb
xchg
xor
mov
insb
in
outsb
nop
std
scas
ret
jnp
xchg
dec
mov
rclb
add
push
mov
int
jp
mov
cmp
push
pop
pop
or
mov
mov
pavgb
movsb
pusha
mov
jno
repz
dec
loop
and
sub
jmp
enter
roll
push
or
sbb
lret
or
mov
mov
dec
push
lret
or
in
or
xor
cmp
stos
or
lret
popf
nop
sti
ja
or
xor
daa
stos
clc
imul
outsl
jbe
xor
push
ja
jno
xchg
and
mov
shl
mov
mov
adc
pop
sbb
cmpsb
lcall
add
repnz
fwait
jb
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
xchg
dec
fiadds
jle
cs
jg
ds
aaa
loope
cmpsb
jp
in
test
leave
dec
sub
add
xlat
inc
xchg
adc
cmp
jge
xchg
sub
push
insl
addb
ljmp
or
sub
aas
popf
scas
jnp
out
cli
imul
add
cmc
lods
icebp
cmpsb
jg
xorl
repz
test
test
push
jmp
push
push
aas
xchg
dec
hlt
outsb
dec
push
push
xchg
pop
mov
add
cltd
sbb
jns
shlb
cld
sbb
add
out
loope
ss
dec
mov
je
sbb
test
btl
dec
pop
aaa
pusha
push
negb
and
mov
cmp
xor
lods
orb
repz
add
clc
adc
into
aas
arpl
or
mov
pushl
pop
jecxz
data16
iret
cmp
aad
pop
sbb
mov
adc
pop
shrl
jmp
jmp
das
repnz
xor
jae
adc
mov
adc
pusha
mov
ljmp
xor
pop
and
fcompl
ljmp
fistps
jne
lock
push
aam
gs
les
jne
sub
sbb
mov
ret
cltd
imul
or
xchg
sbb
aam
sbb
mov
xchg
mov
dec
mov
test
fstps
jbe
inc
sub
aaa
push
test
enter
xchg
or
xchg
mov
xor
loope
out
inc
std
lahf
push
or
inc
sti
mov
push
lods
mov
sbb
cmp
mov
xor
push
mov
lock
lea
int
xchg
movsb
shrl
rcl
idivl
push
int3
std
or
addr16
insl
mov
pop
xchg
push
jmp
insl
popa
outsl
fdivr
es
popf
mov
lcall
mov
jnp
push
push
das
mov
mov
sub
fsubrs
jo
jo
lods
and
jmp
pop
mov
cwtl
mov
mov
cmp
mov
cmp
mov
leave
leave
sbb
inc
sbb
mov
clc
cltd
or
shll
jnp
out
add
jp
testl
sbb
or
and
jl
stos
incl
fdivrs
les
test
mov
pop
ljmp
fisubrs
icebp
sub
dec
mov
das
and
mov
sub
adc
jo
pop
jae
subl
fldcw
xlat
cmp
lahf
sbb
sub
mov
enter
idivb
inc
iret
ficoms
pop
adc
sarb
movsl
or
sbb
cld
sbb
dec
repnz
push
mov
mov
lret
leave
loopne
inc
pop
test
mov
enter
pop
mov
divl
jmp
cmpl
jl
sbb
data16
jo
inc
jns
xor
adc
lcall
jb
daa
cmp
mov
and
frstor
test
sub
mov
je
sbb
jg
lret
push
cmp
leave
sub
icebp
adc
xchg
jne
mov
test
mov
stos
aam
jmp
fstps
test
cmp
stos
push
pop
nop
inc
and
fdivs
cmpsb
ret
test
cmc
and
mov
popf
movsb
das
push
add
mov
mov
dec
dec
jmp
test
adc
pushf
ds
test
not
sub
bound
stos
cmp
popa
aas
stc
add
mov
push
mov
xor
jp
mov
push
mov
dec
add
pop
pop
enter
imul
es
int3
add
push
popa
movsb
mov
lods
pop
arpl
outsl
jns
out
xor
pusha
inc
dec
push
cmp
sub
push
jecxz
xchg
leave
adc
popf
ficomps
push
xor
dec
out
add
add
mov
pop
add
push
pop
iret
iret
lret
mov
jecxz
mov
push
imul
imul
xchg
stc
xor
rcl
or
scas
or
test
cmp
nop
repnz
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
push
loop
bound
jle
or
mov
fadds
sahf
shrb
fistpll
cmpsb
cld
fucomip
lock
push
and
fildll
movsb
fstps
arpl
faddp
je
add
stos
test
xor
fstpl
test
xchg
inc
add
cs
adc
cmpsb
sbb
push
mov
mov
data16
ss
jns
test
inc
jl
test
sub
inc
enter
mov
jb
loope
movsb
fwait
cltd
pop
out
xor
imul
sub
outsb
inc
cmc
lret
data16
xor
sub
repz
inc
mov
fwait
lret
push
cmpsl
lods
mov
jmp
sbb
xlat
cli
incb
cmp
repnz
mov
xlat
int3
ret
out
cmp
nop
cltd
mov
sbb
mov
nop
sbb
and
adc
push
lds
test
aad
inc
call
mov
sbb
iret
bound
dec
mov
push
fldt
fimuls
jg
push
sbb
in
dec
sahf
mov
int3
addr16
roll
add
std
xchg
add
inc
jmp
xlat
outsb
in
fs
xchg
dec
sbbl
je
test
pop
cli
test
push
gs
loope
mov
push
xchg
push
and
loopne
mov
pop
lret
cmp
int
pop
daa
shlb
sub
or
nop
std
int3
xchg
adc
lret
mov
xor
in
repz
lods
loop
or
out
outsb
pusha
xor
call
into
xchg
inc
mov
lahf
jmp
push
or
lods
add
nop
movsb
adc
pop
cmc
pop
xorl
dec
cmp
out
inc
cli
or
lahf
loope
rolb
inc
divb
inc
dec
pop
sahf
sbb
lock
cmc
jbe
push
test
sub
jne
push
pop
add
repz
aam
aad
js
je
jne
mov
cld
jecxz
add
adc
ret
sub
push
divl
dec
cli
repnz
adc
rclb
rorl
xchg
jmp
push
std
dec
sahf
push
push
add
subb
jle
jl
jle
add
add
jmp
mov
pop
sub
outsl
aad
mov
mov
dec
lods
mov
fiadds
jg
xor
mov
pop
aad
movsl
ret
addr16
aam
out
xchg
ljmp
or
xor
fsub
inc
adc
pop
scas
push
xlat
sbb
mov
inc
xchg
imul
popa
adc
mov
aad
in
push
nop
lret
pop
popf
dec
lods
adc
pop
mov
cwtl
mov
popf
call
push
enter
call
pop
xchg
in
stos
je
xor
into
mov
movsb
rclb
inc
pop
push
out
mov
and
sub
icebp
popf
xchg
mov
add
mov
adc
xchg
mov
push
or
and
sahf
call
adc
loope
std
call
jg
gs
jge
movsl
add
outsb
imulb
iret
call
xor
notl
pusha
cmp
sub
clc
add
sahf
fnstsw
aaa
adc
sbbb
popa
mov
inc
in
stos
xlat
lret
lds
sarb
xor
adc
enter
imulb
fidivs
pmaxsw
sbb
mov
sbb
mov
ret
mov
or
mov
cs
mov
add
test
aam
jg
mov
adc
ret
lods
out
out
pop
sbbl
or
adc
pop
into
push
pop
dec
loop
jl
lea
ds
push
cmpsl
adc
inc
fisubrl
das
pop
xchg
push
mov
xor
lcall
xor
test
and
or
imull
out
ret
mov
mov
jne
jno
adc
jbe
mov
out
test
xchg
xchg
xor
dec
mov
jne
xchg
push
mov
mov
in
in
pop
push
addr16
xchg
add
fcmovnu
adc
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
mov
mov
cmp
sar
in
cmp
or
fwait
out
mul
test
push
enter
test
ds
jge
pusha
aam
pop
fiadds
loope
lock
dec
inc
inc
mov
jns
jmp
fistpll
vaddpd
sub
fmuls
mov
loopne
lahf
or
pop
int3
xchg
or
cmp
stc
sbb
fld
stos
cmc
dec
aaa
and
ljmp
call
int3
gs
int3
mov
mov
idivb
jge
adc
popf
cltd
idivb
cs
sub
and
out
sahf
push
mov
jl
lret
pop
mov
rol
push
mov
or
jg
flds
inc
loope
aad
mov
push
fwait
cmc
xchg
and
cmp
jge
into
inc
test
adc
inc
dec
and
stos
popf
cmp
data16
inc
cli
fimuls
push
lea
out
mov
sbb
movsl
xchg
repz
repnz
mov
jge
nop
add
mov
mov
xchg
jl
push
mov
js
cwtl
fs
testl
mov
call
cs
cs
popa
mov
popa
cmp
lock
mov
call
push
ret
xchg
mov
cmp
sbb
xor
cmpl
jae
xor
adc
movsl
test
pop
iret
sahf
test
sub
mov
out
adc
arpl
adc
shl
pop
das
std
xor
lods
jbe
lock
or
bnd
sbb
movsb
add
and
cmp
dec
sbb
sub
lds
cmp
inc
cmpsl
out
sub
fstpt
xchg
lds
es
into
dec
jg
mov
out
sahf
mov
ret
cmp
lcall
lds
inc
stos
pop
inc
aas
inc
int3
imul
cmp
repnz
cmovno
out
leave
ret
jg
cmp
or
daa
pop
push
jmp
mov
lea
cmp
mov
insl
mov
int3
in
xchg
xchg
nop
aam
xchg
lret
out
mov
cwtl
dec
test
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
fmuls
dec
mov
jle
cmp
loop
mov
in
dec
xchg
mov
mov
sarl
push
dec
xor
mov
popa
mov
pusha
sub
and
or
jp
cs
mov
into
lods
or
cmc
scas
ret
pop
and
int
push
jle
jo
xchg
xor
cli
mov
fistl
xor
jo
loope
mov
inc
test
adc
fbstp
sub
mov
jb
stos
mov
pop
inc
xchg
loope
cli
push
xchg
rolb
aad
aad
jb
cs
subb
int3
mov
jno
mov
nopl
push
mov
pop
sarb
mov
fimull
sbb
je
ficoms
mov
cmp
sub
or
scas
or
pop
pop
mov
fisubrl
or
inc
push
cmp
pop
jp
fisubs
into
js
mov
lcall
adc
sbb
mov
sub
lahf
cmp
jne
push
mov
sub
cld
filds
sahf
dec
cli
adc
ljmp
or
jg
lods
js
xchg
dec
dec
jle
je
inc
push
scas
sbb
mov
mov
testl
aas
pop
cmp
add
sub
loop
cmc
loopnew
lret
mov
mov
jbe
mov
js
icebp
mov
fdivr
sub
leave
faddp
out
pop
mov
inc
sub
insb
push
lock
pop
mov
fidivs
push
push
adc
sahf
je
ljmp
lret
fs
jge
daa
addl
adc
vcvttps2dq
jne
or
lret
or
cltd
cmp
push
adc
test
orl
cmpsl
clc
addr16
jne
and
and
jp
arpl
lods
push
int3
push
mov
push
popf
insl
outsb
je
into
sub
ror
addr16
int
rcrb
jmp
cmp
into
gs
sub
popa
jp
js
xchg
iret
shlb
inc
or
push
bound
cmc
mov
out
push
cs
push
pop
or
nop
xor
add
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
push
push
lret
jp
jle
jl,pt
jle
jae
jnp
shlb
shrl
adc
incl
int
mov
arpl
adc
je
fnstenv
roll
insb
inc
xchg
lock
mov
js
loope
pop
inc
adc
lods
stc
in
mov
fucomi
loopne
jns
testb
fcmovnu
sbb
jo
dec
loopne
idiv
jle
mov
and
mov
sub
je
push
cmp
lret
mov
jnp
xchg
enter
movsb
or
repz
adc
and
mov
and
jge
subb
jg
jae
push
imul
mov
pop
push
pushf
inc
or
cmpsb
push
sbb
sarl
dec
push
adcb
or
xchg
sbb
call
jge
sar
jp
arpl
mov
faddl
push
mov
inc
mov
pop
mov
outsb
test
rolb
ljmp
lcall
dec
pop
inc
or
and
push
mov
scas
and
mov
or
lahf
push
out
sub
jg
pop
pop
sbb
cld
stos
mov
add
clc
or
xchg
or
std
jb
xchg
orb
mov
scas
adc
add
insb
test
xchg
fs
sarl
inc
or
int
int
pop
mov
enter
repnz
pop
scas
sbb
dec
cmovbe
in
push
add
xor
sbb
dec
push
data16
or
mov
add
sahf
adc
decl
mov
mov
pop
in
imul
insb
mov
mov
dec
mov
inc
fwait
sub
mov
dec
sarb
popf
test
xor
adc
out
push
out
mov
xchg
sahf
mov
sti
jle
ret
mov
in
xchg
out
fs
dec
cld
push
jbe
nop
dec
mov
jo
and
fcomp
stc
dec
pop
mov
fwait
add
add
add
add
adc
movl
add
orl
imul
imul
cmp
nop
jle
jl,pt
jle
xchg
lea
push
enter
mov
and
or
insb
repnz
andl
push
push
cwtl
out
imul
sbb
xchg
or
cmc
ret
jmp
sbb
adcl
dec
jecxz
sub
cli
divb
xchg
inc
mov
push
mov
test
or
insl
jns
pop
adc
test
ljmp
orb
clc
addr16
je
dec
jbe
xchg
fistl
xor
adc
cs
push
repnz
or
stos
in
insb
xchg
xchg
int3
xor
out
sbb
pusha
icebp
cld
fcoml
data16
dec
imul
jne
in
mov
mov
fiaddl
push
sbb
sbb
inc
fistpl
jg
mov
mov
sti
jo
test
sbb
or
push
or
popf
insb
sahf
fwait
mov
mov
pop
sbb
dec
sbb
push
adc
dec
or
cli
in
push
fcompl
repnz
sub
pop
fwait
mov
not
xor
out
or
add
and
xor
gs
jp
fsubl
cmp
xchg
push
mov
cs
cmp
sbb
xchg
sbb
push
sub
pop
mov
mov
pop
int
dec
xlat
mov
pop
sbbb
jno
cmpsb
stos
test
lcall
call
jle
es
mov
jbe
subl
mov
or
imul
das
icebp
aaa
cli
insl
and
jecxz
jo
iret
mov
mov
enter
imul
cmc
mov
mov
xor
mov
and
lret
and
xchg
lahf
ss
xchg
mov
mov
addl
repnz
dec
push
shrb
or
xchg
push
inc
and
in
mov
shl
js
sub
out
sbbl
or
cs
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
lods
repz
or
shll
lahf
inc
loopne
int
shl
jmp
es
mov
cli
aam
test
push
jne
push
sti
stos
add
pop
lret
jno
mov
dec
xchg
push
add
jmp
mov
in
pushf
push
pop
aam
add
xor
mov
out
xor
loop
addr16
ret
stc
fwait
sbb
sub
dec
mov
lret
or
and
jnp
lods
ficompl
mov
imul
pop
cmc
mul
mov
flds
or
adc
shlb
pop
shlb
je
push
dec
imul
out
xor
inc
push
cmp
lea
bound
lods
pop
mov
nop
mov
test
js
push
or
lods
add
cmp
insl
jae
mov
cmpsl
add
push
push
xchg
fsubrs
rcrb
mov
rcr
rclb
das
mov
incl
and
nop
sarl
ja
out
add
jno
or
pushf
aad
jns
jle
inc
push
pop
and
int
loop
ss
dec
xchg
pusha
push
lcall
sbb
insb
ljmp
xchg
add
mov
fsubp
adc
add
enter
sub
pop
inc
sub
shll
inc
push
and
ret
lea
cmpb
lods
xchg
out
iret
scas
dec
push
mov
pop
sub
jmp
jno
or
int3
mov
pop
inc
int3
loope
jg
mov
lods
xlat
repz
inc
cmp
es
pushf
push
jb
xchg
fisubrl
movsl
rcr
cwtl
sub
arpl
fwait
add
pop
add
cmp
sbbb
lret
pop
in
xchg
mov
sub
enter
pop
mov
daa
adc
mov
in
mov
in
push
mov
aam
xor
fisttpl
fs
adc
lock
push
adc
sbb
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
testl
pushf
jle
adc
jle
sbb
lret
and
iret
lret
push
adc
bound
sti
sub
inc
inc
gs
test
mov
push
stos
pop
sub
cmp
sbb
jmp
jb
xlat
xor
fidivrl
popa
inc
cmp
push
mov
scas
jge
test
daa
ljmp
dec
orb
add
jle
mov
adc
jo
push
push
add
push
daa
scas
jmp
mov
les
or
or
loope
inc
mov
pop
daa
outsl
pop
insl
xor
sbb
lret
mov
loope
cmpsl
or
jmp
movsl
adc
in
mov
adc
add
pop
fmuls
sub
ljmp
dec
out
outsb
shlb
adc
xchg
ja
cltd
add
int
addl
push
pop
out
cmp
idivb
clc
pop
lret
ds
mov
jl
jl
xchg
adc
icebp
or
jne
mov
cmp
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
pop
lods
fucomip
pop
popf
jle
adc
jle
imul
notl
xor
les
mov
int
mov
dec
xchg
cld
rclb
xor
call
xor
push
sbb
jb
push
call
mov
stc
or
and
enter
fs
xchg
xor
test
or
sbb
xchg
jecxz
call
pop
cmp
dec
mov
enter
lea
xchg
jle
adc
fdivrs
jge
push
sarl
stc
xor
mov
xchg
mov
lret
popa
cmc
notb
mov
push
stc
or
dec
pop
std
fwait
mov
or
test
jmp
add
stos
pusha
inc
push
aad
insb
fsubl
xor
popf
cmc
out
orb
jno
iret
movsb
iret
sub
out
mov
daa
mov
xchg
out
dec
mov
aaa
mov
test
cmp
dec
aas
shl
and
out
pusha
adc
aad
rcrb
push
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
insb
sbb
jb
jle
adc
jle
cltd
andl
sbbl
cmpsb
das
mov
into
cld
and
xchg
pop
jmp
add
pop
push
jg
mov
mov
dec
out
imul
out
bound
mov
cmc
lods
adc
dec
push
and
mov
adc
pop
adc
fistpll
or
cwtl
roll
aam
adcb
rcr
dec
mov
pop
sub
push
xchg
lcall
adc
leave
movsb
lods
xchg
inc
mov
rcl
daa
pop
cld
cmp
mov
inc
jle
pop
lcall
push
xor
xlat
xchg
aas
and
ds
cmpb
dec
frstor
push
inc
add
pop
flds
jbe
es
ljmp
push
and
movsb
xchg
add
test
and
gs
push
ret
shrl
xor
ror
cmp
add
xor
inc
inc
adc
jae
or
in
mov
sbb
mov
add
addb
jb
ss
sti
mov
cmp
in
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
arpl
pop
fistl
cwtl
jle
adc
jle
xchg
pop
out
movsb
mov
imull
leave
adc
popf
scas
push
or
in
xor
fcomip
adc
stos
pop
inc
fwait
xlat
data16
inc
pop
shlb
jbe
repz
adc
in
test
arpl
pop
jnp
mov
cmp
xor
inc
call
mov
mov
fsts
adcb
or
fwait
mov
sbb
sub
jns
mov
or
adc
nop
jbe
mov
pop
in
mov
aas
pushf
stos
mov
cmp
pop
or
pop
into
inc
mov
mov
in
add
sub
repnz
and
sub
mov
lret
pop
daa
add
push
rcrl
nop
push
xacquire
std
data16
or
mov
xor
xorl
inc
dec
hlt
xor
es
and
enter
loop
or
adc
test
std
das
xor
cmpb
push
std
dec
push
fistpl
stos
adc
hlt
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
jp
mov
cltd
jle
adc
jle
movsb
out
bound
mov
or
add
out
mov
pusha
js
cmp
sbb
test
loopne
xchg
lret
xor
sub
push
jo
pushf
or
stc
add
push
pop
or
ror
repz
loop
dec
ds
icebp
notb
enter
dec
mov
jno,pt
nop
dec
sub
dec
jnp
out
add
or
cmp
fdivs
cmp
popa
add
mov
pusha
mov
cs
push
addr16
arpl
and
xchg
mov
loope
lahf
cltd
pusha
movsl
dec
push
add
cli
adc
jae
jns
les
or
inc
mov
mov
sbb
fs
icebp
scas
cmp
adc
mov
loopne
ret
ljmp
inc
sbb
shl
cltd
jl
pushf
sub
enter
pushf
dec
shrl
push
nop
inc
in
enter
mov
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
sbb
cs
fdivr
test
sub
mov
loop
insb
fimuls
and
push
in
lea
jns
adc
adc
repz
xchg
mov
test
sbb
inc
mov
sbb
jo
rol
xchg
or
das
lahf
xchg
inc
lret
adc
aam
mov
rorl
lcall
xor
or
mov
sbb
cmp
lds
lods
mov
jns
clc
sbb
adc
and
inc
dec
sahf
jo
adc
jae
mov
daa
mov
jmp
mov
sbbb
pop
or
fmull
das
arpl
pop
mov
mov
sbb
cmp
addr16
jo
mov
fistl
dec
jecxz
stos
push
lods
pop
pushf
jmp
jge
fidivrl
cmp
imull
lock
mov
mov
fst
fwait
inc
mov
repz
roll
gs
sbb
and
lret
push
or
imul
ffree
or
xor
lods
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
xchg
popa
sbb
cmpsl
jle
adc
jle
jo
xchg
jnp
iret
in
cwtl
shl
adc
lahf
jbe
inc
mov
loopne
in
lock
xchg
adc
adc
test
ret
and
pop
mov
imul
mov
sub
sti
push
inc
mov
out
data16
fnsave
inc
mov
lock
inc
xlat
inc
iret
test
cmpsb
adc
faddl
sti
or
or
mov
mov
lret
mov
and
push
jp
push
cmp
mov
std
mov
jp
add
sbb
iret
dec
lret
mov
and
int3
sbb
imul
pop
icebp
int3
mov
and
adc
mov
jle
mov
jno
cld
cli
pop
or
addr16
and
sub
fidivs
mov
das
enter
daa
enter
dec
addr16
jl
imul
mov
orb
fidivs
enter
sbb
or
fs
lods
mov
mov
jne
jbe
pop
les
xor
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
push
xchg
jle
cld
bound
mov
cltd
sbb
mov
mov
dec
test
and
sbb
push
sbb
je
xchg
lods
sbb
stos
xor
andb
loope
mov
jg
jns
cli
out
mov
sub
inc
and
push
inc
push
imul
lret
adc
pop
pop
das
loop
dec
cmp
push
enter
or
out
int3
lock
ret
out
jne
cmc
xchg
repnz
fbld
lea
pop
dec
ja
dec
pop
sahf
test
rcll
push
mov
ss
mov
sub
or
pushf
and
iret
mov
gs
sbb
movsl
sub
fnsave
or
sub
shll
jnp
pop
push
inc
jno
mov
out
and
or
xor
add
out
push
push
iret
nop
add
cld
mov
into
sahf
mov
push
and
inc
cmpsl
push
or
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
cmp
lds
jg
jle
mov
fs
pop
inc
add
mov
data16
adc
and
push
cmp
pop
in
sbb
sub
ss
mov
and
mov
mov
dec
sbb
mov
outsl
std
push
push
lea
dec
xor
ret
push
mov
loope
testb
push
scas
inc
pop
push
rcrb
addr16
jmp
pop
mov
push
cld
dec
divl
adc
test
pushf
jb
mov
xchg
or
and
inc
push
push
icebp
dec
lahf
dec
jl
mov
pop
push
jns
mov
stos
adc
rcrb
adc
loop
mov
xchg
sahf
dec
int3
inc
lods
push
orl
ret
in
and
test
inc
adc
aas
rcll
rcrl
imul
pop
imul
jns
lods
mov
xchg
hlt
and
push
xlat
xchg
inc
sub
les
lret
hlt
xor
jle
pop
sti
inc
jo
cmp
test
ja
scas
arpl
mov
sbb
js
pop
mov
icebp
arpl
add
jmp
jl
push
jo
xor
mov
xchg
jb
gs
test
dec
push
or
xlat
cmp
andb
sti
scas
rolb
mov
sub
adc
push
jg
jmp
mov
daa
inc
outsl
inc
orl
add
in
dec
cmp
pop
add
aas
mov
out
loopne
or
push
pop
pop
mov
jge
inc
push
dec
jp
call
cmp
repnz
mov
call
shlb
push
and
xchg
stc
sahf
add
cwtl
ljmp
add
ret
push
aaa
inc
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
inc
imul
int
sti
lea
push
maskmovq
lea
mov
jp
and
jecxz
das
pop
push
mov
jmp
fstl
push
mov
mov
loopne
enter
mov
insl
sbb
scas
mov
fwait
movsb
xor
sub
icebp
mov
or
push
pop
mov
and
sub
mov
pop
scas
adc
jne
inc
cmp
test
cli
into
fdivs
fs
test
mov
add
les
stos
sbb
out
inc
adc
or
adc
div
aad
push
lods
xchg
xchg
divb
sahf
or
popf
mov
in
cwtl
cs
xchg
push
cwtl
fsubrl
enter
aad
jge
enter
mov
mov
lods
in
mov
faddl
call
dec
lahf
int
aaa
test
rcll
dec
int
sbb
packssdw
sbb
in
dec
push
cwtl
aad
and
call
push
in
inc
inc
mov
jbe
out
bound
cmpl
jb
push
adc
flds
cmp
aad
push
mov
pop
cmc
ds
subb
repz
add
or
xor
jle
mov
js
ja
pop
or
mov
push
ret
outsl
bound
cmp
les
cmp
cltd
push
and
shll
mov
es
hlt
dec
scas
clc
outsl
aas
andb
sti
xor
sub
cmp
mov
inc
jno
adc
sbb
sbb
adc
roll
inc
push
test
mov
subb
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
stos
outsb
mov
jle
pop
push
sub
arpl
fxch
push
cmpb
lea
das
jmp
mov
pop
aaa
cmp
mov
loope
inc
cmpsb
and
add
outsl
js
stos
push
jg
push
dec
out
xor
mov
sbb
aas
sub
pop
xor
out
and
test
push
add
jmp
fcom
sub
mov
jns
xor
add
add
aaa
dec
adc
cltd
bound
cli
shlb
stos
lahf
enter
gs
mov
mov
insb
popf
fisubrl
inc
xlat
out
inc
aad
pusha
lea
subl
xchg
mov
out
lods
out
inc
mov
fwait
pop
je
sbb
and
mov
xor
mov
mov
push
shll
cli
mov
cmp
negb
cs
xchg
scas
sub
cmpsl
xchg
out
xor
imul
insb
add
sbb
lods
gs
vmovaps
jo
rclb
subb
or
mov
js
into
rorb
adc
in
mov
lret
push
adc
xchg
dec
pop
aad
push
push
pop
cmp
insb
out
out
test
inc
push
sbb
jnp
or
push
inc
call
in
clc
pop
push
adcl
cmp
jl
aam
cld
lods
cmp
ror
ficoml
push
rorb
jne
inc
clc
and
ljmp
mov
and
fistl
sub
push
or
cwtl
cmpl
mov
imul
push
dec
mov
mov
cli
je
es
add
roll
in
rolb
add
jne
sarb
inc
xchg
les
mov
mov
dec
scas
or
pop
loop
mov
mov
stos
mov
js
mov
pusha
bound
jnp
mov
ficomps
pushf
sub
pop
popf
mov
in
fimull
pop
add
lea
lea
rol
dec
sub
stc
add
dec
aaa
cli
sub
stos
jecxz
lds
lock
stc
subl
mov
inc
fisttps
rorl
xchg
mov
je
test
inc
das
or
fldcw
and
fs
cmp
into
pop
or
inc
push
les
shll
or
sbb
or
roll
jg
mov
mov
mov
jns
jp
push
sub
fisttpll
arpl
push
push
push
jns
aaa
mov
mov
rcrl
out
xchg
shl
push
push
outsb
nop
cmp
pop
out
xor
xor
daa
cmp
add
add
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
fcmovnbe
lods
jle
jl
jle
xor
scas
mov
xchg
push
pop
push
xchg
orl
fxch
dec
sub
cmp
dec
sbb
dec
test
inc
int3
out
jb
adc
stc
insb
loopne
sub
iret
add
test
dec
loope
adc
mov
insb
into
push
les
jp
xor
mov
cmp
mov
push
push
test
ficoml
pusha
dec
aas
in
out
sbb
dec
pop
test
dec
call
sahf
ljmp
fdivrl
sti
call
push
sub
lds
out
or
outsl
cmp
out
mov
test
fisttps
enter
push
sbb
xchg
or
orb
je
inc
cli
fisttps
into
int3
mov
mov
cwtl
out
add
inc
inc
xchg
das
push
xchg
and
push
dec
jmp
dec
gs
mov
les
mov
push
sub
shrb
or
dec
ret
out
addr16
shl
mov
sbb
les
push
lahf
fildll
bound
pcmpgtw
xchg
add
rcrl
or
dec
adc
fnstcw
sbb
clc
popf
pop
dec
andb
jbe
cmp
pop
sarl
mov
fdiv
mov
rolb
shl
sub
jae
mov
shll
in
outsb
xchg
jb
sbb
or
ret
clc
mov
or
shlb
roll
int
push
lods
jns
xor
ss
push
popf
pop
dec
push
popf
cld
outsb
repz
outsb
add
mov
xlat
sbb
adc
add
into
imul
imul
rcrl
imul
pop
addr16
inc
and
aas
insl
in
in
lret
inc
mov
mov
or
ljmp
dec
fs
movsb
add
adc
pop
loope
sbb
out
add
dec
mov
into
lds
scas
cmp
imul
pop
or
mov
mov
mov
testl
mov
fisubs
pop
xchg
push
sub
filds
add
push
imul
xor
push
in
xchg
xorb
arpl
mov
dec
sbb
mov
fsubrs
adc
mov
xlat
pop
dec
xchg
scas
add
ret
dec
out
mov
xchg
arpl
jg
and
in
push
int3
sbb
imul
sbb
or
pop
aam
pusha
mov
mov
dec
mov
aaa
aas
out
out
push
ret
adc
or
fwait
sahf
inc
mov
mov
jo
mov
and
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
jl
stos
jle
jl
jle
jns
inc
sbb
cmpsb
inc
xchg
xchg
inc
dec
lcall
inc
dec
enter
sub
add
testb
adc
les
rclb
mov
add
repnz
es
ja
loope
xlat
or
negb
sbbb
loopne
sub
dec
pop
or
pop
lea
cmpsl
test
pop
icebp
jbe
cmpsb
test
xorl
cmp
ret
or
push
rcll
xchg
push
mov
cmp
inc
sbb
mov
fcomi
call
adc
cmp
dec
xchg
adc
mov
out
shlb
mov
mov
mov
xchg
cmp
pop
sbb
or
pop
outsl
pop
testl
xor
pop
aas
shll
cmpsb
mov
pop
cmp
adc
mov
pop
mov
mov
mov
push
push
push
and
jp
das
mov
mov
bound
cltd
jne
rorb
sarl
roll
in
push
dec
jp
out
outsl
mov
jne
pop
lea
add
add
inc
add
into
sahf
enter
mov
cmp
pushw
aam
popa
ss
mov
or
sub
push
ficoms
mov
test
popf
xchg
ljmp
test
jg
adc
popa
insl
mov
mov
sbb
pop
ss
in
aas
dec
test
and
or
rcll
xor
stos
sbb
insb
iret
sub
adc
mov
test
add
jae
mov
daa
jge
jb
push
add
add
stos
pop
sub
dec
lods
cmpsl
inc
fs
push
repz
or
and
xlat
mov
pop
dec
test
inc
pop
or
cmp
stc
xchg
test
cmp
test
jmp
stos
test
mov
ja
xor
cld
push
mov
neg
fwait
cli
jo
inc
dec
loop
push
adc
fdivr
fnstsw
shll
mov
jnp
lret
mov
leave
cwtl
add
cmp
cmp
outsb
test
shl
popa
imul
push
cltd
fsubs
mov
or
and
fimull
adc
jecxz
and
fsubl
sahf
jno
pop
jae
leave
adc
jne
jp
sahf
insb
icebp
xlat
pop
dec
stos
sub
xor
xor
add
out
ljmp
dec
mov
mov
jg
addr16
mov
in
nop
adc
stos
push
test
imul
test
out
cmp
cmp
sarb
pop
add
call
scas
sbb
leave
push
sub
xchg
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
shlb
sti
shlb
jle
push
adc
sbb
shlb
inc
sub
sub
adcb
jg
cmp
and
mov
xor
notl
mov
or
push
sbb
xor
mov
insb
dec
fbstp
mov
push
adc
rolb
sub
loopne
pushw
inc
pushf
std
mov
bound
add
push
lods
sbb
add
imul
dec
dec
fucom
cmp
xor
cmp
push
loopne
sar
aam
shll
adc
pop
sbb
pop
lock
repz
mov
repz
pop
push
lods
xchg
je
lods
das
in
in
bound
mov
add
mov
mov
xlat
cli
jae
ja
push
dec
in
out
leave
inc
or
repz
and
mov
dec
out
clc
nop
push
push
in
or
sub
hlt
inc
loope
cmpsb
mov
stos
aad
push
pop
and
or
dec
sbb
jp
xchg
aaa
sbbb
cwtl
sbb
jl
jle
cmpsb
ss
lods
or
xor
arpl
mov
dec
add
cmp
pop
lods
inc
sbb
and
pop
lods
int3
out
stos
jb
pop
lods
pop
cmp
xchg
sub
pop
mov
sub
stc
jo
jg
pop
mov
push
pop
mov
stc
or
filds
fisubrs
push
cld
test
pop
push
mov
mov
adc
cmc
aam
out
jl
adc
dec
xchg
pop
mov
aam
mov
jecxz
adc
ljmp
lret
xchg
xchg
je
jne
sbb
js
xlat
adc
dec
fadds
iret
fidivl
test
mov
pop
iret
int
pushf
roll
test
imul
ret
fistpl
jl
xor
add
mov
lcall
push
jmp
sbb
xchg
lahf
mov
jp
cmp
push
mov
call
ss
and
insl
into
inc
pop
sahf
popf
jnp
inc
mov
stos
jmp
sbb
test
xchg
ret
xchg
cwtl
and
sar
hlt
xchg
mov
mov
sbb
enter
jmp
pusha
mov
xor
aam
push
fxam
aam
pushf
outsb
in
cs
fildll
push
jne
inc
cmpsl
mov
nop
cmp
mov
rcrb
mov
sahf
scas
push
xchg
fdivp
repz
pop
dec
test
mov
cmp
push
dec
sbb
jno
out
xor
push
mov
ljmp
mov
popa
mov
xchg
jmp
sbb
pop
push
cmp
cmp
or
jnp
dec
dec
sub
pop
xor
scas
pop
int
inc
pusha
xor
mov
jmp
or
pop
jno
xchg
add
in
fidivs
jle
pop
fidivrs
loopne
cmpsb
mov
xchg
loopne
sbb
lods
orl
fs
icebp
clc
pop
push
sarl
cmpsl
stc
paddd
xchg
add
mov
nop
pop
sbb
jns
add
fdivs
sub
dec
push
or
sub
sarb
inc
dec
pop
out
xor
cs
test
mov
pop
sub
pop
std
fucomip
frstor
xlat
sbb
jecxz
rclb
fs
pop
loopne
lahf
xor
je
xchg
nop
add
outsl
arpl
xchg
fwait
mov
jo
int
mov
pop
jg
inc
push
enter
cs
arpl
outsb
jecxz
subb
arpl
insl
push
int3
in
and
and
add
cmp
xor
cmpsb
mov
loop
and
movhps
push
pop
mov
test
or
gs
fwait
or
pusha
test
fisubrl
fdiv
mov
inc
add
sti
jno
leave
dec
push
pop
inc
xor
jbe
or
jg
xchg
nop
adc
inc
push
pop
daa
mov
xchg
lods
lret
sbb
dec
insb
sbb
outsb
or
fwait
cmp
stc
nop
fimull
and
xchg
dec
clc
enter
in
repz
inc
test
mov
cwtl
dec
sub
jge
setbe
dec
imul
fistpll
out
mov
jb
jge
mov
scas
das
mov
paddw
in
call
insb
add
outsl
sub
xchg
inc
mov
xchg
lahf
je
sbb
stos
sahf
inc
jecxz
inc
jmp
jns
sbb
and
cmp
cli
jne
xchg
test
aam
add
arpl
pop
in
cmp
pop
adc
xchg
mov
adc
test
scas
pushf
mov
adc
mov
lods
loopne
maskmovq
negl
outsl
sbb
out
mov
ljmp
push
cmp
roll
das
jne
adc
jne
mov
je
outsb
popa
pop
inc
hlt
nop
stos
mov
mov
push
mov
rcrl
jecxz
mov
inc
and
jp
int
mov
add
mov
add
aam
push
push
rcrl
sti
mov
add
mov
jnp
push
or
ficoms
xor
cld
aam
sub
cltd
enter
leave
loopne
loope
dec
xchg
jne
mov
push
jbe
sub
nop
fs
pop
shr
jbe
xchg
rol
inc
scas
das
xor
es
sbb
loop
push
pushl
mov
and
call
imul
jnp
sti
sub
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
mov
mov
scas
jl
jle
cmp
push
out
cmpsl
and
push
push
and
sub
ret
aam
push
sbb
ljmp
pop
testl
inc
pop
wbinvd
loopne
popf
or
push
mov
jb
in
stc
mov
icebp
std
arpl
mov
push
mov
pop
ret
loopne
push
add
add
xor
rcr
xor
or
xor
pop
andl
inc
loopne
cmp
cmp
xchg
in
add
jg
sub
out
frstor
cmpsb
mov
js
fmul
inc
lcall
sbb
sbb
loopne
lea
push
mov
cmp
insb
or
dec
test
cmp
xor
leave
and
xor
xchg
mov
pop
jbe
jl
add
rcrl
adcl
popf
sub
and
stc
repnz
sub
cmp
mov
pusha
adc
push
or
test
lock
lahf
dec
popf
and
xchg
addr16
clc
inc
enter
xor
cmp
cmp
lock
and
xchg
sub
jmp
push
repnz
xlat
inc
sub
std
mov
inc
or
out
mov
jae
mov
mov
repz
decb
js
lret
push
es
dec
mov
cmpsl
dec
pop
sbb
dec
mov
xor
sbbl
movsl
addb
mov
cmp
push
pop
leave
cld
jg
jmp
xor
aas
inc
xor
pop
sahf
data16
sub
jg
incb
mov
or
sbb
loope
lock
pop
pop
cmp
out
push
daa
pop
xor
sar
pop
fisttps
xchg
sub
popa
sub
out
cmpsl
mov
jae
pusha
js
dec
push
dec
mov
jmp
dec
xchg
das
aad
je
repnz
scas
out
sub
dec
test
fcomp
repnz
in
in
dec
arpl
mov
int
cs
ret
lods
pop
aad
jp
add
push
push
hlt
outsl
add
mov
inc
aam
jle
inc
pop
jae
cmp
mov
hlt
popf
xchg
icebp
inc
dec
jp
pop
orl
test
push
outsb
sahf
ljmp
ret
mov
fwait
out
adc
mov
imul
out
sbb
adc
xchg
add
pushf
lahf
ja
das
lock
pop
inc
jmp
imul
inc
hlt
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
mov
fldenv
test
xchg
push
fistpll
cmp
dec
fists
sbb
lcall
cmp
push
push
add
shlb
es
pop
loope
or
repnz
xlat
adc
xchg
sub
fnsave
adc
lret
cmp
xor
mov
lret
ret
sub
sbb
lds
jg
adc
inc
or
and
or
mov
fsubs
orb
mov
stos
inc
pop
mov
jp
sbbl
push
inc
push
frstor
jno
data16
xchg
pop
mov
in
add
sbb
icebp
sbb
push
and
push
sub
mov
pop
ja
pop
cli
outsl
scas
scas
mov
or
mov
aad
lods
push
in
xchg
dec
cmp
pop
sbb
push
out
fisttpl
inc
sar
imul
inc
call
push
jbe
lcall
push
fwait
xchg
or
mov
in
push
mov
jo
adc
lods
push
cmp
add
pop
push
aam
sub
dec
dec
sahf
les
test
bound
mov
ds
adc
mov
dec
dec
jmp
or
icebp
add
jno
push
pop
xor
mov
loopne
gs
ja
push
in
mov
push
cmpsb
and
inc
push
lahf
in
flds
lods
jmp
mov
jnp
clc
mov
xchg
xchg
les
pop
mov
and
cmpl
lods
jnp
enter
rcrb
xchg
cld
out
test
cmpsl
pop
mov
xor
loopne
in
fsubr
imul
cmc
lret
cmp
movsb
dec
push
mov
xor
cmpsl
inc
or
ret
leave
enter
add
fbld
insb
inc
jp
cmc
pop
dec
out
sti
or
nop
int
add
xor
mov
mov
cld
jl
cmc
xor
lahf
mov
popf
cmp
and
jns
pop
cmpsl
sbb
adc
push
mov
cmp
jge
mov
outsl
lea
ret
enter
xor
push
sbb
sub
adc
inc
pop
out
push
jmp
dec
inc
xor
mov
jns
pop
mov
insb
sbb
in
xchg
jge
aaa
std
cld
and
es
jl
scas
nop
cltd
pop
sub
or
jmp
add
fdivl
lock
xchg
pop
ret
cmc
mov
jl
jle
adc
icebp
out
mov
mov
data16
push
sbb
gs
sti
out
mov
push
test
call
dec
sahf
cmc
popf
push
jns
clc
fisttpl
out
xlat
or
dec
mov
add
pop
sbb
mov
xchg
jg
inc
dec
adc
jecxz
push
in
imul
popa
sbb
mov
xor
add
lea
xchg
adc
je
mov
and
out
xor
mov
popf
and
push
inc
mov
dec
pop
xor
movsl
rorl
jmp
jmp
fstpl
xchg
cmp
scas
pop
mov
orb
mov
movsb
pop
nop
cltd
insl
add
subb
outsb
rcll
jne,pn
int3
cwtl
jmp
jb
jae
push
adc
ret
push
lods
adc
dec
ss
mov
push
cmp
dec
push
or
int3
xor
in
inc
aaa
mov
lea
or
xor
dec
aam
fidivrs
ret
pop
sub
jbe
mov
push
loope
orl
lods
pusha
hlt
fadd
ljmp
lock
loopne
cli
into
jb
mov
lahf
ja
popa
pusha
sbb
sub
fistpl
mov
pop
sahf
test
insl
movsb
jg
stc
out
xor
mov
pop
repz
cmp
jns
out
push
lds
sahf
ret
xchg
xchg
mov
into
dec
outsl
mov
imul
insl
shlb
js
stc
push
pop
adc
or
mov
add
gs
lds
mov
cmp
push
inc
das
mov
dec
push
loop
adc
add
add
test
pop
bound
hlt
push
cmp
cmpsl
jb
insb
dec
jne
mov
sbb
sbb
mov
jp
jnp
dec
orl
mov
inc
in
negl
and
cmp
push
pop
xor
push
insb
movsb
fistl
push
nop
pushl
lods
shlb
lock
popf
pop
pop
cmpsb
or
frndint
lods
jb
loope
aaa
outsl
or
jo
cmpsl
sub
cs
xor
repz
daa
xor
loope,pt
repnz
pop
xchg
cmp
fidivrl
lods
fdivr
pop
push
call
xchg
xchg
icebp
or
mov
cld
clc
popf
jno
sbb
das
mov
ffree
insl
push
in
jg
and
sbb
add
add
add
push
push
lock
outsb
dec
mov
jmp
jle
scas
jl
jle
adc
dec
mov
push
push
dec
cltd
mov
imul
jnp
sbb
lods
fwait
test
sbb
ljmp
in
pop
testl
cmp
or
frstor
jp
fwait
mov
add
sub
shrb
ret
leave
mov
pop
loopne
cmp
jne
outsb
ss
push
jnp
mov
repz
mov
xorb
mov
add
mov
aad
ljmp
in
adcb
adc
mov
xchg
in
ffree
xchg
xor
sbb
test
sub
dec
adc
lret
mov
mov
push
sbb
shlb
inc
cmpsb
mov
push
pop
sub
les
cld
xor
fsts
adc
or
mov
lahf
jbe
mov
or
xor
aas
incl
stos
testl
mov
pop
js
xchg
pop
xchg
dec
mov
xor
cmp
add
xchg
inc
loope
enter
repnz
pusha
pop
and
and
jmp
mov
clc
cmpsl
arpl
mov
mov
filds
ss
mov
mov
sar
push
mov
cmpsl
cs
sub
sub
int3
inc
mov
and
xlat
mov
lret
sbb
and
push
lods
mov
pop
inc
scas
imul
xchg
int3
jo
jmp
push
leave
add
add
rolb
xchg
push
enter
fs
push
mul
mov
jne
popf
pushf
push
mov
jg
lret
xlat
in
xorb
in
mov
sbb
push
fidivl
xor
ret
mulb
iret
in
pop
jle
jmp
xchg
lods
lods
xor
shrd
testb
sbb
scas
inc
xchg
fisubs
fsqrt
mov
clc
inc
test
sbb
cli
mov
add
and
push
mov
jg
lods
or
mov
fiadds
imul
cmp
push
frndint
pop
or
xchg
mov
testb
daa
aam
arpl
inc
in
push
cmc
jmp
out
lret
and
sti
sbb
push
xor
out
sti
jne
call
lea
xchg
xor
rcrb
mov
mov
and
and
push
scas
loopne
cmp
ds
adc
int3
inc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
sbb
mov
inc
jle
scas
jl
jle
xchg
mov
lret
mov
inc
xor
pop
popf
and
inc
jo
sub
imul
rcrb
xor
outsb
lods
pop
mov
xchg
rol
jbe
std
inc
lods
push
stc
push
inc
push
push
and
punpckhdq
out
cmp
or
cmpsb
faddl
dec
adc
pop
cmp
mov
xlat
addr16
sub
lea
call
xchg
test
mov
in
inc
loop
or
pusha
mov
js
sbb
ficompl
mov
rcrb
sbb
dec
and
and
pop
jecxz
push
stos
lahf
lret
cmpsb
dec
in
dec
mov
adcb
das
mov
add
xor
lret
dec
xor
sub
push
jl
ja
iret
add
fwait
scas
xlat
lret
cmp
push
mov
mov
mov
xchg
xchg
sub
outsb
xor
add
in
or
cmpsb
cmp
enter
sub
jnp
dec
mov
push
mov
and
mov
sahf
jg
icebp
jb
xchg
outsb
fdivr
pop
out
out
std
call
cmp
add
lea
mov
call
call
rcr
pop
int3
push
and
jns
lods
push
out
cmpl
lret
dec
std
test
cwtl
gs
std
push
and
in
das
movhps
jl
inc
add
outsl
sarl
push
xor
leave
or
jmp
inc
xchg
insb
and
imul
out
scas
sbb
pusha
ljmp
aaa
test
sub
shrb
sub
inc
dec
push
enter
stc
in
das
mov
int3
test
sbbl
fsubl
test
cli
movsl
or
filds
repz
dec
sbb
sbb
push
iret
inc
leave
shr
and
or
test
inc
mov
popa
mov
push
and
adcb
sub
rclb
shlb
pop
jne
hlt
into
or
mov
cltd
popa
rcll
dec
lahf
lds
sub
pop
cmp
dec
sbb
lea
dec
push
imul
subb
jmp
or
jb
pop
jmp
adc
subl
pushl
inc
jae
sti
addr16
push
xchg
out
fsubr
push
xchg
fdivrs
dec
and
jae
cmp
mov
enter
js,pt
inc
mov
into
int3
xchg
mov
addl
push
mov
pop
je
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
mov
aas
dec
inc
jle
scas
jl
jle
enter
outsl
or
and
lahf
jns
cmc
movsb
mov
cmpsb
push
and
imul
or
insw
mov
push
loope
dec
mov
shlb
dec
call
loope
or
icebp
fnsave
xchg
sarb
xchg
push
and
in
pop
mov
jno
ljmp
daa
cmp
gs
sbb
adc
sbb
test
clc
sbb
pop
jno
adc
in
sarl
jle
jb
jp
jmp
lea
and
mov
sbb
jb
pop
sub
push
xor
sub
shrl
pop
adc
push
add
ss
jge
inc
loop
sbb
data16
sbb
in
jne
ret
cmpsb
insb
lcall
dec
lods
jne
push
lds
jns
imulb
ffree
or
sbb
jmp
lds
mov
int3
int
push
imul
adc
xor
scas
call
mov
jecxz
call
inc
jg
jns
stc
jl
mov
fimuls
inc
xchg
cmpsb
mov
repnz
inc
pushf
cmp
or
pop
pop
repnz
pop
push
popa
fidivs
and
mov
xchg
and
dec
outsb
test
adc
pop
loope
pop
popa
sbb
in
xchg
je,pn
adc
xchg
jb
negl
repz
in
mov
adc
scas
pop
mov
add
mov
mov
adc
mov
mov
mov
icebp
ljmp
sbb
pop
std
into
add
inc
xchg
lahf
xor
data16
or
mov
sub
adc
stos
xor
pop
push
ret
notb
xor
dec
inc
xlat
xchg
ret
push
lock
add
rcrl
out
inc
cmp
adc
xchg
ss
push
loope
xor
cld
add
cmpsl
stos
rol
test
outsb
fsubrl
push
push
mov
jmp
and
ljmp
lds
mov
pop
xor
cmp
mov
insb
addr16
idiv
cmc
mov
fidivs
and
jnp
xor
xchg
hlt
jnp
jg
lock
stos
sbb
xchg
faddl
sarb
push
and
rorl
js
jb
bound
shrl
scas
fwait
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
fdivrl
ret
jle
movsb
jg
jle
insb
ljmp
push
mov
stc
or
jle
dec
or
loop
dec
xchg
mov
jne
cmpsb
pop
jl
or
outsb
loop
mov
mov
or
cmp
xchg
jo
add
cli
pop
repz
dec
iret
pop
lahf
ficoml
inc
les
sbb
xchg
xor
sbb
pop
arpl
shrb
dec
adc
lods
addr16
mov
push
and
sub
arpl
cli
cli
repnz
pop
out
out
fcmovnb
xchg
inc
cmp
imul
pop
pop
push
adc
adc
jg
pop
je
stos
shl
sub
jae
or
out
add
pop
into
pop
out
das
rcr
sarl
push
adc
leave
mov
cmp
std
mov
xlat
xchg
out
mov
inc
mov
push
iret
cli
cmp
or
inc
fisttps
int3
fiadds
mov
pop
out
jns
rorl
pop
sbb
mov
cmp
cmp
jae
push
mov
cmp
jno
dec
dec
movsb
and
sbb
lea
sbbl
mov
lea
jbe
add
testl
es
adc
scas
test
movb
sub
decb
insl
imul
lods
mov
test
das
addr16
xor
mov
lret
loop
mov
out
xchg
rcll
push
orl
inc
sbb
lods
push
int3
mov
inc
or
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
inc
ds
jle
jg
jle
inc
sbb
jo
rclb
imul
sar
mov
out
add
xchg
jecxz
jg
pop
sub
fwait
and
into
js
inc
adc
std
jne
imul
push
mov
or
cmp
test
push
imul
lcall
xor
out
std
hlt
push
pusha
dec
xor
enter
sub
mov
mov
and
cmp
clc
dec
jne
scas
sub
xchg
mov
pop
cmp
in
push
push
cld
mov
mov
sub
int3
into
cli
push
xorl
lock
mov
pop
pop
scas
jge
std
lahf
lods
mov
xor
aaa
pop
in
xchg
iret
sbb
jge
or
mov
dec
mov
xchg
xorl
sbb
xchg
mov
or
out
xchg
stos
inc
call
sbb
dec
xchg
xchg
mov
adc
or
push
in
jge
bnd
pusha
push
adc
xchg
shrl
push
addb
out
push
test
call
js
jae
push
gs
cmc
fisttps
inc
adc
rorb
mov
jle
xor
adc
ss
out
shll
addl
sbb
in
outsb
jne
cld
jno
inc
imul
jl
inc
mov
or
or
outsl
aam
inc
adc
mov
jnp
jnp,pn
push
inc
mov
shll
add
mov
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
nop
incb
add
roll
inc
sub
jnp
cmp
jl,pt
in
rorb
mov
hlt
popa
mov
shl
out
jp
insb
sbbb
jge
xor
lea
mov
mov
inc
pop
push
jle
or
je
and
cmpsb
push
roll
sbbb
xor
aam
insl
mov
jnp
inc
xchg
fdivs
outsl
push
lcall
xchg
or
xor
jno
add
les
ja
mov
leave
out
xlat
sub
outsl
add
fistpll
imul
gs
das
iret
xor
fldl
fsubrs
in
stc
pop
ret
push
adc
fsubl
scas
cmpl
cmp
fisubl
test
hlt
or
ds
or
pop
mov
adc
not
leave
inc
inc
repz
push
dec
dec
push
test
sahf
inc
jno
mov
xchg
fwait
scas
ret
xchg
mov
ljmp
adc
add
add
push
pusha
in
jle
lcall
out
loope
add
add
jl
movsb
xchg
mov
mov
sub
inc
fdivs
fs
cwtl
stc
fst
ss
je
jo
pop
stos
jns
int
scas
dec
outsl
inc
mov
imul
cld
xlat
cmpsb
jle
lahf
pop
and
imull
jl
xchg
cld
or
lea
adc
inc
faddp
or
ds
mov
add
sbb
cld
out
or
dec
repnz
ljmp
xchg
push
jae
aam
adcb
dec
sub
cmpsl
xchg
pop
aas
fsubs
jb
fidivrs
jnp
lods
mov
out
syscall
sbb
sbb
fcompl
cmp
inc
mov
push
fsubrs
mov
pusha
xlat
xor
hlt
sub
repz
imul
in
inc
sbb
popf
adc
cli
xchg
lahf
std
int
leave
inc
jno
cmp
ja
jle
mov
jl
mov
add
add
adc
mov
mov
push
lods
cmp
out
add
add
add
sub
sbb
add
pop
xchg
cld
inc
and
aas
fs
loope
dec
pop
xor
inc
notb
cwtl
cld
xor
daa
xor
sti
inc
push
mov
pop
add
mov
mov
ds
or
out
push
mov
loop
sub
cmp
mulb
jmp
in
inc
adc
jno
push
add
mov
jb
rorb
fcompl
call
aas
dec
add
aam
jmp
loopne
lock
xchg
int3
and
dec
push
lock
dec
pop
lahf
pop
movsl
xchg
iret
mov
adc
sub
loopne
mov
cli
lcall
inc
ljmp
lcall
dec
pop
loope
and
ret
xor
push
sbb
inc
mov
rol
subl
mov
clc
pop
jbe
iret
xchg
cmc
test
add
add
subl
roll
arpl
add
add
inc
aad
mov
jle
push
movl
sahf
mov
sbb
and
sbb
cmp
mov
inc
lock
pop
imul
cli
addr16
fwait
mov
scas
jle
and
fisttpl
mov
jmp
push
mov
idivb
loop
jp
sbb
in
lods
and
out
sbb
xorb
jns
fwait
sub
xchg
int
inc
adc
adc
push
inc
movsb
cmp
lret
outsl
sahf
mov
sbb
cmp
ret
int3
test
add
push
jo
mov
xchg
sarl
cltd
dec
cwtl
ds
pop
and
inc
movsl
mov
popa
hlt
xlat
dec
jno
inc
enter
cmp
test
shl
mov
push
mul
jb
mov
mov
xor
rorb
sbb
nop
loop
testl
mov
jb
push
jae
ja
arpl
add
inc
or
pop
dec
or
cmp
add
cmp
fdivr
fdecstp
or
insl
out
test
adc
ret
dec
es
loope
cmpsl
popf
or
cwtl
xor
sub
xorb
xchg
lahf
stos
fldcw
stos
test
sub
insl
xor
push
mov
or
ja
es
in
test
sub
in
aam
out
test
dec
arpl
mov
cltd
cmpsb
nop
sub
shll
in
fadd
pop
push
scas
test
cs
aam
cmp
fcmovu
xor
inc
imulb
xchg
xor
jecxz
in
xchg
mov
nop
mov
and
shll
adc
cli
xor
add
out
sub
dec
in
dec
fprem1
dec
and
push
dec
push
test
movhps
test
jge
fdivs
sbb
testl
push
std
add
add
cmc
insl
cmc
out
lcall
enter
jne
pusha
cmc
add
add
and
adc
mov
es
mov
sbb
movsb
aas
dec
stos
lock
mov
xchg
jns
push
inc
or
mov
jno
into
sbb
nop
into
lods
mov
add
mov
inc
jl
arpl
adc
cwtl
clc
jmp
cmpsl
jo
mov
das
pop
dec
icebp
imul
ja
rorl
les
sbb
test
dec
mov
ja
mov
mov
lock
lods
imul
lds
add
shrb
aas
rcrb
hlt
push
sbb
xor
mov
je
pusha
and
mov
add
das
adc
jo
pop
subb
hlt
dec
hlt
mov
lcall
pop
test
mov
mov
add
xlat
or
xor
xchg
sub
imul
inc
ljmp
xchg
subl
add
jle
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
push
mov
adc
xchg
arpl
or
ja
stc
and
mov
sbb
out
scas
adc
rorb
lea
xor
addr16
cmc
mov
je
nop
int3
or
cmp
jecxz
mov
call
fmull
and
and
in
stc
dec
les
incl
jle
jb
sbb
or
enter
mov
pop
lods
jnp
insb
jae
cmp
dec
inc
push
push
je
test
jno
pop
xor
jae
jbe
negb
add
dec
adc
add
jl
fcmovne
inc
lahf
jbe
mov
mov
adc
pop
push
add
cmpb
in
add
out
fmuls
mov
andb
clc
add
mov
loopne
inc
xchg
std
loope
sahf
sbb
shrl
je
adc
pop
adc
clc
or
jb
add
inc
dec
lods
xchg
inc
out
fcoml
shlb
add
add
jle
and
scas
sti
jle
pop
push
pop
mov
ja
fadds
add
mov
push
out
mov
xchg
lock
ss
inc
jo
cmpsl
and
arpl
movsl
into
int
push
or
push
cmp
nop
pop
mov
dec
push
dec
loop
adc
sub
pop
out
stc
mov
push
inc
into
les
mov
out
xchg
loopne
and
das
mov
dec
shl
imul
movsl
xor
dec
dec
or
stos
xchg
shl
enter
aas
shl
cld
and
mov
adc
or
andl
cmovge
dec
dec
sahf
xor
fistpl
push
push
je
nop
cmp
lock
shrb
ret
pusha
sbb
repz
cmp
aaa
ds
test
out
mov
daa
movsb
sarl
adc
loopne
test
mov
js
out
xorb
imul
fstpt
lock
mov
add
negl
arpl
fiaddl
add
xchg
pop
mov
push
or
adc
int
xlat
inc
aas
dec
or
sbb
xor
je
in
jns
mov
pop
stos
mov
in
fwait
mov
xchg
mov
pop
fwait
adc
pop
ljmp
notl
neg
inc
push
loop
sbb
mov
int
test
inc
mov
loopne
lock
loope
cli
mov
bound
push
pop
mov
leave
fisubs
fs
mov
jns
dec
mov
mov
push
sbb
cmp
mov
pop
cmp
xchg
jnp
cmpsl
lds
test
dec
dec
sahf
out
xchg
iret
shrb
push
pop
mov
dec
into
adc
push
fwait
les
cwtl
push
in
sub
mov
or
dec
ror
sbb
sub
sarl
mov
add
add
push
jl
jle
insb
out
adc
sbb
or
add
add
sbb
dec
jmp
mov
push
add
jl
test
lea
jbe
sbb
or
xchg
ljmp
push
repnz
mov
int3
mov
cmpl
push
std
ds
mov
or
and
dec
cmp
shl
imul
scas
xchg
int
sahf
popa
in
xor
shrb
xchg
jge
inc
mov
mov
fwait
iret
sub
cwtl
mov
in
addr16
or
mov
shl
push
pop
inc
or
pop
popa
leave
add
hlt
js
rorb
mov
push
repz
popa
hlt
xchg
popa
pushf
xchg
xchg
ss
mov
mov
mov
inc
inc
or
jmp
into
cmp
cmp
sub
sub
add
inc
je
in
inc
inc
adc
fldenv
leave
dec
add
add
fwait
mov
in
xor
adc
push
faddl
add
mov
add
shll
sbb
jne
or
inc
mov
dec
push
xor
setp
pushf
inc
xor
mov
cmp
jnp
clc
add
js
leave
sub
popa
flds
and
cli
jno
push
xor
fstpl
ljmp
push
inc
mov
andb
xchg
out
std
mov
or
aas
fcmove
pop
mov
xchg
cmp
jae
je
mov
sub
jle
test
sbb
and
xchg
daa
or
inc
jae
out
ret
push
lds
popf
pusha
dec
mov
nop
add
xorl
inc
xor
lret
xchg
jb
lods
bswap
pop
jnp
xor
dec
fxtract
aaa
ret
jo
cmp
cmp
shrb
bound
pop
inc
mov
add
lcall
or
dec
or
jg
add
aaa
data16
jne
mov
lcall
add
add
sbb
push
dec
pop
dec
inc
pop
cs
stc
in
pop
popa
idivb
pop
ret
push
loope
orl
add
mov
sbb
push
mov
pop
aaa
lods
pop
or
ds
fimull
inc
sbb
loope
mov
or
mov
cs
and
jmp
in
in
xchg
push
scas
loopne
cmp
aam
int
cmp
aas
mov
push
pop
jg
repz
cmp
negb
cmp
sbbb
out
mov
pop
cmp
leave
adc
gs
push
or
dec
pop
stc
lock
inc
out
popa
inc
lret
adc
imulb
leave
les
push
xchg
and
shrl
icebp
adc
and
or
mov
dec
fcmovnbe
push
frstor
cltd
ret
xchg
push
mov
sub
push
roll
add
add
jnp
sti
xchg
lahf
mov
imull
add
push
outsb
mov
push
dec
mov
sub
rorb
notb
cmp
xor
lret
pop
aam
rolb
aam
test
cmp
shlb
mov
movsb
orl
mov
js
scas
imul
arpl
fsubp
push
jb
push
arpl
mov
jb
mov
push
fildll
scas
rcl
fstl
out
jbe
mov
mov
mov
xchg
gs
mov
mov
notb
lret
mov
out
pop
sbb
loop
js
cs
lcall
movsb
jb
popf
cmp
push
cmp
insb
push
sbb
lods
pop
sbb
dec
or
nop
out
mov
jmp
xor
repnz
fnsetpm(287
pop
xchg
lods
das
mov
jmp
jmp
loop
xor
std
in
add
add
pop
sarl
mov
sbb
add
add
lds
rol
adc
idiv
ror
add
sahf
mov
push
hlt
sbb
fcmovb
fnsave
add
push
sbb
divb
pop
pop
cmp
mov
inc
sub
es
fcomip
ss
sub
jge
and
ja
fisubrs
jno
int
dec
xlat
push
in
das
jae
fisttpl
jge
andb
xor
arpl
sub
cwtl
pop
jne
mov
cmpsb
fisubl
loop
xor
push
out
fldenv
mov
test
jp
in
cs
fbstp
les
mov
sbb
mov
adc
sub
jge
push
xor
jmp
xchg
shll
cmp
sub
rolb
or
fimull
ljmp
sarb
fwait
cmpb
adc
jmp
ds
in
push
mov
fildl
test
in
jae
xor
or
rcll
jecxz
pop
add
add
repz
std
repz
loopne
mov
add
adc
lea
xchg
xor
jb
mov
inc
inc
imul
mov
lods
dec
leave
fs
add
mov
or
nop
aam
and
and
lods
sbb
lods
xor
mov
xor
stos
scas
ret
or
xchg
mov
mov
push
pop
mov
and
lret
stc
mov
push
push
pop
pop
mov
adc
mov
mov
pushf
or
mov
and
icebp
cld
lods
fs
dec
adc
leave
pop
mov
mov
sub
xlat
mov
insl
xor
mulb
dec
les
loopne
std
fisubrs
sbb
mov
out
push
dec
leave
imul
je
roll
sarl
outsl
leave
adc
mov
cmp
mov
stc
std
stos
stos
mov
cs
dec
jb
add
enter
mov
adc
fcoml
fwait
pop
into
sbb
repz
add
in
sub
cmp
arpl
je
inc
or
loope
add
insl
repz
pop
xchg
adc
jae
mov
sbb
and
es
js
xabort
stc
mov
sarl
cld
push
cmp
mov
in
or
repz
adc
mov
shrb
xorl
iret
out
leave
pop
mov
mov
pop
fmuls
mov
mov
clc
adc
push
das
inc
xchg
jle
fsts
inc
mov
dec
and
dec
push
movsl
xchg
loopne
ljmp
xor
enter
jns
gs
jb
cbtw
stos
stos
sub
mov
data16
stc
out
jns
push
xchg
out
mov
mov
or
add
mov
mov
dec
mov
sub
shr
mov
daa
neg
outsl
bound
jb
enter
jo
lret
add
push
push
insl
out
cmp
imul
add
mov
mov
call
loop
add
imul
ret
xor
pop
in
mov
jle
ss
inc
mov
mov
mov
imulb
pusha
mov
fcomps
out
cmp
out
ret
jae
inc
inc
in
adc
mov
sub
jno
adc
mov
jb
inc
xor
jo
stc
data16
push
fistpll
sub
cmp
mov
add
adc
dec
inc
adc
bound
jecxz
sbb
cmp
lret
cwtl
rcll
stos
sbb
enter
clc
test
and
mov
sbb
pop
jl
clc
shll
orl
lret
int
sub
je
or
daa
pop
and
mov
and
mov
pmaxsw
ficoml
and
cltd
rol
insl
fnop
test
aad
jg
pop
iret
xchg
jmp
sub
lds
adc
cli
idiv
push
sti
add
add
xchg
in
mov
incl
sarl
pop
cld
xor
add
add
xchg
ss
fst
dec
insb
int3
sbb
push
mov
jp
dec
sbbl
retw
subb
int3
push
aaa
rclb
outsb
jbe
hlt
mov
mov
es
cmp
and
or
dec
lock
les
mov
stos
adc
xlat
pushf
and
dec
rcr
hlt
repnz
push
icebp
ds
adc
mov
mov
lea
dec
mov
add
sbb
inc
out
dec
xchg
scas
pop
sub
cmp
in
mov
add
jns
push
in
mov
add
or
adc
mov
pop
mov
xor
cld
subb
insl
sub
stos
sbb
sub
scas
pop
test
in
data16
jge
ret
cmc
test
mov
movsb
loope
xchg
add
add
sub
in
negl
sub
movsb
dec
push
xchg
ss
add
xchg
cmpsl
icebp
sub
add
call
mov
adc
mov
jne
insb
fisubrl
clc
mov
pop
add
sub
mov
xchg
fcoms
adc
mov
cmpsb
ljmp
mov
push
out
dec
stc
nop
pop
mov
movsb
inc
mov
sbb
dec
clc
imul
adcl
test
lods
cmpsb
or
out
adc
rol
std
push
jecxz
pop
inc
sti
xchg
rorl
or
jl
lahf
shll
pop
jmp
adc
and
test
lret
fnsave
mov
mov
or
pop
cltd
and
push
inc
iret
push
dec
push
test
lods
push
jo
or
dec
mov
arpl
loopne
push
jbe
and
mov
push
outsb
enter
ja
sbb
nop
pop
xor
clc
test
jno
lock
ljmp
add
fistpll
stc
dec
push
fcompl
in
add
sub
sarl
int
arpl
jae
aam
jle
mov
out
sub
sub
add
xchg
and
or
dec
js
fiadds
push
mov
jecxz
push
dec
scas
in
adc
pop
mov
call
jbe
in
mov
rclb
fsubs
inc
sub
cltd
or
bound
stc
dec
mov
sarb
or
imul
xlat
jno
iret
lods
outsb
lcall
mov
sub
lds
adc
jmp
pop
jecxz
imul
pop
scas
adc
xchg
lahf
mov
jmp
push
out
repnz
rorl
inc
into
jg
ret
or
xchg
xchg
int3
mov
add
adc
lds
mov
imul
popa
sbbl
pop
mov
inc
ljmp
dec
lret
jae
add
add
adc
push
push
push
mov
add
add
add
ficomps
xorb
psubusb
add
sub
lret
ljmp
mov
sar
cmp
fdivs
ds
xlat
mov
cmp
fucom
scas
jo
push
pop
add
rorl
and
and
lock
cmpsl
lret
push
fistl
mov
fcomps
add
out
in
nop
shlb
mov
das
pop
dec
xor
sbb
pop
adc
in
mov
call
insl
mov
movsl
cmp
movsb
std
sub
xor
jnp
push
push
lea
add
xchg
mov
scas
outsb
jl
pop
mov
mov
push
pop
scas
pop
and
roll
into
mov
xor
popa
jo
lcall
mov
xor
mov
stc
sub
xchg
cltd
push
and
mov
test
out
aas
mov
add
repnz
add
pop
lcall
les
dec
aas
addl
add
stos
sbb
sbb
sti
pop
mov
movsb
ds
add
jge
xchg
repz
pop
out
xor
inc
cmp
and
pushf
mov
gs
jne
icebp
popf
test
negl
loope
inc
addr16
pop
pushf
aas
test
std
std
pmullw
insb
push
shl
ja
clc
mov
insl
jo
pop
rcrl
pop
cltd
aas
in
aaa
pop
cli
inc
add
mov
lds
sbb
pop
mov
jmp
mov
pushf
or
jno
cmp
je
lahf
xor
inc
loopne
mov
mov
xor
in
in
mov
push
leave
push
or
lret
scas
pop
mov
out
push
aad
pop
rorl
lahf
daa
out
mov
add
and
jo
mov
push
cwtl
add
push
fdivl
fstpl
cld
xor
adc
out
inc
add
add
mov
push
decl
adc
mov
add
int
add
mov
pop
lods
xchg
notb
pop
sbb
xor
cmpl
add
pop
mov
lcall
int3
addr16
or
mov
imul
xchg
shlb
cmc
cli
xchg
dec
imul
in
arpl
fnstcw
test
dec
addr16
loopne
push
or
inc
xchg
push
dec
sub
xchg
xlat
sbb
cmp
xlat
mov
inc
pushf
dec
xchg
popf
pop
mov
mov
mov
loope
inc
xlat
pop
scas
std
add
xor
or
add
je
pop
sub
xchg
adc
stos
pusha
xchg
sbbb
insl
dec
mov
sbb
jno
es
jae
jb
sbb
xor
dec
repz
adc
sahf
sbb
fs
push
xchg
iret
loop
jmp
xlat
dec
cmpsl
push
mov
sub
and
out
or
mov
cmp
add
add
jmp
in
push
sub
mov
jmp
add
cld
fnstsw
mov
push
push
mov
jge
lods
push
and
insl
stos
xchg
negl
mulb
movsb
fdivr
movsb
movsl
push
enter
call
pusha
cmpsb
xor
dec
xor
cltd
ds
and
sbb
stc
xor
out
sub
nop
sbb
andl
lahf
push
push
push
adc
xlat
scas
pop
inc
and
cmp
int3
cli
cmp
popf
idiv
stos
jge
lds
lret
sti
dec
add
test
mov
mov
mov
std
jmp
js
or
xchg
or
jle
xorb
es
fdivrs
call
stos
cltd
xchg
out
or
adc
sahf
nop
repz
shlb
xor
int3
mov
adc
sub
xor
push
cmp
rcll
pop
adc
adc
fsts
or
pop
out
lret
pop
add
add
outsb
xor
mov
lcall
ljmp
bswap
dec
outsl
loopne
std
iret
sub
scas
xchg
jnp
and
push
stos
jle
jecxz
mov
pop
decl
aad
cmp
call
lahf
add
repz
test
inc
or
enter
shll
pop
rorb
iret
inc
scas
mov
or
stc
cmp
les
test
rcl
aaa
scas
sbb
dec
lods
jno
das
fs
pop
test
xchg
dec
cld
orb
dec
xchg
mov
fdivl
mov
ficompl
sub
jl
mov
shrb
sub
inc
add
sub
nop
insl
in
les
push
pop
sub
repnz
cwtl
divl
test
or
mov
cwtl
into
hlt
add
outsb
mov
jno
pmuludq
and
jae
pushf
dec
pop
mul
mov
mov
cmp
dec
popf
push
ds
fadd
mov
cmc
nop
scas
add
xchg
add
add
inc
ror
lock
jnp
xor
xchg
jge
insl
ret
add
add
inc
push
lds
sbb
add
shlb
aaa
mov
dec
pop
fcoml
lock
repnz
xchg
sahf
xlat
das
js
xchg
rol
xchg
ja
push
hlt
scas
js
and
repnz
ds
sub
pusha
sti
scas
ljmp
sub
rorl
mov
and
ficoms
mov
sbb
insb
dec
push
push
shrb
sbb
mov
xor
mov
mov
loope
add
sub
nop
mov
jmp
or
js
outsl
sub
sbb
and
pop
call
sub
out
xchg
push
push
push
jae
and
pop
cmp
int
inc
rclb
pushf
test
nop
add
out
push
imulb
sbb
add
mov
sbb
mov
cli
jg
pop
test
sub
outsl
mul
jns
rclb
mov
mov
add
and
repz
fisubs
pop
in
add
add
push
into
stc
push
fsubr
sahf
shrb
cs
push
sub
and
xlat
mov
orl
or
dec
xchg
inc
sbbl
pop
loopne
clc
pop
and
sbb
sub
leave
js
icebp
out
inc
mov
cmp
fcoms
xor
jb
and
pop
in
sahf
clc
enter
cmpsb
lret
push
sub
pop
lret
mov
mov
jnp
dec
mov
or
out
jbe
int3
sbb
push
out
shlb
into
out
mov
push
sbb
test
subl
mov
jns
lcall
mov
mov
imul
sbb
lret
push
push
into
ss
popa
push
and
fisubrs
inc
in
cmp
mov
mov
roll
insb
daa
add
add
mov
imul
rcr
aad
push
adc
pop
movsl
jecxz
xor
add
out
sbb
adc
fldenv
add
add
notb
push
aad
pop
clc
imul
shll
jp
sub
adc
xchg
fstps
xchg
mov
and
sbb
and
xchg
mov
pop
dec
shrb
fwait
dec
jp
sbb
mov
mov
dec
je
imul
sahf
in
lret
mov
sbb
mov
movsl
push
shrl
xchg
jl
adc
dec
adc
lock
push
mov
push
mov
cmp
rorb
clc
mov
cmpl
dec
gs
jmp
cmp
inc
cmpsl
push
rclb
xchg
out
psubq
mov
xor
inc
popa
leave
or
lahf
stos
sub
and
sub
lret
inc
mov
and
leave
insl
cmpl
mov
sbb
fsts
jns
mov
mov
xor
cmp
in
xchg
cs
xchg
cmp
add
shrl
cmc
scas
sub
mov
push
add
add
es
in
aam
scas
add
mov
sub
or
adc
aaa
adc
and
fucomp
in
lods
xchg
les
dec
ss
xchg
cmp
gs
cli
jb
xchg
imul
out
out
push
xor
icebp
push
dec
in
jnp
adc
pop
sub
pop
bound
je
jge
nop
jno
cld
push
lods
cltd
sbb
inc
mov
scas
cmp
xchg
sub
mov
and
xchg
jge
scas
insl
jo
decl
inc
cmp
outsb
sub
pop
mov
js
sbb
mov
rclb
adc
arpl
mov
cmp
xchg
js
add
push
jnp
sarb
jnp
mov
les
icebp
into
xor
fs
inc
or
xor
xor
sub
clc
pop
and
lret
pusha
rorb
cmpsb
mov
andl
add
jne
jecxz
mov
pop
pop
fs
imul
popa
pop
jnp
mov
adc
arpl
pop
cs
in
in
pop
lods
mov
in
lea
ror
jge
xchg
add
insl
xchg
xchg
cmp
pop
inc
sub
mov
popa
xchg
add
fs
jl
lret
or
push
sub
jp
dec
sub
jae
fbld
adc
aas
add
xor
inc
or
mov
fnsave
stos
js
mov
movsl
aas
loopne
scas
mov
sbb
test
xchg
push
and
movsb
loopew
pushf
fdivrp
out
sub
stos
cltd
mov
adc
cwtl
inc
mov
imul
cmpsb
xor
xchg
cmpsl
cmc
jge
addl
into
inc
lea
add
sti
xchg
fidivs
mov
leave
mov
adc
enter
in
mov
push
cli
testl
add
gs
testl
push
add
add
into
cmp
xchg
fnstenv
insl
lret
and
fisubrs
out
mov
jg
inc
mov
testb
jl
cmp
out
mov
dec
rcrb
mov
mov
or
sub
jno
ret
mov
addb
cmp
mov
and
xor
out
mov
mov
xchg
hlt
filds
ret
mov
add
ror
into
xor
pop
sbb
hlt
repnz
sub
mov
es
and
push
outsl
cmc
shl
ss
in
pop
sbb
or
lret
adc
jno
push
jmp
inc
fcoml
nop
ljmp
xchg
jne
pop
jbe
push
mov
nop
mov
mov
mov
inc
pop
das
xchg
fadd
cmp
es
and
sbb
cmc
push
sahf
pop
cld
lret
mov
mov
shrb
and
daa
lahf
mov
pop
das
jo
or
icebp
add
add
jl
sarl
inc
mov
jmp
cwtl
fiadds
movsl
push
je
jl
arpl
lds
push
xor
arpl
jecxz
pop
and
lock
and
add
sub
cmp
sub
in
mov
cli
jp
subl
fists
popf
mov
out
lret
daa
popf
cwtl
je
xor
xor
push
inc
sbb
les
cmp
ja
into
mov
inc
test
xor
pop
mov
inc
mov
cld
jae
movsl
or
cmc
cmpl
pop
pop
aaa
pop
xchg
jmp
adc
aam
adc
inc
dec
inc
pop
outsb
scas
pop
dec
hlt
insl
inc
and
push
pusha
and
out
les
and
mov
fistpl
out
mov
jge
gs
jecxz
pop
xorl
or
inc
push
shll
adc
lea
fwait
add
add
fucomi
xor
inc
idivb
add
and
out
mov
fistpll
jg
les
shlb
cmp
mov
and
shl
add
ret
mov
lods
xlat
cmp
fldl
fdivs
adc
nop
mov
and
out
in
xor
aam
dec
fdivl
jmp
and
insl
decl
xor
sub
jg
imul
dec
jmp
xchg
aad
fisubrl
testl
rolb
mov
je
std
sbb
arpl
lods
aas
out
fs
and
dec
fildl
inc
mov
pop
imul
mov
popa
in
arpl
mov
mov
xchg
xchg
mov
pop
std
leave
cmp
adc
pop
aam
lret
jae
jnp
adc
push
add
inc
test
les
imul
into
pop
jno
inc
movb
adcl
add
jbe
push
inc
pop
jns
aas
loopne
sub
xor
mov
repz
add
cmpsb
add
fwait
add
setnp
cmp
daa
loope
sbb
cltd
fs
mov
stc
std
xchg
inc
mov
jnp
jae
pop
mov
fisubrl
ljmp
in
dec
je
hlt
mov
push
into
adc
mov
ret
lock
shlb
inc
xlat
lods
int3
movsb
mov
popa
fldcw
sbb
sbb
paddw
cli
jnp
sub
xchg
pop
mov
jle
stos
pop
dec
jge
push
or
pop
mov
mov
into
add
push
lret
add
mov
jmp
jbe
mov
ss
lahf
aam
xor
rcrb
les
push
pop
xor
adc
jns
adc
cmp
adc
pop
mov
jns
pop
scas
jbe
test
pusha
lcall
xor
dec
inc
pushf
repz
pop
bound
add
add
jnp
mov
dec
cli
loopne
xchg
add
add
mov
lods
outsl
jae
lods
movsl
data16
adc
push
mov
aaa
rolb
pusha
mov
mov
adc
bound
imul
js
pop
jecxz
adc
cmp
mov
int3
xchg
movsl
stos
scas
lcall
cmpsl
icebp
or
cmp
dec
xchg
xchg
mov
cmpsl
and
popf
pop
pop
add
mov
push
adc
test
in
data16
jb
out
mov
pop
popf
sti
addr16
dec
or
inc
adc
jb
int3
mov
lods
loop
ljmpw
push
mov
jle
sub
sahf
fistl
jmp
cmp
adc
cli
inc
jge
jg
repnz
pop
jbe
mov
outsb
inc
adc
imul
jge
mov
cmp
jns
test
loopne
mov
insb
cltd
xchg
xchg
sbb
pop
pop
mov
mov
inc
cmp
add
imul
gs
ljmp
add
add
push
sub
loop
dec
xchg
dec
add
xchg
clc
xchg
ja
or
xlat
jle
fsts
jb
push
jmp
xor
xchg
push
inc
push
pop
xchg
ds
incb
mov
jl
pop
xorl
and
xchg
pop
jb
and
call
dec
or
add
js
inc
dec
xor
cmpsl
repnz
pop
and
cmpsl
imulb
add
test
add
jl
lahf
cmp
les
clc
ror
mov
mov
stc
inc
cmp
scas
mov
cltd
sub
sub
cwtl
and
adcl
rcll
mov
sub
push
mov
call
xchg
add
cmpsb
xor
js
ljmp
add
mov
popa
pop
dec
pop
out
cmp
sub
scas
imull
add
add
fdiv
mov
sub
testb
add
mov
addb
shrl
loopne
push
pop
mov
lea
out
lcall
ljmp
push
and
cli
pop
pop
inc
sbb
sti
incl
aam
push
out
or
sub
sbb
cmp
mov
lahf
mov
xor
add
lods
pop
fisubrl
stos
daa
mov
mov
push
ds
insb
sub
mov
movsb
add
mov
or
xor
or
mov
sti
inc
push
ret
daa
popf
push
fiaddl
xor
jmp
fisubs
mov
lahf
lret
push
scas
rcll
hlt
outsb
sbbb
lods
mull
mov
mov
pop
adc
nop
in
xor
addl
and
enter
dec
xchg
in
xchg
pusha
enter
ljmp
imul
ds
xchg
push
xchg
and
add
mov
fimull
mov
add
add
or
dec
in
push
push
push
jge
into
scas
mov
loope
xorb
aas
insl
xchg
rolb
test
jmp
bound
push
push
xlat
sbbb
cmp
cmpsl
rorl
cmpsl
jns
es
push
xchg
pop
xchg
daa
ds
shll
cmp
sbb
shr
cmp
mov
aaa
stc
pop
outsl
sub
push
jne
clc
lods
xchg
or
and
pop
push
pop
ds
cmp
imul
loope
rorl
stos
stos
xchg
mov
stc
cli
js
inc
test
dec
popa
pop
mov
jb
cmp
pop
push
pop
pop
lock
and
adc
dec
inc
jmp
push
es
cmp
mov
jg
mov
lods
lock
hlt
loop
xchg
cmp
in
ret
lahf
cmp
ljmp
lcall
mov
jmp
imul
lahf
repnz
inc
dec
fabs
lcall
add
adc
popf
ss
aas
out
aam
jno
xchg
dec
pop
mov
push
mov
sbb
out
xor
test
fs
inc
mov
cmp
sub
cmp
adc
dec
rcrl
lods
fwait
inc
push
out
ret
ds
gs
push
pop
dec
add
dec
xchg
xor
and
repz
push
and
sahf
add
pop
push
push
ficoms
sbb
xchg
pusha
stos
insb
jbe
or
test
mov
mov
push
in
fiadds
pop
nop
jge
ror
aam
add
jecxz
xor
rolb
jns
mov
scas
fstpl
popf
xor
lds
or
and
out
push
mov
inc
ja
dec
hlt
ret
xchg
out
cmp
jge
jg
xchg
inc
rep
mov
jecxz
ja
cld
lcall
pop
repz
je
rorl
add
pop
lods
pop
cli
cmc
cmpsb
lret
roll
add
add
mov
mov
inc
dec
adc
and
inc
nop
push
mov
adcb
stos
cmc
mov
nop
cmp
mov
loope
pop
sbb
pop
fbld
aad
and
loopne
push
leave
sbb
xchg
fdiv
arpl
cwtl
pop
mov
sbb
in
mov
or
fldenv
push
and
mov
stos
int
cmp
lea
in
pop
dec
movb
aad
pushf
stc
ret
sbb
mov
enter
xor
pusha
adc
and
xor
adc
pop
xchg
xchg
js
jge
mov
and
dec
nop
scas
pop
xchg
leave
add
mov
mov
fstl
sub
pop
aaa
test
pop
pop
cmpsb
data16
mov
inc
push
mov
add
xlat
lds
push
mov
lods
xor
pop
and
mov
arpl
test
arpl
add
rol
pop
cmpsl
or
add
das
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
fcmovnbe
jp
xchg
sub
mov
mov
ja
cmp
and
pushf
shll
sbb
jo
or
and
jecxz
pushf
cmp
lret
xchg
cmp
lcall
pop
pop
cmpsl
mov
lret
dec
out
lods
ds
ljmp
jg
mov
cmpsl
leave
pushf
loopne
lock
arpl
cmp
insb
decb
fisubl
jle
xchg
xchg
std
rclb
jg
or
xchg
jne
insl
add
jp
ret
sub
iret
and
add
outsl
inc
or
xchg
jb
xchg
add
jno
dec
xchg
daa
pop
mov
adc
cltd
and
dec
out
push
inc
jne
sub
lea
jge
mov
stos
pop
fistpll
xlat
cmp
popfw
or
push
dec
xor
cmpsl
push
dec
and
sbb
mov
xchg
outsb
lds
cwtl
xor
adc
add
aam
int
aaa
das
aam
jb
inc
test
add
add
out
inc
out
push
ljmp
repnz
or
mov
sarl
xchg
ret
sub
out
jmp
add
mov
stos
filds
aas
cmp
sub
pop
movsl
in
xor
push
addr16
mov
dec
mov
call
mov
pop
sub
push
jns
outsl
and
xchg
sub
lahf
in
inc
cmpsb
sar
xor
pop
aad
lea
push
insl
inc
outsl
mov
sub
repnz
popf
add
push
sbb
xchg
ds
aam
out
mov
pop
dec
pop
clc
dec
jmp
in
jmp
shlb
aam
out
ja
subl
lods
insl
add
fistpl
mov
mov
jl
mov
xchg
or
sbb
push
mov
enter
xor
pop
dec
mov
insb
and
and
push
pop
pop
fwait
pop
stc
dec
add
add
arpl
addr16
sub
jb
cmp
add
icebp
in
xchg
ljmp
cmp
pop
shlb
push
cmp
fs
int
outsw
stos
out
dec
mov
mov
xlat
inc
adc
mov
popa
push
mov
in
je
pop
cmp
movl
push
pop
push
ljmp
je
xor
add
pop
push
mov
orl
xchg
fdivs
push
or
push
jns
mov
xor
js
aas
lds
mov
adc
hlt
add
mov
mov
cmp
stos
jnp
loopne
mov
fdiv
popf
cwtl
rcrb
repnz
insl
lods
enter
cld
or
int3
sbb
add
loope
jl
data16
sub
adc
pop
add
lods
ds
adc
ret
pop
mov
xchg
push
scas
jmp
or
cmp
and
xor
sarb
orb
mov
inc
scas
cwtl
pop
push
repz
dec
add
add
out
out
pushl
xchg
xor
jmp
add
rcr
hlt
out
fsubl
jmp
add
lcall
repz
xchg
insl
lea
psubsw
pushf
incl
test
pop
into
ljmp
out
mov
shl
sti
fs
cmpl
es
lods
mov
mov
ret
push
ss
xor
shlb
daa
xchg
sub
mov
test
int3
mov
sub
loop
sarb
clc
std
xlat
out
ja
cmp
loope
push
sub
mov
pop
nop
gs
jmp
sarl
add
aad
push
aaa
dec
push
popa
xchg
push
add
xor
packsswb
ret
paddusw
xchg
aas
mov
test
sarb
gs
lret
lret
sti
fdivl
testl
add
inc
lcall
sahf
and
sub
stos
in
cmp
mov
jg
scas
shl
and
add
test
push
scas
mov
pop
rorb
incb
add
popa
scas
arpl
divl
stos
sbb
mov
test
insl
pop
jne
ljmp
stc
shll
dec
mov
loop
jg
loop
adc
xchg
cltd
xor
add
negb
pop
lahf
dec
mov
mov
mov
push
pop
leave
adc
les
push
inc
icebp
add
cwtl
or
sarl
sub
bound
inc
mov
inc
jecxz
sbb
ret
adc
aaa
ljmp
inc
in
insb
in
fs
aas
sub
or
imul
pop
inc
test
sub
hlt
pop
in
push
mov
inc
outsl
xchg
inc
test
fdivl
decl
out
sbb
pusha
ret
inc
shll
shll
les
bound
sbb
sub
mov
cltd
push
insl
cmpsl
or
daa
and
add
xchg
lahf
push
out
stos
jne
ror
out
stc
lret
add
xchg
and
movsl
mov
mov
mov
outsl
xlat
mov
add
add
subb
pop
sub
jbe
stos
lock
cmp
cmpsl
ja
out
shrb
push
xchg
xor
add
jne
negb
push
sub
push
mov
jecxz
xchg
int
push
in
shl
test
add
and
mov
mov
dec
loop
mov
jge
mov
jmp
pop
out
popf
sbbb
fisttps
xchg
mov
rcll
mov
jp
test
les
sbb
cli
xchg
es
inc
adc
push
ficoml
fstpt
movsb
nop
mov
mov
addb
fcoml
ret
or
mov
jp
enter
add
mov
aam
jns
insl
outsl
jb
pushf
cmp
mov
sbb
je
loop
mov
sbb
pop
and
inc
pop
and
adc
jmp
rcrb
pop
add
add
add
mov
push
jg
mov
and
xchg
or
add
add
popf
inc
shrb
imul
hlt
sbb
mov
ret
out
sti
pop
sahf
cwtl
sbb
push
add
inc
jmp
pop
cld
inc
imul
mov
fldenv
cmpsb
scas
mov
xor
mov
mov
popa
mov
ja
dec
sbb
rol
or
pop
or
mov
js
sbb
cli
sarl
enter
xchg
int
and
rcll
add
fs
cmpsl
mov
data16
mov
jnp
lock
mov
fstps
mov
out
push
dec
daa
cmpsb
addb
insb
or
mov
pop
or
sub
mov
jno
mov
mov
cmp
cli
sti
arpl
push
push
mov
mov
push
push
fucom
xchg
lods
push
dec
stos
pop
mov
and
add
inc
stc
mov
mov
lods
imul
adc
add
add
ja
mov
sub
mov
call
and
gs
cmp
in
jecxz
cmpsb
xor
ds
fdivl
lret
repz
orb
jecxz
ljmp
sub
or
pop
xchg
mov
push
dec
loop
mov
cld
mov
das
gs
repz
pop
gs
mov
repz
dec
mov
add
mov
pushf
dec
in
xor
add
in
mov
enter
xorb
orb
push
pop
out
clc
mov
insl
popa
sub
cltd
lret
pusha
call
cwtl
mov
test
out
inc
loop
sub
rcrb
repz
das
lods
mov
fildl
fs
daa
insl
sub
xchg
inc
cmpw
mov
notl
and
push
adc
push
xor
pop
push
test
push
gs
cmp
xchg
sub
scas
or
cmp
xchg
mov
mov
add
add
push
mov
xchg
jecxz
pushf
add
push
mov
jbe
push
cmp
dec
adcl
cmp
cmp
pusha
loope
mov
loopne
shll
mov
ja
push
ss
mov
fwait
cmovle
adc
xor
dec
lcall
push
lret
lret
cmp
push
inc
mov
push
pop
mov
and
mov
push
push
mov
cmp
nop
sbb
icebp
das
cwtl
inc
xchg
pop
andl
jnp
xor
jp
int3
jb
mov
sub
pop
dec
test
insl
fisttpll
push
shll
das
pop
dec
les
in
jbe
shrl
jl
call
rorl
or
jbe
xchg
fmul
into
addr16
jl
add
sbb
gs
lea
fs
mov
jnp
cmp
sldt
add
hlt
fbld
or
add
add
rcll
pushf
icebp
push
xor
aas
aam
pop
les
mov
cmp
dec
pusha
jp
movaps
push
mov
xchg
std
insl
ss
aaa
imul
cmp
repz
jl
cmp
and
cmp
pop
push
cs
scas
popa
and
fistpl
repz
mov
jle
fdivs
dec
arpl
ret
adc
add
sbb
or
fs
pop
mov
add
popa
into
fisubrl
bts
test
adc
roll
fldenv
jp
and
lds
dec
mov
dec
ljmp
cmp
loopne
push
mov
or
mov
xor
cmp
ljmp
mov
mov
int
push
jbe
jge
mov
ret
add
add
loopne
add
mov
into
fwait
add
mov
cmp
add
add
aad
sahf
lods
aaa
int
jmp
push
mov
stos
jo
cmc
adc
push
and
xchg
mov
sti
or
cwtl
out
pop
xchg
pop
shlb
xchg
or
sarb
mov
pop
xchg
push
movsb
dec
add
mov
fadds
out
pop
leave
xchg
jne
test
push
jns
cmp
mov
dec
pop
sub
xor
imul
les
out
in
divl
push
sbb
addb
outsl
dec
jp
les
rorl
cmp
fs
sub
cmpsb
lea
or
imul
roll
popf
xor
lods
icebp
and
pop
ljmp
repnz
cmp
xchg
repnz
sub
mov
xchg
push
mov
sub
cmp
dec
add
aad
and
pop
xor
add
add
xor
mov
pop
sarb
in
or
fildl
add
dec
sbb
push
mov
aaa
js
jb
cld
aas
xor
je
or
adc
pushf
sti
mov
jae
popf
cmp
xor
pop
jo
dec
pop
mov
out
mov
ja
push
aas
fldl
cmpsb
jecxz
sbb
push
fistpll
fsts
cmp
dec
je
dec
mov
out
int3
mov
pop
mov
adc
icebp
jae
mov
movsl
insl
jl
fs
lahf
dec
std
fidivrl
bound
mov
xchg
jnp
sbb
xor
add
inc
push
dec
into
testl
xor
int
inc
cmpsb
inc
ror
bound
dec
mov
xchg
ljmp
push
gs
out
fs
inc
sahf
mov
sub
cmp
cmp
insb
jmp
cmpsl
mov
out
scas
push
push
fdivrs
in
gs
add
loope
ljmp
push
pop
sub
mov
add
add
inc
out
aas
mov
sarb
push
add
add
xor
clc
lcall
dec
mov
pop
test
fists
outsb
les
pop
inc
or
or
out
pop
andl
and
pop
insl
icebp
cwtl
mov
repz
in
das
push
cmp
add
and
pop
or
jne
jmp
cld
sahf
and
sbb
inc
mov
cmp
pop
mov
cmc
inc
lods
fwait
or
jp
inc
xchg
daa
les
repnz
cld
shlb
mov
lods
cmpsb
cmp
dec
aas
daa
mov
outsl
dec
sarl
inc
pop
dec
out
enter
in
mov
xchg
mov
pop
ret
notl
cmp
dec
nop
ss
nop
jmp
fimuls
jne
bound
ja
dec
mov
adc
lock
ljmp
mov
dec
test
mov
stos
shrb
je
insl
sti
rorb
int3
jg
add
push
bnd
dec
leave
and
repz
enter
add
add
mov
out
cmp
xchg
in
xchg
int3
push
sti
mov
jmp
clc
sbb
cwtl
mov
jmp
push
in
cmpsb
mov
push
stos
sarb
pop
sbb
jmp
inc
sti
jg
jp
cld
mov
adc
icebp
fistpll
orb
push
outsb
into
fisttps
adc
jecxz
adc
out
lret
mov
pushf
loope
push
sarl
mov
cwtl
sub
outsb
jl
aaa
and
cmpl
mov
mov
pop
xchg
jmp
jp
xor
dec
mov
lea
loope
test
pop
adc
adc
push
add
inc
cmovl
mov
pop
lahf
movsl
enter
repz
rorl
pop
fwait
dec
or
pop
mov
xchg
mov
inc
std
mov
xor
sub
xchg
pop
add
repz
jnp
test
add
in
out
ja
filds
and
or
add
mov
sti
pop
insb
jbe
fs
cmpl
mov
cmc
push
cli
sub
jae
mov
and
mov
jmp
jp
mov
icebp
sbbb
je
lods
dec
push
xchg
cmp
cmp
mov
xlat
add
mov
insl
cmpsl
push
mov
add
jg
addr16
adc
xchg
add
push
dec
pushf
mov
rclb
and
insb
and
lret
div
and
stos
dec
notl
cltd
mov
mov
push
stos
decl
adc
push
push
mov
jl
push
aad
xlat
imul
ficomps
push
mov
xor
mov
in
sbb
jge
mov
add
test
repnz
ja
push
and
rolb
fs
jp
push
imul
inc
mov
add
hlt
mov
xchg
mov
sub
repnz
xor
add
scas
test
in
inc
push
or
add
add
jo
imul
fwait
sbb
or
nop
jecxz
mov
adc
mov
jp
movsb
xchg
test
cld
ret
jmp
jge
xor
fmuls
dec
mov
je
adc
mov
aaa
sbb
clc
iret
aad
cli
dec
sbbb
lcall
mov
aad
sub
cwtl
mov
cld
mov
adc
and
loop
dec
pop
fnsave
sahf
and
or
jle
cmp
jl
insl
repnz
pop
out
push
xor
inc
fwait
imul
push
dec
ret
lcall
or
sbb
sarb
dec
inc
sub
cwtl
stos
fists
je
xor
cli
mov
xchg
cwtl
xlat
movsl
imul
pop
jge
push
add
lea
sub
dec
std
int
lea
mov
push
aad
and
dec
add
lahf
mov
lea
add
mov
jg
neg
pop
daa
inc
sub
add
add
inc
pop
add
insl
divl
inc
arpl
data16
repnz
pop
cltd
mov
scas
or
cmpsb
cmp
mov
insl
sub
pop
ret
popa
not
sub
mov
iret
js
in
lods
cmp
cwtl
loop
mov
xor
fs
dec
push
or
adc
mov
test
xchg
shrl
cwtl
add
xor
add
and
push
xchg
mov
xor
xor
loope
nop
mov
sbb
mov
push
push
xchg
sti
inc
mov
fwait
add
jg
push
mov
xor
inc
jmp
xchg
shlb
ror
jbe
dec
pop
push
mov
adc
xchg
sub
pop
in
adc
push
sub
push
clc
arpl
cmp
xchg
add
or
fwait
insb
fidivrs
sti
ret
jns
je
xchg
add
add
sti
jg
cmp
je
roll
clc
xchg
or
add
cmpsl
jns
mov
inc
add
loope
int3
push
xor
sbb
sti
dec
and
and
outsl
jbe
imul
idiv
and
mov
lock
les
or
push
mov
adc
xor
lods
mov
sbb
push
cltd
cmpsl
sub
mov
insl
sub
xor
cmp
bound
imul
cmpsl
cltd
lcall
fbld
cmc
sbb
mov
iret
pusha
cltd
scas
push
and
dec
lret
js
jg
aas
sub
test
clc
imul
imul
xchg
sub
lods
jns
push
insb
inc
sarl
xor
and
cmc
faddl
repz
pop
xchg
cmc
jnp
pusha
jbe
jno
ds
mov
mov
xor
jnp
push
iret
icebp
cld
loop
add
xchg
out
pop
or
and
inc
jg
std
mov
lcall
add
add
jnp
fstp
fcompl
ret
cmp
add
add
repz
or
shrl
xchg
std
add
cltd
add
mov
mov
push
insl
push
sbb
loope
push
push
fcoms
mov
idiv
inc
cltd
xchg
cmc
mov
add
cwtl
sti
cmpsl
or
xchg
jo
dec
push
dec
int3
movsb
jbe
sub
cmp
ret
lds
aad
lahf
out
lods
mov
xchg
sub
mov
fscale
dec
cltd
mov
es
sub
sub
ffreep
inc
or
jb
jne
push
xor
pop
push
sbb
adc
lods
mov
sub
mov
cmpsb
xor
dec
pop
test
movsb
sti
orb
dec
dec
sbb
or
int
mov
jbe
lret
stos
out
or
add
or
sarb
mov
push
mov
popf
popa
icebp
mov
or
in
je
inc
dec
lret
mov
and
sub
lret
add
mov
jno
std
outsl
mov
add
xchg
cltd
add
add
add
loope
insb
add
adc
loope
ds
in
adc
inc
mov
or
out
push
popf
das
insl
push
out
scas
in
test
sub
shll
sbb
ds
sub
lret
aaa
es
sub
sbb
xor
mov
mov
loope
jmp
mov
pusha
sub
xchg
arpl
xchg
add
inc
mov
mov
aas
loop
or
call
stos
leave
and
cmp
cmpsb
stc
in
inc
cltd
iret
push
shrl
jmp
loop
jg
imul
and
and
xor
inc
in
lret
insb
scas
movsb
fstpl
clc
nop
cmp
and
das
xor
insl
add
ret
jecxz
sti
mov
xchg
xor
adc
and
in
jle
jns
push
mov
inc
xor
mov
xchg
shlb
or
inc
mov
nop
fwait
dec
xor
add
sbbb
loope
jmp
fstp
inc
mov
add
mov
iret
dec
push
repz
add
add
or
mov
pop
adc
mov
mov
xchg
rcrb
imul
int3
adc
mov
ret
push
mulb
mov
ret
sbb
cwtl
xchg
xchg
cmpsb
adc
and
fisubs
inc
lock
pop
ficomps
clc
dec
push
jl
out
push
lea
imul
mov
out
out
jo
push
addb
xchg
inc
pop
adc
rcrb
popa
mov
outsl
psubusw
push
aam
and
in
push
aam
mov
push
aas
insl
bound
inc
loope
pop
add
test
loope
loop
pop
fisubl
xchg
cltd
mov
jmp
jp
or
shlb
or
adc
mov
lret
shr
mov
xor
adcb
lock
loope
mov
add
sbb
jle
pop
int
add
adc
divb
fucomip
push
add
add
xor
test
sbb
add
add
adc
or
daa
sub
ja
xor
scas
dec
dec
push
push
data16
shl
sub
scas
mov
xchg
nop
imul
cmp
addb
mov
or
jmp
dec
inc
fidivs
jno
cmp
push
mov
sbbl
mov
pop
sub
rcrl
cmp
inc
fldcw
test
popa
xchg
or
push
sarl
sub
sti
out
or
or
mov
jg
ret
xlat
xchg
out
jg
sti
mov
jecxz
add
mov
in
inc
in
imul
and
mov
xchg
add
call
addb
jl
mov
test
pop
dec
imul
push
jle
out
xchg
xor
jl
test
imul
sbbl
rorb
and
in
mov
inc
hlt
sbb
add
add
cli
inc
jg
int
xchg
lods
or
ss
inc
adc
add
add
scas
push
int3
popf
in
push
lods
leave
rorl
sub
jb
push
push
fimuls
insl
arpl
data16
jo
sub
sub
push
test
push
and
gs
mov
iret
xchg
pop
and
add
cmovge
imul
lret
xor
pusha
and
cmp
adc
add
push
mov
push
sub
push
sub
data16
lahf
js
in
inc
adc
incw
hlt
pushl
pop
push
fcmovne
jge
push
dec
xor
div
dec
repz
push
pusha
imul
adc
loop
shl
lods
push
imul
ficompl
mov
enter
xor
cmp
jl
ss
jle
pushf
mov
and
xchg
sub
sbb
push
add
cmp
push
testl
out
imul
add
lock
std
cmp
jle
fistpll
fiaddl
scas
pop
movsl
pop
adc
add
ja
jp
sbb
mov
mov
ret
out
divl
sub
pop
into
or
inc
add
daa
stc
push
gs
inc
testl
adc
ss
inc
push
adc
cmp
mov
pusha
inc
mov
xor
mov
and
xchg
pop
add
pop
mov
shl
out
aas
xor
mov
insl
repnz
cmp
lock
enter
outsb
xchg
cmpb
je
jae
pop
mov
fdivs
mov
cmp
movb
mov
and
mov
adcl
mov
scas
bound
aaa
je
dec
or
jne
jno
mov
jl
loope
fisttpl
push
inc
cmp
xchg
lock
cwtl
fs
fisubl
lock
call
gs
add
cmp
stc
and
jbe
lahf
mov
loope
popa
xor
cltd
adc
add
add
iret
xlat
ficompl
inc
cli
iret
sbb
sbb
add
add
jns
sbb
adc
push
and
or
lea
fidivl
mov
mov
add
hlt
std
mov
in
xchg
leave
push
mov
sub
mov
fwait
jnp
xor
adc
mov
push
pop
or
add
mov
xor
inc
add
ror
leave
imull
add
jne
mov
mov
test
pop
ret
gs
dec
lds
cltd
loop
push
nop
and
and
xchg
int3
enter
push
cltd
or
or
push
lods
out
jl
subb
lahf
call
mov
rolb
ds
lahf
lds
std
test
sub
adc
sub
mov
outsb
mov
sub
xchg
or
out
jne
push
mov
in
pop
dec
mov
or
repnz
add
add
sub
iret
outsb
jmp
push
test
outsb
sub
and
add
insl
test
mov
push
xor
pop
xor
pop
lret
popf
stos
jae
lods
sub
sub
stos
xor
push
jmp
rcr
dec
pop
pop
call
ret
push
xor
and
mov
subb
sbb
mov
sti
dec
push
add
inc
xchg
pop
loopne
clc
std
adc
das
push
push
cmp
adc
lock
pop
mov
cs
loopne
loop
rorb
inc
int3
jae
jbe
sbb
addb
data16
jle,pn
xor
sbb
inc
js
loopne
addr16
pop
jno
mov
ret
sti
repnz
add
jl
fs
mov
out
dec
add
insl
cmp
add
fbstp
add
inc
or
mov
xor
push
gs
cld
cmc
mov
xor
cmpsb
repz
or
mov
aas
mov
add
sbb
std
sbb
stc
cld
or
daa
je
xor
adc
add
fcomi
fiaddl
mov
repnz
aam
movsl
loop
dec
movsb
adcl
out
push
and
std
and
add
js
out
loopne
cs
ret
pop
push
mov
cmp
daa
bound
lea
in
sbb
and
mov
lock
addr16
jbe
testb
xchg
push
sub
popa
adc
movsl
jne
pop
xchg
in
push
sbb
fwait
or
push
xchg
xor
stos
sub
divl
xchg
pop
push
xor
cli
mov
sbb
cld
jnp
cmc
andl
push
lods
mov
pushf
das
sbb
mov
pop
push
stc
inc
adc
cs
and
sbb
icebp
or
cli
jle
and
add
mov
shlb
sub
je
scas
pop
mov
test
fimull
data16
jbe
sub
pop
cmp
dec
add
add
pop
test
scas
repz
cld
adc
es
sub
add
add
push
mov
or
loopne
mov
std
popf
pop
jbe
jae
subps
scas
jno
jmp
or
int
push
dec
jae
cmp
test
sub
sub
pop
lds
xchg
sub
push
jmp
add
mov
fsts
xor
cmp
cmp
push
stc
enter
aad
out
dec
shll
cmpsb
jge
cltd
mov
sub
int3
aam
mov
fwait
inc
jb
pop
mov
lret
in
lcall
and
rcll
jecxz
bound
xor
dec
shlb
mov
push
jg
push
inc
fwait
rol
jl
fisubrl
dec
in
mov
stc
es
imul
fcoms
imul
test
out
ret
pushw
out
in
iret
aam
pushf
stos
adc
int
frstor
mov
jge
xchg
fnstsw
mov
idivl
fsubs
lret
vhsubps
add
mov
dec
pushl
mov
pop
add
add
movsl
sub
push
xchg
sub
inc
jg
lds
scas
xor
jg
and
andl
dec
push
mov
daa
pop
push
push
fwait
lcall
cmp
sub
add
pusha
ds
mov
dec
notb
or
xlat
loope
in
mov
fbstp
in
fisttps
push
cmp
dec
mov
push
insb
mov
add
cmpsl
notb
dec
push
mov
mov
xchg
jo
sbb
fucomip
and
loope
push
enter
and
sarb
or
cmc
cli
pop
add
pushf
xchg
stos
and
lock
inc
imul
jg
ficoms
mov
cmc
xor
pop
jns
mov
je
in
xchg
jmp
sub
stc
aas
popf
rcl
shll
jg
pop
ret
cwtl
lock
dec
xchg
mov
aam
inc
cltd
aam
divl
outsb
add
add
inc
ja
pop
aas
dec
push
cwtl
pop
xor
add
add
icebp
pushf
imul
cli
negb
pop
loop
mov
and
lahf
fdiv
xchg
jo
lds
jns
cmpsb
adc
rcl
jno
push
divl
xor
fidivl
mov
shlb
cmp
mov
mov
movsl
push
push
add
mov
cmp
inc
aam
mov
imul
outsb
fistpl
pop
inc
adc
pop
jnp
push
push
jmp
icebp
les
lret
test
mov
iret
pop
insl
pushf
insb
orb
and
mov
test
aam
adc
dec
cmp
jb
and
push
jne
and
test
and
sahf
pop
mov
outsb
inc
add
xor
sbb
or
loope
push
ficoml
xchg
std
mov
jae
mov
sti
out
loopne
push
lds
cmp
push
cltd
cld
sub
dec
jmp
pop
add
add
xchg
jae
ja
div
mov
in
pop
xchg
cmp
add
add
cwtl
jmp
xor
mov
cld
dec
fs
int
aam
fadds
push
orl
sub
jnp
jmp
xchg
fdivl
xor
lcall
mov
jno
adc
mov
cmp
sbb
leave
jno
dec
jne
andb
push
shlb
mov
cmp
decl
cwtl
js
and
pushf
aam
out
cld
movups
xlat
add
inc
push
jae
sub
out
fmuls
push
addr16
inc
mov
test
test
and
mov
mov
or
loop
xor
xor
xor
out
jo
lret
pushf
or
incl
repz
in
sub
mov
ror
xchg
outsl
fdivrs
roll
cmp
inc
cli
subb
lds
xchg
pop
sub
dec
pushf
and
push
imul
cmc
daa
in
loop
ds
fidivrl
add
xor
cli
std
jg
push
pushf
dec
xor
sbb
add
sub
and
inc
jne
mov
or
call
jmp
dec
mov
jne
lcall
hlt
test
jle
mov
inc
jge
mov
ja
stos
mov
call
lret
jo
push
das
pusha
jb
and
mov
je
xchg
sbb
gs
popa
lret
gs
icebp
xor
lods
add
testb
hlt
push
lock
add
les
fbstp
mov
pop
test
test
mov
bound
xchg
lods
frstor
jae
inc
add
ret
jbe
outsl
mov
sbb
fnstcw
enter
mov
inc
pop
adc
mov
xor
movsb
std
aaa
dec
pop
addr16
ds
lcall
bound
push
cmp
fistps
es
cmp
inc
iret
mov
jge
loopne
cmp
shrl
add
testl
incl
sbb
inc
jmp
add
add
cltd
imul
inc
cmp
call
scas
imul
xchg
and
lods
dec
and
ficompl
pop
pop
push
xor
cmp
mov
xchg
inc
aaa
ljmp
dec
add
mov
cmp
mov
or
push
or
test
aas
push
jne
dec
xchg
fwait
cmp
add
xor
loopne
fcmovne
repnz
fcoml
cmp
pop
lds
xlat
aaa
popa
cmp
out
es
jp
cmpsl
rcrl
popa
rcll
sbb
pushf
sub
or
dec
jle
aam
add
mov
mov
arpl
jle
push
and
xor
loop
ljmp
inc
mov
cmp
push
mov
outsb
call
cli
outsb
popf
cld
xchg
cmp
aas
push
sbb
cmc
lcall
xlat
jg
outsl
loopne
mulb
test
hlt
in
sub
mov
out
add
add
es
jg
pop
or
xor
addl
add
add
push
xchg
clc
add
mov
mov
or
and
outsb
xor
push
aad
aaa
cmp
jbe
in
mov
lahf
loope
adc
mov
push
mov
gs
stos
leave
or
lret
ret
jge
mov
inc
test
test
mov
and
mov
mov
dec
mov
test
popf
add
int3
pop
aaa
repnz
fwait
aad
sub
xor
pop
and
xor
dec
xchg
test
aaa
sub
insl
dec
mov
or
lods
daa
inc
std
mov
push
mov
and
mov
xor
push
jecxz
std
pop
outsb
cmpsl
and
int3
and
push
fnstenv
inc
mov
sub
push
fcmovbe
sarb
add
insb
xor
xchg
sbb
mov
shlb
bound
xchg
jmp
iret
and
xchg
cmp
add
add
or
dec
push
cmp
sbb
add
in
mov
xchg
mov
cwtl
jbe
inc
lahf
jl
xchg
mov
pop
push
jge
sub
mov
jb
jno
rclb
add
jb
and
sub
out
subl
or
mov
xchg
mov
lods
arpl
add
fcmovnb
loopne
add
outsl
negb
rcrl
and
sahf
in
jl
jmp
test
aam
push
mov
jb
xchg
andb
sub
inc
les
out
push
fbstp
fwait
pop
jnp
movsb
mov
jecxz
inc
int3
ret
xchg
push
mov
adc
xchg
cmpsb
pop
pop
aad
push
les
push
ljmp
fidivl
popa
jbe
mov
jecxz
clc
push
push
movsb
jp
and
fisubl
nop
fdivs
or
rclb
mov
mov
sbb
aam
sarl
add
stc
lods
xor
mov
push
fsts
add
add
xlat
not
mov
enter
pop
sub
sbb
mov
xchg
inc
cmp
sub
sbb
out
dec
test
enter
inc
and
jns
andl
pop
jmp
sbb
ror
mov
cli
cmp
pushf
pushl
test
and
ret
in
cli
imul
pop
and
inc
jne
call
jbe
adcl
clc
mov
lcall
movsb
sbb
and
out
imul
in
sti
clc
js
mov
sbb
or
mov
dec
xlat
add
insl
divl
xchg
pusha
xor
cli
ret
xor
fistps
pop
pusha
adc
fisttpll
daa
jnp
sub
jbe
or
mov
xor
adc
sbb
adc
ds
cmpsl
repnz
loope
ficomps
and
mov
setg
in
xchg
sub
mov
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
ss
test
jecxz
mov
jp
out
pop
and
mov
mov
dec
pop
adc
or
mov
out
push
movsb
sahf
gs
jge
fnsave
push
ljmp
enter
or
mov
push
test
loopne
jg
in
loopne
push
add
mov
and
faddl
xchg
lret
push
mov
out
xchg
pcmpeqd
jp
sbb
das
rclb
and
in
sub
inc
push
enter
rcr
push
std
jle
ja,pn
mov
sub
call
je
xchg
mull
sub
int3
sub
xchg
in
xor
jl
fdivl
fs
sahf
push
adc
and
pop
add
mov
sbb
xchg
adc
femms
sub
adc
cs
jbe
mov
inc
push
cmp
filds
cwtl
je
and
setg
das
push
mov
add
add
in
out
stos
jge
or
clc
daa
pop
and
add
fimull
or
and
push
mov
enter
push
push
adc
xchg
and
imul
les
xchg
pushf
mov
add
sahf
movsl
jae
ret
mov
insb
xor
mov
popa
sbb
add
lds
sub
xor
sub
cld
sti
cmpsb
inc
cmp
mov
cmc
das
and
cwtl
shrb
push
lea
sbb
movb
outsl
mov
loope
ret
jl
stos
ret
jno
sub
lret
stos
rcl
cmpsl
and
and
das
aas
inc
and
adc
cmp
negl
push
jb
pop
mov
jb
data16
mov
je
dec
mov
push
test
mov
sub
test
xchg
fisttps
shrb
rclb
push
in
xor
sub
adc
lods
push
pop
fdecstp
mov
roll
mov
movsl
pushf
push
das
add
add
sbb
out
xchg
iret
push
aas
sbb
bound
add
add
sub
push
push
loop
pop
repnz
push
inc
bnd
popl
pushf
outsb
push
or
and
push
adc
mov
shll
enter
es
out
stc
movb
cmp
adc
jbe
jl
inc
inc
cs
inc
xchg
fs
xlat
sarb
sarb
daa
pop
or
add
mov
loopne
jbe
xchg
sarb
or
lret
mov
xor
out
lds
adc
lahf
stos
divb
pop
cmp
xchg
sbb
sub
sbb
rclb
sbb
int3
dec
mov
or
rcrl
cld
sbb
jo
insb
out
jo
imul
pop
mov
test
hlt
subb
mov
jp
movsl
mov
fcoml
add
mov
mov
jecxz
jp
dec
mov
xor
mov
das
loop
add
add
in
add
cmp
out
loope
jns
add
add
add
push
or
mov
mov
fimull
xor
sub
mov
xor
shlb
dec
fmuls
add
cvtps2pi
test
lock
cpuid
sbb
imul
int3
cwtl
mov
test
xor
fdivp
data16
xor
shlb
shl
leave
add
cmp
push
movsb
icebp
jmp
outsb
push
sbb
shlb
add
mov
imul
shl
mov
das
mov
scas
pop
mov
xchg
add
sbb
imul
sbb
push
or
pop
lahf
pop
pop
and
xchg
in
jbe
jnp
push
add
rol
fimull
cmp
cli
add
dec
jge
cmp
mov
cmpsb
test
mov
out
mov
cld
sbbl
mov
test
and
call
mov
push
push
inc
std
push
mov
jmp
push
nop
add
add
lods
jg
push
mov
jmp
and
add
ds
imul
mov
mov
repz
sahf
das
fmul
push
xlat
lahf
xor
fldt
adc
imulb
test
cmp
shrl
fisubl
mov
push
mov
lds
mov
jne
mov
lcallw
lret
sub
mov
popf
mov
popf
or
lea
and
sub
jae
shrb
cmp
and
xchg
jp
cmpsb
push
mov
adc
stos
test
arpl
scas
sti
push
fsubl
jns
push
out
add
mov
into
loop
clc
insb
stc
aam
sbb
andl
jp
jbe
aaa
inc
stos
jns
push
adc
sbb
xor
ficomps
cltd
inc
cli
xchg
sbb
adc
pushl
jae
jno
cmc
mov
add
dec
push
arpl
xchg
fstl
mov
add
dec
add
in
add
add
jg
cld
ret
add
pop
cmp
add
add
hlt
mov
nop
adc
mov
in
cmpsb
or
adc
in
jb
xor
mov
loope
pop
ds
push
fcmovnu
clc
cmp
push
pop
xchg
pop
pushf
popf
pop
mov
sbb
pop
push
inc
mov
mov
add
test
inc
sub
cmp
in
jo
pop
ficoml
lahf
lock
mov
inc
test
out
mov
fdiv
call
push
dec
mov
jno
pop
mov
rol
xlat
out
pop
sub
ret
jbe
jnp
fstpt
mov
aas
xchg
out
pop
pop
imul
rcl
pop
jns
and
test
cmpsb
int
in
lds
int3
pop
xchg
mov
mov
pop
daa
pop
push
xchg
pushf
idivb
mov
jnp
bound
xchg
push
and
push
adc
jnp
mov
lcall
pcmpeqw
test
adc
add
add
mov
iret
mov
cmp
add
and
clc
or
lock
mov
pop
cmp
in
cmp
adc
ret
daa
dec
adc
pusha
mov
mov
mov
mov
test
sbb
add
sub
xlat
repnz
adc
mov
jns
jb
inc
jns
xchg
and
fsub
mov
dec
fidivl
and
jecxz
adcb
int3
cmp
imul
sbb
std
enter
pop
cmpsl
lret
cld
pop
cmp
roll
call
push
push
pop
fwait
jns
inc
fdivrl
dec
inc
xor
mov
push
push
adc
cmc
cli
mov
jecxz
xchg
push
in
stc
stc
cmpsl
stc
sbb
xchg
inc
std
cli
inc
adc
test
inc
mov
mov
and
jnp
mov
loop
scas
jne
out
popf
jle
fadd
mov
sub
push
push
dec
push
mov
add
mov
jg
arpl
lret
jnp
add
add
inc
scas
inc
int3
sub
sbb
call
and
sub
ret
fdivrs
mov
add
dec
xchg
cs
sarl
xchg
test
mov
loopne
mov
test
ss
xchg
stos
les
mov
cmp
cmpl
nop
in
push
cmp
call
mov
or
out
mov
xor
jecxz
jmp
and
mov
les
cmp
lret
test
mov
int
jbe
mov
data16
or
cmp
lret
dec
sbb
mov
scas
int
or
lds
push
sub
jns
out
cmp
test
cmpsl
cli
mov
jge
cli
and
dec
sub
mov
or
jg
mov
test
adc
add
add
xor
clc
cli
clc
sarb
sti
mov
jmp
andb
add
outsl
dec
dec
movsb
xchg
sbb
adc
cmp
cmp
cli
lret
xlat
jns
shll
pop
scas
lds
or
imul
inc
push
xor
push
inc
add
std
cmpsl
sbb
add
inc
xchg
or
out
out
fisttpl
scas
pop
cmpsb
rorl
int3
dec
push
repnz
icebp
or
sbb
cmpsl
mov
dec
adc
dec
rcrl
add
cld
xchg
dec
je
push
scas
and
aaa
xchg
fnstcw
cli
sub
popa
in
sub
sbb
xchg
rol
sbb
inc
sbb
xor
xchg
fcmovu
or
setp
scas
icebp
das
fidivl
aaa
ja
sbb
mov
sub
mov
or
xchg
push
divl
cmp
and
cwtl
ret
xor
icebp
sbbb
sub
sub
or
mov
aam
loopne
adcl
add
jnp
out
mov
mov
test
add
add
ja
inc
push
outsb
outsb
pop
push
rcrl
movsb
std
je
push
cwtl
loope
popa
sbb
jo
push
sbb
push
inc
push
mov
push
or
mov
pushf
out
popl
jmp
scas
aaa
jmp
in
pop
sbb
sub
clc
inc
es
ja
fisubrs
std
sub
subb
add
or
sbb
jecxz
gs
das
mov
push
xchg
and
lea
dec
out
or
xor
std
adc
out
xchg
das
push
clc
xchg
dec
mov
hlt
shlb
xchg
decl
push
mov
shl
cs
cmp
push
mov
repz
add
sub
outsl
call
enter
fimuls
sub
int3
and
ss
sbbb
dec
pop
jne
mov
jge
test
sar
xchg
fimull
cltd
ret
fdivr
inc
add
add
es
data16
insb
daa
mov
imul
add
pop
adc
in
fisttpll
ss
mov
jecxz
orb
inc
sub
int3
mov
aaa
movsb
push
clts
and
xchg
pop
fsubrs
pop
es
or
hlt
push
xor
cli
lret
lcall
fdivl
adc
cs
leave
mov
dec
sub
xorb
stc
sbb
pop
test
out
push
sbb
xchg
outsl
push
in
cmp
js
mov
mov
out
cmp
gs
push
imul
pop
xchg
push
ret
hlt
sub
and
les
push
pop
xor
and
hlt
jg
pop
call
rcl
mov
mov
cmp
push
sahf
xor
pop
dec
adc
arpl
jne
ficompl
push
mov
clc
loope
sbb
and
movsl
loope
cwtl
jecxz
hlt
rorl
repz
popf
add
dec
iret
push
popa
xchg
sbb
add
dec
jl
dec
push
mov
add
clc
mov
fldcw
add
xor
sub
add
push
mull
and
negl
push
cmpsl
and
movsl
ljmp
pop
sbb
rclb
mov
jle
insl
jl
arpl
mov
int
cmp
push
out
add
and
xor
push
jae
or
pop
ffreep
cld
test
nop
add
ljmp
insl
imul
clc
xchg
pop
imul
sbb
xchg
push
mov
call
call
icebp
insl
jle
js
scas
fisttps
or
aas
or
sahf
mov
cmpsl
loopne
pop
jae
pop
iret
inc
pushl
aaa
cmp
or
shl
out
mov
mov
cmpsb
scas
pop
hlt
jg
fs
in
cmpl
jb
mov
push
loopne
rolb
out
jns
call
mov
dec
fildl
inc
push
cmp
push
xlat
push
sahf
push
push
sbb
dec
loop
add
add
and
push
sti
cmpsl
enter
push
in
push
rcll
add
cmp
mov
add
fld
imul
mov
push
hlt
mov
test
and
pop
jecxz
mov
xchg
mov
xor
shll
cmpsl
dec
fildll
test
sbb
mov
or
push
ds
pop
dec
jecxz
add
rclb
sbb
aaa
out
fs
std
fbstp
sbb
inc
imull
call
stc
sarl
jno
test
add
sub
push
movsb
or
test
lret
add
dec
popa
sub
scas
push
nop
and
jecxz
sahf
pop
ljmp
out
pop
or
xchg
jno
out
cmc
cmp
xchg
xchg
add
dec
mov
int3
mov
cmp
pop
cmp
fistpl
push
mov
mov
fs
xor
xlat
inc
addb
pop
sti
stos
pop
cmpb
imul
std
add
add
mov
std
mov
dec
push
movsl
mov
add
add
das
mov
stos
sbb
and
jg
les
in
add
adc
adcl
mov
leave
and
or
pop
pop
in
fldenv
out
rcrb
mov
sti
fldcw
pop
add
xor
hlt
push
jl
sbb
push
jns
sbb
movsb
rclb
testb
adc
cmp
sahf
lea
loope
shlb
loope
ss
mov
xchg
jge
iret
and
cwtl
out
jne
sub
inc
jnp
in
mov
nop
std
inc
fs
lods
mov
test
pusha
mov
addr16
mov
jns
xor
sbb
sbb
jle
push
pusha
mov
insb
inc
mov
js,pt
sbb
add
and
mov
les
lcall
les
dec
insl
lret
jns
or
lods
add
add
and
jecxz
and
lcall
add
add
stos
push
jmp
push
mov
mov
shr
in
hlt
fcmovnu
mov
and
sub
sbb
mov
nop
scas
mov
or
fsub
ss
inc
mov
mov
imull
mov
xchg
inc
push
das
fcmovb
cli
cmpsb
adcb
call
inc
xchg
and
mov
pop
sub
add
ds
stos
jae
cs
scas
mov
add
rorl
xchg
or
test
lds
xchg
pop
addr16
pop
gs
sub
inc
mov
fcom
pop
jge
mov
add
pusha
js
or
xchg
mov
test
add
aaa
mov
push
or
jmp
mov
vmovups
stos
pop
je
ret
les
jmp
ret
cwtl
fldt
adc
pusha
cltd
ret
add
add
add
xchg
ficomps
cmp
lahf
xor
mov
add
add
dec
mov
inc
jbe
mov
push
sti
call
rolb
dec
push
sbb
jb
addb
in
insl
test
nop
jae
pop
in
ja
shrl
or
mov
clc
mov
xchg
enter
push
mov
pop
insb
incb
mov
fiadds
outsb
popf
jnp
push
mov
add
into
sub
dec
iret
pusha
sub
adc
mov
es
xlat
imul
lret
aas
mov
scas
add
adcl
push
cmp
mov
enter
mov
int3
sbb
dec
sub
xlat
pmulhw
add
jecxz
inc
popa
pop
loop
dec
in
adc
add
pop
and
daa
mul
cmp
mov
pop
mov
sbb
mov
push
xor
pop
mov
sub
das
xchg
mov
rcrb
and
loope
sti
mov
cmc
leave
mov
add
lods
xor
mov
cmp
shr
lock
add
add
sub
sar
cmc
sbb
and
jo
or
lret
mov
ds
jmp
outsl
lods
or
sarb
data16
cs
inc
subl
std
xor
jp
in
mov
addl
je
pusha
xchg
mov
dec
jb
jns
dec
test
aam
std
push
inc
jle
jnp
mov
ret
pop
jne
mov
insb
fs
popa
test
rol
sarl
in
push
lret
xchg
xchg
jae
adc
mov
push
jns
dec
aad
cld
or
inc
fiaddl
int
loopne
std
sbbb
adc
lods
jb
xor
lds
cmpsb
mov
pop
shll
aaa
xlat
lcall
cmp
movl
aad
scas
mov
hlt
lods
shll
jle
mov
shrl
adc
fldcw
jg
push
cmp
sahf
adc
add
add
lret
mov
or
insl
into
cmp
lods
xor
add
push
pop
jecxz
stc
bound
mov
lea
cmp
dec
cmpsb
sub
fidivrs
pop
insl
pop
cmpsl
sub
ret
insb
mov
mov
push
into
pop
dec
lret
arpl
sti
dec
popf
xchg
das
cwtl
lret
sub
inc
inc
push
dec
das
imul
mov
pop
jp
mov
subl
push
and
shrl
and
and
pop
scas
sbb
or
test
mov
loopne
jae
xchg
xor
lods
or
cmpsb
and
outsb
xor
lock
cmp
daa
aad
insb
test
inc
xchg
mov
shlb
jbe
mov
push
xchg
mov
xor
psraw
pusha
push
ss
adc
insl
mov
push
ficoms
sub
pop
xchg
jns
jae
outsb
push
or
insl
js
movsb
bound
mov
mov
sub
and
fisttps
int
mov
fisubrl
adc
adc
add
arpl
add
add
sti
pop
jge
neg
hlt
add
xor
add
add
rcrl
int
add
and
xor
dec
cmpsb
adc
arpl
pop
xor
testb
pop
pushf
jne
lret
adc
mov
pop
cmp
and
xlat
clc
jno
cmp
les
rcr
outsl
pop
xor
imul
popa
lcall
call
stos
ret
adc
les
inc
and
rcrb
xchg
pop
into
stos
sahf
mov
and
andb
xor
xchg
pusha
xchg
std
jmp
mov
pop
push
gs
jns
adc
popf
adc
push
fnstcw
rcl
inc
pop
lret
leave
xchg
cmp
das
rorl
or
dec
mov
faddl
sub
popw
xchg
insl
xchg
ss
inc
sub
jg
lret
mov
jle
dec
push
shr
xor
ret
in
xlat
add
add
fsub
std
in
popf
in
stc
jmp
mov
xor
add
xor
gs
inc
out
mov
sti
call
out
mov
jne
xor
push
out
nop
jmp
call
in
aad
bound
jnp
das
lret
hlt
clc
and
daa
and
dec
js
push
arpl
enter
pop
adc
push
jecxz
aam
nop
nop
dec
mov
sti
sub
adc
cld
movsl
aad
xchg
lods
addr16
pop
fs
es
xchg
adc
sbb
hlt
sbb
repz
stc
loope
into
inc
mov
in
inc
jae
push
out
xchg
mov
dec
arpl
fisttps
fs
pop
adc
sbb
popl
mov
or
mov
fs
xchg
mov
filds
sbb
push
and
pop
mov
or
push
icebp
sbb
fwait
insl
cmp
jns
push
daa
lea
divl
pushf
adc
fdivs
fistpl
xorl
add
pop
jp
jnp
sti
xchg
jle
jp
lods
or
mov
add
add
mov
out
fucomp
outsl
js
in
aam
cwtl
icebp
jno
in
loopne
cs
dec
addr16
and
insl
pop
adc
aad
sbb
repnz
in
lea
inc
mov
add
pusha
mov
cmpsl
outsl
leave
jns
or
loopne
stos
or
jle
pop
push
stos
push
jae
pop
fistpl
mov
pop
jnp
arpl
dec
jno,pt
mov
mov
and
roll
inc
adc
in
pusha
scas
jbe
add
cmpb
dec
sti
dec
dec
adc
sub
out
xor
nop
xchg
xor
xchg
repnz
pushf
gs
rcrb
mov
push
mov
scas
pop
jo
aas
arpl
sbb
inc
xor
fwait
mov
adc
popf
sbb
mov
cmp
mov
xchg
or
add
out
sbb
sub
jmp
inc
jg
mov
add
mov
push
sti
decb
mov
fcmovb
xor
add
mov
hlt
fprem
sahf
push
push
lret
cmc
imul
enter
in
jmp
fldt
loop
and
sti
cmp
push
imul
and
pop
dec
shr
jns
insl
pop
syscall
outsb
push
adc
shrl
dec
lret
ret
lahf
push
je
jns
sub
sbb
lcall
pop
gs
addr16
int3
inc
cmp
mov
adcb
xor
lcall
pop
sbb
dec
outsl
int
mov
inc
clc
lret
cmp
inc
lock
xor
pop
scas
pop
lahf
push
adc
loopne
push
xor
ja
dec
mov
xchg
mov
jbe
mov
mov
testb
test
jmp
inc
inc
fldl
les
dec
rcl
jno
inc
fstpt
fimuls
sbb
and
mov
std
aaa
mov
mov
add
cmp
xor
hlt
popa
xchg
mov
add
icebp
dec
sarb
mov
jl
test
cmpsl
mov
ret
mov
movsl
and
stc
mov
pop
stos
popf
daa
ja
out
addl
call
into
pop
xchg
js
fwait
mov
cld
xchg
jmp
fucom
mov
and
push
add
pop
scas
cmp
xchg
aaa
testl
out
sub
in
fxch
ds
xchg
aaa
jl,pt
fnsave
sub
pop
jp
aam
stos
cltd
or
test
insb
arpl
fisubl
xchg
mov
xor
mull
jl
pop
jmp
in
popa
sub
ds
pop
cmp
ficompl
sub
adc
in
js
popf
into
movsb
jg
addr16
dec
xlat
cmp
push
inc
jecxz
mov
arpl
mov
sub
mov
adc
inc
xchg
push
mov
gs
xor
mov
adc
incb
ljmp
inc
ret
mul
lret
add
add
leave
mov
and
push
dec
push
lret
push
mov
xor
cmc
mov
mov
sbb
xchg
imul
xchg
shlb
xchg
cmp
out
aad
push
in
adc
inc
inc
js
xchg
sub
rclb
imul
add
js
pop
jns
or
cwtl
mov
inc
cmpsl
dec
jge
mov
iret
xor
pop
add
pop
insb
roll
mov
adc
les
mov
pop
cmp
sar
jg
or
loopne
cmp
sub
imul
mov
inc
in
js
repnz
mov
inc
xchg
sub
pop
int3
jns
jp
mov
fwait
jae
sub
mov
cltd
pop
sarb
mov
std
mov
dec
xor
add
jle
ret
inc
sbbb
in
mov
pop
aad
sub
aam
xor
js
or
rol
add
add
rclb
nop
lcall
aaa
add
add
pop
dec
xchg
int
int
sub
mov
rorb
jp
inc
jecxz
rcl
ficoms
in
lahf
fiadds
dec
jbe
rolb
out
lcall
jl
cs
lds
addb
mov
lds
push
fdivrl
push
cs
das
xor
inc
push
inc
xor
xorl
pop
xlat
cmp
adc
popa
dec
cli
stos
stos
das
aad
push
arpl
in
mov
jl
test
fstl
and
jb
in
dec
xchg
fs
pop
xchg
shrl
add
in
testl
mov
or
stos
test
int
pop
sbb
call
cmp
sub
shl
jne
push
xor
ret
adc
jo
loope
lods
lretw
adc
out
fadd
repnz
jns
push
mov
cmc
out
add
jl
dec
jbe
idivl
or
push
pushf
or
cmp
add
or
repz
push
mov
pop
cmp
lret
push
mov
cmpsb
dec
jno
push
mov
mov
in
daa
xchg
cmpsb
cmp
push
enter
cmpsl
scas
loop
cwtl
fcomps
in
sub
ret
test
andb
mov
fdivs
dec
dec
sbb
scas
add
mov
pop
ljmp
jno
pop
movsb
xchg
lds
inc
adc
loope
sub
test
js
xchg
adc
push
jnp
movsl
orb
sti
test
ljmp
push
cmp
xchg
mov
inc
add
cli
orb
dec
xorb
cmp
sub
mov
add
mov
sub
push
outsb
out
mov
test
cmp
dec
push
pop
in
dec
movl
frndint
add
sbb
jg
test
js
push
jo
sub
add
and
outsb
sub
stos
fs
jmp
leave
aas
add
ds
cmp
add
std
cmp
ret
add
push
daa
pop
xchg
ljmp
jle
cwtl
mov
push
mov
in
lea
mov
shrb
mov
push
shlb
dec
pop
sti
or
adc
xor
mov
cmp
fcmovu
lock
mov
iret
jbe
lods
inc
push
stc
pop
pop
xchg
in
imull
inc
xor
xchg
or
sbb
ficoml
xor
arpl
in
dec
cltd
les
sahf
mov
cld
scas
jg
push
fists
push
lds
das
aas
sbb
outsb
cmpsl
cmpsb
fstps
inc
inc
imul
jge
and
jo
data16
sub
movsb
andl
insl
cmpsl
out
xchg
clc
sub
mov
pusha
mov
add
xchg
shl
inc
xchg
outsb
cmpsb
push
insl
loope
repnz
in
xchg
int
push
mov
cmp
jb
in
xchg
add
sahf
add
add
insb
pop
pushf
scas
fistpll
outsl
gs
cmp
add
cmpb
insl
outsb
cmp
sub
jg
cld
dec
das
dec
out
mov
jns
aam
popa
jne
je
xchg
push
insl
dec
sub
pop
mov
cltd
aam
xchg
icebp
loopne
outsl
loope
jmp
out
sub
push
cmp
scas
or
cmp
sarb
push
test
insb
arpl
mov
lret
sti
push
sub
add
fistl
pop
dec
mov
pop
jns
cmpsl
push
hlt
xor
into
rcr
or
xchg
pushw
movsl
lret
push
xor
aam
roll
or
mov
test
andl
xchg
and
lea
fsubs
clc
xor
hlt
xor
ret
inc
xchg
int3
adc
mov
orb
addr16
bound
push
xor
rorl
mov
mov
popf
loopne
rorb
add
cmp
movsb
push
sbb
cmp
add
add
loop
mov
scas
aas
mov
add
ja
pop
and
sti
mov
cmp
das
repz
into
sbb
pop
or
repnz
adc
mov
xchg
or
cli
xchg
sub
mov
pop
sub
cwtl
mov
ret
or
test
push
jmp
xlat
popa
insb
adc
mov
add
js
fdivs
inc
fcoml
cmpsb
add
arpl
cmp
insb
add
push
shll
sbb
push
cwtl
data16
ret
add
pop
mov
fcomi
cltd
dec
xor
ja
mov
xchg
mov
rorb
hlt
lods
nop
cltd
mov
out
addr16
pop
and
fsubrp
notb
pop
sbb
dec
xor
call
test
xor
out
lods
sahf
sbb
sbb
call
dec
and
add
mov
bound
loopne
add
outsl
lret
mov
out
jmp
push
add
cmp
add
sbb
mov
adc
es
and
xchg
clc
icebp
subb
mov
cmpsl
pop
insl
stc
dec
cs
xchg
jns
popa
scas
in
push
jmp
add
sbb
jl
insb
sahf
lds
mov
sbb
mov
mov
rcr
call
lret
and
push
mov
push
xor
xchg
mov
cmp
scas
or
lahf
jmp
and
mov
push
push
dec
cmp
dec
mov
jmp
es
sub
xchg
cmpsb
filds
in
mov
sysexit
loop
and
icebp
jp
push
pop
ds
movsb
sub
leave
daa
add
pushf
push
cwtl
inc
push
dec
ss
mov
push
and
sub
inc
rcrl
sahf
lods
in
movb
and
mov
call
ds
fs
mov
or
mov
and
add
add
repz
cmp
lods
repz
mov
xchg
add
out
add
xor
mov
jb
daa
ljmp
jne
mov
fs
adc
push
dec
mov
aad
loope
add
popf
mov
dec
add
aad
mov
push
lods
xor
add
cli
xorb
and
jmp
fadd
pop
push
and
and
es
push
cmp
rolb
outsl
jo
rcr
jae
gs
lret
outsb
enter
mov
jne
xchg
add
sub
mov
fists
add
and
fstl
or
inc
cmp
inc
movsl
loopne
jle
sbb
in
cld
adc
xchg
adc
adc
push
xchg
push
out
push
mov
mov
lret
push
in
lcall
rcrl
push
inc
push
in
dec
insb
sbbl
pop
dec
clc
sbb
mul
lds
mov
or
sahf
pop
mov
cmpsl
and
add
aas
daa
push
cld
push
std
jmp
dec
push
inc
movsl
repz
add
adc
inc
push
dec
sub
jne
mov
int
push
xchg
mov
rep
lock
jge
sbb
aam
or
aam
out
cmpsl
imul
fs
fnstenv
pop
and
loop
call
aam
pop
test
popf
shrb
mov
xchg
mov
leave
pop
int3
aas
add
push
and
mov
add
das
test
shlb
fistl
adc
scas
push
jnp
xchg
fcmovnu
and
fldcw
dec
mov
mov
push
test
fldt
dec
adc
sub
pop
xlat
out
iret
pop
jne
pop
push
incl
cwtl
bound
jbe
repnz
push
push
mov
fsubrp
cwtl
sti
push
xchg
push
addr16
mov
mov
sbb
out
push
ja
arpl
pop
xchg
aam
mov
fucomi
pop
cmp
test
pop
andl
xor
add
popf
aam
sahf
nop
sub
mov
add
add
add
sbb
dec
push
out
aad
data16
test
add
dec
in
mov
xchg
mov
and
out
add
sbb
mov
mov
test
outsl
mov
or
adc
mov
aad
aam
ds
movsb
notl
pusha
mov
pop
push
stos
aam
pop
shr
mov
push
arpl
psubusw
cmp
xlat
sbb
xor
cmp
popf
iret
push
mov
xor
xchg
into
clc
and
stc
jmp
gs
sub
and
ss
ljmp
loope
cmp
add
mov
rclb
add
iret
cli
jge
mov
shl
sub
gs
push
pop
pushf
filds
dec
xchg
call
mov
fbstp
mov
sub
push
xor
add
sbb
pop
xchg
imul
mov
push
cmp
adc
mov
ljmp
add
stos
add
push
mov
or
push
or
inc
add
add
and
movb
nop
cmpsb
push
dec
lahf
jecxz
jbe
mov
imul
mov
sbb
subb
xor
sub
outsb
sahf
mov
and
push
and
jmp
pop
arpl
andb
mov
xor
ljmp
jno
lret
cmp
adc
add
hlt
loopne
ljmp
adc
cmpb
or
or
ret
lds
jo
out
xor
std
jb
ret
addr16
adc
test
and
test
call
pushf
pushf
addr16
addr16
xchg
rorl
jl
movsb
push
pop
icebp
push
mov
int3
jg
cmc
ret
insb
xchg
mov
ja
aam
mov
xchg
xchg
inc
pop
fistpll
movsl
cld
add
xchg
pop
cld
push
popf
cmp
scas
fwait
push
nop
add
mov
mov
add
jg
xchg
orl
aas
add
add
imul
jg
imul
lahf
out
bound
shrb
push
inc
out
cmpsl
push
out
cld
pop
arpl
or
and
inc
into
lret
and
dec
outsb
push
sbb
int
xor
movsb
mov
add
cmp
lea
cmp
mov
enter
mov
addr16
mov
mov
cmpsb
mov
in
lret
adc
jo
mov
loopne
cmc
lret
ret
push
mov
outsb
adc
jbe
dec
cmp
leave
xor
mov
in
adc
or
insl
cli
and
adc
insl
xor
dec
in
adc
es
jae
stc
je
dec
or
outsb
icebp
jne
mov
out
add
sub
sbb
prefetchw
or
cwtl
faddl
lret
adc
push
fdecstp
sbb
fists
cmp
ljmp
cmc
jmp
sbb
add
push
dec
lret
jmp
imul
aaa
je
lahf
std
lock
inc
add
add
sbb
sahf
jmp
pop
out
xor
push
stos
jae
mov
shlb
lods
mov
addr16
and
push
bound
sarb
mov
fcomi
aas
dec
pop
mov
insl
inc
xchg
in
sti
test
test
xchg
outsl
push
and
mov
dec
inc
xor
fwait
mov
jl
push
or
xor
shlb
lods
lret
or
jne
mov
mov
je
sub
jl
ljmp
icebp
mov
repnz
xlat
xor
cmp
decb
insl
mov
scas
jne
fdivs
ja
jo
adc
sbb
push
adc
mov
mov
and
push
lcall
inc
sub
in
imul
jno
loopne
or
aad
cmpsl
mov
add
lds
cmc
cwtl
xchg
push
sub
insb
mov
add
sahf
sbb
icebp
push
lea
iret
add
sti
rcr
xorl
add
pusha
xchg
mov
sub
xchg
mov
xchg
mov
adc
mov
dec
ror
push
js
pop
xchg
outsb
cld
sbb
pop
sahf
clc
mov
dec
mov
dec
push
sbbl
popf
jp
movsl
jge
enter
mov
mov
movsb
inc
push
pop
scas
into
xchg
mov
dec
sub
cwtl
xor
and
push
ret
lret
jno
fcoml
jge
mov
push
dec
cli
xlat
and
int
adcb
xchg
dec
mov
jns
lods
mov
sub
jnp
ds
pusha
sti
popf
jg
mov
jp
mov
les
or
aad
stos
in
mov
pop
stos
dec
cwtl
adc
mov
sub
pop
sar
mov
cli
repz
pop
sbb
xchg
push
sub
xor
fsubrs
addl
add
sub
jns
xor
jg
hlt
std
xor
inc
add
add
stos
adc
rclb
imul
jecxz
aas
mov
out
ret
call
sarl
inc
jns
pop
sti
pop
jg
mov
scas
pop
ret
sbb
and
leave
pop
and
adc
dec
fimuls
dec
adc
scas
jl
sar
inc
testl
sbb
adc
sbb
cs
ficompl
pop
repnz
jae
dec
sbb
push
sbb
icebp
pop
pop
and
imul
mov
mov
into
shrb
cltd
add
cmp
mov
fdivs
aad
or
mov
push
cmpsb
mov
dec
mov
icebp
lods
notb
leave
stc
fnstenv
sbb
sbb
push
loop
mov
inc
fwait
sbb
mov
mov
popl
testl
sub
add
add
cltd
movsl
shrb
cwtl
push
sub
xchg
mov
les
fs
add
add
ret
jg
decl
rol
test
xor
push
inc
add
add
fcomp
xchg
cmpsl
dec
sbb
mov
cmp
dec
push
imulb
push
xchg
orb
orl
jo
mov
sbb
pop
mov
in
pushf
aas
adc
jne
aas
nop
dec
sub
hlt
mov
push
repz
addl
add
data16
sbb
push
movsb
adc
sub
push
aam
push
ret
xchg
rorl
sbb
outsb
mov
outsl
xor
cld
push
sbb
lock
push
out
test
adc
ret
das
push
inc
pop
xlat
jmp
shr
jecxz
testl
add
jge
push
mov
js
or
sarb
jnp
mov
push
and
push
jg
test
lret
inc
inc
test
ds
loopne
inc
mov
and
ror
orb
jno
add
sub
and
out
xor
jns
inc
xchg
mov
pusha
xchg
out
es
xor
mov
adc
add
add
das
mov
out
aad
or
add
add
mov
adc
pop
pop
dec
rcl
leave
xorl
cmc
mov
mov
and
jno
mov
or
inc
imul
mov
inc
shl
or
cmp
push
int
xchg
push
stos
add
outsb
cmc
push
loop
push
xchg
xchg
add
mov
lcall
jb
dec
orb
and
xchg
in
and
sub
jecxz
enter
add
push
xchg
idivl
sub
sub
sub
sbb
icebp
cmp
popf
jl
fstpl
pop
aad
xchg
mov
push
mov
cmp
lods
stc
cmp
es
aam
orb
mov
fidivrl
jnp
mov
xorb
jmp
or
adc
sub
push
mov
divl
pop
ds
dec
add
add
hlt
gs
dec
adc
push
and
add
jne
addr16
cltd
inc
inc
adc
aad
imul
mov
stos
dec
xchg
mov
push
inc
sbb
inc
push
jl
xlat
lods
lcall
add
aaa
cmp
in
in
mov
sbb
or
stc
push
inc
push
xchg
mulb
jmp
aas
imul
and
lahf
jmp
push
sti
xchg
popa
ror
jno
test
mov
pop
sbb
ss
mov
xchg
aaa
mov
bound
mov
shl
push
mov
sar
lods
fcoml
sarb
jb
inc
push
add
push
mov
je
les
xor
insb
and
enter
pop
sub
popf
sub
inc
add
push
fistl
test
xor
sub
mov
insl
cld
repz
stos
jb
or
xchg
cli
pop
adc
jmp
add
aas
gs
pop
repnz
dec
add
add
dec
mov
mov
mov
push
add
nop
popf
xchg
orl
dec
dec
int
mov
or
adc
dec
jnp
xorb
xchg
and
sti
sub
aam
insl
cmp
int3
adc
cmp
xor
gs
lcall
iret
xchg
rorl
cmp
pop
inc
shlb
outsb
sbb
int
aas
lret
repnz
cs
or
bnd
sub
add
jns
nop
jne
mov
repz
lds
aaa
shll
cmc
aad
nop
or
iret
orb
mov
add
sub
xchg
loopne
mov
loopne
xchg
lea
adc
gs
add
outsb
jmp
std
inc
jecxz
hlt
sub
mov
inc
pushf
arpl
mov
out
pushf
mov
jge
mov
lods
cld
and
fcompl
ret
shlb
push
and
mov
push
jae
add
add
out
fisttpll
lock
mov
dec
add
add
sbb
pop
push
adc
mov
xchg
dec
les
inc
adc
mov
test
ficompl
mov
fbld
icebp
js
cmp
pop
push
push
cmp
jle
lahf
out
ljmp
and
dec
jno
js
fbstp
idivb
mov
jmp
dec
cmp
sub
call
mov
push
clc
mov
inc
mov
push
xorb
xlat
ret
inc
mov
jecxz
mov
fisubrl
pop
inc
sub
test
cld
movsl
cmpsl
dec
lcall
in
sub
fbstp
and
sbb
insb
test
lea
xor
loopne
in
dec
add
dec
inc
mov
push
push
mov
aaa
outsb
jp
cmp
and
dec
lcall
mov
push
out
jnp
push
je
jo
out
xchg
or
add
add
mov
ljmp
add
add
cmpsb
test
imulb
jp
rol
movsb
xor
mov
repz
es
test
jns
mov
or
add
jmp
adc
mov
and
sub
xchg
repz
and
outsb
rclb
clc
cwtl
scas
mov
push
aad
loop
push
fists
sti
clc
mov
xor
xor
dec
test
pushf
repnz
mov
cmp
cmc
inc
sbbl
call
pushf
hlt
mov
outsl
aad
jmp
sub
or
fcmovne
inc
pop
lcall
sbb
lods
mov
jb
inc
lcall
leave
je
mov
or
test
outsb
push
les
ret
jno
insl
push
mov
inc
inc
or
fld
das
aas
ror
sbb
xchg
inc
mov
fs
int
in
xor
in
jo
dec
dec
add
add
jmp
out
aas
jo
sahf
jb
inc
push
jo
dec
add
add
mov
testl
xchg
add
pushf
cmp
push
xor
std
aad
rclb
xor
jo
mov
and
xchg
jg
in
mov
sbb
rclb
outsl
xchg
sbb
cmc
jb
test
in
mov
out
jbe
pop
jg
popf
outsb
inc
sub
scas
filds
add
ret
xchg
pop
in
rcll
fs
out
punpckldq
mov
aam
sub
dec
cmc
int3
mov
xor
fs
pop
cmc
pop
fidivs
std
xchg
es
xlat
mov
dec
gs
fisttps
push
adc
insl
adc
sub
mov
cld
call
adc
push
push
or
sub
loopne
jns
nop
xchg
movb
jle
xor
fs
mov
jne
fs
outsb
fists
nop
pop
xor
cmpsb
imul
adc
cs
sub
lods
icebp
dec
cltd
and
add
cmp
imul
out
mov
mov
movsl
stc
sub
dec
add
add
lret
adc
add
push
pop
push
sbb
xchg
ljmp
scas
dec
sbb
ss
cwtl
adc
cmp
repz
pop
add
fmuls
jle
insl
jp
ja
inc
sub
scas
cmp
mov
or
ds
notl
push
jecxz
loopne
cmp
addr16
cwtl
pusha
sub
push
pop
sahf
mov
mov
ljmp
clc
mov
xchg
fistpll
xor
adc
push
sbb
jg
cmp
adc
push
icebp
adc
fldln2
addr16
add
es
out
rolw
sbb
lahf
mov
pusha
xorb
mov
mov
cmp
cmp
pusha
jno
ja
stos
lds
dec
cltd
push
pop
xchg
push
sbb
loope
or
pop
jo
cwtl
cmp
inc
shll
enter
js
add
dec
stc
mov
ljmp
ds
add
add
dec
sbb
xor
faddl
pop
int
or
sub
add
fildl
push
fsub
lret
jmp
mov
inc
loope
js
loope
cld
xchg
pop
xor
mov
adc
lret
pushf
xor
fwait
inc
lea
loop
cltd
popa
cltd
adc
repz
lds
shlb
mov
mov
in
dec
or
ja
scas
loope
xor
stos
frstor
or
mov
out
insl
ss
inc
jle
mov
xchg
lds
std
or
data16
cs
movsb
nop
leave
sahf
cs
inc
pop
fdivl
push
popa
mov
or
int3
loop
test
cmp
jae
je
shll
adc
lahf
in
adc
jle
inc
nop
sti
std
loop
leave
mov
cmpsl
push
xchg
cmp
jnp
cmp
xchg
int3
inc
jne
movb
add
jg
cld
lcall
lret
add
add
test
cltd
inc
shll
push
adc
in
loop
cmp
lods
inc
pop
mov
add
test
es
xchg
xchg
pop
in
dec
lret
es
inc
jne
cmp
mov
dec
jb
xor
dec
outsb
adc
sbb
and
stos
mov
cmpsb
stos
jnp
pop
call
mov
imul
push
push
add
loopne
push
out
inc
mov
cli
imull
es
adc
rcrb
push
loope
and
stos
xchg
mov
addr16
or
data16
cwtl
loope
mov
or
loope
lock
push
sbb
ja
mov
shll
pushf
scas
mov
cmpsb
mov
and
pop
push
aad
cmp
pop
subl
mov
dec
or
dec
xchg
out
push
in
jno
push
mov
call
push
arpl
mov
add
xlat
xchg
add
add
xchg
mov
pop
movsb
movsb
clc
and
add
add
pop
xchg
adc
js
fidivrs
inc
test
std
loopne
lret
xchg
sbb
imul
xchg
movsl
xchg
sti
dec
pop
jge
cmp
aad
inc
test
fwait
xchg
shr
push
daa
dec
inc
add
push
and
pop
scas
icebp
adc
xor
and
inc
mov
stc
or
push
filds
les
mov
fdivrl
pop
and
data16
sbb
movl
dec
xor
sahf
jb
add
daa
sub
push
fucomp
scas
insb
in
inc
movsl
cli
stc
fsubr
xor
mov
adc
bound
mov
inc
jnp
xor
dec
dec
lahf
xor
or
mov
loop
into
into
bound
es
fucomip
mov
aaa
sbbl
mov
ja
lcall
loope
jp
inc
xchg
jge
shrb
inc
in
push
ret
or
addr16
add
or
mov
and
adc
dec
push
add
add
adc
xchg
mov
mov
jbe
lret
repz
test
sub
mov
ljmp
adc
dec
cmp
pop
sub
sub
aad
pusha
pop
sub
pop
cmpsl
inc
mov
xchg
xor
cmp
push
inc
fistpll
push
xchg
data16
shrl
fcomip
and
repz
cmpl
out
dec
sub
inc
mov
aam
jg
mov
lds
js
aad
push
add
mov
addr16
rep
mov
mov
pop
gs
pushf
pop
sub
pop
mov
adc
in
pop
push
icebp
outsl
xchg
das
dec
and
enter
sahf
incb
sub
je
iret
dec
xchg
iret
rorb
adc
mov
outsb
imul
popa
and
je
pop
aad
push
mov
outsl
jmp
sub
int3
add
add
sub
cmp
ret
or
mov
push
add
add
sub
and
jo
mov
aam
stos
js
inc
dec
fisttps
aaa
adc
imul
nop
or
adc
dec
mov
add
push
gs
mov
push
xchg
add
ret
int
popf
mov
push
in
jg
xchg
xchg
jg
cld
jnp
sbb
sub
pusha
mov
mov
mov
popa
dec
insl
les
xchg
pop
loope
mov
push
adc
jo
jl
or
ljmp
nop
aam
dec
fwait
mov
or
cmp
sbb
or
add
push
inc
pop
icebp
xor
loopne
push
inc
lds
cmp
xor
dec
adc
call
or
jnp
push
stos
mov
and
or
sub
xor
cmpsb
lcall
push
jecxz
mov
and
push
pop
lret
add
add
push
shll
out
pop
pop
pushf
push
test
and
add
popf
frstor
test
shrl
popa
xor
cmp
pop
pop
shr
cli
fidivrs
sbb
xor
andb
sbb
or
rcl
push
jne
jmp
mov
xchg
into
adc
cmc
cmc
ds
into
paddusb
scas
push
pushw
sub
cld
xchg
cmp
jl
subb
push
lods
and
insl
mov
notl
ds
sub
and
ja
xor
lret
jnp
shll
xor
sbb
or
inc
stos
or
push
inc
repnz
or
sbb
sar
pop
inc
jecxz
addb
fldcw
jl
xor
jge
inc
test
cltd
into
rcrb
dec
xor
imul
mov
inc
pop
addr16
inc
cltd
repnz
les
and
enter
nop
mov
add
out
lcall
hlt
mov
xor
pop
push
add
add
pop
or
mov
int
inc
jns
or
into
adc
nop
insl
cld
dec
test
pop
mov
sbb
sub
jp
stc
pop
loope
mov
enter
inc
xor
call
jmp
mov
sbb
int3
adc
cmp
mov
sbb
cmp
aas
xlat
jp
xchg
mov
jge
test
jp
adc
xor
dec
or
sbb
cld
cmp
dec
pop
add
clc
fdivrp
pushf
mov
mov
lods
mov
xchg
scas
repz
xchg
int3
and
fldt
mov
imul
loop
dec
mov
testl
add
andl
adc
mov
mov
sub
stos
xchg
sbb
movsl
push
std
xor
sub
jns
enter
pop
int
pop
mov
add
imul
add
jbe
idiv
imul
mov
add
add
add
jb
mov
sbb
push
es
xchg
pop
rclb
and
xor
stos
cmp
icebp
mov
mov
sti
or
ljmp
movsl
or
push
add
lea
pop
xchg
in
scas
sbb
inc
push
dec
jno
sub
js
xor
mov
xorb
or
bound
hlt
enter
jp
fs
addb
aad
pop
push
pop
fcomps
or
cli
sti
pushf
out
lods
mov
push
out
or
rcl
pop
popa
inc
and
rorl
inc
push
dec
push
dec
jae
xor
movsb
out
or
gs
dec
pop
jnp
rcl
ss
fidivrs
add
dec
lret
mov
adc
movsl
lock
jns
aaa
mov
das
jg
fwait
push
pop
adc
adc
loopne
jo
xor
push
mov
cld
lea
jae
add
jae
fwait
cmp
stos
sarb
push
add
add
shll
xchg
into
int
sbb
xchg
insl
in
jne
or
je
mov
pop
mov
and
sarb
loope
adc
ret
rorl
fisubs
dec
jbe
inc
movsl
mov
bound
jbe
cld
xor
leave
sahf
test
fs
repz
push
arpl
push
dec
jnp
xor
jle
dec
sub
ja
mull
mov
test
gs
scas
inc
div
imul
cmp
mov
cmp
test
pop
cwtl
test
mov
data16
push
xor
cld
fldcw
adc
mov
out
mov
ret
imul
hlt
daa
mov
jnp
fnsave
rol
enter
and
inc
clc
pop
push
int3
setb
xor
jne
pop
add
add
pop
mov
mov
in
jmp
cmp
pusha
gs
mov
push
mov
add
add
clc
mov
and
hlt
pop
inc
jbe
imul
add
in
inc
mov
outsb
int3
enter
dec
mov
fs
or
into
ret
xchg
mov
ljmp
pop
sub
xor
clc
int3
ret
inc
push
xchg
stos
adc
das
sbb
or
inc
sub
push
dec
lcall
mov
or
cmpsl
xor
sahf
orl
out
jne
cmpsb
pop
fnstcw
js
out
mov
adc
aad
fdivl
add
ret
mov
lret
mov
mov
add
adc
inc
sbb
lds
push
push
pop
cs
scas
mov
sbb
and
lods
cltd
xorl
pop
inc
bound
lcall
stos
ds
xchg
adc
fs
shlb
cs
pop
lret
pop
cmp
mov
out
sbb
xchg
pop
xlat
stos
mov
fstpl
fcmovne
inc
negl
pop
mov
and
jb
adc
pop
addb
add
scas
xchg
push
adc
out
mov
sbb
pop
add
add
out
aaa
mov
std
mov
outsl
adc
mov
es
fcomp
jge
jne
out
imulb
mov
out
jo
sub
dec
scas
jg
xor
sarl
cmpsb
leave
leave
imul
je
rcll
add
pop
ljmp
mov
push
ss
mov
je
push
cs
mov
mov
pcmpeqb
inc
fs
enter
imul
and
push
xchg
and
pop
jnp
mov
cmpsl
cmp
sti
cmp
mov
and
pop
jle
ljmp
dec
mov
pop
cltd
movsb
imul
imul
cmpsb
and
std
pop
mov
xor
js
rolb
cmp
fadds
inc
lods
mov
jle
lahf
cmc
or
dec
mov
sub
jns
dec
arpl
ja
sub
pop
ja
jle
and
in
jmp
xchg
lcall
push
add
add
mov
lds
aad
arpl
ljmp
add
add
dec
push
ficomps
dec
data16
popf
sbb
movsb
mov
fucomip
movsb
pop
sbb
fmuls
inc
inc
push
lcall
lret
rcrl
popa
outsb
dec
sub
cmp
push
lea
mov
pop
enter
xchg
scas
dec
or
push
xchg
mov
and
mov
pop
cmpsl
out
divb
xchg
imul
scas
aad
int
push
mov
dec
xchg
rcl
addl
stos
add
pop
std
dec
aad
xchg
sub
out
jmp
outsb
cwtl
iret
pushf
xchg
xor
xor
sahf
test
scas
and
xchg
push
inc
scas
lcall
mov
xchg
mov
shl
push
mov
inc
push
aas
ds
roll
test
mov
xchg
jg
push
xchg
xor
fistpl
mov
push
mov
push
xchg
mov
push
push
dec
lcall
mov
and
das
cmp
pusha
in
dec
mov
pop
add
add
pop
jnp
dec
adc
fdivp
and
xor
add
lds
jmp
dec
lds
add
cmp
es
sub
rcll
bound
xchg
loop
inc
cmpsl
fldcw
lret
sub
insb
mov
shl
popa
push
mov
pop
cmpsb
je
rorb
sbb
sub
pop
sub
push
adc
adcl
mov
or
mov
pop
iret
fisttps
insl
add
les
and
pop
push
shl
mov
loopne
and
ret
movsl
push
movsl
xor
jb
iret
mov
sub
mov
movsb
pop
push
jp
sbb
shrb
inc
in
xchg
test
repnz
xor
jo
jns
nop
sbb
add
sbb
testb
outsl
dec
dec
sbb
dec
int
cli
mov
adc
push
into
cmp
jnp
sahf
dec
stc
mov
add
add
movsb
jae
jnp
mov
ja
mov
jmp
xchg
add
add
xchg
pop
ret
lahf
xor
inc
lods
cmp
outsb
jmp
in
push
xchg
shlb
mov
call
dec
add
ljmp
mov
cmpsl
or
lock
loopne
popa
cmp
in
cmp
ljmp
test
cli
push
mov
fimull
lcall
fildl
aam
and
lret
ljmp
out
mov
sbb
jbe
in
nop
xchg
xchg
enter
dec
insl
inc
push
and
push
outsb
xchg
daa
inc
sub
push
jecxz
pop
rcr
xchg
mov
add
jbe
mov
jae
dec
daa
add
push
test
rcrl
inc
add
ds
daa
sub
adc
push
cs
fidivrs
mov
add
inc
imul
lahf
inc
in
loopne
mov
aad
inc
je
lods
pop
pop
add
scas
cmp
add
fbstp
scas
adc
lahf
xlat
out
cld
push
cmp
filds
add
in
js
out
jl
lret
gs
push
sub
in
sar
xor
xchg
xor
mov
jl
xlat
iret
aaa
xchg
or
dec
je
or
push
and
mov
dec
jmp
cmp
or
insb
mov
pop
push
adc
sarb
enter
lahf
sbb
into
in
push
push
js
xchg
xchg
xchg
xchg
push
dec
fildll
xchg
nop
ja
adc
cli
fisttps
jne
es
aas
or
lods
call
push
sarb
roll
mov
test
js
insb
addr16
out
jo
mov
cmp
xor
aaa
pop
or
shrl
sti
shll
shll
and
fnstsw
pop
lahf
aaa
push
por
pop
rcr
ror
scas
loope
xor
int3
push
xchg
fsubl
lea
xlat
loope
rcr
adc
lock
sbb
mov
dec
ss
xor
mov
pop
fldl
add
mov
mov
in
mov
add
add
mov
cmp
shrl
and
sub
clc
cmp
test
icebp
sub
xor
pop
sub
and
pop
adc
push
push
mov
fbld
inc
lret
adc
aad
fldt
lods
pusha
sbb
insl
cmc
lret
pop
dec
inc
lds
dec
add
imul
push
lret
imul
or
cltd
scas
es
stos
es
add
insl
mov
ret
out
fildl
and
xchg
sbb
xchg
out
adc
cmc
arpl
clc
jle
repnz
mov
jb
xchg
es
int3
aaa
pop
sbbl
sbb
mov
lea
mov
loopne
jno
xchg
lea
test
push
cli
int
fsubrs
adc
int
ror
or
add
out
into
push
push
inc
lahf
mov
mov
add
insb
gs
fadds
jle
pop
sahf
fdivrs
movsb
mov
daa
cli
cmp
push
add
int
andb
sub
mov
mov
or
insl
xlat
inc
std
mov
sub
and
aam
push
mov
dec
call
cmp
in
adc
fdivrl
and
out
push
and
mov
adc
jg
or
add
jp
enter
mov
xor
and
xchg
adc
mov
cmc
push
push
or
and
pusha
inc
popf
ret
mov
mov
aas
arpl
test
push
xchg
ret
pop
add
adc
fmull
jge
mov
jl
add
outsb
aad
pop
fdivrl
jecxz
sbb
stc
js
daa
das
fidivl
lret
sbb
dec
imul
add
and
mov
jg
or
xchg
pop
add
add
div
fucomp
inc
push
andl
pushf
mov
pop
ror
lahf
and
mov
lcall
cmp
imul
dec
mov
stos
imull
pop
ss
mov
cmpsb
cmp
stos
adc
addl
into
sti
sub
pop
adc
cmp
pop
inc
cmpl
lea
ret
inc
movsb
dec
jecxz
pop
push
adc
pusha
in
and
or
sub
pop
ja
movsb
pusha
stos
push
cli
mov
inc
scas
cmpsl
sbb
or
inc
into
dec
push
sbb
lret
outsb
ret
mov
sub
mov
push
ljmp
daa
cmp
mov
popa
inc
sbb
das
popf
cmpsl
jle
fimuls
into
mov
mov
imul
mov
mov
or
sbb
test
push
pop
hlt
xchg
add
add
lahf
pop
cmpsl
jne
mov
jmp
add
add
or
mov
adc
sbb
out
mov
aad
lods
stc
icebp
out
jno
loop
xchg
cli
sbb
and
and
xchg
add
ljmp
pop
popf
out
pusha
cmp
movsb
dec
aas
push
xor
loope
xor
mov
inc
js
pop
mov
xchg
mov
mov
mov
dec
fldenv
sbb
mov
movsb
sti
loopne
mov
lods
jecxz
and
js
sbb
cmc
mov
stos
and
loope
push
jmp
fldenv
inc
and
out
fwait
mov
mov
cmpb
cs
dec
adc
or
fnstsw
cmc
fisubs
pop
daa
jns
cmp
lcall
ljmp
jb
fadd
out
mov
pop
push
out
cld
cmp
stos
cld
sub
mov
mov
lret
mov
push
notb
or
mov
loop
add
sahf
pop
testl
sbb
add
dec
pushw
mov
sbb
sub
add
xor
push
inc
loopne
dec
add
mov
hlt
jg
out
dec
cltd
jno
lahf
out
sti
jnp
pop
xchg
adc
addr16
jb
into
notl
adc
xchg
pop
roll
xchg
data16
sbb
mov
iret
jle
add
adc
imul
sbb
add
add
imul
outsb
xlat
mov
add
mov
ss
imulb
nop
xchg
or
pop
in
inc
mov
fsubs
jecxz
add
fstl
int3
stc
sbb
and
rcrb
lods
add
sbb
enter
push
jg
mov
hlt
rol
ja
xor
cld
les
sub
mov
cmp
add
inc
inc
add
aas
mov
movsl
add
add
add
pop
mov
fstps
cltd
sbb
add
add
inc
and
sub
push
repnz
or
cmp
decb
pop
cmp
scas
sub
pop
movsb
cmpsb
push
inc
xchg
sbb
aad
lea
outsl
lds
pop
xchg
mov
aaa
ret
sub
or
shrl
cmp
xchg
fistpll
outsl
push
or
test
inc
bound
stos
int
inc
mov
mov
call
push
rcl
dec
inc
push
cltd
outsl
int3
and
das
jecxz
dec
jle
gs
or
push
orb
iret
push
jmp
dec
daa
cmpsl
lods
or
in
xchg
in
push
pop
sbb
mov
nop
xchg
sub
cmp
std
push
lret
adc
in
mov
xchg
fstp
inc
add
hlt
xor
shlb
dec
loop
or
xor
and
loop
bound
adc
mov
mov
sbb
repnz
add
repnz
movsb
jle
arpl
and
arpl
add
and
xchg
mov
xchg
mov
in
mov
jb
fisubrl
sbb
add
inc
push
mov
outsl
les
icebp
hlt
mov
pop
push
and
xchg
push
mov
pop
fcmovbe
mov
lret
add
cmp
cmp
fists
mov
and
insb
pop
cmp
rcrb
cmp
lret
andb
add
add
popa
mov
jnp
and
call
testb
dec
or
lahf
inc
or
hlt
test
and
jl
in
mov
dec
cwtl
int
je
cmp
clc
mov
jns
jge
push
scas
mov
xchg
pop
fs
add
push
push
insl
in
ret
mov
jno
adc
inc
icebp
and
in
decb
pop
loope
sbb
out
inc
loope
insb
scas
mov
jae
je
loopne
dec
mov
mov
adc
add
add
jmp
sub
xchg
or
add
add
cltd
imul
nop
outsb
ja
and
ds
pop
movsb
inc
ret
leave
mov
pop
jne
dec
iret
sarb
movsb
paddsw
xchg
pop
divb
xchg
inc
lea
sub
pop
lock
jae
into
mov
xor
ss
add
jecxz
push
jae
adc
add
xor
mov
pop
jmp
popf
sarl
dec
xor
pop
xchg
inc
cmc
je
mov
loop
cmpb
cmc
rcr
mov
push
popf
jae
mov
jns
test
les
mov
jne
ret
data16
xchg
cmc
xchg
testb
mov
jae
jo
cmpsb
cs
imulb
sbb
pop
lahf
int
jno
imul
pushf
aam
pop
cmp
sbb
sub
dec
xchg
outsb
mov
sub
jae
sbb
or
out
sbb
mov
repz
test
dec
mov
mov
add
shll
fnstenv
jo
aaa
pop
mov
add
add
pushw
jne
or
daa
mov
dec
pop
and
mov
fs
stos
movsl
in
test
hlt
bnd
adc
dec
dec
push
popa
sbb
out
fidivs
pusha
xchg
sbb
mov
out
cwtl
rcll
ds
or
into
movsl
inc
iret
cmpl
adc
ss
add
fsts
jge
cmp
pop
push
add
inc
mov
lcall
sub
inc
mov
sahf
xor
fisttpl
add
stc
or
addr16
sbb
dec
into
leave
mov
xor
mov
je
mov
adc
insb
or
stos
pop
aad
add
jle
push
jg
cld
xor
pop
dec
imul
fidivrl
mov
add
fbstp
xchg
insl
enter
fdivrs
jno
insb
gs
xor
lods
push
outsb
out
jle
repnz
jecxz
add
cld
je
jbe
jns
sbb
movsl
rcl
mov
add
add
and
xchg
loopne
mov
movsl
xchg
leave
fstpt
je
js
mov
jle
mov
dec
js
lcall
mov
cltd
lods
or
jns
test
push
jnp
dec
dec
lods
divl
rcrb
mov
into
out
leave
sbb
stos
out
jnp
push
pop
cmpsb
pop
and
rorl
push
shlb
push
sub
jno
cmp
sbb
repnz
loopne
or
std
leave
pop
imul
inc
jns
les
xchg
cmc
dec
sub
xor
push
mov
push
addr16
pop
cmp
imul
adc
jge
movd
repz
mov
pusha
scas
and
jle
push
sub
inc
lcall
xlat
outsl
or
cmpsb
jecxz
and
sbb
mov
sbb
in
roll
cltd
push
lret
enter
xor
fisubs
mov
in
xchg
sbb
push
dec
mov
push
cltd
jmp
fildl
or
out
add
add
cltd
mov
xchg
and
cmc
out
jmp
rolb
xchg
xchg
leave
adc
mov
fs
fwait
cmp
xor
mov
loop
jns
pop
fistpl
ja
sub
das
add
push
out
out
cld
adc
jecxz
mov
cmp
outsb
inc
mov
push
mov
test
dec
xchg
stc
jmp
clc
stc
pop
or
js
jmp
add
pop
jne
pop
cmpsw
fsubrl
pop
lcall
xor
test
xlat
mov
sub
out
or
imul
aad
or
lcall
hlt
push
fst
out
push
pop
mov
mov
fisubrl
jmp
mov
xlat
imul
gs
or
shlb
mov
adc
dec
ret
out
add
iret
add
popa
mov
nop
mov
scas
sub
stos
add
add
push
jg
dec
xchg
dec
jns
mov
shrb
add
mov
or
addr16
loopne
call
mov
clc
cmp
sarb
dec
push
mov
shrb
add
push
add
pushf
mov
cli
push
ljmp
ret
sub
movsb
mov
cmp
fsubrl
insl
or
out
sbb
xor
sub
lret
sub
add
jo
sub
jbe
jae
push
int3
jecxz
push
xchg
and
dec
jne
fldt
adc
int3
ljmp
shlb
inc
inc
push
cld
loop
aas
repnz
pop
ret
mov
mov
fnstcw
jns
nop
adc
jb
add
aad
rolb
inc
xchg
push
lret
es
fdiv
push
inc
ret
mov
aaa
jne
or
cmpsl
ja
mov
sbbl
mov
in
ret
adc
sarb
daa
in
adc
sub
cmp
add
iret
mov
fucomip
push
insb
xor
inc
jae
adc
imul
add
sti
int
mov
es
xor
aad
pop
cmp
ja
and
test
jne
fists
push
loope
cmpb
inc
movsl
mov
js
dec
lahf
out
add
pushf
pop
lods
xor
imul
jbe
inc
inc
pop
jp
insl
xorb
gs
into
push
and
lcall
rcrb
xor
push
lahf
pop
icebp
mov
jnp
data16
pusha
insl
lret
or
pop
jbe
push
fcomps
repz
lahf
mov
movsl
test
negl
mov
fwait
cli
adc
test
popf
ja
push
movsl
cmp
cmpsl
loopne
jne
adc
push
pop
sub
pop
rorb
jp
in
jo
sub
pop
mov
sahf
orb
jmp
aam
mov
ficomps
xor
imul
dec
out
iret
jmp
aas
in
push
rorw
add
add
add
nop
xor
xchg
xor
sub
fs
mov
cmp
push
mov
addl
aas
dec
jg
inc
jecxz
ds
pop
jb
dec
arpl
add
out
jno
bound
sti
fimull
pop
jbe
mov
cmp
subb
aad
add
scas
int
test
push
jne
stos
dec
inc
xor
or
cltd
insl
data16
int
cwtl
mov
cmpsl
ja
ds
xchg
jmp
lret
mov
xor
in
popf
pop
mov
enter
push
mov
adc
xchg
ret
fwait
rcl
in
jnp
adc
xor
test
test
sbb
lods
lds
cmpsl
cmpsl
xor
outsb
sub
fdivl
mov
push
mov
ret
mov
jns
jmp
cltd
repz
nop
lahf
mov
sbb
xchg
mov
add
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
push
iret
imul
add
addb
adc
mov
dec
or
push
test
popw
or
push
pop
hlt
pop
xchg
xor
jbe
jnp
pop
mov
fsubs
xor
mov
cmp
sbb
pushl
and
push
movsl
loop
pop
into
push
inc
out
sbb
xor
lret
inc
jecxz
push
mov
loope
bound
or
jp
mov
ljmp
pop
and
mov
outsb
adc
sub
xor
in
push
add
ss
cmp
scas
arpl
push
cmp
pop
inc
mov
outsb
and
loope
int
pop
fnsave
inc
test
push
push
cltd
sbb
stos
sbb
and
push
in
aad
push
xor
mov
cltd
mov
push
cmp
xchg
popf
test
add
cmp
xchg
mov
cwtl
mov
in
lods
imul
neg
std
sub
dec
pop
jb
dec
aam
add
add
xor
fcmovnu
fdivs
dec
and
test
cmp
xor
push
ret
push
sbb
mov
not
icebp
out
in
lds
mov
mov
ret
xor
jae
and
or
xor
mov
sarl
fstps
sub
add
data16
andb
lret
fnstcw
jb
or
jmp
inc
sbb
js
xchg
stos
jns
jne
scas
add
xchg
push
int
cmc
pop
out
mov
cmc
pop
push
mov
add
sub
add
inc
xor
addl
mov
lahf
push
movsb
hlt
dec
pop
fisubl
mov
add
test
cli
dec
sbb
loope
cmpsb
sbb
sbb
push
cld
out
jne
cmp
push
xchg
cmpsb
dec
inc
pop
xchg
sarl
push
subb
in
push
mov
dec
inc
into
fldcw
add
iret
adc
jle
inc
mov
cltd
insb
lock
lret
inc
xchg
iret
and
push
or
jle
shll
test
xchg
movsl
dec
hlt
scas
pop
cs
outsb
cli
cmp
pop
dec
dec
int3
imul
xchg
jb
out
xchg
pop
cld
cwtl
cmp
out
int3
das
dec
stc
int3
adc
mov
cli
xor
arpl
mov
das
aaa
sub
adc
cs
jbe
std
xchg
aaa
aaa
repnz
in
xchg
mov
pop
jmp
add
mov
imul
fisubrs
sbb
popf
rolb
lcall
push
jbe
mov
cmp
mov
xor
mov
xor
imulb
dec
ret
std
hlt
sarb
dec
imul
xchg
loop
pop
lahf
jns
pushf
push
ret
cld
push
or
in
add
jno
andb
mov
dec
ss
mov
sub
inc
add
add
ja
out
sbb
cmp
outsb
add
add
jecxz
xchg
imul
add
jne
loopne
ds
xchg
pop
setns
in
add
dec
sub
fdivrl
inc
sahf
jl
push
cmpsl
mov
jo
icebp
sub
int3
movsl
pop
and
hlt
sub
iret
push
out
aaa
inc
push
jecxz
xor
mov
mov
cmp
int
iret
mov
popf
notl
clc
add
movsl
push
lcall
pop
xor
xor
jle
out
roll
and
cmpsl
sub
lret
add
push
insb
outsl
adc
xor
mov
std
cld
mov
stc
stc
sub
lret
sbb
insl
xlat
inc
fdivl
repnz
mov
pcmpgtw
pushf
inc
add
adc
jne
jns
rol
hlt
decb
mov
inc
sahf
pop
jecxz
pusha
add
sbb
push
inc
loopne
cmpsl
out
sbb
stc
mov
add
add
sub
ja
mov
mov
add
add
jbe
mov
mov
popa
nop
shll
sub
es
daa
xor
jbe
mov
cld
mov
popf
inc
enter
scas
fscale
pusha
sbb
pushf
clc
shl
rcrl
adc
mov
add
jae
push
or
and
pop
cmpsb
cmp
pusha
push
push
dec
and
imul
data16
es
jmp
fsubr
out
test
jp
gs
mov
push
mov
mov
fstpl
and
testb
push
jb
in
ret
flds
xorl
movsb
in
pop
addr16
jle
mov
or
stos
les
lahf
pop
cltd
add
fistpl
cmp
xorl
xchg
movsl
mov
cmc
xor
mov
mov
subb
repz
inc
adc
pop
xor
xor
gs
mov
lods
idivb
and
jmp
test
add
int
mov
jnp
outsl
cmpsb
loopne
dec
xchg
xlat
call
add
add
mov
pop
xchg
divl
and
mov
and
mov
dec
jge
mov
xchg
add
add
mov
xor
loop
jno
rcl
leave
mov
cld
cmpxchg
rcl
pop
mov
pushf
mov
dec
dec
fistps
pop
mov
mov
or
fwait
scas
lahf
sub
imul
arpl
ja
push
add
nop
or
lea
and
imul
es
das
enter
rcrb
fcmovb
push
add
pop
jl
popf
cld
cmp
jmp
jge
sbb
mov
enter
jp
sbb
cltd
sub
jae
pop
insb
cwtl
or
mov
mov
mov
jmp
mov
shll
cwtl
sub
lods
pushf
shrb
dec
add
add
cli
xchg
jle
push
je
test
shlb
in
jno
add
push
add
pop
dec
jno
mov
out
inc
int
daa
inc
pop
js
hlt
test
inc
jp
test
arpl
divb
lret
fcompl
push
es
xlat
add
mov
push
jp
je
dec
loopne
orb
xchg
fwait
sbb
das
lods
insb
popf
rcll
loope
test
popf
pop
ljmp
ds
sub
lock
js
aam
dec
js
stc
in
fstps
pop
scas
cmp
mov
lcall
fbld
cmpsl
adc
das
bound
add
shrb
mov
idivl
scas
cwtl
iret
inc
repz
loop
mov
push
fidivl
dec
out
push
loopne
test
mov
mov
scas
xor
outsl
icebp
cmp
add
lds
repnz
lds
arpl
sahf
and
dec
jns
mov
jg
int3
push
mov
dec
clc
arpl
scas
orl
add
add
fwait
jnp
aad
sbb
xor
add
pop
int3
push
scas
pop
xchg
sbb
in
inc
mov
mov
loope
scas
mov
pop
ljmp
jo
push
push
xchg
divb
add
jno
std
call
and
xchg
pop
mov
and
inc
rol
jnp
cld
push
mov
pop
cmp
js
ds
adc
sub
sub
push
sub
xlat
adc
mov
frstor
pusha
ljmp
cmpsb
adc
nop
lock
out
cmpsl
xorb
les
andb
mov
pop
push
inc
aas
or
xlat
xor
out
frstor
int3
fadd
mov
arpl
stos
int3
sub
hlt
dec
lods
lods
mov
cmp
in
mov
cmp
aam
fst
xor
std
jbe
mov
sbb
sub
stc
cmpsb
pop
test
aaa
add
cmp
dec
jno
stc
int
lahf
sbb
add
add
std
mov
sub
or
jae
add
stos
repz
sarb
xor
xchg
ret
inc
mov
scas
in
mov
mov
push
out
and
pop
into
pop
arpl
icebp
xor
and
cmp
rorl
lea
inc
jle
enter
stos
ret
push
dec
inc
stos
sbb
and
jo
cltd
fnsave
mov
dec
mov
fisubs
mov
addr16
sbb
xchg
subb
push
jae
sahf
test
cli
mov
dec
or
iret
cmp
mov
adc
pop
add
jb
decb
cmp
out
xor
push
cmp
mov
mov
inc
sub
xor
push
out
pop
rorl
cmpsb
pop
mov
cmp
pop
stos
cmp
push
mov
jg
dec
push
mov
pop
jp
mov
lahf
cmpsb
mov
loopne
and
movsb
je
jl
push
xor
into
pop
fsubrl
ret
adc
add
adcl
xchg
fisttps
mov
addr16
je
add
add
xchg
mov
and
adc
adc
lods
pop
mov
mov
push
addr16
aas
jmp
xlat
cmp
stc
daa
aas
xchg
adc
sbb
xlat
jmp
jge
loope
stos
popa
inc
xchg
mov
les
ret
mov
cltd
test
mov
int
and
insb
lea
testl
lock
jbe
xchg
and
mov
inc
jl
mov
in
cltd
adc
in
mov
je
sbb
daa
push
cmpsb
inc
mov
pop
and
jle
jmp
mov
mov
add
add
icebp
and
call
xor
inc
mov
rcr
repz
lret
pop
sti
mov
movsl
and
xchg
dec
sub
mov
mov
mov
xchg
jae
mov
dec
xor
add
add
bound
sub
sbb
jbe
add
or
cmp
scas
call
movsb
inc
scas
ret
in
add
leave
rcl
inc
int3
subl
aam
outsb
je
or
inc
call
sub
add
dec
jo
adc
cwtl
stos
pushf
nop
adc
cltd
popa
and
and
push
xlat
xorl
pop
mov
push
lock
enter
mov
dec
insb
cmp
pop
fmul
cltd
adc
add
sub
sub
ret
sub
jmp
test
pop
push
adcl
jbe
and
sub
test
dec
xchg
aam
imul
xchg
lods
push
lods
inc
jmp
mov
sbbb
dec
aaa
sbb
dec
jae
sbb
pop
loopne
pop
int
sub
jg
mov
inc
and
pop
push
or
add
xchg
pop
push
dec
sub
add
add
divl
in
sub
push
ja
add
fstp
insl
mov
xor
cmp
or
pop
and
not
out
repnz
jnp
lret
jle
daa
test
and
jb
rcrl
dec
mov
sub
movsl
jo
xlat
mov
mov
add
xchg
pop
imul
mov
lods
sub
cmp
mov
mov
and
inc
ret
inc
sbb
lret
add
lock
aam
mov
les
cmp
subb
push
xor
imul
daa
je
leave
xchg
out
or
repz
and
fiadds
test
pop
sbb
arpl
xor
pop
jne
pop
sbb
shlb
xor
inc
add
daa
ret
push
test
add
cld
add
sbb
ret
in
xchg
js
adc
dec
stc
mov
cmc
dec
ljmp
cmp
add
clc
fisubs
mov
mov
stos
pop
or
add
clc
sti
loop
in
fstpt
mov
outsb
test
stc
add
pop
fnstcw
xchg
in
jge
ss
stos
cmp
xchg
mov
int
jp
fistl
sahf
jne
sub
xor
out
leave
lods
cmp
mov
xchg
pop
inc
loop
or
and
and
cmpb
roll
jns
jp
jne
ja
xchg
dec
mov
lret
fldl
jb
mov
xchg
xchg
xchg
pop
lahf
dec
cmpsb
xchg
sbb
lret
sub
subb
add
fbstp
mov
jnp
inc
std
dec
inc
add
sbb
add
dec
jmp
mov
shrb
dec
mov
addr16
xchg
mov
cmp
xchg
mov
cmp
icebp
add
xchg
jp
inc
pop
add
stc
mov
mov
cmpsl
or
mov
shlb
mov
pushf
popl
adc
add
scas
fidivs
and
idivb
out
and
out
cli
cmc
dec
fstpl
mov
adc
jg
int
inc
iret
or
push
cmp
dec
idiv
xchg
sub
sarl
jl
mov
and
repz
fnstenv
andl
push
je
jecxz
jp
in
mov
sbb
fidivrl
sbb
jb
pop
mov
sub
mov
and
mov
into
cli
xor
fsubp
and
mov
pop
mov
sahf
sub
xchg
jns
cmc
mov
mov
inc
pop
or
xchg
ret
movsl
sub
dec
negb
arpl
cltd
flds
add
xchg
int
sarl
call
push
or
pop
xor
repnz
push
cmpsb
inc
jb
cmp
adc
loope
pop
inc
push
rorl
insl
sbb
rcrb
cmpl
xchg
xchg
add
add
testl
outsb
adc
add
add
loope
xor
push
cld
mov
and
adc
faddl
jl
mov
mov
pop
rcrl
mov
cmpsl
push
push
fiaddl
addr16
mulb
rcrl
xor
pop
adc
sub
notb
loope
xchg
enter
and
arpl
mov
jle
xor
ror
repz
pusha
jb
es
adc
aaa
cmp
hlt
mov
stc
xchg
in
imulb
jge
sbb
cmp
fists
pop
fistps
jle
bound
pushl
hlt
out
movsb
add
into
xchg
loopne,pt
xchg
jbe
shll
sub
fs
cld
shl
pop
lea
lods
and
shll
and
jb
fimull
push
push
jo
in
add
push
mov
dec
pcmpeqw
push
inc
addr16
and
add
jo
ja
std
stos
sbb
ljmp
add
add
mov
clc
cmc
jns
and
pop
push
jecxz
mov
stos
popa
inc
push
and
ffree
dec
shlb
les
iret
mov
jmp
stos
mov
mov
pop
dec
pop
lahf
adc
stc
mov
add
in
jge
enter
xchg
fdiv
loope
mov
fdiv
call
ret
call
dec
mov
mov
or
lock
mov
shll
adc
test
pop
xor
addr16
out
jbe
push
jb
hlt
mov
insl
push
add
mov
inc
sbb
xorb
push
fisubl
adc
insl
sbb
loopne
cltd
push
stos
add
arpl
adc
xchg
inc
xor
popf
jl
xchg
sub
xor
outsl
sbb
and
cmp
popf
sbb
cltd
out
push
out
imul
xchg
xchg
repz
pop
fldln2
fwait
cli
inc
pop
sub
push
add
add
cmpsb
push
sbb
std
dec
pop
jl
add
fists
addl
into
out
xchg
xchg
insb
add
mov
fnstenv
lods
stos
testb
popf
sub
out
dec
jmp
fs
dec
pop
fildl
repnz
js
ror
loope
outsb
pop
fsubs
sub
xchg
jg
scas
mov
lret
loopne
outsb
test
and
add
cmp
mov
push
push
and
repnz
xor
sbb
fdivrl
test
pop
cmc
pop
in
or
lods
iret
cwtl
pop
je
mov
jnp
mov
stos
add
daa
mov
cmpsl
xchg
scas
mov
push
jno
sbb
dec
push
nop
xlat
mov
scas
pop
dec
mov
nop
addr16
int
add
xlat
xor
imul
movsb
sub
cmp
fidivrl
mov
lods
jns
push
cmp
add
mov
jb
push
out
popa
jle
cmp
add
xor
cli
mov
cli
or
add
add
inc
xchg
push
add
mov
into
orl
shrl
scas
jecxz
popf
sahf
mov
js
shll
fldt
jno
dec
bound
outsl
pop
inc
movsl
pop
cmc
jmp
xor
jp
arpl
sub
add
or
mov
fmuls
pop
xchg
ljmp
jbe
mov
fisubs
pop
add
pop
dec
or
fcmovu
mov
es
mov
in
icebp
into
xor
mov
fidivrs
cmp
aas
inc
mov
cltd
cli
in
cmp
mov
fdivr
rclb
cmp
lret
movsb
adc
inc
daa
shrb
int
out
fwait
sbb
or
or
call
pop
sbb
jbe
and
test
dec
push
and
xchg
and
int
or
outsb
iret
notb
adc
inc
hlt
js
inc
fcomps
cmp
mov
jge
or
mov
scas
add
add
test
lcall
inc
cmp
jle
add
fiaddl
jnp
in
fcmovne
xor
arpl
dec
filds
or
jg
push
sbb
inc
push
xchg
shrb
and
pop
dec
iret
ljmp
mov
fidivl
push
stos
iret
mov
push
fidivs
cmp
loope
mov
or
pop
mov
leave
cmp
adcb
push
movsb
xor
adc
rorl
xchg
cmp
aaa
ret
dec
sub
push
xchg
push
jle
fldl
mov
andb
jae
xor
outsl
inc
lret
ror
dec
mov
push
sbb
repnz
mov
aam
jmp
dec
mov
cmp
das
fucomp
movsb
call
lock
pop
xchg
lret
je
mov
cmp
int3
dec
std
jg
push
jns
jno
cmp
dec
dec
xlat
mov
fdivl
mov
lods
leave
and
jne
pushf
inc
add
add
testb
daa
mov
adc
jg
add
xor
sub
pop
add
popa
imul
sub
lods
mov
sub
ljmp
mov
xor
jo
adc
jmp
push
fidivrl
fsubrs
xor
shlb
and
addr16
mov
xchg
lods
sub
cld
push
jecxz
sahf
push
dec
daa
dec
or
loopne
cmp
mov
xorl
shlb
dec
push
paddq
dec
mov
xchg
sbb
mov
mov
shll
and
pop
dec
cli
repz
aad
adc
mov
out
pop
jmp
aam
push
test
mov
xchg
out
loopne
xchg
cmp
mov
and
pop
nop
ret
inc
shll
push
leave
pop
push
dec
mov
fstpl
into
cmpsl
sub
or
or
rorl
popa
adc
inc
adcl
sub
adc
insl
or
movb
add
lcall
and
push
loopne
addb
add
pushf
dec
xor
push
mov
and
outsl
arpl
pop
rolb
lds
nop
cmpsb
push
push
push
jb
xor
fidivl
test
pop
ja
mov
hlt
sbb
inc
leave
xor
popa
mov
and
call
xchg
shll
and
jae
call
jno
mov
or
push
adc
fsubrl
inc
jecxz
shrb
dec
sbb
push
pop
push
mov
mov
mov
push
pop
inc
ja
js
outsl
cmpl
fs
fwait
jb
xchg
mov
mov
xor
cmc
jbe
xor
xorb
lahf
inc
add
rcrb
jle
lea
push
in
xor
movsl
int3
rol
aaa
stc
icebp
mov
add
test
dec
or
lea
mov
add
add
mov
idiv
jne
iret
xchg
insb
dec
cmp
add
mov
ljmp
mov
mov
mov
xor
pop
push
cmc
sub
pop
cmpsl
pop
cltd
push
je
dec
sbb
mov
shll
add
scas
xor
and
ret
pop
mov
mov
sahf
cs
xchg
das
pop
jno
jg
pop
stos
sbb
pop
mov
mov
test
push
push
xorl
push
repz
mov
sahf
test
push
fnsave
fwait
shrb
aaa
pop
insl
cld
pop
shr
mov
pop
lret
push
cmpb
jecxz
mov
outsl
frstor
mov
roll
mov
inc
cltd
jg
jns
xlat
dec
fwait
sub
push
dec
leave
xlat
jle
or
in
and
movsb
leave
test
jo
mov
hlt
lods
lods
sub
aam
jns
arpl
dec
repz
out
shlb
mov
add
pop
mov
or
rcr
insl
dec
xor
pop
fildll
lock
add
pushl
sub
mov
addb
add
mov
sub
imul
jae
daa
add
int
in
sbb
imul
ljmp
push
xchg
add
negl
mov
movsb
pop
mov
pop
add
jns
stc
xchg
jne
dec
bnd
es
int3
inc
xor
adc
dec
je
jae
xlat
pop
inc
stos
fadds
ja
popa
inc
inc
inc
cmp
mov
aad
jmp
sahf
arpl
hlt
lcall
fwait
push
xor
mov
push
sub
xsha1
cmpsb
into
pop
ljmp
push
inc
jae
in
sahf
push
out
add
inc
fwait
sbb
aaa
in
inc
loopne
int
push
jp
inc
mov
jmp
and
cmp
roll
pop
mov
ss
shrb
lret
cwtl
push
lock
pop
mov
jb
clc
or
loope
jg
sub
mov
xchg
nop
xor
fcompl
fbld
add
add
sti
iret
ss
push
jno
test
inc
inc
addl
add
loopne
test
mov
es
cli
dec
fsubr
cltd
aas
inc
mov
sbb
xor
rclb
inc
adc
pop
push
dec
les
and
xchg
pop
sahf
sub
xchg
clc
mov
mov
out
mov
rcrb
test
cld
daa
lods
mov
testb
mov
popa
loope
in
push
call
mov
mov
add
mov
icebp
call
jbe
imul
aad
dec
fidivs
push
push
dec
dec
mov
jle
sahf
push
movsb
xchg
dec
aam
ror
inc
jns
sub
pusha
lods
out
sbb
lock
push
cltd
jae
mov
or
lahf
sub
mov
dec
mov
mov
sbb
push
loop
xor
or
mov
jne
sti
mov
hlt
test
push
shrl
std
sub
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
subl
add
cltd
hlt
mov
cmpsl
insb
sti
and
dec
push
push
jbe
sahf
repnz
test
pop
push
in
cmp
repnz
outsl
mov
inc
push
fisttps
adc
scas
int3
adc
push
mov
cmp
sbb
and
fildll
repz
xchg
sar
cwtl
in
add
int3
push
loop
cmp
stc
ss
jbe
jnp
add
cmpb
stos
iret
adc
lds
int3
flds
pop
mov
mov
pop
dec
sub
aaa
movsl
pop
push
dec
test
and
mov
call
lret
inc
movb
sub
jecxz
mov
enter
outsl
pusha
add
popf
sub
push
or
lds
sbb
jns
cmc
and
in
or
repnz
fdiv
push
cmp
test
test
je
push
cld
adc
xchg
cs
movsb
addr16
imul
add
add
mov
mov
test
add
loop
leave
int3
fisubrl
ds
sub
mov
add
add
lock
xchg
adc
mov
in
and
pop
pop
adc
jmp
imul
ljmp
inc
inc
into
mov
or
in
xchg
cmp
loope
insl
lret
lods
popf
loope
xorl
repz
test
sti
icebp
or
and
mov
loopne
or
popl
or
jbe
int
sbb
or
leave
sub
adc
test
sahf
std
loop
add
mov
movsl
pop
push
inc
xchg
in
lret
or
mov
es
push
icebp
inc
jge
repnz
daa
inc
mov
jg
adc
xchg
push
sbb
fwait
mov
xchg
or
or
add
ljmp
xor
or
jecxz
mov
xor
cmp
xor
adc
add
add
pop
test
ljmp
lock
xchg
sbb
or
add
mov
andb
xor
dec
jne
shrb
insl
mov
sub
adc
sarb
test
xchg
lret
ret
outsl
pop
mov
das
or
decb
jnp
xorb
test
popa
jle
or
pop
inc
jnp
ljmp
cmc
cmp
mov
aam
lret
sbb
push
mov
sub
mov
sti
xchg
ja
jb
mov
mov
adc
imul
test
out
cld
lods
pop
int
pop
sub
rcrl
pop
xor
and
inc
sbbl
addr16
or
js
adcl
jne
movsl
or
fisubrl
int3
stc
sbb
xor
call
pop
enter
fcmove
outsl
adc
and
add
add
arpl
jnp
sbb
push
xor
cld
jle
push
xchg
add
inc
sar
push
ja
jnp
rorb
sbb
push
xchg
iret
filds
add
lods
cmp
enter
cli
bound
je
dec
adc
dec
pop
sbb
mov
xchg
inc
jne
mov
outsb
mov
push
xchg
sbb
cltd
rcrl
mov
loopne
rorb
xchg
xor
or
das
movsb
add
fsubr
iret
shl
and
ljmp
icebp
shl
insl
and
pop
xchg
jmp
out
mov
insb
rorl
jns
jmp
pop
call
scas
pop
add
jl
jb
xor
imul
cmp
inc
pushf
pop
mov
call
sbb
xchg
bound
arpl
movsl
jbe
sub
out
pop
lods
xchg
aas
call
cmpsl
popa
ds
sub
sbb
sahf
xorl
cli
sub
loopne
cmp
popa
mov
xor
jbe
add
push
aas
or
mov
xchg
mov
add
int3
mov
fchs
mov
clc
hlt
sbb
sub
pop
loope
lods
loop
ror
test
mov
pop
lcall
adc
out
sahf
mov
xor
idivb
add
inc
out
popa
adc
das
jb
xor
add
or
mov
hlt
frstor
inc
cmc
jne
imul
sub
mov
cld
adc
jns
scas
rcrb
adc
aas
mov
mov
shlb
test
arpl
xchg
sbb
mov
lcall
pop
xor
cmp
jg
and
mov
adc
lret
pop
divl
add
and
ss
aaa
push
adc
out
es
shrl
sbb
cld
fstpt
adc
xchg
lods
pop
xchg
mov
je
fcoml
dec
lahf
pop
enter
push
pop
std
sarb
cli
stc
and
add
insb
fidivl
bound
and
add
pop
mov
sub
adc
mov
mov
cmp
fiaddl
nop
add
mov
ja
mov
adc
cmp
cmp
je
sub
int
inc
inc
add
xchg
data16
int
rcrb
push
ljmp
xlat
ret
add
cld
scas
int3
fbld
repz
jb
popf
jecxz
push
add
jp
out
pushf
mov
pop
cld
nop
rclb
ja
fsubrs
sti
nop
cmp
and
hlt
cmpsl
mov
decl
and
sbb
fildl
lods
push
ja
mov
mov
dec
out
lret
subl
mov
lret
mov
push
shll
in
sub
das
outsl
fiaddl
sub
mov
aam
scas
mov
xchg
scas
xchg
sbb
je
repz
aad
mov
pop
faddl
aaa
sub
lods
jae
pop
inc
push
in
jp
repnz
cs
add
cmp
mov
jns
test
add
add
imul
sbb
cmc
sbb
add
sub
mov
mov
in
imul
mov
jmp
mov
mov
or
jmp
pop
mov
js
add
es
je
int
adc
icebp
scas
xchg
pop
dec
data16
or
test
lret
ds
xchg
js
pop
mov
adc
cmp
mov
fmul
sbbb
sub
in
inc
scas
popf
dec
sub
cs
and
loop
icebp
cltd
popa
and
pusha
loop
jle
xor
cmpsl
xor
insb
fucomi
fisubs
mov
ror
push
xor
je
xchg
add
test
into
or
pop
lods
jbe
enter
cmp
ret
mov
int
jne
dec
lcall
aad
es
sub
dec
xchg
mov
out
jne
mov
and
cmp
add
add
int
fstp
iret
push
cmpsb
fadd
dec
stc
mov
mov
mov
add
cli
pusha
iret
mov
xlat
dec
mov
xchg
adc
pop
rcr
subl
add
scas
mov
cli
sarb
cmpsl
test
cmpsl
jp,pt
insb
sbb
into
cmp
jo
mov
popa
loope
fcmovb
inc
loopne
and
cmp
add
inc
cld
cli
mov
pusha
mov
xor
fdivrs
push
cld
push
push
mov
aam
outsb
sahf
inc
sbb
xchg
das
sub
mov
mov
jl
and
cmc
call
or
in
dec
xchg
decb
jl
xchg
mov
sahf
mov
and
xchg
sub
jge
das
or
fstpt
or
jge
movsb
xchg
inc
jnp
loope
addr16
push
mov
jnp
cli
hlt
pop
insb
cmp
push
jp
pop
fdiv
inc
repnz
add
lret
inc
mov
in
adc
out
push
or
jb
stos
cli
and
pop
rolb
mov
outsl
imul
in
popl
add
ficoms
lahf
and
scas
std
out
ljmp
outsl
mov
add
popf
rcll
call
lock
inc
cmc
adc
push
xchg
mov
testb
adc
es
dec
dec
or
xor
or
add
push
pop
enter
pop
add
lcall
arpl
cmpsl
aam
xchg
ror
iret
call
fcomps
jne
jecxz
jg
or
xchg
xchg
adc
les
pusha
fldl2t
ljmp
adc
sub
loop
lar
xor
roll
mov
dec
enter
inc
xor
sub
arpl
push
gs
enter
mov
leave
cmpsb
scas
sbb
push
mov
adc
cmp
mov
push
in
leave
les
addr16
sub
idiv
ds
cmp
cwtl
mov
push
push
and
adc
or
jne
pushf
push
push
xchg
stos
movsb
xchg
in
push
negl
popa
jo
mov
add
lods
les
jnp
mov
icebp
dec
lret
je
add
add
jle
and
mov
xchg
cmp
adc
push
aaa
clc
insl
inc
add
jno
mov
xor
xchg
clc
mov
insb
mov
movsl
lock
lret
push
outsl
daa
mov
int3
sbb
stos
gs
icebp
xor
sti
lcall
cli
xchg
mov
dec
mov
pop
push
lcall
push
popf
cmpsl
cli
idiv
inc
pop
shll
adc
outsl
gs
es
dec
sub
or
push
mov
or
push
add
push
scas
shlb
jo
or
cmpsb
out
mov
sbb
pop
or
rcl
nop
jno
mov
not
push
scas
push
pop
lock
enter
jl
push
inc
gs
notl
jns
sub
adc
pushf
sub
aad
adc
sub
scas
cwtl
sbb
mov
add
add
les
fcomps
add
mov
add
std
repnz
lds
das
mov
jge
scas
daa
mov
jne
xchg
push
add
aas
out
repz
add
dec
jbe
mov
cltd
add
sbb
push
testl
jnp
mov
test
and
iret
xchg
sbb
mov
xchg
jle
sub
aas
mov
xor
mov
mov
xchg
nop
pop
dec
inc
fistl
mov
aaa
mov
data16
rcrb
mov
in
mov
dec
inc
jno
ret
fwait
adc
xor
inc
gs
dec
pop
mov
sbb
imul
in
fdivl
mov
mov
vmovsd
punpcklbw
sub
cmp
andps
cmp
stos
js
aad
inc
add
cmpsb
dec
in
testl
or
cmp
xor
shll
add
pop
mov
add
add
ljmp
dec
mov
and
add
nop
mov
xchg
into
out
clc
std
adc
icebp
nop
xchg
mov
jne
inc
and
outsb
jecxz
xor
xchg
push
hlt
mov
repz
push
inc
je
mov
jecxz
inc
lret
jo
add
jge
xchg
les
aam
mov
sub
stos
mov
dec
jp
xchg
int
inc
inc
mov
mov
adc
sbb
inc
push
jecxz
popf
pop
out
js
lahf
xor
sbb
and
add
in
or
jecxz
mov
out
fmuls
test
fldcw
in
dec
cli
loopne
jb
xchg
je
pop
add
int
out
into
xor
sbb
in
mov
das
xchg
int3
push
adc
lods
push
cmp
adc
int
mov
pop
shll
xor
aaa
daa
add
stos
fwait
xchg
mov
pop
push
hlt
ljmp
jmp
pop
repz
xchg
sub
fnstcw
pop
cwtl
push
inc
xchg
clc
xlat
xchg
add
add
aaa
shlb
cmc
div
testl
add
add
add
aas
lcall
mov
fnsave
dec
shll
addr16
adc
mov
sub
pop
fildl
mov
jne
pusha
sub
or
cmp
inc
dec
cmc
stc
sbb
sahf
shlb
xchg
xor
and
cmp
or
ja
outsl
jne
pusha
popf
hlt
outsl
loop
sub
stos
jp
ret
and
hlt
pop
inc
loopne
cmp
mov
insb
fwait
push
lret
bound
sub
ficompl
shl
sbbb
or
into
pop
out
inc
sbb
int
or
lods
sub
pop
fsts
aam
xchg
xor
or
sub
iret
out
jns
inc
sbb
pop
xchg
adc
test
mov
sub
xor
and
sub
push
fistl
push
inc
movl
add
push
jge
cmp
push
jb
popa
mov
add
push
sahf
rcr
pop
adcb
loope
pop
push
mov
add
in
mov
inc
out
lods
bound
cmpsl
jmp
shrl
xchg
xor
pop
stc
sti
mov
das
push
add
sbb
fst
cmc
popa
mov
loop
xor
rol
jecxz
loopne
cmp
jg
sub
lret
cmp
sbb
dec
add
lcall
mov
sbb
mov
mov
loop
mov
mov
and
and
adc
mov
stos
sub
xchg
scas
sysenter
pusha
push
jle
mov
test
add
or
cmc
jno
imul
inc
fidivs
xor
xchg
in
adc
xor
scas
pop
xchg
out
push
mov
cltd
mov
jmp
jno
mov
sbb
sub
push
cmp
sub
sbbb
jg
shll
lcall
mov
adc
push
int3
test
andb
dec
aad
jb
mov
add
shll
cmpsb
jcxz
fimull
lea
add
ret
int3
aaa
movsb
pop
xchg
mov
mov
pop
xchg
dec
std
cli
cwtl
lock
xlat
push
push
or
out
sub
lods
aad
or
insb
or
and
or
cmc
addr16
pusha
aad
sahf
dec
int
fcoms
inc
ljmp
enter
inc
hlt
and
fcom
mov
sahf
fsts
enter
cwtl
out
push
push
jno
mov
xchg
loopne
into
mov
dec
push
and
lea
cmp
js
ficompl
stos
push
and
popf
xor
jno
mov
lods
shl
loop
mov
or
push
repz
cmp
xchg
or
push
pop
adc
mov
sbb
add
mov
push
xchg
xchg
adc
dec
mov
sarl
and
stc
jne
fs
enter
in
stos
mov
test
xchg
cmpsb
jp
mov
pop
adc
cmp
clc
pop
jns
add
clc
jnp
jg
in
cli
enter
cmp
push
sahf
xchg
xchg
add
add
rorb
add
scas
mov
dec
mov
fdivs
pushf
sub
jne
and
decb
mov
bound
cli
add
mov
test
adc
mov
cld
cmp
xchg
aaa
xchg
lret
mov
es
inc
xchg
mov
xchg
ret
jnp
mov
xchg
push
and
dec
sbb
xchg
outsb
push
mov
inc
push
jne
shlb
insl
pop
and
insb
out
bndstx
and
outsl
jp
add
and
or
push
pop
popf
dec
stos
inc
stos
or
push
jl
int
aam
jbe
lds
lock
out
mov
xchg
adc
std
jbe
sub
or
fsubr
dec
pop
jle
inc
insl
push
xor
inc
mov
sbb
dec
mov
jecxz
jb
inc
mov
pushf
lds
cmp
xchg
mov
sbb
jno
lods
scas
and
or
add
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
cwtl
cmp
cmp
test
pop
cmp
out
xor
orl
addr16
test
lock
inc
cs
jae
cwtl
push
sti
ljmp
or
sub
pop
jo
mov
sbb
mov
sbb
ss
jmp
dec
cmp
lock
test
fmull
or
mov
cmc
mov
rcr
loopne
sub
int3
int
test
sub
mov
icebp
jge
and
cmp
xor
movsl
add
insb
cmp
fsubr
dec
inc
jno
adc
jae
movsb
mov
lods
addr16
cli
push
pushf
cmpsb
loopne
mov
aaa
ficompl
xchg
fwait
test
aam
imul
xchg
jmp
sbb
orl
xor
adc
cmp
cmp
test
push
lldt
adc
cs
out
shll
xor
fsubrs
push
add
add
jl
sar
std
jle
pop
popf
scas
insb
xchg
pushf
xchg
add
add
dec
jl
aas
cmp
jns
mov
test
sbb
xchg
mov
pop
jle
pop
add
xor
dec
ljmp
inc
or
aad
jb
pop
mov
ja
in
stos
or
push
jmp
cmp
sbb
loop
inc
cwtl
addr16
adc
and
stos
out
scas
in
or
push
das
cmp
jmp
jmp
cmpsl
js
test
xor
or
or
dec
mov
in
adc
or
dec
sub
jo
leave
xor
push
jl
and
xchg
cmp
xchg
sub
loop
add
cs
aas
inc
jle
push
jns
mov
into
jno
fnstcw
test
lods
gs
icebp
add
scas
jae
sahf
inc
insb
out
adc
repz
cmp
or
leave
mov
pop
rcrl
fiadds
jae
outsl
sub
test
add
add
cwtl
or
stos
xchg
cmp
in
adc
rolb
mov
add
add
mov
les
movb
jnp
ljmp
xchg
jge
inc
jne
xchg
sub
dec
xchg
in
push
lret
fnsetpm(287
hlt
std
mov
dec
jno
movsl
lea
mov
or
inc
rcrl
nop
xor
jge
mov
add
add
mov
jne
in
in
and
les
jno
and
mov
rorb
jns
or
ret
js
shlb
mov
mov
add
adc
test
mov
push
sbb
enter
das
cmp
fs
scas
pop
mov
adc
rcl
mov
out
mov
cmc
fstps
jo
fildl
or
inc
sahf
test
insb
hlt
mov
out
xchg
fbstp
push
test
dec
add
out
cld
hlt
or
stc
movsl
mov
fcomp
inc
jg
sub
jbe
or
push
out
fcmovbe
rolb
pop
add
add
outsl
sti
mov
mov
and
test
add
loop
mov
lcall
clc
sbb
fbstp
frstor
arpl
sbb
ret
sub
rcl
cmp
imul
cmpsl
push
mov
outsb
xchg
push
sub
push
inc
dec
lods
add
jno
sarl
cmp
dec
out
xor
shr
test
pushf
sbb
adc
jmp
andb
dec
inc
jae
mov
ss
sub
stc
dec
mov
add
scas
xor
dec
loope,pt
icebp
fs
sub
cmp
push
jae
ljmp
dec
shl
aad
int3
adc
cmovl
jge
int3
xchg
mov
adc
out
sti
call
stos
and
ret
mov
stc
jge
dec
inc
and
ljmp
push
add
je
movl
enter
cmp
sbb
add
dec
std
out
xlat
aas
dec
sbb
or
stos
cwtl
add
add
jbe
jno
jae
popf
dec
dec
dec
hlt
ja
clc
cs
mov
cmpsb
mov
xor
xchg
lret
sbb
pop
hlt
popa
inc
mov
and
aaa
xor
cmpsb
jmp
pop
jne
repnz
xchg
loope
mov
cld
mov
ljmp
fcoms
sub
or
cli
lret
imul
and
cli
movsl
cmp
sub
sub
mov
mov
lods
cmp
mov
loopne
hlt
add
out
repz
jne
pop
clc
xor
adc
sbb
xchg
divl
lahf
adc
adc
mov
mov
jle
dec
mov
outsl
add
lock
xor
or
lods
push
jg
cmp
xchg
pop
jg
push
out
addr16
out
fcom
call
jmp
cltd
mov
sbb
popf
jnp
sbb
xchg
mov
add
add
mov
mov
jmp
test
cltd
add
add
jmp
mov
sbb
mov
push
stc
testl
fcmovu
xchg
cmp
ror
test
xor
adc
sub
idivl
das
xlat
pop
cltd
fists
outsl
jne
mov
or
cwtl
pop
push
jbe
jp
dec
sahf
or
xor
rorb
pop
sti
in
mov
pop
fld
add
cmp
push
lret
loop
sbbl
mov
sbb
xchg
push
sub
pusha
test
sub
stos
xchg
adc
cmp
mov
xor
or
hlt
data16
jecxz
xchg
pop
and
lods
jg
sbb
inc
mov
cmc
andb
cmp
add
rorl
inc
cmp
pop
mov
xchg
or
pop
mov
lret
sub
mov
mov
insl
add
add
lret
sbbl
popl
push
shll
add
call
or
pushf
add
sahf
lret
dec
movsb
sbb
add
cmp
jae
sbb
iret
imul
jge
fsubrs
pop
divb
aam
xchg
adc
in
ret
bound
imul
pop
add
lds
daa
ret
inc
outsl
add
jns
mov
inc
dec
loopne
inc
cmp
pop
inc
pop
jl
and
loop
and
movsb
or
ds
nop
lods
ljmp
dec
sbb
cmpsl
push
repnz
cltd
xor
push
pop
popf
mov
stos
lcall
scas
nop
aas
pop
mov
dec
ja
mov
xor
inc
mov
push
mov
add
loopne
pop
jge
aas
stos
notl
stc
rorb
aam
push
mov
sub
jmp
inc
cmp
mov
mov
sub
mov
pusha
ds
or
out
inc
lock
xor
ljmp
mov
imul
movsb
and
daa
out
insb
nop
mov
add
add
popf
jns
movsb
or
and
add
in
fstps
jle
ret
jge
jne
scas
or
stc
push
xor
aad
sbb
sub
shlb
jmp
or
std
out
iret
in
sub
inc
sahf
pusha
daa
fwait
imul
or
and
push
or
lods
sti
sub
cltd
insl
inc
out
cmp
mov
lret
push
cmp
and
insb
mov
lahf
stos
pop
jge
out
or
adc
addr16
lock
ficoml
gs
cmp
frstor
inc
imul
cmc
and
lods
xchg
adc
xchg
pop
jae
call
pop
test
sbb
sbb
sub
iret
imul
and
sub
fidivrs
pop
mov
cmc
push
and
mov
bound
outsl
push
add
add
mov
sub
lahf
mov
pushf
add
add
loope
or
sbb
mov
xchg
cmp
cmp
cs
sub
jge
cmpb
push
addb
dec
or
add
lods
inc
and
data16
sub
lcall
add
inc
cld
add
sahf
jg
or
jecxz
pop
sbb
sbb
dec
or
js
push
add
sbb
mov
mov
rorb
addl
push
in
xchg
aaa
imul
in
cmp
fcompp
loopne
stos
inc
sahf
dec
xor
inc
fisttps
mov
mov
nop
mov
shlb
inc
fucomi
aaa
xchg
inc
add
adc
push
xor
jnp
mov
sbb
pop
jns
mov
pop
inc
in
aas
xchg
sbb
lds
or
push
daa
std
mov
mov
dec
push
adc
int
scas
and
push
jo
shl
push
popa
cmp
xlat
nop
je
xor
add
add
ja
out
inc
sub
or
out
mov
add
add
add
adcb
mov
js
in
imul
sbb
lcall
popl
insb
mov
outsl
pop
xchg
inc
xor
rorb
add
fdivl
sbb
mov
sub
leave
add
add
dec
mov
pushf
arpl
sub
sbb
mov
pop
adc
or
jae
jo
and
hlt
popf
pop
fiadds
pop
fwait
cmp
stos
aaa
cmp
into
clc
cmpsb
lock
out
pop
stos
ss
cmpsb
pop
mov
lea
test
cmp
cli
std
sub
and
mov
inc
out
and
cmp
cmpsl
mov
push
inc
popa
pop
je
cmp
mov
or
les
test
sub
jecxz
mov
clc
les
cli
add
mov
or
mov
jnp
cmp
inc
lea
dec
jg
push
add
add
pusha
test
mov
cld
mov
leave
sahf
add
add
pop
data16
test
fbld
cmp
xchg
pop
and
stc
add
mov
out
js
lret
test
sbb
ljmp
outsb
xor
xor
cs
les
mov
loop
jmp
sarb
or
jp
lds
pop
sbb
push
adc
push
pop
inc
arpl
cmp
push
and
rorb
mov
cwtl
push
inc
int3
mov
lea
fwait
pop
mov
dec
jmp
sbb
and
dec
shrl
subb
push
pop
fsubl
je
xchg
mov
jp
jecxz
sub
xor
mov
jp
cmp
push
mov
loopne
bound
hlt
cmp
aas
xchg
sub
cmp
mov
lea
lock
les
and
cmpsl
cmp
out
and
mov
cmp
jle
fsubs
mov
fdivs
stc
adc
add
add
mov
repz
repz
push
mov
add
idivl
mov
das
sbb
pop
scas
jae
pop
push
push
rcll
les
test
inc
mov
in
mov
cmpsb
sub
shlb
enter
xchg
and
jo
cs
xchg
mov
les
es
lcall
std
in
cmp
scas
dec
cmp
add
xchg
inc
cmp
mov
in
nop
mov
int
dec
aaa
rolb
repz
dec
xchg
fdivl
loopne
xor
inc
les
xchg
hlt
sbb
mov
out
mov
loope
fistpl
das
ret
scas
add
push
cmp
mov
int3
subb
inc
pop
sbb
jns
cmp
out
mov
dec
imul
xor
cli
sbb
in
or
test
fstl
sbb
mov
fs
pop
ljmp
add
movsb
mov
mov
inc
inc
add
mov
add
add
outsl
addr16
lds
inc
scas
xor
mov
fxch
inc
sbb
xchg
cmp
sbb
in
jecxz
mov
sbb
js
out
mov
sbb
push
inc
jae
mov
inc
imul
xchg
or
sub
iret
xor
mov
inc
mov
icebp
cmpsl
push
test
imul
aas
subb
enter
repz
mov
jae
iret
ds
cmc
inc
cmpsb
xchg
orb
jbe
addr16
pop
add
mov
loopne
xchg
push
xor
sub
xchg
loopne
test
popf
ret
pop
xor
xchg
cmp
movsb
xchg
fs
push
adc
loopne
inc
rcrb
xchg
and
inc
inc
dec
jnp
int
xchg
rclb
std
das
dec
xchg
pop
jne
std
xor
mov
xchg
outsb
rcll
orb
mov
cmpps
jb
add
add
std
inc
mov
dec
xor
mov
add
insl
repz
out
sbb
xor
dec
jge
scas
hlt
mov
inc
sub
push
jbe
ds
push
andb
dec
xor
test
jno
push
jno
cld
int3
and
jp
or
xchg
lods
push
sub
out
xchg
fistpll
test
mov
sub
jl
xor
push
xchg
xchg
nop
mov
test
dec
mov
mov
push
pushf
out
mov
mov
mov
in
aad
pop
sbb
pushf
pop
mov
out
inc
jecxz
and
repz
data16
adc
xor
add
stos
aam
sub
addl
sub
stos
xchg
enter
lcall
bound
movsl
mov
ja
or
subb
cmc
bound
mov
cmp
mov
fldl
imull
out
jnp
cwtl
fsubl
dec
and
add
add
inc
fdivl
push
dec
mov
frstor
add
lea
subb
outsl
rorb
fidivrs
shr
and
mov
pop
insb
imul
adc
cmp
push
or
jl
dec
negl
icebp
idivb
pause
dec
mov
in
mov
lds
and
sbb
push
adc
out
repz
test
cmp
hlt
into
mov
sub
push
loope
sahf
cltd
mov
sbbl
data16
mov
mov
push
daa
cmpsl
or
xor
add
sahf
xor
scas
movsl
aam
mov
test
push
aaa
loopne
mov
outsb
jmp
xlat
and
mov
in
mov
sub
cmpsb
or
jne
adc
pop
outsl
loope
xlat
jnp
ficoml
mov
or
jo
js
jp
sub
or
cltd
clc
js
sbb
iret
movsl
mov
test
add
adc
mov
sbb
stc
sbb
add
mov
mov
push
std
test
fwait
daa
jae
lret
xor
fstl
fsubrl
aas
lods
cmp
dec
add
bswap
test
adc
sbb
push
inc
arpl
adc
fiadds
popf
cmp
mov
lcall
popf
jae
cmp
loopne
sub
or
addb
arpl
dec
mov
mov
jno
sti
mov
sub
sbb
push
xlat
shll
sub
or
dec
sub
inc
xlat
mov
aad
jns
mov
je
and
xor
and
ljmp
push
pop
jge
mov
lahf
aaa
lods
in
faddp
subl
add
and
shll
loope
sub
jle
push
cmp
ljmp
cmp
enter
fmull
cld
push
fldl
cmp
sbb
fsub
sbb
into
stc
out
add
add
stos
hlt
jmp
cmp
jbe
push
and
add
enter
rclb
lret
shlb
sbb
or
ss
in
sbb
jo
stc
cmpsl
cmp
adc
jmp
adc
outsl
ja
cmpsb
std
inc
mov
push
test
xor
lea
loopne
test
nop
xor
ds
movsb
gs
ret
test
jmp
cmp
jp
cs
scas
push
movsl
dec
cmc
add
jbe
imul
or
out
add
iret
jg
arpl
dec
lret
mov
repz
pop
outsl
outsl
inc
or
leave
stc
sub
stos
clc
add
rorb
fcomps
sub
cmp
sahf
dec
dec
scas
pop
push
cli
push
dec
sbb
sub
sub
cltd
std
outsb
outsb
cwtl
xor
mov
rcrl
add
jp
std
std
mov
sub
and
jne
mov
jl
dec
js
clts
fsubl
xchg
scas
ud2
add
add
push
nop
out
xlat
out
jg
in
xor
fnstenv
movsl
add
add
cs
mov
int
cmp
push
add
shll
inc
mov
jmp
and
out
pop
fstl
jb
mov
int
rolb
mov
adc
mov
sti
fs
insl
mov
imul
xchg
data16
filds
sub
pop
das
iret
and
xchg
and
in
cmp
and
scas
dec
mov
fwait
jnp
xchg
std
mov
in
aaa
pop
sahf
dec
adc
outsb
and
pop
jg
mov
lock
mov
push
sub
gs
addl
sahf
lahf
pop
push
loop
nop
pop
push
mov
sub
push
jo
fcmovnb
pop
cltd
push
mov
rcrb
ja
pop
adc
mov
outsb
dec
lods
jmp
add
xchg
mov
mov
jmp
mov
push
mov
xor
out
pop
std
xor
or
lods
inc
frstor
sahf
aaa
paddusw
mov
aad
dec
sub
add
sbb
pop
fbstp
fldl2e
imul
add
mov
pushf
arpl
or
mov
fldt
insb
pop
xchg
push
imul
push
add
mov
jg
pop
gs
outsb
mov
roll
rclb
idiv
sbb
sbb
cwtl
pop
ljmp
lods
add
sti
fwait
mov
nop
ss
sbb
mov
push
addb
push
or
pop
in
jecxz
xor
leave
cmpsl
in
sbb
enter
rclb
lahf
mov
mov
or
pop
jo
das
mov
stc
ret
addr16
sbb
aaa
sub
ds
push
ucomiss
cmp
jmp
xor
xor
shl
call
sbbl
stc
daa
jne
mov
push
sti
sub
testl
adc
cs
dec
sahf
lcall
rol
and
fwait
aas
mov
mov
add
mov
fadds
mulb
add
subl
fistl
jnp
nop
mov
sub
xchg
popa
push
test
and
insb
in
mov
or
cmp
pop
xchg
enter
nop
lret
push
repnz
adc
cmp
and
lods
cmp
enter
sbb
mov
dec
popf
stos
inc
mov
stc
ss
pop
scas
push
lahf
add
lret
inc
dec
xor
imul
and
fisttps
jns
mov
jmp
xchg
jne
out
dec
dec
hlt
lock
adc
ret
cli
hlt
rcrb
cmp
add
lds
mov
mov
mov
pop
repz
fsubl
outsb
pop
cmpsl
orl
mov
insl
lcall
or
or
mull
cwtl
sbb
fnstenv
sbb
push
mov
add
lret
jnp
sti
jmp
push
mov
not
mov
add
add
push
push
inc
mov
xor
sbb
sbb
lcall
mov
data16
movsl
aas
pop
imul
out
add
xor
push
push
mov
or
and
jo
frstor
mov
sub
aad
outsl
mov
arpl
dec
and
jmp
shr
stos
adc
test
ja
mov
push
mov
push
hlt
cmp
mov
cmp
jns
and
les
outsb
mov
lock
mov
sbb
and
out
xchg
in
sbb
jo
jp
xchg
ds
int3
cmpsb
enter
push
out
xchg
enter
mov
and
push
dec
lahf
ja
mov
mov
loope
jl
and
stc
adc
fldenv
je
mov
mov
xchg
test
fwait
addb
inc
xchg
adc
pop
add
add
jecxz
lock
dec
mov
add
inc
rcrl
push
jmp
cmc
stos
sub
repnz
insl
adc
mov
int
bound
push
movl
mov
clc
scas
aaa
mov
fwait
icebp
idivl
lds
xchg
dec
xor
rclb
dec
lret
cmp
inc
mov
xor
stos
add
movswl
mov
mov
bound
pusha
aam
sub
or
outsl
fildl
add
mov
dec
icebp
fsubl
cs
adc
repz
and
dec
inc
xchg
les
inc
inc
dec
xchg
aam
iret
pushf
and
add
shlb
int3
jle
leave
sti
cs
sub
mov
je
mov
fwait
lds
es
lret
nop
jp
imul
aam
hlt
dec
repz
add
inc
and
enter
inc
lcall
xchg
mov
push
dec
add
add
cld
mov
leave
push
push
sub
add
xchg
add
adc
sbbb
clc
push
shll
pushf
cmp
jg
nop
pop
cmp
mov
test
mov
push
das
mov
jmp
pushfw
jo
int
das
fsubrs
enter
fldt
jle
pop
pushf
push
sbb
xchg
fdivl
std
in
mov
sbb
fisttps
mov
ja
fcmovnb
ret
ds
push
int
fnstcw
mov
mov
jl
mov
sub
mov
shll
cmp
and
ds
int
jne
imul
xor
cld
inc
sub
daa
fmull
pushf
inc
jle
ljmp
mov
mov
outsb
cmp
aam
cltd
mov
aaa
mov
ret
xor
or
dec
jb
dec
or
addr16
xor
pop
scas
mov
int
test
push
pavgb
out
out
xchg
cld
or
mov
add
mov
dec
das
pop
out
cmc
mov
jns
mov
or
add
xchg
popa
rol
xor
lea
and
mov
stos
pop
sti
test
sbb
rol
sbb
orb
or
mov
cmp
iret
mov
xor
out
adc
mov
pop
xchg
out
or
js
in
daa
inc
ficoms
and
js
cmpsb
loopne
cmc
dec
xor
gs
jne
add
adc
ret
out
sub
jo
imul
sbb
cmp
scas
into
scas
sub
sbb
add
push
dec
push
arpl
dec
jae
aad
pop
ret
sbbb
insl
mov
or
push
shl
sbb
xor
jne
int
push
aad
inc
inc
jo
mov
mov
ficomps
bound
dec
popa
insl
cli
fildl
ljmp
bound
mov
ret
jmp
cmp
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
sub
or
lods
add
add
popf
out
aaa
stos
not
xchg
adc
mov
fists
cltd
pop
mov
xor
mov
je
out
lcall
enter
jno
imul
incb
jne
and
xchg
movsb
mov
sti
pusha
sub
xor
mov
rcrl
pop
cld
sarl
ja
js
sti
pop
mov
push
xchg
adc
mov
movsl
push
and
nop
test
xchg
pushf
jnp
mov
inc
mov
sbb
in
adc
or
cmc
call
sbb
paddb
mov
lock
fstpt
data16
mov
inc
cmp
xor
sbb
and
adcb
sbb
inc
movl
cs
sub
push
or
mov
add
xchg
push
roll
insb
fstpl
mov
push
jl
insl
jno
movsl
in
add
and
add
add
fidivs
loop
ljmp
repnz
and
scas
add
add
inc
jmp
push
repz
inc
jns
cmp
pop
adc
cwtl
or
sbb
cmp
push
push
leave
and
scas
daa
adc
sub
xor
push
mov
push
pop
std
lret
push
xchg
dec
insl
movsl
ljmp
mov
ss
out
and
mov
das
mov
pop
aam
and
in
xor
fwait
inc
roll
jl
push
dec
cmpsl
jge
xchg
in
adc
pop
jo
cltd
cmp
mov
push
mov
xchg
jl
push
test
out
cmpb
jp
scas
imul
or
filds
pop
add
push
push
pop
fmuls
inc
in
xchg
cmpb
mov
fnsave
cs
test
mov
sbb
imul
insl
iretw
and
rcrb
icebp
sbb
in
rcl
scas
add
add
xchg
jg
jmp
std
mov
das
ljmp
add
add
das
daa
in
mov
dec
jns
lods
inc
jmp
xor
push
aad
iret
and
mov
pop
mov
xchg
add
popw
xchg
inc
jnp
push
test
mov
aam
ret
fnstsw
mov
call
out
out
je
mov
nop
jnp
icebp
push
dec
dec
xchg
cmpsl
js
mov
adc
cmp
or
jb
mov
popf
mov
add
mov
mov
add
dec
and
sub
ss
icebp
sbb
arpl
pop
and
xchg
scas
xchg
mov
insb
addr16
bound
das
push
enter
push
pop
and
push
outsl
les
bound
mov
out
mov
sub
push
insb
pop
mov
testb
push
mov
xor
mov
jnp
lods
cmp
jg
aam
dec
dec
rorb
cmp
jnp
push
inc
add
add
xor
inc
mov
repnz
mov
add
jne
bound
dec
ja
jg
xor
fwait
mov
cmp
stos
push
pop
push
lret
lea
and
sub
in
or
lcall
mov
aaa
pop
xor
mov
or
int
adc
mov
int3
mov
pop
dec
xchg
subb
add
cmp
xchg
cmovg
push
adc
mov
dec
and
inc
test
pusha
int
test
loop
mov
in
pop
cld
cmpb
or
bound
cmpsb
loopne
das
adcl
jne
mov
mov
pop
cmpsl
gs
pusha
cmp
lret
push
and
ror
in
mov
stos
jne
add
lcall
test
out
fimuls
xchg
pop
sbb
push
movsb
jmp
mov
or
cli
insl
jnp
push
xchg
fcoml
les
imul
push
pop
xor
cmp
inc
call
test
add
fwait
icebp
int
cltd
pop
xor
cs
xchg
sbb
mov
mov
pop
adc
jmp
pop
inc
out
jno
mov
add
jle
js
jnp
xlat
sbb
mov
xor
arpl
pop
sti
aad
inc
into
int
into
jmp
enter
cs
adc
jmp
push
clc
push
and
inc
testb
jbe
fprem1
mov
call
fdiv
inc
jne
js
daa
popa
add
loope
ljmp
or
das
sahf
dec
pop
pop
cmp
adc
jb
in
pop
cmpb
out
sub
aas
and
or
sbb
push
xlat
adc
jl
sub
shll
mov
out
ljmp
test
aas
mov
stc
fldenv
cmpb
mov
fnstenv
push
fimull
imul
pop
add
add
jp
les
mov
arpl
sub
add
add
sbb
fdivs
push
or
fwait
popa
scas
dec
movsb
sub
xor
loope
in
push
push
sbb
mov
dec
cmp
or
pop
aas
inc
movsb
jae
outsb
adc
dec
or
mov
aaa
jae
fisttpll
sub
test
cmp
push
push
ja
xchg
test
mov
das
mov
mov
stc
mov
int
push
xchg
cmp
xor
cmpsl
mov
adc
push
ret
inc
mov
cld
pop
jl
and
pop
inc
cmc
jg
repz
jle
andl
adc
xor
cbtw
ret
jnp
ret
in
nop
xor
mov
push
and
roll
addps
sbb
mov
orb
or
dec
xor
jmp
insb
imul
test
add
mov
daa
and
mov
shll
jne
add
dec
or
pop
stc
out
push
pop
bound
into
sub
add
add
ljmp
movsl
shlb
stc
rcll
cmp
testl
sub
fldcw
xor
mov
mov
mov
xchg
call
rcll
inc
mov
mov
mov
int3
fsubrs
bound
adc
jmp
jmp
mov
cmp
xor
hlt
in
add
outsl
in
and
push
iret
and
inc
nop
cmp
pushf
xor
shrb
inc
adc
xchg
neg
sub
jno
mov
ljmp
data16
mov
push
mov
cmp
push
xor
mov
cmp
add
pop
jge
mov
aas
lock
dec
shll
cmp
loope
mov
fcmovb
scas
and
jmp
sahf
mov
jo
lock
lahf
jne
mov
xor
std
dec
push
ljmp
add
push
mov
lcall
push
xor
add
push
test
aam
std
shlb
and
insb
cltd
ja
and
cmp
mov
mov
xor
add
test
test
jge
ljmp
testl
gs
mov
test
cmpsb
pushf
mov
fadd
idivl
idivl
xlat
mov
adc
sub
sbb
lcall
mov
mov
or
lret
jle
cli
inc
jmp
out
cwtl
pop
mov
into
insb
mov
fldl
das
sahf
dec
add
por
bound
sub
int
jle
adc
ja
cmpsb
les
jb
inc
fwait
hlt
sub
or
clc
pop
lret
testl
bound
js
arpl
pop
clc
mov
js
sti
pop
jge
popf
pusha
pop
movsb
and
or
pop
icebp
test
jne
fs
into
pop
dec
add
add
jne
mov
int3
insb
lret
pop
mov
mov
add
lods
mov
rolb
mov
adc
fbld
push
lock
dec
je
mov
push
fldl
pop
sub
adc
xor
stos
jb
cmp
movsl
inc
inc
insb
sbb
xchg
push
mov
mov
loop
push
dec
lods
sub
fisttps
incl
jl
xchg
fsts
addl
jle
lods
jle
sbb
push
cmp
push
stc
add
pop
lret
mov
int3
flds
or
imul
lea
jbe
lods
xchg
in
push
repnz
dec
mov
aad
insb
int3
dec
mov
ret
mov
mov
xchg
insl
xchg
mov
negl
lret
push
sub
ret
cwtl
lock
aam
aam
jle
cwtl
aaa
or
fwait
jl
jne
mov
mov
mov
dec
dec
add
add
pop
sbbl
fstp
rorl
ss
mov
add
jae
inc
push
push
xor
or
ret
cmpsb
jns
mov
pop
add
ret
inc
xchg
xchg
stos
mov
iret
hlt
into
scas
dec
dec
test
and
xchg
test
push
int
ss
pop
mov
inc
fiadds
aam
push
or
cmp
ret
scas
dec
jbe
sbb
mov
cwtl
sarb
cld
nop
enter
sub
dec
popa
movsl
cmp
shl
jae
add
scas
lcall
ja
jp
jo
xchg
mov
daa
mov
adc
bound
mov
loope
lahf
imul
jle
mov
push
cmp
dec
adc
int3
hlt
ret
fs
inc
movl
notb
mov
xor
add
pop
cmp
lret
repnz
push
inc
andl
xor
push
xor
fcmove
push
stc
movsb
jmp
ljmp
add
add
in
mov
jecxz
out
mov
hlt
pop
pushf
inc
mov
add
test
pop
ret
xchg
sub
data16
pop
lea
ret
into
mov
adc
test
and
sub
pop
iret
inc
adcl
mov
cmp
sub
inc
repz
sti
cltd
shrl
or
shlb
or
test
loopne
push
add
setno
cmp
dec
loopne
jl
cmp
shrl
aam
sub
mul
mov
dec
push
jae
loope
jo
xorb
shrb
adc
sbb
sub
jns
mov
xor
xchg
nop
mov
aad
fwait
and
imul
xor
add
les
dec
mov
shrb
mov
out
popf
ret
xorl
xor
pop
xchg
rolb
movsl
fbld
pop
mov
add
cmp
cmp
adcb
aam
or
pusha
push
add
add
std
test
jg
into
lret
orl
add
add
out
arpl
or
xorb
jge
dec
pushf
cmp
lods
cmp
inc
or
movsl
add
stc
vunpckhps
jmp
or
mov
clc
adc
dec
das
loope
jmp
sub
into
fnstsw
cli
mov
nop
dec
cmp
mov
sbb
add
shlb
push
inc
out
sub
out
ja
pushf
jnp
lea
xchg
hlt
adc
jbe
xchg
adc
roll
sbb
insb
iret
das
xchg
mov
clc
cmp
mov
or
push
or
dec
or
xor
jne
loop
stos
js
lea
dec
pop
xchg
prefetchwt1
add
gs
add
repz
fnstenv
inc
or
leave
dec
push
pop
sub
mov
movsl
testl
push
dec
fisubl
mov
inc
adc
ss
mov
add
adc
in
lcall
jae
dec
mov
jne
addr16
mov
add
jecxz
pop
inc
adc
xchg
xorl
imulb
adc
out
or
ss
push
cmc
adcl
into
sub
cltd
pop
fs
sub
bound
mov
jmp
mov
scas
nop
mov
sbb
add
mov
testl
stos
fmuls
pop
in
clc
mov
mov
mov
cmp
sub
xchg
cmp
addl
sbb
iret
leave
call
fwait
mov
xchg
or
lret
and
inc
jp
xchg
adcl
nop
ds
iret
push
adc
lahf
mov
test
movl
add
dec
subl
lods
cmp
mov
aas
mov
sti
mov
add
cli
mov
aas
rcrb
lret
repnz
or
and
out
xchg
inc
shl
lahf
add
add
sub
jg,pt
dec
arpl
pop
push
mov
add
jp
cmpsl
xchg
xor
cmp
loop
aad
inc
fidivs
inc
push
cld
cmp
aas
pushf
stc
push
add
cmpl
dec
jg
repz
cmp
mov
xor
insl
int
xchg
mov
jns
push
mov
loop
imul
mov
fisttps
sub
cmpb
iret
and
outsl
inc
add
xchg
cld
inc
popa
lret
lahf
jmp
sub
pop
bound
mov
xchg
xchg
inc
lret
mov
mov
jbe
or
jae
mov
loop
lcall
xor
sub
push
ret
insl
mov
das
mov
les
mov
cmp
in
add
push
in
xlat
js
xchg
lret
aam
mov
push
cltd
pop
jp
fstpl
dec
sbb
cmp
das
ja
and
lea
ds
cmp
jl
sub
push
adc
add
insl
sbb
outsl
mov
lcall
add
call
andl
sub
cmp
xchg
insb
xor
lcall
mov
pop
mov
adc
push
jle
cmp
mov
shr
stos
stos
sub
mov
push
test
out
in
lahf
xchg
inc
imul
popa
popa
or
sbb
pop
lahf
shlb
inc
mov
mov
sahf
xor
adc
enter
jnp
cmpsb
mov
nop
xchg
les
call
mov
add
in
dec
ss
mov
push
loopne
sub
push
nop
mov
or
stc
int3
inc
fldz
dec
enter
and
subl
repnz
pop
add
cltd
mov
imul
push
repz
in
sub
mov
mov
and
mov
subb
movb
cmp
dec
adc
les
cmp
add
xor
mov
pop
sbb
add
add
cmp
mov
enter
jle
mov
xchg
adc
xchg
push
or
dec
ret
or
cmp
push
stc
mov
test
dec
out
in
loop
fisubl
jge
int3
mov
or
push
xchg
pusha
lock
test
add
gs
mov
xchg
jbe
pushf
adc
add
aaa
add
repz
mov
cmp
or
lea
sub
in
xor
mov
lods
sbb
inc
test
xchg
test
cmp
scas
js
pop
insb
and
pop
cmpsb
lea
push
lods
out
xchg
iret
arpl
and
dec
testb
outsb
mov
icebp
push
jns
push
sbb
jmp
mov
roll
test
cmpsb
pop
and
mov
loopne
imul
mov
cmp
and
rcl
test
icebp
ja
xor
xor
test
jno
in
pop
imul
jge
add
push
push
call
and
push
dec
pop
mov
add
aam
dec
scas
and
popa
pop
jns
dec
sub
mov
mov
inc
inc
loopne
mov
stos
pusha
mov
xor
cmp
or
out
setbe
mov
pop
imul
ds
jl
xlat
push
test
inc
outsl
and
cmc
dec
popf
or
pop
dec
mov
xor
ret
adc
or
sti
push
jns
inc
fildll
lds
es
cmp
lods
sar
inc
xchg
dec
adc
scas
pop
cmpsl
add
gs
mov
jbe
ficompl
lock
jg
sub
xorb
rcrl
cmp
lea
call
add
inc
je
jo
pushf
mov
mov
mov
dec
stc
and
lock
imul
fs
inc
add
outsb
test
test
pop
mov
shll
fiadds
and
in
push
fmuls
adc
mov
pop
mov
icebp
cli
ss
nop
jge
dec
out
mov
into
std
sti
leave
sti
iret
jmp
mov
add
add
inc
jmp
lahf
cmp
jl
dec
out
scas
stos
jns
cld
dec
adcl
add
mov
sub
push
outsl
xchg
and
jae
jo
xchg
ret
lods
rcrb
sbb
xor
jle
or
jge
dec
add
add
jle
push
xchg
cs
es
cmp
in
test
mov
sti
inc
in
rcr
repz
jne
cwtl
pop
bound
in
repnz
xlat
or
out
frstor
pop
jo
push
idiv
pop
xchg
dec
mov
mov
ds
lds
cmp
push
xchg
dec
push
inc
outsb
xchg
pusha
icebp
lock
aam
push
int3
mov
jmp
fcmovnbe
sub
mov
stos
icebp
push
jp
jg
or
mov
and
stc
pop
ds
arpl
push
into
sub
sub
ss
and
sbb
xchg
data16
jne
add
add
mov
xor
mov
add
jae
aaa
and
cld
inc
repnz
insb
out
out
cmp
sahf
loop
pop
jbe
icebp
movsl
pop
outsb
fisttps
icebp
sub
inc
add
inc
and
ds
xor
ficoms
fnstsw
sub
jge
aad
ficoms
fcom
into
stos
movsb
leave
icebp
mov
ja
bound
push
xchg
sarb
fistps
and
xchg
sbb
stos
jl
popa
repz
mov
cmpsb
rolb
fsubl
xor
mov
mov
push
hlt
dec
int
or
cmpsl
push
int3
jmp
es
cmp
dec
add
push
int3
jg
fisubs
sti
and
jmp
gs
and
xor
mov
dec
aas
mov
jmp
cmp
dec
cmc
jmp
push
pop
mov
cmpsl
xchg
dec
fstl
inc
sahf
insb
jne
inc
or
pop
jns,pt
push
adc
push
inc
lods
inc
sti
pusha
jmp
notl
pop
jbe
add
fwait
mov
or
jg
mov
sahf
loop
push
or
aam
rolb
add
out
insl
pop
jnp
jnp
mov
pop
jle
pusha
sub
cmpsb
inc
xchg
es
xchg
js
mov
test
jl
int
cwtl
scas
push
or
sub
mov
divl
mov
inc
and
push
xor
das
pop
shlb
mov
popa
ljmp
ret
rorl
loope
lcall
lret
int3
push
sbb
ret
push
ret
pusha
sahf
pop
adc
repz
mov
rol
cmp
out
test
push
add
inc
out
cmpsl
ja
outsb
push
push
lods
out
outsl
repz
sahf
cld
mov
es
out
mov
notl
imul
outsb
pop
ja
mov
dec
push
fildll
fdivl
sbb
stos
data16
sub
sahf
fsubrl
mov
mov
sarl
ds
das
psubd
fistl
mov
lods
xchg
roll
in
in
pop
pop
xchg
aaa
sbb
or
add
xor
push
cld
pushl
cld
sbb
jae
add
add
movsb
lret
lcall
sub
idivb
mov
rclb
mov
dec
mov
add
adc
xchg
test
mov
andb
push
hlt
mov
xor
loopne
inc
sub
stos
shufps
push
push
hlt
mov
leave
pop
inc
push
mov
and
mov
cmpsb
jno
sarl
push
in
insb
ljmp
sbbl
mov
inc
arpl
push
push
insb
roll
je
popf
sti
in
movsb
cwtl
aam
pop
sub
gs
movsl
test
addr16
push
lret
and
ficompl
mov
add
push
and
dec
in
icebp
xor
fsubr
xchg
cmp
sahf
es
js
stos
or
add
push
in
aaa
stc
mov
mov
adc
sbb
sbb
jmp
mov
mov
lds
shrb
add
sub
add
pushf
shrb
lcall
pop
xchg
xor
js
add
add
jno
call
fstpl
jbe
addr16
adc
testl
lods
and
jns
aam
cld
push
or
call
leave
mov
push
cmp
outsl
repz
jl
test
inc
xchg
add
jle
inc
push
outsb
test
lock
lcall
mov
inc
outsb
mov
test
sbb
cmp
lcall
hlt
cmp
mov
push
xchg
popa
pusha
enter
cltd
pop
pop
iret
push
into
daa
jge
sub
lods
cltd
bound
les
cmpsl
repz
inc
or
mov
cmp
jle
adc
stos
sahf
aad
and
cmpl
fnstsw
pop
cmp
mov
sbb
xchg
xchg
sbb
cmp
les
orb
jne
ss
adc
sbb
in
push
outsl
or
inc
les
add
sub
scas
mov
aas
scas
fsts
and
jge
add
add
mov
mov
mov
loopne
jge
in
bound
rolb
xor
inc
jge
mov
and
in
sub
nop
sti
movb
adc
std
daa
sbb
out
push
pusha
mov
mov
test
pop
pop
fwait
cltd
pop
push
ja
sub
pop
push
out
and
jg
xchg
mov
adc
cs
aaa
ret
imul
outsl
mov
pop
aad
pop
ret
in
add
aaa
xor
fdivs
dec
fwait
mov
scas
add
loop
mov
pop
sbb
pop
and
mov
popa
pop
daa
push
inc
mov
std
rorl
scas
fst
mov
xor
mov
add
aaa
and
or
sbbl
loope
jg
sub
fs
das
insb
and
les
lock
push
and
ljmp
and
movb
add
jne
jne
jg
loop
mov
in
add
add
imul
add
fidivrs
jns
in
xchg
shlb
daa
daa
loopne
cmp
cmp
aas
pop
pop
test
pslld
mov
test
call
call
inc
mov
mov
es
and
mov
mov
mul
jge
hlt
andb
data16
popa
dec
not
or
js
or
push
out
jb
sbb
cmp
pop
lret
lret
pop
scas
xchg
lds
imul
pusha
fwait
jg
cmpsl
sbb
mov
movl
mov
mov
in
xchg
test
xchg
stc
testb
pop
mov
cwtl
dec
ret
push
and
inc
fwait
jb
xchg
flds
pop
repnz
cli
sahf
aam
adc
sbb
in
or
scas
mov
aas
jb
sbb
int
movsl
xchg
js
jns
enter
fstp
dec
jns
mov
imul
add
add
dec
pop
mov
cmc
mov
xchg
xchg
add
add
mov
lret
scas
fidivl
xchg
add
aad
xchg
or
jle
sub
jno
arpl
pushf
cmp
outsb
in
aas
ret
inc
mov
jecxz
imul
sub
outsl
int
push
out
ret
mov
mov
repnz
insb
cltd
ds
in
loopne
outsl
mov
mov
mov
cmp
xchg
cltd
adc
and
mov
rcrb
aam
push
jb
sub
xchg
adc
pop
nop
imul
dec
inc
cmp
jp
pmaxub
call
mov
mov
pusha
mov
add
jmp
inc
movsl
inc
jo
add
imul
test
test
lock
repz
lods
popl
pop
or
jge
arpl
push
filds
xchg
das
scas
mov
xchg
mov
into
je
mov
mov
add
jmp
adc
xchg
xchg
adc
add
add
outsb
jle
lods
testl
movb
add
cmp
xchg
lret
jge
xchg
out
jge
and
xor
in
xor
add
sbb
dec
xchg
inc
int3
sub
cwtl
into
jns
pop
std
lea
xchg
xlat
inc
fmul
lock
sub
mov
and
xor
orl
lock
repnz
cmp
adc
rcr
lret
cltd
lods
pusha
pop
cmp
popf
sub
in
lods
or
sub
xor
ret
jge
dec
push
and
arpl
mov
les
andl
inc
mov
cmp
cmp
fistpll
imul
xchg
cs
std
cli
dec
pop
add
mul
enter
mov
sub
enter
push
ss
lock
popa
and
insl
sbb
sahf
xor
cmc
mov
mov
loope
xorb
or
pop
xchg
stos
je
sbb
in
addr16
jmp
dec
gs
data16
xor
add
add
mov
xchg
insb
sti
pop
sti
jno
movl
add
out
daa
movsl
fdiv
out
dec
xor
mov
roll
xchg
fs
push
test
sbb
das
in
aas
xchg
jae
leave
in
cmp
fsubrs
mov
mov
test
dec
aas
outsb
and
stos
dec
inc
cmp
lea
or
ret
pop
mov
sarl
add
sahf
and
xchg
xchg
nop
jb
loopne
or
xlat
xchg
xchg
mov
mov
dec
push
jge,pt
mov
dec
insl
mov
adc
jl
jno
and
aas
inc
xchg
lret
add
imul
loopne
cmpsl
mov
jg,pn
cmpl
cmp
mov
mull
lret
mull
and
sbb
pop
push
cmp
fcomps
les
arpl
out
ret
xor
repz
cmp
test
fst
inc
hlt
add
add
out
sti
xlat
in
aad
xchg
lea
xchg
enter
add
add
adc
pop
mov
pop
sub
inc
loopne
cld
test
or
mov
cwtl
xor
mov
sub
popf
test
fsubl
cmp
cs
xchg
les
sbb
bound
xorb
mov
mov
cld
or
repz
cli
imul
scas
xor
test
adc
inc
enter
pop
cmc
cmp
shl
outsl
pop
in
cld
into
inc
sarb
mov
pop
cmp
gs
adc
mov
jge
arpl
fists
add
sub
loop
popa
sbb
add
imul
ljmp
cmc
cmpsl
call
xor
cltd
in
ja
push
jmp
mov
insl
cmpsl
fwait
cmc
xchg
div
lods
fisttpl
incl
bound
nop
push
xchg
push
dec
dec
loopne
fisubl
cwtl
pop
aaa
jae
pop
rolb
add
push
sub
cmp
jg
and
mov
pop
xchg
leave
mov
add
sbb
inc
adc
in
mov
daa
imul
mov
xchg
mov
pushf
sahf
mov
push
mov
insl
arpl
dec
lods
pop
inc
imul
cltd
shll
xchg
push
nop
add
rcl
add
jp
cmp
out
int3
outsl
lds
and
bound
movsl
es
or
int
cmpsl
stc
fcoml
sbb
cmp
fbstp
rcrb
pusha
adc
fsts
dec
idivl
pop
fidivl
mov
and
das
xor
jns
scas
es
pop
call
movsl
imulb
lock
push
and
cwtl
test
mov
addr16
mov
pop
stos
and
cmpsl
xchg
bound
push
fcoml
mov
movaps
pop
test
gs
in
lock
leave
mov
pop
pop
and
push
or
add
xor
fistpll
out
repz
fcoms
test
mov
lret
add
leave
pop
jb
pushl
cmp
popf
mov
and
cmpsl
sub
push
pushw
call
xor
mov
mov
or
sub
fisttpl
cwtl
daa
add
push
jb
lock
dec
rcll
push
adc
push
scas
cli
loop
dec
push
out
dec
ja
bound
cmpsb
aam
cmp
aaa
lcall
pop
movsl
dec
insb
add
dec
add
pop
or
fs
lock
arpl
push
call
xchg
repz
jecxz
cmp
data16
mov
mov
addr16
cli
mov
adc
dec
addr16
dec
movntdq
and
or
jcxz
sub
repz
rclb
push
loope
lods
pop
pop
test
mov
outsl
lods
filds
andl
jo
fsts
or
daa
frstor
scas
icebp
mov
add
add
mov
mov
and
ret
and
add
and
push
jno
in
cld
adc
fwait
inc
sbbb
jmp
jp
lret
xchg
push
pop
leave
fcomp
lods
jmp
shrl
orl
jae
ret
jb
scas
loopne
jno
and
or
mov
cmp
xor
inc
jns
cli
daa
push
outsl
loop
ds
and
mov
pop
gs
mov
idivl
repnz
pop
and
lcall
mov
shrl
imul
push
js
and
dec
test
mov
jmp
jb
pop
sbb
test
mov
imul
dec
lret
scas
inc
xlat
fidivs
jns
push
icebp
shlb
cld
fmuls
mov
fistps
cmp
popl
lahf
inc
rcrl
jae
sbb
push
das
add
cmp
push
xchg
xor
inc
loope
or
ret
dec
sbb
add
xchg
call
iret
add
add
enter
in
sbb
push
inc
lods
cmp
loop
int3
add
add
imul
lcall
or
mov
jp
movsb
add
fidivs
roll
enter
bswap
xchg
loopne
loopne
cmp
scas
add
je
scas
test
lahf
sub
shrl
push
enter
aad
mov
mov
arpl
push
adc
xor
dec
popf
mov
out
testb
cmc
mov
cmp
mov
mov
cs
int
into
js
sbb
lcall
sbb
loope
xchg
inc
stos
jnp
pop
fiadds
ret
out
scas
and
push
repnz
xorl
mov
xlat
xchg
xor
sbb
aas
xchg
iret
xor
push
enter
subl
sti
repz
or
push
xchg
rolb
jl
loope,pt
cld
out
out
and
std
jg
hlt
repz
test
mov
lods
xchg
scas
add
jp
mov
leave
insl
or
mov
and
add
add
imul
cmc
call
inc
push
popa
xchg
and
imul
add
lcall
hlt
pop
adc
cs
mov
mov
ja
and
cmp
inc
repz
mov
test
movsl
sti
lods
mov
mov
sbb
xchg
sbb
adc
mov
xchg
movsl
out
mov
mov
cmpsb
repz
push
sbb
ds
sub
mov
dec
xorb
pop
lock
clc
fisttpl
shrb
mov
and
aam
inc
jle
pusha
pop
or
daa
or
ret
insl
mov
les
push
sbb
out
lcall
jp
push
rcl
add
mov
mov
pop
icebp
fisubrl
stos
dec
push
test
mov
icebp
mov
mov
scas
mov
addr16
cmp
in
stos
adc
cmp
popa
arpl
jmp
xchg
loope
push
cmp
add
add
ja
iret
sub
and
arpl
add
push
mov
xor
inc
daa
stc
je
out
adc
dec
enter
mov
nop
aad
loop
and
xor
mov
movsb
faddl
scas
xor
push
jmp
lret
sbb
fidivs
adcl
sbb
addl
fwait
xchg
cmp
sbb
add
xchg
sbb
adc
cmpsb
rcll
sub
xchg
and
mov
outsl
fcmovnb
lods
psraw
inc
push
adc
or
push
cwtl
xchg
add
outsl
push
pop
add
outsb
cmc
sbb
sbb
or
push
test
shlb
push
push
cmp
cmp
lret
aam
sbb
and
jbe
dec
clc
dec
stos
sbb
and
rorl
xchg
push
mov
add
mov
cmp
test
cmp
jno
cmpsb
sub
xor
sarl
jecxz
jbe
add
add
out
into
gs
cld
test
iret
add
add
movsb
arpl
mull
mov
push
and
hlt
into
dec
out
das
movsb
push
mov
out
enter
mov
dec
mov
movsb
jecxz
sbb
iret
jnp
fidivl
inc
in
test
sbb
sbb
or
pop
lcall
fwait
hlt
loope
bound
imul
lret
sub
xor
fsts
gs
push
movaps
inc
add
pop
loope
data16
push
push
dec
adc
sar
adc
std
jge
jmp
nop
out
dec
out
ja
out
fldl2e
and
movsl
aas
repz
dec
xor
test
jp
jge
js
fdivrl
repz
push
clc
andl
add
adc
sahf
pop
xchg
loope
inc
or
movl
push
xchg
loopne
rcrb
sti
add
lcall
cltd
sub
mov
dec
fbstp
int3
add
add
xchg
and
je
out
mov
mov
rolb
add
ljmp
pusha
mov
popf
add
ffree
jne
mov
mov
aad
or
xchg
sahf
ret
fnstenv
dec
es
push
sbb
dec
pop
ret
push
fucomip
mov
inc
test
inc
and
jb
and
das
fisttpll
aad
cs
shl
jge
mov
movsl
cmpsl
or
dec
cmpsb
addl
xchg
popa
push
mov
push
xchg
fidivl
or
pop
jbe
jnp
xchg
xor
ret
fisttpll
push
adc
jbe
mov
jl
dec
call
scas
loop
inc
subb
or
xor
or
mov
mov
bound
adc
js
dec
push
sbb
ljmp
xchg
scas
leave
sub
sub
jle
icebp
adc
add
add
dec
daa
dec
das
outsb
imul
push
xchg
bnd
mov
roll
add
xchg
out
out
dec
div
xchg
inc
mov
addl
inc
in
inc
sub
sub
jg
mov
lods
subb
inc
lret
sbb
ljmp
paddusw
jns
insb
and
cmp
mov
in
push
inc
mov
sti
push
in
out
xor
ret
call
lods
dec
ficompl
je
xchg
ljmp
fldcw
es
mov
in
lods
push
jbe
sahf
lock
test
mov
cmp
xchg
das
cli
push
pop
or
lcall
push
cmp
xchg
ja
scas
push
sbbb
loopne
push
fisttpll
test
sub
sarl
mov
fidivrs
fadd
inc
and
test
fildll
js
int3
scas
lods
add
mov
jmp
popw
xchg
jmp
push
sub
push
outsl
out
dec
adc
add
add
popf
mov
lahf
ret
or
or
rolb
add
xor
fs
iret
cmc
push
cltd
add
push
inc
push
jecxz
enter
push
xchg
pop
mov
cli
data16
push
push
xchg
xchg
test
push
repz
rcll
adc
movsl
pop
sti
call
ss
je
cmp
mov
cld
dec
push
dec
xor
ss
cmp
lock
lret
mov
rorl
jne
sbb
insl
sub
xor
dec
fstpl
pop
insl
gs
mov
xor
cmp
dec
outsb
push
mov
out
jne
adc
repz
negl
loopne
iret
pop
adcl
pop
cld
push
ret
movsb
movsb
push
mov
loopne
xchg
add
dec
add
aas
repz
xor
arpl
pop
push
cmp
popf
dec
fcompl
jp
pop
xchg
add
lret
enter
incl
aaa
test
sub
cs
mov
sub
add
add
neg
outsl
push
xchg
or
jbe
int
add
add
xor
std
cltd
ror
and
adc
add
fs
sbb
nop
and
enter
test
mov
les
jecxz
mov
fs
sub
pusha
test
cmpsb
mov
push
sub
sbb
repz
jns
insl
in
aas
pusha
xlat
int
jecxz
sbb
fbstp
xor
les
iret
mov
inc
xor
jmp
cmp
flds
repz
pop
adc
sarl
gs
js
or
cmp
dec
cs
push
sar
out
clc
test
mov
lcall
inc
in
mov
fs
stos
push
add
ret
lods
mov
cli
jo
stos
in
ret
and
push
and
cmp
fucomp
rcrb
push
sbb
push
popf
xchg
popf
leave
push
leave
dec
cwtl
sub
outsl
inc
inc
or
cld
lahf
leave
add
add
add
sbb
sub
dec
add
aam
add
in
push
shl
cmp
fiadds
adc
fiadds
mov
adc
jl
xor
push
loope
outsb
int3
push
dec
es
shl
xchg
mov
lret
repz
ficoml
and
mov
jae
ljmp
pop
inc
cmp
test
sti
inc
cli
sahf
sub
into
pop
sub
jp
inc
inc
pop
imul
jae
add
mov
inc
aas
mull
push
mov
out
pop
add
shlb
lret
jnp
mov
sub
popa
lcall
rclb
test
mov
mov
orb
fstpl
mov
pop
sbb
add
sub
test
mov
adc
mov
int
lret
jge
cmp
pop
xor
mov
scas
shrl
sub
add
add
ds
jae
stc
adc
add
out
sub
mov
je
sbb
shld
inc
or
xor
in
aaa
jecxz
aaa
adcb
mov
int
push
jns
in
cmp
stos
inc
pop
xchg
pop
or
dec
jnp
push
sbb
fldl
test
xor
int3
jg
mov
add
out
into
xor
sbb
jo
inc
dec
xor
aaa
out
cli
sub
push
inc
jnp
mov
pop
stos
adc
call
imul
adc
sbb
mov
jo
mov
push
and
rcll
push
jle
and
cmp
movl
ret
fistl
jo
fistpl
fwait
int3
sahf
stos
cli
scas
dec
jae
cwtl
repz
add
and
adc
xor
lods
stos
scas
cmpsb
mov
add
imul
xchg
clc
pushf
and
les
inc
push
lds
mov
fwait
inc
add
add
lcall
jnp
and
add
add
mov
insb
in
pop
and
test
mov
ret
sarb
mov
test
mov
inc
xchg
inc
cli
aad
out
sbb
fbstp
insl
enter
mov
xchg
popf
nop
lahf
out
jg
push
ds
push
cmpsl
subl
jae
test
dec
fldcw
arpl
and
sbb
sbb
inc
inc
nop
outsl
aas
sarb
xchg
pop
cltd
xorb
rcrl
add
jmp
mov
cmp
or
fwait
enter
ljmp
xchg
loope
imul
ljmp
xor
xchg
mov
sub
jp
bound
or
out
pop
and
in
hlt
add
jp
in
sub
fcomi
jae
cmp
jb
inc
in
imul
cmpsb
enter
out
aam
add
mov
inc
cwtl
scas
int3
xor
add
cmp
jg
leave
or
dec
ljmp
add
lahf
jecxz
cmpsb
iret
or
lock
lods
push
jbe
repnz
sbb
mov
and
mov
out
rcrl
add
mov
xchg
jb
mov
aas
std
cmp
add
push
out
mov
out
inc
fildl
mov
lock
jnp
push
test
out
push
push
or
add
cmp
mov
pcmpeqd
pop
outsl
out
xchg
stc
cmpsl
lods
lock
ret
inc
gs
das
mov
lret
orl
icebp
insl
bound
dec
adc
rcll
mov
inc
pop
ret
gs
mov
jnp
pushf
lods
into
in
mov
lahf
cmp
dec
push
out
cltd
enter
mov
gs
mov
inc
ret
sbb
sbb
insl
and
lret
loopne
fsub
pushf
sbb
aaa
into
mov
enter
add
add
int
out
out
imul
nop
xchg
movsb
cld
fxch
out
add
add
jl
xor
xor
mov
cmp
lcall
xor
pop
mov
imull
outsl
pop
xor
cltd
pop
fs
mov
call
push
adcl
movsb
add
cmpsl
xchg
push
jns
xchg
push
sub
cmp
jecxz
jle
pop
or
lahf
xor
jne
int3
mov
jb
push
in
push
cltd
sbb
nop
fidivrs
cmpsb
push
lea
lretw
in
jp
sub
xchg
sti
adc
fidivrl
mov
mov
and
xchg
add
jge
inc
mov
jp
hlt
je
sbb
or
insb
js
mov
push
cwtl
popa
sahf
nop
lahf
inc
jo
push
sub
roll
cmp
cmpsl
ret
sbb
cmc
mov
insb
add
jns
enter
mov
lods
lock
cld
pop
push
test
xor
inc
test
and
insb
enter
add
lret
sbb
jecxz
ss
or
add
out
fldcw
push
in
sub
out
jmp
add
add
sbb
stos
out
xchg
mov
mov
ret
or
outsl
jle
xchg
push
inc
loop
xchg
mov
pop
outsl
inc
enter
cmp
inc
or
fwait
xchg
in
pop
inc
or
test
dec
pop
test
faddl
push
dec
mov
mov
lcall
jo
xorl
dec
hlt
xor
mov
fcmovnb
cld
dec
stos
mov
jno
testl
adc
pop
arpl
jbe
faddl
stos
adc
outsb
mov
movsb
lods
icebp
sub
shlb
sub
jno
mov
mov
leave
fcoms
call
xchg
loopne
jmp
adc
dec
pop
call
lods
add
mov
jecxz
std
icebp
pop
inc
addr16
rorb
fs
sbb
mov
jnp
ljmp
add
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
js
lock
add
movsb
cmp
xor
cmp
inc
imul
mov
sbb
xchg
xchg
sbb
mov
jecxz
cmp
jg
cmp
mov
dec
imul
jne
repnz
movnti
xor
push
sbb
outsb
out
sbb
sbb
xchg
mov
mov
adc
aad
adc
xor
cmp
in
scas
ljmp
cmpl
cmp
mov
adc
push
rorl
test
xor
leave
loopne
mov
mov
adc
clc
mov
pop
mov
or
ror
mov
adc
mov
xorl
fcmovb
ret
xor
rorb
mov
sub
sub
mov
mov
cmp
sbb
xchg
out
test
int3
sub
xlat
jge
pop
rolb
orl
add
pop
dec
jle
jg
std
fstpt
mov
nop
cmc
fildl
add
xor
xorb
mov
pop
lods
cmp
sbb
cmc
push
cltd
test
aam
std
repz
pop
je
jo
call
test
adc
js
loope
sbb
adc
lds
jmp
test
iret
jno
sub
fldz
inc
push
jmp
mov
les
aad
in
mov
out
and
or
jns
loope
xor
mov
lea
sbb
cmp
repnz
fidivs
adc
inc
cmpsl
xlat
ljmp
add
data16
add
inc
cmc
push
and
sub
xchg
xchg
orl
outsb
mov
mov
psadbw
andl
loopne
xor
jmp
or
dec
jo
cmp
and
mov
data16
push
sub
and
add
cmp
ljmp
inc
xchg
jns
cli
faddl
add
sbb
nop
arpl
sti
mov
push
roll
aad
loopne
mov
mov
sar
or
sahf
jg
mov
loopne
movsb
jge
nop
lret
pop
push
rclb
lret
jno
iret
js
mov
cmp
mov
adc
jg
scas
cmp
fidivs
aaa
pushf
and
lret
add
push
aam
mov
ret
lods
lret
mov
test
jo
iret
enter
sub
divb
jnp
popf
mov
add
mov
jmp
je
inc
adc
adc
out
lods
mov
sub
insl
push
sub
into
xor
mov
sub
aam
out
aas
sahf
mov
or
push
into
shlb
add
rcrb
sub
or
sbbb
jnp
rorl
dec
add
sbbl
push
cmp
dec
adcb
cli
add
add
sbb
jmp
scas
inc
call
fldl
add
xchg
push
xchg
pop
sub
add
mov
xchg
and
lods
aad
leave
mov
xchg
cmp
xor
icebp
sub
aas
adc
in
or
or
stos
ss
pop
cmpsb
cltd
out
mov
mov
or
inc
dec
scas
mov
lret
jmp
xlat
push
mov
sbb
fs
aad
aad
lahf
and
jle
push
fwait
out
aad
jno
lods
fcmovb
add
mov
fsub
mov
dec
and
ret
hlt
adcl
stc
xchg
jg
jae
les
mov
testl
and
sti
test
test
mov
inc
and
insb
sbb
xchg
xchg
push
jg
ret
push
insb
pushl
je
jno
mov
adc
sub
mov
lret
jl
xor
pop
xor
sbb
rorb
loope
mov
iret
ss
jo
shrb
add
push
out
faddl
scas
dec
add
add
add
mov
scas
cld
sbb
cmp
sti
mov
mov
push
addr16
scas
stc
icebp
imul
hlt
or
incb
es
mov
lcall
loope
sbb
pushf
inc
imul
imull
fiadds
dec
lea
insb
rol
in
sbb
enter
mov
push
or
out
outsl
inc
mov
xchg
cmp
sub
popa
mov
jg
cmp
mov
flds
movsl
xor
pop
mov
cmp
sahf
pop
in
sti
xor
mov
push
cmpsb
adcb
lods
pop
into
jecxz
insb
xor
inc
mov
movsb
xchg
aad
stc
xchg
mov
sub
mov
insb
and
lret
fimull
ljmp
movsl
aas
cwtl
pop
push
test
imul
jne
call
mov
dec
faddp
ret
add
jg
mov
lcall
fisttps
or
or
add
add
scas
push
add
cmp
imul
movsl
insl
push
mov
rclb
mov
pop
mov
test
std
fisttpl
inc
sub
push
cmpsb
lahf
mov
imul
sahf
test
bound
push
aam
inc
fiadds
xchg
and
xchg
popa
mov
jl
clc
dec
subb
xor
push
jne
out
pop
push
popw
insl
ljmp
push
out
iret
popf
rolb
pmaddwd
add
enter
cmp
xchg
inc
mov
fiadds
push
cwtl
subb
jns
adc
mov
fcmove
mov
std
shlb
lds
sub
inc
sahf
mov
cmp
divb
call
push
sbb
arpl
repnz
adc
sbb
in
popa
and
scas
orl
out
sub
sti
cwtl
add
add
mov
jns
xchg
xchg
mov
sub
add
add
xchg
pop
mov
ja
addb
scas
sub
lahf
sbb
fists
cmp
jbe
leave
sub
es
push
push
mov
xchg
cmp
jo
dec
jp
jmp
fimull
js
fsubr
jnp
add
andb
add
into
stc
or
or
aam
fisubrs
xor
dec
xchg
fwait
adc
lea
xor
and
inc
cwtl
iret
loope
cmpsl
mov
xorl
or
dec
xchg
fnstenv
push
rorl
cld
cwtl
mov
push
nop
insb
popf
aas
jge
push
jbe
jbe
enter
inc
adc
xor
in
ja
movsb
sbb
ficoms
movsl
xor
test
jb
rorb
lcall
cld
pop
mov
add
push
lods
xor
mov
pop
fisubrs
fs
aas
call
cmc
shl
xchg
insb
incb
movb
add
fadd
fsubp
jnp
or
cld
les
cmp
push
adc
add
add
add
lds
sbb
hlt
addr16
adc
je
mov
jg
and
jbe
cmp
ja
cmp
mov
inc
pusha
js
and
inc
mov
jge
xor
xor
cltd
pusha
mov
mov
icebp
inc
inc
cmp
daa
popa
adc
cmpsl
test
jns
fcmovnbe
sbb
mov
push
fwait
sub
movsl
and
shrl
lret
fisttps
mov
js
cmp
sub
add
in
pop
mov
pcmpgtd
inc
test
rorl
inc
pop
dec
cmp
cmc
mov
enter
negl
popa
into
sub
mov
iret
mov
aaa
mov
hlt
inc
clc
cmovnp
dec
inc
and
sbb
push
lret
nop
lods
roll
xor
pop
pop
fidivs
pop
hlt
xchg
fildl
mov
push
jns
mov
or
rcrb
mov
add
add
sub
cld
cli
jle
dec
nop
xor
add
jecxz
add
fldt
pop
pop
fdivl
mov
inc
xchg
mov
out
cltd
jge
cmp
lret
icebp
aaa
jp
clc
push
roll
cmp
repnz
jno
sti
in
sub
xchg
jne
cmpsb
ljmp
xchg
add
outsb
mov
xor
rolb
ret
cli
jbe
in
sub
test
mov
adc
mov
fdivrl
dec
jo
dec
push
ljmp
icebp
cmpsl
mov
inc
push
hlt
sbb
out
add
pop
outsl
jnp
lock
in
enter
ja
mov
inc
test
clc
out
mul
push
aaa
sbb
icebp
aam
mov
push
jnp
lds
sahf
sahf
shlb
js
xor
fiaddl
mov
sub
xchg
pop
pop
clc
addr16
gs
aad
adc
cli
ds
inc
cmc
jae
pop
add
add
ja
sti
aaa
out
ja
pop
imul
add
int
jge
cmp
cmp
jmp
or
repz
mov
hlt
dec
in
cltd
jmp
call
dec
mull
mov
test
cli
test
adc
adc
push
bound
and
lcall
cmp
or
aaa
push
sbb
push
cli
mov
mov
movsb
mov
xchg
lret
cwtl
mov
push
cli
leavew
arpl
roll
cli
or
incl
xchg
dec
xlat
lods
cmp
adc
test
les
sbb
mov
lahf
mov
seto
cmp
sbbl
outsl
mulb
jb
out
bound
leave
clc
add
sub
and
dec
mov
adc
cld
push
sbb
js
push
xchg
test
mov
or
add
imul
das
xchg
rolb
add
ror
cltd
outsl
mov
aaa
pushf
jle
mov
and
add
add
gs
aas
mov
repnz
dec
es
mov
sbb
gs
sarb
lret
inc
pop
notb
mov
sub
jle
dec
and
or
fcompl
lock
dec
sbb
sbb
add
mov
and
mov
cmpsb
sbb
js
xchg
popa
lea
aad
push
mov
dec
lds
sbb
and
add
cmp
lcall
rcll
divb
ss
mov
dec
pop
lret
mov
pop
adc
int
lods
jmp
adc
cs
adc
shl
inc
mov
imul
stos
push
mov
fsubrp
sub
push
sbb
cmpsb
cltd
sbb
or
ja
mov
in
sub
std
fstl
fwait
and
adc
adc
add
add
ja
lcall
mov
xchg
daa
out
add
dec
mov
and
fiaddl
jno
call
adc
das
sbb
xchg
aam
xchg
int
ret
pop
in
sbb
data16
jmp
sbb
out
jmp
out
popf
add
jo
loope
sub
cmp
loopnew
xor
mov
or
pop
cmp
data16
shl
lock
jmp
cwtl
cmp
add
dec
cmpb
mov
dec
ret
pop
daa
gs
fcomps
sbb
insl
std
pop
or
mov
scas
dec
adc
xlat
dec
ljmp
test
or
hlt
jecxz
pop
pusha
cld
out
or
mov
ret
jbe
dec
mov
imul
mov
cmpsb
adc
rcl
shl
and
and
cmp
out
jp
adc
call
xor
add
push
mov
add
add
add
lock
jg
in
and
inc
enter
add
add
pop
or
fnsave
imul
loope
rcll
pop
repz
es
jecxz
adc
xor
push
mov
push
pop
and
xor
cmp
mov
push
or
into
arpl
mov
stos
mov
xor
ficomps
pop
push
jns
fld
xor
fwait
lock
insb
add
outsl
sbb
mov
lock
push
mov
lods
jbe
push
jb
dec
je
mov
je
mov
cmpsb
sbb
sub
cs
movl
cmp
mov
iret
out
sbb
pop
inc
xor
cld
cwtl
xor
push
lods
jl
adc
mov
imul
icebp
into
scas
sahf
lock
outsb
jne
test
push
mov
sub
sub
and
jo
mov
xchg
int3
push
add
ret
sbb
insb
sbb
pop
aam
jbe
pop
sti
and
mov
add
add
pop
xlat
fistpl
mov
add
add
adc
into
xor
call
iret
leave
sbb
js
flds
push
imul
push
das
mov
push
in
sub
dec
popf
daa
arpl
xor
jbe
push
test
push
push
sub
mov
popa
outsl
repnz
xchg
daa
mov
mov
xor
les
sub
outsl
sbb
ljmp
jb
adc
or
cmp
rcrb
stos
and
scas
fsubs
mov
mov
mov
jns
and
fadd
jae
sbb
stc
rcll
or
lea
icebp
cmp
fldlg2
loop
stc
add
sbb
or
test
xor
sar
adc
xchg
sub
cs
xor
sub
cwtl
and
adc
mov
add
xchg
cmc
or
mov
mov
dec
aam
mov
or
lret
test
add
add
mov
dec
js
stc
mov
dec
int
push
add
add
add
daa
and
enter
dec
ljmp
pop
sub
lret
sub
loopne
xchg
hlt
dec
push
fsubrl
test
aam
cmpsl
in
jnp
fwait
scas
pusha
lods
rcrb
inc
push
movsl
xchg
push
loopne
push
mov
and
cmp
cmp
pop
xchg
pop
pop
pushf
mov
cmpl
insl
dec
lods
out
xchg
or
jmp
aaa
xor
cmp
adc
add
sbb
ds
clc
inc
mov
cld
jg
lea
stos
sub
movl
sbbl
ja
test
sub
push
inc
inc
icebp
ret
pop
and
mov
add
sub
push
mov
jbe
fwait
adc
flds
push
push
jge
andb
fs
cwtl
insl
lret
fbld
sbb
pop
xchg
pop
int
push
jg
js
cmp
and
lea
int3
adc
rcrb
mov
pop
insb
fildll
fwait
jns
jns
adc
cmp
add
add
push
cmp
stc
insb
push
cmc
jbe
hlt
arpl
adc
es
mov
call
jo
mov
jno
movsb
jns
sbb
leave
xor
in
lods
jo
js
push
push
aam
mov
scas
lds
mov
cltd
jno
push
jmp
mov
je
cmp
add
push
xor
cs
out
sbb
shlb
pop
jmp
fadds
movsl
movsl
push
adc
mov
gs
fwait
and
mov
cmp
addr16
pop
leave
cmpsb
push
movsb
adc
sar
mov
fs
lcall
xchg
movsl
mov
andb
inc
lret
icebp
in
test
cltd
cmpsl
iret
pop
rolb
das
outsl
enter
das
xchg
pop
insl
cmp
jl
xchg
xor
loope
cmp
data16
jb
ljmp
inc
pop
icebp
dec
xor
out
mov
shll
test
cwtl
aaa
add
add
mov
pxor
jnp
adc
jne
lods
stc
loopne
inc
jmp
add
inc
imul
jns
divb
jmp
xchg
xchg
or
xchg
and
or
jg
dec
in
and
lahf
sub
aad
out
shll
addb
jne
cs
xor
jbe
dec
dec
flds
outsb
test
into
in
call
inc
fsubrl
out
mov
mov
dec
add
push
jge
bound
xor
lods
pop
shlb
into
outsb
js
jnp
sbbl
fisubs
jne
mov
pusha
inc
flds
pop
inc
shl
pop
orb
imul
adc
dec
lds
dec
dec
outsb
and
push
shl
mov
call
adc
popf
insl
add
dec
shll
inc
or
mov
orl
or
aam
lcall
es
fistps
stc
xchg
xorl
clc
loopne
addl
jmp
add
out
lods
xor
aas
xlat
fistl
das
call
in
add
add
rcrl
pop
dec
in
sub
inc
push
fs
mov
push
icebp
imul
xor
stc
aas
pop
lods
lret
sub
gs
or
in
cmp
lods
add
cmc
sarl
inc
xchg
loope
fsts
add
int3
out
cmpsb
mov
loopne
add
mov
mov
jmp
mov
out
fmull
xchg
push
je
imul
insb
mov
or
call
nop
repnz
xchg
add
cld
pop
sti
imul
sub
ja
pop
outsb
imul
shll
or
cwtl
add
xchg
es
aas
xor
dec
outsb
and
lds
sub
xor
sahf
sub
rol
loopne
mov
movsl
mov
xor
cwtl
lea
adc
adc
mov
pop
fnstsw
add
jb
scas
decb
fisttps
push
or
dec
in
add
add
xlat
pop
push
dec
enter
mov
ss
iret
cmp
movsl
sub
shrb
dec
xchg
imul
out
xchg
adc
por
push
js
std
roll
neg
mov
fsubp
inc
lea
mov
sbb
sub
push
ds
adc
and
sbb
lods
inc
dec
imul
adc
test
lods
fdivs
addr16
dec
jmp
jno
movsl
lods
movsb
dec
xchg
pop
bound
push
aas
xchg
leave
ret
pop
sbb
icebp
out
lods
test
test
push
add
ret
sbb
push
nop
jecxz
testl
xor
lods
mov
pop
mov
xor
inc
gs
pop
mov
rcr
call
in
pop
cld
je
mov
sahf
mov
lcall
xor
xor
rolb
mov
pusha
add
add
xlat
mov
xchg
xchg
sub
add
add
aam
push
scas
xor
and
jp
loop
lds
dec
std
cmpsb
sub
adc
cmp
xchg
mov
rcl
mov
in
cmpsb
mov
dec
jge
stos
lods
xlat
fists
pusha
imul
fwait
shrb
add
xchg
sbbb
cmp
std
aaa
mov
sbb
jle
imul
xor
out
in
repz
mov
adc
cmp
ss
mov
pop
stos
mov
ficompl
sbb
mov
mov
jl
je
or
out
xchg
daa
sti
cli
mov
mov
je
mov
loope
pop
pusha
sti
jae
adc
icebp
pushf
fwait
ss
xchg
dec
dec
loope
dec
fldl
test
cmpsl
stos
movsl
or
mov
and
adc
scas
lds
aaa
xchg
aaa
xchg
pop
dec
ret
sti
cmp
add
lods
cmp
lods
aas
mov
mov
add
push
dec
imul
adc
neg
into
push
mov
pop
adc
ret
dec
leave
das
lds
push
push
add
jl
fwait
sbb
addb
xchg
pop
mull
ja
shlb
repz
pop
es
and
sub
jnp
mov
sub
adc
xchg
fstps
scas
jno
push
fmul
lock
cmp
sub
push
xor
frstor
popa
ljmp
adc
test
pop
sarb
out
xor
push
and
xor
notb
out
outsb
js
sti
scas
lahf
pop
icebp
pop
jno
mov
or
lods
jmp
popa
nop
adc
je
jle
add
cli
dec
fbstp
fisttps
mov
adc
scas
out
mov
or
cmpsl
dec
imul
mov
inc
out
test
add
loop
fadd
sti
mov
in
sbb
add
add
sub
pop
lods
inc
push
pusha
call
inc
test
or
aam
cltd
clc
adc
ds
push
mov
xor
mov
lods
enter
aas
loope
add
fisubs
stc
lds
xchg
xchg
outsb
jp
xorb
pop
out
mov
dec
out
sbb
stos
sbb
repz
int
dec
push
add
int3
xchg
subb
outsb
movsb
sub
push
test
pop
mov
pop
out
call
ret
and
stc
sub
pop
dec
pop
or
ficoml
stos
arpl
jns
and
jle
jo
sbb
movsb
insl
testl
dec
mov
push
jge
addr16
xchg
inc
add
mov
mov
mov
sub
sbbl
dec
scas
stc
decb
aas
shll
ja
notl
xchg
je
sbb
push
sub
sbb
add
add
into
adc
neg
jge
xchg
jns
jmp
arpl
add
adc
jb
push
mov
and
ss
inc
dec
out
push
leave
fcoml
popa
cld
mov
or
cmpb
sbb
das
movsb
add
icebp
punpckhwd
push
inc
hlt
shrb
sarl
mov
repnz
cmp
inc
pop
add
popa
dec
lds
add
fs
fidivrs
jge
inc
scas
sub
xor
decl
popf
mov
testb
xchg
cmp
mov
mov
fiaddl
popf
aaa
shl
xlat
jns
dec
push
mov
les
dec
mov
pop
xor
loopne
movsl
mov
xor
jne
cli
mov
stc
sbb
and
xchg
std
or
inc
cmc
jne
popa
sti
outsb
or
shll
ret
mov
sub
adc
xor
mov
sub
stc
push
jge
jb
dec
xchg
inc
cmp
adc
xchg
rorb
cli
dec
inc
int3
ret
sub
add
dec
sub
sub
fisubrl
lret
repnz
add
or
mov
mov
xchg
cmp
lds
inc
sbb
in
pop
out
xor
call
les
mov
sbb
dec
add
mov
es
fistpll
mov
mov
inc
je
iret
loop
lret
movsb
mov
jg
inc
pop
aam
mov
aaa
jb
xchg
xor
jle
clc
int
sbb
das
rcrb
scas
lahf
xor
push
and
jnp
jge
mov
or
aad
in
mov
outsb
mov
and
fs
push
and
mov
loope
pushf
mov
mov
mov
xchg
sub
xchg
sub
mov
movsl
jb
mov
lock
call
cmp
push
lcall
add
xchg
arpl
rcrl
movsb
cs
stos
fldcw
mov
sti
arpl
fld
out
mov
pop
mov
xor
ss
or
leave
push
add
add
ja
and
aaa
divl
ret
stc
in
repz
add
in
jmp
jb
imul
js
pop
mov
mov
dec
add
outsl
imul
mov
mov
jns
addr16
mov
insb
cltd
xchg
lret
std
scas
adc
dec
jo
push
xchg
rcrb
lret
mov
dec
shrb
mov
icebp
adc
lahf
sub
aaa
lds
ja
xchg
into
mov
pop
dec
stos
mov
xchg
ret
xchg
lcall
and
aaa
fwait
aas
xchg
ret
xor
or
sbb
aas
fidivl
and
adc
jae
push
adc
sbb
push
pop
cmpsb
clc
cmpsb
lcall
bnd
jb
pop
push
rol
fadd
mov
insb
and
testb
jge
and
fcomps
mov
sbb
xor
fmul
mov
pushf
popf
add
add
mov
cmc
mov
cltd
mov
add
add
pop
int3
cmpsl
add
pop
out
sbb
dec
cmp
pop
sub
lret
insl
push
js
arpl
inc
stos
jle
push
call
pusha
out
mov
dec
or
adc
enter
fucomp
mov
daa
sbb
movsl
xchg
jl
and
push
jle
fidivrl
sub
out
mov
cwtl
pop
mov
xchg
mov
add
jmp
out
sbb
inc
push
out
test
popa
xor
clc
scas
pop
dec
mov
jle
and
out
xchg
lods
mov
push
sti
xor
sub
fldl
popf
nop
scas
in
ss
fucomp
ret
aas
jb
sub
repnz
mov
movsl
out
inc
sub
mov
jb
inc
and
sbb
sbb
ss
xlat
stos
loopne
mov
in
fisubl
sbb
mov
mov
add
cmc
xchg
sahf
xor
add
jle
jne
pusha
popf
pop
andl
cmc
add
add
idivb
mov
push
sahf
hlt
xchg
mov
lods
mov
in
adc
divl
push
jno
jmp
sbb
call
jecxz,pt
pop
xchg
sbb
push
bound
sub
and
mov
jge
roll
or
dec
push
icebp
loopne
iret
shll
dec
jno
int3
mov
outsb
adc
add
rcrb
movsl
push
and
jnp
in
mov
adc
cld
popa
or
cmp
cld
pop
inc
mov
dec
out
mov
insb
mov
rorb
lds
jns
sbb
clc
rolb
sbb
leave
jbe
xchg
fsts
cs
sbb
rclb
mov
rclb
mov
xor
push
jo
pop
pop
dec
aaa
stos
movsl
add
repz
out
sub
jge
xor
inc
mov
insb
popl
add
imulb
mul
xor
and
add
add
into
nop
outsb
mov
xor
mov
inc
scas
and
push
inc
push
or
clc
sbb
lock
sbb
add
mov
jecxz
add
pop
push
mov
mov
adc
lods
inc
es
iret
in
pushf
scas
scas
stos
jns
mov
pop
mov
sbb
add
jle
cmp
mov
dec
add
push
mov
fsubs
lds
iret
adc
lret
scas
adc
add
js
or
gs
les
sbb
lret
insb
mov
mov
insb
or
xlat
daa
sub
adc
fs
pmaxub
dec
ret
scas
fcoml
movsl
inc
cli
repnz
imul
push
test
fidivrl
imul
xchg
sub
out
and
cltd
sub
dec
cmp
jns
data16
in
mov
inc
and
xchg
push
jno
add
add
add
xor
jb
jae
std
lea
jl
add
add
xor
imul
stos
cmp
fiadds
aad
loopne
outsb
pop
mov
loope
lods
icebp
fs
cmpsl
jge
cmp
jmp
jnp
lea
std
cltd
lcall
cmp
inc
mov
les
clc
mov
mov
sbbl
sub
idiv
divl
daa
mov
leave
cmp
dec
bts
push
or
sub
mov
sbb
in
sub
sbb
pop
out
pop
daa
or
notb
sbb
imull
or
lods
jg
inc
mov
dec
xchg
mov
mov
orb
iret
pop
jo
sahf
cmp
push
aad
mov
and
pop
js
sbbb
cmpsl
cmp
leave
hlt
call
mov
rclb
jb
testb
inc
xor
sub
adc
aas
imulb
js,pt
jle
add
adc
int
in
idivl
js
mov
std
xor
add
add
lcall
inc
adc
loopne
sbb
sarb
stos
test
xor
or
js
loope
aad
pop
xchg
push
mov
mov
add
sarb
cltd
roll
xchg
push
ret
into
xlat
mov
fildll
call
sub
lods
jae
push
sub
cmp
insb
or
push
sti
mov
inc
aam
not
incb
insl
mov
pop
pop
cmc
push
sbb
test
mov
mov
dec
dec
jecxz
mov
stc
pop
add
mov
push
das
push
add
or
daa
fcompl
lret
es
cli
push
inc
or
std
push
or
in
stc
into
jns
pop
addr16
xorl
dec
out
sbb
jle
sahf
xor
push
jle
loop
fs
leave
cmc
dec
into
inc
add
les
inc
cmp
scas
push
push
clc
add
add
jecxz
inc
cli
aas
into
lret
mov
out
xchg
add
add
push
mov
lea
jecxz
imulb
idivl
rol
repnz
dec
push
pusha
mov
jp
or
xor
and
cmp
jne
and
clc
test
shlb
shlb
cmp
je
sub
mov
repz
sti
fcoml
hlt
rolb
stc
insl
pop
mov
dec
xacquire
pop
add
push
xchg
out
enter
sahf
aaa
fst
xchg
test
sbb
int
mov
les
xchg
int3
sbb
add
xchg
sub
mov
xor
sbb
sub
js
outsl
fs
push
js
sub
sbb
jno
sbbl
pop
or
dec
frstor
mov
fisubrs
dec
push
lcall
fstl
daa
xor
and
mov
pop
mov
aaa
jecxz
mov
sbb
push
dec
lret
cmpsl
int3
ds
outsb
in
xchg
in
add
add
lcall
push
push
sub
cli
add
add
mov
or
jl
inc
adcb
dec
pop
mov
jnp
mov
mov
jge
sub
daa
push
mov
jae
arpl
out
sahf
jle
jp
stos
pop
mov
mov
cld
shrb
loope
xor
bound
mov
and
mov
mov
addr16
es
sarb
cltd
jno
xor
les
lds
pop
and
mov
nop
add
movsb
mov
mov
mov
mov
fwait
adc
js
push
daa
sbb
test
add
in
movsl
mov
mov
pop
movsl
xchg
mov
push
mov
pop
mov
adc
movsb
mov
dec
or
cmp
pop
out
pop
out
imul
test
mull
insb
es
sub
call
mov
xchg
int
clc
lds
push
adc
add
jae
cltd
dec
mov
jno
adc
and
nop
sti
add
add
cmp
push
xlat
divl
loop
mov
fldt
icebp
and
cld
or
push
pop
cmp
mov
out
test
call
stos
jno
xchg
or
cmp
sbb
dec
dec
cmp
imul
lret
sbb
das
and
xchg
popa
jle
and
push
lahf
add
dec
lock
mov
dec
and
ret
mov
mov
or
jecxz
iret
scas
xchg
mov
adc
mov
mov
mov
or
xchg
loope
add
int
jecxz
lahf
in
mov
test
jmp
jne
in
mov
in
jo
sbb
cli
jg
mov
aam
pop
int3
scas
dec
stos
adc
cmpl
adc
mov
and
sub
pop
ds
jp
rclb
lcall
mov
inc
mov
das
xchg
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
in
pop
ret
add
add
arpl
adc
jp
imul
stos
push
sbb
sub
add
or
push
loope
jns
xchg
dec
das
mov
pop
xchg
cmp
outsb
in
imul
fsubrp
jnp
add
stos
shrb
or
lret
mov
add
dec
ds
orb
jne
insb
add
mov
into
cmp
cmpsb
outsb
fsubrl
ror
add
mov
inc
adc
sbb
jg
lret
pushf
adc
jge
std
in
push
add
pusha
cltd
push
jecxz
daa
cltd
ljmp
pop
push
xor
lods
adc
loope
stos
inc
fimull
imul
mov
adc
loop
add
xchg
cltd
in
pop
jnp
cmp
mov
jno
jl
leave
mov
pop
ds
sbb
movsb
mov
mov
pop
frstor
scas
adc
mov
jno
add
add
test
jg
push
pop
push
mov
lcall
add
fmulp
pop
jecxz
push
cmp
xlat
and
repz
cli
fwait
xchg
lods
inc
cmc
in
pop
scas
cmc
add
inc
dec
out
add
push
pop
mov
dec
in
sub
fmul
cmpsb
call
std
pushf
shlb
ror
pop
out
repz
insb
lahf
aaa
lock
pop
adc
icebp
cwtl
inc
lret
dec
in
das
sub
or
cmpsb
ss
shrb
lods
inc
mov
insl
gs
mov
sbb
popa
add
push
popf
push
jl
out
jg
and
in
sbbl
push
js
adc
jmp
pop
out
popf
xchg
in
mov
ret
mov
les
nop
push
repnz
mov
fcoml
lret
fwait
call
mov
push
cmp
or
pop
ja
push
mov
sbb
mov
fbld
int
jle
mov
mov
mov
jbe
test
add
adc
movsb
push
in
cmc
jne
sbb
js
dec
jle
lahf
incb
add
mov
and
jp
dec
repnz
icebp
cmp
fldcw
fisttpl
out
dec
test
dec
xor
imul
xor
jmp
fisttpll
jnp
pop
and
pop
dec
std
movsb
push
fiadds
xor
sbb
outsl
mov
test
inc
push
and
in
and
and
in
xlat
sbb
push
mov
mov
lret
daa
iret
xchg
jge
movsb
lods
xchg
pop
pop
in
inc
add
outsb
lods
ret
gs
and
scas
test
jbe
into
enter
int3
cmpsb
test
mov
mov
es
adc
sub
aaa
ljmp
jecxz
mov
sbb
or
mov
bound
call
out
adc
jg
adc
fstpt
fcomps
les
js
rorb
adcl
cltd
fisttpl
mov
jno
sbb
xchg
addr16
rcrl
rcl
push
jnp
inc
add
add
out
shlb
aas
out
int3
mov
adc
pop
movsb
incl
add
dec
test
shrb
lea
mov
ficompl
test
sub
pop
mov
xor
pop
loop
xchg
mov
pop
pop
add
dec
mov
xchg
std
mov
dec
mov
cmp
fidivrs
rol
push
mov
cli
pop
fwait
lds
mov
pop
orb
cmp
or
out
jle
jecxz
pop
cwtl
and
mov
xchg
sbb
ljmp
xchg
rorl
aas
js
les
or
pop
adc
cmpsl
xchg
jno
cmp
loop
ficoms
or
and
mov
es
fmull
je
aas
rcll
aaa
sub
adc
mov
xchg
aas
pop
push
cltd
add
insl
stos
lcall
adc
adc
leave
cmc
fwait
jle
popf
test
sbb
das
jae
inc
push
hlt
push
inc
add
add
mov
lcall
sub
test
add
add
lds
daa
xchg
lret
frstor
jns
je
push
push
into
std
sub
pop
and
push
or
sbbb
cmpsb
js
mov
sbb
xchg
call
inc
ret
mov
imul
cmp
andl
pusha
shlb
xchg
cmp
scas
cmp
xor
push
or
mov
out
sbb
mov
push
or
leave
f2xm1
jecxz
adc
repz
mov
mov
aaa
jle
xchg
sti
lock
in
dec
imul
mov
loop
add
or
ljmp
in
add
fistps
cmp
dec
cmc
subl
xor
adc
notb
mov
mov
mov
scas
outsl
mov
or
dec
mov
fildll
add
pop
popa
add
add
ret
bnd
cmc
inc
stos
repz
popa
repnz
add
add
push
push
popa
adc
cli
filds
mov
fmull
cltd
std
enter
rolb
xchg
xor
add
cmp
cwtl
out
mov
inc
cmp
jle
sar
dec
inc
jge
repz
in
xor
outsl
ret
and
dec
xor
js
push
add
pop
hlt
std
clc
add
mov
jne
add
and
inc
and
mov
xchg
inc
jae
mov
sti
mov
insb
test
das
mov
fldl2t
mov
xor
and
or
jae
push
fldl
push
cmpl
push
sbb
push
cmp
pop
es
scas
fadds
jl
fwait
pop
in
xchg
or
add
and
test
shl
pop
lods
lahf
out
lods
scas
repnz
pop
mov
xchg
out
xchg
add
std
aaa
mov
shll
inc
mov
add
add
mov
leave
xchg
fwait
test
shrb
fcmovnu
inc
or
mov
into
and
add
in
rorl
int3
or
push
std
fdivl
add
mov
xlat
and
pop
xchg
mov
jns
xchg
je
xchg
icebp
sub
cwtl
mov
bound
incl
dec
cmp
xchg
pop
push
push
dec
lea
ljmp
imul
mov
rcrl
adc
in
pop
stos
ror
push
fistpll
cmp
xchg
outsb
fstpt
test
add
and
idivb
push
shlb
outsl
push
push
cmpsl
je
xlat
adcl
sbb
cwtl
dec
call
lock
jno
cmc
push
icebp
dec
push
aaa
dec
mov
js
cmp
and
jnp
lods
xchg
mov
add
insl
aam
mov
scas
add
jge
in
mov
add
add
inc
inc
xchg
imul
mov
jbe
loop
push
outsb
popf
mov
push
imul
mov
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
mov
lret
cmpl
imul
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
