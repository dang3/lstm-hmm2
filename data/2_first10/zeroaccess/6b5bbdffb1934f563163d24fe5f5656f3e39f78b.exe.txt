push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
jl
scas
movsl
bound
fstpl
bound
sub
pop
add
pop
jne
cli
out
inc
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
mov
xchg
outsl
xchg
inc
add
jnp
insl
dec
test
jo
seta
cmp
lds
dec
out
mov
or
lea
jns
push
and
les
push
lcall
push
imul
call
daa
popf
mov
dec
sar
add
fdivp
pop
dec
jne
lret
movl
jmp
push
lret
dec
stc
out
shl
scas
inc
jnp
jge
jg
mov
movsb
add
sub
out
stos
add
inc
rclb
dec
mov
inc
ja
adc
push
sahf
xchg
add
lods
out
jecxz
lods
mov
mov
jle
outsb
dec
lahf
jnp
pop
adc
int3
loope
pusha
lea
das
sti
add
cmp
popl
data16
stos
adc
imulb
popf
jo
cltd
push
addl
push
jns
bound
dec
or
cmp
cwtl
xor
addr16
call
push
dec
jae
cmp
cmp
sahf
popa
cmp
inc
adc
sbb
pop
dec
mov
inc
jmp
mov
or
pop
sbb
repnz
movsl
lahf
sbb
call
aam
jae
shlb
cmpl
or
test
pop
add
lret
in
int3
dec
das
mov
fisubrs
jne
clc
mov
sarb
xlat
das
in
in
push
sarb
cmp
int
pop
lahf
mov
cmp
adc
mov
inc
nopl
pop
fstps
inc
mov
sbb
repz
sbb
int
push
xor
push
cmp
sbbb
or
dec
ud1
sahf
mov
dec
cmp
sbb
scas
push
pop
mov
add
xor
mov
fadds
cltd
adcl
cmp
hlt
push
and
mov
xchg
push
add
jp
call
cmpsb
push
mov
pop
repnz
movsb
xor
aas
shl
loopw
xor
xor
push
push
shlb
test
dec
lock
sbb
and
sbb
clc
imul
sub
inc
pop
inc
inc
sbb
xor
or
pop
into
int3
imul
es
sub
popf
rcll
stos
push
pop
mov
pushf
and
jae
push
movsl
inc
push
jmp
dec
call
jo
popa
push
cwtl
les
popa
add
rorl
ret
hlt
pusha
movsl
in
xchg
data16
repz
or
das
cmp
cmp
mov
and
adc
mov
mov
notl
aam
cmp
cmp
inc
push
sub
push
push
pop
xchg
and
dec
and
sarl
push
dec
mov
inc
popa
push
bound
add
mov
inc
out
sub
shll
sbb
cmpsl
pop
cmpsl
lods
sar
in
sub
lret
rcrb
repnz
jmp
gs
lds
cmpsl
adc
stc
ret
mov
repnz
fbstp
inc
mov
adc
sub
and
jne
mov
int3
jecxz
adc
aam
mov
mov
pop
mov
adc
insb
adc
or
aaa
push
pop
xor
into
mull
push
icebp
stc
fs
cmp
test
jae
sub
mov
in
or
outsb
dec
addl
mov
flds
jle
mov
and
mov
mov
shll
push
fistl
lods
or
sub
jle
mov
enter
jo
mov
ret
sub
aaa
jmp
or
xorps
mov
cmp
mov
repnz
inc
iret
loop
mov
push
test
outsb
insl
dec
push
xchg
cmp
dec
imul
in
call
mov
stos
jecxz
std
jmp
fwait
adc
cmpsl
pop
cwtl
ficoms
xchg
mov
add
sbb
adc
and
cmp
stos
adc
jne
test
imul
nop
ljmp
dec
hlt
filds
dec
mov
ds
or
repnz
test
stc
int
cmpsb
xor
insb
add
push
movsl
test
sub
push
fcomps
out
sbb
sub
sub
cmp
inc
cltd
sub
dec
mov
in
rdmsr
clc
je
lock
movb
rclb
pop
sbb
mov
adc
push
mov
mov
mov
icebp
into
xchg
xor
repz
out
cmp
push
test
jp
mov
inc
jb
adc
push
mov
and
arpl
mov
stc
fcompl
xor
pop
mov
xchg
stos
nop
mov
cmp
aas
ret
nop
in
ss
scas
mov
sub
ret
xchg
lcall
lods
pusha
iret
add
in
outsl
mov
cld
stos
into
pop
mov
mov
pop
mov
and
push
or
es
jae
inc
jp
pop
jmp
imul
lods
and
mov
stc
jne
mov
ffreep
push
xchg
add
aam
shrl
ja
adc
jle
xlat
inc
jae
push
popa
dec
adc
insb
inc
push
push
sbb
adc
das
jbe
call
xchg
shrb
xchg
push
je
insl
js
fdivrl
iret
or
sbb
add
xor
mov
fldcw
sub
test
cmpsb
inc
xor
push
sbb
xchg
ret
xchg
sbb
ret
add
pop
jmp
mov
repz
xor
lds
cwtl
stos
mov
mov
dec
jg
popf
sub
dec
enter
in
int3
fcoml
and
sbb
adc
movsl
adcl
mov
xchg
pop
jno
xchg
aaa
rolb
lcall
inc
shl
push
pop
xor
mov
mov
sub
dec
shll
xchg
mov
leave
cmpsl
pop
cmp
data16
int
add
xchg
stos
sub
mov
add
mov
outsl
or
sti
push
dec
mov
into
in
popf
jbe
and
push
popa
dec
add
adc
incl
inc
in
out
pop
push
adc
xchg
inc
xchg
sbb
mov
inc
leave
pmulhuw
mov
mov
sbb
into
fidivrs
mov
ret
cmpl
cmc
mov
and
adc
inc
jnp
or
and
imul
dec
xlat
pop
cmp
shlb
idivl
out
push
into
cmp
sbb
loopne
sub
or
scas
std
mov
std
push
subb
call
mov
mov
push
test
hlt
xor
cmpsb
les
adc
sbb
push
xchg
push
mov
lods
divl
test
cli
jl
and
and
cmpsl
xchg
pop
fcompl
or
xor
push
iret
adc
out
mov
or
popf
fldcw
arpl
sahf
jb
aad
push
add
popa
stc
push
xchg
shl
or
pop
es
mov
jb
or
or
lcall
add
cs
aad
clc
push
dec
cmc
ds
pop
mov
push
cmp
inc
push
or
lret
imul
adc
enter
xchg
mov
mov
xchg
cmp
adc
xchg
jns
cmc
test
jge
xchg
sbb
out
and
cmp
jl
lods
fistpll
add
nop
fisubl
push
daa
xor
adc
push
add
xchg
mov
mov
insl
mov
pushf
ds
sub
pop
xchg
cmp
test
jle,pn
cmpsl
int3
jp
ljmpw
loopne
sub
shrl
rsqrtps
push
mov
sbb
sbb
int
call
ret
fstl
inc
insb
out
pop
add
hlt
xchg
repz
icebp
xlat
in
and
push
push
jnp
push
dec
and
fcmovu
ficompl
jecxz
push
cmp
jle
fdivl
push
fucomi
mov
dec
adc
andl
inc
jno
int3
inc
xor
and
data16
popa
and
pop
mov
out
mov
lods
fsubrl
into
call
jbe
popf
shlb
js
jle
inc
push
cmp
sbb
jns
pop
inc
add
mov
add
cmp
xor
lret
pop
xchg
sbb
fistpll
icebp
repz
inc
jno
stos
lret
aam
ja
mov
dec
aad
sbb
ret
mov
sub
mov
scas
pusha
xor
mov
sbb
mov
das
loopne
mov
sbb
cmp
mov
push
outsb
into
push
adc
test
jmp
rcl
ss
pop
lret
clc
shr
xor
repnz
pop
inc
pop
in
int3
out
and
arpl
mov
mov
push
stc
push
jbe
sbb
aas
mov
pop
jge
out
hlt
std
sbb
rclb
jp
mov
push
aad
mov
bound
test
and
icebp
mov
push
cmp
scas
shl
jecxz
mov
mov
mov
sub
xor
mov
push
rcrl
shrb
testb
sahf
lret
lods
dec
jbe
dec
mov
movsl
decb
push
std
push
push
push
mov
jge
outsb
add
sahf
add
inc
iret
ljmp
add
push
lret
test
xchg
in
and
inc
movsl
insb
sbb
movsb
stc
adc
iret
jp
jmp
ficompl
add
add
mov
call
sub
or
push
in
dec
stos
shlb
add
jmp
in
xchg
std
cmp
stos
int
xor
movsl
sub
shl
mov
movsb
in
incl
or
gs
enter
mov
mov
loopne
push
dec
push
popa
outsb
cmp
dec
or
cli
test
lods
push
and
mov
stos
push
pop
fisttpl
enter
arpl
or
leave
mov
cmp
enter
ljmp
shrb
pushl
dec
cmp
xlat
rcrl
push
dec
push
jno
add
rcl
mov
stos
jae
and
in
cli
test
pusha
mov
sub
out
lock
imul
outsb
dec
aaa
push
fstps
test
push
cmp
ss
add
xchg
jle
pop
loope
add
in
stc
test
xor
js
ss
jge
push
fstl
imul
fwait
jae
mov
std
add
push
push
movl
dec
push
bound
xchg
or
push
pop
pop
enter
stos
and
mov
scas
daa
andl
es
jle
daa
push
arpl
or
das
mov
das
sahf
adc
xor
push
mov
iret
aam
sbb
jns
inc
xchg
inc
or
out
xchg
imul
mov
xor
pop
sub
push
sub
and
pop
lods
je
idivb
sub
std
enter
clc
or
adc
aam
push
jno
dec
lea
call
add
inc
push
aad
sbb
mov
pop
xor
xor
loope
stos
scas
add
fucompp
int3
out
inc
jle
sbb
enter
pop
int
int
popf
pop
cmp
nop
ficoml
jmp
ljmp
pop
in
sub
lds
inc
sub
fidivs
xchg
sbb
jp
mov
scas
repnz
or
jmp
insb
lock
xor
out
jmp
push
lcall
xchg
and
cmp
leave
stos
lods
jmp
ss
mov
das
cmp
cmp
fadds
aad
sub
adc
xor
das
adc
xor
inc
and
pop
mov
adc
fsubl
adc
out
jb
fisttps
iret
dec
test
test
mov
or
shll
repnz
xor
sub
stos
xor
test
popa
lcall
xor
mulb
lahf
and
inc
jmp
popa
dec
out
in
shl
inc
cmp
and
dec
push
shlb
sbb
aaa
rcrb
pop
mov
mov
shlb
push
mov
lods
push
jg
dec
je
mov
idivb
addr16
and
adc
scas
mov
lods
add
xor
cmp
lds
xchg
and
rcl
pop
ljmp
repz
daa
jmp
loope
add
rcll
cld
out
loopne
mov
xlat
fmulp
xchg
jbe
ret
leave
fldcw
mov
mov
mov
data16
repz
inc
mov
mov
rcl
out
adc
or
xchg
cld
mov
push
stc
add
jae
ss
pop
mov
fisubs
xor
add
pop
out
loop
push
roll
xchg
push
out
sbb
sbb
jge
sub
test
stos
insb
pop
std
rorb
sub
push
inc
xor
cmpsl
popf
inc
stos
lret
out
ss
dec
iret
jg
pop
jp
mov
lods
dec
add
nop
and
dec
rcr
inc
rcl
xor
cs
fisubrl
jp
es
fwait
repz
or
test
ja
mov
ret
push
daa
or
cmp
cmp
insb
inc
push
ret
inc
outsl
lahf
mov
pop
arpl
rcrb
loope
xor
push
cmpsl
lods
ret
data16
mov
cmpsb
sub
dec
nop
push
test
mov
mov
and
add
aad
fucom
lcall
jg
daa
sti
add
mov
mov
int
es
jmp
add
push
mov
xchg
in
cmpsl
scas
push
outsb
cmpsl
push
sahf
xchg
sbb
ret
add
cwtl
pop
push
out
push
inc
scas
pop
popa
test
add
or
xchg
test
add
add
dec
and
ss
xlat
inc
mov
lds
push
adc
imul
int3
xor
inc
cmp
push
pop
iret
pusha
in
sahf
xorl
mov
shl
out
outsl
std
pop
jle
test
or
movsb
sbb
fadds
adc
pop
stos
mov
cmp
sbb
or
mov
cmp
inc
imul
add
scas
push
sub
inc
push
outsl
shl
push
data16
test
dec
pop
loope
stos
les
mov
sahf
or
mov
cli
adc
xor
shl
xchg
in
movsb
jmp
aad
fadds
inc
outsb
inc
mov
add
out
loopne
shlb
mov
std
loop
lds
or
mov
jb
cld
cmp
mov
xor
jnp
aad
lahf
inc
mov
push
jno
fidivrs
sbb
adc
je
inc
add
jge
loopne
inc
arpl
es
jmp
dec
xor
dec
sbb
mov
das
frstor
pop
sub
lods
repz
repnz
cmp
ret
enter
and
adc
stc
or
jp
lret
inc
stc
fiadds
aaa
icebp
lcall
mov
xor
xor
mov
fwait
lea
mov
addr16
mov
pop
xchg
call
mov
ds
ret
mov
adc
rolb
sub
inc
xor
adc
sub
in
and
xchg
data16
dec
add
inc
jae
in
ret
fwait
xor
jno
cmp
push
xchg
xchg
xchg
dec
sbb
adc
xor
jg
pop
xchg
jo
inc
push
dec
jbe
ja
fidivs
pop
mov
jp
mov
sub
push
call
mov
mov
loop
and
sti
jg
mov
movlps
loope
test
testl
fnstenv
push
add
push
or
std
jl
clc
cltd
lcall
das
dec
aas
js
lea
mov
out
mov
and
fsts
mov
stc
sbb
mov
in
je
mov
mov
sbb
ret
xor
push
inc
push
ja
rcr
pop
add
mov
adc
pushf
mov
jne
fwait
jno
jb
sub
cltd
test
lahf
subb
or
out
cltd
movsb
lahf
sub
bound
xorl
jmp
sarl
or
hlt
xchg
je
bound
fcompl
push
scas
xchg
push
rcl
pop
fdivs
fmull
push
jo
std
lds
outsb
aam
scas
sti
mov
push
pop
movl
dec
rcll
dec
fidivrs
dec
ljmp
loop
jbe
in
mov
imul
xchg
jge
addr16
push
mov
ret
inc
ficoml
rcrb
push
jg
or
call
inc
std
mov
lahf
lcall
ret
push
jbe
add
mov
jbe
out
fsub
mov
dec
sti
rcl
icebp
jp,pt
mov
sbb
inc
aad
jno
pop
aaa
fisttps
push
push
aam
mov
movl
xchg
int3
insl
mov
and
in
jae
mov
setge
jmp
call
movsl
adc
imul
shrb
lea
add
loopne
fwait
cli
inc
cltd
cmp
gs
test
or
data16
inc
sti
shlb
stos
in
test
sbb
adc
stos
mov
pushf
xchg
pop
lahf
dec
xor
aam
das
sub
dec
aaa
arpl
sti
pop
add
mov
pushw
dec
fldenv
inc
cmp
lret
cmp
nop
in
clc
mov
push
lcall
leave
xchg
int3
int3
or
gs
stos
imul
or
popf
lcall
xchg
or
sbb
std
shlb
test
push
xor
insl
fmuls
or
pop
pop
cmpsb
test
sar
adc
outsl
mov
cmc
push
xor
xchg
hlt
adc
sbb
pop
andl
mov
movsb
outsb
lcall
test
in
mov
jo
dec
mov
orl
sub
jle
cmp
adc
cmp
mov
dec
push
pop
inc
add
int
add
dec
mov
mov
out
out
rclb
stos
add
xchg
dec
adc
ret
pop
jl
lret
out
lock
pop
jbe
fs
and
bound
fs
add
ret
xrelease
and
sbb
repnz
and
mov
sub
fimuls
hlt
mov
push
fimuls
sub
das
add
xchg
out
hlt
xchg
cmp
iret
out
sub
sbb
clc
cli
sbb
cli
hlt
xchg
inc
jb
aam
mov
in
add
inc
xor
out
inc
mov
adcb
imul
or
ja
sub
shlb
adc
pushf
jl
cmp
sbb
test
imul
xchg
jmp
pop
ljmp
push
dec
ss
cmpsl
sub
daa
sub
adc
adc
mov
aad
xor
stos
test
mov
and
dec
cmc
add
or
sub
adc
jo
dec
dec
adc
cld
clc
fildll
rorb
jno
mov
xchg
dec
xlat
shr
pop
ds
ljmp
clc
push
aas
movsl
int
jns
push
jg
ds
inc
push
lods
mov
mov
sbb
fistl
xor
popf
inc
push
lret
ja
pop
push
lds
or
aad
cmp
in
and
enter
or
outsl
add
push
aaa
mov
dec
xor
insb
cltd
pop
sbb
lods
stc
add
lods
fimuls
dec
mov
cmpsb
js
or
fucomp
clc
xchg
pushf
fcomi
leave
lods
xor
in
mov
sti
sub
dec
add
das
dec
dec
aas
icebp
in
fs
fdivr
out
cmp
jp
int
clc
xchg
ja
cld
pop
lret
pop
xor
sbb
or
sti
mov
mov
movl
dec
cmpb
aam
popa
lods
dec
rcll
mov
int3
cmc
repz
xor
pop
rorb
xchg
cwtl
mov
inc
in
dec
gs
jbe
clc
repnz
aad
fs
push
ja
clc
test
fs
adc
mov
ror
repnz
rorb
push
rcll
aaa
negb
cltd
in
cmpsb
stc
nop
pop
pop
jle
pop
icebp
test
and
insl
negb
incl
sbb
xchg
test
jb
daa
inc
pop
enter
xchg
loopne
push
mov
fwait
xchg
cmp
mov
in
mov
cmc
aaa
dec
push
mov
inc
stc
cmp
cltd
lock
psubusb
mov
sti
dec
mov
dec
mov
cmp
mov
lock
or
arpl
push
adc
push
aad
xchg
out
movsl
out
or
xchg
jmp
mov
xchg
inc
outsl
pop
add
xchg
enter
jns
out
in
pop
pushf
mov
test
inc
jge
add
mov
xchg
dec
test
mov
dec
mov
in
ljmpw
pop
mov
int
ffree
aam
test
sub
in
out
mov
imul
mov
test
outsb
imul
movsb
pop
movsl
test
leave
xchg
loope
pop
jle
jmp
dec
nop
ljmp
and
data16
inc
xlat
push
xor
pusha
jb
cwtl
into
inc
gs
mov
test
fisubs
mov
testl
cwtl
mov
sbb
rcrb
push
pop
add
jae
add
sub
mov
sub
and
out
enter
mov
cs
mov
dec
dec
jne
arpl
adc
sbb
inc
mov
pop
shlb
stos
mov
dec
sarb
or
fwait
loope
mov
xchg
pop
jb
in
or
mov
fistpll
cli
jecxz
fldenv
subl
xor
sti
pop
cmp
js
iret
add
add
xor
mov
add
inc
xlat
push
and
xchg
fmuls
xor
imul
sbb
jo
mov
fwait
popf
inc
jb
pop
addr16
xchg
fistpl
or
sub
outsl
cmp
shrb
aad
mov
mov
jmp
loope
xor
mov
cmp
dec
sbb
sahf
repz
stc
mov
sub
sahf
push
sub
dec
add
mov
adc
subb
dec
out
loop
data16
jbe
cmc
lret
sub
jge
push
dec
sti
xchg
xchg
push
and
push
adc
lods
out
shll
nop
push
mov
cmp
imul
sbb
adc
cltd
sahf
mov
sub
mov
push
mov
mov
inc
dec
jg
cld
adc
push
in
aam
adc
cmp
ret
fistpl
and
fsubrl
fnstcw
push
hlt
sahf
daa
in
pop
mov
rcrb
mov
pushf
in
cmp
sbb
xchg
mov
mov
andl
stos
iret
aas
inc
mov
cwtl
xchg
bnd
shl
xchg
mov
sub
mov
pushf
test
pop
test
mov
aas
es
fs
clc
fimull
mov
imul
mov
mov
cmp
add
imul
sub
lret
loope
pusha
cltd
push
xchg
mov
dec
dec
lds
sti
xchg
or
xor
cli
je
insb
stos
fildl
out
sub
int3
pop
mov
stos
fwait
les
jns
xor
negl
cli
or
dec
sub
punpckhbw
sub
aaa
xor
or
je
and
in
or
xor
adc
or
adc
jb
xor
lahf
cli
sub
mov
roll
add
lcall
jmp
in
std
gs
or
pop
dec
int
pop
fxch
fdivrl
and
imul
adc
sub
push
xor
mov
sbb
push
mov
test
cld
cvtps2pi
scas
bound
sbbb
inc
dec
loopne
xchg
lahf
mov
sbb
fimull
mov
scas
negb
and
inc
out
ljmp
fucomi
mov
js
jmp
or
dec
pop
cmc
lahf
out
pop
in
sbb
mov
adc
insb
dec
imul
push
fstpt
cmp
xchg
test
cmp
lahf
mov
add
and
xor
scas
aam
in
and
sub
cmp
dec
es
sbb
enter
shll
adc
sti
adc
push
add
hlt
or
sbb
aam
cs
ret
fwait
outsb
bound
das
adcb
sbb
pop
out
jp
cmp
aas
add
mov
adc
pop
inc
jnp
jecxz
cmc
mov
mov
jge
pop
rcll
mov
xchg
es
popf
cmpsb
mov
mov
cmp
push
test
dec
inc
dec
shll
inc
mov
arpl
lods
insl
insb
fiadds
add
int3
xchg
repz
call
shl
scas
in
dec
int3
aaa
jo
loop,pn
fstpt
ljmp
sbb
pusha
or
sbb
stc
or
scas
pop
std
insl
ret
adc
sbb
xor
roll
mov
ljmp
cltd
jo
fwait
dec
mov
pop
inc
jno
cmpsl
cmc
mov
sbb
or
lret
ret
xor
pop
test
cmp
fstp
loop
clc
jp
mov
out
jmp
popa
imulb
shlb
rcll
jmp
sbb
xor
mov
jl
pop
lea
shlb
jge
es
xchg
mov
sahf
rcl
pop
popf
popa
mov
or
repnz
mov
adc
sub
inc
mov
sarb
dec
sbb
mov
sbb
pushf
in
pop
jne
sbb
pop
jnp
jp
xchg
js
mov
fildl
pushf
test
loope
pushf
cmp
pusha
in
cltd
or
into
dec
add
lds
mov
outsl
sbb
or
pop
adc
mov
jecxz
icebp
loope
cs
xorl
out
rolb
push
cld
rcll
push
loop
rcll
aam
mov
sbb
lea
add
jp
shr
pop
fsubr
jecxz
js
jbe
cld
pop
dec
xchg
inc
andb
xchg
xor
clc
push
push
cwtl
rolb
mov
cltd
mov
lcall
mov
xor
popl
add
jmp
mov
or
loopne
jae
push
mov
pop
bound
or
jae
xor
hlt
ret
dec
jge
mov
pop
sbb
cltd
xor
mov
mov
ret
pop
in
mov
scas
cmp
mov
inc
cmp
jb
push
mov
xor
mov
aas
push
mov
mov
cmp
lds
rorl
dec
mov
sbb
xor
push
jecxz
sbb
mov
adc
jecxz
aaa
add
gs
xchg
repnz
negl
lret
leave
dec
push
fwait
das
out
jae
and
cmp
mov
ret
fdivrs
aaa
push
push
xor
movsl
and
sub
or
js
dec
popf
pop
add
push
popa
sub
sub
mov
fwait
cmpb
in
push
jmp
pop
push
xchg
popa
add
shlb
int3
cli
daa
push
dec
lea
push
mov
cmpl
in
leave
and
jbe
leave
js
lods
lods
mov
pop
lods
cld
or
scas
stos
dec
lahf
mov
pop
sbbb
push
lcall
pop
das
shll
fsubrs
sub
push
mov
mov
dec
stos
loope
daa
push
aam
jge
jbe
mov
push
sub
jmp
dec
out
stc
and
leave
stc
les
ret
aam
stc
dec
mov
test
testb
and
cmp
jge
ret
inc
imul
addb
lret
mov
mov
addr16
test
std
inc
pop
mov
adc
xchg
jl
fadds
das
xlat
sbb
in
jle
loopne
inc
decl
pop
movsl
daa
and
in
xor
repz
out
clc
xchg
pop
in
cltd
mov
jae
sahf
sub
dec
rolb
mov
cs
mov
stos
mov
daa
xchg
sti
leave
insb
test
cmp
imul
jp
out
cmp
mov
fcoml
fstl
fcomps
subl
das
imul
cmpsb
mov
xchg
rorb
cmc
inc
nop
stc
add
mov
xor
stos
mov
sbb
js
std
repz
inc
outsb
mov
lahf
shll
xchg
inc
les
fistl
outsb
jp
ja
sub
mov
pop
lahf
push
clc
mov
push
sbb
jns
jp
dec
shrl
jno
sub
iret
ss
movsl
cmp
es
and
cmp
sbb
call
out
pop
std
ja
addr16
mov
insl
pop
out
pop
or
dec
or
push
mov
cmp
lea
pop
pop
test
mov
add
xchg
pop
imul
ds
repnz
mov
je
add
dec
jle
jns
jnp
test
lea
adc
xor
pop
aad
inc
xlat
shll
adc
arpl
in
mov
push
shll
push
jmp
scas
push
jns
in
movsb
push
pop
mov
jg
out
lret
sbb
jo
push
jge
xor
xchg
pusha
xchg
cwtl
cmpsb
pop
pop
mov
pop
mov
test
push
adc
jno
mov
sahf
sub
push
cmpsb
sub
js
inc
mov
mov
and
arpl
inc
imul
cmp
stos
cmp
mov
aaa
inc
loopne
pop
ljmp
add
sbb
fisubrs
les
ret
lret
mov
inc
pop
xchg
sub
mov
add
iret
movsb
pop
and
xor
mov
jmp
ret
xor
and
aam
jns
pop
add
stos
out
sbb
ljmp
xchg
pop
imul
out
repnz
int
and
in
dec
jae
std
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fsubl
push
arpl
pop
bound
pop
bound
movsl
adc
sahf
ss
nop
test
push
popa
shlb
loope
test
adc
adc
sti
out
push
scas
je
es
adc
jmp
mov
add
mov
pop
and
or
inc
insl
and
lret
fadd
sbb
and
lods
lods
clc
in
movsl
jbe
inc
jmp
adc
cmp
sbb
jp
xor
xorl
stos
fldenv
ja
jno
addl
inc
addb
hlt
mov
enter
lds
or
test
jnp
push
mull
cmp
fldcw
andb
mov
jno
dec
mov
xchg
shl
mov
lods
fwait
pusha
push
fidivl
iret
je
sub
ret
cmp
sbb
setb
cld
mov
loop
mov
icebp
adcl
lret
std
insb
dec
imul
pop
test
subl
call
pop
adc
aam
cmp
lcall
arpl
jb
jl
sbbb
movsl
sbb
fstpl
aaa
inc
mov
xchg
add
out
pop
inc
aaa
outsl
mov
xor
mov
mov
pushl
mov
dec
pop
idiv
push
out
test
int
insl
mov
jmp
dec
sbb
lock
xchg
cltd
xchg
iret
sub
dec
aam
jns
jle
mov
mov
lea
mov
fstpl
and
bound
xchg
mov
jl
lahf
iret
add
mov
push
lcall
movsb
adc
xor
in
in
fidivrl
mov
and
addr16
dec
mov
cmp
popf
roll
push
cmp
sahf
push
ss
mov
lahf
enter
cld
mov
push
sbb
or
test
roll
faddl
lds
std
adc
lods
lea
lds
repnz
aad
or
inc
xor
aad
leave
xor
mov
xchg
aas
sbb
lods
fisttpl
movsb
ss
xorl
cmp
xor
jecxz
mov
aaa
fwait
shlb
addr16
mov
lcall
pop
test
fdivl
inc
ljmp
push
pushf
int3
sti
pop
mov
mov
in
mov
out
cmp
dec
in
xor
cld
mov
mov
shlb
scas
hlt
mov
and
jmp
jno
ja
outsl
pop
push
loope
jl
and
rclb
and
jp
insl
inc
js
out
int
jne
pop
adc
orl
scas
sbb
mov
and
adcl
jecxz
cmp
pop
subb
filds
mov
in
inc
mov
hlt
sub
xchg
notl
es
cmp
mov
xor
push
sbb
push
arpl
mov
jo
add
fbstp
mov
jne
sbb
rclb
and
lcall
mov
es
xorb
and
jg
sqrtps
sti
sbb
jmp
sub
mov
push
mov
dec
ss
mov
call
mov
mov
int
addr16
pop
xchg
out
mov
out
and
arpl
push
xchg
push
push
gs
lret
xchg
sbb
rol
pop
in
mov
sub
leave
inc
lods
push
jp
or
mov
xor
sbb
push
ja
add
enter
roll
outsb
adc
lret
aas
dec
pop
loopne
mov
imul
popa
cmpsl
dec
ret
mov
shr
xchg
dec
push
ss
vcvttps2dq
jnp
adc
mov
jns
push
imul
jo,pn
movsl
leave
into
inc
sub
jmp
inc
jl
adcl
dec
add
sbb
mov
mov
jne
rorb
dec
insb
push
ljmp
icebp
lds
sbbb
add
push
inc
bswap
cmpsl
add
mov
cmpsl
push
adc
push
or
popf
push
je
lods
cmp
push
mov
sub
jecxz
daa
jno
dec
lods
cmpsb
sbb
sarb
scas
jmp
sub
gs
add
adc
insb
ds
ja
rep
xchg
push
add
out
dec
mov
loop
popf
lea
and
inc
or
xorb
es
popf
push
sbb
lret
frstor
sub
out
fcoms
adc
push
lds
mov
xchg
jmp
jo
popf
and
outsb
jmp
js
test
sub
jg
add
aaa
rclb
jbe
and
je
in
loop
mov
ret
mov
arpl
and
addb
out
sbb
pop
cmpsl
xor
jo
add
dec
sub
ret
or
adc
dec
imul
xchg
jbe
mov
jbe
xchg
ds
push
sbb
mov
loope
push
arpl
nop
mov
je
in
cmp
jl
popf
xor
aaa
inc
cmp
test
mov
enter
pushf
sbb
xchg
mov
sbb
sti
testb
fiaddl
mov
inc
xor
imul
pushf
mov
mov
mov
iret
call
gs
fst
add
cltd
jecxz
cs
std
mov
push
xchg
mov
lods
popf
and
mov
sbb
jbe
test
push
and
cld
test
fwait
rolb
mov
ret
out
aas
inc
fdivrl
mov
cmp
fbld
xchg
test
lcall
pushf
aad
icebp
mov
int3
add
adc
int3
push
fadd
push
sub
loop
lahf
xchg
xor
adc
clc
es
icebp
cmc
in
lods
and
push
aas
mov
out
jle
inc
enter
jo
jnp
adc
xchg
sub
inc
pop
mov
test
inc
lret
mov
lret
sbb
cmp
and
repz
mov
jae
gs
cmpsb
gs
sub
inc
int
jne
or
into
and
dec
mov
jo
adc
mov
or
iret
push
lret
pop
fidivl
loop
adc
pop
mov
andb
je
lret
js
pop
lcall
mov
dec
imul
cmp
ret
mov
testl
xor
enter
fs
std
or
add
int
and
pusha
xchg
dec
pop
int
sub
cmpsb
in
lock
loope
addr16
test
jecxz
xor
mov
push
rcll
repz
push
enter
nop
pop
sub
es
push
inc
jl
sbb
ja
xchg
and
int
xor
out
mov
mull
es
add
loope
xchg
push
mov
inc
clc
dec
mov
xchg
test
push
iret
sbb
and
sub
cmp
push
and
jbe
push
jg
xchg
sub
xchg
cltd
inc
mov
jne
lahf
inc
and
fcompl
sub
out
sub
shr
push
or
jp
mov
lock
pop
loop
push
cmp
lret
mov
dec
or
out
adc
insb
pop
adc
pop
cltd
mov
shlb
add
and
repz
xchg
mov
or
sub
jnp
out
fwait
inc
js
xchg
jae
xchg
insb
adc
jno
or
pop
popa
test
jo
xlat
lods
roll
aam
push
add
cmovno
fmuls
pop
addps
inc
xchg
les
int3
dec
test
xchg
mov
sub
mov
lock
dec
pop
inc
xor
lcall
pop
daa
adc
or
clc
les
ja
xchg
stc
xchg
jbe
bnd
not
mov
iret
enter
adcl
lea
mov
push
nop
dec
repnz
cmp
lret
lea
outsl
stos
or
mov
or
lret
stos
pop
lea
push
insb
ja
jno
sub
push
movsl
rorb
lcall
pop
dec
jl
push
into
inc
fadds
out
xchg
mov
add
les
dec
and
aas
mov
fs
decb
fiaddl
push
mov
xchg
inc
jb
xchg
lock
enter
cmc
cld
enter
push
dec
xchg
orl
and
push
xchg
insb
rcrb
mov
inc
push
nop
test
adc
inc
pop
data16
or
lods
mov
std
orl
jb
cmp
dec
lods
jl
mov
xor
cld
sahf
fwait
push
jne
mov
and
jge
fldt
out
xchg
lahf
repz
fildll
aas
adc
in
loop
cmpsl
je
pcmpeqw
lock
je
push
out
repnz
shl
fdivs
shll
and
push
les
push
cmp
jae
call
cmpsb
cs
enter
es
add
mov
mov
xor
mov
push
cld
nop
pop
xor
inc
mov
sub
cmc
in
lock
mov
fs
std
mov
cmp
inc
dec
mov
and
mov
inc
lods
arpl
scas
push
je
mov
mov
and
fsubs
adc
pop
push
jecxz
ret
xchg
sbb
les
icebp
mov
outsb
lock
and
fcompl
sbb
or
or
inc
pop
jnp
aam
ret
mov
mov
cwtl
pop
test
insb
in
js
and
xor
sub
ret
in
xchg
int
xor
dec
mov
inc
mov
push
test
rorb
mov
mov
cmp
es
xchg
nop
lcall
adc
insl
int
lahf
mov
iret
dec
mov
stc
and
test
push
xchg
push
test
dec
jno
js
cmp
add
push
sarb
mov
fneni(8087
bound
jne
dec
aaa
jae
imul
push
mov
ss
sti
popf
sbb
mov
leave
mov
xor
xor
lock
xchg
in
into
je
adc
clc
push
cmp
loop
inc
xchg
cmpsl
push
mov
out
insl
fcoms
jno
out
es
jg
xchg
fwait
mov
insl
push
fisubrl
sbb
adc
mov
and
stc
lods
sub
xchg
jmp
inc
hlt
mov
push
lods
icebp
outsb
mov
mov
addl
inc
xchg
sarl
xchg
sbb
hlt
jg
push
cwtl
jbe
enter
jp
xor
jne
repz
or
mov
mov
leave
daa
adc
lods
xor
mov
inc
xchg
dec
roll
jl
fisubs
das
mov
rorl
cli
pusha
inc
scas
stc
cmpsb
push
shll
xor
mov
mov
mov
inc
xor
cmp
in
adc
dec
aaa
pop
gs
sbb
add
dec
xlat
mov
jns
lcall
mov
xlat
outsl
pop
and
or
sbb
scas
jge
mov
sub
cmp
jbe
ljmp
dec
xlat
mov
jne
xlat
int
or
mov
addb
jg
mov
imul
stc
xor
xchg
jg
cmp
pop
faddp
lcall
scas
add
jle
xlat
orb
cld
push
popa
in
jnp
in
in
fsubs
sbb
lret
imul
dec
xchg
or
cwtl
mov
cmp
or
xchg
nop
clc
sub
js
repnz
loope
pop
jp
sub
wrmsr
and
xor
xor
jle
nop
jg
out
xchg
xor
loop
adc
iret
sbb
mov
pop
mov
cmp
push
sub
lret
mov
mov
xor
movsb
movsb
xor
cs
inc
sbb
adcb
pop
sti
xor
test
out
add
cmpsl
lds
in
cld
imul
lods
loope
xchg
dec
pusha
ss
push
adc
pusha
or
inc
imul
mov
jae
dec
mov
push
dec
dec
popa
jecxz
or
add
mov
fcomps
xchg
roll
sbb
nop
clc
push
shr
sti
jno
xor
xchg
push
lret
ds
pop
std
jle
mov
pop
aas
cmp
int3
push
subl
int3
int3
sub
dec
push
sarl
test
pop
rcrl
lock
in
cwtl
stos
or
or
loop
imul
xor
xchg
xchg
fdivp
pop
push
adc
jno
imul
xor
dec
cmp
xor
sbb
fdivrl
push
pop
imul
and
in
or
cmpb
leave
cmp
ljmp
movsb
and
xlat
adc
mov
sbb
notl
fldl
jbe
mov
movsb
data16
clc
xchg
orb
adc
aaa
cmpsb
cmp
shrb
pop
mov
adc
sub
mov
cmp
mov
sahf
insb
movb
mov
sbb
mov
push
pop
and
push
test
shlb
cld
sbb
cmp
mov
dec
sbb
xchg
loope
insl
push
xor
call
xchg
in
xchg
imul
xchg
sbb
jle
push
add
icebp
jno
xlat
push
sbb
dec
mov
lret
push
ret
cld
xor
cmp
jp
shll
sarl
or
adc
jae
xor
loop
jl
jo
pop
mulb
push
jbe
aaa
sbb
cli
idivb
or
dec
aam
gs
dec
loop
mov
inc
add
js
orb
jp
and
add
mov
pop
out
push
push
icebp
xchg
jecxz
xchg
sbb
popa
xor
cmp
sub
push
jg
addb
in
xor
ljmp
dec
dec
or
sub
mov
fdivs
push
pop
and
aas
sbb
outsb
sub
pop
cmp
in
jecxz
sbb
jecxz
mov
fisubl
add
test
sbb
shl
roll
faddp
mov
mov
in
lea
cmp
dec
or
test
fwait
or
aam
fdivrl
rol
adc
cmp
sub
lret
mov
jecxz
xor
jnp
out
and
ljmp
push
push
push
lods
fnstsw
xor
add
pop
punpckhbw
add
adc
aad
push
or
adc
sub
dec
adc
outsb
sbbl
stos
push
fisttpl
push
push
cwtl
adc
pop
and
sti
ret
dec
rol
xor
or
inc
std
adc
lods
dec
mov
ret
cmp
add
pop
cmpsl
push
insl
arpl
xor
ja
cwtl
lahf
repnz
repnz
outsl
add
test
xchg
pop
mov
push
xor
push
sub
dec
xchg
rcr
insb
and
inc
ret
jo
mov
jmp
daa
ja
inc
mov
in
les
stos
inc
subb
dec
mov
cld
fs
adc
pop
divb
inc
lock
inc
inc
xchg
sahf
jmp
and
sub
loop
cmc
in
push
push
xor
xor
push
dec
stos
jno
ljmp
movsl
adc
fisubrl
outsb
hlt
popa
in
in
push
mov
insb
into
sbb
push
pop
int3
jg
test
and
adc
sbb
mov
inc
push
in
pop
rclb
mov
test
mov
pusha
out
add
inc
xor
xchg
dec
int3
xchg
mov
bound
addl
cmpsb
outsl
sub
add
cmpsl
adc
aaa
scas
fstl
cmpsl
mov
xor
sbb
les
adc
jp
popf
jmp
push
fwait
ds
outsb
ja
and
fsubs
scas
dec
mov
rol
dec
leave
jmp
inc
inc
sub
pop
inc
gs
movsl
mov
out
pop
xor
pop
jnp
jmp
ljmp
popa
pusha
test
push
xchg
frstor
fnstcw
daa
inc
in
lret
jbe
lods
cs
jb
jmp
enter
je
cmpsb
push
xchg
cwtl
mov
rcll
xlat
mov
pop
enter
js
int3
out
popf
sub
dec
int3
repz
push
add
mov
push
mov
icebp
dec
ljmp
xor
jb
outsb
cmp
sbb
fldcw
mull
sbb
inc
xchg
xchg
clc
xchg
cmc
fwait
adcb
cs
in
adcl
add
nop
xor
cmp
ret
and
arpl
adcl
add
fidivrl
cld
sbb
in
push
xchg
sub
dec
lds
call
mov
mov
ret
lahf
push
and
daa
rcll
pushf
cmp
cmp
jb
push
xchg
and
push
push
pop
insl
cmc
call
ja
mov
les
hlt
aad
andb
imul
cmp
stc
or
jecxz
sub
mov
dec
fdivp
sub
std
push
adc
pop
add
fdivrs
int3
ficoml
jnp
or
inc
jmp
jp
or
shl
pop
mov
iret
cld
push
adc
std
icebp
cmp
pop
daa
jo
fimull
fiaddl
jbe
sbb
pusha
pop
and
add
add
jp
xor
cmpsb
std
in
dec
sub
pop
stc
mov
xor
fs
mov
add
or
cmp
adc
xor
mov
in
dec
xor
or
repz
cmp
or
jnp
dec
in
xor
popf
or
lods
lret
xor
out
bound
sar
add
sub
xor
xchg
mov
subb
lret
xchg
pop
sbb
dec
and
sub
or
mov
sahf
xchg
lods
push
mov
dec
aaa
aam
incl
loope
push
adc
xor
xchg
imul
xor
cmp
sbbl
jno
jge
shll
dec
push
out
mov
push
mov
stos
sbb
ret
xor
xchg
hlt
dec
orb
add
imul
and
scas
jl
outsl
ljmp
and
nop
aam
andl
int3
inc
xchg
addr16
adc
loope
jno
orb
ret
mov
ss
add
xor
icebp
fs
testl
aas
jns
or
mov
mov
xchg
push
add
lock
fmuls
popa
clc
aam
push
push
lret
jb
cmp
into
stc
push
push
fucomp
ljmp
mov
sti
rcrl
mov
push
fbld
adcb
mov
cmp
adc
cmp
out
pop
push
mov
loopne
mov
and
jmp
add
dec
and
sub
enter
stos
add
xchg
adc
movsl
mov
xchg
fstpl
in
outsl
xchg
jp
jl
stc
push
in
dec
mov
pop
out
fwait
jle
sbb
test
sub
dec
sub
popf
mov
inc
xchg
sahf
add
dec
loope
cmp
sbbl
stos
push
sbb
push
sub
and
daa
lds
in
push
sarb
in
into
aad
cmp
repz
jne
push
scas
or
neg
sbb
aad
outsl
push
dec
dec
testb
adc
or
jo
int
jge
jmp
outsb
push
std
mov
out
mov
mov
fcmovnu
faddp
fadd
stos
mov
in
cmp
ja
sahf
jo
mov
iret
dec
lock
mov
add
jecxz
jns
xor
xor
outsl
sbb
mov
les
fsubrl
or
jnp
in
cmp
scas
repz
or
jg
das
in
mov
sub
xchg
mov
fnstcw
adc
stos
mov
sub
add
test
sbb
xchg
mov
imul
pop
bound
and
mov
jbe
adc
movsb
xchg
je
stos
adcb
add
adc
outsl
mov
movsl
mov
dec
mov
les
fsubs
pop
loop
add
pop
mov
fs
cmpsl
incl
aas
fdivrs
mul
fwait
sub
xchg
push
or
push
cmp
inc
inc
xchg
or
mov
jmp
push
mov
inc
ds
aas
or
pop
je
pop
ss
mov
fildl
xchg
sbb
cmp
xchg
lret
push
mov
pop
mov
imul
rclb
mov
scas
bound
lods
cmp
stc
pop
mov
push
xchg
adc
add
jb
inc
or
gs
mov
sub
aas
pop
adcl
mov
xchg
dec
xor
jmp
add
jmp
push
mov
insl
fucomi
sahf
inc
cmpsb
lods
push
inc
sub
cld
ficoml
inc
or
cmp
repz
add
sbb
int3
push
stc
call
mov
cmpsl
loope
xchg
jno
add
xchg
xchg
fdivrs
add
mov
inc
inc
pushf
arpl
sar
fs
aas
sub
subl
or
xchg
mov
xchg
pop
leave
pop
adc
push
fs
dec
ret
stc
pop
xchg
imul
mov
push
cld
pop
test
add
jo
add
sub
mov
mov
jmp
mov
test
push
cmp
sbb
dec
loope
xchg
es
cltd
xor
outsl
test
scas
xchg
icebp
cmp
jp
adc
mov
mov
mov
jb
insl
jl
inc
xchg
sbb
movsl
out
fsubr
insb
cwtl
call
loop
shl
adc
repnz
inc
sbb
xor
mov
addr16
nop
ret
push
das
fs
popl
pop
jp
dec
arpl
jge
dec
cmc
mov
int3
in
dec
je
pop
mov
pop
jbe
ss
jno
push
sbb
fisttps
mov
scas
inc
subl
ret
mov
add
xor
cmc
je
popa
push
les
xor
sbb
xor
les
xor
dec
insl
lea
cmovp
mov
and
jb
fistpl
popf
movl
ja
fdivrs
mov
sbb
inc
sahf
adcb
mov
xchg
add
lds
shlb
add
adc
dec
sbb
cmp
jno
dec
jmp
pop
sbb
aas
jmp
xchg
xor
cmp
pop
jb
sbb
enter
ds
iret
xor
es
add
icebp
cmp
adc
das
les
sbb
mov
repz
rol
cmp
xchg
pop
add
cmpsb
test
pmulhuw
xor
xchg
cmp
sbb
push
add
pop
and
and
sbb
xchg
xor
cmp
jae
pop
nop
sub
popf
ss
or
imulb
or
out
sbb
jp
imul
dec
and
mov
adc
jb
testl
in
leave
xchg
xchg
jmp
ds
mov
lcall
xor
cmp
sbb
jp
sbb
out
xor
push
mov
pop
cld
adcl
fiaddl
imull
xchg
inc
push
push
pop
fdivs
lret
adc
enter
aaa
inc
jmp
inc
fwait
lahf
add
scas
adc
jo
and
mov
fistpll
fdivrs
pop
inc
movsl
sub
sbb
jbe
jmp
leave
mov
ljmp
lea
push
lea
popa
les
jp
popf
lret
cli
pop
loop
lcall
loop
cmp
inc
rcll
mov
sbb
js
in
sbb
cmp
das
add
scas
stos
jae
bound
loope
adc
inc
mov
sub
cs
imul
cmp
aaa
and
mov
fiadds
stc
stos
ljmp
push
mov
aas
test
jno
push
add
jp
jnp
add
add
xor
aas
leave
movsb
mov
js
imul
push
inc
pushf
out
cs
cmp
gs
xor
pop
aaa
xor
xor
shll
xlat
mov
jle
cmpsl
jno
dec
cmp
sub
xchg
pushf
ljmp
add
and
cmp
pushf
xlat
adc
sbb
xor
jae
jl
dec
mov
jns
mov
add
and
dec
cli
sub
pushf
push
xchg
xchg
xchg
dec
outsb
daa
sub
mov
pushf
sbb
cwtl
mov
out
mov
orl
call
dec
movsb
sub
outsl
mov
pop
andb
sub
xor
lret
popf
cmpsl
int3
xor
es
mov
sbb
sbbb
inc
fwait
push
sbb
pop
mov
jmp
shl
push
ret
xchg
add
add
or
cmpsb
out
jmp
std
pop
fsubrs
lods
xchg
cmp
or
jb
mov
rcrl
std
inc
out
xlat
lock
pushf
cld
or
aad
clc
in
inc
add
mov
in
stos
daa
cmpsl
lods
lds
inc
mov
sub
xchg
jae
sbb
mov
push
push
jge
pop
dec
add
cmpsl
dec
jae
test
sbbl
aam
push
fidivs
xchg
sub
mov
add
xor
push
mov
repz
aas
push
pop
push
xor
testl
lcall
dec
mov
add
mov
mov
jge
mov
xchg
cs
je
push
inc
addr16
popf
mov
mov
mov
jnp
or
xlat
dec
mov
shlb
cmc
dec
fbstp
inc
push
adc
ja
mov
hlt
dec
mov
push
lods
mov
frstor
push
fwait
cs
fstl
pusha
sbbb
push
cltd
pop
pop
cmp
push
sub
ja
lods
out
loopne
xlat
xlat
cmpsb
rcrb
mov
pop
loope
or
mov
push
in
push
ja
mov
lods
mov
enter
jl
cld
add
ror
ret
scas
jo
ud1
jecxz
adc
cmc
leave
xor
jae
push
mov
mov
rcll
fs
push
je
insb
push
sub
in
ficomps
popf
push
push
aas
adcb
test
pop
fnsave
test
sub
mov
xchg
test
add
out
das
sbb
aam
inc
negb
adc
add
xorb
mov
fisubrs
add
cli
paddw
mov
mov
xchg
addb
rolb
xchg
dec
mov
fwait
push
add
xchg
jb
outsl
push
shl
push
sbb
sub
out
sbb
push
inc
push
addr16
fldenv
shll
leave
jmp
mov
xchg
jl
shrb
mov
sub
bound
inc
repnz
in
fisubrl
or
mov
dec
jbe
or
sbb
stos
xor
mov
and
mov
sahf
jno
pop
jbe
and
inc
cmp
push
sbb
push
in
aam
pop
popf
dec
movsb
push
dec
mov
sub
sbb
or
sbb
pop
adc
dec
lret
gs
or
mov
fimull
xor
mov
addl
arpl
cmpsl
and
mov
negb
jge
loope
push
mov
loopne
push
rcll
adc
subb
out
je
lret
pop
jns
insl
shll
adc
ret
and
pushf
adc
sbb
lock
mov
jp
es
jb
icebp
jg
inc
push
in
gs
aaa
cmp
pop
cld
pop
mov
mov
adc
jl
sbb
jle
mov
pop
and
sbb
push
int
bound
inc
js
mov
scas
and
push
icebp
xor
push
push
bound
roll
jecxz
clc
jmp
xor
mov
add
pop
fiadds
andb
out
xchg
test
add
and
mov
and
hlt
pop
push
sbb
jne
xor
inc
add
jle
incl
push
cmp
imul
in
sbb
test
dec
enter
hlt
aaa
stos
stc
pminsw
and
adc
inc
xchg
addb
insl
mov
mov
mov
xor
call
shlb
pop
cld
lds
cmp
hlt
dec
std
dec
ret
push
pop
iret
rol
add
test
ret
mul
int3
xlat
ljmp
sti
cmp
ss
stc
push
inc
dec
fidivrl
dec
out
mov
ret
out
add
add
jmp
idiv
cld
loop
test
cs
sbb
jb
or
int
sbb
cmpsb
sub
sbbl
add
sarl
hlt
jne
fstps
repz
pop
lcall
es
pushf
aam
test
xchg
add
pop
mov
enter
fiadds
xor
pop
jle
sub
jmp
pop
pushf
add
lret
adc
shl
cmc
stos
outsl
fnsave
shlb
movsb
stos
mov
arpl
xchg
mov
add
xor
cmp
cmp
test
in
ds
adc
jns
fcompl
xlat
xchg
mov
push
or
insl
sbb
shlb
jo
cmp
and
sti
repz
por
fsts
jae
shr
dec
dec
int
test
aam
push
shll
aaa
movsl
lea
sub
jno
mov
outsb
or
xchg
xchg
ljmp
out
ret
adc
js
and
dec
or
mov
sti
fdivs
xchg
pop
add
scas
inc
loope
cwtl
adcl
insb
aad
dec
xchg
test
inc
adc
lret
jge
into
jmp
aas
icebp
sbb
daa
popa
xor
stos
xor
lret
lods
iret
xor
int3
popa
inc
mov
push
enter
pop
sub
into
das
push
stos
ret
dec
pop
add
adc
xchg
mov
leave
sub
dec
cmpl
daa
sbb
test
and
addr16
sarb
clc
arpl
dec
dec
addr16
out
test
pop
movsl
xor
pop
icebp
hlt
fiaddl
jp
bound
stos
adc
std
cmp
call
repz
mov
push
rclb
or
popa
xchg
add
dec
inc
sbb
push
or
xchg
cs
enter
clc
push
outsl
aam
jmp
fs
in
pop
fnstenv
lret
dec
adc
mov
mov
xor
out
cld
int3
dec
repz
loopne
lods
and
sub
and
mov
xor
xchg
je
xor
rcrb
sbb
dec
out
clc
outsb
mov
fistps
or
loopne
sahf
outsl
jnp
add
mov
xchg
iret
in
popa
xlat
inc
in
mov
sahf
xor
push
testl
loopne
es
ficompl
sbb
or
mov
or
movsl
cmp
out
movsb
lcall
ds
jno
inc
sbb
mov
push
subb
fldt
xchg
or
mov
mov
jle
xchg
loope
adc
es
pop
jg
fs
pop
lock
sub
mov
movsb
insb
push
fsts
jl
cmp
lock
insb
push
lods
nop
aas
mov
stos
les
movsl
dec
ss
test
adc
rclb
inc
pop
popa
dec
push
lock
mov
aad
jbe
mov
inc
add
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
inc
dec
xchg
xor
cmp
adc
rolb
pop
in
mov
push
or
adc
bound
pushf
fistpl
push
xchg
pop
das
lcall
scas
dec
shll
or
cmpsb
ret
add
stc
cltd
loop
fsubrp
dec
movl
push
add
xor
insb
adcb
insb
xchg
into
les
mov
push
stos
mov
add
cmp
mov
repz
loope
jae
push
sub
mov
mov
outsl
inc
lret
insl
das
add
adc
xor
dec
cmp
repz
mov
fidivrs
mov
push
xchg
mov
clc
shlb
fs
push
fisttps
fdiv
cmp
fistps
imulb
cltd
jns
ret
mov
mov
das
mov
mov
ds
and
sti
aaa
sbb
hlt
stos
lcall
fxch
je
cmpl
mov
and
xor
push
sub
push
and
sbb
arpl
cmp
mov
xlat
sub
jae
jne
adc
in
xchg
cwtl
enter
pusha
lcall
clc
adcb
mov
loop
out
fwait
or
inc
push
pusha
lock
repz
sbbb
mov
dec
popa
hlt
iret
xor
add
cmc
lods
and
push
shll
pop
iret
xchg
mov
add
dec
xchg
outsb
int3
adc
xchg
xchg
movsb
inc
dec
ret
and
mov
jbe
test
loop
jmp
jle
aam
xor
cmc
icebp
dec
in
fwait
int
inc
aad
mov
jge
out
jb
push
pop
sub
popl
fimuls
xchg
and
adc
repz
or
push
mov
icebp
cmp
rclb
xchg
mov
xchg
xor
adc
fucomip
enter
ret
inc
adc
inc
push
in
cmpsb
addr16
xchg
ja
fadds
movsl
stc
mov
cmp
jmp
stos
sti
push
pop
sub
sbb
sbb
sti
pushf
mov
std
loope
cltd
push
lcall
jg
jo
lock
out
and
sub
or
and
mov
jns
dec
fcmovne
xchg
jne
fs
add
cli
stos
jp
adc
mul
mov
jge
scas
cld
and
test
repz
xor
vsubps
dec
pop
mov
ljmp
fwait
add
fcoml
movl
mov
adc
popf
aas
dec
inc
faddl
out
in
sub
in
add
fdivr
mov
and
jp
dec
inc
aam
ret
push
lds
enter
int
dec
inc
jae
add
cmp
fmull
divb
lods
jb
sbb
mov
pop
insb
push
in
mov
cmp
arpl
and
dec
jne
xorl
cs
loopne
adc
xchg
adc
inc
nop
insl
call
js
push
int3
notl
adc
or
lods
popa
call
and
lea
and
pop
jne
sbb
push
ljmp
jecxz
xchg
in
cwtl
xchg
adc
shl
pop
js
xchg
mov
xor
cld
clc
imul
or
hlt
pop
fistpll
mov
and
xchg
dec
dec
popf
or
dec
mov
inc
pop
mov
jmp
sbb
mov
aas
inc
pop
jno
xor
mov
push
stc
dec
divl
cli
jp
bnd
pop
mov
mov
mov
fistl
cld
fst
andb
add
jmp
ret
out
test
xor
dec
adc
imul
roll
push
call
cmpsl
xor
andl
mov
movsl
and
pop
sbbl
iret
push
test
arpl
mov
sub
mov
ret
jbe
cltd
adc
add
repz
frstor
in
lret
rclb
fmull
and
int3
sub
in
jbe
and
pop
and
mov
mov
pop
pmovmskb
je
adc
push
pusha
rcrl
aad
mov
mov
cmp
xchg
cmp
push
and
mov
or
pop
clc
sub
sub
es
js
jnp
lcall
ja
ds
mov
or
push
or
adc
lods
xchg
int3
rorl
stc
pusha
pop
xor
lret
je
bound
out
arpl
mov
fisubrl
pop
jl
stc
cmpsl
mov
and
bnd
push
push
cmpsb
lods
fcmovnbe
mov
sbb
out
mov
push
fldt
inc
dec
or
dec
js
cmpsl
pop
jecxz
mov
and
push
xchg
mov
in
pmulhw
push
jno
outsl
inc
movsb
push
push
sahf
fbld
repz
inc
or
test
cltd
jbe
pop
mov
in
push
push
outsb
fs
and
mov
aam
ficompl
mov
jp
lods
nop
mov
mov
fsts
push
xchg
push
shlb
gs
adc
lea
dec
mov
dec
in
push
mov
cld
adc
jmp
pop
push
xlat
mov
lret
cmp
cmp
mov
mov
fdiv
int
shlb
cmp
js
call
repnz
mov
sub
and
ret
sbb
xor
lea
ret
xor
sbb
pop
out
and
divl
outsb
add
movsl
test
push
sub
mov
jge
sbb
jo
ret
xlat
jns
fdivrs
out
lods
aam
jae
xor
or
fnstenv
ss
jge
xor
addr16
out
or
ljmp
xor
pop
dec
push
fnstenv
sahf
iret
sbb
cmp
je
test
fwait
out
mov
fldl
push
sbb
fxam
adc
mov
sbb
cmp
add
mov
mov
popf
imul
test
sbb
movsl
sbb
mov
xchg
xlat
jmp
xchg
popa
xor
jae
cld
sbb
test
std
inc
popf
jg
fs
cmp
push
xlat
shl
xor
push
jbe
rol
dec
lret
stos
push
mov
ljmp
or
xor
mov
xor
cwtl
dec
jo
notl
pushf
jbe
in
loopne
cmp
repz
leave
mov
or
mov
push
lret
rclb
inc
inc
ljmp
hlt
push
inc
adc
test
xchg
into
call
adc
les
sub
int
leave
or
lods
jbe
xor
sbb
dec
shrb
fs
adc
jle
int3
adc
bound
ficoml
xor
push
lods
lea
sub
adc
filds
jns
shlb
repz
out
pusha
cmp
mov
jmp
sbb
mov
cs
insl
mov
imul
insl
mov
in
mov
fsts
xor
jae
loop
call
test
mov
pop
adc
arpl
cmp
frstor
test
push
stos
dec
mov
testl
movsl
xor
out
cld
inc
xchg
push
mov
aas
push
xchg
and
xchg
bound
inc
jnp
sbb
lds
pop
jg
fcompl
leave
jb
add
xchg
cmpsl
add
mov
xchg
repnz
pop
sub
cmp
add
adc
mov
ret
sti
clc
cmc
xor
jb
out
xchg
mov
shrb
push
push
lcall
inc
call
cmp
push
adc
sub
nop
js
mov
jle
dec
fstp
andb
pushf
in
cwtl
ja
sub
pushf
or
sbb
punpckhwd
aam
orl
mov
dec
scas
mov
push
cmp
jle
jns
clc
pop
sbb
inc
cmp
loop
ret
test
call
lea
ficomps
and
jge
mov
insl
cmp
pop
ret
or
es
sbb
aaa
in
sar
mov
mov
into
in
and
adc
cmpsl
fstl
or
ret
or
mov
xchg
xor
imulb
jno
sti
lret
stc
fcomi
rcrl
jns
mov
jge
push
jne
sbb
pushf
push
sub
fldl
aaa
jl
shll
cld
stos
and
mov
mov
gs
cmpsl
mov
jp
test
mov
mov
pop
push
mov
mov
xlat
repz
jns
ret
stos
or
aam
mov
int
imul
ret
rclb
mov
jo
sub
sub
mov
inc
cltd
adc
out
aas
adc
popa
ja
repnz
sub
xchg
rol
rorb
data16
add
xchg
pop
pop
push
mov
pusha
insb
jno
in
cmpsl
sub
jmp
pusha
inc
cmp
addr16
adc
mov
adc
aaa
stos
insl
mov
data16
vlddqu
xchg
divl
pop
out
roll
push
fcmovne
call
cmc
add
push
idivl
aam
and
cmp
dec
cmp
push
jo
int
mov
cld
mov
mov
pop
scas
test
ljmp
es
mov
sbb
stos
outsb
mov
pop
mov
pop
ret
cmc
int
lea
lahf
lret
scas
jae
xchg
daa
sbb
ss
sahf
push
popw
xchg
push
dec
rcr
inc
loopne
pop
xchg
pop
mov
dec
mov
lcall
mov
mov
mov
adc
shlb
mov
lea
push
or
and
ffreep
imul
inc
rolb
cmp
inc
das
leave
dec
shrb
lock
cld
ja
adc
sbb
les
daa
cs
jbe
andl
mov
or
in
or
push
and
and
mov
mov
mov
jle
stc
jmp
jns
in
stc
mov
stos
addr16
mov
imul
adc
pop
ja
push
out
mov
mov
pop
sti
subb
or
imul
mov
xchg
push
aam
push
dec
mov
cmpsl
pop
lret
mov
scas
pop
in
mov
sbb
hlt
loopne
dec
xor
jmp
push
or
xchg
ljmp
insl
adc
inc
adc
mov
pop
movsl
fildll
mov
inc
mov
das
adc
cmp
push
push
push
xor
inc
sbbl
cltd
int
cmpps
hlt
mov
push
jae
inc
jbe
mov
shl
out
pop
add
fdivs
xchg
scas
push
aaa
fld
movsb
ficompl
push
fisubrl
mov
and
lea
lret
jge
inc
out
dec
jae
push
sbb
std
add
xchg
push
push
insb
mov
inc
and
fcomps
mov
xchg
fdivs
les
xor
jne
adc
arpl
xchg
pusha
push
and
jns
mov
add
pop
push
push
outsb
icebp
js
ljmp
scas
ljmp
enter
mov
adc
dec
add
pop
scas
ffree
ds
dec
rorl
movsb
insb
dec
clc
pop
enter
cli
outsl
sub
add
data16
push
xchg
sbb
cmp
sti
sbb
add
or
add
and
loopne
pop
cmpsb
out
jle
into
inc
or
mov
inc
out
cmp
mov
xchg
pusha
sub
ja
shll
in
push
ds
aad
push
rcr
leave
fstl
clc
subl
xchg
push
fnstcw
sbb
mov
pop
movsl
pop
sbb
divb
cmpl
pop
pop
push
mov
pop
push
mov
push
mov
adc
lea
scas
out
adcb
xchg
test
mov
push
jno
ss
dec
mov
and
sub
adc
inc
inc
insl
push
mov
sti
arpl
mov
add
jne
repnz
mov
inc
lods
scas
lcall
ja
xchg
in
call
lods
lahf
scas
push
std
aaa
push
adc
out
ret
pop
mov
xchg
xlat
imul
jmp
test
test
jns
jae
sbb
es
add
push
ja
and
fisubrl
popa
xor
adc
xor
popf
mov
xchg
std
push
and
test
leave
data16
or
pop
call
push
pop
inc
loop
xorb
aam
or
adc
cs
push
mov
mov
add
mov
leave
inc
int
push
pop
xchg
stos
daa
rcll
push
out
push
sub
in
mov
sub
scas
sub
sub
mov
sub
insl
fcomps
push
loop
sub
pushf
imul
iret
test
sub
xor
ficompl
int3
or
cmpl
fwait
outsb
subl
enter
adc
sbb
sbb
stc
xor
ja
inc
mov
enter
add
mov
ficompl
sbb
xor
mov
jecxz
adc
outsl
pop
jnp
iret
cli
fsubrl
pop
pop
daa
push
or
rorl
movsl
dec
xor
bound
jmp
stos
or
sub
loope
lret
pop
dec
xchg
icebp
stc
adc
je
pushf
mov
scas
jne
jo
xchg
adc
sub
pusha
das
and
lds
xor
xor
mov
repnz
jnp
dec
pop
fldt
mov
cmpb
dec
xor
loopne
push
sub
mov
rorl
xchg
movsb
push
mov
ljmp
xchg
scas
jnp
sbb
mov
xchg
cmp
and
push
jo
popa
mov
mov
inc
add
cld
test
or
mov
adc
xchg
cmp
or
cmp
stc
in
test
hlt
and
aas
fnstcw
add
pushw
call
test
cli
jno
mov
mov
dec
jbe
xchg
mov
nop
sub
inc
xchg
cmpsb
movsb
scas
mov
mov
jg
in
ljmp
cmpsb
push
xor
dec
int
sbb
and
lret
mov
xor
or
leave
and
jl
mov
data16
or
mov
pop
jecxz
and
daa
dec
jl
jbe
out
and
lock
fstl
mov
pop
int3
scas
mov
jge
es
sahf
cmc
out
ljmp
dec
ficoms
pop
fucom
jl
dec
cld
pop
sbb
mov
mov
and
inc
mov
dec
bound
in
in
lock
in
das
stos
popf
xor
dec
mov
rcl
mov
mov
mov
mov
fildll
es
mov
jae
mov
mov
push
pop
orl
test
mov
int3
push
push
push
xchg
loop
push
pop
cmp
jmp
popf
pushf
cli
mov
fidivrs
cli
gs
jne
addr16
fistpl
dec
sub
push
push
dec
pop
gs
mov
mov
mov
xchg
add
cwtl
cmp
fsts
mov
cld
loop
movsb
xchg
in
stc
imul
out
sub
insl
jnp
lock
stos
mov
sarb
sub
and
aam
xchg
cwtl
cli
inc
cmp
negb
data16
mov
js
jge
push
and
test
xchg
lods
push
mov
lcall
fisubl
inc
stc
mov
mov
xchg
scas
jno
pop
into
and
fcomp
movsl
mov
ljmp
mov
and
dec
hlt
xchg
cmpsb
test
int3
imul
movsb
sub
addb
popa
or
lret
addr16
jg
in
rolb
jmp
xor
jl
jge
push
mov
adc
and
addr16
jae
imul
negb
sahf
adc
jg
mov
fwait
js
andb
and
jecxz
fldl
faddl
push
or
xchg
cmp
mov
mov
pusha
dec
repz
xlat
pusha
in
fisubl
mov
adc
jbe
sub
push
cltd
pop
xchg
sub
mov
dec
cmpsl
sbb
and
cmpsl
mov
inc
mulb
push
adc
jle
sarb
dec
cld
or
mov
push
xchg
and
fs
mov
adc
in
ror
jl
and
xchg
xchg
lret
clc
popf
and
cmp
xchg
imul
in
mov
mov
dec
jno
add
insb
mov
sahf
xor
movsl
xchg
outsl
lods
sbb
test
movsl
push
fmuls
mov
cmc
jo
xchg
cmpsb
push
or
xor
inc
pushf
addr16
aaa
or
or
cmc
lods
fistl
push
or
pop
push
xorl
cmp
in
jl
lcall
or
pop
rcr
repz
aas
pop
jne
jo
fsubr
pop
xlat
int3
mov
loop
jg
icebp
aad
push
and
test
xlat
adc
rorb
mov
cltd
sbb
lret
xchg
jp
jp
enter
int
add
cltd
mov
rcrb
insl
popa
push
repz
sbb
push
adc
push
push
fadds
rcr
mov
pop
mov
cmpsl
xor
jg
cmp
lock
sarb
bound
mov
rcrb
adc
xchg
fsubs
jge,pt
push
movsl
jne
mov
in
gs
mov
pop
add
push
imul
pop
ficoms
out
mov
cmp
ds
fadds
inc
aaa
push
pop
xchg
inc
enter
outsb
pop
mov
test
movsl
cltd
stc
iret
cli
cmp
mov
stc
pop
imul
or
int3
inc
shlb
test
int3
push
je
cli
test
lret
mov
insb
cmpsb
movsl
mov
cmp
or
sub
repz
sahf
ljmp
scas
test
adc
cmpsl
outsl
adc
push
inc
sbb
scas
stos
jecxz
mov
push
pop
jno
sub
aas
ret
jmp
xchg
ja
mov
stos
pop
fisubs
cmpsl
and
pushf
ds
repz
lock
push
sbb
nop
lods
clc
shl
lret
xchg
sbb
sub
pusha
fdivl
add
mov
ds
or
jecxz
pop
loope
mov
sub
mov
out
pushf
daa
nop
and
leave
push
mov
and
jns
cs
out
sub
test
pushf
xor
jns
insl
aad
daa
jecxz
lret
stc
and
stos
sub
rorl
mov
mov
adc
add
inc
clc
mov
adc
rclb
dec
cmp
imul
push
push
and
xchg
ret
hlt
sbb
faddl
test
ljmp
fildll
outsl
sbb
mov
or
fxch
xor
lds
inc
mov
aam
inc
mov
pusha
mov
cmp
mov
ljmp
pushf
and
bnd
dec
imul
jns
xchg
cmpsl
stos
add
xchg
mov
sbb
repnz
pusha
cmp
xchg
xchg
mov
call
lret
jmp
outsl
ljmp
fstpl
fcomps
pop
xchg
das
or
test
and
dec
push
push
outsb
or
sahf
icebp
aaa
sbb
rorl
lahf
xchg
fnstenv
sub
int3
xor
inc
sti
adc
aam
out
fstpl
adc
stos
dec
ds
and
push
dec
fwait
ljmp
std
xor
sbb
xchg
xchg
pusha
jecxz
sub
push
or
cmp
sbb
adc
cli
nop
arpl
xchg
xchg
in
xor
pop
mov
xlat
out
aam
push
in
fs
pop
ret
xchg
ffreep
pop
int
adc
rorb
sti
out
dec
mov
adc
jle
outsb
jl
xchg
jbe
mov
bound
add
or
shlb
lock
movsb
inc
mov
xor
mov
notl
pusha
imul
dec
inc
addps
sbb
mov
daa
faddl
xor
cli
or
ffreep
gs
cli
xchg
out
lret
mov
movsl
xchg
pop
bswap
ficomps
sbb
call
lahf
ret
adc
aaa
inc
cmp
cli
test
jb
cmp
es
rorw
inc
sub
rolb
leave
add
inc
test
iret
rcll
and
ds
mov
mov
fs
cmp
push
mov
stos
inc
jmp
jno
xlat
jns
xor
mov
repnz
jnp
jno
and
lods
std
sbb
imul
cmp
aam
int3
pop
inc
iret
jbe
stos
jns
jecxz
jecxz
push
ss
push
sbb
jmp
imul
jb
int
xchg
cmp
popf
stos
cwtl
out
stos
out
cli
pushf
hlt
or
push
add
sti
sub
call
scas
or
int3
shl
cltd
pop
inc
and
add
nop
int3
adc
adc
pop
les
push
xchg
xor
out
aad
addb
popa
mov
ja
ret
sbb
popa
adc
add
jl
sub
push
xor
stos
dec
mov
jp
sub
adc
mov
ds
sbb
mov
fcoml
jle
sbb
or
enter
movsl
sbb
sbb
add
mov
push
pop
and
xor
leave
loop,pn
sub
adc
sti
pop
pop
inc
mov
lea
cmp
outsl
xchg
sub
mov
jg
jbe
repnz
popa
outsb
sbb
imul
add
or
daa
xchg
push
in
out
das
and
fdivs
push
push
loop
scas
adc
add
dec
jge
pop
into
cmp
adcb
inc
loopne
sahf
or
xchg
mov
ret
pop
aam
xchg
inc
adc
lods
arpl
push
inc
dec
sbb
je
andb
mov
ss
jmp
xor
fwait
les
jno
cmc
rolb
add
test
dec
xorb
pop
xchg
sub
ror
sub
outsb
into
pop
push
xchg
mov
aaa
incl
inc
std
clc
cmpsl
push
jno
filds
fcomip
ret
cmpsb
test
sbb
adc
int
ret
cmp
insl
push
insl
out
adc
inc
xchg
pop
inc
loope
aad
icebp
adc
pop
inc
cmpsb
mov
cltd
sbb
aad
imul
inc
dec
mov
icebp
scas
xchg
xchg
shll
xor
push
loopne
mov
outsl
sub
mov
adc
adc
adc
xor
jecxz
xchg
mov
fstpt
das
adc
shrb
aad
mov
stos
ljmp
pop
jne
mov
xlat
sti
aam
pop
stos
and
push
mov
ret
les
adc
xor
popf
jg,pt
push
add
mov
sub
inc
cmp
scas
dec
pop
std
mov
cs
aam
shl
push
or
stos
sub
xor
cld
jno
pusha
adc
ds
sahf
hlt
xchg
repz
jle
jmp
aas
mov
daa
or
data16
mov
iret
scas
sbb
fcoml
mov
call
stos
sbb
mov
push
mov
inc
adc
xor
sub
lock
fsub
shrb
xorl
sub
add
mov
mov
add
jmp
loopne
jge
andl
imul
into
jg
cmp
cmc
pop
fisttpll
adc
daa
imul
sub
xchg
mov
dec
mov
outsl
or
aaa
and
lahf
sbb
out
test
iret
inc
loop
inc
int3
ljmp
jbe
xchg
inc
scas
adc
aaa
cmpb
nop
pop
and
mov
mov
out
mov
mov
ds
ret
ds
dec
pushf
sub
xlat
pop
popf
cld
or
sub
jp
jg
loop
and
fs
ds
cli
rolb
icebp
jle
pop
mul
adc
or
mov
inc
mov
shlb
test
ljmp
lcall
stos
xor
fiadds
inc
cmp
cmpb
int
jmp
sti
loop
cltd
push
dec
test
jbe
pop
dec
js
xchg
daa
xchg
push
jmp
fld
fisubrl
cmpsl
sbb
mov
rcrb
es
cmc
cmp
insl
xchg
adc
jbe
mov
add
add
dec
xlat
sub
aas
cmc
inc
jg
leave
int3
shll
add
lret
pop
lret
ret
mov
mov
jle
adc
xor
pop
aad
adc
int
lods
mov
or
mov
mov
rorl
out
stos
adc
jmp
jp
pop
pop
pop
roll
hlt
push
push
fwait
nop
in
cmpsl
push
lock
loop
sbb
in
addb
clc
xlat
push
popa
cmp
mov
add
negl
pop
jo
xor
cwtl
shll
movsb
fwait
sub
mov
out
sub
dec
lods
pop
notb
in
add
sbb
sbb
xor
or
movaps
cltd
push
in
cmp
lods
es
inc
sbb
sub
push
push
jp
xchg
mov
lds
jmp
aam
cmp
add
sbb
mov
mov
inc
int3
mov
cld
inc
daa
pop
mov
and
js
adc
out
xor
jo
sbb
or
outsl
loopne
mov
xchg
icebp
cmp
rcrb
dec
faddp
adc
sbb
jo
icebp
mov
jae
pop
int
test
loope
cmpsl
popl
cltd
fwait
mov
lret
mov
pop
mov
add
mov
icebp
gs
or
mov
xor
adc
outsb
inc
into
lock
stc
mov
adc
movsl
add
xor
xor
clc
rorl
push
setnp
cwtl
inc
imul
pop
ret
insl
imulb
push
imul
imul
adcl
in
push
sub
mov
fs
push
aad
clc
or
call
fiadds
push
mov
shll
stos
ja
mov
dec
jns
jne
mov
stos
sub
push
push
out
adc
push
jl
cmc
add
lahf
fwait
sysret
fsubrl
jmp
sub
jg
inc
dec
push
fildll
fdivs
clc
pop
mov
jg
xor
xor
addr16
inc
mov
inc
push
jge
daa
fstps
sub
push
sub
pop
ret
adc
xchg
xor
adc
sbbb
imul
int
cmpsb
lds
pop
push
mov
push
test
push
push
ret
xchg
dec
fistps
mov
orb
mov
ficoms
movsb
jmp
mov
pop
es
jl
out
cmpsl
stc
mov
imul
adc
scas
roll
cmpsl
std
aas
jp
cld
dec
dec
ds
lods
les
jmp
mov
sahf
in
ret
lret
bnd
jmp
inc
sub
pop
fwait
xchg
fs
adc
push
stc
push
inc
mov
jne
sti
or
inc
dec
imul
daa
pop
fildl
jle
xor
push
xor
push
mov
fcomps
and
push
call
lods
out
pop
xor
cmp
rclb
les
jle
jae
or
shlb
pop
add
ss
mov
xchg
aas
pop
jb
movsl
sbb
jne
sahf
xlat
out
lret
jp
enter
or
jecxz
addr16
std
xchg
jnp
inc
cltd
and
mov
push
sti
cld
hlt
sbb
je
xor
shlb
repnz
push
iret
stos
jecxz
shl
or
jbe
mov
xchg
push
lods
clc
mov
insb
cmp
lcall
or
sti
sbb
call
jae
cmp
mov
mov
stos
out
rcrb
insb
mov
in
xlat
icebp
rcr
je
jns
mov
mov
pop
xchg
fsubrs
mov
push
std
icebp
mov
addr16
sub
push
ljmp
or
int
ret
or
outsb
pop
stos
cmc
pop
or
dec
mov
or
movsl
mov
push
add
in
mov
mov
mov
push
idivb
sub
mov
dec
adc
pusha
mov
decb
rcll
mov
sbbl
je
cld
sarb
outsl
dec
mov
pop
pop
fimuls
push
cmp
mov
xchg
adc
mov
jb
aam
fstp
jb
mov
mov
pusha
adc
lods
ljmp
dec
loopne
adc
adc
icebp
in
daa
ficomps
into
ror
sub
dec
cli
cmp
mov
in
fdivl
int
pop
daa
mov
cmp
adc
popa
jecxz
lods
jge
lret
inc
jecxz
push
enter
xchg
add
push
mov
add
in
les
xchg
aad
cmp
jnp
mov
inc
fnstcw
shl
ffree
int
scas
dec
fwait
lret
sub
lock
push
call
dec
sahf
outsl
shr
add
jge
pusha
lcall
bound
sub
lock
fdivl
stos
push
mov
and
and
mov
push
push
loopne
pop
or
xor
sbb
push
repnz
adc
imul
adc
inc
mov
loope
dec
inc
stos
and
rcpps
mov
arpl
inc
enter
push
pop
xor
cmp
imul
mov
aaa
lds
xor
mov
iret
lods
out
test
mov
enter
xchg
push
add
mov
data16
mov
dec
push
mov
fidivrs
jno
pop
push
add
xlat
jbe
rorl
sub
hlt
inc
sbb
xchg
xlat
adc
push
add
adc
ljmp
loope
es
repnz
jno
lcall
pop
jg
sbb
lods
outsl
dec
pshufw
inc
into
jno
movsl
sub
or
shl
dec
jecxz
mov
dec
jae
out
add
fcmovnbe
cmp
fiaddl
dec
mov
xor
in
int
cmp
and
xchg
xor
mov
and
mov
mov
push
jecxz
sarl
dec
dec
scas
shl
pop
sbb
push
inc
ret
jge
outsl
xchg
cmc
xchg
and
addb
pop
mov
outsl
leave
data16
insl
mov
jmp
cld
dec
sbb
and
xchg
shrl
adc
nop
popl
mov
jae
fimuls
pushf
sti
mov
and
inc
jb
test
inc
icebp
out
pop
sub
ds
lea
out
and
aas
in
push
add
or
sub
imul
jecxz
push
push
add
dec
pop
push
ret
outsb
iret
jecxz
int
clc
cs
call
or
mov
pop
fs
pop
stos
adc
sub
rolb
mulb
mov
std
add
in
pop
add
push
movb
mov
addb
daa
shlb
mov
test
pop
pop
or
pop
mov
test
notl
insb
shlb
out
mov
mov
sahf
pop
mov
nop
imul
movsl
xchg
xor
pushf
pop
fsubrs
jnp
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
mull
dec
insl
je
clc
xorl
nop
ret
sub
ficoms
jno
ss
aaa
and
icebp
mov
adc
adc
push
jb
es
es
pop
mov
ret
xchg
or
test
mov
adc
and
cmp
popa
jecxz
cs
loope
scas
pusha
xor
add
and
insb
pop
xor
mov
xlat
or
scas
int3
and
dec
cli
add
dec
pop
cld
jl
nop
cs
xchg
mov
nop
inc
sub
lret
or
lcall
and
mov
xor
xlat
fsubrs
dec
pop
xor
loope
pop
and
es
dec
es
jl
out
stos
ss
jp
pushf
add
sbb
inc
xor
lcall
push
stos
insb
fcmove
or
insb
or
xchg
stos
repnz
data16
xor
jae
mov
sarb
jo
sub
in
sub
jns
scas
pusha
mov
pop
fs
push
mov
adc
jg
pop
jecxz
stos
inc
repz
jmp
test
punpcklwd
lds
xor
adc
daa
push
xor
cmp
inc
rclb
sbb
push
dec
mov
xchg
pop
imul
sub
mov
shlb
jl
and
xor
scas
inc
push
jp
sbb
mov
pusha
popa
ret
fisttpl
sub
lahf
std
outsb
adc
jmp
mov
add
xchg
mov
jb
shrl
popf
sbb
mov
pop
xor
mov
cmp
jg
mov
ret
xor
call
test
pop
movsb
movsb
lcall
repnz
popf
ret
jne
dec
xchg
loope
arpl
sbb
jno
pop
xor
jge
add
mov
push
sub
test
adcl
inc
push
or
stc
xor
shlb
jns
jae
mov
inc
cwtl
sub
loopne
push
cmp
stos
pop
scas
jb
fwait
arpl
fdivs
mov
insl
and
sub
icebp
jae
ljmp
in
outsb
sbb
jl
out
movsl
cmp
xchg
adc
mov
mov
push
je
aam
sub
xchg
shrl
pop
sbb
dec
or
inc
movsl
jo
cmp
push
cmp
test
int
xchg
lret
arpl
jmp
mov
lea
adc
addb
shll
xchg
xor
jge
popa
cmp
outsl
add
or
sbb
lds
inc
dec
cs
sti
decb
xor
jmp
das
fsubrp
adc
shlw
lea
cmp
outsb
daa
push
mov
pop
xchg
push
shlb
push
lahf
push
ret
pop
lahf
cmp
into
adc
loopne
dec
cmpb
cmp
loopne
jno
movsb
xor
adc
outsl
popa
into
mov
rcrb
or
insl
mov
cmc
cmp
out
sbb
adc
pop
or
xchg
leave
cmpsb
sub
inc
dec
iret
dec
popa
gs
movsb
stos
loop
insl
and
sub
cmc
add
fs
jb
push
sub
loope
mov
pop
movsb
out
lret
inc
mov
dec
pop
xchg
push
cmp
mov
jl
xchg
arpl
in
insb
jle
jno
lods
add
pop
pushf
and
pop
jle
js
pop
into
and
adc
cmp
dec
add
lds
mov
mov
cmpsb
and
or
pop
popa
mov
mov
sub
cld
test
sub
push
xchg
inc
xor
outsl
push
pop
xchg
add
mov
inc
or
fs
test
mov
lret
add
fdivl
or
cmp
jnp
xchg
popf
pop
xchg
lods
sti
xlat
sahf
test
mov
mov
and
sub
xor
pop
pop
sub
fs
daa
pop
xchg
outsl
pusha
mov
sbb
fcomps
arpl
push
in
aad
addr16
sti
call
pop
aad
clc
in
xor
sub
or
sbb
pop
dec
push
jb
push
movsl
aaa
ljmp
mov
pop
add
xchg
ret
lret
movb
xlat
inc
add
in
jno
push
push
dec
mov
fbld
shrl
push
movsl
ret
or
cmp
and
roll
dec
mov
push
in
psrld
andb
adcl
scas
jno
shll
jbe
lret
lods
cmp
sub
push
clc
jns
pop
dec
sbb
shll
neg
or
ret
xchg
inc
jno
push
movsb
mov
mov
push
cmp
sub
cltd
cmp
fwait
xchg
int
inc
sbb
lds
nop
mul
aam
nop
jno
test
loop
mov
test
mov
movsb
stos
cmpsb
dec
fcoml
in
out
xor
push
dec
popf
and
inc
or
rcll
lcall
std
push
and
scas
sbb
fsub
push
adcb
inc
into
scas
cmpb
daa
repz
jbe
mov
xchg
add
sbb
and
or
push
sub
fstl
lahf
outsb
push
pavgw
mov
xor
push
lock
subl
add
mov
dec
and
or
sbb
ffree
das
ret
paddusw
fstp
xchg
lcall
repnz
mov
jb
sarb
js
mov
adc
xchg
rolb
push
cmpsl
jg
aam
cmp
ds
mov
sub
sahf
cmp
mov
fwait
inc
fisubl
ret
aas
pop
sub
int
push
and
inc
ss
popf
cld
xchg
vrcpps
popf
sub
popa
leave
jmp
cltd
flds
pop
or
pop
xlat
sbb
sbb
cmp
clc
bound
in
addr16
push
mov
jb
sbb
in
mov
pop
stos
daa
adc
pushf
and
fists
xor
lods
add
add
popf
movsl
loopne
lcall
lock
jle
cld
push
xor
and
rcrb
addps
lcall
mov
mov
inc
cmpsb
pushf
cwtl
outsb
test
out
in
out
cmp
ljmp
mov
xchg
sahf
push
pop
aad
mov
sub
outsl
push
and
mov
iret
sub
inc
test
jle
fldcw
les
sub
xor
lret
mov
cmpsl
loopne
test
pop
mov
cld
aam
or
mov
add
push
push
and
dec
in
lret
cmp
push
pop
shlb
in
push
xchg
dec
mov
ret
mov
pop
jg
lock
sub
rcrl
sub
ljmp
push
xor
fstp
ja
nop
lret
fcmovu
shll
xor
rcll
mov
cmpsb
push
inc
popa
scas
adc
pop
in
and
pop
mov
pop
sub
scas
mov
in
or
rcrl
cltd
push
loop
int3
popf
lods
lds
add
push
push
sbb
enter
scas
repz
mov
add
popa
out
or
and
lds
xchg
xchg
and
repz
mov
push
pop
ss
fistl
mov
push
add
decb
test
lcall
sbb
sub
lods
sub
dec
or
inc
movsb
or
ja
fcompl
cmpsb
add
adc
sahf
inc
or
pusha
mov
cmp
fwait
ret
call
daa
push
inc
mov
xchg
mov
int3
test
dec
adc
pop
insb
or
push
pop
clc
ficoms
xor
inc
jmp
iret
sti
xchg
adc
add
test
fstpt
xchg
dec
jecxz
dec
and
xchg
cltd
push
dec
ret
xlat
add
jbe
repz
mov
fwait
pushf
fldt
mov
xor
sbb
and
xchg
pop
ljmp
out
xchg
lahf
pop
mov
addb
fidivs
push
lcall
outsl
push
jg
sub
adc
pusha
popa
sbb
cmpl
push
jmp
shlb
ljmp
adc
cwtl
rolw
in
jbe
cmp
fistl
test
cmp
cmp
in
loop
push
in
dec
fnstcw
pop
cwtl
ljmp
pop
ret
xor
pop
ja
pop
inc
add
xchg
fwait
aad
jno
out
mov
inc
pop
int3
sub
jge
fldl
repz
mov
icebp
mov
fistpll
iret
and
xor
adc
jg
packuswb
push
mov
inc
fcmovne
mov
loope
add
inc
fistl
push
clc
mov
call
gs
mov
cmpl
inc
xchg
loopne
push
cmpsl
loope
into
lcall
mov
xor
dec
icebp
push
add
addr16
in
inc
fidivl
jmp
aas
mov
cmp
mov
jbe
fdivp
push
lea
and
or
outsb
add
xchg
sub
dec
add
jecxz
stos
out
pop
cli
sahf
pop
adc
aaa
push
push
xor
test
inc
adc
mov
and
add
xchg
roll
adc
push
jge
and
arpl
jb
xor
xor
push
dec
push
mulb
xor
jmp
xchg
mov
les
push
cwtl
ljmp
push
addr16
mov
insb
jl
and
inc
and
sub
mov
popa
xchg
outsb
xchg
shll
fistl
lods
or
add
repnz
or
movsl
xchg
scas
fdivp
rcrb
cmpsb
lret
push
test
repz
xor
cmp
ja
or
xlat
stos
scas
pop
jg
add
inc
stos
int3
sub
shr
inc
sub
inc
addr16
xor
call
bound
imul
cs
dec
pop
fadds
cmp
push
and
rclb
enter
adc
jnp
mov
adc
jno
pusha
xor
pop
sbb
inc
xchg
or
incb
in
mov
fisubrl
add
lret
fdivp
popf
cmp
xor
push
xor
daa
lods
lea
and
cmovg
je
sbb
lds
lods
scas
ret
sub
sub
and
push
dec
call
in
std
adc
sub
scas
xor
popf
xor
push
pushf
push
test
ljmp
test
jmp
mov
mov
mov
ljmp
xor
mov
inc
pop
clc
fwait
or
sbb
cmp
aad
out
cli
pop
or
xor
sbb
dec
stc
sbb
push
fisttpll
add
fistps
rclb
les
out
mov
int
lods
mov
test
pop
mov
pop
mull
dec
cmp
andb
lahf
lds
jg
popf
push
lcall
insb
adc
decl
pop
or
fistpll
mov
mov
sbb
xor
mov
pop
dec
lock
fldl
jnp
sti
cld
inc
dec
adc
in
call
movsb
int3
in
add
adc
dec
rcll
or
cwtl
outsl
inc
or
scas
or
jnp
jmp
movsb
adc
jns
xlat
lahf
pop
jae
loop
push
cwtl
imul
mov
test
sub
fldt
ja
cmc
inc
pusha
xchg
push
stos
iret
ljmp
outsl
sbb
push
xchg
les
mov
xor
sbb
or
movsl
xchg
cmc
add
cs
and
pusha
fsubrs
in
push
mov
test
out
jmp
xchg
mov
inc
addr16
in
into
mov
test
add
idiv
loop
xchg
cld
xchg
shld
xchg
mov
psubb
pop
fiadds
and
stos
aaa
ja
and
loopne
pop
leave
imulb
xchg
arpl
inc
jo
mov
and
or
insb
pop
xor
fiadds
lret
mov
xchg
and
mov
sbb
and
mov
inc
repz
dec
push
stos
movsl
adc
dec
test
out
stos
aaa
lods
or
jmp
in
adc
sbb
or
test
jbe
stos
aaa
int3
push
pop
push
and
std
shlb
fdivrl
mov
scas
push
jmp
mov
inc
mov
push
pop
and
pop
rcrl
mov
push
stc
mov
and
xchg
push
push
out
sub
inc
or
lahf
pop
stc
sbb
lret
jecxz
in
pop
nop
in
cwtl
xchg
jne
xor
subb
jnp
cmpsl
ljmp
dec
push
push
ret
cltd
icebp
mov
push
lock
or
cmc
in
jecxz
mov
lods
dec
push
scas
test
aam
sub
sbb
pushf
adc
push
xlat
out
in
in
mov
inc
sbb
movsl
sub
add
cltd
cmpsl
clc
mov
jb
push
popf
cmc
mov
ret
adc
ds
xor
js
mov
dec
mov
pop
pop
cmpsl
test
cmp
lret
out
dec
shll
inc
cmp
inc
std
or
or
push
cmp
and
jno
push
pop
cmp
inc
sbbl
jbe
cld
nop
jb
cmpsl
xor
mov
ljmp
lahf
fcomip
dec
rcrb
popf
loopne
hlt
aam
addb
inc
cltd
mov
jp
pop
or
xchg
push
xor
xchg
in
jmp
mov
push
jae
inc
or
jbe
scas
push
call
inc
sub
mov
mov
sbb
inc
inc
mov
aam
js
aam
jns
stos
rorl
sbb
lea
cmp
cmp
cmp
sub
nop
xlat
mov
sarb
inc
sub
js
lcall
jg
mov
mov
test
push
ss
mov
jne
push
inc
enter
rol
inc
mov
lock
aad
sub
mov
pop
pop
lretw
sbb
hlt
xchg
jle
add
sahf
pop
stos
out
or
aad
call
in
lea
mov
inc
cmc
mov
aad
cmp
ret
mov
jo
int3
lahf
pop
mov
push
and
inc
lret
pop
dec
dec
std
loope
and
ret
inc
movsb
or
mov
mov
bound
dec
outsb
and
test
fdivr
jle
gs
repz
xchg
test
dec
dec
outsl
mov
cld
xor
gs
mov
and
iret
mov
sbb
jne
sbb
mov
mov
mov
push
jne
negl
icebp
push
mov
jo
outsb
js
into
out
les
in
loop
xor
fsubrl
lret
push
pop
dec
lods
sub
mov
subb
cmpsb
inc
pop
sub
and
adc
adc
cmp
nop
orl
jns
push
cli
adc
sbb
stos
sub
xchg
aaa
pop
or
and
inc
cmp
icebp
jno
jl
inc
mov
vmread
xor
sub
in
pop
adc
xchg
adc
xchg
mov
xchg
push
pusha
aas
xor
mov
lret
frstors
pop
aaa
mov
dec
or
fsubs
xchg
repnz
pop
repz
mov
push
and
pop
xor
adc
ret
int
test
dec
pop
out
jg
je
lret
sti
testl
outsl
xor
cmc
jo
sahf
mov
outsl
pop
xor
pop
das
jo
pop
dec
sahf
lds
cmp
rcll
xlat
xor
push
mov
setne
arpl
xlat
pop
out
pushw
sub
dec
push
cmpsb
sbb
xor
clc
jmp
rorb
adc
out
sahf
and
not
push
jg
jecxz
xor
mov
lret
jnp
movsl
and
je
lret
out
pop
mov
push
cwtl
popf
mov
cmpsl
int3
and
pop
sti
loopne
sbb
imul
mov
movsb
xor
jle
adc
or
cmp
pop
pop
repnz
sub
pop
xchg
jno
outsl
mov
aaa
cmpsl
js
xor
adc
lahf
mov
sbb
fmull
enter
popa
pop
jno
fmull
jns
test
inc
lods
xor
fdivrl
ja
sti
in
repnz
test
test
mov
fld
sarb
out
add
in
xlat
ds
int3
push
enter
bound
outsl
or
push
loop
mov
fwait
out
out
jns
xlat
aam
lret
adc
inc
rolb
inc
loopne
sbb
int3
mov
jo
xchg
ret
pop
out
scas
clc
inc
dec
cmpsb
cwtl
sbb
cli
cmp
push
inc
or
mov
aas
push
mov
and
fs
dec
pop
daa
outsb
je
inc
hlt
cltd
adc
and
adc
pop
ret
dec
xchg
mov
sbb
mov
rolb
sti
jge
test
jno
dec
lahf
icebp
sbb
push
pop
mov
sub
lds
adc
ja
jbe
rcll
sbb
jle
mov
adc
and
daa
mov
adc
mov
pop
test
call
lds
or
ljmp
xchg
je
jns
sbb
into
in
lock
je
dec
neg
mov
dec
data16
xchg
mov
mov
adcb
mov
call
xor
sti
mov
sub
clc
rorl
mov
in
mov
test
repz
outsb
iret
inc
add
fidivrl
push
xor
xor
fnstenv
les
sbb
pop
loope
iret
inc
lea
xor
test
ljmp
pop
cmp
cltd
shll
rcll
sbbb
sub
or
movsl
and
pop
fmulp
in
mov
cmp
loope
cmc
xlat
rcrb
aad
fwait
ret
adc
stos
xchg
outsb
adc
bound
out
test
inc
lahf
sub
test
mov
adc
or
sub
lods
test
mov
int
int
xor
add
test
std
call
cwtl
jae
imul
inc
andl
xor
jmp
test
or
scas
push
ret
popa
mov
pop
lods
sub
cld
sub
jle
push
xor
int
jae
scas
add
mov
sbb
loope
cmp
imul
lcall
adc
sbb
mov
xor
and
popf
adc
push
mov
mov
xchg
pushf
mov
add
cmp
enter
sbb
mov
cmpsl
and
fiaddl
push
mov
icebp
addb
cmpsl
ror
jmp
jmp
cmp
sbb
ljmp
lock
pop
data16
test
ret
pop
dec
std
pop
or
stos
xor
jl
scas
shrl
jge
dec
add
cmp
leave
nop
or
fcompl
jno
imul
jmp
or
loope
and
sub
cmp
popa
dec
inc
ja
stc
jo
pop
adc
xor
sbb
jecxz
data16
in
aad
mov
and
push
adc
arpl
mov
sbb
fldl
idivl
mov
jno
iret
out
mov
cmp
mov
xchg
arpl
push
or
cld
mov
adc
push
ret
jmp
push
loope
inc
xchg
inc
stos
dec
xchg
inc
cli
cmpsb
dec
std
lods
inc
jne
add
stos
daa
cmc
fcmovbe
fdivrl
xlat
fiadds
mov
repz
push
mov
cltd
out
outsb
repnz
nop
mov
ljmp
ret
lods
fisubrs
mov
lret
add
jae
inc
ror
scas
movsb
adc
mov
push
das
push
cltd
push
mov
jno
and
dec
add
jl
fs
mov
aas
insb
mov
push
mov
jmp
sarb
xchg
sub
ret
movsl
mov
cmpl
or
test
pop
ret
cmc
movsb
mov
jge
mov
jg
sti
mov
js
mov
cld
sbb
xchg
mov
mov
lret
insb
in
leave
lahf
xchg
push
lret
scas
ret
push
inc
cld
and
ret
push
xchg
inc
or
or
xchg
jg
xor
jno
daa
nop
pushf
inc
jno
scas
mov
add
dec
cmpl
and
xchg
or
call
mov
xchg
xchg
jge
pop
js
adc
lock
adc
adc
repnz
or
xchg
inc
and
or
dec
test
movsb
ret
jmp
adcl
out
fdivrl
push
dec
mov
hlt
jns
sahf
in
cwtl
js
cmp
fs
test
mov
rcrl
xchg
sub
mov
cmp
ljmp
adcl
cmp
sbb
scas
cld
cltd
pop
clc
cli
push
add
int3
mov
enter
pop
inc
movsb
cmp
mov
in
sbb
or
jle
push
imul
pop
fcmovne
cmp
mov
rcrb
mov
out
push
ret
insb
shrb
sub
and
shll
leave
push
mov
fs
outsb
add
push
add
xchg
repz
xlat
xchg
js
add
jne
in
lret
leave
xor
shl
jo
sub
adc
adcb
xor
mov
xor
cltd
xor
jno
mov
pop
push
jg
adc
pop
es
movsb
jp
stc
add
jne
test
fidivrs
xchg
jp
fwait
pop
subb
inc
rorl
ja
sub
push
push
pop
repz
leave
push
sub
sub
inc
sbb
mov
xchg
adc
add
and
xlat
xor
push
or
sti
push
jecxz
cmpl
sbb
test
jnp
xchg
int3
push
inc
aam
insb
jecxz
cmp
add
jl
pop
push
sub
push
sti
sub
inc
dec
cmc
mov
mov
pop
xchg
js
jo
mov
aaa
mov
jo
jo
pop
jmp
aam
adc
adc
adc
xor
lea
inc
jle
cmp
and
fsubs
pop
popl
stc
sbb
cld
lahf
or
xchg
sbb
enter
cmp
fidivrl
sub
sbb
dec
cmpsb
adc
sub
cmpsb
pusha
js
or
fidivs
xchg
push
pop
xor
out
xchg
fwait
ds
xor
or
push
outsb
and
bnd
xchg
push
pushf
sbb
pop
lods
xchg
cmc
inc
lret
dec
scas
insb
push
loope
adc
push
test
dec
cmp
testl
cwtl
leave
cld
dec
mov
mov
ret
jbe
mov
sti
shlb
dec
lret
insb
mov
pop
dec
in
lods
jnp
inc
dec
cmc
ja
inc
lods
cmp
or
idiv
ss
ljmp
mov
mov
sbb
add
inc
sahf
std
hlt
test
aad
jge
lods
cmc
lcall
pop
test
sbb
add
lods
mov
fistps
mov
cmpsb
lret
dec
add
lods
xchg
mov
sub
and
add
mov
outsl
xchg
inc
movsl
jb
call
inc
lock
jo
cmp
push
push
push
sbb
sub
add
loop
ja
pop
nop
push
mov
test
sbb
inc
adc
xlat
rorb
cmp
loopne
hlt
mov
sbb
sub
rorb
add
sbb
mov
cli
add
add
fisubrs
and
mov
repz
int3
push
pop
lods
xor
add
ss
adc
xchg
mov
xchg
dec
xor
scas
dec
mov
into
sahf
cmpsl
cmpb
inc
xlat
clc
adc
xchg
in
je
mov
jb
xchg
leave
adc
stos
push
lret
or
fsub
jnp
cmpsl
jbe
pop
mov
popa
pop
stos
sahf
in
enter
stos
and
push
ret
mov
fs
outsl
mov
fisttps
stos
rolb
lret
outsb
add
add
add
or
pop
out
push
loope
test
mov
pcmpeqb
sahf
xchg
inc
std
cmp
int
mov
mov
jle
dec
out
push
jle
sahf
adc
out
add
sub
or
inc
sub
mov
mov
push
lahf
inc
sub
push
xor
lret
in
mov
cmc
negl
cmpsb
fsub
jae
add
out
jne
push
push
in
rclb
dec
pop
cmp
jae
xchg
imul
xor
das
lods
inc
loopne
or
mov
mov
popl
leave
adcl
xchg
mov
sub
int
jmp
popf
ss
sbb
aas
or
mov
jno
js
jge
adc
addr16
stc
fs
fs
mov
sub
mov
daa
in
fidivs
ret
dec
in
mov
out
mov
push
std
and
push
addl
out
push
push
test
loop
jecxz
push
lret
xor
cli
mov
sub
mov
ret
repnz
mov
cmp
ljmp
inc
jl
mov
mov
jl
cmp
cmp
adc
in
lret
xor
test
lcall
xchg
setne
add
int
or
loop
xchg
sarl
test
dec
es
cli
xor
xor
or
into
movb
jle
mov
shlb
nop
scas
pop
cmc
xchg
xor
mov
adc
mov
imul
int3
add
data16
mov
ja
movsb
mov
cltd
and
fsubrs
pop
push
xchg
loop
shl
nop
xchg
inc
bound
mov
cwtl
testl
ret
jns
test
xchg
scas
pop
test
out
ljmp
shll
jecxz
daa
jns
es
pop
mov
popa
fcmovnb
das
and
mov
mov
mov
cmpsl
mov
push
add
popf
cmpsb
cmp
out
pop
divb
int3
jg
stos
mov
jmp
scas
dec
loope
aam
int3
push
or
dec
call
or
push
movsb
xchg
pop
mov
xchg
or
lea
pop
in
aas
addr16
add
loopne
push
scas
test
mov
dec
push
inc
leave
push
fs
lods
cltd
push
cmp
sbb
jl
or
daa
int
lcall
mov
bsr
xchg
cmpsb
adc
lea
cs
or
inc
mov
mov
std
mov
shl
hlt
lahf
daa
push
pop
enter
imul
cmc
mov
sub
mov
pop
cwtl
in
ret
adc
xor
jg
out
sbb
not
mov
pop
dec
jecxz
test
jae
sbb
frstor
leave
cli
push
lock
and
cmp
or
in
jle
mov
or
or
mov
je
pusha
mull
inc
cmc
aaa
push
bound
dec
arpl
mov
dec
sbbl
push
push
jns
xchg
pushf
jl
clc
addl
jnp
std
sbb
sbb
add
into
or
imul
sub
out
es
adc
push
pop
pop
test
and
rcll
js
das
inc
jae
out
cmp
dec
or
sbb
les
loopne,pt
movsb
jecxz
pop
std
xchg
mov
shlb
xor
scas
jecxz
dec
jb
js
adc
sbb
add
hlt
hlt
pop
pop
inc
jnp
xchg
std
or
enter
push
xchg
fcompl
pushf
in
dec
shr
aam
aaa
pop
bndldx
aaa
aam
testb
in
aam
sar
push
gs
movsl
and
jne
sahf
gs
mov
add
mov
and
hlt
cli
push
inc
cmc
fldenv
xchg
sbb
lock
and
xchg
sub
cmp
scas
pop
lret
sahf
fdiv
mov
sbb
in
or
das
arpl
or
fwait
stos
les
or
or
mov
shll
mov
fldl
cltd
out
cld
pop
rolb
aas
fxch
scas
nop
faddp
gs
stos
test
or
sub
add
movsb
cmp
dec
popf
scas
loop
addb
call
hlt
aam
inc
xor
int
dec
and
mov
movsl
jle
dec
imul
mov
sbb
pop
lea
sbb
xchg
iret
mov
sbb
mov
dec
cs
pop
xadd
adc
adc
fsub
adc
mov
jbe
ja
cli
sbb
in
lds
dec
xchg
and
sub
mov
or
rcll
mov
test
sub
push
ret
adc
mov
out
mov
adc
jg,pt
js
mov
mov
addb
mov
sbb
sbb
mov
movsl
stos
jle
xchg
push
jp
icebp
xor
stc
leave
dec
sbb
cltd
lods
adc
push
movsb
sub
ret
sub
push
xchg
lret
dec
mov
xchg
loopne
sub
dec
in
outsb
iret
push
jno
mov
pushf
dec
orb
leave
pop
outsb
push
inc
add
in
mov
xchg
lret
mov
sbb
xor
mov
sbb
mov
fmull
xlat
push
gs
fidivs
in
xchg
sahf
imull
adc
dec
pop
add
gs
outsb
lcall
xchg
pop
or
and
jb
xchg
test
je
fcmovnbe
rorl
mov
mov
jle
cmp
lock
xorb
inc
lahf
jno
push
mov
xchg
dec
mov
inc
clc
sbb
mov
xchg
mov
addb
push
outsl
pop
or
jb,pt
adc
jo
mov
testb
jno
clc
cmp
rcrb
mov
out
fmuls
dec
fbstp
cmp
jle
sti
cmp
lods
leave
idivl
or
pop
add
ljmp
pushf
xchg
jecxz
xchg
dec
pop
jne
sub
or
outsb
dec
addr16
add
out
jecxz
jl
jl
mov
add
out
daa
pushf
test
push
in
pop
loop
inc
push
cmp
push
add
xor
lock
sub
aad
jp
je
test
mov
imul
fld
cmp
lds
outsb
stc
repz
pop
cmpsb
push
hlt
mov
and
jns,pt
mov
xchg
sahf
inc
mov
out
sbb
divl
and
in
int3
push
jns,pn
mov
cs
ud1
rcrb
mov
fcos
add
add
sbb
ljmp
aas
not
cmp
or
into
out
sub
or
jle
jnp
loopne
test
sub
adc
bsr
push
movsb
push
and
sub
bound
push
jle
push
shr
fnstcw
mov
jle
push
mov
mov
pmaxub
bound
adc
add
mov
inc
pusha
cmc
fstl
inc
sub
enter
or
push
mov
dec
or
xchg
imul
add
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
push
hlt
bound
pop
bound
mov
mov
ljmp
iret
shll
enter
mov
daa
adc
pop
or
addr16
mov
dec
aad
push
or
and
out
cmp
fnsave
jo
push
push
lods
sub
mov
lds
rcl
imul
dec
dec
jmp
mov
pop
rcll
fsubrp
sub
xchg
jno
cmp
cmp
sahf
enter
jle
das
lret
insb
cmp
push
negb
sbb
imul
push
mov
jae
outsb
cld
mov
loopne
call
movsl
ret
icebp
outsl
scas
test
pop
fmuls
repz
xchg
push
xor
outsl
cmp
xlat
cmpsl
push
fcmovnbe
es
mov
mov
xchg
loopne
pop
addr16
js
push
mov
dec
xor
in
mov
mov
xchg
inc
int3
repz
sbb
pop
pop
mov
or
push
dec
enter
std
mov
loopne
sbb
test
jmp
xrstors
lcall
cli
daa
sbb
orl
dec
inc
mov
hlt
fnstcw
pop
adc
sti
shr
dec
movsb
rcll
call
in
xchg
js
insl
mul
adc
sub
xchg
pop
out
stc
lods
xchg
cmp
aad
sbb
flds
pushf
fistl
in
loopne
addb
cmp
dec
ds
pop
fst
js
jns
movl
cli
mov
mov
in
out
or
test
jg
outsl
mov
aam
scas
fldl
sub
pop
mov
shr
or
repnz
jnp
cltd
popf
xchg
adc
mov
add
das
pop
add
inc
xchg
fnstsw
sub
adc
mov
ja
push
scas
arpl
out
sahf
xchg
push
cmp
mov
mov
cmpsb
cs
add
pop
scas
xor
pop
adc
fidivrl
push
js
test
lea
dec
sti
bnd
pop
and
xchg
jne
mov
mov
negl
mov
dec
jecxz
sbb
or
inc
and
cli
pop
xor
es
les
in
push
pop
cmp
fsubs
inc
sub
inc
insb
pop
adc
imul
xchg
fwait
adc
rcr
jle
dec
in
pusha
sbb
pop
mov
xchg
fistps
enter
out
mov
pop
movsb
pusha
cs
cmpsl
lea
and
push
jge
pop
gs
lret
cmp
inc
dec
ljmp
or
jno
fsubs
pop
movsb
jmp
jno
add
jmp
xor
jb
out
imul
fcoms
cwtl
lods
stos
sti
pop
fsubrl
les
shr
dec
sbb
pop
dec
sbb
loop
pop
fadds
ret
ss
cmp
push
jno
xrelease
add
fcmovnbe
mov
push
cwtl
shlb
shlb
clc
xor
mov
js
sub
inc
insl
mov
test
les
jo
scas
iret
movl
les
push
sub
mov
out
lret
stos
cmp
jo
mov
pop
aaa
out
out
in
test
movsl
add
jge
xor
mov
adc
add
or
jo
bound
lcall
inc
adc
dec
mov
in
out
mov
mov
daa
xchg
sbb
fisttpl
insb
ja
out
test
push
out
sub
fsubl
pop
inc
xor
pop
test
leave
jp
cmp
jp
sbb
push
pop
xchg
adc
aad
ljmp
fnsave
push
adc
cltd
pop
xchg
add
imul
movsl
mov
mov
sub
ret
mov
xor
pop
sbb
iret
push
pushf
xchg
daa
dec
xor
cltd
ret
imul
xchg
dec
pushf
ret
jmp
jl
fdivp
xchg
or
movsb
mov
mov
xchg
dec
pop
das
mov
pop
out
and
pushf
xor
pushf
sub
int
dec
lods
push
and
push
lock
push
xor
mov
xchg
in
test
popf
nop
cmp
sbb
enter
roll
xchg
nop
sahf
or
es
adc
xchg
jno
addr16
scas
xlat
xor
jmp
loope
xor
dec
fdivl
sbb
pop
clc
xor
push
mov
dec
movsb
les
or
pop
insl
mov
mov
negb
dec
add
mov
loopne
mov
out
pop
mov
sbbb
xlat
and
jp
in
lock
psllw
loope
jnp
int
andl
and
fidivs
mov
push
lea
cmp
mull
sub
and
add
sub
cmp
dec
lods
sub
push
rol
jb
fidivrs
and
and
push
inc
push
mov
out
ds
aad
js
add
xorb
insl
push
in
pusha
xor
inc
pushf
jl
xchg
adc
xchg
stos
sub
jns
push
and
adc
into
lcall
mov
jg
aad
push
xchg
aam
clc
sahf
test
data16
mov
add
ret
dec
push
loopne
adc
inc
ljmp
pop
outsl
jl
xchg
push
stc
pop
das
inc
xlat
jnp
and
fwait
cmp
cmc
push
mov
dec
mov
dec
ja
rcll
lcall
sbb
cmpsb
mov
imul
rcll
in
stos
mov
push
xchg
inc
int3
mov
scas
xchg
stos
shrb
or
stos
test
cli
jle
xchg
add
mov
clc
cld
dec
lret
sbb
hlt
xchg
sbb
out
mov
pop
xorb
xchg
push
dec
mov
repz
mov
adc
aam
dec
out
inc
inc
sti
pop
adc
mov
mov
insb
inc
iret
jg
push
fxch
fsubs
push
cmpsl
notl
popa
rcrl
lds
sub
enter
addb
in
out
mov
subl
pop
repz
xchg
popa
or
cs
dec
cwtl
test
subl
js
adcb
xor
sub
jo
clc
out
dec
jecxz
notl
aad
sbb
inc
lahf
test
rcrl
out
cltd
mov
scas
mov
push
push
and
add
push
xor
mov
lods
pop
fldt
shll
or
ss
mov
or
or
mov
fwait
jge
pushf
jnp
mov
mov
pop
jno
dec
mov
popa
mov
pushf
push
icebp
movsb
jns
fldt
cmp
iret
adc
sub
clc
ror
iret
lds
mov
stos
pop
js
cltd
lods
inc
dec
xchg
and
fdivs
or
dec
pop
fisttpl
cwtl
outsb
lds
sub
xchg
mov
pop
sbbl
lea
jo
jmp
cmp
cmp
ljmp
sbb
mov
iret
clc
mov
scas
test
fdivl
sbb
sub
sbb
nop
sub
xchg
mov
repz
out
jb
shrl
adc
jl
stc
cld
xor
sahf
pop
fidivrl
clc
xor
imul
adc
out
adc
daa
push
pop
shrl
hlt
scas
pop
stos
push
pushf
sahf
mov
inc
popa
mov
cwtl
callw
cmpsl
add
mov
xchg
push
sub
mov
pop
jecxz
imul
das
gs
sbb
test
outsl
mov
stos
lea
jecxz
pop
xchg
adc
lcall
mov
into
outsb
ljmp
addl
call
imul
add
int
fisttpl
cltd
or
outsb
insb
inc
adc
xchg
movsl
cmpsb
scas
mov
mov
shlb
push
adc
mov
inc
insl
push
pop
add
and
in
outsl
xor
jne
data16
jmp
test
loop
ljmp
stc
lret
fs
out
mov
mov
mov
dec
inc
or
add
push
pop
mov
pop
or
jo
fwait
loope
rcll
imul
in
jnp
and
inc
cmp
cld
mov
lcall
incb
jnp
cmpsl
sub
ds
fisubl
xchg
into
and
push
push
sbb
int3
push
je
clc
adc
dec
inc
gs
cmp
or
in
roll
lret
or
or
xchg
in
lods
aam
ja
incb
or
mov
sub
inc
sbb
nop
pop
mov
or
ja
push
dec
jns
daa
jle
jno
lock
ror
lret
ja
mov
or
js
bound
inc
ficompl
je
in
push
mov
mov
invd
adc
sub
add
syscall
addr16
pop
or
jecxz
rcrb
push
jbe
xchg
arpl
xor
add
lods
mov
movsb
jbe
cwtl
cmp
stc
sub
and
and
scas
pop
and
pusha
and
sub
jg
xchg
cmp
push
adc
mov
jno
add
cmp
mov
push
push
jbe
fwait
adc
popa
dec
daa
je
adc
jno
insl
clc
jp
in
in
lock
jb
lahf
and
adc
xchg
imul
fcoms
aad
ds
pop
ljmp
lret
insb
dec
inc
push
adc
nop
inc
sub
cld
adc
out
cmp
mov
cmp
loopne
jbe
outsb
lds
xor
out
pop
add
pushf
mov
and
add
in
sbb
stos
cwtl
cltd
or
or
ds
loop
inc
push
ljmp
out
mov
std
ret
outsb
loope
dec
xlat
daa
or
lret
or
rcrl
mov
push
and
xchg
cltd
jae
test
xchg
ja
sub
insl
cmp
xchg
jmp
das
xchg
mov
push
or
lods
es
into
mov
xor
fdivs
jb
cli
fidivl
xor
cmp
mov
loopnew
jecxz
push
lock
stos
mov
mov
jg
mov
add
test
push
xorb
pushf
out
sbb
gs
or
cmc
sbb
cli
jne
lret
sub
sbbb
rcll
mov
jb
loop,pn
ja
and
testb
mov
loop
jae
loope
lahf
mov
inc
adc
jnp
jmp
fstps
sub
xchg
insl
jmp
es
inc
sub
sub
sbb
jg
iret
push
xlat
adc
mov
icebp
mov
lock
add
pinsrw
and
inc
and
pusha
imul
data16
test
inc
stc
inc
rcrb
cmpsl
fisubl
push
aam
xchg
mov
jmp
imul
ds
ss
leave
sub
or
test
xor
sbb
lret
divl
lret
push
shr
inc
push
mov
sub
sahf
pop
pop
shll
xchg
dec
fisttpl
call
and
loopne
dec
in
scas
mov
jg
icebp
and
xchg
cmpsb
mov
inc
call
mov
add
push
xchg
and
mov
adc
cmp
and
fdivs
pusha
cmpb
mov
pop
rolb
loopne
sbb
push
out
mov
jecxz
in
cmp
ljmp
pop
loopne
sbb
rorl
xchg
xchg
scas
aad
outsl
mov
xlat
lods
jno
pusha
mov
cmpsl
xlat
lea
mov
sub
push
jb
iret
dec
lret
mov
out
push
orl
pop
das
clc
repz
hlt
push
mov
pop
pop
loope
sbb
add
and
inc
pop
adc
mov
inc
insl
int3
loopne
daa
fiadds
loopne
xor
call
dec
shlb
loop
pop
mov
mov
enter
clc
xchg
xchg
adc
rcr
fs
stos
pop
jg
xchg
lcallw
cmc
jl
push
cmc
sub
pop
sub
into
daa
outsb
ja
ss
xchg
xchg
adc
jb
sbb
and
pop
fnstsw
fdivrs
add
pop
inc
push
inc
loope
shlb
mov
dec
imul
fnsave
testb
adc
leave
scas
jno
jp
js
xor
dec
pushf
cmpsb
and
ljmp
sbb
mov
or
loopne
or
mov
les
aam
add
push
ss
push
xor
icebp
jae
pop
imul
cmp
out
lods
mov
xchg
xchg
mov
out
ret
into
lret
fstpl
add
cmpsl
cwtl
mov
adc
cmpsb
dec
idivb
int
iret
push
push
dec
je
cmp
fsubrl
addl
jbe
xchg
stos
mov
loop
jl
xor
add
mov
in
adcb
scas
mov
loopne
cs
mov
mov
inc
push
and
lret
in
out
push
int3
ret
xor
outsb
mov
into
nop
add
pop
daa
pop
push
les
scas
dec
xor
out
outsb
jnp
push
cmp
test
arpl
adc
daa
add
int
add
jns
cmc
movsb
mov
shl
push
or
cmp
or
cmp
jmp
sub
mov
or
pop
rorl
xor
mov
aam
pop
and
sti
insb
addb
inc
xor
dec
push
in
or
push
scas
sub
dec
pop
aam
adc
mull
add
or
into
test
dec
jmp
jae
loop
lods
fdecstp
dec
xchg
mov
adc
mov
mov
dec
xor
jae
loopne
push
addr16
adc
push
or
addr16
mov
dec
outsl
jb
mov
out
jno
cmpsb
lds
mov
cwtl
cmp
and
add
jmp
add
in
adc
mov
out
pop
xchg
sbb
sysexit
das
icebp
popaw
sbb
add
push
dec
fcom
popf
sbb
add
repnz
xchg
outsb
sbb
lret
mov
fistpll
sti
push
cli
xchg
and
mov
insb
ja
adcb
jno
dec
icebp
out
xchg
xchg
outsb
pop
fbstp
fsubrs
es
mov
js
nop
in
xchg
stos
inc
sub
in
cmpsl
xchg
cmp
jbe
mov
or
xchg
fsts
cld
rcrb
jb
mov
ds
rcll
jns
into
jl
cmp
ja
test
mov
inc
imul
sub
ret
dec
inc
mov
jecxz
mov
jecxz
push
mov
xor
jmp
insl
ss
in
scas
mov
aad
adc
mov
negb
and
mov
add
movsb
imul
shll
adcl
xchg
cmp
xchg
pop
pop
lds
hlt
shlb
cmc
dec
ja
fisubrl
dec
popa
sbb
mov
cmc
jnp
mov
out
iret
cmpsl
push
outsb
sub
mov
cmp
cmp
and
jne
int3
xchg
sub
enter
test
lret
add
add
hlt
pop
clc
inc
inc
rolb
lock
imul
aaa
or
or
inc
addr16
pcmpeqd
test
icebp
movsl
cmp
or
inc
xchg
pop
sbb
and
pop
cmpsb
xchg
sub
lock
mov
mov
push
jno
mov
aad
cmp
inc
sarl
imul
fimuls
loopne
push
mov
sub
repnz
sbb
movsl
ret
pop
jo
jb
out
add
inc
mov
inc
bnd
arpl
scas
aaa
movsb
pop
aas
inc
mov
je
add
dec
arpl
jg
fadds
adc
pop
sbb
mov
cmp
jbe
bswap
jle
pop
mov
jnp
idivb
insl
xor
jne
sahf
add
mov
adc
insb
cmpsb
cld
dec
int3
or
mov
outsb
fildl
subb
xor
lcall
add
xchg
pushf
pop
mov
or
mov
pop
call
outsl
sti
pop
addr16
insb
pushf
into
mov
rcll
aaa
adc
rolb
iret
or
rcrl
scas
or
mov
leave
jno
or
inc
cmpsl
add
inc
cwtl
ja
push
or
shlb
ficoms
test
mov
dec
xor
arpl
movsl
pop
out
push
mov
mov
mov
shll
addr16
and
and
xor
and
mov
in
sbb
jns
or
mov
adc
add
or
mov
popa
loope
pop
mov
adc
insl
jmp
jmp
jo
adc
sarl
jecxz
lods
shrl
movsl
std
aaa
test
inc
les
pushf
xor
push
jne
mov
adc
lods
pop
in
push
inc
out
imul
outsl
sarl
push
movsb
repnz
mov
orl
xchg
mov
or
outsl
pop
ljmp
pop
cld
add
and
add
mov
jno
mov
sbb
inc
cmp
loope
adc
inc
fldl
pop
les
insl
pop
cmp
jnp
cwtl
xchg
xchg
stos
xchg
push
gs
ret
fimuls
lds
mov
pop
arpl
lods
mov
cs
push
or
adc
gs
stos
insl
sub
mov
add
push
popf
jmp
xor
aaa
icebp
mov
mov
psubusw
ss
push
aaa
fisttps
dec
loopne
mov
leave
pushf
mov
mov
and
sti
xchg
pop
mov
out
mov
stc
or
andb
rcll
scas
mov
cmp
sub
test
loope
add
insb
lds
movsl
push
xor
arpl
sbb
sbb
into
stos
push
iret
dec
sbb
rorl
adc
std
hlt
inc
addb
inc
cltd
imul
or
sti
aaa
daa
sub
sbb
in
sub
out
mov
out
lods
jne
add
shrb
je
fistps
mov
rcr
or
mov
jnp
add
jo
test
inc
loope
xchg
pop
subb
mov
repnz
cmp
stos
cltd
mov
jmp
daa
xor
stos
mov
add
fistpll
mov
xor
push
out
bound
pop
std
nop
adc
rcl
iret
and
and
mov
push
out
dec
imul
or
scas
int3
arpl
div
add
pop
hlt
push
fsubrl
loopne
pop
xor
cmpsl
addr16
jecxz
int3
fbld
bnd
adc
mov
stos
add
sub
push
dec
daa
jae
out
fists
sub
xorb
les
pushf
lea
and
jns
roll
dec
popf
or
inc
push
cmp
add
and
push
fwait
imul
mov
sahf
pusha
int
push
fucomip
loope
cwtl
in
cmp
mov
pushf
enter
pop
popa
cmc
fcmovnb
adc
xchg
push
pop
jb
mov
mov
push
jae
mov
xor
mov
add
les
mov
sti
aaa
pusha
das
push
sub
fisttpll
adc
ficomps
aas
fstps
leave
repnz
xchg
in
loope
cld
push
mov
xchg
fstps
dec
xchg
inc
subb
scas
in
mov
cmp
jge
add
inc
jne
xchg
add
push
rolb
arpl
dec
add
cmp
inc
lods
sbb
cmpsb
movsb
fsts
mov
jg
repnz
lods
leave
sti
repz
pop
add
outsb
addl
imul
cmp
iret
jp
inc
sub
or
mov
mov
mov
clc
int3
mov
stos
dec
in
scas
mov
cli
inc
mov
adc
outsb
xor
xchg
sbb
mov
bnd
insl
jmp
js
jecxz
sbb
sub
add
sub
push
sub
cli
inc
sbb
int3
pushf
lcall
test
movsl
mov
mov
add
js
xor
pop
xchg
inc
daa
sbb
push
jns
fidivs
push
pop
pusha
mov
pop
pop
jge
xor
xor
push
cmpsb
push
dec
or
push
push
lods
out
xchg
sbb
sub
mov
ljmp
cmpl
jecxz
mov
into
mov
mov
stos
movsb
add
xchg
gs
in
adc
popa
into
push
les
in
jne
jmp
mov
sarl
pushf
xchg
jg
cwtl
shrb
dec
lock
stos
pop
fisttpll
jp
jno
daa
pusha
imul
mov
fldcw
xor
test
out
nop
dec
insb
imul
leave
sub
xchg
xorl
cmp
mov
notl
sub
or
es
int
adc
loop
pop
clc
inc
es
jl
xor
pop
mov
inc
mov
dec
iret
xor
push
aas
dec
into
cmp
and
jnp
sub
mov
out
cmpsl
in
mov
xchg
ja
in
js
adc
inc
cs
or
fs
cmp
fistl
test
add
in
loopne
jbe
cli
inc
and
jno
adc
jae
andl
incb
nop
fsubs
fistl
dec
mov
outsb
hlt
sub
sub
dec
lock
sarl
inc
testl
je
add
lock
cli
mov
lea
sub
popa
jle
movsl
xchg
adc
sbb
jmp
dec
pop
jns
icebp
xor
test
xor
mov
push
out
xchg
ss
mov
and
fiaddl
jecxz
cmp
stos
cmpsb
dec
cld
movsb
adc
cmp
push
insb
dec
ds
aam
call
lahf
cmp
loope
sub
gs
add
js
add
test
pop
xchg
notl
cmp
add
cmp
inc
jecxz
pop
out
pop
pop
cmpsl
adc
mov
inc
xchg
or
jno
cmp
int
aam
movsb
sti
mov
pop
aad
push
sub
sbb
jl
sbb
decl
add
les
mov
cli
dec
enter
sub
loop
mov
lcall
pusha
enter
clc
mov
push
push
fdivrs
pop
sbb
cltd
dec
lahf
testb
inc
push
sti
bound
std
add
jne
jmp
mov
mov
pop
das
pop
nop
cltd
mov
cmp
lret
lock
mov
std
insb
popa
aad
loope
mov
add
sahf
fcmovnbe
add
sbb
test
das
jle
lea
push
mov
mov
jnp
jge
pop
or
mov
inc
jno
dec
int3
mov
or
jg
or
loope
push
mov
sbb
sbb
insl
nop
fiaddl
int3
xlat
movsb
imul
fildll
ss
dec
xchg
push
daa
add
push
pop
incb
cmp
stos
pop
mov
fwait
mov
push
push
dec
xchg
and
rclb
cli
ficomps
inc
mov
or
push
pop
or
adc
or
and
cmpsb
inc
loopne
jne
mov
add
dec
les
dec
mov
jns
dec
mov
mov
fcom
xor
xlat
hlt
fsts
pop
popf
outsb
out
imull
in
inc
ja
sar
call
ret
mulps
out
mov
and
add
inc
js
jmp
add
jp
jne
pop
adc
push
xchg
mov
cmp
ja
sub
dec
cmp
mov
jne
jmp
cld
mov
xor
inc
leave
mov
sub
in
cmp
jp
mov
dec
pop
out
adc
fdivs
fisubrl
lret
lea
popa
pop
outsl
cltd
mov
sub
mov
or
cmp
pop
mov
or
pushf
dec
pop
loopne
push
jg
dec
cmp
adcl
shlb
cmp
mov
or
xor
xchg
cwtl
lock
and
in
add
sbb
add
adc
bound
pop
mov
push
inc
popa
fcomps
test
xlat
or
ffree
sub
incb
add
frstor
sbb
sar
stos
mov
lfs
jg
or
xchg
rclb
imul
loopne
sahf
dec
push
out
jno
les
jns
sahf
mov
fistpl
xchg
mov
sahf
addr16
out
rolb
sbb
cmp
mov
and
cmp
pop
lea
mov
imulb
scas
jg
insb
add
or
stc
or
pop
jns
adc
jecxz
and
add
int
cmp
cmc
ret
out
js
pop
mov
shrb
int
jno
xchg
in
mov
jo
out
outsb
dec
xrelease
and
cmp
mov
popf
xor
dec
cmp
mov
adc
adc
filds
fstp
jbe
add
movsl
jge
loope
les
xchg
les
filds
sub
pop
in
jge
mov
stos
mov
inc
mov
xor
jbe
adc
jne
jle
nop
pop
shlb
cld
inc
js
dec
jbe
push
in
jb
cmp
mov
push
loope
dec
fcomps
out
mov
call
adc
aaa
mov
jge
nop
daa
jl
sar
ds
and
not
lea
lods
cltd
jecxz
and
mov
mov
mov
adc
lock
sti
clc
pushf
add
pop
rclb
add
mov
rcl
out
pop
shr
jo
stos
icebp
js
sbb
cltd
xchg
clc
lea
mov
lcall
notl
ret
add
aas
xchg
stc
in
mov
or
jg
adc
and
aas
popf
cmp
add
repz
insl
icebp
jecxz
inc
out
imul
aas
mov
aad
fidivrs
xor
xchg
dec
cmpb
ljmp
out
mov
aas
fucomip
es
hlt
inc
cmc
sub
pop
mov
xchg
jl
mov
jno
int
fs
cmc
repz
sub
sbb
loope
add
xchg
out
insl
push
cltd
jns
addb
and
jb
lods
push
jno
and
sub
sub
test
testl
pop
add
sub
mov
sub
inc
test
enter
mov
mov
mov
inc
lock
std
mov
push
cwtl
cwtl
dec
daa
rorb
shrl
pop
mov
cmp
sub
inc
jge
pop
nop
sbb
pop
repnz
jmp
sbb
lds
lret
imul
fs
mov
sub
inc
shrl
adc
inc
dec
in
lret
cmp
sbbb
in
movsl
lea
pop
sti
addr16
insb
mov
pop
or
add
loop
push
and
pushf
pop
sbb
xor
leave
jno
sti
jno
jbe
shlb
and
xor
shlb
clc
fists
add
or
lds
adc
mov
into
insl
push
addl
inc
fwait
jecxz
sbb
in
push
jmp
mov
mov
inc
adc
inc
orb
mov
das
lods
adc
push
dec
daa
jo
fimuls
shll
repz
cmp
sub
mov
mov
adc
imul
jae
mov
iret
lods
in
pop
fwait
mov
adcl
and
cmp
jecxz
mov
add
call
pop
in
jecxz
inc
xorb
or
add
loop
icebp
mov
icebp
inc
dec
xchg
dec
xor
xchg
mov
cmp
push
mul
push
pop
imul
cmp
cmpl
enter
push
fiaddl
sub
sbb
int
push
loop
nop
stos
mov
cmp
ret
sti
shlb
mov
mov
cmp
cmp
loop
dec
mov
mov
imul
cmpsb
xchg
mov
bound
bound
sub
xchg
cmpsl
mov
mov
lods
and
inc
mov
leave
test
lcall
out
aas
aad
int3
mov
xchg
push
outsb
dec
in
test
dec
dec
pop
psubb
testb
adc
std
push
push
pop
sub
pop
std
sbb
cmpsl
sub
or
lea
pop
dec
and
dec
cmpsl
lods
push
mov
fwait
out
adc
mov
jmpw
mov
js
sbb
cmp
push
repnz
arpl
rdmsr
pop
stc
cmp
push
sbb
mov
xlat
mov
sub
out
aaa
cli
jle
or
inc
fcomps
xchg
mov
aam
into
je
iret
add
pop
outsl
insb
test
into
jmp
inc
and
mov
mov
cltd
insl
push
movsb
popa
loopne
insl
jecxz
adc
add
push
inc
ds
lret
aam
or
js
pop
pop
mov
cmp
out
sub
imul
inc
sbb
into
sbb
mov
mov
dec
inc
sbb
jb
mov
xlat
cmp
push
and
dec
nop
int3
sbb
stos
cs
mov
mov
ljmp
lret
adc
push
mov
and
scas
fiadds
es
mov
into
aam
and
or
inc
push
rol
ret
out
adc
mov
rcr
ljmp
pop
xchg
shlb
push
testl
gs
ror
adc
push
scas
and
pusha
jle
mov
rcr
in
daa
movsb
fwait
adc
push
lret
dec
js
jmp
mov
mov
subb
cmpsb
xchg
sti
hlt
pop
jo
sbb
insb
mov
mull
pop
out
fwait
sbbl
xchg
stos
push
test
push
lahf
andb
xchg
les
add
nop
loope
pop
xchg
in
jno
cmp
push
sbb
sbb
sub
push
xor
jnp
sti
add
jo
mov
out
or
adc
imul
add
fldenv
pop
roll
dec
xchg
stos
sbb
or
adc
add
dec
jp
jmp
sti
inc
mov
out
aam
xchg
push
insl
mov
push
xchg
pop
clc
lock
or
faddp
nop
stc
ds
aaa
jle
clc
shl
ror
mov
add
push
icebp
inc
das
xchg
insb
jne
movsb
jb
add
shll
std
rorl
push
ss
mov
js
daa
clc
or
movsl
movsl
test
adc
test
stos
mov
add
mov
inc
mov
inc
sub
cmpb
popf
out
xor
or
dec
aaa
jg
sbb
mov
jns
sbb
mov
xor
fidivs
stos
inc
jbe
sub
fnsave
cltd
scas
xchg
xor
jg
cs
xlat
adc
mov
daa
add
dec
aas
sti
jb
inc
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
pop
xor
ret
jmp
bound
dec
add
pushf
pop
add
jmp
pop
data16
je
jl
lret
mov
repz
lods
lahf
xchg
mov
outsl
dec
pop
mov
xchg
popf
jb
das
pop
lret
ret
push
andl
jecxz
mov
cmp
mov
push
or
push
xor
ljmp
push
incb
mov
xor
outsl
adc
lods
mov
cltd
pushf
and
in
sarl
xor
or
loopne
xlat
stos
pusha
add
aam
xchg
aam
inc
shrb
xchg
es
or
shrl
pushf
jb
xchg
inc
dec
lods
xor
scas
inc
mov
ret
inc
inc
xchg
jne
mov
arpl
inc
jmp
add
mov
pushf
pop
cmp
pop
pop
xchg
push
xor
cmp
push
sbb
int3
iret
mov
jl
imul
jno
addb
mov
adc
stc
xor
sbb
stc
and
dec
pop
fimull
jmp
bound
cmp
ret
popf
in
dec
sub
sub
mov
sub
pop
xchg
cmp
mov
ror
mov
outsl
fxch
mov
cmp
mov
and
or
decl
data16
xor
dec
pop
leave
push
or
mov
loop
xor
sub
cld
sbb
lretw
pop
outsl
pushf
xchg
mov
push
ss
push
adc
in
and
into
xor
and
dec
inc
loope
and
cmp
pop
push
mov
xor
inc
aaa
repz
dec
hlt
sub
mov
movl
das
push
mov
jb
jno
adc
xor
mov
and
sbb
xchg
mov
push
jnp
xchg
cmp
lds
repz
or
xor
push
sbb
int
rcrb
pop
xchg
cmp
mov
xchg
out
pandn
xor
cmpb
fnstenv
lret
pop
mov
ds
ss
fs
fidivs
ret
fdivrs
into
in
fldcw
push
mov
sti
push
mov
cmp
cltd
movsl
mov
imull
mov
lret
dec
test
inc
sarl
push
jbe
popf
mov
pop
and
and
fcomi
mov
test
imul
es
jnp
xchg
lcall
mov
pop
xor
jmp
lcall
into
outsb
mov
loopne
xchg
adc
aam
dec
int3
aad
call
add
popf
sbb
cwtl
or
jnp
adc
movsb
add
hlt
hlt
lock
mov
mov
push
hlt
pop
and
jle
xchg
outsl
adc
jp
dec
pop
mov
or
mov
mov
in
add
lds
faddp
popa
sahf
cmpsb
mov
adc
jecxz
pop
sub
inc
stc
push
pushl
sahf
stos
mov
jns
out
sbb
push
jns
inc
jmp
cmpsl
mov
inc
stos
fnstcw
pusha
pop
lea
xor
cmc
mov
faddl
adc
mov
and
sbb
mov
push
push
sti
inc
xchg
jp
adc
mov
jge
iret
ljmp
jge
mull
sub
push
jb
mov
repnz
ljmp
and
lret
mov
xchg
out
xchg
enter
cli
fiadds
orl
add
add
pop
sub
add
push
pop
adc
xor
sub
mov
int3
jp
scas
cwtl
rcrl
enter
test
ja
push
mov
cmp
sub
xchg
push
mov
out
adc
movb
xchg
xchg
pop
sti
scas
inc
nop
leave
push
and
pop
daa
push
dec
inc
sub
pusha
push
or
push
sub
pop
jmp
in
rclb
push
mov
jnp
lods
xor
dec
test
mov
sub
mov
ljmp
jno
sbb
jp
xchg
cmp
jns
pop
pop
mov
xor
aaa
sbb
inc
stos
xchg
movsl
pusha
or
cld
sahf
xor
popf
or
push
inc
stos
and
dec
sub
dec
pop
repz
pop
sub
daa
repnz
mov
or
orb
loop
outsb
iret
decl
lret
jns
aam
adc
pop
jno
aad
push
mov
in
lods
test
fwait
mov
movzwl
jp
stos
mov
push
in
mov
imul
movlps
mov
insb
outsl
inc
pop
mov
sbb
and
pop
push
inc
mov
add
or
inc
mov
sub
pop
add
cmpsl
adc
jnp
dec
ret
fwait
jg
jne
fld
mov
leave
mov
pop
scas
push
push
lret
popa
iret
mov
cltd
cld
je
js
cmp
stc
mov
lret
dec
and
insl
movsb
scas
repnz
cmp
mov
stos
inc
ja
test
push
sbb
cli
test
inc
sbb
mov
add
mov
fsin
push
xchg
push
insb
add
bound
test
loop
lret
jns
push
lret
cmpb
dec
cmp
stos
jmp
je
and
sbb
aaa
clc
pop
push
cwtl
jg
fiadds
jne
sahf
fcmove
andb
stos
mov
inc
push
mov
push
stos
sbb
movsl
pop
rsm
cld
sbb
sbb
jb
pop
mov
repnz
loop
jle
movb
fcmovu
push
xchg
idiv
movb
ss
dec
imul
pusha
push
push
xchg
mov
roll
sbb
push
sbb
pop
mov
in
add
rorl
jecxz
xor
push
ljmp
out
and
mov
sbb
jns
pop
in
sbb
int
mov
cli
sarl
and
fs
xchg
mov
stos
add
jb
inc
dec
test
jb
cmp
cli
pop
lods
loope
jle
jae
shlb
out
pop
out
jecxz
pop
mov
cmpl
cmp
push
or
and
ret
out
popf
mov
test
fucom
pop
xchg
sub
mov
aam
rcl
dec
cmpsb
in
js
addr16
test
sub
dec
fiaddl
xchg
adc
or
sub
movsl
std
lods
clc
mov
mov
mov
in
rcll
jle
ss
inc
inc
pushf
popf
lods
fsubrs
sub
xor
mov
test
xchg
cmpsl
inc
xchg
add
adc
mov
and
icebp
ja
inc
xor
call
jne
rorl
jns
xchg
xchg
add
ljmp
test
leave
in
xchg
packssdw
mov
mov
call
pop
popf
push
xchg
in
fcmovnbe
mov
push
inc
pop
lea
jno
scas
mov
jo
pop
jne
mov
pop
pop
loopne
sahf
mov
in
jmp
cmp
fstpl
insb
sub
pop
push
call
add
adc
cwtl
outsb
mov
add
jecxz
out
cld
and
or
lcall
lret
mov
add
es
sub
mov
xchg
xchg
aad
xchg
add
cmp
sbb
notb
mov
in
imul
adc
push
push
dec
mov
jae
xor
pop
shlb
and
jmp
and
or
mov
pop
cltd
fstpl
stos
and
cmpl
ljmp
sti
push
inc
xchg
cwtl
enter
ljmpw
aaa
imul
jmp
add
mov
and
out
push
mov
shrb
js
sbb
fwait
sub
bound
inc
push
into
adc
dec
andb
cmpsb
call
inc
xchg
and
jle
out
jbe
xor
push
cmp
sbb
loopne
xchg
inc
inc
inc
jns
sub
shll
fists
jp
jns
mov
jecxz
sub
adc
add
pmullw
sbb
test
xchg
push
cld
and
les
add
inc
das
dec
pop
lcall
push
cmpsb
jl
outsb
add
mov
lcall
rcll
ds
out
sub
testb
stos
and
das
in
dec
xchg
mov
test
fldl
mov
sti
cwtl
movsl
or
out
sub
jg
ja
scas
mov
jg
jl
push
lahf
imul
jecxz
mov
pop
sbb
pop
mov
daa
fidivrl
pop
lret
cmp
out
inc
test
xor
adc
fistpl
outsl
push
and
jae
pop
dec
add
xor
xor
ljmp
insl
and
mov
add
mov
mov
scas
xor
dec
and
cmp
pop
mov
mov
filds
sbb
inc
push
pushf
cmp
dec
push
dec
adc
stos
shlb
out
dec
test
ret
in
mov
adc
jae
sbb
push
fisttps
push
les
std
mov
xor
jae
aam
xchg
mov
pop
push
xor
mov
jae
mov
xchg
sbb
xlat
fisttpl
cmp
sub
adc
bnd
imul
decb
ja
mov
lahf
imul
in
gs
mov
xchg
push
jmp
les
push
test
dec
push
test
into
dec
sbb
cld
mov
das
cmpsl
sbb
sbb
aam
push
shlb
sbb
punpcklwd
add
pop
lds
in
mov
push
stc
sub
jmp
sub
sub
orl
insb
out
mov
and
dec
inc
dec
daa
shrb
in
lret
adc
popa
adcl
iret
daa
jo
mov
imul
cmpsl
mov
in
sub
sahf
mov
jb
push
aam
push
jo
jnp
jbe
daa
sahf
push
out
add
clc
loopne
sbb
xchg
inc
jnp
test
test
cmp
imul
jbe
ss
imul
or
gs
insl
shrd
stc
push
cmpsl
lahf
mov
lock
adc
sbbl
ret
test
or
adc
push
push
adc
adc
in
push
test
mov
stos
insl
scas
xchg
inc
mov
mov
pop
dec
enter
add
pushf
push
cmpb
pop
xor
sub
popa
sbb
icebp
lcall
fldcw
mov
pop
nop
cmp
dec
fstps
mov
pop
dec
mov
adc
push
inc
mov
fisttpll
leave
add
in
and
cmp
pushf
lods
sbbl
dec
in
fldt
not
dec
fdivrs
out
mov
sbb
jo
mov
aad
cmovge
adc
push
cltd
push
pop
xchg
shl
jle
sub
enter
cmp
and
rorl
mov
sti
and
into
repz
cli
xor
arpl
imul
add
jns
insb
push
fisttpll
jecxz
or
cmpsl
mov
data16
add
inc
xchg
cli
stos
xor
cs
cltd
scas
imul
pop
pop
fs
xor
push
jns
mov
push
mov
push
stc
add
outsb
lea
iret
call
inc
push
loopne
jmp
fcom
sub
add
mov
in
cmc
jg
jae
jge
mov
push
pop
pop
dec
ljmp
mov
dec
fcomi
sti
sub
shll
sbb
mov
dec
insl
fcom
or
jmp
sub
xchg
std
ss
mov
pop
mov
repnz
and
cwtl
rcrl
cmpsb
lret
dec
mov
pop
test
cli
std
add
daa
popa
movsl
xor
mov
movsl
leave
cmp
fadds
sub
pusha
adc
sub
cld
or
sbb
mov
cmp
hlt
jge
or
add
imul
pusha
ljmp
cmpsl
je
mov
test
inc
jle
jp
loop
movsl
and
aad
mov
pushf
lods
adc
ljmp
inc
js
bts
das
fcomi
call
mov
mov
mov
xor
pop
push
pop
pusha
shlb
push
fnstsw
pop
imul
push
sbb
cmpsb
lods
out
and
es
movsl
idivl
mov
orl
xchg
int3
ss
inc
pushf
push
pop
loopne
xor
jae
leave
adc
orl
ds
push
test
jmp
adc
xchg
divl
xchg
inc
jle
sbb
in
jne
test
lret
fsubrl
or
icebp
aas
rcrb
lret
adc
nop
stos
pop
dec
or
mov
hlt
push
and
sahf
mov
mov
and
fisttps
sahf
mov
jbe
sbb
adc
cmp
das
pop
lea
fdivs
ja
in
jle
lret
imul
fdivr
pop
add
ret
xor
ss
ret
jo
std
addr16
lods
xor
xchg
dec
sub
sbb
cmpsl
movsl
insb
fld
fcomps
test
jge
outsl
mov
push
movl
lock
repnz
xchg
fisubrl
adc
or
mov
xchg
cwtl
pop
imul
add
call
mov
test
xchg
ret
and
adc
shl
add
inc
and
dec
jge
mov
stos
cmp
sub
in
cmp
mov
sbb
pop
inc
sbb
icebp
push
jl
inc
aaa
jmp
push
inc
outsb
cmp
leave
jg
testb
or
jno
push
fwait
scas
aaa
mov
or
into
jl
in
shll
fsubrl
int3
pop
faddl
pop
pop
mov
sbb
and
push
ret
add
pop
ja
lret
insb
ljmp
cmp
cli
outsl
mov
dec
mov
into
mov
jo
jmp
loopne
add
mov
sub
lahf
faddp
and
mov
add
orl
mov
mov
dec
add
frstor
jp
dec
js
insb
cmp
lcall
cmp
std
adc
adcb
xchg
xor
jp
lea
fnstsw
xchg
imul
fwait
jno
bound
repz
cs
xchg
cmpb
cmp
push
test
mov
pop
pop
lods
xchg
xor
mov
pop
inc
outsl
xor
push
ljmp
cmp
adc
mov
fists
iret
mov
jns
repnz
jns
imul
xchg
scas
stos
add
test
sub
xchg
mov
sbb
stos
sbb
in
cmpsl
stos
cs
xchg
inc
xor
lret
je
pusha
loopne
in
xchg
or
mov
cmc
sub
xchg
scas
pop
push
add
ja
rolb
adc
cld
sbbb
stc
lahf
dec
nop
bound
insl
cmpsl
lcall
adc
fwait
loopne
lock
inc
aaa
pop
and
jnp
adc
and
rcll
insb
sbb
lock
mov
roll
and
addr16
cmp
stos
aaa
xor
jge
fldl
sahf
lret
cmpsl
push
daa
xor
and
daa
push
fninit
dec
jmp
stc
loope
rcrl
add
icebp
cld
push
imul
enter
insl
pop
add
fstp
cwtl
nop
mov
enter
test
add
cmpsl
outsl
mov
inc
mov
sub
in
mov
rolb
jno
pop
mov
pop
xchg
inc
into
jns
hlt
repz
or
insl
pop
mov
imul
inc
push
roll
add
mov
mov
sub
adc
jp
or
lds
sub
gs
imul
push
add
into
enter
mov
movswl
orl
das
repz
push
loop
fwait
xchg
in
pop
dec
sub
rol
insb
mov
movsl
stos
or
xchg
inc
pop
sbb
mov
add
arpl
xchg
cwtl
and
jecxz
sbb
mov
xor
outsb
and
js
xor
std
clc
mov
push
loop
stos
in
cmpsl
sbb
arpl
test
mov
ret
test
cmp
ffreep
cmp
imul
loopne
les
fimuls
rorb
mov
pop
dec
mov
popa
push
lahf
dec
jbe
jle
jle
les
dec
rclb
xchg
mov
mov
jno
cmpsb
xor
xor
out
mulb
inc
sub
div
mov
pop
imul
and
mov
mov
dec
mov
and
and
daa
out
imul
lods
fs
jnp
sbb
xorl
jbe
imull
leave
cmpsb
adc
cmp
xchg
pop
push
sub
cmp
pop
cmp
push
pop
das
loop
pop
push
outsb
std
das
lods
add
out
orb
lcall
inc
mov
cs
xlat
jnp
or
push
in
cmpsb
sub
call
inc
popl
pop
daa
dec
cltd
and
stos
mov
mov
push
es
popl
rcll
rcrb
jmp
pushf
mov
sub
and
cld
pop
adc
movsb
inc
and
in
sbb
lcall
jae
push
lock
stc
sbb
rorl
lods
xor
jb
rcl
jp
or
aam
jl
das
inc
fs
jl
lods
jae
in
out
xchg
fildll
cmp
test
in
popf
pop
pop
push
hlt
pop
dec
add
cld
pop
fstpt
jnp
sub
add
sti
mov
stos
lods
add
shlb
inc
mov
imul
jnp
jg
mov
mov
pop
scas
push
nop
xchg
cmc
outsl
cmc
pop
lret
add
push
pop
jecxz
lods
pusha
test
add
push
insl
jmp
cmpsb
in
bound
fs
in
xor
dec
sysexit
mov
enter
aas
outsb
insl
mov
subl
adcb
lods
loopne
sarb
mov
mov
iret
or
rep
dec
cmp
test
push
add
in
in
outsl
outsl
cmp
in
or
jmp
imul
pop
mov
xchg
jp
add
aad
cmp
mov
push
dec
xchg
mov
stos
sub
inc
fildll
fstpl
ret
xchg
das
or
clc
pop
out
xor
das
shll
ja
dec
adc
jb
dec
sub
push
pop
and
pusha
andl
dec
push
sbb
cmp
cmovae
jecxz
inc
ror
sarl
std
jae,pn
cmc
je
aaa
int
dec
std
xchg
jnp
xorb
fdivrl
lds
mov
adc
jns
push
incb
xchg
xchg
mov
movsb
jns
cmp
lock
mov
lcall
xchg
test
gs
daa
mov
fdivl
or
xchg
ljmp
mov
xchg
and
pop
fwait
cmp
stc
sub
rcrl
cmp
out
mov
fwait
imul
sahf
and
mov
les
pop
push
pop
sbb
test
jmp
enter
iret
adc
lret
outsb
cli
orb
sbb
sti
jo
mov
mov
pop
insl
mov
or
sti
jno
lret
lods
adc
fdivl
stc
mov
sbb
add
cli
addr16
xchg
add
push
sub
jl
mov
enter
and
xor
and
push
jb
imul
imul
scas
pusha
pop
xor
adc
adc
cmp
cmp
fidivrs
decb
mov
ja
pusha
nop
ja
jne
in
fisubrl
int3
xor
int
test
loop
xabort
addb
jecxz
jnp
jbe
fistpl
lea
sbb
ss
xor
pop
lret
xor
nop
xchg
xor
mov
xchg
out
xchg
sbb
push
loop
xchg
aaa
aad
add
and
shrl
ror
bound
lcall
nop
jmp
add
dec
push
or
outsb
popf
mov
pop
xor
sub
ret
cltd
idivb
pushl
pushf
in
jae
or
mov
ret
scas
lods
xor
adc
add
push
push
sub
jge
cmc
mov
jge
jp
adc
or
mov
mov
ja
xor
sbb
fnsave
xchg
mov
cli
jbe
lret
outsl
jp
stc
call
shrb
mov
mov
lods
lock
inc
jle
out
ss
test
cmp
dec
mov
mov
imul
fdivs
fildll
sub
int3
cmpsb
je
dec
mov
cmp
inc
nop
fidivrl
loope
fdiv
add
xchg
lret
ljmp
sbb
addr16
adc
insb
pop
cmp
sbb
mov
pop
das
cs
fcompp
pushf
push
scas
dec
movl
jne
pop
jno
pushf
iret
push
cmp
inc
push
bound
test
pop
pop
xlat
aam
cmp
cli
sub
mov
mov
cmc
mov
lahf
cmp
add
jae
leave
mov
mov
mov
aaa
fs
stos
ljmp
inc
pusha
out
sbbb
dec
inc
push
insb
xlat
pushf
fldenv
mov
jecxz
ja
pop
nop
popl
jns
add
cmp
fidivrl
mov
push
pop
push
push
jecxz
rcrb
dec
pop
push
lock
nop
push
mov
or
mov
xor
cmp
sbb
pop
mov
jae
leave
or
out
xchg
cmp
movsb
cmp
push
xchg
push
aam
cmp
inc
sub
mov
sub
jge
and
scas
dec
scas
gs
ljmp
sub
int
sub
stc
jbe
push
out
fwait
mov
push
adc
fsub
or
mov
rorb
scas
orl
mov
cltd
in
xor
jno
faddl
jo
sbb
or
aaa
sti
jmp
lea
xor
es
sub
mov
cltd
xor
mov
into
xchg
leave
mov
dec
loope
mov
aas
js
repz
gs
mov
mov
cld
pop
les
dec
movsl
aaa
scas
and
test
mov
lods
enter
nop
mov
xor
sub
imul
ss
in
pop
xchg
fucomi
icebp
mov
insl
shlb
pushf
ret
add
rcrb
nop
mov
movsb
mov
nop
push
and
iret
popf
sti
mov
xor
fdivs
lcall
in
aaa
imul
pop
shlb
mov
xchg
ret
cmpsl
sbb
add
pop
mov
insl
jp
dec
sbb
scas
cs
test
dec
and
xorl
xchg
cld
aad
push
cld
cmpsl
shlb
xor
push
scas
add
and
loop
xchg
mov
xchg
clc
sub
shlb
movsl
pop
out
lret
clc
ficomps
les
mov
enter
imul
cmc
imul
in
fsubrs
mov
add
repnz
mov
mov
or
insl
push
xchg
jo
push
sbb
cmp
mul
inc
push
je
jae
leave
icebp
mov
les
pop
jle
js
call
adc
lock
push
jle
or
addr16
and
xchg
push
jae
stos
pop
cmp
push
add
push
int
pop
loop
xlat
repz
xor
mov
push
or
js
and
outsb
ljmp
mov
dec
aaa
sub
or
mov
test
mov
insb
aad
sbb
ljmp
out
xchg
xor
popf
gs
test
fucomi
or
and
jg
ret
es
cmp
mov
shlb
cli
scas
jns
cwtl
fs
xchg
aad
fdivrl
adc
add
xchg
cmp
xchg
lahf
inc
stc
enter
jb
mov
dec
iret
loope
jl
jmp
mov
mov
xchg
lahf
push
sbb
push
aam
lock
xlat
xchg
fadds
dec
sarb
xor
fmul
shll
movsl
xorb
or
mov
push
mov
push
push
dec
dec
aaa
add
in
sub
je
add
push
shl
jae
lahf
xchg
and
jne
or
loope
test
push
cltd
pop
push
cmpsl
outsb
cld
pop
ret
sub
jnp
inc
ret
test
mov
pop
or
pop
jns
push
lcall
jae
in
jmp
pop
imul
lret
mov
mov
aas
mov
sbb
stos
cmp
jl
xor
inc
pop
movsb
dec
fists
sbb
roll
scas
cmp
xorl
push
popa
movsb
addr16
je
jl
mov
push
stos
dec
jb
outsb
jno
incb
inc
adc
sti
fsubl
insl
out
cmpsl
mov
aam
adc
imul
cmpsl
inc
cld
sub
jns
or
out
bound
push
pop
fbld
out
add
lahf
lds
mov
pusha
dec
into
push
pop
push
dec
das
insl
sub
mov
mov
imul
pop
in
lds
jbe
mov
and
in
cmp
imul
aam
mov
cmp
sbb
mov
xchg
jmp
or
mov
mov
jmp
jno
popf
mov
pop
push
jno
jecxz
and
or
jg
leave
stos
loopne
fwait
rol
sub
pop
popf
jg
sbb
lret
cmpsl
push
lds
xor
inc
scas
jmp
mov
lds
add
adc
sub
pop
inc
cs
xor
jae
mov
lcall
stos
adc
insb
fsubrs
daa
sbb
ljmp
imul
cmp
int
jg
pop
clc
ret
jecxz
in
mov
jecxz
push
mov
push
gs
mov
mov
aad
cmp
rcrb
popa
pop
push
call
call
rcrl
leave
mov
daa
stos
mov
jns
sbb
sbb
add
xlat
adc
jp
lahf
xor
out
jp
test
push
insb
jle
dec
test
push
ror
dec
icebp
dec
sbb
repnz
push
popa
xchg
lret
gs
cmp
popa
loopne
dec
ffree
mov
lods
fidivrl
mov
inc
outsb
aas
dec
int
ja
ds
rcrb
sbb
dec
div
xchg
jmp
dec
popf
ss
adc
add
jns
jb
pushf
cmpsb
mov
sbb
pop
cltd
or
loopne
sar
xor
xlat
xchg
xchg
cmpsb
hlt
stos
fiadds
hlt
push
xchg
fsts
movsb
and
xchg
sub
push
sbb
daa
and
dec
adc
fiaddl
ds
popf
imul
mov
ret
outsb
mov
adc
jo
cmpsl
loop
into
jmp
mov
psrad
out
dec
push
repz
mov
cmp
je
adc
jp
rolb
xchg
push
mov
jo
lods
jne
mov
adc
outsl
in
and
pop
sbb
fdivr
daa
jae
in
in
imul
mov
enter
pusha
jo
idivl
pop
insl
cmc
rcr
dec
mov
aam
das
gs
jg
rolb
add
dec
add
fbstp
jle
pop
mov
push
adc
jl
popf
lret
pop
movsb
ss
push
out
aas
dec
and
int3
js
pop
fsubl
outsb
add
adc
int
and
and
push
icebp
hlt
lock
je
dec
xchg
push
fisubl
jne
inc
pop
mov
rcll
push
mov
je
inc
int
dec
cld
popa
fsts
mov
sub
xchg
pop
dec
or
add
sbb
push
push
push
mov
sub
fwait
cmpsb
andl
pop
sahf
loope
test
inc
lcall
mov
jae
js
addr16
and
mov
inc
into
outsb
sbb
inc
jecxz
in
lret
jno
dec
sub
jnp
clc
fnstcw
add
dec
lds
xlat
into
or
faddl
dec
mov
xabort
ds
test
clc
outsb
add
sti
orb
sbb
insl
fwait
push
cwtl
lea
and
jmp
std
cmpsl
cmp
sbb
xchg
call
jecxz
sbb
lcall
or
adc
cmp
mov
sub
pop
jne
ds
xchg
sbb
jo
jg
stos
in
mov
cmp
dec
sbb
leave
cmp
sub
in
jno
daa
stos
cmc
mov
and
cwtl
jmp
pop
pop
dec
cld
sti
mov
test
inc
lret
lahf
std
std
sbb
and
imul
testb
lcall
aas
les
inc
and
jns
je
sbb
pop
or
push
fadds
adc
int
imul
test
movsl
jmp
cmp
push
jo
fsts
ret
dec
inc
dec
out
xorl
sti
sahf
outsb
add
imul
imul
ret
std
div
mov
xor
scas
add
ljmp
mov
fadd
sub
mov
xchg
push
xchg
iret
inc
adc
and
cld
inc
mov
mov
scas
push
aaa
pop
pop
xchg
cltd
dec
jp
add
mov
xor
fwait
push
insl
inc
jmp
sbbl
fisubrs
adc
or
xlat
cmp
arpl
movsl
cmp
cmpl
dec
push
cmp
and
sbb
and
arpl
sbb
lds
pop
movsl
pusha
movsb
push
push
sahf
push
sub
xor
adc
rol
fs
neg
xchg
xor
nop
dec
addb
scas
add
sbb
xlat
sti
in
inc
xor
lcall
std
xor
inc
inc
pop
add
mov
loop
out
inc
xor
dec
inc
adc
push
test
jmp
pop
faddp
adc
push
cli
inc
or
popf
negb
fst
or
inc
jbe
ds
lahf
mov
push
xchg
outsb
enter
cmpsl
lret
mov
data16
jne
jl
mov
xor
fwait
mov
dec
xchg
push
jo
adc
xchg
mov
cltd
notl
mov
enter
mov
push
jne
sub
xchg
mov
lret
montmul
cmpsb
ret
add
cmp
movsb
iret
sti
in
push
and
test
push
mov
aam
stos
cmc
pushf
xchg
inc
lret
xchg
lea
mov
and
xor
mov
lods
cwtl
ror
mov
movsb
mov
xchg
pop
add
call
push
pop
movsb
jbe
insb
adc
mov
add
xchg
test
xor
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
pushf
shl
lods
dec
lea
jmp
bound
and
pusha
adc
add
inc
sbb
add
mov
cmp
les
repz
sahf
add
sub
shll
jbe
test
pop
fcomps
shlb
imul
loopne
add
orl
das
jns
dec
orb
and
adc
mov
or
xchg
mov
in
dec
cmp
xchg
push
fldenv
mov
pop
stos
cli
pop
iret
in
outsb
mov
fistps
mov
mov
xchg
jg
ja
adc
in
xor
stc
loop
sarb
out
stos
and
or
addb
pop
jge
or
xchg
push
pop
lea
out
xchg
mov
cli
mov
push
xchg
jle
mov
out
push
push
dec
stos
mov
pop
or
jp
daa
hlt
cmp
sarb
loop
vpunpckhqdq
sbb
lock
or
mov
xor
xchg
loop
pop
push
mov
cmp
push
je
pop
xchg
sbb
js
js
sub
jl
int3
push
lds
push
stc
addr16
pop
aas
repnz
mov
dec
insl
shll
rorb
jmp
sar
ret
fistps
pop
leave
add
dec
fiaddl
popa
mov
pop
fcmove
inc
scas
scas
xchg
dec
pop
movsb
fbstp
and
outsb
sub
or
jae
icebp
push
xlat
inc
add
push
filds
or
mov
push
sahf
ret
or
jb
mov
dec
lock
sub
cmovle
loop
mov
ljmp
test
xor
iret
mov
dec
ret
jno
push
jecxz
xchg
js
stos
adc
mov
shlb
or
lcall
test
sub
mov
xor
and
dec
jb
xchg
mov
mov
test
push
push
push
adc
test
repz
in
pushf
fs
nop
jae
mov
fs
movsl
jno
pushf
jae
mov
shlb
bound
adc
repz
xchg
mov
push
cmp
mov
xchg
js
sbb
xchg
jp
inc
mov
cmp
ljmp
mov
pusha
repz
mov
std
and
push
jle
arpl
ds
loope
int
push
inc
mov
cmp
and
xor
jo
push
inc
imul
addr16
or
xlat
mov
int3
cmpsb
scas
nop
movsb
lret
xchg
xchg
out
inc
nop
mov
inc
fidivs
cld
mov
daa
add
jno
leave
andb
or
inc
dec
rorl
cmp
test
out
add
idivl
sbb
fildl
sbbl
sti
push
cmp
leave
ss
add
inc
sarb
adc
leave
inc
out
ja
in
lahf
out
sub
daa
popf
inc
imull
shll
loope
test
jmp
sbb
push
mov
xchg
roll
repz
dec
push
jae
xchg
clc
loopne
mov
jnp
lods
in
jo
jecxz
sub
and
stc
xor
xchg
mov
xor
mov
push
enter
or
sub
pop
or
sarl
inc
jge
lods
lods
xlat
call
and
aam
out
mov
cwtl
notb
fnsave
mov
jae
and
cmp
fidivrs
xor
sbb
hlt
shll
xor
push
mov
xor
fimuls
test
add
jb
les
fs
lahf
out
or
jmp
popf
into
daa
pop
xchg
outsb
cmp
in
jb
jb
mov
mov
bswap
repz
xor
cs
mov
daa
rclb
jge
and
int3
and
and
out
sbbl
mov
sub
in
fbstp
int3
ljmp
inc
dec
pusha
add
mov
loopne
mov
in
addr16
movsb
dec
adc
xchg
push
dec
jmp
jle
andb
decl
mov
out
inc
psrlw
mov
jecxz
cmp
mov
inc
out
add
mov
movsl
jmp
lea
ret
cmpsb
in
out
mov
jl
jmp
out
mov
sub
mov
rcrb
rcr
pop
ror
pop
inc
outsl
fcmovbe
addl
or
dec
sahf
jg
push
mov
in
pop
mov
enter
xchg
stos
in
and
dec
lock
fstps
cmc
loop
mov
add
mov
adc
stos
xchg
shrb
lods
int3
in
add
mov
sbbb
push
xchg
xlat
das
clc
mov
push
xor
lret
jbe
outsl
pop
out
fists
repz
ja
daa
call
pushf
std
fs
movsb
or
mov
push
cli
aam
dec
cmp
loop
clc
andl
mov
xor
dec
push
fstl
cmp
mov
mov
adc
leave
out
mov
push
sub
mov
cmp
push
jne
out
or
sbb
out
arpl
adc
inc
out
scas
push
movsb
sub
jbe
test
xor
daa
out
js
jns
mov
jl
and
std
add
push
aas
dec
sbb
or
lahf
mov
aas
or
jle
mov
roll
push
mov
push
jno
lods
insl
flds
lret
loopne
movaps
jmp
xchg
mov
push
jg
in
or
arpl
and
fbld
nop
adc
out
out
mov
int3
out
sbb
loope
aas
dec
lret
scas
mov
mov
test
pop
sarl
ljmp
xchg
mov
mov
icebp
cmp
movsl
and
adc
push
push
aad
mov
loop
hlt
sbb
xchg
or
dec
int3
mov
repz
pop
aam
and
sbb
mov
pop
pusha
push
fstpl
mov
je
stos
daa
shrb
sbb
and
xchg
sub
ds
cmc
cltd
mov
repz
pop
shll
xor
fxch
test
inc
mov
xor
mov
xor
mov
xor
push
cmp
insb
and
cmp
je
insb
push
inc
stos
and
gs
pop
int
aad
flds
cmp
lods
pop
adc
into
or
mov
xchg
xchg
mov
and
popa
bound
out
call
cmp
dec
sbb
daa
or
jb
sub
jnp
fs
cmc
aad
popf
icebp
dec
adcb
call
xchg
shrb
lcall
shl
sbb
test
inc
push
data16
push
imul
stos
mov
leave
shll
out
inc
push
mov
mov
inc
ret
and
lret
sbb
sbb
ficoms
jo
cmpl
pop
repnz
push
xor
movsl
and
xor
jp
pop
popa
vmovsldup
addr16
sub
stos
mov
mov
adc
cmp
and
xor
pop
and
pop
scas
stos
inc
jecxz
mov
arpl
push
scas
inc
push
scas
int3
in
loop
mov
sub
jo
xchg
sahf
mov
ja
push
mov
inc
call
mov
sbb
movsl
jg
and
inc
mov
adc
xor
xor
test
outsl
icebp
sub
js
decb
mov
cmovg
jbe
dec
gs
xchg
pop
xchg
out
mov
ret
imul
jecxz
pop
loop
push
repz
push
add
fcompl
push
in
sub
xchg
sbb
orb
cmpsl
fnstenv
or
lods
into
adc
sub
aas
jb
sub
loope
stos
adc
out
gs
jl
mov
xor
push
or
andb
stos
or
iret
daa
imul
jnp
insb
or
js
add
rclb
hlt
rolb
push
test
cli
jns
outsb
mov
pop
jnp
mov
sub
scas
xor
sub
lcall
sti
jmp
pop
and
ja
cltd
test
mov
cmpl
test
pop
lahf
roll
pop
sbb
mov
push
fbstp
movsl
outsb
arpl
mov
xor
dec
push
sbb
xchg
mov
cmp
cld
xor
dec
xchg
mov
sbb
xchg
pushf
sub
das
loopne
push
mov
cmp
or
jb
test
pop
callw
jmp
lock
sti
cli
mov
mov
xorl
xchg
dec
mov
enter
aad
andl
sarl
popf
lahf
rcrl
sub
mov
or
cmp
mov
mov
push
fcom
pop
mov
lret
fdivl
xor
and
mov
ret
jo
insb
es
loopne
dec
mov
sahf
adc
push
shl
add
add
les
pop
out
xor
mov
push
ret
mov
ret
fisubs
test
pop
inc
test
aas
test
mov
ja
jae
add
add
in
mov
sahf
or
insb
jecxz
lcall
test
sub
xor
xlat
mov
jnp
push
out
xchg
js
mov
test
aad
sub
movsl
push
pop
and
popf
addr16
dec
and
inc
or
adc
mov
pop
movsl
inc
test
jp
xor
mov
movsb
adc
notb
fsubr
xchg
sub
iret
call
xchg
out
and
lock
adc
adc
movsb
shl
adc
lods
outsb
mov
adc
add
popa
push
dec
mov
add
lret
out
mov
out
mov
les
and
daa
fwait
ja
push
dec
cmc
cli
push
lret
sti
jne
jne
mov
nop
nop
les
jnp
movsb
add
jne,pt
mov
out
js
jae
and
jl
adc
mov
sarb
adc
jbe
clc
mov
push
lcall
xor
outsl
add
cli
icebp
fldl
sbb
cs
decl
out
popl
cmpsb
aaa
rorb
je
inc
push
test
mov
pop
data16
lds
leave
pop
pushf
mov
jge
push
pop
and
cmp
lret
stos
mov
fucomip
test
cmp
cmp
outsl
adc
jb
imul
inc
pop
fsubrl
mov
mov
mov
and
xorb
dec
push
rol
lahf
int
popa
mov
push
dec
mov
inc
dec
jl
ret
mov
scas
scas
lock
fs
sub
sbb
xchg
movsl
loop
jne
jnp
push
incb
ljmp
or
dec
das
adc
xor
push
mov
stos
test
ljmp
jns
inc
pop
adc
xchg
jge
or
test
clc
sti
mov
test
in
std
and
stos
xchg
cli
nop
dec
movl
test
pop
in
fistpl
pop
pop
jge
dec
scas
mov
shl
roll
rcr
cmp
sbb
mov
adc
mov
cwtl
fisubrs
sbb
jo
fs
add
push
je
push
mov
xchg
adc
ror
int
flds
mov
push
aaa
pop
roll
js
pop
int
adc
pop
mov
rcll
mov
into
mov
repnz
imul
mov
int3
popl
call
jmp
dec
push
mov
scas
and
mov
lcall
cmc
enter
fisubl
pop
push
jmp
or
adc
jecxz
sub
loopne
mov
hlt
stc
arpl
pusha
movsb
lcall
sub
and
int3
and
add
sarb
pop
mov
divb
cmp
mov
xor
rcrl
pop
cld
loope
fwait
sub
jmp
and
enter
mov
add
or
movsb
jg
push
cmpsb
ret
scas
mov
sub
mov
enter
adc
stos
pusha
pop
mov
mov
sbb
jb
sbb
in
popa
mov
out
bound
inc
movb
inc
or
xor
and
fldt
add
jb
rcrb
test
mov
xchg
xlat
xor
rcll
adc
mov
push
sub
jg
stos
mov
sbb
mov
push
test
pushf
mov
fisubl
mov
or
push
push
xchg
nop
fdiv
ret
cmpsl
adc
add
xchg
dec
in
dec
clc
std
xlat
or
mov
xchg
inc
xor
mov
or
jge
lock
or
jl
jno
xchg
adc
xchg
add
xor
and
std
jnp
jge
push
or
xchg
clc
mov
rclb
lahf
pushf
out
in
push
jne
jb
inc
gs
lods
lock
fnstsw
insb
xchg
sbb
pop
cmpsl
mov
xchg
xor
sbb
push
mov
adc
out
in
mov
andb
lods
jno
scas
dec
cmp
xchg
sub
mov
jmp
fmul
xchg
or
clc
jbe
pop
popl
push
add
xor
scas
mov
mov
adc
icebp
push
adc
xor
lea
sbb
out
jns
sub
pop
jbe
out
pop
and
inc
jg
lret
xor
mov
out
pusha
adc
pop
lods
adc
xchg
xchg
xchg
or
dec
dec
ds
imul
fwait
cmp
imul
ljmp
jmp
push
push
sbb
sbb
or
loope
push
xchg
and
mov
outsb
insb
hlt
loop
cmp
xor
sbb
xor
scas
inc
jp
mov
js
or
xchg
in
cmpsb
addr16
inc
dec
and
dec
add
sub
movsl
fidivrl
mov
and
nop
mov
or
jp
mov
fsubrl
mov
add
or
in
cmpl
adc
popa
jmp
jne
data16
sub
mov
mov
je
push
call
stos
and
push
jb
xchg
loope
xor
loop
jp
inc
outsb
jb
lcall
lret
lcall
ficomps
sbb
and
xlat
ret
into
adc
int3
xchg
aad
sub
ljmp
arpl
dec
jo
fwait
shll
pop
sub
arpl
cmp
add
dec
inc
jae
or
sarb
out
cwtl
movsb
xor
leave
add
add
push
cltd
mov
inc
pushf
push
das
mov
dec
sub
clc
mov
std
cmpsl
lds
fisubrs
cltd
xchg
das
jl
shrb
inc
in
shlb
mov
insl
sbb
pop
xchg
fwait
cmp
test
sbb
mov
scas
dec
les
mov
leave
fwait
push
xor
mov
or
shll
je
mov
ret
cmp
jno
jne
punpckhbw
movsb
cmp
rorb
dec
in
cmp
pop
sbb
dec
mov
rol
pop
cli
push
sub
push
pop
lret
ret
jb
js
movsb
sbb
into
shlb
push
and
insl
cli
test
xchg
push
adc
aad
fcmovbe
rolb
sub
daa
adc
pop
adc
inc
xlat
pop
hlt
in
arpl
adc
sbb
cmp
xchg
shrl
rorl
jae
pop
pop
stos
sub
cmp
lcall
xor
jae
fidivrs
stos
aam
icebp
sbb
push
cltd
lods
enter
cmp
dec
in
sub
into
mov
jmp
sbb
and
imul
hlt
js
iret
call
insl
sbb
pop
addb
lcall
aam
es
sub
pop
js
push
push
fnstenv
mov
inc
rorb
lret
shl
xchg
repz
xchg
jmp
push
ja
std
je
jg
jo
mov
push
popa
pop
frstor
inc
testl
dec
inc
sub
push
inc
jb
mov
pop
xchg
add
dec
jne
imul
dec
clc
insb
pop
mov
fsubrl
pop
jmp
mov
fisubl
mov
movsl
out
bound
xchg
dec
cli
jns
cmc
es
jp
cmc
mov
sbb
insb
sbb
jg
lret
mov
cmp
inc
in
push
popf
lods
testl
and
pmullw
push
inc
and
cmp
pop
dec
das
adc
stc
cs
xchg
xchg
stc
fs
mov
mov
daa
cs
es
ljmp
inc
push
pop
outsb
mov
xchg
sbb
push
fwait
in
inc
sti
rcrl
in
or
mov
cmp
icebp
aam
inc
movl
add
sbb
jge
or
lahf
das
gs
mov
jl
sbb
dec
in
leave
lods
dec
sahf
sbb
sub
push
or
mov
lds
icebp
lret
jle
add
ss
push
icebp
cmp
sub
pop
ret
insl
or
and
dec
int3
add
jmp
dec
and
and
mov
jo
sbb
cwtl
or
gs
ret
out
fwait
insl
fsubrs
lea
or
mov
nop
jg
add
sub
mov
dec
adc
fists
jge
lret
adc
sub
add
lods
xor
sub
aaa
xchg
out
xchg
das
pusha
push
pop
mov
and
jne
sbb
rcll
call
xchg
testl
add
lea
imul
in
bound
xor
mov
mov
push
lods
add
jmp
xchg
je
sbb
arpl
and
stos
push
pop
jmp
push
bound
cs
push
jno
test
sbb
cmc
xchg
addr16
cmpb
gs
sub
inc
int3
pop
sbb
loop
test
jl
and
fstps
cmp
jo
inc
test
jl
sbb
scas
jmp
sub
in
mov
mulb
dec
ljmp
xor
sub
lret
bound
rorb
cmp
popf
out
fdivrl
adc
dec
mov
lods
jge
sbb
int
insb
aad
data16
mov
ds
inc
pop
dec
inc
mov
add
xchg
enter
pop
xchg
mov
gs
stc
je
adc
cmp
pop
dec
adc
xchg
adc
pushf
sbb
loope
mov
in
mov
out
mov
dec
in
dec
jns
scas
mov
mov
jge
cmp
pop
inc
and
test
jg
mov
push
jl
pop
in
pop
adc
mov
xchg
jae
push
sbb
jmp
inc
ret
test
add
ret
das
mov
adc
dec
enter
cmp
xchg
add
loope
les
test
push
pop
mov
sbb
push
ror
jge
mov
jo
inc
iret
lea
in
jg
pop
dec
cmc
into
xchg
mov
push
sysexit
ljmp
loop
pop
pop
fidivrl
out
xor
test
cmp
mov
inc
addr16
sbb
out
jns
sub
xor
enter
cmp
fisubs
mov
bound
inc
or
loope
or
stos
divb
fbstp
pushf
cmpsb
jae
shl
dec
and
cmp
mulb
lea
mov
cs
mov
adc
cld
test
loopne
inc
dec
shr
dec
mov
add
scas
ret
stc
ficomps
ficomps
and
and
xor
gs
enter
lds
mulb
jg
jl
scas
pop
dec
movsb
mov
jmp
sbb
shll
shll
dec
es
pushf
out
sub
pop
das
sub
pop
sub
ret
stc
lds
mov
add
scas
gs
adc
scas
adcb
jbe
pop
dec
stos
or
push
sahf
in
xchg
adc
cwtl
add
adc
cmp
aam
test
mov
cmp
nop
mov
dec
pop
xchg
les
xor
out
cmc
xchg
out
mov
or
mov
sub
mov
dec
mov
leave
cltd
jp
icebp
adc
dec
ret
jecxz
fwait
imul
mov
cwtl
cmpsb
lret
mov
mov
jl
sub
in
pop
mov
addb
add
xchg
inc
jle
ja
fldlg2
xchg
mov
ja
jg
push
int3
push
sbb
fwait
dec
cmc
xchg
push
pushf
cwtl
lret
movsb
jg
loope
mov
mov
movsl
mov
jp
adc
push
jne
ss
cmpsl
sbb
notl
orl
cwtl
mov
pusha
pop
xchg
ret
data16
add
cmpsl
pop
movsb
add
push
fsubrs
iret
lea
faddl
addr16
mov
sbb
out
and
rcrb
mov
xchg
mov
cmp
pop
sub
das
xor
lret
dec
adc
mov
dec
call
jecxz
mov
or
loope
movsb
decl
dec
mov
xchg
faddl
xchg
ljmp
jns
fmuls
les
push
add
mov
cli
or
out
mov
es
in
push
mov
movsl
test
inc
or
push
jns
dec
stos
pop
pop
inc
das
mov
cli
icebp
lret
push
mov
bound
ja
and
mov
fwait
adc
and
xor
popf
sub
je
xchg
pusha
out
or
jle
sub
sub
mov
cmp
fldcw
dec
jo
mov
or
fldl
rorb
lock
mov
cmpsl
or
push
lods
mov
pushf
pop
popa
mov
outsb
lcall
cmpsb
sbb
push
and
mov
je
out
xchg
popf
js
in
call
inc
aaa
stos
xchg
clc
mov
mov
add
pop
xchg
cmpsl
cmp
and
mov
aam
mov
jb
pop
mov
test
xor
lahf
pop
cmc
xchg
fwait
test
fwait
pop
and
lock
lcall
ja
mov
dec
mov
inc
scas
add
ss
leave
out
and
movsb
inc
les
and
jnp
insb
ja
mull
cltd
lcall
sbb
movsb
dec
pop
mov
jnp
sub
ljmp
pextrw
popa
out
mov
mov
js
adc
sub
sbb
out
pop
loope
repz
adc
cmpl
mov
mov
in
paddsw
jnp
int3
out
movsl
push
clc
mov
aas
scas
lahf
std
jnp
inc
xor
leave
pop
fs
movsb
dec
fs
dec
add
push
mov
jns
xchg
push
shrl
mov
adcl
xchg
in
insl
sub
jmp
repz
sub
iret
mov
negl
out
insb
leave
cltd
xchg
ljmp
push
not
jne
adc
cld
cli
pop
sti
test
mov
aaa
mov
push
icebp
dec
gs
adc
mov
sub
or
and
enter
dec
jecxz
xchg
lahf
movsb
std
clc
in
out
cmpsb
shrb
xchg
int3
std
out
aad
push
sbb
std
xlat
pop
jg
arpl
pushf
in
cmp
fisubrs
sti
sbb
or
stos
inc
sahf
xchg
ja
test
je
push
lcall
es
pusha
or
pop
cmp
out
in
outsl
imul
mov
push
mov
pop
and
inc
insb
hlt
cld
ja
sbb
add
pop
movsl
mov
lock
aas
or
sbb
lds
sbb
push
ljmp
pop
lea
cmp
loop
sbb
sbb
and
fidivrl
sti
adc
add
leave
pop
js
into
outsl
add
mov
sbb
mov
sub
repnz
insl
lcall
sbb
setno
fidivs
jge
mov
sub
in
cli
es
jge
ds
jno
mov
je
pop
sbb
jnp
sub
mov
fnsave
jb
xor
negb
ficompl
subl
jl
es
pop
out
mov
clc
cmp
sub
inc
mov
pop
imulb
push
in
loopne
sbb
lret
xchg
cmpxchg
inc
pop
stos
cs
fs
fsub
lahf
cli
mov
in
out
pop
test
sar
mov
xor
sarl
push
mov
inc
push
insl
mov
mov
and
ljmp
pushf
push
ja
xchg
inc
mov
or
loop
pop
adc
pop
addr16
adc
dec
xchg
inc
enter
mov
imul
jmp
js
mov
divb
xor
shrl
in
mov
mov
fmuls
pusha
xlat
or
inc
mov
out
out
push
ret
clc
mov
icebp
fsubrs
pop
sub
sbb
scas
fidivl
mov
not
jp
cli
hlt
sub
mov
mov
xchg
mov
aad
js
adc
xor
xor
rcll
mov
jae
aam
pxor
xchg
mov
sub
inc
cli
cs
out
inc
xor
fnstenv
jle
push
cmp
ds
adc
test
mov
lahf
insl
push
enter
mov
jg
xor
addr16
jne
stos
cmp
inc
mov
mov
dec
clc
stc
xchg
push
xor
fistpll
pop
xchg
setle
cmp
std
add
stc
popa
and
adc
mov
jb
cs
or
xor
push
xchg
pop
enterw
sbb
test
sbb
add
mov
or
rclb
sbb
dec
lret
push
pop
push
mov
mov
jo
mov
repz
jmp
mov
sti
adc
pop
imul
rclb
bound
inc
jno
mov
and
inc
xor
xchg
adc
mov
fstpl
pop
in
in
punpckhdq
jle
aaa
sbb
bound
std
lock
jbe
sbb
mov
mov
sub
ja
xor
sahf
inc
pop
aaa
sbb
push
fs
jae
cltd
dec
sub
pop
outsl
pop
mov
bound
inc
and
ss
arpl
and
push
nop
outsb
js
push
inc
inc
jne
cltd
repz
and
into
mov
xchg
jmp
cmp
push
xchg
push
inc
lea
out
das
ljmp
push
sahf
mov
ret
sbb
in
sbb
scas
add
ret
dec
faddl
xchg
sahf
in
mov
mov
mov
inc
dec
pop
andb
add
lds
insl
or
js
imul
mov
jle
push
mov
dec
xor
cs
jmp
xchg
pop
push
pusha
push
pusha
dec
push
mov
out
or
sbb
cmp
sub
mov
sub
or
jge
push
xor
jecxz
pushw
mov
mov
fwait
sub
test
sbbl
mov
pop
in
shrl
in
dec
call
insl
daa
fcmovb
ja
in
cmp
out
data16
pop
mov
jae
xchg
int
cwtl
mov
inc
sbb
hlt
adc
inc
rcrb
inc
push
adc
fs
cmp
and
pushf
ret
andl
punpckhwd
scas
sbb
mov
sub
sbb
enter
or
sbb
adc
push
in
shrl
out
inc
mov
aad
or
out
jae
negl
or
mov
add
inc
scas
leave
outsb
push
xor
std
dec
jno
mov
das
outsl
mov
in
testb
mov
mov
rcrl
add
cmp
aad
test
mov
mov
mov
lahf
push
xchg
aam
out
mov
repz
mov
xchg
cmp
iret
mov
addr16
add
js
cmp
rcr
imul
dec
xor
mov
loope
and
loopne
push
ret
testl
fcmove
loop
xor
adc
xchg
sbb
and
adc
movsb
repz
in
lea
jns
dec
add
aaa
fldl
sahf
push
lods
lock
test
adc
lret
xchg
or
add
popf
mov
lds
lods
xchg
push
inc
stos
int
pop
scas
fs
and
pop
push
adc
adc
adc
jg
mov
or
jae
iret
clc
add
ljmp
inc
es
push
ss
nop
es
add
shl
movsb
push
inc
xor
dec
fwait
mov
sti
cmp
shlb
cs
push
lea
shl
test
mov
jmp
xor
mov
orl
int
xor
adc
mov
push
ja
jmp
xlat
sub
nop
movsb
popf
mov
fs
jg
lea
cltd
popf
mov
cmp
inc
jb
scas
stos
popf
or
mov
orb
add
lret
in
xor
pop
mov
mov
sarl
movsl
and
pop
mov
mov
in
seta
jno
scas
xorb
xor
xor
roll
cmc
hlt
mov
push
jge
jb
sti
mov
aaa
dec
ja
ret
xchg
sub
cs
mov
daa
sbb
lea
ljmp
push
jmp
jb
ja
jne
test
or
dec
sarl
xchg
cmp
jge
push
sbb
scas
popf
jmp
pop
xor
mov
out
pop
leave
inc
and
add
outsb
push
mov
cmc
test
mov
sti
out
sbb
mov
xchg
jge
pop
lods
pop
sahf
fimuls
dec
es
xor
into
pop
les
fcmovnu
das
lcall
es
push
stos
sbb
out
std
lock
inc
arpl
pushf
inc
pop
or
popf
mov
jge
cmpsb
mov
ja
movsb
cs
add
out
clc
pop
sbb
jno
inc
jb
outsb
mov
or
in
popa
popf
and
inc
inc
xchg
popf
fadds
ret
es
rcr
testb
sub
push
pop
pop
adc
mov
mov
xchg
and
push
cmp
fidivrl
pop
jecxz
imul
pop
push
sub
cmp
jmp
fnclex
jo
push
inc
xor
mov
pusha
and
xchg
and
cltd
pop
sub
rolb
lahf
mov
jmp
fnsave
push
mov
arpl
jo
stos
pop
pop
ja
bound
test
fists
imul
or
cmpsb
mov
adc
mov
pusha
clc
jae
push
xchg
mov
push
push
dec
push
xchg
cmp
push
push
aaa
popf
jge
and
sbb
mov
fmulp
inc
push
test
flds
jmp
in
push
subl
jo
stos
cmp
jp
nop
cs
add
cmp
push
iret
mov
or
adc
mov
push
punpckhwd
cmp
ret
icebp
cltd
xchg
fsubrs
sub
pop
xchg
roll
adc
add
out
xchg
sub
mov
adc
or
leave
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
pop
sahf
hlt
push
jmp
bound
aam
mov
cmpsb
cmpsl
sub
cmp
sub
stos
mov
inc
mov
xchg
xchg
pushf
add
repnz
sbb
fiadds
xor
fidivrs
inc
xchg
loop
pop
bound
in
mov
push
gs
pop
sbb
push
mov
call
add
mov
jno
addr16
outsl
inc
bound
adc
mov
ja
sub
jg
xor
xchg
jmp
inc
les
and
pop
sbb
aas
sub
es
sub
or
xchg
fidivrs
in
popa
ret
out
mov
and
mul
icebp
movsb
je
pop
push
idivl
inc
and
jo
decl
sub
int
dec
push
sbb
dec
cmp
loope
xor
imul
push
rorl
call
dec
and
adc
orl
adcb
mov
push
add
lock
jne
mov
push
orb
jle
add
mov
push
mov
or
cltd
xor
mov
jp
mov
repz
rcrb
insb
gs
and
orb
in
mov
nop
jbe
adc
jns
lods
stc
lds
test
mov
mov
out
add
std
lret
stos
testb
adc
jg
enter
fwait
insb
jae
lcall
cmc
arpl
xchg
add
xor
and
mov
jo
jl
insb
xor
sti
and
arpl
loop
int3
sbb
out
nop
popa
scas
popf
xchg
outsb
into
or
out
dec
lahf
sub
pop
sub
sbb
dec
pusha
dec
clc
aas
pop
fsubr
mov
dec
hlt
ret
add
imul
sarb
xchg
mulb
decl
mov
in
add
mov
sbb
addr16
fisttpll
cmp
push
scas
and
cmp
iret
adc
dec
dec
pushf
ja
iret
mov
and
xchg
mov
dec
sbbl
lock
sub
mov
insb
jno
cli
sub
pop
std
jnp
jne
fsubs
out
jle
scas
or
testl
jb
jmp
dec
xchg
stos
in
out
dec
test
jno
jle
and
push
lock
out
negb
or
push
subl
mov
xchg
sbb
sbb
fisubl
das
and
ja
xor
xor
lods
lods
mov
clc
xchg
movsl
pushf
and
fstpl
mov
aas
lret
mov
mov
ret
mov
jne
mov
and
mov
xchg
lret
push
insl
aas
sub
and
testb
fcoml
cmpsl
in
loop
adc
ljmp
fimuls
iret
movsl
into
cmp
iret
and
or
mov
adc
iret
xchg
push
jbe
gs
sub
cmpsl
ds
in
mov
and
sbb
mov
in
lcall
in
xor
mov
mov
clc
xchg
push
loop
imul
fwait
out
mov
ret
rolb
xor
push
aam
mov
and
imul
fcompl
add
and
or
xchg
scas
xchg
lods
inc
jg
xchg
xor
aam
add
iret
mov
mov
ret
mov
arpl
es
xchg
mov
call
xchg
fwait
das
dec
inc
mov
pop
pop
mov
cmp
add
iret
mov
jnp
mov
orl
and
fiadds
mov
dec
mov
lods
shll
pop
xor
cmp
dec
jl
inc
cmp
add
stc
pop
jns
in
cltd
iret
jne
fldl
push
pop
insl
and
lods
dec
sub
xchg
je
inc
mov
sub
xchg
xlat
pop
orps
jmp
daa
cmp
mov
mov
xorl
cmpsb
cmp
and
shlb
imul
incl
mov
fsub
outsb
in
cmp
pusha
nop
xchg
lret
inc
lea
sub
cltd
test
add
add
rcrb
xchg
daa
gs
daa
jp
int
lock
cmpsb
lea
iret
mov
or
adc
ljmp
mov
fcomps
mov
int
push
and
jbe
mov
shl
int3
cli
lods
jle
test
push
into
push
jne
movsl
ja
aaa
push
inc
testl
adc
cmp
fsubrl
lods
or
mov
out
aad
jb
jb
out
pop
pop
inc
sbb
je
stos
scas
aas
imul
or
or
push
push
push
jb
inc
lret
xor
mov
lret
mov
insb
es
ret
mov
jg
add
loop
cmp
rcrb
jl
adc
stc
pop
shl
flds
sarb
pop
das
inc
mov
lods
inc
add
shrl
inc
xor
das
stc
scas
cmc
mov
imul
aaa
sub
movsl
xchg
jbe
and
sub
rcrl
xchg
adcl
and
jmp
inc
aas
add
or
jns
out
out
sub
shlb
les
sahf
clc
mov
cwtl
shlb
cwtl
test
push
or
sbb
xchg
xchg
jmp
pop
orb
repnz
sub
es
dec
and
mov
mov
inc
xchg
sbb
xor
dec
stc
mov
dec
in
pop
jl
rclb
xlat
jns
dec
push
in
xchg
jp
add
in
dec
xchg
aam
and
jnp
xor
xor
mov
mov
pop
push
sbb
jo
out
cli
xchg
pop
enter
jns
ds
jo
and
dec
push
fwait
sbb
subb
lret
jb
shl
fdivrl
or
insb
fcomip
aas
lock
leave
dec
in
jo
icebp
dec
jns
dec
fisubrl
outsl
into
xchg
imul
push
and
push
sbb
fiadds
mov
jg
dec
mov
out
jp
arpl
adc
xchg
div
cmpsl
dec
and
sti
out
mov
push
iret
xor
out
or
push
sti
xor
jo
and
outsl
out
jae,pn
xor
repnz
js
inc
push
xor
aaa
lods
insl
jb
jbe
scas
cmpsl
cmp
bound
les
int
lods
repnz
in
inc
movups
test
stos
mov
scas
in
fistpll
ret
je
cmp
or
test
inc
jne
test
mov
jp
push
std
out
lea
pushf
movsl
lods
pusha
mov
pop
pop
sbb
sbb
jl
jo
aaa
aad
mulb
stos
es
pusha
inc
decb
divl
xlat
xor
xchg
movsb
xor
push
add
push
aaa
dec
ret
mov
inc
sub
and
nop
mov
xchg
mov
es
iret
mov
jecxz
mov
pop
frstor
arpl
xchg
cltd
or
push
loop
pop
cmp
shlb
sub
pop
cmp
pop
inc
xchg
fisttpll
pop
sahf
mov
lock
sti
mov
in
lods
dec
mov
cmp
dec
cmpb
fcmovnbe
pop
sub
ja
dec
sbb
icebp
das
js
pop
out
jno
and
subb
pop
xor
popf
mov
mov
xor
jg
add
into
movsb
sub
inc
pop
mov
lret
dec
test
pusha
mov
add
in
and
pop
adc
sub
jne
stos
adc
and
pop
stos
cmpsl
outsl
fwait
adc
pop
bnd
xchg
cmp
fildll
dec
shll
mov
daa
test
cmpb
mov
leave
out
rcrb
loop
stos
cmpsl
mov
stos
adc
test
jecxz
pop
push
push
call
jae
jge
or
arpl
push
mov
inc
push
xchg
pusha
jno
out
jmp
in
push
push
in
jl
insl
cmp
stos
or
push
mov
imul
daa
cmpsb
cmc
bound
cmp
push
fisttpl
rcrl
jmp
daa
movsl
dec
pop
pop
pop
add
pushf
add
cmpsl
cmc
test
push
outsl
nop
push
aam
fmull
mov
scas
out
daa
fistl
jbe
inc
inc
cld
sub
sbb
pushl
fucomi
outsb
add
mov
push
jl
xor
dec
mov
mov
inc
cwtl
imul
xor
andl
test
mov
mov
shlb
popf
cmp
iret
xor
push
mov
mov
les
cli
sbb
std
out
lahf
test
cmpb
rclb
mov
into
es
jae
mov
lds
loopne
sbb
jmp
mov
movsl
data16
pop
push
mov
dec
es
sahf
xor
imul
pop
add
orl
jle
je
inc
inc
push
int3
adc
push
fadds
scas
in
stos
inc
aad
mov
mov
js
in
push
fs
out
xchg
cmpsl
shl
ljmp
inc
aad
push
mov
mov
add
add
iret
push
add
sub
mov
lods
lods
nop
jae
out
bound
push
dec
imul
or
inc
test
mov
int3
cld
or
xchg
jg
nop
adc
out
jecxz
or
pop
lcall
pop
push
jmp
les
pop
push
hlt
sti
xchg
and
pop
and
xlat
test
fadds
xchg
rcll
push
pusha
jl
popa
sub
stc
lods
test
shlb
int
dec
xchg
ja
popf
mov
bnd
dec
imul
pop
scas
roll
std
or
out
cs
cli
arpl
mov
fwait
pop
lcall
sbb
mov
xchg
push
dec
incl
xchg
xchg
jne
jecxz
pusha
push
outsb
inc
xchg
out
xchg
push
mov
cs
push
mov
mov
lcall
sahf
mov
lcall
outsl
jge
mov
ficomps
gs
pop
cmp
dec
insb
add
xchg
jmp
pop
sbbb
xor
insl
cmc
cmp
mov
inc
test
inc
outsb
sbb
insb
cmp
addr16
mov
sub
mov
leave
icebp
push
push
mov
js
fwait
out
adc
add
shlb
scas
out
or
sbbl
imul
push
shlb
mov
xorl
xchg
fs
fdecstp
testl
shll
lahf
js
sub
test
or
stos
dec
arpl
hlt
push
into
mov
sahf
les
movsb
inc
enter
movsl
lret
test
ffreep
sti
sub
lahf
pop
lret
cmp
xor
pop
cwtl
in
adc
hlt
or
dec
fldcw
pop
lret
fsubs
pop
or
adc
aad
fcmovne
loopne
loopne
jne
mov
bound
cwtl
pop
repz
movsb
imull
inc
call
data16
lret
pop
mov
int3
sti
push
add
dec
enter
rcrb
test
enter
test
sbb
adc
push
pop
fcompl
fcompl
repz
stos
and
xchg
mov
test
ljmp
mov
mov
push
cmpsl
pop
inc
hlt
adc
sub
popl
adc
push
cs
push
xchg
and
orb
pop
xchg
dec
test
fsubrl
mov
xor
gs
fistl
lea
dec
movsb
add
pusha
sub
inc
inc
cmpsb
mov
clc
pop
addl
cmp
scas
inc
iret
popa
or
fistl
es
xchg
cli
mov
cli
mov
dec
mov
sbb
xchg
push
sbb
xor
clc
leave
test
lret
imul
in
test
cmp
jne
dec
xchg
mov
shll
xchg
fwait
xchg
cltd
fcomip
sub
into
pushf
add
dec
dec
xchg
ret
pusha
pop
push
daa
sub
stos
or
leave
and
ss
scas
ja
sbb
jecxz
fimull
cmc
mov
cmp
in
pop
add
arpl
scas
cmp
gs
rcll
mov
inc
jno
pop
ret
adc
bound
out
pop
ror
add
lods
incl
and
pop
mov
hlt
lods
mov
bound
cmc
popa
push
je
xchg
call
clc
out
lret
rcr
sbb
hlt
sub
out
push
inc
jnp
rorl
push
xchg
arpl
insl
pop
ja
add
test
fcomp
xchg
push
or
fists
jg
push
out
loopne
pop
push
aad
mov
pop
mov
mov
jae
add
gs
js
sarb
pop
adc
jno
repz
rorl
cmp
sbb
int3
stos
dec
imul
jmp
xchg
add
aaa
testb
cmp
out
xor
sahf
dec
sub
lret
je
xchg
aas
call
lret
or
int
push
mov
icebp
inc
or
cmp
mov
push
ret
jnp
and
cmp
cmp
lock
lret
daa
cld
shrl
xchg
add
lods
mov
pop
sub
inc
sub
scas
sti
ret
pop
sbb
jge
or
daa
cmp
es
or
push
inc
and
movsl
sbbl
fisttps
outsb
push
push
inc
in
sub
orl
and
jge
lock
cs
daa
ret
inc
cwtl
movsl
add
std
pop
xor
pop
arpl
bound
cmc
fists
xchg
jae
sub
daa
push
les
int3
pop
adc
stos
mov
dec
clc
lods
imul
xchg
sub
movsl
in
inc
mov
enter
aaa
jb
sbb
pop
push
stos
repz
fsubrl
and
or
and
clc
sub
orl
sub
loopne
sbb
dec
in
pop
push
out
rcrb
xchg
mov
adc
cmpsl
pop
je
popa
mov
pop
add
adc
stos
xor
xchg
inc
jmp
push
sub
add
cmp
movsb
xor
fstps
dec
mov
lcall
sarb
repz
aaa
push
sbb
adcb
leave
sarb
sbb
sbb
cmp
popa
inc
jge,pn
pushf
aad
add
push
ret
and
ja
mov
mov
aam
lret
sub
cmpl
fucomip
push
outsl
pop
xchg
rorb
adc
pop
xchg
movsl
pop
lods
fs
cmc
xchg
or
js
fnstcw
in
loop
sbb
push
daa
hlt
inc
mov
and
shrb
fs
notl
or
lcall
popf
xchg
mov
push
popf
mov
lcall
fmul
sub
pop
int3
inc
test
inc
jnp
lcall
jae
popa
xchg
in
jnp
adc
fs
inc
dec
mov
fdivl
int
pop
movsl
adc
roll
inc
jl
jl
pop
mov
lahf
dec
pushf
out
mov
scas
cmp
ror
dec
icebp
push
and
inc
add
scas
and
xor
push
mov
cld
mov
mov
fsubrs
addr16
bound
push
sbb
pop
fcomps
or
lcall
dec
iret
mov
jl
pop
cltd
test
sbb
add
jge
scas
pop
adc
sub
addr16
mov
mov
xchg
or
sub
jge
xlat
push
ret
or
dec
div
cmp
add
pop
inc
ss
and
push
jmp
test
cmp
pop
cli
test
push
inc
in
jle
push
movl
outsb
rcr
sarb
or
in
mov
lock
sbb
addl
fdiv
fisttpl
dec
gs
ss
addb
push
pop
fsubr
sti
icebp
pop
clc
xchg
les
mov
xor
add
fiadds
push
mov
or
aad
mov
ljmp
mov
inc
dec
icebp
loop
aas
push
sbb
pop
leave
cltd
cs
test
dec
pop
and
xchg
mov
aaa
jl
mov
pxor
xor
add
cmp
pop
and
or
pop
add
test
fwait
lods
into
sti
add
popa
jle
push
pushf
shrb
push
or
dec
fidivrl
sbb
out
push
adc
jmp
sub
jmp
adcl
pop
push
aas
out
test
xchg
stos
xor
nop
lods
mov
js
add
aam
xchg
test
repnz
mov
lods
jge
inc
pop
or
pop
jne
add
fwait
jne
aaa
jecxz
gs
mov
adc
jne
ficoms
mov
pop
cli
lret
jne
pop
mov
pushf
pusha
inc
dec
inc
daa
cmp
and
pop
insl
in
rclb
xor
mov
jb
push
and
out
inc
push
add
insl
xchg
sub
jns
hlt
into
and
mov
arpl
push
jle
xor
sbbb
inc
cmc
adc
dec
cmp
outsb
xchg
mov
dec
sub
mov
jle
jecxz
ss
pop
fildl
adc
bound
sarb
push
mov
insb
sbb
push
mov
out
incl
sbb
adc
mov
test
pop
jle
xchg
pop
subl
stos
push
adc
pop
bound
imul
mov
mov
jnp
pop
jnp
mov
insl
or
cmp
aas
adc
cmp
dec
xor
sub
icebp
mov
jp
push
out
popf
sub
jnp
aaa
into
cmp
mov
jl
and
mov
xor
out
clc
or
jb
push
out
pop
xchg
pop
into
insl
iret
fisttpll
fnstcw
xchg
pop
mov
int3
pushf
adc
and
xor
dec
inc
mov
mov
inc
inc
fldenv
push
loope
mov
dec
lds
ret
icebp
push
leave
push
cmc
fsubrs
jp
inc
sbb
das
xchg
or
shrb
pop
xchg
sbb
jg
mov
pop
dec
lods
jge
daa
mov
scas
xchg
push
and
negl
mov
or
mov
cmpsb
jge
test
mov
cmp
lock
sti
ficoml
inc
popa
pop
iret
sbb
fdivl
push
dec
adc
adc
push
xor
inc
or
add
cltd
sub
xchg
add
mov
jp
and
jecxz
in
dec
mov
lahf
push
dec
cwtl
sbbb
push
movsb
or
cmovae
mov
inc
gs
aad
outsl
std
ret
repz
mov
repz
add
mov
mov
push
out
pop
mov
icebp
aam
xchg
repnz
push
fldenv
icebp
push
fwait
hlt
cmpsb
rorb
rcrl
lahf
push
cwtl
mov
jne
xchg
add
pop
inc
orl
pop
xchg
jne
arpl
xchg
xor
mov
sub
jnp
test
dec
mov
clc
ljmp
and
out
mov
mov
push
pop
or
dec
in
cmc
repz
popaw
adc
and
mov
jne
popf
xchg
cltd
addr16
and
inc
and
call
fnstenv
add
push
mov
jecxz
mov
xor
dec
std
push
inc
mul
iret
lods
inc
leave
rolb
je
pop
idiv
add
or
jnp
pusha
adc
loop
or
lcall
subb
jbe
add
mov
mov
inc
loop
jmp
jg
and
or
ss
mov
jl
push
in
dec
inc
fbstp
cld
inc
xchg
sbb
inc
out
or
xor
mov
xchg
pop
rcll
jnp
jp
xchg
lcall
aaa
dec
lahf
xchg
arpl
stc
push
daa
sbb
scas
push
pop
pop
pop
jecxz
or
and
xor
pop
cmp
push
pop
ret
ss
inc
repz
mov
push
sbb
push
mov
or
xchg
jle
mov
in
push
dec
push
sub
cmp
pop
cmpsl
push
shl
cmp
arpl
xor
sti
aaa
insb
xor
mov
lods
repnz
inc
mov
and
notw
rclb
push
xor
imul
jge
fwait
pop
mov
adc
test
mov
movsl
pusha
pop
lea
push
fs
scas
dec
and
pop
mov
add
icebp
xor
pop
inc
xchg
gs
add
inc
and
inc
push
js
out
mov
pop
cmpsb
jmp
hlt
and
fiadds
xchg
or
jno
gs
and
add
jne
fdivr
loop
xchg
arpl
shlb
jmp
cmp
push
ret
fiadds
mov
and
iret
ljmp
jle
push
js
cmp
popf
adc
cmp
pop
lods
pop
cmp
adc
xorb
sub
repnz
mov
push
mov
ss
xor
or
adc
mov
push
lock
lods
aaa
pop
inc
stos
popf
mov
xchg
push
test
jmp
push
xor
lods
jmp
imul
sbb
jp
imul
xor
std
fs
cmc
cmp
mov
mov
jne
ds
inc
push
pop
fcompl
add
out
and
pop
xor
fisubs
mov
xor
jno
jne
pop
mov
xchg
and
xchg
sbb
or
cmc
loop
xlat
ljmp
xlat
negb
mov
addr16
cmpsb
filds
ret
push
sub
imulb
bound
jp
and
inc
push
pop
fstpt
aas
call
and
ss
repnz
push
sub
ud1
es
xchg
test
lods
mov
popa
xchg
cmp
pop
xlat
int3
scas
xchg
xchg
test
push
cmc
loopne
xchg
or
xor
mov
push
adc
mov
jmp
and
push
xor
movsl
or
cwtl
xchg
push
inc
shrb
out
scas
data16
mov
popa
inc
mov
and
push
test
and
pop
mov
jmp
stc
fnsave
jg
out
test
sbb
pavgb
pop
dec
or
pop
cld
xchg
cwtl
push
in
sbb
or
mov
pop
or
push
jnp
das
stos
adc
adc
xchg
mov
enter
icebp
insb
cmpsb
pop
shlb
das
fld
jne
ljmp
cwtl
mov
cmp
lods
pop
lods
mov
xlat
jle
mov
xor
jne
mov
stos
aam
test
sub
xchg
bound
movsb
int
add
shlb
fists
pop
xor
adc
loopne
outsl
out
gs
movsl
repnz
push
dec
pop
fistpl
int3
cmpl
jae
sub
add
fs
filds
mov
insb
xor
jo
adc
adc
xor
lea
and
lret
xor
test
dec
sub
pop
lods
lret
lret
out
aaa
mov
int
stc
out
sbb
mov
fsts
jge
and
lcall
aaa
or
jae
jbe
pop
into
maxps
imul
aad
popf
inc
inc
testl
std
xchg
sub
cwtl
das
cmp
in
ljmp
xchg
and
mov
in
es
jmp
and
pop
lods
addr16
pushf
adc
cmp
add
fimuls
push
push
js
xor
shll
mov
pop
std
scas
jbe
insl
mov
test
jle
leave
jp
jb
xchg
imul
sub
inc
mov
push
pop
push
icebp
dec
xorb
jae
lea
add
cmp
add
push
add
data16
push
sarb
mov
flds
and
outsl
pop
outsl
add
imul
add
decb
sbb
int3
sbb
inc
mov
inc
testl
std
add
repnz
pop
std
int3
mov
rcrl
xchg
jae
sahf
adcl
jbe
hlt
push
or
inc
icebp
sbb
popf
mov
loope
dec
push
testb
inc
mov
aam
fsubs
lret
nop
push
es
dec
pop
inc
cmp
stos
aad
mov
ret
divb
int3
sbb
adc
ror
pop
lods
sub
xor
fs
jmp
inc
pop
adc
sbb
add
ficomps
cmp
jle
loop
jbe
mov
loop
icebp
xor
lret
popa
mov
jle
ficomps
sbb
rcrb
punpcklbw
pop
push
jb
add
adc
jg
testl
push
sbbl
pusha
movsb
xchg
dec
loope
das
movsb
dec
rclb
xchg
dec
out
adc
and
dec
in
mov
cmp
or
sub
in
jo
or
sub
pop
loopne
mov
in
popa
sahf
push
xchg
add
lods
popf
lds
or
sbbl
xor
pop
fstps
in
lods
dec
add
icebp
out
xchg
movsb
rorb
fistl
out
jne
pop
js
mov
ja
dec
clc
movsb
or
clc
mov
and
jns
out
gs
jl
push
rclb
cmc
ja
sbb
pushf
sahf
xchg
xor
xchg
dec
scas
and
jge
cltd
test
sbb
fcmove
cmp
shll
mov
test
pop
movsl
pop
cmp
in
jmp
loop
pop
fnstenv
jmp
or
ret
jb
jo
stos
mov
ror
cltd
mov
cmpb
jge
mov
aaa
xchg
pop
push
leave
xor
adc
aaa
aad
pop
sbb
or
aad
mov
pop
pop
sbb
xchg
enter
dec
xchg
aad
cltd
cmp
jge
fisttps
cmp
out
insb
call
les
pusha
cmc
ja
add
rcrb
dec
sbb
fwait
mov
pop
pop
gs
sti
into
xchg
push
sbb
out
inc
cmpsb
mov
sbb
mov
arpl
loope
xchg
cwtl
pop
insb
fsubp
enter
xchg
lods
mov
xor
xchg
fwait
sub
push
pop
pop
fs
sub
fistpll
pop
addl
addb
mov
aaa
adc
incl
or
clc
push
loop
xor
fdivrp
int
rorl
rolb
pusha
jl
xor
mov
pop
stos
adc
adc
out
sub
xor
mov
mov
cmpl
jnp
xor
test
ss
inc
aad
mov
ljmp
pop
xchg
pop
jge
in
jg
push
test
jae
mov
call
aas
sub
out
or
xor
pop
fiaddl
jp
xor
jmp
jl
cwtl
jnp
dec
xor
sub
sbb
inc
dec
idivb
mov
xor
xor
add
pop
or
jg
ja
lds
push
and
addr16
sub
add
scas
mov
push
xchg
mov
mov
lahf
mov
out
sbb
mov
js
imul
xor
push
xor
aas
std
jns
cmp
fdivrp
or
in
xor
jge
and
lds
les
repnz
in
clc
or
stos
ficoml
rclb
fs
ja
mov
mov
in
and
fadds
add
mov
push
repz
fisubrl
xchg
pop
fidivrs
stos
add
imul
xchg
or
xchg
in
stos
lods
push
bound
call
mov
out
pop
stos
xchg
shlb
jo
mov
aam
pop
add
test
out
sahf
cltd
xorb
lcall
mov
pop
mov
cli
pop
iret
stc
cmpl
cmp
imul
adcl
insb
sub
cmp
in
cs
mov
mov
or
push
xor
dec
jbe
lock
std
inc
addl
and
fdivr
dec
sahf
and
mov
sahf
push
sbb
cmp
mov
ret
sahf
rcll
pop
sub
call
cld
js
lahf
cmp
subb
pushaw
int
enter
xor
push
scas
xchg
fsubrl
in
sbb
mov
imul
pushf
insl
out
out
sub
push
es
xchg
leave
mov
xchg
jne
jns
jge
pop
enter
push
jno
int3
mov
loop
movsb
fidivs
dec
cmp
loop
daa
aaa
push
insb
clc
inc
pop
out
hlt
or
repz
push
push
cld
mov
push
sbb
mov
icebp
std
mov
inc
xor
xchg
dec
dec
xchg
sahf
movsl
jge
lea
adc
or
pusha
cmpsb
jb
int3
cmp
ss
mov
ljmp
test
das
std
stos
and
cmp
and
addr16
adc
pop
rcrl
or
neg
inc
add
or
mov
push
mov
mov
mov
inc
pop
pusha
sbb
lock
mov
mov
and
andl
adc
mov
outsb
jecxz
ret
movb
lods
adc
pop
push
sub
inc
pop
mov
push
enter
sahf
int3
jle
push
add
lcall
orl
ret
add
scas
or
and
inc
fwait
pusha
add
mov
fdivl
icebp
jno
les
mov
xchg
std
in
pop
jmp
addl
leave
push
jmp
fiadds
scas
and
fdivl
daa
testl
insl
lahf
in
insl
sbb
jnp
sbb
pop
hlt
cmpsb
jle
jae
call
jne
mov
or
outsb
inc
aad
addr16
or
dec
mov
ja
jl
test
ss
bound
out
sbb
jge
push
pop
adc
shrb
ds
add
jp
int3
bnd
sub
popf
or
insb
push
jb
dec
add
adc
and
in
dec
subl
inc
into
mov
mov
cmp
stc
add
xchg
mov
ja
out
test
popa
mov
jnp
aas
mov
fwait
nop
jbe
out
mov
mov
inc
fimull
data16
rep
mov
add
push
dec
lods
adc
fiadds
dec
sub
ret
xchg
push
and
mov
imul
fldcw
dec
pop
mov
mov
aaa
ljmp
mov
sbb
mov
sbb
lret
and
pop
mov
or
sub
insl
adc
dec
mov
repz
clc
sbb
xchg
dec
adc
lea
sub
dec
xchg
adc
jbe
and
or
xchg
cmp
jl
sti
and
mov
dec
adc
sub
lods
push
pop
cmp
int3
aas
cmp
jp
push
cmpb
adc
mov
mov
fisttpl
mov
dec
mov
mov
sub
xor
stos
rolb
imul
lret
mov
cmp
das
fldcw
sbb
mov
xchg
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
pusha
push
in
jge
popa
rcrb
cmp
jge
aas
jns
int
mov
xchg
cld
jmp
fstpl
adc
insb
fs
push
test
movsl
js
loop
xchg
iret
pop
and
xlat
loopne
xor
cs
sub
pop
pop
dec
jp
pop
inc
iret
inc
pop
push
mov
sbb
xchg
loope
cltd
adc
mov
jle
subb
xor
std
pmaxub
cmpsl
inc
cmpsb
int3
daa
mov
hlt
jmp
and
insb
fwait
popf
dec
mov
or
push
in
ret
push
mov
add
jne
push
fimull
aas
pop
cmp
rsqrtps
aad
inc
jnp
addr16
rolb
dec
shrl
pop
scas
xchg
data16
popf
and
dec
fwait
leave
pop
stc
xchg
ret
jmp
and
lods
dec
pop
mov
addr16
sbb
ss
int
fistl
and
and
mov
jmp
add
in
add
das
fwait
mov
adc
fcmovne
sub
sti
cmp
shl
outsl
push
je
sub
fnstcw
ret
movb
popa
xor
movl
test
jb
adc
pop
pusha
loope
jno
stc
add
xchg
fbstp
lahf
xchg
or
xor
cmp
scas
sbb
test
mov
outsl
mov
rorb
sti
jnp
xor
mov
pop
jp
adc
jmp
sahf
mov
ds
jp
repnz
and
iret
scas
aad
mov
rcrl
pop
jns
lods
repz
cmpsb
fildll
sbb
es
sarl
and
add
inc
test
adc
dec
xor
cmp
xor
subl
inc
cli
es
stc
mov
pop
movsb
popa
sub
mov
out
mov
mov
mov
outsb
nop
cltd
iret
int3
scas
out
dec
shrb
cmp
and
ljmp
je
cmc
hlt
xchg
inc
test
add
cli
sub
jns
xor
ror
shrl
lds
jo
test
cmp
sub
cmpsl
cmp
push
adc
je
lahf
out
sahf
icebp
mull
inc
outsb
jmp
comiss
mov
xlat
mov
notl
nop
and
lods
lret
aaa
mov
push
cmpsl
in
out
ret
jnp
in
mov
cld
je
mov
sub
sbb
or
aad
push
cmpl
xor
inc
and
sbb
mov
sub
or
and
sbb
pusha
dec
shl
popa
ss
mov
mov
ss
mov
lret
lret
pop
lods
cld
lds
rclb
jecxz
mov
push
dec
and
pop
rorb
xlat
and
xchg
and
test
jmp
pop
xor
cld
sahf
out
jle
pop
pop
mov
xchg
aaa
mov
int
or
or
out
push
icebp
sbb
adc
jo
adc
or
addr16
mov
sub
outsb
pop
or
repnz
xor
sbb
shll
hlt
mov
popa
push
jae
outsl
icebp
jmp
add
xchg
fdivs
push
push
out
out
jp
cmp
inc
xchg
jg
cmp
das
sti
ret
les
loope
mov
mov
cwtl
push
mov
push
cmc
mov
into
cld
test
pushf
dec
das
mov
mov
js
mov
loope
fdivs
out
outsl
bound
movsb
push
mov
mov
mov
jmp
clc
jge
cmp
pusha
jns
fs
push
push
mov
adc
push
sbb
std
arpl
cmpl
inc
lods
push
mov
shll
out
js
xor
clc
jb
inc
movsb
ret
cmp
push
sbb
inc
mov
push
out
out
cmp
stc
cmpsb
les
aam
orl
sub
je
daa
xor
ret
lods
pop
sbb
inc
or
mov
mov
pop
sbb
insb
dec
dec
xor
dec
sbbl
xor
out
sbb
test
andb
add
jne
pop
dec
inc
dec
mov
xor
mov
cltd
pop
imul
sub
and
scas
jns
std
loop
hlt
rorl
insl
jmp
std
xchg
adc
sbb
outsl
dec
lret
mov
aas
ds
inc
ds
add
xchg
out
dec
xchg
fisttpll
or
mov
aaa
sub
sbb
cltd
fdivs
push
xchg
push
jae
arpl
call
push
fwait
inc
inc
std
pop
les
jb
cmpsb
bound
stos
push
leave
sbb
mov
or
arpl
mov
mov
sub
ficompl
out
add
sbb
in
or
out
mov
lock
xlat
in
push
adcb
cmp
shll
pusha
inc
sahf
mov
push
xor
xchg
mov
fistl
sbb
mov
pushf
mov
jbe
data16
xor
aad
mov
sbb
icebp
shl
cmp
js
add
mov
mov
mov
mov
dec
push
or
je
mov
leave
in
rcll
pop
dec
adc
mov
sbb
test
xchg
jbe
jl
dec
cltd
adc
sub
jae
push
mov
out
push
push
dec
stos
jns
lds
sbbl
imul
mov
sti
rcl
jne
mov
imul
repnz
inc
jl
mov
in
and
xor
in
mov
xchg
test
icebp
push
dec
mov
push
jl
pop
inc
lea
cld
faddp
mov
jno
mov
jbe
vmovlps
sbb
loopne
push
call
ret
insl
jp
and
push
adc
lock
repz
and
nop
and
stc
inc
test
or
adc
leave
sbb
dec
loop
test
pop
fwait
dec
inc
adc
cmc
or
loope
inc
inc
call
orl
add
xor
xlat
mov
sub
in
imul
jl
push
pop
mov
pop
xchg
add
dec
jbe
ljmp
mov
add
mov
ss
inc
cs
or
popa
or
dec
and
or
outsl
sbb
jecxz
mov
jg
imul
cmp
dec
mov
lods
test
or
sub
mov
mov
jmp
push
sub
fldl
add
xchg
adcl
fldenv
add
lea
mov
js
dec
cmp
in
into
push
imul
push
lcall
aas
mov
push
and
and
cmpsl
addr16
adc
mov
fwait
pop
jnp
loope
pop
and
cmp
fistps
test
mov
mov
iret
pop
pop
adc
test
sbb
cmpsl
rclb
test
sub
pusha
ss
int3
sbb
js
push
stos
aas
jecxz
dec
or
or
js
or
and
std
cmpsl
stos
dec
cmp
repz
and
and
adc
subl
mov
xchg
fnstenv
and
jl
jecxz
or
mov
sub
push
cmp
xchg
mov
cmp
push
repnz
pop
pop
int3
clc
jg
bound
mov
fidivrl
popa
add
out
mov
pop
stos
jne
call
jp
adc
lahf
jne
loopne
add
xchg
aas
dec
out
pop
movsb
pop
mov
and
dec
inc
stos
dec
mov
xlat
loope
cmp
inc
and
hlt
xor
addr16
das
std
fsub
cmp
push
out
xor
mov
jmp
int
pop
mov
cld
jo
xchg
je
cmp
adc
push
add
cmpsb
push
jmp
pop
mov
jne
cmp
sbb
and
push
mov
aaa
dec
dec
mov
sarb
jno
fiaddl
cs
pop
xchg
hlt
mov
cmpsl
loope,pt
or
outsl
repz
xor
fwait
push
in
xor
imul
mov
cld
test
push
mov
adc
cmpsl
ljmp
jno
cltd
push
rorb
movsb
inc
adc
mov
pop
xchg
mov
mov
push
lods
jae
mov
xor
mov
js
out
hlt
nop
xor
fldt
xor
lods
pop
cmp
lock
push
in
icebp
leave
orb
movsb
push
ss
mov
xlat
inc
shll
sub
in
lea
mov
or
mov
pop
stc
mov
jp
cltd
popa
jmp
add
jae
sub
xchg
push
cld
cmp
push
cmp
out
out
ljmp
frstor
cltd
mov
sbb
fldt
in
cli
cmpsl
test
sbb
mov
outsl
pusha
adc
add
adc
pushf
cltd
add
mov
stos
lods
jg
je
inc
fimuls
inc
enter
add
mov
fisttpll
inc
rcr
or
ds
xchg
dec
sub
cmc
fmul
sbb
adc
push
lock
xchg
pop
jno
adc
out
pop
mov
icebp
pusha
xchg
sbb
ja
adc
mov
adc
xchg
inc
add
inc
mov
fimull
cmp
push
add
das
daa
xor
divl
lret
in
testb
push
or
dec
shrl
sbb
dec
faddl
int
push
out
sub
ljmp
jno
lret
or
adc
and
imul
mov
mov
mov
cmp
pop
inc
ljmp
aaa
test
cwtl
lahf
and
adc
sti
pop
xchg
or
inc
iret
jo
jp
cmp
test
cwtl
psubsb
ss
cmc
jne,pt
sub
call
fsubrl
push
outsl
testb
idivl
pop
xchg
jns
or
sub
mov
imul
imul
fbstp
jns
push
add
outsl
pop
sbb
orl
std
push
dec
jge
dec
repnz
jg
mov
mov
call
push
jle
mov
int
and
pop
jmp
push
inc
push
add
cs
xor
sbb
cld
push
mov
inc
repz
adc
shrl
leave
xchg
add
jns,pn
stc
icebp
inc
in
pushf
stos
lods
sti
push
lahf
sbb
xor
in
push
insl
inc
sbb
ret
negb
jbe
sti
mov
add
sbb
xchg
sbb
adc
inc
int
sub
scas
shll
in
lret
jp
aaa
mov
aaa
or
add
mov
mov
and
sti
fisttpl
sbb
daa
mov
outsb
add
mov
cwtl
iret
fsubrs
sub
dec
ljmp
xor
pop
or
fsts
cmc
out
andl
mov
imulb
add
enter
mov
icebp
sbb
xor
push
xchg
fwait
or
ds
xchg
cltd
sbb
in
popf
bound
daa
dec
movl
mov
inc
add
icebp
pop
iret
xchg
imul
jge
cmp
mov
in
inc
pop
cmp
outsl
mov
add
add
xor
lret
pop
testl
cmp
popa
jle
mov
dec
sbb
movsl
push
push
jnp
add
inc
and
cmp
adc
mov
test
sub
inc
cli
mov
push
call
test
js
push
or
mov
lcall
out
loopne
jge
loop
xchg
mov
pop
aas
inc
pop
leave
clc
xchg
fisttpll
xchg
adc
jno
lret
fwait
jmp
sbb
ljmp
stc
arpl
jno
in
push
dec
push
and
mov
xor
xlat
mov
and
fnstenv
inc
push
xor
ficompl
cmp
outsb
loopne
cmc
push
mov
push
shlb
call
sbbl
xchg
pop
push
addl
cld
sahf
popa
ja
fs
das
outsb
push
xchg
and
push
add
test
lock
sbb
dec
scas
leave
ss
push
add
stc
mov
imul
outsl
leave
outsl
inc
inc
mov
stos
scas
int
stos
mov
pop
in
sub
pop
insb
and
xchg
pop
push
in
int3
mov
or
xchg
add
cmp
mov
xlat
scas
jge
mov
xor
fisubl
mov
jl
sub
add
in
mov
fisttpl
jle
xchg
sbb
int3
shll
cmc
xor
add
addr16
imul
pushf
push
ss
sub
jl
cmp
nop
ljmp
sub
scas
jp
ja
test
js
shl
pop
ss
dec
mov
push
inc
dec
push
xchg
outsl
ret
or
mov
ret
addb
roll
mov
ljmp
xchg
dec
xor
cmpsl
shl
ret
xor
xchg
sbb
filds
dec
orl
stc
insl
xor
jo
jb
cltd
cmp
pause
jmp
orb
dec
out
lock
inc
inc
cmp
stc
cmpsb
icebp
mov
pop
cli
out
jbe
cwtl
in
and
imul
mov
or
cmpsb
daa
sti
out
scas
je
xchg
nop
dec
popa
add
pop
xlat
add
pop
cmp
xor
sbb
ja
test
jp
pusha
pop
iret
add
mov
dec
rorl
or
or
mov
andl
add
jne
cmpxchg
imul
addr16
mov
in
call
nop
in
js
jbe
mov
test
scas
mov
mov
inc
mov
test
shrl
jl
es
ja
jmp
push
stc
popa
stc
ja
lds
data16
mov
in
and
jge
sub
add
mov
rcl
les
cmp
xchg
add
xor
dec
add
popa
in
ret
cmp
xchg
ret
adc
shlb
mov
in
inc
sub
inc
adcb
pop
and
sbb
sbb
mov
inc
xorl
stos
inc
and
arpl
lods
lock
or
in
fidivrs
mov
mov
sbb
pop
pusha
or
in
xchg
aas
das
arpl
mov
or
cs
fstpl
into
cmpsb
mov
jmp
add
loopne
hlt
loopne
repz
mov
inc
cmp
cltd
scas
jmp
jecxz
mov
jge
adc
call
mov
rorl
stos
mov
jmp
insl
lods
int
in
cwtl
dec
fisttpl
push
addr16
cmp
dec
dec
push
mov
mov
int3
jl
clc
sub
in
cs
xor
jecxz
dec
cmpsl
dec
dec
in
les
out
fcmovnbe
into
push
pop
sbb
pop
jns
in
xlat
jle
push
notb
adc
adc
mov
or
in
enter
xchg
repnz
mov
sbb
cmp
dec
dec
inc
mov
or
mov
das
push
xchg
jmp
add
pop
shrb
push
dec
jmp
std
nop
push
loopne
inc
and
ja
aad
insb
scas
cwtl
out
sbb
test
fdivrl
jnp
mov
inc
push
ret
shll
sbb
mov
adc
jns
push
jno
loope
movsb
test
pop
pop
lock
daa
adc
bound
rolb
sbb
seto
mov
decb
ja
pusha
xchg
pop
dec
pushf
sbb
stos
fwait
mov
adc
push
and
xor
push
jbe
nop
mov
icebp
cmpsb
inc
adc
push
pop
pop
xlat
xor
out
popf
xor
mov
sub
int3
cmp
pusha
lock
fcomps
xchg
pop
arpl
and
jl
sbb
insb
subb
stos
rcrl
data16
cltd
outsl
xchg
jg
inc
lock
popa
xchg
sbb
iret
lock
addl
fisubrl
rorw
stos
adc
rclb
jecxz
xor
mov
into
add
in
loope
fidivrs
mov
adc
pop
jl
or
std
mov
mov
mov
test
adc
add
scas
cmp
xchg
jb
mov
leave
nop
pop
xchg
test
cmp
or
fdiv
lcall
popa
push
cmpsb
push
push
pop
lret
inc
mov
in
push
xor
movsl
push
sbb
mov
fs
xor
sbb
add
stos
xchg
dec
mov
push
cld
fwait
mov
jne
dec
add
jno
sbb
push
xor
jnp
imul
divb
mov
jp
xor
loopne
shlb
dec
mov
sarl
sarl
out
enter
xchg
jb
fiaddl
mov
addr16
out
lret
cs
sub
cmpsb
xor
pop
cmp
iret
test
aad
xlat
jns
mov
and
pushf
cli
dec
rcrl
mov
xchg
and
popa
div
xchg
xor
or
mov
mov
sti
sub
and
adc
inc
dec
jns
in
dec
mov
cli
daa
pushf
push
pop
or
ret
pop
pop
aad
data16
push
cmpsb
test
fwait
scas
out
inc
in
jno
or
and
dec
jg
ret
loope
cmp
aas
xorl
test
fcoml
jns
int
or
dec
daa
mov
call
clc
sbb
out
lods
pop
adc
mov
clc
aaa
stos
sbb
add
sbb
es
movsb
xchg
jo
xchg
cwtl
add
bound
mov
sbb
sbb
mov
popa
cwtl
and
bound
sbb
iret
cmc
inc
pusha
ficoml
data16
fisubl
mov
inc
cmp
dec
push
or
in
dec
mov
loopne
fistpll
inc
sbb
push
push
dec
pop
ret
fwait
or
jle
adc
repnz
loop
sub
scas
inc
jnp
mov
shl
je
jmp
fcoms
pop
in
clc
pop
adc
xchg
lods
cs
shl
jg
push
loop
shll
ds
call
pop
cmpsl
mov
ret
repz
mov
out
jl
xor
repz
dec
in
scas
inc
aas
add
cmpsb
pushf
ljmp
cmc
xor
fs
insb
pop
mov
je
or
rolb
add
dec
imul
fwait
arpl
arpl
push
imul
repz
mov
or
sub
lods
js
movb
lods
cmp
cld
les
pop
or
push
push
clc
cmp
int
cmpsl
aaa
jl
push
mov
daa
jbe
cmc
mov
or
imul
ficoml
mov
lods
pusha
dec
cmpsb
push
mov
cmp
sub
aam
and
rcr
dec
jmp
stos
nop
adc
dec
cmpsl
out
inc
cwtl
push
dec
lret
mov
outsb
idiv
and
pop
out
jns
movsl
inc
mov
sbb
jge
nop
mov
fs
sub
pop
sbb
pop
fstpl
lea
mov
mov
mov
mov
pop
popa
cmp
in
inc
fistl
test
sahf
int
fldt
cmp
out
iret
cmp
push
aas
fistps
jne
sub
jmp
lahf
push
insb
test
shrb
data16
add
pusha
lods
cmp
or
cmp
jb
pop
or
ss
addl
jg
shufps
cmpsl
shll
xor
cmp
mov
loopne
enter
mov
fsubrp
inc
and
cmpsb
jno
lret
xorb
sbb
imul
xchg
xchg
fdivs
mov
ja
inc
ret
out
xor
mov
jmp
mov
push
jp
pop
jp
incl
pusha
sbb
xchg
xor
ljmp
add
rorb
pop
rorb
clc
in
push
sub
add
dec
xor
push
repz
adc
ret
fnop
push
xor
repz
inc
mov
aaa
push
cmp
fadds
xchg
pop
popa
fstl
imul
fs
xchg
or
pop
ds
cmpsl
pusha
daa
sbb
cltd
or
sub
loop
loopne
aam
sbb
or
insl
or
aam
cwtl
shl
ss
xchg
fisubs
fadd
push
inc
xchg
movsl
mov
inc
int
cmp
or
pop
push
inc
ret
pushf
push
lahf
inc
roll
test
jo
into
movsl
lea
sub
fbstp
cmp
movsl
inc
jge
adc
push
les
sbb
pop
mov
test
cltd
cmpsl
enter
div
or
std
fldl
popa
orl
and
cmp
push
adcb
lret
sub
mul
xchg
insl
movsb
sbb
sub
mov
pop
mov
jae
ds
inc
test
and
xchg
dec
add
int3
xchg
sbb
in
pop
or
pop
lret
mov
jne
adc
xchg
mov
cwtl
inc
jle
imul
lods
or
bound
into
je
js
inc
sbb
sbb
outsl
jbe
in
or
or
addr16
inc
fiadds
and
cmpb
or
cmp
pop
bound
push
icebp
data16
mov
sub
imul
sub
adc
mov
and
xchg
test
cli
jb
push
movsl
mov
aad
rorb
lods
or
push
aas
das
add
fwait
inc
lock
cmp
ss
cwtl
lret
mov
mov
pop
adc
inc
adcb
add
jo
fisubrl
cmp
xchg
repnz
out
add
notl
nop
push
lret
pop
adcb
xchg
mov
fmul
pusha
shl
arpl
inc
and
loopne
jg
xor
rol
cmpsl
inc
mov
add
ds
fmuls
fucomi
push
pop
sbb
mov
fnsave
mov
fidivrs
clc
stc
ja
push
imul
xchg
fidivrs
mov
mov
in
jmp
jo
pop
les
dec
scas
sub
inc
add
mov
fcompl
adc
ja
mov
mov
adc
add
in
mov
nop
int3
push
push
cmpsl
imul
rorl
xor
fsubs
cmp
mov
or
and
repz
ffreep
pop
loop
call
mov
mov
fdivr
or
xor
and
pop
imul
scas
push
in
or
loopne
pushf
pop
ds
ficoms
adc
sbb
ss
xor
nop
das
enter
loope
mov
or
popf
loope
imul
data16
scas
mov
or
jns
test
fwait
jge
sbbl
vmovntpd
pop
xchg
jecxz
sbb
jo
or
test
icebp
inc
fbld
adc
out
jb
adc
cmpsb
and
dec
jae
jle
mov
and
xor
inc
cmp
dec
fsubs
xchg
popf
lock
pop
out
and
outsb
pop
mov
cli
lret
push
adc
mov
sub
enter
pushf
ud2
hlt
push
lock
push
js
fsub
cs
and
jbe
jge
and
and
aam
jo
xor
lock
clc
in
pop
lahf
das
and
pop
mov
js
cmp
sub
dec
xchg
jl
aad
popa
pop
push
divl
or
push
pandn
outsl
int3
ds
lods
adc
mov
xchg
or
fmull
jecxz
jbe
push
test
sub
xor
shlb
cmpsb
or
leave
fdivs
jo
mov
xor
aad
into
cmp
cmp
add
mov
and
pop
or
out
mov
std
bound
into
pop
ret
gs
push
scas
aad
icebp
addr16
cs
xchg
add
push
andl
outsb
push
scas
cmp
adc
jmp
jno
push
adc
js
xchg
andb
xchg
xchg
lods
cwtl
out
sbb
push
xor
mov
pop
outsl
dec
aad
cmp
shl
inc
cmp
jae
ja
push
loope
jbe
xchg
dec
adc
shr
jnp
pop
pop
addb
mov
push
leave
cwtl
bound
cltd
jnp
ficoml
xchg
mov
mov
xchg
mov
fsubs
adc
push
mov
aad
ret
lahf
sahf
into
mov
xchg
sub
clc
xchg
les
cmp
enter
fidivs
cwtl
xorb
mov
sbb
rcrb
dec
dec
and
push
add
pop
dec
repnz
das
dec
jecxz
jmp
in
jmp
je
lods
test
mov
jge
mov
loop
fiadds
insl
add
out
sub
fnstcw
in
sub
lret
mov
aaa
subb
pop
xor
outsl
mov
jmp
imul
jmp
sub
in
mov
xor
xchg
out
loopne
add
mov
lea
pop
jns
add
rorb
jns
sub
subl
mov
adc
and
dec
cmp
fsts
xchg
test
cmp
aam
push
daa
pop
adc
pop
sbb
mov
nop
xlat
sbb
lods
adc
and
push
dec
lret
pop
test
iret
rcll
and
and
icebp
add
xchg
inc
dec
into
sbb
sub
lahf
loope
xor
loopne
addr16
loope
sub
fs
mov
das
sub
aas
cmp
cwtl
sub
cmpsb
mov
push
fwait
push
popa
push
cmp
mov
adc
push
shr
cltd
xchg
iret
sbb
inc
cmpsb
jo
test
repnz
add
mov
cli
jle
daa
mov
incl
jge
pop
test
dec
push
mov
jp
dec
pusha
pop
jno
jne
incb
lds
push
jg
out
lret
jae
xor
stc
lret
cltd
or
cmpsb
loope
cmpl
or
cmp
sbb
shr
in
imul
cmp
jmp
fcmovnb
test
aam
mov
push
mov
inc
cltd
fistpll
sbb
push
daa
lods
adcb
mov
inc
mov
movsb
fdivr
stos
or
cmp
in
add
or
sti
outsl
xor
dec
inc
rcll
inc
inc
shlb
cmc
stos
xchg
push
inc
jp
shlb
scas
pop
sbb
fcoms
add
cmp
repz
shrl
mov
cli
lretw
xor
loopne
xor
dec
or
inc
sbb
cmp
stos
test
scas
jmp
lcall
outsl
mov
xchg
enter
dec
push
es
xchg
xchg
jno
add
imul
inc
jmp
std
je
push
mov
loopne
dec
xlat
xchg
and
inc
xchg
or
jecxz
push
lods
in
mov
xlat
daa
dec
add
arpl
xor
or
mov
jae
data16
test
push
fimuls
lock
in
je
mov
ss
out
mov
cld
mov
inc
dec
jnp
mov
ficomps
add
xor
jmp
sub
mov
jb
adc
sbb
cli
gs
adc
and
mov
xchg
cmpsl
ss
lock
jge
aaa
mov
dec
sbb
add
nop
enter
cmp
xchg
adc
outsl
out
adc
jl
mov
stos
std
fs
testb
pop
inc
jnp
and
push
xor
test
insb
add
jl
cmpsb
sub
cmpsb
or
sub
movsb
mov
adc
cld
cltd
aaa
ret
or
mov
mov
sbb
test
jecxz
ret
dec
insl
loop
cmpl
insl
cli
leave
xor
jae
dec
sahf
rorb
jo
push
icebp
pop
lods
or
hlt
adc
cld
mov
push
scas
sub
stc
push
cmp
mov
inc
inc
insb
mov
out
xchg
and
shll
pop
sar
push
stc
lods
mov
aaa
push
mov
and
push
jne
test
cmp
and
insb
enter
xchg
xor
int3
mov
dec
mov
nop
popa
sahf
jnp
xchg
adc
mov
scas
jae
and
das
cmpsl
pop
sbb
sub
or
xchg
ja
adc
sbb
imul
movsb
lcall
adc
shrl
jne
arpl
xchg
mov
stos
pop
cmp
mov
jbe
mov
movsl
or
loopne
xor
mov
lret
mov
out
std
aad
jae
dec
inc
stc
cmp
hlt
jns
mov
sahf
adc
xchg
mov
movsl
in
mov
dec
aad
stos
and
push
mov
inc
jo
add
out
jbe
into
jo
and
fcomp
mov
lret
fsubl
pop
cmp
imul
push
mov
push
or
lret
test
bound
xor
jnp
mov
into
stos
cld
pushf
sub
movsb
stos
out
scas
push
div
cmp
addr16
mov
mov
xchg
push
stos
push
das
adc
and
in
out
xchg
add
and
xchg
fdivl
cwtl
addr16
bound
loope
popa
sub
testb
in
pushf
sub
push
bound
lret
xor
push
mov
push
push
xor
xor
xor
insb
insb
aam
pop
cmc
pusha
lret
mov
mov
jmp
popa
scas
mov
dec
shll
add
sbb
or
insb
xor
push
mov
jno
and
mov
and
ret
insb
lock
xor
lods
dec
cmp
pusha
push
inc
lock
xchg
movsl
out
pop
sbb
mov
cmp
mov
jno
jbe
pop
jbe
sub
out
aas
loopne
add
pop
xlat
jp
push
xor
jp
push
js
hlt
test
lcall
cmpsb
pop
scas
mov
inc
mov
adc
jnp
inc
cmp
sahf
aam
xchg
jp
out
out
into
adc
out
pslld
int3
lret
sub
xchg
xor
test
mov
and
xchg
sti
mov
cmp
and
int
and
lock
jg
lea
idivb
addr16
push
pop
mov
inc
popf
sbb
cwtl
dec
inc
jecxz
mov
push
dec
pop
push
arpl
mull
lods
mov
test
out
inc
out
add
mov
pusha
xor
dec
jo
jmp
into
and
imul
xchg
sbb
mov
outsl
test
in
out
int3
fisubl
sbb
mov
loopne
mov
lea
jb
push
sbbl
inc
mov
in
adc
pushf
mov
xchg
push
in
cmp
mov
cmpsb
inc
mov
add
cltd
push
sub
lcall
imulb
shll
or
add
mov
adc
in
stc
jnp
data16
inc
add
fsubr
jmp
lret
leave
jl
cmpsb
fisttpll
jbe
shrb
inc
mov
cltd
and
push
shl
popf
jp
adc
fdivrl
jno
jb
or
mov
gs
cmpsl
jae
popf
jno
int3
dec
xor
mov
pop
shll
adc
in
xor
add
adc
cli
stos
test
cmp
ss
icebp
jle
sub
into
inc
and
adc
lods
mov
add
stc
nop
rcrb
loop
in
cmp
add
mov
out
ret
sbb
mov
loope
in
push
mov
jle
add
arpl
cmp
push
sbb
sub
cmpb
mov
xor
test
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
and
rcrb
bound
push
or
pop
and
lahf
cmp
sub
enter
testl
mov
fwait
and
mov
mov
inc
xchg
adc
adc
cli
faddp
mov
repz
popl
rorl
mov
and
sub
aaa
push
push
mov
scas
mov
mov
xchg
sbb
call
into
bound
stc
lods
add
notb
ret
jns
mov
xlat
lods
insl
xor
pop
imul
lods
vmptrld
insb
sub
test
sbb
or
mov
pop
rclb
cmp
inc
push
jbe
loop
jmp
sbb
orb
add
mov
orb
insw
or
push
rcr
inc
dec
insl
or
fdivrl
dec
xor
sub
cs
lods
cwtl
fnstenv
jmp
sbb
insb
je
sbb
sbb
push
mov
loopne
sbb
adc
push
daa
xchg
enter
pop
insl
mov
pop
and
and
push
xor
decb
ret
pop
loop
jg,pn
shlb
cmpsl
jge
jnp
adc
fcmove
mov
fnsave
jns
pusha
jmp
mov
popa
out
fisttpl
sbb
insl
mov
jmp
mov
arpl
gs
fcoml
in
dec
mov
daa
mov
pop
nop
sbb
cmp
dec
push
repnz
imul
push
mov
dec
cmp
insl
out
inc
jp
dec
imul
out
push
pushf
lret
add
jg
inc
mov
bound
cmp
sub
cwtl
in
push
in
in
and
jecxz
imul
push
dec
jp
fists
dec
jge
aad
fistpll
dec
inc
adc
or
repz
jbe
lods
lock
loope
mov
je
adc
mov
mov
xchg
jo
and
stos
sub
jnp
mov
inc
push
scas
xchg
scas
notl
aas
test
sub
orl
arpl
sbb
testl
sub
adc
mov
scas
popa
loop
ljmp
pop
outsb
stc
push
cmp
jmp
sbb
sahf
mov
push
popf
lret
sub
leave
mov
mov
mov
or
out
push
mov
aad
subb
inc
sub
pop
inc
push
sub
cmc
fwait
add
nop
pushf
xor
push
sub
orl
xor
mov
xchg
inc
cmp
push
aaa
sbb
xor
leave
movsb
popa
lods
add
sbb
mov
addb
aaa
lret
jg
pop
lcall
mov
repnz
sahf
add
push
lods
push
jl
fldenv
push
stos
jmp
mov
push
inc
lods
xchg
aas
push
xchg
jmp
mov
fcoml
lcall
pop
mov
data16
andb
inc
pop
insb
ficomps
ljmp
or
in
shlb
decb
push
rcrl
mov
push
adc
jno
loop
xlat
xchg
fdivrs
mov
cmp
xlat
fiadds
repz
stos
out
shrl
movsb
arpl
movsb
xchg
adc
adc
pushf
jns
test
rol
gs
std
das
and
mov
ret
inc
sub
sub
inc
test
fucomip
mov
and
ljmp
inc
adc
mov
push
sbb
push
ja
fnstcw
mov
cld
addr16
jo
pop
scas
cmovne
or
pop
push
iret
js
cmp
mov
or
push
and
das
or
cmp
push
lock
je
shr
flds
xor
outsb
test
inc
lea
mov
imull
fiadds
pop
mov
push
arpl
lods
mov
push
xchg
pop
xlat
dec
or
and
pusha
sahf
xor
fmulp
xor
jo
jl
and
fstpl
mov
inc
mov
rorl
in
adc
mov
sbb
rolb
or
pop
fwait
test
sub
adc
addr16
das
mov
loop
hlt
pop
jmp
push
jae
add
mov
sbb
push
or
sub
mov
dec
cltd
and
cmp
movsl
jns
mov
lock
xchg
lret
xor
adc
in
jb
hlt
popa
sub
cmp
jnp
adc
mov
jmp
mov
mov
icebp
inc
scas
mov
nop
cs
out
mov
cmp
sbb
aam
cmp
cli
mov
adc
lods
jp
push
iret
mov
lret
push
mov
cmp
dec
jmp
enter
pop
push
das
mov
jns
adc
xor
insl
out
je
fxch
popa
decb
imull
insl
test
scas
fiadds
je
loop
pop
js
xchg
jns
lods
data16
shll
xchg
ljmp
inc
pushl
sbb
call
pop
mov
mov
jno
push
inc
add
cmp
jmp
push
mov
js
arpl
jae
mov
repnz
mov
call
xchg
or
out
hlt
dec
adc
xchg
sub
add
adc
xchg
loope
int3
out
fs
stos
push
mov
stc
outsb
lcall
fs
or
shll
add
xorl
cld
xchg
mov
ds
loope
andl
insb
xchg
aas
pop
mov
push
xchg
add
aas
or
mov
int3
cmc
mov
push
fwait
aam
xor
xor
mov
mov
pop
ret
lods
jbe
popa
jo
sbb
xor
out
lahf
in
mov
cmc
les
add
cwtl
xor
lods
in
xor
xchg
mov
stc
sub
xchg
jns
add
sbb
jp
xor
inc
mov
push
stos
stos
mov
inc
data16
mov
test
adcl
jno
cmp
dec
lea
sub
adc
lret
pop
aaa
pop
inc
enter
jecxz
pop
icebp
mov
push
out
xchg
push
imul
xchg
ljmp
push
mov
add
adc
add
pop
push
idiv
stos
mov
fisubl
pop
testl
cld
in
pop
push
dec
sbb
pop
cmp
sbb
repz
add
sti
testl
jmpw
test
imul
jbe
inc
pop
xchg
xchg
cli
aam
mov
subl
pop
jns
push
push
adc
hlt
xor
testb
mov
or
stos
xchg
xorb
sub
or
stc
mov
pusha
jl
mov
jbe
icebp
fwait
sahf
mov
and
sub
filds
push
nop
xor
leave
jmp
pop
dec
lahf
cld
sub
xor
adc
mov
cmp
sbb
pusha
cs
xchg
push
sbb
adcb
mov
and
mov
iret
mov
push
jno
divb
push
cmp
inc
jecxz
gs
inc
mov
inc
add
nop
cmpl
push
and
cmpsb
rorl
sbb
pop
or
icebp
out
pop
insb
cwtl
or
fnstenv
dec
cmp
pop
xchg
add
sbb
add
imul
pushf
fisubl
stos
mov
ret
stc
mov
js
mov
rcll
cwtl
mov
sub
ficoml
dec
out
sbb
push
nop
and
jmp
push
cmp
or
inc
cmc
pop
or
adc
push
pop
clc
xor
int
loopne
movb
pushf
jnp
bound
xchg
add
leave
in
sbb
cmp
jle
xor
arpl
mov
sbb
int
loopne
movsl
mov
sbb
hlt
xor
mov
xlat
out
sbb
mov
ret
xor
rorl
jb
call
push
push
cmp
mov
rcrb
or
shl
add
aas
adc
aas
popf
mov
pop
mov
push
inc
es
in
push
or
add
xor
jge
mov
data16
aaa
faddl
pop
fwait
cmp
push
pop
shr
cmc
out
popa
adc
sub
xor
enter
mov
enter
jae
lret
dec
add
insb
iret
sbb
call
or
clc
clc
xlat
imul
pusha
aas
dec
xor
in
fisubl
or
pop
push
ficomps
pop
and
lea
je
in
mov
sbb
cmc
or
xchg
pop
fdivs
es
mov
add
out
jg,pn
clc
repnz
lds
fildl
enter
cmp
fstpl
cmpsl
addr16
push
pop
int
push
lock
loopne
imul
jbe
in
in
int3
adc
stos
add
iret
int3
pushf
jp
lahf
or
mov
and
ret
ljmp
sub
push
mov
lahf
jl
data16
pushf
ja
xchg
dec
cmp
cmpsl
stc
or
jns
fistps
jns
xchg
jno
sub
pop
mov
push
notl
jno
add
mov
jae
stos
testl
add
incb
mov
ss
jo
iret
mov
sahf
sub
xor
les
jnp
popf
insb
cmp
pop
stos
bound
pop
and
out
repnz
sbb
inc
ret
push
sti
add
rorl
sbb
punpckhdq
jo
stc
adc
movsl
sub
pusha
pop
pusha
add
cmp
jnp
mov
add
scas
rcrb
xchg
movsb
and
cs
sti
mov
push
inc
xlat
pop
cmp
clc
cs
fwait
test
imulb
out
sbb
lret
mov
mov
lahf
mov
mov
clc
sbb
lret
and
inc
xchg
rcll
or
ss
jbe
sbb
out
add
std
mov
ja
pop
inc
inc
imul
lcall
test
jne
cmp
xor
add
mov
inc
in
out
cs
sub
mov
mov
rolb
cmpsl
push
mov
and
cwtl
mov
clc
xchg
add
dec
sahf
popa
cwtl
sub
add
inc
cwtl
mov
push
adc
mov
loopne
jecxz
fsubrl
scas
stos
add
xchg
add
stos
mov
cmpl
jg
pushf
or
xchg
mov
nop
imul
sub
cmp
out
adc
mov
xchg
push
test
adc
subb
push
aam
sub
adc
jb
cmpsl
lcall
arpl
adc
mov
cmpsb
pop
adc
lods
inc
cmp
hlt
flds
jnp
imul
test
out
mov
mov
mov
jecxz
add
push
ret
stos
pop
pop
pop
push
pop
mov
add
mov
cld
fldl
clc
aas
jge
scas
popa
jmp
test
addb
aas
and
mov
jne
push
sar
lret
dec
mov
mov
sub
mov
inc
mov
sbb
aaa
sub
or
push
mov
push
ljmp
lock
inc
mov
scas
ss
loop
sbb
fsubp
xorb
pop
daa
shll
icebp
icebp
push
xlat
inc
sahf
adc
xorl
mov
dec
inc
fisttpll
jbe
fnstsw
lods
mov
mov
push
mov
sub
pop
xorl
outsb
dec
inc
outsb
jl
push
dec
pop
clc
movsl
dec
loop
repnz
std
mov
and
sbb
mov
sub
xchg
pop
mov
stos
mov
pop
pop
icebp
add
xor
aam
fs
xor
mov
push
inc
xchg
nop
push
inc
enter
fistl
and
mov
jmp
mov
push
add
dec
rorl
aam
pop
dec
push
mov
cwtl
adc
jmp
xchg
adc
stos
adc
mov
adc
pop
push
sub
insb
fildll
pop
scas
loopne
nop
cmp
push
mov
pop
push
scas
pusha
lods
dec
rclb
inc
adc
cld
sti
popa
or
jp
lret
sub
xlat
sub
mov
cld
mov
mov
sub
xor
xchg
adc
gs
adc
mov
pop
mov
or
sti
fwait
lahf
pop
sub
push
pop
mov
out
mov
js
shlb
mov
insl
push
xchg
mov
xchg
sbb
pop
add
xor
sub
adc
inc
mov
mov
mov
inc
insb
pop
loope
enter
in
popl
or
shll
xor
adc
xlat
adc
cwtl
popa
mov
popa
in
leave
icebp
add
popf
add
out
shl
jmp
cmp
dec
fsub
mov
daa
fisubs
pop
lcall
add
outsb
xor
imul
mov
sbbl
aam
push
rcrl
in
pop
mov
int
and
mov
jp
out
pop
fdivrs
jle
imul
ja
enter
nop
hlt
dec
mov
dec
inc
pop
ja
mov
push
mov
pop
adc
inc
jecxz
in
gs
mov
stos
mov
lock
inc
gs
xlat
jecxz
test
xchg
testl
pop
rorb
jecxz
cmp
mov
adc
sub
mov
repnz
add
outsl
xchg
pop
repz
and
lea
fildl
push
leave
fiadds
sti
jp
sahf
insl
inc
xchg
xchg
mov
sbb
imul
stc
test
arpl
sub
shl
outsl
pop
das
add
sti
in
repnz
or
test
outsb
flds
and
ljmp
mov
add
es
jne
lahf
pop
cmp
dec
jmpw
inc
pop
jb
cmp
lcall
push
mov
sbb
xchg
rorb
jp
es
fstps
push
fiadds
inc
jp
pop
orl
inc
jne
and
adc
jne
insb
std
jbe
adcl
shrd
mov
xchg
sbbb
lahf
stc
rolb
sti
bound
divl
dec
cmp
mov
xor
xchg
mov
push
sub
xor
fstps
adc
cmp
dec
push
pop
jle
fdivl
push
pop
fmull
aam
enter
aas
dec
inc
mov
sub
fcomps
cmp
jp
jl
test
push
repnz
faddl
cld
idivb
cwtl
repnz
xor
mul
lahf
xor
pop
js
cmc
mov
mov
stc
xlat
sub
xor
lret
mov
xchg
and
xchg
mov
js
mov
das
ja
cmp
mov
popf
add
out
daa
add
add
bound
push
cltd
and
sbb
cmpsl
rolb
pop
test
jnp
add
and
push
pop
or
xchg
clc
das
leave
dec
ljmp
pop
popa
lds
test
nop
in
adc
repz
mov
jl
mov
or
and
mov
push
bound
mov
sbb
inc
repz
sbb
mov
loop
lods
fstpt
ret
mov
add
mov
xor
stos
xor
cld
stos
repnz
mov
sub
xor
xchg
les
adc
ds
jns
sarb
insl
insl
sar
and
push
push
in
inc
push
fsubp
sahf
and
jge
dec
decb
cwtl
jne
loop
mov
leave
mov
mov
jns
xor
push
sti
add
fwait
push
sarb
add
popf
rclb
lods
and
push
fwait
cmp
jg
and
jp
nop
scas
pop
aad
cmpsb
push
jo
push
jp
pop
xor
pop
mov
test
mov
out
popa
dec
xchg
push
jae
mov
xor
out
lahf
loopne
cmp
pop
jo
imul
sbb
das
jne
sub
orl
or
xchg
decl
mov
push
mov
add
outsl
inc
cmpsl
pop
xchg
andl
cmp
rcr
and
adc
xchg
jno
sahf
stos
push
xchg
mov
rorl
dec
jnp
ror
push
push
push
mov
xchg
imul
push
shl
inc
add
sbb
js
or
dec
repz
je
mov
fsubr
cmp
cli
pop
cwtl
dec
inc
idivb
mov
lcall
stc
push
pop
xchg
xchg
pop
outsb
add
test
inc
xor
ja
pushf
lods
push
lock
dec
sbb
mov
mov
frstor
out
sub
adc
sub
or
push
lds
popa
mov
lret
inc
ret
adc
loope
rcll
iret
adc
xchg
pop
leave
leave
mov
daa
out
pushf
popa
adc
fildll
mov
push
dec
inc
pop
jno
cmp
ret
mov
in
add
outsl
js
cld
cmp
mov
add
cmc
aas
add
ja
cmpsl
pop
sub
mov
andl
pop
orl
aas
pop
xlat
and
outsb
cmpsb
call
pop
dec
and
sbb
arpl
xor
pop
cli
dec
imul
testb
adc
lcall
and
push
je
loope
mov
cs
mov
out
push
fsubs
pop
dec
cs
adc
out
test
lcall
shrb
mov
mov
dec
push
cmp
rclb
leave
push
and
push
icebp
outsl
dec
lret
lock
jmp
mov
in
mov
addl
cmp
push
mov
xchg
ss
push
jmp
in
lds
mov
aaa
push
orb
rolb
sbb
ss
iret
fdivs
dec
out
fidivrs
sub
xchg
mov
add
adc
mov
int
je
xor
fnsave
cmp
cwtl
or
inc
mov
xchg
cmp
pop
popf
fisubrl
fidivrl
aam
fimull
in
sbb
sub
pop
dec
pop
shll
andl
jle
jmp
mov
cltd
in
add
xor
pop
cwtl
int
rcl
popf
cmp
insb
hlt
in
mov
mov
popa
jae
sbb
cld
das
mov
mov
cltd
pop
fld
repnz
or
mov
add
hlt
jl
dec
arpl
movsl
out
cmp
mov
in
sbb
je
out
mov
cmp
jbe
sbb
inc
negl
xchg
or
cmp
or
push
mov
cmp
pushf
stos
xchg
inc
xor
outsb
push
shlb
mov
xchg
sbb
and
fbld
pop
jbe
popf
sbb
jnp
dec
lods
and
jno
jb
scas
fstpl
bound
imul
out
jp
inc
add
ja
daa
fsts
add
inc
cmp
inc
mov
pop
mov
sti
xor
add
ss
aad
dec
rcll
loope
fnstenv
std
testb
xchg
mov
popa
imul
aad
in
cmpl
xor
push
or
shll
pusha
cmp
cmpsl
pop
test
xor
repz
int
imul
xor
push
pop
add
pop
loopne
pop
dec
mov
jns
pushf
lods
dec
cmp
mov
xchg
in
bound
xor
xlat
or
xor
mov
mov
into
lret
sbb
fimull
adc
arpl
mov
insl
adcl
push
fisttpl
in
jne
rol
add
scas
aaa
push
fwait
push
mov
mov
pop
out
adcl
or
mov
sarl
add
mov
inc
push
pop
test
inc
lahf
inc
mov
pop
fstl
js
stos
loopne
and
dec
mov
dec
inc
imul
dec
mov
fisubl
xchg
pop
movsl
sbbl
lret
js
mov
flds
xchg
mov
shll
add
jno
popf
cwtl
divl
adc
aad
pop
cld
pop
inc
mov
mov
faddp
ja
aaa
shrb
push
enter
clc
xchg
or
mov
push
push
mov
inc
stos
das
ss
cwtl
nop
inc
xlat
in
and
scas
push
lcall
mov
jno
jmp
arpl
mov
subl
jb
sbb
adc
mulb
adc
nop
lcall
nop
test
mov
stos
mov
int3
xchg
adc
cmp
xchg
pop
add
je
inc
and
ds
and
nop
out
pop
pop
push
xor
pop
pop
js
mov
adc
sub
out
jns
push
int
pop
aaa
in
bound
ret
negb
jge
insb
stos
nop
add
push
insb
mov
mov
fisttpl
addr16
les
movsb
jmp
mov
das
sub
lahf
cmp
lock
adc
add
adc
add
or
jno
mov
mov
jl
shll
gs
mov
cmovae
aaa
fdivrl
out
aad
push
out
inc
cmp
cli
cmp
jo
shrb
xchg
addr16
xor
xlat
mov
rol
cmpsb
aam
pushf
fbstp
gs
cmp
and
add
cmp
cmp
in
in
xchg
into
addb
or
decl
stos
add
push
sub
pop
dec
jns
mov
cmp
push
cmc
xor
sahf
lahf
or
jns
pop
loopne
cmp
push
cmpsb
jmp
outsl
ret
loopne
divb
shll
fincstp
mov
ret
xor
loopne
and
test
sbbl
mov
out
mov
lret
stos
imul
push
insl
sti
xorb
push
mov
std
push
rolb
cmovne
cld
push
xchg
xchg
mov
lods
or
mov
sahf
stc
add
jge
cmpsb
shrb
and
mov
xor
jmp
dec
nop
movsb
cmpsb
pop
lods
out
and
mov
adc
push
jge
mov
or
pushf
fbstp
inc
cltd
imul
xchg
mov
rorb
xor
xor
add
pop
loope
pushf
cmp
add
mov
inc
mov
mov
inc
movl
mov
xor
cld
in
sbb
xor
xchg
mov
cmp
lahf
cltd
loopne
and
cmp
xor
mov
ret
lret
out
jl
sbb
pop
mov
movsl
add
adc
push
aad
xor
cmp
dec
and
sbb
subl
push
pop
scas
xchg
fwait
int3
out
adc
and
mov
xchg
pop
or
std
and
xor
sub
add
call
adc
mov
mov
push
test
push
nop
outsb
outsb
out
mov
xchg
add
push
rep
sub
shrb
and
mov
roll
add
mov
lret
in
mov
loop
and
iret
jecxz
cmpsl
xchg
aam
in
mov
arpl
lcall
aam
arpl
or
and
or
sbb
scas
fsubrp
xor
dec
sbb
cmp
aas
aad
xor
ds
add
lret
xchg
sbb
fcoml
aad
sti
sub
and
or
mov
xor
cmp
jge
push
mov
push
xchg
sti
inc
mov
jne
stos
rorb
mov
fisttps
mov
push
inc
lret
xchg
jle
stos
jno
fwait
or
and
popa
ds
test
daa
inc
cmpsb
mov
push
and
test
cmpsl
and
jne
dec
mov
xchg
adc
mov
gs
lcall
nop
sahf
popa
xor
jae
sbb
mov
test
je
jo
fmulp
jb
and
dec
xchg
sbb
subb
push
daa
xchg
jge
pop
aad
push
jb
adc
adc
movsl
adc
adc
dec
mov
test
jmp
dec
je
pusha
jle
dec
push
std
mov
adc
xor
aam
push
lds
subb
mov
xor
push
sub
daa
rcrb
inc
or
adcl
and
in
sbb
in
add
int3
or
xchg
jmp
dec
jo
sbb
loope
fxch
lods
mov
mov
stos
repz
mov
test
scas
cmp
jbe
mov
arpl
sub
in
test
jle
fsubrs
pushw
push
adc
subl
ss
repnz
ficompl
mov
arpl
out
mov
sub
fwait
outsl
mov
add
loope
mov
movsl
jle
mov
push
and
push
push
adc
mov
jne
cmpsb
jp
nop
mov
aam
sbb
lret
sbb
movsb
test
leave
add
mov
push
in
gs
sub
sub
std
sub
sub
inc
notb
and
loop
pop
mov
add
mov
cwtl
sbb
xchg
mov
mov
dec
cmc
jae
imul
insl
and
mov
outsb
repz
out
pop
mov
dec
les
iret
je
scas
ljmp
and
dec
nop
pop
fs
push
repnz
xchg
add
and
data16
scas
pop
bound
repz
cmc
pop
loop
and
popf
stos
mov
jae
jg
aaa
push
adc
push
sub
fcoml
sub
imul
dec
shrl
out
insl
adc
jle
cmp
adc
cltd
add
push
mov
or
gs
test
pop
dec
lds
mov
testb
jmp
dec
das
mov
mov
or
add
adc
mov
roll
dec
mov
lods
cmc
or
jmp
adcl
push
cmp
pop
fidivrs
fnstsw
push
mov
loopne
cltd
nop
lcall
je
mov
xlat
mov
inc
popf
mov
rcrl
mov
mov
or
dec
xchg
imul
jecxz
and
les
push
rcll
xor
fnsave
repz
sub
dec
xor
call
insb
repnz
pop
mov
imul
adc
push
test
fwait
inc
imul
jp
mov
loope
dec
xchg
mov
arpl
and
pusha
push
push
lods
pushl
aam
push
mov
pop
and
push
sbb
fadd
xchg
ficoml
adc
mov
call
xorl
add
fwait
push
pop
jmp
and
dec
call
cwtl
add
cltd
loopne
movb
addr16
icebp
cltd
jae
cmp
and
je
ficomps
and
push
mov
jge
andb
std
and
sbb
pop
fisttps
sub
xor
pop
std
xchg
mov
xor
or
push
int3
popa
push
movsl
inc
sub
imul
test
cltd
fs
in
sti
dec
aaa
fwait
xchg
pop
inc
jnp
icebp
sub
cmp
xor
and
cmpsb
les
and
test
movsl
mov
iret
pop
mov
out
cmpsl
inc
sbb
sbb
shufps
decl
les
pusha
out
pop
mov
or
sarl
mov
mov
sub
inc
les
push
and
jno
mov
mov
cmp
pop
xchg
inc
sahf
imul
cmp
mov
jmp
fnsave
lahf
adc
dec
jge
pop
repz
pop
push
daa
or
outsl
pop
imul
push
fidivrl
xchg
mov
inc
mul
mov
lods
rclb
mov
rolb
cltd
outsl
sub
xor
jmp
sbb
sbb
push
movsb
sub
xchg
and
js
lahf
loope
movsl
pop
xchg
aad
dec
cmp
cmpb
inc
pop
fstpt
js
sub
mov
imul
inc
scas
inc
mov
dec
push
es
xchg
aad
jb
pusha
imul
mov
adc
enter
fdivs
je
and
dec
imul
mov
sahf
fwait
jecxz
dec
sbb
push
mov
sbb
xor
sub
sbb
lahf
xor
pop
sbb
xor
sbb
xor
sbb
aas
add
xchg
push
or
ficoml
into
adc
loopne
outsb
popf
inc
cmp
cmp
push
and
sbb
pop
jns
dec
and
jmp
andb
xchg
inc
push
shlb
shl
push
lds
mov
leave
mov
bound
scas
mov
fwait
push
and
inc
imul
sub
shr
push
adc
arpl
pushf
dec
mov
xchg
add
fmuls
leave
adc
sahf
add
cli
mov
insl
push
sub
out
xor
stos
mov
cld
sbb
add
push
ret
mov
adcb
dec
int3
int
call
mov
cmc
xchg
xchg
and
add
scas
or
xchg
mov
inc
mov
in
stos
test
shrl
pop
dec
test
sbb
adc
xchg
movsb
rcrl
fiadds
xchg
xor
cmp
xchg
aam
daa
push
inc
hlt
xor
inc
ficoml
cmpsb
mov
jl
jae
ja
and
adc
mov
sub
pop
pop
push
pop
jp
ret
movsb
out
sti
addr16
jne
ret
cli
or
fwait
aas
ficomps
cltd
das
dec
fwait
ret
and
dec
or
push
fs
loope
loop
jmp
pop
imul
sub
fidivrs
xor
aad
mov
je
xchg
add
lret
push
pop
mov
adc
cli
imulb
loopne
xor
xchg
push
lcall
sub
sahf
xchg
push
in
mov
sub
or
fcmovu
sahf
or
dec
and
in
daa
add
adc
cmp
xchg
push
icebp
jns
sbb
imul
in
test
sub
mov
jge
add
dec
pusha
add
insb
xorl
sbb
loopne
repz
jns
xlat
and
mov
fninit
inc
sub
xor
pushf
dec
add
mov
es
sahf
fnstsw
clc
notb
push
pop
push
add
js
fmulp
mov
testb
aam
stc
subl
in
ja
jo
jne
mov
push
pop
jo
xchg
mov
mov
popf
push
lret
test
dec
xchg
stos
dec
popa
xchg
inc
fwait
xor
sub
loop
adc
inc
xchg
adc
test
pop
jb
lret
insl
xchg
xlat
fwait
cwtl
jge
icebp
into
jmp
xlat
pop
test
repz
xor
stos
sbb
or
sbb
xor
or
addl
shrb
dec
pushf
pop
xchg
mov
dec
mov
clc
cmp
mov
sarb
fisubrl
push
mov
cltd
popa
and
orb
dec
push
lahf
fisttpl
or
or
js
cwtl
fs
shrb
add
test
cld
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
sbb
pop
popa
rcrb
jns
jbe
hlt
negb
lret
pop
ret
popf
sub
fidivl
sbbb
xchg
inc
test
les
cmc
xlat
ret
xor
je
jle
popa
icebp
inc
xchg
call
int
call
pop
popf
mov
push
adc
add
inc
pop
cmp
sbb
jo
pop
push
adc
push
jae
jne
faddl
mov
jmp
gs
adc
subb
sahf
adc
mov
lea
mov
jl
cmp
mov
pop
jns
xchg
daa
sbb
mov
rcrl
jle
and
and
loopne
xor
xor
and
sub
jo
daa
xchg
in
das
mov
mov
jb
sarl
int3
jae
pop
add
push
lods
pop
add
add
divb
in
test
push
in
in
adc
dec
pop
and
inc
mov
fstp
aaa
test
pop
inc
aam
xor
jnp
add
jl
inc
sbb
push
fmull
mov
and
inc
add
cmp
push
lahf
or
in
stc
div
aad
popa
cmp
addr16
push
std
sub
das
push
fsubrs
rolb
jmp
fildll
mov
jb
inc
sti
pop
fistpll
loop
hlt
mov
pop
sub
std
cmpsl
sbb
into
cmc
insl
outsb
dec
sbb
bound
pusha
test
repz
mov
std
subl
or
outsl
rclb
and
inc
cwtl
mov
dec
jae
and
inc
roll
inc
or
add
lcall
shll
mov
sahf
popa
sbb
subl
stos
and
sbb
adc
addr16
sub
adc
jnp
loop
imul
imul
test
jnp
daa
jo
push
aaa
jo
lcall
mov
sub
sub
xchg
loope
dec
sbb
loope
xchg
cmpsl
pop
out
mov
xor
int3
cmp
lea
roll
fnsave
or
mov
sbb
icebp
mov
pop
das
xchg
jecxz
rcr
push
mov
ficomps
enter
jge
mov
ljmp
aaa
sub
dec
inc
pop
mov
push
je
or
dec
enter
jle
pop
ss
cmpsl
stc
ss
sub
loopne
jmp
stos
jo
lds
orl
sti
fdivp
negl
lods
test
in
jle
leave
sub
mov
adc
lret
pushf
mov
mov
sti
aaa
mov
into
adcl
scas
mov
push
and
ds
xor
loopne
mov
sbb
pop
push
insb
mov
loopne
cmp
add
sub
adcb
leave
pusha
imul
notl
sbb
pop
jne,pt
jg
pop
mov
and
aaa
dec
aas
iret
test
sahf
mov
pop
jb
enter
adc
into
sub
dec
lods
xchg
xlat
jo
xchg
add
jb
scas
in
shlb
mov
jne
jns
add
test
xchg
adc
test
int
or
mov
lds
jecxz
mov
repnz
test
aaa
hlt
sarl
clc
sub
inc
lcall
mov
mov
inc
push
pop
jp
pushf
mov
cli
mulb
add
aad
je
adc
test
cmp
movsl
push
jecxz
es
pop
loopne
fisttpl
clc
push
loopne
and
jp
sahf
andb
mov
inc
mov
add
pop
xor
dec
add
fildll
add
cli
ss
dec
push
js
in
ret
cmpsl
lcall
pop
mov
mov
clc
cmp
mov
jae
call
xchg
jle
in
pop
jnp
add
cmp
aad
pop
inc
mov
xor
xchg
test
add
cmpsb
movsl
mov
fstpl
pushf
mov
lods
in
jl
imul
sbb
sti
popa
inc
aad
test
mov
test
fs
call
mov
xor
fs
in
insl
cmc
xor
or
mov
addr16
xchg
mov
pop
pop
das
mov
add
adc
sub
jo
mov
insl
mov
loop
pop
push
popa
stos
mov
and
jle
sysexit
add
out
cmp
movsb
xchg
jge
or
sbb
cmp
outsl
xlat
push
shll
dec
iret
or
or
lods
cmpsb
loope
sbb
lods
xor
sub
shll
push
adc
jno
repnz
stos
les
sahf
jne
push
mov
fldenv
rclb
lret
popa
std
jo
cwtl
pop
xor
lds
pop
stos
sbb
shr
jns
add
xchg
lret
sub
and
cmc
mov
jae
test
xor
mov
cmp
mov
fbstp
jns
cmp
jb
cltd
jnp
jbe
pusha
andl
jmp
subb
subl
fcomp
push
mov
mov
loope
cmp
sbb
mov
rorl
call
in
sarb
rclb
repz
xchg
push
stos
sub
cmc
mov
outsb
mulb
addl
xchg
imull
cmp
xchg
push
mov
inc
dec
dec
lcall
mov
sub
mov
push
cwtl
jecxz
fsts
dec
outsl
iret
xor
sbb
testl
adc
push
lcall
adc
add
dec
clc
mov
pop
shrb
rolb
or
rcll
and
je
xlat
roll
mov
sbb
mov
lret
and
mov
add
or
xorl
xchg
out
xchg
push
push
fisttpll
out
mov
cli
jno
rorl
dec
mov
stos
pushf
mov
jg
jne
lock
mov
or
xchg
pop
jp
push
arpl
lahf
movsl
jne
ret
xor
clc
sahf
sbb
scas
test
xchg
fisubrl
test
mov
and
imul
pusha
ja
xor
bound
mov
je
pop
mov
add
adc
stos
lods
lcall
arpl
insl
xchg
fdivrl
mov
insl
cmp
mov
outsb
xchg
idivl
jnp
jg
ja
jg
sbb
mov
sub
icebp
jle
or
pop
push
add
mov
stos
xchg
mov
mov
or
jmp
inc
rolb
cs
push
inc
mov
pop
rcrb
xchg
sub
add
mov
sbb
je
data16
jb
sarb
or
popf
dec
push
fcmovu
add
movsl
jl
pop
and
push
cmp
les
hlt
adc
cli
sub
in
in
cmc
icebp
mov
sbb
in
inc
cmp
mov
mov
mov
gs
sub
outsl
mov
mov
andb
xchg
jmp
ss
ret
dec
xor
cmp
orl
jbe
out
sub
adc
sbb
iret
out
scas
outsb
sub
and
add
mov
xor
cmpsb
pusha
dec
out
frstor
in
repnz
ja
cmp
shlb
push
repz
adc
push
shlb
xchg
sbb
xchg
xchg
mov
roll
push
push
lea
xchg
push
inc
lods
mov
fimuls
add
pop
iret
insb
inc
sbb
push
rorl
adc
aad
pusha
push
stos
mov
sti
xchg
xchg
xor
in
mov
jmp
lods
xchg
adc
xor
and
popf
cmp
xor
push
adc
ja
sbbb
fwait
je
pop
mov
or
xor
add
pop
inc
test
dec
sahf
mov
fsubrl
mov
cwtl
jnp
outsl
popa
les
jmp
ret
pop
jge
jne
test
sbb
jg
or
cmp
xchg
cmp
aam
xchg
rcr
iret
rcr
shl
sbb
jl
aas
or
aam
loop
aaa
mov
inc
jmp
xchg
repz
xor
sti
rclb
mov
jbe
xor
dec
sbb
js
shrb
push
jmp
daa
mov
lret
sbb
adc
pop
pop
mov
push
mov
dec
popa
add
pop
int
jl
xchg
mov
dec
aas
mov
adc
test
dec
fcompl
adc
fdivl
sbb
adc
push
lods
filds
outsl
test
xor
sbb
insb
mov
dec
adc
pop
push
push
push
cld
xor
dec
adc
les
aaa
mov
pop
stos
lret
in
adc
adc
stos
rcrb
add
lret
test
sub
std
push
loope
push
cmp
dec
push
rcl
jge
jno
outsl
push
aam
iret
pop
adc
mov
sahf
jns
jo
iret
xchg
fiaddl
fcmovu
inc
in
push
mov
dec
mov
adc
lahf
ret
test
mov
sub
pop
push
ljmp
lock
jl
push
cld
cli
fldenv
std
nop
inc
fadds
nop
add
fidivs
inc
fs
xchg
ror
lret
sahf
cmp
xchg
cmp
loopne
call
and
pop
aas
jnp
inc
cwtl
es
and
outsl
push
cli
lods
in
aaa
push
bound
pusha
rcll
nop
and
bound
les
into
adc
sbb
jmp
cli
mov
inc
push
fstl
cld
cli
popa
enter
inc
iret
cmp
cwtl
xor
jl
or
pushf
jge
fsubrs
dec
mov
pop
sbb
js
jmp
mov
clts
shlb
shrl
in
imul
mov
sbb
test
ret
fdivl
inc
sti
lret
ss
inc
or
test
mov
sti
inc
leave
push
or
addr16
push
enter
xor
cmp
push
pop
test
cmp
jae
imul
lods
adc
dec
mov
fcomps
sbb
movsl
ret
test
adc
or
sbb
outsl
stos
jnp
addb
icebp
inc
mov
add
pop
adc
out
pop
fsts
sti
mov
lret
mov
push
leave
or
inc
sbbl
xchg
pop
cltd
push
mov
xchg
aas
cwtl
scas
subl
pushf
addr16
incl
cmp
and
jl
mov
gs
xorl
xchg
orb
jns
xor
mov
push
xchg
jns
fs
sbb
scas
xchg
sub
add
or
add
cmp
push
dec
insl
cmp
popa
mov
stos
inc
addr16
mov
call
adc
push
or
sbb
dec
inc
or
in
add
popa
sbb
testb
add
fiadds
inc
scas
cld
sti
add
pop
movsb
cmp
push
fcomps
adc
inc
test
ljmp
sarl
shlb
or
hlt
adc
mov
sbb
inc
cltd
shl
stc
pop
mov
cmp
inc
repnz
in
js
out
incl
pusha
outsl
or
lcall
dec
xchg
xlat
xor
xchg
hlt
xchg
push
mov
mov
jno
inc
movsb
cwtl
fwait
mov
jo
sahf
pop
xchg
pop
dec
dec
push
jno
outsl
or
add
cmc
xchg
mov
shll
cli
xchg
sahf
pop
adc
jl
cli
push
mov
sbb
and
dec
leave
or
or
pop
addr16
outsb
scas
add
shll
dec
sbb
dec
lds
nop
pushf
rcrb
adc
add
loopne
subl
inc
and
loop
std
xor
mov
mov
out
and
cmp
mulb
aas
mov
mov
lods
adc
ja
dec
mov
test
adc
outsb
sarl
in
cmpsl
testl
aad
loop
andb
sbb
enter
mov
sub
adc
inc
repz
daa
loop
divb
push
inc
cmp
mov
mov
aaa
sarl
lcall
aad
imul
pop
ret
inc
in
mov
pop
push
nop
aad
and
ret
aam
ficoms
jp
insb
pop
or
fcompl
shrb
push
cmp
out
push
dec
pushf
cmp
in
cmpsb
push
ret
pop
cmp
and
add
imul
fists
add
jnp
movsb
rclb
mov
pop
cmp
mov
adc
neg
rcrb
aam
insl
add
cmp
sbb
adc
xor
dec
adc
mov
xor
jg
and
adc
xchg
loopne
icebp
rol
lcall
test
icebp
das
int3
adc
mov
adc
mov
scas
cmp
inc
add
lds
ds
lcall
jl
test
add
lcall
mov
sub
pop
sahf
stc
call
add
jge
pop
cmp
xchg
mov
es
xchg
cmc
outsl
ja
dec
repz
adcb
sbb
dec
pop
int3
sti
inc
sbb
xor
add
outsl
cltd
rclb
and
dec
fnstsw
pop
pop
cmp
mov
dec
loope
mov
fbld
dec
and
mov
movsb
xchg
test
push
testb
or
lea
adc
shr
or
out
std
jne
or
cmp
sub
out
mov
fists
pop
inc
pusha
mulb
sub
push
mov
bound
lods
call
mov
mov
fisttps
outsb
aas
mov
loope
popl
sub
movb
xor
mov
adc
sbb
fbstp
dec
push
aam
cmp
into
dec
ja
adc
pop
sub
icebp
cltd
shr
lods
mov
imul
xchg
mov
dec
xchg
aas
sbb
test
insl
sbb
mov
sub
aad
in
es
push
cmpsl
in
push
jg
cmp
inc
psrld
sti
cmp
hlt
and
loop,pt
mov
out
hlt
mov
jg
pop
ds
mov
push
rclb
xcrypt-ofb
cmpsl
push
xor
into
cld
sub
lcall
add
xor
mov
hlt
in
in
xor
mov
dec
push
or
push
xor
ret
icebp
lods
jae
ficoms
mov
and
in
mov
hlt
push
shl
xchg
and
dec
or
cmp
push
mov
mov
shrb
fcoml
out
mov
mov
push
mov
das
sbb
icebp
leave
and
push
outsb
mov
xchg
adc
icebp
clc
subl
outsl
or
int
fs
or
push
loop
adc
out
or
leave
and
flds
repz
rcrl
dec
pop
ror
adc
ds
mov
pop
shll
cmp
lods
addr16
enter
add
gs
push
add
andb
or
xchg
sub
lcall
scas
inc
inc
aam
in
dec
jecxz
icebp
cmp
push
lcall
lret
call
jno
and
and
mov
push
cmp
cld
divb
out
ss
jno
stos
stos
xchg
xchg
xlat
imul
int
adc
cmp
mov
lcall
aad
js
scas
mov
adc
jg
pop
inc
inc
cmc
fmuls
pusha
nop
call
mov
push
dec
js
xchg
addr16
adc
lret
pushf
dec
in
hlt
aam
xchg
push
std
push
inc
cltd
fists
push
mov
rol
and
add
test
sub
xchg
popf
jno
loopne
push
in
cmp
in
jg
dec
mov
inc
jp
fsubrs
xor
in
fsubrl
sub
shl
arpl
mov
jne
push
dec
push
fsubr
push
add
inc
test
and
std
aas
jl
cwtl
outsl
clc
adc
je
mov
and
std
test
fisttpll
fistpl
sbb
clc
cld
insl
rcll
std
rorl
into
pusha
inc
ret
mov
cmpxchg
dec
ficompl
sahf
out
or
jmp
cmp
sbb
mov
fnsave
or
enter
dec
sub
add
fmuls
stos
clc
ja
fidivrl
jl
ja
jo
outsb
and
popf
mov
sarl
das
negb
mov
mov
mov
xchg
ret
loopne
out
cmp
mov
fiadds
iret
clc
sbb
xchg
sbb
push
push
and
xchg
dec
push
stos
in
ja
ja
daa
incl
fldl
push
bound
push
cmp
mov
xchg
lahf
outsb
add
pop
fwait
ret
clc
fstl
iret
loopne
mov
add
mov
data16
push
push
mov
faddl
out
out
and
std
insl
popf
sti
out
sti
mov
adc
mov
add
mov
mov
mov
fdiv
sbb
fistps
xor
lret
push
movsl
scas
andb
dec
jno
jp
movhps
loope
push
push
stos
fistpl
jl
jns
icebp
and
cmpsb
movsb
add
mov
and
cmp
cmc
hlt
addr16
fs
mov
sti
xchg
scas
orb
ja
cld
xlat
in
push
adc
movsl
cmp
jne
xchg
in
jg
sub
cmp
cmc
daa
add
inc
cltd
push
daa
in
ds
mov
negl
jl
js
nop
pop
xchg
adc
push
mov
add
js
and
test
int
pushl
movsb
aad
mov
ss
cmp
test
fisubrs
sbb
sti
inc
outsl
mul
std
mov
faddl
xchg
mov
sub
pop
xchg
sahf
test
push
inc
leave
mull
xchg
aam
add
test
inc
dec
out
iret
xchg
enter
in
lock
arpl
fcomip
ficomps
daa
fcom
add
lret
lahf
out
out
scas
adc
pop
sub
jbe
insb
mov
mov
into
pusha
call
push
inc
in
pop
and
push
mov
loopne
mov
cmc
add
in
sub
cld
test
clc
inc
or
movsb
xchg
mov
pop
push
imul
xchg
push
in
adc
je
lock
inc
adc
gs
icebp
adc
dec
rcr
ss
jle
sbb
in
add
mov
xor
pushf
ss
push
lret
sub
or
xchg
cld
int
inc
jl
mov
ss
sub
push
frstor
mov
pop
inc
xchg
xchg
in
or
push
and
inc
testb
ror
xorl
aam
insb
mov
cltd
mov
int
jge
outsb
pop
outsl
aas
fwait
push
outsb
mov
xor
dec
or
push
xchg
inc
insb
jb
fwait
je
xor
mov
jb
jb
movsl
sub
mov
out
mov
jb
aam
jb
notb
into
bound
pusha
lods
sub
addr16
in
adc
mov
push
push
push
jo
mov
and
loopne
sbb
nop
lods
insl
add
fsubrl
sbb
outsl
lods
mov
imul
cmp
in
mov
arpl
test
mov
sar
mov
pop
push
cmp
pop
gs
cmp
jns
or
loopne
call
outsl
push
inc
pop
pop
cmp
sub
cmp
jnp
lock
xchg
mov
xchg
lret
or
jp
arpl
jl
sbb
arpl
insl
sbb
xor
rcrb
sbb
mov
xchg
imull
cmp
sbb
mov
fimull
arpl
pop
add
mov
fsub
and
or
enter
pop
xchg
ret
vcvtdq2ps
sarl
test
decb
sarl
outsl
mov
ffreep
nop
cmpb
gs
std
push
adc
dec
insl
int3
and
popa
popa
and
pop
mov
outsl
jp
mov
jno
ss
push
std
sbb
les
addb
sbb
repnz
push
imul
in
jb
loope
int
enter
jae
sar
stc
mov
pusha
push
pop
push
mov
or
sub
cmpsb
pop
adc
pop
push
push
cmp
or
push
jmp
stos
jg
xchg
mov
bound
and
push
gs
ret
cmp
insw
arpl
insl
cmpsl
mov
inc
add
loop
mov
add
mov
cmp
cmp
lea
mov
stc
cmpsb
aas
mov
push
jbe
scas
shll
pop
inc
rorl
cltd
inc
mov
xchg
notl
lret
mov
dec
xchg
loop
pop
stos
ret
ret
cltd
dec
mov
mov
xchg
lahf
xorl
in
adc
sbb
enter
clc
mov
push
scas
push
pop
add
or
xchg
and
inc
jns
or
push
sti
mov
jno
outsb
inc
call
ror
push
xchg
stos
xorl
test
or
lods
xchg
lret
fucom
jge
mov
jns
movsl
ret
cs
out
dec
mov
sahf
xchg
jo
jo
out
push
push
enter
iret
hlt
fdivrl
invd
xchg
aam
cwtl
jnp
fidivrs
pop
adc
mov
and
xor
adc
orb
inc
adc
sbb
insb
mov
lods
out
popf
es
mov
shlb
in
pop
ds
xor
or
and
or
cmp
les
mov
xor
jp
rcrb
or
push
inc
xchg
addr16
lods
stos
outsb
repnz
hlt
cmovle
enter
loope
jle
mov
push
decb
xor
xchg
dec
add
je
push
fstps
jno
xchg
inc
loop
add
mov
fsts
pop
enter
insb
daa
cmp
jbe
int3
push
cltd
ja
ds
pop
leave
fs
sbb
add
nop
lcall
mov
cmp
mov
inc
push
insl
outsl
mov
outsl
jmp
testl
mov
sbb
push
repz
pop
mov
add
nop
pushf
jae
rcl
lret
cli
sbb
out
aaa
xchg
sub
or
filds
jl
xor
das
mov
sub
mov
shll
jne
mov
aas
xor
popf
jbe
mov
fwait
stos
push
sarl
into
lcall
jno
aas
xor
leave
mov
std
jae
mov
jnp
rclb
xchg
and
scas
mov
jmp
xor
pop
sbb
test
out
jp
lcall
call
popa
sahf
fwait
mov
fstps
add
mov
out
adc
cwtl
iret
lock
and
ds
xchg
xor
int3
in
mov
push
push
mov
dec
inc
inc
pop
pushf
shll
repz
cmpl
add
cmp
jbe
adc
icebp
js
pop
and
dec
into
lods
loopne
jae
out
ror
icebp
ljmp
xlat
pop
popf
lcall
aam
cmp
mov
xchg
jnp
ret
imulb
mov
cmp
sbb
mov
mov
ficoml
aas
push
adc
in
movsb
gs
xor
lds
fcmovbe
in
pop
test
arpl
bound
sbb
cltd
lret
jecxz
sarb
dec
dec
add
cmp
insl
int3
fiadds
arpl
je
pop
outsb
out
negb
jg
mov
xor
xor
pop
insb
and
out
scas
mov
scas
movsl
test
sub
cmp
aad
fs
imul
mov
imul
and
mov
mov
bswap
test
iret
lret
adc
inc
cmp
mov
inc
ret
xor
jg
in
push
pop
idivb
and
sbb
popf
lods
sub
std
rcl
push
addb
shll
js
dec
xor
shl
movsl
lock
sbb
mov
mov
dec
sub
sarb
mov
sbb
aam
inc
rol
mov
loope
push
imul
dec
addb
xor
addr16
scas
jnp
loopne
fstpl
rclb
fst
mov
and
dec
icebp
or
dec
push
inc
rcrl
loop
jge
push
pop
in
jno
push
rorb
xor
fildl
mov
movsl
daa
addr16
lds
in
mov
cmpsb
inc
push
sub
jmp
push
inc
or
mov
sbb
mov
sti
mov
fiaddl
jle
fnstsw
loopne
adc
mov
repz
lahf
add
mov
stc
and
jnp
cmp
sbb
jae
mov
popf
mov
jnp
add
lock
ljmp
xchg
les
out
int
cmpxchg
sbb
js
test
cmp
jecxz
test
bound
fiaddl
lods
inc
into
dec
shrl
push
jp
out
ds
repz
arpl
sbb
sbb
pusha
xchg
lret
sub
ror
es
orb
jecxz
sub
xchg
add
dec
test
or
ret
inc
xchg
xor
pop
stc
fdivrs
push
jno
dec
sub
add
in
imul
scas
mov
pop
fldenv
pushf
mov
cmp
test
and
test
mov
ds
push
clc
lret
idivb
pop
popf
xor
lods
dec
imul
mov
in
push
loop
stos
shrb
cmpl
xchg
mov
ds
out
jp
add
fldt
mov
sahf
loop
jge
and
mov
lea
push
xor
or
dec
pop
ljmp
mov
jae
pop
pop
mov
sti
fstpl
ret
cli
jns
loopne
or
insl
leave
andl
lahf
or
std
mov
push
pmovmskb
testb
nop
mov
add
mov
scas
fnstenv
or
sub
xchg
mov
or
mov
push
fldl
mov
jge
inc
sub
jmp
push
push
lret
out
cmp
xchg
call
cli
fmuls
adc
mov
inc
xor
mov
daa
xor
loopne
sbb
flds
aas
push
ljmp
push
cmp
mov
out
ljmp
bound
test
lods
imulb
arpl
ds
mov
mov
add
in
and
xchg
or
pop
popa
cmpsb
jns
mov
pop
int
lock
dec
mov
repz
popf
xor
mov
paddsw
adc
mov
and
out
cmc
jo
and
add
je
movsl
dec
lea
push
xchg
rorb
sbb
pop
push
loop
jno
enter
jo
dec
loope
inc
add
adc
or
insb
push
adc
mov
xchg
repnz
mov
pop
or
in
repnz
repz
arpl
xchg
cs
push
ds
pusha
mov
lods
decb
je
out
aaa
imul
clc
sub
gs
outsl
sub
mov
popa
xor
push
div
test
arpl
test
or
and
sub
fwait
std
xchg
fdivl
cs
dec
gs
bound
in
and
test
inc
out
fldenv
stos
call
dec
ds
cmp
inc
hlt
or
stos
sbb
jl
sub
hlt
shll
mov
popf
push
xor
sbb
adc
mov
mov
in
adc
stos
jo
push
int
out
es
ret
icebp
sub
shll
mov
adc
sbb
adc
inc
lret
mov
or
push
mov
lods
popf
int3
mov
mov
adc
jno
aam
or
jbe
ret
fs
push
dec
cmpsl
lret
mov
mov
out
fldl
pop
xorb
push
mov
adc
jge
bound
push
fdivl
imul
in
ljmp
lahf
aam
mov
addl
push
fdivl
or
push
std
push
mov
cld
andl
pop
sahf
sbb
loope
mov
repnz
in
push
lcall
testb
movsb
mov
adc
add
dec
fnstenv
jne
cli
inc
jp
mov
push
inc
lea
sub
stos
test
pop
faddl
mov
pop
aad
sahf
jb
aaa
push
jl
movsb
movsb
and
arpl
sub
scas
mov
jne
lods
cmp
sti
movsl
pop
sbb
daa
clc
notl
pop
sbb
mov
jne
xlat
sbb
hlt
lods
inc
push
out
call
arpl
movl
xor
fstps
fimull
dec
push
xchg
pop
mov
mov
sbb
and
fsubp
xchg
in
lods
and
ret
in
pop
out
mov
mov
loope
or
add
aas
dec
stos
and
pop
ret
and
in
sub
push
pop
mov
sbb
jno
movsl
scas
push
insl
sbb
stc
js
jnp
push
dec
out
pop
lods
xlat
adc
mov
movups
inc
cmp
push
sub
not
xchg
test
insb
push
xchg
fdivr
mov
mov
sbb
and
notl
jnp
imul
test
test
insl
outsb
loope
cli
pop
xchg
incl
ljmp
mov
imul
xor
xchg
mov
add
dec
inc
mov
jne
xchg
aaa
jne
into
jle
fldl
inc
sarb
dec
dec
add
inc
cld
shll
jae
pop
shll
in
adc
xchg
push
fs
xchg
cs
cmc
jle
rorl
dec
pop
sbb
icebp
rcll
and
adc
enter
fnstenv
pusha
ret
jno
ficompl
jg
mov
dec
jne
lret
leave
ljmp
push
cld
jecxz
jl
fwait
imul
es
sbb
pop
push
cmp
cmpsl
call
dec
sub
push
add
leave
in
or
out
jae
xor
shrl
xchg
fnstsw
inc
mov
or
fdivrs
mov
mov
xlat
add
repz
cmp
inc
aad
imulb
push
sub
leave
sahf
push
xor
inc
jo
mov
mov
cmp
int3
pop
dec
sub
cmp
and
hlt
cmp
sbb
les
jmp
enter
cmpsl
out
jb
enterw
xor
lcall
push
cli
aaa
lods
div
or
inc
in
bsf
push
push
ja
inc
xchg
jnp
push
call
imul
fldcw
arpl
dec
inc
imul
and
cmp
push
pop
add
out
addl
pusha
fisubl
dec
sub
pop
out
insl
hlt
lods
pop
push
icebp
inc
jne
jae
pop
sbb
scas
int3
outsb
jp
xchg
add
mov
mov
scas
mov
push
aam
fadds
push
xor
shll
les
je
mov
mov
popl
and
xor
cmp
cmc
scas
and
sbb
stc
jmp
pop
loopne
insl
movsl
xchg
aam
push
sarl
enter
push
push
mov
cmp
popf
popf
inc
incl
add
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
out
addr16
cmp
bound
nop
sub
es
xchg
dec
pop
mov
xor
and
in
push
cmp
jle
sbbb
push
inc
fsin
mov
leave
xor
jl
fnstcw
jo
jg
mov
sub
fildl
ja
mov
mov
mov
push
inc
sbb
push
cwtl
sahf
pop
pop
and
bound
xor
add
cmp
shll
mov
xlat
adc
cmp
out
push
popf
push
jns
sub
jbe
call
sahf
pushf
pop
adc
mov
mov
ficompl
loope
and
jnp
bound
shlb
inc
adc
inc
int
mov
jo
and
cmp
rcl
pop
mov
jnp
inc
push
mov
cmpsb
mov
leave
cmpl
arpl
ds
pop
call
cmp
inc
add
mov
std
out
adc
cmp
inc
mov
ljmp
lret
pushf
rcll
ss
xor
add
jns
scas
mov
clc
inc
add
mov
push
cmpsb
dec
pop
sub
mov
nop
inc
enter
mov
jnp
sbb
jo
out
xchg
aaa
sub
cmp
pop
test
sub
adc
adc
mov
test
mov
out
shll
or
insl
push
xchg
sbb
sbb
sub
fnstcw
xor
jmp
shr
adc
mov
sub
lret
dec
sbb
nop
push
or
add
adc
sbb
and
push
cli
and
sbb
cmpsl
je
repz
cmp
pop
jle
push
and
loope
push
imul
add
aas
icebp
aaa
inc
lea
sub
xor
sbb
test
or
imul
xor
sub
mov
lret
inc
punpcklbw
outsb
mov
jbe
jl
mov
neg
cli
les
push
mov
cmpsb
gs
mov
std
mov
or
mov
mov
xor
notl
and
dec
xchg
add
mov
cli
stos
push
push
movsbl
ja
ret
pop
sbb
mov
push
xor
pop
lds
mov
insb
mov
push
rcll
jl
out
outsb
pop
arpl
sbb
test
mov
push
cmp
sbb
add
jg
call
aas
dec
and
pusha
jae
cmp
popa
jnp
dec
lods
pop
loopne
sbb
cmpsb
loop
push
aam
xor
ret
in
xor
push
movsb
mov
adc
cmpb
push
and
mov
ss
hlt
ret
les
ljmp
sub
insl
ret
hlt
in
mov
outsb
lea
imul
push
sub
xchg
xor
mov
xor
popa
mov
div
fcomps
je
jae
cwtl
or
or
js
xor
mov
cmpsl
out
test
mov
xchg
mov
loopne
mov
add
inc
aaa
int
sub
push
aas
mov
scas
mov
dec
jbe
xchg
mov
sbb
push
fistl
pushf
or
sbb
mov
imul
inc
xor
xor
or
cmpsb
cmp
add
dec
enter
push
movl
enter
pop
aad
mov
or
pop
cs
call
std
mov
and
inc
out
mov
xchg
into
push
cs
fwait
mov
insb
xchg
sti
das
xchg
out
mov
inc
pop
lcall
pop
pop
xchg
add
pop
pop
movsl
repnz
sub
enter
add
fwait
insb
xlat
sbb
cltd
adcb
pop
inc
inc
aam
adc
imul
insb
mov
mov
or
ja
add
or
mul
inc
or
mov
icebp
xor
test
ret
insl
insl
lahf
push
xor
lods
push
sub
cmp
jle
adc
inc
add
subl
loopne
jmp
negl
je
lods
testl
out
mov
or
or
adc
push
mov
sbb
in
push
or
cld
loopne
dec
es
and
test
sub
jbe
clc
cld
dec
mov
xchg
xchg
in
cmp
paddusb
gs
in
cld
mov
sbb
repz
insl
lret
test
rclb
out
lds
out
push
imul
jge
leave
dec
sbb
fimuls
xor
push
inc
jne
and
sbb
cmp
ja
or
loopne
insl
outsl
jle
test
mov
out
ja
cmp
fldenv
lcall
sar
jge
xor
jne
shlb
insb
or
adc
or
or
ja
xchg
xchg
pop
cs
mov
popa
pcmpgtb
dec
xchg
push
fs
test
pop
push
mov
jb
inc
jl
fcoml
and
jp
shlb
mov
mov
pop
fildll
cmp
push
dec
shr
sub
stos
mov
adc
mov
or
inc
or
fnstenv
sub
xchg
mov
xor
sub
xor
jle
add
mov
dec
inc
mov
aam
movsl
push
and
bnd
ja
mov
jmp
call
enter
lods
pop
cli
jge
adc
in
xchg
es
pop
popa
pop
incb
movsl
jnp
jne
lret
pop
and
adc
xor
mov
mov
aam
or
in
mov
jnp
popf
je
decb
ss
pop
add
sub
shll
xchg
sarb
or
push
add
cld
movsl
push
pop
rcll
aas
pop
mov
mov
xchg
fcoms
test
mov
int
cwtl
pop
in
int
inc
jo
out
xorl
outsb
xor
pop
jbe
aad
cmp
enter
cwtl
outsb
les
push
jmp
xchg
lea
sbb
into
xchg
jae
cmp
xchg
outsl
adc
pop
ljmp
lods
test
pop
rcll
mov
mov
bound
inc
in
pop
out
ds
mov
inc
fwait
pop
and
mov
mov
test
outsb
mov
mov
pop
mov
loopne
jle
add
cmc
or
ds
jl
mov
fwait
out
popf
dec
mov
bound
out
out
sub
enter
add
cltd
xor
and
cmp
scas
iret
inc
add
pushf
dec
mov
cmp
mov
push
dec
shr
sub
stos
and
out
test
out
gs
nop
dec
sbb
add
pusha
mov
cmpsb
out
in
xchg
inc
pop
imul
xchg
aaa
shlb
adc
test
out
es
mov
in
dec
push
lea
cmp
sub
inc
pop
push
mul
flds
mov
mov
pop
sbb
pop
leave
iret
jp
loopne
sub
xchg
adc
popa
sub
scas
mov
mov
cmp
les
mov
fidivrl
popa
push
lock
loop
push
dec
jne
shll
or
xor
pop
adc
dec
mov
in
sbb
inc
push
ja
out
push
lret
mov
out
xchg
xchg
in
test
out
iret
fimuls
clc
xchg
lods
shr
push
mov
loopne
xchg
mov
insb
jno
xchg
cmc
std
and
sbb
xchg
les
ja
jb
xchg
push
sbb
inc
ss
inc
hlt
mov
cmp
rcl
jne
imul
xor
sbb
incl
mov
test
fisttpl
adcb
pop
jo
jmp
subb
sbb
lret
ret
mov
sahf
out
pushf
pop
or
cmp
cld
pop
lods
xchg
and
cmovb
rcll
pop
mov
sarl
push
or
fucomi
mov
inc
xor
inc
lods
lcall
push
cmp
test
xchg
clc
cwtl
push
cmpsl
in
jg,pt
push
lods
push
into
push
mov
jecxz
jno
pop
movsl
add
into
mov
sub
vlddqu
lods
mov
mov
rcr
add
sahf
adc
pop
mov
adc
mov
push
push
push
jae
popf
pop
add
pop
xor
ret
pop
cmp
adc
sbb
imul
leave
imul
jb
cmpb
clc
and
sbb
pop
lcall
xchg
jbe
xchg
jl
xlat
movsl
xor
sub
inc
clc
jnp
adc
xchg
sahf
dec
mov
mov
adc
push
fisubrs
iret
jne
sbb
push
pusha
sbb
aam
sbb
adc
jmp
and
or
sbb
ret
add
jmp
push
xchg
sbb
push
and
add
mov
sti
jl
sbb
inc
jecxz
outsl
sbb
cli
cmc
fsincos
push
push
pop
insl
cmpl
mov
xor
push
sahf
push
out
das
imul
sbb
xchg
inc
jmp
and
sahf
mov
in
gs
ss
movsb
dec
xor
addl
mov
test
dec
jmp
dec
and
and
mov
popf
cli
cld
and
ss
into
jno
lea
jb
sti
pop
ljmp
mov
imul
add
adc
jl
sub
arpl
sub
mov
rcrb
cltd
lock
sbb
ljmp
data16
insl
subl
out
dec
adc
sub
push
insl
inc
cmpsl
lahf
pop
icebp
mov
xlat
mov
sub
aad
les
push
dec
aad
loope
mov
dec
scas
fstps
adc
push
xchg
pushf
cmp
sti
pop
int3
je
ss
ret
outsl
xchg
jge
pop
or
bnd
jb
loop
int3
sbb
jbe
push
inc
std
lock
push
gs
dec
cmp
push
jne
mov
pusha
mov
arpl
outsb
movsb
out
cmp
jmp
sbb
cmp
scas
cmp
dec
jp
ret
lcall
ja
aam
xor
and
dec
ret
test
dec
addr16
cltd
push
dec
test
jg
aaa
push
cltd
addb
shr
std
mov
cli
jl
insl
lds
jmp
mov
mov
add
pop
mov
arpl
push
int
sbb
mov
mov
jmp
pop
std
pusha
in
xor
mov
fs
fwait
and
test
or
push
dec
das
test
lret
cmp
and
popf
cmc
vcmpge_oqsd
dec
mov
xlat
xor
xchg
mov
jecxz
in
aaa
and
cld
jno
in
inc
and
cmpsb
mov
fsts
cmp
xchg
cmp
jg
xchg
scas
movsb
jb
cmpsl
pusha
mov
int
mov
cmp
lods
push
pop
daa
lods
mov
add
push
push
xchg
jbe
aam
in
cmp
xor
adc
push
xlat
test
negl
pop
cmpsb
lret
imul
mov
into
aam
scas
fucomi
lea
cli
sarb
dec
lret
or
out
and
stc
in
in
adc
adc
in
mov
and
push
adc
scas
test
stos
push
mov
push
mov
out
das
mov
lahf
stc
int3
sub
pop
dec
lret
fimuls
mov
add
mov
adc
aas
in
pusha
dec
xor
rep
xchg
sub
sti
adc
lods
in
mov
std
push
dec
stos
pop
fstps
imul
movsl
stos
xlat
dec
repnz
repnz
fmul
dec
sbb
or
xlat
inc
mov
mov
call
xchg
cltd
mov
int
xchg
jecxz
or
in
andb
cli
adc
sbb
lret
lcall
iret
or
imul
jp
shl
leave
mov
imul
lcall
in
mov
fnsave
jge
lahf
pusha
outsl
add
stc
pop
jecxz
pushf
aas
int3
cmp
jnp
lret
test
fcompl
daa
sub
mov
out
ds
dec
adc
sub
mov
pop
push
lods
mov
pop
repz
push
mov
repnz
mov
sbb
push
sbb
push
jne
aam
clc
inc
jae
pop
ljmp
mov
xor
jmp
repz
and
fmuls
outsb
inc
cld
pushf
mov
xchg
jns
and
and
dec
sti
mov
xchg
sbb
test
mov
mov
gs
dec
jns
out
adc
fmul
inc
sbb
inc
cli
mov
rorl
not
xor
mov
mov
dec
lret
push
sbb
xor
stos
push
push
inc
xchg
test
push
repnz
fpatan
jne
test
mov
xor
out
in
out
push
jo
enter
lock
jae
adc
mov
mov
sub
inc
mov
jno
jle
aas
fstl
push
movsb
jg
jbe
fptan
jl
jnp
rcl
mov
std
sbb
pop
add
xor
pop
mov
es
fidivs
movsl
xchg
sarb
mov
sbb
jns
lea
into
iret
aaa
pop
arpl
or
inc
cmc
mov
push
out
inc
imul
mov
pop
or
insl
sbb
pushf
sbb
or
fldl
mov
add
and
mov
dec
xlat
sub
cwtl
xor
bound
movsl
daa
frndint
jne
mov
in
or
insl
pop
sbb
mov
loop
mov
inc
add
mov
aam
push
test
cmc
or
pop
add
negl
gs
fmul
call
in
out
test
push
mov
mov
jp
lret
cltd
cli
icebp
jb
sbb
cwtl
add
lods
out
or
dec
aaa
mov
jns
dec
cmp
loope
fildll
pop
lea
fisubl
mov
ret
aam
pop
leave
inc
test
push
dec
and
jg
xor
mov
or
imul
cmp
aam
les
add
dec
inc
dec
jp
pop
inc
mov
sub
inc
push
add
cltd
push
push
or
mov
sbb
rcll
lds
fs
xor
into
and
ja
in
lea
adc
rorb
aaa
jecxz
int3
in
adc
in
mov
sub
out
xchg
aaa
call
sbb
mov
cmpsl
sub
mov
dec
ss
mov
cmpl
xchg
cwtl
push
cwtl
jp
inc
inc
jecxz
sbb
or
pusha
mov
pop
fsubrl
or
adc
cmpsb
das
dec
adc
out
cmpsl
gs
call
mov
test
xor
xchg
pop
mov
pop
push
out
adc
hlt
addb
pushf
aad
in
cmp
cmp
adc
out
movsl
mov
repz
pushf
mov
ja
and
das
lods
dec
or
adcl
mov
xchg
cmp
jo
and
pop
negl
adc
sahf
push
in
call
movsl
sub
cltd
fisubl
stos
test
mov
push
add
imul
mov
inc
sub
into
push
adc
xlat
arpl
and
push
jb
ja
jnp
rcr
push
aaa
add
fwait
in
and
xor
mov
mov
fs
mov
popf
and
out
push
lahf
jae
cmp
lcall
icebp
stc
inc
or
js
cld
loopne
movl
mov
mov
xor
sub
int3
loopne
shl
in
jl
pushl
movsb
subb
or
test
lea
stos
dec
cmpsb
pop
repnz
cmp
push
sahf
push
shll
adc
cltd
push
mov
rcll
enter
out
jmp
inc
jns
lret
fs
mov
push
sub
arpl
ret
ds
mov
add
pushf
aas
xor
rcl
int3
adc
cmpsl
or
clc
and
shr
jae
movsl
inc
clc
mov
or
mov
xor
pop
push
aad
mov
pop
mov
mov
rol
icebp
and
in
cmpb
daa
sub
jecxz
jge
sbbb
fwait
sbb
cs
add
stc
xor
cmp
int
push
mov
aad
cli
out
ret
pop
dec
addr16
jecxz
jl
mov
mov
add
xor
jb
mov
sub
jo
stos
cs
cmp
mov
and
pop
mov
cmp
enter
aam
fbstp
adc
mov
mov
jns
push
out
mov
popa
mov
mov
adc
lahf
aam
icebp
aad
mov
mov
mov
les
xchg
push
inc
and
jno
mov
cmpb
repz
mov
xor
cmpsl
ret
lds
push
invd
jg
sbb
inc
inc
pop
dec
xchg
inc
cmp
mov
adc
aad
fisttps
mov
lods
jle
leave
mov
xchg
loop
fdiv
or
or
jmp
sub
stos
sahf
imul
dec
cmp
stc
inc
adcb
xorl
mov
mov
lods
arpl
lock
cmp
jmp
outsl
adc
test
stc
mov
leave
pop
fbld
in
or
inc
xor
xor
repz
mov
cmp
xchg
das
dec
lret
ss
addr16
loope
ds
push
cmp
push
add
and
clc
xchg
jnp
xchg
aaa
pop
cmpsl
ja
js
pop
das
aaa
fwait
xor
in
and
push
jnp
dec
jg
popa
pop
les
push
es
and
lock
outsb
and
das
out
and
imull
stos
cld
and
sbb
cmp
movsb
add
sbb
inc
and
and
sub
mov
out
cltd
pop
dec
fistpl
dec
out
jecxz
pop
pavgb
push
test
fcompl
mov
out
test
cmpsb
sub
dec
adc
mov
int
fdivrs
mov
loop
ret
or
frstor
data16
js
sub
dec
dec
idivl
aam
xchg
dec
adc
jne
sahf
sub
cmpsl
lds
aaa
dec
xchg
ja
mov
xor
int3
ret
sub
imull
push
es
sti
pop
ret
dec
dec
loopne
hlt
lahf
sbb
fxch
sub
sub
test
adc
je
or
mov
cmp
gs
cs
addr16
jnp
into
or
mov
push
jns
pop
outsb
cmpsb
dec
push
mov
and
popf
push
and
mov
mov
jno
lcall
das
inc
outsl
sbb
aas
jnp
xchg
std
out
pop
pop
jae
ja
lea
pop
inc
dec
or
ret
mov
out
imul
dec
push
sti
loope,pt
xchg
inc
adc
cmp
iret
jmp
das
push
xor
out
cli
andb
mov
and
data16
test
inc
xchg
mov
es
imul
lds
cmp
push
sbb
push
add
sbb
rcll
dec
dec
das
pushf
push
or
mov
imul
xor
push
and
insl
xchg
cwtl
xchg
cmpsb
pop
std
mov
jmp
xchg
push
sbb
icebp
lcall
stos
in
int3
inc
loop
fdivl
push
in
shll
push
xchg
cmp
in
addl
insb
in
xor
repnz
mov
in
jge
xchg
cmpl
in
dec
add
in
push
addr16
dec
stc
jg
in
sub
lock
xor
nop
mov
fs
lret
dec
enter
mov
ljmp
in
das
pop
data16
mov
aaa
jge
jp
push
daa
or
mov
add
fadds
xchg
sbb
mov
and
or
ss
arpl
pop
pop
lds
and
xor
ror
hlt
mov
popa
and
sarl
xchg
inc
lods
mov
push
icebp
test
dec
push
push
orb
xor
inc
nop
repz
rcrb
or
or
pop
int3
cmp
adc
xorb
mov
or
cmp
push
rorl
jle
test
jb
sub
dec
pop
dec
outsb
push
movb
inc
mov
mov
mov
mov
sub
cli
fs
and
push
sbb
into
xchg
jg
jmp
outsl
mov
sub
mov
mov
dec
out
mov
imul
hlt
sahf
scas
pushf
into
sarl
add
and
lret
xchg
mov
pop
loopne
dec
test
inc
mov
inc
or
les
enter
inc
fistl
lret
es
js
inc
ja
jecxz
jno
xchg
pop
adc
mov
push
cmc
lret
in
jge
and
inc
icebp
dec
pop
xchg
les
ret
lods
mov
inc
dec
xchg
outsb
dec
and
jecxz
enter
rcrl
pop
loopne
jmp
mov
adc
repnz
pop
pusha
repz
push
in
mov
mov
scas
jns
stc
repnz
fisttps
lcall
orl
lret
faddl
int3
nop
fstl
into
push
out
ja
adc
pop
outsl
inc
jb
int3
test
movsb
and
add
scas
pop
and
in
inc
or
insl
ja
xlat
popa
add
xlat
or
jmp
jge
adc
sbb
shlb
sti
pop
xchg
ret
fwait
sbb
rcl
popf
cwtl
xor
adc
mov
jns
push
push
add
je
pusha
inc
sbb
mov
hlt
popf
push
pop
fs
pushf
popl
stos
pop
adc
dec
testl
arpl
movsl
loop
dec
iret
ds
jecxz
and
dec
jae
mov
mov
sbb
jne
cmp
mov
push
das
movsb
stos
and
test
sahf
adc
mov
cltd
out
jae
out
push
test
pop
cmp
xchg
popf
pop
call
xchg
xchg
lea
mov
scas
jge
or
loop
test
cwtl
repz
into
lods
mov
cmpsl
and
cmovae
mov
mov
adc
mov
ljmp
sub
ja
or
sbb
adc
xchg
jp
pop
mov
pop
mov
mov
mov
pop
xlat
testl
ja
clc
les
xchg
or
adc
fwait
push
insb
mov
pop
jb
mov
outsb
adc
mov
incb
arpl
or
stc
les
mov
sub
pop
jo,pn
jg
pop
inc
dec
sarw
shl
loop
push
insb
loope
pop
inc
cmpsl
adc
xchg
cmpsl
push
push
cmpsb
pop
popf
pop
test
add
mov
pushw
orb
mov
repz
and
fimull
sti
and
andl
pop
sarb
push
push
js
dec
sub
xchg
mov
arpl
adcb
dec
dec
imul
jl
idiv
jl
call
mov
cli
enter
shll
rcrl
jae
adc
sti
sahf
aad
pop
imul
in
push
xor
push
jae
icebp
mov
mov
mov
lds
add
sbb
sub
out
aaa
or
loope
pushf
daa
xchg
popf
cli
xor
mov
cmp
rcrb
adcl
das
rclb
cmpsb
xchg
pusha
sbb
cmp
cmc
ffreep
xchg
push
mov
cmc
mulb
adc
test
das
dec
sbb
adc
push
or
scas
mov
rcll
sbb
pusha
mov
lds
mov
out
ss
mov
lret
cmp
mov
or
into
scas
jnp
stos
pop
xchg
in
subb
inc
das
repz
adc
push
imul
sbb
sbbb
xchg
les
adc
fildl
pop
xchg
loope
jbe
push
or
subb
ja
repnz
pop
jmp
pop
fdivp
pop
stos
js
imul
jg
pop
enter
sbb
xchg
cmp
scas
xorl
xor
div
stos
jnp
outsb
bound
jbe
cmp
adc
frstor
fs
cmp
push
subb
sbb
xchg
addr16
mov
mov
mull
inc
enter
mov
ljmp
fisubrs
out
ds
mov
lods
pop
pop
shl
sarl
iret
subl
push
and
dec
in
sbb
mov
in
popf
aaa
push
push
call
mov
sbb
mov
insb
aas
jno
popf
addr16
addr16
jne
popf
bound
jnp
cs
push
divl
pop
jne
xor
ss
and
lret
mov
loope
out
pop
jb
sbbb
inc
mov
sbb
xchg
outsl
insb
rorb
xor
fdivrl
inc
out
sub
push
popa
xchg
popa
call
rcll
imul
pop
icebp
push
or
lock
jmp
lods
imul
inc
loop
mov
xlat
orb
jno
jae
std
in
cli
and
test
fldcw
or
imul
xlat
in
mov
cmp
dec
xchg
mov
jle
popf
out
xor
les
mov
or
out
fmull
mov
mov
hlt
mov
mov
adc
mov
rol
movsl
jg
jl
lock
adc
loope
pop
push
pop
adc
lods
pusha
mov
pop
sbb
cmp
dec
xchg
push
push
or
push
cmp
xchg
pusha
dec
jo
or
jg
xor
fldt
xchg
mov
pop
sbb
dec
insw
fisubl
movsl
mov
adc
inc
xchg
aam
aaa
push
data16
pushf
adc
pop
pop
adc
mov
adc
test
pop
sti
mov
dec
mov
pop
pop
pusha
jne
cmpsb
mov
pop
push
dec
orb
dec
ss
jbe
lahf
mov
pop
cmc
les
jmp
push
jmp
hlt
pop
dec
mov
adc
pop
lahf
adc
inc
mov
cmp
leave
add
das
mov
decl
negl
leave
cmp
inc
aaa
adc
inc
in
mov
mov
push
cmp
xchg
jae
add
cmp
data16
jo
or
add
jnp
in
push
cli
dec
jmp
mov
cmp
es
dec
push
sub
rcr
mov
call
insl
xchg
les
and
scas
jecxz
cmp
fcom
xlat
ja
add
inc
dec
jg
cmpsb
inc
jecxz
mov
add
push
mov
jbe
mov
sbb
jae
and
cmpsb
mov
dec
or
add
sub
push
sub
pop
in
cmpsb
cld
sub
push
sarl
xlat
in
push
fnstcw
xor
push
adc
test
dec
popa
xchg
cltd
idivb
jo
adc
inc
loopne
test
xchg
fstpt
sti
adc
cli
cmp
sub
lea
push
pushf
mov
lea
cli
inc
mov
sbb
hlt
push
mov
punpcklwd
push
sti
mov
movsl
or
mov
or
out
pop
aas
into
fdivrp
dec
jecxz
mov
xchg
std
mov
ret
inc
outsl
movsb
repnz
add
xor
cmp
sbb
les
push
pop
cmp
push
fnstsw
mov
sub
adc
ljmp
xchg
in
jo
lcall
add
sarb
aaa
es
dec
sub
mov
mov
mov
dec
cmc
cld
in
mov
fdiv
lcall
xchg
lods
and
cmpsb
adc
push
clc
lcall
xchg
xchg
push
sub
repnz
xchg
mov
stos
push
push
jno
add
sahf
push
or
xchg
faddl
dec
mov
and
repz
lcall
mov
in
dec
les
stc
or
aad
sub
mov
mov
in
iret
push
pop
mov
daa
out
xchg
mov
sbb
repnz
lods
test
add
pop
fcoml
jns
jg
and
mov
orb
adc
dec
xchg
fcoms
fistpll
sub
push
aas
lret
loopne
ret
push
xlat
mov
lcall
sub
jl
sbb
mov
pop
rcll
pop
stos
cmp
mov
les
into
cmpb
jb
dec
mov
out
jbe
mov
jp
sbb
notl
xor
sbb
inc
sub
sbbb
aad
mov
mov
orl
mov
push
pop
cmpsl
loopne
push
inc
ds
pop
mov
out
rorl
mov
in
sub
xor
dec
jmp
divb
pop
jl
and
mov
jns
sub
pop
mov
jmp
jno
mov
inc
insl
inc
aad
test
dec
aam
xchg
push
test
adc
or
in
pinsrw
out
cmp
cmp
pop
pusha
mov
jo
ret
roll
nop
jg
shrb
jns
idivb
loope
arpl
ja
xchg
inc
fs
dec
fwait
jl
shlb
movl
jge
dec
or
sbb
sti
in
mov
nop
ret
mov
fucomp
xchg
add
in
dec
and
aad
mov
in
xchg
xor
mov
mov
xchg
fucomp
shrb
jns
sarb
pop
movsb
xchg
insl
sahf
add
cmpsl
repnz
sbb
jno
cmp
or
xchg
in
cmpsl
sbb
inc
sub
cld
pop
movsl
adc
cmc
cmpsl
aas
lods
mov
pop
scas
jp
faddl
iret
imul
xchg
pusha
mov
mov
lods
out
frstor
xchg
aam
mov
push
jbe
in
xchg
repz
or
shll
push
lock
pop
cmp
iret
js
add
sti
pop
mov
cwtl
push
push
sbb
mov
and
push
lea
out
mov
push
in
push
divb
out
or
or
pop
inc
sub
mov
push
movsl
dec
cmpsl
divl
fstpl
sbb
imul
dec
inc
mov
stos
fwait
fistpl
and
push
jecxz
mov
cmpsl
push
mov
xorl
into
push
out
dec
cmp
lock
mov
adc
loopne
and
add
push
lock
pop
pop
add
mov
xlat
mov
dec
aad
cs
ret
movsb
jg
mov
adc
and
cmp
sbb
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
inc
call
cmp
bound
xor
aad
int3
jle
add
sti
pop
sti
sbb
sarl
icebp
out
stos
push
and
sub
ds
sub
dec
xchg
add
lret
or
jne
push
ja
paddusb
les
ds
or
xorb
add
jg
mov
movhps
cmp
pop
leave
lcall
enter
jmp
dec
push
pop
addl
fnstcw
loop
add
idivl
les
loop
or
hlt
loop
mov
xchg
xor
fcmovnb
pop
out
sub
push
sub
lret
cld
mov
andl
inc
mov
ja
cli
dec
in
mov
outsl
push
call
jecxz
or
in
verw
movsl
icebp
pop
xchg
sbbb
cli
mov
inc
sub
cltd
sbb
into
mov
jne
adc
lcall
mov
add
push
inc
in
push
lock
fwait
adc
add
mov
test
jecxz
inc
test
push
xchg
jmp
jbe
and
cmp
js
push
push
arpl
inc
or
out
je
popa
int3
and
insb
cmc
cmpsb
fnstenv
fldl
adc
icebp
fwait
call
das
mov
cmp
loopne
addr16
jns
and
sub
add
sahf
pop
adc
fs
hlt
fnstcw
xor
mov
sub
push
xor
pop
push
mov
stc
pop
mov
ljmp
mov
aas
bound
fnstcw
sub
xor
ljmp
sub
pushf
xchg
insb
test
xor
inc
add
xor
out
inc
and
out
pushf
insl
push
dec
mov
dec
sub
aam
add
inc
mov
mov
repnz
iret
or
jecxz
popa
jo
popa
dec
push
sti
pop
pop
aam
dec
insb
test
jge
out
ficoms
imul
mov
xchg
jge
jb
scas
sti
test
xchg
shll
sti
lock
mov
xchg
adc
and
jne
test
arpl
xor
cli
in
sar
jle
inc
mov
jne
mov
add
bswap
cmp
movsl
fdivr
lcall
inc
lods
mov
and
enter
repnz
ret
jae
cmpsl
and
testb
out
outsb
lcall
sub
dec
jne
adc
mov
or
cmp
xchg
dec
std
stos
xchg
sarb
pop
scas
mov
leave
cmp
dec
rol
jo
mov
in
sbb
mov
sub
push
adc
ds
xchg
mov
clc
fiaddl
ja
pop
daa
xorl
ja
rcrb
push
scas
mov
aam
dec
adc
or
adc
mov
jmp
or
ret
push
aam
add
sahf
inc
outsl
divl
sbb
rclb
neg
mov
mov
popa
aam
aaa
sbb
sub
test
jmp
lods
cmovne
hlt
sbb
sti
mov
in
mov
dec
mov
ja
das
mov
fdivrl
call
dec
adc
out
imul
jne
lcall
cltd
xlat
das
jge
xor
dec
rcll
sarb
leave
lods
call
jg
ret
jne
dec
fldenv
sub
mov
icebp
jbe
mov
das
dec
cwtl
xlat
jmp
ret
cmp
icebp
jmp
cli
into
mov
sbb
push
or
pusha
movl
fmulp
mov
ror
lds
or
test
inc
nop
pop
in
sub
add
fstl
dec
add
lret
gs
mov
push
es
push
test
dec
lahf
jmp
cmp
repnz
mov
cwtl
push
test
jns
in
mov
add
xchg
dec
inc
arpl
cwtl
mov
shl
adcl
xor
jo
enter
sbb
pop
ljmp
in
xlat
lea
xor
inc
out
sti
ror
cs
addr16
int
xorl
fdivl
stc
lret
ret
cmc
or
dec
addb
loopne
xchg
cld
shr
mov
shll
idivl
outsl
je
inc
incb
call
outsl
fdivrl
mov
xlat
inc
xchg
lds
in
enter
icebp
roll
add
movsl
ret
imul
mov
push
xchg
in
xchg
cmp
daa
insb
cmp
test
in
jge
out
addb
fsubrp
pop
stc
xchg
cmpsb
shl
inc
inc
adcl
inc
jo
cli
aad
inc
pusha
lock
dec
fdivl
push
mov
sub
inc
mov
xor
jge
mov
mov
ja
xor
xchg
ss
mov
daa
lea
xchg
jno
jmp
lds
mov
movhps
pop
int
fstpl
inc
hlt
adc
add
mov
jno
std
icebp
loop
addr16
pop
test
dec
xlat
jno
cmpsb
rcrl
jle
call
adc
adc
dec
lods
ret
jecxz
xor
int
sbb
xchg
test
mov
shlb
dec
inc
movsb
or
inc
push
adc
cltd
mov
leave
and
dec
mov
lods
adc
gs
adc
mov
stos
mov
dec
sub
hlt
stc
mov
sub
jg
pop
mov
aas
sti
in
leave
in
clc
cli
arpl
clc
cmp
xor
mov
mov
cmc
jo
sub
mov
pop
push
jns
ret
mov
cld
and
orb
add
xor
jns
testl
xchg
inc
data16
in
jmp
push
shl
mov
fisubs
push
pop
aam
push
xchg
popa
xchg
mov
mov
lods
shrl
sarw
out
push
dec
enter
cmp
pop
xchg
jns
cmp
mov
loop
mov
pop
add
fsubl
loope
pop
cmp
fcoms
js
push
lods
sub
jecxz
xchg
pop
adc
inc
or
out
sub
jbe
or
xchg
push
push
lahf
setnp
icebp
inc
jbe
mov
sti
daa
dec
clc
sub
js
repnz
jbe
xchg
bound
stos
stos
shrw
mov
outsl
push
clc
fidivs
sarl
pop
push
mov
dec
std
or
ret
jns
inc
mov
pop
and
push
pushf
cmpsb
cmpb
popa
int
sub
mov
sub
adc
inc
push
jbe
sahf
push
add
test
call
clc
cmp
add
fs
ljmp
in
cmp
lods
jmp
push
lret
jne
add
push
ljmp
mov
out
js
shll
lret
mov
ficompl
ret
stos
dec
dec
sub
cld
icebp
push
in
mov
adc
pop
mov
add
scas
sub
aas
dec
mov
and
xchg
mov
clc
js
mov
js
push
push
cld
mov
inc
imul
push
dec
and
mov
out
out
push
sbbl
mov
inc
push
and
or
aaa
sbb
fmull
ret
adc
jnp
sub
iret
add
data16
sub
dec
cmpsb
rorb
aam
push
adc
fwait
and
mov
lea
cmpsb
sub
mov
mov
dec
jo
or
repnz
call
jbe
fld1
jmp
sahf
adc
push
xchg
adc
sbb
or
ss
push
cltd
subb
pop
iret
adc
mov
xor
sbb
stos
pop
fldcw
test
or
jecxz
fildll
jo
cs
adc
dec
cmpl
adc
mov
mov
test
adc
xchg
enter
lock
push
loope
inc
pop
push
cmp
popa
fstps
aad
clc
jbe
ljmp
ja
inc
sbb
jmp
cmp
test
or
xchg
adc
adc
mov
and
or
xor
in
or
movsb
in
sbb
lret
push
cmp
cs
das
std
push
mov
bound
imul
push
xor
retw
xor
pop
fcmovne
xchg
out
lret
push
mov
push
and
xchg
add
in
push
dec
fs
out
sub
push
xchg
sbb
xchg
push
push
bound
and
or
loopne
mov
cmc
push
ret
xor
insb
push
pop
inc
movsw
es
call
xchg
xchg
xor
inc
add
mov
mov
add
jnp
movsb
outsb
xor
lods
mov
add
outsb
loope
mov
xchg
inc
mov
sbb
lret
cld
mov
xor
lret
cmp
imul
push
inc
fwait
cwtl
xor
nop
insb
mov
cltd
cmp
std
push
xchg
outsb
scas
in
or
add
in
jnp
dec
test
test
jecxz
aaa
mov
jmp
dec
cwtl
in
aas
add
dec
jmp
inc
imul
sti
pop
and
lods
loopne
mov
addr16
mov
or
or
cld
inc
and
sbb
scas
xor
scas
pop
sub
fildl
sbb
repnz
iret
lcall
stc
push
out
and
or
divb
inc
mov
xor
pop
push
cmp
scas
iret
jns
js
pushf
in
inc
stc
xchg
orl
mov
adc
insl
mov
dec
in
lahf
out
add
ror
mov
xlat
lock
pop
js
cmc
pop
lret
out
cmp
ffreep
sub
push
pop
aas
and
add
dec
mov
call
insl
in
push
sub
dec
andl
leave
pop
lock
sbb
out
in
jno
ljmp
std
bnd
or
push
cmp
or
gs
mov
mov
rolb
pop
mov
rcll
xor
mov
adc
pusha
dec
ja
xor
bound
or
pop
mov
std
push
sub
jnp
lret
icebp
jge
jnp
pushf
mov
xor
cli
mov
mov
sahf
loopne
js
add
inc
call
sub
leave
dec
or
adc
sbbb
pop
ds
push
lcall
fnstenv
idivb
mov
lret
fcmovu
jg
cld
cmc
fnstenv
xor
jp
stos
lret
es
outsl
and
jno
jp
xrelease
out
xor
push
addb
lock
popf
ret
mov
mov
stos
mov
sahf
std
and
dec
in
cmpb
push
mov
and
test
jnp
sbb
jecxz
inc
mov
lahf
sbb
popa
xchg
les
das
xor
roll
push
fdivrl
sub
adc
lea
lea
lods
add
sbb
jl
out
lret
les
lock
je
or
dec
addl
push
xor
mov
ja
scas
lea
stos
jecxz
ret
push
popa
jp
mov
sarb
in
pop
push
cmp
cmp
outsb
pop
into
xchg
popf
mov
push
movsl
adc
fs
lock
sub
mov
repz
dec
pop
cmpsl
out
jmp
jb
into
ss
pop
jmp
fwait
pop
push
jno
pusha
cmc
push
pop
fsubs
pop
mov
es
stos
and
adc
fstpl
popf
aam
jmp
cmpsb
and
inc
xor
pop
add
ja
fidivrs
add
cmpsl
imul
or
sbb
nop
scas
or
cmp
push
adc
sbb
xchg
pusha
cwtl
std
xor
shl
mov
cld
xor
xchg
jbe
and
mov
pop
sub
loop
pop
sub
xor
dec
mov
movsb
fnstcw
leave
or
imul
mov
fisubrs
in
scas
or
pop
cmp
mov
xchg
xlat
in
xor
sbb
scas
lock
dec
aaa
out
push
sbb
outsl
add
fsubp
cltd
aaa
push
idiv
data16
xchg
adc
pop
pop
push
xchg
xchg
nop
test
leave
fcoml
out
inc
cmp
icebp
adc
cmpsl
push
fsubr
or
not
fcomi
stos
movsb
enter
dec
push
in
adc
mov
add
and
jecxz
or
popf
jnp
adc
insl
push
jb
pop
or
scas
scas
insb
xchg
iret
or
cmp
int3
jl
and
lahf
pop
daa
and
cmpsl
pop
add
push
adc
les
add
dec
add
jg
mov
jbe
jmp
xor
jbe
mov
push
mov
push
jl
jp,pt
jns
fisttps
rorl
mov
xor
or
lcall
adcb
cmp
enter
mov
add
rcr
shl
fcmovnu
xor
xchg
add
jge
and
jbe
inc
js
xor
stc
push
fimull
xor
icebp
pusha
fiaddl
mov
in
mov
stos
jno,pt
sbb
and
gs
out
movsb
fistps
mov
push
or
sub
imul
icebp
and
imul
jae
push
jl
mov
clc
or
sbb
push
jl
adc
movsl
jmp
sbb
divl
cwtl
inc
or
jle
cltd
xchg
add
sbb
lea
into
dec
cmc
fs
aam
jp
test
out
ds
mov
fcompl
fiadds
daa
inc
lcall
dec
sbb
mov
pop
ret
out
mov
jb
xlat
dec
lea
jne
dec
int
and
jp
mov
clc
push
mov
xor
mov
adc
shll
jnp
cmp
jl
lret
lahf
or
lret
sbb
or
dec
or
push
add
lods
mov
dec
test
stos
pop
push
or
adc
sbb
mov
xchg
shll
dec
lds
call
lcall
es
js
mov
ret
add
lock
stc
cli
out
push
movb
sbb
cmp
sub
pop
jne
inc
sbb
push
or
lahf
xor
mov
mov
lds
mov
push
cld
push
inc
scas
sub
fisubrl
jg
imul
loop
dec
mov
flds
decb
shlb
pop
pop
mov
inc
cmpsb
filds
dec
in
jno
xchg
cmc
mov
push
cmp
lods
pop
mov
sbb
faddl
adc
push
stc
dec
hlt
insl
stc
sbb
test
dec
xchg
sti
cmpsb
mov
mov
dec
sbb
xchg
vpacksswb
push
lods
mov
sub
cmc
push
cmp
xchg
outsb
push
cmc
shll
push
shlb
lods
je
jnp
or
xchg
ficompl
divl
sarb
sub
mov
rorl
bound
mov
mov
push
sbb
inc
scas
mov
or
out
push
mov
sub
pop
fucom
dec
jp
into
inc
and
jno
gs
jno
out
ljmp
cmpsl
jb
xchg
leave
or
inc
push
and
sub
jae
cmp
call
push
adcl
push
ret
sub
lods
dec
mov
in
add
fdivrl
inc
popa
lret
lret
add
lods
pavgb
adc
repnz
lret
je
xlat
in
jb
adc
dec
pop
xchg
push
jp
xor
mov
stc
xor
mov
xor
in
mov
xor
cmp
rclb
and
filds
mov
shl
adc
push
stc
xchg
push
mov
sub
jl
jg
sbb
outsl
and
sub
lcall
iret
mov
fisubl
cmpsl
lret
or
sti
clc
aas
je
sub
lock
popf
das
out
mov
gs
jl
push
pop
inc
imul
jp
xchg
jbe
insb
aas
mov
fisttpll
mov
or
gs
insb
mov
adc
popf
add
pushf
loope
mov
mov
lret
jae
sar
xchg
inc
data16
scas
stos
sahf
fwait
sub
push
scas
jle
hlt
in
dec
int3
push
and
arpl
negl
xchg
pop
jbe
aad
push
cmpl
pop
fs
rcll
hlt
movsb
stos
lcall
imul
or
movhps
adc
cmp
cmp
addb
xor
mov
mov
jecxz
mov
ficoml
lret
mov
sub
xchg
xor
lods
push
xchg
mov
popa
test
mov
out
push
inc
inc
outsl
aam
sbb
dec
repnz
add
mov
fsubrp
jb
sub
mov
cmpsl
lods
cmc
movsb
jl
inc
inc
fdivr
mov
movsl
sub
gs
cmpsl
aas
xor
int
or
aam
clc
sahf
stos
cmp
outsb
test
out
lcall
jnp
movsb
mov
lcall
cmp
je
push
jge
addl
or
dec
sbb
jmp
and
outsl
fistps
add
adc
cmpsl
les
adc
pop
loop
xchg
xlat
aas
ss
push
add
pop
pop
icebp
imul
jb
jb
cmpsl
mov
insb
jecxz
outsb
leave
es
pop
pusha
fsts
lock
mov
push
bound
sub
leave
sbb
stc
jnp
mov
mov
addr16
pop
pop
mov
fildll
push
mov
push
lods
jne
adc
sbb
cmpl
mov
test
pop
lods
je
arpl
std
xor
mov
das
jg
mov
out
mov
gs
xlat
cmp
cmp
fwait
mov
mov
aaa
sub
pop
stc
test
dec
fsubr
dec
or
js
pop
mov
bound
mov
pop
bound
sbb
sbb
out
pusha
jecxz
and
sub
stc
dec
adc
push
dec
jbe
and
testl
xlat
pusha
call
in
scas
fwait
xlat
insb
lcall
stos
xor
fidivl
je
push
mov
xchg
jae
imul
shrl
shl
adc
jno
xor
xchg
adc
int
rorl
aaa
adcb
stc
add
pop
sub
movsb
gs
out
inc
and
fidivl
push
inc
testb
subl
jno
imul
repz
out
into
inc
je
inc
aam
imul
pop
cmp
imul
sbb
test
push
out
sub
xorb
lods
adc
push
jl
ss
loop
push
out
cmp
stc
push
mov
sbb
cmp
int3
popf
push
cmp
outsb
dec
rclb
je
in
mov
push
or
xor
hlt
dec
push
sarl
cwtl
call
or
lret
mov
shlb
push
push
push
add
cmp
adc
dec
xor
call
xor
sbb
addb
rorl
sub
sbb
outsb
add
test
in
sbb
stc
or
outsl
iret
aas
and
cltd
fs
push
xor
add
pushf
gs
cld
shll
push
rcr
or
in
mov
dec
add
sub
jl
pop
jae
xchg
push
xor
in
ficomps
shl
lret
xchg
cmp
sbbl
mov
fisubl
js
cmp
fstpt
fsubrs
cmp
pop
adc
sub
xor
sub
mov
fisttpl
outsb
mov
mov
mov
cli
push
xor
sub
sub
cmp
fisubrs
add
lds
xchg
and
jl
cld
adc
lock
outsb
sahf
cmp
push
ds
pop
inc
pop
cwtl
pop
cmpb
pop
sub
dec
push
add
sbb
mov
cmp
out
icebp
lea
cmp
mov
icebp
sti
lea
outsl
in
push
or
or
and
std
sbb
sbb
pop
adc
out
mov
and
ljmp
flds
mov
insl
push
mov
jecxz
shlb
rcrl
stos
push
mov
js
mov
inc
les
ficomps
mov
stc
adc
jl
or
sub
outsl
and
int
call
or
pop
adc
cmpsl
sbb
jae
mov
jno
out
jbe
sbb
inc
lea
sbb
push
dec
lret
push
ja
xchg
fistl
scas
in
lock
push
xlat
ffree
andl
xor
mov
test
xchg
and
pop
js
loopne
test
xchg
cwtl
stc
cmpsb
bound
cmp
sub
lret
into
and
xor
ljmp
fidivl
sti
fldl
rep
and
hlt
dec
es
fmulp
pandn
ljmp
fsubr
adc
outsb
cmc
cmpsb
cltd
mov
in
imul
idiv
jnp
adc
push
loope
pop
xchg
hlt
mov
push
jno
mov
mov
in
jecxz
stc
dec
sbb
pop
and
sub
lods
add
dec
xor
xchg
stos
call
jb
jp
and
jecxz
adc
or
sbb
jb
je
das
cmc
xchg
add
mov
and
sahf
jmp
dec
nop
std
cld
fs
cmp
leave
popf
or
pop
mov
stos
ficomps
sub
cmc
xchg
ja
cmp
adc
bound
dec
mul
jecxz
push
add
loopne
shrb
fidivl
scas
aas
lret
or
jl
lds
mov
sub
mov
mov
mov
aaa
cld
mov
add
sti
xchg
cmp
adc
mov
xchg
fiadds
and
imull
pop
jl
popf
inc
cmp
mov
ret
jo
fwait
adc
dec
lahf
jmp
dec
add
sub
movsl
push
lret
and
mov
out
add
pop
sub
in
and
cmpsb
xchg
and
xlat
in
adc
mov
xor
push
add
mov
mov
in
mov
mov
pop
pop
idiv
or
mov
idiv
and
inc
fs
out
jl
cltd
loopne
pop
sbb
in
cs
test
xorl
fimuls
jbe
xor
xor
add
fisttps
cmpsl
jne
packssdw
ficompl
jns
in
mov
in
fstl
or
in
cli
sbb
mov
je
hlt
mov
mov
cmc
cltd
cld
xor
add
rcrb
push
nop
popf
pop
outsb
cmp
dec
inc
inc
loopne
leave
cld
sbb
mov
cmpsb
packsswb
inc
pop
fistpl
pop
clc
mulb
movsb
dec
mov
test
sub
mov
ret
mov
call
popf
sub
xor
gs
repnz
lret
loop
negl
sub
xchg
aad
xor
and
inc
scas
xor
jle
pop
out
xchg
mov
dec
pop
and
lret
pop
cmp
shrl
in
adc
mov
add
mov
sbb
fisubl
into
aas
mov
push
add
adc
jae
loop
push
cmpsl
push
xor
add
test
jge
cmpsb
mov
and
xlat
jns
in
scas
jb
stos
mov
mov
test
hlt
shll
cli
addr16
out
les
inc
cmp
popa
into
jne
mov
push
cmp
xchg
xor
push
ljmp
jne
dec
daa
rol
mov
inc
shlb
out
call
lcall
stos
pushl
scas
call
sub
dec
into
and
ficoml
repz
and
jle
movsb
int
mov
rcrl
add
sbb
sbb
roll
pop
hlt
jmp
dec
test
push
jae
inc
hlt
fcmove
das
jae
mov
fildl
push
inc
dec
push
les
rorl
or
fcos
and
nop
mov
pop
xchg
in
adc
xor
mov
int3
arpl
movsb
cmpsb
je
xchg
das
sub
xchg
fdivs
lock
popa
hlt
mov
pusha
sub
addb
cltd
pop
mov
push
lahf
subb
cmp
mov
mov
mov
lret
mov
dec
mov
adc
xchg
or
push
adcb
adc
inc
cltd
xor
xchg
in
pusha
pop
inc
mov
jmp
lods
ficomps
sahf
inc
call
pop
clc
aaa
loope
push
stos
mov
push
xchg
jbe
jne
xchg
mov
cli
jmp
imul
cltd
repnz
xchg
rol
in
adc
pop
test
ret
mov
cmpsl
je
inc
dec
jmp
xor
and
pop
shrl
mov
jp
in
jl
mov
inc
inc
sbb
insl
pop
mov
cs
sub
pop
fists
lret
aaa
dec
subl
jp
dec
es
sub
mov
inc
jnp
dec
push
sub
push
jae
lea
std
ds
iret
shll
loop
scas
aas
int3
push
jge
shll
stos
mov
addb
leave
je
mov
xchg
adc
or
xor
pop
cwtl
push
mov
xor
sbb
and
push
lds
sub
aas
dec
push
push
pop
cltd
sbb
push
sbbb
sti
sbb
lods
xchg
nop
iret
sbb
leave
movsl
repnz
out
inc
ljmp
fmul
mov
imul
std
out
inc
jmp
xor
dec
pop
sub
clc
adcl
ss
push
pop
push
sbb
jo
loopne
negl
ljmp
cmpl
push
test
movsb
js
hlt
pop
scas
stos
adc
adc
adc
bound
dec
push
push
mov
add
add
adc
fisttpl
sbb
push
dec
jo
dec
pop
ret
adcl
movsl
jg
cmc
out
cli
add
cli
es
insb
pop
dec
or
rorl
fs
fnstsw
hlt
std
add
test
jbe
lahf
push
je
aas
and
inc
dec
inc
imulb
insb
out
icebp
push
es
cmpsb
fimuls
or
insl
or
mov
xor
add
mov
dec
xchg
dec
jmp
cmc
rorb
jns
lret
outsb
test
out
push
pop
rcll
scas
mov
jl
pop
cmpsb
loopne
push
add
dec
das
scas
notb
dec
mov
lret
cmp
jo
cmp
iret
mov
adc
movsb
adc
lds
mov
xchg
es
stos
fisubl
mov
sbb
cli
sub
sub
add
mov
jo
mov
sti
ss
rorl
mov
pusha
into
popa
add
pop
sub
sbb
pop
lcall
jmp
in
xchg
cwtl
mov
rcrl
in
aam
cmp
enter
test
mov
jae
inc
adc
lods
out
sbb
ret
mov
and
xchg
sub
scas
into
and
adc
fdivs
mov
jnp
and
jl
push
bound
nop
aaa
jle
dec
jle
ds
inc
sub
hlt
or
push
rcll
fldt
push
mov
sub
sub
clc
xchg
pop
add
in
sbb
pusha
jge
rcl
es
adc
sub
xchg
icebp
test
sbb
mov
imul
or
lea
jp
cmp
ror
mov
jnp
test
adc
xor
mov
lret
aad
mov
in
mov
mov
cmpsl
rolb
xor
pop
mov
inc
gs
inc
cmp
xchg
dec
pop
xor
mov
loopne
lret
les
jno
push
xchg
mov
xlat
pop
mov
lcall
aad
cltd
sub
dec
faddl
jle
clc
mov
push
inc
mov
int
ftst
divb
and
push
or
subb
ficoms
cmpsb
sbb
iret
dec
jo
lret
cltd
pop
adc
mov
pushf
xlat
out
cmp
cwtl
scas
inc
shrl
dec
cli
pop
movsb
ds
mov
jp
cwtl
call
es
ds
xchg
cmpsl
sub
mov
bound
jg
add
adc
push
pop
pop
mov
cmp
stos
imul
or
repz
outsb
and
data16
inc
or
jp
ja
push
enter
pop
fisubs
sub
cmp
xor
or
pop
cmpsl
aam
mov
mov
mov
stc
inc
cmpsl
cmp
jbe
jne
test
pusha
in
push
push
faddl
jmp
shrl
or
enter
mov
leave
jb
add
adc
sbb
lret
cmp
movsl
or
out
scas
inc
xor
sub
fstp
mov
int
xor
cmp
std
mov
cld
gs
jge
sbb
rorb
int3
lret
loope
adc
popa
rorb
stc
fldt
sbb
pop
pop
adc
addr16
lret
jns
lahf
scas
add
ret
add
jbe
inc
out
out
mov
cmpw
sub
adc
or
xchg
or
xchg
push
jp
mov
lahf
push
fadds
dec
mov
int
in
std
and
movsl
mov
mov
sub
ljmp
mov
dec
and
in
das
pop
ret
push
mov
jl
xchg
popa
pop
or
cmpsl
fisttpl
mov
xor
outsl
push
div
cld
nop
dec
sbb
mov
sub
or
pop
mov
pop
test
hlt
outsl
fwait
imul
xchg
mov
adc
loop
inc
add
cmpsb
sbbb
mov
jg
cli
mov
cmp
mov
push
pop
pusha
sbb
jg
insl
cmpb
push
xchg
xor
xchg
xor
in
and
rclb
lret
js
test
add
mov
lcall
push
mov
cmp
or
inc
je
shlb
lret
sahf
out
test
pop
scas
inc
xor
insl
inc
mov
lea
push
cld
scas
xchg
dec
push
outsb
and
ja
inc
pop
mov
pop
mov
xchg
sub
std
xor
cmpb
test
sti
cmpsb
inc
shll
daa
xor
sbb
jnp
pop
jmp
mov
hlt
hlt
jg,pt
adc
mov
fisubs
jbe
add
pushf
pop
adc
stc
test
add
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
dec
and
add
bound
add
out
mov
insl
lock
xor
nop
and
pop
sub
shl
iret
rol
ljmp
mov
mov
fxtract
mov
sti
adc
lret
sbb
and
xchg
es
xor
add
sub
mov
rcll
dec
fstl
add
shrl
adc
cmp
out
pop
xchg
push
fxch
add
bound
add
lods
addb
les
inc
gs
cmpl
lret
les
rclb
pop
xor
cmp
push
inc
mov
cmp
sbb
push
push
int3
repnz
stos
or
pop
jp
and
dec
test
cmp
push
jp
stc
ret
lcall
jle
aam
sbb
sub
daa
add
add
add
pop
sub
sub
addb
into
add
bound
add
xor
iret
mov
movl
dec
sub
js
push
pop
add
outsb
loope
adc
fildll
adc
inc
sbb
rclb
enter
sbb
mov
pop
cmp
and
cmp
decb
into
push
loopne
adc
cltd
sub
enter
add
add
add
das
and
aam
aam
ljmp
je
inc
xor
bound
add
divw
mov
stc
mov
cwtl
adc
push
inc
je
push
sbb
repz
xor
insb
lss
imul
call
push
dec
and
sub
test
pushf
dec
jmp
jnp
cmc
rcll
sbb
rcl
aad
fs
jo
stos
cli
shll
hlt
adc
xchg
mov
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
dec
add
bound
add
push
or
scas
mov
pop
lcall
and
ret
cmp
bnd
ret
xchg
mov
fsubl
pop
shlb
movl
xchg
push
in
sarb
mov
xlat
sbb
mov
or
or
push
mull
mov
adc
pop
andl
in
add
add
add
out
lods
cmp
stc
stc
sti
add
add
add
cmpsb
pop
mov
cli
and
frstor
jns
fcoms
lea
scas
or
imul
movsl
pop
jecxz
adc
mov
pop
cmp
arpl
jl
dec
out
addr16
or
pop
pop
mov
dec
es
out
and
jg
push
fwait
icebp
insl
jno
mov
pop
add
add
add
push
xor
gs
aaa
push
pusha
rol
iret
add
bound
add
hlt
pop
add
jne
and
cmpsb
repnz
jo
test
add
pop
js
lahf
outsl
lock
sub
jl
pop
lods
les
movl
sbb
pusha
imul
es
push
loopew
cmp
pop
adc
bound
sti
cld
add
lret
push
lds
test
add
add
sub
das
jle
jg
imul
lds
add
bound
add
add
pop
jg
std
call
add
fistpl
jmp
out
mov
inc
outsb
sbb
cmpsl
ja
ficoms
pop
adc
sub
push
scas
or
cli
shl
pop
les
dec
mov
sbb
pop
pop
lods
jno
push
sarl
pop
pusha
rsqrtps
inc
jge
mov
add
add
add
and
mov
mov
imul
bound
add
cwtl
shl
loopne
mov
lds
mov
mov
add
sbb
loopne
addr16
ds
imul
inc
mov
aas
loop
ja
mov
pop
dec
popf
movl
pop
das
movsb
in
mov
pop
into
push
inc
and
fimull
mov
pop
in
pop
imul
add
add
ret
or
ret
lods
sub
mov
stos
jecxz
add
add
sbb
lods
lock
sub
push
add
or
repnz
std
out
outsl
inc
nop
ds
mov
test
cmp
ret
iret
push
inc
ja
cli
xlat
jp
leave
loopne
ret
fstpt
inc
fldenv
nop
cmc
cltd
or
loop
mov
in
rolb
add
add
fld
add
ror
outsl
clc
rclb
pop
cltd
or
add
add
ret
sahf
push
add
cmpb
fscale
cltd
and
fs
xorb
mov
mov
and
js
jae
jns
xor
hlt
cli
pushf
cmp
icebp
mov
mov
xchg
cmpsl
int
stos
lcall
mov
mov
jp
cltd
mov
cmp
bound
add
add
add
popa
pop
lock
out
repz
mov
ret
in
repnz
inc
outsl
in
add
add
inc
push
jecxz
and
sbb
cmp
test
loop
pop
or
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
inc
add
sbb
add
or
dec
xchg
dec
scas
dec
ds
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
mov
sbb
add
push
inc
add
sbb
inc
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
add
sbb
inc
add
inc
add
or
add
sbb
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
scas
sbb
sbb
add
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
mov
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
jge
xchg
xlat
add
bound
add
xchg
nop
mov
test
aaa
cld
or
and
cmc
out
fidivl
sbb
mov
dec
and
shl
pop
lret
pop
jg
jle
push
inc
jmp
cmpsb
jne
pop
lret
jns
popf
jns
outsb
cmp
test
shll
aam
dec
and
pop
mov
add
add
add
mov
push
mov
xlat
push
jl
adc
imul
add
add
hlt
xor
rorb
push
cmp
push
push
jne
movl
enter
push
mov
sub
in
pop
jb
sub
xchg
and
sub
mov
lods
jae
inc
dec
jmp
xchg
push
aaa
xlat
ljmp
push
dec
xlat
daa
mov
mov
mov
mov
fstps
cmova
push
mov
add
add
mov
jg
ljmp
push
xchg
int
add
bound
add
jnp
or
std
leave
lcall
xor
fstpt
aaa
adc
pop
xlat
addb
shll
lock
daa
pop
adc
sub
out
mov
dec
pop
xor
ljmp
aaa
jmp
push
ja
in
pop
xor
mov
sbb
add
add
cmp
in
fimuls
test
das
das
fadds
add
add
pop
ret
lcall
rorb
mov
cmc
lea
jnp
lods
rcrb
xchg
les
inc
push
cmp
adc
popa
adc
popl
fwait
movsl
push
inc
subl
pop
notb
jl
outsb
int3
les
xor
pop
scas
mov
pop
push
or
mov
aam
out
test
cmpsl
mov
add
add
add
fnstenv
std
negb
sub
out
dec
fdiv
xchg
fadds
add
add
in
mov
daa
lods
adc
cmp
fwait
sub
pop
add
ljmp
pop
cld
inc
int
pusha
xlat
fdivrl
mov
lcall
shl
cwtl
mov
aas
mov
ds
addb
andb
call
test
jmp
dec
sbb
mov
add
add
add
fidivl
xchg
mov
scas
fbstp
inc
mov
lcall
add
lret
or
xchg
mov
loop
mov
ret
aas
inc
cmp
sbb
cmp
fs
in
add
subb
mulb
xor
dec
call
shll
lret
ficoml
inc
in
mov
add
stos
sbb
loope
lahf
xchg
cs
cwtl
sub
add
add
add
add
pop
sub
jg
flds
add
add
or
push
imul
js
ret
sub
mov
std
clc
or
mov
mov
xchg
mov
mov
mov
insl
dec
ja
ja
test
mov
sub
push
inc
push
sarb
xchg
pop
and
or
lret
test
rolb
daa
repnz
add
add
mov
aam
xor
and
mov
add
bound
add
push
pop
push
dec
pop
cmpsl
sarb
push
stos
jb
ds
cld
ret
push
call
mov
sbbl
mov
push
movsb
mov
sub
sbb
fcompl
dec
lcall
iret
xor
push
aad
push
lret
and
and
xchg
xor
add
subl
jnp
add
add
add
push
add
mov
out
sbb
sbb
add
bound
add
mov
xor
jg
add
cmp
repz
add
je
mov
cmp
ficoml
or
fisubl
jns
pop
outsb
popf
push
mov
stos
adc
aad
cltd
add
movsl
xlat
xchg
out
mov
ds
mov
push
roll
add
add
add
mov
jmp
fimull
sti
pop
cli
jnp
add
bound
add
into
in
clc
inc
lds
inc
in
test
cmp
xor
xchg
pop
dec
jbe
push
stos
in
je
mov
xchg
dec
pop
loop
rol
scas
cwtl
pop
or
stos
pop
icebp
sbb
cmc
mov
pop
mov
push
gs
mov
jl
aas
dec
sub
shll
insb
mov
push
add
add
add
pop
inc
pop
iret
pop
aad
ss
dec
pop
vmovdqu
fiaddl
add
add
mov
dec
sub
or
insl
xor
addr16
mov
jb
mov
dec
les
ja
xchg
out
pusha
mov
xchg
mov
jbe
cs
outsb
push
sarb
jl
mov
popf
sbb
mov
mov
gs
add
fwait
test
jg
add
jns
aas
fildl
add
add
lahf
push
and
dec
nop
sbb
cmp
cs
cmp
push
fwait
lea
inc
out
out
fldenv
xor
cli
add
xor
pushf
orl
mov
loopne
xor
imull
mov
dec
out
xlat
mov
xlat
mov
xor
adc
sub
mov
add
add
lock
jle
repz
jmp
add
add
xor
mov
add
mov
fsubs
and
adc
mov
push
ljmp
add
fbstp
aas
rcrb
adc
ss
mov
sub
push
es
mov
call
xchg
imul
loope
jno
push
jbe
pop
orl
mov
add
add
add
cmc
adc
adc
mov
lds
add
add
bound
add
sbb
ror
loopne
scas
aam
or
test
mov
out
push
mov
es
ja
and
shlb
popf
test
mov
outsb
leave
push
xchg
push
mov
inc
xchg
push
test
lret
mov
cmpsb
hlt
and
xlat
mov
pop
stos
leave
adc
loope
int
mov
push
sub
add
add
add
cmp
mov
rcrb
push
movsb
faddl
add
add
std
jns
xchg
xchg
add
cwtl
scas
rorl
cmp
pop
int
repz
cmc
inc
push
cld
pop
jnp
or
dec
arpl
inc
or
dec
sti
sbb
jmp
and
push
or
ds
fs
cmp
cmp
inc
jnp
sub
mov
add
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
add
faddl
add
add
lcall
cld
pop
add
ret
dec
clc
sub
gs
int
xchg
jmp
xor
sub
mov
ds
push
or
pushf
aaa
insb
mov
jge
movsl
add
aas
jp
fcoml
cmp
or
xchg
lods
lea
std
scas
add
add
add
int
xchg
inc
cmc
sti
fildll
jmp
fldl
add
add
sub
les
rcrl
and
lcall
ja
sbb
aad
arpl
das
lret
sbb
and
shr
cmp
mov
js
pop
sti
imul
in
or
mov
sub
mov
xor
pop
ficompl
mov
xchg
adc
add
add
add
adc
testl
push
add
add
pushf
das
xchg
in
shrl
and
sarl
add
xor
mov
and
xrelease
dec
and
mov
mov
idivb
mov
cmp
ja
into
mov
xchg
scas
adc
add
and
push
leave
add
add
add
daa
push
imul
test
scas
in
fldl
add
add
cld
xchg
dec
add
and
cmpl
pop
fisubrl
stos
mov
dec
pop
push
outsl
inc
imul
push
inc
add
pop
fsub
jl
pushf
push
insb
push
mov
nop
pop
lea
nop
pop
cmp
popa
sub
dec
sub
scas
cwtl
scas
test
push
inc
push
insb
inc
nop
repz
add
add
add
jne
jg
clc
cs
push
and
add
add
push
push
lods
fdivl
dec
mov
popa
push
mov
push
out
in
inc
outsw
test
ret
cmpb
ficoms
bswap
cmc
imul
cld
out
push
mov
pop
cmp
in
lret
xchg
pushf
pop
dec
adc
test
inc
clc
dec
jb
sbb
xor
mov
xchg
add
add
add
or
dec
mov
je
lcall
add
bound
add
jne
daa
xchg
int
sub
sub
sbb
outsb
lods
pop
das
test
and
movsl
sbb
in
mov
jp
insl
cmp
fsubr
imul
adc
cmp
jne
out
push
outsl
add
les
stos
sub
je
clc
imul
fidivrs
add
add
add
push
mov
mov
xchg
adc
push
mov
bound
add
aas
push
mov
or
pop
fs
push
stc
sbb
and
inc
pusha
pop
inc
xor
mov
sub
icebp
sbb
add
dec
pop
movsb
rclb
in
adcb
sbb
in
cmp
pusha
fistl
flds
ds
aad
dec
cmp
fnstsw
jmp
mov
add
add
fisttps
push
cmpsb
jecxz
insb
dec
roll
add
add
test
mov
and
jp
xorb
mov
mov
or
add
repnz
movsl
push
add
outsb
add
xor
dec
pop
sub
xor
ss
adc
adc
jecxz
xchg
inc
push
sub
outsb
js
clc
sub
inc
inc
aas
push
add
mov
adc
add
add
add
lahf
arpl
std
jle
out
sbb
mov
roll
add
add
and
cli
mov
movsb
xor
mov
and
push
ret
ljmp
xor
push
and
mov
or
fmull
cld
xor
adc
jne
pop
sbb
addr16
mov
ljmp
cmp
adc
gs
imul
sub
loope
add
xor
insl
add
add
add
jo
and
cmp
jne
rorl
add
bound
add
and
add
mov
sarb
sbbb
push
fwait
pop
repnz
inc
mov
test
mov
lahf
ret
test
mov
stos
push
leave
sbb
repz
or
adc
loopne
push
inc
imul
imul
xchg
loopne
push
cmp
aad
sub
int
mov
or
add
add
add
popf
aam
ds
add
add
bound
add
xor
push
push
jns
mov
movsb
sbb
enter
jmp
aam
and
idivb
mov
adc
and
shrl
inc
jge
push
xlat
lcall
imul
loope
pop
cli
cmp
push
sbb
add
negl
addr16
roll
sbb
xlat
push
fnstenv
xorl
add
add
add
mov
jbe
hlt
mov
and
cmpsb
mov
test
rcl
add
bound
add
lret
push
inc
push
dec
aam
xchg
scas
cmp
mov
dec
ret
mov
in
sbb
mov
add
dec
loope
push
movsb
pop
add
sub
sbb
test
push
movsb
jmp
inc
dec
mov
sbb
adc
cmp
mulb
sbb
imul
push
jae,pn
dec
sub
or
add
add
ror
mov
sub
out
cli
into
inc
cmp
add
add
mov
and
push
ds
cmpsl
dec
mov
mov
lret
mov
push
pop
adc
cmp
loop
je
les
pop
mov
call
push
xchg
push
insl
sbb
mov
jmp
sahf
cmp
jl
sbb
lods
cmp
pusha
inc
fs
mov
gs
add
add
fucomi
outsb
and
pop
mov
xchg
roll
add
add
icebp
stos
daa
inc
mov
int
xor
inc
xor
push
stos
and
aad
jmp
loop
jp
mov
jno
jle
xchg
dec
js
xchg
sbb
and
jge
inc
dec
loopne
cmp
lds
js
aad
push
jmp
pop
fyl2x
add
mov
mov
shlb
fistl
inc
sbb
add
add
add
mov
and
xor
roll
add
add
jbe
jae
sti
xchg
cli
push
mov
imul
or
add
and
fs
inc
jnp
jmp
mov
mov
dec
sub
lret
andl
daa
ja
test
jl
addr16
divb
push
push
andl
jne
addr16
jo
or
gs
cltd
mov
repz
adc
add
mov
and
jg
call
into
inc
mov
sahf
cmp
add
bound
add
cmpsb
add
loopne
out
add
add
fidivrs
inc
push
xchg
xchg
addr16
mov
test
inc
je
lahf
pop
rorb
adcb
insb
xchg
gs
pop
adc
insb
pop
out
sbb
shrl
imul
lret
aad
rcrl
mov
add
add
sub
sub
push
xchg
mov
aam
add
add
adc
iret
and
pop
inc
lcall
andl
ljmp
xchg
pop
jb
sahf
es
and
outsl
int3
insl
pop
add
roll
push
xor
mov
test
pop
push
push
and
adc
add
pop
jae
cmp
pop
mov
aad
push
add
add
dec
aas
int3
sbb
out
loopne
lods
imul
das
pop
aad
add
add
fs
pushf
jmp
dec
adc
in
mov
aas
push
mov
inc
stos
pusha
pop
scas
cmp
push
and
pop
ret
movsb
jl
push
sbb
mov
ds
or
mov
mov
jnp
fmull
lock
outsb
scas
adc
fsincos
cmp
adc
movsl
xchg
subl
add
test
fildll
insb
stc
push
sahf
adc
add
sub
mov
xor
int3
jno
mov
adc
jae
pusha
add
mov
in
repnz
iret
test
mov
stos
xor
negb
adc
cwtl
movsl
shlb
rorl
push
out
ja
scas
or
loop
add
push
mov
sub
jle
stc
fwait
xchg
ret
insl
xchg
jbe
cmp
add
add
add
lods
fcomi
sarb
add
cmpsl
pop
mov
bound
add
mov
or
addps
data16
cmc
imull
pop
mov
hlt
mov
push
outsl
lock
mov
test
push
mov
sahf
mov
shll
daa
rcr
sbb
ja
fbld
add
jno
fdivrl
and
cmp
leave
imul
add
add
or
ja
dec
cmp
dec
loop
std
stc
inc
add
bound
add
mov
sbb
jne
mov
adc
daa
aad
jge
cmp
mov
cltd
std
pop
orb
xor
dec
sbb
sub
mov
lods
call
xor
stos
xchg
cmpsl
cwtl
and
add
mov
popf
inc
adc
mov
add
mov
pusha
mov
data16
add
add
add
arpl
jge
mov
daa
pop
inc
mov
cmpsl
add
bound
add
inc
in
fimuls
sub
ss
mov
cmp
sub
xor
std
add
jbe
pop
iret
fists
das
push
mov
mov
call
jne
inc
repz
lret
ret
loopne
mov
popa
xchg
sbb
adc
pop
lods
xchg
in
pop
and
push
aas
loop
add
add
add
ss
xor
and
mov
add
add
push
adc
mov
push
dec
mov
fs
lret
push
pop
fdiv
movsl
int
adc
cmpsb
and
fidivs
adc
aad
pusha
adc
jl
daa
cmp
sub
dec
testb
sub
aam
cli
jge
std
cs
or
push
inc
xor
pop
jmp
popa
mov
cmovs
add
and
add
out
mul
aaa
cmc
xchg
lcall
mov
add
bound
add
mov
in
adc
jno
fstl
inc
sbb
ja
dec
lods
pop
aad
ss
inc
push
sub
movsl
jp
mov
and
sub
lret
bound
mov
movsl
mov
aad
mov
pop
mov
sub
jl
xor
or
mov
lcall
in
lock
add
add
aad
out
fucomip
ss
cmp
mov
bound
add
push
movsb
addl
sbb
out
xchg
dec
add
dec
push
sub
inc
shr
xchg
movsb
mov
pop
push
testl
dec
sarl
sbb
mov
or
xchg
sub
dec
clc
jbe
add
out
inc
push
xchg
imul
mov
push
push
and
jecxz
add
sbb
push
mov
add
outsb
jbe
lret
outsb
negb
xchg
xchg
jne
add
bound
add
mov
push
stos
arpl
pop
xor
cmp
lods
pop
inc
or
in
xor
or
lahf
cmc
mov
call
push
pop
nop
fisubl
xlat
scas
xchg
in
pop
call
lcall
jecxz
dec
cltd
clc
inc
fwait
loop
add
outsl
pushf
jae
mov
or
push
add
add
add
cmp
paddsb
nop
rcl
into
and
bound
add
call
jmp
outsb
popa
jns
xor
push
fisttps
sbb
sub
jns
fdivr
enter
xor
sahf
fcoml
es
xor
jg
es
push
mov
xchg
addl
mov
mov
lods
cli
inc
mov
pop
scas
and
popa
push
mov
std
cmpsb
jle
dec
add
add
add
xchg
cmpl
push
loopne
lcall
add
bound
add
pop
insl
pop
ror
inc
insb
push
jne
imull
je
xchg
loop
test
pusha
daa
leave
xchg
xchg
aas
sub
or
mov
cltd
mov
ja
test
lret
mov
jae
arpl
rcrl
jns
xchg
ficomps
test
xor
dec
les
testl
iret
push
mov
and
add
add
add
fincstp
shl
frstor
pop
dec
repz
add
add
pop
adc
in
jmp
inc
pop
jb
dec
jne
xchg
mov
test
sahf
xchg
mov
add
scas
sbbb
jmp
inc
ficomps
xchg
mov
out
and
out
mov
lret
scas
fstpt
popa
cmpsl
and
dec
outsb
int
add
add
add
aam
fnstsw
out
fcmovu
in
mov
add
loopne
add
add
out
and
jge
inc
aam
dec
jl
nop
push
xchg
xchg
cltd
add
pop
mov
xchg
jae
and
cmp
sbb
test
stc
outsb
cmc
mov
sub
xor
mov
cmp
mov
hlt
pop
push
add
popf
xchg
mov
aaa
add
xor
add
add
add
add
add
sbb
inc
jecxz
mov
aaa
pop
loope
add
add
cmp
ror
fisubrs
popa
mov
aad
adc
push
arpl
or
sbb
js
jmp
jecxz
int3
mov
mov
inc
insb
in
xchg
inc
dec
dec
mov
aad
stc
push
and
aaa
mov
les
lret
mov
add
outsb
push
or
mov
add
add
mov
icebp
and
adc
shl
add
add
stos
jg
in
inc
data16
xchg
mov
mov
pop
sbb
pusha
and
push
data16
push
or
into
aas
je
jecxz
mov
and
adc
inc
arpl
mov
fiadds
and
outsb
inc
add
call
loopne
mov
and
ds
icebp
xor
xor
add
add
add
adc
repz
das
cli
fists
dec
es
jne
aaa
sbb
bound
add
push
mov
or
popa
push
das
mov
cmp
cmc
dec
jne
inc
in
sub
inc
lea
pop
call
jecxz
int3
dec
andb
or
jge
sub
jle
add
test
cli
push
sbb
dec
mov
inc
xor
inc
add
in
ficoml
fs
repz
add
add
add
adc
push
adc
cwtl
out
inc
or
test
add
bound
add
sbb
out
scas
dec
scas
stos
push
jmp
cmp
jmp
adc
movsl
outsl
mov
inc
rorl
je
pop
sub
or
inc
mov
pop
dec
and
pop
mov
sar
out
loopne
pop
adc
clc
imul
sub
lret
leave
mov
add
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
bound
add
add
add
add
add
add
add
pop
cmp
add
add
add
inc
iret
add
outsb
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
