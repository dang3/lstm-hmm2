add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
loop
jle
jle
fidivrl
jle
cmp
fld
ja
or
sbb
bswap
adc
sbb
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
mov
je
into
lods
and
sbb
subl
stc
cltd
ljmp
pop
into
mov
sbb
adc
lods
jmp
push
xchg
add
adc
das
dec
xor
dec
out
and
js
adc
lahf
cs
sti
es
or
or
mov
repz
xorl
fnsave
fstpl
and
inc
dec
repnz
sub
mov
and
pop
aam
stos
fnstenv
or
movsl
and
cwtl
and
mov
pop
popf
mov
jnp
lea
adc
lock
mov
cmp
sub
clc
cmpsb
dec
outsl
cmpsl
jb
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
addr16
aam
fidivrl
jle
jg
jle
sbb
roll
sub
pusha
xchg
adcl
cli
adc
xchg
add
mov
dec
mov
pop
mov
sbbb
mov
nop
movsl
ja
jo
sub
cmc
hlt
jg
dec
cmpsl
cs
fadd
and
imul
fisubl
loope
rclb
add
mov
sbb
add
cmpl
test
jge
pop
pop
loope
mov
ljmp
mov
mov
stos
insl
cmp
iret
fdivrl
std
jmp
adc
clc
mov
outsb
jo
pop
mov
aaa
push
cltd
les
mov
mov
jg
ds
stos
icebp
call
insb
jge
inc
pushf
fiadds
mov
push
or
dec
pusha
call
popa
mov
es
fcompl
xchg
call
js
mov
or
pusha
xchg
loopne
shll
pop
sbb
cmpsl
mov
aas
out
call
push
lret
enter
jle
push
cs
mov
add
insb
sbb
sti
rolb
mov
jg
push
jp
insb
sub
frstor
push
mov
ds
pop
jo
jne
mov
dec
std
cmp
xchg
je
push
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
cld
mov
cmpsb
jl
jle
jg
jle
repnz
movsl
lcall
pop
idivl
loopne
jno
cwtl
sbbl
insl
std
fldenv
into
dec
fstpt
aas
repnz
std
loopne
dec
das
arpl
aas
mov
sub
xchg
gs
sarb
add
sub
negl
lret
jle
das
push
push
adc
or
out
sub
ret
sub
pushf
inc
inc
cmc
or
insb
por
pop
scas
rcrl
push
or
xchg
test
cld
cmp
leave
test
mov
or
fwait
mov
repz
mov
mov
fidivrs
jne
fldenv
mov
adc
iret
mov
mov
sub
xor
mov
inc
faddl
push
stos
mov
popl
add
pusha
inc
fistps
aas
fsts
add
or
lcall
movsl
pop
stos
adc
hlt
or
ret
jbe
inc
rcll
jp
push
sbb
add
dec
or
and
jge
push
push
add
outsl
ja
cs
mov
add
and
and
ljmp
fcoml
insb
filds
aas
add
jo
ja
int3
inc
jecxz
xor
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
mov
jle
fidivrl
jle
mov
lock
pop
xor
dec
call
lock
push
ud2
sbb
js
jge
inc
ret
mov
pop
mov
cltd
sbb
js
rcrb
aas
mov
dec
sub
mov
add
xor
mov
mov
mov
and
scas
cmp
mov
test
dec
pop
fnstenv
sbb
xor
scas
mov
or
call
popf
lcall
mov
mov
test
push
mov
push
fldl
lcall
dec
pop
aas
adc
repz
ret
fidivrl
ljmp
arpl
lahf
les
push
psubusb
out
xchg
add
insl
pop
flds
fwait
push
or
jmp
pop
push
into
in
xchg
sahf
ljmp
jecxz
adc
jp
mov
xor
mov
bound
mov
icebp
inc
cld
and
ljmp
insb
push
jecxz
sub
and
push
test
aaa
dec
mov
mov
sbb
popa
adcl
jne
pop
mov
jmp
xchg
xchg
fiadds
sub
dec
dec
aaa
rorl
or
inc
inc
add
add
add
or
add
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
mov
jnp
sbb
jl
mov
or
dec
sbb
div
jbe
fwait
lret
cmpsb
and
in
ja
mov
mov
outsl
fs
outsl
mov
in
dec
xlat
push
pop
cmpsb
ds
clc
daa
push
mov
inc
add
push
xchg
addb
int3
jg
repz
call
neg
loop
inc
sbb
insl
pop
dec
jno
xchg
fwait
mov
push
out
dec
jo
hlt
mov
sbb
mov
and
mov
push
xor
push
hlt
repnz
data16
or
pop
mov
adc
icebp
inc
xchg
push
mov
loopne
xchg
popa
jnp
sub
out
mov
pop
pop
loop
sti
inc
xor
dec
aad
jo
and
pop
cmp
dec
jnp
pop
vrcpss
xchg
dec
cmp
jns
mov
push
cs
jnp
adc
pop
dec
subb
inc
push
fwait
icebp
ret
xchg
movsl
std
pop
sbb
push
push
xchg
pushf
insl
or
into
int
mov
inc
jnp
add
mov
out
scas
gs
sub
enter
xor
xchg
pop
adc
cmp
mov
push
sub
xchg
mov
adc
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
sti
dec
jo
jle
jg
jle
xchg
push
in
aad
jo
insl
push
xchg
xor
ficomps
adc
pop
sub
inc
mov
sub
xacquire
push
mov
pop
shll
mov
rcpps
mov
imul
lds
mov
sbb
fcompl
in
dec
je
lret
mov
mov
mov
xor
cmp
xchg
rclb
xor
in
jmp
ficoms
dec
or
push
arpl
push
arpl
loopne
jg
dec
out
fstl
lcall
push
jmp
xchg
loope
pop
test
leave
fcoms
xchg
imul
xor
dec
or
leave
pop
jne
jl
cmp
jnp
pusha
cmp
sub
adc
jmp
add
cmpsb
lods
push
sbb
das
mov
jge
jmp
std
aas
js
sub
mov
and
cld
dec
cmpsb
std
dec
cld
fstps
or
fimuls
push
xor
in
and
sahf
fimuls
fidivl
xor
fisubrl
bound
and
add
dec
stos
inc
pop
dec
ss
and
loopne
dec
in
ds
sub
mov
dec
fists
jne
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
xchg
mov
fidivrl
jle
mov
cwtl
js
jb
xchg
mov
adc
jb
sbb
stos
xor
or
adc
cmp
lock
adc
fistps
mov
je
les
enter
dec
int
jae
in
mov
cli
mov
mov
sahf
push
cltd
dec
sub
xchg
push
popw
mov
call
iret
cmp
sub
js
xor
outsb
push
clc
scas
mul
notb
pop
mov
inc
cmp
xchg
inc
ret
fs
xchg
fstl
adc
ret
sahf
test
decl
fs
and
mov
ja
lcall
frstor
mov
push
test
dec
pop
repz
pop
imul
hlt
mov
mov
lock
add
or
xorb
jns
lcall
cld
mov
lcall
ficoms
imul
lds
sub
push
mov
add
xor
mov
jno
shrl
mov
mov
mov
sbb
mov
cltd
sbb
push
push
push
aam
lds
add
jecxz
loopne
push
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
lods
popf
bnd
jle
jg
jle
cmp
jecxz
imul
out
fisttpll
imul
es
sbb
neg
xor
iret
cs
adc
iret
shll
pop
push
or
pop
fstpl
scas
lock
jg
pop
adc
or
push
bound
xlat
movsb
jmp
jmp
mov
out
cmp
and
jl
mov
divl
mov
das
test
cmp
add
sbbl
xchg
pop
pushl
mov
cmp
add
lds
stc
outsl
imul
sbb
fwait
jp
lret
xchg
je
fcomps
jns
and
fs
pop
in
fistl
push
ficoms
mull
into
rcrb
dec
pop
das
xchg
das
cltd
push
lret
and
lock
in
rorl
cmpsb
stos
mov
in
jbe
lcall
out
sub
lahf
push
jp
lea
mulb
mov
dec
mov
push
or
add
in
movsl
mov
andb
mov
pop
ja
sub
cmp
repz
popa
jne
cmp
xor
ja
push
inc
adc
imul
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
add
sbbl
jle
mov
lods
das
imul
shll
daa
xchg
inc
popf
inc
xchg
fsubrl
sub
dec
xor
adc
bound
xchg
cltd
or
jle
jbe
loope
adc
inc
jb
push
and
and
pop
movsl
mov
adc
sub
loop
inc
add
inc
sysret
ljmp
dec
fistl
fstps
mov
into
jb
xor
daa
out
je
pop
movl
mov
pop
pusha
out
fs
adc
rclb
mov
jne
dec
mov
sub
or
mov
punpckldq
add
mov
pop
jo
jnp
mov
push
idivb
stc
pop
in
aaa
push
mov
inc
sbb
out
loope
push
and
imul
out
imul
or
and
cltd
xchg
call
rorw
xchg
pop
std
mov
outsb
mov
push
orb
lret
cmp
stos
push
not
mov
pop
test
inc
cmpsl
xor
add
pop
cmp
mov
sahf
mov
mov
arpl
and
pop
sbb
icebp
mov
add
aas
sub
mov
test
or
das
pop
leave
mov
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
push
or
cmpsb
cmp
jle
fidivrl
jle
popf
popf
arpl
pop
or
ja
jl
movsl
ficoml
lret
mov
sub
popf
mov
faddl
mov
and
or
in
xchg
fstps
inc
loop
and
popf
mov
out
mov
fidivl
sbb
or
sbb
or
dec
adc
dec
subb
out
and
rolb
repnz
push
push
dec
dec
sbb
je
rcr
adcl
in
push
jbe
movsl
nop
dec
mov
enter
lahf
add
adc
or
imul
fildll
test
inc
rclb
scas
lods
loop
popf
and
xchg
decl
loop
icebp
into
test
push
and
aam
jmp
jno
psllq
inc
data16
rcll
out
xchg
push
push
insl
mov
out
jae
fbld
fwait
shrl
push
mov
xchg
mov
mov
movsb
cli
mov
aam
cmp
pop
imul
pop
push
cmpsb
mov
pop
leave
shll
or
add
jae
xchg
stos
add
inc
lods
jg
adc
dec
jl
addl
dec
mov
or
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
mov
jle
and
jle
int
out
adc
imulb
cmpsl
push
fstl
into
imul
cmp
scas
cmp
cli
js
mov
aad
jae
mov
xchg
mov
mov
sbb
cmpsb
mov
test
xor
addr16
push
int3
sub
jge
or
push
jge
aam
imul
pavgb
loop
xchg
ret
sub
sub
pusha
cmpsl
add
xchg
xchg
scas
int3
test
sub
sti
rcrb
in
loop
inc
shll
sbb
ret
jb
sub
push
test
sti
pop
add
pop
enter
into
adc
outsb
mov
push
or
mov
stos
scas
pop
out
adc
jbe
loope
mov
fildl
xor
lods
xchg
dec
adc
lret
adc
rcrl
cmpsl
and
cmp
stc
daa
out
je
adc
sbb
pushf
lds
cmp
add
xor
mov
xor
dec
les
fwait
mov
pushf
sahf
repnz
mov
ss
sub
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
mov
dec
iret
dec
or
and
jle
add
push
xchg
dec
jnp
sbb
cmp
cmp
add
mov
mov
rcrl
xor
lock
mov
cs
jp
and
xchg
jb
inc
xchg
push
bnd
pop
cld
pop
sub
push
movsb
lahf
jbe
fnsave
scas
std
push
xor
mov
dec
cltd
inc
jmp
in
lahf
faddl
ficompl
add
sub
dec
jbe
xchg
clc
add
cmpsl
jle
cmpsl
insl
addr16
mov
cli
jmp
mov
cmp
lcall
inc
ficomps
xchg
inc
jns
test
stos
xlat
nop
into
in
mov
fisttps
sbb
dec
pop
lock
in
dec
mov
dec
pop
mov
fidivl
lret
jnp
xor
loopne
mov
xor
xchg
push
pcmpgtw
lcall
and
mov
roll
ret
inc
lock
cld
cltd
movsb
push
addr16
lahf
ror
gs
dec
mov
cmc
sub
dec
or
sub
xchg
xchg
es
add
data16
ret
jp
push
out
mov
inc
jmp
or
mov
or
hlt
jae
mov
and
jle
dec
fdivl
add
dec
icebp
icebp
fsubrs
mov
inc
daa
js
push
lds
adc
mov
sub
cwtl
movsbl
insl
pushf
xor
lcall
stos
jb
adcl
jo
push
adc
pusha
fcmove
add
pop
add
ljmp
mov
pop
jp
divb
mov
cmpsl
test
mov
xchg
insl
jl
xchg
int3
push
add
sahf
add
push
or
mov
scas
sub
int3
push
push
mov
in
jl
add
outsl
icebp
in
inc
lock
lock
or
sbb
and
or
push
jg
bound
decl
push
lcall
fwait
hlt
mov
inc
dec
aaa
mov
ficompl
fcomps
sbb
imul
pop
inc
or
adc
mov
js
popf
sbb
jns
in
fisttps
jp
mov
scas
adcb
sub
xchg
push
pop
daa
adc
imul
popa
shll
out
cltd
jns
xlat
mov
dec
and
mov
inc
cld
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
in
pop
and
jle
and
jle
mov
cld
or
mov
cmp
xchg
ljmp
and
mov
add
test
inc
addr16
pop
sub
xchg
jmp
clc
adc
push
leave
sbb
insl
xor
into
mov
add
fisubrs
mov
inc
and
xchg
shl
out
cmp
dec
jo
test
outsl
pop
xor
ds
mov
push
push
mov
push
loopne
xor
ds
in
insb
fimull
push
icebp
rcrl
and
mov
fcompl
sahf
in
inc
in
cmpsl
push
xor
mov
lea
xchg
mov
adc
add
pop
mov
ret
stos
pop
add
and
and
ds
je
cmp
mov
clc
outsb
xchg
fists
xor
aam
cmc
jnp
outsb
outsl
add
xor
or
push
leave
ds
call
js
ficoml
mov
mov
jl
sahf
lock
push
adc
lods
dec
cli
jmp
push
push
sti
and
sub
roll
sldt
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
jecxz
int3
test
push
mov
stos
imul
fdivp
fs
sar
inc
testb
enter
dec
pop
push
dec
test
out
lret
xor
sbb
outsl
mov
aam
movsb
and
leave
fisttpl
inc
fucom
ficoms
insl
jp
pop
lret
jns
mov
mov
xchg
or
xchg
jp
pop
and
xor
and
sbb
mov
scas
scas
aas
mov
test
sbb
loop
ds
lahf
jl,pn
int
cmp
inc
daa
mov
and
inc
fmull
mov
push
adc
sub
mov
mov
sahf
mov
int3
push
jge
arpl
and
loop
mov
test
repz
jecxz
ljmp
inc
mov
pop
push
xor
sub
sti
dec
mov
jp
mov
bound
dec
add
fisubl
mov
in
or
and
sub
shll
fadds
inc
outsb
push
cwtl
sub
out
mov
xchg
sub
stc
add
imul
mov
jmp
jbe
xchg
call
adc
push
jle
jg
jle
std
adc
leave
inc
cmp
clc
xor
into
adc
lods
dec
xor
shrl
adc
jg
jne
xor
cmp
lahf
call
aam
or
in
pop
xor
jge
outsl
call
cmpsl
inc
cwtl
xchg
daa
fadd
fstl
sub
nop
cli
imul
xor
and
cmpsb
mov
loopne
in
jle
ds
clc
enter
jns
pop
shrb
dec
mov
jne
jne
or
sahf
sahf
data16
cmpsl
in
push
outsb
ja
dec
sahf
shl
xlat
inc
dec
lock
lahf
xor
add
cmp
dec
cmp
out
and
gs
and
repz
cli
scas
push
jle
sbb
push
xchg
fisubrl
push
in
testl
xchg
cld
mov
cmc
cs
sbb
adc
ljmp
insb
mov
sbb
and
xchg
inc
js
mov
dec
mov
ds
jmp
pushf
jecxz
jnp
adc
adc
or
dec
add
fdivl
push
fwait
cmovae
pop
repz
xor
clc
cmp
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
mov
add
and
jle
pop
mov
cwtl
inc
mov
divb
pop
lcall
jl
jnp
adcl
rcll
movsb
sub
ss
push
sbb
push
pop
mov
mov
lret
pusha
test
push
jno
cmovg
and
jbe
push
out
jecxz
insb
jp
daa
fsubrl
push
cmp
push
inc
push
sarb
sub
mov
adc
push
fbld
lods
jge
jecxz
mov
dec
cmp
scas
shl
sub
adc
xchg
outsl
aad
dec
add
dec
inc
mov
or
mov
adc
scas
sahf
inc
jg
jnp
lahf
movb
push
pop
dec
mov
bound
popl
fnstcw
aas
ds
fwait
repnz
cmp
movsb
movsl
rorl
fisttps
push
inc
pop
mov
jp
pop
mov
enter
xchg
sbb
lret
daa
inc
cltd
mov
repnz
fldcw
pop
outsb
movsb
cs
sub
xor
mov
xor
and
arpl
lock
fbld
dec
cmp
les
push
rol
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
mov
mov
and
jle
out
add
out
cmp
sub
sub
inc
xchg
shll
add
aam
les
sti
pop
xchg
mov
dec
frstor
ss
aaa
jb
sbb
shrb
add
ret
fldl
shrb
dec
dec
jp
fwait
push
mov
pop
ja
push
mov
out
pop
fdivr
sub
mov
inc
adc
mov
les
mov
ss
add
shlw
and
xor
pop
and
sbb
lret
movsl
or
cmpsb
rolb
jp
push
loopne
sub
in
sbb
dec
push
add
aam
xorb
dec
femms
add
push
outsb
jle
pusha
rcll
inc
cli
mov
push
and
sub
dec
lcall
jno
data16
out
or
mov
push
imul
aas
dec
xchg
dec
or
push
movsb
psubusb
out
pop
jge
pop
pop
icebp
aam
xor
cmc
mov
hlt
fdivrs
scas
inc
or
mov
sbb
adc
inc
mov
or
je
in
push
mov
and
shr
dec
add
add
sti
mov
stc
repnz
sub
and
jle
xchg
arpl
mov
pop
cmp
pop
clc
cltd
fcompl
fisttpl
mov
push
jl
aad
cltd
add
adc
jne
mov
mov
mov
push
ds
pop
mov
lock
and
dec
inc
mov
ja
lret
jp
out
sbb
jle
mov
xlat
lcall
enter
mov
daa
jp
cltd
mov
data16
push
jnp
mov
or
jno
push
or
out
push
fs
add
mov
and
cld
rorb
jno
cmp
rorb
jae
stc
ret
aaa
mov
adc
jno
jne
or
jae
inc
mov
sahf
xchg
sbb
jae
adc
sub
cmpsb
fs
xor
jnp
add
fwait
ret
xchg
sub
out
cwtl
jae
cmp
aaa
rolb
pop
sti
pushf
lret
cwtl
mov
and
test
lahf
sbb
shrb
cwtl
and
push
cs
jmp
lock
push
jbe
xchg
movsb
push
out
xchg
lods
jnp
cmp
lods
sbb
sbb
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
push
push
ja
outsl
xchg
subb
data16
scas
add
jns
stc
push
sub
mov
je
add
lock
pusha
jno
mov
sbb
clc
cmp
cltd
cmp
mov
push
xor
mov
ja
outsb
xchg
push
lds
sbb
test
pop
pop
xor
sub
insl
mov
scas
adc
mov
adc
xlat
cmp
and
iret
or
and
pop
pop
mov
xorl
fmul
aam
cmpsl
leave
xchg
cmp
xor
or
out
subl
inc
pop
outsl
call
in
lahf
leave
or
sbb
sahf
hlt
dec
stc
cli
adc
pop
std
test
jbe
loopne
or
inc
push
push
jns
bound
mov
stos
out
xchg
pop
dec
lea
out
fsubrs
cs
test
cld
out
xor
movsb
cli
pop
fcoml
adc
push
pop
mov
jge
aad
sarl
mov
or
loopne
sahf
jo
in
pop
mov
ja
mov
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
jle
jg
jle
std
xchg
mov
or
jp
mov
roll
fisubs
xchg
pop
cmp
arpl
jmp
popf
xchg
daa
fstpt
jp
push
sub
and
pop
test
mov
jb
icebp
ds
scas
xchg
xchg
pop
xor
popa
psrlw
sub
mov
in
jecxz
push
cmpb
sahf
mov
lods
sbb
push
loopne,pt
mov
xor
call
lcall
xchg
jp
loop
or
or
test
add
and
mov
and
xor
push
sahf
out
sbb
in
pop
mov
icebp
les
or
dec
mov
fs
mov
cmp
push
scas
inc
cmc
lods
in
shll
xlat
icebp
les
scas
adc
jnp
loopne
icebp
test
adc
pushf
mov
push
pop
jb
gs
lahf
dec
je
jmp
es
push
xor
out
out
addr16
fwait
lea
dec
or
mov
movsb
add
outsl
push
addr16
loope
lret
in
mov
insl
mov
jmp
jns
mov
dec
js
movsl
mov
lods
imul
jle
and
jle
out
jle
sbbb
add
mov
cli
push
std
xchg
xor
sub
jp
fwait
hlt
pop
mov
add
inc
jne
xchg
and
lret
scas
pop
addb
xchg
add
pushf
pop
lock
mov
cmp
sub
fldcw
cmc
in
push
nop
push
scas
pop
sub
adc
test
cmp
ficompl
adc
movsb
shrb
push
sbb
mov
ret
movsb
jecxz
mov
jne
sub
or
sub
and
add
inc
mov
imul
out
xchg
clc
out
add
or
jno
cwtl
inc
mov
pop
or
inc
iret
add
fsubp
aas
sub
xchg
out
cmp
cwtl
pop
sbb
cld
xor
pop
int
sub
jecxz
stc
stos
cmp
scas
mov
cmp
ds
xchg
pop
mov
push
xchg
mov
xor
sbb
fimull
mov
sbb
lret
imul
ds
xchg
aam
jmp
ja
xchg
add
and
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
sub
jle
and
jle
push
insb
leave
outsb
fwait
xchg
adcl
loopne
movsb
pop
pop
add
or
sbb
push
repnz
pop
xchg
mov
orb
hlt
jle
jb
cmpsl
mov
add
and
outsb
xchg
aas
push
lea
and
in
mov
das
into
mov
icebp
mov
mov
sub
jo
mov
fcmovnbe
push
ja
lods
xlat
arpl
dec
cld
aam
jnp
dec
or
jne
call
or
mov
data16
and
inc
mov
mov
adc
movsl
adc
stos
loope
js
xor
jg
xchg
fadd
daa
inc
test
pop
loop
jecxz
xor
jmp
ds
jmp
test
mov
and
nop
into
mov
xchg
add
sbb
js
dec
faddp
pop
jecxz
mov
pop
subl
lahf
mov
fisubrs
mov
and
pop
sahf
xlat
cli
add
dec
cmovp
test
push
lods
cld
push
repnz
cld
repnz
mov
pop
push
sub
push
popa
inc
adc
xlat
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
je
push
aaa
sbb
and
jle
lea
mov
ret
cmp
jns
enter
rcl
gs
lods
push
sbb
inc
fs
out
xor
pop
arpl
test
aaa
scas
stos
mov
out
xor
mov
mov
pushf
jne
fisubrl
mov
fadds
cld
dec
pop
or
call
xchg
push
sti
push
jne
subl
mov
xor
iret
cs
mov
mov
inc
xchg
inc
mov
shl
clc
add
mov
mov
fs
stos
jb
mov
fildl
mov
push
mov
push
mov
sub
sbb
push
push
mov
insb
scas
sub
rorb
inc
mov
lahf
roll
jnp
imul
rorb
in
pop
out
mov
adc
pop
loop
or
sbb
jp
pop
test
shll
stos
fwait
xchg
addr16
and
dec
jg
dec
mov
jae
popa
and
incl
xor
and
and
and
push
iret
or
in
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
mov
jle
jg
jle
loop
dec
or
push
nop
std
repnz
outsb
sbb
adc
adc
scas
dec
sub
jbe
lods
mov
insb
shrl
roll
cmp
add
sub
movups
jecxz
jp
iret
imul
or
rcrl
out
and
scas
nop
sbb
xchg
inc
mov
xchg
sub
dec
adc
jns
daa
pusha
sti
lods
inc
sub
adc
icebp
cmpsb
imul
and
cmpsl
or
test
xchg
subl
xchg
jecxz
jge
movsl
lods
arpl
mov
xor
inc
iret
stos
or
call
ljmp
xor
movsl
jnp,pt
mov
jno
xor
subb
xchg
adc
adc
movsl
insl
mov
dec
mov
repnz
cmpsb
jp
push
das
sbb
mov
pushf
cli
sbb
mov
inc
enter
in
or
mov
pop
je
das
rorl
clc
and
xchg
pushf
inc
sub
dec
mov
clc
dec
ficompl
mov
orl
dec
fisttpl
xchg
pop
leave
ret
push
mov
jmp
jb
test
adc
cmp
lods
sbb
jmp
adc
push
add
jl
mov
pop
add
cmp
adc
das
outsb
inc
je
mov
xlat
cmp
cmpps
int3
xor
test
xor
scas
sbb
mov
mov
les
add
fcoms
cld
xor
inc
lock
in
std
out
inc
repnz
dec
or
jae
xlat
pop
pop
cmc
mov
movsb
pushf
fimuls
pop
xor
jnp
xchg
insl
xorl
arpl
popa
gs
mov
imul
mov
movsb
mov
loope
sub
xchg
xor
roll
pop
mov
push
ja
and
sbb
xchg
lods
adc
aas
add
or
int3
imul
add
addr16
mov
cmp
xor
mov
mov
mov
xchg
add
inc
add
dec
aaa
pop
fisubs
lock
cmpsl
cmp
aas
or
xchg
out
fwait
icebp
leave
pusha
push
jp
test
jb
xchg
cmpsb
push
imul
add
shr
stc
pop
push
and
outsb
dec
mov
mov
nop
test
jp
sub
inc
sub
dec
shll
push
cmc
sbb
int3
adc
xchg
add
add
das
les
push
jns
loop
mov
into
stos
inc
add
add
add
or
adc
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
adc
pusha
sbb
jle
jmp
out
inc
jmp
fcomi
jbe
mov
dec
jae
sti
outsb
out
je
es
call
insl
jg
or
inc
stos
cltd
and
pop
popf
sahf
lahf
and
lahf
cmp
pop
stos
mov
loopne
arpl
mov
es
sbb
repnz
cmp
out
mov
sub
das
mov
lret
pop
or
fisttpl
iret
cmpsb
arpl
sbb
je
lds
inc
vsqrtsd
cmp
mov
push
mov
or
lods
ficoms
and
push
ficoms
inc
sub
xchg
and
add
sub
out
lods
inc
mov
cltd
mov
push
dec
sbb
ror
adc
imul
dec
xchg
lds
sar
cmc
dec
outsb
jp
cmc
pop
inc
cmp
xchg
mov
lahf
mov
mov
mov
add
lods
mov
sbb
cmpsb
mov
jo
ljmp
out
imul
nop
pop
ljmp
not
dec
jmp
les
popf
cwtl
cs
and
les
push
mov
pop
loopne
mov
jg
rorb
inc
stc
mov
js
shr
mov
cmpb
add
jg
xlat
ror
xchg
mov
fdivl
cmpsl
loop
test
aas
lock
movsb
enter
dec
je
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
jnp
enter
outsl
xchg
mov
fstpl
jb
je
aaa
sbb
jle
jnp
and
sbb
loop
cmpsb
cld
daa
call
stos
sti
sbb
cli
sbb
sarb
ljmp
aam
mov
or
jp
xor
inc
sub
sbb
fistpl
fistl
stos
div
jns
pop
addr16
inc
scas
cltd
fsubs
outsb
xor
fdivrl
pop
cmp
in
pop
movsb
mov
cmp
pop
sbb
mov
hlt
push
mov
jg
bnd
std
push
and
movsl
cwtl
push
sub
je
fidivrl
jp
adc
mov
ljmp
pop
cs
push
fs
ja
gs
inc
jno
push
sbb
cwtl
sbb
or
mov
xchg
das
imul
jmp
test
push
mov
mov
in
es
cmp
or
out
mov
sub
or
push
jg
mov
mov
in
and
shl
std
xchg
gs
imul
lcall
or
ret
pop
add
clc
lock
popf
mov
or
inc
scas
and
inc
cld
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
pop
sub
jle
jmp
loope
out
es
in
cmpsb
push
or
mov
mov
jecxz
nop
testl
add
jne
nop
scas
and
cmpb
xor
cmpsl
mul
roll
jae
ret
sub
jnp
lea
push
and
repz
inc
jae
adc
push
in
shlb
mov
cltd
andl
add
nop
xchg
inc
jns
or
pop
inc
dec
aam
dec
in
inc
xchg
test
lods
insl
adc
ljmp
cmp
pop
adc
mov
xchg
push
and
aas
imul
dec
fists
fwait
cli
aaa
push
xor
out
outsl
mov
cvtps2pi
mov
push
mov
lsl
mov
sub
inc
fldenv
pop
add
orb
jne
pop
test
loopne
pop
int
pop
sub
xchg
call
jge
test
jmp
mov
and
loop
loopne
rol
mov
inc
andl
mov
test
mov
xor
mov
addr16
fs
lock
stos
sub
icebp
lret
sbb
xchg
cmp
inc
out
hlt
push
pop
mov
lcall
cmovg
and
inc
sub
movsb
sbb
cmp
rcll
xchg
out
and
roll
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
jp
adc
fdivrl
jle
mov
pop
inc
rclb
xchg
pop
cmp
into
stc
in
push
mov
inc
lcall
pop
addr16
fildl
pop
aaa
push
dec
lds
faddp
dec
scas
mov
orb
dec
dec
fidivl
inc
scas
pop
cwtl
xor
push
ljmp
sub
popa
imul
pushf
stos
push
jg
push
inc
sarb
ds
mov
add
adc
xor
dec
rolb
subb
xchg
fildl
out
loopne
pop
ljmp
aas
adc
arpl
push
loope
outsl
mov
pop
and
hlt
sbb
jmp
mov
in
lahf
sub
imul
cmp
push
lock
sbb
mov
push
mov
das
int
movb
cmp
push
pop
jae
jp
inc
in
enter
dec
xchg
sahf
lahf
mov
shl
adc
or
pop
in
loope
clc
fwait
aam
in
and
outsb
jb
loope
fsubs
pop
int3
sbb
rcrl
lock
and
xor
lea
mov
mov
inc
mov
sbb
cs
mov
jno
pop
insl
fidivl
in
mov
sub
add
aad
add
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
sub
push
dec
adc
fdivrl
jle
push
jbe
add
mov
clc
and
dec
jp
loope
mov
add
daa
dec
push
shrl
hlt
sub
cmpsl
xor
sarb
loope
and
fwait
testl
sahf
out
jmp
aam
arpl
fld
pop
outsl
push
mov
outsl
ja
popf
ret
xor
or
inc
imul
xchg
je
lods
popf
mov
pop
mov
dec
adc
and
xchg
ljmp
stc
push
add
and
cmpsl
ja
aam
dec
lret
push
sbb
pop
shrb
imul
and
xor
sub
sarb
enter
cmp
hlt
mov
xor
aas
enter
mov
gs
sbb
out
xchg
push
fdivp
test
int
pop
pop
lcall
push
stc
push
fnstcw
incl
push
aas
xor
popf
mov
cmp
sub
cmpsb
fstpt
pop
mov
mov
lods
and
mov
ljmp
fcmovb
data16
and
iret
jo
fidivrs
mov
adc
sbb
loop
aam
push
pop
cmp
roll
mov
mov
jmp
and
pop
xchg
adc
arpl
mov
add
sub
jg
jle
push
jne
add
ljmp
std
outsl
aam
push
divl
xchg
int
sahf
adc
jns
test
pop
loop
push
test
out
push
dec
movsb
imul
popa
or
cmp
lods
push
and
insb
pop
push
mov
mov
xor
mov
or
adcl
xchg
and
cwtl
ljmp
add
pushf
nop
pop
inc
xchg
adc
mov
ret
jno
out
in
pop
xor
cmp
push
test
movsl
outsl
jnp
fcomp
dec
push
and
jle
cmp
inc
push
ja
fisubl
scas
js
into
test
out
jl
fcoms
rorl
xor
sub
xchg
les
pop
aaa
cmp
outsb
or
out
add
movsl
or
cmpsb
sbb
ficompl
rolb
mov
pop
xchg
sub
test
xor
xchg
rorb
mov
aad
xor
sub
push
xor
dec
jg
sub
cs
jo
aam
inc
mov
xchg
jl
adc
xor
jns
mov
bound
push
push
inc
xchg
stc
mov
in
ljmp
push
or
fstpt
or
and
push
out
add
ret
inc
add
mov
add
mov
jmp
push
gs
movsb
es
pop
xchg
enter
jle
jg
jle
ret
xchg
push
xor
mov
xchg
subl
inc
push
pop
fwait
jb
enter
std
ret
mov
mov
jg
sub
addr16
loope
repnz
dec
add
aam
clc
scas
movsl
insb
or
int3
and
add
rol
popf
sbb
test
movsb
inc
push
xor
clc
shl
pop
sti
dec
push
sbb
inc
push
mov
sbb
push
cmc
clc
pop
add
test
lret
sahf
cmp
mov
pop
lods
aad
jmp
mov
cmp
push
cwtl
insb
mov
jp
push
or
and
cld
pop
icebp
jno
lea
mov
lahf
mov
out
xor
cli
mov
adc
mov
cs
lods
inc
bound
loop
nop
btc
into
push
mov
repz
cmp
sub
ret
aas
xchg
dec
out
cmp
sbb
insb
insl
xor
xchg
sahf
push
add
clc
stos
push
mov
in
jl
cld
lods
sub
inc
push
xchg
mov
mov
inc
clc
cmp
stos
mov
xchg
add
loopne
and
iret
out
pop
inc
cmp
jle
imul
xchg
scas
jecxz
adc
inc
add
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
insl
jae
les
adc
out
and
enter
test
lret
inc
enter
pop
fwait
mov
aas
jmp
add
cmp
mov
cmpb
test
lret
mov
adc
andb
in
mov
rolb
inc
add
jmp
cld
mov
call
scas
push
mov
jle
inc
das
les
stos
mov
ljmp
xchg
fprem
cwtl
push
xor
into
in
pushf
in
inc
lcall
loop
pmaxub
lods
arpl
out
ja
xchg
mov
mov
lods
in
movsb
in
xor
insl
jo
cmp
outsl
cld
std
daa
test
pop
xor
cmp
lret
sub
xor
dec
stos
mov
call
insl
int3
movsl
inc
and
add
sub
mov
push
add
sbb
outsb
clc
enter
fmull
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
fmull
jge
jle
or
jle
scas
push
dec
fildl
lock
es
mov
push
ucomiss
pop
sbb
rorb
mov
mov
andl
and
dec
adc
imul
cltd
repnz
movsb
ljmp
lock
xchg
jmp
stc
push
scas
sbb
and
lret
or
mov
arpl
fidivl
fwait
mov
imull
out
call
mov
lock
fs
mul
ret
in
push
inc
negl
rorl
int3
scas
pop
mov
or
pop
fwait
xlat
jno
lahf
fwait
mov
enter
xchg
adc
jae
into
notl
mov
jl
or
cwtl
push
data16
roll
les
push
test
pop
mov
dec
cmp
fs
daa
push
push
fprem
mov
fimuls
xchg
jnp
adc
jbe
movsl
addl
test
mov
jnp
aas
jnp
shrb
xchg
sti
dec
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
ficompl
jle
or
jle
xchg
mov
aam
sbb
pop
push
xorb
insb
or
push
jmp
pcmpeqd
dec
insl
mov
jb
cmp
in
xchg
mov
and
aas
pop
imul
out
gs
fcmovbe
dec
imul
cmc
mov
ds
lock
push
mov
adc
cmpsb
sub
gs
test
ret
inc
into
inc
pop
inc
mov
cli
push
outsb
loope
sub
add
sub
stc
mov
inc
adc
pusha
adc
mul
push
dec
testl
lcall
dec
pop
push
mov
scas
mov
lods
jp
movsb
ja
fdivr
push
mov
dec
aam
es
and
mov
ljmp
mov
mov
pop
cmp
ja
inc
lods
add
stos
and
shrl
jecxz
mull
ss
add
sbb
inc
clc
cmp
jo
inc
add
inc
lock
clc
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
data16
add
jg
jle
dec
push
adc
mov
inc
ljmp
adc
mulb
dec
xor
sub
iret
adc
and
cmp
push
nop
mov
testb
mov
mov
inc
cmc
rclb
testb
flds
das
out
sbb
xchg
gs
shr
pop
insl
pop
lock
jp
mov
lods
fimull
dec
rorb
push
out
jmp
lcall
cmp
gs
int
mov
mov
xor
add
movsb
sti
ret
sbb
jp
inc
out
iret
gs
outsl
push
mov
hlt
cmp
dec
and
pop
mov
repnz
test
into
jne
xacquire
lods
fisubrs
fstpl
and
and
ss
mov
mov
sbb
cmp
lock
sti
daa
repnz
xchg
das
add
xchg
cmp
and
jp
loop
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
push
in
add
adc
jle
or
jle
orl
mov
pop
xorb
nop
jbe
lods
push
scas
jge
or
sbb
or
lret
jne
xchg
push
sub
ljmp
jb
mov
and
jae
es
push
fsubrl
push
pop
jnp
js
or
adc
adc
mov
push
mov
xor
sti
rcl
sub
test
cmp
mov
scas
loopne
pusha
popf
xor
stos
adc
mov
mov
add
hlt
rcrl
cmp
rol
mov
in
nop
push
pop
xor
lret
jbe
jno
jge
and
pushf
aaa
jge
mov
cmpsb
sub
dec
fdivs
popf
push
push
mov
aaa
in
cmpsl
insl
mov
lret
or
xchg
xchg
and
test
jecxz
out
notl
jmp
enter
loop
mov
ja
xchg
orb
inc
imul
lods
inc
mov
inc
xlat
sbb
aam
sti
push
fildl
insb
or
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
pop
bound
sub
jg
jle
les
shr
xchg
add
add
sbb
jp,pn
outsb
into
jecxz
jge
pop
mov
pop
sub
sub
push
inc
xor
neg
mov
dec
outsl
push
and
cmp
and
imul
mov
add
out
adc
or
daa
loop
jno
add
or
int
inc
fcmovnb
add
pop
fs
lret
add
lret
push
mov
mov
push
jp
mov
mov
push
std
das
shl
pop
dec
rcl
sti
hlt
mov
shl
ret
push
mov
es
or
shr
inc
add
cmp
divps
mov
or
and
pop
jl
out
jo
cmp
mov
and
pop
addb
sub
movsl
or
enter
mov
bound
fs
lret
rcr
pop
xor
and
cmc
out
cmp
jno
addr16
lock
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
data16
das
jle
or
jle
lcall
xchg
adc
xor
lea
std
pop
or
push
je
ja
mov
fs
jno
stos
ret
sub
fiaddl
dec
das
mov
in
cmpsl
pop
insb
add
leave
jb
shlb
mov
vpand
add
add
add
imulb
xchg
push
jge
mov
aad
xchg
test
icebp
pop
fstpl
fnsave
mov
ja
ljmp
push
push
push
sbb
sub
dec
mulb
test
mov
pop
jb
pop
xchg
or
call
ds
dec
xor
push
nop
ljmp
ds
sbb
push
xor
push
dec
inc
popf
test
jge
add
xlat
pop
mov
pop
movsb
fadd
pushl
daa
mov
out
sti
into
call
jbe
and
repnz
les
pop
outsl
pop
rcrl
xchg
mov
je
test
lcall
out
add
mov
jmp
dec
sub
lock
pop
inc
xor
jg
jle
and
adc
ret
mov
pop
adc
mov
xchg
sbb
cmp
mov
ja
or
dec
xchg
negl
fcoml
pop
addr16
sub
ds
xlat
sub
cwtl
xchg
jnp
aam
leave
les
out
stc
insb
mov
jmp
lret
jmp
insb
mov
repnz
add
add
test
lods
push
xor
xor
std
sub
cmp
cli
jp
mov
mov
jno
sbb
push
int
xlat
and
inc
lock
mov
mov
pop
cmp
sbb
cmpsb
test
add
data16
pop
hlt
cmp
fldt
clc
mov
and
pop
dec
mov
jg
fildll
lcall
push
fdivs
mov
je
mov
pop
cmpsl
popa
xchg
mov
subl
in
lret
or
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
or
shrl
jle
add
in
bound
sub
jl
dec
lods
xorl
mov
xchg
lret
jle
lahf
and
imul
push
or
ja
test
add
nop
movsb
popf
pop
js
testl
loopne
xor
jg
repz
fwait
test
and
xor
jg
aad
mov
sbb
jno
or
mov
or
sub
or
movsl
enter
mov
add
ja
dec
sub
jl
add
call
mov
add
ss
adc
push
xor
sbb
dec
cmp
xchg
sub
daa
cmp
pop
xchg
mov
in
mov
iret
shlb
mov
std
jmp
and
add
dec
sub
xor
adc
jge
push
mov
pop
jp
mov
adc
sbb
fisubrl
loop
and
in
jge
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
test
imul
jg
jle
xchg
or
pop
ljmp
and
shll
test
xor
inc
pop
es
sbb
sahf
or
jecxz
fists
test
jl
jae
push
pop
push
cs
rcll
out
pop
rcr
adc
ldmxcsr
mov
sbb
nop
das
jmp
jb
or
popa
sarl
adc
xchg
push
mov
dec
cmp
xor
paddb
add
push
cmp
icebp
fmuls
jle
hlt
pop
mov
mov
xor
imul
mov
jge
es
and
mov
lcall
in
gs
and
jb
pop
cmp
das
jecxz
xchg
cmp
xchg
mov
pop
jmp
in
ss
lea
add
mov
into
insl
push
arpl
jmp
shrb
adc
mov
repz
in
pop
or
subb
fdivrp
mov
iret
jnp
inc
imul
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
test
or
jle
psadbw
adc
dec
cwtl
lds
and
pusha
aaa
jge
add
mov
fcomip
out
lods
out
popa
adc
sbb
xlat
inc
inc
inc
xchg
data16
scas
lods
int
out
pushf
in
mov
xor
dec
mov
push
pop
test
inc
fildll
addr16
jno
call
dec
mov
js
daa
push
lea
sahf
or
sub
out
lahf
mov
xorb
loopne
insl
pop
sub
jnp
cmc
mov
mov
std
or
rep
cmp
mov
push
mov
cmp
insl
mov
mov
shll
cltd
les
in
rep
push
popa
sub
sub
addr16
cmp
dec
push
add
pop
xor
xor
xor
jne
jns
insb
divb
subb
out
sbb
xor
mov
inc
sahf
or
lahf
lahf
push
sub
rcrl
mov
aaa
mov
or
push
popf
cli
xor
les
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
enter
arpl
adc
sub
dec
cld
xchg
test
rol
outsl
xor
push
in
hlt
jge
lock
xchg
xor
mov
add
stos
xchg
lret
and
and
pop
call
push
xchg
sub
mov
pop
enter
adc
add
es
repnz
adc
cmp
aaa
adc
push
daa
test
xor
xor
iret
loop
inc
xchg
mov
cli
in
and
shll
fwait
sahf
mov
mov
mov
mov
jmp
es
mov
les
xor
bound
jle
jle
jle
hlt
and
rcrl
and
int
push
push
sbb
icebp
loop
data16
cmp
jb
push
mov
pushf
test
jecxz
imul
clc
inc
rcrb
out
insl
add
push
test
stos
add
mov
mov
pop
cmp
in
insl
and
stos
xchg
adc
pop
push
iret
icebp
call
jns
sub
cmp
jmp
adc
xchg
mov
or
cs
mov
scas
mov
push
call
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
mov
popf
and
push
jg
jle
jbe
sti
test
arpl
aaa
mov
jecxz
imul
mov
push
add
ret
fisubl
daa
in
daa
out
in
outsb
iret
push
andl
adc
aad
push
xor
outsl
data16
test
mov
daa
cwtl
mov
insl
sbb
push
push
in
shl
mov
dec
jg
imul
xchg
or
rorb
inc
pop
inc
push
mov
shl
xor
mov
aad
and
add
into
add
ljmp
xor
shrb
insl
mov
sahf
inc
outsb
js
ljmp
jl
mov
xchg
pushf
sarl
testb
lret
mov
pop
out
mov
shr
shlb
sub
repz
xlat
push
fmuls
into
sarl
jmp
pop
iret
test
add
mov
stc
testl
push
mov
cli
scas
shlb
dec
lea
jge
cmp
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
les
icebp
mov
jle
push
jg
jle
cmpsb
repz
stc
test
or
mov
sarl
rcll
fs
mov
or
movsb
pop
mov
out
jge
pop
or
fildll
lea
xchg
inc
cmpsb
ret
adc
int3
mov
push
mov
mov
push
outsb
fs
mov
stos
inc
sub
and
popf
xchg
lret
movl
sbb
lret
fmuls
aaa
mov
or
jb
dec
push
adc
repnz
mov
test
lret
roll
lock
int
fyl2xp1
js
xorl
enter
pop
xor
add
push
dec
leave
pop
dec
dec
jno
sub
shr
inc
aaa
lods
mov
jbe
inc
insb
lds
inc
clc
sti
in
loope
inc
dec
ret
addr16
in
out
sbbb
ret
jp
sub
or
adc
cld
xchg
add
sbb
mul
pop
stos
ss
sub
inc
adc
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
es
daa
jle
push
jg
jle
sbbb
sub
and
hlt
xor
sub
in
inc
fisubrl
mov
jnp
out
xor
loope
cmp
sub
sbb
ret
insb
cli
adc
sarb
repz
scas
or
xlat
inc
sub
out
mov
dec
repz
push
adc
xor
add
xlat
repnz
popa
jb
cmc
ss
sub
cltd
scas
lods
pop
jbe
test
cmc
xchg
xchg
xor
mov
xor
mov
xchg
in
xchg
push
mov
and
dec
idivl
inc
outsl
xlat
into
mov
shr
imul
push
call
loop
cmp
cld
cmpsl
out
scas
push
sbb
mov
ret
sub
sub
or
sub
jne
mov
push
sbb
dec
loopne
push
int
stos
or
xorl
xchg
xchg
mov
dec
je
inc
dec
xchg
mov
jl
xchg
add
fstps
pop
jne
aas
andb
add
js
cmp
inc
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
lods
jp
mov
lds
jle
mov
push
jae
cmp
out
imul
inc
jo
je
lds
pop
clc
repnz
xchg
mov
in
fcom
pop
jle
and
push
lret
pop
or
cld
lcall
int3
rcrb
lahf
por
inc
into
dec
inc
mov
mov
or
insl
or
push
lret
cmpsb
fldl
nop
jp
cmp
sub
mov
mov
cli
pop
pusha
popa
repz
pop
add
jecxz
adc
push
ret
xor
nop
mov
pop
pop
movsl
add
mov
xor
inc
mov
sub
rcrl
xlat
call
mov
out
push
mov
fnstcw
jae
jno
add
ret
and
inc
pushf
sub
mov
dec
mov
jno
mov
test
scas
cmc
aaa
out
pop
es
mov
or
inc
pop
jns
mov
cltd
mov
or
seto
and
inc
inc
into
in
push
ss
outsl
mov
loop
fidivrl
lcall
push
pop
repnz
sub
inc
push
or
or
out
lods
mov
sbb
jbe
jle
jp
jmp
cltd
mov
sub
mov
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
push
mov
sbb
cmp
lds
jle
aaa
into
dec
add
das
pushf
inc
lock
sbb
scas
jecxz
push
mov
stc
out
repnz
jecxz
mov
or
in
cmc
lea
xor
sbb
in
test
mov
sub
pop
lods
sub
xchg
push
iret
mov
jg
jo
jp
push
fdiv
icebp
pusha
pop
adc
dec
sub
or
sbb
scas
jecxz
sbb
flds
mov
scas
xorl
lock
loope
mov
sbb
push
cmp
pop
pop
movsb
xor
call
ret
iret
cs
push
cs
movsb
push
out
xchg
xchg
adc
pop
cmc
mov
mov
mov
jo
jbe
scas
or
lcall
push
icebp
das
idivb
in
dec
xlat
sarb
inc
jo
inc
mov
aam
inc
je
negb
lcall
lret
js
jmp
lcall
pop
jmp
dec
xor
adc
fsubrs
dec
shll
frstor
aam
push
mov
test
sub
dec
icebp
imul
mov
pop
mov
scas
or
sbb
dec
mov
push
jno
adc
mov
jne
adc
ret
add
jmp
jg
add
jns
cmp
sbbl
jg
jle
dec
sub
add
push
js
popa
sub
jo
lods
jno
in
inc
xchg
imul
and
sbb
outsl
pop
loop
icebp
and
call
xchg
jg
xor
outsl
fdivl
xorb
push
adc
pop
ds
aam
or
loope
pop
stos
inc
aaa
shlb
mov
std
xchg
outsl
mov
sbb
sbb
stos
idivl
push
nop
std
ror
xchg
sub
mov
ds
pop
or
out
lea
jmp
rorb
loope
repz
mov
jo
test
icebp
repz
sub
scas
mov
out
rcrl
inc
jns
rcr
bound
insl
ljmp
xchg
xchg
iret
fnsave
or
jns
scas
pop
pop
xlat
gs
into
movsl
pop
test
xchg
jmp
mov
dec
call
stc
rol
addb
xchg
xchg
lret
loopne
roll
xor
movsl
push
cmpsb
mov
scas
mov
jge
gs
std
xchg
pop
mov
inc
cmovbe
jbe
cs
pop
pushf
out
mov
sub
cmp
rcrl
ret
push
xchg
mov
and
jl
pop
je
in
cltd
xor
icebp
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
int3
stos
dec
sub
jle
lds
jle
mov
dec
call
lea
pusha
push
test
or
lods
cmp
jne
mov
jb
sub
int3
pop
or
and
mov
pop
lahf
dec
pop
pop
int3
rcl
adc
inc
rolb
jg
push
fiaddl
cmovae
jne
pop
mov
ret
ljmp
dec
pop
jl
jge
mov
inc
push
cmp
pushf
fdivrs
xor
outsl
jns
xchg
scas
ljmp
xchg
das
movsb
roll
arpl
adc
ret
xor
test
mov
jp
jnp
mov
jb
divl
sub
leave
jp
pop
jecxz
mov
pop
jbe
orb
push
jg
push
enter
movsl
push
sti
andb
fcomps
jp
dec
xlat
das
xor
fs
jno
or
and
add
aaa
push
fs
ret
pushl
scas
cmpsb
dec
lea
mov
int
or
jmp
mov
mov
sbb
stc
shll
into
adc
out
loop
or
mov
mov
xchg
dec
or
jg
sar
mov
shrb
pop
pop
aas
shrb
mov
adc
test
or
cld
mov
cmp
scas
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
sarb
icebp
jle,pt
mov
jle
mov
mov
xor
xor
pop
and
adc
mov
out
dec
sti
add
lea
inc
insl
mov
mov
rclb
gs
out
rcrb
addb
push
ss
pop
pmulhw
mov
or
mov
and
mov
xor
inc
cmpb
int3
jl
out
xchg
loopne
add
push
dec
dec
pusha
fwait
shl
movsl
das
xchg
lea
rcll
cmp
je
adc
out
movaps
fdivs
mov
aam
mov
dec
jl
pop
mov
xor
cmp
jp
nop
int3
xchg
fmul
repz
push
push
scas
push
xorb
mov
test
out
adc
loope
push
in
mov
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
mov
jle
mov
jle
jae
cmpsb
mov
call
iret
outsb
sbb
and
pop
loop
loopne
sub
push
inc
and
jge
out
dec
das
mov
bound
mov
xlat
cmp
mov
fldenv
ja
mov
mov
clc
arpl
ss
sub
test
pop
mov
pusha
cld
imul
cld
clc
lds
popf
into
fidivs
ret
xlat
sahf
pop
pop
sub
mov
dec
orl
lods
or
cmp
mov
inc
jbe
mov
push
push
ret
add
ljmp
scas
adc
bound
cmpsl
jge
idivb
mov
fwait
inc
push
inc
dec
ficoms
imul
mov
into
stos
inc
add
or
jmp
mov
stos
popa
jns
in
mov
shl
or
cmp
jle
jle
jle
iret
xor
pop
imul
jge
in
xlat
pop
js
popa
cld
je
nop
call
lock
std
stos
add
push
pop
mov
sbbb
xor
push
arpl
aad
fs
jns
loope
or
dec
ficoms
xor
adcb
mov
fnstenv
dec
aas
mov
jg
in
rcrl
sub
lods
xchg
popf
enter
insl
dec
pop
popa
cmp
fisttpll
out
or
loope
pop
leave
jbe
push
inc
and
cmp
jl
fs
push
lock
dec
ficoms
mov
test
xchg
les
push
jg
outsl
mov
shll
inc
xor
jge
fistpll
sub
sub
fisubrl
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
xchg
int3
jbe
cmp
jle
jle
jle
mov
lret
sbb
rcll
mov
and
add
orb
out
dec
lret
push
sbb
sbb
cmp
push
push
mov
jmp
les
je
lahf
and
mov
sub
and
cmp
inc
sarl
push
add
sbbl
jp
cmpsl
pop
mov
rorb
ror
mov
push
xor
aad
cli
imul
and
pop
adc
out
lods
andb
cwtl
sarl
scas
rolb
mov
mov
mov
cwtl
sub
xchg
dec
cs
cmc
scas
rcrl
dec
gs
xlat
test
jne
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
xchg
ss
xchg
cmp
jle
lds
cmp
xor
mov
insl
lcall
add
sti
cmp
in
arpl
push
cmp
and
cmc
mov
or
sbb
adc
sub
xchg
out
mov
mov
aam
xchg
push
or
mov
rcll
add
push
inc
sub
int3
fdivl
or
xor
add
push
loope
aam
out
xchg
addl
in
push
pop
cmovge
push
push
ficompl
pop
bound
adc
xchg
imul
jne
js
sbb
cmp
adc
sbb
scas
aaa
mov
inc
jp
lcall
popa
push
push
mov
add
adc
and
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
dec
cmp
jmp
jle
jle
jmp
push
loope
testb
dec
in
cmp
imul
xor
mov
mov
pop
imul
stos
xor
xchg
shlb
xchg
push
mov
sbb
das
arpl
cmp
mov
fwait
mov
and
adc
insl
icebp
dec
out
pop
cld
mov
cmp
mov
hlt
arpl
push
rolb
stc
mov
shll
fdivrl
jne
pop
popa
ss
cmp
ss
xchg
shrl
fisubrs
push
loop
ret
or
std
or
out
imul
loope
push
push
repnz
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
mov
and
jle
mov
jle
shr
xchg
cmc
or
cltd
lcall
stos
repz
or
frstor
bound
popaw
xchg
adc
lea
jnp
pop
cs
mov
in
cmp
pop
daa
or
test
lret
nop
fcmovnbe
sbb
fdivr
loop
push
xor
movsb
adc
adc
jns
shl
or
rcl
mov
out
cmpsb
je
push
sbb
pop
lcall
aaa
pop
or
cmp
cmp
repnz
sbb
jo
in
loop
popf
cmp
enter
pop
mov
sub
pushf
repnz
push
in
andnps
xor
loope
jns
movsb
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
cmp
jle
mov
jle
xor
jle
or
push
mov
push
ss
test
sti
sbbb
cld
push
push
nop
xchg
imull
or
in
xchg
leave
lds
out
mov
sarl
into
icebp
nop
mov
ret
mov
or
ss
je
cmp
outsl
sar
nop
stos
sbb
jp
js
int
sub
mov
and
adc
test
inc
loop
push
lret
mov
sti
mov
cmp
xlat
push
scas
mov
push
cmp
or
ljmp
aaa
int
mov
sub
ljmp
fiadds
mov
push
out
ret
std
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
hlt
mov
jle
jle
jle
aam
out
inc
test
cmc
loop
mov
jge
pop
pushf
repnz
mov
out
mov
adc
push
push
xor
xor
fwait
les
out
shll
mov
idivb
movsl
and
xor
ret
rolb
enter
cli
pop
out
mov
and
and
cltd
icebp
jbe
popa
lods
lds
sub
push
scas
fistpl
dec
outsb
cmp
ds
lock
jp
xchg
lock
jl
sbb
lock
push
jmp
enter
cmp
je
cmp
adc
subl
fadd
pop
out
aam
sahf
dec
sbb
repnz
insl
test
jle
loopne
jo
or
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
rcrl
jle
jle
jle
dec
cmp
das
int
cld
pushf
mov
mov
movsb
es
xchg
das
jae
xor
xor
push
pop
xchg
cmp
push
cmp
inc
jae
bound
mov
or
inc
xchg
ljmp
js
add
cltd
dec
sub
xor
ret
mov
icebp
push
popf
xor
or
or
das
fcmovbe
mov
addr16
adc
rol
std
aaa
std
jl
std
aam
adc
movsb
clc
aam
xorb
inc
stos
out
fwait
dec
imull
lock
lds
xor
dec
add
xchg
ds
ret
inc
xor
and
jecxz
jle
mov
add
dec
lods
stos
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
insb
push
movl
push
sarl
inc
xor
fadds
inc
jge
jp
cwtl
push
icebp
cli
inc
dec
mov
add
movsb
out
cwtl
jmp
lds
das
test
daa
mov
ja
xor
sbb
fsubr
test
test
adc
loope
adc
or
inc
dec
cmp
leave
pushf
sbb
sbb
loop
sbb
sar
mov
cmp
jns
or
les
mov
xchg
push
hlt
mov
jl
andl
faddl
jmp
rclb
imul
testl
push
repz
dec
pop
and
sub
addr16
std
cld
ror
dec
test
push
arpl
sarl
ret
or
add
mov
jmp
decl
xchg
fdivl
adc
sbb
jle
mov
jle
inc
pusha
aas
cwtl
cmp
lds
xchg
mov
mov
sbb
jge
pushf
dec
test
add
lahf
cmp
sub
lods
in
call
and
lret
push
jmp
das
aaa
mov
popa
and
cmp
loopne
add
xor
lods
pop
cmp
inc
inc
test
sbb
daa
cmp
in
mov
lock
mov
sahf
jns
cmpsl
int
je
push
repnz
mov
popf
xchg
sbb
cmp
xchg
ja
jae
addr16
aam
mov
fs
mov
rcr
test
pop
push
adc
out
xor
sti
imul
nop
leave
ret
lds
cmpsb
sub
imul
jmp
inc
loop
xchg
imul
cmpxchg
jle
mov
jle
xchg
das
rolb
sbb
cld
jecxz
dec
lret
stc
hlt
icebp
scas
xor
lods
xchg
in
test
int
in
mov
inc
popf
andl
test
xor
in
jg
adcl
dec
mov
out
jnp
int
fcoml
cwtl
nop
les
adc
and
movsl
jl
rcl
jmp
sbb
add
and
cmp
push
icebp
lds
cwtl
aas
mov
in
add
cwtl
inc
pusha
popl
push
push
jae
test
xor
mov
pushf
insl
test
dec
call
test
es
mov
insl
sti
xchg
ficoml
jg
jmp
cltd
inc
inc
dec
adcb
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
mov
test
jle
jle
xor
ljmp
ret
pop
lods
xchg
shlb
test
mov
ljmp
push
pop
sbb
adc
xor
add
add
xchg
pushf
sti
xchg
adc
outsb
mov
out
icebp
rorl
sub
sbb
fistpl
hlt
dec
repz
je
pop
nop
mov
xchg
aam
addr16
orb
aad
outsb
sub
xchg
xor
push
movsl
mov
push
push
xor
js
out
pop
pop
jne
mov
jp
fcoml
mov
pop
xor
shll
or
add
es
pop
jno
sbbb
outsl
mov
sti
fisttps
leave
inc
cld
xchg
pop
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
inc
out
push
mov
jle
xor
repnz
subl
loopne
stc
adc
sahf
sub
mov
outsb
push
xlat
in
mov
stc
ss
out
ret
popa
dec
dec
popa
scas
pusha
cwtl
push
shlb
jge
loopne
inc
pop
std
lahf
clc
loopne
sub
stos
or
in
and
test
ret
push
sbb
lds
and
or
jnp
inc
ds
pusha
js
ret
ret
sbb
pop
dec
nop
lahf
adcb
or
mov
loopne
jno
mov
adc
xor
jecxz
repnz
pop
lods
loope
push
les
mov
lods
add
add
adc
out
ret
cli
mull
jo
rorb
xor
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
ljmp
fildl
sbb
leave
fldl
test
repz
push
pop
mov
push
jne
pop
mov
or
add
lods
mov
pop
cli
je
adc
mov
fs
mov
into
loop
pop
mov
gs
loope
pop
mov
jne
jns
adc
or
stc
jge
push
test
andl
xor
jl
mov
mov
addr16
aas
xor
push
pop
faddp
or
int3
fwait
push
shll
popf
push
mov
stos
orb
push
ja
pop
adc
cmp
enter
lcall
insb
cmp
cmp
push
adc
mov
cmpsl
mov
xor
mov
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
sbb
jo
jno
jle
mov
jle
add
out
mov
mov
fsts
pop
cwtl
pop
shll
xchg
sub
mov
dec
scas
xor
mov
insb
mov
jecxz
popl
mov
bound
xchg
jecxz
xchg
fildl
inc
pop
pop
and
sub
xchg
jle
mov
or
fmull
dec
popa
loop
add
ffree
idivl
mov
push
fwait
in
ret
jne
push
pushf
dec
loope
test
insb
enter
je
or
dec
pop
mov
sbb
pusha
rcrl
ja
in
push
or
adc
jg
inc
sub
call
sub
mov
insb
jbe
outsb
inc
je
pushf
je
and
and
xor
fmuls
shll
fucomi
loopne
add
popa
jno
jnp
jnp
or
nop
jno
dec
lret
jle
mov
jle
dec
cmp
cmc
pop
jbe
lock
out
mov
mov
and
in
divl
in
punpckldq
pop
enter
ror
int
push
insl
repz
lret
xor
lret
xchg
or
enter
popa
ljmp
lock
mov
cs
mov
loop
lds
pop
pop
xchg
xchg
or
or
xorl
add
pop
popf
das
jp
fiaddl
mov
fdivrs
cmp
and
xchg
jge
or
and
jmp
icebp
jbe
leave
mov
imul
push
lea
outsl
iret
or
test
out
js
sub
pop
adc
loopne
add
test
xchg
push
stos
push
push
gs
out
loop
enter
jle
jle
pop
fadd
adc
arpl
sti
push
mov
mov
push
mov
adc
cmp
and
fdivs
mov
iret
jne
mov
test
aad
push
fucomi
in
mov
shl
test
insb
outsl
push
lret
sbb
lret
pop
pavgb
inc
add
xor
lods
add
rol
mov
push
or
popf
xor
or
shrb
mov
inc
movsl
xor
push
insb
jmp
jno
out
iret
loopew
sbb
mov
push
and
sub
pop
mov
jo
push
pop
jo
dec
mov
adc
mov
leave
imul
addb
xlat
mov
std
add
add
add
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
mov
mov
dec
sub
ret
sub
mov
cwtl
lcall
js
pop
inc
xchg
push
mov
push
cmp
subb
call
cmpsb
jne
clc
and
and
lcall
int
in
fwait
add
ja
fcoms
mov
jecxz
xor
inc
dec
fwait
stos
mov
repnz
aam
std
cmc
rcll
out
mov
jb
sub
xchg
xor
cmp
push
clc
jb
xchg
iret
sub
sbb
xor
lods
cmc
add
mov
sub
and
sub
mov
add
cmp
xor
scas
sbbl
mov
in
xchg
ret
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
