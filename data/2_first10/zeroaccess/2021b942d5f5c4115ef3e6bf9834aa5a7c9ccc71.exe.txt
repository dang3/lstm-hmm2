push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
cli
pop
imul
jno
jle
xor
xor
ja
or
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
jbe
outsb
or
sbb
sbb
cmp
mov
mov
pop
push
pop
pushf
mov
in
popa
pop
std
call
xchg
add
bnd
mov
xchg
push
mov
sub
pusha
lret
xchg
dec
dec
stos
inc
es
dec
dec
loopne
or
dec
lret
xor
lcall
push
sbb
arpl
addr16
fsts
movsb
dec
pop
jne
movlps
insl
cmc
sti
mov
testl
cmpsl
insl
in
shlb
push
or
repz
xchg
sbb
mov
rcrl
dec
pusha
sub
adcl
push
pop
cltd
pop
sub
scas
cmp
mov
sub
loope
fwait
movsb
scas
mov
fwait
xor
mov
mov
scas
push
es
inc
in
push
stos
xchg
mov
push
and
jge
lods
cltd
xlat
fs
cmp
sti
divb
rcr
in
neg
loop
jns
lods
mov
mov
psubq
xlat
add
inc
mov
lods
leave
ret
mov
mov
cmp
push
xchg
xor
outsl
jmp
mov
enter
sbb
sub
insb
push
sbb
push
sub
cmp
mov
cwtl
and
sub
mov
push
or
gs
jmp
out
fsubrl
test
stc
fisttps
xor
dec
ret
addr16
into
testl
incl
adc
push
in
repnz
pop
jecxz
out
mov
test
push
cwtl
adc
xchg
into
nop
pop
sub
leave
mov
addb
in
cmp
xor
push
inc
pop
jae
xor
call
adc
repnz
repz
inc
pop
nop
adc
sub
or
shrb
sahf
cmpsb
pop
sbb
rcrb
fsubs
adc
movsb
lds
push
adc
mov
cmpsb
pop
mov
les
mov
dec
mov
and
mov
pop
in
stos
cmp
in
into
ror
mov
dec
pop
xchg
movl
stos
orl
mov
inc
xchg
mov
ret
jp
mov
push
push
je
loop
fwait
cmp
dec
push
leave
lret
jmp
shrb
popa
js
dec
out
inc
sbb
pop
shll
sub
add
and
dec
cwtl
arpl
rolb
repz
mov
sbb
mov
inc
int3
enter
std
sbb
andb
cmp
test
in
lods
aas
test
mov
inc
cld
sar
mov
movsb
add
lds
jbe
pop
mov
jb
jns
push
dec
sub
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
mov
fildl
jno
jle
mov
repnz
rorb
cmpsl
outsl
inc
mov
sbb
adc
sbb
andb
jae
xor
mov
jp
mov
mov
cmp
push
and
adc
cmp
and
ja
scas
sbb
mov
sub
or
pop
into
cmp
lret
dec
sub
pusha
sub
pop
jo
adc
daa
sbb
inc
insl
js
loop
jb
inc
jae
inc
lods
pop
adc
fdivrs
movsb
pop
dec
or
mov
push
lea
sbb
test
pop
fisttps
mov
jnp
mov
stos
mov
shlb
enter
mov
jl
fidivs
fildl
xor
dec
jle
stos
test
daa
fmuls
and
test
xchg
mov
adc
insb
mov
sbb
jne
stos
add
sub
xchg
imul
xor
sbb
or
pop
cltd
dec
dec
cmpsb
mov
movl
call
xchg
roll
sbb
in
sti
pop
mov
pusha
stc
test
shr
mov
mov
or
pop
gs
in
popa
popa
nop
and
hlt
xor
lcall
or
inc
movsb
lret
test
les
dec
jnp
scas
jo
xor
dec
push
xor
mov
testb
mov
stos
movsb
fldenv
lds
add
test
enter
lds
adc
mov
arpl
cmp
andl
or
xchg
ja
test
dec
clc
push
mov
xor
xchg
sbb
je
dec
mov
add
push
enter
mov
outsl
fcomip
push
scas
fadds
jbe
jne
nop
aaa
icebp
sub
dec
das
test
ljmp
xor
leave
xchg
pop
lret
sbbl
xchg
fldl
nop
or
leave
repz
sbb
test
xor
jnp
jno
repz
pop
leave
adc
pop
xchg
cmp
in
jo
dec
out
push
add
cmp
jl
pop
outsb
fwait
xor
sub
inc
lcall
mov
popa
stos
sbb
mov
rorb
movsb
std
push
cmovl
pop
cmp
inc
mov
dec
clc
iret
cli
sub
out
imul
mov
aam
mov
xchg
mov
sbb
adc
in
add
mov
andb
sub
sub
sub
arpl
cwtl
lods
adc
and
cmc
hlt
addr16
out
nop
mov
mov
scas
outsl
aaa
pop
jne
ljmp
cmp
idiv
push
test
shrb
sub
popf
add
xor
add
lods
jb
int3
inc
idivl
cmpsb
pop
jmp
fwait
and
cmp
sub
xchg
dec
popa
hlt
aad
rorl
in
sub
and
addr16
and
test
shlb
mov
aam
xlat
mov
xchg
jns
mov
mov
jle
push
nop
jmp
xchg
andl
push
mov
push
sbb
int
cmp
and
add
inc
notl
push
loope
adc
dec
or
mov
negl
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
es
addr16
push
jne
jle
jno
jle
test
std
mov
xlat
jbe
jno
mov
sbb
mov
ljmp
or
push
rcr
in
fisttpl
jnp
sub
jno
mov
sub
clc
sub
int3
inc
push
ffree
jmp
adc
cli
dec
xchg
push
int3
lea
lock
mov
xchg
sub
shlb
or
sbb
mov
hlt
cmp
xchg
ret
xchg
ficomps
mulb
sub
insb
je
js
outsb
ret
add
insb
aad
push
cwtl
lock
sub
icebp
fsub
inc
cld
dec
dec
mov
sub
xchg
adc
add
jecxz
adc
cmpsb
clc
jge
ljmp
xchg
pop
jns
or
test
fiaddl
xchg
cmp
sar
dec
cmp
inc
aad
loope
icebp
sbbb
out
sbb
fnsave
mov
push
fwait
adc
dec
ss
in
add
stos
shll
out
adc
xlat
out
xlat
mov
lea
push
and
repz
in
int3
test
xor
iret
jp
dec
sub
jmp
loope
out
pop
add
addr16
mov
scas
in
notb
ljmp
test
aad
cwtl
adcl
fmull
mov
mov
pusha
scas
sahf
adcb
xchg
fwait
or
xor
pop
push
int3
dec
push
sbb
lret
rorl
clc
mov
xor
or
mov
cmp
sbb
pop
aas
arpl
jb
adcb
pop
dec
test
adc
mov
pusha
enter
pop
jne
and
pop
das
or
daa
jecxz
scas
cwtl
adc
mov
gs
lds
in
sbb
outsl
lods
and
push
push
dec
inc
pop
mov
adc
jo
cmp
xor
icebp
mov
and
push
xchg
adc
lea
push
sbb
mov
shrl
stos
pushf
daa
and
jno
jo
icebp
xchg
xor
mov
fidivrs
lds
stos
push
cmp
add
xor
or
mov
mov
aas
gs
pop
sub
mov
inc
loope
and
push
lret
jno
jne
aaa
ret
inc
fnstenv
sub
rcll
aaa
in
xor
adc
cmpsb
pop
sub
inc
adc
pop
push
fs
push
int3
inc
xor
pop
jae
xchg
test
addb
mov
test
mov
push
cs
and
and
je
sbb
pop
dec
and
iret
mov
push
inc
push
cld
out
or
das
mov
jl
inc
and
sub
pop
sti
dec
mov
jns
dec
mov
aam
push
xchg
xlat
movsl
pop
repnz
test
test
mov
cltd
mov
xchg
jmp
loopne
out
arpl
cltd
jecxz
inc
aas
push
pop
out
cld
mov
inc
leave
jo
nop
xchg
jbe
pop
dec
pop
jno
ret
lds
sbb
lret
and
or
mov
movsl
es
data16
fistpll
and
inc
add
add
add
lods
add
add
nop
jl
jge
and
jns
sti
pusha
mov
xorb
xchg
push
and
addb
notb
xchg
lcall
xor
pop
mov
mov
and
lret
pop
mov
pop
mov
jb
push
cld
xorl
inc
ret
jne
stos
inc
scas
cmc
data16
shll
xchg
clc
rcrl
inc
lea
push
xlat
jns
jae
iret
les
lret
pop
repnz
dec
stos
arpl
js
cmp
jns
pushf
cmp
sbb
dec
mov
stos
fmull
xchg
jno
stc
mov
dec
out
int
fnsave
push
cmc
popa
pop
sbb
push
push
xchg
into
cmp
jl
mov
fdivr
fisttps
push
pop
ds
sahf
xlat
pop
lods
in
ss
sbb
mov
out
push
mov
ret
xor
push
or
inc
mov
jmp
mov
push
cmc
out
inc
jp
push
fisttps
xrelease
pop
mov
push
cmp
sahf
adc
add
cmp
xor
add
cwtl
aad
mov
or
iret
mov
cltd
mov
mov
aad
push
mov
mov
icebp
inc
xchg
jge
lret
push
xor
imul
pop
pop
test
das
stos
jno
xor
out
sbb
hlt
sbb
popa
sub
inc
jb
inc
cmp
adc
in
jle
ja
insl
in
jge
lds
pop
xchg
xor
pop
ja
iret
movsb
adc
pop
das
xor
sbb
mov
mov
std
ficompl
in
push
notb
xchg
push
insl
repz
data16
add
sbb
add
subb
mov
lcall
xchg
mov
inc
jno
ljmp
mov
add
xchg
aas
dec
aas
in
pushf
xchg
pop
loope
aad
jae
sbb
and
cmp
sub
jecxz
shl
int3
mov
jnp
adc
imul
std
adc
addl
insb
rol
cmp
jo
fisttpl
ret
inc
xor
xchg
adcl
repz
adc
sbbb
nop
sub
dec
insb
dec
sub
in
imul
je
lods
adc
rclb
negb
shrl
test
loop
push
in
out
sti
bound
push
xor
fwait
das
push
cs
fdivrp
lods
out
notb
in
sbb
push
fs
add
pop
outsl
add
cli
xchg
add
mov
pushf
push
neg
push
mov
xchg
aaa
dec
cmc
cltd
pop
js
adc
sub
jne
jns
xchg
dec
mov
xchg
jmp
push
pop
ret
cltd
rcrb
inc
aas
std
mov
out
imul
jg
mov
xchg
icebp
scas
push
mov
cli
sub
outsb
test
fmul
pop
nop
in
ja
xchg
xchg
inc
xor
cmp
cli
and
pop
loope
add
stc
xor
adc
cmpsl
push
add
jo
into
ret
arpl
or
fists
sysenter
outsb
pusha
es
sub
fsts
pop
andl
jbe
cmp
or
test
fstpl
iret
inc
out
sbb
and
push
pop
jns
push
mov
jge
ljmp
mov
movl
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
jns
adc
inc
fcomps
stos
pop
inc
daa
adc
stc
mov
jg
mov
aad
lret
lahf
mov
sbb
jecxz
mov
jmp
sub
test
xor
mov
cli
stos
ret
fisttps
pop
push
pop
sarb
xor
repz
or
and
imul
push
dec
std
jmp
lcall
mov
insl
pushf
sub
xchg
inc
push
jns
enter
in
pop
mov
push
push
stc
fwait
dec
push
push
lret
outsb
push
sti
mov
mov
mov
xor
mov
push
dec
jae
or
sub
jecxz
xor
aaa
cli
dec
mov
inc
pop
adc
sbb
xchg
in
fwait
inc
inc
pop
jge
lea
negb
pop
dec
mov
jp
xchg
rclb
inc
loopne
lea
loop
push
scas
mov
push
subl
aaa
test
scas
sub
mov
stc
jno
cltd
mov
clc
xchg
rcrb
and
inc
insl
mov
and
push
push
mov
jmp
pop
cmp
es
leave
and
mov
sub
andl
test
xor
xor
das
xor
pop
pop
pop
pop
or
push
repnz
mov
repz
add
jbe
pop
jno
movsb
inc
hlt
lods
push
lea
pop
in
mov
xor
jnp
sbb
mov
mov
sub
pop
pop
enter
jno
test
je
xchg
leave
popf
in
mov
shr
jl
scas
int3
or
iret
fidivrs
jle
aam
movsb
loopne
cwtl
loope
in
jge
andb
inc
inc
xchg
push
push
xchg
enter
jecxz
jbe
fistpll
inc
lcall
out
imul
out
movsb
sbb
xchg
pop
cltd
mov
in
in
push
test
sti
int
jno
xor
sti
mov
sub
imul
dec
gs
cmc
sub
jl
dec
mov
and
loop
lahf
sbb
cmpsl
mov
pusha
sub
dec
int
popa
int
cmc
adc
pop
pop
mov
movsb
lock
mov
inc
xor
jae
sti
push
cmp
xchg
mov
push
mov
lea
and
loope
mov
or
je
push
adc
pop
pop
fwait
mov
add
mov
mov
jae
fstps
fsubrs
shll
pop
test
mov
mov
test
push
adc
leave
dec
sahf
cli
test
testb
rorb
jmp
pop
mov
and
jo
pop
push
mov
insb
es
sbbl
cmp
lds
push
adc
sbb
in
lret
mov
push
dec
cmpsb
fisttpl
and
mov
and
dec
cwtl
dec
hlt
pop
scas
push
cmp
lock
adc
or
icebp
into
mov
push
leave
sub
add
mov
xor
nop
ds
pusha
fistpl
test
enter
mov
or
xchg
outsb
ficomps
push
xor
cwtl
xchg
mov
fdivl
push
pushf
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
es
jl
movd
jno
jle
lds
cmpsl
push
jmp
stos
test
push
sub
aas
xor
in
imull
out
lods
add
mov
cwtl
jecxz
das
addr16
dec
sub
in
adc
cltd
sbb
test
fadd
sbb
int
jecxz
je
aaa
inc
pop
mov
repnz
inc
jae
cmp
addr16
adc
sarl
mov
stos
inc
lret
xchg
and
xchg
ficomps
test
jl
test
pop
push
sub
xchg
shll
xorl
mov
xchg
mov
push
and
fstl
mov
loop
lea
fs
and
mov
dec
and
icebp
xor
sub
pop
call
inc
roll
push
fwait
xor
xchg
sbb
hlt
mov
scas
lret
outsb
movsb
pushf
gs
aaa
jae
test
data16
ret
xor
in
out
test
out
ret
jle
push
test
das
adc
xor
or
pop
nop
inc
test
xchg
push
mov
pushf
lods
pop
sahf
inc
jp
iretw
dec
jo
pop
sbb
mov
and
push
out
mov
js
imul
test
jl
sti
shl
imul
dec
pop
in
les
nop
test
pmaxub
inc
repnz
fwait
popf
cmp
mov
in
adc
jge
or
ss
mov
mov
dec
lds
out
push
push
in
popf
imul
mov
xchg
cld
cmp
adc
push
stos
fldz
out
fwait
or
sub
out
pop
mov
or
test
sub
mov
mov
sbb
pop
push
pop
xor
pushf
jbe
movsb
and
ds
scas
rorl
jns
dec
push
inc
ret
mov
jns
pop
cmp
dec
jne
or
pop
data16
push
test
aam
popf
rorl
testl
sbb
xchg
aad
cmp
in
sbb
gs
movl
aam
mov
js
sarb
daa
dec
dec
mov
out
sbb
jne
lods
adcl
and
mov
iret
cmp
add
push
xor
dec
pusha
dec
aaa
fists
xchg
repz
outsb
scas
inc
dec
jne
pop
xlat
or
test
rclb
in
xlat
xchg
mov
daa
cmp
add
add
pushf
mov
push
loopne
add
and
aas
imul
sti
dec
xchg
push
add
js
ret
inc
fcoms
mov
test
repnz
stos
xor
adc
inc
push
pop
mov
cli
loopne
das
jle
adc
xor
mov
sbb
xor
cmp
jl
or
subl
mov
xor
add
gs
imul
inc
push
inc
sbb
jb
movsl
cmp
loopne
cmpsl
test
in
mov
fiadds
sub
fnstenv
adc
in
arpl
pop
sub
add
add
pop
or
test
stos
add
lahf
xor
les
popf
sti
je
pusha
enter
gs
jno
rcll
sbb
and
push
xor
rolb
fstl
cli
ret
sbb
or
add
adc
add
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
rclb
shll
add
xorb
inc
or
aaa
inc
xchg
mov
cmpsl
mov
mov
sub
fs
lea
int3
clc
dec
out
lret
mov
jns
lock
lock
adc
mov
pop
mov
xor
jle
repnz
cwtl
rep
dec
js
insl
shr
mov
xchg
push
mov
dec
mov
push
flds
jnp
jmp
push
pop
mov
aaa
movsl
outsb
cmp
cli
aam
shlb
pop
clc
into
xchg
lods
bound
push
outsl
push
leave
dec
inc
out
loope
add
scas
mov
mov
mov
lcall
xchg
lea
stos
ja
lods
jno
shlb
cli
adc
in
mov
cmpsb
mov
adc
xchg
push
xchg
in
xorb
ss
lret
add
dec
xchg
dec
pop
pop
xor
xchg
jne
xchg
pop
in
adc
push
int
cmp
or
mov
mov
imul
jle
push
repnz
aas
xchg
fistpl
xor
cld
les
fcmove
mov
jge
inc
mov
and
jg
mov
ret
ds
adc
jmp
adc
and
sbb
std
adc
repnz
mov
pop
adc
aas
gs
xor
fwait
or
test
push
ret
push
push
xchg
test
sub
and
outsb
mov
decb
jg
popf
outsl
xlat
ljmp
inc
push
or
popa
jbe
pusha
popf
leave
mov
adc
pop
adc
outsb
mov
aas
repnz
mov
cmp
mov
dec
movsb
scas
cmp
andb
pop
mov
adc
insl
xlat
and
jb
sbb
xor
lret
call
sbb
jp
movsl
cmp
cmp
mov
cmp
in
sti
push
xor
test
and
dec
movsb
pop
sub
in
jae
push
sub
sbb
shlb
lahf
and
insb
or
xchg
or
pop
push
idivb
jno
loope
cli
cmc
mov
pop
adc
std
ds
in
repnz
shll
cwtl
xchg
and
js
xchg
mov
mov
sub
test
push
inc
adc
aam
or
xchg
mov
pop
sbb
dec
push
stc
jl
gs
inc
pop
push
or
popf
mov
lea
push
shrb
sub
insl
pop
icebp
cwtl
ja
inc
pop
lds
std
loop
xor
adc
je
jnp
add
xor
pop
inc
andb
ja
aad
in
outsl
loop
push
pushf
iret
cmp
sbb
ret
or
in
add
sub
and
jbe
or
pushf
mov
push
lcall
outsl
mov
cld
arpl
mov
lahf
mov
out
addr16
nop
mov
popa
xchg
xchg
jbe
or
pop
jecxz
xchg
or
and
xchg
fists
inc
aam
jae
xchg
sahf
mov
movsb
jno
outsb
sub
gs
cli
xor
adc
sub
dec
sahf
dec
and
out
pop
or
lahf
and
mov
xor
mov
jae
fists
or
popa
cmpsl
nop
in
movsl
and
xor
mov
loopne
std
and
lret
decl
call
sub
mov
inc
lock
jmp
jmp
adc
repnz
mov
test
inc
sbb
xor
pop
jle
xorb
call
movsl
sbbb
push
inc
rcll
scas
sbb
neg
xor
in
xor
pushl
lret
jg
sahf
ret
jae
mov
in
jno
out
mov
inc
jl
xor
loop
ficompl
add
scas
scas
push
movsl
pusha
xchg
aad
lea
cli
dec
lret
loope
int3
sub
fcmovnu
jecxz
insl
push
nop
push
arpl
fdivrs
stos
adc
mov
rol
in
lock
dec
inc
or
loope
or
or
lcall
lahf
je
fcomip
and
and
pop
sbb
fistps
jns
fdivrs
xor
mov
dec
inc
fbstp
lcall
dec
pop
cmp
orb
dec
in
loope
fiaddl
dec
cli
shlb
lock
push
out
inc
push
sarl
sbb
mov
jmp
and
xchg
movsb
loop
push
pop
lods
cmp
mov
lods
adc
out
fisubrs
into
push
xor
xor
je
lea
enter
popf
cmc
mov
or
sbb
mov
and
call
sbb
pop
movsl
adc
js
mov
in
addb
add
cmp
sti
dec
xchg
mov
mov
push
jmp
inc
iret
sub
stc
repnz
cld
ja
in
iret
call
xor
ja
jmp
sbb
iret
iret
es
xchg
shl
pop
mov
cmpsb
ds
xor
xchg
or
fsubl
out
or
sahf
jno
dec
mov
rolb
add
cmp
pop
mov
push
pop
jae
icebp
sbb
std
sub
and
dec
dec
insl
pop
or
mov
lea
movsl
sbb
jne
sbb
xlat
push
pusha
add
lret
and
data16
inc
inc
xchg
aaa
out
fstl
les
rcr
push
test
enter
fisubl
addl
adc
js
ja
ja
les
sub
jbe
mov
shrb
mov
inc
mul
adc
scas
xchg
and
cmp
and
or
paddd
push
stos
cld
pushf
out
mov
aaa
xchg
cwtl
and
or
adc
adc
pusha
pop
loope
movsb
arpl
fnop
stc
das
icebp
jp
lcall
ljmp
outsb
fsubl
lret
mov
cltd
fwait
into
jno
jmp
xor
cmp
mov
adc
xchg
je
cmp
push
lods
dec
mov
push
xor
sub
mov
mov
adc
ja
in
repz
inc
adc
sub
inc
arpl
insb
cmpsb
dec
int3
sub
adc
pop
mov
out
mov
or
mov
push
push
lahf
inc
lret
sti
push
and
adc
shrl
or
movsb
ds
jns
mov
xor
pushf
dec
test
mov
pusha
pop
jp
pusha
ljmp
mov
arpl
test
je
stos
mov
add
in
je
jb
jo
int
stos
sub
shl
insl
loopne
or
popa
js
test
inc
xchg
mov
es
xlat
inc
stc
je
push
mov
fimuls
enter
int
repz
inc
mov
pop
push
add
xchg
inc
cld
jmp
jl
sub
jge
jge
inc
sbb
fildl
and
sahf
sbb
xorb
add
pop
pop
mov
dec
into
add
std
mov
sub
mov
pop
fisubl
mov
pop
repz
mov
gs
jbe
das
and
popa
loopne
inc
push
push
xor
movsl
mov
lds
add
ret
loopne
bnd
mov
adc
mov
ljmp
mov
cmpb
xchg
movsb
loope
fwait
jno
mov
js
popa
nop
xor
xlat
push
sub
inc
das
add
push
push
xchg
add
pop
inc
xchg
inc
and
sti
test
add
clc
add
mov
divb
inc
cmpb
fs
into
mov
ss
xchg
sbb
mov
pop
inc
punpckhbw
stos
aam
js
add
mov
repnz
adc
dec
cltd
repz
push
aad
int3
xchg
loope
adc
push
rcrl
pop
adc
pop
jns
ss
pop
jno
dec
xor
cmp
sahf
or
mov
test
or
mov
lret
mov
nop
mov
bnd
and
sbbl
pop
mov
nop
scas
ret
or
pop
jmp
push
es
mov
or
sub
cmp
cmpsl
std
fistl
aas
sbb
mov
inc
push
add
adc
push
cld
xchg
sbb
and
jecxz
mov
xchg
dec
jmp
mov
and
lods
pushf
sbbb
pop
push
fs
inc
shlb
aas
jl
repz
enter
pop
lods
js
push
adc
sbbb
ljmp
pop
mov
fadds
pop
gs
mov
pop
fisttps
movsl
xchg
mov
leave
cmp
push
js
std
out
sub
pshufw
rorl
mov
or
in
or
cmp
int3
cmc
mov
or
mov
cs
in
adc
jns
outsl
es
or
xor
adc
movsb
sarb
mov
mov
push
loope
out
sub
push
and
mov
lock
adc
inc
movsl
gs
add
insl
and
loop
or
sub
and
subb
jle
loop
add
aas
sbb
stos
push
and
hlt
leave
adc
call
mov
stc
adc
jbe
mov
or
cmpsb
and
int3
iret
jecxz
insl
mov
movsb
mov
mov
jae
xchg
and
scas
mov
xchg
push
cmp
cltd
jge
inc
jmp
lahf
mov
in
rorl
lea
xchg
loope
jge
cli
ja
cmp
xor
subb
mulb
mov
sbb
pop
jl
test
xor
mov
mov
imul
push
and
jne
jl
cli
rcrb
divl
ror
xchg
ret
add
inc
inc
push
or
push
jb
sub
call
dec
cmc
xor
ret
std
pop
mov
mov
cmp
mov
sub
das
pop
insl
mov
jge
adc
cmc
sbb
lahf
or
xchg
push
dec
call
and
push
sub
test
test
add
clc
xchg
ficompl
or
fldt
je
add
mov
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
dec
xchg
jmp
and
jle
xorb
aad
jb
xor
lret
jg
xchg
test
mov
xor
out
add
mov
mov
les
in
mov
mov
fcomps
jge
shlb
inc
sbb
scas
andb
add
jl
push
mov
and
dec
outsl
test
xchg
sub
or
cmp
inc
xor
fnsave
ds
fsts
jg
push
xor
or
insl
mov
int
pop
and
push
cmpb
insl
subb
pop
out
daa
mov
out
sti
xchg
sbb
push
iret
imul
push
stos
sbb
inc
loope
cmc
inc
cld
xchg
dec
bound
xchg
dec
xchg
pop
sub
inc
cld
adc
stc
jmp
dec
std
aaa
shll
rcrb
xchg
dec
ret
and
sbb
xchg
adc
insb
imul
adcl
and
push
push
jno
xchg
test
es
adc
pop
pop
hlt
mov
rolb
pop
iret
pusha
sbb
inc
rcrb
mov
xchg
add
push
fmul
repz
dec
cmpl
shlb
adc
adc
push
imul
xor
or
inc
inc
and
sbb
clc
int3
out
outsb
decb
jb
or
je
movsl
adcl
dec
cmp
pop
pushl
cmc
lret
call
push
push
stc
inc
bound
adc
es
in
add
shrl
popa
decb
sbb
jb
add
mov
jmp
xchg
mov
js
ljmp
pop
test
pop
mov
dec
cmpsb
outsb
cwtl
add
xchg
ljmp
into
ret
jnp
outsb
test
mov
pop
dec
and
push
push
push
shll
jo
jg
out
std
addb
lahf
cmovo
mov
insl
in
in
insl
xchg
aad
cmpsl
arpl
fisttpl
loopne
and
mov
mov
add
fldcw
out
adc
pop
xor
or
outsb
dec
sbb
es
push
pushf
and
jo
adc
xor
into
jp
lds
lret
stc
pop
lret
repz
sti
sbbl
fimull
jno
adc
cwtl
lds
mov
sub
xchg
sbbb
in
adc
and
xchg
test
push
ret
loop
out
or
js
fnstcw
lea
icebp
sti
inc
dec
popa
jae
xchg
pop
out
mov
jg
xchg
shl
jbe
xor
fisubrs
inc
add
pop
int3
or
mov
mov
jle
adc
sahf
cmp
cli
jno
xor
xchg
inc
dec
mov
xchg
das
mov
cmp
in
push
mov
jb
out
movsb
cmpsb
push
push
in
out
les
pop
lea
cld
mov
mov
aaa
xor
out
popa
addr16
lods
xor
enter
inc
imul
mov
push
xor
xchg
push
push
out
inc
mov
xchg
mov
add
and
fbld
cmp
in
xchg
xchg
lcall
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
dec
mov
jle
mov
jle
or
dec
imul
jno
popf
dec
dec
lahf
xor
lahf
push
hlt
xchg
cmp
inc
das
sbb
repz
xor
iret
insb
iret
call
jp
mov
xchg
dec
mov
sbb
leave
pop
adc
cmpsb
sbb
adc
cmp
repnz
xchg
inc
jg
xchg
mov
movsb
cmc
cmpsl
mov
sub
cld
je
mov
test
pop
push
ljmp
inc
shr
ret
arpl
std
jne
std
icebp
in
out
and
mov
insb
push
movsb
repnz
lods
cmp
sbb
inc
xor
sbb
mov
sbb
push
inc
pop
add
cmp
sbb
pusha
jg
orl
jge
mov
mov
movsb
and
test
xchg
cld
loope
sub
mov
xor
mov
pop
cmp
jb
pop
daa
add
scas
push
sbb
mov
outsl
cs
pop
test
mov
popl
mov
decb
negb
add
or
mov
fidivs
jle
mov
fsubl
jle
aaa
test
rolb
xchg
adc
add
mov
push
sub
or
or
sarl
mov
mov
cli
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
cld
aas
icebp
ret
adc
mov
jle
jle
std
inc
sbb
mov
mov
sub
adc
ss
roll
xchg
or
dec
dec
jmp
xchg
shlb
outsl
sbb
movsb
adc
or
pushf
jo
xor
push
test
mov
jno
movsl
fsubs
rol
pop
sub
sysenter
pop
test
pusha
mov
add
jb
lods
js
ret
xor
rclb
lret
lea
mov
in
mov
mov
push
jne
test
fcomps
cmp
cld
lods
mov
pop
push
lods
shll
xchg
pop
pop
jmp
lock
icebp
jno
pusha
or
pop
lea
jne
ret
pusha
push
push
pop
cmpsb
mov
pop
test
fmuls
clc
mov
and
imul
repz
mov
add
ja
adc
daa
rcr
push
cmp
into
or
push
mov
rol
push
cmp
nop
mov
movsl
daa
imul
mov
enter
add
in
stos
push
jbe
pop
push
ds
data16
pop
in
cld
and
in
jecxz
test
sub
outsl
mov
pop
add
sbb
stos
xchg
cmp
shlb
icebp
leave
adc
sarl
xor
lock
popa
popf
shll
push
inc
leave
pop
xlat
into
call
hlt
lock
mov
jge
mov
gs
jno
movsl
xor
push
xchg
cmp
xchg
mov
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
sti
sub
frstor
addl
into
out
and
and
jg
iret
cmp
xchg
pop
cmp
cltd
sub
sbb
mov
add
inc
adc
icebp
push
lret
or
movsb
jns
je
sub
jl
lret
dec
nop
cmp
outsl
jbe
mov
or
cmp
scas
fsubrp
xchg
neg
mov
fisttpll
outsb
in
jo
outsb
mov
lods
jns
jnp
mov
std
adc
nop
testl
sub
shlb
xchg
arpl
mov
add
loope
sahf
xchg
sahf
lock
imul
into
lods
and
sub
dec
std
rcll
xchg
push
vandps
and
pop
popf
mov
shl
in
ficoms
mov
jmp
repz
dec
jmp
lahf
add
ss
sub
out
inc
in
movsl
mov
insb
sti
stos
rcrl
outsl
dec
sub
pop
inc
fildll
cmp
push
pop
mov
aam
loop
inc
outsl
call
inc
sub
jbe
inc
xchg
mov
fmulp
push
jle
pop
xchg
inc
jo
call
jmp
mov
pop
loope
fs
inc
and
jbe
add
mov
xor
out
jg
push
mov
jae
std
repz
push
into
sub
in
sbb
data16
cld
pop
mov
das
jle
lods
jo
fwait
jbe
mov
cld
xor
jl
insl
rolb
pop
fwait
sub
fstps
jmp
xchg
push
int3
jns
imul
fistps
jle
mov
jle
imul
xor
in
jae
shl
sbb
dec
iret
xlat
enter
pop
jno
add
aaa
mov
loopne
xchg
cmp
push
xchg
in
frstor
fwait
in
ret
imul
loopne
jbe
mov
mov
sub
addb
mov
popf
sbb
out
mov
fistpl
dec
cmp
pop
mov
dec
lret
pushf
jnp
push
mov
xchg
arpl
adc
divb
stos
jecxz
into
pop
inc
inc
lret
mov
add
cmpb
aaa
xchg
xor
or
insl
and
mov
push
cld
cmp
xor
imul
mov
push
inc
fwait
in
pop
sarl
jo
fidivrl
or
jb
sbb
pop
inc
jl
pop
aad
cwtl
daa
sti
stos
jo
aam
mov
dec
and
in
addr16
jle
call
push
pop
les
cmp
pop
push
inc
cli
or
aaa
cli
cmp
mov
ds
mov
rcrb
push
xchg
pop
test
in
push
test
sub
jbe
cs
test
mov
insl
lods
jle
jmp
or
mov
into
test
xchg
bound
testb
push
mov
pop
inc
sbb
push
daa
mov
mov
pushf
pop
repnz
mov
lahf
lret
das
leave
daa
xor
movsb
repz
inc
or
and
pop
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
mov
pop
jle
mov
jle
xor
pushf
pushf
mov
push
xchg
xor
jge
cmp
fwait
int3
dec
sahf
outsl
inc
mov
jmp
pushf
movsl
ds
push
dec
xor
test
and
sub
or
mov
push
lods
pop
je
nop
imul
mov
out
jmp
cld
test
pusha
dec
stc
jmp
xchg
and
xor
pslld
sbb
xlat
sbb
and
rolb
mov
jno
jb
xchg
push
xor
sbb
cwtl
inc
or
sub
xchg
push
test
scas
and
ret
and
shlb
cmpsl
pop
scas
jo
test
mov
cmp
scas
lods
or
addb
stos
cli
xchg
jns
orb
lods
pop
sub
dec
ret
push
repz
or
pop
adc
stos
sti
ss
fiaddl
sti
xor
mov
push
mov
jge
loopne
sar
add
xchg
jnp
lods
stc
push
stos
jb
pushf
in
jl
jne
lock
mov
flds
xchg
sbb
movsb
jl
adc
mov
sbb
fs
insb
clc
lret
scas
movsl
mov
mov
xchg
cmp
xchg
dec
jmp
sub
cmpsb
xlat
sarl
push
push
lret
cmp
push
in
sub
ficoms
lcall
push
mov
popa
push
jnp
add
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
call
jle
jg
jle
dec
adc
push
jle
repz
and
or
mov
push
shrb
mov
add
add
mov
inc
adc
pop
or
int
sahf
jne
mov
cmpsl
or
leave
das
cmpsl
lret
dec
or
mov
adc
stos
fimuls
mov
xchg
xchg
enter
mov
fisubs
adc
ds
fmuls
xchg
mov
ds
push
xlat
test
data16
fistps
cmp
jmp
push
and
mov
scas
or
mov
fsts
ret
adc
inc
insl
addb
test
das
adc
adc
stc
idivb
clc
hlt
jno
leave
lods
repz
and
sarb
fsubrs
into
and
inc
jecxz
gs
mov
mov
jo
push
fmulp
jp
jl
push
hlt
out
mov
mov
test
cmpsl
push
add
pop
mov
dec
imul
jmp
cmc
in
test
ret
enter
sub
mov
aam
mull
popf
adc
sbb
push
or
add
xchg
data16
aam
scas
stc
cmpsl
cmp
movsl
jp
fcmovnu
xchg
les
push
add
mov
scas
or
insl
xchg
shlb
dec
ja
sub
adc
push
add
add
cmpsl
out
inc
adc
mov
xor
add
mov
mov
mov
mov
jmp
andb
addw
int
sub
mov
jle
in
je
pop
add
adc
rcr
xor
popa
mov
xchg
insl
ds
jl
inc
lahf
cltd
or
mov
mov
sbb
imul
inc
ss
loopne
push
stos
cmp
arpl
ljmp
out
xor
push
inc
test
mov
pop
imul
push
int
pushl
jae
sub
icebp
hlt
repz
stos
pop
cli
in
xor
bound
jecxz
negl
repnz
pop
xchg
jecxz
fwait
push
lods
mov
xchg
pop
xchg
out
push
mov
jbe
push
bound
lea
jg
xor
sub
adc
jbe
pusha
sub
jne
in
or
scas
sbb
cmp
mov
sahf
adcl
and
and
in
pop
dec
pusha
cmp
rorl
sub
push
sub
cmpsb
iret
adc
mov
push
xor
pop
mov
inc
push
jl
sub
xchg
loope
mov
movb
popf
dec
aad
mov
enter
jmp
dec
add
cmp
adc
ret
sti
sbb
aaa
mov
stos
aam
data16
les
mov
lret
xchg
js
subb
arpl
dec
divb
pop
lret
out
push
cmp
xor
mov
std
imul
cltd
pop
inc
xor
add
jmp
test
xor
push
mov
xor
sub
jle
jg
jle
inc
sub
imulb
pop
int
sbb
mov
mov
push
sbb
xlat
lock
push
cmpsb
lahf
sbb
or
shll
sahf
sbb
xchg
inc
iret
mov
push
inc
orl
fwait
dec
stc
sub
faddp
test
popf
cmp
mov
repz
pop
ja
jp
sbb
test
sub
aad
outsl
xchg
clc
test
popa
push
mov
sub
pushf
or
lods
mov
lods
and
mov
add
jae
mov
inc
cmp
negl
arpl
push
jno
ja
sub
cmp
int
sub
xchg
sbb
jp
or
mov
call
out
arpl
mov
rorb
inc
adc
andb
and
jle
movsb
stos
or
sbb
fstp
pop
jmp
jmp
jnp
pop
pop
out
sbb
loopne
fs
fs
sbb
dec
xchg
dec
sub
ss
mov
pop
lret
sbb
dec
dec
and
loopne
jl
pushf
push
inc
dec
adc
jae
mov
leave
xor
call
cwtl
cld
sub
fistpl
inc
jne,pt
ret
in
ja
test
mov
jp
xlat
sub
cmp
sub
inc
add
sbb
fadd
sub
push
inc
mov
xchg
cmpsl
call
push
mov
or
hlt
cmpsb
test
mov
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
jecxz
out
cs
mov
jle
stos
mov
mov
jp,pn
stc
stos
xchg
ss
sbb
xlat
divl
pop
or
xor
push
xchg
cmp
cmp
cmpsb
push
push
loopne
fstps
add
mov
and
xchg
decl
push
cs
pop
inc
dec
into
pop
cmp
xchg
repnz
pop
test
xlat
add
std
or
loop
adc
dec
push
and
inc
icebp
xor
mov
in
mov
shl
and
rolb
push
outsb
inc
pop
out
aad
lcall
jp
outsl
clc
xchg
inc
adcb
call
stc
dec
dec
xlat
pop
cmc
xchg
and
aad
dec
test
inc
mov
add
test
or
xchg
stos
push
mov
mov
fisubl
stos
sbbl
dec
mov
adc
lahf
push
popf
xor
adc
das
pop
dec
xchg
xor
sub
pop
imul
gs
dec
mov
xchg
and
sub
enter
ja
adc
sti
and
add
pop
in
mov
mov
xchg
inc
cmpsb
inc
push
bnd
test
xor
out
cmpsb
or
sub
hlt
and
jnp
lcall
loop
inc
cmp
in
jne
xor
sarl
dec
push
stos
data16
mov
dec
mov
mov
inc
outsb
sub
push
pop
xor
inc
mov
xchg
pop
popf
jb
add
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
sbb
mov
jle
and
mov
jecxz
adc
or
mov
jnp
push
mul
imul
xchg
inc
jl
outsl
cmp
mov
fldt
push
and
lds
mov
or
mov
insb
xor
mov
inc
stc
mov
in
aaa
jbe
jecxz
int3
adc
push
adc
je
cltd
sbb
aam
sub
outsl
or
xchg
mov
inc
loop
inc
sub
jno
popf
or
sbb
cmc
xchg
sub
das
xchg
adc
push
js
ja
jle
mov
jg
adc
sbb
nop
push
add
inc
in
fldl
mov
shll
nop
sub
push
xor
out
pusha
cmp
ret
and
xchg
nop
adc
xlat
gs
push
mov
sub
jbe
mov
sahf
add
jns
stos
jno
add
cmp
mov
ss
adc
and
and
fwait
cli
jo
fwait
lods
lock
add
outsb
adc
push
nop
sahf
adc
sub
and
jl
mov
xchg
movsb
test
sbb
and
roll
outsb
and
xor
pop
xchg
mov
inc
pop
add
jns
enter
push
add
imul
cltd
adc
pushf
dec
jno
cmpsl
sahf
cmpsb
aaa
hlt
mov
xor
add
imul
jmp
mov
jns
dec
mov
popf
in
cli
enter
mov
jle
push
cmpsl
adc
mov
jle
or
sarb
dec
movsl
cmp
ret
gs
sbb
cmpsb
add
or
xchg
inc
sarl
mov
fwait
pop
push
fisubs
out
push
cmp
dec
ss
das
adc
mov
movsb
xchg
jbe
es
outsb
xchg
insb
mov
sbb
nop
xor
mov
xchg
je
imulb
xchg
xor
and
insb
nop
push
out
iret
push
cmc
mov
sbb
dec
jecxz
pusha
mov
xor
push
mov
xor
xchg
outsl
sbb
sbb
test
rcll
jns
rcll
ds
frstor
cli
push
bound
fisubl
push
daa
repnz
and
loope
cld
sub
adc
push
scas
addr16
sbb
daa
mov
and
in
lcall
mov
mov
bound
cmp
push
lret
jp
adc
leave
loopne
or
inc
test
out
inc
mov
mov
sub
dec
sbb
fdivs
xchg
xor
add
fsubrl
leave
jnp
pop
jle
cmp
shll
mov
pop
data16
into
inc
and
xchg
xor
mov
scas
xchg
in
ss
out
mov
mov
mov
pop
mov
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
mov
int3
and
jle
mov
jle
sub
adc
mov
leave
push
xlat
lret
jle
adcl
mov
mov
push
add
mov
xchg
mov
stc
fstpl
cli
pop
push
xor
cltd
fmuls
outsl
test
fstl
push
add
loopne
loope
enter
movsl
xor
jmp
dec
push
ret
je
hlt
stc
and
lahf
sarl
outsl
rcrb
arpl
insb
test
movsb
out
xor
or
popa
and
inc
dec
pop
sbb
test
push
iret
lods
sbb
or
cld
aaa
xor
iret
addb
inc
inc
push
xchg
lds
into
jecxz
mov
dec
push
xchg
jae
pop
test
mov
mov
mov
lock
xor
mov
pop
imul
jnp
in
xor
adc
mov
cmp
int
pop
sub
js
jns
inc
push
lcall
sub
rcrb
mov
cwtl
and
lock
mov
xchg
push
rolb
out
cmp
mov
movsl
fnstenv
mov
notb
ret
pushf
inc
aam
ss
add
es
pop
imul
cmp
inc
cmp
mov
movsb
inc
jb
repz
movsb
push
pop
mov
mov
loop
xchg
push
adc
sbb
dec
add
testl
or
jne
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
jp
and
jle
jno
jle
call
outsb
fnstcw
icebp
inc
add
gs
outsb
xor
fldl
add
movsb
sbb
pop
popa
fcmovne
shrl
pusha
movsl
mov
jo
xchg
xchg
push
les
adcb
sbb
addl
sbb
bound
lds
loope
push
aaa
mov
jno
or
cmpsl
into
jns
xchg
dec
push
lds
cmpb
dec
pop
dec
inc
xlat
decb
dec
ret
fildll
loopne
pop
pop
loope
dec
adc
gs
or
lahf
test
stos
and
sbb
adc
ds
sbb
out
adc
mov
fstl
adc
fsubl
pop
jae
call
mov
popa
sbb
shrb
and
pop
adc
test
les
cmc
pop
rcrl
push
sub
lea
je
fdivrl
pop
fs
movsb
xchg
lahf
dec
mov
clc
sbb
jne
loopne
scas
pop
push
inc
inc
jl
loopne
pop
jbe
sti
xchg
loop
nop
and
cwtl
push
out
sbb
jecxz
mov
mov
add
xor
int
mov
push
hlt
clc
sub
dec
mov
lret
mov
xchg
pop
ljmp
in
xor
add
ret
or
popf
xchg
mov
fst
out
sbb
cltd
or
in
lcall
mov
js
fimull
aam
clc
pop
xlat
pop
jmp
pop
lds
lock
xchg
jp
sub
push
pop
out
xor
pop
xchg
push
sbb
adc
cmpl
les
mov
fwait
inc
dec
pcmpeqb
inc
mov
rol
lea
adc
fisubrs
cmp
add
pop
dec
jge
mov
mov
mov
fsubs
notl
nop
mov
adc
jp
and
cwtl
ret
and
fs
dec
lds
sahf
or
cmp
imul
add
call
es
cld
or
add
andl
lret
loopne
inc
std
repz
inc
in
push
sbb
adc
arpl
adc
jl
cmpsl
push
adc
inc
mov
out
jno
adc
xchg
add
fcmovnbe
in
cli
fcompl
repnz
inc
push
dec
inc
cmpsl
mov
sbb
push
movsl
cwtl
in
push
into
fdivr
inc
push
push
repnz
iret
push
inc
repnz
pop
jne
xor
push
cmp
xchg
mov
pop
mov
fwait
push
and
push
add
loopne
repnz
jae
cwtl
insl
lds
push
gs
cmpsl
in
iret
dec
lds
sar
orl
shlb
fucomi
xchg
sahf
stos
sahf
nopl
jmp
fdivrl
xor
push
lods
dec
push
loope
fisttps
sbb
repnz
cmp
out
pop
lret
jo
bound
sti
adc
popa
test
dec
repz
inc
adc
mov
ficoms
in
add
lcall
adc
and
mov
in
lret
jl
ror
mov
int3
pusha
or
mov
xchg
cmpb
mov
rorl
loopne
lea
inc
daa
outsl
ja
and
mov
popa
es
and
stos
pop
push
jecxz
jp
int
pop
cmpsb
iret
imul
xor
test
mov
xor
int3
xchg
je
mov
aad
scas
popf
push
adc
mov
add
mov
inc
mov
repz
jae
jmp
push
push
jp
adc
cli
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
insb
adc
jle
mov
int3
ljmp
addb
xor
push
xorl
jo
or
xchg
xchg
mov
sub
lock
cmp
loope
push
push
pop
and
or
test
testb
xchg
fisttpll
jecxz
push
or
test
push
sbbb
and
inc
mov
sub
jae
cltd
adc
mov
aaa
mov
xor
loopne
adc
pop
mov
scas
sub
mov
mov
pop
aaa
nop
outsb
pusha
add
inc
insl
cmp
lahf
sub
pop
add
stc
mov
sub
push
jnp
adc
cltd
das
xlat
repz
push
add
sub
movsb
jb
shlb
sbb
cmp
mov
push
ret
idiv
stc
mov
loop
ja
add
mov
push
sub
pop
addr16
das
aad
mov
std
push
xor
repnz
jmp
dec
test
in
inc
pop
xchg
jo
mov
popf
xlat
sub
fdivr
xchg
inc
mov
loop
add
xchg
pop
fstl
jo
pusha
mov
sbb
adc
mov
mov
jp
or
pop
cmp
jne
mov
outsl
mov
clc
dec
dec
cmpsl
test
sub
and
adcl
cmpsl
pop
xlat
or
fsubs
out
std
lock
mov
es
lds
push
pop
ret
test
arpl
adc
mov
mov
insb
mov
fdivrs
or
jge
clc
or
cli
or
push
xchg
adc
sbb
mov
ret
inc
jne
sub
adc
mov
push
andb
js
cmc
daa
xchg
cld
leave
inc
jp
xor
mov
inc
loop
push
or
ds
dec
pop
sub
lods
outsl
stos
into
cmp
mov
jb
mov
aad
inc
sbb
jge
jb
ds
imul
add
and
inc
aam
out
ljmp
repnz
mov
sub
adc
and
and
push
iret
pop
pop
imul
jnp
pop
loop
add
mov
testb
dec
daa
outsl
nop
pushf
mov
dec
inc
cmp
sbb
push
jnp
mov
inc
mov
and
mov
cmpsl
dec
in
imul
jb
aas
dec
jb
and
insl
mov
aas
xor
sub
lods
xor
in
stc
adc
jo
sub
mov
int3
sub
imul
lcall
fistpl
inc
sti
and
and
out
or
aam
movsb
aam
bswap
pop
push
jno
fistpl
sbb
push
call
cmp
inc
ret
and
adcb
into
mov
aaa
xchg
stos
xor
lcall
les
xchg
push
mov
cwtl
xor
daa
cli
dec
adc
ja
lea
dec
jp
cltd
dec
xchg
insl
push
ljmp
in
adc
ss
icebp
mov
xor
mov
sbb
inc
scas
lock
fsubrl
pop
into
fnstenv
xchg
mov
sbbb
daa
or
rorb
jae
insb
fbstp
push
push
pop
inc
sbb
btr
mov
pop
pusha
cmpb
jb
repz
insb
xchg
cmpsl
jg
fs
into
sbb
popf
adc
int
popf
fucompp
lea
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
mov
jle
mov
ficomps
shrb
jno
int
pcmpgtd
inc
dec
pop
add
in
mov
cmp
adc
inc
fwait
push
sbbb
cmc
in
pop
dec
and
add
mov
sub
xchg
int
ror
rol
mov
test
popf
lret
inc
push
push
subb
out
jno
orl
repnz
adc
dec
inc
sub
push
push
repnz
mov
dec
cmp
cmp
testl
out
cs
mov
inc
gs
mov
mov
out
mov
push
inc
adc
into
mov
mov
push
sub
stc
xchg
test
jo
pop
push
mov
imul
stc
mov
jmp
xorl
add
test
shl
pop
mov
pop
data16
stos
loop
lret
loope
icebp
call
adc
ljmp
inc
jp
pop
xchg
pop
movsl
mov
std
jle
or
xor
xor
ds
clc
icebp
cld
mov
sbb
adc
in
fdivs
cmc
pop
add
int
pop
mov
adc
cmpsb
ret
stos
js
in
fwait
es
leave
jg
clc
imul
cwtl
lods
jmp
aad
call
cli
pop
jnp
xchg
ret
addr16
loope
scas
movsb
lret
cmpsb
int
sbb
push
xor
sub
lods
movsl
cld
aas
loop
and
or
sbb
fisttpll
mov
lods
cmp
mov
test
add
sbb
xor
in
jno
cld
je
pop
loope
adc
cmp
pop
insb
test
add
fildl
test
pcmpeqd
aam
outsl
xor
push
imul
in
inc
dec
leave
inc
rolb
stos
sbb
ret
mov
pusha
or
jno
adc
jo
sti
adc
rcl
xorl
jg
push
add
dec
pop
or
out
adc
test
mov
jno
lods
sub
sbb
mov
mov
jae
mov
aaa
enter
pusha
mov
push
xor
loope
int
mov
dec
and
xlat
push
inc
outsl
rcrb
cmp
push
xor
rol
fbld
in
fs
int
mov
pop
addr16
jle
dec
inc
pop
inc
mulb
or
cmpsb
adc
push
push
gs
rcll
pop
xchg
lret
mov
rcl
sbb
mov
pop
push
lock
sbb
test
or
and
and
outsl
sub
xor
adc
inc
jb
ja
repnz
adc
stos
out
jo
or
adc
mov
and
push
mov
sub
scas
rorl
sbb
add
jl
sub
and
or
in
pop
sti
stos
fdivrs
xorb
add
inc
lahf
lods
inc
push
xchg
aas
cmp
mov
filds
sub
std
js
out
aad
adc
test
xor
adc
aad
scas
lock
rorb
cmp
call
das
sbb
sbb
xchg
mov
into
and
stos
pop
fldenv
jne
out
cli
loope,pn
mov
aad
clc
in
xchg
rolb
decb
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
sub
aas
jle
mov
jbe
fmul
xor
push
or
cs
lods
sub
ficoml
insl
ret
sbb
mov
icebp
cld
in
in
sbb
stc
mov
cmp
push
mov
push
add
nop
sbb
xor
ds
or
sti
push
leave
fdivs
dec
push
dec
or
fsubrl
mov
dec
data16
or
xchg
lods
fstpl
ja
testb
and
fs
push
pop
mov
sub
cmp
pop
arpl
rcr
or
sbb
push
negb
popa
mov
stos
inc
adc
sub
rcr
mov
out
stos
add
nop
imul
dec
jmp
hlt
dec
adc
popa
jmp
xlat
inc
pushf
rcl
mov
mov
data16
xor
mov
fwait
mov
xchg
outsl
das
xor
pop
pop
cmc
pop
push
add
ret
or
add
jo
pop
sti
jle
or
mov
pop
xor
adc
in
and
inc
aad
sbb
add
pop
add
or
xor
xchg
iret
mov
sahf
arpl
sub
pusha
sub
inc
imul
push
rorb
lcall
aaa
xchg
or
xchg
add
mov
jecxz
mov
out
lret
mov
dec
mulb
loope
fldcw
pushf
adc
pop
cltd
adc
loop
out
sub
fwait
xchg
sahf
cmpsb
push
sub
jmp
outsl
and
jp
pop
xchg
dec
jecxz
cmp
rcrl
fldenv
adc
arpl
out
sahf
inc
test
lods
push
sub
fstps
sahf
ret
aad
pop
mov
out
rcrb
hlt
push
decb
dec
dec
cmpsl
mov
add
imul
dec
push
inc
add
lods
adc
dec
push
stc
dec
sti
iret
ljmp
xchg
xchg
mull
xchg
outsb
pop
cmpsb
mov
in
es
ss
xlat
mov
push
dec
rcll
xchg
push
adc
loopne
cmpsb
mov
pop
aad
call
push
sbb
arpl
and
jmp
into
push
xchg
daa
mov
jmp
jb
mov
fdivp
xchg
aad
rcrb
cmpsl
fwait
mov
repz
lods
ret
loop
aas
dec
jb,pt
mov
shl
movsb
add
jg
adcl
pop
xchg
inc
push
sub
xor
or
push
xlat
inc
jne
xchg
cmp
inc
das
dec
push
xor
jnp
fldenv
or
sbb
push
daa
dec
shrb
inc
xchg
xchg
fxch
fcompl
dec
enter
arpl
insl
push
lock
movsb
aas
sbb
into
cs
fmull
cs
jmp
xchg
dec
cmp
movsl
push
add
int3
hlt
jmp
dec
mov
sbb
jecxz
aas
imulb
iret
insl
mov
mov
push
mov
imul
stc
pop
jb,pt
into
mov
test
loop
or
or
xchg
and
stos
rcr
shll
pop
popa
sbb
lcall
sub
xchg
filds
incb
sub
jmp
sbb
mov
ljmp
idiv
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
repnz
mov
xor
fldl
xor
sti
dec
lret
es
jmp
mov
adcl
cli
mov
loop
es
and
das
add
je
push
lret
mov
and
sbb
fcoms
movsl
dec
inc
cmpsb
mov
mov
pop
into
or
aam
mov
and
xlat
out
pop
cmpsb
stos
inc
push
pop
xor
fcmovb
mov
jmp
hlt
inc
sahf
sbbl
push
pop
sbb
sbb
out
push
mov
out
and
imul
flds
movsb
nop
mov
or
insb
pop
push
pop
int
xchg
jb
jne
std
mov
cmp
mov
jmp
mov
xor
mov
mov
popa
loopne
lret
mov
ljmp
mov
fwait
jns
mov
sub
jmp
loopne
cwtl
bound
repnz
sbb
mov
pop
pop
arpl
daa
in
add
repnz
xor
cs
and
in
into
adc
cmp
mov
mov
lcall
cmpsb
adcl
push
cmp
fwait
push
gs
sbb
add
dec
scas
insb
loopne
mov
mov
add
and
or
insb
repnz
data16
adcl
insb
mov
test
jle
jno
mov
in
cmp
jb
mov
sub
sbb
into
testb
push
or
push
mov
aad
jne
mov
cmp
cs
pushf
mov
scas
test
out
xchg
notb
sbbl
and
dec
and
loop
jmp
sbb
xor
push
cli
int
or
jnp
inc
pop
push
sbb
push
repz
rcll
adc
faddp
out
push
pop
sbb
fistpl
icebp
shrb
jg
clc
testl
mov
adc
sub
or
ljmp
cld
xor
mov
sub
push
and
imul
sbb
out
stos
push
sub
dec
jbe
mov
loope
sub
into
and
aam
iret
pop
test
testb
icebp
das
jb
inc
sbbl
dec
inc
xchg
dec
dec
popa
pop
or
gs
push
aas
mov
xor
xchg
mov
sub
jne
cltd
mov
jl
repnz
push
addr16
and
fiaddl
sub
in
xor
mov
pop
mov
rcll
js
pop
dec
hlt
out
pop
test
cmp
aam
jl
sub
repnz
leave
push
aad
push
rorb
jbe
sahf
clc
or
mov
fistpll
mov
pop
and
or
lea
loopne
adcb
xor
jo
loopne
mov
es
flds
or
adc
shrl
mov
or
sbb
stos
add
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
cld
into
sbb
jmp
jle
inc
pop
inc
shll
pop
mov
leave
xorl
mov
mov
and
out
fbstp
xchg
mov
and
lret
adc
cld
ror
call
rolb
add
into
daa
mov
arpl
testb
sub
mov
pop
ret
and
popf
fstpt
addr16
inc
in
cmpsl
pop
inc
fucomip
fsub
and
jmp
lock
cmpsb
cs
repnz
fldl
lcall
adc
push
pop
pop
call
or
add
push
ss
inc
fdivrl
in
jb
ss
clc
mov
mov
jmp
fdiv
mull
cmp
inc
add
jns
and
jl
sub
push
add
pop
xchg
aad
jle
sbb
add
or
imul
jmp
xor
dec
xchg
mov
andb
push
cmp
and
fs
jnp
test
mov
and
add
call
jecxz
shrl
repz
leave
sbb
out
jp
insw
push
das
pop
pop
sbb
and
test
inc
xchg
out
push
aas
jmp
mov
addb
mov
push
mov
std
cmp
bound
fistps
xchg
bnd
jge
bound
mov
cmp
adc
stos
insl
add
cmpsb
xor
sahf
inc
mov
sub
sti
test
dec
mov
sti
mov
test
pop
gs
dec
fmull
call
jmp
cmp
mov
mov
mov
jp
dec
iret
adc
repz
stc
sbb
sahf
dec
xor
cmp
outsb
into
paddd
jmp
leave
fdivs
xchg
jle
mov
xor
cmp
sti
xchg
rcll
rorb
sub
es
adc
out
repz
fwait
xor
out
or
pop
enter
or
int3
iret
inc
or
lock
adc
js
or
int
loop
cmp
xchg
lret
xchg
outsl
js
ss
mov
incb
cmp
shll
mov
mov
inc
rol
scas
aaa
mov
imul
adc
add
movsl
out
into
sbb
or
andnps
pushf
mov
push
hlt
jo
insb
popa
sbb
fmuls
cmpsb
fcmovbe
pop
pusha
cli
pop
push
push
sahf
rorb
and
je
xor
imul
pop
xchg
enter
in
popa
shl
enter
jae
pop
push
inc
int
inc
sub
adc
popa
std
out
or
xchg
insl
lahf
movsl
leave
imul
mov
loopne
sub
imul
or
jns
into
test
mov
jae
hlt
lahf
mov
leave
mov
rclb
mov
mov
cli
or
stc
in
pop
loopne
movl
cltd
aad
gs
rolb
adc
rolb
sbb
dec
jmp
clc
xchg
push
sub
pusha
jp
loopne
or
or
rolb
das
rclb
push
pop
jnp
xchg
add
push
jnp
cmp
pop
pop
inc
mov
and
inc
add
jmp
repz
inc
or
pop
inc
and
sub
mov
repnz
cmp
jle
jmp
jle
or
js
lcall
lods
xchg
xchg
cmc
push
mov
or
xlat
xchg
mov
sbb
orb
into
xchg
ret
fisttpll
dec
insb
lret
cmp
add
push
fsubrs
ret
push
dec
sbb
into
arpl
insb
rorl
aad
imul
add
dec
stos
pusha
jge
cmp
out
pushf
adc
out
test
cmpsb
inc
push
in
lahf
inc
daa
ljmp
jo
cmp
jnp
js
pop
cmp
xchg
inc
mov
hlt
pop
xchg
dec
movsb
xor
cwtl
jnp
mov
or
sub
daa
test
sbb
mov
or
pop
sbb
xor
loop
test
fdivl
fnstcw
cmpl
and
fwait
cmp
inc
cmp
dec
mov
lods
cld
push
lods
mov
lahf
xchg
cs
nop
fimull
jecxz
in
pop
sarb
les
imul
insl
and
mov
xor
loopne
iret
pop
rol
cmpsb
mov
icebp
jg
mov
repnz
mov
and
sbb
mov
xchg
ds
push
or
subl
es
or
mov
pushf
or
orl
subl
pop
cmc
ja
aad
lahf
push
divb
pop
cmc
jl
ljmp
pushf
inc
mul
lods
inc
in
and
sti
dec
cmpsb
call
xchg
cmp
push
aam
adc
jg
sbb
in
cmp
cmp
xor
ret
cmp
fdivrs
jns
mov
xor
push
fildl
dec
repnz
fnstsw
jnp
mov
clc
pop
push
jecxz
xor
mov
stc
xchg
xchg
int
ljmp
sbb
add
addr16
or
push
xchg
inc
sub
fcom
cmp
mov
xorl
or
dec
inc
add
shrl
and
mov
jl
jno
mov
adc
jmp
cs
pop
xchg
inc
sub
add
mov
xchg
cmc
push
and
jmp
gs
add
pop
pop
rorb
stos
sbb
dec
push
pop
ds
hlt
pop
mov
ljmp
imul
adc
int3
jl
push
dec
inc
ja
jle
adc
sbb
push
aad
jb
inc
stc
mov
outsl
outsl
xchg
pop
sarb
mov
add
dec
xchg
jnp
xchg
mov
cmc
loope
push
movsb
pop
mov
jl
pop
sub
in
dec
mov
sti
das
sbb
cmpsl
cmpsl
daa
or
cmp
dec
xchg
pop
pop
jnp
inc
subl
testb
hlt
iret
mov
inc
ss
movsl
cmc
sbb
aad
fwait
push
mov
push
jmp
jno
enter
test
aam
lcall
call
insb
bound
call
jbe
jge
add
jl
lcall
ret
and
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
inc
sub
jbe
or
ja
dec
out
insl
pop
xchg
cli
sete
sbb
mov
mov
les
repz
jl
pusha
sti
or
in
mov
cmpsl
mov
aad
jg
test
mov
aaa
add
shrb
fidivl
daa
cmpl
dec
std
sub
mov
aaa
lea
inc
jle
push
push
xchg
add
jecxz
push
test
inc
push
cmp
fcmovu
into
jo
and
fsts
dec
xorb
imul
inc
nop
arpl
sub
jmp
sbb
cmpsb
in
mov
insb
push
dec
mov
xchg
repnz
sbbb
mov
fxch
cmp
loopne
cmp
push
inc
jl
lds
mov
test
scas
popf
cli
fnstsw
sbbl
ljmp
cli
xor
mov
lret
divb
jnp
dec
out
xlat
pop
inc
fadds
scas
aas
bound
clc
test
repz
mov
test
xchg
mov
xchg
cmp
ffreep
cmpsb
push
popa
lahf
mov
push
mov
sub
shll
sbb
mov
fdivrl
popa
xchg
cmp
cmovne
mov
in
inc
pop
mov
push
add
mov
cmp
inc
clc
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
cmc
sbb
or
jle
sarb
jle
xchg
ss
shll
orb
adc
es
addr16
cmc
cmpsl
push
cmpsb
dec
mov
mov
popf
lock
xchg
jmp
les
testl
imul
jo
xchg
mov
jne
cmc
push
mov
pop
fcomps
mov
bound
cmpsb
jno
lock
pop
push
sbbl
mov
dec
or
mov
lahf
xchg
insl
ss
das
subl
into
iret
ret
stos
jae
mov
ss
leave
movsb
or
stos
pop
sbb
ja
sbb
sbb
bound
pop
xchg
std
insl
or
mov
xchg
enter
cmp
pop
mov
ret
js
push
mov
dec
sbb
push
data16
inc
test
dec
pop
xchg
lock
pop
rolb
sbb
insl
pop
mov
rolb
add
push
in
movb
push
xchg
popa
iret
dec
xchg
mov
sarb
movsb
flds
xor
push
lock
fimull
mov
pop
xchg
mov
and
cltd
fidivrl
out
xchg
fwait
shlb
movl
mov
cwtl
adc
mov
out
clc
inc
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
or
jle
sarb
jle
mov
ss
and
idivl
ja
adc
mov
fnstenv
outsb
inc
mov
pusha
aad
xchg
mov
dec
les
out
lcall
in
cltd
mov
cmp
mov
cmc
sub
aad
push
and
xor
cmp
out
sbb
fsubrp
sub
cli
add
mov
pop
fcom
mov
test
or
cmp
rcrb
xchg
bnd
sbb
sbb
hlt
pop
push
jg
cmp
lods
in
lahf
mov
cs
add
cmpsb
jno
pushf
push
xchg
jbe
shlb
mov
int
push
add
insb
pop
xorl
stos
xchg
inc
repnz
sti
and
vpunpckhwd
mov
aam
sbb
sbb
push
cmp
addr16
jg
repz
xor
and
sbb
jl
nop
stos
into
jnp
mov
scas
mov
clc
dec
nop
dec
testb
in
xchg
aas
push
and
cmc
jno,pn
jns
pop
lock
test
std
push
fdivr
fmull
call
repz
push
aad
inc
adc
stos
xchg
repz
sbb
add
cmpsl
leave
xlat
jle
loop
dec
adc
mov
sub
mov
jns
mov
jmp
jae
cmp
cli
vpaddw
incl
and
lcall
jg
jle
pop
inc
fdivrp
cmp
and
jbe
in
jae
adc
mov
mov
stos
xchg
in
icebp
dec
aam
jbe
hlt
pop
mov
pop
pop
mov
fidivl
daa
pop
lahf
mov
insl
test
or
ss
bound
xor
pushf
roll
push
pop
in
sbb
adc
and
ja
jmp
jo
dec
negb
xor
fidivrs
and
and
icebp
jo
into
imul
test
adc
mov
mov
je
das
insb
cwtl
mov
xchg
xchg
adc
push
and
outsl
aam
enter
insl
leave
dec
icebp
fsubp
enter
jns
add
jge
jle
mull
repz
sahf
dec
idiv
mov
imul
sbb
ljmp
mov
mov
js
nop
mov
jne
fcoms
sbb
or
mov
sbb
mov
rolb
dec
in
mov
push
sbb
ljmp
aaa
add
xchg
repnz
repnz
xorb
ret
cmp
gs
dec
movb
dec
cmpsl
cmp
ljmp
push
inc
sbb
or
mov
sbb
inc
cmc
test
add
xor
mov
add
jmp
push
fsubs
pop
xchg
push
imul
mov
jle
jg
jle
loope
ret
jmp
clc
and
adc
cwtl
das
dec
lahf
popa
int3
jbe
stc
outsb
jecxz
insb
jl
mov
dec
test
mov
inc
out
ds
ja
test
inc
add
dec
in
push
cwtl
dec
xchg
insb
lea
out
inc
fcomps
inc
in
sub
add
push
and
jle
push
call
cmc
ficoms
fstpl
add
lds
or
inc
stos
shl
sbb
xchg
and
loopne
je
add
jg
push
in
mov
jg
loop
mov
mov
xor
dec
inc
jl
test
lret
aam
adc
and
pop
into
mov
inc
mov
outsb
daa
adcb
into
pop
clc
sbbb
mov
fwait
popf
loope
testl
gs
cld
cmp
adc
outsl
inc
push
test
xchg
pop
or
pusha
roll
out
lods
sbb
cld
fisttps
mov
daa
mov
dec
jp
cmp
cmp
xor
inc
lods
sbb
dec
jb
ljmp
mov
es
xlat
xchg
and
outsb
dec
mov
cmpsb
fs
fisubl
out
popl
mov
arpl
fnsave
ja
push
sbb
jge
push
loope
mov
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
mov
loop
cltd
les
sarb
jle
jge
pusha
decb
lahf
testl
sub
rcrl
cwtl
in
or
pushf
sub
xor
scas
xor
lret
push
xor
iret
movsb
and
add
stc
sub
cld
pop
sbb
stc
xchg
les
bswap
dec
aad
jbe
addb
push
not
jae
sbb
ret
mov
mov
imul
pop
jbe
std
loopne
sub
add
xchg
or
sbb
mov
pusha
mov
pusha
lret
and
adc
loope
cmc
push
xchg
ss
adc
dec
or
jle
jp
add
push
scas
xchg
lret
pop
es
jl
jecxz
mov
cmp
or
pop
xchg
add
imul
adcl
movsb
loopne
in
bound
aam
cld
mov
cmp
sub
or
loope,pn
sbb
pop
movsl
cmp
int
cmpsl
cmp
or
dec
dec
and
pop
es
cmp
lods
sbb
dec
pop
inc
loopne
stos
loop
push
imul
xchg
mov
ljmp
cmc
mov
mov
out
push
sahf
inc
mov
aad
or
mov
int3
fstpl
mov
in
ljmp
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
ficompl
pop
mov
lds
sarb
jle
add
loopne
ss
insl
das
add
mov
mov
mov
faddl
scas
xchg
cmp
mov
cmp
or
fdivs
mov
fxch
shl
xor
inc
lcall
cwtl
test
inc
cmp
test
pop
xor
repnz
popf
mov
arpl
fwait
int3
sub
or
sbb
std
pusha
sahf
fcmovnbe
cmpl
test
scas
stc
sbb
in
push
stos
pop
mov
pop
ja
lock
xor
mov
sbb
inc
std
test
adc
insl
dec
dec
sbb
rol
call
push
xor
cmp
or
lock
popf
push
jp
adc
idivb
orb
shrb
rorl
dec
fstpt
mov
push
es
xor
sbb
out
push
and
lock
and
faddl
popf
cli
lods
into
imul
repz
xor
cmp
je
mov
adc
jmp
rcrb
push
jmp
xchg
adc
ljmp
xchg
arpl
or
dec
lcall
inc
cld
mov
sub
xchg
jle
cmpsb
inc
popf
dec
mov
repnz
mov
fxch
mov
jns
dec
mov
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
lcall
jle
jg
jle
xchg
sbb
or
stos
cmp
ljmp
xchg
cs
jb
stc
leave
in
sti
fucom
mov
or
rorb
clc
inc
sub
outsb
adc
ljmp
mov
je
adc
pop
out
ss
mov
jge
pop
mov
shrb
push
dec
pop
inc
bound
cld
sbb
adcb
pushf
mov
add
push
in
les
ret
orb
and
push
loop
out
push
ficompl
fmuls
cmp
and
xor
pop
xchg
insb
sbb
mov
popa
pop
mov
jg
arpl
cmp
lods
mov
mov
mov
push
fmulp
xor
inc
xchg
jbe
filds
aam
ret
in
sub
sbb
jecxz
shll
or
dec
dec
fninit
mov
push
adc
aaa
jecxz
sar
jae
pop
jmp
pop
mov
clc
or
and
lea
inc
mov
pusha
push
lock
ret
sbb
nop
pop
sub
out
push
and
je
sbb
and
xor
jle
dec
or
lock
pop
add
push
test
xchg
cmp
fdivrs
out
inc
int3
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
dec
mov
mov
jle
sarb
jle
std
xchg
fcomip
movsb
dec
stc
shll
arpl
add
mov
enter
pop
nop
mov
leave
aam
sbb
pop
pop
add
mov
mov
push
call
dec
ljmp
or
in
mul
enter
mov
dec
inc
in
dec
xor
mov
or
pop
pop
test
int3
loopne
pop
fdivs
ljmp
cmc
lcall
add
lea
nop
pop
fs
pop
es
pop
out
jns
mov
ss
shl
lret
push
das
adc
add
jmp
mov
sbb
add
mov
sbb
and
jge
add
jge
out
out
mov
xor
rclb
inc
sbb
addr16
outsb
in
and
jb
rcrb
fwait
cmp
scas
mov
cmp
imul
fcoms
fs
enter
push
adc
add
push
out
incw
or
cmpsb
mov
dec
in
outsb
lods
add
mov
sub
mov
gs
cmc
adc
pusha
or
mov
and
faddl
outsl
xchg
and
addl
pushl
push
sbb
inc
in
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
ret
ret
inc
sbb
mov
inc
inc
mov
jns
add
push
hlt
in
movsl
sub
cmpsb
or
dec
test
xor
cld
hlt
ffree
mov
jp
jnp
pop
loop
push
inc
sub
mov
jl
pop
push
mov
inc
pop
xlat
pop
inc
nop
arpl
ss
jmp
cmp
pop
pusha
jnp
stos
cmp
pop
xlat
scas
pop
xchg
xor
cld
xchg
jno
jecxz
imul
push
mov
push
xchg
sbb
jg
addr16
imul
dec
and
sti
jne
dec
xchg
sar
pop
nop
jg
cmp
cmc
or
jnp
xchg
scas
push
lods
mov
lods
fwait
and
push
push
popl
sbb
sub
rol
imul
cmp
mov
cmp
das
jbe
jne
out
sub
lret
xchg
lock
fs
jne
xchg
mov
cmp
and
sub
inc
leave
inc
ljmp
cltd
cmp
cmc
cmpsb
repz
inc
xor
out
mov
rclb
inc
in
sub
and
cmp
in
or
leave
sti
jl
xchg
jle
push
decl
push
pop
pop
mov
pop
cld
cwtl
aas
sti
cmp
or
xor
push
sbb
arpl
fidivrs
ret
cmp
and
sub
mov
push
mov
in
mov
sbb
jbe
mov
ret
out
mov
push
or
shr
add
add
fldl
fstpl
inc
inc
jmp
jp
fstpt
sarb
jle
cmpsb
cmp
aam
jg
mov
ljmp
in
inc
mov
sbbb
loop
and
pop
sub
pusha
jno
fmull
push
lock
push
adc
pop
sbb
jbe
aas
sahf
jb
fucom
sbb
or
pop
push
lea
mov
aad
clc
scas
mov
lods
xchg
xchg
pop
orl
adc
js
mov
mov
cmc
xlat
pop
pop
in
iret
aas
jg
hlt
and
dec
pop
mov
aad
cmpsl
and
jnp
sub
cmp
or
repnz
in
or
push
jbe
andl
push
addr16
imul
pop
scas
or
adc
and
stos
and
push
jae
icebp
jne
movb
andl
js
outsb
mov
xor
xchg
add
shl
inc
mov
jno
push
out
pop
test
aam
pop
js
shl
push
or
mov
mov
iret
imul
xchg
movsl
mov
xor
mov
call
inc
push
negb
push
and
in
jl
stc
and
out
push
sub
mov
jmp
cmc
dec
jnp
arpl
or
push
test
nop
cmp
add
lret
nop
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
jmp
dec
push
popa
fdivrl
push
jo
jle
jbe
out
scas
pusha
pop
dec
add
jae
in
mov
lea
inc
sub
cwtl
les
mov
cld
leave
sub
out
repz
push
insb
ljmp
aam
aad
insl
mov
sbb
test
rcrb
or
dec
test
mov
stos
pushf
mov
scas
push
lock
iret
movsl
int
cmp
xchg
insb
std
fistps
cmpsb
pop
mov
mov
test
into
pushl
dec
and
and
mov
sbb
push
cli
push
leave
into
mov
cmpsb
inc
push
movsb
add
xor
xor
cmp
push
mov
cltd
data16
and
mov
in
add
mov
mov
icebp
jo
sbb
jmp
push
cmp
arpl
xor
ljmp
jmp
lods
add
in
mov
sti
jo
inc
hlt
pushf
pop
sahf
scas
mov
std
lea
mov
jg
sub
and
mov
cmpsb
aaa
mov
out
push
pop
mov
scas
leave
subb
mov
mov
dec
sbb
outsl
pop
pop
ljmp
mov
mov
loop
jge
sbbl
fnstenv
subl
add
xchg
cmp
scas
cmp
dec
cmpsb
aad
dec
in
pop
ja
jmp
jmp
sub
je
mov
or
popf
jns
inc
add
xor
or
lods
pop
dec
pop
jbe
pusha
outsb
repz
jle
dec
int
jo
negl
rorl
xor
mov
mov
xchg
fdivrs
or
data16
mov
mov
jb
pushf
mov
or
inc
ds
add
cmp
rclb
gs
or
adc
sub
jns
add
icebp
out
ljmp
jl
sub
or
xchg
arpl
or
xchg
mov
stos
fistpl
stos
addr16
shl
bound
cmc
aad
divl
ret
ds
arpl
and
jl
repz
adc
sbb
sbb
int3
daa
out
insb
mov
aas
pop
filds
shl
adc
shrb
jmp
aas
inc
or
adc
stc
in
inc
fs
jp
scas
xchg
repnz
xor
adc
rclb
xchg
sbb
sbb
dec
sbb
aam
jae
cs
cmp
add
cld
mov
xchg
popa
or
sbb
fcmovne
arpl
loopne
or
or
daa
in
sar
dec
div
jb
js
mov
mov
div
mov
and
jmp
out
xchg
imul
bound
cmp
jle
jo
jle
sub
cltd
hlt
into
adc
js
lcall
mov
int
cmp
cmpsb
sbbl
lret
cmp
sub
jbe
lock
scas
sub
andb
outsl
lret
sbb
sbb
adcl
add
xchg
bound
stc
xor
sub
test
jae
js
in
pop
ret
inc
adc
sar
mov
icebp
ret
inc
xchg
das
aas
gs
push
dec
loopne
inc
out
xchg
jno
lcall
pop
rol
rolb
js
jle
adc
sahf
lahf
aaa
cmpsl
aad
push
or
ds
xchg
scas
test
and
jmp
jp
lock
xor
mov
outsl
cmp
sbb
jb
inc
sbb
stc
push
aaa
call
jb
stos
insb
jecxz
inc
shll
enter
jmp
loope
or
add
sub
aas
jecxz
lock
cmp
xor
pop
jmp
sti
imul
push
int
fidivrs
sbbl
loop
mov
mov
pop
mov
dec
push
and
mov
push
xchg
je
stos
fsubrs
cld
loope
je
out
xchg
and
int3
push
pop
stos
scas
inc
insl
push
jmp
xor
stc
or
mov
xchg
mov
xor
lret
mov
jns
ljmp
add
xor
sbb
xchg
pop
leave
es
into
lods
sahf
insb
js
add
cltd
and
and
mov
xor
ljmp
ja
shll
shrl
insb
adc
or
cmpsb
gs
and
push
shll
ja
or
fs
mov
cmp
xchg
int3
mov
data16
add
mov
jmp
dec
dec
out
stc
into
popa
xlat
dec
push
scas
xchg
fcoml
test
sbb
retw
sti
pop
mov
mov
ret
push
jmp
mov
mov
fxch
movsb
inc
mov
adc
or
clc
adc
push
mov
sub
inc
xor
and
loop
repnz
sbb
lcall
sub
mov
loopne
aad
les
aas
fcomip
sbb
sub
pop
xorb
inc
push
out
rolb
lods
mov
adc
sbb
jae
jb
jbe
test
stos
xor
in
mov
iret
ds
ret
mov
sub
js
ljmp
bndstx
fstpt
dec
and
cmpsl
xorb
mov
fmuls
or
mov
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
adc
sarb
inc
jg
jle
inc
cwtl
icebp
nop
jno
and
sbb
outsl
into
je
pop
shll
inc
mov
frstor
enter
sub
sahf
jo
cli
sub
arpl
enter
inc
mov
mov
loopne
js
popf
add
xor
cld
or
mov
jg
subl
repnz
pop
es
sahf
cltd
pop
dec
mov
pop
push
scas
cmpsl
stos
leave
lods
cmp
nop
in
pop
push
pop
dec
sbb
sub
adc
and
push
push
aam
jo
add
xchg
mov
lahf
jmp
mov
or
out
push
xor
loopne
inc
ret
mov
ds
hlt
mov
in
dec
mov
push
mov
in
insl
dec
jecxz
hlt
outsb
rep
xor
pushl
mov
add
sub
out
lret
lock
push
jbe
cmpsb
js
xor
dec
mov
lods
and
std
shll
sbb
sub
and
pop
in
cli
loopne
ror
mov
sbb
aas
movups
inc
pop
mov
fcomp
insl
lcall
mov
lock
int3
inc
jge
lods
add
mov
sbb
jbe
jle
es
lods
xchg
shrl
fmuls
mov
ficompl
push
addr16
scas
lods
mov
stc
data16
adc
nop
mov
dec
jmp
cli
mov
mov
gs
loopne
inc
jne
mov
testb
add
call
insl
test
jno
sub
inc
fidivrs
loopne
pand
mov
mov
ljmp
or
cmp
add
push
inc
add
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
in
jb
fisttpll
jle
or
pop
leave
scas
punpckhbw
movsb
stos
cmp
xchg
int
push
cwtl
cltd
lcall
ss
mov
mov
lds
inc
pop
ficoms
cmc
aas
cli
cld
and
aaa
stos
cmp
mov
xchg
jo
ret
mov
je
jnp
ret
lea
push
mov
hlt
push
xchg
fwait
jno
outsb
lds
mov
add
add
sub
sbb
cmp
out
jle
adc
adc
stc
pusha
xchg
stos
pop
rcl
xor
cmp
in
or
jecxz
test
sti
push
jbe
cmc
and
js
loop
xor
xchg
xchg
div
mov
sub
and
push
push
jecxz
pop
mov
mov
xor
test
xor
or
pusha
push
add
pop
scas
jmp
push
mov
into
xchg
fwait
cld
xchg
jbe
mov
sti
fcoms
jae
inc
mov
js
sahf
pop
sub
scas
imul
gs
ss
pop
xor
mov
nop
lods
cwtl
xchg
inc
lahf
adc
cli
insl
stos
imul
clc
fildl
adc
mov
fists
movsl
test
pushf
mov
mov
rep
push
jno
movsl
cs
aas
cmp
or
and
ljmp
mov
and
add
adc
lcall
xor
shlb
xchg
shl
lcall
fisubs
inc
jl
adc
ljmp
xor
sub
loop
ret
add
bound
lcall
cmp
pop
enter
out
add
push
jbe
rdpmc
roll
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
xor
dec
shrb
fldln2
fwait
repnz
ja
push
pop
es
pop
xlat
or
sub
outsb
jecxz
sbb
imul
scas
xlat
nop
lea
mov
fstpl
xor
or
cwtl
sbb
pop
ds
lds
cmpsl
imul
loope
repnz
sahf
clc
in
mov
je
ljmp
push
sub
dec
mulb
outsl
jnp
lret
hlt
movsl
adc
into
outsl
dec
or
cmp
jo
sarb
jnp
test
pushf
dec
lret
jns
push
push
imul
dec
sbb
push
jns
popf
mov
inc
fstpl
cmp
adc
inc
push
mov
sbb
jp
in
mov
or
pop
ret
stos
xchg
add
jno
scas
ss
push
sbb
cmp
shr
sbb
pop
stos
adc
hlt
dec
jnp
int
bound
mov
mov
jns
jmp
cmpsl
sbb
lock
ljmp
lods
mov
imul
xor
cltd
iret
mov
cmpsb
movsl
mov
call
jne
pop
mov
sub
nop
ja
movaps
dec
mov
push
shll
movsl
mov
lods
mov
mov
call
jb
scas
notl
ret
xor
xor
in
xchg
lcall
xchg
add
add
push
adc
xchg
aad
xchg
insb
mov
enter
rorl
sub
cmp
lahf
mov
enter
mov
bound
inc
pop
xor
inc
stc
orb
cmpsb
stos
arpl
ss
scas
cwtl
lahf
mov
in
mov
jne
mov
xor
mov
stos
cwtl
jge
mov
fstps
xor
mov
sbb
stos
jb
rcl
loopne
cmp
xorl
fdivs
popl
movsl
pop
and
aas
mov
mov
ds
fidivl
orl
push
rorl
imul
xchg
mov
and
movsb
inc
outsb
xor
or
add
pop
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
xchg
fbstp
jle
out
stos
jne
xor
faddp
scas
and
xchg
movsl
test
add
bound
shrl
adc
xor
jl
bound
pop
push
popf
das
negb
das
jle
adc
popf
xor
push
fs
pop
adc
lea
mov
push
cmp
orps
xchg
pop
shll
mov
in
pop
shlb
xor
movsl
repnz
test
neg
int
and
pop
in
jl
jae
daa
add
xor
push
add
xchg
out
test
mov
scas
push
lods
ss
cmp
lock
enter
lods
xchg
xor
jp
lret
lods
out
pop
xor
jecxz
inc
stc
xor
sbb
pop
aam
movsb
insl
xor
gs
push
cmp
inc
les
fbstp
xchg
sti
jl
push
pop
add
sbb
je
xchg
inc
mov
fs
daa
cltd
lret
mov
cltd
andl
mov
fcmovbe
jl
mov
add
incl
add
insb
push
into
and
dec
dec
aad
adc
pop
lds
cmc
movsl
jne
xchg
pop
addl
xchg
jecxz
icebp
testl
into
dec
cmp
imul
ret
push
fwait
popf
inc
mov
fs
xchg
iret
jle
adc
dec
stc
add
data16
sbb
push
mov
in
cmpsl
mov
dec
ret
xlat
jg
cltd
pop
movsb
lret
call
adc
adc
push
minps
cwtl
loop
fisttpl
sub
xchg
pop
xor
or
dec
pop
orl
lret
xchg
shl
sub
cmp
and
xchg
test
and
jle
fidivrl
loop
mov
cmpsb
es
mov
mov
shrl
jg
rclb
jnp
data16
test
iret
nop
out
scas
pop
xchg
jne
jo
stc
and
cmpsb
pop
jns
pop
leave
adc
jmp
scas
dec
and
rcll
push
sub
data16
mov
fs
scas
sbb
cmp
insl
cmpsl
jg
or
loope
out
stos
mov
cmp
xor
leave
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
sti
je
adc
jg
jle
movsb
faddl
inc
jo
es
add
xlat
adc
js
arpl
loop
aad
sub
push
jecxz
lcall
mov
push
or
hlt
sub
fildll
ljmp
stos
adc
add
mov
cmp
lcall
aas
lret
inc
sbb
bound
hlt
or
aad
fcmovnu
cmp
mov
mov
mov
out
adc
jae
iret
sub
loop
movsl
jl
ds
fldt
xor
xchg
add
xchg
std
sub
fdivrl
fidivrl
fistpll
mov
stc
inc
enter
ja
mov
cs
and
call
aam
out
add
data16
loop
dec
cwtl
movsl
jg
lcall
xchg
leave
sub
pushf
xchg
mov
repz
and
and
clc
jbe
mov
test
adc
mov
dec
mov
adc
jg
fwait
movsb
inc
adc
aaa
pop
test
ja
push
outsb
shlb
xchg
es
push
imul
dec
hlt
pusha
or
jmp
xchg
notl
mov
insb
mov
sbb
and
in
pop
in
xor
pop
cmp
pop
jno
mov
push
and
pushf
mov
lret
and
xor
pop
or
cmp
dec
cwtl
pop
iret
fiadds
adc
xor
and
lcall
dec
mov
ret
or
es
out
mov
pusha
aam
call
mov
call
dec
mov
les
lds
fnsave
out
lcall
divb
sub
lods
aaa
or
movl
or
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
dec
jp
sub
jle
pop
jg
jle
sbb
cltd
sahf
dec
or
nop
or
inc
inc
nop
mov
push
aaa
jge
mov
xchg
movsl
sbb
and
lret
push
int
xorl
and
ret
pop
ss
mov
fsubrs
add
lcall
test
push
out
xor
inc
push
in
sbb
sbb
cwtl
test
scas
aad
dec
notl
cmp
pop
jns
and
fimuls
mov
mov
add
push
sbb
clc
orl
dec
inc
leave
mov
xchg
push
in
sbb
fnsave
je
xor
cmc
dec
addl
lock
hlt
imul
imul
fwait
add
lcall
imul
in
test
test
push
movsb
hlt
pop
sbbb
iret
movzwl
bound
fisttps
fiadds
mov
jg
sbb
mov
popf
leave
nop
cmp
fwait
pop
insl
loope
xchg
sbb
dec
push
repz
cmpsl
mov
repz
xor
cli
inc
or
imul
xor
dec
mov
inc
int3
lock
push
sbb
sbb
mov
inc
sub
and
nop
or
call
and
into
sub
das
inc
je
out
pop
add
into
inc
lods
fisubl
aaa
dec
notb
push
cmp
cmp
sbb
test
call
stos
mov
sbbb
lret
and
fstpt
or
dec
xorb
dec
jg
xor
xor
add
jmp
pop
icebp
lds
fs
xchg
imul
rcll
jle
pop
jg
jle
jg
out
and
sub
dec
xor
inc
add
test
cld
pop
pop
ds
les
lods
push
lods
dec
test
mov
xlat
mov
ret
call
push
cld
orps
mov
sarl
xor
or
std
dec
scas
add
or
or
mov
pop
out
mov
mov
fisubl
popa
in
lods
inc
xlat
movsb
into
xchg
mov
sbb
mov
xor
sbb
jg
xor
jl
xor
stc
mov
inc
or
mov
adc
xor
adc
and
dec
push
imul
push
ret
dec
insl
outsb
pop
je
clc
lahf
push
sub
jno
int
les
jle
pop
test
or
cltd
insl
cmpsl
cmpsb
jmp
dec
pop
pop
mov
push
mov
das
push
adcb
cmp
lods
sub
gs
jmp
sbb
mov
addb
mov
fcmovb
push
clc
push
mov
xorb
cmp
jge
enter
mov
add
jo
stos
jecxz
cli
xchg
fisubl
cmp
mov
sbb
inc
push
and
lods
test
inc
call
lock
add
cwtl
out
aaa
mov
pop
out
cli
and
xor
arpl
and
call
mov
pushf
inc
loope
and
mov
sub
aaa
dec
or
mov
pushl
mov
pop
hlt
orb
sub
mov
adc
mov
iret
popa
adc
ret
mov
icebp
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
xor
jg
jle
movsb
sti
les
pusha
hlt
call
lret
sub
int3
gs
adc
popa
push
and
mov
lods
in
jo
fcomp
mov
call
mov
adc
xchg
push
jo
fistl
add
add
mov
and
ss
xchg
shrl
imul
cs
lods
sbb
xchg
cmc
les
sub
loopne
inc
fistpll
lods
add
test
xor
dec
repnz
dec
push
je
cwtl
repz
jnp
pop
in
loopne
mull
pushf
adc
addr16
pop
outsl
sub
inc
push
in
xchg
inc
fptan
jae
dec
or
and
pop
dec
cwtl
rcr
push
call
adc
mov
into
negl
bound
sti
enter
jo
fidivrl
loop
xchg
sbbl
pop
pop
dec
cmpsl
pusha
inc
data16
mov
test
cmp
dec
mov
mov
dec
lds
movsl
mov
push
popf
inc
xor
negb
daa
dec
loop
in
mov
cmc
xor
mov
sbb
jo
sbb
loope
lahf
test
shrb
xor
pop
in
adc
icebp
lock
in
in
icebp
mov
test
lcall
int
sbb
out
pushf
xchg
and
loopne
pop
dec
repz
mov
insl
js
aam
pop
cld
stc
add
cmp
or
imul
sub
add
push
jmp
data16
pop
lock
ljmp
movsb
cmp
pop
cmp
mov
sbb
pushl
loop
mov
lea
addb
inc
outsb
jmp
mull
xchg
adc
nop
inc
shl
adc
ret
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
loop
jle
jg
jle
and
jl
aam
cmc
sbb
cmp
mov
lock
xchg
xchg
sub
jge
in
jmp
pop
ficompl
adc
dec
or
jg
inc
enter
dec
cwtl
jo
aad
xchg
xor
xor
xchg
add
inc
mov
test
push
sahf
aaa
xchg
xlat
loop
inc
iret
cmpsl
roll
bound
lods
lods
fxch
aam
icebp
sbb
ret
incb
or
inc
pop
jg
push
enter
faddl
inc
popa
inc
jns
xchg
mov
mov
mov
aaa
mov
outsb
or
or
push
test
jg
stc
xchg
adc
cwtl
cmpsl
push
mov
xor
ret
xchg
rclb
loopne
pop
test
clc
or
cmp
loop
lahf
xchg
aas
adc
cmpsb
ljmp
or
in
inc
arpl
adc
test
xchg
aam
jne
insl
jmp
xchg
sti
stos
aaa
pusha
hlt
or
mov
repnz
test
mov
insb
inc
in
fmuls
fstpl
jno
or
movsb
lds
mov
add
out
push
mov
add
lods
je
in
pop
negb
add
cmc
jmp
or
xor
mov
jo
lret
lock
pop
pop
and
fidivl
mov
mov
adc
jb
push
lahf
pop
sub
xor
lcall
adc
lds
ja
or
inc
lahf
cmp
sub
cwtl
jl
or
aam
fadds
or
mov
pusha
cld
sub
mov
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
movsl
fdivr
call
aas
jg
jle
sub
rorl
xchg
ss
ret
je
lea
imul
adc
std
imulb
test
stc
int3
fiadds
cwtl
sbb
fisttpl
and
mov
xorl
inc
xor
aaa
cmp
inc
les
pop
lods
xchg
mov
pop
xchg
dec
cld
jle
mov
repnz
or
icebp
scas
sbb
fs
sbb
xlat
mov
dec
cwtl
aam
cmp
inc
rcr
xor
inc
outsl
rcrb
inc
jnp
in
push
dec
std
cmc
out
out
out
cmp
xchg
mov
popa
sahf
fs
xor
jo
add
bound
jmp
pop
push
fstl
clc
mov
inc
sub
aam
ljmp
notl
pop
mov
fldenv
mov
and
loop
push
adc
adc
scas
add
fucomi
cmp
in
jno
and
xchg
xor
push
cmpsl
push
in
mov
mov
stc
xchg
test
out
das
add
fmull
mov
inc
lods
cmp
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
adc
aas
jg
jle
repnz
dec
cli
xchg
loope
sbbb
fstpl
sbb
aaa
xchg
cmpsb
pop
add
daa
addb
and
ret
cltd
enter
cmp
jl
pop
test
aas
inc
aad
jecxz
scas
mov
dec
xchg
sub
mov
repz
add
xchg
push
sbb
sbb
push
fisttps
mov
sbb
cmp
inc
test
inc
aam
and
push
in
mov
test
mov
push
jge
push
mov
es
inc
hlt
sbb
dec
xor
pop
pop
sahf
out
or
mov
sub
mov
sarl
loopne
outsb
mov
sbb
sub
jno
and
pop
rcl
fimuls
call
add
outsb
jmp
mov
popa
int3
sub
jbe
loopne
in
or
adc
movsl
notl
in
jmp
cmpsl
mov
jnp
mov
fistpl
push
sbb
stos
push
scas
adc
sub
flds
stc
das
sahf
dec
std
scas
movl
rol
pop
and
pop
lods
sbb
jne
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
dec
jge
jle
aas
jg
jle
sub
sub
jbe
inc
mov
mov
fwait
scas
jecxz
subl
add
and
inc
je
jecxz
mov
in
push
fbld
cmc
dec
notb
and
ljmp
pop
dec
mov
out
inc
and
mov
or
mov
mov
pushf
clc
and
pop
subl
xor
addr16
daa
mov
inc
mov
mov
jge
and
mov
cwtl
ss
lock
xchg
xor
into
push
leave
jle
push
imul
xor
addl
xor
sub
sub
out
push
aam
decl
outsl
daa
lret
add
mov
lret
fsub
xlat
les
sub
ret
lock
fmull
jb
js
xchg
lcall
sub
fcoml
dec
cld
pop
pusha
pop
sbbl
insl
das
fisttpl
or
add
lcall
pop
mov
mov
insl
ret
add
xchg
cwtl
jb
mov
insl
addb
mov
jae
int3
decb
or
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
sbbb
push
ds
jle
aas
jg
jle
ficoml
scas
dec
jbe
mov
adc
dec
fs
addr16
lcall
pop
js
mov
lahf
pop
adc
jl
in
mov
out
sbb
movb
adc
xchg
lods
xor
cmp
fidivl
aad
mov
push
loopne
jae
jp
xor
inc
and
push
ret
ret
fstpt
jae
enter
hlt
xor
add
fcomip
fwait
sti
pop
inc
fisttpl
stos
push
data16
dec
mov
xor
add
in
lcall
push
insl
nop
xor
xor
pop
sbb
cmpsl
pop
push
pushf
scas
bound
scas
ja
enter
ljmp
add
icebp
fnstsw
push
in
jae
jmp
rorl
cmp
stos
inc
int
sbb
imul
out
mov
fwait
cmp
mov
pop
jg
adc
push
dec
les
mov
jmp
dec
sub
rcl
dec
decb
movsb
lds
adc
cmp
and
rcl
push
xchg
xor
adc
leave
fwait
call
add
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
adc
cld
add
stc
jle
aas
jg
jle
or
mov
adc
mov
pop
mov
leave
sub
mov
sbb
sbb
enter
mov
xchg
dec
cld
and
sbbb
mov
push
sbb
test
dec
pop
add
mov
inc
sub
loop
xchg
adc
out
or
or
mov
ret
xlat
mov
inc
xchg
imul
iret
and
fcomi
sub
in
or
mov
xchg
icebp
mov
adc
dec
stc
pop
std
and
outsl
mov
push
sub
lods
mov
movsb
and
ds
enter
cmp
out
test
xor
cmc
mov
fcmovbe
xor
adc
push
sbb
jl
pop
nop
ja
jns
sub
lahf
mov
or
clc
pop
scas
mov
cmc
sub
addr16
pop
jo
outsb
iret
pop
imul
or
sbbl
movsb
xlat
mov
pop
xlat
mov
shlb
push
dec
cmp
pusha
ret
mov
in
pop
sbb
icebp
cmp
inc
clc
mov
aad
push
lea
inc
fnstenv
ret
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
aam
jle
cli
jle
aas
jg
jle
imul
out
repnz
sub
push
je
stc
mov
cmp
inc
subb
push
lret
fs
pop
jnp
pop
xor
sbb
iret
scas
lcall
and
adc
xchg
ret
iret
sub
bound
xchg
mov
cwtl
sar
xchg
outsb
xchg
in
xor
les
xor
das
dec
xchg
sarb
lods
fmuls
lods
inc
mov
adc
jno
outsb
push
dec
sbbb
aas
ficoms
xchg
push
popf
sbb
mov
and
iret
pop
jae
mov
sbb
addr16
adc
push
js
in
cmp
and
xchg
mov
pop
in
lcall
sahf
popa
fmulp
setg
push
shlb
inc
mov
push
jl
add
lret
cmpsl
repz
sub
fs
add
pusha
jb
insl
sub
loope
add
push
jmp
fldenv
inc
inc
enter
inc
insb
mov
out
sbb
mov
aam
in
sahf
jno
movsb
rcrb
ljmp
lahf
mov
mov
sbbl
jmp
fmull
cld
popf
mov
scas
pushf
sahf
xchg
aas
jg
jle
and
stos
add
lods
cld
mov
xacquire
leave
sub
push
cmp
and
pop
push
mov
xchg
lds
adc
push
xchg
mov
shlb
mov
dec
pop
out
jmp
jno
jns
mov
ffreep
inc
jb
inc
js
or
not
or
das
sub
enter
ret
mov
pop
fs
lret
ss
adc
out
cmp
or
jmp
push
push
in
in
mov
lret
pop
je
xor
push
lods
pop
inc
mov
jbe
repnz
loope
push
mov
add
mov
pop
leave
fld
jle
cltd
jge
outsb
jl
call
adc
or
sbb
xlat
dec
or
std
mov
es
dec
out
add
addr16
jae
int3
xorl
arpl
shll
js
fsts
fbld
out
bound
adc
out
lcall
push
mov
mov
movsl
out
xchg
inc
dec
pop
shlb
stc
mov
and
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
and
jle
aas
jg
jle
pushf
mov
and
xchg
inc
inc
adcb
cmp
cld
xor
sbb
adc
shr
inc
or
test
adc
dec
inc
xchg
shr
pop
imul
adc
xchg
test
testl
dec
jp
mov
mov
jbe
mov
push
add
dec
mov
dec
imulb
mov
pop
inc
dec
and
jae
stos
mov
xlat
adc
cmpsl
imul
adc
mov
and
and
sbb
xchg
mov
out
push
jb
mov
movsb
and
cmp
sbb
rclb
mov
push
rol
push
js
mov
shlb
mulb
loop
hlt
sti
sub
clc
add
push
adc
movsl
jno
mov
loopne
cs
int3
mov
stos
adcb
aam
loopne
cwtl
imul
popa
icebp
cmp
mov
jnp
sub
add
and
sbbl
push
adc
xchg
int
cli
fldenv
mov
cmp
mov
pop
push
adc
adc
fwait
mov
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
mov
cs
mov
std
cmc
aas
ds
pop
insl
pushf
das
mov
or
jle
sbb
or
sbb
xchg
sub
fists
icebp
ret
pop
bound
cmc
arpl
dec
sub
rolb
dec
jno
imul
pop
ja
mov
and
into
sbb
push
data16
lret
push
cli
loopne
adc
xor
fwait
inc
pop
cmp
and
loop
cmp
inc
adc
popf
push
addr16
hlt
adc
aaa
addr16
fisttps
adc
or
sbb
popf
sbb
xchg
rorl
xchg
xchg
test
dec
test
dec
bound
in
jnp
cld
sub
mov
andb
cmpsb
movsl
fcom
sbb
sar
xchg
inc
pop
pushf
pop
out
inc
out
in
jmp
cmp
sub
test
ret
repz
sbb
incl
cmc
rol
pop
xor
inc
jecxz
mov
add
and
and
xchg
sub
pop
adc
aaa
ss
add
aaa
ss
add
lcall
getsec
push
cmc
sub
fsubl
cltd
insb
ret
sbb
inc
int3
shll
cwtl
and
rolb
js
scas
push
mov
lea
jmp
and
and
sti
in
test
mov
jle
aas
jg
jle
imul
fs
mov
add
fdivs
or
cmp
pop
push
pop
jbe
xlat
inc
out
repz
push
lods
mov
and
clc
stos
aas
pop
inc
pusha
fcoml
inc
push
mov
xorb
mov
cmp
fcmovnbe
out
pop
enter
outsl
dec
mov
lahf
pop
cmp
xor
js
cld
test
jg
mov
cmp
cmp
cwtl
subb
rcl
add
mov
add
movsb
mov
fisubs
inc
hlt
popl
pop
mov
aaa
dec
adc
mov
adc
inc
pushf
dec
xchg
pop
in
into
push
or
dec
push
mov
rol
loop
cltd
jne
decb
sbb
inc
cmp
dec
test
test
add
add
mov
xlat
push
push
into
inc
mov
fs
add
sahf
push
vpaddusb
mov
mov
test
int
xchg
or
sub
scas
mov
add
test
push
mov
das
int
scas
sbb
pop
cmpsl
lcall
mov
stc
fimull
rclb
jne
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
xchg
test
or
adc
repnz
rcl
sbb
pop
dec
cmpl
enter
shr
add
add
mov
pop
in
pop
mov
mov
pop
inc
sbb
mov
xorb
and
rclb
pop
rcll
xor
xor
cmp
ja
shrl
insb
xor
int3
in
cmp
mov
arpl
dec
sub
lret
loop
aas
mov
sub
mov
mov
xchg
inc
out
fisubrs
mov
lock
movsb
scas
fwait
or
sub
xchg
add
dec
out
fsub
popa
xchg
mov
lods
adc
xchg
sbb
test
icebp
imul
fdivrp
ja
jbe
cmp
mov
push
loop
orl
test
pop
lods
std
inc
and
adc
inc
push
mov
js
into
jb
dec
and
test
ja
dec
xlat
out
mov
data16
sbb
loope
rorb
orb
fmul
xchg
loope
ret
mov
push
in
mov
jns
cld
push
mov
stos
inc
mov
or
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
ds
shlb
bnd
aas
jg
jle
push
fsubrs
in
test
pop
vhaddps
push
dec
jo
adc
test
xor
cli
push
inc
movsl
add
cmp
xor
jne
mov
xchg
repz
in
stos
and
inc
add
test
popa
dec
push
sub
add
outsl
lea
pusha
movsb
mov
push
sahf
sbb
and
sarb
mov
in
mov
mov
sbb
fwait
lahf
xlat
sar
mov
push
fisubl
inc
lret
js
ret
and
xchg
test
inc
jg
xchg
sub
sbb
sub
sub
cmp
pop
mov
test
xor
sbb
pop
mov
mov
hlt
pop
dec
xor
add
in
sarl
test
andl
sarb
add
int
pop
lret
sbb
lahf
sub
dec
mov
push
and
sahf
cmc
out
mov
push
lcall
mov
lock
ss
xchg
adc
adc
test
loopne
dec
lds
ja
sub
fcompl
outsl
push
stc
push
fstl
add
inc
or
inc
or
in
rorb
jbe
add
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
mov
jae
imul
imul
aam
inc
mov
in
and
sbb
xchg
add
sub
mov
pop
pop
or
dec
sbb
mov
xlat
adc
adc
cli
fstl
cmp
cmpsl
and
ljmp
not
lods
sub
cmp
frstor
mov
setne
fcmovbe
fbstp
lcall
cs
or
lds
mov
mov
sbb
in
mov
pop
fisubrl
jle
push
inc
jecxz
inc
cmp
in
popf
cmc
lahf
push
or
pop
push
add
sbb
push
cmp
fwait
pop
ljmp
sub
push
push
dec
adc
jle,pn
xor
cmp
adc
pop
shll
rorl
push
sub
push
loope
sbb
subb
ljmp
add
mull
out
push
jne
adc
sbb
dec
mov
pop
shll
outsl
outsl
cmpb
test
mov
inc
xchg
setnp
pop
adc
jnp
fsubl
pop
jne
sub
jp
ds
jmp
and
lods
lret
movsl
sub
pop
dec
hlt
jle
aas
jg
jle
ja
dec
sub
sub
loop
add
lds
bound
xchg
outsl
int3
test
rcl
cmpsl
dec
adc
dec
cmp
test
inc
js
or
mov
mov
mov
out
cmp
scas
in
add
and
sbb
stos
xor
insb
dec
xchg
xor
mov
lods
outsl
fs
jne
andb
movsb
add
ss
insl
or
adcl
mov
cmp
pop
lret
pop
testb
out
jecxz
and
push
subl
mov
jecxz
dec
mov
inc
xor
xchg
popf
xor
aam
ret
insl
mulb
xor
sbb
dec
sbb
das
jb
and
ret
pushf
push
leave
inc
repz
xlat
popa
pop
adc
adc
add
lods
lods
andl
cmp
mov
mov
dec
outsb
idivl
call
lods
mov
pusha
shlb
sub
cwtl
cltd
into
movsb
insb
pop
fstps
push
sub
jne
insl
add
test
nop
fbstp
pushf
stc
adc
js
pop
lahf
scas
repz
xchg
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
call
jle
aas
jg
jle
add
daa
sbb
aad
xchg
jle
add
xchg
iret
jge
shrb
popa
loopne
xchg
repz
lcall
clc
jae
jnp
mov
cmp
es
std
jae
faddl
loope
out
push
pop
inc
punpckldq
mov
push
sbb
push
std
adc
dec
mov
or
notl
es
int
adc
xor
sbbb
sub
xor
ljmp
sbb
add
stos
cmpb
mov
xor
cmp
cmp
and
insb
scas
subl
test
xor
jne
cmc
mov
jns
xchg
sub
stc
stos
pop
inc
lret
jb
mov
xchg
stos
xchg
ret
gs
insb
jbe
xor
mov
mov
lock
or
add
mov
inc
fisubs
sarl
lods
js
pop
sbb
fistpl
xlat
daa
cmpsl
push
adc
pusha
stos
or
mov
mov
sbb
movb
cld
mov
jmp
test
test
jge
cmp
sar
jecxz
idivl
aas
jg
jle
fidivrl
inc
cmp
add
xor
test
and
dec
dec
sub
xor
in
mov
jl
cmp
aaa
jbe
mov
test
and
adc
ds
hlt
test
sbb
xchg
pop
imul
xor
test
incl
push
dec
or
inc
rolb
cmp
mov
gs
scas
arpl
mov
jbe
push
loope
push
jae
out
push
cli
jne
in
dec
push
cltd
daa
cli
ja
mov
scas
fnstsw
push
cltd
orl
inc
or
mov
xor
mov
out
cmp
ficoms
pop
scas
mov
jg
loope
pop
and
imul
aas
cmp
jge
arpl
dec
incl
dec
or
jle
stos
cmc
xchg
cmpsb
iret
mov
icebp
pusha
mov
sahf
cmpl
out
inc
leave
lods
rclb
jnp
imul
pop
lods
subb
insl
and
cwtl
xchg
jbe
ljmp
cmp
pop
mov
fstpt
shl
sub
mov
cmp
inc
lret
lret
popa
dec
sbb
hlt
sub
mov
sarl
ret
add
add
jge
out
mov
stc
mov
aas
jg
jle
cwtl
popf
mov
icebp
jge
mov
add
lret
push
das
mov
neg
pop
cmp
movsb
add
and
test
pop
outsb
mov
jp
cltd
xchg
test
and
cmpsb
lcall
sub
ljmp
add
sbb
add
loopne
and
sub
cmp
insb
dec
fwait
cmp
mov
sub
notl
sub
ret
test
adcb
cmp
cli
pop
aaa
pop
push
outsb
push
and
push
call
mov
cwtl
mov
xorb
les
cli
rorb
jmp
dec
mov
mov
ret
adc
push
scas
sub
and
inc
dec
jg
mov
jle
mov
pop
cmpsl
dec
or
test
xchg
inc
add
inc
ja
dec
loop
enter
push
dec
dec
fbstp
push
in
fs
mov
xchg
mov
push
xchg
jo
add
add
lretw
dec
or
bound
xchg
jb
add
inc
lods
or
out
push
inc
sub
mov
sub
or
add
mov
imul
mov
jmp
inc
sbb
gs
jae
pop
shrb
jle
jg
jle
add
fwait
push
js
cwtl
hlt
pop
dec
mov
xchg
pop
push
mov
arpl
ds
inc
sub
sbbb
push
mov
fstpl
pop
sbb
and
sbb
or
cld
and
mov
sub
jo
sub
sarb
loop
pop
xchg
repnz
and
mov
cmpsl
cltd
adc
pop
pop
xchg
subl
pusha
mov
dec
lock
pushf
push
add
mov
dec
jne
push
push
stos
jno
fisubrl
inc
adcb
adc
or
mov
push
pop
sbb
push
shrl
aaa
fsubrl
js
mov
out
call
and
xchg
inc
and
jge
pop
scas
aas
xchg
inc
cmp
adc
stc
jecxz
outsb
shll
add
pop
push
inc
mov
lcall
fsubl
icebp
ret
cmpsb
pop
mov
in
sbb
mulb
mov
cmp
test
sbb
mov
and
je
add
stos
pop
pop
aam
dec
call
cli
push
and
push
andl
lock
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
adcb
jle
aas
jg
jle
loope
pop
push
je
movnti
rol
aaa
loope
push
sub
dec
xor
jne
cmp
push
bnd
pop
lea
sub
fiaddl
into
scas
sbb
mov
pop
test
pushf
cwtl
sub
cli
xor
fisttpll
lods
ds
dec
jecxz
rolb
addl
fnstsw
pop
sbb
adc
adc
push
stos
sbb
sbb
lods
dec
sbb
cwtl
in
sbb
or
rol
leave
mov
int
roll
rorl
or
add
lock
mov
jnp
test
dec
push
xlat
or
sarb
iret
lock
adc
dec
ja
adc
xchg
adcb
stos
sub
in
jb
pushf
sbb
mov
std
or
arpl
bnd
ret
gs
fnstenv
mov
js
sub
xor
std
adc
nop
sbb
mov
pop
outsl
imul
lods
inc
xchg
dec
and
les
adc
sub
roll
xor
xor
xor
xor
jecxz
push
aad
imul
mov
daa
mov
movsl
cmp
jb
add
fmull
call
rorl
add
call
add
adc
jecxz
jnp
aad
lock
iret
into
mov
aas
jg
jle
orl
cli
pop
aas
gs
orb
aaa
cmp
popl
cli
lds
cmp
out
xchg
aaa
cmp
pushf
ljmp
out
cmc
int3
and
faddp
into
jmp
aad
cmpsb
push
fildll
inc
or
xchg
inc
cmpxchg
push
fdivl
lcall
push
mov
sub
insb
add
jl
cmp
lds
push
arpl
lret
outsb
xchg
sub
sahf
cmp
push
es
xchg
inc
xor
or
dec
dec
add
mov
jno
jmp
and
sub
in
inc
xor
mov
lcall
out
and
repnz
sub
adc
clc
xlat
outsl
ffreep
inc
sub
xchg
pop
rcll
xchg
mov
adc
shll
test
shl
movsb
inc
loop
mov
add
aaa
aaa
aaa
mov
mov
mov
xchg
mov
mov
mov
dec
dec
mov
adc
sub
int
mov
mov
xor
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
add
in
xor
jg
jle
add
loopne
ds
push
cs
sbbl
and
incb
arpl
fiadds
imul
lret
sahf
imul
faddl
adcl
xchg
test
ficompl
test
and
les
sub
mov
xchg
mov
push
ljmp
mov
xor
test
mov
call
imul
in
movsb
arpl
sub
mov
repz
adc
mov
je
jle
aaa
pop
mov
sub
lock
mov
xorb
add
fadds
xor
xor
enterw
adc
mov
cmpl
data16
icebp
and
mov
movsl
lods
inc
jae
hlt
aas
cmpsb
xor
lods
cmp
inc
cmp
iret
ficoml
push
pop
jno
sub
mov
stc
test
and
add
pop
ficompl
mov
insl
xchg
sbb
sbb
or
and
movsl
mov
outsl
dec
sbb
and
and
pop
add
add
idivl
push
jp
sti
inc
aaa
mov
std
jae
mov
aas
jg
jle
inc
fbstp
lods
push
das
jl
cmpsb
sbb
mov
addr16
in
cmc
das
pop
mov
or
push
xchg
dec
notb
xor
xor
lds
shrb
push
pop
push
lock
inc
or
testl
shll
test
nop
inc
mov
push
out
leave
sub
push
push
es
sbb
ffreep
mov
inc
jge
jnp
jp
aaa
cmovbe
inc
push
aas
test
in
jae
add
lcall
incb
mov
test
popa
das
mov
outsl
or
jbe
int3
mov
test
stos
jne
into
out
cmp
in
aaa
out
cwtl
testl
push
push
pop
je
lock
xor
test
add
mov
jge
les
out
imul
xchg
addr16
punpckldq
out
es
push
lea
dec
xor
sbb
outsl
mov
stc
aaa
stc
and
xchg
pop
clc
scas
movsb
sbb
inc
movsl
fnstsw
in
std
cmp
ret
mov
mov
jae
sahf
jb
jge
jg
call
or
test
std
push
pop
pushf
pop
add
rorl
or
enter
cli
decl
add
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
fcmovnbe
cmp
cmpb
jg
jle
cli
mov
movb
clc
dec
imull
ljmp
mov
push
iret
popa
cli
xchg
add
pop
hlt
mov
fadd
mov
scas
scas
decb
sbb
lods
mov
mov
jae
sti
adc
cwtl
pop
cmpb
cmc
adc
push
dec
jmp
jno
scas
ret
mov
lods
pop
adc
jno
fs
adc
xor
mov
inc
push
daa
sub
daa
push
addl
pop
inc
cltd
jmp
outsb
test
jg
or
push
xor
lods
adc
test
xchg
je
movsl
inc
loopne
inc
add
push
ljmp
in
loopne
xor
loopne
sbb
shlb
mov
jecxz
stc
dec
fdivrs
push
pop
dec
sub
mov
cmp
scas
sub
mov
sbb
mov
dec
sub
add
jne
test
rcrb
jmp
adc
xchg
aas
jg
push
hlt
jl
mov
outsb
adc
xchg
and
and
mov
lcall
fwait
lcall
shll
fucomi
pop
add
add
arpl
imul
mov
mov
ret
jle
jg
jle
dec
lret
aaa
cmp
mov
mov
popf
jae
ja
lock
sbb
into
xor
pop
cli
or
add
cmp
js
dec
dec
inc
ljmp
adc
or
lcall
sub
std
push
cmpsl
test
mov
add
mov
arpl
xchg
mov
arpl
xchg
mov
faddp
mov
sbb
push
fwait
es
outsl
lret
mov
dec
inc
adc
sbb
jge
push
fisubl
insl
push
sub
les
lods
leave
jnp
xchg
aam
scas
push
pop
cli
lock
mov
sbb
mov
addr16
icebp
stos
rcrl
inc
mov
fidivrs
mov
or
ss
in
in
movsb
outsl
cmc
rcl
push
inc
mov
cmp
call
mov
jno
cmp
pusha
fldt
mov
aad
xchg
mov
data16
rcrb
push
cli
stos
mov
jb
iret
fadds
sti
sub
decl
test
or
cmp
sub
mov
inc
jmp
jae
aas
mov
cmp
push
cmpb
jg
jle
shlb
lret
add
fs
iret
jne
in
pushf
mov
lea
ret
xchg
aad
inc
pop
push
daa
cmp
pop
mov
aaa
xor
jle
sbb
repnz
xor
cmp
sub
adc
mov
xchg
int
jg
icebp
xor
hlt
cli
leave
inc
adc
daa
ja
jo
xor
dec
lret
add
cli
std
xchg
fucomi
fdivrl
in
test
mov
das
cmp
jne
das
sbb
dec
cwtl
xchg
pop
pop
repnz
adc
cmpsb
ljmp
dec
or
push
movsl
sarb
add
sarl
subl
jb
mov
rcrb
jmp
pop
adc
pop
sbb
shrb
mov
mov
jmp
dec
sbb
push
cwtl
xchg
arpl
repz
rclb
mov
test
test
push
jnp,pt
pop
adc
inc
andb
mov
jnp
add
pop
outsl
ja
push
xor
lcall
pop
add
and
scas
filds
test
add
add
pop
add
add
cmp
mov
push
add
inc
inc
cmpl
jg
jle
gs
rolb
ss
shl
shlb
pop
sub
in
test
sahf
push
je
mov
ret
mov
mov
idivb
xor
test
mov
inc
jno
cli
iret
hlt
mov
push
lea
insl
lret
outsb
les
movsl
int3
pop
mov
stos
out
xchg
out
das
fs
push
lret
movsl
test
mov
frstor
in
addb
sarb
ds
xor
inc
sub
mov
cmp
or
popf
mov
ss
pop
add
enter
xchg
popf
lods
stc
inc
rcrb
mov
std
das
ss
sub
inc
mov
dec
je
pop
pushf
pop
or
lret
sub
enter
in
xchg
xor
je
daa
sahf
mov
scas
sub
xor
jb
lret
xor
cmp
xor
inc
cmp
mov
pop
enter
push
scas
fs
add
cmp
mov
dec
pop
push
mov
jmp
fsubl
insb
lock
add
dec
adc
jns
rclb
fwait
dec
add
jg
jle
mov
movb
aad
xor
in
push
nop
pop
shr
mov
inc
cmp
cmpsl
mov
sahf
shrl
pop
push
pushf
mov
jae
ret
cmp
add
xchg
mov
out
lods
std
aam
hlt
cmp
mov
adc
call
jbe
push
mov
hlt
loopne
mov
sbb
dec
lea
cmc
sbb
dec
js
xlat
pusha
pop
sarl
xchg
popf
fiaddl
cli
aas
dec
mov
pop
or
sub
inc
stos
xor
negl
scas
movsb
aad
cmpsb
add
popa
jne
xor
daa
in
push
stos
pop
sub
lds
shrl
mov
shrl
stc
cwtl
imul
lock
sub
insb
pop
or
and
sub
inc
pop
mov
mov
inc
pop
jns
fcomps
pop
clc
addb
inc
dec
sbb
mov
mov
fisubs
adc
push
movsl
push
bound
ljmp
jp
insb
inc
push
push
adc
ret
dec
push
insb
cmp
push
popa
pop
icebp
xor
jp
cmp
or
add
inc
xchg
jmp
ss
or
mov
jmp
jae
xchg
aas
jg
jle
push
int
add
in
jg
mov
aam
test
pop
mov
jle
fimuls
dec
bound
test
or
movsl
fistl
lock
stos
xchg
sbb
or
iret
cli
int3
or
loop
pop
mov
bound
insl
add
dec
mov
out
mov
ja
orb
imul
xor
xor
cli
inc
shl
mov
push
and
adc
sahf
incl
cmp
in
ret
loop
js
sbbb
shll
inc
inc
loopne
adc
mov
and
dec
std
loop
fistl
push
in
sub
rorl
test
inc
ret
loope
fsubl
add
mov
and
xchg
je
dec
cli
cmp
pop
add
loopne
sub
xor
mov
inc
xchg
arpl
inc
in
xor
jmp
lret
xorb
in
jb
es
jp
aam
dec
xorb
andb
mov
jge
outsb
xchg
lahf
cmpsl
push
inc
pop
sahf
test
ljmp
inc
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
rcrl
sub
jle
jg
jle
and
inc
pop
in
aam
call
xor
push
fstpt
push
sub
hlt
outsb
adc
cs
mov
add
pusha
xchg
lds
in
add
addr16
push
cmp
or
cltd
lock
xchg
daa
or
insb
jle
les
adc
cmpl
js
jecxz
incl
loope
adc
pop
mov
cmp
test
mov
pop
arpl
stc
inc
lock
fwait
sbb
add
iret
mov
aam
mov
stos
mov
movsb
push
jnp
das
cmp
xchg
out
test
jae
sub
cmp
aas
sub
jne
stos
mov
fsub
pop
scas
sbb
mov
loop
jmp
cmpsl
xor
scas
jne
in
push
adc
sub
cs
fnstcw
xchg
rclb
jecxz
test
in
das
jb
arpl
mov
inc
push
jb
sti
or
popf
enter
add
das
fstp
jle
pop
bound
jne
mov
xchg
sub
into
in
add
test
dec
repnz
enter
inc
push
popa
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
