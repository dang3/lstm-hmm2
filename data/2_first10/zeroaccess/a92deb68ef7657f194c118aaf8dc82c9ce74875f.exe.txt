push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
mov
mov
int
adc
jo
ljmp
lds
lods
clc
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
int
rcrl
testl
imul
pop
sbbl
sub
outsl
xchg
and
pop
scas
dec
sarl
lret
out
shrl
sub
sub
or
std
xchg
insb
push
mov
add
dec
xorb
and
jge
das
ret
inc
lea
mov
lods
mov
mov
or
int3
jns
add
aaa
je
inc
inc
mov
cmp
xor
bound
fisubrs
add
sbb
inc
dec
xor
scas
fisttpl
adc
push
mov
jp
andl
enter
scas
cmpsb
imul
jmp
or
cmp
dec
xchg
mov
repz
jl
in
insl
mov
jne
mov
int3
xchg
jnp
fsubrs
clc
jo
ljmp
jge
push
and
fadds
add
mov
cmp
dec
xchg
sbb
decl
dec
scas
add
mov
adc
pop
pop
adc
int
mov
cmpsl
insb
inc
cli
add
adc
insl
int3
and
add
mov
gs
sub
xor
outsl
sbb
jo
xchg
into
lcall
or
int3
mov
jno
scas
inc
cli
mov
push
jns
test
sahf
ret
roll
jo
fs
into
inc
repnz
mov
data16
clc
repnz
cs
iret
cmp
jne
inc
xchg
addr16
dec
sub
lcall
sbb
xchg
enter
repz
adc
mov
jo
lcall
cwtl
imul
test
push
mov
pop
inc
pop
mov
lcall
sub
jae
test
jmp
mov
dec
leave
outsl
jmp
popa
in
adc
test
pop
cmc
dec
out
popa
adc
lret
mov
dec
pop
es
sub
aam
ss
into
rcll
lret
jno
fiaddl
sbb
mov
add
mov
push
stos
addr16
push
cli
sarb
push
ljmp
xor
call
xor
bound
xor
push
out
jno
daa
das
jbe
xor
cs
daa
popa
xchg
mov
sbb
or
push
scas
ja
pop
jns
push
xor
arpl
lods
clc
pop
mov
cmp
aaa
mov
dec
jne
subl
test
js
push
xchg
shll
repnz
jae
push
mov
outsb
inc
add
js
adc
fimull
cmp
push
sbb
jmp
dec
jg
outsl
mov
fucomp
fildl
aad
enter
movsb
lea
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
out
push
adc
adc
adc
mov
insb
into
inc
loopne
repz
xchg
popa
imul
in
adc
sub
pop
sbb
loope
rorb
clc
dec
loopne
dec
adc
and
lock
lds
out
inc
sahf
in
ja
add
imul
daa
xor
adc
fimuls
cli
insb
mov
pop
and
xchg
push
push
xlat
aad
push
rol
daa
idivl
mov
int
or
aaa
stc
dec
push
insb
mov
gs
in
fcompl
movsl
loopne
xchg
adc
sub
push
es
cmp
push
mov
ja
sar
add
out
push
icebp
xor
sub
xchg
jge
push
jbe
pop
test
cmp
aaa
inc
dec
bound
fcmovnb
shl
lods
std
adc
mov
loopne
jecxz
mov
sbb
or
out
cmp
int
aad
call
xchg
and
pop
ja
stos
jge
ret
dec
inc
movsl
outsl
ljmp
shll
sbbb
dec
aad
lods
cli
add
xchg
mov
call
push
pop
ret
pop
testb
cld
fsubl
dec
call
fsubs
and
push
stos
mov
inc
rorl
in
cmp
lock
cmp
jns
mov
sbb
sub
push
jo
inc
xchg
sahf
cwtl
xchg
or
leave
pop
or
or
and
fstpt
inc
cmc
lcall
xlat
mov
cmp
add
fbstp
xlat
sub
pop
cmp
mov
sbb
cmpsb
push
xchg
lock
jg
sbb
dec
or
mov
sub
push
push
mov
loopne
repnz
pop
mov
insb
das
pop
mov
cmp
enter
dec
shrl
jo
cltd
adc
lret
xor
cmp
test
jmp
jne
xchg
xchg
outsl
cmp
or
enter
or
xchg
movsb
mov
adc
out
pop
or
lea
aas
cmpsb
gs
inc
int3
aad
xchg
enter
fcoml
aaa
xchg
pop
js
and
cmpsl
mov
push
or
pop
cmp
negb
jl
mov
repz
adc
push
jne
adc
es
nop
mov
sbb
in
push
ja
pop
gs
and
sub
mov
rcrl
cmc
popa
adc
add
ficompl
xchg
mov
cmpl
das
mov
ss
jmp
sarl
nop
dec
mov
out
push
adc
bound
xchg
lret
add
and
ror
mov
inc
mov
aas
pop
popa
orb
fcoml
pop
dec
mov
or
fs
fs
cmp
and
bound
repz
ja
xchg
mov
repz
mov
aas
inc
inc
outsl
repnz
push
ret
scas
jno
insl
add
add
fbstp
or
pop
dec
lahf
push
bound
aas
jb
hlt
loopne
fmul
hlt
das
lods
dec
std
push
adcl
jb
sub
addb
fsub
mov
test
push
pop
mov
cmp
aaa
scas
js
xchg
cmp
sahf
pop
jle
adc
dec
fimull
adc
mov
cwtl
pop
sub
lea
ljmp
les
les
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
cld
sarb
int
adc
mov
addl
cmp
imul
and
dec
scas
xorl
lcall
adc
out
xchg
fiadds
movsl
fisubs
ss
sahf
into
or
mov
arpl
adc
add
movsl
mov
das
xchg
shrl
scas
and
push
or
adc
push
in
fwait
pusha
xchg
mov
dec
out
addr16
stos
sti
pushf
add
arpl
ja
cmpxchg
push
jle
sub
mov
push
or
mov
dec
add
inc
push
stos
pushf
out
adc
mov
lcall
jo
js
and
aam
fnstcw
pop
ljmp
jg
inc
mov
shrl
mov
repnz
and
xchg
push
rclb
push
mov
or
push
lods
add
mov
clc
enter
clc
sbbl
sti
cmp
cli
cmpsl
or
push
and
add
or
xchg
dec
jmp
xchg
das
stos
xchg
scas
mov
inc
or
hlt
inc
addr16
push
sbbl
outsw
inc
sub
es
je
mov
mov
inc
jmp
xchg
push
fwait
ret
in
cmc
lds
or
mov
jne
mov
jl
scas
add
gs
push
test
or
nop
lret
in
adc
xchg
xor
std
push
or
pop
mov
inc
jl
pushf
lds
mov
add
push
jns
sbb
cmc
mov
push
adc
xchg
lods
cli
lock
or
rcrb
dec
xlat
pop
xchg
inc
mov
lcall
xchg
idivl
fnstcw
lock
adc
push
fucompp
sbb
push
push
push
test
cmp
fcoml
rcll
sbb
adc
xchg
in
add
adc
push
iret
dec
pminsw
jnp
inc
popa
cmp
scas
int
cli
gs
push
sbb
mov
rolb
mov
or
pop
mov
fldl2e
mov
push
dec
add
fld
xchg
jbe
pop
pextrw
or
push
inc
mov
xor
xchg
or
cmc
int
dec
and
pop
xchg
dec
dec
daa
outsb
dec
aas
push
push
push
xor
xchg
leave
popa
pusha
sbb
pop
sbb
mov
xor
mov
mov
ljmp
lock
scas
sub
fxch
mov
pop
xor
jne
pop
call
xor
adcl
jmp
mov
xchg
int3
xchg
arpl
add
ljmp
leave
sub
enter
pop
arpl
outsb
mov
sahf
lods
add
dec
xor
loop
cs
les
addr16
in
popf
fs
xlat
stos
bound
fcoml
je
daa
pop
jmp
out
cmpsl
push
mov
in
xor
or
lods
cs
mov
nop
aaa
inc
movb
out
adc
loopne
jnp
inc
jne
cmp
test
cmp
js
fidivrs
es
shr
popf
or
cltd
pop
sbb
andl
in
xor
mov
xchg
jo
jmp
mov
dec
mov
in
test
jbe
xchg
cmp
pusha
add
add
out
xchg
push
bound
in
or
fldz
mov
or
fdivr
decl
mov
jno
add
add
add
lret
jo
add
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
shlb
and
test
insl
fadd
inc
and
idivl
insl
push
adc
mov
pop
je
test
iret
lods
or
xor
imul
aas
or
mov
pusha
loop
fidivrs
mov
and
test
inc
leave
pop
lcall
and
sahf
jl
out
sbb
dec
cmp
sub
lods
push
jp
not
dec
adcl
mov
sarl
bound
in
mov
mov
mov
pushf
in
ljmp
inc
add
inc
sub
popf
mov
jmp
ret
lret
test
add
aaa
pop
out
in
out
mov
bnd
roll
push
sbb
shl
rcl
jge
mov
jmp
or
or
jecxz
inc
cmc
adc
arpl
enter
loop
andb
dec
add
es
adc
adc
pop
push
and
jl
and
or
inc
add
push
int
fnsave
or
add
push
cmpsb
push
and
mov
imul
fiaddl
push
xchg
sub
fdivrl
xchg
mov
sbbl
or
mov
mov
enter
insb
std
mov
push
rolb
mov
jg
lds
inc
mov
dec
jmp
lcall
neg
xlat
mov
clc
push
jnp
fldcw
dec
leave
in
inc
stos
push
push
jbe
push
ret
sub
adc
or
xchg
scas
push
clc
adc
bswap
fcoms
sub
xor
pop
in
jne,pt
mov
cltd
sub
addl
jg
jo
xor
cmp
add
lods
retw
push
pop
xchg
hlt
fadds
adc
dec
cmp
insb
lock
mov
dec
rolb
or
test
lcall
sbb
xchg
scas
xchg
xchg
xor
dec
fsubs
arpl
pop
ljmp
xchg
out
xchg
push
sahf
idivl
xchg
xchg
sbb
sahf
inc
sub
cmp
in
loope
lret
mov
in
inc
test
je
vpmaxub
and
sbb
mov
int
mov
cmp
and
and
clc
inc
adc
mov
inc
xchg
or
mov
push
lret
rol
clc
ret
dec
mov
and
repnz
arpl
outsb
jb
sub
loop
ja
adc
push
pop
lds
pop
xchg
lahf
pop
ss
rorb
mov
rorb
mov
js
mov
cmc
gs
fstpt
lods
test
inc
lret
xchg
push
xchg
orl
xor
or
jo
mov
test
test
mov
push
call
ss
xchg
adc
and
jmp
incl
mov
je
dec
sarb
mov
pop
test
mov
push
ja
pop
mov
xor
push
and
cmpsl
add
fs
sbb
mov
pop
cwtl
imul
cmp
push
test
push
mov
inc
cmp
cmp
mov
mov
push
jp
push
push
inc
outsl
mov
push
jp
cli
xor
xchg
lods
pop
mov
aaa
insb
mov
cmp
or
dec
or
cmpb
test
push
stos
mov
lcall
loope
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
jmp
lods
in
notl
adc
adc
adc
jge
xor
mov
aad
inc
test
inc
jl
popf
int3
stos
cmp
into
fcomps
push
xor
pop
pop
shl
push
cmc
xchg
push
adc
arpl
imul
mov
add
subl
push
pop
mov
das
push
xor
xorl
dec
cmp
out
add
mov
mov
xlat
aaa
pop
in
pop
fdivr
xchg
paddsb
add
mulb
add
fildll
pop
orl
cmp
or
aaa
cmp
iret
push
imul
in
clc
rcll
sub
mov
cld
dec
push
sbb
push
std
outsb
fs
test
scas
and
ret
or
aaa
jl
test
xchg
fadds
icebp
mov
icebp
stc
imul
outsl
decb
or
sub
loope
inc
nop
lods
sbb
adc
jle
fisttps
lock
adc
mov
fwait
and
inc
sahf
imul
inc
dec
adc
arpl
jmp
imul
negb
inc
sub
mov
xchg
es
push
imul
lds
jno
ret
loopne
sbb
mov
cmp
dec
outsl
pop
rolb
inc
mov
inc
xor
mov
inc
pop
pop
dec
test
cmc
shl
jecxz
xor
add
dec
arpl
sub
mov
xchg
dec
adc
stos
stc
xor
shlb
sbb
mov
sbbl
adc
andl
xor
mov
mov
jg
aam
test
cs
xor
lea
adc
xor
mov
mov
push
mov
push
sti
adc
cli
roll
call
data16
fs
cltd
fsubs
cmp
movsb
cmpl
and
fadd
mov
or
sbb
xchg
push
pop
iret
xchg
pop
xorb
pop
dec
push
xchg
js
xor
sub
mov
or
add
scas
and
jmp
mov
xor
jbe
mov
shlb
pop
jp
lret
adc
cltd
jle
notl
push
push
xchg
ret
test
dec
pop
xlat
fadd
push
sub
jb
xchg
insl
pop
inc
daa
push
je
jbe
cld
pop
push
mov
dec
mov
outsl
adc
lcall
jecxz
je
std
jae
leave
jg
sbb
inc
and
popa
dec
sti
xchg
mov
adc
cmp
nop
sbb
adc
or
dec
cmp
and
xor
mov
add
cli
pop
cld
fwait
mov
xor
pushf
inc
dec
shlb
sbb
xor
add
sub
sti
call
jae
arpl
adc
lods
shr
aas
push
cmp
sbb
stos
inc
mov
cmpsl
mov
lahf
mov
jmp
mov
push
jo
xchg
scas
leave
sub
sahf
mov
sub
ret
push
sub
enter
pop
daa
fnstenv
pop
jbe
in
dec
es
iret
push
or
push
fcmovb
mov
test
cwtl
mov
xchg
js
or
pop
shrb
xchg
call
daa
mov
mov
adc
and
idiv
dec
push
mov
dec
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
push
mov
adc
int
adc
loop
shl
push
xchg
xor
pop
aad
test
dec
cmpsl
rcrb
in
mov
dec
fmuls
inc
xchg
cmp
cvtps2pd
and
and
lods
sahf
stos
cs
fadds
cmp
lcall
pop
adc
test
fistpll
stc
jns
pop
and
xor
fidivs
mov
into
lds
jl
inc
sbb
addl
xchg
insb
mov
aas
fcomps
repnz
adc
pushf
mov
add
push
or
mov
js
push
sbb
aad
jp
mov
jns
enter
push
cltd
dec
lods
pop
mov
lcall
mov
popa
enter
cmp
push
outsl
das
push
int
and
sbb
mov
cmpsl
sbb
fwait
xchg
push
inc
lcall
and
xor
ret
jne
int
add
xchg
mov
sbb
inc
out
fidivrs
out
add
pop
push
hlt
xchg
insb
and
outsl
sbb
and
xchg
adc
jecxz
andb
in
xchg
cmp
sub
stos
xchg
xchg
pop
mov
push
sub
fsub
call
lahf
popa
cmp
mov
cmp
mov
dec
sub
pop
sub
stos
xor
jns
mov
cli
into
lahf
cwtl
xchg
inc
test
pop
cmpsb
jge
sbb
inc
push
xchg
enter
das
push
fs
adc
xchg
inc
js
ret
cmp
mov
lods
mov
adc
imul
dec
hlt
shlb
sbb
cmp
imul
pusha
mov
rcr
cmpl
dec
cmpsb
sarb
xchg
repz
add
jp
xchg
mov
ds
cs
fst
xchg
adc
pushl
or
xor
lcall
imul
dec
adc
xchg
pop
fnstenv
mov
sti
insb
pop
repz
push
add
lods
jg
shl
mov
pushf
test
loope
cmp
mov
and
cwtl
push
add
fwait
pop
icebp
out
imull
cli
sub
xor
aaa
mov
imul
mov
or
push
and
ljmp
cmpsl
shrb
repnz
and
add
fildll
adc
repnz
andl
mov
sbb
cmp
mov
dec
movsl
dec
cmpsl
popa
pop
push
xchg
inc
mov
pop
xor
pop
and
aam
pop
sbb
xchg
sbb
lock
jo
mov
mov
fildl
aam
xchg
sahf
mov
push
inc
cmpsb
inc
dec
sub
pop
inc
pop
pop
mov
push
mov
addl
xchg
add
mov
imull
lret
in
mov
push
or
filds
and
xchg
fsubrs
out
dec
jle
dec
mov
pop
push
cwtl
and
adc
out
lods
leave
sub
jnp
jnp
xchg
fimuls
cmp
xchg
sbb
fdivs
push
mov
adc
push
mov
lods
idiv
loope
fsubl
inc
mov
mov
xchg
mov
dec
cli
mov
andb
cmp
push
stc
repnz
ret
pop
in
stc
dec
mov
xchg
push
mov
lock
test
adc
pop
les
cmp
push
sbb
jge
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
insb
push
pop
lods
push
in
adc
int
adc
ja
push
xor
cmpsl
push
sbb
loop
scas
inc
fildl
push
rcll
nop
aad
adc
lret
inc
add
repnz
lods
repz
mov
mov
je
jno
iret
jns
inc
cmc
jae
imul
pminsw
jno
pop
mov
fsub
sbb
xor
push
out
xchg
outsl
das
enter
or
or
xor
test
scas
adc
xchg
or
or
stos
mov
lock
aad
fwait
in
andl
add
sbb
xchg
mov
pusha
cmpsl
dec
and
jne
cltd
add
scas
xchg
mov
daa
xchg
lea
cmovae
je
gs
mov
mov
cmpsb
hlt
std
in
and
lret
sub
mov
and
jbe
push
psrad
cmp
sub
mov
pop
subb
pop
mov
ss
sbb
sub
pop
in
aad
in
daa
test
pop
mov
xor
inc
scas
sbb
sarl
imulb
mov
iret
cmp
daa
aad
mov
bound
rcrl
popa
add
ret
push
jg,pt
cld
arpl
lret
xchg
or
mov
int
shl
loop
dec
in
jb
scas
out
orl
les
das
pop
add
in
fs
movl
lods
jge
iret
cmp
cmp
enter
jo
or
add
clc
push
inc
mov
xchg
loope
xlat
mov
lods
sbb
push
cli
imul
push
mov
mov
repz
cmpsl
cmp
pop
push
sbb
xor
adc
test
xor
daa
arpl
jbe
or
pop
cmp
das
and
sub
push
mov
popf
fldt
sti
shrb
mov
imul
adc
add
mov
sub
cld
ja
lods
mov
pop
stc
push
lea
cmp
push
mov
sub
mov
xor
cmp
ljmp
icebp
out
cmpsb
jo
jl
mov
pop
divl
lock
imul
mov
mov
mov
mov
stos
ror
js
and
jge
jg
aas
xchg
out
daa
repz
mov
cld
movsb
imul
or
dec
sub
lret
aas
jl
aas
mov
js
out
cmpl
adcl
sbb
adc
repz
or
fcoms
icebp
mov
repnz
jl
aad
xchg
iret
inc
mov
xchg
lret
in
arpl
push
dec
in
jnp
and
sub
cmpsb
jecxz
mov
dec
pusha
insl
test
mov
sub
les
stc
fs
pop
ret
or
repnz
pminub
push
gs
addr16
cmc
hlt
adc
loopne
mov
mov
adc
xchg
jmp
mov
mov
int3
ja
sub
lahf
ja
iret
push
leave
jbe
xchg
push
lret
scas
lock
popf
mov
mov
pop
bound
dec
push
lahf
mov
cmp
ret
add
jbe
mov
pop
sarl
mov
cmp
loopne
movsl
mov
add
mov
mov
movl
mov
movl
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
hlt
lcall
int
adc
push
push
or
out
test
inc
out
pop
mov
nop
fs
stos
sub
mov
sbbb
ljmp
into
cmc
ss
leave
xchg
inc
pop
or
jmp
cmpsl
fidivs
js
movsb
jo
in
in
inc
mov
add
pop
sbbb
xchg
xchg
pop
dec
jns
or
cmp
into
mov
arpl
nop
lods
add
pop
sbb
outsb
call
cwtl
push
push
lret
clc
sub
xchg
or
fildll
punpcklwd
jl
sbbl
or
sbb
jle
jnp
out
lret
icebp
dec
pushf
data16
idiv
and
dec
mov
and
test
xchg
shr
shl
mov
inc
enter
adc
scas
jp
imul
cmpl
leave
or
mov
fsts
xchg
cmp
clc
jmp
mov
and
lea
popa
jnp
add
push
ljmp
scas
movsl
cmp
add
aaa
mov
movl
mov
cwtl
xor
jle
mov
and
or
orb
fiadds
lahf
pop
xorb
loop
cli
push
iret
in
ret
test
imul
mov
psrld
jmp
xchg
lret
cmp
shll
clc
imul
xchg
or
sub
mov
or
shll
mov
xchg
aad
xchg
enter
xor
pushf
dec
push
fmulp
dec
fadd
and
dec
or
scas
pusha
xlat
and
aad
or
rorb
in
or
cld
imul
fstpl
stos
ss
or
stos
push
jge
out
scas
mov
add
in
mov
sti
dec
cs
fisubs
add
xlat
jbe
sub
bound
int3
and
cmpsl
jge
mov
in
sti
leave
pop
ss
js
and
lret
push
in
jge
mov
push
sti
movsl
xor
cmc
mov
enter
scas
mov
in
gs
call
and
test
cmp
add
mov
sub
push
lods
mov
data16
jnp
mov
cmp
xchg
testb
mov
fistps
rcl
push
inc
and
or
and
in
xor
stos
jae
push
dec
mov
pop
sbb
push
dec
enter
cmp
dec
xor
imul
fadds
xor
push
aam
dec
xchg
js
or
push
xchg
test
scas
adc
or
data16
icebp
mov
xchg
into
adc
jnp
test
int3
mov
jb,pn
or
hlt
enter
in
add
ljmp
and
pop
lahf
cwtl
adc
enter
loopne
stc
and
push
nop
lock
lds
pop
xor
push
xor
mov
and
loope
dec
sub
sbb
jb
fwait
xchg
in
dec
outsb
xlat
add
add
out
fadds
jmp
xor
push
push
push
pusha
mov
xor
ljmp
adc
nop
push
pop
sub
popa
or
push
cmpsl
push
loop
dec
rorb
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
in
add
int
adc
pop
pop
imul
jns
push
dec
daa
testl
adc
lret
pusha
sarb
mov
push
xor
sbb
inc
mov
inc
jne
int3
es
imul
pop
hlt
dec
in
cltd
jmp
vmptrst
and
jecxz
mov
inc
mov
adc
cmpsl
adc
lea
push
ret
push
xchg
and
sbb
add
mov
jns
faddl
sbb
xlat
icebp
mov
fs
cmp
push
fcomps
bound
xorb
xchg
mov
adc
cmpsl
data16
addb
xor
imulb
ljmp
in
or
mov
mov
jle
hlt
mov
lods
mov
inc
insl
rcrl
and
pop
jno
movsl
sbb
or
or
jo
sarb
scas
loope
lcall
xor
rcrl
test
xchg
or
cmpsb
aas
mov
adc
jnp
pop
inc
cmc
fidivrl
xchg
imul
dec
jmp
jl
mov
xor
jnp
push
dec
gs
push
popf
add
popa
add
sbb
shrb
loop
or
jno
push
add
popf
ret
out
and
add
push
xchg
and
in
out
fs
mov
loop
push
cs
and
dec
mov
pop
mov
adc
aaa
mov
add
xchg
add
or
mov
xor
lcall
dec
aam
push
aad
subl
sub
das
pop
iret
adc
inc
jp
add
xchg
shlb
push
cmpsl
dec
xor
stos
iret
push
scas
xor
jmp
lds
fstl
ret
mov
jnp
jb
mov
adc
pop
xor
jo
or
movsb
out
sub
jge
xchg
xchg
cwtl
add
jge
fstpt
mov
adc
xor
addl
dec
outsb
popf
mov
xchg
or
nop
mov
add
mov
jle
cwtl
in
je
push
lahf
and
jae
jecxz
dec
test
in
test
fadds
dec
and
test
cmp
cmp
lea
add
xchg
cld
push
sbb
repnz
pushf
das
pop
lds
sahf
hlt
adc
rcrb
lods
roll
pop
push
push
nop
fisttpl
aaa
loop
mov
pop
mov
imul
sub
xchg
xchg
or
sub
dec
inc
loop
mov
pop
and
cld
mov
imul
jne
out
notb
dec
cmpsl
push
mov
adc
popa
pop
popa
ljmp
shl
push
insl
mov
hlt
js
xchg
or
pusha
out
add
sbb
cmp
hlt
hlt
in
insb
adc
ljmp
push
xor
fisttpl
or
sub
dec
push
data16
mov
lret
pop
push
adc
jle
pushf
cmp
inc
mov
call
test
clc
bound
mov
xchg
fmulp
pop
int3
pop
mov
int3
insb
jg
inc
mov
xor
icebp
mov
int3
int3
test
loope
jnp
pop
clc
insl
xchg
scas
cltd
and
dec
movsb
inc
gs
adc
pop
test
adc
add
stos
lds
fadd
jmp
mov
shl
jmp
fmuls
sbb
inc
test
adc
adc
adc
jnp
adc
inc
lret
inc
mov
mov
pop
inc
pushf
dec
lcall
or
xor
push
test
jae
xor
pop
or
pushf
leave
inc
in
lods
scas
mov
mov
push
pop
adc
fidivs
add
rcrl
xchg
push
mov
xchg
push
sbb
add
mov
cmp
andb
leave
fwait
push
mov
incb
fnstcw
rcll
mov
fsub
xchg
cmpsl
negb
mov
popf
inc
outsl
adc
lds
clc
adc
stos
ret
mov
stos
icebp
cli
andb
outsl
movsb
pushf
cmpsl
out
scas
dec
neg
ficompl
pop
gs
and
xor
mov
lret
xchg
or
mov
lea
or
ds
in
jno
movsl
inc
rolb
mov
inc
test
out
lret
outsb
jecxz
shlb
pop
inc
push
cwtl
jecxz
or
out
jle
mov
cld
test
in
or
mov
xchg
aam
out
fsubrl
fcmovb
xor
fimuls
pop
ret
or
push
mov
and
in
rcl
xchg
imul
xchg
test
test
mov
jp
jg
andl
mov
jbe
lods
xchg
mov
and
push
outsb
add
mov
leave
sub
insl
mov
cmpsl
aam
movsl
and
repz
inc
aad
fsubr
mov
add
shlb
inc
sti
movsl
lret
xchg
push
xchg
bound
pop
pop
addr16
pop
aaa
or
loope
xor
in
dec
xor
mov
loope
sub
inc
pop
shl
pop
ficoml
push
mov
xchg
mov
jge
filds
sbb
js
push
das
nop
mov
test
inc
jno
or
push
adc
xchg
mov
insb
cwtl
fdivrl
adc
add
bound
xor
sub
fnstsw
dec
rcl
das
fcmovb
mov
xor
push
jne
mov
enter
xchg
int
push
das
dec
push
fisttps
sbb
sub
dec
int3
sub
andps
mov
lods
dec
jecxz
repz
add
sub
cs
mov
rcrl
dec
xchg
rorb
test
inc
and
cli
lods
mov
mov
movsb
outsl
gs
aad
jb
jb
repz
dec
cmp
scas
subb
arpl
jge
push
nop
dec
sub
imul
mov
pop
gs
mov
out
pop
mov
lds
sbb
push
data16
push
pop
cmp
push
daa
push
lcall
inc
imul
icebp
je
lods
ds
mov
dec
adc
dec
mov
out
iret
cmc
jmp
and
or
icebp
out
mov
imul
or
adc
jl
mov
fstps
in
outsl
jmp
lret
push
jae
jo
and
pop
fmulp
popf
or
cmp
xchg
mov
jp
filds
dec
es
or
mov
jmp
lcall
hlt
pop
fwait
out
inc
adc
push
push
rcr
sti
adc
adc
push
pushf
shrl
rorl
and
mov
das
sub
lds
push
pop
sub
arpl
jns
cli
jge
dec
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
push
sbb
adc
adc
adc
dec
aaa
dec
fs
xor
xchg
shl
test
in
ds
mov
inc
aaa
idiv
int3
mov
and
and
sbb
int
rcrw
mov
movsl
mov
sub
add
mov
insl
cmpsb
leave
sub
hlt
lret
push
cmp
inc
add
neg
ljmp
jne
test
stos
es
cmp
aam
and
imul
movl
cld
imul
push
in
or
movsl
fs
scas
shrl
dec
sub
or
popa
jbe
popfw
inc
insb
repz
in
shrb
pop
in
clc
sub
add
stos
test
pop
add
or
hlt
sub
xchg
and
fidivl
sub
insb
push
shll
ficomps
push
jp
xor
pop
aad
cmp
push
fstpl
jbe
stos
xchg
lret
xchg
sbb
jg
jae
adc
sub
cld
sbb
arpl
pusha
xor
imul
insl
test
lock
and
jmp
jns
mov
sub
dec
push
mov
leave
inc
mov
pop
popf
inc
add
mov
test
xlat
or
cwtl
es
mov
sub
mov
in
xchg
fimuls
ret
cmpsb
pop
mov
push
adc
push
or
dec
cwtl
pusha
nop
mov
sbbb
jbe
push
mov
repnz
jmp
test
inc
jle
sbbb
sbb
sub
imul
or
push
shlb
xor
dec
adc
or
bound
xor
shlb
push
ret
orl
jp
mov
das
jo
and
sbb
add
mov
add
mov
outsb
xor
and
mov
cmpsl
popa
push
xor
inc
push
sbb
fs
pop
ja
add
sbbb
jnp
dec
jbe
pop
rclb
cmp
jnp
xor
lcall
test
add
rcrl
jle
in
jae
mov
push
leave
jbe
notl
rcrl
out
and
cmc
cmp
cmpsl
out
leave
fimull
orl
pop
js
mov
aad
jbe
iret
mov
jns
fistpl
mov
stos
and
outsb
mov
in
jle
test
sub
rorl
inc
mov
scas
aas
shrb
cmp
mov
jge
inc
sbb
or
jo
jnp
imul
add
shlb
in
cmpsb
pop
popa
cmp
adc
xchg
mov
dec
add
sbb
sbb
pop
mov
jmp
dec
pop
ret
dec
loop
aas
inc
sub
rcrb
sar
fidivs
jecxz
mov
mov
xchg
push
je
sub
jo
sbb
mov
and
js
rcrl
inc
pusha
imul
xchg
scas
int
add
mov
cld
or
jne
mov
movsl
cwtd
mov
adcl
icebp
push
stc
cmpsb
cmp
pushf
out
fidivs
mov
lahf
rcll
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
dec
subb
les
adc
adc
adc
lods
shrl
fidivl
mov
adc
sbb
arpl
outsb
adc
cmc
outsb
lods
mov
arpl
loope
or
iret
test
imul
data16
cmpsb
xchg
addr16
stc
cld
or
iret
sbb
les
xchg
mov
inc
push
dec
adc
addb
xor
cmp
xlat
mov
in
mov
xchg
outsl
idivl
lea
xchg
mov
loope
xadd
aad
movsl
xor
cmp
ja
dec
cmpl
subl
mov
pop
cmpl
fnstcw
mov
xchg
ds
lcall
rcll
loopne
cld
jmp
add
sub
sub
and
rcrl
aam
imull
lret
repz
cmp
movsb
sub
pop
loop
push
cmp
aas
bound
dec
push
add
lcall
lods
xchg
in
loopne
pop
push
mov
or
insl
mov
mov
ja
mov
aas
or
add
dec
cmp
pop
iret
out
pop
add
jge
lret
mov
jl
cmc
es
xchg
ret
lods
jbe
mov
movsl
mov
xor
test
addl
sbb
fnstsw
out
pop
outsl
lock
inc
fwait
ja
mov
xor
or
test
and
mov
jnp
dec
aam
mov
push
mov
sbb
daa
out
push
leave
add
cld
inc
jns
push
daa
lcall
cmpsl
cmp
clc
imul
dec
dec
inc
les
std
sub
dec
lods
into
cmp
lock
push
movb
mov
cwtl
ja
fwait
mov
aad
jo
and
mov
imul
dec
sub
push
rcll
xor
arpl
jnp
outsb
cmp
lock
sti
ret
mov
and
stos
push
xor
fldenv
adc
push
icebp
aaa
lods
addr16
inc
mov
popa
subl
and
dec
sub
stos
loopne
je
mov
pop
dec
jnp
popf
inc
nop
mov
rorb
gs
push
rorl
pop
cmc
and
jbe
jp
ret
push
call
lret
and
push
test
lods
outsl
ja
std
and
mov
dec
aaa
loop
and
rcrb
scas
jbe
xchg
into
mov
lds
xchg
out
push
movsl
mov
fcmovnbe
pop
jno
cmp
fildl
pushf
and
sbb
inc
arpl
mov
rorl
leave
shlb
mov
sbb
lds
call
push
data16
divl
lods
pop
imul
lods
stc
adc
ljmp
inc
into
scas
push
out
fnstcw
push
inc
into
cmp
mov
popa
leave
les
push
cwtl
nop
mov
repz
dec
cmp
lcall
insb
aam
mov
cmp
aas
fcomps
inc
shlb
adc
push
push
jo
cmp
mov
push
out
sub
push
in
inc
addr16
cmp
or
xchg
das
sub
pop
packuswb
outsl
sub
push
loopne
jo
jb
sahf
cmp
lcall
pop
int
jle
jl
rcll
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
or
mov
int
adc
or
ljmp
xchg
inc
mov
mov
std
jmp
repz
fdiv
jne
movsl
jge
mov
pushf
and
insl
sbb
jge
ret
fsubl
lods
cmpsb
mov
in
adc
sub
stc
jp
push
daa
sbb
test
xor
jle
and
xlat
sub
leave
aas
fisubl
inc
je
ret
addr16
mov
pusha
repz
fildl
rcll
and
or
rcrl
mov
test
cli
or
add
in
pop
xchg
test
imul
mov
sti
daa
dec
gs
js
jp
sub
adc
dec
jge
cmp
negl
pop
xchg
sar
movsl
xchg
in
mov
rcl
add
lock
or
aaa
cmp
pushf
rcll
data16
pop
add
push
jmp
pop
stc
add
std
sbb
iret
mov
push
sub
mov
lcall
pop
mov
cmc
lret
adc
shlb
adc
popf
jb
shr
ja
cmovle
fwait
rcrb
cmp
or
adc
push
stos
repnz
int3
test
mov
aad
sub
in
dec
adcb
push
dec
sbb
cmpsb
push
jne
and
movsl
inc
xchg
outsl
mov
push
scas
mov
mov
and
mov
pop
imul
shll
mov
ror
inc
loope
lahf
add
ret
mov
jmp
mov
xchg
xor
xor
adcb
data16
lds
sbb
cltd
outsb
js
rorl
or
ja
pop
cmp
push
inc
or
pop
and
neg
dec
gs
popf
int3
sub
sti
jne
jmp
sbb
movsl
xorl
xor
push
sbb
cwtl
or
sti
sarl
and
inc
dec
int
aad
inc
xchg
and
add
xor
xchg
inc
aas
popf
add
cmp
push
dec
cmpsl
cmpsl
mov
mov
mov
stos
mov
xor
loope
jp
ja
insb
pop
push
das
repz
inc
push
mov
push
aam
lret
dec
xor
lahf
daa
pushf
mov
fistl
xor
out
dec
xor
loop
test
test
xchg
inc
lcall
push
mov
ret
insb
testl
lret
or
les
pop
cmp
dec
arpl
xor
adc
imul
lcall
push
sbb
jbe
lea
jmp
cmp
imul
adc
xchg
cmpsl
cmp
mov
fisubrs
sub
inc
mov
outsb
mov
pop
pop
cmp
adc
sub
loope
push
icebp
call
pop
sub
pusha
cmp
adc
add
inc
pop
outsb
xchg
fstpt
jno
or
scas
in
mov
xchg
mov
jno
dec
adc
push
add
xchg
cltd
jle
aam
mov
lret
nop
mov
rolb
notb
push
dec
std
push
xor
mov
mov
pusha
and
push
dec
xor
mov
mov
leave
jle
testb
enter
mov
push
daa
jb
xchg
pusha
fst
add
add
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
add
jle
mov
adc
jno
lret
jmp
dec
pop
mov
fisubl
inc
out
mov
xor
or
orl
jne
xchg
cmp
mov
and
in
inc
push
mov
shr
repz
jae
mov
push
hlt
sbb
cmp
test
outsl
fdivl
into
enter
outsl
fstpl
push
and
push
loopne
push
je
cmp
mov
xchg
jbe
imul
mov
in
xlat
pop
out
or
fs
and
in
fs
sub
lret
lret
and
jnp
sbb
test
push
mov
fistpl
adc
subb
sub
mov
sbb
add
lock
cwtl
sbb
mov
xor
int3
push
dec
mov
and
inc
xchg
std
call
das
mov
lea
jns
mov
mov
insl
xchg
int3
addl
fcom
scas
or
lock
cmp
cmpsb
pop
xchg
sub
aas
adc
xchg
sub
lea
dec
inc
cli
into
daa
and
sbb
lret
dec
jae
inc
dec
pop
or
outsb
mov
add
inc
jl
movsb
iret
nop
jp
aaa
popa
inc
push
scas
inc
enter
sbb
or
pop
jne
pusha
repz
push
mov
scas
mov
arpl
repnz
jnp
pop
sti
int
push
cli
inc
cmp
adc
mov
cmp
xchg
and
add
xor
orl
fst
or
pop
push
cli
jmp
sub
jns
outsb
mov
jno
dec
adc
stos
cwtl
test
pop
mov
movsl
add
dec
mov
lods
daa
push
and
lea
add
out
cmp
shll
sbb
cmp
add
pop
nop
adc
into
out
push
popa
and
pop
in
fists
mov
pop
scas
jnp
cwtl
and
push
mov
lahf
add
jle
les
js
jnp
push
lods
mov
aas
sti
add
and
mov
jb
bound
adc
dec
mov
xchg
enter
jbe
stos
test
fildll
fucom
lea
in
or
sti
stos
sbb
aaa
loopne
push
bound
lret
test
mov
stos
jg
jns
stc
into
add
lahf
mov
mov
test
add
fs
dec
imul
mov
pop
repz
dec
imul
repz
sub
cmc
fcompl
fcoml
lock
sbb
test
cmc
pop
fs
out
out
mov
push
popf
cmpsl
ss
cltd
ret
xchg
frstor
mov
gs
inc
cmpsb
jge
sbb
iret
inc
adc
xor
xor
subl
and
loop
jg
test
cltd
jecxz
mov
lds
and
jbe
daa
int
adc
fisubl
vpsubsb
push
xor
xchg
not
mov
pop
fistpl
aam
leave
pop
pop
sbb
les
fwait
cmpsb
aas
mov
ret
or
xchg
sarb
sbb
imul
jb
fcompl
mov
xchg
insb
sbb
sbb
jnp
cmp
push
or
imul
mov
sahf
inc
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
jl
test
int
adc
mov
insl
loopne
xchg
xchg
pop
pop
aad
xchg
in
andl
or
mov
pop
movl
stos
cmp
dec
psubq
and
cmp
mov
fisttpl
mov
fnstsw
fstps
mov
je
test
inc
push
std
ret
leave
out
mov
in
pop
pusha
pop
mov
lea
push
lea
jp
pop
pop
dec
xor
push
and
xor
mov
push
xor
jg
push
shlb
test
lahf
jp
mov
mov
sbb
les
inc
adc
xchg
jbe
mov
sbb
pop
xor
push
out
and
adc
outsl
ja
inc
push
xchg
push
lock
mov
push
lods
out
ds
divb
cmp
aaa
sahf
imul
cmpsb
insl
add
xorb
sub
inc
orb
push
sub
imul
dec
mov
das
arpl
divb
mov
mov
push
ficoml
fcoml
push
clc
adc
sbb
cli
pop
xor
loope
jg
push
test
lods
rorl
jbe
inc
icebp
inc
ja
or
addr16
xor
cmp
cld
pop
pop
dec
mov
insb
add
ret
adc
inc
pushf
add
out
enter
xchg
cmp
inc
sbb
jle
insl
lock
arpl
xchg
in
cld
mov
pop
stos
int3
loop
jnp
jp
int3
mov
xor
cmc
std
mov
and
rcl
ljmp
inc
xchg
cs
pop
mov
js
and
add
xlat
push
and
repnz
jge
jg
jb
lock
fldt
in
jl
and
jge
insl
movsl
fwait
pop
and
xchg
pop
ss
sbb
mov
xchg
mov
fisubrs
jge
test
xchg
test
pushf
cmpl
pop
ljmp
pop
jp
cmp
push
repnz
or
addb
pop
lods
pop
dec
jo
loopne
sub
sbb
ljmp
mov
mov
and
mov
cmp
test
ds
mov
jp
lret
mov
and
xchg
sbb
scas
xchg
sarb
jle
mov
sub
jb
hlt
pop
mov
add
lret
outsl
rol
xlat
daa
stc
jmp
mov
jne
pop
inc
into
sub
addb
daa
subb
jp
push
fisttpl
loope
jmp
sub
pavgb
aaa
inc
jle
sub
push
xor
adc
in
inc
jae
je
lretw
cmp
loopne
sbb
cmp
and
testl
inc
adc
xchg
ja
add
sbb
sbb
mov
inc
mov
pop
stos
aas
in
loope
ficoml
inc
or
loope
dec
into
push
cli
xor
pusha
out
push
loope
mov
out
xchg
fdivrp
and
sub
mov
jo
and
and
xchg
xchg
inc
test
ret
leave
jecxz
stos
bound
stc
or
sarl
sarl
daa
pop
mov
cld
or
pop
pop
into
stc
lds
dec
loopne
lock
pop
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
mov
mov
int
adc
push
dec
push
lods
cmp
orl
aaa
sbb
inc
aas
loopne
and
mov
jp
sbb
ret
lods
adc
mov
dec
ret
inc
mov
ljmp
adc
adc
dec
sub
pop
or
push
in
mov
sti
and
push
shll
inc
push
loope
push
dec
les
je
or
cwtl
mov
xor
mov
shr
not
adc
imull
call
jp
dec
or
mov
mov
adc
mov
dec
pop
aam
test
lcall
push
lahf
cmp
jno
in
xor
test
fistps
cmp
icebp
jb
cli
add
pop
push
jecxz
stc
bound
cmpsl
xchg
jg
aaa
pop
fisubs
rcrl
dec
movsb
push
in
push
cmp
mov
lcall
mov
int3
cmc
xor
sub
lret
ficoms
xchg
call
sbb
imul
cltd
jmp
xlat
cmp
int
sbb
js
sbb
sub
push
fisttpll
pushf
out
xchg
ret
sbb
aaa
lret
pop
mov
rcr
inc
pop
dec
js
sub
xor
cmpsl
lahf
push
cmpl
jge
ljmp
adc
and
std
scas
lock
aam
addr16
push
or
inc
shll
add
cmp
sub
inc
mov
loopne
mov
popf
je
add
shlb
push
mov
xlat
and
mov
fs
dec
inc
rcrb
arpl
scas
push
mov
aam
leave
shll
jne
sub
mov
push
pop
jecxz
sub
sbb
pop
data16
sahf
rcrl
jge
mov
sbb
dec
cld
out
mov
xchg
out
iret
xor
icebp
xlat
stos
pop
dec
lods
adc
out
mov
ret
mov
pop
clc
hlt
subb
sub
test
pushf
mov
pop
mov
psubsw
repz
adc
adc
divb
lods
sub
scas
push
test
xchg
sbb
fcompl
rcrl
sahf
cs
mov
or
int
sbb
and
in
movsl
adc
ljmp
es
mov
ja
popa
pop
pop
pop
mov
or
in
jns
stc
adc
jns
enter
mov
stos
add
jmp
stos
or
jnp
ja
inc
cld
nopl
sub
lea
add
add
jae
jmp
and
jbe
lcall
or
pushf
cmpsl
xor
add
aas
mov
fists
push
loope
xchg
xchg
mov
xchg
sub
push
in
push
xor
lock
pop
fwait
insl
sbb
scas
mov
out
lcall
in
ret
stc
cmp
cmp
js
fiaddl
jb
inc
or
mov
cs
adc
pop
aad
add
outsl
or
aaa
xchg
mov
or
in
pusha
jbe
fadd
jae
mov
loop
insb
mov
aam
out
jbe
bswap
testb
cli
push
lods
lahf
js
add
pop
ss
aam
and
jl
fsubrl
stc
in
lock
stos
rcrl
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
stos
mov
adc
int
adc
xchg
mov
fs
pop
mov
mov
fcmovbe
ja
adc
outsb
jo
test
ljmp
push
enter
ja
or
push
out
idivl
mov
movd
dec
movsl
pop
push
bound
push
mov
xchg
add
fwait
popf
push
insb
insb
and
in
or
adc
fst
dec
push
ret
insl
jp
push
or
fnsave
push
aad
lahf
cmp
add
mov
lret
jns
in
mov
je
fnstsw
lea
mov
jmp
and
fcoms
out
movsl
xor
mov
mov
cltd
call
bnd
xor
adc
shlb
mov
decl
or
lret
or
imul
lds
mov
add
adc
xchg
sub
out
aam
inc
nop
stos
push
scas
inc
arpl
dec
stos
outsl
cltd
jo
icebp
and
dec
out
add
push
cltd
sarb
push
icebp
xlat
xchg
lret
mov
in
mov
sbb
sub
cli
push
mov
cmpsb
pop
subl
cltd
ljmp
loopne
cmp
mov
je
rorl
push
push
ret
jbe
sub
mov
xlat
hlt
xchg
inc
xchg
xchg
lret
sahf
fnstsw
mov
jne
imul
shl
cmpsl
negl
jge
xorb
in
cmp
mov
mov
scas
jae
ja
sbb
repnz
test
aam
adc
int3
outsb
test
scas
push
cmp
imul
cmpsb
ljmp
int
ret
mov
adc
jbe
and
std
andl
addb
stos
outsb
xchg
xor
ret
mov
xor
inc
add
enter
cmp
into
sub
outsb
mov
clc
mov
cmpb
jae
or
sub
sub
xor
push
icebp
inc
sub
xor
sub
imul
daa
inc
mov
mov
rcrl
inc
pop
sbb
xlat
shlb
add
jl
inc
adc
ret
lahf
pop
out
pop
mov
mov
loope
mov
data16
into
gs
aad
fninit
mov
sbb
pushf
cmp
cmpsl
in
jae
fimull
or
sahf
inc
in
inc
out
or
lock
addr16
repz
inc
pop
fdivrl
in
call
dec
ljmp
xchg
arpl
pushf
and
int
sahf
xor
mov
mov
ret
mov
fbld
push
mov
adc
lcall
mov
hlt
scas
ret
lea
and
icebp
je
jnp
or
rorb
leave
loop
lahf
jp
sub
sub
inc
mov
pop
inc
push
adc
sub
mov
jb
mov
fs
mov
cs
lcall
jb
pop
cltd
sub
or
adcl
jl
xchg
and
insl
jg
sub
in
lahf
dec
xor
xor
out
jb
daa
mov
add
add
into
cld
pushf
cmp
idivl
cmp
add
ja
imul
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
xor
stos
sub
adc
adc
pop
mov
xchg
cmp
cmp
cld
lods
mov
pop
ljmp
sub
mov
and
pop
mov
mov
pusha
rorb
fisubs
test
adc
loopne
sub
fmul
xchg
sub
fstpt
lcall
repz
enter
popa
stos
mov
mov
cld
jecxz
pop
jmp
mov
aad
jmp
fs
sub
test
or
push
cmp
inc
insl
add
mov
ds
lret
les
pop
mov
fs
sub
roll
xchg
in
outsl
inc
push
xor
adc
xchg
mov
mov
xchg
rcl
xchg
inc
cmp
inc
cmp
and
add
xor
mov
sub
popf
fidivs
push
or
subb
insl
pop
mov
and
jbe
mov
xlat
hlt
repz
push
loopne
test
add
lret
outsl
dec
ss
aaa
fistpl
cltd
push
add
pop
int3
mov
pop
jecxz
pop
test
in
jmp
sub
mov
inc
std
and
inc
push
jle
movsb
scas
xor
xchg
aad
cmpsl
stc
lahf
or
dec
mov
and
adc
stos
addr16
nop
jl
test
pop
aad
pop
sti
bound
add
jbe
sub
sbb
add
jp
pop
jle
sbb
rolb
notl
sub
cmp
out
sbb
jnp
and
mov
mov
push
leave
sarl
and
push
inc
push
sbb
imul
fimuls
stos
test
adc
mov
xlat
movsl
dec
in
xor
sub
cmc
mov
shlb
mov
xor
jo
ds
xchg
inc
push
in
int3
pop
jle
push
dec
fdivrs
inc
and
fs
outsl
sahf
xor
in
loopne
mov
fisttpll
mov
repz
repz
mov
sub
inc
sti
cld
jecxz
popf
pop
sub
in
fsubs
fnstsw
jo
sub
cmc
xchg
addr16
xor
mov
adc
jns
jo
cmpsl
test
pop
mov
inc
lcall
mov
or
out
js
dec
mov
sub
mov
pop
jnp
iret
sarl
fs
xor
mov
ret
ljmp
sbb
in
js
fisttpll
insb
push
sub
jns
fdivl
addl
in
aam
scas
mov
xlat
cmc
outsb
inc
stos
xchg
push
cs
fcmovbe
shlb
xchg
aad
pusha
inc
dec
shlb
ret
xchg
repz
sbb
fisttpll
jmp
fdivr
repnz
loopne
jnp
pop
jecxz
in
inc
jl
lret
in
int
xchg
nop
in
push
or
bswap
into
dec
pushf
mov
mov
xlat
nop
decb
or
in
pop
adc
sbb
xchg
xchg
inc
or
call
pop
cmpsl
adc
ljmp
add
fs
or
cmp
imul
fcomi
mov
loopne
les
adc
pushf
adc
iret
inc
repnz
andl
imul
bnd
imul
or
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
fnstenv
push
loope
pop
rdtsc
aam
loop
fdivrl
xchg
movl
adc
iret
jge
xor
pushf
and
pop
fsts
dec
aad
adc
pop
inc
adc
in
cmp
or
mov
bound
rcll
sbb
mov
out
fdivrl
inc
mov
f2xm1
adc
pop
aas
pop
jp
sub
in
fst
jl
cmp
inc
jo
cmp
leave
stc
das
shrl
out
arpl
aas
sbb
mov
cmp
ss
pop
rorl
cmp
xor
clc
fcmovnb
lahf
gs
ds
inc
ja
std
adc
aaa
mov
frstor
outsl
shll
es
sbb
lea
inc
pop
sbb
lret
inc
ficomps
pop
popf
imul
cmp
push
cwtl
outsl
lds
leave
sbb
mov
add
fimull
lods
add
or
lods
push
mov
daa
bound
popf
push
jo
sub
bound
jbe
and
ret
or
pop
push
fisttps
push
stos
jg
and
and
icebp
rcrb
push
add
data16
and
xchg
push
fwait
or
out
or
insb
fiaddl
repnz
ss
sbb
push
addr16
lods
cmp
lcall
jle
rorl
or
add
xor
mov
pop
dec
push
inc
mov
and
movsb
cmp
sub
ss
cmpsb
inc
test
testb
sbb
dec
xchg
int3
mov
xchg
xchg
pop
cli
out
bound
mov
cltd
mov
rcll
int
test
inc
cmpsb
mov
mov
icebp
fcomps
adc
lret
sub
pop
int
ss
repz
cmp
shr
mov
scas
popa
mov
xlat
or
inc
or
mov
xchg
jbe
dec
dec
mov
mov
int
int3
pop
scas
and
dec
inc
cmp
repz
pop
push
adc
and
das
mov
jo
sbb
mulb
mov
pop
mov
mov
fadds
xchg
add
inc
jg
jg
lods
and
cmp
scas
sahf
cmp
push
rcll
loope
xchg
and
adc
push
mov
jecxz
mov
push
addl
inc
inc
aaa
push
aad
pop
sbb
inc
in
cltd
adc
and
in
ljmp
int3
inc
test
xchg
adc
push
cmpb
add
insl
pop
loope
jbe
sbb
pushf
pop
jae
mov
mov
in
out
pop
pop
cmc
add
fsubrs
cmpsb
lret
sbb
sbb
out
call
xchg
andb
mov
push
sti
pop
inc
sbb
and
sarl
adc
faddl
andl
jecxz
hlt
mov
sarb
les
push
nop
pop
jge
imul
inc
ret
fstl
push
test
int3
pop
mov
adc
mov
or
mov
pop
dec
dec
ret
pop
cmp
cld
mov
inc
int3
pop
inc
push
insl
add
mov
dec
notl
gs
mov
inc
and
sbbb
mov
and
divb
repz
cmpsl
add
cmp
push
dec
in
popl
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
bound
mov
adc
adc
adc
stos
loope
pop
cmpsb
and
stc
lret
mov
popf
sahf
lcall
lret
sub
into
icebp
jae
or
lret
jl
insb
mov
mov
inc
roll
push
push
xchg
cmc
outsl
jp
loope
mov
xor
ret
test
add
fwait
jmp
xor
sub
outsb
dec
jbe
mov
daa
sbb
jp
jns
stos
ret
xchg
ss
mov
sahf
and
jb
cmp
push
sub
cld
fcmovnu
adc
dec
fsubl
mov
xor
cli
inc
mov
mov
std
js
sub
je
orl
or
xchg
adc
imul
mov
mov
jg
xor
push
jg
add
js
sub
sub
pusha
adcb
push
mov
insl
push
nop
repz
fldcw
mov
xchg
leave
sub
in
cwtl
addr16
dec
pop
dec
push
cmp
jecxz
jg
sbb
ret
fmuls
gs
add
subl
jb
into
mov
leave
adc
push
push
inc
adc
rcl
std
push
sub
out
out
aam
adc
daa
fwait
sbb
fs
jecxz
sub
and
add
pop
fwait
sub
testb
xchg
fidivs
lods
ss
lods
xchg
ret
mov
call
jle
sub
dec
or
loopne
add
shl
loop
pushf
outsb
inc
dec
les
outsl
mov
insb
loop
imul
cmp
lahf
fucomp
mov
or
vpshld
ds
adc
lods
iret
jmp
imul
add
jmp
xchg
dec
les
or
xor
call
jns
lea
mov
insb
or
cwtl
xor
inc
xlat
add
xchg
popa
lret
outsl
pop
popa
cmp
push
cmp
mov
outsb
xchg
push
fiadds
outsb
repnz
push
inc
jo
scas
xchg
jbe
add
add
add
push
mov
xchg
into
mov
fmul
and
push
mov
popa
push
dec
inc
lods
enter
fs
movsl
arpl
outsl
movsb
fists
es
mov
ja
adc
faddl
cli
adc
call
inc
repnz
mov
adc
bound
sub
mov
jbe
mov
fstps
xchg
repnz
stc
cmp
rol
push
scas
stos
jmp
jnp
mov
jecxz
mov
ret
aas
outsb
fimull
mov
je,pt
cltd
xor
jge
fsub
xchg
dec
and
pop
fmull
adcb
push
jg
in
sub
sub
dec
push
sbb
pop
leave
fnstcw
jp
arpl
clc
pop
cmp
pop
scas
sub
add
scas
ss
lea
shlb
inc
sub
aam
sbb
sbb
out
incb
lock
shll
mov
shlb
jecxz
and
sub
lds
insb
ljmp
or
adc
movsl
mov
stos
push
add
add
lcall
pop
daa
mov
push
push
rcr
subl
jns
insl
in
arpl
push
push
or
lret
mov
lahf
clc
not
sbb
gs
push
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
sub
fdivrl
int
adc
nop
cmp
les
mov
int3
push
jmp
lock
cmp
sarl
sub
cmp
and
pushf
pop
in
add
mov
mov
sbb
push
and
mov
int
ljmp
inc
xchg
push
lret
clc
inc
add
xor
mov
sub
jmp
cmpsb
xchg
movsl
inc
psubsw
mov
jp
ss
out
add
fldt
xor
jg
mov
mov
xor
imul
adc
mov
nop
mov
ret
dec
loop
sub
push
cmp
xchg
cld
dec
fsubrl
inc
outsb
push
jbe
push
pop
outsb
and
pop
out
ja
dec
fsts
dec
xchg
mov
ljmp
or
push
cmc
aaa
testl
push
pop
stc
adc
xlat
pushf
leave
xor
es
pop
add
repz
testb
mov
jge
dec
mov
mov
ja
lret
inc
dec
dec
mov
mov
popf
hlt
xlat
xchg
fisttpll
mov
push
jecxz
clc
sub
fidivrs
sub
cwtl
adc
cmpsl
jl
jl
in
jl,pt
out
sub
call
push
dec
lret
repnz
jns
inc
add
insl
or
dec
pop
mov
jg
cmp
outsl
outsb
lock
in
push
and
cmp
and
mov
cltd
pop
mov
ja
repnz
mov
push
mov
xor
movl
mov
or
fistpll
loopne
cmpsl
js
outsb
mov
xor
js
mov
insb
lock
fwait
cs
xchg
jne
repz
cwtl
push
insl
ficompl
sub
std
xlat
out
testl
ljmp
movsl
cmpsb
ror
jg
xchg
stos
js
sbb
ret
loope
sbb
inc
dec
lds
ja
jmp
sub
mov
sbb
or
arpl
scas
cmpsb
xchg
ss
aam
cmp
and
adc
dec
sbb
cmp
adc
fnstcw
fildll
and
out
sbb
out
xchg
adc
cwtl
das
add
js
int
and
push
push
in
js
cwtl
fisubrl
loopne
rcll
push
rcl
testl
in
sbb
mov
and
movsb
je
lods
cwtl
ds
iret
mov
and
in
jmp
and
push
mov
push
jp
fwait
mull
xchg
int3
out
out
fs
mov
jno
fs
pop
jns
pop
lahf
mull
or
and
hlt
cld
push
cmp
ljmp
xchg
pop
push
sbb
pop
xor
add
sbbb
movsl
cmp
lds
mov
movsb
dec
xchg
mov
out
sbbb
shlb
jge
adc
jae
or
lods
mov
sbb
sub
mov
pop
cmp
outsl
inc
popf
jo
push
call
ret
and
in
or
xor
fsubrl
arpl
or
xchg
iret
outsb
das
pop
icebp
mov
scas
in
or
jg
addl
mov
lea
jle
push
sbbl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
push
dec
and
jl
adc
adc
adc
adc
pop
pop
fstps
rorb
cmc
jg
xchg
fcmovnbe
sub
dec
ficompl
mov
sbb
int3
inc
xor
mov
cmp
vaddps
js
pushf
xlat
xor
push
icebp
in
rcrb
xchg
mov
sahf
cs
daa
push
or
push
pusha
sub
push
jno
mov
xor
mov
mov
psrad
pop
mov
mov
jae
cmpsl
loope
call
pop
lods
push
mov
ds
cmpsl
jne
es
aaa
je
xchg
imul
test
pop
fwait
outsl
add
lret
loope
jne
outsb
insl
xchg
ss
push
dec
rcrl
push
sbb
pop
cmc
cmp
mov
andl
and
mov
mov
jbe
jp
push
xor
push
inc
mov
mov
cmp
sub
pop
cmp
mov
fnstcw
jp
add
jnp
inc
roll
pop
adc
pop
mov
jb
ret
in
adc
adc
lret
push
xlat
mov
rcrl
orb
mov
mov
test
in
xor
out
scas
lret
inc
jmp
inc
stc
jmp
sti
inc
imul
add
int3
mov
xorb
pop
lods
xchg
aad
push
mov
mov
push
mov
dec
cs
sbb
nop
pushf
push
push
xor
push
pop
push
divl
xor
pminub
sub
sahf
sti
dec
pop
lret
popa
sbb
dec
and
fs
insl
pop
pop
roll
cltd
mov
pop
push
in
repz
jl
in
xchg
jg
mov
mov
scas
cld
mov
je
les
mov
imul
adc
cmc
mov
lock
sbbb
cmp
lcall
test
sbb
cmp
sub
popa
aam
popf
leave
scas
xchg
adc
mov
popa
inc
mov
lods
fistps
std
mov
mov
loopne
adc
aaa
cmpsb
in
push
cmp
data16
mov
loopne
cmpsb
dec
sbb
add
jnp
xor
out
xchg
fldcw
enter
fdiv
and
jge
pop
adc
ja
sbb
push
push
idiv
lcall
nop
or
xchg
stos
and
rcr
sub
ja
add
jle
dec
les
shl
mov
or
adc
cmp
mov
xor
insb
jp
movlps
insl
cltd
inc
shl
enter
int
in
push
pop
mov
xor
in
mov
add
daa
in
fcoml
fisttpll
adc
adc
shlb
lods
push
cmp
and
push
xor
push
dec
es
or
iret
in
movzbl
adc
pop
jle
push
mov
fwait
in
aaa
mov
xor
push
mov
push
rcll
pop
mov
loop
test
pusha
inc
inc
mov
in
inc
mov
ret
push
mov
aad
jg
jne
push
aaa
dec
adc
ret
ja
inc
jb
in
dec
insl
mov
jg
pop
std
jmp
xchg
jns
sbb
xchg
fwait
pushf
jno
popa
sub
inc
or
shrb
leave
pop
xchg
imul
lods
or
push
add
pushl
push
push
call
mov
jmp
xor
sbb
stos
aam
dec
mov
int
adc
fdivs
call
mov
stos
ja
inc
mov
inc
stc
or
push
sbb
add
test
cld
xchg
jmp
into
sarb
jne
shlb
cmp
out
mov
shll
add
jbe
int
out
cltd
ja
mov
or
fwait
pushf
push
pop
aaa
roll
jb
xchg
jne
or
arpl
popf
add
xchg
leave
mov
push
fucomi
mov
nop
add
stc
int
lods
int3
mov
xor
sarl
pop
pop
xor
push
add
xchg
jle
fcmovne
sbb
rcrb
lret
or
movsl
inc
test
rcrl
out
add
pop
xchg
xchg
push
cmp
sbb
leave
iret
sbb
add
xor
fmull
mov
aaa
in
fnstenv
cmp
aaa
int3
mov
lret
outsb
rorl
shll
popf
adcb
push
jne
xor
or
lock
incl
adcb
push
lret
pop
sbb
fnstsw
movsb
arpl
mov
mov
mov
sub
popa
test
xchg
sarb
xchg
mov
in
mov
jnp
testb
cmp
hlt
emms
aad
push
adc
sbbb
insl
jge
lret
icebp
xor
lret
mov
inc
and
pop
sarb
mov
les
mov
dec
test
sub
sbb
sbb
add
and
cmp
xor
fmul
jmp
xor
and
int
sub
dec
es
sarl
aas
fildll
pop
adc
js
dec
jge
into
cld
inc
dec
cli
fs
jnp
push
cmp
pop
or
xchg
pop
add
bound
imul
fs
movsl
sarl
pop
ret
scas
fisubs
sbb
ret
repnz
pop
arpl
cmp
cltd
xor
mov
filds
mov
int3
popf
adc
jnp
and
xchg
jmp
test
inc
stc
clc
in
lret
jno
test
test
cmpsb
xchg
rcrb
jmp
dec
jmp
push
mov
movsl
adc
xor
roll
push
in
mov
add
out
jbe
add
pop
jl
cwtl
decl
test
ret
dec
stos
jb
movsl
mov
jge
pushf
fstpt
imul
dec
mov
outsb
clc
enter
mov
push
aad
xchg
fildll
jle
outsl
leave
push
mov
je
jno
das
loopw
or
lods
pop
es
jp
inc
jae
stos
hlt
sbb
dec
adc
icebp
mov
cli
dec
jne
add
adc
sub
jmp
hlt
lahf
dec
cwtl
mull
sbb
xor
faddp
ss
enter
stc
and
insb
pop
sbb
leave
cli
fwait
and
push
xor
and
adc
push
popf
sbb
hlt
cwtl
inc
push
ret
pop
xor
clc
pop
adc
arpl
stc
pop
test
push
sar
lea
sahf
je
adc
aad
lret
add
mov
fs
xchg
popa
adc
mov
xor
cmp
loope
xor
xchg
jo
adcb
jge
xchg
call
add
mov
push
into
or
cwtl
int3
lcall
sbb
dec
xchg
std
add
mov
mov
andl
shrd
jmp
ja
jle
sub
xchg
mov
in
cmp
jb
adc
adc
adc
dec
jp
mov
xchg
sbb
mov
cmp
or
addr16
xor
shr
out
sub
push
mov
cmp
mov
push
scas
aaa
lret
xor
jle
mov
scas
setl
andb
push
mov
cmp
inc
jp
adc
jns
ss
fcomps
sub
lcall
dec
add
mov
lods
adc
les
lahf
fs
call
adc
pop
mov
mov
aam
sbb
notl
imul
jge
aam
fisttps
mov
imul
out
into
dec
test
fnsave
pop
shll
jmp
adc
mov
enter
mov
fisubrs
fmul
fisttpll
mov
adc
adc
enter
icebp
mov
sbb
pop
mov
call
pop
ret
dec
sub
aaa
roll
pop
in
lret
jg
xor
mov
call
or
mov
mov
jnp
cmp
mov
lds
cwtl
mov
xchg
mov
mov
mov
imul
mov
lcall
sub
push
mov
cmpsl
jns
mov
test
hlt
xor
mov
repz
imul
leave
push
xchg
xchg
pop
fmul
insb
insl
cltd
xchg
sbb
jae
mov
out
popf
fs
cs
test
adc
mov
inc
dec
insb
outsb
rolb
inc
imul
out
xchg
mov
cmp
push
sbb
pop
cltd
into
cmpsl
loopne
and
and
clc
mov
sahf
mov
out
jp
std
es
pop
mov
std
shrb
sub
mov
aas
imull
cmp
mov
add
pop
adc
cmp
mov
xor
daa
mov
pop
inc
cmc
clc
hlt
push
inc
out
xor
push
push
movsbl
push
je
cmpb
ret
cmp
ljmp
jmp
fiadds
add
pop
and
sti
jnp
lds
int
ficoml
fnstenv
call
xor
iret
divl
test
inc
in
test
adc
clc
adc
xor
sar
in
mov
lret
cmp
adc
test
in
mov
pop
cmp
gs
lcall
pop
orl
pop
inc
je
lods
adc
cmp
in
pop
lea
and
outsb
sbb
or
mov
lods
xchg
loopne
pop
aas
cld
mov
in
repnz
mov
int3
ljmp
aad
mov
xchg
ret
std
loope
pop
dec
test
imul
cmp
xor
pop
insb
lea
mov
lea
sub
xlat
push
pop
xor
aaa
les
fwait
jno
mov
lea
mov
out
jmp
add
xchg
dec
imul
iret
int
adc
dec
push
adcl
sub
push
xor
call
scas
movsb
add
popa
xor
xchg
xchg
pop
pop
add
sbb
dec
and
ret
sub
push
adc
out
push
sbbb
sti
frstor
mov
fucomip
sub
out
scas
jmp
lcall
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
div
and
push
adc
adc
adc
fcoms
aad
dec
fisttpl
xchg
lock
mov
cltd
sbb
mov
rol
fs
dec
inc
mov
stos
aad
andl
jg
mov
mov
daa
or
shld
in
icebp
push
loop
in
arpl
cmc
pusha
jno
mov
pop
cmp
inc
enter
adc
fdivs
or
jo
jge
fistps
ljmp
outsl
mov
cmp
call
rcrl
sbb
inc
jno
sbb
lret
or
in
mov
jno
sbb
sbb
and
loopne
aas
dec
inc
push
scas
dec
pop
test
jne
movsb
mov
add
ds
je
add
outsb
outsb
xor
jle
rcl
inc
enter
sahf
inc
insb
cmp
cld
xor
sahf
dec
inc
jg
fildl
ja
cmp
insl
sbb
lds
xlat
sbb
xchg
ss
mov
push
imul
pop
jo
out
lods
iret
mov
cmp
sbbl
adc
popa
add
pushf
or
push
pop
lcall
mov
jnp
adc
fsubl
sub
aad
insb
xchg
cmc
bound
and
pop
adc
nop
xor
out
scas
lcall
jg
mov
push
les
sbb
xor
jl
fldl
mov
in
aam
loop
bound
mov
fists
push
pop
loope
xorl
sbb
cmpsb
les
mov
adc
sub
jo
xchg
mov
mov
push
inc
mov
or
push
nop
mov
xchg
xchg
fimull
and
push
ficomps
jle
outsb
sbb
xor
ficompl
jecxz
ljmp
mov
lods
outsl
jmp
sbb
movsl
nop
mov
fldl
mov
cld
lods
mov
push
les
xchg
push
repnz
cmp
cmp
popf
leave
jmp
ss
cmc
int3
cmp
pop
dec
sahf
dec
and
fs
cli
pop
testl
pop
and
rcr
pop
push
push
fwait
int
and
lea
jne
imul
xchg
into
jne
imul
ja
aaa
xor
adc
and
divl
clc
adc
mov
mov
jg
and
mov
test
sti
pop
fs
in
popa
mov
mov
pop
int
adc
and
test
mov
subb
sub
pop
cltd
pop
fidivrl
sbb
push
inc
fmuls
testb
out
or
nop
sbb
pop
cmp
adc
dec
or
movsb
push
addl
daa
mov
jns
or
and
cli
mov
adc
pop
add
sbb
cmpsl
push
lods
rolb
xchg
xor
fs
enter
pop
rcrb
xor
sar
roll
stc
or
cld
xchg
lea
mov
mov
gs
lret
je
stos
in
and
inc
xchg
js
je
in
andb
mov
imull
std
push
aas
gs
out
sbb
std
jno
aam
fcmove
js
xchg
repnz
pop
pop
dec
adc
je
mov
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
jno
jl
fisubs
adc
adc
jno
xchg
adcl
adcb
or
cltd
pop
pop
jbe
sub
or
lods
cli
pop
frstor
leave
or
mov
fmul
mov
add
int
std
push
int
fdivr
cmp
loope
adc
adc
sub
add
iret
jmp
popa
sub
adc
mov
dec
or
mov
dec
and
or
out
push
lret
ja
add
push
mov
xor
dec
mov
cmc
inc
into
sub
xchg
add
ss
in
testb
xchg
mov
fstpl
stos
lret
add
sahf
dec
push
cltd
sbb
add
into
js
xchg
testb
je
sub
add
fisubs
mov
cmp
mov
sub
mull
jne
fwait
out
ds
sub
int
xchg
ja
int
and
lahf
add
loope
mov
add
push
inc
std
daa
jo
sti
into
call
insw
add
xor
mov
test
inc
jb
lock
sbb
or
call
sbb
mov
pop
xor
fwait
sub
cmpsl
xchg
mov
xor
outsb
jmp
lcall
fwait
std
and
sub
mov
lahf
mov
pusha
jmp
out
jle
jns
inc
cmc
loope
cli
and
dec
or
in
push
sub
mov
cmp
divl
out
sub
aad
cmp
sub
sbb
test
insl
popf
cmpsl
lock
adc
jl
cmp
push
push
jle
jle
jns
dec
sbb
adc
dec
movsl
xor
fbstp
shl
cld
aam
sarl
pop
adc
cmp
test
popf
dec
cmp
bound
xor
cmp
cli
lret
mov
loope
lret
lea
insl
dec
scas
pop
fwait
mov
insl
arpl
mov
icebp
mov
cs
mov
or
sub
out
call
ret
iret
addr16
push
mov
mov
sbb
xchg
ret
inc
push
outsb
xor
xchg
lcall
pop
pop
dec
cli
pop
int3
faddl
out
sbb
and
and
and
lods
cmp
mov
fcomps
sub
aam
jg
cmpsl
insl
js
dec
insl
adc
icebp
jnp
fsubp
mov
adcb
lret
push
mov
dec
mov
enter
cmp
loopne
or
sub
loopne
mov
sub
xlat
cmp
pusha
mov
gs
cmc
jnp
aaa
insl
ret
or
jge
mov
movsl
add
notb
jecxz
jmp
add
movsb
push
fs
movsb
adc
fimull
daa
push
jg
mov
mov
cmp
jmp
push
dec
mov
push
jnp
xor
out
aaa
dec
pushf
call
or
cmc
push
imul
mov
jp
sti
push
mov
mov
stos
test
cmp
pop
cmp
lret
andb
orb
push
paddd
adc
xchg
push
pop
mov
or
cmpsb
push
repnz
mov
jns,pn
ret
stos
adc
mov
stos
jo
ljmp
add
test
rcll
cmp
inc
jl
test
addr16
dec
popa
mov
scas
sub
cmp
inc
adcb
mov
pushl
adc
sub
add
int
add
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
adc
adc
xor
adc
out
je
or
jae
idiv
xor
jne
mov
sbb
insb
dec
gs
fsubs
xchg
outsb
jp
or
sbbl
dec
gs
mov
xor
pop
push
xor
push
out
xchg
mov
sahf
sbb
push
ljmp
popl
inc
test
mov
mov
adc
test
and
sbbl
js
inc
insl
mov
mov
clc
orl
mov
jb
phsubw
inc
and
je
xor
pusha
or
outsl
mov
xchg
add
mov
cmp
popa
ret
scas
adc
sti
or
pop
push
pop
or
sbb
xchg
inc
sub
dec
out
ret
cli
xchg
out
sbbb
repz
lret
test
in
movsl
fadd
mov
xor
pop
sbb
pop
sbb
clc
lea
mov
mov
cmp
subl
cmp
out
mov
or
jne
push
ljmp
push
das
loopne
comiss
pop
ret
cwtl
adc
in
mov
dec
test
mov
cs
idivb
enter
xchg
shrl
test
add
clc
cs
das
jo
in
jns
xlat
mov
sub
cmp
pop
test
inc
aam
int3
dec
sti
arpl
xor
popa
mov
push
mov
xor
jg
in
lds
in
rcrb
push
mov
jl
and
dec
xchg
or
imul
adc
xchg
inc
ja
bound
xchg
cmp
mov
or
adc
and
lea
call
imul
mov
test
insl
arpl
xor
rorl
repz
sbb
mov
fmul
xchg
enter
out
xchg
lahf
mov
and
pop
mov
push
add
or
imulb
mov
adc
in
add
ja
push
std
jp
rep
xchg
dec
daa
ds
jnp
jecxz
add
cltd
pusha
mov
test
mov
hlt
loopne
mov
xor
xor
dec
scas
test
jbe
enter
and
push
scas
stos
xlat
mov
ja
scas
xor
xchg
mov
xor
mov
idivb
scas
icebp
push
mov
add
test
cmc
mov
jmp
lods
aad
sub
mov
mov
call
add
cltd
push
or
loope
pop
inc
aaa
lret
movsl
mov
fst
pop
inc
mov
mov
jp
dec
mov
xor
jg
out
mov
inc
movsl
sbb
lods
adc
fmulp
lret
xor
out
sbb
xchg
call
stc
push
mov
jmp
and
xchg
sub
imul
pop
xor
decb
or
daa
orb
mov
lock
ds
jp
dec
loope
mov
push
stc
add
popf
sbb
iret
pop
jp
cmp
fistpl
xchg
jg
sbb
fcmovnbe
pop
ja
sub
xor
and
stc
aas
xor
mov
mov
addr16
nop
inc
lea
loop
push
inc
sub
sub
setne
shrl
mov
clc
mov
movb
mov
nop
sbb
stc
nop
data16
lcall
mov
jbe
cmp
mov
xchg
pop
push
xlat
sub
cmp
mov
xor
cltd
push
xor
inc
fadds
add
add
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
call
adc
xor
adc
push
mov
xor
mov
or
rcrl
xchg
testl
lea
inc
adc
jecxz
enter
sbb
cmp
pop
pusha
jp
movsl
bound
xchg
add
push
adc
add
pusha
adcl
pop
ss
into
lods
inc
push
sti
inc
fcomps
cltd
pop
fsubs
or
lods
jb
jns
xchg
mov
lret
jbe
push
inc
andb
and
lods
pop
pop
cmpsl
sbb
loop
in
mov
and
lea
lea
rcll
sarb
fildll
js
adc
neg
and
sbb
in
add
sub
lahf
add
jle
cltd
arpl
fldcw
stc
fsubrs
fwait
adc
xchg
sbb
push
int3
jle
mov
movsl
and
divb
je
cli
into
cli
mov
daa
sub
stos
lods
ret
aas
mov
push
out
icebp
scas
sbb
fnstenv
setle
inc
inc
pop
jb
fcom
push
add
or
cmpsb
adc
dec
cmp
mov
out
cmp
xor
ja
push
mov
cs
mov
sbb
jecxz
loopne
adc
adc
sbb
xchg
mov
pop
jbe
cmp
sarl
movsl
dec
lcall
pop
andl
push
push
sbb
or
aad
sub
lahf
enter
in
in
inc
cmp
lcall
inc
insb
mov
cmp
movl
popf
xchg
or
adc
adc
cld
mov
sub
and
mov
adc
andb
xor
push
insl
mov
dec
into
repz
jnp
decl
nop
cmpsb
inc
cli
addr16
out
mov
imul
ss
bound
jl
push
sti
fs
jecxz
orl
ja
jne
inc
scas
mov
lret
daa
add
shlb
adc
adc
jp
mov
fidivrs
mov
mov
jge
std
fldl
push
sahf
jge
pop
mov
dec
push
clc
es
in
jb
icebp
rorb
dec
shlb
ds
xor
and
push
and
xor
jecxz
push
mov
dec
dec
xchg
scas
pop
ret
aaa
bound
fcmovnb
repnz
add
add
mov
push
and
mov
in
jmp
jno
sbb
sub
xor
lods
es
and
jno
imul
xchg
jle
insb
mov
xlat
ljmp
pop
push
pop
dec
sti
push
cmpl
push
and
push
pop
bound
or
push
dec
dec
inc
mov
fmull
iret
xchg
sub
push
push
lea
or
jmp
dec
add
inc
add
and
jge
pushf
ret
push
lds
insb
mov
movsb
dec
cwtl
push
hlt
fimuls
js
xchg
jns
pop
inc
lds
lds
mov
insb
push
andl
ficomps
outsl
pop
ss
pop
addl
push
pop
mov
int3
dec
fadd
stos
cmc
jp
std
jb
lods
push
xlat
jo
jne
jge
mov
mov
xchg
push
or
nop
pop
icebp
pushf
hlt
mov
aad
shlb
popl
push
movsb
cltd
cs
out
aas
dec
xor
adc
aam
xor
sub
cmp
jno
fdivs
stos
adc
les
mov
mov
sahf
lret
push
lahf
lret
xchg
sbb
sbb
jl
xchg
cmpsl
xchg
ss
mov
hlt
or
mov
pushf
ret
jl
lods
sbb
out
push
xchg
test
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
popa
xor
xor
adc
enter
outsl
lock
xchg
mov
pop
fsubr
mov
call
fmulp
fcomp
je
mov
push
jge
int3
cwtl
loop
cmp
into
cs
mov
jge
and
and
loopne
xor
in
lret
xchg
dec
sub
sbb
jns
mov
pusha
sub
lahf
ljmp
sub
xchg
enter
cmp
inc
dec
mov
or
push
xor
and
cltd
stos
loope
adc
cwtl
call
push
mov
leave
fwait
loope
or
int3
ljmp
movsb
inc
roll
pop
addr16
sbb
inc
adc
jecxz
in
pusha
stos
sub
cmp
sub
pusha
mov
outsl
and
xchg
inc
add
decb
push
mov
mov
arpl
out
pop
mov
cwtl
xchg
int3
movsl
jbe
mov
inc
push
xor
inc
and
inc
pop
mov
add
fbld
xchg
or
pop
sbb
dec
sbb
sub
jne
or
and
nop
cmpsb
xchg
dec
loop
jb
loop
scas
in
les
add
xchg
loopne
mov
rorb
inc
cmp
rclb
pop
or
rcr
jno
mov
scas
bound
cmpsb
inc
movsb
jmp
insl
xchg
rol
lret
lret
pop
mov
jnp
dec
xchg
out
xor
out
pop
mov
out
je
ds
aad
pop
test
dec
fisttpll
jns
xchg
imul
mov
ret
mov
bound
add
and
pop
mov
lcall
in
rorl
mov
inc
sub
xlat
imul
pusha
mov
cmc
lea
cltd
inc
int
adc
or
push
inc
push
jns
push
or
cld
cmc
push
insl
popa
inc
rorb
push
mov
out
xchg
adc
stc
mov
imul
inc
je
adc
pop
test
ds
cmpb
or
pop
xchg
pop
sub
sti
stc
test
cld
dec
xchg
mov
sbb
mov
ljmp
mov
lret
lcall
sbb
mov
scas
mov
and
push
cli
sbb
ror
push
xorb
es
inc
mov
mov
in
scas
movsl
jecxz
mov
or
add
mov
xchg
mov
jecxz
into
mov
pushf
pop
daa
imul
xchg
lock
mov
popf
pop
dec
mov
jl
push
ja
mov
aad
mov
aad
lret
jne
mov
jns
ror
mov
sub
fildll
hlt
repz
jle
pop
cmc
aaa
ljmp
pop
mov
test
jmp
das
cmpsb
mov
mov
scas
fidivl
ror
add
and
xchg
gs
scas
dec
andl
lret
add
ret
inc
lds
push
mov
add
lret
jmp
stos
add
popa
mov
xlat
add
mov
getsec
rcrl
push
rolb
mov
ret
xor
sub
out
insb
outsb
shll
lret
dec
pusha
push
jg
rorl
xchg
jle
lea
nop
stc
pushf
cmp
aaa
pop
lds
stc
dec
sbb
repz
insl
xor
add
push
imul
es
sub
xor
lea
inc
push
stos
or
das
xchg
pushf
and
add
mov
test
mov
imul
jp
and
inc
dec
cmpsb
xor
cmp
jl
jl
pushf
cmp
movl
inc
mov
mov
inc
mov
sbb
adc
jmp
in
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
adc
pop
sbb
ret
push
adc
add
call
in
es
dec
mov
adc
out
mov
gs
mov
mov
pop
int3
inc
add
mov
fs
mov
mov
imul
fisubs
pop
add
push
cltd
add
gs
dec
int
or
sti
jae
pop
shl
sbb
lock
xchg
call
enter
xchg
sti
push
pop
cmp
jnp
mov
int3
cli
push
jae
clc
clc
popf
out
aam
je
test
cmp
scas
popa
rol
scas
mov
iret
out
pop
add
pause
icebp
leave
ss
mov
repnz
insb
lock
mov
mov
pop
xor
movb
add
jle
loopne
ljmp
imul
mov
das
popfw
outsl
push
sbbl
sti
ja
pop
aad
pushf
shrl
jae,pn
cmc
imul
push
out
pusha
pop
sahf
cltd
shll
shr
jne
out
cmpsl
add
xchg
popa
push
cmp
jbe
test
dec
enter
fimuls
inc
push
mov
arpl
stos
xchg
imul
fadd
pop
push
cmpsb
neg
mov
dec
pop
lods
inc
push
dec
sahf
popf
pop
scas
sub
pop
dec
jl
xor
lods
outsb
rcrl
and
ret
leave
pop
dec
lock
sbb
mov
fnstsw
mov
imul
and
inc
lret
addb
stos
out
daa
pop
xchg
testl
lods
in
jecxz
adc
subb
jg
ss
fdivr
in
hlt
pop
pop
hlt
inc
dec
push
hlt
sub
add
cmp
in
mov
xor
icebp
and
adc
pop
enter
or
jle
sbb
das
fidivs
sahf
cs
stos
outsb
jo
mov
pop
leave
mov
popa
loopne
addr16
andb
sbb
sub
sbb
insb
imul
outsl
fwait
dec
aas
pusha
pop
mov
mov
dec
sbb
andl
lret
push
sub
mov
mov
in
or
dec
stos
and
loop
popf
push
cmp
repnz
push
pop
jne
and
inc
out
mov
dec
scas
call
out
sub
out
xchg
jl
xor
cmp
mov
mov
xchg
dec
or
or
and
in
xor
fsubr
inc
jecxz
push
and
lock
sbb
seta
lods
sbb
dec
or
divb
fwait
mov
sub
adc
pop
fdivl
pop
faddl
pop
fsubl
and
dec
pop
mov
ret
jo
ret
jno
loop
push
cmp
push
sub
push
push
sbb
xorl
add
call
test
jmp
outsl
out
jecxz
xor
push
outsl
test
pop
mov
xor
loop
ret
scas
mov
inc
in
out
dec
and
or
push
dec
lret
add
int
int3
jmp
add
mov
ljmp
stos
mov
mov
test
pop
mov
out
add
lret
fsubs
jb
aas
lods
lret
or
jge
mov
aas
mov
mov
movsb
lods
xor
inc
add
xchg
fmul
jmp
loopne
scas
xor
or
pop
push
mov
lock
sub
movl
push
cmc
push
sti
in
in
imul
ja
mov
add
sti
movsb
mov
cmp
sub
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
rep
jnp
adc
xor
adc
aas
dec
stos
sbb
pushf
or
mov
or
sub
adc
outsl
out
lret
sbb
push
je
dec
or
fwait
cmpsl
sub
shr
je
cld
dec
mov
push
xor
aad
add
adc
or
adc
ds
ds
jb
aaa
sbb
cmp
adc
and
add
and
in
xchg
inc
sub
mov
dec
jo
or
sahf
and
sarl
test
sbb
cld
cmp
incl
add
xorl
mov
inc
and
jg
inc
inc
jmp
aad
adc
scas
add
shrl
cmc
out
out
leave
dec
or
mov
jg
xchg
xchg
pop
pop
add
ret
fisubrl
push
lcall
mov
jge
add
decb
jb
inc
imul
push
shl
inc
fldlg2
out
mov
loopne
fstp
xor
in
sbbl
inc
sbb
push
cmpsl
loop
fiadds
jbe
or
inc
or
inc
repnz
aam
pop
lcall
xor
adc
call
mov
in
ret
into
mov
dec
mov
add
popa
test
fcmovne
dec
outsl
xchg
movsl
cmp
divl
push
sub
push
inc
cmp
mov
movsl
add
sbb
xchg
add
imulb
push
mov
sbb
push
inc
or
mov
xchg
mov
stos
mov
dec
add
fistps
push
add
lods
nop
push
xorl
jl
and
inc
cmp
es
and
cld
cmp
xchg
sbb
daa
mov
pop
lea
fstl
ret
loope
adc
in
ret
rclb
push
mov
scas
or
aam
ret
xor
popf
test
mov
dec
inc
mov
sbb
test
sti
into
mov
jae
cmpsb
ss
cmpsl
xchg
js
jae
inc
bound
mov
sub
scas
loopne
xor
and
mov
jp
pop
xor
xor
xchg
sar
lock
fwait
and
std
mov
mov
lock
fsubs
sub
xchg
pop
ficompl
cmp
loope
mov
je
dec
adc
add
jle
scas
push
fisubrl
repnz
das
jb
scas
cmpsl
cli
push
ljmp
addr16
stos
push
xchg
mov
mov
fidivrl
addr16
pop
jnp
fucomi
xchg
jo
sbb
mov
or
loopne
sub
push
shl
aaa
test
fyl2xp1
dec
shlb
mov
dec
ret
mov
jnp
push
push
stos
int3
push
call
mov
mov
pop
test
dec
xchg
inc
clc
leave
in
lret
test
xor
xchg
lahf
mov
pop
add
pop
nop
add
cs
test
xchg
or
dec
adc
mov
jns
roll
add
jl
scas
xor
and
aad
inc
jecxz
lock
shlb
sub
hlt
aas
jp
dec
xor
adc
mov
jbe
cmp
std
jg
std
clc
adc
repnz
push
orl
popf
pop
cmc
jae
xchg
lahf
repnz
mov
cmp
xor
lds
test
jo
or
and
lret
xor
jno
pusha
out
pop
xchg
sarl
fsubr
cli
stc
call
mov
int
dec
jecxz
lock
mov
or
out
jecxz
mov
popf
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
cli
push
push
xchg
xchg
shlb
rep
out
jge
mov
les
into
fldcw
sarl
push
dec
lods
pop
sub
test
inc
xchg
push
jecxz
xor
push
mov
lock
mov
pop
in
mov
mov
into
jae
mov
inc
int3
or
fwait
pushf
imul
pop
jae
je
imul
dec
xchg
pop
arpl
xor
out
jg
in
bound
aas
je
pop
dec
jnp
xchg
rcll
jmp
test
dec
insl
imul
inc
out
sub
adc
fcmove
push
cmp
or
jg
mov
or
cltd
stos
and
sti
scas
jne
mov
insb
xor
in
sub
scas
mov
test
mov
int
dec
into
scas
pop
sub
mov
mov
ds
fwait
mov
ja
adc
xor
mov
xorb
push
icebp
gs
add
popf
rcl
mov
jnp
js
lcall
jns
fwait
cld
inc
aas
orb
ret
or
xchg
int3
das
arpl
sbbb
or
icebp
xchg
scas
cmp
sub
jno
mov
subl
mov
mov
cmp
pop
mov
push
leave
loope
jnp
xchg
lock
or
jge
push
hlt
fistpl
dec
inc
mov
hlt
aad
test
dec
cmpsl
addr16
ss
lahf
sbb
in
mov
jge
add
insl
push
xor
add
jne
jmp
pop
jg
cmp
mov
hlt
fmuls
inc
jno
ss
pop
push
loopne
js
dec
mov
or
pop
lock
mov
pop
dec
loope
outsl
xor
xor
xor
out
cmp
xor
outsl
mov
xchg
sbb
cmp
test
jl
cmp
cmp
scas
repz
adc
lock
outsl
cmc
mov
dec
lods
jb
out
test
bound
shlb
fisubl
imul
inc
add
mov
xchg
inc
cmp
movl
fdivl
cli
shrb
test
in
fstpl
je
rol
pop
in
rcrb
icebp
xchg
fildll
mov
pop
int3
mov
repnz
xchg
pop
stos
mov
pop
mov
test
popf
les
lods
lret
xor
push
xchg
jge
arpl
sbb
and
sti
xor
negl
sbb
pop
inc
add
lret
push
sub
fwait
mov
mov
mov
push
lret
xchg
sub
inc
popa
push
jns
dec
testb
loopne
xor
dec
je
inc
lcall
dec
aam
pop
stc
mov
jge
stos
int3
nop
cmp
sbb
mov
push
ret
jne
lret
lds
and
push
jne
xchg
cmp
addr16
push
dec
mov
mov
push
nop
roll
imul
push
adc
adc
jno
mov
lea
push
or
mov
insl
dec
iret
lods
push
mov
or
lret
dec
outsb
test
test
iret
dec
ret
cmpsb
cltd
cmp
push
mov
inc
inc
rorl
cmp
aad
jo
push
push
pusha
pop
jge
aad
mov
or
xchg
jae
mov
movsl
in
xchg
loop
scas
fmul
pop
mov
arpl
sub
jmp
pop
dec
lock
or
fnstcw
das
xchg
adc
cltd
imul
dec
imul
mov
mov
shrd
xor
jmp
mov
popa
lcall
jl
push
sub
adc
adc
adc
mov
add
dec
js
xor
cmpsb
and
test
out
call
xor
push
inc
push
test
mov
cwtl
in
cmp
cmpsb
testb
xchg
jb
push
adc
cltd
fidivrl
shl
and
jnp
fcmovnbe
int
in
jmp
int3
sub
sub
call
out
push
push
push
jmp
push
mov
or
cltd
and
lock
sbb
xchg
adc
lahf
ret
xlat
cmp
movsb
cmpsl
fadds
int3
dec
ja
jl
xchg
dec
mov
out
mov
push
cmpb
cs
ds
cmp
in
mov
push
xor
gs
loope
ja
sub
js
pop
insb
mov
daa
aam
pop
mov
rcl
inc
icebp
push
arpl
inc
orl
sbb
in
push
fisttps
fisttpl
movsl
dec
test
or
idiv
push
xor
xor
or
das
int
arpl
stos
rcrl
into
lods
sbb
cmp
pop
movb
jge
jo
jae
mov
cltd
xor
xchg
mov
fs
inc
idivl
push
dec
cwtl
scas
je
shr
popa
cli
in
and
pop
shll
out
scas
cmp
inc
sbb
mov
in
and
pop
notb
unpcklps
daa
and
out
sbb
rolb
xchg
fdivs
ret
andl
cmp
iret
xor
xchg
pop
mov
add
stc
shrl
sub
mov
lds
and
stos
jo
jbe
push
pop
mov
pop
loopne
ret
jl
inc
test
jnp
aam
cmp
hlt
adc
jecxz
add
lret
cs
les
adc
push
jge
or
and
flds
push
call
add
shrb
dec
iret
mov
pop
and
fnstenv
adc
mov
cli
nop
mov
xor
inc
test
push
sub
data16
adc
sbb
cmp
stos
movsb
rcr
sub
hlt
mov
jo
push
xchg
xor
dec
icebp
sub
bound
insl
cltd
out
int
and
add
lods
sub
sub
ds
jle
pop
stc
lea
mov
leave
push
imul
rolb
sub
xchg
jl
mov
aas
addr16
dec
cli
mov
loop
loop
xor
adc
pushf
jp
in
out
cmp
push
cmp
mov
xchg
add
mov
mov
mov
pop
sbb
sbb
out
clc
and
hlt
dec
into
add
or
mov
out
mov
mov
lock
dec
or
xor
dec
xlat
sub
test
cld
push
push
lock
jb
insl
dec
adc
inc
je
gs
ds
dec
pop
cmp
scas
inc
sbb
adc
pop
xchg
push
add
nop
inc
cmpsb
push
sbb
or
push
sti
lret
shr
mov
scas
sub
push
adc
filds
xor
xlat
xlat
scas
test
xor
lret
adc
xchg
shlb
mov
mov
sbb
out
sub
daa
repnz
hlt
xchg
inc
lret
cwtl
and
jmp
lcall
mov
and
inc
or
cmpsb
loop
push
xchg
jmp
and
push
and
cmp
lahf
xchg
mov
and
lods
pop
int3
pushf
push
fucomip
lock
sbb
xor
rorb
jnp
iret
gs
jb
or
lods
dec
sub
rcrb
imul
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
dec
mov
adc
movlps
imul
jbe
cmc
mov
sub
pop
pop
scas
dec
aaa
sub
movsb
pop
dec
mov
test
jg
int
cld
hlt
cmc
iret
xor
int
pop
pop
add
shlb
mov
idivl
pop
add
inc
mov
out
dec
cmpsb
xchg
mov
mov
insb
repz
stos
rcll
xchg
cld
add
or
jmp
xchg
stos
and
lea
jo
aad
pop
xchg
mov
test
adc
inc
out
ds
lods
mov
push
xchg
push
fildll
xchg
add
mov
inc
add
ss
repnz
and
jmp
lret
jo
testl
jge
mov
bound
pop
mov
test
xor
mov
jnp
add
imul
jnp
mov
das
mov
jp
mov
push
add
pop
scas
stos
pop
loope
cmp
mov
push
aas
pop
imul
cmp
test
mov
mov
xchg
mov
add
jae
and
jmp
sarb
cwtl
jmp
mov
jo
xor
dec
pop
push
imul
cmp
iret
call
js
inc
scas
fs
adc
jb
rcrb
lods
pop
popa
jecxz
add
add
mov
jb
test
fldt
daa
push
lods
xchg
add
iret
gs
testb
inc
dec
lods
sbb
push
popa
push
mov
cs
popa
dec
icebp
mov
pop
fs
push
mov
pop
or
movsl
call
sbbl
test
int
rcrl
inc
add
cmp
bound
test
pop
jecxz
ja
mov
nop
add
int3
push
xlat
fdivl
mov
jle
adc
adc
int3
loop
and
sbb
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
bound
xchg
sbb
adc
movlps
loop
loope
mov
sbb
jp
pop
add
push
popf
pop
cmp
das
dec
aad
ret
dec
pop
dec
jo
lds
xchg
and
adc
and
fmuls
jo
fdivrl
dec
imul
cmp
mov
outsb
test
stos
xor
enter
dec
sub
jo
xchg
push
xor
arpl
rclb
stos
int
pop
cwtl
mov
adc
push
mov
sbb
lods
xor
je
cwtl
loope
js
dec
icebp
icebp
shlb
fwait
pushf
sahf
outsl
lret
push
xor
push
lods
outsl
sbb
xchg
scas
fadd
dec
xor
add
sbb
mov
xchg
xchg
pop
push
dec
or
inc
dec
rorl
pop
jns
sbb
mov
pop
cs
and
das
mov
mov
lcall
push
push
mov
xlat
movsb
les
sbb
jge
jl
mov
jb
dec
je
jnp
sbb
cs
in
rolb
mov
jg
adc
shrb
popf
push
sbb
ret
sahf
sub
lret
faddp
mov
cmp
inc
cmp
push
jge
dec
insl
or
pop
divb
mov
push
in
push
sub
lea
jg
pusha
ss
clc
arpl
pop
shrd
or
inc
jae
mov
and
sbb
mov
je
ret
pop
addl
sub
scas
loope
adc
fcmovnu
mov
divps
add
xchg
jp
add
push
sbb
inc
xor
repz
jb
xor
lods
sarb
jl
push
gs
cmc
jp
leave
fdivr
add
jne
xlat
jbe
push
adc
insb
or
cmp
mov
adc
out
int3
add
mov
pop
and
push
hlt
push
fcoml
decl
mov
or
ret
inc
push
mov
movl
movl
movl
movl
mov
jmp
outsl
or
or
popa
imul
nop
js
add
pop
sbb
adc
movlps
push
xchg
xchg
loopne
mov
aas
fsubrs
in
nop
in
or
and
sbb
mov
xor
mov
push
in
movsb
adc
into
push
pop
add
inc
xor
and
imul
popf
js
loopne
and
dec
test
les
rolb
pop
repnz
cmpsb
cmp
jne
mov
sub
add
test
rcr
sti
and
inc
and
dec
xor
sub
inc
sub
ret
dec
and
movsl
scas
sbb
out
sbb
sarl
fcmovnb
dec
jne
or
sub
inc
inc
jns
mov
mov
popf
jp
test
imul
xchg
idivl
flds
jb,pt
xor
adc
pop
cmp
leave
out
sbb
iret
adc
cmp
pushf
pusha
mov
push
pop
orl
mov
inc
enter
push
fyl2xp1
dec
popf
push
addl
outsl
stos
pop
sub
into
es
jmp
subl
xor
jg
leave
ljmp
cs
mov
jnp
xlat
jp
pushf
ret
outsb
pop
jns
outsl
sub
push
jns,pt
add
rolb
and
rcrl
push
xor
or
rorl
cmp
aam
jo
pushf
jle
pop
jge
cmp
xchg
push
sub
test
insl
mov
es
push
xor
xor
fnsave
cmp
xorl
bound
cmp
dec
sub
loopne
xchg
mov
sbb
cmp
jg
push
mov
dec
movsl
lock
daa
stos
add
or
lods
jl
lds
or
mov
out
push
adc
stc
movsb
sub
jae
rclb
int
mov
fwait
mov
aaa
lahf
or
dec
and
mov
or
ret
test
ss
lret
adc
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
mov
stos
and
movlps
jbe
sbb
mov
stc
push
addb
sub
pop
ret
nop
aas
shll
xchg
leave
inc
mov
sbb
fnstcw
sub
and
sahf
insl
push
je
aaa
aaa
pop
sub
stos
xchg
fwait
call
mov
mov
out
nop
xlat
inc
call
inc
notl
stos
popf
aaa
ja
lds
movsb
data16
jge
bnd
dec
inc
push
inc
add
and
test
inc
shl
xchg
jnp
cli
jl
sbb
cld
daa
or
mov
inc
es
call
out
sub
pop
mov
push
test
add
in
mov
dec
sarl
xchg
xor
jb
and
outsl
repnz
pop
je
fxch
outsb
pop
xchg
xchg
outsl
xchg
ds
xor
mov
sub
and
mov
mov
cmpsl
mov
sbb
into
mov
inc
ficomps
flds
aas
loopne
movsl
cmp
pop
mov
sti
fnstcw
addr16
fdivrl
popf
hlt
jg
mov
jge
addr16
sarb
jns
dec
lods
or
aad
enter
int3
mov
scas
sarb
out
gs
out
adcb
test
dec
adc
adc
inc
ja
pop
arpl
pop
insb
jl
push
pop
mov
jo
adc
or
jnp
add
xchg
or
movsb
push
aad
lcall
xchg
mov
pop
stos
xor
scas
out
in
scas
fs
inc
fimuls
stos
das
xchg
mov
mov
add
aas
add
mov
sub
mov
insl
cmp
dec
stos
xchg
fs
fs
or
jns
std
out
jns
sti
fisttpll
popa
out
cltd
mov
test
fxch
sbb
loopne
jne
dec
pop
clc
fcmovb
pop
orl
cmp
push
loop
aaa
inc
xor
sldt
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
stos
pop
lods
in
adc
adc
movlps
dec
xchg
adc
testl
pop
push
lret
cwtl
outsb
mov
lahf
mov
inc
push
out
lret
out
jb
jge
xlat
roll
inc
data16
sbb
dec
movsw
xchg
in
mov
cmc
mov
and
bound
jno
loopne
or
jne
cmp
pop
add
dec
cwtd
clc
push
ret
les
and
push
into
adc
lods
add
subb
cmc
shll
cmp
and
imul
and
mov
das
xor
push
and
in
cmp
mov
push
loopne
jnp
jle
les
push
imul
faddl
fiaddl
loop
jnp
mov
push
pop
push
push
pop
gs
clc
push
jecxz
xor
push
jle
fldt
mov
push
jmp
movsl
scas
insb
arpl
jb
push
mov
call
outsb
adc
test
push
fcoms
jne
insl
pop
mov
mov
fcomps
addr16
clc
jno
xchg
hlt
sub
jge
sub
pop
lahf
mov
call
sbb
clc
es
xchg
or
inc
xor
aas
popf
xchg
fcoml
sub
into
les
dec
push
data16
push
xor
pop
pop
cs
sub
mov
dec
shr
mov
mov
jb
or
lahf
jl
xchg
loopne
mov
aam
sub
mov
fmull
dec
fs
je
stos
fmuls
andb
jbe
mov
jns
test
dec
mov
mov
in
and
pushf
push
push
dec
movsb
and
xchg
shl
mov
repz
cld
shl
jnp
es
fwait
mov
in
clc
imul
int
xor
pop
mov
push
sbb
inc
aaa
aas
adc
or
imul
fisubl
dec
in
cmp
add
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
lahf
test
xor
mov
aad
sahf
scas
stos
xchg
dec
test
sbb
xor
out
inc
mov
stc
testl
jo
mov
lahf
xlat
imul
test
pop
pop
xchg
add
hlt
inc
or
sti
lcall
sti
movsl
xchg
dec
push
add
fwait
add
xchg
jne
inc
repnz
mov
mov
push
push
xchg
pop
sarl
mov
fsts
ljmp
and
inc
idiv
mov
mov
mov
cmp
fstpt
or
mov
stos
les
std
jmp
repz
stos
push
jnp
fwait
bnd
mov
das
mov
dec
lock
mov
push
jae
xor
mov
rcrl
jno
xchg
cmpsl
xchg
call
sbb
adcb
mov
mov
loopne
mov
lea
cmp
push
loope
mov
incl
and
add
loopne
jge
movsl
or
sahf
mov
scas
jl
mov
aas
mov
ret
jge
dec
decb
pop
lea
or
fwait
xchg
testl
mov
jp
jbe
sub
repnz
add
in
mov
movsl
addb
das
out
outsl
aad
sbb
xor
in
pop
test
jle
sbb
fisubl
mov
aam
in
mov
stos
add
insb
mov
nop
mov
ret
inc
bound
popf
movswl
sub
test
es
add
and
roll
lea
mov
fcmovnb
popa
pop
xchg
xchg
push
add
dec
pop
pop
xor
mov
xchg
repz
sub
or
sarl
jbe
repz
add
sbb
pushl
lock
xchg
add
rolb
cmp
test
mov
or
int
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
movl
fmull
adc
aaa
or
test
add
or
or
mov
rcr
lods
xchg
ret
cmc
jno
cs
inc
cmp
aas
ror
xchg
pusha
xchg
and
cmp
cmpsl
cmp
fwait
xor
push
out
dec
xchg
jg
add
ret
in
add
aaa
add
fs
dec
in
cld
stos
cmpsl
rcrb
loopne
or
mov
adc
jo
cltd
adc
jne
mov
and
flds
icebp
push
or
inc
push
xlat
jno
in
scas
lea
push
test
in
push
cmp
xchg
pop
jbe
cmp
cwtl
nop
xor
jp
jp
mov
jp
mov
daa
jge
add
dec
or
mov
jb
dec
sbb
jno
cltd
test
cmp
adc
adc
push
fwait
lcall
mov
jmp
lds
add
push
xor
loop
dec
pop
fwait
push
enter
push
push
inc
cld
inc
mov
std
lods
xor
inc
pop
test
mov
pop
out
imul
shl
cmpsb
or
sub
rclb
push
sbb
xchg
jbe
out
aaa
jo
xor
movsb
xor
sbb
push
ret
lock
jmp
int3
lcall
ret
bound
sarl
add
hlt
sub
fdivrl
lds
flds
jne
mov
cmp
dec
jg
jb
icebp
frstor
push
mov
test
xor
fisttpll
sbb
push
ret
mov
data16
xor
rcrl
psllw
popl
xchg
sbb
cmpsl
or
or
daa
insl
xor
and
popf
jne
nop
mov
mov
es
xchg
in
pop
les
cltd
adc
mov
mov
or
mov
les
mov
inc
dec
data16
jbe
stc
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
movntps
lods
mov
repz
test
hlt
cmp
aad
mov
lods
movsl
xchg
es
and
inc
xor
xor
mov
testl
fiadds
sbbb
test
jae
jecxz
ret
cs
push
mov
mov
xchg
pop
xor
sbb
or
and
push
daa
mov
cmp
add
fcmove
push
xor
inc
and
test
dec
xchg
call
mov
xlat
cmp
fisttps
push
cmc
push
nop
push
divb
pop
xchg
xchg
fisttps
aad
je
movsb
dec
test
sbb
pusha
in
jle
jns
scas
cmp
dec
lcall
iret
cld
push
xor
cmpsl
stos
stc
adc
lods
jno
mov
and
inc
outsb
push
repz
pusha
push
sbb
or
fildl
mov
aam
dec
pop
or
in
repz
fdivrl
gs
ja
les
out
or
inc
sti
insl
push
or
xlat
sbb
sbb
leave
fisubrl
mov
xchg
decb
add
mov
xlat
decl
lock
test
outsl
outsb
sbb
aad
fsubr
xor
and
push
or
adc
imul
pop
bound
xchg
mov
inc
pusha
adc
in
shlb
adc
dec
adc
roll
push
int3
mov
out
shrl
cld
mov
fisubrl
std
push
dec
inc
xchg
adc
push
mov
daa
sbb
std
test
scas
sub
and
out
call
out
in
fists
push
iret
or
sbb
adc
cs
adc
out
mov
cmp
mov
jge
enter
mov
jo
jno
mov
mov
mov
inc
xlat
bswap
inc
outsb
sbb
out
mov
mov
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
xchg
add
xor
jmp
jg
jl
shll
jle
cmp
popa
shrb
xchg
leave
imul
xchg
add
sub
int
add
mov
popf
xor
scas
mov
data16
mov
lods
negb
inc
cmpl
lret
hlt
inc
rcll
inc
into
jo
pop
cwtl
fisubrl
ret
jp
fucomp
cwtl
cli
lds
mov
sub
xchg
in
in
sub
and
or
inc
xor
sub
mov
rcrl
frstor
cld
push
imul
push
fwait
mov
cmp
addr16
testl
dec
pop
mov
fnstenv
mov
jnp
push
out
xor
jo
adc
cmp
cltd
mov
inc
enter
outsb
sbb
sbb
push
mov
jg
out
push
mov
jge
mov
mov
mov
arpl
sub
sbb
push
aad
aas
cld
push
imul
xchg
out
xchg
mov
mov
adcl
cmp
shll
das
add
pusha
enter
and
xchg
stc
cwtl
scas
xchg
shr
mov
dec
push
xchg
popf
frstor
fdivr
inc
aas
pop
pop
outsb
fistps
dec
into
sti
xchg
mov
faddl
pop
in
hlt
hlt
adc
dec
jp
add
add
push
scas
roll
fistpll
mov
add
push
das
push
inc
adc
xor
int3
xchg
push
dec
lahf
imul
adc
push
jmp
mov
and
xchg
jno
dec
xchg
jl
into
push
aad
jle
imul
test
mov
mov
negl
mov
xchg
addr16
icebp
fisttpl
fldcw
loopne
pop
mov
jp
daa
mov
inc
cmpsb
cmpsb
lock
inc
or
xchg
and
mov
fildl
inc
or
ja
add
inc
or
dec
add
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
cwtl
dec
es
adc
fmull
adc
dec
psllw
adcb
mov
aas
adc
pop
scas
sbb
jbe
and
fmulp
insb
lret
mov
inc
dec
iret
jg
xor
adc
lods
fimull
jns
add
insb
mov
insl
shl
fiaddl
jns
fcompl
mov
adcl
lcall
push
mov
cmpsl
jns
and
add
dec
sbb
into
add
xchg
fldcw
pop
enter
push
dec
xchg
sub
iret
nop
add
or
xchg
mov
sahf
push
popa
lret
or
inc
lret
iret
ljmp
mov
lock
fidivrs
bound
ret
and
xchg
test
pop
aas
mov
ja
push
xchg
push
or
loop
jmp
jp
pop
shl
jecxz
lcall
jmp
sbb
push
popa
sub
sub
push
adc
mov
subl
mov
sbb
stc
dec
mov
imul
ret
arpl
xor
sbb
in
in
pop
sti
fiaddl
add
push
aad
push
inc
iret
imul
inc
and
stos
mov
adc
vxorps
dec
xorb
mov
flds
jae
sti
into
jge
lret
jg
xchg
nop
fwait
cmp
jl
mov
sti
xor
sbb
out
lret
and
in
push
cmp
pop
push
sbb
jo
ret
into
pop
cmp
pop
scas
and
mov
les
or
xchg
lcall
xor
dec
mov
dec
adc
adc
jmp
inc
push
cmpsb
out
mov
loop
in
into
mov
adc
cli
insb
clc
movsl
sbb
inc
sbb
xchg
jb
push
sbb
mov
rcl
mov
js
cmp
pushf
out
aam
jo
pop
pop
movsl
in
jae
xchg
lret
dec
stc
mov
repnz
adc
enter
stos
jp
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
mov
cli
adc
fmull
adc
sub
loop
mov
push
mov
sub
sbb
cwtl
dec
fsubrs
inc
cmpsl
in
lret
ja
jne
mov
out
push
adc
jo
enter
cmp
in
xor
lods
and
cli
or
movsb
sub
mov
shll
repz
add
jbe
fs
out
scas
inc
fldcw
push
cmpsl
mov
insl
add
cwtl
add
push
lcall
call
cmp
fucomip
lahf
xchg
shlb
mov
js
lods
mov
data16
mov
into
in
xor
outsl
or
sub
loope
jbe
pop
lret
rcrb
daa
cmc
jge
dec
sub
in
stos
aam
xchg
hlt
sub
movsb
fsubrs
lahf
psubq
out
adc
inc
aaa
add
aas
mov
sbb
mov
clc
push
cmp
imul
jle
imul
mov
add
decb
lret
add
insl
xchg
aad
loop
aas
outsb
inc
jbe
sub
pop
mov
pusha
xor
jbe
cmp
sub
mov
ret
jb
ret
push
icebp
fdivr
mov
fisubrl
inc
pop
jbe
mov
pop
cmp
or
fwait
int3
sub
mov
push
mov
cwtl
cmc
sbb
cli
repz
daa
stos
stos
insl
mov
jns
sub
mov
nop
mov
insl
out
popf
pusha
ljmp
add
or
fisttpl
inc
adc
fldenv
int3
inc
pop
je
cmpb
jae
sbb
add
push
mov
mov
jmp
mov
divl
mov
push
mov
inc
test
cmc
ret
scas
cld
daa
lea
pop
lods
out
add
loop
mov
out
sub
adc
fwait
xchg
xchg
nop
cmp
inc
push
or
xor
adc
jge
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
fcmovbe
scas
insb
notb
adc
movlps
push
loopne
xor
sub
xchg
movsl
mov
inc
mov
cmpsb
mov
dec
addr16
push
cmpsb
fs
aam
jne
out
inc
sbb
or
testb
shlb
leave
lds
cmp
daa
inc
jo
mov
cmp
xchg
xor
fisubrl
pop
loope
mov
mov
jle
fimull
out
pop
fstp
int
pop
sub
idivl
cmp
mov
jo
xchg
jns
dec
aad
jno
test
pop
push
rolb
gs
fs
add
xor
xor
jns
xchg
je
jo
data16
adc
sub
aaa
ficomps
mov
pop
xchg
push
fdivs
mov
jmp
mov
mov
push
jp
mov
ja
dec
and
int
pop
push
add
ret
xchg
mov
and
fnstsw
pop
lea
jmp
mov
imulb
outsl
push
pop
fimull
or
and
add
jno
mov
fidivs
inc
lcall
scas
es
xchg
mov
sub
test
pop
dec
out
pop
test
sti
leave
jo
mov
ret
dec
mov
cli
mov
inc
or
lcall
mov
add
sub
es
es
xchg
insb
mov
mov
pop
sbb
pushf
mov
pop
push
pop
cmp
or
mov
testl
xor
rolb
aam
idivb
and
dec
inc
add
std
mov
fildl
call
in
mov
push
cs
pop
loope
push
flds
pop
test
loop
cltd
lahf
test
sbb
repz
lcall
mov
mov
das
adc
sahf
push
enter
adc
test
negb
dec
lret
mov
xor
adc
js
xchg
sti
test
leave
xor
pop
and
and
cmc
fs
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
sti
push
ljmp
sub
aam
call
mov
or
and
push
cld
das
or
out
pop
push
loope
repnz
cmp
jp
cmpsl
mov
subb
fistps
inc
xchg
push
or
js
or
into
sub
es
repnz
sub
lds
jle
test
ret
mov
mov
xlat
loope
lods
jb
mov
xor
or
fimuls
adc
xor
rorl
out
or
out
je
pop
lret
nop
mov
adc
sbb
mov
lods
fnstenv
fisttpl
div
fldt
add
icebp
ds
ret
aas
xor
add
push
ljmp
fnstenv
repnz
push
inc
sti
pop
inc
mov
fiadds
pusha
mov
dec
jmp
jle
shrl
push
jecxz
cmpsb
jmp
jae
in
jmp
xor
dec
mov
cmp
mov
es
sub
push
sarl
mov
xchg
or
mov
sbb
stos
enter
push
ds
cmp
test
push
sub
xchg
jno
subl
in
loopne
sub
jb
push
scas
xor
mov
cmpsl
xor
mov
lcall
dec
fmuls
sbb
cli
fucomp
call
es
jae
xor
andl
lods
cmp
cmp
jns
test
and
enter
enter
pop
movsl
popf
or
mov
cmp
xchg
leave
nop
xor
cwtl
add
pusha
mov
clc
ss
jo
bound
add
stos
fs
call
andl
pusha
imul
jmp
jns
out
in
mov
xor
pop
push
std
mulb
fstl
cli
xlat
mov
pop
fsts
inc
inc
mov
and
cmp
mov
sub
in
pop
mov
sbb
add
pop
les
and
cwtl
sub
enter
xchg
add
or
movsl
scas
inc
mov
cltd
xor
test
xor
jl
push
repz
cwtl
xchg
ret
outsl
lret
lret
je
daa
fadd
decl
test
pop
mov
int3
shl
mov
xlat
arpl
mov
test
xor
lcall
outsb
pop
mov
hlt
adc
std
faddl
fidivs
lret
fbld
clc
lods
pushf
or
xchg
jmp
push
lahf
xor
out
or
xchg
call
xchg
ficomps
jecxz
inc
filds
push
or
das
and
fisubrs
arpl
push
das
sub
cli
mov
mov
int
shlw
sub
les
mov
adc
frstor
int
fistpl
and
test
int3
lret
pop
lahf
in
lret
ljmp
pop
lahf
out
int
dec
mov
xor
and
push
aad
xchg
and
sub
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
lahf
ljmp
jo
adc
shrb
sbb
lret
and
inc
add
jp
push
ret
cmc
adc
data16
fistpll
clc
lcall
pusha
mov
jg
jb,pt
cmp
adc
or
out
fcmovb
or
pop
sub
lea
clc
mov
adc
cmpsb
mov
divl
adc
mov
sub
lods
ljmp
xor
outsb
pop
dec
das
movsb
das
and
push
cld
std
lods
adc
leave
push
cs
and
xor
es
data16
scas
imul
mov
fcoms
dec
jl
loopne
out
and
stc
addr16
xchg
movsl
cmp
cmp
jae
xchg
nop
insb
push
or
flds
mov
sub
dec
loop
mov
jno
xlat
dec
xchg
in
enter
in
mov
cltd
cmp
mov
xor
into
movsb
sbb
add
inc
js
jbe
push
out
jmp
dec
mov
xchg
dec
jnp
lods
out
pop
icebp
xchg
xchg
pop
addr16
push
mov
aaa
dec
rcrb
mov
mov
push
dec
push
adc
cltd
adc
lret
dec
jb
sarb
mov
leave
bnd
fidivrs
dec
js
js
pop
sub
jmp
rorl
mov
xchg
jp
xor
mov
inc
push
pop
jg
or
lods
xor
pop
adc
enter
iret
in
int3
outsb
dec
xchg
lret
push
push
sti
fldcw
jge
and
mov
sahf
xchg
leave
mov
xor
dec
dec
lods
lahf
mov
mov
mov
xor
dec
mov
lods
addr16
call
mov
sub
or
pop
movsl
mov
shrl
rclb
jecxz
jp
jp
daa
std
mov
je
dec
out
or
roll
nop
movlps
test
clc
push
sub
inc
aam
cmp
rcl
cmp
aad
adc
lret
and
inc
stc
or
js
mov
into
inc
sbb
push
sub
mov
xchg
inc
cwtl
hlt
std
insb
nop
xchg
xchg
mov
dec
orl
cmc
xchg
dec
xchg
jmp
ljmp
nop
add
mov
imul
jo
push
int3
mov
pop
jo
inc
mov
inc
jns
jecxz
dec
das
and
lea
mov
iret
xchg
clc
xor
fistps
pop
push
dec
add
adc
cmpsb
lods
lret
and
mov
imul
scas
cmp
int3
and
pusha
cmpsl
jo
xor
xchg
lods
jp
xor
ss
push
test
shlb
pusha
stos
cwtl
insl
mov
int
or
idivl
inc
pop
scas
jmp
hlt
fcomps
inc
ss
out
pop
gs
mov
jno
stos
mov
dec
jo
js
xlat
inc
push
push
loopne
cmpsl
lret
mov
rorl
int3
cld
pop
outsb
stc
xor
push
stos
repz
in
jl
push
imul
inc
push
hlt
mov
loopne
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
int3
js
fists
adc
adc
lret
loope
outsl
les
inc
iret
adc
movsl
daa
loopne
in
sarl
out
hlt
jb
lret
stos
jae
scas
fsubr
cmp
rclb
out
adc
xor
inc
cmp
adc
cmp
and
mov
std
incb
push
fcomps
jmp
mov
gs
loop
inc
aaa
xlat
outsl
outsl
push
arpl
mov
mov
xor
outsb
sub
cmpsl
ja
lock
mov
stc
test
out
cld
push
add
test
or
xorl
xchg
test
shlb
xchg
sub
movsb
scas
enter
push
arpl
test
daa
cmpsl
popf
inc
int3
sub
pop
js,pn
bound
stc
push
mov
sti
inc
inc
xchg
fstpl
mov
enter
out
movsl
ss
movsb
or
lea
test
fldenv
jns
clc
jbe
mov
push
loopne
ret
aad
shl
aas
ss
jbe
popl
mov
clc
pop
stos
dec
ret
repz
inc
call
in
out
dec
cmp
cmc
scas
inc
jmp
xchg
std
push
outsb
mov
dec
shll
pop
and
dec
cmp
mov
xchg
sub
sahf
and
pop
push
scas
sub
out
cmp
pushf
jb
int
rcrb
int3
mov
add
inc
mov
push
pop
xchg
gs
mov
mov
push
fldenv
into
in
fsubs
es
pop
bound
sub
daa
add
incl
cld
std
iret
test
mov
xor
jl
xlat
add
sub
inc
mov
rcl
cs
data16
loope
mov
mov
cmpl
and
xchg
lahf
jmp
mov
andl
sub
arpl
sub
pop
pop
enter
nop
xor
xor
xlat
add
je
xor
push
pop
nop
dec
lcall
mov
xor
cs
fimuls
in
pop
lret
fdiv
pop
lret
and
pushf
lcall
or
sbbb
ror
add
pop
xor
xchg
xor
mov
sub
lahf
pop
xlat
pop
shll
mov
and
addr16
push
mov
test
fst
or
pop
popf
jmp
inc
out
pusha
adc
cld
jb
mov
jecxz
jae
add
jmp
mov
sub
cltd
into
lcall
jns
es
test
xor
xchg
and
ljmp
dec
test
ret
in
and
iret
adc
or
jne
ds
aam
sti
sub
iret
rolb
jmp
dec
fcoml
pop
xor
mov
out
cmp
dec
push
imul
cld
mov
aam
aam
pop
in
xchg
cmp
and
mov
int
mov
jne
ds
or
sub
adc
xorb
dec
xchg
mov
inc
aam
cmp
add
inc
cld
xor
add
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
loope
push
fstl
adc
adc
push
xor
sub
arpl
call
adc
arpl
es
mov
arpl
adc
daa
cmp
pushf
dec
ret
or
and
and
les
mov
pop
js
repz
in
ljmp
popf
mov
xorl
shr
xor
and
mov
add
sub
xchg
mov
mov
ljmp
mov
pop
sbb
mov
inc
rcrb
int
sub
fucomip
int
js
sbb
lcall
push
sbb
sub
stos
cwtl
push
add
pop
push
mov
mov
loop
pop
add
push
test
dec
adc
mov
sbb
mov
sub
dec
sub
push
and
in
imul
or
sub
xchg
in
and
or
rclb
mov
scas
aas
and
cs
scas
fsubl
or
xor
rorb
imul
add
rcrl
pop
std
out
push
lcall
mov
stos
cmp
iret
sarl
xchg
sbb
push
adc
out
mov
iret
rorb
orl
inc
nop
sbb
cmp
dec
mov
and
and
sbb
pop
push
jmp
and
out
xchg
mov
and
dec
pop
adcb
iret
mov
cltd
sbb
xchg
je
jle
push
rorl
push
pop
xchg
or
cwtl
sbb
mov
shl
test
insl
xor
sub
xor
sub
into
int3
dec
movsb
xchg
jne
add
rcrb
inc
fcmovu
inc
jo
test
xchg
ljmp
into
aad
mov
jg
xchg
jb
idivl
adc
and
dec
pop
push
xor
pushl
inc
out
testb
mov
cmc
jo
xchg
insl
mov
imul
mov
or
jl
clc
sub
adc
outsb
rorb
loop
pop
jge
fisttpll
data16
aaa
xchg
sbb
xchg
outsb
push
jne
jle
in
pop
dec
nop
rorb
out
mov
xor
cs
and
clc
inc
jns
pop
gs
inc
leave
dec
int3
mov
mov
push
subb
xor
sbb
jae
xchg
sarb
xchg
mov
pop
or
jmp
mov
out
xor
mov
ds
add
clc
mov
mov
xchg
dec
inc
push
ret
enter
push
xor
xchg
lock
sub
popf
outsb
pusha
pop
add
and
ds
lds
std
mov
xor
test
orb
xchg
xorb
mov
xchg
hlt
add
mov
repz
lds
clc
cmpl
popa
fwait
push
repz
js
in
stos
jge
movl
mov
mov
jmp
jg
inc
dec
and
cwtl
lods
sbb
mov
jo
adc
push
jno
loop
das
adc
add
imul
jne
lcall
mov
mov
jns
inc
fs
adc
pop
ret
push
sbb
in
sub
jne
sbb
xor
popf
nop
jne
cmpsl
adc
icebp
cli
clc
cmpb
or
into
ss
sub
iret
shlb
push
jge
pop
lahf
test
sahf
pop
sbb
mov
pop
or
inc
out
xchg
int
sti
jb
stos
ficoml
mov
xorl
lods
sub
popa
xor
jne
sub
push
xchg
xchg
jns
insl
in
mov
push
movsl
movsl
inc
in
or
and
mov
inc
dec
push
pop
das
addl
int
add
sub
push
repnz
mov
es
jp
pop
lret
ds
in
jl
or
sbb
dec
inc
cltd
mov
rol
and
mov
rcll
push
mov
pop
push
imulb
addr16
xchg
push
movsl
push
jnp
bound
les
xchg
pusha
add
subb
mov
jle
fimull
inc
xchg
pop
sbb
cmp
sbb
push
mov
int
movsb
jno
cld
pop
jno
outsb
je
xor
add
xlat
xchg
cmc
pop
fbstp
andl
cmpsl
scas
push
push
fldcw
outsb
cmpb
out
pop
xor
test
jl
xlat
ficomps
ffreep
adc
fwait
ljmp
out
mov
loopne
lods
dec
mov
in
int
nop
std
loop
or
shll
loopne
sub
clc
or
and
rclb
add
xchg
adcl
jg
add
icebp
cmp
ljmp
lret
repz
xchg
and
aam
sub
dec
xor
sub
es
pop
inc
jg
dec
dec
jg
psrlw
mov
dec
lods
cli
out
lods
inc
jns
or
fldenv
pop
repz
test
xor
cmpsb
jns
fldt
imul
cwtl
mov
pushf
xchg
cld
mov
mov
in
add
iret
push
fs
push
pop
mov
push
mov
out
jmp
dec
jns
int
mov
dec
mov
ljmp
pop
or
insl
jge
sbb
out
lret
and
adc
inc
dec
and
adc
js
xchg
push
jecxz
subl
push
lahf
xchg
dec
adc
and
mov
push
mov
inc
jg
sub
mov
fidivs
cmp
xchg
adc
outsl
mov
dec
lods
sahf
aas
outsb
pop
or
movsl
pop
rorb
inc
dec
scas
arpl
lea
scas
mov
gs
insl
dec
nop
arpl
and
aad
sarl
test
jno
sbb
mov
mov
fst
inc
push
push
push
and
mov
sub
ds
dec
clc
mov
xchg
pusha
stos
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
push
push
lret
lret
adc
jo
adc
call
push
sti
lret
lret
sbb
adc
stos
jae
popa
imul
dec
bound
mov
scas
pusha
incl
aas
lock
sti
dec
outsb
ret
stos
mov
cmp
movsb
jle
loop
sub
pop
push
add
je
fs
jge
jae
and
fiaddl
jo
jno
std
add
cltd
jg
jle
xchg
push
adc
inc
mov
jno
dec
mov
movsl
jge
push
loopne
movsb
mov
scas
lret
in
stos
lods
fucompp
inc
je
and
mov
arpl
sbb
xchg
iret
jmp
push
aad
push
stc
adc
xchg
test
sub
cmpsl
mov
inc
je
sti
movsl
xorb
jbe
lcall
leave
in
ds
mov
bnd
leave
repnz
mov
add
nop
mov
aas
cmp
imul
loope
iret
lds
jg
xor
inc
sbb
ljmp
arpl
ret
mov
xchg
subl
scas
insl
sar
sub
icebp
frstor
mov
in
std
and
mov
rorb
jbe
sti
mov
xor
jg
or
lods
jmp
imul
push
shlb
lret
xchg
insl
pop
add
push
pop
mov
xchg
bound
ds
jne
fs
divb
lds
gs
and
pushf
sarb
and
stos
mov
lods
daa
aad
pop
lods
pop
ss
stc
pushf
jmp
adcb
out
inc
fimuls
aam
data16
ds
xchg
and
push
mov
lea
cltd
call
arpl
hlt
add
pop
jo
lock
push
test
mov
mov
cld
xchg
ret
js
push
sub
andl
jnp
ja
dec
lcall
mov
fsub
lcall
adc
adc
sub
orl
mov
mov
mov
repnz
int3
test
xchg
testb
inc
jnp
mov
xor
dec
std
and
into
mov
mov
adc
inc
pop
cmp
ret
rorl
xchg
test
push
jns
jbe
out
sti
and
and
repnz
arpl
mov
lret
sub
hlt
mov
out
cmp
cmc
push
pusha
inc
movsl
roll
or
mov
pop
clc
test
rorl
daa
mov
mov
fbld
and
jns
roll
cmpsl
xor
sbb
sbb
push
outsl
andb
add
fwait
insb
or
int3
loop
hlt
pushf
stos
sbb
enter
xchg
or
out
sub
dec
gs
cmp
dec
mov
mov
ds
xlat
adc
test
popf
movsb
das
xchg
mov
pop
into
cmp
or
xchg
mov
push
sub
jmp
sbb
out
push
mov
pop
les
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
cmp
out
jge
sub
dec
scas
pop
pop
dec
jmp
push
cli
sub
nop
leave
cmp
loop
xor
xchg
inc
xchg
mov
cli
pop
push
mov
inc
stos
mov
dec
je
sbb
push
inc
bound
sbb
or
ljmp
in
arpl
adc
mov
mov
popa
mov
and
popf
repz
inc
fstpl
outsb
xchg
adc
int3
jle
loop
xchg
ret
xor
xor
inc
mov
decl
pusha
ja
stos
andl
fldl
mov
insb
in
mov
pop
cmp
cwtl
enter
dec
ljmp
jl
and
add
jp
add
xorb
jl
fimuls
insb
jne
sub
jmp
jmp
push
shrb
fcom
cmp
cmp
and
arpl
shrl
dec
jl
pop
mov
dec
sub
sub
pop
mov
and
adc
cmp
stos
push
jg
mov
xchg
mov
mov
pop
pop
addl
jo
cmp
in
push
ljmp
adc
adc
lods
mov
fcomps
aaa
es
mov
movsl
sbbl
or
xlat
xlat
inc
pop
dec
subl
inc
mov
test
cwtl
push
mov
jmp
lods
pop
mov
fldcw
in
pop
out
push
pop
test
rclb
fs
movsl
xlat
shl
cwtl
out
sub
mov
mov
mov
mov
pop
loope
jne
mov
mov
mov
iret
xchg
dec
push
and
pop
dec
fwait
sub
and
divl
xchg
adc
cwtl
dec
lds
adc
fimull
fmuls
cmpb
inc
aad
ret
ds
jnp
pslld
dec
insl
and
das
cmpsl
int3
movsl
outsb
dec
pop
lcall
mov
inc
insl
push
test
xchg
loope
popa
xor
dec
or
testl
fisttps
pusha
or
std
jo
leave
adc
movsl
mov
lret
mov
sub
sub
scas
stos
ja
fmull
orb
dec
test
mov
or
popa
sbb
jge
mov
adc
push
or
push
repnz
ret
outsb
pop
ret
mov
add
dec
push
pop
dec
negl
mov
push
mov
stos
inc
das
aam
and
sti
mov
mov
mov
inc
jne
out
mov
pop
lret
out
arpl
pop
inc
loopne
divb
xchg
lea
mov
sbb
adc
es
icebp
dec
xor
imulb
dec
mov
pop
pop
mov
jge
mov
mov
push
iret
xchg
or
aas
mov
loope
jl
pop
fildll
hlt
pop
ficomps
pop
and
push
mov
mov
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
pop
out
lods
mov
adc
jo
adc
sub
inc
sbb
xchg
ret
xchg
das
jnp
mov
mov
mov
call
sub
push
xlat
dec
xchg
xchg
in
jnp
inc
arpl
mov
dec
mov
roll
out
or
jp
arpl
or
pop
mov
or
add
sahf
cmpb
mov
stc
aas
sbb
push
mov
jecxz,pn
xchg
je
jo
fisttps
lret
add
shl
lret
stos
popa
mov
dec
inc
pop
insb
adc
dec
mov
or
push
testb
pop
adc
fwait
xor
jge
pop
mov
adc
in
inc
or
ja
das
lods
mov
push
dec
aam
or
insb
push
stos
jp
data16
push
aas
out
xchg
xorb
pop
inc
sbb
shrb
dec
dec
inc
lcall
cmp
cmpsl
inc
out
jo
arpl
test
popa
in
adc
je
sbb
es
loope
jl
and
or
xor
sub
pop
and
xchg
test
insb
test
push
dec
out
aam
or
xchg
les
add
jl
inc
fisubrl
cmp
lahf
jnp
mov
add
rclb
in
mov
adc
add
push
add
mov
not
icebp
hlt
loope
push
cld
mov
flds
out
or
shll
in
js
leave
pop
fs
loopne
lret
ss
ret
sbb
pusha
adc
rclb
pop
mov
inc
icebp
lret
fwait
data16
jecxz
mov
cmp
test
push
mov
jno
je
out
and
jae
jecxz
inc
lret
mov
add
mov
and
dec
cltd
push
in
cli
pop
mov
lcall
and
jb
repnz
call
aad
orb
out
dec
stos
push
pop
xor
mov
adc
rcll
or
mov
xor
or
aam
insl
or
mov
mov
jge
push
sub
int3
adc
sbb
or
add
jnp,pn
jecxz
lret
mov
gs
pop
sti
fstpt
jne
fs
fistl
jecxz
mov
outsb
xor
xor
sub
call
and
cmp
mov
bound
fst
mov
fisubl
insl
cmp
pop
mov
shr
sub
leave
add
xor
pop
ficoms
sub
or
pop
pop
or
mov
adc
dec
inc
xchg
pop
pusha
adc
mov
push
rorl
mov
imul
scas
add
xchg
sub
or
out
mov
cmp
jmp
cmp
mov
add
cmp
xor
adc
scas
and
dec
cwtl
cmp
ret
fidivrl
cmp
and
or
or
call
mov
test
cmpb
in
lret
mov
push
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
sub
adc
adc
xchg
fldenv
sbb
xchg
addb
out
sahf
cs
mov
movb
dec
pushf
insb
lret
outsb
inc
test
stos
push
and
lret
lock
pusha
ds
cmp
mov
in
in
inc
or
dec
push
mov
imulb
sahf
dec
pop
lods
lret
sub
test
sub
int3
scas
rcl
add
inc
sub
test
aam
pop
aas
lods
xor
in
add
push
iret
xor
and
sub
xor
cmpsb
adc
push
icebp
mov
xchg
adc
filds
xor
cmp
jns
mov
sahf
or
or
sub
inc
popa
dec
in
push
jbe
adc
mov
mov
imul
loop
fcmovb
sub
cmpsl
jno
pop
hlt
shll
mov
xchg
xchg
xchg
ds
mov
scas
push
ficomps
jbe
lea
in
mov
repz
lret
insl
pop
aaa
dec
insl
lods
cmp
xor
push
fcoml
in
sub
jo
xchg
leave
pop
push
ficoml
ja
das
mov
pop
push
push
and
pushf
rclb
je
subl
repz
push
paddw
pop
inc
lea
ret
dec
jecxz
and
mov
xor
jnp
lds
mov
push
or
popf
fstps
push
out
aad
push
out
test
in
add
ffree
cli
add
or
mov
xchg
or
and
fdivl
adc
mov
lcall
jmp
mov
test
lahf
sbb
sub
ja
repz
dec
add
xchg
xor
jb
jge
push
xorb
inc
pop
mov
pop
ucomiss
ret
mov
pop
jle
xor
mov
fs
mov
sbb
and
and
je
cmp
cmp
dec
pop
fucomp
jbe
cltd
mov
call
ja
or
sbb
sti
imul
jbe
test
mov
inc
std
or
jbe
rorb
dec
outsb
mov
pusha
sbbb
cmpsl
cmp
pop
into
lea
pushf
inc
negb
stc
sub
fwait
aaa
out
push
aam
xor
les
pop
mov
mov
or
cmp
mov
xor
stos
repnz
pop
es
push
icebp
mov
pusha
mov
andl
xchg
jg
cmp
fisubs
lret
jnp
ja
pop
mov
jno
scas
dec
lret
xor
jno
push
mov
popl
mov
pop
xchg
std
iret
lods
sahf
inc
js
jnp
and
jle
mov
xor
sbb
and
push
shrb
cltd
mov
jb
cld
cmp
push
and
pushf
pop
dec
jle
pop
test
lock
adc
cmp
aas
nop
push
addr16
repz
push
subl
notb
xor
add
imul
popf
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
fistpl
in
xor
imul
ja
fstps
sbb
repz
out
sub
insl
mov
push
outsl
mov
cld
xlat
popa
cli
cmp
lahf
es
int
fdivrl
add
xchg
mov
fs
stos
dec
fs
iret
pop
cmpsb
lret
adc
hlt
stos
xor
sub
xor
mov
ret
shr
push
mov
xor
fimull
cmovae
sub
leave
add
movb
filds
jp
daa
imul
call
mov
ja
mov
sbb
inc
fsts
xchg
mulb
aad
cltd
xor
es
xchg
roll
test
mov
stc
push
sub
dec
jnp
in
jecxz
sub
lock
sbb
add
inc
cmp
and
frstor
test
repnz
sbb
lret
dec
dec
sub
stos
push
stos
adc
fbstp
pop
add
popf
or
adc
repnz
push
jns
dec
sbb
xchg
imull
sub
jnp
orl
test
cmc
add
notb
iret
dec
mov
inc
rcrl
sub
adc
sarl
xor
orb
sub
out
leave
cmp
pusha
repz
sbb
mov
cli
test
inc
xor
stc
mov
dec
int3
sbb
sbb
aaa
pop
shl
pmaxsw
inc
inc
iret
ret
cmc
adc
das
cmp
insb
cmp
rcrl
xchg
es
andl
pop
dec
int
mov
mov
add
mov
fnsave
fnstsw
and
fidivrl
push
repz
add
in
pop
jmp
dec
pusha
rcrl
loop
inc
xor
lea
jnp
fs
jmp
in
mov
test
fistpll
or
mov
xchg
cmp
sub
xchg
ja
add
scas
mov
xor
ljmp
std
and
loop
ss
mov
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
rolb
imull
adc
iret
test
sbb
imul
xor
scas
cmp
jmp
adcb
out
aas
adc
dec
aam
insl
insb
inc
fdivl
imul
cmp
xchg
and
mov
scas
sub
add
or
mov
lret
daa
push
xlat
push
ret
pop
sbbl
mov
repz
insl
pop
ror
pop
push
cmp
in
mov
filds
jo
mov
cmpsl
jne
out
jmp
loop
dec
andl
es
sbb
into
cmp
rcll
pop
add
into
ss
lahf
out
mov
pop
jne
push
rcrb
jmp
mov
pop
add
mov
cmp
outsl
mov
mov
je
out
je
aas
or
push
xchg
cltd
into
shl
sub
es
sub
cltd
inc
sub
mov
stos
jne
and
popa
lock
xchg
fistpll
jno
pushf
fiaddl
jnp
add
stos
mov
mov
daa
mov
and
mov
push
aad
cmp
scas
ds
sub
in
mov
pop
xor
mov
addr16
push
inc
in
add
test
scas
lret
sub
pop
aad
push
in
test
sbb
out
mov
movaps
mov
mov
scas
or
subl
and
xchg
pusha
sti
loope,pt
bound
shlb
add
outsl
mov
pusha
addr16
repnz
mov
test
out
and
sub
sbb
mov
add
jae
aad
sbb
push
cmp
outsb
or
scas
in
jne
mov
and
mov
and
ret
in
mov
leave
or
stc
jnp
dec
pushf
ds
or
lcall
stos
mov
cmp
into
cmpsl
imul
jg
sbb
sarl
mov
mov
pop
or
cwtl
jg
cmpsl
adc
in
test
sarb
adc
add
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
test
jle
cmpsl
adc
stos
movlps
repnz
mov
dec
adc
cmpsl
xor
jl
push
add
adc
xchg
std
iret
scas
lret
jbe
xchg
inc
xchg
xchg
inc
test
lcall
sarb
addr16
movsl
and
cmp
or
mov
sbb
addr16
sbb
addr16
fsubs
mov
lds
mov
dec
mov
addr16
popa
pusha
xchg
mov
and
in
ljmp
mov
dec
push
cmpsl
sub
sbbb
repnz
aas
xor
cs
imul
xchg
test
add
adc
repnz
xchg
lahf
jle
daa
push
out
add
xchg
repnz
out
movsb
es
rol
popa
mov
mov
lahf
lahf
into
and
enter
cmp
sub
lahf
mov
and
or
out
test
jb
lret
xchg
gs
mov
xor
mov
cwtl
dec
jmp
pop
loop
push
scas
xchg
fwait
mov
ljmp
aas
inc
push
inc
pop
loope
out
or
add
mov
jle
mov
rcrl
pop
daa
out
add
inc
dec
dec
sub
mov
stos
xchg
xor
daa
sub
in
dec
cmpsb
pop
ja
xchg
jnp
xchg
stc
stc
mov
dec
mov
mov
xor
push
pop
jmp
loopne
pusha
rolb
jmp
mov
out
rol
jecxz
faddl
xor
xor
mov
lods
fwait
xchg
mov
aam
mov
mov
fisubrs
mov
nopl
push
push
shll
jnp
in
jmp
rcrl
mov
bswap
xchg
insl
aaa
repnz
add
sbb
fiaddl
outsl
scas
cmp
fsubl
lret
mov
iret
jle
cmp
aaa
xlat
bound
jg
gs
loope
je
xchg
std
pop
repnz
insl
ss
mov
sbb
fidivrl
aam
push
and
push
inc
shrb
rclb
std
jne
inc
in
adc
inc
or
and
or
inc
in
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
dec
jno
mov
stos
movlps
pushl
loop
sbb
les
mov
cmc
in
arpl
sbb
or
out
repnz
add
movsb
or
fnsave
push
cmpsl
pop
dec
sahf
insl
fidivs
add
daa
imul
shrb
mov
dec
lods
cmpsl
push
cltd
mov
mov
sbb
pop
xchg
or
jg
push
cmpsb
test
pop
scas
pop
sbb
fistps
xlat
ljmp
fcmovbe
mov
jg
push
rcll
xor
lahf
xor
pop
es
jne
xlat
sahf
push
movsl
lods
andb
call
inc
gs
xorb
add
rcrl
or
xchg
scas
add
rclb
inc
jb
rep
icebp
cwtl
xor
and
addl
faddl
and
int
and
mulb
sbb
inc
arpl
mov
xchg
notl
iret
lods
pop
je
cli
xchg
into
xchg
xchg
mov
push
imulb
sbb
and
test
inc
in
out
add
movsb
mov
xorb
sub
imul
movsl
or
inc
pop
cmc
shlb
test
movsb
insl
ds
mov
sub
jp
xchg
push
sub
inc
cltd
mov
out
ret
mov
adc
sbbl
xchg
les
stos
cs
add
cli
push
icebp
mull
fstl
mov
out
fnsave
das
stos
inc
into
repnz
lahf
sub
cmp
lods
mov
test
and
and
or
mov
jmp
aam
jb
pop
rcrb
jg
into
aas
mov
outsl
add
jnp
lds
out
jecxz
cld
cmpsl
cmc
stc
fsubr
or
sub
dec
sbb
push
ljmp
les
push
xor
jl
mov
jnp
and
sbb
xchg
outsb
iret
gs
mov
iret
add
pusha
orb
sarl
adc
xchg
je
jmp
scas
push
sbb
fsubrl
mov
testl
push
out
pop
push
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
fcoms
cmpsb
js
lahf
adc
stos
movlps
dec
fcomip
loope
mov
jo
mov
xchg
pop
mov
in
cmp
xor
loope
movsb
mov
jp
test
mov
adc
out
pop
mull
fscale
loop
sbb
mov
cmp
in
sub
xchg
xchg
into
adc
add
cltd
add
shlb
adc
push
xor
add
cmp
jae
pusha
mov
mov
xchg
popa
adcb
push
inc
cwtl
icebp
pop
jns
addr16
sbb
hlt
leave
les
pop
ret
aam
adc
add
popa
adc
mov
pop
adc
push
test
clc
push
xchg
mov
enter
cli
push
lret
push
out
inc
pop
cmp
es
mov
pop
aad
jne
mov
sub
stos
mov
test
jo
loopne
addr16
hlt
int
or
hlt
pop
shl
gs
lods
fcomps
movsl
stos
sub
fistps
repz
pop
and
adc
add
fildll
push
sbb
es
loopne
int
mov
lea
lahf
cmc
das
push
daa
sub
fldcw
add
mov
sub
popf
shrb
dec
and
mov
add
xchg
inc
push
das
xor
stc
push
push
or
xchg
inc
dec
outsl
roll
shll
sarb
hlt
imulb
inc
push
cmp
jns
add
sub
cwtl
call
or
ss
repz
adc
cmp
push
out
sbb
notl
imul
popl
repz
pop
mov
sub
cmp
jecxz
xchg
fsubs
push
xchg
std
jo
sub
sub
mov
and
test
xor
xorl
sub
sti
roll
push
sub
ucomiss
fldenv
jne
ljmp
mov
add
jns
je
aam
and
jo
mov
or
push
jmp
xchg
sbb
mov
add
mov
mov
and
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
aas
xchg
lahf
lds
push
inc
cld
xchg
jg
movsb
jmp
xchg
or
cwtl
cmpl
ja
rcll
cltd
jns
and
loope
xor
xlat
divb
inc
rcrb
test
jb
dec
xchg
adc
out
movsb
and
jbe
add
loopne
pop
sub
ficompl
lahf
decb
and
mov
push
mov
aaa
xchg
insb
ret
arpl
loopne
mul
push
ffree
jmp
and
insl
push
pop
sbb
shll
and
or
sti
out
and
stos
addr16
enter
dec
mov
lcall
or
pop
xchg
jle
loop
add
or
lret
add
sbb
arpl
xor
push
stc
aam
out
rcr
pop
fimull
dec
xor
cli
rcrl
xor
dec
xor
repnz
out
mov
outsl
lods
or
push
pushl
les
jecxz
jecxz
sbbl
mov
xor
mov
pushf
xorb
inc
hlt
stos
xor
data16
jle
fnstenv
and
sub
leave
push
fidivrl
sub
je
lret
enter
inc
lret
cld
bound
jno
or
mov
iret
jnp
adc
out
sbb
inc
enter
faddl
leave
jno
arpl
into
in
cmp
mov
cmp
sbb
xorb
add
inc
push
add
insb
xor
mov
push
sbb
cmpsb
mull
mov
jl
bound
insl
out
inc
jo
scas
add
lock
dec
jne
movl
aad
jmp
fdiv
mov
and
jle
rclb
mov
cmp
sub
test
rcll
das
xor
push
cmp
inc
mov
sub
loop
sbb
xchg
dec
std
fs
popa
xchg
or
add
ds
jb
loope
xchg
aad
leave
scas
loope
ljmp
ficompl
clc
stos
hlt
shll
mov
inc
lock
pushf
mov
jg
push
out
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
mov
jbe
insl
test
xchg
xchg
pop
cwtl
inc
mov
dec
cli
test
inc
sbbl
dec
mov
xor
mov
and
add
adc
shll
add
movsb
xchg
shrb
in
or
cmp
loope
idivl
add
xor
test
jmp
jnp
cmp
mulb
add
in
repz
xchg
stc
std
outsb
test
stos
dec
jmp
mov
cltd
test
jle
arpl
pop
les
mov
movb
test
adc
mov
inc
rcr
pop
adc
adc
push
test
in
js
inc
xchg
dec
xchg
loopne
pop
jb
adc
jecxz
add
daa
mov
cwtl
insb
xorl
sbb
push
outsl
dec
xor
rcll
mov
inc
rdpmc
idivl
movsl
sbb
or
cmp
pop
stc
sub
mov
push
push
pop
mov
jo
mov
arpl
data16
adc
test
add
inc
into
inc
aad
jge
adc
xor
loopne
insl
and
leave
std
dec
dec
vpaddusw
xchg
mov
out
out
bound
add
aas
pushf
push
adc
pop
js
mov
shll
mov
jecxz
lret
pop
lret
or
ljmp
ljmp
mov
lahf
arpl
popf
fstpt
add
std
out
mov
inc
add
loopne
ficoml
aaa
ret
adc
mov
ret
inc
pusha
nop
xchg
cmp
xchg
aaa
bswap
add
lods
int3
cmpb
insb
pop
push
xorl
scas
lret
mov
and
loope
xchg
xor
dec
pop
mov
dec
and
pop
lahf
rcr
xor
shrb
or
lds
inc
test
cmp
cmp
mov
push
xchg
cmpsl
xor
push
mov
dec
xor
push
test
aad
sub
lret
loopne
fcompl
in
and
cmc
fwait
cmp
mov
cmp
or
decl
ljmp
or
hlt
xchg
xchg
dec
stos
cmpsb
jno
pop
test
std
push
les
add
sub
scas
imul
push
dec
mov
stos
lods
mov
test
lcall
xchg
jae
jl
xor
mov
aam
push
push
ds
test
cmpsb
scas
cmc
in
sub
xchg
inc
lret
pushf
inc
int3
in
cwtl
cmp
cmpsl
sub
xchg
add
cwtl
xor
scas
clc
lahf
fs
push
sub
mov
jle
push
pushf
pop
sahf
movl
pop
rolb
or
cmp
jbe
jecxz
jp
and
or
cmp
int3
rclb
outsl
sub
xor
add
jmp
push
into
aad
adc
mov
inc
push
pop
inc
cmp
int3
xor
xchg
mov
cmp
pop
xor
das
andl
ds
movsl
push
push
fadd
sbb
insb
pop
sti
aad
es
sbb
dec
push
push
pop
test
ljmp
int3
jne
lock
int
mov
xchg
lea
jmp
divl
mov
fcoms
pop
idiv
mov
or
incl
loope
inc
mov
dec
repnz
sbb
mov
je
adc
or
mov
mov
mov
stos
cld
and
out
lcall
xor
adc
int3
lret
jnp
xchg
pusha
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
mov
adc
pop
adc
adc
rol
push
sub
pop
adc
out
nop
cmp
movsl
push
das
xchg
dec
aam
addr16
dec
jle
lcall
aad
adc
pop
repz
add
mov
push
ss
pop
jnp
movsb
fistpll
clc
out
test
sbb
nop
push
or
es
cmc
out
jmp
bound
push
xor
ret
mov
pop
mov
lea
cmp
cwtl
push
pushf
xchg
and
add
dec
movsb
das
mov
xor
lahf
je
pop
inc
filds
adc
jp
sub
lods
cs
inc
xchg
pusha
arpl
xchg
repz
and
sahf
mov
cmpsl
popf
mov
mov
cmpsl
xor
inc
pop
dec
call
mov
sbb
pop
push
and
cwtl
loope,pn
mov
mov
push
test
in
jl
jl
cmpsb
jge
in
dec
ret
push
mov
xchg
in
dec
push
inc
sarb
jl
mov
mov
sbb
pop
scas
fidivrs
stos
out
scas
jg
sub
pusha
inc
xchg
pop
inc
movsb
out
rolb
inc
adc
out
mov
push
lcall
aam
pushf
stos
adc
aaa
xchg
insl
mov
cmp
push
pushf
dec
cmp
fiadds
or
hlt
pusha
mov
add
sub
enter
enter
test
je
sahf
inc
xor
daa
cmp
sbb
int3
divb
inc
cmp
sbb
in
sub
sarl
xor
mov
into
outsl
fcmovnbe
cmc
mov
jg
fdivs
mov
sub
pop
and
push
add
into
aad
les
stc
ljmp
pushf
lods
jo
in
xlat
cmp
xchg
mov
sbb
movsb
test
xchg
dec
push
jnp
dec
aas
pop
cmp
xor
out
pushf
in
pop
mov
lcall
jle
xchg
lret
decb
inc
inc
jno
int3
fadd
bswap
divl
inc
sbb
pop
mov
mov
ret
jo
lods
scas
add
fwait
pop
clc
mov
jae
lds
fiadds
jl
jne
cmp
xchg
add
mov
push
add
out
mov
cmp
sahf
mov
test
xor
movsl
sub
mov
xor
cmp
lahf
mov
push
push
vucomisd
mov
adc
out
jecxz
dec
inc
call
sarb
add
in
xlat
cmp
inc
mov
sti
stos
lahf
lock
dec
sbb
outsb
inc
lahf
inc
movsl
add
pop
cmp
mov
push
rolb
cwtl
sub
sbb
addr16
inc
xchg
sbb
or
cld
mov
sbb
inc
cmp
aad
sbb
testb
dec
mov
mov
mov
adc
movsb
sahf
jmp
mov
lds
in
jp
dec
cmp
mov
jp
jns
ds
stos
adc
std
dec
jecxz
lret
jg
xlat
sub
push
sub
and
rolb
aas
bound
jmp
and
mov
xchg
inc
push
sbb
rcl
fmul
jne
push
adc
cmp
ds
adc
es
or
aad
cli
jb
negb
or
push
xor
ret
repnz
push
ljmp
pop
leave
push
movsb
jae
rorl
sbb
fsubrl
movsb
sbb
mov
or
pop
lcall
icebp
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
push
or
and
adc
out
movb
xor
xor
adc
pop
mov
cmp
inc
add
lret
xchg
push
inc
sbb
movsb
dec
in
addr16
xchg
or
es
adc
loop
int
mov
arpl
cmp
or
imul
cwtl
movsl
lds
mov
jnp
xchg
stc
out
lea
out
repnz
mov
xchg
gs
cli
adc
cmp
lods
and
repnz
in
lcall
xchg
es
pop
dec
ficoml
int
psrld
out
in
popa
jmp
mov
in
sti
lcall
inc
push
push
fs
addr16
fsub
pop
or
mov
into
jg
xchg
cmpsb
sbb
addr16
cmp
aas
push
test
xor
jae
jbe
enter
in
sub
in
test
jns
lret
xor
loope
sbb
push
cmp
nop
push
fdiv
xchg
inc
leave
jmp
in
repnz
iret
cmpsb
adc
push
push
jp
testb
mov
xorl
es
repnz
mov
push
loope
cmp
or
add
dec
adc
adc
jne
jg
sbb
push
icebp
xor
pushf
cmp
xchg
adc
jl
xchg
fsubl
push
js
imul
add
sbb
mov
jbe
ds
stos
or
or
shlb
adc
xor
or
out
jae
lods
xchg
andb
cmp
push
testl
in
imul
or
daa
or
mov
into
or
repz
fiaddl
inc
lods
std
and
jne
xchg
shlb
xchg
xor
sbb
das
sahf
dec
xchg
fiadds
lods
pop
push
fdivp
xchg
jno
out
cmpsb
cltd
or
sub
mov
mov
mov
outsb
jl
insl
leave
jnp
mov
mov
pusha
cmp
pop
into
adcl
shll
in
lret
mov
aaa
cmp
lods
loop
out
rorb
fyl2xp1
mov
cmp
xor
pusha
cmpsl
xorb
dec
inc
shll
ret
test
pop
sub
ror
js
ret
sahf
ficoml
hlt
enter
inc
xchg
push
adc
adc
pop
in
pushf
lea
movsb
pop
xchg
sti
lods
xor
dec
fs
scas
aaa
lahf
sbb
mov
je
push
cmp
cmpsb
loopne
in
sbb
js
popf
cmp
insb
adc
cs
cli
test
push
push
jmp
hlt
add
fcoms
mov
jmp
daa
rcll
fwait
orl
into
xor
push
montmul
cmpsb
test
ljmp
or
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
sbb
out
stc
pop
xchg
pop
xor
int3
mov
jbe
xchg
mov
testb
daa
sbb
aas
jecxz
and
subb
scas
sbb
dec
hlt
iret
xor
sbb
jo
sub
mov
dec
cs
les
jge
xchg
in
dec
aas
test
adcl
inc
add
push
pop
popf
or
inc
int
ficoms
mov
mov
push
sub
mov
and
stos
cmc
mov
pushf
pushf
inc
jne
sbb
stos
push
icebp
sbb
xchg
in
mov
jmp
aad
rorl
jnp
or
int3
jb
mov
arpl
je
jne
cs
and
popf
adc
cmpsb
shl
int3
pop
es
xchg
inc
mov
subl
test
cwtl
mov
cmp
push
push
inc
orl
mov
and
pop
xchg
cld
sbb
pusha
push
clc
dec
push
cmp
rorb
scas
fsubrs
xchg
pop
cmp
xor
insb
cmp
sti
lds
int3
pop
and
lret
push
ret
out
jecxz
imul
inc
adc
gs
pusha
sbb
sahf
out
mov
jle
pushf
inc
dec
mov
fsubrs
cwtl
jb
sub
sub
adc
es
popa
add
or
jmp
mov
xor
jge
test
cld
dec
adc
pop
popa
and
pop
or
push
popa
push
sarl
jo
stos
aaa
jb
enter
push
pop
repz
add
adc
test
or
push
popf
pop
in
int
fs
dec
inc
arpl
mov
mov
int
sahf
mov
out
inc
xchg
mov
test
hlt
ss
fisubrs
rcrb
cmp
es
pop
mov
sub
xchg
xor
insl
cmp
in
ret
fsts
jo
push
jnp
mov
lea
mov
bnd
mov
and
cmp
or
ret
jecxz
jbe
out
in
test
push
sub
scas
ljmp
sub
jl
test
fldcw
sbb
xchg
popf
bound
mov
cmpb
aam
cmp
aaa
push
sub
push
mov
test
push
mov
cmp
fstpt
iret
faddp
into
sub
fnstsw
negb
pusha
xchg
sub
dec
lcall
popa
or
insb
mov
mov
jnp
cmp
les
outsb
aas
scas
xor
inc
lods
andl
pop
dec
jns
or
fnstcw
aad
test
lret
push
xchg
xchg
inc
je
adc
btc
push
cld
popa
nop
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
cmp
add
adc
movlps
xor
mov
inc
fildl
sbb
push
stos
cmp
push
mov
ret
push
cmp
insl
stc
jmp
aam
lret
fiadds
mov
or
cmp
sub
pop
data16
es
adc
out
out
js
mov
xor
add
mov
jns
scas
jnp
gs
pusha
loopne,pt
call
stc
jne
loope
lcall
add
push
insb
push
in
and
test
sub
gs
inc
mov
test
and
repz
in
or
push
xor
add
mov
pop
pop
xchg
sbb
in
or
pop
fnstenv
clc
inc
jecxz
gs
lsl
bound
cmp
movsb
add
mov
xchg
negb
ficomps
add
push
andb
jnp
jle
hlt
les
sub
jno
cmp
icebp
inc
outsb
xchg
push
in
and
fnstenv
cmp
push
inc
scas
pop
cmp
lods
repz
cwtl
jmp
clc
insb
cmp
push
lods
dec
xchg
leave
mov
push
jecxz
dec
gs
arpl
mov
ret
pushf
cltd
imul
mov
jp
mov
sbb
out
and
hlt
sub
test
xchg
adc
je
dec
adc
sar
adc
jge
mov
mov
adc
cwtl
push
pop
xchg
mov
enter
or
fwait
jbe
adc
sahf
les
sub
aaa
sbb
mov
jb
addr16
subl
jnp
aam
cwtl
in
test
xchg
and
jnp
jecxz
sbb
gs
fisttps
or
add
cmp
xor
test
fs
aad
push
scas
xlat
and
fdivl
xchg
enter
push
mov
test
adc
sbb
lods
jns
xchg
push
mov
div
rolb
jmp
out
outsb
shrl
mov
in
push
sarb
push
icebp
jns
dec
fwait
inc
pop
push
jle
nop
cmpsl
stos
inc
inc
pop
loope
lret
xor
fsts
fisttpl
mov
cmpsl
les
pop
int
mulb
ds
and
loop
mov
mov
mov
js
mov
in
jb
inc
mov
call
push
xor
in
jbe
test
insl
xchg
loopne
insl
scas
movsl
push
sar
mov
push
xor
add
and
and
push
sub
inc
shrb
cli
and
jecxz
outsl
jbe
clc
rorb
adc
jg
cmc
mov
loopne
in
inc
or
insb
dec
jg
pop
shlb
mov
ljmp
data16
or
xchg
sub
es
lcall
mov
adc
pop
arpl
lcall
mov
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
pop
data16
pop
jae
adc
and
xor
jmp
std
pop
out
xor
or
xor
dec
pusha
and
andb
jae
sti
in
mov
das
fs
imul
mov
push
jg
mov
pop
scas
mov
inc
ja
xlat
fcom
xlat
mov
pop
iret
or
push
in
mov
aam
push
daa
call
sbb
push
xchg
stos
adc
sub
ret
fucomip
or
adc
add
inc
jle
jge
lret
mov
inc
in
in
fsubp
mov
mov
push
dec
push
and
stos
inc
sub
popa
mulb
push
int
pop
sbb
nop
sahf
add
out
popa
jmp
insl
push
mov
out
cmp
cwtl
lock
and
sbb
pop
or
scas
adc
fisttps
xchg
fsts
push
sahf
jecxz
mov
jbe
dec
or
xchg
mov
mov
popf
mov
cmp
bound
loopne
jno
mov
jle
or
arpl
xchg
outsl
repnz
add
aad
insl
std
cwtl
stos
ffreep
pop
rclb
out
mov
sbb
cmp
and
cmp
aam
jno
xor
jb
imul
add
orb
test
outsl
mov
dec
xstore-rng
cmpsl
insb
push
xor
or
sti
pop
call
repz
outsb
jno
mov
scas
aad
jbe
jne
dec
int
sarb
test
jbe
mov
std
scas
mov
insl
stos
into
and
repnz
pusha
and
mov
inc
mov
dec
aas
pop
popa
rcr
pop
mov
push
cmp
pop
ja
movsb
pop
popf
and
sbb
nop
lahf
or
out
xchg
xchg
jle
stos
sub
gs
shlb
movsb
jp
mov
xchg
jge
mov
push
loopne
xor
insb
lahf
pushf
jno
cltd
push
idivb
call
cmp
pop
jbe
dec
jno,pn
and
lods
pop
mov
lods
imulb
cmp
sbb
and
ficoml
sub
add
sub
xchg
mov
test
sbb
xchg
pop
cmp
sbb
cli
jbe
cmc
sbb
fisttpll
imulb
and
or
mov
and
lcall
mov
popa
jno
fisubs
sub
rorb
mov
adc
stos
xor
subb
push
cmpsl
call
xor
xor
xchg
fwait
mov
mov
add
mov
or
lods
push
mov
mov
lds
mov
cltd
fwait
jae
dec
sub
mov
aad
pop
int
lea
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
test
outsb
sub
push
adc
repnz
jb
movsl
jno
les
shrb
jecxz
lods
in
cmc
insb
sbb
xor
push
ljmp
and
ljmp
fwait
pop
test
inc
cwtl
ljmp
shlb
aam
adc
xor
aas
push
or
shll
outsl
aas
dec
cli
pop
xor
js
push
stos
jle
and
std
sub
int3
xchg
in
cli
pop
cmp
cmp
cmp
insl
jle
orl
data16
out
fnsave
mov
xchg
dec
js
xor
and
cmc
pop
sub
add
scas
or
loopne
loopne
pop
inc
lods
mov
dec
mov
sbb
xor
aad
dec
popa
or
fadd
into
fldt
in
sbb
sub
iret
addr16
adc
push
je
daa
test
repz
adc
mov
bound
test
icebp
sub
mov
xor
mov
loopne
and
jne
stos
push
cs
jp
or
dec
mov
adc
arpl
xchg
movsl
hlt
mov
xor
and
mov
xor
sbb
cmpsb
jp
or
cmpsl
inc
sbb
pop
dec
test
imul
out
stos
mov
popa
inc
loop
xchg
push
inc
fsts
push
scas
fwait
push
movsb
ret
pop
inc
mov
xchg
mov
cmp
scas
jnp
jno
pushf
xchg
test
cmp
mov
jb
ret
cs
sub
add
fdivr
cmc
mov
lods
or
xchg
out
jecxz
push
adc
in
xchg
inc
enter
jmp
pop
pop
pop
jb
movsb
popa
outsb
push
jns
dec
hlt
mov
jmp
int3
dec
lret
adc
les
lcall
mov
push
rorb
cmp
filds
dec
jb
loope
dec
adc
rsqrtps
push
adc
jb
and
dec
jb
mov
adc
pop
dec
pop
nop
and
addb
lods
jo
xlat
mov
mov
in
insl
pop
add
and
pop
mov
mov
stc
lahf
mov
mov
popa
test
andb
loope
and
ret
mov
dec
and
sbb
push
cmp
repz
and
imul
mov
xchg
pop
test
push
fsubl
cmp
aad
scas
mov
xchg
pop
jl
fdivp
jg
pop
dec
out
loopne
std
or
fwait
push
sbb
fsub
push
inc
mov
ljmp
js
push
outsb
mov
push
popf
fisttpll
or
mov
sbb
aas
xor
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
dec
xor
lods
repz
or
jbe
xor
leave
push
inc
in
loop
lahf
and
iret
sbb
push
cli
jl
xchg
fmul
movsl
lock
mov
das
sbb
adc
pop
lods
fldl
mov
dec
je
les
leave
stos
bnd
sub
fcompl
popa
sbb
dec
repnz
stc
sub
loope
in
iret
mov
adc
sbb
adc
pop
loop
push
out
fbld
fstl
movsl
push
notb
in
jmp
in
or
add
xlat
adc
icebp
mov
sarl
stc
jnp
hlt
shlb
inc
movsb
nop
es
adc
stos
call
aad
movsl
aam
dec
push
sbb
es
mov
ret
pusha
pop
and
dec
inc
pop
push
jp
push
jecxz
dec
insl
mov
cmp
setnp
movsl
jne
mov
sub
insl
sbb
mov
jbe
jo
xchg
mov
mov
mov
das
mov
sub
inc
sbb
test
jl
adc
or
inc
repnz
pusha
pop
xchg
ja
lret
fxch
xlat
sbbb
out
cmp
xor
pop
jno
test
push
loopne
sti
jb
shll
mov
and
jmp
push
xchg
cmpsl
jns
inc
xchg
in
pop
dec
jp
pusha
sbb
cmp
xor
ja
mov
out
sbb
mov
addl
adc
push
jo
scas
sub
jle
ljmp
sahf
cltd
jo
xchg
jp
mov
movsb
mov
std
fstpl
xchg
pusha
fs
cwtl
cwtl
sti
pop
add
mov
pushf
jmp
int
mov
xor
lahf
ret
sbb
push
inc
adc
das
out
movsb
mov
addr16
mov
push
daa
mov
push
push
sub
adc
jle
adc
fwait
ret
jg
mov
push
dec
inc
fdiv
addr16
cld
movsb
popa
cmp
lds
repz
movsb
mov
inc
pushf
mov
add
inc
mov
xor
imul
sub
int
fisubl
stc
mov
xchg
ret
clc
test
pop
adcl
xchg
lods
dec
adc
cld
fs
sarl
arpl
loope
sbb
mov
in
mov
inc
iret
mov
and
jns
pop
es
xchg
pop
xchg
loope
cld
std
adc
inc
decl
add
rcrb
pop
push
subb
loop
lea
or
sub
cwtl
rcrb
xor
mov
push
shr
loope
jp
enter
lods
xor
inc
shrl
mov
pop
pop
pop
aas
xchg
insb
or
repz
sub
aaa
ss
mov
push
int
jl
lock
mov
testb
adc
fisttps
test
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
jns
shl
mov
add
adc
adc
pop
cmp
fildl
cmpsl
bnd
cmpsb
stc
jge
jl
ffreep
test
ret
jnp
mov
lea
cltd
push
push
push
cli
roll
stos
lret
mov
bound
jmp
cli
jno
cwtl
loop
xor
js
push
mov
push
fs
push
mov
xor
insl
iret
add
mov
movsl
mov
xchg
mov
repz
and
sub
arpl
adc
jns
cmp
movsb
inc
pop
adc
fimuls
repz
pop
out
xor
mov
pop
mov
imul
ljmp
push
clc
setne
test
pop
les
filds
push
mov
and
mov
push
inc
push
fwait
mov
sub
sub
mov
mov
mov
call
dec
ret
loope
cltd
push
and
sub
xchg
and
pop
pop
insb
pop
or
sbb
or
shlb
xor
adc
or
mov
push
jae
push
pop
inc
in
mov
push
iret
mov
inc
pop
fucomip
pushf
shrl
sub
xchg
mov
mov
or
stc
or
xchg
les
ds
imul
pop
xlat
test
mov
and
push
sbb
imul
pop
cltd
xor
mov
adc
ds
insb
ret
xchg
testb
loopne
ds
std
inc
insl
shl
lcall
jae
insl
clc
xor
pop
and
out
or
or
dec
pop
pushf
jno
ret
lret
stc
mov
pop
pushf
xchg
ret
xchg
xchg
test
mov
mov
xchg
dec
pushf
mov
pop
mov
pause
sub
enter
mov
call
inc
int
pop
les
aas
sub
into
sbb
stc
mov
test
xchg
notb
mov
push
loope
fxch
stos
in
ss
flds
mov
pop
imul
push
and
mov
mov
xor
and
sti
xor
pop
mov
enter
dec
imul
cwtl
cmpsl
ja
sar
enter
jl
xor
xchg
or
movsb
and
jbe
ja
addl
divb
jne
ret
jmp
out
and
jge
mov
xor
stos
add
stc
xchg
enter
out
pop
in
xchg
das
cmpsb
inc
in
cs
inc
pusha
push
sbb
incl
lahf
pop
sbb
cmc
js
orb
gs
jo
sbb
push
cld
pop
sbb
adc
test
xchg
imul
sub
stc
push
divl
testl
add
and
push
mov
push
xchg
shl
xor
jns
sbb
inc
dec
ror
cmp
push
dec
jg
mov
xchg
das
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
xchg
adc
mov
jp
adc
xlat
out
je
rorb
adc
repz
loopne
mov
fidivrl
fdivl
pop
cs
cwtl
inc
movsb
js
repnz
mov
or
enter
adc
mov
shr
jno
negb
push
xchg
imul
jne
mov
mov
pop
int3
jae
ss
arpl
lods
lds
pop
test
dec
pop
popa
pop
adc
mov
je
push
or
pop
pop
bound
push
add
enter
lea
pop
ds
push
arpl
push
jge
int
push
mov
sbb
aas
pop
push
lret
or
test
lods
ficoml
add
cmp
jge
sub
pusha
pop
push
divl
scas
pop
mov
jae
pop
jnp
rorb
add
repnz
xchg
jmp
jmp
pop
pop
mov
scas
shll
aas
imul
mov
mov
xor
outsl
aad
cmc
push
cltd
rcrb
test
jmp
mov
daa
ja
data16
imul
fistpll
xor
int
lahf
jg
repnz
cmpsl
and
je
xchg
fwait
push
mov
cmp
mov
push
mov
ret
mov
sub
fwait
ss
cmp
and
cmpb
dec
repnz
and
leave
and
std
xor
xchg
jb
out
push
cwtl
xchg
pop
mov
cmpsl
inc
shlb
mov
fstpl
or
scas
inc
fwait
dec
imul
cs
sub
subl
loope
jnp
lock
ret
hlt
ljmp
push
pop
xchg
cli
iret
sub
push
cmpsb
mov
les
sarb
int
mov
popa
push
mov
xorl
and
and
inc
push
push
inc
jno
mov
ljmp
rol
in
hlt
movl
bound
dec
adc
insb
outsb
ror
cs
aas
stos
repz
das
mov
stc
cmpsb
push
mov
jmp
shrb
mov
and
add
xchg
jmp
mov
js
mov
pop
insb
push
lret
scas
and
mov
arpl
cmc
xchg
arpl
push
dec
imul
movsb
mov
sbb
pop
lds
ret
inc
and
mov
pop
and
sbb
ret
push
jbe
das
shrb
gs
jp
jnp
fisttps
pop
call
push
in
fwait
xchg
mov
push
mov
hlt
cmpsb
adc
dec
inc
mov
pop
leave
nop
mov
sub
jb
mov
inc
mov
out
lahf
cmp
js
rcrl
jl
or
adc
bnd
ret
call
fcomip
flds
das
jmp
cltd
mov
push
enter
mov
or
int
jnp
push
sbb
jmp
arpl
aam
sti
fsub
add
rclb
ret
mov
or
popa
lret
mov
or
mov
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
pusha
mov
mov
jp
adc
daa
bound
fsubrl
repnz
or
cs
or
js
cld
fcomps
fwait
sbb
pop
bound
nop
jb
fld
ja
out
scas
ret
dec
and
xchg
ds
pop
jge
push
stc
push
fstpl
cmp
insb
test
call
mov
cmp
ror
int3
or
jmp
push
fcmove
in
sbb
mov
fisubl
jp
insl
sahf
imul
mov
je
mov
inc
fcompl
push
ret
inc
mov
pop
pop
mov
and
pop
out
mov
sub
arpl
into
aad
sbb
bound
sbb
mov
xor
mov
mov
add
in
dec
notb
mov
arpl
jmp
mov
and
xchg
inc
fs
imul
test
adc
jnp
fisttpl
ret
add
jbe
addb
faddl
mov
add
mov
sbb
fisubs
fs
rcrb
dec
imul
mov
sahf
sahf
cwtl
add
jg
inc
jbe
outsl
sahf
daa
test
sbb
pusha
sub
inc
inc
xchg
mov
notb
xchg
in
push
repnz
or
ds
push
xchg
adc
into
push
ja
push
jge
adc
fucomp
dec
rorb
ss
pop
mov
mov
popa
add
lds
fidivl
xchg
imul
sti
orb
fs
jmp
roll
dec
jnp
nop
push
xchg
mov
out
and
adc
sysenter
out
stc
jle
xchg
test
push
mov
in
out
add
inc
ret
mov
inc
cli
lret
fcom
iret
push
repnz
call
in
and
mov
sub
call
push
or
out
lret
rcr
xchg
repz
cwtl
emms
loope
cmp
mov
movsb
adc
jb
or
push
loopne
dec
popa
cmp
jae
aam
imul
mov
adc
fiaddl
mov
fsubrl
mov
mov
xchg
dec
lods
pop
out
sub
jne
sbb
xchg
lds
sbb
repnz
pop
fcoml
add
ds
int
aaa
xor
mov
ret
and
pop
pop
or
sub
push
xchg
inc
shl
inc
fnstsw
cltd
jg
pop
pop
or
clc
loope
dec
lahf
jmp
movsb
sub
sbbb
aam
fmull
rorl
loopne
int
lcall
movsl
movsl
icebp
rcrb
fimull
xlat
test
cmp
fimuls
cmp
cwtl
pushf
or
jns
stc
xor
add
pushf
out
mov
dec
xchg
xchg
inc
jmp
push
dec
icebp
and
jns
cmp
gs
lea
pop
loope
and
cwtl
fnstsw
adc
call
js
sahf
push
fmuls
jnp
add
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
js
push
adc
jp
adc
adc
loope
pop
dec
shrl
pop
jnp
push
sub
pop
out
push
inc
jo
or
imul
push
cmc
jne,pt
out
push
repnz
sub
test
arpl
pop
cmp
lret
mov
pop
fnsave
imul
and
shl
sbb
xchg
jl
sarb
lods
jnp
jae
mov
push
push
mov
cmp
mov
sahf
and
mov
sbb
jmp
push
jge
sub
push
push
and
mov
js
pop
andb
jmp
xchg
ljmp
dec
lahf
es
lret
or
scas
in
rorl
ja
sti
gs
rcll
stc
xchg
jl
xor
mov
outsb
bound
sub
sbb
shll
pop
aas
dec
xor
mov
push
pop
mov
loop
push
aas
xor
fcomps
or
mov
pop
imul
sub
lret
jmp
es
cs
jno
in
cmpsb
mov
add
sbbb
mov
or
js
sub
xchg
daa
loop
popf
pop
push
clc
xchg
mov
sbb
ljmp
sbb
sub
adcl
and
adc
dec
scas
cwtl
inc
in
jo
das
sbb
cmpsl
popf
and
in
lret
mov
clc
jmp
mov
mov
ret
ds
and
shll
icebp
movsl
dec
pop
add
dec
push
outsb
jecxz
pop
adc
or
and
fcmovu
jb
xchg
jmp
push
lret
pop
lea
insb
jle
dec
pushf
xor
outsl
cs
mov
mov
out
or
xor
mov
popa
js
xchg
dec
fnstsw
mov
jo
sub
mov
stos
pusha
pop
and
lcall
scas
and
jne
int3
loope
sub
add
repz
sbb
cltd
xchg
xchg
repz
test
rcrb
xor
mov
jbe
mov
sbb
into
mov
iret
fs
lds
mov
cmp
cmp
insb
fisttpll
inc
dec
jbe
push
inc
dec
xchg
hlt
push
pop
sub
pop
mov
cmp
xor
xor
icebp
inc
pusha
out
and
push
jmp
and
cld
shl
sub
and
sbbl
cmpsl
xchg
push
mov
jae
filds
sub
xor
sbb
in
nop
aam
cmpsb
fcomi
add
sbb
imul
enter
pop
adc
je
mov
insl
loopne
fdivrl
sub
mov
sbb
dec
in
shlb
mov
fwait
mov
dec
pop
jb
mov
add
and
jle
test
popf
mov
pop
and
mov
mov
jno
xchg
xor
mov
mov
jnp
adc
out
int
shlb
inc
inc
mov
push
and
mov
push
inc
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
push
dec
mov
lea
adc
xchg
push
call
inc
push
mov
dec
push
pop
into
cld
ret
add
push
call
out
and
insb
fsts
int
mov
mov
jb
mov
faddl
out
pop
pop
out
or
pop
mov
loop
sbb
jp
mov
xchg
xchg
jbe
hlt
mov
insl
fsubrl
daa
testb
dec
adc
test
push
inc
stos
mov
cwtl
or
push
mov
jmp
aaa
jl
sbb
ret
add
inc
push
mov
outsb
mov
scas
movsb
sub
leave
pushf
jle
loopne
les
lock
inc
xchg
push
push
sbb
adc
and
sub
and
popa
inc
bound
and
out
xor
std
inc
jns
add
sbbl
mov
cmpsb
jb
pop
icebp
int
enter
add
or
bound
pushf
in
fs
jg
push
test
into
cli
inc
inc
adc
cmp
addr16
sti
mov
fcoms
roll
pushf
add
push
sbb
pushf
lret
xchg
jecxz
xor
je
repnz
inc
pop
stc
lods
xor
xor
shrd
pop
out
cmp
movsl
lcall
adc
push
mov
jno
mov
pop
or
call
push
inc
outsl
repz
popa
pop
push
push
movsb
dec
jl
lahf
cld
fistps
mov
icebp
mov
and
dec
in
and
out
cmp
pop
mov
lods
sbb
mov
bound
test
pop
xchg
mov
add
mov
xchg
test
and
jge
adc
inc
ret
popa
daa
loopne
movsb
ret
ret
es
pop
pop
push
aaa
and
pushf
imul
push
fstpl
or
test
loop
jecxz
jp
mov
cmpl
sub
loopne
sub
pop
dec
sbb
or
loop
in
mov
jae
cmp
stos
insb
and
inc
mov
pop
loop
rorl
fwait
scas
stos
lds
fcoml
or
pop
das
fimuls
or
or
and
loopne
xchg
nop
jne
cli
lds
inc
fbstp
mov
xor
insl
in
adcl
cmp
push
sub
jge
lods
sub
bound
or
bound
aas
les
jnp
cmpsl
and
lods
add
cmc
pop
pop
mov
pop
mov
push
outsb
std
and
mov
push
mov
fs
add
jmp
xchg
mov
sub
les
loopne
adc
lea
adc
pusha
cltd
gs
popf
xor
test
fisttpl
std
outsl
push
fdivr
pop
lock
jbe
cmpsl
lret
xchg
or
or
int3
jg
push
lret
icebp
add
pop
lods
shrb
aaa
jge
mov
repz
inc
in
nop
es
mov
inc
inc
outsb
ret
shlb
sub
jns
andl
or
insb
xchg
push
and
inc
add
jl
sbb
in
and
cli
mov
sub
int3
xor
repz
or
sbb
jmp
repnz
jecxz
sub
aam
mov
sbb
in
push
es
loope
js
orb
mov
out
push
das
cmp
aaa
ret
or
fs
add
pop
or
aas
xchg
lock
jae
xor
in
push
pop
jbe
rolb
inc
dec
or
sub
test
pushf
dec
test
cmp
data16
sub
inc
addr16
mov
pop
jns
sub
push
xor
aad
rcll
or
popa
add
push
lret
push
or
hlt
popa
outsb
cli
adc
int3
cmp
sub
or
mov
ljmp
js
cmc
adc
orb
adc
fildl
dec
lcall
pushf
mov
dec
lods
out
mov
shlb
cmpsl
adc
icebp
cmp
int3
inc
rcl
dec
push
xorb
hlt
mov
jbe
and
cwtl
and
dec
push
push
adc
sub
mov
mov
pop
sarl
mov
in
fcoms
lcall
cwtl
xchg
fbld
loope
pop
or
fadds
pushf
add
int3
sub
adc
fstpl
mov
adc
fs
jmp
mov
mov
sahf
push
or
cmp
sub
push
pusha
std
adc
hlt
sbb
imull
dec
rorb
push
scas
jle
into
pop
jbe
insl
mov
jne
arpl
das
xchg
push
repnz
insl
stos
and
loopne
dec
pop
sbb
ja
jp
push
lahf
and
jg
or
adc
pop
pop
jae
insl
insl
push
mov
cli
fistpll
pop
into
jecxz
adc
aad
mov
pop
loopne
stc
inc
scas
mov
or
negl
or
or
xor
add
mov
stos
inc
outsl
nop
shl
mov
inc
stos
cmp
mov
stc
fiaddl
test
aaa
push
bound
mov
add
push
mov
scas
xor
or
xchg
inc
out
adc
pushf
or
xor
shll
pop
jae
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
scas
or
xor
hlt
aas
out
mov
scas
testl
ret
push
adc
pop
dec
dec
out
in
pop
shlb
out
or
jno
pop
adc
inc
insb
mov
faddp
pusha
lods
or
sub
imul
js
mov
or
xor
cmp
out
insb
clc
cmp
or
lea
inc
mov
insb
fmul
fucom
dec
out
lods
mov
aas
pusha
sub
or
mov
iret
dec
fstpl
popa
enter
bound
icebp
loope
out
pop
test
lods
fisubrs
xorl
add
fldt
push
sub
mov
add
adc
push
addb
icebp
xor
xor
scas
mov
addb
and
mov
push
mov
mov
mov
mov
test
jnp
lock
arpl
jmp
push
lahf
ljmp
std
leave
lods
stc
outsl
loopne
inc
dec
dec
mov
lret
divl
push
mov
inc
add
push
movsb
push
xchg
bound
scas
sahf
lds
xor
stos
mov
movsb
lods
ss
xchg
test
jne
mov
mov
fs
cmpsl
push
xchg
inc
sti
fcomps
aaa
loopne
enter
mov
dec
push
mov
fidivl
lahf
push
jmp
hlt
fwait
dec
insl
lods
sbb
shrl
aas
lods
adc
push
pop
out
mov
test
insb
aad
dec
jg
mov
and
fstl
test
pusha
sub
pushf
push
xchg
pop
jp
aam
iret
mov
xchg
adc
jb
push
nop
and
fisubrl
xor
fcmovne
out
push
enter
fwait
addr16
insl
cmpsb
int
es
xlat
lock
or
fwait
mov
sub
lods
ret
jp
frstor
sub
aam
sbb
inc
push
pop
jo
lcall
sti
xor
lret
jle
inc
jns
inc
pop
mov
in
test
jbe
lock
sti
mov
into
push
pop
fcompl
pandn
xchg
fcmove
xor
inc
fwait
xlat
orb
loope
and
inc
adc
xchg
xchg
cli
mov
xchg
push
dec
leave
push
pop
add
repnz
repnz
sub
cmp
cmp
cmc
sbb
or
sub
cmp
hlt
xchg
aad
jecxz
mov
std
stos
lods
in
stos
fwait
pop
pop
mov
mov
outsl
jbe
inc
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
adc
aaa
adc
lea
adc
fbld
call
imul
movsb
out
shlb
push
jp
jno
push
orl
dec
out
into
sub
in
insb
idiv
inc
call
repz
jae
mov
push
push
into
push
mov
dec
in
in
adc
xor
xchg
cltd
in
ret
xchg
je
sbb
jmp
lahf
es
sbb
inc
aaa
dec
pop
push
xor
xor
dec
xchg
cli
or
loopne
mov
daa
add
adc
mov
add
cmp
sarl
mov
sbb
push
ffreep
lcall
xor
lret
cwtl
xchg
xor
or
movsl
sub
push
shrb
lods
int
bound
jp
add
pop
es
mov
nop
scas
mov
or
lock
out
mov
add
adc
xor
into
pop
ljmp
pushf
aad
mov
scas
sti
or
cmp
pusha
inc
or
cmc
sbb
mov
add
or
test
lods
out
ljmp
or
cmp
adc
or
out
pop
xor
jne
in
imul
gs
add
fmull
or
push
adc
adc
pop
xchg
sahf
add
mov
test
dec
pop
cmpb
lahf
in
test
fnsave
cs
sub
out
out
repnz
and
fnstenv
xchg
sar
mov
cmc
dec
pop
pop
int3
out
or
jae
ret
push
fwait
daa
and
adc
xchg
ret
cmp
loope
insl
push
js
adc
or
decl
pop
lahf
arpl
sbb
cmp
or
stos
dec
lock
sub
mov
xor
add
nop
or
outsb
pop
jno
sbb
pop
and
pop
jp
orb
in
inc
or
sub
push
sub
adc
xor
inc
mov
popf
dec
ja
dec
dec
imul
sub
xor
inc
cmpsl
movsb
jbe
mov
mov
and
es
mov
xchg
iret
sbb
js
mov
mov
jbe
inc
scas
inc
fdivrs
sub
cwtl
xor
xlat
daa
cltd
daa
xchg
dec
insb
mov
jge
mov
les
mov
in
bound
xchg
xchg
push
mov
jl
push
sub
inc
push
jle
sub
mov
cmp
mov
push
fstpt
int3
loop
aas
push
push
test
xor
popa
xor
out
jmp
aaa
pop
das
sbb
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
adc
inc
xor
adc
lcall
les
test
lock
stos
daa
insb
mov
lret
lret
add
xor
push
arpl
jns
fistpl
enter
jo
xorb
test
test
cld
pop
les
inc
ds
gs
jmp
bound
imul
xor
sub
popa
addr16
lret
jmp
jmp
ret
ljmp
inc
int
pushl
lcall
mov
add
mov
jg
adc
cmp
addb
clc
pop
pop
pusha
jno
xor
outsb
adc
push
xchg
ds
and
rcl
mov
into
adc
push
adcb
jae
push
ss
outsl
les
cltd
sarb
xchg
or
sub
pushf
icebp
adc
scas
popa
add
insl
or
fstps
inc
hlt
cmp
int3
jb
roll
loopne
out
add
lahf
imulb
int
sub
cmp
arpl
jmp
jno
pop
int3
cmpsb
lret
out
push
stc
push
sti
dec
stc
mov
jbe
mov
or
scas
out
mov
in
stos
cld
adc
cmp
cmpsl
int
loop
mov
and
out
or
mov
xchg
xor
aaa
insl
out
popa
ja
mov
loop
loopne
outsl
mov
jmp
test
int3
comiss
push
add
xor
jo
pop
and
pop
test
mov
popf
xchg
das
pop
sbb
aaa
test
into
hlt
into
sub
inc
push
scas
ret
push
popa
shll
dec
shll
add
push
mov
dec
into
or
in
mov
jge
xor
das
inc
jge
push
or
push
dec
bound
out
fcmovnbe
mov
cmp
push
aam
sub
mov
mov
insl
test
jno
xchg
cld
aam
add
cmp
roll
or
in
test
daa
and
outsl
mov
xchg
sub
adc
fld
shrl
cwtl
cmp
sub
mov
pop
adc
loop
cmovl
and
sbb
testb
in
cmp
iret
jle
jno
lea
insb
xchg
jbe
pop
ljmp
fwait
imul
adc
pop
test
nop
enter
mov
ja
lret
ficomps
sub
fisubl
in
cltd
mov
xchg
xor
sbb
test
adc
outsb
inc
enter
in
xor
lods
lods
xor
dec
add
jbe
out
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
cli
or
lea
adc
mov
inc
ljmp
xor
dec
xor
and
inc
pop
insb
dec
cmp
sub
addr16
in
sbb
sahf
or
imul
mov
mov
mov
clc
push
ljmp
jo
cld
cmp
jnp
repnz
mov
cmp
out
or
std
mov
jmp
jo
data16
lods
sub
push
jg
and
in
dec
ficompl
push
and
rcr
outsl
xchg
pop
push
jle
xor
test
jb
push
ja
div
inc
fsubl
dec
das
jp
mov
xor
dec
or
jo
test
mov
aaa
scas
pop
mov
mov
and
movsb
jl
xchg
iret
inc
mov
je
ljmp
mov
out
arpl
cld
ja
js
cmpb
ret
lods
xchg
push
add
aas
fsts
push
sbb
bnd
mov
popl
xchg
test
xlat
lret
lea
xchg
cmp
push
pop
sbb
lock
std
scas
lahf
dec
sahf
es
lcall
inc
data16
and
mov
scas
xor
ja
dec
dec
mov
mov
test
jno
push
pushf
xchg
jl
mov
cmp
test
je
push
jecxz
cmp
mov
sub
add
shll
sbb
jge
jbe
jb
mov
push
mov
ds
lcall
push
xor
inc
dec
lret
xchg
jge
aad
adc
inc
iret
repz
push
lock
std
or
adc
dec
lret
jae
add
fisttpll
fnstcw
inc
scas
das
repnz
push
out
enter
pop
or
sbb
aam
andb
cwtl
or
repnz
jl
sarb
bound
sub
test
sub
repz
or
in
out
push
lock
mov
pop
ljmp
das
xlat
or
stos
push
insb
scas
imul
dec
mov
or
and
subl
xchg
lods
jge
popa
cmp
divl
cmp
mov
cmp
lea
call
stc
mov
jecxz
push
mov
push
aam
ja
outsl
dec
and
push
js
movsb
out
lret
cmpsl
femms
sbb
inc
and
adc
insb
es
stos
cmc
outsl
inc
mov
xor
shrb
or
hlt
outsb
mulb
mov
sbb
dec
mov
fildll
jp
cmpsb
or
mov
push
out
or
fs
in
mov
push
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
mov
push
daa
adc
lea
adc
test
xor
push
push
mov
insb
fwait
adc
insb
adc
int
mov
mov
xchg
dec
xchg
test
lock
out
jb
popl
into
ret
sub
inc
dec
in
xchg
xchg
test
add
push
inc
rolb
lods
push
inc
lea
fs
movsb
enter
push
js
or
cld
inc
aad
sti
cld
cmp
xchg
pop
cmc
scas
cld
push
outsb
or
xor
fidivs
pop
sub
mov
mov
cltd
dec
mov
cmovbe
imul
fwait
xlat
aam
mov
and
rclb
mov
sub
lds
pop
cmpsl
test
or
inc
mov
and
aad
cmp
add
or
add
dec
fstp
lods
and
add
lods
xchg
pop
dec
mov
xchg
add
push
shr
dec
shrb
loop
sub
xchg
cmp
jl
call
inc
mov
mov
fisubl
inc
rcrb
out
out
cs
mov
xor
xlat
rcrb
outsb
fbstp
push
jge
popf
jno
push
orl
jo
arpl
lahf
iret
imul
and
inc
mov
jnp
cmc
mov
or
sbb
mov
xchg
imul
pushf
lock
imul
insb
bnd
lea
and
sub
shlb
lods
sub
ja
je
jecxz
xchg
stc
add
cmp
dec
lds
rolb
imul
adc
or
and
jge
lds
into
inc
or
xor
es
mov
stos
fdivrs
lcall
fwait
lahf
dec
mov
std
inc
pop
push
popf
sbb
mov
mov
hlt
scas
jnp
loopne
shlb
test
loope
mov
lea
lods
xchg
mov
bound
aad
push
pop
jl
lcall
sbb
insb
lret
imul
cs
mov
cmp
xchg
mov
popf
mov
inc
fs
mov
pop
dec
aad
stos
mov
mov
fisttpll
sub
ds
add
movsl
popa
int
cmp
ja
mov
nop
pusha
cmp
lock
sbb
out
pop
sbb
push
push
cmp
xor
scas
cmp
int
add
stos
cs
pop
mov
aaa
scas
sbb
stc
repz
mov
sbb
sub
dec
add
lahf
jp
inc
jno
gs
xor
fsubr
stos
mov
or
sbb
fdivrs
push
xor
jmp
enter
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
jg
dec
xor
iret
xchg
leave
dec
aaa
mov
push
ficompl
cmpsl
mov
fmuls
dec
inc
sub
clc
sub
std
scas
pmuludq
inc
in
mov
pop
rcrb
sub
jl
and
sbb
add
ds
mov
imul
sbbl
das
mov
daa
test
and
enter
add
imul
dec
shll
mov
mov
leave
cmpb
sbb
mov
jns
jecxz
out
loop
xorb
jno
fcmovb
dec
mov
xor
sbbb
lds
xor
or
repnz
movsl
leave
cmpsb
fcoml
dec
insl
xchg
es
push
or
jns
ljmp
stos
imul
out
inc
adc
ja
sub
inc
sbb
mov
lods
sarb
test
or
scas
jae
test
inc
sbb
enter
push
jl
imul
insl
sarb
insb
inc
sub
std
mov
mov
mov
add
pop
mov
daa
sbb
sahf
lcall
push
mov
cmpsl
in
out
mov
pop
lea
push
lret
mov
cmp
js
sub
pop
push
sub
or
mov
in
xchg
jns
repz
mov
daa
cs
inc
adc
inc
jbe
div
dec
loopne
or
push
pushf
dec
mov
fcomps
bound
insb
addb
inc
dec
fstp
jge
lcall
repnz
int
iret
dec
imul
cmp
xchg
lahf
push
iret
xorl
inc
test
addr16
or
inc
ds
sbb
xor
xor
mov
lods
lcall
mov
cmp
inc
insb
pop
mov
aaa
mov
pop
in
pushf
mov
into
cmp
int3
loopne
lret
sub
mov
rclb
std
fstpl
jle
pop
fcmovnu
push
inc
push
in
aad
mov
inc
test
push
pop
and
loopne
in
out
mov
jg
push
xchg
push
push
mov
jbe
mov
and
lock
in
sbbb
adc
rcl
data16
cmc
push
xchg
pushf
xchg
scas
ficompl
std
xor
int3
les
mov
pop
imul
jbe
iret
cmc
push
pop
inc
sbb
sub
push
mov
pop
xor
add
xchg
fs
shrl
dec
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
jp
push
sbb
adc
mov
and
jnp
sub
sbb
fdivr
cmpsb
jecxz
push
cmp
xchg
pop
pop
fdiv
inc
xchg
fcomps
jmp
add
ret
and
xchg
sub
in
cwtl
jle
je
sub
fisubrl
mov
pushf
rclb
inc
ret
pop
or
fsts
arpl
aaa
rclb
push
mov
shll
push
shr
mov
cs
out
dec
fisubrl
push
jnp
aaa
out
and
std
push
in
pop
fidivl
pop
sub
ud2
xlat
jae
sbb
add
jcxz
sarl
xlat
ja
fs
sub
mov
or
jmp
or
lret
push
insl
repnz
shll
out
lods
dec
mov
pop
jae
movsl
imul
push
arpl
and
xchg
jne
in
daa
mov
xorb
in
cmp
aad
fldenv
jnp
scas
ljmp
mov
jno
addr16
jmp
stc
sbb
into
and
mov
frstor
jb
mov
loope
jp
xchg
pop
dec
pop
jae
je
xchg
jae
push
push
mov
loopne
sbb
out
aad
xlat
add
adc
shll
and
loope
cmp
les
inc
pop
cmp
iret
divl
adc
xlat
popa
dec
rol
jl
or
sub
jecxz
lea
mov
insl
lret
jmp
or
std
adc
stos
push
push
fcompl
shr
jne
dec
cmp
mov
sub
ror
mov
test
pop
sub
out
sarl
cltd
xor
dec
or
mov
mov
call
mull
xor
xchg
and
xor
mov
fwait
loope
movsb
add
mov
xor
cmpsl
dec
xchg
or
or
cmp
shr
push
sub
adc
in
push
out
popa
xor
or
std
or
rcrl
les
pop
pop
addr16
fs
and
cli
adc
clc
pop
pop
lods
out
mov
out
iret
mov
mov
mov
mov
inc
clc
int3
add
lock
nopl
cmc
in
mov
fwait
or
mov
cld
fadd
jg
iret
lret
int
lea
lock
sahf
push
in
insl
adc
cmp
pop
sarl
adc
xchg
push
cli
gs
add
shrl
xchg
lods
xor
or
lcall
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
lea
idivl
sbb
adc
jge,pt
jne
sti
sbb
aad
mov
jg
pop
cmpsb
push
aad
push
js
popa
sbb
lds
mov
popf
insb
jno
xchg
add
push
jae
adc
scas
psllw
lods
shll
lea
mov
repnz
and
cltd
add
jo
add
add
mov
mov
mov
enter
cs
test
lea
in
into
movsb
mov
mov
repz
mov
cmp
rcrb
mov
ret
push
cltd
lock
fst
fimuls
jmp
jmp
push
jecxz
or
inc
into
xor
add
pop
sub
adc
and
jno
xchg
pushf
addl
mov
movsb
cmpsb
push
fildl
ja
ret
sbb
jge
xor
xchg
push
cld
pop
and
sub
dec
shlb
dec
jns
ss
adc
cmpsb
mov
or
testl
loop
inc
dec
sahf
cmp
pop
aaa
aad
mov
push
sub
mov
sbb
fisubs
pop
adc
push
movsl
arpl
cmp
xor
iret
cmp
xorl
mov
pop
and
adc
or
loope
in
push
jno
xor
xor
xor
mov
xchg
inc
inc
xorb
ret
jecxz
mov
mov
into
setl
les
push
divb
pop
and
xchg
daa
mov
subb
adc
imul
and
xor
fdecstp
roll
adc
pop
in
sbb
fwait
pusha
movsb
jg
hlt
stc
int3
push
gs
scas
ret
js
daa
xchg
orb
cmc
rcrl
jl
inc
dec
cld
cs
imul
or
insb
outsl
arpl
stos
push
jbe
xor
adc
xchg
sbb
cs
xor
jb
mov
mov
movsl
shll
mov
sti
pop
inc
pusha
push
dec
or
dec
daa
sbb
leave
jnp
dec
sbb
dec
clc
pusha
inc
mov
add
xchg
jno
into
add
adcl
sbb
sub
mov
lea
decb
sbb
scas
pop
nop
pop
xchg
sub
aam
add
mov
loopne
popf
cmp
xchg
xchg
adc
nop
sbb
inc
sbb
mov
scas
or
xchg
je
xchg
iret
push
cmpsb
std
cmpsl
cmp
pop
xchg
mov
scas
aam
movswl
repz
push
stos
lahf
adc
inc
lock
ss
mov
das
mov
adc
jmp
cli
subl
fmuls
mov
iret
add
mov
cmp
shlb
mov
shrl
xchg
fwait
dec
bnd
shll
pop
sahf
adc
or
sbb
cwtl
mov
rcrl
aam
iret
add
or
lea
jns
sub
mov
lods
andl
add
sbb
insl
out
daa
cmpsb
data16
mov
cs
cmp
jmp
gs
lret
gs
in
sbb
mov
iret
ret
lahf
push
insb
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
inc
xor
aaa
unpckhps
mov
pop
scas
sbb
divl
scas
stc
sahf
dec
aad
div
or
push
xor
dec
jno
aas
mov
dec
aam
lea
cmp
adc
mov
loopne
mov
ds
xchg
cld
mov
cmp
mov
leave
mov
int
inc
addr16
incb
pusha
or
mov
sub
pop
mov
js
test
jge
sbb
push
push
xchg
push
mov
inc
mov
mov
fs
jmp
dec
stos
faddl
lea
popa
test
enter
sub
and
sbb
pushf
mov
rorl
out
cld
or
icebp
sub
inc
fucom
out
sub
cli
xchg
inc
adc
push
insb
mov
dec
mov
out
mov
sbb
push
jae
sbb
add
cmp
dec
jns
or
xor
clc
xlat
or
jno
fidivs
jp
nop
subl
aas
in
or
push
fld
cmp
lods
mov
push
dec
add
jae
iret
cmp
pusha
mov
mov
mov
xchg
pop
sbb
cmp
mov
mov
lods
cmp
lds
and
and
jl
pushf
in
inc
arpl
sbb
mov
jmp
xor
pusha
cli
ds
scas
xchg
inc
rcrb
or
mov
cld
pop
jp
xchg
cmpsb
mov
cmp
mov
push
in
or
mov
xchg
xor
mov
aam
outsl
mov
xchg
cmp
or
inc
shll
insb
in
push
cmp
jnp
and
push
cmp
aas
cmp
stos
stc
xor
mov
mov
dec
scas
push
sbb
in
mov
in
lcall
pop
cmp
test
add
stc
jbe
aad
xor
ds
xchg
adc
or
pop
push
xchg
push
or
xchg
fisttpll
rcrb
sarl
jge
push
ret
bound
into
idiv
ljmp
jbe
mov
push
outsb
loop
sub
sbb
dec
mov
call
jae
jmp
aam
mov
mov
ret
loopne
fisttpl
mov
or
jns
mov
pushf
movsl
je
xchg
dec
shlb
pop
mov
add
fnstsw
xor
repz
xor
xor
repnz
popa
sti
add
fdivl
adc
jno
xchg
aaa
xor
pop
pushf
ror
addb
inc
lahf
pushf
clc
les
mov
lahf
data16
lods
pop
lret
push
sbb
fcmovu
in
fdivr
lret
adc
xor
fsub
and
gs
ja
lds
rcrb
pop
adc
pop
push
mov
pop
aas
mov
shll
jbe
push
cmpsb
add
pop
lods
or
xchg
pushf
scas
dec
icebp
into
dec
and
mov
das
fnclex
add
jbe
cwtl
sub
je
mov
mov
call
in
ljmp
adc
ret
enter
and
cwtl
aaa
xchg
sbb
cs
fldl
pop
repz
mov
sahf
call
jle
loopne
adc
xchg
cs
jge
addr16
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
insb
filds
adc
adc
cmpsb
shlb
xchg
push
mov
hlt
cwtl
dec
cld
and
lret
cmp
jns
gs
lods
fistpll
mov
mov
mov
clc
movsl
pop
xor
pop
lods
jmp
das
jl
push
and
inc
mov
outsb
cmpsb
xchg
pop
and
cmp
mov
jnp
sbb
pop
sti
mov
out
ja
inc
sbb
hlt
and
out
or
pop
mov
add
xor
push
int
das
iret
mov
sub
rep
mov
jl
pop
sarb
jg
push
imul
pop
dec
xchg
add
js
push
jne
dec
xchg
in
nop
daa
repz
inc
mov
push
repnz
insl
icebp
js
stos
sub
sti
ficoml
jecxz
and
push
mov
ja
iret
lods
in
xorb
aaa
jb
out
in
insb
scas
les
lds
mov
mov
leave
pop
fsts
loope
cld
sbb
testb
adc
cmp
leave
xchg
push
pop
arpl
cmp
pushl
xor
mov
sahf
fidivrs
cmc
dec
js
cmp
dec
scas
std
push
loope
mov
cmp
nop
mov
or
mov
popa
pop
jg
lods
fcompl
push
ja
fcomip
push
pop
or
mov
mov
or
adc
hlt
cli
lahf
fcoms
xlat
adc
adc
mov
push
jmp
adc
add
xor
into
push
lret
fsts
and
and
and
movb
gs
push
fistpl
test
movsb
sbb
sub
in
mov
pushf
mov
dec
imull
xor
push
repnz
pop
mov
imul
xor
dec
adc
xor
push
mov
std
xor
add
insb
push
mov
icebp
jbe
inc
jle
push
xor
cmp
fsts
clc
fnstenv
push
imul
fisubl
sti
mov
push
rclb
in
pop
ret
cmc
add
orb
push
cli
pop
sub
lock
mov
or
outsl
add
ljmp
push
xor
test
pop
sub
out
dec
test
stos
cmpsl
lahf
inc
or
dec
shlb
cli
out
int3
popl
mov
lds
sbb
push
add
xor
outsl
pmaxub
insl
sbb
in
pop
shll
cmc
jmp
cmpb
push
cmp
pop
outsb
mov
ret
cs
mov
dec
inc
sbb
jnp
test
mov
push
xchg
cmc
jecxz
pop
pop
xor
icebp
hlt
repnz
cmp
decl
mov
les
fcomps
sub
rorl
mov
xchg
popa
test
shll
xor
xor
movsl
sbb
std
inc
cld
sub
mov
mov
mov
cmp
inc
mov
pop
rclb
cmp
pop
mov
loopne
mov
gs
stc
mov
idivb
in
rolb
jecxz
test
das
lods
cli
push
cmp
dec
mov
and
xor
xor
xchg
add
and
xchg
mov
cmp
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
lcall
adc
mov
sub
cld
incl
push
ficoms
add
scas
pop
outsb
out
add
inc
adc
mov
scas
push
mov
mov
mov
mov
xchg
mov
mov
xchg
lea
or
dec
mov
dec
push
push
mov
test
mov
mov
jge
fwait
ds
xor
or
out
or
insb
and
call
lock
sarb
popa
stos
adc
les
pop
pop
dec
test
cld
cltd
jecxz
call
out
ljmp
mov
or
pop
aas
mov
aam
loop
sbb
out
icebp
mov
cld
pop
popa
les
pop
jo
inc
stc
mov
enter
sbb
jle
push
xchg
inc
jbe
imul
and
cmp
sub
incb
pop
sub
xorb
mov
fstpt
push
loope
cmp
inc
stos
cmpl
aad
push
cmc
call
mov
inc
hlt
xor
lods
push
scas
fsub
out
dec
scas
adc
mov
cwtl
sahf
out
iret
mov
inc
inc
xchg
rcrb
enter
pop
push
call
imul
rol
sbb
shll
xchg
mov
jb
inc
fs
jmp
pop
jle
in
lret
lds
paddsb
or
xor
push
pusha
fxch
or
pop
pop
and
aam
data16
test
jmp
fstps
and
lods
xchg
cmp
insl
fs
xchg
je
pushf
clc
mov
xchg
dec
data16
in
ret
cmpl
xchg
ds
subl
loope
repz
cmp
inc
aaa
rclb
push
and
lock
scas
mov
ljmp
add
insb
rcrb
dec
fadds
jo
cmp
cmpsb
mov
fidivs
test
nop
loop
out
pop
push
xor
or
das
pop
mov
and
xor
cmpl
stc
lret
add
mov
xlat
push
lret
sbb
adcb
mov
xor
inc
xchg
fstpl
sahf
pop
outsl
inc
or
add
into
lahf
ret
inc
sub
fistl
cmp
or
push
ret
and
lret
dec
or
testb
push
xchg
mov
js
jns
pop
jbe
xchg
add
and
jns
lods
mov
js
es
outsl
sbb
xchg
lret
cmp
fwait
sti
adc
mov
mov
xchg
xlat
dec
jne
mov
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
sti
pop
lods
or
adc
adc
mov
mov
dec
aas
je
xor
andl
mov
mov
gs
enter
dec
mov
iret
sarl
dec
xchg
mov
mov
sbb
clc
jl
xor
call
mov
fldcw
stc
mov
mov
fwait
mov
daa
mov
add
in
sub
cmp
dec
inc
push
mov
cmc
xorb
arpl
das
mov
cmp
dec
push
xchg
xor
pop
cmp
push
dec
movsb
adc
addb
sub
cmpsl
xlat
add
imul
pop
cmpl
gs
add
inc
add
es
outsl
int
sub
cmc
adc
mov
movsl
out
cmp
cmc
push
cmp
idivb
sbb
or
inc
mov
jmp
or
inc
ret
push
lods
int
sub
mov
and
movsb
cli
and
nop
jne
scas
loopne
dec
gs
pop
arpl
add
test
or
jne
push
pop
lock
pop
pop
mov
mov
or
cmp
pop
test
or
xor
xor
mov
xchg
dec
mov
push
and
popf
pusha
ret
in
ret
ss
das
xchg
xchg
fdivs
popa
into
les
push
and
pop
sbb
int
or
cmp
push
cmp
aad
cmp
fcompl
notb
bound
dec
pop
cmp
dec
mov
jmp
cmp
pop
aas
mov
stos
popa
pop
inc
lea
xor
add
add
int3
in
scas
call
in
push
jbe
loop
pop
mov
xlat
pushf
sbb
iret
es
cld
pop
hlt
xchg
cltd
adc
in
pop
sub
repnz
loop
xchg
mov
shll
add
dec
adc
lods
dec
xor
cmp
inc
cmp
imul
test
xchg
das
xchg
xchg
xor
mov
mov
add
xchg
xchg
outsl
lods
aad
pop
addl
aad
mov
gs
push
adc
insb
sub
mov
lret
adc
and
jmp
sbb
inc
mov
pop
into
and
push
inc
xchg
test
stc
pop
push
jp
sbb
loope
and
aas
lods
mov
gs
popa
js
call
js
xor
sarb
inc
mov
faddl
arpl
xchg
insl
andl
sub
pop
sub
in
sbb
jmp
add
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
jp
insb
cmp
adc
iret
xchg
das
mov
aad
mov
cmp
repnz
testl
insb
add
jb
in
mov
pushl
mov
mov
lods
repz
dec
or
fbstp
lods
add
movsl
pop
jne
xchg
mov
adc
xor
out
stos
insb
mov
in
jno
shll
push
jne
cmp
andl
add
lds
ret
pop
in
fists
jnp
sbb
out
mov
or
mov
rolb
int
cs
mov
push
lods
fwait
pop
add
push
mov
pushf
dec
ds
neg
jecxz
xchg
bound
pop
mov
mov
fcompl
xlat
sbb
iret
pop
callw
ret
adc
lea
mov
test
dec
adc
andb
adc
lcall
jle
pop
and
scas
sarb
mov
mov
and
cmp
stos
adc
xor
sbb
pop
movsl
add
jge
xor
stc
xchg
pop
xchg
xchg
mov
jbe
int
ja
xchg
aad
fdiv
and
fdivl
add
fimuls
sbb
sub
shll
out
movsb
fisubrs
adc
scas
xor
in
outsb
cs
jbe
nop
jp
push
xor
int3
in
push
push
shl
cmp
mov
lods
xor
pushf
hlt
mov
rclb
shl
out
cltd
cmp
imul
and
pushf
adc
dec
add
inc
ficoml
out
in
xchg
loope
repnz
add
mov
sbb
aam
jecxz
shrb
int
and
rolb
arpl
in
jbe
data16
scas
pop
mov
jecxz
pop
mov
ret
xor
mov
pushf
dec
popf
aad
push
lcall
lret
inc
push
mov
inc
aam
dec
jnp
fistpll
add
cmp
add
std
inc
ret
push
mov
dec
or
cmp
dec
and
sti
jns
push
and
push
mov
jecxz
enter
shll
push
mov
jb
mov
jle
push
sahf
cmp
mov
cmp
mov
pop
rol
hlt
jmp
inc
stos
push
fwait
iret
out
scas
enter
dec
mov
nop
push
popf
mov
pop
mov
bound
and
fisttpll
icebp
push
inc
fidivs
sub
cmpsb
xchg
xchg
sahf
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
jg
push
out
adc
adc
cmpsl
out
sbb
xor
nop
sub
cwtl
mov
scas
fcmovnb
andl
jmp
ljmp
sarl
push
mov
icebp
mov
push
cmp
adc
lahf
mov
ljmp
pop
std
sub
mov
ret
fstps
adc
cmp
xlat
lret
inc
jo
fmull
adc
sarb
inc
mov
mov
data16
inc
adc
and
mov
xlat
inc
dec
dec
test
dec
cbtw
mov
cmp
addl
lock
and
or
push
push
mov
cmp
sarl
outsl
dec
fmuls
add
sbb
inc
test
jno,pn
mov
jno
and
aaa
dec
push
xchg
mov
adc
insl
mov
xor
ss
or
jle
sub
cltd
or
push
fldt
sbb
setno
flds
lret
xchg
mov
adc
fldt
popa
bound
insb
mov
dec
mov
daa
and
adc
aas
es
pop
or
test
in
push
inc
insl
lods
xchg
arpl
and
out
subl
mov
imul
std
mov
dec
mov
iret
arpl
mov
js
addl
icebp
sub
neg
mov
mov
adc
adc
mov
fwait
repz
push
mov
fists
es
lods
jp
pop
or
pushf
xor
adc
adc
les
jno
and
add
adc
rclb
test
lds
arpl
inc
dec
xchg
js
or
jo
mov
mov
sub
mov
cmp
sbb
dec
mov
mov
popa
std
es
idivl
jp
adc
mov
fwait
jl
jp
aam
push
loope
outsb
je
mov
popf
and
pop
mov
mov
test
mov
dec
mov
xchg
sti
gs
jbe
inc
and
push
sahf
fadds
xor
push
fwait
sub
push
pop
stos
sbb
xchg
ss
aaa
mov
test
add
inc
sub
adc
rorl
and
jp
repnz
fimull
cmpb
sbb
hlt
fbld
nop
sbb
inc
mov
push
ja
popa
jae
mov
push
iret
dec
adc
mov
pop
jmp
inc
and
pushf
jnp
add
inc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
pop
test
adc
adc
xchg
subl
mov
cld
add
das
inc
sbb
arpl
lock
xor
insl
arpl
mov
hlt
and
push
mov
aaa
sub
add
push
mov
mov
adcb
mov
sbb
push
out
ljmp
sbb
inc
xor
fsin
andb
fcomip
movsl
nop
push
hlt
mov
jo
xchg
stc
push
jp
pop
testb
jecxz
ret
lret
mov
stos
sbb
inc
mov
add
jo
and
mov
sbb
hlt
pop
xchg
in
cmp
arpl
test
pop
cmp
ja
rcll
mov
xor
jnp
fcmovbe
stos
into
das
xchg
cmp
js
cs
cmpsb
jo
lcall
cmpsl
fcompl
idivl
shlb
sub
fs
pop
into
pop
rcrb
fiaddl
mov
std
flds
cmp
xor
test
xor
cmp
mov
fldl
and
mov
fisttpl
and
jbe
mov
sub
iret
push
adc
and
and
mov
sarl
in
rcrb
call
sub
orb
aad
sbb
imull
sbb
iret
pop
adc
mov
pop
negb
in
sbbl
mov
dec
inc
inc
lahf
xor
mov
fsubs
ret
add
jle
es
xchg
test
push
adc
stos
outsb
jmp
sub
in
popf
ret
sub
fwait
push
lods
and
add
inc
cmp
scas
repnz
sub
insb
nop
push
leave
jl
mov
jle
in
cmp
lock
jecxz
aaa
negb
inc
fs
jge
inc
push
cld
xchg
cmpsl
push
mov
js
xchg
mov
jno
jnp
sbb
dec
fidivs
paddusw
mov
jo
dec
cmp
pop
std
out
mov
cli
sbb
negb
mov
jecxz
sbbl
cmp
mov
adc
loopne
push
pop
jbe
lock
push
inc
and
icebp
lds
dec
cmpsl
movntq
sbb
repz
mov
mov
inc
jno
mov
push
lcall
imul
and
cmp
stc
popf
test
hlt
mov
add
inc
and
mov
jg
ret
add
xchg
movsl
pop
imul
or
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
lcall
adc
enter
xlat
mov
push
test
loop
rclb
fdivl
sub
pop
ret
lahf
jns
xor
xor
in
sub
dec
rorl
lret
or
imul
movsl
and
or
or
pop
sbb
fbstp
sub
sti
jae
test
jle
movsl
lahf
popf
mov
call
mov
aas
sub
or
mov
xchg
add
sub
inc
fwait
pop
fisubrs
dec
adc
in
cmp
js
or
ficoml
ret
push
in
and
push
inc
fcoml
data16
fwait
sarl
or
sub
pusha
scas
xchg
lock
and
stos
pop
inc
adc
and
pusha
pushf
dec
les
xor
push
jmp
add
mov
pop
jg
insl
push
pushf
movsb
sub
add
mov
inc
or
mov
and
add
lret
sub
mov
scas
js
movsb
jo
addr16
mov
loop
or
sqrtps
mov
mov
mov
sbb
mov
dec
fidivl
mov
adc
xor
inc
std
insb
pop
icebp
loopne
sub
jp
stos
popf
faddl
push
xor
dec
insb
xor
push
sbb
pop
outsl
push
cmp
mov
arpl
sbbl
fdivr
das
jo
xchg
pop
popa
insb
hlt
jns
fstp
mov
and
cmpsl
add
or
pop
clc
jp
in
repz
xor
jbe
stos
lods
movsl
cmpsb
inc
test
jp
xchg
rolb
out
iret
je
cmp
stos
cmp
pushl
ja
add
notl
rorb
jbe
jp
aaa
sub
or
mov
xchg
mov
cmp
insl
ret
mov
addr16
pop
cwtl
or
fxch
or
add
gs
movups
addr16
mov
push
setge
cld
sbb
imul
push
add
aad
inc
mov
movsl
or
and
aad
and
dec
fbstp
std
push
add
loope
movsb
cs
inc
xlat
cs
cmpsb
push
push
push
aam
call
test
mov
cmp
nop
cmp
push
imul
sub
mov
popa
aas
mov
adc
adc
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
and
adc
adc
push
mov
or
mov
popf
add
shrl
mov
sub
xor
jbe
xor
pusha
iret
cmpsb
mov
ss
in
sbb
and
cmp
lahf
dec
sbb
mov
cmp
insb
fildl
jmp
stos
into
out
xchg
xchg
push
mov
xchg
inc
dec
ret
not
enter
shll
pop
pop
add
insl
cmpb
sahf
ss
jbe
rcll
test
mov
cmp
mov
stos
mov
sbbb
add
cmp
nop
pop
mov
mov
fdivrp
clc
in
sarb
pop
adc
xor
int
imul
test
lret
lret
push
push
jns
out
add
mov
mov
pop
loop
rcr
mov
jb
pop
xchg
cmpsb
icebp
sbb
inc
sbb
test
and
add
jmp
or
ffree
push
jbe
lock
and
into
mov
xchg
cld
sub
sti
out
ss
popf
pop
ss
sbb
pop
push
ret
cmp
jp
jl
or
dec
sub
fmuls
xchg
into
fmul
stc
mov
test
mov
sub
in
xchg
xchg
adc
out
pop
sahf
es
xchg
lods
mov
fdiv
adc
lret
inc
clc
sub
jb
pop
shl
bound
adc
push
sub
imul
cmp
loop
or
fsubrp
xlat
push
test
sbb
mov
addr16
sbb
dec
sbb
rcr
ret
out
pop
adc
hlt
jge
or
in
mov
mov
stos
mov
push
adc
cmp
es
or
add
dec
sbb
xor
mov
jl
push
and
aas
cli
js
rorl
cwtl
in
xchg
repz
pushf
dec
mov
je
mov
hlt
xchg
jo
mov
push
cs
pop
arpl
mov
subl
aaa
mov
std
inc
cmpsl
scas
subb
xchg
mov
test
xchg
pushf
idiv
sahf
std
sti
iret
push
jge
sub
xchg
lret
mov
push
xor
ja
jnp
nop
sbb
or
xor
sub
xchg
mov
adc
jae
jae
fucom
aas
add
inc
xor
xor
je
les
mov
cmp
enter
and
mov
jno
orb
movl
rorl
or
add
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
jle
ficoms
adc
stos
cs
sbb
push
std
out
xchg
repz
sahf
shl
bound
pop
test
cmc
sub
inc
pop
imul
pop
pop
aas
inc
push
add
insb
aam
sub
iret
ret
out
dec
mov
xchg
dec
leave
xchg
bound
push
in
cmp
shlb
cmp
jae
repz
test
jb
mov
fwait
roll
sti
cmp
sbb
adc
xchg
and
xor
fildll
xlat
xchg
sbb
or
push
shlb
aam
out
or
cmp
rcll
and
je
loope
cltd
cmp
cltd
leave
mov
iret
cmc
mov
pop
imul
and
stc
popf
int
sarl
loop
fmulp
cltd
mov
lock
rol
testl
sub
daa
repnz
push
scas
cmpsl
enter
notb
fisttpl
push
pusha
jl
and
ja
adc
fisubrs
rorl
push
sarl
mov
cmpsl
mov
mov
cmpsb
lods
jns
dec
dec
sub
pop
add
in
pop
cmp
cmp
cmp
insl
ss
jae
arpl
mov
cmp
push
jl
pusha
cwtl
sahf
xchg
adc
mov
popf
jns
jmp
fcmovnu
add
jnp
ss
xlat
into
cwtl
aas
dec
sub
cmc
imul
imul
inc
jno
call
xor
faddl
or
sti
add
mov
cld
jo
fucomi
repnz
sbb
push
cld
xchg
dec
fnstcw
lea
enter
mov
in
cmp
scas
cmp
push
push
xchg
testl
pusha
mov
dec
dec
testb
fsubp
fcompl
sahf
scas
pop
cmp
xchg
leave
or
cmp
mov
aaa
sbb
scas
adc
pop
les
in
les
test
cmp
es
push
jmp
mov
dec
aad
test
cmp
lods
jb
or
pop
pop
sbb
mov
and
lock
jmp
sub
xlat
jmp
fs
push
out
pop
inc
pop
dec
imul
not
cwtl
sbb
ds
jne
cmp
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
aaa
cmc
stos
js
adc
adc
out
sbb
cmp
inc
sbbl
sbbl
mov
pop
popa
pop
in
ret
mov
jecxz
test
fiaddl
dec
sbb
sub
lret
andl
sbbb
mov
or
daa
loopne
add
out
sahf
out
mov
out
xchg
aam
pop
inc
ljmp
shr
or
push
push
xor
inc
nop
push
jno
lods
imul
loop
mov
scas
sub
pop
sub
push
aas
push
mov
in
push
sbb
gs
cmp
xor
fwait
rorb
dec
push
ret
mov
outsb
fildl
push
xor
adcl
adc
sbb
push
fistpll
addr16
into
sub
jg
les
shll
jns
jae
in
movsb
lret
shll
roll
lret
addr16
cmp
insb
fildl
push
ds
les
adc
lock
cmp
lea
inc
fmull
iret
jp
sub
and
lds
mov
sub
sub
stos
scas
xchg
loopne
mov
stos
lods
inc
lcall
lcall
std
orl
adc
jmp
fisttpll
xchg
pop
rcrl
shrb
cmp
int
mov
xor
out
jmp
in
in
mov
pushf
sbb
push
pop
sti
cmpsl
das
fs
pop
ficompl
adc
lahf
adcb
pop
jmp
jo
mov
mov
rcr
and
sub
test
jbe
mov
inc
cld
sti
inc
loop
inc
out
sbb
sbb
call
fs
fstp
dec
pop
out
sbb
mov
js
popa
lahf
inc
cmp
sub
fldt
mov
add
sahf
add
int3
stos
inc
lods
cwtl
out
xlat
aaa
jecxz
push
xchg
jns
not
jmp
adc
sbb
add
insb
cli
sahf
mov
mov
mov
dec
jp
lret
cmp
or
and
fsubr
xchg
hlt
pop
out
pop
mov
inc
ret
out
scas
jne,pn
ljmp
adc
fcoml
cmp
and
jnp
shlb
decl
lret
rorl
jb
xchg
cmp
fldcw
jo
cmpsl
cmp
aas
and
push
push
inc
push
cmpsb
mov
push
cltd
cmp
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
aas
ljmp
ffreep
lcall
add
sbb
popa
mov
fdivrl
adc
imul
cmp
orb
jb
pop
testb
daa
bound
jecxz
sub
jecxz
es
mov
dec
test
push
pop
dec
nop
xorb
ss
dec
push
stos
les
jbe
movsb
pop
mov
leave
cwtl
mov
subb
cmp
pop
pop
lock
lret
pusha
test
dec
out
ds
cmp
mov
add
push
fcompp
out
jo
mov
xor
rcr
js
xor
aaa
fwait
lret
pop
xchg
inc
pushf
loopne
cli
add
lgs
cltd
leave
dec
repnz
popf
adc
xor
jns
idivl
sub
push
and
push
aaa
inc
pop
mov
xchg
fadds
pushf
sahf
jl
pop
dec
xchg
inc
cltd
fisubrs
aam
je
test
sti
repz
pop
dec
mov
sbb
mov
outsl
pop
push
cs
or
call
and
fdivs
test
pop
fs
std
scas
dec
push
push
adc
cmpsb
out
out
addr16
cmp
aas
sub
adc
movsb
mov
push
jecxz
xchg
add
and
scas
fcomp
cmp
in
cli
rcrl
mov
jno
pop
lock
mov
dec
repnz
pusha
bound
xor
dec
repz
pushf
inc
jbe
aad
xchg
repz
jnp
pop
rcll
mov
cmp
lods
sbb
popa
mov
ja
addr16
and
inc
cmc
adc
mov
and
pop
push
cmp
loopne
hlt
pop
xor
shrl
fbld
add
inc
sub
les
inc
jl
ret
jle
dec
pop
insb
or
mov
inc
sbb
inc
loop
aas
xchg
rcrl
jge,pt
pop
imul
mov
subl
and
dec
or
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
test
jle
into
adc
adc
mov
movsb
mov
testb
daa
fisttps
fcmovu
mov
sub
mov
mov
cmp
mov
xchg
xor
adc
mov
sub
and
insb
sti
mov
mov
aad
push
xor
xchg
adc
or
pop
call
rcll
sbb
mov
rclb
inc
pop
cmp
xchg
cwtl
push
and
lret
jns
mov
inc
lahf
test
movsl
dec
arpl
jns
mov
mov
cmp
test
fldt
sub
inc
or
mov
pop
push
add
mov
popa
outsb
cwtl
jmp
mov
dec
push
push
mov
xchg
jbe
stc
movsb
mov
mov
mov
int
cmp
stos
adc
daa
arpl
push
push
scas
cmp
fstpt
stos
fistps
push
add
repz
out
push
cld
out
jae
rol
fst
rorl
push
cmp
mov
mov
cmp
mov
cmp
pop
xchg
sarb
fldcw
cmp
adc
das
ds
in
jae
rcr
dec
adc
subb
pop
mov
lret
outsl
mov
xchg
mov
popa
nop
dec
in
ljmp
imul
fsubs
jb
test
mov
add
aas
adcl
push
lods
mov
mov
jb
test
movsb
fcmovnu
push
loop
xchg
arpl
lods
cmpsl
push
popf
imul
cmpsl
pop
xchg
mov
lock
pop
and
leave
xor
dec
fst
xorb
lcall
paddusw
cmpsb
dec
and
in
mov
loop
fs
dec
aam
cmp
push
rep
and
in
out
sub
mov
popf
aam
pusha
clc
xorb
sbbb
call
ds
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
lret
mov
enter
fs
mov
jae
push
in
je
lds
pop
mov
jl
insl
mov
ficoms
xor
paddusw
pop
lods
or
outsb
loope
mov
loopne
scas
jge
std
in
call
jns
bound
out
outsb
shrb
sbb
mov
mov
cmp
fisttpl
inc
movsl
imul
ror
mov
adc
leave
inc
adc
aad
aaa
and
leave
pop
out
mov
lret
iret
sub
ficoms
idivl
jno
arpl
or
adc
and
loopne
sbb
xor
ljmp
dec
movsl
dec
mov
inc
pop
imul
mov
pop
pop
icebp
push
sbb
fs
dec
imul
sbb
and
push
out
arpl
arpl
movsb
rclb
das
sbb
cmp
nop
push
cmpsb
cmp
ljmp
out
xchg
mov
bound
mov
pop
sahf
clc
std
jo
aad
sub
sbb
cld
mov
icebp
push
jb
test
mov
cmp
das
sub
aam
aas
movl
dec
fsubrp
dec
and
and
std
test
mov
push
dec
fwait
jle
xchg
xchg
fdivrl
lods
scas
into
enter
ja
mov
and
add
popf
mov
push
pop
cmp
fucomip
sub
out
or
adc
clc
add
in
push
pop
hlt
frstor
scas
out
fcoml
add
xchg
adc
inc
add
sbb
xchg
sub
and
test
incl
xchg
movsb
outsl
pop
mov
pop
jns
dec
mov
data16
jns
adc
adc
dec
dec
aaa
iret
pop
inc
push
cmp
fdivl
repz
popf
ljmp
data16
fsubl
jb
sub
dec
sti
adc
in
outsl
pop
pop
pushf
movsl
mov
adc
out
loop
jo
sarl
sbb
pop
call
fs
jae
xchg
lcall
mov
add
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
jae
mov
enter
pop
pop
data16
add
out
add
jno
add
sub
imul
ret
jmp
sub
mov
shlb
frstor
add
mov
pop
dec
sbb
lret
adc
fimuls
movsl
mov
insb
sbb
ror
or
mov
jecxz
ds
mov
xchg
inc
adc
stos
xchg
dec
sub
not
rcll
xchg
pop
push
mov
out
sarb
rcl
popf
cwtl
sub
mov
leave
cmp
cld
dec
sti
rorb
inc
jecxz
push
push
sarl
or
jp
ret
jnp
adc
sub
enter
xor
xchg
and
not
inc
inc
aad
cmp
sbb
inc
push
or
ret
xchg
lahf
es
test
cmp
add
push
push
pop
xchg
jne
imull
ret
out
cmp
push
push
mov
fs
sbb
test
xor
leave
stc
pop
mov
inc
cmp
xor
adc
lcall
xlat
int
dec
mov
shrl
lock
sti
movsb
mov
stos
jbe
sub
mov
add
mov
jg
negl
fisttpl
fsub
adc
aam
jg
shrl
in
ja
inc
jae
adc
and
and
push
push
xor
out
and
push
mov
push
rcll
xchg
lods
xorl
pop
xor
mov
lret
into
inc
mov
mov
cltd
xor
hlt
test
mov
mov
lock
mov
loopne
imul
stos
imul
gs
imul
mov
scas
sbb
inc
add
out
or
mov
lahf
jl
mov
testw
and
jmp
negl
mov
push
inc
bound
stc
ret
xlat
retw
xlat
or
mov
jg
scas
incl
cltd
jecxz
xor
jno
int
jns
ss
adc
mov
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
mov
adc
adc
cmpsl
sbb
jo
pop
lea
pop
out
mov
daa
pop
mov
shlb
adc
test
jge
fdiv
jl
lret
or
inc
mov
pop
push
sarb
mov
and
mov
test
mov
aad
add
push
pop
adcb
cwtl
in
cwtl
xchg
cmc
ret
adc
cltd
dec
adc
adc
mov
push
cmp
out
jecxz
sbb
dec
mov
push
mov
adc
in
add
jp
inc
ret
cld
mov
lcall
pop
cmp
pop
clc
cmpsl
clc
ss
and
mov
shll
into
lret
aaa
int3
dec
loope
loop
mov
cs
xchg
mov
dec
cmp
dec
and
xchg
call
dec
xchg
mov
and
inc
dec
jecxz
xor
mov
lods
mov
out
jne
rol
pop
iret
pusha
add
insb
test
inc
and
mov
xor
jg
dec
cli
out
push
movsb
stc
adc
arpl
pop
or
push
testl
lret
xchg
out
cmp
test
inc
jne
xchg
or
cld
mov
int
sbb
push
xchg
sbb
push
in
stos
push
mov
mov
fwait
lcall
pop
mov
add
add
mov
sti
xchg
sub
jp
in
dec
xor
jb
xchg
loope
es
lret
sbbb
lcall
incl
cmp
and
push
lock
stc
sbb
call
mov
inc
loop
mov
dec
lock
iret
add
xchg
xchg
inc
sub
dec
lahf
xchg
jae
cmp
xchg
add
ret
loope
ficomps
sti
sbb
dec
repnz
gs
idivl
jns
in
pop
and
jnp
loop
xor
out
or
sub
jo
loope
fmull
clc
and
fsubs
mov
scas
and
jecxz
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
sbb
adc
adc
data16
add
adc
fnstsw
mov
cmp
insb
push
pcmpgtw
jge
aas
xor
mov
push
jle
fnstenv
cmp
or
das
dec
push
sbb
es
popf
ljmp
sub
ret
xor
fistps
loop
dec
xchg
shrb
jne
add
fbstp
or
adc
ja
push
cmp
sbb
insb
jmp
das
pop
adc
sub
sbb
or
jo
cwtl
lods
cmp
mov
std
cmpsl
aad
adcl
and
lds
insl
iret
out
adc
jl
or
mov
jae
push
inc
hlt
jecxz
cmp
jmp
ficoms
dec
xor
pop
scas
in
jmp
call
popf
ljmp
movsl
shll
divl
cmp
cmpsw
data16
sbb
cmpsl
int
scas
stos
jbe
cmp
push
ljmp
add
mov
pop
aad
dec
cmpsl
cmc
call
mov
and
into
cli
mov
fistpll
mov
in
pushf
adc
sahf
out
int
pop
fldl
fdivrl
xor
jmp
xor
push
aaa
mov
dec
gs
inc
out
or
cmpsb
fsincos
out
je
pop
das
daa
negb
lret
in
dec
cltd
stc
ss
or
aad
imul
jge
mov
or
xchg
or
enter
leave
notl
mov
mov
mov
or
mov
sub
xor
mov
mov
push
inc
sar
and
mov
jne
jne
sub
push
aas
arpl
lock
jmp
adc
rorl
jmp
pusha
push
inc
sub
mov
lret
cmpsl
adc
iret
insl
push
sub
cmp
ds
loopne
int3
xlat
mov
add
lea
mov
and
mov
cmpl
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
add
enter
sub
sbb
xor
xchg
mov
daa
pop
xor
push
mov
xchg
mov
or
ja
lret
xor
xchg
inc
xchg
scas
mov
push
push
insl
lods
imul
out
dec
mov
jle
les
mov
mov
or
xchg
mov
dec
imul
jp
ss
jge
cmp
aas
fdivs
outsb
inc
ds
shl
popa
dec
test
adc
xor
cli
push
sbb
lods
psubusw
cmp
sub
js
mov
mov
notl
jb
je
mov
cli
nop
xchg
inc
popa
mov
push
pop
aaa
lods
xchg
std
adc
push
pop
sbb
xchg
imul
xchg
popa
das
mov
mov
lods
inc
pop
and
xchg
imul
bound
lcall
jne
mov
jl
pop
jnp
sti
pop
push
dec
in
push
and
fwait
xchg
dec
sub
int3
mov
shlb
out
add
cmpsb
mov
ljmp
aad
rcrl
push
or
dec
daa
mov
push
sbb
jl
mov
mov
out
mov
jge
fs
sbbl
mov
adc
pop
stc
push
mov
pop
sbb
sub
fstpl
fmuls
insl
insl
call
mov
repz
sahf
sub
es
es
je
mov
or
fwait
fwait
aaa
jo
outsl
push
cmp
dec
mov
mov
insb
push
xor
push
out
cmpsb
cmp
fwait
scas
sbb
jl
ja,pn
and
adc
mov
rcrl
sahf
rorb
sbb
cmpsl
sub
rcrb
negl
mov
or
xor
xchg
aam
jns
scas
jb
sub
xchg
or
adc
xor
xor
xchg
mov
addl
rcrl
rorl
mov
xor
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
scas
sbb
enter
out
imul
notl
mov
mov
push
scas
cmp
push
rcll
std
push
in
lods
cli
mov
push
jno
xchg
mov
lods
push
jge
imul
jns
mov
int
inc
push
shl
sub
lahf
push
jl
int
jle
mov
adc
push
push
push
jo
bound
and
in
imul
shlb
inc
clc
std
mov
push
inc
rolb
pushf
leave
and
pop
imul
aaa
stos
or
cmpl
xchg
push
jae
test
push
xchg
adc
xchg
pusha
out
imul
push
mov
push
xor
lods
mov
mov
mov
nop
mov
push
repnz
mov
inc
fistps
ret
adc
add
jae
xchg
bound
jb
sbb
dec
xchg
scas
movsl
test
testb
mov
mov
xchg
jae
inc
mov
rorl
in
push
js
js
cmp
inc
out
pushf
gs
lret
sbb
lods
int3
xchg
mov
cli
mov
cmp
inc
fwait
dec
jns
ret
dec
fs
mov
cmpsl
push
loope
in
test
or
cwtl
xor
sub
xchg
movsl
sub
fldcw
inc
push
push
stc
and
inc
mov
shr
and
mov
mov
into
leave
xchg
push
push
mov
mov
adc
jb
es
adc
iret
ret
cmp
inc
add
je
fsubs
repnz
std
pop
nop
into
in
xchg
hlt
jbe
imul
lods
xlat
loope
pop
lret
inc
fcmovnu
adc
movsl
insl
cmp
adc
lret
andl
cmp
std
lock
mov
push
sbbl
sbb
daa
rorb
hlt
adc
inc
enter
inc
push
enter
clc
arpl
xchg
loopne
add
add
xchg
daa
lds
mov
fbld
mov
rolb
pushf
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
sub
stos
insb
lcall
adc
push
jecxz
push
jg
loop
data16
fstpl
sub
in
sar
mov
dec
lret
jg
dec
mov
faddl
stc
dec
adc
or
jno
push
mov
fldcw
push
push
pop
mov
shl
mov
les
mov
jne
jp
cmc
adc
mov
mov
add
sub
out
iret
test
or
push
inc
adc
or
iret
cmc
hlt
mov
xor
les
in
rcr
mov
dec
or
aad
stc
jnp
loopne
cld
aad
sarl
add
jle
lahf
jb
xchg
mov
ffree
test
in
dec
hlt
xor
pop
movsl
mov
add
xchg
sarl
nop
jno
push
jno
in
mov
outsb
je
push
push
mov
imul
addr16
fcomip
addr16
adc
fwait
decl
hlt
pop
xor
bound
cs
push
adc
xor
dec
lcall
mov
js
dec
pop
add
mov
inc
movsb
clc
mov
pop
adc
jge
out
sbb
lods
nop
sbb
ja
gs
hlt
repnz
xchg
xor
sub
int3
or
subb
cmp
add
mov
add
sub
aas
hlt
ret
je
dec
dec
outsl
fst
jmp
testb
divl
lods
pop
lahf
loop
dec
pop
push
inc
or
mov
adc
pop
inc
and
cmp
cmpsl
xchg
test
push
stos
lret
xchg
testl
imul
cmp
mov
jne
in
aam
outsb
push
stos
aaa
call
test
adc
mov
lds
xchg
cs
cmpsb
movsb
sahf
cmc
adc
mov
push
cmp
scas
mov
test
psllq
test
pusha
mov
mov
or
mov
filds
mov
xchg
int
insb
mov
and
imul
add
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
or
sarb
test
adc
movlps
adc
loope
jnp
mov
push
adc
mov
adc
js
and
xchg
fcmovnb
lods
mov
gs
adc
mov
subl
xchg
lods
ficoms
cmp
loopne
roll
addl
std
cltd
mov
adc
fistl
xchg
cld
adc
mov
mov
popa
mov
sarb
mov
xlat
jmp
mov
dec
and
shlb
xor
outsb
xchg
mov
leave
adc
xor
outsl
pop
arpl
icebp
gs
mov
adc
ss
inc
add
dec
sahf
cld
add
addr16
sub
xlat
hlt
sub
mov
insb
and
mov
xchg
mov
jns
les
stos
cmp
subb
sub
adc
sub
ja
int
int3
mov
rorl
imul
out
adc
jle
sbb
jp
and
loop
xor
jae
adc
mov
das
pop
or
and
arpl
xor
jecxz
outsl
bound
negb
jmp
repnz
lret
ret
cltd
push
pop
pop
cmpsb
test
in
or
clc
push
outsb
cmp
scas
mov
loopne
or
push
mov
adc
dec
mov
and
jg
jmp
inc
mov
xchg
or
lea
in
inc
pop
addb
mov
mov
hlt
sub
jbe
mov
pop
fists
dec
and
add
inc
push
xchg
dec
xor
xlat
ljmp
or
cmp
mov
daa
jae
xchg
sub
cmp
fstpl
or
rcll
or
stos
scas
fsubs
mov
push
push
jmp
out
push
mov
mov
xor
pushf
push
loop
sbb
pop
cli
movsw
loope,pn
ss
mov
cmp
repnz
mov
enter
xchg
sarl
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
es
movsb
adc
adc
and
xor
fs
insl
or
xchg
mov
and
mov
xchg
negb
aad
sbbl
push
adc
fisubl
or
out
data16
push
lods
test
fisubs
inc
ret
and
call
mov
inc
xor
push
dec
xor
adc
jmp
imul
fists
bound
mov
rcrb
sbbl
cmpb
mov
je
mov
sti
les
jmp
xchg
test
into
insl
push
push
in
mov
or
jo
cmc
cmpsb
ficoml
or
and
xor
dec
pop
jmp
stos
movsl
xlat
shlb
add
lret
sahf
jbe
mov
adc
adc
repz
dec
push
fcompl
out
xor
stc
xor
pusha
enter
je
mov
notl
icebp
xchg
push
ds
mov
or
lahf
in
in
ds
xchg
dec
jo
sub
jne
mov
mov
cmpsl
dec
cmp
fimull
je
xlat
dec
dec
sub
sub
mov
idiv
inc
add
pusha
cmp
sub
xor
push
and
cmp
jecxz
xor
lods
push
cli
and
fstl
cltd
push
adc
fcoml
pop
adc
sbb
cwtl
daa
ljmp
lods
sahf
negb
loop
sbb
sbb
fisubrl
dec
fdivs
jne
jne
inc
insl
ds
scas
test
xor
daa
and
sbb
je
or
push
loopne
into
ds
ljmp
sbb
inc
xchg
lcall
xchg
mov
push
scas
cwtl
enter
test
mov
in
jg
fadd
mov
and
push
sub
int3
add
and
fmull
or
sti
sub
sbb
aas
dec
pop
xchg
popa
lret
mov
xchg
in
enter
ret
pop
pop
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
cltd
push
push
mov
adc
and
pop
jae
hlt
adc
imul
jg
pop
adc
cmp
shl
jl
icebp
mov
fwait
lahf
adc
arpl
mov
cli
in
ds
inc
test
int
mov
les
inc
mov
scas
test
and
xor
aaa
add
mov
fisubs
cmpsl
and
xchg
jno
repz
push
insb
mov
mov
mov
xchg
and
jmp
cmpsb
lret
dec
ljmp
jno
stos
in
jmp
loopne
in
cld
aaa
sbb
fcomps
cmp
scas
mov
or
repnz
xlat
and
pop
shl
les
iret
add
pop
les
xchg
mov
pop
out
xlat
arpl
aad
mov
outsb
sub
xchg
pop
or
dec
xchg
std
push
mov
jmp
rcl
fucom
ljmp
cmp
and
push
aas
sbbl
addr16
stos
cltd
mov
or
dec
sbb
jne
jb
and
loopne
ror
nop
add
ja
cli
xor
jae
cmc
lret
cmc
js
movsb
push
push
mov
lret
xchg
inc
addb
and
rcll
jno
adc
or
pop
inc
in
int3
pop
lock
subl
movsl
and
or
sarb
adc
inc
ljmp
inc
ret
cli
outsl
inc
jns
cmp
xor
xor
push
adc
hlt
push
pop
mov
into
push
enter
cld
jp
std
rcll
sbb
cs
push
fmul
add
xchg
dec
scas
ljmp
lds
xor
lock
notl
aad
lods
loopne
push
jmp
xor
daa
nop
dec
push
and
pusha
jle
nop
shll
jno
and
xchg
mov
lahf
push
repnz
or
cmp
xlat
xor
sahf
mov
subb
decl
test
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
insb
imul
xor
das
xor
fsubrp
xor
pop
push
cmp
mov
push
pop
mov
xor
pop
ret
jno
inc
rolb
push
shrl
mov
mov
lret
push
jbe
jecxz
test
mov
std
adc
push
xchg
pop
movsb
insb
mov
add
fnsave
dec
dec
dec
jbe
cmp
addb
outsl
mov
xchg
cmp
and
push
add
int3
rorb
jg
aas
ficoms
cld
loop
or
xchg
jg
imul
or
mov
mov
in
mov
lret
sub
lods
add
and
loop
sub
mov
xchg
or
outsl
movb
cld
dec
sub
test
std
jmp
adc
pop
mov
pop
int
cmpsb
mov
int
cltd
dec
call
sub
jne
clc
mov
out
pop
ljmp
ljmp
iret
movsl
les
cmpsb
push
xchg
sahf
sub
mov
loope
pushf
sbb
inc
push
ret
rolb
jo
out
mov
cli
jnp
mov
jbe
aaa
push
sti
cmp
hlt
movsb
fisttpll
enter
inc
add
lahf
std
mov
dec
insl
and
jmp
xchg
je
adcb
xchg
repnz
and
hlt
cli
es
mov
adc
pop
aaa
pop
sbb
dec
xor
adc
xchg
pop
es
mov
sub
lret
cmpsb
pusha
mov
test
cmp
cmp
shlb
xchg
dec
mov
arpl
lods
sbbb
pop
xchg
or
mov
insl
scas
subb
inc
cmc
push
iret
lret
add
adc
or
or
test
hlt
mov
mov
lods
inc
or
out
mov
cmp
aam
pop
movsl
sahf
and
adc
inc
or
stos
jno
jp
pop
mov
js
cmp
cmp
mov
push
adc
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
pop
xchg
js
cwtl
adc
adc
xor
and
arpl
sbb
push
dec
in
in
cmpsl
adc
das
sub
jnp
cmp
ficomps
rclb
cmpsb
fmull
inc
push
jle
outsl
xchg
test
mov
mov
les
push
push
and
or
ljmp
ss
or
xchg
dec
and
cmp
add
clc
cli
push
jecxz
push
pop
dec
xor
movsl
pop
inc
inc
loopne
js
mov
out
jmp
mov
inc
add
loopne
jno
aas
cmp
lcall
lret
mov
jp
xor
sbb
xor
adc
loop
shrl
loopne
push
dec
scas
xchg
ja
sti
or
push
std
roll
fstpl
jns
pop
cs
sbb
fimull
xchg
icebp
ret
cmp
aaa
jp
sub
imul
dec
dec
jns
mov
adc
out
push
imul
or
and
add
into
xchg
inc
jae
mov
xlat
jp
daa
mov
inc
jnp
jb
insb
push
popf
mov
pop
int3
jno
push
jns
enter
inc
loope
and
xorb
pop
jmp
mov
rclb
call
mov
mulb
mov
lock
sub
ljmp
xlat
push
mov
out
shll
or
pop
dec
xor
push
pop
fsts
fimull
std
push
push
push
push
je
fcomp
add
incb
rcrl
mov
sbb
es
push
bound
int3
lea
push
sub
lcall
lods
cmovno
pusha
hlt
movsl
iret
dec
mov
mov
jl
sbb
lods
out
repnz
sub
movsl
sahf
adc
jl
push
sub
push
imul
xor
mov
lahf
mov
jne
movsl
push
iret
and
leave
daa
xor
stos
test
xor
or
fistpll
mov
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
int3
test
rclb
adc
inc
sti
mov
xchg
or
fs
mov
int
imul
inc
out
push
cmp
stos
scas
xchg
fcoms
icebp
push
pushf
adc
adc
jns
add
fs
inc
imul
add
outsl
adc
push
mov
adc
inc
les
push
jge
pusha
mov
dec
stos
ja
mov
add
push
sub
mov
lcall
insl
movsl
push
mov
mov
push
bound
add
adc
stos
imull
mov
bound
sub
xchg
ret
pusha
loopne
das
add
mov
aam
xor
adc
mov
imul
mov
ret
and
dec
cmp
cmpsl
jns
mov
int3
addr16
lods
inc
je
popa
leave
loopne
mov
xor
push
loop
xchg
xchg
xchg
js
loope
and
cltd
lea
mov
rcll
pop
lret
loopne
or
pop
leave
mov
or
nop
mov
lods
mov
mov
test
int3
mov
out
frstor
cmp
mov
xor
dec
shr
nop
scas
inc
xchg
imul
loope
repnz
call
xchg
or
repz
add
pop
cs
das
push
cli
insb
movsb
enter
sbbl
loopne
push
xor
jbe
or
sti
or
pop
jle
je
jg
popa
aaa
pop
sahf
ja
adc
or
ret
sbb
push
bound
mov
xchg
mov
mov
repz
dec
mov
in
iret
popf
je
push
js
shll
pop
add
adc
adc
sub
xor
cmpl
fwait
adc
adc
pop
cmp
cs
xchg
cmp
push
mov
je
lret
loope
insb
jg
inc
dec
pop
addr16
call
mov
rcrb
push
adc
inc
outsb
mov
pop
sarl
jecxz
shll
xchg
arpl
or
test
pushl
lret
adc
fmuls
and
pushl
imul
fmuls
sbb
decl
decl
decl
mov
and
inc
add
add
pop
lods
mov
and
pop
mov
movaps
xchg
adc
adc
pop
sbbl
js
mov
idivl
cmp
inc
cs
inc
cmpsb
jmp
jns
xchg
popf
xor
jmp
or
loope
stos
lcall
rcrb
fidivs
xor
xchg
int3
xor
inc
xlat
push
cmp
ret
jmp
inc
add
fcmovnbe
push
sub
mov
shll
idivb
aaa
mov
dec
mov
insb
jg
pop
dec
sub
daa
sub
aad
lods
mov
lcall
inc
lret
pop
insb
dec
cmp
cmp
jnp
jo
cmp
aam
xchg
stos
push
movsb
jle
iret
jg
fstl
ffreep
dec
inc
loope
adc
or
fmuls
inc
sub
fwait
aam
enter
std
fs
sub
loope
fists
pop
xchg
mov
sbb
popf
mov
add
and
xor
jmp
push
and
inc
sub
mulps
sub
fwait
ret
mov
cmp
xchg
leave
dec
inc
int
lret
es
inc
int3
sub
sti
fmuls
sbb
add
repz
sub
push
aad
pop
mov
out
add
add
jbe
mov
mov
call
dec
out
push
leave
outsl
dec
imul
xchg
and
lea
into
mov
xlat
jmp
mov
push
pop
pushf
mov
repnz
das
cmp
scas
fisttpll
and
mov
cmp
push
jmp
jae
mov
out
mov
mov
int3
add
or
or
xchg
mov
lahf
leave
pop
int3
sbb
std
cmp
jb
loop
adc
lea
lea
jg
xchg
xchg
pop
scas
inc
in
in
daa
popf
cmp
les
imul
enter
das
test
dec
loop
push
mov
fwait
mov
rcl
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
add
cmpb
movlps
scas
sub
outsb
mov
add
inc
das
pop
add
lea
outsb
jnp
bound
mov
popa
mov
aam
roll
enter
inc
lock
fwait
adc
add
sub
adc
inc
mov
adc
xlat
in
push
fdivs
xchg
xchg
in
test
decl
out
mov
lret
mov
jle
sub
rcrl
lods
out
mov
loope
pop
rcl
fs
mov
inc
xor
jnp
mov
sub
xor
int3
insb
cld
sub
pop
push
push
cmpsl
outsb
adcl
fmuls
mov
cmp
es
pop
movsl
adc
fwait
pushf
cmp
fdivrl
imull
lds
ret
jp
sbb
mov
add
adc
shr
lds
sub
xor
and
inc
mov
mov
pop
mov
flds
jmp
ljmp
adc
stos
push
scas
shll
cmp
dec
mov
xor
and
test
repz
adc
mov
and
scas
in
cmpl
mov
inc
enter
push
lcall
jo
insl
fsubrs
loop
fistpll
jnp
fildl
in
inc
sbb
sbb
dec
inc
adcl
and
mov
jmp
cs
jno
inc
bnd
and
ds
mov
inc
sub
jecxz
or
in
gs
cmpsb
push
push
sti
cmc
in
mov
add
xor
xchg
adc
rcll
stos
dec
mov
or
iret
push
xchg
mov
xchg
dec
icebp
shll
cs
sbb
rcrb
sarb
jb
push
xchg
adc
jl
subl
xor
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
cmc
pop
cmc
sbb
adc
enter
dec
iret
lret
ja
add
aas
add
lock
adc
mov
mov
mov
dec
mov
sbb
outsl
sti
push
sbb
push
dec
pop
gs
loopne
test
outsb
push
mov
inc
jmp
inc
push
and
movsl
inc
and
push
and
scas
mov
push
icebp
pushf
ret
arpl
mov
inc
lcall
pop
ljmp
mov
add
adc
jl
xchg
mov
jp
dec
and
out
ret
jb
cmp
mov
cld
push
sbb
xchg
das
xchg
mov
jno
push
jp
add
jp
jmp
jle
dec
jge
aad
mov
das
mov
movsl
xchg
lods
jns
repz
adc
push
icebp
xor
jo
iret
aas
or
or
sub
mov
addr16
and
mov
pop
pop
stos
mov
push
xor
jns
pmullw
mov
xor
nop
mov
dec
jp
mov
and
jge
inc
stos
rol
loopne
mov
sbb
mov
arpl
push
push
adc
test
or
mov
aad
dec
iret
push
adc
inc
fwait
test
sti
mov
stos
leave
add
and
jecxz
outsl
jle
fldt
rcll
test
mov
inc
out
arpl
jge
in
jnp,pt
inc
lods
xchg
cli
out
and
mov
decb
mov
mov
rcrl
not
repnz
xlat
inc
aaa
repnz
int3
test
xchg
fdivrl
or
pop
sub
in
cmp
jge
mov
inc
pusha
mov
cmp
pusha
in
adc
xorb
fs
lock
xchg
hlt
shll
out
out
cwtl
push
pop
mov
call
pushf
jb
ret
jae
pop
push
scas
lret
in
lds
cmp
in
fldenv
test
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
mov
xchg
adc
inc
mov
mov
sbb
fdivrs
sbb
lret
fucomip
sahf
mov
jle
pusha
je
sbb
lret
push
jp
jl
jg
push
nop
lds
xchg
repz
sbb
punpckhdq
inc
dec
popa
dec
cmp
cli
repnz
dec
outsl
fs
or
js
lahf
mov
mov
popa
pop
cmp
pop
in
sub
sahf
in
jle
in
jle
add
cmc
xchg
sub
jmp
jbe
loope
addr16
das
xchg
pop
jge
fdivrp
imul
fld
inc
mov
pop
add
mov
jg
mov
adc
scas
and
push
inc
cltd
mov
mov
inc
pop
imul
mov
mov
jg
cli
dec
std
xor
and
enter
ja
call
and
xlat
cmp
push
dec
xor
test
fimull
std
adc
imul
stc
mov
or
push
arpl
mov
inc
mov
ret
xchg
pop
fbld
pop
pop
adc
adc
jnp
inc
jns
push
fiaddl
mov
pminsw
aad
add
mov
test
xchg
mov
jnp
sbb
movntq
mov
pop
or
popf
inc
inc
sbb
outsb
sbbl
cmc
sbb
pop
cmp
cmpsl
decl
add
aad
pop
xchg
pop
fwait
testb
and
pop
enter
insl
insl
pusha
xchg
in
shrb
xchg
add
push
cwtl
mov
pop
sub
push
jl
mov
cmp
outsb
je
lret
sbb
push
push
les
cmp
cmp
push
inc
adc
imul
loopne
mov
push
push
dec
daa
jne
push
jnp
mov
xchg
scas
adc
je
ss
pop
sahf
sbb
fnstenv
stos
and
push
aad
or
ss
sbb
mov
fs
leave
pusha
sbb
in
inc
xor
xchg
mov
imul
fnstenv
cli
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
cmp
enter
adc
into
xor
ficomps
and
xor
fisubrl
imul
and
out
cmpsl
inc
mov
es
and
jbe
aad
test
mov
in
fisubl
pop
add
dec
cmp
cli
sbb
dec
mov
xchg
aas
or
pop
inc
out
mov
stc
nop
imul
repz
xor
cmp
pop
das
mov
push
gs
sub
pop
xlat
ds
fs
lods
add
inc
and
push
jge
js
jecxz
cltd
cld
adc
add
sub
inc
in
push
adc
or
jne
xlat
rol
mov
movsb
pop
out
lea
or
cltd
jg
cld
push
mov
sbb
cmpsl
dec
dec
sti
mov
mov
adc
sub
adcb
cmpsb
sbb
xor
pop
cs
pop
mov
mov
add
add
icebp
inc
cmpsb
cmp
cmp
pop
push
test
mov
dec
jo
xlat
test
adcl
pop
call
jo
xchg
loop
fs
jns
outsb
mov
inc
stos
adc
jecxz
mov
sbb
jge
pop
std
gs
std
mov
jae
mov
and
and
cmp
jnp
pusha
inc
push
clc
out
shrl
ds
xorl
xchg
or
es
xor
ljmp
mov
stos
imulb
test
push
sub
int
jae
or
notb
popf
les
add
pop
ss
les
scas
inc
sarb
sahf
jns
pop
test
mov
in
es
lea
xor
fnstcw
repz
in
jmp
xlat
cmp
ret
pushf
jmp
scas
std
mov
inc
push
sub
mov
xorb
push
in
xchg
out
enter
out
mov
pop
into
sbb
jnp
or
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
rclb
scas
insb
or
adc
movlps
ljmp
mov
notb
jne
ret
pop
adc
stos
mov
ss
mov
xchg
stos
adc
stos
sbb
mov
push
repnz
scas
mov
into
inc
das
jns
mov
ja
enter
add
cmp
cmp
lds
adc
sbb
mov
fiadds
sbb
dec
and
cld
aam
orl
int
je
ljmp
add
adc
xor
xor
mov
cmp
mov
inc
pop
out
bound
xchg
push
add
into
jle
pop
inc
xor
dec
mov
push
xchg
lds
xlat
or
mov
mov
or
pop
xlat
cli
dec
aas
cmc
rcl
xchg
push
fwait
ss
js
push
sarb
cwtl
js
in
jp
push
cmc
popa
pop
mov
mov
mov
rcrl
movsl
lock
repz
mov
push
xchg
push
lods
push
inc
and
stos
xchg
push
mov
mov
popf
add
jg
jno
out
pop
clc
pushl
xor
maxps
loopne
insb
or
lds
out
jne
xchg
aaa
cmp
or
adc
xchg
jecxz
pop
adc
push
xor
pop
inc
fs
cs
inc
and
mov
fidivrs
fistpll
or
fisttpl
push
insl
adc
aam
cmp
loopne
inc
jmp
push
or
outsl
jp
insl
cli
es
fmul
mov
mov
ljmp
xchg
sub
dec
enter
and
dec
pop
xchg
cli
push
dec
out
inc
jnp
stos
iret
aas
sub
insl
xchg
cmpsl
mov
in
or
aad
and
xor
mov
xlat
sub
rclb
ror
sti
lock
aaa
push
xor
mov
stc
mov
xchg
fldl
clc
adc
mov
push
out
adc
test
add
add
decl
decl
mov
addl
add
mov
sar
jmp
ds
in
mov
xchg
js
inc
ljmp
enter
out
pop
sbb
lcall
pop
sub
popa
push
inc
or
jae
in
iret
imul
mov
movswl
sub
pop
xchg
add
mov
into
inc
adc
push
cmp
movd
or
das
sbb
jnp
xchg
repz
mov
push
xchg
ljmp
int3
sbb
mov
lret
cmp
rcl
js
in
repnz
cld
or
cmp
ss
mov
mov
repnz
les
lods
stos
push
xchg
mov
push
xor
inc
push
out
enter
mov
adc
xor
gs
arpl
jns
out
mov
adc
outsb
lods
stos
rol
shrl
mov
adc
inc
dec
xor
scas
movlps
lret
pushf
fxch
mov
adc
jo
xor
nop
pushw
or
jno
mov
dec
sbb
scas
clc
outsl
adc
repnz
aas
jl
and
pop
js
cs
sbb
push
push
fucompp
xlat
xchg
push
push
adc
push
xor
clc
insl
cs
xor
pusha
sbb
mov
hlt
jecxz
es
cwtl
mov
xchg
popf
cmp
mov
mov
add
divb
lcall
mov
or
test
inc
aam
dec
fstl
xor
outsl
repnz
int
push
cmp
insl
jl
int
xor
or
shr
fsts
fidivl
in
roll
iret
xor
imul
js
or
outsb
mov
sbb
add
lock
inc
pavgw
cs
clc
sub
push
adcb
shlb
sbb
xor
outsl
jmp
mov
mov
ss
mov
es
fldcw
mov
push
lret
or
sub
mov
decl
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
mov
adc
adc
out
cld
shlb
jmp
int3
test
in
lret
sbb
xor
hlt
jle
filds
mov
outsb
inc
dec
idivl
ds
inc
pop
stos
dec
xor
aad
adc
pop
cmpsb
push
fs
fstp
cmp
pop
cltd
mov
test
xor
loopne
mov
xor
push
mov
les
dec
mov
xor
push
pop
into
inc
loope
ficompl
fiadds
adc
sbb
loope
sbb
sub
pop
xchg
jne
jg
mov
cmp
lret
jb
mov
out
or
or
cmpsb
sti
add
outsb
testb
pusha
cmpsl
add
adc
aas
shl
jb
add
jg
push
mov
insb
push
sub
fnstenv
adc
mov
xchg
inc
in
mov
pop
and
arpl
clc
adc
mov
pushw
mov
fimuls
fcomps
push
sahf
in
rorl
push
cmp
imul
pop
dec
dec
stc
fmull
cmc
cmp
fmuls
mov
adc
mov
movsb
scas
sub
mov
test
dec
lret
scas
xor
xchg
mov
pop
ret
das
inc
mov
outsb
jae
mov
enter
mov
jecxz
sbb
jb
mov
adc
enter
jl
es
into
andb
lea
mov
insb
loopne
sbb
adc
movb
push
sbb
into
loopne
addb
jo
test
subl
mov
push
push
and
push
pop
xchg
jb
addl
mov
adc
add
test
sub
out
or
jl
pop
push
sahf
mov
push
inc
xor
dec
imul
or
jmp
push
sahf
or
xor
pop
movsb
jmp
rorl
add
dec
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
cmpb
es
adc
adc
push
into
das
add
subl
xor
jo
adc
cli
aaa
lea
clc
ljmp
in
or
roll
add
push
xlat
dec
mov
mov
imul
in
cmpsl
insb
push
cmpsb
or
cltd
inc
cmpsb
cltd
adc
cwtl
repnz
sbb
sub
out
mov
insb
jecxz
loopne
ret
mov
or
ss
int
leave
inc
fdivrp
mov
sbb
insl
popf
sahf
mov
lock
pop
lret
mov
jo
pop
cmp
xor
in
addl
pop
outsb
mov
push
movsb
dec
mov
inc
push
rorl
sahf
sbb
mov
dec
aaa
lcall
sbb
lods
nop
xor
bound
push
jg
cmp
popa
dec
popf
add
movsl
add
fs
dec
lods
imul
mov
clc
cs
jmp
xchg
or
ljmp
repz
outsl
push
push
mov
adc
sbb
mov
nop
push
out
pop
arpl
loope
pop
mov
aaa
push
std
cmp
pop
inc
jp
push
in
mov
mov
movsl
pop
nop
push
sbb
test
add
sbb
xchg
js
addr16
mov
imul
data16
lahf
aas
aad
cli
xor
push
push
and
mov
dec
lahf
frstor
int
add
ds
imul
test
add
dec
ror
and
mov
push
xor
fucom
popa
mov
push
xor
loope
or
sahf
or
stos
mov
repnz
and
dec
movsb
cmp
enter
dec
cmc
sub
notw
jle
cltd
imul
ret
out
jns
pop
gs
pusha
inc
flds
adc
shrb
inc
js
or
and
and
test
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
mov
push
adc
ror
adc
cltd
dec
and
ret
mov
xor
mov
mov
jle
adc
xor
test
xor
rorl
lods
js
scas
pushf
cmp
mov
sarl
mov
cmp
or
cmc
jae
into
xor
add
flds
adc
fst
loop
add
ds
or
ljmp
add
push
icebp
shr
cmp
inc
rcrl
ss
push
imull
mov
inc
inc
dec
imull
cmp
push
adc
sbb
push
pop
jmp
inc
ds
les
adc
aad
test
loop
mov
sar
add
mov
and
jg
and
xchg
xor
xorb
js
insb
in
ficoml
cwtl
mov
xchg
hlt
or
mov
mov
in
xor
push
push
pop
aam
cli
mov
jp
jo
dec
lahf
push
iret
jns
jmp
sbb
popa
dec
mov
pop
and
xor
call
daa
mov
repz
pop
mov
push
mov
push
addr16
push
rcl
xor
addr16
xchg
lret
iret
sbb
mov
out
btc
sbb
loope
in
mov
jge
adc
cwtl
dec
push
add
mov
or
jl
sub
out
pusha
fdivrl
out
lret
hlt
pop
pop
inc
stc
call
in
push
leave
lahf
xchg
or
dec
paddd
push
shrd
addr16
mov
fmuls
js
push
inc
lret
in
xchg
dec
jno
sti
push
mov
aas
pop
std
dec
push
sub
pop
and
test
adc
bound
pop
mov
ja
add
jns
les
cmpsl
enter
sbbb
lret
sarl
adc
mov
pop
flds
inc
ljmp
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
idivl
fs
adc
adc
call
push
mov
xchg
jb
adc
lods
fadd
pop
rclb
bound
sbb
jge
sbb
mov
movl
push
jns
sahf
loop
or
or
test
adc
pop
pop
daa
les
lods
sbb
jp
cmpsb
inc
fcompl
mov
addb
insb
imul
mov
inc
jae
cwtl
mov
fwait
pop
cmc
jns
shll
jp
fcoms
pop
jbe
xchg
loop
inc
in
xor
inc
test
addr16
push
cld
pop
stos
adc
xchg
lahf
in
adc
xor
cmp
cld
icebp
stos
in
jl
nop
pop
movsl
or
sbb
fstl
lret
test
cltd
and
popf
lods
jb
dec
test
ret
fisubs
cld
pop
loope
je
jl
inc
mov
push
add
data16
pusha
inc
and
test
pop
dec
mov
pop
shll
je
cmp
jmp
lods
jno
adc
xchg
pusha
push
es
push
dec
cmc
xor
insl
mov
push
daa
aam
adc
mov
mov
ficompl
mov
cli
inc
mov
dec
cmpsl
shr
daa
jge
push
mov
shlb
leave
pop
sub
sub
xchg
sbb
sbbb
sbbl
cld
aaa
ljmp
popf
push
lea
rclb
lret
or
imul
cmpsb
inc
cs
sub
adc
pop
inc
jecxz
cmp
xor
add
cmp
cmp
scas
jo
dec
sti
sbb
adc
icebp
stc
adc
sub
jp
xor
test
sub
out
pop
sbb
cmp
jne
mov
aam
fninit
inc
jmp
orl
mov
push
cltd
hlt
push
adc
sbb
jmp
fnstenv
mov
aam
test
dec
scas
sbb
aad
sbb
movsb
mov
gs
mov
add
fcoms
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
add
loope
mov
fnstenv
xchg
aad
jle
mov
cld
mov
dec
jge
push
and
cmp
out
push
adc
lea
int3
inc
add
les
mov
push
pop
sarl
jns
divl
push
adc
bswap
ret
aaa
lret
stos
mov
stc
lret
mov
jmp
fsub
sbb
adc
imul
rclb
ret
xor
xchg
add
testb
and
test
mov
mov
ja
lret
jl
jge
mov
inc
hlt
or
or
ja
dec
bound
inc
sub
rolb
push
push
add
fbld
jnp
fdivr
bound
sbb
xor
into
lret
cld
in
xchg
mov
sub
in
sub
xor
cmp
and
dec
or
xchg
cltd
inc
repnz
xchg
arpl
inc
enter
test
push
adc
xchg
ror
sbb
enter
and
jge
dec
addl
inc
aas
decl
mov
fcomip
outsl
repnz
sub
push
stos
clc
cmpb
lret
push
jno
or
daa
cld
aam
loopne
js
out
sub
iret
xchg
fxtract
shrl
cwtl
and
sbb
xor
mov
lods
push
mov
pop
roll
int3
xor
xorl
sbb
jl
cmp
aam
sbb
xor
andb
xor
and
or
stos
hlt
test
stos
pop
pusha
pop
test
sub
cmp
addr16
jne
inc
jae
mov
call
xor
in
daa
adc
mov
push
aaa
xchg
push
clts
dec
ljmp
adc
lods
out
rcrl
clc
inc
cmp
outsb
in
push
jg
dec
push
out
je
das
es
jno
pop
mov
inc
xchg
insb
pushf
inc
out
out
xchg
rorl
and
movl
sub
mov
movl
jmp
adc
add
jnp
bound
ss
pop
filds
pop
adc
adc
daa
insb
sbb
clc
out
mov
jp
fdivr
sub
add
jle
adc
and
xchg
xchg
out
pop
inc
das
jmp
aam
rcll
and
jmp
fcoms
shlb
pop
inc
adc
xchg
sub
or
push
testb
rcrb
je
xor
mov
loop
inc
add
mov
xlat
inc
push
mov
inc
fst
retw
lcall
cwtl
aad
jae
std
add
lahf
inc
stos
pop
pop
das
cld
pop
inc
or
cmp
pushf
pop
inc
aam
inc
rcl
jne
cmpsl
cwtl
leave
jo
push
dec
fdivl
xor
sbb
hlt
xchg
jns
push
int
cmp
rol
aam
push
adc
popa
add
pop
xor
add
xchg
fst
push
mov
push
lods
add
fwait
cwtl
shl
lods
cmp
leave
inc
ds
add
fsubl
movsl
pop
jns
adcb
xor
push
or
xor
pop
mov
xchg
enter
mov
lds
mov
out
add
add
xor
add
and
mov
dec
out
loopne
jnp
mov
dec
aam
dec
pushf
shl
mov
clc
insl
cmp
pusha
push
sub
add
inc
in
jno
adc
pop
int
xchg
in
iret
mov
aam
pop
nop
mov
mov
aas
int
sbb
inc
adc
xor
mov
leave
dec
mov
ljmp
cld
dec
aas
cmpsb
popa
mov
push
mov
lret
adc
inc
into
xor
or
roll
pop
icebp
cmpsb
dec
or
test
add
cmp
sub
flds
cmp
mov
xchg
fiaddl
push
or
out
insb
and
jmp
int
div
aad
xchg
pop
bound
cltd
jno
ss
call
vmovdqu
sub
xchg
adc
and
xchg
cmp
pop
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
imul
pop
adc
adc
subl
decb
ja
aad
mov
and
add
ds
xchg
jb
jg
cmp
dec
jmp
push
xchg
pop
das
jnp
push
insw
lods
hlt
mulb
adc
adc
sahf
mov
xor
inc
xchg
aad
mov
or
cmc
movsl
mov
fisttpl
insb
icebp
lcall
rcll
xor
push
sub
fcoms
push
iret
or
fisubrl
xor
arpl
fisubs
aas
shll
inc
jmp
push
cmpsb
xor
outsb
mov
mov
mov
scas
mov
sbb
out
xchg
pop
jb
xor
sub
cmpsl
insl
sbb
cmp
xor
mov
mov
or
sub
ss
mov
sti
sbb
shlb
mov
add
jp
push
adc
in
mov
mov
out
shl
in
or
aam
adc
pop
jp
dec
add
mov
call
out
ja
cmpsb
xor
xchg
xorl
js
popa
lret
cmp
icebp
and
jmp
adc
xor
out
bound
fadds
aas
mov
push
pop
mov
mov
cmpsl
lret
xchg
mov
cmp
lahf
inc
mov
dec
dec
lret
xchg
inc
out
jnp
out
sbb
stos
pop
imul
lcall
mov
add
daa
outsb
enter
mov
fwait
mov
and
stos
loopne
aam
data16
xor
and
mull
pop
xor
push
xchg
sbb
jge
sub
inc
out
shrb
mov
in
shlb
or
adc
sbb
xchg
jns
bound
add
and
in
je
mov
sub
push
mov
and
iret
outsl
scas
push
stc
pop
pushf
mov
test
loopne
movsb
mov
push
xchg
push
das
rclb
lock
add
jb
rcll
pusha
mov
jmp
cmp
repnz
sub
lods
cmc
push
cmp
and
sub
mov
xchg
shr
dec
je
xchg
int
shlb
fidivl
in
dec
test
and
ret
and
std
mov
adc
sub
add
shrl
or
hlt
stc
push
adc
or
pop
arpl
lret
sahf
inc
sbb
adc
into
mov
pop
movsb
inc
adc
test
xor
fsubrs
ja
push
aam
jo
jg
cmp
out
mov
mov
inc
bound
push
inc
sbb
dec
cmp
repnz
xchg
cwtl
bound
daa
jbe
movsb
mov
mov
pop
fimull
popf
sub
dec
jo
mov
mov
test
aaa
repz
mov
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
stos
push
adc
adc
adc
mov
popa
fmuls
push
aas
jecxz
iret
jecxz
out
cmp
nop
xchg
pop
fisttps
push
xchg
jp
xchg
call
push
push
aaa
push
imul
movsl
add
push
jne
dec
enter
aad
test
xor
loop
ljmp
out
fcomps
imul
lock
jge
test
add
inc
bound
mov
ret
xchg
adc
negb
aaa
fmull
push
sub
cld
ficoml
dec
sub
mov
scas
adc
adc
in
adc
inc
xor
sbb
stc
sub
nop
dec
and
jne
jno
jle
into
dec
int3
ss
dec
mov
add
les
or
bound
mov
out
inc
xchg
or
pushf
add
xchg
mov
jle
mov
sbb
dec
ds
fiaddl
or
inc
pop
jae
push
jo
test
jo
adc
loopne
and
add
mov
jle
out
pop
fwait
arpl
repnz
pushf
push
lret
mov
addr16
outsl
add
jns
hlt
xor
scas
dec
into
shlb
mov
lret
mov
sub
popa
nop
cs
arpl
das
out
push
enter
push
dec
roll
inc
dec
sub
pop
jle
adc
add
inc
cvtps2pi
in
pop
pop
pop
lock
testl
insb
call
lods
fdivr
mov
jp
fwait
inc
pop
andl
jmp
mov
scas
xor
es
mov
add
or
orl
pop
mov
les
or
std
loop
pop
mov
imul
clc
outsl
lcall
dec
xchg
sub
xchg
mov
loop
out
jg
testb
shll
dec
pop
sub
pop
jp
jo
mov
fsubrp
or
inc
or
movsb
fstps
mov
adc
sbb
jo
push
pusha
test
lahf
xchg
outsl
mov
pop
inc
pusha
adc
out
imul
cmc
push
jmp
pop
adc
mov
orl
shrb
divl
clc
add
inc
movb
fmull
pop
cmpsl
nop
shll
pop
shl
fcomps
pop
mov
movsl
pop
xchg
dec
cwtl
popa
leave
test
or
cltd
inc
sarl
cli
sbb
adc
mov
jb
and
inc
out
pop
lahf
cmp
sbb
outsb
cld
sub
test
jl
and
rol
in
fistpll
jno
or
inc
in
add
lods
sub
scas
adc
test
inc
push
jmp
add
cmp
inc
xor
outsb
xor
sbb
insb
rol
scas
test
addr16
sahf
jb
and
mov
pusha
js
jno
push
inc
mov
or
cmp
mov
sbb
sbb
inc
mov
xor
pop
jnp
mov
and
pop
je
jbe
dec
pop
adc
shlb
mov
sub
pop
call
xchg
mov
out
mov
sbb
pushf
or
push
cmp
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
