push
mov
sub
push
lea
push
addl
push
subl
call
xorl
push
incl
xor
inc
movl
push
decl
push
andl
call
xorl
test
movl
je
xor
movl
jmp
push
xor
mov
incl
push
addl
push
call
andl
test
je
sbbl
lea
push
orl
call
jmp
push
inc
mov
push
adcl
push
push
orl
call
andl
test
movl
jne
mov
orl
push
sbbl
push
adcl
call
test
movl
je
orl
push
xorl
push
push
subl
call
adcl
test
jne
push
push
call
xorl
test
movl
jne
addl
push
orl
push
push
call
xorl
test
jne
andl
push
push
sbbl
call
movl
jmp
movl
add
mov
mov
movl
addl
movl
lea
mov
mov
sub
sub
mov
xor
lea
mov
xor
add
xor
mov
mov
movzbl
or
mov
mov
mov
mov
addl
xor
xor
mov
andl
add
mov
mov
cmp
jne
sbbl
mov
mov
inc
mov
xor
addl
add
mov
negl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
add
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
sub
sub
mov
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
mov
dec
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adc
movl
movzwl
xor
mov
mov
xor
orl
add
movl
jmp
adc
mov
addl
xor
subl
lea
orl
push
negl
mov
xor
adcl
lea
orl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
pushl
adcl
call
movzbl
sbb
mov
adc
xor
sbb
lea
mov
add
mov
mov
adcl
xor
xorl
xor
add
xor
mov
sbbl
xor
lea
movl
cmp
jbe
mov
and
mov
mov
movl
mov
sbb
mov
neg
mov
sub
xor
movl
mov
mov
mov
movl
cmp
movl
jne
orl
push
xor
movl
inc
andl
push
push
adcl
call
orl
test
jne
xorl
push
push
xorl
call
test
jne
adcl
push
push
push
call
test
movl
jne
addl
push
negl
push
andl
call
orl
test
jne
sbbl
lea
subl
mov
lea
orl
mov
xor
mov
andl
test
je
xor
mov
mov
xorl
mov
andl
xor
add
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
xor
xor
dec
mov
jmp
cltd
mov
movl
cmpl
je
cmpl
ja
jmp
call
xor
add
dec
mov
jmp
mov
add
mov
adc
and
andl
xor
mov
mov
mov
and
mov
andl
xor
add
mov
movl
adcl
adcl
xor
subl
mov
mov
xor
mov
movl
cmp
movl
jne
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
orl
mov
addl
mov
xor
add
adc
xor
xor
cmp
movl
jne
cmp
movl
jne
mov
orl
mov
sbbl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
call
jmp
mov
mov
mov
add
notl
mov
jmp
mov
movl
cmp
movl
je
xor
xor
adc
mov
mov
mov
xor
add
movl
cmp
movl
je
xorl
push
xor
inc
sbbl
push
subl
push
adcl
call
orl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
push
push
sbbl
call
orl
test
movl
jne
push
addl
push
call
addl
test
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
mov
mov
mov
pushl
movl
mov
pushl
movl
add
mov
orl
mov
movl
pushl
sbbl
call
mov
mov
movl
mov
jmp
adcl
push
adcl
xor
sbbl
inc
notl
push
push
call
orl
test
movl
jne
orl
push
addl
push
addl
call
addl
test
movl
jne
xorl
push
push
push
call
test
movl
jne
subl
push
push
call
test
movl
jne
andl
push
push
push
call
test
movl
jne
adcl
push
subl
push
call
notl
test
movl
jne
sbbl
push
push
subl
push
call
test
movl
jne
subl
push
adcl
push
sbbl
call
test
movl
jne
mov
andl
mov
inc
mov
cmpl
ja
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
decl
add
movl
cmp
jne
sbbl
mov
mov
andl
mov
xor
subl
add
cmp
jne
movzwl
and
mov
adcl
push
xor
add
adcl
push
decl
push
sbbl
pushl
andl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
xor
mov
inc
lea
mov
lea
mov
mov
test
je
push
push
push
call
test
jne
push
push
call
test
jne
push
push
push
call
test
je
lea
push
call
jmp
push
push
call
test
je
xor
jmp
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
mov
mov
addl
mov
movl
movzwl
sub
mov
dec
jmp
sub
jae
xchg
xchg
pop
int3
inc
jecxz
aam
jl
jl
pop
jl
adc
and
popa
pusha
fs
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
pusha
iret
sub
ja
push
sub
scas
xor
fidivs
aas
and
dec
ja
insl
pop
xchg
xlat
pusha
adc
add
xor
add
mov
push
cmp
icebp
mov
dec
add
popa
repz
lds
into
add
fcomps
mov
mov
test
cmp
pop
hlt
pop
pop
nop
inc
arpl
shl
add
mov
dec
mov
movsb
inc
inc
push
mov
in
repz
xchg
push
or
into
add
sub
and
ret
lret
adc
add
aas
scas
and
pushf
stc
shl
loope
mov
sbb
cmp
test
insb
and
outsb
or
aam
idiv
xchg
inc
dec
out
push
cmp
adc
scas
add
pop
movsl
pusha
cmp
dec
inc
rcrb
rep
mov
fisttps
cmpsl
fstl
sub
xchg
push
sbb
add
dec
inc
adc
mov
cmp
outsb
icebp
xchg
and
xor
mov
icebp
jmp
lock
std
scas
sbb
inc
or
add
stos
sti
mov
or
lret
insb
or
gs
pop
sahf
lods
lret
scas
mov
mov
int3
lcall
mov
xchg
push
les
cmpsl
sub
xchg
mov
movsb
mov
mov
out
pusha
lret
lods
inc
xchg
xor
xchg
and
xor
adc
iret
sarl
xchg
mov
ret
pushf
aaa
push
adc
jmp
movmskps
iret
in
adc
xchg
jg
icebp
ljmp
or
popa
fsubs
aam
in
sbb
xlat
xchg
dec
sahf
cmp
fimull
push
xchg
lea
ret
jae
inc
mov
je
mov
jmp
enter
or
xchg
dec
push
sub
int
pushf
or
inc
popa
push
push
mov
pop
dec
loope
cmp
sbb
sub
xor
xchg
sahf
adc
mov
in
mov
icebp
scas
in
add
gs
je
cli
push
push
and
xchg
jo
push
jb
mov
in
pop
fbstp
test
repnz
insb
adc
cmc
dec
sbb
cmp
add
xchg
lock
test
push
pop
iret
cmp
mov
xor
push
or
xchg
scas
xor
push
ljmp
addr16
mov
push
adc
push
test
lods
imul
roll
mov
enter
pusha
jne
xchg
add
sti
push
sub
sbb
dec
push
pmullw
adc
sub
out
add
pushf
cmpsl
mov
fs
in
lret
mov
clc
ret
lret
rclb
cmp
ss
enter
test
fidivrl
mov
xchg
mov
dec
mov
push
push
xor
data16
sub
or
into
jbe
xor
rclb
sbb
inc
out
loopne
sub
imul
push
inc
dec
lret
addr16
and
orb
or
outsl
divl
mov
mov
adc
in
movsl
lods
outsl
lea
lods
lahf
clc
les
mov
lock
sahf
sbb
inc
or
js
fsubrp
adc
mov
fistpll
int3
test
fnstsw
imulb
cmp
push
adc
in
ljmp
arpl
push
das
lahf
inc
or
pop
aaa
sbb
or
push
mov
clc
cld
call
nop
sbb
movsl
push
icebp
jge
popa
push
jae
test
sub
incl
sbbl
pop
mov
cltd
popa
scas
cmp
fisubrs
inc
imul
xchg
mov
subl
loopne
and
mov
mov
iret
je
repnz
cmp
icebp
popf
jns
pop
imul
js
in
fldenv
push
jae
cmp
jae
mov
insb
and
jno
fmuls
adc
sub
pop
mov
orl
shlb
mov
push
ds
icebp
call
loopne
pushf
dec
adc
jmp
mov
mov
rcr
push
push
jno
adc
xor
repnz
dec
or
mov
jnp
lea
cmp
sbb
in
in
pop
and
dec
flds
adc
outsl
test
mov
fsubl
push
dec
negl
push
test
mov
cmp
sbb
fsub
fld
inc
cli
mov
dec
or
out
sub
rol
aas
sbb
iret
xor
mov
mov
pop
es
idivb
jno
ja
icebp
popa
add
aam
dec
scas
stc
shl
lahf
add
dec
dec
cmp
add
fidivl
rol
je
int
pop
pushf
add
pop
jo
pop
mov
push
add
mov
adc
movsl
xor
sti
xchg
out
movsl
push
cltd
fwait
mov
clc
jns
jo
sub
dec
pop
popf
sub
mov
cmpl
test
ret
inc
test
shll
stos
jae
mov
pusha
inc
in
fistpll
add
cmp
ret
and
xorl
sub
push
leave
rol
xchg
aaa
subl
or
pushf
push
lock
icebp
add
mov
mov
inc
movsb
int
aad
dec
or
sbb
jnp
fwait
cld
or
ret
ret
outsl
sbb
sbb
inc
stos
stc
nop
xchg
mov
jp
outsl
dec
in
pop
aaa
sbb
pop
aam
cmp
fsubrs
cmc
call
jl
sbb
aas
daa
pop
imul
repz
pop
mov
call
jg
mov
cld
scas
xchg
xchg
lret
in
inc
imul
sti
mov
sub
sub
mov
mov
adc
aad
and
loope
xchg
xchg
sub
or
shll
sbbl
pop
sbb
sub
nop
sar
out
lret
mov
dec
sub
push
sub
push
push
lcall
lds
adc
sub
lock
jmp
sub
fidivl
add
xchg
mov
push
loope
rclb
add
jbe
dec
mov
ja
stos
sbb
test
pop
adc
test
lea
ret
out
and
fucomp
lock
jbe
adc
pusha
inc
pop
test
mov
push
cmpsl
push
adc
fcompl
pop
mov
rcrb
sub
rcr
jl
adc
hlt
pusha
and
data16
aam
mov
xchg
adc
out
ret
mov
jbe
popa
ja
or
inc
lods
push
test
lret
mov
js
ja
fdivrl
mov
mov
and
enter
adc
dec
cli
cmp
cmp
dec
adc
sub
fwait
mov
js
push
mov
mov
and
lods
dec
sub
sub
dec
xchg
push
mov
in
into
ljmp
add
es
inc
shl
shll
jge
xor
movsb
pop
loop
rcrb
sub
cmp
sub
lret
cmp
decl
push
sub
ljmp
aaa
aam
adc
jl
push
adc
sub
testl
cmp
inc
sbb
and
cmpsl
ret
test
into
lret
imul
insb
ds
imul
cs
test
dec
adc
add
dec
jl
lods
repnz
dec
mov
dec
stc
jmp
mov
adc
inc
xor
pop
pop
add
mov
das
mov
insb
movsb
out
or
mov
inc
or
lret
mov
loopne
dec
push
shlb
outsl
cmp
jge
or
mov
xchg
lret
imul
outsl
mov
xor
inc
mov
cmp
jns
into
or
inc
std
int
sbb
sbb
xchg
xor
push
add
jo
mov
mov
fcmovnb
cmp
dec
mov
push
xor
adc
and
int3
in
pop
insl
add
je
dec
mov
and
ljmp
repnz
aad
lods
movsb
push
icebp
movsl
and
stos
mov
aas
and
cmp
sbb
clc
jmp
push
inc
jge
rcrl
fsubl
into
cmp
fstp
jnp
movsl
mov
es
cmpsb
dec
push
test
push
rclb
fidivl
and
imul
cs
sub
and
imul
imul
or
leave
bound
push
shr
mov
pop
pop
mov
cmp
scas
mov
push
mull
cmp
adc
mov
mov
jecxz
lcall
xchg
push
xor
push
leave
sbb
xchg
mov
scas
outsl
dec
movb
pop
insl
orl
add
dec
out
mov
dec
rolb
xor
sub
dec
fistpl
lahf
dec
jl
cmp
sub
fiadds
and
cmp
mov
mov
dec
cmp
lret
imul
mov
sub
and
in
or
adc
xchg
aaa
pop
mov
pop
add
loop
jle,pt
mov
enter
stos
stos
insl
dec
or
inc
scas
popf
mov
jb
xor
xlat
jl
mov
sti
fcmovbe
imul
mov
lods
das
jno
ret
inc
sar
stos
xor
scas
xchg
add
das
and
xor
adc
cs
inc
mov
push
shll
jge
incl
sbb
dec
adc
xorl
pop
mov
scas
pop
arpl
and
out
gs
repz
pop
movsb
repz
xchg
std
sbb
daa
xor
mov
jae
negb
lock
pop
add
jp
mov
cmp
pop
test
sub
jo
insl
xor
lcall
testl
fldl
pushf
aad
fstps
lcall
cltd
cmpsb
imul
iret
mov
jmp
cmp
xchg
sub
movsb
and
pop
daa
dec
rcll
cmpb
outsb
clc
inc
add
dec
adc
sub
pushf
jo
pop
xor
mov
xor
test
pop
mov
ret
mov
rcrb
inc
pop
js
pop
aam
lods
pushf
fldl
sub
and
mov
cld
fnstenv
lock
aad
cmp
mov
inc
push
shrl
mov
pop
mov
lea
dec
mov
or
lds
or
ljmp
mov
notb
inc
lret
pop
je
sbb
add
add
xor
gs
mov
fcoms
adc
jl
cmpsb
mov
xchg
repnz
cmp
lods
cvtpi2ps
cmpsl
cmp
mov
mov
jmp
out
or
out
loopne
ja
or
xchg
lods
test
iret
inc
dec
nop
pop
add
or
cmpsb
mov
push
mov
popa
clc
fmuls
pop
jg
dec
ret
std
mov
aad
and
xlat
sub
in
fbld
sub
mov
mov
mov
dec
jmp
repnz
in
into
sub
cmp
test
mov
popf
test
jle
push
pop
sbb
add
cmp
push
mov
push
adc
cmp
dec
dec
ss
cmpsb
jg
inc
jae
xchg
jl
xor
popf
arpl
js
fs
stos
jle
sub
mov
in
sarb
mov
xchg
aad
push
repz
xor
fs
add
adc
xchg
fsubrl
lods
mov
fcompl
shlb
das
je
mov
adc
shl
inc
mov
lcall
out
sub
out
xchg
cmp
repnz
push
movsl
insb
xchg
into
das
outsl
pushf
cmc
mov
je
jle
rol
arpl
lret
sbb
mov
push
jp
in
pop
nop
fildl
ss
icebp
jmp
push
lods
iret
jb
jp
movsl
pop
lods
or
fnsetpm(287
cmp
xchg
cli
mov
xchg
sub
pop
in
push
mov
ror
fistl
or
cmpsb
lcall
add
outsb
push
jns
add
add
mov
mov
in
and
pop
ret
push
adc
jno
shll
push
fsubl
or
adc
xor
cli
mov
push
idiv
add
iret
mov
loope
xchg
pop
cltd
ljmp
fs
jb
pop
nopl
ss
dec
inc
push
inc
push
inc
dec
dec
ffree
leave
jne
test
lret
push
dec
jne
cmp
daa
lcall
loopne
adc
xchg
push
or
imul
sub
dec
movsb
xchg
pop
add
movsb
fdivs
outsb
add
fnstcw
mov
and
shl
fwait
sub
aas
mov
push
cltd
adc
dec
mov
iret
add
push
jb
das
push
andl
add
mov
dec
and
lret
sti
xor
inc
sub
call
push
jae
or
adc
and
int3
push
adc
int3
cltd
mov
inc
jae
cmp
ljmp
adc
and
jg
enter
adc
mov
lock
pop
call
xchg
cmc
adc
push
cmp
cs
mov
iret
inc
cmp
xlat
pop
lcall
mov
xchg
repz
insl
pushf
push
jb
or
dec
dec
ret
xchg
cmp
shll
and
es
scas
lahf
out
sbb
mov
jns
fs
cmp
fwait
xchg
mov
repz
ret
adc
mov
push
mov
sahf
pusha
mov
test
sbb
or
adc
pop
push
les
xchg
xchg
or
dec
ret
mov
notb
int3
sete
sub
jg
mov
adc
dec
fdivl
mov
dec
outsb
push
push
add
dec
mov
and
cmp
dec
add
stc
lcall
sbb
into
sub
ret
sti
movb
jg
out
jg
fadd
add
and
push
push
shl
push
xor
and
jge
mov
mov
adc
mov
in
push
mov
jo
mov
jo
pop
mov
pop
mov
adc
mov
and
mov
push
mov
or
stc
aaa
loopne
jge
stos
stos
inc
or
andl
in
mov
add
fistpl
mov
sub
jg
cmp
test
xchg
mov
pop
faddl
inc
pushf
sbb
push
in
insl
nop
mov
sbb
icebp
mov
pop
inc
mov
lret
in
dec
sub
xor
mov
fstp
out
hlt
pop
mov
xor
icebp
lods
push
sar
mov
ja
insl
cmp
xor
mov
mov
mov
jle
testl
push
js
xor
sub
xchg
mov
gs
mov
push
jp
mov
jno,pn
dec
negl
push
mov
fldcw
cli
sar
mov
dec
jbe
sub
in
addr16
fildll
jne
gs
ss
scas
fsubrl
inc
mov
sub
push
shl
imul
cmp
and
negl
pop
mov
rcl
test
fidivrl
cld
movsb
mov
orl
dec
or
ss
dec
lcall
add
addl
adc
sbb
fwait
mov
cmp
push
xchg
ds
je
jmp
dec
inc
lods
sbb
push
in
push
pop
fdivr
ds
jbe
jnp
sub
pop
push
in
mov
fcomps
mov
sbb
pushf
dec
lret
hlt
call
clc
out
xchg
mov
mov
lret
in
mov
out
jp
add
adc
mov
call
hlt
xchg
mov
es
add
aaa
test
cmp
lret
rorl
or
jae
xchg
jg
scas
outsb
imul
mov
inc
bound
jnp
sub
or
sub
sbb
std
hlt
adc
loopne
lds
cmpsb
lock
in
push
push
inc
xchg
sbb
or
sub
pop
mov
add
jge
pop
push
mov
xor
push
pusha
hlt
stos
jmp
mov
xchg
xlat
incl
push
hlt
jns
sbb
xchg
cmpsb
jno
in
ret
cmp
jg
add
fsub
mov
jns
push
lret
les
int
scas
idivb
cmp
add
loopne
jge
xor
push
mov
or
imul
jg
shrd
jp
xor
xor
shll
gs
roll
pxor
mov
fbld
and
movsb
fnstcw
call
jo
sbb
jbe
mov
sub
nop
add
clc
xchg
xchg
lahf
push
jl
push
sub
push
lds
cmp
inc
mov
sbb
ret
push
mov
out
pop
xchg
std
sub
sub
std
movsb
roll
iret
sub
dec
outsb
adc
lods
aas
es
mov
imul
fistpll
nop
lea
sub
pushf
ficoms
outsb
inc
or
adc
add
pop
call
dec
cmp
dec
mov
inc
loopne
cwtl
push
sarb
nop
jmp
pop
movl
js
aaa
mov
cmp
mov
je
lcall
test
or
scas
mov
incl
pushf
fucomp
jne
inc
xchg
add
es
or
or
inc
sbb
inc
sbb
test
dec
mov
inc
sbb
int
xor
rclb
sbbb
out
and
sub
sub
in
fsubrs
in
movsl
dec
and
push
mov
mov
mov
fsubl
insl
cwtl
jb
mov
fildl
into
outsb
movsl
lock
adc
pop
les
shll
scas
pop
shl
add
repz
scas
mov
sub
sbb
jg
clc
nop
jl
idivl
xor
mov
push
je
push
adc
pop
inc
push
xchg
xchg
sbb
add
sbb
mov
fwait
loopne
mov
mov
movsl
lcall
in
mov
push
or
test
dec
or
popa
adc
imul
das
jnp
in
sub
mov
jne
lea
adc
xor
fiadds
jno
push
fwait
shll
add
cmp
data16
dec
pop
dec
lcall
sbb
rolb
sub
and
cmc
fimuls
and
mov
lret
add
scas
lret
inc
leave
dec
jb
insb
stos
out
ja
sti
and
push
shrl
mulb
cmp
lds
dec
mov
mov
int3
loop
inc
mov
lret
out
mov
jns
imulb
stc
pop
jmp
adc
std
rolb
lods
loope
movsb
or
jae
push
loopne
fidivl
stos
inc
mov
mov
xchg
mov
fnstcw
and
outsb
fmul
pop
jle
sbb
and
repz
push
or
es
test
push
fsts
outsl
jns
arpl
cmpb
ss
pop
movsl
loopne
loope
in
int3
ja
adc
rorl
outsl
dec
fmuls
mov
in
adc
cwtl
rorl
xchg
xor
arpl
mov
mov
pop
push
jg
mov
repz
lock
sbb
icebp
or
test
pop
sub
lods
pop
std
hlt
xchg
jle
hlt
jbe
xchg
lret
bound
adc
cmp
cmp
insl
loopne
stos
int3
dec
stos
sbb
sub
sub
cmp
ficomps
pop
out
or
xchg
aad
scas
xor
jae
mov
lods
sbbl
pop
adc
repnz
dec
or
mov
sbb
lds
aam
dec
mov
repnz
pusha
mov
mov
je
push
repz
jl
data16
fcoml
mov
popf
push
nop
jb
mov
jl
outsl
mov
mov
cmc
je
fucomi
lock
and
aam
and
sbb
mov
fimull
or
in
sbb
push
dec
push
repnz
sub
lods
adc
xor
mov
addr16
and
movb
fidivl
dec
mov
pop
pop
cwtl
dec
nop
mov
mov
jl
pusha
pop
xor
arpl
pushf
fwait
iret
ss
sbb
cmpb
lcall
mov
jnp
rorl
jmp
fwait
xchg
mov
fs
dec
inc
iret
xchg
popa
loop
and
jg
js
add
xchg
movsl
lds
mov
push
inc
jb
je
je
push
adc
pop
sub
aaa
fwait
in
cmp
scas
lds
test
sub
idivb
ret
sub
sbb
ljmp
mov
mov
lods
push
mov
in
mov
iret
adc
int
xchg
shlb
repnz
jns
test
gs
sub
inc
adc
ss
icebp
enter
mov
bound
dec
fcomip
and
sbb
cli
sahf
mov
add
sarb
jo
pop
cmp
mov
lcall
cmp
fidivrl
xlat
inc
test
and
cmp
inc
xor
dec
jl
cwtl
mov
repnz
imul
sub
mov
and
mov
movsl
lahf
lds
jge
xor
fsts
push
add
std
mov
int
repnz
cmp
aaa
cmp
popa
inc
clc
icebp
adc
adc
sbb
inc
jno
mov
mov
mov
push
in
fnstsw
push
add
fnsave
arpl
sti
inc
adc
lds
imul
sbb
inc
mov
mov
jl
mov
imull
pop
jo
push
sbb
sbb
cwtl
and
mov
cmpsb
movsl
jge
push
mov
sbb
repnz
sbb
aad
addb
mov
sbb
test
out
sbb
fwait
sub
divb
fildll
xlat
jns
mov
fstl
dec
add
pop
nop
orb
shll
mov
scas
cltd
xchg
cwtl
icebp
loopne
mov
xchg
pop
mov
test
jge
lcall
adc
xchg
xor
js
and
xchg
push
imul
flds
es
push
and
arpl
ret
mull
lds
insb
mov
ret
std
inc
xor
mov
jae
push
test
xchg
mov
stos
or
scas
cmp
sbbl
mov
imul
pop
jl
xor
xchg
fcoml
jns
jo
scas
enter
mov
dec
and
sub
jle
pop
pop
scas
mov
pop
sar
test
mov
mov
into
clc
lds
pop
add
cltd
mov
rcr
adc
xor
push
push
jle
mov
or
dec
cmp
add
hlt
push
outsl
push
mov
popa
cmp
outsb
pop
cwtl
gs
push
addr16
inc
test
mov
daa
adc
insl
test
mov
insb
stc
dec
int3
and
push
mov
ljmp
mov
sub
jle
inc
add
shll
jb
push
and
mov
lcall
mov
into
sahf
jle
push
pop
xchg
enter
mov
movsb
fucompp
lds
insb
cmp
cmc
popa
stc
dec
je
loopne
loop
daa
push
and
dec
adc
out
ficoms
out
sub
add
hlt
dec
sbb
mov
dec
xchg
pop
mov
stc
loopne
nop
push
shl
or
xchg
mov
dec
mov
daa
and
fcmovne
fwait
jne
dec
ret
pop
mov
push
and
cmpsl
cwtl
cmp
repz
in
sbb
xor
ficomps
popf
mov
int
cmc
imul
jae
dec
stc
stos
mov
jb
aad
test
and
and
fbstp
mov
dec
aam
adc
xor
dec
call
adc
test
fcmovnu
or
jo
xor
push
outsl
mov
test
push
xlat
fidivl
xchg
mov
push
and
push
out
mov
movsb
cs
insb
ret
mov
fsubrs
mov
dec
sbb
cwtl
nop
sbb
mov
pop
xchg
insl
xor
stos
ret
std
pop
pusha
lcall
fnstsw
and
or
adc
imulb
imul
mov
dec
movsl
jp
push
jo
fadds
mov
pop
xor
dec
xchg
dec
sub
out
scas
enter
test
lret
add
sarl
and
adcl
and
push
in
lods
repnz
out
repz
adc
mov
leave
push
add
testb
push
stos
xor
enter
lods
imul
jbe
jge
test
in
inc
xor
repnz
mov
in
mov
repnz
testl
dec
push
fisubrs
lret
lds
cmp
test
adc
fildll
test
jecxz
in
imul
cs
fdivs
or
push
mov
stc
popf
push
stos
je
pop
outsb
jmp
mov
jb
inc
inc
aam
mov
push
push
push
mov
pop
add
into
push
lcall
lock
mov
jecxz
fildll
lret
inc
mov
add
imul
dec
cltd
mov
fmul
lods
cmp
fistpll
mov
pushf
mov
add
out
insb
mov
lcall
dec
jmp
loop
or
mov
cltd
push
fs
mov
and
cmpsl
jb
xor
push
inc
leave
fidivs
xor
je
aas
jae
ds
rep
bnd
push
je
addb
sub
iret
sub
sub
pop
pop
ss
cmp
and
xchg
test
jnp
or
cs
lock
jno
and
jno
sbb
xchg
stc
or
movsb
jne
iret
cmp
outsl
sahf
jl
mov
jecxz
and
adc
jo
loopne
fcoml
sbb
cmpsl
mov
adc
push
fs
repz
pop
sub
sti
ret
mov
pop
lods
xchg
fucom
lret
and
ss
push
mov
test
cld
jmp
mov
fistps
ljmp
dec
or
xor
pop
dec
lods
out
decl
and
rorb
out
ds
cmp
enter
push
inc
dec
repnz
repnz
cld
loope
lea
sub
mov
jge
dec
fdivrl
xor
mov
inc
or
das
repz
pop
cmp
add
cmp
push
jae
xchg
leave
and
mov
sahf
aas
iret
insb
in
adc
jno,pt
push
cmpsl
insb
xchg
out
sbb
cmp
cs
mov
cmp
int3
test
adcb
inc
inc
mov
jbe
jns
mov
and
pop
movsl
lcall
mov
xor
add
loop
add
cmp
movsl
scas
pusha
ds
cwtl
imul
enter
mov
inc
adc
xor
lret
push
jge
cmp
hlt
enter
test
inc
mov
mov
adc
cltd
fcoml
in
dec
out
add
pop
sbb
lret
cmp
jg,pt
dec
mov
mov
pop
jo
outsb
outsl
shrl
pop
imul
or
pushf
arpl
aas
xchg
icebp
sbb
scas
pop
xchg
popa
out
pop
adc
cmp
ljmp
sub
sahf
lret
mov
mov
je
cld
imul
stos
sub
and
imul
pop
adc
cmp
addr16
sbb
push
decl
into
out
sub
fucomp
test
std
divb
push
ljmp
xchg
adc
xlat
test
adc
xor
pushl
adc
test
mov
adc
jb
push
imul
filds
sbb
into
faddl
mov
push
imul
push
xor
arpl
push
aaa
hlt
test
in
add
sbb
xchg
fildl
fsubrl
repnz
pop
ja
xchg
pop
scas
xchg
test
bound
sbb
stos
and
das
cmp
scas
rorb
pop
mov
aam
jbe
add
dec
xchg
inc
jl
push
cmp
xor
xchg
jae
pop
inc
daa
mov
jbe
or
xchg
enter
add
mov
cmp
scas
xor
imul
out
or
je
les
dec
or
xor
mov
push
ret
addl
imul
fiadds
outsl
mov
mov
lahf
addr16
pop
lret
iret
jns
test
mov
cmp
sbb
imul
cltd
lcall
jl
xor
jle
pop
push
dec
push
add
xchg
mov
jne
mov
ljmpw
mov
or
adc
test
popf
push
pop
sarl
test
rcr
lahf
pushf
add
xor
scas
in
mov
jbe
adc
repnz
push
mov
fdivrs
mov
shlb
inc
xchg
inc
aam
sub
aam
push
push
fisttpl
cmpsb
mov
xor
xchg
mov
jle
call
in
negb
jo
inc
std
xchg
push
or
pop
pop
aaa
add
fdiv
aas
popf
cmp
int3
imul
xchg
mov
stos
jecxz
scas
ss
cmp
xchg
dec
sbb
ret
xchg
iretw
fwait
add
sbb
int3
dec
rcrl
mov
sbb
sbb
or
rcrb
sti
negl
popa
aas
cmp
jne
stc
sahf
inc
xor
mov
mov
js
rolb
dec
mov
and
mov
sahf
inc
clc
sub
dec
sbbb
das
inc
loopne
gs
push
push
mov
dec
push
cmc
mov
and
dec
or
jecxz
cmc
std
cmp
pop
cmc
inc
push
inc
lcall
sub
mov
aam
int
dec
call
cmp
cwtl
insb
lret
mov
xchg
pop
sbb
jnp
dec
cmp
mov
fdivrl
inc
jge
push
jo
mov
pop
cs
mov
sbb
enter
lret
fiadds
shlb
or
cltd
jl
loope
push
rcrl
cmp
xor
fstp
jp
imul
fwait
sub
sti
mov
nop
or
scas
adc
adc
or
cmp
push
or
mov
addl
xor
andl
xor
or
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
push
add
mov
add
movl
cmp
movl
je
mov
sbb
mov
xor
xorl
xor
add
movl
add
adc
incl
xor
orl
mov
push
xor
adcl
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
addl
movl
mov
movsbl
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
neg
sub
mov
xor
movl
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
orl
movl
mov
or
push
movl
adc
mov
xorl
push
xorl
mov
andl
xor
notl
push
mov
add
xorl
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
test
je
and
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
mov
or
mov
orl
mov
adc
xor
xor
or
xor
add
mov
addl
mov
xor
add
and
xor
andl
xor
add
inc
mov
cmpl
jg
jmp
push
pushl
push
pushl
call
cmpl
jb
add
movzwl
sbb
mov
mov
mov
and
xor
add
addl
mov
sub
mov
subl
xor
sub
add
adcl
mov
xorl
sub
lea
xor
adcl
xor
movl
cmp
movl
je
andl
xor
or
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
subl
add
cmp
jne
adcl
pushl
adcl
call
mov
sub
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
orl
xor
add
cmp
je
pushl
andl
pushl
xorl
call
sbbl
mov
or
mov
mov
or
mov
subl
xor
add
movl
cmp
je
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sub
mov
adc
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
or
mov
xorl
add
sbbl
mov
mov
mov
xor
mov
add
xor
add
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
add
push
xor
mov
mov
orl
mov
or
mov
andl
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
sub
sub
mov
mov
mov
sub
xor
mov
sub
movzwl
and
mov
mov
xorl
sbbl
mov
movl
cmpl
je
cmpl
jge
jmp
call
xor
xor
dec
mov
jmp
mov
movzbl
xor
sub
mov
sub
orl
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
sub
or
mov
orl
sbb
mov
addl
mov
or
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
push
out
push
jae
jae
das
push
sbb
pop
rcrl
jl
pop
jl
cmp
sahf
and
jne
mov
inc
inc
fs
lcall
pop
sub
outsb
sub
addr16
adc
and
sbb
sbb
jecxz
mov
xor
sahf
mov
xor
aas
daa
sbb
push
cmp
das
mov
and
mov
bound
fldcw
lods
dec
inc
dec
fdivr
mov
pop
in
mov
shrb
add
mov
imul
es
mov
cmp
push
pop
lret
jmp
jmp
mov
sbb
lods
push
cmpsb
pop
inc
mov
movsb
inc
xor
xchg
aaa
sub
adc
lahf
arpl
fists
mov
in
lods
xchg
xor
mov
xchg
jmp
filds
dec
daa
mov
mov
shlb
dec
mov
mov
adc
test
mov
pop
dec
es
xchg
aad
insl
aaa
shrb
push
gs
repz
inc
into
inc
jp
cwtl
jg
dec
call
xlat
sarb
mov
cmp
rcrb
arpl
xor
mov
fcompl
fwait
adcl
cld
jecxz
rcrl
push
in
and
inc
leave
or
inc
xchg
pop
cwtl
xchg
inc
mov
xor
stos
loopne
pop
sbb
mov
cmp
or
pcmpgtb
lcall
cmp
test
hlt
js
push
aad
jl
inc
push
pop
and
loop
xchg
insl
xchg
pop
fcomps
cmp
xchg
mov
pop
or
pop
cwtl
xor
scas
sub
negl
lock
jmp
sti
loope
sbb
xchg
pop
idivl
push
xchg
pop
sub
ljmp
les
push
das
xchg
inc
dec
push
retw
sub
pop
jb
cmp
inc
dec
adc
inc
lock
lret
ljmp
iret
ret
mov
test
mov
insl
js
jl
ror
test
mov
les
gs
pop
cmp
mov
jl
dec
aam
in
and
pop
add
dec
mov
push
fimull
xor
or
mov
xchg
aaa
and
sub
inc
sub
ror
popf
sbb
popa
xchg
cmp
arpl
xchg
fmuls
sbb
adc
cmp
mov
sbb
pop
jmp
mov
add
xchg
jnp
jle
mov
sub
sub
cmpl
pop
fisubrl
ret
shlb
out
das
xor
std
call
inc
int3
add
fistpl
lea
or
push
ljmp
mov
lcallw
fsubr
mov
adc
mov
mov
lahf
cmp
jb
sbb
aad
nop
and
cwtl
sbb
pop
das
dec
call
adc
xor
in
adc
test
inc
insl
xchg
adc
movsl
mov
cmp
lret
xor
xchg
cmpsl
add
es
mov
cmp
mov
or
testb
cmp
mov
push
in
fisubs
in
push
test
adc
pop
inc
mov
push
or
cmpsl
or
dec
les
adc
mov
bound
data16
lea
xchg
xchg
cltd
lahf
shrb
pop
inc
out
lods
stos
mov
pop
mov
pusha
mov
dec
mov
gs
or
push
lods
dec
les
movl
rcr
fists
jae
adc
addr16
inc
movl
fisubrs
xchg
sahf
mov
mov
push
inc
insl
add
push
push
mov
scas
std
cmpsl
sahf
insl
sarb
xor
xor
hlt
jp
push
push
add
sahf
or
fisttpl
xchg
pop
rol
jno
sub
dec
sbb
sti
stc
and
lret
xor
cmp
cmc
or
bound
ds
lretw
dec
mov
xor
xor
cmp
push
jne
inc
ds
in
dec
cmp
stos
xor
push
add
mov
and
sbb
int
or
dec
enter
test
jle
cmp
aam
in
es
int
into
dec
mov
add
test
and
xchg
push
jns
inc
xchg
cli
addr16
and
scas
jne
or
clc
decl
mov
jne
lcall
adc
inc
jl
fstpt
inc
out
test
fiadds
mov
movsb
iret
loopne
fxch
mov
cmp
fsubr
lret
inc
and
outsl
cmp
dec
mov
jo
push
jbe
shrb
insb
mov
sti
or
and
test
cli
fadds
add
mov
addb
pop
sahf
mov
out
push
aad
xchg
cmp
xchg
mov
hlt
cld
jle
scas
xchg
jle
sub
push
ss
jnp
imul
inc
xor
out
in
jae
pop
sbb
xchg
sti
add
push
add
es
mov
pop
daa
xchg
sbb
bound
sbb
ret
int3
fmull
sbb
mov
or
aas
jge
pop
popa
cmc
xchg
mov
pop
iret
jb
mov
lods
xor
popf
test
lret
insl
mov
sbb
add
popaw
mov
push
ds
pop
in
or
mov
scas
cmc
jle
jecxz
jl
pusha
loop
out
inc
mov
inc
dec
mov
xor
sub
cs
sbb
bound
and
inc
cmpsl
xchg
lock
out
repnz
and
int3
cli
or
iret
cs
adc
sbb
lret
nop
and
add
sar
xor
rolb
jecxz
mov
addb
push
push
loope
es
sbb
mov
sub
call
aas
adc
adc
notl
in
or
add
cmc
jbe
pop
pushf
xor
stos
imul
dec
jb
mov
out
jo
in
fstps
je
or
push
pop
test
stos
shl
lahf
pop
divb
gs
mov
mov
mov
repnz
ljmp
outsl
cli
push
adc
rcrl
mov
mov
shlb
mov
imul
int3
jge
pop
pusha
outsb
int3
xchg
xor
std
ja
xchg
jbe
rcl
in
xchg
cs
outsl
sarl
and
lahf
inc
mov
add
xor
roll
mov
jg
addr16
imul
mov
std
ja
pop
cmpsb
mov
sub
es
fisttpl
mov
lock
mov
mov
mov
sti
and
pop
scas
into
pop
popa
mov
shrb
mov
pop
adc
and
inc
inc
inc
mov
sub
and
out
jo
stc
jmp
xchg
rcrb
xlat
mov
pop
mov
dec
jb
cmp
js
cwtl
dec
test
scas
jno
sbb
in
testl
mov
repz
insl
icebp
cmp
and
sub
dec
jmp
sub
ss
int3
sub
and
sbb
mov
ret
xchg
adc
inc
push
ljmp
fmuls
bt
mov
fwait
mov
ljmp
push
xchg
out
scas
es
imul
pop
imul
in
lret
scas
push
push
imul
dec
hlt
xor
test
sub
cmp
test
cmc
nop
test
xchg
scas
sbb
arpl
mov
push
inc
jbe
or
leave
loope
add
pushf
sbb
cmp
movb
into
sti
test
lds
data16
adcb
adc
xor
ljmp
xchg
add
test
mov
inc
test
pop
sbb
mov
and
sub
cmp
in
mov
ljmp
pcmpgtb
dec
cld
mov
cmp
ds
cmp
das
cmp
jns
push
push
mov
pop
cld
lcall
ret
or
stc
xor
mov
hlt
push
mov
mov
lcall
ljmp
mov
sub
arpl
mov
add
mov
lret
sbb
push
cltd
pusha
cmp
mov
fnsave
pop
mov
mov
push
clc
outsl
push
push
mov
add
cli
pop
outsb
adc
bound
mov
and
xchg
ss
jb
mov
push
test
jecxz
adc
sub
dec
lret
cmc
jb
add
stc
mov
sbb
xchg
out
cmp
or
call
dec
push
cmp
fdiv
mov
adc
cmp
paddusb
mov
sub
loope
sub
shlb
mov
lods
push
mov
pop
lahf
std
mov
adc
sbb
lret
and
mov
insl
sub
fnstenv
ficompl
pop
xorb
cmp
sub
in
sub
adc
dec
scas
mov
mov
push
xchg
jmp
mov
xchg
fwait
pushf
lcall
dec
sub
sub
in
fst
mov
aaa
rcll
rcrb
pop
xchg
insl
test
sub
das
into
ds
xchg
xchg
cli
out
ss
mov
add
mov
jbe
cld
and
aas
push
xchg
movsb
iret
and
pop
cmpsl
cmp
test
lods
lret
cld
or
out
js
or
dec
jl
cmp
into
fstpt
sbb
inc
iret
nop
add
and
test
mov
push
sti
xchg
pop
xor
fldl
rorl
inc
xor
sbb
xor
mov
cmp
xchg
ror
jl
lea
dec
daa
dec
cs
fsubs
xchg
mov
mov
mov
and
call
call
imul
loopne
stos
sbb
and
testb
xor
pcmpeqb
adc
clc
jns
pop
rolb
sti
lret
xlat
pushl
mov
cld
push
xchg
iret
rcll
aas
jge
inc
jae
inc
mov
addr16
mov
push
roll
push
rclb
push
lds
nop
push
shrl
mov
popf
cmp
aam
jecxz
ds
loop
arpl
out
sbb
adc
adc
out
cli
repnz
pop
fcmovnb
sub
xor
lcall
ja
cli
loop
movsl
repz
scas
push
fnstsw
lds
sarl
rcl
mov
push
scas
ret
mov
gs
cbtw
adc
mov
lock
adc
mov
fildl
leave
dec
pop
divl
push
divl
inc
jno
popa
pop
mov
arpl
cmpb
push
nop
addr16
jo
cltd
pop
cmc
mov
outsl
fcoms
addr16
int
adc
fidivl
jns
pop
cld
mov
jne
jo
jbe
xchg
mov
bound
popa
mov
repz
pusha
xchg
or
bound
sbb
cmp
fbstp
sub
pop
pop
and
incb
inc
sbb
cmp
mov
jg
clc
pop
xor
sbb
movsl
fisubrs
mov
not
or
inc
mov
lcall
mov
into
gs
pop
push
sub
mov
mov
jl
inc
out
push
add
cmc
test
ds
rcll
in
inc
push
xchg
loop
inc
int3
pop
adc
mov
xchg
das
fcoml
push
rclb
clc
inc
insb
imul
insb
jae
int
bound
xchg
inc
pop
mov
cwtl
and
popa
lahf
in
into
jecxz
in
insb
scas
popa
xchg
or
pop
stos
fidivl
inc
aad
pop
mov
pop
aam
dec
or
fadd
push
xchg
pop
jne
add
xchg
insb
xor
add
loope
lahf
scas
add
push
repz
add
push
popf
or
ret
test
sbb
xor
negl
test
ficoml
xchg
ret
es
jne
jl
inc
cwtl
add
sub
xlat
inc
in
fcomp
mov
arpl
inc
add
jbe
mov
add
mov
clc
sar
or
inc
lret
stos
rorb
clc
std
aas
pop
or
fwait
stos
xchg
adc
hlt
xor
add
pop
push
or
leave
enter
ja
std
enter
xor
aaa
pushw
sub
loop
imul
clc
add
add
pop
mov
movsl
xor
loopne
loope
or
add
dec
into
loopne
testb
fwait
je
ror
test
bound
outsl
mov
push
setg
sar
mov
and
aad
mov
mov
jns
hlt
push
cmp
test
mov
aam
shll
into
jl
shrl
pop
push
and
test
lods
jecxz
negl
into
pop
lcall
daa
pushl
pop
inc
pop
mov
dec
xchg
aaa
jecxz
fbld
jb
fldenv
xor
out
adc
or
aas
shrb
dec
mov
mov
lods
fistpl
gs
lret
pop
xchg
stc
add
int
push
outsl
push
jmp
rcl
lahf
enter
sti
mov
fdivrs
popl
repnz
pusha
xchg
xchg
nop
scas
or
mov
ret
jne
xchg
mov
pop
ss
bound
mov
sbb
lahf
xchg
mov
adc
mov
mov
mov
pop
inc
and
mov
ficompl
inc
clc
sbb
outsl
pop
repz
fsts
icebp
jge
lock
sub
les
scas
lods
sbb
mov
adc
inc
movl
push
mov
pop
cmc
sbb
vucomisd
inc
movl
das
sub
or
push
les
test
xchg
int3
xchg
jecxz
adc
mov
in
push
arpl
movsl
outsb
jmp
add
addb
mov
sub
mov
cmp
dec
or
inc
jnp
data16
pop
mov
and
arpl
sbb
cmp
cmpsb
iret
addr16
daa
mov
ss
out
jb
shl
sbb
sarl
fstps
call
outsb
lcall
test
jmp
mov
sub
and
arpl
xchg
popf
in
or
xor
ret
into
mov
sub
aam
mov
and
adc
push
in
mov
sbb
jae
jg
push
out
loop
pop
andl
insb
stc
rcrb
sti
movsl
ds
mov
jmp
movsl
insl
in
cmp
xchg
vrcpps
sub
scas
or
jl
and
ds
xor
xchg
or
add
int3
mov
xor
mov
in
push
push
jecxz
push
gs
ljmp
std
jle
pop
mov
add
pop
popf
aam
jmp
lret
stos
mov
mov
dec
cmpsl
push
xchg
or
fs
cmp
mov
xor
push
xchg
daa
jns
cmp
in
aad
jp
cmp
xor
movsb
mov
pusha
cmp
stc
jle
cmovbe
mov
pusha
lret
pop
ficompl
pop
repz
inc
inc
mov
push
jle
movsl
inc
add
sub
imul
inc
dec
int3
ss
xchg
pusha
push
test
adc
jg
push
ja
imul
dec
inc
mull
fadd
icebp
or
jbe
xor
sub
loope
jno
sbbl
test
ja
lahf
pop
xchg
or
jmp
lea
shl
lret
mov
decl
xor
pop
inc
or
lods
or
test
xor
pop
enter
fistpl
push
jb
push
test
jo
or
pop
push
sbb
push
out
add
mov
xor
ficompl
stc
sbb
cmp
pop
xor
shlb
stos
bound
xor
push
test
sbb
sbb
lcall
add
push
inc
inc
push
jb
mov
loope
dec
mov
cmc
adcb
sub
inc
loop
pop
mov
rcr
pop
sub
add
aas
xor
xor
decl
inc
pop
pop
pop
fcmovu
pop
or
lret
xor
push
lock
or
fnstsw
push
rclb
inc
push
popa
dec
mov
xor
cltd
dec
je
inc
clc
dec
iret
or
xchg
push
adc
cmp
dec
in
lret
cmpsl
mov
sub
or
pop
mov
cli
jmp
pop
cmp
mov
lret
cmp
jecxz
xor
push
xlat
cltd
sbb
imul
xchg
xor
aaa
sahf
add
cmp
jmp
fs
mov
std
fisubrl
daa
je
add
mov
xor
aam
cld
shrl
out
mov
cmp
adc
adc
out
push
rcrl
aad
sbb
cmp
push
ja
mov
cld
scas
push
and
insl
mov
cwtl
mov
test
xchg
leave
ret
jns
mov
inc
addl
aas
pop
inc
imul
adc
dec
stos
mov
sub
je
in
mov
xor
push
lcall
mov
out
repz
mov
jp
push
cmp
mov
xchg
icebp
xchg
dec
lods
data16
cmp
add
jmp
movsl
xchg
js
jecxz
sbb
mov
inc
jae
ljmp
push
mov
xor
in
imul
popa
mov
sbb
aas
inc
jns
fsub
xor
push
icebp
pop
pushf
movsl
sbb
stc
sbb
mov
xor
dec
pushf
call
sarl
decl
sbb
xchg
pop
inc
cmp
push
cwtl
or
mov
xor
add
lods
jle
add
in
pop
xor
mov
add
add
fdivp
add
fldz
mov
pop
mov
fstl
in
loope
gs
and
pusha
repnz
xor
cmpsl
sbb
push
inc
repz
jl
xchg
dec
pop
mov
pop
push
add
push
data16
push
push
fcmove
sbb
inc
lods
sub
push
or
inc
sub
icebp
jl
sbb
std
fisttps
xchg
cmp
arpl
inc
mov
popa
fildll
cmp
lcall
mov
aas
rolb
stos
sub
and
and
les
xchg
cmp
frstor
mov
add
push
pop
test
scas
inc
rcr
inc
pusha
out
arpl
mov
cmp
test
xchg
or
hlt
jb
jl
and
sub
pop
in
imul
ss
dec
out
dec
push
bound
jne
arpl
lods
pop
xchg
mov
xchg
ds
pushl
push
add
mov
fisttps
xor
pushf
iret
mov
cmp
inc
xchg
stc
enter
inc
insl
rorl
and
out
test
popa
ss
lods
sbb
divb
ret
test
jecxz
push
das
lea
scas
mov
jge
pop
mov
cmpsb
hlt
jp
mov
movsl
in
fistpll
cmc
cmp
test
test
mov
imul
nop
mov
mov
pop
stc
mov
adc
aaa
stos
ds
mov
outsl
cltd
xor
stos
sub
or
mov
add
xchg
call
mov
adc
test
cltd
jecxz
mov
mov
mov
cmp
jge
mov
jae
add
pop
int3
popf
call
decb
sub
outsb
popf
adc
mov
jns
xchg
lods
jns
dec
and
aad
aaa
into
sbb
std
push
pusha
jo
xchg
mov
fmull
rcrl
push
sbb
jle
cmp
into
dec
xor
xchg
xor
fcmovne
pop
mov
fisttps
sti
xchg
cmp
cltd
xchg
adc
les
adc
dec
leave
xchg
jmp
fstp
outsb
lds
rcll
mov
xlat
lea
jge
cmp
xchg
stos
adc
or
sarb
push
idivl
jno
mov
cld
ret
ss
repnz
xchg
mov
dec
cmp
and
rorb
cmp
jne
int
ret
sbb
icebp
icebp
bound
add
fidivs
jnp
ljmp
lods
cwtl
movsb
cld
and
mov
cmpsb
cltd
xor
aas
into
sub
sub
loop
call
sub
pop
repnz
lds
jb
out
popa
scas
add
sub
push
push
mov
mov
mov
lret
xor
adc
and
int3
and
roll
sub
dec
xchg
xlat
jne
std
sbb
inc
jl
push
xor
jg
aad
inc
sub
push
test
mov
insl
dec
and
stc
adc
out
mov
jp
cld
inc
add
cld
sbb
aad
cmc
js
mov
or
mov
insl
das
sahf
rcrl
lcall
push
sahf
jo
cli
insb
xchg
out
cmp
sub
dec
mov
and
inc
sub
test
leave
insb
call
js
arpl
xor
into
in
cmp
fldt
adc
lahf
jp
add
xor
fwait
sub
push
rcr
lea
int3
icebp
test
mov
lds
std
dec
in
jns
and
out
es
fidivs
add
mov
lods
pusha
cltd
pop
push
xchg
push
repz
in
movsb
adc
inc
push
arpl
xchg
incb
inc
lock
mov
outsb
aam
push
xor
cli
mov
pop
push
int3
mov
lock
leave
ret
mov
mov
sub
push
cmp
lcall
subb
in
pop
jae
cmp
es
data16
pop
pusha
leave
fisttps
or
mov
inc
push
repnz
icebp
cs
sub
ljmp
in
xlat
jae
mov
pop
add
mov
adc
test
loopne
fs
xchg
add
mov
daa
push
inc
ret
cwtl
in
mov
or
rorb
stos
mov
stos
push
lods
mov
xor
addr16
mov
fisubrl
mov
test
adc
bound
div
lds
sti
adc
pop
fdivs
loopne
jge
dec
xor
sbb
out
imul
fs
mov
out
cmp
pusha
mov
scas
cltd
or
sbb
daa
scas
test
cltd
out
jnp
ret
ret
fstl
inc
loopne
jg
inc
pop
push
xchg
adc
sbb
cmp
cmp
icebp
sarl
cmp
adc
pop
mov
into
push
xchg
rcll
mov
inc
mov
and
jmp
std
mov
dec
icebp
std
stc
outsl
fdivl
jp
icebp
mov
insb
or
icebp
sub
sub
stos
adc
loopne
mov
sub
sar
mov
hlt
mov
xchg
das
lds
mov
or
int3
mov
jnp
ds
push
ret
push
jne
push
mov
lods
movsb
lea
sub
int
xor
sbb
test
ljmp
jge
repz
loop
sbb
sub
push
ret
std
and
mov
and
mov
ja
mov
xor
xor
int
pushf
xchg
je
mov
push
and
addr16
cmp
pop
imul
pop
xchg
inc
aam
insl
aaa
mov
and
jmp
adc
movsb
inc
data16
mov
mov
fadds
pop
fucomip
mov
addr16
ja
and
subb
leave
mov
in
jno
xchg
in
nop
lds
leave
out
out
mov
push
mov
subl
in
xlat
cmp
jnp
inc
sbb
dec
ret
dec
mov
cli
pop
lcall
out
inc
int3
push
es
push
pop
pop
movsl
push
clc
loop
lahf
xchg
dec
inc
mov
mov
loopne
test
insb
popa
sbb
ds
mov
xchg
aad
dec
sub
pop
mov
dec
or
int3
ficoms
xchg
insl
and
mov
cmp
jno
fs
cmp
adc
dec
aad
out
loopne
out
int3
push
xchg
inc
repz
out
cmpsl
mov
cltd
repz
push
int3
adc
sbb
sub
int
xchg
jno
pop
jmp
and
loopne
dec
cld
cs
pusha
dec
pop
dec
and
mov
push
popa
int3
repnz
insb
movsb
or
mov
call
jmp
icebp
orl
out
lods
mov
xor
popa
lea
out
dec
ret
test
stc
xchg
jnp
push
aam
daa
pop
or
lret
mov
pop
jnp
mov
xlat
in
cmp
pop
or
adc
rclb
push
test
les
es
int
cmp
push
jmp
inc
pop
fldenv
fisttpl
pop
rcrl
int3
mov
jg
add
adc
lret
aas
in
mov
adc
cmp
cwtl
int
xchg
cwtl
push
inc
arpl
rcrb
sbb
push
push
stos
jo
bound
outsl
mov
sbb
and
jge
add
insb
jo
adc
xchg
xchg
and
enter
je
sbb
lods
xchg
adc
xchg
mov
push
std
arpl
cmp
xor
mov
jo
push
inc
adc
clc
pop
cli
add
or
mov
les
sarl
cmpsl
jmp
pop
out
add
mov
jb
lea
push
xchg
jl
push
arpl
pop
aas
leave
inc
jne
sbb
pop
sbb
std
add
sbb
sbb
dec
sarb
cmp
mov
xchg
pop
sbb
inc
lea
or
push
in
dec
mov
add
fwait
jo
icebp
les
or
or
inc
int
or
mov
or
pop
rcll
imulb
inc
gs
jl
movsl
sub
test
and
data16
cmp
pusha
ds
and
nop
in
xchg
mov
inc
mov
push
xchg
mov
scas
insl
xchg
cwtl
nop
sbb
inc
sub
mull
jae
mov
add
inc
dec
jecxz
repnz
push
cld
jecxz
out
andb
dec
popa
in
mov
mov
jnp
scas
mov
mov
or
sti
dec
pop
stc
enter
dec
ja
sbb
cs
jno
scas
and
adc
mov
fsubr
lcall
mov
sti
dec
and
ds
repz
lds
dec
fdivl
pop
sub
xchg
aam
sbb
inc
jg
xor
es
jg
and
hlt
pop
sub
das
fstpt
or
ret
xor
or
sysret
pop
inc
cmp
lds
adc
cmp
ja
and
lret
test
fldt
xchg
add
aad
out
add
dec
in
and
inc
xchg
lds
xchg
add
and
xor
jns
addb
mov
xor
mov
les
fidivs
xlat
repz
inc
jb
xchg
mov
lret
adc
daa
inc
mov
sbb
sub
je
jno
pusha
mov
xchg
sarl
int3
out
popf
rorl
lahf
testb
and
pop
jb
test
xor
aad
repnz
cmp
or
jg
mull
mov
cmp
jo
ret
data16
jae
lods
std
jo
jno
fnstsw
jo
pop
jl
test
xchg
repz
mov
mov
mov
roll
pushf
sbb
or
xlat
pop
out
loopne
pop
jno
and
aad
dec
inc
dec
mov
aam
loopne
mov
scas
orl
loopne
dec
sub
adc
rorb
sti
jmp
data16
test
push
and
xor
aaa
jp
cmp
in
mov
ja
gs
jl
scas
push
sub
aad
xchg
int
cmp
mov
call
mov
cmp
sbb
lea
cmp
je
mov
out
test
in
push
inc
adc
inc
inc
or
scas
idiv
pop
pop
or
ja
mov
cmp
sbb
mov
in
xlat
sti
adc
test
aaa
mov
dec
mov
mov
mov
gs
adc
cltd
jge,pt
in
xor
rol
je
imul
adc
out
lds
mov
int
add
test
lcall
mov
int3
mov
jecxz
je
cwtl
jp
push
into
push
sbb
inc
dec
fsts
or
mov
pop
subb
outsl
mov
in
cmpsb
push
add
clc
sub
jnp
pop
cmp
clc
xor
rcl
mov
pop
mov
sub
mov
or
and
inc
pop
insl
out
fs
push
mov
gs
jo
xchg
es
iret
mov
adc
daa
and
mov
aaa
pusha
rep
dec
sti
jecxz
inc
pop
mov
movsw
pop
push
xor
ljmp
adc
sbb
sub
cmpsb
lahf
adc
loop
jne
fs
inc
jl
mov
mov
movzbl
pop
inc
sub
dec
fs
loopne
pop
fwait
mov
lock
mov
cmp
shrb
mov
cli
jno
and
adc
inc
push
pop
pop
les
bound
xor
fdiv
adc
push
dec
rorb
push
orb
in
cmpsl
arpl
cmp
pop
das
mov
lods
arpl
fadd
mov
shrl
pop
addr16
mov
cli
outsb
call
aad
mov
dec
add
mov
mov
aaa
mov
mov
gs
inc
sub
push
inc
or
sub
andl
dec
mov
add
push
pop
push
push
lods
mov
das
fnstenv
inc
sub
fcoml
mov
xor
loop
ss
notl
xorl
rcll
and
mov
sbb
xchg
mov
pop
pusha
xlat
ja
jmp
cmp
frstor
mov
mov
out
dec
scas
add
mov
int
daa
vaddpd
pop
sbb
pusha
xchg
adcb
mov
xchg
sub
dec
xchg
cmpsl
xor
jbe
mulb
insb
rcll
dec
lcall
hlt
cmpsb
inc
push
mov
sub
cld
add
cld
test
cli
or
xchg
cltd
sbb
mov
js
add
cmp
out
filds
icebp
xchg
sub
ljmp
mov
mov
mov
iret
mov
jecxz
inc
nop
mov
in
inc
push
and
mov
or
or
out
sub
xlat
xchg
jo
pop
lret
xor
ucomiss
imul
orb
sbb
mov
pusha
jmp
or
push
pop
shl
push
daa
push
push
mov
icebp
and
xcrypt-ofb
cmpsl
scas
sub
mov
stos
and
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
adc
mov
adc
push
xor
mov
xor
mov
lea
adc
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
adcl
mov
subl
mov
sbb
mov
orl
mov
addl
add
push
mov
mov
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
mov
adcl
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
cmp
jne
sub
mov
xor
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
mov
or
mov
adcl
xor
adcl
add
xorl
imul
mov
andl
xor
sbbl
add
movl
cmp
mov
movl
push
movl
je
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
xor
mov
mov
andl
xor
addl
add
xorl
imul
movl
mov
jmp
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
jmp
lahf
xchg
jle
emms
xchg
ljmp
test
pop
jl
cmp
lods
push
sti
or
or
hlt
xorb
mov
pop
lret
cmp
lea
lods
xor
dec
sub
adc
jb
test
xorl
mov
sahf
in
out
push
push
sbb
mov
jb
adc
xor
imul
test
xor
sub
jecxz
adc
aaa
mov
and
cmp
mov
mov
inc
shlb
cs
and
mov
xor
sub
mov
mov
xor
adcl
pusha
test
and
mov
arpl
cmpb
cld
imul
add
inc
pusha
jg
dec
or
add
xor
add
pop
xchg
mov
mov
sbb
test
pop
inc
aad
push
sbb
lods
xchg
pop
addr16
add
jbe
or
dec
andl
imulb
lahf
or
mov
cmpl
outsl
pop
cld
fcmovne
das
loope
adc
cmp
xchg
sahf
inc
pushf
bound
fists
cld
inc
xlat
scas
mov
mov
mov
cmpsb
incl
lods
cmp
jmp
push
ret
add
popf
sbb
push
adc
js
pop
jae
push
jb
mov
push
loope
push
and
mov
xor
out
pop
insl
sbb
pop
push
aas
mov
dec
insl
sub
mov
mov
xor
popa
cltd
push
adc
sub
scas
pop
and
jae
sbb
and
stos
sbb
ror
dec
push
mov
pop
mov
or
mov
sub
in
fdivrl
adc
in
pop
js
sarl
mov
in
negb
fidivrl
outsl
int
dec
outsb
jae
in
loop
andb
or
test
pusha
xchg
adc
cmpl
xor
sarl
je
adc
nop
xchg
fisubrs
lea
enter
scas
xchg
jbe
and
imul
or
nop
loop
mov
loope
je
jns
inc
pop
adc
popf
pop
icebp
xor
mov
push
sbb
mov
out
les
pop
sarb
loopne
cwtl
mov
inc
cmpsl
jo
lea
mul
inc
testl
dec
xor
adc
jnp
mov
add
or
adc
push
dec
in
sbb
addr16
repnz
or
iret
xor
adc
jl
data16
test
jno
pop
cld
std
adc
adc
mov
movsl
pop
mov
mov
leave
xchg
pushfw
outsb
in
cs
or
cmc
outsl
shrl
add
ljmp
cmp
cmpsl
mov
aas
lcall
add
cs
jnp
jae
std
xor
pop
mov
lods
sahf
jle
and
and
scas
mul
enter
push
xor
ds
add
mov
push
mov
pop
xchg
dec
pop
icebp
pop
nop
sub
roll
pop
dec
mov
adc
fisubs
rcl
call
pushf
xor
rcr
mov
insl
lods
xchg
push
xchg
inc
cmpsl
idiv
inc
int3
push
les
cwtl
les
push
jns
shlb
sbb
stos
and
dec
cld
sbb
mov
xlat
icebp
in
jecxz
fcos
daa
clc
cmp
adc
fs
insl
ret
pop
mov
in
cmpsb
nop
xchg
test
cs
push
dec
cmp
cmp
ret
mov
mov
ljmp
add
repnz
sub
out
in
ss
fildl
mov
movsb
jmp
scas
xchg
jg
shlb
pushf
dec
xchg
pop
mov
popf
dec
clc
movsl
jne
stc
lods
test
pusha
push
stos
and
sbb
cmc
rclb
or
or
mov
jo
xor
mov
and
aad
adc
mov
cmp
cwtl
ds
sbb
hlt
cmpl
ja
pop
aaa
mov
mull
or
daa
jge
rcl
cmp
adc
call
or
sub
or
add
bound
lods
dec
pop
mov
mov
push
or
push
sub
add
push
xchg
cmpsb
cwtl
inc
ja
pop
adc
xorl
cltd
and
icebp
mov
mov
stc
push
add
xor
pop
pop
ficoml
sahf
jmp
fstps
dec
inc
xor
movsl
sti
sbb
lret
jns
push
jmp
outsb
and
lods
and
mov
ficoml
popa
xchg
ret
mov
call
sub
sbb
add
pop
enterw
sbb
aad
mov
stos
in
pop
hlt
rclb
ljmp
cltd
pop
push
mov
cmpb
in
fimuls
xchg
dec
ret
ret
adcl
inc
into
xor
ret
movsb
mov
mov
imul
dec
sub
sbb
inc
lret
and
pop
leave
test
mov
test
mov
out
push
jno
mov
push
and
sbb
loopne
inc
mov
fwait
inc
das
cmp
inc
inc
or
test
ficompl
cmp
pop
das
notb
sbb
jmp
jle
or
cmp
sub
adc
lret
dec
or
pusha
dec
add
sub
lods
inc
std
push
jns
fsubl
shlb
mov
lock
leave
push
push
mov
jp
fs
lds
lret
shll
cld
pop
and
or
pushf
or
shll
fst
imul
cwtl
mov
mov
sahf
hlt
mov
cli
cmpsb
pop
hlt
fdivr
arpl
mov
iret
inc
xor
sub
dec
loop
arpl
lds
pop
lods
test
cmp
push
xchg
inc
scas
shrl
sarl
test
xchg
jae
jl
inc
mov
int3
test
test
in
loop
pop
adc
test
mov
fwait
lods
cmpsb
xor
push
imul
iret
and
adc
cli
js
mov
cmp
aam
aas
subb
mov
gs
xchg
mov
push
mov
mov
arpl
inc
adc
xor
jmp
insb
sbb
out
movsb
data16
clc
insb
or
repz
adc
dec
jne
adcb
mov
add
push
cmp
jecxz,pt
xor
jae
xchg
or
mov
mov
scas
mov
clc
js
mov
pop
push
out
fnstenv
pop
push
mov
cmp
xor
leave
movsl
divl
or
sahf
dec
lds
dec
pop
add
push
sbb
inc
test
sbb
bound
xchg
sbb
pop
xchg
cs
push
bound
xor
int
stc
push
pop
xor
imul
adc
xlat
xchg
cmp
call
ljmp
xor
mov
hlt
out
mov
mov
call
loope
pop
dec
or
push
jno
jne
test
les
push
cmp
mov
test
or
outsl
mov
push
pop
mov
daa
pop
mov
adcl
test
aaa
jns
pop
jecxz
xor
xchg
dec
das
ret
test
hlt
jp
fs
daa
cli
out
inc
and
pop
cmpsb
mov
cwtl
mov
sahf
adc
jmp
mov
add
inc
pop
xchg
movsl
in
or
push
dec
ljmp
test
mov
or
push
das
dec
pop
pop
lock
add
les
pop
push
aad
and
call
jno
jmp
ss
adc
add
inc
inc
pusha
pop
inc
and
in
inc
jl
sahf
and
or
sarb
sub
sub
fisubrs
movsl
mov
and
xchg
cmpsb
or
mov
sbb
popa
mov
icebp
imul
xor
sbb
push
dec
jb
out
mov
sub
sub
enter
daa
out
xor
xchg
xor
sub
sbb
push
sub
movsb
jns
adc
mov
lahf
cmp
fmul
faddl
mov
push
xchg
pusha
pop
shrb
addr16
shlb
sub
lret
gs
mov
and
jp
les
pusha
rorl
push
pusha
das
pop
leave
mov
jg
subl
push
add
and
fidivl
cmp
xor
xchg
addr16
js
or
jge
mov
sub
xchg
mov
addr16
push
int3
sub
pop
loopne
xor
mov
popl
in
cwtl
rcll
dec
xor
adc
mov
popa
xchg
xchg
jns
aas
mov
imull
mov
insb
inc
push
out
icebp
test
inc
push
cmp
ror
stos
mov
mov
push
jecxz
add
sbb
imul
jo
mov
push
jnp
xchg
sbbl
aam
lds
ds
mov
inc
aaa
iret
jbe
sbb
out
cltd
into
push
pop
cmpsl
and
cmp
xchg
test
push
into
pop
pop
jb
inc
scas
mov
lods
stc
int3
ljmp
push
sbb
add
int
adcl
dec
rcrl
pop
jne
jge
sub
aaa
adc
xchg
fisubrl
scas
and
dec
push
stos
out
in
mov
sub
lret
mov
andb
cmp
pminsw
dec
fsubrs
xor
insb
out
ficompl
mov
movsl
lahf
or
push
mov
push
cwtl
fstpl
popa
sbb
xchg
or
or
ljmp
xchg
mov
fists
dec
push
repz
pusha
iret
shrb
ret
pop
push
lods
adc
outsl
es
mov
push
cmc
call
ret
es
add
sub
jb
mov
cmp
testl
inc
addr16
decb
inc
pop
cmp
jmp
cmp
in
stos
sub
xor
xor
cmp
jp
dec
add
in
inc
dec
sub
lds
or
sub
pop
mov
add
xor
jmp
hlt
and
sti
sbb
outsb
fldl
lock
ljmp
orb
sbb
and
push
loopne
jg
push
imul
cwtl
lcall
push
insl
in
jp
xchg
sbb
push
push
sub
adc
gs
dec
or
add
mov
xor
mov
mov
add
cmc
jae
xchg
jle
lahf
cmp
pop
cltd
mov
rcrb
sbb
pminub
das
mov
mov
mov
fwait
pusha
jns
sbb
call
out
mov
mov
outsb
lcall
push
cmpsl
pop
push
pop
ds
jmp
sbb
lcall
mov
negb
push
pushf
cmc
daa
cmp
outsl
adc
outsb
imul
cwtl
lret
dec
popf
orb
hlt
mov
fisubrs
sbb
inc
cs
lahf
xor
xchg
ljmp
gs
or
das
cmp
push
inc
and
jne
mov
or
mov
mov
and
movsl
inc
shl
push
cmpsb
stos
sub
idivb
fstpt
add
mov
push
jecxz
jle
mov
mov
ja
xor
inc
add
scas
fidivrl
std
clc
popa
or
loope
dec
stos
jae
pop
ja
imul
shll
movsb
sub
ds
mov
dec
xchg
sbb
mov
fucomi
daa
sarl
mov
and
bound
outsb
mov
jle
lret
jbe
test
dec
outsl
imul
and
jbe
inc
lock
leave
flds
outsb
xchg
aaa
ljmp
xchg
ret
dec
lock
jle
xchg
mov
lods
add
inc
lcall
jl
rcr
push
icebp
imul
out
and
icebp
testl
adc
and
xchg
jg
test
test
imul
stc
lret
pop
repnz
call
divb
cmp
fstl
sub
cltd
dec
neg
mov
push
incl
cmp
mov
cmp
shrb
cs
cmp
addl
inc
sub
push
popf
jnp
jno
adc
shlb
lea
cmp
leave
inc
mov
aaa
scas
mov
repnz
jbe
ljmp
mov
mov
icebp
xchg
mov
mov
scas
clc
xchg
in
cmp
popf
mov
loope
jne
mov
jne
movsb
push
mov
sub
jmp
das
aam
sbb
pushf
dec
pop
jl
loopne
pop
cmp
mov
dec
call
cltd
pop
push
ficomps
fildll
add
nop
lods
icebp
lods
sub
movsb
pop
outsb
cmp
test
cwtl
mov
ret
xchg
std
aam
stc
pushf
cmp
pop
mov
sbb
xchg
data16
and
out
fcmovnbe
repnz
xchg
rcl
fisubs
sub
sbb
sbb
ret
jnp
push
aas
icebp
data16
xor
push
pop
mov
shrb
mov
dec
shll
push
and
pop
jns
call
pop
in
loope
adc
aas
cmp
pusha
popf
sub
call
mov
sub
rcll
xlat
or
adc
mov
jmp
xchg
and
xchg
cli
inc
push
sub
shrl
xchg
cmp
into
jnp
and
mov
nop
jmp
lods
inc
aam
icebp
and
sahf
sub
jo
in
jae
xor
xchg
call
xchg
and
in
sarb
adc
mov
push
aaa
dec
fsubs
or
xorb
mov
mov
mov
aam
cmp
xchg
and
jb
push
insb
fwait
adc
mov
mov
dec
popf
pop
mov
repz
jecxz
or
mov
shrb
add
mov
mov
xchg
push
xor
pop
push
sub
jno
std
pop
in
enter
mov
jge
imul
fiaddl
and
pop
daa
int
or
cmp
add
popa
sbb
lods
jo
add
clc
pop
mov
pop
dec
aas
movsl
cltd
stc
or
out
xchg
sub
imul
call
mov
negl
xchg
test
icebp
pop
mov
repz
and
cmpsb
jmp
mov
mov
lods
test
sbb
sarb
pop
mov
fs
sarb
pop
sub
sbb
sbbl
mov
xchg
loope
dec
mov
lcall
push
inc
cmp
nop
out
rcrb
dec
push
mov
pop
adc
sbb
pop
jns
fbld
jbe
clc
dec
mov
fcmovb
test
fucomi
dec
popa
jmp
mov
in
or
pop
adc
pop
imul
fstps
std
jle
adc
movsl
sub
jne
aam
jl
push
faddl
loope
mov
xor
xchg
sub
testl
jmp
in
inc
push
push
jns
pop
pop
mov
inc
jmp
pop
stos
push
loop
adc
ds
cli
and
fmull
test
dec
fidivs
push
sub
mov
test
les
jl
dec
shlb
pop
pop
sub
add
lret
and
and
and
push
cmp
call
cmp
movsb
sub
int
jle
adcb
divl
adc
sbb
jl
hlt
cwtl
adc
and
out
or
outsb
xor
pusha
loop
nop
cwtl
ds
int
aas
ljmp
pop
dec
punpckhdq
cld
cmp
xchg
adc
in
out
xchg
test
inc
aam
pop
je
in
pop
push
sbb
or
jno
cmpsl
test
jnp
ljmp
inc
push
cltd
lds
icebp
xorl
add
adc
mov
jnp
sub
subb
iret
sbb
ljmp
dec
and
and
nop
je
cmp
div
nop
xchg
xchg
addr16
add
push
sbb
lods
cmpsl
mov
mov
shll
jo
aas
cmp
sbb
jbe
sub
stos
clc
data16
loop
std
out
inc
movsl
mov
data16
xor
sub
mov
enter
std
pop
jne
int
mov
inc
fnsave
hlt
add
and
adc
adc
xor
insl
sbb
pop
inc
dec
dec
pop
loopne
jbe
inc
loop
push
ficompl
fidivrs
fcomps
push
and
jmp
sub
lret
jae
es
mov
and
sbb
out
ficoml
imulb
in
xchg
andnps
fwait
inc
add
test
repnz
sub
lock
push
sub
push
pop
test
pop
sub
cmpsl
aaa
mov
ret
cmp
jecxz
pop
and
or
aas
popa
sbb
mov
test
cli
pop
std
rol
cmp
cwtl
cwtl
inc
repz
push
mov
scas
and
push
call
pop
mov
jg
sti
aad
or
sbb
jae
ja
jp
icebp
pop
adc
lods
xchg
and
ljmp
cmpsl
fimull
pop
in
iret
imul
adc
add
mov
or
sbb
pop
repnz
mov
inc
sti
imul
add
push
pop
fs
sub
in
mov
pop
or
cmpsl
push
jle
mov
mov
cmp
jnp
adc
mov
jbe
cmc
scas
sub
out
xor
cmp
inc
mov
push
mov
ret
fimull
mov
mov
sub
subl
adc
pushf
dec
outsb
cmp
pop
lret
or
inc
lods
mov
insl
dec
orb
fwait
iret
adc
les
mov
xchg
mov
add
popf
dec
mov
or
adc
scas
jmp
sub
or
lds
pop
mov
mov
mov
xorl
inc
xor
insl
pop
mov
shlb
dec
das
cmp
nop
xor
lds
fwait
repnz
frstpm(287
cmp
sbb
or
dec
fwait
mov
sbb
mov
add
cmp
dec
push
mov
jp
xor
test
loop
xchg
rcrl
cmpl
in
test
enter
out
jle
dec
pop
pop
dec
add
shll
pop
jg
xchg
fwait
cwtl
je
scas
adc
sub
xorb
xchg
xchg
jbe
ficomps
or
sbb
sub
stc
shrl
push
ds
push
pushf
movsb
fs
notb
pop
push
notl
add
sub
pop
ja
fisubl
cwtl
or
jg
jne
pop
push
mov
cmpsl
std
daa
int3
or
imul
xchg
pop
mov
lods
add
shll
mov
aam
mov
xlat
movsl
sarl
and
sub
cmp
mov
out
vpsubusb
xchg
push
in
popa
mov
int
xchg
push
adc
lock
jge
inc
rorl
mov
xor
xor
inc
xchg
shll
ljmp
mov
repz
lcall
sbb
cwtl
loop
lret
loop
xchg
dec
cltd
inc
xor
push
pop
ret
and
adc
hlt
loopne
inc
jp
loop
and
testb
mov
jecxz
xor
xchg
jne
insb
add
movsl
dec
js
mov
cmpsl
sahf
sbb
cmp
push
cwtl
mov
sbb
add
and
cmc
pushf
movsb
xchg
rclb
mov
test
dec
testb
imul
int3
xlat
aaa
aas
nop
jp
mov
and
mov
xchg
pop
out
jle
imul
sbb
or
pop
and
mov
mov
mov
cmp
mov
ja
sahf
cmp
mov
stos
xlat
test
lahf
sub
dec
sub
rol
and
inc
daa
imul
add
test
test
in
push
mov
inc
daa
jge
sti
rcr
dec
sub
cmp
mov
sub
das
je
inc
push
clc
sub
and
jmp
jl
jg
inc
leave
jle
cmp
fstps
and
xchg
imul
imul
lods
vmread
jno
xorl
mov
test
jo
mov
adc
xor
push
pop
jnp
clc
sbb
push
jge
adc
int
adc
xor
popa
std
test
cli
xchg
jg
fistpll
or
lcall
and
dec
xchg
mov
xchg
xchg
mov
cmpl
sub
lret
dec
loope
fdivs
bound
or
subps
push
loopne
inc
lods
je
xor
xor
mov
aad
and
lret
xchg
adc
ja
pop
push
popa
add
pop
mov
push
cmpsl
cltd
inc
arpl
dec
or
xchg
clc
push
clc
movb
xchg
clc
test
int3
movsb
negb
sbb
push
cmp
scas
mov
add
sub
pop
pushf
outsl
and
insb
and
repz
sarl
bound
dec
adc
adc
in
insb
mov
in
mov
ds
mov
arpl
das
or
test
xchg
jbe
push
out
push
mov
cmpsl
imul
xchg
mov
xor
arpl
loopne
ja
or
mov
nop
jmp
pop
out
scas
xor
mov
and
jmp
dec
sbb
fsubr
or
out
fmulp
stos
inc
sbb
inc
adc
pushf
jp
roll
aam
lods
jp
add
les
jge
lret
scas
pop
insb
xchg
jae
sub
xchg
dec
dec
popa
insb
addb
outsb
insb
lea
mov
test
and
roll
jl
pmaddwd
pop
mov
jno
gs
sub
test
scas
mov
or
xor
xchg
or
inc
into
dec
fstl
je
jne
dec
in
mov
pop
xchg
sbb
or
loop
negl
dec
xchg
sbb
out
pop
fcomps
xchg
jle
dec
jle
inc
das
andb
decl
ja
xor
arpl
inc
adc
mov
mov
adcl
push
mov
mov
inc
cwtl
pop
ffree
mov
jl
mov
sahf
inc
mov
out
push
sahf
inc
xlat
in
and
xchg
dec
inc
mov
scas
xchg
mov
cli
adc
hlt
sti
ja
and
sbb
mov
pop
adc
imul
sarl
adc
nop
jb
hlt
push
push
test
mov
mov
addl
mov
inc
add
sub
jno
out
or
out
imul
pop
adc
call
fldl
data16
cmp
mov
movsb
adc
adc
pop
mov
xlat
loop
mov
inc
cmp
scas
push
push
mov
dec
push
filds
or
jecxz
les
mov
rorb
inc
add
lock
xor
enter
in
xor
imul
and
fidivrl
xor
jg
jmp
imul
in
xchg
popf
imul
xchg
loop
mov
cld
inc
mov
cmp
ja
stos
pop
jp
xor
int3
dec
outsb
rclb
pusha
mov
mov
mov
fsubrs
sti
cs
jg
cmp
jae
mov
sbb
pushf
fwait
pop
jnp
in
or
jg
or
cmp
cmovp
inc
jns
cld
and
jmp
shlb
cmp
mov
fists
mov
sbb
xchg
add
fs
pop
shll
xchg
andl
imul
push
pushf
out
pop
sub
popf
int
fwait
push
sbb
xlat
jo
mov
cltd
jne
aad
inc
retw
stc
lcall
cs
imul
cli
pop
stos
xchg
leave
sahf
out
sbbl
sbb
sub
es
jae
jo
mov
and
pop
xor
mov
xor
enter
inc
xchg
inc
leave
push
push
adc
test
mov
or
mov
fs
add
pop
dec
jnp
pop
push
adc
shll
jo
add
shrl
sub
push
pushf
and
push
das
mov
mov
xor
test
and
mov
adc
adc
pop
inc
jge
cld
movsl
xor
fisttpll
mov
xchg
cmp
roll
xchg
jne
movl
mov
stc
inc
repz
xchg
ljmp
je
jbe
jbe
and
pop
mov
xchg
jne
mov
fbstp
or
sub
inc
orb
and
mov
dec
into
in
cmpl
std
mov
repz
pop
mov
mov
nop
push
nop
repnz
sarb
movsb
sbb
rolb
dec
mov
cld
push
push
inc
push
dec
dec
mov
ss
inc
mov
mov
js
sbb
cmpsl
rol
or
enter
dec
xor
pop
lret
cld
sub
adcb
cltd
xor
daa
gs
lret
dec
movsl
lds
pop
jno
insb
inc
xor
aas
push
inc
mov
cmc
ret
cmp
fimull
mov
aas
sbb
mov
sbb
dec
cmp
test
xor
fs
or
in
aam
loop
sub
mov
subb
shrb
sub
repnz
xchg
push
lock
jns
pop
xor
and
mov
imul
xacquire
and
aad
repnz
rol
lret
incl
cmpsb
xor
lret
vxorpd
jge
fldl
jns
and
cmp
sub
dec
xchg
hlt
pop
pop
sbb
sub
sub
jmp
insl
data16
adc
push
ja
inc
mov
or
imul
mov
cmpsl
icebp
xor
aad
dec
mov
cli
add
in
and
fucom
pop
push
and
and
shl
prefetch
cmp
daa
mov
fnstcw
sbb
adc
inc
jno
pop
repnz
pop
sti
in
mov
pop
sbb
movsb
adc
repnz
je
mov
popa
movsl
dec
dec
dec
es
negl
xchg
push
and
cmp
push
movlps
pusha
jne
pusha
lods
mov
mov
popa
sbb
dec
cmp
outsl
xchg
xor
inc
sbb
lds
push
xchg
movsb
orb
sbb
ret
cmp
lock
testb
adc
mov
movsl
xchg
shll
mov
xchg
and
or
sbb
jp
cmp
insb
lret
leave
ror
push
sub
andl
loopne
sbb
popf
or
icebp
in
movl
imul
cs
mov
mov
sub
shlb
pop
add
mov
lret
jno
xchg
lds
mov
in
icebp
ljmp
mov
pop
dec
pop
lds
insb
xchg
addr16
mov
sbb
jmp
pushf
inc
imull
lds
pusha
cmp
dec
xor
push
jecxz
icebp
mov
mov
popf
jg
leave
xchg
xor
mov
shll
addl
sarl
push
add
aam
pop
sbbl
and
fisttpl
sbb
out
movsb
dec
pushl
jno
insb
cmp
mov
add
insl
cltd
mov
push
add
xchg
sbb
mov
popa
sbb
push
addr16
inc
insl
bound
dec
outsl
mov
adc
dec
mov
fdivl
fs
int
lcall
in
jl
inc
stc
mov
call
mov
repz
pop
or
push
cld
dec
inc
loopne
dec
fisubrs
dec
lea
adc
stc
nop
mov
jbe
iret
jbe
adc
cmpb
shl
push
rcrl
pop
outsb
je
pop
mov
nop
jmp
fldcw
or
dec
jne
pop
cmc
pop
sbb
ret
cmp
jp
sub
mov
jns
pop
addl
inc
sbb
or
js
test
push
inc
ret
test
dec
xor
lods
addb
inc
popf
sbb
js
pop
inc
fnstsw
imulb
dec
sbb
and
inc
mov
test
sub
sbb
mov
aam
ret
test
push
sub
pop
and
jbe
stc
leave
pop
adc
cmpsl
xchg
add
xorl
pop
in
fs
imul
adc
mov
out
lahf
fsub
push
mov
push
movsl
push
ret
sbb
mov
xlat
jp
in
sub
stos
push
ss
test
in
test
mov
pushf
lods
push
xchg
js
loope
sbb
pmaxub
sbbl
push
jl
dec
pop
cmpsb
sbb
cmpsb
orb
adc
and
cwtl
loop
sub
int3
jle
mov
popa
dec
inc
and
jge
mov
push
or
enter
add
js
stc
mov
out
shrb
scas
cmp
xor
jp
jmp
gs
pop
out
inc
popf
test
dec
dec
nop
xor
pop
mov
insl
sbb
ja
adc
mov
testl
test
or
xlat
cltd
leave
push
out
inc
in
into
mov
sbb
mov
jmp
testb
fstl
jnp
cli
mov
mov
push
sub
movsb
jle
in
mov
hlt
imul
pop
jg
das
fisttpl
insb
js
sub
xor
bound
jmp
mov
mov
pop
inc
inc
lcall
jge
mov
mov
iret
lds
mov
mov
jno
jb
push
xchg
insb
pop
mov
popa
jno
dec
fistps
imul
call
xor
mov
lret
jle
sub
jmp
dec
jnp
xor
sbb
mov
xor
popa
xor
bound
sbb
pop
scas
test
add
aad
dec
test
xor
es
add
push
dec
shl
mov
pop
punpcklbw
imul
sub
bound
mul
mov
adc
mov
dec
cmp
scas
mov
xchg
stos
jle
mov
lock
cmp
or
mov
imul
sub
jmp
xchg
fldenv
js
cmp
imul
mov
in
int3
pop
push
jne
mov
mov
inc
adc
lret
pop
adc
int
psadbw
in
push
stos
scas
jno
fs
clc
dec
push
adc
movsl
inc
rcll
xor
xlat
xchg
xor
subl
loope
xchg
pop
jb
sarl
out
jo
sub
sti
out
jns
pop
inc
mov
push
inc
push
stos
or
push
jge,pn
mov
int
mov
mov
pop
mov
mov
and
in
push
dec
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
sbbl
push
movl
cmpl
je
cmpl
ja
jmp
call
mov
dec
mov
jmp
mov
notl
mov
movl
push
mov
mov
mov
sub
imul
mov
mov
mov
movzwl
or
xor
adc
xor
and
mov
addl
add
subl
add
imul
mov
mov
cmp
je
and
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
add
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
xor
mov
mov
xor
mov
add
mov
add
movzwl
mov
movb
sub
lea
mov
sub
mov
add
mov
andl
xor
andl
sub
orl
mov
movl
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jb
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
movl
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
xor
dec
mov
jmp
mov
push
and
mov
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
subl
push
andl
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
xor
adcl
add
jmp
adc
mov
mov
sbb
mov
orl
xor
mov
add
movzwl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
movzwl
incl
xor
orl
add
mov
mov
movl
mov
movl
inc
mov
movl
cmp
jne
inc
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
dec
add
add
mov
xor
or
mov
sub
or
mov
sub
xor
add
add
orl
mov
movl
and
movl
orl
movl
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
mov
xor
mov
orl
mov
xor
add
mov
mov
mov
je
mov
mov
xor
orl
xor
sbbl
sub
andl
sub
neg
xor
or
mov
decl
mov
mov
add
imul
mov
mov
mov
subl
add
or
or
mov
mov
mov
jmp
mov
xchg
mov
out
or
js
push
jl
jmp
jl
sub
arpl
push
push
cmpsl
and
sbb
inc
inc
pop
push
aas
shll
mov
jge
mov
add
outsb
mov
pop
cmp
sub
or
ja
pop
xchg
or
add
call
fdivr
xor
lock
sahf
and
pop
add
add
shrb
pop
out
inc
mov
movsb
mov
and
int
repz
aad
push
mov
xor
imul
sbb
gs
rcrl
add
mov
cltd
xchg
push
mov
jecxz
test
les
cs
lret
mov
mov
dec
mov
mov
and
jns
lcall
ret
sahf
mov
cmpsl
cli
mull
popa
fs
mov
inc
mov
arpl
sub
out
ds
push
xchg
nop
jnp
lldt
repz
sbb
pop
outsl
lods
cmovns
and
jmp
mov
in
inc
cwtl
ja
push
nop
fdivrs
mov
lret
fisttps
xchg
adc
and
or
bound
lcall
sub
into
mov
test
ja
mov
lock
push
sbb
dec
lret
ja
clc
int
dec
adc
sub
sub
sub
pop
lret
pop
push
sub
lock
jb
in
fdivl
scas
cmp
push
stc
mov
inc
into
movl
fisttpll
pop
xchg
and
inc
and
loop
dec
stos
loopne
sub
xor
xchg
inc
in
mov
stos
dec
outsb
dec
and
inc
and
xor
sahf
dec
in
sub
jne
cmp
iret
loop
and
xchg
fisubl
add
mov
push
adc
pusha
stc
iret
pop
or
aam
jl
aas
push
add
jo
dec
lods
imul
push
or
pop
adc
push
mov
add
inc
stc
js
fdivp
mov
outsl
insb
xchg
mov
pop
stos
jmp
and
mov
add
adcl
and
movsl
aad
jbe
test
inc
mov
push
lcall
fstps
mov
in
cli
stos
addr16
xchg
push
popl
push
daa
xchg
jmp
sub
pop
scas
cmpsl
rcr
repnz
popa
filds
inc
adc
mov
movsl
pop
sub
int
mov
je
stos
dec
cmc
push
repz
mov
add
cld
sahf
or
mov
sub
jl
es
push
sub
pop
jp
aaa
loop
cli
dec
jnp
int3
mov
or
cmp
cmp
add
push
lahf
ljmp
aam
xor
mov
mov
fdivr
add
jno
lret
lea
jno
fcmove
dec
pop
fcmove
mov
ljmp
fisubl
mov
dec
mov
dec
sub
xor
mov
in
adc
ret
mov
push
into
push
test
inc
lcall
aaa
sbb
pop
jb
sbb
or
call
dec
das
mov
scas
outsl
sub
sub
nop
incb
mov
mov
add
cmp
xchg
lcall
aam
mov
popf
xchg
xorb
and
fstps
cmpsw
pop
add
insb
imul
addr16
sub
popf
scas
mov
or
mov
inc
movsb
fimuls
xchg
or
jne
scas
cltd
xchg
and
mov
add
mov
and
push
xchg
arpl
or
jne
add
cmc
mov
dec
int
fisubrs
adc
xchg
inc
mov
inc
fucom
push
stc
sbb
mov
mov
mov
lock
fdivs
nop
hlt
xchg
daa
cmpb
mov
jle
sbb
inc
fisubrs
fs
out
mov
add
jg
mov
pop
sti
lods
ret
push
adc
pushf
bound
inc
inc
mov
pop
and
jne
mov
stc
repnz
xorb
imul
repnz
repnz
rorb
aaa
sti
jmp
or
in
lret
loope
lea
ret
movsl
jnp
mov
outsl
mov
cmp
cli
mov
fstl
cwtl
cmp
hlt
pop
in
dec
push
xorl
imul
sbb
xor
and
movb
pop
insb
add
hlt
cwtl
fnstcw
mov
push
adc
pop
lahf
es
and
xor
pop
outsl
stos
lods
scas
and
adc
mov
add
shl
mov
hlt
push
sub
add
in
fdivs
inc
pop
sbb
and
mov
pop
push
xchg
pop
xor
push
xchg
idiv
and
mov
outsl
andl
arpl
in
sub
divl
add
es
cmp
mov
out
imull
mov
scas
mov
inc
popa
or
daa
adc
sbb
int
lods
pop
inc
mov
dec
inc
xchg
mov
pop
sub
cltd
inc
aam
fnsave
out
xchg
or
pop
push
adc
sbb
xchg
stos
outsl
pop
pushf
inc
and
sbb
or
pop
sahf
dec
cltd
inc
ficomps
imul
jnp
arpl
jne
xchg
push
fsubr
inc
cli
ret
test
xlat
enter
fwait
decb
push
mov
popa
mov
and
sub
mov
adc
repz
pop
jp
loop
outsl
insb
xchg
les
test
dec
adc
cld
int3
dec
lcall
cmp
out
jg
mov
xchg
mov
push
xchg
cmpsl
stos
das
xor
fwait
pop
leave
pop
cmp
mov
jmp
data16
lret
xlat
jmp
sub
mov
mov
lods
dec
push
mov
shll
cmc
and
hlt
orb
repnz
jae
lret
add
adc
in
hlt
imul
leave
sahf
xchg
mov
push
insb
iret
ja
popf
pop
fiadds
pop
cmc
inc
sbb
cmp
sbb
mov
lds
popa
xor
jns
sbb
dec
daa
test
inc
sahf
add
xor
imul
loope
dec
add
fsubr
ljmp
inc
data16
pop
mov
mov
push
repz
pusha
mov
xchg
xchg
sbbb
xor
mov
xor
or
test
es
jp
lret
dec
push
and
sahf
push
mov
jnp
movsb
cmp
jmp
in
pop
clc
adc
addr16
loopne
enter
jmp
jecxz
xchg
into
imul
test
mov
das
call
mov
jo
xor
or
leave
add
xchg
arpl
push
fdivrp
push
jmp
daa
clc
mov
loop
cmp
mov
mov
xchg
mov
js
bound
mov
xchg
or
lahf
adc
jmp
mov
adc
sbb
jae
in
out
int3
or
cmpl
push
lret
sbb
mov
add
push
daa
mov
mov
insb
xor
add
fisttps
add
push
popf
xor
es
into
xor
xchg
pop
nop
sub
cltd
iret
sub
xchg
fcompp
arpl
mov
adc
loop
sbb
xchg
sub
dec
mov
adc
and
aas
out
icebp
dec
pop
in
inc
pushf
je
xchg
jp
aad
push
leave
lcall
mov
frstor
push
int3
aam
mov
push
xchg
test
in
push
rol
add
in
cmp
nop
mov
push
xor
and
fisubl
cmp
cltd
xor
shr
insb
and
push
loop
popa
nop
imul
xor
pop
mov
mov
fwait
dec
enter
cmp
push
test
jg
cltd
nop
and
loop
scas
fstpl
les
or
adc
and
test
push
popa
lods
push
in
xchg
cmp
xor
jns
idivl
std
sbb
xchg
lahf
push
push
aas
test
icebp
sbb
cmp
in
inc
roll
fsts
fisubs
mov
pop
add
lods
or
mov
insl
xchg
int3
aaa
mov
popa
xchg
sbb
push
ss
cld
jmp
das
sarb
cmp
jo
mov
lret
dec
int3
insl
mov
mov
sbb
test
xchg
or
in
shl
ljmp
add
dec
cmc
js
xchg
xor
pop
dec
fldenv
jmp
mov
push
and
out
inc
sbb
les
pop
js
or
rclb
xor
jmp
jno
pushf
mov
push
jae
cmp
push
in
fdivs
loop
rolb
pop
add
mov
pop
stc
add
sbb
inc
test
pop
lahf
call
out
and
pop
xlat
jae
pop
pop
add
lahf
fadds
les
xor
jne
loop
leave
cld
push
push
push
rclb
inc
gs
shrb
clc
das
and
adc
mov
pop
test
ds
test
xor
and
inc
out
jnp
cmp
sub
pop
and
mov
mov
sub
mov
out
sbb
in
xor
hlt
add
jae
add
inc
jmp
es
sti
dec
clc
imul
loopne
mov
mov
xor
in
loop
aas
insl
adc
and
mov
sub
pop
pop
mov
pop
inc
leave
pop
idivl
mov
lret
add
push
adc
push
adc
repz
lret
cmp
push
lret
popa
bsf
lock
leave
mov
call
orb
mov
dec
outsb
gs
insb
cmp
out
jg
mov
test
insl
xor
test
cmc
add
cld
push
fisubs
adc
pop
test
mov
sbb
push
push
dec
outsb
out
fnsave
pop
sti
sbb
sbb
subl
push
call
sbb
aas
jno
xor
adcl
mov
nop
iret
int
inc
cli
or
xor
mov
dec
out
xor
mov
mov
pushf
add
out
inc
outsl
fimull
mov
test
sub
andl
jae
dec
mov
jbe
hlt
icebp
cmp
push
jbe
rclb
cmpsl
xor
leave
inc
das
xchg
jne
mov
push
mov
inc
adc
lock
or
cmpsl
mov
xor
pop
jno
into
mov
xchg
lea
stos
in
mov
aaa
dec
mov
scas
xchg
inc
out
jbe
jne
pop
insl
dec
mov
cld
scas
movsl
repz
or
mov
lcall
jl
movsb
or
test
adc
rcr
jbe
sub
sub
idivb
dec
sub
inc
popa
jg
das
repnz
mov
adc
clc
dec
mov
shrl
inc
sahf
scas
int3
lds
das
cmpsb
dec
inc
les
add
repnz
and
jo
int3
xlat
jne
bound
push
inc
jnp
mov
sbb
iret
fwait
and
loopne
nop
aaa
pop
push
and
pop
and
hlt
pop
dec
scas
daa
inc
jecxz
and
movsb
stc
insb
pop
pop
push
add
adc
outsl
loop
xor
loope
enter
or
ljmp
cmpb
shl
movsl
arpl
inc
sbb
dec
cmp
cwtl
aaa
xchg
xor
cmp
pop
mov
or
enter
cmpsl
push
popa
mov
sub
addr16
jne
lods
jns
xchg
push
out
mov
sub
mov
xchg
in
repz
das
mov
jmp
rcrl
cltd
adc
adc
enter
jno
xor
mov
fcmovnb
jbe
orb
mov
pop
cs
add
and
loop
cmp
pop
or
inc
pop
sbb
mov
jno
mov
mov
ja
adc
mov
inc
aad
dec
jb
clc
pop
loopne
mov
pop
adc
icebp
sahf
cmp
pusha
jne
gs
jg
lds
lods
xchg
setb
cmp
rol
cmpsb
nop
out
sbb
add
ljmp
mov
xchg
repnz
push
pop
dec
ja
add
fs
fidivrl
fmul
adc
sub
fldenv
popa
je
or
jae
pop
xchg
dec
sbb
sbb
push
movsl
jmp
cltd
shl
hlt
mov
pop
pop
ret
fists
dec
aaa
lea
sahf
enter
inc
es
out
ljmp
aas
and
mov
popa
push
push
sub
cmp
mov
jae
mov
or
aaa
dec
fnsave
jp
cmp
pop
fimull
mov
in
fistps
push
pop
pop
fdivr
push
sarl
and
pop
aad
mov
lds
sbb
out
inc
std
in
add
in
cld
add
or
out
cmp
dec
lret
and
pop
in
lods
dec
pop
std
lahf
adc
pop
repz
lret
push
jne
mov
push
pop
fsubp
je
jmp
rcl
test
mov
xchg
sub
leave
push
stos
call
out
mov
je
repnz
loopne
arpl
push
cwtl
movsl
stos
leave
mov
push
and
mov
popa
cmp
cmc
popf
mov
dec
or
movsl
int
or
mov
sub
popa
xchg
rcr
addr16
mov
rcll
and
mov
and
pop
out
add
fnsave
xchg
or
iret
insb
imul
in
or
popf
xchg
add
jl
cld
outsb
dec
sti
inc
fisubrs
or
dec
fldl
js
test
jg
cltd
packsswb
fnstcw
mov
xor
sarl
and
jmp
enter
outsl
jle
into
outsl
jmp
ja
ljmp
push
dec
or
dec
lea
push
setl
push
mov
push
mov
or
fcomi
call
add
jno
mov
inc
repnz
loop
sub
out
stc
in
mov
xor
inc
aas
out
aad
jg
mov
push
jge
or
xor
rolb
shlb
adc
and
shrb
adc
push
and
pop
les
jnp
out
xchg
mov
xlat
or
mov
dec
jg
xor
sbb
mov
cmp
popa
or
scas
lcall
xor
jecxz
shrl
mov
cs
mov
adc
inc
add
pop
mov
shr
adc
xchg
scas
xlat
jo
jnp
popf
mov
repz
jmp
rorb
and
movsb
nop
jmp
sbb
mov
cmp
adc
push
push
jecxz
adc
ret
outsl
xor
jb
js
mov
and
not
dec
dec
into
popf
sub
inc
mov
push
mov
insb
pop
cmp
insl
xor
mov
sub
sbb
flds
push
and
add
push
adc
mov
inc
out
push
jecxz
fsts
shll
mov
adc
xchg
lock
mov
cltd
inc
shll
and
cmp
sub
mov
mov
sbb
aaa
loopne
lahf
xor
scas
jne
mov
xor
lahf
test
std
je
test
xchg
mov
outsb
out
ja
inc
cmp
test
aad
inc
pop
dec
nop
mov
ret
xchg
popf
inc
sub
mov
mov
sub
jo
jp
ljmp
xor
mov
dec
sbb
lahf
repnz
sti
cmp
psubq
lods
mov
sub
mul
dec
repnz
lock
test
movsl
or
or
mov
arpl
lods
push
push
inc
sbb
ja
or
pop
adc
int
sti
outsb
inc
sub
out
inc
and
mov
pop
inc
jae
jbe
or
gs
dec
push
jecxz
cltd
incl
mov
mov
pop
mov
lret
inc
dec
xlat
fchs
mov
repnz
push
pop
mov
out
pop
dec
jmp
loopne
push
mov
push
pop
clc
sub
sub
inc
push
or
ljmp
mov
and
fidivl
icebp
adc
call
sbb
imul
pop
orb
fcmovne
outsb
out
push
xchg
dec
jmp
mov
negl
fmulp
int
cmp
mov
enter
js
pushf
cmp
pop
fsubr
fiaddl
je
pop
push
jg
dec
outsl
add
arpl
push
jle
test
nop
add
lahf
hlt
xchg
xlat
cltd
mov
mov
mov
mov
jmp
jae
pop
adc
out
add
mov
jge
ret
inc
xor
lret
ss
add
iret
pusha
xchg
sbb
lods
add
scas
cmp
add
idivb
jl
push
inc
fimull
stos
test
fld
fldcw
clc
int
cmp
cs
add
jg
xchg
xchg
aad
iret
fimuls
push
add
lods
and
outsb
jae
imul
shr
cwtl
xchg
jns
arpl
movsl
mov
add
test
bound
or
les
in
mov
sub
pop
neg
lcall
cmpsl
in
mov
loope
mov
testl
lret
mov
xor
in
jecxz
dec
mov
cmpl
mov
and
pop
or
in
aad
inc
jmp
lret
mov
or
testb
xor
cmp
mov
adc
jp
pusha
cmp
push
and
pop
sub
int
out
repnz
int3
rcrb
cltd
mov
xchg
mov
mov
mov
stos
pop
push
dec
dec
scas
aam
clc
xlat
lods
push
out
fcomi
mull
jne
pop
imull
xchg
les
pop
cmp
pop
lret
lods
jmp
push
movsl
sub
aad
push
jecxz
push
lods
xchg
ljmp
inc
xor
test
scas
mov
imul
jns
dec
fwait
push
pop
jmp
xor
mov
adc
jge
or
insb
sahf
and
push
mov
outsl
dec
and
addb
aam
sub
pop
or
lahf
mov
cmp
icebp
jno
scas
mov
cmp
lcall
or
inc
inc
xchg
inc
pop
movsb
or
orl
cli
pop
nop
dec
lods
aas
outsb
cmpsb
inc
repnz
scas
insl
cld
inc
push
lahf
jg
in
movsb
xchg
daa
jecxz
ss
inc
insl
inc
rol
mov
sti
andl
iret
dec
mov
sub
mov
cmp
xor
cmp
sub
les
jecxz
sbb
shll
xchg
xorb
pop
or
pop
enter
cmpsb
and
les
or
fsubp
out
insl
loopne
iret
inc
cwtl
jb
cwtl
fcmovnbe
frstor
sti
add
lret
je
mov
and
pop
fisttpll
in
cmp
je
push
mov
dec
out
sbb
push
or
inc
out
and
mulb
inc
add
popl
push
pop
jb
mov
pop
sub
pop
and
imul
cmc
inc
dec
test
add
mov
mov
ja
adc
mov
out
daa
sub
push
adc
dec
mov
xchg
mov
jle
mov
iret
xchg
add
push
add
ljmp
and
prefetch
in
jae
sub
inc
push
mov
dec
inc
xor
mov
xchg
mov
jae
adc
mov
inc
fwait
hlt
add
rol
push
std
outsl
cmp
dec
cmp
mov
shl
cltd
xor
push
inc
aad
loopne
or
pop
pop
adc
incb
scas
enter
leave
adc
repnz
or
mov
xor
inc
pushf
jne
out
dec
in
js
mov
sub
xchg
adc
or
jmp
dec
mov
fs
imul
and
adc
aam
mov
xor
rolb
test
out
lret
clc
pop
cwtl
inc
mov
sti
addl
fs
mov
enter
cmp
rol
sbb
sbb
sub
xor
imul
and
call
adc
pop
insb
jg
pop
mov
arpl
push
loope
sahf
loope
decb
push
mov
shrb
loope
sbb
xor
cmc
push
or
xchg
ss
push
aam
push
hlt
int
stc
sub
adc
mov
inc
dec
dec
fadds
cmp
or
jp
inc
sti
pop
or
mov
test
sbb
push
out
call
push
loope
or
and
arpl
cmpsb
mov
xchg
das
dec
xchg
dec
jnp
push
insb
out
movsb
and
add
addl
scas
sahf
jo
cwtl
iret
shll
mov
ret
xchg
cmp
mov
scas
stc
rcrl
cmp
aad
adc
mov
inc
adc
push
adc
jge
dec
cmpsb
repz
mov
push
sbb
mov
adc
dec
push
cmp
push
xor
mov
push
xchg
int3
ret
rcll
add
jns
add
push
imul
stc
je
xchg
cltd
or
lods
add
shlb
in
repz
add
or
cmp
pop
int3
xchg
mov
int3
lods
sbb
sub
mov
lahf
mov
jmp
bnd
outsb
js
dec
inc
out
sub
pop
shlb
adc
negl
or
jecxz
pop
ja
insl
or
lahf
es
cld
es
jnp
cmp
jo
adc
je
mov
mov
jle
xor
sub
aad
xor
imul
ljmp
jno
popa
sub
sub
pop
mov
dec
jg
jbe
mov
sub
xchg
xchg
popf
cmp
sub
sub
or
add
call
jae
mov
aaa
cmp
sbb
fisubs
inc
addl
or
outsl
push
xor
cmpsl
clc
aam
lock
pop
jae
loop
ret
mov
cmp
daa
jno
push
adc
rcrl
or
flds
out
inc
lea
push
sbbb
pushf
icebp
cld
ret
rcrb
mov
ljmp
cld
fisubs
mov
sub
jmp
inc
sbbb
icebp
mov
stc
mov
repz
cmp
pop
add
push
dec
and
or
stos
stc
ret
push
mov
mov
pop
sbb
enter
add
mov
aaa
mov
sahf
js
lcallw
and
push
sahf
dec
out
lcall
pop
dec
jae
into
mov
mov
jp
adc
stc
test
lret
bound
test
pop
out
imul
lcall
push
aad
adc
scas
test
push
pop
adc
fsubrs
jo
int3
lahf
mov
mov
or
test
aam
pop
std
xchg
jp
repnz
cld
in
cmp
xor
ljmp
xor
mov
mov
inc
and
jbe
rcrl
jae
inc
xchg
jle
dec
cmp
push
pop
das
into
xchg
or
jno
repnz
jl
jb
out
pop
add
jecxz
xor
cmp
iret
mov
fldl
negb
or
add
add
ja
mov
mov
adc
pop
and
mov
stos
push
adc
inc
adc
sub
in
lcall
lea
pop
pop
dec
or
lret
hlt
push
and
scas
xchg
ret
xlat
push
jl
xor
mov
push
inc
repnz
pop
repnz
out
xchg
xor
fsubrl
mov
push
cltd
cwtl
xor
or
sbb
pop
test
dec
fisubrs
adc
push
nop
into
mov
inc
or
xchg
lcall
xor
add
inc
sar
aaa
cltd
adc
movsl
lods
dec
shll
cmpsl
stc
pop
adc
mov
cs
jne
gs
insl
ss
and
mov
pop
jge
lds
fmuls
sbb
pop
fists
lret
cmp
in
mov
lods
inc
aam
add
cmp
shll
mov
xchg
cmp
xchg
test
jae
mov
popa
ss
imul
inc
out
push
popa
rol
test
sub
jnp
insb
fwait
imul
outsl
adc
out
test
xchg
lahf
insl
mov
inc
cmp
sbb
and
out
jle
add
mov
sbb
push
mov
dec
sbb
cmpsb
pop
cmp
adc
and
ret
xor
mov
mov
ljmp
lcall
cmpsb
add
movsb
xor
mov
sbb
fisubrs
push
or
jmp
push
adc
and
jmp
hlt
pop
cmp
das
xchg
pop
call
aas
sbb
push
pop
xor
loope
push
sub
sub
lret
or
in
in
jmp
sub
std
stos
and
aad
fnstsw
outsl
mov
dec
dec
aad
jnp
xchg
add
push
cwtl
sub
call
movsb
push
int
not
xor
hlt
jns
ret
and
cmpsl
enter
stc
and
mov
adc
pop
pop
ljmp
or
mov
pop
lahf
sub
or
push
xchg
push
ljmp
adc
lock
jns
pop
add
mov
jne
cmp
cmp
outsl
push
push
aad
shl
roll
lods
xor
lret
ss
call
and
push
inc
cmp
sbb
jl
xor
ljmp
cmpsb
mov
jg
mov
sbbl
std
leave
sub
dec
pop
sub
jnp
lock
into
es
pop
ret
push
sub
or
sarb
adc
and
mov
sub
adc
ja
add
mov
fstpt
loopne
fidivs
fwait
out
jmp
loopne
subb
outsl
pop
insb
add
fsubl
lods
push
or
xchg
push
scas
rolb
mov
cld
pusha
int
xchg
mov
push
hlt
out
repz
mov
sub
add
fdivrs
jg
and
jb
cmp
mov
cld
fcompl
outsl
in
stc
pop
cmp
stos
mulb
mov
sbb
scas
ss
outsl
push
cmpsl
aam
push
icebp
xchg
out
ss
cmp
ja
sarb
dec
ficoms
jns
out
stos
ja
leave
divb
or
jge
dec
jmp
sbb
or
out
out
mov
and
inc
test
in
out
test
arpl
xor
jae
mov
mov
loop
int
cli
pop
add
in
outsb
cmp
and
popa
cld
daa
shll
rclb
imul
adc
jb
jae
fildll
mov
mov
jno
lahf
clc
sahf
adc
in
add
pop
mov
popf
pop
lds
and
dec
mov
or
adc
mov
jecxz
js
mov
add
aaa
mov
xchg
int3
jae
sbb
scas
movsb
insl
push
fidivs
orb
and
sbb
lret
add
aas
or
sub
mov
pusha
adc
sbb
sbb
leave
inc
sub
sti
ds
notl
inc
cmpsb
insl
fucom
jb
ret
loope
into
adc
lock
sbb
xor
xor
out
add
add
xor
lds
xor
xor
push
jo
push
sub
inc
push
lcall
mov
movsl
mov
push
and
jecxz
and
das
es
xor
push
cli
mov
or
or
or
loopne
outsl
arpl
push
lods
std
test
pop
or
mov
jl
and
sub
lds
insl
aas
adc
push
aas
bound
adc
jae
cltd
popf
sbb
adc
sub
jmp
addr16
pop
mov
out
insb
jno
lea
mov
add
mov
shrl
xchg
insl
push
popf
mov
out
jge
pop
fxch
mov
orb
fiadds
pop
fldl
lds
cld
inc
incl
stos
dec
xchg
xor
push
cmp
scas
sbb
fmuls
or
or
repz
out
je
lock
jle
das
mov
add
xlat
inc
cltd
js
and
and
aad
bound
ljmp
adc
and
sub
fmuls
fstps
inc
sub
or
jge
aad
or
sbb
xor
lds
mov
push
imul
lahf
imul
mov
fmull
add
in
insb
das
sbb
sub
cmp
pop
jne
es
push
mov
mov
sahf
rcl
ds
mov
sbb
mov
cmp
pop
xorl
cmp
mov
pop
int3
movsl
inc
push
xor
in
cld
xchg
xor
lods
cmp
jbe
xchg
jb
scas
fidivrs
in
imul
add
enter
jecxz
pop
int3
movsl
and
pop
jne
adc
in
jg
pop
jae
test
adc
pushf
push
mov
cmpsb
stos
push
test
iret
dec
roll
sub
mov
and
test
dec
gs
pop
into
xor
shll
in
lods
insl
rcll
mov
xchg
cmp
inc
mov
jecxz
outsb
add
push
sbb
mov
cwtl
stos
add
ret
xor
rol
or
mov
pop
lods
aam
jecxz
outsl
fidivrs
aam
jle
testb
jns
jge
mov
insl
or
push
and
sbb
mov
lret
leave
sub
mov
scas
out
lcall
sub
and
jmp
mov
es
pop
call
rorb
jno
pop
or
jnp
mov
insb
mov
mov
jecxz
pop
ds
pop
scas
hlt
sbb
inc
pop
or
sub
xchg
lret
and
or
and
and
cli
fsubr
out
pop
pop
lahf
fnstsw
mov
lea
jns
add
push
ja
imul
out
stos
cmpb
bnd
fimull
sub
das
insl
aas
hlt
fisubrl
adc
dec
js
adc
scas
mov
and
inc
push
sbb
loop
sbb
mov
fstl
xchg
rcr
cmp
add
cltd
fldpi
dec
les
in
cltd
add
loopne
stos
push
jo
dec
inc
mov
and
loope
push
hlt
lret
icebp
jg
pop
hlt
mov
add
aas
mov
add
push
fsub
imul
inc
inc
add
sbb
mov
mov
mov
sbb
mov
jmp
movl
ret
xchg
cs
push
mov
jl
jmp
jl
adc
dec
xchg
mov
fsubl
dec
xor
je
test
in
scas
inc
shlb
push
add
and
xor
pop
pop
insb
filds
pop
add
or
cmp
sub
jecxz
xor
pop
sub
pop
hlt
sbb
ss
int3
or
ret
mov
dec
shrl
outsl
add
cmpsl
pop
divl
stos
pushf
adc
das
flds
lea
ljmp
repz
pop
mov
cmp
sub
sbb
loop
fadds
popa
dec
or
push
adc
retw
imul
xor
movsb
dec
or
mov
cmpsb
pushf
and
sbbl
daa
lahf
popa
mov
mov
mov
cmpsb
es
mov
and
or
aaa
jecxz
pop
pop
inc
lods
adc
sub
jns
push
rcrl
fnstcw
sub
dec
cli
mov
sub
jecxz
fidivrl
add
out
enter
sbb
cld
das
es
inc
test
push
and
negb
cmp
sbb
sbb
inc
pop
mov
mov
push
adc
pop
mov
mov
fcomps
cmpsl
dec
sbb
fdivp
sub
rcr
inc
pop
adc
pop
push
lret
pushf
inc
out
movsb
jb
aad
loopne
adc
pop
pop
out
mov
and
inc
jnp
mov
xchg
dec
in
add
or
iret
aaa
leave
push
testb
adc
out
lods
mov
xchg
cltd
sub
in
pusha
aam
rcrl
ja
and
cli
stos
rclb
add
mov
test
mov
mov
and
and
insl
pop
out
pusha
dec
fdiv
stos
dec
push
scas
mov
pop
lret
add
into
mov
adc
cmp
out
sbb
push
adc
lock
xchg
repnz
mov
imul
popf
jne
movsb
inc
mov
arpl
mov
pop
inc
lea
enter
dec
sarb
inc
push
push
sub
test
pop
dec
dec
pop
out
das
xchg
push
add
outsl
lods
mov
xor
std
jbe
dec
lcall
lods
mov
andl
xor
adc
in
popf
nop
faddl
jo
push
push
adc
sbb
and
cltd
into
or
shl
ss
add
jo
cli
xchg
xchg
pop
clc
mov
lds
sub
repnz
das
mov
inc
dec
aaa
rolb
adc
cmp
pop
mov
pop
xlat
leave
mov
dec
aaa
pop
cmp
mov
push
clc
repz
lods
pop
shl
mov
lea
mov
fistl
roll
shll
fbstp
inc
cmc
push
xchg
imul
jns
cmovae
hlt
insb
in
arpl
add
popa
int
mov
subl
or
popl
icebp
bound
xchg
and
sbb
nop
fs
pop
pop
mov
jb
inc
mov
sbb
in
sub
stc
test
imull
cmp
add
jo
imul
jmp
aad
aas
push
addr16
ss
int
dec
cmp
sbb
push
scas
xchg
xlat
div
je
mov
sub
lea
pandn
setg
mov
pop
pop
loopne
loope
mov
int
sbb
negb
lahf
push
inc
push
aad
out
adc
xlat
stos
pop
call
add
std
scas
lock
lahf
mov
roll
cmpsb
js
mov
aaa
decl
mov
mov
scas
xchg
enter
dec
pop
jo
stos
js
mov
cwtl
cmp
jmp
pop
lods
lea
pop
adc
pop
xchg
call
inc
add
test
xchg
bound
cmp
mov
lret
dec
push
int
testb
scas
popa
leave
jne
pop
pop
subb
shll
mov
imul
das
push
add
les
les
test
fsubrs
inc
push
out
adc
mov
push
cmpsl
ret
lock
push
testl
and
cmp
pop
push
pop
sbb
bound
mov
icebp
adc
inc
lahf
fidivrs
xchg
rclb
in
in
pop
mov
nop
lock
mov
stos
mov
mov
cmp
mov
cmp
lahf
call
mov
test
mov
jno
jae
popa
mov
and
cmp
inc
sub
scas
push
jg
sub
iret
adc
jo
leave
mov
inc
je
mov
fisubs
xchg
adc
mov
sbb
inc
sbb
shl
lea
repnz
xor
or
sbb
sbb
add
popf
out
ds
int
pop
xchg
jmp
cmpsb
pop
dec
andb
xchg
test
mov
sub
aaa
pop
cmp
out
cmp
mov
icebp
mov
xchg
ret
cmp
jb
dec
outsb
and
ljmp
pop
mov
dec
adc
fistps
xchg
pop
add
iret
loope
push
dec
in
xor
js
xchg
push
les
jmp
add
pop
fsts
jb
cmpsl
mov
mov
out
push
xchg
loop
das
pushf
dec
cmp
movsl
mov
jge
data16
ss
add
cmp
mov
jecxz
movsl
push
icebp
std
mov
cwtl
sti
pusha
test
cli
xor
mov
add
cpuid
sahf
mov
cmp
inc
rolb
adc
inc
adc
inc
and
or
mov
out
popf
fsubrl
icebp
sahf
into
loopne
out
dec
repnz
ljmp
ss
mov
xchg
mov
test
jmp
jb
aaa
mov
call
sbb
outsl
cltd
push
push
insl
mov
scas
enter
insl
push
pop
adc
lds
aad
pop
push
popf
lock
dec
mov
fucomi
add
lcall
aam
mov
movsl
icebp
inc
fisubrl
sub
lret
lret
mov
push
inc
clc
sub
sahf
cs
sub
popa
mov
loop
leave
mov
mov
jmp
inc
scas
ret
jmp
lods
add
adc
test
addr16
and
xor
add
loopne
xchg
cmp
sbb
iret
sbb
push
jbe
add
je
test
jbe
push
add
jg
test
movsl
mov
ret
xor
insl
call
sbb
push
cmp
ljmp
add
fcoms
push
and
sbb
and
inc
and
jl
test
mov
inc
xor
xor
jecxz
int3
fcmovb
pop
sbb
mov
test
mov
inc
mov
sbb
sbbl
dec
pop
jbe
lahf
pop
mov
or
lods
stc
rcl
mov
and
push
repz
mov
cld
xor
pop
mov
add
shr
lock
fnstsw
sbb
jb
adc
push
and
mov
nop
stos
or
lods
decb
movsl
push
imul
test
outsl
loopne
std
mov
sub
cmpl
inc
inc
jo
dec
bound
push
lds
push
xchg
roll
cmpsl
push
pop
mov
mov
addr16
jnp
mov
xlat
xor
xchg
int3
movsl
ret
and
pushl
loop
ret
jns
push
dec
adc
mov
xchg
shll
jle
sub
pusha
inc
cmp
data16
jnp
fists
test
mov
xchg
cs
mov
adc
out
add
xor
lahf
aaa
push
inc
sbbl
jge
in
aad
shll
and
mov
and
push
fistpll
push
jl
ljmp
cmp
cmp
jbe
rcll
cmp
and
push
push
mov
dec
sbb
jae
xchg
shll
jne
loopne
in
cmp
inc
pushf
repz
sar
shrl
movsl
mov
or
call
inc
sub
push
mov
mov
leave
enter
sahf
add
lret
mov
lods
je
in
popa
add
lock
inc
add
inc
sub
xchg
gs
rorl
xchg
in
out
lret
push
cmp
dec
and
xlat
sub
je
add
in
cmc
aad
and
xor
xchg
push
dec
jne
imul
outsl
cmp
out
sahf
dec
popf
stc
push
cmpb
mov
js
inc
movsb
je
call
dec
mov
push
ficoms
shll
adc
adc
lret
push
testl
mov
je
fidivs
mov
adc
jbe
es
jg
ud0
mov
adc
notb
test
lods
sti
out
adc
inc
fdivrp
shll
jl
or
nop
subb
cmp
outsb
and
cli
in
lret
sti
sti
xor
xchg
or
mov
inc
ljmp
inc
sbb
pop
add
mov
or
repz
jne
cs
add
sub
inc
sahf
out
pusha
lods
xor
mov
jo
cmp
pop
push
add
mov
std
mov
xor
and
mov
sub
test
sbb
aam
push
neg
sub
dec
mov
lock
xchg
pushf
sub
movsl
shr
or
dec
sbb
hlt
pushl
xor
movsb
mov
add
aam
cmp
dec
mov
sbb
insb
xor
adc
js
pushf
jge
and
adc
inc
into
pop
adc
cltd
mov
rol
mov
mov
jecxz
inc
into
mov
aam
movsb
movsb
cmc
sti
orl
push
sub
cmp
js
mov
mov
xor
add
pop
test
std
and
jno
mov
lahf
jmp
jle
in
int3
popa
jb
ds
pop
sbb
nop
insl
shlb
hlt
sti
inc
sbb
adc
mov
sbb
mov
lretw
xchg
xor
add
pop
js
sbb
outsb
movb
xor
inc
cmp
int3
mov
push
dec
adc
aaa
xor
leave
pop
pop
int3
cmpsl
xor
or
cs
pushf
hlt
leave
stos
repz
shlb
leave
aad
gs
fstps
imul
mov
adc
sbb
in
sbb
aad
xchg
mov
add
fwait
sub
into
ret
pop
adcb
mov
dec
je
in
push
aad
mov
xor
mov
cltd
jl
jbe
imul
mov
fucomi
or
adc
xchg
dec
ja
fisubrs
inc
push
add
pand
dec
mov
push
lahf
clc
out
xor
addl
mov
sbb
or
xor
imul
les
loop
es
lea
mov
adc
cmpsb
jge
push
lods
add
aad
jge
or
sub
test
stc
pushf
test
lea
adc
js
sub
inc
test
pop
or
je
je
fidivrl
outsl
push
jle
jne
aam
lods
sbb
xchg
adc
and
mov
mov
testl
jmp
aas
adc
dec
lea
jg
dec
jnp
pop
hlt
xchg
pop
mov
jbe
inc
fs
test
push
or
dec
sbb
fmull
icebp
dec
dec
inc
loop
adc
pushf
adc
and
cmp
aas
dec
pushf
shrl
push
push
mov
jno
push
loopne
and
push
or
xchg
pop
sbb
mov
add
decl
add
pop
mov
data16
shlb
pop
mov
xchg
or
mov
idivb
xchg
add
pop
fwait
pop
cwtl
repnz
or
imul
mov
jl
cli
cmp
sub
iret
ds
mov
ss
out
test
or
push
xor
and
imul
pop
mov
jnp
enter
adc
add
sub
repz
jmp
inc
inc
shrl
jb
sbb
dec
or
add
push
pop
push
fdivp
imul
rorb
add
fstpt
mov
rcll
sbb
adc
data16
jne
pop
les
or
test
xor
hlt
sub
hlt
cltd
adc
mov
sbb
mov
adcb
loope
cmp
add
push
lea
add
shlb
in
shlb
insl
or
in
push
dec
imul
clc
cmp
stos
std
pop
divb
adc
iret
push
divl
shrb
pop
cld
adc
cli
sub
daa
xchg
orb
jp
add
adc
test
inc
push
stos
mov
call
cltd
cmp
push
push
js
and
xor
jns
adc
popf
xor
aad
enter
jbe
adc
nop
leave
xchg
xor
mov
shl
ds
push
fcmovnu
nop
fisttpll
xchg
lahf
pop
inc
jnp
dec
or
shlb
jmp
outsb
cmp
push
icebp
pop
jl
out
push
lods
mov
sub
inc
adc
cltd
push
and
jns
mov
ds
test
add
pop
pop
jmp
mov
dec
sahf
leave
jmp
dec
add
xchg
or
movsb
and
sbb
xchg
cmpsl
lds
out
pop
in
and
js
adc
jecxz
popw
adc
rclb
sbb
mov
stos
and
or
jl
into
sub
jge
inc
mov
jp
pusha
and
cmp
les
add
lret
movb
mov
stos
cmp
push
xchg
dec
bound
xchg
lahf
out
xchg
andb
es
inc
movsb
pop
dec
in
inc
andb
mov
out
repnz
stc
pop
pushf
shl
pop
push
sub
push
fiaddl
xor
je
lds
xor
xchg
sbb
cmp
mov
sub
xorl
bound
mov
fs
cmp
out
nop
mov
lcall
jns
addr16
bound
inc
rcl
mov
pop
ds
and
cwtl
jb
std
ss
leave
loop
jo
inc
outsl
sbb
leave
addr16
push
pop
mov
mov
mov
test
js
mov
jnp
aad
sbb
mov
adc
das
or
mov
out
add
test
popf
into
lods
and
scas
jl
fisttpl
push
xor
push
adc
jp
bnd
xchg
outsb
decl
xor
out
in
call
out
inc
loopne
inc
pop
fildll
jo
mov
ss
fdivrl
adc
jmp
adc
fnstsw
fisttpll
cmc
arpl
push
adc
mov
jbe
out
sbb
insl
add
fwait
push
xor
daa
andb
std
in
mov
repnz
in
fwait
and
sub
jmp
jle
sbbl
insb
push
icebp
mov
adc
aaa
fiadds
xor
xchg
pop
in
imul
dec
sub
in
out
adc
pushf
int
sub
dec
mov
lock
movsb
in
pop
test
out
pop
arpl
sbb
sub
inc
mov
sbb
sbb
pop
push
xchg
inc
jne
add
pop
mov
cmp
mov
inc
adc
cmp
mov
push
dec
sub
push
out
sub
pop
sbbl
push
das
orb
repz
mov
push
jnp
fstpl
pop
and
iret
adc
mov
and
add
dec
pusha
jmp
xchg
fs
rclb
sbb
cmp
jle
cwtl
cli
scas
jb
cld
sbb
pop
sub
int
dec
inc
sub
pop
mov
fnstsw
pop
and
je
fwait
test
jg
xlat
test
adc
jnp
mov
call
add
xor
stos
mov
jae
xor
xchg
inc
cmpl
push
cwtl
pop
enter
fmul
clc
pop
or
mov
scas
cmp
stos
scas
xor
lea
std
dec
in
fidivl
je
scas
je
cmpb
mov
xchg
mov
loop
push
cwtl
xor
and
lahf
and
stos
cmp
movsb
ljmp
dec
mov
jp
test
jmp
sbb
dec
and
mov
out
fstpt
imul
add
inc
shll
dec
and
lock
lret
cwtl
out
sub
push
sub
inc
sbb
mov
cmp
imul
mov
enter
lcall
jb
push
scas
setbe
jbe
daa
push
push
cmpsb
and
adc
sahf
iret
inc
fbstp
enter
fistpll
dec
sbb
or
mov
les
cmc
xchg
divl
push
xlat
cs
xchg
leave
shll
movsb
mov
mov
push
rcrl
and
gs
lcall
add
fadds
push
shlb
cld
int3
xor
insl
pop
mov
cmpl
lret
gs
out
xchg
mov
or
sbbb
cmp
lock
shlb
sarl
shl
cwtl
push
cmp
jns
lcall
stos
mov
xchg
icebp
mov
nopl
add
mov
fidivrs
inc
mov
fadd
mov
movsb
popl
xchg
jp
nop
ds
lcall
hlt
addr16
hlt
mov
sbb
icebp
lds
cmc
mov
inc
clc
fs
data16
pop
and
mov
and
fs
je
dec
fdivrl
cmp
pop
and
out
xor
lahf
aad
pop
loope
fisubrl
or
mov
lock
sbb
loopne
dec
dec
xor
add
pop
dec
mov
fists
mov
rcrb
inc
add
xor
cmp
cmpsl
mov
inc
outsb
xchg
stos
test
out
mov
xor
insl
xor
lahf
pusha
arpl
insl
aam
mov
pop
jb
sbbl
call
adc
movsb
cmp
test
xor
push
dec
sub
sti
mov
fisttpl
cwtl
andl
aad
outsb
inc
movsb
int3
les
push
outsb
rolb
mov
dec
pop
mov
out
and
add
mov
and
push
mov
xor
rcrl
pop
fiaddl
push
sbb
mov
iret
std
movsb
dec
sbb
cs
mov
sub
orl
sub
and
aad
shrb
imul
into
movb
shrb
lcall
gs
push
cmp
mov
pop
adc
xor
pop
xchg
xor
inc
jbe
testb
xor
jg
popf
push
jmp
bound
es
mov
rorb
jmp
sbb
or
aas
cltd
cwtl
cli
leave
fnstenv
adcl
adc
jmp
pop
inc
push
sbb
adc
mov
pop
insl
cmp
dec
popa
insb
mov
push
cmp
xchg
and
add
movsb
mov
cmpl
mov
out
inc
pop
push
adc
dec
mov
lret
aas
inc
les
xchg
dec
mov
mov
xchg
mov
lret
and
aas
fisubl
fists
sub
loopne
mov
ret
mov
repnz
add
aam
or
dec
sub
mov
lcall
jns
push
cld
lods
test
scas
mov
inc
jl
mov
lret
mov
mov
scas
mov
pusha
xchg
pop
inc
fildl
in
in
jge
dec
xor
adc
aad
jl
in
or
lods
cmpb
xor
push
aad
mov
lret
arpl
adc
in
mov
inc
cmp
popf
scas
push
and
in
iret
insb
and
and
aam
lock
add
rcll
push
or
push
push
gs
and
adc
out
mov
xlat
loope
in
mov
mov
mov
in
bound
dec
jb
iret
cld
jb
dec
mov
mov
mov
mov
bound
arpl
loope
jecxz
mov
inc
or
cmp
popa
js
jb
arpl
femms
pop
mov
mov
aad
inc
fs
movsl
enter
sbb
fwait
imul
sbbb
xor
movsl
pop
push
adcl
or
jb
dec
cs
pop
mov
pop
out
mov
cmpsl
insb
or
out
push
jg
jecxz
fimuls
arpl
ja
xor
and
push
dec
ljmp
inc
dec
call
cli
pusha
repnz
fbld
cmp
rcrb
add
adc
inc
adc
xor
jp
mov
insb
out
mov
int
jbe
mov
sbb
cmp
iret
push
out
insl
out
bound
cltd
daa
mov
lock
jmp
mov
inc
xor
mov
stos
jl
imul
inc
mov
sbbl
cmc
inc
jmp
je
or
movsb
cwtl
xchg
mov
jp
mov
test
and
stc
xor
leave
xchg
mov
jo
bound
mov
imul
mov
sbb
jb
cwtl
dec
add
or
inc
mov
ficoms
add
sbb
jge
mov
nop
mov
dec
jno
mov
mov
cld
xor
mov
jno
mov
in
xchg
jne
jl
xchg
rcll
mov
inc
movsl
scas
fistl
aaa
cmp
push
clc
inc
into
lock
lds
loope
pop
inc
movsb
sub
push
mov
in
dec
pop
popa
stc
xchg
cmc
out
sbb
fwait
xor
in
jle
pop
or
mov
mov
shll
push
and
fnstcw
mov
mov
sbb
aas
stos
popa
fildl
aaa
mov
leave
adc
inc
divb
leave
pop
xchg
cwtl
cmc
adc
dec
xor
pushf
fimuls
mov
shlb
dec
mov
insl
or
xchg
repz
inc
lret
movsl
and
jge
mov
je
jbe
std
dec
sbb
inc
cmpsb
ja
imul
add
ficompl
xchg
in
js
movsl
mov
andl
push
cmp
ret
ss
aaa
jbe
mov
loope
or
mov
ds
fxch
fdivrl
mov
add
xchg
push
ds
sub
bnd
xor
fidivrl
and
sbb
xchg
mov
and
mov
aam
mov
cmp
fistpll
imul
stos
loop
inc
out
sub
mov
test
mov
adc
les
fadds
movsl
pop
in
loop
push
pop
xchg
add
test
lea
pop
xchg
jnp
ja
add
std
push
push
popa
and
jg
adc
pop
repz
es
movw
sub
jge
lahf
and
jno
fwait
sub
imul
pop
daa
cmp
cltd
jae
lds
adc
sbb
mov
in
dec
imul
mov
mov
lret
imul
dec
rcll
or
jg
and
xor
mov
or
sub
mov
jle
cli
xchg
jne
pop
jo
daa
add
mov
dec
in
insl
imul
es
xor
sub
dec
and
es
adc
pop
fcomps
pop
push
pop
push
sub
je
repz
add
xor
lret
scas
sbb
mov
jmp
mov
xchg
pop
adc
sbb
fs
shlb
into
daa
movsb
xchg
fsts
sbb
icebp
mov
fsubrs
mov
nop
xchg
movsl
mov
mov
loop
mov
jmp
xchg
in
jmp
mov
dec
adc
cltd
push
loope
test
pop
xor
lea
sub
push
pusha
pop
cmp
in
ret
call
fidivl
jl
and
xor
xlat
jbe
dec
mov
add
lahf
mov
insl
xchg
add
out
out
aas
inc
in
pop
inc
jmp
pop
jl
dec
inc
stc
fcmovnu
int
enter
mov
jle
push
adc
rorb
pop
mov
pop
mov
adc
cmp
hlt
jmp
fldl
mov
cmp
cmp
push
mov
scas
dec
int3
popf
rolb
dec
repz
out
test
push
ret
mov
mov
push
shlb
ja
dec
mov
test
out
clc
mov
insb
rcrl
inc
cmp
nop
outsb
sub
jp
rorl
sub
jl
out
fcoml
sub
stc
call
jle
nop
popa
xchg
xchg
mov
push
in
out
jo
stos
xor
cmp
mov
xchg
jecxz
push
pushf
out
fsts
jl
sahf
jge
popa
jg
mov
cmpsl
xchg
jnp
fisubrl
adc
xor
and
gs
ret
push
and
insb
pop
loope
fsubl
leave
jne
arpl
mov
mov
sbb
sub
or
xor
aas
fwait
dec
push
pop
ds
push
test
xor
ljmp
fwait
inc
adc
jmp
add
pop
mov
mov
leave
push
mov
inc
popa
push
repz
adcb
xor
xchg
in
insl
test
test
mov
push
iret
inc
jo
loope
das
loope
in
xor
movsb
and
jbe
jle
xchg
stc
shll
pop
or
jp
frstor
and
scas
xchg
pop
mov
cmp
cwtl
fisubs
xchg
inc
pusha
popa
stos
cmc
lods
push
adc
sbb
daa
mov
pop
jae
sbb
sub
clc
movsb
test
mov
jo
movsl
in
xor
fldenv
xor
push
or
ficoml
jp
push
fistpl
dec
cmp
jb
mov
cmp
add
rcll
test
dec
mov
lock
ja
out
push
test
dec
xchg
les
mov
pop
fistl
aaa
dec
or
add
push
das
or
ret
inc
mov
dec
test
sub
in
and
stc
scas
jne
mov
sub
mov
pushf
xorl
jg
sub
cmp
jb
aas
xor
mov
loopne
jno
mov
mov
fwait
cld
clc
daa
lea
outsb
clc
xchg
cli
fwait
shlb
inc
add
in
int
sbbb
xchg
stc
fs
push
mov
inc
rcll
icebp
push
cmp
cmp
add
test
or
or
push
jnp
cmpsb
pop
bound
push
mov
in
dec
out
leave
out
lahf
pop
in
mov
ljmp
es
dec
fisubs
xchg
lods
incl
in
xchg
aas
clc
fsubrs
insb
imul
xchg
stos
test
int3
jmp
mov
sub
lea
int
out
testb
testl
jns
into
push
inc
lock
xchg
js
push
sti
or
leave
daa
cmp
sub
dec
gs
jl
push
sbb
sub
ja
mov
push
push
cs
sbb
push
sbb
mov
push
xadd
repnz
aas
test
add
pop
ficompl
ljmp
jne
sahf
pushf
inc
and
subl
mov
leave
sub
aam
add
jbe
ja
dec
subb
and
js
outsl
iret
sub
pushf
rorb
scas
in
lods
jae
pop
into
test
fisttpll
cmc
int3
jge
into
test
cmp
std
jp
push
scas
jae
movsb
into
call
adc
mov
xchg
xchg
cmp
xchg
iret
data16
in
aad
fdivrl
movsb
stos
xor
pop
ss
cmc
or
cld
clc
test
insl
sbb
jmp
loopne
jns
mov
sarb
out
xchg
jmp
dec
mov
sbb
jno
sbb
int
fisttps
sti
test
ss
push
jne
fiadds
fxch
scas
sahf
jl
ljmp
push
and
pop
scas
inc
aam
movsb
push
mov
sbb
cmpsb
lds
jns
sbb
fnstsw
mov
cmp
sti
decb
pop
les
fstpt
insb
movsb
outsl
add
push
and
adc
pop
pop
imul
cmpsl
adc
mov
pop
inc
mov
repz
xchg
mov
dec
sbb
jp
cltd
xchg
dec
inc
mov
xor
cli
push
dec
ficoms
aad
or
add
fs
int
cmc
xchg
ficoml
sbb
loope
or
inc
pop
cmp
pop
testb
inc
inc
outsl
jb
xor
in
pop
popa
setns
lret
push
dec
les
int
add
mov
xchg
and
faddl
sbb
inc
gs
inc
adc
sub
pop
test
mov
movsb
dec
popa
enter
sbb
dec
stos
pusha
les
in
sub
imul
cli
jp
inc
add
lds
notb
loop
in
xor
aad
push
mov
es
pop
xchg
dec
push
lods
fistpll
in
adc
pop
mov
xor
out
add
mov
xor
mov
or
xchg
push
out
mov
and
inc
cmp
or
push
lea
cmp
pop
jno
andl
cltd
dec
cwtl
loop
in
pop
clc
mov
insb
push
fstpt
aas
sub
adc
push
mov
and
icebp
sbb
pop
das
push
roll
lods
push
ds
aad
out
push
fsubr
mov
mov
inc
lods
cmp
lock
ret
jno
stc
imul
push
psllw
or
xor
out
xor
mov
sub
ret
push
dec
fldcw
push
mov
adc
inc
xchg
add
xor
pop
out
out
cmp
sub
daa
pushf
scas
fs
and
dec
push
sbb
cmp
lock
pop
inc
test
cltd
lret
das
aaa
xchg
jecxz
ret
jno
stos
mov
daa
icebp
icebp
imul
mov
sub
jns
or
push
jb
mov
xlat
xor
add
popa
sub
ja
jo
pop
sarb
ljmp
push
daa
xchg
jb
insb
pop
in
cmp
add
dec
push
out
ja
outsl
icebp
pop
mov
inc
frstor
cmp
cmp
cmc
push
mov
roll
hlt
mov
inc
test
mov
xchg
jo
cwtl
sbb
pop
sbb
or
xor
mov
xor
pop
lds
and
andb
pop
inc
data16
movsl
stc
enter
ljmp
jl
or
fs
mov
mov
mov
push
jle
je
arpl
mov
push
mov
out
cmp
xchg
push
sub
hlt
pop
jp
lahf
adc
adc
dec
mov
mov
adc
int3
add
push
pushf
jmp
jecxz
and
mov
inc
mov
xlat
adc
adcb
pop
jle
fmuls
push
dec
mov
cmp
mov
xor
push
sbb
dec
mov
test
into
cmp
mov
sbb
xlat
orl
and
mov
sbb
mov
and
mov
andl
lea
movzbl
and
mov
and
mov
mov
sub
orl
add
mov
mov
xor
orl
add
movl
jne
jmp
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
negl
sub
xor
mov
mov
mov
orl
xor
xor
adcl
sub
andl
sub
xor
mov
movl
mov
movl
mov
jmp
movl
cmpl
je
cmpl
jb
jmp
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
adcl
xor
subl
xor
sub
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movzwl
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
jmp
mov
sbb
mov
add
adcl
imul
mov
adc
mov
mov
xor
mov
adcl
add
or
mov
mov
adc
mov
add
adcl
xor
adcl
mov
adcl
mov
mov
andl
add
addl
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
jmp
ficomps
xchg
imul
jmp
jl
call
test
out
subl
idivl
pop
pop
xor
push
loop
inc
push
js
das
ss
ljmp
aad
addr16
adcl
pop
adc
ss
adc
push
push
push
inc
push
in
lock
nop
test
enter
idivb
movsb
mov
mov
mov
cmp
addr16
mov
test
adc
xor
sub
cmp
sbb
cmp
orb
jmp
xchg
xor
mov
dec
inc
and
arpl
loop
inc
jo
jg
mov
mov
cmp
sbbb
cs
inc
adc
dec
test
sbb
ja
mov
aam
xchg
xor
adc
mov
sub
out
mov
fimuls
movsl
xor
cmc
jne
repz
push
mov
mov
negb
out
mov
xchg
stos
fisubs
mov
mov
jge
inc
popa
inc
in
addb
sub
push
push
jb
out
pop
xchg
int
mov
idiv
jne
pop
movsl
push
popa
pmuludq
lds
xchg
aad
aad
jp
dec
clc
cltd
xlat
std
enter
push
int
or
adc
aam
loop
dec
fwait
scas
inc
sbb
sub
gs
lods
jecxz
test
inc
dec
xchg
insl
adc
call
push
xchg
lcall
aas
jmp
mov
or
and
pop
or
jb
sub
xchg
lock
cmp
sub
pop
mov
ds
notb
aam
in
lcall
out
mov
pop
cli
mov
mull
pop
dec
dec
je
inc
adc
bound
push
mov
insl
pop
fidivs
or
bound
in
test
push
loope
mov
mov
cmc
js
cld
fldenv
mov
sbb
mov
jg
cld
rolb
hlt
sub
test
adc
inc
hlt
jno
and
mov
in
fnstcw
icebp
jne
mov
add
xchg
aad
adc
push
xchg
jne
xor
fdiv
outsl
jp
and
out
pmullw
mov
test
mov
sub
xorb
jp
push
lods
filds
cmpsb
cltd
push
fwait
sbb
pop
pop
jno
cmpsl
cmp
adc
push
cli
cs
sbb
loop
cmp
repnz
push
andb
daa
xchg
mov
mov
inc
std
jp
dec
pop
ret
popf
dec
cmp
sti
leave
stos
push
pop
inc
ss
mov
sbb
mov
push
mov
stos
sbb
adc
jae
pop
add
in
sub
mov
sti
pop
pop
out
out
lods
mov
out
adc
daa
push
inc
std
movsb
mov
pop
jnp
shrl
push
cld
inc
es
lcall
jae
add
lcall
dec
sahf
push
insl
sbb
xlat
les
add
or
data16
insb
or
ss
cs
aaa
movsb
je
sbb
insb
shl
into
xchg
pop
movsb
loopne
cmpl
mov
adc
cmp
sub
and
jnp
cs
mov
mov
dec
cmp
int3
leave
idivl
xor
ret
mov
and
ret
popl
inc
xor
add
cmpsl
repz
pop
cltd
or
sbb
jecxz
push
mov
rolb
lea
mov
cmp
fmul
jo
mov
jns
mov
das
cmp
int3
xor
cmp
and
out
bound
cmp
fucom
rdpmc
es
inc
jecxz
mov
jno
orb
loope
dec
jmp
jl
adc
aas
ds
adc
ret
jo
or
jb
jle
sub
stc
mov
lahf
das
mov
mov
rolb
and
mov
sub
enter
push
das
jae
mov
sbb
sub
cmc
mov
popa
mov
pop
addr16
scas
call
ret
cmc
sub
or
mov
sub
lcall
mov
mov
xor
xchg
cmpsb
incb
xlat
into
add
and
cltd
rorl
pop
or
or
imul
movsl
and
sbb
add
push
cmp
call
test
insb
das
out
or
les
aaa
pop
jle
cli
out
jb
xor
out
arpl
std
cmp
sub
out
std
shr
xchg
jo
adc
lretw
or
xchg
mov
sbb
insl
jns
hlt
xor
call
xchg
mov
stos
sbb
dec
nop
stos
jle
add
push
inc
orb
ljmp
call
and
sbb
mov
js
in
out
andl
pop
mov
xchg
inc
xor
lret
out
and
cmp
mov
scas
daa
push
js
push
imul
cli
xor
xchg
sahf
mov
repz
faddl
jmp
or
mov
test
in
dec
adc
or
xchg
adc
push
into
out
icebp
lcall
jmp
mov
das
add
dec
cmp
data16
aas
jge
lea
jge
icebp
ss
push
icebp
imul
push
stos
inc
xlat
lahf
fsubrs
movsb
aam
dec
les
sub
std
pop
sbb
scas
sahf
ja
fistpll
mov
rolb
and
scas
cmp
int3
std
or
mov
xor
sets
js
push
adc
mov
and
fcmovne
lods
aam
shll
adc
lret
outsl
hlt
jge
cmp
push
aaa
mov
sbb
jae
rolb
int3
sbb
jle
sub
clc
dec
lock
arpl
movaps
test
adc
pusha
roll
sti
int
ja
addr16
shrb
into
push
cmp
mov
inc
stos
inc
in
stos
stos
loope
fstpl
pushl
andl
scas
iret
jg
fadd
jle
sbb
inc
idivb
popa
sub
adc
push
pop
mov
leave
push
xor
xlat
add
loope
mov
push
jno
pmullw
xchg
jg
gs
lods
shlb
popf
shr
push
xchg
mov
add
scas
insl
sbb
xchg
xor
pop
sbb
data16
inc
xor
lahf
dec
or
push
and
pop
stc
sbb
inc
in
pop
mov
loop
imull
shr
jae
inc
and
das
loop
adc
push
fwait
lcall
es
cld
mov
addr16
daa
insl
push
stos
xor
sarl
push
bound
jecxz
jno
xchg
xchg
and
cmpsb
in
out
pop
jb
dec
pushf
xchg
aam
mov
outsl
mov
hlt
adc
and
repnz
outsl
pop
rcr
xchg
outsb
out
lds
cmpsb
ret
add
popl
addb
sbb
popf
add
inc
xor
scas
subl
sub
mov
clc
adc
lock
add
or
jecxz
jns
and
pop
sarl
or
add
iret
mov
dec
and
adc
rclb
shr
ret
gs
add
or
pop
mov
xor
lods
sub
popa
out
andl
inc
xor
sbb
pop
push
fsub
int
insb
jae
jg
or
mov
or
jg
and
or
inc
sar
add
dec
jns
xor
dec
and
rol
dec
dec
push
dec
hlt
add
mov
ftst
sbb
int
in
out
mov
mov
push
into
and
mov
xlat
push
adc
pop
fmuls
or
mov
icebp
insb
pop
ds
enter
lds
ds
sbb
xor
inc
mov
mov
pop
idiv
xchg
xchg
mov
xor
jno
and
es
aam
in
xchg
ds
cs
js
xor
nop
xchg
sbb
mov
or
lock
lret
icebp
clc
je
and
xor
xchg
xor
jle
push
inc
pop
sub
or
in
aaa
lea
imulb
pop
sbb
xor
jp
mov
mov
ss
xchg
xor
mov
imul
rorb
fiaddl
push
cmp
sbb
idiv
rcl
xchg
mov
ror
or
mov
pushf
xchg
or
cli
mov
push
mov
out
cs
jbe
push
push
lea
jl
addb
dec
jle
mov
push
adc
mov
sbb
inc
fidivrs
bnd
jmp
mov
and
std
ds
mov
pop
dec
dec
icebp
push
cli
lock
cmp
stc
push
out
scas
std
in
je
das
negb
aad
in
sahf
icebp
cwtl
pop
add
lea
jns
out
xor
jno
add
lea
mov
cmovle
xchg
sarl
and
es
sbb
cmp
mov
xor
test
xchg
mov
xor
push
mov
out
xchg
sub
xchg
push
in
pop
pushf
push
jp
push
pushf
xor
sbb
cmc
jle
lock
hlt
icebp
out
xor
and
or
pop
jb
fxch
adc
mov
jmpw
rcl
pop
xor
jl
out
add
in
sbb
in
int3
inc
movsl
lret
and
push
sub
addr16
mov
pop
les
insl
push
mov
cmpl
lcall
mov
outsl
ss
xor
xchg
lret
sub
ljmp
cwtl
pop
sbb
push
mov
int3
mov
sahf
mov
jle
ret
add
fwait
mov
incl
push
add
sub
dec
xor
sbb
lock
push
lcall
aas
dec
push
cli
pusha
fmuls
cmp
dec
out
loope
fisttpll
mov
addr16
dec
push
dec
adc
repz
loop
sbb
shlb
inc
push
mov
aas
ret
inc
divb
pushf
xchg
repnz
sub
stos
sub
hlt
inc
dec
pop
nop
divl
adc
aaa
stos
jmp
out
or
mov
or
pop
jbe
push
xor
jne
fstpl
scas
lea
mov
xor
imul
or
sub
jl
jo
mov
mulb
arpl
in
lret
adc
cmp
daa
aad
or
leave
xchg
aam
xor
inc
inc
mov
cmp
pop
scas
mov
push
add
cwtl
sub
push
mov
add
inc
popa
sub
mov
addb
cmp
imul
push
fdivs
jmp
dec
out
sbb
xor
ficoms
into
and
jle
add
repnz
adcl
pop
mov
in
add
sbb
iret
mov
jns
mov
push
inc
mov
inc
fistl
into
xchg
jle
movsb
rolb
les
push
insb
arpl
call
jecxz
cwtl
sub
push
cmp
dec
aad
or
pop
inc
shll
mov
pop
sbb
lods
clc
cmp
insb
inc
sahf
or
pop
insb
cmp
inc
repnz
cmc
add
adc
popa
jb
mov
cmp
mov
iret
outsb
dec
push
jl
mov
xchg
or
mov
pop
push
cmp
cld
mov
fcoms
mov
jbe
mov
ret
pop
in
sub
ret
sub
dec
fisubrl
jg
cmpsb
and
leave
cmp
loopne
mov
xor
mov
call
jmp
aad
repz
in
and
in
aam
ret
out
nop
imul
sahf
jb
iret
movsl
daa
jo
mov
lahf
sbb
mov
mov
adc
mov
imul
outsb
inc
out
ja
movsl
xchg
mov
sbb
and
inc
sub
xor
std
jl
and
dec
shrl
xchg
popf
dec
test
mov
pop
mov
das
ljmp
int3
push
add
iret
stos
lea
hlt
mov
vmovq
lock
lahf
xor
lret
mov
fdivrp
adc
mov
les
aad
xchg
fdivs
add
leave
jl
mov
cmp
fbld
or
push
pop
gs
mov
jae
push
add
dec
or
cmp
clc
call
or
lods
jle
pop
loope
cmp
cli
cli
mov
jnp
fcoml
push
enter
adc
pop
outsl
xchg
sub
cmp
push
push
inc
hlt
cwtl
xchg
jp
jmp
loop
cmpsb
fstl
xchg
nop
xchg
inc
inc
shl
test
inc
jo
in
sbb
mov
mov
mov
mov
aam
add
adc
je
or
fnstenv
mov
out
pushf
push
xchg
or
adc
inc
cmp
cmp
in
xchg
jne
mov
call
jmp
dec
mov
sbb
popf
sbb
sahf
add
clc
pop
jb
test
fnstsw
pusha
jge
mov
insb
testl
xchg
imul
js
rol
inc
ljmp
xchg
leave
jno
jns
scas
aam
out
jg
mov
xchg
pop
add
xchg
repnz
xor
popf
arpl
push
push
mov
or
lods
jecxz
pop
lock
icebp
jae
mov
sub
dec
ss
nop
mov
and
lret
out
sub
insb
test
sti
or
pop
icebp
dec
inc
adc
xchg
dec
xchg
pop
cmp
bound
je
sbb
xor
imul
xchg
dec
pop
loopne
push
cmp
mov
testb
call
das
mov
das
dec
sti
inc
or
pop
addr16
hlt
inc
mov
sub
xor
les
pop
fidivrl
dec
gs
cmpsb
mov
in
sub
mov
dec
pop
inc
push
outsb
pop
je
add
jle
push
cmpsb
adc
push
insl
jge
enterw
icebp
xor
add
fdivp
lcall
lock
call
jl
lea
daa
sub
jmp
cld
sbb
andl
rcrb
adc
arpl
insb
cmp
adc
add
xchg
test
cmp
test
cmpsl
mov
pop
add
ja
or
push
pop
rclb
repz
cwtl
cs
dec
fisttps
mov
push
sbb
sub
out
xor
lret
sub
mov
test
sub
call
pop
stos
test
lods
lock
test
xchg
add
xor
xchg
pop
pmullw
lods
cmp
repz
pop
or
inc
xchg
jecxz
adc
into
lret
clc
push
mov
imul
fnstenv
inc
jnp
add
mov
jecxz
cs
mov
adc
lds
jb
mov
jnp
adc
xchg
and
je
and
sbb
sahf
fstp
cli
adc
mov
cmp
and
push
js
and
shlb
xchg
es
rcr
test
inc
cmp
dec
imul
jle
bound
movsb
xchg
dec
jmp
adc
adcb
ret
pop
jg
xchg
dec
mov
add
aaa
fs
cmp
jecxz
lcall
inc
push
insl
jns
insl
jo
mov
add
xchg
xor
jbe
das
addr16
imull
xor
adc
or
adc
push
xlat
xchg
pop
les
ds
addr16
mov
and
mov
pushf
mov
mov
dec
push
jmp
shl
dec
insb
jmp
or
inc
imul
adcl
push
sbb
aaa
jae
popf
cs
cltd
jl
mov
mov
pop
jle
xor
pop
push
out
aas
notb
jbe
xchg
dec
test
add
mov
jno
out
bound
loope
cmc
test
mov
and
jmp
and
cld
cli
in
sbb
test
mov
cld
mov
cmpsl
out
mov
dec
jmp
jns
mov
or
sbb
mov
xchg
out
pop
sub
mov
mulb
push
sbb
add
xchg
cmc
pop
ror
mov
adcl
lret
sbb
xorb
lea
ss
and
into
and
jne
popf
or
xchg
add
fnstenv
out
ret
mov
movsl
lods
xchg
mov
cmp
mov
mov
cli
mov
data16
push
xchg
mov
jns
cwtl
and
mov
aam
mov
mov
loop
add
notl
push
add
cmp
arpl
xor
adc
jnp
outsl
cmp
mov
rorl
mov
or
jo
cmp
and
jl
sbb
outsb
rolb
xchg
or
call
mov
push
fisttpll
je
das
push
in
imul
mov
push
push
jecxz
lods
cmp
jb
push
jp
xor
subb
add
insl
pusha
cmovp
std
xor
lret
or
pop
pop
jmp
notb
or
sub
mov
scas
or
push
jmp
jle
in
xor
xor
inc
xor
push
aam
sbb
jb
cmpsl
es
pop
std
cmp
push
pop
mov
cld
push
xchg
jnp
insl
push
jo
jle
jbe
or
inc
flds
repnz
xor
cmc
cli
lods
push
cmp
lcall
sub
sbb
ljmp
or
adc
sbb
mov
rcrl
jge
lds
pusha
and
jg
mov
jmp
pop
das
ljmp
ss
sub
add
outsl
movsb
lods
xor
int
pop
jo
pop
insl
jmp
push
addb
pop
lcall
rcl
int
lods
mov
lret
daa
fldt
dec
push
jbe
shlb
stos
frstor
jne
ds
into
dec
or
ds
xorb
fmuls
andb
shlb
enter
adc
push
pushf
mov
push
daa
enter
sbb
mulb
out
pop
lock
pop
clc
cmp
fimuls
fs
jns,pn
or
mov
add
scas
outsl
iret
add
inc
jb
imul
imul
fidivs
jmp
xchg
push
fwait
stos
addr16
mov
mov
filds
dec
pop
cmpsl
mov
ljmp
arpl
mov
pop
div
mov
sub
adc
aam
idivl
push
lret
adc
push
lahf
mov
xchg
or
jecxz
gs
loop
xlat
mov
les
lea
push
mov
movb
stos
lret
add
rcll
daa
adc
movsl
or
and
cwtl
ficomps
jo
jle
dec
enter
sarl
cld
in
cmp
popa
dec
stc
mov
inc
fldcw
mov
frstor
jmp
jge
lahf
jb
sbb
gs
pop
sahf
outsl
pop
clc
orl
xor
push
mov
jecxz
sub
data16
outsb
inc
in
bound
xor
imul
ss
ja
sub
xor
mov
cld
insb
in
push
xchg
push
xor
or
dec
dec
inc
icebp
imul
jmp
adc
xchg
pop
es
sbb
mov
icebp
xor
icebp
pop
mov
push
sbb
jg
insl
test
sarb
stos
cmp
imul
imul
cmp
cltd
in
ficoml
push
movsb
scas
sub
add
sub
pop
int3
sub
and
sbb
sbb
cmp
inc
std
icebp
adc
push
inc
addr16
jo
movsb
inc
mov
enter
pop
adcb
and
shll
ret
xchg
and
cs
xor
inc
rclb
or
fnstcw
xchg
sahf
cmpsl
leave
dec
test
mov
loopne
adc
pop
mov
mov
out
aaa
imul
rcrb
sub
stos
adc
lds
jecxz
adc
and
pop
mov
jmp
jmp
sbb
sbb
sbb
push
arpl
stc
sbb
adc
jl
mov
push
jb
push
das
mov
lcall
adc
cld
jmp
mov
in
sub
fistpll
leave
pop
pop
push
fprem
xchg
out
xlat
pop
aas
and
rol
jae
pop
or
sub
jne
fistps
lock
lret
push
int
sbb
rcll
mov
jge
push
pushf
pop
insb
icebp
mov
xor
aas
clc
js
out
xlat
cmc
jecxz
jnp
icebp
add
inc
cld
add
cltd
std
nop
pop
int
push
jno
fsubrl
arpl
adc
cmp
and
leave
call
mov
xchg
or
ds
add
inc
jmp
cmp
jae
mov
fcoms
imul
adc
dec
pop
or
mov
or
jnp
or
pusha
push
rcrl
xor
xchg
mov
loope
jge
mov
jl
cmp
add
mov
push
push
mov
xchg
out
fdiv
mov
jbe
or
gs
inc
mov
add
dec
dec
rorl
mov
mov
pushf
adc
inc
repz
cmp
sbb
jns
loop
leave
push
lcall
mov
sbb
or
sbb
or
mov
xchg
int
pushw
gs
fnstsw
loope
jp
mov
test
cld
rorl
mov
scas
pusha
cmp
pop
pushf
arpl
or
jb
jge
aaa
and
enter
push
fwait
daa
fistl
mov
jbe
ljmp
sbb
cmpsl
xchg
daa
jno
jl
or
mov
movsb
scas
adc
clc
cmp
xor
mov
sub
stos
jmp
jmp
sbb
adc
sub
loope
addr16
mov
push
adc
inc
popf
loopne
and
lcall
popa
and
jle
add
and
add
sub
xchg
sub
pushf
push
pusha
sbb
arpl
mov
xor
pop
push
jo
movsl
lock
negl
or
rcr
call
hlt
inc
fbld
cs
shrl
jp
jo
ficoms
clc
icebp
lret
pop
jg
test
push
test
aaa
lret
popa
fucomi
bound
and
jo
movsb
arpl
cmpsb
sub
jb
jmp
imul
out
sbb
or
pop
outsb
sbb
mov
add
sbb
xchg
lret
push
cwtl
jbe
loopne
loopne
scas
sub
sub
cmp
xor
icebp
ljmp
data16
outsl
push
xor
xchg
mov
test
fcmovnb
jge
rcll
pop
out
mov
cwtl
movsb
stos
test
dec
jb
ret
xlat
mov
repnz
push
lcall
sahf
mov
cmpb
icebp
push
cwtl
aad
mov
cli
and
fstps
loope
and
jp
jecxz
or
popf
repz
ljmp
fs
mov
jbe
ss
mov
stos
jl
pop
stos
cli
jb
and
insb
mov
aaa
xlat
adc
scas
add
call
lcall
mov
mov
push
mov
js
and
push
bound
mov
in
cmpsl
pop
mov
fwait
in
into
xchg
lods
xchg
lcall
out
js
data16
or
test
push
gs
xchg
in
repnz
movsl
pop
mov
xchg
and
cmp
mov
and
dec
test
sbb
hlt
gs
add
and
pop
cmp
cmc
jl
dec
and
lcall
xchg
xor
out
test
fnstenv
insb
mov
leave
bound
enter
cltd
jg
sbb
pusha
or
or
pushf
shll
dec
inc
xchg
cmp
xchg
stos
push
xchg
xchg
ret
xchg
sbb
mov
ds
mov
std
out
mov
or
adc
mov
cmp
push
push
out
lret
js
arpl
outsl
mov
fs
sarl
dec
cmp
push
jae
jl
mov
sbb
je
subl
sbb
pushf
lcall
sahf
and
mov
addr16
xchg
lret
push
xchg
das
fwait
xchg
pushf
and
stos
dec
mov
xor
pop
xchg
in
xchg
or
push
pop
iret
aam
push
sbbl
jno
pop
insw
rcrb
cld
add
pop
xor
not
cmovbe
xor
adc
les
add
cmp
movsl
repnz
repnz
das
or
adc
push
stos
jne
ljmp
pushf
dec
pop
inc
sub
fs
gs
shrb
add
cmp
lds
icebp
jmp
xor
push
mov
mov
dec
inc
movsb
cmp
add
fcomps
jbe
negl
mov
stc
or
aad
push
cmp
dec
mov
out
jp
inc
shrl
sbb
stos
and
dec
xorl
mov
push
jb
in
inc
dec
out
sarb
and
lea
add
mov
pop
pop
movl
jbe
push
inc
sbb
inc
sub
les
add
sti
inc
ret
popf
sub
adc
out
mov
adc
sbb
and
cmp
insb
mov
jle
lahf
test
cmc
jae
mov
sbb
std
aad
xor
push
aas
js
push
mov
aam
xor
int3
sub
jl
in
or
dec
mov
sub
mov
lds
xor
stos
mov
fldenv
inc
mov
clc
inc
shl
lds
std
adc
int3
xchg
in
sbb
xor
ds
pop
pusha
arpl
test
imul
sbb
cmpsb
mov
in
push
add
fmuls
or
mov
shrb
lret
sbb
jne
aaa
mov
adc
mov
pushf
imul
adc
insb
stc
out
sbb
push
mov
mov
pop
arpl
fs
jl
dec
loope
pop
jle
push
mov
jmp
mov
mov
imul
jbe
test
mov
xchg
fstps
fimull
cmp
das
inc
mov
xchg
sbb
insl
pusha
and
mov
add
jno
or
jae
loopne
mov
mov
cwtl
or
pop
mov
xchg
and
xor
xchg
or
shll
push
shll
fmull
push
xchg
mov
in
xchg
xchg
int3
push
xor
mov
push
test
xchg
ljmp
and
jle
ret
cmp
sub
xor
mov
flds
addr16
cmp
rcl
add
leave
mov
outsb
nop
mov
lods
in
out
mov
pop
mov
lods
xorl
or
dec
pop
mov
xchg
xor
incb
dec
aam
sbb
cmp
hlt
jnp
stos
adc
outsb
pop
lret
cmp
sbb
imul
dec
fs
cmp
add
lahf
xor
stc
inc
cld
sbb
jecxz
rcrb
jecxz
xlat
test
daa
push
fmull
mov
pop
dec
lods
push
add
push
add
mov
dec
daa
loopne
xor
cmp
faddl
and
ds
lret
push
pop
mov
mov
pop
mov
aaa
sub
jbe
bound
fdivs
or
mov
in
xchg
aaa
cltd
xor
test
scas
scas
dec
xor
test
das
es
test
inc
repz
adc
ds
mov
mov
in
jle
xlat
mov
jne
loope
push
pop
loopne
idivl
test
test
inc
push
fs
add
jae
fdivs
jmp
insb
sahf
and
std
in
fadds
xchg
inc
jno
or
xor
cmp
mov
enter
pop
sbb
mov
inc
stos
shrb
pop
ret
test
cmp
pop
mul
mov
adc
push
addr16
sbb
scas
std
dec
and
add
push
pop
adc
mov
rclb
xchg
neg
sbb
aam
out
mov
outsb
inc
fwait
pshufw
adc
jno
loopne
loope
fstps
mov
in
stos
scas
pusha
xchg
or
dec
inc
jp
les
mov
ret
outsl
sarl
jmp
stos
push
movsl
jmp
subl
dec
add
sti
movsl
or
cmp
dec
jg
jg
sbb
xchg
inc
das
adc
xchg
jle
imul
jg
mov
aam
xchg
mov
ja
pop
jnp
popf
jbe
fsubl
inc
fadd
xchg
mov
xchg
mov
addl
ja
cmp
cmp
addl
fs
xlat
mov
aad
clc
ret
or
jb
in
loopne
shl
test
mov
pop
dec
sub
addr16
sti
mov
fstpl
jns
mov
bound
and
out
cmpsb
xor
adc
cmp
outsl
jo
inc
pop
mov
and
inc
pushf
cmp
rcrl
ss
mov
pop
mov
out
jle
stos
inc
clc
nop
loop
fiadds
sbb
sub
je
pop
sbb
lods
dec
fs
test
push
mov
loop
test
jns,pn
xchg
fmul
dec
stc
adc
icebp
dec
addr16
aam
push
test
sbb
and
jmp
xchg
lret
popf
jmp
mov
sbb
orl
pop
fimull
inc
push
xlat
pop
cmp
sbb
gs
adcb
sub
mov
sarl
jle
loope
xchg
dec
shrl
call
in
mov
ret
push
dec
mov
fsubrl
jle
mov
sahf
sub
inc
or
shrl
fadd
mov
divb
jmp
or
loope
sbb
mov
mov
mov
mov
and
jbe
cmp
cmpsb
sbb
loop
xorb
cmc
xchg
and
and
shlb
into
lret
mov
test
dec
inc
mov
sbb
fwait
orl
call
pop
out
fsts
into
push
out
xchg
ss
mov
mov
cltd
stos
inc
pop
push
dec
cmp
jb
cmp
or
and
sarl
fisttps
ljmpw
stc
and
push
jno
je
xor
xor
push
dec
icebp
bound
push
data16
lds
jns
into
jle
push
loope
hlt
test
movsb
mov
shlb
cmc
jo
js
subb
rcll
add
dec
cmp
arpl
inc
jge
aas
mov
shrl
push
xchg
xchg
cmp
xchg
mov
sahf
dec
xchg
cmp
jp
inc
ret
lahf
mov
jnp
mov
and
adc
lds
push
inc
and
sbb
xchg
and
stos
pop
adc
daa
aaa
jbe
xchg
js
je
test
inc
cmc
cwtl
cmpl
lcall
clc
add
dec
and
call
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
jmp
rcrb
and
rorl
insl
insl
adc
dec
test
jl
fstpl
call
dec
push
imul
xor
jne
xchg
fwait
pop
dec
rolb
push
jnp
push
mov
push
pop
mov
pop
and
das
xor
imul
pop
cwtl
and
xor
call
xor
pop
jmp
sbb
xchg
sub
movsb
mov
loopne
cmp
mov
cmp
aam
push
test
leave
mov
mov
lods
into
pop
push
leave
lret
rolb
movb
imul
into
mov
lcall
daa
into
adcl
push
decb
inc
sbb
movsb
cmp
shr
inc
les
cwtl
mov
and
int
repnz
push
inc
sbb
in
ljmp
cs
icebp
mov
mov
pop
adc
mov
repnz
hlt
ret
push
imulb
out
movsl
mov
or
cltd
add
adc
andb
lahf
into
sbb
movsl
cli
fs
out
popa
cmpsb
and
or
push
inc
or
xchg
adc
mov
stc
fcmovne
test
mov
and
push
xor
mov
cld
icebp
out
out
sbb
stos
add
dec
loop
ja
fwait
or
mov
push
sahf
gs
nop
dec
sub
or
pop
cwtl
xor
mov
stc
aas
lcall
xchg
add
cli
jo
cltd
sti
adc
cmpsb
int
cld
fcmovu
rcrl
in
ja
sarl
pop
pusha
push
sub
cmp
test
inc
call
rcll
mov
std
jne
push
mov
loopne
loopne
clc
push
mov
adc
cli
dec
and
stos
movsl
movsl
push
xchg
inc
aad
repnz
mov
mov
iret
outsb
into
gs
ret
frstor
enter
sub
mov
lods
stos
lea
add
fnstenv
scas
mov
jmp
int
fidivrs
int3
popa
sbb
in
cmp
jl
add
pop
pop
icebp
pop
js
cmp
adc
cs
mov
jnp
xor
lahf
in
aaa
xlat
push
fstl
popa
and
and
mov
js
add
xlat
and
jecxz
dec
pop
fstpt
aad
inc
mov
int3
push
cmp
pop
lahf
lcall
push
jae
dec
sbb
outsb
sbb
cli
or
pop
mov
mov
xchg
mov
add
popa
inc
mov
icebp
mov
cmp
mov
mov
xchg
mov
dec
sub
lret
xchg
imul
insb
sahf
clc
popf
lods
nop
lods
lock
pusha
mov
inc
cmc
lcall
idivb
mov
dec
hlt
xor
and
and
jl
mov
cmp
jne
mov
mov
add
mov
adc
push
or
jns
pop
movsb
mov
test
jbe
lahf
insb
xchg
not
adc
scas
pop
stos
popf
pop
aam
cmp
xor
pmaddwd
movsb
push
jmp
push
mov
je
out
sahf
dec
scas
mov
jge
js
add
icebp
jnp
mov
mov
sbb
pop
jne
inc
lea
push
push
lods
cmpsb
mov
aad
loopne
jmp
out
dec
xor
push
bound
jle
push
jns
xor
or
mov
mov
push
pop
aad
adc
sbb
popf
sub
push
ret
add
pop
stos
or
call
imul
dec
mov
fldenv
xchg
outsl
flds
out
out
cld
aas
adc
mov
push
loop
cld
jb
xchg
xchg
inc
insb
subl
int3
jmp
ret
and
pop
push
sahf
push
roll
stc
sti
sbb
sbb
leave
pop
xor
call
mov
or
jmp
sub
sarb
std
sbb
movl
xor
jno
mov
dec
pop
fs
movl
add
outsl
inc
or
cltd
inc
pop
fmuls
jo
inc
subl
xchg
add
hlt
addl
dec
sub
roll
jb
dec
push
jnp
out
xlat
and
dec
sbb
dec
or
das
std
sti
ss
dec
nop
mov
xor
and
shll
inc
sub
adc
mov
mov
cmp
bound
addr16
dec
mov
lock
xchg
mov
andl
rorl
test
ret
dec
adc
stos
es
add
mov
pop
add
loope
orl
lret
cwtl
fsub
into
inc
vmovapd
imul
cmp
sub
mov
xor
push
scas
stos
xchg
cmp
inc
mov
aas
mov
rorb
push
test
fidivrs
or
test
out
or
add
daa
test
inc
in
leave
sti
ret
nop
ds
shrl
adc
aam
icebp
jmp
dec
push
out
cltd
pop
or
push
fsubr
jns
std
adc
add
out
les
pop
into
cli
xchg
loop
pusha
cli
inc
pop
add
pop
add
mov
adc
mov
dec
adc
or
ret
imulb
clc
int3
dec
shll
and
pop
inc
dec
inc
inc
test
int3
movsl
mov
ljmp
aam
cltd
in
sub
stos
dec
jo
push
insb
xchg
push
movsb
popa
pop
in
test
jmp
jbe
xchg
lods
jl
mov
push
add
mov
das
adc
cli
iret
adc
ja
push
int3
sahf
push
push
hlt
jbe
mov
mov
test
mov
bound
sarb
int3
in
pop
sbbb
add
cmp
push
xor
bound
fcoms
ljmp
rolb
inc
loope
mov
or
cld
mov
pop
clc
mov
cmp
fs
jle
sarl
test
mov
mov
mov
xchg
cmp
lods
movsb
cmc
test
test
add
and
mov
das
adc
repnz
aam
aad
mov
sti
inc
sbb
mov
mov
pop
popl
and
mov
in
pop
dec
frstor
aam
fimull
jne
and
jge
mov
sub
aaa
fcoms
sahf
mov
mov
pop
mulb
inc
fwait
or
pushf
lods
sub
sbb
push
push
test
or
leave
rorl
mov
dec
into
xor
fidivrl
lahf
fdivrs
add
in
and
lcall
aam
push
ja
fimull
pop
sub
jno
jnp
mov
jge
mov
xchg
cld
jo
pop
ret
loop
pop
sahf
test
std
jne
cs
jae
ficomps
inc
ljmp
shlb
xorl
and
clc
sbb
stos
mov
cmp
jl
push
xchg
xchg
sbb
push
enter
addr16
sahf
shl
cmp
sub
mov
fstpl
pop
mov
xchg
mov
mov
lcall
push
jl
sub
cwtl
rcll
movsl
out
push
jnp
sbb
insb
jb
movsl
sti
or
pop
xchg
cmc
fdivp
movsl
in
js
dec
ret
push
adc
xchg
mov
ficompl
dec
sub
jnp
push
scas
mov
lret
addr16
es
push
sub
outsl
mov
clc
jmp
jl
aas
jo
aas
cld
fidivl
push
fcmove
insl
mov
add
cmp
cmp
dec
dec
inc
push
cmc
or
ret
lea
pop
aas
push
aas
ret
cmp
mov
xchg
jg
in
jmp
ficomps
mov
inc
xor
cmpsb
pop
mov
dec
adc
cltd
inc
jge
mov
mov
rcrl
test
xor
aam
push
lods
and
rol
xchg
and
bound
test
cmpb
mov
movsl
mov
enter
push
push
outsl
gs
clc
enter
push
pusha
push
out
jg
mov
subl
add
int
or
jmp
icebp
fadd
js
inc
xchg
shlb
fmuls
popa
dec
in
jp
cld
push
jb
dec
sub
je
imul
test
push
ds
or
add
push
cmc
add
idiv
lods
mov
cmc
icebp
dec
pop
js,pn
test
sub
adc
jae
incl
addr16
dec
aam
cmp
cmc
pop
jne
aaa
out
push
int
cld
movsb
cli
push
and
inc
nop
jp
iret
dec
adcb
inc
shl
and
pop
aas
pushf
addl
mov
sub
push
arpl
imul
mov
out
repnz
adcl
insl
cs
sarl
mov
or
xor
std
out
sub
cmp
adc
out
sub
test
adc
jno
out
xchg
pop
xchg
mov
shrl
into
cmp
imul
shrl
xchg
movsl
mov
or
add
xchg
and
mov
mov
shll
addr16
cmpsl
sahf
cs
cs
lds
cmp
mov
or
xchg
ja
sbb
inc
cltd
icebp
adc
lea
call
or
dec
scas
dec
repz
divb
inc
or
shl
dec
cs
arpl
pop
es
cmp
dec
xchg
ret
aas
out
loop
xor
aas
cmpsb
jbe
scas
sub
pop
cmp
jb
mov
jns
outsb
data16
scas
pop
mov
call
popa
cmc
xchg
xor
dec
xchg
pop
cmpsl
into
adcl
push
ljmp
icebp
cmp
push
push
les
pop
dec
les
es
or
iret
xchg
and
fcmovnb
pop
es
notl
andl
xorl
inc
ret
mov
dec
pop
or
in
pop
es
outsl
rclb
stos
adc
clc
add
icebp
mov
push
fdivl
stos
movsl
mov
sti
sbb
lret
or
xor
pop
movsl
push
and
pop
insb
mov
inc
outsl
cmp
and
mov
cmp
subl
add
mov
or
divb
fldt
in
jo
jmp
nop
mov
adc
std
push
cmp
jecxz
int3
sar
sarb
dec
push
pop
inc
mov
je
mov
fadds
xchg
push
pop
sbb
mov
out
cmp
pop
push
pop
shlb
loop
cmpsl
sbb
jge
stos
mov
pop
dec
xor
jle
ds
dec
subb
in
push
add
dec
inc
int
push
lods
test
adc
orl
sti
fsubs
pushf
jle,pt
mov
inc
clc
inc
in
les
test
cmp
outsl
lahf
xor
mov
aad
sbb
mov
sub
ret
decb
push
js
stos
int3
adc
pusha
ss
cmc
sbb
cmp
adc
xor
cmpsl
mov
cmp
mov
movsl
dec
std
rorl
popa
or
je
mov
das
rol
xchg
push
sub
adc
mov
fsubrs
jg
push
dec
cmc
xchg
inc
or
jecxz
cmc
mov
and
dec
addr16
rcrl
and
pushf
stos
xlat
pop
dec
and
sub
repnz
cs
xor
mov
adcl
sub
cmp
sbb
pop
cmp
aaa
lods
add
js
push
negb
movl
fs
mov
and
sbb
add
sbb
mov
xchg
negb
xlat
xchg
sbb
mov
dec
out
out
jecxz
push
pushf
and
movsl
push
outsl
sbb
sbb
inc
lcall
fildl
mov
add
dec
mov
xchg
xorl
dec
orb
pop
outsb
roll
adc
mov
out
or
and
repnz
rcrb
cmp
ret
lods
xchg
cmp
fdiv
dec
adc
lret
ret
mov
stc
icebp
pop
xchg
pop
mov
das
cwtl
ja
sub
mov
pshufw
ds
cwtl
push
dec
test
cmp
sti
inc
pop
jbe
pop
push
loopne
push
mov
push
jne
popa
rep
push
or
rclb
adc
lcall
cs
and
sbb
movsl
sar
pushf
dec
sub
dec
and
sub
insb
adc
stos
mov
and
ss
rcll
push
and
es
shlb
aas
pop
fcoml
xchg
movsb
dec
jbe
mov
aaa
or
fidivrs
xchg
jnp
sub
out
cltd
int3
pop
and
jb
ffree
int3
idiv
xchg
push
clc
imul
adc
fwait
shll
xchg
cmpl
sbb
rorb
aam
insl
xchg
lods
out
stc
loopne
aaa
cwtd
sbb
add
out
mov
shll
xor
and
push
jp
dec
push
stos
hlt
loope
in
enter
add
adc
mov
fwait
or
lds
lcall
sbb
icebp
and
enter
shlb
shll
push
push
add
mov
lcall
scas
push
in
dec
mov
mov
jmp
inc
incl
mov
das
mov
jnp
pop
mov
test
push
insb
cld
lret
mov
lret
xor
xchg
pop
adc
ret
aad
xchg
or
fnsave
mov
je
sub
and
sahf
insb
jo
pop
sete
fnsave
lret
sbb
outsb
sbb
shll
daa
jne
outsb
and
mov
mov
dec
cltd
inc
lds
in
cmpsb
shl
popf
movsb
mov
orl
mov
inc
jecxz
int3
repz
sub
fs
dec
pop
mov
jae
repz
int3
sahf
mov
mov
push
lds
fwait
mov
adc
js
mov
cmc
adc
sbb
mov
imul
das
sbb
cmp
xchg
jns
mov
shrl
mov
inc
jno
pop
pop
xchg
jae
xchg
mov
nop
mov
jbe
cmp
andl
jl
inc
adc
or
or
sbb
add
lret
inc
lods
inc
lock
pusha
aaa
dec
ja
je
xor
pop
fsubs
sti
push
gs
xor
js
sbb
cs
mov
cld
dec
ljmp
push
mov
mov
in
test
mov
cmpsb
addl
sub
es
fsubrl
xchg
ljmp
inc
dec
xor
inc
dec
cmpsl
pop
push
leave
test
in
jo
movsb
xor
pop
push
out
fdivrp
addr16
mov
xchg
insl
dec
lods
js
xchg
add
aas
out
repz
gs
push
mov
pushf
xchg
cmpsb
inc
daa
push
daa
sarb
add
sti
nop
sbb
mov
loop
les
xor
insb
and
test
xor
rolb
adc
cmp
aam
push
daa
mov
das
dec
xor
push
out
movsb
inc
sbb
mull
popa
mov
push
cmc
mulb
std
ret
adc
push
mov
and
dec
int3
xor
inc
bnd
xor
and
imul
pop
xor
inc
sbb
int3
test
scas
pop
jmp
xchg
sbbl
or
pop
dec
xchg
push
lret
sub
mov
pop
nop/reserved
adc
cs
inc
xchg
inc
push
icebp
mov
cmpsl
repnz
leave
xchg
adc
lods
lret
dec
jmp
push
leave
xor
mov
push
scas
adc
imull
dec
js,pn
cmp
mov
add
mov
sarl
jne
mov
jae
outsl
stos
sbb
lods
test
rorl
out
cmpsl
stos
js
mov
jb
add
out
push
and
jg
adc
mov
dec
add
pop
jge
les
ja
pop
enter
mov
arpl
dec
pop
mov
push
inc
pop
push
sub
fidivrl
mov
shrb
jne
sub
popf
mov
push
sti
xchg
ljmp
fwait
adc
sbb
and
ret
lock
add
dec
jle
iret
mov
addl
push
mov
or
inc
lcall
icebp
cld
out
enter
and
es
cmpsb
cmp
and
inc
je
jge
sub
pop
push
es
xor
dec
mov
dec
adc
xlat
cwtl
movsb
mov
aam
jp
clc
ljmp
adcb
adc
jnp
dec
das
xchg
dec
jb
dec
push
inc
lds
sbb
mulb
shl
push
adc
adc
in
leave
and
add
pop
push
mov
sub
jp
and
jo
int
imul
add
mov
repz
outsl
mov
xchg
es
shrl
ss
and
xlat
pop
sbb
rorb
iret
sub
xchg
xchg
div
imul
mov
mov
cld
jge
adc
mov
or
pop
or
xchg
push
data16
ss
inc
arpl
mov
pop
add
jecxz
mov
pop
push
ss
dec
jbe
sbb
lahf
es
inc
mov
add
mov
sbb
adc
cwtl
jae
jo
cld
mov
dec
popa
not
aad
and
or
fstpt
or
mov
testl
je
in
jecxz
aam
es
mov
add
lods
xchg
or
fs
cmp
loopne
or
or
insb
repz
adc
fwait
in
xor
enter
sahf
pop
rcl
ss
paddb
int
xchg
int
cmp
jl
outsl
adc
ret
das
mov
or
cmp
push
xor
mov
leave
xor
iret
mov
sub
das
js
into
out
inc
fwait
enter
or
mov
fwait
stos
mov
xlat
mov
ret
mulb
lods
mov
cltd
test
adc
stc
mov
mov
jnp
adc
sti
dec
mov
lahf
mov
cmp
sub
mov
push
cld
stos
mov
inc
shlb
negl
add
cmp
mov
movsl
pusha
jne
stos
pop
xor
mov
and
jg
dec
inc
aas
dec
out
pusha
adc
popf
int3
mov
jno
mov
scas
adc
addr16
mov
out
lds
dec
cmpsl
mov
sbbb
jne,pt
or
dec
mov
inc
sbb
sbb
mov
push
aaa
aas
pop
ss
ret
into
outsb
push
adc
sbb
fistps
scas
addr16
test
stos
sbb
add
mov
add
data16
idivl
loope
inc
xchg
and
push
xchg
enter
test
inc
push
in
jno
ret
push
in
xor
imull
hlt
pop
inc
in
jo
jge
cmp
fdivrs
fs
insb
jl
je
mov
aam
popa
mov
jg
mov
cmp
popf
mov
and
xor
repz
push
xchg
sub
push
aad
push
inc
mov
push
ficomps
push
xor
sub
mov
es
imul
dec
sub
add
sub
adc
dec
int
out
stc
ud2
cmp
mov
into
push
fs
push
push
jae
push
sbbl
test
cmp
push
mov
mov
lahf
pop
mov
xchg
xchg
iret
or
add
hlt
clc
out
movsb
lea
pop
lcall
sbb
das
and
xor
mov
cmc
stos
shlb
ja
cmpsb
jg
pop
and
xchg
clc
pop
sub
sti
hlt
lods
jle
insl
jno
int
adc
arpl
dec
fs
jnp
xchg
cmp
dec
lret
divl
fwait
orl
andl
outsl
lret
mov
inc
add
repz
lcall
mov
std
pushl
cwtl
pop
lcall
incb
adc
loope
test
aad
mov
call
dec
cmpsl
addl
sbb
jge
cs
aad
push
mov
dec
mov
dec
arpl
test
pop
cmpsl
inc
fdivrs
nop
jle
inc
xchg
popf
ds
push
cmp
cmp
mov
fwait
rol
test
cmp
jo
fcoml
sti
cli
and
ljmp
movsb
cmp
hlt
xor
les
add
mov
and
inc
pushl
int
or
fbstp
adc
in
int
int
sahf
jbe
mov
push
jp
sbb
mov
aad
test
dec
jns
xor
int
xor
movsb
cmp
je
sub
push
pushf
jecxz
dec
cmpl
xchg
pop
das
movsl
in
xor
loopne
enter
xor
mov
imul
push
mov
fstps
test
sbb
std
mov
dec
inc
cmp
inc
sub
mov
dec
and
push
jge
dec
jnp
xchg
lahf
add
fsubs
sub
test
ds
or
adc
out
pop
inc
or
mov
push
adc
lods
lock
data16
ret
dec
or
insl
and
cld
data16
cmp
imul
mov
dec
rcr
out
jecxz
fmull
fistl
call
add
or
adc
mov
popa
inc
adc
and
je
mov
inc
xor
icebp
pop
cmp
icebp
push
jns
fcmovb
or
addl
xlat
movsb
mov
ret
mov
iret
jo
sub
lds
mov
inc
dec
repnz
dec
adc
dec
mov
repz
scas
inc
dec
adc
and
loopne
push
jl
xorb
mov
lcall
push
jae
into
add
cwtl
xor
xor
and
notl
xchg
mov
inc
push
xlat
xorl
test
gs
loope
push
push
jmp
imul
push
rep
jnp
jmp
dec
mov
data16
adc
outsb
pushf
and
mov
jae
push
sub
in
into
mov
push
lahf
inc
stos
loop
add
dec
lret
inc
inc
aad
xchg
pop
fadds
pop
xor
mov
mov
mov
fwait
pop
addr16
xor
pop
mov
sub
sbb
aaa
popf
in
mov
xchg
sar
cwtl
xor
mov
adc
cwtl
cmpsl
sti
fmuls
aad
dec
cs
loop
insl
cli
jl,pt
and
aam
out
shrb
cmp
xorl
or
add
pop
jo
sbb
add
loopne
adc
sub
imul
enter
les
rorl
lds
push
push
aam
xor
cld
inc
xor
dec
cmc
sub
aam
mov
inc
out
lods
xchg
pusha
dec
mov
jbe
mov
mov
sahf
xor
sub
enter
mov
adc
push
fcmovnu
aad
jmp
xor
movsl
lock
jae
mov
out
and
popf
and
in
jns
mov
push
hlt
sti
lahf
xchg
sbb
nop
inc
jnp
shll
push
sbb
decl
pop
adc
mov
stos
push
aaa
xor
fs
jo
mov
or
sub
xchg
enter
xor
scas
repz
jmp
leave
inc
ss
inc
out
fstpl
lea
mov
int3
incb
inc
push
xor
jno
inc
mov
subl
dec
cmp
jnp
mov
push
inc
ficomps
and
xor
repz
push
dec
stos
vmovq
out
mov
and
cltd
push
lret
cmpsb
cli
divb
mov
stc
decb
mov
jge
mov
movsl
pop
mov
sub
movl
ret
jbe
sahf
cmpsl
push
push
ja
sbb
in
jge
push
pop
add
les
and
cmp
cli
jl
out
or
and
mov
rcrl
dec
stos
sarb
in
jb
jne
mov
jecxz
mov
out
and
addr16
mov
movl
ljmp
mov
cwtl
lcall
call
xlat
cld
leave
and
sbb
jbe
xchg
pop
test
inc
popa
dec
idivl
imul
mov
xlat
or
jmp
pusha
jb
ret
pop
shll
pop
and
xor
pop
das
lahf
jle
daa
arpl
adc
push
mov
cmp
ret
mov
jecxz
sarb
cmpsl
jp
in
outsl
popf
sub
xchg
and
int
xchg
int
or
stc
mov
sub
popf
push
push
sarl
push
leave
cmpsl
mov
dec
dec
xor
jl
dec
lcall
rolb
stos
jns
or
sbb
fisubrl
or
dec
mov
add
mov
push
sti
xchg
out
fisttpll
push
xor
inc
or
out
roll
loop
and
sbb
aaa
jp
and
cmpsb
cmp
or
dec
push
inc
sbb
pop
xor
arpl
push
sbb
pop
sub
clc
push
lret
jp
cltd
jmp
adc
lahf
cmpsb
sbb
jmp
test
add
fldcw
jno
roll
push
imul
pop
andb
inc
adc
sbb
fistl
pop
or
data16
shlb
jo
dec
fsubs
push
jge
mov
cmpsb
sahf
inc
jl
push
mov
or
pop
xchg
or
jmp
cli
rorb
pop
js
push
aad
jl
dec
mov
xor
jmp
in
imul
sahf
lds
stos
outsb
out
pop
fiadds
jb
add
jl
adc
and
nop
imul
repz
int
jecxz
scas
pop
mov
daa
push
pop
sub
dec
jle
mov
loope
repnz
dec
or
call
fistps
add
pop
arpl
out
into
in
adc
mov
mov
inc
gs
jb
jg
loopne
cmpb
add
shr
jl
cmpsl
addb
or
int3
and
es
and
inc
cld
fimull
add
xor
aam
hlt
shrl
cmpsl
pushf
cmc
jae
sahf
pop
mov
cmp
ja
xchg
cmp
xchg
movl
insb
adc
mov
xchg
push
jp
out
jnp
pop
pop
add
mov
and
cli
sbb
lret
adc
jmp
mov
xchg
iret
je
inc
dec
mov
push
lret
add
lods
mov
and
pop
lods
data16
push
mov
mov
cli
pop
mov
cmc
pop
pop
idivl
int3
mov
stos
pusha
xor
testl
pop
test
mov
add
mov
daa
jl
jp
mov
sbb
xchg
std
dec
push
push
mov
add
call
test
js
outsl
btc
pop
mov
inc
push
or
sbb
cmp
icebp
shrl
dec
ret
jge
add
jb
jmp
in
hlt
jmp
cmc
xor
push
pusha
add
cmp
rcrb
cmp
pop
adc
add
shlb
insl
dec
enter
clc
aad
ret
lahf
ljmp
addr16
dec
dec
ret
jbe
pushl
nop
jg
sbb
ljmp
jbe
repnz
mov
cmp
mov
jnp
jle
push
sub
fnstenv
rol
repz
subl
pop
adc
int3
pop
or
stos
cmp
mov
jl
xor
mov
push
les
xchg
push
jle
or
inc
test
push
cmp
movsl
scas
sub
aam
call
ret
or
inc
jns
or
das
jae
in
dec
iret
push
mov
leave
jae
repnz
sub
int3
mov
pop
push
lods
rcl
inc
mov
idiv
decl
dec
adc
sub
cld
push
cli
loop
popw
jmp
adc
adc
sahf
and
xlat
out
ret
aas
stos
out
clc
dec
add
xchg
push
mov
cmp
fdivrs
sbb
xchg
sarb
cmpsl
cwtl
mov
xchg
jns
pop
fcomp
sub
push
test
ja
and
mov
dec
lea
outsl
push
jle
icebp
aaa
bound
lods
cmpsl
jns
nop
daa
dec
subl
dec
leave
sub
idiv
mov
mov
mov
push
jecxz
in
gs
js
fcompl
out
movsb
sbb
cmp
gs
arpl
xor
xchg
test
lahf
rclb
sbb
cmp
sahf
adc
std
leave
cmp
dec
mov
stos
leave
cwtl
mov
aaa
jnp
aam
mov
jb
lods
in
scas
sub
out
out
mov
enter
adc
mov
ds
push
xchg
jp
add
jne
ds
call
mov
fsubp
cmp
clc
jge
aam
jecxz
loope
push
adc
dec
dec
ja
repz
leave
sbb
jg
es
outsb
dec
sub
pop
adc
adc
jb
enter
rcll
fldcw
sbb
iret
add
shlb
nop
xchg
push
imul
fadd
lret
stos
rol
inc
adc
add
jmp
fcompl
addr16
cwtl
xchg
shl
push
cmp
inc
xlat
sbb
sbb
cmp
fldt
shl
fiadds
fildll
es
daa
xchg
mov
out
xchg
and
call
xchg
add
cmc
xor
daa
or
or
data16
adc
jecxz
push
pop
or
xchg
fsub
xor
loopne
movb
iret
clc
and
add
jo
cli
ja
repnz
jne
shlb
es
aad
cmp
pop
cmp
fidivs
pop
stos
mov
cmpl
arpl
test
mov
mov
and
cmc
adc
lea
out
jns
int
jl
into
push
xchg
in
xchg
mov
das
sub
repz
mov
loopne
lahf
ret
inc
inc
cwtl
imul
lock
int3
sbb
jnp
in
lock
jbe
adc
add
movsl
inc
cmpsb
sbb
mov
orl
aas
and
push
hlt
dec
test
cmp
in
and
add
orb
in
pop
addr16
jle
imul
aas
lea
jne
cmp
rcl
mov
inc
es
push
adc
inc
test
insb
test
mov
adc
movsb
pop
sbb
leave
jl
xchg
xor
xor
cmp
jne
in
sbb
xchg
jmp
push
outsb
fidivrs
push
stos
popf
ja
dec
xor
pop
push
adc
psllq
jns
add
jne
lcall
mov
cs
sub
and
ss
jle
jbe
sbb
fidivrl
mov
adc
or
xor
rcrb
inc
bnd
in
mov
xacquire
add
xchg
mov
mov
jge
ror
push
add
dec
lahf
pop
imul
scas
nop
mov
cli
mov
rcll
mov
xchg
inc
scas
js
ret
jl
pop
shlb
inc
in
stos
lods
sti
jno
js
xorb
and
ficompl
pushf
jge
sbb
and
gs
xchg
cli
shll
lret
and
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
jmp
scas
shlb
jno
scas
mov
xor
ret
xchg
repnz
jmp
jl
xchg
popa
pop
movsl
sahf
outsb
xchg
mov
inc
into
loop
or
sub
dec
mov
inc
pop
movsb
sahf
imul
repnz
sub
add
outsb
mov
jle
pop
aad
ja
xchg
mov
sub
outsl
test
pop
or
nop
mov
popa
in
mov
pop
mov
lahf
push
shr
mov
xor
sysret
enter
pop
loope
lea
push
jo
loop
push
mov
fisttps
sub
dec
and
mov
lahf
xor
xor
je
fstl
testl
and
mov
mov
dec
daa
adc
cli
mov
jmp
cmp
nop
jbe
mov
test
cs
out
sub
and
xor
xor
outsl
sbb
loopne
cmp
jo
inc
scas
pop
inc
dec
mov
push
mov
inc
pop
jno
add
mov
mov
scas
nop
fadd
inc
andl
sti
jmp
push
out
popa
repz
mov
dec
fs
push
idivl
adc
mov
sub
cwtl
ds
sub
lahf
loopne
mov
shll
cmpsb
sub
out
or
mov
xchg
jle
aad
leave
mov
push
js
into
int
xor
dec
pop
push
dec
inc
incb
or
fwait
arpl
jge
mov
jecxz
lock
mov
lcall
cs
or
dec
pop
popa
cmp
loopne
adc
test
ret
icebp
pop
repnz
cmp
fstpt
int3
scas
in
aaa
fmuls
fwait
adc
rol
hlt
fcomps
stos
fs
or
out
out
jno
dec
movq
mov
jbe
push
cmc
int
enter
mov
cltd
shrb
pop
xor
aad
mov
dec
adc
sbb
cmp
mov
bound
fwait
jnp
jb
jg
mov
inc
jge
fs
jp
jno
jmp
adc
cld
inc
je
cmp
pushf
xchg
in
loop
pop
int
dec
jae
andb
sahf
std
cld
cmc
andl
jns
mulb
in
jbe
jge
or
adc
leave
push
xchg
fs
call
cmp
in
jge
stc
sar
dec
test
and
shrl
xor
les
push
cwtl
lea
mov
sub
lret
sbb
repnz
or
sahf
cmc
sbb
cwtl
pop
fnstenv
jns
mov
leave
loopne
sub
jne
xor
mov
stc
jg
mov
mov
cmp
cmpsb
and
adc
mov
lods
cmpsb
sbb
push
es
jge
ret
jno
inc
aaa
lret
jns
clc
in
loopne
mov
aaa
inc
orl
addr16
test
nop
aam
sub
mov
and
leave
ret
jno
fildll
test
or
shlb
outsl
stos
leave
insb
push
inc
scas
push
out
jmp
mov
mov
inc
fwait
in
hlt
mul
xlat
pop
outsb
mov
arpl
cmp
test
nop
addb
dec
lcall
loop
or
mov
ds
leave
jae
enter
and
sub
and
shrb
xor
pop
xlat
rolb
jl
mov
into
push
mov
dec
loope
pop
adc
push
sbb
mov
mov
ja
addr16
dec
mov
push
add
or
repz
xchg
sbb
pop
bnd
int
jp
pop
pop
loop
arpl
js
fimuls
adc
loope
cld
mov
dec
leave
mov
icebp
ficoml
ja
leave
push
mov
mov
push
lahf
in
out
add
push
xchg
mov
jg
js
es
add
std
xor
call
call
and
jno
xchg
push
push
out
in
inc
jle
imul
jle
rolb
pop
je
fistpll
fidivrs
or
or
pop
dec
repz
scas
mov
in
adc
pop
das
push
add
aad
jg
push
xor
pop
sub
cmpsl
ljmp
out
imul
adc
ds
cltd
adc
mov
add
das
mov
xchg
les
cmp
and
xor
sbb
dec
inc
int
pop
add
imull
xchg
sbbb
add
mov
vmovss
lret
xchg
and
xchg
jae
loope
push
xor
xchg
mov
push
add
fs
or
xchg
or
dec
inc
test
cmpsb
sub
or
loopne
jae
mov
xor
lcall
mov
sbb
mov
decb
loopne
mov
xchg
mov
cmp
arpl
add
cmp
imul
ljmp
enter
push
inc
in
mov
xchg
pusha
xor
dec
stos
xor
sti
das
push
fwait
sub
lret
adc
js
popf
xchg
fnstenv
inc
es
dec
idivb
pop
ret
out
sbb
ss
jo
pop
xchg
sbb
lods
add
jae
out
mov
push
jg
fnstsw
dec
push
stos
outsb
pop
loope
fwait
cli
mov
and
mov
popf
bound
mov
ret
mov
push
dec
fisttps
cmpsb
lock
fsubs
mov
sbb
test
stos
jl
shlb
mov
pop
add
push
in
loope
fists
sub
pop
xchg
xor
shll
adc
mov
xor
das
add
sub
hlt
cmpsl
shrl
stos
cmpsl
out
shlb
icebp
inc
xchg
call
sub
sub
push
mov
push
mov
out
and
mov
push
cmp
jb
lds
std
addb
scas
setge
das
lret
rol
loopne
fistps
adc
xor
sbb
xor
jle
mov
and
or
sub
pusha
lret
imul
fcompl
insl
add
stos
adc
in
sahf
adc
push
xor
mov
sbb
lea
jns
add
xchg
push
mov
jg
inc
xor
and
sub
loop
cmp
loopne
test
push
sti
and
xchg
decl
rcrb
cmp
xchg
mov
push
hlt
jb
cli
shr
jae
bound
xor
xor
mov
cli
test
lds
aaa
arpl
mov
in
inc
shrb
dec
cmp
cmc
scas
stos
imul
pop
push
clc
fsubrl
sub
loop
fwait
adc
xor
ficoml
add
dec
and
sbb
fs
jnp
dec
jno
scas
jns
push
mov
pop
xchg
pop
xchg
push
imul
bound
jae
nop
xchg
filds
jae
sahf
jg
sarb
cmc
fsubrs
fwait
les
mov
xchg
xor
mov
pop
daa
push
jle
add
mov
call
cs
jo
ljmp
aad
lock
lods
test
sub
jg
subl
cwtl
pop
cmpl
jl
loope
push
in
jo
cmp
mov
xchg
dec
cmpsb
cmp
ret
xchg
out
mov
and
adc
adc
lcall
cmp
pop
push
nop
and
ss
fcomps
mov
or
lds
test
dec
pop
addb
cmp
push
cmc
jno
repnz
sti
adc
sub
sbb
pop
mov
add
mov
jl
stos
xchg
imul
fcomi
popf
imul
or
cmc
stos
out
lahf
and
jge
xor
xor
fwait
xchg
xchg
cmp
imul
push
ficompl
mov
mov
mov
inc
mov
out
mov
out
test
push
mov
sahf
xchg
jmp
callw
pop
sub
ljmp
dec
fistps
mov
sub
insb
mov
fdivp
xchg
lret
dec
inc
ds
lret
xlat
mov
sbb
pop
aaa
xor
shrl
pop
scas
nop
cmpb
dec
add
inc
push
lea
insl
fdivl
push
fsub
cmp
and
xorb
push
aaa
negl
mov
xorb
pop
push
aam
je
xchg
xchg
or
mov
cmp
jg
jmp
lret
lods
sub
sbb
repz
sbbb
jg
push
jp
xor
and
and
out
clc
push
add
dec
dec
xor
xchg
repnz
fildll
mov
dec
js
mov
js
loopne
mov
aam
jle
adcb
or
icebp
insb
jg
xor
dec
mov
repnz
jecxz
aad
jp
cld
imul
xor
sub
ret
mov
sbbl
pop
push
adc
repnz
dec
mov
hlt
shr
imul
push
add
and
movsb
sarl
jecxz
fs
push
dec
mov
add
mov
jns
cmp
popa
cmpsl
jnp
inc
add
mov
outsb
jle
sbb
js
daa
mov
add
pop
in
push
pop
and
mov
inc
repz
dec
cmpb
mov
cmpsb
jb
mov
addr16
cld
cmpsl
adc
adc
aas
cltd
ret
inc
pushf
shll
lret
adc
mov
fwait
je
and
push
adc
sub
cmp
jp
es
and
fs
ret
mov
loop
adc
dec
mov
inc
cmpsl
in
into
cmc
jecxz
movsl
push
daa
mov
fbstp
sbb
outsb
scas
mov
dec
cmpsl
pushf
push
mov
test
jbe
addr16
in
sub
lret
sub
ja
clc
or
sbbl
mov
jg
lock
mov
jge
daa
dec
aaa
xor
pop
in
inc
or
mov
int
enter
xchg
jl
fstpt
dec
rorb
inc
or
xchg
jnp
xchg
add
mov
adc
aam
push
jmp
mov
les
pop
icebp
add
fadd
outsl
push
int
push
push
sti
in
fistl
cli
and
mov
nop
xchg
jle
cmpsb
inc
lret
icebp
sbb
mov
cmp
mov
sub
or
daa
push
shl
sbb
dec
adc
add
imul
xchg
cmpsl
jmp
xor
andb
test
mov
or
pop
or
inc
stos
pop
cmc
pop
cmp
sub
add
std
jl
xor
sbb
test
fnstsw
inc
sbb
enter
cmp
or
fdivl
mov
inc
jle
inc
dec
fdivr
lahf
jmp
test
sbb
cmp
in
push
rcr
ss
mov
rorb
or
stos
pop
loopne
sbb
scas
pop
pop
das
mov
lock
ja
push
mov
negl
sub
jp
imul
cli
in
jbe,pt
xor
leave
dec
mov
xchg
or
lods
repz
xor
sbb
jg
popf
gs
xchg
fsubl
cmpsb
es
jle
bnd
add
aad
or
in
loope
or
jns
mov
cwtl
sarb
scas
jno
xchg
mov
mov
jno
sbb
ror
mov
mov
pushf
sbbb
inc
aad
pop
push
and
test
call
adc
leave
inc
push
test
push
icebp
shrb
inc
dec
inc
roll
pop
mov
jmp
pop
push
call
mov
push
pop
addb
jo
movsb
push
ljmp
add
adc
fildll
push
fwait
xchg
sti
lods
loop
scas
jns
add
mov
dec
loop
and
cmc
les
xor
mov
mov
adc
sub
loopne
or
sbb
cmp
cmpb
insb
insb
repz
frstor
arpl
ret
or
std
scas
hlt
jne
xor
pop
add
shll
lret
call
test
aas
and
mov
sub
mov
jle
jmp
dec
mov
test
and
jecxz
mov
xchg
les
xor
inc
nop
lock
and
and
xlat
subl
pop
rclb
outsl
and
es
mov
pop
dec
fidivrl
clc
andl
cwtl
fstpt
inc
iret
mov
mov
sbb
inc
or
mov
xor
pop
push
out
cltd
mov
sbb
inc
call
pop
lods
lods
lahf
ret
pop
mov
insb
pmaddwd
xchg
adc
ret
lahf
out
xchg
push
cli
negb
mov
ficompl
das
and
inc
inc
jo
jne
adc
lds
test
ret
mov
movsl
inc
pop
bound
jle
pop
out
je
pop
xchg
dec
jno
and
fucomi
enter
jnp
push
daa
pop
shll
test
push
int
imul
mov
out
dec
rorb
mov
mov
enter
jle
test
jl
lea
lods
mov
in
test
das
xchg
rclb
aam
dec
mov
jg
push
push
pop
push
pusha
jbe
jg
adc
add
int3
sub
push
ss
cltd
loop
xor
negl
fldt
inc
pop
sbb
or
scas
fwait
mov
jno
test
sub
mov
cmpb
cmpb
xor
std
mov
xchg
dec
rol
rolb
push
mov
add
add
mov
enter
lahf
aaa
mov
mov
in
jb
push
push
mov
lods
sbb
or
fstl
sub
rcrb
jbe
mov
dec
stc
cmp
adc
sbb
es
ret
jne
inc
enter
int
and
mov
stc
test
into
jb
daa
jge
add
xor
pop
adc
lds
mov
pop
sbb
xor
call
push
jp
xlat
hlt
jb
pop
mov
inc
and
push
adc
lods
aam
xlat
adc
sub
mov
xchg
out
and
sarl
flds
pop
jecxz
ror
mov
mov
inc
mov
je,pn
push
imul
pop
enter
xor
or
les
cmp
imul
push
sahf
mov
dec
pop
fcmovnu
js
cs
out
xchg
jg
test
aam
pop
aaa
cmp
mov
push
addb
mov
test
lret
mov
and
nop
add
add
xor
xchg
sti
xchg
mov
pop
mov
sahf
push
fs
mov
mov
rcrb
or
out
pop
sahf
mov
pop
int
push
jp
adc
stos
fwait
xor
cs
push
or
sbb
inc
sub
out
scas
jbe
leave
rcr
sti
pop
imul
lcall
les
mov
in
xchg
push
mov
push
xor
cltd
cli
mov
push
scas
or
push
push
scas
outsb
pop
ss
inc
repnz
sbb
adcl
and
mov
dec
cmc
loop
fbstp
pushf
sti
or
fcoml
mov
repz
outsl
pop
cmpb
jb
arpl
popa
xchg
add
mov
pop
adc
ret
xchg
dec
fsts
sahf
fiadds
arpl
outsb
jecxz
out
jecxz
call
in
dec
lods
xchg
sbb
mov
pop
int
xor
mov
cmp
es
insl
mov
jle
pop
push
in
cwtl
push
jle
inc
sub
fists
in
xchg
mov
mov
mov
mov
bound
in
movb
mov
cltd
stos
rcrb
cwtl
and
daa
je,pn
xor
add
adc
xchg
ja
in
or
lret
and
movsl
into
xor
pusha
xchg
arpl
pusha
adc
mov
xchg
mov
xor
in
ds
aam
shl
pop
lret
orl
test
pop
mov
mov
push
and
adc
add
das
rorl
and
bound
aam
sbb
rclb
ljmp
lods
shl
ljmp
test
dec
xor
jno
sahf
scas
mov
jns
xchg
out
lds
cs
cmp
adc
xlat
or
jle
sub
das
mov
mov
jae
fwait
mov
pop
push
ret
roll
push
fstpl
cmp
icebp
cmc
loope
jno
and
adc
or
mov
xor
aad
adc
in
stos
imul
push
shrb
push
mov
test
dec
ds
sbb
test
push
mov
adc
mov
cmp
pop
leave
adc
mov
test
adc
imul
outsl
lret
enter
lea
xchg
mov
jnp
dec
mov
test
cwtl
jmp
int
insl
je
nop
jae
in
sti
iret
ljmp
cltd
adc
sbb
in
add
cmp
inc
mov
imul
imul
push
pop
shlb
scas
mov
cltd
subl
fcoms
mov
mov
xor
mov
cmp
mov
ss
adc
sarb
andl
imul
cmp
dec
bound
and
mov
pop
mov
jno
lret
pop
negl
push
mov
pcmpgtw
repnz
pop
adc
shll
add
int
or
in
out
shlb
sarb
fs
and
outsb
out
ljmp
xor
push
add
xor
sti
or
inc
sahf
jg
inc
nop
ficompl
ljmp
add
xchg
push
adc
imul
lret
daa
jmp
mov
xchg
mov
mov
add
mov
aaa
cld
clc
std
sahf
sub
outsb
stc
mov
mov
inc
push
adc
jl
inc
movsb
or
shlb
sub
xchg
cmp
loope
pusha
jb
sbb
cmp
pop
les
popa
fnstsw
sahf
jno,pn
jmp
in
push
into
dec
scas
push
xchg
fnstcw
out
call
pop
sbb
pop
cwtl
sbb
mov
subl
pop
scas
sbb
in
ja
jae
cmp
rclb
fnsave
pop
and
jae
fldenv
xor
sub
pusha
and
rorb
and
cmp
dec
lock
into
das
stos
enter
or
push
out
and
loop
dec
add
add
shl
call
sti
mov
daa
das
pop
sbb
in
mov
int
sbb
arpl
mov
outsb
arpl
call
das
adcb
out
mov
add
dec
push
cltd
or
jne
icebp
xlat
xchg
leave
mov
jecxz
adc
sbb
xchg
lahf
add
mov
in
mov
pop
sub
clc
ss
ffreep
nop
inc
das
adc
push
jmp
cld
or
movsb
out
cmpsl
insb
or
adc
fwait
sbb
dec
cmp
sub
jmp
add
sbb
pop
add
pop
inc
ja
es
mov
mov
filds
out
in
fisubs
dec
sub
adc
out
lods
xor
or
xchg
pop
cmp
outsb
mov
mov
mov
call
and
je
xor
sub
pop
sahf
adc
test
adc
ss
dec
cmc
jecxz
filds
inc
dec
shr
fs
pop
cmc
inc
adc
cmp
dec
pop
sti
mov
fsubrs
inc
out
stc
pop
jge
fstpt
cwtl
or
in
lret
aas
push
dec
jns
pop
mov
data16
hlt
jmp
push
xor
hlt
sub
xlat
jo
dec
into
mov
jmp
and
adc
cwtl
add
mov
sar
into
movsb
jo
jge
push
pop
into
sbb
in
jb
fdivp
in
xchg
jno
push
pop
mov
in
jle
cld
xor
pop
outsb
ret
iret
lret
mov
mov
dec
fildl
hlt
push
mov
cld
jbe
push
outsl
cmp
inc
cmp
inc
xchg
adc
mov
dec
std
lret
xchg
mov
scas
mov
or
mov
je
scas
insb
imul
scas
popf
lock
pop
xorl
lds
xchg
filds
fsubl
lahf
fwait
sti
and
fidivs
mov
jl
cmp
jge
lret
ficoms
js
jbe
mov
add
inc
and
enter
push
cmpsl
les
and
xor
mov
push
ljmp
sub
jle
sub
mov
cmc
pop
pop
int
andb
adc
repnz
out
cmp
js
out
daa
mov
jl
xor
push
inc
dec
filds
cmp
push
sbbl
stos
pop
pop
sbb
jecxz
mov
dec
pop
mov
and
pop
lea
lret
fidivrs
ljmp
dec
es
leave
out
scas
fistps
sbb
insb
mov
add
les
int3
nop
mov
or
leave
ss
push
pop
lea
jbe
xchg
sbb
and
mov
mov
add
dec
add
lret
xchg
imulb
cmp
mov
test
cli
fstpl
or
push
push
lret
enter
inc
cmpl
push
imul
in
mov
add
es
lahf
push
mov
fnstsw
daa
cmp
sbb
ret
and
cli
cmpsb
insl
dec
lret
sub
cmp
in
fildll
inc
ret
stc
cwtl
mov
xor
popf
rorl
in
push
bound
lock
scas
enter
adc
adc
repnz
testb
dec
lret
test
iret
push
imull
arpl
aaa
mov
testb
jp
or
scas
ds
jns
roll
xchg
sub
xchg
aad
inc
mov
or
lret
aad
daa
push
push
icebp
mov
lods
dec
and
pushf
dec
mov
add
loopne
sbb
ja
add
jmp
mov
rcl
in
sub
adc
push
movsb
leave
mov
jp
sti
xor
ficompl
push
push
fdivs
repz
lcall
sub
pushf
xor
dec
insl
inc
popl
sarl
int3
aas
mov
dec
push
mov
add
shrl
loop
sbb
fidivl
test
das
jg
popa
pushf
or
jle
pop
iret
test
dec
jg
fistps
xor
scas
fdivs
and
and
or
push
jecxz
xor
inc
xchg
push
loopne
cmpsb
and
xchg
add
enter
fs
pop
pop
push
mov
lds
mulb
imul
jne
scas
cmpsb
xor
or
scas
sbb
jbe
push
loop
mov
xchg
jmp
movsb
dec
jnp
sub
mov
adc
fwait
rcr
loop
adc
movsl
xchg
mov
mov
lret
rol
das
test
lock
add
cmp
and
in
shll
mov
xorl
fs
fadds
push
mov
sbb
aaa
sbb
mov
pushf
fcmovne
dec
jecxz
push
push
or
sbb
and
cmp
popa
sbb
aaa
dec
jl
loopne
jp
sub
aas
mov
popf
das
out
jbe
mov
and
or
mov
add
lock
imul
scas
std
adc
nop
cmpb
sub
mov
dec
mov
scas
inc
mov
adc
dec
fwait
inc
imulb
call
shrl
mov
mov
jecxz
shll
sarb
mov
add
mov
aaa
push
jl
mov
fnstenv
sub
fsubl
xor
adc
mov
mov
lods
pop
dec
xor
inc
sbb
sbb
bound
stos
mov
stos
add
mov
hlt
cli
mov
jl
push
jne
mov
jmp
outsl
jno
int3
push
mov
add
lds
subl
int3
pop
cmpsb
out
push
loop
jno
testl
sahf
es
sub
inc
sub
jp
jle
jbe
push
aad
dec
pop
lds
nop
mov
enter
and
adc
nop
int
sub
mov
jno
xor
dec
js
ret
pushf
std
roll
pop
data16
xor
xchg
xchg
dec
pop
xor
push
fsts
push
mov
das
sub
jge
add
fadd
adc
and
mov
lahf
pop
scas
cmp
inc
push
push
cmpsb
repz
aaa
push
ja
inc
push
sbb
xchg
push
shl
movsl
out
jmp
mov
inc
loope
or
addr16
loopne,pn
adc
fwait
rorl
fxch
ficoms
xor
lahf
movsb
dec
sti
pop
fbstp
ret
xlat
int3
sub
mov
xchg
ret
ja
push
lret
je
jl
xor
mov
ret
jo
mov
in
and
aam
js
addr16
and
mov
or
inc
aaa
into
ret
mov
in
sbb
xchg
adc
frstor
jle
aaa
add
sub
lahf
sub
repz
iret
or
inc
fildl
and
nop
add
push
add
xor
sbb
call
push
pop
popf
xchg
push
pushf
jbe
and
scas
lods
ret
or
xchg
lret
inc
rcr
in
sbb
jae
dec
rcr
push
cmpsl
sub
sbb
popa
cmp
xchg
dec
out
jb
xchg
out
pop
out
pop
jnp
and
mov
pop
jb
aas
mov
inc
xchg
fsubr
call
test
in
jo
cmp
push
add
sub
xchg
insb
or
mov
jno,pt
adcl
push
mov
add
in
arpl
in
sbb
dec
pop
mov
xor
aaa
shll
xor
std
ljmp
sub
add
jb
mov
lahf
sbb
clc
movsb
dec
or
test
adc
or
loop
sbb
or
cmp
push
pop
fldt
push
xchg
mov
mov
aad
pop
push
xor
negb
sbbb
push
loop
push
aam
dec
shll
mov
or
xchg
in
mov
movsl
adcb
xor
ret
dec
add
lret
adc
xorl
stos
outsl
dec
or
mov
movb
call
adc
in
shrl
mov
add
cmpsl
mov
cmpsb
test
test
in
lcall
into
loopne
dec
dec
mov
pushf
mov
out
xchg
test
inc
clc
push
xchg
scas
sub
stos
jo
daa
mov
mov
dec
test
mov
mov
pop
fildll
fcmovnbe
call
addb
fbld
cmc
pop
inc
xor
dec
pusha
je
mov
sarb
mov
lret
aas
or
add
mov
dec
test
sub
and
fdivrl
mov
sub
pop
into
dec
xchg
and
push
pop
clc
hlt
push
add
push
jge
push
rol
xchg
les
mov
and
nop
ljmp
adc
mov
lcall
or
cmp
inc
stc
sbb
push
dec
dec
insl
pop
cmp
nop
movsb
jbe
sub
dec
xchg
pop
jne
imul
lock
ds
mov
xchg
rcrb
mov
mov
test
sub
pop
cmp
push
out
jb
cmpsb
mov
std
xor
js
ss
add
sub
fsubp
sub
js
adc
imul
ss
out
dec
leave
loope
mov
ror
mov
rclb
xor
jecxz
jp
or
mov
and
push
push
xlat
mov
pop
pop
lret
xor
or
push
jmp
sti
stos
xchg
jb
ficomps
cmp
imul
add
mov
mov
dec
inc
pop
fcmovnbe
sub
sbb
call
fwait
sbb
jb
ja
sub
mov
rcrb
inc
sub
jno
dec
into
subl
in
pop
sub
fcmovbe
int
test
cwtl
cmpsb
nop
pop
ret
std
adc
xchg
mov
cwtl
test
and
xor
in
sti
popa
pushf
xchg
push
xchg
fsubr
push
mov
fs
jo
xlat
dec
adc
repz
inc
lds
shrl
push
inc
jns
and
out
dec
lahf
or
push
lds
sub
repz
pop
mov
mulb
push
scas
jmp
mov
mov
rorl
les
popf
add
add
fcompl
lcall
jmp
dec
and
loop
imul
mov
frstor
idivb
fistl
jne
cmp
and
ja
inc
xchg
dec
jmp
nop
es
xchg
fdivr
xlat
jle
xchg
loop
jne
push
inc
lock
push
lret
repnz
and
cmp
mov
ret
mov
dec
ss
dec
mov
fs
sti
inc
daa
data16
xchg
mov
stc
fsubrs
fs
adc
add
and
lcall
xor
pop
push
cmp
aas
dec
sub
into
xorb
scas
arpl
add
cmp
lahf
jbe
sbb
push
std
pusha
lcall
lret
xor
movsl
les
xlat
sub
jge
mov
mov
cltd
cmp
stc
test
outsb
pop
add
pop
mov
adc
or
cltd
xor
jb
mov
dec
nop
push
out
xchg
and
pop
daa
pop
adc
scas
mov
imul
pop
inc
test
push
cli
jno
movsb
xchg
mov
ficoml
fs
mov
mov
shll
mov
or
jle
xchg
nop
stc
push
mov
push
and
arpl
bnd
or
push
outsl
lret
jl
or
push
addr16
add
lods
jl
mov
push
dec
mov
jge
sbb
xchg
pop
rorl
imul
pusha
cmp
push
in
and
pop
imul
sub
pop
lcall
xor
dec
stos
mov
call
lods
stc
add
mov
icebp
dec
notl
rol
cltd
les
fcompl
or
pusha
shlb
out
jno
or
mov
lcall
push
ret
adcb
adc
dec
mov
push
or
mov
adc
and
fcomps
jmp
cmc
outsl
filds
cmpl
pusha
or
daa
pop
outsl
lret
jae
test
out
push
loopne
mov
out
cmp
outsl
cmp
test
mov
xchg
pop
fcom
jns
push
aad
push
aaa
mov
xor
out
jo
or
std
dec
xor
push
xchg
cmp
insl
jns
and
shll
hlt
imul
scas
pop
lock
add
push
insb
inc
pop
cmp
push
hlt
mov
sub
imul
stos
fimuls
add
push
cmp
adc
sub
cmp
js
test
dec
pop
and
loop
ljmp
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
add
add
into
xor
add
add
add
add
add
rcrb
add
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
add
add
inc
push
popa
jmp
bound
mov
rcll
mov
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
dec
inc
mov
pop
xchg
andl
gs
add
test
dec
sbb
push
sbb
mov
or
js
into
and
add
xor
pop
inc
icebp
incb
out
lock
jecxz
adc
cwtl
insb
out
push
aas
push
jge
adc
aam
cmp
jae
xor
lds
sar
cld
mov
mov
ret
pop
insl
hlt
shll
xor
xchg
pop
inc
test
or
lods
jne
adc
ja
in
or
inc
push
nop
loop
enter
test
lock
cli
jae
scas
bound
and
xchg
lahf
push
popf
push
lea
icebp
mov
add
cmp
fildl
cmc
aaa
xchg
lods
ds
test
jmp
jmp
imul
data16
mov
xor
inc
inc
sti
icebp
mov
push
loopne,pn
cmp
fldenv
out
fsubrl
in
stc
std
sbb
push
pusha
xchg
xchg
mov
test
into
xchg
mov
xor
shrl
add
xor
mov
mov
lret
fidivs
xor
add
icebp
xor
lahf
int
fcmovb
sbb
push
xor
in
mov
inc
adc
imul
gs
push
shr
dec
movsb
cwtl
and
pop
lock
pop
scas
dec
or
mov
push
and
push
rsqrtps
fs
pop
jecxz
ds
mov
pop
stos
jo
fnstsw
pop
iret
stc
push
cli
sub
pop
push
icebp
ss
mov
xchg
daa
mov
fs
shll
stos
pop
pushf
add
pop
push
fmul
jnp
xchg
inc
fs
sbb
repz
mov
xchg
lods
scas
pop
fisubrs
scas
inc
cmp
lcall
xor
ss
ss
adc
mov
lock
jl
into
sbb
and
inc
adc
scas
mov
adc
jmp
loope
aam
fdivs
leave
or
jl
ret
inc
fcmovne
fsubrs
pop
sub
mov
aad
and
and
or
pop
xchg
cltd
nop
mov
out
repnz
add
cmpsl
mov
test
push
arpl
and
aad
lods
rcll
fcmove
in
jo
and
mov
mov
lock
push
xor
mov
popf
dec
jo
cli
xchg
sbb
jb
sbb
or
add
enter
fistpl
fwait
dec
push
pusha
insl
cmp
stc
cmc
out
out
mov
addr16
sbb
ret
pop
test
jle
ja
test
cmp
fcoml
cmc
aas
jnp
dec
sbb
stos
sub
mov
stc
xor
mov
dec
lret
out
xchg
pusha
outsb
adc
or
sub
push
js
push
dec
mov
nop
jl
je
popl
out
cmp
dec
sbb
ss
sbb
sub
and
aad
dec
inc
cmp
xchg
or
leave
sub
test
cld
mov
ficoms
insl
xchg
aaa
mov
cld
add
nop
fwait
aas
add
pop
mov
cmp
mov
sbb
aam
add
jb
clc
or
mov
mov
shll
xor
sbb
push
mov
adc
mov
icebp
cmp
rolb
inc
lret
xchg
aam
cmp
add
jmp
or
fs
push
adc
add
lods
add
add
jo
cmp
out
cli
mov
lcall
stc
adc
aad
jae
test
push
int
sub
lods
and
mov
adc
pop
mov
sub
jge
arpl
jo
movsb
es
pop
ljmp
inc
aaa
sahf
lds
push
ljmp
and
sar
aam
aaa
push
lcall
sub
pop
and
jg
notb
lock
xor
xchg
push
out
lds
sbb
sbb
hlt
inc
fmuls
into
sbb
pop
fisttpll
xchg
lock
jle
xor
xchg
gs
inc
js
mov
cmc
in
dec
cmpxchg
loop,pt
test
das
iret
sub
pusha
outsb
and
mov
xchg
adc
sbb
add
cmc
bound
adc
inc
mov
mov
js
mov
inc
pop
sbb
loope
mov
dec
repnz
ljmp
inc
imul
stos
xchg
nop
sbb
push
mov
push
jo
sbb
sahf
push
jge
mov
xor
insl
int
ds
dec
andb
adc
nop
mov
mov
stos
clc
subl
adcl
mov
add
arpl
jae
mov
icebp
mov
add
mov
je
fiadds
test
and
leave
in
stc
lret
in
je
jno
ret
pop
mov
outsl
sbbl
xor
aaa
hlt
mov
out
scas
loopne
jmp
xchg
andl
add
mov
rcl
and
decl
frstor
sub
or
inc
xchg
or
ss
int
sub
imul
in
insl
sbb
xlat
add
filds
shl
mov
out
stos
push
push
adc
insb
or
inc
jp
mov
mov
add
jbe
fstp
popa
movsb
adc
aad
in
inc
mov
mov
mov
ss
or
jo
cmpsl
addr16
ret
mov
dec
ret
out
fs
orb
cs
jae
push
sahf
jmp
rep
inc
lods
jle
sbb
add
insb
out
cmp
pop
and
fldenv
lock
loopne
leave
es
mov
adc
cmp
sbb
and
rolb
cmp
add
adc
xchg
push
xorl
push
or
inc
jb
mov
xlat
pop
and
push
push
pusha
fwait
mov
enter
or
pop
add
pusha
mov
out
jp
fsubrs
mov
testl
push
leave
in
ss
mov
lcall
mov
or
aad
aam
mov
out
and
mov
add
lock
mov
pusha
fidivs
xor
xor
mov
jne
daa
sub
and
aad
fs
inc
mov
in
negl
push
sbb
subl
mov
cmp
jbe
lahf
mov
andb
inc
jae
les
add
cmpsb
icebp
mov
fsubrs
icebp
add
es
jbe
mov
sti
mov
add
popa
addr16
filds
mov
mov
cli
data16
sbb
pushf
xchg
add
aam
in
or
lcall
and
add
pop
or
xchg
jo
and
lock
aad
xor
ret
pop
lahf
pop
xchg
iret
push
xchg
mov
pop
mov
cld
mov
pusha
lahf
mov
jmp
jl
jmp
xor
inc
sbb
xchg
fisubrl
out
in
pop
repz
pop
out
fildl
dec
mov
jo
mov
jl
jne
lods
jl
xorb
testb
xchg
cltd
mov
repnz
cmp
outsl
in
xchg
pop
dec
inc
and
mov
add
shll
inc
jle
aaa
push
fstpt
cltd
adc
loop
and
adc
xor
sbb
setl
xorl
ret
push
xor
push
ret
push
or
fidivs
pop
fbstp
jge
add
bswap
inc
push
das
mov
cmpsl
out
lock
repz
inc
mov
in
dec
pusha
in
imul
aas
jae
push
clc
mov
adc
scas
jg
dec
and
dec
jae
mov
xlat
repnz
add
sbb
and
inc
xor
cmp
cmp
outsl
lods
loop
enter
xor
jmp
shll
add
pop
cmc
fildl
nop
std
movsl
pop
cmc
decb
shr
and
loop
insb
jmp
int3
ljmp
jnp
scas
push
cmpsb
jnp
fimuls
call
and
and
mov
icebp
lock
test
lea
xlat
bound
jle
sbb
xchg
rcrl
icebp
sbbb
rcll
jae
ret
mov
mov
lret
sarl
pop
rolb
stos
sub
bnd
cltd
sarb
iret
cmp
push
pushf
jbe
stc
mov
mov
cmp
test
stos
test
or
push
xchg
xlat
xor
stos
cs
mov
in
inc
push
fs
sbb
fdivs
xchg
sbb
cmpsl
pop
outsb
push
mov
mov
dec
popf
popf
mov
sbb
leave
jmp
lahf
fcoms
shll
out
pop
adc
rcrb
popa
push
ss
pop
cli
jne
scas
jb
sbb
mov
fistps
sti
popf
sub
adc
out
pusha
ret
test
add
mov
jns
cmp
pavgb
jg
xchg
xchg
lcall
iret
or
pop
mov
cli
dec
je
in
xchg
push
push
test
test
xchg
push
outsb
js
jo
stos
xchg
inc
test
cli
pop
cwtl
xchg
mov
shll
popa
fdivr
or
inc
mov
call
int
or
pop
icebp
pop
mov
push
je
aam
arpl
mov
test
dec
lods
hlt
movsl
xchg
inc
pop
pop
jb
jae
jae
cmpl
mov
lret
xchg
cmp
push
stos
jle
lods
into
into
rorb
add
xor
pause
jg
in
xor
scas
jne
aam
sub
sbb
jno
xchg
cwtl
cmp
or
sarl
mov
xlat
dec
pushf
jb
ret
pop
bound
subb
mov
push
sbbb
sbb
sbb
add
lcall
mov
pusha
or
bnd
sti
std
lahf
add
mov
fsubrp
daa
dec
mov
das
jb
arpl
jno
jo
cli
clc
fwait
push
dec
pop
cltd
rcrb
push
fs
push
sub
rcrb
out
add
add
gs
popf
jg
mov
dec
sahf
xchg
push
repz
add
push
ss
xchg
and
js
mov
outsb
jno
push
sub
repnz
lcall
or
shl
test
pop
add
jle
insl
fcompl
xchg
ret
mov
push
jg
push
in
xchg
xor
test
aad
mov
in
mov
adc
je
dec
cmpsl
rcrb
fsubl
jns
jl
inc
dec
inc
push
ljmp
cmp
mov
mov
aas
cld
jmp
test
sbb
decb
enter
xor
push
sub
rolb
push
or
and
lret
xchg
cli
mov
mov
scas
pushf
jae
pop
and
inc
scas
addr16
sub
arpl
push
js
dec
xor
add
nop
mov
movl
aas
loope
in
sub
dec
ret
or
or
sbb
inc
aaa
mov
pop
xchg
and
popf
andl
mov
mov
pop
dec
xchg
xor
and
inc
leave
adc
stos
call
js
lcall
insb
mov
push
iret
xchg
jo
and
iret
scas
lds
inc
insl
push
pop
rolb
push
stos
shrl
push
fnsave
stos
sub
cmc
xor
stos
inc
mov
adc
xchg
sbb
xor
push
jno
outsb
xor
lret
mov
adc
jl
adc
cwtl
jl
push
xchg
add
call
push
cmc
jb
fnstsw
jns
xlat
shll
adc
out
add
jg
fldt
lcall
jne
inc
mov
mov
pop
mov
lea
jo
inc
cmp
dec
pop
iret
mov
adc
sbb
lock
sub
jge
lods
mov
test
jp
int
dec
push
or
mov
test
xchg
xchg
xor
jg
adc
aad
cmp
out
aad
cmpsl
inc
mov
add
mull
adc
sbb
and
incb
push
push
das
arpl
data16
push
sahf
in
sub
mov
repz
push
push
std
dec
ja
imul
xchg
loop
into
adc
iret
mov
ss
stos
lods
rcl
pop
insl
into
pop
popl
je
sbbb
dec
adc
iret
test
cltd
xor
xchg
insb
inc
cmp
shr
adc
xor
mov
push
dec
jmp
ret
popa
push
adc
test
cmp
shrb
add
fistpll
cld
jge
or
lods
hlt
lds
push
in
push
and
xor
mov
sahf
out
jo
lds
es
into
bound
sbb
fsubrl
pop
shlb
pop
mov
loopne
jge
add
jae
mov
pop
es
out
jbe
push
dec
dec
mov
and
mov
clc
jge
daa
inc
cmp
aad
flds
out
daa
add
roll
je
or
ljmp
mov
insl
xchg
aaa
push
ds
adc
or
int
shrl
or
lods
ljmp
das
fiaddl
mov
mov
jb
jne
dec
fnsave
mov
jge
cmp
ja
push
pop
lea
idivl
mov
add
pop
sbbb
dec
imul
sub
add
in
jo
sbb
mov
jbe
cmp
inc
and
loopne
mov
pop
das
push
clc
test
or
stc
clc
and
or
dec
or
mov
xchg
mov
push
sub
dec
mov
movsl
pop
mov
push
cmp
lock
or
inc
mov
sub
test
mov
add
int
sbb
dec
pop
jmp
sbb
dec
mov
inc
sub
push
mov
es
sub
ljmp
fwait
and
loopne
repz
pop
mov
mov
and
es
std
sub
add
aad
adc
pusha
jbe
in
pop
stc
mov
sub
shlb
or
into
incb
jo
and
popa
gs
push
outsb
push
into
clc
mov
push
in
lcall
xor
bound
xchg
jg
push
xor
cmpsl
xchg
push
push
sub
sbb
or
cmp
iret
or
lret
shrb
push
xor
ja
pop
outsb
pop
dec
sub
inc
pop
jo
add
rcrb
lcall
xor
inc
mov
std
daa
xchg
in
int3
pop
mov
sub
sbb
rorl
pop
sarb
in
sub
mov
mov
jne
imul
pop
add
xchg
sbb
test
mov
push
repnz
cmp
pop
fcmovu
lret
sbb
gs
in
aam
adc
jnp
test
xor
sub
push
mov
mov
in
jecxz
pop
jnp
pop
arpl
test
pop
or
wrmsr
cmp
into
adc
mov
xor
sbb
stos
loopne
lahf
push
movsl
scas
xor
lds
scas
das
and
inc
lds
or
xlat
mov
lcall
sbb
cwtl
jne
loopne
pop
aad
mov
add
xchg
sbb
ss
mov
push
lcall
int
sub
out
test
push
enter
xchg
add
scas
mov
sti
das
scas
jne
mov
fcomps
loope
xchg
sarl
jnp
mov
in
arpl
ljmp
or
fistpl
ret
jo
iret
in
dec
push
xchg
out
jo
test
sub
sub
push
cmc
inc
call
dec
xchg
arpl
shll
clc
shl
insb
jae
leave
nop
lret
in
fcoms
dec
jbe
ds
int3
mov
add
out
dec
or
add
cmpsb
mov
dec
leave
gs
cli
xchg
jb
jo
in
sbb
xchg
mov
inc
sahf
aaa
ja
pop
testl
jp
insl
stc
je
scas
lret
bound
popa
mov
frstor
daa
lock
in
mov
fdivs
imul
dec
std
cs
insl
rcll
fimull
psllq
stc
xor
cli
js
out
push
aam
addr16
adc
pop
add
or
test
inc
xchg
pop
add
imul
imul
movsl
mov
sub
rol
pop
add
lods
lods
jbe
jg
outsl
xor
insb
cli
push
shl
sbb
pop
es
mov
repnz
add
call
jecxz
jns
shr
adc
add
rolb
xchg
aas
inc
int
cmpsb
dec
js
mov
iret
dec
ret
test
xor
repz
in
sarl
stos
mov
dec
jle
and
push
mov
mov
mov
or
ret
push
or
inc
int
xchg
mov
cmp
jg
das
addb
aas
loop
rcrb
out
lret
and
pop
pusha
lods
sbb
into
xchg
cs
fsub
movsl
leave
push
cmp
insl
shlb
xchg
xchg
stc
mov
je
mov
pop
iret
fiaddl
xchg
stc
sub
add
iret
out
jae
xor
sarl
and
adc
cld
in
lock
inc
data16
mov
add
aad
bound
or
fstps
push
rcrb
jle
insb
mov
stos
out
clc
arpl
out
jmp
fmuls
stos
or
les
fiaddl
cltd
mov
fsubrs
pop
outsb
scas
aas
gs
leave
jecxz
enter
xlat
inc
pop
push
mov
xchg
adc
dec
in
dec
cmpsb
es
lret
inc
mov
bound
movsl
inc
jp
pop
push
shll
int3
mov
dec
imul
js
out
test
out
xchg
subl
out
pop
ja
adcl
fisttpll
mov
mov
xorl
xchg
push
mov
jno
jb
pushl
imul
inc
imul
es
xchg
adcb
sub
lock
xor
push
clc
inc
cmp
das
test
mov
in
push
and
xor
pop
bound
lret
add
push
xor
call
inc
out
test
mov
jnp
jno,pn
xchg
xchg
test
roll
sbb
pushf
out
mov
insl
mov
dec
mov
or
jl
movsb
cld
test
adc
pop
loopne
jge
aaa
dec
stc
inc
in
adc
pushf
cmc
push
jae
push
sbb
or
xor
and
test
inc
aam
xor
add
push
lods
xchg
mov
mov
push
subl
ds
dec
test
mov
mov
jge
and
fwait
and
jl
dec
add
or
or
mov
push
mov
enter
sarl
pop
enter
mov
pop
cmp
in
enter
add
fwait
int3
iret
sub
out
or
call
divl
sub
inc
pop
xor
lcall
int
shrl
es
lret
push
shrb
mov
sub
loope
pop
mov
int
cmp
test
lods
test
hlt
inc
sete
mov
sbbl
inc
aaa
cli
lods
add
jge
add
int
cwtl
fs
add
rorb
pop
imul
add
dec
lock
sub
inc
fyl2x
sbb
mov
cwtl
or
dec
jno
shlb
mov
push
pop
jle
lret
dec
clc
dec
push
mov
imul
mov
stc
sbb
loopne
je
out
and
test
pop
test
ds
aad
sarb
hlt
mov
adc
sub
cs
or
stos
cltd
das
pop
pop
jmp
das
pop
js
push
inc
imul
call
rcrl
or
add
out
data16
lods
cld
mov
hlt
xor
jae
add
lods
add
add
push
scas
jl
lahf
mov
clc
mov
and
push
imul
mov
cmpl
jo
inc
mov
inc
mov
xchg
adc
add
rcr
ljmp
cmp
test
jno
cwtl
fnstcw
mov
cmp
ret
add
popa
mov
out
pxor
rorb
iret
movsl
enter
cmp
cmpb
cs
out
out
sub
add
and
fildll
subl
or
push
rcl
pop
pop
mov
mov
mov
inc
pop
jg
cmp
cli
xchg
lods
loopne
add
jne
or
rorb
iret
data16
ja
mov
jnp
push
jmp
pop
xor
jl
fisubs
mov
inc
jae
jb
data16
in
mov
push
xor
cltd
mov
xor
addl
add
cmc
loope
or
sbb
inc
mov
test
rcrl
mov
xor
sbb
jmp
xchg
push
insb
xlat
inc
pop
jbe
pop
push
add
push
jg
push
roll
scas
sub
mov
negb
mul
fcompl
push
ds
dec
and
pop
xor
std
jae
or
cld
lahf
push
add
add
jne
sub
xor
xor
sbb
and
mov
sub
add
test
hlt
jnp
adc
mov
inc
or
add
lret
inc
in
jl
shl
cmp
bnd
lea
mov
jns
mov
pusha
stos
cmp
clc
int
lock
and
ss
andl
inc
popf
cmp
mov
jmp
jno
and
mov
adc
fistpll
push
sub
stos
dec
push
insb
mov
imul
mov
or
mov
out
loopne
push
repnz
sub
dec
ficomps
repz
fst
cmp
sub
cmp
je
xor
or
adc
pop
dec
push
add
pushl
push
outsb
inc
leave
lret
push
push
xchg
push
mov
clc
out
les
int3
ds
ja
and
loopne
es
repz
icebp
lods
xchg
cmp
fwait
pop
roll
or
cld
cwtl
neg
add
pop
jne
pop
pop
fwait
mov
mov
ds
fsubl
cmpb
pop
push
cltd
iret
mov
add
xchg
sbb
lcall
loop
jge
sbb
or
pop
in
mov
mov
inc
mov
inc
xlat
stc
sub
mov
mov
xor
xchg
ret
lret
push
iret
and
inc
pop
imul
hlt
sub
imul
repz
adc
out
in
adc
sbb
sub
hlt
pop
pop
adc
outsb
dec
adc
xchg
mov
insl
push
repz
xor
cmpsb
inc
mov
dec
push
ja
push
push
or
arpl
inc
js
addl
cmc
in
and
fsubs
dec
sub
nop
stos
lret
sbb
nop
std
dec
sbb
sub
jo
adc
inc
add
clc
lock
in
and
or
sbb
dec
inc
or
push
mov
pop
rolb
add
neg
jmp
cli
and
sahf
test
and
add
lods
add
add
shrl
and
scas
jbe,pn
test
add
jecxz
rclb
adc
push
pop
mov
sahf
fwait
roll
out
rolb
xchg
add
scas
adc
insl
mov
push
inc
mov
mov
movsl
fdivrl
mov
cs
pop
xorb
out
sbb
push
jno
andb
push
bswap
push
ret
xor
sar
pop
xchg
ret
fwait
push
mov
ss
insl
mov
sbb
imul
push
adcl
stos
add
adc
cli
int3
and
add
repz
cwtl
std
pusha
cltd
pop
movsb
loopne
test
fldt
lahf
cmp
mov
xchg
jbe
in
inc
xchg
cld
pop
cmp
roll
mov
std
xchg
enter
call
jns
ret
rcll
push
scas
jmp
add
les
sahf
mov
xor
mov
and
lods
push
sub
adc
inc
ret
shr
iret
arpl
fdivrp
cmpsb
mov
push
pop
jecxz
inc
jecxz
pop
clc
das
push
and
cmpsl
outsl
jae
xchg
jl
lds
mov
pop
fimuls
inc
cmpsb
ljmp
push
inc
lds
dec
mov
cmpsl
inc
repnz
out
and
cld
mov
mov
sahf
sub
cli
cld
mov
loop
cs
sub
es
lea
not
push
push
jge
popa
jns
push
mov
jbe
std
mov
pop
movsb
addr16
inc
pop
or
add
std
jo
push
and
into
dec
fldl
jg
std
jmp
xlat
enter
xlat
adcl
in
push
out
cli
xchg
pusha
ds
mov
testl
add
fldt
into
or
pop
testl
rcl
and
fnsave
imul
mov
xor
mov
popf
cld
scas
cmpsl
outsb
inc
adc
fcompl
outsb
leave
out
sbb
and
ja
pop
adc
test
jl
jecxz
xlat
xor
pop
aam
je
mov
stos
xchg
pop
lret
mov
sahf
out
fldcw
push
sti
cli
inc
out
shrb
mov
inc
ja
les
ss
cltd
sbb
jbe
or
mov
or
xor
pop
fiaddl
inc
nop
in
rorb
add
push
stos
pop
adc
dec
sahf
loopne
pop
sbb
mov
inc
div
inc
xor
pop
dec
mov
or
pop
scas
popa
or
daa
fwait
adc
popf
call
incl
jae
inc
sbb
adc
xchg
dec
test
jb
hlt
and
rcrb
loope
xlat
jp
or
cmp
push
sub
sbb
fiaddl
xchg
cmpsb
push
mov
sbb
cmp
add
xchg
sbb
adc
fmull
jg
inc
lret
and
xor
mov
dec
loope
movb
pop
loope
push
hlt
mov
int3
push
lahf
mov
mov
ret
rcll
dec
mov
push
js
inc
cmp
push
stos
sub
pop
xchg
inc
inc
test
ficoms
test
loop
xor
push
mov
stos
jb
fsubl
mov
push
mov
in
add
aas
gs
dec
or
stc
add
add
mov
and
jmp
lret
js
cmp
add
ficoms
xor
mov
inc
cmp
fisubs
xchg
subb
pop
lds
add
ja
dec
dec
fdivrs
sub
adc
aam
lods
jge
sub
scas
cli
xchg
insl
xchg
push
in
ficoml
subl
imul
or
dec
and
push
ljmp
iret
arpl
lea
scas
je
shrl
cmc
ds
jge
in
xlat
mov
adc
or
push
cmp
fcomps
or
fcompp
mov
test
fldcw
or
mov
loopne
mov
loop
test
fwait
sti
test
stc
fstps
imul
movsl
int3
jae
fldt
push
lea
mov
call
cmp
arpl
push
jle
addb
lds
jmp
and
dec
mov
push
xor
pop
test
data16
pop
mov
test
and
mov
adc
jle
divl
cwtl
lret
movlps
out
push
sbbb
lock
pop
cmp
push
test
dec
addb
inc
mov
lds
lret
push
add
mov
scas
push
fsts
arpl
into
mov
cmp
lock
scas
jle
fwait
xor
push
mov
push
pop
lds
pop
add
rcr
rclb
mov
push
stos
cmpsl
mov
loop
pop
mov
fs
les
sub
and
loope
imul
repz
les
enter
and
fisttpll
test
ret
insl
daa
in
sbb
jb
lock
into
cwtl
and
ss
mov
outsl
mov
or
xchg
jmp
cltd
mov
lcall
jecxz
sub
pop
mov
push
out
stos
ljmp
scas
cs
in
xchg
fnstenv
sahf
xchg
jbe
shll
jle
data16
jns
cld
rorl
add
repnz
sbb
gs
ror
lret
in
and
jae
jl
xor
cmpl
push
fdiv
mov
push
jne
insl
lea
push
jge
insb
cld
push
pop
xchg
xor
outsl
dec
cmpsb
stos
cmc
andb
push
ljmp
push
out
push
push
rorb
mov
or
cmp
cmp
inc
mov
rorl
mov
leave
cmc
push
cltd
data16
xchg
pop
sbb
push
xchg
out
push
lret
test
iret
and
test
loop
insb
push
xlat
ja
inc
cmc
mov
jo
mov
jns
mov
cwtl
adc
aad
mov
aas
outsl
mov
js
daa
scas
andl
popa
loop
sub
mov
shl
mov
sub
xchg
inc
test
adc
outsl
push
insb
xor
push
in
or
jp
sub
in
add
dec
test
cmp
shlb
dec
xchg
or
mov
loope
pop
add
push
ss
xlat
pop
cs
call
xchg
int3
mov
flds
pop
pop
pop
sbb
lahf
fisttps
mul
xchg
jmp
mov
sub
ds
ljmp
faddl
loope
fisttpll
das
add
aad
pop
pop
dec
inc
sbb
loopne
or
mov
xchg
dec
xor
lret
test
sbb
dec
fisubl
mov
mov
lods
add
add
out
dec
nop
jmp
lock
push
test
push
xchg
xor
xchg
cmp
cltd
arpl
in
cmc
ret
outsb
jnp
loope
ljmp
das
xor
scas
mov
dec
mov
or
lret
cli
les
in
sarb
out
aas
pop
add
mov
mov
ds
xchg
pop
adc
fwait
dec
xor
sti
das
adc
rcll
mov
icebp
incb
outsl
and
mov
lret
or
stc
adc
daa
or
push
push
data16
sub
icebp
lea
adc
cmp
ret
xor
push
cli
and
pop
jecxz
scas
das
push
mov
loope,pn
int3
or
sub
dec
mov
sbb
fnsave
sub
mov
mov
mov
adc
scas
and
repnz
and
cmp
mov
jp
sub
out
hlt
loop
add
cmp
andb
sbb
lret
mov
push
mov
test
mov
gs
xor
jnp
xor
cwtl
and
xchg
mov
mov
aaa
push
loope
sub
cmp
push
sti
sub
andl
imul
sub
mov
push
pop
inc
adc
ljmp
sub
sbb
or
pop
cmp
or
cmp
rcrl
es
mov
dec
sub
shll
adc
mov
mov
pop
sahf
outsl
lds
dec
or
rorl
pop
push
and
aaa
fistps
and
cmp
pop
push
sub
sbb
ds
lret
inc
jl
or
jo
cltd
mov
dec
sub
test
pop
js
fidivrs
in
dec
inc
mov
add
and
pop
aam
cmp
jecxz
push
and
aaa
mov
inc
cmc
or
mov
dec
outsb
mov
pop
nop
fsubl
hlt
pminsw
jecxz
mov
inc
lcall
or
mov
xor
popa
gs
hlt
imul
addr16
int
shlb
popa
cmp
fdivrl
xlat
mov
inc
pop
xor
call
xor
xor
aam
call
fwait
imul
movl
inc
push
aad
popa
shl
add
cltd
out
push
xlat
adc
insb
mov
xchg
mov
mov
hlt
xchg
mov
scas
ljmp
iret
cmc
data16
aam
xchg
jg
lahf
sbb
cmp
sbb
lcall
pop
add
adc
mov
hlt
push
addr16
sahf
add
and
sbbb
sbb
cmp
loope
scas
push
inc
daa
mov
mov
mov
pop
mov
cmp
mov
daa
and
cmc
mov
fdivrs
test
mov
dec
inc
jae
movsb
jl
outsl
sbbb
push
mov
sub
stc
int3
shl
lock
in
aas
jbe
mov
nop
dec
dec
orb
faddp
sti
lahf
dec
cmp
mov
inc
outsb
bound
mov
rorl
in
jns
pop
std
sub
scas
jo
sub
in
ret
mov
sub
jnp
add
mov
sbb
call
out
inc
dec
add
loop
inc
add
lods
add
add
or
dec
es
xchg
in
cmpsb
dec
pop
rcl
data16
cmp
scas
push
popa
pop
sarl
mov
mov
ret
shll
xchg
imul
aad
push
in
mov
in
dec
pop
fcomip
push
or
int3
mov
pop
rorl
lods
mov
push
xor
testb
or
daa
mov
loope
pop
loope
mov
stos
adc
inc
das
inc
insl
shrb
and
iret
or
sub
pop
dec
mov
aad
lods
push
xchg
ja
decl
or
shl
inc
fsubr
cld
jno
and
pop
or
jb
mov
movsb
inc
xchg
xor
jmp
lea
loope
dec
insl
nop
fdivrl
inc
ds
xor
les
or
in
push
jecxz
or
lock
push
shlb
rclb
mov
cmp
sub
xor
repnz
mov
add
enter
mov
ds
and
mov
hlt
dec
ficoms
mov
push
addr16
lods
sbb
add
mov
dec
mov
data16
test
cmp
inc
push
enter
fidivl
mov
xor
or
xor
sub
push
test
daa
cld
ja
dec
jp
adc
adc
dec
or
cs
sti
or
or
pop
add
jbe
leave
push
jecxz
cmp
xchg
and
sbb
xor
inc
in
and
fs
inc
push
push
mov
mov
or
aas
pop
repz
and
pop
adc
pop
aad
pop
jecxz
mov
sbb
loopne
loope
inc
imul
jge
stc
sbb
int
pusha
scas
mov
aad
fcmovb
int3
xlat
ficomps
repnz
jp
ljmp
push
sbbb
push
loope
xchg
ret
pop
push
push
sub
lods
xchg
inc
arpl
imul
out
out
in
fisttps
sbb
and
fnstenv
mov
dec
mov
pusha
fldenv
mov
cmp
fsubp
cs
bound
jb
jne
add
lahf
dec
out
aad
lods
sbb
lods
add
fsubl
xor
out
lret
fidivl
dec
push
or
or
outsb
scas
aaa
fcompp
add
and
lret
out
cmp
jge
jns
icebp
ja
shl
aam
cmc
repz
incl
lods
into
sbb
shrl
icebp
pop
xchg
push
dec
mov
mov
and
in
and
jmp
or
push
gs
lahf
pop
mov
lcall
or
xorb
adc
pop
lret
sbbb
adc
and
in
jne
fwait
sti
outsl
push
jmp
pushf
jl
adc
sub
mov
jle
jmp
adc
lret
jmp
gs
rcr
dec
into
add
lret
xchg
fisubl
cmp
scas
jge
or
fadds
xorl
cmp
mov
pop
or
adc
mov
jp
lret
iret
in
or
mov
movsb
into
pop
mov
jmp
push
cmp
mov
mov
mov
adc
sub
jo
cmp
fwait
xchg
pop
les
sub
imul
dec
negb
add
add
leave
or
add
or
xchg
js
aam
add
lods
add
add
loope
or
or
push
add
rol
and
pop
xchg
sbb
ret
adc
inc
inc
cltd
inc
mov
es
aaa
orb
outsl
lcall
mov
add
push
sbb
jmp
mov
dec
sub
scas
xchg
sti
sbb
lods
sub
insl
and
sbb
mov
or
leave
movsb
mov
pop
push
add
lods
ret
jae
add
negb
gs
fiadds
rcrb
fdivp
out
lret
and
sbb
cltd
dec
push
bndstx
or
pop
and
adc
lods
movsb
out
pop
push
leave
xchg
or
xchg
and
add
ss
add
inc
lret
out
inc
nop
or
mov
and
xchg
sub
sbb
mov
lahf
ja
mov
lcall
nop
mov
sub
add
data16
push
mov
mov
arpl
ljmp
scas
xchg
fsubrl
hlt
outsb
cltd
enter
aad
stc
inc
cwtl
push
aas
add
dec
sbb
xor
rep
add
mov
out
cmp
mov
lret
decl
int3
push
or
or
xchg
add
jne
jl
xor
jecxz
jecxz
int
fistl
adc
leave
lahf
jmp
aas
mov
pop
jl
fsubr
lcall
sbb
sub
popa
pop
clc
mov
insb
adc
jne
aam
dec
mov
in
add
pop
dec
mov
pop
outsl
insl
push
rcrb
pop
rsqrtps
mov
mov
enter
jae
lcall
mov
mov
aas
test
ljmpw
jno
nop
jns
or
mov
xor
adc
insl
add
jno
repnz
xchg
push
push
lahf
and
lock
sub
sbb
in
ja
jge
aam
cmp
rclb
cld
divl
clc
and
sbb
pop
movsb
fsts
pop
inc
jecxz
lods
mov
or
or
loopne
stos
mov
into
clc
aam
and
mov
xor
mov
test
arpl
mov
mov
repnz
add
lret
inc
and
push
push
pushf
sbb
cmp
mov
push
dec
fdivrp
and
xor
xchg
xor
fisttpl
aaa
cmpl
push
shll
dec
mov
ss
jb
mov
dec
ds
push
je
popf
scas
or
gs
mov
movl
adc
ret
xchg
xchg
arpl
fistl
lret
cmova
leave
add
mov
cmp
inc
sbb
pop
jmp
outsl
jge
je
jns
mov
pop
cwtl
mov
push
pop
and
int3
and
out
mov
lret
mov
and
jg
daa
mov
mov
cpuid
leave
xor
dec
inc
push
mov
xchg
mov
js
out
pop
jbe
cmp
push
jmp
cmp
dec
sub
and
sub
sbb
push
in
shll
enter
jns
pop
fidivrl
jle
xor
push
push
imul
add
cltd
ja
out
out
cltd
ja
daa
xor
orl
add
cmpsb
add
loope
icebp
js
faddl
mov
fmuls
shlb
aam
rcll
push
in
mov
cmp
mov
bound
fdivp
std
inc
dec
imul
popf
sahf
cmpsl
or
add
or
rcrb
data16
cld
nop
adc
js
dec
in
add
loop
lcall
fstpt
addr16
lahf
rorb
xor
adc
cmp
jbe
or
xor
pop
xlat
sti
mov
mov
mov
outsb
cmpsl
fbld
xor
mov
pop
pop
idivl
mov
pop
cmp
or
aam
das
mov
push
bound
cmp
shlb
int
popa
push
shr
push
inc
cmp
push
outsb
idivl
mov
iret
inc
adc
in
xor
xor
sub
out
test
outsb
in
jno
pop
jbe
dec
pop
cmp
xchg
ds
ret
imul
insb
in
roll
leave
mov
jae
jge
fcmovnu
leave
andb
sub
or
mov
or
sub
daa
pop
enter
and
leave
imull
mov
stos
and
sub
fistl
and
jbe
xchg
and
mov
dec
inc
mov
jl
repnz
inc
ficoml
data16
sub
aam
xlat
mov
gs
ljmp
sahf
pusha
out
push
mov
push
dec
cli
loopne
sbb
out
xor
loop
push
add
dec
dec
xchg
insb
lretw
insb
xchg
add
lds
inc
ljmp
in
mov
les
xor
lret
mov
push
adc
aam
mov
fmull
push
aam
test
insl
fbld
js
xchg
mov
jnp
xor
enter
xchg
mov
mov
shlb
jle
insl
imul
int
or
lcall
add
fldl
push
shl
and
in
and
scas
in
sub
mov
add
adc
push
aaa
scas
cltd
dec
test
xchg
xchg
xlat
cmp
outsb
push
stc
mov
cmp
xor
flds
and
pusha
or
gs
shll
pop
insb
out
jp
cwtl
add
jmp
cld
loopne
xchg
orb
jle
enter
push
hlt
xchg
pushf
push
cmp
push
mov
repnz
inc
xchg
lea
and
outsl
stos
test
sub
test
add
push
imul
cmp
jno
mov
or
repnz
mov
xor
jmp
in
jbe
rorb
add
ret
mov
mov
outsl
stc
pusha
fistpll
adc
cwtl
scas
adc
loop
mov
jmp
js
cli
add
xchg
mov
scas
mov
push
dec
ficoml
mov
lds
mov
xchg
insb
jbe
xchg
add
jno
in
addl
xor
and
push
sahf
add
jnp
cs
repz
pop
inc
dec
fiaddl
fs
xor
in
sti
ret
aad
cmp
lret
fnstcw
pop
lock
nop
in
je
out
sbb
inc
jnp
mov
sbb
mov
sar
out
in
xlat
push
bound
cmpsl
push
cmc
and
sub
ds
sti
call
jmp
xchg
outsb
cwtl
mov
sub
shrl
add
add
add
add
iret
lahf
push
loop
aad
test
add
add
add
fdivl
loope
push
pop
stc
pop
mov
mov
and
mov
add
outsl
sarb
sbb
ja
fistps
jmp
adc
dec
xor
rcrb
clc
aam
cmp
jmp
fsubs
out
movsb
dec
jl
xor
sbb
xor
mov
or
adc
fimuls
jno
testl
je
mov
cmpsl
mov
rep
je
xlat
test
inc
cltd
scas
add
sub
movsb
or
das
push
jnp
bound
mov
imul
out
iret
scas
mov
sub
push
adc
loopne
scas
dec
cmpsb
lods
and
imulb
fcomp
jb
int3
pop
push
or
xchg
push
adc
lods
add
mov
ss
cmc
add
and
into
sahf
scas
out
push
in
mov
xchg
movsl
jb
mov
sbb
add
sbb
ret
add
xor
std
push
cmc
jle
push
xor
mov
and
mov
adc
or
add
sbbb
subb
adc
push
xor
aad
add
mov
ja
mov
mov
adc
popa
mov
sub
cmp
mov
cs
in
lahf
cmc
adc
rcrb
add
andl
push
nop
call
adc
lods
dec
outsl
push
push
outsb
repnz
adc
adc
jne
dec
jecxz
and
int
cwtl
stos
repnz
xchg
pop
cmp
ficoms
cli
leave
cmpsb
jne
mov
pop
jmp
fnsave
dec
scas
inc
xchg
mov
pushf
xor
add
jecxz
pusha
shll
push
push
lock
js
dec
call
je
nop
mov
cmp
in
xchg
dec
lock
fisubrs
mov
cmp
test
adc
xchg
and
mov
insl
dec
pop
cmpsl
popa
sti
orb
movsl
mov
in
neg
lret
lret
stos
pop
in
pop
jp
dec
jbe
imul
pusha
lds
and
insb
push
mov
mov
aaa
insb
dec
jmp
sub
sbb
insb
pop
adc
cmc
adc
mov
xor
xchg
mov
insb
xor
sub
cmp
inc
arpl
inc
pop
xchg
xor
dec
mov
adc
in
pop
push
in
jle
push
js
aas
xchg
out
xchg
rolb
jbe
adc
push
and
jmp
ljmp
cmp
mov
cmc
pop
andb
sub
shl
or
pop
add
xor
and
pop
out
scas
push
sbb
repz
fcomip
std
and
adc
sub
cmpsl
push
fistl
xor
insl
pop
sub
test
std
jmp
dec
mov
movsl
xor
dec
mov
lret
sarb
ret
or
xor
aas
das
sahf
idivl
xchg
fstps
or
or
xor
cmpsl
fiaddl
repnz
mov
mov
popa
sbb
adc
or
push
inc
inc
add
push
and
jae
lret
add
add
lcall
jg
push
jecxz
mov
dec
add
lods
add
add
xchg
xchg
adcl
rcrl
daa
ds
push
stos
xor
add
push
mov
adc
scas
andl
aaa
aas
xchg
inc
jp,pt
xchg
and
outsl
jno
xchg
movhps
fsubrs
popa
cli
or
pusha
mov
xor
pop
and
rcr
or
fcomps
adc
xor
mov
mov
sub
shr
pop
jmp
imull
ror
mov
xor
cmp
mov
repnz
and
out
out
xor
cs
stos
cmpl
test
ja
out
adcb
sbb
dec
push
aad
sbb
in
sbb
mov
ss
cmp
xor
rolb
outsl
and
popf
enter
cld
insb
inc
pop
rcll
mov
fldt
sarb
das
daa
adcl
add
jmp
ljmp
in
stc
das
loope
mov
push
cmpb
push
inc
cltd
sbb
incb
sub
mov
inc
or
push
sbb
xchg
out
rcrb
out
rcrb
mov
push
rcll
and
add
sub
mov
dec
popf
stos
scas
inc
adc
loopne
adc
inc
scas
pop
idivl
pop
mov
fsubrs
rcrb
pop
insl
dec
adc
pop
sbb
inc
test
cmp
pop
push
daa
pushf
mov
jg
mov
add
xchg
xchg
mov
enterw
sahf
adc
scas
outsb
or
push
jmp
sub
jnp
aam
and
hlt
push
sub
cmp
push
jns
sub
sbb
pop
leave
pop
sbb
lahf
jbe
xchg
mov
sti
push
mull
cmp
pop
adc
gs
mov
adc
xchg
cli
fs
xor
inc
mov
movb
or
ret
out
lret
mov
sub
xlat
stc
lods
mov
aad
outsb
and
jno
mov
lret
sbb
push
in
test
movsl
imul
adc
lds
std
push
push
jmp
in
cmp
dec
cmpsb
arpl
fcmovu
call
or
std
mov
out
imul
sbb
pushf
sarb
jmp
clc
jg
push
enter
push
loop
cmp
fdiv
xchg
inc
jge
fiadds
mov
mov
cmc
cs
mov
mov
in
ffreep
out
sbbl
jl
push
mov
out
aam
out
push
lahf
pop
das
mov
inc
jne
rcll
sbb
stos
pop
push
pushf
mov
mov
lahf
jae
or
lods
mov
iret
ret
adc
mov
xchg
and
cld
sbb
in
stc
adc
rorl
jg
sbbl
xchg
push
aad
jecxz
sub
sahf
aaa
cli
repnz
into
cmp
push
sub
mov
ljmp
inc
sbb
popf
daa
ret
sahf
cltd
jecxz
xchg
aaa
mov
loopne
das
push
rclb
inc
sub
mov
or
mov
outsb
cmpb
cs
sbb
xchg
int3
in
dec
nop
sub
icebp
mov
xchg
lea
add
add
add
add
xlat
dec
call
adc
les
lods
add
add
movsl
movsb
test
sbb
leave
in
dec
and
mov
int
jle
mulb
cmp
mulb
sub
nop
leave
pextrw
mov
xor
xchg
mov
mov
int3
mov
push
xor
and
xchg
stos
jge
mov
out
push
aad
adc
daa
push
cmp
cmpl
out
scas
into
imul
xchg
and
ds
loopne
or
fdivl
mov
loop
and
mov
lods
sbb
outsb
pushf
outsb
sahf
popa
xor
fdivs
fadds
jp
sub
inc
jb
ds
push
jns
add
repz
stos
cmp
fidivl
cmp
push
out
xor
js
push
popa
fisttpll
sub
mov
mov
jnp
out
daa
push
notb
push
mov
or
imul
pop
or
inc
dec
mov
push
lcall
push
push
lret
sbb
sub
or
xchg
aas
lock
add
por
adc
das
inc
jne
xchg
mov
loopne
push
mov
add
pop
inc
xor
dec
mov
icebp
fldenv
out
or
nop
xor
scas
push
or
or
or
mov
lods
jbe
inc
mov
push
or
pop
aam
nop
fsubr
cwtl
pop
or
and
lahf
pop
dec
lods
push
cmpsb
movsb
jns
adc
imul
sbb
jle
in
and
push
std
imul
ror
inc
pop
or
rolb
roll
xchg
aad
mov
shlb
fsts
pop
sbb
inc
scas
call
xchg
mov
stos
jno
iret
push
out
adc
aad
push
sarb
xchg
ficoml
mov
lods
mov
sbb
pop
push
loop
aas
adc
lret
ja
adc
js
insb
ficoml
mov
lahf
cmc
adc
push
adc
jbe
pop
test
pushf
mov
imulb
hlt
mov
stos
cmp
mov
inc
fdivrs
loop
imul
movsb
dec
adc
jmp
cs
cmp
fldl
ds
adc
enter
push
xor
jl
sbb
sbb
jb
xor
sub
sbb
test
xorl
sysenter
or
fmul
das
gs
mov
stos
inc
lods
in
pop
rcr
lock
cwtl
xor
xchg
sub
fwait
inc
sbb
fwait
mov
pop
pop
push
sbb
mov
mov
jg
andb
xor
imul
rcrl
or
cmp
add
add
inc
imul
dec
es
pop
out
xchg
cmp
push
aad
loope
aas
shll
fs
aas
xchg
test
fiaddl
addr16
adc
loop
push
pop
sti
andb
jecxz
shll
ja
lcall
pop
xchg
or
mov
dec
lcall
jbe
xchg
mov
xchg
jp
cmp
jae
shrb
or
xor
fnsave
and
push
enter
or
mov
popa
pop
es
add
inc
out
jnp
mov
cmp
xor
add
add
mov
loop
mov
loopne
rcrl
int
stc
popf
shlb
enter
xor
mov
sbb
sbb
add
or
jle
push
addr16
out
xchg
xor
subb
xchg
das
pop
inc
mov
jg
imul
lock
mov
xor
outsl
mov
cli
xchg
clc
cmpsl
mov
aaa
fisubrs
fcmovne
mov
addr16
adc
adc
cmpb
push
daa
mov
movzbl
cmpsb
rcll
and
pop
lods
jb
lret
iret
sub
add
test
inc
lods
js
mov
stos
mov
add
push
sahf
cld
repnz
dec
mov
cwtl
test
jg
xchg
cmpsb
fistps
das
insb
dec
enter
xor
nopl
cmpsb
pushf
arpl
pop
hlt
pop
cmp
fistps
sbb
mov
jno
lcall
bound
push
push
push
mov
jno
adc
cmp
ljmp
rclb
addr16
push
cmp
out
xbegin
std
mov
lock
hlt
fnstcw
movsb
mov
dec
jae
dec
bound
and
in
pop
xor
mov
stos
xorb
mov
lahf
jo
fidivrs
push
aas
lds
mov
in
adc
lds
xchg
sub
mov
or
movsb
pop
dec
pop
cmp
jno
xchg
xorb
std
leave
cmpsl
jle
scas
add
cmp
dec
imulb
jnp
inc
xor
pop
dec
insb
nop
int3
arpl
int
ret
jmp
mov
divb
cli
sbb
push
setne
xchg
std
ret
push
mov
xchg
shrb
mov
ja
jmp
mov
mov
adc
repnz
cmp
int3
xchg
xchg
inc
push
dec
test
scas
or
stos
rcrl
xor
mov
mov
mov
cmc
ss
fcompl
or
data16
loope
rcrl
xor
andl
mov
xchg
lea
cmp
jnp
cs
in
inc
pushf
jbe
mov
ret
xchg
shll
add
xchg
inc
mov
icebp
lret
inc
push
arpl
add
pop
fsubl
adc
jo
int3
or
ja
xchg
insl
and
xor
or
push
cmp
cmp
inc
jecxz
xchg
sub
xor
loope
xchg
jle
cmpsb
fadds
imul
pop
sub
dec
cmp
mull
mov
add
mov
or
hlt
hlt
test
movsl
jl
xor
sub
adc
inc
jle
mov
ficoml
or
in
nop
dec
xchg
jns
push
aad
mov
test
pop
fildl
push
out
inc
movsl
mov
adc
imul
adc
mov
mov
cwtl
bound
jp
xchg
jle
and
or
cmc
fcoms
mov
mov
scas
in
and
pop
out
lret
pop
or
dec
stc
inc
stc
mov
mov
cmp
lods
mov
mov
les
pusha
aas
mov
cmpsl
std
mov
adc
scas
not
xor
xchg
jne
faddl
add
adc
jg
jns
pop
subb
add
lods
add
add
cmp
add
cmp
js
dec
jnp
imul
xor
out
or
sbb
add
call
mov
inc
lcall
ret
out
jae
pop
or
add
jl
imul
jl
mov
scas
xchg
pop
inc
push
scas
fsubs
mov
andl
roll
rcrb
mov
imul
push
xchg
outsb
pop
mov
push
mov
out
les
ss
std
adc
dec
dec
add
sub
std
dec
and
jmp
enter
xor
mov
pop
xor
dec
xor
fstpt
push
mov
xchg
gs
testl
push
mull
out
popa
push
shrl
xchg
into
jno
or
sarl
mov
xchg
subl
lret
xor
inc
mov
cmpsl
lock
pop
pop
cmp
rorb
stos
popa
jp
fmull
adcl
sub
fs
push
mov
call
fbld
mov
mov
out
pop
mov
pop
rcll
add
ret
push
insb
sahf
xchg
add
xchg
cmp
int3
les
jecxz
scas
aad
pushf
inc
sbb
dec
loopne
jb
cld
rclb
ljmp
repnz
lock
mov
fistpl
les
cli
add
repnz
mov
fcmovne
js
arpl
dec
sub
dec
push
js
xchg
imul
mov
mov
hlt
add
push
jmp
xor
lcall
inc
mov
in
cmp
int
fistps
mov
scas
push
fisttpl
fldenv
add
andb
mov
push
inc
fdiv
cld
bnd
mov
clc
lahf
dec
lods
cmp
cmc
ss
mov
cld
inc
dec
jns
icebp
cli
mov
push
or
pop
and
and
pusha
repz
jo
cmp
mov
push
jmp
mov
mov
mov
arpl
adc
jbe
adc
dec
mov
orl
inc
test
adc
lds
subb
pop
push
dec
rol
mov
in
dec
pop
add
mov
out
mov
mov
pop
cmp
adc
ljmp
adc
mov
negb
push
pop
mov
test
fs
adc
and
jae
das
xchg
ror
jmp
jl
or
inc
notb
idivl
pop
bound
jl
ret
xor
push
mov
incb
or
sbb
nop
shll
mov
jecxz
add
adc
jae
inc
iret
scas
jle
xchg
lds
cli
jle
add
ficoms
cmp
out
leave
inc
pop
sbb
sub
add
loope
pop
jge
cwtl
std
jno
pushl
in
test
sbb
outsl
fiadds
cmp
pop
push
movsb
push
xor
sbbb
ret
sbb
les
jne
adc
fmul
sbb
int
hlt
fstps
cmp
add
outsb
idivl
notl
pop
gs
sbb
add
add
mov
loopne
or
lahf
add
repz
imul
loope
popf
push
loopne
cltd
add
test
clc
push
jo
lahf
mov
jo
into
xor
scas
call
mov
bound
cmp
and
lock
mov
adc
push
out
loopne
push
jb
cmp
pop
dec
bound
cmp
test
xor
lret
jns
jo
mov
inc
sub
loope
pushf
in
pop
xlat
xor
divb
mov
sbb
xchg
xchg
jle
lock
fistps
cmc
sbb
push
cmpl
fidivrl
aas
pop
sub
mov
shll
hlt
in
xor
aad
jp
jne
or
fs
push
icebp
xor
repnz
sbb
outsl
add
mov
cmp
cmp
in
test
sbb
es
lea
fwait
add
pop
call
loop
mov
push
shrl
mov
sahf
out
add
mov
loope
push
mov
mov
add
enter
aam
sbb
gs
jns
es
into
adc
lods
repnz
imul
ror
xchg
in
ficoml
xchg
testl
mov
dec
push
cmp
scas
sbb
outsb
pop
sar
adcb
ja
lea
add
out
aad
or
aaa
push
jne
and
bound
and
in
mov
jb
pop
push
testl
jne
pop
js
shr
xchg
mov
push
outsl
nop
xchg
mov
cmp
fisubrl
inc
and
out
sub
add
inc
pop
jnp
adc
sub
cmp
cltd
mov
push
jmp
aas
jecxz
sub
mov
loop
mov
int
cmp
hlt
fildll
jle
mov
ss
lret
push
scas
sub
adc
inc
adc
adc
or
insb
test
mov
je
sbb
scas
ret
adc
in
jp
lret
xchg
mov
sub
lods
mov
inc
fstl
pop
mov
push
lock
mov
stos
iret
push
out
dec
cmpsb
outsl
outsl
shll
mov
mov
rclb
xorl
lods
test
outsb
aad
inc
frstor
iret
leave
sti
fisttpll
and
js
rol
iret
xchg
jmp
push
pusha
enter
jmp
sbb
mov
add
rol
je,pn
imul
push
jl
rorw
cmpsl
sahf
call
icebp
xchg
addb
aad
mov
fimull
sub
int3
sub
ss
mov
lods
jge
rcll
xor
test
and
std
mov
cld
ret
inc
not
nop
shr
dec
addr16
and
add
clc
frstor
mov
mov
sbbb
xchg
mov
push
xchg
fldcw
daa
popa
into
xchg
or
mov
add
and
mov
push
cmp
fcompl
push
sbb
sub
mov
bound
pop
sub
into
mov
imul
in
sub
or
xchg
popf
outsl
mov
xchg
adc
out
popf
sti
mov
dec
push
mov
jb
test
ds
add
sub
sti
lods
or
jmp
dec
cmp
add
lods
add
add
call
push
lds
nop
es
mov
fisubrl
sti
jns
push
aaa
adc
sbb
jecxz
and
es
stc
xor
mov
jge
dec
repz
imul
xchg
mov
inc
shrl
fcomp
xlat
mov
xchg
das
xor
dec
jg
shll
mov
lret
mov
mov
je
pop
outsl
cmp
add
push
ja
add
mov
adc
in
xor
pop
nop
push
sbb
call
scas
inc
dec
push
xor
pop
hlt
popf
mov
sti
mov
test
inc
adc
xchg
repz
or
bound
xor
dec
mov
mov
rorb
out
xor
push
adc
pop
sub
jne
xchg
es
dec
jecxz
ljmp
ret
fisttpl
dec
mov
jge
and
ja
sbb
dec
mov
inc
enter
mov
sub
loop
cli
leave
movsl
fucomi
aam
dec
leave
add
add
es
cmp
and
lods
dec
pop
jae
arpl
inc
mov
mov
outsb
inc
add
push
pushl
mov
sub
pushf
test
mov
out
loopne
dec
aas
pusha
loope
sbb
xor
into
sub
jno
movhps
mov
jo
adc
fxch
cs
test
jl
push
ret
jno
pop
pop
lret
cli
daa
mov
xor
imul
inc
adc
dec
sub
dec
inc
flds
jae
adc
loop
aad
outsb
call
add
jmp
sub
inc
leave
jbe
daa
jo
adc
pop
mov
movnti
popf
lods
bound
addr16
cld
pop
lahf
sahf
and
add
enter
lods
and
push
adc
pop
inc
jne
xor
cmpsb
arpl
cmpsl
sbb
sbb
mov
testl
subl
jp
sahf
pusha
aad
ds
rclb
mov
or
cs
mov
push
mov
icebp
pusha
pop
aad
adc
jl
gs
xor
fst
lcall
cs
mov
pop
out
add
dec
sbb
test
loopne
data16
cli
fcom
dec
jle
je
mov
clc
movsl
nop
mov
addr16
sub
rclb
repz
mov
mov
filds
mov
cmpsl
int3
nop
movl
xchg
xchg
mov
adc
rcr
rcll
movsl
sbb
repz
sbb
pop
cmp
pop
lods
fimull
in
pop
fadd
jmp
sub
ja
xor
into
pop
dec
arpl
icebp
cltd
jp
add
aas
lcall
js
inc
pop
sbb
mov
pop
loop
data16
mov
out
movsb
jne
mov
or
leave
stc
xchg
jbe
mov
int
into
nop
sub
inc
sahf
lds
insl
sbb
movsb
xchg
lods
push
sbb
sbb
mov
insb
ss
jmp
shl
xchg
adc
mov
es
xchg
js
cs
xchg
sbb
scas
mov
add
or
xor
loopne
lea
jmp
inc
pop
imul
leave
and
arpl
jb
lcall
andl
lahf
add
inc
data16
push
add
jle
in
push
cld
cs
repnz
add
xor
fistpl
jmp
add
add
pop
jbe
mov
iret
movb
sbb
scas
mov
sti
aaa
and
cmpsb
cli
adc
jle
jge
std
add
sub
xor
sahf
sbb
and
dec
clc
sbb
mov
jge
std
stos
bound
mov
sub
lret
rclb
rclb
in
nop
fimull
repz
and
jle
movntps
ja
lret
inc
sbb
inc
xchg
hlt
mov
push
and
cli
push
push
int3
loope
add
out
cmp
inc
fcompl
cmpl
mov
mov
mov
cli
cmp
enter
push
mov
sub
push
sbbl
mov
adc
pop
insl
push
xchg
js
adc
sbb
inc
mov
push
mov
sahf
cltd
ret
lds
out
sbb
dec
and
and
lret
clc
cmp
cmp
xor
cmc
lret
fnstsw
in
data16
cmp
negl
jge
mov
loopne
push
mov
insb
sub
sbb
shll
ret
aaa
cmp
cwtl
cs
adc
aad
pop
mov
sub
das
shrl
cmp
mov
ja
stos
sbb
addr16
btr
repz
bound
jp
std
dec
fcoms
jo
shll
cltd
pop
cmpsl
xchg
popf
mov
sbbl
add
ds
inc
cmp
mov
jo
loopne
inc
sbb
cmp
jns
sub
cmc
xor
mov
insb
sbb
mov
repz
loop
pop
xor
xchg
mov
popf
ret
lret
mov
loopne
fimull
mov
sbb
sub
adc
enter
loopne
sbb
lret
pop
jbe
lret
cmp
pusha
push
out
pop
out
sub
dec
lahf
int3
add
xor
mov
mov
mov
inc
sbb
pop
test
push
lret
sub
lock
mov
lods
cli
or
push
pop
add
dec
xor
aad
mov
push
dec
inc
cld
loopne
sub
cmc
sub
ds
shlb
stos
inc
ffreep
lret
incb
enter
mov
mov
dec
cmp
lods
xchg
mov
ss
add
push
mov
pop
insl
shrl
shrb
adc
sbb
jne
dec
ds
mov
and
xor
pusha
and
bound
aad
xor
or
sub
sbb
pop
pop
imul
outsl
jbe
mov
mov
mov
and
or
pop
sub
andb
mov
mov
xchg
jg
inc
jp
pop
insl
or
or
mov
inc
inc
push
rcr
fbld
inc
mov
insl
and
push
push
fstps
pop
jo
pusha
sti
push
inc
xor
popf
mov
cs
fs
push
ss
out
test
sahf
in
sub
loope
or
lods
mov
pop
jmp
dec
pop
sbb
pop
mov
nop
lods
xor
xchg
jecxz
cwtl
iret
ljmp
add
xlat
push
js
addr16
jnp
faddl
loop
push
add
add
mov
fmull
add
frstor
je
or
inc
sti
push
add
jo
mov
cmpsl
or
mov
fstpt
lret
in
add
jge
insl
nop
mov
push
insl
lods
dec
inc
daa
push
mov
bound
es
loope
xchg
fmuls
in
cmp
push
loope
mov
mov
mov
aam
lahf
xchg
sarb
or
fwait
jl
push
shrb
jecxz
push
push
push
into
outsl
push
cwtl
mov
aad
rcr
xor
mov
or
cmp
cmp
outsb
mov
jbe
add
or
shrb
decl
out
in
push
mov
sbb
inc
push
pusha
ljmp
jecxz
sub
xchg
lds
outsl
and
mov
addr16
add
aam
js
jno
adc
out
shll
push
xor
mov
pop
add
sub
push
inc
mov
loop
leave
mov
rcrb
cld
inc
sbb
repnz
mov
xchg
hlt
cmp
and
inc
lods
js,pt
cwtl
push
cmpsb
or
ret
addr16
repnz
rcl
sub
lret
push
cmp
jo
xchg
inc
push
add
cs
mov
xchg
into
divl
shld
mov
ret
les
xor
shrb
int
int3
jo
in
pop
or
xchg
arpl
push
inc
aas
pop
cmp
mov
arpl
call
sub
testl
sbb
dec
das
ret
jbe
ret
mov
ficomps
mov
push
cmp
fs
repz
inc
rol
ss
jae
add
xchg
movsb
fwait
mov
xor
scas
fisubrl
lret
das
pushf
and
popa
into
push
aaa
loop
cmp
push
sbb
fisubl
push
xlat
xor
or
dec
jbe
jg
add
push
dec
aad
cs
dec
outsl
inc
add
jl
sbbb
xchg
xchg
dec
in
xchg
pop
add
mov
add
mov
mov
pop
jae
hlt
adc
jl
add
andb
pop
pshufw
push
sbb
push
cmp
cmp
or
mov
movl
push
inc
sub
fstp
sti
or
adc
mov
cmp
jno
mov
cmpsl
pop
jecxz
sub
shl
jae
sbb
pop
push
xor
shlb
adc
mov
xchg
pop
xchg
mov
das
std
sbb
pop
sub
jge
push
and
bound
jns
popa
add
push
mov
jl
cmpsl
xorl
out
fs
je
sub
adc
push
int
and
xchg
cltd
sub
in
cmpsb
in
jae
popf
mov
daa
dec
or
xchg
popf
mov
loop
jb,pt
rclb
mov
sub
and
ss
rorb
int
aas
in
push
test
mov
adc
push
jle
jl
mov
adc
or
mov
push
pushf
dec
fdivs
negb
rol
add
jne
aad
loop
sub
pop
jnp
and
lcall
stc
sbb
mov
jp
sub
sub
lods
mov
xor
mov
jns
cmp
mov
or
jge
dec
enter
xor
and
repz
fcmovnb
pop
sbb
and
stc
inc
insl
add
lods
add
add
jbe
push
jp
mov
xor
add
das
les
sub
inc
mov
sahf
sub
or
icebp
js
and
push
mov
inc
pop
dec
mov
xchg
sub
inc
sub
popf
setae
push
sbb
push
js
icebp
mov
mov
mov
mov
and
outsb
add
pop
sub
leave
ret
xor
rcrb
push
mov
push
mov
insb
inc
sub
or
sub
sbb
sub
imul
int
rcrb
pop
mov
mov
fs
fsubl
push
scas
ja
mov
pop
jmp
pop
sub
mov
mov
mov
jo
xor
in
xchg
fcmove
fldt
cmp
fscale
popa
inc
repnz
xchg
test
inc
mov
inc
test
dec
pop
adc
jl
sub
push
mov
pop
xchg
jle
jo
cmpsl
pop
leave
xchg
and
jg
dec
sbb
cmp
mov
sarl
loop
jnp
ror
mov
lcall
and
mov
xor
push
lods
jbe
lcall
sarl
inc
ret
xchg
movsl
push
shlb
lods
jle
adc
sub
mov
das
aad
das
jle
sbb
lods
sbb
les
jne
insl
mov
xlat
not
fwait
push
jge
pop
ss
sub
dec
ds
mov
dec
subb
pop
popa
or
dec
xchg
enter
mov
add
les
mov
add
adc
lcall
ds
cmpsb
stc
leave
insl
cmc
out
add
and
int3
xchg
aas
inc
cmp
sbb
pop
sub
xchg
lods
jg
rclb
test
pop
sbb
xchg
in
icebp
mov
inc
aas
sbb
aas
addr16
push
xor
sbb
test
inc
fbld
xchg
xchg
dec
cmpb
and
in
mov
fbld
inc
push
inc
pop
xor
leave
dec
push
test
mov
leave
pop
negl
and
xor
adc
mov
fcmove
sub
sti
call
daa
shlb
sbb
xchg
sub
sahf
and
sub
sbb
loopne
push
or
adc
dec
push
push
xchg
cmp
rcl
cmpsb
clc
dec
sbb
ljmp
out
push
and
mov
sub
dec
xor
in
pop
paddd
in
add
jecxz
push
nop
nop
rcrb
sub
jle
xor
xchg
rorl
stos
stos
leave
xchg
mulb
sub
lahf
or
xchg
aad
and
fnstenv
sbb
aas
jae
call
stos
xchg
out
sarl
mov
jae,pn
into
int3
push
mov
inc
leave
mov
dec
dec
jns
cmp
in
pop
xchg
inc
sub
cmp
test
sbb
xchg
xor
jmp
in
arpl
jl
xchg
stos
mov
hlt
ss
pop
repz
scas
sbb
lcall
add
movsb
sub
pop
mov
repnz
insb
not
mov
push
cmp
sub
outsl
inc
aaa
daa
add
mov
cmp
movsb
add
mov
jecxz
daa
push
ret
sub
hlt
adc
int
bnd
cmp
cmp
xchg
imul
add
inc
add
inc
daa
sti
mov
push
adc
add
lods
add
add
stos
xchg
lret
jbe
test
shll
popf
scas
cmp
adc
xorb
push
std
xchg
sbb
dec
je
lahf
test
std
sub
cmpsb
adc
in
std
fs
add
fsubl
out
mov
ja
add
mov
xchg
loopne
adc
pop
inc
pushf
aam
ficomps
xchg
imul
add
xor
xor
popf
int
jmp
adc
push
xchg
lea
cld
fs
nop
in
pushf
bnd
push
ret
sub
and
mov
add
and
push
pop
push
mov
adc
adc
add
cmp
fildl
incb
xor
lcall
and
dec
cmc
stc
repz
fldl
mov
dec
stos
cmp
push
sbb
adc
aaa
lods
dec
sub
ss
push
scas
mov
mov
fcmovnu
mov
cmp
sub
xor
cwtl
push
iret
into
and
sti
test
cmpsb
add
scas
popf
arpl
xchg
mov
fsub
xchg
sti
js
push
add
mov
push
pop
adc
sbb
mov
push
mov
mov
mov
out
call
push
scas
out
aad
push
and
mov
dec
out
icebp
push
and
xlat
addr16
int
mov
sbb
push
or
xlat
jne
test
sbb
xchg
icebp
outsb
in
mov
inc
xchg
outsl
lret
pop
or
in
and
rolb
xchg
dec
sbb
add
lea
xor
sbb
mov
mov
sub
addl
push
mov
dec
mov
bound
add
dec
xor
pop
xor
aaa
sbbb
je
push
cld
test
adc
fisttpl
or
icebp
cli
jnp
jbe
es
adc
jp
inc
in
and
or
mov
pop
mov
jg
jl
ljmpw
inc
mov
test
sarl
pop
dec
sbb
test
cli
mov
cmp
sub
shlb
cli
inc
add
mov
mov
and
push
es
lcall
pop
sarb
leave
fwait
and
in
jb
mov
out
cmc
aas
orb
sbb
les
sub
cmp
dec
int
cltd
addr16
scas
sub
jns
cmpsb
xor
adc
loope
pop
ja
das
sub
or
jo
clc
lods
fstpl
jb
mov
dec
and
mov
into
push
cmpsl
xlat
enter
in
or
pop
jecxz
and
xchg
pop
icebp
xchg
leave
std
pushf
push
mov
sbb
ja
imull
jl
pushf
inc
xchg
clc
ret
outsl
not
cmp
fisttps
sarb
lock
imul
mov
xchg
sub
enter
inc
in
out
push
pop
xchg
add
xchg
sbb
inc
and
push
cmp
push
mov
cmc
pop
fs
dec
icebp
pop
mov
add
bnd
in
sysexit
adc
adc
sti
stos
repnz
sub
stc
clc
movsl
adc
stos
sbb
adc
xor
ret
mov
fmull
and
or
outsl
jl
test
mov
push
cmc
lahf
pop
insb
sub
mov
sahf
push
pop
inc
dec
and
and
pop
nop
push
add
add
mov
aas
sysexit
pop
push
pop
cmpsb
mov
add
xor
pop
mov
mov
xchg
addr16
adc
into
xor
outsl
cmpb
or
sub
sahf
ss
add
cld
mov
mov
das
aaa
inc
mov
je
movd
fs
in
ljmp
dec
les
test
out
jge
jg
mov
bound
and
orb
pop
adc
cmpsl
xor
in
xor
stos
imul
xchg
mov
movsb
xor
inc
das
inc
xor
inc
inc
in
insl
add
inc
into
or
xor
adc
cmp
mov
shll
push
jne
in
loop
test
jnp
popf
sub
mov
mov
jne
push
sub
jbe
xor
adc
push
jmp
inc
xchg
jle
sbb
pop
pop
in
pop
mov
xchg
mov
sbb
stos
cwtl
fwait
jecxz
insl
xor
jne,pt
mov
and
lahf
lods
fsubr
cmp
loop
shrl
mov
out
xchg
fistl
repnz
mov
mov
push
adc
aam
mov
ljmp
pop
sbb
jl
mov
pop
xor
call
jns
dec
push
mov
aam
shll
nop
enter
test
sbb
fwait
jmp
mov
out
add
movsb
sbbl
into
xor
add
out
clc
xor
fcompl
enter
sub
lods
lds
jmp
imul
mov
xor
shrl
lret
push
cmpsl
mov
sub
movsl
jnp
cmp
rcrl
mov
jge
sbb
xchg
int
inc
jp
mov
test
cmpsb
js
add
sub
add
push
cld
mov
push
sti
leave
adc
loopne
xchg
inc
mov
sbb
cltd
jne
seto
dec
add
jae
rorb
push
dec
mov
and
push
fcmovbe
into
in
lds
xchg
sub
sti
flds
mov
outsl
mov
push
jno
fs
push
push
add
sub
insb
cmp
inc
sti
dec
rcrl
loop
lahf
mov
dec
insl
in
stos
call
lret
and
aaa
xchg
inc
pop
ror
orl
cmp
xchg
jne
and
in
mov
or
sti
mov
aam
setle
mov
push
cmpsl
sub
xchg
imul
pop
cs
dec
jnp
sbb
mov
and
loop
test
or
sbb
dec
inc
and
sub
xor
jnp
sub
sub
push
in
sbb
jl
sbbl
mov
pushf
add
inc
ret
push
lret
pop
jl
ljmp
xacquire
test
int
xor
fiadds
or
dec
jge
imulb
add
xor
aam
and
cli
fadds
xchg
jne
int3
stos
test
das
mov
mov
cmp
sub
mov
push
cmc
and
lret
scas
std
mov
pop
and
mov
test
sub
popf
xchg
sahf
mov
es
sahf
xor
stos
test
xor
gs
and
mov
push
loop,pn
repnz
add
add
repz
push
cmp
std
fisubrs
mov
lods
add
add
add
dec
jge
jno
gs
mov
mov
xsave
lret
mov
xor
fsts
popa
popf
mov
push
scas
or
rcll
and
fwait
mov
pop
mov
cld
test
jp
xchg
pop
mov
pop
hlt
jno
bound
lods
mov
mov
sbb
mov
daa
fstps
pop
int
pop
inc
into
mov
inc
jae
pop
mov
jg
sarb
fs
push
js
out
dec
test
cmpsl
mov
iret
aam
int
lahf
mov
mov
pop
les
bnd
int3
mov
std
xor
lret
xchg
test
fwait
iret
jne
xor
mov
xchg
xchg
stos
sarl
sbb
add
faddp
xchg
sahf
cltd
push
or
inc
jecxz
add
cmp
in
test
lods
cmp
mov
lcall
lret
jae
pusha
xchg
loope
loopne
pop
aam
mov
xchg
stos
cmp
sbb
ret
push
xor
inc
mov
mov
and
ss
ret
push
rcll
lock
orb
mov
pop
mov
sbb
mov
insl
mov
inc
jno
xor
loop
notl
testb
mov
adc
or
mov
loop
cmp
xchg
mov
and
imul
in
bound
adcl
xchg
jne
mov
sub
add
add
sbb
sub
sarl
shlb
imul
andl
and
std
negb
push
test
jp
fcomp
fcmovb
xor
mov
mov
outsl
adc
xchg
pop
add
movsl
jbe
sbb
mov
pop
addr16
mov
mov
lret
out
mov
jle
push
ficoms
lcall
push
inc
xchg
pop
mov
fimuls
inc
xchg
jge
sub
rcl
js
ss
pop
push
mov
jnp
pushf
popf
mov
cmc
mov
in
gs
repz
popa
pop
loopne
je
notl
lods
les
jle
pop
mov
push
jl
jmp
adc
nop
adc
mov
popa
inc
push
sbb
addb
pusha
dec
movsb
dec
shlb
pop
mov
mov
jns
mov
mov
shl
pusha
das
pop
lock
cs
cmp
xchg
sahf
dec
jle
cmp
push
pop
daa
stc
xor
cmpsb
outsb
lret
test
mov
jnp
test
xchg
cmp
lret
nop
scas
push
das
call
mov
jae
pop
and
out
ficomps
add
or
or
cmc
pop
and
pop
getsec
sahf
fisttpl
sub
dec
clc
jns
pop
inc
xchg
inc
pop
sbb
xchg
xchg
jo
scas
fmuls
out
mov
or
test
xor
push
fs
fxch
test
aaa
test
inc
dec
inc
sbb
jle
inc
sahf
les
push
test
fs
pop
idivb
test
mov
or
add
jg
cs
jmp
test
popf
dec
add
sbb
add
add
xchg
lcall
fs
jnp
add
xor
insb
mov
mov
mov
sbb
icebp
push
cltd
pop
adc
mov
and
mov
jo
les
xchg
std
shlb
sbb
lods
adc
or
pop
jb
or
adc
xor
xor
rcll
test
mov
lods
cmc
cli
cwtl
cmp
popf
and
and
test
sbb
xor
jo
pop
add
push
es
out
jno
cwtl
jnp
push
cmpsb
pop
lock
aaa
pusha
pop
scas
inc
fcmovne
setae
inc
nop
xor
dec
mov
hlt
outsb
mov
cmp
lods
adc
xchg
loope
cmp
sahf
mov
insl
fnsave
jae
xor
pop
inc
and
enter
mov
addr16
jecxz
addr16
syscall
into
push
mov
cmpb
rcrb
jmp
scas
sub
mov
xchg
sarb
mov
addr16
push
movsb
lds
xchg
fildll
lret
int
inc
xor
fstpl
lock
xor
mull
movsb
dec
sub
stos
or
ucomiss
xor
pop
out
fimull
clc
mov
test
cs
xor
js
jge
cs
add
mov
movsl
jg
push
out
mov
int3
outsl
in
repnz
jbe
and
rcrl
adcb
mov
ret
adc
jbe
mov
inc
out
push
cli
out
sti
pusha
scas
xor
stc
pmaxsw
mov
icebp
cmp
push
test
pop
and
jge
or
add
pusha
lds
xchg
ds
outsb
xchg
cmp
test
sti
mov
mov
cmp
adc
jecxz
fdivs
mov
insl
mov
or
mov
out
frstpm(287
jecxz
cld
xchg
adc
lea
pop
inc
clc
pushf
jmp
add
jmp
insb
adc
or
dec
adc
pusha
push
push
pop
out
dec
shrb
mov
push
adc
sbb
or
pop
into
jg
xor
stos
mov
pop
movsl
ljmp
outsl
out
and
inc
adc
xchg
push
jae
or
repz
or
insb
push
roll
je
gs
mov
mov
aas
test
cwtl
mov
cs
adc
jecxz
xor
repnz
pop
mov
mov
aad
mov
push
insl
and
mov
shrl
lods
in
pop
jbe
xchg
rolb
fisubl
mov
add
mov
sbb
out
je
push
adc
xchg
lock
add
sub
sub
daa
dec
inc
inc
out
iret
fidivl
xor
aas
mov
mov
sbb
mov
cld
cmp
rcrl
and
or
dec
push
pop
ds
xchg
or
lret
mov
cwtl
adc
fistpl
xlat
pop
mov
stos
in
test
pop
fists
sub
aas
xlat
xchg
jge
loopne
jl
xchg
insb
shll
xor
test
push
adc
or
int
dec
mov
clc
push
aaa
insb
rolb
xor
adc
add
je
pop
mov
jl
nop
fistps
and
es
sti
rolb
and
ret
test
jbe
jns
outsl
add
add
call
jmp
and
addr16
mov
add
stos
cmc
adc
mov
xor
push
cmp
scas
std
mov
mov
lods
loopne
mov
call
and
adc
jp
jecxz
addb
add
lods
lahf
push
sub
es
mov
ret
shr
add
jbe
adc
lods
movsl
in
insb
dec
inc
cmpsb
test
inc
outsb
and
iret
mov
pop
arpl
sub
and
cmpb
ljmp
call
cwtl
insb
inc
mov
hlt
cli
jmp
lahf
out
mov
sub
fldenv
pop
push
stos
ds
test
xacquire
jp
pop
xchg
ljmp
xchg
loop
xchg
std
sbb
movsl
lret
sub
cltd
push
stos
bound
les
sbb
int3
popa
int3
push
mov
push
ja
dec
and
adc
and
push
push
push
in
mov
lds
sub
jne
pop
push
movsl
xchg
test
out
fistl
sub
sub
ljmp
mov
enter
xchg
test
movsb
push
xor
xchg
mov
imul
out
inc
add
and
js
adc
push
and
or
inc
bound
sub
inc
adc
sbb
dec
out
hlt
movsl
adc
sahf
arpl
cli
mov
mov
pop
pop
lahf
xchg
lcall
loop
fdivrs
xlat
int3
cmp
adc
mov
jg
pop
mov
pop
les
cmp
fsubl
dec
xchg
mov
dec
xor
stc
pop
and
ja
ret
in
sbb
hlt
cmp
rorl
jmp
mov
jecxz
mov
sub
add
insb
mov
repnz
clc
mov
sbb
mov
in
fstps
dec
push
add
push
cmpsb
jne
sbbb
clc
aaa
in
mov
push
les
mov
and
sbbb
add
cwtl
push
or
clc
adc
inc
fldln2
xchg
aas
and
push
sbb
sub
inc
xor
int
mov
pushl
icebp
jge
inc
fiadds
push
aaa
jecxz
mov
out
pushf
or
fiaddl
seto
mov
fsubrl
out
mov
sub
adc
lods
xchg
into
cmp
xor
add
pop
out
lds
shr
sbb
pop
inc
idivb
in
adc
jmp
and
test
jae
xchg
out
int
inc
pusha
jo
mov
imul
inc
xor
scas
shl
faddl
xchg
and
ds
dec
cmc
sbbl
ret
xlat
mov
fdivr
fsub
aas
mov
add
ds
test
jbe
push
int3
xchg
pop
loope
enter
add
sbb
orl
adc
jp
outsb
das
xchg
lods
mov
mov
ds
aad
movsb
ret
push
adc
xchg
test
rsqrtps
xchg
cmc
sti
mov
xchg
mov
cmpsl
lods
bound
daa
add
sbb
in
push
pop
mov
adc
xchg
add
ret
cltd
push
jl
cmc
mov
sbb
int3
xchg
push
dec
insb
push
das
inc
fmull
add
sub
dec
mov
or
jmp
out
add
dec
test
in
std
pop
rcrb
addl
lods
add
add
outsb
cld
ljmp
and
jne
aaa
jle
push
mov
jmp
inc
sti
push
shl
dec
rcrl
fistpl
sub
sbb
cmp
add
pop
lret
out
push
leave
out
push
leave
cltd
jg
imul
ret
push
les
test
sbb
and
jmp
xchg
pop
popa
xchg
inc
orb
pop
mov
pop
sbb
jae
push
out
sub
push
adc
inc
out
mov
bnd
xor
add
je
mov
adc
pcmpeqd
mov
mov
call
stos
cmp
xchg
mov
out
cmp
jp
push
jl
lea
adc
jo
fdivrs
repnz
pop
popa
and
repz
rcll
aaa
mov
sub
jno
pop
or
sub
mov
add
cmp
lret
push
pop
sub
fs
pop
out
or
clc
push
jns
loop
xchg
xor
or
cwtl
loop
cwtl
ljmp
jle
push
sti
cmp
sbb
adc
in
mov
and
adc
movsl
or
out
jge
jecxz
nop
cwtl
jp
aad
and
adc
jmp
and
sbb
rorl
bnd
pop
mov
xor
push
cs
inc
into
rorb
repnz
inc
push
pop
into
jbe
xor
pop
jge
or
dec
test
sbb
cmc
xchg
sub
mov
cs
dec
inc
pop
pop
gs
mov
inc
mov
rclb
mov
out
out
rclb
jnp
push
xchg
ljmp
sti
jbe
and
mov
mov
decb
lods
xlat
ret
push
cmp
add
scas
adc
popa
rcl
test
or
cmp
loope
out
lds
mov
mov
or
add
push
popa
aas
inc
ja
out
shll
inc
std
insl
pusha
sbbb
test
cwtl
cs
xorl
add
idivb
mov
jge
mov
push
or
push
adc
pushf
int3
mov
test
or
push
scas
mov
ss
mov
iret
stos
out
mov
pop
xor
loope
jg
or
or
cmpsb
or
jl
call
sub
incb
or
sbb
adc
add
and
mov
add
addl
mov
outsl
push
cmpsl
jmp
cmp
mov
lods
push
je
dec
xchg
adc
in
adc
jge
xor
inc
call
adc
loop
jae
mov
jmp
pop
mov
push
xchg
push
pop
aaa
aas
loop
xor
cli
or
aad
out
loope
dec
sub
mov
and
clc
and
mov
dec
cmp
pop
add
push
ja
and
and
in
test
addr16
cld
outsb
adc
mov
int
mov
mov
sti
xchg
push
shr
sub
sub
movsb
cmp
movsb
jecxz
stos
aaa
mov
pop
imul
cmp
xor
cmp
aam
fsubrl
ss
add
lea
outsb
inc
leave
bound
test
dec
mov
jp
jo
add
add
es
cmpsb
mov
and
xchg
add
lahf
scas
loop
push
add
fists
mov
mov
xchg
popa
push
call
fisttps
push
mov
jno
mov
aaa
lret
std
adc
out
fbld
cld
adc
in
fsin
ss
and
pop
add
out
jns
mov
sbb
into
push
out
in
fdivrs
sbb
or
adc
daa
cli
ss
js
inc
jbe,pt
movsl
fwait
outsl
daa
cld
push
push
lcall
mov
imul
imul
jg
outsb
pop
cmp
iret
inc
es
pop
adc
xor
fiaddl
inc
dec
pop
fidivrl
rolb
jo
or
jp
rcrl
js,pt
popf
push
lods
sbb
jo
daa
les
jb
sub
inc
popa
ljmp
test
inc
push
movsl
icebp
daa
mov
add
pop
cs
pop
repz
clc
adc
xlat
fdivl
lret
mov
leave
dec
dec
pop
movsb
fistps
or
test
sbb
fimull
sbb
xchg
insl
push
inc
pushf
dec
lods
arpl
out
shrb
test
inc
xor
cwtl
xor
adc
addr16
in
call
jne
xor
xchg
das
out
loopne
dec
aad
mov
xor
fwait
mov
mov
mov
or
push
sub
insl
insl
pop
clc
xchg
xor
xchg
sub
mov
push
add
adc
sub
xor
jno
out
aas
cmp
sub
pop
inc
xor
inc
pusha
stc
aaa
loopne
mov
in
add
sub
cmp
std
mov
fldcw
das
push
aas
cmp
lret
in
jmp
xor
insb
enter
lea
sub
cmp
inc
push
loopne
fisttpll
and
push
or
pop
mov
xchg
and
cmp
jo
mov
add
repnz
cmp
out
sbb
les
pop
pusha
enter
mov
hlt
sbb
les
orb
sub
lods
and
jecxz
gs
dec
push
aas
icebp
jae
jmp
jne
xchg
push
push
in
xorb
inc
adc
pop
lcall
xchg
xor
mov
add
pop
sub
shlb
sub
loope
sub
test
arpl
pop
in
imul
call
rorb
pop
sbb
std
scas
cld
cli
and
mov
jnp
in
stc
xchg
jg
pusha
push
imul
cld
jne
cwtl
int3
mov
xchg
mov
popf
push
jmp
dec
pop
adc
jmp
enter
xor
add
dec
xchg
arpl
cli
mov
push
dec
inc
and
icebp
or
push
rcrl
pop
inc
inc
popl
dec
stos
pop
aam
lds
fs
enter
push
and
clc
xor
mov
scas
je
in
iret
out
or
out
xchg
inc
mov
pushf
cwtl
mov
push
sub
xchg
repz
dec
mov
dec
in
inc
pop
imul
ret
mov
push
cltd
mov
mov
in
mov
sbb
and
lds
sbb
mov
ret
mov
add
add
add
add
fdivrs
out
jbe
outsl
cmp
in
add
stos
mov
add
out
xor
repnz
sbb
add
dec
push
add
aas
lcall
bnd
jge
dec
xor
jcxz
jmp
or
clc
ja
mov
adcl
jle
jl
xlat
mov
repz
leave
sbb
cmp
pop
dec
pop
sbb
xchg
out
adc
stos
jb
clc
les
icebp
cmpsl
pop
repnz
mov
mov
jne
inc
jae
cli
fidivrl
bound
les
sub
ds
loope
stc
lcall
sbb
mov
es
loope
pushf
xchg
ret
cmp
mov
push
loop
jecxz
fiaddl
mov
lods
sub
loop
mov
pop
inc
dec
mov
mov
jb
jle
js
xor
or
hlt
jno
mov
xchg
fmull
jmp
xor
jg
lcall
lret
push
xlat
add
and
or
xchg
jmp
movsl
jns
stos
in
dec
cmp
lahf
pusha
cmp
popf
shrl
push
mov
mov
shll
mov
mov
and
in
rorl
mov
aaa
push
push
inc
rorb
decl
jl
mov
fidivs
leave
fists
stos
mov
loope
push
jne
adc
leave
xchg
test
ret
mov
out
push
cmp
rorb
sub
movsb
add
mov
mov
jnp
cld
icebp
push
iret
gs
sub
lds
test
inc
cmp
adc
inc
fisubs
mov
push
test
mov
push
mov
sub
push
pushf
xchg
mov
mov
xchg
dec
in
ret
mov
mov
pop
int3
ffree
mov
cli
test
add
repz
mov
xchg
pop
mov
jae
or
inc
push
mov
xor
frstpm(287
and
jns
dec
jo
cmp
jg
xchg
outsl
adc
mov
outsb
sub
mov
loope
rorb
xchg
cld
pop
sarl
lret
out
xor
push
lahf
add
fstpl
fsubrl
imulb
sub
push
sub
sbb
or
or
popf
jne
fs
inc
in
mov
sti
dec
xchg
sub
outsb
shll
mov
and
jecxz
scas
sbbl
clc
aas
push
cld
pop
dec
sbb
pop
pusha
jo
or
outsl
push
js
rcll
enter
xor
sub
sbb
push
push
push
cmc
xlat
enter
pop
mov
cmp
cmp
out
and
xor
inc
repnz
pushf
fadd
js
dec
pop
push
loope
jl
jae
sub
jl
or
aad
push
mov
ret
pop
aam
aad
outsl
fimuls
in
xlat
push
shlb
push
mov
fincstp
mov
pop
push
push
jno
push
mov
cmp
dec
into
scas
std
push
lret
ds
in
add
stc
rcl
jmp
push
orb
loopne
pop
push
fs
adc
cmpsl
stc
push
push
movsl
cs
and
ja
pop
mov
popa
jns
jno
or
and
cmp
pop
pop
ret
push
jbe
test
je
cld
or
and
in
es
add
adc
sbbb
arpl
aad
gs
xchg
jns
subl
add
add
fimuls
daa
xchg
jp
dec
pop
mov
add
gs
jnp
popf
mov
add
mov
xchg
or
push
jb
cli
cmp
mov
das
out
push
aad
inc
rcrl
inc
xor
pusha
dec
sbb
pop
aaa
mov
add
cmp
andb
lock
inc
push
push
insl
lock
ret
dec
xor
imul
mov
and
mov
test
repnz
sub
xchg
sahf
ud2
ljmp
nop
je
fidivrs
loop
or
mov
inc
mov
les
inc
aaa
dec
scas
arpl
leave
notb
test
add
xchg
call
and
mov
fiadds
and
and
dec
adc
fimuls
imul
pop
xchg
cwtl
imul
data16
inc
jl
dec
sbb
jo
adc
movsl
outsl
int3
inc
jmp
movsl
dec
adc
sbb
dec
lahf
xchg
jo
pop
pop
movsl
xchg
lods
adc
pop
push
mov
lret
push
jae
fsubl
fisttpll
repz
xchg
outsb
push
or
imul
pop
jnp
pop
das
inc
mov
adc
mov
xchg
cmp
sti
lcall
shrl
hlt
push
mov
insb
mov
jl
rorb
mov
cmp
pusha
cmpsb
cmpsb
cmpsl
mov
lock
lcall
cwtl
xchg
inc
adc
and
mov
enter
cltd
pop
jp
jne
adc
jmp
ljmp
add
movsb
loopne
mov
aam
loopne
test
xlat
dec
push
jp
mov
jmp
mov
sbb
ret
jg
shrl
imul
nop
gs
scas
sbb
stc
xchg
xchg
call
cmpsb
dec
mov
mov
xor
inc
fistps
jmp
pusha
das
push
pushf
fs
dec
lock
cli
mov
mov
lds
jnp
jno
not
sbb
lcall
ja
movsl
lret
mov
inc
lea
or
ret
fisubl
movsl
mov
push
ljmp
in
mov
push
mov
pop
addr16
cmpsl
fnstenv
outsl
adc
rcll
push
dec
or
xlat
subps
arpl
jnp
sbb
jne
fldl
sarl
out
jb
mov
ficomps
lcall
jne
push
gs
jb
out
scas
and
and
inc
fnstsw
sbb
cmp
test
roll
imull
js
pop
xchg
pop
mov
xchg
adc
push
clc
arpl
mov
inc
dec
call
dec
icebp
xchg
pop
bound
fs
pop
ja
jo
loop
mov
repz
jecxz
jne
je
mov
fstpl
add
cmp
inc
dec
repz
data16
adc
cmp
pop
cmp
jmp
adc
lret
mov
js
test
add
sahf
jl
shr
add
add
xchg
xchg
stc
movsb
xchg
add
mov
sbbl
insl
lods
call
inc
lret
dec
pop
pop
pop
adcl
aad
lcall
cld
stos
out
cmpsb
xor
and
fiaddl
js
fists
enter
jmp
insl
push
cmp
enter
pop
lea
pusha
or
inc
pop
mov
add
add
inc
dec
mov
popa
dec
push
sbb
xchg
add
lods
add
add
jno
adc
inc
inc
xchg
insl
push
mov
dec
out
imul
sbb
aam
movsb
data16
pusha
and
jg
shl
dec
ret
rorl
pop
jmp
hlt
mov
adc
mov
int
fildl
adc
ffreep
mov
sti
mov
sub
loope
xchg
inc
pop
push
or
popa
mov
aas
lret
push
inc
or
clc
cltd
and
ds
fucomp
and
cmp
and
pop
pop
inc
es
or
enter
xor
aas
test
mov
pusha
mov
push
data16
lret
ja
testl
cmp
lret
nop
in
out
cwtl
push
jne
leave
in
add
or
lret
lock
pop
cmp
fistps
pop
test
mov
push
adc
add
pop
inc
mov
test
xor
push
test
arpl
mov
adc
punpckldq
xor
jle
dec
jns
inc
mov
or
xor
in
ja
pop
loop
push
mull
fsubrl
mov
fcomps
movsb
xchg
or
outsl
jns
out
fstpl
hlt
addl
xlat
and
test
inc
leave
cmpsl
test
jmp
and
and
ret
sahf
sbb
push
mov
xor
and
ret
inc
push
jne
mov
and
inc
sbb
ds
testb
mov
or
inc
aam
xchg
ja
mov
mov
push
in
push
call
dec
adc
mov
aam
or
test
test
cmp
inc
and
or
and
push
lods
mov
cmp
ror
rcrb
push
ret
push
cmc
and
dec
addr16
aas
popa
shrl
mov
mov
sbb
xchg
adc
dec
inc
dec
pop
repnz
fimuls
mov
aaa
add
push
movsb
adc
cwtl
xchg
sub
pop
mov
mov
xchg
push
jp
push
and
lret
xchg
sbb
pop
mov
testl
mov
repnz
icebp
aad
aaa
scas
in
pop
dec
cmp
push
sti
mov
jge
add
sub
add
mov
xor
push
insb
test
fwait
les
pop
jle
inc
push
lds
rorl
pop
ret
divl
shll
pop
or
cmp
test
mov
psubb
cmpsb
adc
inc
mov
push
push
cli
fisubrl
jp
xchg
mov
addr16
ja
clc
out
addr16
jle
sbb
jnp
mov
cmpsb
shl
xchg
bound
or
push
ss
cmp
cmp
shll
add
sbb
xor
jmp
dec
push
sbb
and
adcb
cmpsb
mov
fstpl
xchg
sub
out
push
insb
lret
not
repz
out
out
lock
cmp
mov
shlb
ss
add
pop
out
xor
inc
inc
imul
push
push
mov
sub
adc
cmp
in
mov
mov
loope
mov
ds
xor
mov
out
add
add
xlat
and
aaa
std
out
and
cmp
add
lods
add
add
adc
cld
inc
sub
xor
into
dec
jp
fadds
push
das
push
xor
arpl
sub
decl
xor
jbe
jae
je
jg
push
adc
inc
xchg
mov
loope
push
imul
sbb
xchg
pop
icebp
repz
gs
adc
adc
shrl
pop
fidivrs
xor
fldcw
push
cwtl
enter
int
xchg
call
pop
nop
jmp
pop
movsb
cmpsl
aam
ffreep
xchg
addr16
mov
push
test
dec
inc
xchg
push
gs
vsqrtps
sub
sbb
out
mov
repz
push
and
pop
gs
xor
rcrl
pop
push
jb
imul
xchg
add
mov
je
rcrb
push
aas
fs
push
in
mov
xchg
pop
jmp
mov
test
aas
das
xorb
sbb
cmp
addb
inc
mov
and
cwtl
rolb
mov
pop
test
aaa
js
cmpsl
jmp
sub
xchg
or
or
int3
jle
cmpsl
and
bswap
lahf
push
loopne
int
fucom
and
mov
cmp
push
ficompl
mov
lret
jmp
fscale
push
inc
rcrb
mov
xchg
aam
dec
add
outsb
stc
loope
rorb
fs
mov
sarl
xrelease
out
aam
mov
mov
jae
xchg
adc
inc
ret
mov
jno
pop
xor
add
out
cmc
jmp
insl
push
out
pop
aad
xor
push
icebp
sbb
fucompp
arpl
inc
mov
jmp
pop
add
inc
inc
mov
xchg
mov
xor
or
out
fistps
ficoml
fcom
or
pushf
outsb
das
push
sahf
dec
arpl
xchg
pop
repz
bound
push
mov
jecxz
sub
insb
fstpt
xchg
aaa
pop
cmp
xor
cld
das
mov
shlb
add
inc
jo
xchg
lea
arpl
mov
mov
rorl
and
and
mov
test
ja
xor
loopne
jnp
push
arpl
rdmsr
aaa
mov
aam
mov
addr16
imul
mov
and
movsl
jmp
xchg
ds
int
adc
bound
jp
xor
adc
xchg
movsb
or
fs
jae
sub
jns
xor
insl
test
push
pusha
rcl
jecxz
jae
clc
jns
imul
and
or
jle
adcl
mov
cmpsl
push
cmp
in
stos
mov
test
lahf
stos
mov
test
mov
pop
or
mov
shlb
mov
test
mov
xchg
lcall
cld
gs
pop
push
or
sbb
dec
sbb
jns
icebp
lds
idivb
mov
push
lds
jg
sbb
outsl
loopne
std
mov
dec
mov
data16
aam
xchg
mov
int
cmpsl
jno
push
es
add
add
nop
int3
popf
fistps
lea
jmp
cmp
add
lods
add
add
sbbb
gs
stos
shll
arpl
cltd
xchg
dec
dec
xlat
inc
xchg
or
cmpl
test
call
cmpsl
lret
inc
push
lcall
js
dec
inc
cwtl
mov
adc
xor
pop
pop
orb
adc
dec
or
add
lret
mov
addps
loop
sub
cmp
sub
sub
bound
or
mov
rcrl
les
dec
sbb
test
add
addr16
push
push
ss
fwait
pop
ret
out
in
mov
aad
cli
mov
inc
and
add
and
test
add
in
adc
push
dec
hlt
jnp
shll
loopne
cmc
and
add
sub
repz
pop
or
ja
outsb
arpl
out
sbb
hlt
mov
test
ja
aad
in
dec
pop
push
sarl
push
xchg
test
xchg
or
clc
in
out
imul
jle
sahf
xlat
cmp
pop
das
adc
test
out
jb
dec
adc
adc
mov
sti
inc
mov
in
pop
cltd
inc
div
pop
mov
nop
dec
adc
cmc
inc
scas
jae
and
incb
mov
pop
xchg
xchg
in
push
jle
mov
dec
lods
fstps
mov
insl
pop
or
mov
xchg
adc
mov
xchg
add
inc
das
popa
es
mov
ja
push
mov
jbe
das
jne
insl
inc
mov
arpl
mov
in
nop
push
mov
jg
pop
nop
sub
popa
lds
lods
adc
adc
mov
ret
test
call
js
mov
sub
add
and
rsqrtps
push
rcll
dec
mov
mov
mov
inc
imul
sub
sbbb
test
jp
stc
ret
stos
insb
adc
mov
add
mov
arpl
lret
pop
or
inc
in
int
jp
xchg
push
mov
and
out
les
cmp
push
adc
call
jle
mov
pop
adc
mov
add
fs
insb
or
mov
inc
stc
adc
xchg
pop
cld
add
rol
stos
das
dec
pop
xchg
adc
pushf
daa
mov
test
lcall
mov
sbb
xchg
and
pop
fxch
add
jmp
loope
addl
push
rcr
cmp
cmp
stc
ret
fldt
cmp
add
and
xor
or
and
outsb
inc
jge
xor
add
lahf
jns
adc
outsl
es
sub
out
or
jmp
stos
push
sbb
pop
mov
xor
rcrb
mov
inc
mov
shll
sub
insl
jb
rcll
pop
mov
mov
in
mov
div
test
xchg
push
aam
imulb
test
xor
iret
adc
ds
dec
xchg
inc
dec
in
cmp
inc
insl
pop
out
iret
dec
fwait
pop
cwtl
out
rol
xlat
sub
xor
lret
pusha
xchg
aaa
icebp
jne
mov
lods
mov
movsl
push
or
nop
fwait
mov
addr16
pop
stos
xchg
add
data16
mov
pop
mov
hlt
repz
add
lods
add
add
rcrb
sbb
add
pop
pushf
enter
cmpsb
sbb
subb
out
mov
lret
push
es
mov
dec
decl
jge
or
xchg
push
ds
push
aas
test
and
sub
daa
sbb
mov
mov
lahf
mov
pop
inc
inc
cwtl
jge
popf
addl
xchg
rcrb
insb
cmpsl
rorl
add
adc
outsb
jle
pop
pop
out
dec
jbe
jne
or
push
jns
or
inc
jle
js
inc
mov
addb
or
test
outsb
and
loope
dec
push
mov
stos
sub
leave
std
shll
sbb
daa
aas
add
idiv
add
insl
aad
mov
jns
lock
pop
out
nop
and
insl
pop
add
inc
dec
scas
mov
out
push
cmp
push
shll
mov
test
lods
fcmovnbe
push
and
aaa
push
loopne
roll
outsl
mov
dec
das
xchg
imul
aaa
ret
sbb
add
jge
xchg
xchg
sbb
push
fcmovu
loop
push
imul
pop
fcomi
jl
movsl
jl
xchg
loop
ljmp
loopne
sbb
jmp
pop
in
or
xchg
iret
mov
cwtl
movsb
ret
in
push
daa
adc
mov
adc
cltd
std
push
inc
jae
fstl
lea
push
leave
rorb
inc
or
push
clc
out
xchg
mov
xchg
push
int
pop
dec
sbb
jg
inc
xor
cmp
mov
pop
adc
mov
int3
mov
jmp
lds
pusha
mov
xor
inc
push
out
jmp
push
out
add
sbb
adc
xor
inc
xchg
xor
mov
xchg
add
jl
push
xlat
jmp
cs
inc
rcrb
in
push
lea
test
push
cmc
jno
xlat
push
ljmp
fcoml
push
mov
loopne
and
inc
xchg
inc
stc
or
sub
adc
pop
dec
out
dec
cld
jns
cmpsl
xchg
cmp
push
mov
xchg
addr16
adc
inc
inc
mov
xchg
aaa
insl
push
gs
lcall
pushf
add
scas
gs
int
psrad
cs
enter
inc
mov
lret
mov
mov
cmp
inc
pushf
push
movsb
xor
js
or
pop
mov
mov
shlb
fnsave
test
shlb
jle
or
adcl
cltd
push
push
lds
std
adc
mov
cltd
loope
cmp
int3
test
imul
cmc
lock
movsl
jecxz
sbb
xor
mov
rcl
or
xchg
enter
sti
shr
pop
pop
jmp
orb
sub
cmp
inc
out
jbe
jnp
xchg
sbb
jae
xchg
addb
dec
ret
ja
in
inc
sbb
dec
sarb
test
mov
pop
xchg
cld
or
jg
in
leave
xlat
xor
jns
inc
test
lahf
add
adc
jp
xorl
std
das
add
fldcw
rcl
int3
mov
mov
cmpsl
inc
mov
test
lcall
jg
int3
loopne
pop
mov
insb
xor
shlb
add
add
int3
inc
fdivrp
out
ja
or
pop
in
cmp
mov
mov
add
arpl
lods
dec
aam
jb
sbbb
icebp
faddl
or
mov
pop
lods
cli
mov
out
push
or
out
mov
icebp
inc
jg
dec
push
adc
into
nop
push
add
add
push
bound
gs
pusha
or
lret
inc
aam
push
mov
repz
shr
mov
jo
out
sub
das
fwait
xchg
cltd
xchg
movsb
push
push
jmp
lea
movsl
shl
xchg
push
mov
sbb
fwait
lds
imul
fwait
enter
cmp
lret
jo
adc
fistpll
cmp
cmp
fisttps
lods
inc
jns
sbb
lcall
xorb
test
mov
cmp
nop
outsb
pop
fnstenv
dec
mov
and
jmp
dec
negl
ret
insb
adc
push
lock
pop
mov
andl
cs
mov
jmp
mov
fistpl
repz
add
daa
sbb
fcoms
xchg
xor
fildll
dec
outsb
lret
fsts
adc
in
lcall
sbb
sub
adc
adc
pop
imul
jne
add
or
adc
pushf
movl
xor
xchg
push
jmp
fcmovb
mov
pushf
insb
ss
push
or
mov
inc
add
pop
out
sub
add
fs
mov
inc
bound
mov
int
rorb
in
add
and
mov
in
bts
dec
into
cmp
pop
fidivrs
mov
xchg
pop
mov
andb
mov
push
out
jmp
push
xchg
cmp
fisttpll
mov
xchg
xor
xchg
stos
jne
popa
lea
leave
mov
pop
pushf
sub
ss
xor
sbb
xchg
out
in
sbb
mov
inc
jmp
dec
adcb
insb
xchg
js
jo
enter
adcl
aad
or
cwtl
test
aad
into
cmp
add
inc
stos
das
mov
fmul
xchg
arpl
pop
jp
hlt
andb
pop
mov
mov
lds
jmp
xchg
sbb
testb
test
jno
mov
xchg
add
mov
push
aaa
pop
push
and
test
inc
jecxz
fnstenv
decb
hlt
lods
and
mov
push
ljmp
and
out
cltd
xor
es
push
mov
leave
mull
push
sbb
iret
push
out
push
shl
aad
sbb
in
mov
add
ss
xchg
or
and
jno
lea
je
mov
andl
pminsw
mov
mov
mov
popa
xor
cmp
scas
sub
adc
jmp
adc
fs
jb
cld
aaa
sbb
divl
decl
push
xchg
or
mov
inc
icebp
cmp
push
or
xlat
sub
pop
shll
jb
sub
stc
mov
aaa
push
shlb
movsb
sbb
inc
mov
add
ss
cmpsl
pop
xchg
mov
push
xchg
inc
fisttps
jecxz
inc
inc
jnp
adc
rcl
subb
lret
std
mov
insl
pop
popa
jns
add
add
cltd
mov
xor
sub
add
sub
cwtl
push
test
jecxz
sub
jle
hlt
mov
rolb
inc
cmp
lahf
jno
outsl
rorl
arpl
and
outsl
adc
cmp
shll
cmpsl
loopne
idivb
clc
test
dec
xor
fisttps
loope
mov
cmp
dec
cmp
fdivs
and
or
lcall
lds
lods
out
mov
push
inc
mov
sub
int
adc
jmp
and
xor
bnd
jmp
in
jecxz
nop
pop
push
lcall
in
mov
int
out
inc
xchg
jb
pop
mov
cmpsb
push
pop
mov
mov
in
push
jnp
mov
repz
xchg
and
push
add
loopne
jmp
adc
inc
mov
add
addr16
outsl
dec
mov
xor
test
pop
pop
jecxz
sub
cmp
lret
pop
shlb
sub
cmc
cmp
orl
imul
popf
sub
pop
and
call
xor
gs
into
into
ss
dec
jl
mov
in
push
es
fwait
call
movsl
insl
cmp
mov
int3
xchg
cmpsb
sub
loopne
lahf
lods
fcompl
cmc
or
sub
rolb
adc
push
add
add
mov
int3
enter
mov
imul
mov
imul
insb
inc
cmp
jne
sahf
ljmp
jnp
std
mov
lock
adc
scas
insb
or
adc
add
dec
aam
and
insb
add
push
movsb
lock
sub
jmp
fisttpl
jge
mov
int3
or
dec
jnp
xchg
xchg
in
adc
test
std
ljmp
aad
std
js
jno
pop
xchg
js
sbb
adc
xor
addr16
sarb
pusha
push
icebp
je
mov
mov
sub
enter
push
ljmp
cmpsl
mov
or
icebp
imul
insb
push
imul
sti
pop
fdivl
test
int3
in
call
sub
xor
into
test
insl
iret
push
rcrl
int
and
or
imulb
adc
adc
imul
data16
test
loopne
mov
adc
pop
jns
sub
jp
push
pop
sbb
nop
subb
pop
in
xor
or
sub
xchg
and
ret
and
push
aaa
daa
inc
out
loopne
lcall
add
inc
lahf
les
mov
jne
push
push
fimull
pop
pop
xchg
adc
pop
adc
movsl
or
add
lahf
imul
les
dec
inc
std
push
pusha
movsl
pop
inc
jno
aad
lsl
scas
repnz
push
xchg
mov
or
int
lret
mov
mov
cld
int
mov
sahf
testb
movsl
xlat
adc
ret
loope
mov
mov
xor
push
sub
add
gs
bound
push
mov
sbb
adc
jl
lock
xchg
insl
jnp
inc
adc
adc
sub
add
add
xor
cmp
jae
xchg
test
add
xor
and
nop
or
push
rcll
aam
push
stos
in
pop
insl
push
push
ss
mov
loopne
nop
push
je
push
adc
cltd
pop
xor
fadds
test
push
and
mov
mov
outsl
lea
fidivl
or
add
mov
add
pop
mov
dec
lds
lock
sbb
adc
inc
pop
xchg
mov
sub
ss
push
sub
cld
icebp
jno
mov
loop
scas
inc
lcall
mov
in
repnz
fsubrs
and
out
daa
add
rorl
xchg
insb
dec
add
mov
dec
sub
repnz
out
pop
jo
and
fidivs
push
push
adc
out
dec
jae
or
iret
inc
pop
xlat
pop
ret
push
fs
insb
sub
movsb
xor
clc
test
or
dec
jmp
cmp
outsb
es
popa
sbb
sbb
outsl
adc
sub
jge
push
dec
pop
or
pop
inc
mov
jmp
in
and
dec
fisubl
bound
sub
add
inc
mov
jmp
in
mov
mov
and
add
cmc
or
test
mull
repnz
je
xor
insb
test
mov
adc
adc
or
gs
sbb
cld
cmp
add
and
aaa
pusha
cwtl
mov
xor
xor
out
test
add
lret
mov
dec
sub
fists
mov
subb
fs
lods
dec
mov
gs
jl
mov
das
adc
and
movsl
inc
sti
xchg
pop
xchg
shrb
mov
out
in
lds
test
push
scas
in
insb
rcr
jns
mov
mov
jl
cmc
or
lods
xchg
aas
and
es
push
and
mov
cmp
shrl
dec
push
frstor
inc
jle
sub
movsb
add
dec
and
adc
sub
sub
sbb
cmp
int3
or
scas
movsl
push
mov
sbb
addr16
sub
sbb
and
push
arpl
inc
aaa
xor
cs
add
std
test
xlat
hlt
inc
cltd
loop
push
mov
cmp
mov
testb
loopne
sar
inc
xor
idiv
call
pop
mov
repz
and
pop
loope
loope
iret
addb
mov
std
in
add
dec
mov
and
or
pop
stos
inc
mov
xor
pop
push
or
loope
jp
xchg
notl
mov
push
fs
push
arpl
or
test
add
and
push
mov
jae
mov
aas
lcall
push
test
cmp
aaa
sub
mov
adc
cmp
scas
push
dec
pusha
addr16
mov
sbb
push
movsl
xchg
lods
xchg
push
push
pusha
push
in
lret
mov
iret
jmp
inc
mov
sbb
cmpsb
imul
xor
mov
pop
and
xchg
int3
sbb
mov
mov
aam
stos
inc
jb
lret
jge
xor
add
sbb
enter
add
add
dec
push
ret
mov
jge
cmp
in
sub
add
jecxz
dec
outsl
jne
addr16
and
inc
outsb
inc
pop
sbbl
clc
adc
pop
jbe
movsl
cmpb
je
mov
arpl
add
lahf
sub
repnz
xchg
in
enterw
movl
mov
movl
mull
pop
call
and
pop
mov
enter
fcmovb
cld
xor
pop
loopne
dec
std
nop
and
pop
rolb
je
dec
xchg
jl
lret
lcall
loope
pushf
mov
mov
out
add
inc
add
sbb
cmp
fisttps
ret
cltd
lea
dec
aas
adc
push
xchg
xchg
cwtl
int
dec
test
lret
sub
mov
pop
lcall
push
mov
popa
sbb
adc
mov
sti
ds
lock
or
fisubl
and
push
fstps
popf
jae
addl
icebp
mov
xchg
ret
loop
es
push
call
sti
enter
mov
int3
mov
cmp
hlt
or
mov
xchg
push
mov
mov
adc
pop
js
mov
jg
cmpsb
cmp
xlat
int3
pop
stos
cmpsb
in
pop
cmp
int3
dec
cmp
push
mov
mov
xchg
or
mov
call
xchg
imul
push
nop
mov
in
bound
pop
push
xchg
xchg
sub
outsl
cmp
dec
es
repz
mov
fsubrl
sbb
sub
cmp
daa
or
pushf
mov
inc
clc
jne
scas
daa
lret
repz
push
inc
mov
ret
xlat
xor
clc
loop
or
cli
popa
mov
in
les
mov
xchg
jnp
jb
xorl
jmp
add
and
cmp
int3
pop
and
mov
jno
mov
divl
jne
sarl
sarb
lret
aam
fsubrl
jo
enter
xor
and
xchg
popf
cmp
mov
lahf
dec
adc
xorb
stc
clc
repz
std
jge
jb
addr16
shr
enter
out
inc
adc
dec
adc
and
sti
outsl
dec
push
cld
and
inc
mov
inc
sbb
ds
push
mov
xchg
xor
cmc
mov
movsl
mov
xor
fcos
push
sbb
nop
or
faddl
enter
pop
cli
daa
arpl
mov
dec
aam
pop
jl
popf
jo
mov
mov
leave
je
repnz
js
fdivrs
add
fbld
jo
roll
mov
scas
inc
cltd
je
and
test
lahf
inc
hlt
daa
int
stos
dec
push
push
scas
mov
mov
add
icebp
or
or
or
icebp
test
imul
int
xchg
rcll
into
fsubs
jne
adc
cmp
cli
add
int3
adc
mov
cli
lahf
sbb
inc
push
ret
mov
dec
ret
outsb
shlb
or
pop
adc
inc
in
push
sahf
jo
in
inc
in
push
shl
movb
xchg
and
mov
xor
mov
ret
imul
xor
lret
sub
cmp
jno
mov
add
add
in
jmp
lahf
jle
stos
xchg
insl
scas
add
lods
add
add
sub
stos
out
loopne
cltd
mov
pop
icebp
inc
in
fstl
js
cld
pop
outsb
cmc
mov
xor
rorb
cmp
mov
inc
push
or
aaa
adc
popf
data16
xor
vphaddbw
inc
outsb
cltd
add
arpl
adc
sbb
jno
and
mov
sahf
mov
cwtl
sahf
add
clc
cmpl
pop
or
test
jno
ret
mov
or
insb
mov
push
xor
imul
and
and
xchg
push
loopne
mov
lret
test
stc
idivl
pop
test
mov
mov
cs
xchg
push
fistps
cmp
cmp
subb
mov
push
push
cmp
xchg
enter
inc
pop
cmp
lcall
and
pop
xchg
or
repnz
scas
pop
sub
repnz
aam
shrb
sbb
and
cmp
pop
sub
ljmp
outsb
lods
mov
repnz
ljmp
enter
shlb
pop
movb
outsb
shl
ret
or
and
xlat
xchg
cmc
es
in
mov
and
xor
movsl
idivl
fimull
lret
push
cmp
leave
lods
and
enter
dec
mov
dec
push
int
push
push
or
fs
inc
and
mov
lds
xchg
pop
xchg
xor
repnz
jg
addr16
sbb
pop
jbe
add
or
xchg
mov
movsb
divb
scas
add
vpandn
push
cmpsb
frstor
mov
add
mov
inc
test
jmp
push
pop
adc
cmpsl
mov
adcl
call
lods
test
pop
xlat
outsb
sbb
mov
in
pop
lea
sub
loop
shrl
or
inc
mov
push
jnp
or
add
loop
sti
loope
ficomps
fsts
les
lds
inc
addr16
jl
js
jbe
gs
loop
dec
jmp
rcll
sub
in
cmp
mov
add
fdivs
cli
or
sbb
mov
into
xchg
fucomp
and
test
inc
pop
test
cmc
in
prefetch
in
aaa
push
lods
adc
in
mov
or
mov
cmp
push
push
sbb
inc
mov
movsb
xchg
dec
dec
aam
repnz
jmp
in
xorl
stc
dec
sbb
adc
movsb
ja
adc
pcmpeqd
cmp
xchg
bt
scas
or
out
lods
in
pop
gs
insb
ds
jno
mov
mov
or
test
add
pop
lds
mov
dec
lahf
icebp
ss
sub
out
pop
ja
dec
sub
and
popf
adc
test
xor
popf
pop
dec
aas
mov
xor
add
movsl
adc
sub
scas
mov
jmp
jnp
mov
adc
pop
ret
pop
andl
and
cmc
jle
sti
cmpsb
xlat
test
negb
lds
ja
sbb
enter
push
push
cld
into
sbb
lcall
mov
mov
dec
rorb
gs
pushf
pop
adc
add
dec
cli
mov
decl
mov
in
shl
sbb
add
sti
pop
rcl
xor
sub
sub
pop
and
clc
outsl
mov
push
and
enter
orb
dec
mov
add
sub
push
arpl
into
test
xlat
movsl
nop
cmp
push
stos
mov
adc
dec
adc
aaa
hlt
mov
adc
ret
inc
dec
mov
popf
sub
or
addb
and
push
aas
pop
mov
jbe
add
or
lcall
loope
mov
sti
popf
xor
sbb
popa
xor
mov
cli
mov
mov
mov
lods
and
push
jnp
iret
mov
and
dec
aas
inc
jae
sbb
xchg
imul
sbb
mov
mov
scas
leave
loope
pop
aas
lods
cmpsb
jb
jbe
xchg
pop
and
and
jns
sub
mov
mov
adc
nop
addb
cs
mov
imul
dec
shrl
out
fmuls
mov
pop
cmp
xchg
xor
test
push
jo
xchg
stos
int3
and
dec
add
xchg
fbstp
xorl
dec
pop
jb
pop
mov
cld
dec
stos
mov
mov
mov
shll
adcl
jne
pop
mov
insl
or
add
xchg
inc
mov
mov
daa
scas
filds
es
out
arpl
or
xor
icebp
cmc
fcomps
adcl
aas
cmp
mov
xor
loopne
ficoml
and
mov
lret
mov
dec
out
inc
aad
push
out
sbb
ret
or
jnp
test
xor
mov
jae
sub
outsl
in
mov
ljmp
lret
lods
xchg
mov
or
fwait
push
scas
cld
jne
inc
psubq
jmp
lahf
add
or
fistps
xchg
aaa
dec
mov
repz
out
lds
mov
or
mov
icebp
int3
stos
push
cld
cli
insl
shrl
pop
push
add
fs
loope
std
jb
ds
js
out
dec
xor
movsl
sti
jmp
sbb
inc
jne
jl
cli
xchg
icebp
fcomps
divb
mov
jns
pop
loope
jb
adc
mov
push
push
faddl
xlat
mov
ja
and
xor
jne
fstl
adc
les
shl
popf
adc
mov
std
sbb
lea
dec
cmpsl
jno
imul
outsb
incb
xor
dec
popa
outsl
mov
pop
inc
xchg
stos
mov
push
mov
dec
mov
cld
jns
add
push
xor
mov
or
mov
mov
or
pop
and
sbb
cmp
cmp
iret
popa
pop
js
cli
cmp
mul
lcall
enter
stc
xor
cmc
enter
or
dec
orb
add
test
in
inc
sub
sub
xchg
jne
mov
andl
cmpsb
push
test
outsl
inc
ss
and
sahf
pop
clc
inc
xchg
ficomps
lock
jbe,pt
data16
pop
add
add
lret
xorb
icebp
lret
aam
imul
iret
cmp
add
jnp
mov
xor
pushf
loope
push
negl
mov
dec
popa
data16
in
push
or
jns
lods
cmpsl
lds
repz
push
scas
xchg
lds
sarb
push
mov
xchg
cmc
or
mov
jge
mov
in
dec
psubw
lock
xchg
stos
decl
xor
pop
jb
fnstcw
mov
test
pop
mov
js
sub
xchg
jbe
mov
jmp
loope
andb
add
xchg
mov
and
cltd
push
xchg
in
iret
ja
in
push
lods
cmp
outsl
dec
rcrl
push
insl
insb
xchg
fists
or
mov
jmp
lret
insl
daa
popf
int3
in
enter
push
sub
stos
cmpsb
push
pop
xchg
imulb
aas
aas
push
cmc
sub
aas
cmpsl
call
outsl
dec
mov
jnp
mov
or
dec
rcrl
ja
and
cmp
dec
ficomps
xor
loope
bound
mov
jae
mov
jo
inc
fiaddl
sahf
mov
test
repnz
movsb
rcrb
sub
mov
rcrb
xchg
out
inc
xchg
pop
shll
nop
inc
mov
and
adc
mov
pop
cs
pop
jne
dec
insb
and
cmp
popa
jns
pop
xor
push
dec
daa
sub
add
sbb
or
imul
lods
std
mov
das
pop
adc
lock
mov
inc
pop
xchg
xor
sbb
xor
mov
sbb
jo
nop
inc
cmp
jne
or
in
cmpsl
mov
loope
mov
stos
sbb
fcmovnb
aad
fildl
iret
fs
rclb
cmp
lret
pop
fs
ljmp
aad
xor
mov
sti
push
push
pusha
daa
mov
loop
xchg
push
sbb
inc
test
mov
adc
pushf
mov
fstps
int
fcomi
xor
or
negb
imul
call
punpckldq
test
cmp
jp
mov
add
xor
jo
lea
mov
fwait
out
mov
add
mov
mov
adc
jbe
add
imul
cltd
lea
push
push
jns
xlat
ret
push
sub
lret
or
or
sbb
sub
pop
repz
sbb
add
dec
and
push
in
mov
cmp
leave
sbb
and
mov
cmpsl
movsb
lods
jo
in
pop
cmp
cltd
add
stc
mov
dec
xchg
cld
xchg
sub
cli
dec
mov
mov
clc
stos
mov
in
add
pushf
push
xchg
daa
xor
xchg
aad
cwtl
cmpsl
in
mov
jmp
arpl
sbb
icebp
or
ljmp
mov
pop
pop
xor
ljmp
lods
xor
adc
mov
push
push
jecxz
in
add
mov
ficoms
in
ds
enter
sub
inc
cmp
mov
in
mov
mov
pop
add
xor
pop
xor
cmp
dec
dec
jne
xchg
cwtl
jbe
out
je
dec
adc
push
loop
dec
jmp
or
aaa
xchg
sub
aad
push
mov
push
mul
lahf
jp
jp
in
sarl
and
add
pop
pop
inc
outsb
adc
aam
sbb
push
test
sbb
scas
or
jae
xchg
push
sbb
arpl
out
pop
or
cli
jne
jp
stos
cmp
mov
cmp
fucomip
mov
cli
inc
popf
mov
lcall
sbb
sbb
jp
pushf
daa
or
sbb
movsl
or
mov
fisubl
testb
push
add
mov
fsin
or
dec
push
mov
push
xchg
jnp
add
add
hlt
in
nop
adc
sub
mov
arpl
lcall
scas
push
xchg
pusha
lock
arpl
arpl
clc
mov
movsb
add
jmp
mov
inc
mov
push
repz
or
xor
cwtl
xor
or
subb
bound
in
scas
fcmovbe
orb
xchg
add
fnstenv
out
nop
mov
into
iret
pop
or
out
xchg
in
sbb
sub
mov
add
divl
push
jno
mov
mov
pop
outsb
jne
sbb
pop
call
and
push
and
xchg
mov
jnp
jnp
mov
das
xlat
in
jle
xchg
jnp
fistpll
push
mov
fisubl
popa
inc
jmp
lock
in
das
jle
jno
mov
jle
nop
es
jmp
push
jns
icebp
xor
sbb
aas
pop
andl
dec
sub
in
mov
push
loope
aaa
cmc
sti
rclb
mov
push
aas
sub
jmp
or
xor
adc
mov
addr16
jge
lds
mov
dec
pop
push
add
cmp
add
iret
in
push
xchg
addr16
arpl
push
fiadds
divl
push
roll
sahf
addb
ret
iret
into
lock
fstps
std
sub
data16
scas
rol
sbb
mov
or
pop
jnp
sub
cmp
inc
inc
hlt
outsb
or
test
xlat
lods
cmp
inc
fldcw
dec
mov
in
sbb
arpl
enter
mov
xchg
lcall
pop
int
inc
icebp
pause
lret
sub
aam
lods
test
inc
inc
adc
mov
and
scas
loopne
les
inc
inc
inc
sbb
sbb
add
aas
or
mov
pop
jns
xor
cmp
into
xchg
add
out
push
into
xchg
push
pusha
cli
sub
mov
shrl
gs
sarl
lods
mov
and
shl
mov
xchg
jbe
mov
mov
pop
sti
cmc
xchg
push
mov
xchg
dec
popl
shrb
aaa
cmp
pop
add
ret
sbbb
inc
cwtl
shrl
mov
push
cli
mov
and
push
lock
cwtl
xor
shll
pop
adc
pop
mov
sbb
outsb
push
sbb
cmp
adc
shr
adc
aam
call
mov
js
add
push
mov
mov
mov
or
cmp
sbb
cld
push
inc
inc
inc
cmc
mov
aad
jbe
mov
jmp
sub
ljmp
sbb
cmpsb
lods
mov
neg
add
add
mov
lcall
int
dec
mov
mov
add
xchg
rcr
inc
out
sub
sub
pusha
test
push
mov
fcomps
pop
dec
movb
insb
jns
mov
mov
xor
or
pop
loop
test
xor
inc
frstor
jl
fidivrs
stos
sbb
push
js
iret
cmc
jmp
std
jns
outsb
hlt
clc
loopne
in
lea
push
ljmp
mov
pop
push
int
fs
push
lret
and
pop
mov
mov
push
fstp
or
xchg
dec
fnstsw
sub
sbb
dec
add
inc
out
mov
jne
roll
nop
ss
push
push
xor
bound
jmp
ds
es
mov
lcall
push
or
push
jnp
ffreep
adc
dec
mov
cmp
mov
sub
sbb
xor
cmp
aad
arpl
push
or
pop
sbb
sub
stos
push
jg
jl
lret
mov
or
sbb
add
pop
ss
sbb
loop
mov
cmpsl
and
scas
popf
ss
int3
pushf
imulb
mov
and
testb
out
mov
push
dec
cmp
fwait
movlps
pop
popf
push
jp
subl
fdivrl
inc
sub
jb
push
add
fstps
rcrl
test
and
icebp
mov
jne
mov
xchg
xchg
roll
hlt
pop
cmp
sti
test
xchg
or
insl
pop
mov
xchg
xor
jb
or
mov
lahf
pop
jmp
enter
mov
iret
cs
movsb
xchg
subl
push
inc
fbld
xchg
pop
mov
test
in
add
and
mov
or
repz
arpl
add
jecxz
sbb
daa
sub
int3
cld
loopne
inc
popa
movsb
call
sbb
jae
adc
or
mov
push
mov
imul
push
mov
xchg
adc
pop
add
cmp
cmpsl
mov
mull
jns
pop
push
sbb
movsb
orb
or
dec
cmp
imul
je
jl
inc
push
pop
sub
ret
xchg
fldenv
mov
pop
fnstenv
mov
dec
mov
inc
bound
sti
xchg
aad
xchg
add
and
jns
arpl
jg
cmp
popa
cwtl
lds
push
jnp
aaa
xchg
add
js
orb
inc
bound
xchg
das
sub
or
push
aad
push
mov
jae
imul
dec
loope
lds
cmp
add
mov
pop
cmp
push
shl
dec
or
mov
push
loopne
jl
mov
xor
rclb
push
dec
stos
xor
inc
aas
shll
aas
jnp
ljmp
rolb
jge
addr16
pop
int
and
das
inc
pop
aaa
leave
pop
cmp
shrl
or
pop
fstpt
outsl
dec
mov
cmc
nop
cwtl
hlt
pop
pop
push
adc
mov
mov
outsb
add
mov
dec
icebp
adc
cmp
or
mov
push
mov
push
push
in
dec
cs
int3
fwait
clc
jne
flds
ljmp
pop
adc
jae
add
push
push
mov
mov
cmp
mov
roll
lods
add
add
push
mov
in
mov
add
rcrb
push
push
inc
fistps
js
ds
out
or
mov
dec
popl
lock
and
sub
sbb
lods
mov
mov
mov
fnsave
cmp
xchg
ss
or
outsl
dec
fs
ja
xor
pop
push
dec
mov
rorb
inc
jmp
sti
xchg
shr
sbb
push
stos
sub
push
es
rolb
inc
cwtl
scas
inc
pop
push
das
jbe
or
mov
mov
add
jbe
pop
leave
jne
jl
push
int
frstor
cmp
cmpsb
mov
adc
cltd
mov
mov
iret
testl
jnp
mov
iret
les
push
ret
iret
inc
mov
mov
pushf
and
sarb
mov
add
pop
cs
mov
and
jbe
das
jo
pop
pusha
nop
mov
mov
or
imul
ficompl
jg
jmp
dec
hlt
adc
pop
lahf
mov
xor
jmp
sbb
jnp
jnp
stos
dec
jno
leave
mov
and
out
stc
mov
rorl
loope
test
xchg
lds
repnz
fists
test
sub
cs
mov
add
add
icebp
ret
and
pop
decb
adc
push
pop
in
xchg
filds
in
mov
xchg
jb
into
push
negl
jns
es
loop
std
add
pop
lock
sbb
test
sub
repz
inc
or
dec
fcomps
xor
les
rorb
test
adc
mov
hlt
jnp
inc
sahf
or
pop
mov
enter
or
mov
test
cmpsb
push
mov
adc
or
pop
mov
or
iretw
pop
mov
add
into
std
cmp
mov
lcall
xor
cmp
mov
movsb
ds
pop
bound
lret
out
lock
daa
adc
aam
leave
cmp
mov
jle
jno
cmp
mov
shlb
minps
and
cli
iret
sti
sbb
cli
movsl
mov
and
sbb
pushf
lahf
mov
xchg
adc
pop
cwtl
adc
jae
fstl
loopne
push
mov
cmp
inc
pop
inc
add
and
dec
cs
call
pop
repz
call
dec
dec
inc
inc
ja
int
mov
lret
pop
mov
xor
adc
aad
imul
adc
inc
adc
push
test
test
pop
leave
test
jle
dec
and
mov
das
ret
jno
bound
enter
xchg
movsl
cwtl
jp,pt
pop
sub
ljmp
stc
mov
fstl
dec
lods
mov
inc
xchg
mov
or
jge
add
push
dec
mov
xchg
jae
cmp
les
jmp
movsl
lret
pop
or
mov
enter
int3
shrb
sub
and
in
jl
lcall
or
data16
add
mov
xor
lds
add
adc
addr16
jno
divb
pop
ds
lea
xchg
xor
cwtl
mov
cmp
mov
bound
loop
or
or
shl
mov
cmpsb
sbb
cmp
pop
jge
sub
pop
mov
filds
adc
and
or
xchg
sbb
push
mov
in
enter
ret
jbe
ds
cwtl
lcall
iret
stos
push
sbb
dec
subl
jp
and
out
xchg
aas
or
fwait
test
pop
movsl
cli
jle
out
repz
xorb
insl
nop
pop
cmpsb
dec
sbb
add
push
dec
les
dec
shr
xchg
aam
xchg
outsb
into
or
mov
and
add
mov
xchg
jmp
mov
pop
and
sbb
mov
sub
and
sbb
mov
dec
cmpsb
push
bound
jp
pop
in
lret
sub
ds
jp
pop
jl
shll
nop
lock
cli
fwait
cmpsl
rorl
ss
mov
mov
and
jge
jg
mov
sub
cld
push
pop
testb
adc
sbb
push
xchg
mov
gs
fwait
mov
mov
mov
inc
movsb
outsb
int
inc
pop
std
movsb
mov
test
mov
jno
inc
xor
push
sbb
mov
xchg
jecxz
inc
dec
stc
orb
fs
cmpsl
mov
and
cltd
mov
lods
aaa
jne
setg
aaa
mov
stos
sub
xor
insl
mov
sbb
dec
fdivrs
xchg
faddl
adc
daa
push
xchg
adc
fstpt
leave
xor
xchg
stos
mov
mov
into
jg
and
out
lret
and
insb
leave
mov
shll
cmp
dec
adc
ret
das
pop
fsubs
stos
enter
sub
sbbb
mov
jb
lcall
daa
push
sbb
loopne
push
pop
aas
in
jne
cmpsl
ficomps
pop
xlat
adc
ret
ret
push
sbb
mov
adc
jg
add
sub
push
push
and
out
imul
mov
jb
lret
je
adc
cmp
jno
xlat
mov
mov
jno
jns
dec
push
lcall
xchg
repnz
xchg
sub
jp
jns
in
int
iret
lret
stos
loopne
loopne
mov
cmp
jmp
jbe
mov
jle
repnz
mov
shrl
jg
test
imul
inc
sub
pop
mov
and
sbb
enter
push
lods
subl
js
std
lahf
data16
fldenv
mov
xor
incb
inc
mov
xchg
mov
fisubrl
add
push
or
jo
and
bound
push
sbb
cmp
fildll
test
mov
sub
jmp
aaa
push
jo
push
mov
mov
rcrl
cmpsb
js
push
decl
pop
adc
lcall
insb
in
jno
popf
ret
dec
push
inc
js
mov
push
cltd
xor
subb
into
sub
andb
adc
pop
sbb
insl
dec
cld
inc
pop
pop
inc
ljmp
imul
dec
pop
loopne
int3
jns
leave
add
lods
add
add
and
scas
dec
mov
cmp
push
mov
adc
es
dec
aas
sub
push
pop
push
loopne
inc
mov
ds
test
adc
int
aad
mov
jne
dec
test
shl
cmp
out
fimuls
ret
xchg
shrl
inc
fs
insb
ja
cld
orb
daa
rorb
jp
cs
adc
insb
ret
mov
dec
das
rcrb
cmp
enter
test
mov
sbb
inc
and
sbb
adc
sarl
jno
sahf
inc
in
mov
clc
insb
mov
lahf
inc
aaa
mov
or
push
iret
andl
jecxz
xchg
xadd
sub
push
mov
mov
pop
xchg
adc
push
stc
mov
xchg
mov
jg
loopne
sub
and
xor
call
xchg
inc
pop
jbe
call
mov
xlat
cmp
pop
and
push
roll
add
mov
xchg
pusha
cmp
ja
movsl
jge
sysenter
pop
ret
push
jle
xor
aas
sub
and
idivb
subl
mov
jmp
push
push
popf
xchg
test
ja
sarl
insb
xchg
fidivs
xor
add
dec
gs
rorb
jns
add
dec
mov
inc
xchg
ficoms
int3
mov
call
scas
adc
xlat
adc
pop
pop
lret
mov
scas
out
mov
cmp
js
inc
mov
adcl
cmc
aas
pop
arpl
jbe
cmp
mov
mov
or
add
mov
es
push
lock
or
mov
fldcw
ds
ficomps
lahf
sbb
adc
xchg
xor
mov
xchg
inc
fwait
sub
cli
push
ljmp
mov
sarl
mov
inc
and
mov
dec
dec
dec
push
out
out
mov
and
sub
push
test
dec
jg
sbb
fidivrl
jns
mov
es
lods
xor
dec
shll
pop
mov
std
mov
mov
rorb
aam
jb
jnp
in
cmp
dec
sub
hlt
stos
push
shrb
pop
out
cld
pop
pushf
mov
cli
inc
loop
add
adc
push
ss
test
lds
add
ds
mov
jno
push
ficompl
xchg
inc
xor
push
loope
daa
fdiv
xchg
loope
inc
add
push
ja
push
mov
jnp
pop
fisttps
enter
shll
out
push
push
sbb
scas
dec
mov
cmpsl
fsubrl
call
out
cltd
pop
mov
push
or
lods
testb
dec
push
inc
adc
addb
fidivrl
or
xchg
stc
sub
adc
dec
xchg
mov
inc
rcrb
xchg
sbb
fwait
dec
cltd
inc
and
fcompl
mov
test
fdiv
jmp
xor
stos
aad
movsl
jecxz
data16
sbb
inc
mov
mov
pop
push
nop
sbb
insl
out
mull
in
xchg
imul
mov
jg
sub
mov
xchg
pop
xor
arpl
popf
jg
fs
das
movsl
mov
mov
nop
dec
out
fbstp
push
shlb
add
add
add
jmp
or
scas
jmp
popa
mov
or
int3
add
lods
add
add
dec
mov
sbb
insb
div
jb
aaa
dec
or
or
test
je
fstl
cmp
sti
sbb
in
or
cmp
xor
es
fcoms
int
push
cmp
xchg
cmc
mov
addb
ret
add
addb
gs
adc
dec
leave
sub
jg
pop
push
pop
pop
pop
sti
aam
fidivrl
repz
jl
lock
into
fidivl
out
push
sbb
bound
pop
inc
loope
leave
pop
loope
mov
fisttps
mov
mull
lock
sbb
cmp
sbb
cmp
adc
int
xchg
push
arpl
mov
adc
add
and
je
outsb
sub
mov
dec
xlat
in
dec
je
std
add
and
sahf
sub
shl
bound
pop
mov
fdivr
cmpb
enter
repnz
orb
xorl
dec
rcrl
inc
push
sahf
pop
test
out
mov
test
cli
xor
nop
sarl
int
aas
fisubs
xor
ret
push
mov
sub
cmpsb
sub
sbb
test
inc
xor
cld
jle
jbe
loopne
xchg
adc
cmp
int3
sahf
sub
and
sub
scas
jb
inc
fiaddl
rolw
jae
test
mov
mov
dec
call
es
xchg
mov
andl
mov
lret
in
mov
mov
sbb
aad
pusha
xor
aad
int
lahf
sti
je
ja
dec
or
fwait
icebp
shlb
and
mov
inc
in
or
lods
pop
stos
mov
cmp
cwtl
xchg
add
jns
test
cltd
mov
pop
test
pusha
push
or
mov
shlb
pop
cli
adc
in
push
out
mov
popf
dec
enter
sub
pop
xor
cmp
ljmp
xor
jg
or
loop
xchg
aas
shl
or
sbb
mov
fidivl
jbe
xchg
andnps
xchg
cli
arpl
insb
icebp
xchg
push
stos
daa
clc
pop
out
add
stos
sub
fsub
sbb
insl
faddp
mov
loope
mov
out
rclb
xchg
shll
sbb
out
mov
andb
dec
xchg
imul
inc
test
shl
sarl
mov
sbb
push
jl
movq
mov
cmp
test
sub
fwait
inc
mov
nop
xor
divl
jae
inc
jb
push
dec
jecxz
cmc
movsl
sbb
lods
shlb
push
fdivs
out
dec
mov
adc
xchg
repnz
cmpsl
mov
jb
xchg
jecxz
sbb
insl
jb
int3
daa
in
je
inc
push
lret
sbb
mov
and
add
les
out
or
dec
cs
jecxz
sbb
xor
rorb
push
aad
cmpsb
in
stc
lret
cmp
sbb
dec
lock
jl
hlt
mov
test
popf
xchg
dec
xor
cmp
inc
xchg
in
mov
dec
adc
mov
xchg
movsl
mov
daa
cmpl
jae
syscall
cmc
dec
shlb
in
test
push
cld
mov
adc
add
push
mov
imul
fisttps
cs
in
lcall
fs
pushl
add
cmp
mov
addr16
mov
xor
insb
scas
mov
sbb
mov
ss
pop
and
inc
imul
xor
jle
xchg
jns
jb
mov
cmc
dec
lret
pop
andb
out
jns
xor
dec
imul
stos
mov
loopne
mov
inc
inc
cmp
inc
jg
arpl
leave
add
lahf
lret
sbb
add
adc
into
fistpll
jecxz
dec
cmpsl
add
test
xchg
xor
mov
or
pop
xchg
mov
and
lahf
daa
dec
fnstsw
jmp
test
out
pop
imul
mov
cmpsl
ficompl
rcrb
arpl
leave
push
xor
out
flds
movsl
and
ljmp
fs
imul
adc
sbb
and
xor
loope
addr16
push
pop
mov
loop
and
pop
rclb
addr16
and
or
and
pop
adc
push
cmpsb
ret
test
mov
sub
cmp
sbb
dec
mov
arpl
lea
adc
sbb
push
push
jge
jns
shlb
stos
lods
pop
scas
mov
fstl
les
sahf
and
fiadds
lea
jb
jnp
mov
pop
adc
adc
mov
inc
imul
adc
adc
cmp
cmp
daa
loop
cli
ss
mov
int3
jns
ljmp
ret
bound
jmp
lds
and
jmp
or
mov
cmp
adc
cmp
fstl
aaa
popf
aam
andb
ret
rcr
jle
enter
aam
loop
cmp
xlat
ret
fisttps
ds
or
mov
mov
cmp
push
popf
js
mov
aas
sahf
mov
rol
icebp
cli
ds
sti
cmp
mov
add
imul
and
push
jge
or
rcr
rorl
fistl
outsb
cltd
push
sbb
pop
aam
incl
mov
sbb
ret
xor
loopne
mov
movsl
aas
cmovl
insb
dec
mov
and
mov
je
lcall
adc
inc
hlt
push
dec
sahf
xchg
push
sub
mov
dec
xchg
loope
xchg
repz
out
rolb
stos
cwtl
mov
sub
rorb
fcomps
cmp
and
or
mov
aas
xor
sarl
and
fdivp
mov
lahf
hlt
lea
mov
pop
add
icebp
aam
inc
cmpsl
xchg
decb
call
pop
fists
inc
outsb
aam
cwtl
xchg
pop
sbb
cs
fldt
arpl
rcrl
push
test
xor
mov
mov
lds
iret
in
test
ljmp
push
lods
xchg
and
pop
dec
hlt
and
in
loopne
cli
int
mov
cld
adc
test
out
bound
add
leave
popf
lret
popf
pop
xlat
loope
fs
cli
ret
add
lods
add
add
cmp
jo
pop
int3
roll
les
dec
dec
push
pop
dec
push
scas
je
mov
call
adc
and
and
sub
dec
lea
sub
fsts
je
adc
test
mov
push
xchg
movzwl
pop
out
pop
jp
xchg
xchg
sbb
inc
push
sub
mov
xchg
cli
push
loopne
cmp
and
cmp
mov
dec
addr16
inc
and
push
xor
or
adc
and
fs
in
mov
fnstenv
fprem
popf
js
stc
xchg
jbe
outsl
lea
lret
and
dec
or
xor
xlat
dec
mov
add
insb
mov
call
dec
jle
and
push
adc
int3
clc
add
clc
mov
pop
out
inc
daa
rcll
mov
sub
fs
and
adc
fincstp
dec
mov
mov
jbe
cmp
sub
sbb
lds
in
ljmp
int
mov
xor
in
sub
inc
jmp
dec
or
jmp
mov
outsb
mov
sub
out
jbe
outsb
inc
mov
cmp
push
scas
insb
imul
xor
imul
lret
movsb
pop
cmp
in
sub
jbe
dec
sbb
ret
or
pop
xchg
loope
push
rcr
xchg
stos
push
or
mov
lret
aas
xchg
loop
mov
push
inc
fdivr
int
shll
sbb
mov
mov
mov
pop
adc
fucomp
jnp
mov
dec
fistpl
ljmp
mov
cmp
test
mov
add
out
xchg
xor
push
adc
outsb
jne
lahf
sub
xchg
sbb
bound
stos
adcb
mov
xchg
add
jl
add
pop
jge
in
xlat
push
ds
ret
xchg
imul
xor
les
ret
mov
xor
or
xchg
daa
push
fwait
mov
fistl
lds
inc
mov
mov
rol
mov
mov
mov
movsb
jbe
xor
jbe
adc
pop
mov
pushf
rcl
or
jle
arpl
xor
adc
icebp
imul
rcll
mov
shll
ljmp
fsubr
xchg
std
ret
sbb
dec
aad
mov
push
repnz
adc
lock
fiadds
scas
out
pop
mov
mov
mov
arpl
inc
push
pop
clc
sbb
movsb
dec
cld
dec
ja
add
inc
sbbb
xchg
push
sbb
insl
call
pop
cwtl
lahf
pop
jmp
fnsave
pop
popa
popf
nop
outsb
inc
enter
xchg
call
mov
or
aaa
sbb
push
call
stos
aam
outsl
or
push
je
add
cli
push
xchg
lcall
aas
jns
adc
mov
negb
mov
and
push
lahf
xchg
outsb
clc
and
jne
mov
mov
jnp
icebp
mov
into
mov
jae
mov
into
mov
lahf
fadds
scas
sbb
clc
jnp
sbb
push
mov
push
pusha
adc
packuswb
inc
jae
lahf
pushf
rclb
scas
es
push
add
mov
add
sbb
mov
sti
lcall
dec
pop
popa
sub
notb
lods
add
add
mov
scas
xor
in
cltd
adc
pusha
into
xchg
inc
or
mov
inc
movsl
mov
leave
pop
sahf
iret
out
nop
nop
pop
pop
xor
mov
inc
insb
mov
mov
js
movsl
jbe
mov
and
arpl
pusha
xchg
pop
xchg
dec
std
mov
ret
push
sbb
or
cli
push
pmovmskb
sbb
outsb
fsub
icebp
scas
xchg
aaa
movsl
fisubl
push
jp
adc
adc
adc
add
int
cmp
mov
rolb
cmpsl
cld
scas
in
movsb
bound
xchg
movsl
jo
lahf
cmpsb
jo
cs
inc
cwtl
addr16
addl
add
mov
int
shlb
and
imul
jne
scas
inc
ds
xchg
clc
pop
loopne
ret
in
jmp
or
pfsubr
mov
sbb
jmp
rcrb
jns
je
pop
jmp
fisubl
cmc
xor
jg
nop
and
mov
test
jl
scas
jg
mov
test
cmp
shr
xor
in
inc
rcrb
js
xchg
jecxz
sub
mov
into
js
fisubs
inc
or
stos
sub
mov
repnz
adc
scas
push
imul
in
mov
fcompl
jo
imul
jl
mov
or
or
and
in
std
in
loope
call
mov
dec
cmpsl
jmp
or
lea
jecxz
movsl
xor
in
sub
fsubrs
mov
ret
mov
ds
je
xor
inc
pushf
jae
pop
cmp
aas
repz
xchg
scas
aas
mov
adc
add
mov
mov
pop
jb
cltd
fcomi
inc
int
fstpt
push
insb
or
test
inc
imul
add
stos
sarl
xor
scas
inc
orl
data16
and
idivl
test
xor
mov
sbbb
inc
adcl
jmp
mov
movsb
or
xor
gs
jge
fcompl
sub
mov
ficomps
xchg
in
push
cmp
mov
fs
mov
lods
xchg
inc
push
cld
ds
cmp
cmp
sub
inc
push
cld
movsl
jno
or
pusha
sub
or
dec
push
into
xlat
mov
aas
mov
bound
aad
nop
int3
inc
push
inc
call
sub
cmpsb
adc
sbb
orb
repnz
sub
rolb
je
ljmp
add
pop
ljmp
jnp
daa
add
mov
sbb
clc
inc
sahf
sbb
adc
jbe
adc
sar
ret
es
cld
repnz
outsb
jb
imul
cmpsb
jp
dec
lods
dec
and
shlb
push
ja
pop
and
ja
lods
add
in
sub
test
push
push
jne
pushf
cltd
jno
push
loopne
ljmp
dec
cmp
stos
mov
in
xor
or
add
int
pop
xchg
cmp
cmp
stc
pop
stos
dec
cmp
xchg
push
add
xchg
push
or
cmp
test
dec
xor
adc
sbb
cwtl
sbb
mov
ja
xor
ret
outsl
sub
xchg
dec
add
add
jnp
data16
decl
std
or
bound
fildl
add
js
adc
lahf
adc
ss
or
sbb
mov
pop
pushf
pop
sbb
sub
cmc
push
fdivs
rcll
pop
cmp
int3
cmp
add
xchg
aas
dec
cmpsl
popa
mov
and
xor
pop
push
inc
ds
add
jmp
pop
jge
das
nop
xorl
xor
in
loopne
dec
xchg
adc
ret
sti
cmp
push
add
lahf
cld
in
cltd
scas
jo
sub
push
sti
inc
out
jo
and
cmp
push
adc
loopne
repnz
shlb
xchg
cmpb
lret
lods
push
adc
cmp
stos
scas
shl
mov
std
js
fdivr
mov
push
loope
in
sbb
cmc
mov
inc
ljmp
inc
xor
adc
js
inc
fistl
int3
hlt
and
mov
jno
mov
xor
add
cs
sbb
cli
dec
xchg
sub
mov
testl
mov
inc
push
lahf
pop
xor
sub
jnp
mov
xor
pushf
cmp
call
lcall
test
leave
pop
arpl
aad
js
shll
fidivs
into
jb
shll
add
je
mov
pop
adc
sbb
shlb
insb
mull
mov
aam
cmpsb
fildll
in
lcall
fs
jbe
sub
cs
nop
dec
shll
sahf
push
and
imul
cmp
mov
xor
shll
in
cld
shl
insl
xor
daa
or
popa
fs
jp
dec
pop
out
sub
jl
call
push
xchg
or
sub
adc
push
divl
mov
add
add
fnstenv
scas
add
sub
add
nop
in
pop
es
popa
iret
sub
or
div
stos
addr16
sbb
xchg
lds
and
xchg
aas
mov
mov
inc
xor
add
push
rcl
xchg
add
sub
push
out
cmc
fs
std
outsb
lock
add
divl
test
enter
loop
movsb
in
jle
repz
and
dec
mov
push
rclb
mov
pusha
mov
fistpl
insb
mov
dec
cltd
cmp
call
ret
mov
and
outsl
mov
sbb
pop
test
push
mov
movsl
lret
in
push
fwait
push
inc
push
std
push
mov
pop
data16
cmp
fst
pop
mov
lret
movl
inc
sub
push
pop
or
jne
dec
cmc
andl
orb
or
lds
lret
incb
mov
xchg
mov
sub
stos
add
out
inc
dec
mov
js
sbb
bound
pop
cmp
lret
sub
mov
push
cltd
mov
int
pop
andl
xor
or
xchg
lea
jbe
scas
les
repz
icebp
lahf
daa
add
xchg
rcrb
mov
mov
push
and
or
movswl
or
aas
cmpsb
xchg
or
in
and
shlb
or
std
push
add
add
into
psrld
rcr
fistpll
push
xchg
jb
cmp
filds
add
in
xchg
movsl
push
dec
out
test
lret
xlat
cltd
ret
cs
fadd
push
paddusb
dec
or
fwait
add
bnd
clc
xor
fcos
addb
cmp
mov
adc
adc
mov
int
cs
or
fcomi
xor
push
nop
movsb
lret
jns
cmp
adc
sub
add
faddl
clc
idivb
in
cmc
jmp
jp
and
cmp
push
int
push
clc
add
ss
add
cmovne
popf
push
xor
in
rorl
jle
xor
aam
jns
and
dec
add
in
mov
jmp
sbb
inc
push
sti
and
call
scas
mov
inc
insl
xlat
jmp
shlb
out
scas
loope
push
sti
inc
inc
nop
fists
cltd
testb
into
popa
bound
inc
int3
loopne
cmpsl
dec
push
jmp
mov
insb
aas
adc
ret
and
ret
lock
adc
xor
lret
push
iret
jno
mov
xchg
lret
in
mulb
and
adcl
mov
xchg
and
or
pop
mov
or
jae
cmp
push
sub
or
mov
jne
mov
testb
and
mov
inc
leave
add
jmp
ret
je
cmpsl
xchg
add
inc
lea
mov
xchg
sbb
xorb
pop
aas
cli
ljmp
adc
ds
fisubs
adc
sbb
clc
mov
fucomip
and
aad
jp
arpl
adc
ja
and
imul
xchg
das
or
daa
cmp
dec
pop
xchg
ficomps
push
mov
mov
dec
ja
push
mov
aam
inc
sbb
orl
fstl
fldt
hlt
hlt
add
popa
jb
fnstenv
xchg
pop
dec
sub
push
jbe
xchg
test
pop
xchg
add
cmp
xor
xchg
add
bound
lock
sub
push
inc
add
int3
pop
jne
add
fistps
bound
mov
pop
shll
mov
add
push
push
xchg
jnp
sbb
jl
in
sbb
inc
scas
inc
enter
mov
sbb
pushf
mov
leave
insl
sub
dec
dec
mov
or
sbb
gs
and
xchg
iret
cmc
outsb
into
aas
adcl
js
mov
sub
and
and
inc
lret
sarl
rorb
mov
dec
mov
mov
cld
imul
sub
dec
shlb
pop
test
xchg
xchg
bound
cmpsl
sub
shll
test
nop
mov
dec
call
and
xchg
pop
rclb
into
xchg
pusha
mov
and
sbb
jmp
cli
lds
cmp
sbb
aad
sbbl
aas
stos
sbb
in
lock
xchg
inc
inc
add
cld
cmp
inc
sub
leave
dec
mov
pop
sar
inc
hlt
adc
xchg
jne
and
pop
mov
shll
jb
sahf
fs
test
push
inc
mov
xchg
aam
jae
int3
pop
add
jge
ja
and
xor
mov
mov
repnz
bound
and
jbe
add
add
lock
pushf
pusha
pushf
cld
cld
push
dec
lock
in
jecxz
add
lods
add
add
rol
imul
test
adc
movsb
sbb
inc
and
stos
sbb
int
and
sbb
mov
loop
xchg
pop
retw
test
or
sub
in
adc
mov
jno
jg
aam
scas
loope
push
push
xchg
sahf
shll
push
pop
dec
loope
mov
pop
push
or
push
adc
mov
adc
stc
push
dec
nop
mov
mov
push
inc
mov
aad
sbb
jge
stos
sbbl
mov
ficompl
mov
or
xchg
aad
loope
adc
addr16
cli
aam
fsub
add
call
mov
imul
xlat
cmp
sbbl
sub
out
je
in
dec
adc
xchg
cmp
jbe,pt
xchg
pop
xor
jl
jg
addb
adc
stos
mov
bnd
icebp
mov
or
repnz
stc
push
lret
jne
adc
cmp
xchg
dec
test
push
pop
fistl
les
sbb
jl
cmp
sti
sti
and
ret
push
pop
xor
sbb
fstl
jmp
xor
mov
scas
xchg
rorb
adc
jge
test
xchg
mov
inc
inc
cmp
push
xchg
add
or
jmp
imulb
popa
mov
out
xchg
dec
dec
sub
sub
pusha
jmp
addb
ret
mov
test
jge
mov
add
pop
cmp
in
xchg
or
inc
cli
dec
mov
sub
mov
jmp
ret
ret
rcl
cmp
lds
cmp
stc
sub
fmuls
push
sbb
jmp
adc
mov
cmp
imul
pop
mov
lcall
movsb
pusha
mov
mov
loope
dec
ss
mov
arpl
add
cmp
mov
jp
js
jne
jno
and
cmp
lea
mov
inc
jo
inc
or
mov
inc
cmc
into
lock
xchg
sub
xchg
pop
sub
jge
inc
movsl
popa
les
sti
jo
mov
push
pop
add
cmp
sbb
cs
sub
lds
mov
popa
and
fisubs
scas
mov
loopne
ja
add
jns
imul
pop
mov
push
icebp
pop
aaa
jge
jl
mov
cmp
cmp
int3
aaa
sbb
pop
mov
shrl
inc
push
out
jp
mov
push
imul
pop
push
popf
rclb
fisubrl
fisubrs
fsub
cmp
shll
clc
adc
cmp
pop
jp
mov
or
out
push
into
and
lock
cmp
je
push
mov
mov
push
iret
test
pop
pop
jmp
pusha
sbb
into
iret
lea
xchg
mov
and
xchg
mov
xlat
in
leave
inc
flds
das
push
mov
and
pop
sub
jmp
test
rolb
insl
xchg
add
hlt
cli
push
cld
loop
sbb
xor
sub
and
mov
add
sbb
ret
jg
mov
rcr
roll
nop
out
add
add
and
aam
xor
out
imul
adc
ss
dec
sahf
mov
cmp
neg
gs
addr16
in
adc
fldenv
and
stc
lret
sbb
nop
pushf
in
jle
jb
xchg
adc
imul
xchg
xchg
pop
inc
es
rcrb
xchg
push
out
outsb
push
mov
icebp
inc
in
lock
mov
adc
cmp
cltd
fnstsw
popl
dec
loope
dec
outsb
xor
out
push
fldenv
jo
ljmp
pop
and
sti
xlat
sub
mov
push
aam
push
lea
and
sarl
jnp
mov
pop
jl
shll
dec
mov
adc
pop
filds
sub
push
xchg
sub
insl
hlt
mov
push
cmp
mov
pop
arpl
lea
sbb
jp
ljmp
movsl
jns
aaa
bsf
or
mov
in
sbb
lret
insl
stos
stos
mov
and
int3
sub
call
fisttps
popf
add
sub
test
pop
sahf
outsl
into
jbe
cmp
out
lcall
movsb
add
in
std
mov
or
in
jnp
and
loopne
mov
xor
inc
mov
ja
add
push
sub
mov
mov
mov
cmpsl
xor
jl
sti
xor
and
cmc
xor
aam
aas
mov
lds
sbb
jbe
rcll
push
insb
xchg
inc
arpl
repz
lds
enter
add
dec
in
out
leave
nop
mov
out
ljmp
push
mov
mov
sete
enter
and
in
fs
fisubs
es
mov
pop
dec
mov
mov
or
xor
std
mov
test
mov
fsts
pushf
push
mov
sub
sbb
add
mov
cmpsl
dec
sub
mov
aad
jl
mov
sbb
aad
mov
iret
mov
cli
mov
test
sub
stos
jp
popf
fs
inc
fadd
push
je
out
in
xchg
jbe
call
jmp
rcrl
ret
sbb
test
stc
or
ret
gs
adc
stos
dec
scas
jp
lret
movsb
insb
xor
dec
out
cmp
addr16
xor
add
pop
sti
and
sbb
stos
fistps
repnz
xor
mov
mov
mov
aas
cmp
pop
jbe
add
movsb
pop
cmp
xor
jae
movsb
loope,pt
and
cmc
mov
insb
mov
adc
cli
adc
pop
mov
xchg
out
jmp
fiaddl
orb
mov
fadds
movl
mov
repnz
scas
xor
pop
notl
add
lock
xchg
sbb
test
bound
sbb
and
cmp
xor
insl
inc
sub
cmp
and
aas
sub
ret
fwait
sbb
cmp
cmpsb
cmpsl
mov
cwtl
aad
iret
and
add
inc
xchg
dec
xchg
mov
in
or
add
add
cmpsl
xchg
cld
loope
lret
mov
xor
in
pop
in
out
pop
cwtl
icebp
movsb
sbb
pop
mov
mov
or
mov
int3
iret
jg
lods
push
cltd
pop
lods
sub
sbb
outsl
stos
mov
rclb
je
xchg
and
push
push
sub
xor
movb
pop
pop
mov
fidivrl
lods
test
fwait
adc
inc
jp
adc
jge
inc
mov
aad
mov
xchg
inc
xor
mov
xchg
push
mov
in
lods
xchg
jg
sahf
pop
cli
cmc
sub
hlt
xor
add
pushf
adc
xchg
sub
jg
or
ss
add
or
lock
or
iret
hlt
in
dec
cmp
pop
push
negl
adc
shrl
mov
pop
xorb
mov
inc
iret
leave
mov
sub
fcompl
sub
out
scas
sbb
mov
mov
fdivrs
push
adc
add
arpl
test
and
pop
fwait
cltd
xchg
insb
xor
sahf
ds
movsl
xor
std
imul
or
cmpsl
inc
shll
out
xor
push
mov
in
arpl
pop
mov
cmc
xchg
loopne
mov
sahf
jno
push
adc
mov
ljmp
out
inc
sbb
lret
cs
or
add
inc
push
int3
cld
cltd
call
aas
sbb
in
mov
pop
xor
cltd
hlt
arpl
jo
mov
mov
loope
icebp
adc
stos
in
xor
mov
daa
ret
cmp
in
out
push
bound
dec
daa
add
scas
aam
ret
xor
iret
mov
xchg
loope
xchg
add
nop
xor
cmc
repnz
movsb
addr16
push
orb
add
mov
insl
inc
outsl
or
or
lret
mov
xor
inc
pop
or
jo
inc
rorl
jbe
dec
pop
xor
push
jecxz
cmp
testb
in
mov
cs
sti
xchg
push
dec
out
xchg
sbb
mov
jl
jg
xchg
leave
les
shlb
and
aad
mov
mov
stos
push
int3
cmp
mov
std
pop
push
push
pop
test
inc
pop
or
sbb
and
into
ljmp
dec
gs
jae
je
jp
jecxz
jle
adc
out
dec
inc
add
icebp
push
mov
jbe
out
mov
and
clc
test
sbb
mov
ret
out
or
push
loop
mov
aaa
stos
or
xor
mov
and
icebp
push
in
jecxz
cmp
adc
stc
sbb
adc
xchg
roll
enter
loop
mov
pop
lds
and
ljmp
outsb
out
gs
and
enter
jmp
cmp
ss
repnz
inc
sub
bound
dec
add
fs
shrb
out
push
sub
mov
in
mov
sbb
push
cmp
add
adc
nop
add
mov
cmp
lods
or
inc
scas
outsl
dec
out
movsb
int
iret
dec
push
mov
into
test
inc
ljmp
pop
cwtl
pop
out
cwtl
rcll
jns
lahf
mov
inc
pop
dec
addr16
and
jne
sti
lcall
sub
and
jg
push
adc
push
xchg
ljmp
add
inc
std
xor
shrl
lods
cmc
call
cmp
outsl
leave
xor
adc
lds
jae
inc
xchg
orb
aad
and
inc
inc
mov
filds
aad
scas
xor
lret
jle
cltd
fldcw
push
nop
leave
dec
and
loopne
outsb
out
jns
jecxz
xchg
jl
jecxz
sahf
inc
mulb
ret
jne
aaa
dec
mov
bnd
cmp
mov
int
xchg
repz
mov
xchg
call
add
rclb
sub
jb
lock
ja
mov
ficomps
fbld
jnp
popl
shl
adc
out
jl
jns
addb
pop
fldenv
mov
jno
adc
inc
std
sub
clc
push
jbe
sbb
arpl
cmp
xchg
xor
xchg
int
sbb
xchg
push
cmp
adcb
and
dec
or
in
lock
mov
mov
loope
out
and
push
dec
sbb
pushf
rclb
dec
aas
xor
movsl
cld
fsubl
out
pop
loopne
mov
cmc
out
fstpl
mov
aad
pop
cmp
xor
outsl
movsl
dec
mov
lods
and
int
sbb
fldt
daa
push
mov
std
rol
add
xor
cmp
mov
pop
xor
sbb
clc
push
pop
or
rcr
mov
mov
inc
outsb
ljmp
add
ss
xor
cmpsb
outsb
and
dec
sbb
orb
sbb
enter
cmp
ja
mov
mov
add
sarb
sub
inc
and
xor
mov
addr16
clc
pop
jp
mov
cmp
and
repz
lcall
adc
xor
cmp
mov
pop
add
insl
rcl
test
aad
fadd
push
cwtl
rcrl
sbb
fsubr
ljmp
rcpps
enter
andb
mov
mov
jnp
cmp
dec
dec
fwait
icebp
dec
sbb
mov
insb
pop
lea
lods
mov
pushf
shll
dec
pop
or
inc
pop
dec
int3
mov
insl
loope
je,pn
adc
incl
pop
jmp
outsl
cmpsb
push
popf
mov
inc
xchg
inc
test
je
cmc
test
inc
stos
test
shr
jne
xor
mov
pop
dec
mov
insl
mov
rorb
int3
jle
call
lcall
jae
lret
lea
xor
inc
mov
mov
shll
mov
ret
inc
loopne
pop
aaa
into
repz
popf
dec
xor
bound
loopne
mov
adc
ja
sti
or
dec
call
mov
mov
xlat
jmp
orl
jns
xchg
pop
out
cmpsl
mov
std
sbb
daa
jnp
jb
and
lea
cmpsb
bound
fidivl
aaa
push
xor
std
testb
incb
add
je
jb
cmpsb
mov
or
lods
repnz
fistl
data16
bound
inc
adc
arpl
ficomps
nop
pop
gs
movsl
mov
shlb
xchg
shl
test
fisubrl
jns
ret
js
popf
imul
sbbl
push
dec
mov
sahf
nop
add
add
loopne
cmp
mov
aaa
mov
add
add
lods
add
add
pushf
lahf
jg
pop
lods
sbb
das
push
movsb
lea
cltd
fsub
xchg
std
dec
ljmp
lds
xchg
xchg
jb
inc
sti
mov
lahf
jo
cmp
jbe
adc
add
es
jl
dec
ja
jle
lret
je
xchg
aam
repnz
ljmp
push
addr16
jnp
cmp
sub
push
js
push
das
push
scas
cltd
rcrl
mov
cmp
sbb
dec
cmp
sbb
push
adc
mov
mov
pop
cli
pop
pop
movb
leave
lret
lock
sbb
add
hlt
cmc
and
pop
das
dec
sub
icebp
lret
jl
sbb
fildll
out
lods
out
rorl
push
or
lods
and
adc
scas
jno
fs
out
aaa
lahf
orl
idivl
push
mov
sub
fistl
in
rorb
push
test
sbb
in
pop
iret
test
fstps
pop
push
jns
pop
mov
and
xchg
mov
lcall
add
test
jo
es
lock
xor
adc
lahf
pop
les
lock
test
icebp
or
cli
push
mov
mov
fstpt
fisubl
or
cli
pusha
add
imul
jb
push
dec
xchg
or
mov
outsl
and
xchg
xchg
sub
mov
mov
add
aaa
sub
test
pusha
icebp
out
dec
inc
inc
fs
pop
adc
push
int3
mov
add
sbb
call
inc
add
ffree
mov
cli
scas
mov
mov
sbb
or
jl
or
inc
cmp
mov
xor
mov
sbb
lods
mov
fwait
ret
mov
cmp
scas
xor
movsl
lahf
movsb
test
stc
xor
push
xlat
sub
stos
and
cwtl
scas
cwtl
rcll
je
lahf
ja
jnp
pop
xor
mov
mov
mov
adcb
movsl
and
xor
rorl
sbb
xchg
stc
jae
jns
lcall
clc
pusha
pop
fmuls
mov
xor
std
mov
ficompl
test
mov
mov
adc
or
dec
ds
gs
cmp
push
xchg
rorl
mov
loop
pop
ljmp
cmp
fistpl
and
out
pop
jecxz
dec
mov
xchg
push
cld
ljmp
dec
push
mov
dec
xchg
sbb
mov
mov
dec
push
or
sub
decl
aad
mov
push
add
ret
fs
into
in
xchg
lock
mov
out
mov
and
jnp
pop
lds
or
push
sbb
mov
cmp
pop
enter
mov
outsb
pop
ret
loopne
testl
test
mov
cmp
xchg
pop
insb
push
xlat
xchg
mov
dec
pop
cmpsb
cwtl
dec
adc
sarl
push
mov
sub
mov
jbe
jmp
repz
addr16
sbb
sti
add
mov
sub
mov
pop
xchg
pop
mov
rolb
add
mov
jns
outsb
xchg
cmc
add
fsts
cmpsl
out
addr16
test
into
push
icebp
int
lods
adc
push
xchg
sbb
lret
frstor
aas
inc
nop
sahf
and
mov
mov
fbstp
mov
inc
cmc
add
lods
add
add
adc
dec
xor
dec
jne
cmp
insb
jno
pop
test
outsb
je
mov
jnp
movl
mov
add
sub
aaa
nop
repnz
ret
jmp
xchg
incl
rorb
insb
std
xchg
jg
dec
push
std
and
dec
or
push
shrb
sar
inc
fwait
repnz
aaa
pop
adc
xchg
add
sub
xchg
test
lds
insl
lea
lret
popa
mov
jmp
xchg
xchg
sahf
lahf
xor
sub
push
jns
movsb
pop
mov
lahf
pop
out
push
inc
pop
aam
fs
in
mov
cmp
xchg
cmpsb
mov
push
pop
xchg
ss
aaa
mov
std
and
mov
xor
jmp
add
cmp
ds
iret
push
add
adc
add
mov
xchg
adc
sbb
sbb
sub
daa
nop
sub
filds
push
aad
cmpsl
imul
or
mull
ret
cmp
mov
idivl
nop
mov
popf
jmp
dec
aas
das
lods
sti
fsubrp
aam
sbb
bound
push
hlt
sahf
dec
aas
das
push
cmp
xchg
xchg
push
fdiv
sbb
es
or
add
int3
inc
and
test
pop
into
jle
sub
or
icebp
ja
mov
stos
arpl
lret
lock
push
popf
and
fidivs
ret
out
pop
push
das
in
mov
clc
int
pop
xor
push
inc
push
mov
pop
test
aad
js
sbb
mov
mov
mov
pop
je
mov
mov
push
push
movsl
insl
jno
push
mov
out
xchg
jb
xor
mov
mov
aaa
and
pop
push
xchg
xor
pushf
rcl
pusha
xlat
sub
daa
les
clc
test
jg
cs
ja
lea
mov
arpl
push
mov
fldl
aas
jp
jle
sub
push
enter
dec
mov
xchg
add
je
push
cmp
cmp
or
mov
insl
rolb
push
shll
scas
leave
sbb
push
insb
nop
leave
jne
cli
mov
adc
hlt
mov
add
jns
push
jge
and
cmpsb
adc
add
pop
cli
adc
pop
imul
mull
sbb
rorl
rcrl
xor
cwtl
vpminsw
mov
mov
pusha
stos
test
mov
lret
lods
ret
cmpsl
sete
inc
push
iret
movsb
pop
xchg
jno
push
lret
sub
or
pop
imul
push
sub
data16
pop
push
fmul
xor
daa
fsubl
push
jno
mov
inc
cmp
shrb
daa
stos
adc
in
sub
jns
jne
call
adc
mov
dec
push
sub
sahf
popa
sub
dec
enter
iret
mov
sbb
mov
out
lods
xchg
je
rcll
inc
cltd
push
mov
sarb
je
pop
adcb
stc
inc
pop
or
push
mov
and
out
mov
fimuls
lock
sbb
push
mov
add
fcomps
push
jb
enter
cmpsl
mov
add
and
cltd
out
lahf
idivb
js
jg
mov
clc
add
sbb
add
cmp
nop
mov
inc
aam
jg
push
xchg
mov
sub
or
