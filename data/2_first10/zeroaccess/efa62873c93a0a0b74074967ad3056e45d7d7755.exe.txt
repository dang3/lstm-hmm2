push
mov
sub
mov
push
movzwl
or
push
add
push
mov
xor
mov
add
mov
xor
mov
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
call
cmpl
jb
mov
dec
mov
dec
mov
movl
subl
mov
xor
add
mov
movzwl
sbb
mov
mov
orl
mov
adcl
mov
sub
mov
push
adc
pop
orl
sub
add
sbb
movl
mov
mov
or
movl
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
pushl
push
push
pushl
push
call
cmpl
jb
mov
adcl
mov
mov
add
mov
mov
mov
incl
xor
sbbl
add
mov
lea
mov
sub
mov
xor
andl
add
mov
subl
lea
movl
push
and
mov
adcl
xor
add
movl
push
mov
xor
mov
mov
adcl
push
addl
pushl
adcl
call
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
movl
xor
mov
inc
mov
lea
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
xor
inc
mov
adcl
sub
mov
movl
mov
mov
cmp
movl
je
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
xor
xorl
lea
or
mov
xor
sbbl
div
mov
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
sub
mov
pop
and
or
jnp
jnp
pushf
jnp
ror
aam
ret
add
xchg
mov
xchg
test
orl
ja
stos
jl
jno
jl
inc
mov
sti
nop
jl
or
rcrb
push
imul
out
sti
fldcw
ss
rcrb
cmpsb
enter
cwtl
neg
sti
jns
sbbb
pushf
push
scas
lock
mov
lret
mov
xchg
add
xor
xchg
lods
in
mov
test
inc
mov
in
cli
xchg
xchg
inc
testb
inc
aad
ja
sub
add
loop
sbb
inc
dec
or
pop
jnp
cmp
dec
mov
fisubs
pop
cmp
idivb
test
jns
fisttpl
cmp
nop
lds
inc
ret
mov
sub
jbe
xchg
scas
jae
fsubr
mov
outsl
mov
in
mov
inc
aas
mov
fwait
insb
cmpsl
data16
movsl
push
sbb
push
and
mov
mov
cld
fisubrl
mov
call
xchg
sub
mov
stos
xchg
repnz
ret
push
or
add
xchg
faddl
dec
aas
fidivrl
jmp
mov
xor
stc
push
mov
mov
decb
mov
nop
loop
jp
add
shrb
insl
mov
pop
cmp
adc
inc
cli
push
fistps
mov
jp
pop
stc
in
or
negl
sbb
sbb
repnz
mov
or
mov
loopne
stc
test
jo
adc
adc
mov
or
fistps
lea
imul
nop
or
push
in
hlt
daa
jl
pop
xchg
cltd
xor
stc
sub
rcrb
push
sub
loop
cs
sub
inc
and
jns
mov
inc
in
sbb
jne
add
sbb
jge
and
lahf
cmpsl
pop
adc
xorb
push
into
jmp
in
lods
dec
jecxz
ss
inc
out
sub
jecxz
and
sbb
stos
inc
adc
call
stc
fsubrl
popa
sub
inc
mov
adc
lret
loope
adc
mov
idivb
loopne
xchg
cmp
fcomps
xor
jno
out
mov
fadd
fs
cmpsb
in
xchg
loopne
dec
pop
mulb
lock
push
push
jmp
add
sbb
mov
dec
mov
sub
sbb
je
in
push
pop
call
shl
mov
data16
dec
les
push
mov
rcrb
push
xorb
cmp
mov
orb
into
insl
pop
inc
test
aas
xchg
pop
ret
xchg
repnz
mov
sub
aam
pop
xchg
rol
mov
hlt
jp
ret
push
imul
gs
fwait
out
dec
or
sub
push
gs
aas
xchg
xchg
xlat
cmp
mov
and
cwtl
pop
sbb
clc
test
inc
inc
jbe
push
mov
das
das
and
iret
in
add
jno
xchg
dec
add
or
fcompl
imul
sub
pop
jg
mov
push
scas
sti
jo
clc
add
movsb
addr16
imul
addr16
leave
cmpsb
repz
push
popa
lods
mov
pushf
mov
pushf
dec
and
lock
ds
mov
lcall
fucomip
dec
imul
sahf
xor
xlat
and
cmp
addr16
or
lods
fcompl
push
inc
mov
mov
je
lret
lods
mov
xchg
push
daa
adc
ds
fisubs
and
adc
addr16
scas
push
jb
popf
xchg
in
rcll
pop
add
xor
cltd
add
jecxz
lcall
add
xor
jnp
addb
ja
clc
scas
out
cmpsl
mov
xchg
lock
clc
lret
xchg
push
cmp
scas
inc
pop
push
bound
mov
in
dec
addr16
insb
jmp
jns
loope
add
push
xchg
cltd
popf
and
enter
test
push
xlat
push
pop
into
movsl
mov
push
popa
add
inc
mov
shll
sub
mov
out
fistpl
mov
push
cs
rolb
divl
dec
repz
push
int
or
or
jp
mov
dec
fsubrl
pop
xchg
mov
lret
ss
push
sbb
push
dec
popa
int
dec
xor
scas
je
les
lcall
cwtl
mov
ficoml
add
out
sbb
sbb
lret
lcall
out
mov
push
iret
lcall
hlt
cmp
nop
push
fmul
sahf
sub
stos
mov
jno
lret
cmp
and
jae
jbe
and
inc
jg
into
cmp
or
mov
pop
mov
loopne
sbb
sbb
adc
roll
hlt
mov
sbb
into
dec
imul
mov
cltd
outsb
sub
lods
fmuls
nop
hlt
jp
mov
or
test
insl
pop
cltd
mov
push
xor
popa
pop
mov
cmpsb
inc
dec
xchg
push
ret
cs
push
sti
mov
aas
out
loopne
sbb
rep
aad
xchg
movsl
sbb
aaa
aad
push
fsubs
cmp
arpl
gs
adc
mov
sub
arpl
insb
lret
rcll
xorl
pushf
xor
loope
sub
lret
movsl
xor
jmp
rcrl
and
outsb
loop
fnstenv
jge
ret
aas
test
mov
lock
dec
iret
dec
push
inc
fld
jne
gs
mov
add
sbb
fistps
mov
jnp
lahf
adc
push
pop
stos
icebp
adc
dec
movsl
out
decl
test
ret
jno
sbb
push
xchg
data16
add
pushf
fcmovnb
xchg
repz
decb
loope
dec
adc
rclb
cmp
push
outsl
xchg
push
xchg
faddl
stos
adc
jo
jae
call
push
push
jg
mov
jns
sub
je
fidivl
bnd
scas
xor
add
push
jp
mov
dec
push
je
stos
xchg
xchg
xchg
push
and
fcmove
mov
and
sarl
add
cmpsb
in
mov
fsubl
lcall
repz
adc
cmp
ja
in
ja
mov
mov
mov
push
dec
adc
iret
hlt
and
push
inc
push
cmp
jb
cmp
sub
loopne
and
pop
push
insb
push
into
cmp
movsl
mov
scas
sub
xor
test
insl
sarl
or
or
mov
push
movsb
mov
lods
inc
or
cs
jo
mov
xchg
jo
and
xchg
scas
pop
inc
mov
pop
adc
add
xchg
sahf
insb
cltd
shrb
jg
lcall
ss
rclb
pop
dec
icebp
xchg
imulb
fs
sbb
fs
outsl
mov
add
dec
outsl
cmp
mov
mov
adc
xor
push
cmp
lods
popa
nop
jbe
frstor
loop
xchg
pop
test
xor
inc
inc
adc
xor
mov
ss
enter
aam
push
lock
lods
dec
jg
repnz
mul
lret
mov
sub
sbb
mov
ja
xor
movsl
fwait
mov
inc
and
dec
mov
inc
pop
sub
adc
xchg
mov
inc
xor
les
ret
xor
fstps
inc
sub
mov
repz
jbe
mov
ret
lcall
jl
xor
pop
roll
push
cmp
mov
adc
lcall
es
jo
sbb
sti
push
xlat
mov
push
xchg
jg
inc
jge
mov
pop
mov
dec
stos
iret
xchg
loop
fistl
in
test
push
sbb
jp
jl
cmc
or
das
or
je
add
repnz
dec
fwait
je
cmp
push
xor
mov
leave
ret
cltd
inc
stos
ret
clc
push
cmp
clc
xchg
repnz
std
mov
mov
push
lds
cvtdq2ps
dec
lds
xor
repz
xor
sbb
sti
ja
into
lahf
sbb
jge
pop
sbb
xchg
dec
movsb
or
in
xchg
pop
inc
jg
cltd
adc
jo
jns
cltd
sbb
adc
add
inc
pop
dec
test
mov
lods
test
test
icebp
jnp
dec
mov
sbb
add
stos
fmul
test
inc
sub
enter
stos
xlat
adc
cmp
les
mov
push
dec
int3
pop
dec
mov
mov
and
xlat
lahf
xchg
or
out
pop
inc
js
adc
push
cs
cmp
cmp
mov
ret
lret
pop
cmp
icebp
cwtl
arpl
mov
sti
rcr
dec
movsb
mov
push
mov
pop
pop
daa
jns
fcom
int
xor
inc
cmc
xor
popf
cltd
mov
jp
outsl
or
fisttpl
movq
out
or
scas
inc
insb
xchg
rclb
xchg
test
xchg
and
lods
xlat
xor
cmp
adc
cmpl
sahf
push
push
jae
mov
cmpsl
outsb
fstl
mov
ds
push
movsl
dec
jecxz
xlat
add
xchg
mov
test
xchg
mov
rcll
iret
out
push
ljmp
jae
push
mov
sbb
rcr
dec
insb
and
sbb
addb
mov
js
stos
pop
cmpsl
stos
dec
and
enter
dec
scas
sarl
test
xor
inc
xchg
sbb
sahf
les
and
jmp
sar
sbb
jo
inc
fwait
cmp
lods
dec
outsb
fs
cmpsl
outsl
cltd
push
push
sarb
jns
bound
push
mov
int3
jne
jno
out
daa
insl
mov
imul
sub
push
movsb
pop
rorl
sahf
jb
fcmove
testb
or
or
dec
cmp
fcomps
lds
test
dec
mov
jmp
rol
jmp
ljmp
sbb
cmp
inc
jmp
popf
mov
fsubr
xor
out
mov
popf
mov
push
into
pop
sub
and
jge
call
pop
adc
sub
and
leave
mov
inc
repnz
nop
repz
out
scas
push
mov
or
cmpsl
cmpsl
ja
mov
sub
and
in
push
or
repnz
icebp
mov
push
xchg
or
mov
pop
mov
ficoms
jae
lods
es
sti
subb
inc
pop
and
stos
mov
pop
lock
fidivs
hlt
sahf
enter
fnsave
xor
es
push
stos
xchg
jne
inc
mov
lods
jmp
ja,pt
jg
dec
lea
lods
js
in
sub
frstor
xchg
mov
gs
insb
pusha
aas
and
mov
icebp
dec
mov
mov
repnz
inc
outsb
addb
sarl
insb
sarb
dec
jg
xor
jmp
ds
orb
mov
cltd
adc
rcll
add
adcb
xor
jmp
fwait
in
cmp
mov
ds
dec
loopne
cmpsl
adc
fnstcw
es
lods
imul
scas
sub
inc
xchg
dec
pushf
cmpsl
or
push
cmc
std
sbb
xchg
xchg
add
cmp
test
nop
push
fldenv
mov
mov
lret
push
or
adc
scas
shl
fwait
pop
sub
cmp
call
enter
iret
icebp
push
in
and
in
or
pop
ja
loope
push
sub
rorb
pop
push
jmp
idivb
sbbl
jnp
fnsave
test
pop
pop
ljmp
mov
daa
sub
inc
mov
lds
dec
sub
fistps
mov
aam
cmpsl
insl
xchg
mov
sbb
mov
movsb
imulb
jne
lret
and
nop
or
push
xchg
push
fwait
sbbb
add
push
cmp
mov
std
cmp
sbb
xchg
leave
inc
loope
cmp
aas
adc
cmp
and
inc
int
out
sbb
out
mov
jne
mov
popf
lahf
scas
xor
xor
mov
mov
repz
lock
leave
inc
push
fwait
jo
sbb
push
sub
fdivr
pop
and
pop
dec
sub
stos
leave
rorl
and
mov
out
iret
jb
and
mov
jge
sbb
xchg
and
inc
mov
outsb
pop
sub
jle
ja
sub
inc
sub
push
push
enter
out
push
mov
add
xor
xchg
hlt
stc
mov
mov
cli
cwtl
pop
pop
and
mov
insl
lods
lods
pop
pop
in
mov
xor
mov
cltd
in
popf
sbb
pop
jne
push
imul
movsl
cmp
mov
mov
scas
push
sar
sub
xor
sub
iret
aam
cs
test
dec
mov
pop
fs
neg
inc
push
cmpsl
fistl
arpl
inc
mov
movsl
push
push
jmp
sub
jecxz
faddl
lret
mov
cmp
jle
dec
xchg
pop
mov
lea
sti
mov
add
test
mov
adc
ret
xchg
sbb
inc
cs
inc
xor
iret
stos
and
xchg
jge
add
lret
addr16
pop
pop
mov
cmc
sbb
out
or
dec
ss
repz
pop
xor
scas
scas
inc
pop
lahf
lret
sub
add
rcl
shrb
or
cmp
outsl
add
lds
outsb
das
je
les
insb
in
xchg
and
repz
into
cmc
lcall
lret
fadds
sub
repz
xchg
pop
mov
scas
mov
xchg
stos
jmp
jl
popf
cmp
arpl
pop
pop
jno
pusha
lock
insl
mov
cmp
cmp
mov
sahf
jmp
push
loopne
aad
outsl
testb
push
das
imul
fisttpl
sti
repz
cmp
and
mov
and
or
arpl
cli
in
out
jb
nop
decl
aas
outsb
out
xor
fyl2x
jbe
inc
inc
or
fimuls
pop
jb
sub
in
scas
ljmp
fwait
cs
pop
faddp
sbb
adc
jnp
mov
xchg
xchg
les
mov
pop
push
in
es
cmp
and
bound
addr16
xlat
push
jmp
xor
scas
js
add
pop
inc
imul
pop
dec
enter
ret
mov
mov
rolb
or
mov
add
icebp
out
xchg
enter
flds
mov
push
mov
mov
xor
je
lahf
mov
sti
and
push
inc
push
xor
push
mov
std
test
popa
ret
and
jno
mov
pusha
js
or
hlt
movsl
shrl
push
inc
jge
scas
pop
ret
out
push
dec
lret
popa
push
sbb
ljmp
cmc
inc
xor
aad
inc
dec
cmpb
test
inc
sarb
rcrb
jge
loop
pop
aam
inc
pusha
xor
daa
mov
sbb
bound
cmp
cmc
xor
mov
mov
pop
lods
cmp
cmp
jne
mov
je
mov
and
mov
push
xor
xchg
inc
stc
mov
add
xor
cmc
sbb
adc
sub
stos
enter
pop
adc
arpl
inc
call
cli
fistpl
pop
fdivl
fstpl
adc
pop
pop
inc
in
ja
add
fidivrs
pusha
std
fdivs
jno
jge
orl
sbb
add
pop
jge
nop
jns
aaa
roll
cli
stos
mov
test
mov
cwtl
push
in
mov
jae
jl
pop
loope
into
in
xchg
mov
and
in
popa
aas
test
inc
daa
mov
and
cmp
mov
in
test
or
and
and
push
xchg
or
or
sbb
imul
aas
jge
xor
and
sub
sbb
aam
sub
dec
test
pop
icebp
gs
adc
rcl
test
dec
shll
outsb
fnstcw
sub
fcomp
clc
out
lahf
call
fldenv
pushf
jnp
push
xchg
stos
sbb
mov
xor
mov
adc
mov
sbb
push
and
cmc
fstpt
xor
xor
aaa
xchg
push
sahf
sbb
mov
test
stos
mov
mov
push
ret
cmc
mov
insb
sub
inc
pop
fs
mov
adc
aas
sahf
adcl
or
ss
cmp
sbb
lahf
je
rcrb
dec
or
loope
mov
nop
xchg
ljmp
pop
mov
add
test
cmp
push
stos
scas
lret
mov
and
js
xor
mov
mov
and
shll
or
xchg
aad
cmp
lret
arpl
je
dec
sub
fcomip
js
into
pop
xor
out
mov
xchg
pop
jecxz
scas
das
add
imul
or
lods
xor
jecxz
sarl
jecxz
fadds
inc
popa
in
sbb
jno
and
mov
xor
rcll
loop
gs
adc
ljmp
daa
jmp
inc
out
pop
aaa
push
adc
mov
add
or
inc
push
jge
imul
pop
pusha
cmp
push
mov
jmp
sbb
adcb
call
pop
sbb
xor
das
mov
std
test
ret
aas
sarl
arpl
into
push
notl
negb
dec
std
mov
fldt
mov
std
and
adc
testl
xor
movsb
push
movsb
xchg
inc
push
inc
cmp
mov
or
jmp
add
inc
sbbl
popa
outsb
je
mov
sub
mov
dec
xor
cmp
in
inc
imull
jl
enter
sti
data16
inc
cmc
pop
mov
int
or
in
lcall
xchg
and
mov
icebp
js
test
cmp
xor
data16
jg
outsl
call
mov
lock
adc
jge
jle
xchg
je
rcrb
xchg
shlb
mov
sub
mov
sub
cli
xor
jmp
mov
or
mov
adc
push
xor
lret
and
inc
and
pop
pop
jmp
repnz
inc
jns
clc
jbe
das
adc
gs
clc
subb
bnd
add
adcb
lods
pop
sarb
adc
or
jbe
mov
or
sub
and
das
push
push
sub
sbb
cli
aad
mov
loop
pop
ficomps
mov
xchg
push
adc
lds
sub
xchg
xchg
addr16
lret
cmpl
lret
and
inc
int3
test
cmp
repnz
sbb
jno
xchg
sti
outsb
mov
dec
aam
cmpsl
sub
icebp
rcrl
fistpl
push
cmpl
mov
int3
and
inc
popa
test
inc
out
push
mov
loope
out
ljmp
in
fimull
xchg
or
fcomi
push
bound
mov
push
rcrl
lcall
xchg
sub
lret
add
mov
pop
jmp
mov
mov
xor
jle
leave
sbb
cmp
mov
jp
mov
mov
sub
xchg
lret
xchg
cmp
adc
adc
and
psubusb
jp
jbe
pop
or
xchg
mov
xchg
in
sbb
cmp
out
lcall
push
mov
mov
mov
adc
jge
cwtl
and
stos
ret
and
sub
and
xchg
stc
outsl
mov
or
mov
xor
dec
inc
outsl
jne
sti
lahf
adc
sbb
js
mov
fsub
push
mov
testl
adc
xor
push
cmp
clc
sti
rorb
cld
arpl
sbb
and
push
xor
xlat
inc
nop
inc
sbb
lea
xchg
outsl
xchg
jnp
sub
jle
jbe
daa
jle
cmp
mov
mov
loope
sbb
stos
data16
shrb
mov
in
push
and
xchg
lret
inc
jmp
lret
lock
icebp
or
pop
sub
into
xor
cltd
sub
cmc
cmp
int
fisttpll
lods
cmp
mov
mov
adc
aam
call
fstpl
iret
stos
xchg
add
mov
aaa
icebp
popf
push
movsb
jle
mov
mov
mov
dec
pop
xchg
sbb
flds
jmp
push
push
cmp
fisubrs
out
int3
add
aad
push
xchg
lods
add
stos
xor
enter
jl
mov
xchg
jmp
push
int
mov
ffree
jp
xor
cmp
push
xchg
add
das
dec
mov
sahf
lds
jmp
push
mov
pushl
inc
sbb
das
aas
add
xor
cld
fwait
xchg
jmp
dec
lcall
add
and
repnz
sub
and
pop
movsb
inc
cltd
sub
add
sub
and
jp
mov
std
gs
xor
mov
pop
xchg
mov
out
mov
jne
and
pop
lods
sbb
add
push
fisttps
lods
fbstp
mov
jp
aad
movsl
mov
int3
sbb
xor
cmp
mov
mov
mov
add
mov
mov
cmp
pusha
add
movsl
and
inc
and
in
leave
outsl
enter
cli
pop
fs
xor
add
cli
sbb
sbb
pop
push
xchg
jb
lods
lock
dec
dec
mov
xorb
jmp
add
pop
fcoml
mov
nop
pop
xchg
lea
jno
sti
out
in
xchg
mov
pusha
mov
xchg
cmova
add
ds
adc
fnstcw
and
addr16
push
mov
inc
push
incb
mov
and
cmp
out
jb
fwait
popf
push
inc
cwtl
sarb
es
bound
aaa
pop
sahf
xchg
arpl
pop
xor
stc
and
roll
mov
or
xor
rol
dec
pop
mov
hlt
cmpsb
push
in
sahf
push
loope
cwtl
es
jp
movsb
jbe
mov
jne
xchg
fs
cmp
cmp
daa
xlat
mov
xchg
cmp
sub
call
jbe
dec
xor
mov
mov
mov
arpl
daa
mov
movsb
pop
rcrb
xlat
sub
leave
sub
pop
jl
mov
cmpl
push
imul
sub
in
lds
lock
sbb
repz
adc
ljmp
xor
jo
ds
icebp
jge
outsb
call
in
push
or
shlb
xchg
iret
dec
cmc
arpl
enter
dec
fucomi
imul
in
icebp
xor
into
ret
in
bound
cmc
lods
mov
cmc
incl
and
push
sub
add
ljmp
push
fxch
jno
jno
lret
xlat
stc
mov
pop
mov
cmp
xchg
add
sub
jmp
mov
test
out
sti
data16
stos
pop
sbb
fwait
scas
aaa
and
loop
pop
ljmp
nop
pop
inc
jns
cmp
cmp
hlt
cltd
andl
push
fadds
xor
sub
cli
addb
jle
mov
xchg
dec
add
fnstenv
adc
add
push
add
mov
fsubs
dec
das
ret
movsl
repnz
shrb
stos
icebp
out
push
mov
jb
test
push
sbb
sbb
mov
cmp
adc
inc
pusha
sbb
or
cwtl
mov
jno
popa
jo
xor
imul
sbb
cmp
cmpb
in
pop
dec
mov
out
nop
push
lds
inc
push
popa
push
test
es
cmpsb
es
loop
and
push
pop
xchg
push
push
daa
out
lds
mov
leave
fmuls
mov
sahf
and
sbb
popf
subl
sub
xor
fisubrl
fildll
movsb
push
jl
xchg
clc
sbb
aas
inc
pop
or
aam
dec
pop
add
mov
pop
sub
add
xor
sbb
pop
cmp
xor
xor
insb
add
cltd
and
andl
inc
and
xor
dec
fxam
pop
mov
aaa
outsb
adc
add
mov
lds
adc
imul
fldt
jnp
scas
cs
jns
lds
fiaddl
jge
aas
test
cmp
pop
mov
inc
imul
or
cmpsb
fldenv
fisubs
mov
adc
or
jb
in
incl
mov
jbe
pop
ja
and
xor
js
and
mov
out
lods
daa
sub
add
mov
cmpsl
ret
popa
js
ret
lret
je
sub
xchg
shrl
repz
out
popf
sbb
dec
xor
sahf
ror
jp
mov
jecxz
jbe
div
xor
leave
negb
dec
mov
bound
mov
aad
jae
push
imul
pop
jmp
and
imul
pop
call
xchg
movsb
lahf
push
outsl
hlt
push
pop
int
dec
test
test
mov
nop
ss
jmp
jne
mov
add
dec
test
adc
mov
mov
call
mov
das
frstor
or
scas
stc
not
lahf
pop
daa
stos
dec
lret
push
insb
mov
inc
and
ficoms
cmc
dec
in
and
pop
mov
cmpsl
clc
daa
fbstp
mov
enter
sbb
cmp
mov
pop
je
divl
inc
add
subl
pusha
js
inc
shlb
aaa
and
push
sahf
xorb
mov
dec
inc
imul
mov
dec
push
pop
insl
js
popl
ret
repz
gs
sbb
and
outsb
mov
mov
sbbl
mov
pushf
mov
jo
scas
lock
push
enter
lods
fbstp
mov
xorps
mov
je
mov
loopne
cmpb
inc
adc
or
imul
jle
sbb
paddq
push
mov
sub
daa
jp
iret
cmpsb
repnz
scas
mov
cmp
cmpsl
push
dec
sbb
mov
ljmp
mov
cmp
push
jle
add
add
es
dec
xor
pop
dec
mov
nop
xor
mov
mov
add
mov
rorl
movsb
insl
push
imul
stos
sbb
into
sub
hlt
bound
jns
or
push
xchg
adc
pop
mov
xchg
scas
push
add
push
jnp
shlb
shrb
out
push
out
negb
hlt
popa
push
sbb
fwait
jge
repz
cltd
jae
jbe
int3
jmp
push
add
xchg
insb
dec
mov
ret
jae
xor
push
inc
int
and
ficompl
add
fidivs
stos
xchg
outsb
lea
iret
dec
mov
or
mov
lods
mov
or
fcoml
repnz
push
push
and
sbb
mov
xchg
xchg
mov
pop
push
notl
pop
lret
add
pushf
iret
negl
cmp
add
scas
pusha
inc
cld
xchg
push
push
add
and
int3
insb
fld
dec
aad
add
shrl
addl
xor
addr16
jns
and
fwait
idiv
nop
inc
into
call
xor
cmp
cltd
adc
sbbl
rcr
js
rol
je
mov
leave
subl
jp
stos
gs
out
pop
ret
pop
mov
adc
test
jnp
jno
out
mov
jnp
adc
enter
mov
popa
scas
loop
inc
pop
stos
mov
mov
and
or
mov
repz
lret
xor
pop
mov
sub
in
rcr
push
cmp
push
bound
mov
ljmp
imul
mov
mov
lea
rcll
fsts
lds
xor
cmp
sbb
sarb
ret
adc
sbb
cmc
cmp
cli
jg
cmp
push
pop
adc
lcall
push
call
into
xchg
ja
xor
jns
test
mov
ds
dec
xor
loopne
fisttpl
aaa
bound
aaa
loopne
pusha
cmp
pop
pushf
mov
popa
sbbb
mov
in
or
dec
xchg
or
and
shll
pop
filds
enter
pop
jb
dec
arpl
xor
ret
dec
jg
inc
scas
inc
sbb
pop
pusha
mov
inc
sbb
ret
ja
adc
sub
sub
push
xor
jp
xchg
cltd
out
and
or
sbb
dec
lcall
jmp
loopne
setg
imul
jle
xor
cmp
cmpsb
mov
and
adc
sbb
hlt
push
mov
push
jmp
jbe
inc
xchg
ret
std
outsl
pop
gs
pop
scas
jbe
popf
pop
bnd
bound
lahf
cwtl
sbb
xchg
stos
pop
dec
add
in
add
ds
dec
aas
dec
out
cmp
cmp
sbb
and
gs
push
ret
and
movsl
dec
mov
fists
cmp
mov
dec
aaa
adc
int3
cli
mov
mov
add
nop
shlb
outsl
adc
scas
mov
add
enter
mov
jecxz
out
lods
shll
inc
adc
shlb
pop
fwait
mov
bts
out
test
out
in
and
mov
rolb
data16
mov
push
sahf
aam
mov
jnp
pop
cmp
fbstp
pop
scas
stos
cmp
sbb
pop
fldl
lahf
repz
mov
dec
repnz
mov
call
std
add
aaa
outsl
and
cmp
mov
loopne
test
mov
fcompl
and
xchg
mov
mov
jne
jmp
out
pop
push
adc
pop
bound
fcoml
sbb
mov
cs
outsb
loopne
jg
lahf
push
push
mov
adc
or
pop
stc
scas
mov
cmp
pop
and
xor
add
icebp
imul
ficompl
int
inc
lods
cs
or
xor
daa
pop
es
int
in
adc
sti
inc
pop
xor
div
adc
clc
and
xchg
xchg
loopne
int
lret
cmc
aaa
cmp
and
mov
inc
xorl
adc
lret
xchg
xlat
or
fcmovbe
mov
lock
xor
adcl
xor
sub
movl
cmp
jne
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
andl
xor
adcl
add
sbbl
add
movl
mov
cmp
movl
jae
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
jmp
mov
decl
mov
orl
xor
xorl
add
lea
movl
mov
movl
mov
cmp
jbe
addl
addl
jmp
addl
mov
xor
sbbl
inc
incl
sbbl
add
movl
cmp
jb
mov
xor
mov
add
mov
xor
notl
mov
sub
add
subl
mov
xor
sub
ror
xor
or
mov
mov
mov
mov
xorl
sub
xorl
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
jmp
lock
pop
pop
insb
js
mov
std
hlt
pushf
jnp
hlt
pushf
jnp
cwtl
fst
pop
shr
sub
mov
cli
into
add
testl
int
out
cmp
dec
and
push
es
repz
mov
pop
loopne
lret
test
jne
push
scas
and
out
cmp
clc
dec
and
aas
popa
xor
mov
imul
movsb
out
lds
inc
imul
jnp
ret
js
dec
loope
xchg
mov
in
leavew
pop
dec
xchg
pushf
inc
jg
cltd
fsubl
fs
pushl
fcomp
out
in
loop
and
test
sahf
jecxz
pop
cmc
sub
pop
lahf
call
call
push
inc
icebp
mov
and
gs
push
das
cmp
dec
inc
mov
lahf
outsl
inc
pop
xlat
test
ljmp
popf
push
xchg
mov
push
sahf
jbe
dec
sub
mov
xchg
xchg
jge
sub
mov
cmc
xlat
fcmove
stc
cmp
andb
sbb
arpl
pop
mov
fldcw
pop
gs
nop
xor
je
sub
hlt
add
or
xor
dec
or
jb
dec
xor
aad
fiadds
mov
fstp
mov
cmpsl
or
bound
fldz
or
pop
pop
cmp
sbb
in
movsl
mov
nop
mov
and
adc
outsb
fistpll
sbb
enter
jmp
enter
into
pop
push
pop
pinsrw
pop
sbb
mov
daa
test
dec
call
fcoms
shll
test
lret
cs
mov
lret
dec
sub
in
mov
int
jge
mov
mov
ljmp
jae
iret
dec
pop
inc
ja
aas
push
outsb
sbb
push
cmp
imul
and
and
popf
pop
fisubrl
dec
adc
je
mov
ss
or
push
testb
jg
push
and
add
lods
or
sbb
hlt
pop
or
outsb
adc
inc
xor
leave
fstpt
lret
add
push
outsb
jg
jecxz
or
cmp
repz
xchg
mov
mov
sbb
sbb
mov
je
repnz
or
rclb
dec
mov
cmpsl
dec
stos
adc
test
fistpll
pop
imul
aam
pop
add
and
xchg
jmp
inc
pop
fidivrl
sub
movsl
cmp
xchg
and
fdivrs
cmp
dec
stos
outsb
jns
ud1
lods
mov
push
ret
ret
fldcw
out
push
jecxz
xchg
push
or
clc
xchg
lret
lods
pop
dec
cli
adc
jg
loope
fwait
out
mov
addr16
add
cltd
andl
lahf
lcall
das
mov
mov
adc
notb
je
adc
pop
push
sbb
push
xor
cmp
xchg
sbb
xor
or
cmc
aam
dec
popf
in
adc
xchg
mov
jns
mov
mov
ficompl
inc
sahf
lret
mov
imul
xchg
cwtl
cwtl
test
sub
cmp
cmp
cmp
xchg
cld
das
add
cwtl
mov
or
sbb
lret
in
lds
call
mov
add
test
hlt
nop
imul
insb
mov
scas
push
dec
fs
push
scas
js
ret
mov
sub
xor
gs
ljmp
shlb
jg
imul
push
dec
call
in
mov
mov
clc
inc
repz
jle
cmp
and
cltd
cmpsb
sub
push
cld
adc
mov
fidivrs
sbb
je
sub
js
shlb
xor
shlb
pop
lock
pop
ljmp
stos
xchg
in
or
mov
xor
test
pop
ja
mov
jbe
stos
jns
mov
cmpl
adc
add
roll
pop
inc
cmpl
jo
mov
fidivl
insb
rcl
stos
pop
inc
add
ja
repz
and
movsb
hlt
pop
jle
pop
and
fwait
mov
jno,pt
or
sub
scas
dec
repnz
mov
or
mov
imul
test
gs
jno
inc
sbb
mov
push
push
mov
negb
mov
fdivl
ja
push
sahf
repnz
jl
sbb
and
adc
fs
js
roll
bound
pushf
pop
mov
cmpsb
xor
cmp
decb
jecxz
test
sbb
push
movsb
add
mov
lods
and
outsb
xor
pusha
add
push
push
xor
pop
pop
mov
arpl
sbb
into
loope
test
roll
sbb
arpl
sbb
adc
cmp
enter
and
add
xlat
mov
repnz
adc
mov
enter
out
pop
fisubs
pop
jnp
sub
das
pop
repz
add
xchg
sub
mov
cwtl
pop
les
cld
shl
sub
stc
movsl
jns
dec
loop
pop
pusha
xchg
add
sub
mov
push
push
adc
imul
sbb
rolb
sub
cmp
inc
cld
sbb
mov
mov
fdiv
mov
pop
test
xchg
cmp
loop
push
mov
daa
xor
jb
or
insl
pop
test
jnp
pop
xchg
rcl
fiaddl
stos
outsl
mov
ss
inc
shr
jg
mov
fldenv
xchg
jle
mov
push
pop
int3
mov
sub
mov
inc
mov
pop
in
inc
clc
outsb
je
inc
inc
inc
lret
push
xchg
push
addr16
fdivrs
daa
dec
and
push
mov
out
leave
int
call
lods
aam
aam
lret
xor
push
int
test
fwait
ds
jae
jb
lods
xchg
sub
shll
jecxz
sbb
add
and
cmp
push
call
mov
and
xchg
sbb
mov
lea
iret
movsb
sti
mov
loop
shrl
mov
add
push
mov
push
out
lock
push
jmp
lcall
mov
and
ljmp
lret
loopne
test
cwtl
das
mov
mov
mov
test
outsl
test
hlt
inc
dec
data16
iret
frstor
push
inc
jns
xor
sub
xorl
js
leave
jb
pop
xchg
adc
xchg
jns
pushf
push
ljmp
sub
cmp
int
bound
lods
adc
pushf
push
push
or
in
jle
sbb
rcll
lea
dec
cmp
aam
adc
loope
negb
jae
dec
scas
and
and
cmp
dec
test
mov
movsl
stos
repz
mov
notb
in
cmp
loop
or
ss
lea
mov
sbb
sbb
call
test
mov
addl
dec
sbb
mov
xchg
add
sbb
fldcw
and
mov
jle
popa
inc
xchg
rorl
xchg
push
inc
lock
xchg
pop
ficompl
pop
js
in
add
mov
lods
stc
incb
dec
xchg
mov
sub
inc
scas
add
out
ret
pop
mov
dec
and
mov
push
mov
stos
mov
loop
mov
daa
imul
and
lcall
js
xchg
sbb
sbb
push
arpl
mov
imulb
rorb
gs
jno
adc
roll
insb
sar
movsb
cmp
sar
push
sub
stos
pushf
dec
mov
sub
mov
icebp
es
pop
mov
mov
jae
fisttpl
dec
dec
mov
xchg
jno
das
repz
fcomps
out
cwtl
sub
cmp
jg
ss
outsl
arpl
mov
cld
out
scas
in
mov
outsl
xchg
dec
adcl
xlat
repnz
aad
pop
pop
std
adc
inc
or
lcall
imul
jmp
mov
rcrl
aam
sbb
test
jo
daa
mov
cmpb
int3
pusha
mov
jmp
aaa
pop
mov
and
add
push
or
movsb
and
mov
or
daa
mov
mov
into
xor
js
ja
out
push
inc
cs
or
cmpsl
cmp
les
jle
jne
and
inc
pop
cmp
jb
out
fwait
cmp
mov
sarl
jl
or
jge
lret
ret
or
or
test
and
push
outsb
mov
xor
push
sbb
idivl
jge
mov
push
int3
jl
cmp
mov
aas
out
outsl
lret
mov
xor
adc
hlt
ds
and
mov
scas
mov
push
iret
int3
cmp
int
inc
jb
inc
fnstenv
pop
aad
fdivrl
aad
daa
les
add
cmpsl
lcall
lods
lcall
stc
insl
scas
cmpl
xchg
jmp
fnstsw
aad
inc
roll
dec
out
jo
jno
adc
and
in
mov
xchg
sub
jb
add
pop
fstpt
push
lods
je
or
aaa
or
jno
and
outsl
cmp
lods
fcmovnb
lret
dec
imul
lret
ja
jbe
enter
cld
and
in
pusha
xchg
adc
test
mov
xlat
jns
mov
mov
mov
andb
ret
lea
stos
icebp
sbb
out
popa
fndisi(8087
cmc
cmc
dec
xchg
mov
lret
mov
cmc
mov
aad
push
nop
pusha
pop
and
popf
fs
jge
sti
push
in
sbb
push
in
push
push
add
jp
mov
sbb
rclb
and
ret
jecxz
enter
push
imul
cli
mov
neg
cld
scas
ret
adc
and
clc
mov
push
in
pop
xor
mov
dec
xor
ja
inc
sahf
jle
xchg
add
xor
push
in
aaa
fldcw
sub
mov
add
stos
cltd
and
pop
pop
jl
in
mov
popa
sub
sbb
mov
mov
pop
in
mov
push
or
or
add
out
or
sub
jne
das
adc
dec
xor
and
cmpl
stos
into
pop
add
and
pop
outsb
pop
inc
mov
push
mov
lds
fnsave
lock
sub
dec
into
lret
out
rcrb
mov
stc
xchg
stos
sti
out
psubsw
daa
cmp
pop
movsb
inc
push
sub
inc
arpl
inc
nop
jge
pop
sbb
mov
pop
xchg
mov
add
loopne
outsl
ficoms
sub
mov
rorl
cmpl
fidivl
in
lcall
push
subb
xlat
out
mov
ja
and
pusha
jle
xchg
arpl
scas
leave
cmpsl
jb
dec
xchg
sub
inc
dec
sahf
cli
in
jbe
dec
pop
cmp
stos
mov
pop
pop
sbb
ljmp
bound
ljmp
add
mov
add
add
inc
sbb
and
mov
icebp
mov
lods
daa
rcrb
jo
ret
cs
sarb
lock
inc
jl
and
negb
cmp
sbb
popf
inc
push
jmp
xchg
out
popf
cmp
mov
imul
inc
sub
sub
enter
cmp
les
fcompl
mov
pop
jmp
movsl
push
mov
add
pop
fmull
imull
sub
adc
dec
add
cmc
sahf
nop
and
push
daa
sub
xchg
adc
cmp
inc
lret
roll
cmp
sbb
cmp
out
stos
arpl
fs
je
adc
dec
ja
ljmp
dec
hlt
ret
cmpsb
mov
mov
dec
fiaddl
add
push
fs
outsb
add
mov
xchg
test
xor
aad
sbb
push
subb
push
ror
fstps
in
jo
xor
cli
mov
out
push
push
loopne
out
repz
fsubrs
cs
jmp
xchg
mov
inc
or
pop
push
mov
and
or
jo
imul
adc
and
push
ljmp
mov
out
aaa
mov
sbb
enter
sub
cmpsb
jecxz
pop
hlt
das
lahf
cmp
pop
arpl
sub
into
xchg
imul
rolb
aas
fcomps
push
dec
popa
mov
or
jg
xchg
jle
inc
or
cs
jno
mov
rolb
addr16
pop
inc
and
fisubs
imul
push
lret
push
std
fnstcw
sti
sub
and
lods
cmp
int3
hlt
xchg
cmp
mov
rcll
and
push
fsubrl
jo
push
shl
test
test
xor
das
xchg
add
dec
ret
fstp
push
fiadds
aam
subb
cld
iret
pop
xor
repz
sahf
push
pop
shrb
or
and
popa
xor
orb
orl
enter
xchg
sub
jae
dec
mov
mov
movsl
push
mov
cld
mov
mov
out
adc
cmp
jb
sarl
sub
sarb
cmp
outsl
xchg
pushf
stos
popf
cld
or
mov
es
aaa
pop
push
mov
jbe
test
aas
popa
outsl
cwtl
jmp
xchg
fisubrs
ficompl
jmp
idivl
nop
pop
adc
dec
xor
mov
sti
xchg
jb
iret
scas
sub
movsl
jecxz
mov
setle
cmpsb
lds
push
inc
jnp
fists
aad
js
insl
cld
cs
loopne
jle
xchg
out
into
mov
xor
into
ffreep
int
in
ret
nop
bnd
push
mul
mov
adc
mov
stc
imul
dec
jne
mov
push
cmpsb
mov
cmpsb
jg
test
aam
shr
push
push
or
sbb
mov
and
jmp
les
push
dec
cld
in
leave
movsb
fistps
pop
fidivs
jbe
pop
sbb
inc
nop
int
mov
xor
les
dec
orb
lret
and
je
cmp
lock
or
ds
jle
and
inc
and
add
push
and
ja
pop
mov
dec
ljmp
cmp
movsb
dec
sbb
shll
notl
xor
popf
push
out
imul
lret
lods
cmp
pop
sti
into
stc
jp,pn
fadds
out
cli
dec
not
dec
mov
js
sub
xor
aas
fdiv
in
cmpsl
ret
sub
repnz
xchg
testb
adc
test
push
inc
cs
fmull
lods
jo
jae
jg
cmp
mov
mov
cmpl
arpl
jnp
outsb
mov
divl
jle
cs
sbb
jo
lods
xor
push
push
sub
xor
call
mov
cmpsb
lcall
and
add
and
jae
lods
andb
and
scas
add
mov
adc
sti
cmpsb
lods
orl
xchg
clc
mov
cmp
out
arpl
jecxz
mov
pop
rorl
test
loopne
mov
mov
and
cwtl
push
pop
lods
add
mov
xor
add
loope
jns
add
nop
jg
and
pop
push
push
fbld
push
imul
jmp
add
andb
or
leave
rorl
hlt
mov
enter
pusha
cmp
jo
rcrl
jl
adc
dec
lret
jnp
sahf
mov
inc
mov
ret
dec
push
add
out
or
push
dec
cmc
fcmovu
jcxz
enter
rclb
das
insb
dec
inc
popa
loope
fistpll
fwait
cpuid
push
inc
or
movsl
lea
adc
pop
out
mov
cmp
test
in
cmpsb
push
xchg
mov
dec
dec
pop
cmp
out
stos
sbb
fsub
out
lret
jne
insl
inc
xor
jle
jns
mov
sub
dec
loope
mov
cmp
cld
stos
out
imul
xchg
mov
repz
cs
test
mov
mov
add
rcrb
xchg
sbb
lahf
shll
lret
insb
push
popa
test
mov
push
sbb
scas
jmp
inc
xchg
fdivrl
lret
aam
inc
shlb
xchg
and
sysenter
sub
jb
fstps
int
popa
movsl
out
jecxz
enter
and
stos
scas
jne
std
push
ret
fimuls
std
fsubp
lods
fwait
jo
out
ret
fwait
mov
mov
sbb
dec
lret
enter
cmp
xchg
sbb
xlat
sbb
add
push
xor
sbb
dec
or
shl
sub
lret
gs
sbb
add
sar
into
fcmovnbe
iret
arpl
cmpsl
mov
jp
mov
pop
stc
cmp
lret
and
xor
adcb
lods
jle
mov
sar
push
outsl
jnp
jle
es
insl
xchg
pop
ret
sub
enter
cmc
dec
xchg
pop
and
or
enter
adc
jle
ficomps
add
mov
adc
out
outsl
cmp
xlat
xor
xchg
inc
mov
mov
or
push
xchg
adc
test
add
movsl
enter
pop
jmp
int
push
ror
inc
or
jae
cld
jecxz
sbb
or
aad
stos
xchg
das
mov
icebp
call
mov
cmp
fs
cmp
pop
sub
out
in
shlb
les
les
adc
aas
push
push
jle
mov
ljmp
aam
dec
fnstenv
les
test
cld
and
xor
mov
xchg
push
jmp
lcall
data16
and
sti
inc
icebp
add
mov
jns
stos
daa
inc
mov
cmp
js
insb
outsl
jge
aam
push
mov
popf
mov
adc
ljmp
cmp
loopne
nop
push
cwtl
cmpsl
and
push
inc
lcall
jecxz
inc
insl
cwtl
cmpsl
sub
ret
popf
ss
cltd
push
pushf
dec
aam
jmp
xchg
imul
push
scas
fs
js
sbb
imul
inc
pop
sbb
in
call
jb
stos
loope
jae
dec
repnz
sbb
xorb
sbb
dec
cwtl
add
cmp
divb
adc
stos
push
mov
xor
inc
mov
fmul
add
jg
je
sbb
mov
rol
data16
or
xor
pushf
dec
add
mov
sbb
iret
movl
jle
mov
pop
pop
test
jns
imul
outsl
jle
iret
mov
icebp
pop
fsubs
push
shl
mov
xor
add
lcall
cmp
xchg
or
push
vsqrtpd
mov
cli
jae
jno
ret
add
inc
outsb
push
das
call
ljmp
lcall
mov
movsb
mov
pushf
sti
xor
jmp
push
add
ja
sbb
pop
stos
daa
ja
dec
incb
repz
inc
ss
and
test
ss
cli
call
mov
sbb
pushf
push
xchg
pushf
mov
mov
push
cmpsl
sub
decl
inc
mov
movl
or
movsb
aaa
xor
mov
sub
pop
pushf
movsb
in
ret
cmp
xchg
cmp
andl
cmp
cltd
stc
lret
mov
pushf
dec
negb
repnz
lret
les
daa
mov
aaa
idivb
add
js
fs
leave
pop
add
mov
inc
mov
filds
test
xchg
push
ja
bound
mov
popa
pop
jbe
or
shrl
aas
mov
pop
cmp
inc
mov
lret
icebp
jne
cld
idiv
fcoms
push
out
out
cmp
test
xor
fs
push
or
xchg
in
sub
std
pushf
shrb
pushl
aad
shll
push
cmp
sbb
cmpsl
cmp
jo
imul
pop
and
lods
mov
test
pop
inc
jg
add
pop
jae
inc
hlt
jno
leave
pop
adc
aam
subl
mov
pop
js
mov
lcall
cmp
iret
and
sbb
sub
xchg
cmp
inc
dec
fwait
inc
add
leave
lret
adc
adc
and
jae
jbe
sbb
or
push
repnz
push
dec
sub
dec
rep
or
rclb
push
imul
xor
aas
dec
xchg
mov
pop
repnz
aas
mov
xchg
pop
cmc
ss
fwait
or
pop
mov
scas
mov
iret
add
xchg
jle
ficoms
out
sti
test
sbb
pop
push
xor
add
push
mov
jg
ss
inc
popa
add
mov
stc
cmpsb
jecxz
jmp
in
ja
ds
mov
or
pop
cmpsb
sub
imul
push
popf
shlb
xorb
shrb
cld
data16
xchg
xchg
arpl
push
xchg
les
sbb
dec
fnstcw
dec
xchg
mov
cmp
jg
cwtl
inc
pop
outsl
cmc
movsl
mov
lea
aas
mov
xor
fisubrl
loop
and
mov
push
mov
and
xchg
les
sub
sub
mov
dec
iret
mov
mov
jb
jb
mov
std
mov
mov
je
cmp
icebp
call
lock
adc
pop
ds
xor
jae
out
mov
mov
mov
subl
pop
imul
mov
in
jns
dec
sub
stc
cmp
mov
push
mov
fdivr
outsl
fmul
in
pop
insb
mov
jns
int3
xor
inc
roll
nop
xchg
push
sbb
iret
or
shrl
xor
jbe
adc
imull
fadds
ds
aad
inc
incl
and
mov
add
pop
xor
push
jmp
fsts
pop
subb
imul
fisubl
sarl
loopne
scas
pop
inc
mov
sbb
mov
fdivr
decb
and
sbb
xchg
add
mov
xchg
pop
std
cli
js
push
out
pop
cmp
mov
mov
dec
inc
mov
mov
loopne
fsubr
ds
ficompl
test
int3
enter
negb
push
arpl
pop
insl
inc
mov
inc
jp
nop
push
adc
mov
test
lcall
mov
pop
adc
sarl
dec
mov
push
arpl
into
insl
sbb
sbb
fmul
andl
outsl
outsb
inc
fcomps
pop
test
stos
or
je
ja
and
decl
cmpsl
ja
pusha
inc
scas
arpl
bound
cmp
fisubrs
jb
xor
jmp
rorl
loop
jns
lea
icebp
pusha
push
adc
push
ljmp
test
in
sub
mov
lock
or
aam
xor
jb
test
add
es
roll
ret
inc
adc
mov
sub
out
cs
add
subl
in
in
cmp
enter
cmpsl
mov
mov
cmp
repnz
cmp
pop
mov
sbb
xchg
repz
enter
popa
mov
mov
lahf
shll
xor
pusha
and
jecxz
faddl
lods
mov
clc
pusha
lock
stos
sbb
repz
fcmovnbe
pop
xchg
fsubr
adcl
or
lds
push
pop
cmp
xchg
mov
pop
jl
imul
stos
pop
jg
xchg
test
cmpsb
cmp
cmp
inc
add
es
mov
inc
mov
insb
adc
mov
lahf
cmp
mov
icebp
ret
mov
test
xchg
pop
push
mov
mov
xor
leave
jecxz
inc
gs
in
mov
hlt
out
xchg
negb
fcoml
push
xor
repnz
mov
lods
adc
decb
lret
mov
mov
stc
nop
pop
int
popf
push
insb
mov
and
xchg
cmpsl
mov
mov
dec
rcll
outsb
pushf
cltd
push
pop
xor
outsb
inc
ficoml
rorb
pop
cld
out
lahf
ret
adcb
outsl
pop
repz
jns
rcll
xchg
int
aas
ja
into
adc
out
lods
repz
xchg
test
push
je
inc
iret
loope
push
repnz
adc
lret
push
sarb
sti
sub
cmc
push
data16
dec
pop
daa
mov
add
mov
cld
les
fdivs
pushf
cli
mov
lock
mov
lcall
fcoml
push
ljmp
data16
ljmp
xchg
cmp
sub
adc
jg
outsl
nop
cli
mov
mov
xchg
push
sbb
cmp
fistpl
std
xor
adc
aaa
push
mov
data16
mov
sub
jno
daa
jge
int
jl
js
jle
jecxz
mov
outsl
cltd
inc
push
stos
sub
test
arpl
movsl
and
out
dec
jmp
js
mov
mov
pop
inc
int
data16
aam
outsb
inc
cwtl
movups
xchg
dec
scas
dec
imul
cmp
popa
and
adc
shll
cmpsb
ficompl
nop
in
mov
jno
xor
cmp
test
dec
or
push
push
cmpb
ds
adc
sub
mov
mov
je
dec
je
add
sub
in
mulb
and
or
xor
inc
and
jle
adc
aad
rclb
in
sub
rcll
in
arpl
rorl
rorb
pop
or
outsb
incb
testl
bnd
inc
stos
push
jmp
imul
fmull
cmpsl
pop
mov
mov
add
push
fistpll
lea
ljmp
push
add
lret
inc
test
outsl
int3
xchg
add
mov
push
insl
mov
jae
and
sbb
in
dec
jbe
imulb
dec
stc
push
cmp
or
push
sbb
test
repnz
sti
int
repnz
inc
mov
loopne
mov
stos
mov
mov
cltd
xchg
lahf
nop
pop
pop
push
std
or
imul
sahf
cmp
pminub
mov
fdivrl
xor
lods
add
push
mov
dec
imul
das
and
ds
sbb
fstpt
pop
sub
ss
out
jle
add
add
xchg
daa
sti
mov
or
sub
mov
cmp
or
xor
fs
dec
jp
repz
cmp
sti
insb
mov
cmpsb
nop
xchg
jmp
arpl
test
incb
gs
xor
pop
pusha
stos
outsb
mov
out
add
or
mov
push
inc
add
ret
mov
inc
dec
sbb
clc
sub
jne
adc
cltd
repz
mov
xchg
shrb
addr16
lcall
clc
bound
mov
push
and
rcrb
dec
and
push
xchg
rorb
fsqrt
rorl
inc
jge
sbb
add
movsb
cmp
lret
add
dec
shrl
push
andb
pop
test
into
les
cld
dec
fiaddl
or
jns
jmp
mov
bswap
pusha
sub
arpl
inc
add
fbstp
mov
jl
push
imul
hlt
aad
int
sub
leave
xchg
pop
int
ret
and
sbb
sbb
cld
mov
or
fs
push
jmp
movsl
mov
sub
sbb
jne
and
xor
pop
cmpsl
int3
pushf
dec
and
adc
xor
lret
aam
enter
jle
cmp
or
inc
aas
xor
imul
lods
push
pushf
push
push
add
adc
cmp
xchg
fs
mov
clc
shll
lods
scas
inc
je
cmp
gs
and
test
lea
adcl
shlb
dec
jbe
cwtl
mov
imull
xor
outsb
push
mov
xor
push
mov
jo
fwait
mov
or
mov
popa
into
inc
cmp
push
mov
in
lahf
pushf
inc
xchg
popa
nop
mov
xchg
mov
daa
mov
dec
xchg
pusha
pop
or
cltd
fisttpl
out
fwait
fwait
pop
dec
sub
jae
push
imul
jl
test
or
data16
fdivs
xchg
push
pop
xchg
mov
adc
mov
mov
fucom
pop
nop
add
out
push
cmpsb
cli
sbb
les
cmp
push
arpl
or
and
sub
jae
lds
rolb
out
xchg
adc
mull
cmp
xor
stos
jne
mov
lret
popf
jo
mov
pop
ljmp
stos
sub
mov
in
out
push
pop
inc
and
arpl
mov
lahf
test
in
mov
jae
add
fists
fiadds
les
sub
mov
xchg
sub
and
sub
add
roll
lock
ror
in
arpl
pop
or
jp
pusha
clc
or
adc
add
stc
cmp
sbb
and
hlt
hlt
sub
bound
rcr
inc
outsb
xchg
gs
inc
lods
sub
or
out
test
or
cli
scas
mov
xchg
lock
iret
nop
sub
mov
arpl
call
push
inc
jl
mov
lret
decb
jecxz
movsb
add
mov
pop
data16
ret
sbb
push
inc
mov
inc
stc
stos
loope
and
xchg
ss
sbb
inc
inc
popa
fbstp
jnp
rorb
mov
stc
xchg
jb
and
lock
faddl
cmp
mov
push
push
lret
dec
ljmp
nop
pop
pop
push
lret
mov
xlat
popf
jecxz
xchg
test
xor
fmull
or
sbb
cmp
out
cmp
repnz
vpmulhw
outsb
repz
repnz
aad
jg
lds
enter
into
enter
pop
xchg
inc
mov
shlb
out
sbb
or
push
mov
or
aaa
dec
sub
repnz
popa
mov
call
mov
sub
js
pop
cli
jp
fisubrs
cltd
jno
or
test
in
push
mov
mov
mov
xor
fstl
sbb
jno
movsb
sahf
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
jmp
leave
pop
xchg
movsl
or
sahf
jno
jmp
hlt
pushf
jnp
lret
sbb
frstor
outsb
sahf
add
test
jae
fucomi
or
mov
cli
lcall
push
sbb
nop
adc
sarl
and
pop
xor
loope
pop
adc
mov
ss
mov
xor
leave
in
cs
push
mov
and
xor
inc
sbb
fsubl
in
mov
push
fimuls
daa
mov
daa
call
scas
ds
push
mov
pop
aam
inc
adc
adc
test
xchg
fdivrs
outsb
mov
loope
js
sub
adc
mov
push
cltd
sub
hlt
into
mov
jne
mov
xadd
iret
inc
cmp
add
scas
push
xlat
and
mov
jns
lods
insl
and
add
adc
aaa
lcall
sbb
mov
push
scas
cmp
lds
pop
clc
mov
xchg
push
cmp
shlb
xor
jne
sbb
mov
ja
insb
dec
and
add
adc
xchg
test
cmp
mov
cs
arpl
cmp
test
push
int
lret
pop
jg
add
xchg
pop
inc
fiadds
aad
daa
jns
add
pop
adc
cmc
fisubs
jno
adc
out
or
cmpsb
and
inc
subl
mov
dec
push
std
stos
call
mov
rolb
mov
lret
int3
dec
jmp
data16
pop
inc
andl
xor
pop
and
push
cmp
divb
not
lods
jb
and
sahf
jl
adc
mov
fldenv
fwait
nop
dec
out
test
stc
sub
xchg
push
loopne
lods
adc
test
fs
popa
insl
adc
sbb
push
arpl
adc
cmp
jg
and
adc
shlb
mov
and
and
lock
je
sub
lock
dec
adc
std
leave
fidivrs
sub
add
lahf
cld
cmp
or
lock
sarb
jae
or
fdiv
cmp
leave
fnstcw
cli
mov
mov
mov
add
jnp
adc
pop
pop
cmpsb
pop
sub
xor
xchg
xchg
cmpsl
lds
xor
pop
mov
push
pop
dec
leave
jns
sub
test
cmovge
or
fisubs
sbb
leave
push
push
lock
sbb
sti
lea
clc
xor
pop
xchg
pop
pushf
dec
sahf
jne
dec
out
outsb
nop
add
or
shl
mov
pop
push
lds
mov
push
loope
cmp
pop
add
daa
fmuls
jno
ds
lret
and
cmp
ljmp
ljmp
aad
sbb
push
and
pop
add
icebp
xchg
add
pop
cmc
jle
enter
push
xor
outsl
jge
jnp
pop
pushf
and
lcall
mov
cmp
push
mov
mov
mov
pop
nop
addr16
add
scas
in
repnz
insb
cwtl
dec
inc
aad
adc
decl
and
decb
cwtl
push
aad
cmp
jmp
mov
inc
add
shr
xor
clc
cmp
fmulp
sub
cmp
inc
or
pop
push
loop
jb
outsl
stos
call
cmp
out
hlt
pop
mov
sbb
sbb
sbb
sub
leave
ret
xor
ds
aad
pop
or
jmp
inc
push
mov
mov
sbb
push
inc
jl
lea
jae
mov
mov
xchg
inc
enter
sbb
adc
ret
divb
insb
mov
dec
flds
std
push
inc
repz
fisttps
aad
lea
int3
lcall
inc
sbb
or
pop
xorl
sahf
ja
movsb
push
clc
mov
ja
jge
xchg
bound
iret
frstor
bound
sub
les
int3
fwait
push
orl
lcall
shlb
adc
cmp
out
jp
es
movsb
movsl
or
mov
adc
cwtl
inc
inc
mov
inc
or
sbb
mov
push
dec
xchg
inc
mov
push
inc
insb
cltd
sub
push
dec
outsb
mov
xchg
mov
jne
mov
jb
mov
and
lea
aam
sub
out
loopne
data16
and
xor
loop
push
idivl
dec
adc
aad
cltd
pop
in
jo
outsl
and
fsubrs
sub
ja
push
cmpsb
cltd
lret
loopne
jae
sub
inc
lods
cwtl
cmp
loope
sahf
xor
sbb
es
dec
sti
icebp
int3
inc
aad
inc
outsl
imul
inc
adc
mov
mov
add
sbb
andl
loop
lahf
or
ret
cmp
inc
lret
cmp
inc
fidivrl
adc
cmc
clc
outsl
jp
out
pop
loop
outsl
push
cltd
lcall
dec
sub
cmp
xchg
mov
lret
or
movsb
fisubl
out
ss
jnp
arpl
adc
cwtl
fwait
cmpsb
adc
cld
pop
jecxz
cs
mov
adc
jno
cmp
int3
repz
push
pop
jo
cmp
aas
imul
lods
in
jne
mov
jns
xchg
jle
push
cmp
jle
or
mov
in
lahf
mov
sub
adc
mov
jne
dec
mov
js
fucom
fdivs
je
mov
pop
mov
scas
inc
mov
pop
push
aad
sbb
punpckhbw
dec
mov
ficoms
iret
shrl
adc
call
lret
mov
xchg
sbb
cli
loopne
jmp
jbe,pt
je
mov
scas
rolb
xlat
sub
lds
adc
rcll
pop
inc
dec
std
xchg
icebp
and
adc
insl
hlt
scas
xor
aad
out
notb
dec
sub
push
sbb
cld
pop
sub
aam
movsl
mov
push
cli
data16
mov
cmp
mov
mov
shlb
lds
pusha
pop
mov
int
int
outsb
fists
pop
xchg
test
lods
xchg
inc
cmp
push
nop
push
das
movsb
jnp
frstor
fidivl
mov
push
inc
jnp
push
stos
dec
mov
cmpsb
lcall
imulb
pop
jp
push
mov
dec
int
test
add
arpl
subl
xchg
cmp
jmp
xchg
push
fs
sub
shlb
loope
arpl
fsubs
out
pop
push
lcall
push
hlt
mov
loope
dec
xor
fs
pop
daa
js
cmp
pop
add
lret
sti
stos
cltd
aad
pop
sbb
xchg
ja
sub
nop
mov
decb
or
inc
xchg
cs
and
cmp
sbb
cld
cmpsb
mov
notl
or
ds
lret
sub
mov
sbbl
pop
inc
movsb
imul
inc
inc
jbe
roll
out
lods
pop
and
add
jo
cmp
adc
mov
iret
sarb
mov
adc
aam
mov
ret
xchg
mov
in
cwtl
dec
jo
ja
mov
mov
cmpsb
xchg
icebp
rcrb
mov
hlt
and
inc
pop
dec
dec
aam
aas
int3
and
add
mov
adc
imul
dec
cmp
xor
push
cmp
push
rcrl
or
or
test
outsl
fcomp
cmc
mov
mov
adc
rep
mov
cmp
idivl
cs
fs
xchg
sub
xor
out
lcall
test
in
xchg
push
cmp
sarl
adc
test
inc
add
mov
outsb
aaa
repz
icebp
or
insl
shlb
stos
inc
dec
fnstcw
adc
aad
jp
jns
mov
es
pop
pop
repnz
xchg
mov
rorl
xchg
xchg
xor
mov
xor
flds
ljmp
stc
cmp
xchg
jo
pop
pushf
mov
shll
adc
popa
divl
cmp
mov
cmc
fisttpl
rclb
inc
jp
mov
push
hlt
jl
mov
mov
fists
clc
jecxz
jnp
sub
pop
pushf
mov
push
das
shrl
adc
dec
jo
loope
or
jle
mov
jae
rcrb
jno
push
or
xchg
shrb
enter
gs
or
and
cwtl
mov
push
mov
push
cli
xchg
rol
mov
and
arpl
sub
mov
cmp
popa
popf
push
loope
mov
push
call
or
mov
fstpl
push
sub
aam
cmp
fldcw
mov
mov
les
mov
dec
push
shr
shrb
psubd
sub
ss
cmp
pop
out
shrl
jne
in
lock
ja
int
or
and
fwait
add
pop
and
lods
fildll
xor
sbb
inc
fdivrl
xor
adc
add
push
mov
mov
dec
ret
rorb
xlat
jl
lret
popf
pop
rorb
or
push
pop
sub
jbe
movsl
leave
mov
xlat
js
or
pusha
faddl
or
fistpl
fldt
cld
xchg
push
decb
mov
add
pop
mov
test
addl
and
clc
inc
imul
fldenv
out
xlat
into
mov
mov
mov
sbb
popf
sub
or
xlat
jo
sub
inc
cmpsl
or
cwtl
mov
push
scas
es
insb
sbb
fxch
mov
std
lods
data16
cmc
and
mov
in
xchg
fdiv
xchg
filds
inc
sub
dec
cmp
pop
cmpsl
add
pop
dec
jbe
ret
adc
mov
adc
lea
mov
sub
mov
fs
mov
sahf
pop
fcomps
pop
sub
pop
pop
mov
in
lcall
adc
jbe
push
inc
outsb
xchg
int3
lock
lcall
pop
rorb
rclb
sbb
adc
fmull
es
in
lock
enter
bound
cmp
xlat
fadd
in
icebp
scas
and
out
jmp
aad
jnp
aad
jl
cmp
pop
aaa
and
divb
pop
testb
pop
pop
loop
fistpl
ds
enter
mov
sbb
fwait
jg
jmp
aaa
jns
xchg
add
cltd
pop
icebp
dec
insb
imul
mov
orl
lods
mov
jns
inc
and
orl
mov
addl
addr16
and
lods
or
sbb
testl
loop
ja
sub
ret
mov
ljmp
mov
hlt
xchg
fsts
add
lods
pop
gs
xchg
fs
pushf
or
add
xor
addb
push
test
popa
stc
mov
inc
lret
daa
rorb
or
insb
fwait
jle
cmp
xor
adc
cltd
stos
es
lret
pop
mov
dec
jle
decl
inc
and
knotb
arpl
insb
jbe
push
push
jns
adc
in
lods
sbb
jns
lahf
int
cmpsb
scas
fldcw
cs
or
ss
xchg
or
xchg
jo
cld
mov
stc
jne
fisubrs
fs
sub
cmp
sbb
add
in
xor
cmpsl
fldl
xchg
out
in
or
mov
enter
data16
add
inc
inc
xor
and
fwait
rcrl
mov
aaa
inc
cwtl
jl
sub
and
dec
bound
mov
popa
inc
shll
fwait
rorl
mov
add
negb
shlb
or
inc
shrl
adc
dec
xlat
test
push
sbb
add
notl
cmp
inc
in
and
in
gs
fdivs
mov
bound
jmp
insb
xlat
fbstp
popa
fstpt
pop
ss
stos
mov
loope
nop
cs
and
out
iret
xchg
cld
lods
mov
add
imul
hlt
scas
add
jne
hlt
xlat
cli
jbe
imul
dec
bound
mov
icebp
dec
shll
xchg
or
cmp
mov
sti
fdivl
jge
inc
sarl
add
data16
inc
add
adc
bound
mov
lahf
inc
jno
daa
aas
adc
pop
test
jmp
dec
leave
incb
icebp
mov
add
ret
cmp
or
repz
outsl
pop
and
push
push
ret
pop
pop
js
adc
loopne
mov
mov
or
and
mov
les
inc
fistps
inc
out
aad
mov
add
mov
jecxz
jmp
inc
sub
leave
cld
jae
xor
je
dec
out
lcall
cs
dec
test
cmpsl
mov
stc
jo
xor
mov
loope
repnz
fiadds
divl
daa
testl
adc
dec
js
mov
jge
orl
lcall
ficoml
jmp
push
ret
mov
inc
or
cmp
js
or
rcr
dec
dec
jle
stos
or
aad
inc
xchg
jecxz
xchg
mov
push
mov
enter
inc
dec
pop
std
dec
lret
vpsubw
cmpsb
pop
test
xchg
mov
das
lcall
or
adc
xchg
fstl
cltd
cmc
mov
xor
xor
mov
mov
iret
inc
int3
pop
push
push
cmpb
jge
xchg
out
xor
mov
pop
sub
sbb
scas
add
dec
mov
or
push
push
mov
lret
add
and
pushf
and
pop
xor
dec
xor
mov
fisttps
jecxz
std
cli
int
and
pusha
sub
pop
push
pop
ficompl
sbb
pop
movsb
cmpsb
sub
adc
sarl
dec
mov
divl
pop
adc
jle
pop
adc
jg
test
ljmp
inc
sub
mov
call
jnp
inc
add
aad
mov
imul
daa
lods
ret
les
xchg
dec
pcmpgtw
mov
sub
cmp
push
mov
movsl
movb
filds
aaa
cli
add
ret
xor
test
dec
jae,pt
add
aas
imul
lods
loopne
fbld
mov
dec
xlat
and
lahf
aad
fnstenv
add
push
lock
mov
push
jg
sub
gs
rcrl
push
loopne
out
arpl
mov
ret
mov
movsb
sbb
jmp
pop
xchg
gs
pusha
adc
call
push
dec
sbb
jns
clc
push
mov
dec
adc
outsb
fs
inc
ret
sbb
jnp,pn
jle
rorb
cmp
mov
mov
aaa
mov
sbb
pusha
nop
lods
ds
cmp
adc
ds
adc
mov
js
xchg
movsl
add
adc
scas
pop
leave
or
fs
and
stos
mov
dec
enter
jmp
int3
xor
pop
dec
test
sub
sub
jbe
fildl
gs
in
cltd
and
filds
test
jmp
jge
loope
adc
out
daa
jns
or
mov
inc
orb
xchg
pop
ficoml
jns
popa
lahf
mov
stos
pop
leave
pop
repz
in
mov
xchg
lods
inc
inc
bound
and
or
xchg
outsl
push
add
add
jg
mov
lcall
add
mov
cmp
or
repnz
adc
sub
xor
test
adc
lcall
pop
in
jmp
jns
jle
cmp
test
cmp
sbb
sbb
mov
xor
addr16
int
sbb
stc
add
jb
push
xlat
popa
notl
cmpsb
dec
xchg
fsubl
cmp
push
enter
jns
xor
fidivrl
je
inc
fsub
icebp
std
xor
fs
jae
inc
pop
sbb
adc
cmp
pop
ret
jno
scas
ljmp
outsl
rorl
adc
ds
inc
inc
pusha
imul
mov
or
sbb
adc
ja
fistl
add
sbb
test
movsl
lock
or
dec
sub
in
outsb
out
jmp
mov
fistpll
outsl
push
dec
xor
bound
aas
mov
daa
lret
imul
sbb
mov
inc
sbb
les
sbb
mov
dec
call
mov
pop
gs
mov
push
bound
sbb
loope
pop
test
mov
jge
js
js
xchg
adc
iret
jnp
movsb
lahf
into
test
call
mov
popl
out
hlt
cmp
mov
pop
int3
ja
movsl
or
xlat
sbb
xchg
inc
stos
jno
test
dec
adc
leave
addb
and
test
rcrl
sbb
cwtl
or
sbb
popa
jbe
pop
pushf
loopne
push
mov
sbb
stos
cmc
mov
mov
sbb
mov
aad
xchg
jg
jbe
and
ret
aad
lret
and
cmp
xchg
dec
push
inc
push
mov
outsb
rcrl
or
out
stos
sub
mov
stc
lds
sbb
inc
or
lret
dec
das
sahf
mov
fistpll
imul
imul
push
xor
arpl
inc
cwtl
pop
dec
sub
push
xor
add
inc
xchg
dec
push
loopne
jmp
insb
enter
pop
out
push
mov
jo
sub
adc
gs
cmp
mov
jnp,pt
daa
ss
in
pop
pop
fsubr
inc
or
pop
mov
in
and
inc
cltd
rorb
or
out
loopne
je
int3
jecxz
js
sub
into
jmp
fwait
ds
jne
or
xchg
cld
sarl
aas
cmp
inc
cmp
xor
pop
xchg
mov
cwtl
cmp
mov
pop
lret
js
push
cmpsb
mov
stos
sbb
and
loop
add
cmp
cwtl
mov
cmp
dec
or
or
imul
dec
xor
xchg
xchg
sahf
lea
cmpsb
jmp
jmp
lds
jl
dec
xor
cmc
mov
and
xor
bnd
test
jg
loope
popa
sahf
in
jecxz
stc
aad
repz
cwtl
xor
mov
push
call
jle
inc
sub
and
push
mov
mov
mov
mov
cmp
xchg
jmp
or
aam
cmp
les
jle
or
xor
int
jne
xchg
repz
lock
mov
jne
clc
xchg
jle
mov
js
sub
mov
insl
lods
insb
sbb
xchg
je
cmp
push
fsts
jl
or
fcomip
jecxz
arpl
test
in
push
inc
retw
jl
mov
jl
pop
pusha
mov
dec
inc
mov
cmpsb
xchg
cwtl
add
pop
ljmp
jb
testl
adc
data16
stc
stc
or
lds
test
roll
push
xlat
out
movsl
mov
pop
in
test
mov
test
jno
out
add
add
scas
xchg
inc
jmp
hlt
mov
std
or
rcrl
and
sub
cwtl
test
stos
mov
stos
aas
pop
movsl
mov
xchg
push
sub
jl
shlb
fldenv
mov
andb
call
lcall
dec
sbb
test
push
cs
mov
push
xchg
xlat
ljmp
jl
movsb
cmp
inc
mov
js
inc
inc
ja
mov
xor
pop
ret
test
into
mov
fcmovbe
dec
mov
dec
data16
jle
out
pop
inc
movsb
icebp
and
mov
out
dec
cmc
cmc
lea
pop
call
inc
imul
ljmp
pop
mov
in
ss
aaa
adc
aaa
xor
out
sbb
repnz
jns
cmpsb
arpl
ret
add
xchg
adcl
fidivrl
into
lods
add
mov
rcll
inc
cmpsb
rclb
test
outsb
mov
es
ret
outsb
mov
insb
xor
or
or
mov
out
in
push
xchg
addb
add
out
ss
shlb
les
cltd
inc
jge
pusha
dec
mov
sarb
xchg
xchg
fimull
stos
xor
leave
in
je
popa
or
xchg
xor
mov
lahf
and
ljmp
push
push
test
jb
jp
mov
mov
push
sbb
addb
push
inc
lcall
test
and
sub
dec
mov
enter
test
dec
pushl
dec
sbb
xor
sbb
push
sbb
testl
dec
iret
sbb
push
inc
in
or
adc
dec
insb
jb
fmuls
rorl
xor
add
sbb
jae
add
test
inc
push
xchg
outsl
sti
adc
cmp
pushf
andl
lds
imull
in
shl
pop
aaa
lock
cmc
mov
push
xor
ds
cmp
jl
mov
mov
add
dec
pop
test
stos
adc
mov
mov
daa
insb
add
iret
mov
mov
xor
pop
les
daa
leave
inc
jno,pt
fnstenv
sub
xor
fdivrs
fcomip
or
movsl
icebp
mov
jg
push
jge
pop
mov
inc
fs
push
cmp
popf
out
push
mov
cmpb
dec
adc
pop
mov
sti
movsb
out
sbb
mov
aad
fldt
hlt
xor
sbb
fisttpll
push
fldenv
repz
xor
mov
fwait
insl
push
call
cli
mov
movsl
cmp
jbe
shr
mov
mov
mov
sbb
pushf
xchg
and
sbb
daa
xor
lock
pop
xor
dec
pop
pushf
pop
xchg
mov
sbb
sbb
sbb
jb
jb
pop
arpl
clc
dec
inc
dec
fisttpll
sub
negb
xor
jmp
cmpsl
paddsb
pop
mov
push
mull
ffreep
stc
daa
dec
inc
jbe
ret
mov
add
xorl
push
pop
fwait
inc
je
and
idivl
jnp
scas
cmp
mov
lcall
mov
mov
inc
lea
mov
aas
dec
out
outsl
cmp
test
movl
cmp
inc
jg
cmp
and
movsb
push
or
xchg
iret
mov
mov
rcl
fs
scas
aas
loopne
js
dec
nop
jmp
mov
dec
mov
push
cmp
and
mov
adc
sub
push
aad
adc
andb
pop
or
and
pop
scas
dec
jecxz
fidivrl
fimuls
sahf
addr16
loopne
dec
dec
sbb
dec
in
dec
cmp
jo
inc
push
sub
in
imulb
out
das
push
into
repnz
push
leave
push
les
xor
add
popa
adc
mov
mov
ds
push
scas
stos
lods
inc
cmpsl
ss
jbe
push
pop
push
xor
or
dec
dec
push
cmp
pop
fistl
mov
repnz
dec
mov
jae
iret
out
adc
push
das
inc
icebp
sbb
xchg
cmp
and
pop
bound
cld
mov
add
leave
inc
xor
insb
nop
scas
cld
sti
and
jns
shll
sbb
shr
imul
or
push
repz
sub
cmc
cmc
out
cmpb
jae
xor
sbb
stos
repnz
lcall
nop
sub
push
lahf
testl
xor
cmpsb
sub
out
mov
dec
cmp
xor
mov
cmp
add
fdivrl
adc
cwtl
lock
push
aaa
stos
int
test
pop
loope
or
outsl
mov
mov
leave
add
and
cmp
xchg
pop
out
loopne
lret
stos
dec
test
imul
lahf
jae
test
fisttpl
cmp
inc
insl
inc
sub
sbb
je
mov
cmc
pushf
adc
cmp
or
ja
cmp
mov
inc
ret
add
mov
ss
daa
mov
mov
xchg
inc
sub
jp
mov
or
mov
push
out
mov
ss
sbb
sbbl
dec
ret
into
aad
mov
add
xchg
ds
popf
cmpsb
dec
lods
inc
push
sub
push
add
and
mov
push
cmc
jp
daa
fstpl
mov
cmpsl
mov
add
hlt
add
xchg
xchg
dec
addr16
or
pushf
lds
adc
cwtl
insb
and
dec
and
imul
testl
mul
sti
xor
fistl
nop
in
inc
and
pop
or
cwtl
xchg
mov
jbe
les
mov
jnp
cmpl
addb
push
add
cmp
ds
test
rclb
pusha
mov
lret
ss
aaa
ret
jmp
fildll
lret
xchg
xor
js
xchg
xor
push
jb
cmp
jno
mov
mov
sbb
lea
or
fisubl
out
in
jg
pop
lret
aad
rcrl
adc
out
mov
mov
call
push
push
stos
ja
ss
pop
mov
jnp
or
mov
mov
add
mov
int3
mov
mov
mov
and
xchg
sbb
mov
jge
sbb
sub
gs
jmp
adcb
jb
jmp
out
add
jb
outsl
imul
std
mov
pop
pop
push
outsb
sbb
cltd
lock
jp
enter
mov
add
movsl
mov
mov
or
cmp
sbb
mov
inc
dec
cs
push
pop
int
cmp
mov
jp
xor
jp
dec
push
pop
popa
mov
movsl
je
mov
aas
sub
aam
fdivl
dec
movd
mov
std
lods
xlat
repz
in
mov
or
jnp
jb
sbb
push
mov
enter
add
mov
xchg
jbe
mov
mov
out
pop
lcall
mov
leave
dec
push
sbb
mov
lods
iret
pop
push
mov
push
pop
sbb
fcmovu
and
pop
sbb
adcl
fidivrs
jnp
mov
addl
aas
jge
add
jns
ljmp
mov
cmp
sti
mov
push
aaa
mov
xchg
test
lods
mov
popf
movsb
mov
sub
out
jno
and
sbb
not
cmp
mov
bound
nop
mov
adc
jecxz
push
jne
test
ss
scas
jmp
pop
sar
add
mov
incl
cltd
and
inc
mov
cmp
fsubrs
inc
iret
mov
add
cmp
or
cmp
and
xchg
ss
fsubr
dec
fsubs
loope
inc
das
mov
lcall
les
sysret
fwait
sbb
dec
aad
dec
insl
xor
mov
popf
mov
add
cltd
push
es
daa
arpl
outsl
inc
int3
adc
setl
xor
in
cmpsl
movsb
ficomps
sbb
inc
imul
pop
mov
scas
sbb
cmp
bnd
cmpsb
adc
cmp
xchg
mov
cld
mov
cli
sub
adc
js
andb
in
rclb
insl
lcall
into
test
and
cmp
cmp
mov
pushf
push
leave
outsb
xchg
xchg
cwtl
cltd
inc
test
mov
mov
jae
push
xor
les
fstpt
dec
jle
pop
dec
jne
push
arpl
dec
mov
imul
inc
outsl
mov
sbb
scas
sbb
lea
cmp
inc
mov
scas
mov
xor
push
xor
push
jne
cltd
test
in
xchg
mov
or
popf
adc
mov
arpl
sbb
ja
rep
push
jl
inc
popa
fs
mov
scas
lret
pop
insl
jne
mov
je
pop
and
pusha
sub
sub
mov
inc
or
fstpl
rolb
out
lahf
jmp
and
cmp
sub
xorl
mov
mov
mov
mov
mov
add
hlt
mov
sub
faddp
outsb
xlat
jecxz
ja
loop
stos
mov
fisttpl
and
adcb
sub
sti
mov
in
lret
and
or
out
mov
mov
pop
jp
mov
leave
out
data16
and
jo
leave
mov
out
rcl
stos
push
imul
mov
pop
pusha
fisubl
aad
or
and
sub
cmc
icebp
and
cs
xor
dec
xlat
imull
cli
mov
ja
insb
mov
int
fldenv
fbstp
jbe
mov
lcall
cmp
scas
into
fisubrs
push
pop
sub
repz
mov
push
jns
mov
sub
dec
inc
inc
stos
pop
out
and
cmpsl
ficoms
ljmp
fsubrl
cwtl
add
stos
insb
add
mov
adc
sbb
inc
lea
into
mov
in
unpcklps
sahf
dec
mov
imul
cmpsb
pop
lods
xor
stos
sub
insb
fiaddl
pop
scas
mov
or
cmp
lock
icebp
cmp
adc
int3
fidivs
xor
rorb
push
insb
xchg
pop
out
jge
pop
adc
mov
sbb
aaa
rorb
ja
mov
mov
or
test
in
jmp
out
jge
xchg
xchg
out
add
sub
mov
and
sub
mov
add
sbb
das
push
pop
sub
xchg
cld
cli
sbb
mov
pop
sahf
in
int
xor
hlt
cmpb
inc
sbb
cmp
inc
into
outsb
mov
out
shlb
je
jmp
addr16
mov
inc
jns
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
pushl
pushl
call
cmpl
jb
movl
sbb
push
add
movl
xorl
mov
xorl
push
sbb
mov
orl
xor
adcl
push
mov
orl
add
andl
mov
mov
test
movl
je
mov
and
mov
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sbb
add
mov
mov
sub
mov
xor
and
add
mov
mov
xor
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
movzbl
sub
mov
sub
mov
not
xor
add
sbb
mov
decl
sub
lea
sbbl
xor
addl
xor
cmp
movl
je
addl
mov
subl
xor
add
movl
cmp
movl
jne
pushl
subl
call
mov
sub
mov
and
mov
xor
subl
add
cmp
je
adcl
pushl
andl
pushl
andl
call
and
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
addl
xor
subl
add
movl
cmp
movl
je
mov
mov
xorl
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
mov
mov
decl
mov
andl
add
andl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
mov
sbbl
add
movl
mov
jmp
mov
or
mov
mov
add
add
mov
mov
mov
xor
add
movl
cmp
je
movl
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
jmp
cwtl
mov
cmp
mov
pop
push
ljmp
jnp
mov
push
and
push
adc
xchg
push
inc
js
fstpt
sbb
cmp
adc
int
sbb
popa
clc
xchg
lahf
out
dec
mov
addr16
enter
xchg
test
push
inc
test
cltd
ret
pop
mov
or
stc
pop
add
pop
mov
inc
xlat
sbb
inc
push
and
ljmp
int3
mov
xchg
cmp
int
addr16
ret
in
fwait
loopne
or
imul
mov
sub
dec
jno
rclb
sub
sub
aam
push
cmpsl
add
xor
cmpsb
xor
mov
inc
lock
int3
in
iret
mov
mov
sbb
mov
sarl
lods
sub
xor
jno
lock
cmp
aad
dec
and
mov
sti
sub
cwtl
sti
js
stos
mov
ss
push
cmp
cmp
not
stos
test
xchg
dec
hlt
stos
cs
adc
inc
pop
fildll
fmull
dec
push
pop
push
das
sbb
stc
aas
andl
out
popa
in
dec
les
das
int3
repnz
xor
jo
cmp
test
jle
mov
ja
mov
jne
enter
push
xor
scas
incl
cs
push
or
push
adc
arpl
adc
push
push
cmc
inc
ret
nop
ja
pop
outsl
mov
dec
mov
ret
sbbl
cmp
jp
add
pusha
int
dec
mull
jecxz
adc
xlat
or
filds
das
pop
pop
ficomps
mov
jb
dec
adc
pop
lods
sub
adc
pop
outsb
out
in
pop
fmull
shlb
fsub
or
sbb
push
lret
imul
xor
pop
aas
push
jne
dec
iret
lahf
push
lret
popf
test
cltd
inc
imul
xor
jne
or
mov
sub
stc
daa
cli
jne
adc
stos
sub
sub
pop
in
fcoml
loope
cli
sbb
popa
testl
dec
push
pusha
fbld
lock
setns
dec
adc
push
mov
push
scas
add
mov
ds
or
std
fstpt
jbe
in
call
xchg
dec
lds
xor
add
mov
mov
push
or
data16
ficompl
push
out
clc
jmp
jmp
fldt
sbb
imul
and
dec
les
enter
lds
lds
jbe
icebp
xchg
fisubrs
fnstsw
fsubrl
sub
mov
sub
xchg
sbb
shl
push
xchg
cwtl
jne
je
nop
xor
popa
fdivrl
mov
pop
mov
aas
pop
xchg
mov
aad
insb
xor
mov
loopne
sysenter
add
scas
repz
cli
out
lret
fcomip
jb
bound
cmp
stos
mov
iret
ficomps
cmp
pop
iret
sub
scas
int3
cmp
in
out
xor
dec
xor
xlat
inc
mov
jno
sbb
mov
testb
cmpsl
sbb
sub
sbb
das
sub
cld
enter
inc
jl
mov
xchg
inc
scas
cmp
jecxz
call
sub
ja
pop
push
adc
sub
dec
test
xor
mov
mov
adc
dec
test
inc
iret
and
add
push
out
stos
mov
movsb
pop
insb
mov
int
loope
jo
mov
int3
fistpll
mov
outsl
xchg
adc
sbb
aad
nop
in
sti
mov
sbb
stc
or
xchg
scas
sti
or
add
fnstsw
pop
clc
adc
in
in
out
mov
shll
jo
dec
and
add
fidivrl
not
xor
mov
mov
aam
jp
push
out
mov
cmp
iret
push
jl
imul
dec
adc
mov
xchg
add
cli
cmc
js
imul
aad
push
and
inc
aaa
mov
out
sub
mov
inc
cltd
jo
add
mov
cmp
mov
jg
in
xor
popa
hlt
cmp
xor
call
push
movsb
sub
sub
sbb
xlat
mov
insb
dec
call
mov
jae
jl
and
pop
inc
mov
or
in
inc
inc
mov
aad
shlb
and
ret
xchg
adcl
icebp
pop
cltd
mov
in
dec
inc
fisttpll
ss
push
cmp
fwait
mov
or
decb
push
inc
xchg
subb
jns
jl
je
xchg
mov
pop
sbb
scas
into
in
loop
xchg
lods
loop
mov
dec
dec
mov
push
int3
inc
arpl
mov
jb
std
lret
movsl
dec
mov
xor
jo
loope
ret
out
mov
das
jno
push
pop
shlb
ljmp
lcall
adc
xchg
es
jp
xlat
in
lods
dec
mov
adc
jns
int
fst
mov
cmp
and
ficomps
std
scas
adcl
lock
cmp
cs
mov
lahf
push
adc
sbb
arpl
add
pop
pop
lret
ret
sub
out
sahf
and
and
rcll
jmp
arpl
and
fwait
dec
push
cltd
es
pop
test
push
pop
and
sub
loopne
mov
sbb
cmp
dec
pop
addl
aaa
loopne
insl
popa
jns
dec
xchg
fdivp
popa
stc
or
ret
scas
pop
gs
xchg
jle
dec
push
push
jb
iret
loope
shlb
movsl
sbb
jo
movsb
cld
adc
sbb
cmpsl
push
stc
sarb
dec
add
js
mov
divb
pop
pop
and
mov
push
xchg
cmp
aam
ret
pop
addb
imul
fldt
jo
fsubr
add
push
cmp
add
das
ficomps
insb
movsl
das
into
pop
pushf
pop
xor
enter
repnz
lret
push
cwtl
inc
cli
ds
gs
sti
push
xchg
push
jbe
ds
jo
or
mov
imul
fs
outsl
in
leave
int
aam
das
lahf
inc
add
clc
daa
mov
shrb
rol
lock
aaa
in
in
jns
fnstsw
pop
jns
sub
clc
jecxz
ss
mov
or
mov
adc
mov
aaa
mov
aad
push
lahf
movsb
cmpsl
gs
fisubl
mov
sahf
push
fstp
xchg
and
repnz
xor
mov
fmull
outsb
insl
hlt
popf
xchg
cltd
mov
mov
cli
mov
mov
mov
andl
imul
push
dec
pop
inc
xor
imul
sub
jb
js
inc
cmpsb
daa
pop
rolb
pop
out
insl
incl
mov
stc
cld
mov
dec
jg
loop
rolb
or
xor
out
add
aam
dec
sbb
push
lcall
add
popa
or
pop
add
xchg
iret
mov
test
xor
arpl
push
adc
enter
push
adc
les
xor
jne
push
dec
sub
mov
mov
push
aas
cltd
fyl2x
xlat
mov
loopne
vpsubw
sbb
movl
xor
stos
jle
cs
inc
les
imul
popa
pushf
les
pop
sbbb
lea
and
test
sub
popa
jo
push
pop
clc
jl
dec
xchg
testb
cltd
call
ret
jg
or
sarl
sub
sub
cmp
pop
sbb
das
lahf
dec
adc
or
or
cmpb
cmc
add
push
add
sbbl
aam
ret
ds
cmp
mov
xchg
outsl
mov
mov
scas
mov
cmp
xchg
sub
testl
stos
loope
rcrb
scas
mov
or
fdivs
enter
dec
nop
and
mov
jmp
adc
clc
push
pop
xor
rorb
imul
adcl
mov
sub
adc
cmp
xor
push
sbbl
imul
jecxz
cs
insl
push
iret
jnp
push
int3
scas
xor
cld
pop
ror
pop
and
mov
xor
iret
pushf
movsb
outsb
lret
int3
push
push
pop
inc
fldl
mov
int3
bound
pop
inc
dec
sub
lahf
dec
ret
mov
aam
xlat
loopne
shrb
popa
lock
jns
into
cmp
insl
std
mulb
dec
repz
jle
mov
xlat
jle
dec
scas
xor
dec
ret
or
int3
cmp
das
fstl
cmp
push
or
sub
dec
data16
sarl
jmp
add
jb
mov
lds
andb
push
dec
jae
lds
icebp
mov
call
mov
cmp
cmp
in
cmpsb
push
outsl
sbb
mov
fs
test
mov
sbb
nop
test
loop
cld
inc
fstl
in
mov
rep
mov
and
enter
and
comiss
ja
push
outsb
xchg
fidivs
jno
insl
inc
adc
xor
and
test
cmpsb
mov
outsl
mov
add
push
int3
std
fildl
mov
es
push
xor
cwtl
cs
sub
fcmovnb
mov
sbb
lds
out
stc
stos
sbb
pop
cwtl
lcall
xchg
xchg
iret
or
sbb
imul
dec
mov
insb
lea
iret
jno
sbb
lods
jge
cmpsl
gs
lret
push
pop
or
inc
or
mov
xchg
dec
scas
testb
mov
sub
loopne
hlt
and
or
push
movsl
dec
adc
dec
xchg
stos
ja
cltd
jbe
pop
push
lret
sbb
movsb
cmpsl
les
imul
repz
ficoms
xor
ss
loop
add
push
adc
pop
arpl
and
mov
into
cli
mov
cmpb
fld
mov
mov
push
rsm
out
and
adc
dec
cmp
test
jns
enter
std
minps
nop
sub
add
adc
pusha
test
sahf
sbbb
int
fwait
pop
aad
push
xor
jmp
mov
xchg
andl
lret
sub
mov
dec
out
mov
repnz
scas
ror
shrb
xchg
je
es
das
test
dec
jnp
xchg
jg
lret
adc
lods
call
cmc
into
fldl
andb
aam
adc
int3
mov
int3
test
ds
pop
rolb
into
into
jns
sbb
jmp
mov
dec
loope
add
pushf
std
push
dec
xchg
call
rcrb
jp
xchg
push
daa
or
mov
fs
or
jle
gs
jns
mov
gs
pushf
out
cltd
pop
dec
inc
pop
cmp
rcrl
les
nop
mov
push
inc
jo
mov
hlt
arpl
jmp
scas
add
mov
jge
nop
xor
int
sub
sti
xchg
ja
popa
dec
jecxz
aad
mov
dec
jmp
pusha
jnp
repnz
test
add
adc
popf
adc
dec
cld
andl
xor
jle
loop
mov
push
into
pop
inc
sbb
mov
mov
leave
out
push
cs
enter
push
sbb
insl
and
jb
mov
mov
outsl
pop
mov
loopne
or
mov
aas
jge
aam
outsb
dec
fwait
adc
sub
je
inc
aas
arpl
mov
xlat
xor
cwtl
lods
sarb
or
test
push
mov
sub
lock
ret
jmp
pop
je
ffree
test
sti
ret
push
dec
jns
mov
sbb
lods
inc
ss
loopne
enter
jp
cmpsl
loopne
cwtl
xchg
insl
push
aaa
cmp
lahf
add
int3
mov
dec
mov
xor
add
insb
in
pop
adc
cmp
fldl
movsl
outsb
ljmp
dec
adc
rcrl
lds
js
iret
xor
xlat
shrl
jnp
insl
jge
xchg
mov
cmpl
cmp
pusha
push
js
cltd
ljmp
mov
inc
mov
scas
xchg
adcl
cmp
add
mov
jl
repz
test
stos
test
xchg
mov
xor
shl
inc
outsb
ljmp
insb
or
std
mov
push
repnz
dec
movsb
sbb
mov
cmpl
xchg
jp
outsl
rorb
testb
sti
loope
pop
outsl
mov
push
add
icebp
jmp
xchg
stos
out
jle
imulb
push
xchg
mov
inc
mov
pop
fwait
xchg
mov
and
clc
push
mov
push
subb
cltd
jg
and
xor
cwtl
push
data16
sub
sbb
stos
and
stc
data16
mov
pushw
sbb
pop
in
std
add
push
sub
mov
sub
xor
mov
jecxz
js
rorb
push
cmpsl
mov
jne
iret
mov
cmp
js
or
pop
movsb
lret
mov
and
test
lret
movsb
clc
leave
sarl
loopne
fcoml
and
adc
add
movsl
test
and
fcomi
scas
inc
mov
and
test
and
andb
es
mov
pop
xchg
cli
andl
out
xchg
enter
insl
push
mov
subl
or
mov
lods
aad
pop
sbb
fs
mov
and
sub
sub
pop
xor
jge
cmp
pushf
es
popf
and
mov
mov
mov
arpl
mov
inc
data16
shlb
xchg
pusha
out
dec
pop
or
call
ds
push
lret
andb
out
or
pop
mov
or
mov
rcr
xchg
and
in
add
dec
add
loopne
cmp
lret
hlt
add
jbe
push
mov
idiv
xchg
add
inc
or
or
pop
mov
not
test
inc
lods
and
xchg
jne,pt
mov
fmulp
cli
jmp
mov
cwtl
inc
test
mov
ret
orb
mov
rorl
sub
mov
cmp
fcompl
cltd
jp
xchg
out
push
stc
out
imul
mov
adc
xor
xchg
out
mov
mov
xchg
rcr
repnz
sub
pusha
ljmp
mov
pop
cli
lock
push
and
adc
and
adc
loop
test
roll
jae
mov
xchg
adc
push
popf
push
repz
xor
jecxz
pop
pop
push
push
jmp
inc
fdiv
pop
rorl
xchg
cwtl
stc
and
mov
or
in
mov
sub
pop
js
cmpsb
inc
push
pusha
gs
dec
je
pop
sub
mov
mov
shll
data16
imul
fldcw
stos
mov
cltd
gs
mov
pop
repz
in
lods
mov
cmp
mov
push
insb
xor
int3
frstor
adc
divb
inc
xchg
dec
adcb
adc
xchg
dec
jmp
js
xor
adc
aas
mov
sahf
adc
lahf
and
repnz
sub
data16
cmp
mov
cmpsl
movsl
int3
outsb
test
add
je
aam
rolb
lods
js
inc
sti
push
fisttpll
xchg
bound
out
and
mov
xchg
pop
hlt
frstor
push
dec
nop
insl
adc
pop
nop
or
in
pusha
mov
xchg
aaa
loopne
inc
pop
leave
mov
add
lea
repz
cs
pop
lods
mov
add
push
sub
pop
rorl
inc
xor
aad
sub
pop
mov
adc
pop
pop
flds
pop
jb
sbb
bound
ret
iret
sbb
bound
test
adc
add
into
adc
xchg
lods
push
adc
test
cmpsb
mov
enter
jnp
aas
xor
xor
arpl
inc
mov
sub
xchg
stos
adc
test
cmp
sbb
dec
push
adc
dec
xchg
cmp
ret
addr16
incb
fisttpll
ja
ja
dec
xchg
push
aad
rcrb
je
addr16
cmpsl
cmp
enter
dec
xchg
nop
in
add
pusha
push
xchg
mov
int3
pslld
or
std
mov
fsubrs
xchg
xor
cmp
call
mov
add
push
adc
mov
negl
mov
ja
push
or
xchg
dec
cmp
fldl
pop
movb
stc
pushf
fmuls
jge
ljmp
iret
test
cmp
mov
or
cli
cmc
clc
jg
stc
dec
inc
sti
xchg
je
jno
dec
into
xchg
andb
lea
sbb
adc
mov
push
gs
jmp
dec
jbe
fwait
sbbl
shrb
adcb
and
adc
sub
pop
pusha
sbb
or
jne
fisubrs
xchg
in
inc
outsb
cmp
mov
in
out
arpl
nop
add
sub
test
loop
loopne
jne
out
and
mov
repnz
fstps
or
ret
sbbb
mov
and
cmp
addr16
inc
xchg
test
xchg
cld
mov
sbb
jecxz
test
mov
add
lret
stos
insb
bound
sub
xor
cmp
jo
jecxz
mov
xchg
adc
pop
add
xchg
pop
clc
cmp
sbb
inc
xchg
jle
mov
push
gs
movsl
pusha
push
mov
in
mov
xor
mov
xor
adc
decl
add
jmp
das
jne
in
sub
fistps
add
push
cmpsb
mov
jecxz
repnz
popa
out
cld
out
push
add
cmp
xchg
jmp
int3
div
sub
arpl
cmpsb
insl
jo
outsb
xchg
mov
pop
cwtl
inc
call
inc
stos
lret
stos
divl
inc
aad
roll
dec
push
loop
xor
adc
push
ljmp
jae
cmp
mov
stos
jmp
mov
out
lods
pusha
fistl
xchg
adc
pusha
cmpsl
not
fidivrs
pop
jno
scas
imul
jno
movsb
int
push
xor
repz
inc
lret
dec
pop
mov
shll
push
adc
lock
jae
or
iret
scas
push
movsl
aaa
xchg
or
sbb
mov
je
xchg
mov
mov
xchg
ss
shrl
sub
push
lret
jp
add
mov
scas
inc
cmpsb
dec
and
aad
xor
sbb
pushf
cmp
insl
cmp
pop
push
cmp
xor
sub
dec
adc
fistpl
cmp
inc
ljmp
fimull
aaa
dec
out
or
sub
inc
sbb
and
test
movsb
push
dec
mov
into
pop
stos
jns
dec
ret
lret
mov
cmpsb
pop
aam
pop
test
inc
mov
xabort
lret
xchg
fisubrl
test
js
pop
xchg
mov
das
push
lret
lret
hlt
push
fidivs
mov
sub
sub
add
pop
pop
push
push
adc
or
fs
jmp
mov
jge
mov
mov
adc
fistl
fwait
mov
sub
lock
pop
sub
xor
mov
and
push
jmp
xor
push
mov
mov
add
and
leave
stc
mov
adc
iret
das
or
pop
out
repnz
mov
pop
sarb
repnz
es
pop
mov
sub
movsb
push
adc
cs
add
dec
shll
xlat
aas
mov
ljmp
iret
xchg
pop
imul
jb
pop
mov
arpl
xchg
lods
shll
divl
cmp
mov
sub
sub
mov
pop
xchg
cli
or
dec
jb
dec
dec
fs
mov
dec
dec
jg
lret
push
mov
xchg
aam
sub
rcll
outsb
xchg
xor
lcall
ret
inc
and
xor
dec
mov
xor
fwait
jne
mov
loopne
mov
in
adc
lock
add
add
inc
push
push
dec
je
aad
pop
inc
adc
inc
adc
or
pop
lret
ficomps
mov
dec
sub
xchg
mov
cmpl
fmuls
das
out
mov
mulb
fs
imul
inc
sub
xchg
std
call
lret
insl
out
adc
in
sbb
mov
stos
mov
in
arpl
xlat
jo
out
stc
xchg
or
cwtl
test
mov
iret
lret
cmpsb
aad
xchg
xlat
adc
push
shlb
subb
lret
data16
enter
cmp
xor
frstor
mov
mov
stos
ret
loopne
iret
inc
jmp
add
pop
dec
xor
inc
lea
orl
fisubs
sbb
pop
xor
adc
or
xor
arpl
pusha
neg
sbb
sbb
jmp
subl
mov
xlat
sub
shl
adc
popf
add
mov
lret
montmul
cmpsb
inc
loope
hlt
rclb
js
ror
movsl
das
insb
or
or
sub
fwait
mov
aas
ja
loopne
je
dec
xchg
icebp
ret
mov
les
leave
mov
repnz
and
lahf
jbe
sub
bound
sub
js
dec
xor
je
jg
dec
lods
dec
inc
leave
sub
rcll
outsb
test
xchg
sti
lods
inc
rolb
or
adcb
pop
xorb
push
or
jge
inc
inc
ss
dec
sbb
cmpb
icebp
xchg
pop
jecxz
roll
cmpsl
sub
jo
stos
xor
outsb
stos
gs
fimuls
decb
and
fnstsw
js
out
pop
ror
sbb
cmp
inc
adc
test
mov
inc
inc
lret
push
mov
std
add
ljmp
rcl
jp
jle
push
cmpsl
adcb
mov
sub
jns
dec
and
xchg
out
pop
mul
xor
loopne
rol
lahf
xchg
xlat
mov
push
mov
ljmp
insl
push
out
loop
mov
mov
inc
xor
loope
cmp
js
cmc
pusha
inc
filds
stc
xchg
ficomps
sub
insb
cwtl
jg
pop
pop
loop
xchg
lret
les
in
inc
or
sub
lds
xorb
jg
pop
inc
sub
aad
addr16
xlat
lcall
push
mov
jno
dec
dec
cmc
and
add
add
neg
clc
cmc
out
jae
mov
inc
daa
ja
data16
inc
dec
aas
mov
mov
xor
or
add
cmpsb
test
jno
test
mov
xor
lret
dec
test
push
enter
arpl
mov
ja
sub
and
and
pop
inc
sbb
push
push
das
push
adc
into
lea
xchg
popl
pop
or
jb
sbb
dec
shrl
push
pop
mov
rol
xor
xchg
mov
sbb
insl
and
outsl
cvttps2pi
mov
bound
popf
inc
sub
push
xchg
inc
fnstenv
jo
out
mov
pop
iret
push
mov
push
mov
sbb
icebp
inc
stos
rorl
inc
mov
aad
std
push
cmp
sahf
repz
and
dec
popf
mov
lret
inc
lahf
xchg
mov
pop
xchg
mov
sbb
add
or
push
scas
push
cld
push
jg
mov
adc
call
xchg
xchg
fstpt
stc
std
int3
sbb
pushf
jo,pn
insb
insl
mov
jb
popa
mov
xchg
jbe
shrl
pop
xor
repnz
pusha
repz
mov
ja
jno
mov
dec
inc
dec
xchg
xchg
popw
mov
int3
out
cwtl
sub
inc
adc
inc
imul
mov
pushf
test
pop
xlat
in
jmp
insl
mov
in
pushf
rorl
sbb
scas
scas
loopne
loop
loope
arpl
out
push
repz
sti
jb
adc
cmpsl
pusha
push
lcall
push
jae
and
or
xchg
cld
pusha
adc
or
xlat
push
jecxz
out
ds
jmp
filds
mov
mov
or
xchg
js
and
arpl
and
shr
lahf
dec
dec
xor
nop
lods
clc
cmpb
insb
cwtl
cmp
test
mov
jl
in
push
imul
cltd
push
aam
and
insl
cmp
mov
cmp
data16
loopne
add
mov
mov
out
ss
into
aad
pop
aam
mov
lods
push
jnp
push
dec
leave
mov
jg
pop
mov
out
mov
jo
test
jmp
cwtl
outsl
loop
in
fldcw
add
movsl
or
jo
push
cmp
push
into
cmc
in
mov
in
out
dec
jbe
test
sbb
push
clc
stos
jnp
dec
loope
adc
xchg
sarl
daa
fistpl
inc
jb
andb
pushf
mov
cwtl
cld
rcl
cmpsb
push
repz
js
outsl
imul
mov
nop
bound
sbbl
mov
inc
inc
cmc
idivb
fstl
push
pushf
sub
jmp
sub
xor
dec
std
shll
in
inc
xchg
in
mov
add
dec
leave
addr16
inc
jns
cld
rcrb
int
rcll
mov
jbe
adc
adc
shl
cmpl
ficomps
push
leave
enter
dec
push
push
xorb
fldenv
pop
sub
gs
andb
sub
mov
int3
cli
xor
scas
pop
out
fnstenv
cmp
jbe
dec
jl
mov
xchg
icebp
insl
push
mov
clc
in
jmp
mov
cmpsb
loop
lods
adc
xor
xchg
in
adc
fcomip
out
jnp
icebp
jbe
jae
sbbl
mov
sahf
std
add
and
sub
xchg
mov
repnz
xchg
and
lahf
xchg
pop
cmp
add
frstor
sub
out
cmp
inc
or
sti
pop
lea
and
xor
test
icebp
sar
lods
and
mov
lock
xlat
xor
sahf
js
je
sbb
sbb
shll
imulb
adc
lock
dec
cmpsb
divl
scas
push
fisttps
and
xchg
push
jno
sub
insb
cltd
xchg
pop
sub
cmpsl
cmpsl
mov
cmp
or
sbb
addr16
loope
mov
adc
clc
jmp
push
dec
adc
xchg
xchg
das
fiaddl
inc
or
shlb
dec
stos
jno
cmpsl
pop
movsb
or
pop
cli
sub
dec
je
and
adcl
shll
dec
inc
and
outsl
dec
jae
dec
or
popf
adc
mov
lcall
mov
push
lea
pusha
repz
mov
test
xor
dec
nop
xchg
xchg
lret
sbb
pop
mov
daa
push
daa
es
in
sub
imul
xchg
push
cmp
jae
fimuls
repz
stos
cmpsl
inc
xchg
adc
out
add
arpl
sbb
sub
add
aas
add
pop
cmp
mov
cwtl
fwait
sti
mov
jge
sub
sbb
xchg
jp
scas
div
stos
cmpsl
sub
addb
mov
int
inc
xor
shll
mov
repz
mov
sub
cld
mov
in
jno
mov
sub
inc
int3
and
out
idivb
scas
cltd
add
aad
mull
movb
in
int3
sub
mov
pop
jnp
sub
and
nop
jns
call
add
or
lock
mov
ffreep
cmp
inc
inc
cltd
sub
fs
xchg
fucom
in
stos
and
pop
pusha
enter
int3
sar
jmp
xor
jp
pop
mov
addl
push
movsb
fwait
mov
into
jnp
mov
inc
movsl
pusha
loopne
test
arpl
clc
or
sbb
push
in
inc
push
inc
mov
push
xchg
and
out
inc
adc
sub
fs
push
mov
adc
and
jnp
in
testb
mov
cmp
pop
jmp
imul
sar
lea
std
mov
mov
push
add
dec
movsl
push
call
leave
neg
xor
insb
jbe
in
rorb
les
mov
call
pop
adc
pop
xchg
arpl
mull
sbb
or
lahf
and
mov
add
sbb
fldt
idivl
test
movsl
push
pop
pushf
in
fbld
dec
fadds
iret
xchg
imul
dec
sub
fildll
cli
jmp
and
inc
cld
jecxz
mov
jle
xchg
scas
and
mov
stos
sahf
dec
sbb
adc
sarl
xchg
std
xchg
mov
imul
cmc
sbb
cld
sub
adc
mov
repnz
pop
cmp
std
dec
ja
sbb
sti
jge
fdivl
in
push
xor
out
sub
xor
sub
dec
sub
sub
push
hlt
jns
jnp
imul
fisubs
mov
sbb
pushf
mov
aas
xchg
adc
pop
lret
insl
push
mov
inc
inc
ljmp
cmp
dec
add
or
pop
arpl
jecxz
or
sbb
mov
cmpsb
xor
nop
mov
xchg
outsb
cli
pusha
push
outsb
cli
insb
push
gs
movsl
out
adc
test
bound
mov
mov
cmpsl
mov
or
xchg
loope
add
loop
cmp
scas
ss
push
pop
nop
inc
fsubs
int3
dec
push
xor
sbb
xor
jle
repnz
dec
xchg
lea
and
jp
inc
in
or
loopne
sti
fisubrl
mov
mov
insb
pop
lea
lods
sub
jae
dec
pop
sub
ss
adc
addr16
aas
mov
xor
and
outsb
scas
adc
xchg
mov
nop
in
adc
adc
and
adcl
push
adc
out
mov
and
xchg
test
lea
mov
cli
jecxz
mov
push
or
out
push
movsb
add
dec
mov
xchg
insb
mov
add
pop
lret
adc
mov
and
sbb
xor
fbstp
stc
enter
movsb
les
in
vmread
stos
in
push
int3
mov
jno
lret
aad
adc
cmp
call
jne
xchg
test
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
jmp
cmpsl
fisubrs
jbe
jbe
outsb
xchg
movsl
out
orb
jnp
pushf
jnp
jle
mov
mov
dec
data16
mov
mov
ret
or
sbb
ret
adc
mov
cltd
adc
call
pop
mov
mov
mov
mov
sub
fildl
lock
jg
xor
cmpl
mov
push
je
cmp
rolb
mov
mov
jnp
mov
cli
jl
cmp
cmp
call
in
push
cmp
leave
fnsave
jl
pop
mov
inc
pusha
cmp
aaa
std
test
adc
andb
enter
pop
jnp
add
mov
out
shlb
mov
fcompl
scas
movsl
lods
push
push
fsubl
insb
add
jo
push
test
push
in
or
pop
cmp
adc
mov
test
arpl
ffreep
fdivs
cmp
pop
adc
and
ret
sbb
xchg
nop
mov
xor
leave
mov
roll
divl
rorl
mov
adc
adcb
pusha
out
mov
out
inc
inc
cmp
cmp
push
dec
push
jp
xchg
dec
push
xor
daa
cmpb
add
lds
xchg
pop
stc
dec
pop
cmp
lea
fsubl
mov
inc
mov
cwtl
shlb
nop
mov
push
ret
dec
insl
xchg
xchg
js
dec
idivl
adc
cmp
test
adc
cmp
scas
sbb
dec
ret
imul
or
cmpsl
cli
pop
pusha
es
arpl
test
cmp
out
and
cli
je
jne
dec
adc
inc
into
xchg
dec
pop
pop
cvttps2pi
repz
das
push
add
cmp
cmp
sti
mov
cmp
scas
shll
jmp
lret
jo
adc
jp
icebp
in
pop
push
rcr
xor
das
push
mov
clc
cld
loop
adc
imul
fldcw
xor
lret
mov
xchg
mov
push
cwtl
pop
mov
ss
cmp
loope
arpl
repz
sub
sbb
add
fisubl
cwtl
movl
in
and
scas
mov
xor
out
mov
rcr
dec
lods
orb
mov
sahf
dec
xlat
out
lods
js
andl
out
loope
dec
adcb
push
jp
add
rorl
and
test
int
ljmp
pop
imul
jp
cmp
lods
and
inc
cwtl
pop
jb
lds
mov
arpl
pushf
popf
push
lods
mov
iret
cs
testb
inc
lret
cmp
push
push
shll
mov
pop
lcall
xchg
push
lds
stc
cmp
div
xor
ret
inc
or
mov
loope
lods
sub
and
mov
arpl
push
arpl
cld
xchg
data16
loopne
mov
in
mov
roll
sbb
fdivl
inc
add
lret
and
fisubs
sbb
add
push
jns
incl
leave
xchg
hlt
or
stos
lcall
lock
cmpsb
pop
fs
push
jle
rcrl
and
push
xlat
xchg
lahf
mov
jnp
icebp
cwtl
hlt
bound
push
push
aaa
add
insl
enter
mov
xchg
lret
xor
pop
cmp
xor
cmpsl
add
cld
orb
int
or
bound
sub
out
les
lret
mov
repnz
cmp
ret
mul
xlat
xor
scas
add
lods
adc
daa
inc
bnd
rclb
call
inc
and
jmp
push
mov
adc
aaa
rcll
push
dec
xchg
fwait
jae
rorb
scas
cmpsb
popf
insb
dec
mov
sub
lods
mov
mov
cmp
xchg
xchg
mov
xchg
hlt
adcl
sahf
push
and
xchg
outsl
mov
inc
cwtl
lock
mov
jecxz
mov
in
test
ljmp
add
fidivrs
outsl
jle
out
shll
jno
jae
inc
fwait
lcall
jmp
add
and
jnp
mov
aad
ss
fwait
int
test
lret
push
sbb
notl
mov
aaa
push
cmc
aad
adc
sub
cmp
fcoml
inc
imull
test
mov
xor
les
scas
lcall
cmpsb
mov
scas
or
aas
xor
out
mov
cmc
pusha
sbb
mov
pop
clc
pop
les
rorl
pop
lret
aam
dec
mov
lods
pusha
fnstenv
sbb
jne
out
xor
pop
push
and
lods
dec
and
lcall
pop
lds
xchg
xchg
lods
popa
shlb
sti
les
popf
loop
add
mov
pop
popf
lds
cvtps2pi
inc
fdivs
shlb
negl
std
or
cli
mov
mov
movsl
shr
adc
repnz
push
sbb
cltd
push
adc
inc
mov
push
mov
ja
cmpsb
movsl
inc
dec
jbe
mov
add
test
ja
enter
dec
imul
pop
jno
sub
popa
insl
fcmovbe
sbb
aaa
push
sahf
cmp
jne
push
fsubp
ds
out
xor
push
pushaw
clc
jecxz
add
pop
outsl
test
clc
cmp
fnstenv
mov
call
inc
cmp
sub
fstp
pop
push
pop
jbe
inc
sahf
mov
and
adc
mov
out
pop
jno
lods
mov
rcr
xor
popa
xchg
sbb
jmp
in
pusha
push
sbb
adc
sbb
sub
lahf
out
lcall
jne
aam
sbb
outsb
loopne
in
dec
ja
adc
cmp
ret
sbb
pop
xchg
sbb
adc
cmpb
dec
sti
stc
mov
sbb
add
cmp
out
sbb
dec
xchg
out
cwtl
mov
movsb
jecxz
test
aas
push
mov
lcall
int
mov
das
pusha
adc
xchg
sub
insl
in
bound
ja
dec
into
out
nop
cmp
shll
fchs
jp
add
xchg
pop
pop
mov
sub
sahf
jb
xchg
dec
add
test
mov
or
lds
sbb
gs
cs
leave
pop
mov
js
sub
mov
mov
cmp
adc
push
sub
inc
mov
push
gs
push
pop
std
lds
fwait
xchg
lcall
cmp
ds
ret
xor
cmp
out
mov
outsl
mov
inc
adc
inc
adc
roll
and
filds
sub
mov
inc
mov
fsubs
push
cmp
sub
and
mov
and
sub
adc
and
lret
xchg
xlat
mov
push
jbe
push
xchg
js
arpl
and
test
xchg
sub
and
or
sbb
adc
mov
notl
data16
loopne
or
pop
jne
mov
push
or
xchg
pop
push
scas
xor
mov
cmc
jae
test
das
mov
xchg
mov
xchg
add
rcll
sbb
ss
cmp
movsl
push
fsts
inc
mov
push
rolb
mov
xor
add
and
mov
pusha
sbb
jbe
in
in
add
hlt
jns
xchg
test
xor
pop
in
add
out
cmp
push
popf
stc
sahf
sub
mov
nop
dec
call
pop
or
dec
sub
jle
aaa
mov
xlat
out
leave
imul
cmpsl
mov
incl
dec
adc
dec
imul
adc
gs
dec
pop
loop
icebp
shll
dec
push
je
mov
imul
outsb
mov
ret
sbb
or
jo
mov
lods
add
and
mov
fstpl
mov
adc
pop
mov
xchg
sbb
roll
loop
scas
mov
xchg
sub
xor
pushl
sar
push
sbb
out
shll
or
out
insw
movsl
fwait
movsb
fistps
fsubrl
cmpsb
loopne
imul
es
push
or
mov
divl
dec
pop
mov
sbb
outsl
int3
mov
mov
les
out
hlt
fistpll
shll
clc
mov
sub
fmull
xor
test
adc
push
pushf
ds
out
jle
push
jle
mov
ds
clc
aaa
imull
stc
sub
ret
leave
dec
pop
pusha
out
loope
mov
or
shll
mov
jo
lahf
aaa
scas
pop
adc
pop
test
shl
sbb
ljmp
fistpl
fldenv
pusha
cmc
mov
and
mov
mov
je
hlt
add
jecxz
popf
shlb
cmpb
and
pop
cmp
pop
inc
rcrb
add
sub
fnsave
sti
cwtl
mov
dec
push
jno
dec
xor
popa
scas
inc
mov
fs
insl
inc
in
outsl
mov
lods
lret
adc
jb
sbb
loope
gs
out
movsb
les
loopne
sbb
lret
or
in
adcb
or
mov
sbb
out
dec
mov
xchg
ret
shl
pop
push
sub
jns
mov
or
inc
std
xor
cmp
dec
add
cld
xor
repnz
testl
mov
mov
pop
inc
shrl
xchg
mov
add
add
sbb
xor
out
mov
mov
pop
pop
mov
ja
sbb
mov
dec
adc
fstpl
imul
hlt
lods
lods
sbb
push
in
jbe
addr16
push
lods
sarl
adc
add
and
mov
push
aad
fldt
push
inc
or
cmp
jnp
xchg
mov
out
add
dec
fwait
inc
sbb
nop
in
lods
xchg
lret
ret
jge
push
push
mul
cmp
js
pop
lahf
cmp
adc
inc
stc
xchg
lods
pop
in
inc
daa
xchg
js
cltd
repz
adc
flds
ret
pop
pop
jae
inc
in
arpl
or
ds
mov
fdivl
insb
loopne
scas
fmulp
push
mov
fmulp
loope
pop
mov
aas
pop
jbe
add
xlat
mov
pusha
inc
negl
inc
test
jne
js
push
outsl
insb
mov
add
imul
jns
cmp
add
insb
or
jns
adc
ret
or
nop
push
mov
gs
mull
out
pop
insl
pop
xor
pop
ljmp
jne
jecxz
jmp
inc
cmp
aam
adc
mov
rcrl
int
add
int3
add
add
adc
enter
cld
negb
mov
push
in
mov
loope
mov
and
mov
mov
jns
rolb
sbb
movsb
fmull
push
out
sbb
lods
and
sbb
sahf
add
xchg
outsb
mov
std
roll
arpl
stc
inc
jge
int3
fstpt
mov
jo
cltd
fldenv
sub
adc
es
cs
lret
xlat
inc
inc
daa
sbb
mov
loopne
xchg
les
jnp
pop
cmp
cld
fs
nop
mov
ja
fisubrl
cmp
or
dec
and
loop
test
sub
mov
mov
xchg
lea
dec
xor
mov
cmp
js
pop
testl
out
inc
add
ret
icebp
sti
in
lds
mov
or
fwait
push
jp
stc
mov
cmp
inc
mov
push
fsubl
mov
ds
push
mov
push
mov
xlat
sbb
inc
ret
int3
jle
mov
test
mov
hlt
into
gs
xchg
mov
mov
sub
mov
mov
cltd
movsb
jne
cmp
or
xor
mov
scas
scas
jns
int
pop
rcrl
sbbb
and
loopne
fstp
je
nop
push
ret
aam
sub
pop
ficompl
nop
scas
lahf
call
bound
fsubrp
jne
sub
sub
sbb
push
mov
lahf
pop
int3
hlt
repnz
cmc
repz
sbb
out
dec
push
arpl
cld
cmc
lcall
mov
ds
aaa
test
dec
xchg
int
xchg
mov
cmp
push
mov
stc
add
and
cmp
std
filds
outsl
jmp
out
sar
push
push
jl
xorb
pop
imul
test
aad
popl
cmc
enter
mov
out
and
xchg
js
mov
into
mov
and
mov
jg
pop
mov
nop
add
lcall
pop
push
adc
xor
dec
dec
adc
mov
dec
jns
xor
std
fwait
lock
popa
and
fldenv
lret
in
stc
add
in
push
stos
and
stos
inc
fcmovnb
sbb
test
add
insl
cmp
xor
cld
out
jb
mov
arpl
fs
roll
sahf
dec
dec
test
push
inc
sbbl
jne
cmc
iret
add
dec
inc
scas
and
loop
add
and
mov
icebp
or
out
xor
xlat
dec
jno
rclb
movsb
sbb
jmp
jb
flds
cmp
push
loop
lret
sbb
lret
stc
xchg
push
mov
aas
jg
dec
sub
lods
cmp
jg
jbe
cmp
lret
adc
notl
push
cmp
loopne
lock
jg
add
push
std
mov
aam
dec
negb
push
mov
mov
inc
pop
push
dec
es
push
jmp
pop
in
jecxz
dec
repz
nop
cmpsb
mov
jl
xor
or
lret
jg
jl
shlb
and
fistl
arpl
iret
in
scas
and
aad
fwait
arpl
popf
test
out
dec
lea
imul
ja
cmp
mov
jl
negl
or
dec
pop
imul
rcrl
mov
loopne
mov
inc
lcall
adc
pushf
xchg
and
or
repz
xchg
pop
inc
jae
rol
insb
and
push
lea
pop
sub
call
call
mul
rorb
xchg
in
sbb
jns
enter
inc
pop
test
push
inc
cmp
orl
mov
adc
imul
or
popf
mov
int
cmp
and
mov
jmp
jp
cmp
ja
shrl
add
or
in
adc
lret
jb
shlb
loopne
push
sbb
push
sub
cmp
dec
inc
loope
xor
sti
push
ja
rol
and
inc
cld
loopne
inc
fwait
mov
fldt
push
scas
xchg
jbe
scas
in
cmp
les
daa
inc
iret
jnp
insb
loop
jmp
sbbl
or
dec
xchg
mov
cs
dec
mov
push
shl
sbb
je
ds
mov
fcomi
inc
cld
pop
stc
jmp
js
leave
fmuls
sub
aad
mov
jmp
mov
add
mov
cs
dec
mov
push
pop
sbb
mov
and
outsl
xor
xor
bound
dec
cmp
repz
sbb
fldt
xchg
sub
mov
lret
ret
or
inc
in
jle
cli
test
orb
imul
mov
dec
jp
arpl
movsl
push
stc
jno
mov
push
popf
icebp
cmp
push
jg
adc
push
out
sub
sbb
mov
popa
aam
cmc
ret
dec
sbb
leave
lods
and
fsts
in
add
lock
iret
insb
jo
and
xchg
sub
cmp
aaa
stos
or
int
insb
mov
or
mov
in
sti
lods
pop
rcl
outsb
mov
dec
cwtl
adc
in
inc
testb
push
outsb
iret
adc
pushf
or
push
sti
repnz
jg
icebp
pop
jle
insb
imul
push
jns
enter
in
cmc
sub
jne
pop
push
test
and
xchg
push
xor
mov
pop
adc
popa
fisubrl
sbb
test
xor
out
inc
fistpll
or
daa
mov
notb
mov
js
add
or
mov
and
dec
divb
insb
enter
stc
pop
cli
mov
cltd
mov
adc
fwait
out
jo
push
nop
cmp
pop
loopne
mov
xchg
shl
into
mov
inc
xchg
pop
notb
push
xlat
jecxz
mov
incl
mov
sub
mov
movsb
fdivr
dec
inc
mov
push
jo
add
mov
push
fadd
std
shll
adc
jb
xchg
ret
xchg
popf
xlat
inc
out
sub
subl
movsb
fucom
mov
sbb
pop
out
mov
pop
imul
jae
adc
pop
push
fisubs
std
sub
dec
adc
in
jmp
ss
dec
xchg
cmp
jge
nop
push
mull
ds
mov
mov
or
sbb
push
icebp
push
pop
loopne
out
dec
cltd
dec
sbb
dec
push
adc
testl
dec
sub
je
dec
gs
pop
into
mov
sub
inc
lret
pop
mov
cli
outsl
mov
mov
arpl
idivl
cli
stos
and
add
test
push
mov
pusha
mov
xor
imul
data16
pop
outsl
stos
das
movsl
bound
stc
sbb
sub
xchg
mov
imulb
pop
mov
push
add
cmp
repz
jmp
or
mov
inc
mov
and
cli
jb
sub
push
cld
mov
jmp
lods
push
push
cmp
loop
sub
mov
cld
jmp
in
in
lods
pop
xchg
inc
fs
jl
sbb
jbe
pop
loopne
sub
or
mov
jne
scas
xchg
inc
inc
adc
mov
xchg
mov
insl
push
adc
loope
sub
mov
inc
ds
shrl
jl
clc
sbb
sbb
dec
jno
push
js
je
and
ljmp
subb
cld
jae
sbb
inc
mov
fisttpll
scas
lods
and
popf
push
movsb
dec
mov
xor
sbb
jnp
flds
insl
mov
mov
js
and
cwtl
jle
push
pop
loopne
call
xchg
jmp
push
and
je
vcmpsd
sahf
movsb
pushf
push
je
inc
inc
xchg
ss
and
cmp
stos
lods
or
xchg
and
icebp
mov
outsb
mov
rcrb
dec
push
add
xchg
fidivrl
std
sbb
jbe
fmuls
jb
push
out
nop
jae
lods
sbb
jo
push
jae
xchg
adc
loopne
pop
xchg
test
imul
ja
xchg
data16
aas
and
fstps
popa
into
mov
rolb
je
insl
xchg
test
xchg
adc
je
incl
stos
mov
inc
icebp
push
cmp
js
jp
fwait
cltd
ficomps
aad
mov
addr16
push
mov
std
adc
mov
add
xor
fsin
pushf
xchg
aam
lds
fiaddl
xlat
loope
xchg
sub
cwtl
or
lahf
fdivs
std
fnstenv
xor
push
in
mov
dec
outsl
rcr
xchg
repnz
repz
mov
pop
pop
push
dec
stc
jno
inc
repnz
push
mov
pop
push
subl
jmp
cmp
pop
and
pop
sahf
inc
lret
jo
add
dec
loop
mov
sbb
imul
inc
daa
cmpb
mov
jb
lea
ret
icebp
cmc
xchg
mov
sbb
inc
popa
in
adc
daa
stos
iret
xrelease
data16
std
xchg
adc
add
pop
jne
cli
in
lods
js
xchg
rcr
stos
bound
mov
loope
or
cs
fidivs
push
xchg
dec
divl
xor
outsb
inc
shll
in
insb
loope
pop
fwait
test
adc
lretw
sub
lea
push
shrl
adc
pop
adc
sbb
out
aad
push
mov
or
in
rcll
stos
pop
icebp
mov
mov
cmp
out
jle
stos
sub
sub
cwtl
adc
cmc
out
fwait
pushf
and
xchg
fs
inc
and
fisttps
jg
daa
dec
nop
lock
xor
and
ret
in
adc
in
cmc
push
pusha
add
dec
test
insb
dec
mov
cli
sub
out
sbb
push
push
fdivrs
das
jae
push
scas
insl
push
call
mov
aam
jmp
add
dec
push
pop
fdivrl
xchg
das
mov
sbb
es
bound
in
aam
ret
pop
jp
aas
mov
fs
out
cmp
mov
xchg
xor
fstl
fxch
push
and
mov
pushf
ljmp
xchg
pushl
push
ds
fdivrl
sbb
dec
outsb
sbb
ror
ret
inc
fwait
sbb
ret
fimull
call
adc
rcll
jp
outsb
in
jge
adc
pop
popa
cltd
dec
mov
ja
out
cwtl
xchg
popf
data16
addr16
adc
adc
movsl
lock
test
outsb
push
and
sub
aam
iret
mov
jecxz
adc
pop
cmp
or
int3
fstps
sti
mov
push
xchg
loope
mov
fdivs
lds
adc
mov
lds
jo
pushf
imul
gs
movsb
mov
mov
push
lret
cmp
xchg
lods
jg
mov
pop
jne
popa
repz
js
cmc
xchg
mov
enter
jbe
fwait
lea
jg
dec
and
js
xchg
jne
sub
xlat
mov
fbld
xor
pop
jmp
cmpsb
shlb
mov
out
pop
push
mov
and
cld
lods
pop
push
lds
ljmp
sub
roll
cmp
sub
sbb
xchg
mov
hlt
cmpsl
imul
pop
push
jp
icebp
mov
cmp
xor
pop
inc
xchg
push
out
lods
push
ret
xor
jns
ret
fmull
and
lods
mov
insb
xor
adc
pop
xlat
and
outsb
mov
pop
mov
mov
cmc
rorb
ret
movsl
lea
mov
dec
mov
inc
mov
add
mov
cmp
mov
mov
pop
in
testb
xor
cmp
movsl
sub
scas
movsb
mov
sub
lods
mov
lret
ljmp
mov
add
aam
sub
gs
or
cmp
cmp
jnp
pop
and
repz
movsl
movsl
cli
cli
divb
push
lcall
pop
test
stos
push
inc
loopne
in
cmc
out
add
or
in
repz
jno
mov
ror
test
int
mov
loopw
push
mov
jl
push
imul
push
into
in
mov
cld
out
pop
scas
inc
xchg
sub
lcall
push
das
in
bound
scas
or
mov
jnp
repnz
xor
dec
jmp
dec
fisubs
daa
inc
push
aam
inc
and
iret
rcrb
sub
cmp
sbb
and
shll
push
int
adc
int3
ljmp
out
jmp
bound
fidivl
xchg
out
xchg
mov
cmp
lea
add
pop
mov
mov
and
loop
xor
je
in
cmp
xchg
push
inc
mov
pop
cltd
test
mov
lock
mov
mov
je
mov
fiadds
jne
incb
xor
ja
divl
xchg
push
test
cmpxchg
pop
mov
push
push
mov
jnp
xlat
dec
lret
mov
xor
test
mov
pushf
lahf
popf
fisttpl
loopne
dec
ret
jns
test
rorb
enter
adc
out
adcb
sahf
rcl
and
out
xchg
sbb
sarb
dec
mov
insl
jo
sbb
mov
dec
fnstenv
dec
repz
aad
mov
sbb
loopne
les
pop
add
sbb
in
mov
cltd
das
push
push
mov
inc
mov
rolb
shlb
cs
ja
out
add
scas
clc
adc
sub
dec
data16
and
adc
sbb
imul
rolb
enter
cmp
loop
mov
jg
lea
dec
pop
mov
or
push
ds
lret
lods
fwait
jnp
insl
ret
mov
cmp
aam
mov
mov
dec
ret
cmp
add
into
nop
mov
je
cmpsl
ret
mov
das
pop
fwait
mov
iret
lret
ficomps
mov
jo
shr
and
inc
test
out
push
andl
mov
dec
shll
arpl
lea
mov
inc
mov
push
or
pop
push
pop
xchg
imul
mov
mov
dec
xor
dec
jb
mov
cmpsl
jle
jo
scas
test
call
outsl
push
aaa
jns
cli
jnp
and
in
adc
dec
call
call
and
pop
jp
test
jle
add
xchg
push
out
lea
roll
imul
std
xchg
xor
pusha
in
xor
fstl
jge
divl
es
mov
adc
and
enter
inc
pop
xchg
repnz
testb
in
adcb
lods
xor
ja
push
cmp
push
dec
push
xlat
hlt
dec
mov
je
stc
and
in
jnp
es
add
neg
stc
jae
aad
loope
jb
sub
add
loopne
int3
hlt
push
adc
sub
mov
mov
mov
call
leave
or
xchg
cs
inc
mov
xchg
scas
std
mov
hlt
sahf
sti
mov
pop
iret
inc
in
xor
cmc
xchg
js
inc
lret
dec
mov
mov
push
cmpsl
lcall
mov
fmull
dec
inc
jge
mov
mov
push
loop
sub
adc
imul
push
shll
leave
pop
mov
add
decb
pop
sub
aaa
mov
push
or
sbb
push
dec
scas
xchg
cmp
pop
push
mov
mov
test
addb
mov
xchg
pop
icebp
outsl
mov
movl
andb
mov
pushf
mov
bound
testb
enter
bound
pop
fmull
jb
enter
lea
mov
cmc
stos
fidivrl
jno
push
sbb
lock
fsubrs
movsb
xchg
filds
mov
cli
loope
or
adc
ror
and
imul
xor
cmp
and
insb
imul
jns
inc
jl
mov
sbb
mov
push
cmp
clc
mov
fisttpll
lds
and
fdivrl
aas
std
js
mov
fcoml
rol
dec
sub
push
cld
push
rorl
dec
cmp
mov
out
sbb
inc
add
mov
fisubl
add
adc
sbb
in
inc
or
xchg
lea
adc
mov
push
outsb
dec
pop
pop
sub
out
and
dec
ffree
mov
outsl
cmp
stc
xor
inc
ljmp
cmc
and
stc
mov
ret
fidivrl
mov
addr16
adc
pop
sub
bound
inc
ljmp
jno
cmpb
or
adcl
ljmp
stos
mov
js
pushf
jno
mov
push
imul
lea
int
jg
rorl
addb
fcoms
rcrb
test
mov
xor
nop
and
fidivrs
cltd
nop
lds
sub
jns
inc
aam
or
xor
push
and
dec
xor
add
adc
loopne
sbb
add
sbb
push
pushf
mov
inc
scas
lret
adc
pop
push
push
jmp
xchg
sub
xlat
icebp
gs
sub
outsb
mov
in
mov
addr16
adcb
into
add
pop
js
mov
cmp
scas
fs
addr16
dec
scas
jle
xor
repnz
sub
jg
ficoms
test
push
cmp
les
adc
inc
scas
mov
and
repz
mov
cmp
or
xchg
sub
dec
push
les
sub
mov
jae
outsb
sti
popl
jge
sbb
xor
outsb
xchg
dec
or
fnstcw
shrl
lcall
adc
and
repnz
add
fwait
jno
je
mov
jmp
jns
mov
fdivrl
lds
mov
push
cli
aam
loope
sarl
xlat
jecxz
mov
sbb
mov
mov
push
in
adc
sub
sub
pop
scas
push
jg
jmp
mov
xchg
lea
or
pop
xor
cmp
mov
xchg
clc
add
sbb
xchg
shrb
pop
sub
pop
insb
iret
xor
cltd
orl
or
fwait
lahf
mov
movsl
fbld
loop
out
and
je
add
lods
push
mov
mov
jecxz
xor
mov
shll
add
insl
dec
xor
sbb
jb
jecxz
inc
lcall
out
stos
sub
inc
jae
mov
push
mov
mov
movsl
xor
xchg
adc
repz
out
aad
insb
push
jle
inc
push
xchg
call
fbstp
stos
gs
push
es
pop
jb
cld
mov
or
lods
shll
pop
jno
in
cmpsb
icebp
test
inc
movsb
xlat
sbb
sbb
mov
movsb
xchg
inc
int3
sub
cmp
popl
xchg
sbb
mov
clc
jb
lds
jg
adc
ljmp
push
and
adc
fs
les
sub
or
pavgw
imul
mov
in
mov
loopne
xor
lret
jo
repnz
shlb
and
sbb
sbb
cltd
and
imul
arpl
cmc
mov
adc
pop
cld
push
cld
jl
in
dec
push
adc
fdivrl
push
dec
fwait
pushl
mov
and
jno
iret
test
push
xchg
cmpsb
jmp
jb
jno
into
data16
add
jo
in
hlt
inc
cmp
push
push
xor
movsl
nop
in
xor
shrl
fsubs
mov
addl
inc
addb
pop
mov
mov
test
insb
cld
and
inc
imul
pusha
outsb
sbb
xor
shrl
mov
dec
jle
jmp
pop
bnd
hlt
lret
jno
fidivrs
mov
leave
fistpll
aas
pop
push
jp
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
and
xor
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
orl
movl
movzbl
sub
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
call
mov
dec
mov
jmp
mov
xor
jmp
mov
hlt
mov
ja
out
je
push
xchg
sbbb
jnp
clc
pushf
jnp
call
in
cmp
sti
call
out
aaa
bound
add
cltd
icebp
call
xchg
and
or
or
push
jl
iret
cld
cmp
lods
push
test
inc
outsl
jmp
aam
pop
cmp
xchg
inc
add
fmul
sbb
out
popf
insb
xor
sub
fistpl
cmpsb
stos
imul
mov
sub
rorl
int
pop
sub
in
lds
adc
loopne
jnp
xor
dec
mov
jns
leave
mov
in
sub
push
rcrb
pop
jnp
sbb
add
jle
fisubrs
xor
jg
imul
jno
dec
mov
lea
push
les
mov
mov
dec
stc
inc
insb
sbb
aas
xor
dec
pushf
or
dec
lods
rcrb
fdivs
mov
cmp
sub
xchg
mov
or
cmc
pushf
and
lahf
adc
push
ret
ljmp
dec
push
loope
sub
push
pusha
lret
inc
sbb
mov
clc
ljmp
sti
test
loope
into
les
loope
jo
inc
lods
push
mov
jo
cmp
and
lret
ds
lock
sti
inc
adc
insl
pop
testl
push
in
movsb
mov
or
jb
movsb
mov
pop
lock
xchg
or
push
jecxz
mov
enter
pusha
pop
call
fdivs
in
pop
jle
push
lahf
jmp
xchg
sbb
adc
lock
jno
roll
adcb
outsl
dec
fwait
es
out
mov
mov
push
and
jno
pop
sub
fs
and
mov
addb
fimuls
jbe
test
xor
addr16
cmp
pop
out
shr
fbld
test
lods
daa
jle
dec
push
add
or
adc
sub
dec
dec
mov
call
mov
add
pop
adc
enter
outsb
sti
int
sbb
push
dec
jle
adc
mov
test
ret
pusha
subb
ljmp
xchg
and
and
push
add
pusha
jne
sbb
inc
out
fidivs
and
and
stc
sbb
xorl
inc
icebp
inc
jge
inc
outsl
or
setb
mov
aad
test
sub
jnp
sbb
mov
jmp
decl
dec
mov
loop
test
cmp
hlt
push
adc
cmpsb
adc
jbe
xor
add
imul
or
jg
lods
or
pop
adc
sbb
das
xchg
pop
call
sti
inc
ret
mov
ljmp
jp
dec
aam
cmpsl
cmp
shl
dec
sub
sbb
pop
mov
xchg
add
jl
xchg
sub
and
hlt
ss
roll
adc
fs
xor
push
xlat
push
dec
sub
fmul
jle
sbb
cmp
insb
xchg
cs
jno
ja
fs
aad
fxch
daa
rcrb
scas
inc
sahf
jl
lea
imul
inc
cmp
xor
inc
fimuls
xor
lret
xor
rorb
ss
cmp
int3
les
test
adc
in
into
add
xchg
daa
sbb
fs
nop
xor
push
add
fdivl
xchg
test
clc
ljmp
dec
mov
sub
cld
rolb
dec
pop
push
push
add
fs
jl
jnp
sbbb
push
pop
xchg
outsl
popa
jae
loope
cmpsl
in
mov
dec
xchg
pushf
push
in
mov
adc
mov
mov
adc
frstor
stos
outsb
in
movsb
imul
or
test
subb
sbb
outsb
xchg
rorb
stos
pop
jnp
sti
testb
aaa
sbbb
xchg
sub
or
push
push
add
mov
mov
aad
pop
lock
jle
jns
adc
inc
xchg
and
mov
movsb
dec
loope
ds
jns
bound
arpl
push
scas
inc
jne
es
pop
scas
xor
ficoms
mov
adc
pop
out
shrb
or
fs
cmpsb
stos
mov
and
jle
mov
call
ror
repz
aam
mov
in
push
push
test
xchg
test
adc
idivl
movsb
add
inc
pop
test
shrb
leave
and
ror
ret
sahf
fistpl
adc
mov
flds
dec
mov
popa
and
ficoml
xchg
jne
dec
fbstp
daa
adc
mov
sbb
lds
mov
dec
mov
cmp
sbb
pop
mov
ja
sbb
adc
stos
and
mov
call
cmp
cltd
mov
push
jo
in
dec
fadds
sti
sbb
test
dec
clc
and
push
imul
mov
xchg
mov
les
xchg
lods
mov
pop
push
lds
popf
mov
jle
divl
enter
xchg
dec
test
jnp
pop
push
pop
aas
movsb
cmp
inc
dec
push
push
dec
mov
add
jnp
xor
mov
fistl
or
lods
je
ret
cmc
clc
dec
sarl
push
adc
mov
pop
pusha
out
andb
xor
lret
sbbl
jp
xchg
jae
add
or
dec
sbb
stos
daa
sbb
iret
and
je
fcomps
pavgw
cmp
outsb
aas
test
andl
loopne
mov
flds
mov
xchg
notb
ret
out
lock
cmp
or
icebp
mov
adc
adc
mov
dec
out
and
sbb
fiadds
push
sub
mov
add
xchg
push
hlt
add
pop
test
mov
pop
lods
pop
mov
ret
bound
or
inc
xchg
pop
push
xchg
lds
pop
adc
mov
push
sbb
pop
repnz
xchg
lret
xchg
pop
push
out
mov
lock
mov
pushf
daa
mov
dec
and
sub
dec
addb
js
cmp
call
jle
mov
jle
inc
sbb
pop
int3
and
inc
mov
jno
mov
xlat
xor
lahf
out
sbb
out
dec
fwait
cmp
notl
xchg
iret
cmp
pop
mov
insl
test
lret
test
divb
loop
xchg
lcall
incl
xor
lods
gs
roll
mov
pop
jl
mov
out
or
push
push
mov
push
into
cmpsl
sbb
xor
xchg
mov
loopne
imul
subb
mov
cmp
xchg
das
js
ret
data16
add
imul
and
cmp
paddq
ja
pusha
mov
push
imul
ret
lea
push
and
repnz
jbe
loope
jecxz
xor
cmp
roll
test
xor
push
iret
mov
mov
shlb
ss
mov
insb
mov
test
les
out
cs
fs
adc
jno
mov
and
push
inc
je
sarb
xor
cwtl
xor
clc
shll
inc
lock
jmp
cmp
mov
jno
ret
mov
ficoms
aad
roll
sub
mov
js
aad
sar
mov
or
cli
push
leave
push
pop
leave
jg
sub
jle
lret
add
std
or
jge
sub
sub
and
into
in
rcll
lds
mov
aam
xlat
xchg
sbb
loop
cltd
sbb
or
fistps
lods
in
jle
in
xchg
pop
fcmove
fisttpll
sbb
lret
adc
jmp
je
xor
outsb
or
jmp
or
nop
jecxz
bound
insl
mov
js
clc
mov
cltd
test
and
call
pushf
sbb
cltd
arpl
leave
cmp
sbbl
es
repnz
sbb
xor
bound
pop
jno
pop
inc
cmp
fcoml
out
fnstsw
js
push
pop
roll
adc
mov
push
xor
insl
mov
sbb
push
stos
lock
pop
inc
pop
ljmp
sbb
xchg
fstl
daa
outsl
mov
adc
jmp
pop
jg
inc
inc
popa
dec
inc
fsts
rcrb
scas
ret
jns
frstor
fwait
imul
and
cmp
cmc
xchg
stos
xor
ret
push
or
fldl
mov
jnp
pop
mov
sbb
inc
and
xchg
fs
mov
cltd
insl
jns
add
push
xor
frstor
sub
xchg
rorb
xchg
cmpl
dec
gs
xchg
mov
leave
add
test
add
inc
loope
sti
int3
cmpb
fldl
jecxz
mov
mov
sbb
sahf
popf
cmova
xor
jp
pop
nop
xchg
es
lcall
lds
pop
ljmp
dec
push
insl
mov
jecxz
out
leave
fstl
inc
mov
lock
daa
pop
mov
and
pop
mov
add
arpl
dec
cmpb
dec
mov
fisttps
jecxz
fldl
fwait
mov
in
pusha
cmc
pop
inc
sbb
ret
lret
fdivl
clc
insb
dec
es
lods
jle
cltd
pop
push
das
aad
addr16
imul
xor
arpl
mov
in
adc
push
pop
sub
xchg
into
push
dec
xchg
lock
adc
repnz
sbb
pop
stos
notl
notb
inc
jne
inc
pop
loope
imul
orl
fs
sbb
gs
pusha
xchg
push
sbb
jmp
dec
mov
mov
aad
mov
mov
cmp
test
mov
inc
jge
sub
jo
repnz
push
jl
movsb
or
cs
pop
pop
testb
imul
loopne
jg
push
ss
cmc
jbe
xchg
cs
iret
mov
jl,pt
stc
jmp
sbb
push
nop
imul
xchg
lret
and
iret
fmull
in
jg
shll
pop
push
cmpsl
in
popa
lret
mov
mov
mov
push
scas
enter
inc
fs
pusha
cmp
jb
dec
stos
test
mov
data16
xor
cli
pop
loop
inc
leave
xor
push
clc
xor
adc
jmp
jg
cli
inc
mov
xor
pop
loope
push
leave
ljmp
or
in
dec
add
push
nop
mov
shrl
xor
stos
mov
out
scas
es
fbstp
sbb
push
jbe
jae
pusha
popa
ret
or
mov
and
xorb
outsl
nop
xchg
jbe
xor
xchg
adc
das
loop
mov
xchg
repz
sub
mov
sbb
jns
aas
mov
sti
outsb
pop
adc
fs
jl
push
dec
invlpg
and
inc
xchg
xchg
push
jmp
mov
jae
xchg
loopne
xor
xchg
jl
add
push
outsb
test
dec
lret
dec
and
or
push
loop
dec
mov
mov
xor
fmull
loopne
lds
and
fstpl
arpl
icebp
es
dec
or
pop
push
mov
je
sbb
jns
pop
add
les
fisttps
mov
ret
jbe
jo
adc
mov
mov
push
adc
mov
sti
loope
adcb
es
mov
ret
test
std
or
dec
push
out
lock
movsl
cmpsb
mov
dec
adc
sahf
cmpsb
cs
xor
xchg
mov
mov
loopne
arpl
add
sub
fimuls
rolb
shlb
mov
sub
popa
add
insb
push
jbe
ret
mov
mov
jbe
out
xchg
jle
dec
mov
fisubrl
jle,pn
les
imul
test
call
sub
jecxz
pop
pop
or
std
mov
add
test
pop
sar
in
dec
out
lods
mov
xchg
aad
arpl
lods
scas
xor
dec
add
jl
rcrl
jne
fbstp
dec
push
cmp
lods
fldln2
xor
shll
jns
pop
xchg
xlat
loop
mov
out
repnz
mov
in
sbb
pop
ja
adc
xor
idiv
cmp
xchg
test
cmp
jne
repnz
adc
xchg
iret
test
lret
xchg
inc
les
inc
inc
push
xor
mov
xchg
sub
mov
nop
mov
and
insb
dec
rorb
stos
push
mov
dec
adc
jmp
mov
push
fs
jg
in
pop
adc
dec
push
mov
mov
pop
jle
aad
jle
fs
inc
stos
sub
cmp
gs
dec
mov
pushw
or
pop
or
pop
imul
sarb
and
xor
or
and
repz
scas
jle
inc
dec
pushf
movsb
shll
shl
pop
cmp
xchg
repz
imul
xor
fwait
jg
adc
in
jo
cli
add
inc
pop
arpl
dec
or
pop
mov
into
jge
stc
mov
lds
pop
aaa
xlat
push
inc
addr16
cmpsb
jb
jle
std
jmp
fwait
inc
mov
jb
inc
pushf
imulb
mov
imul
nop
loopne
jbe
es
ds
enter
daa
les
mov
sar
sub
sbb
pop
in
in
sub
ja
sbb
xlat
xchg
inc
jnp
not
leave
and
dec
mov
mov
cs
lcall
movsl
pop
jp
xor
jg
mov
insl
out
xchg
mov
xor
push
jno
cmc
pop
fsubrs
cmp
push
xchg
add
inc
sbb
movsl
pop
mov
adc
ja
jmp
mov
and
mov
mov
xchg
ss
das
insb
mov
dec
xchg
aas
shll
out
or
les
movsb
cmp
push
negb
and
test
xchg
xchg
mov
xchg
orl
rorb
push
sub
add
daa
and
mov
pop
adc
mov
xor
push
mov
not
mov
and
and
add
sub
sbb
popf
lret
lods
scas
out
fists
push
push
vmwrite
sbb
pop
and
push
cmp
adcl
adc
rclb
pop
lret
xchg
dec
and
ljmp
or
into
pop
or
fcoms
test
imulb
imul
lret
cwtl
pop
cli
aam
mov
ret
cmp
and
cmp
mov
ljmp
int
fcomps
fnstcw
ret
xlat
mov
sbb
jp
or
sahf
add
pop
out
notl
sbb
jge
pop
xchg
dec
stos
adc
arpl
repnz
stc
push
adc
push
xor
pop
mov
leave
sub
mov
cwtl
and
jmp
lret
clc
or
into
xor
decl
pop
call
sub
jle
ret
jl
icebp
sub
popa
fbstp
repnz
cmp
mov
fcomp
leave
jae
je
vpxor
popa
fwait
subl
sub
cmp
into
movsb
or
push
push
loope
mov
adc
sub
add
mov
mov
push
add
out
inc
adc
pop
fnsave
xor
mov
leave
cmp
mov
ret
lahf
les
aaa
cs
mull
movsl
cmp
test
mov
adc
push
dec
insb
sub
subl
rcrl
imul
sbb
jbe
ljmp
inc
fstps
adc
aad
addr16
dec
pop
cmp
decb
jp
and
cmp
scas
rcl
mov
jae
push
mov
mov
mov
ds
addr16
dec
push
test
push
pop
push
repnz
push
ret
bound
cmp
addr16
nop
test
pop
std
add
mov
lods
mov
aad
jb
or
sub
dec
hlt
xchg
push
mov
pop
pop
cmp
and
mov
rclb
dec
movsl
or
test
loope
sbb
lods
push
xor
fnstenv
in
sbb
daa
inc
pop
fimuls
out
mov
cmpsl
jmp
cmp
test
fiadds
lret
lock
pop
cmp
sub
fmuls
and
jge
sarb
out
adc
add
mov
fisttpl
je
rol
hlt
cmp
push
mov
dec
lret
xchg
and
push
bound
sbb
push
loop
roll
push
xchg
jmp
cwtl
dec
xchg
xor
or
xor
cmp
in
mov
lock
dec
out
mov
xor
adc
xor
out
cmc
sub
movb
ret
pop
sbb
or
mov
adc
sbb
xchg
mov
xchg
insl
je
les
dec
pop
pop
pusha
in
dec
outsb
stc
imul
pop
cmp
adc
jb
cld
scas
lods
pop
xchg
sub
sbb
outsl
lds
pop
cmp
jle
xchg
push
and
int
or
stos
push
jne
jne
push
push
outsb
bnd
or
mov
cs
mov
fwait
push
push
fisubs
fidivl
lods
lds
sub
fcoms
xchg
sub
lds
movl
dec
int
adc
ror
push
jmp
imul
adc
daa
dec
push
cwtl
movlps
mov
pushf
xorb
fsubs
lods
push
daa
in
gs
push
lret
fists
pop
cli
test
and
and
enter
cmp
add
xchg
dec
xchg
adc
aam
test
xchg
std
sti
push
jmp
lea
stos
inc
dec
stos
mov
int
and
sti
adc
scas
fmul
fsubl
sarl
sbb
xchg
scas
cs
rorb
test
cmp
test
in
pop
ret
ljmp
xor
repnz
sbb
lret
xchg
mov
ds
and
ja
pop
or
mov
push
pop
dec
lahf
jno
imul
std
and
ss
fwait
xchg
mov
inc
cs
scas
xchg
sar
aam
and
mov
stc
cmp
pop
add
or
int3
jmp
push
or
push
nop
rol
dec
pusha
xchg
xchg
stos
add
dec
movb
push
sbb
std
test
sub
movl
je
inc
push
leave
int
in
jbe
push
sbb
rcr
or
mov
or
and
popa
mov
out
iret
adc
aad
cmc
repz
pop
loop
mov
pusha
jne
ret
dec
xchg
cmpb
out
loope
cmp
push
sub
mov
and
xlat
insl
repz
in
cmp
andl
cmp
add
dec
rcll
sbb
xor
push
jle
in
inc
jmp
lods
lds
xchg
mov
inc
cmp
mov
or
imul
pushf
inc
cmp
pushf
mov
jns
ss
push
dec
sbb
lcall
pop
cs
dec
lods
sbb
pop
mov
sub
xor
xor
or
lds
push
pop
imul
cmc
popf
or
enter
cmpsb
pop
push
repz
ljmp
pop
mov
mov
ficoms
rclb
sahf
stos
sbb
outsl
addl
popa
sub
pop
int3
loopne
shrb
or
xchg
cmp
add
sbb
ss
repnz
lret
mov
pop
nop
push
xor
aas
cmpsl
inc
iret
and
push
ljmp
xchg
scas
xchg
push
cmp
push
push
iret
inc
and
jns
jno
js
gs
mov
mov
mov
push
into
cltd
cs
mov
push
aaa
jle
hlt
cmp
mov
jmp
or
inc
cmc
push
push
xchg
addl
loope
sbb
or
in
int3
gs
mov
cmpsb
call
gs
sbb
lock
ror
rcrl
or
cs
xor
pop
cmpsl
push
cmp
int
adc
push
cwtl
mov
inc
add
test
sarl
sti
mov
inc
sbb
xor
ds
fistl
aaa
xchg
sahf
cmp
rcll
dec
lods
mov
popf
jb
cmp
jb
adc
xlat
fs
inc
cmp
and
cmp
fnstsw
test
repnz
pop
mov
out
mov
jl
jge
outsb
mov
mov
test
movsb
lock
into
ret
mov
inc
imul
push
outsl
cmp
sahf
mov
dec
and
mov
popf
mov
loop
jmp
imul
xchg
mov
mov
fisubrl
decl
sbb
aas
js
push
sti
shrb
les
or
adc
andl
rolb
lods
into
adc
sbb
add
sub
and
outsb
xchg
push
call
ror
nop
insb
lahf
pop
mov
dec
jecxz
push
push
in
mov
jp
mov
jnp
js
nop
jo
es
stc
xchg
push
inc
mov
daa
xchg
jbe
test
sub
mov
push
aas
test
dec
shll
cmp
ror
mov
stos
lea
add
sar
test
in
push
enter
jb
lret
mov
or
jge
stos
test
dec
mov
lret
mov
loop
and
dec
repz
repz
subb
fldt
fstl
rorl
andb
mov
push
pop
std
lock
dec
jo
ss
jge
adc
cmp
push
mov
push
add
ss
xor
jnp
stos
das
xlat
pop
dec
test
loope
test
mov
ret
fildll
out
stos
jns
stos
inc
jbe
and
fwait
hlt
nopl
add
xor
les
ficoms
je
lret
aad
push
je
sbb
lods
jge
pop
push
sub
imul
jno
or
addb
push
lret
cmc
dec
addl
mov
xchg
iret
push
mov
sub
sub
jg
clc
mov
out
dec
jno
es
adc
mov
fnstenv
int3
sub
jl
rcl
sbb
mov
and
mov
and
push
sbb
xor
xchg
ss
test
pop
push
or
xchg
mov
inc
sbb
inc
sub
rcrl
sub
jmp
xchg
push
imul
cmpsl
xchg
orb
sbb
out
sub
iret
pop
iret
xor
scas
mov
add
mov
loopne
or
jle
pop
lods
adc
cli
in
adc
push
mov
pop
gs
das
mov
pcmpeqb
adc
add
dec
rorl
test
xor
shr
and
insb
test
add
sub
jo
cmp
scas
fmuls
pop
bound
mov
repz
sahf
divl
add
imull
mov
cwtl
fucomip
inc
enter
enter
test
jnp
pushf
mov
adc
cmp
jnp
xchg
xchg
andb
xor
pop
mov
add
clc
inc
sar
sub
sbb
jo
cmpsl
imul
imul
jmp
popf
push
mov
sub
imul
adc
adc
or
rcll
fcmove
lods
in
int
push
dec
fs
out
aam
push
mov
call
mov
dec
push
or
das
mov
xchg
mov
enter
sti
cmp
inc
cmc
and
mov
imul
stos
in
sub
xor
lea
mov
aaa
in
loop
mov
pop
ds
insl
int3
sub
sub
fmull
fmuls
arpl
pop
inc
mov
movsl
rcrb
mov
enter
insl
pop
test
lods
cld
loope
mov
pop
pop
sbb
cli
xchg
cmpsb
cmp
mov
sub
idivb
test
unpckhps
lds
sub
dec
inc
pop
jle
mov
mov
lahf
ljmp
mov
inc
mov
dec
xchg
add
out
xor
fdivs
outsl
sbb
xor
cmp
sub
jmp
out
cmp
imul
out
call
xrelease
or
xor
cmp
dec
xor
xor
call
pushf
cwtl
loop
cmp
jp
mov
in
ja
popf
jmp
and
shrb
cmpsl
push
sub
mov
pop
adc
jle
cli
aad
inc
test
push
sbb
sahf
prefetch
or
xchg
inc
mov
scas
and
cmp
or
ss
cmpsl
repnz
sbbb
test
loope
or
mov
stos
pop
sub
inc
lret
out
xchg
jecxz
int3
adc
sub
andl
stc
stos
cwtl
pop
mov
lods
mov
gs
pusha
mov
aam
sub
cmp
or
addb
inc
fcoms
mov
cwtl
and
pop
stc
inc
mov
lods
mov
test
in
gs
push
cmpsb
sbb
xor
push
jnp
aaa
shr
xchg
cld
dec
cltd
ficompl
xor
xor
dec
rorl
jge
imul
or
cmp
cmp
pop
cmpl
push
push
scas
mov
out
add
ja
loope
out
sub
addr16
and
fmull
jnp
mov
hlt
mov
out
adc
lea
movsl
cmpsb
cmp
cmc
mov
movsb
hlt
iret
inc
insb
fwait
mov
mov
in
imul
rcrb
pusha
out
jns
mov
push
cltd
clc
or
movsl
popf
push
push
sahf
cmpsb
add
orl
aam
test
mov
jp
push
adc
mov
ss
fstl
mov
fdivrs
and
pop
pop
adc
pop
xlat
dec
inc
xor
sub
push
or
repnz
sahf
das
and
in
imul
popf
push
mov
push
sarl
fcmovb
jmp
sub
dec
mov
aad
mov
test
adc
repnz
and
inc
inc
mov
emms
jns
jbe
add
push
mov
fwait
jmp
loop
xchg
addr16
imul
aam
cltd
rclb
int3
dec
add
insb
cmp
lods
lret
xor
leave
push
divl
cmpsl
jl
movd
and
andb
clc
add
call
loope
push
into
lods
xchg
fiaddl
popf
jmp
arpl
jo
mov
mov
into
sbb
subb
roll
pop
jae
jo
mov
add
push
jbe
sbb
mov
xchg
inc
movsl
subl
jg
pop
stos
aas
sub
and
cmp
insl
push
ljmp
iret
outsb
mov
jne
xor
cmp
aad
fstpl
add
sub
movsl
dec
cmp
data16
or
fists
cmp
repnz
jmp
cmp
jecxz
jge
mov
and
mov
daa
ljmp
push
xchg
or
stos
pop
xchg
add
push
and
inc
subb
xchg
mov
add
push
insl
lea
loopne
in
xlat
jae
and
xchg
mov
sti
icebp
clc
cmpsl
add
add
mov
int3
xlat
in
shl
mov
fsubl
xchg
lea
adc
mov
scas
xchg
inc
mov
adc
and
ds
loopne
in
inc
popa
mov
mov
sbb
loopne
sti
sbb
cmpsl
push
or
fwait
in
dec
sbb
push
loope
cli
xchg
pop
jle
add
mov
inc
mov
mulb
leave
xor
bound
in
adc
pop
pop
jge
or
or
stc
loop
je
jbe
mov
pop
and
pop
sbb
xor
xlat
push
sub
test
or
shr
mov
stos
sbb
mov
or
movsl
repnz
in
lret
movsb
ss
pop
scas
jne
pop
lds
sbb
jo
inc
xor
xchg
mov
inc
pop
jl
fdivrs
in
enter
xchg
inc
scas
or
add
cmp
shl
pop
pop
mov
lret
imul
lods
ror
jp
divps
lcall
pop
mov
jecxz
adc
mov
dec
jo
movsb
mov
in
lods
in
imul
sub
pop
push
jo
add
loop
cmp
jecxz
push
ret
xchg
adc
fcompl
lret
cld
dec
aad
rclb
adc
dec
imul
outsb
jns
arpl
cwtl
psraw
fstl
ret
fs
sbbb
jp
add
lret
popf
mov
or
jnp
lock
imul
mov
mov
int3
mov
std
add
jb
pop
dec
push
jmp
pop
cmp
sbb
scas
aaa
insl
push
dec
mov
movsb
cwtl
mov
cmp
hlt
xchg
sar
stc
out
cwtl
lret
adcb
rcrl
lea
bound
hlt
leave
xchg
sahf
pop
movsb
adc
mov
inc
dec
or
mov
sbb
jmp
push
pop
xchg
loope
xchg
cli
outsb
xchg
jns
scas
icebp
pop
js
hlt
pop
xor
shlb
pop
aaa
es
and
jns
xchg
test
test
out
test
bnd
adc
sub
sbb
gs
ret
inc
pop
or
push
lcall
xor
xor
repnz
xchg
hlt
lock
mov
cmpsb
in
imul
enter
insl
jne
and
movsb
dec
add
shl
cltd
mov
sub
mov
fucomp
lret
add
mov
icebp
xchg
jne
add
popa
push
pop
call
xor
push
pop
pop
fistpll
arpl
dec
jbe
aam
add
xchg
call
cmp
mov
xor
std
aas
mov
mov
andl
add
sbb
sahf
push
mov
out
cli
leave
out
fisttps
mov
xchg
ljmp
ss
clc
popa
mov
jns
and
sbb
test
test
filds
mov
cli
cs
mov
shrb
push
jp
pop
out
sar
cmp
cwtd
rcrl
sbb
cmp
xchg
xor
mov
push
push
stc
insl
popf
cmp
jmp
push
ror
add
test
mov
mov
cmp
mov
sub
sbb
add
out
sarl
xor
orl
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
jmp
or
mov
xor
mov
fwait
dec
jnp
clc
pushf
jnp
ret
or
lahf
xchg
xor
dec
sub
pop
pop
fsubs
add
xorb
push
xchg
out
sbb
xchg
xorl
add
lret
loope
enter
push
lret
push
or
mov
sub
push
add
fnstcw
mov
push
jle
add
cmp
xchg
xor
xor
into
mov
stc
xchg
call
int3
pop
sti
imulb
cmp
cmp
xchg
fdivrl
dec
lods
push
and
sub
cmc
inc
pop
mov
pop
hlt
jbe
add
cmp
mov
addr16
aam
mov
sbb
mov
mov
jg
jp
shl
adc
int
xor
dec
sub
aaa
testb
in
add
mov
mov
iret
adc
jbe
xchg
sub
loope
test
mov
push
hlt
pop
mov
pop
adc
cs
xor
cmp
pushf
testb
sub
mov
in
inc
xor
dec
jl
cmp
sbb
push
out
in
mov
pusha
lahf
fistpll
test
aaa
test
fnstcw
mov
in
icebp
jo
daa
decb
iret
je
dec
and
and
pop
pop
cltd
test
fs
inc
aam
or
ret
icebp
push
aaa
xchg
mov
loopne
outsl
inc
std
fnstsw
paddb
xor
mov
jbe
lea
out
lahf
imul
xlat
fnstenv
faddl
cwtl
mov
mov
push
mov
cmpsb
mov
inc
testb
arpl
pop
mov
mov
call
clc
ss
pushf
adc
mov
adc
iret
push
dec
sub
stos
arpl
cmp
iret
inc
fildl
cmp
movsl
xor
inc
out
outsl
cmp
dec
push
test
or
jae
mov
js
enter
push
arpl
push
aad
xor
pop
es
cmc
inc
sbb
cld
insl
mov
shlb
inc
cmpsl
dec
xchg
je
les
test
cmc
jp
pop
mov
fdivs
push
leave
xchg
pop
int3
cmp
dec
mov
in
cli
sbb
lds
push
or
leave
mov
jmp
mov
sbb
int
pop
pop
in
fs
or
aaa
push
sahf
rcrl
push
sbb
adc
ret
pusha
dec
push
pop
pop
adc
cld
mov
xlat
adc
loopne
out
sub
loop
decb
fcompl
cmp
inc
insb
mov
dec
es
shl
push
aad
jge
dec
popf
xor
cmpsl
sub
jbe
repz
icebp
les
leave
jp
loop
inc
fwait
sub
repz
imul
movsl
mov
repnz
xchg
adc
mov
add
push
or
negl
jb
neg
pop
xor
dec
sahf
pop
jp
int
push
mov
in
mov
xor
cmp
mov
out
out
bound
pop
inc
xchg
pusha
cs
cltd
mov
cmpb
sub
sbb
popa
neg
and
mov
push
mov
adc
outsb
pushf
js
sub
sahf
add
mov
scas
pop
adc
sub
shl
dec
cmp
outsl
or
dec
ffreep
cltd
xor
sbb
ss
adc
mov
push
mov
push
inc
sub
je
pop
adc
adc
call
mov
sbbl
add
mov
movsl
ds
popf
mov
outsl
mov
sbb
mov
pop
enter
movsb
fs
lea
push
loopne
xchg
fiaddl
pop
cmp
dec
sbb
add
add
imul
cwtl
cwtl
bound
sbb
int3
pop
pop
mov
mov
dec
pop
insb
jp
mov
ja
pushf
cmp
sub
mov
mov
add
dec
faddl
outsb
dec
int
sti
in
jmp
lcall
or
cli
mov
ficomps
push
nop
insb
fs
mov
or
inc
movntps
push
sub
shlb
outsb
mov
push
fwait
or
ljmp
nop
mov
and
repnz
comiss
mov
outsl
push
pop
push
push
rorl
dec
in
fistpl
call
push
dec
mov
lret
rcrb
sub
fcmovnb
cmc
jno
sarl
out
adc
outsb
mov
fildl
cmp
jns
jnp
add
or
popa
int
adc
xchg
addb
sub
mov
pop
sti
fs
xchg
jge
les
pop
orl
mov
jae
pop
xor
pop
es
ljmp
mov
nop
sbb
and
fldcw
add
inc
cmpsl
xchg
add
sub
popf
dec
jg
adc
ljmp
and
fidivrs
xchg
movsl
add
call
add
sti
jb
and
pop
xlat
test
adc
mov
mov
fwait
bound
dec
adc
test
mov
pop
sbb
pop
mov
xchg
orb
scas
or
mov
iret
or
icebp
int
sub
sub
push
adc
xlat
cld
ret
rclb
sahf
add
dec
and
pop
add
xchg
mov
dec
dec
std
mov
xchg
imul
xchg
inc
xor
adc
pop
insb
jmp
push
es
pop
pop
and
xchg
iret
cs
idivb
and
adc
cs
bound
lea
mov
mov
fs
pop
add
ror
mov
rorl
sub
sbbl
push
push
and
mov
pop
ret
adc
sarl
fdivrs
sbb
or
clc
xor
xchg
mov
pop
push
mov
int3
filds
jo
inc
mov
test
add
movsl
sbb
sbb
data16
fmull
cmpsb
push
fists
cs
xchg
dec
rolb
pop
sub
push
int3
or
shrl
push
pop
push
loope
jbe
aad
aad
push
mov
into
in
fwait
xchg
fnstenv
dec
rcrl
mov
xor
mov
jno
das
sub
mov
pop
and
mov
aaa
mov
or
sbb
fbld
rolb
aas
psadbw
cld
jmp
mov
xor
push
push
inc
inc
cmp
cmp
sbb
and
and
shl
sahf
sub
sbbb
sbbb
push
add
mov
sub
shll
in
sbb
mov
push
test
sub
mov
lods
cmp
mov
dec
test
inc
fs
and
jecxz
roll
cwtl
mov
jmp
mov
lahf
mov
pusha
aaa
adc
add
cwtl
fistl
mov
sbb
mov
aad
mov
mov
adc
in
push
into
cltd
inc
fstpt
ret
lcall
rep
shlb
push
insl
notb
insl
xchg
adc
daa
add
and
xchg
scas
lret
sbb
test
rcrl
sbb
scas
adc
mov
dec
loope
outsb
add
jg
xchg
cltd
inc
mov
test
rcrl
lods
rorl
test
test
or
xchg
loopne
lods
mov
dec
sub
loope
cltd
test
dec
push
insl
repz
in
inc
stos
lret
sub
in
cmpsl
mov
inc
je
sarb
loopne
cmpb
idivl
sbbb
hlt
shld
aaa
lods
inc
xorl
inc
aas
sub
sbb
adc
testl
and
pop
lea
xchg
jnp
jo
loop
cli
cmovge
daa
dec
add
mov
push
movsb
and
xchg
es
clc
lds
add
push
pop
shl
xor
das
cmp
repnz
mov
sarb
in
ja
or
and
loopne
subb
xor
adc
stos
movsb
sub
mov
sbb
mov
and
xchg
enter
cltd
lret
push
jg
lock
jmp
xchg
pop
andps
and
push
arpl
xchg
xchg
push
cwtl
sbbb
jns
xchg
sti
test
inc
mov
inc
rol
adc
icebp
bound
frstor
test
and
mov
out
icebp
adc
test
mov
xor
mov
pop
inc
mov
inc
ljmp
ds
popf
and
cli
dec
test
sub
fisubrs
outsl
loop
sbbl
push
je
leave
xchg
mov
movsl
pop
call
stos
lods
push
cld
dec
sbb
jmp
int
int3
or
sbb
aad
and
movsl
fwait
repz
push
sarb
arpl
repz
push
dec
aad
adc
mov
adc
int3
pop
lcall
mov
dec
cwtl
lock
daa
push
sbb
xor
les
inc
loop
adc
dec
inc
aam
push
std
lods
adc
pop
fsubrs
pushf
adc
lods
pop
pop
loopne
push
adc
and
rcl
push
pop
daa
movsb
mov
xor
test
adc
popf
or
pop
and
push
fdivs
scas
arpl
outsb
outsb
dec
in
mov
cli
and
and
aaa
sub
inc
stos
add
cmpl
cmp
aad
addr16
mov
sbb
fldcw
add
js
ds
inc
jbe
push
add
mov
mov
sbb
out
push
push
mov
adc
jo
and
in
jnp
xchg
xchg
jb
rcl
mov
jo
fdivl
insb
jae
jae
sti
sub
fsubl
push
in
mov
daa
ljmp
xchg
sahf
loope
pushf
imul
mov
or
jns
insb
inc
pushf
cmp
sti
sub
xor
mov
int
or
int3
loopne
adc
mov
mov
sbb
cli
sub
mov
pop
push
xchg
iret
add
aam
ret
testl
xor
shlb
in
dec
data16
dec
scas
add
shll
pop
sbb
pop
adc
fidivl
stos
shll
sbb
rclb
push
adc
cli
cld
adc
mov
ficomps
lds
mov
push
mov
mov
test
enter
jns
mov
mov
es
sti
subb
sbb
cmc
adc
adc
dec
push
std
pusha
into
nop
dec
sbb
cltd
mov
movd
aaa
push
loope
mov
xchg
sahf
xchg
int
fisubrs
int
mov
jbe
pop
shr
std
pop
mov
xor
mov
mov
xchg
sti
sbb
sbb
sbb
inc
cmpsl
push
mov
inc
std
mov
lods
push
stc
sbb
push
int3
adc
adc
in
ss
cmp
inc
inc
adc
xchg
loopne
es
ljmp
loop
addr16
push
repnz
clc
xchg
iret
jg
pop
or
orl
jae
sbb
out
inc
ds
sahf
stc
pop
stos
mov
aam
adc
add
jno
and
lret
mov
or
xorb
lcall
lret
mov
xor
jb
mov
test
mov
rcl
movb
push
cmp
addb
pop
dec
fdivrl
push
jb
jmp
xor
xchg
adc
rol
arpl
mov
cld
pop
push
adc
push
or
movsb
jecxz
ds
aam
mov
sub
movsl
aad
lock
jo
mov
dec
fadd
mov
pop
pop
js
stos
jbe
imul
cmp
mov
mov
inc
and
out
fcoml
mov
and
jne
mov
pop
leave
aas
clc
jmp
fldt
xlat
xchg
imul
mov
test
add
push
mov
pop
daa
lret
cmp
aam
jno
inc
and
xor
movsb
xor
jo
xchg
popa
adc
sub
xchg
sbb
fisubs
pop
jbe
jb
mov
xchg
ljmp
fwait
divl
movsb
xor
inc
adc
push
mov
cmp
in
movsb
xlat
add
add
in
fnsave
dec
stos
cmpl
xor
or
out
push
pop
jg
loop
pop
imulb
shr
mov
push
or
adc
stc
sub
and
pop
mov
fnstenv
and
fists
mov
cmp
ds
repz
pop
jae
leave
lahf
mov
adc
fbstp
out
fmull
jge
dec
mov
sub
test
shr
js
gs
xchg
rcll
sbb
cli
test
mov
scas
int
adcl
push
inc
mov
leave
xor
mov
cmc
xor
stos
lds
or
pop
mov
pop
pop
lds
adc
mov
pop
jmp
ss
int
xor
stos
and
in
and
dec
xchg
iret
mov
int
sub
jle
pop
inc
adcb
sub
push
mov
xchg
push
jmp
lods
mov
sub
loope
jne
lds
stos
loope
add
mov
shlb
je
test
xchg
push
out
mov
std
xchg
mov
dec
cmp
jle
push
xor
sub
fistpll
into
cmpsl
pop
jecxz
push
add
dec
movsb
and
int
int3
pop
bound
aaa
add
cmp
add
push
scas
pushf
stos
ret
push
jno
int
pop
xchg
push
cld
inc
and
int3
push
sbb
jnp
xor
jmp
rcl
add
adc
dec
push
aas
adc
rcl
xor
mov
jl
add
mov
aaa
pop
int3
or
test
repz
addr16
or
loope
in
das
mov
add
fldt
lahf
adc
and
or
out
push
pop
mov
andl
and
cmp
fsts
mov
movsb
paddw
movsl
ret
cmp
xchg
test
sbb
int
mov
mov
or
rol
pushf
rolb
shr
push
in
add
xor
pop
cli
ret
fisubs
mov
les
mov
xor
pop
and
sub
lods
addr16
ljmp
cwtl
xor
in
fbld
and
pop
bound
addr16
fcmovnb
jg
inc
pop
jmp
cmp
in
les
jle
std
push
andl
jo
push
sub
iret
fdivrl
mov
ja
jmp
loop
sbb
lods
enter
sbb
pop
sub
push
in
dec
in
and
scas
jnp
lock
xor
out
pushf
xor
in
negl
and
push
cs
xchg
and
xchg
xchg
adc
fcomi
in
cmp
js
movsb
movb
push
arpl
jle
rolb
in
xchg
rcrw
mov
mov
cmp
notb
iret
clc
xchg
or
int
adcb
test
or
cld
fistpl
pop
sub
xchg
enter
sub
dec
lds
test
movsb
mov
or
insb
push
in
adc
and
scas
or
mov
mov
adc
inc
adc
mov
lcall
lods
and
hlt
sbb
sub
mov
pop
jb
dec
push
es
call
sub
cmp
shrb
outsb
and
aad
divb
mov
in
call
jae
jle
cwtl
aaa
push
sub
int
jo
cmc
mov
call
xchg
lods
cmp
cwtl
in
cmc
insl
test
inc
xor
push
xchg
jnp
mov
mov
or
jne
adcb
pusha
lods
std
jns
add
lds
jmp
dec
sub
outsb
cmp
inc
insl
loope
mov
push
jb
mov
cmp
dec
pop
leave
ss
js
fs
iret
cs
mov
cltd
movsl
insl
dec
sti
mov
ficompl
ljmp
and
stc
stc
test
inc
mov
jnp
ds
je
and
inc
cmpsl
popl
push
push
subb
mov
jne
xor
jns
lahf
mov
je
fwait
jecxz
cs
inc
xchg
addr16
push
dec
out
pop
sahf
push
arpl
sti
inc
xchg
push
xchg
rclb
or
sub
lock
mov
cmc
jae
pop
imul
xor
cmp
and
icebp
and
cmp
insl
cmc
push
xor
clc
dec
das
adc
pop
xor
mov
sub
movsl
out
sub
mov
mov
xchg
push
insl
push
jge
dec
mov
dec
cmpsl
jne
sub
push
mov
rclb
or
or
mov
fisubs
inc
hlt
or
sbb
iret
ret
sub
aaa
jmp
mov
xchg
cld
sbb
aam
repnz
push
aad
jmp
sub
data16
test
add
xchg
loop
inc
imul
push
sbb
mov
mov
dec
repz
adc
xlat
or
pop
sbb
in
and
repz
lret
sub
or
scas
repz
addb
icebp
es
sub
leave
negl
and
shr
pause
mov
test
int
ljmp
mov
mov
dec
jge
ret
xchg
inc
test
outsb
out
les
inc
in
movsb
jecxz
rcrb
xchg
ja
pop
xlat
dec
adc
dec
fadds
or
cld
sar
dec
jecxz
ret
sbbl
xor
pop
mov
sti
jecxz
xchg
ret
mov
mov
sbb
jnp
mov
aad
xchg
jno
or
ds
inc
dec
mov
add
inc
xorb
imul
cmp
push
jae
mov
in
rcll
lret
lahf
xor
mov
or
mov
movsb
lret
mov
ljmp
mov
arpl
ret
les
xchg
xor
add
or
stos
jmp
xor
imul
dec
orl
xor
mov
xchg
mov
or
mov
jecxz
mov
dec
jbe
mov
pop
cmc
movsl
sahf
sbb
shll
pop
add
xchg
int
dec
int
sbbb
sub
adc
popf
cltd
mov
jae
notb
dec
push
shrl
imul
pop
dec
popf
aaa
dec
sub
mov
pop
hlt
call
mov
movsb
or
sarl
std
push
stos
das
stc
mov
sub
sub
mov
push
arpl
ja
xor
push
nop
xchg
shrl
flds
xchg
push
adc
arpl
and
push
jecxz
popf
cmp
pop
out
or
jo
xor
jl
sub
inc
fistpll
sahf
dec
in
xchg
scas
xchg
jo
repnz
xor
mov
or
and
sub
dec
rcrb
add
mov
dec
inc
or
outsl
mov
push
xchg
mov
xlat
iret
mov
insl
cmc
pushf
sahf
outsl
and
aad
push
push
xchg
mov
testl
sub
mov
clc
mov
iret
sub
pop
mov
mov
xor
fisubl
fistpl
push
int3
fs
aad
push
jg
sbb
pop
inc
sbb
int3
addr16
pop
add
lcall
jns
mov
mov
jecxz
ja
xchg
jge
daa
inc
fisubs
stos
jae
mov
iret
clc
push
or
cmp
dec
cmp
lds
mov
push
mov
mov
pop
xchg
push
ja
les
aam
add
mov
outsb
gs
cmp
sub
mov
popf
mov
pop
xchg
cmp
ja
add
sub
and
loop
in
mov
movsb
pushf
push
aaa
nop
and
push
jae
jge
in
lahf
or
fidivrs
repz
test
test
xchg
push
lods
test
rcll
adc
push
repz
sti
sbb
ficoms
jge
add
call
sbbl
hlt
in
push
and
cmc
std
imul
adc
or
dec
fbstp
fcomps
and
or
mov
ja
sub
loope
push
mov
mov
jp
mov
imul
cld
daa
or
scas
repnz
or
mov
jmp
mov
jge
mov
or
push
fstps
dec
sti
pop
in
sbb
rolb
and
inc
jmp
mov
push
push
push
lret
or
adcb
mov
imul
push
sar
xor
mov
fcom
pop
inc
add
push
addl
ror
dec
add
pop
sub
in
lret
mov
pop
rcll
xchg
xchg
cmpb
cld
test
push
aas
test
iret
add
jae
js
lahf
adc
cmpsb
xchg
inc
dec
add
jo
inc
cmp
leave
ljmp
nop
or
jle
push
mov
out
jle
movd
pop
or
and
aaa
nop
pop
push
push
in
inc
shl
loop
aaa
out
mov
dec
xchg
popa
and
in
pop
xchg
xor
adc
repz
shlb
pusha
mov
fbld
mov
in
cmp
mov
push
or
push
and
and
jo
and
xlat
jmp
xchg
pop
jg
and
mov
xor
ret
jbe
stc
mov
add
das
adc
mov
mov
ja
leave
test
in
jmp
pop
push
sbb
test
or
test
or
rorl
nop
dec
fidivrl
jmp
ret
jmp
jle
shll
aas
out
dec
mov
aam
rol
insb
rolb
inc
inc
cmpsb
mov
loopne
aam
xlat
mov
and
test
adc
iret
xor
pop
loop
nop
pop
sub
movsl
add
loopne
xlat
mov
loop
jb
daa
and
cmp
jl
dec
xchg
daa
add
jo
jg
xor
pop
movsl
pop
jmp
lods
adc
mov
movsl
mov
xchg
push
push
lret
adc
mov
cmp
xchg
hlt
lcall
mov
sbb
iret
mov
fwait
lods
test
cmp
mov
loop
sub
mov
outsb
into
cmp
sub
loop
and
stos
pop
imul
push
xor
orl
les
outsl
fstpl
mov
cltd
icebp
dec
nop
jg
or
sbb
push
mov
fbstp
repz
icebp
pop
int3
loope
sahf
addb
loop
xor
xchg
push
mov
jnp
inc
lahf
sbb
or
in
icebp
jg
mov
jae
sub
sub
aad
inc
xor
in
sub
push
mov
mov
imul
adc
pop
loopne
jns
popf
out
add
daa
push
test
sub
test
loope
and
std
add
or
enter
cmpl
imul
loopne
sub
xchg
cmpsw
in
scas
jmp
and
test
ss
cli
test
or
roll
xor
mov
flds
fwait
cmp
leave
arpl
lcall
push
jmp
shlb
sub
add
or
shrb
mov
xchg
popl
mov
xchg
add
jo
lods
sbb
push
mov
fsubrl
pop
cmp
scas
and
mov
mov
mov
aam
mov
ja
add
movsl
pop
cwtl
mov
faddl
nop
lcall
dec
xchg
nop
pop
lock
stos
jns
ja
mov
dec
dec
inc
cld
ret
mov
dec
dec
mov
mov
lds
orb
iret
int
jg
add
mov
sub
movsl
push
test
sbb
mov
add
adc
inc
pop
adc
in
and
iret
pop
js
mov
test
cmp
or
jg
leave
popa
stos
mov
mov
jnp
push
aas
pop
push
lret
sbb
int
xchg
aaa
int3
outsb
or
pushl
pop
sub
cli
pop
jp
xchg
daa
data16
scas
daa
pop
push
dec
dec
in
push
or
iret
jne
or
scas
addb
fwait
pop
ljmp
jo
dec
xor
ja
lods
mov
lods
adc
add
cmp
movsb
test
push
cmp
jbe
pop
int3
pop
xchg
inc
mov
dec
lret
movsl
or
fisubrs
mov
and
repnz
icebp
aas
and
inc
test
mov
ret
lods
sbb
sbb
jmp
mov
jbe
fistps
shlb
pushf
testb
push
push
pop
jp
xlat
scas
rolb
test
fwait
jno
das
jae
loope
lahf
fwait
negb
movsl
pop
cmc
shrb
adc
mull
aaa
andl
std
adc
out
sti
mov
pop
cmp
pop
cmp
popw
sbb
sub
out
or
jns
icebp
fstenv
add
mov
sbb
int3
push
pop
mov
push
jnp
or
testb
jbe
into
out
popa
outsl
or
stos
push
mov
dec
movsb
add
movsl
mov
inc
dec
jp
fisubs
fwait
cld
ss
bound
fidivs
ret
outsl
insl
or
and
mov
addr16
orb
repz
arpl
pop
ret
and
adc
add
or
jmp
xlat
test
jns
pop
rol
xor
or
xchg
add
push
jo
mov
sbb
push
xor
cmc
ljmp
aas
and
inc
imul
inc
shll
mov
in
and
cmpsl
xor
cli
lock
jno
or
loopne
out
int3
xchg
aas
repz
ret
push
mov
aam
loopne
test
js
aad
stos
leave
push
mov
and
cmp
mov
or
call
mov
fstpl
je
test
in
in
mov
std
xlat
cmc
nop
imul
push
add
sti
cmc
mov
test
jle
sbb
inc
pop
ret
pop
lods
and
sahf
push
movsb
out
cmp
popa
jg
or
add
lods
fildl
nop
stc
mov
cltd
jnp
jmp
leave
lret
repnz
sti
dec
add
fimull
push
in
adc
and
inc
xor
sub
stc
jnp
dec
inc
stc
nop
sbb
or
pusha
jns
jl
add
sub
pop
cwtl
mov
js
xchg
mov
ja
pop
std
jecxz
es
sti
cmp
ficomps
hlt
dec
xchg
pop
es
jg
movl
adc
lock
jne
in
or
es
cmp
add
cmp
mov
jecxz
xchg
in
fcomip
popf
lods
mov
stos
jae
xlat
lods
pop
mov
cmc
cltd
movsb
jo
push
adc
data16
movsb
stc
add
dec
daa
mov
xchg
das
shrl
test
lcall
xchg
push
pop
nop
lret
mov
or
adc
enter
inc
mov
xchg
rcl
mov
nop
ds
push
leave
mov
ret
push
arpl
jl
movsb
fsin
xor
sub
or
xor
xchg
inc
lcall
sbbl
jne
cmc
lds
cs
sbb
fs
cmp
pop
inc
in
mov
pop
or
mov
inc
mov
add
pop
stc
fistpl
jae
cli
xchg
in
pop
imul
push
test
scas
dec
sub
or
pop
fmull
in
test
adc
ljmp
mov
or
sbb
aad
mov
cltd
pop
lcall
mov
icebp
popa
mov
jg
loopne
sub
dec
and
inc
push
into
pop
push
stos
lahf
adc
sub
sub
sbb
loope
mov
mov
gs
fs
jp
std
call
outsb
addr16
out
dec
sbb
jb
cmpsb
lret
outsb
mov
sbb
rcrl
xchg
dec
jae
jmp
inc
dec
mov
xchg
bound
out
push
pop
mov
aaa
jge
aas
lahf
or
and
icebp
lock
push
sbb
ffreep
jg
mov
outsb
in
gs
or
ret
bsf
js
mov
pusha
insl
xor
mov
clc
inc
adc
lahf
mov
test
inc
sbb
in
push
outsl
scas
andb
repnz
and
or
lods
add
and
popf
mov
scas
mov
rcrl
mov
shll
xchg
and
lods
lds
fmull
push
push
or
jno
sub
inc
xlat
mov
mov
fs
inc
mov
mov
or
jge
xlat
xor
push
popl
dec
insb
es
insb
daa
and
adc
xchg
sahf
mov
pop
imul
shll
insl
add
mov
xor
xor
test
push
ja
and
cmp
dec
je
dec
add
outsl
cmp
inc
push
xchg
sub
lret
lods
inc
add
mov
xchg
repz
add
out
lcall
cmp
inc
sbb
cmpsl
xor
lahf
inc
xchg
xchg
mov
mov
sbb
inc
scas
cmp
adc
sbb
in
sbb
lahf
pop
pop
test
pop
or
sbb
sub
ss
xor
inc
mov
adc
pop
icebp
pop
or
push
mov
push
aam
loope
daa
sbb
mov
or
loopne
push
arpl
xor
xor
jg
push
aaa
cmp
mov
std
es
push
or
sbbl
jb
push
xor
cmp
andl
lret
xlat
enter
daa
shr
pop
push
push
in
bound
jle
jno
mov
push
cli
rcrb
jle
push
and
ljmp
lcall
push
jo
or
insb
js
jecxz
and
insb
mov
sbb
stos
inc
lcall
dec
pop
adc
adc
jb
jge
notb
fiadds
jp
mov
mov
or
jnp
and
dec
add
mov
clc
pop
push
mov
push
bnd
and
lret
fcmovu
outsl
pop
test
and
jmp
mov
add
fcmovb
fsubrl
call
mov
xchg
push
xlat
mov
push
add
mov
addr16
xor
sbb
dec
or
or
xchg
sub
adc
bound
insb
shll
sub
into
subl
cmp
das
and
fcmovnbe
aaa
cs
push
cld
pushf
push
scas
xchg
rcr
add
adc
jb
mov
insb
flds
dec
mov
sub
popf
jns
sub
push
sbb
or
lods
stos
jae
xchg
and
das
hlt
pop
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
adcl
xor
movl
cmpl
je
cmpl
jge
jmp
call
mov
dec
mov
jmp
mov
add
movl
cmpl
je
cmpl
jg
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movzwl
mov
sub
mov
movb
lea
mov
mov
mov
xor
subl
add
subl
mov
and
movl
push
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
push
push
push
push
pushl
push
call
cmpl
jb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
push
mov
xor
mov
push
add
jmp
notl
mov
movl
mov
inc
movl
cmp
movl
jb
subl
mov
xor
add
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
call
jmp
mov
addl
xor
mov
orl
add
movzwl
mov
mov
sub
mov
mov
orl
movzwl
adcl
xor
xorl
add
mov
movl
mov
inc
mov
mov
cmp
jne
sub
mov
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
mov
dec
mov
jmp
add
xor
mov
mov
xor
add
and
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
je
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
adc
movl
mov
adc
mov
movzbl
add
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
push
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
call
jmp
add
mov
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
pushl
call
jmp
mov
mov
add
mov
mov
xor
sbbl
xor
addl
sub
sub
sbb
xor
mov
add
mov
mov
lea
mov
mov
xor
mov
andl
add
adcl
imul
orl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
add
sbbl
and
mov
xor
or
adc
mov
andl
mov
andl
add
movl
or
andl
mov
and
mov
movl
cmpl
je
cmpl
jl
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
sbb
add
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
mov
add
addl
xor
xorl
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
push
pop
push
js
pop
imul
imul
add
xchg
loopne
mov
or
cmp
into
pop
ficomps
mov
dec
sub
push
scas
mov
jnp
pop
jne
xchg
push
scas
and
cltd
add
mov
dec
insl
push
push
xlat
pop
add
sub
out
lea
andl
pop
rorl
jne
insl
jae
sahf
and
call
fwait
and
gs
iret
cmp
mov
push
test
adc
xor
xchg
fsts
dec
icebp
push
call
fisttpl
jbe
test
push
push
mov
das
rol
ss
cld
or
pushf
xchg
cmovg
into
pop
es
and
sub
push
int
xchg
pop
sti
sbb
xchg
mov
mov
xor
fidivrl
pop
sub
pop
or
hlt
mov
jb
neg
push
xor
data16
sbbb
movsl
sub
xlat
xchg
cmpsb
aaa
jecxz
ret
add
push
pop
jns
loop
sub
cmpsl
lahf
cmp
cmp
popa
fwait
mov
in
int
cmp
repnz
aad
ds
mov
flds
jg
add
out
xchg
pusha
das
das
popa
jns
jge
in
popf
cmp
push
test
cmp
pop
xor
inc
adc
mov
mov
movb
ret
cmp
outsb
bound
sahf
leave
sar
mov
inc
loopne
pop
dec
and
imul
ffreep
mov
popa
xlat
push
push
enter
jb
cmp
shl
fs
out
mov
in
fsubrs
scas
popf
cld
je
xchg
lahf
cmp
and
mov
or
cmp
jecxz
and
cmp
ret
fisubs
sub
sub
cmp
rclb
fnsave
push
imul
fmul
call
pop
leave
fwait
sbb
cmp
je
call
clc
std
sbb
test
cmp
sub
in
and
lret
in
jne
ss
and
inc
rcr
cwtl
push
scas
and
insl
dec
aad
inc
sub
adc
cwtl
pop
pop
dec
outsb
xchg
cld
hlt
lods
dec
pop
ja
sub
mov
fisubl
jge
ret
jns
icebp
inc
enter
test
mov
push
jns
loop
leave
ret
jge
sub
sbb
das
or
mov
inc
idiv
stos
mov
clc
and
push
repnz
add
pop
shll
lods
xchg
sub
cmp
inc
xor
cli
pop
pop
sub
sub
add
jns
js
adc
sub
pop
cmp
cmpsb
insb
sub
dec
cmc
pop
scas
aam
cmpl
jp
outsb
jne
push
cmp
sub
push
or
cld
daa
pop
cwtl
jmp
and
lret
int
mov
lret
lret
out
icebp
mov
fsubl
ret
adc
pop
pop
repz
rclb
mov
imul
daa
arpl
inc
adc
jge
roll
mov
jp
pop
xor
call
leave
xor
cmp
nop
add
or
repnz
jecxz
sbb
sbb
push
cli
enter
scas
push
sub
mov
push
cmp
push
outsl
mov
movsl
mov
cmp
aam
xchg
add
sbb
test
jl
arpl
scas
in
mov
push
les
add
jge
clc
xlat
mov
loop
mov
dec
jae
sub
outsb
lret
push
andl
push
adc
cltd
and
popf
and
mov
sub
mov
and
jge
fidivs
cmp
hlt
xchg
push
bound
test
movsb
pop
jno
or
popa
fdivrp
out
enter
sub
loopne
es
stos
xchg
clc
mov
jo
add
mov
arpl
popf
out
lods
jnp
daa
xchg
jae
pop
das
mov
mov
pop
jne
lret
push
in
xchg
inc
lods
dec
fnstcw
dec
mov
mov
es
lods
pop
pusha
xlat
add
mov
fldl
cmpsb
lret
ds
add
mov
test
push
push
mov
dec
icebp
add
sub
insb
sub
or
inc
and
insb
push
pop
xor
add
mov
sbb
and
cmp
xchg
push
lods
push
cs
in
mov
stos
cmpsb
cmc
adc
mov
fbstp
mov
jnp
xchg
loope
xchg
das
daa
push
data16
mov
and
pop
test
sub
movsb
dec
push
xlat
neg
mov
xor
popf
or
xchg
out
add
insl
loope
repz
lcall
sbb
jnp
pop
pusha
enter
jl
fidivrl
lock
mov
dec
fwait
pop
loope
lret
lret
lods
fs
aaa
push
clc
adc
cmp
aad
xor
sbb
pop
jl
pop
lock
fisttpll
pop
test
push
push
and
bound
js
aas
ret
mov
jle
adc
push
push
bound
cmp
push
pusha
pop
je
mov
xchg
mov
adc
popl
jae
or
cmp
out
and
rcl
dec
ficoms
mov
imul
sbbl
inc
lret
inc
in
adc
mov
push
sahf
dec
out
loopne
and
repnz
scas
jnp
or
xor
pop
dec
jmp
xor
cmp
mov
sub
dec
js
dec
nop
dec
xchg
hlt
iret
or
ds
cs
jl
push
push
ffree
mov
xchg
cmp
adc
sti
es
or
and
aaa
adc
scas
jnp
jbe
push
cli
cmpsb
adc
mov
ffreep
out
into
fdivs
push
add
aam
pop
xor
lahf
fcoms
jmp
rcrb
aad
xchg
jle
mov
inc
out
jo
lret
mov
push
rorb
mov
push
xor
sub
push
les
lcall
ljmp
lods
xor
scas
outsb
pop
dec
jge
sbb
aam
xchg
test
pop
push
mov
mov
jns
aas
mov
mov
not
addr16
xchg
push
pusha
cmpsb
mov
jp
mov
xor
cld
loopne
adc
mov
push
inc
or
lahf
mov
ror
movsl
xor
mov
and
push
jmp
push
shlb
mov
mov
mov
fwait
addr16
push
jno
push
dec
cld
divb
lcall
cmp
xchg
xchg
mov
arpl
addb
int
fdivrp
je
fs
sub
fdivs
dec
dec
adcb
add
std
inc
and
fists
or
in
loop
cs
xchg
test
dec
lods
stos
jg
lds
cmpl
sbb
bound
popa
push
sub
push
lahf
mov
mov
sbb
cmc
aad
push
addr16
jge
and
pop
repz
daa
pop
xor
add
mov
pop
roll
call
dec
cmp
xchg
fsubp
push
dec
add
cmp
add
pop
add
rolb
push
pop
add
and
daa
roll
adc
icebp
repz
inc
cmp
dec
or
repnz
lock
xchg
outsl
push
mov
lret
cmp
jg
jecxz
jbe,pt
ss
push
ss
test
xchg
add
mov
decl
xor
pop
jl
arpl
ret
clc
into
inc
fwait
loop
inc
or
push
stc
ret
enter
repnz
jbe
data16
and
xor
aaa
aas
push
xchg
xor
lret
pop
daa
hlt
fsub
ss
lcall
fnstcw
cmc
int3
mov
push
and
and
add
and
int
scas
clc
jmp
push
cmc
cld
jmp
jbe
push
jbe
sahf
cli
adc
inc
addr16
ret
mov
iret
scas
dec
dec
add
subb
xor
pop
movntps
push
xchg
call
enter
lock
arpl
in
fimuls
inc
mov
pop
jnp
adc
push
push
in
mov
mov
xchg
inc
notb
add
outsb
dec
mov
mov
dec
and
out
imul
cmp
xchg
addr16
lret
cmpsb
xchg
mov
rcll
in
out
inc
hlt
addb
ret
push
jecxz
or
scas
inc
sbb
pop
mov
mov
sub
popa
je
pop
test
gs
mov
mov
adc
test
mov
iret
lret
lds
fnsave
mov
xchg
inc
adc
dec
out
insl
cmc
js
inc
rcr
add
lods
jnp
jns
ljmp
jno
sub
mov
arpl
int
cmpl
xchg
sub
fs
ret
dec
scas
and
xor
sub
sti
xor
sbb
aam
nop
push
imul
test
dec
push
push
push
mov
in
daa
xor
inc
cmp
fcomi
and
sub
xchg
les
jmp
push
mov
pop
jb
push
mov
mov
in
cltd
clc
cmp
loop
jecxz
and
push
mov
popf
pop
dec
xorl
es
ret
xchg
adc
das
repnz
mov
cmp
outsl
outsl
ljmp
imul
rcrl
lock
movsl
jae
mov
nop
rcll
sub
add
add
push
push
aaa
cs
inc
popa
push
cmp
xlat
xchg
fidivl
jp
xor
jnp
pop
sub
ret
jne
es
jle
cwtl
xor
inc
stc
idivl
adc
std
into
fs
push
lods
fbstp
push
xor
in
repnz
pusha
popf
push
enter
sub
in
pusha
pop
push
cmp
cmp
push
mov
inc
popa
jp
loopne
or
or
xchg
cltd
sbbb
cmpsb
and
mov
mov
iret
mov
mov
pop
mov
xor
aas
mov
add
fstps
out
cmpl
xchg
mov
mov
sahf
xor
sbb
pushf
test
pop
cs
cld
sub
xor
lea
xor
mov
fcomps
jg
popf
push
xchg
adc
adc
stos
push
pop
es
sbb
jae
int
push
xchg
loope
and
adc
push
outsb
sub
sub
push
mov
stos
fidivs
mov
pop
scas
mulb
sti
shll
xor
imul
mov
xor
stos
inc
ss
outsl
mov
loop
pop
insb
icebp
adc
repnz
ss
mov
jg
dec
mov
pop
arpl
call
xor
sub
sub
dec
repnz
pop
test
outsb
or
pop
mov
loope
enter
rcl
and
testl
xor
repz
icebp
pusha
xchg
decb
imul
repz
push
cmp
stos
or
cmp
js
fnsave
xor
inc
jo
mov
scas
or
ja
inc
cmp
das
pop
sub
divl
mov
lret
roll
jb
add
push
mov
or
mov
mov
xor
fimull
push
cmpsb
clc
adc
push
jecxz
mov
xchg
sub
aaa
shl
test
into
push
popf
add
push
jge
cli
test
lock
loopne
aaa
jl
pop
fidivrl
or
addr16
clc
mov
dec
fimull
xchg
sar
pop
xchg
or
in
jp
rclb
shlb
dec
loop
mov
adc
xor
push
mov
mov
aaa
imul
pushf
inc
mov
gs
iret
rorl
add
outsl
imul
in
dec
in
add
lock
loope
inc
testb
xchg
mov
mov
cmpl
push
inc
jne
xchg
fsts
push
mov
pop
add
add
lret
adc
and
push
fs
es
data16
push
sub
test
ret
insb
fsub
in
repnz
xchg
cld
ja
mov
ss
pop
rcll
sub
xor
loopne
mov
sbb
xorb
inc
sti
dec
xchg
loopne
cltd
std
mov
jge
mov
pusha
lahf
mov
popf
sub
lret
mov
leave
xor
shlb
mov
add
mov
sub
and
cli
ret
out
cmpsb
mov
aad
cmpsl
xchg
or
push
push
aad
xor
insl
sbbb
sti
jl
jl
xor
cli
outsb
fwait
inc
roll
push
cmp
aad
add
sbb
out
ret
xor
or
add
js
push
inc
sub
js
xchg
lahf
xor
sub
sbb
or
push
repz
test
inc
sbb
stos
cmp
in
mov
mov
cli
inc
imul
jmp
or
add
mov
inc
lds
pop
popa
orb
int
sbb
call
push
push
mov
sbb
and
lret
mov
jo
add
sbb
fbld
leave
fsubp
sub
das
pop
sbb
sbb
adc
inc
add
mov
leave
fidivrs
in
daa
and
jns
in
fsubl
xchg
cli
stc
mov
movsl
sbb
sbb
and
loop
and
loope
daa
xor
dec
dec
adc
xchg
add
stos
pop
repz
incl
es
mov
cmp
movsl
adc
inc
pop
bound
sbb
xchg
clc
sub
push
imul
pop
pop
cmp
mov
insb
lds
push
sbb
pop
xorb
das
ljmp
cmp
js
inc
repz
jae
js
or
or
ljmp
cmpsl
inc
xor
sub
stos
lret
out
aam
cmpsb
outsl
fs
popa
mov
push
in
push
mov
popa
cli
lea
mov
dec
sbb
mov
xor
cmp
lea
dec
out
out
aad
imul
pop
cs
mov
inc
mov
dec
mov
xchg
fnstsw
adcl
sbb
inc
gs
adc
test
aas
fs
dec
dec
fadds
ror
int
fistps
add
jae
mov
cld
xchg
mov
mov
shrb
sub
les
nop
or
stos
sub
call
and
sahf
fdivs
cmpsl
popf
add
xchg
mov
std
cmpsb
sbb
ret
inc
aas
stos
aaa
and
xchg
or
cmc
popa
loop
adc
pusha
add
movsb
jne
leave
push
dec
in
sbb
and
int3
or
into
rol
dec
insb
or
push
add
or
mov
pusha
push
mov
movsb
stos
xchg
xchg
sbb
jecxz
out
or
cli
jp
loop
hlt
adc
jne
dec
mov
scas
frstor
xchg
lock
jmp
faddl
mov
jb
lea
rcrb
shrl
outsb
xchg
add
lcall
inc
repz
shll
xchg
call
adc
mov
in
loopne
ret
push
sub
inc
pop
out
sbb
push
push
imul
std
and
cmp
stc
jae
popf
jle
test
xchg
dec
sbb
insl
loopne
cmp
decl
pop
aas
push
add
ret
dec
push
adc
div
add
mov
sbbl
xchg
push
cmp
hlt
mov
sti
adc
dec
gs
xchg
xor
xchg
cli
inc
loopne
sahf
stos
ret
imul
xchg
push
mov
xchg
repnz
imul
jle
aam
push
add
repz
pop
in
mov
lods
cmp
pop
jge
cmp
and
add
or
inc
sub
jp
mull
fnstsw
jb
jb
sbb
sbb
adcl
xchg
sub
inc
push
xchg
sub
jo
cmpsb
push
inc
inc
jb
and
movsb
mov
sbb
mov
inc
aam
arpl
xchg
jae
and
and
das
ja
jb
push
nop
clc
sahf
add
jne
imull
push
or
add
xchg
or
push
jge
cld
add
mov
pop
das
or
andl
mov
dec
xchg
cld
push
inc
pusha
addr16
movsl
cltd
pop
dec
sti
ja
inc
icebp
pop
out
pushf
aaa
das
lret
aas
popa
mov
inc
ljmp
pop
sbb
nop
mov
mov
push
mov
mov
jge
ret
push
int
scas
pop
out
dec
loopne
mov
push
dec
ja
mov
mov
add
sub
mov
daa
pushf
in
ljmp
sti
hlt
inc
dec
ficomps
test
pop
test
pop
into
push
dec
mov
jne
mov
int
ja
cmc
lods
push
leave
enter
movups
jne
mull
cmp
gs
negl
cmpsb
es
repz
divl
nop
nop
jl
cld
jp
and
adc
stc
sbb
stos
sahf
data16
out
xchg
pushw
push
sub
adc
mov
jge
inc
or
push
fnsave
insl
dec
loopne
and
test
xor
inc
lahf
xchg
add
xorb
das
ret
je
sub
loopne
pop
shrl
pushl
pop
int3
push
push
xchg
adc
inc
dec
enter
jo
cmpsl
xor
sbb
push
repnz
fidivrs
lahf
sub
lret
jne
test
mov
ret
xor
push
xchg
jmp
sti
or
add
leave
std
test
mov
aad
push
arpl
or
push
lock
mov
inc
sbb
sti
popa
pop
push
movsl
stos
jns
jge
sub
jbe
gs
loope
mov
fistl
jns
in
sahf
mov
sahf
mov
xchg
rclb
and
js
fadds
fiaddl
je
in
iret
fstpt
push
jo
pop
test
mov
pop
dec
imul
es
cmp
sub
jmp
movsb
mov
outsl
leave
bound
sub
cmp
out
sbb
js
and
nop
leave
jno
psllw
stos
gs
add
out
cltd
mov
and
testb
rorb
lods
into
add
push
je
fldt
push
inc
in
popa
and
push
and
cmp
xlat
push
loope
inc
jne
popa
lahf
ljmp
aam
jnp
cmp
push
add
nop
fstl
or
aaa
not
stos
pop
jo
dec
ret
mov
jno
pushf
rorl
fistl
les
fcomp
sbb
cwtl
clc
and
addb
outsb
push
sbb
jl
adc
loope
enter
or
div
mov
mov
popf
scas
in
add
ret
cmpsl
and
cld
cltd
pusha
jg
nop
ret
out
stc
ja
mov
shrb
mov
cmpsb
sbb
xchg
mov
mov
sbb
add
sti
mov
lret
push
adc
jnp
mov
push
in
inc
repz
sub
xchg
mov
mov
aad
mov
out
ffreep
ljmp
mov
xor
dec
gs
sahf
repnz
jg
mov
add
lret
nop
outsl
push
mov
sub
dec
mov
jmp
and
and
pop
pop
dec
xor
mov
mov
and
popf
fwait
popa
dec
cs
or
or
push
adc
cltd
call
stos
xor
aaa
fiaddl
mov
add
outsb
shl
cmpsl
jb
sbb
and
xchg
xlat
mov
and
pop
lods
and
lret
or
outsl
repz
adc
jnp
rcll
sbb
add
dec
sbb
push
idivl
loopne
clc
xchg
outsl
mov
stc
pop
insl
push
mov
or
enter
test
adc
or
add
xchg
mov
xchg
shrb
push
add
and
inc
jp
mov
or
xchg
ja
sbb
sbb
adc
call
test
scas
lock
jno
xchg
sub
pop
pop
cmp
popf
or
mul
or
mov
cmp
sbb
jmp
cli
sub
into
inc
lretw
movsl
jbe
xor
jp
sub
das
and
mov
lcall
cld
and
repz
xor
inc
xlat
lahf
pop
jmp
ja
cmc
mov
mov
add
out
add
loop
jp
or
loopne
mov
add
test
sub
sbb
xor
mov
mov
mov
jb
sub
loopne
cltd
or
sbb
push
mov
adc
lret
push
push
lock
push
insl
xor
cwtl
cmp
rcrl
jae
outsl
or
inc
ds
jg
ss
xlat
les
mov
aam
cwtl
sbb
and
sub
xchg
jl
mov
fbstp
adc
xor
xchg
pop
mov
loopne
add
imul
sbb
loop
cltd
inc
cmp
fwait
dec
mov
outsb
fsubs
xor
je
mov
xchg
or
jg
int
and
sbb
add
lock
xor
xor
sub
test
icebp
imul
call
out
push
push
mulb
jmp
stc
xchg
or
push
inc
data16
sbb
rorl
stos
sarb
cmpsl
movsl
test
xchg
jb
shrb
dec
dec
dec
sbb
aad
mov
shrb
sbb
xor
les
sbb
xchg
mov
jle
xchg
shr
std
shrb
and
inc
inc
cmp
adc
mull
sbb
daa
dec
adc
scas
cmp
add
lods
lret
js
pop
movsl
sub
jne
nop
int3
clc
cmc
add
fsubrl
outsb
xor
xchg
jbe
mov
mov
mov
fwait
scas
cmp
pop
aad
imul
cmpsb
out
jg
cmc
push
xchg
aas
rcrb
aam
mov
sbb
and
xor
movsb
xchg
or
sbb
dec
inc
std
repz
mov
add
aam
sub
int3
push
jbe
lret
jl
inc
test
test
insl
cmp
lcall
mov
scas
cmpsb
das
fwait
pushf
pop
out
mov
push
sahf
movsb
sub
pop
hlt
leave
xor
cwtl
jecxz
movsb
into
mov
roll
jle
dec
cmp
mov
xchg
cmp
loopew
and
jb
pop
dec
lods
out
in
out
fs
cmp
cmp
shrb
sub
scas
out
cmp
sar
fsubrl
insl
adc
cmp
jns
test
add
ds
pop
xchg
ret
ljmp
cltd
xchg
cmp
sub
jle
jecxz
xor
lods
cmpsl
lret
xchg
pusha
xorb
mov
xchg
scas
sbb
stc
xchg
lret
out
push
push
xor
fistps
sub
fsubrl
rol
xchg
loopne
push
test
shl
aas
orw
xchg
xchg
inc
out
fstp
leave
jnp
cli
xchg
fdivrp
xor
ds
sti
test
mov
xchg
aaa
mov
out
imul
mov
adc
sub
mov
add
shrb
fmuls
push
sti
cwtl
push
or
out
sub
scas
adc
mov
inc
popl
outsl
imul
xor
push
in
add
fiaddl
mov
mov
pop
push
repz
mov
shlb
inc
jmp
sar
xor
xor
jae
jmp
jp
iret
mov
fmull
xor
repz
push
mov
push
out
push
push
pusha
sbb
enter
push
add
push
dec
pushf
pop
dec
scas
sbb
xor
sbb
mov
sbb
lock
mov
mov
jecxz
add
fiadds
insb
in
inc
out
or
imul
test
mov
xor
cmpsb
mov
cld
out
fcmovnu
cs
gs
and
xor
xchg
sbb
imul
mov
icebp
xchg
push
cmpsl
and
push
aam
mov
or
pop
mov
ss
mov
mov
inc
enter
adc
xchg
xchg
das
xchg
cmpl
jle
mov
scas
ljmp
scas
sub
mov
test
lods
jnp
xor
rorb
outsl
scas
mov
cmpl
jmp
or
mov
mov
scas
cmp
push
int
jb
stos
imul
xor
fadd
mov
loopne
vorps
cwtl
dec
int
daa
mov
outsb
ljmp
aam
in
jecxz
adc
movb
mov
es
push
daa
lock
dec
or
loopne
out
lret
push
int
push
ret
dec
in
sbb
sbb
xor
jo
cld
pop
outsb
div
orl
imul
lds
out
mov
jb
push
sbb
add
jae
roll
jl
aas
or
and
aam
pop
lahf
push
xchg
sbb
inc
jno
insb
or
int
jg
mov
imul
inc
sarl
ds
aad
jbe
fnsave
sahf
cmp
xchg
xchg
pop
push
pop
sbb
loop
rcll
dec
shlb
lds
mov
jnp
pop
add
lock
inc
fs
aam
andb
or
push
jno
les
loop
sub
imul
cwtl
out
adc
mov
cs
lea
xor
xchg
xchg
mov
imul
jecxz
xorb
out
clc
pop
sub
lret
std
add
loopne
pop
push
jge
cmp
push
dec
sbb
cmp
xchg
sub
movsl
movsb
xchg
inc
mov
mov
xchg
and
mov
js
jle
add
int3
xor
jo
jge
dec
jno
mov
push
and
lods
cmc
sbb
xchg
movsb
lds
or
data16
pop
roll
sbb
push
mov
gs
std
push
mov
add
sbb
cmp
mov
pop
xchg
in
inc
dec
xchg
adc
mov
xor
sahf
out
and
push
mov
ror
scas
push
cld
sbb
scas
divl
data16
cld
sub
mov
and
add
loop
adc
inc
and
cs
shl
dec
jecxz
push
shl
insl
jecxz
mov
test
cmp
ror
pop
loopne
sub
sub
mov
sub
ds
leave
insl
cmp
outsl
ret
mov
jno
sbb
dec
out
inc
decl
add
and
sub
pop
and
hlt
jmp
push
xchg
add
arpl
movsl
push
adc
cmp
jno
cmp
xor
xchg
icebp
push
xchg
mov
jg
out
inc
into
add
jge
inc
inc
xor
test
xor
jb
clc
out
cmp
sub
loop
mov
push
pop
inc
test
jmp
sub
dec
icebp
ret
sbb
add
loope
jb
sub
inc
std
data16
fwait
mov
add
jb
sbb
jne
and
adc
pop
xlat
sbb
pop
lea
inc
ja
mov
pushf
adc
ficoms
jae
std
fwait
mov
mov
ret
aam
cwtl
jns
jle
cwtl
aad
outsl
adc
add
fwait
jmp
aaa
xchg
popf
inc
test
and
inc
rclb
scas
orl
mov
test
lcall
and
leave
loopne
sbb
jo
out
jmpw
nop
mov
adc
outsb
ret
cmp
roll
imul
out
jns
enter
int3
cli
fsubl
xor
mov
mov
aaa
nop
into
xchg
je
sahf
lret
xchg
or
ja
xor
mov
mov
insl
sub
dec
push
or
add
std
push
adc
daa
push
jne
ljmp
out
fwait
test
bound
out
jo
xchg
out
add
fdivl
psadbw
xor
xchg
test
cmpl
lods
cmp
shrl
or
pop
mov
xlat
out
sub
shll
xlat
cs
adc
xchg
lret
mov
inc
mov
hlt
adc
js
mov
aad
jns
mov
dec
dec
test
push
inc
xchg
loop
in
jo
inc
or
sbb
imul
nop
push
lock
addr16
push
pushl
int
test
jp
ja
sub
xor
imul
in
sbb
adc
cmp
pop
adc
sti
xchg
fcmovnu
dec
lods
xlat
xchg
mov
and
cmpsb
jmp
push
sub
aam
xchg
lds
cltd
xchg
repnz
push
add
adcb
ss
iret
pushf
jl
add
dec
enter
cwtl
call
add
mov
sbb
or
pop
in
xor
int
xor
pop
insb
sub
xor
popf
popa
pop
imul
cltd
enter
cmp
xor
mov
sbb
pop
cmp
sbb
jb
les
mov
push
inc
mov
arpl
dec
ret
lahf
push
xlat
ret
jge
cmp
nop
into
pusha
lcall
daa
jae
jg
push
mov
or
jg
cmpsl
jne
out
stos
fmuls
fwait
outsb
push
or
test
mov
jg
xor
fmull
jmp
data16
enter
pop
test
dec
dec
mov
pushf
fnstsw
inc
inc
pop
aaa
xchg
orb
imul
imul
jg
lods
repnz
xor
and
lock
xchg
sub
ds
pop
aad
push
mov
mov
push
mov
lahf
adc
push
inc
mov
xor
enter
sub
dec
js
sarb
xor
cmpsl
fdivrl
sub
adcl
xchg
push
xor
ljmp
ss
xchg
mov
insl
mov
popf
xor
int3
xchg
lcall
loope
sbb
mov
cmp
jle
push
xchg
test
push
dec
push
repz
lods
xchg
dec
call
cld
fidivrl
mov
adc
sahf
push
or
dec
pop
fadd
xor
add
ljmp
sbb
xlat
sarb
in
and
xchg
lods
fisubl
call
les
xor
dec
int3
enter
jns
lcall
daa
ja
or
jbe
push
fidivl
out
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
outsl
sub
xchg
divb
daa
mov
mov
jno
dec
dec
xchg
jp
mov
jnp
popf
popa
pusha
fcomp
out
sbb
jo
pop
out
add
fcmovu
cmp
xlat
pop
insb
bound
add
sbb
cmp
xlat
fisubl
dec
shrl
jbe
in
xchg
stos
inc
cmp
or
jl
popf
call
and
jge
fwait
add
push
jge
insl
inc
add
adc
pusha
dec
cwtl
cmpb
loopne
pusha
fildll
daa
popf
fsub
test
lret
and
add
inc
pop
lock
movsl
inc
mov
loop
fists
in
mov
xor
shlb
jp
jmp
movsb
stos
stos
adc
mov
xchg
lahf
push
pusha
prefetch
xchg
shll
pop
cmp
mov
mov
inc
cmpsb
das
ret
cltd
mov
or
dec
cwtl
and
dec
jge
inc
pusha
pop
mov
pop
xchg
adc
scas
cmpsl
fsubs
shlb
mov
addr16
cmc
jnp
jbe
adc
mov
cmp
call
stos
icebp
lods
int
fs
fadds
icebp
dec
lea
xchg
cmc
jmp
pop
lcall
sarl
cwtl
aaa
pop
push
push
nop
add
push
loope
jl
insb
mov
lcall
or
pop
sbb
add
and
movsb
dec
fistps
aas
sbb
mov
stc
inc
or
xchg
push
inc
repz
lock
mov
push
outsl
es
mov
jne
mov
mov
in
int3
mov
lcall
push
nop
leave
jl
fstps
jmp
push
ret
cmp
sbb
outsb
insl
xchg
rclb
shll
adc
out
in
inc
imul
sbb
std
add
fisttps
cmp
jb
pop
xchg
xchg
xor
data16
sub
and
scas
mov
sbb
mov
data16
and
imul
adc
jmp
xchg
jmp
data16
dec
adc
or
dec
call
mov
inc
mulb
sarb
or
dec
push
mov
repnz
enter
popa
insb
in
test
lret
out
xor
add
mov
shl
and
ss
dec
cld
sub
out
cmp
xor
cmpb
mov
or
pop
sahf
mov
jns
sbb
mov
cld
imul
loope
inc
imul
enter
jns
push
and
fadd
add
lcall
sbb
sub
pop
mov
sub
add
jg
push
xor
mov
or
aaa
ret
rorl
push
add
lahf
ja
jbe
xor
push
mov
bound
cmp
orb
arpl
xor
scas
flds
mov
sahf
movsb
pop
test
sbb
and
xorl
jne
xchg
test
fdivs
gs
dec
cmc
push
mov
cltd
push
fbstp
stos
push
and
sbb
insb
pop
mov
divb
mov
mov
xchg
loopew
cs
jle
in
outsl
fcoml
mov
sbb
add
lret
ds
mov
inc
aad
mov
out
xchg
pop
jbe
jnp
jno
pop
mov
addr16
fs
adc
xchg
mov
aad
outsl
mov
cmpsl
push
add
jne,pt
mov
jl
cs
sub
or
dec
sbbb
lret
lret
jle
fsubr
gs
pop
clc
inc
pop
jno
out
imul
es
rclb
jge
rep
addr16
jb
hlt
xchg
mov
outsl
clc
loop
cmp
outsl
stos
shr
pop
add
mov
push
pop
outsb
cmp
pop
aas
insl
inc
mov
dec
push
loopne
mov
gs
repnz
mov
aam
pop
or
adc
inc
and
cmp
jle
dec
cwtl
pop
push
fucompp
push
int
xchg
cli
fwait
out
int3
or
in
dec
pop
call
test
add
jnp
adc
sub
daa
fs
dec
icebp
nop
and
push
mov
int
repz
out
add
inc
dec
les
xor
ret
sahf
add
xor
fisttpl
jno
xor
mov
dec
repnz
mov
dec
xor
or
ficomps
inc
mov
sub
in
add
add
popf
mov
aaa
sbb
dec
pop
into
shlb
adc
mov
scas
in
cs
lea
nop
inc
sbbl
push
fbld
sbb
pop
int
mov
mov
mov
inc
adc
fwait
hlt
mov
adc
popa
imul
pop
sbb
adc
lds
xchg
push
mov
aam
dec
insb
aas
test
dec
mov
sti
je
cmp
cmp
mov
push
xor
loope
adc
outsb
lods
cld
loopne
ljmp
xchg
mov
fstpt
or
xchg
cmp
ret
cli
push
xchg
fistl
mov
rcrb
pop
xor
outsb
pop
out
mov
andb
jp
inc
jnp
out
fisubrl
sbb
nopl
xor
or
xchg
pop
adc
stos
cmc
fs
ret
and
push
xor
inc
fbld
lcall
ds
sub
adc
leave
adcb
test
adcb
mov
jo
pop
push
xchg
aaa
nop
cmp
push
pop
push
out
mov
xchg
ss
mov
pop
dec
jge
ret
jbe
idivl
sbb
xor
sub
pop
aas
lcall
cmp
xor
xchg
lea
cld
dec
addl
sub
out
adc
pop
pusha
jg
lock
lods
inc
nop
scas
sbb
insl
or
adc
call
sub
lds
inc
jbe
push
cmp
shrl
mov
mulb
test
adc
add
ja
out
inc
mov
out
fiadds
xchg
jg
and
insl
cmc
mov
and
push
out
lret
addr16
adc
sub
dec
mov
xchg
mov
test
int
xor
and
aaa
push
or
popf
movsl
ja
movsb
jns
lods
lret
push
in
and
std
mov
daa
or
cmpsb
out
pop
mov
int3
xchg
add
jb
sahf
dec
lcall
sub
stos
lea
adc
rcrl
int3
mov
sbb
fidivrs
adcl
xchg
ds
cli
sub
es
das
repz
leave
pop
sbb
mov
into
lds
fs
or
ja
cmpsl
mov
adc
leave
mov
lea
xor
and
sahf
in
xor
mov
add
cmpsb
in
les
movsl
addr16
cmp
or
std
les
xchg
adc
dec
sti
lahf
pushf
inc
cli
lret
and
jo
cmpb
xchg
es
imul
outsb
pop
add
mov
arpl
push
cmp
or
arpl
xor
rolb
fisttpll
aas
cmp
mov
in
clc
mov
lods
into
inc
shlb
push
xchg
les
add
cli
sarb
mov
mov
xor
jnp
mov
movsl
push
les
inc
lret
push
cld
add
cmp
sbb
cmpsl
leave
divl
or
mov
sbb
xorb
or
inc
shll
test
sbb
sbbb
call
in
push
pop
rcrl
pop
pop
jo
dec
xchg
xchg
push
cmc
inc
hlt
cli
call
jnp
mov
outsl
push
mov
xor
push
add
pop
pop
insb
lock
adc
and
test
mov
push
lret
fsubp
jmp
mov
mov
jo
aam
ds
mov
testl
hlt
lods
or
jbe
daa
xor
gs
inc
mov
dec
cmp
cld
mov
dec
mov
xor
psllw
aad
adc
jecxz
cmp
cmpsl
xor
mov
repnz
loope
xor
xchg
mov
lock
outsb
mov
out
mov
dec
sbb
sbb
cmpsl
mov
loopne
mov
ret
and
lcall
in
popf
stc
gs
push
xchg
cmp
bound
mov
ret
cmpsb
push
add
push
and
enter
pop
mov
xor
je
mov
rcl
repnz
in
fdivs
mov
aaa
jp
jl
mov
out
jnp
xlat
inc
mov
jle
popf
rclb
imul
sub
xor
add
test
cmc
aas
les
lods
mov
pop
lahf
adc
lods
leave
cmpsl
jle
push
pop
sbb
pop
ret
pop
cmp
ja
push
or
push
mov
ja
sbb
pop
loope
das
data16
imul
sbb
popa
hlt
xor
jg
inc
scas
push
sbb
and
pusha
pop
stc
mov
test
add
jnp
dec
mov
mov
aad
aad
xchg
loopne
mov
cmp
mov
jl
add
outsb
dec
mov
imul
cmc
imul
sbb
pop
jmp
mov
cmp
mov
push
int3
push
mov
es
imul
std
add
in
cmpsb
fnstenv
hlt
test
xchg
cli
fdivs
cld
into
pushf
pop
clc
hlt
dec
or
loopne
insb
insl
xchg
dec
mov
lods
das
outsb
push
xchg
paddusb
test
inc
xchg
inc
fdivrs
cmp
in
ret
mov
mov
jp
sub
push
pop
inc
or
cmp
flds
repnz
out
je
js
cmp
shlb
cmp
push
or
or
pop
sub
or
ja
push
pop
ds
out
repz
xor
ja
xor
or
sub
daa
imulb
es
test
sbb
xchg
hlt
data16
xlat
notb
cld
add
xchg
mov
outsb
fmull
mov
lea
pop
adc
std
arpl
ret
int
aam
dec
push
inc
aad
push
or
xor
adc
mov
inc
xlat
cld
leave
or
movsb
mov
and
sub
mov
daa
cmp
sub
mov
push
jne
mov
test
mov
lahf
xchg
adc
fsubl
test
je
xchg
or
lock
in
pop
jmp
dec
adc
sbb
mov
cmp
or
push
dec
fisttps
lods
lret
inc
lret
test
cli
mov
gs
jg
rclb
sub
push
mov
bound
pop
adc
hlt
out
xor
pop
jb
dec
rcl
sbb
es
and
inc
stc
repz
cwtl
mov
mov
test
and
jmp
das
pushf
lods
sub
pop
sbb
pop
mov
shrb
push
je
add
lea
insl
and
iret
out
movsl
insb
push
arpl
aam
mov
dec
mov
testl
push
dec
aam
sti
xchg
out
ds
jl
aam
sbb
out
ret
or
push
cmpsb
scas
mov
sub
into
jno
cmp
mov
mov
mov
push
mov
mov
rorl
add
push
sbb
xchg
pop
jge
mov
push
ljmp
push
jl
test
or
addr16
sub
out
or
push
xor
cmp
fmulp
mov
mov
mov
ja
movsb
out
test
rcl
push
ds
jb
and
xor
push
mov
fsubr
imul
sub
pop
and
sbb
dec
adc
xchg
mov
sbb
sbb
sbb
and
arpl
loopne
sub
out
pop
pinsrw
xchg
fwait
fwait
stc
out
add
sub
shll
sub
call
mov
xor
xor
movsl
fwait
imul
add
lahf
iret
rcrb
sub
out
push
icebp
movl
or
xchg
dec
pop
les
and
repz
or
mov
fucom
cmpsb
fwait
dec
or
cs
push
out
movsl
inc
out
and
aad
outsl
or
mov
mov
daa
add
adc
ret
mov
ret
inc
fldcw
cs
pop
sub
jnp
jecxz
lcall
lods
ds
jecxz
xlat
mov
and
sahf
push
ficomps
fisubrl
ljmp
aad
push
orb
out
xor
pop
shll
ficoms
dec
pop
xor
dec
sar
dec
shrl
arpl
jp
popa
add
out
mov
xchg
inc
lea
pop
push
lds
adc
je
out
pop
movsl
xchg
inc
dec
xchg
sub
cmp
jbe
insl
pusha
add
call
insb
jmp
fisubrs
lcall
loop
jo
inc
xor
mov
fs
das
repnz
cmovl
outsl
icebp
arpl
call
in
mov
add
loop
push
lret
xchg
lret
push
or
ds
xor
xor
cmp
bound
cmp
dec
mov
mov
mov
adc
push
or
dec
outsl
ds
mov
push
cmp
inc
cs
adc
aas
addr16
jl
arpl
adc
jl
lods
mov
jle
dec
repz
subb
int
adc
sub
mov
sti
push
inc
cmp
in
faddl
pop
nop
push
adc
rcl
outsl
lahf
xor
dec
call
pop
std
leave
push
push
adc
scas
push
test
xor
or
ds
cli
js
cmpsb
mov
mov
xchg
lahf
sbbb
cmp
jo
cmp
pop
mov
movl
mov
leave
test
jecxz
stc
popa
cmpsb
out
push
stos
adc
mov
test
jo
push
and
pop
adc
sub
sti
lea
clc
rcll
jg
sbb
insb
jecxz
xlat
enter
dec
jae
mov
dec
out
push
jecxz
imul
mov
adc
push
sbb
pusha
sbb
and
in
insl
pop
add
sub
push
sti
cmp
and
cld
or
add
jns
out
or
mov
add
mov
in
and
add
mov
mov
subl
out
mov
push
dec
sarl
aam
push
jp
xor
push
xchg
rcrl
in
nop
adc
rorb
mov
in
ret
adc
mov
cwtl
repz
sub
aas
sti
jae
cwtl
jnp
sbb
sbb
push
scas
jb
cmc
and
nop
inc
scas
xor
xchg
mov
mov
xchg
sub
push
es
lds
mov
clc
adc
lret
dec
and
mov
nop
test
add
cmp
jae
sub
or
jo
imul
mov
scas
daa
call
mov
or
insl
sarl
xchg
sub
mov
dec
fmull
pushf
repnz
outsb
lock
inc
push
push
lret
cmpsl
icebp
or
out
pop
and
dec
and
sub
mov
dec
and
icebp
lock
clc
xor
sbb
jge
dec
fs
mov
mov
ret
repnz
sbb
out
add
lcall
popf
arpl
lahf
imul
mov
les
cwtl
xchg
xchg
cmp
or
sbb
cmp
ret
xchg
cs
pop
adc
xor
sub
mov
dec
xchg
jb
addb
aaa
adc
repz
xchg
jg
or
scas
mov
les
jo
adc
add
testb
stos
or
repz
mov
stos
addr16
push
lcall
in
and
outsb
or
mov
sbb
imul
icebp
sub
fsubrl
mov
shll
sbb
mov
int3
xchg
fcomps
addr16
loopne
pop
jb
fildll
xor
add
dec
fdivs
and
or
stc
xchg
lret
dec
test
pushf
fildll
mov
ss
popa
in
xchg
adc
pop
mov
fcmovnu
inc
cmp
fs
sti
mov
mov
rorb
xchg
add
movsb
mov
jae
inc
jl
jmp
cmpb
fcoml
sbb
jnp
fsubl
and
push
push
ja
sti
loopne
in
outsl
lcall
push
mov
sbb
xchg
cmp
data16
shrb
or
sbb
in
in
add
int3
dec
out
mov
jmp
aad
subl
dec
add
rcrb
pop
stc
in
mov
int3
inc
out
mov
push
stc
adc
hlt
mov
imul
mov
insl
sahf
xor
scas
je
out
roll
out
sub
addr16
loope
push
ja
xchg
lea
mulb
popf
push
mov
mov
addr16
or
loopne
sbbl
inc
iret
pusha
or
popa
fidivrl
cmp
adc
jo
call
jge
push
jae
sbb
pop
dec
out
pop
mov
iret
push
sub
push
popa
movsb
movl
arpl
push
std
in
and
lock
dec
xor
aad
sbb
mov
fsubl
fs
sbb
xor
sub
imul
imul
scas
xchg
cmp
cmp
mov
pop
das
and
inc
cld
in
loopne
jecxz
adc
in
lahf
xchg
jae
pop
dec
sub
leave
mov
mov
pop
mov
cmpsb
aam
enter
mov
push
xor
or
call
push
sub
scas
mov
push
incl
icebp
sub
sti
cmp
xchg
mov
cmp
fdivl
imul
cmc
setbe
test
or
xchg
mov
hlt
sahf
push
bound
adc
xchg
mov
cmp
dec
sahf
add
scas
sub
sub
and
mov
pusha
and
xchg
xchg
fbstp
push
jae
pop
das
cmp
jbe
or
inc
cmpsl
loop
cmp
adc
into
std
sub
ss
jae
sub
aam
jns
sbbl
push
push
arpl
xor
es
sub
les
inc
lret
cmc
imul
cmpsl
testl
call
cmc
mov
add
fdivl
shrb
fcmovbe
mov
shlb
xchg
pop
into
ds
into
sub
mov
mov
shlb
rclb
ret
loope
pop
scas
sbb
loopne
pop
mov
loopne
push
xchg
fidivl
cmc
mov
pop
jecxz
add
push
ret
mov
jns
icebp
mov
jp
rol
hlt
outsl
mov
dec
filds
imul
add
push
add
pop
jbe
lds
and
jle
pop
mov
push
inc
mov
mov
cs
stos
mov
mov
lret
stos
mov
mov
pop
inc
push
mov
andb
xorb
cwtl
jl
dec
or
rolb
sub
cmp
adc
aam
sbb
std
imul
mov
and
jnp
push
jne
imul
das
mov
loopne
pop
mov
hlt
call
inc
push
in
into
out
addr16
icebp
stos
sub
js
in
in
sbb
lds
sub
nop
cwtl
pusha
lea
jo
and
std
clc
popl
jne
inc
push
xor
ds
int
jg
ja
inc
shlb
jmp
xlat
add
sarl
and
rcr
incl
shlb
outsb
cli
inc
mov
cmp
ds
xor
clc
inc
mov
jmp
cpuid
and
aaa
sbb
cld
xorb
lds
xor
jbe
cmp
jp
or
ljmp
dec
lods
push
pop
jbe
mov
and
testb
and
arpl
hlt
mov
sti
mov
cltd
xchg
xchg
add
jnp
push
ja
pop
in
add
or
push
pushf
and
loope
fsubl
fsubrl
outsl
mov
dec
in
adc
push
stos
gs
mov
push
mov
mov
jb
sub
ja
pop
outsb
adc
rorb
out
cs
fs
sbb
mov
cmp
popa
orl
movswl
repz
jne
call
inc
inc
aas
js
cmp
dec
jo
push
adc
pop
cmp
idivb
jae
sbb
mov
es
push
addl
pop
mov
jae
mov
ljmp
mov
jno
inc
dec
mov
shr
and
jecxz
ret
into
xchg
pop
movb
hlt
xor
orl
add
xchg
sbb
cwtl
pop
call
mov
gs
enter
cmc
loopne
cmc
hlt
mov
shll
adc
cmp
sub
je
rcl
add
lods
das
mov
add
popa
sub
cs
add
loop
and
adc
ds
lods
adc
loop
push
leave
jne
push
cmpsl
add
adc
jns
loope
adc
jmp
les
pop
data16
and
push
hlt
jp
fsubl
imul
out
sbb
lock
cli
cmp
data16
lahf
clc
int
xlat
fiaddl
mov
frstor
cmc
sub
adc
ret
or
and
mov
sub
add
push
xor
mov
cltd
aas
aas
sub
rorb
aas
jmp
sbb
add
mov
mull
pop
sub
pop
jns
ja
cmp
mov
xor
mov
xchg
loope
std
les
mov
cmpsb
loopne
mov
sbb
leave
cltd
mov
popl
lcall
mulb
notb
pop
xor
arpl
lds
mov
push
cmp
movhps
lcall
pop
cld
adc
cmc
test
mov
sbb
rolb
adc
push
xchg
xor
mov
icebp
jb
ja
ds
inc
xlat
sub
xor
cmc
add
cmpsl
fdiv
dec
cwtl
sar
add
push
push
add
xor
jge
bound
fisubl
push
dec
cmpsb
or
loopne
push
aaa
inc
mov
jge
xchg
jp
in
es
inc
sahf
lds
sbb
lahf
xor
jp
jg
les
xor
mov
mov
bound
aaa
leave
movsb
mov
jbe
jno
insb
pop
insb
cmc
xchg
call
out
sub
push
dec
movsb
mov
mov
cwtl
mov
cmp
push
push
sub
cs
mov
mov
mov
inc
sbb
dec
inc
inc
fwait
rorb
pop
insb
jns
cmc
fdivrp
cld
leave
dec
insb
imul
rcrl
mov
in
pop
and
mov
jbe
sbb
cmpsl
insb
mov
lods
sbb
in
inc
lds
pop
push
xchg
gs
imulb
ljmp
xchg
push
mov
fists
fwait
push
js
xchg
fsub
outsb
add
lret
add
or
daa
adcb
jo
sub
dec
out
jmp
mov
popw
leave
cmpsb
dec
xchg
cmp
out
pop
shrl
int3
sub
sub
mov
fwait
sbb
pop
pop
mov
sub
and
xor
fstps
stos
pop
test
fdivrl
sbb
in
inc
xlat
jge
sbb
dec
jmp
jne
movsl
lods
cmp
mov
mov
rcrl
dec
jnp
dec
invd
cltd
stos
mov
sub
icebp
or
icebp
outsl
lods
mov
sub
cmpsb
push
test
sub
and
sti
add
mov
mov
inc
inc
sub
jle
dec
ja
push
cmpsl
enter
push
inc
push
cld
arpl
or
xchg
add
subl
dec
addb
dec
fildl
popf
xchg
fwait
cld
inc
jge
xor
pop
add
add
xor
leave
mov
inc
push
add
pop
push
insb
divl
shll
leave
mov
xor
ds
cmp
and
cld
pop
xor
sarl
jmp
mov
inc
xchg
mov
inc
es
addr16
or
ret
dec
das
cltd
hlt
inc
and
aas
pusha
aaa
adc
sub
into
push
inc
lock
and
cmpl
sbb
loop
sbb
test
and
loopne
loope
inc
test
push
push
mov
and
sbb
int
bound
jno
inc
xchg
popa
pop
mov
and
xchg
ljmp
pop
adc
jecxz
mov
pop
daa
dec
jg
int3
mov
dec
xor
ss
outsb
sahf
push
das
es
out
mov
inc
int3
push
out
cmpsl
mov
adc
outsl
sti
pop
xchg
into
and
xchg
dec
fistpl
sbb
repnz
stos
sarl
nop
cmp
sbb
adc
cmp
test
sti
dec
lret
popa
xor
cs
fwait
jo
lock
cmp
add
cld
inc
nop
mov
popf
test
lock
xorl
pop
cmpsb
and
adc
rorl
dec
fimull
push
mov
dec
shlb
xchg
int3
jns
jg
inc
xchg
dec
cli
dec
bound
or
sub
popa
jge
sub
inc
mov
jge
clc
dec
mov
jp
rcr
mov
sbb
shrb
stos
arpl
sub
xchg
mulb
cmp
mov
pushl
loop
cld
insb
push
mov
and
xchg
mov
push
sar
lods
sbb
lods
adc
mov
sbb
pop
dec
add
add
repz
cmpsl
pop
scas
or
push
and
lahf
lock
loope
xchg
insb
jns
and
adc
jle
lret
xchg
loop
push
xor
sti
add
mov
mov
and
fisubl
fcoms
mov
insl
std
sbb
sahf
mov
js
or
lea
or
pop
leave
and
sbb
fcoml
sbb
sbb
xchg
mov
inc
mov
je
xchg
or
pop
arpl
adc
fs
adcb
or
jl
ss
imul
xor
out
in
fcomp
mov
jg
pop
push
fmuls
mov
add
mov
int
push
ror
sarl
notl
jbe
inc
imul
cmp
imul
sub
xchg
cmp
mov
mov
test
test
popf
and
mov
fdivs
cltd
js
mov
dec
test
fs
cs
cmpsl
jg
gs
adc
out
ret
out
push
fimuls
in
jle
cwtl
clc
xor
call
lahf
adc
mov
push
push
push
dec
push
sub
xchg
cmp
popf
arpl
dec
jae
jne
jmp
add
pop
push
push
je
push
int3
inc
mov
pop
push
adc
adc
jne
dec
in
adc
mov
loop
cmp
enter
negw
out
add
or
aam
push
loopne
adc
mov
xor
scas
nop
bnd
cmpb
sub
inc
ljmp
or
dec
shl
xchg
out
fisttpll
out
jecxz
mov
lret
push
leave
mov
rcl
jmp
sarb
psadbw
outsb
jns
filds
and
pop
mov
mov
or
std
cli
roll
fidivrl
add
test
popf
stos
push
sti
dec
in
stos
pushl
mov
fcmovne
stos
mov
and
movsb
popf
jmp
dec
test
mov
sub
or
ja
pop
in
ljmp
pop
or
iret
xchg
adc
int3
jae
push
scas
dec
add
inc
movzwl
rclb
in
and
cld
mov
rclb
mov
sarl
das
std
cmp
cmp
sbb
xor
jecxz
sub
xchg
dec
cwtl
mov
outsb
in
pop
sub
and
cmp
push
mov
mov
in
mov
cmpsb
adc
add
daa
or
leave
jns
xor
dec
mov
or
stc
aam
aas
aam
or
xor
push
cmp
frstor
lods
daa
push
jns
mov
adc
mov
rcrl
mov
jmp
pop
in
in
inc
pop
push
push
push
xchg
mov
dec
outsb
and
mov
pushf
lcall
mov
push
xchg
repnz
dec
and
insb
inc
mov
jno
fwait
pop
push
fisubs
jb
lahf
xchg
xchg
fadd
ficomps
sub
jl
les
enter
arpl
mov
cmp
jne
jnp
shr
cmovo
mov
cmp
pop
and
ret
sub
pushf
jno
dec
cmp
push
jle
or
rolb
xor
add
mov
leave
or
stos
cmpsl
ja
sbb
rcr
mov
mov
add
aas
cmc
sbb
pop
movb
xor
xchg
xlat
cmp
jle
xor
imul
xchg
mov
or
jp
orl
mov
pop
jb
insb
loop
mov
and
pop
movsl
xor
add
sbb
rclb
mov
add
xchg
aad
decl
dec
cmp
mov
and
ja
movsb
xor
arpl
add
mov
adc
rcr
xor
call
lret
mov
stos
aas
or
pop
fstpl
adc
leave
mov
inc
xlat
sub
push
dec
arpl
pop
jo
mov
gs
inc
rcr
pop
mov
and
inc
jb
stos
mov
pusha
sbb
inc
imul
gs
pop
xchg
xchg
popf
dec
or
mov
jecxz
rsqrtps
pop
sub
outsb
xchg
inc
add
inc
push
push
sbb
push
sarb
js
loop
imul
adc
inc
adc
stc
xor
push
lock
push
adc
shll
cmpb
ds
scas
cmp
into
adc
aad
in
clc
jne
daa
sub
sub
movsb
pop
push
push
and
mov
xor
movsb
push
sub
dec
addl
pop
mov
pop
nop
ljmp
cltd
std
adc
mov
scas
xor
push
pop
pusha
cmp
idivb
aas
fucomp
rorb
jmp
jbe
cmp
ficompl
or
xchg
out
fiadds
xor
outsb
and
imul
and
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
addl
push
mov
mov
sub
imul
push
xor
or
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
movl
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
mov
mov
and
mov
andl
xor
or
inc
mov
cmpl
ja
jmp
push
pushl
push
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
mov
xor
mov
movl
cmpl
je
cmpl
jg
jmp
call
mov
dec
mov
jmp
mov
sbb
sub
mov
sbb
orl
mov
mov
adcl
sub
mov
orl
movl
cmpl
je
cmpl
jb
jmp
call
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
neg
push
adc
push
push
xor
movl
mov
xor
xor
sub
add
lea
sub
mov
subl
movl
xor
lea
add
mov
xor
mov
or
mov
mov
mov
sub
imul
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
xor
mov
add
xor
mov
mov
mov
mov
add
and
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
xor
mov
sbb
mov
mov
add
cmp
movl
je
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
push
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
call
jmp
mov
or
movl
cmp
movl
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
not
mov
mov
cmp
jne
movl
cmp
jne
movl
push
push
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
push
movl
push
jmp
mov
mov
cmp
movl
jne
movl
cmp
movl
jne
push
push
movl
jmp
movzbl
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
jne
sub
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
jmp
mov
jae
jbe
cmp
add
sti
or
rorl
jnp
pushf
jnp
leave
dec
outsl
fistl
and
mov
repz
jp
bnd
xchg
and
xlat
shrb
mov
insl
stc
neg
stos
in
aas
pop
shrb
jle
int3
mov
push
mov
sub
icebp
mov
rcrl
scas
and
xor
push
insl
pop
mov
push
lock
sub
cmpsb
mov
jecxz
jmp
in
xor
outsl
sti
adc
push
stc
mov
jo
mov
xlat
addr16
std
das
add
inc
mov
popf
adc
xor
sbb
sub
mov
or
add
loope
or
xchg
adc
add
cmpsl
and
or
mov
dec
and
cmp
imul
fistpl
inc
jl
pandn
aam
imul
sub
shr
push
adcl
es
cld
cwtl
sub
push
xchg
dec
daa
jmp
mov
jno
jbe
lea
ljmp
jns
xor
dec
mov
inc
in
pusha
or
imul
sbb
lret
testl
sbbb
inc
out
in
gs
dec
pop
repnz
sbb
jle
push
push
jecxz
out
pop
outsl
lahf
in
aad
aam
mov
rclb
repz
inc
inc
js
lret
sbb
popa
sbb
fs
adc
sahf
gs
repz
adc
jle
outsl
movsl
sub
jns
xor
aam
mov
inc
lahf
add
int
pop
jle
jns
into
xlat
push
loope
jbe
xchg
mov
lret
lret
jg
cmp
lcall
repnz
outsb
ds
fsubrs
pop
xchg
push
imul
lods
jo
cmc
jecxz
pop
mov
adc
adc
xorl
sub
es
cwtl
mov
mov
lock
mov
out
add
fildl
outsl
cld
out
mov
nop
mov
pop
pop
lret
push
mov
loop
nop
sbb
cld
mov
xor
xchg
mov
sbb
std
cld
cmp
push
push
mov
add
dec
push
call
in
fsubs
push
jne
and
les
sbb
call
loop
sti
into
push
loope
lahf
leave
mov
mov
adc
jo
hlt
jl
les
add
shll
push
jns
cmpsl
ficoms
sbb
xchg
pop
add
mov
cli
cmpsb
aas
in
dec
out
mov
cmp
jae
mov
outsb
or
mov
cwtl
pop
xchg
js
jg
adc
jecxz
out
test
ja
xchg
lcall
sarl
lods
js
test
jecxz
xchg
or
jae
fwait
xor
sub
stos
adc
outsb
xchg
cmc
ds
cmpsb
pop
pop
sub
lret
jecxz
xchg
push
adc
add
or
sbb
lods
push
loopne
lods
push
stos
sbb
pop
sub
aad
lret
or
vfrczsd
rcll
aam
in
add
sub
gs
les
lahf
mov
jecxz
mov
add
jg
shll
mov
repz
dec
in
adc
push
idivl
jb
xchg
push
cmp
dec
xchg
xchg
dec
jno
and
or
test
push
inc
xchg
stc
ret
and
daa
add
inc
clc
mov
fsubrl
nop
xchg
popa
push
pop
daa
mov
mov
and
jge
iret
lea
fildl
inc
fdiv
inc
adc
jne
jnp
and
push
es
cwtl
inc
and
and
fwait
negb
adc
inc
fs
rcl
pop
popf
push
pop
sub
nop
and
loopne
popf
stos
test
ljmp
inc
pop
xor
dec
lods
aaa
pop
or
xlat
popa
add
mov
das
push
xchg
push
loope
xchg
cltd
sbb
fiaddl
or
mov
pop
imul
sbb
add
push
loop
push
sbb
add
sbb
pop
or
inc
ljmp
sbb
dec
ja
mov
mov
enter
add
enter
test
fdiv
dec
in
lret
stos
pop
ss
and
add
xchg
xor
popf
rorl
outsl
out
outsb
xchg
arpl
pop
pop
push
andb
and
add
mov
lret
ficompl
andb
aas
lods
inc
es
shrl
push
sbb
xor
sbb
sar
aad
adc
xchg
push
movsb
lcall
jmp
js
mov
rcrl
dec
sub
mov
inc
mov
jbe
jg
das
jb
xlat
push
dec
out
cltd
test
mov
roll
js
sbb
or
cli
cmc
insl
pop
ficompl
lds
pop
jno
lcall
popa
mov
pop
aas
gs
add
push
aam
jp
lret
inc
sahf
xor
test
stos
fucompp
and
je
mov
jae
pop
xchg
lods
push
insl
ret
fdivrs
dec
jae
sbb
fdivrl
jmp
or
or
lret
ret
xor
and
fcoms
mov
sbb
jp
push
filds
and
pop
pop
ja
imul
ret
fstpt
test
mov
test
cmp
scas
jnp
bound
inc
pop
mov
adc
cmp
int
arpl
jge
andb
fcomps
cmc
inc
mov
mov
pop
or
sbb
inc
xchg
movsb
jo
inc
repz
bnd
int3
cmp
cmp
pusha
sbb
loopne
scas
rcrb
aaa
repnz
jo
sbb
je
cmp
xor
jecxz
push
push
cltd
ret
inc
add
mov
add
int3
jnp
push
pop
lea
xchg
mov
stos
xor
inc
push
xor
outsb
scas
les
mull
adc
sti
into
fiadds
ret
into
inc
xchg
dec
sub
pop
jp
call
pushf
mov
fwait
mov
stc
jecxz
mov
jns
adcb
jecxz
and
xorl
insl
mov
gs
aad
sbb
mov
add
mov
leave
and
inc
inc
push
fsubrs
cmp
int3
inc
xor
mov
ljmp
fstl
jl
push
and
or
pop
xor
stos
cmpl
cltd
mov
mov
add
ret
mov
hlt
pop
xchg
push
inc
out
je
dec
or
jl
loopne
ret
pop
push
cmp
in
xchg
pop
dec
lret
ljmp
inc
xlat
rolb
outsl
jbe
std
jnp
loop
sahf
cmp
out
fmulp
pop
lds
shrb
ret
lds
data16
jp
jecxz
into
loopne
sti
or
mov
mov
fwait
jne
out
stos
dec
pop
ljmp
mov
adc
out
loope
pop
les
scas
repnz
sub
jbe
icebp
xor
cld
inc
cmp
enter
std
ds
jge
or
out
aas
mov
pop
mov
mov
loop
sbb
iret
xchg
sub
cmp
sbb
lods
mov
popa
aaa
xchg
xor
push
sub
inc
iret
push
mov
insl
lahf
xchg
sub
lret
lods
movsb
test
lds
push
in
loop
and
inc
and
test
inc
mov
fldt
mov
push
pop
out
inc
test
enter
or
sbb
sbb
rol
dec
xchg
mov
stc
test
mov
cmp
shll
testb
adc
int3
into
stos
add
shlb
push
or
cmc
aam
fidivrl
sub
push
lea
jnp
ljmp
mov
imulb
mov
and
icebp
mov
mov
pop
rorl
adc
adc
inc
or
push
mov
rorb
ss
inc
add
hlt
ljmp
xchg
xchg
mov
and
lods
xchg
adc
xor
data16
push
adc
dec
out
jge
and
enter
mov
push
and
xchg
mov
xor
ret
icebp
xor
inc
in
jmp
cmp
rorb
and
adc
push
xchg
dec
push
insl
pop
sti
xacquire
test
pop
mov
cli
pop
mov
mov
dec
sbbl
or
add
jno
pop
cltd
mov
mov
std
subb
xchg
icebp
mov
shl
jmp
lods
lcall
add
jbe
test
sahf
mov
inc
jl
out
jno
aaa
loop
inc
adc
cld
fstpt
jae
adc
popf
mov
out
inc
mov
mov
jno
inc
jns
arpl
fsubrl
lods
in
push
cmp
mov
test
xor
scas
xor
add
pushf
out
adc
rorl
sahf
pop
dec
xlat
out
jnp
pop
clc
std
daa
imul
jg
xor
xlat
movl
cmpsl
fwait
mov
pusha
mov
push
or
subl
leave
or
pop
cmp
jecxz
mov
pop
push
inc
stc
push
sub
stc
std
sbb
rclb
test
ds
idivb
push
in
xor
mov
in
sbb
push
shrl
and
int3
pop
movsb
call
jb
cmp
lds
jmp
daa
call
ja
mov
inc
add
cltd
jmp
mov
std
jb
mov
int
stc
adc
dec
negl
lret
sbb
pop
stc
rclb
lock
mov
inc
addr16
mov
aas
leave
lcall
and
mov
scas
sbb
dec
clc
push
xor
jo
flds
cld
imul
aam
dec
mov
dec
or
pop
fisubrs
pop
scas
ret
sbb
xor
or
mov
pop
push
aaa
lahf
xor
ds
xchg
rorb
lret
or
inc
sbb
clc
push
pop
xchg
adcl
sarl
imul
xor
jns
xor
iret
dec
mov
or
xchg
or
pop
xlat
add
cmp
sbb
jge
int3
mov
and
insb
int
iret
das
dec
popf
xchg
out
pop
sbb
mov
cs
popf
lds
test
or
movsb
or
mov
sbb
mov
arpl
lods
push
shll
ret
ret
ljmp
mov
xchg
mov
jne
mov
adc
repz
inc
dec
repnz
pop
mov
cltd
push
and
subl
daa
aam
clc
cmpsl
fstl
out
jo
shlb
inc
or
xchg
pushf
andps
mov
xchg
push
cmp
jecxz
repz
mov
iret
imul
popa
xchg
inc
mov
gs
stc
cli
cmp
icebp
mov
adc
xchg
adc
jl
pop
push
insl
xchg
cmp
mov
pop
std
call
outsb
add
mov
xchg
out
sbb
icebp
sub
jne
lods
jnp
jno
sub
btr
push
adc
mov
cmp
inc
pop
out
push
jecxz
or
cmp
lds
insb
daa
test
sub
or
adc
xor
mov
jg
mov
and
rcll
or
repnz
mov
inc
jl
dec
aas
mov
inc
out
repnz
mov
bnd
ret
add
cmp
mov
jbe
sbb
into
mov
lea
iret
jbe
and
add
loope
lcall
jecxz
jae
insl
dec
or
mov
imul
add
decl
sub
stos
aam
jmp
push
rol
and
adcb
adc
inc
mov
inc
dec
aad
mov
and
fnsave
xor
sub
add
sar
test
enter
pushf
out
ss
pushf
sbb
adc
or
sub
pop
jle
sub
adc
dec
dec
and
call
jmp
cmpsb
or
jge
push
sub
cwtl
ret
xor
xor
pop
cmp
pop
cmp
xchg
dec
fsubs
loopne
sub
xor
push
sub
and
mov
push
sbb
cmpsb
jae
lock
pop
hlt
jne
fs
adc
dec
loope
jb
pop
adc
ja
and
mov
std
and
sub
cli
mov
lret
inc
dec
mov
or
stc
xchg
movsl
adc
mov
cmc
mov
adc
sbb
and
inc
sbb
mov
and
mov
out
and
sbb
pop
fldenv
pop
dec
or
inc
mov
out
scas
adc
mov
aad
daa
test
sub
jge
dec
shl
outsl
add
xor
mov
mov
popa
xchg
dec
xchg
pop
lret
mov
movsl
repnz
mov
jge
sub
xor
dec
call
stc
movnti
jno
sahf
scas
cmp
dec
push
jmp
sahf
pusha
cmp
xor
dec
ljmp
loope
cltd
or
inc
dec
mov
add
insl
ds
jg
or
aad
xchg
arpl
lds
jp
mov
aaa
mov
xor
cmp
enter
cmp
or
outsl
shrl
call
loope
inc
mov
xor
into
loop
lret
out
ljmp
fldenv
sub
sbb
in
popf
cmp
xor
sahf
mov
sbb
and
outsb
lods
mov
int
dec
adc
pop
ret
outsb
js
xchg
popa
jae
sti
data16
jmp
push
jg
stc
sub
loopne
sti
inc
or
sarl
jnp
jp
inc
rcll
dec
add
mov
fmuls
into
lods
xlat
addr16
jne
rcl
add
out
adc
mov
mov
xor
xchg
and
jecxz
sbb
jl
iret
add
pushf
cwtl
xor
and
nop
xchg
jecxz
push
lahf
movsl
cmp
sarl
push
sbbl
mov
pop
xchg
stos
scas
jae
xchg
cmp
into
aaa
or
xchg
xchg
mov
shlb
cmpb
mov
jmp
mov
jns
xor
in
call
lea
or
rcrb
inc
lret
mov
sar
mov
xor
and
movsb
aaa
std
xor
icebp
stos
std
push
out
sbb
lods
lods
jle
sub
add
cmp
fildl
xchg
push
adc
outsb
cmp
and
rolb
js
push
stc
xchg
inc
repz
sub
add
mov
shrl
lret
inc
pop
loop
scas
ds
pusha
negl
outsb
dec
xor
flds
adc
pop
fcomi
pop
xchg
lods
insl
scas
pop
cmpsb
aas
adc
addr16
xor
icebp
push
jb
mov
imul
add
popa
mov
lods
testb
xchg
pop
adc
inc
add
or
push
push
cli
out
fwait
rorl
insb
push
or
mov
xor
mov
rorb
push
sbb
pop
pop
cmovns
sbb
lahf
aam
add
shll
out
sbb
movsl
nop
decb
or
popa
rcl
sub
gs
inc
ds
pop
call
xor
jnp
mov
fsubrs
cmp
out
rcll
push
and
int
cmp
or
mov
mov
xchg
xchg
mov
or
lock
clc
push
adc
fs
data16
mov
xor
mov
mov
mov
and
clc
push
mov
aaa
jmp
clc
repz
rcrl
aam
add
xor
scas
sub
sbb
lahf
adc
test
inc
inc
lods
dec
shrb
cwtl
jl
cs
scas
mov
mov
pop
and
mov
cltd
mov
mov
repz
icebp
cmp
shll
xor
xchg
sub
shl
add
ds
jp
push
scas
dec
and
mov
jmp
jb
iret
xchg
sbb
inc
cmc
fisttpll
mov
andl
ss
jae
and
jne
hlt
cs
insb
jmp
pop
adc
or
leave
dec
imul
xor
cwtl
dec
ds
cld
mov
fildll
mov
cmp
lret
adc
shlb
fidivrl
out
rorb
cmp
sbb
arpl
cmp
cmp
or
loop
pusha
fcmovnb
in
fs
xor
lahf
xlat
push
jns
or
popf
out
addb
mov
pop
into
sbbb
sub
ja
loopne
ljmp
std
rorl
sbb
xchg
push
loop
insl
inc
fs
jl
xchg
int3
hlt
mov
mov
minps
addr16
sarl
pop
stc
xchg
inc
jnp
mov
xor
jecxz
out
jns
rorb
inc
mov
rcll
notl
or
pop
clc
or
xchg
or
iret
out
int
loope
sbb
or
ret
add
clc
nop
mov
pop
bound
lock
pop
xor
jb
into
mov
adc
xor
mov
test
dec
sbb
cmp
es
cwtl
and
stc
cwtl
fwait
push
mov
cmp
adc
mov
cmp
add
xchg
out
push
jae
jg
add
mov
mov
rclb
addb
cmpsl
fstl
sbb
jl
int
xchg
cmp
lds
clc
xor
out
inc
and
jbe
and
push
jecxz
leave
pop
mov
sti
es
mov
sbb
mov
inc
add
xor
inc
jmp
inc
lods
repz
mov
dec
pop
sub
scas
jne
lcall
ret
sbbb
push
cltd
lret
jg
js
test
add
push
pop
dec
add
adc
pop
sub
das
mov
fs
pop
jecxz
ljmp
or
out
lds
dec
in
adc
or
dec
push
add
xchg
or
or
cmp
mov
xlat
into
call
push
sti
icebp
add
cli
movb
fidivs
inc
rorl
jb
addr16
outsl
out
cmp
jle
test
xor
mov
cmp
int
lret
outsb
aas
dec
pop
data16
add
aas
sbb
out
loop
hlt
cvtdq2ps
sti
outsl
outsl
shl
jecxz
mov
arpl
imul
jo
adc
clc
leave
pop
out
xlat
or
mov
sub
push
inc
int3
cmp
inc
aaa
int
ret
inc
loope
adcl
fisubl
cwtl
ret
inc
cmp
ror
or
test
sub
dec
pop
dec
sub
fidivl
mov
ret
push
fs
pop
sub
or
mov
mov
and
jb
cmp
mov
mov
dec
cmp
and
cld
icebp
js
mul
in
mov
lods
jmp
xor
jmp
addr16
addr16
rorl
aad
loope
push
sahf
mov
ficoms
cmp
or
sbb
cs
or
adc
inc
jl
int3
aam
cmp
icebp
push
arpl
shll
hlt
xor
cmp
enter
cmp
sub
dec
mov
mov
arpl
out
cmpsl
mov
and
add
test
adc
mov
mov
push
scas
cs
fisubrl
pop
pusha
pop
sbb
popf
push
sbbb
xchg
push
inc
mov
adc
jmp
inc
shlb
rcrl
inc
adc
and
outsb
inc
cwtl
dec
pop
add
jns
adc
pop
cmpsb
mul
xor
cwtl
les
hlt
mov
mov
int3
push
cmp
push
jb,pt
lahf
dec
aad
in
inc
adc
sahf
in
cli
add
sub
dec
pop
outsl
into
popf
and
xchg
iret
stos
outsl
mov
mov
ds
or
dec
mov
cld
inc
dec
popa
test
lcall
jb
test
int3
mov
or
lret
adc
push
dec
shl
cbtw
dec
jnp
mov
jmp
icebp
jne
jns
aaa
mov
cmpsb
push
dec
setne
xchg
dec
sbb
cmc
adc
push
out
lcall
and
xlat
inc
push
inc
sub
jnp
adc
lcall
mov
mov
pop
xchg
or
adcl
pop
mov
call
jmp
lret
jno
xorb
dec
cli
cmpsl
jp
addl
and
push
mov
jne
mov
movsl
mov
int
decl
iret
xchg
pop
jnp
loope
jg
into
das
movsb
add
dec
pop
jg
adc
push
inc
scas
mov
sti
xor
sub
lret
add
cmp
mov
cltd
mov
ret
aam
jo
gs
sub
sbb
inc
sbbb
push
or
stos
mov
lea
xor
movsb
out
jmp
sbb
or
shll
call
arpl
outsl
ret
pop
sbb
daa
adcl
ret
leave
fwait
bound
or
pop
daa
and
xchg
fistpl
mov
pusha
jne
aam
sub
xchg
stos
rcll
fdiv
cmp
popf
and
pop
loopne
inc
inc
inc
lahf
sub
xlat
into
movsl
mov
out
jge
mov
xor
cs
adc
cld
pusha
and
add
push
adc
push
mov
xchg
sub
arpl
sub
lods
adc
mov
xchg
mov
jl
fcomps
mov
insb
mov
adc
sti
sub
push
stos
nop
divl
idivb
and
push
dec
fildll
jp
mov
addr16
fwait
loope
xor
mov
xchg
or
adc
out
std
add
pop
and
clc
sub
lcall
ds
mov
loopne
sub
push
jbe
pop
sub
jl
fucomi
mov
ja
inc
add
pop
fidivl
dec
or
fadds
fsincos
sbb
sbb
lods
shll
das
mov
rorb
cltd
loopne
push
xlat
jns
ss
sub
insb
repnz
pop
jb
mov
pop
add
dec
je
dec
pop
inc
inc
lods
dec
sbb
cmp
mov
jg
inc
dec
cs
das
loopne
xor
jae
cmpsb
loope
es
jmp
cltd
fsubr
cli
ret
push
pop
and
cmpb
arpl
mov
push
mov
and
sbb
push
inc
pop
cmp
push
and
sbb
fcoml
fs
andb
testb
or
iret
imul
movsb
mov
std
mov
pushf
xchg
mov
sub
lret
sub
xor
loopne
mul
pop
fwait
and
ret
mov
and
adc
ss
lret
mov
inc
push
fcomps
enter
nop
cmp
mov
pop
push
sti
add
jae
and
and
frstor
xchg
jo
mov
lret
push
movsl
mov
xchg
mov
addr16
packssdw
js
fidivl
or
mov
lret
leave
xor
push
cmp
xchg
jge
pusha
shrb
mov
xlat
jb
sub
xchg
dec
sbb
sbb
aam
push
fbstp
xchg
cs
daa
outsb
cmpsl
and
mov
mov
popw
fmul
push
stc
decb
js
fwait
dec
cmp
gs
inc
ljmp
xchg
notl
repnz
and
filds
dec
cld
arpl
xchg
mov
push
stos
dec
and
inc
cmp
xor
adc
imul
sub
dec
adc
je
pop
cmpl
iret
cmovne
mov
stos
jmp
insl
leave
dec
out
and
and
daa
jg
in
or
cs
loope
iret
js
insl
inc
scas
mov
mov
imul
inc
push
lods
lcall
imul
xor
push
pop
push
hlt
add
mov
inc
jo
movsb
add
mov
test
pcmpeqd
xchg
mov
out
xchg
dec
test
mov
add
fistl
jp
lods
sub
out
or
dec
cmp
scas
cli
cmpsl
cli
lods
mov
sub
push
popf
cld
sbb
mov
xor
lret
sub
ss
mov
test
pop
push
mov
rcrb
out
xlat
jle
add
xchg
jecxz
imul
sbb
fcompl
mov
aas
jo
jo
sbb
lcall
rclb
sub
adc
mov
or
inc
les
dec
jge
mov
sub
inc
add
mov
sub
jmp
xchg
outsl
das
scas
mov
push
add
pop
inc
lea
aad
enter
lods
fs
dec
cli
in
arpl
jb
pop
fcomip
inc
sub
mov
out
lret
test
xchg
sbb
push
ja
push
add
in
xor
mov
xor
cmc
pusha
data16
jbe
mov
addb
inc
push
mov
lock
test
dec
imul
and
loope
dec
pop
or
jge
xchg
pop
rorl
pop
push
rcr
cld
outsl
rcrb
test
outsb
cmp
push
cmp
mov
daa
pop
xor
and
rorl
jge
xchg
pusha
jbe
inc
mov
push
scas
jnp
mov
pop
popa
jae
gs
int3
sti
lock
inc
pushf
sub
loop
mov
inc
sahf
rcll
push
lods
repnz
mov
cmp
dec
dec
push
pop
ret
jo
cli
cwtl
int3
adc
aaa
ret
into
jno
fstpt
ljmp
stos
or
dec
aas
xchg
xor
cs
xor
cmp
popa
int
sti
std
xchg
sub
movsl
inc
fildl
popa
in
mov
push
and
int3
out
push
adc
adc
popf
push
push
and
mov
stos
addr16
out
cmp
lods
pusha
mov
jecxz
pushf
push
or
dec
mov
sub
xor
pop
push
push
clc
mov
orb
cmp
movsb
xchg
movsl
sti
shl
scas
pop
cli
sbb
gs
popa
xchg
loopne
push
inc
sub
ja
je
jg
aaa
imul
dec
push
shrb
fs
pop
xchg
push
cmp
outsb
rorb
insb
jle
in
fildll
pusha
or
pop
sbb
stc
pop
xor
push
cmp
mov
aad
mov
push
or
mov
lock
add
ja
cmp
adc
and
sbb
add
push
lock
xor
dec
out
inc
je
out
out
inc
jecxz
push
rclb
adc
sbb
insb
lret
test
push
xchg
mov
push
fadds
test
je
sahf
adc
add
jae
mov
rolb
int
mov
sub
lods
outsl
adc
repz
incl
out
pop
and
cmpsb
mov
leave
cmp
mov
aaa
and
and
lret
mov
pop
sub
lret
jb
loopne
cmpb
sbb
jecxz
and
loopne
pushw
pop
dec
fistl
leave
dec
scas
dec
or
dec
mov
dec
sar
cmp
daa
in
pop
dec
aaa
int3
sbb
jno
adc
mov
aaa
lret
lret
pushf
scas
test
addr16
adc
xchg
ficomps
push
add
popf
sub
sbb
sti
push
rcrb
sbb
jecxz
fistps
add
xchg
sub
faddp
inc
mov
fidivs
fs
sbb
repz
pop
out
inc
mov
pop
cmp
push
pop
jnp
clc
mov
ret
pop
insl
addl
and
push
adc
into
in
test
xchg
cmp
mov
lds
mov
push
and
adc
sub
pushl
aam
cmp
lea
add
xchg
adc
fists
xor
add
jmp
cmpsb
jo
adc
inc
cmp
xor
mov
out
stos
pop
jmp
xor
add
out
cwtl
loopne
mov
push
stos
xchg
push
cmpl
adc
cli
shll
jecxz
mov
pop
pop
dec
xor
dec
xchg
push
sub
out
fsubs
sub
mov
cmpb
jl
test
leave
dec
mov
lods
stos
icebp
jle
xor
test
mov
rcr
mov
mov
mov
adcl
sbb
bound
lods
cmp
cs
mov
test
xbegin
jne
mov
mov
pushf
ds
imul
test
inc
mov
and
sub
loop
xor
cli
cmp
push
pop
xlat
or
nop
hlt
sub
xorb
jecxz
mov
test
jno
in
ja
ss
xor
pop
jno
mov
mov
mov
push
xchg
les
push
dec
fs
mov
cs
stos
cmp
cmp
inc
imul
mov
adc
or
aam
andb
jae
mov
scas
rcll
ficoml
negl
dec
out
dec
mov
pop
loope
xchg
stos
cmp
mov
stos
push
jmp
mov
jo
stc
adc
cmpsb
jge
jb
gs
ss
test
testb
xchg
sbb
add
fs
addl
clc
add
bound
jp
loope
fisttpll
push
in
jmp
lahf
test
jmp
inc
xchg
cmp
aaa
aam
xchg
leave
fwait
push
cmc
dec
push
orl
ds
dec
add
out
mov
mov
insl
lock
ds
stos
or
out
pusha
aas
in
movsl
sbb
js
lock
push
xchg
js
lcall
rcrb
mov
jle
sbb
dec
ss
add
push
jmp
xlat
aam
cmovg
xchg
insl
into
inc
cmp
je
xchg
aaa
mov
jno
fsubl
insl
xor
xor
lds
dec
and
add
and
adc
pop
push
scas
or
adc
movsl
inc
sti
xchg
or
mov
ljmp
cmc
push
push
xchg
adc
inc
hlt
fptan
ret
jmp
ja
scas
and
in
sbbl
push
test
js
push
loop
xor
pop
sbb
lds
xchg
ret
leave
insb
in
je
jmp
insl
cli
pop
call
pop
cmpl
pop
mov
imul
mov
or
dec
push
mov
mov
lds
xchg
pop
out
popa
mov
ljmp
aaa
nopl
fcoms
fmull
outsb
xchg
pop
mov
mov
and
mov
dec
push
pop
lock
fwait
lds
in
clc
lcall
inc
mov
shrb
aam
add
xor
dec
orl
adc
mov
mov
sbb
xor
mov
dec
in
aad
push
pusha
fs
addr16
fsubrl
icebp
shll
test
or
bound
and
jo
push
add
push
fisubs
mov
pop
ja
cmpsl
dec
push
sub
cmpsb
jecxz
pop
sti
pushf
or
mov
pop
fmuls
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
jmp
dec
mov
imul
out
jmp
jnp
pushf
jnp
in
mov
pop
idivb
pop
scas
bound
add
xchg
jns
loope
sbb
push
sahf
xchg
or
mov
add
int
push
les
and
loopne
adc
call
cld
mov
std
adc
lahf
sub
mov
outsl
pop
andb
std
xor
dec
mov
out
rorl
sbb
adcb
push
fwait
in
pop
pop
orl
xchg
xchg
pusha
fmull
and
mov
lds
outsl
leave
push
adc
fs
xchg
mov
xor
cmp
arpl
arpl
jnp
inc
inc
cmpsb
lds
pusha
fnsave
out
mov
psllq
out
push
arpl
or
nop
scas
pop
xchg
lcall
lea
mov
loop
cwtl
jno
ret
jp
stos
enter
ret
sub
loope
add
mov
and
les
movsb
sbb
jno
insb
sub
in
pop
sub
faddp
xchg
mov
mov
jns
rcrb
mov
in
push
movsb
lahf
clc
pusha
jp
pop
dec
mov
imul
dec
repz
and
scas
xor
jns
jge
dec
lret
inc
fiaddl
cmp
and
push
and
jle
mov
sbb
jne
fdivrp
test
adc
inc
sbb
call
fisubl
jg
sbb
mov
stos
ja
push
pop
jnp
in
scas
test
jo
pushf
xlat
outsl
mov
dec
or
or
or
or
ljmp
jmp
ds
jo
addr16
hlt
jno
jno
fiaddl
shlb
out
test
test
mov
outsl
int3
xchg
je
cwtl
test
out
dec
cltd
inc
jmp
fimuls
mov
insl
cmp
movsl
inc
arpl
movsb
int3
ss
push
in
sahf
rclb
lods
stos
cmp
mov
daa
sub
fstpt
clc
dec
test
aam
add
scas
cli
test
insb
inc
pop
inc
mov
cwtl
stos
insb
cmpsb
daa
cli
dec
stos
jo
cmp
lods
out
int3
popl
mov
cmp
leave
lods
fs
push
fcmove
xchg
xchg
mov
or
cmp
lcall
mov
scas
imul
shrl
aas
cmp
incb
imul
sbb
nop
sbb
xchg
jo
inc
loopne
loopne
ljmp
jbe
mov
mov
dec
adc
jle
mov
ficoml
call
adc
nop
lods
mov
xchg
bound
jb
jbe
cmp
mov
and
xor
adc
push
ljmp
and
or
cmp
fmull
push
sti
mov
je
mov
in
loop
clc
push
imul
jne
mov
pop
xor
inc
xlat
cmp
jbe
ja
std
loopne
add
fs
jmp
xor
xor
cltd
xchg
cmp
ds
loopne
dec
inc
mov
into
rorb
mov
daa
jmp
setge
pop
cli
int3
mov
mov
scas
dec
ffree
and
loopne
in
cmp
mov
adc
xorb
leave
inc
es
lock
cli
dec
mov
lahf
bound
repz
jecxz
test
sbb
mov
or
std
sub
adc
scas
into
xlat
mov
mov
push
push
pop
push
adc
popa
add
push
repnz
int3
push
and
cmp
clc
dec
mov
xor
adc
fnstenv
and
test
in
xchg
mov
xchg
add
rcrl
je
pop
and
ret
test
insl
add
imul
or
sub
mov
test
inc
shll
sub
xchg
push
sti
clc
das
push
pop
fs
sub
pop
sbb
clc
scas
pusha
jne
jg
cmp
cwtl
push
xchg
jb
sbb
lcall
js
xor
pop
rcrl
add
mov
or
sbb
xchg
stc
std
jl
js
fistl
dec
pop
mov
or
out
adc
cmc
repnz
and
xor
or
stos
mov
outsl
cmpsb
stos
push
int3
adc
das
leave
daa
ss
cltd
jp
add
std
insb
pop
fwait
popa
lret
jo
fstpl
andb
nop
cmp
ja
int3
xchg
stos
add
pop
push
icebp
loope
loopne
sub
sahf
sbbl
pop
pusha
in
mov
inc
call
and
push
mov
mov
pop
insb
cmp
orl
pop
xchg
sbb
xor
cmp
loope
pop
lcall
sbb
dec
hlt
ret
aam
hlt
repnz
inc
jb
jnp
mov
jb
mov
mov
sar
sub
mov
std
mov
loope
arpl
and
lock
and
cmc
test
adc
sbb
aaa
gs
fistps
cltd
stc
ret
pusha
add
adcb
dec
mov
push
outsl
shr
or
xor
popf
addr16
mov
aas
into
icebp
cld
mov
and
mov
sub
dec
aad
adc
pop
push
test
fbld
jmp
das
test
hlt
or
cmp
mov
aam
aas
test
dec
mov
xor
jns
call
andb
jg
repnz
loope
movsb
push
mov
mov
mov
lods
scas
notb
pop
imulb
push
mov
cmp
dec
add
inc
out
aad
xor
pop
sbb
dec
add
lcall
outsb
sub
sahf
or
in
test
mov
push
push
call
fwait
es
mov
ljmp
jle
or
or
xchg
inc
push
add
ficoms
mov
adc
mov
fnstenv
or
dec
subl
adc
jae
pop
lret
push
es
xor
cmpsb
cli
rolb
test
out
dec
dec
xchg
test
test
jno
and
mov
add
dec
dec
shll
mov
sbb
in
pop
cltd
xor
addr16
mov
xchg
and
arpl
pop
pop
adc
adc
adc
mov
inc
pop
sbb
or
fdivrs
das
push
imul
mov
aaa
cmp
movsl
call
dec
inc
stc
fisubs
or
push
mov
pop
inc
mov
mov
cmpsb
xchg
xchg
jne
dec
in
mov
xor
mov
pop
pusha
inc
sub
push
xor
push
loopne
loop
scas
lahf
and
inc
repnz
fxam
cli
imul
jp
aas
outsl
idiv
mov
mov
xchg
out
dec
or
or
push
jl
repnz
cmp
pop
fisubs
push
nop
xor
das
shr
pop
push
cli
xchg
and
icebp
and
cmpsl
dec
cmp
lcall
orb
test
jno
xchg
ss
adc
movsl
xchg
insb
insl
dec
pusha
xchg
fadd
aaa
push
enter
xlat
int3
aam
out
pop
or
adc
inc
inc
lods
dec
push
pop
fnsave
addr16
jmp
dec
pop
call
sarb
shl
hlt
lcall
push
orl
and
les
mov
add
adc
add
out
das
mov
andl
push
push
mov
add
xor
add
adc
and
add
rcr
pop
mov
inc
and
and
pop
sbb
xchg
ljmp
mov
mov
iret
cmpsb
jmp
push
adc
xchg
imul
xchg
xor
ds
in
sbb
das
inc
push
insb
add
ds
sar
jge
xchg
jle
loopne
inc
movsl
pop
pushl
fdivl
inc
popa
popf
sbb
lods
imul
lds
adc
jo
inc
mov
and
sbb
fisttps
or
cmp
pop
jg
jg
mov
sahf
inc
xor
pop
and
lock
data16
adc
cli
jb
subb
add
add
dec
in
pop
loopne
mov
mov
push
add
out
out
fcomps
mov
jl
sahf
xchg
mov
lcall
sbb
mov
imul
push
xor
pop
adc
sub
inc
add
les
pusha
cwtl
pop
xchg
cld
and
jmp
sbb
fdiv
pop
fstpt
mov
jg
fwait
pop
push
jg
mov
inc
sub
addr16
lea
or
in
push
jg
push
lret
mov
mov
hlt
cmp
adc
pop
or
mov
jl
fwait
jo
sub
jle
ret
fwait
pop
addl
xchg
mov
rcll
xor
inc
rcl
pushf
cmp
dec
xchg
cmpsl
outsl
xchg
cmpsl
xor
jge
rorb
sbb
pop
je
aas
pop
ljmp
imul
mov
push
adc
sub
movsb
mov
leave
mov
cs
and
inc
pop
bnd
lret
bound
out
pop
inc
scas
inc
ljmp
cmp
lods
jnp
jb
hlt
xchg
fiadds
les
pop
xchg
jb
in
push
ja
mov
pop
dec
xchg
xor
je
loop
pop
and
xchg
mov
into
lcall
rcll
cmp
push
or
xchg
xchg
mov
out
mov
data16
shlb
xchg
xchg
dec
jbe
mov
mov
add
movsb
xlat
inc
mov
push
and
pop
xchg
repz
insl
mov
xor
pop
sub
or
lret
add
sub
lret
je
lret
mov
xchg
repz
fwait
push
cmp
popl
gs
pop
mov
bnd
daa
scas
loop
xchg
arpl
pop
cwtl
insl
leave
nop
fwait
add
xor
dec
fs
and
outsl
icebp
ror
ljmp
and
test
dec
sub
cmpsb
cmp
push
adc
cmp
jl,pn
and
je
push
stos
xor
cmc
jge
das
aam
adc
aas
sbb
adc
lret
mov
cmp
sub
stc
fdivl
push
mov
loope
lahf
sub
add
xchg
xchg
call
mov
cmp
pop
addr16
push
xchg
inc
test
lahf
mov
notb
and
frstor
xchg
test
pop
ds
mov
rcrl
scas
pop
iret
and
mov
cmp
pop
scas
or
daa
xchg
aas
mov
out
push
call
ljmp
push
dec
mov
cltd
sbb
ds
jp
cli
test
stos
xor
je
push
jecxz
popa
push
scas
repnz
mov
cld
push
mov
mov
cli
lret
push
lds
les
cmp
jg
xchg
push
bound
mov
movb
mov
ja
fwait
cld
dec
cmpsb
adc
cltd
ret
jecxz
test
xchg
push
jle
pop
and
js
call
pop
dec
inc
dec
negl
pop
pop
fwait
addr16
jne
push
neg
mov
or
hlt
jns
xchg
sub
add
mov
xchg
pop
dec
js
mov
test
add
leave
mov
fldcw
sbb
mov
inc
fsubs
push
arpl
rcll
jb
enter
aaa
iret
pop
mov
add
or
inc
ret
loopne
xor
dec
inc
das
pop
ja
adc
test
jle
lcall
mov
lret
mov
dec
aas
sbb
adc
and
or
pop
dec
into
inc
xchg
and
push
push
add
push
std
ja
sbb
insl
pop
stos
and
sub
jo
out
cmp
pop
push
cmp
cli
pop
xor
xor
popa
loop
sbbl
fimull
dec
mov
mov
sbb
or
adc
loop
and
xchg
add
sbb
xchg
mov
leave
jmp
mov
pop
mov
cmpl
in
mov
test
or
out
cwtl
mov
sub
dec
js
mov
mov
and
xlat
popa
xchg
push
jl
sbb
push
and
add
decl
clc
pop
mov
jecxz
in
stc
mov
out
jle
mov
icebp
xlat
addr16
mov
xor
inc
out
mov
outsl
and
ds
mov
repz
fsubrp
mov
dec
fldt
sbb
adc
enter
jae
imul
pop
jae
gs
cmp
mov
add
clc
mov
and
mov
lods
pop
mov
imull
jg
bound
add
nop
sub
ljmp
int3
cli
mov
vunpcklps
add
push
sub
and
add
je
or
dec
outsl
lods
call
mov
cmp
sbb
xor
jecxz
aam
sub
sub
inc
in
mov
pop
cli
and
mov
xor
leave
mov
leave
dec
ds
xchg
push
clc
mov
sub
mov
subl
es
cmp
dec
call
mov
movsb
adcl
jb
fwait
imul
je
cli
and
hlt
mov
aaa
imul
sbb
xor
mov
xor
rolb
mov
mov
and
xchg
insb
sbbb
add
stos
enter
jg
mov
push
lahf
les
sarb
aam
js
out
push
jmp
stos
cmp
pop
inc
jo
xchg
xchg
jb
or
mov
aaa
mov
sub
mov
addr16
decl
push
mov
sub
in
lahf
pop
xor
aad
jg
rcr
jnp
sbb
jbe
xchg
sub
dec
lds
or
sbbb
jno
xchg
sbb
call
xchg
push
std
imul
jecxz
movsb
iret
add
push
dec
bound
mov
jge
pop
xor
fsubs
jge
push
pop
lds
adc
xor
movsl
pop
and
ljmp
imul
xchg
popa
popf
flds
xchg
add
cmpl
nop
insb
mov
jecxz
xchg
jmp
in
lock
jge
inc
or
dec
ss
inc
sbb
push
pop
and
jmp
outsl
add
hlt
icebp
mov
and
sahf
leave
jo
mov
xchg
dec
test
or
push
mov
ds
aas
lods
rcrl
push
cmp
shlb
xor
mov
mov
inc
adcb
inc
and
jne
push
rcr
xlat
xchg
xchg
xor
testb
xor
xchg
mov
inc
mov
push
shrb
jns
sbb
imul
jae
mov
cmp
inc
shrb
cmc
and
mov
lock
fisttpll
aas
pusha
mull
fnstcw
add
push
sbb
pop
cmc
cmp
push
sub
pop
cmp
sahf
cwtl
fwait
jmp
push
inc
pop
mov
ficompl
mov
jge
and
adc
movhlps
sub
jl
ficoml
dec
movsb
cmp
cmpsl
mov
insb
and
xor
adc
int
sub
push
inc
loopne
lahf
push
adc
arpl
mov
repz
mov
add
mov
push
insl
ds
mov
or
js
out
jb
mov
clc
adc
sbb
pop
mov
pop
jno
xchg
xchg
mov
mov
xor
push
sbb
ret
xchg
inc
xchg
inc
shll
cltd
out
icebp
out
cmp
lea
fsubrs
popa
mov
dec
incl
mov
mov
mov
and
daa
or
shlb
je
adc
add
clc
jnp
cmp
mov
xor
sub
jnp
insb
jne
fst
jb
mov
loope
inc
adc
out
lods
in
mov
jbe
inc
sbb
jno
repz
in
shll
addr16
roll
test
out
lahf
aad
xchg
cmpsl
movsl
jle
sub
stos
mov
aad
xor
mov
iret
and
cld
rcrl
sbb
popf
iret
push
in
mov
leave
dec
or
cmpsl
jbe
out
inc
mov
push
xchg
push
and
movsb
insl
arpl
dec
or
call
xchg
mov
pop
xor
sub
push
cmp
loop
push
lea
popf
rol
mov
ret
jp
fiadds
add
add
xor
and
pop
jl
in
jbe
mov
in
sbb
stos
sbbl
loope
shlb
test
pop
jbe,pn
adc
adc
xchg
lock
xchg
test
lret
cmp
sbb
cmp
stos
loopne
cli
adc
sbb
cmp
pop
insl
xor
lds
jo
xlat
mov
jl
repz
and
pop
movl
mulb
popf
jae
mov
fadd
cmpsl
pop
aad
stc
jecxz
lds
push
add
cli
mov
lods
mov
add
push
aad
sub
test
push
xor
pmullw
sbb
pop
int
push
xor
sub
cltd
mov
aam
mov
cli
nop
cmc
add
fs
jl
pop
daa
add
cmpsb
xchg
stos
test
xor
xor
mov
mov
jae
xor
daa
push
dec
arpl
repz
les
xchg
push
shl
into
inc
scas
hlt
dec
jo
add
fidivrl
scas
lods
mov
popf
cmc
pop
xor
popf
outsl
mov
xchg
out
jle
out
dec
push
cli
fbstp
mov
jl
in
in
mov
clc
aas
mov
and
xchg
in
sub
mov
loope
and
das
jle
or
jp
and
in
test
push
test
faddl
push
icebp
loopne
push
insb
insb
stos
into
mov
sbb
fcomip
adc
jo
jns
dec
adc
push
mov
pop
dec
lret
je
push
mov
shlb
mov
mov
jo
sub
stos
pushf
pop
mov
jg
mov
xchg
push
push
fnstsw
mov
cwtl
in
iret
jge
ljmp
xchg
mov
ja
xchg
lods
mov
push
adc
nop
xchg
movsb
and
jl
arpl
push
mov
inc
ret
xchg
add
not
loope
lea
aas
jle
pusha
jecxz
sbb
roll
push
mov
adc
popa
xchg
adc
pushl
lret
mov
js
fs
cld
or
and
xor
mov
push
repz
or
add
in
or
test
iret
mov
lahf
mov
sahf
bound
push
cld
xchg
hlt
roll
xor
cmc
push
mov
subb
mov
mov
imul
aas
cli
push
outsl
xchg
insl
push
inc
imul
cmc
mov
std
lret
mov
scas
and
aas
gs
mov
sbb
insb
testl
mov
aas
jge
inc
xchg
sub
lahf
enter
imul
or
inc
hlt
sub
and
sbb
lret
pop
pushf
imul
in
jb,pn
or
stos
cwtl
jmp
ds
mov
lods
inc
add
fisubs
cs
jbe
sti
mov
repnz
fldenv
jns
dec
jl
jbe
sbb
jmp
lods
into
ret
pusha
xchg
lret
jns
mov
test
lret
arpl
xchg
ss
lret
add
dec
ret
aas
cmp
mov
adc
movsb
adc
mov
dec
inc
add
jl
or
test
jmp
hlt
pop
inc
dec
push
dec
push
or
out
in
ss
fsubrs
add
out
cmp
sub
jns
and
dec
xor
icebp
mov
inc
inc
pop
jge
das
sti
mov
jp
cmp
jmp
xchg
loopne
or
insb
sbb
or
stos
cmp
sahf
cmp
cmpsb
mov
faddl
stc
addb
int
cmp
jns
mov
aam
fbstp
les
fildl
cs
inc
nop
imul
jg
hlt
adc
sub
pop
cli
mov
jne
jmp
sbb
arpl
fbstp
int
in
aad
mov
sahf
pop
mov
mov
dec
jno
sbb
inc
imul
out
sub
push
xchg
adc
jl
das
sub
or
xor
sahf
dec
dec
outsb
mov
roll
cmp
sbb
jo
and
lret
push
addr16
scas
jno
mov
xchg
mov
sub
add
popa
or
push
adc
xchg
out
cltd
dec
adc
xchg
addr16
popf
stc
iret
sub
dec
call
sub
scas
leave
stc
jl
test
sti
aad
mov
popa
mov
pusha
lret
and
insl
call
and
xchg
xchg
out
jns
mov
cmp
out
jnp
leave
test
addr16
cli
mov
call
sahf
test
mov
orl
pop
dec
mov
inc
imul
jnp
push
cmpb
je
and
sub
imul
jmp
lods
jno
es
mov
jmp
mov
test
jo
test
sbbb
in
shl
adc
nop
push
rcrb
mov
sbb
jb
mov
cmpl
test
stos
movl
add
repnz
hlt
mov
cmpsl
rcrb
adc
dec
dec
nop
push
in
cli
out
in
mov
outsb
dec
loope
insb
mov
jl
dec
pop
pop
sbbb
cwtl
jmp
and
das
mov
cmp
adc
out
popf
cmp
pop
jne
xor
or
jns
loop
jae
jmp
xchg
nop
or
push
jo
cld
xchg
push
mov
jo
inc
inc
mov
outsb
push
lret
cld
insl
lcall
add
rolb
pushf
sbb
lret
ds
inc
xor
cs
ret
dec
jle
pop
clc
jmp
test
std
push
sub
cmp
adc
xchg
xlat
xor
shr
inc
mov
arpl
xor
push
shll
lcall
das
mov
adc
xor
xor
lahf
movsl
dec
xchg
and
sub
or
pop
sbb
adc
stos
mov
mov
push
nop
or
adc
lahf
mov
add
movsl
dec
jmp
push
adc
or
ss
mov
add
cmpsb
loope
and
lods
pusha
push
pop
push
adcb
jns
popa
push
inc
xor
pusha
push
shr
xor
shrb
sub
mov
sti
push
push
push
cld
cmp
push
xchg
xchg
dec
insl
icebp
and
mov
pop
aaa
into
cwtl
pop
bound
imul
mov
mov
mov
data16
movsl
iret
aas
in
mov
lret
jae
mov
popa
push
ds
push
bound
test
out
mov
adc
jnp
addl
rcl
inc
xor
inc
dec
jmp
pop
adcl
repnz
mov
shl
test
add
outsl
xor
shlb
push
xor
outsl
mov
cmpsl
lcall
dec
sub
cmpsb
push
xchg
adc
pusha
add
jno
test
push
push
insl
fwait
lahf
dec
loop
lods
aaa
iret
bound
in
mov
and
cs
cmc
pop
pop
lods
pusha
mov
sub
push
jno
adc
mov
inc
mov
fildll
lods
cld
cmpsb
jae
sbb
daa
cltd
cmp
lret
cmp
mov
xchg
mov
adc
loope
jnp
dec
jl
mov
jns
mov
jns
dec
jmp
xor
mov
jo
sti
or
push
dec
mov
push
mov
jb
in
ja
mov
pop
jb
mov
dec
adc
popa
mov
inc
divb
dec
mov
xchg
stos
mov
outsb
mov
lock
push
dec
mov
nop
sub
cwtl
dec
xchg
sbb
test
mov
in
clc
faddl
push
mov
or
je
jne
mov
pop
jg
scas
popf
pop
addl
dec
mov
insl
push
int
arpl
fnstcw
in
out
sbb
lcall
xor
pop
push
insb
test
or
cmp
scas
inc
cmc
push
call
lods
es
jle
loop
lea
jg
in
add
adc
cmpsb
test
dec
pusha
and
scas
std
xchg
cwtl
push
add
mov
push
push
push
clc
loop
fwait
imul
out
rorb
lds
mov
mov
and
cld
jne
aad
xchg
pop
and
mov
jb
mov
push
jg
rcll
cmp
mov
insl
js
inc
add
push
and
fimull
outsl
fsubp
scas
les
inc
jp
cli
mov
adc
and
sbb
shrb
pop
xor
jl
pop
push
pop
push
cltd
jmp
cmp
xchg
xor
movsl
push
xor
pop
xor
jl
pop
bound
iret
adc
push
inc
js
fbstp
fs
xor
call
inc
add
mov
push
xchg
scas
jg
shl
and
add
fists
loope
loop
inc
mov
scas
and
cmpl
sbb
sti
jbe
adc
push
dec
out
dec
fwait
xor
js
jns
pop
fdivrl
gs
jno
inc
dec
pop
orl
mov
xlat
or
imul
xchg
and
sbb
xor
fbstp
push
mov
imul
add
iret
insb
movsb
in
jge
in
mov
dec
xchg
inc
movsl
dec
xchg
and
jp
pop
mov
mov
cs
in
out
outsb
sbb
clc
lods
mov
pop
or
iret
int3
cmp
mov
and
sbb
clc
xchg
movsl
orb
imul
inc
lea
add
dec
daa
lahf
fldt
rorl
sub
outsb
in
xor
pop
and
add
into
jno
jl
inc
jp
sub
sbb
cmpsb
and
or
dec
leave
mull
push
aas
mov
stc
shll
mov
ror
jns
outsb
xchg
hlt
adc
rcll
lds
pop
jmp
pop
push
jp
add
mov
mov
aad
push
fs
icebp
or
jo
lock
mov
and
xchg
sub
pop
in
push
cs
nop
xchg
dec
sub
bts
or
push
imul
inc
int
jmp
mov
push
jae
xorb
lret
and
das
lds
lods
test
sub
inc
lret
stc
push
inc
sub
pop
sbb
inc
pusha
jl
movsb
popf
imul
push
xor
gs
and
subl
mov
mov
pop
rcl
es
inc
fs
cmc
sbb
adc
lret
xchg
push
sbb
rclb
cwtl
push
jp
das
mov
popf
push
es
mov
stc
dec
daa
and
jno
outsb
loope
jns
xchg
and
push
sbb
xchg
push
je
insb
mov
rorb
and
fs
fldl
mov
cmpsl
push
fistpl
sbb
insb
xor
daa
lret
sub
out
sbb
xorl
scas
loope
aas
xor
xchg
fstpl
inc
push
dec
and
lret
cmp
mov
dec
sub
aad
mov
or
sbb
imul
inc
inc
fneni(8087
sbb
fsubl
cmp
pop
xchg
push
jb
mov
nop
mov
push
sub
mov
pop
addl
or
pop
inc
and
out
mov
and
ret
mov
sbb
jecxz
inc
pop
das
push
cmpsl
jae
xlat
rcrl
clc
xchg
lcall
cmpsl
or
fidivs
push
push
dec
mov
lea
inc
lret
pushf
clc
mov
dec
pop
push
sti
daa
mov
mov
aas
mov
es
test
arpl
jg,pt
bound
xor
adc
cmp
pop
add
lods
out
or
mov
mov
andl
mov
ficomps
jecxz
popa
pop
mov
mov
mov
fwait
mov
xchg
adc
dec
rolb
mov
adc
mov
lcall
popf
fwait
notb
mov
rorl
sbb
leave
nop
adc
sbb
push
hlt
mov
repz
arpl
fcoms
sbb
stc
cli
fucomi
jbe
loopne
call
enter
daa
jle
pop
jbe
into
cli
jne
push
pop
dec
mov
js
and
shrl
insb
or
adc
xchg
ljmp
jge
cli
lret
cltd
mov
mov
rorb
in
dec
out
cs
xchg
fwait
mov
jbe
mov
mov
jbe
pop
andl
jle
adc
pop
cmc
ds
arpl
push
sti
push
push
and
push
fwait
xor
mov
mov
inc
imul
xor
sbb
scas
push
push
icebp
cli
sub
jb
and
gs
rolb
and
movsb
pop
mov
insb
and
and
lock
movsl
xor
push
mov
push
into
fs
and
xchg
pop
stc
movb
out
and
aam
sub
stos
loopne
loope
inc
jnp
mov
cld
adc
jno
sar
pop
pop
rol
jecxz
fsubrp
push
sub
sti
std
inc
jbe
out
push
jmp
and
scas
adc
ret
loopne
gs
add
aad
sbb
add
mov
xchg
lcall
scas
mov
sarb
stos
ffreep
sbb
jp
rcrb
mov
sar
push
cltd
dec
rcll
je
iret
icebp
lock
adc
xor
out
pop
push
or
pop
sub
adc
test
in
cmp
lret
or
sar
push
or
cmp
dec
sub
push
pop
mov
in
xchg
jg
in
test
jo
cmc
add
inc
adc
hlt
pop
cltd
jecxz
in
cmp
jl
xchg
sub
and
icebp
movsl
sbb
xorl
pop
loope
dec
ret
xchg
enter
jl
mov
outsb
cmpb
imul
popf
xchg
sbb
jg
jmp
out
scas
xor
xchg
adc
pop
jnp
mov
ljmp
or
xor
repz
fdivrl
push
dec
test
dec
xchg
or
test
mov
cltd
in
jge
xchg
inc
testb
and
cmc
nop
lods
lret
repz
push
adc
xor
sbb
dec
arpl
inc
pop
enter
mov
pop
dec
lods
test
mov
mov
loope
add
clc
sti
ja
lock
push
or
imul
cmp
lods
mov
test
ret
aas
sarl
mov
cmp
lods
pop
xchg
jno
or
pop
push
mov
sub
popf
jp
push
or
xor
in
xchg
jecxz
mov
mov
and
mov
and
push
out
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
addl
mov
sub
movl
push
push
push
movl
cmp
movl
je
orl
xor
movl
jmp
mov
cmp
movl
jne
neg
mov
andl
push
sbbl
push
adcl
call
test
movl
je
push
andl
call
movl
mov
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
movl
lea
mov
mov
mov
sub
sub
lea
mov
subl
mov
mov
sbb
mov
movl
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
pushl
call
jmp
mov
andl
xor
mov
add
mov
movl
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
mov
addl
xor
adcl
add
andl
mov
mov
subl
xor
add
adcl
mov
mov
adcl
xor
add
subl
mov
mov
sbbl
mov
adcl
mov
sbbl
mov
adc
mov
mov
incl
mov
xorl
mov
mov
negl
mov
movzwl
sbb
mov
movl
sbbl
mov
xor
add
jmp
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
orl
push
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
push
call
sbbl
test
movl
je
andl
xor
xor
inc
mov
cmpl
ja
jmp
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
xor
lea
push
xor
mov
adcl
xor
sbbl
lea
xorl
push
xor
mov
adcl
pushl
adcl
call
mov
mov
xor
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
pushl
call
cmpl
jb
lea
mov
mov
xor
sbbl
xor
add
sbb
mov
adcl
xor
movl
lea
movl
mov
cmp
movl
jbe
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
jmp
mov
mov
mov
mov
sub
xor
mov
inc
mov
sbbl
sub
subl
xor
mov
movl
lea
movl
mov
movl
lea
movl
mov
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
subl
push
sbbl
push
sbbl
call
test
movl
je
mov
movl
cmp
movl
jne
mov
cmp
jne
push
addl
push
call
test
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
push
adcl
push
call
adcl
test
je
movl
mov
movl
cmp
movl
jne
mov
cmp
jne
xorl
push
push
call
test
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
addl
push
movl
push
xorl
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
push
call
movl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
subl
push
addl
push
subl
call
adcl
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
sbbl
push
adcl
push
call
test
movl
je
movl
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
push
push
call
xorl
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
push
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
jne
push
subl
push
call
orl
test
je
movl
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
sub
add
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
or
mov
mov
and
xor
xor
mov
push
xorl
mov
add
movl
cmp
je
mov
movzwl
add
mov
xor
xor
add
addl
add
movl
adc
andl
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
movl
negl
mov
or
movsbl
sub
jmp
ret
addb
inc
cmc
in
sub
pop
add
jp
rcrl
outsl
std
sbb
test
dec
int3
or
jmp
jecxz
or
lods
adc
add
jl
add
orl
push
mov
mov
ja
clc
fsubs
mov
dec
xchg
inc
mov
jbe
cli
dec
notb
adc
xlat
cld
imul
dec
mov
xchg
aad
jne
fdivrs
gs
push
and
dec
jbe
in
mov
cmpsb
pop
fisttps
mov
and
negb
xorl
xor
decb
cmp
jp
outsl
add
fbld
stos
addl
mov
fadds
in
repz
es
test
xor
shl
in
or
xor
push
arpl
xor
jns
hlt
in
push
mov
mov
ret
adc
jnp
adc
and
mov
xchg
in
xchg
ja
sub
insl
jno
jmp
aad
and
ljmp
fldcw
cs
jg
enter
pop
in
mov
mov
cmp
and
mov
cmp
pop
ficompl
aas
jb
xor
imul
xor
pop
sbb
xlat
push
nop
xchg
lods
add
stos
dec
popf
sub
lods
fcompl
cltd
mov
xor
pop
sbb
dec
out
pop
inc
dec
xor
or
or
push
cmp
int3
xor
push
adc
pop
out
into
push
xchg
push
cmpsl
les
aaa
psubsw
mov
aaa
dec
mov
inc
fildll
roll
cmpsl
in
and
movsb
aas
or
test
cs
xor
adc
sub
fsubl
movsl
push
sub
lret
push
mov
out
lret
add
test
jg
test
popf
bound
push
in
incb
jge
movsb
sbb
in
into
or
adc
stos
insl
pop
push
sub
lea
add
nop
and
inc
mov
test
add
mov
lcall
xchg
in
movsb
sti
jns
pop
push
mov
sbb
cwtl
clc
jae
mov
or
ret
in
es
xchg
xor
sbb
inc
clc
shlb
mov
jns
xchg
inc
lret
nop
ret
ljmp
lcall
push
cmc
mov
aaa
jo
sub
lods
aaa
sbbl
cmp
shll
push
push
cli
xchg
lock
sub
ret
leave
jmp
scas
inc
sub
fwait
push
imul
int3
rolb
iret
push
arpl
imul
xor
dec
repz
and
data16
sbb
lcall
and
lds
mov
das
aam
jae
sbb
aaa
xchg
loopne
adc
jg
out
pop
and
test
xor
nop
cltd
xor
cmp
jbe
daa
mov
cmp
rcrl
sub
sub
sub
leave
xchg
loopne
std
lock
mov
dec
cmpsl
sub
repz
fcmovnb
push
or
xor
imul
aas
test
js
push
xchg
sarl
mov
adc
pop
pop
and
inc
pop
lret
cmp
add
pop
mov
fisttpll
or
sub
mov
out
leave
or
jnp
mov
add
sahf
cmp
dec
sub
cmp
out
rcr
fdivrs
gs
in
test
mov
scas
pop
sbb
xchg
movq
repz
test
xor
xor
stos
cmc
ret
or
repnz
test
enter
aam
sti
test
xchg
adcb
nop
dec
idiv
stos
dec
cmp
icebp
dec
shll
push
push
and
lcall
push
pop
psrlq
xlat
pop
jo
xlat
jmp
shll
mov
repnz
pop
cmpsb
out
cmp
movsb
push
xor
popa
sbb
shll
pop
mov
xchg
std
cwtl
xor
jl
loop
cmp
push
ficoms
pop
aaa
pop
pop
adc
pop
xor
mov
repnz
outsl
pop
inc
sbbl
jo
es
mov
xor
in
mov
push
add
fdivl
ret
nop
and
push
cmp
mov
stos
push
or
jle
nop
popf
jno
pop
push
jno
test
mov
mov
xchg
cld
push
cmp
jle
in
sub
test
sbbl
int3
test
cmp
adc
add
or
insb
aam
out
jmp
jae
inc
lret
inc
leave
pop
scas
mov
mov
popf
jle
sbb
negl
in
repz
xor
faddl
fidivrs
xchg
mov
adc
pop
pusha
das
scas
or
jmp
sbb
inc
dec
xor
sbb
mov
hlt
je
push
dec
and
outsl
pop
sbb
mov
test
inc
xor
and
and
je
nop
sbb
inc
imul
cmp
jg
mov
lock
scas
mov
adc
pop
or
leave
cmp
or
mov
mov
lret
loopne
addr16
pop
repz
and
inc
xchg
dec
fisttpl
test
movsb
inc
cmpsl
pop
out
add
scas
lret
fmulp
into
lahf
mov
in
and
and
cmp
dec
test
or
incl
or
push
xchg
cmpsb
mov
vpaddd
clc
cmp
addr16
enter
iret
sub
in
mov
out
sub
fistpll
add
cmp
lods
cmp
dec
fidivs
jg
les
in
daa
adc
fidivrs
movsb
fs
add
scas
jae
mov
cmp
rcr
lods
cmpsb
adc
aaa
sbb
int3
jbe
cmp
dec
int
add
or
mov
or
add
in
call
movsb
add
cmp
sub
mov
jmp
jecxz
outsb
mov
push
xchg
pop
cmc
repz
jmp
xchg
clc
repz
inc
pop
sbb
pop
sarl
movsb
or
push
arpl
push
jo
push
lahf
cmpsb
leave
jmp
pop
popf
xor
jmp
es
dec
out
lock
out
pop
mov
inc
es
jne
mov
xlat
out
addr16
ja
stos
push
icebp
js
aaa
lcall
subb
and
push
decb
incl
dec
enter
dec
psrad
mov
rcl
pushf
fs
fwait
je
add
paddd
pop
cmpsb
jmp
fsubl
push
sbb
pop
jnp
inc
shlb
sbb
outsb
repnz
xor
mov
int
push
out
stos
mov
cmp
dec
dec
aam
jb
iret
mov
xor
xor
or
test
and
fidivs
subl
push
cmp
or
mov
fimull
cmp
out
mov
or
dec
icebp
js
fs
pop
stos
faddl
pop
mov
filds
insl
or
mov
daa
or
cld
dec
mov
mov
icebp
jb
dec
xchg
rorl
xor
mov
push
cli
mov
test
xorl
pop
mov
in
dec
push
xchg
jmp
scas
cmpsl
inc
aas
xor
mov
pop
mov
pop
jns
sub
pop
xchg
push
sbb
push
push
cwtl
xchg
icebp
and
sub
adc
mov
stos
xchg
jne
push
inc
insb
cmp
inc
pop
repnz
inc
test
mov
hlt
push
inc
xlat
mov
lea
xchg
ret
outsl
ds
fcomi
xchg
dec
xor
mov
or
add
ss
cwtl
mov
int
lea
popa
jge
mov
imul
push
andl
enter
movsb
adc
xor
lock
cs
aad
icebp
jge
sbb
popl
cmp
nop
lock
divl
and
ja
jle
sbb
jns
test
xchg
and
enter
call
je
xchg
in
and
xchg
fscale
push
or
insl
mov
xor
in
into
and
adc
add
rclb
jmp
inc
insl
fwait
and
sbb
dec
gs
inc
add
adc
jb
sti
aad
in
les
or
movsb
negb
lcall
gs
jmp
out
popf
xchg
stos
lcall
repz
or
fnstenv
rorb
add
imul
int
ret
add
cld
push
adc
movsl
ljmp
hlt
lock
xor
aaa
sub
jo
push
mov
ja
cmc
cmp
xlat
or
data16
mov
scas
scas
pop
add
test
and
subb
dec
popf
in
je
into
test
and
jge
jae
cld
fsubl
clc
lds
jno
clc
pop
xlat
lahf
lcall
aam
jnp
inc
add
or
xor
test
cs
push
negl
insl
addb
dec
fmul
cmp
test
push
and
fwait
dec
aad
imul
pop
dec
mov
inc
sbb
fwait
aas
lret
dec
lcall
xchg
cmp
mov
sub
dec
mov
stc
fcoms
jnp
test
push
cwtl
int
imul
es
jae
sbb
cmp
xlat
out
in
or
shr
int3
insl
ja
shrl
std
mov
mov
mov
add
push
push
imul
jnp
addr16
sub
stos
mov
or
mov
testl
bound
xor
ret
mov
mov
sub
les
sti
cmp
aad
xor
shrb
inc
sbb
stc
dec
repnz
mov
mov
test
hlt
cmpsb
push
insl
ja
flds
mov
sub
idivl
mov
sub
pusha
fisttpll
sub
jnp
inc
les
cmpsb
xchg
sub
shrl
sub
test
loope
jge
loopne
fdivl
test
in
sbb
sub
loope
mov
das
ret
add
xor
sub
adc
add
icebp
jge
push
adc
xlat
xlat
xorl
push
push
or
cld
aam
frstor
enter
mov
sbbb
adc
leave
fdivr
lahf
pop
stos
adc
mov
test
popf
popf
push
push
decl
cld
nop
cli
mov
sahf
xchg
in
cmp
icebp
jbe
lahf
enter
jle
pop
sahf
sbb
pop
dec
cmp
out
scas
jo
add
jo
inc
cld
jns
scas
rcr
inc
and
int
and
xlat
rclb
icebp
mov
stos
jne
pop
pop
sub
dec
sub
sahf
fldcw
aaa
jg
dec
jp
fcmovnbe
pop
test
icebp
lret
jp
push
stos
and
mov
jno
mov
fdivl
jae
mov
imul
int
jbe
cwtl
gs
out
inc
loope
sbb
enter
mov
in
jle
test
pop
or
scas
sbb
adc
dec
dec
pop
push
test
inc
lods
bound
add
rclb
pusha
iret
jmp
push
mov
mov
inc
adc
dec
adcb
jmp
test
jae
mov
pop
xor
outsl
mov
inc
pop
jecxz
sub
mov
add
lahf
mov
imul
popf
test
or
cmp
insb
ljmp
test
push
pop
mov
ret
xchg
pop
dec
xchg
add
and
inc
and
add
aad
add
add
mov
mov
in
clc
jmp
and
cmp
and
sub
std
push
dec
lahf
subb
sbb
jo
insl
jae
or
enter
hlt
ss
loope
sbb
mulb
test
fnsave
inc
adc
and
cmp
sbb
mov
xchg
ret
and
scas
push
fstpl
jle
out
icebp
iret
js
fdivrs
imul
push
stos
aad
dec
jp
out
pop
sbb
cld
push
adc
fistpll
jmp
test
mov
icebp
in
gs
lods
inc
jl
push
sbb
mov
sbb
sbb
jp
sub
add
inc
ret
cmp
adc
test
cmp
sbb
pop
mov
imul
xchg
ret
dec
loop
loopne
mov
or
dec
lods
pop
jmp
add
push
enter
lret
xor
jle
sub
inc
push
push
loope
push
inc
aas
mov
sahf
mov
or
icebp
sar
add
pusha
sub
mov
iret
mov
repz
insl
mov
xchg
stos
jge
jne
divb
sub
addr16
lods
jecxz
jecxz
pop
and
fwait
sbb
inc
jo
imul
addr16
cs
jnp
in
es
ja
push
xchg
inc
sbb
adc
mov
aaa
sti
hlt
adc
adc
test
clc
pop
push
lock
lock
mov
cmp
sbb
dec
xor
mov
lock
stc
push
sbb
imul
lret
cld
insb
mov
lea
dec
adc
mov
pop
lods
mov
mov
lods
mov
mov
aam
stc
imul
inc
push
jbe
fsubrl
repnz
mov
sub
bnd
mov
dec
inc
xor
dec
adc
sbb
sbb
jg
cmc
push
cli
dec
sbb
cmp
adc
mov
jae
popf
fs
loopne
in
xor
insb
mov
mov
jecxz
jne
mov
rorb
pop
into
jp
sti
mov
je
fmuls
aam
iret
sub
sahf
mov
jnp
cmp
xor
movsl
sbb
pop
dec
pop
jg
inc
cltd
outsb
movsl
inc
jecxz
mov
mov
dec
movsb
sbb
sub
xor
sahf
mov
leave
push
and
xorb
clc
xorl
sub
stc
or
xchg
addr16
packsswb
mov
shll
cld
or
pop
xchg
mov
fprem
dec
push
inc
mul
xchg
dec
mov
inc
jge
mov
cs
cmpsb
push
push
xchg
pop
jae
add
in
aaa
test
pop
sub
in
mov
jae
ret
or
cli
jmp
mov
and
push
sub
push
lds
add
xchg
fcmove
dec
inc
push
push
push
sub
ficoms
mov
or
pop
xchg
mov
cmpsl
mov
leave
iret
pop
and
jb
mov
sbb
repz
fstp
pop
mov
mov
fidivrs
stos
into
xchg
fnstenv
inc
dec
xchg
fistpll
bound
incb
sub
push
jo
lods
xchg
iret
mov
adc
push
sub
loop
nop
lods
test
xor
pop
add
push
fnstenv
and
push
in
inc
push
mov
dec
inc
test
lds
push
jae
or
lret
sbb
iret
xchg
repnz
inc
dec
and
push
ljmp
xor
daa
lock
inc
sub
fadd
movsb
add
addr16
mov
pop
jbe
cmp
sbb
leave
xchg
fisttpll
or
jbe
arpl
fsubs
xor
xchg
mov
pop
mov
aad
push
mov
sbb
cld
test
adc
mov
ljmp
inc
xchg
out
cmc
push
dec
popfw
sub
les
and
add
dec
fucomip
les
shlb
push
pop
add
sub
xchg
in
mov
push
pop
in
or
insl
fildl
and
rcrb
pop
fwait
stos
dec
mov
into
lock
sbbb
js
mov
and
add
in
cmp
pop
cwtl
sbb
xor
xchg
in
test
inc
orb
jo
aaa
push
repz
pop
in
jb
pusha
sub
mov
xor
lock
mov
lods
js
arpl
ds
cmc
or
shll
mov
arpl
sahf
push
or
enter
into
fnstcw
out
repz
dec
inc
mov
and
cwtl
or
pop
push
jp
ss
pop
int3
xchg
xchg
std
push
pop
sbb
call
nop
movsb
jl
dec
leave
aam
arpl
xchg
xchg
xlat
mov
adc
push
sarb
xlat
mov
adc
sub
in
insb
sub
int
ret
inc
stos
dec
xchg
push
xor
adc
repnz
imul
and
mov
lret
jp
sub
int3
incb
adc
pop
and
or
dec
xor
add
xor
insb
push
push
js
aaa
imul
movsb
inc
and
dec
cli
pop
call
test
sub
popf
jo
xchg
cmpsb
dec
sbb
shl
mov
xor
xchg
pop
and
mov
inc
pushf
lds
cmp
cltd
push
mov
or
mov
xchg
test
inc
dec
adc
push
jb
xor
xchg
mov
adc
or
sbb
or
fisttps
mov
repz
or
sub
jno
mov
jne
pusha
inc
movsb
jle
shll
push
xchg
mov
xchg
arpl
mov
cmp
popa
xchg
lock
mov
dec
jo
les
jmp
rclb
fisttpl
sub
jno
add
rcll
ret
mov
setl
cmc
and
aam
test
add
test
stos
mov
movsl
pop
cltd
and
or
repz
add
xlat
fisubl
movsb
int3
mov
push
addl
sarb
test
nop
inc
scas
aam
std
mov
insl
leave
cli
mov
push
push
sbb
ljmp
dec
cwtl
cmc
or
in
movl
aad
mov
add
jb
or
pop
push
cmp
inc
inc
fiaddl
in
sub
outsb
roll
daa
xchg
fwait
adc
rcr
ds
fs
adc
shrl
fucomi
pushf
add
js
lcall
add
adc
adc
add
arpl
dec
xor
and
pop
push
xchg
adc
fdivp
pop
xchg
add
enter
mov
add
out
mov
loopne
adc
push
and
mov
jae
and
xor
push
sub
pop
mull
xchg
pop
cmp
jmp
rol
sbb
pop
pop
pop
into
fildll
lock
xor
push
ds
cmp
add
dec
leave
std
rcll
jae
mov
lcall
cmp
inc
fbld
push
cmp
jp
or
aad
xchg
mov
mov
repnz
shl
aad
in
sub
pop
push
or
mov
scas
mov
rclb
mov
dec
das
bt
mov
adc
add
jg
lods
cmp
sbb
cld
xor
addr16
xor
lock
cwtl
aaa
mov
add
or
icebp
and
adc
imul
sbb
testb
aas
stc
or
lcall
adc
inc
xor
repnz
scas
mov
mov
test
lret
pop
leave
sti
cmp
push
lsl
lret
jno
jl
mov
loopne
or
jl
xor
je
fists
bound
xor
or
jg
and
shll
neg
jmp
inc
xor
add
push
cmp
cld
in
mov
sbb
mov
daa
das
jp
cmp
or
adc
aam
add
sub
push
std
fwait
xor
sbb
ljmp
mov
out
hlt
clc
je
cmpsl
adcb
loop
lcall
js
mov
mov
pop
movsb
sub
mov
jnp
sub
and
outsb
and
jne
fistps
in
mov
and
add
pop
xor
jnp
lock
leave
orb
mov
mov
out
movsb
inc
inc
les
fstps
cld
mov
icebp
test
in
loop
xchg
dec
aad
fnstsw
or
add
insl
adc
xchg
mov
mov
sub
mov
cmp
fbld
mov
popf
stc
jns
push
or
jmp
or
lock
fdivl
inc
push
xor
pop
sbb
jo
ret
lock
loope
dec
stos
mov
jg
and
adc
jnp
push
mov
outsl
out
and
ret
dec
lcall
mov
adc
insb
nop
rcrl
rolb
scas
aam
xchg
sub
jmp
mov
mov
mov
jecxz
sbb
mov
or
mov
dec
shufps
inc
and
test
popf
push
inc
and
push
outsb
lods
xchg
pop
inc
fwait
clc
stos
mov
jno
push
dec
popa
testl
iret
test
sbb
cmp
icebp
leave
enter
popf
pop
fildl
mov
jg
dec
jno
and
inc
jge
aas
and
push
in
sub
pop
inc
fstpt
fwait
outsl
mov
jge
and
mov
in
inc
ret
icebp
mov
sub
ret
sti
addb
sahf
fmul
stc
xor
sub
rcrl
and
adc
push
xor
decb
add
call
pop
js
sbb
scas
es
xchg
in
jge
cli
sub
imul
inc
xlat
in
std
lods
aad
sbb
sbb
xchg
jl
mov
adc
pop
dec
test
dec
mov
pusha
lods
cmp
sbb
or
jae
pop
in
pop
int3
push
dec
scas
or
sub
aaa
jno
inc
jle
xchg
lods
dec
popf
dec
mov
or
mov
sar
dec
xchg
add
and
out
cmp
add
gs
sub
fistpl
jmp
sub
popa
in
cwtl
adcb
pusha
mov
in
scas
pop
popf
movsb
outsl
mov
inc
push
call
movsl
push
mov
das
xor
mov
xchg
dec
inc
sbb
cld
adc
aas
sahf
pop
pop
rcrb
pop
mov
movsl
inc
cld
fs
xlat
mov
and
fisubs
or
shll
popa
xor
sub
xor
ja
jb
cs
jecxz
add
xchg
and
repz
ret
sahf
xchg
ljmp
jg
inc
cmp
cmp
in
inc
pop
fsts
cmp
dec
push
fstl
sbb
lods
test
push
inc
sbb
xor
jbe
aad
sbb
inc
mov
mov
aas
sbb
in
addr16
push
mov
mov
ss
dec
jmp
decl
shl
aas
mov
xchg
repnz
and
mov
xchg
out
insb
inc
xchg
and
mov
aas
jmp
mov
dec
cmpl
shll
sbb
rol
les
roll
push
and
add
les
dec
mov
push
movsb
test
inc
rcl
out
je
sbb
jp
imul
jb
std
outsl
aam
dec
fcoms
fnstenv
repz
popf
or
dec
adc
les
icebp
jge
cli
mov
inc
or
fucomi
xchg
jmp
and
stos
js
xor
push
int
push
and
jmp
cmp
pushf
sbb
dec
inc
mov
mov
push
adc
mov
xor
lods
push
int3
and
xchg
adc
mov
add
jbe
int
xor
inc
push
frstor
cmp
in
cmpsb
mov
push
inc
pusha
mov
cmp
fisubs
xor
dec
cld
fdivl
mov
loop
stos
jbe
in
enter
addl
repnz
adc
es
push
mov
das
cmpsl
mov
lcall
pusha
inc
adc
imul
repnz
test
mov
mov
lock
mov
arpl
cmp
addb
iret
clc
mov
pusha
and
and
jbe
or
or
lods
jne
sbb
push
mov
mov
cmp
or
rcl
jl
mov
mov
ds
mov
addr16
xchg
popf
divl
cmp
lea
imul
pusha
xchg
mov
rorl
cmp
stc
xor
push
dec
inc
ss
test
add
mov
pop
int
cmp
add
aam
jae
pop
fcmovb
inc
mov
lret
xor
ljmp
inc
test
lcall
out
xor
sarb
insb
scas
mov
mov
jg
xor
mov
dec
adc
into
popf
jge
mov
test
mov
push
sbb
adc
or
inc
cmp
xchg
aad
scas
ja
jbe
decb
fcomp
mov
pusha
xchg
outsb
jno
dec
xchg
pop
adc
inc
pop
cwtl
stos
in
popa
test
mov
cmp
push
mov
sbb
jle
aaa
stos
inc
sbb
in
and
out
inc
faddp
adc
scas
and
nop
cwtl
adc
icebp
sahf
int
divl
out
cmc
inc
push
loop
iret
add
scas
pop
clc
push
fld
adc
mov
jmp
add
cltd
icebp
xor
popa
inc
dec
lock
das
push
add
sar
js
pusha
mov
mov
add
adc
pop
add
jae
aam
out
insl
add
pop
imul
lea
jae
pop
iret
add
sbb
imul
idivl
shll
cli
inc
leave
sbb
lret
js
scas
iret
fldcw
nop
push
sbb
movl
ret
pop
cmp
jg
adc
pop
int3
jne
popa
cmc
mov
ss
add
sbb
scas
push
clc
clc
push
push
dec
stos
or
cltd
imul
mov
int
fdivrp
lcall
xchg
mov
movsb
adc
idivl
lods
in
fdivs
arpl
mov
sub
adc
sub
out
jno
jecxz
test
shrb
xchg
xchg
repz
imul
mov
adc
mov
mov
cmp
leave
jae
mov
repnz
lds
jg
or
push
mov
scas
cs
or
ja
and
outsl
sbb
lock
cmpsl
in
jmp
inc
xor
add
jge
outsb
fbstp
sub
sbb
add
popf
mov
jbe
or
lds
add
out
sbb
xor
icebp
mov
clc
add
loope
inc
lods
pop
mov
xor
mov
inc
adc
jecxz
lods
pusha
cmp
rcrb
movsb
mov
pop
jp
nop
sbb
mov
inc
or
cmpsl
xchg
pop
add
clc
mov
lods
scas
mov
jge
push
in
xchg
addr16
mov
mov
push
lahf
sub
sbb
mov
fimull
dec
xchg
dec
inc
and
fldt
je
dec
notl
movsb
out
and
adc
fsub
test
mov
inc
shrb
xchg
mov
imul
fst
or
cld
cmpsb
cmpsb
rcll
dec
aam
mov
and
std
je
or
jmp
cmp
mov
dec
cs
test
mov
lds
pop
in
cltd
int3
fld
in
pop
inc
leave
dec
std
jmp
push
and
fcoml
inc
xchg
aam
pop
fisttps
or
lahf
shrb
call
or
sub
cmp
xor
inc
fcmovb
shlb
popa
sbb
or
sub
mov
int
fwait
xchg
out
pop
out
add
add
stos
mov
mov
jge
sbbb
push
pop
inc
inc
jge
pop
ds
sub
xlat
mov
notb
mov
cltd
adc
push
jb
insl
xorl
inc
xor
jge
std
mov
xchg
push
xor
xor
mov
int
frstor
loop
mov
mov
and
stos
xchg
xor
xchg
dec
sbb
mov
incl
stc
mov
or
loop
inc
adc
mov
aad
arpl
xor
mov
sub
dec
push
pop
mov
xchg
std
or
ds
les
adc
dec
out
xchg
fcmovbe
outsl
pop
scas
mov
inc
jo
or
sbb
xor
rorb
int
add
push
and
mov
xchg
sub
push
inc
frstor
and
xchg
push
jge
pop
inc
xchg
pop
repnz
aaa
add
cmpsl
arpl
mov
add
push
fs
inc
inc
mov
jl
fldt
mov
mov
pop
testb
fdivs
cwtl
mov
stos
in
mov
rep
cmp
or
aam
sub
mov
rolb
fsubrl
pop
jbe
lret
sahf
mov
outsb
lods
xchg
shlw
cmp
sub
icebp
jmp
mov
xchg
xor
sbb
lods
arpl
pop
mov
dec
push
scas
xor
push
jne
pop
xchg
iret
bswap
lret
mov
scas
mov
cmp
aaa
jne
push
repnz
mov
imul
dec
je
push
aad
mov
scas
mov
xor
inc
mov
add
cwtl
shll
js
xchg
nop
nop
push
hlt
sbb
pop
shll
lds
push
insl
xor
add
push
pop
loop
mov
sub
lock
xor
or
jle
cmpsb
sub
fldpi
xchg
jae
add
add
sbb
aas
dec
add
sbb
stc
add
cmpl
mov
sahf
jge
pop
pop
es
cwtl
xor
lods
imul
popf
jg
sbb
or
dec
and
stc
int3
icebp
popl
test
pop
and
rorl
repz
adc
fiaddl
imul
lea
sbb
ret
repnz
ja
test
mov
adc
pop
or
mov
push
into
push
jbe
ds
aaa
mov
and
ficomps
bound
fs
jo
hlt
inc
lret
lret
test
stos
jmp
mov
inc
movsl
sub
mov
xchg
pop
imul
fsubr
jmp
xor
sub
das
cli
loop
and
outsb
add
fs
lret
daa
notl
sub
ss
xor
mov
pop
jecxz
jnp
push
int
xor
and
sub
mov
stc
and
imul
in
into
inc
outsb
cmp
lock
jecxz
std
and
ss
mov
imul
and
test
fildl
ficoms
imul
test
sub
cli
ret
rorb
or
clc
pusha
push
ror
imul
std
jge
push
outsb
pop
jl
or
xchg
idivb
jl
xor
outsl
add
jp
inc
out
cmp
xor
sub
or
mov
orl
xor
cmp
jne
mov
sbbl
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
mov
mov
sub
or
mov
adc
mov
movl
subl
mov
addl
push
mov
or
mov
sub
xor
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
pop
sbb
add
add
add
add
add
mov
out
add
add
add
push
push
inc
push
mov
mov
hlt
fdivrl
add
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
stos
cmp
pusha
outsb
add
mov
mov
cs
xchg
cmp
mov
sarl
aaa
mov
cmp
mov
pop
sti
mov
sbb
or
pop
std
mov
mov
lods
fcompl
or
mov
mov
mov
mov
mov
lahf
and
rorb
mov
dec
and
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
