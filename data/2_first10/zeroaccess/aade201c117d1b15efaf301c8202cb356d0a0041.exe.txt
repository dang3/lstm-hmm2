push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
cmpb
and
ffree
sub
rolb
cwtl
enter
lods
and
or
ficomps
jne
nop
icebp
jns
and
xchg
mov
mov
add
push
sarb
xor
rclb
adc
lods
push
cmpsl
inc
jno
test
ret
mov
xchg
and
inc
fldcw
dec
in
stc
mov
add
cmc
add
mov
push
sbb
add
scas
and
fsubrs
cmpsb
xor
mov
lods
jge
cltd
xor
push
scas
mov
jg
mov
jne
pop
jecxz
mov
fstl
stos
in
data16
imul
bound
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
arpl
ja
jg
jle
jg
jle
add
fisubrl
shrb
test
adc
sbb
adc
push
pop
ret
mov
jbe
inc
std
cmpb
xchg
fld
cmpb
cmpsl
mov
scas
sbb
fs
xchg
mov
int3
add
out
adc
jno
or
sarl
int3
lock
push
int
jge
sbbl
xchg
gs
sbb
cwtl
test
leave
mov
out
lahf
or
lcall
and
decl
int3
mov
test
pop
inc
mov
inc
das
sbb
mov
mov
out
loop
xchg
mov
in
pop
jmp
inc
stos
inc
cwtl
dec
inc
int
arpl
push
pop
rcll
sub
xchg
out
into
push
cmpsl
dec
rcll
jge
inc
add
xor
pushf
nop
loopne
mov
insb
jns
mov
mov
add
scas
shl
mov
decl
xchg
push
scas
stc
nop
lcall
aaa
fisubrs
test
in
cmpsl
mov
repnz
cs
jne
cmp
lret
pusha
ficompl
js
sub
pop
cld
test
inc
xchg
push
add
pop
pop
cmc
jae
or
repz
xor
ja
inc
les
sbb
xor
neg
jmp
cli
fcompl
jno
cmp
pushw
jge
jle
jg
jle
fs
sarb
arpl
cmpsl
push
mov
leave
daa
scas
mov
xor
dec
stos
sub
test
or
imul
mov
mov
scas
addps
shll
or
and
xor
add
out
mov
or
sahf
mov
bswap
stc
inc
popa
std
mov
rcrl
xchg
adc
test
cltd
lods
xchg
ret
cli
jns
cli
int
push
pop
shr
mov
mov
fnsave
inc
pop
sub
pusha
xor
mov
xor
subb
mov
mov
and
daa
jmp
pop
adc
das
jmp
mov
or
cmp
repz
push
fisubrl
das
sbb
mov
in
mov
pop
sub
push
mov
cmc
xor
leave
push
mov
pop
test
jmp
push
pop
dec
mov
repz
push
add
and
addl
add
scas
addl
add
inc
dec
notl
js
cmp
push
adcb
ljmp
aad
sub
imull
rorb
pop
or
sti
cmp
std
adc
bound
in
jno
xchg
icebp
daa
lea
call
jno
lods
sub
fwait
je
aam
pop
and
scas
xor
sub
dec
or
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
mov
jp
jle
jg
jle
lret
repz
jns
push
adc
add
mov
outsb
decb
mov
fistpll
test
jge
inc
xchg
iret
pop
push
into
test
pop
mov
xchg
and
lret
ret
adc
rcrl
loopne
aas
insb
movsb
jne
dec
stc
bound
movsb
cld
dec
repz
mov
iret
xchg
js
sbb
mov
loopne
ds
adc
xchg
mov
push
push
add
push
ret
cmp
aas
scas
jb,pt
mov
rcrl
ficoml
adc
icebp
pushf
ss
xor
cmp
mov
push
daa
push
jp
loopne
sbb
dec
and
aaa
loopne
test
and
mov
dec
fcmove
hlt
ret
mov
out
or
std
ljmp
dec
mov
dec
jge
icebp
loopne
test
jnp
pop
inc
inc
mov
sbb
sbb
jne
insb
das
ljmp
push
ret
cmp
out
and
aaa
dec
inc
jne
cmp
xchg
repz
xchg
dec
sub
mov
mov
mov
fwait
add
js
mov
adc
inc
insb
js
inc
cmp
ss
imul
sbb
dec
sbb
pop
sahf
dec
push
jmp
adc
xor
in
movsb
push
scas
lods
lods
jb
xchg
sub
pop
mov
pushf
add
add
jmp
push
dec
pop
dec
jb
push
js
jle
jg
jle
pop
repz
stc
xor
push
xchg
mov
pop
cmc
inc
bnd
pop
inc
xchg
or
lahf
sbb
pop
loope
push
jle
inc
add
jne
mov
pushf
lret
rcll
push
orl
jbe
scas
loop
mov
adc
gs
mov
mov
push
push
cltd
cmc
sbb
mov
ss
arpl
cli
mov
rcrb
or
pop
jns
iret
pop
mov
int3
sbb
stos
lods
arpl
cltd
stos
and
push
sbb
mov
dec
invd
sti
pop
rcrl
js
mov
add
inc
data16
xchg
mov
cmp
mov
ficoms
jl
or
pop
inc
lahf
add
shlb
test
dec
loopne
das
mov
bnd
and
iret
cmp
mov
je
mov
out
cmp
ficompl
xchg
loop
adc
movsl
lods
addr16
mov
ret
push
inc
rcrl
dec
lea
add
aad
sarb
and
push
jmp
incb
mov
ret
ja
mov
push
ss
pop
test
dec
mov
ss
pop
outsb
dec
iret
imul
mov
sbb
sarl
cmp
xchg
or
out
xchg
scas
insl
fmul
aaa
xchg
inc
fisttpll
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
negb
jle
jg
jle
jecxz
pop
adc
leave
or
sub
jo
in
jp
pop
adc
shr
push
sbb
xor
push
xchg
enter
aad
or
xor
sbb
xchg
cld
out
dec
js
call
rcl
test
dec
xchg
rorb
mov
repz
insb
sbb
jns
test
adc
lods
cli
sarl
mov
cmp
cltd
cs
sub
movsb
mov
mov
adc
leave
and
adc
sub
js
ret
jg
xchg
call
arpl
in
pusha
jns
mov
sub
stos
shrl
movsb
mov
dec
xor
rcr
outsb
fdivr
push
mov
std
inc
push
mov
into
push
xchg
jle
pusha
cmovge
lea
loop
inc
sub
loope
aas
xchg
dec
lods
fsubrl
sarw
and
cwtl
mov
iret
lret
and
or
cmc
adc
loop
test
or
lods
lds
add
dec
hlt
je
repz
push
insl
mov
rclb
inc
dec
mov
fdivl
mov
adc
xchg
inc
pop
sahf
aam
jae
push
jg
cmpsl
or
xor
push
pop
or
aas
sub
fadd
jle
mov
push
mov
jl
fsts
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
jo
pop
jle
cli
jg
jle
pop
cmp
sarb
imull
rolb
cmp
pop
mov
cmpsl
es
mov
push
repz
lret
scas
addl
shrb
mov
or
mov
fdivr
add
nop
cmpsb
lods
lock
je
enter
inc
jp
aad
cmp
xchg
pop
or
push
xor
aaa
iret
adc
sub
or
ss
jo
cmpsb
in
push
cmp
xor
pop
stos
out
adc
divl
mov
xor
sbb
mov
pop
cmc
xchg
jae
je
mov
push
sub
mov
test
fwait
pop
or
lds
leave
daa
sbb
fldenv
repnz
imul
mov
xchg
shrl
les
add
cmp
imul
push
xchg
jno
pop
roll
or
lds
test
lock
add
and
mov
dec
xchg
cli
jno
sub
lods
or
xchg
iret
scas
sub
outsb
subl
jl
roll
inc
movsl
sbb
sbb
xchg
mov
and
sbbl
mov
in
scas
bound
cmp
imul
adc
in
cmp
inc
insb
fbstp
mov
sbb
stos
or
cmp
jge
je
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
icebp
and
add
push
mov
test
jg
mov
mov
sti
mov
mov
sbb
ss
mov
jge
out
imul
pop
shrb
iret
cmp
cs
inc
shlb
jle
negl
fs
dec
dec
lret
cmp
pop
stc
mov
add
out
jge
add
imul
or
push
mov
clc
cmpsl
pop
or
subb
pop
jae
push
scas
cmpsl
out
push
xlat
pusha
mov
pop
jmp
push
jbe
call
jge
scas
cs
xor
popf
xchg
mov
inc
mov
mov
orl
lods
rcll
sahf
xlat
mov
pop
cwtl
push
ja
inc
vmovdqa
nop
pop
pop
int
fldcw
cltd
fs
xor
pusha
or
movsb
xchg
ret
jns
pop
loop
pop
sub
push
es
or
adc
daa
dec
rcl
mov
cltd
loope
nop
bound
inc
fildl
jno
mov
dec
fcoms
sbb
movsb
add
jmp
adc
aam
cmp
out
jns
or
push
cwtl
pop
sub
fisubl
sub
push
out
dec
loop
push
pop
fidivrs
imul
push
mov
add
jmp
cmc
dec
and
jno
push
mov
xchg
jmp
jle
jg
jle
push
or
test
imul
int3
out
jbe
out
mov
or
or
daa
arpl
loope
push
push
cltd
inc
lods
lods
dec
push
xor
push
and
lods
es
dec
repnz
das
imul
sarl
mov
sbb
add
iret
pop
aaa
or
adc
out
scas
rcr
leave
insb
adc
push
sub
adc
inc
fs
fbstp
out
sub
cwtl
ljmp
sub
inc
notl
int3
insb
xor
inc
pop
dec
adcl
fldt
xlat
jmp
cld
add
cmp
icebp
fmuls
inc
xlat
pusha
lock
xchg
sbb
outsb
mov
sbb
aam
inc
arpl
fwait
int
hlt
lods
mov
xchg
call
pop
hlt
rclb
sarb
int3
lea
xor
fmull
repz
mov
xor
dec
fidivrs
mov
xchg
data16
mov
cmpsl
pop
push
sub
push
sub
mov
aaa
and
lds
testl
addl
movsl
mov
inc
cwtl
jge
mov
inc
inc
test
add
iret
test
jne
rolb
push
xor
popf
pop
jecxz
mov
sarb
inc
push
cmp
inc
int
fstl
icebp
mov
and
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
push
sub
or
cli
jg
jle
cs
mov
mov
clc
add
imul
int
mov
mov
arpl
pop
sbb
es
pop
ss
outsl
out
push
testb
jae
cltd
dec
and
aad
lret
jmp
outsl
js
clc
das
dec
aad
mov
call
test
add
loop
nop
xchg
pop
daa
daa
pop
xorl
movsb
out
push
cli
mov
int3
aas
cmpsl
push
xor
or
mov
clc
pop
cld
and
adc
add
aam
fdivs
mov
adc
rolb
cmp
cwtl
push
push
fnstenv
iret
inc
sbb
test
out
lock
sub
mov
fcomi
jle
xor
push
xchg
xor
fadds
mov
lds
out
cmc
adc
cmp
push
or
push
mov
sub
out
sbb
mov
xor
addr16
stc
es
jb
mov
sbb
sbb
xchg
adc
jl
mov
cmpsl
pop
sub
push
out
repnz
shl
cmp
mov
mov
loopne
pop
decl
cmp
insl
jbe
mov
add
adc
inc
popf
aaa
cmp
call
mov
lahf
dec
int
push
ss
mov
hlt
in
fwait
cmp
ss
test
hlt
mov
dec
pop
in
int3
and
jle
aad
inc
lock
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
sub
add
add
cli
jg
jle
mov
jno
enter
icebp
add
mov
int
ret
negb
insl
into
adc
and
lods
xor
cmp
fwait
xchg
rcl
test
insl
mov
ds
adcb
add
cmp
mov
add
push
fucom
out
ret
push
test
dec
ss
adc
ret
push
xchg
fcmove
sub
and
jg
pop
pushl
das
push
pusha
mov
mov
sub
icebp
adc
inc
mov
push
or
dec
icebp
inc
xchg
jmp
lea
sahf
mov
loopne
and
pop
mov
dec
inc
add
push
enter
nop
std
clc
xchg
mov
push
jge
adc
push
aam
cmp
jno
pop
leave
in
mov
and
dec
pop
fcomi
add
adc
mov
cmp
jg
cmp
mov
sbb
movsl
fsubl
push
jns
mov
test
push
shl
dec
xor
xchg
jge
int
shlb
sub
mov
loope
dec
push
shl
inc
btc
mov
aad
sahf
je
add
out
pop
or
adc
cmp
jge
push
shll
pop
xchg
hlt
xchg
loopne
jne
divb
stos
or
push
leave
cmp
out
mov
jge
push
mov
insl
shlb
xchg
pop
cmc
outsb
adc
movb
add
clc
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
movsl
push
fwait
dec
mov
jg
jle
sti
pop
fcmovb
insb
pop
inc
les
leave
nop
pop
aad
hlt
gs
cmp
fistl
jno
out
insb
sub
push
ja
das
pusha
dec
lahf
and
mov
mov
rclb
mov
scas
aam
nop
mov
adc
pop
aad
push
pop
pop
xlat
jge
cs
push
out
xor
into
inc
in
loope
pop
or
popa
pusha
repz
fimuls
adcl
mov
in
hlt
xchg
arpl
dec
movsb
jmp
nop
xor
mov
adc
aad
xchg
pop
xchg
jp
fistpll
jmp
js
lret
daa
mov
scas
xor
out
push
sbb
pop
sbb
in
xchg
add
and
jbe
jns
add
int3
cltd
xchg
cmpsb
push
xchg
fidivrs
and
lock
aaa
popf
jo
xchg
xor
xchg
cs
mov
and
xchg
leave
das
bound
xchg
lods
jmp
add
enter
dec
test
loopne
jne
mov
shl
jp
sub
leave
dec
lock
sub
arpl
sub
xchg
arpl
loopne
push
xor
lods
pop
fsubp
lods
xchg
sbb
imul
outsl
aas
adc
xchg
lret
inc
int
mov
clc
dec
jg
mov
movsl
in
or
or
subb
js
fimuls
or
mov
scas
out
stc
pop
dec
add
xor
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
xchg
out
cs
jle
jg
jle
les
fwait
dec
xor
mov
cmc
mov
inc
rorl
or
xlat
addr16
test
fstp
jb
adc
xchg
xor
fsubrl
mov
mov
inc
push
inc
sub
xchg
cmpsb
movsb
clc
add
push
enter
sbbl
jle
in
out
scas
mov
mov
je
pop
dec
cmp
lods
pop
or
add
test
dec
mov
xchg
aam
sub
cmp
jmp
push
daa
push
test
xchg
sar
cmc
gs
stos
adc
out
mov
testl
aam
xchg
test
mov
addl
push
imul
out
cmp
fnstenv
add
adc
push
or
loopne
xor
mov
icebp
in
insb
andb
cmp
ljmp
ds
pop
inc
fstpt
jo
xchg
lods
jo
mov
jb
sub
push
xchg
sbb
call
lret
int3
or
mov
mov
dec
dec
shrb
loop
cs
cmp
addb
jnp
lds
mov
jae
jno
push
mov
shr
mov
dec
pop
jle
jo
in
jecxz
mov
imull
and
push
js
sub
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
adc
repnz
jg
jle
xchg
sub
adc
sahf
dec
movsb
xor
jmp
loopne
xor
push
lods
pop
or
and
clc
int
dec
or
xor
loope
push
icebp
adc
inc
insb
pusha
and
das
cmpsl
xor
cld
ljmp
loopne
stc
cmpsb
into
outsl
out
adcb
ja
aaa
cmp
mov
test
mov
test
in
inc
sbb
mov
in
xchg
dec
xchg
mov
or
pop
sub
jge
and
mov
inc
pop
arpl
sub
xchg
shrb
mov
ret
cwtl
push
push
scas
xor
adc
inc
pop
add
jle
rep
mov
xor
test
push
jae
pop
or
notl
outsb
push
jge
mov
in
mov
add
mov
dec
cwtl
cmp
add
fadd
mov
decb
ret
xor
bound
jno
mov
xchg
es
sub
xor
test
fstpt
adc
dec
jne
es
daa
ja
notb
iret
lods
jno
jmp
sub
jg
decb
lahf
cmc
and
popa
mov
mov
adcb
inc
mov
push
sub
or
sub
popf
push
mov
mov
cmp
ljmp
cmp
test
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
push
push
fbld
jle
cli
jg
jle
fnstcw
mov
cmp
out
mov
cld
insl
xlat
pop
cmc
jae
dec
imul
test
sbb
mov
inc
je
scas
es
mov
icebp
dec
mov
push
add
mov
pop
push
mov
into
dec
rclb
repz
addl
loopne
lods
lock
fsubrp
mov
and
insb
scas
xor
outsl
ss
cmp
xor
rclb
icebp
pushf
pop
shrl
lret
nop
add
pop
mov
pop
jbe
ret
xchg
cmpsb
mov
in
rcr
cmpl
cmc
fmul
aam
dec
and
int3
rcrl
push
mov
xor
aaa
push
stos
xor
rcll
add
call
add
mov
pop
dec
xchg
imulb
rolb
aaa
stc
popf
xchg
or
loope
cmpsl
rorl
pop
push
negl
pop
out
call
leave
dec
imul
js
lods
add
mov
push
lock
ja
xlat
test
ficoms
xchg
or
add
mov
rorl
adc
xchg
adc
pop
cmp
mov
rcr
mov
js
test
or
lds
int3
xor
mov
ret
movsl
xor
daa
outsl
push
pusha
dec
cmp
sub
leave
repz
xor
add
sbb
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
adc
mov
jle
cli
jg
jle
sub
stos
or
sbb
mov
repz
test
jbe
sbb
shlb
into
and
rcrl
cmp
or
jno
aas
push
hlt
sahf
out
pop
mov
push
ret
aas
mov
push
jb
sub
xchg
jecxz
ret
lea
fsubs
ss
xchg
insl
cli
aam
hlt
lret
out
out
cmp
hlt
xor
test
xor
pop
adc
cltd
std
lcall
mov
call
dec
lcall
fiadds
or
cmpsb
push
outsb
xchg
xlat
add
pushf
jl
push
rcll
sbb
cmp
test
and
or
cmc
sub
or
or
bound
cmpsb
out
dec
int3
mov
lods
pop
cs
or
or
jne
enter
adc
fsubr
adc
imul
push
insb
jge
lods
movsb
scas
push
xchg
mov
mov
or
and
outsl
xchg
mov
mull
stos
int3
sub
push
mov
pop
dec
xor
adc
cli
or
add
cmp
cmp
shlb
push
xchg
mov
ss
push
adc
jle
stos
int3
cmp
test
ret
stos
movl
loopne
fwait
stos
aam
adc
add
xor
add
xor
add
xor
add
xor
pop
jmp
cmc
mov
icebp
insl
sbb
cmc
inc
ds
jle
cli
jg
jle
inc
mov
cmp
xchg
adc
xchg
and
jo
int
aam
xor
inc
cmp
loope
mov
cmpb
test
jno
jmp
adc
incb
mov
push
in
push
mov
inc
xchg
xor
mov
xor
mov
jmp
push
mov
xchg
sub
mov
movsb
add
insb
sahf
pop
sti
fdivrs
mov
xor
pop
enter
push
icebp
scas
pop
pop
mov
mov
xchg
test
push
adc
push
xchg
adc
fs
xchg
in
scas
out
xchg
mov
fwait
shlb
jo
inc
sbbl
out
mov
iret
fwait
iret
insl
inc
shrb
jmp
in
dec
or
dec
pusha
pop
mov
pop
ret
cmp
pop
xchg
push
stos
shll
inc
or
sub
ret
push
xchg
inc
lods
and
mov
jmp
fildl
pop
cmpsl
bound
cwtl
out
xchg
push
das
mov
scas
mov
xlat
mov
mov
mov
sub
movsl
arpl
mov
mov
sbb
jb
lcall
and
jo
fnsave
lock
sub
das
push
stos
mov
adc
or
outsl
push
stc
adc
cltd
dec
mov
mov
mov
add
pop
jmp
add
mov
adcb
jg
pop
jle
cli
jg
jle
pop
xor
mov
adc
in
mov
xchg
aam
cmp
xchg
and
jle
ret
mov
dec
xor
lea
outsb
fildll
fst
stc
mov
shrl
add
push
dec
adc
lret
sbb
cs
aaa
mov
fildl
mov
in
aam
es
or
push
dec
imul
out
shrb
push
aam
adc
xor
aaa
xchg
sub
insb
and
xor
adc
outsb
xchg
xchg
mov
sti
xchg
dec
loopne
sahf
dec
adc
scas
xchg
push
cwtl
stos
bnd
dec
and
jo
and
and
fcos
shll
out
dec
das
jns
aam
xor
loop
fwait
jo
sub
pop
xchg
mov
orl
sub
inc
dec
pusha
mov
jmp
push
lcall
xor
cmp
mov
imul
mov
jl
movsb
dec
jge
and
pop
pusha
and
imul
imul
sbbw
outsl
lods
pop
dec
mov
inc
mov
mov
or
sub
std
mov
xor
rorb
ret
fsubp
or
cmp
rcl
arpl
and
pop
sub
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
rorl
adc
jle
inc
and
scas
test
and
mov
and
push
push
pop
xor
in
and
nop
aas
cmpsl
xchg
dec
int
clc
scas
dec
dec
pop
sbb
repnz
stos
sbb
adc
push
data16
jecxz
xor
sub
adc
dec
xor
mov
aas
sahf
lret
xchg
xor
add
and
inc
arpl
idiv
push
push
mov
rcrb
push
inc
add
dec
lcall
es
jae
pop
push
push
cld
into
or
insb
enter
dec
adc
mov
out
mov
fs
or
dec
add
int
dec
jl
mov
mov
das
xchg
push
xorb
jns
mov
inc
out
pop
es
scas
cs
mov
out
mov
inc
popf
stc
pusha
out
xchg
push
in
inc
push
dec
mov
outsb
inc
test
pop
pushl
mov
sahf
dec
loop
xlat
mov
mov
cmc
jns
cmc
or
shrb
push
xor
add
mov
push
sub
leave
jg
cmp
stos
out
cwtl
popf
add
pop
test
cmp
loop
call
push
dec
ljmp
movsl
push
xchg
rclb
inc
pop
inc
jb
inc
cmp
aad
pop
stos
jp
jae
std
adc
call
sbb
pop
and
outsl
mov
sbb
or
and
arpl
dec
mov
das
mov
add
dec
jmp
movsb
mov
leave
mov
pop
les
xchg
jecxz
out
out
jg
pop
fcmovnb
insb
leave
cmp
or
inc
lods
cmp
add
lods
std
fisttpl
xor
mov
pop
testl
scas
hlt
out
fdivrs
push
or
ret
aaa
sub
js
add
cli
cmp
xchg
and
push
sbb
xchg
repnz
loop
dec
test
lods
push
mov
sbb
mov
int3
scas
aad
das
mov
cmp
das
gs
pop
push
push
cmp
rcrl
push
mov
mov
icebp
cltd
lock
out
xorb
cmpsb
mov
dec
mov
movsl
jmp
or
les
movsl
lods
std
loope
sbb
insb
ds
enter
push
std
mov
mov
cmp
pop
scas
xchg
outsl
mov
pop
xor
jbe
out
or
pop
cmp
ja
dec
leave
push
adc
clc
adcb
jb
aaa
xor
data16
or
or
stos
mov
movsb
aas
add
dec
pop
movsl
loop
lret
mov
mov
xor
les
es
xchg
mov
rol
mov
inc
les
test
inc
add
stos
aaa
inc
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
xchg
xchg
or
adc
pop
jl
jle
sbb
mov
xlat
nop
int3
repnz
pop
call
mov
in
push
sub
int
push
xchg
movsb
lods
or
mov
in
sarl
mov
ror
scas
test
loopne
cmp
out
ss
outsb
xchg
push
sub
jl
fstpt
xor
fadds
mov
inc
out
pop
out
adc
pop
cmp
mov
repnz
in
cli
dec
nop
inc
jecxz
cmp
mov
mov
ret
cwtl
out
mov
out
xchg
cs
mull
sti
fcoms
mov
das
fimull
aas
lret
dec
and
push
mov
nop
sbb
mov
sbb
inc
test
int
cld
xchg
sub
xchg
pop
dec
shll
rcrl
je
lock
mov
or
ds
fnstsw
js
xchg
sarb
mov
fwait
xchg
adc
cmp
sahf
shrb
pop
push
add
and
adc
aaa
jmp
repz
scas
stos
out
loop
dec
cmpsl
dec
in
pushf
clc
mov
rclb
push
std
iret
fst
stos
mov
adc
jne
pop
fcmovnb
fadd
es
mov
shlb
xchg
jns
adc
adc
std
lahf
jle
push
mov
arpl
mov
cli
sbb
fwait
leave
inc
xlat
push
lods
fwait
lock
or
jne
xchg
xchg
gs
push
or
lock
shrb
rcrb
sbb
pop
xchg
sub
mov
push
cmp
and
add
adc
inc
movsl
aas
ss
jl
jne
xchg
mov
add
xchg
mov
gs
cwtl
out
in
pop
ja
idivb
xor
and
sahf
jne
sbb
rorb
xchg
or
cld
aas
icebp
insl
dec
mov
sbb
fimuls
push
insb
add
add
loopne
pop
add
adc
rcrb
popf
ret
add
outsl
stc
pop
jg
sbb
add
lret
add
jecxz
cmp
arpl
icebp
test
outsl
inc
xor
jecxz
mov
mov
inc
xor
inc
pushf
insb
lret
mov
jmp
xor
outsl
outsb
push
push
cld
arpl
xor
lret
test
mov
cmp
pop
xchg
pop
lods
cmp
mov
popf
bound
ret
jge
pushf
rcr
hlt
out
jae
in
ja
push
cmc
imul
enter
lock
das
stc
dec
adc
nop
ret
push
xchg
dec
inc
and
icebp
or
jp
jbe
test
pop
pop
lea
jns
dec
lret
jo
dec
lret
subps
addb
pop
add
xchg
push
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
push
push
pop
jle
pop
jl
jle
add
mov
scas
movsb
mov
rcrb
add
and
test
stc
loopne
inc
insl
pop
jmp
or
loopne
pop
lcall
pop
pushf
sbb
sahf
loop
popf
pop
mov
je
sbb
push
clc
push
movsl
inc
movsb
sbb
insl
and
repz
pop
imul
out
imul
sbb
dec
aad
dec
mov
jmp
lahf
inc
clc
and
dec
aaa
insl
pop
enter
dec
scas
push
fiadds
adc
adc
mov
stos
jl
test
or
les
inc
dec
xchg
mov
sbbb
repz
repz
addr16
mov
jmp
scas
repz
add
push
std
mov
jle
jl
inc
popa
cmpsl
pusha
adc
bound
adc
pusha
or
inc
jnp
fdivl
ja
pop
inc
push
addb
push
xchg
pcmpeqd
inc
and
les
mov
inc
mov
push
sbb
fsts
sbb
paddd
pop
imul
inc
sahf
add
dec
push
push
hlt
ss
jb
gs
daa
bound
pop
cli
jp
sar
push
pop
cmp
ret
sub
adc
add
pop
mov
testb
js
sub
xor
adc
pop
scas
bound
insl
adc
sub
lock
lea
movsb
xchg
cmp
insb
repnz
mov
out
xlat
sbb
enter
jle
rolb
xchg
leave
or
add
out
popa
sbbl
lret
sbb
imul
shl
dec
mov
ljmp
push
cmpsl
mov
jge
jne
mov
mov
mov
push
repz
fwait
jnp
mov
out
outsl
addr16
lret
aas
cmp
hlt
jo
cmp
repnz
adc
aam
sub
and
out
pop
adc
bound
shlb
scas
push
jb
push
jne
inc
add
mov
cmpsb
sbb
adc
or
sbb
fadds
fwait
adc
or
add
or
and
jne
push
and
sub
pop
shrl
mov
xor
pop
loope
jbe
shll
xchg
push
mov
pop
jae
sub
pop
xchg
lret
push
sbb
jb
push
frstor
ljmp
sarb
popa
lods
cltd
mov
lret
push
inc
sbb
test
nop
dec
sub
mov
inc
xor
mov
pusha
out
sub
and
aas
popf
add
sub
fdiv
and
daa
das
dec
scas
enter
add
xlat
jbe
outsl
outsl
bound
nop
cwtl
imulb
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
and
jle
jl
jle
push
loopne
hlt
ljmp
dec
mov
jb
mov
gs
pusha
cld
mov
dec
dec
sti
add
std
sbb
add
arpl
inc
int
fs
mov
fistl
sub
fmuls
xchg
dec
mov
stos
repnz
inc
data16
fnstenv
bound
xor
push
xchg
jmp
into
mov
pop
sub
lret
jle
mov
scas
adc
out
sahf
call
or
push
outsb
sub
call
icebp
mov
ds
rcrl
daa
mov
or
cmc
xchg
sbb
xlat
and
lock
out
jmp
mov
mov
ds
rorl
jbe
aam
adc
sbb
loopne
push
bnd
fcmove
cmp
sub
outsb
push
jmp
jl
shl
sti
cmp
add
push
sbb
pop
cld
fsts
mov
ret
jmp
xchg
rorl
test
data16
cli
lret
jno
loope
rcl
adc
aas
jbe
inc
fdivl
loope
jb
mov
addr16
push
aas
cmp
add
xor
hlt
mov
xchg
iret
cmpsl
in
pop
loop
sahf
mov
mov
sbbl
in
stos
mov
add
push
aaa
mov
dec
jne
xchg
fistpl
sub
push
jl
xor
cmp
adc
mov
sbb
aam
adc
dec
outsl
scas
lahf
or
leave
or
adc
lods
or
sbb
inc
leave
and
mov
outsb
jp
shll
insb
inc
mov
jp
xchg
pop
cmp
cmp
and
mov
adc
cmp
lret
ja
xchg
into
test
sbb
rol
outsb
push
nop
push
dec
sub
mov
test
call
lock
fidivs
dec
push
aad
mov
cmpsb
xchg
mov
int
test
cs
inc
fiaddl
and
lods
stos
push
jl
lea
mov
add
fs
dec
cmp
test
push
add
fdivl
pop
scas
push
mov
test
dec
cmp
les
je
push
roll
and
push
adc
ret
iret
and
insl
scas
pop
pop
jb
movsl
xor
xor
sub
xchg
jb
lret
jmp
xchg
stos
nop
and
test
divl
and
push
stc
imul
insb
or
in
test
xchg
nop
je
mov
daa
xchg
arpl
rclb
mov
popf
xchg
leave
pop
jecxz
push
mov
ljmp
rolb
add
add
pop
inc
dec
popa
jno
jne
xor
jle
in
rcrl
jle
jl
jle
jns
or
mov
mov
sub
mov
push
jmp
sbb
outsl
mov
in
aas
fildl
iret
cmp
add
sub
xor
push
dec
popa
dec
loope
push
cmp
es
mov
orb
aaa
jge
ss
int3
pusha
dec
out
shl
jmp
notl
and
push
lret
insb
out
hlt
dec
rorb
ret
out
inc
cltd
and
fdivrl
adc
mov
lods
int3
ror
or
jnp
fnstenv
cltd
divb
mov
xchg
push
adc
mov
mov
dec
jne
out
mov
mov
jns
popa
push
add
rorb
fstl
sahf
inc
mov
sub
sbb
push
orl
leave
and
and
mov
add
mov
scas
pushf
xor
inc
clc
pop
jns
leave
cltd
into
repz
xchg
adc
add
test
mov
push
les
mov
inc
decl
imul
pop
jle
jmp
dec
add
sub
inc
xlat
inc
nop
mov
push
ss
daa
push
pop
lahf
stos
sub
add
jno,pt
shll
jecxz
jle
jbe
sbb
push
xor
and
ss
jae
test
cwtl
sbb
scas
push
cwtl
sarb
loop
fwait
mov
cmp
sbb
stos
and
ss
into
loope
movsb
fwait
mov
rorb
xor
and
insl
push
jo
dec
in
arpl
xlat
lcallw
rcrl
ret
mov
mov
lea
das
call
in
inc
vdivsd
adc
push
push
or
xor
scas
sub
int3
mov
adc
fcomip
lret
outsl
push
in
and
add
sti
outsb
cmpsl
leave
loope
lret
lahf
aas
push
xchg
and
xor
push
ds
es
scas
and
stos
xchg
xchg
cmp
mov
dec
test
popa
inc
scas
setp
cmp
pop
sahf
jecxz
fstpl
shlb
xor
das
lcall
and
outsl
sbb
or
mov
les
mov
push
and
sbb
cmp
mov
sub
aam
popf
push
xor
adc
or
fcomps
dec
fwait
hlt
in
cmp
test
sub
xor
nop
ds
icebp
scas
fcomps
xchg
cmp
fcmovne
je
jg
jl
dec
out
mov
aad
adc
imul
inc
nop
pop
jne
cmp
inc
adc
dec
mov
and
xor
pop
sub
mov
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
ret
fiadds
pop
jl
jle
mov
adc
and
pop
sub
inc
cmp
pop
jmp
data16
das
pop
mov
addr16
push
cli
sub
lods
mov
cld
in
jge
fucom
testl
pop
in
dec
inc
insl
and
xchg
xchg
fsts
mov
lret
mov
sub
cmp
ds
sub
mov
push
jp
aam
arpl
dec
out
inc
mov
popl
push
mov
inc
dec
push
inc
pop
inc
jno
adc
push
aaa
sbb
sub
mov
sbb
insl
rcrb
shll
jne
adc
out
sub
popa
mov
insb
je
sub
lods
sbb
sub
mov
jno
shr
mov
mov
adcb
dec
imul
cmpsl
inc
je
mov
xchg
jnp
mov
das
inc
mov
ds
loope
mov
push
sahf
lock
inc
pusha
fidivrl
jnp
mov
jo
pop
xchg
lock
addr16
repnz
jp
adc
push
andb
cmpsl
bswap
dec
adc
sub
mov
bound
out
in
pop
xchg
jecxz
lret
cmp
loopne
mov
or
fsubrl
aas
pusha
jbe
fisubs
fldl
out
cmp
pop
xlat
push
inc
push
es
scas
lret
sahf
scas
inc
mov
call
test
adc
add
lcall
roll
xchg
add
pop
pop
in
or
imul
std
mov
ds
sbb
dec
sbb
mov
ljmp
xchg
ret
aaa
xor
cmp
stc
push
mov
rcl
fstl
shl
dec
cmp
stc
and
add
pushf
movb
jge
pop
pop
bound
pop
jg
out
cmp
stc
das
pop
shr
xchg
mov
inc
dec
jmp
mov
pop
jo
and
pop
jle
mov
pop
aas
pop
fistps
loope
push
insb
lods
imul
sbb
jcxz
or
aad
add
xchg
rcrb
or
bound
cmp
subb
loope
jo
and
cmc
jnp
ss
jns
pop
xchg
bound
lock
rorl
sbb
xchg
or
cmp
mov
jg
jb
jb
std
and
mov
cmpsb
repz
cmp
repz
pop
movsl
fiadds
sbb
sbb
inc
hlt
xor
mov
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
push
push
mov
jl
jle
imul
mov
fstpt
xor
mov
xor
loope
lahf
test
inc
ret
and
insl
lods
in
lea
lds
adc
ret
sahf
mov
or
movsl
cmpsl
push
and
and
addr16
dec
ja
push
inc
push
les
push
pop
xor
aad
mov
xor
mov
pop
imul
out
lret
lcall
ret
aas
mov
cmp
jns
lock
btr
inc
in
dec
cmp
add
rorl
dec
or
movsb
pop
movsb
push
sub
jns
stc
inc
adc
lock
push
outsb
stos
jo
lods
xchg
pop
pushf
enter
jbe
clc
scas
mov
jbe
stc
pop
and
xchg
jg
test
mov
mov
insb
lock
inc
pop
icebp
aaa
fdivrp
mov
sbb
andb
bound
insb
cltd
shrl
js
cwtl
lock
xchg
ljmp
push
hlt
sahf
je
push
mov
arpl
mov
sbb
push
cmp
aas
insb
loopne
mov
mov
push
imul
lods
cmovge
add
jns
fisttps
add
pop
jg
dec
xor
add
cwtl
push
inc
push
adc
pop
mov
repnz
mov
pop
xchg
in
ja
mov
cmpsb
jb
ja
sub
jmp
add
inc
xchg
sub
mov
inc
add
std
sar
push
lods
cmpsl
nop
cmpsl
out
sub
int3
jne
dec
push
cld
enter
jp
sbb
mov
dec
lret
mov
pop
cmp
and
inc
fsub
jae
outsb
fs
pop
mov
xchg
lcall
jmp
gs
fcmove
int
xor
add
xor
pop
rorl
dec
outsl
nop
lea
pop
or
mov
xor
inc
int3
dec
lcall
xchg
data16
es
mov
sbb
ds
jb
imul
xchg
xchg
movsl
mov
test
scas
jg
test
lock
ja
shlb
into
jmp
push
mov
mov
dec
and
inc
mov
popa
in
jecxz
mov
aad
push
xor
into
stos
lods
ret
mov
push
add
add
gs
mov
adc
adc
jl
lods
aas
sahf
cmp
adc
pusha
add
jne
iret
add
imul
imul
dec
mov
shlb
cmpl
cmc
cs
lahf
xchg
out
mov
mov
inc
mov
sbb
sbb
das
lea
aam
jo
jns
shrb
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
scas
test
mov
jle
pop
jl
jle
jge
jae
hlt
lea
inc
push
fs
adc
mov
jns
push
cmp
mov
inc
pop
add
je
fisttpll
call
cmp
mov
and
imul
add
lock
rcrb
mov
iret
xchg
sbb
and
fst
cmp
out
mov
daa
inc
stc
xchg
lock
inc
test
rcl
inc
sbb
xor
notb
dec
ret
cmp
pop
sbb
jae
ret
mov
int3
sarl
mov
cmc
adc
cmp
stos
arpl
pop
mov
jg
outsl
and
es
jp
arpl
mov
add
adc
and
movsl
add
arpl
mov
aaa
xor
movsl
aad
inc
or
test
movsl
or
sub
jbe
hlt
or
mov
and
xchg
cmp
ljmp
gs
push
fcomi
in
icebp
enter
je
mov
popf
pop
dec
pop
ja
sbb
jnp
or
outsl
lcall
in
int
xchg
mov
adc
mov
sahf
xchg
xor
mov
sbb
sbb
sbb
push
test
lcall
or
ucomiss
cmp
std
paddb
cwtl
sti
jne
and
mov
rorl
and
cs
jg
stos
cmp
out
add
push
cmp
je
stc
inc
cmp
roll
js
lock
and
mov
shrb
xchg
lea
pop
cmpsl
hlt
out
fstpl
xor
in
xor
cltd
push
clc
sarb
add
jne
movsl
outsb
arpl
push
push
daa
jge
push
pusha
push
or
je
and
fwait
sbb
cmc
outsl
push
jp
and
and
pop
or
fwait
mov
mov
arpl
xchg
fldt
sbbb
cmp
mov
add
or
adc
lock
xchg
xchg
and
imul
xor
add
mov
xorb
addl
adc
xor
enter
push
lret
mov
in
xorl
mov
inc
or
lock
int
jbe
les
jnp
leave
icebp
mov
xor
or
cmpsl
and
sub
sbb
inc
test
mov
dec
cli
or
add
push
cmp
inc
call
sbb
adc
ja
scas
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
ljmp
jle
jl
jle
lods
sub
jmp
arpl
out
cli
mov
dec
lahf
inc
cwtl
in
arpl
pop
test
je
inc
insb
cvtps2pi
push
push
mov
push
push
xor
xlat
push
pusha
int
mov
cmpsl
mov
sbb
sbb
fwait
push
and
xor
sbb
scas
lock
das
in
mov
cld
rcl
xor
xchg
iret
xor
pop
je
xchg
gs
inc
and
jb
sbb
aaa
shll
push
xor
adcb
repnz
ds
incl
cmp
das
cmc
push
xlat
adc
or
cmpsb
push
dec
aad
test
sti
je
mov
inc
or
data16
imulb
aam
data16
fbld
push
loopne
push
cmp
jecxz
xchg
fisttpll
out
push
nop
mov
cmc
movhps
pop
xchg
orb
dec
inc
mov
adc
mov
pop
arpl
aaa
inc
mov
mov
mov
bound
mov
pop
mov
jne
sub
lods
add
notb
cmp
lock
xor
mov
ret
clc
cltd
mov
push
in
xor
xor
lock
mov
add
sbb
push
addr16
fcoms
popf
fldt
scas
add
jp
mov
out
mov
cmp
jge
jns
jmp
jbe
arpl
and
cmp
xchg
mov
arpl
jno
cmp
and
push
lods
jmp
jne
gs
mov
popf
or
mov
movsl
pop
in
sub
in
push
jle
cmp
scas
push
sub
cld
insb
inc
cli
sub
pop
ret
test
push
push
rol
adc
subl
fisttps
and
push
mov
lret
aas
push
pop
into
jo
or
mov
mov
rcll
add
enter
mov
add
xor
xchg
push
scas
mov
add
cmc
ret
adc
fistl
mov
test
push
jecxz
cmpsb
outsl
sub
jmp
sbb
or
les
andb
ljmp
xor
adc
push
add
jmp
adc
hlt
ja
aad
cmp
fdivrp
cmpsb
push
test
adc
and
ss
cwtl
mov
add
mov
xchg
dec
mov
shl
jbe
out
adc
lock
repnz
ljmp
dec
aas
sbb
out
leave
mov
dec
dec
aad
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
aaa
push
shrb
jle
pop
jl
jle
push
mov
xchg
pop
out
enter
inc
repnz
aad
sub
stos
push
or
ss
imul
dec
lods
inc
mov
ss
out
inc
divb
mov
int
cmp
mov
mov
cwtl
and
mov
xchg
in
std
hlt
gs
inc
and
jge
iret
leave
cmp
cmp
and
stos
mov
mull
mov
inc
lock
daa
icebp
js
sub
jmp
xor
fimull
test
xor
xorb
cwtl
push
les
or
pusha
mov
sbb
jecxz
ljmp
imul
dec
add
mov
xchg
fidivrl
test
sti
mov
add
mov
inc
daa
lds
pop
ja
ret
lcall
icebp
inc
mov
clc
test
add
add
lea
das
or
xchg
addr16
inc
stos
shlb
or
mov
jl
icebp
imul
cmp
cli
add
adc
addb
ficoms
adcb
sub
in
sub
in
lods
scas
xor
inc
addl
scas
sbbb
xchg
fnstcw
sbb
mov
hlt
gs
stos
lods
or
fisubrl
lods
xchg
js
jg
mov
push
sub
mov
imul
outsl
inc
pop
xlat
push
ficompl
sbb
pop
jge
push
lea
adc
lret
mov
xor
sbb
iret
aam
pop
bound
or
push
push
aas
and
cmpsl
test
jne
ret
xchg
loop
cs
and
dec
inc
addr16
out
imul
outsb
lahf
push
mov
cmpsl
jle
xor
in
iret
jbe
mov
aad
push
adc
inc
xor
test
cmp
movb
cltd
pop
hlt
sub
inc
nop
es
sti
enter
or
or
xchg
jno
xchg
adc
int3
fstl
fidivl
push
push
sbb
sti
sub
inc
pop
pop
loope
cli
cmp
pop
jl
mov
mov
enter
mov
cli
xchg
add
nop
inc
fidivs
andl
lds
outsl
mov
rcll
pop
in
xor
test
pop
xchg
mov
aam
cmc
shrb
xlat
insb
scas
jae
cmp
xchg
cwtl
movsl
dec
scas
push
dec
ljmp
xchg
mov
jge
sbb
out
or
mov
inc
xor
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
and
adc
ss
sub
jle
sbb
mov
jmp
lods
push
cli
push
pop
jae
cld
fstp
sahf
ljmp
ljmp
imul
je
push
push
lods
xor
cmp
mov
mov
jnp
xchg
jl
mov
orl
pop
mov
shlb
imul
add
add
sbb
xchg
dec
pop
ds
stc
insl
out
or
add
dec
xchg
add
sarb
push
add
inc
mov
ljmp
aas
ror
push
lret
lea
inc
xchg
enter
cmpsl
outsl
xor
cmp
pop
popa
lods
mov
jne
mov
test
cmp
in
mov
mov
xorl
cmpsb
push
pop
xor
fucomip
dec
cmc
in
lcallw
ss
fstpt
sbb
add
int3
cmpsl
lock
cwtl
outsb
scas
xchg
imul
dec
fldl
loope
xlat
and
xor
jecxz
andb
jl
cmp
push
mov
mov
inc
mov
popf
cmp
push
adc
sbb
outsb
sub
mov
popa
xchg
mov
ja,pn
pop
mov
in
dec
cmpl
lret
mov
idiv
push
jno
mov
adc
mov
sub
xchg
loop
jmp
pop
xchg
fists
sub
cmpsl
mov
push
test
sti
aaa
lock
addr16
fdivr
fidivrl
adc
jnp
in
push
lock
mov
add
test
int
mov
add
mov
repz
adc
push
xchg
mov
lret
xlat
aaa
mov
mov
mov
outsl
outsl
add
test
loopne
ja
data16
mov
scas
in
lea
jecxz
sbb
inc
push
mov
mov
fcompl
sar
out
imul
adc
test
push
mov
push
push
clc
jmp
enter
cmp
sarl
into
clc
lock
pop
adc
mov
mov
push
cmpsb
push
sbb
repnz
shll
and
adc
mov
insl
ret
push
mov
gs
call
add
movsl
sbb
cwtl
enter
xor
jae
mov
mov
push
jp
or
push
cmp
scas
popf
xchg
add
rolb
and
mov
out
ret
pop
and
pop
xor
jg
jns
xor
cmp
ror
push
ja
push
sub
movq
xor
adc
cltd
testl
or
adc
inc
popa
jle
jmp
data16
xor
daa
push
testb
cmc
jbe
sarb
pop
mov
push
lds
xchg
ret
sub
in
adcl
lahf
pop
popf
fistpl
and
pop
xor
and
addr16
inc
adc
dec
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
and
push
rolb
aad
mov
imul
repnz
fmul
mov
sti
adc
stc
adc
and
sbb
mov
fwait
sub
jno
cmpb
repnz
dec
mov
jne
out
aaa
xor
pop
lahf
jns
xlat
dec
js
mov
mov
adc
and
scas
sbb
jbe
pop
ret
sbb
sar
mov
movsl
out
addr16
adc
outsb
hlt
repnz
mov
ret
movsb
pushf
fnsave
push
outsb
push
mov
lcall
cs
ja
divb
cmc
imul
gs
outsb
mov
cmpsb
das
enter
out
stos
pop
dec
mov
sbb
dec
js
cld
mov
jmp
sub
sbb
in
sub
rcll
or
xor
jnp
adc
push
cmp
inc
xchg
js
jns
mov
cmp
adc
inc
jne
mov
pop
sahf
cld
inc
inc
xchg
idivl
outsb
pop
and
mov
mov
jp
in
js
xor
test
stos
ret
mov
insl
je
sbb
pusha
mov
popf
inc
fsub
inc
mov
sti
icebp
imul
cmp
mov
xor
push
push
push
mov
sbb
pop
lahf
popf
xchg
pop
mov
sub
pop
in
fs
inc
insl
xchg
sbb
pop
ljmp
inc
sub
jns
pop
repz
test
pop
pop
sub
lahf
push
pop
xor
add
mov
dec
push
add
jmp
js
in
mov
outsl
out
pop
pop
js
mov
outsb
mov
repnz
in
cmpsb
mov
movsl
fwait
popf
sub
cmp
sbb
xor
int
push
pop
dec
imul
pop
aam
mov
and
jg
test
cmp
loopne
in
popf
mov
xor
jge
shll
mov
lea
jg
mov
inc
mov
mov
pop
in
out
dec
fisttpl
pop
xchg
lock
jno
lret
sbb
add
push
mov
xor
and
mov
fcmovb
sub
push
cmp
imul
inc
fstl
mov
pop
pushf
and
test
repz
stc
sarl
xchg
and
in
fistps
aas
xchg
push
cmp
lret
sarl
inc
mov
cmp
add
les
inc
inc
fstl
pop
shrl
pop
lds
pop
mov
inc
mov
xchg
jno
push
arpl
inc
loopne
pushf
cmp
aas
jns
mov
mov
lcall
insw
push
jo
inc
mov
adc
mov
stos
int
jnp
ss
jmp
sub
sub
sub
pusha
mov
popf
inc
mov
aad
cltd
ret
cmp
xor
fsubrs
fldl2t
dec
add
add
sub
test
test
mov
cmp
cmpsb
xor
sub
jle
cmp
or
mov
mov
inc
andl
pushf
sub
xchg
test
and
adc
mov
xor
cltd
mov
jge
jmp
push
std
cmc
dec
cmp
call
jmp
cld
insl
movsb
enter
pop
icebp
je
jle
xchg
cli
add
jle
push
xor
sbb
addl
cmp
mov
bound
mov
add
fmuls
std
stc
fbld
fidivl
clc
int3
push
cmp
cs
fldenv
in
mov
mov
jp
or
pop
dec
rolb
fstpl
jnp
clc
and
mov
and
aad
push
mov
insl
cmp
sar
cs
popa
cltd
xlat
xchg
push
mov
loope
sbb
sbb
test
push
inc
mov
push
adc
mov
add
ljmp
adc
sub
lea
lea
loopne
sub
and
pop
rorb
aam
fcoml
jge
fsubs
repnz
jae
roll
xlat
cmp
and
and
insb
xchg
testb
lds
dec
repz
jl
in
xchg
add
iret
xlat
addr16
jo
arpl
decl
inc
bnd
loop
bnd
mov
lock
push
cltd
cs
sti
xchg
and
mov
fidivrs
int3
add
test
rclb
jno
adc
mov
xor
jno
sub
xor
jno
xlat
xchg
cmc
pop
lds
add
adc
or
add
add
pushf
jbe
aaa
scas
mov
stos
mov
rcll
jo
shlb
sbb
cli
cmp
or
aaa
loopne
or
sub
jge
sbb
xchg
sub
filds
aad
lds
int
scas
outsl
jo
addr16
lret
shll
pop
test
in
jp
rorl
xchg
and
int3
out
sub
jecxz
adc
je
mov
fldl
lcall
cmp
ja
lea
and
mov
push
pop
or
nop
sub
iret
outsb
and
stc
xchg
pushf
shlb
sarl
inc
dec
insl
out
push
out
xor
out
xchg
add
inc
outsb
mov
pop
neg
dec
rorb
and
sbb
push
lods
out
or
lret
ret
mov
leave
ljmp
cmp
inc
push
les
mov
cmp
jl
add
mov
adc
mov
pusha
sbb
push
hlt
aad
bswap
imul
sub
xchg
js
bound
lcall
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
add
jle
sub
jle
pop
jne
loopne
ss
add
mov
pop
sbb
sub
popf
or
test
pop
jmp
stos
and
inc
sbb
cltd
xchg
sub
adc
out
jecxz
push
cmc
loope
addr16
daa
fldcw
inc
xor
xchg
dec
xor
inc
xor
or
adc
shlb
popaw
sub
std
test
outsb
bound
outsl
sub
xchg
out
ret
xchg
add
sbb
xlat
add
fidivl
mov
mov
add
xchg
or
out
shlb
jns
das
movsl
cmp
xor
jg
ja
adc
lret
js
jp
lods
movsl
aam
rep
mov
sarl
add
cmp
adc
lea
sbb
or
jnp
in
pop
push
xchg
ja
add
mov
rclb
mov
je
xor
or
push
loopne
std
mov
sub
mov
mov
scas
pop
jp
inc
push
popf
or
fldcw
fadds
fs
and
pop
scas
adc
jb
popa
sbb
pop
mov
push
xorb
sub
loopne
adc
les
mov
outsl
movsb
fnstcw
inc
cmp
aas
xchg
mov
cmp
insb
xor
aaa
cmpsl
adc
les
mov
fisubrs
out
loopne
enter
cmpl
pavgw
loop
popf
push
call
cwtl
mov
jne
or
rol
ljmp
in
pop
xor
imul
in
pop
fimuls
out
test
pop
shlb
cld
arpl
shlb
jmp
movsl
pop
dec
mov
mov
scas
inc
fcoml
push
neg
dec
push
sub
movsb
pop
xchg
call
cmpsb
adc
cmp
xor
jo
cli
pop
mov
mov
fs
insl
fisubl
test
cltd
pop
movl
int
jo
in
mov
hlt
xchg
sub
insb
pop
into
inc
out
pop
mov
xchg
push
pop
les
notb
sub
or
lret
std
inc
sbb
adc
lea
repnz
jb
sub
xchg
arpl
icebp
mov
jno
pop
adc
ds
scas
repz
repnz
cmp
enter
cwtl
adc
into
push
shll
std
dec
mov
ret
mov
inc
data16
xchg
jmp
lock
addr16
xchg
jmp
jp
lea
add
jmp
shrb
fs
cmp
sbb
ja
push
std
ljmp
cmpsb
push
filds
inc
lock
jo
addr16
fwait
sub
xor
xor
insb
nop
cmp
pusha
add
popf
jb
icebp
int3
stos
cmp
mov
fadd
and
shr
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
sbb
cmp
mov
or
lret
mov
aad
adc
jae
int
xor
dec
in
inc
cmc
dec
add
jg
sbb
test
and
cmp
xor
arpl
mov
mov
leave
lret
jp
imul
sti
mov
loope
jp
mov
or
sahf
popa
pop
stos
push
cmp
jns
aad
jb
and
dec
aam
jge
pushf
pop
jmp
ljmp
lock
movsl
arpl
xchg
ret
mov
in
sar
scas
loopne
outsb
test
add
dec
in
sar
adc
xor
and
inc
dec
orb
cmp
outsb
in
sub
imul
ljmp
add
test
dec
xchg
lock
cmpsl
adc
jns
out
ret
call
fwait
and
cmp
aas
sub
cmc
popf
and
sbb
xor
sub
leave
inc
or
pop
jns
jns
dec
and
negl
sub
sub
xchg
cwtl
cmpsl
jno
outsl
jp
or
xchg
mov
sub
push
adc
rorl
mov
sub
ja
shlb
xor
xchg
mov
mov
push
int
movsl
and
jns
add
js
unpcklps
pop
rcrl
pop
inc
xchg
push
mov
xchg
call
dec
cmp
rol
xchg
mov
movsb
mov
test
xchg
jmp
and
push
mov
insb
das
pop
jae
popa
rcr
ljmp
and
mov
mov
popa
xchg
dec
fs
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
xchg
lret
stc
inc
cmp
mov
xchg
aam
xchg
arpl
bound
jg
testb
cmp
cmp
rcl
ds
aaa
mov
cmp
out
cmp
outsl
hlt
jnp
leave
test
mov
xchg
stos
add
pop
pop
std
ljmp
test
loop
inc
inc
mov
lods
test
icebp
jae
and
jo
test
mov
inc
sarl
js
outsb
or
scas
mov
jecxz
call
cmp
data16
imul
pop
push
sub
xchg
and
aam
scas
cs
arpl
mov
rcl
cld
pop
fucomp
sub
ljmp
test
pusha
adc
lds
add
rorb
cs
xor
imulb
sahf
mov
lock
mov
dec
mov
movsl
xorb
push
notb
in
cmpsl
aad
js
hlt
insl
fstps
sbb
cld
mov
and
sub
repz
jecxz
ficoml
or
fisttpl
aam
jg
mov
out
push
and
loopne
test
sub
dec
stc
fmulp
fs
adc
daa
lret
aaa
pop
jo
or
xlat
fnstcw
rol
stos
add
test
or
outsb
or
push
adcl
xchg
cmpsl
and
std
xor
test
rorb
addr16
pop
addr16
or
lahf
sti
xchg
popf
pop
adc
mov
divb
ljmp
mov
clc
sahf
push
dec
sub
dec
push
and
in
es
and
sub
or
enter
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
test
std
mov
cmp
sub
or
pop
add
in
les
ds
imul
inc
aaa
addr16
int3
in
daa
das
aas
add
aaa
xor
fiaddl
mov
orl
jecxz
movsb
mov
leave
adc
adc
dec
mov
cmp
and
push
cli
push
push
push
push
pusha
or
pop
cmp
xor
push
fcomp
jbe
ret
pop
push
mov
outsl
jbe
push
mov
int3
jp
adc
xor
and
dec
and
add
test
std
imul
inc
test
jge
mov
adc
mov
pop
push
mov
insb
fisubl
movsl
and
and
adc
aad
sbb
cs
icebp
xor
lods
sbb
ss
push
and
adc
or
test
movsl
in
inc
sahf
outsb
pop
inc
ss
xchg
js
mov
repz
sbb
js
adc
in
mov
cmpsl
mov
cmp
mov
mov
lret
test
ja
aas
aas
das
or
cwtl
lcall
pop
pop
movsl
into
dec
sbb
sub
push
and
dec
mov
xchg
adc
cmp
out
test
clc
jns
mov
nop
cmpsl
sbb
jne
lret
out
sub
andl
in
sarl
int3
mov
push
lock
mov
and
enter
cmp
inc
push
pop
and
cmp
sbb
or
or
inc
push
fadds
ljmp
xor
xchg
jp
sar
or
jmp
add
test
jmp
and
in
popa
push
lret
xchg
into
mov
jle
mov
int3
lea
mov
arpl
test
inc
fnstcw
mov
insb
lahf
mov
mov
sarl
lods
cmpsb
push
mov
inc
pop
and
into
nopl
xchg
add
and
lds
pop
insb
ljmp
cmc
aas
outsb
sub
shl
sarl
sbb
xchg
clc
leave
lock
movsl
icebp
sbb
fidivrl
or
icebp
dec
int3
and
in
out
lea
mov
shl
mov
aaa
fstpt
pop
xchg
push
jo
arpl
outsl
xchg
mov
push
into
and
jge
jno
fs
stos
leave
sti
ret
adc
and
add
mov
imul
rcl
into
arpl
ljmp
add
pop
xor
inc
adc
push
cli
jbe
imul
lea
push
mov
mov
jbe
mov
inc
inc
insl
mov
cli
xor
sarl
pop
cmpsb
xchg
dec
mov
neg
jo
repnz
scas
inc
push
pop
adc
loopne
add
and
aam
movsl
pop
repnz
or
cmpsl
pop
pop
fwait
daa
mov
push
scas
jns
or
mov
fisttps
mov
sub
jo
mov
pop
pushf
xor
pop
inc
or
push
in
nop
push
mov
pop
push
xor
mov
shrl
adc
xchg
inc
or
icebp
push
andb
pop
inc
push
sub
cmp
jb
rol
test
mov
shl
inc
lcall
and
and
mov
out
je
leave
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
mov
dec
or
jle
add
aad
xchg
cld
movsl
mov
jmp
adc
lret
in
shll
pop
lods
loopne
cli
fsubl
icebp
mov
or
jne
add
aas
fbld
mov
lcall
xlat
sahf
mov
dec
ja
push
repz
les
lret
out
in
xor
lods
rcrl
imul
add
and
mov
rorl
xchg
jmp
cmpsl
sub
or
icebp
xor
adc
es
cmp
fcmovb
jnp
std
jo
push
addr16
sbb
jl
add
mov
icebp
scas
or
xchg
sub
ss
scas
out
jge
pop
or
pushf
pop
add
das
lods
shl
cmp
stos
out
fdivl
pop
in
xor
jl
jno
cmp
in
add
ljmp
sbb
inc
mov
sbb
aam
in
stos
pusha
xlat
pop
push
aam
xor
fnsave
ret
mov
cld
push
lret
mov
xchg
jle
negl
and
cmp
scas
mov
jb
jmp
jno
jne
faddl
xlat
push
push
in
xchg
mov
arpl
mov
imul
pop
movsl
sub
cmp
pusha
and
mov
xor
xor
pop
cs
cmc
cmp
movsb
mov
add
int
jp
shrb
dec
mov
fsubs
or
lcall
xor
xor
mov
dec
stos
test
icebp
mov
lahf
mov
push
and
mov
pop
xchg
out
jno
stos
add
lods
js
loopne
dec
movb
mov
test
lahf
das
movsb
and
cmpsb
dec
mov
jl
xchg
cmp
fisubrs
mov
sbb
xchg
test
lods
rcrb
sub
arpl
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
mov
jle
add
stc
jbe
out
pop
test
bound
repz
subl
das
jmp
push
adc
popf
rolb
packuswb
push
xchg
or
push
inc
sbb
dec
add
mov
dec
jmp
sbb
xor
es
dec
fsubrp
out
mov
dec
fstpl
or
pusha
mov
jo
or
ret
xchg
test
sub
mov
gs
add
pop
mov
mov
test
cmp
cmp
adc
mov
repnz
push
sub
or
or
xor
xchg
idiv
push
jmp
dec
mul
ss
sbb
push
adc
push
mov
cmp
xchg
jmp
fstpl
xchg
xor
add
cmp
sahf
or
idivb
sbb
dec
pop
pop
push
xor
inc
pushl
dec
aam
hlt
and
ret
push
daa
int
icebp
in
jmp
pop
andl
adc
jge
lds
mov
inc
adc
pop
dec
xor
xchg
adc
push
pop
pop
ret
fstpl
add
xchg
pop
mov
enter
dec
xchg
les
pop
dec
in
mov
sbb
outsb
cmp
lock
call
popa
inc
dec
int
push
outsl
xor
scas
add
test
xor
mov
xchg
add
pop
mov
fs
aaa
and
xlat
add
sbb
cmp
insb
mov
cli
push
cmp
insb
dec
cmp
in
push
jo
mov
outsl
sbb
add
add
fwait
adc
or
fsubrs
pop
fstpl
jecxz
lock
pop
add
inc
sarb
sbb
outsb
add
jne
mov
loop
dec
jp
aaa
ficomps
clc
add
outsb
xchg
nop
push
loope
jg
fimull
es
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
xchg
and
jle
add
xchg
iret
pop
int
aad
imul
inc
addr16
fildll
cmpsb
cltd
sub
sbb
lret
jle
cmp
inc
push
adc
cmpsb
sbb
hlt
dec
mov
mov
push
sarl
lcall
dec
or
repz
xlat
outsb
enter
in
push
shr
repnz
jb
aad
es
cs
lods
sub
adc
xchg
xor
lock
mov
lret
sti
into
jl
mov
pop
pusha
cld
pop
idivl
out
mov
insb
les
fimuls
insb
push
dec
add
inc
pop
in
mov
clc
dec
movsl
add
pop
in
and
bound
add
shlb
pop
pop
pop
popa
xchg
lock
divb
sti
xor
push
cmpsb
mov
mov
pop
repnz
adc
mov
sarb
aas
out
ret
push
pop
push
inc
in
dec
adc
mov
negb
xchg
sub
adc
jmp
test
push
ret
pop
pushf
imul
je
test
pop
pop
sbb
lahf
xor
and
jge
xor
loop
push
push
mov
pop
popf
loope
test
push
push
test
cmp
mov
push
sub
jp
or
mov
inc
mov
cmp
sub
jbe
rorb
aas
hlt
fstpl
xchg
cmc
dec
mov
cmp
xor
out
lock
adc
or
inc
stc
pop
aas
and
test
enter
jge
sbb
sbb
into
mov
or
outsl
mov
popf
mov
mov
or
adc
loopne
cltd
jmp
inc
adc
outsb
aaa
add
inc
ja
mov
xor
imul
xchg
repz
jl
dec
fs
aaa
jmp
adc
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
shlb
pop
sub
jle
add
sub
lds
mov
jecxz
sub
or
into
jo
dec
test
pop
test
sarb
jne
fimuls
cs
mov
push
mov
in
dec
pop
xor
add
pushf
lods
sub
jbe
inc
dec
rolb
pushf
cld
and
hlt
cmp
ret
je
lods
xorl
jb
push
repz
push
movsb
push
call
notl
ljmp
adc
xchg
mov
xchg
mov
cmpb
addr16
cmp
rcrl
sub
xor
out
pop
stos
out
stos
mov
mov
shll
and
mov
or
ds
mov
adc
xor
lahf
mov
mov
cmpsl
cmp
fstpt
pop
sbb
loop
jmp
mov
push
and
or
pop
inc
sbb
clc
data16
adc
xchg
pop
sub
dec
jg
dec
mov
js
shrb
lret
jl
sub
loopne
sti
in
mov
mov
xchg
in
add
test
movsl
aas
aas
je
test
pop
xchg
cmp
mov
out
dec
xor
ds
mov
sahf
push
pop
cld
pusha
jne
mov
sub
arpl
orl
xchg
stos
push
fwait
test
movsl
insb
les
lcall
gs
pop
mov
adc
icebp
jg
outsl
call
cmp
push
mov
aad
outsl
mov
jge
cmpsb
push
sbb
mov
add
outsb
cmc
adc
int
xchg
push
shrl
icebp
orl
enter
xorb
xor
inc
lods
test
hlt
sbb
sbb
mov
and
push
cmp
or
and
dec
lods
fld
jg
insb
and
in
popa
mov
adc
sub
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
mov
and
jle
xchg
or
movsl
dec
leave
sub
out
jb
hlt
lods
cmp
lret
movsl
inc
cmp
int
pop
lock
dec
xor
fsubs
or
cmp
enter
stos
mov
stos
popf
out
pop
adc
fbld
dec
fists
sub
jnp
inc
mov
out
lea
pop
mov
push
cld
out
ljmp
sahf
mov
push
call
pop
inc
loop
mov
xchg
sbb
jnp
mov
sub
sbb
stc
dec
jg
inc
mov
pop
scas
ret
xchg
pop
rorb
jae
push
popf
outsl
inc
inc
insb
mov
int
push
fisttps
cwtl
outsb
inc
sqrtps
push
in
std
sub
cmpsl
sbb
mov
lea
inc
pop
or
in
fimull
popf
out
dec
pop
xchg
insb
orb
cmp
fs
pop
fnstenv
adc
inc
cli
pop
orl
pushf
mov
into
fsubrl
jnp
dec
push
rcrb
fiadds
push
mov
mov
call
sbbb
or
dec
sbbl
rolb
xor
jmp
cli
cmp
push
out
ja
sub
outsl
mov
mov
pop
push
inc
out
or
iret
xchg
and
push
add
lret
les
ficompl
adcb
pop
xchg
popf
jae
testb
inc
add
int3
sbb
pop
dec
xor
inc
xor
repz
mov
out
xchg
xchg
mov
cmp
int3
imul
jbe
push
jno
shl
sub
out
sub
pushf
sub
push
xchg
mov
add
add
pop
lock
mov
andl
scas
add
stos
mov
hlt
push
push
mov
shlb
loope
aas
sti
cmpb
push
cld
divb
ret
aad
xor
push
inc
mov
jmp
rorl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
mov
enter
jl
jle
adcb
pop
cmpsl
push
dec
push
loop
mov
lods
shrl
mov
outsb
adc
sarl
push
cld
and
or
xchg
xchg
xor
int3
sbb
push
sbb
jnp
lcall
int
out
push
xor
gs
mov
rdtsc
in
loope
xchg
xchg
mov
mov
cs
cwtl
subb
in
testb
pop
scas
test
sub
or
xchg
add
gs
push
je
rcrl
bound
das
lahf
loope
aas
xor
int
and
scas
pop
movsl
dec
and
repnz
cmc
cmc
pushf
xchg
out
insb
adc
xorl
ret
sbb
iret
lods
repz
dec
mov
out
jo
sbb
es
imul
fld
sub
movsb
icebp
xor
das
fneni(8087
ret
ror
outsl
mov
cld
fidivrl
mov
das
hlt
outsl
fs
into
mov
xor
push
ret
loopne
push
mov
inc
xchg
jno
mov
ss
pop
mov
and
loope
sbb
cmp
jl
jge
lret
mov
outsb
aaa
lret
dec
popa
inc
add
stc
aas
in
nop
add
add
insl
fsubl
lret
dec
jmp
sbb
cmp
movsl
arpl
cmp
sbb
cmpsb
sbb
inc
mov
incl
jno
lret
jns
stos
xor
lcall
jb
push
jbe
and
mov
icebp
ret
sub
ljmp
push
push
mov
test
sbb
push
cld
adc
and
push
sbb
push
or
jns
pop
dec
out
shrb
divl
orl
mull
ds
ret
sbb
dec
lcall
sbb
cmp
mov
mov
jbe
lock
faddl
mov
adcl
mov
sbbl
jmp
pop
push
jg
xor
add
jo
jle
and
jle
dec
xchg
mov
test
xchg
and
push
dec
xchg
push
sbb
pop
pop
xchg
mov
push
jbe
dec
mov
cmp
xchg
cwtl
js
xor
inc
mov
mov
cmp
mov
jle
jl
adc
mov
lock
add
rcl
xchg
inc
mov
jo
push
adc
icebp
inc
push
sbb
and
lret
push
fucomi
icebp
mov
push
pop
jle
testl
add
mov
jnp
mov
mov
jnp
xor
adc
xor
push
cmpsb
insb
pusha
aam
iret
push
mov
nop
das
pop
test
cmc
mov
cs
fadd
sbb
push
mov
stos
inc
xor
push
cmp
adc
lods
in
dec
mov
cli
push
loop
rol
lea
fs
cltd
pop
adc
or
jo
cmp
xorb
pop
xchg
nop
push
mov
stos
loopne
mov
jg
xor
xchg
stos
pop
and
int3
mov
scas
cmp
push
adc
inc
inc
jle
nop
push
jge
pop
nop
xchg
add
adc
mov
nop
sbb
inc
and
mov
xchg
mov
aam
in
lods
in
pop
rclb
pop
jge
imul
loop
rcl
sub
or
lods
out
scas
inc
shl
fcmove
pop
mov
dec
mov
mov
dec
aam
push
cmp
add
mov
aaa
les
sub
int
cwtl
xor
push
xchg
subb
loopne
push
jno
out
hlt
cmp
inc
hlt
adcl
cwtd
and
addr16
pop
int
movsb
dec
and
pop
inc
sbb
rorb
out
push
lods
shrl
in
es
cmp
or
mov
pop
sub
outsl
jg
mov
insb
mov
scas
sbb
mov
ss
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
mov
and
jle
jl
mov
aam
and
les
lahf
stos
adc
or
push
leave
add
pop
call
xor
inc
cmp
pop
pop
das
xchg
enter
inc
inc
fildll
test
subb
dec
clc
cmc
fists
xor
sbb
in
push
sbb
jmp
imul
test
arpl
fisttps
and
cmp
roll
xchg
jle
inc
in
out
pop
int
adc
out
ljmp
shrl
adc
subl
mov
and
cli
inc
popf
dec
xor
push
mov
jb
inc
add
sahf
jb
fucom
out
stos
and
pop
lock
cmp
and
pop
mov
inc
pop
fistpll
ja
xchg
add
js
mov
js
cmpsb
fs
sub
mov
aaa
shl
xchg
stos
lahf
in
icebp
in
jle
push
mov
shlb
or
pop
jbe
mov
push
sbb
and
inc
pop
pop
aad
scas
popa
mov
stc
addr16
icebp
popf
es
aaa
push
mov
fnsave
fsts
cmp
js
add
lcall
sbb
outsb
cmpb
pop
xlat
ret
and
lea
loopne
mov
mov
ret
dec
jb
mov
or
push
fucomi
data16
jnp
lahf
clc
mov
das
shl
or
mov
xchg
cmp
pop
mov
mov
leave
movsl
fistl
or
sub
adc
dec
outsl
push
pop
mov
test
sub
pop
into
stos
pextrw
dec
test
mov
shr
cmp
lahf
jbe
push
sbb
push
popa
sahf
fldcw
sbb
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
insl
repnz
jle
jl
jle
mov
sub
cmp
imulb
fwait
add
dec
test
sub
mov
adc
test
rclb
jecxz
int3
cvtpi2ps
ljmp
in
bound
notb
pop
loope
ss
ret
push
cmp
pop
out
pop
mov
push
out
or
mov
xorl
jg
mov
int3
mov
push
add
into
daa
adc
fidivrs
push
and
dec
ret
adc
mov
xor
xor
pop
clc
xchg
fmuls
outsl
push
push
add
movsb
shlb
in
popf
mov
hlt
orb
cld
push
negl
test
ret
mov
pop
dec
arpl
out
push
xor
push
jge
lret
pop
enter
add
aad
add
outsb
repz
sbb
gs
cmp
call
mov
xchg
or
inc
fstpl
mov
jno
push
xchg
push
push
sub
and
mov
les
cmp
dec
sub
add
sub
dec
out
pop
not
adc
add
fstpl
lret
pop
mov
aas
add
xor
xor
shrl
inc
in
jno,pt
insb
sti
cmpsb
add
mov
outsl
sub
sbb
push
inc
xorl
push
jo
stc
shll
push
test
mov
jb
xchg
out
stos
mov
js
int
cmp
sbb
push
fsubl
ret
popa
int3
in
jecxz
mov
scas
in
fs
call
jg
inc
cmp
arpl
mov
mov
cmp
aad
inc
stos
enter
pop
lea
mov
cltd
movsb
mov
fnstcw
test
pushf
sub
aaa
shrl
mov
and
pop
fiaddl
js
mov
jnp
mov
xorb
jo
test
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
faddl
leave
call
shll
sub
xor
inc
sub
push
sahf
hlt
shrl
adc
movsl
mov
jle
mov
aad
ljmp
push
popa
jne
and
cwtl
sbb
int
insb
jb
ficoml
daa
inc
fldenv
aad
in
nop
mov
pop
fcmovnu
loope
shlb
add
lock
pop
pop
outsl
lds
decl
addr16
and
mov
sub
push
cmpsb
cwtl
je
pop
mov
jp
mov
sti
push
test
inc
cmp
ljmp
mov
jnp
je
and
pop
adc
scas
sbbb
push
mov
xchg
outsl
and
rorb
jp
int3
pusha
sbb
out
push
imul
pop
sbb
mov
negl
xchg
or
pop
mov
ficoml
jo
jge
outsb
cmp
push
mov
push
test
cwtl
add
mov
dec
lods
push
adc
mov
lds
in
pop
and
adc
outsl
pusha
fisubrl
icebp
sbb
pop
push
xchg
inc
int3
push
sbb
js
je
inc
aas
xchg
mov
and
push
inc
xchg
mov
jne
lahf
jno
cmp
mov
xchg
out
pop
hlt
jbe
or
adc
adc
cld
sbb
call
dec
xor
fwait
inc
faddp
fcom
fisubrs
rcr
in
fiaddl
push
das
dec
outsb
into
fnstsw
push
jecxz
jne
scas
inc
mov
mov
jg
xchg
fninit
pop
dec
scas
cmp
imul
shrd
add
sbb
xchg
add
stos
test
fstpt
mov
out
sar
add
bnd
pop
sbb
lcall
imul
xor
ss
rorl
insb
hlt
jp
call
pusha
mov
jb
mov
sbb
mov
gs
in
lahf
imul
test
sbb
inc
rep
xchg
xor
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
pop
add
xor
jle
and
jle
repnz
sub
xor
or
imul
pop
iret
mov
mov
out
mov
dec
jl
lods
fincstp
and
xchg
sub
add
push
xchg
aad
into
pop
lcall
andb
loope
sbb
add
jns
sbb
xchg
call
ja
xor
cmp
sbb
stc
mov
pop
and
fwait
pop
in
repnz
or
out
clc
leave
fsubrl
js
dec
adc
lea
in
in
jl
jbe
repnz
mov
sbb
adcl
insb
push
sbbb
loopne
arpl
lods
sub
sbb
xor
fcomp
js
or
scas
call
aaa
pushf
xchg
or
loope
popf
mov
push
jmp
test
dec
lret
jle
ljmp
ljmp
enter
ret
hlt
push
xor
sahf
jno
pop
iret
call
dec
dec
je
mov
lret
inc
pop
insl
mov
test
addl
enter
mov
dec
inc
into
add
add
mov
inc
xor
loop
sbb
lcall
or
popa
pop
fldenv
lcall
jl
dec
xchg
fmuls
rcll
ds
cmpsl
push
jp
jo
cmpsl
shrl
dec
loop
ja
movsl
sbb
stos
xlat
sub
pushf
mov
cmp
push
xor
aad
pshufw
mov
or
pop
and
xor
sahf
clc
pop
xchg
sub
push
inc
xchg
pop
fnstenv
sarl
and
sbbb
add
idivl
mov
aad
ficompl
scas
aam
addr16
std
mov
mov
cs
cmpsl
mov
add
sbb
in
les
cmc
cmp
mov
pop
in
mov
inc
sub
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
outsb
aam
int3
fcomp
jle
and
jle
jmp
xor
mov
adc
inc
jbe
xchg
outsb
out
jb
push
andl
daa
mov
fiadds
hlt
inc
pop
cs
cmc
and
dec
rcr
mov
adc
xchg
in
cmp
test
jp
idiv
icebp
pop
fiadds
pop
test
cmp
adc
cmp
add
jne
mov
je
dec
insl
or
push
in
test
sub
repnz
das
daa
push
mov
sub
inc
loop
and
imul
lcall
fstps
shll
sbb
xor
add
repnz
xor
subl
sbb
out
mov
jmp
and
xchg
nop
std
add
test
jl
fsubrl
mov
loopne
lcall
jno
sahf
clc
dec
stos
enter
xchg
mov
or
xchg
adc
pop
push
xchg
push
mov
jns
sahf
pop
inc
xor
push
lods
pusha
push
pop
dec
inc
push
jne
mov
xor
imul
mov
cmp
push
push
arpl
cld
add
xchg
insw
das
pop
jns
mov
lock
es
mov
aas
push
pop
push
add
sub
nop
js
js
xchg
call
pop
into
sub
mov
mov
gs
dec
xchg
add
jle
push
or
pop
xchg
fwait
jl
bound
bnd
lcall
inc
cmp
out
lahf
rclb
sbb
outsb
movsb
insb
stos
mov
xor
pop
repz
lea
jp
gs
mov
mov
out
sbb
nop
mov
jp
inc
dec
mov
jecxz
fsts
inc
lea
repnz
int3
adcl
and
jge
pushf
adc
loopne
pop
push
xor
shlb
ret
xchg
rcrb
xchg
mov
adc
out
or
jbe
insl
pop
out
call
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
adc
pop
push
in
cli
add
imul
insb
test
cli
lods
dec
mov
mov
pushf
or
mov
lock
sub
lcall
xchg
xor
or
aam
xchg
xchg
jns
lahf
inc
xchg
mov
jmp
aam
pop
decl
mov
nop
jl
fistps
mov
cs
sbb
ja
gs
fldt
sub
cs
or
pusha
sbb
jl
or
movsb
and
std
ljmp
jne
fcomi
fnstsw
lds
xor
jge
inc
mov
inc
sub
sub
lods
pop
jl
test
in
pop
mov
mov
xor
sbb
loope
lcall
sbb
repz
movsb
les
inc
lods
fstl
hlt
pushf
add
inc
aas
sbb
lods
add
lcall
xchg
push
and
add
mov
shrl
stc
cltd
decl
add
jg
arpl
push
xchg
push
pop
in
mov
push
rolw
mov
mov
push
out
mov
cld
pop
sub
adc
mov
imul
jg
fxch
mov
push
push
loope
inc
imul
insb
std
outsb
add
imul
mov
add
mov
add
gs
jno
add
mov
fnstsw
dec
pop
pushl
lods
sbb
xor
popa
xor
in
dec
adc
fbstp
and
push
psllw
sahf
ret
lret
je
pop
cmp
and
dec
gs
movsl
mov
lds
sbb
cs
push
mov
lods
jecxz
lcall
sub
add
mov
jge
adc
xlat
mull
call
test
fists
jl
daa
jmp
pop
ljmp
inc
hlt
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
jne
pop
ja
fnstcw
cmp
pushl
push
movb
rolb
repnz
add
stc
stos
mov
out
or
push
xor
les
loop
sbb
sbb
jg
jl
xchg
cmp
test
rcll
sub
jns
push
mov
mov
push
out
scas
inc
cmp
push
fadds
or
pop
scas
mov
xor
push
pop
lret
sti
les
sub
xor
inc
sbb
imul
mov
imull
xor
aaa
bound
out
cld
jo
xor
scas
insl
adc
int3
dec
enter
out
jb
xchg
aaa
mov
xchg
jle
mov
sbb
push
xchg
das
sbb
adc
rol
mov
cmp
push
jno
inc
xchg
loope
mov
mov
arpl
push
ljmp
jnp
rcrl
cmc
mov
jne
pop
xor
jp
movsl
mov
ljmp
mov
xchg
insl
add
popf
test
xor
and
sub
fwait
jle
test
enter
cltd
cmp
dec
add
dec
in
je
cmp
cli
xor
cli
sub
sti
mov
mov
mov
adc
lcall
jae
pop
jne
mov
das
sbb
cmpsl
in
pop
call
jno
sahf
mov
dec
jno
aad
mov
mov
pop
mov
movsl
lea
push
mov
out
inc
xor
inc
xor
arpl
into
cwtl
pop
dec
adc
inc
pop
and
out
and
sub
inc
sub
addb
jae
aam
jno
mov
pop
shr
aaa
into
idiv
sub
adc
dec
mov
fmull
jl
push
movsb
mov
cwtl
rclb
ss
out
sbb
mov
jb
sub
repz
int
jmp
test
js
mov
inc
stos
push
mov
mov
adc
lcall
inc
and
rclb
sbbl
jmp
lds
popa
mov
fisttpll
jle
jle
cmp
fisubl
push
jle
jg
rclb
pop
cltd
addb
mov
hlt
popf
pushf
or
aad
outsb
cmp
movsb
icebp
fsubrs
std
shl
movsb
jle
inc
call
adc
dec
cmpsb
out
or
fstl
outsl
cmc
lods
sbb
aad
mov
jle
stc
or
cmp
fdivs
mov
jecxz
mov
movsb
sbb
les
out
test
lret
xlat
inc
in
inc
aad
xor
test
inc
add
mov
popf
inc
mov
mov
jp
jl
dec
lea
test
and
gs
cmp
dec
lret
dec
enter
pop
aad
or
fistpll
out
add
adc
jge
jb
mov
fstps
ljmp
push
add
inc
ja
mov
fxtract
rcll
arpl
or
pop
fidivrl
ja
mov
pop
jmp
stos
ret
leave
push
cmpsl
cmp
cwtl
pop
push
sub
jl
and
mov
loopne
pop
test
add
add
adc
sbb
xor
idivb
mov
gs
cwtl
pop
mov
out
leave
dec
sbb
xchg
cmp
sub
nop
cmpsb
out
stos
js
andl
jg
das
je
inc
xor
push
inc
cmpsl
test
jg
test
outsb
rcrb
or
pop
cmp
cmp
push
lods
cmp
icebp
push
call
lcall
push
in
rorb
test
adc
jle
arpl
or
and
cmpsl
pop
xor
adc
sbb
out
mov
fisttpl
in
sbb
es
mov
nop
cld
inc
xchg
jne
js
int
mulb
adc
loope
fistl
ret
scas
cmp
xlat
pop
add
sbb
daa
loop
mov
aaa
sbb
lret
xchg
arpl
push
inc
jno
mov
adc
and
mov
sub
fimull
push
leave
insl
and
in
insl
push
adc
mov
in
leave
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
sub
loop
jle
jl
jle
xor
stc
popf
jle
or
ljmp
ret
add
sbb
push
cmp
mov
dec
push
aaa
sbb
sub
mov
add
xchg
sti
fisubrs
sub
xchg
into
adc
xchg
fcmove
ja
mov
vaddsubps
in
icebp
pop
fisubrl
insl
or
push
subl
sbb
push
iret
adc
fdivrs
mov
int
pop
lods
test
movsb
push
xor
call
call
and
or
dec
mov
sahf
lret
test
and
out
out
lret
pusha
cld
mov
sbb
push
loop
add
dec
out
add
aas
and
scas
adc
cmp
dec
jp
shl
xchg
mov
fldenv
pop
add
bound
repnz
and
js
or
icebp
in
mov
dec
pop
icebp
mov
les
xchg
insl
cmpsl
xlat
movsl
test
sub
cltd
andb
inc
add
mov
sub
adc
pop
or
pop
push
push
adc
aaa
shll
mov
dec
in
movsl
lea
data16
pop
add
push
mov
cli
mov
sub
cmp
xchg
std
jns
dec
mov
xor
ret
add
mov
fwait
icebp
inc
xchg
sbb
popa
call
mov
mov
mov
pop
mov
mov
jbe
jmp
cltd
setle
loope
mov
test
and
mov
bound
in
loop
cmp
mov
shl
xchg
jnp
imul
stc
add
adc
std
inc
sub
sbb
xor
jne
sub
pmulhw
shll
mov
cmp
or
xor
add
push
ret
and
jp
or
mov
xchg
sbb
and
cmp
inc
aam
ljmp
in
mov
xor
mov
push
fnsetpm(287
mov
lods
fnstsw
jbe
mov
or
fimuls
scas
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
dec
xor
jle
jl
jle
xchg
addl
jne
pop
push
das
cld
mov
es
movsl
insb
cmpsl
int
clc
icebp
fsubrs
std
and
mov
pop
pusha
ljmp
adc
sub
mov
xorl
adc
mov
dec
or
int
mov
rcrb
xor
xchg
stos
js
stos
pop
movsl
pop
inc
push
xchg
xor
pop
or
add
pop
insl
mov
sbb
push
subl
sbb
fisttpll
repnz
push
outsl
int3
or
roll
bound
std
mov
popf
daa
cmp
dec
push
push
mov
push
jnp
movsb
shrb
popl
loopne
je
lds
mov
jle
jne
dec
out
inc
adc
std
cs
dec
adc
arpl
lret
subb
int3
push
jns
lds
aad
ljmp
mov
pushf
add
iret
pop
insl
nop
addl
sbb
das
mov
xchg
adc
repnz
cmp
outsl
ficomps
jmp
sub
movsb
and
fwait
fwait
xchg
xchg
jp
fdivr
dec
andl
add
push
ffree
jne
and
lret
adc
pop
dec
xchg
enter
jno
and
and
push
mov
stos
sbb
push
sub
mov
cs
std
nop
xchg
pop
imul
pop
lea
push
and
sahf
and
gs
out
out
jge
inc
mov
hlt
out
push
dec
sbbl
inc
mov
out
mov
mov
add
sub
dec
xor
cmpsl
fwait
mov
xchg
lret
movsb
dec
xor
es
jecxz
cmc
sub
pop
sbb
sub
sub
addl
repz
mov
loope
and
mov
movsl
and
adc
outsl
cmc
ret
pop
or
ss
popa
pop
mov
aam
arpl
mov
mov
or
inc
fs
or
data16
push
add
mov
pop
push
out
iret
xchg
imul
pop
mov
lahf
and
fdivrs
push
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
mov
out
jle
cmp
pop
push
scas
pop
pop
mov
testb
repz
xchg
int
lock
sbb
cmp
aam
xchg
aas
shl
stos
std
cmp
nop
das
mov
scas
cmpsb
cmpsb
rclb
xchg
test
sarb
fld
mov
and
jno
sti
xor
mov
xchg
movl
fidivs
aad
leave
cmc
loopne
pop
ljmp
fstps
ljmp
into
pop
pop
add
and
iret
pop
and
pusha
or
lea
cmp
xor
and
dec
xor
jge
fucom
mov
cmpsb
jle
adc
fisttpl
cmp
xor
lods
int3
jp,pn
rcll
jnp
rcl
mov
and
cltd
mov
xchg
movsl
dec
or
aam
outsl
push
pop
jno
fsubrs
inc
jg
jne
mov
pop
mov
les
xchg
sbb
faddl
outsb
fs
ret
push
xchg
imul
pop
hlt
add
mov
popa
jne
ret
jmp
lods
imul
outsl
inc
sub
cmp
inc
les
nop
adc
call
shrb
dec
je
mov
ds
push
xor
add
inc
lds
pop
mov
adc
xchg
loop
ret
and
sbb
cmp
jnp
call
dec
or
fisubl
adc
adc
mov
sbb
dec
rcr
flds
das
dec
subl
outsb
adc
int
cli
dec
pop
push
jp
fwait
imull
adc
pop
mov
mov
lock
mov
inc
fsts
loopne
inc
popf
mov
arpl
lods
out
adc
hlt
mov
mov
bound
push
dec
mov
ds
cmpsb
into
ret
push
adc
sbb
dec
add
add
xor
rcl
lods
negl
xchg
mov
lock
xchg
aas
xor
xchg
xchg
sahf
xchg
rclb
add
add
test
add
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
and
in
jle
cmp
jns
repz
xchg
loop
cmpl
add
lods
adc
add
mov
bound
in
mov
sbb
jmp
std
daa
stos
or
fstps
mov
dec
fldt
scas
add
xor
adc
jbe
xchg
add
imul
inc
dec
testl
cmpsl
ljmp
ss
xor
test
dec
sbb
rorl
push
and
in
cs
push
adc
in
arpl
pop
or
fwait
sub
xor
ja
hlt
and
popa
mov
insb
pop
push
push
icebp
jne
dec
aad
xor
daa
mov
nop
cvtps2pi
dec
jge
sar
shlb
into
popa
das
xchg
pushf
data16
ret
inc
dec
arpl
cmp
dec
pop
dec
dec
jle
jg
dec
iret
aaa
sbb
lock
inc
xor
mov
movl
pop
or
adc
pop
xlat
testl
mov
out
stos
or
mov
cmp
cld
or
addr16
cmp
cmp
mov
lret
xor
xchg
leave
enter
ss
inc
lret
ret
adc
jne
push
and
les
or
in
in
loope
leave
cmp
xorb
outsb
pop
popf
xchg
jnp
mov
jg
je
js
pop
pop
imul
pop
pusha
stos
inc
out
sarb
pop
sbb
cmp
xchg
or
and
cmp
dec
mov
sbb
sub
sahf
push
add
out
cmp
push
sub
pop
xor
pop
sarl
push
mov
pop
push
push
mov
sbb
stos
call
jne
cltd
imul
pop
std
add
outsb
mov
jle
pop
push
outsb
imul
cs
dec
clc
ret
xor
fistpll
inc
lahf
in
fisubs
cs
pop
rorb
sbb
push
and
stos
sub
add
inc
js
push
jbe
jno
out
shll
outsl
stos
decl
sub
dec
pop
cmp
pop
lock
sub
inc
dec
mov
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
ret
fisubrs
xchg
shr
jle
cmp
testb
pop
leave
movsb
jne
hlt
stos
scas
mov
movsl
sub
push
in
jbe
or
or
and
pusha
bound
fwait
sbb
dec
in
enterw
aaa
roll
pop
sbb
ret
inc
push
out
and
shrl
sahf
sti
push
and
movsb
push
lock
data16
dec
and
and
inc
imul
inc
cmp
lock
int
mov
test
or
sbb
xchg
aam
mov
cmpl
mov
lahf
adc
dec
xchg
gs
sarb
stc
and
fiadds
test
lret
mov
lods
or
enter
jmp
out
ret
xchg
pop
add
out
std
mov
shll
cli
push
in
leave
dec
mov
or
ljmp
jnp
push
mov
leave
mov
fldenv
std
sarb
fmuls
or
sub
mov
mov
aad
das
cmc
mov
or
mov
push
push
push
jno
adc
add
scas
push
fsubr
push
add
pop
add
cli
dec
and
xchg
pop
lods
or
inc
pop
mov
hlt
cmc
stos
scas
out
int3
or
subb
add
or
pushf
add
imul
movsl
mov
and
lods
jl
lea
mov
into
jno
inc
aaa
fadds
xor
and
imul
inc
sub
cltd
in
adc
mov
add
lods
xor
lret
sub
in
mov
subl
sbb
sub
movsb
cmp
and
sbb
sbb
cmc
ja
sub
out
aas
dec
xor
push
pop
cmpsb
rol
or
add
jg
iret
push
loopne
aas
lret
mov
mov
adc
lea
sub
pushl
jbe
in
lcall
mov
stc
sbb
out
mov
xchg
inc
cmp
or
int
notb
xchg
arpl
mov
inc
addr16
mov
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
or
mov
aam
nop
or
shll
pop
push
inc
out
push
xor
cmpsb
jnp
pop
mov
fidivrl
xor
cmp
jg
repnz
mov
mov
pop
repnz
adcl
icebp
scas
mov
jns
or
and
ss
push
iret
sub
dec
push
cmp
cmp
pop
sti
outsl
rorb
xchg
jns
popf
or
notl
inc
mov
icebp
test
sbb
pop
dec
mov
lcall
lods
cmp
cmp
stc
cmp
js
fstps
out
ds
js
clc
adc
arpl
adc
mov
hlt
mov
in
mov
adc
jmp
jno
jge
mov
inc
in
jecxz
adc
xchg
movsb
jmp
or
sub
pop
mov
jo
dec
loop
jo
call
and
sub
mov
sbbb
mov
rorl
clc
mov
pop
insl
aam
xchg
mov
pop
cmp
faddl
stos
push
pusha
dec
fiaddl
outsb
cmp
inc
das
cwtl
add
xor
iret
push
mov
mov
and
pushf
addr16
mov
and
shl
cmp
ss
test
fs
push
or
sti
cmp
cltd
dec
movsl
sub
cmp
mov
jo
into
arpl
mov
push
std
pop
dec
cmc
push
mov
stc
cmpsb
scas
cs
mov
aaa
lcall
jo
subb
iret
or
stos
clc
shrl
aas
in
mov
dec
data16
inc
lods
adc
add
lcall
shr
pop
or
dec
sub
xor
jmp
sub
dec
mov
jne
and
rcll
jo
jb
es
sbb
shlb
in
jae
out
pop
adc
jl
in
cmp
fdivl
stos
push
inc
loop
nop
add
test
mov
sbb
inc
lret
xchg
sbb
loop
bound
xlat
fisttpl
pop
mov
push
pop
lock
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
push
clc
loope
idivl
cmp
sahf
push
adc
lcall
orl
pop
shlb
adc
adc
lahf
push
hlt
push
cmp
adc
push
mov
inc
ja
push
jg
subb
jnp
dec
and
xchg
pop
jb
test
or
movsl
shrl
out
loopne
adc
cli
xchg
sar
sub
jae
adc
mov
mov
cwtl
push
repnz
dec
cwtl
push
test
jmp
mull
enter
push
repz
xchg
mov
inc
pop
das
ret
xor
dec
sbb
push
adc
mov
inc
enter
inc
mov
add
mov
mov
sti
and
push
scas
imul
lea
ja
ljmp
push
pop
mov
test
pop
rcl
lods
fcomps
test
je
in
push
inc
add
test
sub
shr
fs
imul
jnp
popa
fisttps
dec
mov
inc
lea
cwtl
cltd
int3
pushf
ja
sbb
stos
jae
push
mov
push
popa
cwtl
mov
out
mov
rolb
jbe
lret
push
jnp
sarl
mov
cli
cwtl
add
loopne
dec
pop
sti
push
mulb
sub
or
dec
sarb
jns
outsl
or
add
test
mov
out
adc
scas
mov
daa
enter
push
insb
mov
into
mov
mov
jns
adc
sbb
sub
xor
push
xchg
xchg
es
jo
pop
inc
scas
in
jnp
or
ret
jge
test
inc
xchg
cmpsl
pop
add
fldt
inc
or
jae
sub
push
pop
pop
out
cmp
call
cwtl
test
inc
dec
xor
repnz
dec
or
sbb
push
aaa
out
mov
push
push
repz
and
outsl
int
xchg
insb
pop
in
roll
pop
arpl
jno
push
fisttps
outsb
inc
sub
dec
push
sbb
icebp
xchg
outsb
push
mov
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
dec
add
bnd
cmp
push
dec
mov
xchg
ljmp
mov
int3
xor
leave
mov
mov
popf
sbb
xchg
in
sbb
adc
sbb
scas
jp
mov
cmp
les
lret
jg
fadds
sbb
mov
sub
push
and
inc
cmp
aas
adc
in
dec
int3
xchg
cmp
leave
setb
sbb
mov
fisubs
add
out
jne
and
outsb
xor
mov
ret
pop
stos
xor
adc
xchg
dec
mov
sbb
mov
or
in
in
pop
repnz
xor
or
stos
das
mov
dec
or
push
dec
xchg
bound
bound
sub
lret
inc
arpl
test
decl
xor
in
test
orb
sub
test
lahf
push
mov
pop
orb
rolb
cmp
sbb
pushw
sbb
xorl
lods
or
cmp
push
jmp
push
sbb
xchg
sub
xchg
sub
cmovno
imul
in
into
add
bound
cmpsb
cld
jb
push
out
pushf
nop
out
movsb
aaa
inc
leave
scas
lods
shl
mov
lret
pop
jb
jl
sub
outsb
aas
xchg
mov
jl
or
outsl
mov
out
jmp
add
lret
test
pop
pop
dec
pusha
icebp
aad
js
shlb
loope
inc
dec
cmp
jbe
out
xor
inc
lcall
mov
rorl
adc
push
inc
inc
or
loope
leave
adc
lock
pop
xor
int
push
cs
mov
cmpsl
or
mov
fistpll
push
mov
cmpl
cmp
aas
jo
pop
mov
data16
mov
xchg
adc
and
and
pop
into
mov
xchg
ss
mov
mov
and
sbb
addr16
cmpsb
mov
mov
xchg
popa
jg
dec
jecxz
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
xchg
lret
jle
lock
cmp
bound
or
movsl
lcall
int
cmp
into
sbb
in
stc
aaa
nop
fs
sahf
xor
jno
xor
mov
test
push
es
sbb
mov
repnz
ljmp
movsb
movsb
int
xchg
iret
or
jne
out
subb
sub
push
mov
out
arpl
sbb
movsb
lods
or
notl
int3
mov
push
mov
and
test
xor
insb
popf
xchg
fs
call
inc
test
push
lds
jmp
mov
jne
and
decl
mov
jl
rclb
xor
dec
arpl
xchg
lret
fwait
inc
out
mov
ficoms
and
push
xor
scas
sub
pushf
testl
cli
adc
test
cld
dec
push
mov
push
push
mov
movsb
lahf
or
cmc
mov
push
push
push
sub
popl
rcr
test
jmp
cmc
mov
add
icebp
xchg
adc
rcr
cs
jae
cltd
inc
das
mov
push
xchg
cmp
or
push
jnp
push
push
and
iret
mov
enter
xor
xchg
lret
fldcw
lea
cwtl
lods
push
xchg
push
data16
lods
lret
mov
ja
ljmp
lods
das
sbb
call
addr16
or
neg
lods
iret
ret
mov
stos
pop
mov
cmpsb
cmp
and
jno
scas
inc
adc
scas
sbb
jb
inc
add
xchg
fildll
daa
repnz
call
pop
xchg
ljmp
mov
inc
mov
movb
sarl
xchg
repnz
je
testb
out
push
lods
xchg
pop
mov
imul
mov
outsl
daa
pop
das
xchg
sahf
xchg
aas
jae
shrl
push
sub
repnz
xor
push
jae
filds
mov
push
adc
cmp
loopne
xchg
test
mov
repnz
dec
fstp
mov
test
push
add
pushf
sahf
add
pop
sbb
sbb
ljmp
jne
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
mov
jle
cmp
mov
jne
and
dec
xchg
lret
cwtl
sbb
jnp
inc
aaa
aaa
lods
pop
notl
hlt
in
cmpsb
and
ret
cli
movsl
push
das
add
je
sub
lea
xor
dec
or
pop
push
andb
mov
rcrb
mov
bound
and
inc
pop
jnp
pop
pop
mov
sbb
inc
popl
fcomp
push
stc
shl
inc
cmp
adc
test
cmpsl
aas
jge
mov
mov
pusha
mov
sbb
adc
mov
jae
test
je
pop
jne
ret
incl
popl
es
gs
rcll
data16
iret
jl
cld
ret
lds
xor
push
sti
sub
cmp
and
push
lock
ss
insl
mov
lret
shl
insb
and
xchg
test
pop
hlt
add
xchg
mov
je
sbb
gs
xor
in
mov
mov
mov
jle
popa
adc
fsubs
lea
std
dec
jl
pop
aam
arpl
aam
bound
and
test
add
cmp
sti
sahf
repnz
mov
inc
icebp
jae
pop
cltd
pop
sbb
mov
cltd
mov
ljmp
daa
insl
xor
xchg
pop
cli
test
sub
mov
adc
test
sub
push
out
jns
jg
filds
dec
push
and
pop
sub
lods
ja
les
out
inc
mov
mov
cld
dec
xchg
icebp
in
pop
js
mov
shr
ja
cmp
ja
in
mov
cld
push
xchg
dec
ja
mov
mov
dec
or
cwtl
dec
rolb
int3
push
rorl
addr16
shr
cwtl
enter
pusha
test
add
add
cmc
ss
and
int
hlt
iret
lds
aas
push
xrelease
cmp
sbb
mov
popa
inc
or
xor
pop
pusha
sub
aad
or
mov
mov
lods
mov
pop
add
inc
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
paddsb
jle
jl
jle
mov
cs
and
popa
pop
int3
dec
mov
fdivr
lods
or
inc
imulb
ret
mov
imul
pop
aam
rcll
xor
pop
roll
inc
push
pushf
push
lahf
pop
push
fdivrl
push
cmp
push
xor
stc
cmpsl
xor
dec
cmpl
stc
lea
fisubrs
mov
or
jg
cmp
loopne
cmp
xchg
lods
fisubrs
jnp
cli
fnstcw
icebp
jns
rclb
das
insb
ret
mov
js
gs
filds
ja
jle
sbb
sbb
outsb
stos
sbb
push
repnz
arpl
in
loope
xchg
sub
inc
lret
nop
jno
jno
jb
fs
push
jmp
dec
inc
mov
mov
xchg
sbb
aaa
cmp
mov
mov
sbb
inc
push
adc
pop
loopne
addb
test
insb
ja
cli
pop
inc
inc
add
shld
js
xlat
mov
pop
in
xor
loop
mov
or
clc
ss
xor
mov
stc
sub
int
lods
sbb
dec
xor
add
jb
enter
aad
ficompl
xlat
jo
mov
sbb
lock
sub
or
push
ja
loopne,pn
lcall
mov
cmp
int3
sbb
mov
ret
movsb
xor
lahf
mov
push
aas
out
jne
ljmp
or
push
adc
xor
fldcw
mov
inc
addl
mov
arpl
sub
clc
lock
or
dec
add
mov
in
cmp
mov
jecxz
jp
pop
xchg
in
sbb
push
ret
add
push
and
sub
add
cmp
mov
scas
mov
scas
popf
addr16
sarb
or
push
popa
test
mov
les
cmp
jns
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
sub
xlat
sti
jle
cmp
int3
inc
jle
ljmp
push
ja
add
int
fdivrs
xchg
add
mov
into
sub
pop
xor
lcall
cmp
mov
or
xchg
jmp
jb
push
rep
jg
wrmsr
call
imul
movb
popf
mov
nop
rcrl
pop
out
jl
lret
dec
ftst
add
adc
push
enter
hlt
pushf
insb
mov
xor
push
gs
stos
add
pop
dec
test
cmp
jns
test
mov
jb
mov
cmpsb
add
int
cld
loopne
ds
jge
nop
ret
xor
stc
stos
stos
push
dec
and
test
mov
sub
jecxz
jge,pt
fwait
inc
dec
pushf
cmpsl
xor
inc
xchg
mull
mov
cltd
fdivrs
mov
mov
mov
push
mov
dec
mov
adc
rep
mov
flds
iret
mov
cmp
xor
jb
loop
int3
jb
mov
adc
loope
into
in
imul
mov
sub
test
pop
and
mov
cld
dec
aad
mov
ljmp
add
xchg
xchg
jp
loopne
rcrb
pop
mov
test
push
enter
imul
mov
and
repz
cltd
lods
xor
lahf
mov
sbb
push
es
cmpl
fiadds
jbe
pop
pop
lret
gs
xor
inc
ds
jl
loope
pop
push
jnp
push
xor
adc
mov
mov
jae
cmpb
adc
push
mul
scas
fisttpll
pop
in
sub
push
insb
mov
inc
lods
mov
pop
imul
push
xchg
mov
jo
xor
sub
popa
mov
and
sarl
mov
dec
adc
adc
pop
rcrl
mov
into
insb
pop
inc
nop
mov
cmp
jae
adc
shl
add
inc
scas
add
add
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
dec
cmp
jle
jl
jle
inc
cld
jb
mov
add
test
mov
divl
sahf
cli
repnz
mov
cs
dec
inc
xchg
mov
ljmp
cmp
cmp
cs
jae
lods
fsub
or
mov
js
mov
sub
xor
pusha
inc
push
sbb
jp
adc
adc
jle
xchg
add
dec
xchg
push
lcall
lds
daa
and
dec
pop
cmp
cld
jg
inc
dec
fstl
inc
adc
xchg
je
pop
pop
aam
sub
xchg
lret
and
std
adc
cli
mov
fnstcw
shrb
mov
dec
xlat
add
daa
lock
mov
jmp
adc
jb
push
push
adc
mov
hlt
sbbb
cld
xchg
push
inc
cmc
cmp
fistpll
add
jge
cmp
in
jno
repz
mov
sbb
test
pop
repnz
es
mov
and
cmc
or
adc
mov
fdivrl
push
mov
xchg
out
mov
mov
lods
push
fdiv
and
std
lds
or
clc
cmp
lds
jmp
stos
jg
mov
dec
gs
stos
mov
ss
insb
add
dec
js
std
addr16
loopne
ja
push
lcall
mov
lods
add
ret
aad
mov
dec
add
cmp
push
inc
shll
lret
sub
gs
jbe
xchg
xchg
pop
mov
xchg
sarb
inc
shlb
fisubs
outsl
insl
sub
inc
mov
pop
lods
inc
and
cmp
test
shrl
imul
pop
inc
inc
inc
jne
mov
fdivrl
faddl
je
and
enter
divl
jns
scas
adcb
das
inc
pop
popa
cmpsb
mov
cmpsb
mov
and
xchg
enter
pop
pop
andb
sub
bound
shrl
and
stos
mov
adc
fstl
jns
push
fimull
pop
fwait
mov
lock
jg
rorl
jnp
rcll
inc
mov
fildll
inc
in
scas
shrl
mov
jmp
dec
loop
lds
push
jo
mov
sub
outsl
mov
dec
xchg
cmp
sub
mov
leave
and
sbb
jnp
xchg
adc
jg
mov
les
ret
aas
fs
outsl
and
mov
orl
mov
jbe
shl
and
das
fucomi
sbb
or
sahf
sbb
rcrl
add
adc
or
add
cli
out
mov
mov
mov
jno
adcb
pop
lahf
cli
in
lods
xchg
xlat
push
popw
and
neg
adc
xor
loop
inc
jl
fldln2
outsb
jno
inc
fisubrs
cmpsl
pop
add
mov
mov
adc
ja,pn
aas
or
ja
mov
and
enter
in
cmp
or
cmp
mov
mov
jmp
jbe
rcrb
leave
div
in
fisttps
push
lcall
test
mov
testl
xchg
pop
mov
xor
add
cmp
es
or
mov
adc
xlat
adc
repnz
loopne
test
jl
cltd
in
sbb
insl
push
aas
mov
sub
fstpl
mov
inc
in
pop
mov
xchg
lcall
in
xor
sub
ds
sub
mov
xchg
movsb
xchg
fisubl
bound
mov
in
pop
cwtl
imul
stos
shrb
xchg
inc
nop
push
enter
insb
addr16
fbstp
gs
ret
jae
add
mov
das
add
int3
repz
negl
or
mov
xor
ss
jl
das
xor
jmp
inc
cmp
test
cmp
nop
iret
icebp
shll
inc
jmp
data16
pusha
out
enter
es
scas
xor
notb
faddp
sub
sub
and
add
ret
dec
or
push
xchg
adc
lret
push
xchg
lret
pop
inc
add
cmp
lds
sbb
shll
ja
aam
jbe
subl
mov
lahf
jns
inc
pushf
hlt
int
int3
lret
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shll
enter
jle
cmp
imul
xchg
jg
aam
daa
lods
ret
adc
push
jae
outsl
leave
sub
adc
jne
adc
sub
mov
push
xor
inc
sbb
out
addr16
jnp
popa
lds
iret
out
xchg
and
or
jb
bnd
or
push
xchg
xchg
or
aaa
pop
nop
sbb
scas
inc
jne
rcll
cli
mov
or
mov
outsl
int
xchg
jg
loopne
ja
push
data16
xchg
pop
lcall
add
movsl
enter
dec
sub
sbb
dec
sub
xlat
sub
sahf
fistps
sub
fnstenv
les
aam
and
push
jmp
fildl
iret
movsl
lds
fildl
decl
lea
test
dec
lea
jmp
sbb
cmp
mov
mov
shll
leave
push
inc
fcomi
dec
aas
mov
fs
push
fimuls
jg
mov
outsl
pop
cmp
dec
sbb
loope
mov
nop
jg
in
les
push
ljmp
out
repz
cli
sbb
mov
je
in
adc
jnp
rcrb
dec
jno
stc
adc
roll
fcoms
in
sub
inc
inc
js
test
add
outsl
mov
adc
repz
push
sahf
pushf
es
fcoms
dec
ljmp
sub
cmp
cmp
shll
out
jge
xor
xor
int3
pop
push
jle
or
fs
push
cmp
jmp
icebp
xchg
inc
adc
push
sahf
movsl
shll
enter
shlb
inc
int3
pop
jp
sarl
or
pop
inc
data16
imul
dec
or
sub
test
push
mov
daa
daa
enter
add
mov
scas
insb
in
mov
push
dec
mov
icebp
cmp
sbb
test
nop
neg
stos
or
and
push
out
in
loop
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
xor
cmp
ret
and
ret
pop
mov
dec
ret
cmp
push
jae
add
stc
scas
not
mov
movsl
mov
imul
mov
mov
jg
mov
popf
dec
lods
xor
negb
std
sub
repnz
negb
sbb
xchg
adc
dec
pop
mov
mov
mov
push
push
pop
push
pop
push
aad
movsb
sub
scas
lret
ljmp
js
sub
rcrb
push
xor
dec
aaa
mov
mov
sar
scas
xor
push
jmp
jecxz
cltd
xor
pusha
adc
inc
xchg
mov
fdivrl
xor
xchg
test
or
sbbb
sub
aad
fnsave
inc
popa
mov
lods
sub
mov
daa
mov
outsl
add
sbb
pop
lahf
stos
and
int3
popf
andl
push
aad
jmp
pop
add
ljmp
mov
dec
or
sti
xor
les
dec
mov
cmp
dec
sub
add
mov
std
or
nop
insl
xor
imull
orb
lds
add
popa
cld
sbb
add
mov
dec
ret
sbb
xchg
sti
cmpsl
daa
push
rcll
xor
sub
mov
arpl
xchg
sbb
bound
push
int3
leave
les
cltd
jmp
fnsave
or
lods
out
sbb
ret
push
cmp
outsb
xorb
rcll
ss
loopne
xchg
pop
loop
sub
insl
subl
lea
sarb
dec
pop
cmp
data16
into
cli
jb
lods
lahf
mov
gs
add
leave
out
mov
fdivl
xchg
add
and
dec
out
bound
push
jb
dec
scas
js
pop
mov
orb
sarl
aam
sub
cmpsl
pop
loop
sbb
lock
inc
mov
int3
cmpb
jg
ds
rcll
xchg
int
decb
jmp
pop
mov
cwtl
mov
mov
cmp
ret
sub
jl
jle
nop
cs
adc
mov
xor
xor
lahf
roll
jmp
adc
cmp
inc
std
pop
or
popa
adc
mov
pop
mov
pop
aad
jmp
pop
lods
and
mov
add
mov
cmp
mov
icebp
out
and
jo
pop
or
sub
add
int
leave
fbstp
mov
cmp
jl
mov
mov
push
pop
mov
sar
mov
loope
adc
pusha
pop
inc
inc
outsl
mov
mov
dec
stos
or
outsb
mov
cwtl
lcall
in
jno
inc
xchg
repz
cmp
mov
pop
mov
push
je
mov
rolb
neg
jle
bound
pop
sbb
xor
push
sub
aaa
lcall
or
jns,pn
sti
out
jnp
xor
add
pop
cmp
mov
lahf
cmp
sbb
pop
js
or
push
pop
cmp
shlb
mov
repnz
das
mov
sbb
lods
sarb
ja
jo
sub
gs
cld
sbb
stc
pop
repnz
adc
aam
es
scas
sbb
daa
gs
dec
aam
xor
ror
inc
gs
icebp
cmp
subb
mov
notl
add
in
and
and
jg
and
or
rcrb
fwait
lahf
stc
or
pop
popa
loope
fstps
ja
popf
or
lds
push
xchg
rcrl
out
test
jmp
and
dec
adc
sahf
mov
rcrb
pop
clc
push
and
shl
lret
sub
jno
cltd
adcl
into
in
dec
pop
jne
jns
mov
mov
out
icebp
jle
mov
sbb
or
insl
bound
cmp
ret
shrl
jo
out
adc
dec
pop
adc
push
rcrb
sbb
nop
movl
scas
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
mov
sub
jle
cmp
mov
jp
cmc
jp
aaa
in
xchg
adc
aam
and
mov
cmp
stc
inc
leave
pop
lea
aaa
and
xlat
xor
push
add
movsb
test
inc
inc
add
idiv
out
mov
jecxz
in
lret
scas
pop
mov
pop
push
mov
shlb
sub
test
lods
push
cmp
dec
and
dec
pop
lret
cmp
push
out
jo
jb
push
dec
stos
popf
xchg
or
insl
int
movsl
dec
xchg
inc
push
loop
pop
add
push
inc
inc
dec
mov
jmp
out
xor
mov
loope
test
inc
sbb
add
in
mov
out
ret
int
dec
mov
fisubrl
cmp
dec
jmp
adc
push
addb
lret
insb
std
ss
shlb
negl
fidivrl
addr16
sbbb
push
mov
rorb
jmp
mov
pop
mov
out
popf
je
mov
inc
push
mov
icebp
pop
mov
cmp
mov
xchg
jle
fwait
les
pop
and
push
lea
sbb
dec
mov
xor
movsb
lock
pop
dec
lods
shll
xor
and
inc
jb
arpl
call
cmc
fsubrl
out
shr
xchg
scas
dec
out
sbb
dec
push
movsb
jb
dec
push
bound
adc
push
iret
mov
xchg
std
fnstcw
push
popa
or
into
push
clc
cld
mov
insl
mov
popf
sti
push
push
and
rorb
sarl
inc
cmp
lock
sar
pop
jno
cld
jno
xor
inc
in
movsl
push
mov
or
push
stc
jle
rolb
mov
pushf
movsl
cltd
sub
aam
dec
mov
inc
jl
adc
fisubs
adc
int3
in
xchg
push
fs
pop
mov
mov
dec
push
iret
je
xchg
dec
arpl
cmp
mov
leave
mov
mov
adc
rclb
jae
lea
or
and
insb
std
loopne
jmp
mov
dec
out
cltd
aam
sti
mov
ds
mov
stos
and
push
gs
jno
mov
xchg
jmp
push
std
dec
sahf
push
push
add
push
push
mov
cmp
sbb
rclb
xchg
xlat
outsl
sti
pop
gs
inc
in
insl
mov
push
push
inc
inc
cmpsb
inc
test
mov
aad
cwtl
pop
iret
inc
mov
mov
adc
cltd
cmp
int3
pop
mov
sti
push
mov
pop
pop
add
sahf
insl
or
mov
pop
fs
or
stc
adc
add
inc
mov
sbb
pshufw
int
xor
pop
bound
lock
jbe
aas
jno
roll
mov
lods
addr16
mov
imul
jno
cmp
mulb
dec
adc
dec
dec
xchg
sub
or
xchg
mov
sqrtps
add
popa
push
cmc
cmpsb
xchg
movsl
icebp
mov
scas
xchg
jb
push
xchg
pop
add
rcr
sbb
xor
xchg
xor
sub
lahf
pop
popf
jg
aaa
sub
dec
mov
inc
or
xlat
shl
inc
gs
insl
pushaw
bound
pop
xchg
aad
adcb
adc
in
sbb
and
xor
mov
pop
aad
sbb
push
mov
sub
scas
push
cwtl
fmull
in
call
fwait
or
or
fldt
xor
out
pop
sub
push
mov
xchg
lret
loop
jl
xor
xchg
jmp
sub
cmpsl
pop
stos
mov
iret
adc
xor
arpl
and
jae
les
ficompl
mov
mov
jns
pop
int
les
or
push
lds
sub
pop
cmp
arpl
jne
sub
push
dec
repz
add
push
cmp
sbb
add
sub
ud2
cli
hlt
fsubs
pop
mov
sub
es
rorb
add
loop
or
push
mov
ficoml
sbb
leave
sahf
shll
and
outsb
cmpsb
sti
call
enter
jbe,pt
pusha
outsb
daa
out
daa
mov
push
jo
mov
xor
push
fwait
sbb
sub
adc
jle
inc
imul
negb
lcall
push
arpl
mov
mov
pushf
fimull
imul
loopne
jmp
sahf
testb
push
repz
jae
ficoms
test
mov
cmp
xor
and
fldcw
and
mov
lock
xchg
leave
pushf
imul
in
fwait
pop
loop
arpl
and
add
jnp
inc
mov
xchg
inc
pop
test
cmc
jns
or
addr16
add
bound
rcrl
mov
roll
ljmp
cmp
pusha
popa
lfs
bound
inc
scas
movsb
fwait
pop
and
and
mov
cli
mov
lods
xchg
xchg
ljmp
je
sahf
xchg
cvttps2pi
and
sbb
aam
ficomps
out
inc
in
xchg
daa
ficompl
frstor
push
sbb
ret
xor
sbbb
pop
jae
add
pop
test
scas
in
mov
cmp
inc
inc
push
lods
je
adc
std
pop
mov
ret
stos
mov
stc
lods
mov
push
xchg
inc
ds
sahf
push
call
nop
and
test
jno
insl
or
fucomip
imul
and
inc
popa
cwtl
mov
mov
adc
xlat
pusha
rcll
mov
stc
mov
ja
shlb
rcll
pop
out
xchg
push
add
or
mov
out
ret
jb
repz
fidivrs
icebp
sub
scas
stc
pop
push
push
lods
sbb
or
jnp
and
cs
outsb
push
xor
xchg
scas
cld
loop
adc
int3
dec
and
or
or
out
push
lcall
or
das
imul
cmp
push
mov
scas
scas
lahf
mov
or
jl
outsl
cmp
jmp
mov
add
enter
push
dec
mov
inc
push
inc
rep
add
dec
and
dec
pushf
lahf
arpl
fwait
xor
mov
jmp
sub
or
in
jle
aaa
mov
testl
mov
dec
mov
sub
std
mov
mov
cmp
cld
bound
pop
lahf
jo
push
dec
sbb
sub
mov
rcrl
mov
xchg
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
loop
sbb
jle
jl
jle
dec
lahf
and
adc
rcrb
xor
cli
lret
or
idivl
test
imul
sub
aam
sub
sahf
inc
aaa
cmp
movd
mov
shll
inc
test
and
mov
imul
push
hlt
add
ret
jg
mov
out
movb
imul
fcom
in
clc
push
ss
push
sti
std
movsb
fbstp
stos
inc
in
lods
js
popf
sbb
adc
and
xchg
stc
inc
sbb
xorb
dec
sub
mov
cmp
out
xchg
mov
mov
push
inc
pop
lods
nop
mov
cli
sbb
mov
mov
pop
lret
test
xlat
mov
mov
xlat
shr
cmp
ret
aas
or
hlt
insl
or
mov
xchg
mov
xchg
in
or
scas
mov
scas
or
and
dec
sbb
lods
inc
andb
sub
xchg
lret
cld
sub
and
adc
lsl
and
shr
mov
lds
in
pop
inc
push
xor
adc
scas
ja
dec
inc
inc
inc
inc
pop
mov
inc
xchg
adc
enter
and
or
pop
mov
fcoml
repz
adc
orl
rclb
les
shrb
mov
add
dec
lds
shrl
mov
jge
ds
stos
ret
lret
shll
insb
mul
adc
movsl
add
adc
jl
bswap
xlat
sub
iret
ja
loop
adc
sbb
inc
popa
pusha
xlat
xchg
jne
sbb
daa
ljmp
sub
fwait
xchg
iret
adc
sbb
inc
or
push
ss
pop
lods
imul
pop
scas
addr16
inc
pop
or
or
loopne
mov
popf
les
scas
xor
xchg
movzbl
sub
les
sarl
rolb
scas
leave
or
cmovno
add
in
rclb
mov
push
inc
mov
sbb
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
call
sub
jle
jl,pt
jle
loop
adc
add
push
jbe
call
lret
bound
inc
dec
mov
imul
testl
sub
pop
aaa
and
mov
dec
popf
cmp
fdivr
xchg
testb
pavgb
pop
pop
fcoml
cmp
dec
xlat
shrl
mov
sub
dec
out
loope
arpl
jg
sti
imul
mov
repnz
rorl
std
lea
xor
cmp
fistpll
ficoms
cmpsb
inc
sub
pop
jne
sub
outsb
sti
leave
or
in
loop
cli
pop
stos
xor
inc
movsl
push
sbb
sub
add
mov
cs
cli
dec
mov
jl
pop
mov
jo
mov
cmpl
in
scas
lods
xor
cld
mov
cwtl
enter
in
fxch
daa
dec
icebp
lods
pop
cmpsb
test
mov
loope
std
addr16
out
jp
lret
addr16
insb
rclb
mov
lea
adc
sbb
lret
mul
addr16
and
jmp
mov
adc
aaa
les
lods
mull
sahf
jp
lcall
test
loopne
inc
xor
sub
dec
scas
pop
jns
test
cltd
and
mov
dec
mov
mov
insl
outsb
lea
in
test
ljmp
scas
dec
and
in
jae
lcall
pop
iret
xchg
sarb
inc
fwait
push
jp
pop
lahf
out
repnz
les
fisubrs
sub
dec
push
xor
jae
data16
add
fs
cld
jae
test
inc
lock
dec
jns
dec
cmp
lcall
sub
or
psrlq
jno
xor
or
sbb
iret
jb
mull
cli
out
loop
lock
arpl
xor
aas
mov
shll
mov
jmp
mov
mov
xor
add
jmp
orl
imul
cmp
jle
jl
jle
outsb
int3
cmpl
push
jbe
imul
and
and
push
add
dec
popa
add
popa
scas
js
pop
jb
dec
jle
mov
scas
sbb
stc
and
and
cli
sub
addr16
add
or
inc
push
or
mov
psadbw
js
sbb
mov
aaa
ljmp
push
dec
sub
xchg
pop
out
cltd
xchg
loopne
cmp
jno
movb
sub
sub
mov
and
lea
mov
sbb
testb
bound
dec
pop
add
pop
popa
aaa
xchg
in
fs
outsl
push
les
xor
testl
sbb
sub
pop
cld
scas
mov
jnp
pop
cmpb
or
mov
lea
mov
outsl
in
sub
add
jno
bound
mov
in
cli
je
add
sbb
add
xor
mov
jns
xor
mov
pop
pop
dec
into
mov
out
scas
testl
mov
xchg
pop
push
xchg
xchg
cmp
mov
cmp
ss
mov
sbb
mov
lret
aad
push
mov
mov
adc
lahf
sbb
sbb
mov
cli
adc
add
div
sub
in
lock
and
hlt
dec
dec
add
insl
ss
insb
xor
jae
adc
mov
xlat
ss
out
sub
lahf
ret
mov
fsubrl
jecxz
enter
sbbl
pushf
sbb
push
inc
daa
mov
repnz
push
test
clc
pop
sbb
pop
add
cltd
push
in
xchg
fcomps
inc
stos
and
movsl
scas
lret
movsl
inc
xor
outsl
push
in
hlt
iret
sub
xchg
pushf
pusha
ret
ret
ret
repz
in
call
jns
fisubrl
stos
push
stos
out
and
out
mov
sub
std
test
add
shll
rorl
addb
add
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
inc
adc
mov
ret
inc
gs
lock
xor
dec
int3
enter
mov
sbb
sbb
popf
xchg
push
mov
hlt
cltd
add
lret
pop
cmc
rcll
andl
mov
loop
xchg
dec
or
pop
icebp
outsl
roll
jns
lea
rcll
pcmpeqd
or
lret
mov
adc
pop
cmpsl
add
andb
jmp
lea
arpl
je
cs
ret
pop
push
in
sbb
lret
mov
int
fmull
jp
fsubp
fisubrs
jae
test
les
test
push
subl
out
pushf
pop
adc
cmc
lock
sarl
out
cmc
call
ds
jno
and
ret
rorl
jno
shrl
xchg
jg
fimuls
xchg
iret
aad
fiadds
sbb
arpl
push
scas
inc
imul
lret
loopne
int3
ds
lret
fwait
les
lods
test
sub
jmp
adc
cmp
xchg
xchg
push
call
fldenv
cmp
push
dec
push
lcall
jmp
jno
mov
dec
mov
mov
and
aad
rcrb
mov
and
inc
xchg
jg
xor
or
inc
push
ss
loope
sbb
shll
scas
aas
push
sbb
push
push
add
stos
jbe
push
push
mov
mov
mov
pusha
sbb
dec
xchg
movsb
lods
test
sbb
imul
scas
inc
push
xor
jbe
lds
arpl
jp
int3
sbb
nop
xchg
pop
mov
outsl
stc
sub
rclb
jmp
mov
jmp
and
cmp
stc
shll
lret
xor
loope
mov
lahf
mov
aaa
or
stc
or
mov
idivb
jge
aam
push
outsl
inc
mov
loopne
jno
mov
inc
clc
sbb
inc
test
lcall
or
shlb
insb
popa
arpl
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
notl
pushf
jle
adc
jle
xchg
cld
gs
inc
add
fwait
jl
ja
sarl
out
ret
pop
cwtl
xor
mov
xor
cwtl
lret
push
std
push
dec
out
inc
or
dec
mov
les
mov
outsl
popf
fsubs
cmpsl
jnp
lds
mov
and
roll
xchg
push
push
sbb
cli
ss
fcmovb
gs
cmc
mov
pop
dec
lret
sbb
fdivrs
sbb
cmp
inc
adc
aaa
mov
scas
fnstenv
loop
les
jg
push
loopne
fistpl
test
scas
fwait
sbb
popa
inc
in
dec
aad
xor
fnstenv
cmpsl
fwait
and
scas
push
cmp
loopne
and
sub
jno
in
xchg
cmp
mov
xchg
pop
cs
loope
inc
loopne
sbb
daa
cmp
sar
and
mov
xchg
shll
loopne
pop
sbb
sbbl
pop
outsl
jns
idivl
or
pop
xchg
xchg
mov
push
inc
adc
dec
inc
mov
push
cmp
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
jmp
popf
jle
adc
jle
mov
insl
mov
dec
jmp
repnz
or
xchg
lcall
jb
push
addb
lods
pop
mov
adc
inc
or
aas
dec
sbbb
mov
movsb
or
xor
dec
mov
test
fldcw
inc
adc
faddl
pop
lahf
mov
jle
dec
test
stos
loop
sahf
insb
sbb
pop
pushf
jno
dec
inc
and
push
and
and
jecxz
decl
in
loopne
loop
mov
les
scas
jge
inc
cmp
or
rcll
loop
adc
xor
mov
and
ljmp
aas
jo
pop
popl
mov
lret
in
cwtl
loopne
or
sbb
faddl
sub
mov
xor
test
push
mov
enter
and
aaa
int
fwait
mov
jecxz
mov
mov
xchg
push
push
mov
xor
xor
pusha
fwait
xor
movb
xchg
and
add
xorl
add
push
jmp
pop
jecxz
call
and
out
loope
sbb
jb
jle
adc
jle
out
sbb
mov
rcll
sub
sub
mov
fstps
mov
test
hlt
in
dec
icebp
dec
aas
xchg
in
pusha
xchg
pop
or
add
jecxz
das
orb
aam
and
int3
in
or
fcoml
sub
sub
dec
mov
mov
scas
push
shrl
call
push
mov
mov
mov
in
dec
ljmp
data16
jl
xchg
jnp
xchg
mov
mov
dec
clc
rorb
outsl
popa
or
cltd
push
pop
shl
pop
cwtl
inc
fldcw
int
mov
mov
inc
mov
adc
cwtl
jge
mov
jns
mov
pop
fstpl
mov
push
jns
call
pop
and
clc
sbb
xor
cltd
mov
add
jmp
dec
faddl
jl
lret
call
imul
add
xchg
sbb
add
dec
inc
mov
popf
sub
jb
sbb
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
popa
mov
jle
adc
jle
xchg
fstps
into
loop
cmpsl
and
subl
outsl
inc
cmp
fstpl
sub
or
xor
adc
cmc
rcrl
fimull
fsts
push
or
xor
daa
cmp
and
in
insb
sub
sbb
mov
xchg
enter
iret
lods
test
in
repz
repnz
movsb
mov
xlat
push
xor
jno
mov
jae
mov
movsl
xor
jbe
repz
cmpsb
add
movsl
xor
mov
jno
ret
xchg
dec
or
mov
xor
loop
int3
xchg
mov
mov
mov
js
jbe
sbb
push
rorb
iret
test
test
push
jae
mov
pop
push
dec
pop
mov
lret
pop
rol
push
fdivrs
mov
mov
jp
andb
mov
pop
mov
jne
fcoms
cltd
and
fildll
dec
mov
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
jge
mov
cltd
jle
adc
jle
lcall
es
jb
inc
cltd
fldenv
ja
xchg
xor
push
hlt
inc
or
into
mov
adcb
in
push
ja
or
jmp
mov
ljmp
add
adc
cmpsl
push
xchg
andb
sbb
jge
add
push
ret
mov
int
mov
mov
out
xor
mov
push
into
aad
inc
mov
mov
mov
inc
xlat
push
fsubrs
mov
dec
mov
test
in
sub
inc
dec
sahf
dec
mov
lods
data16
addr16
mov
dec
mov
movsl
mov
aam
imul
push
push
pusha
xchg
xor
mov
xor
fs
ror
fdivrl
xchg
out
inc
inc
je
es
sbb
and
dec
and
leave
pop
and
push
add
push
mov
mov
push
dec
inc
shlb
cld
sub
pop
fildl
ja
sahf
in
xor
or
cmp
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
int
push
mov
xchg
call
add
xchg
in
scas
adc
jecxz
faddl
fisubl
test
xor
js
inc
dec
sbb
mov
ljmp
lcall
push
jl
sbb
call
aas
jnp
jl
flds
pop
pop
mov
daa
inc
mov
fs
daa
pop
jns
stc
push
stc
mov
sbb
in
int
adc
fwait
push
dec
or
xlat
xor
icebp
rclb
xlat
aas
imul
fwait
cli
fisttps
and
adc
xchg
dec
shl
pop
test
or
push
xchg
xchg
sub
je
dec
cwtl
add
test
adcl
adc
adc
loopne
ret
adc
jbe
cmp
in
adc
dec
jb
shll
hlt
scas
xchg
loopne
test
xchg
stos
stc
xor
cmp
pusha
xor
lods
test
push
psubusb
stos
pop
mov
pushf
mov
imul
shlb
mov
bound
cltd
mov
inc
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
jb
inc
loop
jle
adc
jle
sub
imul
cmc
leave
addb
adc
out
xorl
mov
push
pop
mov
outsl
push
in
sti
js
mov
push
dec
pop
cmp
mov
add
pmaxsw
mov
dec
and
lahf
fcmovb
fisttpl
cmp
or
cli
jge
xchg
dec
mov
aad
sub
data16
clc
and
popf
outsb
jge
in
cmp
push
xlat
mov
shll
sub
push
sarb
fisubrl
pop
xor
or
cmp
in
push
ja
cli
add
dec
mov
addr16
inc
jo,pn
aas
and
sub
test
add
mov
dec
push
outsb
mov
cmp
mov
lds
pop
ret
sarl
lods
add
outsl
xchg
add
stc
sahf
jge
push
rclb
add
push
hlt
xor
test
add
cli
mov
push
popa
addr16
push
dec
jge
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
adc
jg
jle
dec
xor
clc
rorb
push
sub
xor
mov
push
xchg
inc
push
cmpsl
sbb
data16
shr
stc
fs
pop
aad
push
or
or
lahf
mov
cmp
jb
mulb
pop
or
dec
jb
mov
insb
cmp
mov
pop
mov
xor
adc
xchg
out
fstl
ret
fidivrs
dec
fwait
add
imul
lods
cmp
std
pop
mov
xor
imul
xchg
or
mov
or
xor
iret
jge
in
js
xor
sbb
xor
fistpll
sbb
mov
insl
out
push
js
mov
mov
fcomps
mov
add
out
sbb
mov
jo
xor
repnz
mov
mov
inc
inc
mov
jbe
sub
lods
push
mov
jle
adc
xchg
test
scas
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
movsl
jle
push
jg
jle
pop
hlt
adc
sub
loop
pusha
test
mov
pop
call
js
in
jno
sub
or
pushf
je
inc
inc
dec
ret
push
adc
leave
aam
rcll
mov
inc
sub
pop
movsl
jge
xor
mov
pop
mov
sub
cmpsl
adc
lea
mov
or
sub
xor
or
jo
leave
or
jbe
mov
jle
imul
cli
fwait
sbbl
test
push
clc
lahf
out
std
test
push
xor
insl
xor
jno
pop
jg
xchg
out
fs
pop
out
jle
dec
popa
or
dec
sub
cmp
dec
push
insl
insb
fisubl
loope
icebp
pop
sbb
divl
aam
jl
sbb
mov
aas
and
pop
repz
push
add
push
test
imul
mov
test
or
push
inc
popf
cmpl
lods
popa
or
or
jb
adc
popa
cmp
sbb
xchg
inc
cmc
daa
addb
mov
and
out
and
sbb
ret
lds
cli
cli
push
cld
faddl
popf
xorl
pop
or
icebp
push
push
cmp
inc
shr
subb
into
dec
add
sub
test
lcall
mov
test
addb
push
jmp
adc
fcompl
mov
dec
fmuls
sbb
adc
pop
in
hlt
xor
hlt
dec
ficoml
int
and
lods
test
sbb
data16
sbb
orl
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
clc
or
mov
push
dec
push
jle
jmp
movsl
ds
dec
jno
inc
sbb
cmp
push
leave
mov
xor
lds
fisubrs
sarl
imul
lcall
arpl
pop
sub
cwtl
loope
mov
xchg
adc
mov
subl
push
cwtl
xchg
mov
test
data16
mov
pop
or
ljmp
test
push
nop
push
sysexit
lds
sbb
mov
mov
enter
push
mov
push
outsl
in
call
mov
mov
dec
jb
fbld
scas
push
leave
enter
mov
dec
pop
xor
jmp
jmp
dec
fwait
je
push
adc
mov
push
dec
ljmp
addr16
outsb
stos
jnp
xchg
jge
or
cmp
mov
xor
shll
cmp
out
test
shlb
mov
adc
push
aad
mov
sahf
jno
xchg
jmp
in
add
stos
cli
cmpsb
into
test
movsb
push
lret
nop
jnp
daa
xchg
jbe
xchg
je
inc
dec
inc
mov
add
and
xor
jle
inc
jg
ds
in
and
loope
and
or
dec
lods
cmp
or
ret
mov
les
mov
push
mov
pslld
in
addr16
fldenv
jp
sbb
lahf
imul
xchg
cmp
cmp
xchg
xchg
dec
mov
dec
jecxz
stos
cs
cltd
aad
sbb
xchg
push
cltd
or
stos
mov
mov
inc
mov
or
dec
stos
mov
pushf
sbb
mov
mov
cmc
mov
fiadds
sub
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
loopne
mov
jle
sbb
out
jns
cs
fstpl
int3
sub
ss
js
out
mov
sbb
dec
push
popf
cmp
int3
les
daa
adc
xchg
repnz
fcmovnu
testb
repnz
mov
mov
jne
xchg
arpl
mov
push
and
mov
das
mov
sbb
add
cld
jl
xchg
sub
push
push
cmp
jg
xchg
pop
push
jb
sbb
mov
addb
rorb
shr
mov
filds
mov
incb
dec
daa
or
sub
add
fmul
mov
aas
loopne
push
fdivs
out
outsb
outsb
adc
mov
pushf
nop
push
push
loop
sub
dec
lcall
test
ljmp
ret
xchg
adc
fstl
jmp
or
sub
xchg
jecxz
inc
jbe
mov
popa
push
lret
cmpsb
ss
cltd
sbb
test
mov
push
or
jmp
sbb
mov
data16
mov
int3
pop
push
push
and
inc
jmp
sahf
add
in
xlat
sbb
lret
inc
dec
cmp
jg
repnz
adcl
scas
add
and
mov
call
xor
pop
sub
mull
rclb
lock
nop
xor
or
adcb
cmpsb
in
cmp
fs
pop
cmp
fnsave
xor
lea
sahf
dec
push
or
xlat
push
fimull
mov
shlb
cmp
fiadds
pop
push
fcompl
aaa
sbb
adc
jne
dec
mov
ret
pop
int
mov
cli
das
sbb
push
fcmovbe
mov
add
mov
sbb
out
daa
jnp
cld
aad
or
xor
jne
inc
pushf
jno
leave
sbb
cmp
jnp
rolb
cwtl
mov
in
test
dec
push
pop
fcoms
fdivl
cmpb
dec
call
mov
pop
in
adc
jno
scas
stos
std
popf
jmp
insb
inc
or
dec
mov
fs
cwtl
xor
and
lods
cmp
jp
imul
sbb
xchg
add
in
sbb
clc
mov
xor
test
xor
sti
jo
or
add
stos
mov
aam
bnd
hlt
ror
push
add
pop
dec
push
xor
mov
pop
inc
inc
fdivs
lock
repz
imul
and
test
mov
pushf
mov
outsl
out
and
sub
fnsave
sub
movsb
mov
clc
xor
inc
mov
outsb
shlb
xchg
mov
add
mov
mov
xor
daa
cmp
add
add
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
xor
lods
jle
jl
jle
out
movsl
jg
imul
cs
and
lcall
sub
in
xor
fs
je
mov
cmp
aam
sti
inc
jne
movsl
int
iret
mov
inc
or
push
dec
xlat
adc
out
or
push
jb
shrb
ss
lds
lods
mov
pop
mov
xor
sbb
loop
lock
cmpl
xchg
jo
icebp
xor
sbb
aam
mov
xorb
clc
dec
outsb
repnz
sbb
out
push
dec
mov
into
pop
movsl
scas
dec
fs
jl
cmpsl
mov
jbe
xchg
mov
imul
cmp
insb
out
pop
mov
fldt
adc
rcrb
mov
rorl
loop
xor
popa
sub
rolb
scas
dec
lock
cmp
cli
pushf
ss
out
imul
imul
into
jno
cmpsb
adc
fdiv
sahf
xor
dec
jp
inc
push
dec
icebp
add
popf
aaa
gs
mov
inc
adc
push
das
je
mov
sub
cltd
xchg
push
pop
arpl
in
fwait
jae
jo
dec
call
inc
ljmp
test
dec
into
xor
sub
es
pop
out
inc
ficoml
cmc
shll
leave
xchg
int
jno
mov
cmc
pushf
xor
dec
lea
xchg
std
jmp
repz
jbe
cwtl
xorl
shll
enter
lds
test
jns
fimuls
or
pop
xor
mov
sti
adc
repz
sub
pop
orb
sti
mov
adc
push
inc
or
push
and
dec
add
test
ret
pusha
stos
mov
cld
push
sbb
cmp
cmp
cmpsl
inc
shl
mov
xchg
add
sub
pop
and
dec
fdivrl
rcrb
icebp
mov
aaa
sub
pop
insb
test
aad
sti
cmc
adc
or
mov
das
mov
daa
addr16
lret
or
pusha
loop
sbb
xor
std
jns
in
mov
in
loopne
push
lret
or
jp
jmp
decb
xor
mov
add
hlt
pop
lods
outsb
jp
test
xchg
pop
mov
cmp
popa
bound
hlt
movsb
mov
cli
sbb
push
mov
lcall
test
fsubr
and
jmp
cmpsb
pushf
push
push
js
or
or
sub
inc
mov
dec
leave
ja
shrb
inc
and
stos
mov
mov
adc
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
aad
stos
jle
jl
jle
aad
into
fistps
mov
ja
xchg
jmp
mov
aaa
imul
ss
xchg
and
cwtl
push
mov
push
scas
fnstsw
inc
or
dec
in
xchg
or
hlt
xchg
stos
jg
mov
aas
int
fwait
sbb
xor
sub
push
sub
push
xchg
stc
xlat
dec
cmp
mov
ret
clc
jecxz
push
je
mov
fcmove
mov
push
mov
adc
popf
xor
inc
xchg
xchg
mov
icebp
movsb
sub
and
sti
dec
in
dec
sbb
test
icebp
iret
scas
repnz
rep
xor
sub
stc
pop
inc
sbb
repz
gs
fs
rol
imul
jne
and
lahf
jl
shrb
aaa
pop
pop
pushf
mov
xlat
cmpsl
iret
jmp
push
imul
ret
push
mov
mov
pop
cmpsb
and
xchg
outsb
lock
xchg
push
mov
jl
imul
and
insb
lcall
popf
sbb
popa
hlt
imul
loop
loopne
movsb
push
inc
call
stc
jb
mov
dec
dec
xchg
rorb
cld
mov
movsb
sub
jno
sub
jg
push
scas
and
add
in
sub
add
push
adc
cmp
test
out
sbb
roll
aad
adc
leave
cmc
or
daa
push
pop
pop
outsb
sbb
mov
leave
das
sahf
jle
sub
push
test
and
in
or
xor
sub
aam
test
mov
ss
dec
lea
jecxz
and
fistl
jecxz
idivb
test
xchg
dec
mov
popa
lea
pop
repz
insl
sub
call
add
inc
or
jae
inc
mov
cmc
jno
rol
outsl
fs
nop
sub
mov
dec
inc
fwait
sti
adc
mov
subb
outsb
imul
pop
push
in
fiadds
or
adc
adc
add
cmp
jle
xor
mov
jmp
mov
fldenv
jp
and
flds
cmp
inc
push
clc
xor
jl
or
push
xchg
cli
in
add
roll
rorb
es
cmp
adc
xchg
mov
in
sub
adc
ja
cmc
and
rol
push
and
or
or
push
stc
and
ret
lret
mov
or
incl
ret
icebp
sub
or
add
mov
push
je
sub
js
out
xchg
add
xor
inc
mov
pop
popf
fidivl
sub
and
aas
scas
mov
data16
xor
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
hlt
push
movsl
shlb
jle
int3
pop
popa
mov
mov
jp
negl
push
shll
mov
das
sarb
cmp
sahf
rcr
gs
push
int
lret
pushl
je
aam
les
push
cmp
mov
pop
xor
dec
lcall
arpl
test
std
xor
nop
pushf
jmp
jp
xchg
pop
stc
addr16
ds
mov
mov
imul
mov
push
shll
mov
call
es
pop
jmp
inc
loop
int
adc
add
pop
xchg
mov
ljmp
mov
fistpl
cs
adc
test
jo
jp
pop
jno
nop
add
push
hlt
xchg
ljmp
inc
push
mov
mov
mov
dec
cmp
in
fsts
mov
mov
ss
and
in
mov
cltd
lret
jmp
in
push
jg
inc
int3
mov
enter
in
es
jo
orl
iret
mov
pop
test
imul
mov
mov
jl
fucomp
cmp
inc
sbb
fmul
dec
jo
add
pop
mov
into
outsl
addr16
cltd
test
fstpl
lret
test
cmp
jg
jge
cs
sub
lods
pop
out
cmp
adc
pop
ja
and
shll
dec
jns
push
sub
divb
sahf
scas
xchg
jb
add
sub
sub
push
push
test
or
addb
adc
cmp
fildll
rcrb
aas
pop
mov
push
mov
pop
inc
js
loop
ljmp
mov
ja
sub
aad
add
push
xchg
dec
lahf
loopne
lds
mov
xchg
das
call
dec
insl
push
shrb
push
jno
pop
pop
jo
data16
or
imul
add
xchg
xchg
cmp
push
jmp
mov
push
xchg
fsubrs
mov
out
fildll
pop
and
mov
pop
and
push
xchg
or
popa
push
add
sub
aad
ret
mov
mov
jb
je
push
insl
cld
mov
cmpsb
paddusw
shr
jae
jmp
sahf
movsb
fcompl
adc
ljmp
mov
jecxz
movsb
jp
dec
add
aam
jmp
mov
push
mov
insl
dec
ret
or
out
mov
clc
sbb
cmp
push
and
mov
jle
addr16
pushaw
popa
xor
inc
xorl
into
inc
scas
adcb
jecxz
cmovle
aas
movsl
rcl
cmpsl
cmc
sar
mov
push
push
sahf
dec
mov
insl
addr16
jo
in
aas
out
jge
inc
or
sarb
jmp
or
pop
jno
xchg
add
fmull
fidivs
jle
push
dec
scas
jo
add
and
test
fadds
jb
cmc
jle
fstpl
or
bound
pop
cld
push
lods
fisubrl
mov
mov
repz
xor
mov
inc
lret
fstpl
roll
orb
xchg
ret
insb
inc
mov
and
test
dec
rcll
and
inc
shrb
and
lds
dec
cmp
jecxz
xor
pusha
sti
xchg
sbb
sbb
sbb
into
cmpsb
mov
mov
daa
dec
or
addr16
ss
mov
cmp
fidivl
jecxz
xlat
ret
xor
insb
jno
nop
dec
xchg
lahf
mov
jge
inc
movsl
out
jp
imul
sub
push
xlat
stos
and
ljmp
insl
fistps
mov
popf
inc
and
add
sbb
dec
inc
es
or
mov
or
cld
or
test
lock
sub
push
push
jmp
imul
jno
or
stc
dec
inc
aad
add
ds
cli
and
daa
xchg
sbb
dec
ud1
sbb
push
or
dec
das
mov
outsb
pop
and
aam
fs
pop
mov
cmp
xchg
mov
popf
mov
leave
add
lahf
xchg
cs
pop
adc
clc
lds
dec
gs
es
scas
ret
shlb
test
stos
shlb
lock
int
and
push
sub
add
lret
fisttps
inc
pop
repz
jns
mov
adc
fs
pop
in
push
jo
loop
std
mov
pop
jge
push
filds
lret
mov
int3
xor
outsb
jne
scas
xchg
je
push
xchg
int
ret
test
out
pop
pop
mov
loopne
pop
test
adc
xchg
shl
cld
dec
xchg
cmpsb
adc
mov
icebp
lahf
xorl
cmc
add
jmp
push
jge
in
faddl
cmp
out
dec
mov
push
mov
mov
out
incl
jl
xchg
jle
adc
enter
push
repz
dec
jbe,pn
cmp
push
push
sbb
adc
cmc
xchg
or
stc
sbb
dec
lret
pop
mov
cmpsb
pop
jbe
adc
cmp
mov
or
dec
xor
int3
inc
mov
mov
shll
test
outsb
push
xchg
xrelease
lret
jo
mov
int
push
cmp
popf
clc
pop
dec
inc
adc
push
dec
push
outsb
daa
lods
xchg
arpl
xor
push
cmpsb
cmpsb
jp
in
sbb
push
add
and
mov
cltd
cmp
pop
leave
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
bound
fdivl
jle
or
push
mov
push
cmp
cmp
cs
outsl
add
pop
sar
icebp
mov
pop
outsl
pop
xor
data16
or
pop
push
mov
sarb
inc
and
pop
push
dec
in
or
aas
inc
pop
cltd
inc
shrb
add
jl
and
sub
out
pop
mov
notb
out
orb
mov
shll
movsb
adc
or
lahf
out
push
inc
push
mov
fmul
lahf
ljmp
push
push
sbb
es
mov
inc
cmp
in
sub
dec
fisubrl
jb
insb
jp
ss
cmpsb
ja
jecxz
xor
pop
cwtl
mov
jno
rorb
xor
popf
and
in
mov
lods
arpl
push
cmpsl
in
sbb
xchg
sbbb
sub
pop
xlat
andl
pop
sub
insb
loope
dec
sti
xchg
push
mov
cmp
push
dec
aam
sub
inc
adc
sbb
jo
add
arpl
cltd
fisttps
imul
adc
dec
push
sub
insl
jnp
out
loope
loopne
push
xchg
mov
int
xchg
pop
and
jg
push
cmp
fsubl
stos
icebp
inc
lret
insb
test
stos
push
out
push
inc
pop
jbe
dec
mov
orl
daa
mov
clc
gs
xchg
fidivs
aas
mov
sbb
dec
adc
xchg
xchg
testl
daa
hlt
adc
or
inc
in
jbe
pop
pop
jae
fcmove
jp
aad
pusha
jns
enter
jg
stos
xor
repz
std
ret
mov
cs
das
leave
stc
mov
lret
pusha
leave
lret
or
add
pop
ret
test
push
mov
push
rcll
data16
jp
dec
es
fsts
jb
jg
cli
mov
sarl
add
pop
jmp
in
stos
fdivs
adcl
imul
fsubp
and
mov
xor
inc
cmp
mov
in
scas
stos
sbb
pop
jbe
pop
dec
adc
subl
in
mov
jns
inc
lcall
test
daa
imul
mov
arpl
fmull
sbb
sub
imul
dec
js
push
cltd
jnp
pop
incl
xchg
lock
mov
pop
loope
push
add
test
pop
ja
in
push
lock
jge
pop
fs
push
clc
sahf
out
push
add
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
jg
gs
cmp
jle
sahf
add
test
filds
cmp
jmp
adc
insb
outsl
push
movsl
sbb
mov
xlat
xor
xor
fs
les
inc
inc
jle
lahf
mov
subl
push
loope
enter
jae
xor
roll
in
dec
lds
fdivrl
scas
dec
add
push
pop
lahf
dec
jbe
sti
arpl
cwtl
cld
leave
sahf
xchg
jp
jmp
pop
divb
sbb
add
or
outsl
arpl
or
mov
xor
mov
stc
dec
icebp
lret
push
test
or
enter
psubsw
movsl
mov
test
les
cmpl
mov
push
enter
mov
mov
sbb
or
jbe
pop
out
mov
xor
xor
shlb
push
mov
mov
lods
andb
pop
push
out
jl
cmpl
es
push
dec
fcmovb
rolb
adc
or
test
mov
shrl
adc
push
aas
cmpsb
testb
mov
and
in
fdivl
inc
es
mov
mov
jns
sub
sbb
test
push
outsb
push
mov
shr
lea
aaa
mov
sub
add
mov
stos
cmpsl
adc
gs
lret
xchg
pushl
and
stos
add
test
mov
pop
daa
xchg
dec
jnp
test
sub
ds
xor
and
mov
arpl
gs
push
xchg
pusha
pop
xlat
nop
add
fisubrs
aaa
fwait
sub
sarl
jg
mov
cwtl
daa
stos
in
jns
cld
repz
and
push
sub
pop
adc
rorl
not
stc
adc
cltd
add
xchg
inc
cs
imulb
mov
repz
movsl
sbb
xor
insl
push
fxch
lret
mov
outsl
sbbb
push
mov
mov
adc
stos
jae
xlat
fstpl
push
mov
inc
jle
cs
or
fcmovu
and
popf
lret
pop
leave
xchg
sti
xchg
std
out
into
sbb
and
pop
ljmp
adc
outsb
jecxz
and
dec
mov
dec
aad
inc
xor
xchg
imul
add
data16
sub
mov
jmp
add
fdivl
lock
xchg
pop
lock
scas
jl
jle
rcrl
sub
add
jno
shll
pop
cwtl
lcall
fnstenv
in
xor
sub
mov
mov
jno
push
pop
add
lods
fistpll
test
adc
sbb
sub
or
sbb
xchg
mov
jnp
cmp
insl
in
ret
cmp
lds
sub
xchg
xchg
push
jb
inc
shr
roll
push
cld
in
cs
fwait
roll
lds
inc
sub
loop
imul
ds
sbb
in
sub
jl
adc
ja
mov
xchg
inc
loop
pop
dec
or
mov
pop
adc
cmp
das
imul
addr16
popa
mov
xor
cmp
jmp
mov
outsb
shll
sarb
and
scas
xor
aam
and
xor
aam
pop
xchg
push
push
or
out
mov
jl
mov
mov
stos
sbb
ljmp
or
pushf
sbb
sbb
cmp
popa
xor
clc
js
gs
rolw
cmp
adc
sub
inc
test
pusha
mov
push
les
fldl
sub
mov
adc
inc
jp
push
lock
dec
gs
push
data16
pushf
dec
sahf
xchg
loopne
out
in
pop
and
aaa
rcrb
outsl
stos
mov
sbb
das
sbbb
stc
fdivl
jg
lcall
xor
xchg
ss
mov
or
jns
jbe
inc
gs
fbld
in
ret
fucomip
add
sbb
xor
jp
xchg
pop
add
sub
daa
lret
xchg
test
in
xchg
shll
cmp
aad
out
jmp
push
sbb
xor
lret
mov
mov
xchg
scas
rcrb
push
add
loopne
cwtl
jb
hlt
mov
cwtl
enter
sbb
xor
imul
cmp
sarb
jae
cmp
inc
pop
jge
jb
loop
mov
fsubrs
fistl
mov
push
jne
int
pop
cmp
lahf
pushw
fildll
add
das
dec
fildll
roll
dec
leave
aad
adc
push
jae
jecxz
dec
adc
leave
mov
mov
mov
jmp
je
push
push
lock
outsb
dec
mov
push
jmp
jle
scas
jl
jle
jmp
sbb
shll
dec
pop
outsl
loopne
scas
xchg
mov
or
jl
enter
movsb
icebp
cs
mov
mov
sahf
jbe
add
or
mov
jmp
push
arpl
lds
shlb
mov
sbb
push
xor
adc
dec
dec
std
pop
cmpsb
mov
scas
add
lock
gs
mov
dec
test
ja
mov
adc
sbb
sub
test
mov
popa
sub
sub
or
imul
jno
add
mov
push
adc
push
inc
cmp
mov
push
cli
adc
loop
cmp
repnz
cmp
or
xor
test
cmp
xchg
mov
push
imul
dec
jnp
movsb
ja
push
pop
imul
or
mov
test
loope
push
subl
mov
in
stc
test
xchg
jno
push
xor
or
int
mov
int
fcomip
hlt
sbb
jbe
je
scas
je
lock
push
ret
mov
jb
in
hlt
xor
pop
mov
adc
ljmp
out
pop
lea
adc
in
jl
mov
add
popf
dec
pop
mov
add
push
ret
insb
cs
mov
pop
addr16
inc
lods
insl
push
push
ret
jmp
subl
ljmp
lahf
orl
fwait
jle
addr16
inc
inc
inc
decl
call
sub
fldenv
ds
sbb
adc
arpl
cmp
sahf
pushf
dec
out
pop
jnp
mov
jo
fisttpl
cmc
lret
sbb
js
cmp
fstpl
jecxz
push
xchg
loope
sub
shrb
pusha
leave
jp
sub
xchg
mov
pop
movsl
orps
cmp
cmp
mov
or
aaa
sub
movsl
das
mov
pop
inc
aas
xchg
dec
and
pop
push
dec
out
sarb
pop
add
sub
mov
in
xchg
jb
sbb
mov
lods
mov
test
in
cmpsb
push
and
dec
inc
mov
xor
daa
mov
pop
xchg
pop
mov
in
out
int
and
jmp
cltd
xlat
shrl
mov
addr16
mov
or
into
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
incb
inc
sbb
jle
jl
jle
pop
cwtl
std
adc
jne
xor
sub
dec
orl
jnp
les
jmp
fdivrp
sbb
cmc
or
cmp
jle
jns
mov
sub
mov
jle
add
leave
dec
cmp
lahf
push
call
dec
jp
fstps
and
xchg
movsl
std
pop
inc
xchg
bound
int
cld
jp
pop
stc
jl
xor
xlat
rcrl
adc
lods
jo
push
lods
shll
sub
sbb
in
inc
xor
insb
xor
aas
int
into
cli
in
add
enter
popf
jns
push
pop
es
les
xor
push
jo
repnz
adc
xor
pop
push
xor
inc
stos
jno
out
or
jnp
imulb
add
scas
adc
insl
lds
sahf
test
call
fs
repnz
pushf
popa
cli
sub
inc
jecxz
xlat
rcrb
imul
push
xor
push
in
in
call
sarl
in
sub
xor
mov
sub
orl
xchg
subb
aas
and
pop
inc
iret
mov
pop
arpl
mov
jb
mov
outsb
aad
bound
lcall
cmp
out
push
cmp
dec
jecxz
mov
rcl
clc
adc
and
in
insl
je
roll
aas
mov
cmpb
mov
sub
enter
adc
mov
ljmp
mov
and
arpl
sahf
lea
pop
jmp
jne
cmpsb
das
cmc
xchg
repz
les
faddp
stos
add
jnp
add
dec
stos
jecxz
stos
test
jno
xchg
lods
push
iret
mov
lea
mov
divl
pop
sarb
push
cmc
lret
cmp
pusha
xor
out
mov
xchg
fstl
cmp
push
std
mov
out
and
mov
xchg
aam
pop
sub
out
dec
pop
scas
in
and
mov
mov
adc
xor
inc
shl
mov
daa
add
add
cmpsb
xchg
or
dec
cmpl
out
cltd
imul
out
pop
cmp
aaa
mov
out
pop
pop
jns
sti
dec
pop
xor
cmpsb
jmp
cli
mov
jl
mov
repnz
fwait
je
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
js
fisttps
jle
scas
jl
jle
cmp
stos
imul
xor
pop
or
int3
lret
andb
ds
lcall
xchg
aas
add
xor
lcall
scas
stos
xor
cmp
test
ja
ret
xor
int3
pop
imul
mov
pop
cmpsb
lock
in
dec
xchg
aaa
add
lret
xor
dec
negb
or
imul
clc
sub
lods
pop
push
inc
call
jle
das
les
xchg
adc
and
sub
mov
lcall
sbb
int
adc
fiaddl
fstps
mov
dec
cmp
xchg
push
xchg
test
mov
dec
repnz
inc
mov
sahf
cmc
push
hlt
push
inc
aad
push
add
enter
fadd
inc
aaa
pop
pop
decb
mov
and
mov
mov
push
ret
out
test
add
call
repz
and
arpl
inc
pop
xchg
paddw
xor
cmpsb
pop
pop
push
inc
push
cmp
jo
insb
mov
sar
mov
push
mov
mov
xchg
or
mov
or
push
int3
out
aam
sub
enter
cmp
adc
aas
into
cld
int3
cmpsb
daa
cmp
fistps
pop
out
loope
sub
sarb
dec
das
mov
aam
es
push
cmpsb
cli
loop
xchg
shll
xchg
sahf
adc
and
popf
out
sbb
push
scas
insb
mov
or
inc
lret
add
sti
xor
int
cmp
xlat
dec
add
cld
mov
push
jo
mov
mov
popf
xor
std
in
shlb
fsts
dec
fstpt
rclb
jno
outsb
adc
xor
mov
lret
pop
push
sti
dec
stos
in
mov
xor
sub
dec
out
insl
in
xor
add
movsb
js
inc
mov
fs
loop
adc
das
fsubr
and
sub
pop
ret
out
xchg
or
mov
pop
ret
sbb
pop
mov
inc
cmpsb
jno
rorl
add
imul
push
pushf
push
loop
mov
stos
std
or
daa
jb
pusha
mov
push
sub
in
imul
mov
adc
cmpsl
mov
lds
out
lcall
add
jb
loop
and
jl
cwtl
lods
inc
cltd
xor
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
and
xchg
jle
jg
jle
stos
aaa
inc
das
outsl
jbe
cmp
fsts
sahf
nop
movsb
dec
test
rolb
jae
push
adc
jp
fucom
xor
adc
bnd
int
ljmp
xchg
or
inc
xor
pop
pop
cmp
daa
inc
dec
cwtl
into
mov
pop
mov
dec
lcall
add
push
xchg
push
imul
loop
iret
add
sahf
xchg
mov
leave
jl
lds
add
sbbl
cwtl
lcall
cltd
out
xchg
test
aaa
add
orl
sbb
rcrb
mov
mov
test
je
fisttpll
adc
add
add
jnp
lret
pop
nop
and
data16
dec
add
or
add
out
stos
fimuls
jmp
stos
sub
stos
in
cs
push
xchg
mov
mov
xchg
mov
xchg
sti
ja
loope
pop
in
mov
mov
dec
pop
les
sub
mov
arpl
aas
adc
dec
popa
xchg
or
xor
test
push
push
rolb
sub
fiaddl
add
sbb
xchg
sarb
sti
add
cmp
sub
in
icebp
cwtl
cmp
fisttpll
aam
cmp
mov
mov
jo
ret
cmpsl
sahf
rcrb
ss
mov
jae
inc
xor
push
mov
mov
es
cltd
sub
fidivl
in
sub
pop
out
inc
imul
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
aaa
out
aad
sub
jle
movsb
jg
jle
jb
jmp
adc
daa
dec
out
std
cs
sbb
and
lcall
add
int
sub
jge
scas
xor
outsb
xor
and
bound
pop
sahf
push
cmp
stos
jle
imul
pop
fnsave
inc
inc
insl
mov
jmp
pushf
sub
and
mov
mov
arpl
rcll
add
fcom
xchg
adc
sarb
cmpsl
pop
adc
xchg
push
punpckldq
add
xor
aam
and
fisttpll
icebp
xchg
insb
inc
mov
negb
xor
mov
mov
cmp
das
lret
push
je
out
adc
insb
sub
mov
adc
and
fnstenv
repz
aad
fisttpll
dec
push
jp
and
stos
lock
cmpsl
jae
inc
cmp
xor
pusha
sbb
or
mov
jnp
cltd
cmpl
jo
or
or
negl
dec
jge
repz
jbe
jge,pt
mov
test
ret
cmpl
in
enter
jg
lret
cmp
cmp
push
je
mov
jb
insb
ret
dec
aam
movsb
insb
xchg
sbb
and
aaa
outsb
mov
push
xorl
fcmovnb
hlt
inc
lods
orb
repnz
sub
mov
xchg
push
rcr
inc
fimull
scas
or
outsl
fs
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
inc
mov
movsl
add
add
add
mov
iret
xor
push
fs
or
add
sbb
cmc
repnz
frstor
mov
jbe
xchg
jecxz
cld
fucomip
mov
sub
cmp
inc
dec
je
or
adc
mov
call
sbb
insl
test
jge
hlt
and
jge
jecxz
dec
jmp
in
shlb
cmp
mov
add
xor
sub
push
sar
cmp
pop
pushf
add
adc
pop
frstor
inc
lea
movsl
cli
in
rcl
inc
cwtl
mov
mov
mov
or
sbb
fistpl
xchg
or
popf
and
shr
jmp
pop
pop
lods
hlt
mulb
stc
lods
cmpsl
fmul
aad
popa
movsl
dec
lds
mov
or
imul
inc
div
add
xchg
fcoms
xorb
pop
fs
dec
clc
clc
and
jns
mov
inc
sti
and
shll
add
pop
ficoml
in
jle
lcall
adc
rolb
add
add
loop
testl
aas
xchg
sbb
dec
push
jbe
pop
repz
fsub
loope,pn
shlb
jbe
dec
xchg
ja
xor
xchg
fwait
jo
or
add
jne
sbb
mov
sbb
push
sub
stos
mov
add
outsb
add
dec
cmpsb
push
xlat
jmp
push
adc
sbb
mov
js
pop
inc
push
stos
in
dec
mov
mov
call
pushl
dec
fs
addb
clc
rcrb
mov
push
xor
push
sbb
xchg
rcrb
in
add
cltd
imull
mov
loop
ret
jne
mov
scas
and
shlb
pop
add
mov
mov
insl
inc
dec
pop
fs
aas
inc
aam
dec
stos
or
test
xchg
dec
nop
add
pop
dec
in
in
add
mov
outsl
jmp
cmc
add
xchg
jp
add
add
mov
push
jbe
jg
in
add
add
add
mov
jle
jmp
ss
test
lret
add
xor
enter
cs
and
mov
sbb
mov
lret
mov
pop
mov
cmp
xorl
fcoml
insb
scas
mov
test
pop
dec
fsub
sbb
dec
dec
adc
inc
loope
ja
lret
ret
mov
inc
adc
pop
jle
mov
sbb
xchg
test
mov
cmpsb
jmp
mov
xchg
sets
popa
in
sbb
idivb
pop
mov
jmp
pop
mov
stc
jecxz
sub
cmp
sub
cmpsl
push
xchg
movnti
push
outsl
mov
out
shlb
pop
mov
sub
cmp
cmp
jp
inc
cmp
adc
dec
jle
sub
xchg
jl
repnz
adc
add
push
dec
push
inc
hlt
call
add
mov
roll
jae
dec
dec
call
add
add
jo
subl
sahf
pop
jae
std
int
xchg
pop
fwait
xor
int3
mov
pop
cltd
lods
inc
pop
adc
push
test
xchg
jle
mov
pop
lahf
and
mov
push
jne
cmp
jmp
insl
outsl
rol
shll
faddl
inc
jo
mov
mov
sub
push
mov
mov
and
arpl
add
or
xchg
lods
add
xlat
sub
or
out
inc
into
lea
jg
sbb
das
inc
add
ret
push
lods
arpl
jae
aaa
sarl
ret
fnstsw
xor
outsb
pop
lret
inc
fldcw
cmp
sbb
test
sub
adc
dec
adc
mov
daa
aas
push
das
push
xchg
fnstenv
and
cmpb
jo
cwtl
xchg
xchg
push
dec
shlb
adc
sahf
stos
cmpl
jmp
and
cmp
pop
jae
or
pop
dec
or
test
add
add
rcrl
mov
ss
sub
repz
push
fiadds
jns
cmpsl
testl
inc
outsl
in
test
xchg
fadds
ret
cltd
addr16
sbb
xor
mov
in
or
mov
or
xor
jg
rcll
xchg
jns
add
inc
jo
add
lods
sub
fdivrl
out
or
inc
iret
cmp
loopne
je
fistps
addr16
add
jl
cmpsl
pop
cltd
lds
mov
sbb
sbb
scas
lret
dec
cli
fnstcw
daa
xchg
push
sub
mov
push
int
popf
push
gs
sub
sub
xor
lcall
jne
push
sarl
popa
leave
roll
mov
scas
xor
xchg
int
scas
adc
jg
or
sbbl
out
jge
icebp
xor
or
cmp
sbb
dec
jg
cmc
insl
cmc
out
lcall
enter
cmp
add
add
add
fisttpll
js
push
jl
call
rclb
fistpl
out
hlt
sti
cltd
imul
notl
das
sbb
bound
arpl
in
incl
add
sub
imul
push
sbb
loop
fimull
cwtl
xor
imul
xor
pop
adcl
mov
push
xchg
pushf
stc
jmp
outsb
sbb
push
int
add
loope
jbe
xor
incl
adc
add
sti
adc
inc
in
shl
je
ret
adc
movsb
pop
call
mov
sub
aad
dec
inc
adc
addl
cmpsb
jmp
int3
decb
popf
icebp
je
daa
lods
ljmp
enter
inc
stos
out
or
mov
or
add
add
pop
negl
imul
add
add
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
pop
ret
aas
cwtl
sub
push
incl
dec
ss
out
dec
xor
xchg
and
aad
push
mov
sbb
jmp
inc
shl
sahf
sbb
lods
incl
roll
lcall
incl
loopne
lds
and
pop
ss
dec
flds
mov
call
movsl
std
dec
xchg
fwait
jp
int3
xor
pop
adcb
push
mov
int
fldenv
les
frstor
icebp
gs
clc
and
xchg
cli
mov
sbb
jne
xor
xchg
jno
mov
mov
inc
dec
cmpsb
sbb
out
push
in
xor
dec
jl
cmp
test
movsl
jb
in
xchg
jnp
dec
pop
in
push
stos
pop
test
jno
sub
in
xchg
movl
cld
adc
ret
sti
jg
cwtl
adc
lcall
mov
wrmsr
jg
outsl
push
jmp
add
jle
and
scas
sti
jle
pop
push
pop
mov
xchg
mov
fadds
add
add
repnz
scas
js
sub
popf
mov
sub
sar
sbb
gs
lods
in
ret
rclb
dec
iret
je
mov
stos
or
ss
es
out
stc
jbe
outsl
inc
je
je
dec
add
bts
aas
add
add
jmp
dec
loope
jo
and
xchg
hlt
or
iret
inc
mov
cwtl
push
cmp
and
je,pt
lea
pusha
mov
ja
lock
mov
dec
sbb
dec
mov
pushf
jnp
aas
mov
lahf
pop
mov
xchg
test
pop
fcomps
pushf
sbb
xlat
sub
adc
cmpsb
std
jae
pop
call
aad
cmp
icebp
cs
loopne
and
sub
and
mov
mov
cmpsl
sbb
clc
jle
lahf
cld
jae
scas
pop
sbb
mov
dec
aas
popf
cmp
mov
mov
jnp
adcl
or
lahf
fnstcw
ss
lahf
stc
bound
xorb
add
add
add
or
adcb
cwtl
jmp
mov
insl
loope
inc
lock
or
sbb
rolb
test
popf
xor
fbstp
out
and
mov
cltd
add
bound
adc
xor
sti
cmp
mov
in
push
sbb
mov
push
movsl
mov
xor
adc
xchg
ficompl
jb
cmp
dec
push
mov
inc
sub
stc
lahf
push
daa
aad
cld
or
sub
mov
xchg
repz
clc
push
mov
push
xchg
mov
lcall
iret
add
add
pushf
jg
jmp
and
adc
cmp
xchg
dec
inc
div
pusha
aam
jb
in
jecxz
jmp
lea
scas
inc
sbb
sahf
xor
lret
add
and
and
xor
sub
push
mov
ljmp
fsubl
mov
add
add
push
jl
jle
insb
out
cs
or
add
add
add
add
popf
std
inc
inc
dec
mov
movsl
mov
push
dec
insb
outsl
jo
sbbl
jne
dec
xchg
movsb
in
fidivrl
dec
cwtl
mov
inc
lcall
loop
mov
mov
loop
jge
sub
xlat
repnz
jp
leave
pop
cmpsb
cmp
insl
adc
jb
test
jnp
jg
scas
or
das
test
pushf
stc
mov
jnp
inc
test
test
cmp
pop
jae
sub
or
movntps
cmp
aam
mov
mov
push
lods
fidivl
sub
push
pop
pop
cld
jno
mov
sbb
cmp
push
js
pop
fadd
lea
enter
inc
pushf
adc
stos
sub
jg
repnz
icebp
mov
and
or
mov
pop
faddl
or
imulb
fildl
mov
sti
test
fldenv
pop
sub
in
mov
adc
in
xor
adc
add
add
add
add
imul
xchg
orb
adc
mov
repnz
xchg
test
addb
xor
insb
xor
jge
sub
repz
dec
sub
mov
aaa
call
push
fwait
jo
mov
scas
xor
mov
sub
inc
xchg
mov
in
mov
cs
push
push
jl
jmp
sub
sub
int
call
xor
push
jne
hlt
or
or
mov
cs
and
loop
jmp
addr16
add
daa
das
cmp
add
mov
in
cli
push
and
call
movb
jo
mov
inc
lock
push
mov
mov
mov
cmp
icebp
or
insl
fmuls
cmp
add
or
arpl
jle
lods
sti
adc
adc
add
add
data16
jne
mov
lcall
add
add
add
mov
jnp
lret
xchg
cmp
scas
mov
push
mov
dec
subl
push
rcll
das
movsl
dec
shrl
and
jne
cmpsb
inc
jno
loope
inc
jp
je
xor
ret
lahf
sub
xchg
mov
enter
rorb
leave
dec
cmc
mov
mov
fisubl
test
add
cmp
pop
outsb
or
out
stc
cmp
jo
loopne
fmull
or
push
loope
or
dec
inc
xchg
push
and
mov
sbb
dec
mov
jnp
shr
add
repz
xchg
sub
mov
jecxz
jno
xor
and
adc
add
xlat
xor
out
out
outsb
mov
mov
cld
shlb
popa
into
pop
stos
mov
dec
add
insb
adc
andl
and
loope
ds
jnp
add
jnp
sti
xchg
lahf
mov
cmp
or
add
add
add
fnstenv
sub
jl
cli
push
sub
pop
cmp
ljmp
or
inc
lods
loop
mov
mov
enter
and
jns
es
adc
xor
loope
add
cmpsb
fistpll
xor
inc
repnz
repnz
test
movsl
and
gs
mov
xlat
sub
xor
and
cmp
xlat
mov
push
xor
xchg
push
inc
pop
push
mov
or
test
xchg
mov
mov
add
icebp
nop
pushf
leave
fcmovnb
js
jl
stos
fldenv
sarb
arpl
push
leave
push
adc
stos
inc
adc
imul
lcall
inc
sub
mov
outsl
mov
in
dec
or
es
sbb
dec
stos
mov
jg
loopne
sub
ss
int
mov
dec
mov
xchg
cmp
pop
cmp
and
mov
sub
dec
mov
sbb
add
add
pop
sarl
mov
loop
filds
add
add
mov
loop
pop
jmp
into
movsb
jb
in
mov
fbstp
pop
lret
and
repz
add
nop
jp
scas
xchg
addb
push
int
sbb
mov
pusha
repnz
es
and
adc
and
in
jo
scas
mov
ja
mov
xchg
push
leave
and
mov
jecxz
jecxz
out
fstpt
sbb
mov
jbe
sub
cmp
shll
loope
pop
shl
and
push
push
stos
add
out
jno
movsl
in
xlat
rorl
shll
mov
fcoml
add
mov
popa
push
sub
jg
enter
aaa
sub
loop
fdiv
icebp
mov
and
scas
aaa
inc
mov
nop
lret
mov
into
mov
sbb
pop
out
mov
add
mov
mov
sbb
dec
and
insl
lock
std
repz
xchg
push
aas
adc
add
add
add
pop
loope
test
cltd
xchg
adcl
sub
js
sub
mov
cltd
ljmp
fnstenv
loopne
inc
xor
pop
xchg
lods
mov
adc
adc
notb
xchg
sub
dec
loope
popa
adc
dec
push
mov
push
outsl
mov
pop
popa
fiadds
fsubrs
ret
ret
jp
decl
mov
outsl
xlat
outsl
shrl
imul
roll
push
sub
lcall
sub
sbb
sti
pop
out
inc
insb
mov
sbb
das
xchg
rorb
dec
dec
ljmp
frstor
dec
sub
out
cmp
in
jmp
stos
std
lahf
sub
je
mov
call
lcall
insb
add
push
inc
push
mov
mov
addr16
add
in
sub
cmp
arpl
je
ja
in
sbb
add
add
add
mov
icebp
sbb
std
adc
inc
daa
push
jno
mov
dec
fadds
rcrb
jno
push
int3
fstp
pushf
cmp
xchg
fs
adc
data16
cmp
addr16
cmp
adc
enter
or
adc
das
enter
aam
jno
mov
cmp
and
mov
jbe
sub
lea
mov
push
xchg
notb
push
inc
insl
clc
pop
arpl
or
ds
das
sub
sub
xor
outsl
cli
loop
lea
xchg
jb
lret
adc
mov
repz
popf
orl
adc
clc
inc
push
divl
fninit
add
mov
xchg
scas
mov
or
sub
add
leave
imul
icebp
ja
popa
lds
inc
push
or
cmp
hlt
push
xchg
jg
loopne
and
lret
jno
push
push
fstpt
sti
popa
xchg
stos
cwtl
mov
jecxz
mov
mov
add
add
insl
lcall
mov
inc
sub
mov
mov
loop
add
add
stos
pop
push
cmpl
cmc
dec
mov
int
xor
shll
mov
sbb
push
push
xor
cltd
stc
imul
mov
cwtl
push
iret
sub
push
mov
fwait
movsb
shlb
inc
dec
add
sbbl
inc
push
mov
inc
fs
push
std
mov
lods
pop
loopne
mov
int3
mov
add
lods
out
sbbb
mov
mov
sub
cmp
and
scas
movsl
jnp
mov
mov
lods
mov
addr16
xchg
scas
xor
test
enter
test
mov
pop
inc
jl
dec
add
cmp
add
cli
das
sub
push
mov
popa
adc
fidivrs
es
mov
scas
sti
das
xlat
loope
and
or
adc
jnp
inc
jecxz
lods
xchg
add
cmp
xchg
and
mov
add
xchg
in
mov
incl
sarl
or
mov
add
add
jnp
sub
dec
or
cmp
scas
test
stos
mov
enter
loope
adc
adc
pop
gs
aam
aaa
add
dec
jl
fsubrs
jge
pushf
or
aad
popl
push
push
popa
jg
xchg
fcompl
push
inc
cmp
jl
push
in
mov
mov
cmpl
adc
loopne
ja
subb
loop
or
xchg
sbb
sub
inc
imul
jp
xor
leave
sub
not
xor
cs
xor
incb
je
ss
and
sar
ret
fwait
adc
jae
push
nop
jno
push
jns
xchg
mov
lret
cli
sbb
push
gs
cmp
gs
dec
mul
or
std
stos
sti
enter
in
pop
out
and
mov
imul
adcb
dec
push
dec
mov
inc
mov
in
negl
sub
movsb
cmp
aaa
hlt
and
add
add
add
gs
sbb
push
imul
sbbb
cmp
popf
jge
scas
js
dec
mov
scas
add
lret
int3
ja
in
rclb
mov
in
sbb
sub
pop
test
push
mov
popf
or
mov
push
loopne
pop
es
xchg
imul
into
xchg
ret
cmpb
push
testl
jb
inc
daa
jno
hlt
mov
ret
out
movsl
subl
mov
orl
or
jnp
aam
dec
sbb
jb
out
or
pop
fiaddl
pop
fadd
aam
cmpl
add
cli
mov
and
icebp
scas
cmp
jle
fisttpl
dec
fcmovb
xchg
mov
ror
mov
leave
lock
out
incb
sbb
push
les
sbb
push
enter
insb
rcrb
sub
fxsave
add
add
mov
stc
dec
push
fmull
jo
in
add
add
push
shll
fs
cmp
sbb
lahf
in
js
cmp
add
lret
add
xor
fildl
cmc
test
xor
push
paddsw
imul
cld
ja
sub
sub
sti
insb
insl
cli
fsubl
aaa
inc
jp
lret
aad
rorl
cmp
in
lods
push
sti
mov
js
pop
inc
lods
jecxz
add
jp
aam
cmp
push
sub
cmp
push
push
es
xchg
jmp
fwait
je
add
lods
cld
aam
je
cmp
scas
lods
test
ss
daa
mov
ret
icebp
int
movsl
push
pop
sti
cld
push
or
js
sbb
jb
stos
mov
repz
das
sbb
mov
add
xor
inc
xor
roll
sbb
lcall
out
jecxz
adc
jae
xchg
lahf
add
insb
jbe
jne
adc
push
iret
cmp
shl
ret
in
icebp
pop
sub
call
add
adc
push
push
push
mov
xor
out
add
add
cli
mov
lcall
ss
leave
add
notl
popa
jbe
aad
xchg
xor
xchg
fildl
fimull
psubb
addl
out
icebp
inc
sub
out
aaa
sub
and
scas
fisttpl
call
dec
mov
ret
jecxz
inc
inc
push
scas
mov
pop
add
push
nop
or
nop
ficoml
ret
pusha
dec
inc
push
mov
xchg
js
movsl
add
xchg
mov
cltd
imul
lret
jecxz
lods
aas
je
fsubs
mov
fwait
push
jno
push
loop
leave
adc
pop
in
daa
mov
or
mov
es
push
dec
mov
aam
add
xor
das
push
ja
jae
sub
sti
dec
aam
pusha
test
hlt
pushf
sub
jb
xor
testl
sub
add
add
repnz
add
pop
lcall
les
mov
xchg
out
add
add
pop
mov
jmp
stc
pop
and
push
test
cmp
push
jle
mov
xchg
xlat
and
cmpsb
je
lret
int
jne
pop
dec
xchg
jecxz
push
call
pop
xor
inc
xchg
push
sub
or
xor
test
inc
jne
aam
sbb
mov
test
cld
xchg
pop
roll
inc
sahf
mov
rorb
call
out
or
inc
rcrb
vmovntpd
cmpsl
push
pushf
push
nop
cmp
mov
loop
cmp
es
and
lea
mov
repnz
fs
jae
mov
in
cmp
loopne
sub
shrl
cs
xlat
inc
jecxz
mov
icebp
xchg
sbb
test
push
sbb
jecxz
icebp
es
xchg
insl
leave
sbb
add
mov
loopne
xchg
and
loop
rorl
pop
mov
and
mov
adc
add
aas
pushf
adc
pop
pop
mov
push
decl
jecxz
sub
xor
add
add
add
pusha
jecxz
cmp
xorb
xorl
imul
loope
inc
cmp
loopne
das
mov
lods
ret
data16
lods
arpl
les
loopne
pusha
std
push
push
adc
mov
add
hlt
movl
arpl
rolb
loopne
adc
push
es
jge
fimuls
jl
pop
inc
es
fistl
cli
and
mov
pop
and
ret
das
fnstcw
imulb
mov
popf
imul
jge
jmp
stos
sub
stos
loope
push
lea
jns
fldcw
push
jbe
call
les
repnz
pop
iret
and
mov
fwait
out
jmp
and
or
rcrb
mov
ljmp
clc
stos
mov
jne
or
arpl
scas
pop
sbbl
add
add
and
cmp
sti
fsubp
inc
push
sub
xchg
jmp
add
not
dec
stc
dec
or
mov
notb
mov
cmpsb
loop
hlt
fdivl
jne
add
clc
mov
ljmp
rcrl
lcall
jecxz
in
cmp
test
pop
mov
add
leave
shl
lock
jl
mov
je
mov
nop
mov
repnz
pop
push
and
lahf
test
stc
and
adc
fildl
dec
and
inc
add
add
lret
loope
cmpsl
popa
push
jae
pushf
sbb
add
xor
andl
je
lds
pop
mov
cli
std
data16
xor
add
out
fincstp
jge
stos
sbb
popa
popa
mov
cmpsb
andb
mov
or
xlat
mov
bound
out
sub
dec
nop
lods
and
out
push
cmpsb
and
int
mov
ja
imulb
dec
stos
mov
adc
xor
jmp
xor
or
xchg
and
and
mov
lcall
ljmp
std
jge
inc
or
xor
pushf
lahf
ss
dec
ret
sub
xchg
or
sub
sbb
jecxz
test
push
outsl
cmp
in
jns
pusha
inc
and
daa
cmp
add
aad
mov
rorb
fisubrl
aas
pop
clc
xchg
int
pop
sti
sbb
or
les
xchg
aaa
push
adc
xchg
sub
sbb
adc
mov
xor
lret
or
imul
mov
and
outsb
mov
in
rcl
repz
dec
adc
stos
sbb
xor
xor
jmp
cltd
lea
push
lret
jno
sub
mov
repz
jmp
lea
mov
cmp
cltd
and
in
pop
call
pop
rep
inc
sub
xchg
mov
sub
subb
jo
test
out
add
add
inc
ror
lock
jnp
xor
xchg
std
adc
add
add
add
int
and
ret
iret
stos
cmpl
jp
leave
jns
fcompl
cli
jo
gs
outsb
adc
test
out
fstp
jo
fimull
test
sub
in
clc
jge
pushf
pop
push
iret
sub
lods
in
popa
nop
pop
out
imul
pop
dec
stc
cmc
js
xchg
mov
bound
fcomps
pop
xchg
pop
test
pusha
jg
and
jmp
repz
sub
insl
movsb
std
add
pop
jg
insb
mov
das
push
repz
loopne
xor
push
adc
loopne
stc
mov
mov
ficomps
sub
pop
sbb
test
xor
add
adc
pop
add
aaa
xor
jg
loope
cmpsl
dec
imul
xchg
adc
pop
lea
mov
aas
cmp
push
sub
js
jmp
inc
cwtl
mov
jmp
cmp
sub
aad
push
lds
and
repz
fisubs
add
add
add
std
and
rcl
lods
inc
mov
test
cmc
outsb
dec
add
jge,pn
ljmp
sbb
das
xor
push
scas
jmp
and
and
bound
decl
out
pop
xor
popa
and
bound
addb
rol
fld1
call
and
jge
fs
mov
push
sbb
xor
out
or
mov
pop
cmp
arpl
sbb
and
push
and
push
jmp
lret
push
mov
cmp
pop
inc
aaa
cwtl
scas
sahf
push
repnz
js
dec
cltd
test
sbb
push
aaa
aaa
mov
or
das
rcrl
repz
mov
stos
mov
mov
or
dec
ljmp
add
shrl
ret
cs
shl
fidivs
test
or
aaa
jp
jge
das
mov
mov
push
push
test
out
sbb
nop
stc
mov
dec
in
add
add
add
iret
outsl
and
mov
xor
jmp
test
and
inc
pushf
push
in
add
addr16
or
nop
and
mov
push
imul
mov
jmp
les
xorl
mov
outsb
shr
jg
lds
icebp
jae
pop
or
test
mov
daa
test
sbb
pop
fcoms
dec
adc
sub
nop
shl
fwait
xchg
cmpsl
jmp
cmp
out
push
test
ficoms
aad
xchg
pop
aam
xor
loope
es
fimuls
mov
out
cmp
xchg
loop
dec
and
sti
js
xlat
mov
mov
add
mov
stos
push
stos
xor
or
push
sbb
cli
in
mov
mov
out
aad
test
or
inc
pop
pop
int
push
cmc
ljmp
sarl
dec
xlat
jae
sbb
imul
pop
pop
lahf
adc
add
add
scas
push
repz
cmc
scas
sub
mov
dec
out
add
add
add
sbb
leave
aam
mov
and
pop
dec
cltd
imul
add
jp
movsl
pop
jnp
jp
jae
push
test
mov
dec
movsb
inc
mov
push
js
mov
rcrl
xchg
lahf
sbb
cmp
and
js
xchg
or
fisttpl
mov
in
pop
mov
cmpsb
inc
fcmovnu
cmpsl
mov
mov
movsb
rorb
mov
lea
add
xchg
repz
testl
out
sbb
dec
lahf
ds
mov
xchg
inc
add
rol
sbb
push
test
or
jbe
xor
dec
rorl
fiaddl
mov
jne
jmp
jno
je
cmpb
add
in
call
mov
xchg
sbb
aam
lods
std
cld
and
add
daa
add
adc
mov
sahf
ror
dec
lret
pusha
rorb
cmpsb
mov
loopne
push
out
add
add
add
add
js
sbb
jg
in
outsl
push
frstor
jae
lcall
xor
repnz
rclb
fisttps
xor
lock
aad
js
xchg
imul
add
mov
mov
test
cmp
outsl
aaa
adc
mov
popa
mov
dec
jb
xchg
push
roll
out
movb
add
mov
dec
ret
inc
push
outsb
mov
sbb
je
mov
pusha
std
out
movsl
das
int3
sar
sub
daa
mov
int
push
jp
cs
or
and
sarl
orl
jnp
lret
pop
cmp
fwait
xchg
icebp
push
xchg
out
loopne
pop
pushf
mov
ds
sbb
jnp
daa
outsl
xchg
rcl
mov
cs
sub
xlat
aad
or
sub
mov
mov
scas
add
jl
inc
mov
cmp
out
stos
movl
add
add
gs
testl
cmpsb
daa
ret
add
add
add
sub
data16
and
lods
call
xlat
addb
jle
adc
sbb
scas
imull
movsl
add
aaa
mov
pop
ja
xchg
fdivr
jle
and
sub
fcoms
sbb
stos
push
ret
ja
movb
imul
cmp
es
push
sarl
jbe
sub
scas
fisubrs
adc
test
sub
fidivs
or
add
sbb
mov
fldt
add
inc
push
sbb
xor
pop
out
mov
pop
notl
stos
xchg
sbb
mov
repz
lahf
jbe
cli
pop
movsl
inc
xlat
sbb
pop
mov
loopne
out
out
jp
outsb
insb
pushf
push
sbbb
stos
orb
stos
movsb
sub
int3
dec
mov
mov
js
hlt
rcl
rol
adc
mov
sub
add
add
xchg
mov
mov
pop
das
lahf
les
icebp
add
add
add
insl
push
mov
repnz
ret
jo
dec
cltd
jno
insl
sbb
cld
jbe
sahf
je
cli
push
dec
insb
ja
lret
xchg
ror
loope
xor
lahf
sub
push
xchg
inc
arpl
mov
xchg
stc
add
ss
push
shll
cmpsb
adc
fistpl
movsb
push
cld
mov
jne
jae
mov
or
shl
mov
out
mov
cmp
pop
jne
push
or
mov
scas
lods
in
addr16
xchg
dec
pop
insl
jae
sbb
pop
cmp
nop
lods
push
fnstenv
nop
mov
fists
pop
dec
lret
pop
jbe
jbe
mov
mulb
scas
loopne
jb
fcoml
std
xchg
sbb
fcmovnu
dec
repz
mov
cmp
mov
jbe
orb
jbe
sbb
sbb
xor
loop
cmc
sbb
fstps
cmp
cmc
add
add
add
fucomi
xor
fcoml
add
add
int3
inc
jno
push
inc
and
fstpl
ret
int3
jp
and
mov
mov
adc
or
outsl
push
jmp
cltd
sahf
loope
xchg
xor
push
sub
mov
mov
or
push
or
mov
es
pop
lret
loop
mov
std
stc
xor
arpl
xchg
push
std
in
notl
in
mov
add
xchg
aam
fs
mov
sbb
lret
sbb
inc
call
out
pop
add
fistl
popa
adc
dec
cmpsb
pop
dec
mov
idivl
scas
dec
inc
leave
fisttpll
sub
jg
pop
repnz
jmp
inc
es
mov
aad
andl
insl
rcrb
rcll
push
sub
je
mov
mov
dec
push
xor
mov
mov
pop
ret
fadds
add
add
push
inc
pop
jns
aas
loopne
sub
inc
enter
add
add
mov
xchg
push
xchg
mov
clc
mov
dec
iret
ds
daa
sbbl
add
inc
adc
adc
pop
fwait
sbbb
lret
outsb
push
testb
fst
mov
cld
xlat
mov
lock
scas
push
push
loop
inc
add
inc
mov
mov
cmpb
shl
adc
add
fstpt
nop
mov
mov
lods
or
jnp
xor
out
jecxz
push
les
adc
test
dec
fxch
ljmp
in
jle
jbe
sbb
cs
sbb
sbb
pushf
xor
popf
mov
ss
stos
pop
ror
mov
test
iret
mov
std
cmpsl
lea
jg
loopne
pop
jb
xchg
in
mov
jmp
fs
dec
sub
jns
cmpsb
sbb
or
pushf
outsb
lret
sbb
add
add
jnp
mov
sbb
sti
pop
fs
add
add
add
mov
xor
cmp
pusha
lods
fistpll
fwait
xchg
jbe
repz
xchg
cmp
mov
int
in
xchg
loopne
inc
lcall
movsl
adc
je
es
or
icebp
scas
mov
daa
in
divl
xchg
lock
and
fidivrl
cmp
jnp
test
ds
lock
pop
lods
fldl
jge
add
mov
xor
and
push
faddl
fldt
pushf
vpmuludq
dec
out
dec
cmp
loope
in
jle
lret
shrl
sbbb
dec
sub
cmp
in
out
xchg
int3
icebp
ret
push
popa
mov
jns
call
sbb
ss
add
mov
in
jmp
xchg
push
in
stc
push
push
jo
sbb
sbb
cvtdq2ps
lods
cmpsl
sub
lahf
leave
or
mov
jmp
jb
outsl
imul
gs
pop
rcll
cmc
add
add
add
xlat
testl
sub
add
xlat
jae
addr16
sbb
sub
or
dec
mov
aam
arpl
cmc
sub
mov
sahf
sarb
and
insb
mov
ss
dec
jp
cmc
mov
pusha
adc
cmc
mov
rcr
imull
inc
and
pusha
rol
inc
jge
sub
jmp
or
xchg
daa
imul
cmp
nop
mov
or
jg
push
dec
mov
pop
xchg
cwtl
in
add
aas
cmpsl
repnz
imulb
insl
hlt
add
fcomp
push
call
mov
out
lcall
sub
and
loop
out
jmp
ja
fisubs
ret
mov
pusha
mov
cmp
fmuls
shr
inc
test
into
and
inc
mov
or
sub
fcom
jb
add
add
fdiv
mov
sarl
bound
add
add
cmc
xchg
jmp
mov
ds
mov
jno
mov
and
testl
push
push
xchg
xor
movsl
icebp
push
outsb
xchg
sub
inc
daa
adc
xchg
cmpsl
in
and
out
jmp
int3
das
bound
mov
xor
xchg
add
ss
sar
scas
imul
js
sub
inc
stc
adc
cwtl
xchg
mov
jle
mov
xchg
gs
sub
addr16
test
cmc
js
jl
adc
sub
dec
mov
cwtl
or
mov
push
imul
pop
ja
sbb
je
or
testb
xorl
lods
inc
lahf
pushf
jp
sub
scas
adc
inc
mov
push
mov
gs
or
fstps
jno
test
mov
ficoml
testl
add
mov
inc
lret
jns
and
call
inc
pop
mov
xchg
adcb
stos
aad
stos
add
pusha
mov
inc
dec
sbb
dec
sbbb
sbb
inc
repz
push
lods
mov
test
cmp
cs
andb
push
repnz
jo
nop
jmp
dec
ret
into
add
pop
lret
cmp
mov
pushl
sbb
cmp
pop
rolb
ss
enter
xorl
inc
fidivs
loop
lea
inc
jecxz
dec
add
push
and
clc
mov
fwait
xchg
xchg
mov
daa
mulb
leave
xchg
pop
and
in
push
in
adc
les
testb
aad
popf
outsl
jae
inc
push
xor
pusha
push
addr16
outsb
push
fcmovb
aam
lods
jmp
jp
out
cs
push
xlat
les
insb
and
xchg
add
jmp
imul
lahf
repnz
dec
push
shlb
add
add
cltd
shr
or
mov
popa
mov
lods
cmp
jg
mov
cltd
jp
addb
lret
xor
add
push
faddl
in
pop
push
push
pop
loope
in
mov
inc
fwait
je
xchg
hlt
or
es
pop
mov
or
outsb
dec
sbb
ja
mov
push
or
sbb
jns
in
and
mov
mov
insb
mov
pop
or
lret
inc
mov
cli
cmp
mov
call
xchg
pop
test
xorl
call
or
xchg
jb
in
mov
xor
sub
mov
or
cmpsl
cmpl
fwait
rclb
ss
push
xchg
jmp
js
xchg
add
stos
insb
test
inc
std
mov
test
xchg
iret
outsl
or
xchg
mov
imul
add
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
sbb
mov
add
add
pop
ds
sbb
shll
sbb
test
scas
add
pusha
jne
jmp
test
push
sti
and
rol
pushf
add
std
jg
cs
cmpsb
push
mov
cmp
mov
loop
std
inc
add
out
pop
push
jmp
sarb
pop
jmp
out
mov
out
and
or
sbb
fiadds
scas
adc
js
daa
cmp
rcll
std
pop
or
sbb
and
push
lods
iret
sahf
lret
inc
into
sub
jle
add
sbb
vpminsw
gs
cmpsl
inc
notl
lahf
testb
enter
dec
xchg
lea
jmp
mov
pop
pushf
cld
add
inc
in
out
int
adc
lock
mov
cwtl
xor
cmp
add
aas
and
in
fldl
shlb
cmpsb
add
sbb
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
add
cli
loopne
push
add
inc
jge
sbb
dec
clc
pop
push
test
imul
int
pop
int3
out
dec
in
out
out
lcall
pop
jmp
rcl
sbb
aam
test
jl
sti
pop
sub
shrl
ds
out
mov
lret
xchg
notb
ret
xlat
std
xchg
inc
xchg
sahf
xchg
sub
add
pop
iret
fistl
jo
xor
mov
jne
pusha
hlt
int
out
xchg
dec
sbbl
fstps
jnp
cmc
cmp
icebp
mov
xchg
cli
outsl
idivl
and
xor
scas
insl
sarl
sub
jmp
daa
push
jg
cmp
adc
inc
arpl
adc
imulb
les
inc
addb
ljmp
ljmp
fldt
jno
je
cs
faddl
add
add
aam
int
aaa
das
aam
lahf
icebp
dec
cmp
add
add
jno
pushf
lock
imul
dec
lods
je
xchg
mov
xchg
pop
dec
mov
in
pop
and
xor
jbe
scas
sbb
pop
int3
jns
adc
inc
jns
imul
and
xchg
add
out
test
dec
jne
ficomps
jno
xchg
ja
mov
xor
and
je
imul
fs
lods
pop
inc
xchg
mov
inc
mov
sarb
aas
jno
shll
push
inc
cmp
and
push
pop
sbb
jo
lahf
adc
cmpsl
lods
inc
scas
sub
cltd
imull
push
insl
push
fcmovnu
jo
xchg
add
adc
xchg
xchg
dec
sub
xchg
cmpsl
mov
ret
adc
stos
add
mov
sub
pop
cld
in
cmp
sub
adc
pop
cld
xchg
aad
aas
or
fdivr
dec
pop
add
fwait
nop
addr16
addr16
pop
arpl
addr16
sub
inc
je
ja
cld
add
add
add
add
adc
xlat
dec
repnz
inc
cmp
mov
xchg
xchg
and
addr16
dec
jecxz
pop
ljmp
mov
rclb
cld
mov
or
dec
adc
sub
je
dec
xorb
xor
nop
xor
call
sbb
xchg
sbb
sbb
mov
test
lock
push
pop
jle
jnp
popf
inc
or
cmc
fstpl
add
orw
cltd
sub
dec
pop
cmpsb
mov
adc
int
int3
mov
xor
pop
xchg
dec
adc
xchg
test
insl
mov
and
neg
shlb
dec
lea
insl
in
push
lahf
sarl
xchg
dec
xor
sub
mov
inc
inc
cmc
ret
add
inc
lret
repz
sbb
mov
fucomi
push
mov
xlat
dec
lea
stos
fcomi
leave
jno
mov
outsl
rorl
js
cmpsb
lret
add
add
out
out
pushl
xchg
xor
adcl
add
cmc
jecxz
test
ja
push
in
out
repnz
or
bnd
cmp
inc
mov
pushf
xchg
data16
pop
daa
cmp
out
repz
cmpsb
pop
test
les
pop
adc
dec
loop
sti
inc
mov
sub
jmp
add
add
dec
add
arpl
iret
sub
mov
sbb
adc
cmp
fdivs
pop
repnz
test
mov
movsb
pop
mov
xchg
addb
sub
ds
out
add
sub
rcrb
ret
stc
and
sbb
push
ljmp
fs
mov
jle
fmuls
add
cmpsb
mov
sbb
scas
or
xchg
xchg
cmp
in
dec
or
loopne
dec
jp
and
aad
sbb
inc
icebp
out
fbld
pushl
shrb
test
push
scas
mov
mov
pop
mov
add
add
add
jne
fnstsw
testb
repz
repz
rcl
gs
test
fiaddl
inc
stc
fcompl
mov
fmulp
iret
xor
aaa
jp
xchg
cmpl
xor
iret
and
nop
lret
sbb
jno
inc
movsl
jae
lds
pop
push
cmp
imul
cltd
xchg
movsb
mov
and
movsl
jg
jb
and
ljmp
roll
imul
push
loope
adc
jp
jmp
push
push
or
out
int
mov
jnp
fcmovne
add
out
or
movsb
imul
sub
xor
in
inc
mov
out
lock
or
mov
int
popf
mov
mov
insb
fistpll
outsl
loopne
mov
mov
pop
in
cmc
cmp
adc
roll
mov
faddl
fs
clc
popa
xchg
cmpsl
cmp
nop
into
fisubs
add
aaa
xchg
and
movsl
mov
mov
mov
push
pop
nop
incl
add
add
lret
repnz
jno
adc
movsl
lea
dec
or
mov
ja
fmuls
out
fdivl
int3
shlb
jo
inc
fldl
rorb
ret
sbb
add
cmc
mov
push
lds
mov
xchg
dec
mov
pop
and
adc
push
xor
nop
arpl
mov
mov
cmp
xlat
out
cmp
cs
fsubr
push
mov
mov
insb
insb
push
div
ficoml
sub
jns
cmpsb
xor
xor
cmp
sub
idivb
push
adcl
cld
stc
mov
pop
test
push
jae
jmp
sub
pusha
movsb
sub
fidivrl
xor
inc
bnd
xchg
add
adc
stos
dec
jne
add
jmp
sub
mov
sbb
dec
vpaddsb
add
add
mov
push
jg
mov
mov
add
add
add
xchg
push
lret
psraw
mov
in
shrl
subl
push
int
pop
lods
fildl
cmpsb
jge
xchg
adc
lahf
rcrl
fwait
adc
sbb
inc
mov
jnp
mov
or
sti
shrb
mov
push
lret
mov
jmp
mov
adc
sbb
cmp
sub
jle
xor
sbb
ljmp
dec
mov
or
popf
add
arpl
sbb
imul
outsl
dec
leave
call
sub
jo
ret
stos
test
xchg
jmp
mov
dec
push
mov
pop
mov
lcall
pop
cmp
mov
xchg
and
or
loope
mov
add
sub
rolb
or
or
ret
js
divb
icebp
rcll
cmc
shl
cmp
push
das
aam
mov
loop,pn
push
jp
xor
repz
add
add
mov
mov
lods
imul
popa
das
and
cwtl
add
add
add
cmp
fistpl
fisubrl
add
loop
arpl
es
cld
jle
pusha
inc
aaa
into
inc
add
addr16
cld
mov
jo
inc
gs
gs
repz
xor
jge
shlb
fs
stc
add
push
cmp
pop
into
xlat
pop
insb
pop
inc
mov
scas
or
arpl
cmpsb
xor
dec
lock
inc
mov
cmp
cli
or
movd
in
std
out
movsb
loope
shrl
iret
cld
xor
int3
xchg
xlat
push
sbb
cmpsl
sub
decb
cs
and
cld
fisubl
int3
jmp
sub
and
aam
outsb
lcall
mov
scas
mov
xor
insl
clc
pushf
jge
mov
dec
clc
dec
mov
loopne
mov
fmul
out
push
ret
pop
sub
pop
data16
mov
push
lret
mov
xchg
sub
scas
or
cmp
das
in
pushf
add
add
add
push
lcall
lock
xchg
dec
or
dec
pop
inc
inc
icebp
pop
push
mov
lds
and
jle
cld
jl
adc
add
cmp
dec
call
xor
enter
adc
outsb
clc
push
stc
test
loopne
mov
insb
fidivs
jg
push
sti
or
sub
mov
cmp
and
in
shlb
sub
or
xor
dec
lds
mov
lock
xchg
push
lahf
clc
or
addl
dec
ret
mov
je
je
lahf
stos
inc
cmp
lods
lea
pop
sti
add
mov
je
inc
fdivr
sbb
mov
pusha
mov
int3
jg
cmp
std
cmp
lock
xor
push
sar
testl
cmpsl
nop
mov
test
pop
test
xchg
enter
push
fbld
dec
call
add
add
adc
pop
sbb
jl
int
sub
insb
cmp
push
push
or
xor
dec
jo
stc
ja
mov
cwtl
imulb
aas
xchg
cwtl
sub
adc
pop
mov
inc
push
ss
cmpsl
sub
sbb
add
dec
adc
pop
in
out
pop
pop
cli
ljmp
test
mov
lcall
movsb
and
rol
sbb
rcll
xor
mov
xor
jp
pop
sbb
sarb
fiaddl
into
mov
mov
aad
shlb
pop
lahf
dec
mov
mov
mov
sub
lcall
test
dec
mov
fsubrs
sbb
out
stos
lds
into
or
mov
cmp
jns
divl
incl
inc
xchg
outsl
sti
stc
fdivrs
add
mov
into
fwait
add
mov
test
add
add
dec
fneni(8087
xchg
mov
mov
push
push
sub
dec
out
lret
call
subb
movsl
mov
imulb
jne
mov
into
xor
out
add
ljmp
jno
push
jo
imul
sahf
loopne
xchg
clc
mov
sbb
dec
jnp
sysenter
and
xlat
sub
push
cmp
push
mov
sahf
mov
add
mov
fldcw
je
divb
jns
adc
adc
ficomps
icebp
dec
aaa
das
leave
push
cmp
aas
scas
xor
xchg
xchg
xor
jns
ret
das
test
mov
fwait
cmp
imul
sub
mov
jae
jmp
movl
mov
ret
lcall
fisubl
imul
push
icebp
push
adc
cmpsb
aas
mov
xor
cmp
movsl
or
jl
test
out
mov
pop
sarb
in
push
into
xchg
add
add
rorl
xor
xlat
clc
mov
dec
outsl
je
lods
jns
call
xor
pop
stos
daa
pop
daa
mov
adc
push
push
dec
ret
push
xor
sbb
inc
js
inc
js
xchg
bound
jl
inc
jg
xchg
pop
add
push
les
dec
lds
cwtl
sbb
scas
jle
jnp
jno
push
call
xor
pop
fcoms
xor
jecxz
ds
movsb
xor
in
into
vpsubusb
mov
ret
add
jle
ffree
dec
xorb
mov
addr16
ficoms
aaa
popf
addl
out
push
sbb
push
adc
ljmp
pop
sub
cmp
imul
das
push
sbb
leavew
add
add
adc
leave
cltd
popa
and
push
out
dec
cmp
sbb
outsb
mov
dec
sti
inc
out
aas
mov
rcrb
imul
add
add
lret
sahf
dec
rclb
shl
iret
push
test
fnsave
mov
dec
mov
xor
aas
or
sti
mov
lret
es
sub
cmpsb
data16
add
mov
inc
jae
jb
in
aam
rcrb
sbb
dec
inc
push
adc
jge
ljmp
mov
xor
cmp
fs
and
xchg
clc
mov
xchg
into
out
pop
ljmp
int
rcll
test
aam
fwait
inc
stc
push
add
insb
xchg
xor
cli
inc
adc
scas
mov
loope
mov
js
movsl
bound
xchg
jg
lea
cmp
mov
and
sbb
out
rclb
out
js
test
xchg
push
sbb
test
push
xor
push
movsl
sub
adc
mov
jnp
jg
inc
xchg
pop
pop
out
lods
cwtl
jle
sbb
inc
out
jnp
push
bnd
dec
leave
and
insl
mov
mov
add
add
add
js
jge
cmp
lock
imul
scas
ss
xor
aam
dec
push
and
lret
adc
je
cmpsb
jns
jns
add
jae
push
sub
sub
stos
cld
loop
inc
mov
xchg
loopne
loop
xchg
mov
lret
cs
pushf
and
or
fiaddl
xchg
cmp
sub
leave
aaa
scas
xor
test
xor
enter
fldcw
mov
sub
ret
dec
fildll
out
fstp
mov
imul
cmpl
adc
mov
xchg
ret
std
aaa
jne
jnp
xchg
outsl
cmp
imul
nop
push
fisubs
cmp
and
lret
pop
movsb
xchg
pop
cmc
sub
mov
xchg
int3
lods
xchg
call
jg
and
dec
aam
movsl
mov
fisttpl
sbb
in
out
ja
filds
enter
or
add
add
jp
in
pop
and
jb
push
clc
in
fcoml
dec
jmp
lods
add
or
loope
cmp
add
mov
data16
or
add
dec
cmpsl
leave
add
ss
xor
dec
cmc
pop
mov
fs
jno
jmp
cmc
cld
mov
andl
pop
jns
popl
lret
xor
cmp
int3
fisttpl
add
loopne
popf
int
pop
pop
bound
sbb
movb
rorb
arpl
fbstp
push
adc
add
jg
or
rorb
push
sub
or
hlt
sub
bound
test
cld
lods
rcll
or
cwtl
mov
xor
mov
xchg
sbb
xor
mov
mov
mov
inc
pop
dec
andb
xor
jg
fimull
loope
add
add
pop
in
inc
push
or
or
add
add
dec
xchg
jnp
rorl
adc
xchg
xor
xor
addb
mov
les
mov
push
dec
arpl
cld
notl
pop
mov
and
push
pop
mov
push
pop
insb
divb
addr16
pop
jmp
jp
andl
addr16
test
dec
test
das
adc
add
push
xchg
adc
xor
mov
add
lock
lahf
cmpsl
jns
inc
ljmp
cli
rolb
mov
test
jbe
mov
iret
push
adc
mov
stos
icebp
xchg
pop
mov
stc
pushf
and
inc
movsl
mov
mov
add
jecxz
mov
lahf
inc
lock
cmc
fsubr
sbb
push
icebp
fmuls
inc
ror
stos
mov
and
pop
add
inc
mov
xor
xor
cmp
ds
cltd
mov
in
stos
xor
popa
lcall
daa
loopne
mov
jg
neg
pop
daa
inc
hlt
inc
outsb
mov
or
add
add
mov
dec
out
jne
xor
sbb
movnti
mov
add
xor
lods
inc
jl
sub
mov
sub
adc
pushf
jbe
and
jo
xor
idiv
and
fwait
repz
inc
enter
stos
pop
or
and
push
mov
and
adc
setl
popf
icebp
add
xchg
mov
sub
ss
xor
xchg
aad
sbb
ret
movsb
xchg
sub
leave
es
popf
ror
xchg
rol
mov
sub
push
fstl
dec
popa
movsl
push
arpl
xor
sub
bound
mov
cmp
jne
push
movsb
adc
insb
pop
stos
mov
or
cmc
mov
ret
and
mov
mov
add
push
mov
jno
outsl
out
cmp
sti
jg
cmp
je
cmp
add
add
add
mov
std
flds
in
repnz
in
mov
sub
or
out
push
mov
lahf
sbb
stos
testl
push
stos
enter
mov
sbb
inc
into
mov
mov
js
out
scas
popf
test
pop
and
les
push
mov
mov
xchg
xchg
arpl
jg
fadds
ss
jae
lock
jns
jb
insl
mov
and
insb
xchg
stos
popf
sub
push
ljmp
sub
and
test
pushf
insl
jle
pop
mov
fistpl
popa
inc
cmp
inc
cmpsb
add
jp
xlat
mov
push
iret
out
pop
xchg
cmp
sub
or
pop
xchg
xchg
es
fucom
jmp
sub
imul
aad
out
mov
adc
push
mov
scas
aam
jnp
fstp
fcompl
test
fisubs
les
add
add
in
inc
loop
out
xchg
lods
or
imul
pusha
jle
fmull
cmp
cmpps
sbb
in
mov
jno
or
aad
xchg
jmp
dec
push
lock
es
popf
mov
add
cmpsl
or
loope
std
push
loop,pn
aad
pop
jg
notl
mov
or
aad
dec
imul
es
add
pcmpeqb
jle
xchg
shll
test
sarb
data16
cltd
jl
inc
add
lret
xlat
icebp
xchg
mov
cmp
inc
fcmovnu
out
loope
cmc
ret
dec
adc
data16
repnz
mov
mov
jne
or
rclb
add
adc
push
lock
fnstsw
mov
mov
ror
push
ja
xadd
in
xchg
dec
fcmovne
dec
pop
mov
push
sbb
lret
mov
jno
std
outsl
mov
add
outsb
aas
push
enter
add
add
mov
mov
js
inc
dec
add
mov
push
pop
aam
in
push
cld
xor
fiaddl
repz
sahf
add
mov
mov
inc
dec
aas
ljmp
in
scas
dec
mov
ljmp
and
mov
push
stos
cmp
pop
popa
or
lea
jno
mov
xchg
sub
clc
sbb
xor
dec
inc
filds
mov
adc
xor
mov
dec
sahf
xor
hlt
sub
adc
fnstcw
iret
in
xchg
rcr
sbb
rolb
jnp
xchg
cmp
dec
dec
loope
testl
sub
cld
roll
and
mov
or
cli
enter
push
jbe
es
sbb
cmp
mov
push
adc
xchg
inc
add
les
xchg
test
xorb
sbbb
loope
jmp
ffree
scas
icebp
jno
push
add
add
add
movsl
mov
pop
mov
xchg
inc
sbb
and
sbb
adc
pusha
fwait
inc
mov
test
fidivs
xchg
fidivs
jbe
std
mov
in
sbb
xchg
jl
xor
in
fdivs
pop
cmp
adc
daa
jl
loopne
sbb
or
sarl
add
jns
jl
push
int3
ljmp
and
stos
push
les
xchg
stos
mov
stos
sbb
fs
rcl
mov
call
xorl
push
stos
addb
stos
imul
sbb
jbe
adc
movsb
ljmp
movsl
pop
testl
add
les
lock
enter
cltd
stos
and
ret
pop
push
adcb
mov
pop
sbb
int
sbb
stos
mov
bound
ljmp
mov
mov
fistpll
mov
cmp
add
xor
test
sub
add
add
out
fisttps
clc
fadds
mov
adc
lcall
sbb
nopl
jae
mov
je
mov
dec
mov
into
jg
xor
jo
mov
sbbl
dec
mov
insl
dec
arpl
mov
hlt
div
int3
les
lret
scas
xchg
aas
mov
sti
fbstp
mov
push
push
lahf
jg
inc
xchg
and
dec
sahf
vpaddsw
bnd
mov
push
fcoms
aam
cwtl
out
inc
jge
sbb
or
in
mov
inc
adc
mov
inc
cmpsb
inc
push
mov
jne
adc
jne
imul
jbe
jl
ret
popa
dec
xchg
mulb
cltd
fildll
push
xchg
inc
add
jb
hlt
pushw
mov
scas
pop
jp
pop
push
dec
jl
xchg
int
stos
in
mov
push
dec
xor
or
xchg
das
xor
lcall
add
add
cli
inc
jg
int
xchg
lods
or
loop
aam
adc
add
add
lcall
sbb
push
inc
lock
pop
sub
out
pop
insb
adc
and
imul
jmp
pop
ret
and
jl
pushf
aam
je
pop
add
dec
loopne
outsb
adc
arpl
fcmovbe
dec
insb
add
xor
pop
imul
cli
pop
popa
divb
sbb
icebp
jmp
stos
fwait
sbb
inc
lret
jmp
cmpsb
sub
mov
xor
and
inc
jp
push
sbb
cwtl
add
idivb
std
mov
clc
mov
dec
scas
in
icebp
fwait
inc
inc
aaa
jmp
push
pop
lret
push
jmp
add
clc
xchg
cmpsl
push
lods
insb
jl
sub
movsl
cmc
mov
add
shrl
mov
repnz
cwtl
lahf
sub
and
push
add
test
dec
dec
push
negl
aas
pop
add
repz
dec
dec
cmp
and
xor
aas
loopne
mov
add
xchg
std
cmp
jle
fistpll
fidivrl
xlat
int
adc
add
add
out
sahf
xor
hlt
das
sarl
dec
xchg
icebp
jg
add
mov
pusha
sahf
xchg
push
int3
lcall
inc
test
mov
mov
xor
mov
cmp
in
into
rolb
or
push
in
mov
jae
jp
sahf
out
inc
add
cmp
in
cmp
mov
sbb
sub
xlat
xchg
and
pusha
sub
jle
or
or
inc
sbb
sbb
rol
mov
les
jns
push
mov
mov
mov
shrb
shll
aas
dec
dec
mov
cmc
imul
jbe
or
js
gs
add
out
adcb
push
aas
xchg
jae
mov
inc
cmp
jle
push
cmpb
mov
push
pop
lahf
mov
mov
xchg
jb
ljmp
add
add
iret
xlat
ficompl
inc
xchg
push
es
adc
add
add
or
fisubl
add
lret
push
aas
scas
out
and
adc
stos
out
mov
lods
inc
int
mov
outsb
pop
and
aaa
jnp
inc
mov
inc
cmpl
outsl
add
ljmp
hlt
jno
sub
jo
inc
gs
adc
pushf
cwtl
cwtl
sub
sbb
jno
fwait
and
mov
mov
lahf
movsl
shlb
adc
rcrl
out
sbb
clc
jb
cli
insb
imul
cmp
jle
iret
inc
mov
add
fcomi
sbb
je
mov
ret
ret
lcall
cmp
push
jge
dec
or
push
jp
add
jo
sti
fnstenv
push
xor
pushf
xor
je
scas
lcall
iretw
in
scas
in
mov
mov
lcall
push
cli
jge
mov
and
xor
in
xchg
jg
mov
add
add
sub
iret
outsb
jmp
push
test
test
test
adc
add
add
mov
pop
daa
inc
dec
lea
cltd
jo
push
es
into
les
push
push
xor
lods
mov
dec
adc
push
test
cltd
add
iret
lds
pop
outsl
mov
les
mov
mov
scas
sarl
out
push
mov
ror
pop
leave
aad
and
mov
iret
pop
push
popa
cwtl
dec
hlt
movsb
arpl
mov
mov
xchg
pushf
dec
mov
jmp
scas
popf
or
dec
leave
dec
adc
pop
into
inc
adc
popa
fsts
mov
aas
jmp
inc
arpl
xchg
inc
push
pop
cld
fs
push
call
xchg
int
test
push
xor
lahf
xor
rep
sub
add
pop
mov
push
adc
or
ljmp
and
jne
add
or
adc
pop
imul
sbb
std
sbb
stc
cld
or
ret
adc
adc
add
add
stos
rcr
hlt
loopne
push
jb
xchg
inc
and
lods
mov
jge
outsl
xchg
mov
pop
xchg
push
stos
scas
dec
loop
fisubrs
ljmp
pop
out
insb
mov
inc
frstor
leave
lcall
dec
outsb
dec
loop
jmp
movsl
jecxz
aas
push
pop
pusha
movsl
xor
pushf
imul
push
ja
hlt
ss
loopne
pcmpgtw
ja
into
icebp
adc
fwait
cmpsb
lds
ffreep
int3
xor
fisubrl
addr16
addr16
fs
hlt
rcr
mov
adc
dec
sbb
in
xchg
fadds
ds
scas
cmp
or
xchg
cmp
xchg
add
test
fiadds
out
fwait
mov
push
aad
adc
repz
push
or
pop
or
stos
idivb
dec
sbb
add
adc
adc
pop
repnz
sbb
add
add
pop
test
scas
repz
cld
adc
or
in
call
add
add
dec
xchg
rcl
into
mov
jae
imul
test
xchg
pop
outsb
jmp
jne
xchg
leave
test
imul
pop
gs
push
pop
mov
adc
es
xor
or
push
in
movsl
int
pop
ljmp
add
push
dec
mull
mov
xor
movsb
jecxz
pop
fwait
add
lcall
dec
adc
sbb
mov
pop
nop
mov
mov
jecxz
xlat
scas
imul
xchg
dec
and
push
mov
mov
imul
in
addr16
repz
dec
das
mov
mov
and
adcb
testl
iret
fs
pop
sbb
aaa
lret
aad
outsb
add
mov
popf
add
aad
adcl
dec
std
cmp
dec
xor
jb
add
icebp
aas
std
mov
dec
pushl
lods
daa
lret
sub
add
add
add
jg
sub
ss
mov
gs
repnz
cld
lock
lret
mov
xchg
popf
xchg
sbb
and
xlat
xchg
mov
push
push
jge
xchg
dec
jecxz
adcl
out
sub
pop
test
movsl
js
mov
jmp
out
xchg
icebp
js
ffree
enter
into
int
sub
js
dec
inc
je
les
xorl
mov
dec
mov
popa
dec
pop
iret
std
inc
sbb
fnstsw
test
mov
xor
adc
sahf
icebp
ljmp
mov
jnp
movsl
outsb
mov
xor
jnp
inc
push
or
ror
xor
cmp
mov
jb
addl
jns
and
int
add
dec
fmuls
loope
pop
jg
sbb
dec
out
pop
sub
inc
ja
pop
aas
dec
push
test
lock
add
add
add
xchg
xor
and
mov
les
dec
inc
xchg
popf
xchg
adc
adc
xor
add
or
lcall
jnp
cs
sti
movsb
push
xchg
sbb
pop
pop
test
inc
cmp
sub
push
push
xchg
jb
stos
mov
jae
outsl
inc
mov
pop
and
jne
out
shr
lahf
decl
aas
or
nop
cmp
test
xchg
mov
xchg
cld
push
cmp
fisttpl
sbb
xchg
scas
aaa
je
fnstenv
or
mov
stos
ljmp
mov
mov
iret
sbb
fcoml
fst
add
gs
jecxz
ret
jg
enter
ss
push
inc
mov
dec
push
pop
jmp
fadds
and
mov
and
lods
fsub
out
xor
lock
shlb
cld
add
jno
cmp
out
cmpsb
repz
jae
ja
div
mov
pop
hlt
sbb
add
add
xchg
fisubs
or
adc
out
lods
out
dec
mov
data16
nop
scas
adc
scas
stos
push
repz
and
arpl
adc
lods
cmp
xchg
inc
sub
lea
ja
cmc
and
nop
clc
mov
mov
test
jne
out
in
xchg
mov
std
jg
jecxz
int
in
shlb
mov
push
jl
sbb
iret
and
movsl
iret
mov
int3
sub
sti
lods
iret
or
jmp
xchg
inc
pushf
pop
aaa
outsl
hlt
xchg
inc
inc
pop
push
xchg
push
adc
sub
sbb
mov
mov
pop
xchg
int
jmp
test
dec
sub
xor
stc
lcall
jne
push
push
negl
in
xchg
xchg
push
mov
lahf
add
pop
shll
lock
push
cmpsb
andl
out
mov
push
repnz
bound
stos
call
xor
cli
std
jg
push
pushf
dec
std
les
clc
sbb
add
add
xchg
sbbl
test
or
xchg
mov
adc
sub
icebp
adc
std
or
lret
in
mov
and
outsl
cwtl
pusha
sub
ret
dec
adc
sbb
leave
loop
xor
push
int3
jge
lcall
lock
out
daa
stos
dec
insl
iret
roll
jmp
cwtl
cmpsb
pop
lret
mov
loope
fidivrs
jl
adc
add
or
sub
imul
icebp
dec
test
aam
hlt
imull
cmp
popa
sub
enter
sti
in
dec
cmp
cmp
dec
sbb
cmc
sbb
pop
xor
push
xor
jae
icebp
cmp
out
sub
dec
push
popf
test
xor
mov
mov
loopne
xor
cmpsl
enter
gs
in
out
xchg
and
xor
xor
add
add
add
mov
std
incl
sbb
into
add
jae
sbb
add
add
mov
aad
in
stos
mov
inc
cs
cmp
outsb
sbb
dec
pop
pop
pushf
sbb
sub
ret
sub
pop
adc
add
jne
sbb
xchg
cmp
test
add
add
jecxz
xchg
fsts
into
jb
sbb
imul
in
fmuls
scas
xor
push
outsb
data16
in
in
mov
stos
daa
jge
push
mov
les
in
jo
or
das
gs
leave
stc
push
xchg
loop
stc
fwait
fwait
mov
insl
arpl
imul
fnsave
adc
add
inc
cs
cltd
xor
gs
outsl
rolb
add
cmc
mov
std
jne
and
push
cmpsl
inc
setnp
clc
cmpsb
rcr
call
xchg
movsb
pop
inc
scas
ror
arpl
movsb
cmp
not
aam
mov
jno
aaa
push
add
or
loopne
sti
sbb
repnz
add
push
es
jg
pop
or
xor
fsubs
add
add
add
mov
mov
jbe
rolb
or
arpl
hlt
pusha
or
clc
jle
xchg
sbb
hlt
mov
lret
imul
aaa
add
jmp
jb
imul
jae
sbb
push
shll
ja
mov
outsl
cmp
cmpsb
repz
inc
add
hlt
jge
mov
scas
cmp
loop
repz
add
mov
out
push
adc
dec
sar
mov
xchg
pcmpeqb
lret
insl
add
mov
cs
xor
inc
adc
cwtl
add
stos
jge
jno
das
and
jl
fadds
mov
push
push
dec
dec
nop
lds
mov
insl
mov
jle
in
js
setl
and
and
cltd
jno
cld
xchg
xchg
ljmp
pop
and
jecxz
inc
and
mulb
ret
enter
fisubrl
popa
mulb
xchg
notb
scas
repz
mov
add
or
dec
push
cmp
sbb
add
cmp
sub
jnp
lret
add
push
xchg
leave
adc
jl
insl
pop
or
clc
fnstenv
jp
and
call
insl
mov
js
fcoml
mov
std
mov
pushf
test
mov
push
pop
pop
pop
cmpsl
js
std
cli
adc
movsl
xor
jno
mov
cmp
xor
cmp
insl
lret
ficoml
sbb
je
outsb
jbe
mov
aas
enter
ror
lock
jo
cltd
aad
adc
cmp
fbstp
adc
gs
or
cltd
into
jecxz
mov
les
sub
jp
sub
mov
rcrb
fistpll
xor
lea
shll
jg
pop
dec
mov
mov
arpl
jmp
test
pop
out
push
ss
cld
or
jecxz
dec
in
ljmp
xor
mov
mov
add
add
push
adc
lds
mov
xor
add
mov
fwait
mov
fwait
cmpsb
and
enter
jecxz
jno
pop
cltd
inc
shlb
pop
sub
cmp
decb
push
out
dec
inc
sbb
push
sub
pushl
test
jge
mov
dec
out
add
and
fwait
jle
lret
test
and
add
mov
xchg
rep
or
cmp
sti
xchg
shrb
pop
jnp
scas
cmp
sub
ret
jno
imul
lds
adc
xlat
rcll
sbb
outsl
mov
adc
pusha
xchg
or
mov
cmpsl
jne
icebp
push
push
mov
cli
mov
sub
inc
xor
cmovbe
fwait
mov
daa
push
insl
ja
sbb
mov
in
add
add
ficoms
stos
sbb
call
mov
or
add
add
add
cmpsl
inc
pop
push
xor
add
sbb
inc
call
cmp
lret
es
ds
sahf
popa
test
add
stc
jo
out
ffree
fldl
jmp
ljmp
cmp
lcall
mov
aas
insb
xrelease
popa
test
aas
mov
and
icebp
adc
jae
sbb
mov
int
push
lret
je
pop
mov
pushf
hlt
incb
sub
push
jno
lds
pop
shlb
or
loop
adc
inc
mov
test
lret
dec
insb
xchg
inc
jb
popf
mov
call
xor
lcall
in
gs
nop
mov
fistpl
add
xlat
call
sti
push
cmpsb
fwait
push
or
loopne
mov
cmc
and
into
loope
cmp
inc
sub
mov
push
mov
out
stos
jge
or
cmp
dec
adc
add
add
add
jns
mov
jns
or
dec
jae
negb
xlat
adc
aaa
lahf
stos
stos
les
movsb
and
inc
outsl
hlt
ret
aas
mov
jle
mov
or
mov
rcrl
pop
push
in
dec
sub
xor
fwait
cmp
daa
cmp
mov
movsb
sahf
pop
add
ss
xlat
jno
or
outsl
call
dec
in
test
jl
dec
clc
adc
and
shr
scas
cmpsl
sahf
pop
int3
mov
inc
in
jecxz
and
nop
mov
cli
push
inc
and
lahf
and
fldenv
mov
sub
aad
dec
shl
xchg
push
cmp
roll
push
mov
cmp
ljmp
into
xchg
call
jno
stc
lret
popf
test
cltd
add
leave
lcall
xlat
fisttpl
xor
pop
xchg
test
test
repnz
add
dec
or
out
xchg
iret
push
aas
aas
jle
pop
adc
add
add
add
sub
dec
nop
movsl
inc
jns
pop
xlat
xlat
fldcw
imul
test
and
cmp
pop
stos
arpl
sub
les
mov
shrb
lret
sub
jns
cs
ja
dec
imul
add
jp
add
stos
dec
pop
jmp
sub
inc
pop
cwtl
out
xlat
je
dec
negl
jae
jl
push
push
leave
addb
mov
push
sarb
into
jg
xchg
mov
lods
outsl
ret
xor
cmpl
test
pop
in
mov
repz
jnp
jg
xchg
sub
mov
popa
add
mov
add
push
pop
in
js
insb
xorb
and
insl
inc
ja
push
lock
stos
outsl
pop
adc
lds
in
ljmp
inc
test
sbb
fmuls
cmp
xchg
mov
jo
sub
add
add
in
add
cmp
out
loope
jns
fnstcw
add
add
add
lods
mov
dec
or
and
pop
jmp
das
scas
push
gs
fs
cmp
sahf
stos
insl
dec
lea
cmc
out
and
inc
rcrl
shll
test
jnp
sub
fisttpl
insl
cwtl
xor
sbb
xchg
cmpsl
jp
sbb
mov
push
shr
stc
call
mov
inc
shlb
push
adc
pop
insl
dec
mov
in
add
xchg
into
lret
aad
mov
xor
inc
sub
cmpl
push
jmp
mov
pop
and
out
test
or
mulb
cmp
movsl
push
dec
test
aas
stos
mov
fmull
pop
mov
xchg
adc
inc
ss
daa
outsb
lret
je
sub
addl
inc
xchg
loopne
ja
pop
mov
and
add
lods
jg
push
mov
mov
add
add
fs
push
loope
sbb
pop
pop
aam
sub
ret
mov
fndisi(8087
imul
jno
test
pop
ficomps
mov
mov
mov
setl
and
clc
mov
or
popa
in
test
adcb
outsb
inc
andl
add
mov
sub
or
repz
push
sub
sbb
jo
in
std
cmpsl
jns
sub
mov
popf
mov
xchg
mov
dec
xchg
test
lret
aam
and
ss
ret
sbb
push
sysenter
xor
movsb
mov
pop
add
mov
nop
lods
sbb
xchg
ljmp
sbb
sbb
pop
js
mov
imul
or
fwait
stos
dec
icebp
les
and
aam
add
sbb
adc
leave
push
loope
and
cltd
cmp
add
mov
dec
idivl
cld
ret
add
jmp
cmp
and
add
add
sub
dec
ret
pushl
ja
jo
rcll
or
sti
int3
das
subl
rcll
out
arpl
lcall
sub
add
and
jg
push
mov
cwtl
jne
jecxz
mov
rorl
rorb
pushf
pop
fwait
sbb
outsl
stc
adc
pop
loop
popa
sub
js,pt
shrl
sbb
imul
inc
mov
jmp
inc
xor
push
loopne
adc
push
rcr
cmp
rcll
dec
push
sub
cmc
lea
and
sbb
push
vcvttss2si
fcoms
dec
pop
fs
mov
mov
sbb
pop
dec
clc
or
loopne
out
sti
mov
roll
hlt
xorb
push
mov
lock
ret
cmpsl
adc
jg
loopne
jns
stc
outsl
inc
lret
add
ficoms
pop
ret
mov
iret
mov
out
data16
add
add
cli
ret
out
decb
push
dec
lds
test
sbb
fidivrs
mov
jnp
mov
mov
test
mov
mov
out
movsb
std
push
fsubl
sbb
xor
jmp
jecxz,pt
mov
into
mov
mov
mov
and
jo
dec
xor
enter
lods
scas
daa
push
cltd
xchg
jle,pn
pop
sub
aad
sub
test
shll
sub
jbe
hlt
sub
stos
mov
fildll
adcl
sbb
pushf
popa
inc
cwtl
std
inc
jno
pop
stos
xor
lret
aas
lock
or
jbe
jmp
dec
inc
sahf
and
lea
xchg
or
or
xor
or
mov
pop
ljmp
mov
pop
sbb
dec
and
cwtl
jp
sbb
dec
in
lret
pop
jp
xor
add
mov
jg
arpl
rcrl
add
add
add
jecxz
pop
rcl
loopne
add
and
mov
mov
add
mov
xchg
stos
loopne
aad
mov
mov
es
fistl
dec
inc
je
add
pop
lahf
mov
imul
fucomp
rcrb
jle
add
dec
std
cmp
insb
sti
or
sbb
lret
cmp
mov
lods
and
iret
jo
mov
movsl
test
fmulp
add
rcrb
sbb
sbb
loopne
out
and
add
bound
or
mov
jae
out
in
fnstenv
movsb
and
es
stos
inc
cli
add
ds
arpl
push
add
mov
subb
mov
mov
into
xchg
cmp
cltd
inc
cmpsb
cmp
add
xor
aam
icebp
push
mov
pusha
rorb
and
cmp
xchg
repz
das
adc
mov
shlb
cli
clc
cli
clc
sarb
sti
mov
mov
add
add
lock
int3
jb
xchg
jno
cs
or
cmp
mov
into
iret
pop
test
jl
push
inc
add
lret
mov
lcall
jbe
pop
jg
jnp
negl
add
jnp
mov
jb
or
fldt
mov
fcmovnbe
imul
and
leave
dec
cltd
mov
nop
cmp
adcl
pop
stc
arpl
cmp
mov
add
jnp
aaa
pop
and
jbe
rol
inc
das
sti
mov
push
movsb
sub
sub
in
mov
clc
xchg
out
addr16
ret
clc
sub
imul
mov
xchg
and
pushf
inc
popa
adc
push
imul
jp
mov
push
out
jne
xchg
out
dec
sub
ja
insl
pop
addb
push
daa
out
adc
cmp
in
and
cmp
test
imul
mov
int3
cmp
sub
add
add
xchg
vmread
pusha
mov
adcl
mov
stos
xchg
aaa
les
fsubs
loope
sub
pop
jge
inc
jns
and
cmpsb
dec
dec
push
xor
pop
or
in
dec
or
dec
in
cmp
addr16
arpl
inc
imul
rcl
sub
popa
in
mov
cmpsl
jp
jb
pop
cmpl
cmp
xchg
xchg
push
stos
jp
cmp
imulb
or
pop
aad
xor
incl
or
and
call
cmp
int3
pop
sti
mov
or
push
aaa
aaa
and
jg
adc
xchg
inc
xchg
adc
lods
pop
leave
nop
jp
scas
sbb
insl
jecxz
cs
add
popa
rolb
cmp
jb
inc
dec
xor
sbb
xor
add
addr16
and
dec
xchg
sub
mov
fimuls
data16
add
es
data16
insb
daa
mov
leave
rcrb
dec
xor
add
add
add
jmp
jo
mov
int3
clc
cmp
arpl
fnstsw
arpl
or
insb
add
cmp
adc
pushf
repz
shlb
mov
mov
cmc
cmp
or
jae
pusha
add
movsl
movsb
cmp
lods
lret
add
sub
mov
mov
xor
xchg
add
test
imul
iret
push
fimull
pop
sub
arpl
lret
ficoms
push
out
jge
aas
mov
push
mov
pusha
push
popa
mov
pop
enter
ret
pop
sub
call
mov
xlat
notb
rclb
mov
lret
lea
mov
mov
and
or
pusha
inc
fnstsw
fcmovne
je
arpl
adc
and
loopne
rcrl
sub
je
mov
inc
in
and
xlat
xor
xlat
lret
sahf
dec
jl
cmp
xlat
lcall
inc
push
clc
mov
fldcw
add
hlt
cmp
add
add
add
and
iret
sti
mov
or
adc
bound
dec
add
lds
aam
xbegin
addr16
jp
xchg
sbbl
cli
push
and
imul
dec
dec
outsb
pop
mov
loop
ret
push
push
dec
lret
int3
bound
fcoml
mov
fs
subb
out
cwtl
inc
push
xchg
addr16
mov
add
mov
lods
xchg
jp
and
jne
lret
xor
int
aad
jae
cmpsb
mov
adc
inc
dec
mov
xchg
cmp
insb
sbb
xor
andl
orl
cmpb
test
push
in
out
aas
or
jmp
xchg
mov
jns
out
gs
xchg
jp
and
pusha
pmaddwd
xor
dec
andl
leave
mov
outsb
xor
call
add
and
push
sti
cmpsl
enter
leave
fadds
sub
add
add
outsb
mov
arpl
cmp
insl
push
inc
dec
loop
sbb
in
addr16
inc
shll
mov
xor
sbb
mov
loopw
pop
clc
loop
push
sahf
adc
xor
push
push
xchg
inc
repz
repz
jbe
iret
daa
mov
mov
xchg
sub
xor
dec
adc
mov
or
fsubrl
lea
hlt
pop
hlt
mov
cli
into
cltd
cwtl
xor
mov
inc
pop
xlat
fs
hlt
jnp
sub
and
repz
push
mov
dec
and
imul
addr16
sub
dec
arpl
mov
repnz
lock
sarl
je
aam
dec
xchg
fldcw
test
gs
aaa
xor
pop
inc
push
push
mov
xchg
pushf
mov
add
add
mov
std
mov
dec
push
mov
add
add
add
cmp
sbb
dec
or
test
call
fmuls
movsb
pop
in
or
or
aad
loope
std
sub
movsl
loopne
mov
sarl
mov
ds
sbb
enter
or
cmp
or
push
jge
cmc
mov
add
xchg
lea
lods
lret
enter
roll
insb
jns
jle
stc
das
outsl
mov
adc
adc
std
lea
sbb
push
orb
enter
jne
loope
cmp
sub
adc
sarl
test
adc
push
mov
imul
add
xchg
daa
call
popf
dec
cmp
ds
or
punpckhdq
or
pop
rcrb
jb
jb
cmp
and
inc
ljmp
cmp
out
cli
cmp
lds
xchg
and
inc
and
lcall
add
add
add
test
sbb
sbb
cmp
push
repz
jp
into
movsl
insl
pusha
sarl
pop
fwait
je
pop
dec
cmp
sbb
inc
fwait
ret
imul
out
push
imul
outsl
inc
mov
test
pop
aaa
mov
in
ljmp
jae
data16
mov
jge
mov
add
xchg
inc
mov
inc
cmpsb
scas
sbb
cmp
push
jns
dec
push
mov
pop
stos
in
popa
out
sbb
push
jo
dec
mov
es
pushf
sbb
ret
add
and
cmp
xchg
jp
push
popa
xor
inc
dec
pusha
jmp
xor
daa
mov
push
lahf
out
dec
loop
loopne
subb
and
and
insb
sbb
fsub
and
int3
lods
gs
ja
mov
adc
adc
aaa
lock
sub
rcrl
jmp
add
adc
adc
mov
add
add
add
xchg
ficomps
cmp
lahf
cmpsb
movsb
xor
dec
add
add
add
sti
and
lea
loop
push
arpl
xor
jne
fwait
or
arpl
nop
out
out
ds
iret
outsl
mov
sbb
or
faddp
xchg
shll
sub
push
pop
cmp
mov
xchg
or
movsb
into
pop
mov
jp
xchg
mov
add
or
mov
jo
popa
outsb
jo
ljmp
push
jecxz
xchg
or
push
adc
jl
addr16
add
xchg
cld
cwtl
adc
pop
insb
pushf
dec
mov
shrb
add
xlat
push
push
inc
shl
mov
fwait
sub
push
cli
in
dec
sub
fmuls
xchg
jnp
aas
inc
xchg
mov
rclb
xchg
add
lret
aam
cmp
sbb
push
adc
mov
subb
mov
inc
push
stos
pushl
jg
inc
leave
rcl
push
fcmove
add
arpl
ja
sub
add
cli
mov
das
add
add
add
loop
mov
pop
pop
fnsave
daa
mov
sbb
ret
pop
out
adc
into
ja
mov
mov
inc
test
push
xchg
and
pop
ljmp
dec
divb
ret
daa
js
in
sub
adc
xor
test
aad
out
add
xchg
stos
hlt
bound
rclb
daa
insb
js
fwait
test
sub
sub
push
push
ljmp
rorl
popa
in
add
out
inc
sub
lahf
out
push
inc
incb
xchg
mov
mov
pop
cwtl
movsl
pop
adc
adc
out
lret
stc
daa
push
xchg
stc
in
mov
les
les
inc
or
popf
ret
adc
movsl
filds
pop
insl
xchg
pop
mov
hlt
ds
mov
aas
inc
cmp
repnz
cmp
movl
in
xor
push
cmp
hlt
xchg
inc
mov
cmp
add
add
lret
mov
or
popf
push
xchg
push
xor
add
add
inc
aaa
outsb
fadds
lods
popa
or
divl
or
and
cmp
cmc
push
cwtl
imul
dec
in
mull
roll
xor
sub
outsl
daa
ja
xchg
fcomps
sub
dec
aam
outsb
mov
jmp
dec
out
or
movsl
in
sarb
dec
int3
hlt
jmp
js
xchg
lock
aam
add
or
mov
inc
adc
les
sub
pop
shlb
add
mov
or
add
mov
pushf
jecxz
dec
loopne
inc
push
cs
jb
in
mov
mov
and
mov
hlt
jecxz
fdivs
add
or
cmp
mov
fisubl
pop
cmp
fldcw
jbe
negl
add
push
sub
xchg
pop
jno
add
add
sub
sti
pop
jge
neg
hlt
add
rcll
add
add
pop
cltd
clc
stos
mov
repnz
add
fwait
sub
lods
sarb
fmull
sub
jae
ljmp
push
shrb
sarl
mov
jg
xchg
cli
pmovmskb
inc
js
hlt
sbb
mov
mov
fnstcw
and
and
les
cmp
inc
pop
mov
cmp
inc
cli
jl
lcall
lea
sbb
lea
aas
gs
cmp
pop
clc
out
jge
jo
dec
ja
enter
lret
dec
mov
or
inc
jb
mov
adc
frstor
push
fstpl
xor
push
push
cmp
sbb
push
xchg
cwtl
and
stc
insb
hlt
inc
cli
test
imul
mov
sahf
xlat
adc
adc
xchg
add
push
idiv
pop
inc
mov
xor
add
add
fsub
std
in
popf
in
stc
jmp
jae
inc
pop
xor
add
add
xor
fimull
xor
enter
cltd
push
cmpsl
iret
addr16
xchg
je
leave
arpl
xchg
inc
mov
cmp
shlb
in
ret
pop
inc
fs
mov
loope
cwtl
rcr
cmp
clc
mov
repz
ljmp
inc
lret
xor
test
sub
add
pop
or
jge
inc
es
insb
inc
add
cwtl
push
jg
push
ret
bound
mov
mov
push
std
outsb
push
das
cmp
pop
push
aam
xchg
adc
pop
xor
mov
flds
test
jl
negb
jecxz
out
mov
xchg
test
decl
or
lock
addr16
outsl
jp
or
imul
push
or
roll
cli
cs
addr16
into
sbb
repnz
sbb
in
cmp
fs
jb
fwait
iret
div
jge
pop
pop
jp
jnp
sti
xchg
jle
jp
lods
mov
xor
add
add
psrad
loope
ljmp
call
push
outsl
aam
push
and
jle
addb
add
mov
rorb
cmp
xchg
add
mov
inc
hlt
xchg
sub
sub
inc
mov
addr16
mov
jle
mov
repz
test
cmp
lods
rcll
rorb
pop
adc
mov
ljmp
mov
in
mov
pop
add
leave
push
imul
adc
adc
std
adc
mov
mov
dec
mov
adc
aaa
fisubrl
mov
and
add
inc
in
pop
cli
xor
rclb
push
mov
inc
dec
dec
cmp
sbb
or
out
xchg
rorl
mov
add
sbb
push
jp
push
sbb
xchg
push
mov
dec
daa
orl
mov
push
sti
decb
mov
adc
add
add
add
xor
iret
loop
xchg
fsubs
lock
lods
inc
popf
fs
imul
scas
push
int
push
mov
xchg
mov
mov
and
cmp
in
mov
out
adc
ljmp
xorl
add
push
insl
or
test
mov
aam
sbb
or
sbb
insl
sub
pop
mov
rorl
aaa
call
push
pminub
rcrb
in
cmpsb
fldt
rcrb
mov
ja
mov
cmp
cmc
jecxz
mov
push
cltd
jns
dec
cmp
mov
jnp
out
or
test
in
data16
xchg
adc
dec
and
mov
jmp
dec
jl
cmpsb
lahf
dec
cmp
jecxz
xor
lahf
jmp
inc
sbb
ds
pop
jne,pn
or
push
push
ret
cmp
xor
hlt
jb
ror
fs
add
in
dec
sub
rorl
fiaddl
jge
cmp
aam
loopne
add
movsl
insl
mov
adc
ljmp
ljmp
xchg
xchg
fcoml
mov
call
in
outsl
jno
lods
add
mov
mov
push
outsb
jp
cs
jg
xor
les
push
mov
ljmp
and
aad
mov
lret
aas
stos
mov
cmp
lods
fs
das
in
inc
leave
pop
push
cmp
xchg
dec
inc
sbb
negl
sub
xor
jg
idiv
mov
mov
sarl
inc
xor
jne
or
mov
cld
mov
stos
pushf
cmp
call
je
jg
stos
adc
cmpb
ret
cmp
cmpsl
and
dec
push
shlb
xor
int
jecxz
dec
or
sbbl
stos
enter
sub
rorb
incb
ljmp
test
add
add
add
xor
cmp
pop
xor
xor
add
cmpsb
loop,pn
mov
fisubrs
in
cli
or
fwait
cld
mov
adc
mov
stos
mov
loopne
or
insl
cmp
sbb
popf
pop
popa
cmp
outsb
nop
pop
xor
sub
pop
insl
add
and
stc
pushf
dec
push
dec
sub
adc
int3
add
mov
pop
pop
bound
adc
push
in
stc
dec
ret
mov
popf
mov
icebp
inc
rcll
sarb
adc
inc
cmpsl
push
out
lcall
adc
mov
adc
in
lea
aaa
xchg
cmp
and
in
mov
into
int
rol
scas
aam
cmc
and
movsl
aam
adc
xchg
pop
pop
lock
std
push
repnz
pop
mov
popa
popf
xchg
sub
jecxz
jbe
pop
add
jno
xchg
jbe
jp
adc
and
push
adc
xchg
int3
divb
rclb
nop
lcall
aaa
add
add
add
imul
jge
mov
push
fimull
adc
mov
mov
sbb
mov
mov
dec
inc
aas
ds
out
sbb
dec
push
and
or
inc
add
dec
stos
dec
xor
inc
sub
add
call
push
lods
imul
sbb
cmp
push
xchg
mov
xchg
daa
pop
rclb
enter
cmp
stos
fwait
imul
and
pop
dec
pop
ret
loope
std
cli
add
fmull
push
addr16
sub
jno
icebp
fildl
fildl
mov
sub
test
aaa
cld
and
fsubs
les
dec
popa
dec
mov
push
push
nop
xor
mov
lahf
or
mov
jle
jo
rcll
cltd
sub
dec
and
adc
dec
xlat
in
adc
mov
mov
sub
add
add
jbe
idivl
or
jbe
cmp
add
add
add
in
dec
out
popa
loopne
das
je
push
fbstp
cmp
xchg
add
incl
sub
sub
dec
sti
xchg
stos
add
mov
xchg
add
cmp
cmp
std
lahf
mov
lret
insb
push
repz
and
jns
rcr
push
dec
xchg
inc
ret
outsl
mov
leave
cld
or
outsb
shlb
xor
dec
lock
inc
outsb
es
jo
insb
push
int3
and
out
mov
das
lahf
adc
mov
jne
lods
add
and
cmp
jp
push
mov
cli
add
cmc
mov
cs
mov
scas
ficomps
jae
pop
lods
inc
or
ljmp
ret
pop
test
pop
pop
int
mov
incl
sbb
mov
cmp
mov
xchg
les
inc
xchg
fmull
enter
jbe
stos
fists
stos
sub
fwait
cmp
push
lret
add
jg
orl
add
and
outsb
sub
stos
fs
jmp
leave
aas
mov
add
add
sub
mov
lret
pop
sbb
in
xchg
mov
scas
incl
in
and
in
dec
add
or
push
lds
xchg
inc
mov
dec
orb
dec
out
outsl
mov
test
sarl
loope
mov
ret
in
mov
jmp
dec
movsb
pop
stc
daa
xchg
ret
daa
jbe
push
mov
dec
push
shlb
adc
loop
sbb
pushf
out
pusha
mov
jg
repnz
mov
arpl
or
lds
push
mov
and
cs
mov
loope
dec
fidivrs
arpl
dec
pop
incl
pop
or
add
aaa
addr16
mov
xchg
inc
test
sbb
cmp
fcmovnu
aas
test
sbb
jae
mov
push
stc
js
adc
cmp
dec
jg
jmp
ss
loop
dec
lahf
mov
sbb
das
xlat
sub
stos
les
scas
fistpll
outsl
fisttpll
or
js
add
add
add
jecxz
jge
leave
xchg
add
xor
mov
adc
xorl
sub
leave
shrb
outsb
cmp
jno
aad
pop
mov
cmp
stos
outsb
xchg
cli
aas
lahf
xor
test
sub
sahf
popa
push
xchg
test
jb
fs
jb
inc
jbe
lea
out
adcb
dec
ret
mov
es
idivl
sub
adc
cli
xor
lock
hlt
dec
jae
adc
mov
mov
pop
or
add
mov
mov
push
into
repz
test
aaa
xchg
xchg
icebp
test
bound
mov
pop
sbb
test
adc
jg
scas
test
scas
adc
into
pop
mov
xor
insb
les
xchg
sub
jp
fildll
pop
cmpb
lock
add
sbb
jnp
jnp
cmp
movsb
push
sbb
movsl
sub
jl
add
add
add
mov
stos
pop
iret
ja
dec
xchg
cwtl
inc
out
das
cmc
inc
xor
adc
push
fcomps
xchg
lahf
jb
adc
sub
or
neg
psllq
out
lcall
push
lret
insb
rcrl
inc
ss
pop
push
orl
int
ss
fcompp
push
repnz
mov
mov
pop
in
in
lock
dec
mov
es
adc
pushf
sub
call
mov
mov
out
xchg
ficompl
outsl
and
push
mov
jns
cmpsl
mov
mov
outsb
mov
jge
int3
sbbb
jge
bound
popa
sahf
push
sub
push
ss
ret
xchg
inc
rorl
push
shlb
add
xchg
pop
stos
lock
mov
dec
test
pop
cmp
jmp
popf
xor
cmp
push
jns
mov
and
push
sub
int3
jp
push
xor
add
add
adc
jmp
cmp
leave
cmpb
add
add
adc
push
int3
jae
add
dec
das
pop
push
xchg
or
ds
jno
add
push
inc
hlt
dec
ret
inc
bound
popf
cli
popa
cmp
jmp
adc
punpcklbw
push
mov
lea
gs
cmpsl
lret
out
xchg
dec
xor
popf
push
stos
rorb
pop
iret
push
push
icebp
sub
jg
out
insl
or
imul
jge
cmpsb
xchg
lock
ss
shl
mov
xor
dec
or
inc
pop
xor
shlb
loope
xchg
addb
add
ret
aas
add
jbe
push
gs
xor
daa
movsb
jg
push
cmpsl
stos
push
push
fmul
loope
popa
jmp
xchg
bound
ds
mov
adc
lock
pop
das
sbb
sbb
jmp
inc
cli
jmp
sbbb
sbb
xchg
mov
sub
xor
push
mov
push
cli
and
das
cmp
lods
repz
mov
ljmp
add
add
jnp
jl
andb
orl
int
pop
shll
shll
leave
and
mov
adc
mov
lcall
cmp
cwtl
cwtl
addb
pop
sub
leave
mov
ljmp
cmp
jmp
push
xorb
sbb
shrl
std
sub
jmp
test
loope
xstore-rng
cmpsl
das
fisttpl
add
add
lods
cmpsl
aad
ret
sbb
pop
xchg
lea
jp
rolb
or
mov
divb
cmp
fistpl
lock
subb
call
push
and
aas
gs
imul
test
arpl
xchg
in
imul
aad
xchg
data16
sarl
ja
popa
outsb
jnp
andb
sub
es
dec
sbb
add
cmp
inc
sbb
ljmp
and
adc
add
add
daa
push
cld
push
std
jmp
dec
push
sbb
mov
add
add
add
jns
adc
xor
cltd
mov
push
test
and
insb
and
cmp
xchg
lods
aas
mov
adc
incl
push
imul
push
jnp
mov
jne
lahf
inc
cmpsb
mov
dec
stos
insl
aas
sbb
movsl
aam
lock
and
ja
mov
fsubs
sub
stos
popa
xchg
mov
outsb
sub
jb
insb
mov
clc
and
or
in
jg
cwtl
xchg
shll
shrl
mov
dec
cmpsl
enter
frstor
mov
jge
and
jo
sub
popa
lahf
lods
or
xor
sub
inc
insb
out
mov
push
jbe
and
mov
cmc
sbb
rorl
shll
js
pop
repnz
adc
add
adc
push
dec
subb
mov
sbb
fmulp
xchg
cwtl
rclb
pop
cmp
andw
dec
xchg
add
jge
push
adc
dec
push
add
sbb
dec
push
out
aad
fldt
ja
aas
add
add
add
push
cmpsb
loop
mov
mov
mov
shrl
mov
push
sarb
xor
mov
push
mov
dec
pop
adc
mov
jae
push
sahf
in
stos
aam
pop
jmp
add
sub
shrb
sbb
ficoms
inc
add
daa
gs
mov
sub
jle
mov
lret
mov
addr16
mov
lret
fwait
mov
pop
sub
es
shlb
arpl
cmp
outsl
push
mov
aas
push
sub
mov
repz
jg
out
inc
mov
iret
shll
add
lods
mov
mov
rorb
mov
add
push
repz
lock
ret
movsl
sarb
fsubs
mov
insl
in
mov
iret
mov
adc
add
mov
or
fimull
sbb
test
popl
ret
and
stos
add
push
mov
or
decb
adc
add
add
bnd
out
outsb
pop
shrb
aaa
add
push
loopne
ljmp
cmpsl
rcrl
fcmovne
or
loope
xor
fimull
mov
shl
sbb
pusha
enter
loope
ss
insl
hlt
sbb
cmc
bnd
pop
push
dec
xchg
cmp
arpl
iret
or
icebp
jbe
lret
pop
lock
out
jl
sub
fistpll
inc
inc
and
je
jge
push
pop
add
popf
decb
ljmp
mov
mov
bound
cltd
mov
sub
add
xor
jae
aam
stos
cmp
lahf
xlat
jb
out
leave
sub
mov
inc
mov
fs
xchg
sub
sarl
jge
sub
mov
outsb
jbe
hlt
sbb
out
jno
orl
mov
pop
clc
inc
jecxz
dec
hlt
stos
ret
aad
out
shr
popa
push
or
push
push
adc
mov
mov
ja
jg
xchg
orl
ret
add
add
add
clc
lret
lret
cld
call
imul
push
popa
add
inc
mov
test
outsl
sub
sub
dec
fstpt
cmp
outsb
or
mov
mov
sarl
pushf
mov
mov
pop
add
movsb
push
inc
loopne
fistl
mov
nop
lods
sub
push
push
sub
into
push
xor
add
or
rorb
or
je
mov
pop
sarb
stos
clc
push
gs
sbb
sbb
lret
and
xor
fs
sub
push
shrl
popl
and
mov
les
sahf
ja
and
dec
dec
idivb
pushf
scas
mov
push
cmp
or
dec
push
jge
or
jbe
imul
movntq
add
mov
bound
add
push
mov
cli
mov
fdivs
out
and
dec
lret
jmp
imul
aaa
je
jns
xor
add
add
jecxz
adc
rorl
sarl
push
out
cltd
insl
mov
scas
sti
push
stc
fwait
xor
jl
mov
sahf
bound
mov
push
mov
mov
dec
sub
xchg
mov
les
dec
fwait
je
cmp
sub
mov
insb
xor
xor
push
xlat
insb
repz
or
sbb
bound
or
dec
dec
rol
mov
mov
dec
sbbl
ficoml
and
loopne
mov
cmp
and
fiadds
jge
jbe
mov
rolb
inc
cmp
jns
insl
lcall
movsb
lods
jb
cmp
and
xor
ret
lret
stos
movsb
mov
cmp
mov
jmp
aas
mov
push
pusha
xor
sbb
je
dec
inc
pop
imul
jne
inc
cmp
cmpsb
lds
nop
scas
inc
jbe
sub
testb
ret
cwtl
dec
incb
xlat
ja
in
pop
fstps
cld
addb
add
lds
cmc
cwtl
xchg
push
sub
in
mov
add
add
push
jo
dec
test
les
xchg
push
icebp
in
inc
notb
xchg
cwtl
out
pusha
cmp
gs
jo
sbb
roll
inc
and
aam
ret
imul
adcl
stos
ss
or
push
inc
rcrb
sub
notb
fwait
sub
push
xchg
push
ss
jl
mov
mov
hlt
aad
mov
push
dec
push
mov
sub
xchg
ja
aad
mov
nop
icebp
out
xchg
push
sbb
mov
jecxz
andl
xchg
aas
test
inc
lds
bound
mov
scas
lret
inc
dec
dec
push
sub
xor
mov
lcall
push
js
push
xchg
loope
xlat
roll
or
push
mov
jnp
idiv
imul
sub
push
xchg
or
loop
add
lock
sub
jns
xor
jg
mov
add
add
add
fstl
dec
mov
jmp
sbb
mov
pusha
pop
int3
jle
add
aad
jae
jb
xor
add
cmp
push
int3
loopne
lea
push
lret
out
out
aad
mov
fnstcw
dec
jno
adc
add
mov
lds
xor
cmp
fisttps
pushf
mov
and
cld
push
add
cmp
pop
dec
call
and
sub
add
mov
fcoms
cmp
inc
stc
sar
cli
inc
adc
dec
lods
insl
sub
ret
pop
mov
sub
inc
stc
jmp
sub
push
and
popa
xor
xchg
shll
mov
enter
dec
test
movsl
jno
rcll
adcl
sub
stos
insb
add
sub
inc
xchg
mov
add
daa
xor
dec
call
scas
mov
add
add
ret
jg
decl
rol
xchg
inc
push
mov
add
sub
jns
dec
out
call
jl
mov
imul
jmp
hlt
movsl
enter
inc
jg
ud1
popa
aam
outsb
sbb
movb
sub
out
mov
xchg
inc
sti
rcl
pop
mov
repnz
inc
imul
outsl
dec
loope
sbb
mov
test
and
cwtl
aaa
inc
lds
sbb
inc
mov
fdivrs
hlt
test
fldl
lahf
mov
add
fnstsw
mov
fdiv
testl
notb
sbb
data16
pop
push
jg
and
mov
add
les
xor
sbb
adc
sbbl
inc
cmpsl
orl
outsl
xor
lret
pop
jl
loop
call
push
cmp
sarb
fld1
jbe
push
xlat
es
inc
in
cltd
movsl
repz
add
add
das
mov
out
aad
fiaddl
test
add
add
add
cli
rclb
cmp
xchg
add
xchg
mov
in
inc
cltd
or
jns
aad
test
bound
jnp
mov
mov
adc
inc
in
mov
inc
dec
xlat
ss
sahf
jl
or
mov
jle
mov
cmp
mov
mov
pop
es
mov
xor
fwait
out
mov
add
jle
dec
dec
aad
jns
push
test
sarb
dec
cli
test
test
and
xchg
into
insl
popf
enter
jge
repz
xchg
rcll
movsb
jecxz
jmp
cmp
pop
jp
cld
es
rcrl
dec
xchg
or
test
dec
mov
inc
xchg
lret
dec
insb
pop
and
mov
loope
xchg
mov
mov
sub
mov
jl
or
out
cmp
push
mov
inc
icebp
hlt
gs
dec
adc
pop
xchg
lods
inc
add
add
add
xchg
pop
ja
jb
add
sbb
cmp
xchg
lods
jb
shrb
add
mov
xchg
push
nop
adc
hlt
push
in
dec
cmpsb
vpaddd
lock
das
push
push
sub
repnz
cmp
rclb
fcoms
js
and
adc
faddl
and
lods
jge
lods
mov
mov
shrl
cmp
lds
fsub
jg
int3
pop
fsubs
repz
in
inc
inc
ret
cmp
xchg
cmc
sar
lods
xchg
sub
cltd
les
cld
mov
pusha
mov
test
push
xor
stc
clc
test
cwtl
fdivrp
lods
sub
mov
imul
jp
ret
mov
lcall
adc
divb
lods
repz
loop
cmp
in
sbb
mov
push
mov
add
aas
gs
pop
repnz
dec
add
add
add
cmp
fmull
daa
int
push
lret
inc
faddl
push
lock
in
pop
push
call
adc
lods
repnz
mov
sub
jo
divb
and
insb
mov
push
nop
in
xor
sbb
cltd
and
in
cmp
jb
mov
andb
sti
xor
cld
popa
inc
iret
stc
cmp
outsl
test
lods
inc
xor
xchg
and
add
repnz
adc
in
js
fsubp
popf
xchg
out
pop
xlat
and
pop
mov
imul
imul
add
call
sbb
jno
mov
sbb
frstor
xor
sbb
test
fwait
in
subb
push
or
pop
sub
shrb
dec
mov
insl
lret
sbb
mov
cmp
adc
sub
out
mov
jmp
imul
add
mov
out
fisttpll
lock
push
add
add
dec
fisttpll
ja
fsubrs
mov
mov
cmpsb
mov
mov
sub
push
jp
cmc
cmp
dec
xchg
inc
in
mov
es
sub
orl
imul
xor
iret
pop
ss
cmpsl
shlb
adc
xor
out
fmul
loop
movsl
addb
and
sub
clc
sti
mov
rol
aas
mov
xchg
ret
out
ds
les
mov
dec
loopne
adc
ret
test
outsb
pop
jbe
push
decb
pop
mov
mov
out
inc
lret
std
divb
in
ficoml
imul
cmpl
cld
add
mov
xor
jae
sti
into
test
jg
ds
add
in
sub
sbb
dec
lods
add
in
leave
fisttpll
jbe
mov
dec
jae
adc
andb
push
rorb
cmpsl
pop
sbb
add
add
mov
ljmp
add
add
add
cmpsl
mov
das
lods
cld
add
out
xor
sti
mov
insb
enter
pop
cld
dec
in
sub
jmp
mov
inc
and
icebp
ds
ret
mov
jnp
cmpb
mov
and
dec
add
adc
push
stc
mov
test
jmp
inc
imul
pop
xchg
xor
dec
cmp
out
loopne
fidivl
push
adc
adc
adc
mov
xchg
cmpl
xchg
stos
lahf
jp
adc
ja
imul
addr16
scas
mov
inc
mov
adc
xchg
jns
mov
mov
std
mov
js
shr
stos
movsb
ffree
stos
cmp
movsb
enter
mov
lcall
in
aaa
nop
fisttpl
dec
ja
fiaddl
lods
iret
loop
ljmp
sbb
shrb
test
cmpl
add
jmp
out
aas
jo
sahf
jb
mov
add
add
add
aad
cmpsl
icebp
ds
push
mov
jo
movsl
imul
cmp
insl
cmp
xor
rolb
and
je
pop
or
mov
das
mov
jg
lret
rclb
push
repnz
sbb
sbb
into
mov
sti
pop
bound
pop
mov
stc
repnz
insl
les
cmpsl
call
repnz
mov
sbb
cltd
out
mov
enter
add
sbb
leave
mov
adc
testb
push
or
xchg
scas
xlat
xlat
clc
loop
cltd
shrl
add
iret
data16
mov
xchg
mov
test
jl
cmpl
pop
push
loopne
data16
icebp
mov
cmp
das
cmp
jp
push
fstpt
leave
xchg
or
aaa
xchg
xor
sub
mov
jg
scas
inc
jp
mov
jle
xchg
jmp
scas
cmp
imul
out
mov
mov
mov
rol
dec
add
add
add
push
inc
scas
fsts
jae
pop
sub
and
and
or
ljmp
mov
cmp
pop
popf
sub
arpl
cmc
inc
inc
fidivl
lret
popf
popf
inc
xlat
sub
jmp
cmp
nop
push
and
mov
push
not
nop
addr16
scas
rcrb
cmp
imul
sbbb
cmpb
ret
shll
jg
dec
lret
pop
xchg
push
and
cwtl
push
mov
decb
fcmovb
push
gs
adc
aaa
jmp
leave
jge
mov
fbld
movsl
ljmp
cmp
lods
lock
cmp
das
mov
aam
sbb
add
rcll
sbb
cmp
adc
add
mov
test
hlt
in
inc
ljmp
addl
and
jnp,pt
cmc
jne
adc
rcrl
lahf
pop
xor
bound
js
add
dec
stc
mov
ljmp
les
add
add
xor
loop
xchg
add
lods
ret
scas
xchg
movsbl
dec
bound
ds
mov
xchg
push
add
mov
repz
sub
fcomi
popa
fwait
adc
out
fs
lcall
mov
pop
sub
jbe
push
mov
or
in
xlat
cwtl
ret
jmp
in
call
xchg
rcll
lods
dec
iret
sti
ret
test
into
stc
shrb
ja
lret
pushf
fs
xlat
jge
jae
pusha
sub
pop
or
adc
arpl
es
sub
sbbb
pop
mov
sub
mov
insb
mov
hlt
daa
xchg
in
jg
inc
sub
aad
xchg
imul
xchg
or
sahf
ret
or
scas
lcall
jnp
popf
addr16
mov
pop
lds
bound
lds
pop
nop
add
arpl
push
cld
cmpsb
sbb
mov
xchg
cmp
jle
jg
cld
lcall
scas
enter
add
add
mov
pop
xlat
insb
bnd
cmc
mov
add
dec
repz
mov
les
int
inc
and
fnsave
xchg
jns
xchg
stos
cmp
sub
insl
repnz
sub
mov
shll
pop
inc
mul
dec
push
xchg
jnp
or
test
and
dec
out
and
xchg
pop
test
in
pop
push
dec
std
mov
pop
or
dec
pop
or
jo
inc
jo
sahf
or
loop
movsb
inc
sahf
stc
sbb
test
popf
fisubs
mov
mov
stos
imul
push
rorl
or
adc
and
lahf
or
fists
inc
pusha
ret
xchg
pop
es
popa
inc
mov
pop
or
xor
std
mov
sahf
test
jl
and
dec
mov
mov
and
sbb
cmp
add
mov
xchg
mov
pop
int
int
int3
dec
add
add
add
cmp
pushf
pop
xchg
add
mov
xchg
jne
out
push
out
aas
lock
and
arpl
add
outsb
movsl
cmpsb
roll
mov
test
in
inc
xchg
pop
and
sub
int
jle
adc
push
sub
loop
xor
sbb
int3
sub
fs
gs
out
mov
lds
js
pop
push
push
imul
add
inc
adc
jmp
in
push
js
adc
fnstcw
jmp
out
arpl
scas
cmp
hlt
lcall
int
inc
neg
pusha
pop
and
subb
xor
and
xchg
addr16
sub
ja
mov
pop
cmpb
lock
fstl
loopne
pop
inc
loope
push
xor
je
or
lods
ret
mov
mov
stos
pop
lock
or
aas
popf
or
mov
insl
add
stc
xchg
or
mov
and
adc
rclb
add
add
pop
sbb
xchg
sbbl
movsb
les
pushf
mov
ljmp
jl
leave
add
push
nop
adc
mov
adcl
ret
mov
leave
or
lahf
ret
imul
mov
clc
cmp
scas
pop
adcl
repz
test
push
ret
jnp
or
and
fsub
fisubl
aaa
cmp
dec
mov
push
cmp
aam
scas
sub
fsts
jae
jg
cmp
jb
repz
cmp
popa
in
mov
and
mov
imul
xor
add
lret
inc
mov
shl
sahf
bound
jo
push
movsl
sub
sti
les
mov
xchg
aam
xor
add
push
inc
int3
xlat
ret
les
daa
mov
dec
les
push
push
pop
fwait
sti
sbb
movlps
fsubrl
mov
out
cmp
ret
or
jno
lret
stc
aam
add
add
add
movl
sbb
cmp
inc
pusha
lods
mov
data16
dec
add
jp
xor
hlt
sub
sbb
add
jecxz,pt
cmp
in
xchg
jno
pop
dec
add
ror
call
fwait
mov
pop
or
shll
movsl
repz
inc
mov
sbb
jnp
xor
sbb
call
js
adc
mov
or
test
xor
pushf
jns
iret
xchg
ljmp
sub
inc
xor
mov
popa
fdivs
mov
adc
fxch
stos
add
sub
shrl
pop
nop
sub
inc
popf
seto
jmp
mov
sti
in
cmp
push
cmp
rcl
xlat
push
and
add
sbb
les
cltd
fbld
inc
mov
lock
add
or
push
shll
out
pop
pop
pushf
push
scas
fadds
add
add
push
sbbb
mov
jo
cwtl
add
mov
add
jge
loopne
sbb
cs
out
mov
pop
fcom
ror
pop
ja
fwait
push
jb
xor
pop
insb
xor
addr16
push
push
imul
loopne
int
adc
cmpb
int
jbe
dec
iret
je
sub
insl
nop
iret
push
inc
cmp
out
orl
xchg
cltd
sbb
sbb
dec
daa
mov
movsl
adc
lret
mov
dec
fwait
xchg
scas
cmp
in
out
xchg
ret
mul
rolb
movsl
adc
inc
mov
mov
inc
push
data16
repz
clc
add
xor
xchg
ja
xchg
lahf
lock
and
adc
jecxz
push
es
mov
xchg
movsl
or
adc
rclb
pop
mov
push
in
push
and
loopne
into
add
cmp
cmpsb
and
int
mov
jbe
adc
stos
push
lcall
hlt
mov
testb
fcoml
add
add
cs
cmp
in
adc
loope
mov
sbb
jb
mov
es
adc
jecxz
adc
pusha
jno
mov
adc
cmc
pop
enter
mov
testb
xchg
add
mov
sbbl
sbb
mov
mov
hlt
xchg
rorl
loope
fcmovbe
push
and
mov
dec
cmc
jb
inc
mov
es
iret
push
sub
add
adc
push
inc
inc
fstl
or
mov
imul
xchg
pop
les
sbb
pop
adc
xchg
lret
out
xor
je
cmp
dec
xchg
push
mov
aad
scas
or
aam
in
stos
dec
add
mov
outsl
jl
add
adc
cld
xchg
push
push
sbbb
das
mov
xor
in
insb
test
aaa
xchg
mov
aas
pop
fs
js
outsl
std
dec
in
pop
mov
add
jbe
idiv
imul
jmp
mov
push
add
add
add
push
xchg
pushf
lcall
cs
jmp
mov
add
and
push
push
stc
and
push
sbb
mov
push
cmp
fisubrs
xchg
cmp
int3
lods
pusha
jl
pop
sub
push
outsb
mov
inc
jp
cmp
jp
ret
inc
cmpsb
lahf
jns
cs
test
pop
xchg
js
dec
loop
insb
andl
add
push
fwait
pusha
xor
cld
lods
xchg
inc
aaa
mov
fucomi
mov
lock
cmpl
pop
leave
daa
inc
fwait
pop
pusha
xor
pop
sub
scas
enter
pusha
cmp
cmp
or
jno
decl
inc
xchg
repnz
mov
es
sub
xchg
mov
fcmovbe
out
lret
mov
xchg
outsl
fisttps
sarl
add
or
and
add
dec
movsb
js
in
jno
das
in
loop
jae
fwait
cmp
stos
sarb
in
add
add
add
jle
arpl
fs
out
cmc
cmp
stos
dec
mov
mov
push
fwait
mov
fwait
push
pop
outsb
jge
aas
idivl
push
ss
add
sub
adc
xchg
and
cwtl
and
push
pop
lret
pop
lret
mov
mov
sbb
fidivrl
insl
cli
xchg
adc
popf
cwtl
sti
dec
xor
aas
ljmp
push
cmp
mov
cmpsl
push
inc
mov
in
out
outsb
cwtl
push
mov
repnz
ja
mov
and
add
cwtl
mov
jp
rcrl
lret
lock
rclb
dec
insb
scas
and
xchg
cmp
cmp
repnz
pop
mov
push
fstps
dec
das
push
dec
addr16
xchg
xor
imul
test
mov
aam
xchg
or
jo
push
adc
fldt
sbb
adc
test
cmc
cmp
and
add
add
clc
mov
and
hlt
xchg
add
add
add
inc
push
lcall
insl
xchg
lds
sbb
lahf
pop
sarl
push
xchg
test
scas
insl
xchg
in
sbb
sahf
loopne
jns
rcll
insb
cmp
adc
add
mov
les
je
mov
int
insb
scas
cli
jbe
jle
negl
test
iret
xor
and
jnp
push
loopne
data16
test
idiv
fstl
xor
bound
popf
cmp
add
push
outsb
hlt
mov
jo
xor
mov
ja
xchg
lods
xor
out
cmp
imul
ss
arpl
out
orb
js
dec
xor
lret
xor
xchg
mov
jg
loop
xchg
or
and
iret
and
mov
and
and
dec
mov
adc
fcomps
sub
into
or
movsl
sbb
add
add
shr
mov
jmp
popa
mov
push
add
add
add
ficoml
stos
mov
sbb
mov
into
push
stos
mov
rcrl
loop
mov
nop
sti
aaa
xchg
push
jge
popa
and
adc
aas
out
in
and
xor
pop
ss
and
jg
mov
jl
repnz
fs
add
call
std
mov
adc
cli
insl
ret
mov
add
mov
fcomi
cmpsl
mov
push
jb
dec
xchg
sub
xchg
push
xor
mov
jp
add
xor
pop
cmp
je
mov
lods
adc
mov
xorl
add
popf
mov
cmc
push
push
xor
push
insl
mov
adc
push
mov
mov
xchg
in
ljmp
ja
popf
inc
sub
jno
repz
sub
lods
es
push
dec
test
std
sub
aaa
faddl
mov
xchg
jno
add
add
add
mov
lds
aad
xchg
add
add
add
nop
in
out
inc
in
addr16
mov
scas
call
and
and
xor
push
mov
rcrb
adc
lea
xchg
and
lahf
inc
test
andl
sbb
int
jnp
out
dec
fnstenv
mov
push
push
stos
repz
pusha
movsb
mov
and
lret
daa
cltd
adc
mov
out
sbb
fwait
out
aam
xchg
inc
cs
pop
testb
incl
pop
xchg
popf
xor
pop
mov
mov
and
adc
shlb
mov
loopne
sbb
xlat
lds
popa
jecxz
insl
cmp
lds
or
mov
lret
outsl
and
loop
mov
or
nop
mov
sub
fiaddl
cwtl
mov
addb
dec
es
shlb
push
mov
or
mov
and
das
cmp
pusha
cmp
cmpsb
movsb
hlt
pop
add
add
add
hlt
nop
test
fucomip
and
mov
add
imulb
std
lahf
stc
adc
scas
mov
add
and
jae
shll
mov
xor
jno
dec
xchg
shll
push
shll
push
cltd
and
adc
push
loope
xchg
stos
repnz
ret
je
outsb
jns
sbb
popa
loopne
ficomps
sbb
sub
sahf
pop
and
mov
std
ds
push
push
lret
cltd
mov
mov
push
les
push
jl
pop
pop
dec
aaa
out
push
loop
mov
nop
mov
pusha
jns
jns
jo
shlb
ret
rcll
xor
pop
xchg
fwait
pop
int3
pusha
mull
into
sbb
jl
cltd
inc
xchg
jnp
leave
inc
out
jp
orl
jge
jae
pop
int
adc
lret
rcll
fsubr
jne
pop
loopne
and
jo
push
inc
aas
in
popl
add
add
movsb
jae
jnp
mov
ja
mov
sub
pop
clc
pop
add
add
add
in
inc
adc
inc
jb
dec
nop
leave
xor
out
sub
loope
pop
icebp
fwait
movsl
xchg
cwtl
andl
cmp
jg
cwtl
dec
cwtl
push
xorl
inc
iret
add
std
inc
jp
out
jg
inc
adc
jnp
xor
lret
adc
out
and
lods
lock
rclb
inc
shl
je
sub
popf
or
adc
or
lods
add
bound
lret
je
xor
sub
sub
xchg
xorb
sbb
add
dec
sbb
outsb
dec
mov
pusha
in
mov
enter
imul
inc
mov
mov
adc
aas
mov
cmp
adc
sbbb
jge
xor
arpl
fwait
xchg
dec
adc
mov
push
clc
jbe
sub
fiaddl
mov
outsb
cld
imull
add
jecxz
mov
outsl
xchg
add
add
xor
xlat
out
cld
andb
add
add
sub
xchg
aam
mov
gs
ret
mov
jbe
xor
sub
xor
xor
xor
dec
mov
and
cld
sub
sbb
jne
pop
sbb
adc
test
pop
sub
cmp
xchg
subl
xchg
out
lds
decl
jne
and
xlat
add
fldt
and
mov
xchg
fnstcw
or
js
xor
xchg
jp
add
ret
adc
daa
stos
scas
add
imul
sub
push
divb
insl
sub
jge
or
pop
sub
lods
pop
dec
jl
fisubl
sub
pop
jb
mov
jp
loop
xlat
lret
push
adc
scas
lea
sarb
movups
ja
cmp
movsl
push
cmpsb
xorl
ficompl
pop
imul
add
mov
mov
in
dec
mov
add
add
cmp
lods
ret
lods
adc
dec
clc
mov
mov
xchg
je
repz
jno
dec
in
or
fistl
lock
pop
rorb
cli
sub
in
adc
sub
or
adc
out
inc
arpl
pushf
mov
fsubp
pop
jns
jno
ret
jecxz
or
mov
mov
ss
cwtl
orl
out
int
test
pop
fstpt
daa
or
popf
xchg
aas
mov
inc
sub
cli
and
cmp
xchg
push
icebp
adc
aad
loopne
dec
loop
scas
jbe
aam
ljmp
outsl
flds
es
std
mov
scas
jns
jg
pop
xchg
rcrl
xchg
or
sbb
sub
sub
shll
test
addb
push
sbb
les
jmp
rorl
test
xchg
lahf
sub
test
roll
add
add
push
into
push
push
inc
lahf
mov
add
add
add
add
in
xchg
pop
insb
jb
lds
repnz
mov
inc
push
dec
jo
ret
daa
aas
xor
inc
dec
fdivl
testl
ret
xchg
sbb
cmp
je
pop
dec
in
stos
pop
cs
jnp
adc
rcrl
inc
push
jno
inc
push
repnz
jle
push
leave
addb
hlt
pop
out
mov
mov
or
push
fcomi
jp
push
mov
add
xor
or
faddp
pushf
mul
xor
pop
das
daa
mov
push
les
sbb
cmp
cmp
inc
pshufw
lds
or
push
mov
lods
inc
jmp
cmc
jo
jl
popa
mov
nop
jecxz
add
and
mov
adc
mov
fwait
pop
out
cltd
movsl
jmp
cmp
mov
adc
push
and
mov
jg
or
or
add
add
call
je
stos
in
dec
int3
js
mov
adc
rcrb
cli
dec
popf
gs
aad
dec
ret
in
mov
out
std
out
cmp
push
dec
hlt
bound
cs
ret
fildll
adc
repz
jae
push
mov
or
rcll
mov
xor
adc
or
int3
and
xchg
adc
roll
inc
fst
push
pop
inc
insb
jmp
mov
dec
mov
inc
mov
loop
dec
xchg
unpckhps
push
jmp
or
xor
mov
sarb
mov
mov
push
inc
stc
cmp
movsl
rcrl
inc
xor
and
outsb
mov
xchg
inc
inc
xchg
insb
daa
insl
xchg
daa
mov
xchg
sarl
pop
fisttpll
fadds
pop
orb
in
push
cmp
push
js
mov
pushf
pop
out
sbb
push
nop
loope
add
add
lahf
pop
cmpsl
jne
mov
pusha
add
add
add
out
inc
jge
pop
sub
inc
mov
addr16
mov
inc
push
lock
add
stos
stos
movsb
cmpsl
iret
jnp
ret
or
out
aaa
xchg
dec
or
jp
lock
lea
mov
insb
sub
jl
ror
dec
pushw
cmp
lcall
call
andb
xchg
jmp
stc
popf
cmp
cmp
cmp
xchg
fwait
sbb
push
jle
push
stc
inc
rorb
in
add
xchg
push
xor
loopne
movsb
mov
sub
xor
push
xor
testb
aaa
cmp
dec
or
xor
mov
xchg
jae
and
dec
addr16
jg
push
cmpsb
sbb
or
xchg
dec
pop
loope
lahf
popf
fldt
or
orl
fildl
add
add
idiv
jg
sub
adc
popa
add
add
add
mov
dec
sbb
into
mov
lahf
inc
jecxz
aaa
pop
dec
cmpsb
or
sbb
xor
inc
ret
add
cmp
and
shll
xchg
dec
in
lret
dec
mov
cld
test
testl
movsb
push
and
loopne
push
dec
scas
xchg
cwtl
or
mull
mov
ss
xlat
push
fistpll
ror
adc
mov
push
inc
insb
dec
inc
loope
or
xchg
fwait
addb
subl
repz
out
mov
xor
sar
pop
push
sti
test
add
pop
cmpsb
pusha
in
lret
push
add
jnp
xchg
outsb
add
sub
clc
mov
mov
xor
mov
add
sbb
scas
or
dec
push
mov
dec
sahf
cltd
jns,pt
xchg
repz
inc
fcmovne
pop
inc
sahf
out
lret
daa
dec
and
bound
loop
push
sub
repz
jb
mov
dec
mov
inc
pop
mov
fstps
and
adc
add
add
add
fimuls
mov
insl
push
lret
dec
dec
jns
outsb
mov
rol
push
into
cmp
addr16
shrb
pop
mov
pop
sbb
repnz
popa
adc
popf
adc
jno
pop
je
popf
push
lcall
cmpsb
xchg
pxor
sub
sub
pop
cld
or
popa
mov
adc
mov
out
jg
in
add
aaa
mov
dec
aaa
sbb
jp
mov
jnp
adc
fs
movsb
jle
jb
sbb
jae
sub
inc
sti
mov
or
daa
pop
and
out
pop
and
fnstenv
dec
adc
add
xorb
push
call
ljmp
sarl
adc
cltd
shll
cmp
shll
data16
adc
into
sbb
and
repnz
movsb
jle
arpl
aas
stc
sbb
add
add
jb
cwtl
enter
dec
cmp
in
je
mov
hlt
and
stc
pusha
nop
adc
sbb
cmc
dec
cmp
push
jmp
pusha
xor
frstor
shrb
cld
jecxz
cmp
sbb
lret
and
jb
repz
aaa
xchg
adc
sub
fistps
dec
leave
sahf
ljmp
pop
inc
xchg
mov
jg
scas
cmpb
mov
popa
inc
ss
fildl
imul
fnsave
pop
dec
jge
mov
xchg
ljmp
push
inc
pop
test
sahf
test
dec
stos
or
aam
leave
cs
xchg
clc
mov
lahf
mov
mov
pop
in
mov
jo
out
int
push
sub
adc
gs
ja
jb
mov
out
inc
lcall
xchg
mov
pop
icebp
test
cmpsl
pop
adc
mov
nop
scas
sbb
stos
sub
stos
out
jmp
sub
addr16
cmpsl
stos
sbb
add
add
add
jnp
movsb
aam
popf
adc
rep
fsincos
pop
cmp
mov
bound
pop
cmp
scas
std
pop
push
sbb
aaa
sahf
sub
fadds
sub
bound
mov
nop
lods
pop
out
jecxz
inc
movsb
imul
xchg
push
popf
xchg
scas
enter
jge
push
pop
xor
dec
lock
pop
mov
int3
idiv
shrl
into
leave
xchg
or
jmp
fwait
pusha
or
add
cld
pop
bound
lret
data16
mov
inc
and
lcall
dec
mov
mov
lds
and
add
mov
sub
orb
mov
loopne
in
push
stos
loop
or
cwtl
cmp
cmp
mov
fnstcw
inc
ds
sbb
add
repz
mov
cli
inc
jno
movsb
pop
cmc
pop
stc
shll
fnstenv
sub
xchg
stc
and
add
add
jae
xchg
andb
fldl
xchg
test
dec
fwait
in
mov
stc
ja
cmp
push
ror
stc
pop
mov
dec
bound
adc
xchg
push
dec
jbe
jge
inc
pop
lods
xor
dec
lods
cwtl
or
sbb
loopne
mov
enter
mov
mov
ret
test
xchg
mov
jg
sub
insb
push
cli
iret
call
push
push
test
cltd
mov
adc
or
mov
das
and
ja
lea
aaa
lcall
cmp
jns
cld
mov
lcall
stc
xchg
pushl
mov
loope
mov
icebp
fxch
lods
mov
jbe
cmp
test
jecxz
loopne
sbb
cmp
into
inc
xchg
rorl
fst
loop
cli
cmc
xchg
cltd
sbb
or
je
add
insl
out
pop
stc
je
xor
cld
je
jbe
jns
sbb
loop
cmc
add
add
add
sbb
leave
mov
popa
inc
mov
aas
sbb
push
push
pop
int
or
jns
test
pop
add
loope
xor
call
cmp
push
mov
sub
adc
ja
or
inc
lcall
andl
out
mov
xlat
dec
fwait
dec
dec
push
sub
and
pop
mov
popf
sahf
mov
je
les
jbe
adc
push
xchg
adc
ljmp
into
sub
jge
cltd
out
mov
cmp
mov
pop
loopne
orl
mov
cwtl
jbe
push
aaa
movsb
ja
add
jb
inc
in
popa
add
cld
push
mov
dec
adc
mov
sub
add
jo
cmp
data16
add
lock
add
xor
sti
push
cltd
jmp
fildl
or
mov
add
add
add
stos
xchg
out
jecxz
outsl
fiaddl
adc
int
jge
das
mov
mov
outsl
sbb
cld
rclb
fnstsw
ja
aad
js
into
data16
lahf
stos
inc
out
xchg
inc
mov
arpl
punpckhwd
mov
mov
mov
mov
shll
sub
fnstenv
std
jns
stos
into
cmp
shlb
lods
inc
nop
sub
js
fstps
test
push
mov
fbstp
mov
mov
std
stc
std
sbb
imul
mov
daa
cltd
or
dec
xor
fimull
adc
dec
pop
sahf
adc
loopne
les
dec
pop
cmp
in
add
jle
and
inc
xchg
dec
sbb
pop
sbbb
and
pushf
or
icebp
cmp
and
dec
pop
lds
mov
mov
xchg
sub
shll
adc
add
add
push
jg
dec
xchg
dec
pop
pop
jmp
add
add
and
repz
push
in
mov
xor
leave
lds
outsl
es
push
sub
dec
mov
loop
test
pusha
fmuls
xchg
sub
into
shrl
xchg
sbbl
bound
js
lcall
or
add
sbb
xchg
dec
icebp
pop
in
adc
outsl
in
in
push
mov
mov
stc
inc
rcll
into
cwtl
out
inc
push
jb
insb
cmp
pusha
adc
and
and
sbb
cmp
jo
cmc
mov
test
xchg
shll
adc
push
add
ret
cmp
add
out
mov
lret
loope
cmp
test
dec
jle
adc
dec
cmp
pop
push
mov
pop
les
push
arpl
fistl
lcall
dec
jno
int3
mov
int
cmp
lods
hlt
push
sub
sti
sub
add
add
mov
fucomip
push
insb
xor
or
xchg
xor
add
add
pandn
push
adc
daa
rol
cmpsb
inc
in
sub
jns
push
sbb
test
push
lock
icebp
jp
stos
stc
xor
cltd
mov
std
aaa
xor
sti
fidivrs
add
int3
dec
pop
xchg
insb
cmp
or
je
insl
mov
pop
int3
pushf
pusha
clc
pusha
xchg
mov
lret
ficompl
cmp
xchg
movsl
jb
call
clc
popf
mov
dec
aas
and
xchg
out
repnz
pop
and
sbb
lods
lret
ficoml
addl
jae
adc
adc
mov
mov
and
lret
fistpll
adc
fsubl
mov
mov
lods
test
cmpsl
jge
adc
mov
imul
mov
dec
push
pop
mov
gs
inc
gs
fldenv
inc
sbb
shrb
add
add
dec
out
iret
jmp
aas
in
push
imul
xor
add
add
add
dec
flds
jb
test
rorl
nop
pop
iret
sub
cmp
icebp
mov
jle
push
fsubs
mov
cmp
stc
push
shl
cld
xor
push
xor
sbb
inc
std
test
add
aad
mov
mov
pop
push
stos
and
cmp
jb
pop
jo
sarl
mov
mov
mov
int
sbb
sub
test
pop
lahf
outsl
cmc
lcall
test
sbb
add
cmp
push
jne
sbb
rolb
enter
cs
jo
lea
and
dec
mov
mov
push
test
xchg
xor
adc
sbb
pop
nop
inc
push
nop
adc
sub
inc
fcoms
loopne
leave
dec
pop
push
mov
lea
xorb
lret
cld
outsl
mov
xchg
xchg
cmpsb
mov
add
add
std
cmpsb
pop
dec
sub
sub
imul
add
add
or
daa
movsb
aas
sub
jns
pop
jae
xchg
rcrb
insb
fisttps
rcl
inc
stos
dec
mov
iret
pop
jae
pushl
cld
mov
lea
pop
mov
inc
mov
jmp
loopne
pop
and
out
out
movsb
mov
mov
loope
add
mov
jae
outsl
mov
repnz
mov
xor
outsb
sahf
bswap
mov
mov
pop
cmp
xor
jnp
adc
aad
rcll
xchg
xchg
fisubs
pusha
xor
push
daa
mov
jg
into
jmp
rcrl
bound
cmp
loope
xor
out
inc
arpl
std
pop
sub
sbb
movsb
or
ret
fstl
int3
adc
or
fsubrs
mov
ljmp
lcall
lds
test
xor
add
add
neg
std
sub
dec
insb
jb
clc
cmp
add
add
add
xchg
jmp
iret
mov
mov
adc
pop
sahf
pushf
rcl
out
pop
lret
outsl
mov
sti
test
jmp
mov
pushf
ficompl
sbb
dec
jge
inc
adc
xchg
cs
mov
aaa
mov
fildl
loope
mov
sub
inc
push
jl
mov
mov
cltd
insl
pop
call
idivb
push
aam
cmpl
inc
pop
inc
push
in
pop
add
dec
stos
push
mov
jo
inc
js
sbb
stos
cmp
pop
js
add
lea
push
jmp
fstl
jne
or
mov
ret
jo
lret
and
or
and
mov
jns
jg
sbb
or
mov
cmp
aas
inc
popl
mov
and
divl
xor
mov
pop
xchg
ret
addr16
cmp
inc
or
add
cs
xor
cltd
mov
add
add
into
ja
cmpxchg
jecxz
inc
stos
mov
clc
add
es
add
sub
fiaddl
add
arpl
xchg
pushf
stos
decl
out
rorl
jo
jl
bound
shll
mov
mov
and
push
add
stos
sbb
mov
xlat
xor
mov
mulb
loop
shll
sub
je
lds
shll
dec
popf
js
xor
test
mov
sbb
clc
cmpsl
xchg
mov
insb
adc
cmp
mov
sbb
pop
movsb
mov
mov
mov
push
or
cmp
inc
jno
jge
addb
dec
pushf
enter
adc
imul
enter
negb
out
dec
je
into
xchg
add
cmp
decl
js
test
add
add
ja
out
sbb
sbb
outsb
add
add
add
nop
mov
jmp
pop
into
adc
dec
mov
dec
inc
sub
push
bound
ljmp
mov
inc
xchg
and
into
std
add
outsl
bound
mov
js
ret
mov
imul
mov
xor
or
jg
push
pop
fisttps
lret
fisttps
xlat
inc
das
pop
xchg
sbb
add
je
adc
leave
into
inc
movsb
icebp
mov
int3
dec
rorb
jbe
pop
pop
fs
mov
lock
push
xor
inc
and
stos
lret
sbb
pushf
fildll
pop
fimull
jnp
push
scas
scas
test
hlt
push
or
push
pop
inc
sub
sub
in
les
fdivrl
add
lock
test
popa
adc
xchg
mull
adc
orl
mov
xor
mov
into
dec
je
xchg
inc
movsl
out
mov
daa
sub
ja
mov
push
push
dec
outsl
add
add
add
mov
pop
movsb
push
mov
xchg
repz
aas
mov
cld
xchg
pop
pop
add
mov
push
bound
ds
sbb
and
icebp
dec
notb
popa
push
mov
sbb
out
sbb
xchg
or
ret
shl
adc
jne
es
out
dec
or
je
xchg
push
hlt
or
mov
ret
jecxz
scas
cmpsl
out
adc
stos
aas
sub
ljmp
ja
adc
add
hlt
jbe
or
jae
or
or
add
mov
dec
fidivs
repz
loope
aam
xlat
in
sub
dec
add
icebp
outsl
jmp
inc
cmpsb
sub
fwait
inc
cmp
xor
dec
fsubs
jg
inc
das
decl
movsb
leave
or
jns
push
out
mov
mov
es
repnz
inc
and
cmp
xor
mov
add
add
int
mov
jnp
outsl
cmpsb
loopne
sahf
jns
dec
jo
add
add
imul
test
lahf
es
fsubrl
adc
push
jne
xor
inc
dec
inc
xor
mov
test
or
xchg
stc
ret
out
mov
incb
dec
mul
jle
mov
push
jb
popf
faddl
mov
mov
cmp
xlat
fucomp
rcr
lock
cmp
adc
or
xchg
loopne
sub
out
movsb
and
and
inc
add
test
test
push
jle
dec
sub
sti
test
mov
push
jns
pop
shll
shll
clc
cmp
arpl
scas
cltd
sbbl
into
sub
mov
popf
mov
outsl
rorb
in
aaa
xchg
dec
xlat
daa
cmpsl
aad
or
imul
leave
dec
icebp
imul
ds
pop
sub
sti
loope
mov
mov
sub
loop
xchg
push
mov
cli
xchg
jle
push
je
in
cmp
add
add
or
jg
mov
jns
scas
push
adc
dec
xchg
sub
popa
jnp
or
cmp
out
push
popa
cli
and
pop
pop
xchg
adc
add
call
dec
jmp
mov
je
jns
add
adc
les
cmc
aad
mov
adc
test
mov
sub
cmpsb
fucomip
movsb
dec
int
xor
stos
xchg
inc
addr16
cmpsl
mov
cmp
pop
pop
jmp
std
cmp
loop
gs
mov
jnp
test
imulb
mov
ret
and
jp
pop
scas
fwait
imul
inc
fstl
vsqrtpd
mov
pop
out
fsts
inc
cmc
xorl
cmc
pop
inc
data16
rol
inc
cmp
in
notb
and
mov
push
mov
add
call
mov
add
add
fwait
jnp
aad
sbb
inc
cld
push
jb
add
add
cmp
inc
insb
insb
sbb
dec
out
pop
fisttpl
aaa
push
sub
jnp
sbb
jnp
xor
imul
cltd
std
cmp
jmp
iret
fidivl
fstps
cmc
mov
push
sti
sbb
adc
add
mov
jge
push
in
sbb
adc
push
sub
and
mov
pop
cmp
adc
cwtl
pop
dec
hlt
das
cmp
orl
out
xchg
pop
aad
cmp
sub
lods
mov
xor
mov
add
mov
int
jb
test
pop
jp
je
add
cli
pop
and
fildl
scas
dec
popf
push
leave
movsb
negb
jnp
movsb
xchg
icebp
mov
jne
inc
sub
jns
dec
and
insb
cmp
stos
sbb
sbbl
jne
mov
xchg
pushf
mov
std
mov
sub
cwtl
mov
add
add
adc
adc
mov
aaa
daa
cmpsl
add
push
lret
pop
clc
xor
dec
xchg
mov
insb
bound
in
test
and
push
into
arpl
icebp
push
sub
sbb
loop
add
dec
jmp
pop
insl
adc
insl
imul
pop
imul
arpl
sub
aas
and
insb
test
in
inc
pop
lret
pop
adc
jns
or
mov
xchg
cmpb
frstor
push
mov
out
out
jae
aad
sti
shrb
fwait
push
mov
push
movsb
ss
lods
push
insb
in
pop
push
cmp
jmp
pop
testl
jg
fsubl
je
lock
jno
xor
ja
xchg
scas
push
test
ret
inc
pop
inc
push
mov
jne
push
xchg
add
sbbl
inc
jae
sbb
inc
and
add
add
fstl
lret
popf
mov
add
add
xchg
out
inc
pop
and
repnz
cmp
into
jecxz
pop
sti
pop
out
addb
repz
and
adc
das
adc
bnd
insb
data16
sub
jae
arpl
rorb
rcll
fxch
jge
cli
mov
inc
xor
iret
xor
mov
pop
push
and
in
loop
inc
loop
loope
into
adc
ss
push
and
mov
ficoms
jnp
dec
xor
loope
in
adc
aas
out
out
and
in
xor
push
rdpmc
leave
fistpl
fs
add
and
insb
jp
pop
or
jmp
je
or
movsbl
les
jl
fsubrs
ljmp
sbb
cmc
mov
adc
lds
mov
dec
jne
test
sub
mov
add
test
xchg
movsl
inc
in
mov
mov
out
sub
sbb
jne
add
add
and
aaa
arpl
mov
and
adc
push
jae
push
dec
mov
jmp
pop
jecxz
mov
ja
push
dec
sbb
jge
mov
jns
loop
lods
xchg
movsb
addr16
pop
mov
movsb
ficomps
jb
sbb
mov
cmpsl
sbb
jno
pop
mov
popa
fsubs
ja
leave
sub
dec
ds
psubw
adc
xor
pop
xor
jbe
fwait
mov
or
dec
cmp
mov
mov
push
and
imul
cmp
jge
es
mov
sbbb
sti
jns
mov
fstl
xlat
mov
imul
popf
mov
jecxz
fldl
xbegin
push
mov
leave
aas
mov
push
les
add
mov
stos
fxch
ljmp
add
add
divl
in
sub
fs
add
add
das
shll
stos
mov
mov
fwait
test
inc
imull
imul
cmpsb
leave
out
jno
mov
ret
cmp
xor
cmp
xchg
cmp
sbb
pusha
lock
mov
dec
mov
pushf
sub
inc
jmp
ret
cli
mov
cli
mov
je
insl
inc
ja
mov
jmp
xchg
xchg
outsb
xor
rcll
jg
add
out
xchg
out
mov
jbe
inc
mov
mov
repnz
stos
push
add
enter
cmp
xchg
stos
je
inc
inc
inc
pop
js
fsubr
mov
arpl
xchg
dec
xchg
cli
or
fisubrl
adc
fildll
dec
stc
mov
mov
sarb
push
pusha
mov
fs
cmp
jns
push
gs
pushl
lock
sub
push
es
push
clc
fisubs
mov
mov
push
and
add
add
mov
dec
jb
pusha
mov
adc
mov
sub
movsl
cmp
push
jp
fnstenv
jp
and
dec
mov
ds
sbb
xchg
mov
cmpsb
test
stos
jnp
testl
fisttpll
lea
dec
stos
add
cmp
sbbl
movb
xor
leave
pusha
notb
clc
fmul
xor
iret
pop
test
aam
inc
jo
push
pop
pop
popf
xchg
sbb
sbb
xor
dec
in
adc
mov
hlt
push
mov
shlb
mov
iret
jecxz
ret
sahf
xor
xchg
es
push
push
and
adc
pop
inc
lcall
pop
pop
stos
cmp
xchg
pop
into
inc
fidivl
mov
or
mov
test
cmc
mov
xor
sub
cmpsb
adc
push
fsubrp
outsl
movsl
movsb
add
xchg
xchg
sub
add
add
mov
outsl
jne
ljmp
mov
add
add
add
stos
xchg
inc
icebp
mov
popf
aaa
mov
xor
mov
je
sub
mov
mov
cld
add
mov
jne
mov
xchg
mul
ret
sub
lods
iret
sbb
fxtract
cmp
mov
mov
xor
xchg
lahf
test
pop
stos
movsb
cmp
enter
aad
aas
icebp
jmp
jecxz
cmp
repz
fdivrs
sub
aaa
pop
mov
lcall
ja
add
and
lret
cmpsb
shlb
stos
icebp
ds
mov
xchg
xor
dec
cli
or
lock
movsb
pusha
sub
cmc
lcall
das
mov
mov
iret
dec
jecxz
nop
xchg
dec
xchg
loop
pusha
or
clc
je
mov
cmpsb
lds
mov
scas
add
jbe
lock
push
mov
insb
repz
int
bound
orb
ljmp
jl
push
out
insl
addr16
add
add
add
jmp
xchg
mov
fwait
add
sub
add
pop
fnsave
loope
xor
jns
push
icebp
ss
loop
in
outsl
fdivs
pop
adc
test
inc
imul
mov
xchg
fisubs
add
and
adc
rcll
rol
and
call
xor
dec
rep
call
dec
cmp
roll
and
push
setne
mov
lcall
faddl
cld
or
jecxz
pop
shl
mov
std
cmp
jmp
stos
mov
mov
pop
mov
inc
cmp
movsb
push
xor
into
and
repnz
mov
je
loope
popa
push
dec
xchg
sbb
cmp
add
jns
inc
xchg
lret
fistpl
ja
push
pop
popf
loop
mov
sbbl
mov
push
lock
xchg
sub
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
and
push
out
cwtl
mov
add
xor
out
sbb
pusha
cwtl
sub
imul
js
lods
cli
das
xor
ds
add
sub
mov
cli
dec
sahf
cmpb
mov
in
dec
out
sub
dec
sub
repz
ljmp
inc
pop
das
aaa
or
in
popf
dec
pushf
imul
or
add
mov
fistl
test
jecxz
jg
pop
and
jmp
out
mov
data16
adc
xor
loope
in
pop
lea
or
xlat
icebp
popa
test
out
cmpsb
and
mov
cltd
or
ret
xor
pop
movsl
rorl
mov
mov
or
push
mov
decl
fisttpl
or
cli
lock
push
ds
mov
cmpsl
xor
lret
jp
adc
gs
movsb
dec
insl
add
add
add
cmpsb
push
sbb
pop
mov
add
add
mov
inc
adc
push
mov
mov
orl
and
pop
sbb
jp
imul
ret
shrl
les
jmp
pushf
jb
lahf
push
loope
mov
scas
insl
das
dec
cmpsb
jbe
das
lds
mov
fs
out
notl
mov
test
adc
add
sbb
lahf
push
inc
sub
xchg
pop
adc
pusha
dec
cmp
mov
cmc
fucom
and
scas
insb
dec
pop
xchg
ss
or
inc
jmp
mov
sbb
test
mov
and
cmc
sub
sub
test
ret
js
xchg
push
cltd
cmp
lret
fs
iret
xchg
jno
es
incl
inc
iret
loope
mov
fnsave
sar
or
fcomps
adc
or
inc
sbb
mov
mov
pop
push
testl
add
add
cmp
cli
mov
sahf
add
mov
jl
add
add
rorb
adcb
jnp
xchg
xor
outsb
xchg
inc
adc
subb
ret
adc
std
inc
call
call
iret
dec
repz
mov
repnz
cmp
push
test
fnstsw
sti
jmp
cmpsl
or
and
sbb
xchg
fcos
out
push
mov
repz
sbb
test
mov
lret
enter
mov
cmc
pop
jge
add
mov
shrb
dec
je
jg
arpl
cs
data16
cmp
mov
adc
out
aas
lcall
jge
sti
mov
call
sub
pop
je
es
mov
sbb
scas
std
xchg
test
mov
sub
std
dec
mov
pop
fcompl
sub
jg
dec
popf
xchg
repz
lcall
xor
and
in
aaa
sbb
std
test
lcall
orl
jge
add
add
and
scas
call
outsl
imul
pop
cmpsb
dec
clc
lret
push
mov
in
push
stc
xchg
leave
xor
test
out
push
pop
fstp
or
xor
ret
iret
jl
out
lahf
shlb
or
je
jp
inc
cmpsl
pop
loope
inc
sahf
test
jg
cmpsl
mov
stc
lods
mov
nop
faddl
lods
js
mov
cld
scas
pop
sbb
pop
push
or
jne
ret
cmc
adc
nop
aad
orb
or
out
in
or
shrl
pop
push
xor
xchg
or
pop
mov
add
in
xchg
inc
cmp
stc
stos
and
xchg
lahf
stc
xchg
push
mov
insl
ss
shll
add
sarb
lds
out
jbe
push
sub
fsubrl
xchg
ljmp
push
ja
pop
xchg
mov
test
fsubrl
js
xor
push
mov
add
add
xchg
xchg
jns
jmp
mov
outsb
test
add
add
insb
mov
std
in
je
jg
mov
je
mov
stc
mov
xor
push
int
lods
jbe
xchg
mov
out
cmc
popa
adc
out
out
and
cmove
iret
and
add
cmp
into
arpl
dec
cs
in
xor
cmpl
adc
jle
icebp
imul
mov
jp
pop
out
mov
lcall
mov
push
fimuls
out
xchg
xchg
sbb
push
sti
out
pop
enter
push
ds
push
inc
es
sbb
xchg
dec
xor
test
scas
out
inc
popa
cmc
int
push
inc
and
add
bnd
std
hlt
or
daa
subb
ret
es
stc
xor
sarl
mov
sub
xchg
sub
ret
fidivl
les
fimull
repnz
xchg
lds
leave
adc
ljmp
inc
sbb
add
add
lcall
lock
push
mov
add
add
jb
fistpl
int3
mov
cmp
xor
and
outsb
in
js
dec
adc
mov
ja
ds
iret
adc
xor
xchg
enter
cmp
enter
in
push
cmp
mov
mov
xchg
cmp
test
sub
lds
mov
jae
xor
dec
push
out
scas
push
std
jbe
jnp
cltd
scas
cld
ljmp
lcall
sar
mov
mov
icebp
fidivl
sahf
push
and
negb
hlt
mov
inc
mov
mov
and
sbb
jb
sub
xor
std
mov
fidivs
dec
js
mov
nop
sets
leave
lock
call
jmp
movsb
xor
and
push
jecxz
adc
or
dec
stc
out
fisubrs
aad
lock
add
jl
cs
idiv
jne
iret
pop
rclb
addb
add
add
cmc
cmp
fldl
ss
xchg
mov
jne
cs
pop
jbe
and
in
jle
lods
pop
inc
sub
imul
dec
xor
mov
test
sbb
cli
mov
dec
mov
loope
mov
pop
iret
int3
aaa
cmpsb
xor
pop
popf
sub
lock
std
rcrl
mov
cld
and
xor
push
inc
xchg
adc
inc
mov
jmp
adc
push
mov
loope
mov
sbb
call
xor
mov
xor
dec
mov
fldl
out
jo
push
cmpsb
push
adc
iret
les
data16
loop
mov
out
xor
rolb
dec
jge
adc
inc
jo
cmpb
cli
stc
pop
ficomps
push
push
ljmp
mov
mov
pop
in
outsb
fiaddl
sub
push
push
enter
xchg
jmp
lods
mov
pop
adc
inc
push
inc
out
jo
std
loop
and
push
xchg
pushl
sub
out
test
addl
add
lret
inc
cmp
ret
push
lcall
jmp
sbb
ds
scas
xor
loop
xchg
pop
das
inc
lock
test
sub
dec
test
add
mov
sbb
out
mov
dec
mov
sub
ljmp
jns
jp
movsb
loope
in
bound
and
add
or
into
cltd
shl
mov
xchg
ljmp
and
insl
cmp
clc
push
adc
lret
adc
inc
xchg
sbb
or
shrb
pop
xchg
push
pushf
inc
daa
into
out
sub
repnz
orl
push
push
fcomps
inc
ss
cmp
mov
adc
test
pop
cmp
mov
insb
lret
xor
push
jge
adc
ret
cli
gs
aas
dec
das
int
stos
pop
lods
cmp
add
insb
clc
outsb
xor
cmp
sbb
mov
jge
std
sti
iret
ss
push
jno
xor
xchg
addb
add
add
lea
aas
lods
out
xor
sbb
xchg
or
mov
loope
rcll
test
dec
mov
xor
add
inc
push
fnstenv
mov
iret
movsb
sbb
push
dec
pusha
mov
test
xor
push
lock
and
divb
popa
xchg
test
sub
xchg
push
stos
scas
xchg
sub
loop
nop
jp
jge
sbb
add
mov
fdivs
dec
ja
dec
movsl
popa
sub
sub
movsl
lahf
gs
add
ja
sub
inc
sbb
xlat
ret
dec
pop
inc
inc
mov
sbb
int
mov
in
pop
mov
adc
les
jp
jno
sub
stos
fdivs
into
sub
test
push
insl
jmp
pop
cmpsl
test
fisubrs
cmp
and
in
popl
xchg
push
mov
daa
adc
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
jge
and
add
add
xchg
mov
cmp
adc
fwait
pop
lods
clc
movsb
or
fiaddl
sarl
fwait
cltd
push
int
leave
ret
mov
int
or
ret
sbb
scas
sub
xchg
and
pop
stos
popf
jns
pop
adc
jg
frstor
xor
mov
cltd
in
fwait
push
lds
aas
cmp
mov
ljmp
ret
lods
mov
pop
jns
xchg
lods
jg
and
add
fs
inc
jp
pop
xor
or
inc
repz
adc
sub
dec
dec
cmp
loopne
xor
mov
test
mov
jecxz
xchg
fcom
std
push
inc
adc
test
mov
in
mov
lea
add
outsl
aad
sahf
ficompl
dec
addr16
arpl
and
add
add
mov
mov
dec
jl
pushf
test
add
add
dec
loopne
ds
sti
sub
aam
in
mov
punpckldq
inc
adc
or
and
inc
hlt
mov
dec
jns
pop
dec
mov
cmpsb
out
push
ja
mov
xor
mov
fisubl
hlt
test
aas
jp
push
daa
xor
and
jecxz
inc
rolb
std
xor
xor
pop
cmpl
sub
ljmp
nop
pop
sub
insl
pop
je
sub
jae
test
sbb
into
inc
cmp
sbb
adc
mov
or
cmp
jl
dec
aaa
mov
sbb
xchg
inc
pop
inc
and
push
cmp
cmp
test
mov
xor
hlt
ss
ljmp
add
sbb
nop
ss
or
xchg
imul
mov
notb
test
outsl
dec
jne
dec
sub
xchg
lds
and
je
in
imul
add
add
pop
test
ljmp
lock
xchg
out
lock
lret
add
add
add
sub
jne
jg
pop
and
dec
or
aam
sub
dec
jbe
test
cmova
out
dec
push
popl
or
xchg
ds
mov
jb
mov
imul
add
inc
sbb
je
inc
push
xlat
loope
hlt
out
inc
sbbb
or
in
cmc
fstl
push
xlat
dec
pusha
mov
enter
fisubl
mov
imul
mov
push
pop
adc
xchg
adc
sub
shlb
xchg
and
jne
xchg
je
xchg
push
or
cltd
imul
mov
ljmp
ss
cltd
test
movsb
push
mov
ror
mov
stos
add
adc
adc
stc
loopne
in
jbe
loope
push
call
dec
scas
sub
cmp
push
pop
mov
xor
sahf
cmp
dec
sbb
js
outsb
rorl
into
adc
imul
add
add
arpl
jnp
sbb
push
xor
and
add
add
add
adc
js
and
mov
pop
cmpsb
pop
push
sbb
cmp
cmp
movsb
adc
jmp
jnp
arpl
int3
xor
pushf
je
and
and
rclb
cmp
icebp
mov
imul
xchg
ficomps
lea
mov
lock
xchg
and
jae
in
arpl
sbb
hlt
push
ljmp
movzwl
sahf
cmp
inc
mov
pop
clc
es
pop
push
insl
mov
add
fs
or
inc
xchg
lcall
xchg
arpl
into
sahf
push
clc
mov
int
stc
inc
push
lret
sub
push
jge
push
adc
cmpb
lcall
add
dec
pop
cwtl
addr16
or
mov
or
jg
outsb
mov
lahf
jl
rolb
lahf
sub
add
add
aas
or
mov
into
xchg
cwtl
mov
add
add
push
sbb
je
cs
iret
adc
fsubrs
mov
sub
and
mov
xchg
dec
mov
daa
mov
xchg
push
fld
mov
out
xchg
mov
outsb
mov
xlat
mov
xor
inc
pop
fcompp
popf
mov
lahf
call
fsubrs
push
push
fs
fiadds
inc
insl
lods
aaa
xchg
jb
lds
inc
push
cmp
pop
cmpl
inc
sbb
and
jno
and
pop
jmp
iret
mov
add
cmpsl
mov
daa
mov
mov
ja
inc
mov
mov
popa
cld
jno
aam
arpl
int3
movsl
xor
mov
loop
cmpsl
mov
push
roll
push
insl
fwait
lock
aam
inc
cmpsb
jb
fwait
jne
popf
shlb
adc
jne
cmp
adc
mov
leave
push
cli
xor
into
out
add
mov
add
add
insb
fidivl
bound
push
data16
mov
add
add
and
aad
dec
stos
adc
xchg
jecxz
mov
iret
dec
lock
dec
shrl
inc
fisttpll
adc
imul
loopne
mov
das
xchg
loope
lods
into
xor
jno
mov
loopne
or
dec
push
jne
pop
jb
xor
sbb
arpl
jbe
ljmp
xchg
test
push
fisttpl
xor
loope
cld
cmc
pop
inc
shll
icebp
faddl
ficoml
mov
jp
in
mov
negl
imul
cltd
adc
cmpsb
push
cmpsl
popa
mov
cltd
sub
popa
cmc
mov
push
fmulp
aas
sub
sub
pop
xchg
jl
jg
rcrl
sub
cmpsb
mov
mov
mov
adc
stos
xchg
lahf
pop
scas
xor
cs
cmpsb
gs
cmc
jbe
rolb
orl
mov
test
push
xorl
cld
ds
out
in
addr16
pop
mov
xchg
cmp
mov
jns
pop
aaa
mov
add
add
inc
xchg
xchg
ret
xchg
dec
and
lret
lds
mov
and
mov
je
cli
pop
fisubrl
dec
out
loop
jo
fidivl
push
imul
ss
cli
iret
pop
push
aam
push
sub
lock
jne
fsts
cld
dec
push
rep
int
push
xor
mov
popa
movsl
push
sbb
mov
stos
ror
mov
adcl
aad
mov
leave
mov
adc
pop
imulb
lods
push
lods
or
jae
inc
and
push
daa
mov
popa
pushf
les
mov
lahf
andl
push
pop
pop
cmp
inc
or
iret
and
in
xor
fists
sbb
pusha
dec
adc
pop
mov
sbb
jns
pusha
clc
add
loopne
fcmovu
add
inc
sub
sahf
stc
xchg
push
out
pop
adc
cmpl
outsb
pop
test
cmp
or
add
add
int
fstp
iret
push
cmpsb
fadd
dec
imul
stos
mov
add
add
add
mov
test
test
sub
stos
sub
dec
rcrb
lea
sub
scas
pop
fdivrl
jle
lea
out
mov
test
dec
shl
cmp
mov
std
push
sub
sarb
lods
mov
and
or
mov
inc
dec
imul
cmp
es
add
jmp
xor
clc
jns
pop
inc
pusha
nop
fs
in
adc
inc
jecxz
sahf
lret
inc
inc
lcall
sub
mov
mov
call
popf
dec
pop
jae
and
cmpsb
xchg
jp
lret
push
mov
xor
adc
std
rolb
jecxz
fidivrl
repz
je
adcl
sbb
push
clc
cmp
int
sbb
adc
stos
imull
jl
cwtl
jo
push
mov
sub
mov
lea
pop
mov
or
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
stc
mov
xor
movsl
xor
mov
mov
in
mov
dec
outsb
lret
jge
jl
push
push
shlb
lret
lret
mov
pop
add
nop
xor
xor
aad
mov
in
sub
sbb
lds
inc
adc
sbb
rolb
movsl
cmpl
inc
or
adc
imul
mov
mov
jae
hlt
cmp
mov
sub
cmc
mov
xor
push
popl
jle
loope
inc
mov
xlat
xchg
or
add
xchg
shll
popl
push
dec
enter
js
pop
add
leave
inc
mov
out
test
shrl
into
inc
cli
cmp
push
adc
scas
fwait
pop
cltd
mov
fcmovbe
test
mov
inc
or
xor
xchg
jne
lret
jno
mov
push
add
sub
lods
les
jnp
mov
icebp
xor
push
add
add
inc
ds
add
mov
pop
sub
push
xchg
subb
or
movsb
test
push
test
stos
or
xchg
mov
mov
and
sub
test
dec
adc
out
xchg
cmpsl
cmc
or
push
shlb
mov
and
enter
ds
dec
mov
jmp
ret
jae
repnz
jmp
push
mov
scas
push
js
lretw
push
push
push
rclb
cmp
jae
fadds
add
aas
push
or
push
jg
int
ljmp
jecxz
or
dec
add
cwtl
mov
repz
or
pop
push
ret
leave
fwait
jp
int
push
dec
stos
push
psubsw
xchg
xor
pop
cld
pop
andb
push
mov
dec
popf
jl
xchg
and
mov
pop
dec
out
inc
dec
inc
or
test
fcomps
add
lea
add
add
cmp
push
xchg
adc
lods
xchg
pop
push
pop
outsb
roll
jb
xchg
andb
lds
fisubrs
dec
xchg
int3
pop
mov
inc
sarl
xor
repnz
mov
sbbb
stc
cld
sub
adc
xorl
mov
shlb
aad
outsl
inc
and
in
xchg
jno
xchg
neg
movsb
pop
or
stc
mov
sahf
das
clc
insl
xor
in
add
pop
je
aad
pop
pop
lcall
movsb
push
out
insb
insb
sbb
mov
jne
sub
stos
or
inc
push
add
je
xchg
or
xchg
mov
or
stc
jl
lods
pushf
popf
xor
leave
loope
jbe
pusha
mov
pop
icebp
mov
mov
push
or
aaa
sbb
ja
mov
fcoms
xchg
sub
iret
jne
dec
pop
jns
loope
cmpsb
ljmp
dec
mov
add
les
add
jle
and
int3
cmc
clc
xor
jl
pop
fisttpll
rcll
outsb
lock
aad
les
sbb
cmp
aas
pop
adc
jge
in
lds
add
movsl
loope
enter
arpl
add
in
jge
cld
cwtl
std
fsub
mov
and
insb
sub
cmpsl
pop
xchg
out
inc
push
fwait
pop
xchg
xchg
mov
sub
or
xchg
sarb
sbb
dec
fnsave
fsubl
pop
sbb
xchg
mov
insl
jg
jo
mov
mov
push
cli
ja
jg
push
pusha
sbb
stos
pop
loopne
shrb
or
inc
inc
iret
test
nop
out
mov
push
ljmp
fwait
add
pop
xchg
jg
sub
rcll
xchg
fisttpll
subl
out
lea
mov
sub
add
or
rcrl
xchg
push
leave
fdivrs
sub
mov
lcall
add
aaa
shlb
cmc
div
testl
dec
enter
add
add
pop
xchg
adc
int3
ljmp
inc
push
nop
adc
sbb
mov
add
push
or
adc
data16
sub
or
shlb
arpl
ja
insl
mov
call
mov
scas
rcrl
mov
lods
mov
popl
xlat
insl
std
or
lds
pushf
lret
or
scas
push
push
pop
gs
cwtl
popa
mov
fs
inc
jmp
enter
and
arpl
inc
mov
cwtl
aas
shrl
out
fdivrp
lods
or
ficomps
lahf
mov
lret
imul
push
and
pop
dec
inc
adcb
mov
jnp
mov
mov
in
test
aam
cmp
sub
mov
add
dec
adc
push
jae
into
pop
push
push
adc
jp
jge
pop
push
nop
push
sahf
rcr
pop
adcb
pop
mov
add
add
js
ja
ror
std
mov
jns
daa
mov
into
jno
aam
xchg
jp
mov
mov
and
jo
cltd
test
int3
cli
sahf
add
sub
cli
popf
iret
das
sbb
sub
popa
push
ficoms
ss
mov
mov
xchg
and
xor
ja
or
sub
jnp
ret
xchg
xchg
repnz
addr16
push
addr16
push
mov
popa
fcmovnb
mov
flds
sub
cwtl
ljmp
mov
int
scas
icebp
aam
xor
dec
dec
les
add
mov
clc
out
loop
bound
ljmp
adc
mov
xchg
inc
fadds
and
daa
mov
fistl
movsl
adc
xchg
push
jg
jo
aad
jecxz
and
jo
xor
lods
fists
cmc
test
fst
dec
cmp
pop
jno
es
pop
mov
add
add
arpl
cmpsb
jcxz
fimull
rclb
add
xchg
cltd
fnstcw
lods
cmc
mov
pop
test
mov
jmp
inc
arpl
lahf
cld
data16
out
mov
addr16
test
or
xchg
jb
xchg
repz
mov
mov
movsl
cltd
ret
in
and
daa
cwtl
xor
mov
mov
popa
pop
add
push
adc
xchg
push
cmpsb
dec
mov
inc
stos
imul
cmpl
fistl
and
icebp
adc
xor
mov
sbb
idivb
aam
aaa
and
cld
arpl
inc
cmpsb
jne
aad
xchg
int
push
adc
iret
push
or
or
xchg
outsl
push
mov
cmp
fwait
xchg
mov
out
mov
fisubrs
lahf
xchg
jnp
int
dec
scas
push
jns
stos
or
inc
xchg
insl
adc
iret
stc
test
pop
or
fildl
sbb
clc
jnp
jg
in
cli
enter
in
loope
aam
add
add
add
jns
sub
pusha
adcb
je
or
loope
aaa
outsb
fldcw
dec
repz
ljmp
out
xor
mov
cli
arpl
cmp
gs
pusha
repz
rcrb
insb
dec
push
push
jno
lret
es
mov
lret
push
int
adc
into
mov
adc
jo
out
mov
lods
rcll
ja
repz
imul
cmpsl
mov
rol
pop
inc
in
jle
fstp
mov
jne
out
out
mov
and
sbb
push
arpl
xor
mov
inc
out
xor
test
lahf
ret
flds
sbb
inc
push
xchg
enter
dec
mov
and
sbb
jmp
inc
xchg
lds
mov
xchg
cltd
or
xor
pop
xchg
flds
lock
xor
sub
rcll
push
loope
out
jp
ljmp
cld
gs
mov
fcoms
add
jns
nop
ror
inc
scas
das
imul
or
jmp
pusha
adc
int
das
dec
dec
mov
sti
adc
add
dec
sub
xchg
in
mov
pusha
cmp
adc
pop
mov
and
subb
outsb
lret
ja
outsl
pop
data16
mov
ljmp
add
mov
xor
lret
fxch
lahf
pop
or
adc
push
scas
in
xchg
stos
cld
je
push
xor
push
sahf
inc
xchg
mov
imull
call
dec
dec
sbb
push
lcall
jns
je
outsb
aad
or
testb
mov
repz
inc
xchg
cmp
ss
and
aam
xor
test
dec
push
jb
insb
add
push
inc
mov
pop
pop
lcall
jg
pop
push
icebp
sub
imul
out
mov
and
outsb
or
inc
fimull
jmp
lods
inc
jl
sar
std
jle
pop
popf
scas
cmc
jmp
in
xchg
add
add
add
adc
jp
neg
xchg
ficoms
sub
pop
inc
push
push
sub
jb
mov
shlb
adc
aas
mov
xchg
sbb
and
add
jmp
mov
adc
popa
mov
pop
add
call
test
mov
leave
cmp
cwtl
xor
xchg
stos
lods
pushf
in
shlb
sub
and
popf
mov
sbb
pop
jbe
mov
adc
negl
or
addr16
stos
lret
xor
lahf
add
lahf
mov
clc
shrl
outsl
push
dec
mov
xchg
testl
jo
cmpsl
enter
scas
cmp
dec
jnp
mov
incl
test
cmpsl
lds
jmp
dec
sub
and
pop
mov
mov
popa
pop
xchg
jg
sbb
jle
cmp
cmp
cmp
in
pushl
cmp
xchg
add
add
add
mov
sbb
cmp
pop
ljmp
es
mov
leave
es
pop
loope
test
cmp
fs
insl
xor
in
xor
mov
inc
jmp
or
loopne
cmp
mov
je
cmp
mov
jns
mov
loop
push
out
push
arpl
or
nop
push
addr16
cmpsb
sub
sub
jbe
lret
xchg
loop
add
add
sbb
sub
je
xor
jg
xchg
lret
shll
ljmp
inc
or
mov
lods
xorl
in
lods
mov
push
sub
mov
jl
lods
adc
pop
out
or
dec
stos
push
inc
daa
andb
or
jo
in
pop
jnp
pop
adc
adcl
push
fwait
and
popa
mov
xorl
in
add
add
add
push
lahf
cli
cmp
fnstcw
outsl
pop
adc
push
inc
fbstp
pusha
int3
mov
push
add
cltd
jecxz
mov
push
mov
jle
outsl
dec
xor
or
sbb
jo
push
in
inc
dec
cs
andb
xor
setae
pop
hlt
out
loopne
mov
popf
imul
push
pop
xor
lahf
pop
lock
inc
cmpsl
push
dec
mov
push
xchg
dec
xlat
daa
xchg
inc
pop
push
jns
or
jle
push
inc
or
imul
or
cld
out
mov
sarb
icebp
scas
cmpsl
xchg
jecxz
jo
ja
cli
adc
sub
mov
cmc
mov
in
pusha
mov
sub
jl
int
shll
dec
sub
pop
xchg
dec
ficoms
in
fbld
sub
sub
shll
and
push
and
xlat
aas
dec
sbb
or
call
add
add
aas
jmp
pop
sub
adc
fmull
imulb
inc
mov
dec
jp
or
cmp
fsub
mov
lret
lret
sub
sub
dec
dec
cld
xchg
or
cltd
sbb
loopne
test
mov
stc
sbb
imul
push
std
sti
xlat
pop
imull
js
cmp
ja
mov
jp
sbb
repnz
cmp
mov
inc
push
dec
cmp
fwait
cmp
push
sbbl
mov
and
xor
adc
mov
lods
or
jl
cwtl
mov
sub
xor
cltd
adcb
xor
lret
mov
ja
int3
in
mov
sub
push
enter
scas
inc
mov
cmpl
xor
mov
das
adc
lods
jle
pop
mov
sarb
and
rorb
imul
outsl
vmwrite
or
cwtl
add
add
add
js
cmp
cs
adc
gs
ss
repnz
cmp
sub
inc
dec
mov
jle
push
shlb
adc
rolb
adc
add
outsl
and
testl
xchg
xchg
cmp
insb
pop
jge
loope
lret
xchg
mov
outsb
cmpsb
cmp
cmpsb
jns
pop
push
sub
inc
ljmp
jg
mov
xchg
mov
mov
pop
sahf
repz
movsb
inc
daa
into
or
xor
jne
push
mov
stc
cmp
ja
jmp
jle
mov
xlat
rorb
dec
call
xor
jae
mov
jo
mov
stos
xchg
sub
push
xchg
jge
jmp
adc
imul
enter
dec
cld
mov
dec
jp
mov
adc
lahf
fstpl
ds
pushf
repnz
addr16
arpl
sbb
add
add
lret
sbbl
popl
pushf
pop
lock
add
add
add
in
mov
imul
aas
cmp
inc
sbb
adc
mov
mov
ret
cwtl
inc
xor
inc
jge
pop
xchg
imul
in
repnz
repnz
pop
ljmp
adcl
push
ljmp
sbb
lea
fwait
inc
fs
out
inc
jmp
jbe
fwait
mov
sbb
inc
mov
fisttpll
sub
bound
movsl
arpl
mov
jge
das
jl
loope
cmp
ucomiss
adcl
mov
dec
jnp
je
xchg
cs
fdivp
iret
and
sub
inc
shr
mov
ds
jo
stos
fsubr
cmp
pushf
adc
pop
shr
into
and
add
arpl
jae
mov
jo
addl
rcrl
or
push
xchg
dec
ljmp
lcall
add
imul
movsb
and
xor
sub
hlt
lcall
pop
push
xor
les
sbb
dec
into
inc
jbe
bound
mov
lahf
pop
add
push
cmp
dec
push
adc
out
stos
icebp
adc
push
or
aad
insb
lret
pop
mov
cmpsl
or
lds
add
cmp
cmpsl
xchg
mov
ja
mov
or
lods
shll
in
xchg
inc
adc
in
and
xor
mov
xchg
add
in
adc
movsb
fdivs
stc
add
or
lea
mov
dec
repnz
or
fadd
lret
or
or
inc
and
iret
pop
add
or
cld
loopne
cmp
test
adcl
pusha
jmp
js
mov
orl
test
imul
xchg
cwtl
sub
scas
xchg
xor
arpl
dec
mov
fsts
push
ds
imul
add
mov
jge
jg
ljmp
in
lahf
mov
test
dec
clc
fwait
add
add
add
cs
add
xchg
pop
mov
ffree
pop
in
xor
mov
sub
cwtl
mov
pop
shl
mov
xchg
cmpsb
jns
dec
push
lret
fistl
cli
pop
insl
data16
aad
xor
push
das
mov
repnz
pop
scas
repz
pop
and
fld
lods
cmp
out
dec
xor
jns
inc
inc
cmp
rcrb
hlt
les
mov
cmp
call
pop
mov
and
ds
aam
pop
stos
jbe
xor
jg
faddl
lods
ja
push
lods
sbb
xor
das
scas
pusha
adc
js
inc
xchg
xchg
adc
add
nop
or
jl
rolb
jbe
sub
outsl
mov
stos
popa
std
inc
rolb
mov
adc
mov
dec
mov
push
sbb
ss
jp
add
add
ja
out
inc
sub
or
adc
add
add
out
popf
push
repnz
lret
pop
into
mov
cmc
sahf
cmpl
into
int3
or
test
xchg
dec
inc
sbb
shlb
mov
mov
enter
dec
das
or
xchg
rcrb
jmp
xor
movsb
movsl
mov
pop
mov
les
out
movb
jno
in
fxch
push
roll
pop
mov
mov
scas
jmp
jg
cmpsb
sbb
jo
andb
sub
pop
mov
cmp
jg
xchg
sub
push
cltd
out
sbbb
outsb
lock
dec
xor
sbb
cmpsb
add
push
mov
pusha
lret
in
mov
stc
and
call
dec
push
cmc
daa
xchg
sub
sbb
insl
adc
lock
push
sbb
aas
mov
push
mov
sub
cmp
fisubrs
dec
loop
test
mov
cld
mov
add
add
adc
jb
sub
fdivl
add
leave
pop
jle
ss
mov
loopne
lcall
cltd
clc
mov
imul
jnp
add
xchg
pop
nop
mov
mov
incl
sbb
dec
push
outsb
pop
std
adc
cmpsl
je
jp
repnz
mov
mov
pop
dec
jmp
xchg
jp
sbb
xor
or
xor
cltd
push
insb
xchg
mov
insl
sahf
stos
test
fistps
lock
test
std
cmp
iret
and
or
sbb
dec
sarl
pop
jge
xchg
xchg
push
nop
jl
pop
imul
push
incl
push
out
push
mov
stos
add
mov
insb
cmp
hlt
cmc
pop
repnz
inc
shl
inc
test
dec
dec
ret
lahf
cli
pop
push
filds
sub
dec
xchg
push
sbb
pop
fdivl
sub
add
add
mov
repz
repz
xchg
add
add
and
add
shrb
add
loop
jp
or
xor
imul
jmp
xchg
rcrl
xor
pop
pop
cld
out
addr16
sbb
aaa
mov
popf
jae
mov
jmp
sahf
es
xchg
jnp
cmp
jge
mov
in
faddl
push
jecxz
and
inc
mov
cmp
in
sub
xchg
push
shlb
mov
sbb
movsl
xor
addr16
ljmp
incl
jmp
shlb
repnz
mov
inc
mov
lock
mov
gs
aaa
fmull
sbbb
mov
jbe
outsb
add
cmp
or
scas
insb
mov
bswap
cmp
dec
fs
jp
jne
js
popf
mov
xlat
jns
jo
dec
lods
jmp
movsb
mov
mov
inc
inc
add
mov
add
sbb
int
inc
jo
subb
cmp
jge
test
sub
insb
adc
shll
fwait
jle
jmp
loope
or
cs
daa
pop
jb
arpl
outsb
es
gs
fldt
scas
or
bound
test
jge
pop
leave
notl
out
and
hlt
xchg
lea
or
movsl
xchg
push
pop
mov
in
and
outsl
or
jl
jg
push
fcoml
icebp
xor
push
inc
push
out
call
fistps
pop
push
lods
out
pop
cmpsb
mov
push
inc
sbb
or
lods
cmp
cli
sarw
aas
pop
enter
add
xor
mov
in
dec
movsb
stos
push
outsb
mov
sbb
push
pushf
mov
or
nop
sbb
jnp
leave
orl
mov
in
repz
adc
aad
or
dec
lret
jo
lods
or
shlb
xchg
push
xor
add
add
std
inc
mov
pop
decb
add
add
add
sub
into
test
mov
adc
xchg
cli
cmpsb
stc
loop
add
mov
dec
xchg
mov
add
out
loope
sbb
push
daa
test
stos
faddl
repnz
push
inc
jge
jae
fsubl
mov
xchg
in
addl
ja
rcll
add
inc
push
push
sub
xchg
jae
stos
fsubrl
lock
mov
dec
shrb
mov
in
loopne
movsl
inc
popf
dec
aam
arpl
xchg
jnp
movsl
xor
push
inc
xchg
pusha
arpl
lret
mov
pop
sub
mov
jg
stc
sbb
mov
and
jno
xchg
mov
loope
push
gs
mov
pop
mov
push
pop
fistpll
stos
jecxz
stc
pop
pusha
xor
jnp
mov
imul
data16
lahf
cld
fsubrs
xor
jmp
add
push
inc
fdivl
push
dec
mov
adc
add
cli
sti
xor
jg
or
fsub
xor
jne
insl
and
rcr
or
inc
jmp
cli
xor
add
aad
scas
lods
aam
lahf
cmp
mov
scas
das
xorl
mov
enter
js
stos
jg
stc
push
sub
and
loopne
xor
mov
test
cli
rcrb
es
add
aas
lret
stc
in
push
fsubrs
dec
and
cwtl
mov
or
jge
sub
xchg
std
fcoms
mov
ret
jecxz
sbb
shlb
push
test
dec
push
addr16
pop
outsl
jecxz
sub
mov
sbb
mov
lods
leave
xchg
mov
hlt
js
fwait
adc
pop
shll
iret
sub
and
mov
mov
cld
movsl
testl
cmp
adc
mov
sbb
nop
inc
jp
mov
add
loop
mov
inc
xchg
inc
push
imul
jg
dec
pop
and
and
shll
fs
push
testb
lods
sub
cmp
sub
inc
daa
push
in
xchg
xchg
popa
sbb
jp
mov
xchg
mov
mov
or
repnz
mov
add
jecxz
or
mov
outsl
aam
adcl
push
push
repz
mov
or
loop
in
loope
add
into
sbb
inc
icebp
les
ja
outsl
xor
mov
rep
imul
and
lcall
adc
les
mov
pop
fdivl
inc
mov
dec
push
fdivrl
xor
shll
into
iret
addr16
fists
loopne
add
cmpsl
mov
mov
jge
and
push
xor
into
cmpsb
and
push
pop
mov
cmpsl
add
scas
dec
in
push
mulps
adc
out
clc
mov
mov
push
pop
test
stos
hlt
jmp
cmp
jbe
mov
add
add
add
xchg
imul
pusha
mov
into
aam
mov
jns
pop
daa
push
xor
pop
dec
scas
cmpsl
jecxz
fs
and
daa
scas
test
sarl
out
addr16
out
sbb
fldenv
mov
vpsrlvq
jg
dec
loope
decb
rep
fs
xchg
xchg
xchg
mov
mov
mov
pop
je
aas
inc
nop
mov
into
stos
pop
mov
in
imul
testb
mov
xor
xor
ljmp
enter
test
negl
mov
outsl
xchg
jo
push
jns
lcall
pop
jmp
jbe
xor
push
fcmovnbe
add
in
jle
and
sbb
jnp
adc
insb
popa
in
dec
push
loopne
push
jno
out
int3
ds
pop
lcall
lock
pushf
int3
sbb
push
repz
xor
scas
add
out
xlat
out
jg
in
xor
fstps
and
add
add
adcb
or
out
inc
mov
xor
cmpsb
jg
ficompl
sub
xchg
cmp
lods
sbb
hlt
sub
push
xchg
add
fsubs
xchg
lds
pop
cld
fdivl
std
lods
outsb
inc
sub
adc
andl
sahf
add
xor
insl
mov
pop
movsb
lock
add
or
gs
lock
les
out
lock
cld
jns
sub
sbb
pop
addl
aam
cli
inc
scas
cmpsl
adc
insb
les
inc
fwait
jmp
and
pop
cmpsb
loop
sub
dec
cmpsb
mov
arpl
das
ret
rorb
stos
movsb
sbb
or
add
push
xchg
or
and
sbb
push
add
cmpsl
out
lock
mov
in
add
out
xchg
cmp
mov
pop
fnsave
int3
pop
jg
sbb
pop
fbstp
fldl2e
mov
cmpsb
add
add
add
pop
repnz
and
xchg
xchg
push
out
jae
mov
addr16
hlt
xchg
jg
mov
mov
jmp
leave
jle
cwtl
or
cld
rorl
rep
add
sub
and
inc
cltd
int
lcall
and
pop
mov
push
ffreep
ret
xchg
jo
outsl
sahf
mov
mov
xchg
sub
sbb
cmp
fisttpll
data16
cmp
pop
inc
cmp
xchg
fs
mov
bound
outsb
inc
repnz
mov
lahf
stos
mov
mov
cmp
jb
xchg
ret
inc
mov
jl
aaa
mov
mov
mov
push
dec
inc
jo
lods
out
mov
jns
das
mov
scas
or
mov
shl
sub
adc
int
dec
mov
aaa
shrb
and
xchg
test
mov
lcall
std
inc
jne
cmpl
and
add
add
add
adc
imul
sbb
jmp
jp
out
sub
add
cmp
mov
test
xor
cmp
cld
cmpsl
or
ljmp
mov
int
stos
arpl
cli
sahf
mov
cmp
insb
mov
push
mov
mov
or
insb
push
xchg
movsl
jecxz
mov
stos
inc
cmc
and
imul
outsl
pop
lds
not
push
jl
add
cmp
shl
int
lds
mov
je
xchg
seta
ds
mov
das
mov
sti
jl
sub
stc
push
jmp
push
adc
pop
sbb
shlb
ja
xor
fldz
inc
sbb
fldl
cmp
orl
cmc
mov
and
ja
shll
fistpl
mov
pop
cld
xor
lret
jnp
sti
jmp
push
mov
idivb
test
add
add
adc
pusha
fucompp
or
cmp
mov
fistpll
nop
cmpsl
inc
test
sub
fs
hlt
out
outsl
popa
aam
lds
add
clc
dec
std
clc
add
inc
cli
push
daa
add
fadd
daa
adc
out
dec
mov
fucomi
xchg
or
add
sbb
mov
jbe
lods
push
aam
and
mov
sarb
cmp
dec
xchg
dec
sarb
add
and
out
jo
sbb
jmp
adc
sub
cmp
fdivs
loop
jnp
test
and
cmp
inc
outsb
mov
mov
jns
pushf
sbb
iret
pop
out
mov
xor
jmp
or
nop
repz
mov
mov
pop
mov
and
sub
push
xor
or
pop
xchg
nop
test
insb
jno
and
dec
into
lds
mov
jecxz
lock
jl
sub
add
add
add
ret
jbe
das
shrl
dec
jle
or
jbe
mov
ljmp
aas
push
sub
fmul
addr16
or
fmul
pop
xchg
inc
lcall
daa
ds
test
inc
and
fwait
xchg
loopne
xchg
subl
adc
push
add
add
into
pop
cmp
or
sbb
jmp
lret
push
xchg
cmp
mov
repnz
test
mov
icebp
test
cmp
push
xor
fsubrl
lahf
sub
inc
scas
jle
push
divb
inc
shl
call
andl
and
cmp
leave
push
fucomp
andl
xor
add
push
pop
jo
jns
movsb
add
sbb
aas
mov
mov
inc
push
daa
mov
loope
xchg
push
fld
xor
in
add
add
cld
mov
leave
push
cmp
add
add
add
std
dec
out
pop
mov
test
shrb
inc
fildll
std
and
jns
aas
jp
test
jb
ret
sbb
fnstenv
cmp
cmc
adcb
fimuls
dec
cmp
push
adc
clc
and
jecxz
dec
push
pop
lcall
inc
insb
adc
pop
dec
inc
or
loopne
pop
arpl
sarb
xchg
imul
mov
jns
xchg
fcmove
outsl
ret
enter
lods
mov
fists
add
or
xlat
fmul
sti
pop
test
add
outsl
pop
dec
test
lret
aas
dec
mov
out
out
fadds
and
aam
push
mov
jle
sbb
mov
out
in
jmp
scas
push
imul
sbb
inc
stos
stos
sub
or
lahf
stos
repnz
mov
dec
das
pop
out
cmc
mov
xor
stos
add
add
add
xchg
xchg
pop
out
js
or
mov
fidivl
std
repz
ljmp
in
idivb
popf
jns
int
and
jecxz
mov
test
push
movsb
xor
or
movsl
cmp
ljmp
jno
jno
aaa
cmpl
sti
mov
iret
and
test
or
sbb
or
inc
lret
es
or
adc
sahf
stos
fcoml
insl
cld
dec
adc
sbb
and
addr16
jno
sbb
into
add
inc
mov
sub
lods
sbbb
pop
fsubrs
adc
out
pop
mov
mov
call
dec
mov
mov
dec
addr16
jb
mov
and
repz
dec
pop
dec
sub
cmp
loope
testl
pop
sti
push
stos
mov
dec
and
mov
lods
xchg
pop
mov
pushf
sub
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
and
inc
cmp
add
add
daa
fstps
or
push
ds
pcmpeqw
icebp
xor
sub
shr
repz
mov
adc
arpl
adcb
push
ret
in
pusha
xchg
test
sub
cltd
divl
lds
cmp
test
sbb
push
push
push
movsl
and
dec
sub
xor
jne
ret
jno
push
sbb
jecxz
or
mov
imul
aam
lret
mov
xor
std
push
cmp
xor
push
stos
xor
adc
or
jg
pusha
inc
push
data16
dec
rcrl
cmp
addr16
faddl
xor
sub
xchg
xor
stos
pop
pop
or
loopne
lods
sub
xor
pop
push
lcall
das
cltd
adc
icebp
scas
add
adc
fidivs
loop
ljmp
adc
inc
mov
add
add
xchg
mov
test
jmp
sub
jmp
push
shrb
push
mov
ljmp
xor
pop
xchg
js
push
scas
mov
shl
lock
setle
fisubl
test
add
or
mov
inc
add
mov
adc
test
mov
icebp
jbe
lahf
mov
xchg
xorl
mov
cmp
out
jns
and
or
cwtl
pusha
mov
pop
dec
cld
push
or
dec
nop
fmuls
push
scas
fnsave
out
aaa
into
loope
sti
mov
xchg
int
lods
pop
lret
mov
outsb
out
pop
fwait
mov
cmp
adc
push
movsb
repnz
push
xchg
or
xchg
dec
jge
pop
int3
sub
outsl
or
test
mov
cld
dec
mov
and
popf
test
push
xchg
jg
jmp
std
mov
imull
inc
scas
add
add
add
scas
push
arpl
lret
cli
std
ja
push
aam
or
xchg
push
and
sub
mov
cld
xor
push
mov
sub
mov
stc
movsb
mov
std
mov
xchg
pop
push
sbb
jns
mov
movsl
pop
popa
pop
lahf
stos
and
aad
sub
into
sub
sbb
inc
pusha
jecxz
mov
jg
sbb
push
mov
xchg
inc
sub
lret
xchg
loopne
stos
xchg
leave
movsl
adc
xchg
gs
push
cmp
pop
fimull
out
ljmp
cmp
rorl
cli
sbb
into
mov
adc
inc
or
lods
mov
imul
pop
dec
mov
negb
aam
pop
popa
jmp
fincstp
cwtl
loope
jle
inc
fistl
cmp
xor
pushf
es
mov
outsl
or
repnz
add
add
xor
inc
mov
clc
sahf
inc
scas
add
add
add
test
push
dec
or
xor
xor
xchg
cwtl
xlat
xchg
inc
test
cli
xchg
out
test
mov
jae
xchg
pop
dec
xchg
add
cmp
mov
ljmp
ja
push
cmc
and
js
adc
fnsave
in
sub
cmp
pop
cmp
movsl
cmpsl
add
cmp
push
sbb
jg
push
lods
xchg
mov
fcompl
not
add
lods
mov
fadds
dec
icebp
aaa
push
pop
or
jno
adc
push
mov
fisubrs
pop
push
jno
push
push
jle
aad
mov
rorb
jmp
push
dec
scas
jl
adc
jge
das
lcall
in
dec
ret
mov
nop
leave
dec
icebp
sub
sub
mov
push
cmpb
and
pop
xchg
scas
sub
or
orl
test
add
add
xor
cmp
inc
call
add
add
add
push
lods
sbbl
lds
lcall
mov
push
adc
add
stc
dec
insb
pop
mov
arpl
cmp
inc
repz
xor
ret
sub
jne
mov
insb
add
aad
loope
out
mov
out
outsl
iret
xor
shll
jp
sub
aaa
ss
inc
daa
popa
inc
or
push
lret
rcr
sbb
inc
jmp
inc
pop
pop
sbb
pop
test
js
stos
xor
fs
mov
xchg
cli
adc
xor
cmpsl
lock
xor
xor
subb
leave
mov
pop
leave
mov
test
test
pop
sub
push
div
stos
xor
aam
lret
in
cmpsl
inc
dec
jl
mov
sub
or
outsl
jne
ds
es
loope
cwtl
xchg
xlat
ret
xor
pop
push
mov
mov
daa
dec
cmpsb
js
pop
jle
push
into
pusha
or
adc
add
es
les
mov
arpl
or
add
add
push
sar
push
ja
in
pusha
mov
sub
xor
adc
jmp
fsubl
sahf
cmp
pop
inc
pop
addl
push
jne
fldenv
loope
jno
push
sub
or
sbb
addr16
add
scas
sub
ljmp
dec
ret
sbb
xor
push
ja
lret
fistps
ror
scas
cmp
sti
xchg
jb
pop
xor
lds
xchg
in
adc
cmp
testl
loopne
fcomps
shll
push
je
scas
das
aad
lret
popl
cmpsl
jne
cmpsl
or
rcll
aas
lahf
clc
mov
mov
shl
addr16
jg
dec
or
lret
cmc
lds
jecxz
js
mov
lcall
add
inc
adc
stc
jmp
leave
sbb
dec
adc
xor
into
pusha
cld
jl
cmp
inc
mov
stos
lahf
orb
add
add
clc
pop
stc
out
push
pop
bound
fists
add
add
add
clc
inc
popa
sbb
xorb
cmp
mov
jbe
mov
lret
rclb
adc
shlb
push
sub
and
jl
mov
jg
push
pop
repnz
adc
add
cmp
sbb
sbb
arpl
sbb
or
stos
andl
dec
lret
lea
pop
scas
add
and
sahf
idivl
mov
adc
das
mov
mov
je
aad
popa
push
rcrb
xchg
stc
mov
inc
push
jns
test
sub
je
or
mov
push
adc
cmp
out
jbe
movsl
pop
loopne
dec
xchg
mov
xor
sahf
push
mov
sub
repnz
cltd
fdivs
sbb
inc
not
and
jg
inc
and
iret
iret
mov
pop
mov
xor
stos
insb
imul
and
sbb
add
lds
cli
lcall
push
push
mov
add
add
arpl
testb
mov
xchg
and
and
pop
adc
addr16
push
dec
cmp
dec
or
xchg
cmpsl
pop
dec
setp
outsl
jle
pop
adc
lods
xchg
test
adc
gs
btc
mov
lret
pop
xor
loop
imul
test
das
stos
aad
lods
sbb
popa
sbb
jecxz
mov
fisubrs
mov
idivb
add
inc
hlt
mov
out
pop
dec
test
int3
jo
xlat
push
mov
js
out
adc
mov
subl
dec
sbb
mov
fistpll
xor
jb
outsb
push
out
cltd
push
in
jnp
dec
sbb
dec
jmp
aaa
push
xchg
fidivs
push
jno
es
lahf
into
xor
jg
xchg
mov
fs
adc
enter
pop
cmpb
inc
mov
xor
xchg
add
add
jne
mov
int3
insb
lret
mov
add
add
dec
mov
and
push
mov
dec
lret
push
sub
jne
mov
cmp
xor
push
xor
rcll
les
dec
imul
fsubl
sahf
das
imul
sti
ds
mov
mov
lods
push
cmp
or
popf
mov
add
jge
push
out
aas
mov
ljmp
into
test
minps
repz
and
sti
mov
dec
adc
mov
xchg
jb
stos
addr16
lods
roll
inc
jnp
dec
ja
enter
cld
fwait
pushl
in
push
rorb
mov
mov
or
jno
ja
into
loop
mov
add
scas
push
in
int3
daa
xchg
lcall
push
jl
sbb
push
sbb
inc
outsb
pop
xchg
dec
mov
test
xor
xchg
cmp
hlt
popl
add
dec
js
jnp
dec
pop
pop
sbbl
fstp
rorl
sbb
pop
mov
add
add
fsub
add
adcl
add
outsl
stc
in
mov
mov
mov
jge
jne
mov
imul
sbb
test
pop
dec
out
jmp
push
adc
adc
jbe
xlat
pop
test
dec
xor
into
sti
cmc
pop
mov
ficoml
xchg
xchg
jne
roll
mov
loopne
dec
cld
jp
bound
lods
pop
sbb
dec
out
fsubrp
xlat
decb
subb
and
fdivs
mov
std
cmp
jle
mov
jb
incl
jno
dec
dec
push
and
jmp
mov
sbb
insb
call
ret
jne
cmpsb
lods
movsb
push
pop
in
add
push
lods
ret
pop
cmp
push
xor
adc
fsubs
movsl
and
push
cld
lock
shl
fidivrs
or
adc
int3
dec
aas
outsl
or
or
push
pop
pushl
ljmp
add
add
in
mov
jecxz
out
mov
jmp
or
mov
add
add
jecxz
or
jnp
shll
out
in
es
xchg
out
inc
int3
inc
ret
mov
inc
movl
shrl
xchg
or
xchg
stc
or
int3
hlt
sub
fsubrs
fisubs
pop
sbb
rcr
rcrb
or
scas
in
gs
das
xchg
and
fsubrs
and
sbb
insb
inc
cmp
xor
loope
or
push
xor
sar
mov
rcr
xchg
lcall
out
xchg
out
xchg
inc
push
push
mov
mov
fst
or
ret
mov
outsl
stos
fcom
and
imul
add
mov
es
dec
mov
outsb
push
push
inc
dec
sahf
jge
ret
xor
inc
cmp
test
mov
fmuls
cli
and
cmpsb
into
lds
negb
mov
mov
add
add
std
test
jg
into
lret
orl
add
add
pop
scas
xor
cmp
scas
fst
int
movsl
icebp
fstpt
push
das
lods
cmp
add
inc
nop
pop
jo
es
in
test
add
jne
mov
sub
push
test
sbb
sahf
inc
ds
mov
sbb
sub
out
arpl
not
aaa
mov
xor
xlat
mov
popf
or
jnp
js
push
ds
mov
jge
lahf
pop
xlat
sbb
and
cwtl
nop
mov
js
scas
ds
clc
sbb
lock
xchg
and
cs
std
dec
gs
mov
ljmp
jne
fdiv
negb
mov
cmpsl
pop
rorb
xchg
testl
ds
jp
mov
push
cmpsb
int
arpl
stos
fs
xor
gs
out
add
xor
xor
cmp
scas
fisubrs
out
xor
repnz
xor
data16
add
lock
in
lcall
jae
dec
mov
add
mov
mov
add
ret
add
fs
mov
repnz
jns
test
stos
loopne
mov
arpl
pop
or
lods
pushf
lahf
cmp
or
sar
push
mov
inc
jle
jle
pop
xor
jne
sbb
outsl
fdivrs
movsb
call
adc
test
cmp
clc
sbb
test
cli
inc
imul
mov
aaa
cli
inc
dec
ss
insb
call
mov
and
jecxz
and
mov
push
jne
jle
pop
xor
movsl
push
mov
cmp
and
pop
mov
lcall
jnp
fnstcw
lods
das
das
xchg
aam
fcmovbe
mov
mov
fdivl
xor
dec
and
into
mov
pushf
cmpl
pop
mov
xchg
mov
dec
mov
ja
xchg
je
jmp
imul
in
dec
std
aad
mov
inc
cmc
mov
add
sub
jg,pt
dec
arpl
mov
add
add
cmpsb
lods
stos
jecxz
jnp
mov
rcrb
repnz
pop
adc
cs
rol
mov
jge
sub
adcl
addb
xor
sub
push
mov
inc
cmp
mov
lret
loopne
jno
fimuls
inc
ret
push
scas
pusha
sub
fwait
push
mov
push
fs
insl
cs
inc
fnstcw
pop
mov
push
push
push
mov
cmp
stos
cmpl
sbb
in
sub
cmp
mov
addb
mov
sub
push
insl
rclb
out
xchg
sub
or
dec
fwait
adc
and
out
push
sub
imul
loopne
mov
sbb
pop
and
in
sbb
push
cmp
xor
in
mov
push
aaa
inc
cmpsb
push
adc
mov
jl
outsl
inc
rorb
popf
jb
shlb
jecxz
mov
movsb
insl
sbb
outsl
mov
frstor
or
add
add
add
aaa
pop
jae
jg
cmp
mov
mov
dec
jle
ja
mov
push
jne
pop
inc
divl
lods
aaa
mov
pop
fs
or
mov
cmc
xor
das
mov
loopne
dec
jp
xchg
dec
scas
jb
mov
fbstp
fildl
es
push
adc
stc
sbb
dec
vpsubusb
scas
xchg
ljmp
sub
sub
rcll
jae
and
mov
sahf
inc
imul
push
push
stos
mov
daa
lcall
aam
mov
xlat
sub
lods
fstpt
jns
ja
push
movsb
std
or
xchg
aad
lds
mov
fadds
mov
push
ljmp
lahf
push
push
jne
pop
xor
sub
mov
shlb
push
lret
xor
dec
mov
push
mov
xor
fs
mov
add
add
inc
fbld
mov
pop
add
pusha
je
add
add
add
ret
dec
loop
int
loopne
int3
add
sbb
iret
xchg
lahf
adc
mov
pop
lret
sti
or
dec
jge
xchg
jnp
or
cltd
ret
lods
imul
loopew
daa
rorl
jb
mov
cwtl
lret
pop
mov
das
and
cmpsb
gs
loope
pop
cmp
loopne
fldl
pop
or
bound
jp
fs
in
or
testl
add
aam
es
fwait
mov
pop
lcall
mov
dec
pop
inc
shr
mov
cld
adc
ficoms
and
sbb
adc
ret
aas
lea
adc
loopne
dec
mov
xor
sbb
pop
push
int
dec
pop
cmpsl
add
mov
inc
cmp
aas
lcall
dec
push
cltd
repz
call
lea
sub
add
add
fistpll
call
sbb
das
jae
mov
add
mov
loop
pop
subl
insb
inc
inc
mov
punpckhwd
sbb
cwtl
dec
fs
jle
inc
add
daa
add
cmc
pop
lret
insb
push
jnp
outsl
out
or
imul
icebp
cmp
lea
xor
sub
fmuls
xchg
pop
dec
and
xchg
cli
xor
jns
aam
test
and
dec
test
repz
or
pop
adc
je
mov
sahf
inc
adc
call
dec
shr
and
fdivrl
cmp
mov
jl
cwtl
mov
xor
stos
cmp
mov
xchg
cmp
pop
fdivrs
into
stc
roll
hlt
test
out
icebp
arpl
jbe
rorb
int3
aam
push
sub
and
jl
push
scas
jne
jns
pop
jg
push
jge
ficomps
xor
ja
add
sub
inc
cmp
sbb
mov
call
add
add
std
sti
leave
sti
iret
jmp
lods
mov
jl
add
add
add
or
cmpsb
cltd
rorb
mov
inc
pop
mov
push
movsl
nop
jbe
push
jns
sbb
mov
wrmsr
and
inc
adc
faddp
push
decb
push
out
xor
stos
mov
sub
inc
jp
add
in
jecxz
out
sbb
sbb
notl
mov
mov
stos
cmp
bswap
lea
push
mov
aas
adc
stos
sub
loopne
mov
lret
mov
rdpmc
mov
rcll
cmp
sub
xchg
xchg
xchg
push
and
loope
xor
bound
jns
sbb
push
inc
add
inc
cmp
icebp
jmp
mov
aad
dec
jg
pop
enter
xchg
shrl
pushf
push
lock
sbbl
cli
jl
mov
xchg
in
add
test
out
mov
add
add
mov
xor
mov
add
xlat
xlat
cmpsb
aam
xchg
mov
xchg
inc
xlat
jge
pop
cmp
lds
mov
out
sbb
mov
sub
and
adc
dec
pop
mov
or
mov
add
je
shl
inc
add
cmp
outsl
addl
ret
leave
popf
sbb
xor
int
outsl
cs
outsb
mov
inc
ljmp
ss
movsb
stos
jp
fwait
aas
dec
pushl
pushf
sahf
inc
sbb
dec
cmp
movsb
xchg
loop
mov
lds
cli
jle
fwait
push
rcrb
mov
mov
or
repnz
sbb
sahf
push
cli
xlat
mov
stos
fmull
xchg
xchg
imul
ja
into
mov
pop
push
jno
clc
pop
fldl
ficoml
push
cltd
mov
jp
mov
jb
std
dec
push
mov
pop
insl
mov
mov
mov
testl
add
add
jg
mov
sahf
loop
mov
mov
add
mov
mov
pop
and
jle
notl
loopne
ljmp
flds
sti
es
sub
daa
add
jno
fsubrl
fisttpl
inc
and
and
xor
add
pop
pop
inc
mov
scas
jl
pop
test
divb
sub
test
clc
mov
or
cmpl
pop
sbb
lods
fistps
cmc
push
into
insl
cmpsb
out
jmp
jae
test
lds
sbb
mov
je
push
dec
mov
and
cli
xchg
mov
ja
aam
hlt
lods
sub
stos
mov
mov
clc
daa
in
lods
cld
cmp
out
mov
mov
imul
and
adc
sahf
icebp
in
xchg
xchg
pop
sub
mov
outsl
pop
ja
adcl
aam
adc
add
add
inc
enter
pushl
cld
sbb
mov
add
add
add
push
imul
daa
iret
sub
mov
arpl
setp
xor
push
flds
clc
adc
in
fmuls
stos
sbb
dec
pop
insl
xor
ljmp
xor
mov
sbb
ja
stos
data16
add
jecxz
imul
sub
pop
cltd
hlt
sti
push
in
mov
and
lea
xchg
mov
loop
fimull
pop
sti
cmc
sub
lar
adc
icebp
cmp
sub
mov
dec
jb
imulb
scas
jmp
hlt
jl
test
stos
dec
cmc
ficompl
popa
insl
test
fwait
cmpsb
out
ret
lock
sahf
xchg
shrb
or
pusha
dec
hlt
fdiv
sub
cltd
std
stos
inc
mov
repz
in
push
ret
loop
lcall
mov
ljmp
enter
loopne
push
imul
add
xlat
pushf
shrb
lcall
cmp
and
roll
add
add
lods
xlat
sub
outsl
push
pop
xlat
fdivrl
fadds
lfs
jecxz
dec
test
jns
and
mov
mov
or
lret
jns
shrb
stos
jns
popf
test
pop
dec
or
and
mov
inc
mov
daa
jp
test
lds
dec
lret
repz
mov
add
sti
pop
idiv
enter
add
pusha
jnp
fldlg2
sbb
and
lock
mov
inc
mov
sub
push
add
mov
push
push
js
xor
mov
inc
lea
out
outsl
adc
gs
and
int
fmulp
in
mov
loopne
dec
add
pop
mov
fisttpll
dec
iret
std
push
jl
andb
inc
loop
dec
xor
cs
xchg
mov
push
cld
or
add
mov
je
jnp
mov
dec
pop
sti
cld
sub
scas
mov
aas
scas
fldl2t
nop
ret
add
add
xchg
test
int3
cld
mov
push
xchg
in
pop
mov
stos
outsb
lcall
gs
mov
cli
cmp
lahf
cmp
ljmp
xchg
loopne
aas
pop
fst
adc
mov
pop
fstl
cmp
repz
jnp
xchg
push
xchg
inc
mov
insb
cmp
jle
mov
adc
sub
insl
dec
cld
jg
cmpsl
cwtl
add
xor
and
xchg
adc
jmp
pushf
xor
shll
test
mov
daa
jnp
lock
leave
scas
inc
lahf
mov
jp
push
adc
mov
push
lds
cmp
scas
cmp
cmp
testl
adc
sahf
jbe
clc
iret
dec
ljmp
xchg
cmp
jae
aam
insb
lahf
mov
jmp
pop
dec
dec
mov
ret
push
stos
pop
sbb
add
sub
sub
jg
jne
jne
jg
loop
mov
notb
add
inc
jle
imul
ljmp
mov
loopne
pop
adc
mov
sbb
stc
or
stos
arpl
fdivp
into
add
fucomi
fsubp
sub
sbb
xchg
pop
xchg
jns
adc
adcb
mov
rorl
lods
iret
xchg
mov
je
pop
test
push
mov
lea
pop
lret
clc
int
mov
dec
or
orb
mov
or
push
xor
movsb
cmpsl
xor
test
das
jo
cwtl
scas
jle
pop
or
test
sub
or
jo
in
imul
xchg
js
inc
push
insb
cmc
es
mov
int3
jl
test
or
xchg
in
or
lcall
cmpsb
jl
add
push
out
ja
pusha
fildl
jge
sub
aam
call
adc
mov
add
sbb
mov
cmc
mov
jo
les
add
add
out
fisttpl
and
or
push
bound
cmp
pop
push
js
imul
cmp
imul
push
js
ficoms
inc
arpl
pop
dec
sbb
mov
jbe
and
cwtl
adc
sarb
iret
xchg
or
push
push
loope
test
mov
jne
lock
call
test
push
push
lret
test
cmc
xlat
pop
sbb
imul
push
aam
mov
insb
cmpsb
xlat
cmp
daa
fcomp
iret
in
mov
jne
insl
movsb
icebp
ss
fdivrs
mov
mov
jbe
rcrb
int3
jp
sbb
or
rorl
pop
sbb
stos
mov
fildll
and
jae
int
mov
mov
adc
test
lods
outsl
mov
sahf
push
cmp
add
and
add
and
outsb
jle
lods
testl
lds
add
add
adc
mov
lods
jecxz
xchg
cmp
fisubl
pop
fdiv
daa
sbb
stos
push
sbb
mov
add
aas
pop
fisubrl
lret
push
and
or
inc
data16
dec
or
aas
pop
ss
cmp
jae
sub
loope
pop
xchg
movsb
jno
test
pop
mov
idivb
push
push
jbe
sbb
movsb
mov
scas
fldl
or
fs
into
rcll
push
nop
jnp
fwait
into
push
int3
dec
iret
pop
xchg
mov
out
adc
xchg
dec
add
popf
xchg
sub
mov
mov
jle
ud2
into
add
dec
mov
leave
jae
jmp
and
add
jo
ja
xchg
rcrl
xor
pop
adc
cltd
out
out
aas
in
lea
test
rcl
mov
mov
add
dec
pop
mov
add
add
enter
push
add
in
das
mov
arpl
pop
push
sbb
or
mov
rdpmc
jb
in
cmp
clc
jecxz
push
ret
shlb
lods
adc
mov
jo
sbb
xchg
in
pop
xchg
in
lret
jecxz
or
notb
xor
aas
jle
add
jo
jns
es
cmp
gs
inc
ds
popw
fnstenv
xchg
jg
pop
fidivrl
js
cmc
add
in
arpl
jo
mov
sbb
inc
in
pop
movb
bound
jae
add
test
roll
pop
rclb
mov
add
scas
or
add
es
pop
jnp
xrelease
mov
xchg
jmp
test
mov
orl
xor
rcll
mov
sub
add
aam
cmp
shlb
outsl
xchg
pop
dec
test
sbb
xlat
in
aad
mov
movl
add
dec
mov
int3
sbb
xchg
xchg
pop
es
adc
sbb
fidivs
xchg
cltd
iret
enter
arpl
inc
dec
fs
dec
xchg
inc
xchg
lahf
int
clc
mov
sbb
stos
test
push
pusha
jecxz
lret
inc
mov
insb
pop
add
jp
repz
call
pop
aad
imul
pop
adc
mov
int
mov
dec
fcmovu
insb
mov
xlat
sahf
and
fisubs
xchg
leave
mov
xor
pop
mov
les
imul
lret
inc
jg
out
test
shlb
out
mov
lods
sub
xlat
in
mov
addr16
cli
lds
cli
cli
mov
or
ret
xchg
sbb
mov
lods
es
stc
mov
or
cmpsl
cmp
shrl
or
bound
and
popf
pop
jmp
pop
ds
sub
cmp
jg
and
mov
aam
out
xor
add
add
out
xchg
int
jb
push
sbb
xchg
push
push
push
xchg
int
ret
jo
fcmovne
aas
pop
inc
lcall
cli
mov
addb
xchg
dec
jbe
push
mov
fisubl
or
sub
sub
repnz
lock
sbb
cmp
insb
sbb
loop
jnp
andb
cli
adc
push
dec
mov
shll
testl
mov
inc
mov
dec
xchg
pop
outsl
xor
lods
push
push
sarl
xor
ss
inc
gs
pushl
cmpl
add
adcl
out
stos
std
mov
push
insb
or
pop
movsl
cli
sbb
out
dec
loopne
sub
enter
rclb
dec
add
adc
in
push
xorb
fildl
fsubr
sti
mov
out
dec
and
cmpsl
movsb
mov
mov
jno
mov
add
add
xor
fistpll
out
repz
fcoms
push
ficomps
lods
leave
add
add
add
dec
shrb
or
sub
mov
shlb
xor
movsb
and
pop
mov
ja
outsb
push
call
xchg
aam
idiv
in
dec
shl
lock
dec
xor
stos
scas
adcb
add
cmp
aaa
call
data16
call
lods
fldt
out
out
enter
imul
popa
out
push
je
cmp
xchg
sub
push
sti
mul
mov
in
jno
jo
ja
fs
xchg
in
inc
push
cmp
and
cmp
push
in
sbb
or
cltd
mov
sahf
pop
movsl
xchg
jb
mov
sahf
xor
shll
aas
pop
cmpsb
jnp
lea
mov
xchg
lock
enter
je
and
js
pop
lods
push
daa
cmpsb
sub
cld
mov
pusha
inc
and
loopne
jb
push
inc
pop
insl
aas
jp
add
add
mov
mov
stc
sub
add
add
add
roll
and
inc
jno
insl
mov
neg
pushf
cmpsb
xchg
in
fstps
pop
mov
push
lret
outsb
mov
and
and
pop
or
add
in
mov
out
fnstcw
pusha
pop
std
add
inc
mov
mov
mov
mov
sti
mov
fldcw
jecxz
faddl
pop
jb
adc
lock
arpl
pop
lahf
add
je
cmp
push
fistpll
outsl
lods
rcr
into
mov
mov
pop
loope
or
aaa
outsb
into
test
add
xchg
stc
push
call
cmpsb
lahf
push
sbb
addr16
bound
sbb
add
loope
xor
repnz
les
sub
mov
stc
popa
fsub
adc
int3
push
mov
push
enter
mov
roll
xchg
pop
fs
sbb
into
es
push
popf
shrb
xor
jo
pushf
loop
and
pop
scas
ret
test
xchg
stc
enter
in
sbb
push
inc
mov
sub
add
lret
mov
movsb
mov
lahf
imul
sbb
aas
shlb
rolb
jnp
pop
and
aam
loope
js
sub
popa
cmp
cli
lds
rcrb
ljmp
out
out
test
jne
add
push
sbb
dec
sub
jecxz
lcall
pop
incb
pop
pop
sub
mov
mov
xchg
int3
mov
mov
dec
ds
jbe
cmp
adc
mov
jle
dec
jo
or
lock
test
incb
sbb
out
js
adc
insl
ds
call
add
pop
outsl
and
loopne
jmp
pop
cmp
xor
and
mov
fldlg2
push
test
cmc
cltd
out
lods
xor
dec
cltd
mov
and
mov
jmp
lcall
pop
cmp
fcoms
pop
cltd
push
jno
jle
test
mov
cmc
dec
mov
jne
imul
cmc
call
inc
push
popa
orl
loop
int3
add
add
add
push
jo
dec
arpl
dec
xchg
sbb
lea
mov
out
lods
ficomps
dec
test
mov
jne
adc
xorl
and
outsb
pop
jge
push
ret
aaa
pushf
cmp
inc
cmpsl
xchg
ljmp
loopne
std
sbb
and
add
inc
lds
mulb
aad
mov
xchg
les
loope
fistps
cmp
lods
enter
mov
mov
adc
out
fists
stc
pop
and
cmc
cmc
outsl
mov
aad
jge
mov
aaa
and
sub
mov
shll
jmp
sbb
dec
jecxz
or
jo
aas
dec
pop
in
adc
je
aas
xchg
mov
pop
out
push
pop
movsb
inc
push
adc
fildl
cwtl
ds
cmp
fwait
mov
mov
movsl
mov
iret
sub
xchg
jp
mov
add
add
shll
cmp
cli
mov
test
and
push
mov
sub
jo
in
pop
jg
mov
lcall
sbbb
xchg
mov
push
adcb
addr16
fwait
and
cmc
add
cmp
adc
pop
jg
add
xchg
mov
xor
mov
xor
icebp
cld
leave
push
adc
pop
mov
mov
roll
dec
jmp
aad
sarl
inc
xor
jg
or
mov
rcl
dec
mov
sub
js
loopne
int3
xchg
mov
sub
test
js
bound
inc
fisubrs
xor
xchg
fcoms
in
lcall
ljmp
cmp
mov
scas
loop
jl
stos
fildll
test
sub
test
mov
out
out
out
into
gs
cld
test
or
ror
add
add
scas
bound
stos
jns
sub
shll
pop
lret
mov
outsb
and
jnp
mov
jmp
sub
insl
jmp
or
jb
or
cli
add
cmp
out
idivl
popa
cwtl
into
and
xchg
and
dec
sbb
add
cmc
adc
enter
ljmp
sbb
lcall
inc
sbb
dec
mov
jecxz
mov
sub
mov
out
sub
lods
mov
ror
fisubl
jns
jb
cs
js
jecxz
cwtl
adc
cmp
mov
sub
sbb
lahf
in
sarl
and
insb
or
cli
mov
fisubl
add
add
mov
push
ret
mov
xlat
pop
mov
cmp
mov
add
add
xchg
and
je
out
mov
jno
adc
add
add
aaa
subl
inc
into
add
rcrl
pop
movsb
pop
idiv
lcall
int
sarl
out
gs
loopne
nop
je
mov
fsubl
ja
cmp
pop
jl
cltd
mov
out
xor
sub
adc
int3
xor
inc
aas
add
mov
mov
jmp
xchg
push
or
add
and
aaa
xorl
test
push
nop
or
jne
pusha
ficoml
cmp
test
add
xor
jmp
or
dec
cmp
push
fucom
js
pop
lahf
sub
jmp
sbb
mov
ret
jecxz
or
jecxz
fisubs
and
cmp
cmpsb
dec
das
loop
xor
fadd
subl
gs
jmp
jecxz
and
or
sbb
adc
adc
lods
lods
mov
fidivl
jbe
mov
out
test
mov
sub
aad
lcall
out
mov
jmp
scas
lcall
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
out
add
enter
add
add
pop
dec
es
push
xchg
data16
rcrl
mov
adc
xor
cli
mov
pop
imull
inc
cmpsl
and
in
mov
fldpi
dec
cs
hlt
es
push
arpl
mov
je
out
mov
les
add
aad
push
bound
add
pavgb
and
push
popa
sub
push
pushf
mov
mov
lods
xchg
pop
xor
mov
sub
mov
mov
enter
adc
fmull
pushf
ret
out
and
push
xchg
sub
stos
sahf
dec
aaa
les
sub
pop
sub
cld
or
cmp
mov
std
std
sub
dec
add
dec
jge
jp
lret
pop
mov
sub
push
loopne
sub
xchg
jne
and
cwtl
push
test
mov
sahf
push
add
add
add
popf
mov
lahf
ret
or
stc
push
int3
roll
add
add
les
data16
adc
jecxz
dec
repz
das
sub
jg
loope
gs
or
popf
xor
push
sbb
xor
decl
mov
push
jbe
negl
push
lods
jmp
push
fadd
dec
pop
xor
aad
and
jnp
js,pt
jno
sbb
hlt
clc
cs
ficompl
or
loopne
mov
in
mov
dec
xor
xor
iret
mov
sahf
mov
inc
push
fnstenv
ja
imul
push
cmc
sbb
jmp
jbe
aas
fiadds
mov
xchg
testb
xchg
dec
pop
push
stc
loopne
push
xor
jmp
mov
jns
nop
sbb
es
in
leave
dec
mov
cmp
jae
loopne
sbb
fdivrl
xchg
std
and
lret
sub
push
mov
ds
mov
lahf
jecxz
popa
hlt
sub
sahf
mov
std
push
aaa
ja
add
add
neg
outsl
push
xchg
or
lods
mov
rcl
add
add
add
pop
push
jge
je
push
adc
cwtl
data16
push
add
xchg
cmc
xchg
sbb
or
loopne
cmp
imul
pop
rcll
ss
push
in
std
xchg
push
mov
cwtl
daa
inc
negb
int
movsl
fnstenv
fwait
out
ret
shll
jno
pop
jae
and
jbe
ffree
inc
push
ss
cmp
push
test
xor
pop
dec
call
dec
popa
xor
dec
sysret
popa
inc
sub
lret
cwtl
call
hlt
add
inc
dec
bnd
faddl
pop
scas
cmpsl
sti
addr16
cmp
inc
mov
sbb
jg
mov
push
in
std
loopne
sbb
ret
in
int3
jno
pusha
in
clc
pushf
pop
sti
inc
or
lret
sub
xor
cmp
repz
mov
inc
adc
int
mov
sub
jp
add
add
add
sbb
sub
dec
lret
rcl
roll
add
add
add
mov
xchg
inc
push
jno
cs
mov
adc
insb
cmpsl
repnz
popf
das
out
test
rcrb
cli
aaa
fucomi
adcl
mov
pop
movsb
cmpsb
dec
int3
gs
inc
ss
pushf
push
cmp
sub
iret
fstp
leave
xchg
insl
xchg
les
js
and
addr16
fcmovbe
xor
fisubs
daa
popa
ljmp
jno
fldcw
pop
out
jp
adcl
sbb
filds
insb
mov
and
test
xchg
cmp
dec
cmp
mov
arpl
rcr
test
mov
loop
shrb
mov
xor
xchg
ret
mov
inc
pop
fisubrl
out
mull
inc
test
jle,pn
xor
sti
jl
test
cmpsl
jge
adcl
test
inc
leave
insb
scas
jae
mov
add
add
ds
jae
or
add
add
add
mov
scas
push
pop
xor
dec
jnp
inc
popa
fidivs
sub
fistps
push
sbb
subl
xor
lret
push
mov
lret
mov
adc
xchg
clc
in
insb
ljmp
cltd
or
iret
andb
lods
xor
fdivrl
pop
dec
pop
inc
add
les
ljmp
cmc
lret
lods
mov
insl
cmpsl
subb
jmp
mov
fists
les
sti
subb
aas
and
lahf
mov
divb
adc
mov
into
jecxz
pop
mov
stos
and
lds
lcall
jb
sub
lret
adc
ficoml
jae
ret
mov
mov
jbe
and
xlat
out
std
testb
andb
movsl
push
aas
shlb
stos
mov
outsb
jle
popf
push
mov
xchg
inc
lahf
stos
iret
insl
jge
popf
mov
cmp
xchg
and
idiv
lahf
insl
mov
mov
add
add
add
or
pop
mov
cmpsb
xor
leave
int
mov
pop
pop
mov
loop
rcr
cmp
mov
aas
nop
les
faddl
and
add
ficomps
movsl
adc
mov
mov
mov
xor
jg
push
mov
mov
out
hlt
into
xlat
cli
daa
cmc
lcall
adc
jo
andb
icebp
or
cmpsl
add
push
repz
push
mov
inc
adc
popa
jge
add
mov
cwtl
mov
cli
xchg
outsl
adc
dec
sbb
daa
and
call
and
sbb
out
js
ss
hlt
sub
imulb
ficomps
shrb
std
js
loopne
jbe
inc
xchg
cs
jbe
jmp
adc
mov
sub
push
dec
mov
mov
addr16
stos
int
cmp
jg
leave
or
frstor
out
add
add
add
outsl
sbb
sbb
into
lret
jp
inc
mov
sbb
dec
xor
cmpsb
cmpsl
fmulp
aad
sbb
add
mov
ret
les
sbb
test
aad
jb
lret
loop
mov
jp
push
mov
dec
or
jmp
std
iret
mov
out
popf
cltd
xor
pop
inc
nop
lret
sbb
jl
mov
mov
mov
add
ljmp
mov
ds
dec
cld
mov
inc
pop
jl
pop
cmpsb
ffreep
push
or
dec
sub
js
sahf
pop
dec
jns
jmp
or
cli
sub
pop
or
sub
fs
mov
mov
pop
lcall
or
lds
adc
out
pop
mov
ds
pop
and
inc
push
rorb
dec
pop
pop
xchg
adc
cmp
jmp
out
or
push
add
jno
in
imul
xchg
movsb
xor
movsl
in
add
add
add
add
out
cmp
adc
mov
jae
aaa
lret
sub
inc
dec
lahf
scas
movsl
cmpsl
out
cmp
gs
stc
gs
sti
mov
pop
add
ds
jecxz
imul
pop
lods
and
push
jno
cld
idivb
jb
add
or
ds
pop
in
and
pop
pop
xchg
push
aad
clc
or
mull
int
pop
jecxz
add
jmp
cmpsl
aam
sub
outsl
push
mov
push
and
out
jns
orl
in
sub
dec
fs
and
adc
dec
imul
or
ds
mov
icebp
inc
test
dec
decl
sbb
or
fadds
jbe
mov
adc
subb
aaa
es
loop
dec
mov
movzbl
in
int3
mov
jp
iret
call
cmp
mov
add
out
fldcw
push
in
sub
xchg
call
add
add
jae
lret
lcall
cmp
inc
aad
pop
ja
xchg
and
xchg
popf
out
sub
mov
xor
or
inc
jmp
sub
mov
pop
jbe
mov
push
adc
cs
shll
jl
mov
and
std
fstpl
pop
mov
sahf
jmp
rcrb
in
xchg
sbb
mov
fdivrl
stos
imull
popf
inc
aaa
int3
jecxz
mov
cmpsb
jle
jne,pn
movsb
lcall
jns
fisttpl
jb
jge
xchg
dec
les
pop
sbb
xchg
pop
test
outsl
xchg
and
jae
pop
cmp
out
fidivrl
sub
inc
mov
test
mov
fcoms
or
push
cmp
cmpl
mov
movsl
sarb
fidivrl
dec
out
in
ror
lods
push
push
loop
jmp
adc
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
inc
imul
add
add
add
xor
mov
pushf
mov
adc
sub
add
push
and
push
add
xchg
pop
or
pop
mov
xchg
cmpsl
jae
mov
xchg
xor
cmp
leave
cmp
fistpl
jmp
xor
jns
scas
out
scas
mov
inc
les
xchg
scas
xor
out
adc
adcb
aaa
pop
sub
or
xchg
dec
stos
scas
js
and
clc
ret
pop
dec
rclb
xchg
aam
fbstp
orl
test
add
adc
inc
inc
ja
loopne
imul
push
je
push
scas
icebp
les
cmpsl
out
pop
int
insb
sub
push
mov
inc
je
out
push
adc
dec
arpl
mov
mov
xor
loope
pop
sub
std
add
outsl
mov
cmp
ret
xchg
or
aam
sahf
xchg
pop
dec
jle
jg
std
fstpt
das
aad
fiaddl
add
add
ljmp
lcall
test
mov
add
lret
cmp
lret
out
pop
jae
jno
cmc
ror
sbb
pop
out
movsl
xlat
cs
inc
stos
iret
in
jbe
scas
sahf
adc
mov
mov
ja
mov
popa
leave
repz
and
shll
dec
sub
scas
iret
jmp
jp
mov
xor
jb
sub
or
adc
imul
xor
cmp
lea
and
push
push
in
mov
mov
push
into
jg
test
sbb
inc
sahf
les
mov
mov
aas
sbb
jb
orl
imul
dec
push
pop
lock
stos
sub
sbb
and
sub
sbb
sti
lcall
mov
ja
jge
or
push
xchg
test
aad
loop
push
push
cmpsl
inc
js
dec
insl
fsubrs
add
cmp
ljmp
mov
push
jmp
add
add
ret
pop
std
mov
out
test
mov
rcrb
and
cmpl
and
mov
pop
push
aad
cli
test
lea
dec
push
adc
cmpsb
cli
dec
lds
outsb
jmp
dec
mov
loop
sub
push
ret
je
data16
dec
xor
mov
jae
cmp
xchg
and
adc
loopne
aas
jbe
ljmp
sub
daa
loopne
aas
in
and
xor
mov
imul
mov
adc
roll
jecxz
andb
cld
dec
in
pop
or
orl
xchg
push
insb
das
push
and
orb
xlat
loopne
lret
pusha
ud0
stc
jbe
cwtd
mov
ret
int3
mov
xchg
clc
sahf
or
sahf
fisttpll
add
cmp
fldcw
xor
scas
stos
subl
adc
leave
jmp
scas
inc
call
clc
faddl
add
add
mov
fmul
stos
inc
je
insl
roll
imulb
outsl
sbb
loopne
push
lock
mov
in
cmpsl
dec
lds
lods
mov
xor
daa
pop
jecxz
mov
push
int
scas
dec
jb
xchg
sbb
adcl
jmp
bnd
lret
cs
ss
test
xchg
int3
movsb
push
or
fwait
stos
or
inc
or
js
pop
addr16
jbe
inc
sbb
cwtl
xor
inc
hlt
fildl
leave
lea
retw
or
and
dec
outsl
mov
sub
aam
outsb
sub
xor
fsubp
sbb
fistps
and
stos
flds
cli
cld
mov
add
loopne
cmc
jae
xchg
je
cmp
stos
jno
mov
xor
or
adc
ret
sbb
and
icebp
and
pushf
cli
mov
xor
outsb
mov
mov
lea
fidivs
add
add
push
out
faddl
fs
fldl
add
add
inc
movsl
imul
sub
ret
lret
fdivl
fbstp
cli
adc
mov
rcrb
mov
repz
sarb
push
adc
jnp
push
or
movsl
repz
mov
jp
cltd
cmpsb
mov
xchg
dec
fs
mov
pop
dec
fldcw
adc
loop
lock
push
idivl
fsubrl
mov
scas
mov
push
pushf
lcall
cld
cwtl
mov
mov
inc
mov
cwtl
icebp
jno
jno
cmp
mov
and
mov
cmpb
cmp
jg
or
bound
das
sub
dec
jle
fdivrl
cwtl
push
cmp
cmpsb
cmp
fadds
in
sbb
mov
lods
jmp
dec
orl
xchg
leave
sbb
mov
push
test
cwtl
int
mov
ret
pop
sbb
cmpsl
mov
aam
imul
inc
pushf
push
pop
mov
imul
jg
mov
lcall
fisttps
or
add
add
add
add
pop
cmp
adc
jno
add
jl
mov
clc
leave
in
fcmovu
xlat
enter
cmp
adc
jge
mov
mov
out
pop
sbb
xor
adc
aas
sbb
in
add
push
xchg
jmp
sub
adc
pop
imul
sbb
xorl
mov
jl
test
and
jae
mov
testl
mov
sbb
aas
enter
jle
std
test
dec
jge
xor
imul
pop
ret
sbbl
xchg
lret
dec
mov
push
sti
or
jnp
cmp
or
fwait
shl
mov
adc
sbb
shlb
cwtl
or
lock
pushf
icebp
clc
lahf
push
adc
int
imul
adc
iret
inc
test
pslld
jl
lods
sbb
jns
xchg
xchg
mov
jno
lret
add
add
add
insl
aaa
xchg
cld
mov
mov
add
shrl
mov
cmp
dec
xor
xchg
sbb
cmp
add
pusha
push
mov
cs
and
adc
pushf
cwtl
nop
pop
jns
pushf
arpl
xchg
xor
push
push
dec
or
or
xchg
rclb
cmp
add
in
inc
es
cld
inc
xor
xor
dec
hlt
xchg
mov
lcall
test
ret
movsl
add
pop
or
add
imul
mov
pmullw
inc
sbb
pop
pop
clc
mov
jno
and
mov
push
pop
lret
movl
movups
xlat
xor
xor
loop
sti
add
int3
mov
ss
dec
add
stos
sti
test
jno
cmc
and
insb
sbb
mov
insb
js
test
add
add
fadd
fsubp
jnp
or
cld
les
pop
xchg
or
add
add
add
out
inc
add
subb
mov
sahf
cs
fdivrs
sarb
xlat
std
pop
ja
ds
jo
cmp
push
inc
push
add
and
jbe
mov
lret
xchg
cmpsl
lock
cld
adcb
pusha
xchg
into
adc
xchg
jecxz
push
ja
mov
sbb
sti
mov
ljmp
push
adc
adc
mov
pop
or
fs
fsubl
lods
xchg
jb
xor
lea
popa
outsb
in
pop
cli
insl
pop
or
lcall
mov
xor
mov
adc
outsb
cmp
in
lods
push
ja
sbb
scas
es
lret
push
pop
mov
and
add
loope
lret
subl
cmp
jp
sbb
add
cmp
lahf
jge
mov
add
lret
sbb
push
cmp
sub
cld
cli
jle
dec
nop
xor
loopne
and
add
add
add
imul
mov
lahf
dec
sub
nop
enter
and
sub
push
lea
bound
mov
int3
push
lcall
ja
mov
in
mov
lret
lock
mov
or
xor
push
xchg
iret
sub
test
loop
or
push
test
inc
imul
inc
loopne
push
aam
outsb
xor
test
pop
pop
inc
movsl
mov
sahf
cltd
lahf
aaa
notl
adc
pop
inc
in
int3
mov
pop
jmp
cmp
jo
push
pop
out
testb
jle
insl
jbe
lods
gs
mov
scas
cmp
push
push
jb
or
cmc
popf
scas
imul
dec
or
add
je
mov
mov
mov
lret
call
and
add
add
cs
test
subl
xor
mov
data16
stc
xchg
pop
data16
or
ds
cltd
mov
add
add
ja
sti
aaa
out
ja
sbb
adc
add
add
add
arpl
cmp
ret
enter
mov
ret
pushf
adc
xchg
pop
hlt
sbb
dec
vsubpd
lret
inc
mov
or
dec
sbb
fs
scas
sub
das
lret
push
call
inc
sbb
xchg
fadd
cltd
je
sahf
pop
jno
add
or
pop
inc
out
xchg
addr16
in
mov
mov
pop
arpl
insb
test
or
jge
adc
cmpsb
or
in
rorl
push
or
adc
ret
data16
push
pop
stos
push
or
mov
int3
bound
cmp
xchg
lea
xor
mov
or
popa
push
jg
popa
dec
push
jecxz
jmp
lahf
dec
inc
inc
mov
repz
shl
mov
cmp
fsub
lea
rep
or
and
nop
out
cmpsl
ror
cltd
outsl
mov
aaa
pushf
arpl
xor
add
add
add
mov
ds
ffreep
and
out
pop
loope
adc
adc
mov
mov
pop
je
sarb
imul
jecxz
fxch
jns
xor
in
scas
mulb
into
aam
xor
nopl
jno
xor
mov
std
xor
cmpsl
dec
ljmp
sbb
std
mov
push
daa
mov
sbb
aad
mov
lods
dec
xchg
jl
iret
xchg
sbb
inc
push
add
mov
mov
and
call
jle
repz
xchg
scas
stc
adc
lcall
jne
pop
rorb
xor
xor
xchg
push
imul
push
jle
cmp
mov
mov
dec
sub
xchg
fdivrs
xchg
add
cltd
mov
adc
mov
jo
inc
out
test
rorb
jmp
data16
jae
cltd
cmc
adcb
fcos
pop
mov
dec
sbb
add
add
add
sbb
mov
mov
scas
jg
jb
mov
imulb
fiaddl
stc
sub
fxam
insb
pop
lcall
push
inc
mov
fisttps
and
in
fmuls
xchg
sahf
dec
push
insl
std
mov
mov
xorb
sbb
adc
dec
push
mov
pop
sbbl
mov
jnp
repz
xchg
sbb
xchg
in
adc
das
mov
adc
sbb
cmp
lds
jmp
jmp
pop
mov
lret
push
mov
cs
mov
outsl
xlat
out
push
sub
shlb
adc
in
shlb
add
inc
addr16
ja
imul
pusha
dec
push
jo
loopne
xchg
bound
sbb
push
push
movsl
push
sbb
add
pop
lahf
lea
cmp
push
sub
jg
add
xor
push
lret
pop
jae
add
add
add
lock
jg
in
and
mov
push
out
add
add
adc
sbb
mov
push
decl
arpl
popf
test
push
test
je
das
push
fsubrl
push
roll
mov
jns
dec
fs
out
je
pushf
js
push
lret
cmpb
fdivr
mov
cmp
out
sub
adc
cmp
lret
xor
pop
xorb
test
pop
fidivl
mov
mov
icebp
jns
repnz
and
inc
fldenv
push
rorb
lds
or
das
repz
mov
aam
arpl
es
and
loop
jae
cmp
pop
push
push
mov
push
adc
leave
add
push
add
mov
adc
push
outsl
mov
cmp
push
cmp
mov
call
mov
pusha
sahf
andl
pushf
fildll
out
lds
dec
mov
mov
aam
out
imul
add
add
pop
xlat
fistpl
es
out
add
add
pop
pop
fmulp
loop
xlat
adc
or
inc
fwait
cmp
roll
fwait
add
cltd
icebp
imul
mov
int3
mov
stos
xchg
popa
movsb
adc
xchg
testl
jl
bswap
mov
jge
dec
jmp
cwtl
enter
push
test
inc
inc
bswap
push
iret
ficoml
imul
testb
xlat
scas
mov
int
leave
in
mov
adc
test
and
sahf
pop
push
out
adc
lods
add
insl
notl
xor
jmp
idivl
add
in
jecxz
or
cld
sbb
pop
sub
ljmp
lahf
mov
xchg
inc
inc
adc
jecxz
sub
xor
fs
push
and
enter
xchg
or
mov
sbb
cmpsb
stos
movl
xchg
outsb
dec
mov
push
inc
insb
dec
pop
in
xchg
ret
lea
jl
pop
dec
and
out
add
mov
add
add
mov
dec
js
stc
mov
dec
int
xor
and
add
add
scas
sub
xchg
pop
adcb
mov
lods
sbb
lock
rcrb
fisttpll
mov
push
pop
test
fldpi
shll
xchg
jo
outsb
les
mov
in
dec
adc
jl
shrb
lcall
inc
aaa
xchg
jmp
ss
aaa
inc
stc
sub
xchg
and
lret
xlat
mov
dec
xor
xor
mov
and
sbb
and
xchg
mov
test
add
lea
cs
pop
fsubs
in
stc
cmp
gs
pushf
loop
arpl
addr16
out
shll
orl
mov
dec
jge
mov
adc
adc
add
test
cmp
fcoml
mov
lret
pop
and
jo
cmp
mov
cli
jb
sahf
adc
mov
pop
insb
fildll
fwait
jns
jns
sar
sub
add
add
add
xchg
imul
push
outsl
aad
mov
xor
and
pop
and
imul
push
cmpsb
hlt
jno
inc
or
xor
nop
mov
and
sbb
addr16
jbe
mov
mov
clc
sub
pop
or
xor
aam
add
fnstenv
mov
push
pop
nop
pop
cmp
bound
insl
dec
push
movsl
cmp
arpl
gs
movb
mov
sub
dec
fs
movsb
test
jge
rcrl
mov
or
mulb
pop
sbb
xchg
data16
inc
data16
inc
mov
loopne
adc
dec
mov
lods
inc
ja
cmp
addr16
inc
das
cmc
inc
das
jo
fimuls
sbb
sbb
pop
push
pop
pop
cmp
pop
push
fiaddl
jmp
push
cs
repz
add
cmp
jnp
adc
jne
mov
ljmp
aas
in
fnsave
sub
fcompl
or
dec
mov
xor
and
test
xor
sub
movsl
push
cmp
mov
icebp
or
jo
inc
xor
jecxz
pop
call
jp
daa
insb
shlb
out
add
xchg
dec
popf
sub
cmp
dec
stc
stos
enter
xchg
adcl
push
icebp
xchg
mov
mov
enter
cwtl
push
out
inc
cmp
int3
xchg
mov
xor
xchg
add
adc
loop
or
pop
outsb
fwait
mov
iret
into
pushf
xor
push
es
pop
je
jno
pop
pop
push
mov
test
nop
lret
or
cmp
inc
inc
test
aam
std
sbb
out
fwait
sub
lahf
xchg
mov
into
adc
fldl
adc
jae
sti
scas
jp
add
jb
xchg
outsl
xchg
test
ss
aam
stos
cltd
jno
cmc
out
lods
xor
aas
xlat
fistl
das
cmpsb
lret
icebp
dec
xor
add
add
add
jnp
inc
pop
push
sub
movsb
jo
repnz
sbb
push
mov
xchg
pop
hlt
adc
shrb
cmc
dec
fcom
add
das
xchg
out
push
fs
push
fisttpll
repz
aam
mov
xor
int3
sub
shrb
or
mov
mov
mov
inc
mov
and
jle
cwtl
inc
adc
push
pop
push
int3
cld
ja
pushf
cltd
jmp
cwtl
mov
jle
aas
mov
insb
bound
inc
leave
lock
jmp
add
mov
cmp
mov
daa
in
das
cmp
mov
popf
outsb
shlb
fidivs
jge
out
jae
push
nop
andb
xchg
lods
das
imul
loop
and
jg
fsts
fidivrs
imul
into
into
jecxz
ja
push
fcmovu
or
xchg
add
add
jb
scas
decb
fisttps
ret
xor
add
add
add
sbb
in
push
ljmp
clc
jbe
dec
dec
aam
andb
pop
or
jmp
sahf
int
outsl
dec
inc
fs
out
and
sarb
rcl
gs
add
std
or
mov
sbbl
or
push
sub
inc
xchg
in
fs
push
pop
cmp
fmul
jo
ss
in
ret
sub
mov
pop
add
popf
push
mov
add
cmp
imul
push
aaa
add
pop
fucomi
xor
or
lret
pop
daa
mov
bswap
adc
outsb
adc
adc
pop
mov
or
test
mov
ror
aad
mov
mov
jne
add
fsubs
push
movsb
mov
sti
mov
and
and
fstl
and
add
sub
add
add
xlat
mov
xchg
orb
in
add
add
add
in
xchg
xor
adc
mov
arpl
arpl
test
cltd
jg
fsts
jp
mov
xchg
push
dec
out
or
xorl
sub
jb
inc
mov
add
ret
dec
fcmovbe
lock
loopne
cwtl
inc
mov
inc
fistpl
mov
ret
mov
sahf
jmp
jo
cmp
into
cmpl
dec
shl
jnp
xor
pushf
adc
adc
mov
sbb
add
sub
add
mov
shrl
loopne
xor
lret
fnstenv
push
and
and
cwtl
xchg
repnz
fimull
xchg
aam
inc
dec
out
fisubl
sub
repnz
loop
push
pop
sbb
dec
loop
jns
lret
xchg
stos
shr
cli
mov
das
xchg
fadd
jl
ss
dec
adcl
fldl
add
add
mov
aas
mov
xchg
leave
mov
out
add
add
add
xor
push
cmpsb
stc
inc
movsl
in
pop
cmpsb
adc
push
xor
push
cld
push
and
sub
ljmp
push
jbe
sub
enter
mull
insl
movsl
loope
loopne
xchg
outsl
sbbb
sbb
push
inc
or
sub
lock
jo
loopne
into
xor
mov
mov
mov
cwtl
stc
clc
hlt
in
test
loop
add
std
adc
inc
pop
cmp
outsb
push
mov
xchg
mov
inc
xor
mov
mov
fistl
mov
test
sbb
aam
dec
notb
inc
gs
int
fildll
cs
mov
ds
test
js
pop
mov
inc
movsw
dec
mov
xchg
das
outsb
inc
out
cmc
push
rcrl
mov
lcall
ret
ljmp
xor
loop
fadd
sti
mov
out
dec
clc
inc
out
add
add
add
push
imul
fwait
sub
xchg
add
out
cmp
dec
xor
in
cmp
dec
jle
aad
arpl
sti
in
mov
into
push
mov
push
push
jo
mov
je
mov
icebp
out
add
movsl
mov
bound
fnstsw
sbb
test
call
fbstp
icebp
jle
dec
call
adc
xchg
int
daa
call
scas
into
push
sbb
in
mov
jge
mov
sub
sub
inc
dec
adc
fsubr
out
push
and
lea
and
pop
out
divl
pop
ljmp
cli
test
shrl
ss
lret
sbb
lods
jae
stc
and
inc
sub
mov
jmp
stos
es
xorb
ss
pop
add
aam
jge
ds
repz
ja
and
sbb
mov
bt
jmp
push
cmp
adc
neg
jge
xchg
jns
add
add
add
add
and
gs
mov
push
pop
lods
divl
stos
sti
push
ret
sub
cld
add
jnp
aaa
mov
loop
pusha
aas
nopl
bound
cmpsl
cmp
imul
cmp
mov
cltd
sbbb
fidivs
das
adc
mov
mov
push
and
aam
or
inc
or
aad
mov
out
in
mov
scas
inc
insl
rolb
aaa
jle
scas
adc
cmp
adc
sub
jns
call
mov
mov
mov
jl
scas
dec
cmc
cld
jp
xor
xor
push
loopne
inc
pop
arpl
ret
jbe
adc
dec
imul
push
ret
adc
outsb
aam
mov
mov
aad
mov
mov
xchg
cmp
xlat
jbe
jl
bound
popf
out
std
in
std
popa
sbb
movsl
pop
cmp
outsl
jg
jg
sub
fidivl
icebp
add
add
add
xchg
test
mov
into
mov
mov
xor
aas
in
and
xor
xlat
fsubr
add
loopne
rcrb
hlt
cmp
adc
ss
and
movl
mov
inc
jle
cli
pop
xchg
and
pop
xor
sti
subb
dec
pop
push
mov
sarl
jmp
push
aas
pushf
jmp
callw
cmc
push
mov
push
fcmovnbe
ljmp
adc
inc
lock
enter
cmp
sub
mov
es
pop
sub
dec
icebp
cmpsb
mov
or
mov
dec
shl
scas
xor
or
ja
clc
imul
push
icebp
cmp
pop
sub
sahf
mov
call
outsb
arpl
jmp
jae
and
lcall
test
push
in
les
add
add
ja
and
aaa
divl
sbbb
add
add
mov
lds
sub
insb
pushf
and
dec
mov
lcall
adc
and
push
loope
into
subl
cmc
sub
gs
xchg
jp
xor
ss
jmp
es
add
popa
add
pop
mov
pop
add
push
mov
cmp
pop
test
bound
int3
sbb
lret
jbe
push
fisttps
inc
mov
mov
mov
sti
xor
or
jnp
shrd
inc
mov
jne
fsubl
xor
inc
xor
xchg
mov
movsb
or
popa
movl
pop
outsl
sbb
movsb
sbb
mov
pop
pop
cs
xchg
hlt
adc
pop
lock
jb
cld
inc
ror
subl
sti
in
cmpsl
aas
xchg
ret
jge
xchg
gs
xor
hlt
mov
xchg
mov
lock
mov
popf
test
adc
inc
mov
xor
push
imul
add
add
mov
cmc
mov
cmp
repnz
repz
add
add
cmc
or
jno
push
lret
repz
xor
fdivl
push
mov
xor
imul
fwait
push
dec
mov
mov
sub
fdivr
cld
add
sub
test
and
pusha
notb
inc
lods
cmp
mov
pop
jg
mov
popf
adc
pop
mov
xabort
mov
jmp
mov
pop
dec
inc
inc
dec
sbb
jbe
stc
xchg
es
mov
xor
xchg
arpl
sahf
mov
cmp
lret
lret
inc
in
mov
push
scas
jle
repz
push
jns
add
iret
mov
testb
testb
stos
fisubl
adc
cmp
hlt
mov
sbb
and
pop
mov
inc
out
in
jbe
movsl
dec
push
mov
pop
xor
aaa
jle
sahf
clc
fldt
fmul
ret
sbb
icebp
jle
jne
pusha
popf
pop
orl
add
add
add
int
in
jae
dec
push
sub
movsl
sub
and
mov
xchg
insl
js
cmpsl
and
popf
enter
mov
inc
aam
add
sub
or
mov
jnp
and
out
mov
fprem
adc
or
movsb
subb
into
rorl
push
fs
xchg
inc
jb
dec
push
loope
push
jecxz
xchg
pop
das
shll
cmp
adcb
cmp
in
jl
adc
into
inc
cltd
adc
adc
mov
inc
mov
sbb
sbb
fsubrl
lock
or
dec
adc
xor
dec
dec
sub
popf
incb
or
ret
ret
in
jmp
push
lods
movsl
stc
add
jns
mov
sub
addb
loope
pushf
sbb
inc
jns
dec
mov
icebp
dec
and
push
ja
mov
movsl
in
sbb
rclb
fs
add
imulb
mul
xor
loop
cmc
add
add
add
mov
rolb
movsl
fisubs
stos
adc
cmp
in
xchg
mov
or
and
sub
pop
cmc
ret
add
push
cltd
fldt
ljmp
jg
out
adc
xchg
outsb
push
pop
aam
sub
stos
mov
hlt
and
xchg
push
in
jmp
add
pop
mov
orl
push
out
xchg
ljmp
iret
fcoms
and
adc
aam
or
adc
xchg
cli
pop
and
out
dec
push
sub
dec
xlat
scas
scas
jo
mov
out
push
outsl
xor
dec
inc
pusha
jo
xchg
adc
insl
loopne
dec
inc
jecxz
popf
jecxz
mov
pop
xor
js
or
lret
out
data16
cmova
sbb
lock
dec
dec
call
inc
outsl
add
iret
das
pop
xchg
xlat
mov
xchg
addr16
idiv
cmpsl
dec
scas
mov
fisubrl
sub
shl
cmpb
pop
fs
ret
add
xor
jb
jae
jno
mov
pop
testb
add
add
out
into
cwtl
xchg
das
mov
popl
mov
push
inc
sti
push
cs
and
xor
dec
dec
sbb
inc
xor
ret
testl
aam
loopne
jae
and
and
sahf
dec
imul
out
adc
ret
jmp
in
iret
push
cmp
jmp
mov
mov
stos
inc
push
imul
fisttps
sub
lods
daa
nop
arpl
mov
inc
in
adcl
aas
sub
sbbb
push
out
test
int3
inc
ficoml
in
popf
pushf
mov
xchg
leave
into
inc
xchg
lcall
or
or
cwtl
inc
pop
xchg
push
pop
addr16
adc
dec
dec
xchg
pop
and
cmp
roll
pusha
xchg
cli
or
jnp
push
xchg
fwait
adc
inc
fwait
sub
sub
in
lret
mov
adc
out
shll
cwtl
jb
xchg
lret
cmp
adc
int
in
idivl
js
mov
push
sub
xor
add
add
add
push
inc
and
enter
push
mov
and
cmpsb
mov
push
outsb
outsl
outsl
sub
or
add
aam
loopne
sbb
repnz
or
cmc
ret
mov
fcoml
lds
or
sub
xor
sbb
lods
popf
loope
call
ss
push
cmp
and
out
jne
pop
hlt
stos
mov
push
jnp
xor
xchg
aas
push
daa
ja
andb
xchg
jle
lret
les
push
xchg
inc
test
mov
stc
aad
sub
sub
mov
std
fs
jns
fmull
adc
mov
loope
into
xor
add
ret
mov
add
lret
xchg
cmp
lea
jae
cmp
or
ss
rcrb
jg
test
stc
std
enter
out
mov
dec
icebp
gs
lret
cmpsb
decl
es
mulb
push
cld
loopne
add
add
jecxz
inc
cli
aas
into
lret
loope
and
clc
add
add
add
cli
mov
mov
vmovaps
xor
xchg
ret
sbb
ss
bound
lcall
inc
fidivrl
push
push
jmp
out
sahf
std
and
pop
loopne
inc
push
stos
fldcw
outsb
jns
jmp
in
mov
fbstp
jne
in
fwait
pusha
mov
mov
daa
push
mov
mov
scas
push
mov
outsl
push
cld
mov
inc
scas
scas
add
xchg
out
inc
insl
xchg
inc
or
dec
test
jnp
pushf
mov
arpl
neg
inc
in
loope
das
or
dec
call
ret
cmp
sbb
fisttpl
loopne
ljmp
jb
dec
push
negb
sbb
fisttps
mov
test
clc
dec
adc
lds
push
dec
sbb
fmuls
mov
dec
int3
inc
mov
ret
jno
inc
loop
dec
mov
inc
mov
loopne
push
mov
lcall
or
notb
add
add
xchg
repz
inc
fisttpl
frstor
icebp
jbe
je
mov
jle
mov
shll
add
fcmovnbe
cs
push
movsb
lea
or
push
jmp
mov
cmc
lcall
jae
xchg
add
aad
mov
sub
cltd
fucomp
mov
fcmovnbe
xchg
push
fstps
pushf
fidivrs
or
leave
pop
fnstsw
xchg
sub
push
xchg
cmc
jg
enter
loope
add
into
cmc
test
cmp
insl
or
and
mov
adc
repz
add
negl
or
ljmp
rcl
mov
dec
inc
jb
mov
jmp
in
enter
popa
adc
inc
sbb
decl
pop
rorb
loop
call
popa
jmp
mov
adc
jo
mov
out
fcompl
pusha
negb
sti
subl
mov
neg
xchg
push
push
add
aaa
jae
cltd
dec
mov
jno
fs
xor
add
add
dec
pop
sbb
jne
or
paddsw
inc
push
dec
inc
fcomps
mov
fiadds
xchg
cmpsl
sbb
icebp
lret
push
enter
sbb
ja
mov
lret
dec
cwtl
addb
add
inc
jp
mov
imul
gs
out
jecxz
mov
jp
adc
pop
repz
jmp
xor
jo
dec
sbb
sub
lods
sbb
xchg
sbb
mov
cmpsl
lock
add
dec
xchg
mov
mov
ret
jl
sbb
into
dec
ret
mov
data16
xor
aam
punpcklbw
push
fstpl
mov
pop
jnp
test
dec
cmc
xlat
fsubrs
mov
and
arpl
insl
mov
call
nop
fidivrs
das
and
dec
jecxz
mov
or
notl
stos
jb
mov
xchg
jo
xchg
ds
into
nop
out
cwtl
jle
push
sub
dec
cli
mov
in
jo
add
add
add
call
cmpsb
xchg
sti
test
xlat
popf
mov
mov
fiaddl
add
lahf
and
ret
mov
or
cli
xchg
nop
pop
sbb
scas
sahf
push
jp
stos
aas
mov
ljmp
movsb
cmp
push
popl
pop
or
movsl
leave
xor
clc
adc
push
daa
cmp
lcall
repz
lret
dec
jl
outsl
or
jg
cmp
out
mov
or
or
xor
mov
pop
pop
mov
aaa
jmp
xchg
movsl
xor
xor
dec
add
fs
push
fdivrl
mov
dec
cmp
loope
movsl
lahf
adc
xor
inc
mov
fsts
or
call
notb
push
pop
mov
push
adc
in
in
je
pop
push
xchg
push
add
daa
fisubl
add
ret
jo
cmp
bound
add
add
test
jg
push
pop
push
mov
je
add
add
add
in
sbb
popf
or
pusha
xchg
shrb
shl
testb
xor
jnp
push
xor
pop
adcb
sub
scas
cmp
inc
mov
lret
cli
push
jb
mov
movsl
pop
scas
inc
aaa
mov
mov
xor
outsb
pushf
mov
bound
push
les
pop
lock
out
into
lret
lods
push
mov
jg
mov
jne
dec
mov
adc
test
dec
fistpll
mov
fninit
ss
cmpsb
imul
cltd
fwait
push
cli
rcr
jl
imul
jns
or
das
sbb
lods
xor
jge
add
push
hlt
std
loope
enter
cmp
inc
leave
pop
jg
aam
es
jecxz
inc
popa
jb
ss
inc
jp
mov
jne
cmp
clc
mov
nop
shlb
call
dec
cmp
add
add
add
movsb
push
in
cmc
jne
sbb
js
fisttps
add
add
imul
sub
mov
sub
lods
mov
lret
push
push
pop
leave
mov
push
push
sub
fsts
js
dec
mov
stos
js
loopne
push
push
bound
jae
sub
push
inc
jecxz
mov
jl
mov
xchg
jne
daa
cli
adc
sbb
les
jmp
popa
lret
xchg
sbb
lret
pushf
jle
imul
jno
dec
push
and
insb
or
push
repz
cwtl
fisubl
loope
into
sub
popa
fs
push
popa
test
add
jge
add
pop
mov
pushf
mov
xor
mov
int3
or
sub
sub
cmpsl
cmp
adc
cmp
mov
lret
push
inc
fistl
add
cltd
sbb
xchg
lods
je
iret
xor
push
mov
mov
mov
aam
cli
stos
xor
fsts
bound
add
add
out
shlb
aas
out
int3
mov
sub
jnp
jl
add
add
add
lahf
xor
into
push
jno
movsl
pushf
xchg
icebp
aam
mov
in
das
push
mov
repnz
in
mov
add
gs
test
adcb
push
lock
or
jge
xchg
adc
push
jge
data16
xchg
fs
std
stos
jmp
mov
xchg
mov
jg
out
scas
add
fs
into
xchg
mov
inc
scas
push
sbb
cwtl
dec
mov
out
das
and
fistl
add
scas
mov
cmp
jno
mov
dec
xlat
adc
sbb
call
sub
leave
rclb
cltd
or
cmpsb
dec
or
add
movsl
mov
xchg
mov
pop
push
or
stos
adc
pop
mov
xor
xor
fimull
adc
mov
mov
or
or
mov
and
xor
movsl
cmp
add
add
sub
xor
sbb
cld
fcmovnu
push
xlat
sub
inc
jne
add
stc
pop
add
inc
add
xchg
mov
xchg
sub
fs
lcall
adc
pop
add
cmp
pop
nop
in
jg
stos
fcmovnbe
jno
out
ficompl
pushf
and
mov
jmp
fs
inc
xchg
ret
jo
test
jbe
fsts
ja
call
mov
roll
popf
ss
xlat
aaa
inc
enter
sbbb
xchg
jo
inc
adc
fadd
mov
jp
flds
push
mov
mov
mov
int
je
mov
dec
arpl
xchg
pop
fildll
scas
add
sub
push
sbbl
jge
adc
adc
mov
xor
lahf
movsl
dec
test
ror
into
lret
xchg
inc
push
fwait
inc
jle
xchg
stos
mov
jbe
les
xor
mov
add
add
ret
bnd
cmc
inc
stos
repz
test
add
add
add
scas
sub
cmc
mov
mov
mov
adc
popf
into
mov
ja
mov
stos
lods
repnz
mov
inc
dec
aam
stos
push
jg
pop
mov
or
cmpsl
fsubl
outsb
mov
imul
clc
enter
mov
mov
inc
fs
mov
test
mov
and
adc
and
push
movsl
out
dec
push
popf
lret
sbbb
cld
icebp
aad
out
or
pop
fcmovb
push
sbb
mov
mov
push
xchg
lods
cs
pop
pop
xchg
mov
inc
xchg
cltd
stos
pop
daa
test
lret
adc
cwtl
jbe
lea
popf
popf
add
mov
sahf
aaa
pop
scas
ret
jecxz
cmpsl
movsl
mov
cltd
loopne
adc
jnp
or
adcl
jae
scas
hlt
jl
dec
outsb
and
jmp
ljmp
xchg
clc
jo
scas
add
std
aaa
mov
shll
xchg
mov
add
add
add
or
rcrb
ret
int3
lea
fcmove
lcall
mov
test
mov
loopne
mov
repz
icebp
addr16
mov
xchg
aaa
fwait
idivl
pop
loop
shlb
xor
fimuls
push
in
lea
push
mov
jnp
or
fisubs
inc
pop
std
pop
pop
push
mov
gs
xor
bound
in
repz
add
pop
js
int
sti
dec
add
jns
int
es
xchg
inc
push
ror
cmp
aam
outsb
inc
pusha
repz
cmp
mov
cmpsb
stc
mov
jp
cmp
mov
jbe
in
inc
add
movsb
or
sahf
lds
mov
dec
dec
xchg
int3
mov
scas
push
dec
icebp
jnp
data16
rorl
jb
add
aaa
fsub
mov
push
mov
sub
data16
mov
add
insl
aam
mov
scas
add
sub
or
add
push
sbb
mov
push
fistl
std
lods
sbb
fcmovnb
das
subl
cmc
pop
xchg
lret
jl
and
add
ret
or
inc
rcll
pop
sbb
inc
hlt
xchg
mov
lret
je
or
ss
cmp
xor
xor
repnz
aad
outsl
push
ljmp
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
in
sub
iret
mov
das
sub
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
