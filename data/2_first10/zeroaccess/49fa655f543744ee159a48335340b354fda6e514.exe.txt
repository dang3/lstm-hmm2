mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
cmp
mov
push
add
jmp
mov
ffree
xchg
out
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
sbb
adc
enter
insl
mov
iret
pop
mov
movsb
loopne
icebp
jmp
xchg
repz
or
mov
pop
and
fs
cwtl
or
sub
pop
sbb
mov
mov
and
jmp
sbbw
xchg
ljmp
ret
pop
jnp
or
pop
jns
out
mov
fstpt
daa
mov
xor
xchg
sub
inc
mov
sub
cs
es
mov
jae
test
pop
pop
mov
mov
sub
lods
jmp
jnp
mov
or
stos
popa
mov
add
mov
int
dec
jno
cmp
js
cmc
decl
xchg
mov
ret
mov
jg
xchg
dec
dec
or
pop
mov
xchg
xor
movsb
pop
dec
push
and
add
aas
jle
xchg
and
push
sbb
cmpsb
ljmp
arpl
out
cmpsl
pop
dec
dec
cmp
xchg
add
dec
jne
cli
dec
cltd
push
scas
in
jle
jnp
and
int
das
add
lods
fiaddl
cbtw
test
aaa
xchg
ds
out
pop
jnp
addr16
mov
cltd
lock
testl
sahf
in
into
imul
movsl
mov
sub
pop
insb
mov
daa
in
mov
ret
jp
in
adc
xchg
movsb
scas
push
fimuls
addr16
pop
divl
jb
xorb
fiaddl
aas
dec
xchg
fs
fs
ds
xchg
jbe
movsb
add
mov
cld
frstor
out
hlt
rol
sub
sti
insb
inc
inc
insl
sub
mov
and
pop
sub
mov
cmpsb
sbb
loopne
mov
mov
sub
mov
push
movsb
inc
xchg
sbb
or
push
inc
and
in
sbb
mov
dec
in
jae
lods
test
or
movsb
xchg
dec
call
jae
cmp
cltd
loope
gs
xchg
adc
hlt
push
outsl
insl
scas
shrb
xchg
or
ret
insl
stos
das
out
in
decl
sbb
orl
enter
dec
dec
mov
outsb
outsb
sub
xchg
push
cld
sub
int
mov
popa
lock
cmp
fnstenv
sub
pusha
sarl
jmp
adc
sbb
push
jns
loop
test
aad
adc
fcom
or
jge
inc
cmp
and
mov
xor
jp
push
push
xchg
shrb
in
cltd
repz
lret
jl
xor
pop
pop
cmp
dec
mov
hlt
in
aas
cmp
and
add
mov
jecxz
cmc
inc
addl
adc
inc
mov
movsl
mov
popa
inc
mov
push
sbb
xorl
movb
repz
inc
jo
daa
adc
adc
add
stos
sub
repz
inc
insb
xchg
in
jle
dec
cmpl
mov
sub
rorb
shl
pushf
cwtl
sub
pop
aad
sub
inc
jbe
lcall
dec
fcomp
sbb
lea
cmp
cmp
add
fsubrs
sub
call
mov
gs
or
add
sub
imulb
aam
inc
sahf
jb
mov
add
or
pop
int3
outsl
jns
lret
mov
sbb
push
cmpsl
jae
in
sbbb
ja
lock
int
xchg
stc
imul
adc
mov
push
or
push
sbb
push
xchg
cld
cs
sbb
jmp
popf
and
pop
sub
adc
jb
sbb
dec
push
nop
dec
inc
lea
dec
in
mov
mov
fwait
push
sahf
mov
mov
loope
add
mov
in
cmp
xlat
cmp
mov
cld
push
cmp
or
inc
cmp
neg
shll
leave
inc
movsb
cmc
sbb
sbb
pushf
mov
push
push
pop
and
dec
imul
fcoms
arpl
mov
inc
insl
adc
or
clc
push
stc
cmp
xchg
lcall
jbe
shrl
sub
loope
lods
xor
stos
inc
decl
cmp
adc
or
push
pusha
je
loope
jo
jecxz
ret
mov
aaa
outsl
shll
pop
test
ret
or
mov
in
sub
mov
loopne
pop
ljmp
lcall
les
add
push
xlat
clc
stos
push
cmpsb
jbe
ss
xor
adc
mov
jae
aad
or
or
frstor
sub
pop
rorl
arpl
dec
aam
iret
js
dec
pop
mov
loop
adc
cmpsl
xor
push
bound
cmp
lods
or
outsl
fdiv
mov
mov
xor
cmpb
scas
push
in
xchg
push
sbb
mov
fisubl
outsl
pop
in
mov
jg
loop
cmp
xor
js
pop
xchg
test
jnp
jp
cmp
or
fstpl
mov
sbb
fidivrs
mov
adc
ficomps
mov
es
mov
mov
bound
loope
cs
scas
notl
push
aam
push
jne
loope
jno
aad
mov
ret
xlat
cmp
fiadds
ds
sub
inc
push
enter
movsl
lcall
and
mov
jnp
iret
jb
pop
mov
sti
imul
repnz
repz
dec
push
clc
lods
xor
les
sub
mov
stos
xlat
sub
sub
movsl
cmp
xor
aaa
sub
cmp
mov
cli
hlt
adc
roll
jne
jns
stc
out
mov
or
pop
and
mov
xor
pop
xchg
xchg
lret
sbb
xor
int
std
into
adc
push
add
pop
mov
int3
sub
call
andl
add
test
shll
popa
into
mov
cmc
in
aas
fisttps
push
lcall
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
psubd
inc
push
mov
in
notb
pop
shlb
inc
mov
testl
icebp
and
push
push
mov
movsl
jl
dec
sub
shrb
jnp
ror
xchg
insb
pop
js
jle
xchg
test
lret
mov
dec
test
push
in
mov
out
cmc
adc
fildll
cmp
stos
pop
pop
jno
gs
lret
xchg
fstl
xchg
and
mov
mov
xor
and
int
xor
mov
xor
push
imulb
dec
je
je
xor
add
dec
pop
push
loop
in
dec
dec
xchg
jnp
es
mov
movsb
lods
push
imul
pop
lods
dec
ret
add
je
shr
add
pushf
rcrl
ret
push
ret
mov
jno
jg
mov
xchg
call
sbb
pop
insl
dec
sub
sbb
popf
movsb
jo
xchg
mov
sub
add
in
imul
ljmp
sbb
mov
jmp
push
bound
gs
sbb
jmp
fildl
int3
shr
and
lock
mov
push
repnz
das
mov
fstpl
popa
dec
xchg
push
ja
jns
into
sti
pop
mov
call
xchg
in
pop
sub
mov
fists
cmpb
int
outsl
xorl
test
leave
push
add
sub
adc
push
xchg
xchg
lods
ret
xchg
jp
push
decb
pop
jb
dec
adc
or
pop
add
inc
cltd
cmpsl
das
inc
lods
inc
pop
and
lahf
sti
lods
mov
pushf
mov
xor
daa
and
stos
inc
lods
sub
inc
ret
dec
push
repnz
mov
pop
test
fstps
cmc
nop
aad
pop
pop
push
jl
mov
fsubrl
ja
push
in
xchg
and
mov
sbb
or
and
mov
stos
imul
mov
shlb
inc
dec
ja
lret
sub
bnd
int3
mov
mov
jle
adc
aas
adc
icebp
sahf
std
sub
pop
jle
fwait
sti
adcl
jge
inc
jg
lcall
cmpsl
sbb
sarb
sbb
in
rcll
push
dec
inc
stos
xchg
and
xor
jo
mov
jns
pop
stc
pop
std
ror
xchg
pavgw
push
test
pop
je
mov
xor
lock
outsb
adc
push
dec
pop
shrb
adc
leave
dec
leave
push
out
cwtl
js
outsb
lret
mov
or
ret
mov
mov
mov
rorb
xlat
push
addr16
repnz
les
adc
lcall
orb
dec
sub
push
mov
mov
ja
int
andb
lods
lahf
add
inc
adc
clc
lods
mov
dec
rclb
in
jecxz
fcomps
enter
jno
sahf
pop
jp
push
inc
jge
cwtl
std
mov
xlat
adc
outsb
xchg
adc
inc
add
sbb
shll
push
adc
fcoml
arpl
flds
or
sbb
es
daa
test
stc
sub
push
inc
cmp
sbb
sbb
xchg
js
dec
aam
cwtl
int3
arpl
and
inc
lea
jmp
and
pop
mov
cmp
out
repnz
mov
ss
nop
movl
jp
mov
fdivrs
adc
cmp
into
fucomip
cmpsb
jl
jecxz
mov
xor
bound
push
xbegin
dec
jb
mov
mov
aad
aas
xchg
cmp
jl
mov
xchg
sub
imull
nop
daa
fcompl
lret
lret
mov
xor
aad
bound
lahf
test
lods
push
into
shl
xchg
insl
loop,pn
roll
mov
jne
sub
or
push
insb
in
add
mov
and
xchg
repz
lods
cld
test
cmpsl
les
mov
mov
test
lods
pop
push
jae
push
mov
mov
lret
mov
add
subl
jp
movsl
shlb
or
inc
rclb
jl
mov
lret
pop
xchg
std
in
movsl
mov
iret
mov
jmp
sbb
rcrb
mov
xchg
lret
pop
cmp
jge
xchg
out
or
jnp
jge
ret
pop
lods
rcr
pop
push
sahf
jle
fwait
arpl
es
idivb
popf
inc
ret
pop
test
mov
push
sbb
cmpsl
fwait
dec
les
cmpsb
inc
pushf
psrlw
sub
pop
cld
je
pop
icebp
loop
cltd
loope
xchg
adc
cld
or
sbbl
jg
push
cmp
iret
sub
mov
pusha
dec
mov
popa
lock
rcrb
sbbl
or
stc
or
test
xor
loop
aad
and
shl
iret
or
jns
in
push
or
mov
mov
mulb
ds
adc
and
mov
xchg
mov
movsl
cmp
sti
std
in
adcl
dec
test
fchs
pop
decl
or
dec
sub
xchg
fnsave
pop
push
cltd
out
pop
pop
sub
sar
add
stc
imul
push
repz
and
xchg
js
repz
cmc
pcmpgtb
andl
xor
jbe
fstpt
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
setbe
mov
jle
xchg
lahf
out
jmp
bound
shr
loop
sahf
stc
ret
add
fbld
sbb
push
pop
mov
or
lcall
arpl
xor
sahf
cmc
daa
or
jae
negb
int
mov
xchg
icebp
jle
std
in
mov
les
popa
out
dec
mov
push
xchg
pop
icebp
mov
pop
test
inc
and
mov
add
es
pop
push
xchg
ret
pop
xor
out
loop
mov
je
push
in
aaa
push
in
mov
push
lods
push
xor
jl
cmp
call
cmpsl
rcrb
pop
add
shrb
and
gs
sub
dec
outsl
sub
stos
ss
fisttpl
loope
xor
cmpsl
jp
cwtl
shl
jmp
lock
xchg
lret
in
movsl
andl
out
shlb
mov
lret
jecxz
sub
and
sahf
fsts
call
and
inc
xchg
test
xchg
pop
rcll
andl
push
insl
inc
dec
push
ss
pop
dec
dec
pop
and
rcl
ja
pop
push
mov
mov
imul
add
cmc
in
in
cli
xchg
sbb
in
call
pop
jl
jp
imul
inc
sub
lret
fwait
mov
and
cmpsb
or
cmp
add
jl
push
mov
or
repnz
stos
jo
scas
sahf
and
pop
jae
push
inc
mov
lret
pop
jnp
pop
push
cmp
xchg
dec
inc
leave
cmp
cmp
jg
test
scas
lock
dec
pop
inc
lret
mov
fwait
cmp
sbb
daa
imul
push
cmp
sbb
or
xchg
sub
push
rcr
mov
pop
pop
cs
sbb
pop
enter
pop
dec
stos
cmpl
jne
hlt
lret
inc
xlat
or
js
fadds
jecxz
leave
mov
vmovdqa
test
sbb
ljmp
or
ljmp
cmp
mov
jne
xor
pop
pop
outsl
mov
sarl
dec
mov
inc
ret
push
hlt
ret
or
repnz
int3
jmp
xor
dec
daa
in
in
xchg
in
imul
out
in
in
sbb
jl
lock
sub
cmp
aas
add
add
hlt
leave
jg
dec
cld
pop
sbb
aas
mov
xor
push
popf
lods
jne
addl
push
outsl
sub
bnd
xchg
cmc
xchg
imul
inc
jo
pusha
out
push
inc
out
push
inc
popf
sbb
jns
mov
mov
cli
je
fsubl
mov
sub
inc
cmp
lods
addl
fldenv
inc
ljmp
dec
mov
jecxz
daa
lods
inc
mov
fwait
imul
mov
xchg
inc
lods
mov
aad
lcall
fdivrp
les
inc
sti
div
loop
addr16
outsl
cmp
mov
mov
pop
adc
sbb
jns
data16
cmp
cs
mov
or
cmp
lods
mov
fcompl
jge
pop
xlat
arpl
fcmovu
xor
inc
sub
cmp
sub
loopne
adcb
ja
ss
push
hlt
ja
fistpll
or
shll
popf
sub
mov
push
and
lock
or
fucomip
xchg
push
in
and
sbb
pop
pushw
sbb
cmc
scas
inc
dec
push
in
xchg
test
scas
jge
call
inc
faddp
popf
push
fwait
outsb
push
pushf
cmp
arpl
jle
loop
pop
rcr
adc
cmp
adc
outsb
push
insl
je
rolb
in
pop
xchg
cmpsb
dec
out
stos
andl
inc
outsl
rclb
xchg
push
loope
push
sahf
push
test
pop
jecxz
jg
dec
and
pop
ss
pop
mov
jmp
movsb
enter
ficoms
add
ljmp
shll
call
insb
stos
cmp
sbb
out
lods
dec
xlat
daa
clc
cmpsb
out
rorb
rcl
test
sbbb
fsubl
out
stc
out
je
scas
cmp
pushf
movsl
sub
mov
mov
icebp
lret
adcb
xor
add
ss
and
outsl
inc
push
jb
mov
push
sbb
je
pushf
cs
fldl
xchg
mov
push
xor
sub
mov
into
call
int3
or
fdivs
test
and
pop
jg
xor
das
gs
mov
sub
xchg
xchg
test
mov
mov
clc
cmpb
mov
cwtl
pop
jle
push
xor
jno
into
xchg
loopne
aam
push
sub
and
jl
push
fistps
inc
mov
mov
mov
call
dec
xlat
and
mov
xor
sub
cmc
cmp
adc
jl
and
add
mov
pop
jae
xor
mov
jmp
lea
in
xor
int3
jg
or
cmpsl
sub
or
and
push
scas
push
or
pop
sbb
inc
hlt
sub
or
xor
fs
aam
call
jne
inc
jl
push
push
mov
cmp
dec
mov
out
mov
jbe
lods
and
roll
sti
insb
call
and
hlt
test
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
xchg
mov
pinsrw
seta
dec
addr16
lea
mov
cmp
std
and
cwtl
mov
je
pop
gs
mov
jnp
mov
add
dec
push
dec
cs
sbb
sbb
xchg
inc
bound
xor
sti
lea
sarl
mov
repnz
adc
push
shrb
outsl
add
jle
dec
test
pushf
ret
ds
lock
lahf
and
pop
xlat
pop
jno
loope
dec
xor
sti
adc
nopl
icebp
xor
xor
sub
sub
pop
cmp
adc
cltd
lock
adc
dec
cld
or
out
adc
sbb
adc
adc
ja
fs
lret
imulb
les
test
stos
sarb
cs
push
loop
mov
sbb
in
or
push
incb
mov
sub
pop
lcall
stc
cmp
loope
pushf
lahf
sbb
adc
test
dec
add
adc
or
sti
xorb
clc
sub
mov
mov
movl
push
mov
les
dec
mov
bound
insb
test
and
cs
mov
in
stos
outsl
mov
mov
icebp
and
mov
or
xchg
and
add
jp
pop
add
or
push
cmp
jae
jl
test
or
mov
push
fwait
mov
cltd
mov
dec
mov
fmul
xchg
into
mov
mov
movsb
fdivrl
pop
adc
cmp
mov
fstl
adc
mov
inc
or
mov
notl
mov
movsl
mov
inc
ss
xor
ja
inc
mov
jge
and
loope
pusha
or
mov
push
xchg
jmp
mov
push
stc
or
sub
pop
sub
push
mov
mov
inc
hlt
rclb
into
mov
mov
outsw
sti
rol
bound
bound
inc
dec
sub
mov
mov
dec
mov
pop
mov
sub
ret
shll
push
cmpsl
scas
xchg
fstps
data16
sbb
insb
xchg
lods
fimull
in
mov
std
xchg
cmpsl
loopne
dec
cmpsl
cmp
add
test
and
mov
rcr
jno
cwtl
lock
cmp
jbe
popf
push
rcl
xchg
andl
shlb
mov
jge
fisttps
addl
add
mov
rcrl
test
push
sub
xorb
inc
pop
enter
out
jge
cmp
dec
sbb
lcall
and
cmpsb
repnz
mov
out
mov
add
shll
sub
push
test
test
sub
xor
and
jl
pop
and
or
mov
icebp
jp
ljmp
pop
ss
in
inc
mov
cs
rcrl
push
seto
xor
inc
aad
je
pop
out
push
ljmp
pop
insb
decb
jne
outsb
sbb
jp
pusha
rcrb
mov
push
mov
xor
xchg
mov
cmp
inc
lret
stc
lods
pop
cli
std
adc
jmp
pop
das
mov
inc
aas
fimuls
xor
or
scas
std
pushf
and
in
inc
fdivp
rorb
rcrb
xchg
xchg
inc
adc
repnz
dec
inc
xor
or
arpl
inc
stos
stos
mov
mov
fldcw
push
cmovg
jnp
out
adc
push
dec
mov
repnz
testb
repz
mov
xchg
popa
xchg
mov
xchg
dec
fdivl
mov
jnp
xor
cmc
pop
stc
adc
mov
aas
xchg
push
pop
loope
pop
jb
outsb
ss
adc
xchg
lds
inc
pop
fcomps
lret
push
call
xlat
mov
addr16
cmpsl
xchg
add
mov
jmp
cmp
jg
jnp
inc
push
dec
jmp
lock
shlb
jmp
sbb
loopne
mov
sti
sbbl
xchg
xor
cmp
icebp
in
into
ret
mov
adcb
jbe
inc
dec
dec
mov
idivl
fs
ljmp
cmp
call
ret
sbb
jmp
jns
xor
push
push
lods
mov
add
sbb
sub
dec
loopne
pop
jns
and
mov
lods
xor
dec
pop
aam
sub
push
xchg
adc
sahf
inc
xor
mov
sub
pop
mov
ja
xchg
addr16
das
imul
mov
and
add
push
js
sbb
adc
fwait
xchg
dec
fistpl
mov
subb
nop
aam
cmpsl
idivb
sbb
call
adc
test
mov
cvtpi2ps
sbb
pop
stos
arpl
pop
sbb
mov
jmp
xor
stos
outsb
sbb
fstpl
jne
jo
sub
ss
dec
pop
insb
iret
cltd
imul
das
xchg
xchg
mov
aas
call
mov
ja
jecxz
cmpsb
mov
fcmovb
cs
cmp
add
xor
xchg
lods
xchg
imul
jb
xchg
mov
mov
fsubrs
and
les
dec
xchg
cld
lods
mov
test
in
adc
pop
fsubl
inc
popa
and
sti
stos
data16
or
cs
cmp
mov
or
mov
scas
addl
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
movsl
mov
pinsrw
andnps
or
inc
jle
out
repz
inc
imul
aas
sub
pop
xor
hlt
es
inc
fchs
xchg
adc
loopne
dec
fidivrs
pop
test
shl
mull
ret
jecxz
das
push
adc
sbb
roll
mov
ja
dec
sub
test
or
dec
stos
inc
in
stos
pop
into
cmp
sub
inc
test
sub
fcoms
jnp
mov
outsl
add
lcall
or
dec
cltd
fldcw
fs
xchg
mov
jne
enter
das
adcb
scas
imul
hlt
add
sub
sub
push
jge
sub
add
xchg
test
or
ret
mov
adc
inc
popaw
add
out
add
lods
mov
movsb
dec
in
int
into
addr16
pop
dec
push
sarb
or
xor
or
icebp
repnz
inc
xor
arpl
lods
ljmp
cmp
or
imul
shrl
mov
xchg
mov
ljmp
xor
and
lock
popf
and
mov
cmp
mov
xchg
push
je
mov
mov
loop
dec
inc
stos
dec
mov
int
sbb
les
jge
fwait
xchg
out
les
imul
pop
pushf
lret
repz
mov
or
or
push
lea
hlt
adc
pop
mov
addl
stos
jnp
hlt
out
std
adc
dec
xchg
cmp
fistl
rcrl
xor
mov
ret
xchg
fistpll
sbb
test
add
push
xchg
sub
dec
and
and
aad
fldenv
scas
icebp
rcl
mov
pop
xor
jmp
aad
push
daa
cli
and
jle
dec
cmp
aam
mov
xchg
xor
ret
or
mov
cmp
rcrl
stc
adc
outsb
push
mov
or
push
or
add
popf
std
mov
mov
jp
mov
xlat
mov
mov
add
scas
jne
fsubl
outsl
fsub
mov
fcmove
pop
popa
cmpsl
jns
sub
jle
or
mov
sub
cmpb
arpl
xor
mov
sub
ds
jo
lret
jo
adc
sub
shl
jns
mov
pusha
lret
add
xchg
mov
leave
sahf
es
gs
in
loop
inc
inc
jmp
xor
lock
imul
out
fwait
loopne
out
sbb
and
pop
adc
dec
sbb
pop
ficompl
and
sti
clc
xlat
das
dec
xlat
or
xchg
cmpsb
lret
rclb
in
loop
cmp
loopne
repnz
mov
xor
stos
mulb
mov
movsl
fnstsw
and
in
dec
sbb
xor
sub
repnz
add
vcmpgess
scas
sub
lds
jp
add
cmp
imul
ljmp
xor
lcall
inc
cmp
cmp
xchg
pop
les
mov
loopne
sub
adcb
cmpsb
fstpt
and
mov
sbb
out
cwtl
imul
pop
sub
jb
ljmp
mov
xchg
and
cmp
arpl
adc
sbb
lret
lock
pop
pushf
mov
cs
in
dec
iret
test
xor
pop
inc
fisubs
outsl
lods
xchg
xor
aaa
icebp
cmpsl
and
aas
loop
stos
dec
dec
lahf
movntq
mov
xchg
jb
and
in
fsubl
leave
pop
cmp
jne
aam
inc
sbb
cmc
inc
add
sbb
lahf
popf
scas
adc
fisttpl
mov
ja
clc
and
jmp
int3
sbb
imul
inc
adc
jb
hlt
mov
fisubs
lds
cmpsl
mov
xchg
frstor
popf
and
or
repz
inc
cltd
sbbl
aam
icebp
mov
push
xchg
test
jl
mov
push
jecxz
jle
fbld
jle
std
inc
dec
out
cld
hlt
jl
test
lret
mov
es
mov
pop
cmc
out
daa
jmp
xor
cmp
dec
mov
mov
adc
and
mov
cmp
sbb
loop
in
icebp
test
sub
fmull
add
and
jno
inc
inc
mov
push
dec
fisttps
cwtl
mov
lahf
cmp
lods
jp
sub
icebp
loopne
mov
int3
dec
jnp
jle
adc
fisubrl
xor
testl
adcl
pusha
sbb
dec
dec
xchg
and
lods
push
mov
cmpb
or
rorl
cmc
jle
add
dec
int3
mov
movsl
xchg
or
xchg
and
popa
lods
push
imul
lret
loopne
mov
push
loope
pop
xor
pop
insb
gs
mov
leave
shll
dec
jb
fildl
mov
cmpsb
cmp
scas
jge
inc
ds
fdivl
sub
flds
pop
test
xchg
iret
mov
and
cs
sbb
cmp
push
add
cmp
mov
lods
pop
es
insl
inc
sbb
rcrb
xor
and
push
movsl
outsl
loop
sub
or
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
nop
push
in
rorb
pinsrw
jne
add
pusha
cmc
pop
rolb
add
add
or
inc
stos
sahf
dec
add
imul
in
jmp
movsl
mov
lcall
int3
sbb
pop
insb
pop
dec
dec
popa
add
xchg
les
idivb
aas
cmpsb
aas
aas
roll
jecxz
inc
pop
call
dec
mov
repz
jp
hlt
xchg
mov
add
pusha
mov
repz
xchg
adc
add
mov
movb
jp
dec
and
mov
loop
sub
push
pop
pusha
fisubrs
add
loop
mov
adc
lds
xor
aam
insl
out
test
js
sahf
mov
mov
clc
inc
mov
ret
jge
jo
loopne
jl
fcomps
scas
lods
pop
shrl
sbb
and
jo
out
lcall
enter
andb
sbb
jno
adc
addr16
in
lcall
mov
pop
lods
int
ds
mov
fidivrs
cli
ret
popa
out
fs
sbb
std
push
xchg
movsb
clc
inc
fildll
adc
and
es
or
push
test
mov
cmp
adcl
insl
in
pushf
xor
test
push
in
and
inc
test
push
jmp
fcmovnb
sub
mov
inc
xor
push
pusha
mov
pop
cmpsl
mov
or
andl
sarl
in
imulb
jno
in
add
add
add
daa
aas
pop
mov
inc
gs
loope
icebp
mov
je
daa
pop
mov
sbb
mov
and
into
or
mov
adc
mov
int
stc
and
pop
repnz
ljmp
mov
inc
mov
mov
pop
ja
add
pop
or
outsl
jmp
rsm
cmp
cwtl
pushf
leave
jl
push
sbb
xchg
xorb
pop
push
cwtl
pop
mov
ss
jmp
pop
jg
cld
sub
mov
int3
clc
mov
cld
pop
sti
mov
idivb
call
xchg
cmp
divb
pop
stos
inc
lea
cmpsb
stos
sti
sub
nop
sbb
and
mov
scas
and
mov
push
inc
sbb
out
in
jbe
push
jl
jb
and
shrb
es
shr
jge
xor
sub
js
xor
xchg
inc
pop
inc
sbb
inc
xorb
mov
lods
cmp
test
scas
mov
mov
push
inc
xor
add
nop
push
imul
in
dec
adc
push
fdivrp
inc
sub
insb
ffreep
imul
or
rorb
fldenv
dec
das
std
inc
jmp
add
mov
stc
or
pop
push
fdivp
ljmp
sti
clc
loop
inc
xlat
call
xchg
sub
sbb
adc
pop
fldcw
jecxz
ret
imul
mov
mov
test
push
or
mov
inc
mov
jno
cld
lds
aaa
in
dec
notl
sbbl
xchg
getsec
mov
jo
cmp
es
sti
call
xchg
mov
push
loopne
popa
cs
sub
xor
lret
and
icebp
in
dec
sbb
daa
fcomps
arpl
xor
ror
pop
out
ds
push
or
and
mov
push
je
rcll
pop
mov
lds
clc
and
mov
call
jns
je
vpmaxub
out
pop
cmp
shr
pusha
fsubrs
call
mov
ljmp
ljmp
sub
mov
and
in
shll
lret
fcomps
and
pop
mov
jp
es
add
mov
je
push
jg
sub
rorb
out
sti
xor
repnz
xchg
inc
xorb
loopne
adc
xor
xor
pop
add
idivl
lret
cmp
movsl
sbb
repz
outsl
loop
ret
notl
daa
cmp
push
popf
dec
clc
mov
int
inc
sub
xor
mov
call
stos
xchg
add
ds
and
push
add
lods
sub
lds
xchg
or
push
out
lds
mov
negb
fcomps
adc
cmc
or
sbb
stos
xchg
pop
ret
jae
loop
ja
pop
into
in
fsubrs
inc
adcl
jg
mov
pop
mov
adc
in
movsb
test
cmpsw
jp
scas
fsts
jg
cltd
in
loopne
cmpb
dec
or
scas
das
sbb
pop
jmp
in
loopne
popf
sbb
das
enter
mov
punpckldq
dec
ret
cld
pop
push
sbb
addr16
pushf
imul
ss
js
mov
mov
cmp
ja
nop
and
adc
fidivl
sub
or
jbe
and
mov
das
mov
rorb
mov
lods
shll
jne
les
push
pop
out
jns
sar
js
pop
pushf
mov
xorb
lock
cmpsl
xor
push
int3
jbe
pop
shrb
inc
or
scas
dec
mov
mov
popf
mov
ja
adc
sub
sbb
loope
aam
cmp
xchg
pop
sbb
clc
mull
pop
mov
cld
iret
add
inc
ja,pt
notb
xchg
mov
cmp
add
ret
loopne
scas
ret
add
ss
inc
fmull
ret
aam
jne
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
xlat
les
pinsrw
xchg
scas
addb
clc
xorl
dec
outsl
lret
test
psubd
or
xchg
insb
pop
and
hlt
movsl
fistps
xchg
add
enter
jge,pt
or
in
loope
cmp
lahf
addr16
and
pop
mov
xlat
shll
loop
stos
push
pop
or
jl
lcall
cmp
lret
mov
sub
ds
out
pop
out
mov
cld
push
jl
or
and
xchg
xchg
mov
mov
add
mov
shr
mov
or
or
adc
mov
fisubs
std
push
sub
out
shlb
and
fisttpl
stc
popa
or
sbb
lock
lea
sbb
adc
mov
dec
push
test
cwtl
mov
or
scas
sbb
and
out
fimuls
xchg
cmpsl
scas
fst
and
inc
lcall
push
inc
add
mov
or
je
enter
jge
mov
sti
sub
es
repz
out
xchg
insb
inc
imul
jge
adcb
cmpsl
stos
clc
pop
ret
movsl
mov
outsl
dec
mov
add
imul
push
dec
inc
pop
pop
icebp
cmpsl
and
push
inc
insl
cltd
test
shlb
push
je
push
jge
push
loopne
jmp
mov
adc
and
in
fcompl
cwtl
jno
sbb
in
mov
add
push
inc
adc
xchg
dec
movsl
scas
popf
loopne
cli
inc
add
inc
mov
scas
bnd
inc
leave
mov
mov
rcr
mov
lods
mov
jno
data16
push
fwait
adc
adc
mov
pop
addr16
enter
add
and
out
mov
test
sahf
mov
fwait
push
ljmp
sub
enter
inc
sbb
jb
cli
pop
sbb
ss
jbe
pop
sbb
std
ret
adc
push
and
jb
and
and
scas
lea
push
ss
push
add
es
cld
test
lock
movsb
ds
call
clc
jp
cltd
mov
fwait
bnd
popa
test
adc
iret
lea
pop
sub
sbb
xor
outsl
incb
test
ljmp
ljmpw
imul
inc
ret
addr16
jae
inc
ret
enter
les
leave
pop
cld
push
out
adc
icebp
imul
add
lret
cmpsb
mov
cmp
loop
stos
add
push
jnp
or
aas
aaa
sbb
jl,pt
pop
pop
out
movl
in
inc
fisubs
mov
out
dec
cmp
cli
jne
pop
or
lret
adc
mov
rorl
push
mov
repz
adc
jecxz
outsb
out
jmp
adc
hlt
inc
stos
movsl
xchg
add
orb
aam
enter
mov
mul
mov
pusha
repz
sbb
in
push
popa
adc
adc
sbb
dec
out
pop
xor
les
imul
cli
mov
das
lods
push
add
pop
cmp
in
insl
xor
out
adc
call
dec
out
testl
mov
add
mov
dec
xchg
xchg
or
fldl
inc
jne
push
subl
shr
bts
out
xchg
jno
in
ffree
cmpsl
std
push
xchg
add
mov
or
xor
out
and
jb
loop
mov
fisttps
std
mov
and
int3
xor
xchg
notl
test
jmp
push
sub
ret
sub
xor
mov
imul
popa
sahf
shlb
pop
inc
mov
push
push
pop
or
cwtl
and
sti
rorb
dec
xchg
stos
adc
call
cmc
mov
sbb
scas
pop
fldl
stos
sub
stos
inc
sub
cmp
cmp
mov
mov
and
rclb
push
push
scas
inc
and
push
popa
xorl
fnsave
add
jno
cmp
fcomps
jns
inc
mov
pop
imul
push
test
pop
jg
cmp
mov
nop
es
dec
xchg
add
cltd
cs
lahf
sbb
fdivrl
xor
inc
jg
test
add
loope
or
mov
outsl
push
aaa
push
insb
sub
or
popf
mov
in
aad
lds
clc
mov
jle
pop
pop
sahf
fsubp
out
cwtl
mov
nop
into
daa
or
fsub
pop
lahf
adc
mov
mov
shll
pop
ret
addr16
fsubp
mov
lock
pop
lods
scas
fwait
ret
xor
inc
inc
popa
sbb
xchg
loope
sub
mov
ss
faddl
mov
lds
movsl
jmp
lret
xchg
cmpsl
lret
and
test
mov
xor
xchg
vpavgb
outsl
movsl
loop
loop
jno
pop
cmp
push
ljmp
jbe,pt
mov
scas
lcall
push
jle
ret
js
addr16
pop
in
push
daa
mov
js
and
cmpb
cli
leave
das
mov
sbb
movl
inc
shll
jo
cmc
jo
icebp
clc
jae
add
xor
insl
out
push
inc
mov
mov
call
push
stc
sahf
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
pop
push
mov
pinsrw
punpckldq
xchg
push
pop
fadd
std
pop
and
lods
dec
jb
insl
jmp
testb
adc
jbe
lods
cwtl
sbb
mov
sarl
or
mov
mov
inc
mov
pop
ja
adc
push
mov
pop
test
nop
xor
jecxz
cli
mov
push
or
popa
jl
loopne
push
stc
xor
inc
sbb
sub
adcb
sbb
push
in
and
dec
xchg
bound
arpl
mov
xchg
mov
clc
cs
or
movsl
mul
add
sub
ret
pop
jecxz
or
cmp
mov
and
xchg
sub
jnp
adc
subl
int3
xchg
jno
shlb
push
mov
into
push
jmp
imul
pushf
mov
xchg
cmp
sub
jle
inc
jecxz
iret
or
xor
jns
imul
adc
push
outsl
adcb
adc
sbbb
jl
out
or
popa
cmp
data16
pop
insl
or
mov
cld
aam
pop
ljmp
mov
sub
cmc
lret
pop
mov
push
cmpsl
and
enter
mov
mov
lcall
call
addr16
popa
sbb
call
test
jbe
mov
adc
and
js
or
leave
jge
mov
cltd
orl
sysenter
cmpsl
mov
push
sbb
fildll
sti
daa
clc
cmpsb
aad
into
lret
cmpsl
cmp
lock
pop
stos
inc
mov
data16
push
loope
pop
xor
xor
and
push
pushf
mov
pop
dec
sub
enter
add
imul
cli
pop
loope
rolb
ret
xor
dec
mov
je
pop
sbb
filds
enter
inc
addl
out
mov
add
lret
cwtl
mov
aas
jg
xor
mov
sbb
cli
ljmp
stos
and
sub
outsb
hlt
pushl
dec
mov
gs
jecxz
mov
adc
mov
or
cmp
pushf
out
inc
mov
or
cmp
mov
fsts
stos
cwtl
xchg
rorl
popf
fiaddl
push
sbbl
dec
inc
scas
mov
ficomps
das
imul
lahf
sub
adc
jle
mov
and
push
pop
movsl
inc
sbb
mov
jmp
rcl
xchg
mov
lea
shrb
push
pop
sbb
dec
rclb
add
pusha
scas
dec
popf
out
insl
jmp
pop
adc
inc
jo
call
push
inc
xor
push
or
jge
jge
sbb
test
in
mov
jp
cs
pop
jae
hlt
clc
cmp
or
repz
jmp
test
xchg
js
inc
and
sub
mov
or
add
popf
xchg
xor
jns
lock
sub
ljmp
daa
loope
add
pop
mov
int
sub
ja
xchg
mov
lret
aas
lahf
push
jle
mov
loop
fwait
jecxz
mulb
mov
test
lahf
ljmp
fiadds
mov
scas
fdivs
sub
je
jno
pop
cltd
bound
mov
mov
outsb
dec
mov
or
dec
int
push
jge
scas
mov
and
or
xchg
call
imul
dec
jae
jecxz
push
test
sarl
ljmp
stos
aam
mov
loopne
mov
out
das
push
lret
cmp
mov
xchg
ja
cmpb
xchg
rep
ror
or
or
cmpsb
push
aaa
jmp
icebp
aas
lods
in
jo
cmp
xchg
ret
fsubrl
roll
mov
push
mov
divb
cwtl
enter
sbb
leave
sbb
stos
adc
mov
aad
lcall
jne
lods
xchg
incb
dec
or
imul
aad
and
dec
xor
push
sub
outsl
dec
mov
dec
outsl
push
push
sbb
xor
bound
xor
dec
pop
mov
push
add
mov
mov
loope
cmp
icebp
mov
std
push
rorl
shll
mov
fdivrl
cld
mov
push
cmp
adc
dec
jg
stc
lods
inc
pop
fmul
arpl
push
sbb
pop
incb
loop
orl
sub
jo
lods
sbb
lret
aas
std
push
les
and
mov
sbb
xchg
jecxz
and
aad
in
push
addr16
mov
bound
push
adc
testb
ds
jb
int3
flds
cmpl
fbstp
push
pop
je
pop
in
arpl
mov
repz
imul
or
das
daa
andl
push
mov
in
shrl
cmp
in
mov
xchg
cmp
in
mov
lods
loop
shl
scas
adc
hlt
sbb
sti
and
jp
test
movhps
fildll
and
popf
add
ja
jae
adc
sub
sbb
mov
mov
daa
push
lods
imul
cld
stos
repz
cmp
in
test
push
insb
inc
dec
cmp
imul
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
push
pushf
pinsrw
xadd
in
add
int3
iret
das
add
or
mov
xchg
scas
and
mov
xchg
push
mov
lods
movsb
movsb
lea
inc
sbb
jae
sbb
pop
push
iret
mov
sub
inc
iret
jmp
shlb
mull
iret
out
push
dec
jns
and
mov
nop
test
je
rcr
inc
or
aam
sub
push
xchg
or
push
mov
stos
push
divb
sub
xor
xor
xchg
dec
add
fs
pusha
mov
ds
enter
jbe
pop
pop
xor
push
jg
cli
stos
dec
sub
aaa
sub
in
pushf
mov
add
jl
adc
push
jne
dec
cs
cmpsb
mov
push
je
aaa
or
icebp
pop
jmp
fsubrl
jns
popf
in
nop
ljmp
fs
and
fildl
cs
shl
mov
ja
gs
iret
enter
test
mov
test
mov
cwtl
adc
fsubrl
lcall
pop
clc
cmp
stc
or
loopne
fisubrs
mov
mov
sub
mov
pop
in
xchg
xchg
pop
out
cli
std
imul
adc
pop
mov
cmpsl
clc
adc
cwtl
cmp
xor
jno
mov
sub
add
mov
iret
cltd
movsb
filds
inc
addb
pop
mov
arpl
clc
ficompl
fxch
sub
test
xchg
jne
jp
dec
mov
out
int3
roll
movsl
push
push
jle
fs
movsl
pop
mov
in
pop
cld
jp
int
add
xor
pop
nop
or
pop
push
dec
sbb
xchg
cmp
fnstenv
cwtl
inc
and
fucomi
enter
out
dec
pop
lock
jecxz
inc
jp
pop
add
ja
sub
cmp
test
mov
mov
stc
loope
pop
inc
das
cmpsl
add
jne
push
push
jne
repnz
or
adc
dec
inc
leave
orl
or
and
push
adc
cwtl
int3
test
test
adc
adc
pop
or
in
dec
das
popf
push
mov
cmp
adc
rcr
int3
ret
stc
mov
cmp
lods
add
fsubl
repnz
je
aas
push
shl
adc
movsl
test
cmpsb
iret
je
data16
dec
xor
xor
rorl
mov
mov
push
pusha
icebp
mov
jae
jb,pt
cmpsl
push
mov
shlb
hlt
fucomip
pop
inc
xor
nop
mov
sub
enter
test
cwtl
sbb
imul
vmaxpd
mov
pushf
mov
outsl
pop
mov
decb
mov
jbe
movsl
std
sub
and
loope
rcl
int3
movsb
inc
stos
push
jnp
jne
pop
ret
cmp
je
mov
fbld
shll
jmp
rol
test
loop
or
outsl
mov
xchg
outsb
pop
xchg
rcll
jns
mov
sbbl
loopne
cmc
mov
push
cmp
push
loope
pop
cli
fs
insb
in
aas
xor
fstpt
inc
les
iret
testl
into
mov
fld
jg
jl
movsb
dec
or
jbe
xchg
ljmp
lea
popf
inc
push
mov
add
sub
mov
mov
add
cli
jb
in
and
jne
cmpsb
into
add
adc
outsl
sub
adc
sub
scas
jmp
cwtl
mov
shrl
add
test
push
jbe
lods
aaa
stos
or
test
push
xor
ljmp
ja
stos
jg
cli
xchg
pushf
insb
psadbw
aad
scas
and
enter
in
jae
int
dec
lahf
xchg
push
cmp
test
mov
out
jae
arpl
xor
fdiv
imul
inc
adc
push
push
pop
pop
xor
jnp
out
push
lahf
cmp
jge
pop
in
pop
sub
test
xchg
or
sub
pop
loopne
push
and
ss
push
xchg
xchg
cmp
les
pop
and
sbb
test
in
jg
cmpsl
and
add
jl
adc
and
add
mov
or
pop
mov
in
jg
daa
ds
pushf
inc
xor
fisubl
cmc
mov
mov
push
ret
dec
xchg
pop
sub
out
mov
cld
mov
mov
loop
ret
mov
ret
inc
mov
push
shll
mov
rcl
xchg
push
sub
test
ds
pop
cltd
add
loop
xlat
stos
or
ljmp
fs
xor
popa
jnp
xchg
sub
mov
fsubr
mov
std
pop
in
pop
gs
push
mov
nop
stc
popf
add
lret
dec
push
mov
pop
out
xor
pop
rcl
mov
daa
out
and
pop
addr16
hlt
or
mov
adc
mov
mov
dec
push
fwait
mov
out
and
stc
xchg
add
mov
sar
setb
adc
pop
jnp
mov
loop
aas
addr16
mov
pop
ss
inc
push
das
pop
adc
les
imul
pop
divl
jmp
call
sahf
fsubs
les
mov
sub
in
mov
add
cmp
push
ds
jnp
loopne
sub
sub
and
dec
orl
xor
ja
inc
xchg
push
pusha
push
cmc
pop
mov
xchg
in
lods
add
ljmp
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
insb
cmc
data16
mov
psubusw
out
loope
rorl
mov
and
adc
inc
fwait
push
inc
push
sbb
push
in
cmp
xor
mov
jne
out
aaa
lods
pop
xchg
int
xor
inc
fidivl
je
mov
dec
nopl
subb
mov
in
cmp
int3
jp
sub
mov
sti
cmc
xchg
sub
mov
inc
popf
mov
int3
popf
sahf
clc
enter
pusha
lea
and
into
orl
jmp
jecxz
int3
call
lahf
rcll
cmc
mov
test
jnp
add
jb
xlat
add
xchg
dec
cltd
xlat
add
dec
arpl
cld
inc
mov
pop
push
jmp
jne
fisubrs
rcrl
pop
sub
movl
jae
push
push
and
sbb
jl
clc
std
mov
in
lcall
hlt
mov
pop
call
lretw
xor
data16
xchg
dec
and
pusha
roll
push
mov
cmp
and
ds
imul
out
mul
jl
xchg
xchg
imul
xchg
rclb
das
or
pusha
shll
int
enter
imul
dec
mov
sub
mov
arpl
xchg
or
bound
mov
xchg
cmp
cs
mov
sub
xor
pop
adc
je
push
adc
sub
pop
and
cwtl
jl
aas
dec
xchg
lock
mov
pop
and
aam
inc
les
pop
addl
sbb
add
and
jae
mov
js
xor
sbb
push
lock
xchg
jle
dec
mov
xchg
push
cmp
or
ja
out
jecxz
repnz
lcall
es
sbb
hlt
or
sbb
das
mov
mov
xchg
hlt
push
push
int3
jns
adc
or
aas
jne
push
data16
test
movsb
add
fmuls
mov
or
cmpsl
es
popa
sub
ficoms
push
out
cltd
inc
aas
addl
popa
pop
pop
mov
and
xchg
xor
out
jne
jo
xor
es
rclb
mov
and
adc
inc
pop
sbb
dec
sub
jg
shll
mov
rolb
sbb
pop
jb
aas
hlt
xchg
sarb
mov
arpl
mov
mov
jno
mov
cs
mov
and
mov
arpl
enter
xchg
movsl
push
pop
jg
jp
out
mov
mov
push
add
cs
loopne
pop
mov
mov
mov
outsl
cmp
pop
repz
mov
popa
push
pop
ret
ss
xor
sub
movsb
cld
xchg
cmp
dec
sub
daa
in
sbb
fdiv
xor
push
push
divb
inc
rorb
daa
mov
je
mov
mov
sbb
clc
out
mov
sbbb
xlat
mov
adc
out
and
shr
cmpsb
sub
mov
pop
push
mov
rcr
enter
add
push
mov
pushf
pop
mov
lcall
cmp
sub
pop
jno
mov
add
movsl
and
les
inc
jge
inc
xlat
stc
push
cmc
jp
icebp
sub
cmp
dec
adc
mov
rcrb
xor
and
daa
in
lret
cmp
cmp
jo
mov
shll
xchg
ret
cmp
mov
xor
fiaddl
mov
hlt
mov
inc
or
adc
cmc
pop
push
outsb
push
mov
sar
mov
adc
cmp
dec
lods
push
insl
inc
lods
xchg
cmp
mov
fidivs
xchg
push
mov
adc
in
lcall
xchg
mov
je
clc
sub
les
push
add
cmpsl
test
mov
mov
cli
or
push
cmp
arpl
xchg
mov
mov
inc
das
sub
sbb
xchg
cmp
cli
push
push
xchg
lahf
adc
sti
xchg
push
inc
jmp
inc
inc
dec
jnp
jecxz
pop
lds
adc
and
jns
mov
push
mov
xchg
inc
addl
lods
adcl
rclb
cs
sbb
and
cmpsb
rorl
adcb
and
arpl
mov
and
mov
and
mov
pop
leave
xchg
mov
and
loopne
div
adc
sarb
push
dec
mov
mov
push
test
pop
call
xor
jp
das
movsb
ss
int3
sahf
sub
lahf
aas
stos
scas
sbb
loopw
inc
push
push
ret
xchg
loopne
rol
xor
mov
push
repz
xchg
mov
xchg
arpl
push
pushf
das
mov
stos
adc
adc
fcoml
int
test
xlat
mov
fiadds
push
popf
xchg
add
xchg
jo
data16
and
hlt
test
pusha
sbb
sahf
cmpb
pop
cltd
jmp
inc
loopne
jle
popf
push
test
mov
xchg
insl
cmp
adc
inc
pop
dec
and
jnp
std
jecxz
push
sub
ljmp
aaa
ss
es
cmp
test
mov
bound
repnz
mov
cli
enter
adc
test
cmpl
sub
and
cmpsb
jo
mov
adc
lret
popa
je
into
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
aas
les
les
pcmpeqb
data16
insl
cmc
cltd
jbe
sbb
adc
mov
arpl
cmp
dec
mov
mov
mov
sub
adc
adc
hlt
loopne
icebp
jge
adc
std
gs
add
das
jl
xchg
test
push
cmovs
loope
lds
daa
in
inc
push
push
cmp
dec
ja
dec
hlt
cmpsl
leave
es
aaa
xchg
mov
shlb
js
or
fisttps
fcomi
sub
loopne
test
dec
int
sub
jb
xchg
cmpsl
and
xchg
jne
das
xchg
movsb
cmpsb
add
mov
jnp
jle
push
inc
cmp
push
xor
jbe
pop
aaa
dec
inc
fidivs
xor
jecxz
sub
out
add
xchg
xor
scas
aad
xchg
jne
sarl
js
and
rol
lahf
jecxz
insb
lock
stos
adc
loop
movaps
pop
push
xchg
fbstp
daa
sbb
dec
sub
xor
push
add
jg
jecxz
add
movsl
dec
jecxz
xor
loop
push
cmp
rep
push
mov
rcrb
cmpsl
jmp
cmc
jns
xchg
jp
push
aam
sbb
pop
mov
xor
call
sbb
gs
pusha
xor
inc
cmp
cmp
and
lods
sub
adc
cmc
and
cmc
inc
shlb
movsl
add
cmp
mov
and
inc
lret
inc
aas
rorl
add
xor
push
cmpsb
les
inc
push
les
push
jle
insb
jp
mov
int3
fisubrl
ret
es
std
xchg
pop
cwtl
ja
sbbl
xor
mov
mov
add
into
and
xor
lock
das
shll
and
xchg
bound
clc
or
jnp
lret
loop
stc
test
or
cmc
scas
into
mov
and
cmp
inc
aad
out
ret
loop
jle
xchg
pop
stc
mov
adc
sti
movsb
sbb
int3
scas
mov
mov
xchg
add
popf
push
cwtl
inc
loope
or
data16
dec
xor
mov
fchs
sarb
in
movsb
arpl
and
pushf
in
cltd
int
push
aam
push
jb
std
subb
daa
xor
jg
mov
mov
fcoml
add
mov
out
cwtl
sbb
adc
or
lret
lahf
fnstsw
cmp
shl
inc
push
pop
fdivrs
mov
dec
in
fisttpl
out
mov
add
int
cld
push
sti
mov
dec
push
mov
jb
adc
jae
lret
mov
shll
sahf
repz
inc
in
cmp
or
addr16
leave
mov
aam
inc
jno
inc
adc
ret
cld
psubusb
adc
arpl
das
mov
xor
dec
fldt
sub
lock
stos
movsb
fisubl
in
pop
adc
sbb
das
cmp
adc
jo
es
ljmp
lret
gs
filds
sub
pop
inc
xor
jl
mov
jne
mov
xchg
popf
cwtl
xchg
sub
inc
push
nop
adc
mov
icebp
push
mov
jg
jne
lret
jae
mov
dec
arpl
xchg
fs
xchg
and
cmpsb
xchg
je
push
pushf
stc
fcoms
mov
fwait
mov
lret
mov
jp
mov
lea
push
shll
stc
call
sub
aas
dec
xchg
ss
dec
out
hlt
jno
jg
sbb
sti
add
cld
lahf
icebp
pop
test
repz
jp
xor
pop
push
dec
popl
cmp
mov
rorb
cli
aam
fwait
push
scas
cltd
scas
dec
outsb
stc
dec
pop
aas
movsl
push
sbb
int
test
or
in
or
mov
sbb
ret
subb
arpl
push
sbb
xchg
dec
ret
bound
jno
jnp
mov
xchg
aas
mov
iret
aaa
dec
scas
lahf
cmp
ljmp
xor
fisttps
mov
fidivrl
gs
jl
pop
in
and
aas
mov
pushf
daa
nop
cpuid
xor
popa
mov
cmpl
xchg
xlat
ret
cli
outsl
stos
xor
daa
lret
mov
test
dec
pop
push
rcrl
ret
xor
or
or
cmp
cmpsb
jnp
loop
jl
mov
push
outsb
std
shl
sti
in
adc
ret
mov
jb
pop
leave
mov
mov
pop
popa
inc
xorl
jno
shlb
or
fwait
push
xor
movsl
test
insl
decb
add
das
add
arpl
daa
dec
ja
rorb
and
mov
rcrl
mov
inc
xchg
lcall
inc
lods
lret
adc
in
int
jns
dec
fwait
xorl
mov
inc
cmp
pop
dec
hlt
pop
insl
push
cli
shrl
mov
inc
popa
std
adc
xchg
clc
repnz
in
push
and
cmc
mov
dec
inc
leave
loopne
rorl
push
jo
stos
and
mov
pop
pop
fsts
pusha
add
and
pushf
push
ljmp
clc
dec
hlt
aaa
push
inc
imul
adc
lds
xor
cltd
test
push
xchg
rorl
sbb
incb
push
adc
or
in
xchg
adc
mov
cmp
pop
fiadds
loop
addr16
cltd
dec
int3
mov
mov
out
mov
cltd
leave
insb
mov
movsl
aaa
pop
lods
sbb
loope
mov
pop
pop
repz
inc
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
push
cmpsb
push
mov
add
loopne
and
scas
xor
ss
jg
nop
dec
insb
inc
xor
faddl
pop
xorl
scas
cmpsb
or
insl
add
and
mov
pop
sub
xor
pop
scas
inc
or
inc
mov
jne
or
and
lahf
jp
in
pop
pop
ret
rcrb
scas
testl
dec
test
fstpl
stos
lods
mov
inc
inc
pop
pop
mov
jo
das
repz
or
in
inc
sbb
lahf
cltd
lea
dec
mov
loopne
jo
add
jne
mov
call
ds
or
mov
jecxz
add
inc
xor
in
ficoml
sub
add
nop
in
popf
add
jns
jle
xchg
js
jecxz
aam
sub
int3
mov
xchg
flds
add
inc
shrl
dec
loop
push
fidivs
ja
mov
loopne
pop
sbb
jb
out
mov
leave
cmp
and
pop
loop
insl
shrl
or
fbld
rorb
call
push
push
scas
scas
test
jns
pop
fs
or
repz
ljmp
aas
sahf
adc
arpl
xchg
lahf
adc
add
mov
enter
test
addl
scas
nop
and
and
jge
mov
imul
cmp
xchg
enter
xchg
push
mov
xor
nop
push
int3
rorl
lea
lcall
jbe
lods
dec
inc
mov
je
leave
mov
xor
sbb
cmc
fisttps
xchg
sub
jae
movsl
fmull
es
dec
test
in
mov
or
jg
and
mov
mov
mov
addl
push
in
inc
push
mov
cltd
adc
lret
push
jl
inc
pop
aam
pusha
inc
jge
mov
jp
pusha
insl
sbb
mov
stc
fildll
js
cmp
adc
lea
dec
movsb
inc
lret
jns
jbe
mov
xchg
int3
js
sarb
sbb
into
or
dec
test
imul
sub
dec
or
jbe
dec
jbe
adc
jg
sub
lea
sahf
popf
sub
daa
cmp
inc
sub
or
ljmp
call
push
mov
dec
cmpsb
shlb
pop
fs
pop
setge
dec
repz
xchg
push
mov
pop
xchg
aas
lods
push
lds
imul
scas
xor
hlt
ret
sub
sar
movsb
lea
pop
and
push
adc
cs
and
cmp
cmp
or
imull
cmc
shll
or
xchg
jle
xchg
jmp
out
bound
es
push
cltd
in
add
push
std
jl
jl
int
jno
popa
dec
or
xor
xchg
ds
rorl
cli
in
out
imul
xchg
shl
xor
push
movsl
nop
mov
pop
pop
lods
pop
jl
cmp
cmp
and
sbb
in
add
ret
cmpsb
cmp
fdivl
repnz
out
mov
cmc
int
xor
adc
inc
ror
inc
dec
and
inc
ret
call
ret
mov
push
pop
cs
push
mov
xchg
sarb
ljmp
push
sbb
or
pop
mov
loop
pop
dec
jp
sbb
mov
push
xor
inc
fcmove
lret
je
jne
pop
mov
je
cwtl
test
repnz
jecxz
and
paddd
and
dec
cmpsw
mov
pop
pushf
roll
mov
js
cs
ss
mov
stc
sti
rcrl
rclb
pop
cwtl
inc
dec
adc
movsl
jbe
push
pushf
push
cmp
subl
push
mov
push
insb
js
sbb
xchg
repnz
aad
dec
fldenv
sbb
in
xor
loopne
inc
cmp
stos
shll
fwait
fwait
pop
inc
gs
mov
out
jns
ljmp
or
pop
xchg
pop
xchg
out
or
lods
pop
mov
mov
bound
cld
fistpl
mov
insb
notl
jbe
push
lods
xor
aaa
test
decl
pop
fdivrs
aad
dec
mov
adc
repz
out
insb
aaa
pop
je
clc
or
fistps
mov
outsb
jl
faddl
and
sub
jle
push
dec
stos
pop
aad
in
adc
push
into
mov
inc
lcall
sub
lret
adc
cld
pop
nop
jmp
dec
inc
push
ja
mov
or
push
mov
push
push
sarb
outsl
in
out
xor
insl
mov
popa
cmp
fadd
ljmp
roll
mov
ret
push
lock
push
inc
outsl
add
pop
bound
orb
mov
scas
cmpsl
leave
hlt
lcall
jmp
stos
jno
movsl
mov
lea
fdivs
mov
mov
out
and
push
sbb
jbe
push
push
cmpsl
lret
daa
sti
cltd
insl
nop
inc
xor
jecxz
jnp
lods
daa
or
xchg
xchg
mov
dec
js
popa
shlb
mov
scas
lcall
out
mov
stos
rcrl
inc
leave
add
pop
mov
stc
pop
lods
shlb
push
and
mov
idiv
mov
and
pop
sahf
or
imul
lcall
leave
mov
rorb
xchg
push
outsb
add
movsb
add
sub
cmpsl
or
mov
dec
in
push
dec
bound
mov
add
or
addr16
xchg
pop
popa
cli
clc
jl
sti
push
es
orl
pop
sahf
mov
mov
add
xor
jmp
sbb
aas
mov
and
mov
jbe
mov
push
add
and
adc
aaa
inc
cmpsb
inc
aad
push
addr16
dec
mov
push
dec
fcomps
icebp
push
jmp
push
cmp
bsr
test
out
loopne
test
movsb
loopne
or
mov
cmpsl
aaa
ljmp
daa
xchg
push
jbe
inc
jge
stos
dec
daa
testb
fs
xchg
fwait
int
cmp
or
fstps
jb
add
cmpsl
pop
xchg
test
mov
push
cwtl
mov
jo
test
jnp
mov
cmp
cmp
scas
add
push
mov
adc
call
lahf
push
sbb
leave
clc
aas
popf
cmc
push
pop
jge
jno
aad
dec
inc
sti
sub
in
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
mov
xchg
push
repz
rcr
mov
ret
out
scas
add
lret
cmc
fsubrs
adc
dec
mov
in
mov
mov
out
push
shll
js
and
xchg
xchg
ljmp
les
fmuls
mov
int
mov
push
xchg
xchg
lret
lock
jnp
inc
jp
push
pop
out
jb
call
or
aam
mov
out
and
jns
and
loop
cli
sub
int
mov
jp
insl
lret
add
inc
je
ret
jle
mov
lcall
jmp
mov
xlat
divl
test
repz
push
mov
push
pop
mov
call
mov
mov
pusha
sub
add
test
push
lret
and
pop
and
rol
push
sbb
mov
jae
xor
pusha
stc
and
xor
lret
rorb
mov
das
fmull
out
ds
dec
and
pop
aad
addb
push
std
jge
push
data16
xor
lods
xchg
mov
cmp
add
xchg
dec
cmp
nop
mov
addl
jmp
je
jno
xchg
insb
fcoml
xor
jbe
inc
fwait
add
jb
mov
xchg
dec
aam
rcl
and
sbb
mov
cmpsb
loopne
and
mov
fildl
fwait
mov
negl
push
loopne
popa
or
mov
sti
je
mov
fwait
sub
ds
pushf
mov
xor
xchg
dec
inc
ret
jns
push
mov
subl
movsl
or
and
fcoms
sub
imul
fistps
mov
sti
xor
pop
jno
sbb
xchg
stc
cld
add
fildll
jecxz
xchg
out
repnz
pop
xor
and
into
fld
mov
int
int3
sar
pop
pop
shll
mov
arpl
pop
xchg
loopne
xchg
add
out
adc
mov
xor
and
rcl
mov
jbe
orb
mov
rorb
shll
or
jmp
add
es
inc
adc
xor
fstps
outsl
sbb
outsb
add
fisubl
mov
adc
fbld
dec
mov
jge
lret
inc
cli
pop
add
cmp
cmp
scas
imul
dec
dec
fwait
scas
rorb
mov
sub
js
mov
lahf
cmp
mov
shlb
xor
sbb
push
sbb
cwtl
push
insb
or
scas
jns
out
rclb
sbb
add
sbb
lods
xchg
pop
sti
fdivrl
push
xor
mov
dec
xchg
sti
and
sbb
dec
or
mov
xchg
or
jp
sbb
icebp
sub
out
enter
and
bound
ficoml
lret
test
cmc
popa
dec
push
mov
sbb
mov
push
pusha
daa
iret
adc
or
mov
pop
inc
outsb
add
jmp
adc
pusha
and
adc
sbb
insl
cmc
and
or
in
popa
xchg
test
imul
dec
xchg
cltd
fmuls
and
shr
dec
mov
mov
loopne
subl
pop
mov
scas
outsl
pop
dec
mov
inc
fnstsw
test
pushf
mov
adc
push
xlat
mov
pop
and
daa
mov
outsl
sub
jge
int3
sub
int
stc
cld
xor
push
mov
out
outsl
dec
lar
mov
cwtl
mov
int3
je
shlb
in
in
sbb
ret
mov
imul
sub
les
sti
push
pop
aam
jnp
adc
fdivr
mov
loop
fcmovne
xchg
sbb
push
adc
in
pop
call
mov
loope
fidivl
cltd
mov
fisubl
sbb
lret
sbb
lods
adc
mov
cmc
pop
aaa
dec
adc
cmp
push
sub
cmp
and
lods
cmp
idivb
fistpl
addr16
ret
inc
push
adc
and
outsl
cltd
in
les
dec
js
bound
dec
popa
mov
dec
imul
int
jge
cltd
std
aad
mov
pop
mov
sarl
nop
mov
out
aaa
ljmp
push
jmp
jne
adc
hlt
or
lods
insl
pop
mov
pop
mov
mov
mov
or
pushf
fwait
mov
ss
mov
jb
fnstsw
mov
aas
cmp
hlt
push
xor
adc
xchg
cld
lcall
arpl
scas
sahf
outsl
lret
andl
loope
or
xor
xor
pop
or
xor
dec
int
call
insl
sti
insl
xor
cltd
mov
xor
fsts
sbb
inc
mov
and
cmp
fcom
inc
ljmp
mov
out
popf
xchg
dec
cld
sbb
aad
add
inc
push
lcall
in
lahf
rolb
push
daa
imul
ds
aas
movsl
pop
das
xchg
aad
xorb
mov
mov
fmuls
cli
call
jmp
lea
dec
add
cltd
and
xor
dec
xchg
rcr
popf
lret
inc
int
cmpsb
push
rcr
and
iret
add
inc
cld
cmc
pusha
dec
pop
sti
cmpsl
jno
dec
adc
es
test
fstpl
pop
popa
push
xchg
jg
pop
push
push
jl
pop
mov
lret
push
xlat
add
push
sahf
fists
pushf
cmp
jns
pop
outsb
lea
pop
nop
cwtl
mov
xor
push
adc
mov
rcll
lret
pop
insb
jns
cwtl
xor
cmpsb
lds
scas
out
iret
aad
pop
mov
inc
repnz
clc
dec
aad
lock
mov
push
out
mov
or
nop
add
xchg
push
rcrl
lea
pop
clc
ja
arpl
add
or
mov
rcrb
negb
dec
jge
inc
xlat
jle
xor
pop
dec
jge
fistpl
sbb
adc
cwtl
mov
ljmp
push
test
sti
sahf
jecxz
fisttps
sub
cmpsl
jg
or
inc
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
addl
bndldx
je
pop
mov
xchg
mov
mov
out
cmp
andl
lods
sbb
cltd
adc
mov
cli
xchg
aam
xor
mov
xor
mov
sub
sub
sbb
sbb
dec
loopne
out
cmp
mov
outsb
pop
xchg
pop
push
lret
arpl
sub
dec
pop
mov
adc
notb
loope
lods
mov
call
loop
in
cs
cli
testl
aam
cmp
push
and
insl
pop
cmp
loope
xor
xchg
in
xor
jge
dec
and
sub
mov
fisubrs
lcall
fiadds
xchg
sbb
xchg
jge
xor
push
sbb
jp
gs
out
xchg
pop
cltd
aas
inc
push
shlb
scas
stos
xchg
pushf
xor
scas
sub
sub
es
and
xchg
and
cltd
sub
and
inc
pop
icebp
inc
sbb
mov
jge
and
cmp
or
sbb
cli
insb
push
adc
loop
push
imull
fs
pop
inc
cltd
adc
dec
mov
cltd
xor
add
shlb
hlt
in
inc
jmp
adc
insb
add
mov
aam
faddl
out
pop
mov
sub
movsb
and
test
sub
loopne
pop
xor
int3
sahf
incb
adc
pop
test
push
push
and
cmc
lods
and
dec
lret
scas
sub
into
sub
test
cmp
push
fimull
popa
jl
pop
insl
and
leave
imul
out
jns
jp
cs
es
pop
jne
add
cwtl
jmp
xchg
lock
mov
push
dec
xchg
and
adc
out
add
or
aad
pop
in
jb
mov
inc
inc
pop
push
push
test
arpl
sub
add
insl
mov
sbb
xchg
mov
inc
int3
std
repz
ja
dec
and
inc
popa
xorl
stos
push
mov
and
jno
xchg
jmp
jecxz
push
fsubrs
push
mov
ljmp
add
push
adc
fidivl
push
add
and
sub
sahf
pop
mov
in
adc
dec
cmp
pop
repz
push
push
mov
sbb
xlat
mov
lds
int
or
or
stc
dec
pop
pop
xchg
cwtl
push
mov
push
test
push
cli
hlt
in
push
cmpsl
or
imul
pop
ret
mov
inc
cvtps2pd
xlat
and
add
inc
push
mov
push
add
addr16
cmp
add
pop
cwtl
push
leave
js
push
ja
bound
inc
sbb
mov
sub
jo
stc
sbb
cmp
pushf
push
pusha
les
dec
cmp
cld
sub
mov
pushf
xchg
sbb
push
shlw
bound
push
std
jne
mov
mov
xchg
jmp
pop
mov
sub
inc
add
cmp
mov
xchg
hlt
xlat
add
xlat
cmp
das
pop
mov
test
jg
cs
mov
cld
dec
orl
xchg
xor
mov
add
mov
sbb
mov
call
leave
das
inc
lcall
inc
les
cmp
test
mov
pop
jnp
dec
loope
xchg
inc
popa
repz
lahf
xchg
push
lcall
adc
push
sbb
add
dec
xor
xor
movsl
es
jo
out
ret
lods
scas
xchg
sub
xchg
sub
iret
aaa
xor
pop
or
fwait
orl
les
stos
inc
pop
pop
mov
ss
adc
push
decl
es
enter
je
dec
stc
push
ret
dec
cmpsb
fsts
mov
mov
push
roll
aam
push
mov
cli
into
sbb
fisttps
mov
add
scas
push
aad
and
xchg
push
mov
in
mov
xchg
hlt
incl
loope
xchg
insl
leave
sub
sub
dec
ds
push
lock
push
push
adc
xchg
repnz
adc
sub
push
lds
icebp
rclb
fwait
icebp
mov
mov
add
jns
stc
pop
imul
sbb
lret
inc
mov
fs
popa
leave
cld
push
xchg
mov
in
cmpb
loope
popa
xlat
xlat
push
imul
popa
inc
lods
rcll
repz
lods
mov
xchg
inc
jecxz
xchg
mov
movsb
lods
in
adc
xchg
test
mov
cmp
mov
fbstp
adc
push
sbb
cwtl
nop
popa
jne
xor
idivl
xor
rcrl
jl,pn
rcr
mov
shlb
leave
jl
lds
push
jge
xlat
jmp
test
dec
inc
dec
sub
adc
push
addl
bound
cli
add
push
jg
pop
adc
scas
outsb
xor
ljmp
dec
inc
cmp
inc
xor
pop
cmp
scas
shlb
das
fbstp
lods
cmp
nop
test
jne
xchg
aas
nop
sahf
ret
test
sub
repnz
std
lret
cmc
sbb
popa
push
inc
sub
scas
xchg
pop
cli
mov
jns
or
xor
xor
sbb
leave
mov
mov
lea
into
xchg
pop
sbb
jle
shrl
int3
out
mov
imul
mov
insl
outsb
dec
or
movsb
push
pop
mov
xchg
inc
xor
sub
push
push
je
mov
adc
pushf
sub
push
pop
xchg
aaa
shlb
add
sar
pop
orb
cli
xchg
sarl
lock
imul
push
iret
push
push
mov
jae
cmc
xchg
jmp
dec
push
into
push
inc
push
es
inc
mov
add
pop
mov
jg
lock
jecxz
mov
out
xchg
data16
sahf
push
fs
cwtl
lods
push
or
jmp
lea
pop
mov
test
ror
or
test
jnp
out
hlt
repz
stos
imul
neg
vmovaps
movsb
inc
insl
flds
cmp
mov
mov
iret
repz
inc
add
inc
mov
push
cmp
mov
mov
add
pop
add
and
scas
xchg
bsr
int3
cmp
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
into
push
repz
push
add
cmp
jmp
in
cmp
and
mov
inc
ss
sbb
sbb
ret
aaa
pop
andb
ret
test
inc
clc
xchg
add
push
cld
mov
mov
xor
cmp
scas
aaa
push
jecxz
xchg
negb
xchg
clc
inc
mov
add
inc
pushf
repz
pop
shlb
inc
testb
add
pop
jle
pop
pop
jecxz
mov
je
mov
out
popa
dec
jnp
int3
jae
push
add
aaa
add
jne
cmp
lahf
and
mov
movsb
cld
frstor
rol
xlat
nop
outsl
push
rolb
jecxz
shrb
sbb
mov
cld
cmpsb
push
repz
lock
into
bound
inc
test
shl
stc
fsub
lret
push
dec
mov
xchg
out
test
and
jle
test
sub
sahf
movsl
and
dec
pop
jecxz
xor
pop
out
sub
adc
xchg
ror
mov
lods
pop
fs
add
jmp
stos
aaa
dec
add
in
addb
cmp
push
mov
arpl
imul
fstps
add
imul
mov
stos
sbb
test
test
dec
sbb
mov
ljmp
enter
mov
mov
add
mov
lret
adc
mov
sub
jbe
or
out
pusha
mov
je
inc
push
hlt
fstpt
mov
shlb
lds
pop
and
ficomps
sbb
xor
sbbl
jecxz
loopne
imul
shl
inc
mov
loope
in
or
inc
les
dec
faddl
and
xor
lods
mov
std
jb
push
gs
cltd
lds
push
cmp
jg
int
push
frstor
sub
pop
add
add
jo
and
loopne
cmpsl
cmp
mov
or
mov
repnz
incl
inc
rcrl
sub
and
xchg
adc
mov
sbb
loop
mov
dec
jp
stos
cwtl
scas
in
inc
sub
je
or
sub
xchg
popa
les
pop
outsl
scas
js
je
sti
cmp
ja
ss
jle
sub
ror
fiaddl
adcb
push
jle
dec
and
cmc
mov
shl
jmp
lret
inc
fistps
jae
pop
mov
rcrb
xor
jmp
or
movsl
push
mov
or
or
inc
fsubrl
fwait
out
add
mov
add
dec
cmp
hlt
mov
in
decl
test
push
aad
sub
js
lahf
insb
lret
lret
pop
pop
out
test
push
push
cmc
sbb
mov
mov
ror
gs
inc
clc
loopne
sar
jge
pop
xor
out
lods
dec
stos
mov
or
mov
enter
push
mov
sbb
fs
push
cli
jns
inc
cmc
scas
es
xchg
xlat
nop
loopne
mov
out
fisubs
bound
test
cmp
xchg
insl
inc
popf
mov
sbb
sbb
and
rol
fists
adcl
inc
ret
jmp
adc
dec
sahf
test
jnp
pop
fstpt
push
xchg
fs
loop
cmpsl
pop
add
jno
mov
pushf
mov
dec
sub
je
stos
fisubs
xchg
mov
insb
mov
mov
jmp
je
fstpl
loope
cltd
or
or
insl
pop
sahf
je
hlt
mov
pop
jae
or
mov
fisubl
popa
popf
and
or
fisubrl
adc
data16
push
out
cmp
mov
mov
jge
mov
fs
fadd
sbb
ljmp
add
cmp
pop
ficompl
call
sbb
imul
adc
push
aam
adc
imul
pushf
xchg
sub
fmuls
clc
fists
fcomps
add
aam
lahf
js
shrl
rcr
dec
fistpl
fs
xor
cli
mov
xor
jge
or
ss
inc
fs
stos
inc
jne
les
jne
adc
add
dec
jp
xchg
pop
xchg
jmp
test
cwtl
inc
ss
cmp
cmp
xchg
xor
mov
dec
sub
mov
mov
test
xchg
lds
jo
push
cwtl
or
in
hlt
adc
add
mov
push
int
cmp
test
mov
mov
dec
jmp
xor
or
mov
sbb
inc
shll
maxps
int3
pop
insb
pop
inc
repnz
dec
mov
xchg
int3
in
lea
jle
jo
insb
jecxz
or
xchg
insb
les
lret
repz
pop
adc
xchg
jae
adc
cmp
sbb
sbb
shll
loop
inc
jb
mov
push
rolb
push
cs
lods
jb
aam
cmp
mov
inc
push
ret
sub
loopne
stos
dec
cmp
data16
mov
out
incl
test
pop
fwait
push
repz
pop
fisubrs
lret
sahf
jmp
push
call
jl
fnsave
jecxz
mov
ja
sbb
jae
data16
enter
cltd
jnp
pop
pop
mov
adc
push
sar
mov
cmp
cmp
out
sub
inc
inc
and
xchg
sbb
sub
mov
rcll
sahf
mov
cmp
loop
add
sub
mov
adc
dec
inc
ficoml
repz
popa
mov
mov
movsl
mov
xchg
pop
andb
mov
mov
insb
sbb
lea
pop
andb
sbb
mov
lock
sbb
xchg
pushf
dec
adc
jg
mov
loope
scas
int3
add
je
mov
lea
jmp
sub
or
js
cmp
hlt
frstor
sub
or
sub
jge
dec
jbe
mov
push
and
out
push
out
test
mov
dec
inc
shll
das
sub
xor
jp
mov
int
mov
or
repnz
lock
mov
loop
aam
dec
inc
out
push
dec
gs
in
adc
sub
cmpsl
mov
test
or
jne
sbb
popa
mov
out
mov
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
adc
dec
cs
add
inc
movsb
xchg
xorb
dec
mov
movsb
std
add
in
add
dec
cmp
stos
and
lcall
dec
xchg
xchg
hlt
inc
sbb
or
xor
dec
mov
ss
and
push
dec
jb
inc
mov
ja
push
sbb
enter
mov
push
add
mov
mov
mov
lds
mov
jnp
ret
fnsave
movsb
movsl
inc
rcrl
mov
dec
mov
mov
cmp
rolb
mov
mov
movsb
daa
ss
or
sbb
lret
xchg
xchg
push
and
add
mov
in
insb
inc
scas
mov
sub
insl
sbb
fdivl
mov
movl
notb
mul
dec
cmpsl
stos
mov
dec
push
pusha
dec
in
sub
aas
imul
cmpsl
stc
insb
stos
fsubrs
cmpsb
inc
sub
out
push
icebp
notb
rcrl
mov
insb
fldl2t
pop
popf
aad
jb
mov
jne
lahf
xchg
jle
pop
into
imul
ficompl
sub
adc
xchg
cmp
dec
rorl
mov
outsl
popf
xchg
xchg
fcmovb
das
pusha
int3
push
dec
xchg
pop
scas
jnp
mov
mov
int
jp
in
dec
fnstcw
dec
ret
movsb
fiaddl
hlt
arpl
mov
xor
inc
xchg
add
jno
mov
mov
std
push
xchg
call
xchg
adc
scas
call
sub
cmpsb
fisubl
cmp
ret
xorl
int
cmpsl
and
add
cmp
popa
xor
and
jb
cmp
jg
scas
pop
adc
push
push
inc
xor
aam
adc
sub
test
sub
leave
jl
outsb
stos
sub
aad
push
cld
push
cmp
ret
pusha
and
mov
stc
pop
lods
push
icebp
lea
jmp
add
push
adc
xchg
stos
and
shlb
icebp
mov
aaa
icebp
imul
loope
mov
xchg
lods
pop
xchg
add
push
mov
sbb
inc
mov
cli
cmp
pop
mov
cmp
cmp
mov
lods
push
mov
fstpt
xchg
adc
insl
sub
scas
imul
bound
xchg
outsl
and
adc
sub
rorb
ret
cmpsl
dec
scas
inc
jl
and
imulb
rcl
add
mov
mov
pop
addl
inc
popa
pop
jp
dec
mov
sbb
cmc
add
fwait
and
sbbl
dec
aam
inc
add
jge
inc
cmp
jbe
in
jge
push
mov
xor
adc
cmp
pop
lret
xor
adc
dec
mov
mov
icebp
pop
pop
inc
inc
dec
pop
sub
xchg
enter
push
or
or
mov
push
pop
into
in
pop
fadd
dec
mov
xchg
mov
lret
inc
xchg
scas
push
test
shrl
das
mov
pop
int
repz
gs
rclb
pop
mov
lds
test
sbb
add
inc
sub
cmp
movsl
pop
sub
add
int
push
jecxz
inc
scas
int3
in
mov
cwtl
sbbl
cmp
aam
pushf
movsl
xchg
rcll
xchg
fldt
stc
lds
mov
nop
jl
dec
add
ss
fsub
das
ret
inc
int3
dec
push
les
push
cld
pop
imul
imul
insl
pushf
pop
fdivrs
xor
lea
sbbb
fisttpll
repnz
je
add
out
jns
dec
mov
mov
es
lret
mov
sub
push
inc
and
mov
xchg
lahf
jnp
or
push
dec
sbb
mov
cmp
sbbb
lret
push
sbb
push
adc
fsubr
data16
mov
sbb
sarl
out
hlt
lea
outsb
cmp
outsl
repnz
pop
sbb
cmc
and
inc
push
xor
sub
inc
sub
or
inc
pop
push
hlt
xchg
add
pop
and
mov
xor
pop
inc
ss
cmp
das
pushf
cwtl
mov
out
subb
mov
out
jmp
movsb
lods
sub
test
sub
jg
sbb
movsbl
daa
fdivr
mov
test
lcall
aaa
inc
push
and
cmpsb
mov
popl
shr
ficomps
pop
mov
dec
hlt
ljmp
add
lods
imull
divl
jl
adc
addr16
clc
xchg
pop
or
add
mov
push
inc
pop
add
int
xchg
jecxz
ds
dec
out
fsubl
bound
and
or
mov
sbb
push
cmp
lods
aam
or
or
fidivl
loope
dec
dec
das
mov
fidivrs
insl
test
mov
mov
cmc
xchg
imul
repnz
divl
in
movl
fs
pop
aaa
dec
mov
sub
xchg
lret
shlb
jbe
or
fisttps
fwait
in
cld
sarb
shrb
out
and
add
ret
xor
stos
dec
ljmp
pushf
mov
or
mov
cmp
fisubs
pop
mov
or
cmpsl
into
xchg
out
lds
jg
jmp
stos
jo
and
loop
pushl
mov
fsubl
cmp
xchg
ret
sahf
mov
les
iret
push
addr16
sbbb
pop
inc
and
and
das
and
inc
pop
in
stos
imul
fwait
inc
dec
test
in
ljmp
xor
stos
add
loop
add
adc
mov
cmp
xlat
cmc
push
lods
add
fisttps
test
imul
mov
popa
dec
dec
pushl
scas
out
outsl
mov
mov
repnz
mov
subb
cld
adc
jle
lret
outsl
hlt
incb
mov
lcall
std
ror
dec
push
fcomi
sbb
popf
outsb
add
outsl
movsb
pop
jmp
jbe
sub
pop
cld
sub
pop
sbb
outsb
je
dec
cmc
fwait
pop
data16
and
mov
sub
lods
adc
int
add
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
adc
dec
in
inc
add
cltd
pusha
pop
cld
lods
cwtl
cld
xor
sbb
dec
ss
inc
aas
mov
enter
push
mov
in
mov
repnz
dec
inc
jno
or
data16
xchg
out
sbb
cmp
in
push
cli
ja
arpl
stos
int
mov
repz
add
scas
and
mov
cmc
inc
mov
ds
nop
inc
cmpsl
sbb
push
ret
mov
add
push
lds
xchg
fiaddl
mov
and
aaa
cs
jecxz
out
sti
inc
push
and
fists
es
test
mov
mov
ja
jns
or
sahf
sbb
adc
adc
jns
loopne
int
das
int3
lock
xor
rcrl
imull
inc
outsl
fcmovbe
rorl
push
xor
test
cld
and
fndisi(8087
test
dec
ffreep
aad
dec
jnp
ds
xchg
and
pop
movsb
jae
cmpsb
mov
aaa
dec
mov
inc
adc
cltd
mov
pop
mov
sbb
jb
les
dec
push
jg
jmp
mov
jns
cltd
es
inc
cmp
and
sbb
add
mov
sub
jl
add
sbb
in
insb
jp
or
mov
mov
repnz
into
mov
frstor
andl
jecxz
leave
icebp
lret
dec
xor
inc
stos
xor
ficomps
dec
dec
push
aad
repz
pusha
jae
arpl
loopne
jmp
shrl
mov
inc
loop
fildl
sbb
jecxz
and
dec
popfw
pop
sub
imul
add
inc
lret
stc
cmp
adc
fimull
push
mov
shr
cmp
jp
adc
xor
inc
xchg
xor
rolb
mov
outsb
dec
cmovp
fwait
push
cmpb
ja
jno
push
sub
dec
stc
mov
insb
jo
lea
xor
mov
mov
imul
cltd
out
in
jecxz
call
add
mov
inc
dec
pushf
rorb
xlat
adc
push
mov
cld
inc
xor
cwtl
loope
mov
sub
adc
fiaddl
jb
fucomip
or
pop
pop
xor
pop
pop
sar
mov
pop
cli
nop
pop
adc
sbb
push
cli
pop
insl
popf
sub
add
out
pop
cli
in
mov
inc
push
arpl
add
call
movsb
xchg
jmp
outsl
divl
inc
rcll
mov
shll
jp
fucomi
arpl
movsl
dec
inc
stos
lret
js
pop
sar
push
mov
mov
jmp
test
push
jnp
jp
gs
jmp
inc
es
stc
and
jmp
mov
sbbb
fidivrs
mov
int
cmp
arpl
xor
jbe
dec
xchg
aas
dec
in
loop
js
and
nop
mov
clc
and
shrl
inc
adc
in
fdivrs
sarb
jae
mov
data16
inc
mov
mul
pushf
ja
inc
adc
or
test
jp
push
bnd
jno
stos
add
mov
cmpsb
leave
jecxz
xor
dec
sbb
cmc
push
mov
push
or
fnstsw
cmpsb
pop
xlat
ret
or
mov
push
xchg
cmpsb
cs
dec
inc
sub
sarl
int3
and
lret
fs
mov
or
mov
mov
hlt
add
jecxz
je
inc
xchg
repz
outsb
push
clc
push
sbbb
add
cmp
std
pushf
insl
jecxz
add
loope
xchg
cmpsl
mov
sbb
movsb
push
stc
pop
jl
ja
adc
gs
lods
mov
rorl
sti
loopne
xor
call
cmp
xchg
xor
cmp
jmp
std
pop
pop
js
call
jecxz
dec
bound
or
cmpsb
mov
lret
sub
pop
nop
insl
jbe
cwtl
dec
repz
xor
push
mov
cmp
mov
repnz
ret
pop
ljmp
imul
out
xchg
fs
sbb
sbb
dec
pop
add
jns
icebp
pop
adc
xchg
mov
clc
outsl
xchg
push
nop
add
fdiv
jl
jmp
shll
jns
std
dec
xchg
into
adc
and
icebp
out
iret
jecxz
push
js
nop
cwtl
jg
and
adc
pop
sbb
lea
pop
adc
and
jp
mov
lret
jecxz
sbb
hlt
adc
decb
out
into
pop
add
xchg
xor
enter
or
popa
dec
jp,pt
insl
add
or
mov
clc
call
out
dec
inc
mov
outsb
int3
subl
jnp
pop
rorb
ss
cmp
loop
addl
xor
jg
pushl
pop
xor
int3
jbe
push
dec
enter
and
xorl
inc
dec
dec
popa
sub
sub
into
cmp
inc
cmpsb
dec
mov
mov
in
sub
push
pop
add
popf
mov
sub
xlat
sub
mov
imulb
mov
les
mov
mov
fsubr
dec
jecxz
and
sbb
cmp
adc
inc
jno
xchg
sub
jo
repnz
js
daa
decl
cmp
lcall
cmc
xchg
mov
or
jae
push
inc
mov
insb
cmc
sub
icebp
push
hlt
stc
es
mov
popf
jp
rclb
mov
arpl
xor
out
scas
sub
dec
ficoml
mov
sbb
out
fcoms
push
cmp
dec
cwtl
and
pop
add
mov
push
data16
aaa
push
and
xchg
fmul
or
mov
jnp
mov
pop
movsl
inc
cmc
push
rorl
push
push
fs
fisttps
push
sub
sbb
inc
mov
adc
aaa
dec
mull
gs
je
andb
into
sbb
or
mov
add
orb
scas
mov
hlt
xor
lret
dec
push
cld
stos
xor
scas
test
jnp
jns
adc
mov
jl
dec
adc
mov
addb
jle
mov
pop
notb
pop
popf
xchg
dec
inc
xchg
xlat
cwtl
shr
cmp
mov
aas
gs
or
out
das
int3
insl
popf
pop
ss
xchg
scas
dec
enter
xor
dec
mov
jp
or
adc
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
xchg
push
shll
add
daa
lea
scas
jmp
ret
roll
xor
aas
cmp
out
pop
mov
pop
push
inc
jge
mov
out
mov
xchg
arpl
les
xor
xor
cmp
sub
out
fistpll
mov
outsb
nop
mov
fimuls
xchg
pop
and
sub
test
data16
mov
retw
xor
scas
mov
mov
out
mov
jnp
fidivrs
fistpl
std
call
dec
ret
gs
sti
add
mov
arpl
or
stos
fisttpl
daa
mov
mov
mov
out
inc
mov
testl
out
cmp
rcr
add
xlat
xor
cmp
shrl
bound
xor
sub
aam
stc
inc
sbb
inc
adc
lcall
push
mov
shll
sub
fistpl
neg
insb
mov
xor
fwait
dec
push
stos
mov
decl
jne
fsubl
xor
cmc
jl
push
imul
pop
dec
out
mov
mov
in
scas
xchg
nopl
or
push
std
adcb
imul
shll
push
xor
out
xchg
mov
outsb
loope
pop
pushf
and
int
add
mov
dec
cmp
fwait
addl
mov
push
jp
sti
inc
lahf
test
lret
push
dec
aam
fidivrl
and
mov
sahf
add
push
sub
pop
and
int3
xor
cmp
int3
jns
popa
adc
sbbb
fcomps
aam
mov
cltd
adc
xor
jae
mul
cmp
inc
pop
xchg
or
ljmp
fs
jo
mov
pop
js
les
dec
xchg
int3
pusha
mov
sbb
fisubrs
in
out
imul
jecxz
adc
ficompl
and
lahf
pop
sub
gs
loope
push
cmp
jge
mov
lea
aas
loopne
sbb
fstl
sub
sahf
test
cmp
mov
cmp
call
mov
inc
xchg
or
cmp
mov
jmp
inc
pop
push
xchg
out
ret
push
mov
std
les
pop
aaa
int
ljmp
xchg
out
fadds
sti
repnz
movsb
adc
adc
test
mov
add
inc
roll
push
pushl
inc
inc
jno
cld
mov
jno
movsl
sub
fwait
cmpsl
xchg
xchg
mov
sub
push
hlt
adc
subb
sbb
lock
mov
push
cmp
test
dec
push
xorl
popa
int
dec
or
or
out
lds
aam
scas
inc
jno
cltd
fadds
negb
leave
sub
pop
push
push
xor
outsl
shr
xlat
fisubrl
stos
push
test
mov
outsb
mov
mov
mov
int
mov
add
cltd
jnp
iret
insl
xor
scas
jp
movsl
inc
data16
mov
inc
cld
xor
and
lahf
popl
fistps
dec
push
imul
pop
push
inc
insl
sub
sub
pop
das
cltd
daa
test
mov
pop
fwait
and
add
out
sub
dec
cwtl
jno
cmpsb
adc
adc
xchg
or
ficomps
push
mov
cld
pop
dec
jbe
add
jnp
xor
call
sbb
dec
loop
cli
aad
fdiv
cmp
add
cmp
mov
das
or
mulb
xchg
xor
cmp
test
ficoms
dec
jb
daa
and
xchg
jno
pusha
into
cmpsb
or
jo
iret
push
bound
lea
ret
pusha
test
or
jns
inc
fnstsw
mov
sub
mov
in
jne
ret
push
sub
cmp
out
and
ds
dec
lods
imul
mov
cmpsb
mov
jbe
cmp
ja
imul
or
mov
sub
mov
rcrb
push
push
repz
pop
sti
loopne
push
cmpb
stos
and
test
xlat
into
orb
cmc
adc
mov
loop
notl
shlb
repnz
xor
sbb
int
add
cmp
lret
mov
cmp
mov
adc
int
int
xchg
loope
xor
idivb
js
mov
insb
leave
imul
mov
or
inc
testl
pop
fcomps
test
jge
cmp
cltd
rcr
and
add
loopne
sar
gs
or
dec
leave
jmp
mov
je
shr
out
outsl
mov
cld
test
mov
ja
push
adc
lods
sub
pop
dec
inc
in
adc
inc
push
sub
iret
ret
dec
fs
sub
fwait
daa
fimull
mov
outsb
push
xchg
xchg
xchg
pushf
pop
add
jecxz
mov
cmp
lret
test
mov
jae
cmp
stos
out
inc
sbb
out
roll
rcrl
jmp
xchg
pop
pop
pop
lret
xor
fs
dec
scas
push
test
sti
mov
push
pop
ud0
dec
je
pop
jo
mov
dec
cmp
lods
adc
je
call
adc
loopne
fdivl
fbld
outsb
xchg
cmp
pop
imul
adc
shrb
inc
fildll
xchg
cld
xor
ja
mov
in
push
lods
rol
mov
cmp
idivb
jmp
scas
mov
cld
shr
ds
and
sar
scas
jae
add
xchg
inc
pushf
inc
jp
scas
and
push
enter
imulb
js
std
inc
popa
aas
lea
test
inc
lods
sub
lahf
ret
cmp
imull
adc
jecxz
mov
mov
lods
and
stos
add
dec
cltd
rorl
push
ss
ficoms
lret
ljmp
mov
jmp
adc
loope
add
sub
xchg
fnstsw
push
xor
movsl
cmp
dec
jp
test
push
or
xor
aam
jg
mov
pop
loope
mov
rclb
mov
inc
fnstenv
popa
sub
xchg
xchg
xor
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
and
add
sbb
mov
sub
pusha
jne
and
mov
imul
sub
das
rcrb
cld
jbe
iret
xor
pop
movsb
outsb
out
add
push
push
push
push
push
mov
fwait
mov
aad
dec
ja
cld
inc
inc
fisubrl
mov
addr16
test
jmp
lds
jp
ret
cmp
std
test
les
pop
cmp
stos
xchg
out
and
pop
dec
add
xchg
and
cwtl
mov
add
aaa
fs
push
inc
inc
jle
fldl
into
inc
push
pop
cmp
aad
je
cwtl
ljmp
addr16
pop
cmp
sbb
aas
aas
dec
daa
and
cmp
bound
inc
ss
and
mov
lods
pop
dec
imul
nop
mov
mov
adc
or
mov
fidivl
pop
mov
sub
imul
adc
mov
mov
rorl
push
xor
mov
push
shll
mov
sbb
mov
jge
in
lcall
test
dec
adc
test
jbe
or
and
mov
das
adc
mov
fmul
iret
scas
cmc
jg
xor
cmp
fildll
movsb
lods
sub
das
jge
loope
and
cs
cltd
xchg
sub
je
negl
lods
inc
movsl
sahf
inc
notl
or
loop
pop
push
pop
xchg
sub
daa
inc
jno
jb
mov
sub
inc
sti
in
push
insb
push
fisttpl
fwait
push
movsl
mov
out
mov
and
xchg
sbb
inc
aam
or
dec
push
push
jne
jns
or
in
adc
sbb
push
imul
ja
inc
popa
sahf
xchg
clc
cmp
push
lods
loop
ret
cli
int3
mov
fbld
adc
insb
pop
inc
adc
ljmp
xchg
push
xchg
lock
dec
mov
sub
addr16
fldl
rolb
push
in
std
aad
orl
sub
jmp
ljmp
arpl
and
sbb
int
out
sub
ja
out
add
xlat
push
mov
adc
fisttpll
scas
in
lods
stc
nop
rol
sarl
jno
xchg
and
adc
cmp
and
mov
push
js
gs
push
jnp
dec
xor
jae
loop
out
push
andl
jp
test
dec
xchg
and
movsl
mov
scas
or
call
or
push
call
push
or
push
aam
or
sub
jecxz
inc
mov
sbbb
push
test
push
in
int
rol
dec
aam
pop
outsl
jle
push
xchg
adc
repnz
adc
jbe
popa
xchg
xchg
jbe
jge
test
xor
adc
pop
aam
ss
lea
leave
bound
pop
dec
into
sub
dec
bndstx
mov
sbb
add
ljmp
out
pop
pop
sub
jno
fwait
shl
jmp
lock
pop
dec
cmpsb
inc
jns
dec
mov
push
loop
insb
mov
xorl
movsl
sub
jge
sub
dec
iret
popa
or
xor
mov
push
sub
adc
lods
fnstenv
xlat
ret
into
int
lret
or
mov
int
je
aad
fcompl
cmp
clc
and
and
test
shl
andb
out
and
push
mov
lret
sub
sarb
enter
inc
mov
mov
mov
and
push
mov
and
sbb
cmp
mov
movsl
ret
pop
push
imul
ds
inc
and
ret
add
jge
push
mov
mov
mov
push
xchg
pop
movsl
inc
adc
or
fbstp
ss
pop
clc
fwait
cltd
dec
push
pushf
inc
outsl
cmp
or
xchg
loop
int3
push
pop
jecxz
dec
push
push
jae
inc
stos
xlat
in
ja
cli
mov
mov
data16
imul
iret
inc
std
xor
mov
lcall
xchg
or
push
int
loop
out
add
cmp
push
dec
std
or
cmpsb
dec
push
int
and
popf
or
lret
sub
add
fcompl
mov
addb
push
fs
add
pop
daa
and
mov
loopne
js
xlat
lret
cwtl
clc
jg
daa
fcmove
jecxz
scas
sub
mov
mov
dec
mov
dec
mov
aas
adc
stos
push
jns
push
mov
inc
xchg
mov
push
hlt
lods
pop
push
or
jmp
cmovge
jnp
imul
cmp
xchg
jo
jne
jae
mov
movsl
mov
sahf
add
rcr
test
shrl
mov
jle
mov
or
out
lods
jl
loopne
imul
scas
int
insl
fistpll
fwait
dec
outsw
add
mov
orb
movsl
jo
add
jns
mov
adc
inc
and
mov
sub
mov
in
add
shrb
int
pop
dec
arpl
xchg
inc
mov
mov
hlt
cvtps2pi
sbb
push
and
pop
push
sub
dec
enter
scas
icebp
jmp
adc
loope
loop
stos
push
aad
andb
cmp
leave
movsl
sti
inc
ljmp
mov
or
fsub
cltd
mov
mov
scas
inc
insb
ror
and
add
test
jmp
mov
aam
cmp
inc
push
lock
push
rcll
mov
rcll
pop
pop
clc
mov
push
pusha
dec
cwtl
outsb
dec
clc
sub
out
and
mov
mov
mov
js
or
pop
imul
pop
lret
fldcw
stos
dec
or
iret
lods
mov
adc
jne
xor
or
jb
inc
icebp
divl
inc
sub
hlt
andl
lahf
dec
rcrl
mov
push
xchg
xor
push
add
pop
das
jb
fstl
dec
mov
xor
inc
push
xchg
lds
lcall
out
into
jl
push
sub
push
jbe
pop
inc
orb
add
xchg
pusha
test
mov
mov
movsb
dec
pop
fwait
xchg
xchg
adc
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
movb
add
mov
mov
mov
roll
popf
inc
add
les
inc
repz
leave
sbb
jnp
pop
push
mov
stc
push
jg
pcmpeqd
fiadds
sub
fdivrs
shll
mov
fdivrs
rolb
rorl
mov
test
inc
in
push
lods
stos
or
out
push
xor
hlt
xor
dec
xor
jmp
imul
imul
sub
xchg
pop
fistl
or
or
movsl
or
fbstp
jbe
mov
shr
cmpsl
js
movsb
add
dec
pop
pusha
hlt
sahf
sahf
lods
add
inc
xchg
nop
outsb
shll
mov
mov
pop
das
inc
add
outsl
inc
test
adc
mov
pop
mov
jb
xchg
lcall
mov
popf
mov
push
in
mov
xor
pop
pop
pushf
scas
dec
jl
mov
mov
xchg
mov
roll
dec
pop
insl
pop
into
cwtl
decl
negl
mov
hlt
push
jecxz
add
mov
push
js
push
push
xchg
add
test
mov
pop
ljmp
push
mov
push
mov
stos
ret
and
inc
sbb
xor
lcall
outsl
jno
push
shl
pushf
and
fidivs
sbb
xchg
mov
daa
orl
pop
adc
popa
mov
leave
mov
mov
and
rolb
daa
cmp
enter
popf
inc
sbb
sbb
je
push
mov
inc
mov
int3
jp
xchg
push
jle
cmp
clc
test
popf
mov
cli
leave
mov
xchg
or
int3
inc
gs
jmp
adc
cmc
jmp
push
dec
les
mov
inc
mov
lret
sbb
or
or
xchg
dec
push
pop
xor
out
push
fcmovb
and
push
mov
jl
fs
or
xor
dec
lea
adc
es
sbb
xchg
les
jmp
adc
xorb
cmpsb
mov
or
or
cmp
sbb
xor
xchg
fcompl
lea
icebp
inc
pop
add
xlat
push
lret
stc
jno
add
in
pop
ja
jmp
cli
mov
icebp
mov
mov
lock
fsubl
jp
aad
push
int3
imul
test
jecxz
insb
arpl
adc
sub
push
iret
dec
sti
push
insb
lcall
je
les
in
stos
xor
in
fsubs
pop
sub
dec
pop
lcall
test
inc
dec
dec
inc
jns
inc
in
scas
pop
pop
jle
fsub
pop
call
popa
ljmp
sbb
add
push
gs
les
push
js
arpl
xlat
and
sbb
xchg
mov
jle
test
push
mov
jbe
xchg
jmp
push
loope
mov
dec
and
data16
dec
lret
adc
filds
in
pop
push
inc
sbb
aam
add
push
push
imul
inc
jno
cmp
mov
add
and
sub
pop
pop
mov
pop
push
sbbb
clc
negl
mov
aas
mov
out
shr
nop
rcrl
push
mov
push
bound
mov
sub
inc
sbb
xchg
incb
mov
cmpsl
or
loope
int3
in
or
mov
mov
fcompl
pop
sub
pop
adc
les
dec
fs
lcall
lret
adc
repnz
fwait
mov
fs
clc
jp
or
cwtl
fisttpll
outsl
dec
xchg
mov
mov
and
js
add
cmp
xchg
inc
iret
ret
gs
push
push
cmp
mov
xor
push
dec
lret
pop
mov
lcall
test
fs
in
jge
sbb
icebp
cltd
fnstcw
adc
rcll
std
sbb
push
dec
cmc
jp
dec
fnstsw
cwtl
sbb
int
pop
leave
out
fs
imul
mov
pop
dec
inc
imul
mov
xor
sub
and
js
or
xchg
mov
mov
shll
mov
fwait
pop
sbb
cmp
jp
inc
cmpsb
popf
push
ret
lods
aaa
dec
inc
dec
or
das
call
loopne
dec
rorb
add
dec
lods
xchg
inc
cmp
inc
or
sub
dec
lret
outsl
decl
or
adc
xchg
imul
xlat
mov
test
enter
jl
pop
fsubs
lcall
daa
add
loope
mov
rolb
push
sbb
shrl
lahf
mov
push
in
xlat
sub
dec
xor
sbb
jne
sub
add
pop
mov
insb
dec
sub
xor
add
insb
ss
cmp
cmp
pop
lods
jae
jae
out
and
int3
lock
sahf
jmp
dec
xor
push
jge
mov
mov
cmp
adc
cli
or
test
test
mov
inc
push
mov
cmp
nop
mov
xor
int
jl
icebp
cmc
jns
lock
push
mov
sahf
cmpsl
jno
out
jecxz
mov
push
int
push
mov
imul
ljmp
sbb
ja
mov
gs
add
mov
add
mov
rcrb
cwtl
push
lret
jmp
pusha
cli
lret
adc
in
arpl
jne
les
popa
push
cli
lea
daa
and
adc
pusha
cld
fsub
or
emms
jg
arpl
popa
xchg
cmp
inc
test
dec
sub
nop
push
data16
mov
popf
mov
rclb
int
ror
jae
lahf
bswap
ja
gs
push
xor
jmp
scas
adc
dec
mov
mov
andb
inc
in
adc
xchg
push
rcrb
sub
jns
jmp
sbb
mov
mov
popa
inc
sti
adc
mov
nop
pop
xor
or
xchg
dec
inc
nop
movsl
adc
and
cmp
pop
xorps
mov
ds
insl
xchg
jno
clc
add
mov
std
sti
std
inc
scas
inc
or
sub
ret
lock
das
stos
outsl
sbbl
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
cli
add
iret
xor
mov
and
cmp
push
xchg
sub
out
rcrb
fmul
mov
cld
pop
sub
out
mov
xchg
ljmp
sbb
jg
movsb
mov
mov
in
mov
andb
mov
int3
or
insb
push
dec
std
inc
fsubrl
leave
sti
loopne
aas
cmpsb
jle
xchg
out
call
push
mov
and
pop
inc
int
pop
sub
insb
lcall
xchg
cmp
rcrl
pop
pop
pop
mov
pop
push
mov
sub
sti
xor
and
es
bound
cmc
icebp
nop
in
daa
js
mov
jg
movsb
ljmp
xor
mov
aaa
cmc
dec
cwtl
jo
pop
dec
or
gs
sbb
int
mov
das
mov
pop
xor
xor
nop
push
xchg
loope
cltd
lret
sti
lret
fldz
test
adc
mov
dec
xor
cmp
shlb
shrb
inc
pusha
push
sub
imul
into
ret
insb
pop
push
bound
mov
out
push
pop
cld
push
jbe
push
popf
lahf
sahf
fwait
leave
jb
and
aas
fildl
mul
inc
sbb
insb
push
and
ficoml
repz
movsb
scas
hlt
pushf
gs
popa
lret
movsb
mov
dec
jp
jb
iret
or
jp
cld
loope
jo
adc
in
cmpb
into
jle
out
nop
stos
fstps
orb
fcmovbe
imul
je
xchg
mov
pop
fstp
pop
hlt
jns
lods
jp
pop
adc
iret
xchg
dec
inc
jns
mov
xor
rcrb
subl
int
call
add
adc
mov
mov
xchg
jmp
jmp
pop
outsb
mov
add
dec
inc
push
xchg
scas
icebp
jb
cli
jecxz
cmp
jmp
inc
adc
cwtl
pop
mov
cs
aaa
fists
mov
cmp
jl
out
adc
pop
xchg
jmp
or
pop
subl
in
pushf
jns
test
push
push
addr16
es
adc
int3
enter
sbb
jp
stc
mov
dec
sub
in
mov
cmp
call
jno
sbb
adc
inc
xor
aaa
orb
cmp
int3
pop
and
cmpsl
pop
mov
je
jbe
mov
incl
and
in
mov
rol
sbb
icebp
popf
div
test
ret
cmp
xchg
int
jb
ficomps
xchg
fwait
stos
sbb
inc
imul
push
out
ds
xor
aas
dec
xor
mov
mulb
mov
arpl
sahf
shll
push
aas
inc
dec
add
pop
mov
adc
or
dec
pop
les
jb
icebp
lods
and
out
test
fidivs
and
fisubl
mov
and
les
adc
cmpsb
sahf
push
fmuls
shrl
mov
push
xor
pop
clc
in
pop
inc
lahf
push
push
jle
enter
insl
fldl
jns
imulb
insl
or
mov
xor
arpl
xchg
enter
cltd
icebp
pop
sub
inc
addb
mov
xchg
jb
mov
mov
cmp
stos
aaa
sahf
int
rcl
xor
add
mov
rorl
out
xor
cmp
xchg
inc
out
cmp
in
lahf
daa
adc
dec
sahf
scas
rol
pushf
sti
jb
or
jb
aam
sbb
jg
sbb
loopne
mov
js
fadds
outsb
push
popf
jmp
lods
mov
movsl
add
pop
mov
sub
testb
arpl
decb
push
jge
sub
popf
mov
addr16
jno
js
fwait
jl
loope
add
jne
das
sti
inc
mov
and
fdivrl
pop
mov
ret
pop
dec
rcl
fbld
les
xor
arpl
or
adc
leave
rcr
call
pushf
out
lahf
sbb
dec
and
add
mov
push
shll
xorl
lret
gs
push
ret
and
xor
push
sbbb
adc
adc
lahf
lcall
dec
daa
gs
stos
jo
mov
or
fisubrs
ds
test
and
test
ficoms
aaa
dec
int3
dec
cs
inc
lahf
inc
jae
mov
fildl
mov
sub
mov
xchg
lret
scas
adc
call
jne
test
jp
clc
js
jns
adc
sbb
xchg
pop
sbb
mov
imul
jae
es
andl
jg
pushf
dec
inc
sub
inc
je
xor
and
lea
ficompl
mov
movaps
cmp
out
mov
add
repnz
mov
adc
fbld
sbb
test
sti
insl
push
inc
pop
incl
aad
xchg
push
dec
mov
jnp
in
xchg
in
sbb
insl
fistps
gs
mov
repz
clc
adc
hlt
push
jmp
jge
movl
ljmp
xor
xchg
cmp
test
jae
test
jp
movsl
cmpsl
xchg
fidivrs
or
xor
insl
pop
pop
into
imul
aam
ret
ja
loope
and
repz
xchg
scas
xchg
js
mov
dec
xchg
sahf
fisubrs
popa
mov
push
int3
mov
in
mov
inc
cmpsl
fnsave
jmp
add
testb
sbb
test
les
test
inc
sub
sub
ret
rcl
xchg
cltd
mov
jae
mov
fsts
mov
push
decb
rcll
in
loop
jbe
aaa
lret
fmuls
mov
adc
lcall
rorl
lea
xorl
and
jg
shrw
add
aas
xor
mov
jecxz
repnz
sbb
fstp
add
lahf
pop
mov
addr16
in
cld
sbb
jl
xor
je
xchg
stos
out
jbe
mov
call
lcall
fisubrs
arpl
adc
cld
add
pushf
test
insl
repnz
ja
mov
sub
sub
movsl
in
pop
ficomps
jmp
outsb
jg,pn
inc
xabort
sbb
movsl
jp
lahf
push
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
inc
sti
cmp
mov
add
mov
xor
cmp
push
dec
pushf
scas
mov
andb
fidivl
sahf
popa
xchg
push
int
cwtl
fimuls
add
in
aam
fs
sub
mov
aas
sub
out
xchg
jp
shll
inc
mov
es
aas
mov
lret
inc
lret
mov
push
add
test
mov
mov
scas
xor
pop
lret
mov
cmp
pop
xor
or
int
inc
adc
in
lock
sbb
and
cltd
push
loopne
xlat
repnz
cs
xor
rcr
cmpsl
push
shll
out
push
sbb
xchg
loop
insl
inc
add
push
insl
xor
jle
inc
jg
push
out
jge
stos
push
jmp
push
adc
sub
sbb
loope
loop
jmp
adc
and
mov
fistl
jno
xchg
pop
cld
fcomi
jecxz
pop
mov
dec
pop
adc
sbb
push
or
out
mov
and
or
xchg
or
ficompl
loope
jg
sub
test
push
leave
xchg
sub
cmp
loopne
cmpsl
pop
call
mov
jo
xchg
out
repnz
fnstenv
lods
daa
fstps
xchg
add
sti
movsb
dec
call
shll
add
cmpsb
hlt
xchg
add
daa
idiv
sbb
push
inc
call
jg
in
cmp
xchg
arpl
mov
and
fistps
rorl
adc
rorl
ds
push
repz
fstl
xchg
inc
push
in
cmp
sahf
popf
lahf
pop
repz
pushf
or
xchg
mov
mov
mov
das
mov
jbe
arpl
lock
xchg
push
lock
jnp
or
test
roll
sti
ds
adc
pop
mov
imul
testb
or
jo
fisubrs
je
dec
std
and
insl
fistpl
sub
mov
jo
cwtl
xchg
xchg
push
addl
jne
call
in
jecxz
in
mov
adc
cmp
sbb
push
dec
dec
push
arpl
jnp
and
cmpsl
jle
outsb
sarb
mov
dec
mov
xchg
pop
aaa
xor
stc
pop
repnz
insb
out
leave
lret
jle
adc
dec
sub
mov
jmp
cltd
pop
fwait
jg
stos
mov
and
or
mov
in
aad
cmc
add
jmp
mov
mov
sbb
enter
mov
sbbb
pop
cmp
fstl
jnp
into
std
dec
jbe
arpl
mov
pop
jbe
mov
inc
cmp
mov
ds
and
lahf
sub
xchg
aam
pop
jne
mov
ss
push
sbb
repnz
lret
nop
add
in
mov
cld
add
and
jb
inc
dec
int
push
dec
dec
cmc
xlat
push
add
cmp
fadd
pop
xchg
xchg
ret
sub
and
inc
fs
xor
push
call
xchg
das
clc
xchg
mov
test
xchg
jno
les
jns
into
fucomp
jnp
ja
xchg
les
mov
or
jge
adcb
aam
cli
push
or
xor
sti
pop
pop
sub
xlat
cltd
call
or
imul
test
test
pop
les
testl
jmp
sbb
sub
adc
pop
outsl
ljmp
repz
out
icebp
dec
xchg
lahf
jp
lods
dec
popl
push
int
or
xor
addr16
push
jns
gs
jmp
das
dec
jo
icebp
sahf
lea
pop
call
scas
mov
movsb
jne
and
dec
popf
scas
dec
loope
or
cld
or
fdivl
fwait
cwtl
pop
mov
imul
ja
jo
out
inc
adc
das
shrb
adc
mov
dec
add
out
rorl
jp
int
pop
mov
in
push
and
js
jle
mov
dec
je
or
mov
mov
cmp
sbb
data16
lock
rol
adc
mov
dec
inc
push
jp
adc
xchg
jg
adc
add
or
dec
jae
mov
jb
push
dec
cmp
movsb
fdivrl
and
lock
xchg
cmp
frstor
outsb
add
mov
ss
sub
push
adc
fcoml
sub
cmpsb
mov
movsb
sbb
pusha
fisubrl
inc
add
push
ror
xor
mov
push
cmp
out
cmc
push
mov
jmp
pop
inc
or
mov
jae
fwait
cld
lods
xchg
scas
daa
addr16
data16
add
test
fst
andl
stc
dec
push
mov
sbbl
xor
cmp
call
inc
testb
add
movl
add
xor
hlt
inc
xor
ss
lea
or
aad
sub
in
xchg
aas
hlt
push
fucomi
cmp
xchg
push
xor
pop
pop
mov
repz
pusha
bound
dec
lret
hlt
xor
jg
mov
or
dec
iret
int
jae
jg
jne
mov
sub
fisubrs
pop
mov
stos
mov
adc
ljmp
frstpm(287
jnp
les
pop
cwtl
out
movsb
pop
add
pop
fwait
movsl
daa
push
mov
xchg
mov
mov
daa
popa
cmc
inc
sub
bound
mov
adc
push
rol
push
orl
xor
andb
push
adc
movsb
test
jmp
jnp
aam
imul
mov
loope
pop
mov
cld
not
adc
dec
dec
mov
incl
lahf
pop
aam
pop
imul
dec
in
sti
pop
sub
out
out
mov
arpl
mov
dec
out
jp
and
mov
pop
and
dec
mov
push
mov
adc
sbb
lret
push
adc
sbb
jmp
into
sbb
rcrb
int
mov
xlat
arpl
mov
data16
mov
inc
scas
pop
inc
movsb
adc
or
or
cmp
jecxz
scas
inc
shrl
xchg
adc
cwtl
sar
push
pop
fadds
push
jge
ljmp
cmp
fmuls
jmp
test
push
ret
xchg
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
pextrw
aam
cltd
push
adc
mov
stc
mov
clc
ja
loopne
insb
pop
pushf
aaa
decl
cwtl
jae
insb
sub
mov
adc
jnp
popf
hlt
push
push
data16
ret
jecxz
fisttpl
pop
cmp
mov
mov
lods
in
adc
loopne
dec
sub
and
into
sahf
outsl
sub
addr16
lods
inc
cmpsl
xor
push
in
ja
sub
mov
hlt
idivb
outsl
mov
imul
mov
cs
in
pushf
cwtl
add
cli
mov
nop
dec
jg
cltd
movsl
cmc
outsl
sahf
and
movsl
leave
xor
scas
xchg
mov
and
xchg
push
mov
pop
mov
xchg
pop
pop
add
cli
fcompl
add
fsubl
addr16
repz
lods
adc
sbb
inc
adc
in
jmp
dec
jmp
test
popf
adc
js
lods
sbb
lods
test
lahf
jp
pushl
repz
mov
mov
inc
aas
mov
lcall
xor
rcll
jne
setb
aam
loop
dec
lea
xchg
scas
clc
ret
lret
inc
or
cs
jmp
ljmp
test
xor
mov
into
clc
add
inc
xchg
jbe
xchg
int3
mov
mov
mov
loop
pop
test
xchg
jbe
fsts
pop
cmp
xchg
movsl
push
repz
pushf
pop
xchg
dec
add
enter
ss
push
jns
jp
call
jp
fldcw
out
in
lods
jo
repnz
or
jg
push
out
pushf
dec
scas
adc
je
jp
cld
test
pop
arpl
imul
rol
jmp
gs
pop
lods
xchg
test
mov
adc
pop
rcrb
sahf
sub
pop
mov
test
divb
xchg
mov
mov
inc
cmp
cli
test
inc
movsl
inc
pop
mov
sub
loope
add
adc
push
icebp
test
divb
fildl
movsb
lret
mov
pop
test
mov
cld
sub
in
popa
pushf
xchg
clc
sbb
int3
mov
mov
cmp
mov
mov
mov
adc
movsl
push
xchg
ja
in
in
add
pop
inc
aas
in
lret
notb
mov
iret
sbb
jle
cltd
clc
frstor
mov
adc
lock
sarl
push
or
rcrl
std
xor
push
xlat
fsubs
push
push
adc
aas
rolb
ret
xchg
cmp
dec
push
fdivrs
les
insb
shlb
push
or
fstpt
outsb
lahf
scas
lock
cmp
add
into
xor
push
int
scas
mov
mov
pop
in
mov
sbb
fsubs
test
push
xorl
sbb
xor
call
pop
jae
jbe
adc
push
insl
enter
stos
xor
aam
push
fsts
ret
or
loop
cmpsb
mov
sub
inc
gs
push
lcall
adc
lret
or
lcall
in
pop
cwtl
out
lods
je
out
ljmp
push
fiaddl
insl
xor
sub
jns
dec
and
aam
inc
fsts
adc
inc
rorl
je
dec
mov
mov
imul
sub
dec
jge
cs
cmp
shl
lea
outsb
test
das
and
in
xchg
mov
subl
mov
and
sbb
inc
pop
std
pop
push
dec
jb
add
mov
dec
aad
xor
lret
dec
xchg
jae
mov
leave
cmpsl
dec
or
add
adc
fdivrs
push
push
adc
pop
shlb
mov
jl
bound
lahf
hlt
fcompp
adcb
mov
hlt
cmp
divl
and
inc
out
xor
sbb
cmp
mov
addb
cmp
clc
push
jmp
or
aas
xchg
loope
mov
in
inc
sub
or
and
fstpt
push
sub
adc
mov
cli
xchg
lret
jecxz
leave
adc
insb
sub
xchg
xchg
dec
add
pop
icebp
in
jae
shl
sti
mov
mov
add
loop
js
js
fsubs
leave
push
inc
pop
jge
rcrl
mov
int
adc
mov
dec
push
test
push
test
mov
fs
sub
je
jnp
sub
xor
fildll
nop
add
cmp
push
sbb
sub
lret
jmp
sbb
and
ss
cmpsb
popw
push
sahf
stos
scas
inc
cmp
xchg
sub
imul
xor
fldcw
sub
movsl
popa
inc
scas
sti
cmp
mov
jno
sahf
dec
xchg
jg
aad
jle
jge
jae
scas
and
push
mov
mov
ret
iret
push
and
sbb
clc
movsl
push
rcrl
int
je
push
mov
lds
dec
icebp
out
jp
xchg
aam
ljmp
out
stc
dec
inc
bound
stos
fisubrs
stc
xor
sbb
lock
fsubrs
add
or
test
sbb
iret
dec
cltd
loopne
pop
push
nop
lods
xor
mov
xchg
inc
lods
lret
sub
sub
xor
out
adc
loop
rcr
into
dec
call
mov
in
mov
sub
adc
int
mov
xchg
sub
jbe
stc
sub
ret
mov
icebp
lock
push
rcll
jge
imul
popf
push
loopne
mov
stos
jge
in
fwait
imul
xor
cmpsb
xor
ss
addr16
pop
call
fdivl
xchg
jp
cmp
call
in
inc
scas
hlt
cmp
testb
ret
stc
sbb
inc
add
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
or
mov
add
cmovnp
inc
dec
fldenv
jmp
push
shlb
std
in
or
lds
xor
data16
rcll
mov
cmp
add
cltd
stc
mov
cmp
sti
mov
sub
mov
or
imul
push
mov
cmp
push
adc
outsl
and
add
fisttpll
test
fidivrl
sbb
je
scas
ret
scas
lods
xchg
mov
loopne
js
pusha
mov
cltd
inc
pusha
lret
int
sar
imulb
sub
dec
push
setle
sub
xchg
cmp
or
dec
imul
and
mov
addb
out
ss
dec
xchg
dec
xchg
bound
and
std
mov
and
sbb
loope
mov
insb
add
ljmp
xchg
cmp
sarb
gs
int
add
dec
sbb
pop
mov
sbb
lret
push
sub
xchg
cmpsb
iret
ret
dec
dec
mov
jo
add
cmp
adc
pop
dec
mov
xor
inc
test
jmp
leave
xor
inc
and
sbb
xchg
int3
push
in
pop
sbb
adc
mov
rcrb
jle
std
sub
roll
lock
mov
mov
sahf
dec
push
and
pop
into
jne
rcll
pop
xor
test
cwtl
mov
out
or
jns
dec
and
mov
fildl
cmp
sti
les
mov
icebp
mov
add
test
fs
pop
and
mov
or
jo
jge
int
iret
in
mov
jno
or
outsl
sub
push
movsb
push
stos
add
cmpsl
mov
xchg
outsl
pop
xor
pushf
jg
shr
or
cmc
movsb
xchg
iret
popf
loop
adc
xor
inc
aad
or
push
fisubrs
movaps
xchg
or
push
inc
std
xchg
push
add
loope
out
jmp
addr16
adc
iret
outsb
sbb
icebp
test
or
lods
data16
aas
in
lahf
inc
lret
xchg
sbb
cmpsl
ss
adc
push
cs
pop
gs
jbe
xchg
add
les
adc
mov
lcall
sahf
fimuls
adcb
jle
pop
ljmp
inc
mov
inc
shr
xchg
inc
pusha
pop
inc
pop
dec
or
pmuludq
sub
lahf
clc
cmp
lahf
mov
mov
scas
popa
daa
ds
imul
and
cld
clc
add
sub
push
test
mov
mov
xchg
xor
jp
xchg
mov
repz
cmp
int3
out
lret
mov
fnstenv
adc
icebp
movsl
adc
cmp
and
cmp
cmc
add
repnz
popf
inc
dec
jo
mov
sbb
mov
pop
mov
sub
rorl
xor
jp
add
out
push
enter
testb
mov
shrb
dec
mov
test
lahf
adc
in
sub
mov
jle
dec
daa
fcompl
movsl
jae
in
leave
lret
xor
cmpsb
lret
mov
cld
push
insb
adc
pop
aas
adc
fstpt
pop
cld
aaa
xchg
inc
jg
loope
ret
orb
gs
inc
xlat
xchg
test
cmp
cltd
push
sub
cmp
sahf
inc
mov
rclb
popa
adc
mov
cmpsl
mov
mov
stos
push
std
sbb
sbb
push
leave
xor
sub
popa
repnz
setp
mov
mov
mov
mov
icebp
push
in
out
cmpsl
add
inc
into
shl
ss
call
outsl
jecxz
mov
call
and
pop
and
jmp
xorb
mov
mov
push
out
scas
imul
nop
shll
test
rorl
stc
insb
jl
or
movsb
ja
loop
jg,pt
enter
je
fisttpll
das
aaa
add
xchg
ljmp
scas
imul
cmc
sub
xchg
mov
mov
add
pop
jmp
adc
mov
test
mov
push
dec
sbb
cmpsl
pop
clc
dec
sub
cmc
je
loope
push
mov
pop
mov
das
dec
push
adc
push
fs
or
jge
dec
sbb
je
shlb
push
sbb
xor
add
push
mov
pop
add
stos
or
inc
mov
mov
fildll
dec
push
bnd
shrl
stc
dec
cmc
test
test
jnp
out
mov
je
adc
inc
out
repz
rcll
fwait
cmp
aas
or
mov
sbb
mov
movsl
inc
pop
outsb
adc
add
insl
rcrb
pop
sbb
fnstenv
cmpsl
pop
jnp
arpl
dec
shrl
pop
push
adc
sub
jmp
sub
sbb
xor
cwtl
jne
daa
fisttpll
add
int
stc
jle
xlat
scas
scas
out
add
mov
lahf
jne
mov
insb
rol
outsb
cli
jno
jg
mov
pop
stos
sub
sbb
lcall
pop
xchg
insb
test
push
or
insb
mov
mov
sbb
adc
fwait
aad
sti
cvtdq2ps
or
pushf
mov
gs
fiadds
sbb
clc
and
in
movsb
rcrl
cltd
adc
shr
mov
mov
push
sbb
mov
icebp
ret
add
mov
movsb
push
jl
xchg
mov
push
es
jp
push
scas
push
in
shll
xor
arpl
jnp
mov
mov
int
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
rclb
movzbl
mov
fdiv
mov
movsl
test
xchg
inc
es
outsb
mov
adc
call
enter
outsb
in
repz
pop
jl
in
inc
daa
loope
push
jnp
insl
nop
sbb
icebp
pop
fadd
mov
loop
add
mov
push
lods
dec
sahf
ds
xor
jmp
mov
fsubrl
or
scas
les
ljmp
mov
or
sub
push
fimull
fldenv
mov
sbb
pop
push
fstl
xchg
sub
mov
rolb
sbb
int
repz
pop
pop
and
lods
rclb
lock
push
or
shrl
fstl
cli
and
in
push
xchg
mov
lret
shrb
cmp
dec
into
xchg
mov
das
xchg
test
sbb
rorb
enter
rclb
imul
pop
pushf
dec
jne
lods
movsb
icebp
cli
mov
iret
mov
arpl
push
scas
mov
cmc
aam
mov
rcr
push
inc
xlat
repz
mov
mov
divb
sub
test
out
repz
imul
mov
loopne
inc
mov
int
mov
inc
mov
gs
in
jae
add
inc
leave
mov
in
out
and
sub
mov
fdivl
mov
mov
js
xchg
sub
clc
mov
mov
test
adc
mov
add
test
sbb
dec
aam
jnp
jmp
adc
addl
adc
stos
add
clc
andb
mov
pop
sbb
adcb
adc
pop
mov
add
clc
es
ja
fwait
shlb
sbb
xchg
test
and
insl
into
mov
test
push
adc
sbb
mov
cltd
cld
inc
xchg
fisttps
aam
loopne
hlt
aam
and
or
les
or
xor
jecxz
push
jo
push
cmp
stos
lods
mov
sarl
je
adc
test
leave
shl
sarl
sbb
js
sub
addr16
cs
clc
loopne
inc
jns
outsb
add
pop
scas
addr16
and
xlat
adc
pop
in
aas
in
xchg
fadds
xchg
aas
inc
or
fldt
mov
stos
inc
push
inc
sub
inc
push
sbb
ds
mov
push
fisubl
faddp
lock
call
out
sbb
call
mov
adc
mov
dec
or
xchg
adc
push
xchg
aad
nop
out
fildl
cli
in
ljmp
enter
popf
popf
xchg
aam
mov
movsb
std
loopne
daa
add
insb
fisubrl
sar
mov
jg
mov
fwait
cmova
aas
lahf
push
pop
sub
jnp
push
addr16
push
sub
xchg
pop
arpl
jge
fadd
xor
sbb
popa
mov
repz
and
fmuls
push
or
push
mov
rcll
andb
ret
scas
or
pop
mov
xchg
push
cmp
pusha
push
pop
mov
inc
ja
lea
xor
jne
sahf
cmp
sbb
xchg
mov
mov
mov
mov
adc
pop
leave
incb
loop
pop
mov
mov
adc
cmp
mov
pop
sbb
xlat
jp
mov
ret
jno
aaa
sbb
cmc
fisubrl
push
jg
mov
aaa
mov
cwtl
sub
imul
imul
or
mov
or
outsl
iret
lock
in
jp
sub
into
lea
jns,pn
cmpsb
cmp
or
loope
jo
push
test
gs
mov
ljmp
push
xchg
cs
xchg
outsl
jecxz
pop
sub
inc
mov
and
mov
daa
popa
push
clc
daa
stos
fsubp
inc
mov
fnstcw
outsb
xor
fisubrl
or
out
icebp
sbb
in
and
inc
imul
xor
adc
push
popa
and
movsl
push
cs
insb
fldl
mov
rcl
and
sbb
cltd
es
pop
fs
int3
push
fsubs
outsb
jb
shll
inc
repnz
cmp
xor
mov
mov
xor
pop
pop
rorb
fmul
incb
mov
movl
jo
pop
aam
mov
inc
sub
hlt
shl
jmp
xor
jnp
push
test
fxch
cli
stos
mov
mov
rcll
data16
fnsave
inc
hlt
cs
sbb
or
adc
push
int3
insl
testb
idivb
jmp
cli
fs
cmp
jg
mov
cltd
out
mov
stos
sub
fs
repnz
jno
xchg
mov
push
sub
xor
mov
cmp
mov
mov
pop
push
sub
int
loopne
mov
fldcw
sub
loope
adc
imul
push
jmp
lcall
stc
test
pop
aaa
out
iret
adc
fiaddl
ja
add
and
outsl
cwtl
xor
sbb
sti
loop
xor
popa
pop
ficomps
push
daa
das
inc
dec
popa
add
shll
adc
or
xchg
lock
mov
test
sbb
aaa
bound
movsl
xchg
jge
dec
xchg
dec
mov
cmp
loope
scas
xorb
sub
repnz
cmp
add
or
dec
adc
or
dec
cltd
stos
loope
in
push
fimuls
call
pusha
dec
jg
sbbb
mov
lods
cmpb
and
lods
push
mov
adc
lahf
mov
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
shrd
sarl
mov
cmp
xor
fisubl
cmp
rol
adc
or
xor
cmp
out
adc
icebp
test
adc
pop
js
xchg
jmp
das
fidivs
nop
jbe
push
dec
jmp
cli
cs
outsl
mov
sub
in
loope
or
push
mov
jl
sbb
icebp
loopne
nop
mov
cs
mov
ficomps
addl
jmp
add
sbb
pop
pop
into
outsl
push
lods
lock
pop
stos
out
out
bound
faddl
rcrb
pop
mov
lods
stos
dec
inc
inc
or
xchg
fstps
pop
notb
lcall
jns
xlat
pop
and
inc
in
jecxz
dec
mov
cmp
or
out
popa
or
stos
out
stc
cmp
or
movsb
pop
lahf
sub
cmp
stc
and
stos
sbb
shll
push
incb
jns
or
dec
or
or
mov
dec
pop
xchg
bound
adc
ficomps
loope
sbb
fcos
in
xor
arpl
mov
addr16
iret
int
cmc
ss
sub
es
addr16
fistps
cmp
sub
cmc
inc
andb
aas
scas
fwait
pop
iret
push
mov
les
cmp
dec
jne
or
mov
or
pop
or
loope
cmpsl
outsl
sub
jnp
into
xor
sub
sbb
mov
xchg
sbb
aas
dec
jb
aam
sahf
mov
inc
jge
mov
sub
popa
icebp
out
adc
rol
pop
fs
cmpsl
mov
in
mov
mov
je
adc
out
inc
loopne
jnp
shr
ret
insl
cmp
ficomps
ret
sbb
inc
mov
fisubs
call
mov
fimull
jp
mov
fwait
ss
push
out
or
sub
or
jmp
fdivrs
xor
in
push
test
roll
cmp
adc
insb
cmp
mov
dec
xor
sbbb
pop
in
and
xchg
xchg
lret
imul
loop
adc
lahf
add
jmp
or
mov
and
xorb
xchg
mov
int3
pop
imul
ljmp
push
mov
es
dec
push
adc
movsb
inc
adc
out
jb
xor
mov
xlat
jecxz
mov
xchg
add
movsl
rolb
cltd
insb
cmpsb
cmpsl
jl
push
mov
and
aad
divl
rorl
mov
mov
push
enter
ret
add
enter
sbb
les
xchg
or
rorl
je
pop
xor
adc
push
popa
pop
cltd
stos
lret
and
sub
jbe
pop
jb
aaa
sub
pop
xlat
aam
and
push
add
xor
mov
xor
pop
call
mov
adc
sahf
add
dec
xchg
pop
sub
fcoml
push
gs
mov
push
push
sbb
or
jbe
jl
fisubl
pusha
test
rorb
adc
and
dec
inc
mov
fwait
sbb
lock
enter
push
cli
mov
dec
add
sbb
jo
test
loopne
js
nop
xchg
sti
pop
jecxz
mov
xor
inc
adc
push
fsts
lods
inc
das
pop
jl
lret
cmpsb
inc
imulb
sbb
push
xchg
jb
jae
cmpsb
push
or
sub
ss
cmp
mov
leave
repz
mov
cmp
mov
pop
jno
int
lds
mov
popf
out
notb
adc
jo
in
jns
fucom
mov
outsb
adc
jg
jno
aam
sbb
pusha
lahf
leave
lea
cld
lock
cld
inc
test
cmp
scas
mov
lret
sub
test
jl
les
outsb
imul
mov
ret
imul
sbb
lods
sbb
clc
inc
and
lea
rcll
in
int
mov
mov
icebp
jne
mov
out
lahf
stos
mov
ds
lods
scas
in
repz
pop
fstps
mov
loopne
pusha
push
mov
push
cmc
xchg
btc
outsl
call
xchg
mov
aad
outsb
fsubl
inc
sbb
lret
push
sub
jo
mov
jmp
sbb
adc
inc
enter
pop
xchg
xchg
dec
cmc
sub
add
loop
sub
mov
inc
dec
mov
in
inc
push
aaa
test
xchg
cmp
cmp
mov
cld
fdivs
jb
mov
jno
out
push
pop
outsb
xchg
cmp
pop
push
sub
std
jge
sbb
in
fstpt
test
clc
fisubs
stos
jmp
jb
cmpsb
mov
out
lret
test
dec
lahf
push
ss
nopl
sti
cmp
mov
xchg
inc
mov
ret
and
dec
iret
data16
inc
add
xor
lret
pop
adcb
jno
stc
push
xchg
jle
xor
cmp
cmp
cmp
inc
aam
mov
call
imul
mov
cmp
clc
or
jne
out
cwtl
lret
jb
mov
adc
mov
test
xchg
lods
gs
outsl
mov
jno
movsb
fneni(8087
shl
gs
loope
dec
cmpsl
jae
cmp
pusha
dec
xchg
xor
ljmp
idivb
orb
push
addr16
adc
mov
shr
arpl
dec
nop
xor
out
test
aam
in
fwait
push
rcl
adc
add
and
jmp
gs
sub
pop
cmpsb
out
add
fisttpl
lret
fldenv
test
mov
pop
enter
and
rclb
aas
sbb
fucom
push
es
jb
jnp
mov
xchg
cltd
outsb
inc
xchg
cmpsb
ficompl
out
jecxz
add
add
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
cld
int3
test
or
pand
mov
add
arpl
adc
xchg
jl
loop
jbe
popa
cmp
xchg
pop
lock
mov
or
icebp
sbb
js
shlb
imul
jge
mov
ret
lds
jmp
dec
xchg
mov
jae
mov
repnz
imul
shlb
stos
mov
lock
and
jge
out
add
std
mov
hlt
add
add
pop
inc
pop
mov
and
outsb
jno
or
imulb
pop
jns
in
clc
fs
xchg
pusha
adc
xchg
and
cmp
inc
and
scas
pop
mov
out
push
sub
out
leave
inc
lds
mov
fs
aam
xor
outsb
jbe
jnp
and
pop
enter
jmp
mov
xor
mov
add
out
dec
xchg
cmpsl
js
inc
scas
fcompl
pop
mov
in
pushl
add
add
addr16
mov
pop
jp
lcall
dec
insb
repnz
mov
cmp
daa
mov
push
mov
xchg
xchg
mov
hlt
add
ljmp
ret
or
adc
rcrb
xchg
movsl
cmpsb
inc
mov
call
mov
mov
mov
or
lcall
push
movsl
mov
mov
iret
divb
mov
jg
fwait
mov
add
rcrl
pop
in
test
cmc
cmpb
xor
arpl
sbb
sbb
xchg
xor
dec
adc
sti
ljmp
cmpsl
sahf
das
mov
or
push
icebp
xor
xchg
insb
mov
clc
in
pop
mov
testl
fdivs
fldenv
xor
lret
push
add
mov
cmp
mov
cli
enter
sbb
mov
call
rcrl
push
sub
lea
inc
xorb
movsb
adc
add
lods
stos
adc
xor
xchg
xor
shl
stos
rorl
and
push
insl
out
es
lcall
sbb
ficompl
rolb
imul
cltd
dec
call
push
fs
loop
xorb
lods
dec
push
loope
mov
jl
lret
sub
shrb
xor
or
aas
mov
jge
outsl
mov
sbb
sbb
pop
test
lcall
mov
aaa
push
call
cmp
into
stos
mov
stos
arpl
jecxz
sub
mov
adc
stc
add
jl
dec
je
sbb
lods
rolb
and
lds
shll
mov
lret
mov
xchg
or
int3
pop
in
push
cmp
iret
dec
fadd
pop
adc
call
fsubrs
or
pop
sbb
push
mov
pop
xor
mov
cmp
lcall
clc
fwait
pop
inc
bound
aas
and
push
jb
dec
mov
popf
call
enter
dec
cld
add
or
and
mov
cld
pop
js
scas
or
mov
mov
dec
lods
mov
rcrl
adc
outsb
cld
sub
stos
out
mov
inc
cltd
rorl
shrl
push
xchg
ret
sub
inc
jg
pop
adcb
push
add
es
lahf
jmp
int
fisubs
jb
arpl
cmpsb
dec
nop
mov
cmp
mov
push
movsb
pop
inc
add
mov
inc
rcrb
inc
ret
mov
lds
mov
jo
mov
flds
fcoml
mov
push
adc
adc
cli
loope
xchg
in
test
xchg
inc
dec
fwait
mov
insl
gs
ljmp
popf
xchg
rcl
popa
arpl
jae
and
inc
push
pop
in
mov
fwait
in
sbb
add
mov
xchg
cmp
mov
dec
imul
mov
repz
inc
daa
xor
mov
sarb
add
adc
outsb
pop
and
test
loope
outsb
add
test
roll
js
and
jle
or
fwait
push
daa
les
xchg
out
pop
xchg
push
fidivrl
dec
decb
lahf
add
cmp
sbb
popf
daa
loopne
dec
adc
or
lret
aas
xor
pop
sub
stos
adc
mov
mov
sbb
cmp
xlat
aad
dec
and
adc
dec
jecxz
cmp
xor
imul
pop
xchg
int3
xchg
mov
cli
dec
xchg
sub
or
mov
xchg
and
fisubs
test
jecxz
fmulp
dec
xor
test
xor
pop
xchg
ljmp
fwait
cli
sbb
in
sbb
int3
imul
dec
dec
test
test
or
fwait
dec
lahf
inc
jecxz
addr16
cwtl
dec
xchg
clc
jg
inc
mov
das
push
imul
std
and
out
mov
cmp
lods
aaa
adc
mov
cs
push
popa
xchg
cmp
stc
popa
imul
shl
push
cmpb
mov
inc
or
jns
cmp
mov
insb
lods
jmp
roll
clc
test
and
inc
cmp
imul
jl
xchg
sbb
out
js
bound
push
data16
sub
pop
add
movsb
adc
xor
sub
mov
jmp
fdivrl
imul
inc
jbe
mov
es
xchg
jg
jb
add
jle
pop
popf
ja
sub
inc
dec
xor
std
fdivl
mov
cmc
inc
sahf
insl
in
xchg
pop
repnz
out
pop
push
fistpl
inc
mull
cmp
das
fbld
loop
pop
int
xor
cmp
pop
idiv
jmp
mov
xchg
mov
sbb
or
js
cmpsb
or
pop
sbb
fsub
les
jge
fwait
cltd
pop
fsubl
lahf
sub
jb
imul
mov
jae
or
mov
dec
or
cmp
movsl
iret
dec
mov
out
cmp
fwait
dec
int
pop
sub
sbb
dec
dec
mov
loopne
sahf
xlat
es
test
mov
mov
sbb
mov
xor
cmp
adc
lea
popf
sub
adc
outsl
adc
dec
imul
jbe
lock
mov
popa
adc
es
aad
adc
mov
loope
adc
push
out
xchg
mul
and
mov
jge
es
testb
fsubs
pop
push
je
data16
loopne
es
and
leave
mov
ret
pop
cmp
or
dec
aaa
sti
inc
das
inc
fs
fcmovbe
and
in
adc
pop
jne
scas
loopne
mov
lret
jae
lock
aam
push
mov
xor
adc
iret
push
aam
xor
loopne
fwait
xor
xchg
jmp
or
xchg
sbb
sub
cmp
push
je
or
test
nop
fs
cwtl
pop
rcr
scas
jne
add
inc
in
aas
sbb
jmp
test
mov
push
lods
lret
aaa
in
sbb
xor
inc
jle
dec
push
jne
loopne
push
jb
push
lock
lcall
or
mov
xlat
lcall
mov
sub
adc
out
or
mov
sbbb
dec
and
jb
cmp
sti
pushf
loop
or
sahf
mov
inc
dec
rorl
cmp
xchg
cld
inc
pop
hlt
adcb
inc
mov
mov
mov
das
movl
add
cmp
jbe
dec
sub
add
cld
les
stc
mov
xor
inc
ret
add
and
add
add
inc
hlt
push
push
and
loop
add
cltd
mov
mov
jge
out
ljmp
lahf
cmp
add
adc
iret
lcall
enter
jo
repz
pop
sbb
pop
adc
aas
out
int
in
push
in
rcrl
cli
jo
test
jo
add
inc
movsb
lret
mov
rorb
push
arpl
push
adc
int3
cmp
push
inc
das
mov
mov
push
fidivl
mov
mov
dec
testb
into
lea
sub
outsb
outsb
pop
inc
or
or
repnz
mov
adc
int3
sbb
xor
push
stc
cmp
test
bound
xchg
ret
push
rcrl
out
sub
pop
test
push
movsb
nop
aam
inc
and
and
inc
push
cmpsl
dec
mov
inc
fsubrp
add
imul
jnp
lcall
loopew
push
push
push
xchg
ret
sbb
inc
dec
sbbb
ret
fistps
push
mov
pusha
scas
imul
ds
jmp
and
xchg
cs
lds
mov
lock
push
push
cli
test
imul
push
sub
pop
ret
flds
repnz
loope
mov
xor
jbe
sub
aad
pop
dec
pop
and
or
adc
mov
mov
add
cmp
mov
sbb
mov
push
inc
gs
ds
mov
xchg
stc
pusha
fdiv
imul
ljmp
xor
lea
cmp
outsl
xor
mov
jge
or
cmc
fldt
cmp
add
jno
inc
adc
inc
lods
lds
cmp
sar
cwtl
sub
mov
int3
or
insb
aam
pop
call
cmp
sbb
jnp
mov
arpl
cld
xor
adcb
cmp
cmp
mov
dec
inc
iret
call
loop
ss
pop
fs
and
adc
fdivr
push
mov
mov
push
insb
mov
jmp
pop
stc
and
ds
add
ss
mov
xor
push
and
enter
mov
adc
and
add
dec
jae
fldl
add
ret
xor
pop
arpl
cmpsl
imul
push
pop
addr16
lahf
mov
sub
lahf
jb,pn
dec
sbb
and
stc
rorb
js
xchg
inc
push
shl
arpl
ja
icebp
pushl
or
negl
xchg
stos
pop
sub
in
dec
sub
adc
or
mov
cmp
leave
stos
or
insl
add
shlb
in
sahf
das
int
cmc
fs
adc
enter
cmc
outsb
outsl
dec
int3
xchg
loopne
sbb
int
test
jecxz
je
addr16
icebp
sbb
out
mov
jae
adc
loopne
in
pop
sti
aas
int3
sub
outsl
imul
pop
shrl
shlb
jno
adc
clc
dec
aas
enter
xor
popl
sbb
ljmp
lds
xorb
fwait
sub
leave
xlat
pop
sbb
or
stos
setnp
ror
outsb
divb
push
mov
push
jmp
mov
inc
pop
push
mov
pop
loope
jp
mov
cli
push
dec
dec
push
movsb
js
int3
mov
movsl
push
shll
cmp
sti
and
mov
cmp
sbb
insb
pop
jns
in
pop
xlat
lods
mov
xchg
or
sahf
test
lahf
adcl
dec
mov
js
mov
add
pop
in
stos
cmp
add
arpl
mov
sahf
scas
test
or
dec
mov
mov
bound
inc
inc
outsl
lret
jns
sbb
int3
sti
scas
mov
in
notb
add
pop
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
push
test
invd
add
cmovno
mov
jg
nop
in
insl
inc
lcall
or
xor
xchg
sbbl
inc
daa
lds
in
and
inc
sti
cmp
mov
out
fadds
int3
call
ret
int3
push
or
jnp
test
cmp
jae
push
scas
out
dec
cwtl
push
mov
repnz
pop
sbb
loopne
scas
aas
inc
je
and
jl
call
daa
jg
sub
mov
scas
ds
call
xor
sbb
mov
mov
jne
jno
sti
adc
sub
xchg
sub
push
stos
fldenv
in
stos
inc
sub
inc
std
jmp
ja
dec
dec
jmp
cli
adc
enter
mov
pushf
cmp
repz
pop
int3
and
aam
xchg
push
lret
rcr
cmp
and
fadd
xor
xor
outsl
or
cmpsl
mov
rcll
daa
movsl
mov
dec
cmp
ljmp
jo
inc
and
add
mov
cmpsl
aam
ljmp
push
push
and
and
jo
push
jge
test
cmp
ds
xchg
ljmp
inc
test
movsl
jnp
sub
xchg
fidivl
shl
xor
push
std
daa
inc
inc
adc
shrl
add
push
dec
in
push
lcall
imul
fwait
cmp
xchg
call
insl
inc
daa
dec
xor
push
pop
mov
push
push
and
xor
movsl
pop
movsb
call
out
xchg
or
lods
push
lock
xchg
cmc
out
std
outsb
nop
daa
insl
fwait
xor
jns
fsubrl
mov
movsl
xchg
mov
mov
ret
adc
jecxz
sbb
mov
pop
nop
xor
int
or
inc
add
adc
push
xor
xchg
xor
mov
orb
push
rcrb
xchg
imul
fidivrs
cmc
popf
int3
call
push
cwtl
ret
adc
xor
loopne
mov
bound
sbb
sbb
push
xchg
sbb
cmp
mov
movsb
mov
sarl
pushf
ffree
mov
scas
filds
or
sarl
cmc
test
xor
insb
aas
out
sub
aas
mov
push
mov
repnz
inc
push
sahf
sbb
lea
push
out
movsb
or
cmc
pop
add
or
push
push
lret
mov
dec
mov
ret
scas
addl
mov
bound
dec
mov
lret
adc
fwait
sub
inc
aaa
insl
ret
push
fisubrs
inc
in
enter
adc
pop
rcll
sti
jge
cmpsl
jmp
out
cmpsl
les
stos
fcmovb
test
sbb
idiv
mov
cli
xchg
addl
adc
cs
out
mov
movsb
mov
sahf
in
jge
insb
imul
sbb
pop
rcrl
bound
insl
dec
shlb
les
mull
test
lods
and
mov
ss
adc
cmp
in
arpl
or
in
sbb
out
dec
stc
test
cmp
repnz
aas
scas
mov
mov
sbb
movsb
jbe
sbb
xor
sub
mov
lea
pushf
frstor
std
xor
xchg
aaa
cld
jmp
andl
jg
pop
das
lods
lahf
jp
fwait
cs
xchg
mov
sbb
jg
andb
repnz
fsubrl
dec
sub
adc
popa
es
lods
adc
push
nop
out
aas
scas
mov
nop
sub
and
mov
popa
bound
mov
test
inc
hlt
jae
or
xchg
pop
fwait
rcll
jp
pop
test
aad
dec
inc
jmp
add
out
mov
mov
sbb
les
add
ss
sbb
shlb
mov
xchg
sub
shl
or
and
fwait
loopne
lds
pop
insb
push
aad
fs
xor
cmp
mov
sub
mov
ret
fs
dec
inc
pop
cmc
repnz
mov
mov
lea
lret
lods
flds
cmp
dec
addr16
mov
sahf
cmp
push
fsubs
shlb
xchg
or
inc
ss
xor
es
hlt
xlat
rol
ds
outsl
sub
jle
hlt
inc
adc
out
mov
ja
dec
push
enter
xor
movsb
orb
inc
insb
xor
shrb
add
cs
dec
push
mov
xor
xchg
enter
mov
cmp
and
or
out
xchg
insb
fsubrp
lahf
push
dec
jne
jae
inc
leave
xchg
insl
nop
or
push
jl
dec
roll
rol
mov
sti
jbe
imul
sbb
cmp
addr16
outsl
cmpsl
pop
popa
mov
fldcw
les
xchg
gs
cmp
lcall
stc
aam
int
gs
or
stos
mov
sbbb
sub
xchg
inc
jb
cmpl
ss
cld
mov
ja
hlt
inc
int
je
push
aas
int3
rorl
mov
outsb
es
add
out
stos
or
mov
mov
pushf
inc
out
hlt
xor
mov
cld
sub
adc
lds
lods
lods
xor
add
xchg
push
mov
stos
bound
and
test
mov
mov
push
mov
mov
dec
stc
xor
adc
outsl
mov
xchg
pop
jle
out
push
pop
loopew
ret
or
mov
xchg
test
jb
jl
add
mov
fstpt
xor
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
add
mov
add
punpckhbw
aad
ret
push
test
inc
mov
mov
push
mov
cmp
xchg
xchg
cmp
fcmovne
xor
and
sbbb
adc
hlt
adc
dec
mov
mov
and
cmp
arpl
js
call
nop
and
inc
sbb
jmp
xor
add
jg
iret
adc
lods
clc
xchg
lret
cld
mov
mov
lret
dec
pop
adc
scas
sbbb
push
negl
mov
aaa
sahf
ljmp
xchg
fstl
sub
adc
flds
mov
fst
test
sbb
pushf
pop
cmpsl
pop
sbb
int3
pop
xchg
push
pop
addr16
mov
adc
outsb
sub
lea
leave
andb
cmpsb
jae
cwtl
leave
fcmovne
mov
shll
pop
xchg
jnp
fcmovu
push
cmp
jecxz
divb
pop
mov
pop
or
sbb
cwtl
fwait
out
push
out
jmp
mov
je
ja
cld
push
push
xor
mov
push
jae
in
gs
push
mov
jnp
xchg
mov
into
insb
mov
addb
sub
jno
aas
aaa
shll
dec
outsl
adc
inc
and
xor
add
test
mov
pusha
sahf
shl
je
mov
inc
ror
subl
call
dec
int3
pop
hlt
mov
mov
mov
pop
insb
arpl
enter
inc
sub
fidivl
daa
xchg
mov
mov
push
jnp
sub
sbb
mov
xchg
mov
or
xchg
xor
adcb
out
aam
adc
pop
into
pop
adc
imul
sbb
xchg
dec
xchg
push
out
xchg
pusha
shlb
cltd
or
add
pop
xchg
xchg
stc
jge
shrb
in
popa
lds
movsb
es
mov
add
pop
pushf
cs
adc
aam
incb
fnstenv
aas
inc
andl
in
jns
aam
xlat
loope
jne
pop
xchg
test
pop
sarb
jbe
cmpsb
lcall
mov
shl
jmp
jnp
and
pop
iret
jge
stc
sbb
fidivl
lock
cmp
aam
lahf
pop
or
test
call
and
ljmp
loopne
dec
daa
xlat
inc
mov
mov
lods
js
cmp
addr16
into
mov
cmp
sbb
pop
int
mov
dec
mov
push
sub
mov
scas
es
cs
pop
dec
ret
cmp
ja
mov
data16
cmp
test
imul
cmpsb
jbe
dec
xor
pop
pusha
int3
rclb
inc
xchg
cmp
jmp
sahf
or
add
mov
jno
mov
test
sbb
jl
outsl
xchg
xchg
mov
rclb
adc
mov
js
mov
or
je
mov
and
mov
outsl
fdivl
imul
lods
ds
xchg
enter
adc
dec
pop
jmp
lock
or
pop
dec
gs
mov
aam
pop
pop
sbb
int3
sub
incb
or
outsb
jnp
pop
sbb
ret
push
xchg
xchg
test
push
fsubrl
cli
mov
mov
dec
popf
and
shrb
arpl
aas
add
and
or
sbb
movsb
or
test
push
add
and
dec
int3
or
in
in
std
adc
stos
ja
shr
jge
push
test
hlt
or
lods
sub
in
pop
cltd
push
jle
iret
sahf
or
repz
or
mov
mov
movsl
test
mov
lcall
fwait
aas
mov
fdivrl
fdivrl
xor
xchg
lods
mull
in
jne
cmp
popa
add
jbe
std
pop
aas
xor
fcoms
insb
or
push
fmuls
sub
jbe
xchg
gs
and
int
fucomp
outsl
pop
enter
pop
sub
int3
xor
mov
shlb
mov
mov
shlw
jb
mov
cwtl
push
ja
cmp
pop
frstor
mov
ret
pop
into
or
loopne
cmp
repnz
sbb
pop
cmpsb
fsubs
aaa
pop
pop
repz
jecxz
fwait
iret
movsb
pop
push
xorb
mov
add
out
sbb
out
ss
repnz
int
movsl
cmp
in
das
std
mov
movsb
loope
outsl
lahf
mov
mov
and
push
sub
xchg
mov
movsb
dec
popa
jp
or
push
adc
adc
jecxz
add
mov
cmp
dec
fcoml
xor
mov
inc
addr16
nop
sbb
mov
xlat
clc
pop
xchg
sub
cmpb
in
subb
jecxz
fldt
test
imul
adc
jmp
sub
push
pop
insl
sti
lds
mov
xchg
icebp
hlt
rorb
in
pop
je
imul
and
mov
lds
dec
nop
fisubl
add
sti
jno
and
add
iret
dec
pop
fsubl
cwtl
fsub
mov
cmp
jns
pop
repnz
inc
inc
popf
loopne
xchg
lcall
push
pop
jb
in
push
push
add
inc
sub
leave
js
adc
mov
mov
jle
dec
lds
test
inc
pop
mov
fdiv
jnp
push
leave
fiaddl
js
inc
xchg
jo
push
repz
enter
sbb
movsb
mov
mov
or
jge
pop
inc
dec
jp
nop
mov
stc
adc
add
insb
jecxz
das
mov
fwait
jo
push
aaa
test
es
dec
ja
push
cld
cmp
mov
imul
add
mov
lcall
add
add
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
repz
mov
add
jl
mov
mov
or
inc
add
lods
jne
dec
and
in
decl
imul
mov
in
xchg
cltd
stos
pop
test
outsb
and
into
add
or
inc
int
inc
hlt
inc
mov
jno
adc
sbb
mov
push
sbb
dec
inc
shrb
iret
shlb
jno
movsl
dec
dec
cmpb
test
orb
cltd
jle
mov
ds
pop
pusha
add
mov
push
add
call
mov
jle
fimuls
mov
adc
push
jcxz
arpl
lret
sub
enter
mov
sub
test
sub
pop
lret
test
in
sti
xchg
xor
outsb
push
ljmp
data16
or
into
xor
jg
cmpsl
mov
movsb
pop
setbe
loopne
sti
jecxz
lods
test
mov
rcll
cmp
mov
faddl
mov
inc
fldenv
sub
sahf
insb
int3
aad
dec
mov
jmp
mov
mov
loope
jg
enter
xor
push
imul
in
mov
cmp
ds
fcmove
mov
daa
push
movsl
inc
mov
iret
stos
dec
pop
lods
movl
dec
mov
imul
add
sub
jg
js
es
jae
std
jle
pop
cli
add
insl
sbb
sti
ret
divb
jne
push
pop
sub
mov
pop
mov
xor
jecxz
mov
sub
add
add
xor
add
adc
stc
push
ret
add
mov
fimull
pop
insw
adc
insl
movsb
gs
add
shlb
mov
jbe
ljmp
dec
dec
inc
cmp
add
xor
sti
fwait
cld
push
js
call
jg
pushf
pop
repz
jge
push
cmp
push
inc
pusha
in
or
xchg
xlat
test
or
stos
scas
rcrl
pop
ficompl
sbb
nop
rcrb
aas
test
xchg
sahf
arpl
mov
mov
mov
nop
add
cmp
mov
xchg
jecxz
or
scas
adc
mov
rclb
inc
movsl
mov
push
data16
inc
pop
hlt
pushf
enter
xchg
movsl
xor
mov
out
out
dec
jp
inc
lods
sbb
pushf
in
and
mov
push
adc
xchg
fisttpl
mov
adc
cmpsb
mov
rorl
test
mov
cmp
mov
data16
inc
fldenv
mov
loopne
ljmp
lds
inc
jg
sbb
add
les
mov
xchg
cltd
clc
movsb
xchg
imul
repz
test
arpl
icebp
shll
test
mov
inc
push
push
stos
dec
lcall
xor
pop
push
sbb
jmp
test
cmc
sbb
adc
es
sub
mov
aam
jae
lret
fsubs
dec
sbb
psrlq
mov
push
mov
mov
xchg
rclb
pop
fsubr
roll
sbb
test
sbb
push
sbb
pusha
xchg
or
push
jmp
nop
pop
mov
outsl
mov
sahf
pop
outsb
push
mov
outsb
in
repz
dec
mov
popf
jnp
jne
sbb
sahf
in
add
es
insl
or
cmc
dec
cld
mov
mov
adc
inc
xor
sbb
xchg
jnp
aas
sub
out
and
cmpsl
mov
mov
rcrl
popa
sbb
imul
add
add
adc
xchg
and
mov
shl
out
mov
mov
bndstx
cltd
fcompl
in
mov
int3
jo
xor
cmp
ja
mov
shlb
mov
ljmp
and
mov
mov
nop
jg
ret
popa
repnz
andl
shlb
shr
loop
lahf
jne
test
jo
mov
data16
sub
mov
sub
lods
sbb
sub
add
jmp
mov
add
std
mov
fnstenv
jns
mov
into
out
xchg
test
aad
and
cli
scas
pop
add
pop
fs
inc
enter
and
push
add
pop
fisubl
or
sbb
adc
lahf
int3
jmp
push
decb
pop
repnz
add
das
add
lahf
xchg
fwait
push
push
mov
fwait
mov
lret
push
pop
js
outsb
es
int
mov
mov
cmp
and
pop
ret
push
imul
lods
cmp
mov
jno
hlt
js
mov
pop
enter
in
and
idivb
gs
out
push
push
push
xlat
subb
jbe
push
mov
add
mov
enter
test
xor
repnz
pop
push
pop
cltd
leave
fisttpll
ficoml
push
mov
inc
insl
fnsave
xlat
mov
jnp
idiv
stos
pop
mov
jnp
mov
fnstsw
cmp
mov
cmp
adc
leave
mov
cwtl
int3
inc
repz
lret
adc
lock
and
pop
popa
movsb
sub
dec
xor
clc
imul
lds
fcompl
inc
pcmpeqb
mov
sbb
push
xchg
popf
bound
push
nop
mov
stc
cltd
test
jne
xor
adc
cmp
fidivrl
xor
inc
inc
in
aaa
hlt
addr16
punpckhwd
gs
fsubl
cmpsb
sahf
movups
inc
std
ret
push
cld
movsb
xor
sbbl
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
pand
sbb
adc
sbb
dec
mov
pop
cs
arpl
arpl
add
js
and
xorl
jo
dec
pop
xor
mov
aaa
mov
cmpsl
std
fwait
add
call
mov
jecxz
dec
xchg
push
lea
hlt
call
imul
or
jg
lods
add
out
xchg
or
scas
xchg
sbb
push
adc
and
jmp
les
adc
pop
and
xor
out
outsb
mov
scas
and
cs
jl
push
jne
xor
sbb
pop
xor
in
fistl
mov
movsb
push
mov
std
rorb
adc
jae
repnz
push
push
sub
jo
ds
pop
cmpb
xchg
ficomps
mov
clc
popf
roll
xchg
sub
sbb
xchg
repz
lahf
pop
push
adc
loop
mov
and
jb
mov
sub
mov
cmp
and
in
push
cmp
inc
xor
xor
xchg
dec
ret
dec
and
insb
movl
lods
das
adc
push
shl
cmp
xor
cltd
push
push
les
push
int3
jge
insl
jg
shrb
xchg
jecxz
or
sbb
icebp
mov
loop
or
mov
sti
xchg
xorl
inc
mov
jae
and
ss
test
pop
in
out
cmpsl
or
mov
ret
and
jl
out
xchg
roll
pop
pcmpeqd
xlat
mov
add
adc
mov
jb
mov
adc
cmp
and
jno
mov
aaa
pop
xchg
loope
jno
ja
mov
jo
fildl
lods
and
jge
add
ds
sub
mov
lods
xchg
sub
xor
insb
nop
xchg
pop
into
xor
sbb
cmpsl
pop
loop
ja
shll
jb
mov
scas
shrl
in
or
jge
jnp
sti
inc
cmpsl
cltd
lods
push
sub
mov
mov
add
push
xor
and
and
dec
daa
mov
and
cld
sub
jno
adc
pop
jo
jnp
in
imul
or
out
loop
xor
xchg
pusha
and
jbe
in
pop
adc
cmp
inc
jae
cli
and
jp
xchg
push
and
xor
jp
dec
fmull
test
mov
fsub
insb
dec
jbe
lret
lock
jno
out
je
mov
add
sahf
xor
lret
js
and
mov
xchg
push
push
cmp
inc
stos
jle
daa
jp
fwait
sbb
jae
ficomps
jp
lods
movsl
fwait
jb
ja
test
inc
xchg
jmp
std
sbb
aam
mov
adc
push
jl
mov
add
or
enter
shrl
test
push
adc
sbb
mov
and
cwtl
adc
add
es
xchg
pop
lods
xchg
sbb
mov
fldenv
pusha
iret
mov
loope
add
mov
adc
hlt
pop
sbb
bound
mov
dec
inc
pop
and
je
test
and
sbb
xchg
imul
stos
emms
arpl
pop
cmc
filds
negl
orl
daa
popa
lcall
hlt
mov
cmp
sbb
sbb
jnp
or
ret
cmp
jb
popf
aaa
das
mov
test
or
mov
jp
fcmovne
lret
and
push
call
stos
sub
std
dec
cmp
pop
fidivrl
pop
inc
lahf
stc
out
ror
outsb
addps
pop
add
rolb
mov
repnz
inc
xor
cli
pop
or
sbb
cs
pop
pushf
das
pop
and
stos
iret
bound
jo
test
rorb
out
fwait
mov
inc
cmpsl
cmp
lahf
and
subl
bound
push
push
call
push
mov
jne
mov
xchg
into
mov
ror
adc
popa
hlt
sub
jne
bound
fimuls
int
daa
clc
xchg
decb
imul
xchg
data16
mov
dec
sub
pop
sbbl
xor
insb
push
jmp
push
fcmovbe
inc
repnz
lret
xchg
or
pusha
mov
mov
fstps
push
out
or
push
divb
aas
xor
dec
int
stos
jmp
aam
insl
adc
out
notb
out
lea
pop
iret
sbb
lahf
xor
jg
fldcw
dec
mov
daa
mov
cmp
sbb
in
cmc
jo
jo
jo
jmp
adc
stos
ja
nop
enter
xlat
cli
jmp
and
fiaddl
jo
out
push
lcall
adc
jbe
inc
bound
iret
mov
dec
jp
outsb
daa
inc
mov
shlb
xchg
fwait
add
hlt
shr
lods
cs
mov
jge
popa
loop
sub
or
and
dec
pop
in
sarb
arpl
cmp
add
shll
cmp
je
stos
jecxz
aad
in
fcomp
mov
inc
jmp
jle
pop
in
adc
adc
jbe
adc
int3
bound
test
mov
out
shll
adc
dec
popa
mov
in
pop
mov
mov
roll
testb
cmpsl
in
or
mov
stos
inc
repnz
dec
pop
inc
je
test
xchg
inc
cmpsb
xchg
roll
cld
push
push
stc
imul
imul
jl
jae
xor
sahf
mov
push
or
adc
jne
sti
js
mov
pop
sub
lret
cs
enter
mov
aas
sub
arpl
pop
xor
inc
push
xchg
in
xchg
xor
cwtl
incb
and
fwait
dec
or
filds
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
adc
invd
add
pop
or
cwtl
jnp
push
mov
insb
dec
jle
push
and
pushf
inc
or
rolb
aas
jbe
rcl
aam
sahf
daa
push
scas
sbbb
mov
jns
dec
call
lods
mov
bound
outsb
roll
pop
lahf
lret
mov
repnz
xlat
sbb
xchg
inc
mov
sbb
mov
cmp
mov
and
add
mov
push
lods
in
and
inc
ljmp
pop
sub
jmp
adc
and
push
dec
or
push
xchg
xor
xor
jl
cmp
ret
fmuls
fbstp
cmpsl
or
push
fcmovbe
xor
and
lcall
int
jle
es
xchg
sbb
fmull
enter
sub
pusha
push
fwait
jmp
push
movsl
sub
repz
or
shll
xor
in
pop
out
rcrl
dec
jecxz
xor
cmc
inc
decb
dec
stos
inc
movsl
xor
dec
and
mov
sub
xchg
jmp
addb
sti
mov
jg
mov
std
push
inc
xchg
ret
pop
or
test
push
pop
sti
xchg
jbe
into
sub
mov
cmpsb
cmp
jae
mov
cwtl
cwtl
into
mulb
mov
sbb
sub
jecxz
std
aam
fcomp
lcall
or
movsl
xchg
test
sbb
mov
or
dec
lahf
imul
sub
push
dec
outsb
test
les
popf
mov
dec
fnstsw
aad
pop
mov
cmp
add
std
fs
dec
mov
sarl
jp
mov
dec
push
xchg
or
cmp
dec
jae
push
loope
push
das
sub
sbbb
lahf
popa
pop
dec
popf
sbbb
movsl
stc
sub
aas
xchg
mov
push
jge
mov
pop
lds
dec
push
decl
out
xchg
ret
fsubrs
lret
push
stos
ss
mov
sbbl
popa
mov
mov
mov
andl
in
movsb
pop
sub
in
pusha
fs
das
aaa
inc
icebp
into
loop
jbe
push
xchg
jo
mov
mov
push
enter
sub
cmp
mov
jecxz,pn
pop
xchg
fucomip
mov
psubw
icebp
xor
fwait
mov
insl
and
pushf
inc
insb
mov
push
fwait
loop
dec
pop
jmp
or
pop
adc
sarb
aas
xchg
sbb
pop
jle
sub
insl
sbb
cli
imul
pop
test
and
push
imul
loop
xorps
add
xchg
mov
add
scas
sub
pop
jno
jnp
jno
cltd
push
in
icebp
mov
jmp
mov
mov
jl
jmp
mov
lds
ja
cmp
adc
outsb
push
add
ljmp
pop
add
mov
shll
sarl
mov
adc
dec
dec
mov
sub
and
and
ljmp
pop
loope
mov
cs
lds
xor
test
bound
hlt
mov
jle
dec
mov
or
add
jg
cld
pushf
and
popf
imul
mov
jne
imul
and
arpl
mov
iret
data16
in
aaa
fs
mov
in
mov
into
push
in
push
hlt
aas
push
sbb
ljmp
mov
loope
rcrb
mov
cmp
mov
mov
add
imul
jl
enter
or
or
xchg
cmp
add
sbb
dec
mov
mov
xor
mov
xor
push
inc
in
cmp
jge
push
ret
mov
lock
fs
sbbl
mov
adc
mov
aaa
cwtl
sub
arpl
sbb
push
xchg
adc
dec
xor
andb
push
push
aas
ss
or
aad
jne
popf
ss
dec
cmp
nop
xor
in
cmc
int
call
inc
loopne
in
aaa
jnp
jno
int
xlat
sub
in
cmp
or
daa
add
rcrb
call
xchg
jecxz
mov
lods
push
adc
sub
push
add
pop
icebp
in
pop
sub
adc
xlat
fnstcw
pushf
mov
sub
sub
in
in
int3
adc
mov
out
mov
ljmp
push
in
mov
repz
arpl
into
xor
test
xor
icebp
hlt
int
lock
mov
mull
sub
ds
push
or
dec
mov
jge
xchg
dec
and
mov
xor
das
mov
sub
gs
cmp
lods
sub
push
dec
jecxz
rcrl
fsts
bound
cwtl
fistl
cmp
int
cmpsl
leave
and
lahf
out
cmp
xor
lahf
and
pushf
fcompl
mov
xchg
mov
mov
mov
pop
das
inc
cmpsl
and
enter
in
dec
ja
cmp
in
xor
jecxz
sub
inc
aaa
sbb
sub
call
pop
divb
add
or
xchg
mov
fisubl
add
pop
ja
add
popa
movsb
pop
js
mov
fs
pop
aad
fdiv
sbb
nop
xor
mov
push
into
movsl
test
xchg
test
push
ret
add
adc
pop
pop
cmp
out
aam
imul
clc
movsb
lds
pusha
out
cwtl
movsl
jge
cs
cwtl
aad
jmp
adc
jecxz
insl
dec
mov
cmp
sub
xlat
add
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
cmp
push
fisttps
invd
add
cvtdq2ps
xor
pop
pop
xor
mov
adc
dec
imulb
sbb
sti
sbb
imul
pusha
test
mov
or
in
fadds
mov
test
inc
xchg
in
int
cmpsb
cmp
push
sbb
mov
testb
cmp
repnz
mov
xchg
movsb
cmp
or
leave
dec
xor
es
popf
fwait
mov
mov
ljmp
ljmp
xor
ljmp
ficomps
xor
mov
adc
cmp
xor
lock
xorb
cmp
sarl
cmp
repz
push
lock
jge
and
sbb
cmp
mov
inc
mov
arpl
dec
rorl
and
xchg
inc
cli
or
loope
inc
xchg
pop
mov
or
out
in
stos
sub
int
dec
jmp
pop
jnp
stos
outsb
movsl
inc
mov
dec
fisubrs
je
jno
and
mov
mov
rorb
repnz
sbb
movb
push
mov
int
cmp
cmpsl
rcpps
jae
sbb
aaa
mov
repnz
lock
pop
outsb
stos
xchg
imulb
cld
not
xchg
scas
push
scas
cmpb
repnz
enter
fwait
pop
push
xor
adc
mov
popa
fldenv
push
mov
data16
fimull
loope
mov
adc
hlt
adc
cld
aad
inc
or
dec
cmp
or
xchg
sbb
cmc
sbb
inc
loope
inc
inc
jns
cmp
push
aaa
sbb
push
xchg
stos
xchg
xchg
dec
mov
repnz
mov
xor
shlb
or
int
mov
mov
cmpsb
mov
sbb
and
mov
xor
out
jp
rcrl
xchg
out
jae
sbb
push
sbb
push
stc
xchg
or
call
enter
push
into
inc
dec
sbb
clc
js
push
mov
inc
shl
cmp
ret
cmp
mov
icebp
aam
popf
gs
or
loopne
mov
dec
jno
cmp
mov
es
mov
es
xor
add
add
clc
enter
pop
imul
lahf
rcll
addr16
jne
adc
stc
out
cltd
jl
stos
xchg
icebp
pslld
fldenv
pop
pushf
and
or
sbbl
bound
add
dec
test
cmp
enter
lahf
xchg
std
sbb
or
mov
xchg
cwtl
push
iret
xchg
jge
mov
lcall
sub
loop
fwait
popa
test
fdecstp
add
xor
sub
mov
daa
data16
adc
jb
int3
xor
les
mov
fcompl
dec
stc
mov
mov
mov
ret
jg
dec
jle
xchg
fwait
ret
mov
pop
or
xchg
mov
stc
fcoml
daa
insb
jp
or
sub
push
add
xor
lds
shrl
or
ds
push
clc
scas
xchg
movl
cmp
sbb
imul
xor
fiadds
sbb
sub
or
in
pop
add
push
sbb
outsb
mov
mov
jno
je
in
pop
hlt
lcall
stos
out
jbe
xchg
lcall
xchg
mov
pop
adc
and
std
xchg
jle
mov
push
xchg
ljmp
rorl
xchg
cwtl
in
pop
mov
sub
std
inc
xchg
and
cmp
test
dec
mov
adc
repnz
sahf
add
pop
adc
mov
in
ds
lods
movzbl
mov
sbb
lock
sub
mov
push
imul
mov
in
add
nop
sub
pop
mov
shrl
xchg
fwait
int3
int3
jo
mov
add
cmp
movsl
fcmovb
cmp
mov
mov
aam
or
mov
test
fldl
dec
jns
xlat
push
into
jno
ret
pushf
mov
push
fcomip
bound
test
mul
push
je
mov
insl
cmp
lcall
andl
cmp
in
inc
aam
lods
stc
out
cmp
movsb
xchg
sarl
ljmp
scas
data16
scas
outsb
fdiv
jg
pop
sbb
mov
pop
mov
call
jecxz
jbe
scas
dec
xor
jmp
pop
mov
jg
mov
or
add
sbbb
sub
test
lods
jmp
mov
outsl
es
sarl
outsb
adc
cmpsl
rcrb
gs
pushf
push
outsl
jp
mov
out
ja
and
lret
push
out
lock
mov
iret
insl
popf
mov
inc
jnp
mov
xor
jno
xchg
aaa
ret
ss
mov
fistps
in
mov
roll
sub
mov
pop
sti
and
mov
sbb
adc
sbb
or
sub
push
adc
lret
and
repnz
les
imul
adc
jge
jle
icebp
pop
movsb
dec
arpl
xchg
dec
or
jne
aam
movb
pusha
jb
mov
mov
sub
ja
mov
mov
movsb
rcll
test
or
fs
in
ror
call
lret
pop
scas
push
jae
scas
xchg
push
fcmovnu
xor
xchg
push
cltd
int3
addb
xor
aam
mov
xchg
xor
xor
lcall
fs
push
cmp
outsb
mov
loope
mov
jo
shll
push
pushf
inc
adc
adc
xor
xchg
scas
xor
sbb
andb
push
and
iret
repz
inc
sbb
arpl
xchg
add
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
mov
add
jecxz
shrl
fs
adc
das
or
cmp
push
mov
pop
jno
pusha
lret
lcall
inc
lret
pusha
ror
adc
lds
and
mov
xchg
jge
inc
pop
add
test
iret
mov
xor
sahf
fucomip
dec
mov
les
jg
ja
jmp
ljmp
int
or
dec
popf
cmp
xor
add
inc
orl
dec
lcall
sarl
sbb
into
sbb
push
out
ror
dec
out
cmp
cmp
and
cs
and
cmc
jecxz
movsb
push
cmp
dec
xchg
lret
pop
inc
and
mov
mov
mov
push
int3
lock
sarl
or
pop
xor
mov
xchg
xlat
inc
xchg
outsl
hlt
into
ret
adc
dec
stc
fcomps
adc
cmp
mov
xor
std
push
outsl
inc
mov
and
and
popf
vmread
sbb
in
jge
faddl
push
insb
cmp
fildll
push
gs
clc
pop
in
dec
sub
fwait
dec
inc
enter
in
roll
xlat
lea
ja
pop
adc
inc
xor
xor
std
test
js
mov
into
mov
mov
jne
fsubp
std
addb
movsb
push
sbb
cmp
dec
cmp
push
shrl
push
fsubl
adc
loop
rcl
les
in
xchg
mov
xchg
mov
out
divl
cmc
push
mov
pop
aad
jo
dec
cwtl
dec
or
sub
pop
mov
pop
das
cmp
dec
into
sub
jl
iret
sbb
int
adc
lods
jns
push
dec
int
out
icebp
pop
mov
pop
leave
loope
and
mov
cmp
inc
das
mov
cmp
mov
inc
nop
add
fistpl
dec
add
pop
loopne
cmpsb
loope
fdivrl
mov
push
scas
sbb
lret
xchg
or
add
fdivr
sbb
push
push
loopne
cs
push
inc
insb
jl
pusha
outsb
fstps
arpl
test
fildl
in
push
and
push
mov
or
xor
faddl
repz
adc
add
mov
ljmp
sqrtps
insl
or
pop
test
rcr
or
dec
out
test
xor
xor
fucom
sub
push
test
mov
shll
add
sbb
aam
mov
inc
pop
inc
das
pop
push
loope
xor
addr16
sarl
mov
xor
or
lret
daa
mov
mov
push
push
outsb
int3
aaa
dec
sbb
pop
je
cmp
lds
sbb
add
cmpsl
push
decl
aas
loopne
clc
inc
fcompl
mov
jne
notb
test
sbb
ficompl
loope
into
pop
dec
or
gs
ss
fdivrl
add
or
in
lcall
push
out
dec
mov
ja
mov
fisubl
push
jb
test
sub
sub
stc
push
jg
add
dec
dec
push
repnz
arpl
add
rcrb
outsb
xchg
stos
fildll
mov
mov
outsl
fs
sbb
pop
jb
arpl
mov
shll
xor
out
hlt
fisttps
mov
push
mov
push
jp
cs
addb
test
in
pop
sbb
and
mov
out
mov
cmpl
lret
test
push
cmp
xor
loope
adc
lock
ret
stc
arpl
xor
mov
ds
sub
pushf
xor
pusha
ljmp
cmp
sahf
sahf
mov
les
test
inc
adc
push
dec
sub
icebp
dec
jno
stos
jne
or
sbb
add
and
jg
cmp
addr16
sub
push
sub
sahf
sbb
das
loop
inc
dec
pop
pop
or
sub
xchg
je
mull
pop
push
jecxz
adc
or
sbb
or
pusha
insb
cli
sub
addb
movsb
outsl
and
sti
addb
push
nop
sub
dec
cmpsl
out
cmp
icebp
sub
jo
in
lahf
fwait
shr
push
and
outsl
inc
test
sub
add
and
push
sbb
aas
loope
lea
out
insl
scas
rcrl
outsb
test
mov
mov
lds
mov
dec
sahf
mul
and
movl
out
js
sti
stos
sbb
sbb
call
and
pop
lret
lret
jle
inc
sbb
mov
test
bnd
leave
negb
in
or
xor
inc
sub
in
aam
imul
gs
aas
mov
mov
mov
mov
jle
ficompl
mov
imul
inc
jbe
es
mov
ficompl
push
cltd
push
or
subb
je
add
loop
mov
push
and
push
push
adcl
stc
and
jp
or
jno
cmp
pop
flds
and
ss
pop
and
data16
mov
adc
mov
cmpsb
repnz
nop
xor
pop
inc
int3
lret
bound
sbb
hlt
mov
or
mov
test
push
nop
sbb
add
xchg
fmuls
sub
bound
or
jmp
mov
loop
shll
jge
std
inc
adc
jg
mov
add
push
in
rol
loope
jmp
push
mov
cli
sbb
fnstenv
dec
jns
mov
lock
invd
add
inc
pop
jp
mov
mov
dec
push
arpl
sbb
hlt
mov
adc
mov
push
push
aad
mov
movsb
jne
push
xchg
lahf
insl
repnz
mov
mov
ret
adc
mov
mov
into
popf
sbb
jbe
in
cmpsl
lock
add
int3
and
sbb
enter
popf
es
ret
repnz
shl
jmp
dec
and
hlt
pushf
les
pusha
rorb
add
and
iret
int3
pop
test
or
int3
icebp
shrl
push
xor
adc
mov
addr16
fnstenv
and
inc
data16
mov
mov
int
xor
pop
add
add
cmc
popa
lcall
push
test
test
adc
adc
popa
push
cmc
sbb
aam
subb
pop
xchg
mov
fidivrs
adc
push
mov
and
ljmp
add
jo
cmpsb
mov
outsl
loopne
mov
sub
fs
cld
scas
cmpsl
ds
cmp
xor
pop
and
outsb
push
adc
dec
loopne
testl
cs
jge
lcall
jl
lret
lret
mov
xchg
xchg
cmp
mov
lea
sub
outsb
push
inc
mov
and
enter
pop
or
jae
push
jp
and
sahf
out
stos
ret
mov
gs
sahf
add
mov
ds
aam
int3
int3
pop
pushf
add
int3
icebp
ljmp
push
push
jbe
lods
testb
shrl
syscall
pop
mov
jno
lcall
xor
xchg
sbb
stos
aad
pushf
sub
xor
fdivrl
or
rclb
daa
sub
mov
outsl
push
cmp
xor
pop
xchg
daa
mov
and
sub
xlat
scas
inc
mov
jns
adcl
ljmp
cmp
cmp
cltd
shrl
adc
sbb
mov
pushf
push
testl
hlt
mov
leave
cmp
jp
mov
mov
xor
adc
inc
in
cli
test
jbe
xchg
push
dec
xlat
sub
insl
inc
jmp
cld
aas
cmc
mov
push
cmp
inc
mov
mov
mov
ret
fsubl
push
lods
lea
mov
out
sti
xor
dec
jbe
scas
enter
mov
addr16
sbb
push
sbb
stos
cmovg
lret
and
xchg
fistpl
std
add
and
mov
out
push
loop
xchg
pop
sbb
and
daa
loopne
push
test
jnp
xorl
mov
fists
in
gs
lret
mov
lret
xor
stos
lahf
push
icebp
mov
jmp
push
arpl
out
jp
div
pop
imul
lock
push
ss
pop
scas
adc
loope
pop
sbbl
and
push
mov
inc
lret
imul
mov
mov
pop
push
je
mul
out
jl
xor
sti
and
orb
repz
test
inc
or
mov
jnp
add
shll
jg
mov
or
aam
insb
xchg
sarb
outsl
xchg
das
repnz
and
or
or
add
dec
stos
outsb
stc
cmp
in
rolb
sub
repnz
add
inc
jle
leave
add
mov
lea
movsl
pop
imul
inc
xchg
push
arpl
cmp
das
lret
call
mov
xchg
mov
insb
paddw
movsl
dec
cmpsb
or
pop
cmovge
arpl
enter
mov
xchg
pop
xchg
andb
cmp
jg
movsb
dec
xor
sbb
ss
in
jne
pushf
or
mov
dec
jecxz
mov
scas
in
dec
sub
push
mov
mov
rcrb
repnz
push
ss
dec
cmpsl
js
push
mov
adc
mov
decb
xchg
pop
xor
roll
jmp
testl
sub
pop
les
imul
fyl2x
cli
adc
ret
mov
in
popa
mov
stos
inc
lods
test
bound
js
repnz
dec
bound
arpl
xor
xchg
sbb
lods
mov
pushf
mov
push
cmpsb
cmp
ret
push
fbld
dec
aaa
test
xchg
insb
jecxz
popa
pop
cmp
sub
fnstenv
stos
mov
fldenv
cltd
and
repz
mov
add
inc
mov
daa
add
pop
or
js
sbb
sbb
push
and
mov
push
sarl
arpl
mov
mov
mov
sub
fidivrl
cmp
mov
ret
jg
dec
imul
mov
sbb
mov
xchg
enter
and
popa
lret
cltd
cmp
mov
popa
cli
mov
dec
ja
mov
dec
adc
mov
mov
jne
fildll
mov
in
jecxz
mov
push
adc
stos
subb
xor
clc
xor
dec
mov
push
sti
push
orb
sbb
mov
jecxz
movsb
mov
lret
lock
jg
or
dec
pop
ljmp
add
mov
out
adc
cmpl
mov
out
xor
int3
ror
xchg
fstpl
insb
pop
pop
rol
add
scas
lcall
mov
cwtl
push
sub
cmp
sbb
jo
int
aaa
rcrl
xor
adc
fistpl
subb
test
adc
cmpsl
ret
std
add
aad
or
mov
pop
leave
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
fmuls
xor
mov
sqrtps
jmp
xor
sub
mov
ljmp
arpl
icebp
lret
pop
cwtl
add
jne
pusha
adc
ret
bound
cmp
icebp
lods
into
rcr
mov
pop
cmpsl
fisttps
lock
clc
adc
and
pushf
xor
jnp
adc
sbb
cmp
pushf
add
bound
aam
dec
lahf
das
pop
testl
push
movsl
xchg
push
stos
into
sahf
fcoml
js
or
enter
mov
ja
push
aaa
adc
and
pop
mov
ficoml
mov
dec
shlb
test
inc
lods
cmp
mov
nop
jbe
add
dec
repnz
adc
xchg
movsl
scas
fisttpll
xchg
aad
push
mov
daa
lds
repz
mov
mov
cs
popf
sahf
out
mov
xor
jmp
jmp
mov
adc
in
jae
lret
stos
lret
sahf
push
call
cmpsl
subb
out
or
or
push
xor
scas
in
pusha
adc
dec
roll
push
aam
adc
inc
and
jmp
jecxz
fs
dec
xor
in
sub
cmpsb
repz
bound
mov
in
gs
push
testb
jge
gs
rcrl
jecxz
es
imul
lds
in
test
lds
xlat
frstor
rorl
sbb
adc
adc
xor
repnz
hlt
adcl
shlb
imul
sbb
ss
in
jo
mul
aaa
loope
jl
mov
jo
scas
loop
dec
shlb
sub
ret
push
mov
xchg
adc
and
and
outsb
lods
pop
cmpsl
cli
mov
scas
jnp
sub
mov
out
icebp
inc
jae
jno
jmp
iret
popf
repz
outsb
push
mov
leave
ud2
jp
dec
in
push
arpl
push
inc
iret
sbb
push
out
mov
cmp
out
mov
rcl
add
aas
jmp
pusha
repnz
or
ja
sub
sbb
pushf
int3
push
jno
add
stc
test
pop
jns
add
scas
jnp
mov
bound
daa
cwtl
and
stos
dec
and
out
or
mov
dec
adc
dec
ret
lds
ret
or
adc
ljmp
mov
sbb
cmp
fdiv
mov
out
loop
adc
mov
cmp
jl
add
mov
movsb
inc
lds
jl
mov
sbb
dec
mov
mov
mul
mov
xchg
mov
stc
inc
movl
lret
sub
outsl
push
or
and
xor
or
add
sahf
xchg
push
jg
dec
xchg
adc
call
push
push
in
addb
cmp
xchg
push
mov
shrl
add
xchg
adc
rolb
mov
dec
leave
or
movsb
popa
mov
mov
xchg
shll
pop
call
out
pop
lret
hlt
dec
cld
push
jbe
jno
mul
xchg
shrl
lds
aad
pop
or
int3
les
pop
push
lcall
fidivrl
cmp
sarb
mov
add
notl
fwait
sub
push
pop
mov
jle
aas
cs
xor
and
loopne
stos
dec
or
fwait
xorb
das
imul
stos
out
pusha
aaa
mov
popa
lods
icebp
mov
fxsave
mov
jp
scas
fcmove
ret
subl
pop
enter
loopne
adc
jle
dec
ljmp
or
jle
lock
cmpsb
dec
jg
sub
leave
dec
data16
mov
cwtl
push
ja
push
jb
loope
into
pushf
inc
mov
pop
mov
shl
sub
leave
pop
test
fisttpll
push
loope
in
xchg
fsts
mov
mov
push
inc
enter
mov
mov
fstl
insl
lods
xor
loopne
cmp
cld
sbb
lods
xchg
pushf
push
xchg
or
xchg
mov
mov
cli
bound
aam
push
pop
mov
pop
adc
call
dec
in
jb
jo
scas
push
repnz
push
repnz
popa
ss
clc
cmpsl
pop
xchg
mov
rcll
inc
stos
mov
push
dec
ss
scas
scas
xchg
fsts
mov
xor
or
push
addb
outsb
repz
mov
inc
jl
std
cmc
inc
add
xor
aas
and
addr16
push
mov
popa
aad
scas
push
arpl
xlat
jmp
mov
and
lcall
int
inc
dec
mov
mov
cmp
sbb
les
mov
add
mov
dec
xchg
xchg
cmp
leave
les
push
mov
es
popf
sub
fistl
xchg
dec
push
adc
pop
aam
adc
or
aad
inc
xor
popa
imul
fdivs
in
fwait
cmpsl
inc
add
mov
mov
cwtl
sbbl
sub
frstor
imul
fisttpll
cld
pop
or
cli
daa
movsl
dec
push
fisttps
xchg
aam
roll
daa
push
ret
and
mov
icebp
mov
sub
pop
cltd
lock
in
fldenv
or
in
jecxz
or
cmp
mov
jle
sub
mov
jl
sahf
mov
push
dec
sbb
cmp
xor
pop
or
pusha
lret
dec
lods
mov
fbstp
sbb
test
sbb
je
int
outsb
mov
mov
sbb
hlt
mov
add
xor
pushl
jns
sbb
out
sbb
out
mov
and
adc
and
fwait
cld
xlat
cmp
loopne
div
lcall
lock
repnz
add
mov
pusha
iret
xchg
sbb
std
arpl
push
push
xchg
std
pop
cltd
add
sbb
jp
stos
sub
xlat
lock
and
cli
mov
adc
cld
mov
xor
andb
orl
xlat
jg
int
pusha
repz
mov
dec
ret
arpl
sub
aas
popf
adc
shlb
cmp
jecxz
repz
mov
mov
pop
and
or
mov
movsb
aad
adc
ja
into
sbb
int
inc
leave
arpl
mov
stc
mov
mov
dec
or
lock
inc
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
fiadds
clc
sbb
mov
jl
or
fidivrl
insb
cmc
aam
push
xchg
mov
xor
adc
inc
idiv
sbb
push
mov
push
test
push
inc
sbb
xor
cmp
mov
or
mov
push
fcomip
dec
int3
pop
ret
jp
and
or
jo
test
repz
insl
and
adc
mov
xlat
sbb
xor
leave
mov
xor
mov
mov
in
cmc
fisubl
les
mov
push
lret
jne
jl
out
jecxz
shl
xchg
push
jnp
mov
out
mov
mov
cmp
arpl
sbb
je
call
inc
lcall
cs
popa
adc
pop
test
aam
shll
and
dec
add
sbb
popa
pop
xorb
sar
loope
insb
lret
or
sbb
popf
sbb
push
in
and
aas
mov
mov
jo,pt
mov
adcl
add
pop
mov
sub
cs
sbb
stos
fcoms
mov
sar
sub
ljmp
test
pusha
fbstp
push
pusha
hlt
cmp
and
jmp
pop
ret
push
cmp
daa
cmp
into
xor
add
push
jecxz
jmp
sbb
or
lahf
mov
push
jae
xor
jecxz
pop
std
xor
mov
and
mov
push
std
cmpb
iret
mov
jl
and
cltd
scas
xor
sahf
and
cmpb
cltd
push
mov
leave
sbb
ror
shrw
sub
imul
adc
pop
mov
and
je
and
in
je
xor
insl
movsl
loopne
pop
loop
cmc
loopne
repnz
fstl
dec
add
xchg
clc
mov
push
shlb
push
test
movsl
pop
popa
mov
sbb
sbb
mov
sub
fstpt
clc
push
xor
cli
cli
call
jae
mov
jno
loop
adc
lds
add
mov
fstl
pop
aaa
sub
aad
adc
xor
frstor
adc
push
cld
js
dec
mov
out
inc
aad
jmp
sbb
pop
cmp
in
add
xor
dec
movsl
jne
lds
push
imul
aaa
add
aaa
jne
xor
out
mov
je
stos
cmp
pop
stos
cld
xchg
daa
bound
mov
nop
mov
inc
outsl
negb
cltd
enter
loop
inc
daa
mov
lods
jp
pop
and
add
push
hlt
lcall
push
and
dec
jbe
push
mov
out
push
std
dec
gs
add
loope
pop
sbb
mov
mov
insl
inc
push
cld
sti
imul
lcall
inc
push
fs
cwtl
in
push
add
je
pop
push
inc
add
scas
pop
pushf
xor
mov
bound
pop
pusha
clc
xor
bound
scas
xchg
inc
test
pop
fwait
sub
xor
ds
add
popa
test
outsl
push
inc
daa
and
fadd
adc
xchg
movsl
leave
fptan
cs
jne
sub
cmpsb
shlb
sbb
in
scas
and
fs
jmp
or
loopne
push
jg
insb
jnp
loopne
or
arpl
push
jnp
pop
sub
fdiv
mov
and
push
movsl
fadd
testl
and
decl
mov
xor
or
iret
and
out
ret
rcll
popf
data16
add
jns
hlt
dec
add
andb
outsl
inc
sub
xor
xlat
lock
divl
in
xor
push
and
fimuls
fadds
dec
fldenv
cmpsl
repnz
shll
in
xor
mov
lea
enter
cmp
push
popf
gs
mov
fimuls
dec
je
mov
sub
std
add
ds
mov
and
push
sahf
inc
sbbl
gs
stos
push
xorl
or
xor
push
jmp
fstpt
jns
push
or
push
loopne
jno
push
jne
in
mov
or
js
aaa
stos
sub
adc
bound
sahf
mov
sbb
xchg
lret
push
inc
stc
arpl
jns
jmp
jl
call
inc
in
out
push
sarl
add
fsubr
sbb
mov
les
xchg
mov
or
loope
sbb
xchg
ror
mov
stos
in
decl
bound
popf
pop
clc
jecxz
mov
imul
lods
mov
shlb
arpl
pushf
lcall
addr16
call
pop
rorb
mov
outsl
pop
out
sub
jnp
bnd
xor
pop
sbb
out
or
enter
stos
shrb
push
lds
jmp
repnz
lcall
jmp
xchg
dec
add
xchg
sub
mov
push
or
adc
xchg
fldenv
movl
pop
pop
test
push
aas
pop
mov
adc
sub
mov
and
in
ss
mov
mov
add
orb
dec
sti
testl
shrb
leave
dec
mov
jo
and
shlb
push
pop
jnp
les
movsb
or
jo
std
out
rcrb
int
cmp
leave
repnz
negb
dec
js
pop
fwait
das
test
xchg
das
mov
sbb
mov
je
mov
mov
add
repnz
inc
push
xchg
dec
mov
push
stc
ret
rorl
cmp
mov
or
loop
loop
ja
popa
mov
mov
lret
and
je
xor
repz
push
popa
mov
adc
push
ror
outsl
negl
popf
cmp
xor
cmp
jmp
jp
cmp
add
adc
test
push
xchg
daa
or
sarb
dec
out
mov
mov
or
sti
out
test
imulb
fisubl
or
push
sub
pusha
inc
pop
sub
out
ficoml
add
xor
xlat
sbb
mov
mov
outsw
and
movsb
pop
fistpll
sub
jl
shll
sahf
stc
xchg
adc
in
ficompl
inc
jecxz
ds
cmpsl
or
loop,pn
push
cmp
ss
pop
xchg
sahf
repnz
fs
insl
es
in
imul
outsb
adc
mov
pop
xchg
push
shll
mov
adc
scas
mov
sbb
pop
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
aaa
out
movb
mov
shufps
xor
xchg
push
sbb
push
rclb
inc
cld
xchg
xchg
jo
cltd
int
mov
enter
enter
and
cli
sub
loop
in
pop
dec
jle
xchg
loop
push
mov
cmp
xor
hlt
outsb
dec
loopne
xor
dec
lahf
stc
cmp
sbb
repz
jo
fisubrs
mov
xor
icebp
lock
fld1
lock
lret
cmp
adc
xchg
and
mov
cltd
pop
pop
prefetcht2
sub
push
adc
inc
je
adc
cli
int
pop
mov
pop
mov
popa
lock
jb
aam
jb
pop
ret
add
sub
xor
shl
dec
adc
dec
and
pusha
dec
mov
scas
daa
into
and
pop
shrb
out
rorl
int
in
and
and
repz
loop
mov
or
and
lods
loope
in
shrl
inc
rcl
scas
in
cmp
adc
or
les
push
xchg
fidivs
mov
test
loop
cmp
inc
mov
push
push
xor
mov
jnp
dec
shrb
nop
jl
jnp
push
aad
cmp
es
ja
insl
pop
dec
aaa
into
sbb
cmp
mov
lea
mov
xchg
in
dec
fcompl
pop
sbb
cld
pop
in
lods
sbb
subl
movsl
pop
movsb
jne
push
xor
push
xchg
inc
xor
inc
outsb
int
sbbl
mov
mov
xchg
test
xor
jbe
push
push
cmp
rcrl
xchg
adc
lods
pop
push
and
push
pop
push
adc
fiadds
iret
xchg
mov
mov
sbb
test
daa
shll
cmpsl
xchg
mov
adc
adc
hlt
jb
or
jg
int
sub
or
cmp
pop
sbb
sti
sti
push
ss
push
cmp
pop
sbb
aas
adc
push
pusha
adc
mov
xchg
sbb
push
in
pop
pushf
dec
popf
mov
pushf
testb
adc
out
inc
subb
xlat
enter
mov
mulb
lcall
repnz
lds
pop
insl
lret
xor
rcll
test
or
ret
jbe
push
lret
xor
pop
cmpsl
or
stos
push
int
aas
or
mov
movsb
fwait
inc
mov
push
test
cltd
or
push
das
fldenv
dec
repz
in
stc
cmp
push
xchg
fisubrs
and
insb
xor
sbb
or
out
ja
addr16
scas
lcall
popf
insb
es
leave
xor
jg
aam
jmp
push
and
push
push
jns
lahf
dec
xor
stos
jge
mov
push
and
shll
dec
int3
add
inc
xchg
and
das
imul
fiadds
test
add
popa
cmp
fwait
dec
stc
mov
leave
dec
popf
rorl
sbb
and
fisttpl
outsb
inc
push
xlat
adc
test
and
aam
lods
rcrb
inc
repnz
and
lret
loope
mov
or
imul
cmp
add
mov
ret
js
fwait
sub
adc
jns
roll
add
sbb
lret
cld
lahf
adc
movsl
cmpsb
add
sub
sbb
ljmp
pop
xchg
loopne
adc
and
outsb
xchg
popf
enter
xchg
vmptrld
xchg
pop
mov
movsl
push
stos
cltd
or
jg
sub
xchg
mov
sub
push
lods
push
pushf
pusha
test
mov
mov
pusha
push
ja
call
int
xor
lahf
push
aas
clc
cs
jecxz
div
insl
jbe
inc
mov
pop
jge
flds
push
lods
in
adc
inc
testl
xor
pop
push
lret
and
mov
sti
push
adc
jg
aad
out
push
test
mov
dec
popf
nop
pop
cwtl
push
adc
aam
stos
and
pop
pushf
scas
fisttpll
imul
xchg
gs
repz
leave
fmull
or
jae
data16
lods
pop
xor
mov
stos
lretw
inc
pop
jp
cwtl
jp
add
fdivrs
sbb
daa
fucomp
insb
es
sub
outsl
repnz
sbb
mulb
inc
roll
pushf
test
lret
pop
cli
cld
inc
fdivr
test
out
stos
mov
mov
fistps
movsl
stos
jecxz
outsl
sar
nop
stos
add
stos
lret
and
mov
mov
cmpsl
add
jb
test
loope
sub
fdivrs
jne
mull
jo
sub
movsb
lea
and
leave
das
rcr
sarb
insl
cmp
push
inc
roll
shlb
dec
jno
sbb
ret
xor
ret
mov
add
or
adc
mov
jecxz
or
outsl
cmpsb
push
fldt
mov
outsl
sbb
pop
les
lods
popf
inc
mov
and
xlat
mov
mov
int
ret
cmpsb
ss
imul
sbb
outsb
stos
adc
clc
sbb
jbe
scas
push
mov
sti
leave
fistpll
cmpsb
jg
mov
jecxz
iret
test
popa
adc
dec
xlat
push
adc
movsl
out
or
popf
sarb
popf
cld
adc
rol
mov
scas
push
mov
pop
in
fs
ds
mov
lods
pop
add
mov
xchg
jb
mov
mov
dec
mov
repnz
mov
pop
dec
dec
jge
js
gs
jb
dec
outsl
testb
dec
sbb
or
jo
psubw
hlt
nop
sti
ljmp
cld
nop
push
out
loope
arpl
cwtl
popf
add
loope
mov
push
pop
push
mov
xchg
xor
ret
gs
xchg
jmp
cmp
stos
cmp
mov
xchg
stc
sti
jmp
add
inc
outsb
mov
ss
out
pop
je
jb
mov
mov
xchg
ficomps
mov
jb
repnz
push
inc
mov
hlt
mov
or
into
jo
mov
or
ret
icebp
xchg
pop
and
sbb
jae
ret
cli
cmc
or
hlt
and
je
push
push
mov
mov
lods
stos
dec
or
imul
cmp
mov
in
daa
push
subb
jo
or
cmp
mov
mov
mov
sarb
inc
in
dec
daa
mov
mov
gs
adc
jmp
into
add
or
jnp
lods
xchg
sbb
adc
and
lods
inc
xlat
and
jb
cmp
lret
adc
jmp
fadds
pop
jo
dec
roll
adc
call
test
loop
lret
in
pop
std
pop
lret
int
dec
sbb
xchg
jns
mov
fdivl
repnz
inc
adc
xchg
jg
mov
mull
sbb
push
hlt
imul
repnz
push
je
jae
and
xor
xchg
sub
frstor
ficoms
mov
adc
xorb
div
es
mov
xor
push
icebp
fildl
sbb
lcall
lret
hlt
ds
faddp
fsubl
pop
xchg
lods
std
in
adc
mov
ja
adc
bound
lcall
call
inc
sbb
test
fimull
shll
pop
sbb
lods
std
adc
incl
mov
mov
pusha
sarl
xchg
leave
loop
cli
out
push
es
ss
lods
ss
dec
insb
stos
add
add
sbb
mov
mov
xor
cmp
xchg
push
mov
test
push
int
arpl
outsb
dec
out
jmp
mov
xor
repz
xchg
xchg
mov
inc
cli
enter
cwtl
enter
cmp
mov
adc
mov
jle
lock
mov
jnp
sarb
orl
pop
test
fildl
mov
push
in
xchg
ret
xchg
xor
stos
push
je
test
inc
inc
int
enter
fwait
clc
sub
fiadds
js
jae
shl
adc
pop
pop
push
int3
notl
and
test
inc
pop
movsl
nop
gs
fadd
ja
insb
inc
in
clc
and
xor
sub
mov
xchg
cli
insb
imulb
sti
jle
jo
es
push
xchg
aam
imul
ljmp
ljmp
pop
in
ja
jle
cld
jp
fdivl
push
sub
push
xrelease
lret
je
xor
in
xor
cmp
loope
pop
dec
sub
divb
jne
rcl
outsl
dec
sbb
outsl
xor
jnp
adc
mov
jmp
xchg
lcall
mov
insl
jbe
je
arpl
mov
push
ja
xchg
imul
mov
lods
mov
cs
jbe
in
pop
xchg
push
fs
fwait
test
pop
aam
sub
popf
popf
or
mov
pop
inc
fidivs
xlat
lods
mov
movsl
sub
pop
icebp
lret
shrl
push
pop
sahf
outsb
rolb
adc
outsb
push
cmp
push
pop
es
xorw
cli
push
test
aam
xchg
sbb
push
fisubrl
xchg
xchg
pop
insl
push
and
imul
call
pop
xchg
cmp
loopne
stos
sbb
popf
shl
inc
pop
fmul
push
es
jl
pop
cmp
arpl
fidivrl
sub
icebp
mov
fidivrs
jno
inc
enter
lret
imul
cltd
pop
adc
jns
xor
or
lahf
lret
fdivr
imul
mov
cld
xlat
fnstcw
test
sbb
pop
out
test
dec
mov
mov
cmp
xchg
lret
pop
inc
adcb
adc
fimull
dec
fs
jne
add
sahf
fs
jnp
call
mov
lock
jge
cmp
cmp
inc
iret
aaa
jb
loope
dec
bound
mov
lods
ficoml
jnp
repz
ja
pop
add
jle
mov
pop
adc
push
dec
or
idivb
ss
add
and
leave
aam
out
inc
xor
arpl
add
fidivrl
jns
push
std
std
icebp
or
pop
scas
cld
decb
cli
push
sti
push
jnp
lcall
lret
cmp
popf
cmp
mov
xchg
mov
dec
mov
adc
pop
xorl
push
jmp
es
pop
adc
int3
rclb
mov
inc
add
jo
lea
shll
out
fisubrs
xor
fimull
scas
mov
dec
imul
cmp
sar
pushf
or
fsubr
lods
mov
jns
mov
pop
lahf
push
mov
ss
lock
or
aaa
inc
mov
out
ffreep
cmp
popa
loop,pt
add
rol
add
fdivr
xor
jmp
mov
mov
xor
xchg
push
jg
mov
ss
repnz
push
repnz
movsl
xor
dec
jge
mov
jae
cvttps2pi
mov
cltd
lret
sarl
push
arpl
jne
push
aas
imul
lea
shll
mov
add
cmp
xchg
cmpsl
int
icebp
xlat
pop
adc
xchg
mov
lods
ret
fucom
sbb
test
sbb
es
xor
adc
sbb
mov
sub
mov
mov
pop
dec
js
shr
mov
and
pop
mov
icebp
hlt
push
mov
push
mov
sbb
or
mov
or
scas
sub
inc
push
mov
or
lods
mov
pop
orb
xchg
adc
dec
arpl
jbe
data16
cmp
in
cmp
stos
loope
jns
or
xor
in
xchg
daa
fistpll
mov
sbb
xor
mov
mov
pop
enter
notl
lret
loopne
add
cld
fcmovnbe
jmp
ss
inc
fcompl
rcrb
dec
mov
sbb
ja
repz
sub
test
push
mov
mov
bound
xlat
jb
imul
bnd
jmp
movsb
push
lcall
push
mov
rolb
or
cmp
mov
add
in
cmpsl
dec
xchg
xor
sub
sbb
push
ja
cltd
jle
mov
jne
jnp
mov
sbb
mov
xchg
cmp
sbb
notl
push
cmpsb
sbb
mov
dec
insl
pop
dec
lock
sub
sbb
hlt
mov
push
int
add
mov
lret
mov
je
jbe
and
inc
in
dec
jecxz
lea
push
cmp
jmp
popf
adc
test
xchg
out
fistl
je
inc
notb
lret
ljmp
gs
popf
sbb
or
xchg
mov
pop
lret
or
xor
std
xchg
inc
xor
fsubl
xchg
arpl
fcomps
add
mov
loop
andb
out
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
ljmp
mov
setbe
cmp
xorl
mov
hlt
push
aad
and
cmpsb
cmp
mov
cmpsl
aam
cmp
fsubrl
push
add
fisubl
xchg
mov
jns
test
popa
sbb
out
ret
mov
enter
shrl
cmpsl
push
cwtl
xor
lret
pusha
jl
nop
sbb
roll
and
adc
xchg
sbb
sub
js
mov
cmc
add
mov
pop
scas
xchg
dec
test
je
scas
cmpsb
les
lret
xor
scas
xor
dec
aam
in
mov
imul
inc
mov
inc
inc
mull
fdivl
jl
mov
pop
sbb
and
cmp
push
dec
sub
xchg
movsb
jmp
pop
addr16
push
pop
xor
cmc
pop
push
cli
mov
les
jecxz,pt
xchg
xchg
in
aam
imul
adc
xor
xchg
ds
psubb
pop
pop
mov
add
frstor
push
xor
sahf
test
imulb
mov
cmp
imulb
xchg
jecxz
mov
inc
xor
test
sub
sbb
sub
adc
test
out
cmc
push
adc
jl
inc
lea
iret
call
cmpsb
xchg
rol
push
out
push
sub
into
pushf
sbb
cli
movsb
pusha
out
mov
test
cmp
add
cmpl
int
mov
scas
inc
scas
jno
int
cs
cltd
jge
addr16
out
sbb
addr16
add
ds
aaa
fisubl
and
xchg
loopne
push
cmc
mov
stos
adc
int
fdivl
jnp
xor
fnstenv
mov
push
frstor
jae
mov
bound
mov
add
push
out
jle
add
lcall
xchg
pop
mov
push
pop
clc
rorl
cld
movl
adcl
dec
sbb
aas
jl
cmpsb
jge
in
mov
in
outsb
loopne
xchg
gs
sarb
loopne
insb
xor
mov
sub
pusha
lock
adc
lds
sub
pusha
cmp
mov
mov
insb
sub
icebp
add
mov
xor
shl
stos
xchg
sahf
push
out
jno
inc
mov
test
mov
bound
jge
jg
mov
loope
pop
cld
xor
test
fisttps
stos
insb
movsl
and
jmp
adc
jno
test
pop
jp
dec
call
test
mov
pop
pop
test
cmp
or
loope
cs
jbe
add
mov
pop
push
mov
nop
xor
inc
ret
xor
fucomip
lods
into
mov
in
out
add
aaa
outsl
ret
push
popl
and
push
roll
pop
and
cli
orl
pop
imul
imul
cld
loop
repnz
addr16
stos
fwait
addl
ret
dec
fbstp
outsl
scas
insb
stos
cmp
mov
dec
aaa
jno
mov
mov
jno
je
inc
pop
sbb
inc
mov
add
shrb
and
xlat
sbb
sbb
sti
pop
pop
sbb
push
ret
sbb
dec
adc
sub
into
inc
repnz
add
adc
pop
push
int
lods
pop
mov
jno
xor
ds
mov
std
test
ds
xorl
repnz
aad
xchg
xchg
push
add
jo
xchg
cmp
pusha
mov
push
arpl
pop
and
dec
mov
xchg
jge
jo
sbb
lods
sub
xchg
test
sbb
ss
imul
movsb
sub
add
icebp
fsubr
out
xor
mov
enter
sbbb
jo
push
jp
loopne
idiv
dec
mov
iret
loop
loope
scas
adc
js
mov
es
fsub
ss
das
nop
out
cmpsl
sub
mov
push
outsb
aad
icebp
xlat
out
fmull
cmc
cmp
xor
xlat
inc
pop
dec
loope
sub
xchg
out
xor
sub
leave
sub
mov
stos
ret
sahf
movsl
xor
or
enter
push
mov
push
mov
loopne
cmpsl
filds
dec
inc
adc
mov
popf
pop
mov
jb
xchg
ja
out
inc
sbb
mov
jp
and
xor
or
pop
pusha
jg
cmp
xor
imul
dec
cmc
and
fwait
push
repnz
jo
sub
or
ja
aam
mov
pop
cmp
aaa
mov
xlat
cmp
rcll
out
sbb
mov
lock
outsb
cmp
fisttpll
cmp
scas
ljmp
sti
fsts
adc
repz
push
cld
push
cmp
daa
pop
daa
pop
es
inc
xchg
ss
push
sub
mov
js
inc
add
icebp
or
ljmp
test
xchg
or
out
cli
std
data16
pop
stc
cmpsb
incl
hlt
inc
jp
lea
pusha
fwait
ret
dec
loope
push
push
rorb
pop
inc
nop
into
cmp
jbe
sarb
int3
xchg
fcmovb
dec
lret
push
xchg
shl
mov
outsb
cmp
mov
daa
lods
sbb
es
enter
fdivp
in
push
std
into
sbb
fwait
xchg
sbb
negl
std
daa
ficompl
dec
mov
imul
push
test
or
fisttpll
aas
add
mov
xor
sbb
int3
arpl
and
stos
jnp
xor
cmp
mov
ret
xor
xchg
cmp
push
fisttps
dec
icebp
loope
gs
rol
mov
ljmp
xchg
and
in
call
stos
and
inc
daa
cmp
jbe
pop
aad
insb
shll
xor
arpl
push
mov
cmpsb
and
imulb
add
xlat
jbe
sbb
mov
mov
jmp
sbb
decl
pushf
mov
mov
jmp
cmc
aas
sbb
ds
jns
push
lret
pop
shrb
ror
scas
jmp
rolb
jne
lahf
jmp
lock
xchg
outsl
fadds
stos
stos
or
xchg
push
pop
mov
xchg
jne
cmpsl
push
inc
cmpb
push
adc
stc
adc
and
lea
jmp
cld
jnp
pop
push
fnstsw
inc
mov
push
jle
pop
test
jbe
les
mov
lcall
stos
cmp
jge
cmp
xchg
jmp
jae
fisttpl
jl
sahf
fcomip
loope
aad
mov
jo
xchg
add
dec
mov
mov
insl
int
xor
insb
jns
rcl
xchg
pop
inc
push
cmp
jmp
je
jecxz
mov
inc
arpl
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
jg
jb
cmp
adc
and
xchg
xchg
rcrb
mov
test
or
dec
jb
xchg
les
xor
mov
cmp
out
clc
cmp
outsl
xchg
dec
cltd
sbb
jns
mov
loop
and
fisubs
or
fidivl
mov
or
inc
test
cli
pop
outsl
mov
jl
and
mov
jecxz
dec
push
mov
cwtl
cmp
sub
dec
mov
push
outsl
mov
mov
out
push
cltd
mov
xor
cmp
cmc
dec
sbb
push
sub
or
insb
loop
mov
iret
fadd
ja
subb
sbb
inc
js
adc
push
shll
jo
jge
cli
sub
cli
push
mov
test
sub
pop
mov
rolb
dec
outsb
sub
loop
mov
mov
das
xlat
enter
push
lds
mov
cmc
scas
pop
mov
mov
stos
adcb
push
pop
and
movsl
pop
pop
push
cld
cmp
adc
scas
test
iret
dec
cmc
mov
push
xchg
mov
sbb
and
mov
addr16
push
sti
test
add
sahf
arpl
icebp
push
daa
fmull
xor
or
sbb
push
aaa
cmp
repnz
clc
push
inc
or
adc
push
mov
ret
sub
jg
or
xchg
jge
shrb
shrl
mov
repz
xchg
xor
out
push
fidivrl
std
inc
sbb
xchg
cwtl
push
xor
mov
inc
pop
fisubs
arpl
in
aaa
jns
adc
enter
inc
cmp
pop
adc
push
adc
test
icebp
adc
cmp
cmp
insl
xor
and
and
mov
dec
jge,pt
cmp
cmp
inc
push
decl
test
or
movsl
add
into
das
orl
inc
out
pop
into
cmp
dec
xchg
or
cli
je
dec
lret
and
sbb
jecxz
jg
xchg
mov
out
in
stos
lret
jp
dec
cmpsl
xor
mov
or
xchg
cmpsb
jl
mov
fnstenv
or
mov
xor
xchg
mov
fidivl
add
pusha
fists
scas
movsl
inc
or
inc
mov
js
mov
cmp
lods
das
scas
mov
add
push
scas
adc
cmc
add
mov
jo
cmc
or
jnp
sbb
push
dec
cmpsb
shlb
push
or
jae
jmp
jbe
mov
and
mov
jo
mov
int
cmpsb
mulb
fnstsw
fldenv
scas
xor
ret
out
add
sub
aad
lea
mov
nop
pop
out
push
and
aaa
sbb
jb
push
mov
xchg
or
scas
sbb
xchg
cmp
add
cmc
loop
int3
outsl
push
inc
mov
jge
xchg
fimuls
out
daa
imul
stos
mov
jecxz
xor
adc
mov
push
add
lahf
data16
adc
add
maskmovq
pop
cmpsl
dec
xor
sbb
test
out
sub
xchg
fists
jae
dec
mov
push
iret
jns
call
add
jno
out
push
cltd
xor
mov
xchg
adc
iret
cmp
andb
mov
adc
icebp
cmp
popl
mov
jl
pop
dec
fs
sbb
scas
jnp
stos
cmp
cwtl
ret
gs
xor
test
cmp
int
loop
mov
dec
or
in
push
add
cmpsb
daa
inc
repz
test
inc
pushf
add
data16
cmp
cmp
inc
add
inc
pop
jge
ja
mov
xlat
xchg
popf
ss
stc
sub
inc
push
hlt
sub
push
sub
adc
jne
lds
cmp
jns
mov
and
xor
jmp
bound
jmp
rorb
imul
incb
inc
and
or
ret
xor
je
jp
sub
js
and
rolb
js
ss
imul
or
lods
jmp
outsb
addr16
inc
out
xchg
ljmp
out
sbb
sahf
fs
mov
sarl
cmpsl
cmp
test
rcrl
dec
push
push
sub
pop
mov
insb
xchg
sahf
loopne
cwtl
xchg
loope
mov
addr16
movsb
jno
inc
rcll
mov
shl
pop
or
and
mov
lea
or
xor
push
in
or
mov
fildl
jecxz
push
rolb
sti
outsb
dec
xor
add
repz
inc
stos
inc
inc
sbb
cmp
push
daa
lret
scas
cmp
sbb
arpl
fnstcw
adc
mov
xor
jne
sub
or
into
das
xor
mov
push
inc
cli
pop
cmp
ja
xchg
aad
out
xlat
mov
test
pop
pop
rcll
xor
mov
sbb
push
lods
daa
decl
and
cmpb
xchg
into
stc
sbb
cltd
push
sub
pop
fcompl
daa
mov
inc
add
jecxz
outsb
cmp
sbb
insb
sbb
inc
inc
shr
xlat
sbb
lods
push
push
cmp
jae
push
sbb
gs
lock
sbb
and
fimull
dec
cmp
scas
cmp
mov
insb
popa
daa
ds
adc
into
xchg
jmp
bound
add
cltd
in
cmpl
push
add
cwtl
repz
fsubrp
jle
inc
sbb
dec
lcall
sub
jg
pop
mov
xor
mov
repnz
push
std
mov
into
outsb
mov
testl
sbb
pop
in
cltd
insl
xor
cmp
mov
add
loopne
ja
add
xchg
sbb
rcr
mov
scas
cmc
fadd
fcomps
das
cwtl
dec
add
dec
push
mov
scas
inc
inc
in
cli
mov
das
mov
arpl
jbe
sbb
stc
orl
cwtl
notl
mov
pop
sub
aas
in
and
mov
and
jl
mov
xchg
cmp
outsl
fsubrl
push
sub
test
rclb
movsl
cmpb
xchg
jo
out
sarb
hlt
jno
cld
movsb
sbb
mov
mov
jle
pop
dec
or
out
fimuls
mov
sub
xchg
add
out
adc
loopne
jge
fscale
sub
sub
push
sub
fcmovu
cltd
mov
inc
orb
dec
dec
loope
cmp
push
sub
mov
jmp
cmc
xchg
cmp
push
mov
adc
cmpsl
push
mov
and
scas
adc
lea
rcll
mov
loop
dec
jle
adc
imul
ss
xchg
negl
aam
push
ret
cmp
subb
mov
cmp
mov
int
arpl
and
test
push
cltd
mov
push
add
dec
push
sub
cmc
arpl
out
push
imul
jns
jb
mov
imul
or
rorl
nop
push
sub
or
sbb
out
imul
jo
or
or
adc
out
push
mov
mov
aaa
or
mov
in
xorb
subb
cmp
push
repz
subl
rcll
sarb
mov
dec
pop
xlat
sbb
out
data16
hlt
xor
adc
movsl
add
nop
cld
sahf
iret
cmc
pop
bound
xchg
jb
dec
adc
movsl
rcl
sahf
daa
lahf
jmp
and
pop
popf
and
cmp
dec
add
aas
push
inc
lahf
inc
fisttps
adc
adc
pop
add
push
lret
cltd
sbb
push
addb
decb
cmpsl
leave
pop
add
popa
xchg
pop
mov
test
scas
stos
movsb
mov
leave
xlat
adc
popa
jne
std
jge
ficomps
scas
or
test
scas
bound
icebp
rcr
mov
cmpsl
xchg
and
lods
xchg
sti
lcall
xlat
jecxz
lds
int
pop
ret
mov
xchg
rcll
pop
mov
jae
sbb
jg
inc
cwtl
sahf
das
mov
cmpsl
rorb
pop
fs
fsts
mov
rcrl
push
jmp
rorl
inc
es
adc
inc
push
mov
int
sti
pop
jge
adc
pop
dec
or
sbb
and
mov
xor
setae
out
jb
sbb
lret
scas
into
sbb
sbb
cmc
clc
pop
mov
sbb
cld
lahf
mov
sub
push
bound
lds
gs
pop
jnp
loopne
outsl
pop
inc
imul
sub
xchg
imul
pop
gs
in
add
mov
test
pop
clc
outsb
xchg
andb
inc
mov
sub
or
out
cmpsb
arpl
sub
out
mov
push
int3
sub
cmp
xchg
xor
ret
push
xchg
fistpl
cmp
mov
cs
adc
in
scas
inc
ret
jnp
dec
jo
aaa
adc
mov
mov
pushl
ds
sbbl
dec
xchg
mov
clc
mov
lret
mov
js
imul
or
xchg
pop
jl
scas
jb
testb
sbb
popf
jmp
and
mov
xor
out
imul
cmp
in
mov
loopne
loope
inc
inc
outsl
pop
cmp
mov
or
dec
fcmovb
fstps
pop
jle
pop
xchg
fldl
add
pusha
jno
leave
ficoms
jae
aad
mov
sub
ja
mov
sahf
cs
dec
sarl
loope
jl
ja
mov
movsl
xor
jmp
and
nop
xlat
aas
push
rcll
inc
xor
aaa
add
ljmp
mov
push
cli
mov
lret
inc
xchg
int
out
aad
out
adc
je
fdivrs
mov
push
xor
cmp
arpl
hlt
pushf
test
xchg
push
rorl
sbb
lods
cmp
xlat
pop
clc
sbb
mov
xlat
sbb
addb
mov
imul
ja
popf
push
cmp
iret
sti
inc
mov
cmp
and
popf
das
das
cmp
loope
fs
pop
insl
xchg
jbe
in
movsl
sbb
je
mov
mov
mov
jp
xor
dec
ret
xchg
addr16
fcmove
stc
popl
add
stos
ret
or
dec
mov
int
orl
jb
push
lahf
fistpl
insl
cmpsl
cmc
mov
scas
sub
pusha
pushf
xor
lret
or
lcall
push
xor
adc
mov
pop
xor
cmp
outsl
neg
xchg
and
push
cmpsl
mov
dec
loop
int3
in
jnp
dec
dec
fists
adc
jb
or
cli
cmp
pop
rcl
dec
ror
fld
test
addr16
cwtl
gs
xabort
xlat
std
sub
iret
daa
xchg
sub
ss
ds
data16
jb
pop
mov
adc
test
and
outsl
popa
or
jmp
mov
jo
add
out
insb
mov
xchg
push
ret
jp
mov
out
hlt
mov
mov
lods
arpl
imul
rcrl
xorb
aaa
rcll
xor
sub
push
hlt
sahf
sbb
test
das
loop
cmp
flds
ljmp
cmp
jns
jae
jle
jnp
mov
dec
pop
xchg
push
test
pop
xchg
sarb
in
aas
insl
aaa
mov
test
aaa
testb
daa
aam
dec
inc
or
lds
cltd
jg
nop
mov
gs
inc
pop
mov
imul
sub
das
fisubs
sahf
jmp
sarb
or
cwtl
iret
xchg
sbb
daa
sarl
jne
push
push
push
loopne
xchg
in
or
sbb
mov
scas
popa
sub
idiv
js
hlt
js
pop
aam
loopne
push
addl
scas
add
xor
sub
inc
jae
das
push
sub
fwait
mov
pop
sub
dec
stc
arpl
gs
mov
scas
movsl
mov
xor
shl
hlt
call
call
inc
cmp
cmp
or
xor
lea
repnz
and
mov
xchg
fsubrs
sub
push
ja
in
push
xor
pop
ficomps
out
ja
mov
dec
out
test
ret
es
dec
out
nop
shll
mov
jns
test
and
das
or
or
mov
mov
push
stos
pop
call
insl
nop
lcall
sub
stos
into
ret
cmp
mov
shl
fs
int
loop
pusha
ljmp
cmpsl
jmp
dec
pop
cltd
xlat
fistpl
jecxz
mov
jge
lret
std
sub
jno
sbb
and
in
movsb
mov
lods
jae
xchg
cs
rcl
arpl
daa
es
cmpsb
and
mov
jg
adc
push
xorl
mov
or
fs
pop
xchg
fstpt
shlb
add
cmp
add
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
mov
nopl
add
dec
out
and
lcall
inc
pop
lods
jne
rcrb
les
add
xor
cmp
cmp
dec
std
dec
cwtl
sub
lods
fimull
push
jmp
pushf
mov
cmp
jp
jno
pop
je
popf
pop
shrl
bound
outsl
roll
mov
dec
or
xchg
lds
repz
fimull
add
jg
jns
arpl
mov
adc
add
mul
sub
push
lret
iret
in
adc
push
lahf
aad
ljmp
arpl
sti
add
fdivr
lret
and
jecxz
ucomiss
cs
jge
out
add
imul
sti
int3
ficoms
cld
dec
arpl
ljmp
sub
int
in
jle
dec
mov
in
sbb
mov
cmc
pop
jnp
and
loop
shll
sbb
sbb
aaa
inc
subb
loop
sub
xchg
fisubl
mov
js
bnd
out
or
sbb
jp
adc
jecxz
inc
add
sti
scas
fnsave
dec
inc
out
cmpsb
cmc
shrl
aam
push
push
pop
inc
in
dec
cs
push
or
lods
cmp
in
xchg
pop
or
into
sub
pand
aaa
dec
test
js
lret
notb
fdivs
mov
push
cmpsl
and
mov
and
push
dec
out
addr16
fs
cltd
rorb
xor
mov
dec
fbstp
in
inc
mulb
arpl
fs
pop
nop
adc
lcall
test
mov
in
dec
out
jecxz
push
or
mov
cld
or
ss
and
stos
ret
mov
push
jo
aas
shlb
pop
sub
sbb
mov
cs
xor
lret
aas
mov
fs
or
cmp
add
outsl
xor
aas
adc
cmpsl
push
xchg
or
xchg
iret
adcl
inc
sbb
mov
mov
add
mov
js
mov
mov
adc
ja
adc
bswap
cmc
into
push
mov
pop
negb
scas
adc
push
mov
hlt
clc
lods
and
jae
push
loope
arpl
loope
mov
out
iret
outsl
imul
xlat
outsl
xchg
and
cwtl
pop
inc
cmp
push
in
jmp
dec
inc
out
push
in
out
sahf
bound
sahf
jae
dec
mov
pusha
scas
push
or
jmp
lea
sahf
and
push
sub
xchg
orl
lcall
pop
out
popf
push
xor
cmpsl
addl
jge
xor
pop
fldcw
ret
leave
mov
xor
rcrl
and
ja
mov
int3
push
mov
jmp
test
fisttpl
mov
outsl
mov
fld
je
into
repz
lcall
xor
out
fldt
outsb
testb
mov
daa
push
mov
dec
mov
fstpt
jae
gs
int
pop
stos
or
or
nop
mov
clc
push
pop
pop
ror
les
aam
iret
xor
jbe
out
dec
popa
cltd
mov
cmp
mov
arpl
sub
rcrb
cmp
inc
cli
lock
pop
testb
dec
lahf
rcll
xor
out
retw
push
int3
loopne
xor
mov
pop
int
cmc
sbb
xor
mov
bound
push
sti
mov
dec
fmul
and
cmc
sub
sti
cmp
push
xchg
data16
in
jne
jo
lock
xchg
or
pusha
dec
mov
cmp
xor
add
lods
in
sub
add
xor
xchg
push
adc
mov
imul
jge
imul
mov
out
push
xchg
push
mov
les
xor
fs
mov
lock
sbbb
sub
pop
iret
orb
lds
push
stos
mov
push
fwait
jmp
mov
xor
clc
pusha
push
push
shll
scas
lock
or
aas
dec
xchg
xchg
mov
or
sbb
dec
inc
mov
mov
jbe
fisttps
sbbb
outsb
iret
xlat
lea
iret
sub
push
mov
mov
fistpll
add
jne
jae
cmpsl
shrb
repz
sub
add
xchg
xchg
mov
and
int3
push
mov
and
rcr
daa
xchg
jns
lcall
imul
inc
adc
pushf
cmp
inc
stos
shrb
pop
dec
mov
pop
mov
jne
xor
push
dec
mov
scas
jecxz
cmp
jo,pt
inc
lods
lcall
addr16
sbb
insl
imul
pop
mov
or
sbb
add
stos
imul
adc
fists
jle
dec
repz
cli
push
flds
push
mov
push
push
fdiv
cmc
sti
sbb
cmc
and
mov
std
xchg
xor
lods
and
loopne
sbb
sbb
cmp
call
xor
aam
sub
dec
insb
scas
adc
add
int
inc
push
mov
xor
mov
les
scas
pusha
lods
sbb
pusha
sub
dec
repnz
stc
cmpsb
jne
les
stos
mov
jge
and
outsl
stos
add
stc
xor
rcrl
out
les
into
sub
in
cmp
jmp
outsl
dec
pop
and
mov
or
pop
cmp
repz
cmc
insb
movsl
mov
enter
adc
loop
sub
insb
testl
test
push
sub
stc
call
pushw
dec
cmp
mov
jmp
xchg
lret
xchg
push
mov
dec
scas
pop
popf
pop
faddl
or
loope
jg
shlb
sbb
cmp
pop
push
nop
cmp
jnp
pop
or
push
into
mov
pushf
push
jmp
adc
imul
imul
jb
or
sub
mov
loop
push
mov
cmc
ss
pop
icebp
das
add
or
out
out
sub
dec
pop
add
mov
jno
imul
xor
cmc
pop
mov
lahf
pop
pop
aam
ss
leave
push
mov
jnp
cmp
test
inc
int
mov
mov
roll
fcoml
xchg
std
ret
and
popf
or
mov
ror
and
mov
sbbl
push
pop
popf
ret
mov
jnp
mov
push
xchg
jmp
add
xchg
stc
mov
adc
add
jmp
jne
add
subl
xchg
iret
add
xchg
adc
and
or
loopne
movsb
stos
mov
add
push
cmpsl
movsb
pop
cmp
mov
repnz
cmpsl
rolb
adc
inc
add
jmp
mov
aam
xor
scas
mov
mov
inc
push
or
fisttps
ljmp
addr16
inc
inc
fimull
fstps
xchg
inc
inc
repz
jg,pn
out
push
sbb
out
pop
lahf
xor
out
jg
sbb
insb
sub
or
sub
pop
adc
dec
cmp
jl
sbb
hlt
mov
pop
int3
fstpt
push
repz
rol
aaa
ss
jnp
push
fsubrs
pop
add
or
add
jle
jge
push
push
mov
mov
flds
push
jg
insb
inc
push
push
xor
jo
push
cmp
mov
cmc
push
push
dec
jl
leave
repz
test
sub
cmp
cmp
sub
xchg
dec
dec
dec
fidivrs
arpl
push
add
adc
aam
ret
cmpsl
add
es
xor
out
push
lahf
inc
inc
cmp
xchg
xorl
dec
or
stos
out
sub
pop
cmp
jge
sbb
mov
ljmp
mov
popf
ret
loope
lcall
xor
and
lret
rolb
mov
mov
pusha
out
lea
or
mov
sbb
xchg
sub
outsb
js
pop
test
jg
xlat
mov
sbb
dec
push
fs
adc
jns
imul
stos
je
cmpsb
sub
sbb
fwait
scas
xor
es
pop
leave
or
adc
mov
inc
jne
sbb
xchg
aam
loop
pop
stos
inc
mov
adc
test
xor
scas
lcall
xchg
push
cltd
pusha
dec
cmpsb
sahf
sahf
inc
push
jge
in
xchg
pop
mov
add
adc
cmp
outsb
inc
xor
jb
stos
inc
xor
push
fildll
test
imul
or
cmpb
outsl
ret
cmc
cmp
stos
jg
out
fwait
xor
scas
and
repnz
xor
mov
and
jns
inc
mov
xor
xlat
imul
pusha
mov
inc
pop
scas
shlb
lds
pop
jp
mov
int3
cmpsl
test
cld
mov
lret
hlt
push
adc
test
lods
int3
mov
cmp
lcall
pop
jle
scas
movb
into
and
rcrl
les
pop
and
lahf
mov
imul
adc
je
fmull
sahf
xlat
add
gs
or
clc
mov
jge
jb
cmp
mov
cmpsb
in
shll
sub
xchg
mov
test
pop
pop
divb
jae
mov
pop
test
arpl
and
dec
stc
xchg
add
sub
xchg
and
dec
xlat
in
fisttpll
scas
mov
hlt
jo
sbb
aas
jne
mov
xchg
inc
stos
inc
xchg
incl
and
outsb
dec
pcmpgtw
jae
or
mov
xor
push
int
dec
cltd
das
rcl
xorb
mov
mov
mov
roll
sbb
das
jecxz
mov
cltd
movsl
lret
dec
cmpsb
push
ud0
popa
mov
shrl
loop
incb
xchg
shrb
in
hlt
add
repz
push
pop
dec
push
pop
add
xor
mov
jmp
pop
scas
aad
fmuls
xor
jp
add
mov
pop
enter
das
or
popa
adc
lock
and
add
rclb
push
incb
mov
out
fistps
jle
divl
inc
inc
leave
mov
xchg
pop
test
xor
ficompl
popf
int
xchg
sahf
pop
popa
jl
mov
xchg
out
xchg
mov
inc
out
and
arpl
lock
in
inc
adc
loopne
in
jne
xlat
inc
and
sub
dec
jns
rorl
pop
out
mov
loop
test
inc
rcr
add
daa
mov
xor
clc
sbb
mov
mov
fwait
das
out
or
ss
idivb
fadd
or
pop
dec
mov
lahf
sub
sub
mov
adc
dec
ret
adc
out
cmpsl
es
rorb
out
pop
fucomip
aaa
or
lods
pop
fs
xor
mov
jle
popa
call
lcall
fisubs
adc
test
dec
fcoml
pusha
jno
sbb
push
add
call
test
lock
bound
jl
mov
mov
xor
pop
pop
clc
pop
adc
sub
test
adc
inc
mov
lret
mov
inc
fstl
sahf
sbb
dec
cld
jb
out
xchg
dec
sti
nop
dec
pusha
mov
lods
add
in
test
dec
or
pop
je
inc
add
sub
sub
adc
mov
imul
ds
dec
ret
or
adcb
adc
jl
inc
aas
daa
adc
jl
lcall
int
mov
xchg
leave
in
xchg
pop
sbb
js
ret
adc
loop
gs
and
cltd
repz
pop
imulb
mov
aas
push
pop
lods
jp
ljmp
movsb
test
dec
pop
mov
sbb
xor
cmp
or
inc
or
dec
lods
int3
inc
mov
adc
sahf
dec
add
lcall
xor
or
push
sub
xchg
movsb
inc
dec
jmp
cmp
mov
in
pushf
arpl
sub
ror
mov
orb
inc
or
dec
xor
add
insb
mov
xlat
aam
jnp
aaa
mov
insl
and
push
jno
push
push
jo
mov
icebp
jmp
fdivr
js,pt
mov
movsb
cmp
bound
incb
andb
cmc
mov
orl
push
adc
add
nop
cmp
cmp
cmp
nopl
in
mov
cmp
push
mov
push
data16
push
sub
xor
repnz
cltd
xor
pop
cmp
and
nop
dec
cmp
in
sub
add
pop
call
adc
inc
inc
aaa
aaa
mov
cltd
rolb
or
mov
xor
inc
jmp
jae
sub
sbb
push
ja
out
cli
leave
push
addl
pushf
jge
arpl
inc
or
pop
pushf
adc
lahf
rclb
fistpl
jecxz
push
daa
test
stos
into
pop
or
mov
test
add
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
jnp
xchg
and
loop
xlat
jmp
push
out
pop
jo
dec
or
push
push
outsl
and
jl
aad
mov
out
loope
in
out
adc
dec
pop
addl
xchg
outsl
ljmp
test
fs
xchg
xor
lods
cmp
inc
xor
les
mov
lods
sbb
outsb
daa
xor
adc
mov
iret
jo
xchg
push
insb
leave
or
fsubr
fidivs
aad
push
loopne
pop
push
fldt
sti
fldenv
test
test
xchg
inc
repz
cmp
shl
repnz
mov
fbld
cwtl
ffreep
scas
movsb
mov
inc
jp
subl
sbb
fwait
leave
fmuls
jmp
popa
and
lret
popl
hlt
out
xor
ret
inc
outsb
lods
mov
pop
jl
ja
aas
cs
jl
cmc
sub
adc
test
pop
cli
mov
xor
scas
add
dec
ja
dec
aaa
sub
lods
cwtl
daa
dec
iret
or
push
mov
call
adc
cmc
jbe
andl
aam
pop
or
or
cs
scas
fs
into
xorl
cwtl
into
stos
lock
add
fwait
stos
rcll
lahf
push
jmp
sbb
pop
sbb
dec
aad
adc
data16
xchg
mov
mov
mov
inc
ret
sahf
loopne
push
aas
mov
xchg
nop
xchg
call
inc
pop
add
mov
add
loopne
leave
ret
popa
aas
pop
or
add
daa
pop
inc
clc
sbb
call
push
xchg
lock
xchg
inc
mov
test
test
lret
jae
insl
mov
add
cmpsb
pop
adc
int3
dec
scas
in
mov
loop
call
jg
sbb
mov
sahf
mov
enter
adc
cmpsb
pop
pop
pop
pop
add
jnp
fistl
inc
jb
cmp
das
out
in
sti
cmp
adc
das
sub
std
das
jmp
fsubs
aad
push
pop
arpl
xchg
lods
inc
inc
test
sbb
push
push
inc
jae
cwtl
cmp
ret
stos
stos
and
subl
roll
aaa
pop
mov
rcrl
sbb
in
gs
dec
cmc
pop
pop
cmp
sbb
clc
dec
mov
outsl
sbbb
inc
dec
inc
push
jae
cmp
and
gs
mov
outsl
push
push
xchg
push
dec
xor
xchg
mov
or
js
xchg
jae
push
mov
jnp
mov
ss
std
stos
je
mov
cmp
testb
loop
frstor
xor
popa
and
cltd
inc
arpl
dec
push
inc
scas
sbb
lea
xchg
mov
and
jecxz
iret
clc
dec
out
cmp
inc
push
pop
pop
in
and
jne
inc
mov
and
jbe
cltd
or
mov
xchg
movsl
push
mov
cmp
stc
ret
jne
dec
mov
dec
adc
or
gs
or
add
cmp
shrb
pop
xor
inc
cli
bound
rol
mov
out
aam
inc
fbld
adc
bound
jae
cmpb
push
cmpb
lods
inc
dec
push
jl
mov
jge
xchg
ds
mov
pop
test
xor
out
lds
mov
int3
movsb
push
ss
mov
outsb
ja
repnz
inc
jns
and
xchg
nop
xchg
test
sarl
mov
fs
push
push
push
aas
push
adc
sbbl
fcmovnb
xchg
fdiv
aas
fcompl
mov
adc
popf
ret
fiadds
mov
jo
push
inc
xor
movsl
sahf
mov
adc
dec
test
push
iret
mov
ret
mov
xor
or
clc
push
jp
mov
push
inc
cmpsb
scas
pop
xor
mov
data16
fldl
imul
sbb
mov
cmp
xor
scas
cwtl
nop
fldcw
ss
or
jmp
cmc
test
in
push
test
dec
cmp
xchg
les
clc
add
dec
inc
cmp
add
or
mov
testl
or
add
insb
out
in
aas
jno
xor
enter
cwtl
pop
cmp
fwait
das
popl
sbb
lcall
in
loop
and
ljmp
lds
rorb
ret
bound
mov
push
cmp
addr16
out
jle
outsb
cs
pop
xchg
push
mov
cmpsl
cld
add
mov
fisttpll
test
test
xorb
mov
daa
in
xchg
hlt
add
leave
rorl
arpl
and
adc
popa
aas
cmpsb
fs
sahf
xchg
das
ljmp
in
mov
shll
int3
popf
hlt
sti
inc
mov
mov
lret
xor
iret
imul
shrb
repz
in
inc
ds
sti
movsb
mov
jns
pushf
movsl
arpl
test
xchg
mov
adc
lahf
fnstsw
xchg
movsl
pop
sub
sarl
jp
sub
out
adc
fsubp
mov
cmp
mov
and
push
inc
xorl
popa
shl
adc
jmp
imul
inc
dec
dec
jne
popf
dec
lcall
lock
sbb
pop
jno
or
iret
roll
jecxz
stos
outsb
js
mov
sbb
in
cmp
push
mov
lahf
jo
mov
inc
in
xor
adc
sub
cld
jb
into
add
and
xchg
add
outsb
aas
cmp
push
inc
xchg
add
xchg
mov
movsl
push
dec
jno
in
dec
inc
iret
sub
je
outsl
repz
adc
fistpll
popa
mov
js
add
lcall
daa
cmpsl
loopne
xor
xor
pop
mov
jno
pop
sub
js
into
mov
or
pushf
aaa
lret
pop
push
xor
fidivl
mov
scas
je
imul
jp
mov
push
add
push
jge
dec
loope
mov
lcall
mov
lock
movsb
adc
imul
and
mov
push
sbb
push
fwait
inc
pop
movsl
cmp
or
daa
dec
jne
sub
sub
pushf
jmp
push
jnp
cld
xor
faddl
sub
jmp
sbb
test
push
xchg
daa
mov
imulb
je
test
dec
cmpsl
shll
xchg
das
mov
jp
aad
out
pop
ret
pushf
jnp
sbbb
loope
punpckhdq
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
pop
xchg
xchg
maxps
cmp
add
pushf
les
jp
cs
fimuls
packssdw
xlat
inc
iret
imul
and
rorb
jg
fmul
aaa
mov
or
loop
ljmp
and
mov
and
jmp
cmp
icebp
pop
in
gs
pusha
cs
mov
ret
jae
scas
mov
xor
jecxz
stc
sub
jnp
outsb
mov
cmp
adc
lods
add
cmp
test
sub
sbb
sub
xchg
scas
int3
aam
rolb
cs
mov
iret
or
dec
mov
xchg
psadbw
pusha
cmp
rorb
out
loope
nop
mov
xchg
add
add
and
test
out
and
nop
push
cmpsb
call
pop
sub
sbb
pop
js
test
fcoms
xchg
mov
repnz
fs
out
ret
sbb
adc
dec
mov
shl
cltd
ja
repz
mov
frstor
repnz
mov
and
inc
mov
out
dec
add
mov
mov
jbe
xchg
lret
add
imull
insb
cs
lods
fnstenv
cmc
inc
sub
dec
push
notb
lret
repnz
mov
stos
or
dec
xchg
sub
push
push
repz
add
mov
pushf
xchg
clc
jns
loopne
scas
lret
test
xchg
and
inc
inc
mov
adc
popa
scas
cmp
xorb
cld
jl
lds
push
and
fisubl
pop
test
push
cli
lock
and
imul
js
leave
loop
mov
pop
sti
push
test
subb
in
push
movsl
aas
push
or
mov
lcall
in
pop
pop
mov
sahf
inc
jno
and
dec
xor
add
jp
jmp
int3
sbb
repz
mov
dec
in
popa
aam
sub
sar
add
mov
and
mov
icebp
add
loop
mov
pop
test
jecxz
add
adc
iret
jg
cmp
sahf
imul
jno
xor
jecxz
pop
or
rep
cmpl
cmpsl
push
push
pop
xchg
sarl
xchg
into
cmp
mov
ss
mov
int
ljmp
pop
pop
mov
sbb
mov
add
dec
pop
xor
js
adc
jb
mov
and
push
jne
enter
fabs
aam
mov
enter
jge
out
test
mov
push
nop
xor
mov
fldt
je
addr16
fst
lcall
mov
outsl
and
adc
jge
fisubrl
push
lret
dec
sbb
lahf
mov
movsl
scas
cmp
add
aad
clc
sti
gs
dec
jge
icebp
clc
icebp
mov
mov
sahf
inc
push
xchg
lock
test
xor
out
mov
cmp
pop
mov
out
push
sub
les
mov
cmpsl
rcl
fnstsw
sub
add
movsb
lods
stc
iret
mov
mov
pop
andl
mov
je
cmpsb
mov
aas
xchg
xor
ljmp
sbb
pop
xchg
test
push
aas
sbb
inc
lret
rcr
push
or
jnp
cs
cmpsb
sbb
cltd
fwait
leave
add
jp
adc
mov
jns
mov
in
arpl
in
outsl
aad
push
testb
rorb
push
sbb
add
lcall
mov
adc
ja
xchg
aad
inc
mov
add
cli
bound
jo
loope
cs
xor
cltd
lret
arpl
push
pop
dec
mov
out
outsb
push
inc
xor
das
pop
lods
jecxz
push
pop
fidivrl
jge
mov
mov
inc
mov
dec
insb
pop
sub
pusha
lods
scas
dec
push
push
loop
inc
pop
push
out
stc
xchg
push
cmp
rcrl
out
fiaddl
mov
call
pop
out
push
xor
roll
cwtl
push
leave
xchg
outsl
pop
mov
popa
fs
insb
cmc
icebp
jne
push
xor
jp
fs
dec
fisttps
repnz
xorl
mov
mov
sbb
adc
push
jmp
aaa
adc
jbe
or
mov
adc
sbb
mov
inc
inc
adc
mov
clc
xchg
test
lcall
bound
std
or
or
fs
add
ljmp
jle
mov
mov
push
dec
push
pop
inc
cmpsl
sbb
push
and
mov
sub
stc
pop
xor
sbb
pop
dec
mov
push
pop
fisubl
pop
sbb
jmp
lods
ret
cmp
push
add
sbb
test
lds
fwait
shl
mov
jmp
scas
sarl
dec
cli
adc
xchg
mov
push
mov
lock
jnp
loope
rcr
jnp
subl
repnz
sahf
test
sub
dec
xchg
arpl
enter
rcrl
mov
xlat
sti
jbe
es
mov
sbb
inc
test
movsb
xor
sbbb
add
push
mov
xor
iret
fdiv
cmp
sarb
loope
das
lock
imul
fnstenv
sti
nop
jl
pushf
movsb
xchg
movb
aas
jbe
jb
sbb
mov
pop
cmp
loope
jbe
add
ljmp
jb
out
cmp
das
jp
call
lock
push
mov
xor
loopne
int3
dec
inc
mov
addb
scas
and
in
xchg
jg
sub
lods
xor
mov
inc
mov
pusha
xor
xlat
mov
push
jns
test
pop
jecxz
jle
pop
in
mov
mov
inc
sbb
pop
lret
lods
movsb
gs
xchg
dec
movsb
pop
add
cmpsl
clc
push
and
push
mov
mov
adc
and
out
jg
xor
or
aam
or
imul
outsb
push
ret
test
fildl
bound
outsl
pop
loop
mov
fcmovne
and
lock
addr16
movb
iret
ljmp
test
cmp
xor
lods
fdivs
outsb
push
inc
jmp
jns
fmull
add
aad
stc
xor
mov
xor
dec
sti
cmp
jmp
sbb
push
adc
xchg
int3
xchg
enter
adc
and
or
faddp
mov
xor
sub
jg
mov
push
call
mov
adc
fnstsw
jp
sub
cmp
data16
ret
fs
scas
ljmp
xchg
xchg
aam
mov
push
fldcw
aam
sub
mov
ror
out
adc
bound
loopne
push
movsl
lahf
scas
pop
faddl
and
sbb
jl
sbb
ja
rcrl
sti
mov
push
push
lret
cmc
dec
repz
std
pusha
ljmp
fsubl
das
inc
inc
xchg
mov
jae
pusha
mov
mov
lcall
dec
je
pop
push
inc
mov
lods
add
into
jp
mov
and
pop
stos
popf
and
mov
add
mov
cmp
and
xchg
lods
aaa
leave
xor
ds
outsb
movsb
sub
mov
mov
cmp
xlat
sbb
dec
fdivrl
xor
jge
in
xchg
rorl
cmpsl
or
xor
jb
das
sbb
out
add
cmp
xor
inc
inc
cmp
push
repnz
sub
pushf
div
push
pop
cmp
mov
fstp
jge
pop
sbbb
dec
dec
add
fwait
push
mov
mov
or
xor
sub
cmp
mov
mov
ret
sub
imul
push
dec
sti
iret
inc
pop
jle
bound
in
xor
cmp
pop
insl
and
sbb
idivl
xchg
pop
cmp
mov
lahf
mov
push
mov
imull
addb
mov
inc
cltd
sub
repnz
mov
sub
mov
mov
push
lods
add
gs
daa
inc
jne
pop
mov
loop
xchg
mov
mov
jl
sub
mov
popf
inc
cmpsl
add
jge
call
mov
test
xor
sub
mov
fwait
repnz
hlt
sbb
aas
dec
in
lods
mov
or
repz
pop
sbb
or
into
add
xor
ret
int
mov
in
insl
push
jno
dec
pop
or
sub
loopne
call
outsb
lods
inc
jno
out
push
sbb
push
mov
es
cmp
sub
lcall
mulb
jne
dec
insl
out
das
push
cmp
rcll
js
cmp
inc
in
cld
xor
xor
movsb
mov
adc
mov
xor
xchg
cmp
and
xor
outsb
rsqrtps
icebp
scas
sti
pop
mov
pop
pop
mov
sub
mov
ljmp
outsb
mov
mov
movsb
divl
pop
bound
addr16
xor
arpl
fbld
aad
leave
xchg
pop
imul
push
mov
aaa
sahf
jae
pop
push
or
and
bound
leave
sub
stc
loopne
mov
adc
pop
adc
lods
inc
lock
mov
lods
cmc
mov
add
mov
das
mov
les
cwtl
pop
jbe
out
hlt
xor
fildll
stos
aad
mov
clc
xor
dec
dec
xchg
unpckhps
mov
jne
popa
xor
mov
mov
aam
repz
cmp
jb
mov
mov
subl
in
movsl
in
xor
cmc
hlt
cmpsl
lcall
test
jns
in
lods
loope
or
enter
cmp
push
adc
add
cmp
loopne
arpl
add
dec
loope
push
add
sbb
dec
jnp
lods
insb
dec
or
jns
sub
lea
dec
pop
mov
daa
mov
or
imul
sub
push
idivl
xchg
mov
pop
call
push
jecxz
xor
in
mov
insb
insb
mov
adc
enter
push
roll
mov
int
negb
das
adc
movsl
imul
lcall
inc
sub
out
push
pop
loopne
pop
dec
pop
ljmp
xor
push
std
popa
push
and
repnz
rcrl
jecxz
sbb
sbb
cmpl
nop
sbb
mov
fildl
lcall
js
push
jb
mov
int
jno
ds
mov
outsb
aad
repnz
aaa
and
mov
jge,pn
or
sbb
adc
adc
cli
bound
jmp
or
pop
fdivl
test
cmp
dec
pop
fcoms
enter
mov
sub
adc
push
lods
fmul
xor
mov
cs
hlt
nop
cmpsl
pop
nop
mov
ljmp
test
jnp
iret
jmp
add
adc
mov
outsb
mov
jno
xchg
xor
or
push
mov
lods
ja
inc
pushf
dec
rclb
xlat
mov
mov
xchg
adc
dec
scas
add
fldenv
aad
inc
ficoml
pop
out
push
fildl
rorl
pop
push
and
adc
shll
shrb
adc
pusha
call
jl
push
in
out
ds
jns
testl
outsl
mov
push
jl
pop
mov
or
push
stos
out
das
out
and
and
dec
test
push
pusha
clc
xlat
xor
ss
cmp
pop
js
pop
xor
jbe
cmp
jmp
scas
test
xor
fidivs
and
outsl
bound
stos
pop
punpckhwd
cmpsl
shrb
cmp
out
arpl
push
cmp
cmp
dec
arpl
push
sbb
scas
mov
daa
jbe
or
pop
test
push
adc
xor
xchg
addr16
and
add
mov
add
and
shl
inc
cmc
xchg
jmp
fwait
mov
js
pop
ret
ja
ljmp
andl
dec
sub
repz
sub
mov
out
sbb
fprem
xor
mov
outsb
lods
pop
or
add
rcrb
int3
or
mov
insl
rcl
jb
fstl
and
or
leave
mov
jae
sbb
lock
lcall
mov
fwait
push
jbe
push
ret
decb
scas
fdivs
pandn
dec
lods
lret
inc
mov
jp
mov
data16
xlat
int
test
push
mov
mov
pop
or
repnz
xlat
arpl
test
es
imul
shll
fwait
sbb
jmp
arpl
xchg
pop
xchg
loope
ss
xor
dec
jmp
xor
fldenv
rcrl
invd
pop
aas
mov
arpl
stos
cmp
jnp
ds
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
int
jbe
addl
add
scas
sub
mov
fs
sti
add
adc
pop
sahf
or
mov
pop
sbb
mov
dec
cmp
fcoml
nop
and
jp
lcall
and
mov
xchg
mov
sub
add
lret
pushf
pop
shrw
jl
cmpsl
aaa
je
shlb
js
and
jae
cmp
pop
inc
or
loope
sbb
adc
adc
std
stos
into
pop
inc
shlb
out
mov
dec
sub
mov
stc
jg
add
xchg
popa
jp
mov
push
iret
sbb
lock
rclb
scas
xchg
fnstenv
sbb
mov
dec
mov
insl
and
loop
sub
dec
daa
popf
sarb
mov
adc
pop
adc
das
test
push
mov
mov
cmp
mov
cld
mov
mov
adc
xor
js
test
lds
and
adcb
xor
lret
inc
daa
repnz
mov
xchg
scas
mov
pop
push
ret
dec
sti
test
leave
mov
inc
loop
jecxz
inc
dec
pusha
test
shrb
sbb
jb
jge
and
inc
adc
out
add
int3
loopne
and
jbe
jmp
lret
cld
xlat
addr16
mov
fmull
das
shl
mov
mov
jecxz
loop
and
mov
add
sahf
stos
rol
test
sbb
and
xor
jns
loope
adc
and
mov
aam
cmp
cmpsb
mov
xlat
ja
lret
call
xchg
sub
pop
cltd
push
hlt
jnp
dec
inc
xchg
inc
inc
cmpsl
mov
pop
aad
jae
dec
and
leave
push
das
lds
pusha
pop
xor
jg
sub
out
loopne
mov
fmuls
sub
mov
aad
insl
std
xor
sahf
dec
test
lock
fistps
fstl
movl
mov
sub
test
cwtl
sub
das
jb
fmuls
inc
dec
ljmp
ficoml
push
inc
subl
bound
jbe
pop
mov
add
mov
push
rcrl
aas
mov
dec
xchg
jne
lret
or
ret
mov
inc
mov
jge
fidivl
pop
add
mov
scas
aaa
repnz
ficoms
pop
es
mov
clc
loopne
and
and
dec
push
ss
mov
les
add
adc
mov
push
data16
stos
nop
lcall
stos
inc
jo
xor
test
mov
rorb
mov
push
je
sbb
jno
sbb
mov
cltd
mov
jle
push
mov
xchg
test
adcb
fldcw
inc
addr16
aas
aas
in
sbb
xchg
lods
sub
pop
insb
add
dec
xchg
jl
ret
mov
sub
insb
inc
mov
pop
mov
adcl
jbe
fildl
and
jg
lods
mov
lahf
std
pop
pop
push
test
pop
jns
mov
pop
push
xor
mov
leave
dec
aaa
inc
nop
pop
push
jns
sub
sub
cmp
lahf
test
or
lock
fldcw
scas
daa
outsb
mov
aad
pop
ficompl
lods
or
shl
ds
pop
mov
pop
sbb
es
cmp
fistl
rcr
sbb
jnp
int3
push
test
inc
call
sbb
aad
jo
and
jg
pop
mov
outsb
or
enter
shr
popf
sub
fisubl
xor
iret
add
imul
or
jg
fnstcw
ret
loop
cmp
mov
pop
mov
incb
mov
test
in
rcll
ret
adc
dec
push
fdiv
xor
fsts
int
pop
insl
mov
shlb
inc
mov
ds
or
mov
cwtl
popf
inc
xchg
xchg
mov
adc
push
subb
ficompl
xor
or
cld
lcall
xchg
fsubr
sub
cmp
adc
mov
xchg
inc
and
mov
in
sbb
sbb
push
push
sbb
push
outsl
xor
push
push
or
out
dec
xchg
mov
sub
repnz
fnstsw
movsl
iret
test
jne
xchg
ss
add
dec
fnstcw
mov
xchg
movups
dec
pop
stc
inc
vmovdqu
adc
enter
add
divl
mov
aaa
repz
xor
test
mov
jo
scas
jle
je
clc
cmp
or
dec
and
int
adc
sub
sub
sub
pop
rorb
leave
jl
dec
cld
jno
dec
or
aad
add
cld
jno
cwtl
inc
inc
cld
xchg
aad
in
dec
dec
dec
bnd
mov
fcomps
push
xchg
pandn
mov
jp
mov
out
jmp
or
cmp
jnp
sub
jp
jge
mov
add
lahf
mov
ja
mov
inc
lret
jb
sahf
push
and
roll
dec
and
push
pop
int
stc
and
xlat
jbe
dec
mov
mov
add
ret
hlt
jbe
sbb
aaa
ficoms
jg
lret
dec
dec
jbe
bound
cmpsl
push
cmc
repz
loop
add
inc
das
adc
and
das
jl
push
xchg
cmp
enter
aaa
imul
lea
pop
jecxz
insb
in
pop
aaa
pusha
mov
les
jae
push
dec
dec
arpl
ret
pop
sbb
xchg
ss
sub
dec
popa
lea
add
xchg
les
cmp
jp
cltd
pop
mov
movsb
adc
lds
xchg
int3
jecxz
jnp
fcmovb
mov
test
fistl
or
pushf
popa
movsl
push
popa
je
popa
movsl
mov
repz
mov
xlat
icebp
adc
inc
inc
repnz
insl
sub
jno
jae
pop
cmp
data16
push
sbb
sub
add
mov
fmull
ljmp
fwait
dec
mov
stos
stc
subb
fimuls
clc
push
mov
lock
mov
add
pop
sbb
into
jae
jb
push
cli
movsb
shlb
push
jecxz
xchg
inc
inc
clc
test
fabs
jnp
sub
adc
repz
cmp
stos
fstl
dec
shl
jmp
rcr
inc
in
adc
rcrl
loop
js
jns
and
add
sub
dec
xlat
dec
loop
push
fwait
mov
sub
xchg
or
js
pop
ja
mov
cwtl
repnz
dec
cmp
mov
nop
adc
dec
imul
out
xor
cmpsl
test
push
mov
push
rcrl
dec
outsb
pop
xchg
movsb
or
cwtl
dec
das
pop
push
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
mov
js
jbe
jno
add
test
push
sub
jmp
int3
push
cs
in
inc
icebp
mov
fwait
mov
insb
popf
outsl
xchg
adc
test
sub
cli
scas
mov
or
pop
mull
fwait
je
fcompl
sub
xchg
sahf
pop
jb
mov
add
jl
pop
add
jl
pop
out
test
loopne
pop
fdivrl
aad
lods
fcomi
aaa
hlt
or
or
ljmp
cwtl
mov
sub
sbb
shrl
jbe
sbb
pushf
fsub
push
mov
negb
and
pop
cld
inc
mov
clc
pop
icebp
scas
pusha
icebp
sarl
out
stos
mov
fistl
lret
sub
fidivrs
fs
enter
scas
out
or
mov
rorb
pop
push
jb
adcb
mov
cmpsl
pop
push
sarb
into
mov
insb
mov
sub
or
sbb
add
pop
dec
dec
sarl
jmp
test
xor
clc
out
mov
inc
xorb
or
int
test
ret
jae
ror
push
jno
push
push
jb
shlb
in
inc
ret
push
push
adc
rcrl
addr16
testl
sub
test
push
inc
jge
dec
add
pop
and
insb
iret
mov
ds
cmp
push
push
nop
push
mov
dec
or
dec
xchg
hlt
sbb
dec
inc
dec
mov
lahf
in
inc
imul
add
jbe
hlt
or
icebp
push
or
mov
push
fstl
push
hlt
insb
scas
fsubrs
lock
xor
sahf
mov
leave
scas
lret
int
cmp
xchg
or
in
std
mov
sub
jne
out
or
or
xchg
outsl
icebp
xchg
and
test
or
test
lea
shll
or
dec
mov
cmp
out
pushf
mov
fcompl
xor
jecxz
ja
ret
cmp
fcomi
sbb
shlb
mov
cmc
pushl
jecxz
sarb
int3
popf
fwait
es
mov
imul
clc
adc
dec
rcll
movsb
and
push
mov
icebp
xor
or
out
mov
pop
inc
xor
ret
adc
add
pop
rolb
mov
jo
sarl
xor
pop
lret
xorl
icebp
xor
fmul
rcrl
adc
pop
mov
add
cs
mov
cmp
lret
lods
push
push
sub
mov
and
loopne
and
rorb
sbb
pop
mov
sub
stc
pusha
xor
je
add
insl
sub
mov
aas
push
lock
push
jge
ds
dec
adc
sub
clc
fs
jl
adc
add
and
xor
mov
cld
js
cmp
lods
sub
mov
ds
in
insl
xchg
clc
jbe
mov
hlt
jnp
fldl
lcall
fbld
or
mov
movsl
stos
and
push
in
pop
sahf
pop
xchg
ljmp
dec
mov
lahf
imul
ss
mov
popf
rorl
js
enter
test
and
rcrl
mov
and
outsb
xchg
inc
mov
and
sub
mov
imul
cmp
add
cmp
aaa
xchg
lea
mov
mov
sbb
sti
or
lcall
loop
data16
les
fwait
push
daa
jae
das
inc
sti
outsl
mov
daa
dec
gs
fwait
enter
xchg
in
xor
pop
add
stos
inc
xadd
add
stc
add
xor
mov
cmp
rcr
int3
and
daa
push
add
jbe
ret
push
inc
xor
scas
out
stos
pop
mov
add
addr16
mov
cs
incl
xor
pop
xchg
roll
lret
sar
xlat
cmp
call
adc
mov
and
fisubl
jne
imul
sbb
insl
rolb
inc
pop
cmpsb
xor
fdivrs
inc
push
cli
mov
test
or
out
adc
and
add
push
or
es
cmp
scas
mov
adc
fimuls
mov
cmp
push
fcmovnbe
icebp
jbe
sti
icebp
push
sub
rcll
rcrb
or
ret
pop
add
push
jmp
pop
or
sti
inc
sub
decb
adc
aad
adc
add
mov
dec
push
lret
dec
add
fmul
xchg
scas
dec
sub
hlt
adc
sub
inc
adc
out
aad
cld
sbb
inc
and
sbb
cli
pushf
outsl
repz
dec
xor
fisttpl
or
jns
fxch
rorl
fcmovnu
je
cmp
popf
mov
xchg
sahf
jg
fmull
nop
mov
jnp
dec
sahf
test
push
scas
bound
jge
insl
test
mov
mov
addr16
inc
cwtl
mov
mov
inc
les
out
inc
sbb
daa
mov
push
nop
sbb
mov
adc
dec
dec
fisubrs
fildll
sub
cld
cmp
ds
ret
test
adc
ljmp
xor
in
mov
or
lahf
jns
xor
insl
xor
push
inc
sbb
repnz
fs
xchg
push
jbe
pop
cmpsl
inc
sub
cmpsb
inc
adc
push
mov
roll
or
es
repz
inc
dec
mov
adc
push
insl
xchg
sub
addr16
js
mov
dec
rep
or
jno,pn
mov
into
in
imul
pop
mov
jge
inc
movsb
sbb
repz
or
dec
pop
cmp
js
jne
xlat
adc
or
xlat
test
jl
fiaddl
jp
imul
insb
imul
fbstp
out
divl
int3
mov
cmpsl
jge
push
jl
sub
nop
mov
stos
hlt
test
mov
dec
insl
sub
mov
adc
sub
popa
inc
movsl
pop
jge
sub
mov
mov
and
test
fmulp
xchg
xchg
pandn
xchg
jge
jmp
pop
adc
mov
enter
dec
negb
js
mov
ljmp
aaa
and
xchg
add
popa
arpl
pop
cmp
jmp
and
arpl
mov
mov
xor
mov
nop
xchg
dec
sub
fisttpll
add
mov
lahf
out
popf
jp
and
lods
cld
mov
mov
fwait
inc
xchg
mov
mov
ficomps
mov
fistl
xchg
mov
loop
leave
sub
xor
push
outsb
lret
mov
mov
cld
push
shr
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
sub
in
xchg
adc
addl
cmp
rcll
and
xor
or
cmpsb
jbe
fcompl
mov
int
adc
mov
imul
xchg
imul
icebp
pop
lock
rcrl
jmp
jne
mov
push
push
inc
xchg
orb
ret
xchg
mov
sbb
mov
cmp
das
sub
add
jnp
ret
push
sbb
add
enter
testl
cmpb
and
and
adc
cmp
fcmovb
inc
and
out
ja
ljmp
dec
jmp
xchg
jmp
icebp
data16
push
jmp
lods
int3
push
icebp
mov
push
ret
movsl
decb
sub
mov
lret
cmpsl
dec
lcall
mov
in
fdivrl
iret
mov
aam
outsl
push
leave
lret
ret
sar
push
loopne
xlat
cmpb
push
push
and
ljmp
popf
fs
aam
sbb
sub
hlt
gs
adc
mov
jno
xor
lea
add
cmpsl
int
mov
fbld
aas
pop
sub
rolb
sub
aad
into
int
mov
pop
push
and
sti
frstor
dec
stc
push
movsb
insb
out
adcw
adc
jns
ja
das
loopne
mov
xor
mov
push
in
in
dec
or
pusha
mov
imul
divb
lret
and
inc
jnp
pop
cld
test
pop
int
je
cmp
iret
xchg
xor
popa
out
lret
aam
or
xchg
dec
idivl
shr
loopne
mov
leave
inc
sahf
sarl
push
mov
push
cmp
stos
pushf
sbb
cmp
icebp
gs
mov
jmp
inc
inc
mov
push
or
cld
in
mov
aam
and
test
xchg
xor
xchg
sti
pop
mov
mov
imull
xchg
or
test
dec
stos
mov
data16
es
mov
push
fists
mov
repz
cmp
hlt
mov
mov
outsl
mov
subb
cmp
test
cmp
addr16
sbbb
sub
push
adc
lret
insb
lcall
or
ret
mov
adc
cmpsl
rclb
push
mov
sbb
addr16
jae
cmpb
jns
pop
push
jnp
jne
and
lock
test
adc
pop
pop
mov
int
jae
sbb
fmuls
test
mov
aas
sahf
movl
pop
adc
or
ret
loop
cli
add
es
movsl
adc
lods
orb
mov
je
adc
dec
aam
sbb
jecxz
es
jns
xchg
mov
pop
jl
or
negb
movsl
popf
stos
mov
out
insb
mov
pop
repnz
ljmp
cmp
repz
mov
and
lret
dec
pop
arpl
sbb
ret
subb
mov
pop
jne
call
fistpll
enter
fwait
shrl
sbb
pop
clc
adc
dec
subl
int
push
cmpsl
jge
xor
cmpsb
jp
and
mov
or
inc
rol
and
in
ret
test
push
pop
scas
dec
xchg
adc
es
mov
insb
imul
sbb
jg
jnp
mov
xchg
push
jl
mov
ror
mov
int3
ss
add
add
or
mov
sbb
jns
stos
and
test
enter
es
add
andb
arpl
xor
fstp
clc
aad
mov
mov
or
aas
jbe
ljmp
and
push
xchg
jg
pop
push
cmp
push
sbb
clc
into
stc
mov
into
pop
dec
pop
dec
cmp
push
mov
int3
test
dec
sbb
push
jp
dec
jae
repz
movl
xor
das
inc
aam
mov
cmpsb
ljmp
stc
cmp
push
inc
and
rcll
and
xor
mov
xchg
out
in
test
jmp
inc
mov
mov
xor
sahf
shlb
xor
enter
sarb
call
cmpsl
mov
mov
and
adc
adc
push
frstor
push
out
ja
mov
insl
pop
test
add
xlat
dec
and
dec
mov
jns
int
sbb
mov
insb
fwait
out
test
fwait
push
mov
pop
lcall
adc
xchg
imul
in
jne
shrb
ds
stos
mov
ds
ljmp
popa
cmpl
out
out
push
xchg
mov
lcall
in
jo
mov
and
and
adc
sub
add
arpl
mov
adc
add
fs
mov
cmp
sbb
enter
inc
sub
hlt
push
lret
pop
pusha
xchg
jb
not
cld
xchg
int3
insl
data16
fisttpll
sarl
xchg
in
adc
mov
xchg
aam
mov
andb
call
and
mov
push
sbb
mov
pop
sub
or
jb
jbe
lret
dec
cmp
fstl
lcall
cmp
scas
insb
xchg
mov
iret
gs
jbe
gs
cmpsb
mov
negb
fcoml
push
mov
mov
mov
add
mov
push
push
stos
lahf
cli
aad
bnd
add
in
inc
pusha
jae
cltd
mov
lds
sbb
xor
mov
lret
fstl
lds
sbb
mov
inc
add
mov
sahf
add
xlat
sub
adc
xchg
stos
sti
negl
add
lods
icebp
notl
inc
sbb
mov
jne
dec
sbb
roll
ljmp
mov
adc
cmp
repz
and
jecxz
jge
xchg
or
lods
sub
out
and
hlt
loopne
mov
sub
dec
xchg
jnp
lret
mov
xor
inc
xor
in
fwait
sub
aam
lods
jp
add
or
mov
sub
addr16
dec
imul
or
add
sub
jp
ljmp
jle
das
jmp
fidivs
jg
jle
push
jmp
dec
subb
cmc
stc
das
imul
jge
inc
addl
mov
jne
add
jbe
sub
test
enter
sbb
cmp
jg
test
or
call
or
push
xor
mov
movsl
sub
repnz
sbb
pop
inc
incb
pop
jo
mov
xchg
repz
xor
push
rcr
mov
mov
jns
add
and
mov
mov
pop
cltd
xchg
xor
pop
fldt
dec
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
jl
movb
scas
insl
sahf
cltd
push
push
lcall
clc
std
inc
mov
dec
inc
fmull
mov
mov
add
xlat
sti
and
fisubrs
loopne
pusha
mov
ja
inc
sbb
loop
jae
bound
inc
push
lret
xchg
mov
nop
push
call
pop
pop
xchg
jns
xor
add
dec
xor
push
mov
pop
mov
ret
clc
mov
xor
aaa
sub
jb
add
sub
call
fisubl
nop
mov
xchg
iret
xchg
lcall
sbb
gs
fisttpll
xlat
lods
mov
add
cs
add
imul
add
in
aad
add
movsb
mov
adc
pop
xchg
fmul
jo
sbbl
sti
mov
loopne
test
scas
sub
lods
or
dec
stc
ret
ja
mov
xchg
out
xorl
andb
in
cmp
push
push
adc
loopne
push
cmpsb
dec
xor
add
std
add
mov
adc
movsl
out
mov
lcall
mov
lods
das
mov
sub
cmpsb
ljmp
lea
lock
es
fstpl
cmp
movsl
repz
in
fucom
nop
or
roll
mov
daa
pop
mov
dec
scas
cltd
idivb
call
xchg
mov
imul
dec
push
mov
imul
jmp
std
or
push
sbb
mov
jbe
push
cmpl
imul
loopne
dec
dec
inc
loop
xchg
pusha
dec
test
jo
imul
movsl
add
movsb
out
cmc
fsub
js
cmp
pop
xor
jnp
sbb
pushf
sub
sbb
cs
cmp
test
inc
and
dec
sbb
inc
int3
dec
fsubr
jb
out
lds
and
sti
mov
pop
or
dec
aaa
test
stos
popa
aam
sub
jge
ja
inc
shll
call
push
loopne
push
call
inc
loop
mov
mov
shll
add
stos
movsb
xor
je
jbe
push
cmp
sub
adc
outsl
insb
pusha
int3
or
dec
sub
sbb
dec
imul
adc
into
or
sbb
or
scas
in
cmc
mov
cmc
stc
fstps
or
xor
call
out
mov
cmc
xchg
dec
cmovb
jns
dec
jecxz
mov
or
ja
icebp
jg
sub
idiv
cli
push
fists
hlt
jge
sub
call
cmc
and
icebp
xchg
cmp
rorb
fisubl
mov
lcall
sbb
adc
sub
imul
in
fdivl
ds
inc
xchg
mov
jbe
mov
js
xor
mov
fildl
gs
pop
vminsd
xor
push
jg
lahf
call
aas
fdivr
ss
out
lahf
xchg
clc
inc
mov
aas
jno
sub
xchg
mov
push
xchg
popa
adc
mov
ds
insb
dec
xchg
stos
cmp
mov
in
sbb
mov
fsubs
push
xchg
data16
cwtl
push
mov
inc
dec
lret
xor
fwait
mov
fimuls
insb
bnd
scas
add
nop
xchg
push
cmpsl
out
xor
sbb
scas
or
mov
aas
mov
fnsave
mov
cld
dec
xlat
lock
gs
call
pop
inc
sub
popl
ret
xchg
fsub
add
cs
out
stos
icebp
xor
or
stc
pop
cmp
sub
popf
cmp
incb
mov
lods
lock
or
jmp
data16
pop
push
sub
movsb
je
test
fists
inc
into
jb
cltd
mov
aas
and
jnp
dec
pop
adc
call
mov
inc
dec
or
cmp
stos
cmc
jns
cld
xchg
xor
adc
jmp
test
jl
add
jb
inc
imul
xchg
pop
sub
loope
shll
bound
mov
ret
xchg
xchg
repz
lea
or
or
daa
mov
xor
jne
in
pop
push
jl
cmp
push
iret
jl
push
ficomps
stos
xorb
cli
or
cmp
int3
rorl
mov
mul
xor
test
mov
mov
pop
sub
or
sbb
outsb
sbb
xchg
xor
ret
jge
rolb
push
adc
call
fildl
fs
push
out
push
ljmp
pop
pop
add
jp
ret
jo
popf
pushfw
stos
in
jmp
xchg
push
pop
cmp
inc
loope
fldcw
je
push
adcl
ja
lods
dec
ficompl
test
cmpsl
add
arpl
add
xchg
daa
fisubrl
xor
mov
mov
inc
fisubrl
xor
ror
inc
mov
fwait
hlt
ror
fs
cmp
ficompl
jnp
int3
nop
dec
inc
push
cld
mov
push
jmp
icebp
cli
fadds
and
mov
ret
jg
out
pop
and
xchg
pop
call
ds
ds
imul
xchg
mov
xchg
mov
imul
mov
dec
xor
xor
push
xor
adc
movsl
loop
cmp
ret
cwtl
shrl
mov
cs
jno
les
xchg
repz
sub
bound
jg
inc
cltd
pop
movsl
iret
rorb
cmc
mov
roll
stc
shr
fstps
fidivs
jnp
push
in
dec
sahf
in
out
sub
scas
out
pusha
mov
jbe
sub
sahf
or
outsb
mov
pop
loop
repnz
cmp
xchg
out
call
scas
xor
jbe
lret
sti
sbb
fucom
dec
jnp
pop
lcall
lret
cmpsb
cmp
shrb
sbb
pop
pop
lahf
sbb
std
outsl
ljmp
sbb
adc
push
into
adc
mov
cwtl
adc
lock
mov
add
cmpsl
movsl
cwtl
or
pop
xor
fsub
out
xchg
lods
popa
inc
aas
mov
sahf
add
dec
int
call
cmp
arpl
and
fwait
mov
mov
pop
test
inc
addr16
cmp
shl
stos
daa
jecxz
dec
sahf
jo
push
sub
je
arpl
adc
sbb
pop
pop
leave
mov
pop
push
cmp
jbe
incb
testb
cmp
sub
ja
mov
mov
pop
mov
mov
lcall
sub
das
bound
shrb
pop
cli
cmp
jecxz
mov
push
ja
fcoml
jbe
mov
mov
and
lds
push
andl
jl
in
test
testl
push
stos
lahf
leave
mov
int3
mov
dec
pop
adc
adc
nop
fs
dec
jnp,pn
daa
jae
decl
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
mov
popf
mov
push
add
cwtl
fisttpl
sub
in
sbb
popf
subb
push
or
xchg
hlt
ret
call
mov
sub
stos
push
jbe
sbb
mov
push
pop
cmp
mov
ret
fs
jle
mov
cld
xchg
loope
pusha
test
shll
addr16
xchg
mov
mov
pop
adc
data16
sbb
rcll
adc
cmp
sub
sub
addr16
jne
jbe
sub
push
and
clc
xchg
pop
imul
fwait
push
add
cmpsl
push
and
add
out
inc
prefetch
inc
rol
lcall
xchg
inc
pop
das
adc
scas
xadd
andl
adc
out
cmp
bound
aas
jmp
push
sbb
inc
aas
adc
fcomip
xchg
sarl
inc
lret
push
movl
je
lcall
sbb
cmpsb
aad
add
lds
jecxz
inc
mov
push
lods
das
lods
adc
xchg
dec
fs
dec
sbb
jnp
dec
cmpsb
iret
call
pop
mov
jb
int3
shll
jp
mov
xor
or
adcl
sub
dec
cli
sub
insb
lret
adc
mov
rcl
mov
outsb
and
int
popf
sub
lret
sub
inc
add
andb
mov
mov
mov
push
pop
movsb
jle
jg
sbb
les
mov
and
xchg
push
xchg
idivb
lcall
xchg
jecxz
outsb
push
es
aaa
add
cmpl
lahf
in
push
sbb
xchg
mov
lods
jmp
icebp
xor
enter
movsl
imul
call
mov
divl
inc
out
jb
das
orb
add
nop
into
dec
mov
or
pop
add
sbb
sub
xor
inc
fcoms
out
xor
scas
sub
subb
test
ret
jb
js
test
out
add
inc
add
in
ja
divb
push
add
mov
mov
jmp
movsl
icebp
je
push
out
pop
mov
js
and
das
sbb
xor
lret
test
sbb
pop
imul
push
popw
hlt
jl
into
and
push
enter
mov
push
outsb
xchg
mov
fwait
sub
aaa
mov
sbb
push
mov
cmp
outsl
stc
in
pusha
roll
adc
push
push
xlat
push
sbb
sbb
inc
dec
fcmovnbe
movsb
dec
xor
mov
sub
jp
mov
mov
aaa
sbb
cmp
jmp
ret
dec
decb
adc
sbb
add
cwtl
stos
inc
jmp
addr16
cmpps
inc
push
add
out
push
lds
lock
add
xorl
popf
dec
scas
add
xor
jae
inc
jecxz
mov
inc
or
add
lods
mov
push
aas
pop
ss
and
sbb
enter
push
insb
or
ret
pop
js
stos
ror
jbe
inc
xchg
jne
mov
xchg
insb
test
ljmp
push
es
aas
call
test
loope
jbe
in
cmp
xlat
enter
daa
pop
or
mov
cmpsb
add
mov
and
test
mov
jmp
mov
dec
and
mov
mov
pushf
jnp
in
iret
movsb
pop
gs
sbb
lret
fsub
jnp
sub
mov
mov
enter
imul
int
mov
cmp
lret
push
in
push
pop
push
inc
pusha
xor
in
inc
mov
and
push
daa
inc
xlat
sbb
pop
mov
xchg
pusha
cmp
mov
pusha
jns
and
repz
cltd
aam
popa
push
pop
jmp
sbb
dec
int3
cmpl
mov
loopne
rolb
imul
dec
inc
inc
inc
clc
adc
add
push
movsb
push
add
and
sub
popf
shlb
mov
sbb
mov
mov
jl
xchg
add
aas
mov
mulb
mov
dec
jge
addl
fsubrs
push
pop
jne
xchg
sbb
push
or
pop
mov
sbb
fwait
pop
and
sub
scas
inc
imul
cld
jl
fldt
dec
xchg
inc
cli
ret
pop
test
dec
pop
push
mov
fistpll
and
cmp
stc
and
inc
mov
and
xor
es
cmp
fstpl
adc
dec
lods
push
jbe
inc
mov
mov
jl
mov
jge
mov
pop
pop
mov
pusha
mov
repz
mov
mov
jae
xor
lock
in
xor
aad
shll
pop
pop
stc
test
rolb
ja
loope
inc
pusha
sub
outsl
mov
out
lret
bound
xchg
cmp
sub
xchg
fisttpll
fs
test
dec
xor
addb
dec
mov
mov
adc
test
mov
add
std
out
add
out
mov
dec
and
out
std
adc
adc
je
push
daa
mov
push
faddp
outsb
int3
addb
mov
inc
fwait
xchg
xlat
pushf
jp
inc
inc
push
dec
and
pop
mov
sub
pop
nop
adc
add
pop
jmp
add
mov
imul
lds
lods
hlt
popa
add
sahf
test
ret
fstpt
movsb
imul
test
popa
cmp
fsubs
jb
pop
and
test
inc
mov
mov
fwait
lds
shlb
outsl
cltd
dec
and
negb
fcompl
shll
sub
and
mov
inc
sub
push
inc
pushf
mov
sub
mov
dec
rorb
lods
push
xchg
and
aam
inc
cwtl
jecxz
xor
push
ret
and
out
pushf
push
or
or
sub
sbb
enter
jae
bound
adc
sub
mov
adc
sbb
rolb
icebp
mov
xor
repnz
sub
inc
xor
inc
test
push
ss
sbb
and
cmpsl
movsl
aas
loop
xor
pop
adc
mov
int
inc
subb
movsb
jnp
data16
push
xchg
jne
dec
cmpl
mov
xor
out
ss
mov
adc
aad
xor
xor
mov
inc
xor
ret
shrl
imul
fcoms
mov
lret
dec
xchg
lahf
sub
out
xchg
ret
notl
rcrb
gs
push
repnz
sbb
pop
stc
jge
pop
aaa
xchg
dec
cltd
enter
rcll
pusha
repz
add
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
xor
push
loope
adc
addl
jne
sbb
and
mov
mov
pop
mov
push
sub
add
or
int
pop
mov
lret
dec
movsl
les
cmp
imul
mov
loopne
mov
pop
test
and
sbb
xchg
inc
pop
insl
mov
movsb
out
mov
andb
cmc
xor
stc
imul
and
fs
mov
jp
repz
rorb
leave
lcall
push
cmpsb
sbb
xchg
cmpsl
dec
jo
out
out
add
lcall
inc
adc
orl
ret
scas
push
popa
clc
add
in
andb
stc
iret
mov
xor
mov
std
push
loope
sub
xchg
mov
xchg
in
jp
iret
push
or
fiadds
test
jo
arpl
in
lods
cs
adc
scas
inc
out
inc
inc
insb
cli
lods
stos
imul
cmp
prefetch
or
xor
inc
push
hlt
lock
testb
adc
mov
mov
cs
or
dec
test
fcmovnbe
fwait
pop
ljmp
xchg
cmp
in
popf
sub
inc
sub
scas
adc
in
jmp
stc
mov
fwait
dec
mov
inc
push
sbbl
lods
sub
pushf
pop
nop
aas
pcmpeqd
cmp
imul
ljmp
mov
je
xchg
xor
lock
xchg
outsb
imul
mov
mov
cmp
rcl
mov
push
pop
xchg
and
mov
mov
std
add
hlt
shrl
imul
enter
into
push
cmpsb
sbb
cmpsb
push
mov
lea
inc
mov
cmp
inc
inc
xlat
flds
mov
or
inc
insb
sbb
in
add
pop
xchg
in
pop
shrb
clc
sub
push
mov
or
inc
dec
mov
stos
mov
and
add
xchg
sahf
arpl
out
std
scas
add
outsl
mov
mov
mov
add
mov
dec
mov
insl
sub
into
xor
ret
scas
sarl
or
push
dec
fimuls
push
test
mov
xchg
mov
dec
enter
js
mov
js
push
rcr
push
gs
mov
bound
data16
sbb
jbe
int3
and
lods
rcrb
popa
imul
es
mov
cmp
lret
xor
enter
inc
fadds
inc
adc
lcall
mov
mov
js
mov
xchg
inc
adc
xchg
notb
in
jo
notl
push
into
sbb
mov
mov
cmpsb
jle
cmp
lcall
jg
mov
cmp
cmpsl
mov
fnstcw
mov
jmp
jl
es
push
xor
sbb
insb
imul
mov
fucom
mov
andb
jle
addr16
fdivrs
adc
cmp
popf
or
out
mov
jnp
cmpsl
pop
stc
in
aas
sub
xor
mov
jecxz
and
popa
ljmp
mov
jmp
cs
pop
mov
sub
push
adc
mov
or
mov
sbb
push
pop
cmp
loop
mov
cmp
sets
adc
test
jnp
rolb
rolb
mov
and
aaa
scas
test
mov
xor
push
and
pushf
fsub
push
cmp
mov
and
dec
packsswb
mov
loope
mov
fsubrs
js
into
mov
sub
aam
cmp
dec
hlt
xlat
shr
and
mov
in
and
test
adc
in
js,pn
mov
bound
lret
push
xlat
cmc
mov
aas
test
jecxz
xor
mov
push
push
push
push
bound
xlat
pop
xor
push
ret
pop
xlat
decl
call
sub
sbb
scas
movsb
lods
mov
sub
in
lock
fmuls
inc
ds
add
jp
mov
sub
out
cmpb
sub
dec
ret
jnp
cld
lcall
sbb
add
lods
cmp
push
lea
xor
xor
mov
loope
cmpsl
scas
loope
mov
add
sub
add
jnp
imul
js
fcoml
cmp
and
iret
cwtl
xchg
std
js
mov
mov
rcrl
mov
or
mov
pusha
test
add
fmuls
loope
rolb
enter
push
fistps
dec
aad
ljmp
fdiv
xor
mov
inc
out
cmc
mov
insl
push
imul
add
mov
stos
push
and
mov
ret
add
enter
scas
repz
popf
add
xchg
inc
mov
mov
pop
aaa
les
xchg
stos
jne
pop
cmc
and
daa
xorb
pop
test
ds
mov
mov
in
jecxz
jp
push
xchg
and
insl
jnp
mov
dec
mov
fs
imul
dec
incb
insl
mov
sbb
xchg
pop
call
cmp
jbe
adc
rol
in
shlb
dec
pop
adc
ja
lahf
and
fdivrl
mov
mov
cmp
aaa
add
jle
rcrl
outsb
stc
xchg
push
dec
mov
stos
fwait
mov
jno
pop
insb
mov
arpl
sub
jns
cmpb
jmp
pop
mov
mov
push
pop
rol
mov
xorl
mov
adc
lods
xor
jns
push
jne
aad
bnd
test
in
xor
andb
sti
lods
decl
hlt
mov
in
cli
xchg
lods
or
cld
popf
lahf
popf
iret
pop
aaa
outsb
xchg
leave
test
sbb
mov
movsl
jecxz
inc
clc
loopne
jns
scas
or
add
sarl
cwtl
mov
mov
and
inc
leave
enter
jmp
jmp
test
jae
mov
clc
sub
scas
dec
push
jge
int
jo
cmc
lea
mov
mov
outsl
iret
pop
jp
jae
ljmp
fsts
dec
ret
cmp
scas
xor
out
bound
and
outsl
jo
pop
cmp
aas
push
jae
jns
icebp
jae
adcl
bnd
scas
xlat
xlat
pushf
outsl
in
inc
stos
lock
sbbl
inc
jbe
jnp
xchg
jecxz
mov
repnz
xchg
mov
insb
mov
or
data16
loope
int
mov
pop
pop
loopne
jne
lds
decb
in
push
or
push
sub
dec
cld
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
test
inc
pop
add
push
cmp
pop
cltd
cli
fimull
lcall
rcll
mov
sbb
inc
sub
mov
sub
je
mov
cmpsl
insb
mov
test
xor
pop
mov
sbb
dec
jb
mov
or
cld
roll
sub
add
scas
cli
push
shrb
loop
loop
test
mov
loopne
sub
xchg
call
xchg
pop
addr16
mov
pop
out
push
dec
ret
insl
pop
mov
mov
inc
cmp
add
sub
push
fcoml
add
or
jp
and
mull
sahf
sbb
mov
cmp
jne
cmp
or
sub
jb
cmp
push
cmp
mov
jnp
popf
das
and
mov
sbb
loop
icebp
dec
ret
jecxz
push
sbb
inc
fcom
push
ficoms
pop
add
jmp
mov
mov
in
in
andl
incl
xchg
xor
ret
xor
xchg
mov
jns
lods
out
mov
cmpsb
jbe
setge
cmpb
xorl
pusha
shl
push
and
mov
xor
xchg
cltd
dec
pop
aaa
add
push
je
lcall
aas
fwait
and
mov
lahf
sahf
pop
push
adc
aas
std
and
sub
subb
xchg
in
repz
jne
insb
xor
adc
add
mov
adc
dec
push
fbld
xor
insl
or
lcall
xor
test
imull
adc
clc
jb
pop
mov
insl
hlt
sub
xor
mov
sub
std
imul
jo
dec
test
mov
pushf
mov
sub
loop
xor
test
enter
lcall
and
call
loopne
push
lods
arpl
clc
mov
daa
cwtl
out
pop
jno
dec
or
pop
xor
cld
mov
sub
sti
and
pop
and
js
fs
popf
dec
popf
insb
push
repnz
cli
mov
imul
cmp
lea
orl
mov
cmpsl
push
fwait
ja
and
lock
sti
bound
mov
push
jo
cmpsl
xor
lret
daa
data16
test
jp
cld
and
cmp
cltd
bound
dec
mov
or
pusha
mov
mov
pop
jns
sub
loope
insb
sbb
lea
les
fsqrt
jle
ret
add
call
dec
sbb
insb
sbb
sub
and
inc
out
ret
mov
sbb
fs
sbb
mov
push
sbb
aaa
sbb
cmp
stos
inc
sbb
je
pop
orl
sbb
jno
fsubs
xchg
or
mov
dec
je
outsl
loopne
out
add
cmp
pop
in
and
jle
sbb
add
sbb
ds
and
mov
cmp
inc
push
mov
xor
dec
lret
mov
sub
int
loope
mov
mov
mov
mov
ret
fsubs
adc
jno
adc
pop
sbb
pop
lock
add
jecxz
and
fwait
mov
aam
mov
adc
cld
dec
inc
insl
aam
inc
lret
add
cwtl
add
nop
outsb
ja
sbb
lds
mov
rcll
loop
push
fists
in
das
sub
add
shll
int3
test
popa
imull
js
inc
cmp
test
cli
leave
into
jnp
push
mov
xor
sbb
jmp
xchg
test
xor
adc
cmp
mov
inc
xor
mov
lret
jg
in
cmpsb
leave
not
and
mov
daa
jno
mov
jns
push
or
inc
sub
pop
and
push
mov
popf
jnp
lea
imul
mov
ret
sbb
daa
sub
stc
pop
adc
cltd
xchg
fldcw
cmp
fdivl
adc
and
inc
add
sbb
jae
push
pop
sbb
mov
sbb
add
cmp
push
or
fxch
or
ret
jo
xchg
lcall
call
cmp
xchg
mov
and
mov
xor
iret
lcall
cmpb
cltd
fs
push
movsb
arpl
shl
jne
clc
out
mov
jb
cli
add
hlt
mov
pop
mov
pop
push
xchg
nop
out
and
pop
mov
shl
test
sahf
lret
push
and
sahf
cmpsl
movsb
jne
jp
sub
in
and
in
xor
pop
pop
mov
and
inc
lahf
aam
int
jo
cmp
repnz
iret
pop
adc
enter
mov
gs
das
sti
rclw
out
adc
sub
inc
pushl
mov
pop
and
mov
mov
sub
test
roll
push
jg
addr16
pop
ja
sub
mov
inc
popa
out
mov
cmp
mov
scas
pop
push
xchg
fmul
inc
dec
repz
sbb
xor
loopne
adc
add
sub
mov
push
sbb
xor
ljmp
adc
maxps
loop
ljmp
and
add
push
push
sbb
insb
or
or
aaa
test
pop
jno
lret
push
or
mov
das
jo
cwtl
inc
imul
cmp
pop
pop
pop
push
insb
mov
cmp
dec
fdivrl
adc
je
and
and
xchg
adc
movsb
lods
sub
es
es
dec
les
jge
adc
and
push
int
mov
fcmovnbe
out
movl
aad
fcomps
xchg
cli
dec
sbb
imul
xchg
mov
jle
shlb
test
jns
scas
sbb
add
mov
inc
icebp
sub
ficoml
xchg
je
mov
jns
pop
outsl
nop
pop
bound
imul
xchg
iret
mov
ljmp
dec
adc
jbe
push
mov
add
xchg
mov
cmc
fisttpll
and
and
cmpb
add
icebp
dec
inc
cmpsb
add
stc
jb
pop
mov
sbb
sbb
cmp
stos
lea
sbb
out
add
inc
cmp
fisubl
jp
sub
mov
jbe
in
ret
jecxz
pop
repnz
adc
shll
pop
movb
push
repz
pop
adc
in
faddl
out
add
xor
enter
ret
jl
js
pop
dec
imul
mov
add
mov
sbbb
cmp
xchg
cmp
sub
and
xor
fldt
stos
or
add
adc
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
push
push
xchg
add
and
mov
sbb
xlat
data16
add
inc
sbb
aaa
pop
add
adcl
arpl
cli
int
add
hlt
jb
xchg
push
push
sahf
push
loope
outsb
es
ss
testl
aad
lods
ret
incb
int3
xchg
arpl
out
pop
cmpsl
and
popf
mov
adc
into
movsl
pusha
inc
rcrb
and
pop
mov
lret
out
fstps
push
or
sbb
incb
fisttps
push
pop
inc
pop
sub
push
cltd
or
stc
gs
jg
xchg
adc
or
in
sbb
fcmovu
int
mov
and
xor
jl
xchg
jmp
inc
mov
jl
hlt
into
adc
test
push
xchg
pop
rcll
pop
jmp
mov
jge
pushf
and
enter
adc
loopne
rcrl
mov
loop
inc
ss
jmp
push
xor
rorb
sarb
xchg
mov
pop
icebp
femms
les
dec
add
and
test
adc
mov
xchg
mov
in
or
das
out
cwtl
xchg
inc
cmp
stos
sbb
callw
add
pop
jno
ret
loopne
mov
or
sar
ljmp
xchg
push
ljmp
addr16
jge
rcrb
pop
ljmp
subl
popa
pop
pusha
mov
and
pop
lret
call
push
repnz
test
mov
mov
inc
insb
dec
fstpt
pop
mov
pop
enter
popa
and
imulb
jnp
mov
outsb
pop
and
aam
xchg
jle
sub
mov
inc
mov
cmpsb
test
aam
inc
mov
push
lret
ret
jne
cmp
xchg
fstpt
shll
mov
ret
lcall
add
int3
cmc
repz
je
cmp
and
mov
adc
cmp
mov
sbb
data16
mov
inc
push
mov
out
and
cmc
lahf
fstl
adc
push
add
je
shll
push
popa
in
loop
push
lea
das
mov
gs
lahf
xchg
pop
jmp
pop
ret
out
sbb
mov
and
mov
rolb
sbb
fcomip
stos
mov
imul
jl
nop
dec
xor
clc
and
clc
inc
jo
jmp
test
cmp
lcall
mov
mov
sbb
xor
xchg
cmp
inc
lds
scas
pop
adc
and
mov
sbb
fs
cmp
pop
fisubl
cmp
xchg
pop
pop
xchg
out
popa
rclb
lea
inc
stc
stc
ret
mov
pop
mov
cmpsl
aas
stos
test
and
movsl
aad
cld
hlt
and
jns
push
dec
mov
shl
lea
loope
hlt
movl
lret
insl
out
pop
sbb
add
dec
aas
and
cmp
cmp
ret
or
pop
adc
jo
mov
jecxz
scas
std
and
lds
in
mov
frstor
movsb
pop
or
push
push
stos
andl
jnp
or
or
cmp
ljmp
push
outsl
dec
nop
jne
pop
jl
jp
sub
push
mov
add
notl
imul
outsl
cwtl
and
xchg
mov
pushf
lahf
cmp
popa
xor
inc
cmp
xchg
sbb
aam
add
arpl
mov
pop
call
mov
push
les
les
lods
adc
mov
push
test
push
push
std
dec
notb
or
mov
lahf
or
push
mov
divl
add
add
lahf
xchg
mov
adc
in
fstpl
int
repz
mov
jecxz
xor
push
mov
syscall
or
imul
jg
fwait
pop
jb
mov
fbld
rcl
inc
jl
sub
jo
sbb
cwtl
or
rorl
jae
mov
push
cmp
in
nop
push
mov
inc
aad
pop
cmp
std
mov
cmp
inc
imul
popf
rcpps
in
or
insl
add
mov
aaa
dec
jno
adc
xchg
lods
and
jb
leave
xlat
mov
push
cmpsl
dec
cld
mov
shlb
cmp
pop
xlat
stos
push
dec
cld
cmp
adc
arpl
mov
and
lods
ljmp
imul
push
ror
int3
push
or
sahf
cs
xchg
xchg
add
stos
dec
in
xchg
negl
jbe
xor
shl
mov
jmp
or
xlat
rclb
pop
add
mov
mov
cmp
jbe
pop
sti
sub
adc
jl
or
shl
mov
mov
pop
mov
adc
jno
and
aad
gs
or
mov
jge
jbe
mov
popa
aas
ss
jecxz
pop
or
test
das
movsl
scas
mov
test
and
xchg
mov
mov
enterw
loopne
dec
inc
inc
ret
jno
out
xchg
out
push
pop
or
fisttpl
popa
lret
jmp
ljmp
push
fiaddl
jmp
inc
inc
fcomps
outsl
dec
pop
repz
fadds
iret
out
dec
or
test
stc
push
push
inc
bound
test
pop
push
sbbb
inc
xor
cmp
jns
and
insl
add
push
cmpsb
mov
mov
sub
lods
pop
push
jb
scas
aaa
cmp
dec
jns
lods
aas
jno
mov
mov
or
pop
inc
dec
or
ljmp
jb
sub
and
push
xlat
int
lret
mov
and
sbb
sub
xlat
das
mov
imul
fsubrs
dec
pop
mov
inc
push
fwait
mov
xorl
pop
sub
gs
mov
ret
cmp
in
mov
dec
add
test
xlat
mov
mov
pop
push
inc
pop
loopne
fcompl
cltd
test
sub
out
ret
cmpsl
pop
xchg
xchg
cld
mov
stos
xchg
in
nop
test
test
lcall
clc
mov
ja
mov
rcl
inc
lock
xchg
push
aam
shrl
mov
mov
je
stos
outsl
repnz
icebp
pop
adc
aam
aad
pop
or
mov
add
popl
stos
push
mov
pop
stc
xor
imul
mov
mov
ret
push
cmp
dec
xchg
mov
inc
insl
ret
cli
shrb
jo
xor
jle
and
jae
jne
and
into
repz
je
rcrl
mov
insb
sbb
inc
cmp
mov
call
lret
cwtl
ret
int
add
pop
xor
xchg
cmp
adc
aas
jnp
rcl
movsb
cwtl
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
dec
push
adc
mov
push
daa
lods
aam
inc
xchg
and
rclb
out
ret
fistps
je
int3
fidivl
sbb
pop
scas
das
mov
mov
adc
hlt
mov
push
out
arpl
fists
or
sahf
dec
mov
addr16
out
ss
cmp
lock
fdivs
fidivl
ds
hlt
loope
pop
inc
add
aad
lahf
mov
test
rclb
cltd
inc
xchg
pop
sbb
mov
xor
adc
xor
dec
dec
fildl
cmp
mov
roll
xor
and
inc
fisttps
scas
clc
ja
push
sbb
daa
xchg
add
arpl
jae
pusha
loopew
xor
popf
shlb
fldt
dec
xorl
or
dec
cmp
mov
fs
or
pop
clc
fmul
gs
jno
gs
xor
jp
or
and
loope
sub
arpl
test
sub
jb
pop
inc
out
adc
cmp
ret
sbb
inc
test
shr
divb
pop
fsubrs
outsl
mov
pushf
cmpsb
insb
xor
repnz
xchg
ss
ficomps
fcomp
out
ss
cmp
cmp
adcl
push
pop
and
mov
jle
daa
outsl
xchg
jno
pop
jg
dec
and
xor
shrb
xchg
aaa
push
pop
mov
movsl
jg
mov
mov
push
push
bound
notl
dec
cmp
adc
adc
sbb
and
inc
call
and
inc
js
aas
jno
hlt
and
and
jbe
cmp
je
jge
or
mov
sub
pop
addl
pop
mov
inc
clc
xor
mov
jp
arpl
xchg
xchg
arpl
inc
fiaddl
int3
clc
mov
and
fildll
jle
push
std
jg
mov
ja
scas
pop
lret
xadd
push
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
