push
mov
sub
mov
mov
and
push
movzbl
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
pushl
push
call
jmp
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
inc
xor
mov
add
mov
and
mov
xor
mov
sub
mov
adc
mov
xor
mov
neg
mov
sbb
movl
and
mov
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jg
jmp
pushl
push
call
cmpl
jb
add
mov
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
xor
or
sub
pop
orl
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
add
sub
movl
mov
movl
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
adcl
mov
mov
sbbl
xor
add
mov
lea
mov
mov
jmp
mov
xchg
pop
subl
jp
pop
jp
and
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
sarl
test
sbb
call
imul
lods
sbb
pop
lret
dec
daa
jecxz
aad
loop
movsb
pusha
lea
test
arpl
cltd
sahf
hlt
or
mov
mov
xor
movsb
cmp
sub
jg
sub
push
xchg
aam
iret
add
orb
sbb
or
adc
xchg
sub
in
aam
sub
inc
sbb
in
nop
dec
addl
sbb
subl
jle
cli
pop
ret
ret
js
adc
notl
mov
arpl
mov
fcoms
adc
push
imul
xchg
pusha
sub
sbb
test
push
xchg
popf
mov
adcl
xchg
cld
inc
shll
and
fsubs
add
pop
mov
rcll
and
fldcw
dec
pop
push
icebp
cmp
repnz
lods
xor
test
xor
dec
fwait
xchg
nop
ffree
frstor
add
scas
es
cmpb
add
sbb
xor
xchg
pop
into
fwait
stos
dec
mov
mov
outsb
lods
test
jge
pop
loopne
ss
pop
cmp
fsubl
dec
cmp
mov
andb
adc
xchg
adc
mov
fs
adc
push
stos
cmpsl
leave
adc
jmp
pop
leave
sti
add
sahf
out
push
add
repz
and
and
adc
stc
jns
insl
stc
mov
fcompl
push
fistpl
xchg
int3
cmp
xor
and
cmpsl
cltd
pusha
mov
mov
aaa
lds
mov
bound
cmp
push
jecxz
mov
and
push
lds
test
jb
sub
mov
add
dec
leave
ss
stc
iret
mov
pop
jl
mov
test
push
test
fistpl
jno
cmpsl
lea
or
sub
pop
add
cmpb
mov
scas
popf
shlb
pop
cld
pop
mov
js
jmp
aam
idivb
dec
push
inc
push
int
lea
cmp
cltd
and
fistpll
adc
stos
jecxz
lea
jne
sub
mov
stos
mov
mov
addl
imul
je
movsb
clc
ret
dec
test
outsl
dec
pop
stc
mov
sub
fcomip
or
and
add
dec
xchg
push
fistl
jno
out
std
inc
mov
xor
test
push
lock
mov
test
jecxz
adc
xlat
add
or
int3
and
outsl
stos
lock
scas
push
daa
shlb
inc
mov
into
dec
cmpsb
inc
or
popa
or
popf
cwtl
adcb
psrad
jo
mov
sahf
pop
mov
dec
enter
mov
push
adc
out
inc
pushf
and
sbb
lods
sbb
cmp
add
or
arpl
push
pop
xor
xchg
dec
loope
or
adc
adc
jns
pop
mov
out
rcl
ret
jae
imul
sbb
jge
je
int
sub
mov
lea
lea
add
ja
psrlq
cmp
mov
push
into
cmp
pop
flds
xchg
mov
sub
sahf
test
scas
xchg
xchg
xchg
mov
sbb
push
fidivs
mov
inc
test
sahf
cmp
xchg
dec
xchg
dec
inc
inc
inc
push
inc
stos
inc
decl
imul
test
loopne
addr16
jg
xchg
xchg
mul
loope
fwait
ds
pop
add
or
addr16
bound
movsl
sub
push
cmpsb
fs
jo
ss
in
adc
add
mov
cli
fs
or
dec
add
or
fdivr
cmp
outsl
stc
push
insl
push
movsl
sbbb
xor
add
mov
sbb
jb
das
leave
jp
data16
scas
pop
cld
stos
mov
nop
xchg
lea
sbb
push
sbb
imul
rcrb
pop
pop
cmp
fcompl
repz
pop
mov
push
clc
push
pop
or
decb
jns
inc
jecxz
jae
scas
pop
xor
add
dec
stc
jmp
push
sbb
sahf
cmp
cmpl
imul
jge
cmp
and
sbb
movsl
arpl
sub
mov
mov
sti
sarb
insb
cmp
rol
in
and
or
and
scas
adc
push
lock
icebp
dec
sti
sahf
fstps
mov
fs
imull
dec
test
xor
in
sbb
jae
xchg
cltd
mov
nop
jae
mov
mov
sar
cwtl
sub
dec
push
test
inc
ja
push
or
adc
insb
xor
mov
in
cmc
add
adc
pop
push
mov
or
ret
addr16
daa
inc
xchg
sti
mov
adc
xchg
add
movsb
test
sar
xchg
cmp
pop
lods
cmc
aam
adc
in
pusha
mov
inc
or
cltd
jl
mov
mov
push
mov
shlb
or
cmp
ror
sbb
jmp
dec
nop
adc
mov
popa
es
cmp
aaa
aam
loope
or
xor
push
test
jl
loope
test
xchg
push
into
add
repz
out
clc
into
dec
cmp
das
xor
fildl
ss
outsl
aas
xchg
ret
xchg
mov
dec
xchg
adc
mov
and
adc
roll
aaa
inc
add
pop
das
mov
inc
hlt
rorb
in
test
cld
cli
mov
divb
stos
mov
cmpsl
mov
cmp
mov
stc
loope
or
in
jle
js
add
mov
push
lock
xchg
pop
mov
icebp
neg
lahf
cmp
shrl
add
add
xor
aad
xor
add
test
inc
inc
mov
arpl
int3
data16
popf
cmp
and
insl
lock
out
push
and
mov
mov
push
xor
xchg
cmpsb
jp
ja
movsl
icebp
pop
cld
mov
xchg
mov
call
insb
lret
in
daa
mov
push
negb
push
std
mov
or
and
push
scas
movb
enter
aad
push
sbb
loop
mov
jle
das
imul
push
lods
jmp
rcl
push
mov
push
mov
pop
rol
mov
divb
xchg
sahf
mov
mov
mov
mov
dec
iret
cmp
sbb
ss
jp
gs
push
and
mov
fimuls
jb
arpl
lock
mov
scas
call
jne
pusha
push
or
out
daa
or
add
pop
xor
fadds
pop
push
addl
jmp
or
cmp
mov
ja
pop
mulb
jo
mov
scas
mov
sub
stc
outsl
ja
rcrb
mov
push
sub
ret
pop
and
movsb
add
push
xchg
cmp
shll
sub
inc
or
cmp
call
out
pusha
mov
jge
jae
pop
popa
adc
adc
lea
push
movsl
xchg
jle
mov
imul
icebp
loope
dec
push
adc
stos
mov
jbe
mov
in
adc
je
aam
jo
mov
adc
dec
rcl
mov
mov
loop
out
fisubrl
push
cld
mov
push
jne
push
call
pop
stc
xor
inc
inc
mov
adc
cs
loopne
loop
shrb
xor
sbb
and
push
lret
test
ret
mov
add
jl
sahf
or
movsl
stc
add
jnp
js
cmpsb
mov
pop
xor
ret
xchg
test
inc
xchg
jmp
inc
lea
imul
scas
sub
loopne
lock
sbb
popa
mov
imul
mov
mov
cmp
xchg
push
sub
sbb
cmc
sub
sub
push
les
push
xchg
jnp
jg
out
lds
test
ficoms
adc
xor
dec
lret
outsb
lret
and
les
push
sub
cmp
mov
pop
jecxz
mov
cmpsl
out
mov
dec
loope
cmp
mov
mov
mov
mov
pop
rcrl
mov
sub
icebp
cmpsb
sub
bound
out
scas
fs
into
aaa
cmp
xchg
sub
xor
repz
push
sbb
data16
mov
rcrl
sarl
ret
rolb
adc
out
leave
xchg
fs
jl
add
out
flds
mov
pushf
inc
cmc
xchg
pop
lock
inc
mov
cmp
mov
mov
ret
daa
mov
add
sbb
jecxz
pop
lret
adc
pop
fstpt
dec
push
cmpsl
lods
sbb
add
xor
or
insb
fmull
ljmp
cmpb
aaa
and
xchg
mov
imul
add
add
ja
ja
mov
jecxz
jbe
add
and
jb
in
push
mov
nop
outsb
push
mov
dec
pop
repnz
push
xchg
add
out
divb
mov
pushf
adc
ret
int3
cltd
mov
fists
in
cmc
pop
les
add
inc
sbb
aam
mov
clc
out
bound
add
arpl
cmpsl
std
stc
test
jl
cld
mov
pusha
test
movb
push
cmpsb
jl
outsb
and
jg
adc
inc
repz
and
rolb
jecxz
pop
xchg
mov
pop
push
aas
fbstp
sbb
sti
xor
sbb
rol
dec
cmpsl
mov
inc
sub
scas
movsl
cmp
test
cmc
arpl
lods
cmp
jo
add
inc
testb
or
push
dec
pop
mov
pop
orl
lds
pop
adc
aaa
sub
push
addr16
insb
xchg
push
xor
mov
push
je
fisubl
out
test
out
movl
mov
out
inc
fs
rol
les
mov
xlat
sbb
mov
bnd
enter
cmp
pop
ds
xchg
test
pop
repnz
and
aam
adc
or
popa
jmp
lahf
push
sahf
cmpb
inc
and
mov
pop
sub
jne
sub
mov
sbb
loop
lret
xchg
mov
push
cmp
out
idivb
mov
dec
mov
sti
cli
push
inc
sbb
cmp
and
addr16
cltd
adc
xchg
clc
pop
xor
cwtl
jmp
push
xchg
adc
and
push
subb
mov
jmp
sub
jo
cmpsl
loopne
gs
mov
ja
test
sub
stc
lret
or
std
aad
pop
and
aaa
mov
test
sbb
insb
cmp
cmp
mov
dec
mov
cmp
pushf
and
aas
mov
push
ja
lahf
mov
mov
mov
cmp
dec
idivb
add
movsb
jnp
or
add
cmp
cmp
lods
ret
in
jle
dec
xor
inc
shrb
xor
push
push
mov
mov
in
xchg
pop
adc
push
cmp
andb
js
fidivrl
shrb
fldenv
cmp
cmp
ljmp
mov
dec
leave
call
sub
xor
dec
call
mov
ss
rorl
repnz
rcll
mov
mov
dec
mov
dec
dec
sti
dec
mov
jg
jae
loopne
push
inc
addb
outsb
lds
sub
jle
fsubs
dec
lds
mov
pop
add
pop
push
js
jae
sbb
ret
aaa
xchg
adc
pop
jns
std
jo
dec
dec
sub
ljmp
frstor
jge
jae
push
fcmovne
mov
insb
mov
push
mov
xlat
fcomp
imul
scas
adc
repnz
hlt
add
inc
sbbl
sub
dec
int
movsl
cltd
xchg
or
lcall
sti
mov
lea
inc
pop
dec
repnz
pop
shlb
and
jp
out
nop
mov
xor
mov
mov
jl
lea
and
out
xchg
mov
lock
ret
push
movsl
xor
or
jo
push
push
adc
mov
pop
popa
in
shll
jo
lahf
fildl
add
sub
out
je
repnz
xchg
add
and
in
jb
aas
mov
inc
incb
movsl
lret
sub
adc
adc
test
xchg
adc
push
out
mov
xor
and
sbb
filds
push
jne
lock
pop
inc
rcll
lea
push
xchg
pop
call
int3
pop
pop
fwait
inc
das
lcall
loope
pushf
push
rorl
inc
sbb
call
mov
mov
into
imul
addb
push
je
outsb
gs
sub
adc
xchg
lret
push
inc
out
ja
ret
out
sarb
ds
mov
pop
js
testb
enter
out
mov
or
fsubs
aad
mov
iret
mov
pop
lea
and
pop
es
out
lcall
aas
rcrb
insb
add
dec
cmp
div
mov
sub
int3
outsl
lds
testl
out
dec
enter
flds
mov
or
push
xchg
das
ret
addr16
aaa
xor
sub
int3
cmp
xor
ds
jp
mov
fldl
adc
adc
or
xlat
fimuls
fidivs
adc
pushf
cld
xchg
or
out
mov
sti
subl
mov
ja
data16
icebp
rcll
fisttpll
sub
cmpsb
adc
aam
or
sbbl
mov
lods
mov
pop
xchg
lock
inc
add
push
adc
packssdw
insl
in
loope
and
sbb
adc
cli
push
push
cmp
out
and
inc
into
aaa
push
push
lea
es
pushf
inc
out
js
sub
mov
daa
pop
sub
cmp
jge
rcl
fistps
sbb
aam
cwtl
sbb
lret
xchg
mov
in
pop
lret
daa
or
imul
and
sbb
imul
push
xchg
lods
lret
lcall
test
mov
or
jo
fwait
es
fists
cld
lods
bswap
into
jmp
adc
fiaddl
rcr
imul
mov
ds
mov
pop
sahf
lea
and
frstor
leave
out
cmp
sub
into
xor
mov
mov
push
xor
outsl
gs
xor
sbb
lock
hlt
xchg
mov
add
mov
fsubrl
sbb
add
cmpsb
lods
xchg
adc
in
jp
mov
stc
mov
cmp
cmp
sbb
mov
dec
icebp
xor
lds
cmc
or
xor
into
and
lock
addb
mov
aam
jbe
fisttps
je
enter
sbbb
sbb
mov
mov
test
fiaddl
dec
pushf
mov
fs
xor
mov
outsb
jae
xchg
inc
pop
inc
pop
cmp
movsl
push
out
fidivrs
adc
push
push
push
out
pop
insb
out
data16
lods
xor
sar
or
ja
and
jo
fnstcw
adc
pop
test
mov
movsl
jne
cs
xchg
ret
out
cmpb
or
imul
push
xchg
push
aaa
or
rolb
jecxz
xor
dec
xchg
cmp
lock
lods
fsubrl
sbb
fs
adc
jle
divb
push
mov
dec
cmp
adc
cmp
jns
mov
sub
push
ds
out
xchg
or
mov
mov
pop
xchg
fisttps
jg
jno
push
jae
pop
pusha
xchg
gs
divl
xor
icebp
in
sbb
adc
push
imul
jge
inc
dec
inc
shlb
and
adc
pop
movsl
adc
sbb
jae
popa
dec
or
out
cmp
lods
in
repnz
fildll
fwait
aad
jmp
mov
push
out
pop
mov
or
sbb
push
enter
nop
in
inc
xchg
into
shr
sub
std
call
shl
and
pusha
cli
lahf
add
shrb
rorl
shlb
mov
pop
imul
mov
inc
bound
stos
cmp
lds
sub
mov
mov
sbb
sub
inc
and
test
adc
mov
or
fwait
mov
in
jae
cmc
hlt
adc
cmp
sbb
jl
gs
test
lahf
inc
xchg
lea
clc
inc
xchg
and
lret
xchg
and
dec
mov
pop
inc
jo
pop
dec
call
xchg
mov
push
cmpsb
pop
mov
mov
lea
sub
in
cmp
adc
jecxz
jp
ret
ret
subl
dec
test
fcoml
sti
adc
pop
push
shl
js
mov
mov
sbb
lods
out
mov
loopne
in
cmp
in
or
add
test
pop
cmpsb
mov
stos
sub
das
xor
fdivs
movsl
movsl
mov
xorl
cmp
outsl
aam
imul
mov
xchg
int3
dec
pusha
cmp
scas
mov
int3
push
iret
idivb
pop
inc
push
adc
aam
out
sub
in
lock
cmp
test
into
out
lods
add
xchg
outsb
push
pop
mov
pop
dec
sahf
inc
sti
addr16
shlb
cli
inc
or
jl
add
sub
ss
test
cmc
inc
mov
hlt
adc
out
icebp
mov
adc
mov
jle
ja
test
jae
repnz
sub
xlat
inc
into
rclb
cli
inc
and
ret
mov
enter
je
sub
lods
fisttpll
mov
xor
adc
sarb
dec
inc
xchg
adc
lds
je
dec
xchg
mov
cmp
scas
cs
aaa
shlb
jp
cmp
je
pop
dec
xor
jno
mov
sub
mov
lods
cli
lds
inc
sub
add
dec
pusha
or
fistpl
imul
repz
or
mov
negb
xor
gs
sbb
outsl
sbb
mov
mov
dec
xor
mov
loopne
movsb
fnstenv
stos
mov
cltd
repnz
push
bound
loope
push
sub
out
jmp
aad
and
ret
adc
scas
movsl
dec
jnp
mov
das
jns
iret
mov
and
xor
cmp
pop
or
mul
mov
xchg
pusha
dec
out
arpl
fsubl
sub
mov
mov
test
adc
roll
add
bound
fcmovne
fidivrs
and
jbe
aad
insb
lods
sub
jo
dec
dec
iret
shlb
loopne
insb
sbb
xlat
xor
sbb
xchg
jmp
lea
fistpll
in
mov
insb
add
fcos
js
push
jp
mov
insb
gs
dec
test
xchg
adc
jae
loopne
pop
sub
jb
divl
lods
int3
xlat
dec
and
js
pop
test
xlat
test
cmpsb
repz
imull
jl
test
add
lret
inc
mov
das
mov
call
loopne
pop
inc
or
mov
stc
mov
mov
add
jecxz
leave
adc
mov
imul
mov
repz
out
imul
rclb
mov
push
jns
mov
inc
out
mov
cmp
push
pop
add
push
cmp
jmp
sarb
xchg
push
in
jl
flds
mov
mov
insb
frstor
lea
fsubs
lds
xchg
push
sti
incb
push
fldl
jnp
sub
mov
rcrb
dec
mov
hlt
push
out
xchg
cmp
push
adc
or
add
stc
repnz
ret
movsb
pop
fwait
push
and
das
sub
leave
pop
pop
icebp
add
scas
pushf
and
jae
xlat
pop
and
repz
push
push
mov
jb
mov
loop
xor
icebp
dec
aas
sbb
adc
mov
jmp
sahf
into
sub
fmul
sbb
sub
shlb
pop
xor
xchg
push
jmp
push
add
or
and
imul
jmp
adc
sub
xor
and
jne
arpl
mov
mov
icebp
sub
mov
gs
adc
adc
aas
sub
cmp
and
scas
pusha
mov
add
es
fwait
push
addb
inc
push
inc
jmp
xor
pop
les
sar
ljmp
fucomi
sub
outsb
jns
negb
xor
inc
ret
inc
mov
xor
rcrb
int
aas
mov
ljmp
popa
mov
fmull
icebp
out
inc
imul
cmp
and
popa
xor
repz
pop
fisttpl
pop
jmp
pop
ret
push
shrl
add
inc
dec
notb
or
or
and
xchg
cli
sub
dec
es
jnp
jle
data16
ds
xor
and
cld
pop
les
mov
sbb
imul
fistpll
scas
mov
jbe
outsb
xor
mov
mov
inc
jge
leave
and
push
stos
mov
pop
jno
push
stos
mulps
xchg
jnp
cmpsl
enter
in
shll
push
jp
hlt
mov
jle
dec
push
cmc
pushf
adc
mov
cmpsb
fcomip
jmp
jb
xchg
je
cmp
and
push
mov
and
addr16
xor
dec
lahf
xchg
xchg
addr16
xchg
sbb
dec
mov
nop
fcompl
fwait
dec
mov
cld
lcall
mov
lret
out
mov
in
dec
popf
pop
push
and
imul
push
dec
cltd
xchg
xor
mov
adc
mov
mov
add
xchg
cmp
scas
mov
xor
jo
jle
dec
fisubl
dec
jle
jo
sub
scas
push
or
push
push
in
ret
pop
lcall
enter
data16
sub
push
and
cmp
mov
adc
inc
sbbb
loop
js
lds
inc
movsb
sub
xchg
add
dec
xchg
pop
add
in
imull
jb
xor
movsb
fadd
add
lahf
rorl
push
movsb
mov
test
es
shlb
inc
popf
rcll
inc
lods
lds
loopne
cmp
arpl
cmpsl
sbb
push
mov
aas
movsb
mov
jg
or
or
jp
iret
loopne
pushf
in
push
or
lds
cwtl
inc
orb
xchg
test
mov
and
les
pusha
in
test
loopne
sub
mov
dec
pop
jp
xlat
mov
push
push
xchg
cmp
sar
andl
int
pop
push
negb
out
cmp
nop
lods
aas
add
xor
hlt
pop
push
pop
gs
in
testl
mov
mov
jmp
mov
push
fidivs
dec
pushf
cmpsb
les
xchg
and
jle
fimull
imul
sub
mov
fistpl
mov
inc
rcll
mov
push
stc
rcl
fcomps
clc
mov
testb
pop
sahf
mov
jnp,pt
stc
dec
sbb
mov
mov
sub
outsb
das
shll
imul
pop
push
es
and
pop
mov
xchg
hlt
lods
pop
lds
inc
lret
ficoms
imul
or
pop
inc
inc
adc
fnstenv
subb
jge
data16
andl
push
lods
stos
outsb
xchg
outsl
ret
inc
cltd
sub
lahf
sti
sarl
call
inc
nop
loopne
cs
fs
gs
int3
test
loope
int3
loopne
add
loop
adc
mov
orl
push
popa
inc
push
cmp
pop
iret
xor
jae
push
cmp
mov
ret
fstps
fdivp
push
leave
fcoml
mov
lods
stos
xchg
ja
cmp
sahf
lcall
jne
loope
mov
push
pop
jmp
mov
and
add
pop
fimull
int
add
popf
adc
scas
arpl
and
out
inc
ret
ss
mov
fdivp
out
mov
mov
xlat
jg
scas
cli
jge
inc
sub
and
pop
rorb
dec
add
cwtl
jmp
jbe
pcmpeqw
xchg
or
adc
push
stos
pusha
les
mov
or
aas
mov
fisttpl
cmp
mov
xchg
or
cmpsl
cmpsl
add
mov
test
lea
xor
int
pop
fimull
add
xchg
test
mov
pop
mov
js
pop
rorl
imul
add
mov
outsb
icebp
adc
das
popf
cltd
push
scas
pop
jbe
outsl
xor
jge
dec
imul
mov
sbb
sbb
js
jecxz
scas
test
jg
jne
pop
mov
bound
cmp
push
fwait
mov
and
lods
sub
xchg
pop
mov
or
in
xor
lahf
lahf
jno
add
mov
icebp
fstps
or
ja
sti
mov
pop
xchg
arpl
movsl
testb
aad
dec
fistl
das
roll
ja
in
int3
xchg
aad
push
mov
inc
lret
ficoml
jb
push
cmpsb
sbb
dec
repnz
imul
fcoml
in
test
gs
and
xchg
cs
dec
or
sub
out
add
testb
ds
int3
lods
stc
push
xchg
push
cs
push
mov
flds
mov
cmc
xchg
inc
andb
lahf
mov
std
jb
mov
inc
mov
imul
jl
lods
cli
pop
cmp
nop
mov
dec
dec
cmpsb
shlb
sub
into
cmp
cmp
xchg
mov
test
push
xchg
les
stos
cmp
loopne
negb
mov
shrl
mov
sub
imulb
pusha
loope
dec
cltd
lea
xor
mov
mov
repz
jne
cmp
dec
push
push
or
mov
push
fldt
arpl
mov
push
mov
jbe
mov
mov
and
cmp
add
xchg
movups
or
or
idivb
pushf
pusha
push
js
jns
mov
mov
imul
dec
mov
in
jmp
jae
adc
push
adc
or
push
jno
mov
cmpsl
insl
into
test
push
jo
outsl
test
cs
andl
in
xchg
mov
fsubs
outsb
mov
lcall
pop
pop
or
inc
xor
ds
pop
mov
mov
mov
xor
fdivl
fdivrp
ret
pop
ret
xchg
xchg
xor
add
pop
or
pop
dec
sub
jge
out
in
rcll
jmp
jmp
pop
in
cmp
mov
add
rcrb
or
jecxz
inc
ficompl
leave
lea
cmpsb
xor
and
xor
flds
fimuls
stc
or
lcall
insl
mulb
mov
mov
sub
sahf
imul
jmp
pop
sub
sbb
inc
or
fwait
mov
mov
sbb
fwait
sub
decl
stc
mov
adc
push
jnp
lock
jg
outsl
jle
sar
push
call
cmc
and
pop
xchg
sub
div
add
jl
ljmp
mov
je
or
push
movsb
push
mov
pushf
xchg
in
and
insl
jne
adc
or
mov
ds
sbb
jo
ficompl
inc
pop
cwtl
loop
mov
repz
adc
jl
cmp
adc
jne
xlat
xor
bound
subb
jnp
dec
xor
cmpsb
enter
loopne
add
ds
xchg
jno
and
push
aad
cwtl
adc
push
nop
imul
icebp
and
xor
jp
cmpb
dec
mov
xor
or
leave
enter
dec
push
sub
mov
sub
aad
jno
sub
cli
push
jl
data16
aas
jg
add
fidivs
lock
leave
jle
loope
pop
mov
xlat
mov
mov
ret
cmp
xor
loop
cmp
movsb
sbb
imul
pushf
into
pusha
les
fdivs
mov
push
push
sbb
mov
cs
in
cltd
outsl
xorb
push
hlt
inc
pop
aaa
jnp
jo
int
aas
lret
mov
jge
pop
iret
aas
inc
clc
adc
push
mov
aam
pop
or
repz
cmp
test
mov
inc
fldl2e
jecxz
adcb
or
sbb
dec
dec
xchg
aam
adc
pop
cmp
mov
sbb
xor
imul
pop
xor
or
dec
xchg
xor
xor
loop
sub
sub
fimuls
bound
xor
sbb
xor
mov
out
test
imul
ret
jb
cli
push
call
add
push
inc
add
adc
jno
enter
sub
popf
adc
mov
cs
daa
imul
popf
sbb
cli
outsb
mov
movsb
mov
cmpsl
mov
pop
jg
pushf
jbe
jns
addr16
add
sbb
pop
cmp
mov
das
imul
cmp
adc
mov
popf
scas
pop
insb
ret
push
push
loopne
mov
lcall
dec
rolb
stos
popf
pop
inc
loopne
cmp
xorb
rcll
aam
ss
enter
jmp
adc
sarb
xor
jo
or
stos
sbb
mov
xchg
sarl
lret
fiadds
pop
push
pop
mov
mov
add
nop
jp
push
or
or
daa
data16
test
sahf
fdivr
cmp
xchg
mov
cli
adc
jp
ficompl
rcrl
cmp
xchg
fldl
xor
push
ljmp
jg,pn
xor
adc
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
movl
mov
mov
lea
mov
mov
movl
mov
xor
mov
sub
mov
movl
mov
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
jmp
mov
test
lcall
jp
fstpl
jp
es
jecxz
pop
jge
jne
push
pop
mov
pop
or
enter
xor
and
lock
push
cmp
sub
inc
mov
lret
lahf
aas
dec
pop
fbld
fld
movl
inc
sbb
mov
jecxz
push
jle
lods
adc
lahf
adc
out
sbb
in
mov
inc
sbb
popa
and
aas
push
xor
movsl
add
out
cli
push
loope
cmp
cmp
insl
into
jecxz
les
data16
sahf
inc
sub
cli
mov
mov
dec
push
dec
fdivp
idiv
inc
ds
aaa
xor
or
add
cld
dec
sarb
fnsave
out
decl
and
inc
jns
int3
imul
les
daa
cli
sub
imul
addb
sub
imul
rcrl
iret
or
mov
cld
xor
mov
and
mov
push
mov
and
test
push
cs
loopne
fbstp
leave
add
and
dec
inc
mov
or
std
mov
sbbb
aam
and
sbb
mov
in
call
popf
xchg
cmp
mov
sbb
rol
cmp
es
loop
dec
dec
js
in
mov
sbb
lock
push
ds
mov
cwtl
bound
inc
movsb
js
pusha
cmpsl
int3
data16
int
sub
push
add
dec
mov
or
nop
add
sub
mov
add
mov
sub
sti
jo
mov
popf
jo
pushf
lret
js
sub
fnsave
jle
rolb
lds
fwait
rcrb
xor
xor
in
out
shr
cmc
pop
mov
pop
lods
mov
sarb
push
inc
int
icebp
xor
pop
xor
xchg
test
xchg
fidivrs
stos
fcoml
pop
cmp
hlt
call
lss
and
lea
andb
push
shl
fs
loope
pop
mov
repnz
movsb
pop
mov
jo
dec
add
rorb
rcrb
mov
js
pxor
testl
mov
fs
mov
fwait
or
sub
lds
adc
out
inc
jae
ficomps
add
cs
xchg
mov
nop
pop
sbb
mov
or
pop
xchg
jg
fdivl
dec
scas
test
ret
int3
inc
leave
enter
rolb
inc
and
flds
pusha
stos
out
insl
xor
rorl
dec
lahf
inc
imul
xor
in
les
lods
mov
push
sub
jae
xor
pop
mov
imul
push
repnz
lahf
mov
xor
dec
push
cmp
pop
aaa
pop
or
xor
sti
cltd
inc
cmp
testb
inc
push
xor
inc
pop
stos
push
enter
or
fcmove
lods
sbb
fs
sbb
xchg
inc
xchg
push
notb
hlt
test
filds
stc
sub
push
pop
imulb
mov
ljmp
lret
jmp
call
xchg
ljmp
push
fsubl
push
and
icebp
jp
test
jmp
jp
mov
dec
mov
fxch
add
out
imulb
jp
mov
mov
rcrb
call
out
rorl
cmpl
in
mov
popf
adc
stc
fs
and
mov
movsl
push
cmp
ds
in
xor
sbb
stc
pop
pushf
xchg
nop
push
sti
adc
push
or
push
sbb
flds
dec
xchg
mov
xor
jae
notl
jecxz
cmp
xlat
mov
pop
arpl
xchg
mov
pop
lea
pop
fs
cmpl
fnstsw
js
jnp
loopne
xor
jno
add
xchg
cmp
clc
add
mov
js
insl
cmp
outsl
roll
pushf
xchg
adc
xor
and
push
cld
lds
cmpl
cmp
movsb
jge
pop
nop
cmp
add
stos
mov
out
dec
sbb
inc
cld
test
lahf
pop
pop
sbb
lods
mov
inc
xor
loopne
lds
jg
sbb
jbe
push
dec
int3
xchg
cmp
add
scas
add
data16
add
push
pop
mov
add
int3
into
jne
jmp
mov
fisubrl
or
xor
gs
adc
btc
out
test
hlt
sbb
and
or
adc
mov
in
inc
nop
xlat
shl
movsl
xor
lcall
out
je
pop
cli
xor
pop
ljmp
cmp
jg
or
cmp
xor
dec
xor
dec
xlat
mov
das
mov
xor
xor
push
pop
mov
push
cmpsl
xor
cmp
pop
dec
test
add
shl
dec
lock
cmp
leave
mov
imul
fistps
mov
push
movsl
sbb
out
sub
mov
shr
bound
mov
sbb
call
sub
cli
les
ljmp
nop
sub
les
mov
je
mov
jmp
rep
dec
mov
call
cli
stos
cmp
adc
je
xor
add
cmp
mov
lea
mov
xchg
lock
push
xlat
dec
adc
mov
sbb
outsl
xchg
xchg
jmp
jge
outsb
daa
jg
jmp
ret
pop
test
push
jecxz
gs
mov
xchg
clc
cmpsb
dec
push
loopne
push
sub
bound
lret
mov
sub
data16
scas
pop
fucomp
jg
fisubs
push
jo
jbe
jb
mov
ficompl
fld1
add
out
hlt
in
pop
lcall
push
rep
sbb
mov
fnstenv
cwtl
popf
cmp
arpl
pop
pop
ljmp
push
mov
loop
ds
xor
dec
shlb
push
test
in
repnz
cmp
push
not
jno
cmp
repnz
fsub
and
ficoml
inc
xchg
add
push
jecxz
jmp
int3
cli
push
push
sbb
imul
iret
xchg
inc
leave
jge
rcr
divl
int
mov
inc
add
mov
sbb
imul
std
pushf
popa
pop
jle
xchg
int
sahf
inc
testb
fs
into
mov
pop
or
in
sbb
outsl
sub
push
lock
fwait
outsb
xlat
in
xor
add
push
stos
and
shll
mov
xor
imul
loop
dec
cwtl
mov
cmp
adc
fprem
popl
jo
loope
push
imul
push
mov
pop
or
sti
push
jecxz
das
stos
xor
sbb
add
in
sarb
cli
aad
sbb
xorb
jnp
jae
pop
cwtl
lods
jmp
ja
stc
stos
or
test
jnp
sbb
jae
mov
std
outsl
loopne
fisubrs
dec
push
gs
jg
sub
outsb
xchg
jno
xchg
jle
fldl
insl
lahf
jb
mov
mov
ret
adc
push
test
xchg
out
and
sahf
cmp
test
sub
test
push
jb
mov
adc
xor
add
mov
les
adc
jno
xor
xor
cmp
fistpll
inc
mov
mov
fwait
bound
pop
test
ja
icebp
addr16
pop
cwtl
inc
xor
fs
fisubs
loopne
popf
xor
cmpsb
imul
jo
dec
jno
jns
decl
push
push
cmp
jmp
pop
and
lods
lret
pushf
sbb
jae
or
popf
sbb
jl
add
arpl
inc
jl
gs
enter
jb
xor
sarl
lock
xchg
xchg
xchg
jnp
outsl
dec
in
in
adc
lods
movsb
jnp
push
imul
gs
mov
je
adc
cmpl
mov
dec
mov
daa
pop
cltd
out
dec
dec
sub
push
xor
sti
push
xor
lret
sub
das
es
sbb
push
ja
xor
inc
repz
push
xchg
inc
or
sarl
dec
ljmp
jmp
fsts
mov
cli
out
jl
jle
ret
mov
jbe
out
pop
test
cmpsb
xor
aam
pusha
mov
fists
call
or
std
mov
push
dec
popa
call
sub
lret
out
ret
cli
mov
jp
iret
dec
inc
and
and
stos
outsl
cltd
sbb
pop
inc
dec
xlat
sub
aas
push
scas
nop
pusha
mov
insl
sbb
sbb
xor
dec
gs
or
ja
out
inc
cld
jbe
adc
xchg
pop
into
mov
or
xor
orl
mov
fistpl
jb
fisubs
mov
sbb
loop
nop
test
mov
pop
cmp
test
xchg
cmc
cs
fbstp
xor
daa
dec
add
sub
in
js
std
loopne,pt
jo
mov
rcll
insb
sbb
mov
inc
clc
in
mov
pop
mov
sbb
test
jbe
ret
rclb
leave
popa
cwtl
andb
es
div
push
fs
mov
jle
inc
mov
sti
cmp
jl
mov
int3
outsl
nop
shll
rolb
in
xchg
or
gs
jp
loopne
fiadds
push
out
insl
mov
push
mov
mov
dec
icebp
dec
out
adc
mov
sub
cmpsb
imul
pop
test
dec
cwtl
adc
mov
stc
lret
popa
dec
mov
jp
mov
or
movsb
test
clc
cwtl
aam
dec
ret
jg
in
adc
pop
mov
mull
push
sub
test
pusha
fcoml
test
xor
sub
inc
jnp
fidivl
idivb
pushf
sub
fcmovu
lea
movsl
and
sbb
mov
mov
fldt
stos
push
sbb
add
mov
jne
jge
xchg
cmpsb
sub
jbe
or
hlt
adc
arpl
in
js
sbb
jg
cmpsl
xor
in
inc
sahf
and
cmp
cs
in
daa
and
xchg
push
and
test
data16
iret
pop
inc
or
out
cmp
cmpsb
imul
lods
mov
cmp
xorl
xor
mov
ja
loope
stos
sbb
jge
roll
or
sbb
sarl
inc
rcrb
stc
xor
add
iret
aas
fidivrs
add
stc
inc
imul
stc
fdivs
stc
dec
repz
pop
fxch
jmp
jo
cmpsl
jo
rep
arpl
sbb
inc
add
sti
ljmp
scas
adc
push
in
in
int3
adcl
dec
scas
add
sbb
cmp
jle
fs
imul
adc
lahf
mov
test
js
or
jecxz
lret
outsb
jbe
jge
iret
int3
out
loopne
leave
lea
xchg
jmp
adc
lcall
xor
mov
sub
cmc
test
enter
sbb
icebp
lcall
fimull
and
push
stos
stos
and
xor
test
xchg
imul
popa
sub
outsb
rcrl
dec
out
jle
frstor
pushf
sbb
les
imul
fcomp
mov
int
mov
lods
jg
or
jmp
inc
divb
inc
push
cmp
or
fcmovnb
mov
and
mov
bswap
repnz
sub
pusha
aad
in
outsl
cmpsl
icebp
and
cmp
dec
xchg
sbb
cmp
jl
scas
lea
not
inc
mov
dec
cmp
sbb
pop
lods
sub
aaa
stos
frstor
dec
movsl
aam
popa
pusha
test
ja
xchg
dec
push
push
sub
shl
sbb
and
xor
divl
xchg
add
xor
cmpsl
push
xchg
jmp
and
or
out
mov
rcl
lods
imul
mov
lock
in
addb
xchg
push
jge
popa
mov
push
sarl
std
orb
bound
cmp
push
nopl
lsl
stos
adc
in
push
adc
pop
sbbb
xor
or
mov
and
bound
and
loope
jle
leave
mov
rcrl
push
adc
mov
addl
fwait
loopne
movsl
lcall
cltd
dec
pop
sbb
ja
add
dec
out
sbbb
inc
mov
xor
mov
imul
lea
sbb
sbb
xor
sbb
cwtl
pushf
push
ljmp
imul
stos
push
pop
andl
mov
mov
jge
test
pop
pop
rol
js
pusha
push
mov
xor
cmp
xor
adc
or
xchg
inc
pop
mov
out
nop
xchg
sbb
lret
clc
pop
aas
std
sti
xchg
pop
mov
cmpsb
mov
sub
sub
mov
hlt
aas
cmpsl
push
or
dec
cmp
xlat
jb
nop
inc
and
lea
icebp
test
imul
pop
in
pop
add
add
mov
shl
mov
inc
stos
xchg
cld
sti
lods
dec
movl
pop
pop
pusha
or
or
dec
inc
adc
ja
jo
fiadds
inc
ljmp
ds
cmp
outsl
adc
xchg
lret
cmpsl
testb
aaa
out
aad
inc
mov
cmp
xor
enter
fcomps
lret
mov
add
xor
push
je
lahf
jnp
sub
jo
add
xchg
sbb
or
inc
icebp
sub
and
aam
clc
jae
push
or
xchg
pop
rcl
fstps
push
cmp
imul
mov
push
jae
test
sbb
push
mov
setne
jb
loop
call
sub
or
fwait
lods
fsubrp
xor
test
pop
lea
cli
stos
mov
cmpsl
pop
and
jmp
and
xlat
mov
mov
fimull
sub
mov
out
fs
adc
jnp
add
std
gs
hlt
int3
inc
push
cmp
cli
clc
idiv
sbb
ret
xlat
sar
mov
add
dec
mov
aas
mov
fisttpll
sub
lds
rolb
stos
or
jl
scas
push
inc
pop
pushl
inc
xor
aad
adcl
xchg
xor
lock
inc
add
paddsw
pop
clc
test
mov
jmp
stos
int3
xor
jmp
mov
mov
adc
scas
add
cmp
sbb
aad
outsl
scas
aas
movsl
test
dec
sbb
mov
xor
mov
adc
je
repnz
fnstcw
jb
lea
jmp
inc
xor
mov
add
jp
lock
data16
jae
shll
cwtl
dec
xchg
xor
sub
xor
mov
sub
xorb
sarl
imul
scas
pop
dec
fsub
xor
xor
js
fprem1
out
lahf
repz
mov
inc
gs
sub
sahf
sub
movsl
pop
jnp
mov
in
add
add
mov
jnp
dec
adc
or
imul
mov
insl
or
jp
or
xchg
push
mov
outsl
cli
push
ret
sbb
cmp
ja
push
test
arpl
and
push
cmp
add
jb
jmp
mov
mov
out
jmp
dec
push
adc
ret
arpl
xchg
iret
push
rolb
xchg
in
jbe
lcall
orl
outsb
adcl
or
sub
leave
mov
cmpsb
sub
xor
or
or
into
mov
imul
inc
adc
rcll
repz
xchg
xchg
push
mov
push
clc
movsl
mov
int
adc
insl
add
out
adcb
gs
mov
jae
inc
jmp
xchg
add
fidivrl
daa
and
inc
aaa
mov
fildl
std
pop
ja
pop
adc
idivb
add
sti
dec
dec
lcall
xor
jno
pushf
inc
aaa
addr16
nop
push
add
fcoms
jns
movsb
mov
repnz
ds
xchg
cmc
jne
test
rcrl
in
jge
jnp
rol
mov
jmp
sbbb
mov
xor
sub
lahf
mov
adc
dec
loop
sahf
iret
mov
jno
xchg
sbb
dec
out
aaa
or
fstl
xor
arpl
mov
sarb
ss
leave
mov
xor
and
xchg
in
xor
jp
pop
push
xchg
clc
gs
and
xchg
rorb
jp
aad
insl
lods
enter
mov
xchg
lea
pop
xlat
data16
repz
gs
adc
cs
lods
jne
inc
imull
sbb
xorb
inc
adc
clc
mov
xchg
iret
pop
ficoml
mov
sub
cmc
addr16
lret
negb
xchg
xor
mov
sbb
subl
mov
cmp
inc
sub
push
test
mov
mov
loope
cmp
push
sub
or
cmp
dec
pop
stos
xor
mov
push
lahf
or
sbbb
inc
adc
add
lods
imul
lods
inc
xchg
outsb
lea
jecxz
cmc
cmp
push
jnp
lcall
mov
dec
es
push
jae
mov
lahf
pop
lds
push
push
jnp
ljmp
out
fs
es
out
or
mov
cmp
inc
push
sbb
sbb
ret
adc
mov
xor
mov
aad
mov
cli
xchg
je
ss
and
push
fisttpl
loopne
aad
xor
enter
fbld
outsl
push
and
sub
mov
icebp
daa
rolb
jl
roll
mov
out
cmp
add
add
sbb
jge
mov
jp
or
xor
inc
mov
cmpsb
cltd
xor
jns
daa
jl
mov
jb
test
jo
mov
les
dec
mov
out
jmp
sub
pop
or
adc
inc
fstpl
pop
xor
mov
cmp
sub
or
and
pop
mull
movsb
lea
dec
lret
mov
rcll
imul
jmp
fnstenv
js
in
fwait
xor
push
clc
div
sub
aas
mov
into
les
cmp
mov
push
jge
cmpsb
xor
jbe
pop
mov
pop
push
popa
cmp
mov
sub
mov
mov
out
cli
cli
add
xor
cmpl
repz
sub
fistpll
push
sub
lods
mov
inc
push
in
dec
sub
lret
mov
xchg
daa
push
popf
maskmovq
notl
sub
aam
loopne
push
arpl
mov
pop
inc
add
test
in
out
lcall
dec
inc
mov
mov
jns
sub
int
jne
loope
imul
notb
cltd
jb
push
xlat
pop
jns
ret
out
insl
gs
scas
push
mov
cmp
fists
in
mov
int3
dec
add
pop
rorl
adc
sub
repz
cmc
stos
xor
pop
mov
loopne
lds
and
out
push
inc
jecxz
mov
cmp
pop
dec
jns
xchg
add
jmp
jnp
popf
fcomi
mov
call
mov
pop
rcl
mov
xorb
or
jbe
cmpsb
lcall
loop
and
in
push
cmp
push
ljmp
or
in
aad
aad
sub
ud2
aaa
add
mov
mov
roll
mov
mov
stos
add
pop
or
jns,pt
fisttpl
ficoml
int
push
pop
gs
jns
loope
mov
in
hlt
pop
lret
fsubrl
pop
jg
aaa
out
aam
jl
scas
sub
sti
adc
and
inc
cmp
inc
xor
mov
xor
xlat
or
mov
push
movsb
add
sub
outsb
rorb
sub
lds
xlat
frstor
lret
mov
in
adc
cmp
cmpb
add
pop
rsqrtps
sbb
movsb
sub
sub
pushw
or
mov
jl
mov
inc
mov
in
xor
pop
jl
insl
ss
and
mov
lret
jmp
or
pop
imul
fnstcw
mov
sub
cmp
or
sahf
mov
push
repnz
ret
dec
mov
adc
xchg
popa
jne
je
lods
popf
and
push
mov
dec
in
test
add
mov
repz
jg
xchg
popf
ds
mov
sarb
lret
ret
addl
enter
mov
jecxz
lods
rcl
mov
shrl
arpl
jge
jmp
mov
movsl
pop
ret
mov
inc
mov
icebp
outsb
cltd
repz
mov
mov
sbb
cld
sarl
into
scas
inc
add
cmc
jl
mov
rclb
je
and
rcl
imul
sti
add
test
mov
dec
or
push
icebp
or
shll
sub
ss
mov
sbbb
lods
sbb
ret
lcall
cmp
push
jne
enter
lahf
jbe
pop
xchg
fsts
rorl
mov
xchg
int3
sub
outsl
out
inc
xchg
and
lea
into
clc
inc
loopne
push
cld
mov
nop
mov
add
xchg
jnp
adc
fdivrl
jne
xor
jp
jmp
jmp
pop
iret
int
xor
scas
test
mov
rorb
insl
and
xchg
adc
repnz
xchg
add
shlb
fs
js
loop
push
mov
test
out
mov
push
shrb
dec
cli
bound
push
loop
mov
lret
aaa
jp
divps
call
dec
ja
dec
cmp
test
xlat
out
xor
mov
rol
and
loopne
xchg
pop
loop
std
sbb
imul
or
mov
mov
push
mov
bound
das
jb
or
daa
inc
lret
leave
test
outsl
and
sti
inc
mov
xor
sti
lret
push
cmp
push
cld
lcall
call
adc
xchg
push
push
inc
mov
cli
das
jecxz
cld
ja
adc
sub
dec
or
sub
sub
popa
ds
push
push
inc
shlb
xlat
jne
lea
bound
jl
mov
mov
fists
fwait
xlat
repz
and
sub
stos
cmp
hlt
in
dec
cltd
mov
notl
stos
fistpll
je
sbb
xchg
jp
sbb
or
in
sbb
or
add
test
hlt
sbb
mov
xchg
call
mov
ja
xchg
test
lcall
pop
fdivrl
daa
and
lods
sbbb
sti
sbb
adc
pop
adc
push
je
sbb
push
push
flds
and
pushf
or
repnz
dec
and
cmpsb
stos
mov
push
mov
call
inc
pop
xchg
jb
mov
or
pushf
fadds
dec
fst
mov
mov
data16
dec
movl
push
cmpsb
mov
dec
jne
lret
adc
dec
jne
pop
aam
inc
in
cltd
jl
adc
ljmp
fdivrl
cmp
es
xor
sub
lret
jle
popf
bound
inc
rcrb
lds
addb
rcrb
leave
add
insl
sbb
sar
jge
cmp
scas
hlt
icebp
mov
mov
fmuls
xchg
xor
das
in
scas
fsubs
testb
stos
scas
rorl
push
cld
jle
cmp
cwtl
push
add
aaa
test
xchg
andl
push
jno
mov
push
push
pop
xchg
fimull
loope
jb
xchg
sbb
jbe
sub
loopne
sub
jmp
cmp
lds
dec
ja,pt
mov
adc
cmpsl
and
enter
in
xchg
sub
scas
inc
jb
mov
hlt
and
push
sub
fadd
mov
test
dec
ret
in
pop
repnz
pop
add
adc
out
pop
dec
cmp
decb
xchg
leave
xor
rcr
cmp
xchg
mov
clc
adc
mov
pusha
xchg
push
add
adc
addb
cwtl
mov
shrl
add
fsubr
jno
mov
mov
xchg
arpl
lcall
lods
movsb
in
mov
das
xor
fs
and
out
pop
mov
testl
sub
mov
xchg
mov
or
test
mov
sub
push
and
testl
jle
dec
xchg
lock
into
jnp
lock
fcmovne
imul
and
cmc
mov
adc
shll
jge
sti
mov
sbb
cs
fimuls
cli
push
adc
mov
inc
sbb
xor
sub
push
ret
dec
xor
stos
fidivs
loopne
sbb
push
adc
fdivrl
cmp
aaa
loopne
in
xor
mov
dec
push
push
push
fisttpll
pop
xchg
ret
ret
fsubs
andl
inc
insb
inc
arpl
jno
aaa
jp
arpl
sbb
lret
xchg
sbb
jb
xor
ss
scas
mov
xchg
add
outsl
push
loope
mov
nop
add
insb
xchg
cltd
jl
lds
scas
push
adc
mov
hlt
mov
sahf
gs
push
sbb
pop
jb
mov
cmc
push
inc
adc
mov
cmpsb
xor
dec
cmpsl
or
jnp
movsb
pop
lock
adc
push
lods
add
fcoms
pop
jmp
lahf
aaa
mov
mov
nop
test
hlt
sar
dec
and
jb
leave
stos
outsb
cmp
mov
mov
rcll
inc
popa
out
lods
mov
add
sbb
mov
cli
or
mov
mov
mov
call
gs
push
jnp
or
mov
stos
stos
xor
cld
ret
or
mov
lods
jb
or
adc
sbb
mov
xor
mov
pop
mov
daa
je
xchg
or
lahf
add
aas
aas
push
pop
and
ror
sub
sbb
dec
xchg
mov
std
loopne
rolb
inc
xchg
out
and
inc
and
push
hlt
mov
push
and
push
adc
lods
xchg
mov
adc
pop
and
pusha
aaa
push
sub
sahf
push
pop
add
jp
jns
es
jns
lds
out
addr16
mov
jg
push
push
out
mov
mov
push
pop
fmull
xor
adc
aas
insl
repnz
mov
mov
jnp
sbb
out
js
sbb
pop
lds
and
shl
push
outsl
scas
cmp
int
pop
in
pop
mov
cld
loop
pop
dec
add
mov
cltd
cmp
mov
cmpsb
std
inc
aad
out
test
jnp
xchg
xor
popa
outsl
jmp
sarb
adc
loope
aad
mov
in
arpl
leave
sub
adc
lds
and
mov
inc
aad
fs
stos
dec
shlb
cmpl
leave
out
dec
loop
xor
jg
lds
xorl
jle
popf
cli
clc
aad
addl
shr
movsb
push
xchg
filds
mov
mov
xchg
pop
mov
inc
xchg
mov
pushf
icebp
push
shll
in
pop
xchg
and
es
push
or
cmp
jo
sarb
out
dec
xor
cld
mov
movl
and
decl
push
sti
push
imulb
pop
loope
call
and
xchg
mov
inc
aaa
nop
jg
jae
gs
sub
sbb
inc
sti
adc
add
push
mov
in
fwait
xlat
adc
repnz
xchg
imul
dec
adc
out
cs
xchg
mov
and
cld
jns
test
xor
cmpsb
cmp
push
push
push
lcall
sbb
in
sub
inc
pop
dec
push
mov
daa
mov
pop
repz
and
ds
add
shl
or
cmp
mov
inc
mov
aaa
mov
adc
sub
push
ljmp
jns
cmpb
jo,pt
sub
xchg
xor
imul
aad
jns
pop
mov
xchg
xchg
xchg
out
ds
xor
es
outsb
inc
xchg
arpl
xor
jae
shlb
out
xor
lahf
push
mov
ja
ficoml
adc
leave
sbb
mov
mov
rcrl
mov
pop
cmp
mov
dec
pop
mov
inc
aas
jle
lcall
dec
aam
lods
fstp
mov
ret
cltd
pusha
cmp
jl
push
adc
adc
mov
inc
aaa
loop
mov
jl
leave
pop
ja
mov
sbb
xlat
xchg
outsl
ljmp
pushf
xchg
pop
cmpsl
mov
jl
pusha
xchg
sub
out
cmp
sahf
mov
mov
and
stc
inc
sbb
lcall
in
jo
adcl
and
icebp
mov
xor
xchg
insb
jle
xchg
test
inc
fimuls
push
sahf
std
int3
push
loope
xorb
cld
inc
mov
popf
rcr
arpl
insb
jge
pop
cmp
lahf
sub
push
cmp
inc
jg
or
jns
inc
jae
lods
xchg
add
jbe
push
icebp
imul
mov
dec
sub
mov
aaa
sbb
pusha
and
ret
ljmp
cmp
or
aas
inc
adc
in
and
mov
add
sbb
push
enter
cli
mov
inc
lcall
pop
pop
test
add
aaa
inc
push
icebp
push
push
dec
das
jae
sbb
cmp
stos
add
jmp
lods
lea
insb
stos
js
mov
add
cli
arpl
pop
jb
inc
into
cmp
push
pop
ja
fs
imul
aad
inc
push
fmulp
aam
pop
mov
cmpsb
lods
jno
ret
add
test
mov
in
lret
mov
pop
mov
popf
xchg
cmp
add
popa
xchg
and
stos
in
mov
pop
or
lcall
into
sbb
add
mov
stc
das
dec
enter
inc
jae
mov
push
dec
call
dec
outsb
ficomps
pop
popa
insb
xchg
or
in
les
ret
cmp
jne
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
xor
sub
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
jmp
mov
dec
mov
jge
push
cmp
jp
fstpl
jp
jb
ret
mov
lret
dec
cld
loopne
pop
and
pop
loope
int
mov
sbb
cmp
cs
out
lret
add
inc
fs
cmp
or
ss
ror
sbb
and
in
fwait
jl
rorb
push
add
dec
xchg
add
push
lcall
sub
pop
xor
or
cli
js
call
mov
lea
sbb
std
mov
loope
mov
sar
bound
push
jmp
and
int
test
dec
hlt
jg
outsl
dec
stc
gs
jae
mov
fs
sub
jge
subl
test
add
inc
fisttps
fistpll
in
xchg
push
int
out
adc
out
in
push
mov
rcll
or
lods
js
jl
cmp
push
sti
int3
push
jecxz
mov
push
xor
dec
mov
jns
enter
and
mov
cmpsl
loopne
scas
sub
push
aad
negb
aaa
rolb
out
cs
aam
or
fcmovnb
push
and
aam
xchg
ljmp
or
cli
inc
sub
loop
dec
sti
nop
inc
sub
jno
repz
sbb
jns
jecxz
push
dec
std
jnp
pop
sub
fisubl
cmc
push
mov
push
mov
pop
shlb
call
bswap
sbb
addr16
jp
popa
ret
jp
xor
in
fbld
iret
fucom
dec
ficompl
int3
xchg
lds
xlat
pop
mov
mov
push
cltd
dec
fdivrl
por
fwait
inc
ss
pusha
cli
inc
jns
and
mov
jno
jecxz
inc
xor
iret
lcall
jne
xchg
fidivl
jmp
jo
sahf
push
addr16
sub
or
les
scas
lret
push
or
imul
lods
aaa
fdiv
add
sub
addr16
xchg
in
xchg
fwait
jno
pop
pusha
imul
dec
stos
push
out
jae
je
jns
jns
ret
inc
in
mov
pop
movsl
aas
ds
sahf
mov
mov
test
mov
jl
mov
lahf
idivl
lcall
popa
dec
je
loope
mov
insb
lcall
fldcw
insb
ret
or
add
jo
dec
fdivs
xchg
sbb
push
mov
inc
inc
mov
mov
std
sarb
cmpsl
xor
mov
pop
mov
js
xor
and
mov
jo
sub
add
cmp
scas
mov
mov
or
ja
and
adc
add
lods
cld
or
popf
push
and
out
inc
xor
jae
scas
cmc
lea
add
mov
and
dec
fisubl
mov
testb
test
fistps
out
scas
sti
xor
add
jae
test
sbb
xchg
shrb
dec
jp
push
fwait
insb
push
xlat
sub
or
sbb
mov
adc
add
cld
loop
stos
cmp
stos
jge
ds
dec
ficoms
mov
je
hlt
dec
fldt
and
loopne
js
or
lock
pop
jae
clc
pop
loopne
adc
mov
movsb
js
sub
mov
gs
es
popf
sub
pushf
addr16
mov
in
cld
jns
sub
pop
and
repz
xchg
sub
dec
lret
pop
inc
test
cmp
into
mov
xchg
sbb
push
popf
cmp
insb
cltd
sbb
jno
pusha
cmp
in
rdmsr
std
sbb
lock
loope
aad
outsb
cmp
cmp
xor
mov
inc
int3
pop
cmpsb
lods
cmp
mov
lock
or
rolb
add
in
cmp
test
shll
mov
pop
les
jnp
push
mov
inc
lods
mov
jl
add
xorl
loop
xor
jp
test
and
pop
mull
or
xor
dec
add
addl
mov
lcall
outsl
cmp
sbb
dec
push
mov
leave
mov
jb
sar
dec
sub
dec
add
js
inc
shll
insb
loope
out
cmp
pop
ret
inc
stos
mov
pop
ret
adc
cmp
push
cmp
fisubs
sub
mov
mov
scas
mov
pop
dec
iret
inc
dec
out
xchg
mov
xorl
and
or
jmp
pop
insl
xor
adc
pop
xchg
ret
xchg
jg
push
jecxz
cmp
pop
test
pop
or
adc
pop
fdivrp
ja
repnz
dec
fstpl
sub
pop
mov
and
dec
pop
pop
pop
call
sub
sahf
push
sub
pop
mov
push
xor
stos
jl
vmread
mov
orb
jns
in
lods
and
xchg
adc
xchg
add
loopne
or
dec
inc
lea
sbb
cmp
fwait
jp
or
xchg
fimull
into
arpl
shlb
xchg
popa
insl
imul
jno
push
pusha
and
fs
pop
add
insb
repnz
jg
mov
dec
mov
and
ret
jg
sti
out
dec
mov
ja
or
popa
push
mov
in
mov
sti
dec
sub
jl
rcr
cltd
adc
inc
test
xchg
and
push
addl
and
mov
sarl
sbbl
mov
cmpsl
fldt
clc
push
sti
sub
push
scas
mov
dec
jmp
sbb
test
adcb
sbb
cmp
adc
push
test
mov
dec
adc
test
icebp
pop
ljmp
dec
dec
lods
jl
hlt
scas
fisubs
mov
xchg
mov
pusha
mov
inc
repnz
pushf
add
ja
or
adc
subb
dec
inc
xchg
imul
sub
mov
mov
cmp
sub
into
or
mov
lds
inc
scas
dec
dec
imul
inc
inc
lock
dec
test
pop
or
sbb
and
or
mov
sbb
ja
xor
cli
leave
dec
cmp
pop
call
popf
add
dec
in
in
imulb
les
add
mov
push
popl
mov
cs
stc
nop
jecxz
stos
loop
pop
lcall
jns
xor
sbb
imul
in
xor
es
mov
ret
loop
push
fsubr
sbb
add
xor
add
call
ret
and
iret
xor
aas
popf
aaa
ljmp
hlt
insl
and
cs
jp
ss
or
fisttps
ljmp
xchg
lock
cmpsb
lds
iret
lcall
add
in
cld
ja
popf
push
ljmp
sbb
mov
jecxz
fistl
dec
add
js
pushf
jg
sbb
pushf
std
lea
stos
pop
jo
call
fildll
inc
test
pop
inc
mov
sbb
rolb
cli
insl
push
stos
scas
out
mov
pop
nop
mov
pop
pop
sub
pop
call
jp
jecxz
sbb
in
jle
jb
sbb
ds
mov
rcl
mov
mov
ss
shlb
mov
mov
xchg
js
add
out
push
inc
popa
rcr
fcmovne
push
fcmovne
mov
jecxz
xor
add
sub
ja
or
dec
sbb
fstl
dec
roll
mov
lcall
nop
or
jo
ja
sbb
cmp
mov
xor
sub
or
xor
std
push
out
pop
fisubs
and
sub
es
jne
insl
leave
adc
sub
sub
mov
or
push
js
cmp
adc
ja
clc
out
ds
in
stos
sub
adc
mov
gs
fisttpll
in
push
shrb
lods
cs
test
cltd
ljmp
sub
dec
push
int3
xor
sub
das
insb
add
mov
add
mov
test
xchg
movsb
mov
lret
sbb
call
inc
pop
or
mov
loop
cmpsl
xchg
sub
dec
push
fistl
fs
sub
out
test
sbb
sbb
stc
fwait
es
mov
cmp
jmp
stc
or
xchg
arpl
mov
xlat
aaa
pop
scas
icebp
out
clc
pop
add
jns
ror
xlat
ror
add
popl
popa
sbb
data16
popf
sub
cmc
stos
jge
subl
dec
or
loop
mov
loope
mov
enter
vpaddusw
cmp
jae
movsb
push
push
jl
xchg
sub
xchg
scas
lahf
mov
mov
scas
mov
loop
test
xchg
fistps
enter
adc
add
dec
dec
test
xor
in
push
pop
cmpsl
push
adc
mov
in
out
pop
xchg
or
js
arpl
inc
sub
sub
adc
adc
sbb
stos
test
cltd
fisubs
int
cmc
pusha
shlb
jbe
cli
bound
lods
add
icebp
in
ds
mov
xor
shlb
mov
adcl
adc
xor
cwtl
mov
inc
jge
pushf
nop
jns
or
and
or
push
push
sarb
xchg
flds
ljmp
add
xchg
mov
mov
jb
leave
fs
push
add
cmp
sarl
faddl
jb
sahf
adc
fisttpl
lock
or
addb
daa
repnz
sti
mov
clc
repz
dec
std
lret
xchg
aam
adc
pop
movsl
lods
fwait
stc
icebp
pop
inc
call
outsl
in
lret
popa
arpl
movsb
mov
mov
adc
call
push
in
cmp
mov
in
and
mov
insb
jecxz
push
leave
fcompl
jl
fsubl
ret
pop
loope
les
mov
mov
movsb
and
enter
dec
sub
popf
sbb
sbbl
inc
or
dec
inc
scas
icebp
mov
lret
pop
dec
push
ja
adc
popf
lea
and
dec
pop
out
jno
nop
jbe
push
out
mov
inc
xchg
pusha
mov
dec
and
outsb
cs
sbb
and
xchg
or
mov
fucomi
pop
lret
jp
cltd
cmpsl
mulb
lods
jno
sub
cmp
gs
sbb
hlt
inc
call
push
sub
xchg
in
jo
mov
dec
sub
loope
outsl
xchg
mov
ret
stc
adc
add
xchg
aaa
push
xchg
pop
ficomps
loopne
mov
dec
mov
insb
xor
sti
jno,pn
jge
out
repnz
lods
inc
mov
mov
sub
adc
fwait
addb
or
enter
jbe,pn
xor
or
pushf
pop
daa
cmc
lcall
addr16
movsl
xor
push
sarl
add
fnstenv
xor
push
imul
pop
or
lret
pop
fisttps
cmp
inc
xchg
xchg
inc
imul
cmc
inc
pop
cmp
decl
mov
ret
pop
jno
cmp
push
mov
or
ss
out
xor
ljmp
int
mov
ret
dec
xor
out
clc
js
andb
notl
or
mov
push
inc
out
pop
mov
push
scas
jle
jg
inc
xor
pushf
sahf
fisubl
push
xchg
cmp
and
mov
test
sbb
xchg
jae
mov
dec
outsb
xchg
sti
cmpsl
inc
push
imul
lods
sub
fdivr
xchg
xchg
xchg
jl
adc
sub
mov
pop
call
jp
gs
mov
aas
test
sbb
and
lcall
xor
jo
in
pop
pop
icebp
xchg
xchg
mov
inc
lret
cmc
push
and
aad
cwtl
and
pushf
imul
mov
shrb
testl
inc
aad
rorb
adc
jo
lcall
dec
jmp
mov
add
cli
or
stos
jno
lcall
xor
nop
lods
pusha
out
push
xor
jae
mov
ror
scas
jno
or
lahf
inc
in
das
adc
sub
inc
jg
add
and
lock
fprem1
mov
mov
test
jmp
clc
scas
cmp
mov
jo
jle
imul
jl
jge
mov
adc
fld
lahf
mov
inc
dec
xorb
sbb
cmp
push
inc
pop
mov
lret
xor
sbb
mov
push
test
mov
fidivs
dec
cs
mov
call
pop
jb
aam
adc
mov
shll
dec
xchg
sarl
lock
or
jmp
or
jno
mov
adc
fdivl
jl
and
aad
out
adc
scas
fs
enter
sub
ja
subl
pop
fsubs
mov
icebp
test
xchg
insl
mov
mov
sub
sbbl
cli
cwtl
mov
push
stos
dec
je
insl
mov
sbb
test
fwait
mov
mov
mov
test
stos
inc
out
leave
cmp
ds
cmp
hlt
add
loopne
fisubrs
nop
loope
pop
jle
out
lret
adc
into
adc
subl
inc
mov
and
fsubs
and
inc
cli
dec
pop
negb
hlt
mov
pop
sbb
xchg
mov
movsl
xor
repz
mov
add
cmp
inc
decb
push
dec
jle
pusha
and
cmp
jbe
inc
aad
push
aaa
scas
nop
addb
idivl
adc
xchg
adc
mov
push
cmc
push
fstpt
lret
lea
bound
cmp
enter
leave
aas
push
xchg
dec
pop
mov
cmpsb
sub
adc
cmpl
push
scas
fists
add
jno
sub
jmp
scas
arpl
stos
jno
jp
movq
sbb
test
movsb
push
cmp
or
imul
mov
js
xchg
in
enter
fsts
scas
test
rcl
stos
cmp
mov
push
pushf
adc
mov
fstl
je
dec
inc
outsb
dec
inc
jbe
jg
adc
jge
mov
mov
shrl
sahf
mov
cmp
std
pop
or
cmp
push
dec
leave
inc
fsubs
mov
jmp
ret
dec
loop
jl
add
dec
jg
movb
rorl
push
stos
pop
add
cmp
rorl
cwtl
pop
jp
scas
cmp
mov
ret
and
sti
mov
sub
ret
xor
enter
xor
pop
mov
bound
lret
add
cmp
dec
iret
sub
push
pop
pop
xor
push
cmp
adc
jns
xor
faddl
loope
out
mov
mov
gs
add
pop
push
ja
not
and
adc
inc
mov
pop
mov
arpl
ljmp
xchg
movsl
jmp
je
cmc
sub
adc
in
mov
cmp
fisubrs
cltd
xchg
xor
or
fidivrl
push
xorb
push
cmp
rep
fs
jg
mov
test
push
inc
jle
add
lahf
xchg
cli
dec
and
lcall
inc
call
jne
scas
test
ficomps
int
test
xlat
cld
loopne
fidivs
push
sbb
jle
jge
loope
or
dec
inc
clc
push
pop
int3
out
xor
rorb
fsts
fcomp
fdivrs
cmp
push
ficomps
ss
pop
pop
mov
and
add
push
repnz
sbbb
pop
xchg
pushf
mov
mov
cli
lock
call
push
inc
repnz
push
cwtl
aam
cmp
cwtl
dec
scas
inc
js
xchg
sbb
testb
and
sbb
icebp
add
pop
push
push
and
sub
xor
mov
loopne
add
xchg
imul
or
ja
add
enter
loopne
jne
clc
or
into
sub
rcl
xor
je,pt
xchg
mov
adc
mov
rcrb
cmpsl
mov
mov
pop
shlb
mov
dec
outsb
mov
jp
ja
adc
hlt
aam
ficoml
pop
push
arpl
jl
sub
mov
outsl
inc
sub
inc
sbb
mov
sub
sub
cmpsb
pop
push
roll
add
fstps
push
inc
sub
hlt
lods
pop
popa
pop
lcall
lods
jecxz
xchg
push
xor
hlt
jns
ret
nop
lds
lcall
add
scas
xchg
sbb
push
gs
icebp
inc
adc
or
ja
lret
pop
cmp
jnp
movsl
xor
mov
cmp
test
iret
xor
addb
inc
stc
mov
test
sub
jmp
and
xor
bound
cmpb
rcl
mov
std
mov
or
jnp
dec
ljmp
das
sub
push
bound
lock
inc
pop
iret
xchg
sahf
icebp
mov
jnp
xor
pop
jl
lahf
push
pop
in
mov
mov
sub
lea
jns
mull
shrb
fstl
mov
xchg
addr16
lahf
fildll
and
scas
xor
pop
jno
insl
mov
fstpl
out
sbb
cwtl
xchg
mov
inc
fprem1
ret
jle
fs
and
stos
dec
jb
fs
lds
mov
add
mov
jnp
cmpsb
out
out
out
lock
jbe
orb
or
sbb
mov
out
fdivl
cmc
lock
dec
es
dec
mov
jle
xchg
jmp
mov
jae
xchg
and
adc
push
pop
push
add
mov
and
push
lock
xor
aad
into
fidivl
inc
and
dec
mov
xchg
jmp
adc
in
add
push
popf
divl
adc
scas
pop
xchg
iret
jno
pop
pop
xor
mov
rcll
out
dec
sti
gs
push
jecxz
add
inc
cld
jnp
loope
mov
sbb
daa
pop
sub
scas
dec
out
fdivr
dec
in
jg
xor
adc
pop
lcall
mov
or
lcall
push
inc
mov
push
repnz
mov
out
cmp
jae
push
pop
imul
out
adc
insb
leave
sub
jbe
dec
paddusb
subl
leave
xor
lods
pop
out
in
inc
stos
movsb
or
push
push
cmp
pop
imul
jno
cmp
test
inc
push
in
dec
mov
jp
cmp
outsl
popf
int3
pop
icebp
mov
and
scas
cwtl
stc
leave
in
fcoms
xor
lea
adc
dec
sbb
inc
pop
sbbl
pop
jb
pop
mov
inc
int3
or
out
test
jae
out
insb
inc
cmpsl
stc
adc
fbld
outsb
sbb
mov
leave
xlat
int3
mov
mov
xor
out
ljmp
fs
test
rol
push
pop
idiv
aaa
fs
adc
ficompl
inc
mov
outsl
sar
fcompl
mov
sub
mov
lds
push
lock
push
or
mov
scas
imul
es
cmp
pop
sbb
mov
flds
sub
clc
divb
sbb
jp
dec
jl
icebp
xchg
leave
int
pop
dec
mov
mov
enter
push
lahf
fsubrs
test
or
inc
stos
jnp
rorb
arpl
outsb
jle
into
inc
xlat
sub
pop
popa
mov
jecxz
xor
int3
loope
addr16
adc
adc
sarb
pop
fildll
loop
adc
mov
xchg
fsubl
cs
pop
add
pop
in
or
adc
imull
lret
subl
ss
stos
sbb
mov
fidivs
addl
mov
out
jmp
mov
adc
and
xchg
in
add
and
push
push
adc
or
aaa
pop
push
out
or
cmp
xor
jbe
push
adc
aaa
xchg
popf
jne
fcoml
sub
xchg
jecxz
mov
bound
xchg
daa
and
lahf
xchg
sbb
mov
xchg
fisttps
mov
pop
out
add
lea
mov
or
ss
fsts
jl
jg
lods
test
sub
loope
inc
or
or
ret
shll
mov
into
or
mov
pop
mov
mov
adc
mov
stc
es
adc
scas
mulb
pop
cltd
lods
repz
scas
dec
ret
movsb
cli
sbb
scas
ss
dec
pop
shll
fsubs
in
mov
add
cs
subl
jb
js
cmp
xchg
push
cmpb
mov
xlat
xchg
push
dec
mov
das
push
lds
loopne
adc
push
push
push
loopne
mov
cmp
and
ds
mov
sti
jnp
pop
test
test
cmp
into
mov
mov
sar
sbb
cwtl
lret
in
xor
fnstcw
fistl
sbb
leave
and
mov
cmp
mov
mov
mov
addr16
mov
imul
jbe
mov
ret
xchg
jle
or
arpl
mov
loop
inc
int3
fmull
sbb
popa
mov
and
sub
push
lods
rorb
bound
outsl
in
lods
ja
lcall
pop
and
insb
xor
sub
mov
sbb
or
mov
mov
pop
repnz
dec
adc
push
pop
out
lods
mov
es
int3
loope
xchg
sub
inc
sbb
and
sub
mov
mov
repz
fwait
pop
movsl
stos
xor
pop
xor
dec
aaa
popa
sbb
sub
mov
fidivl
sbb
lcall
pusha
add
or
imul
bt
xchg
adc
sub
xchg
adc
lahf
push
jno
push
or
jbe
in
lods
iret
add
mov
lret
je
stos
gs
inc
rclb
scas
or
mov
xchg
call
lea
stc
rcrl
scas
pop
in
pop
aad
pop
dec
loopne
add
xor
push
xchg
insl
xor
jmp
adc
je
lcall
jmp
nop
xchg
pop
shll
mov
daa
xlat
push
xchg
jne
loop
mov
adcb
adc
faddp
sbb
adc
mov
fimull
mov
push
or
stos
jbe
xor
sbb
adc
lcall
or
mov
or
fnstsw
xchg
add
pop
add
xor
shl
jp
fildl
int3
jl
xchg
ja
inc
push
xor
jo
and
adc
sahf
mov
or
xchg
stc
sub
jp
dec
jecxz
push
add
pop
add
sti
inc
mov
mov
dec
xchg
pop
and
dec
flds
clc
pop
repz
scas
dec
push
popf
cmp
aam
fstps
test
jno
pop
js
xor
lea
aam
xor
loop
xchg
inc
cs
add
push
movsl
bound
mov
loopne
dec
pop
cmpsl
mov
mov
xchg
insl
leave
cmp
cmpsb
push
mov
mov
fistl
bswap
add
ret
pusha
mov
sub
sti
inc
ss
aas
jg
xchg
inc
fbld
xor
scas
lods
in
mov
popa
pop
mov
push
mov
add
imul
cmp
mov
jmp
sbb
outsb
pusha
push
dec
cmpsl
add
lods
ficoms
sahf
adc
mov
jmp
fs
insl
pop
ljmp
fiaddl
sub
or
aas
fidivs
orl
push
mov
mov
jge
shl
jecxz
mov
adc
ljmp
cmpsb
mov
jo
jle
in
idivl
das
in
sbb
daa
dec
les
mov
xchg
or
leave
and
popf
movsb
cs
xchg
addb
int3
adc
lret
xchg
mov
and
insb
push
std
cmc
push
xchg
xchg
push
or
xlat
loope
cwtl
fmull
subb
xor
aad
xchg
lret
movsl
adc
test
xchg
stos
mov
sbb
mov
mov
rcrb
jnp
xor
aad
push
daa
jne
rcrb
int
je
cmp
rcll
dec
inc
jge
dec
test
mov
xchg
push
fsub
adc
dec
shll
jle
daa
ds
popa
mov
jmp
popa
push
push
inc
test
sbb
cld
cmpsl
pop
cmp
leave
clc
dec
push
mov
stos
aad
jo
out
mov
ret
icebp
pop
xchg
xorl
lea
aam
xor
stos
movsl
mov
xchg
ss
dec
shlb
loop
jmp
cld
fdivr
rolb
dec
mov
out
andl
mov
jne
dec
inc
fdivrs
add
pop
add
hlt
fbstp
push
out
mov
sub
je
or
jge
and
add
xor
repz
ja
loope
out
dec
icebp
pushf
sub
lods
std
leave
cltd
xor
jb
push
cld
inc
adc
or
mov
nopl
xchg
push
out
test
mov
ss
jp
push
mov
lds
adc
js
jnp
test
inc
lret
orb
mov
jmp
xchg
data16
mov
test
dec
mov
xchg
mov
decl
inc
ljmp
inc
push
jmp
pop
in
add
fucomi
mov
scas
mov
mov
hlt
push
in
stos
cmovbe
cs
and
xchg
xchg
out
and
movsb
inc
mov
pop
add
mov
outsl
mov
cli
cmp
js
aaa
sbb
pop
pop
pop
mov
in
push
xchg
mov
sbb
jl
xrelease
pop
subb
inc
daa
ret
or
add
lahf
sbb
mov
mov
pop
fbld
xchg
movsb
shl
or
mov
inc
pop
lcall
push
mov
dec
in
adc
mov
fsts
mov
pop
mov
repnz
push
imul
dec
or
fs
ljmp
inc
test
clc
lcall
adc
sub
add
int
cmc
leave
cli
and
jp
push
dec
xchg
mov
ja
out
mov
or
push
sub
stc
call
div
cmp
mov
jmp
fisttpll
or
adc
test
push
gs
pop
mov
dec
mov
or
adc
sbb
negb
mov
pop
jp
mov
lods
push
aaa
mov
cmc
rcll
mov
loope
lea
mov
jb
jecxz
je
cmpsb
sub
or
aam
popf
xchg
xchg
lds
out
in
ds
xchg
mov
in
sub
sbb
inc
sbb
cld
ret
jp
rcrl
mov
ret
lahf
cmp
sarl
inc
dec
flds
sarl
lret
and
aad
sbbb
mov
mov
jno,pn
lcall
inc
xorl
xchg
or
and
push
cmp
push
imul
shrl
loopne
imul
aad
xor
shll
lret
dec
fwait
xor
mov
fidivs
inc
xor
addb
push
lahf
fucomi
es
rolb
arpl
cmpl
dec
sub
cld
addr16
ficoms
pop
aas
mov
lahf
shlb
lods
mov
adc
imul
lods
aad
push
jb
jmp
xchg
lods
sbb
sbb
outsl
rcl
adc
inc
xlat
mov
je
mov
sar
xor
fninit
xor
test
cwtl
add
adc
aaa
or
jne
mov
pop
dec
outsl
out
adc
jp
lret
ss
rcr
adc
jb
inc
inc
cmp
xchg
inc
adc
jg
icebp
xorb
dec
test
cmp
mov
xor
lret
or
rol
cld
add
ret
inc
jl
adc
inc
movsw
aas
mov
dec
push
cwtl
dec
and
mov
mov
sbb
lds
and
je
int3
or
jp
addr16
and
sub
mov
pop
pop
pop
imul
adc
aaa
popl
fistpll
enter
or
lret
mov
jns
iret
push
pop
cmp
dec
dec
je
rolb
jb
push
xchg
pop
adc
loop
decl
pop
adc
cmpsb
aaa
icebp
and
inc
int3
fiadds
addb
sbb
xchg
dec
pushf
ja
push
icebp
sub
lcall
push
push
jns
or
and
cld
pushf
inc
iret
adc
dec
sbb
insb
push
mov
loope
push
jbe
pop
add
int3
int
add
rorb
sahf
xchg
popf
fst
pop
adc
into
lods
dec
dec
xor
aaa
xchg
gs
xlat
out
mov
sbb
stos
popa
sbb
jno
mov
popa
and
fisttpll
mov
xchg
je
out
xor
xor
pop
lcall
dec
or
out
push
jmp
test
ret
imul
cmp
mov
roll
pusha
xchg
cli
rorb
mov
xchg
ss
loop
inc
jo
mov
mov
mov
ret
sub
sti
fdivrs
adc
inc
inc
mov
jl
sub
cmp
stos
mov
jp
mov
push
in
xor
or
mov
out
dec
aaa
jg
push
push
cmpb
sbb
xlat
stc
xchg
loopne
sub
addl
ds
lock
loope
push
es
mov
dec
into
inc
mov
xor
inc
mov
adc
push
push
cli
hlt
push
call
xchg
jo
pop
xchg
jmp
push
push
lock
gs
add
dec
mov
mov
sbb
lahf
jo
sbb
pop
scas
sub
scas
pop
push
jb
mov
xlat
popa
cld
xor
in
pushf
lcall
jo
dec
in
adc
pop
lods
enter
pop
xlat
and
mov
jge
pop
mov
xchg
jno
nop
pop
jecxz
in
adc
pop
and
ja
stc
jbe
mov
and
lods
and
popf
cmp
push
aad
sar
xchg
gs
lret
mov
xor
js,pt
dec
push
je
cli
mov
pop
mov
push
sbb
popa
hlt
rcrl
imul
mov
pop
add
cwtl
ljmp
out
xchg
jb
mov
xor
gs
sub
pushf
dec
cli
xor
cs
lcall
sarb
or
xlat
jp
enter
movl
jmp
sbb
imul
adc
add
enter
sbb
test
adc
int
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
lea
xor
cmp
je
lea
mov
mov
sub
mov
pushl
pushl
call
mov
mov
xor
lea
jmp
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
add
mov
mov
movl
mov
movl
movl
mov
sub
push
xorl
push
movzwl
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
sbb
mov
mov
xor
mov
or
xor
mov
adc
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
xor
add
mov
movl
xor
movl
mov
mov
sub
xor
mov
mov
xor
sbbl
add
movl
cmp
je
movl
push
jmp
mov
add
mov
dec
mov
andl
mov
sub
xor
adcl
xor
add
subl
div
xor
jmp
sbb
fwait
and
das
movsb
jp
adc
jp
pop
jp
movsb
lret
js
mov
je
mov
xchg
cs
test
mov
in
lcall
mov
sbb
cmp
adc
jbe
mov
fildll
jne
pushf
add
mov
mov
incb
outsl
mov
xchg
mov
bound
sbb
loope
dec
mov
enter
inc
outsl
pop
cmp
mov
xchg
mov
mov
mov
test
mov
inc
xchg
xchg
pop
mov
pop
jns
fmul
insb
imull
push
inc
nop
jmp
popa
arpl
scas
aam
and
test
insl
lods
mov
add
out
and
call
dec
hlt
cli
in
ds
mov
fsubp
mov
mov
jecxz
stos
ljmp
inc
sbb
stc
neg
subl
pop
sbb
gs
insl
xchg
fxch
cmp
arpl
jmp
cld
shll
or
cmp
scas
call
mov
insb
pop
dec
and
push
jl
cwtl
nop
sbb
mov
mov
and
xchg
sub
in
push
adc
int3
push
sub
and
fcmovnbe
inc
mov
sub
cmp
in
inc
imul
or
arpl
adc
or
xor
push
pop
fimull
pusha
les
in
mov
or
adc
dec
popf
std
fstpt
mov
mov
jge
ret
sub
fldenv
cli
aas
sub
in
or
mov
jg
cltd
clc
lcall
testb
mov
movsb
cmc
xor
and
nop
shr
cwtl
adc
lahf
inc
mov
sub
mov
rcll
daa
and
push
cmc
dec
xor
pusha
mov
call
stos
ja
xor
call
jo
cwtl
rcll
aam
les
mov
dec
or
cltd
or
push
scas
or
or
jno
cmp
clc
mov
int3
jnp
ds
mov
cmpl
and
mov
into
out
ret
sbb
mov
xchg
ljmp
mov
lret
dec
aas
dec
out
jmp
inc
fiadds
movsl
lods
push
mov
inc
and
mov
repz
stos
sub
or
sahf
push
adc
add
inc
scas
and
notl
lret
stos
jmp
cmp
sbb
enter
ret
push
mov
dec
sub
dec
fistpl
sub
sub
les
cmp
cs
loopne
cmp
lcall
icebp
outsl
leave
mov
jbe
mov
push
iret
test
outsb
jecxz
repz
stc
mov
and
fcoml
shrl
and
fs
cmp
clc
icebp
cmpsb
jno
cmp
sti
pop
repnz
mov
xchg
cli
sbb
cmc
test
enter
inc
out
aaa
adc
call
das
add
xchg
cmc
jge
mov
test
xchg
adcl
push
icebp
icebp
into
push
mov
cmp
es
push
cltd
add
jnp
into
jns
fbld
lcall
and
pop
sahf
popf
adcl
out
adc
bound
outsb
aad
cmp
ret
xor
sahf
xor
push
push
xchg
xchg
rorb
shl
push
cmp
jne
pop
cs
push
mov
adc
scas
je
imul
inc
xorb
stc
sub
je
testb
sti
outsb
or
push
jnp
jnp
inc
sub
test
mov
dec
xor
imul
mulb
fdivs
iret
lret
adc
bound
in
mov
mov
into
dec
pop
mov
mov
pop
mov
add
fnstsw
pop
push
sub
cli
aas
xchg
dec
add
cmp
mov
jne
aas
setp
dec
out
roll
mov
mov
add
pop
add
adc
stos
hlt
and
sarl
add
ret
inc
jge
mov
leave
mov
push
jge
sub
jp
mov
xchg
clc
and
push
dec
pop
aam
inc
loopne
xchg
add
pop
sbb
or
dec
mov
xor
xchg
dec
adc
push
mov
cltd
adc
aad
inc
jmp
cli
push
mov
fsub
mov
mov
lock
outsb
xchg
cmp
pusha
insb
push
mov
and
in
daa
inc
sbb
cmpsb
cmc
mov
xchg
jl
pop
movsb
notl
in
pop
insb
mov
lcall
lret
lret
test
jne
repnz
cmpsl
lcall
cmp
jne
pfcmpgt
jge
adc
lods
pop
mulb
inc
push
cmp
movsb
lret
mov
xchg
scas
push
lahf
or
xor
fistl
mov
or
stos
repnz
fcmovu
cmp
mov
fimull
inc
push
push
jbe
sbb
cltd
push
out
dec
sahf
out
inc
jl
outsb
adc
jle
pushf
stc
std
mov
inc
inc
cmp
inc
iret
dec
aam
adc
adc
arpl
mov
cmp
push
mov
mov
decl
push
pop
enter
jmp
push
ss
scas
fisubrl
or
and
movsb
jecxz
lock
fidivrs
shrb
in
test
inc
mov
or
cltd
aaa
cltd
inc
or
adc
and
loop
popf
hlt
push
dec
xchg
mov
push
popa
movsb
xlat
std
aas
shl
shlb
jbe
pop
insl
mov
adc
std
mov
int
dec
or
add
push
xor
mov
dec
push
test
insl
pop
mov
push
in
roll
stc
or
push
mov
inc
fimull
and
repz
pop
nop
push
fnstsw
sarb
mov
les
xchg
push
mov
dec
sahf
daa
into
rcrb
mov
add
or
out
mov
shrb
push
sbb
fsubr
dec
push
aas
je
dec
jecxz
test
xor
das
jb
mov
repz
and
mov
orl
into
sub
cmp
shll
mov
fwait
xor
sbb
in
movsl
aam
jl
jnp
add
xchg
mov
popa
mov
movsl
cmp
daa
dec
adc
inc
mov
aas
dec
push
xlat
popf
sub
add
fcoms
lahf
inc
outsb
out
mov
and
in
popf
jp
shl
insb
int
mov
cmp
and
lods
cli
jle,pt
mov
jne
aam
or
clc
mov
dec
scas
jne
lock
lock
outsl
dec
ds
sub
hlt
pushl
or
out
inc
test
pop
push
xchg
xchg
dec
pop
loop
cltd
mov
shrl
fdivrs
out
xlat
push
mov
insb
loop
adc
sbb
inc
imul
or
aas
inc
cmp
add
les
pusha
out
jl
pop
jecxz
gs
dec
pop
adc
push
stos
or
mov
mov
out
cld
enter
cmpsl
rolb
andb
pop
leave
int
jge
lock
jge
cwtl
mov
dec
and
mov
mov
ljmp
popf
sar
daa
loopne
push
les
add
jae
mov
add
xchg
adc
jmp
sbb
sub
bnd
add
or
pop
scas
ret
adcb
rcll
mov
adc
pusha
iret
gs
test
js
jmp
clc
in
sti
mov
fdivr
or
jne
sub
dec
pop
pop
inc
fwait
out
adc
add
mov
rolb
mov
mov
dec
pop
popf
out
jo
icebp
clc
adc
push
insl
adc
movsb
fldlg2
push
inc
dec
mov
xchg
and
mov
inc
in
mov
and
sub
mov
xchg
xor
stos
jns
xchg
inc
mov
shlb
add
push
fcompl
daa
call
push
test
dec
pop
mov
dec
xor
sbb
push
cs
lods
jecxz
xor
push
cltd
mov
push
jnp
lods
fwait
jg
data16
gs
icebp
clc
pusha
outsl
data16
shrb
ficompl
stc
aas
xor
clc
pop
inc
mov
movsb
out
add
jne
fdivrs
pusha
sbb
sahf
sbb
cmp
sub
into
cmc
jb
pushf
mov
push
insb
lret
movsl
push
jecxz
dec
into
fisubs
ret
out
xchg
jbe
movsb
push
cmp
push
fnstenv
xchg
xlat
add
lea
lret
push
inc
fiaddl
or
or
and
jne
test
sahf
xchg
sub
mov
adc
fwait
leave
out
mov
lahf
sahf
shrl
sbb
mov
shl
sbb
adc
pop
or
outsb
inc
data16
loop
dec
mov
mov
mov
xlat
dec
push
add
push
ret
ljmp
hlt
and
mov
lods
gs
mov
pusha
jmp
mov
pop
and
xchg
js
dec
pop
fists
and
mul
add
cltd
aas
std
aam
sub
jg
int
mov
xchg
xchg
or
jl
cmp
ret
jmp
imul
imul
mov
rorl
jae
icebp
cltd
cli
jmp
cmp
iret
push
add
sbb
adc
push
in
dec
imul
mov
sti
ljmp
gs
aas
ss
cwtl
insl
jns
cmpsb
jge
call
sbb
mov
adc
dec
xor
cmp
arpl
or
aad
mov
ss
add
xor
pusha
mov
int
fiaddl
aam
push
pop
mov
and
inc
pop
fnsave
sbb
sub
testb
xchg
mov
out
sti
xor
push
imul
adc
data16
sub
mov
xchg
mov
insb
rorb
jecxz
add
xchg
mov
fistl
dec
mov
mov
push
cmpsl
sub
loope
mov
mov
mov
int
out
cmc
jae
cmc
dec
add
push
mov
mov
push
mov
lcall
je
test
test
xorb
ss
mov
rcrb
outsl
addr16
pop
scas
cmpsl
mov
jb
dec
fxch
xor
and
pop
mov
ljmp
lock
pop
push
in
jmp
dec
fwait
mov
or
into
mov
in
ljmpw
std
out
cmpl
aad
movsb
mov
lock
pop
es
xchg
mov
mov
mov
fistps
mov
loope
dec
inc
mov
push
rcrb
or
out
lret
stos
xchg
int
test
sti
push
xchg
fnstenv
insb
in
out
push
mov
xchg
and
mov
inc
test
jmp
dec
sbb
mov
xchg
pop
xchg
movsl
mov
leave
dec
aad
mov
les
pop
xchg
into
addr16
add
movsl
pop
mov
daa
ret
cmp
in
cwtl
retw
lock
pop
fisttps
or
and
jmp
out
or
dec
jbe
jb
movsl
add
fsubrl
into
push
sbb
pop
xor
iret
cmpsl
cmpsl
ret
loop
jmp
mov
ljmp
negl
push
sahf
std
cmp
adc
jno
sbb
mov
jo
sbb
loope
cmp
iret
adc
adc
imul
mov
fdivr
out
mov
xchg
ficomps
rcll
xchg
push
movb
std
push
and
out
sub
mov
lock
fisubrs
cmpsl
ret
shll
jno
jle
lock
mov
pop
faddl
int
pop
pop
jge
mov
sbb
jecxz
ret
cli
mov
scas
loopne
cli
mov
mov
fsubrl
push
insb
stos
orl
inc
xchg
addr16
inc
stos
outsl
lahf
test
xchg
lcall
aam
cmp
xor
into
or
ss
out
in
andb
hlt
inc
in
xchg
movsl
inc
daa
cmpsl
test
in
clc
push
inc
out
inc
test
add
outsb
call
or
adc
scas
add
pop
icebp
mov
int
inc
lret
in
cltd
pop
inc
jg
jge
repz
pushf
cmpsb
sbbb
out
jge
jg
aam
xchg
mov
or
cmp
mov
push
mov
adc
jle
mov
nop
ret
sbb
shlb
ja
mov
out
xor
push
cmp
iret
aam
cld
loope
push
adc
pop
into
jmp
inc
repz
call
push
fsub
push
cmpsb
cmp
adc
insb
push
jbe
mov
and
jae
test
out
cmovl
or
cli
xchg
mov
gs
lcall
xchg
xor
fs
lahf
movsl
int3
mov
dec
sub
pop
popf
jbe
mov
mov
or
xchg
mov
dec
stc
xor
mov
or
add
cmpsb
push
das
repz
cwtl
sbb
bound
dec
or
movsb
pushf
imul
mov
mov
outsl
jge
inc
mov
xchg
or
sbb
fildll
fimull
pushf
ret
dec
fistps
mov
sbb
push
add
mov
jbe
dec
dec
loopne
jnp
inc
adc
cwtl
push
in
pop
pop
ja
icebp
in
cld
test
adc
pop
xlat
imul
gs
sbb
test
mov
adc
popf
and
and
dec
add
loop
xchg
pop
pop
push
aad
icebp
test
push
mov
int
adcl
xor
sbb
jge
int3
mov
std
mov
push
inc
mov
cltd
hlt
stc
testb
test
or
cltd
popf
jl
lods
inc
dec
and
fwait
nop
dec
cmp
int3
clc
fdivs
jle
dec
mov
sbb
into
or
fidivrl
mov
lea
ret
pminsw
loopne
out
mov
sbb
mov
shll
repnz
mov
aad
or
jns
push
loop
das
inc
je
jae
sub
das
pop
push
push
jnp
mov
rcrb
fcmovu
lret
mov
inc
pop
ret
mov
cli
mov
mov
fsubrs
cmp
shl
mov
adc
jo
inc
jge
jns
push
pop
jmp
jo
cmpl
lret
pop
inc
jno
rcll
ljmp
cmpsl
lods
adc
test
arpl
xorl
arpl
cmpsl
popa
mov
in
cli
cld
lods
inc
or
out
out
pop
int3
test
push
iret
dec
repnz
in
loop
out
push
push
fisubs
sbb
bound
mov
addl
sub
aad
scas
sahf
or
out
add
lret
lock
mov
mov
dec
jbe
xchg
popf
outsb
jb
pop
js
jle
sbb
insl
add
xchg
movsl
cmp
loop
and
sub
xchg
loope
lods
push
cmc
mov
mov
sbb
pop
ss
dec
dec
cmpsb
inc
cli
loope
xchg
and
xchg
cld
orl
stc
popf
js
sbb
pushf
pop
outsb
pushf
add
jl
or
xchg
out
add
adc
das
js
xor
ds
pop
inc
mov
out
dec
clc
pop
sbb
leave
roll
jecxz
popf
push
loope
mov
cmp
inc
roll
sarl
or
imul
cli
ds
dec
out
repnz
incl
popa
mov
mov
dec
cmovne
dec
call
cs
mov
sbb
sub
fsubr
iret
sub
ficompl
mov
flds
push
or
pop
pop
aam
mov
jno
fldenv
mov
aad
pop
lret
ret
call
and
ret
cli
aas
shll
dec
xor
hlt
jno
add
inc
addr16
lock
and
in
enter
mov
cltd
push
rorb
add
xchg
cmp
ficomps
orb
daa
hlt
and
mov
push
xchg
cmp
xor
std
lods
push
arpl
jo
in
enter
mov
pop
arpl
lock
add
or
xchg
mov
sbb
and
sub
inc
jne
stos
das
and
je,pn
pop
gs
adc
pop
lret
jne
inc
xchg
push
rcr
add
dec
sub
fiadds
leave
in
sbb
push
jmp
outsb
mov
push
adc
fsubs
loope
adc
pushf
ljmp
adc
inc
leave
leave
mov
arpl
add
and
pop
or
mov
lahf
dec
outsl
or
js
push
ret
sbb
pop
fwait
xor
ret
in
mov
inc
arpl
hlt
inc
outsb
hlt
rorl
inc
jne
popa
adc
cmp
repz
rol
sub
ljmp
icebp
cmp
xchg
jns
sub
cmp
or
push
aad
loopne
andb
inc
lcall
lock
sahf
or
mov
sub
mov
nop
sti
shrb
lods
cltd
pop
pop
xchg
gs
jmp
add
xchg
dec
call
es
stc
jle
jecxz
jne,pn
jb
push
push
outsl
jb
fsubr
push
mov
adcb
push
push
loopne
popf
mov
push
out
push
and
decb
mov
sarl
adc
cwtl
jne
into
mov
in
outsl
sbb
jo
es
dec
stos
int3
cltd
inc
or
mov
bound
or
repz
jp
imul
in
sub
mov
sub
repnz
pushf
cmpsl
or
ds
call
adc
ljmp
or
in
fwait
popa
mov
jnp
pop
cs
jl
in
cmpsb
mov
stos
testl
lahf
cmp
xorb
loop
std
int3
mov
mov
loopne
mov
sbb
jb
lcall
ds
pop
int3
adcl
xchg
fidivs
mov
das
flds
inc
push
inc
insl
testl
fcmovnu
jb
clc
dec
iret
or
addb
push
cmpsb
lea
jecxz
cmp
xor
cs
dec
clc
mov
clc
movsl
mov
inc
push
inc
test
pop
xchg
aas
shl
xchg
dec
mov
pop
mov
adc
imul
adc
in
mov
xlat
scas
sbb
pushf
imul
rclw
int
adc
sbb
jmp
repz
push
pop
fildll
in
dec
and
sahf
in
fisttpl
xor
mov
inc
push
orb
hlt
dec
mov
lock
out
pop
adc
mov
jl
repz
inc
jp
adc
lcall
lods
repz
test
sti
fwait
inc
xor
xchg
repnz
xor
lds
pop
inc
roll
imul
in
jo
in
decl
cs
pop
ret
daa
daa
in
mov
shl
hlt
sti
sbb
xchg
sub
mov
mov
lret
bound
pop
int3
adc
popf
cmp
jne
cmp
push
dec
addb
dec
scas
cltd
jo
ja
sbb
pusha
lods
ja
aad
fnsave
inc
out
divl
nop
jl
mov
fsubrs
jnp
sti
xor
adc
push
out
dec
je
out
ss
push
xor
mov
int3
inc
into
pop
fwait
movsl
out
mov
mov
jecxz
lea
out
jo
or
jmp
repnz
or
pop
xchg
sub
jae
sub
xor
push
aad
rcrl
enter
shll
cmpsb
and
stos
adc
mov
movsl
and
int3
add
repnz
mov
sbb
mov
imul
lret
out
in
pop
ss
sub
mov
rcrb
movsl
push
outsl
mov
dec
icebp
shrb
sub
and
sti
push
and
push
jg
xchg
ret
ret
out
lock
pop
je
repz
cmp
and
mov
stos
push
dec
orl
xlat
xor
insl
stos
scas
sbb
jno
adc
out
pushf
lock
add
pop
movsl
xor
push
sub
lret
bound
aaa
jns
sbb
out
jns
stc
mov
jmp
fs
lods
sub
aam
orl
pop
mov
inc
sub
xchg
out
mov
add
xor
add
jmp
enter
push
mov
jg
jg
mov
pushl
cltd
pop
jns
int3
push
pop
inc
inc
outsl
inc
aas
mov
xor
lds
adc
imul
or
js
or
dec
mov
cmpsl
std
shll
xchg
mov
stos
and
mov
mov
dec
push
shlb
xor
mov
xor
sbb
sbb
pop
les
inc
dec
cmp
lock
rolb
lcall
inc
dec
stc
xchg
xchg
in
pop
fisttps
pusha
rcrl
cmp
and
js
sbb
test
ljmp
dec
pusha
mov
ljmp
enter
xor
cmp
sub
clc
fimull
lahf
pop
aad
cmp
cs
insl
sub
sub
or
push
or
mov
pop
xchg
jle
cmp
cli
mov
fmull
out
or
adc
test
jg
xchg
xor
inc
je
out
add
dec
pop
inc
shrb
in
movsl
bound
iret
xchg
jl
push
xchg
fistl
insb
mov
add
sub
mov
adc
push
and
loope
js
xchg
pushf
fisubs
pusha
je
xchg
add
or
cmpsb
adcb
mov
cmc
mov
xor
xor
jae
adc
rclb
xor
insl
inc
xchg
add
and
sbb
call
mov
in
and
inc
hlt
test
fs
push
sar
push
sub
gs
popf
les
xchg
inc
mov
pop
pop
add
cmp
fstps
ljmp
out
dec
cli
loop
repz
or
sub
icebp
cmp
bound
mov
nop
jecxz
ljmp
leave
repz
imul
stc
out
push
fildll
push
ficomps
loop
or
mov
dec
adc
enter
ja
int
test
xor
add
xchg
dec
mov
dec
fxch
mov
bound
pop
int
lods
je
test
lods
insb
fwait
out
fcomip
add
lret
lock
int
out
xor
sub
insl
mov
mov
xor
roll
cwtl
rclb
int
daa
mov
pop
sbb
mov
ficomps
xor
stc
daa
mov
je
jbe
sub
adc
das
pop
and
mov
dec
enter
mov
loope
jl
ds
cmpsl
cwtl
fstpl
inc
int
xchg
cmp
mov
cmp
jno
ljmp
lahf
push
push
test
lods
cli
jle
std
pop
adc
stc
xor
sarl
movsb
lret
sbbb
or
sahf
jge
js
movsl
mov
lahf
sub
push
fadds
xchg
shlb
xlat
mov
faddl
or
sbb
es
push
je
adcb
pushf
mov
or
push
or
xor
cltd
into
cmp
stos
rclb
push
xchg
dec
lret
ss
or
mov
xchg
ret
shll
imul
jae
out
jns
int3
rcll
and
arpl
fstpt
loop
dec
lcall
jmp
repz
push
nop
jge
mov
js
adc
jecxz
fsubrs
arpl
rorl
xor
mov
ljmp
mov
sbb
sbb
adc
loopne
jp
mov
dec
cwtl
jl
cltd
cld
stc
mov
and
cmp
or
je
shrl
dec
xlat
ljmp
insl
push
ret
mov
sbb
cmp
and
sbb
sbb
mov
mov
add
sarl
mov
inc
orl
or
in
fldl
repnz
xlat
pop
sti
ja
or
jns
pop
or
or
aaa
push
mov
mov
and
fistpl
cmp
outsl
mov
xchg
pop
or
xchg
sub
and
fisubl
xchg
loop
std
sub
les
jae
fstp
inc
fistl
js
test
push
outsl
add
insb
or
sbb
and
mov
jg
pop
adc
jmp
cmp
sti
lahf
pop
js
xor
fiaddl
rcrb
add
sub
pop
sar
xchg
jne
movsb
dec
cmpsl
gs
adc
lret
xor
adcl
push
mov
jge
sbb
ret
xchg
inc
les
mov
pop
les
jge
mov
cmp
xchg
xchg
testb
push
iret
pop
mov
lahf
push
shrb
iret
pop
dec
cltd
adc
ret
jmp
dec
fwait
mov
lcall
repz
xor
enter
ss
mov
sar
dec
lret
sbb
int
add
adc
loopne
hlt
xor
inc
and
lahf
mov
xor
sub
shl
xor
push
sub
mov
js
inc
sbb
xor
fxch
lea
and
mov
pop
scas
sub
das
repz
add
fdivs
loope
sub
or
push
std
outsb
pushl
lcall
push
pop
xor
add
test
cmp
and
jae
loope
fs
and
jmp
leave
sbb
in
rcrb
sub
push
notb
mov
stos
lea
sti
push
dec
sbb
xor
and
lods
loopne
mov
cmpxchg
and
outsl
or
rcrb
sbb
mov
fbld
imul
lret
insb
sub
dec
push
dec
push
sbb
push
in
sarb
lret
jle
sahf
fidivrs
pop
iret
icebp
test
aaa
out
arpl
add
adc
pmaxub
hlt
iret
xchg
and
adc
xchg
daa
xlat
cs
arpl
je
adc
jne
arpl
xor
mov
clc
es
pop
cmp
pop
inc
inc
xchg
mov
xchg
sub
pop
lea
or
xor
jno
mov
sub
or
add
shl
out
jmp
popf
xlat
sub
insb
sub
adcl
rcl
pop
push
mov
jb
stos
scas
xor
int
fiaddl
out
cwtl
xchg
js
push
mov
lock
out
xchg
add
test
cmp
push
lea
xchg
push
enter
add
inc
sub
mov
int3
int
dec
xchg
lret
cmp
pushf
call
xchg
fwait
adc
cmp
or
aam
xchg
jno
add
sbbl
imul
scas
or
xor
dec
and
loop
ljmp
add
cld
ds
sbb
lret
push
cmp
and
mov
or
xlat
lods
lcall
xchg
cmp
push
insb
push
mov
outsb
push
mov
mov
mov
add
fs
push
gs
shll
push
push
fistl
adc
xchg
repz
popa
push
or
out
adc
cli
pushf
xor
js
testl
outsl
mov
add
and
cli
not
scas
pop
xchg
fxch
push
pop
je
adc
fnstsw
shlb
repz
or
inc
jbe
push
dec
sub
push
inc
repnz
out
lahf
xor
fisubs
cmp
or
pop
sbb
enter
sub
insl
andl
xchg
js
sub
sbb
adc
dec
inc
push
sub
xchg
clc
loop
push
cmp
lcall
cmp
lea
push
hlt
add
adc
movsl
xchg
sbb
dec
sub
jbe
jl
ljmp
out
adc
shrl
stos
pushf
mov
jb
int
cmpsl
insl
cmp
mov
cmp
pop
pusha
pop
rcrl
dec
cmp
xor
lds
fnstenv
adc
int3
sub
ret
cld
repz
mov
fdivs
and
dec
jge
xor
push
xlat
incb
add
gs
enter
lahf
push
out
lock
jne
xchg
push
movsb
mov
mov
loopne
enter
add
mov
imul
xor
and
add
mov
cmpsl
fdivl
sbb
lret
call
cmpsl
add
ds
clc
dec
cmp
cltd
das
sbb
movsb
xor
je
cwtl
addr16
aad
orl
lahf
xchg
test
cmp
xchg
pusha
aad
sbb
push
mov
push
cmp
mov
shl
mov
cmp
push
in
insl
add
test
or
mov
inc
hlt
insl
enter
pop
fstl
xor
push
sbb
or
out
cmpsl
sbb
popf
shl
sub
xor
inc
ret
gs
xor
cmp
jecxz
fidivrl
lea
xchg
mov
push
nop
fs
std
popa
cmp
fildl
cld
fnstcw
push
pushf
enter
fcmovnbe
and
fcom
xchg
std
cwtl
cmpsb
stos
push
outsb
sub
jnp
mov
xabort
jnp
jbe
xchg
adc
out
or
mov
test
jmp
fadd
sub
lods
scas
jne
dec
adc
shl
dec
add
add
mov
pop
cli
daa
dec
sub
scas
push
cmp
mov
mov
fidivrl
adc
cld
ret
xor
sub
jg
push
movsb
aam
nop
imul
sub
das
aam
imul
ss
push
insb
xor
fnsave
dec
push
in
push
xchg
loopne
sbb
stos
fildl
or
mov
loope
adc
mov
sbb
cs
popf
pop
dec
jnp
jp
mov
loop
in
daa
jmp
and
inc
push
movsb
aas
aam
icebp
imul
in
and
adc
out
dec
or
mov
addr16
es
push
or
add
inc
imul
sub
clc
adc
cmpxchg8b
and
ret
dec
call
cmp
rcr
push
sub
xor
sbb
or
aam
sub
jle
aad
pop
mov
cmpsb
loope
rolb
inc
add
aas
stc
sbb
stos
mov
sbb
ret
add
mov
dec
cs
sbb
mov
push
test
call
out
inc
shlb
movsl
leave
mov
popa
push
push
push
stc
push
jo
test
sbb
cwtl
xor
sbb
mov
inc
mov
adcl
adc
outsb
movsl
jnp
loopne
inc
jg
fsubl
sbb
fmull
sbb
mov
je
inc
lahf
inc
sbb
inc
sbb
sub
js
xlat
ljmp
sbbb
push
mov
int
jmp
das
fs
adc
movb
addr16
mov
fdivrl
pop
jp
nop
mov
mov
pop
pop
fimuls
pop
xchg
sbb
add
cmpl
je
cmpl
jbe
jmp
push
push
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
push
push
pushl
call
jmp
mov
xor
add
cmp
movl
jbe
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
adc
mov
sub
mov
mov
xor
movl
add
subl
imul
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
mov
sbb
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
sub
add
mov
mov
movl
mov
xor
or
sub
xor
mov
or
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
call
cmpl
jb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
jmp
jo
aam
movl
xor
sbb
xchg
mov
call
jp
int3
ss
sub
push
call
jmp
movsl
fnsave
push
cmpl
lods
dec
hlt
xor
inc
insb
sbb
jns
insl
cmp
stos
dec
lret
push
test
pop
pop
adc
out
ja
inc
in
stos
pusha
sbb
pop
cmc
mov
dec
cld
lods
push
int
ja
and
push
cmp
cmp
popa
repz
repnz
jle
xchg
jecxz
ret
out
out
fcoml
pop
jb
add
out
jp
cmc
jae
dec
test
lret
or
fsubrl
add
fwait
xchg
xor
jbe
arpl
popf
xchg
and
gs
popa
orb
pop
shr
mov
pop
bound
jge
cmp
int3
add
loope
push
addr16
ficoml
sub
test
aam
dec
stos
xchg
cwtl
lret
mov
scas
push
out
inc
cs
out
mov
or
je
xchg
xor
inc
fistps
push
stos
jecxz
inc
xor
rcrl
add
and
mov
pop
adc
sub
shll
sbb
pop
pop
xor
mov
jp
fisubs
loop
lcall
ss
jns
xor
fnsave
and
ljmp
addr16
jo
mov
dec
push
into
outsl
shlb
fdivrl
insl
test
mov
js
xlat
lret
and
lahf
or
sub
fwait
push
dec
jae
inc
clc
stc
push
loopne
dec
jne
shrl
imul
push
push
pop
lcall
cmc
mov
ret
mov
stos
or
push
aas
aas
push
xor
jge
sbb
inc
push
gs
dec
push
jo
inc
mov
add
movl
jne
cmc
jmp
out
enter
lock
add
adc
data16
pushf
mulb
mov
adc
les
lcall
xchg
orl
dec
arpl
sub
lea
call
leave
cmp
data16
cmpsl
add
dec
jne
jl
daa
mov
pop
jecxz
inc
iret
mov
je
sbb
pop
data16
and
push
xchg
icebp
das
mov
out
jl
dec
mov
sub
les
mov
std
out
add
das
inc
imul
push
imul
mov
repnz
imull
ret
popl
sbb
jno
repnz
adc
lods
pop
addr16
xchg
xor
outsl
push
fcmove
test
dec
sbb
mov
jae
fs
or
or
mov
sbb
enter
fisubrl
je
mov
inc
lods
jp
je
addr16
push
or
cli
popf
adc
xchg
cmp
out
aad
push
gs
mov
push
mov
inc
push
sub
call
inc
bnd
mov
cmp
popa
pop
ljmp
lds
add
inc
js
xlat
rorl
xor
jne
rclb
dec
adc
xchg
outsl
je
sti
call
jne
cmpsl
pushf
bound
jecxz
mov
mov
xor
jns
mov
fstl
xor
aaa
xchg
mov
iret
add
pop
lea
out
lret
call
inc
or
or
jb
jbe
lods
xchg
enter
ds
jno
sub
push
movsb
dec
int
adc
fldl
push
cmpsb
xlat
dec
in
adc
jno
push
repnz
lahf
leave
adc
xlat
cmpsl
jo
jge
cmp
int
int3
je
lods
icebp
cmp
mov
dec
or
cmp
cli
xchg
add
les
js
movsl
push
inc
outsb
jge
pop
ja
insb
bound
sub
mov
dec
push
scas
inc
xor
test
and
sahf
dec
mov
faddl
jmp
scas
add
mov
mov
int
or
mov
xor
xchg
addr16
jnp
mov
jmp
call
mov
notb
and
jnp
and
int
movsl
cmc
push
iret
add
clc
ret
add
popf
out
int3
push
negl
cld
jbe
dec
sub
xchg
and
ss
jno
or
fldl
dec
add
cs
xor
arpl
sub
ljmp
jp
push
or
shlb
dec
xchg
pop
test
push
dec
and
xchg
cmp
mov
ret
add
ss
lahf
jo
mov
sbb
push
adc
popf
ja
xchg
arpl
das
pushf
pusha
jae
pop
push
mov
pop
dec
jle
xchg
xchg
or
push
cltd
insl
or
and
mov
imul
pop
mov
sbb
and
test
loop
iret
lret
mov
pop
cli
mov
es
inc
add
xchg
xchg
inc
and
rcrl
inc
loope
jge
jmp
roll
loopne
xchg
mov
sti
xor
and
aas
lahf
movsb
dec
outsb
fs
cmp
add
sbb
mov
int3
and
sahf
jp
aad
inc
xor
jo
sarl
mov
rorb
xchg
jmp
cmp
xchg
xchg
sahf
jnp
mov
mov
xchg
out
sbb
leave
push
fdivrp
xchg
mov
je
jl
mov
add
lret
out
ljmp
cmc
cmp
cwtl
movsl
movb
cwtl
leave
adc
jl
mov
mov
inc
and
fsubrs
aad
arpl
loopne
fwait
loop
gs
dec
xor
mov
adc
mov
mov
cs
data16
xchg
inc
jecxz
inc
pop
sbb
movb
adc
xchg
lret
cmp
ja
sub
mov
rolb
cld
mov
fdivl
test
inc
add
idivb
mov
mov
loopne
aaa
lds
popa
das
pop
repz
sub
aaa
sub
inc
mov
gs
sbb
and
jl
popa
adc
loop
imul
pop
jle
jne
mov
cmp
stos
aas
stos
push
push
mov
xchg
sahf
inc
incl
jg
cmpsb
jl
loop
aas
mov
shr
out
in
leave
jne
sbb
push
mov
jmp
daa
dec
out
mov
and
nop
pusha
ret
add
ret
sub
insl
pop
mov
pop
sarl
jno
adc
lea
ret
push
mov
push
inc
push
inc
clc
cmp
mov
push
push
mov
mov
dec
notl
push
out
sub
repz
cs
insb
jnp
sbb
outsl
mov
pop
xor
push
cmp
scas
jbe
aaa
jae
cli
fdivl
push
push
pop
in
cwtl
xor
scas
add
jge
mov
sbbb
mov
pop
imul
clc
mov
pushf
lcall
pop
push
mov
jo
test
push
and
inc
inc
gs
test
pusha
insl
lods
rcrl
dec
push
ror
arpl
testb
bound
jbe
pusha
dec
jmp
stc
addr16
ss
fldcw
cmp
xchg
cld
enter
loopne
lea
cmp
cmp
loopne
stc
add
cs
fs
adc
setae
jo
lcall
xchg
lret
scas
js
popf
loope
loopne
xor
cld
lods
dec
push
data16
adc
xrelease
adc
pop
and
cmp
lods
addr16
mov
mov
into
xchg
cs
sbb
scas
scas
ss
fwait
add
data16
mov
aad
sbb
sbb
testb
test
dec
mov
cmp
mov
cmp
dec
sbb
enter
imul
cmp
jbe
out
aam
std
mov
mov
int
push
int3
shll
stos
mov
and
jmp
sahf
or
push
aad
out
xchg
cmc
icebp
imul
fdivr
mov
mov
cmp
ja
pop
je
push
add
gs
sbb
in
lcall
add
mov
loopne
sub
jno
shlb
mov
aad
mov
scas
xor
mov
or
pop
aad
cmp
test
cld
aam
insl
mov
out
sbb
pop
cmc
hlt
or
jne
pop
sbb
jne
cmp
dec
jg
mov
faddl
sar
stos
add
cmpsl
call
cmc
loop
int
pop
fs
lods
out
push
cli
dec
inc
call
out
ss
mov
mov
movsl
mov
or
mov
gs
cltd
scas
imul
push
pop
iret
ja
adc
insl
iret
cmpsl
sbb
repnz
cmp
sbb
fdivrs
add
sub
fisttpll
sub
mov
adc
es
mov
and
popf
cmpsl
lea
xor
lret
xor
jne
push
movsl
mov
loop
in
fsubrl
popa
outsl
ficomps
fcompl
mov
mov
dec
add
not
clc
data16
cs
xchg
and
fadd
lea
loop
mov
dec
daa
cmp
xchg
sub
xchg
xchg
jp
xchg
fisubl
test
and
xor
xchg
mov
jecxz
outsb
push
cmp
sbb
push
pop
xor
scas
stos
lock
cli
inc
mov
and
mov
mov
test
push
and
divb
mov
add
push
pop
cmp
mov
aad
bound
jle
cmp
sub
test
mov
repnz
data16
push
push
sub
leave
popf
xchg
outsl
js
in
cld
shl
and
mov
fdivr
pop
sub
fs
mov
pusha
mov
jl
ret
movsb
and
mov
scas
add
test
scas
push
insl
mov
adc
xchg
orb
mov
jmp
fcomp
jno
xor
pop
or
mov
cmp
and
mov
dec
mov
out
xchg
fwait
aaa
lcall
divb
jne
mov
jmp
xchg
inc
pop
loop
and
xor
ja
mov
or
fnsave
push
movsb
mov
popa
shrb
cmp
insl
jg
xchg
jp
inc
mov
cltd
pop
dec
lods
mov
sbb
sahf
stc
sub
lret
icebp
cmp
cs
jge
incl
sbb
test
loopne
xchg
fcompl
imul
insb
movsb
cli
and
mov
jmp
dec
iret
or
mov
cmp
jbe
xchg
push
sbb
add
adc
inc
xchg
aad
addr16
cltd
mov
dec
and
xlat
add
jbe
int3
dec
les
push
pop
adc
inc
add
loop
jg
mov
mov
push
adc
mov
cs
das
jg
jns
adc
xor
cmp
xchg
and
jl
jmp
push
cmp
mov
outsb
pop
adc
dec
pushf
lret
sub
adc
movsb
sar
stos
push
inc
mov
cmpsl
sbb
dec
jg
pop
dec
lcall
test
data16
push
js
push
mov
ficompl
out
repz
mov
pushf
test
pop
pop
mov
sbb
out
xchg
mov
jbe
sub
rolb
sub
adc
xchg
sub
or
sub
test
mov
xchg
and
cs
sub
lahf
cmp
fwait
cmp
or
adc
aad
push
jle
test
lcall
dec
xchg
loop
push
fsubrl
decb
and
mov
dec
adc
ret
ja
jno
pop
ss
repnz
mov
mov
dec
adc
mov
and
std
xchg
pop
test
inc
dec
xchg
fsubrs
dec
aaa
adc
adc
stos
pop
inc
xchg
adc
fmulp
mov
push
sub
sbb
ret
out
mov
pop
cmpsb
int3
mov
nop
mov
aas
in
pop
sahf
ds
inc
dec
mov
gs
mov
push
xchg
or
jmp
mov
push
pop
xor
push
xchg
jo
je
cmc
jmp
jae
xchg
push
fistpl
adc
xorl
clc
loope
jae
sub
inc
cltd
movsb
ret
mov
insb
pushf
mov
add
cld
rol
imul
pop
push
add
add
xor
mov
in
push
mov
imul
pop
fimuls
std
pop
les
mov
xor
mov
or
lods
pop
push
cli
repnz
dec
push
and
push
outsb
cld
in
insb
rcrl
sar
rorl
icebp
pop
mov
setb
cmp
insl
xchg
div
inc
push
inc
sub
cmp
out
push
mov
rcll
mov
sub
xchg
mov
and
ss
sub
mov
sbb
mov
and
mov
addr16
cli
mov
cli
out
or
lahf
cs
adc
mov
stos
loopne
and
js
aam
ret
stos
sub
inc
mov
fsubl
test
xor
loopne
pusha
xchg
cltd
adcl
xchg
daa
addr16
push
xchg
imul
ret
lret
test
dec
jmp
jae
mov
div
hlt
sub
jmp
idiv
testb
pop
fptan
pop
or
enter
push
mov
ljmp
lea
push
lods
psllq
lds
or
pop
jno
mov
ret
sti
mov
jle
push
jae
fnstcw
jmp
fists
add
or
daa
outsb
cmp
mov
jge
shll
add
hlt
fndisi(8087
test
push
mov
or
jne
mov
gs
hlt
in
popa
mov
int
cwtl
mov
bound
lret
daa
sub
cmp
je
out
hlt
add
mov
xchg
or
sub
push
xor
hlt
mov
das
fwait
stos
push
lret
mov
jnp
jmp
jp
pop
sbb
cmc
gs
icebp
inc
mov
clc
rclb
cwtl
insb
jp
leave
lods
push
repnz
mov
in
pop
jo
and
fsubrs
pop
outsl
repz
adc
jae
mov
jns
pop
adc
cmp
cmc
stos
mov
bound
pop
adc
cmp
sub
popf
lahf
mov
mov
outsw
ss
repnz
movl
sbb
addr16
dec
jb
clc
inc
mov
imull
in
mov
daa
shlb
shrb
shrl
shrl
push
cli
push
into
jmp
mov
movsb
arpl
mov
dec
hlt
mov
mov
popf
inc
xor
or
movl
mov
das
sti
mov
push
fsubs
xorb
mov
jg
sub
push
cs
imul
xor
ret
adc
cmp
mov
sbb
loope
mov
jne
adc
sti
lahf
pcmpgtd
mov
cmp
jmp
scas
push
or
loope
int3
xor
cmp
out
add
ljmp
cmp
push
or
bound
mov
push
and
lret
repnz
insb
and
xchg
xor
addb
fs
cwtl
loop
cmp
cltd
mov
push
cmp
lock
jecxz
fucomi
cmp
or
cli
addb
cmp
sar
outsb
outsl
sahf
stc
mov
repz
pop
rcrb
stos
aad
outsb
push
push
jb
outsl
addr16
xchg
or
sub
shl
push
inc
std
push
dec
insl
mov
pop
fdivl
stos
adc
sbb
in
sub
pop
and
fst
xchg
and
pop
icebp
xor
mov
pop
jecxz
xorb
stc
or
xor
mov
pop
xchg
xor
and
or
sub
inc
insb
stos
ret
enter
hlt
popa
into
lcall
add
int3
jge
rcl
mov
lods
pop
popf
pop
dec
cmp
pop
xor
adc
popf
sub
xor
ret
int3
xor
xor
or
sti
mov
lods
ja
xchg
fwait
movsl
cmp
ja
daa
stos
clc
xchg
fwait
nop
mov
ja
dec
shlb
mov
das
outsl
pusha
push
ja
sahf
or
push
jmp
sub
addr16
lods
lds
adc
or
lret
mov
js
cmp
test
add
in
loop
stos
pop
clc
mov
dec
mov
mov
cltd
test
fidivrl
mov
and
bound
inc
sub
leave
push
loop
mov
in
adc
xchg
push
shrl
adc
rcrl
orl
addl
add
sbb
into
inc
shll
js
sub
sub
add
and
in
fsubs
sbb
xchg
or
testb
gs
mov
xor
dec
aaa
or
jl
cwtl
push
cmpsl
adc
mov
test
lret
push
nop
clc
mov
pop
jp
adc
mov
dec
push
jp
push
cltd
adcl
dec
popa
mov
inc
in
iretw
mov
or
adc
pop
negl
mov
push
or
jae
test
lock
sbb
mov
jge
sub
ret
jne
sub
outsl
popf
mov
pop
cwtl
mov
xor
loope
sub
movsb
pop
xorb
mov
inc
imul
std
lods
divb
sbb
lods
xchg
mov
ret
adc
arpl
pop
sahf
mov
scas
outsl
aam
mov
shlb
xorl
jae
jb
fwait
ljmp
ds
insb
dec
push
jg
adc
cli
mov
push
cmpsl
xor
add
xchg
aad
fsubs
xor
rcr
sbb
jecxz
push
lret
jl
push
imul
repnz
hlt
mov
imul
fld
jns
lcall
inc
dec
pusha
sub
cmpb
stos
xlat
jge
movsl
sbbb
cmpsl
test
jnp
pop
notb
adc
popa
or
mov
sbb
fdivl
inc
or
outsb
insb
in
mov
mov
xchg
loope
enter
add
in
jl
in
cmp
push
dec
push
cld
faddl
cli
push
jg
or
icebp
cli
aas
jp
imul
repnz
test
inc
ljmp
addr16
dec
adc
and
lret
jo
enter
sbb
aam
addr16
ficompl
shll
xchg
push
mov
jl
push
push
pop
xchg
lds
dec
call
cmpsb
sbb
in
repz
jo
or
jecxz
push
xchg
inc
mov
jge
mov
enter
addr16
outsb
hlt
jno
adc
lcall
jo
mov
je
test
ja
mov
or
lds
imul
mov
popf
pop
fwait
rcll
daa
sbb
cmpsb
xor
cmpsl
fadds
out
scas
fwait
push
pop
mov
shlb
xor
sbb
push
ffreep
fnstenvs
add
and
mov
cli
mov
bound
loopne
std
rcr
call
lahf
xacquire
rolb
dec
dec
ret
ljmp
or
adc
xor
int
dec
imul
in
mov
cmp
mov
mov
mov
pop
daa
jb
adc
loope
mov
and
test
push
ja
rorb
outsb
repz
pushw
cmpsb
das
incb
cmp
add
dec
loopne
push
and
ja
mov
sub
test
aam
and
fucomi
leave
loopne
mov
xchg
sbb
cmpsb
push
jbe
push
test
inc
and
mov
jp
cwtl
daa
mov
mull
sub
test
in
fucomi
sub
mov
sbb
cmpsl
icebp
jns
mov
inc
pop
out
sub
in
xchg
dec
outsb
popf
imul
adc
jnp
mov
jo
mov
scas
test
test
mov
in
mov
jge
adc
and
jg
movsl
xor
pop
mov
test
cld
xchg
in
xchg
jns
cmp
add
pop
pop
cmp
mov
sti
pusha
or
jp
imul
cmc
adc
inc
inc
ljmp
or
imul
jl
scas
in
xor
bound
mov
es
and
aas
dec
aad
daa
pop
xor
das
mov
mov
sub
lcall
xchg
call
lea
adc
pushf
cs
mov
cmp
jno
push
mov
xchg
sbb
xchg
shl
daa
sub
jecxz
stc
xchg
iret
dec
mov
aad
imul
ficoms
xchg
xchg
sbb
dec
jg
push
addl
lea
fldcw
nop
and
or
cmpsl
cmp
loopne
sbb
sub
push
sub
sub
add
js
popf
ljmp
cmpb
xor
nop
lret
adc
pop
sbb
lods
fidivl
pop
adc
test
enter
xchg
fsubs
xchg
orb
fdivr
int3
sbb
or
rolb
rcrl
out
adc
pop
xchg
add
push
lods
mov
ror
rclb
call
rcrb
divb
adc
adc
dec
cmp
lcall
pop
outsl
lea
ret
jmp
ja
dec
xlat
outsl
sbb
loope
test
addr16
call
mov
das
push
add
and
mov
sbbb
ret
jg
nop
mulb
push
cwtl
jne
push
ljmp
pop
mov
cltd
adc
push
inc
push
pushf
xchg
mov
ljmp
jnp
daa
insb
sbb
xor
scas
xchg
pusha
cli
pop
pop
or
ret
test
jnp
in
rolb
push
push
imul
cmp
adcl
mov
ds
cmpb
dec
jp
xchg
mov
leave
imull
sub
mov
sbbb
mov
cli
popa
mov
sahf
jecxz
and
mov
xor
mov
xchg
sbb
in
dec
sbb
jmp
jmp
mov
pushl
ljmp
mov
es
push
out
cs
cmpsb
ret
mov
jecxz
add
xchg
cld
repnz
push
outsb
pushf
mov
sbb
orb
xchg
test
fldcw
in
xchg
fsubrp
sbb
jge
pop
in
and
pop
xor
mov
int3
sbb
test
xor
mov
lds
bound
scas
mov
sub
outsb
cmp
insl
pop
xor
mov
jecxz
nop
fisubrs
or
xchg
fiaddl
lcall
cmp
xchg
add
cld
andb
iret
pop
test
adc
add
cwtl
jnp
js
out
in
push
loope
or
pop
dec
push
ss
xchg
mov
cmpb
xchg
jg
xor
int3
ret
movsl
push
cmc
fsubs
inc
ret
adc
pop
dec
sub
jecxz
xchg
je
imull
jo
xchg
lods
sbb
jae
addl
xchg
xor
fsubrp
lds
mov
jmp
pop
inc
iret
popf
dec
inc
xchg
inc
sahf
daa
cmc
rcrl
fcomp
push
insl
enter
adc
mov
std
data16
mov
cmp
in
sahf
jbe
fists
dec
shll
push
mov
sub
outsl
dec
or
cmpsb
adc
in
rcll
fstpl
mov
sbb
jae
and
cmp
push
pop
cmpsl
sti
pop
fcoml
cmp
cmp
sub
out
xchg
cmp
lods
inc
std
adc
sbb
jl
inc
jb
cmp
adc
or
dec
push
and
inc
orb
cwtl
rcr
nop
lcall
pop
dec
addr16
fwait
push
sarl
dec
loope
loope
lods
and
and
fdivs
gs
pushf
or
pop
mov
and
fdivl
adcl
push
pop
pop
lds
jae
xchg
inc
xchg
fucomip
sbb
push
nop
aam
xchg
push
shl
imul
test
and
loop
inc
std
mov
aas
cs
mov
into
scas
or
push
rol
cmp
mov
push
push
inc
dec
sbb
or
or
stc
cmc
fmuls
and
add
in
or
test
les
mov
daa
jo
mov
loope
cmp
inc
cmp
fwait
sarl
and
fildll
cmp
das
xlat
out
loope
inc
push
nop
fwait
sbb
xchg
sbb
jmp
mov
adc
jo
xchg
lods
mull
inc
sarl
adc
cmpsl
add
fs
in
push
and
jg
inc
mov
xchg
popf
xchg
call
xchg
mov
pop
mov
fdivrs
scas
stos
mov
xchg
jmp
fbld
pop
xorb
cmc
dec
push
xchg
fcmovb
sti
outsl
test
add
inc
jno
scas
pop
sbb
cwtl
cltd
pop
lods
insb
pop
ljmp
aaa
or
shlb
mov
sbb
fildl
int
xchg
cs
mov
repz
icebp
dec
push
pop
hlt
and
fwait
xchg
and
test
shlb
inc
nop
mov
add
push
jmp
cmp
or
and
jg
mov
sbb
cs
out
lea
daa
sub
fsubrl
lret
xlat
adc
mov
dec
adc
sahf
or
fcompl
cli
and
adc
lcall
stc
rorb
cmp
inc
jno
xor
insl
cltd
imul
inc
or
add
adc
int3
cmp
jbe
push
mov
or
fsubrl
xor
outsl
pop
sarl
jae
cmp
adc
ljmp
cmp
andb
jle
jae
gs
mov
lcall
jp
js
imul
dec
insl
out
and
lret
imul
jnp
jg
sbb
fimull
test
fs
jp
test
mov
shl
mov
and
outsl
test
mov
js
outsb
sarl
lcall
das
xor
jle
into
add
jnp
insb
mov
stc
clc
rclb
sbb
xchg
push
mov
andl
and
sbb
mov
mov
push
mov
jp
sbb
push
popf
fistl
push
push
dec
lret
loop
loopne
add
lret
lock
sub
cld
outsb
jl
adc
jne
iret
jo
pop
es
lahf
data16
xor
add
add
cmp
hlt
nop
imul
ret
mov
push
jne
xor
cmp
xchg
pop
cmp
stos
dec
dec
add
sahf
addr16
popf
les
inc
jno
adc
ret
xchg
aad
pushf
repnz
pop
lahf
filds
sub
dec
inc
das
push
aas
add
add
xor
dec
xor
xchg
addr16
and
insb
push
rorl
cli
vmwrite
mov
mov
and
sbb
stc
in
push
std
add
mov
lock
repnz
loop
ja
lock
jecxz
pop
xor
repnz
loop
test
sbb
jl
adc
js
inc
xchg
inc
dec
xchg
pop
dec
mov
dec
mov
sub
icebp
insb
test
addr16
scas
and
xlat
cld
adc
cli
adc
cwtl
jmp
add
jmp
add
enter
lods
inc
cs
sbb
shll
in
or
sbb
adc
ficoml
cmp
cmp
loopne
sub
mov
cli
mov
jmp
push
cwtl
and
scas
imull
push
push
jbe
das
mov
mov
lods
cmp
sub
out
xchg
aam
fsts
sub
scas
mov
add
popa
dec
sbb
inc
jecxz
into
adc
int3
or
aam
iret
dec
pop
dec
pop
stos
out
je
sub
lahf
js
pop
jge
jne
jg
mov
pop
ret
inc
insl
in
int3
sbb
pusha
mov
pop
pop
or
rclb
cmp
xor
and
ljmp
xor
int3
loop
cmpsb
shll
in
ds
movsl
dec
sbb
mov
imul
pushf
jno
lahf
xor
fwait
xlat
mov
imul
rolb
jae
xlat
stc
outsl
bound
out
lock
mov
xchg
in
or
and
sub
dec
mov
data16
sub
and
sti
push
or
mov
adc
jmp
fisubs
cmp
lahf
fdivr
fdivrl
mov
dec
or
outsl
push
shl
or
shlb
add
fsubs
out
xor
jecxz
jp
sahf
aad
mov
out
fcomip
xor
xlat
outsb
and
xchg
jno
cmp
jecxz
out
jns
das
adc
dec
mov
mov
pop
ljmp
mov
pushf
pop
in
insl
fwait
pop
dec
lds
repnz
push
fstpl
xor
mov
out
jecxz
xor
mov
xor
sbb
jp
adc
cmpsl
loopne
cmp
mov
sbb
lcall
xchg
out
sti
push
add
loopne
test
roll
cmp
test
lock
pop
sbb
stos
xchg
xor
repnz
stos
dec
mov
jl
jmp
arpl
jmp
add
mov
les
popa
inc
stc
insl
mov
sub
xchg
inc
xchg
es
dec
mov
mov
aaa
hlt
cmp
xchg
add
enter
repnz
addr16
cmp
add
enter
sbb
ficomps
mov
push
ja
dec
jb
fsubr
mov
cmp
and
cmc
fsubrl
mov
pusha
mov
add
pop
or
dec
mov
push
arpl
dec
ficoms
iret
bound
sbb
je
test
out
popa
aad
les
leave
leave
ret
bound
fs
aam
test
cmp
dec
dec
xor
fsubl
xchg
cmp
les
mov
icebp
aam
popf
sarl
rcr
sbb
mov
mov
int3
test
out
cmpsl
sbb
pop
addr16
aaa
insl
xchg
jge
out
xchg
adcb
push
add
xchg
adc
cli
adc
sbb
and
aam
sti
sti
pop
mov
sbb
pop
cs
lret
int
pusha
fcomip
add
mov
jae
sbb
sub
add
test
dec
sbb
cmpsb
imul
jne
dec
stc
sbb
dec
lea
movsl
lahf
subb
scas
dec
adc
jmp
testl
mov
insb
clc
and
pop
stos
xchg
cmp
fstpt
js
icebp
mov
mov
jmp
mov
add
clc
xor
cli
lods
int
jp
pop
jp
addr16
cmp
sbb
inc
enter
inc
mov
hlt
test
fldt
and
jecxz
imul
xor
and
xor
mov
sub
sbb
outsb
je
ret
xor
jg
inc
xchg
pop
ljmp
lahf
scas
ja
adc
and
xor
cmp
loopne
and
lret
loopne
push
inc
fcomps
and
adc
loope
imul
clc
negb
sarl
les
stos
scas
push
stos
add
xor
xor
dec
stos
fwait
daa
push
pop
adcl
inc
insl
or
popa
ljmp
pop
adc
jg
or
enter
sbb
xchg
js
inc
fsubp
adc
testb
inc
adc
roll
inc
test
cmc
mov
xchg
mov
mull
add
mov
mov
hlt
out
mov
xchg
addr16
rcrb
mov
mov
xchg
pop
loope
add
sti
test
scas
out
pushf
sbb
pop
sbb
pushf
cmc
lret
jmp
xchg
mov
aam
dec
int3
cwtl
lods
mov
ficoml
fwait
push
enter
outsb
jle
outsl
cmp
mov
xor
mov
lea
pop
jl
frstor
and
or
daa
pop
pop
mov
in
sbb
popa
imul
arpl
xchg
xor
ror
aad
cmp
mov
rcll
ds
sbb
andb
mov
arpl
fwait
scas
int
cmpsl
mov
mov
fmulp
iret
inc
lret
pop
icebp
jae
mov
jo
popf
jg
cs
adc
call
add
push
and
arpl
faddp
ds
into
testl
push
psubd
mov
test
je
pop
repz
inc
jmp
repz
cmp
loope
outsb
test
push
sub
daa
test
aam
xor
xor
xlat
ud2
jl
dec
out
negl
jbe
fldcw
dec
out
ja
adc
mov
xor
dec
mov
push
int
pop
push
and
fildl
mov
popa
les
push
xchg
lods
and
out
xchg
sub
flds
popa
mov
push
imul
adc
jne
mov
xchg
outsl
ficoms
xlat
aaa
ss
or
mov
pop
pop
imul
dec
jp
xor
sub
testl
dec
pop
adc
mov
or
and
cs
dec
mov
xchg
xchg
or
shrb
ret
cmp
jo
mov
or
cltd
fs
push
mov
mov
repnz
push
cli
push
and
mov
cli
cli
push
push
fistpl
dec
popa
mov
lock
jmp
ss
jo
fwait
xchg
pop
adc
out
gs
jb
xor
sub
je
enter
iret
jmp
xor
faddp
push
aam
mov
lods
inc
mov
xor
mov
insb
adc
loope
pop
cmc
push
jbe
jg
fisubrl
pop
mov
fisttpl
jnp
js
shrb
in
jb
in
mov
aam
cmp
insl
ffreep
mov
cli
jp
push
adc
std
loope
loope
mov
pop
in
hlt
scas
mov
sub
ret
jmp
ja
outsl
sbb
jg
lret
mov
clc
xchg
arpl
inc
ds
insl
shlb
mov
addl
lods
mov
out
dec
js
jb
and
call
or
inc
sar
xchg
jns
icebp
jmp
fadd
adc
cltd
xchg
and
and
mov
pushf
les
nop
inc
mov
idiv
jmp
pop
push
sub
push
stc
sub
movsl
jno
mov
pop
jns
mov
sbb
pusha
mov
jno
fs
stc
dec
pop
popf
je
pushl
fbld
ja
stc
pop
xor
cwtl
or
push
add
pushf
mov
sub
add
cmp
mov
cmp
cs
out
imul
mov
aaa
mov
jecxz
push
dec
push
push
and
xchg
test
out
movsl
in
mov
insl
jbe
mov
fadds
mov
jno
jns
sbb
nop
mov
adc
pop
das
jg
jl
rcr
mov
dec
fisubrs
scas
and
mov
add
pop
jg
pop
cmpsl
cmp
mov
cld
daa
mov
movb
sbbb
jmp
jle
ljmp
imul
cmc
icebp
jns
push
mov
repnz
mov
sub
mov
outsl
mov
test
imul
jge
xor
push
dec
insl
in
inc
pop
push
mov
push
mov
jne
mov
bound
data16
xchg
pop
dec
jge
push
mov
shlb
insb
xor
pop
fwait
jecxz
xor
outsb
push
call
repnz
aas
mov
repnz
push
dec
popf
and
lret
mov
pop
add
mov
lahf
lods
pop
imul
les
int3
xor
fiadds
sub
sub
sbb
jl
dec
and
gs
data16
or
test
jo
mov
bound
mov
xor
or
int
adc
fstpl
push
leave
roll
jp
xchg
test
xchg
pop
cmovnp
rcrl
and
stos
dec
fs
push
xchg
mov
in
inc
sub
hlt
push
xchg
imul
lods
adc
mov
xchg
sahf
movsb
dec
not
jo
shlb
dec
jge
push
or
cld
cwtl
sahf
and
mov
cmp
adc
int3
mov
loop
mov
xorw
ja
lods
jecxz
repnz
xchg
enter
sub
dec
out
dec
adc
jne
adc
loopne
mov
arpl
inc
xchg
outsl
mov
pop
data16
mov
push
cmp
pop
daa
jo
out
mov
rclb
ja
or
sahf
pusha
and
lock
out
pop
lea
xchg
push
jbe
scas
add
sub
xchg
fwait
xchg
mov
xchg
mov
rorl
and
sti
mov
xchg
push
pop
cmp
dec
fwait
jae
movsl
inc
aaa
inc
sti
mov
add
call
mov
xor
insl
lock
push
pop
mov
fisubrl
cmp
xchg
mov
lds
cmp
fcomps
and
in
arpl
cmc
inc
or
or
add
ja
in
or
in
gs
push
mov
jo
sbb
movhps
inc
fnstsw
loope
cld
push
or
out
push
pop
and
xchg
jmp
cmp
in
pop
leave
xchg
fwait
push
cmp
negl
cmp
out
and
hlt
out
xchg
aam
imul
pop
or
mov
lcall
jp
or
into
mov
cmc
mov
pushf
inc
mov
sub
or
pop
stos
or
stc
fisttpll
xor
int
mov
out
hlt
mov
and
rorl
cmpb
or
scas
and
into
loope
cmp
ljmp
cmp
pop
push
scas
pop
jno
mov
sahf
adc
cmpsb
mov
xlat
mov
gs
sbb
push
mov
outsl
and
insl
fdivp
repz
mov
add
int
dec
fiaddl
lods
or
sbb
fildl
lds
decb
sbbb
rcrb
stos
sbb
in
push
push
mov
mov
lcall
inc
movsb
test
data16
icebp
and
mov
sub
cmp
dec
loopne
cmpsb
movl
adc
xchg
inc
lods
add
ljmp
sbb
xchg
jmp
test
sub
dec
scas
and
sahf
dec
notb
xchg
sub
mov
int
in
adc
sub
pop
pusha
add
adc
sbb
pop
movsl
aad
mov
flds
div
lret
inc
aas
aas
push
xlat
pop
jg
inc
mov
out
sub
lret
jg
pop
or
jo
sub
or
test
inc
pop
hlt
mov
jb
enter
icebp
pusha
and
pop
rolb
pop
sbb
imul
popf
xchg
xlat
lds
imul
cmc
jecxz
out
adc
mov
div
ljmp
fcomps
push
pop
xchg
pop
je
sub
push
in
leave
loop
mov
andl
dec
sub
dec
das
mov
in
mov
sarb
aad
mov
mov
inc
and
cmpsb
fs
inc
sbb
jns
std
mov
mov
test
dec
fwait
jno
xor
std
ljmp
mov
jns
mov
sub
xchg
jns
ret
jno
fcmovu
in
cli
sub
jle
out
xchg
fmull
pushl
movsl
and
xor
dec
fs
cmp
lds
enter
movsb
xor
aas
or
imul
mov
out
adc
das
call
push
cmp
sbb
daa
xor
mov
ret
adc
sbb
push
xchg
sub
pop
dec
dec
aaa
gs
add
std
push
inc
out
add
rcll
cmp
dec
js
cmp
xchg
ficomps
mov
mov
mov
shll
pop
fadds
xchg
mov
out
inc
repnz
jns
xchg
shll
dec
xor
shrl
stos
dec
or
enter
sbb
scas
sbb
das
loopne
jp
jae
das
imul
sbb
ret
lcall
insl
xor
test
push
bts
das
stc
dec
testb
mov
lret
xchg
repnz
fst
mov
out
inc
loope
cmpsb
push
pop
or
inc
fwait
ja
sbb
fcmovnu
pop
lahf
push
out
out
mov
mov
aad
out
adc
mov
std
push
mov
jge
and
lahf
call
inc
icebp
test
pop
cwtl
lahf
xchg
lods
sbb
push
jae
lret
rol
lods
jmp
sub
fidivl
hlt
mov
jo
pushf
pop
xchg
aad
push
test
cs
xchg
cmpb
mull
cmpsb
fstpl
mov
fsubrs
xor
or
xchg
test
mov
inc
jo
push
popa
lahf
jo
push
vaddpd
dec
test
xor
dec
jge
icebp
mov
push
frndint
mov
or
loope
and
xlat
fidivrs
loope
lea
mov
bound
jmp
jbe
shl
hlt
mov
xchg
pop
jns
jnp
jne
test
pop
popf
rclb
in
lds
into
psubusw
int3
cmc
out
pushf
pop
outsl
les
lea
gs
adc
mov
in
rcrb
sahf
push
mov
dec
pop
inc
xchg
jo
dec
lret
fisttpll
xchg
xchg
cld
repz
arpl
test
lahf
testl
xor
stos
push
fmull
test
call
push
rolb
sar
les
inc
jae
cltd
lcall
mov
pushf
repz
fwait
inc
mov
sahf
pop
mov
test
outsb
leave
xchg
push
jmp
cltd
or
test
mov
cmc
in
or
lods
mov
jmp
aaa
inc
jbe
insl
jns
pop
std
xor
jle
dec
xchg
int
inc
dec
mov
rcll
mov
add
pop
stc
addl
jl
fcmove
mov
sbb
sti
push
xchg
ljmp
fdivrs
dec
inc
add
sub
xchg
iret
out
cltd
ljmp
and
lds
xchg
bound
mov
jae
pop
popf
arpl
hlt
es
mov
mov
jo
out
mov
leave
push
incb
adc
pop
xchg
hlt
and
mov
push
push
push
icebp
nopl
fcmovb
push
enter
xlat
xchg
mov
imul
cmp
xchg
inc
cld
test
add
test
inc
cmp
iret
xchg
jne
inc
int
or
cmc
sub
push
addl
jno
xchg
enter
mov
imul
push
cld
xor
ja
mov
shll
push
push
ret
pop
les
mov
sub
jo
mov
adc
mov
xchg
xchg
pop
mov
mov
addr16
sbb
cmp
or
mov
or
dec
and
shll
pop
ss
xchg
xchg
jbe
jae
roll
imul
ret
mov
mov
sbb
punpckhdq
sar
mov
int3
cmp
outsb
cmpsl
enter
aam
jmp
cwtl
insl
das
xchg
sub
xlat
loope
ja
pop
lea
popf
jnp
pop
pop
mov
pop
add
mov
push
or
mov
clc
dec
outsb
mov
inc
and
popf
das
leave
icebp
std
sub
imul
and
icebp
or
mov
pop
rolb
cltd
fs
cwtl
adc
divb
dec
outsl
test
inc
pop
lds
stos
sbb
add
adc
sbbl
fisttpl
jecxz
lods
sub
arpl
es
push
ljmp
fsubr
aas
and
notb
movsl
inc
sbb
pop
xlat
ss
jge
int3
xor
pop
pop
jb
and
jo
mov
and
and
xchg
lods
xchg
xor
or
push
cwtl
movsb
xor
repnz
leave
in
loope
mov
mov
cli
stc
aas
test
addr16
xchg
mov
jae
jb
rclb
fldcw
testl
inc
sub
adc
and
in
test
add
gs
out
adc
aad
in
addr16
lahf
cld
sbb
cmp
jbe
jno
int
xor
jmp
lods
mov
ret
jg
arpl
orb
cs
shll
cmovb
sahf
xchg
outsl
outsb
ret
pop
lcall
push
xor
inc
dec
dec
popa
ss
pushf
mov
stc
push
hlt
sub
addl
inc
sub
mov
inc
fcompl
icebp
sub
dec
adc
mov
inc
rcl
cmp
lret
adc
xor
mov
dec
fsubl
data16
xchg
addr16
loopne
int
sub
fidivrs
adcl
jnp
sarl
hlt
fisttpll
lods
arpl
mov
lret
popf
jmp
dec
shrl
sbb
das
iret
and
jne
lret
pop
in
mov
inc
mov
cmp
xchg
loop
pop
dec
aaa
pop
lahf
mov
fcomps
mov
aam
add
es
pushl
sbb
sarb
insl
pusha
adc
sbb
xor
mov
and
mov
shrl
inc
out
cmc
ficomps
mov
pop
jp
movsl
push
leave
pop
mov
aaa
pop
ja
aas
inc
dec
pusha
mov
in
enter
or
jnp
scas
cwtl
ffreep
shll
inc
add
imul
nop
dec
imul
mov
out
std
sub
pop
shrl
lods
jmp
lea
test
dec
inc
mov
jmp
fwait
pop
xchg
popf
loopne
inc
adc
push
out
fs
mov
push
jns
mov
pop
mov
ljmp
popa
xchg
fmuls
mov
add
adc
fwait
insb
aaa
and
or
push
xchg
je
lret
lret
sarl
push
int3
mov
pop
mov
jns
filds
scas
mov
in
in
aam
jne
pop
jg
mov
stos
fxch
cmc
idivl
and
pop
pop
jl
sub
mov
xchg
adc
dec
xor
pop
aas
pop
data16
mov
mov
adc
push
mov
shll
sahf
stc
cmpsl
ja
mov
ds
imul
incb
jns
fdivrl
lods
sub
xor
mov
pop
inc
dec
call
xor
nop
push
push
mov
cmp
or
dec
inc
js
mov
iret
in
cwtl
and
cmpxchg
inc
movsl
cs
dec
push
adc
mov
adc
jo
push
mov
mov
movsb
push
clc
mov
out
push
adc
and
repnz
adc
sbb
inc
push
call
subl
push
mov
pop
sub
or
andb
int
std
outsb
popa
mov
arpl
mov
and
sub
pop
push
out
jae
push
scas
push
cltd
cmp
je
mov
std
add
mov
mov
popa
scas
and
sbb
jmp
dec
cmp
stos
das
xor
cli
jg
iret
xor
inc
aad
xchg
es
data16
jno
movsb
mov
stos
stos
in
sbb
inc
push
loopne
cmp
orl
sub
cmpsl
ds
cmpsl
mov
or
imul
xchg
mov
lea
pushf
pop
pop
leave
bound
hlt
mov
aam
and
mov
repz
mov
shlb
incb
jle
adc
in
xor
mov
int3
push
loopne
outsl
rcrb
inc
jl
sti
sbb
fwait
mov
sbb
iret
scas
inc
xchg
add
inc
jg
popa
pop
mov
fidivs
mov
push
scas
or
scas
adc
aam
addr16
mov
add
fsubl
push
xlat
scas
outsb
mov
push
or
into
or
imul
jp
das
insb
cmpb
popf
xchg
push
js
out
daa
sub
fwait
pop
push
pop
cmpsb
xchg
sub
jae
cli
in
clc
xorl
pusha
shlb
fdivrp
or
pop
inc
dec
ds
int
mov
xor
ljmp
shr
and
jmp
movsb
test
mov
pop
jmp
sbb
inc
push
pop
fbstp
iret
ret
bound
mov
add
xor
adcb
cmpsb
xor
ret
inc
fldl
xor
cmp
stc
push
cmpsb
mov
dec
dec
lahf
dec
popa
negb
cmp
es
int3
pop
pop
mov
adcl
sti
aad
fists
int3
out
cmp
xor
aaa
cmp
and
fwait
push
aam
stos
arpl
out
clc
sti
ja
inc
mov
int3
lea
mov
inc
nop
jp
repz
outsb
dec
aaa
test
and
fs
jp
dec
lret
lret
aas
push
decb
adc
jno
cmp
sahf
ret
dec
xor
fcoml
in
push
popf
push
addb
cmp
lahf
ror
mov
mov
add
insl
jmp
mov
xor
mov
or
mov
inc
jns
mov
push
imul
ss
scas
push
cli
dec
jp
cmp
adcb
lcall
fisttpl
fbld
out
add
jae
les
jmp
cmp
es
cmp
add
lret
shl
into
xchg
cmpsl
jne
lds
mov
cltd
sub
imul
lahf
cmp
dec
mov
test
mov
aam
pop
lret
popa
and
push
ror
imul
je
mov
sahf
jae
adc
push
lods
pop
icebp
sbb
add
push
mov
rol
add
sysenter
movsb
jecxz
mov
jo
lahf
cli
imul
mov
addr16
cltd
pop
inc
pop
cmp
or
popf
mov
and
cmp
add
arpl
mull
or
ds
jmp
aas
movsl
and
ljmp
xchg
adc
ret
loop
dec
dec
adc
scas
idiv
test
insb
pop
fadds
test
cltd
ror
jecxz
xchg
or
lods
lcall
stc
lods
jne
push
lcall
or
dec
and
test
jg
jle
shlb
dec
scas
xchg
inc
inc
sahf
flds
out
imul
inc
push
mov
popf
pushf
pop
jle
cmp
adc
fisubl
out
adc
add
jnp
gs
sub
cltd
dec
iret
pop
push
rcl
mov
pop
push
aam
mov
xor
xchg
mov
mov
sub
lods
arpl
scas
add
roll
insb
sub
push
fiaddl
push
imul
cwtl
andl
push
push
faddl
test
xchg
pop
dec
mov
add
xchg
arpl
lods
push
pop
lahf
call
push
cmp
dec
push
mov
jo
scas
sti
shlb
xorb
or
xchg
mov
add
fwait
pop
jg
lret
in
xor
pop
cmp
test
or
cmpsb
stc
inc
fmull
sti
leave
cmpsl
fdivp
pushl
sarb
negl
fldt
roll
push
jp
roll
ja
or
ljmp
sbb
flds
incb
imul
fisttpl
mov
xchg
js
pop
sbb
inc
adc
je
jecxz
in
or
sahf
mov
cmp
pop
ftst
or
push
pop
dec
dec
sbb
lahf
pop
xchg
ss
arpl
push
sub
xor
andl
mov
xor
mov
andb
icebp
cmp
daa
jno
sbb
mov
mov
fists
add
xlat
testl
leave
push
or
scas
cmc
insl
xor
faddl
cmp
ljmp
jnp
xorl
lods
and
les
lret
out
shlb
ss
mov
inc
adc
into
xchg
hlt
es
arpl
out
add
cmpsl
test
or
fimuls
ficoml
repnz
jl
xchg
std
sbb
or
out
dec
sti
mov
jns
adc
nop
jo
xchg
adc
cmpb
inc
inc
lret
sub
sbb
sub
inc
mov
mov
repnz
stos
and
js
cmc
dec
dec
and
pop
push
shll
es
imul
lcall
mov
sbb
jns
sbb
shll
orl
mov
out
in
or
cmpsl
mov
aas
pop
in
ja
cltd
jo
shrl
jno
dec
push
push
jecxz
sti
pop
loopne
fdivrs
loop
and
xchg
sbb
lret
in
sbb
adc
imul
nop
or
cltd
aas
sbb
cmp
sbb
movsb
loop
int
cld
dec
push
sbb
pop
mov
and
sub
and
mov
fldenv
mov
iret
cmp
pop
inc
lcall
mov
fwait
cmp
lcall
adc
lcall
pop
outsl
out
cmp
fsubrs
xor
orb
jb
in
fs
es
iret
int
push
xor
outsl
cmp
mov
call
xlat
sbb
stos
data16
lcall
mov
dec
mov
cmp
push
pop
push
into
lret
xor
push
adc
ss
scas
loop
adc
loop
mov
sbb
fwait
or
adc
cmc
mov
push
jp
call
mov
sbb
xchg
sbb
cmp
je
mov
lds
loopne
sub
addps
enter
aad
pop
lods
stos
cwtl
in
inc
popa
sub
cld
sbb
rol
inc
pop
stc
push
lcall
push
jl
rcr
clc
adc
mov
fldenv
and
js
test
dec
jns
sub
inc
dec
cmpsb
or
or
repnz
mov
lret
xchg
sbb
movsb
cmpsl
xchg
push
mov
pop
adc
lods
shll
push
insb
int
cmpsb
mov
cmp
mov
test
aas
inc
pop
loop
jl
mov
les
adc
aaa
jb
add
addl
movsb
cli
test
pusha
aaa
cwtl
aaa
push
jbe
hlt
fldt
push
insl
in
test
repz
ds
dec
and
out
cmp
sbb
mov
mov
push
into
sub
dec
popa
enter
call
sub
aad
jns
mov
clc
popa
jle
mov
mov
rol
out
subl
mov
mov
popa
push
sarl
xchg
jg
pop
bound
pop
cmp
in
sarl
movsl
jge
je
sub
shlb
xchg
fsubr
lds
repnz
inc
stos
ffree
jb
mov
mov
lock
insb
mov
inc
inc
out
jp
popa
jp
rorl
jle
xlat
inc
jb
mov
xor
jp
push
dec
mov
dec
mov
and
daa
pop
pop
hlt
pop
bswap
sbb
add
mov
repnz
negl
mov
ss
push
stos
popa
fcoms
add
xchg
dec
orl
push
sbb
js
xchg
int3
pusha
xchg
adc
xchg
sub
cwtl
lods
ficoml
bound
sbb
jo
jecxz
xchg
cmp
stos
es
inc
or
mov
out
inc
push
xor
ret
add
out
push
adc
hlt
jb
out
cmpsb
inc
pushl
test
mov
mov
xchg
xchg
out
imulb
push
arpl
cltd
in
sarl
xchg
imul
lock
cli
inc
inc
movsl
fbld
xor
push
jl
fdecstp
adc
push
movsb
outsb
iret
push
clc
xchg
sbb
cmpb
decl
pop
data16
add
mov
movsl
and
shll
shll
add
lahf
inc
pop
inc
inc
addr16
sub
adc
lods
dec
orb
lret
inc
sub
sub
mov
outsl
cmpsl
fs
mov
mov
mov
lods
mov
add
push
jmp
lahf
pop
fiaddl
aas
add
push
push
dec
lock
sbb
orb
pop
in
sub
dec
test
negl
ret
inc
jecxz
dec
add
ret
pop
sarb
push
adc
add
pop
repnz
push
lods
cld
shrl
xchg
and
sbb
shrb
xor
pop
pop
ret
test
movsl
in
nop
xchg
pop
arpl
xorb
sbb
mov
jae
add
data16
sbb
xchg
pop
lods
jne
loop
xor
mov
inc
in
adc
daa
inc
ss
inc
mov
dec
repz
push
out
jo
fisubs
xor
pop
jg
ret
jnp
jae
out
hlt
rcr
cs
notl
out
jae
jge
mov
stos
roll
xchg
dec
fcomip
ror
mov
xchg
mov
and
cmc
ja
mov
pop
adc
ret
les
xor
jg
cwtl
arpl
jnp
jb
leave
jp
shrl
imul
pop
rorl
and
lret
xorl
sub
js
lea
scas
fistpll
sbb
and
push
push
xor
mov
idivl
mov
test
sub
es
mov
sahf
loope
mov
movsb
mov
sti
adc
xor
adc
push
cli
daa
add
jmp
xlat
inc
sub
fistps
dec
rcr
mov
ret
subb
pushf
fisubl
ljmp
iret
rorl
mov
xchg
and
mov
pop
mov
xor
mov
bswap
or
bound
adcl
push
int3
sub
adc
jae
into
xchg
push
int
or
add
jb
jle
gs
jp
push
sbb
xor
jp
mov
pop
arpl
pop
dec
adc
aad
ss
lret
loope
orl
push
ja
arpl
out
sti
push
pop
sbb
mov
iret
lea
in
mov
xchg
pop
mov
cwtl
sbb
push
clc
pop
lods
ljmp
sub
ljmp
leave
test
cmp
or
dec
inc
lahf
adc
cld
icebp
pop
adc
lods
cmpsb
dec
dec
in
mov
lock
push
cmc
jno
xchg
jne
push
sub
xor
lds
fcompl
push
sub
jecxz
daa
dec
loope
jo
and
ret
loop
fcmovb
xor
movsl
enter
out
mov
jo
out
outsb
mov
aam
ljmp
sahf
xor
fdivrs
add
pop
test
pop
sbb
int
and
icebp
or
cmp
or
xchg
aam
icebp
or
cmpsb
pop
scas
mov
scas
and
mov
xchg
movsl
fimuls
pop
adc
ret
cmpsb
stos
aaa
mov
mov
jg
iret
mov
adc
mov
pop
inc
or
jae
push
cwtl
push
jbe
inc
mov
xor
out
pop
jl
adc
sbb
icebp
stos
add
add
xor
pusha
push
xchg
fisubl
rorl
push
inc
mov
or
movsb
ljmp
scas
push
incl
push
fwait
push
popa
add
stos
push
aas
jge
push
sub
or
jno
and
mov
pop
cmp
jmp
sbb
sbb
cmp
mov
loop
out
in
adc
dec
adc
je
dec
mov
scas
pop
pop
ja,pt
push
scas
sar
js
int
iret
mov
stos
mov
enter
imul
xchg
fisttps
jl
call
adc
adc
xorps
xchg
sahf
dec
ficompl
mov
insb
lods
xor
stos
pop
push
loope
or
mov
cmpsl
adc
sahf
pop
ljmp
xchg
mov
arpl
pop
mov
shl
decl
fcomp
mov
xchg
xor
mov
lahf
sub
rclb
outsb
cmp
jmp
lret
or
adcb
rcl
fstl
insl
dec
test
imul
loopne
and
mov
jae
lea
shll
out
loope
cmp
pop
leave
jno
fwait
adc
inc
out
sub
loope
ret
clc
stos
shr
les
hlt
add
or
inc
sbb
pop
mov
ss
cmp
inc
dec
stc
mov
mov
or
add
ret
pop
adc
cmp
addr16
add
test
inc
lods
inc
mov
hlt
fwait
mov
movsb
test
push
xor
daa
sub
vfmsubpd
iret
sbb
mov
loopne
xchg
mov
into
lret
mov
xadd
cmp
inc
inc
retw
fcoms
sbb
dec
jmp
in
or
mov
or
xchg
sbb
add
in
ljmp
sbb
repz
inc
sbb
fbstp
insl
cmp
adc
adc
add
jbe
dec
jp
inc
push
sbb
movsl
xchg
pusha
dec
inc
and
jmp
fcmove
xor
dec
in
cltd
xor
clc
jmp
scas
insl
loop
xchg
sub
inc
pop
push
les
adc
scas
jp
add
movl
cmp
movl
je
xor
mov
not
mov
subl
xor
adcl
xor
xorl
add
xorl
add
notl
adc
xor
andl
mov
orl
push
add
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xorl
movl
dec
mov
orl
mov
mov
adcl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
dec
mov
mov
sbbl
xor
mov
sub
mov
mov
add
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
call
jmp
mov
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
jmp
lea
xorl
mov
inc
mov
mov
xor
sub
mov
movl
mov
mov
sub
add
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
sbb
mov
push
mov
xor
or
mov
or
xor
xor
mov
push
orl
add
movl
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
adc
mov
xor
subl
add
jmp
mov
jmp
sub
xor
test
mov
mov
mov
jp
adc
mov
cmp
and
push
mov
in
ljmp
add
dec
lea
sbb
push
aas
pop
jg
mov
cmp
fistps
bound
sub
dec
cwtl
pop
mov
hlt
aaa
pushl
fimull
loopne
outsb
ret
fmull
daa
mov
mov
dec
sti
stos
inc
ret
es
jle
mov
icebp
add
sbb
cmc
lret
or
push
cmc
add
xor
jmp
pop
sub
xor
insl
xchg
cli
jp
lods
pop
mov
aaa
adc
daa
push
or
pushl
mov
jl
lds
xchg
aam
and
scas
cmp
ja
clc
push
std
ja
ret
in
cmp
pop
adc
dec
sbb
idiv
jp
sub
pop
sbb
jo
movsb
and
sub
push
jno
int
into
das
pop
sahf
mov
aam
ret
aaa
loopne
imul
inc
and
fdivrl
mov
sbb
jle
loope
push
and
xchg
test
int
imul
invd
dec
xchg
add
adc
sbb
inc
and
adc
add
jecxz
mov
mov
mov
adc
cmp
ja
sbb
dec
mov
insb
pop
xor
jecxz
lods
lret
shlb
adc
in
inc
xchg
jge
xor
mov
dec
push
lods
add
es
mov
sti
jge
and
jb
xor
xchg
add
pusha
pop
cmp
insl
jnp
std
mov
ret
dec
xchg
outsb
movsb
pop
mov
arpl
cmpb
inc
sub
xchg
and
das
lock
ljmp
pop
insb
pusha
mov
ds
popf
inc
lahf
roll
push
out
cmp
sbb
int3
bound
sub
mov
addr16
paddsb
shl
sub
sbb
push
cmp
arpl
mov
clc
fsts
je
shr
dec
adc
data16
xchg
test
sahf
orb
dec
loopne
rorl
outsl
pop
sbb
fcmovu
aam
fwait
add
push
pop
pushf
pop
mov
insl
xor
test
xor
push
into
aam
lret
jecxz
lods
pop
jg
jbe
sbb
fisubl
sub
clc
stc
dec
pop
pop
pusha
mov
sbb
jno
aad
out
iret
sub
mov
test
jno
cmp
mov
pop
pop
arpl
push
aad
sub
or
data16
xchg
xor
lret
lds
repz
and
lcall
movsl
pop
mov
cmp
xor
mov
mov
inc
lds
cmp
insl
pushf
adcl
shl
mov
pop
push
sbb
sbb
jae
insb
sub
add
adc
scas
enter
ljmp
mov
and
out
push
pop
add
xchg
movsb
dec
pop
cmp
jb
mov
xchg
pusha
cwtl
mov
jns
sahf
fwait
push
push
mov
jne
scas
imul
mov
mov
inc
daa
divl
cmp
pop
in
mov
fisubrl
xor
pop
fdivr
int3
jno
xchg
jp
clc
jle
xchg
and
rcll
ds
dec
fld
int3
cmp
mov
xchg
or
and
scas
je
dec
fisubrl
sbbl
cwtl
sub
pop
xchg
in
out
push
adc
sbb
daa
test
and
and
inc
outsb
and
cmc
in
shlb
mov
imul
jle
sbb
cmc
pusha
adc
sti
pop
jne
test
jo
ljmp
inc
cmpsb
dec
jno
jne
scas
stc
inc
adc
fs
pop
roll
push
mov
in
aam
sbb
xor
fildl
cmp
fs
mov
ljmp
push
scas
arpl
ret
cmp
adc
adc
idivb
popa
cltd
push
divl
inc
pop
adc
push
rclb
sub
mov
rolb
popa
lock
sbb
pop
loope
in
icebp
inc
jae
adc
adc
push
jp
mov
test
in
or
cmovp
pop
pop
mov
int
push
sbb
pusha
jae
lock
push
int
sbb
add
xchg
cmp
push
jae
sub
mov
scas
jge
cs
or
xchg
lcall
ss
cs
mov
or
daa
sti
xor
push
inc
push
mov
ds
add
jge
mov
or
push
std
inc
adc
xor
push
mov
test
je
cmp
push
das
or
xchg
sbb
inc
jno
inc
dec
lret
pop
daa
in
insb
leave
fxch
pop
jno
sub
and
add
push
vshufps
daa
push
repnz
loopne
mov
enter
xchg
bound
jne
insb
into
cmp
rol
mov
popa
sbbl
push
sbb
orl
add
push
jne
or
push
or
loopne
test
mov
push
mov
push
mov
dec
aam
icebp
fsubrl
push
jmp
inc
sahf
mov
dec
jae
xorl
bound
scas
or
xor
mov
ret
nop
jp
or
popf
sarb
sbb
jns
xlat
pop
cld
js
cmp
lcall
mov
popa
jns
xor
mov
jp
push
bound
addr16
stc
xor
mull
sub
enter
sub
dec
xlat
lea
dec
imul
and
jns
lcall
ss
and
hlt
enter
dec
sbb
aad
pushf
xor
push
push
fldcw
enter
jbe
sahf
imul
outsb
lcall
mov
ret
inc
xor
in
rorb
out
lcall
inc
push
sbb
testb
push
mov
inc
jo
cmpsb
mov
pop
cmp
mov
push
mov
jmp
pop
imul
and
lahf
lret
xchg
xor
add
mov
xchg
mov
in
sub
adc
push
mov
imul
jl
cmp
dec
adc
lret
icebp
mov
lea
dec
jge
cli
sub
fsubl
rcrb
sbb
inc
dec
push
mov
lcall
sub
imul
adc
test
insl
cmp
jo
mov
xchg
dec
mov
and
das
fs
out
int3
pop
fsubrl
push
or
lcall
in
sub
inc
insl
les
inc
and
lds
mov
mov
xor
jnp
adc
call
jbe
sti
iret
cmp
mov
hlt
jmp
out
cmp
inc
xchg
sbb
shlb
bound
jg
imul
mov
lods
cmp
push
pop
arpl
mov
push
lret
mov
inc
sbb
scas
punpcklbw
pop
sub
pop
gs
je
mov
fcomps
pop
je
mov
test
mov
fcoms
cmpsl
movsb
sahf
aaa
xor
cmpb
into
or
adc
push
out
mov
push
outsb
stos
push
jmp
dec
xchg
fnstcw
fnstcw
ss
inc
cmp
rcrl
push
xchg
dec
jno
dec
add
or
push
test
and
mov
pop
gs
sub
push
inc
test
sub
sbb
fstps
daa
test
xchg
and
pushf
mov
popf
cmp
jle
test
lret
lahf
rcrb
cmp
lahf
lret
dec
push
jnp
xor
cli
call
iret
sbb
dec
or
mov
and
lahf
rclb
not
rcrb
cmpsl
add
ljmp
mov
pop
sbb
mov
mov
arpl
gs
addb
pop
jae
dec
ficoms
test
sub
clts
add
mov
cli
mov
add
mov
shl
lods
mov
lret
inc
repz
xchg
scas
adc
mov
movsb
push
cltd
testl
dec
inc
aam
dec
jns
dec
push
cwtl
ret
push
mov
lcall
test
loope
mov
sub
or
pop
daa
push
mov
and
aam
push
je
std
xor
push
into
add
or
movsl
pop
sub
stc
xchg
adc
dec
jmp
adc
dec
or
mov
repnz
xchg
xchg
enter
sbb
mov
xchg
inc
xor
lret
mov
stos
mov
pop
pushl
and
mov
int
mov
cmp
ret
je
xchg
push
cmp
jp
xchg
mov
cmc
xor
mov
jnp
aas
ret
ljmp
jne
inc
mov
sbbb
mov
add
push
out
adc
pop
fstpt
xor
pop
in
dec
mov
add
addl
call
scas
gs
lea
mov
bswap
in
push
and
bound
jae
mov
or
jne
out
mov
aaa
inc
sbb
test
fistpll
mov
pusha
mov
bound
adc
in
xchg
jp
inc
xor
xor
or
jno
xchg
jge
lea
lret
pop
into
push
mov
add
popl
out
icebp
cmc
aad
pop
stos
mov
insl
mov
cltd
lods
xchg
cld
leave
imul
mov
gs
aam
lea
adc
lock
jns
dec
push
enter
and
push
jl
mov
mov
int3
push
repnz
pop
jae
push
push
sub
sub
popa
cwtl
lea
adc
fstps
mov
or
xor
dec
mov
inc
or
xchg
aaa
adc
inc
in
ja
in
in
add
cld
dec
or
push
rcr
es
clc
lds
mov
jp
lret
cmp
cmp
push
movsl
imul
ret
fisubs
lods
mov
das
and
in
outsl
cld
pushw
jne
adc
filds
in
inc
push
mov
sbb
xchg
add
mov
popf
das
adc
int
cmp
cmpsl
mov
fcmovne
fsubrp
repnz
sub
push
test
xlat
ret
fnstcw
push
fwait
cmp
arpl
mulb
and
pop
outsb
lds
pop
or
and
nop
imul
inc
jecxz
pop
inc
lea
or
ds
nop
push
push
negb
inc
fdivs
fwait
sub
push
fs
lahf
jg
jmp
xchg
out
xorl
int
das
add
ljmp
push
imull
imul
repz
jo,pt
mov
mov
flds
in
sbb
mov
hlt
shlb
xchg
test
xor
jo
fwait
mov
int
push
mov
test
adc
mov
pop
inc
push
jecxz
xchg
pop
mov
dec
sub
mov
push
mov
je
mov
nop
push
dec
fprem1
outsb
xchg
leave
sub
mov
insb
scas
pop
xorb
cs
jae
lds
cwtl
xchg
into
or
imul
cmpsb
or
gs
mov
and
xor
or
xchg
pop
insl
cmp
sub
dec
inc
and
in
mov
lret
fldenv
js
dec
repnz
cmpl
out
push
fcmovu
sbb
cmpsl
push
fucomi
or
jo
cmp
xchg
icebp
cmc
stc
push
push
mov
pop
loopne,pt
loop
sub
stc
inc
mov
stc
xor
jb
jo
shlb
movsl
and
test
jge
cmp
add
aas
sbb
push
cli
mov
adc
jl
ret
shlb
inc
ja
rorb
out
jo
xor
cld
xor
cmpl
xchg
cwtl
cld
lods
jp
shl
jns
mov
lea
and
pop
add
cmpsl
mov
jecxz
add
sbb
push
clc
xlat
lret
pop
psrld
and
jno
xchg
add
and
sbb
andl
xlat
jge
pop
cld
jmp
frstor
rcr
cli
mov
jle
bound
test
sbb
aam
xchg
sub
aad
mov
jns
xchg
or
stos
lock
test
int3
mov
push
and
lds
stos
xchg
mov
mov
outsl
ss
jg
dec
xchg
cs
repz
add
push
jno
addr16
cmp
mov
or
in
or
insl
fisubrl
mov
popf
push
subl
ret
cmp
jle
mov
imull
push
xchg
xor
adc
scas
lds
mov
pop
aam
cld
xlat
aam
lret
aaa
pop
sub
dec
xor
mov
es
or
and
jae
or
cmp
inc
pop
arpl
pushf
xchg
stc
sarl
scas
adc
insl
add
push
loope
aas
scas
stc
sbb
in
fsts
sahf
arpl
call
imul
jbe
sub
fcmove
jg
xor
xchg
inc
aaa
xor
lret
push
push
pop
rcrl
stos
and
push
pop
adc
inc
mov
ja
sub
stos
adc
mov
lods
ss
xchg
scas
sbb
inc
out
test
popa
jno
ficompl
cwtl
aam
cwtl
xchg
mov
and
and
sub
fwait
daa
xchg
repz
scas
add
push
gs
lds
fcompl
pop
rorb
lds
cmp
add
outsb
jns
cld
in
inc
dec
lret
adc
and
cmp
push
inc
sub
pop
push
fdecstp
push
pop
push
movsb
pop
stos
movsb
lahf
inc
addr16
jecxz
pushf
js
pop
mov
xchg
mov
out
iret
in
add
jmp
add
in
fyl2xp1
jmp
aam
mov
nop
mov
pop
push
cmp
xor
pop
icebp
mov
fsubrp
sbb
rclb
repz
xorl
fbstp
insl
lcall
sahf
and
hlt
cltd
mov
mov
push
into
mov
fidivl
lds
stc
and
repnz
and
aas
leave
jne
idivl
in
nop
jae
mov
push
arpl
dec
xor
mov
lock
bound
pop
cmpsb
mov
adc
or
cmp
cmp
push
mov
inc
lods
push
imul
add
bound
pop
aaa
loopne
and
push
into
sbb
fildll
pusha
mov
fwait
dec
cmpb
sub
push
mov
in
dec
add
lcall
sarb
cs
jecxz
addr16
in
outsl
std
sbb
add
or
ja
add
and
sub
clc
mov
push
jno
cs
rcrb
xor
and
insl
in
lods
outsb
mov
les
inc
jne
mov
xor
mov
lds
mov
mov
stc
push
ret
dec
xchg
cmpsb
pusha
mov
jb
into
jg
jnp
push
dec
cmp
lret
push
dec
stos
lods
cmpsl
pop
inc
popf
and
xor
xor
test
pop
sbb
pop
mov
xor
jae
icebp
imul
push
mov
xchg
lea
adc
xchg
push
pop
and
nop
lds
iret
imul
push
outsl
inc
push
pop
sub
int3
aaa
enter
dec
xor
test
dec
inc
gs
mov
pop
movsl
sti
mov
cmp
xchg
and
inc
jmp
cmc
mov
movl
jp
jp
rcrb
mov
call
jb
mov
mov
imul
loope
or
mov
push
ret
cmp
sarl
aad
dec
rcrb
cmpb
frstor
mov
mov
and
adc
push
mov
out
push
subl
in
fnstcw
mov
cmp
or
dec
xchg
sbb
pushf
lcall
imul
stos
and
xlat
cmp
mov
aad
test
xor
sbb
popa
lahf
outsl
call
jl
cwtl
out
pop
ljmp
test
shll
jmp
sbb
lock
imul
jo
sti
pop
mov
push
inc
fidivl
cwtl
sub
mov
cli
push
pop
xchg
mov
pop
mov
pop
cmp
jg
xor
pop
xchg
inc
cmp
mov
test
mov
sbb
nop
testw
jp
pop
push
and
sbb
cmpb
mov
fldln2
test
es
outsl
roll
lock
xchg
fdivl
outsl
mov
pop
xchg
push
pop
loope
rcrb
cld
stos
mov
lcall
pushf
mov
xor
mov
int3
in
cmp
outsb
shrl
movsb
xchg
loop
dec
out
rorb
xor
xor
mov
rcl
fidivl
mov
into
xchg
jo
push
enter
mov
std
cmc
imul
aam
out
je
andl
scas
and
mov
xor
out
push
push
sub
mov
add
adc
adc
sub
enter
out
jge
fs
cltd
stos
inc
xchg
pop
faddp
xchg
dec
lcall
lret
clc
dec
inc
pop
mov
fs
rorb
into
mov
rcrl
cld
push
cmp
push
loopne
int
jno
fstps
in
es
repz
jle
inc
mov
outsb
push
xchg
add
imul
sub
lret
adc
pop
dec
push
bound
mov
mov
in
addr16
jecxz
int
xor
jmp
mov
gs
mov
ss
fsubs
push
add
add
cmp
dec
sub
push
dec
mov
popf
clc
inc
test
or
xor
xchg
ret
testb
mov
jbe
negl
out
loop
daa
jl
int
xor
push
les
push
cmc
pop
dec
xchg
push
jg
jle
cmp
mov
imul
cmpsl
ljmp
cmc
sbb
fwait
pop
fmull
or
test
jmp
xor
add
cmp
scas
out
rcrb
repnz
gs
idivb
xchg
xchg
inc
mov
fstpt
cmp
fnsave
add
and
into
shlb
xchg
mov
pop
leave
mov
add
mov
add
xchg
dec
sahf
sub
sub
mov
ret
sub
dec
push
lods
xor
and
push
mov
sbb
mov
arpl
push
xchg
imul
aaa
jmp
jne
xchg
mov
pop
inc
and
xchg
cmp
jmp
cmp
jnp
jae
dec
jge
jns
lcall
out
divl
jg
and
xor
cltd
int3
xor
or
and
dec
inc
push
sbb
mov
add
adc
pop
cmpl
mov
push
sub
xchg
jns
scas
jae
fwait
imul
lock
shll
loop
inc
push
out
and
jb
aam
mov
and
repz
rclb
push
insb
arpl
cmp
lcall
sahf
dec
test
inc
test
pop
frstor
mov
push
mov
jo
sbb
lods
test
fdivr
aas
add
mov
leave
shll
jno
jb
loopne
adc
rcll
mov
pusha
sbb
std
sbb
and
push
outsb
pop
sbb
sarb
mov
int3
inc
cmp
repnz
mov
push
or
xor
add
push
sbb
inc
sub
loopne
cmp
je
push
mov
jbe
popf
cwtl
and
jecxz
jecxz
fsubrl
pop
dec
mov
enter
sub
dec
cmpsb
lock
pop
xorl
mov
test
jae
xor
or
xchg
or
shrl
and
out
pop
sub
cmp
arpl
xlat
dec
shlb
sarb
aad
ficompl
out
sub
sbb
xchg
aas
sub
pop
push
loop
push
test
mov
cld
adc
out
sbb
cwtl
mov
push
adc
inc
call
or
xor
sarb
dec
aam
pop
inc
jmp
sub
jl
pop
imul
xchg
push
push
dec
jle
pop
rcl
mov
leave
out
fistps
xor
pop
test
pushaw
dec
fdivl
adc
cwtl
jbe
scas
rcrl
cmp
jl
int
push
mov
xchg
sub
rcrb
jo
mov
lcall
cmpsl
pop
mov
ljmp
cmp
orb
cli
fnstcw
shl
or
imulb
mov
add
cs
dec
pop
int
lea
incl
cmpsb
cmc
popf
sub
adc
jmp
nop
sub
stos
stc
es
into
out
or
les
cmp
mov
jbe
mov
or
mov
mov
fcoml
xor
sbb
xchg
pop
sti
sbb
arpl
pop
ljmp
cli
mov
lcall
hlt
cli
cmpsb
add
rcr
adc
xchg
jmp
movsb
adc
hlt
or
scas
xor
pop
in
aam
icebp
out
dec
out
mov
sbb
or
jmp
fildl
cmp
sbb
testb
jae
or
inc
or
ds
mov
cmc
mov
jbe
test
mull
mov
or
mov
jge
lea
cld
inc
es
dec
xchg
sbb
lcall
sub
fidivrl
rorb
push
loop
xor
in
rcrl
loopne
fcmovbe
and
inc
movsl
mov
push
or
aad
pop
hlt
dec
sti
mov
jnp
jnp
push
jg
insb
adc
pop
outsl
in
mov
mov
mov
dec
or
fldenv
push
fimuls
push
fstl
lcall
push
mov
insl
dec
jns
xor
ss
call
dec
aaa
adc
pop
jnp
out
cmc
imulb
add
adc
mov
push
fst
push
inc
sahf
lds
int3
ss
lds
mov
lret
aad
mov
and
cli
fucomp
int
inc
xchg
loopne
rorl
push
jno
outsl
dec
push
inc
aas
xchg
movsl
add
cmp
cld
lds
cmpsb
add
aad
subl
rorb
push
and
fnstenv
repnz
and
or
inc
pop
stos
loopne
or
int3
add
jecxz
stc
xlat
dec
aad
outsl
jnp
lret
jp
je
or
xchg
popf
pop
movb
jo
add
sahf
pop
mov
cmpb
jle
sub
jbe
fxch
xor
fimull
push
jbe
fdivs
jecxz
dec
out
mov
mov
adc
push
push
jnp
fsubl
add
sbb
sbb
mov
out
adcl
mov
fwait
ret
push
fistps
push
pusha
or
mov
loope
xchg
pop
cmp
loope
in
loopne
add
test
inc
inc
dec
xchg
pop
jne
fildll
cs
popa
mov
inc
aad
ror
inc
pusha
dec
loopne
mov
xor
lods
loop
sbb
cmp
lret
cmp
aam
test
inc
pop
divl
rcrl
inc
leave
sarl
jnp
adc
test
or
jnp
add
cmpsl
loope
jge
xchg
cs
stos
push
fildll
inc
xor
aas
xor
xor
or
loopne
std
in
sub
lods
mov
cmc
cmp
xchg
aam
mov
dec
pop
sbb
or
movsl
dec
and
lds
adc
xchg
xor
xor
inc
aam
sti
lods
cltd
mov
mov
movsb
mov
push
lcall
subb
testb
push
jl
out
imul
pusha
scas
movsl
push
jae
dec
mov
and
jmp
in
popl
ret
lahf
faddl
fimuls
push
lcall
adcl
adc
inc
pop
test
xchg
mov
enter
push
testl
add
push
mov
sti
adc
push
jmp
in
stos
ret
mov
sub
adc
es
std
and
xchg
mov
cmpl
push
daa
pop
adc
outsl
cld
jmp
aaa
icebp
aaa
adc
lret
add
and
into
lods
mov
icebp
shlb
cmp
pop
adc
in
jecxz
cmc
inc
mov
pxor
mov
cmp
mov
add
and
dec
daa
insl
daa
push
ret
into
mov
mov
xor
into
push
int
in
int3
sbb
pop
enter
sbb
in
cmp
mov
aaa
and
enter
lahf
lods
out
testl
push
push
adc
test
xchg
dec
and
cltd
xchg
pop
push
cltd
inc
test
jmp
push
fisubs
shlb
xor
and
loop
mov
fwait
mov
test
fnstcw
cli
sbb
mov
add
test
cmp
ljmp
outsl
fwait
inc
mov
inc
adc
leave
mov
cmpsl
lret
in
xor
sub
mov
fstl
push
or
mov
mov
movb
mov
pop
popa
insb
pop
mul
sti
sbb
nop
xlat
and
pop
xchg
xchg
fisubl
aaa
xlat
int
mov
cmp
aam
jecxz
mov
mov
call
push
push
mov
aas
clc
aad
popf
pop
lcall
jae
negl
inc
and
jecxz
roll
insb
je
ja
push
rcrl
cmpsb
pop
and
mov
sbb
pop
xchg
testb
xchg
cmpsb
ficompl
fsubl
repz
jae
mov
lea
sbb
mov
jbe
jnp
fs
push
and
adc
adc
or
adc
pop
dec
rcrb
dec
mov
jg
ja
aaa
adc
dec
daa
and
dec
jmp
push
adc
sbbl
out
aad
lret
into
loopne
test
out
lods
outsl
rcll
push
xchg
xor
mov
rcrb
iret
xor
inc
jne
xchg
fmul
call
shlb
dec
iret
push
pop
in
mov
and
movsb
stc
decl
inc
mov
mov
das
insl
out
mov
adc
fsubr
xchg
aad
sbb
jge
xchg
lods
insb
pop
pop
add
jno
mov
jb
in
pop
sbb
jbe
dec
test
lds
je
mov
sbb
mov
sbb
inc
lret
insb
xchg
popf
pusha
or
pushf
out
sbb
outsl
add
sub
jae
test
sub
inc
lahf
stos
data16
out
test
push
cmpsl
repz
cmc
dec
shlb
rol
pop
pop
adc
test
push
int
push
stc
push
movsb
les
xchg
mov
jecxz
sahf
mov
dec
xchg
pushf
xor
sub
xchg
lcall
jecxz
push
sti
xchg
ret
push
and
pop
fidivrl
int
test
scas
add
sti
adc
xchg
cmpsl
nop
cld
jecxz
jno
add
push
outsb
ds
push
mov
mov
add
xor
cmpsl
aaa
gs
bound
or
xchg
add
lods
cs
shll
daa
jnp
test
xchg
adc
ss
xor
lock
xchg
push
add
fidivrs
mov
or
icebp
cmc
pop
push
inc
cmpsb
ds
je
jb
jge
mov
mov
mov
imul
scas
mov
mov
in
mov
cltd
cmp
and
dec
popa
mov
ds
icebp
lea
mov
mov
movsl
mov
cld
bnd
shrb
push
mov
sbb
inc
adc
leave
loopne
sbb
in
dec
xchg
push
rorb
push
jp
shrl
and
js
aad
call
xlat
fidivl
xchg
xchg
aam
lock
lret
insb
icebp
iret
push
mov
fstpt
adc
xor
cmpsb
xor
jns
imul
and
mov
je
repnz
movl
popf
inc
add
adc
lock
push
jbe
mov
mov
inc
stos
fs
je
xchg
lcall
mov
mov
sbb
stos
mov
std
jmp
xchg
pop
sub
cmp
shrb
cltd
imul
xlat
shll
add
cmp
loope
sbb
test
iret
add
fcomi
push
sub
lds
fwait
mov
mov
xchg
cmp
fcompl
std
sub
orb
adc
add
mov
test
jge
aaa
xlat
inc
xor
jmp
notl
and
dec
mov
test
popa
pop
rcrl
movsb
mov
inc
mov
popa
and
sbb
fistpl
sahf
push
jle
movsl
sbb
and
in
bsr
test
xor
arpl
cmc
mov
push
sbb
and
add
cmp
push
outsl
xchg
les
mov
test
pushf
push
call
or
and
xchg
inc
xor
icebp
in
push
and
lret
sbb
sub
outsl
ja
cmp
ret
int3
lea
sbb
fdiv
fistpl
sarl
adc
or
and
mov
cmp
pop
mov
cmp
mov
jle
sarb
adc
pop
cs
std
mov
lea
jp
mov
cltd
sub
mov
push
dec
jae
inc
cmp
insl
jecxz
movsb
xor
mov
nop
sbb
adc
mov
dec
aaa
stos
aam
jns
jns
test
movq
cmp
sbb
cmp
enter
nop
rcr
gs
mov
rcl
mov
and
push
outsb
popa
jae
sbb
add
arpl
cltd
mov
xor
les
insl
pusha
and
dec
int
pop
shll
icebp
or
sbb
xchg
mov
and
out
push
jmp
mov
mov
inc
jp
mov
notl
ja
bound
jae
shll
push
movsl
mov
lret
lods
idivb
icebp
mov
lahf
out
scas
repz
or
shl
repz
jae
xor
mov
adcl
jle
ja
push
xor
add
loopne
add
xchg
mov
add
dec
xchg
add
add
add
add
or
cmp
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
adcl
add
subl
movzwl
xorl
mov
or
mov
movzwl
addl
xor
subl
add
mov
mov
inc
mov
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jb
mov
xor
mov
adc
xor
add
mov
mov
xor
add
adc
mov
movl
adc
movl
or
movl
sub
mov
and
mov
mov
mov
adc
xor
add
mov
movl
mov
movl
je
mov
mov
sub
imul
mov
movzbl
sub
mov
adcl
xor
subl
xor
sub
and
sub
xor
adc
mov
mov
mov
sub
imul
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
notl
add
sbbl
imul
mov
mov
movzwl
xor
mov
add
or
dec
mov
mov
xor
mov
adcl
add
xor
incl
mov
sbbl
mov
addl
mov
add
incl
and
and
mov
xorl
mov
mov
lea
mov
and
mov
or
mov
mov
orl
sub
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
xor
orl
add
movl
jne
jmp
and
mov
sub
add
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xorl
xor
sub
adcl
sub
andl
xor
movl
mov
movzwl
mov
mov
jmp
adcl
mov
addl
mov
xor
xor
jmp
push
xor
pop
inc
or
into
addr16
dec
shlb
pop
jp
repz
mov
out
icebp
into
pop
std
cli
mov
add
movsb
xor
sbb
xchg
daa
xor
ljmp
lret
ja
cmpsl
shlb
add
adcl
mov
jmp
out
and
fsubs
inc
xchg
rcll
addr16
pop
lods
xchg
jmp
imul
and
xchg
pop
rclb
aas
mov
ja
xchg
jbe
jno
call
or
cmp
cmp
mov
mov
mov
hlt
gs
pop
jo
push
add
mov
inc
lods
fidivrl
bound
stos
call
in
mov
pop
mov
subl
shll
jmp
xchg
sbb
mov
push
push
push
and
lcall
lods
mov
push
xchg
adc
cmpsl
iret
cmp
dec
rcrl
dec
add
adc
arpl
xor
and
fsubr
fs
lods
dec
js
mov
int
sub
jbe
fmulp
pushf
inc
fsubs
mov
and
sub
enter
rcll
cmpsl
adc
lods
xchg
push
loope
imul
xor
mov
push
dec
popf
mov
sbb
xor
sub
pusha
pop
arpl
xor
pushf
cmpsb
mov
mov
sub
sub
jne
push
jp
mov
xor
inc
mov
cltd
jg
pop
xchg
scas
mov
scas
jno
and
loop
xchg
pop
add
lods
out
cltd
rclb
scas
fisttpll
dec
add
addl
call
or
push
xchg
aad
daa
mov
and
sub
lret
adc
out
jne
xchg
or
push
pushw
mov
pusha
aaa
jmp
lock
jb
mov
insb
mov
adc
insb
divps
mov
add
sahf
mov
xor
movsb
adc
cld
outsb
incl
jle
dec
test
addr16
mov
lret
enter
out
xor
jg
cmc
imul
push
into
leave
jbe
cli
imul
loop
jnp
jnp
je
sarl
jae
and
sub
cwtl
pop
and
stc
scas
xchg
fisubl
and
out
pop
imul
ret
fsubr
push
fcomps
call
std
and
pop
and
dec
cmp
jb
and
adc
or
jae
das
xchg
jmp
hlt
movsl
mov
insb
pop
sbb
in
lret
loopne
cmc
or
call
cld
pusha
push
mov
push
cs
dec
cwtl
xchg
cmpsl
push
test
cwtl
shrb
inc
mov
inc
out
rcr
and
cs
add
insb
cmpsl
and
and
add
lods
push
xchg
popf
adc
loop
jne
push
in
enter
mov
rclb
push
cmpsb
insl
dec
jmp
sbb
sbb
lea
sti
ss
mov
ja
push
int
outsb
jne
fidivrs
xor
aad
leave
insl
fdivrl
mov
push
and
sub
lcall
call
fdivrs
add
clc
push
mov
sub
xor
idivl
rcl
fisubl
jae
scas
pop
test
pop
push
sbb
pop
icebp
sub
std
ja
sahf
cmpsl
bnd
pop
mov
push
test
mov
and
ret
into
push
testb
test
popf
lea
scas
cmp
xchg
xor
mov
clc
cltd
dec
scas
pushf
lds
cmp
mov
ljmp
fs
adc
or
neg
ret
cmp
shl
icebp
jns
mov
jp
sub
sbbb
into
pop
js
ja
pop
arpl
popa
aas
orb
fcomps
stos
push
rorl
mov
cltd
jbe
jge
push
nop
loop
insl
push
aam
sbb
clc
dec
push
out
test
rcl
push
jb
outsb
add
fwait
shrb
filds
iret
inc
mov
pop
inc
mov
xchg
mov
mov
cmp
cmpl
xor
cmp
mov
aad
scas
shrl
adc
jge
je
push
into
imul
dec
gs
aad
fsubrs
je
or
jbe
jmp
js
or
pop
adc
lods
xorb
push
insl
jae
frndint
bound
inc
std
pop
ja
mov
adc
add
shlb
pop
ret
movsb
bound
lods
mov
test
lret
xchg
and
and
sub
sbb
and
sbb
mov
popa
cmp
mov
ss
dec
inc
push
cmpsl
jg
out
js
movsb
sub
xlat
add
sbb
ja
pop
jne
mov
mov
lds
repz
xchg
cmc
hlt
test
xchg
cld
jb
inc
inc
fucom
cli
xchg
lea
scas
mov
leave
bound
sarw
inc
push
or
xor
cld
mov
sub
outsb
gs
inc
mov
dec
rcrl
pop
pop
inc
sub
jno
adc
mov
jae
add
jmp
scas
loope
inc
push
mov
movsb
sbb
popf
lea
and
adc
or
sbb
adcb
scas
fwait
out
mov
sub
lret
mov
mov
icebp
and
fmull
jno
xchg
jo
stos
enter
adc
int
push
xchg
jne
into
sub
lret
popa
inc
cmp
xorl
enter
sub
aaa
xor
pop
rcll
out
sar
jp
mov
ret
mov
mov
dec
pop
clc
repnz
pop
xor
sbb
sarb
mov
hlt
sub
xchg
shll
repz
cmp
xor
mov
daa
xchg
dec
fmull
cltd
pop
lea
scas
divb
mov
inc
push
add
xchg
sarl
scas
adcl
das
lea
gs
xchg
lea
call
or
mov
mov
or
xchg
lds
mov
and
xchg
mov
lret
xchg
mov
pop
test
pop
push
in
testl
adc
dec
push
or
sub
and
mov
sub
lahf
fadd
mov
pop
lret
enter
xorb
mov
arpl
push
mov
and
cs
lcall
jmp
das
cmp
cmp
popf
push
ss
aad
push
xchg
jne
mov
sub
stos
cmp
icebp
popa
xor
adc
cmp
cmc
vpsubq
jb
jns
and
mov
shrb
cmpsb
imul
mov
push
add
cs
or
neg
or
adc
fstl
xor
sti
and
out
add
movsl
rclb
mov
test
fistpl
mov
ret
mov
iret
popf
repnz
and
loopne
lods
push
pop
div
cmp
outsl
mov
lret
dec
frstor
mov
adcb
ja
and
xchg
push
out
dec
xchg
cmpsl
and
push
std
inc
mov
test
add
jbe
fcmovnu
xorl
jbe
mov
sbb
sbb
jne
sub
data16
aam
aas
mov
aas
fiadds
inc
mov
push
shlb
mov
push
rolb
and
push
std
mov
sbb
push
xor
inc
xor
hlt
aad
xchg
fdivs
xchg
imul
jo
mov
js
cmp
into
push
mov
xor
adc
sub
mov
push
xchg
sbb
pop
cmp
jnp
fs
mov
imul
repz
dec
fdivrs
repnz
pop
jb
xlat
mov
xor
mov
mov
lods
push
movsl
push
data16
push
outsl
push
testb
lods
in
xor
or
xor
push
adc
loopne
or
in
or
xchg
cmp
add
pop
sub
sbb
cmp
add
clc
inc
outsl
mov
ds
add
fs
addr16
aas
and
adc
sub
xchg
aaa
push
fldt
enter
outsl
aad
sub
mov
daa
sub
jl
xchg
int3
xchg
insb
xor
adc
pop
xchg
pop
mov
dec
popl
mov
iret
mov
cmp
cmp
pop
shl
test
int3
jo
cmpl
jnp
repz
jp
xlat
sbb
js
adc
inc
out
ficompl
xor
xlat
adcb
xchg
pop
shl
movsb
popf
call
pop
adc
cld
sub
stc
xorl
adc
mov
xor
lret
in
push
adc
mov
cld
int
pop
arpl
notb
and
jbe
add
imul
in
xchg
shlb
inc
push
xchg
ret
in
inc
cmp
xchg
or
subb
out
repnz
cmp
cmc
repz
inc
jp
mov
dec
mov
push
jle
dec
or
data16
std
int
into
in
ffree
popa
sbb
dec
push
xchg
fstps
js
fldenv
imul
mov
icebp
nop
and
in
enter
mov
xorl
mov
es
in
es
pushw
std
push
mov
push
shr
fnsave
inc
mov
push
mov
in
push
jns
push
pushf
xor
notl
xor
js
mov
cmp
adc
sub
out
adc
hlt
fcmovu
lcall
and
jecxz
pop
mov
mov
lods
sub
out
mov
inc
mov
lret
subl
mov
xor
popf
pop
es
lock
and
jo
decb
cwtl
push
aad
out
mov
push
mov
push
cwtl
repnz
jns
push
sbb
test
js
lock
or
fisubl
andl
lcall
test
and
fs
inc
lcall
out
icebp
jno
das
mov
andb
scas
mov
popf
dec
pop
popf
pop
cmp
arpl
roll
jo
adcl
xchg
or
adc
iret
scas
inc
xor
loop
loop
inc
fmull
xor
mov
jp
inc
shr
jge
cmp
dec
xchg
addr16
fcmovnbe
mov
mov
sub
fidivrl
in
fldcw
fisubrl
and
inc
dec
inc
nop
add
int3
sub
das
fisttpll
frstor
insl
or
gs
fcomip
xor
push
sbb
andb
sahf
call
loopne
add
cmp
pop
shll
and
cmp
mov
add
lret
lock
cmp
fdivl
cmpsb
shrl
inc
sub
sbb
sbb
adc
sub
mov
cmp
ret
aam
dec
and
aaa
fidivrl
pminsw
cmpsb
sub
mov
addr16
in
js
sub
jp
mov
xchg
mov
and
or
sub
mov
xor
aas
xchg
lahf
insl
js
xor
incl
imul
push
mov
mov
sbb
lcall
sbb
inc
hlt
inc
lock
or
adc
xlat
inc
or
pop
repnz
pop
arpl
jnp
pop
fcoml
mov
inc
push
addb
push
add
lret
xchg
cmp
js
xor
mov
add
test
adc
testl
jmp
mov
popf
pushf
adc
xchg
pop
inc
and
and
dec
and
pop
jns
insb
and
orb
fdivs
mov
movsb
sub
dec
sub
lds
test
mov
es
fdivs
stc
pop
fs
sub
dec
push
sbb
add
addr16
iret
dec
xor
add
sbb
inc
lea
jmp
jl
mov
and
outsb
js
insb
test
inc
mov
cmp
sbb
cld
mov
or
scas
repz
ss
in
jae
in
mov
mov
lods
jp
xchg
mov
add
pop
adc
mov
sub
cwtl
divl
in
aam
sbb
mov
cmpb
pop
cmp
das
jae
mov
pusha
pop
addr16
adcb
rolb
fwait
or
sub
filds
stc
ds
sbb
jo
push
mov
mov
sub
mov
xchg
call
les
pop
imul
pop
pop
mov
out
mov
dec
mov
int
mov
into
add
cwtl
jmp
mov
or
das
xchg
int
jge
ja
popf
push
lret
in
mov
outsb
sbb
dec
cmp
ljmp
test
ljmp
popa
jg
ret
cmp
pushf
pop
cld
add
push
mov
adc
pop
cmp
in
jp
adc
jp
dec
rolb
mov
pop
push
pop
outsl
out
loope
adc
das
stos
jp
imul
sbb
adc
lds
xor
cmp
or
xchg
movl
dec
xorl
cmp
hlt
sub
or
inc
call
inc
stos
out
mov
dec
aad
lret
popa
dec
jae
mov
xchg
push
leave
lods
pop
dec
mov
push
mov
pop
fidivrs
push
cmc
push
ljmp
mov
roll
daa
jo
mov
add
data16
xchg
out
xchg
insl
dec
sub
arpl
xchg
arpl
andps
cmpsl
shr
xchg
rolb
inc
push
andb
inc
ret
cmp
lock
bound
cmc
inc
rclb
jmp
jg
pop
pop
adc
sub
int
popf
ljmp
dec
and
hlt
xchg
ret
lret
or
aad
in
xor
add
pusha
stc
cld
lret
mov
add
sub
lret
lea
adc
cmp
push
jg
scas
aaa
mov
cld
xor
in
or
sahf
les
sub
fsubr
jns
adc
fildll
sbb
imull
and
inc
into
in
loopne
jg
sbb
mov
mov
daa
push
scas
dec
pop
fistps
mov
sub
push
mov
fwait
gs
scas
cmp
mov
stos
add
pusha
mov
push
dec
pusha
pop
and
xchg
hlt
sub
aad
cwtl
adc
or
into
or
xchg
mov
test
mov
sub
imul
sub
or
lods
cmpsb
xor
sbb
jle
jge
stc
push
pop
cmp
add
push
jmp
stos
call
fbld
add
js
sbb
push
jbe
in
cwtl
mov
mov
sub
or
lock
ret
mov
das
or
cs
cmp
add
xchg
rorb
sbb
mov
lods
lcall
jp
je
mov
jg
mov
ret
out
add
or
mov
or
imul
jnp
into
inc
push
ret
ljmp
mov
iret
xor
cmp
hlt
mov
insb
fwait
lcall
or
std
jge
add
inc
mov
stc
int3
sub
rclb
pop
lret
aaa
xor
faddp
and
cmp
mov
psllw
mov
cmp
mov
jp
insb
imul
dec
mov
rcrl
es
pop
ds
inc
mov
push
xor
xchg
std
xor
mov
mov
enter
pop
xorb
pop
xor
jecxz
and
add
push
not
dec
sub
movsl
mov
daa
cmovp
shl
test
setge
out
adc
das
sbb
imul
out
pop
pop
mov
test
addr16
adc
mov
andb
nop
xchg
mov
out
inc
adc
out
cmc
pop
mov
sub
dec
incl
iret
mov
xchg
inc
imul
lret
mov
push
aas
cli
sub
sub
mov
pop
and
push
shrl
out
jbe
push
scas
movsl
mov
xor
and
mov
dec
adc
or
lea
mov
xchg
jecxz
or
fstps
adc
pop
xchg
lds
cli
pushf
sub
addl
add
xor
mov
dec
aad
push
jno
push
sbb
jns
mov
mov
jno
ret
mov
lret
push
lret
cmp
inc
jbe
jle
jl
out
test
xor
sti
or
dec
shr
call
mov
adc
pop
iret
lods
xor
or
jp
push
push
mov
call
mov
out
je
push
jmp
mov
mov
sub
cs
pop
adc
lret
int
push
int
iret
scas
into
aad
out
mov
mov
push
adc
test
out
push
in
out
pop
cmp
xchg
adc
dec
inc
jg
adc
negb
mov
dec
pop
sbbb
pushf
or
dec
xchg
pop
lods
and
xor
mov
adcl
mov
fwait
gs
cmp
and
push
cld
pop
xchg
push
sti
bound
or
adc
ret
repnz
test
movl
in
js
adc
inc
push
push
or
add
dec
sbb
pop
mov
pusha
aam
xor
shll
jle
outsl
or
add
or
adc
test
mov
notl
adc
sub
cmp
sti
push
movsl
jne
mov
inc
push
lds
sbbb
push
leave
sti
xlat
mov
push
test
lret
jno
add
pushf
jg
push
cmp
popa
sbb
ret
pop
fdiv
fsts
mov
cmp
push
jno
xchg
inc
das
sbb
js
fs
loop
test
mov
popf
mov
in
inc
xchg
into
sbb
sti
sub
jl
in
fwait
lret
push
in
xor
adc
xchg
test
adc
aam
stos
lods
lret
xor
adc
add
cmp
jnp
lret
pop
mov
or
fistl
clc
push
fwait
push
mov
loop
sub
pusha
add
mov
out
imul
dec
sbb
jle
mov
inc
das
xchg
in
fwait
ja
jl
ja
fwait
aad
sub
cmpsb
mov
shl
movsb
insb
mov
outsb
jp
ljmp
or
dec
cli
jecxz
xchg
add
scas
fbld
pusha
fwait
out
fsubl
dec
xchg
mov
inc
adc
mov
sbb
inc
jae
adc
adc
and
insb
insl
pop
xchg
pop
adc
push
pop
int3
mov
adc
std
and
add
adc
xchg
fldcw
jnp
lods
inc
arpl
sti
test
lods
push
fdivp
out
pop
rorl
testb
das
cmp
fldcw
dec
fnsave
dec
jge
out
test
mov
pop
into
shl
lret
ljmp
bound
add
rclb
mov
sarl
jp
enter
cmpsb
aam
insb
adc
dec
ja
add
stos
pop
out
scas
imul
daa
and
sub
mov
fsubrs
fidivrs
xchg
sbb
cwtl
cmc
sti
mov
aas
pop
add
mov
in
ja
dec
jnp
xor
mov
sbb
aaa
fcomip
jb
jecxz
xor
popl
nop
lds
jb
xor
xchg
mov
leave
pop
and
cltd
mov
xchg
xchg
aam
dec
in
cmp
dec
sbb
mov
imul
aad
sbb
iret
test
lock
sbb
shrl
adc
movl
add
es
leave
or
pop
ret
cmp
push
mov
dec
push
mov
pop
inc
or
es
and
mov
pushf
repnz
sub
mov
daa
jnp
arpl
lret
cmpsb
mov
mov
mov
pop
adc
mov
xor
out
jne
sub
lea
pop
lock
test
nop
mov
and
inc
test
hlt
roll
int
mov
in
pop
imul
add
xor
cmp
sub
dec
sbb
div
mov
fdivrs
push
lcall
loop
pushf
out
pop
push
imul
mov
movsb
cmp
addr16
xor
mov
iret
mov
mov
in
sub
dec
xor
into
pop
jge
or
push
mov
imul
popf
xorb
cmp
xor
xor
mov
adc
adc
add
pop
scas
xorb
lds
sub
mov
jge
mov
stos
push
insb
lret
and
fnstcw
imul
inc
test
lea
outsb
xchg
loope
mov
cli
lods
fwait
mov
aam
add
pusha
scas
in
ret
mov
or
adc
cld
lahf
out
jnp
movsl
pop
pop
push
push
mov
cmpsb
sbb
lret
mov
jo
scas
dec
seta
popa
mov
rorb
adc
xor
mov
cmpsb
stos
aas
popf
idivb
push
inc
inc
and
add
adc
repz
mov
pop
mov
push
aam
jl
add
mov
sub
hlt
sub
out
ljmp
jne
inc
sahf
xchg
lahf
aaa
push
mov
xchg
or
aad
cmp
xor
mov
jbe
dec
test
in
dec
cmp
pusha
xchg
cmpsl
cwtl
test
cltd
and
add
gs
scas
out
pop
inc
mov
cmc
xchg
adc
add
jae
loope
lcall
sbbb
dec
fimull
mov
sbb
push
lods
mov
pop
outsl
or
lea
pop
decl
inc
sti
std
ret
xchg
push
adc
xchg
loope
pop
xchg
stos
mov
push
les
mov
mov
xchg
daa
adc
shrl
xchg
cltd
in
xorps
mov
pop
test
rcr
jmp
arpl
mov
jmp
pushl
push
fs
jae
xor
adc
mov
cli
outsb
fwait
sti
rcrl
enter
imul
sub
fstpt
mov
sti
lock
test
push
push
rcl
or
xchg
dec
stos
mov
jle
lods
js
aam
fadds
test
cmp
stos
lods
push
mov
test
ss
test
xchg
out
mov
aad
clc
mov
arpl
xchg
inc
xchg
insb
lea
inc
sbb
out
add
lods
sub
jbe
pop
cmc
lahf
add
push
and
pop
subl
add
inc
fbld
mov
in
test
sbb
pop
lods
push
cmp
lret
sub
cmp
xchg
or
mov
nop
dec
lods
imul
adc
stos
jge
or
or
or
hlt
das
sti
fldenv
sti
lea
shl
xor
ffreep
divb
outsb
pop
jns
adc
ja
outsl
ja
sbb
push
sub
xchg
xor
add
and
push
lret
inc
iret
mov
addr16
cmpsl
mov
mov
movl
cmpsl
sub
push
mov
or
push
xor
sti
adc
sub
out
dec
pop
insb
or
inc
andl
andb
mov
dec
insb
shrl
jge
mov
or
add
xor
pushf
lret
xchg
iret
or
cmc
push
mov
pop
dec
fsub
jp
mov
sub
vpandn
add
fsubrs
lea
adc
adc
dec
popf
scas
scas
jbe
jg
lods
fld1
mov
sub
pop
sti
outsl
adcl
test
xor
lock
push
cmp
scas
adc
jmp
push
out
in
fistpl
das
dec
adc
arpl
or
dec
outsl
fcoms
ss
addr16
push
or
pusha
jb
aam
or
xchg
insb
dec
popa
in
cmp
cmp
mov
scas
mov
stos
pop
jo
enter
adc
mov
ss
dec
mov
cld
xor
jb
cli
mov
negl
mov
cld
imul
inc
mov
sbb
sbb
sti
xor
sbb
fbstp
cli
cmc
dec
sub
aad
jne
and
add
data16
mov
mov
push
cmp
dec
adcl
push
loop
cmp
sbb
addr16
leave
jbe
xchg
leave
jne
adc
cmp
sahf
test
xor
lret
jbe
jns
bound
fwait
lds
and
and
push
shll
push
mov
in
jp
repnz
mov
aad
inc
stos
mov
enter
ss
dec
mov
mov
cmp
sbb
push
mov
enter
cwtl
mov
adc
adc
xchg
repz
inc
and
aad
jns
cmp
push
jg
pop
pushw
ja
stos
and
xchg
ja
lea
sub
inc
fld
dec
push
adc
xor
cltd
movl
pop
out
mov
je
int
sarb
jb
mov
test
popa
mov
mov
fs
push
fwait
xor
dec
in
ss
mov
les
int3
enter
insb
fadd
push
mov
clc
clc
fstpl
pop
shll
lea
mov
adc
stc
cmpsl
push
fnclex
stc
into
jl
pop
lss
into
push
cmp
or
roll
inc
fdivl
mov
lods
rcrb
xchg
sbb
out
lods
mov
repz
popf
mov
dec
adc
inc
icebp
ja
mov
lods
or
push
in
lret
adc
enter
push
mov
daa
pushf
mov
add
loopne
lock
pushl
icebp
pusha
fldcw
xor
ret
ljmp
jb
js
cli
push
xlat
cmp
arpl
scas
mov
shr
or
add
cmc
mov
mov
dec
and
pop
and
cmp
jae
jne
xchg
sub
xchg
add
xor
cmp
out
ljmp
popf
ja
loop
cmpsl
sbb
sahf
xor
test
iret
xchg
jge
sub
mov
xchg
negl
and
xor
jecxz
mov
dec
imul
rolb
cmp
ss
add
push
pop
icebp
mov
mov
icebp
ror
enter
divb
sahf
out
fsubrs
mov
xor
pop
insb
dec
bound
dec
aaa
clc
es
mov
xchg
fwait
and
inc
movsb
xchg
fidivrl
dec
repz
fs
test
and
stc
dec
pop
dec
test
or
icebp
icebp
pop
lds
lahf
test
xchg
scas
shl
dec
ds
or
stos
aaa
xchg
out
ret
rolb
aad
or
ljmp
push
nop
shlb
cmpl
dec
dec
loope
scas
pop
push
xchg
iret
stos
jno
mov
sbb
sub
inc
data16
xchg
pop
pop
lods
arpl
bound
xor
inc
out
cs
adc
mov
xor
and
cmp
jmp
loop
enter
insb
mov
cld
pop
inc
fldcw
add
sub
jg
adc
leave
ljmp
pop
into
mov
arpl
mov
xor
insb
push
push
aaa
stc
dec
popf
sub
push
lods
push
xchg
lret
and
mov
fsubs
and
shlb
add
arpl
in
dec
in
sbb
lods
jae
xchg
setno
scas
rclb
jo
adc
ja
xlat
sub
pop
cmpsl
inc
dec
mov
pslld
inc
roll
movsb
aas
dec
inc
sub
jae
stos
mov
mov
movsb
lret
mov
rcl
out
shll
xchg
rclb
push
sub
lea
xchg
decl
pop
sub
lods
and
xor
xchg
lods
push
daa
jmp
jne
pop
mov
sub
fidivrl
sbb
mov
sub
add
jmp
jb
cmpsl
jmp
add
mov
xor
es
cs
jmp
mov
jle
in
pop
cwtl
jns
pop
lcall
dec
jmp
dec
add
adc
push
or
lcall
add
push
cmp
pop
mov
mov
sbb
push
xchg
jo
pop
ret
mov
je
loope
push
push
imul
lea
mov
pusha
std
cmpsl
ds
and
or
and
cmpsb
dec
mov
vandps
out
or
pop
adc
insb
imul
das
outsl
rorb
js
pop
sub
push
mov
stc
push
jne
inc
jns
push
imul
insb
pushf
push
pop
icebp
loop
imull
roll
adc
divl
push
jae
bound
dec
xor
scas
xchg
adc
call
mov
add
sub
ss
pop
sub
mov
sub
ja
xchg
pop
pushf
test
inc
push
test
xor
rcl
loop
sahf
jg
inc
sbb
sbb
jg
mov
add
cmc
scas
rorb
loopne
std
mov
jmp
mov
cltd
add
add
and
aas
loop
jns,pt
stc
xchg
push
dec
xchg
pop
sub
outsb
sub
sub
lcall
adc
outsb
inc
pop
iret
js
jg
xchg
call
mov
push
sub
lcall
push
pop
ret
add
sbb
divb
and
dec
xchg
lahf
mov
ror
jg
aam
shl
bound
pop
in
xor
pop
mov
dec
fisubl
jae
cli
pop
pop
clc
cmpl
mov
shlb
mov
ficoml
mov
mov
sbb
fwait
pop
jnp
or
cmp
mov
or
or
xor
add
idivl
sahf
cli
fs
imul
stc
mov
and
sbb
frstor
lods
dec
insb
inc
inc
sub
push
add
sub
push
icebp
ja
pushf
rolb
aad
ret
sbb
rolw
movb
xchg
aaa
adc
push
jbe
and
test
jbe
negb
pop
cmp
loopne
lods
out
aas
jg
push
bound
cs
ret
shrb
inc
dec
pop
pop
jae
outsb
iret
pop
mov
pusha
pop
bound
mov
sbb
sbb
add
aad
add
pop
int
add
cld
xchg
addr16
sub
stos
pop
sub
mov
jb
sbbl
sub
mov
adc
mov
aas
in
mov
jnp
rcrl
cmp
sub
add
xor
mov
add
mov
mov
inc
mov
subl
add
andl
imul
xor
or
adc
mov
mov
mov
add
sbbl
or
mov
or
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
add
xor
sbb
mov
mov
mov
add
addl
and
mov
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
jmp
dec
popl
lea
push
lock
cmp
jp
pop
jp
arpl
push
int3
ret
jp
cmp
out
jmp
fs
push
inc
and
push
xor
push
sbb
aad
insb
jmp
nop
adc
in
pop
push
mov
dec
add
xchg
shll
ret
pushf
test
push
mov
arpl
imul
or
int
mov
out
adc
pushf
je
iret
mov
ss
push
out
lahf
fstpl
cmc
cld
cmp
les
jo
add
cs
repnz
in
loopne
cmpsl
fstps
lret
jle
fiadds
iret
mov
aad
in
out
call
jnp
push
jmp
cmpsb
arpl
ljmp
fidivrl
iret
mov
or
ret
sbb
xchg
lcall
rcrb
rcll
loopne
xchg
roll
push
in
test
leave
mov
js
cmp
fcoml
adc
dec
cmp
add
fiaddl
and
jno
out
mov
int
mov
jnp
add
ljmp
insl
fdivrs
jae
sub
aaa
cld
out
cmp
adc
fscale
pop
in
mov
sbb
int
outsl
mov
pop
or
xlat
jp
stc
sbb
test
mov
sbb
push
ficoml
test
xchg
mov
adc
add
xchg
testb
cld
push
jbe
or
dec
mov
or
sarb
adc
inc
subb
jl
inc
mov
or
leave
dec
mov
out
icebp
jmp
sub
add
popa
jg
inc
shrl
sahf
cmpb
out
jl
mov
mov
cld
icebp
lret
sub
iret
bound
dec
into
add
lds
shll
subl
cs
fidivrl
dec
jg
mov
xchg
popf
dec
aas
adc
xchg
pop
mov
shr
xor
int3
inc
ljmp
add
sbb
fincstp
mov
stos
in
roll
mov
fnstenv
popf
xor
xor
jecxz
in
jmp
in
loopne
cs
mov
mov
sbb
fldcw
out
mov
pop
repnz
test
nop
push
mull
clc
jge
push
jl
sbb
and
test
insb
es
xor
mov
inc
add
or
inc
mov
push
sub
xchg
mov
sbb
inc
inc
ss
pop
mov
in
xchg
leave
inc
and
int3
ja
mov
mov
mov
mov
sbb
push
mov
ljmp
rcrb
fnstsw
push
add
mov
xadd
or
das
test
mov
or
jg
sbb
push
cmc
and
sbb
push
cmpsb
inc
jg
call
test
or
xchg
stos
cmp
repnz
mov
mov
jge,pn
mov
pop
cltd
cld
testb
mov
and
test
or
jecxz
add
pop
cmp
inc
int3
dec
dec
test
out
xorb
push
inc
sbbb
inc
ljmp
ret
rclb
in
loopne
sub
out
dec
mov
dec
mov
inc
adc
jmp
mov
sti
jb
nop
xchg
xor
xchg
sbb
mov
sbb
jno
cmc
mov
lods
jbe
inc
enter
mov
mov
andb
xchg
dec
loop
popf
enter
jle
mov
stos
cltd
dec
imul
bound
pusha
decb
mov
xchg
pushf
into
or
jbe
fnstsw
cmp
insb
nop
jb
sbb
ret
stc
loope
cmpsl
pop
jecxz
adc
or
scas
and
out
push
loop
addr16
mov
inc
fwait
ret
test
jle
adc
jae
cltd
in
je
adc
loopne
xorb
xor
dec
in
stos
fldl
lret
xchg
aad
sbb
cmp
pop
data16
xor
mov
or
rcll
loopne
mov
inc
fstl
ja
sbb
sahf
xor
or
sbb
pop
sbb
pusha
push
pop
int3
jecxz
sub
ja
gs
xor
jnp
sub
dec
add
dec
sub
mov
add
adc
xchg
jnp
jb
jae
mov
pop
nop
pop
into
cli
lock
fwait
mov
stos
pusha
fstps
stc
push
out
notb
mov
cmpsb
repnz
and
out
out
das
movsb
mov
data16
lret
les
outsl
jne
sbb
jae
pop
and
inc
fs
mov
addr16
cld
xchg
sti
mov
jnp
lahf
dec
jae
sub
cld
cwtl
cmpsb
jns
mov
leave
sbb
jmp
out
cmp
inc
jo
aam
cmp
cmpsb
sti
mov
push
lahf
int
xchg
movsb
push
adc
int3
sub
pcmpgtd
insb
scas
ret
jnp
add
dec
hlt
inc
dec
push
rclb
cld
push
inc
jmp
push
push
or
insb
mov
fmull
lds
divl
push
and
call
jg
mov
iret
cli
sbbl
xchg
push
test
push
pop
int
cmc
loop
jecxz
mov
sahf
jne
loop
dec
in
jne
call
push
dec
push
xchg
ja
mov
lcall
lock
sub
mov
dec
mov
test
lahf
cmpsb
fs
pusha
pop
mov
mov
mov
xchg
jp
cmpsb
push
xchg
andl
xor
jne
ret
adc
scas
jb
mov
fmulp
and
push
ret
lret
xor
push
or
hlt
out
mov
shll
fmuls
push
pop
imul
jg
and
arpl
inc
mov
aam
imul
jmp
fistl
fisubrs
iret
idivl
out
enter
jnp
leave
jnp
sbb
sahf
scas
rorb
inc
sahf
loopne
mov
insb
addr16
push
test
jns
popa
jnp
pop
cld
lds
aad
sub
scas
fcomi
xor
or
mov
ret
movsb
jecxz
scas
test
insl
jne
lahf
mov
sbb
inc
test
lock
jns
cmp
out
cmp
arpl
fists
lods
add
lea
adc
fs
fwait
clc
outsl
jg
mov
sahf
ret
mov
or
fs
subb
push
imul
fwait
aaa
cld
sbb
cmp
pop
cli
aas
pop
loopne
movb
lds
lcall
mov
fsubr
in
test
sub
test
outsl
jae
cld
mov
testl
into
mov
jg
xchg
and
out
enter
mov
fxam
les
xchg
clc
insb
in
jge
jbe
bound
mov
pop
mov
sbb
inc
mov
gs
inc
xchg
test
popf
repnz
negb
dec
mov
cmpsb
stos
ficoms
mov
dec
data16
xchg
jno
cli
sbb
inc
in
hlt
adc
flds
sub
rcr
stos
lock
andb
aad
and
jno
aam
movsb
mov
jno
dec
in
push
gs
ret
adc
jne
sarl
xchg
mov
push
inc
pop
mov
ds
es
sub
cld
stos
and
cmp
and
aaa
jno
nop
lcall
aam
cltd
shrl
aam
xchg
mov
sbb
clc
mov
repnz
je
pop
es
ss
sub
push
insb
dec
and
pop
fstpt
dec
ja
fidivrs
hlt
insb
mov
add
jns
js
fsubrp
mov
dec
xchg
fisttpll
or
fs
popa
push
pop
sub
cs
stos
hlt
sahf
subb
aad
arpl
push
jge
cmp
ret
sbb
pusha
adc
subb
dec
push
lock
popl
out
jp
into
xor
xchg
gs
pop
inc
adc
cmc
out
jbe
subb
lea
aaa
sbb
das
lea
xlat
mov
mov
inc
add
adc
lcall
xchg
jle
in
iret
outsl
mov
jle
faddl
imul
lock
sub
clc
sbb
push
add
inc
xchg
outsb
mov
adc
push
adc
inc
cmp
out
stos
lods
shrb
cmp
jecxz
dec
rorb
xor
dec
mov
jo
hlt
sbb
scas
xor
or
push
jmp
outsb
repz
sub
and
fstpt
arpl
repz
mov
cmc
test
mov
inc
fwait
int3
insl
fistpll
addl
out
je
cmp
sbbl
xor
mov
or
push
mov
xchg
sahf
xchg
stos
adc
push
arpl
inc
adc
lret
scas
addl
test
push
cmp
or
pop
sub
xchg
push
add
jmp
mov
call
cmp
outsl
sub
decb
sub
mov
mov
nop
pop
std
or
xchg
push
add
shl
adc
test
lret
mov
jl
shrl
aaa
push
push
mov
mov
inc
mov
aaa
out
inc
adc
js
jmp
inc
jbe
jns
mov
mov
daa
mov
push
andps
loop
ljmp
iret
dec
cld
popf
out
xchg
stos
xor
movsl
lods
push
pop
sbb
push
inc
mov
or
int3
scas
xchg
ret
lahf
pusha
imul
mov
mov
mull
test
add
mov
imul
push
divl
add
in
test
mov
push
stos
data16
mov
jg
xchg
xchg
out
pop
sbb
add
ss
inc
pop
adc
or
adc
cmpsl
pop
jns
rorl
rcl
jb
clc
fsubl
pop
stos
push
imul
cwtl
jecxz
aas
or
int3
insb
inc
dec
push
fs
clc
add
lods
fxch
ss
push
cmc
adc
pop
in
mov
addr16
jmp
jmp
cmp
xor
sub
push
xchg
mov
push
ds
es
lods
push
pushfw
inc
nop
xor
aam
call
mov
sub
lret
shlb
test
sub
stos
outsb
popa
sahf
dec
mov
xchg
mov
popf
adc
xor
ds
lahf
mov
mov
fisubl
jg
cld
mov
test
cmpsb
jne
int
cmp
xor
cmc
and
int3
sahf
sub
jb
sbb
and
adc
ret
roll
xchg
outsl
lods
ds
jp
mov
xor
dec
seto
stc
dec
or
test
cmp
insb
movl
nop
xchg
loope
sub
out
lock
xchg
dec
out
xor
out
mov
or
rclb
pop
je
mov
sub
xchg
xor
mov
pop
shrl
lahf
jne
jns
mov
rol
in
adc
divl
es
sbb
fwait
shll
add
adc
loope
adc
fdiv
adc
push
out
cltd
int
sub
into
jno
stos
movsl
mov
xor
lahf
adc
ds
mov
or
dec
cmp
inc
mov
inc
popf
data16
push
fcoml
stos
inc
mov
lock
js
dec
loope
sbb
add
imul
xor
jo
inc
call
sub
mov
insl
fnstcw
mov
xchg
int
jnp
clc
jecxz
lock
fistpll
add
lods
cli
adc
xchg
mov
jle
sahf
xchg
std
sbb
cmp
mov
xor
jmp
mov
jnp
arpl
cmpsl
insb
mov
jmp
push
rclb
sbb
dec
lret
outsb
arpl
imul
sbb
test
mov
xchg
jbe
mov
xchg
mov
popf
dec
dec
iret
insb
jb
mov
in
vmread
jge
imull
xchg
adc
aad
add
pop
add
sub
stos
js
mov
repz
and
stos
aad
xor
lcall
popf
mov
push
lock
ret
into
xor
jl
push
jl,pn
or
push
and
cld
lcall
adc
int3
call
mov
inc
dec
cli
mov
lock
fimuls
mov
xor
inc
pushf
mov
cmp
or
add
mov
aad
adc
pop
or
cli
cmpsb
mov
sarb
mov
lds
lock
dec
adc
ror
insl
shll
inc
scas
lock
enter
insb
sahf
test
movshdup
sub
ds
stc
in
lds
cmpsb
sahf
inc
push
sub
mov
sti
gs
jns
push
das
mov
sbb
fnstcw
push
daa
arpl
outsb
xchg
cmp
sti
and
pop
cltd
in
scas
shll
cwtl
jne
mov
xchg
aad
xor
pop
jnp
out
cld
cmp
inc
jae
pop
sub
mov
cmp
call
shll
pushf
popf
pop
sub
stc
out
test
adc
out
mov
xor
arpl
jbe
push
adc
inc
sub
imul
and
and
fptan
fcmovb
ljmp
dec
out
popl
mov
sbb
jno
js
dec
dec
add
pop
mov
xor
insl
imul
or
clc
stos
fbld
test
or
adc
jnp
loopne
sbb
mov
cmpl
ret
int
sub
fs
aad
adc
aaa
test
lret
nop
bound
in
xlat
outsb
movsb
dec
test
sub
inc
xchg
bound
fists
pushf
fldenv
adc
pop
sub
mov
fidivrl
call
adc
cld
cwtl
mov
push
xor
lods
dec
xchg
mov
rol
daa
mov
in
cmp
mov
stos
nop
bound
je
scas
add
pop
inc
push
push
js
inc
ss
mull
sbb
jg
sbb
stc
mov
xchg
inc
fld
lea
js
mov
sbb
push
insb
cltd
repnz
cmpsl
xchg
xchg
loopne
mov
stos
adc
dec
mov
add
ror
xor
xor
out
int
or
stc
imul
insb
mov
leave
andl
fiaddl
cmpsb
xchg
lcall
push
add
nop
out
jl
xchg
inc
mov
call
jg
push
xchg
int
scas
mov
pop
ja
shlb
es
sbbl
fwait
dec
adc
pop
adc
mov
add
sub
xchg
pop
std
or
aaa
icebp
popa
cmc
sbb
cmpsl
sub
xchg
or
push
mov
jne
rcr
std
out
subb
adc
daa
stc
mov
or
jmp
imul
cmp
inc
in
jmp
les
sbb
es
les
iret
push
push
test
mov
xchg
jnp
and
push
push
jns
mov
dec
ret
pop
loopne
arpl
pop
push
out
cmp
sub
enter
inc
inc
repnz
xchg
sbb
or
push
mov
and
cmc
xchg
lahf
cltd
push
out
mov
rclb
sbb
cmp
mov
daa
dec
cmp
mov
add
repz
add
sbb
sbb
aad
dec
xor
cmp
subb
out
adc
jno
int
xor
mul
int
data16
andl
ret
hlt
pop
aam
or
daa
dec
sbb
mov
test
aas
aaa
in
and
mov
xor
std
cmpsb
push
pop
sbb
mov
lcall
int3
add
addb
jo
fcmove
outsb
adc
and
and
std
inc
dec
cmp
jbe
sub
sbb
stc
popf
out
jbe
adc
pop
outsl
mov
lret
cmp
subb
movsl
scas
testl
xor
xchg
repz
pop
fcompl
leave
out
xchg
dec
xor
into
mov
in
in
into
shrb
scas
outsb
jecxz
cmpsb
pop
call
call
sub
lds
mov
sbbb
pop
inc
mull
bound
loope
pop
cmp
and
movsl
adc
mov
adcb
dec
cmp
stos
sbb
push
jne
fwait
ret
cmc
outsl
movsb
sahf
aaa
ret
ret
xchg
and
jmp
jge
add
repz
cmpsb
stos
or
test
out
rorb
insl
or
add
sbb
dec
mov
push
xchg
fwait
cli
pop
sbb
pop
cmp
shrl
adc
inc
jnp
call
push
add
xadd
mov
inc
jle
cmpsl
fucom
je
mov
in
jmp
outsb
dec
in
pop
popf
int3
movsb
lret
push
cmpsl
xchg
mov
sarl
mov
add
dec
mov
or
jp
jge
ljmp
ret
bound
insl
mov
aaa
aaa
cmc
lahf
repnz
out
mov
scas
or
sub
sbb
ret
test
push
push
daa
push
popf
sbb
popa
aam
adc
xor
jmp
in
mov
xor
shl
mov
std
sub
mov
mov
rorl
sarl
popf
loope
adc
mov
xor
mov
pushf
les
jbe
rolb
push
fmulp
sti
loopne
mov
xchg
imul
push
movsl
sbb
mov
aam
mov
and
sbb
mov
fsubs
jno
adc
repz
dec
mov
iret
sbb
and
sahf
mov
fcoml
jb
int3
mov
add
adc
mov
sub
js
ret
push
push
imul
fadds
mov
sub
rolb
lds
inc
cld
sub
jb
lret
scas
ret
adc
rclb
inc
insb
or
cmp
rolb
mov
jge
xchg
push
sar
jecxz
scas
mov
xor
mov
pop
jo
clc
inc
shll
cmc
or
lret
dec
push
pop
add
dec
sub
mov
mov
das
rcr
pop
imul
js
sub
adc
enter
jge
call
push
push
fstpl
sar
stos
dec
and
pop
in
lock
add
aad
dec
adc
jecxz
push
hlt
fsubrs
mov
clc
pop
push
fidivs
xchg
aam
iret
dec
arpl
mov
add
mov
in
in
adc
jle
pusha
xor
pop
xchg
mov
call
notl
dec
cli
ds
mov
insl
call
popf
push
pop
xor
rorb
stos
jmp
pop
sbb
out
aaa
mov
inc
sub
push
lods
inc
mov
andb
cli
jns
push
pop
sub
cmp
js
inc
inc
lret
sarl
cltd
add
sub
into
dec
jge
pop
bound
rorb
pusha
frstor
js
xchg
enter
ljmp
add
int
aas
mov
ror
aaa
es
fmull
fadd
push
dec
pmulhw
mov
jne
and
mov
test
mov
mov
lea
xchg
jbe
push
xor
sbb
cltd
std
and
aam
cmp
mov
orl
int3
mov
mov
pop
test
jbe
jo
out
es
lods
outsl
jo
sbb
jae
mov
cwtl
pushf
inc
push
xchg
sbb
lock
pop
mov
je
pushf
jg
rcr
pop
xor
sub
dec
push
sub
aad
inc
clc
cmpsb
push
mov
stos
cmp
and
addr16
lods
xor
adc
rcl
sub
out
aas
mov
test
cmc
xor
clc
jecxz
rcll
lret
cmovbe
idivb
inc
fbld
mov
outsl
dec
hlt
jns
add
out
push
xor
cmpsl
jno
mov
dec
orl
data16
test
or
xlat
dec
and
loope
fsub
add
push
adc
cwtl
mov
ds
sub
jns
hlt
mov
xlat
push
xor
inc
push
or
xor
or
ljmp
adc
lret
pop
mov
cmp
jg
popf
mov
xor
xchg
stc
xor
jnp
sub
xor
adc
jge
jge
adc
andl
ds
cmp
lock
add
pop
enter
dec
add
pop
idivl
lahf
int
imul
dec
mov
and
rcrl
cmp
scas
lret
mov
inc
mov
je
cmpsb
mov
or
sbb
inc
inc
data16
je
stos
add
ror
mov
insl
popf
out
fbstp
push
bound
jle
lret
cmp
and
leave
pop
jle
faddl
out
pushf
push
sub
dec
icebp
mov
in
pop
sbb
jbe
push
pop
clc
sub
imul
xor
mull
mov
adc
aaa
nop
cmpsl
add
outsl
adc
or
and
das
call
adc
in
xor
mov
scas
loope
aas
sbb
xor
push
xor
movsb
jl
cmp
insl
ja
mov
js
add
and
lock
out
dec
mov
leave
mov
mov
mov
xlat
mov
mov
loope
inc
push
jbe
add
xchg
mov
cltd
lret
stos
test
push
pop
std
shlb
xchg
repnz
push
in
sbb
movsl
repnz
enter
hlt
test
fwait
inc
lea
add
push
fsts
fstpt
push
push
pushl
mov
add
fiadds
pop
mov
push
divb
dec
sbb
scas
outsb
rorb
dec
and
loopne
cmp
xor
cs
and
movsb
mov
add
sub
cmc
push
test
test
fwait
leave
cld
mov
inc
adc
mov
lods
fistl
cmp
push
mov
jl
scas
jb
test
inc
gs
cld
pop
cli
push
hlt
inc
xchg
dec
add
out
push
xchg
decl
or
stos
push
imul
xchg
mov
das
dec
leave
sahf
mov
std
aas
mov
adc
mov
or
add
jge
lret
cmc
cmpsb
jp
insl
cwtl
xchg
mov
cmc
iret
mov
push
or
jg
mov
sub
and
popa
aas
clc
dec
fs
cld
push
mov
movb
cmp
dec
fdivr
adc
fsubl
enter
ss
sti
push
jae
xor
icebp
cmp
int
arpl
into
movsl
inc
jl
push
loop
ja
xchg
mov
pushf
data16
outsb
and
push
rol
pop
mov
fildl
push
pop
mov
xor
shl
pop
aaa
add
shl
sbb
dec
fcomps
repz
push
inc
ljmp
add
mov
lea
in
pop
insb
add
nop
push
fistps
loop
shll
sarb
int
jg
inc
mov
mov
pop
mov
gs
push
mov
cs
mov
imul
jle
mov
nop
stos
xchg
pmaddwd
lock
inc
in
mov
int3
mov
or
inc
repnz
es
lret
sbb
cli
mov
daa
mov
shll
insb
test
mov
sbb
fsubrs
pop
pop
fucomp
rsm
es
jae
mov
jnp
or
cwtl
pop
scas
cmpsl
test
jbe
sub
add
xchg
add
in
mov
pop
in
lods
add
inc
outsb
xchg
int
jge
outsb
testb
mov
and
sub
cmpsb
jns
daa
cmc
fwait
jp
adc
testl
stos
test
or
xchg
xchg
jg
insb
xchg
aam
and
mov
mov
add
jno
loope
movsl
pop
rorl
sti
int
adc
cmp
mov
or
pop
xchg
rclb
jle
push
mov
fmull
in
mov
movsl
cmpsl
and
sub
pop
lock
bound
or
cwtl
inc
ja
in
stos
xchg
fdivs
call
sbb
arpl
mov
sarb
sbb
add
fstps
push
xchg
mov
dec
adc
lret
cmp
pop
ficompl
push
xchg
jle
dec
outsl
int3
xor
fsubs
or
and
sar
xchg
or
cli
iret
mov
lret
cltd
stos
hlt
xor
adc
add
jns
cmp
lret
jle
xchg
jno
iret
pushw
adc
into
cmp
out
pop
addr16
pop
dec
xchg
or
ficoml
test
cmp
and
pop
call
jne
outsb
dec
sbb
mov
xor
mov
ror
xchg
pushf
ja
and
sub
sbb
shlb
mov
xor
lds
mov
and
mov
fmulp
stos
arpl
jo
popa
cmc
call
xchg
xor
sbb
and
les
add
sub
movsl
mov
push
pop
dec
lahf
pop
inc
xlat
jno
imul
test
out
and
push
adc
lcall
push
pushf
pop
in
pop
test
call
cmpsl
or
sahf
aas
imul
insl
std
jns
add
and
xor
stos
jecxz
cmp
daa
sub
pop
fcom
mov
xor
shl
cltd
mov
ret
or
das
jl
cmc
mov
sub
loop
cmp
negb
mov
jl
dec
ljmp
add
mov
mov
inc
and
fldcw
pop
scas
mov
sub
xor
mov
sbb
xor
insl
leave
out
and
test
ljmp
hlt
jp
mov
mov
out
push
sbb
dec
aaa
js
sub
mov
add
fsubp
scas
adc
psraw
in
into
insb
pop
pusha
sbb
adc
stos
lea
out
in
mov
in
pop
mov
sbb
cmpsb
cmpsl
mov
loop
xor
lods
loopne
imul
jnp
pusha
in
mov
popa
dec
out
addl
stos
pop
sub
mov
lahf
inc
lods
fildl
mov
mov
pop
les
pop
lock
pop
jl
xor
sub
add
out
divl
ret
in
sbb
les
dec
or
mov
fisttpl
iret
test
xchg
addr16
jae
stos
ror
roll
ret
jne
dec
int3
shlb
dec
ds
push
andl
testb
mov
and
add
mov
iret
int
sub
jno
enter
pop
jle
jmp
sbb
cmpsb
setb
je
inc
bound
and
sub
test
movsl
test
jecxz
jno
out
adc
dec
addb
jo
aam
adc
and
mov
aas
out
lods
jle
adc
fsts
sbb
lret
outsb
adc
hlt
loope
insl
add
outsb
push
das
dec
dec
lcall
dec
xchg
jae
push
xchg
mov
cmc
movsb
in
add
mov
cltd
mov
inc
jl
aas
xlat
mov
push
adc
sub
mov
in
xchg
mov
or
ret
xchg
imul
cltd
lds
popa
sub
dec
sbb
rorl
icebp
xor
sbb
push
cli
add
enter
rorl
popa
push
fnsave
adc
ss
ss
push
sub
into
insl
xor
sahf
xor
popf
cmp
mov
cmp
or
sar
mov
or
and
xchg
cmp
insl
xchg
clc
scas
xchg
imul
sbb
cmp
xchg
adc
cmpsb
xchg
clc
cmp
fisttpl
out
xchg
and
mov
sbb
in
fistpl
cmpl
sahf
movsl
push
loope
inc
cmp
jecxz
fwait
stc
pop
fcomp
add
xor
fldenv
shlb
inc
and
add
xchg
jo
adc
sub
mov
mov
mov
popa
and
add
add
mov
mov
jae
and
push
push
cmpsb
jne
jg
mov
inc
movsb
scas
ffreep
jb
out
pop
pop
movsl
shrb
arpl
xchg
sbb
rorl
inc
push
stc
inc
lcall
mov
add
bnd
jb
lods
adc
pop
mov
aam
sub
sbbb
jecxz
pusha
and
inc
test
adc
ja
test
in
in
jns
out
dec
sti
movsb
xchg
stos
loope
addr16
dec
sub
stos
jo
push
sub
lcall
fstps
mov
call
enter
sub
add
mov
and
pop
sub
xchg
lock
mov
adc
fucomip
jecxz
inc
lcall
adc
push
int3
loop
adc
fimull
out
mov
dec
cmp
iret
cmpl
mov
outsl
or
xor
lods
test
lret
and
imul
loop
test
int
inc
sbb
into
mov
jle
lret
push
xor
addr16
popa
inc
fwait
push
pop
pop
std
and
push
dec
int
out
orl
or
fs
mov
data16
sbb
sarl
mov
jb
push
xchg
mov
sub
sar
adcb
clc
lret
inc
inc
fdivrl
int
mov
gs
inc
inc
rorb
jno
pop
add
int3
test
sbb
fiadds
out
pop
popa
mov
stc
mov
cs
cmp
aam
cmp
repz
mov
mov
xchg
add
lret
repnz
outsl
jge
mov
fadds
cwtl
mov
fiaddl
push
std
or
sub
mov
imul
jno
loopne
or
pop
bts
lods
fidivs
adc
adc
and
cmc
pop
bound
stos
xor
scas
inc
adc
fisubrs
js
and
roll
push
push
call
jns
inc
stos
repz
push
shrb
push
dec
xor
jp
dec
repz
mov
mov
jns
les
jmp
hlt
add
xor
push
add
or
cmp
sbbb
mov
cmp
cmpl
and
push
test
test
fsubrl
testl
imul
testb
push
fwait
xchg
scas
rol
pop
add
inc
aam
cmp
rorl
in
lods
adc
mov
sbb
out
jle
push
daa
adc
xor
cmc
mov
or
push
test
push
or
xchg
clc
add
rorl
or
pushf
and
add
stos
cwtl
jnp
inc
jns
in
fistpl
xor
jp
pop
jp
sub
pop
sarl
add
in
pop
mov
cmp
lock
push
int
scas
mov
incl
test
imul
mov
adc
fwait
cmp
xchg
cwtl
mov
cmc
sti
add
push
push
xor
sbb
xor
popf
inc
mov
je
and
pop
inc
neg
mov
cmc
pop
stc
push
xor
pop
out
sub
ja
int3
xchg
lret
inc
jns
sbb
sbb
dec
cli
out
adc
sti
repz
cmp
sub
scas
pop
mov
cltd
movsb
push
imul
jge
addr16
xchg
or
icebp
lea
adc
inc
cmc
pushf
pop
push
pop
jmp
sub
jecxz
shlb
dec
imul
pop
pop
dec
or
shll
sbb
pop
clc
imul
sti
lahf
fcoms
movsl
popf
rolb
adc
mov
in
jg
imul
sbb
or
in
sbb
xor
jmp
je
mov
and
xchg
cmpsl
bswap
scas
enter
and
rcr
popa
fstps
insb
imul
jmp
fdivp
cltd
aaa
xlat
jbe
dec
push
xor
inc
xchg
ja
add
test
outsb
push
stos
clc
imul
adc
jns
add
lret
les
and
inc
jb
inc
stos
repz
sub
mov
xchg
outsb
leave
sahf
or
push
jne
xor
or
test
cmp
decl
insl
mov
xchg
loopne
dec
pop
jge
mov
xchg
fs
jb
add
jnp
xor
repnz
test
cmpsl
push
bound
mov
loop
fcmovb
and
push
les
sbb
fmull
daa
imul
sbb
xchg
sub
ret
jge
out
jno
lock
icebp
push
pop
pop
out
jb
jle
div
pop
pop
lock
fstps
mov
push
inc
xor
lea
push
push
aad
dec
in
data16
pop
xchg
lcall
adc
or
jne
jno
lds
xor
pop
xor
mov
sbb
pop
push
sahf
sbb
fbld
fadds
jle
or
dec
jno
aam
push
orb
adc
das
inc
repnz
push
mov
add
sbb
xchg
lahf
push
stos
adc
push
dec
repz
jge
inc
pop
call
cmp
call
nop
jne
and
enter
imul
jmp
leave
adc
fcompl
aas
adc
iret
cmp
add
adc
xor
sub
sbb
or
xor
pop
inc
nop
test
cmp
fldt
jle
sub
int
mul
ljmp
xor
bound
cmp
jno
ret
lret
mov
addr16
fcomps
mov
push
mov
mov
dec
out
add
fcomip
aas
repz
movsb
inc
sub
mov
test
ret
push
ret
fisubrl
mov
mov
xor
outsb
sbb
xchg
outsl
mov
lcall
iret
fcoms
xor
inc
cmpsb
push
adc
stc
pop
or
add
ds
shlb
add
mov
and
mov
out
mov
rolb
pop
xor
test
fsubl
adc
out
testb
outsb
mov
sbb
insl
add
pop
dec
lret
je
push
out
push
adc
idivb
sub
sahf
pop
hlt
into
xor
insl
leave
outsb
es
sbb
popa
cmp
and
addr16
imul
pop
xchg
add
int
fcomps
mov
pop
leave
mov
mov
cwtl
push
popa
fs
shl
test
add
xchg
ja
cmp
xchg
mov
xor
inc
sbb
push
repz
jno
jo
cmpsl
icebp
fisttpl
inc
movsl
sub
pushf
dec
das
add
lods
gs
xor
sub
or
jno
aam
leave
jne
movsb
sub
xchg
gs
cmp
lods
mov
push
xor
fdivp
dec
or
adc
stos
mov
or
dec
adc
push
repz
sti
xchg
jae
fwait
mov
es
mov
lret
cwtl
dec
add
and
xor
xchg
jmp
popa
out
mov
ja
mov
imul
fwait
xchg
shll
dec
mov
insl
into
jae
mov
dec
cs
jmp
ret
rcll
lret
jmp
or
mov
jp
jmp
sub
imul
mov
push
or
leave
mov
in
push
push
and
add
ja
jno
fidivrl
dec
ljmp
sbb
add
fimuls
shrl
push
mov
add
push
je
xchg
stos
icebp
dec
arpl
ror
xchg
cmp
cwtl
adc
adcb
mov
ljmp
pop
sti
jbe
push
and
aaa
xchg
inc
push
jnp
aas
lea
lret
call
mov
mov
and
cli
lret
xchg
mov
into
xchg
push
sub
movswl
mov
rcrl
inc
sub
aam
push
ds
imul
mov
sub
cwtl
out
rcr
repnz
jne
test
cmp
jo
shlb
pop
push
rol
cmc
cld
dec
sbb
mov
xchg
and
mov
or
push
cmp
inc
sbb
jle
scas
cmp
push
mov
mov
rolb
stos
push
xor
add
sbb
cmp
sub
mov
test
popa
or
cmp
push
cmc
xor
mov
sub
dec
dec
data16
and
pop
sub
push
scas
out
into
insl
mov
in
in
mov
push
mov
cmpsb
adc
sbb
fstl
leave
sbb
clc
jb
sbb
nopl
icebp
icebp
loopne
lahf
pop
aad
jmp
arpl
cld
dec
mov
xchg
arpl
inc
push
sbb
cmpsl
adc
repnz
cmc
cli
or
outsl
popa
inc
loope
scas
shl
jne
push
or
ja
je
adc
imul
popf
int
leave
ja
out
pop
mov
imul
add
xchg
dec
dec
mov
int3
nop
xchg
rcll
jle
daa
inc
shl
xor
mov
lock
inc
scas
sub
shll
sub
sub
mov
add
xchg
nop
lods
lret
sbb
sbb
mov
adc
xchg
sub
fisttpll
dec
das
push
stc
adcb
and
jb
sub
aas
cwtl
loopne
sub
or
mov
mov
je
ss
mov
dec
jnp
leave
out
push
andb
xchg
fisubrl
jns
mov
movsb
test
jnp
bound
inc
dec
mov
jle
fcmovnu
out
xor
cmp
mov
or
cmpl
sub
mov
es
in
or
cmpsb
sub
sti
fnstenv
out
push
rcr
ja
mov
ss
mov
xor
scas
mov
or
mov
inc
imul
inc
es
pop
dec
clc
cmp
out
and
aam
add
xchg
cmp
xchg
data16
aam
mov
xor
int
and
gs
sbb
cmp
mov
pop
shrb
sub
test
pop
jle
decl
xor
push
dec
xchg
xor
cltd
cmpsb
das
rcrb
or
push
jnp
loope
cmp
or
ljmp
hlt
dec
fstps
push
dec
int3
fdivrs
sub
mov
out
xor
push
push
lods
mov
xchg
inc
inc
pop
repnz
outsl
mov
and
addb
outsb
arpl
cld
fstps
jae
xor
xchg
pop
out
or
adc
aaa
ds
dec
cmp
cltd
lret
and
push
push
jo
fldenv
aad
negl
sbb
cmp
xchg
xor
fwait
and
into
mov
push
int3
in
mov
xor
dec
je
mov
cmpsb
xor
stos
mov
push
sub
push
in
sub
int3
sub
xor
lcall
fisttpll
arpl
mov
xor
mov
dec
scas
ret
out
jmp
lds
out
sahf
icebp
hlt
test
jle
in
xchg
hlt
gs
sbb
pop
scas
push
push
jne
call
loopne
daa
jge
adcl
fidivs
jne
jns
mov
in
xchg
pop
rclb
xchg
fsubl
div
fcompl
and
fsubl
hlt
fmuls
mov
data16
sbb
clc
pop
and
out
les
shr
fistl
lods
sarb
push
inc
mov
xor
stos
out
decb
icebp
sbb
push
xor
lds
or
xchg
dec
std
aad
jo
ljmp
cmp
push
sub
into
sbb
jg
xchg
pop
jecxz
adc
xor
stc
lods
enter
xor
xchg
lods
adc
fwait
or
out
push
jo
jae
mov
mov
pop
adc
mov
or
out
dec
es
mov
mov
outsb
add
xchg
rcrb
pop
lret
ret
int3
xor
out
ret
xchg
add
std
jmp
xchg
ret
adc
sub
es
sub
inc
add
ret
daa
xor
push
mov
cmpsl
mov
seta
or
es
loop
sbb
cld
and
mov
dec
out
mov
loopne
pop
xchg
aam
lods
sub
cmp
dec
fsub
shrl
sbbb
xchg
push
into
push
pop
sub
sub
xchg
sub
clc
sub
mov
cld
xlat
sbb
jge
loopne
xor
je
ja
push
mov
sbb
mov
jae
pop
or
or
cmp
mov
jl
push
fwait
movsb
xchg
inc
pop
aaa
gs
push
mov
faddl
mov
inc
and
mov
cwtl
aaa
push
push
lahf
pushf
subb
pop
ss
es
jo
int
cmp
dec
sub
rcll
lea
insl
sbb
xor
sub
outsl
xor
add
mov
dec
fisttps
pop
mov
jmp
sbb
or
mov
mov
adcl
rorl
add
sarl
push
loop
lcall
mov
pop
add
cmp
dec
push
add
dec
lret
jns
popf
clc
inc
jnp
push
jmp
pop
hlt
push
pop
cli
and
stos
lret
test
ficoml
mov
sub
and
push
scas
cs
and
sub
in
daa
shrb
pop
fnsave
xchg
js
leave
daa
notb
xchg
jmp
adc
and
xorl
pusha
or
cmp
add
fstps
dec
mov
in
iret
jp
inc
pop
es
sub
add
mov
loopne
jnp
xchg
and
fwait
cmp
fimuls
loope
nop
lret
mov
inc
iret
test
inc
push
popf
subb
pusha
shrb
sar
lods
cs
lds
divb
pause
jl
or
pop
mov
outsl
inc
pusha
xchg
rcll
adc
pop
lcall
hlt
stos
mov
lods
mov
mov
xchg
add
push
sub
mov
movsb
jge
pushf
cld
subb
dec
jbe
mov
adcb
mov
jno
sahf
pushl
jo
in
loop
mov
repnz
sbb
in
sti
clc
sbbb
test
adc
insl
iret
ficoml
mov
cli
xchg
std
adc
or
test
lret
out
pop
xor
push
imul
loope
jnp
data16
push
cmp
push
loop
adc
jae
fldcw
mov
sarb
iret
sbb
mov
and
rcr
and
mov
cltd
jbe
sub
arpl
sbb
fcoml
fucomip
cmp
cmp
test
pop
scas
test
sbb
les
mov
dec
push
imul
pop
mov
mov
test
fmuls
jbe
test
lcall
fs
mov
adc
xchg
pop
rclb
lods
int3
push
mov
fisubs
fwait
cmc
mov
data16
push
cmpsl
sub
xchg
cmp
mov
push
fs
add
aam
test
and
cmp
and
stos
jae
orl
test
mov
cmc
hlt
and
mov
push
lods
dec
in
jbe
mov
and
jg
jecxz
mov
xlat
popa
aas
jmp
or
adc
frstor
dec
fstps
dec
les
js,pt
fldenv
xlat
mov
ror
jo
adc
pop
les
pop
not
sub
mov
inc
jb
into
repz
das
lahf
mov
bound
dec
lods
push
in
push
lret
xor
xchg
je
ret
cltd
mov
and
dec
je,pn
lods
ja
adcl
dec
mov
push
test
push
cmpl
or
jl
jnp
and
jne
repz
in
cmp
pop
adc
adc
jecxz
arpl
dec
jb
sbb
sbb
inc
dec
sbb
jle
push
cmp
test
adc
or
xlat
sub
sbb
cmp
outsl
push
aas
sbb
sbb
rcll
je
dec
dec
stos
mov
or
cmpsb
cltd
cmpb
sub
and
fsubrl
fisubrl
xchg
lea
dec
imul
lock
xor
or
in
push
dec
fidivrs
fisubrs
mov
sub
inc
movsl
push
hlt
in
push
sub
xor
int3
xchg
ljmp
stos
stos
lcall
ss
stos
mov
gs
push
xor
int3
push
loop
or
fs
call
addr16
insb
pop
and
lret
sbb
into
xor
ffree
xchg
push
sbb
test
fsub
sub
lret
int
dec
sub
les
sub
cli
std
in
sbb
sub
insb
loope
ljmp
lret
push
cs
dec
cld
add
aad
adc
sub
mov
in
jp
outsl
add
jge
dec
roll
cmpsl
imul
cmp
adc
cmp
mov
dec
icebp
loop
push
xchg
test
fldt
movsb
mov
std
adc
fcmovb
pop
js
mov
pop
lods
js
das
inc
dec
and
roll
jae
daa
scas
or
cltd
add
lahf
neg
leave
jae
mov
lcall
into
dec
push
pop
cld
push
xchg
shll
sbb
xchg
iret
loope
sub
out
iret
ret
sbb
mov
mov
adc
jg
inc
xchg
mov
mov
jns
loope
xor
cmp
or
push
or
mov
fs
or
and
aam
and
addb
sbb
leave
in
ret
adc
sub
add
mov
or
dec
mov
js,pt
adc
dec
es
mov
cli
sub
out
ja
mov
push
sbb
movups
jecxz
push
sti
icebp
std
jno
ljmp
mov
rcl
cmp
push
repnz
add
jbe
rorb
dec
mov
sub
std
jne
movsl
mov
mov
cmc
pop
mov
lock
jo
push
mov
adc
pop
and
leave
pusha
mov
test
test
iret
movsl
adc
push
adc
imul
outsb
test
aam
out
pop
imul
and
push
dec
loopne
push
call
add
movsb
movsb
xor
mov
mov
dec
icebp
dec
adc
cmp
pusha
or
shrb
scas
jmp
push
or
add
stc
rclb
mov
out
faddp
cmp
xlat
fbld
adc
xor
jb
xlat
push
push
movq
or
inc
nop
dec
jmp
mov
sub
cli
adcb
cmc
popl
es
sub
subb
adc
jle
lock
mov
pop
daa
or
xorl
movsb
je
push
xchg
lret
fwait
xchg
xor
clc
pop
push
insl
cmp
aaa
pop
insl
xchg
out
sbb
daa
xchg
pop
sub
subl
inc
js
sbb
aad
fwait
ret
dec
cmc
lret
in
aas
mov
into
xchg
mov
sahf
jbe
adc
mov
mov
ljmp
and
push
inc
enter
sarl
dec
inc
inc
add
arpl
mov
aaa
std
adc
sub
sti
mov
fwait
ja
fmuls
fidivl
pusha
fdivl
cltd
fnstsw
subl
jae
ds
pop
roll
jle
jnp
jl
icebp
mov
push
push
mov
jp
leave
and
mov
cmc
imul
fcom
jmp
out
dec
stc
push
pushf
adc
adc
loopne
xchg
shll
shlb
lock
cli
fdivs
ficompl
push
inc
dec
push
lea
scas
xchg
xchg
mov
adc
push
dec
or
lods
adc
sub
leave
jle
lcall
movsl
jnp
and
sub
das
movsl
jnp
xchg
adc
xchg
loopne,pt
outsl
mov
push
into
jbe
jne
mov
push
sahf
jno
adc
addl
adc
jno
dec
rclb
es
popf
adc
jle
shll
jne
xchg
stos
push
or
incl
dec
ljmp
xchg
int
imul
fisttpl
out
mov
push
xor
gs
xchg
outsb
cmpl
pushf
and
scas
cld
dec
pop
aam
or
pop
dec
sbb
jmp
add
xchg
aam
je
jno
pop
int
xchg
ss
pop
push
sbb
clc
stos
loop
cmp
dec
fbld
or
mov
aam
lahf
sub
loopne
test
mov
mov
rorl
scas
stos
add
test
adc
sbb
push
add
pusha
xchg
sahf
scas
push
inc
ljmp
pushf
fdivrs
jbe
sub
sub
sar
jp
sbb
es
inc
into
xchg
popf
and
inc
mov
rcrb
cmp
stos
cmpsl
or
js
into
repnz
push
sbb
lock
test
popa
jge
xor
jnp
sbb
orb
test
sti
outsl
aad
sbb
movsb
jmp
xchg
push
mov
aam
bswap
cmp
dec
xor
cmp
stos
mov
cmp
or
fs
jnp
sahf
jg
mov
jno
or
stos
mov
je
test
jns
cmp
pop
inc
cmp
cltd
mov
adc
xchg
shll
sub
jne
xchg
adc
aas
xor
mov
movsb
or
fisubs
inc
sbb
jecxz
lahf
pusha
inc
jno
dec
xor
push
sub
adc
fnsave
pop
andb
adc
scas
or
pop
sub
sbbl
pop
sbb
repz
add
xchg
out
pusha
loope
add
lods
icebp
push
lea
mov
lea
sub
mov
insl
dec
push
imul
mov
in
mov
jmp
add
adc
sub
scas
je
pop
add
jb
fildl
xor
out
pop
and
dec
ljmp
xor
call
scas
inc
orl
sbb
scas
out
bound
lock
fidivs
add
pop
xor
loopne
xchg
loopne
xchg
test
repz
bound
xchg
in
aaa
adc
xor
rorb
sbb
nop
into
and
jp,pt
or
add
or
push
mov
ret
inc
pop
pushf
cmp
add
insb
shl
dec
inc
lret
out
test
pop
inc
sub
jle
dec
ja
push
arpl
mov
scas
ss
inc
xchg
xchg
jne
inc
ficoms
pop
aas
in
mov
test
pop
dec
xchg
mov
mov
lods
mov
dec
int
jnp
mov
or
adc
enter
or
stc
cmp
adc
aam
push
or
ja
sar
jne
movl
cli
aad
lock
out
jnp
xchg
pusha
icebp
jns
push
mov
mov
stc
repnz
push
xor
rolb
jge
scas
push
scas
shl
lcall
jb
dec
xchg
cmpsl
cmc
movsb
jecxz
xchg
pop
xrelease
loop
jo
or
add
push
fnstsw
cmp
jge
dec
js
enter
cs
sub
aas
xchg
sub
decb
imul
adc
ja
ret
jp
cmp
gs
cmp
jmp
ljmp
stc
imul
pusha
cmpl
sub
mov
cltd
xor
pop
imul
das
sahf
lods
jge
inc
or
stos
fistps
add
mov
scas
add
ret
lret
mov
ja
and
sarl
aam
mov
or
or
inc
ret
dec
popa
in
jnp
stc
je
push
mov
lods
sub
iret
dec
pushf
shr
xchg
push
add
dec
ja
fwait
sbb
sub
mov
subb
sbb
sti
push
fdivl
mov
mov
mov
stc
add
mov
sahf
out
andb
push
popa
pop
enter
rorb
das
hlt
mov
adc
and
cwtl
push
cmp
fistl
or
aas
imul
mov
in
mov
dec
cmpsb
jae
push
in
int
icebp
dec
into
mov
ljmp
push
daa
adc
addr16
lds
jecxz
jp
adc
insl
scas
in
dec
test
imul
rcrb
cli
and
das
dec
movsb
xchg
dec
dec
jns
fistl
sbbl
hlt
ret
clc
clc
or
pop
enter
pop
aam
daa
negb
cld
add
pop
xchg
cltd
mov
stos
pop
mov
lods
sbb
adcb
enter
sahf
push
pop
psubusb
in
pop
notl
push
inc
mov
xor
xor
daa
je
adc
fistpl
sbb
pop
lea
push
mov
jmp
popa
or
sbb
incl
ja
sbb
lcall
das
pop
pop
sub
adc
inc
shll
punpcklwd
popa
rcrb
mov
fwait
popf
inc
push
add
les
xchg
push
cwtl
dec
int3
jl
mov
mov
movsb
or
and
mov
fsubl
dec
push
jmp
and
mov
aaa
pop
jge
sahf
cmp
cmp
icebp
enter
pop
or
lea
pop
sub
out
test
outsl
xchg
push
bound
sbb
and
pop
in
mov
aam
data16
fwait
adcl
leave
adc
xlat
mov
out
jnp
push
test
sbb
ja
adc
movsb
and
dec
or
mov
mov
inc
inc
sysret
or
mov
jl
into
imul
repnz
mov
and
add
lock
mov
in
fdivp
sbb
dec
jno
pop
ret
bound
jp
mov
dec
divl
push
lcall
mov
adc
xchg
add
scas
lea
push
adc
push
sbb
call
pop
adc
stos
loop
cli
mov
add
sbb
xchg
int3
in
loope
cli
adc
and
add
shrl
cmp
mov
sub
out
cmp
mov
cltd
in
sbb
mov
sarl
inc
sub
ffree
dec
fstpt
popf
pop
sar
jo
inc
fwait
pushf
into
sub
rol
xor
xlat
jnp
inc
mov
or
mov
mov
xchg
and
jmp
dec
lahf
mov
or
jp
pop
jns
cmpsl
dec
div
sbb
sub
test
xchg
clc
or
push
adc
ja
add
stos
mov
imul
sub
sub
and
repnz
aaa
std
loop
inc
into
push
in
test
inc
adc
scas
in
push
dec
shll
shrl
lds
mov
dec
mov
sahf
sub
outsb
inc
icebp
sbb
sub
mov
mov
mov
push
ss
mov
or
xor
and
sarl
mov
mov
cs
lcall
gs
push
subb
lods
ljmp
and
cld
jno
dec
cltd
xchg
pop
push
add
negb
sub
imulb
subl
jg
xor
aas
out
or
jge
aas
mov
add
das
lds
movsb
subl
lds
xlat
into
les
sub
cmp
jb
xor
sti
movsb
aas
cmovs
das
out
push
xchg
and
jg
dec
and
repnz
sahf
xchg
pop
add
or
cmp
adc
mov
popf
das
scas
xchg
cmp
loop
sub
inc
xchg
cs
add
out
sbb
gs
push
and
testl
fwait
mov
push
jbe
and
das
inc
aas
repnz
xchg
inc
lds
popf
jge
in
adc
sub
add
dec
loope,pt
mulb
or
dec
int3
in
mov
popf
cmp
dec
sbb
add
stos
dec
dec
les
idivl
pop
inc
dec
sbb
and
or
adc
pop
push
movsl
adc
xchg
int
lock
loopne
pop
enter
cmp
mov
pop
mov
gs
add
push
cmc
add
fwait
out
pop
dec
sub
mov
cmp
xor
and
and
sahf
rorb
mov
sbb
adc
cmp
add
add
push
xor
mov
push
or
or
add
sbb
ja
lds
fwait
mov
adc
sub
jo
int3
mov
pop
mov
adcb
lods
mov
std
inc
inc
xchg
rorb
mov
push
outsl
push
dec
int
mov
jg
cmpsb
insb
iret
adc
cs
xchg
xchg
mov
lods
clc
ret
jno
cmc
addl
std
aas
and
ret
dec
in
fnstcw
inc
js
negb
jmp
loop
aad
xchg
and
sbb
rorb
adc
sar
add
fdivrl
test
and
adc
shll
in
adc
out
sti
jae
push
int
xor
pop
push
dec
mov
std
or
aad
inc
mov
dec
jno
ljmp
cwtl
icebp
testb
jmp
or
out
or
xchg
xor
pop
sbb
cmpl
mov
mov
mov
ficomps
roll
and
data16
push
cwtl
and
in
sbb
fdivrs
mov
sbb
cltd
dec
inc
lds
xor
or
mov
cmp
mov
lea
or
loopne
jle
mov
mov
dec
lcall
mov
out
bound
mov
lcall
andl
cmp
pop
fidivrl
xchg
scas
cwtl
add
push
flds
aam
cli
cld
sub
adc
aam
std
jp
mov
xor
push
cmp
sbb
lahf
cmp
ljmp
xor
shlb
push
and
sub
push
lea
scas
ss
xchg
sarl
xchg
test
test
or
sbb
and
pop
pop
fisubl
cmp
icebp
outsl
xchg
std
cli
ljmp
data16
fdivl
gs
loopne
push
js
clc
mov
subb
pop
shl
push
popa
in
insb
outsl
js
push
mov
fists
aaa
adc
fcomps
dec
xor
mov
push
fnstcw
push
out
sub
add
aas
jl
dec
mov
shl
jge
mov
mov
roll
scas
fldt
pop
out
insb
mov
out
movsb
ret
pop
mov
inc
cwtl
xor
xchg
push
xchg
int
idivb
mov
jno
sbb
out
out
sbb
push
xor
or
cmpsb
jbe,pt
sub
rorb
outsb
cmc
jmp
jl
xor
add
repnz
je
sbb
pop
lods
pusha
sub
xchg
jo
adc
test
ficomps
movsl
popf
fsub
arpl
push
neg
jae
sbb
clc
mov
mov
dec
testl
in
stos
sarb
lret
das
arpl
jle
aam
or
dec
je
mov
jo
out
psllw
jle
bound
cmpl
dec
scas
push
lret
lods
aad
cmp
add
leave
xchg
inc
ss
fucomi
icebp
pop
mov
jmp
xlat
cmp
aam
mov
ja
call
das
dec
sahf
aaa
pop
jl
xacquire
clc
add
mov
cmp
sbb
pusha
dec
sbb
ror
fwait
aam
mov
jmp
mov
insl
imul
xchg
mov
and
adc
sbb
insb
add
dec
fdivrs
clc
test
add
add
pop
loop
cmp
dec
xchg
cmpsl
cmc
cmp
sub
pop
inc
or
loop
inc
out
xchg
push
xorb
in
js
hlt
movsl
rcll
shlb
imul
icebp
insb
lahf
stos
rcrl
push
add
pop
xchg
jmp
push
push
ss
or
jne
mov
scas
mov
data16
jo
test
in
push
cli
mov
lret
pop
pop
jp
mov
mov
fcmovne
pop
outsl
dec
xor
movsb
pusha
outsl
mov
dec
xchg
push
pop
mov
lret
add
outsl
cmovle
or
jg
arpl
pop
pop
icebp
outsl
clc
dec
pop
test
pop
push
bound
pop
adc
cld
mov
jbe
dec
inc
insl
stc
dec
fidivrl
jne
lods
rsm
add
xchg
pop
and
pop
jne
out
and
push
ret
xchg
jns
shrl
add
test
inc
cmp
mov
shlb
inc
cmpsb
loope
clc
aam
cld
dec
lahf
rorl
popf
mov
inc
jbe
mov
dec
xor
sahf
jecxz
in
orb
and
mov
adc
pop
add
push
out
ds
orb
inc
aad
vhaddps
or
hlt
shrb
xor
test
fists
loopne
sub
filds
dec
dec
or
popa
lods
jl
notb
push
push
inc
iret
xor
sub
stos
shl
mov
xchg
pop
xor
adc
push
or
out
or
popf
nop
push
lret
shrl
in
filds
movsl
fs
ljmp
repz
jp
xchg
inc
loop
jne
gs
sbb
ljmp
xchg
mov
sbb
inc
aas
fs
sar
push
pop
mov
shll
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
insb
loopne
jmp
mov
iret
testl
pop
jp
sbb
idiv
adc
mov
inc
or
or
xor
shrl
xor
aaa
shlb
jo
jmp
xlat
xor
int
jl
inc
lea
mov
test
xor
jmp
inc
data16
lret
fs
dec
sar
cltd
es
jge
sub
in
pop
out
in
inc
cli
lret
mov
ss
movsl
arpl
mov
inc
xor
and
outsl
jae
addr16
js
inc
or
mov
pop
dec
add
enter
jbe
cmp
faddl
xchg
and
mov
fldt
or
xchg
test
mov
roll
push
or
sbb
add
mul
fadd
push
push
jmp
hlt
xchg
or
fwait
sbb
daa
pop
jg
imul
inc
jmp
mov
in
cmpsb
pushf
shl
call
or
dec
push
sub
mov
daa
shll
xlat
add
jae
lock
dec
cmp
inc
pop
jns
test
sbb
cwtl
add
push
push
out
push
xchg
jo
rcll
int3
mov
loopne
movsb
je
xor
add
enter
push
int
ret
mov
xchg
aam
and
rcrb
xchg
shlb
cs
push
andl
xchg
test
test
mov
pop
fnstcw
cmpsb
or
mov
push
dec
adc
shrl
inc
inc
fsubr
jge
ret
je
loope
xchg
xchg
sarb
pop
push
out
int
or
jg
cmpb
sbb
sahf
xor
movsb
das
in
clc
sbb
mov
mov
mov
push
xchg
negl
mov
shl
arpl
gs
xchg
std
cwtl
and
xor
sti
or
push
push
pop
jb
mov
aad
add
lds
outsb
xor
mov
cmp
sub
jl
lahf
jmp
sbb
jno
into
scas
add
mov
pop
xchg
pusha
ljmp
subb
push
and
adc
mov
mov
xchg
stos
xchg
mov
dec
and
add
decb
xchg
in
mov
and
inc
sub
jecxz
icebp
ds
xchg
xchg
fdivr
mov
repz
dec
addr16
ret
push
enter
dec
fnstcw
pushf
sub
push
stos
fstps
cmpsb
push
aad
insl
pop
push
sbb
lret
xchg
dec
lret
xchg
sub
cmp
sub
hlt
fsubrl
dec
out
or
push
push
jns
lea
adc
sbb
pop
or
xor
adc
add
dec
pop
call
mov
outsb
js
out
add
js
ja
adc
xchg
and
sti
inc
dec
mov
fidivrl
dec
sub
ds
sub
lea
mov
int3
scas
lods
and
or
pop
in
cmpsb
not
stc
leave
push
aaa
or
sbb
dec
cmp
lret
adc
push
es
dec
inc
outsl
leave
call
jae
pop
lods
xor
pop
lock
pop
inc
mov
jg
xchg
aad
mov
push
pop
and
cmp
cmp
insb
jge
jle
in
fdiv
addr16
pop
mov
push
adc
push
std
sbb
push
mov
jle
ljmp
out
xchg
pop
push
inc
enter
pop
test
hlt
adc
or
pop
int
jl
xchg
outsb
jb
xchg
and
or
lods
popf
loop
push
mov
cltd
sub
ds
mov
or
push
pop
into
dec
mov
mov
sub
lret
jg
xchg
scas
pushf
popa
ss
jae
mov
xchg
add
into
cmpsl
cli
inc
jmp
lods
mov
xor
and
inc
rol
and
pusha
adc
inc
bound
mov
shrb
shlb
sbb
cltd
pop
mov
cmpsl
cmpsl
adcb
sarl
push
xchg
sbb
cmp
inc
fldl
sbb
mov
inc
push
push
xor
data16
jp
pop
adc
cmp
dec
push
movsl
addl
mov
cmp
xor
inc
jns
mov
bound
push
mov
inc
test
fsubs
mov
stos
cli
pop
lea
lret
call
int3
in
adc
mov
inc
mov
mov
wrmsr
in
cltd
add
test
nop
es
push
jo
insl
addr16
pusha
dec
mov
das
cmp
add
clc
scas
sub
movsb
mov
adc
hlt
and
mov
and
pop
orl
xlat
cwtl
sbb
aas
nop
add
imul
jno
xchg
leave
add
or
das
sub
inc
and
imulb
pushf
jbe
push
push
repnz
dec
add
pusha
push
int
sub
sahf
fs
sub
sub
sar
or
push
inc
mov
adc
pop
mov
or
popf
inc
dec
fmul
je
inc
and
imul
lds
jne
rcrl
lahf
dec
pop
jnp
ss
dec
jg
cmpsl
push
out
push
dec
outsb
mov
sub
shlb
lock
mov
lret
and
cmp
inc
out
ss
jle
mov
scas
pop
or
mov
jg
out
cld
aam
repnz
or
push
pop
jecxz
mov
cld
jle
xchg
ret
push
add
std
dec
aas
sbb
cmpsl
in
ret
int
mov
adc
cmp
jl
ss
loopne
or
ret
in
inc
daa
test
pop
jbe
pop
es
ret
nop
push
add
push
cmpsl
cli
mov
mov
outsb
pop
push
pop
cmpsb
mov
jp
cwtl
and
mov
iret
sahf
das
inc
pop
and
mov
push
push
and
ljmp
sbb
outsb
jmp
pushf
xchg
fidivrl
mov
aaa
dec
lret
cwtl
ret
rol
fadd
in
repz
mov
or
adc
xor
adc
sbb
jb
cwtl
ljmp
and
pop
add
sarb
dec
adc
mov
addr16
xor
cmp
test
push
aaa
ljmp
cmpsl
outsl
cmp
xor
cltd
aas
jp
jge
lahf
dec
aad
int
and
xchg
int3
mov
add
cmpsb
mov
icebp
inc
and
inc
aad
mov
pushf
cmp
addr16
sbb
ss
mov
xchg
sbb
jg
pop
mov
lods
sarb
scas
push
inc
out
push
dec
xchg
sti
xlat
xlat
push
xor
enter
push
addl
mov
inc
sbb
add
sahf
sbb
icebp
mov
mov
sbb
add
jecxz
cmpsl
jecxz
push
sub
and
push
xor
stos
inc
or
mov
mov
pushl
lcall
out
pop
or
std
xor
mov
popa
out
jnp
or
test
mov
mov
fwait
add
mov
mov
dec
xchg
dec
push
jno
fldenv
test
std
iret
insl
in
out
movsb
ljmp
dec
jno
adc
lods
add
mov
jno
xor
shlb
test
add
in
ljmp
or
jl
divl
mov
push
and
stos
addr16
cli
dec
dec
mov
xchg
pop
cmp
jb
cmp
call
mov
push
sbb
ljmp
pop
mov
call
loop
adc
xor
cmp
ret
outsl
mov
outsb
adc
xor
in
lret
push
ss
add
mov
dec
mov
daa
frstor
inc
dec
dec
jns
into
test
pop
popa
sbb
cmp
rcrb
adc
adc
fisubl
mov
push
inc
mov
sahf
push
mov
and
arpl
cmpsl
stc
aam
pop
mov
push
addr16
fldl
xchg
stos
pop
mov
inc
pop
scas
and
stos
inc
fbld
scas
rcrl
push
je
pusha
xchg
aaa
mov
mov
inc
pop
xor
ja
lea
push
ds
xchg
or
jns
or
int3
enter
cmp
aas
popa
push
mov
ds
pop
push
jge
shlb
jecxz
pop
jg
fisubrs
and
push
pop
cmpsb
bound
add
push
enter
mov
aaa
sahf
repnz
enter
xor
cmp
push
cmp
sbb
hlt
int3
outsl
into
jbe
movntq
arpl
gs
mov
ret
je
push
nop
stos
mov
push
inc
push
inc
scas
sar
sbb
inc
xor
push
push
cmp
xchg
popf
mov
rorb
ljmp
jo
fwait
push
into
cltd
mov
mov
in
jno
in
das
outsl
mov
rorb
imul
or
lods
jns
leave
fwait
lret
lret
popf
push
sbb
or
popa
shlb
jne
fst
mov
repz
pushf
mov
and
mov
mov
mov
testl
add
lahf
mov
pushf
dec
bound
adc
cmpsl
add
std
dec
adc
pop
dec
xchg
int
cmp
inc
adc
sarb
xlat
notb
mov
or
sbb
jns
rcl
and
jmp
loop
into
fstp
xchg
sti
lock
cmpsl
jg
lds
mov
aam
pop
pop
outsl
xor
pushf
lock
ss
push
les
adc
cmp
movsb
mov
fdivr
out
test
jne
dec
divl
xorb
or
or
push
pop
mov
lods
mov
push
and
lods
enter
fnsave
pop
or
test
js
cli
cs
aad
leave
shrb
aam
sbb
inc
inc
movsb
bound
push
and
aas
push
cmp
add
pop
add
sbb
xchg
fistpll
jo
sete
xchg
mov
call
ret
scas
cltd
int3
pop
out
stos
js
fnsave
testb
jp
imul
pop
and
icebp
adc
pop
into
xchg
cmp
jb
scas
dec
ljmp
pop
aas
adc
add
nop
inc
xchg
arpl
hlt
push
inc
xor
sar
jns
pop
rclb
lock
shl
sub
jl
sub
push
and
pop
sahf
rcl
dec
aaa
mov
fdivrl
xor
add
pop
add
cmpsl
xchg
add
xchg
repnz
out
leave
inc
dec
jle
loope
mov
push
jge
arpl
sbb
mov
xorl
sub
bound
rcll
loopne
outsl
xor
pop
sub
fs
repnz
cli
adc
mull
pop
jge
dec
ss
sbbb
ds
adc
pop
mov
stos
imul
xor
iret
sbb
movsl
pop
shl
test
mov
sub
or
or
iret
dec
in
xchg
cmp
shlb
cs
mov
cld
cmp
insl
pop
clc
xor
loop
inc
pop
test
mov
sub
rcrb
in
push
sbb
adc
xchg
push
js
mov
pop
int
loop
sbb
mov
popa
adcl
psubsb
xor
test
and
pcmpeqb
and
adc
cmp
jne
in
repz
pusha
outsb
cs
jp
lods
or
sub
movsb
cwtl
les
enter
shl
out
sub
add
shl
pushf
je
inc
cmpsl
pop
les
or
jmp
add
cmp
leave
mov
jno
xchg
pop
jle
push
xchg
clc
jae
mov
fsts
jns
jle
scas
or
jb
xlat
int3
add
add
fs
std
insl
aas
jmp
adc
cmp
insb
jae
xor
js
push
adc
test
ja
shll
stc
add
adc
push
mov
in
les
push
je
fisubs
enter
negl
test
jns
cld
and
imul
enter
xor
dec
xor
rcrl
sarl
adc
pop
push
shll
rorl
out
add
jbe
jnp
aam
scas
clc
add
mov
ja
in
jp
mov
xchg
add
sub
icebp
dec
push
push
test
adc
jg
xchg
mov
dec
lahf
mov
mov
out
bswap
test
or
mov
inc
into
adc
icebp
insl
rcl
and
mov
inc
adc
fwait
pop
mov
rorb
fwait
xchg
fwait
adc
add
add
sbb
lods
mov
cld
mov
out
roll
xchg
and
daa
add
push
cmp
jl
popa
push
dec
xchg
dec
int3
bnd
in
stos
fstpt
rorl
and
dec
cmpsl
rolb
loope
add
push
scas
add
push
jmp
enter
ss
mov
and
xchg
jl
test
fistpll
jbe
jnp
insl
mov
imul
mov
leave
subb
test
repz
and
loopne
out
mov
bound
jecxz
repz
scas
push
add
sti
sub
xchg
mov
xor
xor
sarb
ja
stos
repz
cmp
or
outsb
cmpsl
jns
movsb
jp
xchg
outsl
push
jnp
insb
std
mov
andb
mov
cmp
sbb
test
imul
push
stos
push
mov
cmp
loopne
inc
andl
or
lds
idivb
and
ds
dec
pop
adc
dec
sub
test
loope
mov
rorl
lods
mov
fbld
mov
pop
mov
jge
frstor
xchg
lret
or
lret
scas
push
sbb
cmpsl
jp
icebp
cmpsl
mov
enter
sub
aaa
lock
mov
mov
mov
test
or
pop
inc
cmp
movsb
mov
shlb
sbb
call
scas
jge
xlat
sub
cli
lret
xlat
inc
mov
jmp
jmp
test
pop
adc
ljmp
daa
addr16
movsl
inc
shl
mov
popf
or
dec
cmp
dec
out
xchg
mov
fs
cld
adc
and
xorb
imul
jp
roll
in
fwait
adc
xor
jb
aam
outsl
mov
push
addr16
or
mov
shrb
data16
inc
cld
shl
xor
mov
enter
int
aad
mov
xor
sbb
push
ret
stos
inc
xchg
cmp
xor
or
lahf
iret
out
fsubrl
sbb
shrl
js
std
call
adc
pusha
or
pop
push
cmpsb
mov
ja
xor
xchg
xor
jle
scas
ljmp
push
push
subb
fstpt
xchg
lret
rolb
out
push
lock
sahf
test
xchg
nop
divl
mov
out
shll
jmp
add
clc
std
jbe
insb
lret
push
jae
jns
xchg
movsb
andb
shrl
outsl
adc
inc
or
je
pop
cwtl
adc
imul
icebp
xor
mov
xchg
and
lahf
lret
fisttps
cli
lret
or
in
lods
cmpsb
aam
and
lock
std
mov
in
loopne
out
push
mov
test
repz
imul
aaa
push
mov
dec
imul
dec
mov
dec
sbb
mov
xchg
inc
daa
jno
cmpsb
int
stos
mov
ret
in
mov
push
shl
sub
bound
mov
arpl
jl
std
mov
cld
cld
aad
and
js
inc
scas
sahf
sbb
lods
dec
and
hlt
faddl
pop
mov
pop
mov
ror
mov
dec
xchg
cwtl
fadd
jmp
into
ja
addr16
mov
js
xor
inc
jne
push
push
adc
xor
xchg
in
js
lcall
pusha
or
cmp
les
adc
test
imul
imul
mov
add
inc
repz
dec
nop
in
xchg
mov
fs
cli
sbb
mov
cmpsb
inc
rclb
mov
or
ljmp
outsb
adc
cli
jl
sbb
cltd
fsubl
fwait
les
add
das
ret
movsl
xchg
clc
in
call
and
mov
pop
repz
mov
mov
rcrb
jb
add
jno
dec
loopne
xchg
cmpsb
sbb
inc
lods
adc
lahf
movsb
clc
rcrb
andb
addr16
fsts
sahf
push
pop
loope
pop
cmovge
add
jo
lret
or
mov
and
js
and
lahf
loopne
inc
mov
fimull
nop
inc
sarb
add
push
sahf
lods
int3
mov
inc
mov
lock
sub
xlat
das
cmp
ljmp
sbb
aad
sub
rcll
inc
sbb
dec
sbb
das
sbb
jg
enter
mull
mov
push
pop
ss
and
sbb
inc
add
test
loop
xor
fisubs
mov
in
xchg
mov
and
stos
out
jl
pop
inc
xchg
fildl
jae
cmc
test
fwait
add
pushf
in
mov
pop
or
lret
inc
cwtl
testb
or
xchg
rcll
pop
stos
sbb
pop
push
aaa
in
and
int
mov
sub
insl
jmp
lds
jp
lds
push
and
mov
inc
pusha
sarl
sub
mov
mov
aad
cs
jae
fsubs
add
fwait
dec
sar
mov
push
pop
incl
cmp
outsl
popa
nop
push
adc
xor
and
jae
fnstsw
insl
notl
pop
repz
jecxz
sbb
jmp
lcall
xchg
repz
addr16
jbe
mov
cmpsb
sbb
sbb
jge
xchg
inc
pop
mov
imul
movsb
les
nop
pusha
orl
sbb
xor
sti
mov
push
aas
jmp
pop
inc
and
xor
sub
sub
mov
xchg
out
sub
sub
push
scas
jo
mov
mov
popa
inc
aas
lds
into
xchg
data16
fwait
and
mov
pop
pavgb
cmp
movsb
pushf
mov
sti
adc
ret
mov
dec
mov
aaa
lret
dec
ret
jno
add
push
hlt
push
or
in
pop
mov
cmp
fs
je,pn
repz
jae
incb
rcll
push
dec
xchg
lcall
ds
xchg
jp
push
mov
push
pop
mov
xchg
push
xchg
cmpsb
push
rorb
mov
push
pop
jp
shl
add
ds
xchg
ret
add
pusha
or
jg
jge
pop
pop
das
add
lea
xchg
pop
cmpl
cmc
adc
mov
mov
fsubrs
rol
cmc
mov
xchg
andl
or
push
push
cli
jecxz
lret
cs
insb
test
jb
lods
jo
stos
lahf
pop
mov
inc
mov
pop
xor
and
gs
mov
jle
pop
adc
sti
mov
xor
ret
jo
std
cli
push
mov
and
xchg
cmp
fidivrl
cs
xor
fldl
dec
fisubs
jge
dec
push
xor
in
add
mov
mov
hlt
sar
in
sub
sbb
push
mov
out
leave
das
movsb
dec
ss
adc
js
xchg
mov
adc
mov
fsub
dec
in
in
mov
ja
or
les
sbb
jmp
icebp
and
sub
dec
or
dec
cli
mov
mov
cmpb
fwait
in
jno
mov
clc
xor
ss
sub
jbe
out
int3
lret
arpl
fcoml
pop
lahf
int
mov
inc
cltd
stos
lea
out
dec
in
jnp
and
fwait
ret
adc
xchg
cmp
inc
lods
jne
jg
out
xor
xor
cmp
loopne
push
mov
mov
jg
test
sbb
jae
cmpsl
rcll
push
fistpl
push
and
dec
inc
roll
icebp
push
push
lods
dec
jne
test
test
nop
xor
cmc
dec
and
int3
fistps
cmp
fmull
fimull
je
sti
scas
pop
sub
imul
sahf
popf
or
int
xlat
adc
push
int
sub
pushf
dec
std
jmp
dec
sbb
push
scas
outsl
push
outsb
and
sbb
outsl
into
jo
dec
pop
or
test
xorb
dec
jmp
fmull
inc
jle
adc
aas
and
adc
mov
incl
movaps
icebp
int3
cli
xchg
add
into
xlat
sub
movsb
pusha
push
jae
adc
orb
data16
pop
sti
jmp
push
add
mov
aaa
jo
xchg
or
sub
sub
icebp
out
sbb
cmc
daa
lret
imul
or
fincstp
shl
rcr
es
inc
jmp
and
dec
jmp
ret
dec
ljmp
xlat
push
sub
adc
xchg
xor
mov
xor
in
pushf
enter
pushf
jnp
jmp
stos
mov
jecxz
sbb
lcall
and
repz
or
and
pushf
inc
mov
movsb
lret
jne
adc
hlt
jecxz
xorl
jae
sub
xchg
cmp
in
jne
stc
pop
arpl
inc
cmp
mov
mov
sbb
les
insb
repnz
sbb
fstps
cmp
sub
nop
aaa
mov
fidivrl
adc
xchg
jmp
roll
mov
in
in
js
pop
pop
inc
lret
mov
adc
cmp
mov
fadd
lods
push
lods
cmp
dec
ds
mov
inc
adc
pop
shll
jnp
add
sub
ss
push
inc
stc
stos
mov
js
aam
insl
jl
mov
push
push
stc
in
call
xor
dec
andb
dec
sbb
repnz
leave
test
cltd
xchg
fstl
sbb
dec
mov
movsb
arpl
push
mov
jmp
cwtl
loop
inc
mov
outsl
insb
jl
xchg
and
imul
stos
in
mov
or
push
mov
push
pop
aas
enter
scas
xor
cld
cmp
aaa
sub
fidivs
xchg
divl
and
sbb
mov
dec
outsb
pop
ror
mov
movsb
sub
lret
enter
and
loop
pop
out
arpl
int
pop
stc
int3
gs
mov
xchg
scas
sub
xorl
sahf
dec
adc
repnz
xchg
lods
enter
popa
lea
xchg
lds
adc
fadds
mov
mov
shll
jmp
popf
mov
inc
out
int3
popf
aad
outsb
add
mov
xchg
ret
pop
lock
inc
mov
dec
pop
sbb
sbb
mov
outsb
jecxz
loope
xor
lods
mov
dec
imul
nop
cli
insb
cmp
xchg
jae
push
xchg
pop
inc
movsl
mov
mov
lcall
outsb
test
aaa
or
aas
dec
out
adc
movsl
xchg
add
cld
mov
add
testl
loope
mov
popa
xchg
xchg
out
iret
outsl
lret
pop
sarl
dec
mov
rorl
jae
ds
cli
xchg
or
sub
mov
jmp
mov
jae
push
movsl
aad
xlat
in
lods
out
mov
popf
xchg
out
int3
cmp
mov
outsl
jg
bound
jl
rcr
test
gs
lret
dec
es
mov
je
xor
shl
clc
or
dec
mov
mov
fisubrs
mov
mov
das
shrl
cmp
movsl
xor
arpl
pop
add
fdivl
imull
mov
in
pop
mov
pop
mov
lcall
jle
aam
sub
sti
xorb
stos
push
cmpb
inc
jno
add
add
jnp
mov
ficoms
imul
dec
sar
outsb
jg
push
jns
in
cmp
push
xchg
sub
test
pop
add
push
mov
stc
adc
les
push
dec
inc
xor
mov
jge
inc
jne
jne
test
mov
inc
mov
int3
mov
stos
mov
in
xlat
leave
fisttps
adc
movsb
and
es
ds
test
lods
jp
push
ret
or
jle
mov
lods
jl
stc
jno
jp
ret
inc
daa
leave
enter
cmp
xor
jle
loopne
xor
out
scas
xor
push
jp
insb
lods
andl
or
and
adc
shll
or
cmp
pmovmskb
nop
in
stos
mov
into
fistpll
daa
hlt
mov
loope
or
out
andl
inc
pop
cmp
pop
jns
xor
ficoms
out
cmp
xchg
pop
sbb
test
div
aad
dec
cli
enter
xchg
aam
jae
std
mov
repnz
add
cmp
out
pop
hlt
mov
pop
je
int3
pop
push
pop
call
pop
and
lret
mov
daa
lcall
add
cmpsl
das
pop
xchg
dec
xor
stos
sub
inc
test
mov
sbb
das
js
xlat
ret
inc
pavgw
int3
cmp
xor
in
mov
push
in
ds
pop
mov
jge
pop
aaa
and
insb
stos
lods
or
cmp
aad
jmp
mov
inc
negb
cli
dec
mov
fsubl
out
adc
mov
fidivrl
dec
fmul
pop
xor
sub
pop
inc
pop
mov
xchg
jne
shrb
stc
ss
shlb
std
cmp
lret
outsb
lret
adc
cld
mov
leave
add
pop
jo
push
loope
adc
mov
daa
inc
lcall
mov
adc
insl
lods
xchg
mov
das
push
inc
movsb
cld
je
pop
shrb
or
imul
ja
sbb
sub
insl
fildll
fldlg2
ret
or
cmp
adc
arpl
lock
or
jae
mov
pop
xchg
out
jbe
out
stos
xchg
cli
clc
jp
inc
push
or
mov
stos
pop
sahf
xor
xlat
in
pop
push
shlb
xchg
push
scas
into
aaa
sahf
push
pop
insb
test
pop
pop
mov
mov
cmp
stos
out
adc
rorb
rclb
xchg
sti
and
jl
shlb
popf
pop
outsl
out
xor
push
mov
popa
in
insb
pop
movsl
inc
mov
in
pop
shll
xor
mov
xor
out
or
int
pop
fwait
pop
leave
ret
rcr
jo
out
std
ret
inc
aam
mov
shl
jo
fcom
aas
sub
aaa
sbb
repz
movsb
add
dec
xchg
decl
add
shll
dec
lcall
ret
xor
cld
inc
mull
sti
dec
lret
clc
je
arpl
cld
popf
cld
or
scas
daa
and
sub
pop
test
dec
fcoms
sub
sub
xchg
fsubrs
inc
or
dec
sbb
mov
arpl
ret
or
femms
xchg
sarb
into
cmpl
mov
mov
sbb
iret
cmp
movsl
int
je,pt
out
sub
mov
aas
aam
dec
imul
iret
add
sti
cmp
xchg
dec
mov
lahf
mov
frstor
data16
sbb
xorb
xchg
add
cmp
mov
ds
je
imul
jmp
sbb
insb
stc
cltd
lret
mov
xor
lods
mov
insl
jb
cmp
shll
iret
mov
cmpsl
inc
mov
test
jl
je
jmp
mov
mov
inc
add
push
sub
xor
mov
mov
sbb
mov
addr16
mov
sub
pop
xchg
sub
cld
mov
or
add
testb
popf
orb
sahf
cs
and
inc
ljmp
int
mulb
and
loop
mov
add
enter
cmp
lds
int3
xor
xchg
sub
jg
cmovg
test
shlb
mov
lret
pop
out
dec
xchg
sub
or
sahf
out
popf
ss
and
popa
aam
aaa
into
xor
fstpl
or
push
push
test
pop
lods
fcomps
hlt
das
js
xchg
mov
outsb
aam
iret
xor
mov
sbb
sbb
insb
push
sbb
cmp
ja
adc
mov
pop
rep
pop
mov
mov
pop
xchg
cli
mov
push
lret
in
and
pushf
stc
cmp
sbb
out
add
pandn
cmp
mov
cmpsl
inc
pop
out
lret
jno
push
and
mov
push
xchg
cmp
mov
push
mov
pushl
and
repnz
stos
leave
into
sti
cmp
rcrb
imul
mov
dec
popl
stos
push
mov
inc
jecxz
hlt
dec
fisttpll
arpl
das
mov
sahf
fcoml
pusha
cmovge
lds
imul
or
push
sbb
mov
mov
call
push
jb
stos
lock
push
fistpll
in
fidivrs
repz
xchg
out
ss
shrl
add
mov
out
dec
cmp
pop
adc
js
adc
pop
data16
int3
and
movsl
into
out
pushf
push
call
push
rcrb
mov
mov
fiadds
fucom
xor
mov
mov
or
or
inc
cmpb
adc
sbb
insl
iret
pop
in
cmc
bound
cmp
sahf
dec
adc
pop
lret
fidivl
add
mov
mov
imul
adc
sbb
test
dec
add
mov
cli
and
inc
aas
or
out
fcoms
and
push
add
add
stc
xchg
inc
xchg
ljmp
inc
mov
fmull
lock
arpl
mov
xchg
icebp
sub
jge
fsub
ds
jle
or
je
shlb
mov
pop
sub
sbb
fdivrs
shlb
and
ret
xor
pop
xchg
mov
mov
cltd
mov
jnp
das
ret
hlt
js
pop
mov
adc
mov
ret
sbb
andl
test
nop
lds
popf
or
inc
jmp
adc
fimull
ljmp
cmp
imul
bound
sbb
cmpsl
shll
sbb
adc
xchg
outsl
cmpl
add
mov
sahf
enter
insl
in
xorb
popa
or
xor
jle
xchg
cmp
in
add
dec
jmp
cs
call
arpl
rcrb
add
or
jmp
cmc
stos
add
in
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
jmp
enter
sarb
add
sbbl
mov
jge
pop
jp
jmp
aas
or
sub
je
stc
ret
jbe
rcrb
pop
ja
mov
jbe
rcrb
iret
popf
inc
inc
aas
adc
inc
roll
pop
xchg
mov
pushf
jnp
in
pop
dec
push
sbb
cmp
xor
jo
mov
scas
or
cvtpi2ps
add
inc
and
cmp
aaa
cmp
xor
loopne
inc
add
adcb
movsl
xor
dec
out
dec
std
mov
push
cmp
xchg
inc
sarl
ror
pop
out
stos
cli
pop
movsb
or
jae
jecxz
or
adc
fistpl
es
xchg
dec
and
mov
mov
fwait
jae
sub
pop
xor
xchg
mov
mov
ds
push
sub
fs
pusha
dec
pushf
sbb
loop
jae
je
arpl
lcall
scas
mov
pop
push
mov
push
nop
in
fbld
or
xchg
sbb
jmp
stos
xor
movsb
push
pop
push
push
cli
aaa
popa
mov
lret
sbb
add
push
jns
pushf
mov
mov
int3
pushf
adc
sarb
data16
push
mov
fstpt
sbb
scas
in
daa
fimull
mov
push
xchg
sahf
sbb
push
or
popa
cltd
or
mov
push
insb
mov
push
add
and
adc
inc
push
mov
enter
dec
cmp
xor
and
and
sbb
enter
jmp
jmp
xchg
stos
mov
cmpb
in
orl
lret
sub
stc
fmull
add
lret
aas
lock
leave
push
mov
fsubr
leave
loopne
adc
in
icebp
mov
mov
shll
lock
and
add
add
out
adc
pcmpeqw
push
cmp
sub
sarb
test
sub
xchg
pop
pop
mov
loopne
in
mov
test
pop
lods
add
inc
das
xor
push
mov
sbb
mov
cmc
loop
xchg
dec
cmp
fmul
push
pop
sub
pop
push
dec
mov
jbe
pop
and
fs
jmp
dec
sbb
imul
int
rorb
jle
push
mov
jnp
jo
out
dec
test
aas
inc
xchg
rclb
js
gs
jb
sub
pop
push
and
pop
fidivs
add
sahf
pop
mov
mov
cmp
push
nop
or
inc
mov
xchg
adc
lods
jae
mov
aam
addr16
pop
lar
push
push
adc
mov
jbe
lea
cmp
and
aam
lret
add
and
cwtl
jmp
dec
cs
xor
dec
cmp
inc
and
stc
stc
and
add
jne
cmpsb
in
aaa
push
adc
sub
push
js
mov
jp
jne
xchg
movsb
xchg
mov
pop
lret
sarb
pop
jl
test
adc
fadd
and
test
in
sarb
mov
outsl
je
js
dec
popf
push
or
adcl
sub
jmp
jl
mov
sub
push
popf
gs
mov
add
lds
dec
in
pop
fst
xchg
in
xlat
xchg
mov
lahf
inc
inc
jp
add
scas
inc
push
xchg
jne
outsl
pop
inc
pop
sub
sub
xchg
or
sub
cmc
sub
repz
sbb
mov
dec
adc
int
pusha
push
notb
je
jne
sbb
dec
mov
ss
xchg
push
repz
add
ss
movsb
jp
mov
adc
adc
add
fcompl
xchg
cmp
xchg
mov
inc
push
mov
cwtl
or
out
cld
gs
jecxz
xor
jnp
inc
dec
pop
cmp
push
jmp
lods
mov
jecxz
cmp
aas
outsb
mov
movsl
jb
pop
movsl
jne
lahf
mov
in
sarb
xchg
sbb
dec
ljmp
cmp
xor
cmpl
pop
repz
fdivp
aam
lret
test
imul
xor
addb
sub
into
xor
fsubl
dec
sub
push
xlat
jp
jae
mov
push
daa
mov
lds
dec
adcb
ss
push
fstps
fists
or
idivb
mov
aad
sbb
xchg
into
dec
arpl
sti
mov
add
dec
mov
adc
test
jp
outsl
pushf
add
adc
xor
pop
movsb
jbe
push
mov
cmpsb
mov
push
cmc
sub
adc
ss
dec
aad
xor
mov
jmp
cmc
push
cwtl
int3
pop
mov
push
jb
xchg
fisubl
and
adc
mov
enter
imul
stos
sub
sub
test
loop
cltd
cmp
dec
es
aas
stos
mov
ja
dec
xor
push
out
and
jne
cmpsb
dec
sub
cmp
cmp
mov
and
push
mov
push
test
rcl
mov
cmp
fdivl
cmpsl
and
insl
sbb
stos
pop
inc
add
pop
push
jbe
rclb
loopne
xchg
ret
scas
mov
add
cmp
sahf
outsl
call
adc
xor
fsubs
int
nop
andl
add
jmp
aam
iret
add
sbb
fisubrl
jp
inc
and
or
cwtl
add
pop
mov
mov
mov
pop
xor
adc
xor
aaa
or
stos
sarb
pop
lcall
inc
sbb
and
notb
outsl
test
sahf
cmp
lods
cwtl
cmp
cwtl
call
pop
cwtl
mov
push
cmp
ljmp
lahf
loop
or
sti
or
aad
and
xlat
jmp
movsl
shrb
test
test
push
test
fcoms
mov
divb
fstp
lahf
mov
std
arpl
jp
dec
mov
call
imul
ss
mov
insb
inc
decl
add
mov
lcall
pop
pop
repnz
and
bound
push
sub
int3
or
lds
lds
bnd
mov
in
jae
dec
mov
cs
in
arpl
lock
xor
xor
sbb
mov
jmp
aaa
scas
rep
jb
push
pushf
xchg
sub
stc
push
or
lcall
dec
sbbb
insb
enter
faddp
adc
adc
aas
sbb
cmp
pop
enter
int3
repnz
push
repz
repz
push
ret
arpl
mov
push
push
mov
out
mov
clc
mull
inc
shll
mov
adc
cli
mov
add
xchg
xor
int3
add
push
jp
jno
testb
sub
in
mov
testl
fs
popf
clc
xor
inc
mov
jg
out
pop
sarl
pop
or
fadd
ljmp
jecxz
in
sub
sub
loope
std
inc
cmp
call
imul
jno
ljmp
jo
stos
insb
sub
cmp
daa
fistpll
negb
jae
jne
dec
aad
out
jbe
fistpl
pushf
xchg
ds
ja
stos
in
inc
add
lcall
cmp
test
xor
pusha
rorb
jmp
cltd
clc
int3
inc
xchg
push
mov
pop
sub
ret
pop
adc
and
mov
pop
inc
adc
inc
mov
push
dec
mov
loopne
ret
jmp
lcall
mov
nop
or
nop
add
repnz
movsl
gs
into
cmp
dec
jae
push
cmpsb
data16
shl
xor
push
xchg
xor
outsb
leave
cmp
pop
aad
in
cmp
push
xchg
lods
popf
fwait
adc
adc
inc
hlt
fnstcw
cmp
mov
xor
push
ret
mov
cmp
cmpsl
mov
flds
pop
jle
fsubl
push
loope
outsb
imul
fwait
call
rcl
jecxz
mov
out
insb
imul
es
repz
inc
mov
cmp
dec
pop
es
inc
fidivs
adc
push
sbb
inc
push
fwait
repnz
adc
lods
jp
push
cmp
movsb
in
add
sbbl
outsb
jecxz
add
or
xchg
add
cmp
test
dec
jmp
cltd
int
out
push
int
push
mov
out
or
adc
insl
inc
or
cs
and
sub
dec
mov
out
mov
flds
inc
sbb
xor
cltd
jne
mov
xor
and
fnstsw
idiv
sub
enter
dec
clc
clc
lods
ljmp
add
out
push
inc
mov
and
shrb
in
daa
jne
stos
out
jno
xlat
aaa
daa
iret
jbe
imul
ja
hlt
add
bound
aaa
dec
iret
pop
pop
sub
fldcw
sub
sarl
adc
or
les
pop
iret
pop
cmovno
mov
mov
xor
adc
ljmp
or
lret
xchg
sti
mov
outsl
aaa
pop
cld
mov
std
lock
stc
cmp
repz
sbb
sti
loope
cwtl
cs
and
bound
js
sub
inc
mov
add
repz
mov
packsswb
adcl
lea
dec
xchg
jmp
test
or
mov
pop
add
fwait
sub
xchg
cmpsl
jbe
fmull
mul
sbb
xor
dec
mov
sub
add
stc
push
mov
fcompl
jmp
ret
std
jbe
cltd
jecxz
loop
dec
jns
cli
xchg
push
das
cmpsb
pop
add
dec
int
mov
jno
push
xchg
popf
ffreep
sbb
aad
and
xor
cltd
jae
roll
fcomps
repnz
push
lcall
test
xchg
ljmp
dec
sub
shl
or
out
or
xchg
movsb
adcl
pop
and
sbb
stos
outsb
repnz
shl
xchg
cmpsb
push
jo
cmpsb
scas
and
popf
push
enter
xchg
jecxz
outsl
test
and
call
dec
pusha
mov
or
notb
shlb
ret
out
xor
xchg
insb
and
inc
pop
push
cmpsl
pop
inc
das
mov
fmul
pop
xor
add
mov
jle
mov
and
xor
roll
pop
sub
sahf
and
adc
aam
mov
clc
mov
ljmp
push
out
dec
aad
push
and
in
ret
test
push
fxch
xchg
mov
push
push
aad
shlb
xor
out
pusha
je
iret
sub
fmul
xor
pop
aad
mov
shlb
test
or
lods
stos
mov
jbe
fsubs
pop
xor
and
mov
movsb
xchg
adc
shll
mov
dec
xchg
data16
dec
cmp
aaa
push
jbe
sub
or
ret
call
and
cs
mov
xchg
lcall
divb
xchg
adc
shll
lods
inc
sub
or
addl
mov
add
inc
dec
je
pop
pop
rcrb
and
ffreep
xor
imulb
les
mov
insb
inc
lea
sbbl
sub
jecxz
mov
lret
ret
pop
cmp
mov
ljmp
push
pop
fcoml
aas
jnp
into
and
popa
push
insb
jl
push
ljmp
das
inc
subb
mov
lahf
fstpl
cmpsb
pop
movsl
jae
sbb
call
jp
cmc
inc
leave
inc
mov
call
inc
pop
mov
xchg
daa
ret
xor
sbb
push
add
push
dec
test
outsl
adcl
insl
ja
xchg
mov
aad
insb
and
ljmp
imull
sub
pop
inc
jecxz
notl
cli
cmp
ret
push
jp
sbb
add
test
sbb
push
stc
mov
std
pop
mov
jle
cli
les
sbb
inc
inc
negb
add
push
mov
cmp
ret
bound
js
sbb
xchg
adc
rcrb
insl
das
into
nop
lret
dec
pusha
mov
jns
pushf
sbb
jo
lds
mov
pop
aas
or
jae
mov
dec
sub
ja
fimull
xor
loopne
dec
pop
test
jge
mov
aaa
pop
pop
pop
jle
pop
sub
xchg
es
dec
pop
adc
fcomps
imul
out
mov
into
js
push
mov
jo
or
movsl
mov
adc
dec
rclb
mov
inc
dec
cwtl
dec
or
push
jecxz
jle
in
div
adc
dec
imul
test
sbb
push
mov
popf
loopne
nop
jns
lds
rcpps
or
push
and
mov
push
loopne
shrl
test
jne
stos
leave
sbb
inc
dec
and
add
mov
fnstsw
idivl
fcmove
mov
lea
add
adc
mov
adc
movsl
fisttps
xor
add
sar
mov
push
cmp
pop
int
mov
xchg
out
cmp
jle
jecxz
add
enter
std
jb
test
test
out
or
mov
xchg
lods
sub
mov
push
addl
fnstcw
scas
mov
dec
cmpsb
and
scas
pop
cmp
dec
add
sub
int3
mov
sbb
test
fstpl
lret
bound
sbb
xchg
out
aad
cmp
hlt
push
fs
lea
mov
pusha
or
xor
fldl
das
dec
nop
fmull
dec
pop
add
mov
add
add
adc
inc
je
jbe
cld
xor
dec
call
repnz
sbb
ljmp
lea
es
mov
shr
dec
shlb
out
iret
and
rdpmc
and
mov
xchg
pop
test
push
aam
sbb
xchg
adc
dec
jge
std
aad
leave
dec
mov
mov
adc
insb
call
add
adc
popf
push
lods
fidivs
and
pop
imul
hlt
adcl
rclb
inc
pop
int
sbb
mov
lret
and
xchg
inc
rep
dec
sbb
jp
mov
iret
data16
or
out
sahf
sti
out
pop
pop
imul
out
add
jno
sub
hlt
inc
cmpsl
adc
inc
jmp
stos
rorb
call
sub
or
sbb
xchg
mov
mov
in
push
jg
ljmp
fnstcw
mov
cmp
pop
stc
out
fistpll
pushl
aas
pop
stos
popa
add
jns
xchg
les
icebp
sbb
loop
ds
add
jl
mov
loopne
sbb
push
xor
cmp
dec
push
inc
lock
test
les
inc
fwait
popf
movsl
loope
fimuls
in
bnd
mov
inc
or
jno
inc
scas
pop
push
subb
inc
adc
adc
cmp
popa
orb
or
les
adc
push
aam
pop
repnz
jo
mov
mov
pop
loopne
dec
aaa
mov
dec
sbb
cltd
daa
out
sbb
cmpsl
cwtl
push
add
xchg
pushf
lret
rcrb
pusha
pop
popf
sub
fcomps
fstps
xor
jb
jnp
mov
cmp
xor
sbb
icebp
mov
adc
add
dec
jnp
mov
lea
fxch
in
into
mov
xor
adc
int
add
daa
mov
inc
jnp
sub
outsb
xchg
lret
jae
aam
push
pop
mov
loope
hlt
movsl
call
lds
mov
cmp
test
add
jae
nop
pop
jmp
pop
xor
and
push
cmp
ret
data16
pop
xor
push
add
xchg
cmp
pop
frstor
push
fldt
push
push
js
add
lret
inc
inc
and
outsl
bound
adc
fimull
sbb
push
aas
jle
mov
jbe
jnp
adc
jmp
pop
aad
std
ret
sub
push
mov
inc
fldcw
pop
sbb
pop
pop
data16
out
loope
data16
lahf
cmc
pop
dec
lods
cmp
push
jbe
push
repnz
cli
icebp
jae
popa
inc
jl
jl
lea
out
arpl
repnz
ret
mull
pop
push
mov
xchg
cmp
sbb
xchg
out
jnp
mov
jge
mov
cli
mov
cmp
add
mov
add
jno
xorl
imul
sub
inc
xchg
iret
dec
xchg
repz
rorb
sub
pop
popf
or
insl
std
sbb
icebp
bound
je
push
adcl
fcmove
or
jo
aas
gs
hlt
leave
mov
shr
dec
dec
push
leave
pop
mov
jmp
adc
sahf
xchg
arpl
xchg
loopne
dec
jp
add
lret
sub
sub
xchg
inc
adc
sub
pop
rcl
loop
adc
enter
pushf
in
imul
iret
mov
aam
lods
or
int
repnz
neg
jae
test
test
addb
clc
fstpl
pop
mov
xor
fs
push
mov
movsb
sbb
loope
mov
jb
test
xor
call
sub
ss
mulb
mov
adc
decl
mov
loope
mull
pop
inc
dec
aam
repz
les
lea
sbb
jmp
sub
repnz
lret
out
sub
jg
in
shlb
pop
imull
cli
push
iret
jno
jne
xchg
hlt
sbb
pop
hlt
cmp
mov
out
movsl
ss
aas
cmpsl
jmp
lret
add
mov
test
xchg
xor
test
push
push
js
lahf
test
imul
dec
dec
mov
cmp
mov
ja
scas
add
loopne
xor
outsb
pop
mov
mov
mov
mov
push
je
jp
mov
ss
push
mov
or
jge
jo
repz
mov
repnz
and
or
add
sahf
dec
sub
cld
mov
lret
inc
repz
xchg
imul
add
cld
push
jl
out
xor
xor
or
stc
out
xchg
lret
loop
data16
dec
rorl
iret
mov
int3
pushf
and
jae
shlb
mov
jecxz
fwait
mov
pop
jmp
mov
das
popa
xor
push
cmpsb
push
mov
mov
std
fistpl
rcr
cmp
mov
xchg
pop
icebp
mov
jns
sub
jp
mov
dec
mov
sub
cltd
sbb
push
and
and
bound
ret
jb
inc
fistl
leave
stos
sub
clc
adcb
or
dec
out
mov
xchg
ss
out
lods
adc
pop
addr16
rolb
mov
xor
jb
cmpsl
fwait
jle
rcrb
xor
cmp
mov
sub
push
lret
mov
push
fmul
movsl
pop
jecxz
out
adc
pop
mov
add
pop
dec
mov
mov
sub
fwait
mov
add
lods
mov
xchg
xchg
inc
aas
outsl
add
xlat
or
shll
and
pop
mov
fsubrl
adc
ljmp
rcll
shl
fwait
icebp
adc
sbb
jmp
cwtl
mov
pop
push
jmp
adc
fwait
and
movsl
or
push
add
pop
sbb
inc
adc
lret
xlat
mov
dec
rorb
shrb
pop
aaa
push
xor
ja
movlps
outsb
dec
lods
bound
out
clc
pop
sub
adc
dec
pop
adc
push
adc
ret
in
daa
inc
ss
rorb
les
test
jns
jns
outsl
mov
inc
cmc
test
push
jl
xchg
or
sahf
xchg
test
cmpsl
repnz
dec
sbb
push
dec
scas
inc
mov
nop
repz
enter
divl
ja
add
int
cmpsl
mov
add
loopne
and
jae
sub
push
pop
scas
clc
add
pop
or
inc
ljmp
cmp
fldenv
xchg
iret
or
inc
xchg
in
inc
or
jno
push
push
xor
ja
clc
and
or
cmpsl
rcll
call
js
mov
xchg
test
clts
push
loopne
aad
in
mov
jmp
push
sbb
cmpsb
mov
data16
les
mov
mov
mov
mov
pop
jecxz
in
mov
stos
sub
lock
xchg
dec
test
roll
scas
popa
jo
xchg
mov
and
subb
insb
sub
je
data16
outsl
cltd
push
adc
lret
lods
xchg
mov
pusha
iret
inc
div
out
leave
scas
pop
mov
jnp
out
dec
xor
mov
inc
mov
lods
insb
push
xor
or
xchg
add
dec
scas
add
sbb
out
shlb
xor
dec
add
pushf
sub
sahf
sub
mov
push
aas
cld
xchg
divb
ret
push
mov
mov
mov
jle
ds
sbb
scas
fdivl
stos
loope
out
lret
push
add
mov
rclb
pop
add
movhps
xchg
out
sbbl
neg
or
fstl
cltd
mov
jno
xchg
cmp
inc
into
mov
mov
xchg
and
sbb
out
repnz
in
pop
jg
jge
adc
test
insb
pop
inc
scas
sahf
inc
addr16
lcall
or
nop
repz
idivb
mov
pop
lret
out
aam
pushf
mov
repnz
aad
pop
lods
arpl
sbb
xchg
cwtl
or
pop
in
jge
repnz
les
xchg
clc
jmp
mov
andb
inc
shr
xor
mov
das
inc
push
pop
aam
cmp
repnz
loope
jns
mov
xchg
cmp
pushf
cmp
das
and
jmp
jmp
cmp
ret
in
mov
es
aas
push
xchg
les
jne
notl
mov
pop
sub
and
daa
ret
adc
sub
lret
pop
pop
in
ret
movsl
icebp
lock
push
add
repz
or
pop
imul
add
xor
ret
lahf
fs
push
xor
adc
imul
cld
les
and
mov
enter
jne
adc
add
cltd
add
in
push
stos
push
mov
push
lret
imul
sub
jo
xor
and
and
dec
aad
push
out
call
cmpsb
push
mov
fs
pushf
mov
xor
pop
push
jo
jg
or
and
cmp
ss
psrad
aam
in
movb
mov
pop
loop
into
fistl
jmp
cmp
stc
in
ja
mov
or
mov
icebp
mov
add
out
mov
fists
mov
cmpsb
mov
outsl
and
dec
out
push
pop
mov
pop
pop
lret
and
add
adc
mov
mov
scas
push
xchg
lea
lret
mov
inc
xor
sub
ss
ds
cmp
sub
sbb
jb
or
mov
cmp
dec
cmpsl
adc
cltd
and
hlt
inc
aaa
lods
jb
and
adc
rorl
and
fcmove
lahf
push
push
cmp
xlat
xchg
dec
icebp
sub
sub
insb
adc
push
cld
push
xor
xchg
mov
xor
icebp
aam
and
enter
hlt
cmp
push
je
mov
repz
push
jbe
cmp
lock
pushf
jg
cmp
stos
xchg
adc
cmp
jb
jge
mov
mov
mov
js
es
push
bound
xor
pop
js
pop
inc
lods
add
jne
mov
and
pop
and
cmpsl
push
insb
cwtl
pop
push
insl
sbb
jbe
xchg
sub
cli
adc
ja
mov
shrb
aad
cld
or
stos
popf
xchg
mov
pushf
stos
fidivl
and
nop
jp
push
sar
push
enter
mov
push
and
out
xchg
push
jmp
std
push
fldl2e
lea
mov
push
and
cs
lcall
push
js
inc
sbb
lods
mov
sbb
push
xchg
adc
mov
fs
ror
xchg
das
stc
pop
mov
setns
adc
pop
imul
subl
dec
adc
mov
insb
clc
inc
cmp
lock
popf
hlt
into
cli
ror
fcomps
stos
mov
mov
sbb
lds
jg
sub
add
arpl
out
aad
cmpsl
mov
jb
add
in
add
lcall
jbe
adc
fs
decl
and
mov
mov
mov
in
jmp
sub
add
addr16
pop
inc
enter
vmaxss
in
fdivr
scas
adc
gs
scas
orb
in
cmp
or
jge
cmp
movsb
lahf
inc
out
jp
outsb
fisttps
dec
or
mov
fdivl
mov
add
rcll
imul
pop
ss
insl
lret
in
mov
adc
cli
ljmp
inc
push
push
push
fstps
pop
dec
mov
loop
scas
or
nop
xchg
and
and
or
arpl
pop
hlt
out
rol
or
test
push
or
mov
pop
sti
xor
aaa
popf
dec
jmp
pop
mov
bound
movsl
je
insb
enter
sub
cmp
jg
in
jge
jmp
stos
xor
jge
movhps
mov
inc
imul
mov
pop
aam
sbb
pop
jnp
push
add
inc
out
mov
mov
fcoml
xchg
sbb
scas
jne
pop
and
movsb
add
hlt
push
inc
out
negl
cmp
ss
arpl
in
stos
or
repz
nop
and
sbb
testl
xor
rorl
xchg
test
and
shl
daa
je
push
mov
mov
outsb
sub
jl
sbb
jne
ret
add
rcrl
mov
adc
mov
lods
or
xchg
in
inc
xchg
mov
jge
inc
push
jmp
xchg
adc
xor
xor
and
inc
push
xor
pop
sarl
xlat
sub
aaa
inc
into
and
filds
push
or
loop
ficompl
cmp
ret
add
imul
testl
fdivrl
in
jmp
cltd
push
stos
sbb
lcall
call
mov
fmulp
sub
cmc
nop
movsl
out
movsb
loope
mov
sbb
xchg
lret
std
faddl
mov
jg
outsb
cmp
and
or
ljmp
adc
mov
imul
dec
dec
mov
push
out
ja
cmp
sbb
or
gs
mov
jg
cld
sub
xor
mov
and
scas
mov
sub
or
dec
clc
sbb
jnp
aad
xchg
aam
sub
mov
in
pop
push
cmp
js
pop
mov
or
dec
outsl
inc
and
cwtl
xchg
push
xchg
dec
in
aaa
arpl
sub
stos
clc
sub
es
std
mov
test
clc
pusha
sub
loope
and
pushl
jp
inc
push
js
icebp
xchg
shl
cmpb
jo
in
in
adc
pop
outsb
rorb
sub
stc
data16
cwtl
push
mov
inc
mov
sub
dec
pushf
pop
das
xchg
fisttpl
mov
dec
fldl
jns
dec
arpl
mov
movsl
jp
xchg
movsb
dec
mov
sbb
aam
fwait
int
fmull
arpl
aad
insl
dec
pushw
mov
jo
dec
jno
xchg
fadd
in
adc
push
push
or
fcompl
push
icebp
pop
lcall
push
int3
mov
cmpb
fldcw
mov
add
push
cmp
sub
mov
scas
dec
test
push
hlt
sbb
mov
pusha
cmc
and
es
mov
inc
scas
jne
in
in
js
sbb
shll
lock
enter
mov
add
sahf
push
jne
ret
cmp
ljmp
cs
xor
mov
and
insl
imul
mov
mov
mov
enter
daa
imul
mov
jp
jae
jb
cmp
es
ret
repnz
pop
xchg
pusha
into
fcoms
in
push
mov
fsubrs
push
cwtl
insl
push
sub
dec
push
fcoms
xor
enter
stc
arpl
adc
mov
xor
test
test
dec
stc
and
int
outsl
dec
jl
adc
outsl
outsl
je
sbb
sub
popa
test
inc
das
ja
sub
pop
or
pushf
adc
mov
addl
leave
mov
into
cmp
or
sahf
mov
out
pop
sub
mov
icebp
add
cmp
ret
mov
jecxz
adc
push
fs
rcrb
jae
jecxz
fisubs
adc
mov
test
jl
scas
imull
rcrl
adc
mov
add
roll
adc
std
pop
inc
imul
pushf
out
push
imul
add
push
loope
dec
js
xchg
dec
xor
inc
shll
xchg
mov
lret
dec
push
fisubrs
xchg
lret
pop
mov
dec
iret
lcall
lods
jl
cmp
adc
in
xchg
fs
out
mov
xchg
sbb
mov
out
mov
sub
scas
jne
cmc
gs
loopne
xchg
mov
mov
sahf
push
jne
test
fcoml
in
sti
push
aas
xchg
add
cmp
push
ret
pusha
fisubl
push
xor
lret
lret
in
fwait
out
outsl
les
shrl
cmp
xor
aas
or
loop
mov
lea
fcoml
imul
int3
cmp
out
in
pminsw
adc
adc
push
inc
mov
xor
fld
cmpsl
dec
cwtl
imul
imul
fbld
sub
in
dec
hlt
jno
shr
popa
xor
xchg
lea
test
hlt
xor
testl
xchg
fsubrl
negb
mov
pop
push
and
popa
sbb
and
xor
cmp
add
aad
cmp
negl
inc
lcall
mov
movsb
add
sti
xor
mov
sub
test
pop
mov
stos
inc
or
mov
inc
int3
ds
int3
or
inc
push
call
jns
jecxz
inc
in
mov
and
popl
int
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
or
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
push
mov
movl
cmpl
je
cmpl
jl
jmp
call
mov
dec
mov
jmp
mov
xor
add
mov
sub
xor
mov
notl
mov
andl
sub
movl
movl
xor
mov
mov
add
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
xor
xor
dec
mov
jmp
sub
add
mov
sub
xorl
mov
adc
mov
mov
inc
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jb
sub
movl
mov
orl
sbb
mov
xor
or
mov
sub
or
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
jmp
fs
dec
mov
movsb
jnp
rol
aaa
pop
sahf
xchg
sub
jge
aas
pop
jp
iret
shll
ficoms
adc
push
sub
sti
subb
popa
adc
sbb
mov
sub
sub
sbb
mov
sti
mov
pop
sub
pop
push
jo
movsb
aas
push
jg
int
cmpsb
cmp
dec
adcl
pop
ds
dec
xchg
cmpsl
cmc
push
insb
pusha
rolb
mov
cmp
mov
fcomi
inc
testb
jnp
and
adc
daa
xchg
and
int
xchg
dec
xchg
lock
mov
dec
pop
fdivrl
xchg
out
gs
ja
lret
adc
je
out
mov
aas
add
aam
mov
inc
mov
rol
cmpsl
pop
repz
jbe
fldl
jecxz
dec
xchg
sub
inc
sbb
xor
imul
hlt
popa
repnz
lahf
daa
or
push
outsb
jmp
xlat
pop
sbb
push
adc
insl
xor
pop
shr
cli
push
xor
movsb
mov
push
or
in
leave
fldenv
xchg
fistpll
clc
shlb
push
or
sub
adc
jle
add
inc
mov
dec
add
loop
sbb
jge
arpl
movsb
jl
mov
int
inc
pop
rcr
dec
out
inc
lea
js
repnz
lock
mov
pop
add
mov
or
mov
sub
lret
stos
aaa
dec
jns
out
jbe
jl
enter
cmp
sbb
scas
cmpsb
mov
cmpsb
lods
movsl
push
jmp
xchg
daa
sub
sbb
pop
mov
mov
add
inc
cli
lcall
add
jb
mov
stos
xor
popa
dec
jp
popf
xchg
ss
mov
push
inc
icebp
mov
ret
xchg
lock
sbb
push
aam
mov
mov
sbb
xlat
loopne
popf
sub
shll
xchg
dec
mov
cmp
push
sbb
inc
jbe
pushl
fwait
leave
sbb
lahf
stos
stos
loope
rcll
push
dec
add
repnz
cmp
into
push
add
lock
lahf
pusha
hlt
adc
xor
mov
inc
inc
jo
gs
dec
leave
fisubrs
mov
jo
test
push
shll
and
add
in
stos
inc
jl
les
insb
push
pop
iret
sub
lret
xchg
dec
call
popa
jp
cmp
mov
aaa
mov
mov
fcomps
pusha
add
testl
aaa
cmp
dec
xor
sbbl
add
fiaddl
cli
and
cmp
cwtl
sarb
icebp
dec
stc
adc
cwtl
or
xchg
xchg
lahf
pop
negl
xchg
cmp
dec
inc
xchg
lock
cmpsb
xchg
jne
xor
out
sbb
cmc
ss
outsb
or
dec
push
cltd
outsb
and
sub
xor
imul
or
ss
sbb
ffreep
ds
push
xor
dec
add
stc
std
and
aam
paddq
sbb
jmp
and
in
mov
les
push
xchg
inc
out
mov
xor
pop
cmp
adc
insb
push
add
fcoml
andl
les
jp
mov
pushf
lcall
mov
cmc
stc
loope
pop
pusha
xor
sub
inc
push
imul
mov
rcll
add
rcll
and
or
loopne
jns
addl
insb
mov
fimull
xorb
pop
dec
xchg
lods
mov
mov
adc
bound
in
aad
out
out
inc
mov
ret
jmp
mov
insb
push
or
jecxz
sub
sub
cwtl
mov
dec
push
xor
fisubs
outsl
pop
movl
imul
cmpsb
mov
cmpsb
mov
fisubrs
jns
xchg
mov
mov
adc
xor
push
data16
sahf
stos
push
jae
aad
imul
jbe
imul
push
in
lea
xchg
cmpb
pop
mov
ds
or
ret
or
ret
mov
xchg
lret
xchg
jne
repnz
jge
or
cmp
sarb
in
out
jnp
push
xor
push
mov
adc
outsl
pushw
enter
out
nop
leave
rcrb
lods
push
cltd
mov
lret
test
aaa
jne
aad
and
mov
in
fs
inc
shl
aaa
mov
call
or
test
roll
cmpsb
pop
inc
sub
and
add
jp
lock
cmp
cld
add
dec
sub
scas
ss
sbb
out
mov
insb
pop
ror
aas
ret
shlb
cmp
cltd
xchg
and
ret
mov
mov
lcall
out
adc
pop
testb
mov
mov
sub
bound
enter
pop
jl
fmulp
mov
cwtl
xor
dec
std
or
xchg
movsb
adc
lcall
add
xchg
pop
popa
pop
mov
nop
aas
mov
mov
adc
inc
sub
lds
inc
pop
pushf
filds
rcll
pop
push
inc
std
divl
std
cmc
test
scas
mov
sbb
sbb
frstor
das
frstor
pusha
sbbl
imul
out
test
xchg
xor
mov
sub
push
mov
inc
rcr
test
sub
sbb
fcompp
inc
dec
mov
push
jmp
sub
fld
out
push
popf
xchg
ss
sbb
pop
cmpsl
push
inc
push
inc
jno
aas
rolb
popa
push
jb,pt
cmpsl
push
repnz
test
fwait
pop
jns
mov
mov
int3
outsb
decl
fld1
pop
sub
cli
test
fwait
test
dec
setno
sahf
or
movsb
mov
mov
add
sbb
mov
mov
xchg
in
push
mov
inc
jl
sub
push
push
jbe
push
lds
inc
mov
mov
jae
add
imul
lret
push
or
jbe
bound
adc
pop
sahf
clc
scas
mov
cli
ficoms
int
sbb
mov
and
xor
sub
push
pop
fists
sbb
test
rorb
pushf
pop
iret
test
sti
jle
loop
xor
mov
xor
mov
test
mov
xchg
imul
pushf
mov
nop
enter
dec
xchg
xchg
xchg
mov
lds
sbb
jle
lret
push
pop
add
add
sbb
aad
dec
xchg
ret
sub
int
push
clc
push
push
dec
and
dec
sub
dec
ja
or
jnp
jbe,pn
mov
adc
dec
sar
outsb
inc
dec
cmp
add
insb
enter
pop
mov
sub
push
dec
push
jbe
rcrb
cmp
jmp
xlat
ret
mov
pop
xchg
pop
inc
rcll
repz
pusha
and
cmc
push
insb
fldenv
xchg
cs
popf
pop
ss
and
aas
mov
push
das
cli
cmpsl
fistl
lret
inc
int
cmp
pop
lock
mov
add
jne
fdivl
cs
aas
sti
aas
sbb
pushf
jmp
arpl
out
clc
lods
cmpsb
ret
dec
xchg
arpl
stos
pusha
dec
stc
xor
imul
fldl
les
adc
mov
or
xchg
jl
test
mov
add
mov
dec
int
push
cwtl
sub
arpl
out
dec
sub
cmp
lods
int3
addr16
xor
loopne
pop
jmp
xchg
popf
hlt
cltd
lock
mov
test
stc
push
cli
stos
out
xchg
mov
xchg
pop
pop
cmp
jbe
pop
popa
push
dec
push
ret
jo
mov
sbb
jge
jb
sub
mov
mov
and
cmpl
mov
sbb
lret
xor
mov
jl
mov
das
cmp
cs
imul
xchg
lret
mov
pop
add
mov
hlt
inc
jb
xchg
mov
mov
je
pop
cmp
and
xor
cli
fcmovnb
cmpl
and
fsubr
and
cmpsb
les
popf
adc
imul
cmp
jp
xor
xchg
sub
outsb
pop
cmpsb
out
sbb
jmp
cmp
add
pop
inc
xchg
mov
pop
ret
hlt
in
adc
mov
jno
cmp
es
pop
fcomp
mov
mov
push
test
sbb
add
mov
sub
out
lret
inc
leave
jae
test
into
mov
cmpsl
stc
jl
dec
pushf
push
pushf
adc
mov
add
pop
xor
xor
xchg
psrlq
xor
faddl
dec
mov
mov
adc
nop
stos
xchg
lods
sub
rol
sbb
popl
and
mov
std
jp
rcrb
test
aad
test
insb
push
inc
lret
jmp
xchg
mov
add
loopne
inc
mov
lds
push
adc
mov
clc
push
mov
sbbl
mov
mov
xchg
xchg
add
into
pop
jnp
js
dec
and
pop
lea
cmpsb
push
stos
xchg
pop
add
push
cltd
insl
and
nop
and
xchg
iret
push
stos
gs
popa
test
dec
xchg
fcmovnu
mov
push
add
lahf
push
leave
mov
jae
jmp
out
sbb
and
inc
xor
cltd
lret
pushw
in
test
ret
mov
out
xchg
rcrb
cmp
mov
and
mov
dec
js
fst
fwait
mov
ljmp
push
mov
out
hlt
cli
pusha
xorl
adc
mov
sbb
jo
nop
fmul
mov
jmp
sbb
sahf
fs
xor
aas
pusha
fbstp
adc
pusha
cmp
mov
pop
xchg
imulb
mov
ret
mov
rol
xor
inc
and
cmc
and
sub
add
aas
ljmp
pop
fldcw
loop
aas
or
xchg
and
ljmp
aas
inc
mov
loopne
inc
jge
adc
cltd
pop
cmp
push
ffree
into
adc
cmpsl
iret
lods
into
adc
cwtl
inc
xchg
adc
shl
out
or
xorb
and
jecxz
sub
adc
sbb
jecxz
dec
and
inc
cmp
mov
push
lods
cmp
pusha
in
jne
inc
cmc
shl
jne
inc
popl
mov
stos
jae
and
xlat
sbb
roll
adc
aas
insb
and
xchg
movsb
clc
arpl
fsubrl
test
cli
enter
andl
frstor
mov
mov
push
enter
std
xchg
std
mov
pop
jb
mov
cs
lahf
cmpsl
cmp
or
pushf
in
outsb
pop
adc
insb
dec
mov
cwtl
fstps
or
ss
jne
loope
in
dec
lahf
push
or
aam
aam
mov
sarb
int3
ret
xchg
aad
xchg
imul
mov
in
pop
lcall
insb
fs
rcll
xchg
mov
loope
ja
xor
pop
xchg
inc
and
cmc
sub
fld1
sbb
inc
mov
push
jns
jg
add
push
cmp
push
or
add
mov
daa
test
inc
and
xchg
stos
shrl
fwait
vpackuswb
and
notb
pop
mov
mov
dec
inc
xlat
xor
sub
jl
mov
popf
and
sbbb
mov
mov
or
int
pop
mov
fprem
lea
jae
jg
mov
imul
dec
pop
and
pushf
push
dec
and
sti
cmp
ds
inc
fstps
push
pushf
and
add
in
or
pop
sub
inc
out
and
lds
rcl
cmpsb
sub
or
xchg
int
pop
pop
je
ss
lods
sti
iret
je
or
xchg
idivb
aas
adc
xor
sti
mov
xchg
es
jo
shl
loopne
sahf
jle
xlat
xor
roll
fldl
and
cmpb
pop
pop
or
scas
into
jg
sti
in
push
movsb
push
and
xor
dec
test
data16
rcrb
rolw
lret
or
mull
and
ror
ret
mov
roll
stc
mov
jnp
xor
sub
mov
xchg
rcll
das
add
pop
mov
shrl
add
mov
lods
push
jl
inc
or
jmp
sub
movl
lar
push
xchg
aas
cwtl
push
pusha
xchg
popa
enter
push
mov
xchg
cmp
xchg
inc
clc
int
mov
or
sub
aaa
imul
jge
lret
or
mov
fwait
out
lret
rolb
aas
jmp
ret
jno
loopne
movsl
xchg
leave
mov
mov
dec
mov
cmp
jb
cmp
loopne
push
sarl
jmp
shll
add
sti
xlat
into
pop
out
sbb
mov
icebp
scas
xor
dec
add
iret
dec
jmp
dec
xchg
push
cmp
or
adc
movsl
ss
test
jns
mov
sbb
jecxz
lods
mov
mov
cmpsb
pop
inc
sbb
add
mov
or
pop
gs
push
xor
adc
mov
scas
lea
sbb
aad
aam
add
pop
fsubr
xor
pop
ret
in
mov
inc
push
xchg
int
dec
test
xor
pop
and
xor
or
cmp
sub
mov
push
pusha
aam
sub
push
popa
in
and
and
add
xor
xor
adc
jmp
mov
xchg
popa
jge
add
repnz
fsubrp
std
or
or
lret
arpl
xchg
int3
or
repnz
and
popf
jo
in
lock
push
outsl
js
in
cmp
xchg
sahf
daa
mov
clc
and
stos
inc
xchg
mov
mov
sub
xor
popa
mov
inc
cmp
es
cmpsb
cmp
ror
adc
mov
inc
sub
cld
add
scas
in
aaa
pop
outsl
lret
lret
repnz
shll
jae
ret
sti
xchg
dec
lds
arpl
or
sbb
daa
flds
and
mov
lret
add
ret
fists
and
mull
ret
sub
sub
ret
inc
in
ja,pn
mul
mov
sub
fidivrs
push
lock
adc
adc
sbb
ret
mov
loop
xor
cmp
lgs
dec
sbb
lret
adc
mov
add
pop
clc
xchg
pop
pop
pop
cmp
inc
adc
adc
fdivrl
aas
jecxz
es
into
mov
push
or
jnp
jmp
push
ret
xor
jnp
jp
loope
adc
mov
inc
jb
and
sbb
cwtl
xchg
decb
popa
std
faddl
aas
gs
add
iret
lds
dec
lcall
xor
loope
aas
les
movsl
mov
aas
iret
jle
int3
pusha
lahf
dec
loopne
sub
jge
jl
push
inc
incb
or
ficomps
pop
inc
subb
mov
jnp
xchg
iret
inc
clc
fisttps
adcl
in
or
insb
jge
dec
loope
in
nop
shl
push
xchg
das
push
mov
mov
je
data16
mov
sbb
pop
mov
push
cmp
push
pop
seta
fwait
xlat
xchg
push
jno
push
xlat
out
push
mov
rolb
xlat
imul
mov
insl
mov
mov
notb
lahf
out
and
cli
test
jge
out
mov
push
lea
inc
inc
in
lock
insl
stos
inc
add
iret
sub
and
fs
xor
cmp
mov
ds
lret
stos
and
xchg
vsubpd
loopne
stc
loopne
sub
fisubs
in
mov
mov
pop
daa
mov
jle
mov
dec
test
cmc
aaa
mov
jl
pop
scas
mov
mov
push
insl
lds
xchg
xor
idiv
add
fnstsw
lds
leave
test
mov
jo
mov
cmp
jl
xchg
es
push
sub
lret
popa
incl
in
daa
push
sbb
enter
gs
sbb
loop
repnz
inc
arpl
ljmp
xor
sarb
add
sbb
xchg
out
sub
int3
mov
sbb
xchg
jns
inc
test
push
jo
cld
mov
stos
lds
xchg
jne
and
xor
sub
mov
test
sub
and
sub
ret
cs
push
out
dec
out
in
fwait
cld
or
jnp
ret
xor
pop
out
jb
cmp
fwait
xlat
mov
cmpsl
sub
cwtl
fwait
and
idivl
xorb
jno
ret
cmp
aas
mov
dec
into
iret
mov
ret
mov
pop
frstor
rorl
sbb
adc
add
loop
cmovbe
in
inc
out
jecxz
mov
sub
je
in
cmp
push
sbb
xor
les
mov
sarb
stos
aas
mov
popa
mov
sub
xchg
or
jecxz
ja
shrb
mov
imul
stc
mov
movsb
orb
cmpsl
ret
push
xchg
push
jmp
stos
inc
ret
es
push
dec
int3
fimull
xor
adc
mov
jnp
mov
leave
mov
xchg
jo
outsl
fucom
ja
faddl
mov
mov
mov
cltd
mov
mul
mov
pop
inc
shll
mov
loopne
mov
jns
jne
push
lret
outsb
loopne
cli
and
sbb
iret
adc
insl
mov
push
xor
cli
mov
fsubr
sbb
fcmovnu
pop
jge
sbbl
out
dec
fadds
sub
or
cmp
and
les
or
mov
mov
jp
cmp
lea
xchg
scas
push
stos
pushf
inc
daa
xchg
and
or
aaa
cmp
push
dec
jno
cmp
xchg
data16
sbb
lds
jl
int3
popf
sahf
in
es
cmp
and
ret
push
into
cmpsl
js
rclb
adc
xor
adc
mov
std
pop
jb
cwtl
in
popf
jl
xchg
lret
jecxz
xchg
sbb
xor
popf
cmp
xchg
jb
mov
xchg
adc
jp
sahf
int
adc
pop
orb
aas
sbb
xor
cmp
mov
imul
pop
adc
mov
sub
in
iret
aad
imul
pop
sbb
add
jge
and
inc
stos
rcll
das
adc
xor
jb
out
adc
enter
lret
xchg
mov
dec
jns
push
xor
pop
add
cwtl
les
mov
test
addr16
adc
jecxz
scas
dec
mov
push
repnz
lds
aam
scas
jne
pushf
cld
push
hlt
pop
ja
pop
add
test
dec
sbb
lods
jne
push
mov
hlt
push
xor
cmp
inc
xchg
repz
or
sub
inc
xor
fldpi
int
leave
ljmp
stos
out
mov
jle
scas
adc
mov
or
dec
jge
scas
call
imul
movsl
dec
jmp
scas
lret
in
inc
xchg
and
es
mov
sub
ret
sub
adc
xchg
sbbl
andl
jp
mov
pop
fisttps
das
dec
adc
sub
xchg
mov
adc
movsb
rolb
and
hlt
loopne
inc
loope
in
mov
add
jecxz
cmpb
enter
dec
push
push
cmp
push
fldcw
lahf
xchg
fistpl
pop
sub
xchg
mov
ret
sti
sti
xchg
mov
shrl
es
stc
sbb
push
jo
jb
lret
scas
ret
loope
popf
mov
incl
jecxz
mov
fildl
lock
mov
popf
in
daa
pop
pop
test
and
bound
cmp
addl
add
loop
or
mov
setno
pushf
ljmp
inc
mov
call
or
aad
les
push
shlb
xchg
fmull
pop
xchg
scas
loop
ljmp
sbb
add
mov
or
pusha
jo
negb
test
adc
add
sub
xchg
inc
cld
arpl
push
cmp
adcb
fsubrl
mov
repnz
data16
and
jecxz
lcall
sub
nop
lds
pop
pop
add
mov
and
lcall
push
and
jge
cld
mov
and
inc
fcomip
hlt
xchg
jb
jae
das
xor
and
pop
mov
fs
movsb
add
fdivrl
clc
xor
xchg
rcl
adc
ret
decb
cmpb
mov
cli
jnp
rorl
test
aad
xchg
mov
jo
dec
test
lods
test
adc
repz
add
dec
in
jne
jmp
adcb
push
xchg
xchg
add
mov
dec
es
loop
pop
insl
imul
popa
iret
daa
in
mov
mov
lods
scas
out
adc
cmpsl
sbb
pop
imul
pop
rorb
adc
adc
pop
fisubs
mov
gs
shll
fcomps
popa
dec
call
js
jecxz
sbb
jg
sbb
jno
sub
bound
sbb
lret
stc
xor
add
ret
rol
in
addr16
aam
cmp
lock
sub
lock
aas
sti
ss
jo
pop
dec
mov
dec
mov
das
jge
mov
adc
fs
mov
xor
push
and
push
insb
add
cmc
and
lret
dec
or
xor
mov
aam
or
jge
sub
ret
shlb
in
xor
dec
insl
mov
xchg
mov
jle
sub
out
sub
lods
jl
pop
fwait
dec
inc
dec
mov
scas
out
inc
les
dec
pop
push
sub
and
scas
shlb
push
das
xor
push
cmp
aas
sbb
mov
push
jg
xor
sbb
mov
and
mov
daa
mov
xor
xchg
daa
dec
mov
mov
cmpsl
mov
cwtl
mov
daa
sbb
pop
pushf
fst
mov
inc
inc
cmp
inc
push
inc
aad
subb
sbb
pop
push
and
jp
and
xchg
xchg
gs
movsb
jne
and
push
xor
and
sti
and
xchg
pop
cwtl
daa
popf
insl
jl
add
out
lock
push
rclb
inc
fnstenv
int
jecxz
aam
data16
out
out
ret
iret
xchg
dec
mov
ljmp
pop
jb
mov
add
push
sub
fwait
xor
arpl
xchg
mov
fucom
test
ja
fistl
mov
adcb
clc
out
jno
test
adc
lret
inc
add
xchg
fisubrl
ja
sbb
out
cltd
pusha
push
pop
adc
insb
cmpsb
sbb
shrb
jnp
and
adc
mov
add
push
test
inc
xchg
out
lret
and
mov
mov
movb
jmp
lea
mov
cmpsb
aaa
inc
iret
ret
fwait
cld
aas
stc
enter
cmp
inc
mov
std
das
adc
int
stos
pop
xchg
pop
mov
iret
mov
lock
les
cld
and
pop
cmp
jge
xorl
movsl
mov
loop
cmp
mov
and
divb
mov
pop
lods
add
loopne
sub
jbe
int3
int
pop
adc
aad
mov
stos
pop
mov
adc
std
call
dec
incl
pusha
mov
xor
cmpsb
ret
cmp
dec
add
adc
sbb
mov
outsb
or
test
mov
add
mov
adc
movsb
add
jb
cmp
fdivs
pop
ds
xchg
fisttpll
sbb
and
xor
out
lret
in
leave
sbb
popf
mov
xchg
push
ret
mov
repz
push
xor
adc
pop
mov
enter
div
sbb
mov
mov
mov
idivl
pop
mov
inc
jb
mov
mov
jb
jne
jb
lock
xchg
mov
mov
add
mov
or
mull
cs
add
pop
leave
push
test
mov
sets
pop
mov
les
jge
scas
pop
pop
imul
cli
cmp
sbb
out
loopne
test
mov
jnp
fst
rclb
or
mov
dec
stos
lret
outsb
inc
inc
fstl
je
adc
jmp
addr16
ds
add
js
repz
out
adc
orb
scas
fldenv
mov
enter
cmp
and
cwtl
jo
stos
sar
dec
dec
lret
xor
push
lea
jl
cs
xor
or
arpl
push
mov
daa
xchg
icebp
cmp
sbb
mov
sub
pop
mov
cmpsb
xchg
xor
insl
bound
aas
mov
adc
xor
movsl
adc
and
xor
jb
shlb
ret
xchg
addl
and
subl
adc
outsl
xor
or
shr
ficoml
idiv
pop
aas
test
jno
cmp
xchg
cld
fisubrl
push
fmuls
cld
sti
mov
push
les
stos
fcmovu
adc
repnz
sub
add
xchg
xchg
notb
ret
cwtl
cltd
mov
jo
out
sub
xor
test
call
dec
outsl
int3
mov
fbstp
mov
xor
sahf
or
adc
loopne
data16
repz
daa
lods
add
stc
loope
int
adc
push
push
cmp
and
sub
lcall
dec
mov
insl
jbe
lds
mov
add
xor
sub
outsb
add
notl
ja
fimull
push
push
repz
lea
and
imul
add
loop
push
enter
outsb
fbstp
pop
cmc
in
jb
push
sub
cwtl
and
shll
push
insl
cmpsb
loope
fnstcw
scas
leave
insl
test
dec
mov
inc
dec
arpl
imul
adc
fists
out
adc
lcall
mov
inc
jbe
shr
push
cld
inc
rol
notb
mov
cmp
add
mov
xor
cmp
outsb
shl
add
js
xchg
hlt
lret
push
xchg
lret
dec
push
sub
int
fisubrl
aaa
push
xchg
fsubrl
xor
inc
xor
mov
mov
mov
jae
add
adc
mov
dec
push
mov
lods
ret
dec
subl
insl
pop
stos
cmp
lods
inc
jl
mov
fidivrs
call
jp
mov
aaa
mov
cmp
xchg
mov
mov
cmp
add
dec
dec
jg
lret
test
movzbl
arpl
add
mov
negb
lret
mov
sub
movsb
dec
repnz
lret
ficoml
test
cmp
cli
cmp
add
enter
add
aaa
adc
movsb
jo
lock
pusha
push
xor
int
lahf
outsb
fmul
add
out
dec
insb
es
cmpsl
adc
push
call
xor
or
mov
test
ss
adc
pop
ret
mov
lea
push
dec
cmpsb
push
lock
arpl
jge
sub
mov
scas
fidivrs
popa
loopne
adc
lret
jl
aaa
or
push
es
cmpsl
jmp
dec
xchg
push
jnp
jecxz
sahf
pop
push
xchg
inc
jnp
icebp
popf
aam
xchg
add
std
hlt
mov
xor
or
sub
call
clc
mov
push
loopne
mov
inc
fimuls
xor
jo
subb
push
push
frstor
outsb
cmp
inc
mov
pop
cwtl
outsl
sbb
sbb
lock
les
mov
and
jo
sub
sub
inc
cwtl
inc
cld
lahf
add
dec
adc
dec
test
fisubs
adc
ja
pop
mov
xchg
jo
out
sti
js
push
imul
xchg
stos
mov
xor
ret
inc
imul
test
push
stos
sarb
xchg
aas
add
insb
inc
xlat
push
imul
clc
rorl
add
push
push
xchg
cmp
or
mov
sub
imul
mov
push
andb
xchg
fstl
std
inc
ss
cmc
xchg
test
cs
adc
mov
in
sub
xchg
inc
sub
mov
insb
push
adc
lret
dec
ja
push
std
jge
cmp
test
sbb
inc
arpl
lods
iret
push
pop
cs
xor
in
mov
pop
pop
in
test
push
ror
or
int
ficomps
jp
xchg
movsb
imull
arpl
add
loope
lahf
cmp
fsubl
jns
pusha
aas
lods
sbb
cmp
cltd
cmp
sbb
push
ja
mov
pmaxub
mov
inc
cmpsl
fiaddl
or
sbb
cmpsl
add
push
out
jp
adc
lock
mov
jo
xchg
xor
push
jae
movsl
lahf
cld
pop
cld
sub
aad
xor
dec
pop
push
pop
lcall
sarl
mov
push
mov
cmpsl
xor
mov
data16
dec
mov
loope
xchg
jne
xchg
add
add
mov
ds
push
xor
subl
hlt
mov
pusha
insb
adc
das
xor
push
rolb
dec
adc
call
scas
aas
insl
pop
jno
cmp
fs
mov
adc
push
cmpb
cs
cmpsb
sahf
sbb
imul
addr16
sub
lods
aas
icebp
xchg
jae
push
sbb
outsl
shl
push
mov
xchg
jb
ret
xchg
cltd
sbb
mov
pop
jecxz
adc
mov
inc
popf
mov
loope
dec
push
sub
and
jmp
in
out
push
je
gs
adc
or
bound
mov
adc
mov
xchg
mov
sub
mov
out
aam
mov
addr16
mov
mov
mov
adc
mov
inc
in
pusha
js
es
int3
sti
sbb
mov
adc
cmp
cwtl
shrl
sbb
test
xchg
or
aad
sub
mov
push
lret
xchg
pop
cmp
sub
and
xchg
in
push
std
sub
xchg
sub
testb
test
cmp
sbb
or
das
lock
cmp
cli
sbb
rorb
push
mov
out
pop
and
enter
pusha
fucom
or
add
lret
negb
scas
dec
gs
or
repz
popf
outsl
lock
mov
std
outsl
aas
insb
cld
fcomps
jae
push
adc
mov
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
jmp
inc
cmp
mov
jnp
sub
jmp
adc
ss
test
jp
dec
jno
icebp
or
sub
pop
xchg
aad
xor
shl
pushl
cmp
xchg
sub
cli
jmp
jmp
mov
mov
cmp
enter
xchg
pop
cmc
inc
wrmsr
andl
pop
fdiv
lods
xchg
in
or
popa
test
sub
jno
pop
in
jb
adc
push
inc
inc
pop
xor
stos
popf
pop
mov
and
cmp
pop
aas
add
repnz
xchg
cmp
test
movsl
out
in
pop
push
sub
push
xchg
adc
inc
jp
dec
add
int
or
dec
mov
fadds
xlat
mov
fucomip
mov
adcb
or
roll
bnd
or
cmpsl
outsl
jl
xor
dec
xchg
in
sbb
dec
outsl
mov
aad
dec
mov
pop
mov
jecxz
pusha
mov
lds
xchg
push
cmpl
add
sbb
ss
loopne
in
shll
clc
shrl
or
flds
push
cmp
and
mov
add
mov
out
push
in
subl
adc
cli
xor
and
in
jg
xchg
mov
mov
mov
fisubl
lcall
jl
jecxz
int3
clc
push
xchg
pop
cmpsl
inc
int
jb
pop
jg
ss
xchg
iret
mov
mov
repz
push
xchg
ret
or
push
movsl
jl
inc
sub
pop
mov
push
xchg
mov
mov
dec
inc
stos
adc
shrb
pop
cmp
xchg
aaa
sahf
xchg
cmp
push
scas
stos
or
sub
inc
fstpl
clc
lds
xor
pushf
and
les
out
push
fisubrs
push
cmpsb
sahf
movsb
leave
push
push
push
out
test
sub
mov
leave
ret
fmuls
in
cmp
pop
mov
jle
cwtl
inc
jle
pop
popf
push
xor
pop
add
mov
add
shr
movsl
sub
push
ret
pop
inc
iret
inc
fidivs
inc
jno
lods
les
insb
in
pop
fadds
xor
add
lret
enter
jp
xchg
je
mull
shll
push
sti
cmp
xchg
xchg
das
in
adcl
mov
pusha
mov
sbb
mov
shll
ljmp
pop
push
push
lds
in
inc
ss
cmp
mov
imul
or
sti
testl
add
add
xchg
mov
xchg
js
cmp
xchg
int3
add
ficoms
mov
subl
xchg
mov
cli
nop
dec
scas
xor
inc
imul
mulb
mov
mov
mov
jo
jg
lret
hlt
jecxz
test
cmp
loop
push
pop
mov
aas
jmp
push
sbb
add
ljmp
sbb
cmp
pop
outsb
inc
in
sbb
inc
cmp
and
mov
pop
nop
inc
lret
sbb
enter
jecxz
push
ljmp
or
fiadds
mov
xor
test
mov
adc
in
scas
repz
xor
insb
iret
in
xchg
shrl
add
dec
mov
jae
imul
pop
sbb
in
mov
fimull
clc
aad
shrl
inc
jnp
call
test
lret
sahf
sub
addr16
add
ret
dec
jns
ljmp
ja
scas
addr16
rcrb
cld
rol
in
inc
xchg
cmp
jne
push
loopne
lea
in
xor
fstpl
stos
in
out
sbb
sarl
in
mov
dec
mov
jb
stos
int
push
xor
shlb
sbb
add
cli
test
mov
lock
int
mov
push
in
in
xchg
lcall
es
stos
mov
and
test
movsb
xor
andb
and
fnstcw
cli
fndisi(8087
mov
out
or
ljmp
mov
subb
loop
adc
and
fcomip
das
sub
stc
movsb
icebp
inc
testb
imul
pop
push
in
xchg
sbb
cmp
imul
jecxz
pushw
mov
pop
imul
stos
adc
test
jb
add
sbb
insb
sbb
pop
sub
or
std
int
mov
push
sub
xchg
addr16
lea
dec
cmpsb
or
xchg
rorl
or
dec
cld
je
or
xchg
pop
xor
fwait
bound
repnz
ss
dec
movd
movsb
pop
cld
jbe
sbb
mov
and
xor
jae
lcall
jns
sbb
mov
addr16
jge
and
or
js
xlat
in
out
call
or
iret
hlt
inc
xlat
push
jmp
andb
rorl
aas
in
sub
sahf
repz
fistps
sbb
fimull
dec
rolb
dec
mov
aad
jbe
inc
mov
add
fucomp
add
sub
mov
push
sub
js
test
fldenv
daa
sahf
fbld
mov
je
repnz
add
xchg
mov
rcr
mov
jno
adc
lret
sub
fildll
and
das
xchg
sub
fdivp
and
inc
mov
cmp
enter
push
mov
dec
mov
xlat
dec
std
int3
sub
pop
lds
aad
adc
mov
add
xor
or
xchg
imul
xor
scas
pop
or
lods
notl
cli
jnp
ds
and
push
xchg
test
loopne
jmp
loop
subl
das
inc
into
xchg
jbe
in
jbe
push
sbb
inc
popa
add
push
daa
xchg
into
arpl
adc
or
push
mov
into
mov
add
or
int
sbb
push
jns
pop
cmpsl
xchg
call
dec
xlat
out
leave
sub
pop
arpl
popf
lahf
push
dec
enter
stc
stos
mov
addr16
shrl
add
adc
jg
xchg
pop
ljmp
pop
adc
mov
outsb
das
pop
add
dec
jb
sub
jmp
int3
inc
or
mov
pop
cmc
cmc
mov
jge
mov
pop
or
ret
lret
ss
mov
push
int
xchg
lcall
push
into
adc
xor
popf
sbb
lret
aad
in
or
ret
dec
mov
movsb
js
gs
inc
or
mov
scas
sub
mov
mov
aad
je
cmp
push
push
dec
aam
pop
daa
push
sbb
add
mov
iret
ds
jns
fcomip
stc
rcrl
iret
cmp
sbb
cmpsl
cmp
cmp
fs
add
push
push
mov
popf
jmp
fcmovbe
xorl
call
mov
ljmp
mov
jle
scas
mov
loopne
out
jno
insb
add
jb
clc
rol
mov
dec
ljmp
adc
pop
push
dec
pop
sub
ljmp
call
in
leave
nop
mov
or
sub
mov
jns
pop
adc
nop
push
cli
sbb
fiaddl
sbb
jae
add
lock
dec
stos
into
inc
call
popa
sbb
das
sbb
negb
rol
lods
adc
xchg
mov
dec
sbb
fs
decb
sahf
out
imull
cs
mov
sub
fsubrs
cltd
outsb
shl
sbb
push
ret
push
cli
pop
scas
daa
daa
iret
mov
arpl
sub
stos
lock
mov
xor
lods
insl
mov
xchg
test
pop
dec
jp
sub
lock
lcall
icebp
pop
movsb
sbb
mov
dec
mov
dec
sub
in
xor
cmp
mov
ljmp
inc
ret
lcall
xor
jo
jmp
leave
js
mov
outsl
inc
cmp
lahf
nop
cmc
sbb
and
sbb
add
xchg
cmc
pusha
and
inc
adcb
jno
mov
cmc
inc
sub
xchg
push
daa
xchg
pop
mov
cwtl
or
iret
shrl
sbb
lahf
xchg
push
es
leave
xchg
push
xchg
mov
mov
rorb
adc
in
pop
cmpsb
jbe
testl
incb
aad
mov
aas
jae
pop
nop
mov
dec
outsb
jns
push
movsl
mov
cmc
or
ficomps
push
xchg
rcr
fidivrl
in
sti
inc
mov
fcoml
out
stos
in
stos
aad
outsl
xor
dec
je
fbstp
in
and
js
in
mov
dec
and
movsl
outsl
dec
sub
push
daa
test
push
inc
xor
rolb
add
add
dec
sub
add
mov
bound
iret
mov
mov
sbb
mov
jbe
push
loop,pt
aaa
xor
imul
push
dec
sahf
cmp
jae
scas
testl
cmp
gs
pop
add
dec
xchg
insb
xor
xor
sbb
enter
mov
int3
andb
aad
add
dec
inc
push
or
test
jle
int
xchg
jns
cmp
xor
stos
push
cltd
push
out
push
dec
mov
sub
jge
jmp
dec
lret
push
xor
jne
mov
cltd
stc
mov
xchg
jo
push
adc
inc
fnstcw
push
fwait
xchg
vpshldd
mov
or
adc
cmpl
pop
bound
inc
addr16
push
mov
loope
inc
cli
iret
inc
push
adc
xor
mov
aas
jo
test
mov
aas
enter
push
inc
dec
notl
mov
and
adc
hlt
aaa
pop
ficoms
dec
dec
cli
les
fbld
adc
push
sbbb
pop
mov
jg
lret
dec
adcl
loopne
mov
jge
daa
dec
aaa
adc
jg
lods
shrl
dec
mul
pusha
xor
shl
mov
in
sbb
inc
aaa
popa
jg
cmpsl
sbbb
sub
or
divl
pop
daa
pop
add
insb
insl
jnp
ss
pop
addr16
cwtl
sti
dec
loopne
in
outsb
loopne
mov
adc
fcomp
sub
mov
add
ret
sbb
push
inc
adc
push
push
sbb
jl
cltd
gs
sub
add
and
clc
pop
lods
gs
dec
fdivp
mov
lea
movl
pop
xchg
fcomp
push
mov
push
pop
xchg
or
shl
xchg
mov
fs
mov
push
aam
rcrl
and
fadds
into
mov
pop
inc
push
or
ss
lds
call
dec
daa
mov
jo
pop
stos
rcrl
inc
or
add
dec
pop
sbb
jbe
fmull
push
xchg
outsb
fcompl
pop
out
push
cld
popf
dec
add
pop
stos
and
fnsave
pop
mov
iret
mov
pop
push
xchg
pop
push
test
mov
sbb
push
sub
cmpsb
mov
int3
inc
xor
les
cmpl
mov
popf
or
icebp
cmp
inc
shl
vmread
gs
sub
rol
mov
adc
pusha
xor
dec
xchg
sub
inc
push
and
mov
dec
xchg
mov
cmpsl
shlb
pushf
stos
add
adc
addr16
inc
pop
loopne
or
and
lods
ljmp
add
cmp
sbb
fdivrp
ja
in
aaa
enter
les
outsb
xchg
pop
fistl
mov
arpl
lods
ret
out
mov
xchg
out
out
push
inc
iret
je
cmp
loopne
cmpb
mov
dec
jp
pop
adc
fdivs
adc
dec
mov
in
sub
jg
add
scas
loope
das
bound
mov
fstps
and
mov
in
mov
mov
out
stos
clc
mov
outsl
xchg
punpckhbw
push
in
push
dec
sbb
dec
int
in
mov
js
outsb
adc
pushf
test
mov
sbb
and
inc
inc
pushf
add
mov
or
gs
hlt
data16
push
mov
jno
mov
shr
and
xor
xchg
pop
rorl
imul
and
inc
cs
mov
fs
mov
divl
gs
pop
fsubrs
lock
mov
clc
pop
mov
nop
inc
aas
fsubrs
aad
xchg
stc
dec
ja
jmp
inc
cs
adc
hlt
lret
or
cmp
mov
andl
cmc
mov
ljmp
xor
faddl
clc
adc
std
and
addr16
outsl
pop
inc
cld
sub
shll
dec
fisubs
sub
sub
gs
ja
mov
add
frstor
and
pop
in
or
out
pop
sub
xchg
scas
ljmp
mov
jns
jae
cwtl
inc
dec
xor
stc
gs
adc
nop
or
insb
xchg
add
pushf
mov
repnz
mov
dec
pushf
xor
inc
mov
lods
into
dec
mov
xchg
jge
es
dec
mov
and
mov
lea
xchg
and
jb
and
cs
imul
mov
ret
xchg
insb
pop
out
rcrl
adc
rclb
adc
cmp
sbbb
xor
jmp
arpl
or
fcoml
clc
test
adc
lret
movsl
in
cmp
adc
and
adc
andb
ret
xlat
jnp
xor
jb
dec
and
pop
cmp
push
shl
sbb
lret
jp
add
xchg
in
je
xchg
xchg
loope
or
mov
clc
cltd
pop
jne
test
lock
fmuls
leave
mov
or
int
gs
mov
mov
lahf
push
sub
jp
mov
fwait
mov
inc
scas
or
fisttpll
insb
dec
std
lods
xchg
test
popa
inc
imul
sub
insl
mov
jp
adc
stc
aad
or
xchg
aad
jae
in
lods
mov
cmp
ljmp
scas
add
push
push
fildl
sub
rcrb
or
xor
mov
mov
pop
cli
inc
mov
andl
sub
out
stc
cmp
das
insb
push
jmp
jne
repz
mov
cmc
arpl
sti
xor
xor
adc
lret
inc
push
cmc
pushf
ret
addr16
insb
jo
data16
lahf
sbb
sbb
push
outsb
in
lret
jle
aaa
add
rcl
xchg
data16
mov
mov
and
arpl
ss
es
insb
or
jns
and
inc
mov
xor
xchg
mov
pop
jo
mov
sub
sbb
dec
clc
je
or
jmp
push
push
push
pop
fisubl
test
cmc
pop
sub
xchg
outsl
in
stos
lds
push
shrl
mov
mov
rcrb
lods
jecxz
lahf
xchg
pushf
daa
lds
in
fsubs
out
rclb
pop
sti
xchg
popa
pop
or
mov
cld
lret
adc
inc
mov
mov
or
cld
fprem
aad
xor
mov
in
push
ret
rcll
mov
stc
aas
cmp
sub
push
jnp
int3
jg
xchg
cmp
in
data16
cmpsl
jg
cwtl
popf
fwait
sbb
mov
dec
sub
mov
int
lods
xor
scas
inc
insb
push
cvtdq2ps
xor
xlat
add
adc
push
mov
jae
jecxz
sbb
pop
movsl
dec
out
call
test
pop
sti
push
jl
inc
not
out
xchg
gs
scas
sti
sub
xchg
mov
sbb
xor
cltd
adc
in
loop
addr16
mov
stos
out
sti
js
dec
pop
jmp
dec
inc
mov
lea
mov
outsl
je
inc
ficomps
push
cmp
outsl
jmp
fsubrp
cmp
enter
mov
sbbb
xchg
cwtl
orl
aad
cmp
push
mov
dec
sbbl
sbb
test
jmp
aam
test
mov
fiaddl
cwtl
out
add
sbb
pop
fstpl
out
inc
cli
mov
push
sahf
mov
dec
jg
ja
cltd
test
pop
ds
jno
cwtl
cltd
imul
movsb
aam
in
pop
lret
cwtl
mov
inc
and
leave
les
test
out
mov
pop
cmc
imul
push
adc
movsb
jo
dec
mov
mov
shrl
add
push
scas
add
adc
add
cltd
add
rorl
dec
sub
xchg
or
add
mov
shl
pop
hlt
sub
iret
jmp
rol
or
push
iret
and
cmp
mov
fcoml
js
daa
add
push
fmuls
inc
mov
inc
aaa
or
scas
push
pop
mov
dec
ret
insb
xchg
fistl
add
xchg
and
call
nop
push
lcall
ja
aad
call
int3
aaa
pop
scas
or
mov
shrl
call
xchg
cmp
pop
sub
or
orb
lods
jne
aad
sub
cmp
sub
or
push
lahf
leave
jg
out
or
push
scas
or
xrelease
add
out
insl
bound
jl
lahf
xor
dec
jg
or
outsl
subb
mov
aas
cwtl
test
loopne
pop
ljmp
lods
xchg
aad
adc
aad
iret
xchg
repz
pushf
xchg
imul
cltd
adc
pop
dec
lret
scas
and
inc
stc
shlb
rcrl
lcall
pop
adc
clc
mov
jmp
pop
add
pop
cmp
cld
and
mov
push
fiaddl
inc
loop
cmp
data16
push
adc
fdivrs
mov
fs
cmp
mov
xchg
rcll
bound
mov
insl
idivb
cli
nop
out
testl
xor
or
cmp
icebp
add
or
lret
cmc
xchg
shl
cltd
lds
lcall
sbb
cli
addr16
test
daa
rolb
mov
dec
mov
mov
movsb
dec
fistpl
and
pop
fcomip
mov
inc
jp
add
fisttpll
inc
fs
cli
inc
pop
mov
sbb
pop
pop
pushf
mov
fs
sbb
clc
insb
add
data16
loop
jne
xchg
mov
stc
jo
pop
int3
push
or
in
sub
jle
andb
push
cli
xorb
sub
dec
cwtl
mov
cmp
inc
mov
xchg
cmpsl
ffreep
mov
outsb
in
ret
inc
inc
inc
xchg
icebp
mov
rcl
add
sbb
push
jecxz
cltd
cmp
rolb
or
sub
mov
std
push
imul
pop
std
mov
xor
cltd
jmp
jno
or
push
fs
sub
inc
rcll
mov
je
xchg
add
rclb
dec
test
in
lea
mov
or
dec
mov
inc
ljmp
lahf
mov
push
scas
xor
inc
cmpb
push
mov
mov
ret
lock
jne
cmc
je
pop
stos
lea
cwtl
cmp
cmp
add
xchg
mov
cmc
ror
xor
or
scas
jp
pop
testl
or
out
mov
ficomps
jae
push
pop
and
add
sbb
jbe
jg
push
ljmp
adc
sahf
pop
sub
mov
imul
ret
mov
mov
xchg
daa
dec
aam
fnstenv
dec
dec
xor
scas
movsl
mov
dec
ds
rolb
mov
call
inc
mov
add
testb
xchg
inc
mov
subb
fs
cltd
sbb
call
dec
pop
sub
sarb
aaa
inc
in
ret
outsb
jno
mov
outsb
out
adc
sbb
pop
sub
dec
rclb
push
movd
mov
fs
cld
and
decl
xchg
xchg
je
or
adc
sub
rol
sar
and
dec
loopne
test
addr16
or
xchg
sarb
in
push
mov
popa
or
and
add
outsl
inc
dec
sub
leave
pusha
pop
popa
scas
aas
arpl
xchg
fcomps
xor
fisubrs
les
dec
in
mov
xchg
push
push
roll
mov
inc
leave
mov
in
aad
bound
add
or
add
insl
in
and
xor
adc
mov
push
xchg
sub
jp
push
xor
jecxz
stos
adc
repz
imul
push
dec
pop
mov
pop
sti
jne
call
xchg
aaa
addr16
ds
jns
fbld
push
pop
pop
aam
std
pop
jbe
neg
pop
pop
add
inc
pop
mov
pop
ja
test
test
fwait
les
and
call
data16
fisttpl
sbb
adc
inc
rcr
xchg
cmpsb
je
lods
insb
jmp
daa
or
pop
inc
cmp
aas
repnz
stc
push
in
shrb
sub
pusha
stos
mov
imul
xchg
xor
or
int3
cwtl
push
decb
es
lock
mov
dec
fwait
ret
popf
xchg
adc
inc
dec
out
mov
xchg
sub
divb
bound
clc
lods
xor
jo
ja
movsl
sbbl
test
ret
mov
dec
iret
scas
sub
xchg
jl
xor
and
pop
add
sbb
mov
movsl
jecxz
daa
jp
mov
xchg
and
dec
jmp
push
arpl
push
or
inc
sbb
add
or
xor
int
lret
mov
mov
loopne
addr16
cmp
scas
in
mov
jmp
testb
daa
add
sarl
and
addl
mov
add
xlat
pop
cvtpi2ps
xor
mov
aam
or
mov
repz
bound
cmp
add
je
mov
jne
pushf
push
aad
rolb
push
imul
pop
cld
push
mov
push
scas
cwtl
pop
adc
mul
fistps
clc
sbb
xor
inc
fdivs
sub
jo
out
pushf
shl
mov
ljmp
mov
fmulp
xchg
dec
pop
and
cmpsb
pop
mov
stos
icebp
xchg
or
push
movsb
insb
xor
add
xorl
addb
add
fildl
pop
rorl
jae
jbe
xlat
out
jne
inc
push
sub
xorb
and
push
maxps
js
dec
jmp
adc
lea
add
add
mov
fs
push
out
insl
push
ficoml
xchg
icebp
add
or
pushf
mov
ss
cwtl
add
sbbb
push
sbb
and
mov
add
aaa
roll
mov
push
lret
sbb
pop
inc
out
daa
movsl
push
sub
or
push
or
stos
in
aad
jno
fcomip
pop
pop
dec
test
test
add
scas
xchg
insb
lret
sahf
pop
xchg
push
leave
pop
shll
dec
mov
fs
fs
js
data16
pop
jbe
loope
xor
xor
fimuls
rclb
pop
aas
mov
sub
mov
sarl
sub
adc
out
nop
lock
cltd
cmp
orl
sub
jle
clc
mov
mov
test
pop
sbb
movsl
lods
xchg
in
sbb
mov
and
xchg
outsb
push
negb
mov
mov
in
push
orb
ja
lcall
mov
cmp
mov
cmp
cmpsl
jg
loop
fistpll
sub
sub
sub
shl
sub
ss
mov
xchg
insl
jbe
xchg
movsl
cmp
lcall
hlt
loope
inc
stos
cmpsb
test
inc
pop
inc
mov
sarl
arpl
mov
cmp
cwtl
popf
aad
xchg
jne
jnp
and
mov
pusha
aad
ss
inc
dec
jnp
inc
shr
adcl
adc
cmpsb
clc
lret
ljmp
test
int3
pop
cmp
arpl
jnp
and
cmp
xchg
int3
jmp
clc
pop
or
insb
and
jns
stos
mov
adc
cmp
and
lods
mov
stc
mov
lods
movsl
imul
sub
add
cltd
sbb
jg
push
dec
iret
enter
cltd
sbb
pop
gs
icebp
lods
test
mov
add
mov
test
and
inc
ret
pushf
inc
sub
popa
adc
lods
sub
mov
pop
mov
imul
xor
imul
sub
lahf
out
jle
hlt
mov
jg
add
add
jmp
push
faddl
pop
loope
imulb
dec
leave
jecxz
loopne
mov
out
int3
ror
stos
imul
addr16
mov
mov
test
loop
stc
insb
pop
jo
into
outsl
xchg
sbb
pop
test
in
orl
aaa
les
test
jns
mov
rcl
jbe
mov
sub
pop
adc
and
les
push
stos
xor
inc
shrb
mov
xchg
mov
dec
vmwrite
aaa
inc
popf
add
outsl
test
sub
jmp
scas
mov
into
ret
jbe
mov
fcomp
insl
sbb
ret
jge
inc
add
inc
loope
nop
imul
leave
pop
sbb
iret
ret
dec
jo
outsl
inc
adc
mov
ds
cmc
cmp
leave
in
mov
push
sub
and
mov
aaa
mov
ja
sbb
push
mov
push
cltd
dec
lret
push
jge
cmpsb
int3
mov
jmp
cs
pop
mov
xor
in
mov
inc
imul
insb
push
push
dec
xchg
int3
xor
add
dec
sub
into
in
and
call
and
ljmp
jecxz
cmc
push
mov
std
push
mov
add
popf
cltd
in
cmp
into
cmpsl
pushf
mov
xchg
pop
outsl
hlt
flds
mov
xchg
xchg
inc
lea
mov
arpl
sbb
mov
neg
or
add
mov
inc
lods
and
jb
pop
rolb
gs
push
or
mov
das
out
out
in
cmp
movsl
sahf
mov
xchg
sbb
lock
aam
pop
lahf
adc
push
bound
ret
add
int3
cmpl
and
cmpsb
inc
jo
dec
mov
sbb
je
xchg
divl
gs
xor
ror
lahf
mov
xor
mov
pop
testb
mov
mov
and
xor
pmuludq
jno
adc
xchg
outsl
cmp
fisubrl
mov
popf
frstor
scas
xchg
push
mov
add
cmp
sbb
das
inc
and
aad
loop
insl
je
mov
loop
sub
pop
int
pop
sub
and
mov
movsl
mov
jbe
adc
pop
sarl
cmpsl
insl
dec
in
sub
dec
addr16
cmpsl
sub
cs
push
inc
inc
mov
adc
out
rcrb
sub
lret
and
lret
ds
stos
add
sarl
shr
aam
pop
sub
outsl
clc
cmpsl
cmp
es
ret
lock
cmp
call
jecxz
aad
pop
adc
out
mov
pop
pop
mov
jnp
mull
mov
in
cmp
mov
aad
xchg
cmc
test
mov
sbb
dec
sti
jno
movsl
sub
adc
pop
addr16
jne
and
pop
cmp
mov
and
pushf
and
bnd
jne
pop
fstpl
aas
dec
aas
jns
jbe
or
sbb
dec
lds
inc
nop
jg
mov
in
shlb
mov
cmp
jmp
sub
mov
in
pop
pop
xor
mov
psubsb
ljmp
xchg
xor
and
mov
jp
xor
in
jmp
out
imul
xchg
inc
stc
or
leave
mov
call
daa
xor
mov
sub
call
test
sti
mov
fisttps
mov
mov
js
sub
xchg
sub
mov
dec
jmp
mov
pop
add
in
pop
pop
testl
pop
test
ds
or
fnstcw
sub
repnz
and
rcrb
gs
stos
push
in
fdivl
xor
lahf
mov
imul
pusha
sbb
pop
add
fsubl
jnp
rcl
add
dec
aas
les
inc
xor
movb
adc
adc
sub
jl
test
pop
jo
out
lret
fldcw
mov
dec
lea
inc
decb
das
mov
and
jmp
lea
punpckhdq
ret
pop
mov
aad
cmp
dec
je
dec
cmp
sbb
stos
imul
div
fadds
add
loope
pop
sti
daa
jecxz
adc
rolb
and
push
adc
push
loope
xchg
dec
popa
dec
or
or
or
push
das
fsubrl
jno
and
pop
xchg
jmp
clc
dec
mov
push
loopne
jne
stos
sub
out
lret
std
rcrl
and
mulb
lret
dec
mov
pop
push
fnstcw
arpl
inc
push
negb
mov
icebp
les
pushf
sbb
arpl
out
int
push
pop
and
in
and
adc
lock
xchg
pop
xchg
pop
ror
xorl
dec
sbb
mov
pop
jnp
jnp
or
cmp
popf
daa
movsb
cmpxchg
push
insb
push
jge
sub
in
insl
aas
popa
test
inc
xor
cmp
inc
adc
jge
push
jle
test
movsb
jge
xor
mov
pop
lsl
andl
popf
add
xor
ror
and
sti
test
daa
xchg
in
cmpsb
cmp
test
pop
mov
imul
cltd
fwait
ss
add
push
jle
sbb
xchg
cmp
das
mov
js
xchg
mov
js
cmpb
push
flds
mov
mov
cmp
pop
data16
out
cld
ja
dec
imul
add
xor
pushl
pushl
mov
call
mov
jmp
xchg
roll
push
mov
mul
testb
mov
jle
jp
lods
jbe
mov
xor
cmpsl
aas
sbb
sub
pop
subb
mov
fdivs
push
loopne
std
sub
mov
ret
mov
xchg
or
sub
popa
push
inc
sub
push
cmp
test
repnz
fistpl
xor
add
mov
jbe
push
daa
movsb
mov
sti
push
push
sti
mov
mov
mov
test
dec
fisttpl
jno
lcall
dec
andb
pop
lea
cltd
leave
stos
jge
push
cmp
add
jns
pop
cwtl
nop
xor
add
cmp
in
mov
xor
lock
dec
jbe
and
pop
add
cmp
cmp
imul
sbb
test
cmpsl
pop
popa
or
sti
fildl
cmp
fdivrs
decb
iret
mov
cmp
sub
adc
pop
ds
or
xor
pop
pop
or
les
popf
inc
mov
pop
outsl
push
out
cmp
jbe
inc
pop
repnz
xor
ss
lret
xor
std
out
sbb
push
xchg
je
jmp
nop
cmp
addr16
mov
adc
lahf
adc
lods
and
insl
aaa
mov
push
lahf
push
in
ljmp
xor
in
mov
cmpsl
ljmp
dec
sarl
pop
push
call
jno
cmp
int
push
xchg
sti
or
shrl
sti
jnp
jb
sub
lods
dec
out
pop
lods
sub
ss
scas
sbb
push
ret
gs
jns
aam
rcll
rcll
cmp
jle
jns
cltd
cltd
xchg
mov
sarb
out
test
rorb
sub
popa
stos
jle
mov
dec
and
aaa
pushf
aaa
sub
jnp
cmpsb
imul
dec
add
xor
sbb
mov
sub
xor
pop
repz
push
mov
add
stos
adcl
out
pusha
or
mov
sbb
mov
dec
ss
push
dec
mov
dec
and
sbbl
push
shlb
mov
movsl
out
aaa
jb
out
sbbl
xor
add
or
mov
stos
cmpsl
adc
mov
arpl
movsl
sub
pop
pop
scas
sbb
sub
lcall
jmp
outsl
push
push
lret
mov
daa
aad
adc
fwait
or
and
adc
and
jecxz
aas
ds
sbb
ds
pop
fwait
int
dec
push
dec
mov
mov
mov
test
test
cmp
clc
sub
dec
mov
add
in
mov
sub
mulb
in
cli
cs
cmpsb
mov
sarb
lahf
cltd
sbb
icebp
popa
lods
add
and
dec
aaa
inc
or
mov
stc
inc
bound
mov
sub
aas
stc
out
dec
in
sbb
mov
mov
cmp
and
lcall
xor
cmp
in
inc
mov
iret
loop
loop
mov
mov
sti
stos
daa
xor
or
sbb
ljmp
xchg
pushf
or
in
jb
les
test
xchg
xchg
and
test
sarl
fnstsw
lods
repnz
mov
push
mov
pop
xchg
jnp
mov
xchg
pop
into
pop
jp
cmpsb
cltd
pop
add
inc
cmp
pop
test
test
mul
ds
lea
enter
push
fwait
negl
test
push
pop
cmp
ds
call
add
ficoml
jnp,pt
in
out
cld
add
adc
push
mov
test
jns
or
pop
shrl
jbe
dec
popf
sbb
mov
fwait
jl
push
rcr
mov
cltd
out
jb
int3
cmp
hlt
and
rorl
inc
mov
mov
pop
xor
sbb
stos
sub
adc
pusha
jae
xor
pushf
sbb
mov
cmpl
pop
and
lahf
mov
sarb
inc
outsl
cmp
push
int
ficomps
mov
sub
and
jmp
decb
sub
or
stc
or
or
add
pop
pop
leave
ret
push
mov
sub
movl
movzwl
and
mov
lea
adcl
mov
mov
adc
push
add
mov
orl
mov
movl
cmpl
je
cmpl
jge
jmp
push
pushl
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
mov
mov
orl
mov
mov
addl
xor
add
subl
mov
movzwl
sbb
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
mov
mov
add
neg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
push
push
pushl
call
jmp
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
andl
xor
or
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
jne
mov
adcl
xor
mov
sub
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
addl
push
call
sbbl
test
je
xor
movl
jmp
movl
xor
mov
mov
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jb
mov
andl
xor
or
inc
mov
cmpl
jl
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
lea
xor
mov
movzbl
add
lea
mov
movzwl
add
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
push
push
push
xorl
mov
andl
xor
or
inc
mov
cmpl
jg
jmp
push
push
pushl
push
push
pushl
call
cmpl
jb
xor
mov
sbbl
add
mov
mov
cmp
jne
sbbl
mov
mov
or
mov
mov
xorl
mov
xor
xor
add
mov
sub
mov
mov
add
xor
andl
xor
or
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sub
mov
mov
and
mov
mov
xor
mov
sbb
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
push
push
pushl
call
cmpl
jb
mov
movl
mov
xor
or
sub
mov
mov
and
movl
sub
mov
mov
mov
mov
xor
mov
xor
xor
addl
add
sbb
mov
xor
xor
adcl
add
movl
lea
movl
cmp
movl
ja
xorl
mov
sbbl
xor
andl
lea
push
mov
xorl
xor
sbbl
lea
push
xor
add
or
mov
pushl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
push
call
cmpl
jb
mov
or
xor
lea
not
mov
movl
mov
xor
sbbl
xor
sbbl
add
mov
xor
movl
lea
cmp
movl
jbe
mov
mov
mov
or
mov
or
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
mov
andl
sub
sbbl
xor
movl
mov
mov
mov
mov
cmp
movl
jne
lea
mov
andl
lea
xorl
mov
mov
test
je
movzwl
sub
mov
and
mov
sbb
mov
mov
xor
add
sub
imul
mov
xor
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
addl
inc
ret
push
mov
push
movl
dec
mov
sbbl
movsbl
xor
xor
or
mov
mov
mov
adc
sub
movzwl
sbb
mov
orl
xor
cmp
movl
jne
adc
mov
push
sub
mov
andl
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
xor
mov
xor
mov
sub
movl
add
push
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
mov
xor
sbb
xor
mov
add
movl
add
movl
imul
mov
mov
movl
cmp
je
not
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
sub
movl
sub
push
adcl
movl
mov
push
movzwl
or
mov
mov
xor
push
movzwl
add
mov
mov
add
andl
mov
mov
sbb
mov
test
movl
je
xor
mov
mov
mov
and
mov
xor
adc
add
and
mov
xor
mov
subl
xor
orl
add
sub
mov
mov
and
mov
xor
add
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
call
cmpl
jb
mov
mov
xor
add
adc
mov
sub
lea
addl
xor
adcl
xor
cmp
je
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
mov
addl
xor
add
movl
cmp
movl
jne
sbbl
pushl
subl
call
mov
mov
xorl
mov
sbbl
xor
adcl
add
movl
cmp
je
sbbl
pushl
orl
pushl
andl
call
mov
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
add
movl
cmp
movl
je
mov
or
mov
sub
mov
and
mov
adc
mov
add
movzwl
sbb
mov
andl
mov
mov
andl
add
adcl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xorl
add
mov
movl
jmp
sbbl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jb
mov
addl
add
movzbl
or
mov
mov
mov
xorl
mov
movl
xor
addl
add
movl
cmp
je
jmp
mov
movl
mov
orl
xor
adcl
add
movl
cmp
mov
je
mov
xor
movl
add
movl
cmp
je
adcl
lea
subl
push
sbbl
pushl
subl
pushl
adcl
call
subl
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
add
add
add
add
add
add
add
add
add
push
cmp
add
add
add
push
push
inc
push
imul
test
mov
add
add
pop
push
popa
ja
inc
popa
je
pop
inc
outsb
arpl
gs
popa
je
inc
imul
in
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
sbb
sarb
xchg
jg
xchg
jo
sarb
mov
push
xor
mov
std
xchg
jp
pcmpgtd
ss
inc
mov
inc
ss
es
hlt
insl
jnp
pop
inc
mov
pop
pop
divl
mov
mov
ss
pop
packsswb
movsl
lds
jp
push
mov
xchg
jno
jge
jp
mov
mov
ss
pop
push
movsl
adc
jp
mov
push
pop
cmp
xchg
push
jge
jp
and
mov
mov
icebp
out
mov
xchg
int
out
divl
jb
xor
sub
jae
mov
xchg
or
jp
mov
sub
mov
mov
sub
mov
mov
sub
mov
mov
jmp
mov
lret
fildl
shl
mov
icebp
out
adc
and
sub
sub
xor
mov
mov
jp
jp
sub
cmc
sub
mov
mov
sub
jl
jp
xor
mov
xchg
add
jp
jmp
jnp
shrl
jbe
jp
sub
lcall
lods
mov
mov
divl
mov
mov
jg
cmc
xor
rcll
jnp
jnp
dec
mov
mov
frstor
jp
cmc
icebp
push
jnp
jnp
cmp
icebp
dec
jnp
jnp
cmp
icebp
cmp
jnp
xor
jmp
cmc
repnz
jp
xor
jmp
cmc
repnz
jp
xor
add
jmp
cmc
repnz
jp
test
jp
sub
inc
mov
stc
jg
jp
xor
cli
out
jge
jp
jb
xor
cli
out
jge
jp
jp
cmp
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
