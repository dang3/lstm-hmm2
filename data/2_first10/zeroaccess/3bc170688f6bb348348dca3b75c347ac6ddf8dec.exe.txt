push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
fimuls
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
inc
xor
mov
imul
aaa
sbb
dec
and
loopne
stc
cmpsl
mov
out
aas
mov
xor
cld
aaa
repnz
push
pop
mov
es
cmp
mov
push
in
aaa
xchg
pop
sbb
sub
mov
sub
xchg
shll
cmpsl
jg
mov
pop
cli
push
stos
ja
xor
mov
cld
xor
sub
sbb
shrl
or
ja
pusha
int3
or
xchg
stos
shll
inc
stc
mov
dec
repnz
js
xorb
rorb
out
stc
repnz
sbb
daa
sub
pop
in
inc
mov
sti
loopne
mov
xchg
popf
cmp
fwait
xchg
out
push
addr16
inc
je
pop
sub
cld
cli
sub
fisttpl
push
ss
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
ljmp
jle
jg
jle
rorb
je
and
mov
shlb
mov
xor
cltd
push
test
lahf
pop
xor
sahf
xor
imul
xchg
mov
dec
mulb
das
mov
imul
in
or
pop
aam
icebp
pop
cmp
mov
pop
jmp
and
mov
jbe
mov
fisubrs
mov
outsb
rorb
lods
dec
ljmp
add
call
les
and
or
mov
push
lods
loope
jl
and
test
cs
ja
pop
into
aaa
icebp
inc
outsw
fnstcw
xchg
inc
or
mov
sub
test
mov
or
dec
adc
les
mov
orb
lcall
xor
in
jb
out
fadd
sti
mov
pop
xor
dec
inc
ficomps
add
push
das
push
xchg
mov
cli
sub
jno
or
ds
lret
fcoml
mov
pop
pop
xchg
icebp
aam
scas
inc
dec
aad
mov
adc
push
pop
xchg
stos
and
outsl
fsubrs
jge
and
cmp
cmc
into
inc
mul
addr16
clc
jge
fadd
sub
push
jge
popa
cmp
ror
and
rclb
xchg
insb
pop
mov
je
or
jmp
pop
dec
loopne
mov
sub
sahf
addb
xchg
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
and
cli
jg
jle
add
dec
int
popf
cmp
repz
and
or
lods
inc
loopne
stos
cmpsb
mov
mov
push
shlb
pop
sub
and
sbb
sar
imul
jne
aad
sub
lds
jnp
xchg
test
aam
fldt
cmpl
inc
dec
test
sbb
or
pop
cmp
incl
pop
mov
jg
imul
or
shlb
dec
negb
int3
xchg
iret
out
mov
cmc
rcrb
in
int3
aam
sub
stos
mov
push
lods
sbb
sub
les
aam
pop
cmp
in
inc
cltd
lds
cltd
repnz
xchg
dec
repnz
cwtl
jg
sbb
rclb
std
push
ss
loop
shll
call
ds
repnz
loopne
jno
pushfw
dec
data16
inc
icebp
loop
adc
fdivrl
add
pop
adc
mov
jb
mov
clc
andb
jecxz
xor
loopne
sbb
dec
pop
xor
inc
mov
jecxz
inc
arpl
xor
xchg
xchg
sub
ljmp
sub
sbb
int3
test
je
fs
mov
and
and
dec
jle
mov
fs
popf
pop
xor
push
inc
pop
mov
sbb
pop
mov
dec
mov
lds
or
mov
int3
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
or
jle
jg
jle
xor
inc
inc
stc
xor
loop
test
inc
push
mov
dec
test
dec
xor
sub
shrl
sarl
pop
jne
mov
ja
ljmp
cwtl
in
sbb
rolb
std
push
out
jmp
and
repz
push
dec
add
inc
jb
in
sub
es
jg
sbb
outsb
xchg
cmp
sbb
or
lods
sbb
rclb
pop
into
mov
fisubrs
inc
pop
xor
mov
loope
lea
outsl
mov
ret
cmpsb
repnz
xchg
aad
scas
mov
mov
jecxz
cwtl
lahf
int3
mov
sub
mov
xor
out
leave
pushf
mov
pop
ret
shll
repnz
in
jle
xlat
test
sbb
add
shrb
inc
jbe
data16
sbb
fadd
clc
pop
sbb
add
out
jp
pop
xor
cmp
test
mov
push
push
lret
dec
xchg
adcl
inc
cmpsb
adc
pop
sbb
cmpsl
jl
js
cmpsl
or
push
std
stos
aas
in
and
mov
popf
cmp
fildll
mov
jne
aam
add
inc
clc
in
jbe
pop
inc
sti
xlat
nop
push
sbb
jecxz
dec
sbb
lret
mov
fmuls
mov
test
jg
mov
adc
jle
aad
and
dec
mov
xor
pop
mov
pushf
add
add
jmp
push
dec
test
js
jle
jg
jle
and
inc
in
std
les
jl
mov
jne
pop
jmp
xor
aaa
mov
inc
daa
jge
inc
pop
sbb
negl
fbld
nop
roll
mov
lods
mov
fimull
in
sub
sbb
mov
gs
jnp
or
stc
lds
cltd
imul
lret
pop
repnz
std
adc
or
cs
lods
lret
mov
pop
pop
dec
pop
sarb
shl
pop
cmp
pop
ret
mov
pop
bound
rol
stos
testb
pop
or
js
jle
xor
mov
hlt
ljmp
test
data16
lret
in
cli
mov
sub
daa
and
aaa
xor
push
push
adc
mov
inc
sbb
mov
mov
or
xor
sub
aaa
mov
stos
mov
inc
aas
ljmp
popa
jbe
and
sbb
mov
movsb
movups
jl
cmp
loopne
xor
dec
shrl
loop
mov
or
imul
mov
or
incl
mov
xchg
adc
mov
cld
pop
adcb
adc
shlb
lods
out
sbb
jbe
jl
mov
push
test
data16
sbb
push
mov
mov
lret
mov
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
sbb
push
ljmp
jle
clc
xor
push
cmp
fsubs
xor
rcll
lea
out
xchg
pop
cmp
mov
pop
xor
data16
ss
nop
dec
push
inc
mov
test
jge
mov
xchg
jbe
imull
cmp
arpl
push
stc
pop
imul
movsl
cmpsl
jne
addr16
int3
mov
inc
pop
in
aas
stos
xchg
and
mov
je
lds
and
call
jmp
xchg
mov
pop
ss
stos
test
xchg
testl
shlb
add
daa
test
push
fstl
push
push
or
ret
sbb
xchg
mov
insl
outsb
jge
sbbl
js
mov
jg
lret
mov
jo
icebp
and
in
mov
orl
xchg
jne
add
jl
pop
into
cmp
cmc
pop
and
mov
mov
mov
mov
fisttpl
pusha
sub
cmc
fnstsw
outsb
mov
ret
or
fsubs
fs
mov
mov
add
add
lret
xor
fisubrl
icebp
shrb
mov
shrl
push
and
adc
push
push
cld
cs
test
xor
push
arpl
rclb
andl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
xchg
push
pop
jle
cli
jg
jle
ret
xor
jno
hlt
in
rorl
dec
add
loop
push
sbb
out
jae
iret
fcoml
jl
sub
jl
shrb
stos
lea
test
test
adc
push
lcall
jns
jmp
cmp
jbe
mov
xchg
icebp
shlb
adc
mov
dec
fsts
pop
insb
xchg
cmp
rcrb
xchg
and
ficompl
imul
sbb
xlat
jge
popf
ret
cmp
inc
lods
push
iret
sub
sahf
mov
mov
dec
inc
xor
push
cmc
ljmp
outsb
pushf
das
jbe
inc
inc
fsts
mov
test
popf
test
lods
std
or
xchg
cli
or
int
hlt
jne
xchg
jmp
dec
stos
aas
push
aaa
icebp
sbb
ret
cmp
jbe
insb
lret
ret
sub
dec
test
lock
rcll
popa
stc
pop
popa
mov
fs
and
push
jl
sarb
inc
dec
mov
sbb
ds
sub
dec
call
cmp
hlt
rcrb
sub
inc
adc
in
outsb
mov
or
lea
insl
adc
and
jl
fwait
jae
int
pop
adc
rclb
fdivs
mov
xchg
shrl
js
inc
sub
ret
jge
aad
enter
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
movsl
lods
mov
lock
xchg
lods
lret
push
mov
jl
adc
jecxz
je
xchg
mov
jbe
push
pop
mov
stos
hlt
jle
inc
or
mov
or
add
jbe
jno
and
mov
mov
xor
fisubrs
test
xchg
cmp
lahf
out
into
in
xchg
mov
pop
fsubr
push
push
jle
adcl
add
cmp
sahf
or
inc
imul
cmc
mov
mov
jns
sub
mov
cmpsb
jnp
mov
mov
in
fstpl
or
adc
mov
pop
subb
pushf
inc
das
je
xor
dec
adc
aas
or
test
loope
imul
push
push
pop
push
xchg
inc
inc
pop
ljmp
ja
sbb
pop
enter
xchg
pushf
cmp
popa
test
out
adc
mov
add
lods
pop
jmp
mov
cwtl
ficoms
xchg
dec
fldl
xlat
data16
lret
loope
sub
jne
scas
sti
xchg
inc
pop
adc
les
lods
and
addr16
jecxz
pop
inc
dec
xor
adc
pop
jg
std
test
cld
cmp
inc
lret
inc
rolb
popa
jne
xor
inc
fsubrl
popa
add
lds
icebp
lods
inc
popa
rorl
jb
mov
cli
in
mov
iretw
push
sub
pop
sbb
inc
call
add
pushf
add
add
dec
and
jno
push
mov
sahf
mov
jle
cli
jg
jle
add
sub
rolb
mov
mov
sbb
ficoml
mov
jns
jo
add
int
std
pop
lahf
movl
les
cmp
dec
test
mov
xor
adc
mov
or
insb
mov
pop
sbb
shll
sbb
insl
jae
add
lods
sbb
mov
in
jg
push
fstpt
fwait
xchg
sub
shl
jg
jnp
jp
fmuls
mov
mov
addr16
cltd
das
test
ljmp
jno
push
xor
adc
cmpsb
ret
shl
shll
inc
xchg
pop
gs
iret
cld
pop
fdivrs
cmp
loope
sahf
and
mov
jnp,pn
fucomi
jl
out
dec
arpl
insb
lret
clc
lods
sar
lds
adc
jno
xchg
in
sahf
ja
movsb
movsl
arpl
pop
xor
or
test
mov
adc
adc
mov
aas
sbb
cwtl
icebp
xchg
jl
jmp
enter
push
enter
and
sbb
movsl
or
imul
adc
add
cld
into
push
push
sti
adc
cmp
imul
jb
jae
loop
mov
dec
push
daa
insl
cmp
lret
in
sbb
stos
push
clc
dec
nop
sub
jmp
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
js
cmp
lcall
jle
xchg
mov
xchg
ret
jno
scas
mov
cmp
xchg
lock
movsb
and
add
stos
cmp
out
mov
retw
cmp
mov
xchg
push
adc
mov
adc
in
jle
pushf
sahf
mov
pushf
lcall
fildl
pop
ds
push
fmuls
xor
addr16
in
xchg
xor
stos
jecxz
pop
cld
or
xor
cmp
or
fwait
xor
mov
and
je
cwtl
inc
pop
cmp
jae
jl
pop
int
test
mov
lock
add
xchg
jmp
ds
mov
pop
aaa
or
leave
repnz
jp
mov
cmp
jno
xor
jb
testb
cmp
leave
sti
pop
fstpl
daa
jle
js
or
fildl
cmp
adc
xchg
call
mov
repnz
sbb
fs
mov
xchg
or
les
sbb
xlat
and
fcomps
je
jns
cltd
or
int
dec
pusha
mov
les
and
ret
jge
push
xchg
loop
cmc
testb
lret
sbb
ss
xchg
into
push
outsb
mov
ret
jmp
aaa
test
loope
lahf
mov
andl
clc
add
pusha
inc
xor
cltd
mov
pop
lea
mov
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
mov
jle
cli
jg
jle
xchg
aas
push
arpl
pushf
shll
sub
push
xor
out
pop
sbb
popf
xor
fs
imul
push
insb
mov
daa
pop
adc
mov
add
jecxz
addr16
jno
loop
lret
mov
das
pushf
pop
mov
faddl
les
mov
and
and
jp
in
in
mov
pusha
in
dec
js
or
sub
repnz
push
pmuludq
shll
mov
xor
lcall
sub
or
jns
xor
and
add
in
negl
sub
fwait
idivl
aam
aaa
fcoms
and
pop
inc
push
mov
jno
xlat
inc
cmpsb
lods
mov
test
push
xchg
push
mov
cmp
sbb
aad
ds
mov
jb
ret
test
sar
js
mov
push
inc
pop
mov
cwtl
inc
xor
in
repz
push
lcall
xlat
and
ds
cltd
xchg
xchg
inc
mov
or
pop
xor
jae
xchg
adc
popa
mov
push
jns
ss
nop
std
das
fucomi
out
dec
dec
rorl
ljmp
int3
mov
adc
in
jp
inc
push
sti
push
xor
loop
ds
push
std
mov
adc
jne
testl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
dec
sub
xchg
mov
jg
jle
test
cmp
int3
mov
sbb
std
fs
pop
dec
stos
xchg
addr16
lcall
dec
mov
lock
xor
add
sahf
xor
in
cmp
cmp
sbb
fists
cld
push
addr16
fcompl
cld
sbb
sarb
out
insb
std
push
or
into
jne
out
add
outsl
outsb
in
insl
or
mov
movsb
ficoms
adc
dec
mov
sbbb
loop
stc
jne
jp
push
aad
cmp
cmc
inc
mov
jge
adc
inc
pop
ret
mov
test
xchg
xor
jae
cmpsl
ja
pushl
mulb
and
push
scas
or
out
loope
leave
cmp
lcall
mov
sbb
mov
shrl
mov
dec
inc
or
out
mov
into
stos
jecxz
xor
mov
pop
lea
push
imul
int
repz
fs
pop
fnstsw
mov
push
movsb
dec
cmc
rclb
shlb
jo
test
std
xor
ljmp
pop
ret
cmp
xor
mov
out
int
dec
icebp
or
and
sbb
cs
dec
jbe
test
add
outsl
mov
pusha
lret
ss
push
fdiv
jno
lea
ja
addl
push
lods
mov
mov
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
imul
or
jle
jg
jle
sbb
fs
cmp
and
mov
xor
cmpsb
rcrl
into
jo
shrl
adc
cli
mov
pop
int3
adc
bound
jns
divb
inc
sub
stos
mov
jb
xchg
jge
enter
push
imul
mov
push
out
ja
fmul
push
loop
out
jg
lock
mov
mov
xor
push
or
jno
ja
leave
jo
pop
pop
fcomps
in
hlt
mov
and
cmc
jp
arpl
test
fidivl
rcrl
les
sub
xor
jmp
pushf
sahf
std
push
push
mov
inc
movsb
aaa
mov
dec
sbb
out
jo
sbb
mov
outsl
add
dec
pop
jb
cmp
fwait
in
dec
iret
rcrl
aas
andl
xchg
pop
mov
into
sbb
add
mov
push
orb
cmp
mov
or
loop
xorb
test
loope
or
mov
loope
enter
imul
adc
mov
out
ljmp
xor
jo
mov
pop
aam
stos
addr16
nop
xchg
sub
int
fldenv
or
xchg
ficompl
das
addr16
pop
xor
bound
shrl
rorb
mov
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
push
filds
jle
jg
jle
jl
popf
bound
dec
xchg
adc
push
scas
sub
subb
sub
fisttpl
sub
test
and
add
push
xchg
push
testl
popf
popa
out
stos
push
sub
xor
mov
out
in
sti
jge
loopne
repnz
testb
cld
sarb
mov
xchg
aaa
pop
jae
sub
or
push
mov
negl
jbe
or
sbb
adc
xchg
pop
pop
push
mov
xor
sti
scas
inc
lock
fsubrs
imul
cmp
dec
xor
inc
jnp
jge
imul
inc
and
xchg
out
jne
lcall
fwait
je
add
cmpsl
lret
add
and
dec
aas
in
jb
scas
pop
and
inc
mov
loop
lret
insl
cld
pop
xchg
ljmp
aam
dec
rcrl
add
js
test
aam
ljmp
out
fwait
and
xchg
adc
push
push
ds
faddl
enter
lret
pop
push
int3
test
xchg
mov
or
in
jmp
mov
adc
clc
xlat
div
cmpsl
jns
loopne
cmovne
adc
or
add
jb
pop
daa
pushf
iret
das
push
inc
pushf
out
inc
dec
fcom
xchg
loop
mov
sbb
daa
cltd
sti
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
mov
jle
cli
jg
jle
cmp
dec
push
sahf
cmpsb
and
lret
mov
jp
adc
dec
rcl
mov
mov
xor
adc
add
mov
cmp
dec
test
out
xor
pushf
test
inc
jo
sbb
dec
ja
xchg
out
cmp
push
cmp
dec
sbb
mov
aas
out
jmp
int
push
sbb
and
pop
inc
push
outsl
lods
mov
repnz
lds
jne
inc
idiv
xlat
lret
cmpsl
sub
scas
xor
int
and
call
and
dec
bound
nop
xchg
and
inc
mov
cli
orl
lcall
cli
jle
jl
aas
jns
mov
sbb
stc
xchg
in
shrb
pop
mov
in
xchg
inc
xchg
xor
pop
pop
xchg
jmp
outsb
sub
push
mov
sub
das
xlat
jp
cld
repz
ret
xchg
cmp
stc
cmp
nop
lcall
xchg
adc
sub
jns
sub
mov
fwait
pop
cmp
imul
fdivrs
mov
sahf
lds
rcl
mov
ds
xchg
mov
fwait
lret
mov
mov
icebp
jae
rclb
push
mov
mov
shr
ss
adc
cmpl
fisttpl
push
mov
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
cld
sub
or
cli
jg
jle
xchg
outsb
add
xor
aad
or
cmpl
xor
jl
iret
xchg
enter
daa
cwtl
xchg
pop
cmp
sub
push
jl
loopne
pop
outsl
inc
sub
xor
mov
cmp
xor
mov
pop
jo
mov
mov
je
jmp
pop
in
xor
clc
out
adc
jo
mov
inc
push
xor
pop
sbb
dec
adc
sbb
mov
push
subl
inc
cmp
test
pop
push
out
add
rcrl
in
cwtl
lods
loope
xlat
jbe
jp
jb
lods
dec
pop
jle
sarl
scas
xlat
pop
jmp
mov
clc
movsl
repz
cmp
in
mov
mov
pop
cmp
ljmp
sub
cmpsl
popa
fmul
gs
mov
mov
xor
rorb
mov
ss
lret
mov
mov
enter
xlat
mov
fcmovne
pop
pop
jmp
out
insl
movsb
mov
push
mov
adc
adc
xchg
call
jne
pop
pop
xlat
sarl
adc
out
mov
dec
fwait
into
jecxz
jo
cmp
mov
aaa
jne
shrl
or
jmp
cmpb
sahf
or
xchg
mov
js
lods
pop
out
adc
shlb
in
lret
sbb
add
xor
add
xor
add
xor
add
xor
pop
jmp
cmc
mov
icebp
insl
sbb
push
ds
jle
cli
jg
jle
mov
xor
mov
xchg
aam
lret
jge
jle
dec
xchg
pop
push
rclb
lahf
adc
sub
leave
popa
test
pop
mov
movsb
inc
es
dec
cmp
stos
insl
fistl
and
mov
jo
pop
pop
ljmp
int3
popa
jl
jge
int3
inc
jne
out
mov
out
cmp
mov
add
notb
jp
jb
popa
dec
mov
shlb
fisttpl
sti
rol
inc
sbb
xorb
jo
pusha
notb
cmp
scas
aad
lock
leave
cmpsl
out
jmp
lea
insl
mov
insb
xor
pop
stc
push
out
int3
cmpsl
adc
repnz
cmpsb
movl
adc
mov
mov
in
pop
cmpsb
sti
xchg
outsl
out
dec
jae
hlt
aam
add
js
push
and
cmc
popa
mov
call
in
mov
inc
mov
or
aad
pop
pop
mov
xor
popf
lret
jns
negb
cli
jns
jnp
pusha
hlt
sbb
mov
into
xor
imul
inc
lea
push
or
mov
clc
mov
loop
and
mov
arpl
cs
cld
js
leave
mov
push
xchg
inc
pop
cmp
xor
sbb
xchg
mov
insl
or
into
std
lcall
decb
mov
inc
add
or
pushf
add
add
adc
mov
xchg
pop
shl
mov
jle
jg
jle
sub
inc
lds
mov
out
test
sbb
ss
mov
fs
fimuls
insl
sbb
lods
fwait
imul
pop
fcomi
mov
inc
inc
jne
je
inc
and
shrl
inc
bound
mov
mov
daa
fdivp
xor
hlt
jmp
mov
loopne
lahf
add
cmp
mov
jnp
int
mov
fsub
js
aad
imull
xchg
xor
mov
mov
leave
rcll
or
cmp
fistpl
hlt
mov
or
mov
loope
jbe
outsb
mov
jp
imul
mov
push
push
add
shll
stos
push
jns
jecxz
and
mov
addr16
mov
andl
xchg
mov
xor
insl
sub
push
stos
das
cmp
jnp
add
push
fnstcw
jb
inc
or
mov
mov
rcl
pop
pop
fcoml
mov
ret
and
test
mov
mov
fucomp
iret
add
mov
scas
mov
int3
fsub
jp
fsubl
jecxz
lret
push
fcoml
mov
movsb
xadd
inc
rcll
pop
add
dec
mov
sbb
push
inc
rorb
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
into
dec
adc
jle
xor
adc
mov
sbb
and
or
lods
cmp
xchg
xchg
loope
inc
inc
pushf
adc
call
dec
shrb
das
lret
and
out
ljmp
fcompl
and
jecxz
bound
jo
cltd
mov
hlt
sbb
jmp
mov
call
pop
aam
xlat
mov
call
pop
aad
mov
fdivs
movsb
or
mov
int
sbb
xchg
es
xchg
stc
pop
mov
leave
out
xchg
jl
enter
jo
imul
sahf
ja
ds
popl
add
popf
aaa
push
jbe
jae
and
mov
cmpb
xchg
cld
flds
pushl
mov
inc
xor
dec
push
xchg
xor
jmp
mov
mov
negl
mov
add
and
outsl
test
hlt
bound
daa
jecxz
adc
js
mov
loop
jne
cmp
cs
or
fldt
mov
nop
jl
leave
insl
popf
out
cmc
adc
cmpsl
scas
iret
loope
adc
dec
repz
sub
mov
xchg
fs
xor
arpl
push
aam
inc
xor
sub
cmp
xchg
stc
pushf
test
in
psubd
sub
or
dec
push
push
xchg
in
lds
add
push
push
int
adc
dec
int
jmp
or
or
sbb
inc
adc
xchg
push
jg
mov
jle
dec
fsubrl
push
out
popa
inc
fadds
call
std
inc
fnstcw
mov
jmp
mov
lods
daa
flds
movd
js
lods
cmpb
push
stc
fisttps
das
lahf
scas
push
jle
adc
push
ret
mov
mov
mov
push
repz
test
mov
ret
mov
mov
push
lret
or
rolb
out
mov
subl
mov
insb
sbb
xlat
inc
xchg
les
lret
lcall
inc
test
mov
cmp
addr16
lods
push
xchg
jns
scas
shlb
ljmp
inc
lcall
sub
cld
sar
sub
cld
out
jno
jo
and
stos
sub
dec
xor
gs
sub
aas
dec
inc
push
xor
cli
cmpsl
and
lds
xchg
inc
jb
mov
and
inc
mov
or
icebp
dec
nop
xchg
sbb
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
cmc
mov
jle
jl
jle
iret
loope
clc
sti
test
scas
ficomps
bound
scas
and
mov
adc
repnz
cmp
mov
dec
shl
shl
mov
in
cwtl
lahf
popa
or
daa
mull
std
je
mov
ret
xchg
xchg
in
fisubs
adc
outsb
cltd
or
dec
ret
test
js
aas
jns
mov
loope
adc
fadds
in
push
adc
jge
cld
outsl
mov
scas
leave
movsb
adc
cmpsl
hlt
sbb
inc
pop
cmp
fstpt
subl
shl
mov
into
mov
inc
inc
adc
mov
jmp
xor
out
pop
mov
lods
adc
push
insl
and
shrl
jecxz
and
enter
pop
mov
jno
xchg
enter
js
sbb
pop
cmpsb
repnz
pop
pop
int3
arpl
clc
xor
mov
cmpsl
sub
and
imull
inc
ret
test
fcoms
subl
dec
aad
int3
jmp
movsl
repnz
xchg
pop
iret
mov
jmp
xchg
jle
cld
xor
mov
jg
das
in
fiadds
imul
add
loopne
into
cmc
aaa
into
ja
mov
mov
pop
jae
sbb
xchg
jp
mov
xchg
mov
call
popl
imul
xchg
xor
dec
xchg
fwait
gs
cmp
sbb
lods
mov
jmp
enter
in
jbe
lods
mov
jl
cli
int
adc
fstl
xchg
jp
into
ja
repz
pop
in
xor
repz
xchg
ljmp
fwait
push
push
sbb
inc
push
dec
stos
adc
xchg
add
mov
sub
dec
sub
mov
add
and
mov
mov
mov
push
mov
pop
push
ret
inc
mov
cltd
ds
sbb
lcall
mov
sbb
or
cltd
mov
push
fidivs
scas
add
fdivrs
ret
cmpsb
pop
mov
test
cs
and
mov
mov
negl
inc
xchg
cmpsl
adc
mov
enter
aas
jecxz
arpl
or
mov
jne
repz
daa
js
xchg
mov
push
dec
clc
enter
mov
push
xor
shlb
mov
sbb
lea
inc
cwtl
adc
dec
jnp
add
adc
push
sti
xor
jecxz
jecxz
out
cs
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
jo
pop
or
jle
pop
jl
jle
pop
notb
inc
fisttpll
inc
es
cli
jle
jecxz
cmp
dec
or
mov
fmull
adc
out
lods
sahf
cld
out
or
xchg
or
test
xor
mov
xchg
and
lods
out
lea
loop
iret
mov
repz
test
push
push
mov
mov
push
dec
loop
test
insb
mov
adc
in
push
loopne
mov
pop
outsl
mov
fidivrs
pop
popf
jecxz
scas
jo,pt
add
push
mov
addl
lret
std
and
xchg
mov
xor
pop
mov
xchg
add
jge
movsb
dec
test
cld
popf
roll
enter
xor
loop
and
xchg
fwait
ljmp
mov
or
dec
faddp
add
sbb
lds
fsts
into
mov
cwtl
adc
sub
xor
in
insb
jbe
out
mov
or
adc
xor
push
pop
out
xchg
pop
insl
push
xchg
xchg
repnz
inc
xor
mov
mov
fwait
pop
inc
sbb
jmp
pop
sbb
push
pop
rcl
lret
loop
xchg
push
adc
jl
rorl
inc
ret
aas
xor
pushf
and
adc
dec
add
leave
test
push
mov
lods
sbb
pop
push
pusha
stc
mov
mov
clc
jo
fisubs
push
mov
mov
bnd
ss
shrb
sub
out
sbb
fimull
inc
cld
cmp
arpl
fucomi
add
outsb
test
xchg
decb
ljmp
xor
sub
repnz
dec
mov
movntps
enter
push
dec
fcmovu
cmpsb
jno
xor
xor
and
stos
lahf
data16
adc
stos
lcall
insl
jl
push
push
lret
call
push
xchg
mov
rorb
aad
mov
cmpsl
std
ljmp
inc
push
test
call
mov
notb
dec
outsl
scas
ret
jmp
jge
insb
inc
mov
test
mov
test
inc
fwait
and
mov
ret
std
pop
xchg
sbb
pop
jge
movsb
mov
mov
mov
cmp
add
lea
popa
xchg
push
push
mov
inc
insl
xor
shrl
or
jecxz
int3
mov
lahf
out
pop
dec
les
mov
fdivs
mov
mov
adc
push
pop
jge
and
xchg
test
js
lods
data16
addb
mov
daa
aas
div
fsubl
stos
sub
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
sbb
jle
jp
rcll
sub
adc
pop
sbb
xlat
jge
mov
mov
sub
xchg
push
shll
jp
jns
xchg
pop
cltd
jnp
pop
push
imul
push
fsubl
pushf
clc
pop
mov
xlat
inc
in
and
pop
test
retw
dec
clc
stos
lock
call
cli
sarl
mov
inc
test
cmpsl
sub
adc
xor
pop
sub
pushf
das
cmp
mov
mov
adc
cmp
fisubl
pinsrw
rol
xor
orl
scas
pop
jle
lahf
scas
dec
and
aaa
nop
mov
sti
orb
stc
mov
mov
stos
jnp
mov
addr16
out
sbb
shrb
pop
mov
sbb
inc
mov
mov
pushf
sbb
subb
or
push
adc
cmp
dec
cwtl
les
lods
or
imul
mov
inc
xchg
mov
and
sub
mov
nop
sahf
popf
inc
rol
movsb
push
xchg
outsb
cmp
shr
push
fs
jbe
push
add
sbb
mov
out
push
jb
lods
movsb
addr16
ficoms
jno
xchg
scas
movsl
pushf
jg
lea
push
repnz
sub
cmp
addw
cltd
pop
and
outsb
or
xchg
cltd
push
icebp
push
mov
add
push
cmpsb
cmp
xor
lret
adc
push
push
mov
scas
mov
jne
jge
mov
push
jbe
mov
push
dec
push
js
ljmp
sar
dec
pushf
jno
jno
cmpsb
repz
cmpsb
loopne
mov
inc
mov
stc
and
ss
jnp
cmp
xor
or
mov
mov
xor
pop
insl
in
enter
jp
inc
adc
nop
jle
addl
cmpsl
imul
adc
push
mov
xchg
push
xor
fstp
adc
mov
xor
sub
mov
sbb
jnp
lahf
popf
sti
lods
shrb
xchg
jmp
das
cmp
cmp
sbb
daa
mov
inc
ror
xor
jno
add
sub
cmpsl
mov
jmp
push
sarl
sub
xlat
sub
shlb
add
jo
leave
mov
pop
andl
add
xor
cwtl
es
iret
lret
xchg
in
test
aam
mov
sub
inc
inc
jmp
mov
out
outsb
and
es
push
stos
dec
mov
sbb
cwtl
repz
fs
lcall
mov
bound
push
aad
inc
icebp
add
clc
jmp
add
dec
popa
jno
jne
xor
jle
mov
jle
pop
jl
jle
inc
popa
adcl
insl
jge
leave
arpl
push
rcll
lretw
int3
mov
or
andb
fstpt
mov
loop
jb
insb
imul
pop
data16
mov
lock
lahf
testl
or
push
or
inc
rolb
push
cmp
jmp
aad
pop
mov
push
dec
or
int3
cmp
sbb
loope
cwtl
mov
and
mov
adc
cmpxchg
out
popf
add
cli
xchg
add
ficoml
xchg
inc
ja
inc
inc
xor
adc
inc
aas
das
or
rorb
xor
jg
popf
add
push
in
loopne
ljmp
addr16
xlat
imul
iret
imul
adc
sahf
lea
test
cli
aaa
and
add
dec
jg
xchg
jnp
sub
or
out
mov
pop
jg
add
add
pushf
mov
push
pop
mov
mov
jmp
dec
repz
jl
adc
ljmp
cmc
jmp
ljmp
jge
cli
outsb
lret
divb
imulb
xor
bound
and
push
dec
dec
mov
push
sbb
hlt
int3
ja
rcl
adc
repnz
xchg
test
out
dec
ss
in
add
inc
add
sbb
mov
cmp
mov
clc
dec
adc
mov
and
xchg
add
jle
add
fisttpl
jno
std
xchg
or
sub
xchg
sbb
adc
push
add
mov
cmp
out
sbb
shll
add
imul
call
in
inc
mov
int3
rorl
ja
xor
mov
cwtl
cld
mov
jp
and
xchg
lcall
loope
mov
sub
ds
mov
pop
cmpsb
rcr
cli
loope
sbb
sarb
cmp
jmp
pop
fisttpl
adc
outsl
imul
lahf
ret
mov
mov
dec
popa
xchg
mov
or
fistpll
rcl
fidivs
mov
and
dec
ja
fs
std
mov
fwait
inc
les
xchg
mov
adc
in
out
pop
decb
cs
jge
outsb
sti
dec
xor
or
fidivrs
addl
mov
sub
xchg
adc
aam
pop
dec
dec
pop
jo
pop
inc
and
ret
xchg
dec
mov
outsl
add
mov
cld
pop
push
cmpsb
iret
push
dec
es
add
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
gs
jbe
daa
jle
pop
jl
jle
lret
ja
ret
mov
mov
mov
arpl
cs
cmp
mov
xor
push
mov
out
add
sub
loop
jns
or
cmp
cmp
push
and
mov
shll
cmpsb
mov
pop
pop
inc
icebp
cmpb
xor
inc
sbb
cmp
fnclex
xor
sbb
xchg
cli
inc
add
imul
shll
adc
outsb
xlat
ljmp
lret
pop
fistpl
mov
fnstsw
je
inc
sub
arpl
ljmp
call
or
test
mov
stc
imul
std
arpl
and
es
mov
add
sbb
inc
dec
and
lods
cmp
test
jnp
add
pop
arpl
cmp
scas
shl
mov
xchg
sub
nop
ds
push
sti
cmp
mov
out
in
or
dec
dec
push
test
outsl
aad
xchg
ficoml
mov
or
fcmovnbe
mov
sti
xor
push
push
dec
pop
je
sbb
cs
enter
cmp
mov
rolb
filds
popa
mov
or
out
das
mov
je
stos
jle
sub
mov
mov
pop
push
dec
test
lcall
adc
movl
jge
gs
fmul
test
cmp
aas
adc
in
pop
mov
std
lock
in
stos
push
or
sbb
xlat
cld
cmp
movsb
mov
sub
int
xor
pop
test
daa
movsl
rcrl
paddw
outsl
adc
or
push
mov
push
cmp
lds
imul
inc
clc
xor
inc
pusha
sub
jne
mov
loop
or
lahf
popa
clc
sbb
and
lcall
out
mov
and
xchg
sbb
mov
fldt
sti
mov
ss
jle
pop
pop
inc
es
sub
loope
jne
mov
fldt
enter
lods
cmp
ret
adc
cmp
push
gs
rcrl
add
ret
jp
icebp
mov
mov
rcrb
jbe
or
xor
fwait
cltd
rolb
int
add
inc
add
imul
arpl
sbb
shrb
mov
cmp
dec
in
pop
add
aaa
cmp
pop
mov
in
int3
inc
jnp
lock
dec
push
xchg
push
cld
mov
or
adc
push
jae
fmuls
xchg
mov
fsubs
fs
inc
fdivl
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
push
sub
and
pop
jl
jle
or
data16
dec
clc
enter
ds
cmpsl
and
int3
xchg
mov
lods
jbe
fimull
in
push
in
mov
dec
adc
mov
sub
xor
xchg
popa
mov
push
jo
ret
movsb
insl
test
jle
mov
popf
in
pop
dec
cwtl
sti
pop
in
mov
mov
xor
mov
daa
xchg
adc
cld
add
stos
mov
lret
pusha
sbb
rclb
add
dec
lret
mov
js
mov
jo
mov
xor
dec
xorb
sbb
aad
imul
std
lea
fdivs
jbe
call
pop
add
inc
into
adc
xchg
bts
jge
fs
xchg
inc
out
lds
repz
mov
outsb
jae
fcompl
loope
dec
mov
insl
cmpps
movsl
mov
leave
bound
and
scas
and
pop
sub
push
sbb
mov
mov
test
pop
mov
insb
mov
push
movsb
jl
inc
add
stos
nop
xor
lcall
sbb
xor
jge
lret
ficoms
mov
test
lods
in
ret
lea
push
loop
xlat
inc
cmc
mov
and
nop
sub
inc
cli
push
rolb
pop
xchg
int
idivl
xchg
nop
cmp
insl
inc
in
stos
or
sbb
push
jmp
ljmp
jnp
push
jp
cs
das
dec
lret
ffreep
ds
rcrb
cmpsl
inc
xchg
pop
inc
cmp
mov
xor
mov
inc
inc
pop
bound
stos
mov
ljmp
pop
in
inc
cmpsl
ficomps
data16
add
dec
cli
mov
popf
pop
add
inc
sti
arpl
lret
dec
pop
pop
and
stos
add
push
in
fsubrl
outsl
cmp
or
jp
inc
cli
pushf
mul
es
imul
int3
jge
adc
adc
and
and
icebp
xchg
push
sub
xchg
mov
scas
push
fnstsw
lods
cmc
imul
lret
push
push
push
lods
xor
mov
jno
push
cmpsb
rcrl
fldenv
jl
dec
lahf
sar
out
loope
inc
addb
mov
in
outsl
or
hlt
popf
mov
mov
shll
cli
lahf
es
cltd
sbb
data16
test
or
sub
jbe
xor
dec
into
dec
insl
cmp
std
dec
fs
jle
inc
adc
xchg
and
cmc
cmp
sub
subl
jmp
bound
test
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
jg
test
and
pop
jl
jle
test
add
mov
jbe
test
pop
shll
or
fs
dec
jae
fld
test
daa
lret
les
movsb
push
jmp
mov
or
jg
mov
mov
jg
test
pop
adc
dec
enter
inc
cmc
js
inc
out
cmp
mov
mov
sbb
push
jg
inc
mov
scas
jle
push
add
mov
adc
sub
enter
and
mov
popf
ss
xor
bound
sbb
sahf
pop
outsb
fs
popa
sbb
repz
dec
xor
pop
add
add
mov
jne
js
stc
lods
mov
xorb
hlt
mov
lock
dec
iret
inc
adc
pop
lock
test
cmp
std
push
sub
call
cmp
shl
dec
aaa
je
in
push
dec
mov
push
lock
mov
mov
int3
int3
shlb
pop
mov
jnp
daa
int3
xor
adc
jg
cmp
mov
dec
imul
adc
xor
int
or
call
dec
push
add
dec
aad
adc
mov
adc
cs
icebp
aas
xchg
push
cmp
cmpb
xor
jmp
and
movsl
push
pop
cltd
clc
xchg
mov
push
in
sub
into
test
mov
cmpsl
nop
sbb
pop
hlt
addb
adc
adc
jg
rorb
xor
rcl
fcoms
insl
inc
enter
movsb
xor
pop
mov
or
mov
jno
add
cmp
test
jnp
xchg
push
jne
inc
andl
cmpsl
xchg
imulb
scas
cmp
sbb
cmp
xor
cs
ss
fcom
and
jl
rcrb
and
daa
or
xchg
in
sbb
inc
add
mov
shrb
sbb
dec
adc
jecxz
cmp
push
sub
dec
add
sub
or
dec
and
xor
mov
mov
jmp
sub
push
pop
pop
gs
jbe
or
pop
adc
movl
inc
jp
pusha
mov
pop
adc
pop
out
and
aam
in
loopne
inc
or
lret
mov
sbb
int
sahf
es
xor
sub
sub
xchg
xchg
into
xchg
gs
hlt
mov
pop
call
roll
leave
pop
sahf
sbb
adc
fstp
inc
lea
mov
int
or
xchg
mov
mov
sti
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
sbb
cmp
imulb
jle
jl
jle
cmp
mov
jo
cmp
data16
jae
cmp
lods
inc
cwtl
adc
and
into
rcrb
mov
hlt
scas
movsb
arpl
and
pop
fstps
in
sti
sub
lret
bound
es
mov
ljmp
mov
inc
nop
xchg
jae
xor
xchg
jo
mov
das
mov
mov
ret
aas
clc
add
sahf
test
out
push
rorb
dec
jle
add
ja
les
jg
cltd
pop
test
and
sub
push
xor
js
scas
andl
fldcw
faddl
lahf
jecxz
out
xor
jne
mov
inc
xor
bound
and
stos
jmp
fucom
or
stos
in
mov
push
pop
cmp
arpl
xchg
dec
outsb
add
cmpsb
lock
jmp
cmp
enter
lcall
and
popf
testb
mov
loopne
mov
cmpsl
jbe
inc
imull
jnp
xchg
mov
cli
sub
ffree
sahf
push
adc
jb
jmp
pop
dec
repz
pop
into
push
xor
xor
lahf
dec
push
clc
icebp
into
mov
dec
cmp
loop
mov
mov
sbb
cwtl
outsb
mov
xor
pop
nop
mov
incb
test
push
mov
pop
cmp
ljmp
stos
insb
stc
insl
jl
jp
pop
xor
xchg
push
mov
pop
mov
gs
inc
fwait
xchg
dec
and
pop
loopne
lods
outsb
mov
stos
das
sbb
mov
inc
fildl
outsl
in
fsubrs
rcll
cli
lea
stc
mov
sbb
add
mov
mov
sub
mov
sub
xchg
outsl
icebp
jo
ficoml
int
bound
out
pop
fidivrs
pop
mov
out
insl
xchg
jo
popf
insb
repnz
ds
jle
pop
jae
scas
mov
fistpl
daa
arpl
aaa
and
add
inc
push
lea
push
sbb
push
sbb
aam
movsl
xchg
cmp
popa
or
sbb
push
lahf
popa
dec
fimuls
leave
pusha
jb
and
dec
pop
mov
dec
std
mov
ja
adc
mov
mov
add
mov
dec
mov
sbb
mov
inc
ja
push
pop
adc
shlb
xchg
xchg
arpl
xor
or
fimull
sbb
jecxz
xlat
fcmovnb
xor
outsl
xchg
dec
inc
aam
jnp
mov
and
sbb
ss
das
daa
cmpl
xor
xchg
push
sbb
xchg
in
push
and
cli
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
cmpsl
inc
shrb
jle
pop
jl
jle
dec
je
xor
mov
push
loopne
stc
js
insb
and
in
fldl
mov
jne
or
in
mov
jb
cld
insb
fcoms
dec
cltd
insb
pop
sarb
aas
subl
aaa
lods
sbb
push
std
jae
popf
and
jo
mov
inc
dec
hlt
cs
sub
adcb
xor
gs
cmpl
out
loope
ss
stos
xlat
cmpsl
js
mov
loope
insb
fisubs
call
add
loopne
cmp
xchg
imull
mov
mov
xchg
clc
pushf
aas
dec
mov
movsl
adc
cmp
add
xchg
fcmovnbe
std
fwait
xchg
lret
movsl
aam
jecxz
jge
push
cli
push
push
or
jne
rclb
dec
fxam
jg
push
dec
inc
sub
cmp
scas
mov
lds
jno
mov
popf
out
mov
dec
fsqrt
mov
add
inc
push
xor
mov
jbe
lahf
push
sub
push
mov
data16
scas
dec
dec
cmpsl
or
mov
xchg
xchg
movsl
or
xchg
es
push
pop
loope
mov
popa
push
mov
ja
shrl
aaa
add
pop
in
mov
add
sbb
pop
add
inc
pop
pushl
mov
inc
xor
mov
cmp
inc
sbb
stos
mov
jp
cmp
mov
popa
jb
ja
andb
shll
mov
rcrb
daa
pop
pop
imul
aas
stos
fwait
mov
dec
sahf
pop
push
repnz
or
xchg
lret
out
mov
out
mov
sub
and
xor
stos
fildl
sub
cli
pop
ss
cmpsb
stos
ljmp
or
xchg
xor
loope
inc
mov
inc
sub
pop
xchg
inc
push
mov
or
std
test
rorl
sti
and
sub
cmp
stc
gs
popf
stos
fdivs
pop
cmp
adc
sbb
and
add
add
cld
pop
push
inc
neg
jecxz
das
jns
dec
xor
lcall
mov
mov
mov
xlat
adc
xor
ljmp
push
into
je
mov
push
sbb
mov
jl
lods
and
enter
mov
loop
dec
jle
or
jle
sub
repz
outsl
arpl
push
insl
xchg
mov
mov
cmp
pop
cwtl
push
std
cmp
outsb
mov
out
daa
imul
sub
movups
lds
cld
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
in
ficompl
ss
sub
jle
and
mov
sbb
rorl
pop
sbb
scas
ljmp
dec
clc
cs
outsl
inc
gs
inc
arpl
or
or
sarl
and
ss
pop
pop
dec
out
lret
lock
stos
sbbb
mov
jno
and
push
adc
in
push
sub
ret
adc
xchg
stos
jbe
pop
pop
xor
jnp
jb
mov
nop
jle
mov
mov
scas
aad
inc
push
shll
or
int
fnstsw
sbb
orl
xor
out
fiaddl
ficoms
inc
nop
loop
arpl
loope
xchg
inc
mov
cwtl
push
push
rcrb
xor
cmc
dec
int3
cmpsl
push
push
and
and
stos
xor
sbb
sbb
repz
outsl
pop
sub
xor
lods
xchg
xchg
or
lock
cli
jb
repnz
das
and
sub
cmpsl
push
cld
lret
inc
xchg
push
push
xchg
in
pop
mov
sub
loop
sahf
lds
push
out
sub
mov
lea
sbb
je
push
xchg
xchg
adc
sbb
insl
dec
ret
inc
ss
pop
bound
fcompl
pop
es
xchg
call
mov
fdivl
jmp
test
add
insl
fucompp
push
jbe
aad
enter
shlb
adc
ds
add
add
cmp
adc
sub
pop
cli
scas
adc
cli
push
cmp
xchg
fwait
out
mov
leave
or
inc
push
and
adc
shlb
test
imul
shlb
cmpsl
sbb
movsb
cli
dec
pop
ud0
je
mov
cld
jbe
das
mov
push
mov
push
xor
lret
fwait
pop
iret
jnp
mov
dec
and
popf
aad
jecxz
and
mov
sub
xorl
jae
addr16
push
cmp
inc
jnp
jns
jb
xchg
mov
sub
adc
xor
inc
xor
pop
repz
std
mov
dec
cld
lahf
or
dec
push
inc
pop
xor
inc
in
sub
jns
mov
push
add
adc
dec
ret
jae
sti
push
xor
in
xchg
inc
push
mov
mov
xchg
jb
xor
xchg
lock
popf
lahf
mov
pop
out
mov
icebp
in
out
sub
add
bound
or
xor
movd
mov
inc
ret
cmp
pop
mov
enter
mov
lods
repz
pop
sbb
gs
cld
imul
sub
ss
aam
jl
mov
roll
lahf
jl
dec
sbb
hlt
out
pop
cld
lret
push
lret
push
cmpsl
iret
mov
shll
scas
xchg
icebp
rcr
mov
xor
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
scas
jae
mov
movsb
mov
sbb
outsb
inc
filds
fists
xor
lea
out
into
jns
hlt
jge
les
movsl
inc
cmp
push
inc
fstpt
mov
mov
jp
inc
decl
sti
mov
mov
cmp
jg
outsb
imul
call
or
mov
or
cs
int3
mov
les
cmp
xchg
xchg
fwait
mov
inc
mov
inc
jge
sub
xchg
inc
add
add
pop
pop
rcrl
sahf
out
push
insb
ret
add
lret
mov
popa
fucomi
js
in
add
dec
push
mov
and
mov
std
insl
outsb
mov
lock
out
inc
sub
sbb
push
mov
int3
frstpm(287
adc
jbe
cmpsl
outsl
dec
jb
mov
js
cmp
xor
jmp
inc
or
pop
inc
roll
xchg
pop
pop
out
fldenv
mov
mov
jmp
rcr
jecxz
sbb
inc
push
ja
xchg
adc
neg
adcl
mov
xor
or
jp
cmpsl
add
push
ret
jle
sub
cld
mov
push
or
dec
fnstenv
aam
mov
mov
sub
sbbl
add
cmpsl
jecxz
push
pusha
mov
out
out
pop
test
sub
or
xchg
jmp
mov
or
push
fisubs
push
pop
es
aam
adc
push
fisubs
mov
pop
sti
xor
or
cmp
or
jp
pusha
add
mov
mov
adc
dec
rclb
ljmp
divb
jnp
es
aam
decl
insb
mov
pop
pop
sub
testb
or
mov
xchg
out
ficompl
mov
xor
out
sub
nop
mov
call
xchg
sahf
push
loope
sbb
pop
mov
mov
cmpsl
lock
jae
es
jle
sub
add
mov
adc
stos
mov
ret
jo
and
testb
or
xchg
addr16
cwtl
sub
xchg
pop
std
jnp
jno
ret
jno
jnp
adc
mov
dec
mov
xor
lcall
popa
in
cli
mov
ror
fcoml
sti
in
out
jno
popa
mov
pcmpgtb
xor
in
into
fnstcw
jl
inc
cmp
xchg
aaa
jmp
clc
pop
lret
shlb
es
shll
aas
and
mov
outsl
push
or
pop
pop
daa
dec
pop
mov
xor
mov
pop
cmp
out
scas
dec
add
out
sbb
xor
aaa
in
mov
test
outsl
dec
lea
rorl
xor
neg
jmp
jne
sub
test
test
mov
adc
xor
sub
jle
adc
arpl
xchg
mov
sti
jns
stos
xlat
sbb
dec
cmpsl
out
mov
sbb
daa
jmp
jecxz
adc
mov
lods
sbb
mov
mov
pop
repnz
cmp
lds
push
mov
xor
jns
outsb
adc
and
or
shll
mov
inc
js
ret
jge
jnp
and
inc
and
lock
imul
mov
xchg
jnp
xchg
push
push
sbb
call
jno
stos
xchg
push
test
je
sub
pop
add
fucomp
fidivrl
cmp
dec
andl
jno
push
adc
sbb
aad
add
mov
sti
enter
and
stc
icebp
je
lds
test
je
cmp
xor
stc
seta
es
das
jecxz
push
push
imulb
repz
push
jae
movsl
add
clc
xchg
shrb
popl
rol
sahf
push
ljmp
out
and
adc
pop
dec
push
sbb
mov
xor
inc
test
mov
aas
loopne
jmp
inc
cld
sbb
push
pop
lret
je
js
arpl
gs
jg
gs
pop
sub
insb
insl
icebp
shl
in
ja
push
pop
push
imul
scas
push
jae
rcrl
mov
push
fcmove
out
push
mov
ds
jecxz
mov
stos
push
ficomps
adc
fistl
adc
adc
loope
stos
jl
outsb
inc
mull
mov
fildll
mov
in
insl
ljmp
adc
shlb
pop
cmp
adc
sbb
ret
inc
sahf
add
mov
jle
pop
xchg
adcb
lahf
xchg
cs
mov
popf
mov
cmp
or
outsl
das
loope
jne
push
lods
sub
add
cmp
adc
mov
xchg
mov
sbb
testl
lcall
sub
jne
mov
daa
cmp
cmp
std
stos
sbb
jg
fidivrs
aaa
aas
out
or
sub
pop
popa
clc
sub
loop
js
js
inc
popf
xor
mov
xchg
call
dec
outsb
popf
lret
mov
push
push
hlt
arpl
inc
inc
clc
adc
xchg
rorb
mov
fsts
movsl
push
movsl
mov
cmp
pop
inc
aad
sub
subps
mov
xchg
or
stc
push
sbb
loop
inc
stos
dec
stos
xchg
push
sub
and
add
xor
int3
jecxz
push
xor
aam
clc
sub
dec
rcrb
cwtl
mov
cs
or
jns
loope
sbbb
mov
xchg
push
decl
jge
mov
addr16
jno
pop
inc
les
cltd
mov
frstor
adc
test
rcll
lret
add
dec
popa
scas
sbb
hlt
loope
movsl
aaa
pop
cmp
imull
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
imul
cli
add
jle
jge
jle
dec
inc
clc
and
or
out
lods
popf
and
inc
jl
sub
cmp
xchg
xchg
int
arpl
test
mov
mov
cli
or
mov
xlat
clc
pop
sbb
and
push
jl
loope
pop
mov
lds
or
out
pop
jle
mov
xchg
sbbl
and
xchg
xor
xchg
daa
push
xchg
das
dec
xchg
and
lock
sarl
fdivrp
pop
jge
pop
inc
dec
cmp
es
sbb
int3
cwtl
cmp
push
push
mov
cmpsb
lret
call
jmp
jmp
xchg
adc
push
ja
aaa
and
inc
jl
adcb
adc
lds
xor
shl
repz
pushf
pop
inc
sbb
dec
push
insb
mov
xchg
nop
mov
cmp
loopne
or
jmp
test
icebp
fcompl
dec
call
fdivl
pushl
call
enter
daa
pop
mov
add
test
sbb
sub
call
xor
dec
mov
push
xchg
les
mov
or
push
push
push
test
xchg
mov
aaa
into
jbe
sub
in
jo
add
fadd
test
sarb
aad
cld
cmp
add
scas
cmp
in
sbbb
clc
addr16
sub
cmp
xor
pop
mov
shl
jnp
loop
xor
dec
out
cmp
ret
ror
mov
mov
cld
clc
mov
pop
int3
push
fisttpl
sub
shr
pop
fildll
push
push
sbb
cmpsb
or
sarl
jl
inc
cmpsb
ljmp
add
test
lods
ficomps
pop
in
sbb
xlat
add
xor
add
into
test
xchg
mov
pusha
mov
jmp
aas
aad
test
sub
mov
aas
addr16
pop
jns
jo
pop
daa
mov
xrelease
fdiv
shll
pop
out
movsl
adc
das
or
test
orl
cmc
or
jnp
bound
push
stc
into
adc
lcall
cld
cmp
sub
pop
mov
and
cwtl
rcll
and
adc
test
stos
out
dec
aaa
mov
jecxz
jne
insb
scas
mov
rcrb
push
call
or
fucomp
adc
aam
pop
mov
jge
and
lods
cmc
push
or
pop
in
xor
lock
adc
inc
push
movsb
jmp
or
jg
sub
and
xor
xor
inc
cmp
loopne
mov
loopne
sub
jmp
mov
mov
fs
dec
push
jle
add
push
pop
sahf
cld
pop
js
dec
movsb
aam
xchg
fwait
call
fisubs
mov
and
xor
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
and
mov
mov
pushf
stos
mov
xor
mov
mulb
add
cmp
push
push
dec
cmp
outsb
add
sub
sbb
mov
shrl
adc
push
andl
mov
xchg
lret
stos
je
add
in
shll
cmpsl
xor
icebp
jle
sahf
sub
jne
inc
adc
std
frstor
adc
or
add
adc
pusha
gs
loopne
push
mov
xchg
add
pushf
adc
lock
sub
jb
popa
sti
cmpl
cmp
clc
lea
mov
push
dec
sbb
cmp
push
push
xchg
xchg
mov
sti
push
mov
inc
insl
aam
mov
iret
repnz
repnz
stos
pop
outsb
insb
jmp
inc
pop
push
js
jmp
xor
mov
rcll
jno
fldcw
out
stc
clc
into
lcall
pop
dec
push
mov
lods
imul
faddl
xor
sub
push
mov
push
in
jo
repz
sbb
adc
xor
aad
test
jl
or
lea
arpl
xor
in
and
rorl
add
cmc
imul
jne
inc
jbe
lods
adcb
mov
push
or
icebp
imul
sahf
dec
loop
lret
sbb
int
movsl
sub
es
cmp
data16
lods
jne
pop
stos
cmp
imul
push
jae
mov
add
and
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
sub
jle
mov
in
mov
and
outsb
mov
sub
inc
dec
hlt
icebp
dec
js
jae
mov
xchg
out
aas
and
lcall
lcall
cmpsl
inc
nop
fwait
fwait
ja
adc
or
sbb
std
push
xorb
mov
mov
hlt
loopne
aas
lods
je
cmc
xchg
sbb
outsl
jb
push
lea
movl
pop
xor
inc
test
ficoms
imul
gs
filds
fistps
mov
lcall
je
and
loope
xchg
dec
dec
sub
xchg
jge
sub
stos
out
mov
rorl
popf
aam
scas
mov
jp
adc
cmp
and
fistpl
add
inc
jbe
lcall
xor
ljmp
jmp
or
xor
mov
insb
push
sub
stos
ljmp
mov
jne
push
adc
mov
fwait
push
xor
test
push
js
cmc
std
out
xchg
inc
xchg
mov
or
xchg
aad
or
iret
rol
push
push
fsts
fcmovnb
leave
pop
or
pop
inc
pop
mov
jno
xchg
lods
push
fdivr
xchg
cmp
ret
mov
mov
pop
push
loopne
xchg
add
adc
lods
lock
out
jp
insl
insl
xchg
inc
daa
push
push
xor
inc
mov
xchg
and
stc
xchg
xor
inc
mov
ret
pop
mov
and
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
mov
mov
sub
int
jmp
adc
jae
jae
jb
lock
ror
js
imul
lret
rcrl
fdivl
cltd
stos
lock
test
xchg
dec
jl
fmuls
out
jno
mov
pop
add
nop
out
aad
shrl
cltd
push
or
enter
cltd
dec
aaa
xor
test
xchg
lahf
aam
fistpll
lret
adcl
shlb
push
aaa
xchg
xchg
iret
or
fisttpll
pop
movsl
test
pop
std
push
mov
test
icebp
or
mov
aam
push
cmpsb
push
mov
add
xlat
insb
push
or
sub
aas
icebp
stc
pop
push
out
std
or
dec
push
adc
stos
and
lea
cmpsb
push
mov
inc
addr16
xor
in
and
pop
inc
stc
lahf
xor
mov
iret
cltd
lock
sbb
cmp
inc
out
lods
or
mov
mov
cmp
aaa
test
scas
xchg
xor
insb
sub
les
sub
sbb
leave
stc
lea
cmp
dec
cmp
in
dec
in
dec
imul
adc
jne
in
int
fadd
xlat
jl
decb
xor
jne
and
rorb
dec
dec
sahf
bound
jg
lods
lods
cmc
mov
push
mov
or
sbb
fwait
mov
popf
inc
add
inc
nop
imul
in
loop
add
addb
jmp
repz
mov
jmp
inc
enter
mov
pushl
call
test
jmp
and
in
popa
push
lret
xchg
pop
arpl
inc
int3
les
mov
rcll
in
pushf
and
adc
popf
mov
es
in
inc
xchg
or
push
int3
cmp
pop
mov
xor
xchg
out
shlb
mov
cmpsb
out
adc
jg
jb
das
cmp
loop
xlat
fcoml
jg
shl
dec
rcrl
push
loop
repz
push
loop
sub
sbb
movsl
sarl
sti
lcall
or
je
in
jge,pn
dec
inc
mov
js
sbb
xor
push
add
les
push
insl
outsl
mov
in
pop
sbb
cmp
scas
clc
cmp
jge
sub
test
out
cmpsb
cmpsl
push
call
in
insl
lock
fisubrs
add
int3
addr16
aas
push
xor
xchg
lock
cmpsl
xchg
call
cmp
mov
jno
sahf
add
push
add
mov
or
jne
loope
or
and
insl
inc
ror
mov
loopne
and
imull
mov
push
or
sbb
lods
fildl
lret
push
push
data16
and
inc
cwtl
es
enter
push
jb
adc
mov
imul
inc
movsl
sbbb
leave
rolb
stc
mov
popf
push
adc
xchg
cmp
dec
add
inc
or
jae
or
push
mov
sbb
das
jmp
daa
pop
mov
cmp
into
icebp
mov
pop
pop
lea
and
cmpsb
rcrb
mov
sbb
sti
lods
imul
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
pop
xlat
bound
ret
add
adc
sub
ljmp
clc
sahf
jne
and
sbb
scas
or
mov
mov
inc
jbe
pop
icebp
pop
mov
adc
xchg
or
push
lret
push
fistpll
cmpsl
hlt
mov
outsb
and
movsb
dec
mov
pop
lcall
or
std
pop
iret
out
pushf
fcoms
inc
inc
mov
rcl
js
rcr
lahf
les
or
push
je
adc
fisttpl
mov
add
mov
sub
out
aas
adc
push
in
out
xchg
mov
mov
mov
or
push
jae
mov
mov
mov
mov
movsb
test
push
iret
lret
dec
aad
scas
pusha
jnp
add
inc
mov
addr16
jmp
shr
lock
xor
jl
cli
add
ja
adc
mov
inc
mov
pop
mov
data16
adc
mov
or
xchg
into
in
out
and
dec
scas
pop
pusha
adc
insl
hlt
shlb
xchg
pop
push
data16
inc
stos
imul
mov
xchg
sarb
scas
popa
adc
loop
shr
or
scas
pusha
xor
frstor
mov
icebp
jl
dec
scas
stos
iret
jmp
mov
outsb
popf
xor
in
adc
cmp
cmp
out
or
add
mov
insl
jns
ror
aas
mov
dec
adc
lock
icebp
in
and
dec
xor
test
gs
out
mov
xor
and
sbb
ficomps
gs
fisttpl
hlt
icebp
sub
inc
pop
push
sarb
and
movsb
data16
xchg
push
aad
fucomip
mov
enter
sbb
cmpsb
les
mov
xor
shrb
test
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
sub
sarb
jl
jle
mov
insl
fcom
fsts
pop
ret
imul
insl
xor
cli
rcll
call
bnd
jb
ljmp
aad
popf
mov
pop
jge
nop
jmp
nop
push
jp
push
push
lret
dec
andb
jg
add
aaa
mov
pop
mov
or
jecxz
enter
sbb
popf
adc
xchg
outsb
inc
sbb
pop
mov
lea
jmp
jecxz
mov
push
sbb
cmp
mov
out
outsb
movl
cmpsb
lods
xor
icebp
inc
inc
fistpl
bound
subb
cmp
orb
les
jno
adc
loope
ja
sub
mov
out
jl
push
ss
inc
adc
jg
add
rcrl
adc
push
sub
xchg
push
popa
sub
iret
jg
push
into
popa
rcrb
fs
or
test
loopne
cmp
daa
mov
mov
jo
sub
xchg
push
addr16
fwait
mov
mov
pop
rdmsr
pop
and
jae
jmp
or
xchg
outsl
and
out
fmuls
push
mov
lea
jb
ljmp
popf
jnp
iret
cmc
pop
dec
popa
push
repz
or
pushf
xlat
lods
jae
sub
mov
lret
adc
pop
push
lahf
jbe
test
cmp
sbb
fildll
out
dec
shrl
fcoml
mov
pop
andl
test
aaa
mov
mov
test
add
pop
jns
fisubl
fcmovnu
clc
ja
lock
movsb
mov
xchg
idivl
testb
loop
push
mov
mov
mov
fists
xor
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
lock
and
jle
add
mov
gs
and
pop
dec
enter
aam
adc
movsl
inc
sbb
xchg
sbb
add
shrb
dec
jbe
jge
xor
jb
daa
in
fstpl
mov
fwait
out
sbb
adc
cmp
fs
cmp
add
jno
es
mov
jae
imul
sbb
sahf
push
divb
jae
cmc
mov
push
cmp
xchg
sbb
les
sub
loopne
pop
std
cs
ja
mull
mov
push
mov
cmpl
repnz
push
push
andb
and
inc
adc
pop
ret
std
daa
ds
sub
xchg
test
inc
inc
inc
dec
mov
or
ret
stos
fmuls
sarb
in
mov
enter
pop
mov
jl
cmp
sbb
fs
jge
cli
adc
sbb
stc
sbb
push
cs
jo
or
aaa
dec
dec
sti
sbb
mov
push
xor
push
mov
lret
sbbb
scas
idivb
mov
pop
jb
adc
jne
fisttps
imul
jecxz
inc
aaa
ja
xor
mov
sbb
inc
sub
lock
in
sub
xchg
call
jg
lahf
icebp
jae
push
int3
fidivrs
xor
inc
mov
negb
and
ds
fisttps
push
clc
es
mov
xlat
sbbl
jl
lods
sbb
xchg
in
stos
push
dec
stos
mov
rclb
movsb
lret
lods
xchg
inc
ret
add
pop
data16
out
adc
adc
enter
pop
inc
and
sbb
jnp
fs
xor
jle
in
popf
push
enter
scas
sub
push
and
lahf
addl
dec
rorl
inc
xor
adcl
mov
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
icebp
out
or
add
pop
stc
mov
test
les
lcall
fidivrs
add
mov
subl
adc
enter
cs
cli
shl
shrb
fsubl
imull
jecxz
pop
clc
sahf
out
mov
and
gs
out
in
loope
adcl
fwait
and
xchg
loope
int3
inc
aam
adc
inc
jno
cmp
mov
xor
out
xchg
sub
xor
cmc
cmp
shlb
es
js,pt
in
cli
cmp
and
xchg
jne
xchg
cmp
and
shll
cmpsb
insb
jns
jns
xor
mov
jnp
add
lods
les
or
test
rcll
jo
dec
aam
data16
cs
ja
int3
test
mov
nop
add
jge
cwtl
and
and
or
xchg
mov
sahf
cmp
jnp
imul
add
pop
mov
push
mov
mov
lods
xchg
lret
jnp
movb
ret
loopne
mov
dec
ja
xor
lea
mov
in
mov
dec
mov
aad
pushf
sub
pop
test
jecxz
mov
mov
or
jl
inc
jmp
xchg
std
mov
ja
jb
xor
sbb
mov
outsb
mov
adc
lcall
adc
lea
scas
lret
iret
shll
push
sbb
arpl
xor
stos
jno
popa
pusha
sub
std
sub
fs
mov
pop
scas
cmp
nop
mov
insl
jno
cwtl
les
sbb
mov
inc
xchg
cmc
inc
mov
gs
pop
ds
into
addb
mov
movsl
sbb
adc
and
orb
pop
add
add
sahf
sbb
pusha
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
sbb
lret
and
jle
into
lds
ds
xor
pop
mov
or
movswl
pop
ja
inc
add
iret
mov
inc
sub
add
popf
std
mov
lcall
sub
adc
mov
rolb
std
adc
sbb
jne
movsb
cmp
jo
dec
test
rorl
xor
sahf
cmp
xor
mov
lcall
lahf
lahf
leave
jecxz
loope
inc
mov
in
test
enter
sbb
loopne
jge
mov
popf
fcmovnb
cmp
fnsave
les
cs
in
mov
sbb
test
lock
add
inc
jle
cmp
jg
mov
mov
rcl
and
movb
shll
outsl
lcall
out
jo
aaa
pop
outsl
gs
adc
push
mov
xchg
lock
mov
fcmove
dec
mulb
push
cmpsl
hlt
cltd
xlat
jno
inc
push
mov
stos
push
mov
xor
std
imul
cli
dec
cltd
fwait
repnz
or
stos
add
rolb
jle
iret
cwtl
xchg
lea
mov
jmp
adc
adc
xlat
out
jnp
lods
jbe
inc
lret
clc
pushf
mov
dec
sub
popf
stc
cmp
flds
mov
sub
pop
out
and
mov
cld
leave
imul
testl
jp
in
inc
fwait
xchg
arpl
jle
imul
pop
imul
add
and
into
stos
rcrl
or
cmpsb
aas
xchg
jp
fldl
mov
iret
xchg
cmpb
jge
stos
loop
fwait
popa
sub
es
mov
xor
mov
mov
xor
pop
adc
mov
xchg
lahf
cmp
scas
mov
xchg
cmpsl
movsb
cltd
inc
cmc
jno
xlat
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
stc
or
in
jle
and
jle
jge
or
int
insb
jle
push
inc
or
rclb
mov
sbb
ret
or
sub
add
push
or
jo
jbe
fcoml
xor
xchg
inc
push
into
testb
aas
cltd
lahf
mov
mov
mov
int3
xchg
shll
pop
push
pop
sub
lcall
in
pop
shlb
scas
jecxz
inc
in
fwait
aam
push
mov
es
xchg
pop
popa
clc
das
mov
push
push
dec
je
mov
daa
ljmp
scas
dec
jnp
push
ljmp
add
mov
dec
ret
sub
mov
lds
iret
in
sbb
pushf
enter
rcrl
add
cli
jl
fcom
xor
loopne
incb
push
es
mov
arpl
jb
outsl
rolb
mov
cmc
inc
add
test
loopne
aad
les
and
mov
pop
scas
divl
enter
sbb
inc
sub
roll
ss
adc
adc
add
and
stos
addr16
out
in
jae
test
lret
sbb
cmpsl
lret
sbbb
out
push
dec
fcoms
aad
cs
pop
sbb
mov
loopne
inc
inc
mov
movsb
mov
insb
fcoms
lods
popa
insb
lods
inc
and
mov
pop
dec
and
hlt
lahf
mov
cli
pop
mov
dec
cmpsb
pop
dec
adc
adc
inc
lret
jo
std
mov
jb
aaa
add
jnp
aam
mov
fnstcw
les
push
xor
jb
dec
mov
xchg
insb
jecxz
fdivrl
in
cmp
jo
adc
fildl
cli
cmp
pop
mov
xchg
movsb
mov
lds
lahf
xchg
add
in
test
dec
mov
inc
rcrl
jne
in
mov
cs
cwtl
add
arpl
mov
adc
sti
xor
hlt
sbbl
jmp
pop
push
jg
xor
add
out
mov
jle
and
jle
push
pop
xchg
push
sbb
pop
mov
lret
mov
inc
ficoml
jnp
add
out
pop
sbb
and
xlat
jbe
lcall
pop
pop
xor
push
ret
xchg
dec
stc
sbb
pop
fistl
fsub
aaa
fcoms
test
push
and
push
dec
xchg
pop
dec
aas
xor
sub
adc
xchg
shrb
das
adc
into
push
cmp
icebp
cli
mov
pop
sub
sbb
pop
test
xor
pusha
insl
xchg
arpl
mov
cmp
insb
daa
and
xchg
xchg
and
dec
in
xchg
sub
faddl
pushf
cmp
xlat
fs
jl
xor
push
dec
push
sub
sbbb
je
dec
pop
mov
nop
jae
pop
push
and
xchg
dec
sbb
ss
push
js
xchg
cld
sbb
fistpll
mov
mov
sbb
imul
repz
subb
out
xchg
loopne
push
or
mulb
divb
adc
mov
clc
inc
add
xchg
push
les
aas
xchg
ljmp
add
pop
mov
test
mov
fdivrl
mov
mov
cs
fimull
and
dec
in
push
xor
insl
ret
inc
movsb
sub
dec
xor
pusha
push
pop
jnp
adc
jno
jnp
push
insb
sub
pusha
push
lret
push
pushf
sarb
sub
addr16
in
fmul
cmp
lcall
andb
popa
insl
jne
cmc
mov
mov
ret
shlb
inc
inc
jmp
inc
std
jbe
sub
push
pop
stos
xchg
lcall
sbb
testb
push
mov
stc
aaa
repz
aad
inc
jae
fadd
rolb
pop
sarb
pop
loope
jmp
fsts
leave
jecxz
ret
aad
lea
xor
mov
adc
int3
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
sbb
aam
jle
jl
jle
fmulp
pushf
scas
and
test
pop
and
cmp
jns
stc
xor
pop
cmp
jp
lods
pop
loop
jecxz
or
push
cmpsb
lcall
mov
dec
jae
push
mov
sbb
jmp
pop
jb
push
push
jnp
xchg
hlt
lcall
sbb
fistps
iretw
testl
dec
add
xor
mov
sub
cmc
ret
ss
push
push
inc
sub
mov
sub
mov
sub
jns
mov
inc
mul
pushf
pusha
pop
adc
scas
inc
xchg
add
jl
arpl
sbb
cmpb
fsts
xlat
pop
push
jne
shl
mov
pop
push
xchg
aas
lahf
and
xchg
ret
iret
rcrb
fcoml
test
xchg
out
fldenv
pop
or
cmp
mov
les
jge
push
sub
jp
or
out
push
push
cltd
test
cwtl
adc
cmpsb
xor
cmp
jmp
ret
push
idivb
loop
fwait
pop
cli
or
rcll
icebp
xlat
dec
cmc
lods
repnz
cmp
and
loop
xchg
rolb
and
push
xchg
into
jns
pop
add
sbb
adc
sub
inc
push
sbbb
int
fidivrs
lret
bound
scas
ss
or
rcrl
dec
and
push
add
mov
test
sbb
or
xor
aaa
sub
jmp
jb
inc
pop
test
arpl
inc
jo
rolb
jnp
xchg
xor
movsl
cmp
cmp
shrl
and
test
push
insl
rcrl
data16
data16
stos
stc
jmp
sti
pop
or
xor
cltd
ret
pop
lea
rcrl
pushl
push
mov
push
inc
inc
xchg
mov
cmp
cld
call
aas
iret
push
mov
std
xchg
mov
lret
aas
cmc
aas
push
outsb
into
sbb
lcall
sbb
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
or
adc
jle
and
jle
jge
fs
pop
xchg
arpl
cmpsb
inc
cmp
loop
adc
or
cmp
stos
setnp
lret
int3
mov
fistpl
outsb
dec
loope
or
adc
sti
pushf
lahf
inc
daa
ja
mov
loopne
je
mov
inc
sub
js
inc
mov
cmp
ljmp
das
sbb
cmp
xchg
test
push
sub
inc
nop
jae
xchg
cs
into
mov
and
test
rolb
cmp
push
out
jmp
call
dec
pop
mov
rcr
cmc
sub
and
jge
shlb
mov
stos
mov
sarl
jge
das
lea
into
mov
aam
adc
in
imul
ret
loopne
test
lea
lods
addl
dec
dec
mov
xchg
jl
pop
pop
mov
shrb
jne
stc
lea
loop
xchg
pop
mov
push
fimuls
aas
inc
mov
mov
cld
mov
mov
cmp
jmp
push
call
jg
pop
in
in
or
testb
imul
sbb
rcll
leave
out
adc
lcall
xchg
inc
mov
in
or
xlat
xchg
xorl
movsb
add
mull
add
xor
adcb
std
pop
adc
in
inc
inc
pop
lahf
and
inc
out
mov
mov
jg
or
imul
push
dec
inc
push
test
repnz
adc
push
pop
bound
fwait
inc
fistpl
ret
push
inc
push
andb
test
outsb
inc
mov
or
xor
xchg
xchg
int
sub
jb
jne
jb
adc
fnsave
inc
pop
mov
out
gs
hlt
shrb
cmp
sbb
push
cld
push
adc
lds
jecxz
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
cmp
or
clc
das
jl
ja
mov
arpl
jnp
pop
or
outsb
jnp
insb
mov
and
pushf
test
pop
and
aam
mov
xchg
add
pushl
das
cltd
and
sbb
cmp
jo
out
test
test
dec
add
pop
lret
sbb
xchg
shrb
hlt
nop
jbe
sahf
dec
mov
loope
inc
xorl
dec
mov
mov
dec
sub
mov
cmc
fdivs
pop
pop
test
cmp
xchg
jae
add
leave
and
jno
dec
mov
cwtl
std
cmpsb
subl
mov
xchg
fcoms
stc
jb
push
fwait
push
jp
lods
jge
sub
nop
mov
into
xor
fdivrl
lods
mov
mov
testl
pushf
inc
test
dec
shlb
shr
xchg
insl
movsb
adc
rcll
je
pop
popa
inc
outsb
int3
push
add
fildll
sti
lods
inc
push
in
mov
or
ljmp
aas
stos
push
add
mov
sub
mov
and
psrlw
int
adc
push
test
jae
mov
push
inc
test
mov
adc
fadds
mov
sbb
jp
pop
nop
jl
dec
xor
dec
pushf
push
jge
loopne
jno
dec
push
dec
jle
mov
add
test
pop
lcall
xor
pop
and
push
cmpsl
data16
outsb
jbe
mov
xor
sbb
adc
pop
xchg
sub
loope
or
mov
das
and
sahf
mov
fs
and
xor
mov
fildll
lcall
inc
add
imul
mov
and
mov
sub
aad
mov
pushf
ds
adc
jecxz
arpl
sbb
into
fabs
daa
int
add
xchg
insl
mov
jae
push
fdiv
or
xchg
arpl
lods
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
out
mov
and
jle
aaa
push
adc
loop
faddl
inc
sahf
lock
inc
stc
mov
sub
sub
pop
jno
out
jp
sbb
sub
test
inc
xchg
mov
repz
sub
movsl
data16
outsl
add
xor
in
jp
fs
adc
jl
sbb
xor
fcmovne
scas
jg
cli
in
dec
push
sbbb
mov
mov
jg
sarl
test
imul
dec
je
jnp
adc
and
stos
dec
mov
jne
dec
jle
stc
testb
bound
fisubrl
dec
shrl
les
xchg
xchg
sbb
std
sti
pop
es
push
std
enter
xlat
adc
push
enter
out
in
fisubs
neg
std
push
gs
repnz
addb
addr16
faddl
inc
imul
or
mov
lea
adcl
xchg
pop
lahf
test
insb
aad
movsb
in
push
bound
aad
add
dec
add
hlt
xor
add
mov
mov
incl
cmpsl
test
fwait
lret
lret
jns
jne
mov
fdivl
or
stos
je
xrstor
shrl
lods
cmc
add
cmp
inc
add
lcall
xor
xchg
fcompl
pop
mov
jp
xchg
movsl
jnp
fwait
cmpl
mov
mov
sub
fbstp
jbe
fdivp
jo
push
aad
sbb
push
push
fdivl
add
ss
push
add
mov
or
xchg
xchg
or
roll
repnz
aas
or
xchg
dec
mov
jae
dec
add
sub
cmpsb
mov
mov
push
ficoms
push
clc
mov
cmp
cmpsb
cmp
cmpsl
imul
xchg
jmp
lds
shl
sar
ss
mov
push
mov
mov
lret
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
les
jle
and
jle
jne
xchg
cs
pushl
insb
add
dec
jae
xor
mov
push
dec
or
push
xor
rorl
or
movsl
aam
scas
jbe
shll
or
mov
xchg
jno
sub
push
xchg
ret
pushl
loop
sub
and
stc
inc
cmp
sub
add
jne
mov
mov
addr16
inc
mov
and
out
dec
mov
add
jbe
sbb
imul
inc
mov
inc
aam
push
jno
lock
dec
je
and
ret
pop
fistl
pushl
stos
fildll
jb
sbb
pop
push
fimuls
loop
sbb
aad
inc
enter
fistl
fcoml
call
stos
das
shll
and
stos
loop
imulb
and
stos
add
pop
dec
mov
mov
iret
and
xor
mov
dec
movsb
arpl
jno
in
jne
in
fwait
pop
pop
ljmp
rcll
or
jns
xchg
or
cli
xchg
mov
ss
jmp
and
jnp
fimuls
or
push
add
pop
je
inc
jns
pop
out
add
in
out
mov
mov
push
xchg
vmptrst
dec
mov
fsubr
lcall
stos
mov
rcll
cmp
sub
rclb
out
add
inc
ja
shlb
cmpsl
pop
scas
sub
sbb
mov
icebp
cmp
adc
js
outsb
lcall
mov
xchg
adc
mov
inc
mul
or
sbb
xchg
jmp
jl
mov
cmc
in
test
adc
xor
add
xchg
push
cmp
out
arpl
mov
popa
inc
sub
dec
and
ja
in
movb
jg
adc
lea
loopne
push
fyl2xp1
movsb
lock
inc
pop
mull
pop
and
mov
out
enter
and
push
push
rcr
lret
cs
call
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
arpl
jnp
fucom
aad
mov
and
or
adc
adc
pushl
jmp
insl
xchg
sahf
shrb
insb
push
jg
jp
iret
jg
adc
sub
inc
add
sub
jmp
pop
cmpsl
ja
clc
cmp
test
popl
icebp
inc
mov
mov
pop
pushf
pop
int
xchg
out
popf
cmp
pop
adc
aam
cmp
cmp
jo
loop
sbb
adc
outsl
sbb
push
fiaddl
push
pop
push
gs
mov
test
and
enter
ret
lods
cmp
imul
mov
insl
inc
mov
sub
or
aaa
cmp
lcall
push
jns
xchg
popf
fsubrs
xchg
sahf
xchg
lods
inc
inc
add
sub
scas
mov
ret
ja
mov
or
mov
push
jle
inc
pusha
pop
xchg
mov
into
mov
push
jo
jns
add
mov
cwtl
in
notb
push
lock
outsl
in
xchg
jnp
dec
fsubrp
pushf
inc
jns
lahf
iret
lret
les
sbb
push
ret
and
push
iret
icebp
and
cmp
xchg
jecxz
in
jmp
imul
fisubl
aas
out
daa
ljmp
cmp
xor
cld
fs
ret
and
pop
mov
pop
xor
inc
xor
mov
dec
in
mov
sub
cmpsl
inc
inc
pop
cmp
mov
jne
mov
inc
xchg
sbb
insl
movsb
leave
sub
mov
sbb
js
and
in
mov
dec
hlt
rcr
inc
pop
and
loop
nop
bound
fcomip
jecxz
in
je
and
sti
push
or
pop
mov
gs
in
pop
pop
push
aad
and
stos
sbb
filds
std
add
adc
cli
add
jnp
add
mov
mov
push
mov
jae
lds
icebp
dec
sti
sub
das
lea
mov
outsl
or
sbb
shrl
pop
insb
adc
cld
inc
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
cmp
jle
cmp
out
sub
push
mov
jnp
shrl
dec
lods
push
into
push
and
pop
cmpsl
cmp
enter
fadds
call
xchg
pop
cmp
jo
fildl
repnz
mov
out
mov
gs
out
and
or
movsl
sbb
push
fiadds
fcoml
xchg
pusha
pop
adc
out
dec
push
shl
mov
outsb
shlb
push
adcl
loop
fwait
mov
inc
dec
jnp
pop
pop
sub
mov
jb
ljmp
scas
cbtw
jl
sub
pop
mov
push
dec
test
push
jae
out
adc
jo
fdivrl
add
ja
fisubrl
in
inc
scas
ret
imul
inc
rcll
scas
andb
add
jp
sub
xchg
jecxz
in
sbb
pushl
testl
call
fiaddl
push
or
push
push
in
inc
popf
orl
dec
test
push
insl
and
es
pop
or
and
repz
add
inc
mov
fistl
insb
out
pop
push
je
or
sarl
stc
out
xchg
popf
notb
popa
cmp
flds
pop
push
push
inc
or
add
clc
mov
sbb
sbb
test
pop
fistpll
shlb
aad
push
lds
shl
shll
push
dec
lcall
aas
xor
repnz
cmp
jns
movsl
icebp
addr16
dec
push
stos
daa
in
clc
adc
jne
loopne
sub
pop
adc
mov
pusha
fdivrl
sub
repz
and
insb
mov
aaa
sbb
push
mov
cmc
mov
or
xchg
cmc
ret
cmp
fbld
pop
add
int
or
mov
leave
or
mov
cmp
push
dec
rorl
push
ret
in
movsb
aam
inc
inc
xchg
mulb
repz
push
cmp
or
xchg
and
in
push
xor
or
out
inc
and
or
push
out
push
imul
push
fwait
outsb
ret
cwtl
out
or
push
push
sbbl
jmp
lds
popa
mov
fisttpll
inc
jle
jle
cmp
int3
mov
mov
in
arpl
cmpsl
repnz
ret
movsb
lods
xchg
mov
mov
in
aam
xchg
mov
mov
jmp
mov
xchg
ret
loop
pushf
push
push
xor
sbbb
inc
shrl
inc
push
push
inc
repnz
adc
mov
mov
xchg
pop
ja
loope
mov
iret
icebp
lds
inc
cmp
mov
push
mov
xor
inc
adc
and
adc
maskmovq
imull
mov
aaa
push
popf
xchg
fstp
iret
or
cmp
mov
out
cld
add
sbb
pop
xor
cmc
shlb
adc
dec
cmp
sbb
fs
mov
pusha
and
push
cmp
aas
cmp
stos
aas
cmpsb
cmc
ret
and
aam
mov
jge
inc
sbb
cli
je
jnp
mov
movsb
lret
push
xor
andb
mov
add
stc
lock
mov
and
mov
ljmp
sub
sbb
xchg
mov
dec
add
jl
xor
or
arpl
add
pop
cmc
mov
xchg
adc
jle
fidivs
fdivrl
outsl
mov
jne
hlt
jno
cmp
xchg
fisubrs
pop
or
adc
cwtl
pop
lds
out
push
clc
inc
mov
pop
repnz
jnp
test
add
pop
mov
dec
mull
push
inc
cmp
fsubs
sbb
sbb
jno
das
mov
sub
mov
lret
jge
fmull
dec
outsl
aam
dec
sbb
fwait
adc
ret
jmp
and
adc
add
add
push
lahf
and
rol
xchg
xor
jno
in
in
shrl
sub
or
hlt
or
mov
push
in
mov
into
jb
pop
out
pop
jnp
scas
lock
pop
mov
xchg
shl
and
daa
test
adc
inc
call
dec
add
orb
std
in
pop
jbe
sbb
mov
pop
ss
add
xor
add
test
add
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
xor
lods
cmp
jle
cmp
fstpl
pop
sti
pop
enter
call
push
cmp
jge
add
jp
lock
int3
jno
mov
add
mov
adc
push
xor
or
jbe
stc
pop
xor
push
cli
insl
adc
sbb
adc
dec
outsl
repz
mov
add
sub
daa
jle
adc
cmp
and
add
testl
inc
dec
mov
jo
js
hlt
adc
loopne
inc
clc
out
cmp
dec
cmp
int
mov
and
inc
decl
movsb
mov
and
in
mov
idiv
inc
xchg
stos
dec
push
mov
push
lret
inc
jl
in
mov
xor
add
mov
jg
jmp
dec
or
decl
dec
sub
add
and
pushl
imul
incb
daa
cmp
xchg
mov
fists
inc
jb
and
push
mov
into
shr
imul
and
add
mov
xchg
loop
sahf
sub
dec
ret
mov
add
test
bound
mov
stos
pop
out
fldt
mov
pop
dec
jl
repz
cmpsb
fcmove
test
in
insl
jno
cld
push
xor
jge
call
mov
fistps
fiaddl
lock
movl
cmp
movsl
cltd
loopne
dec
bound
add
pop
shll
mov
push
out
std
out
loop
ret
dec
stos
sub
jp
or
push
stos
inc
test
in
das
or
xchg
inc
and
push
lds
out
fdivs
jno
push
sbb
cld
in
cmp
fistpll
xlat
test
adc
lret
xchg
aad
pop
sub
jmp
xor
outsl
push
push
push
sti
inc
mov
mov
ljmp
imul
cli
adc
out
sarb
pop
sbb
dec
and
add
sub
scas
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
pop
mov
jle
jl
jle
subb
stos
shll
push
cmc
test
daa
push
lock
cltd
dec
jle
mov
sar
jecxz
bound
lods
cs
jne
mov
or
mov
lret
jmp
inc
je
cs
outsl
out
sub
loop
scas
fcom
nop
adc
adc
cmp
lods
add
push
or
sbb
xchg
or
cli
inc
inc
movsb
dec
frstor
repz
jecxz
sub
mov
sub
lret
sbb
imul
xchg
stos
ljmp
mov
add
dec
fsubl
movsl
cs
mov
scas
pop
cs
pushl
and
xchg
ret
int
push
dec
jmp
aaa
sahf
outsl
jp
frstor
test
enter
mov
xchg
ret
jp
mov
and
add
ret
sub
pop
incb
lret
mov
out
sbb
push
xlat
push
in
mov
test
test
notb
aaa
out
add
mov
and
fidivrs
std
and
lds
int3
inc
or
cmp
fsubrs
dec
daa
repnz
cmpsb
cmp
fnsave
inc
lods
and
dec
add
inc
mov
xor
fs
xchg
xchg
push
rolb
cmp
push
sub
inc
daa
shlb
notl
jo
lea
push
mov
stos
push
ljmp
push
cltd
push
push
cmp
in
push
push
and
xor
in
jne
ret
pop
sbb
movsl
mov
fcomps
int3
dec
and
xlat
xor
shll
mov
jge
dec
stos
dec
arpl
or
nop
mov
push
loope
andb
out
mov
inc
add
cltd
testl
sbb
faddl
aaa
dec
rep
cmp
inc
shlb
dec
rcll
inc
pop
loopne
jle
or
pop
or
ror
jg
sar
insl
cmp
add
cmp
enter
xor
add
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
dec
ret
dec
out
jle
cmp
dec
loope
fdiv
inc
movsb
aam
pop
or
inc
lock
insl
mov
mov
fsts
lds
jo
in
rclb
mov
xchg
pop
jmp
jl
pop
sub
inc
adc
cmp
imul
inc
movsb
push
enter
jp
into
jmp
add
in
cmpsb
out
jno
ret
push
adc
fmuls
dec
fidivrl
fsts
dec
aas
mov
adc
sbb
sbb
sbb
xchg
sub
mov
sarb
mov
fimull
jmp
cld
rclb
sub
push
repnz
das
jb
in
insb
mov
std
cmp
xor
xchg
cs
test
ror
subb
xor
leave
xor
fs
cltd
jae
push
std
xor
push
bound
dec
jno
or
cltd
lret
addr16
dec
inc
es
pop
push
inc
aaa
cmp
mov
jne
xor
jne
testb
adc
scas
lock
mov
decl
cs
js
sub
push
xlat
aad
clc
icebp
out
aad
mov
decb
xchg
cltd
sub
dec
or
dec
addl
fisubl
cmpsb
jae
int
mov
sbb
sub
pop
scas
rcr
push
cmp
xchg
adc
lods
inc
inc
ret
sub
loop
jae
test
inc
sahf
mov
mov
cmp
lcall
or
pushl
mov
inc
testl
mov
mov
sub
add
jecxz
inc
out
mov
pop
mov
or
xor
in
mov
jo
pop
mov
scas
pop
sti
sub
rolb
pushf
es
aam
rcrb
rclb
cli
mov
adc
fbld
dec
jmp
repz
fwait
push
in
fisttpl
jbe
je
pop
xchg
in
xor
in
xor
sbb
dec
cmpsb
adc
loop
or
aaa
clc
xchg
mov
xchg
aaa
xor
push
movsb
jg
xchg
pop
pop
xor
jge
sti
gs
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
cmp
jle
jl
jle
repz
daa
fwait
mov
jo
xchg
shlb
inc
mov
ret
ja
lock
jl
call
xchg
mov
fstps
inc
inc
in
leave
imul
sub
mov
shrl
fsubrl
loope
fistps
mov
cmpsl
jle
xchg
bound
pop
subl
sub
sub
jp
or
push
push
lret
rcrb
std
cltd
adc
shl
pop
arpl
dec
jae
xor
dec
push
xor
pop
inc
add
push
or
xchg
fsubrs
fucomi
add
cmc
dec
push
mov
sbb
cwtl
or
inc
or
ret
aaa
or
in
loopne
jecxz
jo
cwtl
pop
mov
mov
dec
jecxz
sbb
pop
mov
xchg
xor
pop
mov
jbe
das
inc
in
and
inc
std
mov
mov
out
gs
out
xchg
inc
xchg
ret
xor
inc
xlat
push
cmp
and
xchg
mov
lods
sub
cld
out
nop
cli
add
or
xchg
dec
mov
sbb
int3
mov
outsl
push
scas
dec
xor
enter
mov
sub
or
pop
jge
and
insl
fisttpll
js
push
rcll
inc
mov
add
jne
stos
dec
and
xlat
dec
add
inc
sbb
mov
inc
outsl
dec
cmc
adc
fldt
sbb
pop
leave
cmp
mov
dec
mov
push
fisubrs
mov
cmc
stc
mov
lods
and
pop
sar
test
and
in
fisubrl
inc
test
pop
jb
repnz
lahf
inc
mov
or
and
arpl
out
add
repz
popa
and
add
in
repz
lret
das
pop
pop
jbe
test
outsb
les
xor
fisttpll
mov
das
and
loope
sbb
pop
mov
ljmp
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
xchg
rcl
jmp
jle
jl
jle
jo
inc
sbb
jb
ret
lahf
leave
add
arpl
inc
sbb
xchg
adc
push
dec
sbb
or
cltd
out
mov
push
inc
mov
push
ljmp
out
dec
xchg
inc
int
and
loop
sub
test
cmpb
daa
pop
push
mov
mov
dec
push
dec
imull
in
cli
fprem
xor
test
sbb
mov
and
jp
add
ret
rep
add
mov
push
xchg
pop
cmp
inc
xchg
xchg
inc
notb
push
or
loopne
add
push
sbb
cwtl
cltd
mov
in
andb
pop
shll
cwtl
rol
sbb
mov
andb
pop
int
mov
das
loope
push
cmp
cwtl
jns
lahf
out
xchg
jecxz
popf
aam
daa
ret
mov
int3
inc
mov
mov
adc
aam
add
jo
mov
pop
in
add
mov
xchg
xchg
jne
xchg
mov
and
xor
sahf
or
cmpsb
jle
inc
inc
das
xchg
inc
mov
fstpt
xor
fcmovne
cli
andb
testb
scas
insl
push
lea
pop
ds
or
pop
push
je
sti
cmpsl
pop
shll
stos
inc
and
aas
leave
shrb
inc
xchg
mov
cli
pop
aas
in
rcrb
mov
loop
repz
add
sbb
mov
adc
sub
lcall
stc
fwait
dec
scas
push
push
mov
dec
dec
jne
mov
inc
insl
or
outsb
jle
inc
call
es
loop
dec
and
addr16
mov
aad
leavew
inc
scas
inc
mov
js
xor
dec
inc
hlt
cltd
push
or
pop
mov
push
out
es
mov
xchg
js
imul
sub
mov
lock
arpl
mov
mov
cli
mov
jle
pop
mov
mov
or
sub
out
jb
iret
cs
mov
enter
or
imul
add
je
add
out
ss
add
add
add
leave
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
mov
cmp
mov
add
xchg
push
push
insb
xchg
movsl
cmpsb
jp
xor
lods
mov
xchg
jne
ds
or
add
sub
cwtl
sbb
push
jg
aad
lods
mov
aam
ficoms
inc
sub
mov
cmp
jp
cmp
stos
stos
neg
and
sub
xor
or
pop
add
arpl
loope
movsl
leave
nop
xor
imul
test
not
ljmp
loopne
outsb
push
int
in
xor
test
fidivrs
inc
push
xor
arpl
ud2
jns
fldl
add
xchg
xor
mov
xlat
cmp
jne
data16
jb
and
into
pushw
xor
out
pop
scas
xlat
andb
in
icebp
imul
fidivrl
pop
jne
aaa
xchg
rorl
jne
int
in
cld
pop
xor
jl
push
jnp
inc
imul
push
push
imull
jo
and
dec
andb
push
xchg
dec
ds
mov
sub
int3
add
and
dec
or
mov
leave
sbb
lret
ret
shlb
out
push
movsl
ret
sbb
adc
lods
out
pop
and
sbb
push
add
xor
mov
or
or
movsl
xchg
fimuls
xchg
or
aad
test
fisubl
sarl
push
adc
pushf
insb
pop
in
aas
mov
sub
cltd
in
sarl
daa
dec
loope
mov
imul
xorl
cli
es
inc
jns
lcall
stos
or
jg
cmc
popf
jmp
ds
xor
or
jmp
les
das
xorl
out
and
in
add
xchg
leave
jno
aaa
int
push
and
loope
mov
adc
icebp
out
mov
filds
fstl
or
jmp
or
leave
mov
dec
sbb
and
push
shlb
js
cmpsl
sub
inc
mov
mov
ds
adc
jo
add
inc
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
andb
idivl
cmp
mov
sub
inc
sti
dec
and
or
lret
fistpl
rcr
pop
ficomps
rcl
mov
inc
imul
repz
dec
test
inc
shlb
cs
or
mov
pusha
notl
cmpsb
jo
or
nop
sub
push
icebp
push
leave
mov
imul
out
push
jnp
jb
add
push
mov
jl
lods
push
adc
movsl
scas
mov
sub
inc
insl
ret
enter
xor
adc
push
sbb
into
sub
push
mov
scas
pop
and
xchg
cltd
add
xchg
leave
sbb
dec
inc
add
notl
out
xor
incl
dec
inc
or
and
xor
mov
imul
enter
mov
mov
jmp
sub
lods
pop
mov
mov
xor
daa
icebp
cmp
pop
iret
lret
pusha
adc
add
cmc
xor
adc
xlat
std
cmpsl
mov
xchg
cltd
adc
adc
jge
sbb
jle
cmp
ret
imul
push
lds
aaa
inc
inc
std
inc
pusha
scas
add
xchg
xchg
inc
add
adc
sarl
jecxz
xor
repz
pop
ret
add
add
xchg
xchg
or
mov
test
mov
sbb
sbb
push
mov
test
flds
into
ss
outsl
out
mov
filds
adc
pop
test
add
jno,pt
fimuls
push
out
data16
and
push
sub
dec
inc
nop
test
inc
push
push
push
sbb
add
ljmp
pop
mov
rcl
insb
insb
out
cmc
pushf
xchg
and
lret
dec
pushf
xor
clc
aaa
inc
sbb
mov
insb
adc
pop
aad
adc
insb
push
gs
lds
inc
xor
sbb
mov
dec
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
call
bnd
cmp
hlt
and
fmuls
stc
jle
cmp
lret
pushf
add
popa
and
cwtl
push
cmp
in
xchg
mov
xor
aam
das
clc
gs
int3
fisttps
aad
dec
aam
shr
ret
out
and
test
jle
xchg
xlat
and
and
es
mov
stos
push
adc
sbb
or
mov
lretw
insb
xchg
arpl
push
cld
repnz
popa
sbb
je
sub
dec
inc
in
dec
mov
lret
jb
or
xchg
and
dec
and
sbb
mov
mov
jae
pop
dec
sarb
fstl
mov
les
daa
ljmp
push
pop
jbe
inc
xchg
xchg
incl
repnz
mov
repz
pop
mov
cmp
fists
pop
xchg
pop
out
cmp
ss
daa
and
scas
sbb
out
cmpsl
dec
fiadds
sbbl
dec
pop
pop
sbb
push
xlat
movsb
inc
fwait
mov
lahf
faddp
pushf
xlat
add
mov
or
popa
bound
fwait
mov
sti
or
jmp
fld1
stc
dec
push
xor
hlt
inc
dec
xor
xchg
sub
mov
sbb
daa
icebp
dec
sub
int3
mov
pusha
insl
push
mov
push
ficomps
test
out
dec
popf
jl
push
xchg
sub
clc
xor
and
ljmp
cmpsb
roll
or
inc
and
lret
push
clc
sbb
cmp
xchg
xor
mov
ret
out
push
mov
cli
stc
lods
adc
rorb
repnz
pop
jbe
xor
and
out
sbb
cld
or
push
scas
pop
fldt
mov
sti
clc
and
dec
or
xchg
mov
frstor
xchg
cs
insl
out
inc
jae
stos
cmp
pop
and
push
mov
or
ja
adc
mov
dec
mov
aad
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
adc
lock
cmp
add
mov
sbb
jb,pt
cmpsb
push
shll
xchg
ds
fnstsw
xor
clc
loop
rorb
add
jmp
mov
xchg
mov
test
hlt
dec
cmpsb
mov
imul
leave
inc
push
daa
aad
cmp
inc
xor
xchg
cmp
ror
xchg
mov
mov
jno
js
cmpsl
mov
cwtl
xor
inc
in
loope
xchg
mov
cmp
fsubrs
xor
mov
and
xor
mov
inc
sahf
popf
cld
push
aaa
or
pop
xorb
xor
cli
ja
loop
call
jg
test
cmpsl
jb
divl
mov
mov
or
shrb
mov
test
idivb
jne
cmp
addb
push
inc
ja
sbb
lods
xchg
inc
sbb
cmp
aam
or
inc
enter
and
cld
popa
lock
insb
mov
push
inc
sti
bound
dec
stc
lret
inc
mov
insl
add
in
test
xchg
add
pushf
jo
jmp
dec
dec
adc
aad
xchg
mov
aas
or
pop
mov
pop
sbb
pop
xlat
or
cwtl
shr
pushf
jg
sub
xor
insb
and
cmp
mov
pop
xor
pop
addb
loopne
mov
ret
stos
push
push
jl
sub
pop
dec
rcl
sbb
sbb
icebp
cmc
xchg
xor
cld
test
sbb
jl
stc
mov
lods
or
pop
push
ja
mov
jmp
push
inc
psubd
ret
pop
gs
das
and
or
mov
inc
out
fldcw
mov
mov
nop
fidivrl
std
and
ret
aad
mov
push
inc
jge
mov
repnz
xchg
es
lds
lahf
sar
fimuls
xchg
hlt
imul
sti
push
icebp
lds
sub
rol
test
inc
cli
lret
insl
insl
sbb
fisubrs
orl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
jns
push
stos
mov
jle
cmp
inc
mov
repnz
mov
jle
popa
and
cmpsl
bnd
jb
add
mov
mov
subl
out
add
in
sbb
push
cmp
add
dec
mov
hlt
data16
dec
xor
sbb
pop
sarl
jns
adc
fiadds
mov
jnp
insl
mov
xchg
pop
cltd
lea
and
jle
jae
movsb
push
enter
int
arpl
or
ret
mov
lahf
rcrb
out
dec
lcall
and
mov
pushf
push
aas
push
lret
inc
lcall
lea
out
push
orl
js
mov
pop
jnp
pop
mov
aaa
sahf
in
aaa
call
cwtl
push
xchg
sub
jecxz
push
iret
and
pop
scas
adc
imul
inc
push
adc
or
xchg
jbe
stos
xor
mov
in
fstpt
add
daa
mov
push
jle
cmp
mov
cwtl
movsl
aas
fs
and
push
insb
mov
inc
arpl
push
mov
fstpt
dec
sub
shl
mov
lods
mov
std
stc
mov
lods
dec
out
movsl
push
add
in
scas
popf
jns
cmp
pop
adc
inc
and
and
dec
inc
push
pop
add
cmp
xchg
movsl
dec
js
mov
jns
inc
lret
scas
or
cmpl
je
cmpsl
and
pop
roll
xchg
outsl
inc
mov
pusha
roll
xor
mull
push
in
mov
inc
pop
int3
dec
rclb
pop
dec
lock
gs
fistpll
out
lret
je
and
xchg
ret
into
xlat
mov
jne
call
subb
shrb
mov
xor
stos
test
test
jae
inc
js
push
and
movsb
jae
popa
xchg
xor
call
mov
inc
pop
and
cmp
xchg
cld
shr
jne
test
jns
out
jne
jmp
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
stos
sub
std
jle
cmp
cli
xor
pop
jns
cmp
fidivrl
ret
shll
nop
mov
sti
jno
and
inc
mov
jle
dec
clc
rol
inc
ret
dec
insb
or
push
dec
jo
inc
sbb
push
mov
jb
jno
popf
loopne
inc
cmp
or
pop
pop
stc
movsb
xlat
pop
movl
sbb
shl
shl
lea
cmp
xchg
lcall
pop
xchg
and
add
and
fdivrp
movsb
inc
jnp
mov
mov
push
jg
fs
adc
hlt
and
aaa
jecxz
adc
lock
push
or
lods
rorl
shlb
cwtl
and
adc
mov
cmp
repz
xor
cltd
popa
or
sub
xchg
and
lret
pop
mov
lret
add
dec
add
dec
in
test
mov
imul
and
inc
or
fwait
ljmp
mov
iret
adc
out
push
ss
pop
shrb
clc
ret
xchg
stc
mov
sbb
inc
push
ja
imul
lock
cmp
clc
pop
sti
loopne
lods
stc
cmpsb
lcall
adc
dec
xor
add
cld
mov
call
or
jmp
xchg
jge
adc
test
decb
mov
loope
jl
int3
mov
bound
test
in
rcrl
dec
popf
ret
mov
icebp
dec
lcall
lock
out
les
in
rorb
in
and
in
and
decl
pusha
jne
adc
and
add
pop
sbb
ret
fldl
ds
mov
push
lea
push
jl
mov
push
iret
scas
push
aad
or
pop
out
cli
into
int3
or
mov
cmp
cmpsb
xchg
imul
xor
mov
int3
cltd
scas
jb
xchg
xor
sbb
lock
xlat
aam
pop
in
scas
and
loop
jge
cmp
aas
jmp
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
xor
jle
jl
jle
fcmovbe
rcll
in
js
orl
lock
leave
or
outsl
int3
pop
les
aaa
adc
cmp
push
dec
ret
outsb
pushf
inc
mov
stos
repz
add
mov
loop
dec
jle
movsb
insb
inc
inc
jl
ret
jecxz
push
xchg
or
mov
inc
push
int
xorl
iret
lods
testb
int3
into
orl
call
lahf
js
and
sarb
outsb
jns
loop
sub
sub
xor
sbb
lcall
mov
pop
popf
jo
sub
push
mov
push
pop
xchg
cmpsb
cli
outsb
popf
mov
jle
loop
or
inc
rorb
dec
rcl
mov
das
sbb
mov
xlat
call
dec
les
inc
dec
fists
adc
rcr
js
ret
mov
outsb
pop
push
lods
out
sbb
movsb
inc
mov
jbe
sub
clc
or
lods
pop
sub
push
or
add
ret
mov
cs
mov
dec
fidivs
in
add
sahf
cmpsl
lcall
roll
shlb
repz
iret
arpl
push
iret
ss
in
outsb
adc
insl
scas
ss
sbb
jnp
xor
add
ljmp
outsb
daa
shll
xor
and
pop
rclb
xor
push
jb
cmp
std
xchg
adc
lahf
xchg
adc
scas
dec
mov
imul
push
push
testl
push
mov
xchg
jecxz
mov
js
lret
int
jle
je
xchg
cmpsl
pop
fisubs
mov
stos
cmc
cltd
xchg
mov
ficomps
aas
test
andl
mov
popa
mov
xchg
daa
daa
mov
dec
cmp
scas
dec
pop
jl
js
jle
mov
es
xchg
loope
add
sub
iret
cmpsl
popa
sbb
fistps
fbstp
or
bound
pop
xchg
testl
pop
aas
xchg
icebp
cltd
mov
shll
fwait
insb
jae
mov
pop
ret
rcrl
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
scas
cmp
jle
jl
jle
xchg
aam
mov
add
jmp
out
or
sbb
popf
cli
out
sbbb
dec
inc
add
aam
xchg
mov
sub
xchg
push
fcoms
mov
mov
pop
ds
shl
mov
add
ja
lods
ljmp
in
mov
and
pop
xchg
ret
jg
cwtl
pop
mov
xor
fdivrl
jmp
sub
mov
jbe
fwait
sbb
mov
or
xchg
sub
stc
stos
arpl
insl
sub
repnz
add
pusha
dec
xchg
mov
call
mov
lret
xchg
lods
inc
cmp
sub
pop
push
or
sub
cmp
xor
ret
into
dec
imul
push
pushf
jmp
or
loope
add
je
rcll
insl
cmp
dec
and
xor
dec
mov
pusha
jp
popl
int3
mulb
sbb
imul
ds
push
mov
jnp
push
out
clc
xchg
sub
pusha
addr16
mov
mov
inc
mov
mov
xchg
les
jmp
or
mov
roll
sub
out
sbb
scas
xor
enter
mov
jmp
inc
leave
inc
xchg
cmp
enter
mov
rcrb
sbb
inc
add
push
or
leave
sub
pop
loopne
lock
dec
push
sbb
xchg
and
je
cwtl
push
mov
ja
dec
ja
mov
inc
push
outsb
jne
sbb
es
aam
pop
cs
xorb
and
adc
or
jne
adc
mov
jno
aas
xchg
lock
xor
std
and
aam
cld
stc
jle
mov
sbb
rcr
ret
int
adc
xor
push
out
mov
std
imul
data16
cmp
mov
xchg
fmul
fwait
movsb
mov
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
sub
jle
jl
jle
push
jp
mov
push
inc
pushl
rcll
out
popa
sbb
pop
sahf
jb
xor
pushl
push
sub
push
je
negb
add
xor
jecxz
mov
pusha
dec
inc
test
xlat
rcrl
inc
inc
cmp
cmp
xchg
xchg
jb
mov
xor
stos
pop
loopne
ret
lahf
imul
xchg
lods
mov
and
push
mov
mov
dec
xchg
repnz
dec
jbe
mov
push
cmp
pop
movsb
dec
add
sub
jl
notl
hlt
sub
das
pop
xlat
pop
ds
movsb
xchg
pop
xor
sub
sbb
bound
mov
mov
insb
pop
aaa
mov
xchg
push
and
test
fcompl
sub
loop
mov
pop
je
sarl
jns
sub
div
je
mov
jge
and
mov
jo
mov
scas
lds
repz
cmp
mov
clc
mov
out
mov
jmp
push
push
or
fisttps
jle
cmp
add
in
test
sub
sbb
xor
fbstp
subl
test
fcomps
es
in
fistpll
or
fisttpll
lods
push
xchg
lcall
fmulp
nop
lea
es
inc
mov
xchg
xchg
sbb
psubq
or
dec
data16
in
scas
and
hlt
mov
jbe
rep
xchg
shl
xor
cmpsb
dec
mov
mov
push
mov
cmc
orb
sbb
popa
mov
div
pop
inc
xchg
push
sbb
add
jmp
pop
xchg
rcrb
imul
pop
push
jecxz
mov
pop
jo
adcb
pop
bound
push
xchg
inc
jb
jp
daa
sub
mov
scas
lds
xor
adc
stos
ret
inc
cld
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
sar
nop
push
push
adc
jle
cmp
lcall
mov
pop
and
rclb
xchg
sarb
rolb
gs
add
movsl
pop
sbb
fsubs
add
jno
and
pop
scas
mov
or
jne
xchg
sub
daa
mov
pushf
adcb
ja
fsubrs
outsb
or
loop
iret
mov
out
mov
and
rorl
ja
jp
fisubs
sub
mov
cmc
xchg
cmp
cmp
ja
jge
testb
rcrb
subb
iret
int
jo
loopne
sbb
loope
push
fisubrl
lret
mov
sub
or
inc
hlt
mov
sti
sub
test
pop
pop
into
fdivs
cmp
mov
adc
movl
cmp
and
sbb
subb
and
mov
sub
mov
out
addb
xchg
lock
packssdw
mov
lods
inc
adc
sub
scas
sbb
cli
sub
mov
cltd
ja
push
stos
popa
xor
push
dec
out
ljmp
jo
aas
fs
insb
pop
je
jae
test
pop
stos
bound
test
pop
dec
jae
mov
pop
push
pop
mov
rorb
mov
je
aad
pop
sbbl
insb
mov
lcall
inc
push
lahf
in
pop
cli
mov
dec
fdivl
imul
jmp
sub
mov
cmpsl
and
rcll
fstps
fs
aaa
adcl
in
xor
nop
and
scas
cmpsl
ds
test
xchg
dec
gs
push
js
push
test
xchg
decb
js
int
popf
mov
lock
test
lcall
jns
aaa
je
sub
mov
push
push
fadd
ffreep
cltd
xor
sbb
outsb
fiaddl
xchg
push
jne
mov
xchg
pusha
push
pop
jns
jb
pop
jg
je
jbe
xchg
pop
mov
subl
sbb
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
lock
cmp
sbb
outsb
cwtl
push
xchg
sbb
aam
and
in
cmp
lds
clc
dec
pushf
cmp
jmp
inc
addr16
scas
add
dec
xchg
xor
jg
sahf
fldcw
mov
xchg
mov
xor
in
push
jne
insl
popa
ja
jno
repz
loop
cltd
push
ljmp
fidivl
mov
sub
clc
cwtl
inc
mov
mov
jp
cltd
and
inc
lcall
push
cmpsl
push
fnstcw
adc
movsb
and
clc
xor
or
test
aas
mov
adc
shll
sub
add
mov
cmp
adc
adc
xor
pop
lock
aam
mov
mov
aaa
lret
dec
dec
jg
dec
xchg
mov
mov
inc
cs
mov
loop
jl
jmp
popl
imul
push
mov
lock
sbb
repnz
xchg
pop
sub
push
mov
movsl
repz
pop
sahf
movsl
loope
push
push
mov
nop
xor
filds
sub
dec
insb
jne
xchg
call
outsl
jbe
and
ljmp
dec
jae
sub
cmp
xchg
and
stos
fcomi
popa
push
jl
jno
inc
rclb
rorl
jo
add
lcall
add
in
test
ljmp
fwait
in
push
in
sbb
mov
xchg
aaa
dec
add
addb
dec
loopne
and
movsl
call
cs
inc
mov
mov
jne
jg
ss
fucom
pop
addr16
std
and
shlb
mov
outsb
and
popa
movsb
ljmp
mov
push
sub
fwait
push
jno
imul
push
xor
jno
pop
xor
les
push
outsb
and
loopne
filds
xchg
imul
fdivrl
rcrb
leave
push
jle
push
fldcw
add
out
stos
repz
icebp
xchg
vmwrite
push
mov
leave
ret
inc
les
jmp
mov
orb
add
jmp
pop
mov
cwtl
mov
mov
cmp
sub
mov
cmp
cmp
adc
notb
inc
int
inc
sub
lret
push
dec
dec
sarb
push
je
mov
sbb
dec
sub
mov
out
aaa
data16
push
sub
mov
push
nop
cmp
cmp
pop
push
mov
pop
out
insb
fstpt
in
jb
popf
data16
ret
xor
incl
mov
inc
push
inc
lock
jnp
into
xchg
jmp
int
or
xchg
jb
idivb
or
out
inc
xchg
cltd
mov
cmp
out
repnz
cltd
xchg
into
xchg
mov
xchg
and
cmpsl
addr16
mov
cmpsb
inc
into
enter
in
lret
push
insb
repnz
mov
lcall
push
mov
jp
call
mov
push
into
xor
sub
sbb
es
lock
cmpb
push
imul
fbstp
cmp
adc
and
sbb
push
jne
push
mov
add
xor
repnz
mov
mov
das
xchg
dec
std
inc
add
aas
sub
mov
je
mov
lods
outsl
and
cmp
rcl
adc
jns
lock
mov
in
mov
push
or
dec
stc
movsb
cmpb
lret
into
ret
or
sbbb
xchg
stos
pop
idivl
les
inc
shl
ja
xchg
negl
data16
sub
fnstenv
int
push
or
dec
sbb
mov
mov
or
frstor
push
lcall
sub
dec
pop
mov
jo
das
cli
test
out
mov
or
icebp
or
jb
mov
rolb
insl
nop
add
daa
pop
aaa
adc
and
mov
xor
pop
outsl
jmp
and
sub
out
sub
subl
hlt
addr16
in
ss
fcmove
mov
arpl
in
sub
out
inc
push
push
lods
divl
dec
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
jae,pt
bound
jle
xchg
iret
mov
push
inc
sbb
aad
fsubs
rcpps
jne
outsb
mov
ret
pusha
dec
lea
in
inc
pop
pop
xchg
lods
enter
les
push
dec
add
xchg
inc
fsubrs
or
ret
js
aas
test
pushf
das
push
cmp
test
adc
insl
enter
sub
mov
aaa
push
icebp
pop
sbb
test
mov
scas
mov
and
jbe
sub
jecxz
xchg
std
add
inc
clc
mov
int
lret
sbb
sbb
fcmove
mov
jne
loope
pop
jne
lods
push
or
outsb
push
inc
dec
pop
dec
adc
mov
xchg
adc
dec
loop
sbb
sbbl
push
arpl
pushf
pop
or
adc
sahf
fwait
in
xchg
push
push
sub
mov
pop
adc
gs
clc
push
push
push
fs
sar
bound
roll
xchg
jle
repz
xor
and
lcall
jns
cmp
push
out
outsb
fsubr
imul
pop
imulb
mov
push
push
faddl
aas
dec
or
cltd
inc
xchg
push
movsl
js
negl
sarb
mov
cmpb
jge
fstl
cmpl
sbb
lds
jle
mov
in
cs
js
adc
repz
das
jmp
imul
mov
fs
loop
adc
push
jle
scas
test
mov
jne
out
dec
jl
test
push
rorb
stc
adc
and
push
ror
movsl
cmpsb
sbb
xor
popa
sti
xchg
mov
or
add
jne
enter
add
test
loopne
xchg
push
test
ja
icebp
sub
xchg
pop
movsb
daa
jno
mov
or
xchg
mov
adc
jmp
rolb
cmp
loope
bound
sbb
push
nop
test
xlat
or
data16
flds
add
push
std
dec
sahf
push
push
add
aad
inc
or
jle
cmp
and
dec
push
pop
idivl
in
push
aad
fldcw
pop
add
stos
sbb
push
adc
push
sbb
test
test
pop
push
fildll
jbe
imul
scas
fcomps
sahf
jo
pop
push
or
push
dec
xchg
sub
jp
dec
dec
mov
lahf
xor
bound
and
addl
dec
inc
fsubp
jns
sbb
insl
mov
jo
jge
mov
sub
cmc
push
test
sbb
sti
faddl
cmpsb
and
in
inc
adc
insb
pop
and
push
in
insl
xor
cmp
cmpsb
jo
fisubrl
sbb
cmpb
xchg
lds
ds
mov
icebp
xor
adc
jp
mov
pop
add
lcall
xor
loopne
addb
mov
sbb
icebp
mov
repnz
xchg
jb
push
mov
add
jle
mov
movsl
addb
adc
pop
shlb
stos
xchg
pop
mov
fsubrs
repnz
sarb
jb
push
test
lds
repz
or
mov
or
movntps
push
rol
dec
add
push
loope
sbb
mov
loop
stos
jmp
jno
in
sahf
jb
lods
pop
les
das
pop
mov
pop
lock
inc
lahf
push
sti
jle
adc
push
cmpsb
push
aam
adc
cmp
mov
mov
xchg
mov
aad
push
adc
movsb
out
mov
inc
dec
push
push
inc
cmpsl
lds
testl
mov
dec
inc
ss
xor
hlt
lods
stos
out
push
xchg
andl
lcall
push
mov
out
cmp
push
cs
lahf
movsb
out
lea
jae
jbe
in
loope
inc
pop
sbb
popa
cmpsb
sub
jge
fiadds
or
xchg
fs
enter
mov
testl
jae,pn
inc
ss
pop
out
inc
push
insb
mov
sub
fmull
inc
in
scas
roll
xchg
jmp
sahf
testb
push
repz
jae
ficoms
sub
sub
mov
cmp
lock
leave
outsb
jle
daa
add
xchg
mov
fsubs
push
add
nop
les
push
jne
xchg
mov
add
sub
ficoml
add
fs
sti
mov
sahf
mov
movsb
aas
scas
dec
add
dec
dec
sbb
adc
xchg
fcompl
andl
loope
shrl
ds
int3
minps
adc
sub
test
xchg
movsb
in
sub
idiv
add
jp
and
mov
dec
dec
in
or
pop
pop
push
adc
adc
and
dec
or
mov
mov
lods
movsl
mov
xor
cmc
adc
fisubl
xchg
sahf
jecxz
pop
testb
dec
mov
mov
arpl
push
push
cmp
aad
clc
cmc
cmp
addr16
sahf
arpl
fisttpl
sub
insb
mov
es
inc
aaa
iret
cmp
idiv
dec
mov
dec
pop
jnp
data16
mov
arpl
jnp
outsb
mov
sbb
mov
out
jbe
adc
testl
cld
lcall
or
lahf
stos
add
mov
add
shl
jge
fmuls
pusha
dec
ret
sub
jl
ss
adc
stos
adc
es
es
push
mov
je
fmuls
movsb
scas
mov
roll
push
iret
test
lods
int
int3
lea
xchg
fmull
dec
lret
sbb
aam
cs
mov
cwtl
xchg
mov
add
pop
sbb
xchg
addb
sub
pusha
notb
int3
rcr
aam
sbb
repnz
cmp
or
arpl
cld
sbb
cwtl
push
pusha
push
sysenter
xor
jle
xchg
clc
xchg
hlt
cs
inc
push
xchg
jg,pt
loop
mulb
jge
out
dec
lods
cld
cmp
mov
or
es
loopne
push
and
outsb
stos
in
jecxz
push
xor
mov
dec
jmp
fwait
push
mov
mov
mov
pop
xchg
jle
jl
jle
data16
jb
movsb
jl
outsb
loope
mov
fs
aad
ja
inc
and
sbb
sub
mov
lock
lcall
xchg
and
dec
inc
add
xchg
xchg
mov
jl
aaa
inc
arpl
jle
push
pop
jno
jle
enter
mov
or
aas
adc
jp
test
repnz
push
cltd
xchg
push
cmc
scas
sbb
push
adcl
out
push
add
push
push
xchg
push
pop
mov
mov
push
pop
mov
in
sbb
das
dec
xchg
pushf
js
add
test
xchg
insl
fisttpl
mov
xchg
sahf
inc
enter
xchg
xor
jmp
mov
and
jle
push
fildl
jecxz
inc
fnsetpm(287
mov
rcrb
stos
pop
int
dec
ret
pop
and
mov
pop
in
dec
push
ret
into
push
imull
fdivs
test
movsb
inc
xchg
mov
add
cmc
ficoms
xchg
faddl
lcall
push
xchg
cmp
cmpb
rclb
pop
inc
out
sbb
decb
or
sbb
and
loopne
pop
sub
ja
fucom
jle
dec
and
lock
inc
mov
jle
mov
sub
loop
notl
aaa
mov
xchg
inc
ds
add
cmp
jo
xor
jne
dec
mov
je
insl
imul
es
lcall
aas
jg
sub
arpl
sbb
rorl
ret
xchg
ret
in
mov
das
mov
sub
add
adc
lods
subb
lahf
fucom
enter
jmp
mov
sub
fcomps
cmpl
xor
daa
scas
push
mov
cmpsb
pop
add
sahf
int3
shlb
sub
add
icebp
mov
test
fmuls
pop
lcall
add
push
or
in
inc
std
adc
adc
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
push
hlt
adc
jle
jl,pt
jle
adc
mov
pop
or
adc
gs
adc
faddl
inc
mov
in
push
xor
sbb
jo
das
jne
in
jg
mov
iret
sbb
inc
fidivrl
cld
sub
andl
jno
icebp
outsb
test
je
fldt
hlt
popa
push
pop
cmp
lods
ja
jle
xor
adc
lods
xchg
mov
and
xor
mov
mov
enter
adc
lret
push
repnz
mov
inc
sbb
data16
imul
jg
sbb
int
and
xchg
and
jb
pop
jne
xchg
aad
ficomps
mov
sbb
xchg
sub
ficomps
ss
cmpsl
movsl
mov
les
pop
test
aaa
jl
sbb
outsb
or
into
mov
and
inc
mov
and
cmc
shl
or
mov
mov
cmp
cmpsl
push
mov
sbb
bound
mov
jae
or
lock
imul
pusha
mov
fst
bound
cli
cmpl
insl
mov
clc
and
inc
jb
imul
into
rolb
and
add
sbb
mov
clc
cmp
adc
push
cmp
out
and
mov
out
inc
test
bound
cld
mov
mov
xor
cs
inc
sbb
mov
aad
ds
inc
fcmovnu
mov
cmpsb
call
or
or
in
fisttpll
jmp
adc
ss
adc
jnp
add
lahf
mov
loopne
or
inc
fnstcw
rol
cli
stos
dec
mov
scas
addr16
adc
ljmp
xchg
outsb
mov
push
rcl
test
lea
fwait
adc
xchg
aam
mov
pop
sub
lock
stos
mov
iret
mov
lods
inc
in
daa
stos
aam
dec
daa
shlb
sbb
adc
shlb
lock
mov
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
adc
jle
jl,pt
jle
xchg
and
or
js
aad
xor
outsb
inc
push
pop
xor
cltd
jle
lods
or
fsubs
subb
lret
xor
stos
lret
lods
push
out
pop
push
mov
jae
sar
lret
pop
mov
inc
cli
xchg
inc
or
rcrb
stos
mov
dec
popa
dec
pop
sbb
imulb
adc
adc
xchg
adc
fneni(8087
flds
inc
mov
fsubl
cmpsl
push
sbbl
sub
mov
jle
enter
or
fcompl
xor
out
add
mov
fwait
sbb
lcall
cmc
mov
cmpl
shll
or
fsub
lea
xor
je
mov
shr
mov
push
jb
pop
loop
jge
xchg
xor
sbb
add
ret
nop
in
clc
and
cmp
pop
stos
pop
mov
arpl
aad
mov
rclb
mov
ds
push
divl
lahf
inc
sbb
cwtl
adc
repnz
arpl
push
sbb
subb
pop
sbb
push
and
outsb
jl
in
subl
fnstsw
or
and
fsincos
shll
add
in
sbb
jns
mov
add
lds
cmpsl
insl
pop
js
mov
mov
and
iret
cmc
jmp
popf
out
push
xchg
pop
mov
cmp
xchg
shr
dec
bound
or
jecxz
call
lret
add
adc
mov
pop
mov
lahf
fldenv
adc
xchg
add
lret
sti
sub
js
fwait
rolb
loop
test
pop
shrl
push
jnp
adc
jae
cmc
dec
test
movsl
xor
fwait
pop
gs
mov
orl
lret
pop
out
adc
adc
or
mov
das
cmpsb
cmp
ss
roll
aam
dec
adc
int3
push
sbb
js
mov
sbb
inc
cmp
jne
mov
xor
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
adcl
cld
fisubrs
arpl
in
mov
dec
lods
daa
insb
insl
adc
js
jl
mov
rorl
dec
gs
outsl
ffreep
ret
fisttpl
xor
stc
fists
dec
xchg
pop
pop
sbb
mov
push
and
jp
jbe
out
loope
in
sub
movsb
mov
pop
adc
fcomps
hlt
xorb
xor
testb
fs
sub
data16
shlb
mov
adc
mov
out
dec
and
out
mov
jne
mov
movsb
inc
xor
jp
jne
dec
mov
rorb
shlb
fsub
out
stc
jl
clc
cltd
sub
shl
xor
aam
mov
and
xchg
xchg
mov
mov
bound
out
inc
icebp
cmp
xchg
push
or
pop
je
fisubrl
or
rorl
and
enter
xchg
sbb
push
jle
add
fildl
add
sub
hlt
jecxz
scas
stos
add
adc
sahf
iret
hlt
mov
cs
or
cld
xchg
hlt
jg
dec
cmp
xor
fdivs
stc
cli
push
inc
mov
jb
adc
or
sub
adc
or
pop
jle
cltd
xor
mov
out
scas
dec
ss
rorl
into
inc
call
outsl
push
shrl
fcmove
sbb
imul
in
adc
or
inc
xchg
sub
xchg
jl
pop
addb
mov
bound
push
addl
loopne
mov
lods
mov
test
mov
sbb
mov
mov
fisubrl
movsl
ds
fsts
inc
aad
jae
lea
push
mov
fistps
imul
in
daa
jmp
cld
xor
cli
and
sbb
pop
and
insb
repz
or
sub
hlt
pop
shll
dec
push
xchg
mov
gs
add
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
notl
pushf
jle
adc
jle
stos
insl
jnp
popf
cmpsb
dec
mov
jne
jecxz
je
sbbb
push
insl
in
shll
sub
pop
and
cmp
and
sbb
jbe
arpl
shll
xor
test
mov
or
fstpt
push
adc
ss
push
faddl
and
les
sbb
hlt
and
xor
fs
lcall
jae
mov
inc
sbbb
js
jecxz
icebp
pushf
outsl
aad
push
rolb
loopne
dec
and
aaa
test
inc
ret
adc
xchg
inc
adc
sub
divb
add
lcall
sub
sbb
add
pop
sbb
lds
repnz
int
ljmp
add
dec
clc
outsl
pop
mov
ds
cmp
popf
fdivs
sub
pop
pop
pop
add
mov
inc
test
es
pushf
in
adc
fwait
in
cli
mov
and
inc
or
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
mov
aad
pop
popf
jle
adc
jle
dec
adc
and
shlb
mov
jne
sbb
or
pop
sub
inc
fbld
aaa
aam
dec
in
mov
mov
dec
cwtl
inc
jae
mov
and
xor
and
add
lcall
inc
ja
test
cmpsb
les
lahf
out
cmpsb
add
cwtl
pushf
mov
or
sub
cmp
stc
sub
mov
push
popa
pop
inc
adc
mov
and
mov
pop
sahf
test
dec
add
inc
aad
xchg
mov
or
push
aaa
cmp
sbb
xchg
aas
mov
fdivrp
lret
jno
stos
ja
mov
jae
outsl
jb
jp
mov
push
push
mov
or
sbb
cmp
dec
cmp
push
jns
fadd
and
movsl
lahf
push
cmp
pop
cmp
cmpsl
hlt
fidivrs
addl
jo
ljmp
lea
inc
xor
mov
jmp
out
aaa
ljmp
fld
movsb
and
out
dec
add
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
iret
xor
jle
jg
jle
ret
cmp
lret
dec
push
mov
ret
in
stos
out
inc
dec
mov
ret
into
in
add
push
pop
push
pop
xor
mov
aad
push
jne
mov
subb
rolb
jecxz
hlt
and
and
mov
mov
daa
add
incl
mov
shrl
cmp
or
imul
and
popf
icebp
sub
mov
mull
add
mov
push
mov
std
mov
pusha
cmpsl
mov
pop
les
push
jmp
inc
xchg
dec
sbb
jno
xchg
or
jle
outsl
inc
mov
mov
jg
push
out
xor
fisttps
ds
lahf
jb
jg
dec
push
cmpsb
or
fsubrs
mov
movsl
inc
push
sbbl
sbb
aam
sub
push
adc
fldenv
lods
mov
adc
imul
adc
dec
stos
push
jnp
sub
icebp
xor
fsubl
dec
inc
mov
int3
lock
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
xchg
je
mov
cwtl
jle
adc
jle
mov
scas
je
dec
adc
fs
inc
add
cwtl
clc
clc
and
scas
ret
repnz
sbb
lret
mov
add
arpl
push
or
dec
adc
fsubs
and
outsl
mov
push
leave
xor
xchg
insb
push
sub
out
pop
dec
test
xchg
lcall
and
jb
addr16
push
inc
or
pop
into
mov
insb
xchg
scas
push
pushf
add
pop
pop
lods
or
lret
sahf
jb
push
andb
stc
movsb
arpl
out
and
mov
mov
xchg
movsl
aam
push
aaa
scas
dec
sub
jp
inc
push
pop
pop
sub
addr16
dec
mov
sub
frstor
jl
lods
xchg
ss
pop
scas
sub
je
adc
outsb
inc
scas
sti
popf
xor
std
add
mov
sub
jge
lahf
and
fwait
sub
sbb
and
test
mov
outsl
and
cmc
sub
jo
adc
jecxz
std
shll
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
jecxz
dec
sub
jle
cmp
jecxz
jge
in
inc
cli
mov
and
pop
sbb
xor
push
xor
jle
xor
test
adc
or
and
jge
cwtl
mov
jp
insb
dec
mov
add
jle
push
pop
shll
cld
fldt
inc
fmuls
arpl
test
ret
dec
addr16
push
dec
dec
inc
and
xlat
push
mov
nop
out
dec
mov
xchg
enter
lret
cmc
mov
je
je
ret
add
lods
ret
cltd
lret
xlat
fnstsw
outsb
sahf
lock
sbb
adc
popa
mov
das
dec
mov
sbb
repz
imul
jge
ret
xor
mov
lea
jae
cmpsb
cmpsl
mov
xchg
dec
lcall
jnp
xor
lret
jecxz
imulb
rclb
leave
cmp
dec
push
enter
xor
add
repnz
add
das
dec
daa
gs
lds
vpaddq
and
movsl
out
or
clc
test
cmp
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
mov
ds
sbb
mov
inc
push
mov
jg
rorl
shrb
pop
gs
add
daa
je
xchg
cmpb
add
cmp
xchg
xor
mov
mov
jnp
push
mov
data16
mov
pop
and
and
dec
mov
out
add
scas
add
mov
add
rcr
push
idivb
popa
iret
pop
addr16
repz
pop
ss
int3
cld
push
xor
subl
xchg
stc
mov
mov
pop
call
cmp
leave
cltd
daa
and
xchg
push
jmp
incb
dec
cmc
jecxz
sub
jae
and
jecxz
dec
jbe
sbb
aaa
cwtl
and
adc
sbb
data16
sub
cmpsl
push
xchg
es
repz
push
sbb
mov
xchg
add
mov
dec
je
test
jbe
mov
mov
sahf
xchg
pop
adc
mov
pop
push
mov
adc
mov
mov
test
cmovo
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
jp
mov
cmpsl
jle
adc
jle
xchg
shll
jns
ja
mov
xor
cmp
push
xorl
cmp
mov
xchg
iret
movsb
faddl
push
mov
shll
push
addr16
outsb
sbb
mov
and
test
rcr
shlb
stc
pop
aam
arpl
sub
sbb
and
pop
adc
ret
addl
sti
push
pop
cmp
push
mov
imul
adc
scas
sub
fidivl
fnclex
sub
inc
adc
jl
push
bound
outsl
outsl
lret
popa
or
js
imul
sbbl
ja
rcrl
in
or
jo
mov
gs
std
mov
push
imul
dec
pop
into
outsb
dec
bswap
sbb
sbb
fisubs
outsb
jmp
mov
mov
xchg
es
loopne
adc
push
sub
cmp
cltd
hlt
loopne
mov
jne
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
xor
movsb
jle
adc
jle
inc
mov
inc
out
movsb
mov
fcompl
imul
push
inc
mov
rcrb
jge
jae
xchg
and
or
es
stc
jns
rol
jns
sub
pop
test
hlt
popf
push
bound
rorb
push
lret
mov
pop
mov
and
stos
or
roll
mov
mov
xor
or
and
stos
mov
xor
test
sub
pushl
aas
std
pop
shlb
mov
jecxz
xchg
dec
cltd
lret
push
adc
out
add
int
fisttpl
aad
stos
mov
push
call
inc
sub
push
pop
pop
jno
or
flds
test
rorl
cltd
ret
andl
fsubl
rorb
xchg
pusha
stos
in
or
cmp
xor
jl
scas
call
push
sbb
inc
int
test
push
mov
push
je
mov
push
or
push
xchg
stos
mov
mov
xlat
mov
lsl
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
inc
es
jle
fdivrl
sbb
mov
jl
jle
in
mov
rcrl
in
movb
nop
jmp
in
hlt
sub
lret
out
fidivl
int3
pop
repz
int3
dec
ss
fsubl
out
mov
mov
lods
xchg
sarl
mov
popa
inc
and
cmp
mov
xor
rcrb
push
lods
xorb
push
inc
cmpsb
push
clc
cld
mov
and
mov
dec
push
adc
mov
mov
mov
test
in
jno
out
out
loope
xchg
push
cld
movsb
cmpl
jae
ds
xchg
mov
inc
dec
jno
lcall
inc
pop
sbb
jl
cmc
jp
ds
inc
cs
fwait
repz
enter
push
cmc
push
push
add
out
inc
inc
ja
popa
and
je
jle
mov
dec
mov
stc
js
push
xlat
fcmovu
cli
xor
mov
jbe
aam
xor
xchg
mov
xchg
imul
sbb
mov
pop
es
test
in
fwait
nop
push
shlb
bound
movsb
in
sbb
sarb
xor
inc
push
fxch
lret
cmpsb
mov
xor
sti
mov
sahf
pushf
sahf
shrb
testl
sub
mov
sbb
je
adc
stc
scas
jmp
jg
pop
add
stos
sbbl
out
inc
dec
fstp
and
sarl
mov
mov
sbb
imul
sbb
sub
call
mov
test
repnz
loop
jb
sub
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
clc
inc
test
mov
inc
cwtl
dec
ret
fnstsw
scas
cli
push
push
and
mov
das
mov
mov
sti
mov
push
mov
mov
mov
jge
mov
pop
orb
pop
lods
insb
push
mov
pop
int3
cs
and
mov
mov
sbbl
fwait
xchg
inc
adc
sbb
lret
cmp
outsb
je
repnz
jb
les
addb
test
fstps
insl
cmp
in
insb
jbe
and
into
mov
cmp
lods
out
xor
stc
mov
aad
mov
imul
cmp
mov
movsb
jae
xor
das
mov
pop
out
push
xor
stos
sub
cld
jmp
shll
int
mov
fdivrp
xor
movsb
sbb
dec
pop
adc
inc
add
lock
push
inc
data16
pop
pop
imul
inc
scas
and
or
out
inc
or
mov
out
popf
fwait
mov
cli
push
jmp
inc
cs
out
sub
fmul
pcmpeqb
cmp
push
icebp
pop
jae
inc
dec
sbb
push
jne,pn
sbb
push
push
mov
ljmp
fcoms
adc
dec
add
cmp
ljmp
push
or
aad
push
sub
push
pop
adcl
sub
mov
popa
add
xchg
test
add
into
jo
movsb
loop
lea
xchg
push
mov
in
jp
test
adc
xchg
and
dec
in
xlat
xchg
mov
pop
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
rcrl
jge
jle
lea
nop
mov
cmp
shll
icebp
fwait
jecxz
invd
inc
outsb
movsl
or
mov
ret
mov
ja
inc
jno
dec
stc
push
sbb
jno
call
xchg
cmpb
inc
lock
les
inc
dec
dec
mov
jecxz
mov
ret
jne
rol
cs
insl
xchg
movl
push
cmp
mov
clc
fisttps
jmp
aaa
xchg
addr16
push
out
mov
or
cltd
aaa
test
ret
and
shrl
popa
and
pop
shr
stos
or
push
pop
mov
fptan
dec
je
push
pop
ljmp
mov
inc
clc
orl
push
stos
mov
cmpsl
dec
mov
adc
push
loopne
xchg
into
cmp
cmp
mov
mov
mulb
daa
xchg
cmp
jge
stos
stc
test
pusha
loopne
scas
int
nop
arpl
adc
in
aaa
out
pop
mov
ljmp
stos
adc
cmc
inc
cmp
pop
sub
mov
mov
into
sub
mov
xchg
pop
lret
lock
out
out
addl
out
pop
push
cmp
pop
push
dec
cmpsb
sbb
negl
movsl
fcmovnbe
adc
stos
lods
jno
adc
aas
fcoms
divb
sub
dec
ljmp
xorb
mov
xchg
les
xchg
in
stos
jle
das
mov
aaa
fwait
inc
push
pop
adc
xor
xchg
fistl
add
mov
xchg
sub
xchg
push
cs
xchg
repz
inc
outsl
clc
gs
adc
rorb
push
push
push
add
loope
inc
sub
inc
ret
rol
lock
in
decl
inc
popa
xchg
adc
sbb
add
cmp
mov
inc
add
adc
insl
in
xchg
jnp
sbb
adc
leave
fwait
adc
sbb
test
imul
cmpb
dec
inc
sti
cmp
fstpt
loopne
adc
mulb
aad
sbb
mov
clc
xor
dec
cmpsb
and
adc
push
jle
xchg
add
jo
dec
cmp
sub
mov
mov
pop
mov
dec
jo
jno
and
loop
sbb
or
repnz
rorb
inc
and
dec
mov
pushf
push
das
or
mov
push
call
jg
test
iret
sbb
and
in
imul
mov
cmp
outsl
xchg
daa
add
fbld
fimull
sub
push
fldt
pop
push
and
dec
scas
add
leave
in
int3
jp
leave
shl
je
out
pusha
out
push
dec
xor
imulb
aas
jb
xchg
inc
mov
scas
add
and
xchg
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
test
lods
jle
jl
jle
inc
push
es
fwait
sub
and
sub
insb
bound
lock
pop
pop
lods
mov
insb
mov
cmp
mov
cmpsl
ret
popa
imul
mov
fcoms
test
or
out
adc
out
mov
or
jp
xor
adc
sbb
ret
or
and
sbb
and
xchg
je
inc
std
sbb
adc
push
mull
push
add
stc
pushf
xchg
mov
and
push
arpl
addr16
movsl
daa
sub
and
xchg
clc
push
sub
shl
xor
insl
inc
dec
and
sub
inc
idiv
sbb
add
mov
mov
xor
push
and
mov
inc
cmp
lods
ficomps
pop
xchg
mov
punpckldq
imul
fisttps
fcompl
lahf
mov
sbb
or
insl
cmpsl
and
sahf
jmp
je
insb
pop
insb
adc
jg
loope
adc
popf
pop
jmp
inc
jecxz
mov
dec
cs
add
jmp
dec
cmpsl
push
ss
cmp
jl
xor
or
aaa
movb
test
sub
xchg
jg
mov
sbb
icebp
mov
movsl
popa
mov
mov
inc
push
dec
imul
test
push
daa
or
push
daa
addr16
pop
loop
cltd
and
mov
and
xchg
jnp
mov
inc
mov
push
cli
lea
push
or
je
pop
xor
sti
sbb
push
add
or
repz
mov
loop
pop
inc
loopne
in
sbb
lret
or
ret
or
lcall
sub
mov
lret
inc
and
fidivrl
pop
or
jne
pop
sub
jns
stos
cmp
ja
cmpl
out
inc
or
fdivs
lret
neg
jae
xchg
mov
jnp
scas
pop
lods
xchg
test
dec
ljmp
stc
bound
inc
popa
rolb
cmp
mov
dec
inc
addr16
popf
sbb
imul
inc
nop
cmp
mov
fmul
xlat
mov
jbe
cld
adc
lea
and
add
sub
cmp
stos
dec
sahf
pop
loop
scas
push
ja
or
test
xchg
cmp
mov
jo
sub
xor
or
fcomp
pop
repz
push
cli
popa
fwait
arpl
mov
pushf
loop
call
shll
push
xor
nop
add
rcl
push
stos
jo
cmp
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
xor
stos
jle
jl
jle
jg
jb
dec
mov
push
lds
cmp
push
bnd
add
push
mov
push
add
test
dec
das
jae
ficoml
ficomps
xor
lods
divb
popa
push
mov
bound
outsl
cmp
mov
gs
lds
dec
testl
shlb
adc
sbb
insb
jb
jnp
inc
add
push
and
jmp
push
lret
sbb
jle
into
aam
fsubp
mov
subl
sbb
pop
int3
push
xor
test
inc
fisttpl
js
pop
jle
xor
jae
xchg
clc
jmp
mov
inc
jae
addr16
or
mov
inc
outsl
jo
xchg
nop
ljmp
xchg
pushf
xchg
or
jbe
in
sbb
and
mov
fldt
jae
sub
push
jg
cwtl
jg
lock
sti
or
jecxz
cmp
fsts
dec
outsb
sub
lds
stos
stc
adc
jp
jnp
fimull
fsubrl
mov
or
inc
sbb
cmp
cltd
fdivs
and
push
dec
pop
lret
sub
mov
sub
adc
jp
gs
iret
rcll
inc
das
rcll
cmp
pop
outsb
in
loop
adc
popl
test
cld
ret
cwtl
cs
inc
lret
int
push
dec
jecxz
sbb
scas
cld
add
and
fdivl
and
out
pop
inc
les
lea
lret
pop
movsb
cmpl
mov
xchg
mov
mov
cli
fdivrs
cld
xchg
sti
hlt
push
mov
rclb
call
iret
jno
mov
xor
inc
xchg
popa
mov
bound
outsl
test
loope
out
hlt
out
cmc
jg
add
or
inc
xchg
shl
xchg
jo
cwtl
xchg
pop
das
and
dec
dec
inc
add
pop
push
mov
jecxz
xchg
push
xchg
jmp
mov
adc
aas
pminsw
stc
nop
sti
loope
mov
mov
jo
push
out
aaa
pop
push
or
add
es
jnp
xchg
pop
inc
add
or
jns
cmp
and
mov
pusha
xor
and
or
pop
out
or
sbb
push
lcall
lods
dec
cli
aaa
insb
imul
test
divps
push
ffree
pop
sbb
mov
mov
imul
or
stc
es
ss
rol
movb
pop
mov
push
cli
xchg
adc
add
xor
pusha
xchg
or
sti
in
xchg
lds
fs
xchg
sbb
jmp
stc
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
imull
shlb
jle
xor
jecxz
sub
icebp
pushf
icebp
adc
mov
js
call
in
testb
sub
scas
test
imul
hlt
lret
cmp
popl
mov
push
cmp
push
pop
add
mov
push
pop
mov
xchg
pcmpgtd
repz
push
push
push
insl
sbb
hlt
mov
arpl
lret
pop
mov
push
cmpsb
jnp
mov
xor
jge
test
xor
adc
in
push
lods
inc
cmpsl
sbb
ficompl
jecxz
sub
scas
je
daa
cltd
push
xchg
mov
sti
pop
jo
popa
inc
sbb
dec
loop
rcr
or
sbb
pop
mov
sbb
decl
jle
push
sub
cs
dec
cltd
sbb
outsl
negl
mov
mov
ret
sbb
pop
iret
insb
sub
sbb
xchg
rcll
push
int3
inc
movsl
xchg
out
sub
xchg
adc
xor
test
mov
push
lcall
push
into
out
mov
push
pop
and
pand
ret
push
mov
leave
or
pop
icebp
mov
sbb
sbb
lret
sbb
icebp
adc
sub
out
dec
in
in
inc
popf
test
repnz
sbb
outsb
mov
push
sub
mov
pusha
dec
cs
insl
in
jo
cmp
xor
jns
jecxz
dec
sbb
test
imull
add
lds
lret
in
mov
insb
lods
lret
icebp
sahf
adc
int3
test
sub
xchg
adc
ret
inc
mov
cmp
imul
push
push
pop
bound
fwait
pop
push
cld
popa
jle
mov
outsb
or
fcomip
gs
push
mov
addr16
push
cs
jae
icebp
ljmp
das
cmp
xor
loop
rolb
in
addr16
dec
pop
nop
les
sub
ret
cwtl
mov
jl
mov
xchg
cmc
orb
addr16
fcomps
fidivl
add
xchg
sub
cmpsl
outsb
mov
pop
dec
add
bound
dec
jmp
test
jmp
and
pop
dec
push
adc
insl
jmp
push
mov
ja
pop
or
cmpsl
cmc
dec
out
add
popf
imul
ja
mov
test
adc
negl
jle
push
enter
adc
mov
lock
jb
scas
xchg
popa
arpl
lods
inc
dec
push
inc
shrb
inc
or
sarb
jmp
or
pop
jno
xchg
add
pop
mov
mov
jle
jge
jle
nop
or
adc
pop
push
sti
sbb
scas
insb
int3
add
mov
add
inc
inc
add
add
xchg
fmuls
fcoms
adc
or
ret
imul
imul
subb
jbe
sub
popl
push
fstp
ss
sti
dec
add
rorl
push
ljmp
pop
push
cmp
shrl
push
inc
aam
fsubrs
ret
leave
mov
std
sarl
cli
or
xor
dec
adc
ret
push
pop
jb
pop
inc
out
or
cld
inc
ljmp
lret
shll
out
inc
in
and
mov
ja
clc
hlt
jg
stc
mov
popf
jne
pop
jg
subb
lret
jae
sub
fwait
mov
jbe
scas
mov
mov
popa
je
mov
pop
jbe
scas
inc
add
repnz
dec
mov
xor
pop
loopne
sti
mov
mov
int
xchg
add
loop
cmc
jno
fucomi
dec
xor
cmc
test
iret
sbb
arpl
fs
dec
push
rorb
imull
inc
lcall
push
mov
sbb
aaa
adc
ficomps
call
les
out
test
sub
daa
lods
popa
nop
xlat
xchg
stos
inc
testl
adc
leave
xchg
xlat
sbb
insl
xchg
insl
sub
iret
mov
jl
lods
mov
fwait
testl
and
or
test
mov
out
jle
hlt
int3
inc
dec
cmp
pushf
lcall
out
and
outsb
nop
insl
dec
push
mov
in
lock
into
rcl
fdivrp
test
sti
test
int3
repnz
push
lcall
cmpsb
jmp
addl
out
dec
jnp
test
mov
pushf
adc
ja
jnp
sbbb
pop
pop
ljmp
out
push
aad
or
insl
push
std
or
into
xor
cs
add
jle
inc
push
imul
cmp
mov
add
or
sub
cmp
xchg
xor
jbe
cld
pop
cli
mov
dec
and
dec
mov
int3
push
xchg
xchg
inc
xchg
aas
aad
adc
movsl
sub
cld
fwait
js
loope
mov
mov
inc
xchg
aaa
push
test
or
sub
or
push
stos
mov
pop
out
clc
pusha
push
inc
mov
adc
dec
push
sbb
mov
hlt
dec
mov
decb
lock
or
rolb
xchg
bound
cld
mov
mov
cld
jno
out
inc
iret
ret
sti
div
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
out
je
fdivl
jle
sub
mov
mov
fdivrl
fstps
jp
pop
and
jb
sub
lcall
inc
inc
popa
out
rcll
shlw
pop
lods
pop
inc
mov
xor
arpl
lea
pop
mov
adc
pop
mov
aad
pop
push
add
add
shlb
jmp
imul
mov
cmp
cmp
xor
dec
rorl
jge
or
rclb
or
mov
add
mov
mov
sbbb
roll
fldcw
enter
mov
or
mov
fnstenv
pop
sub
mov
dec
push
pop
scas
loopne
es
or
movsl
pop
cld
rorl
addr16
push
mov
sub
daa
add
add
xchg
test
inc
adc
out
sbb
fs
pushf
in
es
stc
mov
mov
movsb
inc
in
xor
clc
notb
inc
lret
add
jo
jns
dec
call
mov
sbb
addb
cmpsb
daa
roll
cmpb
mov
xchg
or
add
sub
adcl
mov
in
clc
jl
mov
stc
dec
ret
cltd
jbe
fnstsw
inc
xchg
sub
push
xor
or
fcoml
aad
outsl
and
sahf
xchg
push
push
or
mov
je
dec
sbb
xor
cmc
out
aad
jae
or
push
in
cmp
test
and
repnz
imul
cli
hlt
in
adc
and
jnp
or
repz
cs
jo
sub
pop
setnp
xchg
mov
inc
mov
in
jecxz
pop
jmp
stos
mov
shll
int3
mulb
xchg
out
es
or
hlt
mov
clc
arpl
jp
ficomps
jg
xchg
out
dec
pminub
push
arpl
mov
sub
or
or
pop
adc
aas
int
lret
or
sti
inc
imul
pop
inc
jb
sub
xor
dec
lods
dec
stos
jnp
adc
jo
movsb
or
mov
sbb
cli
out
pop
pop
insb
adc
xchg
loop
andb
lret
ret
inc
orb
fsubs
sbb
test
scas
push
mov
lock
sbb
test
dec
cmpsl
sbb
sub
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
test
xor
enter
sub
stos
cmp
push
and
sbb
jmp
push
faddl
xor
faddl
flds
ret
sbb
dec
pop
insb
lods
xchg
mov
shlb
inc
push
jno
sahf
sar
je
push
int
lea
sub
push
or
inc
and
xchg
sbb
or
jmp
leave
lret
add
ljmp
sub
outsl
mov
mov
add
jecxz
daa
adc
outsb
sbb
jmp
into
push
movzwl
jg
sub
inc
int
pop
xchg
push
adc
testb
pop
jne
lods
xchg
fsubr
cmc
in
test
inc
popf
jae
cli
js
cmpsb
push
xor
inc
fmull
dec
int
test
js
pop
ret
ret
mov
loopne
mov
cwtl
inc
sti
xchg
xchg
and
push
outsb
lahf
pop
std
pop
inc
shll
hlt
repnz
fmuls
xorl
out
out
daa
pop
lods
inc
flds
ret
scas
popf
sbb
fsubs
xchg
js
stos
add
cmp
mov
cmc
and
rol
enter
rorl
xchg
ss
in
arpl
mov
movsb
insb
adc
js
imul
xor
js
je
ljmp
ja
ljmp
push
mov
push
outsb
jno
mov
dec
shlb
das
sti
cltd
jl
scas
rcr
insl
add
sub
cmp
or
jecxz
mov
test
pop
je
cld
push
inc
xor
loopne
aam
dec
cltd
pop
lock
shlb
cmpb
fs
inc
rcrb
cwtl
xlat
pop
mov
aad
nop
cltd
push
mov
mov
add
dec
mov
leave
aaa
pop
test
dec
push
dec
mov
cmp
cmpsl
pop
and
ja
int
out
jae
xchg
and
call
ljmp
arpl
gs
inc
mov
test
stos
pop
pop
cmp
dec
add
jle
push
fs
cmpl
aaa
cmp
sbb
filds
fnstenv
imul
sub
loop
fcoml
mov
iret
and
das
loop
add
mov
cmc
icebp
pusha
cmp
test
insb
jb
inc
dec
or
test
cs
fs
inc
je
jb
xor
jmp
add
fdivl
lock
xchg
pop
dec
and
jle
scas
jl
jle
xor
mov
jl
and
pop
ret
cmpsb
jnp
les
add
push
pop
or
sub
insb
xchg
clc
popf
xchg
call
push
in
dec
fxtract
push
es
ret
jge
dec
ss
xor
dec
mov
cmp
push
dec
jg
roll
pushf
mov
inc
aam
add
cmp
dec
popa
sahf
xchg
dec
adc
inc
fildll
xor
stc
cmp
sub
inc
xchg
leave
inc
inc
and
jae
gs
cltd
jge
sbb
test
pop
mov
aad
jp
gs
push
pop
pushf
add
xchg
add
add
dec
pop
fsub
popa
dec
adc
ja
sub
mov
and
lcall
pop
push
add
stos
adc
jg
test
mov
pop
imul
mov
pushf
loopne
xor
enter
dec
js
out
or
es
ror
loope
xchg
fstl
iret
fwait
aas
and
mov
leave
sbb
cs
add
daa
mov
or
and
and
pop
push
test
fimuls
mov
jl
das
pop
aas
ficoml
iret
gs
lea
fidivl
mov
lods
mov
xchg
mov
xchg
xor
andl
dec
add
dec
jae
notl
std
sti
and
mov
cs
push
ljmp
and
fisttps
pop
in
aaa
or
pop
mov
lcall
push
pop
push
jecxz
push
pop
mov
in
cltd
dec
in
ljmp
fucom
mov
stc
icebp
fstp
aas
rep
lds
int3
test
mov
cld
sbbl
xor
sbb
jp
movsl
lret
sub
jne
insl
lds
sbb
mov
mov
mov
mov
add
imul
pop
test
icebp
pop
sbb
leave
cwtl
push
sbb
ficompl
int3
cmpsl
sahf
xchg
popf
push
pop
clc
jae
xchg
inc
cmc
xchg
nop
pusha
fs
scas
loope
sbb
js
sbb
lcall
jl
cmpsl
ret
xor
fwait
jl
loope
scas
add
sub
mov
push
out
pop
loope
fdivr
sbb
cmpsl
or
loop
jp
xchg
lock
imul
push
jp
inc
xchg
jb
repz
ja
enter
in
popf
lcall
fisttpl
lods
add
jmp
je
push
push
lock
outsb
dec
mov
fsubr
mov
jle
cld
cwtl
push
mov
sahf
pop
push
pop
movsb
cmc
imul
call
sbb
ja
cltd
lods
xor
popa
lea
inc
push
push
mov
lods
outsb
sbb
loopne
mov
fsubrs
sbb
cmp
fdivs
scas
adc
push
ret
and
in
add
out
sub
testb
dec
mov
pop
ss
push
jae
cmpb
or
mov
lods
scas
adc
popf
mov
fs
push
inc
stos
stos
orb
cltd
outsl
xchg
push
inc
lcall
mov
inc
pop
push
dec
jle
adc
ss
fimull
jg
push
push
test
xor
xor
iret
lcall
mov
lock
int3
inc
pushl
sbb
pop
add
jbe
ja
repnz
sub
dec
cmpsb
sub
and
test
test
cmpsl
pop
into
pop
mov
mov
push
int
xchg
xor
out
xchg
pop
xchg
lods
das
sarb
mov
jmp
aaa
fsubl
in
daa
pop
mov
mov
sbb
xchg
lahf
pop
stos
sbb
xchg
iret
fistl
cwtl
testb
arpl
enter
or
mov
dec
cmc
mov
push
inc
rolb
cwtl
in
icebp
xor
dec
js
sbb
aaa
mov
cmpsb
daa
xor
jmp
sub
or
mov
add
loopne
sbb
cmc
clc
es
inc
into
int
jle
sbb
inc
add
pop
fdivrp
test
repnz
push
mov
nop
je
adc
mov
mov
pop
inc
ret
outsb
sub
mov
and
jb
inc
test
add
nop
dec
sbb
loop
mov
sub
stc
push
outsl
movsb
neg
pusha
mov
outsl
loope
pop
in
jns
push
jo
orb
mov
pusha
mov
adc
loope
insb
nop
jnp
or
sub
in
adc
arpl
xchg
test
pop
jl
lock
fsub
icebp
aam
add
inc
lock
je
lret
addr16
pushf
inc
sbb
loop
xchg
lahf
test
sarb
sbbl
pushf
adc
out
fsubp
arpl
xchg
or
jle
loopne
fmul
xchg
stc
or
movsl
mov
lret
jae
mov
or
jnp
test
pop
fisttpll
fdivl
hlt
lret
roll
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
aam
add
inc
jle
scas
jl
jle
jne
mov
mov
xor
push
dec
pop
aaa
pop
jmp
call
xchg
addb
lods
add
rolb
cmp
mov
xchg
jb
mov
shrl
dec
out
repz
pushf
stos
pop
shr
mov
rorb
push
dec
sub
les
adc
mov
mov
jge
adc
dec
imul
cmp
add
mov
inc
imul
roll
addr16
les
test
xor
or
popa
or
mov
add
shrl
add
mov
or
shlb
mov
jmp
sar
adc
fisubrl
xchg
or
sahf
int3
dec
adc
sbb
fcoml
mov
scas
lea
in
aaa
pop
insb
sub
and
inc
insb
sahf
out
cmp
outsl
in
inc
call
test
mov
outsl
xor
mov
dec
cmpsb
push
loopne
inc
fldenv
xor
roll
and
pop
sbb
fnstenv
shll
int3
pop
negl
pop
int
cmp
pavgw
sub
jge
stos
enter
mov
je
or
cmp
rcrl
lods
add
jg
ficoms
cs
and
mov
out
push
in
fiadds
push
icebp
sti
in
jmp
adc
push
cld
ret
das
sbb
mov
pop
ds
pushf
out
mov
mov
mov
mov
cmp
add
int
pop
or
andb
pop
jle
cmpl
aam
push
je
roll
mov
jns
xor
shrb
xlat
ret
pop
es
jle
test
ds
and
test
fst
bound
test
jne
test
jecxz
push
adc
xchg
pop
sahf
and
popa
inc
xor
repnz
add
inc
out
fists
push
cmp
xor
loop
cmpsb
lret
packsswb
test
dec
stos
jno
in
in
add
mov
adc
lret
das
pop
leave
lahf
mull
repz
mov
jae
adc
mov
cwtl
adc
push
fwait
test
mov
adc
lods
fisubrl
scas
mov
inc
push
pop
add
dec
aam
arpl
lds
repz
add
lods
loopne
xchg
mov
not
fidivl
fs
daa
mov
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
jmp
jle
scas
jl
jle
sub
test
mov
in
dec
sub
dec
mov
mov
out
gs
adc
mov
pop
fisttpll
mov
pop
add
fdivr
test
daa
arpl
xchg
lods
push
jbe
ss
push
pop
lds
xchg
xchg
mov
cmp
and
repnz
ds
xlat
pop
je
sbb
out
in
push
mov
jae
pop
das
jmp
xchg
adc
ret
jp
mov
inc
mov
pop
dec
add
push
fwait
jge,pn
sub
aad
or
xchg
repz
and
inc
loope
fisttpl
scas
in
xchg
mov
xor
jae
lock
mov
mov
xchg
lock
jbe
xor
jae
es
push
popa
xor
stc
or
cmpsb
push
int3
mov
ljmp
jae
add
stos
push
dec
test
xchg
xor
cwtl
push
mov
fwait
fs
xchg
lods
jns
adc
sub
icebp
xor
jae
lods
sbb
rorb
jno
and
adc
mov
ds
cmc
xor
fimuls
pop
mov
leave
or
xchg
mov
lods
mov
lods
les
mov
push
movsb
fisttps
dec
mov
jne
sbb
imul
cltd
clc
and
in
jo
xor
ds
cmp
pop
or
rorb
mov
mov
inc
pop
nop
or
xchg
sub
mov
jmp
sbb
xlat
jno
fimuls
mov
insl
adc
int
cwtl
mov
popf
xor
test
or
xchg
fstpt
xor
sti
cmpsb
mov
mov
mov
dec
sbb
dec
pop
inc
test
jno
out
loop
out
enter
aad
cmp
cmpsl
stc
out
das
sub
push
mov
pop
adc
dec
xchg
shrl
inc
jne
sub
ljmp
sub
das
mov
sbb
sbb
sbb
or
pop
dec
jg
mov
sub
mov
pop
loopne
lret
call
nop
inc
dec
mov
aam
scas
icebp
imul
add
rcrb
jmp
adc
and
lcall
push
sub
mov
daa
mov
lea
mov
dec
jmp
sbb
loopne
jle
outsl
outsl
inc
lock
cld
inc
and
loop
call
jae
dec
dec
popf
adc
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
push
add
jle
movsb
jg
jle
loope
jg
xor
fidivs
mov
sub
out
mov
cmp
xchg
jle
jae
xor
out
push
adc
stc
les
adc
mov
add
and
insl
movsl
ds
mov
mov
sahf
dec
testb
pop
sysexit
inc
or
inc
loop
jbe
cmp
repnz
cmpsb
into
inc
bound
pop
call
imul
icebp
mov
xchg
push
lock
xchg
push
dec
js
sti
sub
stos
adc
pop
mov
cmp
lds
aas
cmp
lret
ss
push
mov
jno
cmpsl
lcall
outsb
xchg
loop
ljmp
dec
ret
and
dec
xor
mov
or
and
jp
inc
push
mov
fildll
push
mov
pop
clc
jns
iret
and
mov
leave
fnsave
jle
test
fstl
mov
repnz
jmp
adc
insl
mov
push
sti
add
out
imul
dec
mov
jge
sbb
push
adc
sti
push
andb
jae
sub
adc
dec
xor
add
popa
mov
test
fs
popa
pop
dec
scas
stos
push
pop
or
push
cli
sub
jge
sahf
pop
out
fcoms
lods
sarl
fs
jo
and
xor
les
loop
shlb
mov
aad
cmp
subb
test
cmp
sub
out
movsb
mov
movl
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
sbb
jle
movsb
jg
jle
xor
scas
popl
lret
into
lea
jno
pop
and
ret
in
adc
and
mov
sbb
pop
xor
lcall
out
out
jbe
xchg
adc
jp
rorb
push
adc
dec
xlat
fwait
imul
in
sub
or
fwait
pusha
or
lcall
sbbl
daa
jle
adc
cmc
mov
cli
lods
outsl
sub
in
lock
cmpsb
outsb
push
test
pop
iret
lock
icebp
mov
repnz
in
cli
or
out
jmp
cwtl
sbb
dec
mov
repz
popf
int3
inc
jae
rorb
orb
xchg
dec
mov
aaa
stos
adc
mov
xlat
incb
cmp
dec
fisubrl
push
lret
fisubrs
inc
jb
mov
aaa
add
sbb
scas
adc
icebp
ss
and
add
jbe
ret
push
or
fwait
repnz
sahf
jge
add
addl
js
movsb
sar
adcb
or
aas
out
enter
adc
adc
je
arpl
pop
xchg
jb
incl
icebp
ss
je
mov
xorl
pop
pop
push
push
movsb
imul
inc
lret
insb
push
cmc
pop
adc
mulb
loope
scas
xchg
push
xchg
repz
ret
std
out
add
jg
sbb
mov
ja
jne
xor
aas
sarl
int
xor
mov
jb
mov
int3
dec
hlt
or
mov
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
fistps
pop
add
add
iret
jg
fadd
add
cmp
popa
mov
add
mov
inc
fadd
jne
scas
insl
lcall
mov
cmp
sbb
inc
pop
pop
mov
repnz
out
xor
iret
push
mov
pop
leave
adc
xchg
xchg
xor
mov
xlat
adc
sbb
fs
jg
pop
pop
mov
xchg
cmp
jno
push
mov
clc
xchg
out
mov
in
xor
inc
int3
out
pop
cmp
lret
mov
pop
test
mov
arpl
mov
fidivs
shlb
add
lcall
adc
sbb
jp
ja
sub
sub
pop
or
jmp
push
mov
aaa
aad
add
mov
add
cmp
lret
xchg
or
aam
sarb
pop
ficoml
in
jle
lcall
pushf
loope
add
add
int3
inc
jmp
aam
addr16
jnp
jmp
jg
cmpsb
or
sbb
aas
push
fcmove
inc
loopne
or
inc
and
hlt
jp
lds
mov
cmc
std
cmp
in
mov
movsl
dec
sahf
lds
insb
add
imul
lock
bound
xchg
xchg
push
mov
adc
test
xor
push
adc
ja
sahf
inc
mov
cs
xchg
scas
insl
movsb
rep
sarl
xor
aas
jecxz
dec
jecxz
jp
mov
imul
rorb
loopne
ljmp
add
imulb
cmp
ss
fmull
mov
xor
and
int3
sti
leave
imul
dec
sbb
mov
inc
aad
mov
jno
or
faddl
pop
xlat
and
jo
and
and
or
xor
jnp
dec
filds
adc
push
cmp
call
add
add
add
mov
push
cli
and
add
popa
or
xchg
fisttpl
test
xor
mov
add
jecxz
cmpsb
shrb
add
fstp
mov
xchg
lods
call
cmp
dec
shl
popa
xchg
mov
sub
mov
adc
mov
inc
lret
ss
leave
push
and
mov
imul
cmp
arpl
dec
in
sbb
adc
xchg
add
xchg
aaa
sarb
pop
jne
fs
in
and
or
mov
push
shrl
bound
sub
cmp
mov
jae
mov
loopne
or
dec
mov
push
hlt
pop
mov
decl
test
sub
ds
call
pop
jecxz
je
inc
sarb
stos
lahf
jmp
push
jbe
ret
pop
inc
je
add
mov
pop
decl
fchs
pusha
pop
insb
xchg
stc
sbb
pop
clc
xchg
mov
leave
add
xchg
sbb
sub
add
subl
roll
nop
adc
add
sub
mov
sub
fwait
mov
je
inc
or
jmp
jns
adc
fidivrs
xchg
fdivs
js
sub
mov
dec
jg
outsl
daa
cmp
inc
aaa
daa
sbb
cltd
mov
leave
call
mov
cltd
xor
cmp
orl
in
push
inc
int
mov
rol
mov
mov
loop
out
mov
xchg
stos
add
fwait
rolb
pop
int
mov
lock
shlb
jp
jae
incl
and
movsl
loop
in
mov
mov
jge
fidivrl
lcall
rcrb
movsb
lods
test
js
dec
nop
xchg
sub
mov
outsb
inc
mov
repz
mov
sbb
cmp
push
or
jmp
cmp
adc
xor
pop
dec
add
add
inc
or
pop
dec
or
xchg
or
lock
add
loope
dec
inc
stos
mov
imulb
gs
push
iret
mov
sub
in
pop
xor
sbb
and
std
push
out
inc
rcll
jge
inc
aaa
call
int3
cmp
nop
test
lret
inc
inc
xchg
mov
or
cmp
popa
sbb
or
gs
and
push
fs
mov
icebp
in
int
cli
xchg
aaa
mov
pop
andl
pop
xlat
lret
xor
pusha
and
adc
popa
fbstp
addr16
xchg
jno
pop
fnstsw
data16
mov
gs
add
mov
sbb
divl
and
movsb
inc
xor
push
sbb
rolb
mov
inc
rcll
sahf
and
inc
cmp
mov
not
xlat
jns
add
adc
push
cs
fdivl
add
add
push
xchg
pop
decl
inc
je
mov
add
add
jg
cmc
insl
cmc
out
lcall
enter
and
add
jo,pn
std
aad
xlat
in
push
repnz
mov
cmp
sbb
cmp
or
sahf
addr16
mov
test
xor
dec
sub
scas
in
pop
jmp
and
xchg
mov
mov
rorl
lret
push
mov
popf
mov
jle
adc
stos
out
and
je
ljmp
jns
sbb
in
xchg
pop
xor
icebp
cltd
lea
ja
or
push
push
es
aaa
xchg
sub
scas
push
orps
arpl
mov
sbb
shlb
mov
jp
xchg
test
cmp
mov
push
pop
std
adc
adc
jge
enter
int
outsl
add
fwait
stos
sarl
adcl
adc
pop
xchg
adc
sbb
pop
testl
and
xor
add
jle
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
jl
fwait
jns
fsts
loop
push
lahf
push
div
idivb
lds
pusha
or
mov
inc
insb
lods
sub
push
cmp
sub
fwait
jl
cli
js
xor
or
cmpsl
mulb
shrb
xchg
mov
or
iret
pop
dec
faddl
je
inc
jo
mov
scas
fsubrs
divb
xchg
movsl
out
push
sbb
out
xor
test
lods
bound
into
and
lods
mov
cs
insl
jo
dec
mov
shr
stos
shl
dec
test
jno
push
mov
lock
imul
loope
fwait
outsl
mov
je
aam
jp
mov
es
xchg
out
int
mov
xchg
xchg
inc
in
ja
daa
sbb
sub
cmc
test
arpl
jbe
cmp
fisubs
xchg
and
leave
sarl
scas
in
loop
fwait
jp
add
or
and
scas
sti
jle
pop
push
pop
std
xchg
and
add
lcall
dec
dec
xor
ret
repz
out
std
out
cmpl
xchg
push
pop
mov
clc
aaa
shrb
addb
movsb
mov
xchg
mov
mov
sub
mov
call
popa
lret
andb
in
cmpsb
jle
jl
scas
or
das
lock
std
inc
stos
sbb
loope
push
sub
and
inc
or
ret
push
insb
outsl
cmp
test
in
xor
sbb
jmp
je
or
pop
cs
push
in
mov
mov
test
or
sub
xchg
mov
push
es
jg
das
dec
jl
xor
std
xor
mov
outsl
mov
int3
adc
call
stos
push
out
or
shr
shll
mov
lcall
push
das
out
and
stos
jg
add
add
negl
arpl
jbe
jl
fiaddl
add
dec
shr
dec
or
fdiv
jecxz
push
or
push
pop
xchg
jecxz
mov
jnp
push
adc
mov
mov
pop
flds
dec
sub
mov
pop
jle
jg
outsb
loope
in
mov
and
and
inc
mov
push
xor
jo
add
in
int
pop
aad
xchg
push
jnp
nop
addb
aad
test
and
es
and
stc
mov
mov
adcl
sub
push
ljmp
iret
sahf
dec
or
lcall
daa
faddl
test
jge
mov
sbb
cs
adc
fcmovne
cmp
push
push
sbb
imul
popf
das
loop
ret
xor
push
cmp
or
jge
mov
loopne
pushf
nop
orb
xorl
pop
call
pop
aaa
loope
scas
xor
out
xor
mov
xor
push
jl
jle
insb
out
adc
mov
add
xor
and
test
push
jle
lret
fstpt
iret
lret
das
stos
pop
and
in
cwtl
cmpb
xchg
outsb
cmp
jae
xchg
jmp
or
ljmp
movsl
inc
push
orb
test
sub
out
jle
pop
xchg
adc
insl
pop
sbb
mov
sbb
inc
daa
ret
ja
push
or
or
jnp
xchg
jge
mov
pusha
mov
jge
lahf
movsl
mov
aaa
sub
mov
fsts
cld
xchg
jg
mov
push
mov
pop
in
or
pushf
nop
add
cld
shl
icebp
xchg
jmpw
push
es
shrl
stos
cmpb
jecxz
or
shl
rcl
imul
lret
mov
inc
mov
das
iret
sbb
popa
jmp
fs
jmp
adc
popf
push
pop
xchg
out
or
ror
scas
outsl
rcrl
ficompl
sub
dec
lahf
pop
jne
fiaddl
add
mov
adc
in
xor
adc
push
faddl
add
dec
push
popf
mov
loop
jnp
nop
push
and
jne
lods
pushf
pop
sahf
rcrb
aas
movsb
scas
sahf
dec
add
mov
ret
xor
mov
into
xlat
ficompl
cwtl
ffreep
mov
cmp
inc
lods
cmp
cmp
xchg
mov
das
nop
mov
inc
test
xchg
shl
clc
mov
stos
rclb
in
mov
pop
cmpsl
pop
add
loope
ss
out
dec
movsl
jns
mov
jne
test
jne
jns
add
aam
jecxz
shll
and
test
mov
das
rorb
in
or
mov
push
mov
sbb
testl
test
adc
insb
js
into
ss
push
or
push
cmp
iret
call
jle
sbb
adc
cmp
dec
and
jl
inc
popa
rcl
popf
rol
lahf
or
add
add
data16
jne
mov
lcall
add
add
fs
mov
ret
imul
push
xor
cwtl
mov
pop
or
dec
sub
jmp
mull
or
add
mov
mov
pop
test
push
stc
jge
in
push
adc
jecxz
std
pop
sti
aas
mov
jae
cld
cmpsl
hlt
addr16
std
mov
xor
xor
scas
lea
dec
xlat
xchg
mov
jb
sub
xchg
div
dec
cmpsl
or
xchg
mov
dec
scas
cmc
fbld
pop
mov
dec
pop
fimuls
inc
imul
xchg
push
cld
pop
adc
leave
push
jae
dec
mov
in
mov
and
add
dec
nop
rep
push
mov
daa
or
pop
mov
mov
or
movsl
cmp
fdivr
pop
adc
cmp
fst
sub
jno
mov
data16
sti
adc
scas
xchg
rolb
add
add
add
jnp
sti
xchg
lahf
mov
scas
jmp
add
fimull
pop
rorl
test
push
cs
mov
adc
addr16
pop
test
jo
loope
int
div
inc
mov
pop
cmc
stos
pop
xor
or
jnp
xor
or
test
jecxz
mov
aad
repz
clc
gs
aam
adc
repnz
inc
pop
adc
jge
push
pop
outsb
shl
mov
add
div
sbb
jp
jmp
movsl
divb
or
mov
int
lods
sub
mov
push
jbe
sbb
lods
adc
lds
outsl
add
or
mov
add
inc
push
cli
lds
add
rorb
in
inc
mov
adc
mov
imul
xor
push
lds
pushf
xchg
inc
xchg
pop
push
in
adc
jmp
pandn
sahf
shl
lods
int
dec
scas
in
std
xor
mov
js
pop
cld
test
pop
mov
in
shrl
add
sub
pop
sarl
mov
sbb
add
add
or
and
sbb
pop
sbb
test
push
inc
fs
lds
and
test
inc
fwait
dec
sub
mov
call
dec
clc
lods
mov
xor
mov
add
xor
push
pop
lods
inc
cmp
mov
dec
popa
pop
xor
fcmovnb
aad
cs
xor
std
mov
add
sbb
mov
push
addr16
xchg
test
lods
add
inc
test
sarl
loop
lods
push
cld
jle
add
jl
pop
stos
arpl
or
cmp
cmp
popf
lock
push
dec
and
daa
call
xchg
dec
mov
lret
mov
rol
push
cwtl
incb
shrl
ret
and
std
mov
mov
stos
mov
mov
fdiv
jnp
add
xor
and
in
test
mov
add
add
repz
std
repz
aad
xor
loopne
add
repnz
jns
fdiv
xchg
cwtl
cmp
or
lods
xchg
push
xchg
enter
sarl
ljmp
mov
ja
lcall
out
lds
push
outsl
in
inc
mov
aad
pop
loopne
fwait
pop
sub
jecxz
xor
inc
cmp
popa
or
mov
nopl
lret
rorl
jns
sub
cltd
clc
lahf
or
inc
adc
sub
fucomip
inc
int3
push
sbb
lods
testb
mov
xchg
push
mov
mov
dec
pop
loopne
arpl
xchg
adc
sub
inc
fwait
and
push
inc
imul
gs
fs
int
inc
ret
clc
ss
cwtl
fisttps
scas
jmp
loop
adc
add
das
push
pop
xlat
inc
int
and
fwait
push
add
jecxz
imul
mov
cmpsl
xor
push
push
jne
test
add
add
lock
cmp
arpl
je
cmp
add
add
aas
cwtl
sarb
or
test
repz
sahf
mov
notb
popf
data16
xor
jl
mov
sbb
outsl
stos
cmp
mov
cwtl
cmc
mov
mov
stos
mov
ret
sub
insb
xor
mov
test
int3
mov
in
ficoml
rcrb
xor
rcrl
int
out
in
mov
mov
imul
push
mov
insb
mov
fcmovnbe
fwait
ljmp
mov
and
mov
and
adc
bnd
sub
icebp
adc
in
lret
inc
inc
sub
and
push
mov
ds
and
dec
cld
push
aad
outsb
lock
fstpl
call
fidivrl
cmp
mov
jmp
or
fidivrl
jmp
dec
insl
add
add
mov
mov
inc
cltd
cltd
in
loop
add
lahf
sbb
push
pop
inc
sbb
lahf
and
dec
fbld
ja
lods
lret
js
push
or
mov
lods
lods
rol
xor
inc
push
pushf
jl
je,pn
jecxz
imul
inc
test
mov
ror
cltd
sbb
adc
adc
out
xor
xchg
mov
dec
pop
pop
fucomip
jns
js
int
cltd
daa
mulb
test
dec
test
imul
mov
in
sub
pop
xchg
sarb
pop
jns
fwait
xor
lahf
je
sbb
arpl
lds
ret
fcoms
popa
out
hlt
pop
pop
repnz
pushf
out
loop
pop
into
and
sbb
cmp
sbb
adc
sub
xor
and
mov
mov
jge
push
insb
and
leave
pop
push
cwtl
or
mov
rol
aam
out
add
add
xchg
in
mov
incl
rcrl
push
pop
xor
add
add
xchg
add
push
xor
subl
jb
cwtl
inc
clc
xchg
cmpsl
jb
pop
aaa
sar
dec
popf
outsl
xor
hlt
dec
mov
mov
ret
push
jp
test
xor
enter
mull
into
xor
shll
cwtl
cmp
mov
sbb
mov
lret
ja
shl
jle
push
and
aaa
cmp
mov
lret
mov
adc
insb
adc
push
jmp
test
pop
in
jnp
cmp
adc
xor
cmpsl
inc
push
sbb
jmp
dec
pushf
or
jmp
faddl
pop
sbb
es
insb
pop
lcall
push
popa
xchg
adc
add
test
leave
pop
xchg
movsl
daa
hlt
push
pop
fwait
cwtl
push
xchg
cli
lahf
add
add
mov
jnp
add
add
sub
in
negl
sub
movsb
mov
in
add
xor
and
inc
inc
orl
ror
xchg
and
sbb
mov
ret
pop
xor
push
inc
inc
jae
fisttpll
test
or
dec
std
loope
xor
mov
push
and
jle
out
mov
dec
enter
jg
xchg
out
lahf
in
ljmp
mov
out
outsb
imul
add
je
outsb
xor
mov
xor
mov
mov
dec
sbb
cli
push
mov
jnp
cmp
es
inc
testb
mov
movsl
mov
loopne
out
fdivrs
ret
sahf
sbb
xchg
lds
xchg
pusha
or
das
pop
lods
fldl
mov
inc
scas
mov
dec
sahf
mov
xchg
sub
daa
fstp
or
rcrb
movsl
add
repz
mov
push
mull
das
mov
imull
add
mov
stc
dec
push
fdivrl
out
cmp
add
add
push
lahf
adc
xor
xchg
and
les
outsl
rcrl
dec
adc
push
adc
lock
or
xchg
in
les
lret
mov
mov
xchg
les
sbb
out
cld
and
jns
push
je
loope
mov
rcrl
jmp
fdivs
mov
and
pop
push
mov
subl
pop
jmp
ret
add
push
inc
outsb
pop
xor
or
mov
pop
mov
mov
xchg
fstps
cmpb
mov
das
cld
pop
mov
mov
jp
jo
push
xchg
push
push
fwait
test
inc
mov
pop
lret
cli
icebp
sub
xchg
mov
mov
cli
loope
xchg
cld
sub
adc
bound
ret
push
lods
out
bound
sbb
nop
inc
insl
xchg
in
push
add
add
adc
push
push
push
mov
jg
out
add
mov
shlb
mov
sbb
push
loope
pop
dec
addr16
cmpsl
outsl
xchg
jmp
add
jbe
cmp
or
into
lods
movsl
out
sysexit
cmc
xchg
fsts
dec
sbb
lods
fnsave
int3
push
mov
call
xor
or
scas
scas
and
popf
push
mov
nop
pusha
push
xchg
ss
fadds
imul
faddl
push
stos
cmp
sti
repz
lahf
inc
fs
push
enter
dec
dec
scas
jp
icebp
adc
cmpsl
cld
in
int
add
test
mov
js
xchg
jmp
aas
leave
in
sbb
dec
sbb
dec
xchg
jnp
or
inc
ja
sub
sub
jmp
imul
ss
dec
insb
cltd
adcl
jns
jo
int3
dec
mov
stc
jns
es
sarl
xchg
dec
les
pop
repz
out
repnz
add
pop
lcall
les
icebp
cli
aam
out
add
xchg
hlt
test
sbb
std
lea
sub
add
test
mov
and
pop
inc
fidivrs
leave
or
dec
vmulss
push
mov
mov
and
pop
and
inc
inc
cmpsl
xchg
push
movsb
jmp
sti
adc
mov
push
jmp
cmp
sub
push
xor
incl
xor
aam
xor
repz
sub
out
sub
sub
inc
or
orl
je
jg
repz
cld
sbb
js
jle
enter
imul
stos
out
mov
or
scas
repz
call
sub
ja
mov
pop
or
shr
lea
cmp
jnp
jp
push
sub
repz
jno
scas
lret
test
cwtl
inc
dec
dec
sbb
repz
std
jg
push
add
sarb
add
pop
mov
push
decl
ja
xor
dec
call
add
shlb
imul
xor
inc
pop
cmp
lahf
pop
push
scas
cs
dec
jge
test
repnz
mov
clc
sub
sub
mov
inc
leave
aad
dec
repnz
push
xor
iret
mov
icebp
or
or
sbb
push
and
fcmovnb
out
mov
mov
push
sub
sub
cmp
add
mov
xchg
std
jae
imul
xor
bound
cs
or
insl
and
clc
stos
xchg
ss
dec
inc
mov
jmp
mov
imul
or
es
jbe
xchg
and
jnp
pushf
and
out
repz
ret
pop
shr
icebp
pop
pop
mov
xor
ret
pop
fwait
add
adc
mov
add
int3
call
mov
inc
leave
scas
in
test
add
add
jmp
in
push
sub
hlt
dec
jmp
add
repnz
dec
inc
sbb
dec
hlt
or
lds
fsubrs
stc
fs
jne
cmc
mov
mov
mov
cltd
xlat
addb
push
hlt
fdivp
xchg
and
or
data16
or
dec
dec
push
or
adc
sarl
leave
sahf
push
test
stc
inc
aas
mov
adc
jmp
or
xchg
mov
inc
cmpsb
fdiv
test
and
aad
mov
jl
fdivr
jle
test
sub
in
sbb
mov
test
out
stc
popaw
fistpl
arpl
lds
mov
inc
jl
lea
mov
jo
test
loopne
jg
push
xor
notl
leave
iret
cltd
adc
mov
mov
imul
xor
ljmp
mov
dec
popf
stos
dec
dec
sahf
lahf
sahf
gs
add
nop
mov
jns
dec
add
add
outsb
xor
mov
lcall
ljmp
mov
mov
sub
cwtl
inc
dec
push
xor
hlt
popa
dec
xchg
mov
into
filds
mov
aas
push
mov
outsl
sub
fs
xor
jo
mov
daa
clc
sbb
std
xor
xor
movsb
inc
xchg
sbb
in
jp
aam
jbe
loop
xor
inc
cltd
leave
cwtl
rorl
arpl
cmpsl
loop
xchg
mov
mov
pop
cmp
xchg
repnz
and
push
out
and
xor
jmp
and
lcall
cltd
in
inc
adc
jmp
inc
push
sbb
jns
test
xlat
inc
mov
aad
or
xchg
mov
adc
push
insl
testb
sbb
xchg
and
out
mov
lds
jae
pop
in
mov
cld
inc
rclb
mov
lods
mov
add
adc
add
idiv
je
and
add
repz
ror
lock
jnp
xor
xchg
jns
in
pop
jmp
add
bound
cmp
add
jmp
inc
sub
xchg
insb
sbb
in
mov
xchg
mov
loopne
bound
pop
xlat
ss
or
lahf
mov
insl
sahf
icebp
out
mov
mov
xchg
adc
ret
push
cmpb
dec
mov
out
adc
cmpb
adc
ret
in
imul
xor
lret
or
ss
pcmpgtb
scas
mov
out
and
lods
pop
xchg
ret
cmpsl
push
lods
test
pop
rorl
repnz
jmp
xor
sub
mov
aas
das
fcompl
inc
pop
push
div
jo
movsb
cwtl
movsl
sub
ret
xor
movsl
push
movsb
sub
rcl
inc
fsubp
and
add
adc
mov
int3
inc
dec
test
inc
aam
adc
outsl
xchg
mov
and
repz
fisubs
enter
in
add
add
leave
arpl
jecxz
fldt
add
push
dec
jl
inc
xchg
sub
ret
loopne
lcall
xchg
sub
push
popf
and
test
push
stos
push
jp
sub
cmp
ret
enter
xchg
aam
idivb
mov
dec
push
negl
dec
cmp
lcall
clc
lret
push
into
xchg
jp
clc
inc
lret
fldcw
in
pop
fwait
mov
lret
stos
and
mov
sarl
jae
fwait
lret
mov
adc
mov
ja
gs
movsl
negl
push
das
loope
or
repnz
adc
in
jg
or
call
int3
dec
fwait
sbb
out
pop
int
out
out
mov
inc
subl
fdivrl
and
das
aad
fmuls
push
fbstp
out
iret
mov
and
add
out
sbb
test
in
arpl
add
add
mov
mov
xchg
or
idivl
inc
cmpsl
or
outsl
pop
aaa
cltd
mov
mov
lahf
mov
outsb
add
and
adc
lcall
cs
sub
leave
mov
stos
pop
or
inc
in
cli
jae
pop
lahf
das
adc
sahf
inc
jne
popf
lcall
lret
sub
nop
enter
dec
inc
mov
lock
sbb
les
inc
mov
cld
pop
daa
clc
fdivr
in
fcmovb
push
mov
cmp
xchg
addb
jno
mov
aad
out
movsl
jp
test
mov
dec
mov
mov
rcrl
cmp
cmc
addr16
loope
fcompl
mov
jp
pop
es
loope
lds
or
mov
push
mov
rorb
push
out
mov
or
add
shrl
cmc
scas
sub
mov
push
add
add
xor
mov
sub
out
jp
lods
xchg
mov
jno
add
sbb
cmp
mov
xchg
fildll
repnz
xlat
loope
jo
icebp
sahf
push
int3
loop
cmp
sti
in
and
subl
clc
outsl
in
sbb
aam
ret
jns
adc
or
iret
icebp
push
xlat
outsb
sub
push
push
int
scas
movsb
enter
push
lds
jecxz
or
insl
mov
add
ror
mov
lods
mov
loop
mov
in
pop
stos
push
mov
dec
sub
xchg
lret
dec
add
mov
mov
ljmp
ss
inc
mov
jmp
jecxz
inc
outsl
xchg
popf
inc
sub
dec
roll
sbb
test
test
mov
sbb
notl
shrl
sbb
movsb
mov
mov
dec
pusha
push
xchg
mov
pop
loope
add
add
pusha
rorb
cmpsb
mov
test
insl
out
add
add
in
nop
xlat
lock
movsl
out
cmpsb
push
pushf
lods
int3
jae
sub
dec
bound
mov
inc
outsb
clc
sub
xchg
adc
out
sti
mov
xchg
out
lret
mov
test
dec
insl
mov
ret
jge
lods
loop
out
dec
mov
stos
mov
mov
ss
or
lahf
dec
imul
mov
pop
mov
mov
test
cmp
mov
inc
fstpt
int3
push
dec
pop
or
xchg
pop
iret
mov
cmp
fsub
lcall
push
jno
aad
out
mov
lock
popf
mov
xchg
enter
xor
jnp
scas
pop
inc
imul
fwait
sbb
pop
sbb
xchg
mov
push
lock
push
dec
sbb
lea
jp
imul
push
fs
cmp
mov
mov
mov
jne
dec
sub
lret
xchg
sbb
add
gs
testl
mov
push
jb
add
add
push
adcb
xor
ss
mov
pusha
fwait
popa
scas
scas
cmp
in
frstor
xchg
sub
xor
fwait
mov
xor
ja
js
jmp
sub
xchg
test
mov
push
mov
push
jl
es
leave
aad
divb
add
pop
lcall
mov
fucomp
jg
add
lcall
push
dec
shlb
mov
decl
sub
add
or
mov
jecxz
cmpsl
movsb
std
mov
pop
insl
ret
dec
scas
xchg
mov
loope
les
test
adc
xor
je
out
lcall
notb
cmpb
aaa
mul
mov
js
and
ljmp
jo
or
add
mov
jge
mov
mov
cwtl
mov
je
lock
ror
cmp
and
add
xchg
mov
mov
pop
das
push
lret
ja
add
add
sub
mov
daa
leave
les
jns
addb
mov
fwait
push
or
sbb
iret
shlb
and
rcl
stc
pop
adc
pushf
cmp
sbb
sbb
inc
sub
jo
mov
xchg
stos
sub
icebp
dec
aam
and
sub
mov
fldt
push
lds
mov
sbb
aaa
stos
sbb
aaa
fsubrl
dec
mov
es
mov
stos
lcall
mov
inc
pop
cwtl
in
out
int3
push
lods
sbb
inc
add
movsb
pop
call
or
ret
mov
sti
mov
cwtl
jo
je
bound
pop
js
xchg
push
mov
insl
jge
xchg
mov
leave
fs
lea
std
fmuls
cmp
pop
repnz
mov
sti
repz
add
add
fucomi
xor
cld
mov
add
push
js
call
repnz
hlt
cmp
dec
rcrl
mov
aas
lds
call
cmpsb
out
sahf
mov
sub
lea
pushf
ret
add
inc
sbb
stos
inc
int
mov
add
cmp
mov
mov
pop
jp
addr16
aaa
enter
aas
loop
lods
sbb
test
or
mov
or
inc
in
add
lods
jle
bnd
push
sti
rcrb
and
insl
in
aas
icebp
or
sub
jae
sub
or
ja
fcmovnbe
mov
popa
mov
mov
inc
mov
test
xor
cmpsb
shlb
inc
jno
sub
push
movsl
popf
cmpsl
lea
push
filds
jmp
xchg
lods
mov
xchg
dec
leave
adc
repz
push
in
inc
testb
mov
mov
sbb
test
add
add
push
inc
pop
jns
aas
loopne
sub
add
add
and
sahf
cmp
ss
out
add
loop
popf
push
push
cmc
xor
xchg
inc
add
mov
aam
and
ds
mov
cs
mov
in
lret
dec
das
pop
je
push
pusha
in
add
push
gs
pop
mov
push
xor
popa
or
jg
jo
out
enter
je
pop
jno
pop
decb
dec
lret
mov
nop
outsb
mov
leave
pop
jl
push
lods
ret
mov
jae
cli
xchg
sub
aad
mov
das
xor
les
sub
push
mov
outsb
jb
push
fcmovu
inc
dec
xlat
and
fnstsw
cmp
nop
pop
or
int3
lods
cmp
lock
ret
add
pop
jne
repnz
push
push
ret
std
dec
cmp
mov
mov
hlt
dec
adc
rcl
jl
call
sti
add
add
jnp
mov
sbb
add
add
orl
arpl
mov
xlat
xor
outsb
pop
mov
cli
out
cmp
sbb
out
cmp
mov
pushf
and
xchg
lods
push
mov
sahf
mov
adc
mov
or
ljmp
les
hlt
lcall
jns
or
jl
lock
sahf
aad
lcall
mov
rorb
addl
mov
lcall
cmp
inc
int3
push
lock
and
push
out
in
jmp
dec
fwait
int
mov
out
mov
xchg
xor
sbb
roll
inc
test
enter
data16
clc
cmp
sbb
mov
sbb
jle
loopne
sbb
ja
push
sbb
notl
pop
inc
sbb
in
cmpsl
int
push
insl
pop
and
add
pop
xor
ss
sub
movsb
stos
xor
or
arpl
imul
gs
sbb
mov
add
add
dec
or
adc
cmp
mov
xor
lret
rclb
inc
inc
xchg
popf
jns
mov
dec
pop
cmp
cmpsl
mov
pop
ljmp
xchg
nop
js
js
dec
mov
mov
mov
loope
pop
lea
sub
adc
xor
dec
pop
fimull
mov
mov
sub
movsb
mov
mov
and
sub
adc
lar
or
xchg
fildl
push
or
mov
mov
icebp
fiaddl
adc
test
add
cmp
add
inc
cmp
loop
add
xchg
pop
push
adc
pop
fcmovnb
mov
push
inc
xor
jo
jp
dec
adc
push
adc
jae
cmp
push
pusha
xor
pusha
mov
orl
or
push
pop
cmp
push
adc
roll
add
xchg
mov
idivl
dec
outsb
mov
add
push
sub
sbb
or
xchg
loopne
adc
sbb
add
sbb
dec
dec
test
xor
push
push
and
ja
mov
mov
sbb
pop
fbld
scas
and
inc
insl
cmpsl
cwtl
stos
mov
addr16
mov
cld
mov
fldl
or
daa
dec
stos
jb
stc
hlt
inc
sbb
movl
push
mov
shlb
xchg
mov
dec
sbb
pop
mov
mov
adc
ss
mov
negb
daa
les
inc
faddl
incl
dec
out
in
insb
std
mov
sbb
lret
test
test
out
pop
pop
lret
and
sbb
mov
out
push
scas
jnp
clc
in
hlt
or
add
mov
mov
dec
mov
insb
lret
pop
dec
or
test
mov
fisubl
repnz
testl
add
pusha
push
and
mov
or
mov
xchg
cmpl
xorl
test
sti
fsubrs
xchg
dec
mov
sti
sub
adc
cmc
std
ss
jp
sbb
insl
sub
add
loop
pushl
lods
cmp
call
xor
lahf
popa
lahf
gs
jnp
jb
mov
test
sub
sahf
nop
xorb
inc
loope
test
pop
addr16
in
ss
popf
stc
jbe
jle
jnp
sar
lock
add
mov
sbb
pop
gs
cs
aaa
mov
je
sbb
xchg
into
pop
pop
insb
jp
xor
adc
nop
cmp
mov
sbb
mov
cmp
daa
or
mov
mov
or
mov
test
sti
push
push
arpl
out
and
jns
xchg
add
mulb
mov
xchg
aaa
scas
mov
or
insb
add
add
push
pop
push
jmp
rolb
clc
add
add
adc
adc
arpl
push
pminub
loope
mov
xchg
je
divb
push
xor
loope
mov
adc
test
sbb
outsb
pop
jbe
div
jecxz,pt
xor
or
je
xor
subl
data16
notb
mov
mov
xchg
lods
les
dec
cs
les
inc
or
lea
mov
xor
scas
mov
lret
sub
push
mov
jae
stos
mov
fwait
mov
and
sub
mov
sub
divb
push
mov
shrb
sub
push
push
lahf
pop
xchg
jbe
inc
sub
aaa
lock
pop
mov
pop
test
ret
pop
xchg
adc
pop
roll
jle
jb
jle
cmc
call
xchg
lods
adc
test
ss
fs
insb
mov
jl
dec
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
icebp
jne
mov
stc
add
add
pop
loop
jb
inc
out
cmp
or
lcall
xor
inc
cmc
adc
movsl
nop
jne
inc
ficompl
sarb
xlat
sbb
imul
push
or
nop
mov
jbe
and
fbstp
mov
andl
adc
xlat
pop
popa
sub
add
outsb
mov
sbb
add
insl
jbe
lock
stos
push
sar
shlb
jle
adc
test
imul
xchg
leave
inc
mov
jo
and
popl
test
lret
push
or
repz
xor
stos
pusha
sbb
dec
leave
mov
movsb
cs
dec
jmp
loopne
adc
sub
mov
sbb
lret
aas
cmp
lds
fildll
sub
jecxz
mov
fbld
mov
shr
nop
push
jnp
jbe
sti
ljmp
mov
mov
das
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
out
dec
pushf
test
sbb
push
stos
ret
movsb
loope
out
xchg
dec
rcl
add
nop
cmc
hlt
hlt
mov
add
jnp
dec
enter
ljmp
lock
adcl
notl
out
pop
mov
xchg
lods
fnstenv
aaa
or
outsl
fsts
adc
mov
ss
or
dec
sti
or
fs
adcb
sbb
cmp
pushf
cmpsb
mov
xor
cmc
push
sbb
jnp
imul
xchg
mov
cmc
aam
lds
cli
hlt
xchg
xor
xor
or
sub
sbb
pop
jae
push
add
mov
jl
mov
rcr
popa
mov
je
je
mov
xchg
stc
adc
pusha
sub
inc
jge
lods
pusha
das
aad
mov
decl
and
fiadds
cmc
lret
push
call
add
aam
int
aaa
das
aam
idivb
add
cli
mov
daa
sub
and
jnp
pop
or
test
jg
scas
fcmovnb
cltd
pop
shll
pusha
dec
out
cmp
mov
inc
ret
movsb
test
adc
dec
pop
mov
xor
jo
in
popa
pop
mov
test
scas
jge
clc
cmp
mov
xchg
or
mov
pop
loope
mov
out
andb
test
sbb
fwait
aaa
repz
xor
sbb
sahf
sub
arpl
jbe
stos
sub
jmp
cmp
cmp
rcrb
pop
sbb
xlat
pop
sub
scas
sahf
or
ja
mov
pop
nop
test
mov
pop
shr
xor
out
cmp
xchg
adc
jp
inc
cmp
lds
loop
bswap
jle
jge
in
inc
mov
jns
jp
dec
cli
lods
add
mov
add
add
arpl
addr16
sub
jnp
sub
scas
cld
add
add
dec
pop
cmp
adc
xchg
xor
mov
enter
jns
push
ret
adc
inc
mov
xchg
xor
clc
std
jmp
roll
mov
fsts
inc
nop
scas
arpl
xchg
cmp
push
aaa
in
xor
mov
dec
lahf
mov
xchg
add
sbb
outsl
sub
xchg
adc
fsubrs
js
aam
inc
mov
jne
sbb
imul
jecxz
sbb
shlb
sub
fidivrl
inc
mov
gs
or
setae
test
aas
loope
ja
aad
pushf
pop
adc
mov
les
mov
sbb
lahf
inc
test
scas
insl
add
mov
out
mov
cltd
jno
xchg
fcomi
idiv
xchg
ja
mov
xor
fisttpll
scas
sub
add
out
cmp
cmp
pushl
xchg
xor
rorl
add
cmpsb
mov
enter
pop
cli
inc
xchg
cmp
dec
push
repnz
lret
sbb
and
add
mov
insb
lcall
in
dec
jmp
lret
aad
lock
jecxz
pop
and
imul
and
jne
dec
ljmp
dec
or
sub
fcoml
leave
xor
shl
xor
xor
pushf
sbb
je
pop
xchg
mov
fidivrl
jno
fs
cmp
inc
cli
sub
loope
test
inc
cmpl
mov
pop
lock
js
repz
xchg
sub
outsl
pop
xor
in
cmp
jae
fwait
repnz
out
rcl
fcomps
sbb
mov
pop
insb
or
pop
xlat
adc
cmc
arpl
add
test
push
scas
mov
add
push
mov
add
add
xor
bound
mov
gs
cld
fisubs
popa
jno
jbe
call
xchg
cmp
pop
or
ljmp
clc
imul
clc
movsl
jle
insb
cli
push
xor
xorl
mov
sti
aad
fistpl
movsb
jle
test
loopne
daa
push
mov
jbe
rcr
mov
scas
ret
test
loop
rcl
mov
stos
icebp
test
lods
insb
imul
scas
adc
inc
fwait
decb
and
lods
mov
rclb
inc
pop
dec
push
adcl
call
lock
jle
dec
pop
sub
pusha
leave
mov
xor
jge
sbb
jae
jo
lea
popa
outsb
ss
mov
bound
or
mov
js
sbb
mov
jmp
test
cmpsl
lret
sti
mov
scas
push
add
add
aaa
xchg
and
movsl
mov
mov
mov
aam
mov
add
add
inc
aad
gs
les
sbb
aad
sar
cli
fcomi
test
push
test
rorb
push
push
sbb
stc
push
scas
push
pushf
loope
test
lds
jl
js
xlat
jnp
inc
lcall
push
sbb
and
mov
sbbb
fisubrs
popf
aaa
xchg
push
fisubl
rcrl
sbb
aad
test
jo
ret
sub
mov
in
insb
in
test
mov
inc
outsb
push
aam
dec
sahf
adc
sarl
mov
dec
push
dec
mov
shll
cmp
pop
in
imul
test
lret
lahf
jo
das
outsl
in
jg
shll
pop
adc
negl
pop
xchg
fistpl
lahf
fsts
and
jp
pop
cld
ljmp
sub
sub
lret
in
sub
push
sbb
xchg
lods
mov
add
add
mov
push
jg
mov
add
push
jno
add
add
xchg
push
xor
push
jb
push
xlat
popa
mov
or
jg
xchg
int3
push
ja
jbe
aam
imul
cmc
mov
int
insb
scas
xchg
adcb
pop
sub
dec
insb
adc
dec
sub
and
cmp
push
outsl
jne
movb
leave
fidivs
adc
mov
je
out
test
push
pop
xchg
xchg
fs
hlt
mov
mov
out
movd
dec
out
jecxz
xchg
int3
rcll
popf
cmc
mov
shll
rcll
pusha
adc
add
or
loope
mov
iret
inc
lea
mov
adc
loop
sub
cli
adc
add
aad
cmp
add
stc
mov
push
cmp
lds
dec
loope
je
in
dec
adc
aaa
into
js
iret
pop
push
into
loopne
cmpsl
push
cmc
xchg
sti
or
mov
loop
or
arpl
sbb
dec
arpl
add
inc
stc
mov
mov
lods
imul
ficomps
lods
push
movl
add
movsb
push
movsl
pop
andb
sub
jae
testl
push
sbb
xchg
dec
fistpll
mov
mov
out
mov
movsl
xorl
or
jg
mov
sbbl
cs
fwait
sbb
sbb
ret
jns
cmp
add
in
cmp
push
mov
pop
cld
rorl
loopne
loopne
jne
mov
adc
imul
imul
fstpl
xor
xchg
or
nop
and
xchg
fdiv
or
roll
push
dec
adc
pushf
scas
push
push
cmp
into
addr16
jb
loopne
and
out
pop
pop
sbb
lret
sub
and
dec
xchg
pop
out
sub
repnz
mov
mov
mov
daa
test
shrb
fsub
mov
out
push
rcr
sub
adc
push
mov
xlat
cmc
mov
add
add
mov
cmp
or
dec
jne
add
add
xchg
lds
lcall
mov
mov
loopne
inc
xchg
pop
loop
inc
mov
mov
cmp
popa
cmc
icebp
int
cmp
ljmp
mov
mov
mov
push
nop
jmp
dec
loope
mov
test
mov
sti
lods
and
jbe
shrb
imul
das
data16
mov
sbb
ja
pusha
and
ljmp
icebp
in
call
sti
inc
int3
imul
adcl
cli
out
mov
jne
inc
mov
dec
hlt
loop
lret
dec
mov
sbb
jno
pop
add
and
adc
lret
ss
jno
sti
mov
or
adc
inc
fucomip
cmp
stc
lea
shrl
xor
mov
rol
das
push
jne
cwtl
in
xorl
dec
ret
subl
loop
pusha
xchg
sbb
add
xchg
enter
push
fbld
scas
ljmp
add
add
dec
dec
sub
push
daa
xor
je
cmpsl
xchg
adc
dec
jp
icebp
movsl
xor
sbb
in
mov
imul
cmp
dec
and
xchg
test
sahf
cmpsl
popa
filds
push
fisttps
es
push
jp
push
mov
insb
mov
sbb
and
xchg
xor
sub
adc
sbb
xchg
and
add
dec
arpl
and
mov
push
xchg
lea
sbb
inc
and
or
outsl
mov
loopne
jns
loope
mov
adc
jle
sbb
pop
xchg
sti
sbb
bound
jle
adc
lock
iret
or
push
popa
orb
call
mov
sub
cs
xchg
sbb
cli
mov
out
test
call
inc
cmp
scas
loopne
push
mov
cs
in
mov
add
add
into
fwait
add
mov
adc
add
add
pop
push
xor
sub
lgs
dec
lcall
add
cwtl
pop
xchg
sub
mov
insl
lods
dec
cmovb
sbb
push
movq
sbb
adc
pushf
jb
out
xchg
std
cltd
negl
push
or
loop
and
cli
jle
mov
jns
xor
mov
and
out
push
inc
loopne
adc
inc
and
cmp
aaa
fadds
stos
adc
pop
cmp
dec
outsb
jmp
sub
loop
call
and
cmp
push
cmp
outsb
lahf
dec
dec
lahf
sub
andb
xchg
xor
pop
enter
push
fmul
push
flds
and
aad
adc
enter
ss
xor
jns
test
cmp
lret
lcall
js
repnz
std
ja
ljmp
and
mov
inc
dec
out
jge
enter
movsb
popf
popf
sub
add
xor
mov
pop
sarb
in
out
dec
fildl
add
leave
adcl
out
fcomi
cmpsb
or
nop
push
sahf
cmp
xchg
out
mov
shl
aaa
out
sbb
lcall
sahf
xchg
push
mov
rcll
jbe
cmp
ret
shlb
fimull
mov
out
mov
shrb
or
leave
jg
lahf
sub
sbb
popa
bound
in
iret
ret
xor
call
sbb
adc
sbb
lcall
enter
movsl
jns
leave
sub
sub
xchg
jge
push
and
pop
ljmp
sub
out
cmp
lods
cmp
or
jmp
sbb
xlat
inc
fisubs
out
add
jne
loop
dec
shl
decl
push
push
push
xor
xchg
push
cltd
daa
arpl
or
pop
outsb
divb
sub
xlat
sub
inc
xor
jecxz
nop
pop
fistps
add
add
inc
out
aas
mov
rolb
push
add
add
and
dec
lods
incb
aaa
out
jecxz
int
add
mov
test
aaa
loopne
je
movsl
lret
add
adc
cmp
repnz
dec
into
xchg
ret
push
cmp
mov
and
cmp
or
out
adc
jnp
push
call
xor
jg
sbb
icebp
lods
mov
mov
lahf
jle
mov
inc
aas
mov
ss
pusha
push
cmpsb
push
sub
sarl
fisubrs
call
test
fcomps
mov
mov
xchg
lret
test
mov
cmpsl
cmp
pop
and
jmp
adcl
aam
sub
je
cmp
push
stc
jge
pop
test
cmp
cs
shll
sbb
in
pop
lods
pop
fidivl
js
cmp
xor
pop
adc
sub
add
out
and
add
push
bnd
dec
leave
and
cmp
add
add
fwait
ss
decb
jge
sub
and
arpl
xchg
mov
ljmp
and
gs
pushf
mov
das
imul
xchg
sub
jae
adc
and
pop
sub
push
adc
scas
leave
pop
cmpsl
fsubl
leave
pop
mov
cltd
cmc
mov
fbld
jbe
cs
mov
stos
ljmp
sbb
jecxz
in
xchg
int3
xchg
and
jno
lea
mov
mov
int3
in
popa
rclb
test
out
fnstsw
js
clc
lea
push
fisubrl
jne
mov
pushf
rcrl
jno
dec
bound
pop
dec
mov
sahf
movsl
scas
loop
inc
dec
mov
or
push
push
popa
mov
add
sub
in
mov
dec
lret
aas
sub
out
data16
or
cwtl
js
rcll
mov
xor
push
enter
mov
add
add
in
out
ja
filds
imul
or
add
es
cmp
push
xchg
mov
out
cmp
adc
pop
or
adc
push
jae
jge
and
rorl
dec
repz
dec
fnsave
mov
int
into
xor
sbb
dec
das
fwait
mov
aas
mov
jns
dec
lret
lahf
ljmp
adc
fildl
fisttpll
std
mov
and
sahf
imul
adc
scas
fs
int
dec
pop
jb
jmp
or
jae
mov
jns
jne
stc
jecxz
pop
aas
cmp
int
movsl
js
test
aaa
push
jae
inc
movsl
fdivr
notb
mov
clc
outsb
xor
leave
or
loop
mov
fildll
cmp
cwtl
mov
cs
outsb
cmpsl
movb
xchg
inc
mov
les
repz
and
in
insl
call
mov
xor
add
inc
sub
add
pop
in
inc
push
or
shrb
out
or
add
inc
sub
or
mov
outsb
das
fildll
jae
adc
add
xchg
cmp
pop
lea
scas
sbb
jg
lods
lea
in
sbbl
pop
insb
divb
inc
stos
push
nop
mov
repz
idivb
xchg
push
or
xor
xchg
mov
jbe
sahf
mov
or
pop
jbe
mov
andl
insl
aas
push
sbb
xchg
jecxz
jle
dec
out
lea
das
pop
pmaddwd
in
adc
pop
dec
ret
pop
mov
int3
insl
mov
inc
xchg
xchg
mov
out
dec
jg
dec
push
iret
inc
sbb
or
add
push
lods
xchg
rcrl
dec
rclb
or
push
jge
mov
jp
cmp
pop
sahf
xchg
jle
dec
cmp
dec
insl
sub
mov
das
push
loopne
or
add
add
jg
neg
pop
daa
inc
add
js
or
add
mov
dec
mov
fisubrl
sub
mov
xor
dec
mov
enter
jne
sbb
add
cvttps2pi
es
add
sbb
xchg
rorb
mov
pop
xorl
mov
ficomps
push
jns
shlb
fisubrs
push
jns
jge
sub
inc
jne
cli
xchg
mov
shrb
xlat
inc
jae
test
enter
adc
inc
pop
mov
cmpb
jg
lods
mov
jg
les
insl
fcomps
mov
insb
and
jl
lret
and
mov
lret
pushl
jmp
lret
ret
in
adc
int3
rol
loope
inc
and
push
aas
push
mov
mov
dec
or
sti
sahf
aam
pop
popf
mov
test
pop
xchg
fwait
adc
repnz
and
fwait
insl
nopl
cltd
sbb
insl
xchg
fiaddl
inc
push
add
push
jne
ja
jb
add
cmp
sti
jg
cmp
je
add
jne
stc
or
add
sahf
fidivs
adc
mulb
xchg
lcall
dec
cmp
sbb
cmp
rclb
outsb
xor
jecxz
fildl
or
mov
call
add
push
pop
push
in
mov
cli
movsl
add
push
sub
jge
jnp
xor
mov
lods
and
and
loope,pn
mov
ja
mov
lds
jl
pop
mov
mov
stc
stos
in
call
stos
insl
jb
jb
xchg
pop
arpl
inc
xor
and
loopne
enter
xor
ja
dec
leave
fucom
cltd
outsl
and
lret
xchg
cmp
dec
lds
in
ds
pushf
enter
fmull
mov
popf
push
dec
xchg
rclb
mov
mov
in
insl
xor
dec
imul
call
jg
in
mov
adc
add
add
jnp
fstp
fcompl
js
std
sar
or
add
dec
pop
xor
ffree
jns
xchg
ljmp
sti
sbb
outsb
mov
cmp
mov
xor
push
das
pop
jae
pop
sbb
push
and
testl
push
loope
sti
mov
repz
push
mov
aas
fnstcw
add
loope
iret
pop
out
pop
cmp
int
push
ret
fmul
popf
adc
mov
jmp
shrl
dec
dec
cltd
dec
cld
sahf
into
pop
movsl
jae
ja
adc
adc
test
icebp
dec
cwtl
or
inc
mov
popf
xor
jne
cltd
mov
push
or
popa
shrb
jl
jle
mov
dec
scas
sbb
and
xor
push
cwtl
dec
mov
cmp
outsb
std
cmp
push
cmp
ss
loopne
pop
fidivrl
jnp
xchg
mov
push
insl
iret
mov
pop
ds
imul
repnz
jno
addr16
es
loope
mov
push
ret
add
mov
jno
std
outsl
mov
add
ret
sarl
push
add
add
xor
and
mov
jo
shll
lret
jno
and
mov
aad
jb
scas
mov
int3
js
in
lock
subb
pop
fldt
sarl
cmp
addr16
sub
dec
jo
push
inc
repz
dec
subl
mov
mov
mov
ret
out
and
outsb
push
mov
adc
dec
cmpsl
mov
cmpsl
pop
ja
sti
js
mov
xchg
gs
lock
popf
imul
lret
ret
and
jne
xor
sbb
jne
outsl
sbbb
cmp
pushf
add
shr
xor
out
scas
dec
js
push
rclb
jno
jns
in
sarb
inc
pop
push
lea
sub
dec
icebp
test
jns
faddp
xor
xlat
test
loope
mov
pushf
div
and
cmpsb
ss
dec
aad
scas
add
add
sbbb
loope
jmp
fnsave
outsb
mov
or
add
add
dec
mov
test
ja
insl
and
cwtl
dec
pusha
inc
xlat
sub
push
jl
mov
push
stc
jle
or
stos
or
lds
jmp
add
mov
cs
hlt
loopne
push
icebp
sub
cmp
jne
mov
pop
mov
xor
jo
cmpsb
fildl
cwtl
dec
adc
mov
push
out
cmp
fistps
sub
sub
pop
ja
mov
addb
jle
stc
cmp
push
scas
sub
jns
das
ds
sti
hlt
ret
fwait
cmpsb
push
insb
rcl
add
inc
icebp
inc
xchg
gs
adc
sub
mov
mov
lea
dec
lock
push
cmp
xor
mov
cmp
loope
xchg
jge
push
xor
cmp
push
adc
imul
xor
xchg
lds
rcll
xchg
or
add
add
loopne
pop
jo
mov
xor
test
push
adc
jo
mov
fst
add
test
mov
mov
int3
adc
jp
or
mov
xor
int3
xchg
arpl
out
xchg
xor
xchg
movsb
or
negl
data16
and
negl
mov
jl
lcallw
imul
leave
enter
cmpsl
inc
shlb
or
mov
xlat
adc
and
xchg
test
repz
ficompl
movsl
push
les
xchg
fiaddl
jecxz
repnz
adc
fcoms
bound
mov
cltd
mov
inc
jg
lret
repz
xor
stc
mov
cwtl
mov
sti
jl
xor
das
aad
jb
push
xchg
add
lock
divl
ret
add
add
cli
inc
jg
int
xchg
lods
or
mov
add
add
mov
in
leave
lret
push
repz
movsl
sbb
jbe
outsl
enter
push
mov
frstor
loope
rcl
lret
outsb
add
in
cmc
push
lahf
add
dec
sub
adc
cs
xchg
popf
insl
jno
xor
stos
add
enter
xchg
add
pop
mov
das
mov
or
out
test
test
pshufw
mov
adc
outsl
push
jo
cli
cmp
lds
sbb
xchg
rolb
fsts
add
sub
repz
pop
lods
and
jne
sub
jle
and
pusha
mov
dec
mov
mov
negl
faddl
sub
push
inc
sbb
jmp
sbbb
mov
xor
addr16
dec
push
sbb
jae
jnp
add
cmpsl
fdivl
cmp
add
rclb
lods
sahf
pop
stos
cli
hlt
cmpsb
mov
jbe
add
lock
std
cmp
jle
fistpll
ss
iret
jbe
pop
adc
add
notl
movsl
je
mov
jmp
aam
les
das
jmp
divl
xchg
jle
imul
loope
add
jne
push
mov
mov
mov
mov
xor
or
dec
fildll
imul
lret
or
cltd
mov
push
xchg
and
fucomi
adc
push
mov
push
jb
mov
decl
push
lcall
mov
adc
mov
fsubs
xor
insb
std
leave
mov
push
cld
add
sbb
inc
ss
addr16
jno
mov
mov
xor
test
mov
adc
lret
mov
push
mov
jp
cltd
mov
mov
or
ljmp
arpl
sbb
pop
push
clc
fmull
add
add
iret
xlat
ficompl
inc
lock
sbb
add
add
jle
decb
divl
aaa
or
jo
pop
adc
cli
testb
adc
cmpsb
jl
add
sahf
mov
call
test
iret
fwait
into
sbb
mov
sbb
jae
rorb
outsl
push
sub
adc
dec
add
fdivrp
inc
mov
xor
lods
push
test
push
sub
orl
out
push
mov
mov
pushf
test
or
mov
lds
out
or
mov
mov
test
mov
push
push
jae
xor
in
fcompl
int3
mov
mov
xor
mov
jge
mov
push
aam
std
test
sub
cmp
inc
dec
ret
sub
js
fs
push
push
in
hlt
stos
push
pop
dec
sub
mov
sbb
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
in
aad
adc
add
scas
lcall
sti
test
iret
addr16
loop
sahf
inc
xchg
sbb
mov
pop
loopne
and
xchg
cmc
in
pop
dec
movsb
xchg
popa
out
insb
fs
xor
enter
not
arpl
mov
sbb
sub
rorl
adc
sbb
push
mov
sahf
dec
lods
dec
dec
dec
popa
xchg
cmp
push
inc
mov
fisubrs
fsubr
pop
adc
xchg
or
add
pusha
lahf
add
and
mov
pushf
fisubrl
insb
testl
insb
loope
test
inc
xor
fidivs
lret
push
lods
adc
jmp
sub
jmp
in
add
jecxz
xchg
jbe
scas
sbb
loopne
xor
insl
outsl
mov
xor
jno
das
jnp
cli
lods
push
add
roll
lock
sub
stos
cld
mov
jmp
bound
int3
xchg
lahf
jp
fildl
or
or
cmp
stos
iret
mov
mov
ja
add
add
std
sbb
stc
cld
or
arpl
add
add
mov
ljmp
pop
jle
das
stc
mov
imul
sub
outsb
mov
nop
mov
add
and
sub
outsb
pushf
pop
cmp
mov
out
pop
lret
lds
jg
push
add
sti
jmp
cmp
jle
fwait
jl
fcomp
out
push
lock
movsb
pop
xchg
pop
mov
jg
or
stc
aad
in
add
cmp
and
std
movsl
fsts
cmp
lahf
or
std
mov
and
inc
fs
push
dec
jmp
fistl
leave
add
mov
and
jge
std
mov
das
pop
pushf
incl
fsubrs
xchg
mov
dec
cmp
inc
lahf
fsubrs
inc
mov
fstps
jbe
rol
adc
imul
jmp
xchg
sbb
sarb
pushf
notb
ficompl
xchg
and
add
add
add
pop
test
scas
repz
cld
adc
jae
dec
sub
add
add
mov
sub
scas
inc
and
in
hlt
sbb
mov
jmp
pop
and
fsubrs
adc
out
stos
pop
rclb
xchg
mov
out
lret
data16
pop
mov
aaa
test
push
push
jo
xor
fwait
sbb
into
lea
ljmp
cmp
mov
stos
fsubrs
fs
movsl
add
pop
dec
lock
fnsave
xchg
xor
or
push
mov
fisttps
mov
fstl
mov
das
mov
xor
jmp
dec
sbb
cmpsb
inc
mov
cld
aam
or
jmp
cmpsb
loopne
add
shlb
test
ljmp
inc
into
lock
std
sbb
pop
and
fnstsw
lret
xchg
lret
inc
lods
cs
imull
adc
add
add
dec
pushl
mov
stos
fdivl
pop
add
add
add
sbb
std
stc
jbe
imul
and
sti
daa
pop
lea
icebp
ret
sbbb
repz
adc
nop
std
jle
mov
adc
lcall
shl
lock
fcomi
dec
cltd
add
mov
pop
fwait
add
xor
out
mov
jmp
in
sbb
aad
and
cmc
stos
push
pushf
ficoms
mov
push
sbb
lea
sbb
xchg
xor
inc
sbb
inc
aaa
lods
leave
int
mov
mov
push
xchg
test
aaa
mov
clc
xor
sub
mov
jnp
shrl
xchg
in
or
xor
pushf
mov
push
push
sti
cmpsl
xor
jns
cs
xchg
push
jb
xchg
vmovlps
andl
adc
rol
in
data16
add
pop
sub
inc
ja
pop
aas
dec
push
pop
mov
add
inc
lock
scas
push
sbbb
mov
int
sti
dec
mov
ret
adc
add
push
adc
inc
sub
mov
push
sbb
imul
mov
jl
test
sbb
jae
sub
fwait
int
push
push
sub
divl
xchg
jno
add
cmpsb
push
data16
mov
imul
mul
pop
xor
adc
andl
mov
movsb
stos
insl
je
subb
add
or
cld
push
data16
test
call
push
arpl
scas
adc
cmpsl
and
sub
popf
daa
jge
insl
adc
cmp
inc
add
sbb
inc
dec
fistpll
scas
lock
sbb
inc
push
mov
adcb
out
imul
cli
mov
in
or
repz
adc
aam
and
cmc
adcl
xor
or
dec
daa
sub
insb
ja
add
add
xchg
jae
ja
div
mov
adc
cmp
add
add
or
xor
pop
cmpsb
sub
js
push
xor
or
inc
int3
insb
jp
cli
mov
and
mov
cwtl
aaa
pop
add
fs
stc
or
push
insb
jmp
push
push
scas
ss
imul
add
test
repnz
outsb
mov
sti
rolb
sbb
lret
add
mov
leave
movsl
sbb
les
add
in
dec
cmp
jne
hlt
push
cli
add
or
enter
stc
test
or
sbb
jo
pusha
and
rorl
xchg
jl
inc
in
cwtl
mov
popl
mov
ret
movsl
fwait
ja
int3
mov
pop
imul
movsl
mov
add
inc
sub
inc
pop
loope
shrl
pop
stos
lea
fnstsw
xchg
inc
loop
dec
outsb
fidivl
shr
sub
arpl
or
std
xorl
add
dec
jp
std
sbb
add
add
cli
std
jg
push
pushf
dec
pushf
in
xchg
aas
sbb
add
pop
sub
dec
jae
adc
cs
jmp
xchg
xchg
add
scas
adc
mov
dec
sbb
loop
je
sub
cwtl
pop
andl
int
outsl
rcrl
leave
cld
mov
fisubl
in
sbb
rcl
mov
or
data16
jae
pushf
testl
add
xor
mov
pop
imul
dec
pushw
jb
mov
mov
insl
ret
xchg
stos
repz
xchg
or
fnstenv
jecxz
mov
mov
fs
lahf
test
or
xchg
fsubrs
loop
inc
pop
iret
lock
dec
adc
adc
fxtract
ljmp
pusha
ljmp
mov
out
cli
rolb
sub
aaa
out
mov
dec
inc
pushw
pop
mov
xchg
pop
push
fiadds
add
out
cmc
lret
pop
lods
jecxz
daa
push
push
pushf
sbb
into
add
add
add
mov
std
incl
sbb
jmp
jmp
inc
sbb
add
ret
jl
mov
mov
das
out
daa
movsb
in
movsb
testb
adc
mov
jns
stos
cmp
mov
daa
cmp
pop
pop
jnp
pop
mov
cld
pop
fnstenv
stos
dec
lods
movsl
jecxz
fcomps
pop
push
div
scas
test
call
add
cmp
add
and
xlat
push
pop
test
ficomps
popf
aas
fcoml
sarl
test
btc
ds
not
jg
fnstcw
dec
mov
mov
cld
dec
clc
push
rcrl
add
sarl
lods
pop
ret
push
out
mov
sbb
jne
fdivrs
jge
addb
or
rcl
cmpsb
out
aad
and
fsts
movsb
pop
inc
or
out
push
add
sub
das
cmp
jae
jl
adc
sbb
jnp
ret
jmp
ficoml
ret
add
hlt
sbb
push
es
jg
pop
or
xor
popa
mov
add
add
lock
cwtl
movsl
lret
mov
je
jno
adc
fcomps
data16
dec
mov
fsts
mov
and
test
aam
add
scas
pop
cltd
xor
outsb
clc
mov
in
lods
push
xchg
push
insb
sub
jnp
ret
rcr
sbb
scas
inc
adc
and
dec
ret
push
dec
outsb
jno
bound
xor
loopne
inc
gs
pushf
cwtl
fwait
inc
add
mov
aam
mov
cmc
xlat
rcrb
push
stos
xor
test
jmp
adc
add
and
outsb
mov
popa
pushl
lahf
and
test
out
into
leave
std
int
sbb
imul
xchg
shl
pop
dec
xchg
push
clc
push
sub
inc
test
cmpsl
adc
xor
xchg
out
push
jo
in
dec
sbb
mov
pop
sub
cmpl
scas
cltd
sbb
das
and
outsl
jae
xchg
add
add
or
dec
push
cmp
sbb
add
mov
mov
sub
inc
mov
ss
addr16
adc
cmp
scas
rol
fwait
mov
mov
add
sub
cmp
imul
mov
push
pop
xlat
jbe
adc
rorb
sub
inc
push
lds
and
inc
loope
jmp
rorl
insl
pop
sbb
and
aaa
push
fstpt
mov
jae
push
repnz
mov
jge
xor
std
add
psrlq
or
mov
fbld
dec
jb
lea
das
lret
xchg
movsl
adc
inc
mov
js
inc
sbb
and
or
sbb
or
les
or
push
repnz
push
adc
xchg
cmp
mov
sbb
lds
and
cli
push
cld
shl
cmpsl
push
int
pop
fbld
sahf
mov
call
add
add
stc
lods
xor
mov
call
add
nopl
jnp
inc
popa
sbb
sub
jp
push
jl
fistps
shl
mov
push
pop
add
loopne
mov
ffreep
popf
icebp
icebp
pop
dec
decl
cmp
sub
hlt
xchg
adc
jae
loop
mov
or
adc
ja
sub
mov
adc
gs
loope
in
fsts
enter
mov
jne
call
mov
mov
inc
imul
pop
in
push
mov
ljmp
les
xlat
xchg
pop
adc
jg
pusha
jmp
pop
mov
out
cwtl
ss
adc
cmc
into
shrl
or
movsl
lds
insl
push
mov
js
xchg
sub
stos
enter
and
loopne
xchg
cmp
inc
cmc
mov
aad
fucom
push
push
out
out
in
es
xchg
stos
adc
ret
mov
sub
ficoms
stos
sbb
call
mov
pop
pop
add
add
je
add
pop
popl
iret
inc
flds
push
in
adc
inc
inc
xchg
fcoms
mov
xchg
jb
mov
in
insb
adc
add
ss
dec
sub
dec
loop
aam
ja
stos
push
pop
pop
mov
in
mov
pop
and
pop
jbe
ljmp
arpl
outsl
push
test
mov
mov
enter
xor
xchg
mov
popf
std
push
ret
lods
das
pop
inc
add
push
sub
or
mov
cmp
fwait
lahf
mov
lock
leave
fldcw
lds
rorl
push
out
xor
cmpsl
movsb
ss
mov
mov
jae
jp
cs
cmc
and
loope
sbb
in
sarb
push
addr16
adc
add
jb
jge
in
xchg
test
mov
mov
out
stos
jge
or
jne
pop
and
add
in
gs
cmpsl
imul
or
xchg
inc
jl
mov
imul
mov
test
fistps
lds
jne
add
sahf
ljmp
or
adc
and
fnstcw
nop
xor
pop
mov
cmpsl
pusha
dec
push
cmp
dec
cmp
ja
sahf
repnz
adc
addb
cmp
sbb
xlat
sahf
das
mov
test
sahf
push
sbb
xchg
lods
mov
or
repnz
lods
or
or
mov
dec
fsts
lods
or
mov
cmpb
arpl
sub
xchg
ror
jl
lods
fidivs
repz
mov
gs
pop
xor
lret
inc
shlb
outsl
sbb
sbb
pop
pop
inc
jae
int3
or
jns
add
push
inc
sbb
and
movsl
push
test
cld
add
add
sbb
out
xchg
iret
push
aas
fimull
inc
bound
add
add
mov
iret
and
add
data16
lahf
push
mov
in
xor
mov
popa
lret
scas
in
jnp
sbb
stos
pop
xchg
mov
pop
dec
dec
or
out
push
in
cmp
mov
aam
out
jge
dec
mov
dec
out
mov
cmp
in
lock
out
les
jp
repz
sbb
sub
roll
movsb
pop
sub
das
lcall
das
xchg
sub
sbb
xchg
outsb
ljmp
mov
pop
jo
cmp
lods
xor
sbb
scas
leave
jg
mov
jmp
dec
into
inc
clc
mov
inc
das
imulb
mov
ljmp
lods
inc
into
push
outsb
lret
and
xchg
in
into
in
rclb
cltd
cmp
fmull
fimuls
sub
outsl
test
xor
add
aam
add
cmp
out
loope
jns
inc
repz
add
add
and
test
inc
jae
mov
std
cmp
in
in
fisubrl
or
xlat
and
ret
mov
jp
popa
push
movsb
sbb
ja,pn
inc
inc
mov
ss
test
adc
sti
xchg
dec
or
fisttps
adc
shll
cmpsb
cli
fs
jmp
sahf
push
pop
repz
ret
sbb
push
clc
out
pop
ss
cwtl
aas
js
daa
imul
data16
ljmp
dec
add
scas
mov
pusha
or
push
leave
mov
fildll
ss
fnstenv
gs
aas
shr
add
cmc
bound
mov
rolb
inc
jge
jb
aaa
loop
push
lcall
cmp
mov
mov
ret
fbld
out
ret
stos
jg
stc
lret
fcmovne
andb
inc
stos
jbe
lds
add
test
sbb
sti
push
mov
push
pop
imull
and
add
xchg
clc
ret
fadd
mov
xchg
dec
inc
sarb
out
fiadds
fstl
dec
lret
jl
adc
leave
pop
cmp
xlat
push
notl
daa
jb
sub
mov
dec
and
jae
fists
mov
and
outsl
mov
and
cmpsl
hlt
and
or
insb
and
pop
sub
fwait
add
add
lea
jne
insb
pop
cmc
rorl
push
push
inc
imul
xor
inc
out
stos
cvtps2pi
lds
and
mov
jg
outsl
xchg
mov
ja,pn
lahf
jmp
pop
flds
insb
mov
sub
sbbl
add
call
hlt
and
push
in
pop
ja
popf
repnz
cli
ljmp
cmp
ret
xchg
cmp
in
aad
cwtl
lahf
gs
sbb
add
add
jg
cld
ret
add
fisttpll
jno
add
add
ss
inc
ds
subl
add
sbb
dec
hlt
xchg
cmpsb
stos
pop
enter
and
icebp
sub
or
dec
icebp
inc
jle
popf
add
ljmp
adc
out
push
and
andb
or
sbbl
xor
inc
loope
out
frstor
push
cmp
loope
and
jp
jecxz
mov
dec
test
mov
gs
fs
push
xchg
movsb
popf
das
push
pop
insl
and
ja
pop
in
sub
scas
jb
loop
jle
sbb
insl
xor
int3
pop
pushf
mov
jb
filds
dec
jp
rcrb
xchg
aad
inc
pop
iret
mov
cltd
lds
dec
or
add
ret
fiadds
lahf
out
mov
movsl
cmp
adc
inc
test
rcr
xchg
out
sub
adc
lock
add
mov
iret
mov
and
add
stos
xor
and
mov
sbb
mov
cmc
aam
cmp
sbb
pop
mov
sub
subl
xor
fimuls
dec
clc
xchg
sub
jae
movsb
mov
out
sbb
inc
pop
stc
incl
scas
lods
outsb
xchg
sub
fcom
es
and
fisubs
fldt
or
pusha
outsl
insl
cmc
lods
mov
fsub
dec
sahf
inc
jo
mov
pop
andb
add
je
xchg
mov
sar
cmp
adc
jp
cmpl
pop
shrb
ud1
push
pop
lret
repnz
cmp
mov
orl
clc
dec
scas
xorl
xchg
mov
test
mov
cmpsb
and
mov
push
inc
repnz
adc
pop
mov
inc
or
fwait
jecxz
inc
mov
push
push
mov
mov
ficomps
mov
add
or
jg
arpl
sub
ja
add
add
iret
out
push
dec
inc
int
mov
and
lret
xlat
shl
cwtl
cmp
imul
adc
divl
inc
xchg
adc
jle
pop
jns
mov
mov
dec
sbb
and
addr16
mov
movsl
inc
data16
shll
into
test
or
stos
bound
cmc
in
jo
cmc
stos
test
xchg
pop
fldenv
jp
pop
nop
push
lea
dec
lock
cmp
int3
mov
dec
insl
cli
mov
inc
add
xchg
call
inc
jne
mov
push
ficoms
insb
je
int
xor
jge
xchg
sti
cmp
or
xor
sahf
lea
cmpsb
sahf
xchg
lcall
pushf
mov
ret
clc
add
lahf
xchg
cli
add
adc
push
pop
aad
fs
call
lods
sub
pop
pop
movsl
xor
or
xchg
mov
int
add
add
xor
clc
cli
clc
sarb
sti
mov
jmp
andb
add
arpl
mov
testb
push
dec
out
sub
push
ret
mov
mov
and
and
add
push
aad
xchg
rolb
sti
out
add
dec
mov
inc
sti
add
sbb
cmp
dec
into
stos
inc
test
push
das
push
xlat
and
push
aam
pushf
jne
pop
cmpsl
and
and
and
inc
fsub
adc
push
out
xchg
xchg
and
pop
aam
pusha
xor
push
xor
pop
je
das
in
hlt
adc
pop
pop
enter
mov
push
outsb
dec
or
mov
and
ss
pop
out
pusha
movsb
hlt
fs
push
sub
ret
inc
int
or
bswap
pop
jecxz,pn
adc
jle
pop
lock
push
push
test
lods
sbb
push
jno
sbb
mov
test
push
lock
fcomip
add
add
test
imul
mov
cmp
add
insl
xchg
pop
js
jp
dec
fimull
sbb
loop
jo
mov
test
test
sub
cld
sub
mov
mov
sub
ljmp
ja
call
fstp
mov
or
mov
cmp
mov
push
in
fisttpl
imulb
sub
jno
and
lcall
pushf
jmp
mov
out
push
jns
loop
ret
andl
lods
jne
testb
push
lock
ficoml
sbb
stos
test
jle
add
jne
pop
jne
leave
out
dec
out
ror
nop
repz
cmp
fcomi
push
dec
iret
and
mov
jbe
cmp
cmpsl
or
cli
jae
aas
adc
lret
scas
gs
ds
mov
xchg
mull
std
ret
jbe
and
add
add
es
data16
insb
daa
mov
cmp
inc
mov
add
add
inc
and
fwait
inc
incl
sbb
push
data16
scas
dec
or
and
fadds
or
lret
out
lock
movsb
push
popf
cs
cwtl
repnz
xorl
push
cmc
mov
cmc
stos
mov
xor
ja
push
push
push
jecxz
jle
push
lods
fwait
adc
push
inc
sub
inc
xor
cs
cmpsb
xor
jp
pop
in
xor
cmpsb
test
stc
pop
sti
testl
ja
testl
push
sub
jmp
cmpsl
movsb
fwait
mov
rclb
subl
dec
int3
pusha
sub
xchg
jo
mov
sbb
jb
popa
bound
fdivr
and
fmull
lahf
fisubrl
out
test
xchg
push
rolb
jne
and
push
cmc
dec
inc
cs
inc
and
aas
mov
and
pop
pop
xchg
push
dec
out
add
adc
lcall
add
dec
mov
imul
es
add
xlat
mov
or
mov
cmp
cmc
add
shl
and
pop
adc
inc
repz
fwait
jne
jns
enter
sti
and
out
adc
repnz
adc
adc
mov
out
pop
and
int
jl,pt
mov
xchg
or
xchg
mov
js
or
rep
sub
mov
negb
mov
lods
xlat
adc
fdivp
jns
clc
and
jno
imul
dec
fld
clc
aaa
decb
inc
pop
addr16
bound
ljmp
std
adc
movaps
or
mov
xchg
iret
mov
pop
hlt
mov
jbe
mulb
adc
loopne
cmp
jbe
aaa
in
mov
rcrl
or
rcr
and
sub
mov
aad
xchg
add
out
add
add
and
push
sti
cmpsl
enter
out
cmp
add
add
pusha
fistps
mov
call
fisttpl
je
adc
movsl
xchg
fiadds
jge
sub
mov
mov
fnsave
in
xlat
mov
std
xchg
jne
adc
in
ret
out
sub
inc
mov
dec
jnp
sub
mov
data16
pop
leave
sub
jo
mov
rcrb
and
jge
adcb
or
mov
fwait
or
sub
adc
pop
mov
ret
inc
loopne
mov
lods
lods
mov
mov
call
and
adc
mov
adc
stc
ss
movzbl
or
lret
pop
jo
ja
cmc
loop
rcl
cli
dec
mov
jg
aam
pop
insb
cld
push
dec
test
repnz
sub
sbbl
inc
int
mov
mov
push
repz
add
push
and
std
mov
dec
push
pop
lret
cltd
sub
add
lods
lret
cmpsl
sub
jp
cmpsb
ret
stos
dec
orl
inc
mov
bound
out
or
push
test
xor
push
pop
fisttpll
cmc
out
sbb
mov
inc
push
cmp
repnz
ret
adc
popl
test
inc
movsb
aaa
add
jno
cmp
punpckhwd
sbb
test
pop
test
pop
cli
rorl
stos
xchg
xor
jo
mov
lods
pop
push
and
xor
inc
pop
lret
imul
sti
mov
clc
jo
push
aad
adc
aad
repz
push
inc
xor
subl
xor
push
and
mov
inc
cmp
mov
mov
dec
scas
shl
rorl
out
jnp
ja
test
orl
es
cs
fisttpl
push
js
js
dec
in
sub
inc
shrl
pop
js
cmp
insb
mov
and
add
and
jecxz
and
lcall
add
add
push
cmpsl
add
xor
in
sub
inc
inc
mov
imul
mov
mov
push
adc
aad
cmp
mov
into
xchg
adc
and
shlb
and
xchg
xchg
push
inc
cli
inc
js
xchg
adc
shrd
mov
xchg
repnz
repz
sub
sarb
cmp
jge
out
daa
add
push
inc
test
insl
std
mov
pop
call
adc
insl
clc
jge
scas
test
jle
int3
cltd
test
jmp
sub
lret
arpl
adc
pusha
push
in
mov
mov
inc
subl
and
pop
jl
mov
xor
insl
pusha
xor
jns
stos
xor
adc
fidivl
ja
insl
pcmpeqd
testb
hlt
xchg
bound
add
add
add
xchg
ficomps
cmp
lahf
inc
movzbl
mov
add
add
out
mov
scas
add
mov
mov
xchg
sti
and
cmpsb
pop
pop
je
dec
adc
mov
test
sti
scas
ljmp
popf
pop
jne
jle
cld
fistl
psrlw
xchg
cltd
add
inc
fnstsw
sbb
ret
inc
icebp
sahf
add
adc
dec
leave
movsl
js
fwait
cmp
rcl
add
jl
and
fwait
dec
sbb
js
pop
sub
mov
fs
cmp
jo
jecxz
xor
add
xchg
ds
lret
shlb
xchg
add
pusha
insl
out
ljmp
add
xlat
icebp
scas
dec
inc
lret
dec
add
pop
or
cmp
xchg
loop
mov
roll
insb
ret
dec
add
xor
push
dec
jge
mov
int
jmp
or
lretw
shrl
daa
cs
bound
sub
stos
mov
test
pop
add
add
arpl
ja
sub
add
call
add
add
push
and
cli
mov
sbb
cmpsl
sarb
ljmp
push
fcoms
es
cmpsb
push
jp
fsubs
xorb
sti
insb
orb
cmp
cmpsb
pop
cmpsl
cs
jp
in
xchg
mov
cld
sbb
sti
dec
cltd
ret
insb
push
jle
mov
repz
cltd
mov
or
mov
jecxz
dec
and
dec
jp
mov
lret
cli
ja
adc
or
test
and
pop
sub
inc
pop
ss
aas
push
add
and
jecxz
out
movsb
fsubrl
xchg
pop
repnz
adc
out
push
scas
loopne
popa
push
rclb
sbb
xor
incb
js
xchg
mov
adc
fcomip
jg
test
popf
jecxz
mov
addl
mov
out
mov
pop
mov
add
add
lret
mov
or
or
dec
ljmp
add
sub
xchg
mov
xor
cmp
lret
push
pop
adc
xchg
jmp
cld
popf
push
cmp
mov
push
jle
data16
inc
mov
in
fdivrs
add
lret
push
add
rcrl
and
adc
ss
mov
add
enter
xchg
mov
and
add
and
fs
jge
pop
xchg
je
xor
out
addr16
jbe
stos
mov
jbe
push
mov
pop
push
jb
loopne
lcall
mov
ss
scas
das
or
mov
xchg
fiaddl
cs
or
xchg
jae
xchg
andl
mov
sbbl
dec
insl
jns
orb
jmp
daa
lahf
daa
xchg
jns
stos
add
sub
sti
pop
jge
neg
hlt
add
in
xor
add
cli
sbb
testb
fldl
fistl
jle
push
sbb
aas
xchg
and
data16
xor
sub
dec
repnz
pop
cmp
popa
mov
add
jle
cmpsl
das
xchg
lahf
je
bound
adc
popf
shll
pop
sbb
fsubrl
cmp
pop
xchg
mov
pop
xchg
mov
adc
mov
pop
mov
add
xchg
jnp
jb
mov
repnz
mov
inc
lds
pop
lods
cltd
xor
ds
cmp
lcall
movsl
xor
insl
inc
push
in
or
xor
loopne
or
fstpl
cli
mov
push
lret
jmp
inc
and
stc
jo
std
sbb
inc
inc
lock
cwtl
or
xor
fst
mov
jnp
adc
repnz
or
sbb
add
fsub
std
in
popf
in
stc
jmp
mov
add
add
clc
lcall
aas
je
out
arpl
fdivr
enter
mov
sbb
sar
mov
ljmp
sub
mov
test
je
xlat
stos
pop
and
bound
jle
mov
sub
stos
mov
adc
aaa
hlt
mov
xorl
push
enter
insl
mov
xlat
mov
push
xchg
je
pop
rcl
xor
rcrb
cmp
xor
ds
fsts
arpl
popa
mov
lock
fmulp
jmp
out
pop
xchg
xchg
mov
inc
lock
mov
adc
or
xchg
test
ror
call
dec
in
lods
es
push
ja
int3
push
aas
cs
data16
mov
mov
add
push
xchg
aam
jnp
jo
mov
dec
pop
sbb
cmpsb
mov
outsl
push
add
add
jp
jnp
sti
xchg
jle
jp
lods
sbb
cmp
add
ja
and
mov
stos
adc
xchg
mov
add
lock
or
fwait
imul
inc
mov
mov
sbb
outsl
sub
push
sbb
roll
push
dec
and
and
aaa
xor
test
fcomps
pop
enter
xor
push
test
cmc
aad
cmp
cmp
jmp
push
or
jmp
adc
mov
xchg
call
push
mov
mov
aam
incb
lret
lcall
insb
lock
mov
popa
push
xor
pop
sub
addr16
sub
movsl
loop
dec
popa
lods
mov
cmp
pop
mov
out
mov
mov
pop
roll
dec
cmp
fmuls
inc
mov
jecxz
gs
insl
add
repnz
sbb
test
call
and
outsl
in
loope
mov
cltd
mov
dec
adc
flds
add
mov
push
sti
decb
mov
add
xor
add
lcall
dec
test
pop
inc
mov
shrb
push
push
pop
std
cmp
mov
push
addr16
push
sti
push
and
pop
xchg
jl
pop
cmp
orl
pop
xor
pop
mov
dec
inc
scas
dec
leave
mov
stos
rcr
imul
jle
inc
and
add
stos
mov
dec
jle
mov
addb
sub
push
inc
jmp
fldenv
sbb
sti
and
mov
ss
mov
adc
xchg
mov
insb
xchg
and
in
in
mov
mov
dec
bound
ror
pop
daa
fnstenv
cmpb
and
xlat
shlb
push
addr16
xchg
mov
repnz
cmp
xlat
pop
pop
mov
jmp
and
iret
adc
popf
inc
xchg
sahf
sub
imull
jbe
iret
jb
es
lods
icebp
cmp
or
cmp
scas
add
add
add
cmp
xor
hlt
movsb
sbb
add
add
dec
out
jnp
movsb
cltd
stc
mov
sub
mov
mov
lods
lea
sub
jg
inc
icebp
inc
in
xor
dec
or
push
or
push
cmp
mov
fwait
test
xchg
insl
jg
adc
add
shll
inc
cmp
jmp
fs
sbb
mov
mov
sahf
mov
in
adc
adc
cli
add
pusha
add
xor
push
pop
cmp
push
mov
mov
add
jb
jmp
andl
imul
or
mov
sub
enter
loope
mov
rcrl
orl
mov
mov
jb
stc
insb
add
hlt
test
pop
outsb
add
or
mov
and
adc
dec
out
inc
or
arpl
fwait
adc
sub
es
add
add
cmp
jge
stos
lea
shrb
enter
add
add
pop
sti
and
outsl
cli
pusha
push
pop
jb
mov
in
sbb
adc
lahf
dec
cli
sbb
jmp
mov
add
hlt
or
mov
ja
jne
inc
and
push
sbb
fcom
ss
sbb
pop
mov
int3
ljmp
cmp
mov
adc
xor
sbbb
mov
xchg
sbb
push
push
loop
push
mov
jae
sub
call
inc
lret
ss
push
mov
incl
pop
dec
pop
jo
pop
ss
xchg
xor
sub
sbb
mov
or
jecxz
mov
mov
mov
call
mov
ret
inc
and
or
mov
ljmp
iret
jmp
insb
push
push
jno
fisubs
mov
add
xchg
repz
jno
adc
add
add
rclb
nop
lcall
aaa
add
add
hlt
xchg
fstl
lcall
in
les
andl
pop
or
sbb
push
lods
jge
sbb
jge
scas
loop
nop
iret
imul
jmp
mov
mov
xchg
ds
cmpsl
dec
js
gs
ljmp
test
pop
xor
enter
mov
inc
in
pop
push
or
mov
xor
aam
push
pop
daa
adc
xor
popa
popf
shrb
pop
rclb
cltd
or
add
lds
fs
scas
rclb
push
mov
inc
icebp
inc
push
xor
cmpl
cli
fldcw
pop
push
ljmp
adc
push
adc
decl
in
ja
mov
cmpsl
push
sub
pop
pop
scas
sub
aas
xor
pop
fiadds
shlb
scas
call
xchg
add
add
jbe
idivl
or
push
jg
aad
add
add
repz
loop
push
sbb
jg
sahf
repz
add
inc
lods
jle
and
xor
pop
out
loopne
and
fstl
push
sub
stos
xor
pop
cli
in
inc
dec
jmp
jbe
or
mov
and
mov
gs
add
jl
lret
xor
ds
addb
jno
dec
lods
dec
cmp
popa
ret
cmp
ret
xchg
pop
adcl
inc
out
pushf
cli
mov
sub
js
mov
out
mov
cmc
scas
jp
mov
test
adc
jo
add
mov
cld
xor
sarb
popf
loope
dec
call
jle
xchg
pop
pop
mov
adc
xchg
mov
mov
ret
test
push
psubq
sub
fmull
in
push
and
xchg
mov
arpl
ret
add
add
outsb
sub
stos
fs
jmp
leave
aas
ss
fidivrl
add
add
add
aaa
xchg
test
ret
sti
movsl
cmp
jmp
mov
sbb
in
xor
mov
popf
cmc
cmp
out
mov
enter
mov
mov
imul
mov
add
mov
or
div
and
js
call
out
cmp
std
enter
add
pushw
int
into
fisttps
add
add
push
ss
test
aaa
repz
sub
cmp
push
or
repnz
std
int
sub
les
and
adc
cwtl
xor
add
aaa
adc
dec
or
and
int
mov
sbbl
mov
dec
dec
inc
mov
adc
sub
sahf
negl
imul
and
and
pop
push
faddl
cld
and
mov
mov
adc
xchg
enter
sbb
daa
pusha
outsb
inc
enter
jge
add
les
scas
fistpll
outsl
gs
jmp
add
add
inc
inc
jae
jp
dec
and
xor
mov
rorb
xchg
and
test
lret
mov
aas
sbb
roll
or
inc
das
ja
notb
insl
les
dec
dec
dec
es
xchg
loopne
pop
add
mov
adc
ret
push
pop
inc
pop
jae
cmp
sbb
or
stos
dec
adc
dec
hlt
repz
leave
push
stc
sub
imul
jno
xchg
mov
mov
add
xchg
mov
inc
inc
adc
in
pop
jae
into
or
add
lret
add
jmp
ja
popa
mov
or
cmp
cli
jb
sub
lock
xor
mov
call
dec
mov
subl
push
das
aad
repnz
jmp
xlat
push
mov
xor
pop
test
push
add
add
cmp
movsb
push
sbb
mov
add
add
pop
ds
cmp
inc
icebp
jne
into
stc
cmp
sub
mov
xchg
push
xor
adc
pop
push
mov
cmp
aam
rcll
mov
and
pop
xlat
das
sbb
shlb
jnp
nop
leave
repz
mov
or
neg
jmp
jae
add
fwait
push
and
inc
xchg
add
xor
mov
loop
lret
sbb
cs
cmp
jne
inc
icebp
mov
adc
xor
testb
inc
sub
out
repnz
mov
mov
loope
sbb
outsl
test
flds
mov
dec
mov
stc
sarb
cld
adcl
gs
loop
fwait
rclb
out
nop
pop
sbb
rclb
std
in
in
mov
push
ficomps
push
idivl
jl
mov
out
push
out
cmpsl
fisttpll
cltd
push
push
inc
fmull
add
add
adc
jmp
idivb
add
in
test
shll
aad
mov
imul
mov
ficoml
jmp
stc
sbb
roll
sti
movsl
into
adc
call
decl
jle
fistpl
jge
scas
sbb
stc
add
leave
imul
mov
jo
sub
cmpl
mov
adc
sbb
mov
call
lret
mov
jp
sbb
cmc
cmpsw
inc
repnz
push
test
insb
and
push
push
cmp
leave
lods
ljmp
das
in
mov
cmc
push
sub
out
mov
cwtl
sub
xchg
jno
sub
and
fwait
jo
push
into
std
pop
mov
rclb
sbb
push
pop
outsb
movsl
inc
or
pop
cmp
xor
cmp
or
roll
mov
add
add
repz
cmp
lods
repz
mov
xchg
mov
out
cmp
add
aam
push
hlt
pop
and
and
jge
inc
push
dec
mov
or
in
rorl
mov
data16
testb
shl
mov
aad
es
mov
aas
pop
insl
dec
fs
push
mov
xchg
xor
mov
sub
pop
mov
data16
mov
fldcw
push
lret
icebp
mov
push
movsl
movsb
shlb
insb
sub
mov
scas
sar
or
cmp
mov
xchg
mov
aad
es
push
rcrb
fldl
out
or
cltd
scas
fsub
add
or
jle
or
cs
out
insl
pop
jp
mov
negb
enter
pop
out
repz
cmpsb
lret
xor
ljmp
lea
adc
mov
std
xor
in
ss
je
add
aas
daa
push
cld
push
std
jmp
dec
push
popa
xor
add
add
add
iret
add
push
push
mov
mov
mov
pop
in
pop
popa
ret
jge
mov
and
dec
addr16
aaa
inc
xor
cs
sahf
push
clc
les
je
out
xor
mov
inc
arpl
les
daa
cmp
add
cmp
in
ret
stos
xchg
mov
adc
xchg
int
int
shr
or
ljmp
jb
push
sub
test
jp
stos
scas
inc
incl
mov
fdivs
iret
lret
pop
xchg
mov
sbb
roll
mov
xchg
cmp
mov
loop
inc
arpl
loope
out
jl
pop
loopne
cmpsb
mov
lret
mov
jno
js
imul
adc
add
aaa
and
pop
xor
xor
fcomps
and
je
scas
xor
bnd
cli
and
out
call
add
add
add
sbb
dec
push
out
aad
hlt
inc
data16
aas
add
add
in
data16
jae
cmp
jl
sbbl
adc
popa
leave
mov
fcomp
dec
movsb
mov
mov
pop
pop
out
frstor
int
dec
xchg
insl
pop
popf
hlt
mov
lds
dec
popa
jmp
in
cmp
inc
mov
dec
cltd
mov
push
fcomi
in
mov
push
dec
stos
push
push
in
xchg
lcall
and
imul
test
xor
fdivp
push
or
hlt
sti
add
fidivrl
xor
outsb
jae
add
jbe
dec
pop
xor
js
push
xor
or
outsl
insb
pop
insb
jbe
loope
out
inc
add
mov
es
add
push
cs
push
out
mov
fdivrp
pop
aas
hlt
push
mov
cmc
add
or
cli
stc
inc
jge
dec
inc
lock
sub
sub
fiadds
daa
int3
popf
fsubl
add
stos
add
push
mov
or
add
mov
add
aaa
push
into
jns,pt
je
lret
clc
mov
andb
mov
imul
sub
add
mov
mov
aad
fs
jl
push
lods
cmpsl
test
adc
cmc
and
jb
jp
mov
mov
inc
mov
movsl
xlat
and
je
add
push
xor
mov
out
icebp
lock
dec
into
jl
or
inc
jge
sub
test
mov
mov
test
and
ljmp
and
cmpsb
jnp
add
inc
sbb
xchg
int
stos
jnp
sahf
mov
add
sbb
mov
insb
cmp
inc
int3
dec
lods
jo
ret
orl
icebp
add
je
sbb
aam
push
out
aas
cltd
data16
sub
inc
ja
pushl
outsb
xchg
lret
mov
mov
nop
cltd
cmpsb
adc
xchg
push
lea
mov
mov
ja
jg
xchg
orl
pop
add
add
push
xor
loopne
jle
imul
or
aaa
xlat
pop
xor
inc
outsb
cmc
ret
mov
pop
mov
fiadds
out
fcmovnbe
jl
and
cli
dec
xchg
js
outsb
stc
enter
inc
pop
mov
loop
add
dec
sub
bnd
jmp
inc
cmpsl
mov
aaa
cli
pop
mov
lcall
cltd
cmp
pop
mov
mov
jo
ret
outsb
adc
insl
mov
test
cld
ja
stos
mov
jl
dec
mov
movsb
dec
mov
lcall
call
shl
stos
scas
popf
cmpsl
xor
add
insl
adc
fwait
in
movsb
adc
mov
add
xchg
sub
aad
and
push
ljmp
adc
jo
xchg
shl
mov
loopne
outsl
xchg
inc
add
add
push
dec
lret
jmp
imul
aaa
je
lds
aam
inc
add
add
push
mov
mov
sub
mov
test
jns
mov
cmpsl
push
scas
mov
cmp
testl
mov
ljmp
fists
fwait
aaa
dec
pop
mov
cmpsb
cwtl
push
loopne
std
inc
les
mov
cli
pop
fcom
mull
push
es
add
es
sbb
fcoms
pop
jo
or
lods
mov
sbb
jnp
sbb
outsl
xchg
dec
sbb
mov
sbb
imul
lret
dec
fisttpll
jecxz
cmpsb
mov
jbe
xor
shrl
andl
addr16
mov
xor
stos
hlt
mov
push
ret
lods
insl
movsb
xor
aam
cmp
dec
pusha
call
and
xchg
push
push
inc
dec
out
jae
iret
sbb
or
test
out
out
imul
add
lds
cmc
cwtl
xchg
push
sub
inc
add
add
inc
out
mov
sub
cmp
or
pop
in
mov
sbb
pop
dec
fucomp
out
rorl
pusha
inc
arpl
std
icebp
xchg
mov
push
lahf
out
dec
jp
int
mov
loopne
sub
add
ljmp
pop
or
in
es
test
insl
jbe
or
or
mov
pusha
add
xchg
push
adc
pop
mov
in
or
xchg
les
adc
push
fcompl
shll
push
inc
mov
out
mov
mov
pop
cmp
test
mov
xchg
adc
pop
inc
pop
out
lret
testl
sbb
movsl
into
into
mov
into
mov
push
sub
sub
sti
lret
mov
push
cmpsl
sbb
pop
or
cmp
add
xor
xchg
mov
mov
add
add
jns
xor
jg
add
add
add
and
sbbl
inc
mov
sbb
inc
or
push
xor
imul
fxch
push
pop
shrb
pop
push
filds
in
mov
int
mov
sti
mov
js
pop
jl
push
not
jb
dec
sbb
cmp
aam
in
pop
cmc
jns
xlat
cmp
cmp
cmp
jno
mov
sub
mov
rol
jmp
xchg
xlat
mov
pop
sub
call
fwait
add
scas
in
mov
in
or
mov
push
sbb
push
or
gs
push
inc
adcl
pop
test
iret
xchg
add
add
pop
dec
cli
and
push
xor
pop
fdivrl
mov
aad
push
xchg
lret
mov
loopne
mov
divb
push
or
xchg
mov
xor
mov
and
pop
pop
sub
js
ret
jg
decl
rol
mov
inc
add
add
pop
sbb
sti
ljmp
aaa
ljmp
jge
movsb
test
fucomip
jno
aam
jnp
gs
insb
testb
pop
pop
movsb
aad
outsb
js
push
fstpl
push
imul
fnstsw
int3
out
loop
js
icebp
fidivrl
mov
jle
lretw
nop
push
adc
lcall
mov
insl
cmpsl
frstor
xor
sub
pop
cmp
mov
cli
cmp
sub
mov
inc
popf
dec
rcrl
xchg
mov
in
std
out
or
cmp
cwtl
imul
push
jne
gs
ja
inc
leave
dec
xor
pop
inc
in
add
les
mov
arpl
int
add
sar
lcall
loope
lret
jle
pop
insl
xorb
push
pop
pusha
pop
cmp
call
in
mov
inc
in
lods
push
xchg
xor
add
add
add
das
mov
out
aad
adc
sbb
add
je,pt
aas
in
adc
xchg
cmp
xlat
out
popa
sbb
adc
jo
xchg
lret
daa
mov
outsl
mov
xchg
repz
push
mov
fdivp
shl
cwtl
cmp
test
xchg
fstl
and
jne
jle
xor
popa
sub
pop
sbb
loope
push
cmpsl
std
inc
jge
jno
jnp
dec
mov
js
popa
fwait
adc
andb
icebp
sub
jne
cmp
fnsave
andb
xchg
jbe
repz
push
pushf
loopne
add
xchg
imul
add
mov
mov
cmp
cmc
repz
ficoms
cs
clc
jecxz
js
in
iret
pop
ja
xlat
movsl
jae
jp
mov
sbb
cmc
fs
xor
sub
dec
sub
and
push
jge
mov
and
daa
mov
dec
adc
add
add
hlt
gs
dec
adc
inc
sbb
dec
add
add
cld
pop
fimuls
dec
push
sub
mov
jge
sub
std
lds
inc
xor
fsubs
and
push
and
out
inc
popf
sbb
rolb
or
lock
mov
mov
or
js
cltd
ror
ss
xor
mov
je
in
aas
test
jbe
and
jb
jnp
leave
push
jmp
lea
pushf
dec
push
push
iret
es
inc
lea
xchg
fildll
xchg
mov
insb
mov
inc
sbb
fdivrp
sbb
xlat
fcmovu
inc
mov
adcl
xchg
xchg
icebp
int3
sti
dec
aad
icebp
inc
notb
adc
aad
xor
add
repnz
test
sbb
lret
xchg
jno
ret
and
lods
jg
jae
push
arpl
dec
mov
mov
pop
test
inc
cmp
add
add
aas
gs
pop
repnz
dec
add
add
sub
hlt
pushf
lock
or
sti
cmp
ret
stos
out
or
fcoml
sub
pop
dec
inc
fsubp
call
lahf
shrl
push
ret
mov
dec
xchg
jbe
jnp
xchg
xchg
scas
jge
jl
mov
outsb
push
push
mov
or
jecxz
sub
test
xor
divl
sbb
mov
or
pop
cli
xor
and
in
pop
and
mov
add
loop
cmc
cmp
pop
js
pop
cmp
cli
shlb
sahf
cmc
sub
int
mov
jmp
imul
push
sbb
push
outsl
add
and
xchg
dec
shrl
cmpsb
fists
movsl
adc
mov
out
push
xor
pushf
and
popa
inc
mov
mov
popa
xchg
sub
push
cld
xor
push
push
cmp
ljmp
pop
jp
jl
jne
dec
in
aaa
out
popf
push
es
add
add
out
fisttpll
lock
sbb
dec
add
add
or
outsl
stc
filds
sbb
scas
in
push
lods
fiaddl
test
mov
sbb
mov
pop
lds
lahf
rcrl
fmulp
push
and
sbb
mov
lret
ljmp
pop
mov
imull
mov
out
pushf
mov
mov
les
popa
fwait
mov
cwtl
call
mov
inc
mov
and
jl
jle
repz
xlat
mov
lahf
jns
lcall
sbb
jns
subl
adc
test
sbb
xchg
scas
push
mov
cmp
cwtl
cmp
adc
mov
mov
mov
mov
leave
int3
mov
pop
pop
fsin
mov
or
scas
icebp
jg
inc
mul
jbe
in
ds
aaa
pop
mov
ret
je
jle
pop
add
add
mov
ljmp
add
add
aam
sbb
jb
inc
jp
movsb
nop
pop
jo
adc
mov
mov
std
cli
stc
faddp
mov
lcall
and
rclb
ss
xchg
cwtl
sub
push
mov
test
ja
pop
insb
test
fisttpl
sti
push
in
les
sbb
inc
mov
into
call
jge
idiv
jmp
mov
mov
xor
imul
and
insl
and
or
dec
mov
lods
mov
sbb
call
xchg
sub
sbb
inc
pop
xor
jg
pop
pop
aas
sbbl
dec
ret
mov
cmp
pop
pop
lcall
add
jne
push
xchg
call
and
pop
and
outsb
and
cmc
in
stos
jg
outsl
xchg
jo
das
add
int
sbb
stc
mov
dec
mov
push
push
mov
add
jmp
out
aas
jo
sahf
jb
push
fidivl
add
add
lock
imul
jle
iret
lret
xchg
sbb
mov
jbe
pop
out
add
in
add
add
push
int
cmp
pop
rclb
xor
jg
cld
fstps
out
pop
xchg
shl
mov
call
ret
xchg
pop
lret
cli
js
aad
dec
adcl
inc
lock
jbe
data16
push
cmp
test
shl
bound
movsl
int3
sbb
addb
adc
stc
push
imul
rcll
inc
jecxz
mov
inc
inc
std
imul
xchg
iret
pop
fcoms
xlat
aad
xchg
pop
mov
pop
pop
ss
xlat
insl
out
shrl
dec
std
sbb
mov
xor
fsubrl
xchg
cltd
out
push
scas
jne
flds
in
andb
mov
inc
jge
push
dec
loopne
mov
pop
and
sub
out
cmp
add
add
imul
out
mov
mov
and
add
push
inc
test
xchg
std
mov
lret
outsb
loope
lcall
in
insb
popa
dec
lret
sbb
jns
xor
dec
and
inc
jmp
push
push
sahf
cli
xchg
xlat
and
sahf
test
push
jle
out
cli
mov
sbb
in
inc
push
xor
arpl
dec
les
outsl
or
outsl
shrb
js
and
pop
addr16
sub
inc
mov
in
push
xlat
shll
cltd
shrb
or
mov
push
mov
pop
enter
pop
cmc
add
jmp
jae
mov
clc
and
push
push
xchg
imul
mov
adc
cmpsl
enter
test
std
ja
cmpsl
mov
adcb
pushf
loopne
jno
and
xor
dec
jne
clc
sbb
jl
inc
mov
js
add
dec
stc
mov
ljmp
ds
add
add
sti
mov
mov
mov
mov
sub
inc
mov
std
or
and
mov
or
xor
push
jae
pop
das
mov
pop
dec
xor
ret
xor
sbb
xor
adc
inc
and
sbb
jnp
popa
sbb
push
jmp
mov
insl
xor
mov
jg
xchg
rcl
out
shrl
mov
fiadds
or
test
orl
sub
xchg
sbb
leave
sub
pop
js
sub
adc
loope
orl
repz
push
mov
jnp
jp
repz
mov
insb
inc
in
movsl
lcall
push
push
aaa
popf
xor
lock
xchg
jb
mov
mov
sub
xor
push
mov
sahf
sbb
xor
in
and
add
xchg
cmp
jle
jg
cld
lcall
ja
dec
add
add
lahf
in
scas
addl
mov
fldl2t
insl
push
adc
jge
ret
mov
mov
lcall
idivb
jne
int
xor
push
xchg
add
lds
push
das
xchg
push
push
jmp
sbb
cwtl
dec
call
jle
xchg
mov
arpl
pushf
inc
sbb
cmpsl
hlt
jo
mov
inc
pop
ss
nop
hlt
xchg
inc
test
adc
xchg
insb
cmpsb
arpl
fnstcw
pop
jmp
mov
vminsd
loopne
adc
jge
int
decl
inc
mov
sbb
es
xchg
lock
xchg
sub
mov
outsb
fmul
mov
or
mov
xor
push
dec
div
fs
pop
daa
pop
bound
andl
jp
data16
sbb
jmp
cmp
inc
and
and
je
sub
and
add
add
xchg
mov
pop
push
push
add
add
push
int3
test
inc
sbb
adc
pusha
and
arpl
fcom
xorl
push
or
ds
sbb
aas
or
push
inc
test
pop
jl
lds
cmp
jno
fcmovu
orb
loopne
push
sbb
pop
lret
ret
mov
mov
bnd
push
orb
xchg
add
pop
aad
pushf
sti
sub
ss
les
sbb
mov
xchg
sbb
aas
clc
xor
xor
cmp
xor
or
cmp
push
xchg
mov
jp
test
mov
mov
xor
fcoml
sahf
cmp
out
jge
pop
mov
sbbl
jl
out
movsb
cmp
pop
or
mov
imul
mov
sub
cmp
inc
insl
pop
push
mov
scas
add
cwtl
fdivrl
in
add
or
or
add
or
mov
and
adc
dec
push
add
add
mov
cmpsl
xchg
jle
out
add
fidivrl
jmp
pop
or
pop
lock
or
test
addr16
in
stos
pop
pop
lock
pop
or
adcl
mov
inc
cmpsl
xor
icebp
jmp
mov
in
orl
xchg
cmp
pop
lret
mov
movsl
mov
scas
into
cmpsl
or
mov
add
lret
cmpsb
out
imul
xor
pushf
dec
inc
fstps
pop
stos
iret
stos
adcl
mov
mulb
adc
sub
jle
lret
arpl
mov
sbb
xlat
jo
aad
fimuls
xor
mov
add
sbb
xor
lods
das
inc
aas
dec
fldt
mov
ss
sub
xchg
inc
adc
in
jg
mov
pop
xchg
out
jbe
loope
pop
mov
jp
cwtl
jns
stos
mov
add
fsubrl
mov
out
cmp
ret
or
mov
push
add
add
inc
mov
or
and
add
push
mov
out
movsb
jmp
mov
and
pop
je
lcall
call
outsb
sub
mov
rorl
lods
in
sti
inc
cli
aas
pop
ss
sti
pop
in
nop
aas
and
cmp
cmpsb
jo
stos
lods
sbb
jmp
subl
mov
lahf
push
lods
rorl
sub
fisubs
lret
dec
popa
rol
es
mov
inc
cwtl
int3
xchg
cltd
sbbb
pop
es
fsub
jecxz
nop
cli
lret
mov
xlat
add
mov
popf
div
outsl
sub
dec
lods
rorl
jl
jbe
cmp
rcll
orl
mov
pop
mov
mov
pop
das
sub
orb
sti
int3
push
dec
jae
ljmp
mov
cmp
mov
mov
and
lret
out
add
add
or
push
shll
out
pop
pop
pushf
push
add
sub
add
add
mov
out
bound
inc
ffree
mov
in
pop
adc
fs
mov
imul
dec
in
mov
mul
loopne
adc
xchg
sti
adc
cwtl
sbb
scas
xchg
int3
xchg
push
ret
notl
in
hlt
leave
push
andl
xchg
pop
pop
ja
mov
or
pusha
sub
addr16
or
sbb
and
pop
add
push
push
cwtl
push
sarb
fildll
cld
lods
insb
sarl
addr16
jge
mov
movb
call
call
pop
dec
test
cmp
mov
mov
lods
jl
cmpsb
call
cli
or
mov
lods
jecxz
ficoml
sbb
mov
add
xor
in
pop
adc
lock
inc
jge
aas
arpl
dec
pop
inc
jns
lds
pop
ljmp
add
add
out
lcall
hlt
mov
in
lahf
pop
push
add
add
jle
int
aam
je
bound
inc
push
sbb
imul
jmp
jl
clc
mov
fs
xchg
int
jo
outsl
aas
pop
into
add
jae
jp
cmpsl
and
xor
cmp
cmpsl
aaa
sbb
aaa
das
mov
in
inc
and
pop
mov
cmpb
lds
sub
lahf
rol
pop
jmp
out
popf
mov
or
rcrb
push
fnstenv
mov
addr16
sbb
int
jno
pop
ja
push
xor
jo
lcall
into
mov
or
js
jae
int
dec
ds
and
pop
mov
jg
add
sbb
xor
ror
cs
mov
jp
pop
lock
push
mov
adc
hlt
jmp
xchg
pop
jg
xchg
adc
inc
cmp
shll
bound
imul
xchg
cmp
add
add
mov
pop
ss
adc
mov
sbb
adc
add
rclb
stc
sbb
cltd
cmp
lret
cwtl
repnz
in
add
movsb
mov
shll
add
push
dec
mov
dec
clc
mov
int3
pop
mov
test
popa
repnz
cs
pushf
scas
sti
or
mov
inc
dec
daa
ja
cmp
out
cmpsl
xor
cld
in
cmpsl
sbb
sub
xor
pusha
repz
fcompl
xchg
jge
cli
ffreep
xchg
jecxz
cmp
sub
mov
test
pop
popf
pop
int
add
ss
sbb
std
nop
popw
xchg
xchg
int
adc
ret
add
xchg
sbb
stc
movb
lods
sub
push
push
mov
icebp
popa
or
pop
sub
movsl
fcomip
jecxz
orl
ja
lahf
pop
stos
or
push
xchg
add
add
fwait
cmp
stos
sarb
push
add
add
mov
popa
cmp
int
dec
xchg
and
out
cltd
addl
jns
test
mov
lahf
insb
lock
or
push
xchg
subl
fwait
int3
leave
movb
cmpsb
dec
xchg
outsb
lahf
hlt
adc
inc
out
js
cmpsl
in
xchg
add
test
push
and
enter
mov
and
push
out
pop
bound
stos
inc
pop
sbb
bound
filds
jle
lods
out
xor
test
add
cmpsb
jae
cmp
cmp
dec
and
dec
or
push
jne
jge
test
fsubrl
sahf
jmp
sub
mov
je
ss
xor
popf
cmpl
adc
cmpsl
push
pop
adc
jbe
cmp
pop
sbb
xchg
call
loope
fisttps
cmpsb
lret
out
stos
dec
xchg
mov
jl
adc
push
roll
imul
add
inc
push
clc
mov
and
hlt
xchg
xchg
fsubr
imul
add
xchg
sbbb
xchg
out
jecxz
mov
cmp
inc
jo
mov
daa
aam
inc
movsb
push
mov
addb
nop
inc
mov
cmpl
daa
jo
dec
cs
xor
mov
inc
stc
cmc
pop
out
cltd
fldenv
xor
subl
bound
push
dec
imul
mov
xchg
icebp
movups
mov
jb
clc
ljmp
fidivrs
scas
adc
popa
rcrl
inc
inc
xor
es
sbb
insb
or
iret
cmp
call
lcall
out
bnd
mov
ficompl
fs
or
push
insb
pop
dec
pop
sub
adc
das
adc
add
ja
jne
jmp
outsb
lahf
push
adc
fs
or
jnp
aam
push
lcall
sarl
mov
stos
fdiv
out
movsb
sub
addr16
scas
xchg
push
adc
out
mov
mov
insb
fbstp
add
add
bound
mov
jmp
adc
jns
cmp
xchg
scas
loop
cmp
mov
mov
and
jl
std
loopne
push
stos
popa
mov
fsubrs
rcrb
pop
mov
push
mov
jg
insl
mov
jl
jmp
in
mov
mov
stos
pushf
gs
mov
push
sub
ljmp
ds
and
inc
mov
repnz
or
jp
sub
enter
or
jp
sbb
insb
cmpsl
cmp
scas
popl
adc
cltd
pop
xor
mov
xchg
cmp
fcompl
push
arpl
sub
mov
mov
push
mov
rorb
in
xor
xchg
lods
mov
ss
icebp
in
inc
mov
sbb
dec
enter
outsl
lds
adc
push
jp
mov
add
add
mov
lds
aad
insl
push
out
xor
pop
add
add
shll
daa
adc
test
test
cmp
fisubl
mov
and
pop
cli
cwtl
mov
subb
cmpsb
aaa
inc
cs
lahf
iret
mov
test
jo
push
nop/reserved
int
dec
inc
mov
or
pushf
add
lock
jb
mov
xor
xchg
inc
popl
ljmp
or
icebp
inc
addb
dec
fs
push
scas
or
test
push
mov
imul
mov
jns
adc
add
adc
mov
pop
ficompl
add
ss
mov
sbb
mov
sub
push
dec
jo
sbb
out
or
jae
outsb
rol
dec
mov
mov
daa
sbb
dec
ds
fs
out
jecxz
xlat
mov
dec
cltd
les
jo
push
stos
mov
add
add
mov
pusha
add
insb
in
pop
add
add
xchg
mov
ror
adc
adc
cmc
popa
mov
mov
push
outsl
xchg
pop
pop
sbb
fmul
jo
lcall
cmp
xchg
das
sbbb
and
sub
push
arpl
leave
jp
xchg
repz
adc
cwtl
clc
adc
iret
int
in
loop
or
in
dec
test
mov
fs
and
xchg
jmp
cmp
arpl
push
adc
fcoml
xlat
popa
sbb
or
sub
sahf
mov
rclb
push
xor
notl
test
loop
xlat
or
add
mov
out
add
push
sti
imul
lock
push
dec
dec
jmp
in
scas
inc
fldl
cmp
and
sbb
aaa
cmpsb
lods
cmpb
cltd
subb
and
pushf
in
in
in
lea
fimull
add
add
movsb
jae
jnp
mov
ja
mov
loope
lret
add
add
pop
daa
movsb
cmp
adcb
ja
xor
fwait
adc
inc
and
scas
rolb
push
sbb
mov
test
mov
movsb
pushf
gs
add
mov
lds
cwtl
cmp
ds
sub
je
push
push
adc
xor
xchg
jmp
mov
mov
inc
in
jno
push
jb
into
int
mov
ljmp
mov
icebp
xor
popa
stc
or
jbe
mov
jne
adc
mov
lds
lds
jle
sahf
jg
jo
pop
pop
inc
mulb
add
scas
dec
sti
repz
xor
sahf
addl
popa
mov
jne
xchg
mov
add
sub
filds
rcll
rorb
xchg
in
inc
in
dec
mov
ret
push
sub
pop
jno
mov
jecxz
inc
adc
add
out
sbb
adc
mov
add
mov
outsb
lahf
add
add
xor
xlat
out
cld
in
out
mov
add
movsl
fcoml
xor
in
ret
lods
andb
jge
loope
jl
out
cmp
icebp
in
and
push
fcmovnu
iret
cmp
jbe
xor
rcl
pushf
lods
js
and
iret
add
sub
lret
mov
push
sub
xchg
icebp
sbb
aam
inc
sbb
adc
mov
jl
je
xlat
shll
jns
cmc
movsb
pop
cwtl
repz
scas
lahf
ja
iret
scas
or
pop
mov
pushf
inc
jo
xchg
inc
adc
mov
outsb
iret
xchg
ret
adc
mov
add
mov
popf
int
ss
cli
xlat
imul
push
push
cmp
notl
mov
lahf
push
ljmp
mov
xchg
nop
xchg
inc
mov
cwtl
mov
sub
hlt
fcomps
loop
and
mov
sti
xor
sbb
mov
arpl
jmp
ret
fadds
add
mov
mov
in
std
rorb
add
add
lahf
xor
sbb
mov
std
ja
cmp
jbe
pop
das
movsl
mov
sti
es
bound
scas
inc
mov
dec
adc
add
aaa
xchg
enter
mov
sub
jge
dec
sub
gs
jne
fdivr
cmp
jb
sub
int
cmp
clc
insb
stc
dec
loop
out
shlb
mov
mov
jo
inc
mov
xchg
sbbb
nop
repz
lcall
inc
inc
iret
add
jle
jnp
push
in
repz
daa
icebp
ret
rclb
mov
add
mov
in
pop
cwtl
lods
dec
mov
test
cmp
subl
sub
fildl
jb
add
xor
xchg
mov
ret
aad
cld
and
sbb
std
fimuls
jne
inc
push
lods
test
rol
stos
cmp
into
and
or
or
add
loopne
add
add
push
into
push
push
inc
lahf
mov
mov
add
push
adc
mov
stos
xor
sbb
fsubrl
and
jle
out
leave
mov
ffreep
dec
outsb
mov
fsubl
push
dec
loop
leave
sub
mov
push
sub
lret
imul
mov
fwait
xchg
xor
stos
adc
mov
dec
addr16
jbe
mov
fcmovbe
je
sub
cmpsl
into
les
les
inc
or
mov
push
mov
lret
fildll
movsb
jno
aam
pusha
setp
ret
sub
or
scas
inc
mov
push
mov
cli
repnz
mov
fcmovu
mov
lds
xcrypt-ecb
cmpsl
or
sbb
sub
popa
add
popa
lahf
cmpsb
mov
lret
loop
rorl
cmpsl
test
sti
lret
mov
hlt
or
scas
dec
dec
repz
scas
jbe
movsl
dec
dec
xor
mov
mov
push
push
mov
cli
dec
sub
insb
and
mov
and
mov
jg
or
xchg
pop
add
add
lret
push
mov
aam
daa
xor
enter
fstl
jnp
popf
cmpl
adc
sub
and
xor
sbb
movsl
outsl
dec
or
cmc
mov
pop
mov
sub
push
insb
sarl
movsl
mov
lds
sub
xlat
adc
cmp
adc
aaa
sbb
leave
xlat
sbb
mov
and
xor
es
xorl
and
inc
or
scas
adc
out
xchg
cmp
cmp
mov
hlt
popa
in
popf
lret
jbe
jp
inc
mov
adc
pop
andb
sub
mov
inc
movsb
shlb
loopne
and
adc
xor
fwait
adcb
xor
inc
xchg
mov
pop
insl
pop
and
je
lahf
pop
xlat
loopne
or
movsb
xor
sbb
add
fcoms
ret
fimull
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
mov
daa
cwtl
pusha
add
add
iret
jmp
das
mov
leave
lods
pop
jnp
stc
mov
pop
ja
mov
pop
push
or
mov
xor
int3
movsb
in
insl
and
pop
gs
cmp
lcall
push
clc
fimull
add
mov
push
fsub
jmp
adc
filds
lock
add
mov
icebp
and
in
insl
pusha
hlt
enter
pop
hlt
out
cwtl
cmpb
faddl
sbb
jle
ljmp
in
inc
mov
lds
icebp
mov
leave
lods
mov
push
adc
loopne
lahf
enter
and
out
or
sbb
sbb
js
dec
inc
inc
jne
ret
int3
and
loop
xor
in
add
in
xchg
cmpsb
add
ss
out
fisubl
cwtl
or
gs
out
xchg
cmp
stos
jl
mov
ret
call
movsl
gs
fucomi
popa
adc
mov
add
add
idiv
jg
sub
cmp
popf
popa
add
add
clc
adc
lods
xchg
inc
add
ja
mov
mov
cld
stos
in
sub
or
push
sar
popf
or
gs
leave
pop
into
data16
xor
cmpsl
sti
mov
cwtl
not
pop
mov
popf
jmp
add
insb
jmp
fwait
cltd
out
sbb
lcall
sbb
std
lock
dec
adc
iret
in
pop
sbb
imul
lods
mov
pop
mov
lahf
or
xchg
out
mov
hlt
das
pop
test
ret
imul
arpl
mov
sbb
cmpsb
popf
push
scas
jle
and
mov
xor
xchg
hlt
xor
fcos
mov
adc
mov
fmulp
inc
and
cmp
insb
xor
push
cmp
sahf
dec
mov
xchg
cmpl
movsl
mov
sub
in
lcall
sub
popa
xor
or
mov
add
add
pop
mov
fstps
mov
mov
add
add
into
dec
xor
xor
pop
sbb
fs
aam
mov
jne
sti
movlps
fldl
pop
rorb
in
in
inc
es
adc
mov
sub
mov
xor
push
push
mov
ljmp
data16
fistl
pop
or
or
push
movsb
mov
pushf
cli
das
cmc
add
nop
sbbb
enter
ja
add
or
test
pop
in
jp
movsl
std
add
add
pushf
in
mov
inc
and
movsl
push
and
or
inc
sub
sub
pop
call
adc
adc
xchg
mov
out
repz
fnstsw
lahf
int
stos
scas
repnz
scas
pushl
inc
scas
lahf
popf
xchg
mov
popa
loop
mov
jnp
sbb
cmpsb
jg
adc
jecxz
inc
aaa
mov
xchg
aam
rcll
fnsave
add
add
repnz
movsb
jle
arpl
jmp
add
outsb
or
gs
push
cmp
enter
shrl
lods
pop
push
or
lcall
pop
cmp
out
outsb
or
mov
scas
stc
jnp
mov
mov
adc
xchg
aaa
test
sub
jmp
sahf
push
je
orl
arpl
into
rcrl
adc
out
outsb
or
cmpsb
mov
adc
pop
fidivl
pop
mov
mov
push
adc
jl
dec
test
cmpsb
fs
xchg
push
mov
xchg
dec
or
sub
jmp
xchg
inc
repnz
test
pusha
lods
and
cltd
ret
mov
push
ret
js
lcall
pusha
xor
and
cmp
lahf
nop
leave
test
test
lret
pop
mov
inc
cmp
add
stos
sub
stos
out
jmp
sub
push
push
mov
add
sbbb
mov
push
cwtl
dec
pop
addr16
or
xor
aaa
into
pop
mov
insb
nop
nopl
xorl
inc
pop
dec
je
add
pop
mov
icebp
cltd
mov
mov
add
push
leave
lock
push
xor
adc
sbbb
sti
pop
push
or
out
fimull
mul
mov
outsl
xor
push
ljmp
ja
lcall
mov
inc
test
in
or
cmc
fidivrl
mov
pop
incl
pusha
div
decb
insb
sbb
pop
mov
int
test
cmpsb
arpl
scas
xchg
push
xchg
adc
xchg
cmpsl
mov
xchg
pop
inc
push
mov
pop
ret
pop
mov
imul
mov
xor
lcall
push
pusha
mov
add
imul
xchg
inc
sub
sahf
fistps
push
add
mov
ffreep
arpl
xor
add
add
mov
fnstenv
and
add
add
xchg
fnstsw
pcmpgtb
sahf
imul
xchg
mov
and
imul
dec
test
inc
dec
adc
add
inc
add
add
sbb
rcl
mul
fdivl
es
xchg
pusha
aas
jbe
push
push
icebp
pushf
cmc
sub
or
mov
call
or
push
jns
popf
or
test
mov
add
outsl
cmp
add
mov
or
fdivrp
cmp
loope
imul
pop
fldt
xlat
mov
and
jg
push
add
incl
leave
mov
add
adc
adc
xchg
loopne
inc
and
aad
mov
and
jns
mov
mov
jecxz
sub
out
call
test
stos
inc
cmpsb
xor
or
arpl
add
test
xchg
fcmovne
mov
lds
sbb
out
jb
ds
test
add
cld
je
jbe
jns
sbb
add
add
add
pushf
clc
push
xor
jno
add
and
sub
xorl
fwait
ds
sti
jmp
lock
sbbl
mov
shlb
or
out
ret
adc
stos
sbb
or
mov
in
loope
inc
iret
les
sahf
addr16
xor
push
int3
pusha
adc
xchg
bound
jecxz
ljmp
pop
addb
push
pslld
ret
mov
cmp
insb
mov
cmpsl
add
imul
inc
movsb
jbe
mov
fldcw
dec
fimuls
mov
xchg
inc
cmp
test
cltd
xchg
int3
les
stos
je
jo
into
out
pop
xchg
pop
push
inc
add
adc
cmc
ja
nop
cmpsl
stos
rclb
popl
jbe
jo
dec
out
das
test
inc
mov
mov
popa
mov
add
xchg
dec
mov
jae
mull
cwtl
jne
pop
inc
xor
add
add
cltd
jmp
fildl
or
xchg
push
sarb
add
shlb
js
movaps
mov
orl
jne
jg
stos
xlat
push
test
hlt
dec
pop
rolb
xchg
sub
xor
repz
mov
xor
sub
xchg
dec
ret
aam
in
test
push
inc
cld
cltd
and
mov
rcll
iret
mov
pop
mov
inc
clc
add
xchg
cmc
adc
or
mov
insl
adc
jae
xchg
push
dec
cld
add
push
mov
into
mov
mov
xlat
pop
cli
ja
xor
inc
push
xor
lock
int3
or
lods
fldl
sub
adc
mov
fwait
inc
adc
incl
mov
xor
push
and
adc
and
mov
aam
fdivrl
jmp
xchg
or
xor
mov
dec
cld
mov
in
xlat
aad
insl
test
add
cmp
add
add
push
jg
dec
xchg
dec
scas
stc
shrb
add
cmp
jns
les
lea
test
cmc
in
fldcw
fildl
pop
xchg
sbb
stos
xchg
xor
mov
jmp
lea
mov
jno
inc
rcrb
add
pop
mov
repz
jno
lahf
dec
arpl
mov
and
test
xlat
pusha
or
ret
xchg
out
aad
mov
ja
mov
cmp
push
cmp
test
mov
mov
aaa
stos
pushf
jmp
das
jo
xor
ja
lods
push
adc
add
or
fxch
or
mov
cltd
and
xchg
jbe
inc
inc
fildll
mov
fists
xchg
sub
out
cmc
jmpw
pop
icebp
ret
sub
cmp
mov
loopne
or
fdivrs
adc
pop
adc
jg
mov
add
iret
mov
fucomip
push
insb
xor
inc
imul
add
lock
addr16
dec
imul
repnz
fs
sbb
jecxz
mov
icebp
pop
pop
add
stos
inc
iret
mov
xor
btr
jno
out
pop
pop
jns
push
shll
stos
pcmpgtw
mov
sbb
sbb
sub
icebp
clc
cld
imul
ffreep
inc
jg
fisubrs
cli
cs
dec
idiv
popa
roll
jns
inc
imull
xchg
xor
rol
cmp
or
sbb
lods
cmc
adc
rorl
icebp
add
xor
sbb
jbe
xchg
aam
mov
adc
or
nop
and
mov
mov
repz
mov
loop
mov
lcall
xchg
inc
mov
sbb
fnstenv
das
mov
je
and
stos
add
adc
sub
add
imul
dec
out
iret
jmp
aas
in
push
data16
push
xchg
lret
add
or
xchg
push
xchg
push
data16
xlat
out
mov
icebp
in
lahf
or
ljmp
aaa
mov
sbbl
roll
xchg
push
adc
pop
test
cmpsl
inc
mov
push
mov
push
dec
in
mov
ss
mov
xchg
dec
add
dec
add
cmp
cmc
inc
imul
test
out
hlt
mov
cmp
scas
or
or
das
fcoml
test
adc
fiaddl
arpl
pushl
push
ja
inc
jge
inc
fadds
jp
pop
loop
adc
xbegin
jg
push
fdivrs
outsb
addr16
arpl
add
shlb
fucom
cmova
je
push
mov
inc
mov
sub
mov
fdivl
push
mov
and
adc
mov
rolb
andb
xchg
mov
sbb
rcll
add
std
cmpsb
pop
dec
sub
sub
movsb
inc
iret
imul
add
xchg
pop
and
scas
mov
movb
sub
mov
or
div
mov
mov
mov
push
dec
or
jbe
or
ss
adc
sbb
sahf
add
ljmp
incl
push
sbb
lods
daa
adc
clc
jnp
rolb
mov
jl
lahf
pop
movsb
jne
das
call
adc
mov
and
jmp
mov
addr16
sti
outsb
pop
movl
mov
pop
dec
cmp
outsb
lods
push
cmpsb
scas
aad
mov
pop
imul
jg
jg
xchg
bound
jns
inc
sub
mov
xchg
xor
xchg
sbb
cmp
mov
int
clc
dec
jbe
jno
hlt
jb
gs
out
call
and
jp
ret
sbb
push
xchg
jle
or
js
mov
add
add
neg
std
sub
dec
sbb
add
add
inc
and
out
push
sub
xchg
cmp
mov
mov
mov
fcmovne
ljmp
mov
out
pop
inc
addb
jne
pop
cmp
aam
inc
add
rorl
adc
dec
push
inc
jle
xchg
daa
sahf
lock
loopne
mov
cmpsb
sbb
pop
and
lods
cmp
inc
into
fs
adc
neg
incb
xchg
aas
dec
call
popl
aam
jp
mov
dec
cmc
dec
jne
imul
in
jb
test
test
into
popf
faddl
stos
mov
sbb
mov
add
cmp
lds
mov
mov
movsb
mov
inc
add
push
mov
enter
and
aam
sar
lcall
inc
mov
jbe
push
pop
mov
repz
cmpsl
sub
lret
cmp
add
add
cs
xor
cltd
out
test
fldcw
add
jecxz
sub
popf
cs
enter
xchg
fwait
mov
repnz
sbb
xlat
jo
push
test
sbb
leave
cs
leave
mov
inc
mov
jl
adc
popa
push
jge
add
clc
cmc
outsb
jmp
add
out
sub
test
mov
notb
repz
pusha
test
in
lret
mov
mov
shlb
call
testl
cwtl
ss
dec
out
inc
sahf
pop
cmp
sahf
sti
lret
mov
daa
int3
jl
lea
cs
div
stos
aaa
das
cmp
std
ret
icebp
stc
xor
lcall
push
mov
repz
lcall
xor
push
scas
inc
xchg
and
movsb
pop
adc
sbb
ret
hlt
es
arpl
into
fwait
pushf
insb
and
outsl
or
jmp
sub
and
popf
inc
out
sbb
sahf
and
add
ja
out
sbb
call
fisubrs
add
in
and
pop
mov
mov
adc
pop
push
inc
xchg
adc
adc
push
mov
call
ljmp
das
enter
mov
inc
push
mov
pop
loope
mov
lods
lds
cmp
and
and
and
mov
jecxz
out
adc
and
scas
imul
pop
jecxz
mov
cmpsl
sbb
mov
fld
or
or
test
push
rcrb
cs
mov
sbb
pop
divl
idivb
std
aam
ret
mov
mov
out
rcrb
cmpsl
outsl
or
push
dec
cmc
popa
leave
scas
ret
sub
sarl
or
in
inc
ret
jnp
pop
cmpsb
pop
stos
xor
test
pop
int3
int3
mov
push
mov
movsb
adc
lods
cwtl
push
xchg
mov
movsl
into
pusha
jne
add
add
sub
ja
mov
cwtl
push
ja
outsl
add
add
ret
jp
call
cmpsb
sti
cmp
daa
cli
out
jbe
mov
int
jmp
mov
xadd
cs
pushf
dec
xchg
lret
pop
test
icebp
mov
pop
sar
sbb
call
popa
fstps
jbe
icebp
je
sahf
push
popa
out
ret
mov
and
cltd
outsb
push
fsubl
mov
shll
sub
dec
mov
mov
mov
push
fcomi
jmp
cltd
dec
adc
cmp
or
pop
notb
sub
sbb
popa
ret
test
jbe
test
sbb
adc
xchg
dec
or
mov
xor
push
inc
popf
add
pop
mov
sbb
mov
in
data16
xor
sub
mov
push
rdtsc
dec
jecxz
push
dec
int
xchg
inc
outsl
pushf
out
std
sub
adc
xchg
mov
mov
xchg
push
mov
rorb
mov
xchg
add
add
cmp
jnp
outsl
cmpsb
loopne
pop
inc
sbb
jo
add
xchg
lret
dec
addr16
jmp
dec
fwait
repz
fidivrl
daa
popf
sub
push
xlat
daa
push
mov
pop
and
mov
sbb
sub
jmp
or
dec
enter
in
shll
test
mov
sub
or
cmp
inc
adc
rolb
stos
or
push
add
or
es
and
sub
mov
cmc
mov
mov
mov
test
xchg
dec
rolb
lret
jmp
pop
out
push
daa
cmp
bound
ja
stos
iret
add
or
pop
pop
iret
xor
scas
repnz
lahf
test
xorb
int
add
dec
pop
fsub
mov
fcomp
or
lret
int
mov
leave
mov
push
dec
adc
push
pop
mov
in
imul
xor
cmp
aad
in
lret
inc
add
add
cli
xchg
jle
push
je
ror
lea
add
and
xor
fcompl
fcomip
cmp
and
mov
xchg
cmc
mov
cmp
cmp
mov
ror
daa
cld
imul
push
cmpsb
dec
loope
xchg
xchg
idivb
push
sbb
mov
ja
les
aaa
icebp
mov
pusha
nop
cld
sbb
mov
jecxz
or
stc
fucom
stc
movsl
popa
dec
shll
lods
xor
lods
xor
lea
xor
movsl
scas
cmp
cld
outsl
mov
push
or
int3
mov
mov
xor
cwtl
lods
push
sbb
inc
mov
jecxz
movsb
jmp
inc
sbb
nop
jp
mov
pop
xor
sub
mov
pop
pop
data16
add
cmpl
jle
and
push
mov
aaa
out
addr16
add
sete
and
dec
jne
push
sahf
dec
loope
rcl
jo
test
test
sub
lods
add
add
fwait
jnp
aad
sbb
and
jb
add
stc
lahf
in
scas
jno
repz
pop
in
add
cld
lret
pop
in
xchg
pop
adcl
sbb
xchg
lock
andl
lret
mov
jmp
fidivl
xor
cld
xor
movsl
mov
sbb
adc
fidivrl
scas
push
adc
xor
lret
mov
xchg
and
jb
pop
or
and
dec
sti
movsl
mov
int
rclb
adc
mov
shr
push
cli
lahf
dec
imul
inc
jnp
mov
out
fstps
xchg
imul
cli
xor
mov
xlat
push
fwait
ret
xchg
faddp
dec
xor
daa
inc
out
out
inc
and
bound
dec
test
mov
fwait
xchg
outsb
pop
fwait
sti
sbb
nop
fsubrs
gs
lahf
dec
addr16
inc
adc
adc
js
test
add
mov
std
mov
sub
popl
divl
add
std
lods
dec
sbb
mov
and
jecxz
imul
pop
xchg
mov
cmp
xchg
imul
pop
jl
push
cmp
xor
inc
leave
orb
or
cltd
sbb
cmc
inc
in
xchg
imull
mov
aad
mov
in
pop
xor
mov
add
aam
jmp
or
xchg
push
out
sbb
mov
pusha
sbb
fcomp
and
loope
jp
sar
or
push
outsl
ljmp
sahf
xchg
and
outsb
fstps
jl
popa
add
shl
aam
mov
xlat
adc
scas
add
fwait
and
jne
sub
mov
call
in
test
out
shlb
repz
cli
xor
push
sub
xchg
mov
xlat
pop
popa
mov
sbb
sub
cmpsl
mov
jg
out
sbb
inc
call
ret
inc
add
add
fstl
lret
cli
sub
je
add
pop
jno
sub
sbb
fcmovb
dec
pop
test
mov
xchg
push
and
push
adc
repnz
jl
jl
xor
mov
loop
dec
adc
push
fcompl
lods
test
adc
add
divl
rcr
fdivrs
jle
out
imul
movzbl
xchg
mov
ljmp
pop
add
movsb
imul
mov
rorl
and
xchg
cld
pop
repz
add
loope
fsts
xor
shll
cli
cwtl
es
cmpsb
stc
sbb
call
jle
ljmp
pop
scas
in
jb
xor
sbb
jl
push
xchg
push
cwtl
cli
fnclex
and
adc
xor
popl
dec
in
stos
jne
pop
lods
add
sti
and
xlat
jge
adc
test
fs
out
mov
mov
cmc
push
cmp
add
add
bound
sub
sbb
jbe
add
test
test
xchg
lds
fs
mov
roll
clc
int3
jb
fistpl
jmp
fbld
pop
jnp
repnz
and
xchg
sub
adc
xlat
les
push
out
out
pushf
push
xor
into
xor
fmuls
fiadds
and
int3
movsb
test
int
js
mov
ret
cmp
or
xchg
mov
inc
inc
aam
mov
jb
sbb
loope
mov
scas
in
cmp
insb
mov
icebp
bound
loopne
mov
mov
ret
push
sti
xor
push
loop
fistl
dec
pop
sbb
jns
outsl
loopne
loope
mov
xchg
cmp
test
nop
aad
push
nop
sub
pop
or
imul
lds
xor
les
outsb
push
push
xor
std
out
jle
mov
mov
rclb
jge
out
aas
addl
xchg
shll
add
add
divl
in
sub
push
ja
add
and
cli
aad
cltd
xchg
jno
xchg
shl
out
xor
outsb
ljmp
mov
popa
outsb
sahf
sbb
div
js
stos
fs
adc
mov
xor
cs
in
test
cmp
or
inc
jecxz
add
or
push
pop
fbstp
fildll
mul
and
mov
sbb
push
jl
mov
movlps
mov
xor
mov
add
loopne
rorb
movl
rorl
jo
push
clc
js
xchg
clc
xor
shlb
rcl
insb
jge
and
loopne
stos
cli
lods
adc
out
or
pop
imul
out
movsl
jns
xchg
inc
mov
sub
cwtl
sub
roll
prefetch
sub
scas
cs
in
cmpsl
outsl
cmc
popf
dec
movsl
mov
cmp
pop
mov
fstpl
insb
lods
dec
adc
outsb
sbb
mov
mov
mov
lret
enter
add
fisubs
mov
mov
mov
add
aaa
inc
fsts
out
stc
mov
xchg
mov
pusha
pop
xchg
sbb
pop
daa
out
mov
sarl
push
cmpsb
xor
ret
mov
cmp
cmpsb
dec
je
fwait
inc
les
adc
mov
inc
mov
adc
pop
andb
stc
call
cmpsl
push
clc
inc
imul
movsb
jne
clc
sub
jmp
fists
or
xchg
ficompl
xchg
jge
and
hlt
out
lods
fisttpll
add
clc
nop
pop
xchg
out
movsb
pop
dec
cltd
rorl
sbb
push
or
xchg
xchg
sahf
dec
outsl
cmc
xchg
xorl
mov
das
loop
xorl
pop
fidivrl
or
mov
mov
add
jecxz
lcall
pop
mov
fs
out
test
aas
add
add
mov
outsl
jne
ljmp
mov
add
add
mov
insb
loopne
jbe
cmp
sbb
out
cmp
aaa
iret
mov
and
or
pop
aad
lods
lods
enter
arpl
fdivs
mov
push
mov
or
test
cmc
fwait
stc
test
aaa
and
ja
icebp
lods
mov
xlat
jmp
dec
test
lcall
add
fistps
xor
or
fstl
mov
cs
clc
mov
or
mov
lods
je
in
stos
aaa
mov
cli
mov
jge
cmpsb
inc
insl
mov
push
stos
push
add
mov
pop
ljmp
xchg
lret
dec
fnsave
adc
dec
scas
cmp
pop
lea
or
test
inc
ffreep
push
jg
push
mov
cmp
hlt
mov
imul
or
pop
sti
cld
or
pop
add
add
testl
ljmp
add
xchg
cwtl
lahf
push
jle
scas
loope
cwtl
or
mov
inc
dec
sbb
bound
lds
aam
das
xchg
xchg
mov
outsl
mov
test
inc
mov
or
insb
pop
test
sub
stos
xchg
clc
pop
jno
mov
jno
cli
add
imul
lds
jne
jge
cld
imul
cmp
shl
nop
inc
movsl
cmova
mov
xchg
jmp
mov
push
fwait
xor
ret
int
inc
adc
jo
mov
out
dec
cld
add
inc
lret
rolb
inc
lock
sbb
fsubrl
test
mov
repz
mov
test
lods
hlt
pop
dec
loope
pop
xchg
push
xchg
lods
in
scas
fdivl
ret
das
in
pmaddwd
int3
mov
cmp
xchg
push
cmp
xor
jb
lret
lds
int3
or
add
jo
ja
std
stos
sbb
ljmp
add
add
mov
mull
cmc
repnz
rcrb
lds
xchg
mov
mov
imul
scas
roll
and
imul
aaa
xchg
mov
mov
or
mov
mov
xor
and
jbe
cltd
imul
int
sub
push
lods
lock
scas
out
addr16
xchg
fcmovbe
jns
iret
scas
jno
sbbl
aad
push
sbb
xor
mov
xor
repz
jo
dec
pop
outsl
cmpsb
mov
sub
mov
mov
mov
adc
cltd
fcompl
loopne
out
fildl
push
push
mov
add
mov
pop
lods
adc
jmp
mov
or
cli
and
js
aam
cmp
fcoml
test
repnz
jno
jmp
inc
cmp
xchg
xchg
xor
movsl
aas
mov
mov
jg
xlat
cmp
mul
jmp
pop
sub
add
mov
cmpsb
push
sbb
inc
jmp
add
fdivrs
push
xchg
scas
clc
shl
pop
into
repz
idivb
mov
sub
ds
shrb
sbb
and
ret
ret
adc
xor
aam
movsb
inc
rcll
and
pop
jns
push
mov
cltd
and
jle
jnp
mov
inc
lock
int
or
aas
test
sbb
inc
lods
add
or
mov
insl
pop
push
fadd
lds
or
fwait
ja
mov
fstpl
xchg
sarb
icebp
lcall
pop
dec
dec
insl
jns
add
bound
lahf
sub
pop
mov
inc
xor
jl
sarl
sub
int
shr
mov
clc
cmp
xor
jl
xor
jmp
aam
loopne
test
cmp
and
dec
jl
enter
cmp
inc
add
fcomps
jl
add
adc
add
sbb
sbb
xchg
sahf
add
add
cmp
cli
mov
sbb
add
add
fisubl
movsb
xlat
mov
dec
sbb
jecxz
jns
lock
dec
lcall
subb
push
cmp
shrb
adcb
fs
ja
jle
xor
inc
mov
sub
mov
sahf
int3
repz
int
iret
and
cmpsl
cmp
mov
cmp
and
aam
mov
fiaddl
or
pop
and
call
and
and
cld
push
xchg
xchg
sub
bound
push
outsb
mov
add
das
push
or
nop
cwtl
push
mov
inc
mov
jbe
in
inc
cmp
mov
test
and
in
or
incl
clc
iret
jb
mov
pop
sarb
stc
sub
rcll
jnp
dec
repnz
imull
test
test
shlb
mov
add
std
stos
and
negb
dec
movsl
sub
mov
add
std
test
lcall
imul
add
scas
push
sbb
jne
pushf
mov
fwait
dec
fdivs
adc
test
cmpsl
clc
into
or
sub
jmp
jl
lret
into
cli
ret
cmp
dec
mov
mov
pop
sbb
je
jno
mov
or
out
std
jnp
lods
and
sbb
add
adc
je
lods
in
xor
cmpsl
int3
loope
pushf
push
push
loope
insl
ficompl
and
pop
leave
aas
test
repz
add
ficompl
dec
orb
movsl
cmp
loop
adc
pop
cs
cld
fidivrs
add
jecxz
or
pop
out
dec
sti
jecxz
push
mov
lahf
xorb
jnp
les
cmpsb
iret
xor
push
decb
test
dec
sahf
mov
inc
insl
aam
in
lret
jp
sub
and
pop
mov
mov
ja
ficoml
or
push
ficoms
or
arpl
iret
jge
add
testb
daa
mov
jg,pn
add
pusha
or
popl
cwtl
or
sub
outsl
pop
jne
or
inc
xor
mov
jno
ds
loop
fsubrl
imull
and
mov
jg
sub
inc
rorl
xchg
lods
imul
js
pop
imul
mov
and
xchg
aad
sbb
repnz
into
arpl
pop
ss
xlat
mulb
pop
into
adc
cmpsb
xlat
in
lock
cmp
jg
pop
pop
out
xchg
cld
cltd
mov
and
mov
out
inc
fcomps
fistpll
mov
ljmp
mov
int3
push
test
mov
sbb
adc
sub
gs
jo,pt
mov
out
pop
mov
into
inc
sbb
insl
mov
rolb
out
pop
sub
dec
rolb
test
add
add
lcall
inc
shr
xor
add
and
iret
sahf
fcomps
lods
adc
add
sub
fcmovbe
aaa
xchg
shlb
enter
movl
fnstenv
xor
in
push
add
lock
push
sbb
lahf
add
shrb
mov
mov
and
fmuls
cltd
movsl
mov
jmp
cwtl
jbe
sbb
add
shrb
inc
test
jns
mov
pop
or
daa
fcoms
sbb
pushf
out
aam
test
mov
int3
popa
mov
stc
notl
pop
ret
roll
aas
cwtl
icebp
cmp
stos
mov
mov
pop
push
push
dec
jo
shld
hlt
pop
xchg
xchg
fldcw
fisubrl
test
or
adcl
repz
jmp
mov
push
ficompl
xchg
push
loope
leave
bound
daa
mov
pop
fwait
inc
cld
outsl
inc
out
cmpsl
add
add
mov
idiv
jne
iret
outsb
cmp
add
pop
and
iret
pop
xlat
repz
xor
test
adc
cmp
sub
leave
sub
in
adc
mov
test
push
outsb
rolb
dec
add
sub
inc
push
or
xchg
adc
out
enter
test
inc
lcall
xor
int3
pop
popf
jp
push
inc
cmp
cmp
or
pop
mov
in
out
push
pop
lret
add
sub
inc
push
mov
icebp
arpl
into
dec
sub
data16
loopne
jle
and
imul
aad
out
insb
and
sbb
into
ret
mov
push
ds
fwait
nop
xchg
jp
scas
sub
sub
push
adc
stos
adc
or
mov
push
pavgw
sbb
stos
push
xor
popf
or
mov
cmp
jmp
jmp
mov
inc
aad
dec
fnstsw
outsb
nop
sbbl
add
xchg
pushl
sub
call
addb
add
lahf
lret
lock
jb
or
lods
ss
fists
or
in
push
out
les
ficoml
add
push
movsb
mov
add
xchg
add
fadds
ss
shlb
pop
cmp
stos
pop
insb
stc
nop
movsl
lods
inc
cmpsb
sbb
faddl
sarb
insb
jecxz
lcall
xor
xor
lds
out
sahf
cmovbe
loope
iret
fcomip
lret
cmp
mov
test
inc
aam
pop
movsl
fcomip
xchg
ja
xchg
lea
test
shlb
mov
xorb
lock
pop
sbb
jle
add
dec
inc
push
imul
out
and
dec
pop
xlat
pop
daa
cmpl
adc
dec
add
mov
pop
mov
aad
arpl
fisubl
mov
inc
int
insl
xchg
mov
nop
js
sahf
stos
in
mov
jl
add
in
xchg
push
jns
test
shll
aas
inc
pop
jne
add
mov
jge
std
sti
iret
ss
push
jno
stos
mov
add
jns
dec
lock
scas
into
mov
push
out
pop
cmpb
je
hlt
jne
or
sbb
push
scas
xchg
mov
sub
mov
fidivl
add
imul
add
inc
mov
test
pop
lods
cmpsl
adc
insb
jmp
adc
cmp
shlb
out
push
cmc
mov
xchg
roll
rcr
pop
xchg
rorb
mov
push
aam
dec
xchg
sbb
out
jno
imul
mov
neg
js
inc
sti
in
pop
lods
in
cmp
cwtl
adc
mov
sbb
xor
cmp
mov
dec
cmc
inc
jmp
adc
fnstenv
mov
clc
cmpsl
insl
jnp
jb
out
cs
shrb
pop
dec
xchg
fiadds
lock
mov
pop
repz
add
nop
jl
arpl
mov
aaa
bound
jmp
fidivrl
cmp
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
dec
push
bound
add
add
jmp
or
add
mov
sbb
lahf
inc
popf
pop
inc
fidivs
pushw
mov
outsl
outsb
sbb
dec
fsubs
push
inc
adc
or
pop
dec
test
call
xchg
push
shl
jle
mov
subl
and
push
cmp
xlat
insb
or
pop
out
imul
lahf
inc
xor
adc
out
sub
divb
movsb
fcoms
scas
test
fcomip
adc
pop
in
repnz
or
mov
xchg
ret
jnp
test
enter
bts
push
icebp
sub
xlat
cmpsb
or
xchg
cmp
call
inc
lods
push
test
fld1
js
sub
add
nop
jle
cmp
xor
mov
cld
pushf
int3
pop
sbb
cltd
sub
adc
or
sub
dec
aam
ficoml
loop
add
add
mov
mov
or
or
test
add
cmpb
pop
nop
mov
cld
out
fistpl
sub
jp
loope
pop
pop
es
xchg
cmp
inc
inc
pop
push
mov
idivl
cmp
jne
in
int3
into
stos
xchg
mov
adc
ja
sti
fwait
mov
dec
imul
and
ret
ljmp
jno
shll
rcrl
sbb
in
push
mov
scas
xor
and
leave
stc
or
in
gs
cmpsl
sub
pop
push
add
lret
xlat
or
xor
das
inc
cmp
xchg
call
cmp
arpl
filds
mov
dec
movsl
sub
jb
mov
lea
pop
xchg
cmp
scas
ds
je
sti
or
push
nop
push
mov
icebp
arpl
add
and
out
ljmp
lock
xchg
jge
lcall
add
add
mov
sar
lds
mov
out
push
loop
ss
stos
jl
outsl
adc
mov
flds
dec
pop
bnd
and
jne
sub
add
shlb
fsubr
cmpl
mov
and
aas
cltd
out
adc
addl
xor
out
xor
mov
shlb
or
shrb
dec
push
imul
xor
mov
imul
xor
hlt
pop
pop
push
fs
jl
bndstx
jge
jno
lcall
sti
loope
adc
cmp
inc
iret
or
pop
mov
cmp
aas
andb
dec
lcall
ja
pop
sbb
jae
call
mov
xchg
jecxz
sbb
aad
cld
push
ss
mov
adc
pushf
loopne
and
popa
jmp
mov
add
imul
push
jnp
sbb
push
xor
xchg
add
sbb
adc
push
fwait
or
adc
cmp
leave
leave
cmp
push
mov
mov
mov
shrl
jne
scas
ret
xor
pop
jnp
fwait
jbe
jg
xor
pop
xor
rclb
icebp
sbb
cmpb
inc
hlt
push
and
jmp
xor
test
loop
jno
hlt
jb
sbb
adc
inc
in
mov
rcl
pop
adc
jmp
pop
negb
scas
pop
movsl
cld
sub
push
cmpsb
fstl
jg
test
adc
mov
push
dec
mov
jae
push
cmp
pop
arpl
xchg
inc
mov
inc
push
gs
xchg
and
rclb
lds
add
ss
or
aam
push
loop,pt
loop
and
les
lcall
push
jb
leave
pop
push
pusha
cltd
insl
jge
push
addl
add
push
aas
or
mov
sar
inc
pop
mov
add
add
leave
in
pop
and
test
loopne
hlt
sub
sbb
or
je
je
outsl
out
lcall
ret
lret
jmp
mov
scas
aam
insb
push
cmp
jno
push
aaa
inc
mov
fsubrp
dec
xchg
icebp
pop
or
pop
pop
je
and
ror
jne
push
shl
lret
int
out
out
mov
das
hlt
sbb
ficoms
sbb
jnp
fcom
xlat
sbb
xor
lods
aas
mov
mov
das
xchg
xor
int3
jg
inc
out
test
sub
ret
and
addr16
jp
neg
aam
xor
push
scas
addl
push
lret
insb
call
test
mov
repz
test
daa
scas
lods
dec
fs
mov
pusha
and
jecxz
int
stos
pop
enter
mov
jo
add
add
push
outsb
fisubs
test
cmp
add
add
cmp
mov
mov
dec
gs
sub
inc
dec
lds
jecxz
push
ljmp
lock
cs
das
push
or
lret
adc
lret
addr16
push
push
mov
xchg
in
jl
mov
fidivs
adcl
push
es
mov
pop
das
inc
add
mov
adc
mov
in
fistpll
adc
xchg
shl
enter
xchg
test
ja
cs
xor
dec
std
fldl
push
shlb
pop
and
imul
push
inc
insl
ficoms
int
dec
push
out
fdivr
gs
test
mov
and
lds
dec
sbb
sub
shrl
xchg
or
and
jl
lds
adc
pop
lret
frstor
data16
adc
daa
or
enter
xchg
add
cmp
mov
jns
mov
add
add
dec
inc
shlb
or
aas
div
mov
sbb
mov
mov
pop
in
loopne
testb
pop
xchg
xchg
ds
jne
mulb
push
ret
jg
push
push
stos
inc
or
daa
outsb
cld
dec
pushf
mov
in
xchg
fsts
iret
movsl
sbb
add
dec
mov
jp
lods
push
mov
test
shrl
mov
xchg
xchg
leave
inc
movsb
jp
push
inc
insl
aaa
push
data16
stc
dec
les
insl
iret
sbb
or
ss
mov
pop
jns
push
adc
push
inc
adc
sbb
or
push
jmp
xor
xor
imul
dec
adc
xlat
in
into
adc
mov
mov
xlat
push
jp
dec
lcall
stc
das
cwtl
aaa
cmpsl
jmp
xor
mov
lods
mov
outsb
shl
aas
dec
out
addr16
xchg
iret
add
add
int
fstp
iret
push
cmpsb
fadd
dec
mov
mov
add
das
pop
push
sbb
fs
adc
inc
fs
xchg
adc
xchg
clc
call
push
mov
test
mov
scas
adc
pop
push
in
test
rcll
movb
mov
mov
in
out
jl
cld
add
in
pusha
fwait
mov
outsb
pop
testb
sbb
inc
sbb
push
leave
sbb
adc
xorl
enter
ss
out
mov
push
mov
mov
hlt
out
jne
mov
sbbl
fnstenv
lcall
jg
xchg
xchg
iret
cmpb
and
and
add
pop
stos
dec
mov
ja
sti
xchg
gs
scas
mov
pop
popa
or
cmp
jnp
push
dec
mov
push
les
loopne
in
mov
shlb
jmp
sbb
mov
out
or
inc
int
add
lds
bound
add
ficoms
lahf
and
scas
std
out
ljmp
outsl
mov
add
cmp
jb
out
out
int
and
jnp
mov
push
jle
add
cmp
pop
mov
roll
addr16
mov
pop
fisttpll
repz
neg
xor
mov
or
movsl
lods
mov
test
adc
mov
into
add
or
inc
cmp
test
adc
inc
sub
pop
pusha
pop
jae
pop
sbb
andb
loop
in
jle
stos
hlt
pusha
pop
and
push
inc
ja
fwait
inc
xor
scas
xchg
test
add
pop
push
inc
sub
jge
insl
mov
inc
call
jb
ret
popa
filds
xchg
cmp
mov
adc
cmp
adc
in
mov
add
pop
pop
fs
dec
mov
pop
insb
cmp
xor
adc
sbb
in
push
sbb
cli
sti
mov
mov
pop
in
push
mov
mov
adc
lods
add
add
mov
icebp
sbb
inc
hlt
je
add
add
mov
ja
cwtl
mov
sub
pop
adc
dec
call
lds
xor
adc
push
imul
sbb
jmp
pop
outsl
mov
repz
shll
mov
shrl
jg
push
pop
mov
mov
dec
in
mov
lea
push
into
jno
push
fwait
roll
mov
stc
mov
xor
gs
andl
hlt
jbe
push
push
cmpl
pop
xchg
push
pop
dec
sbb
insl
mov
lahf
push
and
pop
stos
pop
hlt
mov
adc
mov
outsl
int3
mov
es
lds
cmp
js
bound
cmp
mov
mov
ljmp
xchg
mov
mov
pop
push
inc
pop
ljmp
insl
loope
mov
repz
ja
mov
addl
mov
add
add
les
fcomps
add
mov
mov
add
fs
clc
cltd
dec
mov
and
lcall
xchg
ret
and
xlat
sbb
xchg
add
mov
xor
iret
fstpt
xlat
clc
push
jecxz
out
repz
mov
addr16
push
jle
xor
daa
repz
add
add
fs
xchg
xchg
add
fists
orl
xor
add
into
fiadds
sub
mov
ja
xchg
xchg
mov
inc
cld
inc
pusha
mov
int3
pop
insb
roll
subb
outsl
xor
and
test
sub
in
fadds
fwait
jno
dec
aad
dec
inc
inc
or
xchg
sbb
subb
pop
or
jnp
js
jecxz
sbb
fsubrs
pop
cld
mov
jo
ss
insl
sub
sbb
ja
xchg
add
add
ljmp
dec
mov
cpuid
jle
add
add
insb
or
sbb
mov
pop
pop
test
inc
enter
mov
push
adc
nop
jbe
xchg
sub
loop
lahf
jmp
es
andl
loope
adc
lret
mov
daa
je
push
or
jbe
mov
xor
sbb
fwait
cmp
icebp
fs
adc
pushf
or
stos
fiaddl
int3
ja
dec
push
jge
stos
mov
push
test
pop
lods
cmp
out
cld
mov
dec
mov
out
jne
scas
jb
xor
jg
sub
aas
mov
outsl
imul
push
daa
or
stc
mov
in
icebp
adc
push
xor
hlt
sbbl
lret
mov
cmp
adc
push
cltd
das
or
cmp
je
fwait
xlat
rolb
in
ret
and
add
aaa
shlb
cmc
div
testl
dec
adcl
add
sbb
clc
icebp
lcall
cld
test
cli
rclb
pusha
clc
push
jns
mov
loope
int
in
dec
cmp
mov
inc
shll
popf
lock
cmp
stos
mov
pop
and
lods
lods
lods
orb
sti
addr16
enter
clc
and
add
je,pn
aaa
inc
inc
das
iret
sbb
inc
inc
stc
psllw
pop
jg
push
loop
popa
ja
dec
mov
test
das
mov
mov
inc
xchg
clc
outsb
stos
rcrl
xor
leave
outsl
les
mov
jge
xor
fisttpl
out
testl
ja
dec
cmp
add
pop
popa
dec
sub
xchg
dec
cli
sub
filds
cs
pop
stos
ljmp
cmp
nop
insl
jle
xchg
push
lods
jp
rol
lods
ficoms
pushl
mov
add
add
push
sahf
rcr
pop
adcb
push
ss
das
mov
add
fwait
cmp
les
jne
adc
adc
sti
iret
insl
mov
shll
test
jo
adc
inc
dec
test
jmp
in
sub
adc
sub
loope
jbe
es
lds
adc
jb
test
cmpsl
inc
adc
mov
sub
dec
adc
inc
pop
scas
mov
sahf
into
dec
fidivs
adc
mov
mov
pop
xchg
mov
in
test
adc
cltd
jmp
adc
negb
cwtl
daa
mov
adc
push
add
mov
cmpsb
add
aas
inc
lretw
stos
mov
iret
outsl
pop
add
xor
xchg
js
cmp
or
sbb
jecxz
popa
cmp
sti
popl
sarb
xchg
into
or
daa
cmp
inc
rorb
xchg
inc
jnp
cltd
jl
mov
aad
fisttpll
add
add
add
arpl
cmpsb
jcxz
fimull
lea
add
cmp
divl
in
cmp
cmp
stos
push
inc
jo
mov
lret
adc
mov
xor
scas
ja
and
rorb
ret
xor
xor
daa
mov
mov
xorb
dec
mov
pop
adc
inc
lahf
xchg
daa
lcall
andb
addr16
das
jno
sub
adc
jmp
sub
adc
pushf
test
lret
cli
mov
pop
sub
and
xchg
lea
add
inc
xor
push
sbb
sbb
sbb
insb
mov
addr16
in
and
push
adc
cmp
loope
sbb
je
mov
mov
jmp
dec
cmp
cmp
iret
push
inc
push
rcrb
std
aaa
push
cmpb
mov
daa
or
adc
jnp
xor
adc
cmpb
jae
inc
jb
add
clc
jnp
jg
in
cli
enter
sar
or
xchg
xchg
add
add
sbb
daa
dec
adc
movsl
jecxz
jg
push
sub
fnstsw
fmull
aas
aam
imul
xchg
gs
or
inc
pop
push
bound
push
leave
inc
xchg
jg
push
xor
sbb
out
les
dec
mov
std
xor
imul
outsl
and
nop
cmp
into
sti
add
ss
inc
sti
clc
jae
ss
jnp
aas
shlb
cwtl
dec
int3
sbb
icebp
js
jo
sub
cmpsl
inc
pop
adc
push
add
xorl
mov
mov
nop
add
jo
je
sbb
loop
movsb
xchg
pop
stc
jae
dec
ret
mov
jo
mov
insb
mov
and
jbe
lea
xchg
sub
jecxz
jno
jno
scas
ss
stos
in
mov
and
pop
or
lods
stc
and
push
nop
icebp
nop
fisubrl
andb
in
jnp
xor
adc
or
call
add
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
push
and
jecxz
ret
aaa
push
mov
mov
xor
les
sbb
xor
dec
cmpsl
sub
lods
cs
sub
loopne
pop
sub
cmp
lcall
jb
sub
jbe
into
add
pop
xchg
sahf
mov
sbb
ss
sbb
nop
sub
rsqrtps
pop
testl
xlat
lret
shrb
rorb
inc
or
sbb
dec
push
outsl
sbb
and
in
adc
pop
or
in
imul
mov
test
or
in
movsb
roll
lret
lret
or
shrl
cwtl
sbb
mov
sbb
shrb
test
ljmp
lret
push
ret
sti
mov
mov
dec
jp
stos
test
sub
xchg
jmp
and
movsl
cli
mov
xchg
mov
xor
add
add
jl
sar
std
jle
pop
popf
scas
cmp
dec
mov
add
mov
aam
pop
jmp
js
push
insb
pop
mov
push
shlb
cmp
xlat
ja
mov
jmp
cmp
xchg
pop
jb
ds
movsb
mov
xor
test
xor
fnstsw
out
sbb
lods
push
fsubl
mov
pop
fwait
add
mov
fcoml
addb
hlt
insb
mov
jle
mov
xchg
jmp
in
and
incl
int
fwait
add
cmp
sbb
mov
xrelease
push
adc
dec
pusha
inc
repz
dec
pusha
mov
or
pop
jle
inc
push
pop
push
pop
ljmp
dec
jge
mov
out
xor
clc
xchg
mov
mov
gs
jae
mov
mov
jnp
dec
pop
pop
adc
rolb
mov
xchg
fldenv
loopne
cmp
push
xor
mov
add
cmp
cmp
in
mov
xchg
add
add
add
lcall
xor
mov
mov
test
imul
nop
push
cmp
jp
loope
sub
adc
aam
dec
mov
fcompl
pop
or
or
test
xchg
movsb
mov
int3
clc
add
dec
out
sbb
sbb
fnstenv
sub
or
call
cmp
and
popa
clc
add
iret
or
ss
inc
jle
cwtl
adc
jns
inc
dec
xchg
and
pop
fildl
sti
cmp
pop
push
xchg
jg
jno
mov
aaa
lods
fildll
das
lcall
adc
or
jbe
pop
push
mov
shrl
pop
sbb
lds
rclb
and
jne
push
pop
sub
xchg
movsl
adc
mov
inc
mov
xchg
inc
add
add
cmp
lock
loop
add
add
outsl
sti
mov
mov
push
stc
xor
add
add
jge
hlt
push
cs
mov
iret
sahf
jg
or
outsb
dec
jle
jle
sub
rcrb
cmp
or
pusha
stos
inc
fists
scas
cmp
insb
insl
pop
cmpsb
push
push
fldt
in
inc
mov
and
pop
scas
dec
jmp
pop
fs
imul
call
push
lods
mov
push
not
jns
stos
add
jno
dec
adcl
jno
and
adc
sub
popa
sbb
sub
test
pop
ja
or
shll
pop
mov
in
jg
sbb
test
adc
enter
lea
test
inc
pusha
mov
std
xor
enter
data16
pop
dec
mov
cltd
fwait
jno
hlt
test
imul
ffreep
roll
jae
testb
adc
jnp
hlt
sub
lret
add
dec
std
out
xlat
aas
dec
sbb
or
stos
cwtl
add
add
fwait
mov
leave
jg
jp
jecxz
int3
mov
mov
pop
mov
lods
mov
pop
lea
lahf
sbb
mov
mov
cld
les
dec
into
add
shr
xchg
daa
push
xor
pop
sbb
jns
cmp
or
ljmp
fadds
and
jne
test
and
enter
dec
scas
dec
ss
xorl
and
sbb
push
push
es
adc
je
out
fbld
pop
mov
sub
jl
or
ds
pop
arpl
xchg
dec
loope
cmp
in
lcall
cmpsl
cmp
movsl
icebp
shll
in
xor
sub
push
jno
and
neg
fs
into
add
stc
mov
push
or
mov
mov
xor
mov
pop
idiv
faddp
sub
add
repnz
mov
add
imul
outsl
vmwrite
loop
cltd
add
add
adc
mov
or
jp
jecxz
movsl
jl
nop
mov
cmp
adc
dec
xor
femms
push
xor
xchg
xchg
and
fnsave
jnp
mov
pop
adc
push
push
and
dec
jle
jg
push
dec
pop
jp
gs
js
adcb
inc
fldcw
mov
into
dec
mov
adc
lds
movsb
fidivl
or
insb
dec
inc
jno
add
negb
aad
jp
mov
addl
mov
rcll
cmp
scas
sub
push
inc
xchg
call
add
aad
test
in
lds
push
jp
movsb
mov
popf
xor
sahf
push
fs
fnstcw
imul
ljmp
mov
je
sub
xchg
jg
push
scas
cs
in
mov
fmuls
or
std
add
add
lret
sbbl
popl
add
add
sub
xlat
das
mov
pop
inc
xchg
jmp
push
mov
icebp
mov
or
mov
fwait
lret
inc
xchg
ja
arpl
mov
add
mov
inc
fiaddl
adc
lock
push
nop
sub
push
mov
ror
nop
or
pop
adc
jb
pop
lock
pop
or
int
les
sub
or
aaa
pop
sub
lods
sbb
add
pop
pushf
mov
push
xchg
push
pop
imul
inc
std
inc
dec
mov
stos
sarb
in
dec
push
mov
cmpl
sbb
cltd
das
cli
fmuls
shrb
add
mov
shll
js
aaa
dec
std
push
xchg
xchg
lds
pushf
push
xchg
sbb
in
sbb
pop
nop
negl
inc
out
outsl
sub
mov
lock
add
imul
movsb
and
loope
jno
mov
add
add
pop
push
repnz
jecxz
mov
sbb
adc
or
inc
insb
jbe
test
adc
mov
movsb
add
jmp
call
out
adc
and
cli
imul
cs
or
dec
push
push
movsl
cld
sbb
test
int
cltd
inc
mov
add
sbb
pop
insl
add
lock
sbb
lcall
aad
xor
cmp
cld
xor
add
cwtl
and
dec
out
addr16
cld
mov
mov
ret
mov
call
inc
pop
dec
in
push
cli
ja
sti
in
js
mov
ljmp
push
nop
lahf
dec
ficoml
xor
mov
test
and
das
enter
adc
xchg
push
popf
sub
jle
sub
outsl
or
mov
pop
sti
inc
add
sub
outsb
xlat
mov
leave
out
int3
push
outsb
mov
and
xor
aam
add
add
mov
sub
lahf
mov
pushf
add
add
push
test
nop
push
jbe
mov
outsb
xchg
jmp
fidivs
dec
ss
mov
adc
fcmovb
inc
mov
xor
fidivs
mov
push
fcomp
outsb
cs
push
sub
cmpsl
scas
loop
std
cmp
mov
stos
out
push
mov
test
mov
add
lcall
test
fwait
pop
loopne
adc
lock
imul
xchg
loope
mov
outsb
push
inc
cli
push
add
stos
movsl
and
xchg
mov
insl
rcrb
hlt
pop
aad
roll
mov
sahf
clc
mov
lret
hlt
fistpl
xor
jmp
mov
jp
or
push
call
mov
enter
lahf
sbb
sar
jl
dec
dec
and
loope
inc
imul
xchg
lahf
into
pop
xchg
cmpsl
adc
stos
adc
adc
cltd
sub
out
inc
sub
or
add
les
add
lahf
jb
add
test
and
sbb
in
add
rcrl
jge
mov
push
addl
mov
out
loop
or
scas
inc
out
iret
pusha
loope
fcompl
inc
dec
dec
std
dec
sbb
xor
jl
cld
and
xor
sbb
aad
decl
shrb
lods
sub
mov
mov
mov
scas
xor
push
cmc
in
insl
insl
shlb
lret
fisttpl
lahf
sbb
inc
inc
out
or
and
daa
lock
mov
mov
rorl
or
and
mov
lcall
aad
jg
adc
decl
lret
sub
shll
mov
fneni(8087
das
or
imull
les
gs
xchg
mov
jns
mov
leave
mov
add
xor
add
pusha
test
mov
cld
mov
leave
sahf
add
add
rcrl
inc
jp
cwtl
sarl
ds
xchg
sub
cmc
push
jne
je
xchg
xchg
sub
inc
push
xlat
push
cmp
jg
sahf
sub
int
scas
xor
add
test
inc
aam
mov
fldl
sbb
dec
pop
fadd
adc
mov
push
out
das
add
adc
xor
jo
roll
adc
push
outsl
add
pop
cmpsl
popa
pop
pop
jmp
aad
jb
je
sbb
sbb
pop
push
mov
xchg
push
lea
cmp
push
sub
sbb
scas
lahf
ret
subb
pop
les
stc
or
sbb
inc
pop
cmc
and
pop
mov
adc
test
into
add
xchg
jecxz
inc
cmp
aas
jp
cmpsb
dec
inc
imul
jecxz
in
jne
in
inc
subb
add
add
imul
dec
mov
add
or
lcall
xor
into
lahf
add
add
popl
jae
out
insb
movsl
sbb
das
xchg
inc
jecxz
insb
gs
shr
mov
xor
cwtl
mov
clc
xchg
or
xlat
jbe
pushf
ja
loope
and
push
push
cmp
mov
xchg
xchg
inc
clc
stc
mov
dec
call
push
sbb
mov
rcr
jg
inc
test
movsl
movsl
pop
push
mov
cli
add
stos
inc
pusha
fldenv
adc
jl
cmp
xchg
imul
mov
mov
xchg
out
mov
movsb
int
pusha
bound
stos
xor
hlt
outsb
mov
pop
inc
repnz
inc
mov
mov
jp
cmp
jmp
shl
inc
xchg
icebp
xchg
pop
in
hlt
inc
pop
inc
mov
or
lods
or
and
and
into
mov
adc
xlat
ret
mov
xor
add
movsb
mov
mov
inc
inc
add
mov
add
dec
les
stos
pushf
out
or
sbb
mov
lock
push
mov
sbb
cmpsb
enter
lret
add
rcrl
jmp
jo
mov
add
addl
mov
mov
shl
mov
lods
mov
test
mov
pushf
aaa
xor
das
add
push
dec
sbb
pushf
movsb
push
and
cmpsb
out
loope
xor
sub
cmp
mov
or
addb
xlat
lret
mov
popa
imul
pusha
adc
stos
sbb
push
xchg
loop
imul
adc
jb
popf
add
cmpb
outsl
or
push
data16
movb
mov
dec
enter
cmp
push
push
int3
push
out
xor
xor
rorb
mov
icebp
mov
jbe
into
pop
sbb
or
add
or
sbb
inc
mov
pop
movsb
fsubs
add
cmc
int3
pop
dec
daa
push
jno
popa
in
scas
rcll
mov
xchg
xor
lods
push
mov
imul
nop
sbb
add
inc
out
push
and
xor
cld
xchg
add
xor
in
pop
add
imul
rcll
andl
jp
push
sub
lahf
cmp
xchg
inc
stos
imul
or
mov
xor
ret
jno
test
xchg
sbb
or
xor
mov
pop
ror
inc
int
pusha
dec
pop
adc
xor
cs
xor
jae
test
xchg
jmp
inc
sbbb
repnz
adc
pop
cltd
fnstcw
adc
dec
sahf
adc
jmp
mov
pop
adc
mov
roll
jmp
dec
mov
pushf
lret
out
ja
sbb
adc
add
mov
pop
mov
stos
int
add
add
inc
fdivl
push
dec
mov
frstor
add
dec
add
sahf
cmpb
mov
aaa
hlt
xchg
pushf
das
or
xchg
testl
imul
dec
mov
xchg
inc
scas
jp
sub
mov
pop
sbb
loop
xor
icebp
in
pop
mov
mov
fldenv
jbe
xor
enter
pop
push
ret
xor
std
jb
xor
pop
mov
add
orb
and
push
rol
adc
cwtl
cltd
mov
pop
mov
gs
and
int
test
add
addb
frstor
popf
pop
xchg
add
inc
adc
adc
cmp
ror
popa
jmp
ret
pop
xor
push
outsb
adc
push
xchg
lcall
inc
inc
dec
xchg
mov
clc
sbb
stc
jns
adc
mov
movsl
aas
nop
xchg
and
leave
xchg
jns
add
add
sbb
mov
sbb
mov
add
pop
movsl
xor
movsb
call
mov
incb
movsb
loope
push
and
xchg
push
mov
ljmp
sbb
and
xor
fwait
je
rcr
sti
shlb
js
lcall
mov
push
pushf
movsb
jne
mov
adc
xchg
cs
in
cld
xchg
in
fwait
pop
mov
mov
bound
xor
push
dec
sbb
xchg
sub
notl
lahf
or
stos
sub
jl
adc
int3
push
psubsb
cmpsb
lcall
fwait
push
and
je
xchg
sarl
push
incl
jne
aas
pop
mov
out
shlb
addr16
movsl
popf
incl
flds
ja
clc
int3
rclb
insb
jge
pop
inc
out
call
xchg
pushf
sbb
cmp
jno
dec
clc
add
pop
test
stos
hlt
jmp
cmp
jbe
mov
sub
movsb
add
add
repz
add
test
dec
imul
outsl
data16
icebp
sar
shlb
jne
imul
sub
mov
lret
adc
xor
xchg
scas
mov
cltd
push
adc
fldt
jne
test
xchg
jno
in
sbb
popf
popa
fucomip
cld
cmp
lea
inc
in
into
and
cld
dec
lods
xchg
jge
call
push
fisubs
pushf
mov
stos
lds
movsl
mov
out
psubb
fistpl
xchg
les
push
pop
in
and
or
into
test
sub
addr16
out
clc
xchg
cli
mov
cwtl
imul
lahf
lods
sti
out
movsb
sbb
mov
adc
or
sbb
mov
push
jecxz
jecxz
lods
lret
cs
mov
push
les
testb
pop
cwtl
pop
js
nop
lret
or
sub
loop
add
add
out
xlat
out
jg
in
xor
fnstcw
mov
add
add
int3
popa
popf
cmp
sub
or
jp
daa
data16
jo
push
insb
fldt
sub
push
and
jb
xchg
pop
ds
shr
or
dec
xchg
repnz
in
xchg
push
xchg
insb
and
jecxz
and
pop
sub
orl
adc
dec
mov
or
xchg
sahf
loop
das
add
movsb
std
jno
mov
adc
add
sub
sub
cmc
ret
adc
or
rorb
mov
mov
cmp
les
fiadds
xor
aad
push
cmpsl
inc
pop
sub
ffree
outsl
fdivr
cltd
pop
loopne
or
add
dec
mov
pxor
fdivp
jbe
in
mov
jnp
xchg
and
lret
and
filds
pop
xchg
fsubs
mov
or
mov
pushf
sbb
add
add
mov
inc
fwait
lds
jo
fldl2e
xlat
ret
icebp
cmpsb
add
add
pop
mov
js
and
pop
stc
cltd
jmp
aas
sbb
lea
pop
popa
inc
cmpsb
push
jae
arpl
test
enter
push
jg
rorb
ja
fidivrl
fsqrt
ret
or
es
mov
push
sbb
mov
xor
fmull
imull
stos
je
sub
jmp
int3
push
leave
or
push
and
fwait
inc
int3
push
mov
movsb
int
mov
cli
xchg
cmpsl
sbb
inc
jne
cmpsb
cli
ret
sbb
stc
pop
add
ja
xor
rcrl
mov
out
sbb
cmp
sub
insb
or
jecxz
popa
pop
aaa
pop
shll
cmpsb
cmp
pop
iret
std
sub
pop
or
ja
jle
insb
insl
pop
pop
push
mov
iret
pop
ljmp
pusha
push
cmp
cltd
repz
cmp
sbb
insl
pop
dec
sbb
lcall
std
inc
jne
and
add
cmpsl
add
add
arpl
push
jl
fs
jecxz
push
mov
or
mov
popa
mov
in
outsl
lret
daa
insl
mov
sbbb
negb
pop
xchg
sarb
mov
cwtl
leave
das
and
test
jge
inc
cltd
sub
or
sbbb
mov
icebp
nop
inc
mov
imul
mov
xchg
inc
insl
adc
fiadds
loope
das
xor
movsb
int3
dec
push
mov
add
and
nop
testl
out
and
inc
out
sub
data16
sub
and
dec
ds
popl
dec
or
scas
lock
mov
loopne
xchg
mov
push
test
add
jno
daa
hlt
movsl
mov
das
mov
idivl
into
fwait
jne
dec
mov
imul
out
adc
pop
dec
pop
xor
xor
jo
scas
xor
shr
add
in
dec
jae
or
add
mov
push
sti
jmp
push
mov
idiv
jns
test
add
jg
dec
mov
lcall
pop
mov
jg
aaa
inc
sti
les
sbb
imul
pop
mov
ret
adc
cmp
jne
aad
rorl
push
nop
std
cmp
popa
test
test
push
xchg
adc
insb
cmp
xchg
cltd
push
aad
xchg
push
addr16
cmp
pop
insl
fidivrs
xchg
gs
daa
xchg
insl
clc
je
xor
xor
test
inc
in
jmp
lret
repz
xchg
pop
outsl
pusha
les
repnz
lcall
xchg
addl
jae
movsl
js
fisttps
mov
out
call
add
adc
lock
out
ret
inc
jne
adc
sbb
xor
mov
sub
insl
push
movsb
nop
mov
inc
mov
push
xchg
into
es
jp
xlat
and
push
add
add
jecxz
lock
mov
add
add
xchg
cmp
lds
xor
in
and
bound
fbstp
mov
dec
mov
and
xchg
jge
mov
sbb
cmpsl
mov
jo
cmpsl
ss
xchg
loopne
cmp
dec
xor
add
dec
clc
inc
dec
mov
mov
test
add
pop
je
stos
stos
fs
dec
ljmp
popf
repz
adc
and
pop
dec
mov
fdivrs
and
mov
mov
dec
mov
xchg
imulb
push
mov
adc
mov
stc
loope
scas
mov
mov
fisubrl
daa
mov
push
mov
sub
jns
insb
adc
lret
push
nop
push
and
shll
nop
in
outsl
mov
mov
mov
inc
jg
scas
pop
mov
add
add
cld
mov
leave
fists
add
add
xchg
push
push
mov
cmp
out
xchg
and
rcll
call
mov
loop
cmp
out
loopne
ret
cmc
add
adc
pusha
mov
xor
frstor
pop
push
and
cmp
inc
mov
sbbl
adc
mov
or
add
mov
lahf
jae
dec
adc
lods
aaa
add
push
xchg
out
movsb
cli
sbb
orb
or
negl
ljmp
fbstp
aam
mov
dec
mov
jo
adc
shlb
std
int3
add
loop
jb
imul
mov
test
cmp
mov
loope
pop
and
cmp
jg
fimuls
mov
pop
xor
insb
and
adc
cmp
pop
push
popl
xchg
inc
push
xor
imul
mov
loope
loopne
add
add
out
cmc
mov
push
outsb
jecxz
or
add
mov
dec
xor
mov
mov
or
xchg
shlb
lods
imul
mov
ljmp
cwtl
movsb
subb
mov
loope
xor
out
adc
out
lea
add
pop
fisubl
mov
xor
xchg
ret
jp
out
inc
mov
lds
mov
ss
filds
dec
stc
and
jg
mov
inc
cmp
icebp
ds
mov
pop
jns
push
popa
or
push
lahf
mov
out
out
jmp
ss
test
xor
mov
insl
or
imul
sub
or
mov
xchg
or
fbld
mov
fcmovnb
xor
pop
es
mov
rclb
dec
sub
xor
mov
jbe
push
outsb
xor
out
fmuls
push
jmp
mov
or
outsb
mov
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
pushf
int3
mov
shrd
add
out
xchg
rcr
push
mov
leave
push
push
mov
cld
add
pop
rol
xchg
les
loopne
movsb
cmpsl
insb
and
popf
xor
sub
test
sbb
pop
sbb
inc
dec
cmpsb
add
mov
addr16
lret
or
xchg
lds
loopne
add
mulb
mov
imul
test
inc
inc
loope
mov
pop
mov
xchg
ret
jno
sarb
xchg
bound
call
jl
sub
or
mov
xor
xchg
and
add
imul
popa
cmp
sbb
insb
mov
cwtl
sub
or
inc
mov
cmp
cmp
sbb
adc
mov
inc
stos
fimuls
jno
testl
int
in
loopne
push
scas
shrl
jo
jb
mov
add
fidivs
loop
ljmp
jl
je
adc
add
add
pop
fs
mov
mov
test
jge
sub
clc
popa
fimull
pop
or
sbb
rcr
push
inc
xchg
pop
test
es
movl
dec
push
xchg
fsincos
xor
lods
fadd
push
cld
imul
jbe
out
aas
test
adcb
stos
sbb
adc
cmc
dec
or
fcoml
fdiv
xchg
or
enter
xor
outsl
sbb
adc
cmp
mov
pop
pushf
inc
icebp
xor
lcall
fldt
xchg
dec
jmp
aas
lds
mov
repnz
pop
lea
xchg
loop
jmp
pop
cmp
cmp
xor
out
mull
cmp
in
ss
shlb
pop
or
dec
and
pop
dec
lahf
addr16
loopne
inc
adc
daa
mov
jp
rol
rol
inc
add
add
xchg
jg
jmp
std
mov
cld
int
sbb
add
jg
mov
out
out
test
mov
ljmp
ret
push
push
fwait
call
mov
decb
xchg
or
lcall
xor
and
int3
and
cmp
inc
cmp
jle
shlb
loopne
stos
or
pop
jnp
add
in
jmp
bound
pop
ret
call
cmpsl
dec
lcall
fwait
jnp
mov
test
outsb
das
push
shl
js
shl
clc
pop
jmp
out
iret
mov
add
daa
mov
push
mov
xchg
fs
cmpsl
add
pop
sahf
inc
std
enter
not
sbb
cld
idivb
fisubl
into
mov
mov
add
mov
sub
pusha
pusha
aad
test
inc
lock
cmp
push
adc
push
cwtl
and
inc
cmp
sub
push
imul
data16
dec
clc
add
add
xor
inc
mov
add
mov
add
arpl
int3
push
or
lods
pop
cwtl
or
xor
insb
dec
sbb
push
sbb
mov
rolb
scas
and
fdivp
push
sahf
sub
inc
pusha
adc
xchg
inc
xchg
out
sub
outsb
fs
dec
es
push
into
or
nop
insl
pushf
out
ds
jno
adc
outsb
mov
into
neg
or
sbb
xchg
fwait
out
xchg
xor
nop
push
int
dec
les
cmp
sub
neg
movsb
push
xchg
cs
cmp
sub
mov
cwtl
sbb
jns
xchg
and
push
inc
jg,pn
das
repz
adc
and
xor
insl
cltd
repz
imul
inc
inc
mov
imulb
add
je
xor
pushf
rorb
cmp
mov
insl
jecxz
lods
mov
add
add
push
pop
xor
cmp
inc
call
xor
add
jge
mov
sbb
push
fisttpll
enter
pushl
popf
or
pop
or
mov
dec
adc
push
divl
repnz
mov
adc
ds
mov
popa
xlat
and
lret
add
add
enter
sbb
pop
std
cwtl
mov
xor
mov
cltd
sub
repnz
pop
mov
int
sbb
ficoml
lcall
inc
rorl
mov
ffree
cmp
sub
inc
lods
mov
stos
dec
jle
sbb
cmp
jg
or
into
jmp
sub
or
arpl
inc
cmp
leave
lea
or
fs
ss
out
mov
movsb
repz
jbe
mov
jle
adc
rorb
loopne
lods
xrelease
addl
add
sub
and
add
add
add
jp
les
mov
arpl
jns
sub
add
cld
repz
ja
pusha
iret
jle
ss
add
pop
nop
dec
sbb
mov
xchg
stc
pop
ljmp
push
pop
mov
mov
ja
inc
xchg
loope
int3
xlat
pop
push
lock
adc
les
jle
fstl
dec
jmp
push
jo
inc
test
les
ljmp
inc
xchg
or
je
xor
orb
push
pop
xchg
jo
loopne
mov
cmp
stos
push
jne
push
inc
or
xor
in
inc
inc
inc
adc
jl
inc
movsl
jecxz
lcall
insl
mov
add
shlb
idiv
inc
pop
mov
lock
mov
lret
out
pop
mov
cmp
stc
stos
dec
jae
adc
rolb
push
mov
mov
jp
sti
call
repnz
pop
fs
sahf
mov
faddp
mov
pop
inc
push
add
add
clc
pop
stc
out
push
pop
bound
in
mov
add
cmp
or
movsl
mov
sub
mov
sub
leave
fsub
fwait
test
xor
test
cli
xchg
cwtl
adc
rorl
mov
jg
pop
push
push
dec
jp
dec
sbb
ds
xchg
and
rclb
adc
int3
bound
ffreep
push
movb
inc
fidivrs
mov
call
mov
cmp
sbb
and
xor
or
pop
test
dec
and
test
ficompl
dec
inc
dec
cmp
aas
outsl
cmp
push
imul
ret
fwait
mov
dec
sbb
leave
add
mov
cli
sub
arpl
stos
xchg
cmpsb
in
pop
arpl
aam
pop
popf
sbb
out
jle
xor
into
push
loope
int
xor
inc
test
add
add
push
mov
lcall
push
xor
add
sbb
nop
subb
mov
mov
das
rcrl
lds
or
pop
lods
pop
out
mov
fmull
into
les
xchg
adc
icebp
and
cltd
add
subb
pop
dec
mov
test
inc
mov
xchg
sub
imul
daa
xchg
jp
lods
jae
insl
and
sub
dec
mov
outsb
lcall
in
shrl
xorl
mov
add
adc
les
mov
movsb
aaa
ror
in
paddsw
ja
inc
lret
jmp
inc
or
jmp
or
xor
test
ret
enter
inc
fists
xchg
mov
lods
mov
idivl
mov
push
insb
in
dec
xchg
repz
add
clc
pusha
mov
cmp
ret
xchg
mov
pop
imul
rcrb
enter
xorl
insb
lret
sbb
mov
add
fcmovnb
push
mov
xor
jle
sub
sub
adc
mov
inc
inc
nop
push
mov
jo
test
hlt
das
mov
dec
add
lahf
leave
add
lahf
xchg
pop
aaa
jns
nop
mov
loope
aas
pop
lahf
repz
xor
or
cwtl
shll
xor
test
dec
or
push
pop
jno
leave
in
int3
scas
xor
mov
mov
repz
icebp
out
movsl
in
cwtl
inc
aaa
mov
clc
dec
dec
cs
pop
dec
mov
js
pop
repnz
outsb
pushf
cmp
lret
pop
rclb
mov
movsl
dec
lods
adc
dec
ficoms
lcall
stos
mov
mov
lock
leave
bound
jae
ds
cmc
pop
xchg
and
pusha
xchg
scas
pop
dec
fsubs
out
roll
out
cmp
test
imulb
fidivs
clc
xor
push
push
push
sbb
add
add
pop
sbbl
fstp
rorl
aad
mov
add
comiss
cmp
notb
sbb
aam
cmc
js
popf
jnp
scas
adc
push
and
dec
pusha
ret
int
arpl
cld
flds
sti
rclb
cmpsl
pop
sub
scas
outsl
sbb
hlt
sti
out
repz
xchg
rcrl
add
int3
sub
das
iret
inc
fucompp
fwait
adc
add
sub
daa
insl
std
inc
inc
fildll
jbe
rclb
cmc
xor
ljmp
pcmpeqb
push
fildl
xchg
mov
pop
mov
je
into
jns
stc
leave
scas
pop
dec
cmp
cmp
orl
pop
in
fmull
cmp
sub
int3
movsl
jne
mov
lods
std
sbb
mov
outsb
pop
shlb
mov
lahf
ljmp
dec
scas
fiaddl
cli
cmpsl
xchg
xor
test
jnp
stos
push
xor
sbb
add
mov
add
add
in
mov
jecxz
out
mov
jnp
lahf
inc
mov
add
scas
mov
push
add
sub
into
inc
dec
add
xor
sub
adc
into
fnstenv
dec
inc
into
mov
stos
xchg
sbb
xor
andl
jae
or
mov
dec
mov
xchg
clc
shll
es
mov
dec
mov
mov
inc
scas
push
fcomps
sbb
pop
sub
adc
mov
jl
cmp
push
xchg
pop
pop
js
or
bound
dec
stos
mov
cmp
arpl
in
mov
ljmp
jnp
aas
test
adc
cmp
pusha
pop
xorb
movsl
movsb
mov
insl
mov
in
xor
inc
jecxz
cmp
iret
je
ret
push
mov
test
mov
repz
decb
add
or
aam
pop
daa
dec
mov
dec
lock
inc
xchg
testl
ja
add
add
std
test
jg
into
lret
orl
add
add
jns
arpl
in
sahf
add
iret
add
je
sub
cmp
leave
adc
pop
call
cmc
adc
aas
inc
into
inc
dec
xchg
cmp
jo
or
adc
cwtl
xor
cmp
stos
subb
mov
and
inc
insl
mov
cmpsl
repz
and
popa
or
adc
push
int3
or
aas
popf
sbb
add
daa
repnz
pop
imul
mov
xchg
push
shrl
aam
shlb
push
xor
cmp
pop
cmp
out
dec
test
scas
sbb
mov
xchg
mov
in
ror
test
sbb
inc
inc
xchg
jno
imul
and
adc
and
cltd
outsb
sub
shrb
rep
mov
xor
addb
lret
loop
ret
sub
cmp
mov
rorb
mov
mov
cltd
mov
xchg
mov
lods
dec
sbb
add
add
adc
in
lcall
jae
dec
mov
roll
dec
mov
add
or
hlt
cld
fwait
xchg
out
jno
lret
pop
sbb
mov
pop
sbb
cltd
push
mov
imul
mov
xchg
dec
dec
cld
mov
aaa
xchg
mov
push
push
pop
aaa
insl
movsl
mov
sub
test
mov
lahf
jecxz
or
pop
push
adc
xlat
push
imul
push
xchg
arpl
fldenv
xlat
or
xor
dec
rolb
pusha
add
mov
test
es
push
inc
fiadds
sbb
mov
mov
scas
inc
add
push
xchg
inc
jecxz
cli
cmp
es
aas
imul
movsb
push
and
or
mov
cltd
loop
cmp
or
mov
das
scas
xor
pop
mov
mov
repz
xor
cmc
and
negl
inc
xchg
mov
jle
jns
sbb
iret
sarl
mov
mov
add
dec
or
jg
dec
arpl
push
mov
add
sub
push
dec
loop
fwait
decl
dec
subb
aaa
loopne
mov
je
out
push
pop
ficoms
lret
add
shl
ljmp
sub
xchg
jle
addb
add
in
mov
sahf
pushf
push
dec
insb
test
into
sub
inc
xor
lea
fsubl
shll
shrb
loopne
stc
add
aas
js
xchg
add
fcompl
call
addr16
das
mov
js
in
ds
push
hlt
sbb
mov
daa
fisubrs
js
lret
jle
jl
aas
or
mov
pop
rclb
push
je
push
clc
add
jb
imul
sti
movsb
lock
add
and
aam
mov
lahf
andb
or
outsl
sub
fstps
imul
dec
sbb
cmp
jns
sti
xor
cmc
aam
xor
mov
xor
and
mov
add
insl
sbb
outsl
mov
inc
loope
and
add
adc
daa
jecxz
xchg
inc
int3
fcoms
fildll
lret
adc
adc
pop
inc
cmpsb
mov
fwait
int3
add
repz
ficomps
pop
aam
mov
sbb
jno
mov
or
push
mov
call
int3
inc
inc
sti
and
jg
jbe
fidivrs
imul
jbe
pop
mov
cmp
mov
enter
addr16
hlt
rcl
jp,pt
mov
fs
sub
rorl
out
pushf
sbb
mov
or
insb
push
adc
sub
lods
adc
pop
xor
imul
rorl
lret
add
pop
lret
insl
int3
mov
imul
call
jae
shrl
mov
ret
and
int
pusha
cmpsb
leave
mov
fwait
push
in
notl
xchg
cmp
shlb
je
add
xor
mov
pop
push
mov
add
add
add
leave
xor
movsb
dec
mov
and
jmp
insl
jbe
push
aam
jb
inc
outsl
or
jbe
cs
or
xlat
add
pop
inc
incb
imul
leave
cmp
cmp
insl
call
xchg
lds
sbb
mov
loop
jle
out
test
aad
inc
pop
inc
movsb
push
scas
push
inc
shrb
push
xor
or
inc
js
xlat
ja
jecxz
xchg
fmul
xorb
dec
jecxz
loope
sbb
xor
fs
mov
mov
cld
sbbb
inc
mov
pop
push
popa
xchg
mov
adc
and
mov
fldcw
ja
arpl
cltd
and
dec
lret
mov
lods
aas
fdivrp
cmp
ficompl
daa
jnp
push
mov
mov
and
dec
jns
add
add
fistpll
call
cld
or
pop
mov
add
xor
leave
jge
push
push
sbb
and
cltd
fwait
arpl
mov
inc
imul
jnp,pt
imul
aaa
and
aam
rorl
in
push
pusha
mov
pusha
icebp
dec
sbb
xor
ss
ljmp
cmp
adc
mov
push
jge
in
lahf
mov
inc
xchg
dec
out
lahf
and
add
adc
test
fwait
pop
pop
mov
mov
int3
xchg
add
lcall
dec
std
sbb
jmp
push
jg
iret
or
cmp
mov
dec
jmp
cli
jnp
push
xchg
push
std
xchg
jge
sub
xchg
inc
mov
mov
mov
fsubl
jle
lcall
jb
movsb
lcall
xor
push
xchg
sub
xor
rcll
idivb
add
add
std
sti
leave
sti
iret
jmp
and
fs
add
inc
inc
lcall
or
add
push
cmp
mov
xchg
or
sti
cmpsl
cmpsl
cmpsb
inc
cmc
and
aad
sub
jl
and
mov
mov
popa
jg
jp
sbb
jae
pop
cmpsb
add
in
push
imul
mov
and
cld
loopne
push
sbb
enter
inc
xor
cli
lret
pop
mov
push
jge
push
xchg
test
aam
push
sub
and
loopne
mov
ljmp
inc
cmp
mov
xchg
loopne
xchg
mov
bound
and
pop
jnp
and
out
test
mov
jecxz
push
mov
push
sub
xor
jno
mov
mov
into
es
pop
lock
lea
mov
mov
flds
sub
mov
and
cmp
sbb
push
bound
in
or
add
mov
xor
mov
add
add
sbb
push
xor
adc
push
rcrl
add
ds
sub
cmp
xlat
push
aad
popf
sub
sub
mov
pop
out
and
push
push
push
xchg
and
add
mov
shrb
jns
dec
sbb
or
insl
cmp
bound
inc
pop
push
repz
loop
mov
mov
out
jmp
and
fwait
jg
push
leave
push
cmp
dec
jb
dec
ja
mov
scas
fidivrl
sbb
pop
rcl
add
das
inc
mov
fldlg2
inc
bound
sub
call
stc
fisttpll
push
pop
scas
cmp
fbstp
nop
dec
repz
jo
mov
out
fsub
imul
cmp
std
mov
jns
loop
icebp
push
dec
or
stos
or
dec
push
into
and
pop
loope
call
add
fwait
mov
or
jg
mov
sahf
loop
xchg
mov
dec
outsb
rolb
add
jno
sarl
aas
dec
imul
mov
or
out
addl
jae
cs
xchg
jmp
rcrl
imul
gs
or
xchg
lahf
mov
std
sarl
mov
popa
and
jle,pt
fdivrp
lds
mov
jge
rcll
jb
test
mov
arpl
lods
mov
jmp
pop
jmp
loope
inc
dec
push
dec
movsb
cli
lahf
xchg
add
jno
inc
in
xchg
mov
sub
popa
addl
pop
sub
ret
jecxz
out
cmp
push
aad
jb
inc
rcrl
ficoms
in
or
mov
in
dec
pop
imul
sub
adc
sub
repz
shlb
mov
xlat
dec
push
and
and
pop
mov
imul
out
pusha
lods
dec
xor
xchg
push
cltd
rcrl
add
add
inc
enter
pushl
cld
sbb
jae
add
add
aam
out
aas
dec
mov
iret
push
loop
outsl
insl
inc
push
out
or
call
pusha
repz
sbb
and
mov
cwtl
addl
rorl
xchg
xchg
ja
test
xor
jnp
test
mov
sbb
xchg
pop
enter
pop
sahf
or
nop
movsl
dec
cmp
stos
out
fmuls
jmp
inc
in
jge
pop
icebp
xchg
into
adc
pop
jecxz
dec
lret
in
loope
fcmove
mov
fdivrp
mov
loope
popf
cmc
lods
pop
cmp
and
repnz
cmp
mov
movsb
xor
lods
add
jo
mov
pop
cmp
dec
cmp
cmp
adc
ret
and
incb
xor
and
jecxz
pop
xchg
imul
inc
stos
sbb
sbb
icebp
jge
lret
sbb
sub
mov
push
out
mov
add
xlat
pushf
shrb
lcall
mov
dec
jg
ret
add
xchg
and
cmp
adc
into
dec
or
imul
jecxz
insb
movsl
pop
aad
ret
test
jne
cmp
pop
popa
sub
cmp
jg
fdivrs
nop
mov
fsubrs
inc
jp
sbb
or
cltd
in
push
roll
sub
adc
xor
scas
xchg
aaa
cmp
lcall
and
push
pop
push
add
push
andb
or
pop
or
pop
xchg
es
or
xlat
cltd
and
sub
xor
outsb
pop
jno,pt
cld
inc
shll
xchg
add
fildll
xchg
stc
mov
cmc
mov
or
push
sahf
pop
sbb
orb
mov
fadds
addb
es
aaa
dec
bound
sbb
addb
xchg
jg
pop
loopne
bound
jne
xchg
add
add
test
mov
aas
scas
fnstcw
mov
add
dec
jmp
in
xor
and
mov
movsl
push
and
pop
mov
out
std
sub
jnp
lret
or
jae
cli
sbb
aas
or
inc
int
out
ret
mov
sbb
sbb
and
addr16
std
or
imul
nop
or
sub
xor
adc
ret
inc
jmp
and
adc
xor
mov
hlt
push
mov
push
sbb
sub
adc
cmc
lock
mov
sub
repnz
mov
pop
push
xchg
test
movsl
jnp
les
int3
mov
cmp
fwait
adc
push
iret
stos
push
das
fsub
fcoml
pop
sti
movsb
out
pop
lahf
dec
popf
insb
mov
and
insl
ss
adc
scas
mulb
add
pop
adc
pop
pushf
dec
dec
pop
arpl
cmp
fimuls
and
add
jg
jne
jne
jg
loop
mov
into
add
add
insl
mov
push
mov
pop
aaa
mov
xchg
adc
xor
ja
mov
imul
adc
out
test
ljmp
jbe
cmp
jnp
sub
arpl
rolb
sbb
mov
push
adcl
cmpsl
dec
mov
cmpsb
fiadds
xchg
jmp
inc
pop
xor
loopne
xchg
dec
out
or
out
lods
aad
pop
push
mov
jp
sub
orl
xchg
fwait
and
xorl
inc
andb
std
incb
imul
adc
imul
push
xchg
shll
pushf
xchg
xor
sub
mov
decb
shll
mov
movsl
fwait
cmp
or
jbe
cmc
cltd
imul
add
adcl
jg
dec
out
add
add
dec
pop
mov
cmc
mov
lea
add
add
cmp
adc
mov
jae
or
sub
mov
sbb
ja
in
jp
icebp
lods
push
push
push
xlat
enter
pushf
mov
adc
dec
shrb
dec
scas
jecxz
shr
sti
mov
insb
adc
dec
sub
jo
arpl
lret
xchg
shl
mov
push
iret
mov
insb
dec
dec
addr16
sub
shl
adc
pop
mov
pop
je
mov
and
xchg
pushf
cmp
jne
stos
mov
dec
vmovapd
std
add
mov
imul
int
into
add
mov
mov
insl
je
jbe
subb
cld
or
fwait
inc
testb
inc
lcall
lods
imull
xchg
push
fisttps
bound
lcall
psubusw
adc
mov
out
mov
sbb
push
enter
inc
addr16
repnz
add
outsb
jle
lods
testl
movb
add
xlat
mov
fcmovb
pop
movsb
sub
pop
imulb
dec
cltd
aas
mov
mov
movsl
xchg
ret
dec
sub
pop
in
jl
pop
roll
fistps
fisubrl
ss
orl
frstpm(287
shlb
mov
pusha
push
pop
pushf
inc
jmp
add
push
aam
int3
aas
ja
je
in
int
cmp
fwait
pushf
jo
je
push
mov
cmp
cwtl
popa
loope
fnstenv
fcomip
xchg
add
dec
xchg
enter
add
insl
pop
pusha
rol
add
cmc
jl
dec
int3
and
in
daa
jp
jmp
data16
stos
inc
cmp
mov
pop
and
push
mov
loopne
adc
negb
and
push
push
xchg
insl
cmp
fistpl
insb
clc
repz
push
cmp
mov
repz
mov
inc
pop
mov
shlb
jb
repnz
add
mov
xchg
insb
xor
movl
add
xor
inc
jnp
mov
fnsave
inc
inc
mov
int
add
mov
aad
pushf
fidivs
cmpsb
adc
xchg
cmp
iret
push
jno
sub
xchg
test
sti
loopne
pop
add
xor
or
scas
lret
rorl
pop
or
adc
fsub
in
cmpsb
push
mov
cmp
into
xchg
mov
popf
push
jl
cmpsb
xchg
insl
jno
dec
fidivl
fnstcw
push
jo
dec
mov
sub
negl
popa
mov
pusha
enter
sub
cmp
mov
inc
push
outsl
scas
lret
loop
daa
inc
mov
out
dec
jmp
mov
bound
std
cltd
cmp
mov
movsb
rorl
fwait
xchg
fs
in
pushl
jbe
mov
movsl
sbb
lret
sub
dec
dec
jp
sbb
lods
cs
or
pop
negb
adc
sub
add
test
sbb
xlat
in
aad
adc
mov
add
sub
das
clc
aad
jb
mov
loope
and
mov
sub
imul
addr16
inc
out
xchg
cmc
dec
fnsave
stos
and
aam
xchg
test
and
cmc
dec
aaa
pop
scas
sahf
stc
cli
sbb
push
sbb
fucom
xchg
mov
add
inc
loopne
or
cmc
cmc
dec
sar
pushf
or
inc
push
jecxz
mov
jle
xchg
incb
jbe
jb
fldt
outsl
inc
push
aaa
ja
in
jmp
sub
mov
cmp
xchg
cmp
lock
push
dec
and
pusha
mov
out
mov
mov
jns
pusha
push
insl
mov
jbe
addl
mov
insb
je
xor
ljmp
flds
rorl
stos
cwtl
pop
mov
jecxz
cmp
loope
add
sbb
or
daa
lods
adc
add
ds
sub
cmp
jg
and
mov
mov
add
add
test
sbb
scas
cli
xor
cmpsl
mov
mov
pop
sub
fiadds
bound
sub
add
jno
aaa
data16
pop
fwait
inc
inc
in
and
mov
adc
jne
dec
xchg
shll
xchg
rcll
mov
mov
mov
inc
push
mov
xchg
loopne
cmp
dec
fcmovnbe
fldl
pushf
dec
push
jl
inc
mov
pop
pop
scas
rcll
jge
in
ss
dec
ret
or
test
add
out
cmpsl
test
mov
mov
ficompl
pusha
scas
fadds
dec
push
xchg
in
in
cmpsl
mov
inc
test
int3
hlt
mov
jecxz
sbb
lock
subb
mov
mov
or
and
or
fcmovne
fdiv
dec
pop
ljmp
imul
add
xor
fistpll
out
repz
fcoms
scas
into
push
lret
add
xchg
cltd
es
stc
dec
insl
xor
xchg
xchg
xchg
in
push
jno
push
scas
pop
sub
fwait
cmp
aam
aas
jge
hlt
xor
push
fnstenv
and
arpl
sbb
sub
nop
cwtl
or
mov
testl
push
sahf
pop
sbb
mov
jecxz
fs
mov
pop
add
add
and
xor
xor
add
inc
dec
dec
jbe
out
or
mov
mov
hlt
cmpsb
push
or
mov
ds
sub
nop
adc
clc
sbb
adc
jnp
mov
adc
fstpl
xor
movsb
cmp
inc
stos
ja
cmp
jg
test
jne
and
jle
out
out
push
pushf
inc
push
lcall
mov
jbe
jno
xchg
data16
xchg
das
inc
add
add
add
add
mov
mov
notl
add
add
inc
inc
push
sahf
cmp
push
dec
aaa
psrad
mov
fcoms
and
daa
cmp
pusha
bound
ret
mov
aas
and
insl
xchg
mov
iret
xor
mov
inc
mov
add
xor
jp
mov
push
fs
lret
lock
sbb
and
dec
jbe
cmp
dec
push
dec
cld
add
imul
ficomps
and
mov
push
pop
mov
cmp
push
mov
scas
rcl
pop
adc
imul
in
mov
mov
icebp
ds
inc
xor
adc
mov
imul
cmc
push
jo
roll
fwait
and
test
push
xor
divl
out
mov
sub
mov
xor
imul
pop
loopne
xor
cwtl
push
mov
shll
flds
mov
add
stc
enter
in
sbb
push
inc
shll
enter
add
add
jecxz
mov
sub
push
jl
push
jmp
mov
xchg
fidivrs
xor
inc
andb
shll
jbe
decl
pop
xor
and
dec
inc
iret
sub
popa
pop
rcrl
int3
pop
mov
xor
outsb
mov
es
lods
cwtl
mov
mov
sub
repz
fistpll
test
mov
fadd
jge
xchg
jns
jbe
xor
loopne
xor
fists
inc
jnp
neg
pop
ds
mov
adcb
dec
lcall
jae
jg
or
int3
jle
xchg
nop
fsub
push
out
pop
ret
push
push
xchg
shlb
xchg
pop
je
xchg
cmc
jecxz
xor
les
pop
sbb
or
push
pop
test
fwait
loopne
push
push
jo
jge
dec
popa
mov
xchg
mov
or
fs
pushf
fsub
add
add
imul
cmc
call
inc
push
popa
add
int
add
popf
mov
and
jp
and
lods
dec
daa
in
mov
inc
in
loopne
scas
pop
cmpsb
daa
cmpsl
adc
pop
idivl
les
add
push
or
and
mov
push
inc
or
jno
sub
stc
icebp
sub
lea
std
push
pop
jnp
sbb
bnd
pop
andb
or
xor
call
fsubl
addl
popa
dec
or
outsl
insl
push
xor
mov
inc
scas
xchg
add
push
jo
sbb
test
mov
out
mov
loopne
lret
push
xchg
sbb
inc
pop
jbe
push
gs
xchg
int3
call
inc
add
adc
les
roll
pop
mov
rolb
notl
fs
gs
dec
cmp
sub
lds
andb
add
test
mov
push
sub
add
add
ja
iret
sub
loope
fbstp
add
xlat
sub
jp
adc
insl
sbb
in
fidivl
sbb
xchg
out
mov
loopne
mov
sbb
adc
idivl
bound
sub
popa
subb
push
sub
jle
js
insb
jae
cmpsb
shrb
jno
push
lock
fimull
push
clc
mov
push
clc
lods
jns
movsb
mov
cs
sub
pop
or
in
insl
ret
int
popl
jle
mov
cmp
out
pop
divl
fwait
dec
sub
inc
mov
es
mov
mov
push
cmp
fsubrl
pop
addr16
pop
xchg
sbb
mov
dec
aam
sbb
mov
lret
mov
push
clc
xor
aam
dec
loop
movsl
push
das
ds
adc
xchg
inc
imul
xor
pop
xor
into
push
jb
or
mov
adc
inc
ret
daa
arpl
in
stos
xor
into
mov
xlat
js
add
mov
out
out
out
into
gs
cld
test
repnz
mov
add
add
cs
pop
sbb
sbb
adc
les
icebp
es
lock
pop
adc
lods
inc
sti
sub
mov
mov
dec
xor
cmp
pop
mov
adc
test
sti
arpl
jl
inc
jno
sub
adc
dec
add
push
mov
inc
jnp
out
jge
push
mov
mov
and
inc
jg
stc
andb
mov
and
jecxz
mov
in
fbld
sub
xchg
push
cmp
xchg
mov
adcl
int3
cmp
mov
ja
in
inc
fisubrs
xor
dec
cmp
daa
jge
pop
in
mov
push
addr16
addr16
jbe
fdiv
xor
jbe
push
jge
dec
mov
mov
bnd
dec
out
jmp
test
lods
jp
ljmpw
inc
jae
aad
bound
insl
xor
xorb
pop
add
sbb
inc
xchg
push
jmp
stos
add
add
xchg
and
je
out
mov
jge
add
add
ret
xor
jmp
stc
cmp
cmp
xadd
pop
movzbl
jns
cli
push
lods
push
xchg
mov
cmp
loop
pop
enter
lds
cmpsl
leave
jmp
mov
jecxz
mov
cmpsl
or
test
ret
stc
cmp
in
jmp
and
inc
test
and
cwtl
and
mov
pop
sub
sub
xchg
pop
sub
sbbb
test
addr16
rcll
mov
dec
cld
sub
adc
jnp
pop
dec
push
iret
loopne
push
jno
cmp
sub
rcll
pop
sub
int3
mov
dec
test
pusha
lea
loop
dec
sarb
aas
cli
sub
scas
push
js
fbstp
mov
lds
imull
xor
jo
and
sub
or
adc
mov
je
cltd
lcall
loopne
push
movsl
mov
add
add
dec
daa
dec
das
outsb
imul
push
xchg
in
adc
roll
add
and
outsb
aas
cs
dec
imul
std
rorb
xchg
and
in
dec
into
or
push
int
stc
inc
fdivp
lea
nop
pushf
xor
mov
jp
stos
xor
add
xchg
jnp
fisubs
add
pop
cmc
loope
sbb
pop
inc
scas
xor
push
xchg
mov
xor
filds
mov
movups
push
and
inc
lods
ja
xchg
jg
pop
inc
ljmp
movsl
int
push
popa
dec
lods
roll
stos
inc
add
iret
ret
mov
jecxz
ja
sbb
mov
jg
mov
popf
test
push
xchg
into
fwait
int3
mov
sbb
adc
stos
fs
or
je
jecxz
push
or
adc
push
and
pusha
add
sti
inc
insl
idiv
test
pop
push
and
cltd
mov
clc
add
call
rcr
jg
xchg
add
add
popf
mov
lahf
ret
or
rolb
add
sti
cmpsb
test
mov
mov
cmc
rcll
pushf
mov
jo
sbb
push
ljmp
icebp
dec
cmp
xchg
mov
mov
and
sub
cmpsb
hlt
inc
pop
mov
rclb
sub
jnp
add
sbb
ljmp
sub
cltd
mov
into
add
adc
sahf
mov
mov
fidivrl
adc
or
iret
repz
js
test
lods
ds
sbb
xchg
xchg
mov
hlt
lahf
or
stos
adc
inc
push
push
pop
fs
or
xchg
mov
fdivrs
mov
loopne
fcompl
cli
pusha
jno
js
lock
push
arpl
repz
mov
or
jmp
outsl
jne
and
sbb
jbe
jo
mov
add
add
mov
mov
mov
pop
xchg
or
ror
add
add
push
and
aas
ret
push
push
jb
fsts
lds
and
xchg
fisttpll
mov
bound
push
mov
jmp
das
pushf
mov
or
lock
adcl
fwait
test
lods
inc
cmp
ds
addb
scas
imul
mov
arpl
lods
mov
sbb
adcb
or
lods
xchg
rorl
out
out
sub
fnstsw
mov
jp
sub
push
dec
pushf
dec
icebp
or
push
push
movsl
jne
and
mov
cmc
pop
bound
mov
sti
pop
out
insb
cs
push
mov
jnp
mov
ret
fmul
test
dec
fisubs
mov
push
lods
aad
aam
fwait
sahf
lea
pop
cwtl
sbb
inc
lret
pop
out
aam
adc
cs
add
add
sbb
sub
dec
push
popf
sub
add
mov
lret
xor
aas
notl
jg
cmp
mov
jns
test
scas
ficomps
xor
push
sbb
fsubl
mov
pop
inc
jbe
cmc
mov
push
popa
inc
mov
lea
fcomp
dec
jb
mov
insb
xlat
fbstp
sub
mov
push
add
daa
push
add
mov
cs
mov
jb
inc
or
cmp
imul
cmp
into
ret
test
shrl
cmp
jle
jno
mov
jns
xor
insl
test
xchg
inc
inc
iret
jns
pusha
mov
loope
sti
lods
lods
pop
in
and
pop
dec
mov
neg
mov
xor
cs
fsub
push
push
push
xchg
jp
fildll
fnsave
aam
dec
push
adc
clc
fnsave
in
mov
add
mov
pushf
adc
ds
jae
enter
aad
add
xor
arpl
sub
xchg
dec
mov
lcall
dec
xchg
stos
or
sbb
repz
add
outsl
xchg
dec
js
cwtl
and
aaa
pop
mov
or
mov
sbb
xor
pop
hlt
xor
stc
push
cmpsl
cmp
sbb
mov
imul
xor
mov
jg
jns
mov
cmp
out
outsb
jbe
aaa
mov
xor
imul
test
mov
jno
sub
jg
in
scas
lahf
sub
hlt
pop
arpl
lret
lods
pusha
addr16
inc
test
fs
clc
sub
mov
out
and
cmc
cmp
ss
pop
push
xor
call
imul
leave
push
xor
stos
testl
jmp
push
dec
and
incb
ljmp
add
add
lcall
jnp
mov
add
add
enter
sub
inc
xor
mov
dec
mov
mov
shl
add
fs
xor
pop
sti
cld
jmp
test
pop
add
push
pop
out
push
sub
pop
dec
push
add
popa
lret
adc
ss
icebp
jnp
sub
roll
out
in
push
ret
cmpsb
pop
or
xchg
inc
lret
cmp
aam
mov
adc
jecxz
mov
fwait
push
jb
in
or
mov
cwtl
push
rcrb
mov
ljmp
inc
xor
enter
jns
icebp
jb
hlt
int
mov
add
pop
outsl
iret
fstps
cmp
ja
xor
jle
xchg
outsl
adc
cmpsl
mov
push
in
test
aam
mov
lea
rorl
outsb
sar
lods
xchg
dec
popa
pop
cli
shll
jg
icebp
lret
mov
push
or
jle
cmp
fbld
add
xchg
ja
push
jg
leave
or
rcr
ja
xlat
add
add
add
test
cmc
add
mov
outsl
xor
xchg
and
ss
sahf
xchg
movsl
in
stos
pop
xor
jns
mov
adc
mov
adc
push
in
mov
dec
insb
jb
andb
inc
inc
pop
jno
outsl
pop
and
mov
rorb
dec
ret
adc
pop
jae
push
sbb
insb
dec
loope
dec
and
xchg
cwtl
fsqrt
inc
aad
daa
lea
fwait
push
loopne
or
mov
add
in
adc
xchg
and
popa
push
mov
mov
xchg
scas
push
cltd
sub
cmpl
pop
mov
jge
sti
ds
cmpsb
roll
and
insl
out
push
das
mov
jle
mov
fdivl
out
cmpsb
lahf
dec
and
and
lds
pop
jns
push
dec
jbe
icebp
push
jecxz
in
les
into
sub
mov
add
imul
xchg
movsb
cmp
xchg
out
add
add
lahf
jmp
sub
test
ret
aaa
adc
pop
test
les
mov
xchg
inc
arpl
push
cwtl
or
push
scas
clc
and
add
jne
mov
xorb
xor
fsubs
lods
mov
xor
movl
inc
mov
call
movsb
sysexit
push
data16
mov
push
cmpl
pop
je
mov
jbe
cwtl
add
loopne
mov
sub
lock
scas
cmc
sbbl
mov
jnp
out
mov
pushf
in
mov
mov
cs
bound
pop
ss
push
pop
sar
mov
stos
sbb
test
push
inc
mov
sbb
fadds
pusha
movsb
int3
shll
aaa
mov
fwait
mov
dec
xor
lods
cwtl
xor
test
fs
addb
add
psubusw
push
in
sub
jno
flds
add
jmp
and
mov
pop
lahf
enter
aaa
fisttpl
dec
mov
pushf
out
dec
int
cmp
pop
push
jmp
mov
daa
mov
out
sub
hlt
sbb
faddp
dec
cmp
inc
stos
pop
arpl
pop
push
lret
dec
and
xchg
mov
cmpsl
push
inc
xchg
fsubrs
push
pop
fimuls
in
xorl
push
cmp
addr16
dec
cmc
daa
or
test
mov
pop
in
nop
sub
push
aas
dec
pop
arpl
push
outsb
mov
lret
mov
cli
test
aad
mov
sub
fldt
scas
leave
bswap
repnz
mov
rcr
test
and
pop
fnstsw
xchg
cmp
shll
jle
or
nop
pusha
pop
out
cmp
pop
popf
fcompl
test
xorl
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
add
add
pop
push
pop
pop
xor
mov
mov
pop
jecxz
out
jmp
jne
sysret
iret
dec
add
push
bound
push
test
and
and
popf
push
sar
add
jno
and
push
ficoms
cmp
jmp
shlb
and
aas
inc
inc
xor
aam
divl
sub
inc
lahf
push
das
mov
and
ret
xor
jle
push
pop
arpl
pop
repnz
dec
cmpsl
rol
cmp
sbb
std
inc
dec
xlat
out
lcall
jle
aaa
aas
scas
inc
repz
cmp
pop
repnz
mov
mov
or
cld
mov
xor
pop
and
and
movb
fstpt
cli
pop
push
mov
mov
push
aam
nop
lock
orl
inc
fisttpl
xorb
rep
xorl
je
sbb
add
pop
dec
jle
jg
std
fstpt
rcrl
cmc
fildl
add
or
insl
les
imul
jmp
or
div
mov
pop
testl
jp
es
and
cmpsl
lds
icebp
xchg
inc
cmp
xor
xchg
sti
cmp
shlb
fisubl
and
sub
sub
and
fcmovbe
jo,pn
push
cmp
pop
pop
fwait
or
ret
push
xchg
into
test
pushl
or
fstp
sarl
jg
inc
xlat
dec
pop
mov
cmpsb
imull
ret
jmp
dec
or
je
xchg
out
fdivs
outsb
outsb
dec
and
mov
in
dec
rclb
pop
push
cmp
push
pusha
adc
mov
jno
jmp
popa
movsb
gs
adc
and
inc
pop
outsl
es
adc
sbb
testb
xchg
icebp
jecxz
nop
outsb
int
or
popf
xchg
pop
outsb
cli
movl
add
cmp
ljmp
lds
add
add
sbb
iret
mov
fldln2
stos
stos
ja
pushf
aas
in
xchg
mov
rorb
rorb
cmpsb
adc
cmp
stos
jnp
adc
out
arpl
xor
dec
std
pop
movsl
jmp
insb
mov
jbe
rcl
inc
fstl
fst
repz
cmp
and
pop
sub
mov
outsb
inc
stos
lret
pop
or
mov
and
outsl
sub
dec
xor
imul
sti
mov
aas
xor
mov
jge
dec
dec
lea
into
leave
sahf
sbb
repnz
lret
cmpsl
adc
clc
push
lods
pop
insb
scas
stos
inc
adc
xchg
dec
clc
pop
cmp
popf
bound
add
jge
mov
jne
cmpsl
push
ret
popa
xor
sbb
xor
xor
xor
dec
pop
cld
in
scas
out
add
stos
dec
mov
cmp
jnp
ret
pusha
mov
add
add
sbb
jmp
scas
inc
call
fldl
add
mov
ds
pop
xorb
inc
add
lcall
sbb
add
inc
je
xor
push
ljmp
push
lods
and
inc
jle
mov
dec
adcl
fldl2e
jecxz
loop
outsb
xor
in
fisubs
add
imul
leave
in
aaa
pop
cwtl
mov
shrl
push
sub
push
mulb
push
test
rorl
sbb
xchg
or
imul
fbstp
popf
cmp
in
stos
aaa
data16
test
cmp
pushf
js
jmp
int3
push
lcall
cmp
sub
adc
mov
into
lock
in
pop
mov
mov
int3
sub
imul
add
cli
lock
fisubrs
mov
lahf
cmp
in
fsubs
sbb
call
fwait
inc
add
add
push
out
faddl
shl
filds
add
daa
call
pop
push
cmp
inc
xlat
cmp
mov
add
inc
rorl
dec
fcmovnu
sub
aad
mov
sbb
adc
mov
mov
pop
dec
je
sbb
mov
cmp
mov
pop
fstps
stos
dec
sbb
movb
xor
repnz
or
xor
movl
lea
gs
rorl
lock
xchg
clc
insl
inc
xchg
cld
pop
lods
mov
xchg
test
aas
sbb
scas
inc
jo
nop
lahf
pushf
lea
and
stos
mov
movsl
out
fwait
or
pushf
jo
mov
fsubl
in
idivl
stos
mov
mov
and
lahf
mov
repnz
and
int3
adc
or
dec
sub
inc
inc
adc
mov
hlt
pop
in
push
add
or
jmp
mov
icebp
push
stos
ret
cmp
add
add
mov
lcall
fisttps
or
or
add
add
fcoml
stos
jb
inc
fisttps
cmpsl
insb
sarl
push
out
insb
insb
rorb
adc
mov
cltd
pop
imul
or
pop
mov
insb
sahf
dec
rcll
dec
hlt
pop
fdivrs
js
xchg
sub
mov
mov
cli
leave
jl
xchg
xchg
jmp
ret
xchg
in
icebp
dec
adc
loop
dec
jge
mov
xchg
mov
or
ja
movsb
call
rclb
fidivrl
mov
push
aam
jae
xorl
jg
movsb
or
ja
adc
or
movsl
sub
push
scas
mov
sbb
int
jb
jmp
addr16
adc
push
mov
or
out
add
sub
push
shr
xchg
lea
xor
les
fstl
cmpsl
pop
subl
mov
les
ljmp
jbe
add
sbb
jns
xchg
xchg
mov
les
push
loope
add
dec
div
pop
in
imul
sbb
adc
cs
inc
push
and
push
incl
mov
sbb
xor
sub
mov
pop
out
sbb
xor
gs
shl
fwait
leave
mov
and
sbb
push
mov
movsb
arpl
bound
mov
mov
pushf
out
negb
mov
pop
sbb
fadds
xchg
mov
cmpsl
ret
add
xor
bound
mov
mov
add
mov
adc
sbb
cltd
or
int
add
dec
and
or
or
out
inc
rol
mov
mov
test
dec
in
lods
add
out
inc
adc
sbb
add
xor
sub
or
push
jns
cmpsl
or
hlt
testb
js
iret
xor
add
fadd
fsubp
jnp
or
cld
adcb
add
add
push
ret
cmp
les
dec
dec
and
inc
inc
fimuls
sbb
ds
adc
or
mov
push
rol
xor
push
cmp
fistl
gs
inc
xchg
push
lds
scas
and
jno
stc
test
sbbl
sahf
clc
fldl
xchg
outsl
pop
xor
insl
sub
rorl
mov
ret
les
std
jge
into
mov
xchg
pop
jae
mov
add
pusha
jae
pop
xchg
lcall
cmc
push
cmc
xchg
shll
fadds
aaa
fstpt
pop
mov
sub
nop
sti
adc
xor
mov
mov
cmpsl
mov
cmp
cmpsb
insl
pop
adc
push
mov
mov
in
cmpl
sbb
lods
stos
sbb
and
pushf
cmpb
insl
inc
xor
mov
sbb
es
notl
add
add
sub
cld
cli
jle
dec
nop
xor
jecxz
add
sub
mov
mov
and
subl
fadds
leave
and
aaa
dec
xor
xlat
xchg
cmp
and
adc
loope
xor
out
outsl
mov
or
ljmp
or
les
push
xchg
push
in
xor
adc
popf
mov
loop
push
push
cmp
or
pop
daa
mov
js
clc
shll
pop
add
mov
jle
cmp
aad
and
ds
sbb
or
and
push
dec
mov
jge
or
adc
sbb
sub
jge
fdivrp
cmovl
arpl
lret
dec
nop
test
mov
daa
mov
jns
dec
arpl
mov
sbb
inc
jo
repnz
xchg
sub
add
push
mov
lea
pop
jbe
ja
sti
aaa
out
ja
lahf
sub
sbb
add
add
jmp
aad
repz
sub
sti
push
popa
mov
jle
aam
icebp
and
cmp
enter
cli
mov
enter
popf
mov
sbb
sub
stc
andb
mov
or
push
fidivrl
jecxz
sbb
sbbb
mov
jmp
xorl
loopne
add
and
lea
jae
push
add
int3
mov
in
cmc
add
push
jp
fs
mov
lahf
js
inc
mov
or
or
xchg
incl
pusha
push
push
sub
adc
in
mov
push
int3
fadds
pop
adc
hlt
mov
xchg
xchg
pop
cltd
cli
inc
repnz
and
pushf
outsb
cmp
dec
ss
aad
inc
sub
mov
outsl
xchg
mov
stos
sbb
pop
and
adc
xchg
in
xchg
pop
aaa
and
dec
add
add
into
arpl
pop
xchg
aaa
pushf
shll
lea
in
add
dec
xlat
test
pop
xchg
adc
rcl
xor
pushf
fcompl
cwtl
test
cmp
cmp
push
pop
pop
jnp
es
cmc
mov
mov
or
pop
int
mov
lds
xlat
pop
jp
push
sub
jb
xchg
out
xchg
ret
in
aas
dec
les
lahf
push
test
mov
inc
mov
jno
les
push
pop
cmpsb
jmp
test
fcmovnu
in
sub
dec
dec
push
mov
imul
lds
mov
clc
insb
inc
pop
xchg
push
leave
je
mov
das
das
ror
mov
popf
stc
outsl
jo
pop
imul
fmuls
divl
push
insb
xchg
mov
popa
xchg
xchg
test
adc
push
loopne
cwtl
push
lcall
inc
mov
xor
in
cs
enter
cmpsb
pop
fcmovne
orl
dec
sldt
add
ja
lcall
mov
daa
daa
out
add
lahf
fwait
sbb
das
insb
sub
stos
mov
and
sbb
xor
push
lock
or
cmpsl
xchg
jbe
jne
aaa
or
pop
push
adc
subb
sub
cli
push
jp
adc
int3
inc
xor
or
adc
xchg
cs
mov
mov
outsl
out
pop
xchg
cld
cmp
jg
sub
add
pusha
adc
call
pop
repz
mov
mov
adc
jg
fsub
jle
cmp
sub
pop
add
mov
or
js
or
daa
nop
inc
popa
pop
scas
das
jecxz
lea
inc
in
cmp
and
outsb
aas
pop
add
loope
inc
fcoms
inc
outsb
leave
sbb
lahf
or
pop
shrb
xchg
adc
nop
roll
lods
add
add
add
lock
jg
in
and
rcrb
sub
add
add
fs
push
sub
in
movsl
into
inc
idivb
rorl
neg
out
mov
std
xlat
lods
out
cmp
adc
mov
fbld
std
dec
inc
and
dec
inc
mov
insl
lcall
pop
inc
mov
enter
daa
xchg
cmp
repnz
notb
jb
and
int3
xchg
fsubs
pop
push
add
xchg
add
ljmp
cmpsl
cli
sub
cli
movsl
pop
and
cmp
pop
mov
mov
test
cmc
xchg
sahf
and
movsb
push
mov
and
testb
dec
adc
pop
leave
ret
out
mov
dec
movsl
loope
mov
ljmp
jle
pusha
or
mov
ljmp
push
jns
insl
or
cmp
mov
mov
pop
xlat
test
pop
xchg
push
xchg
inc
and
mov
or
jae
sbb
add
add
pop
xlat
fistpl
or
and
call
add
ret
push
es
pop
add
sarl
fisubrl
and
in
mov
and
fcoms
das
sub
nop
and
push
gs
jne
xor
mov
mov
outsl
or
pusha
bound
jno
fadd
popf
out
clc
xchg
lahf
shlb
and
repnz
test
addr16
ss
sub
or
adc
sub
xchg
fdivrl
mov
notl
in
push
fld
fldenv
sub
jge
sbb
gs
pop
mov
cmc
mov
insb
test
push
stc
mov
xchg
xor
sub
sbb
xor
pop
push
mov
push
mov
jp
dec
ror
lahf
mov
enter
arpl
arpl
or
jmp
dec
push
lods
daa
sbb
sub
mov
cmp
bound
ss
mov
clc
bound
add
stc
mov
dec
js
stc
mov
dec
int
or
jg
jmp
add
adcb
or
and
sbb
adc
scas
xor
fidivrl
loopne
cld
shll
cmp
sbb
adc
imul
or
sub
in
xor
cmc
js
lahf
cld
and
pop
rol
loopne
shlb
out
fisttps
push
mov
pop
dec
push
inc
out
adc
roll
jbe
cmp
fldt
sub
adc
out
icebp
push
xor
lods
cmc
nop
outsl
sub
inc
mov
xchg
fidivrl
bound
sbb
notb
repnz
and
rcrl
ficoml
xor
cmp
imul
mov
sub
test
int
je
popa
lahf
rolb
dec
push
or
mov
inc
les
mov
mov
xchg
dec
cmpsb
insl
add
sub
scas
movsl
sbb
mov
xchg
pusha
pop
stos
push
loopne
pop
mov
addl
loope
and
add
add
insl
repz
fwait
jns
jns
test
fdivrl
ljmp
imul
adcl
adc
mov
rcr
cs
outsl
jns
mov
pop
and
cmp
lock
sub
outsl
pop
imul
sub
xlat
mov
add
shrl
mov
xchg
roll
jbe
adc
je
push
mov
and
std
inc
iret
icebp
adc
scas
stos
push
clc
call
jmp
sti
clc
dec
lahf
lds
sbb
dec
cmp
js
cmpsl
enter
mov
jbe
aad
scas
ss
xlat
leave
add
jl
ror
xchg
inc
repz
push
pop
out
xor
sbb
pop
and
adc
cwtl
stos
out
nop
je
mov
mov
dec
lcall
mov
mov
xchg
test
repz
shrl
cltd
xor
push
out
pop
dec
and
mov
out
jb
jp
fcompl
push
add
add
mov
pxor
jnp
adc
jne
lahf
mov
add
add
jo
imul
dec
roll
out
enter
ljmp
and
xor
adc
neg
dec
imulb
addl
mov
add
xchg
outsb
or
or
push
dec
stos
pop
shrb
adc
out
xlat
dec
or
fisubl
repnz
outsl
xor
sbb
fsubp
loop
idivb
push
xor
in
outsl
test
sti
leave
mov
ret
and
cltd
add
push
and
mov
adc
sahf
xor
push
mov
in
outsl
cmp
mov
push
in
pop
jno
mov
mov
test
int3
pop
lock
push
xchg
sub
das
scas
push
mov
pop
cmpsl
mov
dec
incl
ret
rorb
mov
lret
and
fs
add
cli
xor
rclb
addl
repnz
lahf
push
loope
pop
add
out
adc
or
int
or
sar
add
add
add
subb
fistl
das
cmpsb
jns
jno
in
add
add
mov
lods
call
lret
leave
roll
iret
shrl
outsb
cmp
sarl
adc
xchg
xchg
pop
cmp
pusha
or
sbb
sbb
pop
add
pop
imul
insb
sbb
fwait
sub
out
cmpsl
jl
inc
pop
out
adc
test
and
and
inc
inc
icebp
les
mov
mov
push
cmp
or
std
mov
sub
mov
loop
pop
lret
pop
mov
sub
test
push
fists
xor
dec
or
stos
inc
clc
mov
fcomp
push
and
cmpsb
mov
push
jne
dec
jne
out
push
decl
sub
dec
hlt
inc
push
add
jns
push
iret
xor
mov
mov
gs
mov
les
xor
mov
orl
add
jb
scas
decb
fisttps
or
add
out
xchg
imul
add
inc
adc
jae
mov
inc
out
mov
lahf
ljmp
adc
cwtl
add
adc
in
xchg
or
dec
mov
ret
xchg
ret
add
mov
ja
adc
rclb
dec
sub
imul
in
dec
cli
loope
das
insl
xor
pop
push
mov
movsb
orl
pop
aaa
sbb
cmp
ds
dec
test
je
lcall
adc
lret
dec
push
xor
in
xchg
in
fcmovb
and
mov
pop
add
testl
test
sahf
adc
and
insb
movb
pop
jmp
xor
daa
pop
jle
negl
mov
push
iret
sbb
mov
or
out
je
push
cmpsb
push
inc
or
inc
dec
stos
enter
insb
sbb
add
add
xlat
mov
xchg
hlt
jbe
inc
dec
out
add
add
int
scas
xchg
sub
and
fsts
or
jge
mov
jbe
test
xchg
clc
adc
mov
cmp
sub
xor
sbb
dec
sub
out
inc
jbe
adc
call
dec
mov
or
jle
in
dec
push
test
rep
pop
arpl
ljmp
adc
sti
mov
int
lea
mov
icebp
lea
repz
adc
popf
shl
or
sub
aad
aam
cmp
or
test
out
aaa
nop
lock
inc
and
mov
test
int
popa
nop
test
out
and
dec
aad
mov
xor
enter
dec
xchg
push
sbb
mov
sbb
and
xchg
into
jae
scas
shl
sahf
ss
mov
add
add
mov
aas
mov
jle
mov
add
push
xchg
mov
int
cmp
fstps
push
mov
cmp
std
sub
aam
inc
call
popa
in
push
jns
mov
mov
shll
xchg
or
cmp
fcomip
cmpsl
push
ljmp
mov
test
cmc
sbb
clc
push
add
orl
pop
stos
sub
cmp
ljmp
in
mov
mov
loopne
sub
inc
or
leave
insl
mov
jne
cli
push
icebp
dec
fs
stos
cmpsl
jae
push
ds
in
cmpsb
test
jle
mov
or
dec
sarb
repz
outsl
in
adc
mov
mov
fnstsw
jecxz
sbb
xor
adc
cmp
scas
daa
and
xlat
push
mov
nop
les
or
rcll
rclb
iret
xchg
sbb
scas
movsl
add
add
mov
sti
mov
shlb
and
add
add
pop
push
or
sbb
mov
xchg
cmp
les
mov
dec
insl
push
cmp
in
or
lret
dec
pop
jg
jo
outsb
cltd
cwtl
ljmp
sbb
lret
inc
sbb
mov
sbb
and
push
ljmp
fdivl
fbstp
mov
arpl
inc
pushf
mov
scas
pushf
aaa
shlb
sarb
ljmp
mov
inc
push
push
mov
push
dec
cmc
cltd
mov
jp
icebp
xor
adc
xchg
mov
xor
sbb
push
imul
test
adc
and
jns
xor
pop
inc
andb
jnp
jns
shll
test
fs
rcrb
push
mov
arpl
jo
cmp
cmpsl
stos
push
jmp
in
je
movsb
arpl
mov
sahf
pop
cli
pop
xchg
daa
arpl
fldl
add
push
cmp
adc
neg
jge
xchg
jns
jge
jp
pop
icebp
add
add
or
lret
fwait
sbb
int3
sbb
jnp
fstps
int3
ret
repnz
mov
outsl
inc
jnp
loop
add
out
xor
inc
insb
into
iret
leave
pop
jno
xor
icebp
pop
aad
cs
aam
pop
jge
xchg
and
cli
sbb
mov
sbb
dec
hlt
int
out
int
adc
loopne
sbb
lds
xor
mov
into
add
push
mov
mov
nop
push
cltd
gs
jmp
xor
repnz
push
xor
fld
in
popf
fs
cltd
ss
fdivl
aas
mov
imul
push
and
in
or
mov
push
mov
inc
outsb
adc
push
lock
jle
xorl
cmpsl
cli
imul
jmp
dec
pop
inc
sahf
outsb
movsb
ret
sahf
rcrl
daa
cmpsb
xchg
inc
in
lea
cmc
dec
test
pop
cmp
outsl
jg
jg
sub
fucompp
or
add
add
cmc
add
xor
loopne
sbb
mov
lods
sbbw
decl
sub
push
cmpsb
inc
mov
and
mov
or
jo
push
sbbb
inc
xchg
dec
inc
loop
mov
das
int3
inc
cltd
xor
imul
fisttps
bound
nop
test
outsl
fisubrs
cwtl
mov
jo
mov
sahf
popf
in
es
mov
jge
sub
pop
add
test
fisubrl
aaa
int3
xor
mov
push
inc
pusha
scas
add
xchg
pop
arpl
adc
pop
test
mov
mov
popa
inc
xchg
sub
lcall
jns
sbb
adc
mov
hlt
icebp
into
lret
inc
inc
outsl
add
xor
pop
js
aas
and
push
les
jnp
decl
je
xor
push
add
ret
ja
and
aaa
divl
mov
or
add
add
nop
in
push
jnp
inc
cmc
pop
add
rcll
sahf
push
adc
mov
push
sbb
addr16
out
xor
cmp
xorl
shll
cwtl
loopne
push
push
mov
js
adc
add
imul
or
inc
add
mov
inc
cmpsb
add
fldt
mov
jbe
jb
loope
lea
jmp
mov
lahf
xor
pop
cs
mov
add
subb
mov
jb
cmp
mov
out
out
mov
or
or
jmp
jp
lods
sahf
pusha
push
pop
inc
aas
jns
das
icebp
cmp
rorl
and
add
out
idivb
dec
adcb
mov
in
stc
insb
stc
pop
ffree
inc
jb
mov
jg
loope
pop
push
cld
dec
outsl
test
roll
sti
xor
pusha
sub
inc
sub
push
sahf
ljmp
add
mov
cmc
mov
mov
hlt
add
add
push
hlt
pop
xor
jge
mov
jp
xor
jg
out
aad
mov
mov
ljmp
scas
repz
mov
test
mov
andl
dec
cli
inc
pop
jno
stc
inc
mov
xsha256
cmpsb
push
arpl
movsb
movsl
mov
mov
fsubs
gs
jbe
pop
imul
jo
cmp
dec
popa
testb
dec
es
mov
pushf
push
enter
xchg
sarl
sbb
insb
popa
fistl
hlt
sbb
mov
out
fcompl
dec
inc
jp
lahf
imul
sti
test
xor
test
inc
mov
or
shlb
loopne
rclb
jmp
cmp
fs
fnstenv
or
pop
adc
nop
xchg
sahf
xchg
rorl
xchg
mov
adc
mov
add
add
jne
pusha
popf
pop
adcl
cmc
add
add
xor
adc
ret
bswap
adc
adc
imul
mov
push
cmp
pop
jmp
lods
push
inc
leave
aad
lock
pop
jns
jg
out
and
adc
sahf
xchg
stos
mov
sub
jp
xor
xlat
add
aad
inc
xor
pop
into
jbe
mov
shll
and
pop
fidivrs
xchg
mov
jmp
outsb
test
in
adc
jmp
mov
mov
xor
mov
sbb
lods
lcall
sub
or
mov
movsb
and
insb
outsl
idivl
inc
test
mov
adc
push
fcmovnb
xchg
mov
mov
icebp
out
pop
sbb
cmpsl
sbb
test
push
push
fsubrs
outsb
lea
mov
xor
or
hlt
jno
ret
pop
imul
mov
and
add
add
imulb
mul
xor
push
ja
add
add
push
jo
stos
jns
in
xor
popa
jl
push
push
cwtl
cmp
jnp
sbb
rclb
xor
mov
movsl
and
add
int3
push
cmc
jge
in
mov
cli
paddusb
add
out
in
sub
cmp
mov
aas
andb
lds
popa
inc
sub
sbb
subb
outsb
ja
mov
mov
push
jb
cmpl
xchg
and
jge
xchg
or
pop
push
inc
push
or
inc
mov
cmpsb
fildl
loope
andb
insb
icebp
test
adc
repz
subb
daa
fwait
ss
jl
fnsave
mov
pop
mov
in
test
or
jmp
movsb
test
mov
and
fucomi
adc
stc
rcll
pop
dec
mov
xor
outsb
icebp
pop
xchg
push
jne
enter
test
jns
add
ret
add
xor
jb
jae
add
call
add
jno
addl
negl
sub
fldcw
sub
int3
stos
sahf
and
rcrl
pop
push
push
pop
pusha
arpl
push
dec
popf
mov
loop
fadds
sahf
cmp
leave
cmp
nop
mov
adc
popa
push
jns
lret
hlt
ret
pop
inc
repnz
loope
inc
loope
push
aam
jl
ja
pop
mov
xlat
cltd
icebp
stos
jp
add
add
lods
ss
addr16
hlt
mov
lret
add
cmp
xchg
movsl
or
or
iret
push
scas
inc
aad
xor
pushf
je
mov
inc
cmpsl
push
xchg
mov
xchg
es
push
jmp
add
xchg
out
repnz
mov
fcom
sub
pushf
loope
test
in
daa
mov
push
fwait
shrl
adc
cmp
pushf
cwtl
sub
les
adcl
bound
pop
es
jmp
ljmp
jmp
adc
int
in
idivl
js
mov
pushf
pop
jnp
cmp
add
push
aam
adc
sbb
push
xor
or
sbb
adc
je
pop
dec
sti
incl
shr
scas
ljmp
sti
loopne
dec
leave
cmp
shlb
daa
lret
int3
shll
aad
icebp
repz
pop
mov
enter
jle
out
std
imul
inc
loope
test
sbb
icebp
icebp
inc
mov
sub
repnz
cmp
cmpsb
ret
fidivs
pushl
mov
push
out
in
in
add
sbb
jge
mov
ljmp
lret
cmc
mov
xor
gs
je
shl
movsl
js
push
ja
or
adc
loope
jo
int
or
hlt
aas
adc
cmc
or
add
xchg
lahf
sbb
jo
arpl
or
mov
lods
dec
mov
sbb
fdivrl
sbbb
js
shrl
inc
ret
push
loope
in
sbb
mov
lds
and
daa
mov
dec
rorb
or
add
add
jecxz
inc
cli
aas
into
lret
push
dec
push
int3
xchg
add
add
adc
clc
iret
or
fidivs
push
mov
mov
out
pop
push
or
mov
or
and
and
fcompl
je
xchg
xlat
mov
sarb
and
daa
add
rcll
in
adc
pop
pop
test
inc
add
cwtl
loopne
mov
jmp
test
xor
mov
fs
int3
or
push
add
cmpsb
dec
dec
cmpsb
test
clc
ficoml
adcl
add
arpl
inc
xor
sbb
lea
inc
lea
sbb
scas
lods
add
cltd
sub
sub
or
cmc
xchg
rcll
mov
xchg
mov
nop
jl
insb
shrl
ss
or
pop
sub
divb
jl
or
imul
bound
insl
les
jne
add
add
lcall
xor
add
add
nop
ret
inc
dec
dec
dec
jo
fwait
sub
jp
cmp
aaa
jnp
aad
cmp
pop
daa
out
push
gs
or
push
cli
mov
or
adc
inc
add
add
call
loope
inc
xchg
es
add
mov
sarb
fstpt
ljmp
iret
jo
and
sbb
fwait
call
cs
push
in
pushl
add
ret
test
nop
insl
pop
mov
ljmp
xchg
xor
mov
repz
xor
dec
fsubrl
mov
in
adc
mov
insl
into
pop
sets
mov
inc
pop
out
call
mov
xor
or
cmp
xchg
int3
sbb
push
mov
loopne
jge
jecxz
sarb
dec
push
adc
dec
in
lds
cld
inc
xchg
dec
sbb
adc
add
add
jae
cltd
dec
mov
jno
cltd
adc
add
add
mov
insb
icebp
mov
inc
inc
push
hlt
jmp
mov
xchg
nop
adc
and
adc
dec
dec
sahf
lea
loop
cmp
pop
mov
movsb
imul
shlb
pop
push
pushf
jns
xor
cs
pop
adcl
inc
test
into
aaa
cmpsb
test
lret
adc
cmc
sbb
mov
data16
mov
push
pop
xchg
or
and
popl
inc
and
jnp
adc
adc
xchg
int
cld
addr16
pop
test
and
mov
xor
xchg
lret
or
inc
outsl
push
cmp
movsb
fisubrs
in
mov
imul
jnp
pop
push
pop
dec
or
jmp
jno
in
daa
mov
popf
push
mov
or
mov
pop
adc
jbe
into
jns
fcom
ja
stos
xchg
and
lock
shrb
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
in
aam
xchg
cld
add
add
aas
pusha
mov
adc
in
fwait
lret
cmp
int3
pusha
mov
push
repnz
and
out
lret
adc
add
xor
or
dec
pop
nop
sub
push
mov
addl
xor
pop
mov
and
loope
mov
fdivrs
and
cld
addr16
fsubrp
insb
pop
xchg
jg
cmp
std
fcomps
cli
aas
cld
sub
pop
popa
cmpsb
dec
and
movsl
jo
mov
cltd
in
jl
lret
in
stos
mov
jmp
sbb
pusha
ret
jo
nop
lahf
in
iret
fadd
xchg
add
mov
jmp
out
dec
lcall
add
aas
lods
pushf
int3
and
lgs
mov
repnz
dec
add
lret
cmp
cltd
ljmp
jae
add
jno
test
jg
push
pop
push
mov
lcall
add
xor
jne
pop
sar
fcoml
mov
es
cs
ds
mov
aas
in
insl
icebp
mov
andb
mov
stos
mov
jg
pushl
mov
ret
push
adc
cmc
stos
aad
pop
ficomps
in
jmp
jmp
shll
movsl
sub
in
in
or
add
xor
cmpsl
pop
cltd
stc
jbe
inc
mov
mov
into
pop
push
add
xor
dec
xchg
inc
scas
mov
das
movsb
and
lock
out
push
dec
addr16
test
mov
stc
inc
flds
mov
mov
or
stos
into
inc
leave
xchg
pop
decl
sub
lock
int3
mov
movsb
scas
ss
shrb
xchg
xor
sbb
sbb
pop
insl
out
std
sbb
jae
pop
sbb
rcrl
push
test
sub
enter
popf
popf
sahf
cmpsb
es
xor
push
je
loope
pop
adc
or
cmp
mov
add
adc
movsb
push
in
cmc
jne
sbb
js
jmp
add
add
mov
int3
inc
js
sub
cwtl
jo
adc
mov
sub
inc
xchg
fwait
mov
mov
cmp
pop
mov
sti
sub
in
xor
adc
jb
dec
mov
pop
pop
in
sub
mov
sub
xchg
rcrb
fs
pusha
adc
xor
arpl
jno
inc
add
sbb
dec
movsb
sub
adc
push
mov
ds
aam
cs
gs
mov
loope
xor
cmp
lods
jp
adc
push
xlat
jo
mov
add
sbb
leave
popa
adc
dec
mov
xor
dec
mov
pushf
fwait
cmp
pop
ljmp
orl
fs
fucomi
shrb
popf
sub
mull
roll
loopne
xchg
aas
mov
jle
jno
out
and
pop
mov
bound
cs
ja
aam
addr16
popl
add
add
out
shlb
aas
out
int3
mov
cs
out
adc
add
and
push
xchg
jge
and
mov
lret
in
dec
cmp
mov
jbe
das
iret
outsl
ss
jne
loopne
insl
sbb
loop
or
in
out
push
jp
xlat
cmp
xchg
fldpi
mov
push
dec
dec
adc
sbb
push
add
mov
fisubrs
je
jge
pushf
ficoms
add
pop
nop
push
or
add
iret
push
lret
or
mov
mov
rclb
cmp
jne
jno
out
and
repnz
push
xlat
push
lds
mov
jae
and
test
adc
mov
fs
or
mov
out
fsubr
jno
mov
mov
imul
jecxz
hlt
notb
dec
sbb
push
and
add
fiadds
add
subb
xor
pop
sub
add
add
cmp
jecxz
mov
or
mov
and
jge
cwtl
test
add
add
into
pop
add
sub
dec
inc
ljmp
cmp
sahf
add
mov
arpl
pop
and
cmp
sub
ljmp
fistpll
cmc
lret
sarl
sbb
dec
sbb
sub
push
mov
into
ds
cs
dec
mov
push
fcomps
pop
jnp
adc
xchg
xchg
icebp
ficoml
in
out
mov
mov
sub
cs
test
aas
shl
in
inc
xor
rolb
mov
in
cwtl
adc
cmp
and
gs
mov
mov
mov
pop
repz
fisubrs
outsb
popa
and
adc
jle
mov
push
xor
dec
cmc
in
cli
insb
cmp
rolb
xchg
in
jne
sbb
add
xchg
in
pop
dec
sub
in
inc
or
cmpsl
aas
rclb
jg
mov
cltd
or
sahf
jns
mov
add
add
ret
bnd
cmc
inc
stos
repz
add
add
add
repnz
fsubs
and
pop
ror
inc
orb
data16
pop
pusha
ja
test
xor
out
fs
cltd
mov
mov
adc
test
pop
notl
nop
mov
loopne
scas
or
cld
xor
sbb
clc
out
adc
in
sbb
outsb
ficompl
xchg
sub
pop
or
icebp
psrld
cmc
es
rorl
es
sbb
add
sub
js
stc
push
mov
into
push
mov
pop
mov
je
arpl
and
shl
push
mov
mov
mov
sti
push
xchg
dec
pop
mov
xchg
scas
adc
ds
jns
mov
shll
es
pop
out
inc
inc
pop
adc
pop
mov
arpl
adc
lcall
fst
sub
movsl
xor
sub
test
sub
add
add
std
aaa
mov
shll
push
mov
add
les
add
fisubrs
fmuls
dec
sbbl
lods
jmp
jl
in
js
inc
aam
test
and
push
aaa
cli
or
xor
push
cmp
testb
in
fnstenv
mov
lahf
mov
add
cld
subl
push
jb
dec
out
out
pop
or
jge
loope
pop
push
mov
repnz
mov
pop
xchg
inc
mov
mov
loope
mov
or
dec
add
lock
and
or
mov
cli
mov
repz
cli
cwtl
inc
out
out
inc
test
add
lret
and
into
adc
out
jle
push
push
ljmp
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
xor
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
ss
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
ss
add
ss
add
ss
add
ss
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
xchg
and
sub
dec
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
