push
mov
sub
sbb
mov
mov
mov
add
mov
decl
mov
sbbl
push
push
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
xor
push
mov
mov
sub
imul
mov
adcl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
jmp
test
push
movsb
jb
jl
pop
or
orb
jg
jle
xlat
cmp
pop
add
push
stos
or
xor
int3
and
sbb
inc
fs
out
mov
es
test
call
add
dec
stos
push
sub
sarb
mov
stos
push
rcl
test
pushf
mov
dec
out
dec
call
mov
and
jnp
ret
xchg
sub
loopne
cld
ljmp
sub
add
sbb
outsl
insl
add
cmp
jno
ds
or
adc
jge
inc
dec
aaa
adc
ja
sbb
ds
hlt
enter
aam
push
cmp
mov
xor
mov
subl
nop
rcrw
addr16
imul
outsb
adc
mov
addr16
cmc
jp
out
or
cmp
in
ljmp
addb
inc
jecxz
add
call
outsl
enter
outsl
into
sub
pop
cmp
pop
arpl
sbb
adc
mov
mov
add
mov
aas
loopne
mov
cli
push
stos
sti
gs
insb
js
test
andb
push
cmp
xchg
xor
fwait
push
leave
dec
call
sbb
cmp
mov
xchg
lcall
xchg
loop
inc
or
movsb
xor
daa
imul
stos
mov
je
icebp
add
repz
shr
adc
adc
sbb
cmp
add
mov
popa
inc
dec
pop
movsb
call
fbstp
dec
xchg
lcall
adc
add
jg
inc
add
push
add
mov
adc
mov
orl
mov
xor
xor
neg
add
mov
movl
lea
sbb
mov
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
xor
add
mov
decl
mov
mov
mov
sbbl
mov
adcl
mov
xorl
movzwl
add
mov
jmp
fisubl
addb
lods
gs
aam
dec
xchg
mov
and
jg
jle
nop
test
mov
cwtl
or
xchg
jmp
int
dec
daa
gs
jmp
push
leave
mov
nop
mov
cli
aad
and
int
aas
pusha
stos
pop
xchg
cld
jo
je
fisttpl
lock
ret
or
xchg
add
jecxz
out
xchg
mov
sti
pop
insl
loopne
sub
test
lret
mov
imul
in
mov
add
jmp
int3
xor
stos
push
jle
jecxz
or
into
repnz
and
jle
push
dec
push
in
int3
jl
sub
xchg
popf
fstpl
pop
fisubl
jge
add
cwtl
sahf
and
popf
movb
mov
xchg
xor
pop
fmull
mov
loope
daa
sarb
insl
mov
add
push
into
shr
outsl
ljmp
cwtl
out
stc
push
js
push
pop
xor
mov
mov
fwait
sti
bound
push
push
jne
sti
daa
and
mov
daa
sub
and
xor
mov
pop
sbb
rorl
loop
dec
popf
andl
addl
test
sahf
xor
mov
fwait
pop
or
nop
mov
push
dec
jae
out
test
cmc
mov
jo
push
xchg
cmpsl
stos
cmpsl
and
sub
pop
imul
insb
push
mov
fldcw
into
int3
cwtl
adc
repz
xchg
sti
fstps
pop
push
xor
dec
mov
xchg
ret
push
cmpsb
fisubrl
fadds
imulb
xlat
mov
data16
out
cmp
out
adc
mov
or
and
mov
xor
addl
add
movl
cmp
movl
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
sub
and
mov
mov
addl
xor
orl
add
movl
cmp
jmp
cmp
sub
mov
sahf
ja
push
in
jns
jle
jg
jle
xchg
dec
repnz
or
jns
mov
pop
cwtl
adc
sbb
add
cmpsl
stos
jne
cmp
in
shlb
rolb
fdivrs
xor
arpl
dec
mov
sbb
repnz
fsubr
in
or
xor
es
and
or
lcall
jp
dec
cmpsb
push
inc
adc
xor
or
cmp
dec
outsl
loop
pusha
loopne
push
lea
stos
into
stc
adc
jle
movsb
repnz
es
push
leave
adc
jae
ficompl
aaa
and
jmp
das
jnp
fwait
push
xchg
inc
dec
dec
or
cwtl
icebp
mov
adc
cmc
les
outsl
push
lahf
bound
xor
mov
call
add
pop
mov
fildl
mov
add
insl
jbe
add
dec
out
outsb
cmp
add
mov
push
pop
mov
sub
fistps
cmp
mov
mov
push
mov
ss
rclb
lret
mov
or
xor
jno
loope
mov
cmp
jne
xor
mov
jle
sub
xchg
test
push
das
popf
jle
test
push
xor
popf
jge
addr16
aad
cmp
xor
aas
push
push
add
push
push
test
mov
push
sbb
and
cmp
test
pop
pop
ret
clc
rcl
std
cwtl
dec
dec
and
jne
mov
or
jmp
or
popa
sbb
ljmp
mov
jle
lds
leave
dec
aas
push
mov
mov
mov
out
cmp
mov
addr16
lea
aas
js
out
cli
push
into
add
sbb
lds
scas
sarb
push
cmp
icebp
mov
sub
pushf
pop
xchg
pop
sub
shlb
sbb
fmulp
mov
mov
lcall
push
add
pushf
dec
adc
shlb
jmp
out
push
jno
sahf
mov
sbb
mov
sbb
addr16
push
mov
inc
fisubl
push
sbb
roll
inc
mov
mov
ljmp
jns
imull
loop
or
test
call
loop
scas
add
mov
lods
mov
dec
icebp
cmp
stos
mov
ret
pop
inc
and
lcall
jno
ficomps
daa
hlt
aas
inc
xlat
das
into
mov
mov
jge
push
push
orl
pop
pop
push
cmp
mov
inc
mov
shlb
fsubl
jecxz
insb
mov
cmp
int3
push
incb
mov
mov
sbb
aas
fwait
xchg
pinsrw
mov
xor
and
and
repz
sti
xchg
std
out
push
outsb
jl
ds
fimuls
ja
mov
jmp
xchg
mov
or
lods
lods
adc
pusha
addr16
insb
ficoms
lods
cmpsb
js
lods
pop
sbb
xor
pop
dec
pop
loopne
cltd
aad
mov
sub
sub
mov
es
inc
or
add
add
add
add
or
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
xor
mov
sub
add
jmp
icebp
jmp
imul
inc
scas
push
add
jle
jg
jle
jae
fdivs
inc
lahf
sti
roll
pop
push
sbb
insl
in
pop
adc
and
push
xchg
pop
fs
ja
push
sti
lahf
std
ret
pushf
ja
sti
inc
jnp
popf
loope
jne
sbb
xchg
and
push
out
dec
cltd
sbb
adc
push
sbb
push
xchg
ja
fdivs
mov
inc
das
bound
test
mov
inc
test
sub
insl
aas
push
pop
jns
repnz
mov
fucomp
jg
cmp
cmp
lahf
loope
push
imul
xchg
mov
mov
fwait
or
sbb
lods
add
test
sub
stos
les
sbb
mov
push
jl
push
xor
into
pop
or
jmp
sbb
xchg
push
add
push
ss
jb
outsb
and
imul
dec
xor
jns
pop
or
dec
jb
sbb
rolb
lret
repnz
fmuls
stos
sub
loop
lds
dec
sbb
mov
cwtl
rolb
out
xor
insl
xchg
add
ljmp
mov
jae
dec
cld
lock
xchg
mov
xchg
xchg
sub
aad
cmp
jnp
cmp
mov
xchg
notb
mov
mov
daa
mov
pop
cmp
xchg
push
fcomps
aad
jl
xor
dec
gs
insl
mov
cmpsl
lods
das
cmp
movsb
test
dec
fists
xor
xor
cmp
imul
and
rorb
add
cld
movzwl
add
jmp
push
mov
test
sarl
sub
jg
jle
iret
stos
cmpsb
mov
xchg
lret
sbb
pop
rol
incl
dec
pop
fcomip
xchg
mov
or
jmp
loope
cmp
push
cmp
fists
and
lret
pop
adc
movsl
mov
or
mov
pop
aaa
insb
movntq
and
pushf
lock
popf
mov
es
sub
loope
test
cmp
xor
sub
pop
js
pop
cmp
push
scas
mov
xlat
hlt
insb
mov
rol
cmpsb
dec
out
cli
push
gs
xor
rolb
xor
out
xchg
sub
leave
and
dec
ljmp
pushw
sahf
pusha
push
xchg
adcb
jns
push
and
insl
mov
lods
sbb
pop
cmp
stc
pop
xor
pop
movsl
daa
cmp
cmpsb
pop
jo
cs
out
cwtl
push
repz
out
push
mov
xchg
dec
data16
push
jns
pop
subb
push
xor
pushf
insb
loope
dec
call
push
les
fdivrs
fcomps
test
mov
roll
push
gs
cmpsb
cwtl
pop
cmp
and
pop
aam
cmpsb
test
add
rep
mov
dec
enter
fidivrs
xlat
movsb
pop
cltd
mov
jmp
dec
mov
and
aaa
sti
sahf
jecxz
daa
cmc
and
stos
pop
roll
push
xor
lock
add
mov
sbb
sub
lock
in
xor
cmc
pop
lods
cmp
stos
pop
pop
mov
mov
imul
push
lods
pop
test
mov
mov
xor
add
xor
sub
jmp
xchg
sahf
loopne
icebp
jo
popa
mov
cmp
stc
pop
mov
add
mov
jle
dec
xor
ja
and
push
ss
xchg
scas
popf
movl
inc
shr
jo
inc
rcll
cmp
xchg
push
fwait
dec
add
jo
lock
dec
ficoms
mov
dec
mov
push
not
loopne
enter
pop
popa
enter
repnz
daa
sar
xchg
push
mov
fcoms
lret
cmp
cs
decb
sub
repz
cltd
test
rcr
mov
pop
outsb
idivb
push
or
or
pop
cltd
repnz
dec
add
xor
add
sub
adc
les
lea
arpl
cmpsl
sahf
mov
push
sub
stos
nop
pusha
test
repnz
sarl
jnp
add
and
jae
xor
imull
sub
xchg
pushf
test
xchg
xchg
inc
gs
adc
mov
sahf
fs
push
imul
adc
je
cmpsb
aaa
cmp
and
mov
repnz
xchg
shl
inc
mov
int3
in
cltd
inc
inc
mov
fsubrs
mov
es
cmc
shlb
lret
jmp
push
adc
pop
add
rcr
sahf
imul
ds
shlb
pop
mov
cmpsl
xchg
repnz
arpl
xor
pop
lret
pop
cmp
sub
ret
dec
push
call
ficoms
daa
test
or
into
jns
les
sbb
dec
mov
fnstenv
lret
out
cmp
jg
xchg
int
stos
push
or
daa
add
shll
sarl
xor
jp
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
jmp
pop
sbb
cmp
push
popa
movsb
insl
std
and
pop
test
jg
jle
mov
jle
cmp
push
mov
sbb
setno
push
lods
sbb
sbb
scas
jbe
outsl
je
repnz
fidivrl
sub
iret
xchg
enter
fs
push
jns
fistl
jecxz
push
js
outsb
popa
pushf
jg
sub
ja
mov
lahf
pop
scas
scas
aam
mov
outsl
aas
add
cmp
dec
xor
in
aam
js
add
cmc
test
idivb
movsb
cli
shll
add
mov
lea
out
inc
adc
aas
xchg
jle
add
dec
clc
stc
loope
mov
ret
mov
je
clc
scas
jmp
inc
jnp
shlb
insb
mov
js
je
aam
sub
adc
jno
ror
adc
push
xchg
and
mov
pop
sbb
lret
jmp
mov
dec
adc
in
sub
jmp
test
jl
jbe
sub
sbb
fwait
inc
mov
dec
mov
mov
mov
rorl
push
inc
icebp
fdivl
xchg
sbb
adc
rorb
pop
out
adc
pop
stos
lcall
or
jne
mov
std
sar
decb
inc
out
sbb
push
aas
aas
adc
mov
jae
je
mov
pop
enter
xchg
dec
orb
jecxz
sbb
in
add
adc
imul
movsb
fidivs
mov
faddl
dec
dec
das
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
jmp
je
int3
xchg
int
jne
jae
xtest
xlat
dec
mov
jle
mov
jle
in
mov
ret
test
sbb
pop
insb
cmpl
ret
inc
xor
add
xor
int
test
mov
int
mov
push
pop
lods
pushf
jae
sub
pop
lods
sub
mov
ja
mov
inc
andb
push
jp
sbb
subl
stos
push
inc
mov
sub
push
xchg
push
pop
mov
jmp
out
pop
into
cld
test
jbe
push
mov
test
ret
ret
loop
lock
fst
push
or
ss
rorb
sub
cmc
mov
cmp
inc
bound
cmpsb
outsb
jecxz
xorl
sbb
mov
add
cmp
cmp
stos
jge
in
dec
adc
outsb
aam
inc
imul
sahf
movsl
lret
int3
test
mov
jecxz
jne
cli
pop
push
leave
hlt
pop
pushf
es
les
popf
std
daa
jg
xchg
mov
pop
fldenv
stc
adc
cmpsl
mov
mov
mov
jmp
xor
ljmp
pop
push
push
xchg
orb
pop
push
adc
jge
cmp
jg
iret
mov
leave
and
notl
rorb
mov
xchg
xchg
cltd
aam
sub
mov
push
inc
cmpsl
mov
or
pop
rolb
xchg
mov
sahf
mov
push
fisttps
dec
clc
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
jmp
xor
inc
pop
pop
jge
arpl
outsb
dec
or
in
or
jle
test
and
push
nop
jno
jecxz
inc
mov
pop
test
pop
rclb
in
psubusw
cmp
cwtl
add
cmp
dec
pop
int
aaa
mov
lods
adc
in
mov
insl
icebp
xchg
xchg
je
pop
cli
dec
shl
add
das
int3
test
sub
pop
in
cmpb
xchg
sub
mov
fists
aas
push
addr16
xchg
std
xchg
ljmp
xchg
add
adc
xlat
cmp
adc
inc
adc
pop
cmp
xchg
sub
and
or
incl
leave
and
mov
push
ffree
xchg
sti
shll
and
push
cmp
lret
inc
movsl
xchg
jne
gs
xor
push
in
aad
sbb
xchg
insl
mov
jnp
inc
xor
rorl
mov
inc
fmull
xchg
xlat
mov
xchg
jae
test
xor
cs
push
pop
imul
jecxz
jno
aad
adc
adcl
stos
mov
mov
and
repnz
lods
cmc
push
fwait
lret
hlt
jnp
jmp
add
push
add
aaa
xchg
sbb
or
dec
ficomps
js
bound
add
jmp
aaa
xorps
stc
lods
cmp
movsb
imul
add
add
popf
xchg
loopne
jecxz
mov
xchg
xchg
fst
and
outsb
or
pop
outsb
std
xchg
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
jmp
insb
jo
arpl
jge
jno
adc
mov
repnz
and
jle
mov
jle
movsl
and
mov
imul
in
in
out
cmp
inc
jo
sahf
jo
xchg
dec
pop
xchg
mov
aad
push
mov
aaa
xor
pop
addr16
push
jmp
jb
pop
test
push
or
jle
leave
xor
mov
jmp
shrb
dec
sub
xchg
mov
pop
cmpb
stos
or
pop
hlt
bound
jle
mov
xchg
xchg
cld
test
mov
jecxz
xlat
inc
xchg
jo
imul
pop
in
jne
sbb
out
popf
imul
cld
pusha
les
icebp
in
mov
ljmp
inc
inc
or
jbe
iret
mov
insl
int3
xor
jb
icebp
jmp
cltd
int
jbe
shlb
xor
add
jnp
sub
or
xor
push
add
shlb
shrl
or
fdivl
insb
data16
loope
push
push
out
push
mov
and
inc
adc
in
and
ljmp
fwait
dec
and
mov
outsl
dec
jo
sub
cli
inc
add
xor
sub
arpl
inc
test
call
inc
cli
sub
es
orl
mov
push
mov
xor
push
jmp
aad
rcll
lahf
call
xchg
jo
sbb
lahf
outsl
cltd
or
cmpsb
movl
lcall
cwtl
sbb
mov
cmpsb
insl
test
jecxz
add
pushf
cld
cmpsb
mov
add
and
add
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
sbb
jge
fidivrl
ffree
xor
push
jg
jle
push
or
pop
sub
push
jl
pusha
sbb
nop
ret
adc
and
rcr
dec
subb
pushl
pop
cmpsl
push
dec
ficoms
push
inc
push
and
mov
lret
hlt
xor
cli
movsb
xchg
daa
and
cmp
lods
pushf
inc
mov
mov
dec
insb
jnp
and
cmp
aam
xor
insb
call
loopne
test
xchg
cli
sbbl
adc
sub
cmp
add
mov
dec
cmpsb
mov
in
push
mov
pop
mov
es
into
sarl
popa
pop
daa
jbe
aad
sbb
jecxz
loop
popf
and
ret
pusha
xor
cld
mov
mov
inc
dec
push
nop
adcl
popa
jg
or
sbb
and
stos
xchg
push
mov
mov
add
xchg
je
add
leave
xchg
mov
enter
pop
and
int3
fs
dec
adc
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
jmp
xorl
push
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
movl
mov
push
mov
or
mov
xor
mov
push
add
mov
sbbl
jmp
pop
imul
dec
call
jle
jg
jle
test
lcall
jae
ja
js
notl
jle
scas
aaa
cmp
js
xchg
adc
xchg
lret
mov
mov
mov
or
xor
push
cmp
leave
clc
jg
fistl
jae
sbb
xchg
jbe
fdivrs
cli
lock
dec
xchg
xorl
adc
out
fiadds
mov
inc
shrb
inc
jl
cmovbe
dec
xor
popa
mov
int3
and
arpl
mov
fisttps
sub
xor
das
mov
movsl
cmp
mov
clc
std
sti
mov
jnp
dec
cwtl
or
fisttpl
lds
jbe
inc
or
jb
jno
iret
cs
and
imul
outsl
into
lds
cmp
imull
adc
scas
jae
ret
mov
in
mov
add
push
ljmp
push
cmpsb
and
xorb
push
jo
test
out
cmpsb
and
push
insb
xor
sbb
mov
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
mov
xor
mov
xorl
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
jmp
push
nop
outsb
stos
jae
push
jo
sub
lods
stos
mov
jle
jg
jle
and
stos
movsb
pop
adcl
les
sub
pop
and
pop
cmp
dec
mov
cmp
or
sar
lea
sbb
mov
sbb
repnz
sarb
pop
jge
dec
pop
or
sub
push
aam
sbb
lea
jg
jno
sub
adc
mov
filds
mov
lods
mov
mov
dec
bound
neg
lahf
push
push
test
cmp
jo
sbb
and
andl
cwtl
fdiv
mov
leave
mov
pop
sbb
popa
xchg
mov
jle
add
inc
sub
jnp
data16
mov
xchg
sbb
cs
ficoml
movsb
mov
dec
xchg
lds
push
divl
movsb
fcompl
jp
pop
insl
xchg
insl
jecxz
cli
js
ret
mov
bound
push
and
pop
push
mov
sbb
mov
in
aas
adc
add
psubb
lods
data16
cltd
cwtl
mov
adc
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
and
mov
jmp
inc
dec
fwait
imul
add
test
jle
push
jns
jle
or
push
mov
xchg
aaa
adc
call
jae
fldcw
mov
inc
and
sbb
inc
or
iret
lret
repnz
scas
dec
icebp
sbb
ja
outsl
adc
repz
pop
mov
lret
inc
pop
int3
out
scas
aam
mov
dec
mov
adc
jne
sub
pop
inc
inc
jl
dec
push
or
call
push
hlt
fs
gs
ja
cld
repz
test
sbb
add
pop
adc
adc
inc
jp
cmp
xchg
shrb
pusha
jl
cmp
adc
mov
outsb
xorb
lds
in
movsb
jl
jmp
movsl
mov
add
incl
cwtl
leave
sbb
mov
mov
int
add
imul
inc
xchg
cmp
cwtl
lret
xchg
inc
pusha
std
xchg
dec
fsubrs
idiv
lahf
or
int
call
cmp
pop
aas
push
mov
fnstenv
out
and
mov
dec
call
loop
jno
jo
cmovp
repz
pop
xchg
adc
jne
jmp
dec
ffreep
leave
test
mov
mov
or
sub
ret
movsl
test
and
and
mov
ja
mov
into
jnp
adc
push
test
das
cmp
in
pop
add
adc
and
cltd
dec
pop
mov
or
call
enter
or
jb
fwait
mov
xchg
loop
das
and
dec
test
add
pop
pop
fld
sbb
adc
mov
mov
inc
add
icebp
pop
mov
int
aas
mov
xchg
jae,pt
inc
out
pop
xor
rcrl
and
ja
sub
enter
es
mov
sub
popf
fmuls
bound
inc
jae
or
or
xor
mov
lea
inc
nop
sbb
in
fdivp
sbb
jbe
rcrb
jo
jnp
jno
insb
jmp
xor
mov
dec
gs
loopne
cmc
lods
mov
xchg
xchg
inc
xchg
data16
lds
sahf
bswap
loop
data16
or
bound
hlt
sbb
or
stos
into
jns
jbe
jge
gs
xor
or
cmpl
cwtl
cli
imul
in
fs
dec
and
mov
inc
lock
fmul
jnp
cmpsb
and
mov
push
sbb
mov
in
and
push
or
lea
in
lahf
sub
mov
insb
push
pop
and
test
test
addl
ss
filds
sub
imul
data16
add
pop
xorb
ja
fbld
hlt
jg
mov
inc
or
fmul
ss
sbb
sub
addl
ja
ret
or
xchg
xchg
cmp
rcrb
jnp
shlb
mov
loopne
inc
lods
jae
adc
daa
mov
push
cmp
inc
dec
pop
mov
movsb
cs
sbb
out
cmp
push
add
mov
cmp
daa
insl
mov
cwtl
ret
jns
dec
mov
insl
dec
loope
jo
inc
pop
xlat
pop
jnp
cmp
push
mov
inc
jp
data16
cmpsb
lods
sub
push
inc
out
sub
jge
lds
sub
inc
dec
mov
mov
gs
add
pusha
mov
and
push
imul
xchg
cwtl
nop
xor
cwtl
push
mov
addr16
outsl
sarl
xor
mov
andl
add
mov
xor
mov
movzwl
mov
xor
mov
mov
sbb
mov
movb
lea
orl
mov
and
jmp
jo
inc
xchg
jo
jne
xchg
or
pop
and
adc
push
jns
jle
inc
paddusw
jle
fidivrs
roll
or
push
out
enter
sub
call
sub
in
inc
xor
mov
dec
jp
lock
jne
mov
cmp
jo
arpl
push
lcall
jbe
xlat
mov
cli
scas
or
arpl
test
cmp
into
dec
daa
bound
pop
das
leave
sbb
in
push
ljmp
mov
nop
inc
pop
and
aad
int
test
fmuls
and
mov
mov
imul
bound
mov
out
rcll
pop
jge
cmp
mov
xchg
mov
mov
out
outsl
movsl
xchg
loope
mov
jecxz
pop
lret
sbbb
cmp
sbb
adc
pop
inc
sbbb
or
add
or
icebp
or
in
mov
pusha
and
push
xchg
inc
xor
mov
and
testl
dec
sub
pop
repz
out
ss
icebp
push
add
in
adc
roll
add
jns
aad
mov
shlb
cmp
nop
js
imul
fsubrp
mov
push
iret
pop
mov
ret
fisubrs
test
sbb
hlt
int3
pop
xor
test
decb
clc
mov
cmp
jg
adc
rcll
xchg
inc
rep
push
jnp
mov
or
leave
sarb
incl
dec
insb
pop
xor
xchg
dec
pop
cmp
testl
inc
subl
sbb
cmp
test
or
ja
imulb
popf
loop
inc
loop
sbb
test
xor
xor
jge
cmp
jmp
rcrb
mov
sub
icebp
adc
sarb
into
push
pop
aaa
xchg
neg
pushf
fwait
push
push
push
mov
xchg
push
lods
int
aaa
movntq
xchg
xor
sub
mov
scas
lods
lods
cli
into
cmp
stos
add
pop
in
jmp
or
cmp
lods
add
mov
lret
push
std
add
out
push
pusha
lret
mov
jp
dec
rclb
ds
xor
notb
scas
jno
mov
out
gs
mov
sbb
dec
jbe
push
ss
out
and
push
std
mov
jns
mov
mov
mov
movsb
mov
cwtl
xor
add
adc
loopne
mov
icebp
dec
inc
pop
leave
cmp
shrl
mov
push
sub
push
mov
sub
add
mov
sti
sbb
or
jmp
or
in
push
movsl
add
inc
cs
adc
and
push
xor
fiaddl
mov
mov
inc
shll
push
inc
mulb
adc
enter
hlt
dec
mov
mov
je
inc
fwait
mov
fcomps
repz
cmp
lods
test
sti
or
inc
jg
lock
ret
inc
aas
or
pop
mov
popf
jo
andb
int3
xorl
xchg
jns
cltd
jne
nop
imul
xor
rolb
add
pop
lea
sub
testb
pop
pushf
xchg
dec
xor
jp
aad
push
inc
jp
mov
ljmp
and
daa
fistps
inc
icebp
orb
pop
addr16
les
jbe
fdivp
jno
cmpsl
insb
sbb
or
sbb
mov
mov
sbbl
xor
addl
sub
orl
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
adc
mov
mov
push
adc
xor
incl
mov
subl
add
jmp
notl
mov
mov
movl
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
sbbl
jae
out
xchg
movsl
lret
arpl
jle
push
jns
jle
inc
or
mov
dec
cmovge
xor
nop
js
jnp
mov
cmp
inc
les
dec
scas
mov
pop
cltd
popf
sub
mov
mull
sbbb
mov
xor
mov
imulb
add
add
out
mov
and
test
cmp
mov
scas
fistl
out
dec
ret
imull
icebp
test
adc
mov
lahf
or
jecxz
test
les
ds
xor
ret
adc
xchg
sarl
pushf
ja
test
sahf
xlat
jecxz
test
mov
mov
push
outsb
inc
mov
cld
mov
sbb
push
es
jecxz
sub
les
mov
jnp
xchg
mov
loope
or
mov
cld
lret
and
into
jno
dec
jecxz
sbb
mov
aas
and
add
push
mov
sub
sub
adc
aad
enter
ds
sbb
notl
mov
inc
sub
pop
push
lahf
pop
or
sti
dec
or
jbe
stos
jo
lret
sbb
aad
insb
mov
cwtl
add
sub
jge
std
adc
std
pop
mov
xchg
sbb
nop
out
mov
rcr
imul
popa
daa
pusha
push
pop
cli
mov
ljmp
sbb
push
in
lock
mov
nop
fidivl
shl
adc
mov
inc
mov
pop
aad
aad
sub
in
frstor
andl
sti
test
jle
adc
cmp
arpl
and
sbb
push
shrl
les
fbld
stc
bound
push
mov
sub
pop
imul
pop
add
arpl
lahf
mov
inc
data16
mov
icebp
sub
stos
jns
add
mov
pop
sub
mov
sub
xchg
dec
fiaddl
inc
imul
or
orl
popfw
xor
push
hlt
cltd
aam
jle
lock
cmpl
imul
pop
mov
mov
dec
or
jnp
shlb
lea
pushf
mov
pop
push
mov
push
mov
add
xchg
sub
dec
shll
mov
dec
es
pusha
xor
iret
or
inc
fucomi
js
cmc
jne
repnz
inc
in
popa
dec
sbb
mov
jne
or
add
fwait
dec
mov
cli
iret
xorb
jmp
into
fldenv
jle
or
pop
pop
gs
aaa
cmp
out
or
sbb
and
vcomiss
inc
std
or
pop
pop
push
das
inc
mov
adcl
scas
cmp
int
and
loop
pop
sub
push
and
or
xlat
sbb
fmuls
fisubrs
jge,pt
jnp
fsubrl
mov
xor
lds
adc
sbb
mov
cs
aaa
dec
data16
test
mov
ret
rcrb
test
jae
cmpsl
push
shrb
or
inc
xor
loopne
jne
dec
cs
dec
push
mov
jns
nop
mov
stos
das
mov
xor
xchg
shlb
adc
sub
adcb
movsl
out
pop
fwait
scas
inc
cld
add
outsb
dec
pop
in
lahf
and
xor
or
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
mov
or
push
jge
inc
xchg
add
mov
jns
jle
cmp
cmp
or
lea
and
fldcw
cmp
faddl
fisttpl
das
dec
mov
pop
adc
dec
xchg
ret
out
jecxz
divb
push
gs
das
mov
jge
and
dec
lea
testl
fnstsw
sub
mov
xchg
xchg
and
sbb
jb
iret
mov
pop
xlat
cmc
push
fistps
call
cmp
xchg
cmp
dec
xor
ret
data16
inc
cmp
fnstsw
inc
test
cmp
mov
inc
mov
xchg
pop
outsl
pop
je
out
fbstp
sahf
push
lods
dec
and
adc
es
outsb
aaa
mov
add
mov
lahf
scas
nop
adc
imul
adc
out
mov
push
dec
adc
test
dec
shll
movsl
das
addb
shlb
out
jmp
loop
pop
mov
cmp
push
dec
xor
push
dec
push
arpl
popa
outsb
cltd
sbb
imul
in
jg
scas
cli
jle
lcall
mov
aaa
inc
mov
je
dec
test
pop
cmpsb
cld
or
clc
icebp
rcrl
imul
sbb
call
push
jmp
dec
mov
and
jge
lds
aad
jmp
xchg
bound
jle
sub
xchg
xchg
sbb
or
imul
push
ret
ret
cmpsl
outsl
push
dec
pop
movhps
lcall
mov
jl
in
sub
mov
test
jae
outsl
and
pop
jmp
push
sub
outsl
inc
pop
loope
stc
pop
mov
mov
mov
add
fwait
punpckhwd
jns
fisubs
adc
inc
cmp
aam
inc
outsl
mov
sbb
les
inc
stos
int
cmp
je
xchg
dec
insb
and
andb
mov
ds
stc
movsb
sub
and
aas
xchg
xchg
xlat
cmp
xchg
or
shlb
std
jb
sbb
aam
lret
test
popl
lret
imul
pop
xchg
fistps
cs
or
inc
negl
inc
outsl
and
xor
dec
jns
push
xor
dec
add
loopnew
sub
das
les
sub
outsl
adc
and
fcmovu
push
popl
pop
into
fcomp
jg
sbb
mov
jecxz
jl
lock
jbe
adc
sbb
xchg
je
lods
adc
cli
and
xchg
test
icebp
mov
outsb
lods
cli
dec
scas
int3
out
lahf
adc
jne
outsl
jns
incl
test
mov
in
mov
rcr
addl
in
xchg
ss
out
push
adc
and
cmp
push
inc
and
out
insb
push
sub
out
sarb
stos
pop
shl
call
pop
sub
fwait
je
movsl
mov
scas
andb
enter
jnp
adc
or
xchg
loopne
jg
push
mov
push
nop
mov
and
mov
lahf
fwait
pushf
in
jae
add
jnp
jns
mov
lcall
mov
lods
adc
sbb
insb
rclb
inc
in
div
pop
push
leave
adc
cmp
inc
xlat
movsb
jo
or
jae
xor
xchg
out
sub
shlb
sub
adc
pop
mov
clc
xor
add
mov
mov
jmp
pop
ret
jge
insb
jae
test
ja
sbb
push
jns
jle
pop
inc
mov
add
icebp
roll
pop
mov
mov
sbb
add
pushf
lds
pop
add
out
or
mov
pop
add
movsl
push
adc
push
pop
out
cmp
fnstsw
cmp
addb
pusha
cmp
sbb
xchg
in
mov
lea
iret
and
sbb
or
pop
cmp
mov
jne
out
sub
stos
in
sbb
or
mov
aas
sub
xchg
mov
fldl
push
inc
outsl
cmp
popa
or
mov
mov
push
mov
lods
std
xchg
sbbl
push
mov
xchg
inc
sti
bndstx
jo
orb
mov
cli
and
cmpsb
jns
lret
ds
push
lret
shrl
rcrb
repz
xor
in
leave
xor
mov
sub
cmp
repnz
sbb
push
adc
xchg
or
fadd
mov
lea
jbe
mov
adc
cli
push
stc
arpl
dec
popf
inc
mov
fisttpl
aaa
push
gs
rep
notl
pop
scas
push
sub
and
dec
adc
cld
mul
fcompl
or
jmp
mov
std
js
sub
jae
test
push
sbb
outsl
fsubrp
shr
dec
pushl
add
cwtl
dec
es
adc
mov
mov
outsb
adc
adc
cmpsl
pop
inc
popa
mov
mov
xchg
fisttps
cmpsb
mov
sbb
inc
cmp
aas
cs
fmulp
pop
cltd
jle
dec
flds
push
wbinvd
iret
mov
push
mov
and
testl
std
mov
mov
xchg
ret
sbb
sahf
stc
lret
and
data16
inc
fwait
sbb
mov
dec
jne
mov
dec
test
push
inc
push
or
adc
pop
aad
and
int3
cli
mov
in
insb
jecxz
lcall
inc
ja
and
sub
mov
shrb
cmp
out
iret
imul
adc
iret
cltd
outsl
test
out
xchg
xor
gs
ss
pop
or
lds
insl
xchg
out
pop
cmpl
seta
adc
leave
sub
lcall
lret
push
ljmp
or
mov
lret
push
mov
push
repz
cmp
fs
xchg
call
in
loop
shll
test
sarl
pop
loope
icebp
xchg
xor
repz
jecxz
pop
cmpl
dec
mov
pop
in
mov
cmpb
sarb
xor
jge
icebp
shr
xor
sub
jg
pop
adc
dec
negl
xor
outsb
fisttpl
shl
xor
push
orl
sub
jo
jl
mov
or
pop
lret
inc
inc
cmp
bound
or
push
popa
pop
adc
out
xchg
test
pushf
mov
ljmp
jg
lock
xchg
loopne
push
loopne
ret
inc
ja
mov
mov
mov
lcall
test
mov
std
xchg
inc
fisubl
ret
jns
cmp
xor
les
repnz
add
jl
jne
out
or
dec
mov
pop
lods
test
lcall
movd
lret
push
popf
sub
es
jns
inc
int
mov
xchg
mov
inc
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
jmp
enter
cmc
jne
mov
mov
daa
jle
push
jns
jle
cwtl
push
jle
adc
fldpi
sub
mov
mov
fdivs
and
mov
fmull
push
push
mov
imul
je
mov
mull
insb
mov
jg
push
fisubl
add
repnz
shll
std
mov
cltd
iret
push
iret
aam
cmp
int3
push
repnz
fistps
jge
and
sub
cmp
pop
call
pop
xchg
test
push
and
jecxz
lods
mov
mov
push
or
add
aam
jbe
test
stos
aam
js
ss
mov
das
push
jecxz
and
xlat
mov
jnp
push
jae
mov
repz
mov
pusha
jbe
clc
pop
cmpsb
mov
lret
ljmp
or
arpl
test
fisttpll
mov
mov
xor
das
fisubl
push
scas
inc
sbb
ss
push
adc
cwtl
pop
mov
lret
or
cmp
lea
pop
cs
hlt
sub
cld
test
jg
loope
loope
pop
cmp
mov
test
sbb
or
into
and
add
mov
cld
test
fisttpll
cli
add
cmp
pushf
test
int3
cwtl
into
push
inc
pop
adc
xlat
adc
jns
mov
testb
mov
jne
mov
jmp
in
xchg
pushaw
xlat
pop
das
xor
push
popf
dec
add
xchg
es
inc
fcomip
mov
xchg
mov
jmp
push
fsubrp
add
jmp
sbb
mov
and
pop
int
out
xchg
add
in
jbe
mov
mov
nop
cmpsl
xchg
lcall
inc
sbb
mov
arpl
mov
dec
xchg
add
xchg
pop
fcompl
rclb
cmpsl
and
aam
or
in
and
dec
xor
scas
and
xchg
shrl
data16
jne
rep
dec
enter
push
pop
and
lahf
mov
mov
je
aad
sub
into
jmp
jg
mov
test
stos
lock
mov
adc
and
dec
dec
icebp
and
jp
cmpsl
lcall
jbe
cmp
adc
jge
shll
add
cli
into
mov
dec
test
and
addr16
cmp
push
adc
in
sahf
adc
cmp
or
test
push
sub
jmp
sub
into
adc
inc
cmp
or
mov
stc
push
insl
jge
jge
f2xm1
mov
aad
fcomps
test
jp
jle,pt
movzbl
lea
cmp
scas
xor
jg
jg
sti
fbstp
and
mov
and
mov
adc
lret
andb
push
add
xchg
dec
adc
mov
sbb
insl
jns
ss
aas
fisttpll
inc
fnstsw
jne
push
mov
das
and
mov
adc
or
fucomip
inc
test
or
stos
jno
movsb
xor
inc
adc
rolb
pop
jp
dec
xorl
inc
int
mov
jge
jnp
das
adc
inc
cmpsb
cmp
mov
testb
pop
sub
mov
test
popa
xor
int
push
pop
jmp
test
jg
cwtl
mov
push
filds
gs
pop
jg
nop
adcb
loope
lcall
je
movl
lea
mov
jmp
push
fdivp
imul
mov
adc
add
ret
and
push
jns
jle
dec
sub
push
test
in
stc
fisubs
sbb
xor
leave
inc
push
pop
xlat
adc
rcll
lahf
cmp
notl
dec
movsb
mov
pop
xor
mov
pop
push
or
andb
push
sub
pusha
add
mov
add
push
popa
jmp
xadd
aam
push
imul
mov
xor
fdivrl
repnz
cmp
jp
push
xchg
push
mov
dec
rorl
jg
fldenv
loopne
push
in
push
sbb
xlat
and
fmull
lods
inc
insb
int
aaa
pushf
popa
or
test
loope
sub
mov
cwtl
and
mov
or
jbe
xchg
popa
sbb
movsl
movsl
adc
in
add
inc
cmp
mov
mov
jbe
test
push
mov
jae
cmp
stc
mov
cmp
nop
outsb
pop
lods
call
mov
arpl
in
movsb
pusha
add
in
dec
push
jmp
repz
add
sbb
add
push
mov
test
mov
inc
or
and
loope
out
mov
out
rclb
adc
pusha
jbe
xor
rol
jbe
jno
cmp
ret
negb
rol
fwait
dec
int
xor
lock
mov
aam
ret
inc
imul
jne
cmpsl
sub
mov
add
scas
aad
pop
or
shrb
into
or
mov
xlat
ret
sbb
stc
cmpsl
inc
in
mov
and
sbb
pop
mov
xchg
in
dec
je
shl
stos
dec
xlat
sbb
sahf
je
add
mov
adc
icebp
div
ja
jns
out
dec
dec
cmp
fs
adc
out
and
push
pop
aaa
sti
inc
das
ljmp
xor
cs
cmpsl
sbb
out
mov
cmp
or
shll
and
inc
inc
add
dec
mov
lock
xchg
shlb
loope
jbe
leave
into
popf
je
or
scas
mov
xchg
adc
out
sub
mov
sub
add
add
addr16
xchg
pop
push
jne
and
add
adcb
add
fsubrl
mov
cld
or
jns
bound
loopne
mov
mov
cli
mov
dec
rolb
or
xlat
mov
cmp
popa
mov
movb
pop
inc
or
aam
jge
arpl
xor
aad
mov
es
lods
in
or
cli
push
and
inc
pop
dec
cmpsb
ror
loopne
dec
and
inc
and
fisubl
xchg
vmovmskps
add
inc
into
fisttps
adc
stos
popa
sbb
add
xor
mov
xchg
ficomps
ds
shll
mov
aas
mov
aas
aas
lcall
jnp
sbb
adc
aad
add
push
push
hlt
push
push
jno
push
jg
cmp
dec
cli
mull
mov
cltd
loope
clc
int3
cmpsl
mov
cmpsl
mov
pop
sub
cmp
lahf
inc
jne
nop
out
nop
lods
xchg
test
jo
cmp
ja
lret
adc
rorb
dec
iret
fnstenv
adc
inc
ficoml
mov
mov
loopne
mov
xlat
movsl
in
out
jae
push
add
jnp
pushf
pop
dec
cmp
fld1
in
lret
inc
adc
push
insb
aas
sbb
adcl
sbbb
fildll
xchg
rclb
jp
mov
mov
add
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
sub
jmp
pop
mov
and
jno
dec
call
addr16
adc
das
jle
pop
jg
jle
faddl
shl
cmp
ret
pop
dec
sub
je
pop
in
loope
mov
xlat
popf
mov
mov
xchg
cld
cs
clc
mov
add
mov
mov
aaa
dec
call
dec
fcoml
xchg
insl
das
sub
in
pop
scas
stc
xchg
sub
je
lods
xchg
xor
inc
mov
adc
sub
sub
jle
mov
jo
sub
cmp
test
sub
rclb
cmp
push
dec
int
out
mov
inc
arpl
or
std
cmpsl
push
push
iret
insl
imull
call
and
jnp
repnz
or
int3
push
jno
loopne
xchg
xor
cpuid
sub
iret
jo
sbb
shlb
aaa
clc
jns
mov
mov
out
or
aas
mov
xchg
ror
mov
adc
xor
aaa
out
mov
repz
mov
or
fiadds
push
cltd
in
dec
hlt
pop
mov
imul
lock
hlt
xor
jo
std
jb
jbe
jge
loope
pop
scas
add
lods
pop
popf
addr16
sbb
xor
call
mov
movsb
sbb
pop
aaa
mov
pop
inc
inc
rcl
xor
xchg
imul
jo
imul
ja
or
cmpsl
nop
cmp
gs
mov
clc
xchg
lods
lret
pop
push
fldt
insb
dec
arpl
pop
mov
cmp
xor
gs
jns
sub
data16
xor
lods
xchg
jne
add
add
stos
sbb
xchg
jmp
aas
icebp
bound
adc
or
xchg
cld
cld
push
sub
hlt
xchg
xor
push
or
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
pushl
call
mov
dec
mov
jmp
movl
mov
xor
push
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
inc
mov
incl
mov
xor
xor
mov
add
xorl
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
imul
jge
push
pop
loopne
jle
sbb
jnp
jle
pop
jg
jle
fmul
cld
and
test
leave
je
mov
mov
sbb
popf
adc
inc
in
xor
push
cmpsl
pop
jae
mov
out
in
pop
mov
leave
pop
sub
stos
nop
xchg
and
out
scas
aad
push
leave
cmp
bound
xor
outsl
cmpsb
in
mov
lcall
adcl
inc
fisttps
push
cli
add
add
mov
sub
addr16
sub
and
repz
pop
and
pop
push
icebp
cltd
mov
lcall
dec
mov
stc
push
cmp
push
pop
pushf
xlat
lods
cmp
add
sub
hlt
scas
lods
jns,pt
inc
fdivl
imul
pop
lret
inc
cwtl
lahf
mov
pusha
fbld
adcb
stos
adc
adc
cmp
mov
mov
cmpb
cmp
int
cmpb
or
cmp
ljmp
fistl
testb
int3
imul
sti
jne
xor
jge
mov
rolb
mov
adc
clc
mov
push
btr
jle
add
xchg
mov
jae
out
mov
jg
mov
and
inc
mov
adc
pop
mov
daa
hlt
cmpb
jmp
add
lods
mov
jno
ja,pn
dec
std
sbb
xchg
shll
stos
or
push
dec
jne
cmpsb
add
pop
shll
mov
or
leave
sub
out
sahf
xchg
add
pusha
mov
popf
and
push
lds
mov
rcrb
sbb
add
in
mov
imul
push
stos
jle
out
outsl
xchg
std
inc
test
xlat
dec
cmc
mov
cmp
cwtl
decb
cld
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
jmp
sahf
jb
push
pop
jl
jb
ret
mov
dec
pop
sub
les
jle
or
pop
arpl
lods
jo
sbb
and
arpl
hlt
mov
xchg
daa
sub
outsb
jns
push
test
mov
pop
in
xor
adc
int
test
sub
xchg
lcall
in
mov
pusha
mov
sub
mov
ljmp
or
daa
pop
cmp
fxch
or
mov
sti
andl
std
add
movl
lahf
cmp
lcall
pop
cli
cwtl
add
xchg
rcll
pop
xchg
pop
aas
popf
pop
bound
xlat
lods
cli
mov
xor
enter
cli
mov
clc
mov
and
stc
mov
leave
pop
mov
add
repz
push
clc
clc
inc
cwtl
push
lock
in
dec
loop
push
sbb
mov
sub
mov
cmp
test
les
outsl
rcrb
jnp
xchg
mov
stc
fstps
outsb
push
pop
imul
rorl
or
or
cwtl
xor
pop
je
dec
pop
das
sub
movsb
sti
test
dec
ficoms
jne
jecxz
fildll
outsb
mov
test
icebp
repz
nop
adc
pop
fists
hlt
popa
clc
test
ficoml
cmp
imul
cltd
or
ljmp
xchg
mov
mov
sbb
sarl
movsl
mov
dec
mov
mov
jne
adc
outsl
mov
adc
mov
xor
sbb
lret
pop
push
in
iret
lds
ss
js
jmp
mov
clc
dec
dec
push
sbb
mov
imull
icebp
imul
sub
jmp
cmc
push
sub
mov
mov
dec
adc
ret
sahf
mov
xor
add
fisubl
and
adc
repz
lcall
xchg
mov
stc
jp
xchg
aaa
mov
fildl
ret
add
imul
ss
cmp
push
into
in
subb
mov
dec
jp
cmp
fstl
push
dec
data16
dec
insl
cmpsb
out
clc
mov
aam
mov
push
xchg
and
mov
or
testb
pop
mov
jo
das
cwtl
cmpsb
sub
test
xor
pop
push
fisttpl
rorb
cmpsb
xchg
add
ljmp
insl
stc
pop
ds
mov
scas
jno
ss
add
std
pop
mov
mov
push
push
jbe
sub
xlat
icebp
scas
pop
sar
dec
cmp
xchg
das
ds
loope
cmp
sub
scas
orl
jl
movsb
fdiv
and
dec
cli
push
jmp
aam
jle
fwait
xchg
sub
insb
les
cmc
insl
je
cmp
imul
mov
push
mov
mov
movl
mov
jmp
xchg
jb
jg
dec
mov
cs
add
jle
jns
jle
arpl
push
push
pop
cmp
into
push
inc
adc
rcrb
push
cmc
adc
adc
es
aaa
push
fisttps
pop
mov
loopne
scas
shlb
dec
enter
mov
add
push
lret
test
insl
mov
pop
jge
movsl
push
jle
arpl
fidivrs
rclb
adcl
push
dec
adc
cvtps2pd
dec
sbb
dec
push
jle
in
xlat
jl
or
push
out
dec
pop
bound
dec
cmp
shl
aas
inc
cmp
cmpb
mov
sub
xchg
cmp
and
inc
lods
mov
mov
sub
in
lea
addr16
or
sub
cmc
aam
pop
test
or
jns
outsl
aas
sbb
mov
adcl
test
shl
push
jne
test
cmpl
std
push
into
jae
hlt
sbb
push
les
shll
mov
push
pop
dec
gs
leave
adc
test
add
mov
sahf
push
and
loopne
lea
arpl
xor
std
inc
mov
dec
pop
aam
fcomi
or
shlb
fxch
cs
out
pop
es
fdivr
sub
in
xchg
adc
daa
pushf
xchg
add
rclb
or
add
lret
cmpsl
mov
daa
sub
ljmp
sbb
lcall
scas
jnp
push
sbb
inc
pop
xor
push
mov
jl
and
mov
lret
mov
cmc
cli
out
dec
pusha
cmpsb
cmp
ret
je
jne
dec
enter
pop
sahf
pop
mov
pop
adc
pop
or
push
mov
mov
mov
fs
push
or
mov
jo
nop
xchg
jmp
popf
int
mov
sbb
icebp
xor
outsb
cmp
adc
adc
fbstp
xor
mov
insb
push
sub
jle
dec
xor
mov
andb
andb
mov
and
stos
mov
iret
inc
jae
add
sbb
mov
daa
iret
pusha
insl
push
push
mov
sbbl
cli
jo
sbb
sbb
xchg
in
outsl
pop
fmuls
push
adc
shlb
mov
push
mov
jg
lcall
aas
jbe
call
or
jbe
mov
test
jl
int3
lret
or
sub
addr16
stos
mov
add
and
pop
add
dec
cmpsb
sub
imul
xlat
lahf
push
xchg
push
adc
inc
push
stc
loop
roll
jo
add
nop
jno
pop
pop
push
pop
adc
add
xchg
sahf
push
cmpsl
fcmovne
fcomi
jle
repz
xorl
cmp
jo
push
pop
xor
in
xchg
mov
add
addr16
or
mov
mov
or
push
cmpb
mov
ret
nop
add
lods
push
lea
loopne
inc
in
mov
mov
das
xchg
mov
movl
movl
jmp
mov
pop
arpl
inc
scas
imul
jns
jle
cmp
and
pop
setle
shll
and
jo
mov
loop
mov
xchg
stos
pop
pop
lret
inc
cmp
inc
test
sub
add
sahf
mov
mov
ds
pushf
out
cmp
lcall
in
push
jl
repz
mov
push
aam
rol
stos
dec
jb
cmp
sbb
lods
aam
insl
jmp
and
ret
lea
out
xlat
or
lods
jle
xlat
or
scas
mov
lods
sub
mov
jo
in
jge
mov
roll
ret
out
leave
push
dec
push
sbb
mov
out
hlt
xchg
insb
cli
cld
cltd
std
pop
in
inc
jne
pop
jmp
mov
pop
pop
cmpb
jmp
mov
fnstenv
sti
mov
bound
addr16
xchg
outsb
pushf
mov
aad
push
jecxz
leave
lods
andl
sbb
fcoml
pop
inc
xchg
mov
jmp
sbb
in
ss
pusha
sub
pushf
inc
ljmp
mov
adc
xchg
jo
out
xor
daa
mov
jmp
movsb
pop
adc
shrb
xor
push
pop
mov
mov
mov
xchg
adc
ds
divb
cld
lods
pop
outsb
cmp
repz
cmp
inc
iret
xor
pop
mov
imul
mov
loope
and
clc
xor
ret
sub
pop
jp
shrl
mov
jns
repz
daa
cmp
rcl
jp
loope
add
jbe
push
inc
test
push
fsubrl
xor
lret
sarb
mov
aad
out
cmp
adc
sub
push
mov
imul
in
mov
pop
in
inc
ja
pcmpgtw
inc
pop
mov
icebp
cmc
inc
sarb
xchg
or
and
aas
mov
outsb
icebp
sub
pop
cs
movsl
fndisi(8087
lds
repnz
mov
cld
das
xor
add
fidivrs
inc
xchg
aam
push
mov
int3
in
fcomps
cmp
jmp
xchg
fdivrp
rcrb
stc
imul
icebp
cld
push
aad
dec
rclb
das
out
add
xor
test
or
sbb
mov
fsubl
ja
xlat
jecxz
mov
cmpsl
outsb
push
pop
or
js
ljmp
iret
clc
fisubl
and
rolb
and
rcl
imul
and
les
lea
pop
jb
movsb
push
push
sub
cmp
add
imul
cs
addr16
orl
dec
push
lahf
dec
sti
sbb
dec
pop
jno
dec
rol
mov
scas
xchg
add
jno
out
xchg
test
jbe
add
inc
and
call
push
xchg
adc
mov
ljmp
cli
sub
repz
push
push
adc
mov
push
mov
dec
mov
cmp
jne
add
mov
andl
mov
subl
xor
or
mov
andl
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
jmp
movsb
jb
push
cld
pop
gs
call
insb
fbstp
jns
jle
repz
mov
bound
testb
das
shll
sbb
pop
cmpl
les
cmp
dec
stc
mov
int3
iret
popf
mov
out
hlt
or
fwait
jecxz
loope
pop
fsubl
mov
mov
aad
addl
sti
cmpsl
int3
imul
add
add
fs
push
adcb
aam
cmp
imul
lods
fmul
lcall
adc
mov
xchg
mov
daa
mov
scas
loope
nop
pop
jbe
leave
sub
sbb
mov
adc
add
jl
shl
jmp
cmp
mov
pop
adc
dec
aam
mov
enter
in
mov
inc
jp
pop
in
pusha
cmpl
mov
mov
push
mov
dec
int3
cmpsl
mov
inc
ds
out
lods
scas
pop
movsl
fldt
out
sti
push
xor
daa
inc
fucomp
mov
test
lods
sub
dec
pop
jno
push
jg
pusha
les
push
jle
inc
add
fidivs
jnp
jno
insl
data16
rdtsc
insl
sbb
push
ss
addl
jg
xchg
mov
mov
cli
mov
and
inc
imul
mov
addb
sub
insl
mov
aaa
adc
imul
add
stos
out
cld
mov
test
sub
setle
pop
out
cmp
push
bound
xchg
insl
mov
jl
pushl
shlb
insl
sbb
inc
nop
out
add
hlt
mov
push
or
push
jo
lods
aam
cmpl
aad
mov
aam
gs
pop
roll
pop
inc
fstpt
xchg
rcrb
jnp
mov
sub
imulb
ds
aaa
stc
mov
loop
iret
mov
xor
mov
jne
push
imul
jne
cmp
mov
jae
mov
js
sbbb
mov
pop
std
dec
rcrb
fiadds
imul
test
mov
push
sar
movsb
sbb
jp
mov
mov
not
mov
mov
das
dec
mov
pop
or
push
lods
or
rcll
gs
cmp
imul
lret
cmp
adc
icebp
rolb
out
inc
dec
mov
leave
leave
add
imul
or
inc
fidivs
jo
push
cld
push
xchg
outsl
fsts
cwtl
notb
mov
mov
scas
test
dec
icebp
inc
loop
mov
push
fidivrs
repz
repnz
sub
cmpsb
into
cld
sub
cli
scas
sbb
imul
in
arpl
sub
bound
jnp
cmp
pop
imul
cmp
imul
pop
inc
rep
xor
jne
pop
ret
shl
adc
packuswb
xor
or
push
bound
jp
je
leave
ret
push
mov
sub
movl
movl
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
jmp
and
ss
cmc
lock
sahf
rol
push
push
cmpsl
jae
jle
dec
jns
jle
sbb
sbb
in
sub
mov
mov
ss
out
bound
dec
sub
push
cli
add
ficomps
dec
push
mov
sbb
lea
in
add
call
jno
mov
cmp
pop
lock
pop
rolb
mov
jb
addr16
adc
test
pop
cld
xchg
jnp
and
sub
mov
fldt
sub
rorl
sti
sub
out
repz
jnp
cmc
shrb
sti
mov
pop
js
push
mov
sub
adc
cmp
ja
mov
cmp
sub
xor
test
fnstsw
or
xchg
stos
sahf
xchg
mov
dec
orb
xchg
inc
mov
add
xor
fucomi
pop
stc
outsb
cmp
cs
sub
lea
sbb
div
push
cmpsl
cmp
dec
push
jae
dec
and
jge
and
dec
pop
push
and
popa
push
sub
in
mov
xchg
xchg
in
adc
dec
add
mov
outsl
out
mov
dec
das
imul
cmpsl
fcomi
push
mov
cwtl
and
or
xlat
lahf
jl
std
sbb
aad
outsl
pop
icebp
cmp
cmpsb
fsubrs
loope
dec
lods
sub
mov
fbld
mov
loopne
in
dec
jno
adc
and
push
and
jns
mov
mov
ja
mov
mov
mov
inc
mov
mov
xchg
jne
movsl
mov
dec
jb
xchg
movsl
push
sbb
aas
fcmovb
bound
int
and
mov
xor
push
cmp
mov
jecxz
movsl
push
notl
push
movsl
sbb
movsb
add
loopne
adc
jmp
pushf
add
jns
lods
and
inc
pop
dec
push
xchg
pop
adc
int
mov
andb
scas
push
xchg
dec
sysenter
gs
add
pop
sub
cmp
lret
mov
lock
and
or
xor
outsb
hlt
lret
push
div
adc
dec
imul
xorl
mov
daa
jns
push
leave
mov
push
jne
pop
sub
xchg
push
mov
pop
shlb
stos
clc
inc
pop
inc
fidivrs
mov
lahf
dec
popf
or
push
divb
jecxz
adc
xchg
mov
jp
and
mov
xorl
lahf
in
mov
pop
or
pop
push
sub
pop
sbb
push
cmp
stos
sub
pushf
jo
xchg
stc
adc
push
jnp
cmpsb
xchg
pop
fcomps
in
jecxz
push
test
add
xorb
mov
iret
push
mov
inc
push
or
mov
imul
shl
cmp
lahf
or
mov
lods
mov
or
out
insl
sbb
mov
adc
sub
sets
add
stc
jl
ds
mov
cld
cmpsb
xor
mov
xor
aad
push
imul
xorb
rorl
inc
push
movsb
xor
jno
inc
push
lea
and
icebp
sbb
xchg
push
out
daa
mov
mov
movsb
fs
fcmovnb
lds
das
test
leave
shufps
mov
sbb
mov
xchg
bound
ficoml
scas
js
das
mov
jecxz
cmp
adc
mov
sahf
cmp
sub
xchg
call
mov
mov
jge
push
mov
and
pusha
or
dec
out
jg
fisubl
sbbl
inc
fmull
mov
mov
or
mov
mov
adc
mov
sbb
mov
push
sub
lea
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
jmp
call
mov
dec
mov
push
inc
sbb
int
cmp
dec
jns
jle
test
add
pushf
test
negl
add
pop
or
shrl
sbb
sbb
push
sbb
cltd
mov
imul
lss
fisubl
add
cmc
lods
icebp
fstpl
call
jbe
push
ds
rcr
test
push
inc
mov
fstl
fldl
test
sti
xor
sti
sub
cmp
mov
aaa
divl
dec
sbb
cmpsb
inc
push
cmp
mov
stc
sbb
divl
and
fs
mov
adc
scas
imul
pushf
mov
cmc
aas
mov
movsl
and
jp
dec
mov
push
sbbl
test
jle
lds
and
pop
xor
pop
imul
cwtl
movsb
cmp
jbe
loope
mov
test
mulb
out
jae
data16
cmpsb
add
insl
into
cmp
adc
mov
mov
lds
aas
jge
mov
pop
bound
jle
lods
inc
cld
test
mov
shrl
push
lret
add
pushf
inc
iret
xchg
jns
sub
jb
cmp
fisttpl
subl
pop
push
jp
ja
icebp
sub
lcall
pop
push
xchg
call
fs
push
mov
insb
ret
rclb
and
adc
les
jbe
sbb
repz
and
cli
pop
cli
mov
mov
in
fdiv
insl
cmp
mov
ficoml
clc
bnd
imul
popl
jbe
test
in
into
ljmp
lds
lds
and
das
jmp
test
int3
cvttps2pi
sahf
je
push
mov
fmulp
ret
cmpxchg
sbb
int
rcll
loop
sub
aam
mov
mov
lea
pushf
push
push
aas
or
add
ret
test
cld
repnz
aam
or
mov
cli
arpl
ljmp
mov
addb
jmp
mov
fcoml
add
push
ret
jle
int3
dec
mov
and
xorb
loope
out
fdiv
cmp
fidivrl
in
popa
push
sbb
iret
mov
mov
add
adc
add
int
mov
fstpt
shr
sub
sub
outsl
and
jb
icebp
jg
scas
dec
and
mov
popa
dec
adc
add
aaa
add
cltd
push
jae
push
arpl
enter
popf
fs
cmp
or
inc
lar
xchg
mov
adc
leave
pop
pop
cmp
jecxz
hlt
add
mov
popa
jnp
cmc
imul
jp
ljmp
imul
mov
imul
fcoml
and
mov
movsb
push
lret
lcall
enter
mov
jns
mov
ss
js
and
insl
imul
adc
and
push
aad
dec
das
lcallw
pop
negl
shr
movsl
repnz
int3
sbb
dec
ljmp
mov
and
pop
sub
enter
cmp
inc
ljmp
fisubl
push
cld
rcrb
xor
inc
sbb
fcompl
xchg
loopne
faddl
std
xor
mov
push
pop
cmp
sbb
jae
adc
leave
rcr
add
stc
mov
mov
mov
mov
xor
mov
xor
sbb
mov
xor
addl
xor
add
sbbl
add
div
mov
jmp
inc
push
sti
sbbl
mov
dec
popf
jle
dec
jns
jle
xor
test
repnz
leave
out
enter
or
jns
add
dec
dec
and
sub
mov
sbb
xor
cli
imul
xchg
outsb
mov
mov
push
bound
cmp
stc
lods
scas
aam
shll
rol
sub
adc
faddl
aas
add
pop
fisubl
inc
xorl
xlat
xchg
mov
or
mov
cmp
mov
mov
fsts
repz
xor
js
pop
out
aam
adc
mov
xchg
fimuls
call
adc
cmp
adc
leave
adc
mov
scas
lods
jecxz
and
mov
mov
adc
dec
xchg
leave
test
cmp
push
insl
push
lods
jmp
pop
in
jle
mov
or
jo
xchg
sbb
cltd
xchg
and
iret
cmp
dec
movsb
jmp
fwait
in
ljmp
jmp
sbb
pop
mov
ljmp
or
xchg
cmpsb
rorb
dec
push
adc
mov
es
lret
xor
pop
add
jl
push
push
test
xchg
mov
jle
inc
lock
std
ja
insb
push
fisubs
inc
inc
les
negb
sahf
mov
loopne
xchg
outsl
pop
jg
mov
arpl
lods
aad
cmovno
dec
pop
cmp
lcall
mov
fistpl
pusha
scas
iret
arpl
sbb
jns
out
inc
push
les
add
push
outsl
push
and
aad
lods
adc
push
hlt
xchg
in
jno
mov
icebp
adc
rcrb
loope
arpl
scas
aaa
mov
and
push
jp
js
sbb
movsb
movsb
outsb
sbb
and
xchg
mov
jo
cmp
jnp
aam
sub
cmpsl
fs
push
adc
jle
pop
pusha
xchg
sbb
rcrb
mov
or
cmpsl
sub
xchg
out
or
mov
jle
fs
bound
inc
inc
cmc
xlat
loop
andl
and
push
test
pop
outsl
xor
sub
cld
mov
cmpsb
push
div
push
test
inc
je
mov
popa
push
pop
mov
pop
notl
sub
push
outsb
decb
jo
lcall
scas
and
cli
popf
pop
push
or
and
test
fidivs
sub
insl
cmp
mov
cmp
lods
jl
mov
loopne
mov
loope
mov
jle
xor
adc
pop
aam
in
mov
xchg
int3
pop
fisttpll
or
mov
fcoml
cmc
jae
popf
ss
lret
pandn
outsl
addr16
cli
adc
aam
sti
dec
adc
dec
dec
sbb
sbb
test
inc
mov
jo
xchg
addb
stc
pusha
cmp
sbb
mov
stc
xorb
mov
lods
into
cmp
pusha
lcall
push
mov
lock
lods
sti
aam
stos
ret
jne
sub
pop
xchg
pop
xchg
xchg
aas
jae
sahf
in
cmp
pop
or
xor
pusha
loopne
loop
imul
in
inc
dec
inc
fdivrl
daa
daa
cmc
cmpsl
fnstsw
insl
shr
xchg
and
cmp
out
cwtl
out
xlat
inc
lods
jbe
mov
cwtl
xor
mov
int
pop
idiv
mov
mov
ds
sti
stos
stos
cmp
shll
add
add
add
jmp
shlb
cld
ja
or
out
ret
jle
dec
jns
jle
xor
les
jecxz
testl
sub
fs
lods
mov
shrb
xor
pop
push
pop
insb
and
cmovg
rol
mov
mov
cmp
cld
js
or
push
add
repz
mov
mov
mov
xlat
test
sub
mov
sti
sub
mov
mov
in
cmp
mov
push
mov
vcvtps2dq
xor
add
sub
mov
pop
pop
je
insl
xlat
xlat
add
ja
xlat
ds
data16
popa
inc
push
cmp
mov
pop
ja
push
mov
sbb
pop
nop
rorl
frstor
lea
jo
jl
cmpsl
mov
jbe
jg
push
mov
into
and
lods
movsb
sub
scas
aam
je
fs
clc
jg
nop
movsl
popf
and
add
in
jno
mov
mov
popf
inc
scas
mov
enter
ja
enter
aas
push
in
shrl
in
in
add
cmpsl
into
or
lock
cs
mov
jns
pop
loop
or
je
stos
sub
mov
mov
cmp
sbb
out
mov
shll
add
adc
jmp
outsb
sub
adc
aaa
xchg
jbe
jo
mov
out
lods
jmp
mov
outsb
xchg
sbb
outsb
ds
jae
mov
loopne
adc
into
clc
mov
xchg
jnp
pop
imul
or
sub
in
sbb
add
xor
cmp
lods
xchg
pop
es
xchg
repz
jmp
add
jbe
insb
mov
jecxz
orb
ret
cmp
add
xor
inc
test
xlat
test
loopne
jecxz
adc
mov
xchg
aaa
pop
jae
out
sub
rorl
mov
sub
pop
xchg
lods
sti
mov
popf
cmp
repnz
push
cmc
dec
decl
push
mov
pop
out
test
jp
cmp
jg
into
popf
mov
jg
adc
mov
or
out
jecxz
ja
sbb
js
mov
push
and
xor
jnp
mov
cmpl
int
jp
scas
lahf
adc
aas
push
popf
pop
test
or
mov
mov
jae
sub
sbb
mov
dec
dec
pushf
and
dec
mull
lock
push
test
fidivrs
fwait
pusha
xchg
pop
into
scas
inc
or
or
add
loopne
adc
sbb
push
pop
icebp
ds
mov
rdpmc
lret
sti
jge
push
dec
pop
int
jb
into
or
sub
xchg
es
les
adc
sub
adc
fs
or
push
xchg
mov
out
push
fs
and
imul
dec
add
cld
test
jp
pop
sbb
or
cmp
movsl
cmp
mov
xorb
stc
pop
je
or
jno
clc
nop
lcall
imul
push
dec
cwtl
push
leave
imul
xchg
jne
sahf
pop
cmp
mov
cmpsb
lss
xor
sub
push
sub
test
adc
aaa
xor
outsb
push
mov
scas
aas
loopne
and
ds
or
xrelease
movl
cmp
movl
je
movl
lea
addl
mov
xor
mov
not
mov
orl
imul
movl
mov
movl
mov
cmp
je
mov
mov
sub
sub
mov
orl
mov
xor
add
pop
pop
jmp
pop
add
or
add
mov
jle
dec
jns
jle
movsl
shlb
add
scas
sbb
popf
testb
mov
mov
xchg
in
xor
inc
in
les
push
add
jno
dec
xlat
sub
popa
cmp
xor
lds
aas
pop
imul
sbb
cltd
xchg
sbb
scas
jnp
or
and
test
push
xchg
lods
rol
fwait
shlb
adc
jl
jbe
cmpsb
daa
cmp
pushf
and
xchg
pop
in
cwtl
ret
fwait
bound
add
jle
inc
jmp
dec
fstps
sub
inc
ret
ss
push
out
push
loopne
ljmp
int3
gs
jp
iret
inc
movsl
fimull
dec
fnstenv
dec
adc
gs
ficompl
scas
cmp
push
pop
enter
fcoml
shl
dec
mov
les
sub
lds
test
cmc
pop
and
repz
popf
lret
cmp
mov
mov
add
out
xor
mov
imul
jg
sbb
xor
dec
xchg
lret
jle
test
lods
pop
or
cltd
mov
out
or
mov
mov
dec
popf
loope
xor
push
cmp
add
xor
ja
es
fldl
cmp
xchg
or
adc
fidivrs
sarb
rolb
mov
rcrb
cmp
imul
mov
leave
jbe
or
ret
outsb
pop
jae
pop
loopne
loopne
xchg
or
fsubrl
imul
add
sub
push
daa
call
sahf
pop
ret
mov
aas
and
jns
pushf
loop
sbb
cmp
mov
mov
or
lods
inc
adc
push
push
rol
adc
inc
divb
sub
gs
sbb
inc
stos
mov
push
stc
repnz
adc
sbb
ss
scas
mov
out
andb
out
mov
and
pushf
add
xor
fcoml
outsb
jmp
dec
int
inc
loopne
mov
test
pop
cmp
sub
jecxz
mov
mov
fnop
lock
cli
mov
inc
push
push
mov
or
pop
adc
popf
cli
cmp
outsb
inc
sub
and
xor
int3
add
scas
cmp
push
out
mov
imul
adc
xor
jae
dec
js
lods
push
jae
mov
xor
call
mov
mov
in
and
jl
sbb
mov
pop
jecxz
inc
loopne
or
stos
sub
scas
fadd
stc
fbld
jnp
fsubrl
scas
cli
or
mov
mov
decl
push
mov
mov
or
mov
jp
iret
dec
into
sbb
dec
stos
mov
lret
sub
lods
call
pop
ret
loope
not
sub
fxch
out
lret
cld
xor
mov
mov
xor
xor
mov
pop
icebp
add
mov
and
ds
pop
inc
fisubl
in
mov
fnsave
inc
push
insl
mov
sti
test
jno
cmc
out
test
pushf
fcoms
fimuls
xchg
js
and
xchg
add
loop
xchg
imul
pop
or
push
test
pop
xchg
leave
push
std
arpl
xchg
mov
int3
adc
fwait
ds
push
iret
icebp
cmp
mov
mov
jns
or
mov
add
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
jmp
ret
or
insl
pop
jmp
pop
sbb
or
jle
dec
jns
jle
das
in
cli
jno
jmp
dec
cmpb
cmp
pop
dec
add
xor
pushf
pushf
sub
loop
imul
push
mov
stos
inc
or
mov
test
push
inc
pop
cltd
jp
pop
pop
adc
mov
and
movsl
rolb
out
xchg
cli
jge
push
fdivrs
sbb
add
and
add
popf
fists
mov
pop
push
out
mov
jb
das
and
imul
stos
sub
in
xor
pop
fimuls
movsb
dec
in
fcomi
sbb
xor
jmp
jnp
push
fists
mov
stos
push
scas
aam
insb
stos
jmp
into
test
daa
inc
popf
movsb
fs
pushf
aas
adc
ja
mov
iret
mov
loopne
mov
fcmovu
aaa
pop
xchg
call
dec
mov
popf
mov
xor
push
cmpl
sbb
pop
push
mov
xchg
mov
xchg
popa
cmp
adc
addl
popa
out
insl
mov
call
sbb
test
cmp
sbb
sbb
xorb
pop
sub
sarb
iret
jmp
bound
adc
sbb
rcr
imul
fists
ljmp
xchg
pusha
jl
lock
je
sahf
mov
and
test
and
jp
je
in
leave
imul
cltd
clc
gs
out
adc
insl
popa
mov
lods
sub
inc
mov
scas
out
cmc
xor
mov
cli
add
inc
and
jle
and
lods
mov
daa
dec
shll
aam
call
or
dec
out
fcmovu
in
or
mov
dec
lahf
in
repnz
inc
push
scas
or
cmp
insb
gs
cmpsb
pop
jno
xchg
and
jmp
cmp
xchg
dec
mov
rorb
pusha
cld
mov
adc
std
xchg
or
int3
notl
loope
sbb
inc
int
push
xor
ficomps
cmp
cmp
int
test
ret
xchg
pop
xchg
and
inc
aas
cmp
add
xor
cld
dec
pop
ljmp
jle
in
jns
xchg
icebp
pop
int
imul
dec
fdivl
std
push
jbe
ja
pop
outsb
pusha
lcall
sub
ret
sub
aad
sbb
leave
popa
dec
or
add
daa
insb
cs
dec
dec
stos
call
fwait
lcall
fs
gs
xchg
out
popa
es
add
loope
inc
bswap
pop
mov
cwtl
ret
cmp
scas
ljmp
scas
dec
and
icebp
sahf
arpl
aas
je
pop
mov
sub
push
push
push
and
push
mov
test
popa
dec
in
mov
test
ss
mov
data16
fwait
repnz
mov
push
mov
adc
jg
je
fstps
inc
add
cltd
push
aas
loope
aam
xchg
xchg
loope
xor
sbb
xchg
pop
lds
sbb
or
mov
xor
loopne
ds
pop
shlb
push
push
mov
nop
sarl
loope
lret
inc
mov
sub
or
test
mov
and
and
aaa
cltd
or
lea
fwait
xor
jnp
mov
mov
je
cs
inc
dec
arpl
pop
pop
stc
dec
push
in
mov
lret
cmpsb
jg
xor
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
jmp
int
adc
push
pop
dec
xchg
leave
mulb
inc
mov
pusha
pop
jle
dec
jns
jle
add
mov
adc
xchg
adc
xlat
jnp
lcall
add
les
xchg
sbb
mov
dec
or
psrlw
mov
loopne
scas
pop
rcll
jl
stc
xchg
mov
clc
push
xor
cli
lret
movb
mov
cmp
gs
and
aas
adc
xchg
push
dec
scas
pusha
test
pop
repz
push
cmpb
imul
addl
adc
fbld
mov
or
dec
pop
mov
xchg
or
inc
or
cmc
xor
outsl
stos
jnp
iret
and
adc
imul
xchg
mov
sti
xor
xor
fsubl
mov
loopne
sub
loopne
xor
fwait
imul
pop
sub
sbb
mov
fstl
xchg
jno
mov
into
outsb
jl
mov
shlb
pop
or
mov
fdivp
push
mov
push
imul
xchg
jg
jnp
dec
sbb
push
pop
dec
lea
movsl
adc
fidivrs
inc
push
into
paddusb
pop
xlat
push
mov
repz
lret
movsl
stos
push
pushf
faddl
test
popf
lret
or
gs
mov
int
jle
shrl
mov
ret
xchg
scas
pop
jg
fdiv
and
cmp
ds
and
cmpsb
pop
int3
pop
mov
movq
std
mov
xchg
xor
shr
mov
mov
leave
jns
mov
or
into
push
xor
jb
pop
dec
push
mov
pop
subb
mov
xchg
aad
jne
jnp
and
push
adc
jnp
int
rcrb
adc
xor
rcrl
pop
test
test
sahf
mov
add
jp
ja
mov
pop
cwtl
inc
mov
les
mov
enter
push
cld
popa
dec
loopne
loopne
mov
fisubl
subl
add
adc
sbb
xor
push
loope
daa
sub
nop
xchg
or
push
add
cli
dec
add
mull
mov
lds
je
filds
cmp
test
je
cmp
pop
mov
lea
push
test
adc
sbb
add
mov
sub
xchg
and
cmp
mov
outsl
inc
add
mov
in
scas
mov
out
movsb
sti
lock
das
stos
adc
outsb
and
inc
sbb
mov
sahf
sar
fstl
sub
xchg
xor
mov
rcr
mov
call
xchg
popf
pop
adc
dec
movsl
mov
scas
push
xchg
rorb
pop
fisubrs
adc
pop
xchg
mov
in
call
jle,pn
dec
pop
jbe
pusha
mov
ret
sbb
adc
and
int
add
xchg
ret
and
or
das
sub
jp
and
mov
call
push
add
mov
outsb
xchg
loopne
inc
es
ret
dec
and
int
cmc
sbb
sbb
jb
add
andb
out
or
loope
mov
cmp
dec
xchg
lahf
out
fdiv
jecxz
les
rclb
inc
adc
setne
inc
imul
cwtl
shlb
pop
jo
mov
push
leave
stc
adc
add
mov
xchg
pop
pop
sbb
int3
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
fadd
test
rorb
insl
pop
jl
imul
stos
sarb
dec
jns
jle
mov
popf
iret
xor
mov
test
subb
scas
or
lods
adc
shlb
sub
icebp
cwtl
and
jmp
cmpsb
lods
ja
sub
les
or
sub
cwtl
js
push
das
adc
mov
sub
add
test
adc
xchg
sahf
jb
xchg
mov
mov
bound
sub
out
jae
repz
pop
lods
cmp
pop
and
outsb
ret
sbb
repnz
push
ret
adc
pop
inc
inc
mov
dec
in
test
jle
ljmp
outsb
popf
in
add
into
mov
sub
push
ficompl
into
jae
je
out
in
mov
je
stos
cli
pop
dec
push
int3
xchg
test
inc
xchg
sbb
add
ffreep
jmp
cltd
into
pushf
or
dec
mov
inc
lds
push
cltd
or
shlb
and
inc
cwtl
int
shll
dec
jbe
mov
jp
sbb
sub
ljmp
adc
xor
mov
mov
aaa
jns
ret
sub
inc
push
cmpsl
data16
dec
push
xor
mov
xor
test
and
add
aaa
xchg
aam
nop
imul
ror
das
mov
lcall
add
cwtl
xor
pop
cmp
cwtl
ja
pop
xchg
in
ljmp
mov
mov
lret
pop
push
sub
imul
rorb
add
or
pushf
pop
dec
in
dec
repnz
adcb
cld
lahf
cmp
xchg
or
aad
popf
shlb
ss
push
dec
jo
insl
mov
cmp
les
std
faddl
scas
into
movsb
addr16
nop
dec
xchg
add
movl
in
ret
cmpsl
mov
mov
mov
dec
popa
leave
aam
jg
out
flds
in
mov
lock
je
stos
pop
test
push
mov
shll
mov
rep
mov
mov
pop
cld
roll
push
fmull
mov
xor
mov
or
mov
add
jb
add
add
add
sbb
cmp
mov
outsb
lods
xchg
jo
repnz
lret
pusha
dec
test
pop
jne
push
cli
sbb
cwtl
out
xor
inc
das
popa
or
pushf
or
enter
pushf
cmp
shll
add
dec
call
lods
and
je
xchg
dec
push
fisttpl
data16
jg
sub
scas
push
ja
jae
sub
adc
enter
xor
leave
mov
lret
xchg
scas
roll
cmp
out
mov
xlat
or
in
mov
adc
stos
fbld
sub
xor
decb
cmp
inc
fstps
insl
ss
lcall
lds
jl
jbe
add
push
rclb
and
xchg
cmp
mov
inc
xchg
jns
jne
sub
jle
and
cmp
sub
adc
clc
dec
leave
fidivrl
sub
in
call
mov
mov
movsb
aad
pop
movsb
and
icebp
sar
arpl
or
enter
jo
mov
pop
inc
xchg
enter
clc
out
push
cwtl
rcrb
mov
inc
mov
js
jbe
stos
cmpsl
sbb
popf
jmp
ret
or
imul
decl
add
inc
pop
jmp
mov
cmp
je
mov
jmp
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzbl
sbb
mov
sbbl
push
xor
or
sbb
push
jmp
jmp
lahf
xchg
mov
sbb
out
push
rolb
jle
loope
jle
es
fneni(8087
stos
pop
pop
dec
cmp
xlat
and
lds
xor
sub
jno
add
inc
pop
mov
or
aad
inc
cmpsb
jno
pop
lret
je
lock
cld
bound
rcrb
mov
or
add
adc
mov
fsubs
jecxz
repnz
xlat
pop
scas
stc
sub
subl
jo
insb
cmp
and
cmp
adc
dec
push
sbb
popa
inc
out
test
xor
xor
mov
roll
sub
in
dec
adc
mov
jns
and
pop
rorl
rcrl
xor
pusha
cltd
mov
adcb
or
jnp
lods
addr16
sbb
icebp
push
mov
or
aad
out
mov
lock
ljmp
in
mov
pop
cmp
push
xchg
push
sti
jecxz
push
int3
sub
push
xor
jo
out
add
xchg
call
ds
or
imul
fwait
popf
sub
imul
mov
inc
test
jecxz
fisubl
vmovaps
daa
dec
push
xchg
mov
jns
inc
fwait
push
cwtl
mov
mov
loopne
sbb
and
sbb
sbb
test
lds
xor
cmp
jae
stos
mov
jne
sbb
lret
outsb
push
lret
or
push
jecxz
stos
pushl
stos
dec
sbb
xchg
push
punpckhbw
xchg
mov
movsb
jle
repnz
mov
ret
sbb
adc
imul
ds
jp
push
out
xor
and
pop
and
insb
lret
out
mov
jle
ret
jg
andl
xor
das
xor
cmc
call
push
mov
xchg
inc
and
les
cmp
mov
mov
and
ret
loopne
mov
fisubs
pop
xchg
jno
jb
lods
and
cli
adc
add
push
fs
pop
inc
js
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
mov
add
push
sub
mov
xor
jmp
push
ja
push
aaa
push
jo
mov
loop
outsb
fdivrs
loope
jle
add
mov
add
repz
xor
add
movsb
rcr
push
mov
decb
mov
xor
pop
mov
fimull
iret
sub
jnp
dec
mov
dec
add
jo
mov
in
mov
pop
mov
adc
mov
rclb
out
push
aas
ret
pop
push
mov
jl
xor
test
ss
inc
sbb
into
inc
aam
fsubrl
sbb
xchg
leave
mov
sub
dec
popf
lret
sbb
mov
arpl
insl
pop
xchg
shl
sar
dec
lock
push
sub
ret
adc
xor
add
and
pop
out
lods
mov
xchg
mov
pop
les
mov
or
stos
fs
call
fucomip
xchg
fbstp
gs
andb
jb
popf
sbb
jg
push
cmpsl
inc
jle
ret
cmp
xchg
jnp
imul
mov
dec
sbb
and
movaps
pushf
cmp
mov
dec
inc
sbb
sub
cltd
mov
mov
jp
lcall
sahf
mov
add
pop
pop
cld
push
lds
dec
xor
jmp
mov
sub
into
pop
pop
clc
xchg
jg
fdivs
push
or
pop
cmp
inc
scas
mov
push
pop
cmc
mov
pop
push
shrb
or
inc
xchg
adc
sarl
cs
into
gs
cli
fmuls
jge
xchg
fwait
out
mov
subl
mov
dec
fbld
daa
or
fstp
pushf
cmp
das
ja
mov
ret
mov
into
mov
inc
notl
mov
icebp
dec
inc
jmp
inc
cmp
je
cmp
clc
mov
bound
in
pop
push
mov
fildll
mov
pop
push
int
ret
mov
dec
and
movsl
sbb
jp
adc
push
xor
dec
jge
mov
inc
mov
out
mov
mov
add
xchg
sub
xchg
xchg
mov
xor
notl
movl
movl
add
jmp
cmp
jmp
adc
sbb
xchg
pop
adc
push
adc
jle
js
jle
insl
aam
xor
jae
and
loopne
xchg
inc
gs
xchg
or
push
stos
aaa
sbb
xchg
cwtl
inc
pop
add
ret
cmpsb
sub
in
sbb
jns
outsl
jne
fs
push
add
stos
loope
or
mov
popf
mov
xchg
xor
inc
std
adc
shrb
repnz
mov
mov
xor
jecxz
cmp
fcomip
jmp
call
lret
mov
mov
xchg
stc
mov
pop
clc
mov
cmp
mov
pop
sub
push
mov
addl
mov
popf
dec
fisttpll
xor
inc
mov
ret
jae
fwait
pop
js
paddd
cmp
jo
mov
pop
add
or
movsb
xchg
fdivr
mov
push
jg
sbb
adc
lahf
aam
sub
stos
and
pushf
mov
mov
cmpsb
imul
mov
mov
pop
jmp
pusha
inc
jle
incl
rcll
jp
sub
decl
sub
mov
adc
lds
mov
pop
rcrl
stos
jmp
fwait
and
sahf
mov
lahf
push
xchg
and
je
aam
and
push
fmul
and
jge
fcoml
imul
jp
imul
je
js
jecxz
mull
jge,pt
dec
ror
jb
ja
popf
inc
scas
fucomp
fsubl
test
mov
lock
jbe
das
push
sti
xchg
sbb
adc
hlt
or
leave
mov
ret
test
xchg
out
stos
push
sti
test
cmp
clc
mov
cmp
test
ljmp
pop
fisttps
je
daa
popl
enter
roll
sbb
out
sti
mov
dec
loop
xchg
enter
mov
sub
sub
cmp
adc
sub
xor
xchg
inc
xor
xchg
ret
mov
cmc
fisttps
fnstsw
lea
mov
pop
adc
inc
dec
mov
xlat
adc
je
rcr
int
and
test
add
mov
mov
movl
mov
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
jmp
call
je
fnsave
inc
leave
out
neg
mov
in
jle
js
jle
push
push
jge
xor
sub
xor
and
sbb
dec
push
xor
int3
test
inc
ficoms
dec
mov
mov
js
int3
bound
mov
mov
push
dec
rclb
leave
insl
ljmp
sub
mov
stc
fisubs
lahf
dec
pusha
mov
pop
int
enter
add
loopne
mov
repz
xlat
stos
mov
and
mov
test
sub
xor
adcl
call
xor
mov
rcrb
push
mov
shlb
fadds
mov
cmp
cld
pop
mov
nop
fbstp
je
popf
ja
pop
lcall
mov
mov
bound
std
jmp
sbb
pusha
sub
cmc
gs
sub
das
shll
and
insl
mov
jnp
xchg
add
cmp
cltd
jo
mov
ret
mov
lods
mov
sahf
scas
jmp
cmp
arpl
sub
mov
dec
pop
loope
sub
pop
cmp
loopne
dec
out
xor
pop
aad
pusha
add
lods
mov
add
loope
frstor
sub
aam
inc
xor
push
fldcw
add
or
test
loope
inc
add
outsl
fbld
push
aas
sti
or
mov
in
push
decb
jno
ljmp
cmpsl
sub
mov
xor
clc
popf
cltd
jo
xchg
aas
pop
xor
outsl
pushf
test
xor
sbb
fcomps
ds
mov
fsubr
test
int
inc
mov
inc
jle
adcb
pop
les
mov
sbbb
incl
lock
outsb
jbe
ja
xchg
mov
mov
fstpl
pop
ss
loop
pushf
cli
mov
lcall
iret
pushf
daa
dec
xlat
repz
and
sbb
xchg
adc
cmp
int
inc
mov
and
lock
dec
iret
or
les
pop
out
fistl
xchg
dec
or
lea
jne
adc
dec
xchg
in
or
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
mov
xchg
jno
jno
out
fisttpl
das
loopne
jle
js
jle
shlb
iret
sub
mov
dec
sub
mov
sub
scas
or
test
adc
xor
cmpsb
lret
les
jbe
cmp
clc
jns
test
lock
pop
fs
enter
fildll
or
in
xor
cmp
stos
cmpsl
push
push
xor
jmp
movsl
mov
shl
dec
push
jp
push
shll
fs
enter
push
mov
sbb
dec
mov
or
cmp
mov
cli
push
add
add
dec
and
sbbb
mov
cmp
mov
and
inc
push
dec
xor
ja
test
add
icebp
pop
popf
mov
movsb
lods
mov
mov
or
popa
sbbb
xchg
jp
es
into
jl
push
push
ljmp
fildll
dec
push
test
dec
xchg
aam
and
ljmp
icebp
repz
cmp
pop
push
mov
add
das
ret
fisttpl
adc
mov
xor
cmp
push
lods
pop
lahf
or
adc
cltd
test
mov
xor
jo
jo
sub
aam
mov
fisubrl
add
icebp
and
mov
mov
mov
xchg
push
pop
jl
aad
cwtl
cmp
jb
gs
testl
aam
das
mov
ficoms
dec
xor
jg
xor
je
mov
jecxz
iret
mov
lds
or
sub
jecxz
test
andb
iret
cmp
into
stc
sub
cs
adc
das
ds
pop
aam
sub
lods
cmc
inc
jg
add
clc
jne
xchg
fs
jecxz
push
cmpsb
icebp
out
lods
inc
fistl
inc
pop
jmp
cmp
cmpsb
fsubrs
fsubs
lea
push
lret
je
nop
jle
mov
enter
jg
ss
in
in
in
movsb
adc
rorb
mov
aam
fwait
mov
inc
filds
cld
push
jbe
call
test
mov
and
or
cmp
pop
clc
add
xchg
das
cltd
sbb
es
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
adc
mov
mov
andl
jmp
jns
out
std
jge
or
clc
leave
mov
jle
jo
jle
and
sbb
jl
lcall
mov
imulb
adc
dec
mov
and
das
inc
out
jno
les
mov
fnstenv
mov
push
fildll
pop
push
in
in
fs
xchg
mov
jle
push
hlt
add
insl
add
cmp
jne
out
mov
sbbb
dec
movsl
mov
sahf
je
nop
sub
push
mov
js
jl
sbb
jmp
lahf
pop
and
inc
jmp
inc
adc
cwtl
jp
into
xlat
lods
popa
lret
int
jb
lret
in
test
ja
mov
hlt
lods
push
pop
addb
push
add
and
addb
rcrl
xchg
jb
xchg
mov
call
or
scas
cmpl
js
ret
cmc
shrl
jnp
cmpb
inc
int3
cmp
enter
push
mov
stos
ret
daa
and
inc
sbb
dec
cmp
leave
insb
into
xor
mov
popa
stc
lret
es
jne
mov
push
dec
sub
outsl
adc
lea
mov
pop
in
cld
jbe
mull
mov
mov
push
sub
push
or
pushl
stos
idivl
stos
insl
dec
fwait
mov
cmc
cmpsb
push
xchg
std
mov
stos
mov
into
or
mov
cmpsl
roll
and
sbb
inc
mov
enter
test
test
lret
xlat
and
iret
dec
push
mov
les
test
mov
cmp
outsb
adc
or
sarb
mov
cmp
jg
into
and
and
fcomps
xchg
pop
mov
cli
cs
fisubrl
xchg
mov
mov
subb
out
inc
mov
xchg
sub
and
sbbl
inc
inc
icebp
lds
rcll
or
cmp
iret
inc
mull
sub
mov
mov
cmpsb
loopne
mov
fisubrl
push
idivl
xor
repnz
add
lods
pop
daa
adc
xchg
adc
lea
mov
mov
loop
and
or
aad
mov
aaa
pop
je
add
jbe
cmp
mov
ljmp
add
add
mov
in
xchg
or
jmp
ret
mov
jae
mov
inc
pop
cmpb
fldl
lret
add
and
mov
scas
sbb
jae
pop
repnz
push
jbe
mov
xchg
mov
inc
loope
add
lds
and
push
mov
imul
gs
jp
or
stc
call
sub
push
push
jmp
ds
jge
mov
add
mov
xchg
push
adc
loop
jne
and
mov
cmp
aam
mov
enter
jle
or
mov
inc
cld
movsl
std
and
jmp
popa
xor
mov
sub
xor
pop
bound
mov
outsl
pop
inc
dec
pop
les
subb
add
or
inc
cmp
pop
and
sub
ret
repnz
cwtl
lcall
and
shr
fldl
mov
jae
push
add
cld
mov
repz
xchg
push
mov
in
xchg
je
or
pop
adc
popa
and
xchg
jl
cs
mov
popf
and
lds
inc
or
add
cmp
movl
xor
movl
movzwl
add
mov
mov
jmp
jmp
or
std
fdiv
sbb
das
sbb
out
jle
jo
jle
and
cmp
jmp
out
inc
daa
cli
add
out
out
or
stos
std
aas
pop
sahf
or
xchg
out
mov
inc
dec
out
push
jg
ja
push
cmp
aas
out
mov
ss
mov
int
loopne
sbb
std
xchg
cmp
xchg
mov
ss
loopne
and
adc
outsb
lods
pop
push
or
xchg
les
push
data16
lods
repz
inc
add
dec
outsl
in
add
insb
aam
lock
or
cmp
stos
lcall
pop
add
test
int
xchg
mov
mov
and
imul
pop
pop
shlb
xchg
adc
scas
std
out
sbb
in
addl
clc
sbb
fsubrp
jb
push
daa
adc
cmp
icebp
pop
pop
popf
and
pop
icebp
push
or
add
jecxz
dec
or
lods
pop
stos
stc
ss
mov
sub
in
or
test
hlt
jge
xor
loopne
add
or
fistps
sbb
jne
dec
fsubr
outsb
mov
adc
addr16
jle
outsl
scas
push
outsb
nop
out
push
pop
push
or
xor
stos
cmpb
jb
pop
xor
jecxz
push
fbld
adc
jnp
or
fsubs
lahf
dec
fs
and
sarb
dec
dec
and
sbb
pop
ja
cltd
cmp
jge
stos
lods
in
mov
jb
imul
xor
rol
in
dec
mov
in
xor
rorb
jmp
arpl
mov
push
subb
sahf
leave
cmp
in
aad
sbb
pusha
rcrb
push
outsb
ss
push
cld
sti
js
mov
push
mov
mov
cmpsb
add
adc
push
push
mov
addr16
out
mov
imull
ret
push
testb
iret
mov
out
jnp
pop
cli
leave
fwait
daa
stos
xor
addb
pop
ret
dec
add
stos
inc
pop
fildll
mov
and
adc
push
and
out
jb
icebp
cmp
jo
icebp
xor
jge
xor
mov
add
lahf
pusha
inc
pop
cltd
cmp
ss
test
pop
test
popa
mov
adc
sbb
jns
pop
and
lahf
lock
xor
xchg
cmp
cmpsl
pop
jnp
aad
mov
or
int
dec
mov
mov
xor
sub
cmp
lds
mov
divl
cmc
xlat
mov
mov
dec
sbb
int3
lcall
addl
and
mov
ret
out
inc
jbe
ljmp
ret
add
outsl
jecxz
and
dec
inc
js
lret
ljmp
js
mov
cs
pop
loop
mov
pusha
push
scas
fsubrp
or
out
pop
gs
out
cmpsb
and
jge
push
cld
icebp
xchg
add
out
lods
inc
lret
dec
pop
dec
pop
or
dec
addb
and
ret
fdivrp
insl
ficoms
mov
int
jge
push
push
push
rolb
pop
jmp
xchg
cmp
dec
addr16
or
sbb
shlb
mov
mov
or
out
sbb
dec
xor
faddl
das
xor
or
mov
into
js
fwait
lods
lods
add
addr16
xor
sbb
sub
cmp
pop
push
insb
dec
push
xchg
imul
mov
or
jp
bound
clc
jae
fbstp
hlt
test
mov
cmp
xor
shrb
addl
mov
mov
or
xor
xor
add
xor
mov
add
mov
inc
mov
xor
add
mov
movl
mov
mov
sub
add
jmp
xor
xchg
mov
stos
cs
stc
push
lock
mov
jle
jo
jle
scas
dec
outsb
pop
jg
xor
je
ja
mov
xchg
in
insl
jnp
std
lahf
add
shrl
dec
aaa
jne
cmp
pop
scas
xor
xor
dec
dec
add
int
add
rcrl
add
ds
mov
xlat
push
push
push
push
scas
push
out
insl
dec
or
lods
jmp
into
xor
bound
sub
add
mov
mov
sub
sbb
adc
xchg
sbb
xchg
test
ljmp
lahf
pop
inc
subl
cltd
cmp
or
lea
cwtl
xor
push
repz
add
lock
inc
test
push
aam
pop
mov
shll
add
test
mov
inc
mov
xchg
test
jns
pop
ret
xchg
andl
loope
xor
movsl
clc
jns
fildll
icebp
mov
into
repnz
inc
cwtl
es
sub
add
imul
push
mov
add
ret
rorb
dec
mov
lock
dec
sahf
jns
stos
mov
mov
enter
xchg
xchg
jecxz
repnz
pop
outsb
dec
pop
popf
push
sbb
push
inc
cs
dec
ja
mov
mov
ljmp
or
sahf
sub
push
rcll
sub
jne
mov
ja
or
add
inc
rcrb
lock
std
lret
jmp
xor
pushf
add
sbb
lret
into
out
addr16
lcall
mov
xlat
aaa
xlat
push
fs
outsl
jno
cmp
and
cmp
cld
lock
xchg
cs
cli
adc
iret
adc
hlt
popa
div
cmp
fidivrl
iret
sti
or
rol
cmp
mov
inc
call
xchg
and
fimuls
scas
ljmp
jle
test
divl
add
clc
xchg
nop
jo
xchg
rcrb
neg
pusha
loope
cltd
jae
jle
stc
jge
add
std
aam
roll
and
sub
sarl
jno
flds
push
push
imul
std
lret
ja
inc
repz
mov
mov
add
scas
icebp
jns
clc
std
xchg
cli
popa
out
sbb
mov
ffree
dec
xchg
mov
lret
jne
jno
adc
scas
int3
jp
or
frstor
int3
mov
jp
lods
imul
sbb
pop
lahf
jle
iret
fwait
push
loopne
pop
repz
aad
imul
sub
inc
xchg
xchg
call
fwait
in
pop
sahf
xchg
movsl
mov
aad
and
outsl
lds
and
xchg
or
pop
sub
cld
out
adc
or
adc
lahf
adc
test
dec
aad
dec
push
jecxz
lcall
lcall
outsl
sub
and
xchg
cmp
cltd
in
mov
and
pop
fisubrs
decb
in
fwait
sahf
enter
loope
or
jns
inc
push
jl
dec
push
iret
pop
data16
movsl
mov
pop
stc
jns
inc
fldenv
aam
jg
aam
cmp
pop
clc
xor
fisttpl
sub
xchg
xchg
or
adc
xchg
leave
stos
ljmp
xchg
mov
popf
sti
sti
mov
sub
mov
insl
lahf
addr16
aad
xor
mov
inc
jno
inc
jecxz
sub
mov
sahf
push
ficoms
rorb
repz
stos
adc
push
mov
inc
jb
mov
stos
dec
ffreep
inc
fdivrs
test
add
add
in
cld
popf
popa
imul
push
fdecstp
nop
adc
xor
jle
jns
jle
je
fisttpll
fisttpl
loope
cwtl
sub
dec
cmpsb
push
enter
in
sbb
inc
push
push
adc
das
andl
decb
inc
xchg
std
and
and
repz
lods
add
or
or
xchg
sahf
jecxz
and
in
daa
mov
faddl
pop
sub
add
js
add
fbld
jbe
jmp
sub
xchg
push
rcrl
mov
sbb
pushf
iret
or
test
bound
imul
push
into
int
fwait
jl
jbe
mov
xchg
andb
popa
lock
mov
jl
mov
or
testl
push
call
and
rcl
dec
mov
cld
push
enter
xlat
lods
scas
shl
in
mov
repz
iret
xchg
js
iret
xchg
dec
je
dec
pop
dec
mov
pmulhw
and
hlt
loope
push
mov
pop
mov
adc
mov
xor
and
lret
xchg
jb
enter
in
xchg
rcr
xchg
leave
ret
push
mov
fcompl
in
out
jecxz
daa
ja
xor
xchg
fwait
jmp
jge
daa
push
xor
fmull
sub
ret
fisttpll
inc
xchg
in
add
jle
in
dec
int3
sub
loop
rcll
movsl
sbb
xchg
mov
out
push
outsb
fwait
sbb
xlat
add
push
es
rolb
arpl
sub
loope
std
jns
insb
push
and
mov
in
aaa
push
push
cmp
xchg
cld
mov
fstps
xchg
mov
shll
add
jnp
std
jb
xor
cwtl
push
fstpl
dec
addb
jns
out
xor
pop
ds
mov
push
dec
inc
push
js
xor
xchg
iret
movsb
bound
or
add
inc
aad
rcrb
jg
mov
inc
xchg
in
adc
mov
xor
push
push
xchg
mov
mov
mov
mov
and
outsb
dec
mov
mov
icebp
mov
dec
sahf
shl
jbe
cld
dec
fstpt
inc
mov
cmp
pushf
repz
dec
or
cli
mov
pop
jno
add
lcall
mov
push
jbe
xchg
adc
sbb
mov
fdivr
inc
inc
ljmp
shrb
adc
pop
data16
push
das
cmp
out
mov
jno
in
dec
out
jns
lock
xchg
mov
movsl
jb
js
mov
out
mov
shll
addr16
stos
mov
inc
push
rcll
jl
bound
sti
xor
pop
loop
nop
cmpsl
cmp
imul
gs
add
call
cmpsl
clc
jg
pusha
out
push
mov
or
ja
and
loop
and
cmc
sbb
imul
sar
mov
jne
incb
jmp
and
lods
sahf
scas
cli
xor
fsub
icebp
inc
nop
shl
fimull
cmp
pmuludq
cmp
orl
sarl
lea
pop
add
dec
mov
cli
ss
addl
jno
loope
xchg
fsub
in
loope
test
inc
pop
clc
mov
dec
cld
dec
call
lret
and
js
pusha
imul
ss
std
mov
jmp
faddp
test
mov
cmpsb
inc
cld
ja
je
jne
mov
jp
mov
inc
aam
test
test
int3
cmp
cmp
movl
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
push
call
cmpl
jb
or
movl
sbb
mov
xor
sub
mov
orl
add
cmp
je
movl
push
jmp
xorl
mov
add
mov
addl
sub
movl
mov
andl
xor
addl
add
movl
cmp
movl
jb
mov
mov
sub
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
inc
xor
sbb
add
or
add
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
and
mov
sub
cmp
movl
ja
xor
add
add
mov
orl
jmp
xchg
dec
in
in
test
out
xchg
gs
jnp
bnd
jo
jle
out
bound
les
mov
test
subb
lea
adc
or
es
push
shlb
repz
mov
mov
lret
lock
imulb
ss
insl
xchg
addb
mov
cmc
xchg
das
or
xchg
xchg
outsl
gs
sub
orl
das
add
cltd
xchg
mov
ss
sbb
es
add
and
cltd
jmp
icebp
adc
add
xor
and
mov
jg
inc
daa
jecxz
jo
mov
jns
imul
inc
test
insl
mov
das
daa
sbb
sbb
push
pop
jno
inc
mov
lret
xor
nop
inc
mov
jp
imul
cmpsl
push
mov
xlat
push
add
ret
sub
xor
call
call
add
insl
dec
sbb
add
cli
xchg
and
ret
stos
cmp
cmp
push
cld
sar
adc
pop
out
nop
subl
pop
push
add
ja
stos
cmp
inc
or
arpl
xorl
inc
aaa
or
jmp
pop
faddl
sahf
jo
cmp
iret
shl
sbb
jns
fidivs
pop
ds
cmc
mov
inc
jno
decl
leave
ss
shl
xchg
clc
xor
cmp
lahf
mov
or
out
mov
in
pop
clc
loopne
scas
mov
js
int3
pop
out
push
mov
pop
roll
jno
test
inc
push
or
lea
fisubrl
inc
inc
jae
ss
stos
mov
or
aaa
cs
jge
or
add
and
adcl
cltd
lret
into
test
or
cmp
js
jp,pt
leave
mull
mov
sub
fcomps
jmp
mov
xor
shll
imul
sub
mov
and
mov
mov
push
rorl
mov
in
adc
push
les
jle
les
cmpsb
add
popf
mov
rorb
sbb
mov
mov
xor
aas
mov
jno
scas
popf
enter
fs
ss
sti
ss
inc
adc
and
dec
mov
mov
adcl
popa
pand
pop
or
xor
lea
adc
out
pop
add
dec
imul
lods
add
arpl
cwtl
popf
jmp
testl
push
and
nop
pop
pop
fdivrl
xor
repz
insl
mov
sub
mov
movsl
cmp
int3
mov
icebp
shld
aad
pop
aas
ret
add
jl
xchg
gs
or
adc
pop
das
enter
jne
frstor
fiaddl
popf
mov
test
stos
cmpsb
push
adc
mov
loope
jmp
pop
or
cmpsb
popf
mov
xor
pop
push
jo
mov
call
rcr
inc
inc
aas
dec
pop
and
int3
adc
xchg
subb
shr
inc
push
and
push
orl
jb
ret
lods
cmpsl
negl
adc
aad
shlb
push
lcall
adc
inc
push
mov
mov
in
shlb
sbb
insl
in
adcl
call
ljmp
ret
in
shll
xchg
cmc
pop
mov
shll
adc
jg
inc
add
shr
jno
add
mov
subl
mov
mov
sub
mov
xor
xor
or
add
adc
jmp
test
jne
xchg
in
in
dec
andl
cld
jle
jo
jle
ret
jle
leave
sub
in
insl
mov
imul
jae
sahf
and
jnp
shrb
insl
test
and
inc
add
sbb
or
movb
jle
outsl
call
pop
mov
fbstp
cmpl
ljmp
out
and
sub
push
aam
scas
mov
mov
jg
popa
push
mov
enter
hlt
dec
and
push
pop
mov
sarl
dec
dec
xchg
imull
pop
pusha
push
add
lock
fidivs
lret
push
xchg
enter
inc
icebp
cmp
pop
out
fdivrl
loopne
mov
push
mov
ds
mov
mov
cmp
adc
cmp
and
jns
and
pop
cmp
jns
out
cld
outsl
enter
inc
adc
frndint
movsb
sbb
cs
mov
les
arpl
insl
out
fists
push
inc
fistl
push
adc
pushf
xchg
lret
fst
fs
cmp
mov
mov
aaa
mov
pusha
inc
sbb
in
sbb
adc
add
adc
lods
pusha
jmp
mov
data16
push
pop
insb
stos
push
fs
rcrb
pop
shl
subl
xchg
jb
dec
ret
int3
cmp
sub
add
mov
call
xchg
cmp
adc
dec
add
lcall
addr16
cmp
insl
xlat
sbb
adc
sub
jge
fstpt
cltd
das
jns
cwtl
jg
sub
jl
fcmovb
xor
scas
in
in
movsb
pop
or
idiv
mov
or
insb
in
xor
movsl
lods
pop
pand
or
mov
icebp
in
loope
imul
or
push
out
xor
movsb
inc
cmp
inc
mov
icebp
sub
jecxz
idiv
adc
adc
lret
mov
add
sbb
test
adc
xor
mov
scas
pop
imul
cs
hlt
arpl
mov
inc
popf
out
scas
jp
jg
imul
push
leave
loop
mov
xor
stos
sub
xchg
xlat
pushf
and
or
aad
jne
xor
mov
pop
ficoml
jbe
sbb
mov
decl
divb
jge
out
jns
inc
loope
sbb
cmp
pushf
cmc
inc
sbb
push
pop
jl
leave
lea
fadds
jg
sub
xchg
mov
jle
lret
sbbl
movsl
lock
imulb
lds
inc
addb
sbb
ds
mov
mov
adc
add
mov
iret
test
push
lods
aam
sub
pop
xor
mov
std
popl
dec
mov
push
in
les
mov
adc
cmp
push
jae
pusha
add
jae
cmp
xchg
test
jno
imul
sub
not
adc
imull
stc
clc
xchg
sbb
inc
es
cmpsb
mov
sub
in
mov
stos
les
pop
lods
or
loopne
and
and
cli
mov
jmp
dec
sbb
push
jne
jns
dec
sbb
mov
imul
pop
test
pop
int
push
inc
jnp
nop
cmp
jmp
ja
adc
ret
daa
das
out
jae
pop
mov
out
fimuls
xchg
mov
test
lock
enter
and
das
jp
add
imul
xor
mov
mov
xorl
sub
movl
cmp
movl
ja
mov
mov
movl
jmp
sub
mov
add
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
jmp
xor
xor
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
push
call
cmpl
jb
add
imul
mov
mov
jmp
aas
andl
push
repnz
pusha
sbb
fnstsw
jo
jle
ret
outsl
sbb
push
mov
pop
shr
mov
in
push
xchg
pop
jmp
or
push
jg
movsl
cs
inc
xchg
xchg
and
outsb
push
mov
and
xlat
inc
push
dec
push
cmc
out
add
scas
inc
push
adc
mov
dec
aaa
mov
jmp
mov
dec
mov
into
loope
mov
push
cmpsl
push
cmpsl
jge
iret
dec
cs
jecxz
addb
sub
pop
sub
push
andl
aaa
xchg
sbb
xchg
pop
dec
mov
push
gs
stc
ds
or
mov
shrb
mov
push
sbb
cmpb
pushf
stos
mov
or
dec
xor
arpl
adcb
xchg
outsl
jnp
or
out
push
cmpsb
shr
xlat
sbb
jp
or
mov
stc
inc
mov
push
icebp
shl
and
frstor
cwtl
in
jmp
push
cmp
mov
notl
add
cmp
dec
jnp
pop
jb
mov
clc
outsb
cwtl
push
jl
and
jle
sub
cmp
in
test
sbb
fsubrl
lret
movsb
and
cmp
stc
or
cwtl
jecxz
jnp
and
es
push
ljmp
adc
lock
out
dec
in
cwtl
push
sub
outsl
xchg
sub
loope
and
jmp
jl
fs
adc
jbe
jecxz
mov
loope
cld
adcb
mov
add
test
mov
iret
std
loope
xchg
xor
and
sar
and
push
pop
inc
pop
cmp
sbb
mov
mov
push
icebp
mov
mov
idivb
inc
ret
push
outsl
mov
repnz
nop
stos
shrl
inc
bound
fcmovnu
dec
shrl
jecxz
outsb
xchg
jecxz
xor
dec
inc
xlat
and
out
into
fmuls
push
jns
or
shl
and
ljmp
sbb
push
cmp
scas
in
inc
xor
pushf
repz
mov
push
pusha
xor
cld
inc
in
mov
push
xor
fsub
hlt
sub
pusha
pop
mov
test
xor
and
xchg
test
or
xchg
insb
stc
popf
xor
xor
xchg
mov
ret
ss
jle
push
popa
cmp
lds
sbb
lods
outsl
cmpsb
inc
pop
lods
xor
mov
mov
test
pop
lret
pop
sub
or
and
or
or
daa
adc
outsl
test
movsb
cmp
mov
enter
jne
cmpsl
jmp
and
sbb
mov
cmpsb
push
dec
dec
jmp
xor
mov
psrld
lret
xchg
arpl
mov
pop
add
insb
test
test
xchg
clc
adc
notb
jg
add
clc
leave
lea
stos
sbb
pop
sbb
aam
scas
divl
xchg
cld
dec
ret
adcl
pop
inc
ljmp
cmc
das
push
push
scas
addr16
incb
jne
lods
pusha
xchg
mov
mov
test
mov
mov
push
gs
push
xchg
xchg
jg
cmpsl
xlat
jb
fiadds
jns
imul
dec
pop
cmp
and
repnz
dec
loopne
mov
into
cmp
xchg
cwtl
aaa
jmp
lock
or
cmp
xchg
or
scas
cli
push
mov
pop
push
pop
cwtl
imul
pop
leave
daa
sub
cmp
ja
mov
jmp
jmp
rorl
aam
pop
rcll
xchg
mov
popf
pop
scas
call
jns
jle
das
pop
adc
lret
movsl
ja
testb
mov
add
int
mov
add
scas
lret
jns
dec
adc
icebp
outsl
outsl
push
lret
iret
xor
sahf
aaa
adc
jp
mov
xchg
movsb
ss
das
cmpsb
lods
negl
lods
push
rcrl
aam
jnp
mov
dec
clc
addr16
xchg
pop
mov
pop
and
sub
addl
xchg
movsl
inc
into
ljmp
pop
les
orl
sahf
inc
outsb
test
and
inc
xor
iret
je
pop
fidivs
or
xchg
add
xchg
jmp
xlat
cmpsl
adc
add
cmpsb
cwtl
dec
dec
push
adc
paddd
lret
das
loop
push
pop
fcomi
out
sbb
movsl
pushf
sti
inc
lahf
mov
sbb
out
imulb
xchg
ljmp
loop
imull
mov
cmp
xor
mov
outsl
outsl
shll
dec
or
jmp
cmc
das
cwtl
hlt
cmp
sub
push
adc
push
adc
sub
cli
push
and
repz
nop
mov
imul
enter
add
cmpsb
leave
loop
jae
dec
fstps
sub
sub
stos
call
inc
jmp
sub
sti
cmpsl
dec
and
fwait
insl
rclb
mulb
rcr
mov
fisubrl
lods
push
sbb
les
fwait
jmp
adc
into
push
nop
insl
sub
add
mov
imul
loopne
repz
push
sti
sbb
inc
out
sub
jbe
stos
xchg
push
mov
sub
fidivrl
lahf
pop
std
push
out
out
sub
das
mov
inc
inc
jge
dec
and
test
nop
stc
mov
imul
sbb
aam
xchg
dec
je
and
jns
leave
push
stos
xchg
sub
and
xchg
pop
push
clc
popf
add
and
jns
movsb
aaa
jge
mov
sub
clc
test
inc
or
ret
ss
lcall
or
std
gs
cmp
ffreep
and
sub
push
xchg
mov
fists
xlat
addb
adc
xor
xchg
xchg
sub
fmuls
mov
adc
mov
stc
in
aaa
out
out
iret
lret
scas
or
jg
push
cmp
push
clc
pushf
and
mov
add
or
test
cmp
andb
fdivs
sbbb
int3
xor
cmp
sub
cwtl
popf
mov
mov
jbe
sbbl
std
pop
push
out
outsb
arpl
inc
mov
or
ljmp
mov
adc
push
mov
mov
jl
and
dec
push
in
adcb
xor
and
push
xchg
pop
inc
push
push
scas
out
mov
sub
int3
outsb
call
pushf
push
mov
movsb
xchg
test
cld
repz
cmpsl
sbb
mov
pop
jle
in
sti
test
and
test
cmp
dec
xor
mov
icebp
xor
mov
ss
dec
sub
push
sbbb
sub
push
lock
adc
mov
daa
leave
xchg
popa
leave
mov
insb
fdivs
pop
fadds
xor
sbb
xchg
mov
pop
jl
fidivs
cltd
cmp
cmp
repnz
xchg
add
add
pop
lcall
add
aas
push
pop
lahf
jns
out
loop,pt
jne
test
pop
test
bound
rolb
xchg
rclb
repz
and
sbb
lret
out
nop
lods
pop
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
xor
outsl
jne
std
inc
sbbl
out
ss
loop
jle
jo
jle
mov
pop
imul
dec
sub
mov
and
lods
cltd
out
mov
mov
jg
rcrb
fcompl
mov
fdivs
popf
pop
aas
push
add
in
test
imul
adc
cmp
xchg
xlat
or
js
aam
loope
in
xchg
or
call
or
test
sbb
aas
fcmovbe
and
insb
mov
fnstenv
mov
and
js
mov
lahf
in
data16
leave
lret
mov
jmp
and
mov
repz
add
mov
hlt
jbe
push
sbb
loop
shl
sbb
inc
cmp
hlt
mov
inc
test
mov
je
mulb
pusha
jnp
testl
iret
outsl
icebp
imul
fldl
cmp
into
push
jp
clc
loope
lcall
add
xor
repnz
jmp
in
jno
js
call
loope
outsl
cs
mov
repnz
push
inc
sub
pop
fnclex
mov
mov
fidivrs
xor
sbb
sbbb
lds
cmp
cli
mov
fcmovb
jmp
pop
mov
jmp
or
xor
push
test
leave
ds
fmull
dec
xor
lods
into
push
icebp
mov
rcrl
mov
aad
xor
add
mov
sbb
xor
mov
jp
mov
push
lcall
insl
mov
leave
scas
push
sub
inc
adc
mov
lods
cmp
inc
stos
cmpsb
cmpsl
mov
outsb
inc
pop
xor
mov
lret
ret
movl
dec
cmp
xchg
fst
ret
jbe,pn
cmp
sub
dec
shrl
ja
scas
or
movsb
gs
test
sahf
hlt
dec
push
out
repz
stos
mov
pushf
insl
jp
mov
push
out
dec
inc
outsb
mov
andw
jmp
lahf
pop
sarl
das
rcr
ret
aad
into
adc
lret
in
cmpsl
inc
call
movsl
sbb
or
mov
cmp
mov
cmpsb
xchg
sub
mov
sbb
scas
int3
pop
or
shlb
shl
cmp
lock
dec
stos
int3
add
and
cmp
inc
in
cltd
mov
jg
aas
popa
cmp
cmp
or
jnp
adc
aaa
mov
sub
inc
xchg
add
add
int
fwait
pop
cmpsb
xor
sub
ljmp
fnstenv
stos
jp
cmp
and
mov
and
add
mov
shl
addl
xor
out
sbb
ljmp
arpl
nop
add
ljmp
movsl
jno
mov
cmp
and
call
adc
fbstp
adc
fnstsw
dec
idivl
sbb
jo
lock
imul
in
xchg
and
cmp
sub
test
dec
xorb
test
aam
cmpsb
shll
mov
xchg
xor
dec
lock
push
rcll
mov
popf
je
mov
maskmovq
mov
jno
mov
mov
lods
test
inc
mov
mov
push
jno
push
rclb
pusha
out
mov
int3
jmp
mov
data16
test
cmp
push
in
cmp
inc
test
js
sub
insl
mov
aad
out
jge
out
push
out
popa
sti
lea
fistpll
fimull
add
add
mov
mov
xor
xor
jmp
test
rolb
dec
pop
repz
mov
sbb
in
jle
jo
jle
mov
xchg
xor
lds
arpl
mov
pop
rcr
jne
or
pop
cwtl
and
mov
or
inc
loop
fcmovne
in
pop
es
subb
leave
sub
test
xorl
jle
cltd
and
movsw
mov
iret
jle
xor
rcrl
sbb
int
rcll
notb
xor
movsb
inc
out
add
hlt
xchg
aad
mulb
addr16
fldl
pop
jl
adc
jp
daa
into
dec
pop
mov
and
mov
push
imul
push
xchg
fstl
cli
cmc
shrb
in
gs
shrl
gs
test
ficoms
or
in
out
pop
lods
call
lahf
xor
xchg
std
sub
push
mov
xor
fisubrl
mov
sbb
mov
mov
ficoms
cs
in
lock
mov
fdivl
inc
rclb
mov
lahf
enter
jl
fidivl
aas
inc
dec
bound
iret
mov
std
mov
shlb
std
fdivrl
inc
imul
lret
or
into
fidivs
popa
loop
movsb
cli
sbb
mov
push
test
inc
inc
push
jno
imul
mov
mov
ljmp
mov
fiadds
daa
js
add
adc
add
nop
stos
cltd
and
mov
adc
jge
jecxz
dec
jmp
or
hlt
rcr
adcl
add
add
sbb
cmpsb
fs
mov
aad
xor
push
sbb
adc
xchg
push
sbb
push
sbb
ret
movsl
decl
dec
jb
es
dec
adc
push
xchg
lret
enter
shlb
lods
insl
ret
mov
sub
pop
mov
cwtl
mov
sub
rcll
arpl
inc
xor
push
int3
cltd
xchg
add
add
jnp
imul
dec
xchg
ret
out
je
notb
into
jne
mov
pop
jmp
negb
add
loopne
sbb
enter
in
push
insb
push
gs
scas
lds
adc
call
test
push
stc
outsl
insb
test
into
sub
and
leave
jl
add
ja
cmp
rcrb
or
xchg
jb
cmp
pop
adc
loope
es
and
enter
mov
jne
fwait
xchg
jb
cli
and
hlt
pop
mov
and
inc
cmp
aad
lods
outsb
adc
push
ficoms
xchg
shll
jno
data16
orb
cmp
movsb
lea
out
sub
js
mov
es
out
repnz
bound
xor
sarb
add
dec
test
loop
xor
mov
js
and
imul
push
dec
xchg
xor
inc
dec
ret
icebp
cmp
arpl
dec
js
inc
movsb
mov
scas
out
sub
sbb
aam
adc
dec
sbb
cmp
cmp
mov
cwtl
sbb
xor
mov
mov
and
sub
clc
inc
mov
add
and
lcall
popf
sahf
and
popf
sbb
je
daa
inc
fildll
pop
call
outsl
int
in
sbb
pop
dec
stos
xor
add
xor
aad
cld
cmp
fisttps
sub
or
xchg
mov
mov
add
add
jmp
cmp
dec
mov
rcl
jno
mov
mov
jo
jle
frstor
ja
and
int3
xchg
iret
movsl
stos
cmp
imulb
iret
jae,pn
fdivs
mov
mov
stos
xchg
sbb
add
stos
and
enter
iret
cmp
aas
inc
add
cmpsl
dec
std
je
jne
outsl
ja
cmpsl
call
decb
pop
mov
rclb
adc
jge
dec
shrb
inc
sbbb
dec
inc
mov
out
xor
mov
xor
mov
divl
lock
fdivl
mov
and
shlb
mov
mov
lds
inc
push
inc
mov
movsb
xor
testl
and
testl
xchg
ss
subb
dec
fistpll
mov
aam
add
fdivs
and
push
xor
push
and
xchg
sbb
xchg
inc
sbb
sub
lcall
push
pop
and
cmpl
hlt
inc
add
into
test
ss
cld
adc
sbb
repnz
jle
sbb
lods
fsubrl
and
mov
cmp
repnz
sbb
jns
divb
hlt
shl
mov
xor
mov
out
jbe
and
inc
xor
adc
fcmovb
daa
out
cld
arpl
movsb
mov
sub
mov
into
push
pop
mov
lock
pop
xchg
cwtl
xchg
cmc
jnp
pop
fnstsw
les
cmp
scas
daa
inc
xor
aas
mov
loop
in
adc
mov
sub
int
mov
dec
or
ja
fbstp
bound
jp
or
sbb
movsl
mov
iret
dec
fdivrl
add
out
js
inc
ss
push
addr16
sbb
xor
xor
sti
xlat
jmp
fsubrp
jp
cmpsl
rorl
rorl
out
dec
dec
aad
pop
mov
es
ja
sub
inc
mov
scas
mov
xchg
cmc
dec
js
xchg
loop
stos
out
or
dec
insl
ret
repz
in
xchg
pop
dec
incb
sbb
lret
inc
xor
mov
push
shlb
mov
loope
ljmp
xchg
cmpsb
push
inc
cmpsl
cmpl
rcr
push
mov
mov
imul
jg
jecxz
enter
jo
jbe
icebp
pop
mov
lret
and
icebp
inc
cltd
jns
out
and
psrad
pop
leave
xlat
xor
movsl
xchg
movsb
jmp
pop
push
push
cmp
push
out
xlat
add
ffree
cmp
out
mov
movsl
adc
xor
cltd
cmp
or
insl
sub
aam
popa
xor
cmc
cmp
mov
mov
nop
sti
push
es
cmp
arpl
iret
sbb
adc
cs
repnz
ja
bound
je
cmp
loope
adc
ja
add
sar
jne
dec
pusha
sbb
mov
ret
or
es
push
xchg
clc
lret
rol
lods
cmp
sbb
shlb
dec
inc
lock
or
orl
sbb
in
aam
fmul
arpl
xchg
sub
inc
int3
daa
mov
mov
push
xor
test
mov
test
fidivs
push
test
jbe
xor
cwtl
mov
add
cmp
out
mov
mov
xchg
test
sti
cmp
sub
leave
cld
mov
adc
cmp
in
sbb
jno
dec
das
add
mov
fmuls
adc
icebp
es
mov
subb
push
test
sub
mov
jle
iret
mov
mov
lret
pop
mov
xlat
jns
and
dec
stc
faddp
mov
push
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
jmp
sub
inc
dec
idivl
pop
add
xlat
rclb
jle
push
lcall
roll
sub
insl
and
jl
mov
cs
sub
push
mov
rcll
hlt
cld
jns
push
mov
inc
add
push
call
imul
mov
mov
aaa
ljmp
mov
xlat
mov
add
mov
jmp
inc
daa
sub
or
rorb
mov
push
mov
sarl
test
pop
mov
add
adc
es
nop
pushf
add
xor
in
or
xor
jo
xchg
lods
push
cltd
push
stc
jl
mov
pop
cmp
out
cli
mov
push
mov
outsl
cmc
or
pop
pop
shrb
fstps
and
pop
or
lret
and
jg
inc
insl
lods
add
into
xchg
loopne
xchg
push
adc
mov
push
mov
mov
cmp
loope
sbb
push
xor
xchg
pop
popf
movsb
outsb
xor
push
adc
jbe
ja
sub
fnstsw
rclb
sub
iret
or
pop
or
fs
pop
cmpsl
stos
push
xlat
cmp
in
jo
add
inc
jmp
jo
scas
sub
or
bound
shl
sti
loopne
mov
js
fstl
out
add
cmp
pop
xor
sbb
orl
inc
xor
stos
cltd
sbbl
dec
dec
adc
ret
aad
faddl
pop
xor
lock
aaa
inc
add
lret
pop
mov
ljmp
push
mov
jae
cltd
pop
dec
jno
add
rclb
jecxz
jecxz
stc
push
enter
fxch
movb
clc
testb
xor
mov
mov
sbb
xor
push
cmp
sbb
repnz
aas
test
cmpsb
push
arpl
in
mov
or
push
jae
xor
mov
push
lock
or
push
add
xchg
jae
xor
mov
imul
sbb
lea
xor
addb
mov
or
cwtl
jl
dec
mov
pusha
sub
mov
jbe
cwtl
das
mov
movsb
jl
xlat
dec
push
pop
outsl
mov
arpl
and
in
in
sub
rcrb
fnstenv
aas
cmp
push
or
pop
inc
mov
push
les
jb
rcl
rorl
mov
xor
sbb
adc
xor
xchg
xor
pushf
addb
or
or
test
imul
stos
lods
in
xlat
xchg
push
outsl
xor
pop
pop
jo
adc
or
ss
addr16
add
dec
mov
dec
push
push
daa
pop
mov
js
sbb
cmp
cmpsb
pop
add
mov
push
lcall
inc
ss
mov
jns
xchg
or
xchg
xsaves
scas
cmpsb
rcrl
fcoml
xchg
sub
cmc
pop
mov
mov
call
push
cmpsb
sbb
bound
dec
orl
fnstenv
xchg
out
jne
or
xchg
or
jbe
cmpl
sub
aaa
push
xchg
cmp
andl
mov
jne
mov
vmwrite
cmp
sbb
imul
rcrl
xor
repnz
mov
lds
xchg
add
sbb
adc
cmp
push
dec
xlat
dec
xchg
pop
int
mov
adc
mov
mov
lret
loope
push
pusha
xchg
loop
es
insb
sahf
mov
inc
and
arpl
jb
jle
sub
dec
lods
shr
fcoms
and
clc
fwait
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
jmp
and
mov
mov
jne
cvtpi2ps
inc
lret
jle
jns
jle
mov
cwtl
test
fsubs
xor
pushf
sub
iret
in
mov
sub
jne
push
sbb
xor
lds
jle
xchg
enter
pop
mov
mov
fdivl
test
push
fidivrs
mov
clc
jbe
sbb
jnp
addl
xchg
rclb
jb
mov
sahf
xor
cli
loope
ja
idiv
addb
bound
mov
sar
fdivrs
movsl
mov
imul
sbb
cmpsb
test
in
xchg
arpl
jge
xor
or
push
out
mov
shrl
js
pop
fwait
clc
call
addb
stos
xchg
int
pop
xor
into
repnz
dec
addr16
or
push
xchg
insb
les
insb
ja
fldl
scas
push
in
pop
insl
imul
jge
xchg
xchg
subl
cmc
mov
inc
into
mov
fdivrp
jnp
add
scas
dec
popa
cli
xor
aam
xchg
xor
push
sub
ret
ds
mov
in
mov
mov
es
cli
mov
dec
pop
dec
nop
pop
cmp
icebp
iret
cltd
jge
into
aad
das
mov
dec
jmp
xchg
and
push
sahf
adc
or
and
lea
pop
cmpsl
dec
xor
mov
sub
inc
or
add
xrelease
add
xchg
subl
push
jbe
push
jns
test
jg
xor
jns
adc
and
frstor
movsb
into
icebp
add
inc
fs
mov
jmp
pop
cmp
adc
adc
shrl
out
fildll
sbb
cwtl
pop
cld
mov
dec
dec
leave
push
imul
sub
ss
or
rep
mull
outsb
sbb
push
xchg
mov
addl
push
stc
mov
mov
stc
jge
imul
push
and
std
out
scas
int3
repz
dec
and
xchg
int3
sub
pop
adc
or
push
lods
sbb
sbb
cmpsb
cmpsb
jmpw
out
add
ds
jb
notl
js
inc
movsb
pop
mov
insl
mov
cli
pop
inc
add
jge
mov
push
push
clc
mov
repnz
add
push
out
rclb
test
cmp
push
sbb
sbbb
push
pop
aaa
cltd
lret
loope
or
mov
je
adcb
push
ja
mov
cmpsl
imul
shlb
data16
scas
jbe
bnd
stos
adcb
or
int3
pop
and
push
push
out
lods
repz
add
push
out
push
mov
inc
repnz
xchg
cli
push
dec
adc
popf
ds
sub
ret
cmp
call
cltd
add
mov
xchg
mov
mov
inc
push
in
sti
jnp
lods
hlt
lods
out
push
mov
pop
xchg
movsb
sbb
xchg
or
ret
dec
subb
and
icebp
xor
jmp
test
sbb
or
dec
dec
pop
popa
fs
inc
cmpsl
hlt
std
xor
jmp
xor
or
adc
sahf
popa
out
and
mov
xlat
mov
sbb
jl
sbb
dec
jle
incb
cmpl
repnz
sar
gs
xchg
insb
dec
mov
jb
pop
clc
adc
xor
lds
pop
cltd
jb
add
hlt
xor
xor
add
add
imul
add
mov
mov
mov
jmp
push
and
jl
jge
movsl
sbb
xor
mov
jo
jle
fldcw
xchg
cs
or
lea
jnp
add
std
sahf
int3
and
movsb
xor
pushf
push
pop
popf
into
jo
mov
xor
ss
pop
call
popa
inc
sub
mov
sbb
repz
adc
xlat
mov
nop
cmp
add
inc
xor
add
cltd
mov
adc
inc
in
in
pop
sahf
movsl
mov
insl
and
sub
in
rorl
mov
sub
push
push
pop
sbb
sbb
out
aaa
movsb
inc
add
loope
mov
shl
push
fdivrs
mov
jl
jnp
outsb
push
int
loopne
jae
test
mov
inc
inc
sub
cli
iret
mov
inc
scas
rclb
xchg
mov
inc
mov
cmpsb
pusha
je
mov
shr
jb
into
push
xor
nop
pop
ss
scas
cltd
rcr
sub
cmpsl
pop
mov
ljmp
jecxz
out
and
pop
clc
in
pop
mov
inc
fisttpl
lods
inc
icebp
adc
cmpsl
xor
mov
mov
adc
lret
in
imul
inc
nop
add
push
je
inc
incb
sub
fidivrs
repz
pop
lahf
or
xlat
hlt
mov
sub
push
dec
decl
popa
xchg
pop
xchg
xchg
sbb
xor
sbb
movsb
pop
push
inc
pop
sub
rolb
stc
lock
xor
fisubs
sahf
jecxz
mov
insb
mov
popa
fs
adc
bound
add
mov
mov
jmp
mov
call
mov
jle
cmp
inc
dec
adc
nop
loop
mov
cmp
sbb
adc
inc
hlt
inc
push
jg
roll
out
rclb
dec
fidivs
push
mov
jae
or
jl
mov
jns
call
dec
in
mov
stos
mov
jnp
ja
mov
popf
xchg
movsl
xor
push
fbstp
movsl
sbb
jae
add
mov
repz
out
and
es
sub
mov
mov
mov
lcall
ret
or
mov
in
rorl
mov
pop
cmpl
jnp
in
mov
lds
imul
mov
sub
push
in
dec
mov
jecxz
mov
mov
push
cmp
sbb
hlt
dec
cmp
add
push
jae
sub
adc
or
xchg
lods
popl
insb
cs
mov
js
lea
mov
lods
xchg
cwtl
pop
andl
in
mov
inc
stos
fdivr
mov
wbinvd
or
scas
xchg
xor
adc
fcmovne
rcll
popa
data16
push
movsb
stc
add
push
movsb
dec
mov
mov
mov
lahf
in
ja
jge
inc
xchg
xor
cmp
dec
in
dec
dec
sub
pop
inc
es
in
lea
push
shl
xchg
ds
adc
lock
fs
pop
or
jp
mov
fisubrl
inc
loopne
dec
pop
arpl
adc
fcoml
sbb
mov
ljmp
add
pusha
add
popa
mov
fsubs
mov
add
mov
gs
dec
out
lods
mov
mov
rclb
push
sub
rcl
cmp
es
sbb
jnp
xor
lret
adc
xchg
cmp
pusha
outsl
mov
dec
jecxz
push
mov
lahf
lcall
lods
or
cltd
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
jmp
pop
in
add
insb
xor
fcmovb
pusha
pusha
or
lcall
out
clc
ds
cmp
mov
ficoml
and
push
repz
pusha
inc
sbb
stc
loopne
ret
inc
jae
fistps
lods
push
adc
or
inc
leave
ss
xchg
pop
push
push
adc
jno
add
aas
outsb
lea
mov
xor
dec
cmp
mov
xchg
cltd
cmpl
aas
cli
in
inc
jne
cmp
cmp
push
stos
or
pusha
out
ret
not
cli
push
enter
mov
fnsave
fstpl
int3
in
mov
mov
cmp
or
popf
inc
js
push
inc
fnstsw
inc
ss
hlt
loopne
mov
in
jns
lahf
inc
mov
dec
fucomip
pop
fldcw
lea
outsb
scas
mov
js
xchg
and
lds
and
mov
mov
jbe
xchg
xor
xchg
fldt
pop
out
add
jnp
add
xchg
incl
setle
adc
push
or
pop
pop
call
lds
xchg
out
adc
jbe
je
imul
jno
cmp
mov
jecxz
loopne
mov
xor
cs
push
sbb
imul
ret
mov
push
jbe
out
mov
ret
sbb
or
xchg
or
add
pop
aam
mov
mov
movsl
inc
mov
and
sarl
mov
sub
lods
mov
xor
movsb
outsl
aaa
jge
add
hlt
rcl
cwtl
or
lods
lcall
pop
loope
outsb
repz
and
mov
xchg
scas
jne
hlt
cltd
out
mov
enter
jp
adc
dec
fldt
mov
sti
or
mov
cld
shll
clc
out
or
adc
addr16
or
jp
inc
fdivs
xchg
pop
ret
mov
pusha
movsl
pop
mov
mov
pop
inc
and
imul
sarl
or
cs
adc
out
aaa
jp
or
mov
jb
fadds
push
pop
insl
jp
lods
fistl
test
ds
add
mov
push
imul
outsl
jnp
jg
xor
mov
dec
lods
sub
dec
loopne
adc
cmp
popa
cmpsb
pop
adc
xchg
stos
jmp
sbb
push
xor
lret
mov
add
xchg
lods
jne
mov
dec
test
cmp
jl
pushf
aam
mov
icebp
dec
add
shlb
out
and
mov
lods
imul
push
stos
adc
roll
mov
jp
imul
lahf
jmp
out
sti
popf
lret
sub
sbb
or
mov
xor
mov
pop
popf
loopne
push
lcall
lret
xor
inc
mov
add
movsl
add
push
adc
add
std
ret
outsb
movsl
or
pop
add
push
push
int
inc
incl
cs
ret
push
pop
jb
faddp
cmpsl
or
jb
pusha
ljmp
psadbw
out
sbb
fmulp
and
jne
xchg
les
inc
jmp
jmp
add
xlat
mov
and
addr16
inc
mov
movsl
mov
mov
push
push
push
lock
outsb
jp
push
stos
out
mov
mov
test
and
jg
and
js
pop
pop
ror
imul
jg
jg
clc
sbb
jns
cld
jg
lcall
inc
push
adc
mov
out
jne
leave
xchg
push
pop
xchg
pop
xchg
icebp
xor
jmp
cmp
inc
icebp
lds
lea
pop
pop
popf
call
jg
fdiv
leave
xchg
fsubrs
rorl
xor
cmp
jbe
mov
mov
xor
add
imul
mov
jmp
pusha
jecxz
jge
icebp
insb
fwait
mov
lock
jle
jp
mov
push
ljmp
fisttpll
pusha
ror
call
lret
jmp
mov
jmp
add
or
jge
sbb
xchg
xor
jo
jmp
push
dec
scas
xor
hlt
xor
stos
sti
push
push
insb
xor
sbb
inc
out
movsb
push
js
orb
les
sbb
or
mov
jo
popa
adc
rol
in
pop
xor
pop
xlat
ljmp
lods
ljmp
xchg
fldt
out
xchg
add
popa
jne
cmp
sub
sub
or
inc
imul
pop
mov
rclb
push
dec
mov
pushf
es
xchg
adc
icebp
mov
adc
dec
xcrypt-cfb
cmpsl
mov
sbb
pop
xchg
mov
out
repnz
addr16
mov
ss
test
push
xchg
push
stos
lahf
lret
push
inc
or
mov
jl
push
ja
sub
xor
xchg
mov
sub
sbb
xchg
sbb
mov
and
pop
and
jnp
andb
js
fwait
mov
ja
fnstcw
fnsetpm(287
pop
inc
xor
lods
pusha
inc
lds
dec
adc
mov
push
mov
insb
mov
sub
pop
mov
fcompl
in
and
ja
mov
out
xorb
mov
cmc
testl
pop
jmp
test
inc
cld
cmp
filds
xchg
and
dec
jnp
cmp
ss
add
stos
adc
je
adc
sub
aas
aam
ja
xchg
in
imul
fs
lds
in
cmp
aaa
dec
sbb
jecxz
cld
add
xor
scas
inc
mov
in
and
pop
nop
rorl
jp
cmc
sub
or
aas
mov
mov
inc
and
int
jo
das
inc
pop
ss
enter
or
in
cmc
or
les
aam
or
jbe
dec
cli
shrl
or
jae
jnp
popf
mov
fbld
xchg
movsl
sbb
adc
adc
mov
int3
bound
xor
les
sbb
sub
push
aad
add
insl
jg
push
clc
test
mov
mov
sbb
xor
clc
out
mov
dec
or
dec
add
xchg
arpl
daa
add
mov
int3
mov
out
call
add
sub
pop
sub
lock
xchg
pop
int3
std
int
xchg
push
push
sbb
jb
mov
lahf
addb
dec
or
push
or
insl
negb
out
iret
xchg
popl
arpl
inc
and
jge
mov
pop
pop
sbb
call
repz
outsl
bound
jno
jo
lods
and
in
push
and
loop
aas
mov
and
jnp
aas
fcoms
add
rcll
mov
loop
mov
adc
xor
out
pop
mov
psubb
int3
adc
inc
iret
adc
jo
add
dec
adc
iret
jle
cmp
adc
sbb
pop
cmp
jbe
or
movsb
or
jo
test
mov
pop
sub
dec
or
inc
inc
inc
xor
out
je
xchg
shrl
push
mov
mov
ret
sbb
ret
imul
xchg
test
adc
mov
mov
sbb
bound
lret
imul
xlat
mov
lea
jmp
outsb
xlat
shlb
mov
pop
out
xor
xor
jle
add
inc
mov
scas
mov
loop
stos
lret
movsb
inc
out
repz
xchg
cmp
pop
or
pop
or
dec
orb
test
incl
adc
mov
xchg
dec
pop
rclb
dec
les
mov
mov
fwait
sti
xchg
insb
clc
mov
cltd
mov
sub
mov
ret
xor
adc
dec
dec
cmpsb
xor
mov
xchg
jecxz
cmc
jae
jne
pop
xchg
mov
leave
mov
pop
mov
mov
mov
adc
dec
in
cmp
roll
repnz
push
pusha
sarb
popa
cmpsl
in
mov
push
mov
pop
push
fldt
xorb
jno
out
mov
or
xor
sbb
or
shl
jne
push
pop
mov
into
ret
adc
call
es
iret
in
sti
and
cmp
es
loope
in
std
xor
mov
cs
ds
sub
adc
push
lea
push
ja
pop
xchg
pop
jno
imul
mov
xchg
add
outsl
mov
aaa
sbb
xchg
fs
and
push
sub
mov
daa
inc
sbb
pusha
ret
cs
jl
push
pop
xor
or
fadds
std
adc
mov
subb
loope
jb
enter
push
pop
je
push
xchg
or
sub
es
inc
mov
jae
or
fistl
dec
and
pop
cmp
mulb
cmpsl
cmp
sbb
dec
mov
inc
loope
pop
lcall
fwait
lret
out
data16
pusha
push
loopne
fs
or
loopne
lods
daa
and
fstpl
jae
shlb
cli
xchg
xchg
add
rcll
mov
dec
push
xchg
movsb
ficoml
addr16
inc
lds
hlt
gs
mov
cmp
and
movb
dec
rcl
ficoms
fisubrs
insb
into
mov
orl
orb
xor
ficomps
mov
lds
fmulp
adc
inc
mov
fists
and
ret
lods
inc
pop
inc
dec
lock
cltd
mov
int3
mov
sub
rorl
jmp
stos
inc
lock
mov
lock
fstl
mov
daa
pop
add
push
in
loope
xchg
mul
cli
imul
out
sub
mov
xor
repz
test
ljmp
fs
test
jp
pop
inc
add
daa
pop
stc
jb
jo
nop
into
mov
jb
or
lods
pushf
in
dec
cmp
jns
add
sub
int3
inc
idivb
push
fiaddl
or
adc
pop
int
xchg
mov
push
xchg
repnz
pop
fisttpl
sahf
mov
dec
fwait
jnp
loope
out
gs
rcrl
adc
dec
xor
call
aas
inc
ja
dec
mov
jns
arpl
mov
int
aaa
aas
iret
fs
cmc
mov
das
xchg
push
mov
stos
sbb
test
jno
push
lea
loopne
add
inc
aas
jg
push
mov
pop
ficoms
push
sbb
push
jg
sbb
cmp
mov
mov
loop
aam
sub
ljmp
stos
shrl
xchg
loopne
xchg
insb
enter
fists
adc
push
ret
imul
into
lret
aad
movsl
lds
pushf
je
lahf
pushf
cmpb
inc
push
loopne
cld
inc
mov
mov
xor
mov
jmp
sahf
lcall
adc
and
adc
jle
jo
jle
sbb
cs
xor
jbe
jmp
xor
cmpsl
sub
and
les
enter
fildll
sbb
add
inc
imul
cmpsb
rorl
sbb
adc
mov
fdivrl
call
imul
or
sbb
jg
dec
push
call
fsubp
repnz
mov
jbe
pop
pop
mov
out
fstps
imul
add
ret
call
xchg
es
or
xor
negl
push
jg
dec
and
dec
loop
inc
ljmp
dec
xor
jecxz
std
scas
pop
loop
add
xchg
mov
daa
mov
aad
xor
push
in
dec
mov
jmp
adc
clc
adc
lret
pushf
std
call
lds
inc
xor
cs
mov
jne
out
mov
sub
cmpsb
into
popf
dec
jnp
sbb
or
mov
cmp
mov
movsb
stos
lret
repnz
jmp
leave
out
xchg
shrd
pop
dec
xchg
xchg
add
add
mov
orb
or
sti
mov
fistps
add
aam
js
pop
loope
xchg
adc
or
mov
testb
jo
pop
or
add
push
jp
cltd
in
cmpsb
push
lock
addr16
insb
call
add
ss
pop
dec
push
sub
movsl
std
out
xchg
mov
mov
ret
je
mov
push
mov
pop
xchg
les
inc
popf
aaa
cltd
pop
cld
inc
shr
sbb
jns
std
add
in
aad
inc
stc
ficomps
loopne
fchs
push
je
pushf
int
pop
lds
cmp
mov
pop
std
adc
xor
xlat
jge
sbb
data16
xor
or
gs
adc
xchg
cmpsb
adc
jnp
xorl
xlat
pushf
xchg
push
pop
das
add
test
add
iret
outsl
pop
jle
add
popf
aas
push
or
out
pop
dec
jb
fs
test
cmp
mov
inc
dec
mov
jle
repnz
jns
xorl
inc
xor
push
jns
mov
sbb
or
add
pop
dec
fwait
adc
mov
lock
xor
sbb
or
mov
mov
insb
pmulhw
lock
cmpsb
sub
mov
lods
mov
lock
and
pop
mov
aad
stc
mov
adc
hlt
sbb
outsb
orl
or
xor
sti
mov
push
cmp
adc
and
or
pop
sbb
mov
inc
push
or
lds
out
jns
xchg
sub
mov
xor
sbb
and
call
fwait
add
push
shrb
sub
je
movsb
push
mov
mov
insl
cmp
adc
pop
xchg
mov
es
addr16
or
fs
cmp
or
shll
mov
leave
mov
sbb
or
mov
pop
mov
loope
dec
add
jns
jmp
mov
or
pushl
dec
fwait
xor
jg
cmp
jne
in
call
push
test
dec
sahf
add
cmp
ss
sbb
in
mov
inc
daa
aas
and
and
out
pop
lds
xlat
jmp
pop
shrl
negb
stos
jg
jne
dec
adc
and
pop
scas
xchg
loopne
cmp
ds
pop
sbb
cli
add
mov
mov
xor
add
imul
cmp
jbe
pop
jmp
mov
xchg
imul
or
jle
jo
jle
cmp
xchg
fwait
pop
sbb
and
xchg
rcr
or
inc
pusha
pop
mov
fildl
dec
adc
xor
lahf
sbb
mov
push
icebp
pop
ljmp
pop
push
stos
mov
and
and
push
xchg
mov
xor
or
in
into
pushf
enter
dec
lods
mov
es
xchg
stc
jne
sub
into
mov
out
lock
xchg
popf
shlb
nop
ret
add
aam
shrl
ljmp
gs
insb
pop
jb
mov
pop
pop
cmp
lods
mov
rcr
xchg
imul
mov
scas
push
ds
xchg
daa
shl
mov
cmp
sub
dec
pop
mov
pop
repz
jb
xchg
jp
pop
adc
mov
jecxz
jle
das
mov
stos
gs
cld
stos
fdivrs
out
mov
cmp
test
inc
ret
ds
and
loop
addr16
mov
jae
movsl
loopne
adc
xchg
leave
xchg
cs
sti
lcall
cmp
out
add
inc
xchg
test
pop
adc
xor
push
xlat
dec
mov
ret
fildll
fadd
push
sbb
jmp
jnp
xlat
clc
xlat
mov
jecxz
add
es
fnstsw
jl
mov
in
mov
add
mov
cmp
lret
cs
adc
testl
xchg
iret
mov
mov
out
mov
aad
add
mov
inc
xor
dec
mov
mov
mov
pop
aam
pop
loop
popf
cmp
mov
or
scas
sarl
mov
pop
mov
test
mov
and
cmp
testb
gs
mov
push
jno
into
pop
mov
pop
push
cltd
mov
mov
adc
out
xor
icebp
lods
push
repnz
dec
jecxz
std
test
or
clc
jb
pop
dec
rcrb
dec
xchg
sub
cld
gs
add
mov
shlb
inc
popf
sbb
cmp
sub
rol
loopne
push
xchg
or
xchg
sbb
xchg
mov
cmp
xor
cld
pop
mov
cmp
ds
or
rcrb
fcmovb
inc
cld
and
cmpsb
aam
test
inc
imul
cmp
xor
inc
jmp
jp
jecxz
lret
imul
jns
lcall
xor
out
into
inc
xchg
movsb
rcrl
mov
dec
push
cmp
jl
inc
and
idivb
jnp
dec
pusha
mov
dec
in
pop
mov
aas
frstor
ret
inc
mov
loopne
es
jo
adcb
repz
or
cmp
mov
arpl
repnz
into
sbb
jecxz
jp
lret
ja
mov
movsb
dec
and
or
inc
jae
movsb
pop
jg
and
cmc
cmp
pop
push
cmp
lret
xor
mov
fucomip
andl
lahf
jne
jmp
pop
dec
ret
std
shll
fwait
cli
aas
mov
jb
adc
jp
cmp
adc
fistl
and
pop
outsb
mov
movsb
pop
and
sbb
xchg
insb
sbb
inc
pop
adcl
fcomi
dec
scas
movsb
cli
hlt
rolb
mov
es
js
sbbb
xor
inc
or
loopne
push
jnp
inc
out
xchg
sub
push
out
test
pop
aas
out
arpl
and
int3
mov
adc
add
in
sub
sbbl
push
sbbl
push
incl
push
andl
push
adcl
call
test
movl
je
adcl
xor
inc
movl
jmp
add
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
movl
sbbl
lea
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
sub
lea
mov
adc
mov
mov
xor
or
sub
or
mov
mov
mov
sub
mov
mov
or
mov
mov
andl
xor
sbb
mov
xor
add
mov
mov
movzwl
cmp
mov
movzbl
mov
je
sub
mov
xor
add
sbbl
imul
movl
mov
movl
jmp
addl
xor
sbbl
add
mov
movzbl
sub
mov
xor
adc
add
not
mov
mov
mov
xor
xorl
add
movl
cmp
jne
sbbl
push
movl
pushl
sbbl
pushl
adcl
call
and
mov
mov
and
mov
sub
mov
neg
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
mov
mov
or
movl
or
mov
movl
xor
mov
and
mov
and
mov
orl
xor
subl
xor
adcl
add
mov
adcl
xor
xor
adcl
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
adc
mov
addl
mov
xor
xorl
lea
push
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
adc
mov
mov
xor
movl
lea
subl
push
and
mov
adcl
pushl
call
mov
mov
mov
or
xor
lea
mov
or
mov
subl
xor
xorl
xor
add
mov
andl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
movl
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
add
mov
inc
mov
subl
pushl
orl
sub
subl
pushl
adcl
xor
mov
pushl
call
sub
adc
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
repz
jae
hlt
aaa
scas
aad
popa
scas
and
jle
repz
and
mov
icebp
fwait
xor
ret
insb
js
jmp
push
fcomp
mov
dec
enter
repz
dec
mov
icebp
out
sbb
mov
and
xchg
imul
idivl
adc
clc
add
sbb
jmp
mov
add
lock
and
cs
cltd
cmp
push
shrb
data16
push
es
or
or
jae
std
jbe
xchg
and
adc
leave
in
cmp
lods
mov
mov
sbb
insl
mov
mov
addb
cmpsb
sub
inc
jge
lcall
dec
cltd
sbb
mov
jae
mov
scas
das
aad
rorl
out
mov
ret
or
mov
jno
sub
inc
dec
repz
jno
int3
cld
cmp
inc
and
sti
test
sub
push
imul
lea
push
repz
xchg
or
adc
fwait
push
mov
insl
mov
fisubrl
xlat
lods
test
ret
nop
or
stos
mov
sbbl
sub
fld
lds
cmpsb
or
fdivp
outsb
test
add
loope
lea
mov
adc
in
cmp
xchg
ficompl
fsubrs
inc
addr16
in
xor
cmpsl
push
xchg
cwtl
mov
addb
lret
arpl
lods
icebp
out
fidivs
or
dec
push
cld
mov
loop
rorb
and
dec
pop
les
add
adc
and
mov
mov
in
dec
scas
testb
pop
ljmp
mov
pop
vmovdqu
enter
mov
out
daa
jg
imul
adcb
pop
mov
xchg
sbb
sub
dec
mull
mov
xchg
xchg
test
dec
mov
wbinvd
mov
lds
adc
push
dec
shr
xor
mov
dec
push
xor
leave
rorb
dec
sbb
imul
test
aad
or
push
xor
es
cs
in
xchg
pop
int
call
cmpb
jb,pt
call
inc
add
mov
in
in
jecxz
cmp
adc
pop
mov
fstpt
mov
mov
jne
lahf
hlt
in
xor
xchg
xchg
xchg
scas
pop
cmc
pop
jo
cmp
repnz
push
rorb
inc
sbb
dec
add
das
jge
aas
leave
inc
xchg
mov
fwait
into
je
sbb
adc
movb
fidivl
adc
dec
orb
dec
in
push
push
dec
je
lods
dec
mov
mov
scas
fsubrl
xor
aad
and
or
dec
push
ljmp
sub
leave
insb
sbb
mov
ret
mov
pop
sbb
das
adc
in
pop
outsb
out
mov
lret
inc
insl
ficomps
fldl
jae
icebp
lret
aam
ret
frstor
or
mov
xorl
pushf
clc
movl
movl
push
mov
mov
mov
movl
push
movl
mov
movl
mov
movl
cmp
je
or
jmp
cmc
pop
inc
gs
jge
pop
push
add
and
mov
jle
jns
jle
sub
mov
pop
xorb
jns
dec
aas
cmp
out
add
cmp
xlat
cmc
sub
ljmp
cmpsb
adc
repnz
sahf
shll
add
movsl
push
or
jmp
int3
lret
insb
ret
xchg
lret
insb
inc
jge
shrl
push
rorl
add
jp
lock
adc
ds
es
pop
loope
sbb
mov
adc
fildll
lods
cli
cmp
dec
ja
dec
pop
iret
out
sbb
ret
add
jo
and
cld
xchg
push
adc
dec
inc
adc
xchg
mov
xor
dec
xchg
dec
pop
jge
xchg
cmp
jle
cmp
or
fs
inc
stos
daa
xor
sbb
mov
cmc
ret
push
sbb
fidivl
lret
lret
inc
ja
add
cld
movsb
test
jbe
adc
push
dec
int3
ds
ja
pop
sub
sbbb
aas
jp
mov
aas
dec
or
jecxz
mov
xchg
outsb
pop
sbb
lds
and
lods
jecxz
adc
jl
push
ret
shl
dec
xor
jg
push
jp
jle
sbb
inc
data16
ss
inc
cvttps2pi
add
scas
adc
pop
xchg
jmp
fsubs
scas
arpl
loope
sub
sub
nop
cmp
test
int3
sbb
mov
movsb
cmp
adcl
sbb
xchg
mov
hlt
test
xchg
or
push
pop
roll
test
mov
int3
js
subb
enter
testb
xor
das
cli
jmp
pop
scas
xchg
pusha
mov
mov
psubq
les
sbb
and
add
xor
lea
je
mov
addr16
sti
ljmp
jbe
lods
jecxz
push
lea
leave
movsl
inc
sub
adc
push
xlat
jne
ds
add
xor
subb
mov
mov
rorl
pop
ret
fs
stos
loop
sub
daa
cs
fisubrs
and
lods
add
push
jnp
or
sbbl
icebp
xchg
jp
or
and
mov
dec
enter
outsb
or
dec
and
repnz
and
test
jge
rcl
xchg
ret
jp
cs
xchg
clc
jge
cld
or
lea
loopne
and
repnz
sbbb
mov
lods
aaa
mov
sub
or
gs
out
pop
imul
adc
pop
pop
cmpsl
mov
pop
andb
jbe
push
pop
adc
inc
cltd
cld
fimuls
xor
sub
xor
unpcklps
inc
popf
scas
add
cli
jecxz
xlat
shr
add
pop
ret
pop
inc
hlt
xlat
les
outsb
ret
mov
loop
movsl
mov
fnstenv
inc
roll
jg
into
jno
lret
cmp
and
mov
out
aas
das
mov
xor
loope
out
and
push
mov
bound
inc
cld
mov
xorl
xor
add
movl
cmp
movl
je
and
mov
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
add
push
pushl
pushl
mov
jmp
pop
pop
cld
sub
mov
push
in
sbb
sbb
jle
xchg
ds
notl
sbb
popf
test
adc
sbb
sbb
stc
or
stc
fiadds
mov
pop
out
fstpl
ljmp
jnp
adc
pop
sbb
fiadds
adc
push
mov
add
sar
cmpsl
inc
decb
push
inc
push
mov
push
jp
inc
cmc
cwtl
in
out
out
or
loop,pn
mov
or
into
add
lea
test
fisttps
pop
int3
aam
popa
pusha
adc
daa
xchg
insl
push
xchg
dec
pop
fstps
adc
push
in
nop
mov
loop
fmuls
ds
jg
fiaddl
push
adc
sti
mov
mov
xchg
sub
dec
sub
out
dec
repz
call
push
dec
xchg
jle
fbld
lcall
ret
leave
lds
testb
add
pop
stc
or
cmp
jno
jb
daa
pusha
mov
mov
push
incl
push
xor
fsubl
xor
jg
lea
push
das
sub
daa
push
cmp
lods
add
or
fcmovnbe
mov
push
jne
int
cmc
mov
stc
mov
outsl
mov
int
sti
jmp
cli
or
das
or
ljmp
xor
in
popa
mov
decb
cmp
inc
iret
adc
scas
pusha
pop
sbb
out
jl
sub
fucomi
mov
cmpsl
mov
or
sbb
int
cmp
adcl
mov
inc
push
pop
push
repnz
sbb
and
mov
push
popf
and
xor
les
pop
cwtl
xor
aam
jg
pop
cli
add
xor
ds
les
adc
rcr
shrb
mov
sbb
xchg
arpl
mov
xor
mov
shll
xchg
lea
sbb
jp
test
xchg
scas
lock
push
leave
sarb
xlat
mov
out
inc
outsl
mov
sbb
mov
je,pt
jo
sbb
cmp
add
mov
sub
insb
call
jle
movsb
movsb
jecxz
sub
xchg
cmp
fwait
cmp
fmull
lods
add
les
loope
ja
aad
rolb
inc
mov
xchg
arpl
xor
pop
sahf
in
and
jne
lds
addb
dec
test
add
aaa
and
adc
scas
sbb
mov
pop
iret
vandps
es
int3
ss
sub
jns
mov
xchg
jno
imul
je
jbe
lahf
movsb
add
rol
mov
insb
mov
shl
ret
mov
mov
jo
fdivrs
cmp
mov
iret
rcrl
sub
sbb
jns
and
jmp
pop
mulb
mov
mov
jmp
sbb
mov
fs
mov
inc
jnp
add
popf
cmpb
ss
cmp
addb
jge
or
aas
pop
and
sub
pusha
les
xchg
in
je
xchg
pop
outsl
pop
loop
dec
lret
mulb
mov
icebp
call
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
pushl
pushl
call
jmp
in
ss
xor
icebp
add
lock
xor
jns
jle
or
push
gs
dec
rolb
inc
push
movsl
sub
dec
pop
or
or
js
fldcw
inc
and
jmp
jno
clc
enter
into
jmp
xchg
mov
js
pop
sub
mov
out
hlt
sbb
push
xchg
fwait
iret
adc
shlb
fistpl
insl
xchg
lcall
out
add
cmpsb
into
push
and
ret
int
jg
xor
mov
mov
movsb
jl
fs
lods
inc
imulb
test
aaa
pop
sub
add
jg
repz
xor
add
ret
scas
shrb
lods
sbb
push
sub
lock
loop
stos
jnp
dec
movsb
mov
cltd
inc
push
lds
sarl
sbb
mov
inc
mov
push
inc
inc
cmp
xchg
sub
jmp
jmp
jnp
push
add
in
test
pop
adc
icebp
xorl
or
dec
adc
es
mov
stos
in
cmpsl
test
jmp
fs
clc
movsl
push
je
repnz
adc
cmp
push
ret
inc
jle
xor
sti
addr16
outsb
cmp
adc
cmpsl
stc
cmp
or
cmpsb
call
pop
lret
mov
or
cltd
mov
clc
aas
ss
out
ffreep
lret
int
enter
add
jp
popa
sahf
fwait
xor
adc
ja
jo
das
lods
push
lcall
xchg
adc
mov
cmp
adc
mov
jo
shlb
bound
cmc
decl
ret
test
adc
pop
mov
insb
fldcw
std
pop
or
rorl
rcll
fistpll
or
mov
mov
adc
mov
add
mov
push
or
cmp
pop
dec
rolb
ret
addb
mov
and
call
mov
test
insl
adc
sub
mov
daa
push
movsl
sub
pop
xlat
push
and
sar
or
outsb
pop
mov
shr
aas
push
sub
jae
shl
stos
sbb
in
pop
pop
insb
jge
rorb
dec
ss
sub
popf
ret
fcmovne
repnz
pop
jo
jae
and
inc
cmp
andb
xor
fmull
adc
js
imul
push
add
xchg
mov
in
loopne
sbb
lahf
push
adc
add
sub
lahf
insl
sub
xchg
pop
daa
cwtl
pusha
inc
push
es
pop
insl
xchg
push
aam
adc
std
inc
out
cmp
xchg
negb
scas
xor
leave
mov
mull
cli
pop
lds
movsb
xchg
pop
loop
mov
out
add
mov
jge
xor
lret
add
jmp
push
add
cmc
shll
xor
aam
outsl
out
push
je
add
dec
pop
mov
and
fcompl
sahf
shll
push
sarl
jmp
bound
jno
jge
mov
mov
xor
pop
jmp
push
clc
clc
mov
test
adc
inc
jle
hlt
jns
jle
negb
arpl
repnz
mov
dec
fucomip
pop
aaa
mov
jge
xor
lret
xchg
imul
or
loop
pop
mov
inc
subl
or
std
mov
movsb
xor
dec
pop
mov
pop
nop
cmp
out
mov
popf
pop
cmc
jg
cltd
sbb
mov
adc
je
xor
mov
adc
mov
mov
mov
pop
push
shll
pop
and
pusha
testb
dec
or
push
data16
mov
aaa
or
inc
cmp
and
cmpsb
stc
sub
ds
movsb
inc
push
lock
nop
es
sarb
jmp
jmp
sbb
subl
outsl
pop
push
add
mov
les
sub
test
fisttps
pop
insl
mov
mov
cmpb
inc
mov
ja
adc
repz
inc
repz
in
test
jmp
push
mov
xchg
loopne
mov
ja
mov
bound
fnstenv
mov
push
adc
mov
sbb
in
clc
inc
fisubrl
in
and
enter
mov
popa
add
jmp
aam
outsl
cmpsb
mov
xchg
add
dec
jb
inc
cmpsl
outsb
mov
xchg
lcall
or
cmp
adc
mov
push
push
dec
push
add
mov
fucom
shrl
add
push
mov
je
cli
sub
and
rorb
insb
inc
xchg
lret
dec
jmp
or
adc
cmpsl
inc
mov
mov
pop
bound
out
sbb
das
lret
pop
jmp
aas
xchg
mov
add
mov
push
xchg
sbb
lcall
pushf
adcb
jo
xor
jl
fildl
shrb
stos
mov
popf
ret
cli
nop
add
ficomps
loope
sbb
mov
stc
or
mov
shlb
jecxz
sbb
pop
popa
stos
pop
test
das
cmp
sbb
test
iret
jl
cmpsl
fsubl
inc
testl
jmp
fnsave
movsl
cmpsl
mov
mov
adc
insw
add
mov
jns
jae
fcmovne
add
stos
pop
ss
ds
add
movsb
sub
imul
sbb
in
mov
icebp
pop
adc
cmc
sbb
lcall
pop
and
lahf
movsl
push
push
cmp
cmpl
push
mov
inc
sbb
and
jecxz
dec
fmull
mov
jae
in
rorb
or
rolb
data16
es
in
xor
sub
and
mov
xor
mov
xor
push
stos
in
fdivrl
jge
fisttps
sub
out
pop
pop
dec
xor
pushf
lods
outsl
jo
popa
sar
in
lods
rcrl
gs
mov
repnz
jge
fadds
adc
movsl
inc
cld
or
movb
pop
addr16
lds
ds
fstps
push
add
push
std
or
adc
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
andl
mov
add
xor
cmp
movl
jne
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
jmp
mov
jae
mov
sub
mov
jle
pushf
jg
jle
mov
popa
jp
jno
sbb
dec
bound
icebp
lret
push
outsb
shrd
and
adc
idiv
sti
sbb
inc
jl
ret
mov
pop
jne
js
adc
mov
jl,pn
movsl
aad
mov
cmpsl
add
aas
mov
xchg
ret
or
pushf
xlat
imul
pop
mov
mov
loop
negb
pop
mov
fists
addb
movsl
les
push
jb
out
xchg
mov
add
pop
jg
in
idivb
in
scas
mov
add
aas
add
scas
xchg
xor
xor
inc
add
inc
and
adc
popa
xchg
rorl
or
mov
les
xor
dec
lds
sbb
ficompl
fs
xorl
jmp
push
or
pop
mov
ret
lds
inc
jns
dec
mov
dec
nop
add
lods
sub
repz
cmp
mov
cmc
arpl
imul
pop
sub
pusha
or
adc
mov
divl
imull
sub
out
out
sub
out
push
cld
sahf
pop
push
and
sbb
jp
xor
xor
or
imul
add
scas
mov
mov
adc
push
add
add
je
xchg
hlt
cmp
pop
imul
pusha
cmpsb
cmpsb
inc
push
bound
jb
add
mov
add
cmc
mov
enter
cmpsl
mov
ret
cwtl
adc
jle
pushf
jg
jle
pop
xchg
in
lods
sahf
out
sti
out
outsl
xor
dec
lods
lcall
out
mov
loope
loop
jno
cmc
xchg
mov
sti
inc
mov
fnstsw
pop
lock
add
pop
and
daa
rol
cmpb
jbe
loopne
repz
xchg
and
and
mov
or
popf
fimull
mov
adc
cmc
outsb
mov
sti
push
cs
jmp
call
xchg
mov
xor
test
sub
push
test
ljmp
jo
cmpsb
cld
push
dec
mov
or
mov
gs
stos
movsb
xchg
add
sbb
je
add
pop
cmp
xchg
outsl
in
xchg
es
mov
add
inc
jge
mov
ljmp
and
rcll
mov
notl
dec
popa
jecxz
pop
pslld
in
mov
daa
mov
mov
push
pop
mov
inc
aad
sbb
repz
pop
jo
xor
pop
jecxz
pop
ljmp
scas
pop
add
xor
lock
je
test
les
movswl
cmp
pop
or
scas
push
mov
iret
jg
xchg
mov
push
mov
out
das
or
cmp
shrb
sub
lret
xchg
mov
mov
cwtl
and
int3
repnz
fildl
test
jg
add
pop
popa
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
adc
mov
andl
xor
add
movl
jmp
cmp
arpl
mov
arpl
mov
in
stos
inc
jle
popf
js
jle
aam
mov
push
repz
ret
stos
lods
mov
jo
sbb
ja
ret
and
addr16
dec
sbb
mov
cmc
xchg
test
xor
push
jg
mov
or
out
outsl
loopne
icebp
and
cmp
in
xor
push
add
sub
jmp
inc
aas
jnp
fs
aam
jmp
test
movsb
int
shl
test
gs
into
aas
xchg
xor
je
pop
and
ficoml
push
daa
dec
lahf
cmp
js
shrb
pop
aaa
pop
mov
fcomi
adc
pop
addr16
and
loope
mov
jno
insl
cmpsb
call
adc
outsb
bound
and
jp
lahf
in
pop
push
sub
cmp
sbb
loope
dec
pop
pop
and
xchg
add
leave
les
adc
push
pop
xchg
pop
xlat
ja
js
cmp
jp
cltd
cwtl
lods
adcb
js
lds
mov
movsb
push
inc
xchg
xchg
lods
push
jecxz
push
cwtl
lcall
hlt
test
cmpsl
and
aas
imul
hlt
add
xchg
iret
xor
or
mov
or
bound
outsb
jmp
push
pop
std
and
mov
push
xchg
add
push
push
stos
jp
mov
pop
and
mov
sub
pushf
inc
movsl
or
mov
cmpb
inc
test
mov
jle
call
xchg
mov
and
sahf
cmp
add
push
xchg
mov
lds
ficoml
scas
mov
xchg
xor
out
jmp
jle
scas
jmp
mov
fdiv
inc
and
movsb
dec
inc
icebp
pop
imul
flds
push
adc
pop
mov
inc
lds
lods
adc
adc
into
nop
outsb
mov
mov
push
js
int
pusha
pop
ret
lods
mov
xchg
outsl
pop
push
imul
push
xor
dec
add
push
lods
movsl
inc
icebp
bound
lcall
push
jmp
repnz
pop
mov
mov
mov
loope
loope
sbbb
push
cmp
frstor
cld
or
icebp
ja
push
xchg
or
test
jle
adc
jge
ljmp
mov
push
mov
mov
mov
movl
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
mov
xor
subl
xor
xorl
lea
xor
cmp
jne
movl
jmp
jmp
inc
lods
xchg
addr16
mov
leave
dec
jle
popf
js
jle
jmp
lcall
outsl
mov
jae
sbb
out
rcrb
add
mov
aas
cmc
pop
mov
mov
xchg
lea
dec
rcrb
test
or
leave
push
dec
jg
loope
sbb
mov
fs
pop
call
sbb
cwtl
lcall
push
sub
or
stc
fstpl
push
pop
je
mov
mov
xchg
cmp
int
xorb
xor
dec
push
or
push
jb
pop
cltd
stos
inc
xchg
les
add
push
pop
lahf
or
xor
push
cmp
add
pop
dec
outsb
scas
fisttpl
outsb
or
pop
mov
movsb
cltd
add
lahf
push
inc
pop
lock
inc
cwtl
cmc
or
xchg
pop
sahf
adc
mov
cmp
mov
int
outsb
mull
xchg
insl
movsl
sub
mov
and
or
push
mov
pop
sub
adc
and
xchg
push
mov
xchg
cmpsl
pusha
cld
xchg
repz
ds
fcoms
jl
pusha
movsl
push
repz
out
jo
add
xchg
dec
test
inc
sub
lahf
inc
xor
adc
das
js
mov
iret
fldl
mov
adc
lea
dec
insb
pusha
ret
inc
aaa
repz
dec
push
sahf
je
shlb
pushf
cvtps2pi
pop
ljmp
in
call
notb
cs
pop
and
xchg
incl
jmp
adc
stc
push
mov
cltd
sbb
fisttps
xor
imul
sbb
popl
fcompl
fildll
je
popf
cmp
mov
push
mov
int3
xor
add
cmp
mov
notl
xor
sbb
xor
jbe
xchg
rorb
shll
out
dec
push
outsl
fcomps
mov
popl
fistpl
mov
mov
xchg
jge
dec
add
mov
mov
adc
push
je
mov
frstor
mov
push
jl
daa
push
les
adcl
lret
imul
inc
xchg
jne
int3
xchg
clc
fwait
sub
mov
das
mov
mov
dec
mov
pop
push
mov
mov
push
rclb
jmp
add
mov
xor
add
mov
mov
xor
jmp
jo
rsqrtps
pop
jge
pop
mov
adc
dec
jle
popf
js
jle
xor
adc
scas
ror
inc
cmpl
mov
adc
aad
xor
push
lods
pop
and
mov
outsl
bound
xchg
jl
push
sub
dec
adc
sbb
add
push
mov
jg
shrb
cmp
shll
inc
xor
jmp
mov
mov
daa
cmpsl
stos
andl
mov
inc
push
fcmovu
jge
cli
xchg
and
sbb
movsb
stos
push
pop
repnz
mov
mov
andl
addr16
jo
mov
rolb
jo
cs
roll
push
jp
jae
ret
test
mov
andb
inc
sti
or
test
xchg
jnp
jb
and
xchg
roll
test
mov
fldcw
or
xlat
mov
cmp
mov
push
inc
lods
push
xchg
outsl
push
sbb
jmp
cld
mov
push
out
dec
xor
in
jo
jae
lret
lods
push
pop
dec
daa
cmp
dec
in
popf
adc
call
jl
jo
cmp
pop
xchg
sub
inc
js
cld
lods
adc
lea
inc
or
xchg
jb
mov
popf
in
fnstsw
xor
rclb
jo
aas
jo
and
adc
sub
lods
jmp
and
sti
aam
jle
data16
or
divb
pop
mov
mov
add
mov
ljmp
pop
push
bound
inc
fstps
dec
mov
mov
add
push
or
dec
xor
pop
fwait
xchg
mov
cmp
mov
out
lahf
add
and
jno
shrl
pop
fistpll
adc
xchg
incl
adc
inc
pop
add
xlat
add
fwait
leave
hlt
ljmp
std
test
xor
push
daa
mov
pop
dec
xchg
jge
or
pushf
mov
fxam
and
sbb
sbb
pop
push
loopne
fs
stos
jecxz
in
stc
loopne
popa
mov
inc
xor
adcl
cmpsl
mov
adc
mov
mov
inc
cmp
sub
sbb
rclb
divl
imul
xlat
in
cmp
sbb
adc
add
add
fildll
pop
xchg
es
stos
xchg
iret
add
repz
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
mov
xor
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
adc
mov
xorl
add
orl
mov
sbb
mov
xorl
push
movl
push
sbbl
test
je
mov
sbb
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
imul
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
jmp
roll
std
mov
xchg
inc
jg
xchg
and
pop
jg
jle
xor
lods
cmpsl
mov
lock
and
insl
insl
or
imul
lods
sbb
test
es
das
mov
aaa
int
push
xchg
mov
ss
test
ret
inc
adc
js
loopne
push
mov
ss
fstpt
xlat
sbb
leave
nop
ret
lea
test
in
in
xor
cmc
not
push
add
and
cli
or
pushf
dec
lods
dec
leave
mov
cmp
pop
shr
inc
mov
and
mov
scas
inc
cmpsb
push
stc
out
dec
shll
ficompl
sub
je
pop
jge
and
aaa
mov
xor
lods
daa
in
xchg
xchg
xchg
pop
cmp
cld
ror
xchg
es
test
cli
lea
lcall
outsb
int
shll
inc
cmpsl
push
in
sbb
pop
leave
pop
pushf
addl
ds
outsb
fstps
inc
mov
fs
ljmp
add
push
ljmp
fcomps
push
clc
les
scas
add
pop
push
jl
insl
or
mov
sub
gs
psubb
fld
std
bound
nop
in
jle
jl
jle
das
pop
push
dec
repz
jne
pop
pop
push
mov
in
add
ret
cmp
fs
pop
xchg
xor
hlt
add
xchg
icebp
fists
mov
inc
and
push
cmp
sbb
sbb
inc
pop
mov
in
push
inc
scas
mov
cli
test
adc
repz
xor
xchg
lods
push
or
insb
lahf
shll
xchg
add
jl
pushf
leave
cwtl
adc
mov
mov
or
mov
or
mov
jmp
lret
outsl
dec
jne
stos
movsb
loope
lods
inc
inc
sub
push
jle
pop
jg
jle
fsts
fdivrs
sbb
sbb
insl
mov
jmp
aas
jecxz
xchg
jecxz
sub
and
movsl
or
xor
mov
daa
mov
jl
add
jo
movsb
mov
sbb
jo
push
mov
pop
mov
xchg
sbb
sbbb
dec
xor
fsts
sub
dec
sarl
mov
add
in
das
cld
test
test
dec
sbb
sahf
scas
inc
insl
movsb
fisubs
pop
aam
es
pop
inc
lret
adc
insb
scas
push
test
cmpsl
fstpt
jmp
movsl
pop
xchg
clc
cmp
add
cmpsl
cli
ret
lock
repnz
shl
movsb
nop
xor
popf
aas
mov
popa
adc
imul
jae
mov
adc
nop
dec
jl
fsts
repnz
mov
outsb
adc
fisubrs
andb
std
cli
lea
test
or
movsb
call
stc
or
jl
aas
ds
xor
or
ret
loopne
xor
fisttps
dec
sbb
icebp
aaa
pushf
cltd
mov
dec
xchg
cmc
movl
push
sar
fistpll
adc
add
das
out
or
stos
mov
imul
dec
fadds
or
bound
xchg
jo
insb
pop
enter
sbb
lods
pop
cmpsl
imulb
loope
pop
test
jl
mov
sar
push
sbb
addr16
xchg
faddp
sbbb
push
inc
leave
mov
daa
pop
sub
push
movsl
adc
sbb
leave
lret
rorl
sub
or
pop
cmp
inc
pop
clc
xchg
sub
xor
xor
adc
mov
mov
decl
mov
mov
mov
addl
xor
xor
add
mov
mov
mov
movl
je
adcl
mov
adcl
xor
orl
add
movl
cmp
jne
sbbl
pushl
orl
call
and
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
cmp
je
orl
pushl
pushl
subl
call
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
jmp
scas
repz
add
push
out
sub
repz
jle
pop
jg
jle
cwtl
or
lahf
mov
pop
popf
sahf
icebp
sarb
sub
popa
pushf
or
hlt
xchg
jno
daa
mov
adc
mov
lea
repnz
push
cmc
imul
pop
dec
shlb
mov
in
jmp
stos
aad
sti
adc
std
mov
aad
push
inc
icebp
mov
cmpsl
repnz
cmp
repz
clc
mov
push
jl
push
std
mov
mov
notl
push
mov
dec
adc
mov
rolb
add
cmp
xchg
inc
popf
dec
popf
lahf
push
arpl
and
fistpll
sti
jb
cltd
call
jno
cmp
imul
or
popf
mov
incl
dec
dec
push
test
sub
or
lock
mov
xchg
pop
push
push
jne
cmpsl
insl
stc
and
into
hlt
scas
mov
push
lcall
push
in
xor
outsl
lret
sub
xor
std
arpl
jb
mov
je
lahf
push
sub
ficoml
jb
test
cmp
xchg
dec
sbb
repnz
arpl
adc
inc
imul
mov
sahf
lods
aaa
dec
dec
cmp
push
add
adc
pop
sub
and
sub
xchg
out
ret
sbb
pop
fldl
ja
dec
pop
shrb
lret
jge
xor
addr16
int3
in
jle
pop
mov
sub
push
ss
mov
dec
pushf
sbb
push
in
xor
fwait
lahf
push
sub
pop
xor
out
nop
in
ds
adc
add
inc
dec
pop
and
es
scas
jae
dec
mov
sarl
dec
cli
sub
stc
jecxz
or
aaa
xchg
pop
xchg
jb
pop
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
jmp
lret
dec
add
je
jge
sub
arpl
xor
jle
jg
jle
es
fdivs
js
xor
insb
or
xchg
ret
mov
pop
les
mov
adc
out
xchg
xchg
xchg
pop
outsl
mov
cltd
fidivrs
lahf
mov
addl
das
jle
push
mov
xor
add
inc
or
jnp
jge
mov
mov
mov
ljmp
hlt
int3
sbb
repz
test
int
fxch
fs
lds
dec
scas
lahf
fcompl
fidivrl
cmpb
push
popa
add
setge
in
cmp
dec
push
stos
inc
dec
adc
jmp
pop
sbb
popa
push
outsb
sbb
mov
pop
cmp
mov
and
and
sub
jmp
mov
ds
push
loopne
scas
xchg
sub
mov
out
fmuls
cmc
aaa
movl
sub
loopne
sub
or
xor
push
mov
push
mov
insb
ss
adc
rorl
insb
or
push
cwtl
lods
push
loop
mov
test
dec
inc
xchg
inc
jmp
dec
sbb
imul
push
repz
shll
in
mov
sbb
xor
repnz
push
sub
sbb
xor
pop
lock
aaa
out
dec
adc
jo
lds
rolb
cld
lea
js
std
xchg
and
pop
or
fwait
rcrl
dec
push
pop
mov
mov
adc
sbb
push
sub
call
jnp
divb
mov
or
lock
data16
mulb
daa
add
xchg
loope
mov
jns
adc
cmp
mov
lahf
insb
clc
repnz
pushl
mov
mov
jmp
cmp
jne
xchg
mov
mov
push
jle
pop
jg
jle
mov
imul
scas
in
leave
shl
ficompl
cmp
mov
push
inc
lods
int3
fwait
inc
testl
pop
scas
or
cwtl
push
aaa
jno
push
ds
insl
pop
addl
lret
jmp
pop
xchg
lods
jle
and
cmp
sbb
icebp
and
cmp
or
and
mov
lret
mov
mov
mov
lcall
inc
ficompl
outsl
popf
mov
push
movl
sub
sti
sbb
xor
bound
pop
pushf
leave
mov
inc
add
xor
jl
and
mov
xchg
sbb
fnstsw
cltd
jge
and
cltd
mov
testb
aaa
sub
jne
push
adc
jnp
pop
ret
add
dec
jp
mov
inc
xchg
sub
rolb
pop
or
js
or
lock
mov
imul
mov
xorb
sahf
pop
addr16
sti
sub
ljmp
sahf
fisttpll
adc
nop
push
fcmovb
xor
and
cmp
xchg
cmp
movl
aam
popa
aad
dec
outsb
adc
dec
les
xchg
in
mov
cld
iret
push
pop
insl
and
jb
and
jg
push
xchg
ret
inc
mov
sti
cmc
pop
mov
cmp
sbb
cmp
jp
add
into
and
das
adc
xchg
aad
data16
sbb
or
jo
push
mov
ljmp
xchg
mov
inc
fdivrs
adc
xchg
je
inc
and
nop
mov
in
and
stos
movsl
shlb
inc
or
inc
cld
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
xchg
aam
jne
xchg
in
sub
je
jle
jle
pop
jg
jle
popf
scas
cwtl
sarb
cmp
aaa
icebp
movntq
out
inc
mov
mov
push
insl
add
add
insb
dec
popf
fisubl
in
out
cmp
int3
xchg
shl
and
and
scas
out
dec
push
std
mov
or
xchg
push
iret
or
sbb
fs
mov
dec
lds
pushf
or
xchg
push
sub
shrl
mov
leave
outsl
pop
int3
arpl
lock
insb
xchg
adc
scas
mov
add
addr16
aas
pop
adc
xor
and
stc
xchg
pop
sbb
imul
or
sbb
sbb
lret
insl
push
xchg
sub
mov
sub
rorl
jne
movsl
push
ficoms
sbb
nop
bound
mov
xor
or
enter
dec
std
or
stos
and
test
mov
inc
xor
or
inc
das
mov
mov
jmp
enter
pop
into
mov
xchg
cmpsb
sbb
adc
cmpsl
loop
arpl
or
insl
dec
call
and
xor
sbb
xchg
fcoml
sub
pop
cmp
outsl
andb
or
or
in
or
stos
outsl
add
adc
push
and
sti
sbb
push
pop
inc
pop
cld
pop
imulb
test
push
sub
lahf
xchg
push
sub
sub
sahf
lock
gs
pop
mov
lods
push
leave
popa
adc
pushf
aad
lcall
arpl
into
push
ret
scas
fadds
ja
or
push
pop
cwtl
sarb
and
xor
std
ret
jl
jae
mov
xorl
sub
lcall
push
lods
in
hlt
jg
daa
and
scas
cwtl
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
inc
mov
pop
push
outsb
outsl
stos
cmc
xlat
dec
sbbl
jle
mov
repnz
inc
aaa
mov
mov
sarb
in
ret
test
xor
xchg
popa
and
imul
pusha
pop
inc
shll
xor
jle
std
dec
mov
jne
dec
rolb
push
cld
pop
inc
xor
aam
xor
nop
jo
arpl
in
gs
xchg
test
push
pop
jae
stos
jl
xchg
jb
test
cmpsb
ret
push
mov
into
or
jp
ljmp
pop
icebp
int
movsb
jnp
repnz
das
movsb
sbb
fstpt
mov
andb
add
das
call
pop
adc
cwtl
adc
scas
jae
add
push
xchg
cvttps2pi
jae
jae
lea
mov
xchg
mov
hlt
stos
mov
pop
aam
stos
in
inc
sti
popf
movsl
adc
es
sub
leave
dec
xchg
mov
into
inc
push
pop
out
mov
jge
mov
mov
js
xchg
jo
mov
mov
clc
nop
fwait
and
pop
xchg
out
push
jae
sub
mov
xor
jecxz
mov
push
cmpsl
add
inc
setae
in
out
inc
sarb
in
cmp
sub
jecxz
xchg
pop
inc
mov
in
scas
sub
adc
ss
xor
lret
and
xlat
mov
lret
ret
push
mov
jno
pop
pop
add
mov
test
sbb
pop
mov
repnz
outsl
jne
loop
mov
mov
push
and
movsl
inc
sbb
ret
lcall
push
push
mov
pop
outsl
pop
add
xchg
sbb
out
pop
pop
repnz
add
sub
or
mov
dec
sub
add
add
cmp
cltd
int
jno
ja
loope
std
sahf
out
inc
pop
jle
pop
jg
jle
push
pusha
call
shrb
ds
std
mov
inc
or
inc
in
and
add
cld
adc
sarl
adc
scas
mov
dec
xor
stos
and
jne
pop
lods
icebp
das
or
icebp
int
dec
xchg
lahf
out
addr16
add
or
lret
pop
xchg
shlb
mov
add
out
lods
imul
frstor
jg
inc
push
push
xchg
stos
icebp
lret
push
enter
add
mov
cmc
add
scas
fstl
int3
shlb
stos
xor
fnstsw
fmull
adc
int3
push
scas
mov
lea
mov
fnstenv
sahf
sub
cmpsl
jbe
je
jb
mov
mov
adc
xchg
test
int3
cmp
mov
add
lods
sarl
xchg
fnsave
cwtl
cmp
push
sub
enter
cmp
not
inc
inc
mov
dec
mov
outsl
xor
mov
popa
mov
jecxz
xchg
popa
cmpsb
fwait
inc
pop
fcom
imul
cmp
cltd
sbb
sbb
lret
xchg
pop
xor
push
adc
or
mov
mov
push
outsb
cmp
adc
push
mov
pop
insl
in
inc
and
add
leave
mov
jno
in
mov
pop
mov
lods
outsl
idivb
cltd
lock
sbb
es
or
into
or
movsl
jg
jno
jns
lea
jae
es
imul
dec
dec
aam
xor
mov
pop
sub
fldz
fistl
cmc
jno
in
mov
iret
test
mov
sbb
xorl
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
jmp
ljmp
popa
cmc
xchg
fcom
and
mov
jg
jle
cmpsl
shl
pop
dec
jmp
imul
hlt
imul
sub
push
sbb
cmp
xor
jl
pop
push
out
mov
addl
jns
and
in
pop
je
jg
add
xchg
enter
call
in
pop
repz
loope
das
jnp
mov
jo
movsl
dec
jge
out
pop
imul
arpl
dec
sbb
stos
movsb
testl
movsb
in
jle
xchg
js
dec
push
inc
push
push
test
fcmove
pop
pop
stos
sbb
cmp
gs
lds
adc
xchg
fwait
sahf
fadd
push
jle
pop
and
mov
mov
ljmp
push
incl
cmp
fucomip
xchg
shll
in
and
cmp
in
mov
mov
or
pop
dec
cmp
enter
cmpsb
mov
cltd
sti
sti
jns
sub
pop
fmulp
pop
movsb
stos
mov
adcb
pop
es
mov
jns
pushf
aam
pop
inc
inc
dec
cli
movsl
cli
xor
sub
sbb
jge
cmp
xchg
mov
dec
pop
in
test
dec
mov
loop
mov
mov
imul
mov
add
repz
fldt
or
out
int
notl
dec
jge
push
xor
add
outsl
push
push
fs
mov
xchg
js
push
jp
orl
mov
push
xor
inc
fdivs
mov
sub
add
fwait
cmp
push
orl
int3
cmpsb
ljmp
lds
icebp
pop
aad
mov
xchg
or
push
sbb
mov
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
stos
inc
push
dec
add
add
add
add
cmp
dec
add
ret
cmp
add
add
add
add
add
add
add
add
add
add
pop
xor
add
add
fs
add
sub
add
add
add
jb
insl
pop
dec
outsl
imul
ja
imul
fs
gs
outsl
popa
jb
dec
gs
inc
pop
inc
pop
inc
cmp
add
add
add
xor
add
add
add
and
add
add
add
aam
add
je
add
mov
add
nop
aaa
add
insb
inc
add
jo
add
dec
cmp
add
dec
add
sub
add
adc
add
inc
dec
add
hlt
xor
add
add
bound
add
add
xor
add
inc
cmp
add
add
add
add
push
add
jl
add
xchg
add
xchg
cmp
add
add
mov
add
les
add
into
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
xor
add
cmp
add
dec
cmp
add
add
pop
cmp
add
add
add
test
add
mov
add
cwtl
cmp
add
cmp
add
add
enter
fdivrl
add
out
add
repnz
add
cmp
add
cmp
add
cmp
add
add
add
cmp
add
add
pop
cmp
add
add
je
add
nop
cmp
add
add
int3
cmp
add
cmp
add
cmp
add
cmp
add
add
sbb
add
cmp
add
cmp
add
add
pop
cmp
add
add
js
add
xchg
cmp
add
add
ret
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
sub
add
cmp
add
pop
cmp
add
cmpb
add
cmp
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
insb
add
jl
add
mov
add
cwtl
add
lods
add
mov
add
fidivrl
add
lock
add
push
aas
add
sbb
add
sub
add
cmp
add
dec
aas
add
bound
add
outsb
aas
add
js
add
xchg
add
xchg
aas
add
movsb
aas
add
mov
add
enter
fidivrl
add
in
aas
add
clc
aas
add
or
add
inc
add
xor
add
dec
inc
add
pop
inc
add
fs
add
je
add
addb
cwtl
inc
add
lods
inc
add
mov
inc
add
loopne
add
lock
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
push
inc
add
pusha
inc
add
jo
add
test
add
inc
add
scas
inc
add
mov
inc
add
call
inc
add
push
inc
add
sbb
add
inc
add
cmp
add
add
pusha
inc
add
add
add
addb
cwtl
inc
add
scas
inc
add
mov
inc
add
faddl
add
inc
add
clc
inc
add
push
inc
add
sbb
add
add
xor
add
add
push
inc
add
pop
inc
add
outsb
inc
add
test
add
add
mov
inc
add
fiaddl
add
inc
add
clc
inc
add
or
adc
add
and
xor
add
inc
inc
add
pop
inc
add
inc
add
jbe
add
mov
sahf
inc
add
scas
inc
add
movb
inc
add
in
inc
add
clc
inc
add
or
add
inc
add
sub
add
inc
add
inc
inc
add
dec
inc
add
pop
inc
add
add
add
jbe
add
mov
add
inc
add
lret
add
inc
add
in
inc
add
add
add
inc
add
sub
add
inc
add
dec
inc
add
pusha
inc
add
insb
inc
add
addb
xchg
inc
add
mov
inc
add
ret
add
inc
add
call
inc
add
incb
add
inc
add
and
add
cmp
add
add
add
push
add
jle
add
xchg
inc
add
mov
inc
add
int3
inc
add
faddl
add
inc
add
push
dec
add
sbb
add
dec
add
cmp
add
add
push
dec
add
outsb
dec
add
mov
add
dec
add
mov
add
rorb
dec
add
add
add
lock
add
decb
add
dec
add
push
dec
add
cs
add
add
add
push
dec
add
add
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
arpl
insb
outsl
arpl
add
data16
outsl
outsl
jb
push
add
arpl
push
add
outsl
ja
outsl
ja
jb
add
gs
popa
jo
pop
je
jo
add
in
jae
jb
push
add
jo
pop
insw
outsl
fs
int3
add
outsl
jb
add
js
imul
imul
popa
add
fwait
add
jo
pop
arpl
insl
outsl
fs
sub
arpl
arpl
add
data16
add
or
je
ja
jo
gs
add
data16
je
add
outsb
jbe
add
arpl
imul
add
jo
imul
add
je
push
add
je
add
mov
outsl
ja
add
test
jae
popa
arpl
add
add
outsl
insb
outsl
ja
jb
fildl
pop
popa
insl
jae
pop
gs
je
add
add
imul
add
outsb
imul
add
jae
bound
gs
add
push
add
arpl
inc
imul
jae
jb
arpl
add
add
insl
outsl
jbe
add
cld
add
jb
outsl
insb
add
and
insb
outsb
add
and
pop
gs
je
call
js
je
add
jo
arpl
call
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
repnz
jb
arpl
add
imul
add
ja
je
jo
add
mov
insl
popa
insb
insb
outsl
arpl
add
pop
pop
addr16
popa
imul
add
ja
arpl
data16
push
inc
push
push
cs
insb
add
xor
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
outsb
fs
imul
inc
add
dec
imul
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
jne
insb
push
arpl
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
imul
ja
jb
insl
push
outsl
imul
push
imul
ja
add
fs
outsb
jne
add
add
popa
bound
arpl
insb
insb
inc
popa
jb
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
outsb
fs
imul
rolb
dec
gs
popa
addr16
outsl
js
js
add
outsb
fs
gs
popa
addr16
add
outsb
imul
push
outsl
imul
inc
gs
imul
add
outsl
ja
arpl
insb
insb
inc
popa
jb
mov
dec
outsl
popa
fs
insl
popa
addr16
add
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
add
jo
imul
gs
add
sbb
push
gs
outsl
jbe
push
jb
jo
add
gs
jo
popa
je
push
outsb
add
add
push
imul
popa
jae
inc
add
add
je
insb
addr16
je
insl
push
gs
inc
add
ja
outsb
jne
popa
jb
sub
inc
gs
outsb
jne
repnz
jae
dec
gs
popa
addr16
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
push
imul
push
arpl
push
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
jo
imul
imul
inc
push
js
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
popa
jb
outsl
ja
jb
jne
push
add
insl
add
je
imul
outsb
addr16
add
mov
push
popa
imul
jne
dec
fs
add
movl
imul
gs
js
add
cmp
arpl
popa
imul
outsb
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
into
add
jae
popa
addr16
outsl
js
add
add
je
gs
popa
addr16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
je
outsb
jne
je
imul
add
fs
outsb
jne
add
gs
jns
je
insl
dec
gs
imul
push
outsb
fs
gs
popa
addr16
add
aaa
add
je
outsb
jne
je
je
add
mov
inc
jb
ja
arpl
add
xchg
add
je
outsl
jns
jne
jae
jb
add
inc
fs
jae
push
imul
arpl
pop
add
je
jns
inc
outsl
insb
outsl
jb
jle
dec
imul
jne
je
insl
add
or
inc
jo
outsb
fs
outsb
jne
add
inc
push
outsb
jne
popa
imul
add
push
je
imul
push
arpl
insb
insb
push
imul
xor
inc
push
gs
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
sgdtl
je
insb
addr16
je
insl
add
dec
add
je
outsb
jne
je
insl
inc
imul
or
inc
gs
gs
je
jo
imul
inc
add
je
popa
jb
outsb
je
movb
outsb
fs
popa
jae
add
inc
jb
popa
je
dec
outsb
jne
add
add
je
popa
jb
je
outsl
jae
sub
push
outsb
fs
gs
popa
addr16
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
add
je
outsl
outsb
imul
push
add
add
jo
imul
gs
add
out
inc
jb
insl
gs
arpl
add
popa
bound
outsb
jne
je
insl
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
mov
outsl
ja
jb
insl
push
outsl
imul
jb
ja
outsb
imul
arpl
and
push
arpl
insb
insb
push
imul
add
pop
add
je
arpl
add
je
insb
addr16
je
insl
dec
outsb
je
or
imul
add
pop
add
gs
je
dec
arpl
dec
outsb
imul
dec
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
popa
jb
outsl
dec
gs
inc
add
sub
fs
outsl
je
data16
gs
popa
addr16
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
push
jb
outsl
jb
add
push
gs
imul
js
inc
add
add
popa
jb
outsl
ja
jb
add
xchg
dec
outsb
jae
jb
dec
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
gs
imul
add
push
gs
arpl
jo
jns
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
jg
push
push
outsb
outsl
ja
add
inc
push
dec
outsb
jne
add
add
insl
push
outsl
inc
push
add
push
jo
popa
push
add
xchg
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
imul
popa
jae
push
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
mov
jb
outsb
je
inc
add
push
gs
imul
outsb
addr16
add
test
push
ja
je
push
imul
ja
add
add
jo
imul
add
inc
imul
jae
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
jne
inc
push
imul
add
inc
push
xor
cs
insb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
push
imul
iret
add
insb
arpl
insb
gs
add
popa
je
inc
dec
inc
imul
add
jae
jp
push
popa
insb
gs
add
gs
outsl
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
imul
inc
gs
gs
inc
inc
add
aad
inc
js
push
gs
dec
jne
push
add
popa
je
inc
imul
add
arpl
jae
bound
int
inc
jae
popa
jo
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
jae
je
imul
dec
jb
inc
js
and
inc
gs
imul
jae
mov
inc
gs
gs
dec
bound
arpl
mov
popa
je
dec
popa
je
push
push
inc
jb
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
addl
imul
add
add
je
imul
jae
lods
add
insb
jns
gs
gs
add
add
je
bound
je
jb
arpl
add
jae
je
outsb
add
push
imul
add
popa
je
push
outsl
insb
imul
add
push
gs
dec
gs
imul
inc
gs
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
dec
inc
push
add
add
insb
arpl
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
add
je
jb
jae
dec
jb
inc
js
into
add
insb
arpl
push
arpl
addl
gs
gs
inc
js
outsb
je
outsl
imul
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
imul
add
je
je
arpl
bound
arpl
cmp
inc
gs
jne
jb
outsb
je
bound
arpl
jno
inc
gs
dec
push
xor
stos
add
gs
je
push
arpl
outsb
add
push
je
jb
inc
outsl
arpl
jbe
inc
imul
add
imul
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
inc
imul
je
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
gs
gs
inc
imul
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
dec
popa
insl
gs
imul
add
gs
jb
outsl
jb
outsl
fs
pop
add
je
gs
jo
imul
add
cmc
add
gs
je
push
popa
imul
insl
gs
add
pop
add
outsb
fs
imul
gs
add
test
dec
gs
jo
outsl
arpl
add
jbe
inc
imul
jns
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
adc
dec
outsl
arpl
push
imul
gs
push
popa
je
dec
popa
insl
gs
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
mov
je
inc
imul
outsl
bound
push
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
push
add
jmp
inc
gs
imul
bound
gs
js
add
mov
gs
jbe
outsb
je
add
push
insb
gs
js
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
inc
jbe
outsb
je
add
push
add
je
jns
je
insl
inc
imul
jns
add
push
gs
gs
outsl
outsb
imul
imul
add
fs
imul
js
add
pop
add
insb
jae
gs
popa
insb
jne
add
add
inc
popa
fs
gs
fs
je
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
gs
jae
jb
gs
jne
je
popa
outsb
addr16
inc
add
adc
dec
outsl
arpl
dec
outsl
arpl
mov
jbe
jb
inc
gs
jne
je
outsl
arpl
add
incb
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loopne
inc
jb
popa
je
dec
jne
gs
add
adc
inc
imul
outsl
dec
inc
dec
add
xor
inc
jae
popa
jo
inc
outsl
insl
insl
inc
jne
arpl
outsb
add
ss
gs
push
inc
outsl
outsb
je
js
add
sub
dec
outsl
jbe
inc
imul
add
je
push
dec
outsl
arpl
add
push
outsb
insb
outsl
arpl
imul
fs
je
insl
push
add
push
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
mov
popa
imul
je
jo
gs
bound
arpl
add
inc
gs
gs
jo
popa
je
inc
add
out
add
je
imul
movb
je
arpl
imul
outsl
bound
inc
jb
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
dec
jo
outsb
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
imul
js
add
add
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
or
inc
gs
imul
push
add
add
je
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
inc
add
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
push
dec
push
jne
mov
inc
add
dec
inc
add
or
dec
ja
cmp
dec
jb
xor
dec
ss
jnp
sub
dec
sub
push
pop
push
xor
dec
cmp
dec
cmp
dec
jb
xor
dec
ss
popa
dec
sub
dec
sub
bound
arpl
dec
jno
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
jb
jae
addl
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
sbbb
setae
nop
jo
jno
aas
dec
jbe
cmp
dec
ds
dec
dec
xor
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
mov
add
aas
dec
pusha
dec
cmp
dec
cmp
dec
pop
dec
xor
dec
xor
mov
ret
add
jo
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
ret
psrlq
shlb
jno
aas
dec
pusha
dec
cmp
dec
cmp
dec
dec
dec
xor
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
cmp
dec
cmp
dec
cmp
dec
push
loop
jecxz
repz
jo
jno
jo
jno
ds
jg
cmp
dec
cmp
push
ds
dec
dec
xor
dec
xor
add
adc
adc
jno
aas
dec
add
xchg
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
mov
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
test
mov
add
or
inc
add
fstp
inc
inc
add
inc
inc
mov
jne
mov
incb
mov
dec
inc
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
and
pushf
clc
ljmp
add
imul
pushf
clc
popf
jmp
add
jbe
inc
add
adc
fsubs
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
jae
insb
popa
imul
dec
dec
inc
inc
insb
imul
imul
insb
jae
push
insb
imul
imul
imul
jae
imul
imul
dec
dec
inc
inc
push
outsl
imul
push
fs
imul
insb
imul
push
jne
jns
imul
jne
fs
push
data16
add
add
add
xor
inc
add
pop
dec
dec
dec
dec
dec
pop
dec
push
dec
or
dec
add
push
dec
pop
dec
push
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
push
dec
push
dec
inc
dec
pop
dec
dec
dec
push
dec
cmp
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jno
mov
outsb
jae
bound
add
mov
mov
inc
aaa
inc
jle
jno
mov
imul
inc
xlat
leave
xchg
inc
adc
jge
faddp
leave
xchg
fs
dec
leave
sbb
jno
rorb
add
shlb
xor
inc
push
outsl
push
push
inc
add
dec
inc
add
add
imul
pop
outsb
jbe
jns
push
imul
je
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
in
jnp
jnp
cmc
pushl
sar
fld1
insl
test
mov
add
cmc
add
add
xor
cmpsl
loop
mov
lods
cli
out
hlt
cmc
xorl
fdivrs
sbb
cld
push
das
cmp
sub
mov
mov
mov
add
push
xor
iret
dec
aam
mov
xchg
cs
xchg
xchg
int3
xchg
stc
scas
mov
mov
out
ljmp
lods
cmpsl
or
nop
ror
cmp
stos
gs
xor
insb
add
enter
xor
mov
in
aad
jl
cmc
out
pop
jnp
xor
daa
or
dec
pop
daa
sub
xchg
inc
jne
inc
mov
xchg
sbb
sub
cmpb
aad
jge
dec
jbe
inc
xorb
mov
rcrb
enter
xor
pushf
out
repz
ret
mov
mov
sub
mov
cmp
fildl
add
pop
ficoml
in
jle
cs
pop
ret
bound
add
add
pop
or
je
push
cmp
or
ret
popa
mov
gs
xlat
xchg
mov
and
dec
fistpll
jae
jge
inc
fmuls
mov
loop
or
std
fsubp
mov
mov
outsl
lahf
call
sar
enter
out
scas
stos
dec
lea
push
jb
push
aas
push
jbe
xor
in
sub
sbb
shll
xchg
xor
mov
cmpb
xchg
movsb
dec
mov
cltd
in
mov
ds
ret
jge
push
push
ds
pushf
mov
mov
jl
mov
jb
cmp
or
sti
push
aam
xor
icebp
jne
xor
test
sbb
mov
push
adc
les
sbb
cmp
loope
add
add
adc
mov
adc
loop
jbe
add
cmc
add
add
aas
mov
fs
dec
jo
dec
bound
mov
dec
sahf
test
stc
mov
inc
sbb
adc
lea
xchg
push
test
dec
int3
mov
add
sbb
sbb
add
jo
inc
xchg
sbb
mov
out
jp
cmp
in
cmpb
sub
mov
pop
pop
xchg
fistpll
pusha
popf
cmpsb
pop
jno
jne
jbe
jg
rcrb
push
jae
jle
addr16
dec
mov
dec
xor
add
lret
dec
or
inc
xor
scas
movsl
pop
dec
enter
xchg
xor
imul
dec
ror
popa
stos
sbb
addr16
fcomp
jns
inc
lret
dec
ss
and
jbe
pop
inc
in
sbb
int
push
xor
and
fistpll
xor
add
int3
and
loop
enter
add
subl
stos
dec
out
data16
cmc
add
add
sub
movsb
mov
gs
pop
sub
dec
mov
xlat
jp
fcmove
nop
cltd
popf
or
fwait
sbb
mov
add
mov
sub
xor
mov
lret
sbb
out
dec
test
imul
leave
std
shl
mov
lret
inc
and
mov
int
ljmp
jns
out
cltd
fs
shl
mov
jp
push
aaa
xor
inc
lret
test
mov
imul
scas
into
inc
es
mov
dec
push
stos
icebp
inc
jg
push
ret
pop
in
mov
imul
mov
or
push
das
subl
les
xchg
neg
cmc
outsb
testb
rcl
mov
imul
popa
or
mov
mov
add
add
inc
or
leave
bnd
outsb
fdivr
xchg
add
cmc
add
add
or
sub
sub
pop
cmpsb
xchg
jl
out
sbb
xor
or
nop
sarb
sub
or
fdivrl
and
inc
mov
mov
orb
sahf
jb
andb
pop
inc
insb
stos
imul
fs
or
cwtl
cmp
test
jle
and
aaa
jns
into
sub
cltd
mov
pusha
pop
push
mov
repnz
adc
fwait
insb
fmul
xor
or
popf
lea
jge
fwait
push
sbb
mov
rorb
pop
add
scas
imul
mov
xchg
and
xor
and
ret
dec
rol
lret
sub
or
push
rorb
cmp
mov
out
into
mov
and
add
cmc
insl
cmc
out
lcall
sub
testl
add
add
add
lret
rep
sub
imul
mov
adc
in
or
movsb
push
push
call
aaa
in
test
aad
xchg
clc
cltd
sti
cmp
shlw
andb
add
gs
or
inc
pop
jecxz
aad
inc
in
mov
js
popf
sti
xchg
push
mov
mov
pop
cmc
nop
nop
inc
je
mov
inc
lds
cwtl
jecxz
fs
adc
lcall
les
imul
fnstcw
pop
lret
lret
push
in
dec
mov
xor
es
push
fucomi
jp
xchg
sub
enter
mov
cli
ss
push
fwait
sahf
fs
test
xchg
movb
sbb
fidivl
lret
fstl
xchg
xchg
mov
push
dec
pop
or
or
push
mov
pusha
cli
fstps
add
add
add
outsl
jle
dec
xchg
call
das
dec
jmp
add
add
add
lods
or
out
pushf
mov
shll
jae
mov
adc
stc
push
mull
dec
cmp
test
bound
adc
stos
cld
daa
outsb
rclb
push
aaa
jmp
shrb
daa
jns
mov
rorl
mov
pop
inc
pop
dec
icebp
mov
mov
pop
mov
push
popa
hlt
hlt
fs
pop
adc
repnz
leave
xchg
stos
pusha
sbb
mov
xchg
hlt
jbe
fdivl
or
jmp
je
xorb
je
jns
mov
inc
out
mov
ljmp
push
pop
jno
or
insb
sbb
fldenv
es
lods
sub
jno
leave
cmpsb
mov
clc
sub
cli
test
jns
stc
sub
pop
shlb
xor
out
aam
or
jl
sarb
dec
xchg
ja
add
or
and
scas
sti
jle
inc
sbb
lahf
aas
in
add
cmc
add
add
test
mov
insb
popf
sahf
dec
jmp
ret
dec
mov
fadds
nop
adc
stos
adc
add
xorb
cmp
mulb
mov
test
xchg
arpl
mov
jb
mov
or
rcll
sub
or
sarb
orb
push
les
ljmp
call
ljmp
lds
xor
fwait
mov
xchg
mov
fincstp
pop
cs
pop
lods
movb
fimull
ljmp
sbb
movsl
sub
stc
jecxz
mov
lods
xchg
xchg
xor
loop
sbb
data16
sbb
and
or
imul
jbe
or
or
adc
mov
jne
rcll
push
mov
push
adc
stos
mov
lahf
fnstcw
ss
lahf
stc
inc
jb
lahf
push
mov
int
in
add
cmc
add
add
imul
outsl
les
mov
sbb
dec
adc
xor
dec
adc
mov
and
xorl
outsl
cs
idivl
xchg
and
insl
mov
imul
mov
xor
inc
xchg
fisubrs
out
sub
stc
add
adc
jbe
and
xlat
lods
xchg
ret
mov
fwait
dec
fldcw
cmp
cmp
neg
aam
in
in
mov
lds
push
stc
pop
cmp
dec
mov
out
lahf
cmp
cmp
jl
icebp
ja
pop
fbstp
inc
mov
add
data16
enter
jmp
enter
in
pop
pop
lret
call
jl
push
fs
jecxz
push
and
xor
push
jmp
jo
xor
insb
or
aas
test
push
test
mov
xchg
add
add
push
jl
jle
insb
pop
decl
fstpl
aam
out
add
cmc
add
add
and
jnp
push
sbb
add
sbb
jmp
mov
shll
data16
adc
fwait
in
cmpsb
xchg
shll
sbb
adc
pop
movsl
sub
and
aaa
or
pop
xor
nop
inc
loopne
invd
test
das
je
push
mov
xchg
and
xor
ja
scas
nop
and
imul
addr16
ret
sub
mov
aas
repnz
lock
cmp
rclb
push
mov
mov
outsb
lea
movsl
dec
jns
mov
in
xchg
push
mov
popf
pop
dec
outsb
cmc
iret
xor
adc
aas
es
cld
cmp
gs
pusha
jae
cwtl
mov
or
pop
xor
jp
inc
jecxz
add
scas
push
addr16
add
add
mov
adc
pop
ljmp
push
out
add
cmc
add
add
pop
sbb
clc
push
lret
inc
mov
in
stc
xchg
fidivrs
scas
jno
popa
push
jle,pn
sti
cmpsb
mov
in
or
dec
fimuls
call
jle
cltd
pushf
lret
pushf
pop
pop
or
hlt
push
cmp
outsb
xor
dec
sub
adc
push
push
imul
sub
inc
clc
xchg
in
inc
pop
add
mov
mov
adc
pop
call
add
fsubrs
pop
das
jns
inc
das
dec
adc
push
push
js
call
rcr
repz
enter
ljmp
add
and
enter
int3
cmp
sbb
cli
xchg
repnz
bound
lret
out
mov
imul
repz
adc
adc
aad
xchg
jae
adc
mov
jl
in
bound
sahf
dec
xor
add
aaa
data16
jne
mov
gs
inc
arpl
adc
add
cmc
add
add
cmp
ret
xchg
ficomps
pop
stos
cwtl
sub
arpl
cmp
cmp
pop
push
lock
mov
and
sahf
imul
daa
inc
icebp
lods
repz
je
adc
xor
sti
push
popa
out
cmp
inc
iret
mov
dec
dec
into
repnz
imull
in
pop
and
in
imul
xchg
dec
adc
cs
scas
clc
lret
cmp
stos
hlt
or
sub
add
pop
bound
rclb
push
cmp
je
out
xchg
jle
sbb
aaa
lock
lea
enter
inc
push
add
enter
dec
repnz
fwait
jnp
inc
scas
inc
sahf
jne
xor
sbb
jl
in
fs
add
mov
fistpll
inc
lock
js
push
mov
scas
fimuls
add
add
add
jnp
sti
xchg
rol
imul
add
cmc
add
add
nop
dec
cmp
lods
paddsw
cs
into
repz
pop
mov
aaa
stc
lods
push
repz
mov
scas
clc
sub
les
xchg
mov
lahf
jnp
ss
sbb
aas
repz
push
adc
inc
lret
test
mov
test
sahf
xchg
inc
push
popa
das
lcall
dec
and
push
mov
cmp
dec
fwait
addr16
fs
sub
push
cmpsb
sub
cmp
fnstsw
mov
jae
clc
ret
test
inc
sahf
mov
inc
int
mov
test
pop
xchg
lahf
into
dec
mov
enter
sub
xor
push
xchg
jg
fsubs
pop
pusha
insl
sub
rcr
push
xor
mov
faddl
fistpll
mov
test
add
nopl
les
jns
jno
adc
add
sub
pop
sarl
test
sub
mov
std
icebp
add
cmc
add
add
lcall
cmc
outsl
lea
in
inc
cmc
add
mov
mov
push
add
xor
or
aam
sbb
xorl
lods
jp
or
mov
jl
push
cmc
pop
outsl
icebp
out
adc
into
mov
push
mov
and
aad
ss
int
or
repnz
lods
xchg
inc
adc
dec
xor
mov
mov
dec
xor
mov
lock
dec
mov
enter
jae
sub
cmp
out
pushf
call
pop
jle
fistpll
mov
xchg
dec
jecxz
sahf
fs
mov
push
or
or
and
out
cmp
stc
add
call
in
mov
pop
into
je
pusha
xchg
das
mov
add
adc
add
insl
lock
std
repz
xchg
scas
fstl
repnz
cmc
add
add
test
push
int3
sbb
ficomps
or
ficomps
dec
int
cmp
cmp
call
call
rclb
cmp
pop
insb
mov
inc
xor
adc
mov
je
push
pushf
inc
dec
iret
jae
cltd
push
xchg
mov
lahf
addb
push
lock
or
mov
cmp
dec
rclb
aam
inc
scas
call
push
jo
addr16
dec
sub
test
jnp
sub
loopne
jne
sub
movsl
xchg
fs
inc
out
loope
lea
ljmp
sti
sub
popf
and
push
dec
int3
inc
out
pop
pop
fiaddl
popa
inc
mulps
sbb
lret
push
test
lock
inc
in
ss
data16
shrw
xlat
jge
roll
adc
mov
adc
add
add
lock
cmp
or
xor
mov
repz
cmc
add
add
mov
shrl
push
push
pop
movb
mov
ret
je
mov
dec
sahf
push
mov
pusha
mov
mov
enter
nop
inc
cltd
push
in
mov
cmp
repz
notl
fdivrs
mov
iret
cmp
leave
sti
push
push
adc
mov
mov
push
shl
xchg
rcrb
jbe
jno
out
pop
add
rcrb
cmp
inc
or
shll
fsubr
pop
jmp
mov
mov
mov
cmp
and
repz
add
shll
test
leave
add
lea
xlat
dec
dec
fs
ss
es
push
outsl
mov
dec
jno
cwtl
notl
loope
lahf
xchg
es
movb
xor
dec
test
insl
lcall
lret
sbb
aad
push
int
fdiv
add
cmc
add
add
insl
push
sub
dec
test
or
xchg
add
out
and
jmp
arpl
inc
into
jno
repz
dec
push
push
aam
ja
jl
lcall
inc
cltd
xor
out
dec
pusha
mov
shlb
jnp
jbe
sbb
jl
adc
xor
inc
push
push
mov
int3
pop
int
ret
pop
mov
sub
cli
sub
loop
inc
dec
leave
cmp
mov
aaa
and
daa
daa
pop
inc
and
insb
out
add
imul
scas
shlb
outsb
mov
das
loopne
sbb
jno
pushf
adc
test
mov
sub
stc
push
sbb
push
cmp
xchg
mov
mov
lods
and
add
pop
lahf
pop
pop
lahf
icebp
cld
cmp
imul
add
xchg
in
mov
pushl
comiss
cmc
add
cmc
add
add
in
inc
cmpsb
adc
xor
cwtl
dec
dec
rclw
mov
mov
mov
xchg
sbb
dec
add
xor
dec
cmpsb
xor
ds
ja
ljmp
push
adc
xchg
cmp
fst
mov
cmp
mov
out
mov
jne
pusha
movsl
sbb
pop
decl
or
push
push
ja
into
fucomp
pop
lock
push
out
jp
fdivr
testl
das
inc
push
shll
jg
or
sti
pop
test
pop
jecxz
jb
orb
sti
cld
repnz
pop
push
add
clc
repnz
push
rep
stos
dec
jmp
loope
lcall
xchg
adc
xchg
in
xor
icebp
adc
fidivrl
cli
scas
insb
add
jne
cltd
popa
data16
push
add
add
sub
in
negl
push
inc
push
xor
sbb
mov
testb
cmc
add
add
xlat
sbb
aam
pop
cmp
add
cmp
cmp
pop
dec
cmp
jle
inc
adcl
cmp
nop
aam
mov
js
pusha
mov
xorb
sti
dec
addr16
sub
cwtl
int
xor
jnp
pushf
jp
sub
in
cmp
mov
push
mov
stc
aam
jecxz
aaa
jp
or
es
outsb
jmp
inc
enter
adc
cmp
arpl
mov
mov
cwtl
or
adc
stos
sahf
pop
push
loop
or
fdiv
iret
xor
aam
xchg
sarl
cmpsl
add
cld
jle
jmp
rcr
mov
dec
mov
or
pop
cld
cmp
daa
or
inc
pusha
add
aad
lds
sub
add
add
mov
nop
fmull
lods
mov
add
add
dec
sti
je
cmc
pop
and
mov
inc
fs
outsl
mov
mov
mov
shll
ror
nop
les
push
and
or
jp
xor
lods
sarl
div
push
outsl
ret
cltd
call
aad
lds
fisttps
pop
xlat
hlt
pop
inc
cs
test
lds
lcall
iret
adc
xchg
dec
iret
xor
mov
mov
pop
and
lahf
adc
mov
in
scas
inc
call
mov
push
or
lahf
push
scas
mov
cmp
mov
lret
inc
sbb
shl
imul
sbb
and
inc
popf
ret
mov
xor
push
cld
or
mov
mov
cmp
push
in
movsb
cmp
xor
mov
add
add
adc
push
add
adc
lods
in
mov
add
cmc
add
add
arpl
push
push
inc
movsb
jnp
out
shl
push
loop
pop
mov
inc
push
nop
xchg
pop
jae
mov
js
xchg
int3
push
divl
icebp
mov
xor
dec
jle
addr16
mov
sub
aam
jp
movsl
shll
or
dec
fcmovnbe
mov
movsl
inc
aad
xlat
push
arpl
in
sbb
pop
aam
stos
into
jecxz
lret
mov
sub
shll
inc
iret
lea
inc
adc
popa
xchg
popa
or
jns
add
pop
sbb
dec
mov
out
in
adc
adc
xchg
not
xor
mov
mov
fildl
lahf
jp
pushl
cmpsl
pop
lods
mov
xchg
loope
sahf
inc
push
arpl
push
sub
or
int3
inc
iret
mov
dec
add
add
repnz
add
pop
inc
xchg
pusha
push
movsl
stc
add
cmc
add
add
inc
cli
xor
jmp
lret
dec
mov
push
xchg
clc
nop
out
pop
in
xor
xor
mov
ret
in
and
xorb
jge
js
fcom
xchg
sahf
imul
and
stos
push
dec
enter
jne
in
dec
repz
push
mov
xlat
jnp
divl
lret
inc
adc
xchg
and
lock
xchg
sbb
xchg
lods
sbb
mov
xor
sub
fwait
xor
lds
fbstp
push
pop
insl
call
jl
xor
inc
jb
pushf
dec
jmp
sbb
pop
jns
and
lock
jbe
mov
fisttpll
imull
xchg
xor
xchg
xchg
add
sbb
mov
mov
jl
aaa
cli
inc
in
mov
mov
cwtl
xor
mov
add
pop
mov
push
decl
cld
pushf
cmpsl
loope
cli
add
cmc
add
add
sub
jo
cmp
arpl
ret
scas
fidivl
addr16
sbb
dec
outsb
repz
outsb
mov
sbb
sub
pop
mov
into
mov
mov
gs
iret
clc
mov
add
movsb
rcrb
inc
mov
sbb
mov
push
xor
es
add
push
mov
mov
cmp
or
xor
mov
inc
out
jl
loop
insl
mov
cmp
dec
xchg
mov
arpl
test
lods
je
jno
jns
lds
mov
in
aaa
js
or
fadds
aad
insb
inc
das
mov
repz
and
lock
mov
jl
push
lea
and
arpl
insb
das
push
ss
stc
pop
and
addl
lret
xchg
add
add
jmp
in
dec
dec
ret
sbb
pop
popf
sti
add
cmc
add
add
addr16
js
mov
aaa
in
dec
mov
dec
xor
jge
out
cltd
jmp
test
cmpsl
lahf
mov
clc
data16
mov
add
int3
in
push
pop
shr
inc
test
in
sub
jne
mov
pop
xchg
jmp
ret
leave
add
push
aad
es
add
mov
mov
mov
sbb
cli
jmp
inc
mov
popf
or
stos
movsb
push
movsl
xlat
aaa
dec
sbbb
and
aad
test
lods
jecxz
test
sub
xchg
cmc
hlt
lock
pop
jmp
js
jge
sbb
push
lods
dec
inc
xchg
pop
cld
xor
popa
xor
mov
pusha
aaa
pop
pop
jecxz
ss
xchg
cmp
rorb
cwtl
push
sub
fidivrs
jecxz
shll
shr
cwtl
inc
orb
pop
sahf
jb
mov
and
and
or
data16
es
test
add
cmc
add
add
jp
sub
dec
mov
fs
addb
xchg
addb
sahf
bound
xor
pop
mov
ret
les
ret
and
fistpll
shrl
jl
mov
push
sbb
pop
mov
inc
or
sub
popf
hlt
inc
out
test
int3
mov
adc
nop
or
jbe
push
xchg
and
into
aas
inc
cli
sub
xor
in
roll
loope
pop
cmc
in
icebp
stc
gs
out
enter
xchg
jno
dec
mov
push
outsl
dec
aaa
rcrb
mov
mov
mov
and
sti
and
and
xchg
ljmp
ljmp
inc
lods
xchg
jl
into
pop
xor
push
sub
data16
cltd
xchg
xchg
push
rorl
out
subl
repz
ror
lock
jnp
jmp
sbb
jmp
add
cmc
add
add
pop
pusha
sub
in
push
shll
inc
in
and
out
es
push
and
lret
mov
jl
hlt
xorb
push
cmp
sbb
das
fldt
adc
ret
int3
cmp
pusha
sbb
dec
in
daa
inc
cmp
dec
movsb
lock
sbb
idivb
xchg
push
cli
adc
jge
sub
push
jl
sub
in
bound
push
das
js
adc
and
test
mov
cltd
add
mov
jp
fmuls
nop
xchg
out
in
push
xor
jecxz
jle
xlat
push
repz
daa
dec
mov
popa
mov
push
push
mov
mov
loopne
pop
fistpll
sahf
or
test
aad
add
dec
pop
fs
sbb
adc
add
and
repz
fimuls
mov
scas
bound
add
cmc
add
add
in
out
aam
add
mov
jg
pop
sbb
lds
incl
lods
jne
cltd
jp
aaa
jae
push
ds
add
fs
icebp
lea
aad
cld
jp
xor
fwait
lock
icebp
sbb
mov
ss
outsl
std
rolb
dec
ds
dec
or
mov
dec
sbb
arpl
imul
jle
dec
lea
pop
ja
pop
shlb
inc
mov
sub
imull
jg
and
lcall
dec
movsb
cli
in
cs
scas
xor
shr
pushf
xchg
adc
jnp
xchg
fldenv
jne
insl
incb
lds
mov
mov
daa
movsl
push
ss
dec
addr16
or
test
sub
jecxz
movsb
mov
rcrl
rcll
jns
inc
adc
cwtl
and
addr16
xchg
fwait
add
add
out
xchg
jns
outsb
sbb
arpl
add
cmc
add
add
inc
sbb
inc
lret
addl
cltd
mov
je
xor
push
cmp
mov
mov
andl
stos
xorb
inc
mov
xchg
idivl
mov
ljmp
cltd
nop
dec
push
sbb
lock
out
mov
push
rcll
fimuls
je
mov
jo
push
iret
loope
rcll
xor
and
loopne
in
jmp
push
into
lcall
xor
jge
jne
fsubs
cmp
xor
ljmp
fcoms
movsb
mov
int3
inc
push
enter
mov
cmpsl
adc
mov
push
fcmovnu
pop
sbb
jb
cli
out
stos
jmp
cmp
out
movsl
push
pop
push
leave
mov
cmpsb
stos
push
xor
push
mov
mov
jle
add
shrl
cmc
scas
mov
mov
add
add
add
inc
ror
xchg
das
push
sbb
add
pop
xor
loop
and
lcall
in
jge
nop
pop
add
adc
lahf
jno
aad
mov
sub
pop
nop
jne
sbb
enter
movsl
jno
adc
jns
lret
xchg
pop
sub
add
outsb
xchg
js
pop
out
insb
nop
mov
xchg
pop
pop
xchg
cmp
sub
push
xchg
leave
or
out
jl
dec
mov
mov
pop
lahf
add
lret
hlt
push
sti
mov
dec
ror
cmp
lock
or
mov
cmp
mov
loopne
adc
mov
xchg
ret
adc
jno
xor
push
fcomps
aas
adc
imul
test
add
add
pusha
rorb
lea
sub
cmc
add
add
fstl
and
jae
pop
outsl
aad
cltd
mov
add
lods
rcr
pop
stos
xchg
add
mov
int
aaa
mov
stc
arpl
stos
stos
and
or
scas
pushf
jecxz
push
sub
iret
loopne
sbb
sub
les
and
test
test
int3
mov
sbb
insb
or
stc
cmp
push
lret
cmpsl
cmc
xchg
imul
cmp
fs
loop,pt
or
popa
sub
mov
add
cmp
lods
bound
or
sbb
jl
outsb
lds
jmp
mov
jge
orb
pop
jne
jae
clc
popa
lcall
data16
sub
lds
push
adc
ljmp
sub
into
loopne
add
fidivrl
jns
mov
mov
jmp
pop
mov
sahf
add
add
gs
testl
das
mov
add
add
add
add
test
cmp
mov
call
aaa
cwtl
stos
int3
mov
rcrb
imul
add
pop
pop
sub
repnz
or
mov
mov
mov
mov
jecxz
cld
cmp
dec
sbb
cmp
mov
mov
imul
scas
mov
mov
pushf
jge
mov
adc
cmp
test
xchg
cld
ds
jl
sbb
insl
fwait
xchg
push
fs
shlb
xor
xor
sub
cmp
sti
mov
and
outsl
xor
outsl
ret
js
dec
lret
rolb
push
imul
ret
push
cmpb
fs
mov
jg
imul
aam
xchg
outsl
cs
movsb
in
lock
xlat
movd
incl
cmpsl
bound
aaa
or
push
pop
xchg
cmp
popf
ss
out
cmpsl
filds
add
and
daa
lahf
jle
sbb
dec
je
add
add
add
add
out
imul
fmuls
clc
rcr
lret
push
incb
xchg
fwait
int
aad
jg
idivb
js
loope
pop
xchg
jno
out
jle
cmpb
aas
fcomps
lcall
mull
icebp
aad
inc
jnp
push
test
mov
lds
push
jno
nop
xchg
lahf
jecxz
stos
xchg
push
and
xchg
mov
ljmp
je
pop
pop
js
das
sbbb
mov
in
sbb
or
into
xor
add
arpl
lcall
xor
shrb
sbb
xchg
ds
pusha
mov
pushf
mov
daa
jg
adcl
fadd
in
es
test
push
push
scas
sbb
sti
out
mov
cmp
loopne
inc
jle
mov
pushf
movsl
fdivrs
addr16
jne
sbbb
in
lods
or
sti
outsl
jle
mov
add
mov
xlat
aam
in
sbb
add
add
mov
xchg
and
shl
out
lret
xchg
js
enter
xor
cmp
ja
stos
lret
mov
jns
inc
mov
fs
scas
les
lahf
push
repnz
mov
ja
in
mov
mov
and
adc
cmpb
iret
dec
or
pusha
xchg
test
pop
fcoms
imul
cmpsb
mov
adc
test
xor
jns
mov
into
inc
add
mov
mov
xor
sub
inc
pop
sub
mov
xor
pushf
cli
loopne
jne
testb
cmp
dec
mov
and
addr16
mov
nop
cltd
int
mov
ss
push
cmpsb
dec
and
cmpsl
add
and
aas
imul
bound
test
pop
inc
iret
repz
fcoms
sbb
push
insl
lods
push
add
jbe
push
inc
pop
jns
aas
fisttpl
inc
xor
add
add
scas
jge
jbe
add
out
and
mov
push
hlt
and
xchg
loope
pop
hlt
mov
fnstcw
cmp
fsubrl
inc
stos
xchg
add
pop
pop
dec
lret
repnz
cmp
adc
es
or
inc
scas
repz
outsl
in
stos
aad
cmc
push
cmpsl
xchg
adc
into
out
xor
mov
loope
inc
mov
push
ds
int3
jp
cmpsb
xor
xchg
cmp
xchg
js
mov
addr16
lds
fsubrl
pop
ja
es
imul
xchg
inc
inc
call
inc
pop
or
mov
cmp
jge
js
mov
dec
nop
out
cmp
mov
xchg
bound
into
loop
ja
ret
out
test
nop
ljmp
mov
add
add
add
jnp
mov
pushf
inc
adc
push
push
add
cmc
add
add
ret
movsb
lret
andl
sub
xor
arpl
push
mov
xchg
add
push
jns
dec
push
sbb
sub
mov
repz
sbb
in
insl
in
mov
arpl
xchg
inc
lahf
inc
in
orb
jg
loop
xor
out
pop
push
xchg
int3
pop
pop
jge
fwait
dec
mov
mov
pop
aaa
or
mov
lcall
enter
daa
pushf
and
mov
dec
pop
mov
inc
test
pushf
outsl
mov
movsl
sub
or
jmp
cs
lock
mov
mov
and
js
imul
fisubrl
jecxz
pop
pop
mov
out
in
insl
repz
xor
jle
sub
sahf
sbb
pusha
out
ficoms
and
fwait
and
inc
push
js
xchg
jne
add
add
xlat
pop
xlat
jg
mov
mov
pop
add
cmc
add
add
mov
hlt
ja
ret
loope
xor
ss
and
leave
aad
fists
push
dec
lahf
lods
xchg
adc
mov
dec
cmp
push
push
cmp
arpl
xor
outsl
popa
mov
rorl
push
push
jge
test
pop
je
adc
imul
jbe
outsb
sub
rorb
mov
inc
test
jp
dec
xor
dec
int3
xor
pop
and
xor
into
jnp
sti
xchg
pop
lcall
shlb
int3
add
nop
sti
std
imul
or
push
out
bound
xorb
ja
dec
lret
and
jecxz
aas
inc
push
xchg
pop
adc
rcrb
rol
push
fbld
add
mov
cmc
push
flds
sub
or
cmc
pop
and
cmp
add
fdiv
mov
adc
movsl
xor
or
add
add
add
jle
xchg
dec
les
arpl
or
out
mov
lods
xchg
in
and
cmpsb
push
out
mov
inc
mov
push
cmpsb
and
sbb
push
mov
mov
lea
outsl
lcall
xchg
into
scas
mov
pop
sub
inc
and
test
mov
and
inc
fsts
mov
out
cmpb
pop
cmc
imul
rclb
pop
mov
pushf
lret
fadds
sub
mov
sbb
data16
lods
in
std
jecxz
sub
repz
stos
push
dec
les
inc
std
cwtl
lret
pop
pop
lock
inc
mov
xchg
cmp
jb
pop
dec
add
mov
stos
fdivs
pop
inc
loope
sub
mov
pop
xchg
repz
mov
icebp
roll
mov
neg
and
pmaddwd
aad
dec
push
sub
addr16
pop
push
and
add
add
mov
stc
je
daa
adc
or
add
add
add
xchg
int
mov
and
mov
call
adc
xor
pop
stos
subl
pop
mul
or
idivb
mov
inc
clc
jle
rorb
or
mov
mov
push
dec
mov
pop
xchg
pop
pusha
mov
xorb
dec
and
sub
faddp
cmp
pop
pop
pop
dec
dec
popw
xor
mov
cs
out
or
ss
adc
xchg
mov
les
mov
mov
in
ss
xor
ljmp
je
filds
adc
mov
aad
hlt
adc
dec
inc
lea
sub
mov
mov
shrb
mov
dec
movsl
popf
adc
addb
xchg
push
movsl
mov
ja
or
ficoms
cmp
jns
xor
lock
jne
adcb
call
loopne
add
add
push
pop
push
jmp
sub
scas
iret
jo
or
add
add
add
ss
pop
filds
xchg
jmp
mov
arpl
fsubs
mov
sbb
sbb
jl
dec
adc
or
jecxz
inc
jne
loope
int
mov
mov
stc
and
scas
mov
out
andb
ds
or
test
subb
push
push
mov
mov
insl
cmp
mov
xchg
mov
or
repnz
test
aaa
outsb
pop
aam
fs
stos
mov
and
pop
or
or
xchg
cld
ds
and
inc
sahf
mov
add
inc
fdivr
dec
out
pop
icebp
insb
cmpsb
in
addr16
sbb
rcl
lods
stc
jle
lods
int
iret
leave
das
dec
andb
jnp
pushf
xor
fimull
loop
ret
mov
movsb
jbe
clc
xor
jmp
shlb
imul
add
add
pop
lods
pop
cli
cmc
inc
mov
lahf
fisttps
add
cmc
add
add
mov
xchg
mov
xchg
in
fwait
or
push
out
call
scas
jp
inc
pop
ds
aaa
cmpsl
or
and
dec
dec
mov
sub
mov
rolb
adcl
ss
cmp
push
cmpb
sbb
leave
adc
mov
int
icebp
fisttps
mov
dec
xchg
hlt
mov
pop
pop
push
mov
jbe
adc
mov
adc
jecxz
push
xlat
or
setnp
sub
lret
adcb
jmp
inc
fs
sbb
pop
lret
test
test
outsl
mov
push
lret
push
pop
clc
xor
mov
push
mov
pop
cmpsl
movsl
dec
jnp
add
mov
std
into
out
ss
leave
xor
outsl
push
jmp
das
stos
cltd
inc
popf
jae
out
inc
dec
clc
mov
or
add
add
add
loope
cmpsb
sbb
mov
in
inc
and
adc
pop
dec
call
and
cmp
sar
cmp
jae
insl
int3
in
dec
inc
enter
popf
clc
cmc
test
scas
mov
sub
test
mov
aam
out
mov
ds
cwtl
and
aas
inc
mov
test
jb
movsl
inc
sbb
xor
pop
mov
sbbl
das
push
sub
scas
jb
or
mov
adc
dec
dec
or
ror
popf
sbb
sub
or
mov
test
mov
jo
push
inc
fldl
incb
sbb
jns
mov
jle
das
outsl
mov
mov
cmpsl
and
fwait
sub
sti
pop
popa
loopne
push
stc
sub
imul
mov
mov
nop
test
aam
int
xchg
clc
or
movsl
cld
leave
or
add
add
add
js
jmp
enter
js
sub
lret
cwtl
iret
mov
js
mov
add
call
mov
jg
stos
cmp
lret
in
popl
sarb
hlt
jno
or
sub
aaa
es
jbe
iret
lock
mov
mov
fistl
add
jmp
xchg
xchg
push
mov
sub
sub
aad
dec
mov
cwtl
mov
sub
pop
loope
shrb
int
outsb
mov
fadd
jg
or
movsb
mov
mov
pop
add
pusha
add
pop
cs
notb
xchg
inc
loope
cld
xchg
pop
push
gs
mov
es
jno
pushf
push
cwtl
mov
pop
movsb
das
out
mov
jbe
mov
jcxz
adc
out
inc
mov
dec
js
pop
add
cltd
jb
push
cmpsb
pop
popa
daa
pop
cltd
out
int3
pop
or
sub
pop
and
call
add
add
arpl
addr16
inc
jmp
sbb
add
add
icebp
mov
inc
and
mov
and
hlt
xor
test
fs
mov
push
lahf
xchg
notl
rcr
jle
clc
xchg
jns
mov
push
test
cld
jb
popa
mov
les
inc
testl
in
arpl
pop
gs
test
or
repnz
std
loope
mov
pusha
pusha
lods
pushf
stos
sbb
mov
ljmp
sub
fcompl
jmp
ficoml
xlat
jp
mov
ret
sbb
sub
incb
sub
sbb
or
cmp
inc
cld
add
out
loopne
shrb
dec
movsl
mov
and
jmp
loop
push
in
push
and
dec
imul
or
dec
ret
test
andl
and
arpl
ret
sub
and
dec
mov
lods
pop
sub
cmpb
mov
add
out
cmp
cmp
pushl
jecxz
inc
outsb
imul
add
cmc
add
add
sbb
jno
dec
jmp
inc
mov
jmp
fidivrl
rorb
cmp
jp
sahf
int
dec
cmpsl
sbb
sbb
or
icebp
cmp
dec
rcr
hlt
lods
outsb
dec
push
shrl
adc
test
jge
hlt
dec
adc
nop
imul
out
repnz
xchg
rcrl
fsubrs
cli
cmp
es
repz
push
outsl
and
or
xor
adcl
or
lret
std
jmp
jl
scas
cmp
shrd
mov
push
push
fstp
jns
mov
fsubs
mov
test
popa
mov
cld
push
jecxz
jmp
hlt
idiv
fistpl
cltd
mov
inc
or
imul
clc
and
cmpsb
or
inc
movsl
xchg
pop
mov
add
cmc
inc
in
repz
add
sbb
adc
push
scas
adc
in
lods
repz
add
add
push
scas
out
mov
shrb
add
add
add
add
scas
lret
pcmpgtb
mov
cwtl
jnp
dec
inc
push
test
stos
sbb
cwtl
lods
pop
jg
jl
mov
and
adcl
test
pushf
mov
mov
jo
push
inc
push
mov
hlt
xor
ficoms
ret
sbb
mov
test
fisttps
mov
movsb
repz
or
and
inc
push
lret
xor
fwait
insb
mov
loope
lret
mov
inc
and
sub
idivb
inc
mov
sub
mov
popa
mov
dec
push
jp
enter
insl
add
inc
add
loopne
scas
sub
lret
and
mov
shl
or
mov
fnop
jo
jecxz
jno
sub
pushf
jae
jne
movsb
insb
fcomps
mov
aaa
xchg
and
movsl
mov
mov
cmp
scas
pop
out
cmp
add
add
addb
cmp
ja
push
outsl
jno
jecxz
test
stos
push
sbb
and
out
test
rclb
loop
cmp
fdivrp
rep
int
cmpl
pop
jp
les
mov
sub
sbb
inc
out
hlt
int3
movsb
push
test
repz
sub
das
adc
and
sbb
ret
lea
lock
shll
fdivs
loopne
lods
and
or
aam
sbbl
sbb
cmp
push
pop
ja
push
jne
add
push
and
out
test
jl
mov
xchg
insl
aas
ljmp
add
lcall
pop
iret
fstl
mov
mov
add
add
mov
push
jg
mov
popf
dec
sti
xchg
adc
add
add
add
ja
mov
cmpsl
fsubp
mov
std
mov
fcoms
pushf
cmp
xchg
rcll
jnp
std
stc
subl
add
sub
add
sub
add
gs
mov
aam
mov
clc
lahf
into
in
dec
sbb
sbb
mov
or
in
push
loope
dec
fsubl
push
mov
scas
add
push
cs
clc
sahf
jmp
jg
or
mov
cmp
sti
aas
fdivl
in
sbb
outsb
cmp
sbbl
or
out
jecxz
adc
movsb
loope
inc
leave
cmp
xchg
insb
test
mov
mov
dec
pop
inc
pop
inc
add
cwtl
mov
lcall
sub
adc
imul
popf
mov
inc
stos
subl
mov
add
inc
stc
mov
mov
fidivrs
fucomip
mov
add
add
add
xchg
in
mov
cmc
push
xor
push
push
mov
insl
jo
scas
sbb
pop
cmp
fcmovnb
stos
jns
repz
cld
cmpsl
cmc
xor
jbe
loope
bound
mov
ds
ret
mov
add
add
mov
or
ret
jmp
sahf
xchg
pop
rolb
es
inc
mov
in
mov
xlat
pop
push
pop
push
push
into
and
fs
mov
push
cmp
or
inc
aaa
mov
gs
jl
add
push
repz
test
mov
xchg
fildl
decl
xchg
jae
mov
outsl
mov
fisubrl
out
mov
insl
icebp
and
bound
xor
negl
into
inc
mov
sub
jl
jo
decb
or
add
xchg
sub
scas
jbe
or
jl
add
cmc
add
add
mov
int
pop
daa
push
mov
adc
sarl
stos
lods
clc
dec
jg
pop
insl
push
dec
jmp
cld
dec
popf
shlb
dec
dec
fmull
mov
test
sarl
sub
mov
xchg
or
xchg
test
xor
cmp
xchg
jbe
cmp
aam
insb
leave
enter
xchg
adc
dec
pop
mov
mov
jae
das
push
cmp
adc
adc
jmp
jns
or
cmp
lahf
jns
mov
mov
fcmovu
pop
js
push
imul
frstor
insb
imul
dec
scas
shlb
adc
cmp
pop
roll
cmp
adc
lods
sub
cmpsl
or
mov
addl
or
adc
cmpsb
fnstenv
pop
mov
add
hlt
fists
push
iret
add
add
cmc
add
add
roll
add
mov
les
lods
and
sbb
hlt
in
insb
jg
sahf
clc
xchg
xlat
lret
mov
jle
inc
jns
mov
mov
or
test
push
sbb
pop
mov
mov
pop
adc
add
sbb
mov
shr
xchg
add
popa
int
pop
jge
pop
cmp
sarl
sub
dec
cmpsl
sub
and
addr16
pop
xor
in
stc
jne
xchg
stos
sbb
mov
jno
mov
pop
lods
add
repz
pop
pop
test
sub
or
ret
jl
enter
scas
ficoms
ret
and
call
in
mov
add
mov
and
sub
cli
cmpsb
fsts
add
add
into
fwait
testb
sub
mov
adc
cmc
add
add
xchg
andl
jmp
cmpsl
fistpl
or
les
push
or
inc
cmp
push
arpl
add
xor
stos
push
clc
ficompl
sarl
jno
aas
adc
mov
aas
fwait
cli
push
push
push
jae
add
lret
xchg
pop
inc
nop
pop
pop
or
loopne
jae
popa
ret
xchg
mov
sti
lahf
into
and
jge
adc
pusha
cmpsb
and
xchg
enter
ret
mov
aaa
sub
out
test
out
movl
les
icebp
in
nop
popa
xchg
and
les
push
lret
jl
cmpb
sbbb
inc
inc
call
and
pop
xchg
imul
mulb
and
bound
pop
fisttpl
jmp
mov
add
xor
mov
pop
mov
mov
add
cmc
add
add
insb
cwtl
pushf
stc
or
mov
adc
xchg
mov
fnsave
popa
adc
mov
jp
in
outsb
lds
pop
fbld
inc
pop
pop
std
mov
mov
and
pop
mov
out
sbb
sub
mov
inc
adc
leave
repnz
or
outsb
in
test
cld
repz
cmp
lock
push
call
dec
xchg
movsl
pop
xchg
js
or
out
or
and
insl
push
decb
adc
jmp
adc
cmp
out
mulb
and
mov
xor
lds
add
out
push
pop
mov
pop
push
lahf
jns
adc
scas
sub
insl
pop
or
dec
out
shrl
std
dec
and
nop
nop
bound
sub
adc
out
outsb
push
movsb
xchg
test
add
add
inc
out
aas
mov
sub
repnz
mov
pop
add
cmc
add
add
int
insl
out
stos
and
mov
or
adc
rolb
mov
sti
dec
adc
xchg
cmp
xchg
pop
pop
ss
cmpsl
addl
fnstcw
stos
lcall
and
xchg
les
test
push
push
out
pop
js
arpl
cwtl
jbe
sub
adc
sbb
scas
inc
into
adc
pop
popf
xchg
mov
cwtl
cmp
mov
cltd
push
adc
cmp
xor
dec
sbbl
inc
test
orb
loop
imul
push
push
sub
test
outsb
sub
cld
xchg
push
popf
dec
gs
cmp
pop
into
in
into
sahf
mov
inc
sar
ss
daa
sbb
pop
dec
cmp
sub
idivb
orl
cmpb
lret
stos
stos
nop
js
fdivs
inc
mov
add
bnd
jp
xchg
inc
scas
std
loop
inc
sbb
add
add
add
int
and
xchg
fs
test
xor
sahf
cmp
movsb
or
jmp
sbb
jp
cs
orl
pop
jp
inc
mov
or
shl
dec
xor
daa
scas
fcmovne
and
andl
js
dec
fbld
stc
repnz
jae
mov
addl
push
popf
mov
xchg
das
cmpsb
lret
in
sbb
loop
jle
int
scas
daa
gs
leave
jmp
popa
mov
pushf
mov
lods
dec
jle
jge
mov
mov
test
pop
jnp
lret
xchg
sarl
je
or
gs
push
ljmp
test
and
mov
or
mov
call
lods
imul
xlat
stos
add
mov
ja
cmp
mov
add
sbb
in
out
ja
fbstp
xchg
mov
cmp
add
cmc
add
add
stos
sbb
mulb
orl
mov
sbb
fsubs
sub
repnz
das
mov
loope
push
cmp
or
rep
or
pop
xchg
in
xor
sbb
js
xchg
push
mov
or
xchg
nop
in
fld1
ficoms
jo
mov
xor
or
sub
xchg
pop
jmp
inc
sub
xlat
xor
push
push
lret
scas
mov
xor
inc
inc
movsb
in
mov
aas
stc
cmpsl
jb
ret
mov
fstl
mov
sbb
orb
xor
popf
cli
xchg
lods
je
mov
cmp
inc
insb
int3
mov
popf
jmp
sub
dec
mov
or
popa
pushf
xchg
lds
or
jg
push
push
push
addr16
mov
mov
add
add
pop
in
cmpsl
gs
sbb
add
add
add
or
dec
fbstp
lods
loope
mov
dec
sub
out
adc
mov
sahf
sub
in
xor
sbb
jmp
dec
mov
in
outsb
ljmp
out
notb
inc
out
inc
cwtl
insl
aaa
vxorpd
or
mov
fistpll
bound
cmp
cmp
inc
incb
ficompl
andb
add
adc
popa
xchg
or
dec
stos
imul
test
gs
cmp
jne
rcrb
push
int3
adc
repnz
or
sub
dec
pop
mov
jno
mov
mov
xchg
ljmp
and
xor
pop
jns
test
mov
dec
jmp
sbb
adc
out
mov
jp
push
cs
add
jg
imull
push
idivb
sbb
add
add
add
xchg
jbe
mov
sti
loopne
xchg
xchg
lock
jnp
push
loopne
lods
divl
lock
jo
adc
xchg
sti
ds
bound
dec
jecxz
arpl
imul
mov
inc
mov
shrl
mov
inc
int
mov
loop
das
or
cmp
out
test
arpl
dec
inc
inc
das
insl
sbb
sub
out
and
inc
mov
outsb
cmp
fs
sbb
idivb
inc
and
lods
xor
pushf
or
xor
stos
shrb
dec
movsb
xchg
mov
iret
in
cli
mov
lds
rcrb
out
sbb
adc
test
xchg
xor
adc
sbb
cmovge
xlat
out
push
aad
enter
leave
mov
pop
in
insb
test
cltd
fsubl
inc
dec
sbb
xchg
lret
add
sti
jg
and
mov
lods
push
sbb
add
add
add
jp
cld
or
in
and
in
in
ljmp
loopne
mov
mov
cmpsl
sub
ret
add
aas
sarb
jle
cli
push
cmp
sahf
or
pop
dec
in
inc
insl
dec
sbb
iret
lcall
js
and
mov
test
test
pushf
jbe
negb
lods
je
cmpsb
mov
rorl
mov
dec
jae
mov
ljmp
xchg
fnstsw
mov
mov
inc
cs
and
dec
gs
rclb
xor
sbb
mov
mov
imul
sbb
movd
cmp
repz
movsl
daa
mov
push
sbb
pop
push
outsb
je
cmp
in
inc
and
pop
push
lods
mov
mov
rolb
add
jnp
fldl
scas
mov
add
add
add
push
inc
bound
jne
fldcw
mov
cmp
xchg
and
cmp
cmpsb
mov
mov
cltd
pop
in
jne
loope
popa
mov
arpl
stos
in
in
jp
clc
xchg
jle
inc
mov
pushf
cmp
arpl
inc
xor
sub
pop
mov
and
pop
adc
ja
cmp
pop
push
pusha
jmp
sbb
push
jns
int3
adc
cmp
mov
dec
adc
xor
movl
cmc
push
es
insl
insb
popf
and
add
jle
jb
sti
sub
push
add
push
jecxz
pop
cwtl
xlat
dec
sub
dec
shl
in
sub
fistps
and
hlt
inc
cmpsl
std
fimull
pop
andl
popl
xor
addr16
push
fnstcw
test
cmpsb
xor
jmp
cltd
xor
add
mov
jno
std
outsl
mov
xchg
pop
cltd
mov
inc
outsb
add
add
cmc
add
add
or
cmp
sub
pushf
call
inc
sbb
mov
stos
push
xchg
sbb
xchg
stos
out
or
sub
sbb
fwait
sbb
in
addr16
add
int
mov
negb
inc
fwait
icebp
mov
jb
mov
cmp
xchg
lret
xchg
cmp
daa
jns
pop
ret
push
aam
sbb
hlt
xor
js
xchg
in
les
loopne
pop
adc
int
int
xchg
clc
sbb
mov
outsl
mov
nop
scas
cmp
jbe
mov
repnz
pop
mov
adc
jb
pop
je
and
xor
dec
pop
pop
and
ret
dec
insl
inc
fstl
mov
and
cmp
icebp
pop
orl
andb
jmp
add
sbbb
loope
jmp
loop
les
ljmp
add
rol
sub
sbb
sub
dec
mov
push
out
imul
ljmp
pop
add
jmp
fwait
popa
jne
push
push
jne
xchg
or
lds
jl
loopne
fsubs
inc
mov
xchg
pushf
mov
dec
mov
cmp
ljmp
push
movsb
jp
aad
enter
stc
xor
add
mov
pusha
fs
in
and
mov
dec
fistl
sbb
es
mov
enter
divb
mov
add
jnp
mov
faddl
inc
mov
and
sbb
loop
push
cs
cmpsl
sbb
jp
stc
and
shll
fs
jo
mov
dec
das
xor
jns
frstpm(287
notl
pop
or
sahf
scas
enter
imul
jbe
or
jmp
jp
enter
lret
add
xor
idivl
std
popa
pop
in
pop
add
cmc
add
add
pop
sbb
xor
mov
adcl
mov
scas
dec
repz
das
repz
stc
jns
test
cmp
or
movl
aad
sub
sbb
xchg
or
dec
sub
cld
inc
mov
mov
cmpl
and
pushw
pushl
arpl
out
mov
decl
xor
rcrl
dec
xor
lock
mov
jb
sbb
push
or
add
out
loope
popfw
rorl
sahf
mov
test
cmc
xor
sub
xchg
lods
cmp
or
outsl
movsl
push
data16
stos
out
jle
gs
mulps
into
arpl
cwtl
out
in
popf
ljmp
mov
add
cli
inc
jg
int
pop
sbb
cmc
inc
jnp
and
add
add
add
or
xchg
push
xchg
cld
mov
xor
shrl
cmp
xchg
subl
add
add
int
fcmovb
and
cmc
stos
push
movsb
lock
xrelease
push
gs
loop
push
xorl
push
test
inc
add
imul
fisubrs
cmpb
sbb
mul
fdivrl
ljmp
adc
mov
push
int
sarb
sub
pop
cltd
jo
adc
repnz
xor
jp,pn
push
pushf
into
jle
popf
mov
andl
sub
cmpsl
lret
inc
shrb
sti
inc
push
dec
dec
sub
std
cmpb
fdivrl
inc
mov
jno
aad
pop
movsl
sub
pusha
jg
mov
das
sti
inc
iret
cltd
arpl
gs
pop
fwait
mov
outsl
jae
lret
aam
mov
nop
add
inc
cltd
mov
add
add
xchg
std
cmp
jle
fisttps
cmp
add
cmc
add
add
test
dec
popa
mov
dec
xlat
movsl
repz
das
ljmp
sbb
dec
bound
lock
mov
test
ljmp
lret
pop
add
sub
outsb
dec
ss
jne
nop
sarb
out
push
les
les
jo
jno
sub
jae
mov
or
cld
cwtl
cmc
lods
mov
sub
inc
lods
insl
jbe
xor
adc
pop
inc
mov
push
arpl
xchg
sarb
push
and
sub
fimull
fsts
cwtl
jbe
xor
shr
mov
mov
inc
ret
fistps
sbb
shll
test
and
pop
add
mov
mov
test
les
mov
ficomps
orl
fists
mov
and
add
iret
xlat
ficoml
sub
jae
and
add
add
add
popf
andw
repnz
xchg
mov
push
push
sub
mov
shl
adc
sbb
das
mov
sbb
push
mov
mov
dec
stos
test
dec
sub
push
mov
mov
ret
mov
cltd
sbb
in
jecxz
popf
aam
mov
rol
shlb
jmp
in
nop
arpl
scas
jmp
out
test
stc
daa
dec
pop
sub
pushl
push
inc
outsb
subb
mov
xlat
lods
xchg
lahf
out
sub
imul
loop
mov
leave
mov
jo
jo
mov
xor
or
jge
inc
cmc
xchg
fstpl
or
mov
outsb
push
imul
cmp
cmp
cmpsl
insb
inc
inc
xchg
mov
cmc
in
sbb
pop
and
lods
sti
cmpb
pop
shrb
cs
scas
xchg
orl
add
sub
iret
outsb
jmp
rcll
sbb
mov
and
add
add
add
std
outsl
sub
jb
notl
add
mov
mov
out
inc
mov
push
cmp
daa
insl
push
xor
jbe
adc
cwtl
movsl
dec
jp
push
fsubs
ja
dec
je
enter
aas
mov
sub
fcomps
inc
push
cmp
loope
sbb
push
mov
sbb
jno,pt
ss
add
iret
dec
lea
sti
push
xor
or
or
push
push
adc
shl
sub
xor
sti
push
jle
lods
inc
aas
into
addl
add
outsl
jmp
add
lcall
aad
js
sbb
andb
cli
xchg
jbe
mov
inc
adc
cmp
cmpsl
pusha
add
lock
scas
cmp
cmp
fcoml
sbb
add
add
std
sbb
stc
cld
or
adc
dec
push
mov
add
cmc
add
add
and
addb
stos
jb
mov
mov
inc
popf
pop
add
cmp
ss
sub
jns
push
inc
or
lahf
mov
stos
pop
jns
pop
sahf
int3
sbb
lret
sub
mov
and
jle
push
outsl
aas
testb
lret
or
jle
sub
inc
dec
push
adc
mov
xor
cli
add
mov
sub
ret
jecxz
dec
stc
mov
scas
cld
enter
mov
sub
mov
pop
pop
iret
xor
sbb
pop
mov
xchg
cmpsb
sbbb
pushf
jmp
sub
rcrl
pop
pop
push
xchg
sbb
pop
cmpl
repnz
pop
das
xchg
jl
pop
fiaddl
loop
movsb
or
test
fs
out
arpl
movsb
adc
mov
cli
call
mulb
push
xchg
loope
aad
push
ljmp
add
pop
test
scas
repz
cld
cmp
jl
pushf
mov
and
add
pushfw
mov
dec
popf
loopne
jno
adc
lds
xorb
sbb
daa
lods
test
cli
or
jbe
lcall
insb
xchg
aas
dec
lock
clc
ja
add
mov
sbbb
sbb
and
xor
xchg
ss
jp
sub
xchg
js
in
dec
sbb
mov
insb
imul
xchg
dec
pusha
xchg
mov
jmp
ljmp
outsl
leave
into
add
xor
and
call
pushf
xor
adc
repnz
cli
mov
xor
and
and
jbe
shl
mov
adc
push
adc
and
pop
into
stos
cld
lods
ljmp
adc
fdivs
push
jo
dec
das
xchg
jmp
jge
mov
push
test
fadds
mov
dec
pushl
fisubl
mov
add
add
hlt
lds
imul
adc
aad
std
and
cmp
mov
lods
mov
add
mov
sub
xchg
sbb
les
jbe
mov
aam
pop
sub
dec
test
mov
testb
push
or
insb
cmp
mov
sti
test
push
push
leave
add
mov
lods
or
call
movsb
lret
mov
cmp
jp
stos
or
or
add
fistpl
movsl
lea
or
and
shrb
xchg
test
jnp
popa
inc
ss
lea
xchg
push
mov
stos
push
sub
sub
movhps
pop
je
clc
sbb
aaa
in
mov
xor
cmp
push
mov
mov
lret
lret
cmpl
subb
add
add
inc
ja
pop
aas
pop
pop
inc
adc
push
jbe
xchg
daa
add
cmc
add
add
inc
mov
inc
push
cld
push
and
pop
pop
push
out
gs
pop
jp
es
and
lds
mov
int
cmp
push
dec
les
cpuid
jg
ljmp
iret
adc
outsl
stc
jg
cwtl
cwtl
out
dec
jb
in
mov
decl
arpl
cltd
sub
dec
or
int
setge
xchg
mov
insb
xlat
ds
mov
or
add
add
and
and
mov
jge
aad
into
mov
mov
ja
test
adc
xchg
xor
cmp
testb
ja
mov
out
jp
jmp
daa
add
push
mov
push
jnp
std
movsl
test
scas
mov
outsb
loop
push
cltd
shlb
sub
mov
test
in
add
lock
stos
ja
add
repz
jae
ja
div
dec
lods
push
mov
addr16
add
add
add
ror
jae
jb
mov
popf
sahf
cmp
fistpl
push
add
mov
push
js
in
test
pop
movsl
jb
push
scas
test
popf
mov
fwait
and
push
jnp
mov
xchg
out
out
outsl
es
punpckhdq
mov
fcmovu
fidivrs
sbb
sub
or
jmp
out
testb
sbb
jl
std
mov
mov
adc
inc
mov
scas
lock
out
xchg
mov
or
or
dec
and
out
jmp
das
js
xor
add
rorb
fnstenv
sub
or
mov
fwait
cmpl
js
insl
sbb
sahf
or
mov
xchg
cmpsl
mov
outsb
jmp
push
dec
loope
sbb
xor
add
cli
std
jg
into
jno
pop
loop
cmpl
add
lods
pop
cmp
dec
dec
clc
jns
pop
xchg
or
aad
jb
data16
les
ja
inc
and
out
mov
or
xchg
inc
xor
xchg
inc
in
inc
les
sti
sub
fistl
loop
cmpsl
stos
inc
push
arpl
shlb
dec
adc
repnz
mov
mov
mov
sbb
sahf
bound
iret
repz
sbb
push
sbb
in
loope
sub
es
icebp
iret
xchg
fisttpl
cmp
xor
pop
aad
pop
xchg
mov
jl
inc
add
or
shlb
gs
xor
xor
xchg
mov
inc
sbbb
notl
test
int
inc
dec
mov
sub
sub
jb
xor
push
sarl
mov
enter
push
aas
aas
lretw
ss
mov
test
jno
mov
push
cli
outsl
xchg
leave
xchg
add
add
add
mov
std
incl
sub
pop
cmp
add
cmc
add
add
mov
jbe
mov
mov
jmp
mov
fnstcw
adc
mov
popa
add
push
mov
dec
lds
or
sbb
lahf
fs
ja
mov
dec
popf
cld
inc
outsb
and
stos
out
popa
fadds
mov
pop
enter
or
lods
loop
out
jg
out
aas
in
or
enter
or
movsb
in
pop
push
insl
pop
and
test
push
jae
sub
lock
cmpsl
outsl
bound
popa
mov
jne
dec
out
lea
push
mov
pop
jg
and
testl
sahf
js
mov
mov
cmpl
not
out
iret
xchg
pop
test
testl
lret
leave
xchg
out
inc
add
aad
push
push
fsubl
daa
add
add
es
jg
pop
xorl
daa
xlat
sti
imul
add
or
push
test
aas
dec
adc
pshufw
jmp
sbb
stos
in
test
pop
sub
insl
xchg
roll
in
mov
dec
jno
hlt
push
mov
fldcw
cmpsb
je
jo
cmp
sub
aad
add
mov
movsl
movsl
jmp
aad
out
rorb
fwait
inc
in
in
mov
push
ss
inc
lret
xchg
xor
lret
addb
ja
mov
lcall
push
cmp
mov
lods
scas
cmpps
sub
dec
cltd
xchg
addr16
arpl
push
insl
xchg
ja
iret
adc
les
adc
mov
cmpsb
lods
adc
jb
push
dec
outsl
lahf
sub
mov
xor
out
icebp
jmp
xor
addr16
movsl
adc
js
jns
push
fstl
add
xchg
int3
xchg
repz
fmuls
add
push
clc
or
cmp
lods
lea
pop
sub
add
add
add
iret
dec
repz
add
popf
add
fidivl
sub
xor
aad
cmp
adc
test
mov
jmp
into
lods
push
aam
std
mov
push
jnp
add
lret
stc
notl
inc
fucomp
fistpll
push
sahf
push
fnsave
pop
mov
pop
sbb
or
adc
push
jbe
ds
mov
fdivrp
inc
pop
push
and
sbb
out
flds
jge
das
test
pop
jnp
inc
pop
cld
rcrb
jg
ljmp
loop
cmp
in
insl
cmp
lcall
in
nop
inc
jmp
and
pop
mov
push
imul
test
mov
loopne
fcomi
inc
mov
aad
stos
mov
push
loopne
mov
mov
test
js
out
mov
sbb
cmpsl
xor
or
add
add
stc
lods
xor
ja
sete
add
cmc
add
add
cmc
dec
sar
or
cmpsl
jl
stos
inc
nop
mov
mov
enter
sbb
fwait
out
pop
popf
xchg
and
mov
negl
daa
or
das
push
cwtl
out
movsb
andb
push
out
jg
lcall
ss
out
outsl
jns
dec
inc
jecxz
push
xchg
mov
pop
push
cltd
xchg
and
mov
mov
outsl
not
or
sub
adc
rolb
nop
mov
inc
mov
mov
add
cltd
bound
pop
adc
imul
cli
loope
push
mov
jae
rolb
xlat
inc
sub
decb
and
mov
cmp
push
bound
push
and
or
fstl
leave
in
jnp
push
out
pop
jo
push
repz
lret
add
add
ficoms
stos
sbb
ljmp
push
lods
test
add
cmc
add
add
jbe
repz
and
testb
sti
mov
mov
mov
sub
xchg
outsl
aad
push
cmp
sub
adc
pop
hlt
cltd
sbb
and
hlt
and
jp
push
push
rorb
mov
aaa
inc
mov
push
xor
mov
lret
xchg
daa
lea
test
notb
xchg
cs
loopne
sbb
or
mov
and
popf
or
fisubrl
dec
cmp
addr16
and
icebp
shrb
pushf
push
psubsw
dec
rcll
adc
inc
sbbb
add
lahf
cwtl
lahf
loope
mov
call
popa
pop
inc
lahf
stc
jmp
inc
in
pop
pop
xor
jo
add
xchg
adc
mov
add
add
jbe
xor
jl
cli
or
out
mov
add
in
out
sbbb
sbb
cmp
add
add
scas
inc
xor
ds
jl
fisubl
les
xchg
fimuls
inc
loopne
mov
loope
les
inc
or
arpl
mov
inc
fisubs
call
pop
push
icebp
data16
sub
push
push
cmc
push
notl
add
mov
cmp
dec
sub
test
push
mov
arpl
loop
aaa
jmp
pop
call
shr
mov
mov
aad
push
dec
dec
jbe
fwait
inc
xchg
cs
and
pop
sub
cmp
cwtl
arpl
clc
sbb
movsl
dec
mov
pop
scas
lea
xchg
xchg
test
movhps
or
mov
std
adc
xchg
push
scas
mov
ret
or
scas
sub
xchg
addl
push
loope
loopne
jmp
mov
fsubrl
add
add
sbb
out
aad
jo
cmp
cmc
pop
xor
add
cmc
add
add
xchg
push
xchg
lds
adc
pop
shlb
mov
xchg
cli
add
ja
jbe
xchg
das
xchg
cli
push
xchg
testl
sub
rol
aad
xor
lods
pop
mov
in
xor
xchg
jge
cli
and
int
sti
xchg
xorb
xor
stos
ljmp
xchg
mov
outsl
imul
test
int
outsl
push
pop
imul
stc
fwait
scas
scas
cmpsb
cmp
and
inc
pop
sbb
jle
xor
mov
mov
add
sbb
adc
ds
filds
xor
sbb
xchg
pusha
in
cld
jno
mov
push
or
inc
mov
int3
fisttps
or
into
xchg
adc
pop
pop
out
jnp
cltd
mov
fs
dec
and
lock
adc
cmpxchg
add
add
in
add
cmp
out
dec
lret
fstpt
daa
xor
add
add
add
dec
sbb
dec
movsb
mov
mov
push
mov
dec
es
aam
add
add
add
stos
inc
push
int3
jbe
push
mov
lea
inc
sbb
decl
push
xchg
call
js
ss
loopne
test
test
sub
cmpsl
jo
adc
mov
jmp
hlt
jno
call
jge
add
or
jg
push
jns
xor
scas
aaa
fs
icebp
push
and
push
sbb
adc
mov
lahf
adc
rolb
ljmp
dec
xchg
mov
es
int
xlat
popa
pop
cmp
pushf
into
out
inc
adc
sub
fs
mov
lods
pop
push
mov
in
xor
jmp
pop
pop
adc
loope
adc
inc
movl
add
test
sbb
out
add
lods
and
pop
in
xor
add
add
add
cld
cwtl
cmp
or
out
aad
fsts
stos
jns
je
xchg
mulb
and
push
inc
push
jle
pushf
icebp
fldt
fwait
xor
mov
mov
adc
mov
jnp
movl
dec
and
add
fdivs
int3
mov
jp
aaa
movl
jns
out
jo
mov
mov
fadds
cmpsl
jg
dec
cmp
mov
jl
xor
sub
dec
addr16
xor
out
movsb
clc
cltd
xor
pop
int3
cwtl
xchg
jp
and
out
dec
mov
sbb
push
inc
sbb
rorl
push
mov
inc
mov
shl
adc
cmc
adc
fistps
test
stos
mov
dec
stos
mov
leave
mov
cmpsb
pop
lock
inc
leave
xchg
out
add
add
jg
cld
add
adc
push
adc
add
cmc
add
add
push
xchg
adc
adc
stos
je
xchg
or
enter
add
mov
popa
mov
add
loop
idivl
movb
add
in
mov
rcrb
loopne
aaa
sub
cmp
xchg
into
lock
sub
adc
push
sub
push
fiaddl
fisttpll
mov
fcoml
sub
loope
out
inc
xchg
push
pmullw
inc
sub
sahf
in
mov
fdivrl
jg
js
popf
popa
inc
pop
rcll
aaa
out
in
stos
and
stos
adc
push
test
aas
xchg
int3
adc
enter
data16
fidivrl
les
aas
lea
and
jbe
aad
jmp
inc
inc
jnp
or
incl
add
ret
mov
iret
mov
adcb
cmc
add
add
sub
rcl
icebp
cmpsl
pop
push
movsb
fs
xor
mov
push
cmp
cmp
inc
jle
pop
dec
fiadds
cmp
mov
xor
mov
mov
mov
notb
fwait
sbb
js
add
push
imull
addr16
xchg
inc
and
mov
mull
aaa
dec
les
ss
aam
mov
test
fs
fstps
pop
cmc
pop
push
call
jno
iret
cmpsl
test
mov
push
in
lods
add
and
sbb
and
or
adc
mov
imul
insb
pusha
push
ret
jae
dec
gs
jno
xor
inc
mov
and
pop
cmp
push
lods
adc
out
mov
lods
addl
imul
dec
adc
pop
add
subb
jp
push
cmpl
add
add
mov
sbb
push
push
clc
sti
xor
add
add
add
loope
and
dec
imul
sub
les
sti
add
incl
into
fisttpl
or
xchg
mov
repz
nop
les
mov
fildll
pop
sti
push
imul
ljmp
pop
push
cwtl
in
or
pop
ljmp
inc
jnp
mov
cmp
pop
mov
mov
cmp
fs
cs
xchg
inc
sub
mov
and
bound
frstor
jns
fmul
daa
jo
pop
stc
je
sarl
and
mov
cmp
ja
pushf
test
xchg
mov
ja
cmp
and
loope
jb
fistl
pusha
inc
mov
sbbl
cld
ficompl
adc
mov
add
add
xor
clc
cli
clc
sarb
repnz
inc
aam
out
movsb
lock
add
ds
jo
in
jno
mov
sbb
and
out
sbb
xor
ror
mov
jp
das
inc
sub
inc
sbb
addr16
rcrb
mov
xor
xor
lods
push
cmp
lock
mov
repnz
cmp
wrmsr
outsl
sub
add
loope
xlat
mov
stc
or
push
out
insl
push
sahf
push
xchg
in
lcall
stc
sub
cs
into
jnp
jo
adc
xor
cli
pop
jns
inc
das
mov
dec
pop
mov
jge
jmp
xchg
in
fucomip
and
mov
dec
push
hlt
or
cmc
mov
js
mov
mov
jecxz
sub
stos
jmp
or
popa
pop
lea
imul
mov
mov
outsl
push
stc
xor
mov
add
add
jnp
out
push
lcall
in
add
cmc
add
add
mov
push
jb
xchg
cld
inc
sub
push
xor
mov
imul
mov
into
xchg
cmpb
daa
fiaddl
jo
je
jmp
jae
and
idivl
inc
out
icebp
jae
popa
pop
int3
and
push
mov
sub
sbb
adc
xchg
das
test
sub
mov
fldenv
mov
shrb
ss
jnp
ret
inc
jle
jne
insb
cwtl
inc
dec
iret
and
push
lea
add
cmp
movsb
hlt
dec
inc
repz
jb,pt
mov
jno
adc
push
xor
movsl
es
mov
int
dec
jge
sub
push
pop
and
xlat
mov
addr16
mov
fists
sahf
pusha
je
in
popa
sbb
out
push
xchg
mov
pop
xor
push
add
jmp
movsb
sbb
push
jno
fisubl
add
cltd
fnstcw
rcl
push
outsl
and
add
fs
es
data16
cmc
jle
dec
lahf
loopne
sbb
add
add
push
xchg
sbb
clc
push
cli
pop
mov
hlt
mov
inc
xchg
sahf
mov
jmp
rcll
div
xchg
xchg
out
mov
sub
out
mov
pop
push
sub
pop
push
or
or
sbb
lret
loope
sbb
dec
inc
fcomps
mov
xchg
imul
mov
xchg
mov
xlat
dec
ret
rcl
les
push
stos
push
scas
mov
add
xor
cmp
mov
jge
fistpl
pop
cli
ss
xchg
mov
ret
jnp
xchg
sub
daa
adc
sti
sti
sub
daa
mov
mov
dec
daa
ret
das
jnp
in
and
cmpb
sarl
pop
pop
in
cmp
cli
movsl
je
mov
cld
mov
imul
enter
mov
stc
add
add
dec
mov
imul
push
test
cmc
add
add
jecxz
and
fistl
mov
test
lods
in
call
mov
cmp
in
rol
xchg
xor
daa
aad
push
push
fstpt
ds
sbb
lods
loope
cmpl
adcb
js
and
fs
sbb
pop
mov
xchg
inc
stos
dec
aad
cmc
fsubr
xchg
jno
dec
rorl
add
inc
ret
iret
pop
push
mov
out
xchg
sbb
xlat
mov
arpl
loop
movsb
dec
adc
pop
and
jns
sub
pop
sub
test
inc
or
dec
shr
push
loop
add
mov
dec
scas
mov
jle
sbb
neg
push
stos
popa
jo
and
aas
xor
imul
call
pop
sar
pop
fwait
mov
outsl
and
xchg
sbb
cmc
xchg
jmp
in
mov
pop
add
add
and
push
sti
cmpsl
pop
push
jo
addr16
test
cmp
add
add
add
cmp
xlat
mov
sub
or
iret
iret
jl
pusha
jl
repnz
fadds
jmp
jb
xchg
aam
je
cltd
adc
lock
lods
inc
fsincos
inc
jmp
dec
repz
lea
loop
divb
and
pop
in
fcmove
out
xchg
fistpl
xor
out
cwtl
push
and
cmp
jbe
cld
sub
sbb
push
jl
add
clc
fwait
sbb
sbb
stos
jnp
cmp
gs
or
repnz
adc
pop
jae
push
inc
push
push
cli
clc
gs
out
mov
aaa
push
fimull
stc
outsl
push
sub
dec
lcall
mov
cmp
mov
repnz
jno
pop
fisubs
cltd
rorl
cltd
js
aad
shrb
rcrl
pop
out
enter
and
push
add
add
mov
std
cmp
movb
aam
cmp
add
add
add
shr
cmp
sub
fstl
and
push
fcoms
subl
add
and
mov
mov
out
andb
rcr
cmc
xchg
pop
andb
test
push
mov
sahf
jmp
mov
jns
cmp
fnstsw
pop
push
pop
inc
mov
or
pop
and
mov
or
lahf
sub
mov
fildl
cmpl
or
hlt
inc
xchg
sti
arpl
mov
gs
mov
das
add
pop
ds
cld
cld
and
cmp
and
push
outsl
inc
xor
inc
xlat
mov
mov
popf
mov
mov
mov
lret
pop
shrl
mov
jecxz
jp
and
lods
adc
stc
xchg
fdivl
pop
and
add
add
and
jecxz
or
scas
cmp
add
add
add
dec
mov
addl
xorl
ja
test
dec
push
hlt
mov
lret
divl
or
pop
cmpsl
xlat
push
or
fwait
inc
lods
int3
mov
imul
jo
push
test
or
sub
xchg
dec
adc
ss
jb
jno
sahf
sub
pop
scas
pop
aam
rcll
sub
sar
cmp
in
lret
add
addr16
pop
inc
sub
cmpb
xor
fnstenv
out
addb
jae
popf
das
fwait
pop
flds
outsb
dec
shrl
add
xchg
jmp
push
arpl
xor
mov
pop
arpl
jns
cmpb
cwtl
ja
mov
out
and
aad
movsl
push
rol
pushf
ljmp
jle
das
and
lret
mov
or
mov
xor
cmp
mov
fiaddl
ret
ficomps
push
pop
shlb
add
adc
lret
cltd
jns
test
mov
faddl
and
dec
arpl
inc
je
sub
add
shll
out
lods
aaa
sbb
leave
scas
sbb
fidivl
and
cmp
stos
imul
pop
fdivr
push
push
or
jo
out
aaa
dec
inc
rcrb
pushl
addl
cmpsb
push
daa
dec
xchg
sub
pushf
push
nop
movsl
push
out
out
lds
sub
mov
int3
das
lock
movnti
fldl
cmp
ja
ja
ret
dec
cmc
rcll
dec
stos
fimuls
mov
cmp
jl
ja
add
push
dec
icebp
outsb
sbb
cld
push
mov
xor
lea
mov
addb
mov
pop
inc
cmp
jno
adc
test
inc
mov
pop
or
imul
xchg
mov
and
int
aad
sbb
arpl
ja
repnz
add
sub
add
cmc
add
add
mov
mov
sbb
inc
mov
and
mov
add
scas
pop
jno
jbe
sub
inc
sahf
mov
lock
xchg
std
nop
mov
mov
mov
mov
sbb
loope
pop
shr
cmc
or
lock
pop
rolb
jp
loop
imul
jb
sbb
and
fwait
repnz
pop
mov
daa
test
add
outsb
sub
icebp
lock
xor
negl
mov
mov
add
pop
fildll
cltd
sbb
dec
pop
adc
dec
mov
jge
mov
dec
cmp
shr
rorb
fs
rcrb
popf
js
mov
in
jge
pushf
sbb
in
repz
cmp
sbb
push
push
mov
sarl
imul
add
add
lret
mov
cwtl
sbb
inc
lea
add
cmc
add
add
xchg
mov
test
lcall
jecxz
mov
lods
cmp
and
sbb
in
fisubrs
mov
and
mov
icebp
dec
and
outsb
or
movsb
adc
scas
dec
ss
or
or
mov
shll
ss
adc
es
sbb
cmp
neg
rcl
loop
popf
sub
inc
fidivl
test
push
fdivrp
je
sbb
xor
imul
sti
xchg
push
addr16
ret
pop
lods
loope
mov
adc
mov
and
popl
push
loopne
adc
xchg
mov
mov
xchg
aaa
pop
and
movsl
je
fnsave
paddb
scas
cwtl
movsb
jmp
ret
xor
and
movsl
dec
ljmp
into
lods
xor
jbe
mov
jns
mov
int
lock
add
sub
sti
pop
jge
div
cmp
push
fdivs
cmpb
add
add
add
push
cltd
xor
aad
sub
inc
adc
jno
dec
lcall
imul
sbb
pop
jmp
ljmp
push
scas
mov
push
lds
push
fdivrs
and
mov
fcmove
es
rorb
xchg
andb
xchg
loopne
cmc
xchg
inc
sbb
shrl
les
repz
mov
daa
into
rclb
adcb
inc
scas
pop
cmp
mov
dec
imull
or
mov
fldlg2
fistpl
stos
cmp
mov
dec
insl
add
xchg
push
xchg
push
inc
fdiv
shrl
sbb
test
imul
cmp
outsb
rclb
imul
jg
aam
out
sub
ss
in
bound
je
notb
push
fdivrs
push
ret
hlt
inc
sub
add
add
fsub
std
in
popf
jle
es
int3
std
pusha
ja
add
cmc
add
add
cwtl
jmp
xchg
loop
push
outsl
out
jge
jge
and
dec
add
or
mov
sub
mov
sub
lret
mov
in
adc
lea
ja
sub
jno
push
inc
xchg
faddl
jnp
sbb
lahf
and
call
fadds
negb
xchg
test
xor
outsb
add
inc
fadd
js
push
xor
cli
loop
outsl
enter
adc
add
xor
enter
movsl
sbb
shl
sbb
sbb
mov
cmp
sbb
sbb
lock
or
xchg
icebp
je
in
int3
movsl
in
jae
cmpsb
loope
loop
sbb
adc
add
push
insl
xchg
pop
mov
mov
mov
jp
ret
jecxz
sub
xchg
xchg
clc
inc
jmp
std
test
popf
js
add
add
jp
jnp
sti
xchg
jle
popf
loopne
sub
inc
add
cmc
add
add
stos
sub
out
imul
pop
daa
mov
push
int3
das
xchg
adc
popf
jbe
mov
hlt
mov
les
xlat
xorb
cld
pop
into
mov
push
mov
cmp
lods
cmp
sarl
fildl
or
stos
incl
ja
fstps
call
pop
cmc
xchg
xchg
insl
mov
sub
cltd
gs
cld
sbb
jae
mov
repz
stos
inc
push
mov
and
mov
xor
lea
mov
adc
cmp
mov
sub
mov
decb
add
or
mov
add
rcr
mov
push
pop
insb
mov
mov
xchg
push
popf
sub
lock
sbb
pop
fstpt
cmpsl
add
add
push
sti
loopne
cmp
jno
inc
adc
add
cmc
add
add
sub
out
roll
fstps
xor
cmp
dec
fwait
xchg
xor
push
pop
fnsave
stos
lahf
call
test
pusha
icebp
inc
lcall
jnp
lods
outsb
jmp
cld
add
lcall
and
ret
cltd
cmpsb
adc
lret
jo
mov
lret
jmp
out
insb
hlt
mov
mov
faddl
outsb
cli
inc
repnz
mov
stos
inc
or
xor
and
or
loope
or
sub
pop
adc
fidivs
mov
in
aas
xor
dec
add
adc
mov
aaa
arpl
dec
fsts
mov
jo
push
shlb
jb
mov
ss
adc
inc
sub
clc
mov
add
add
cmp
and
push
dec
jmp
lods
jg
inc
add
cmc
add
add
out
push
cltd
mov
ja
loope
mov
fimull
mov
in
push
movsl
jno
mov
cld
dec
pop
jp
lahf
stos
push
jo
scas
mov
les
leave
and
add
dec
in
push
hlt
iret
jge
fnstsw
sbb
insb
lret
mov
pop
lret
idivl
addl
pop
and
insb
or
xchg
mov
sti
inc
mov
adc
lods
shl
mov
xor
sub
lcall
adc
sub
or
or
adc
or
movsl
xchg
push
inc
xor
fwait
jmp
aas
movsb
jns
cmp
ret
or
mov
mov
dec
add
test
xor
dec
or
ljmp
mov
out
jge
cltd
in
imul
in
aam
dec
inc
jg
test
jle
add
incb
ljmp
xchg
fwait
daa
dec
inc
add
cmc
add
add
dec
dec
test
mov
bnd
nop
loopne
imul
sbb
loopne
mov
out
jmp
adcb
sub
add
lods
dec
outsl
in
pop
mov
lds
mov
pop
fs
popa
mov
add
in
xor
movsb
sahf
add
iret
pop
mov
leave
jae
rol
fidivrl
jne
inc
imul
fdivs
stos
cmc
das
call
adc
stos
inc
mov
test
or
push
ret
pop
sbb
cmc
dec
xchg
scas
or
adc
push
mov
pop
dec
aaa
xchg
xor
push
mov
mov
fmull
repnz
lahf
fimuls
mov
adc
inc
push
inc
or
enter
fsqrt
or
out
mov
lods
or
fcmovnbe
add
add
rclb
mov
add
cmc
add
add
xchg
jp
xor
cmp
pop
sbb
subb
push
popa
sub
sub
jmp
out
add
xchg
daa
mov
push
sbb
mov
pop
clc
pushf
pop
pusha
je
les
jge
jmp
cmp
sbb
push
mov
pop
imul
out
push
sahf
ljmp
cwtl
dec
jg
ret
lahf
dec
shr
mov
mov
cmp
mov
imul
mov
cmpsl
popl
pop
gs
pushf
mov
fsub
mov
add
test
in
in
and
imul
jne
sarl
adc
nop
add
jge
and
dec
dec
lods
or
cmc
stos
cmpsb
sbb
mov
add
outsb
loope
imull
jecxz
jl
sub
loop,pn
pusha
aaa
lods
hlt
cld
add
add
jbe
idivl
ss
repz
inc
add
cmc
add
add
jne
jbe
in
dec
je
scas
lret
adc
cs
xchg
cmp
jo
inc
sub
pandn
mov
iret
or
jg
mov
imul
hlt
jae
pop
arpl
je
mov
je
push
push
ficoms
xor
fstpl
lea
cld
and
add
dec
jg
adc
jns
or
js
cmp
mov
push
icebp
lcall
pop
scas
cmp
stc
inc
cmp
aam
mov
test
nop
mov
lahf
xchg
sub
cld
mov
addr16
roll
leave
in
sti
pop
in
cmp
push
imul
push
cmp
jno
inc
jo
into
or
adc
jbe
shr
insl
xchg
ja
jl
and
and
ljmp
push
cld
ffreep
stc
ljmp
ljmp
xor
and
outsb
sub
stos
fs
cmp
xor
sub
add
add
add
sbb
movsb
jbe
dec
out
lea
push
mov
add
mov
filds
je
cmpsl
inc
sbb
cmp
cmp
les
add
jmp
and
sub
int
push
fstp
cmp
inc
jp
mov
inc
fidivrs
loop
nop
pop
pop
dec
or
add
mov
fcomp
pusha
add
dec
xchg
cmpsb
fisubrl
add
int
or
js
xor
sbb
inc
lods
scas
xchg
cltd
test
xor
les
test
cmpsb
stc
call
pusha
and
cmpsl
ss
pop
mov
sub
lds
ret
sub
dec
pop
loop
mov
inc
dec
icebp
fisubrs
in
jge
inc
xchg
mov
fbstp
aaa
mov
add
mov
test
lahf
mov
les
scas
fistpll
loop
jg
push
push
cmc
add
add
rcr
mull
or
dec
add
filds
sub
lret
je
std
adc
in
aas
lea
lock
mov
popf
or
sarb
push
aam
cmpsb
idivb
sti
and
mov
js
leave
pop
mov
lret
fwait
pop
les
mov
movsl
scas
outsb
sbb
test
pusha
jg
insl
pop
addr16
dec
rcrb
out
adc
push
or
pusha
cltd
inc
testl
fsubrs
shll
push
xchg
jo
daa
lds
mov
loope
and
jo
pushf
mov
sub
aam
jne
mov
inc
jbe
and
cmpl
mov
js
cmp
pop
sbb
pop
mov
inc
idivl
adc
add
cmp
les
fnstsw
test
cmc
add
add
sub
clc
cmp
cmpl
pop
push
push
in
push
mov
push
sbb
xchg
arpl
add
shlb
int
jnp
adc
mov
ret
xchg
test
popf
leave
and
mov
dec
sarb
movl
push
sbb
pop
and
xchg
ja
and
std
mov
mov
lahf
insb
add
jb
pop
jmp
adc
jle
push
testl
or
dec
leave
add
push
ss
jb
sbb
xchg
cli
adc
adc
clc
cmp
push
adc
add
mov
jmp
icebp
outsl
jmp
out
jmp
fnsave
push
push
mov
xchg
ss
mov
cli
cmpsb
xor
pop
dec
lcall
push
rolb
add
outsl
lret
mov
out
incl
arpl
shlb
or
add
add
add
pop
ret
imul
cmp
mov
ja
cwtl
sarl
pushf
daa
add
cmovno
sbb
and
xchg
stc
mov
adc
jnp
sub
mov
adc
pop
imulb
out
cmpb
ss
add
in
mov
flds
add
inc
test
jbe
dec
es
lret
xor
add
inc
pop
addb
stos
rolb
cmp
or
mov
ret
jecxz
cmc
insb
iret
fdivl
mov
and
lea
int
jl
movsb
ret
repnz
adc
faddp
inc
sub
push
xchg
int3
cmp
leave
push
cmc
in
cmp
pop
mov
sbb
mov
push
les
ss
sbb
sahf
mov
dec
push
mov
inc
lods
adcb
lea
add
add
repz
cmp
lods
repz
in
pusha
out
mov
aaa
mov
cmc
add
add
mov
push
js
sarl
int3
sbb
dec
aaa
and
sti
scas
xchg
or
and
push
lock
lea
add
ss
jno
mov
in
push
fs
je
fdivrl
adc
shl
pop
loop
mov
insl
adc
cs
mov
clc
subb
insb
or
shl
bound
xor
xchg
xchg
data16
push
lds
je
push
fcomip
pushf
leave
out
mov
cmp
subl
sbb
js
or
xchg
sahf
dec
adc
aad
popa
push
lret
sbb
cmp
cmpsb
sub
xchg
outsb
adc
iret
sbb
fcomip
repnz
xor
mov
mov
lock
loopne
pop
rclb
filds
xor
push
add
movsb
push
scas
push
dec
in
dec
inc
fidivl
cmc
movsl
add
add
daa
push
cld
push
std
jmp
push
jg
push
repz
xchg
mov
cmc
add
add
sub
adcl
test
mov
inc
les
imul
imul
in
out
jne
and
lret
jo
add
and
stc
cmp
dec
push
mov
jge
ret
movsl
add
pop
repz
jecxz
movsl
mov
cmp
jae
xor
in
ret
cmc
pop
movsl
call
adc
pushf
rclb
sar
repnz
sub
sahf
sbb
std
cmp
daa
push
shlb
popa
dec
and
stos
call
repz
call
mov
cmpsb
in
and
mov
das
stos
repz
arpl
cmp
ret
mov
dec
xor
cmpsb
jecxz
and
dec
fadd
pop
mov
sbb
dec
jnp
inc
fcmovnb
or
lock
adc
jo
cmc
xchg
mov
xchg
hlt
push
sbb
xor
xchg
add
add
sbb
dec
push
cwtl
adc
dec
add
cmc
add
add
and
ficompl
cmp
imul
in
adc
or
stos
cmp
dec
loopne
adc
push
es
clc
adcl
push
and
xchg
sub
fisttpll
push
test
dec
xor
push
mov
jge
mov
fs
fs
imul
out
in
test
das
jns
in
fwait
ds
test
scas
sahf
das
outsl
jbe
mov
push
xchg
outsl
push
enter
imul
adc
enter
sub
ss
mov
aam
cli
scas
leave
shr
pop
or
pop
loop
imul
pop
lret
iret
ss
push
push
and
inc
loope
loopne
enter
hlt
movsl
mov
sbb
int3
loop
and
movsb
jl
insl
inc
jbe
push
push
sbb
jb
pop
push
lret
mov
popa
inc
in
xchg
bound
add
stos
add
push
mov
mov
nop
inc
xchg
fisttpll
add
add
add
mov
cld
xchg
cmp
hlt
cwtl
rolb
push
inc
clc
pop
test
lods
lea
add
xlat
fcomp
ljmp
js
ss
jle
rcrl
cmp
add
pop
dec
testb
js
bound
xchg
mov
xchg
or
cmpl
loopne
in
cs
xor
add
out
dec
push
outsb
dec
add
fdivl
jns
dec
sub
test
mov
jns
enter
adc
and
jge
inc
and
cld
mov
jle
ret
mov
loope
in
clts
fs
xchg
mov
jg
ss
xor
push
pop
pop
adcb
mov
xor
fwait
sarb
jp
cmp
cmp
mov
sub
push
mov
cld
call
mov
or
lock
add
add
jg
xchg
lcall
hlt
rorb
add
add
add
out
addb
lret
ljmp
imul
jb
ret
lods
fabs
mov
hlt
sahf
rol
rcl
jo
pusha
push
xchg
push
pop
jle
sahf
aad
jg
add
test
mov
xorb
push
test
addb
into
mov
out
mov
bound
and
adc
xchg
bound
rcll
fnstcw
fistl
cmpsb
or
ror
daa
in
out
out
xor
jo
orl
or
aaa
jmp
lret
pushf
adc
sub
dec
or
add
cmc
dec
in
mov
pop
push
in
add
ficomps
imul
jo
out
mov
loop
movsb
or
imul
xor
push
mov
out
push
jbe
add
and
dec
lret
jmp
imul
xchg
aad
test
jnp
dec
add
cmc
add
add
inc
sbb
mov
mov
psrad
bnd
push
push
lods
pop
pop
xchg
sbb
lret
pop
mov
loop
stos
dec
cmpsb
ficomps
push
xchg
or
cmp
or
das
iret
lret
cmp
push
outsb
loop
aam
fs
inc
cwtl
push
loopne
push
or
fdivrs
lea
push
adc
out
mov
shll
cmp
xor
ret
leave
xchg
xchg
cmp
push
jb
mov
stos
test
or
enter
sbb
inc
ficoml
test
push
push
pop
es
sbb
mov
sbb
aas
xor
sub
sub
and
mov
outsl
dec
adc
push
push
push
clc
aam
or
das
mov
mov
mov
jp
push
jl
push
or
pop
lds
jne
mov
sbb
add
add
cwtl
loope
std
jge
cwtl
and
pop
mov
mov
add
add
ss
fld1
jmp
test
inc
nop
enter
jl
loopne
lods
cli
dec
pop
dec
inc
or
scas
mov
sti
push
dec
aaa
jle
mov
xor
push
sbb
mov
dec
test
faddl
sbb
or
jg
push
aam
mov
jmp
mov
sahf
mov
notb
push
aaa
sarl
dec
lahf
in
popf
mov
xchg
sbb
fiaddl
scas
ljmp
lods
jg
lods
xor
aam
dec
arpl
dec
push
sbbl
mov
pop
lahf
sub
dec
add
cltd
xchg
test
inc
outsb
lock
repnz
call
rcll
xor
sub
ret
js
ret
push
sbb
xor
xchg
push
pop
fsubr
xchg
mov
sahf
lcall
pop
pop
cld
mov
pop
mov
sbb
add
sub
jns
clc
mov
or
mov
add
add
add
jnp
inc
and
or
mov
cmp
or
testl
lret
repnz
add
mov
fdivrl
xor
loop
pop
test
adc
rcll
or
sbb
push
jl
sbb
dec
adc
and
mov
add
sbb
adc
nop
jnp
mov
lahf
cmpsl
repz
xchg
push
dec
mov
jecxz
mov
cmp
jmp
test
movsb
pop
in
pop
adc
and
int
addr16
outsl
and
add
cld
shr
pop
or
inc
callw
sub
pop
cmp
idivb
popf
mov
pop
jge
out
fscale
mov
bound
inc
mov
mov
ds
adc
hlt
xchg
scas
lods
pop
xlat
mov
popa
push
cmp
xlat
imul
div
cmovb
mov
mov
js
ret
jg
mov
cld
dec
lret
add
cmc
add
add
sbb
cmp
ficomps
cmpsl
mov
push
lahf
fsubr
or
lods
cli
mov
sub
sub
adc
pop
adc
adc
xchg
ret
push
pop
inc
lds
xor
insb
xor
mov
icebp
data16
mov
jno
and
mov
sahf
cld
or
lods
dec
adc
out
aaa
sub
mov
test
lods
aam
dec
leave
add
daa
jle
addr16
arpl
dec
mov
into
lds
and
add
mov
sbb
mov
add
test
inc
aam
and
ja
inc
inc
mov
or
or
lock
test
in
or
push
sbb
rol
xchg
add
mov
xchg
xor
sbb
add
add
das
mov
cwtl
out
daa
lahf
stos
nop
fcompl
add
add
inc
fwait
jne
push
ret
add
xor
dec
divl
push
mov
clc
clc
out
jo
xchg
mov
pop
shll
dec
sbb
add
sub
sti
mov
mov
inc
das
add
nop
in
add
dec
icebp
iret
mov
pop
push
mov
loop
mov
imul
stc
inc
jo
mov
xlat
add
js
inc
mov
or
xchg
or
mov
rcr
inc
xor
sbb
arpl
xchg
dec
repnz
push
mov
and
pop
shr
movsb
or
jl
imul
fsub
and
inc
scas
mov
and
cmp
cmc
frstor
lods
cmp
adc
and
mov
rclb
sbb
dec
mov
mov
cmp
and
sbb
add
inc
icebp
hlt
gs
push
sub
jmp
add
add
pop
into
lods
jmp
mov
xchg
xorb
jl
gs
jne
addb
xchg
stos
pop
scas
loopne
push
rep
ljmp
aad
jmp
xorb
mov
ja
std
popa
aam
sub
mov
xchg
jno
mov
push
xor
in
jb
shl
cmp
sub
pop
push
mov
icebp
xchg
sub
add
inc
push
dec
ror
cmc
ja
outsl
addr16
and
inc
push
mov
jl
sub
and
pop
insb
test
pushf
push
jo
cmc
idivl
push
aas
jb
loopne
in
addl
movsb
sub
sub
dec
xchg
dec
jmp
and
movsl
fsubs
mov
mov
movsb
mov
xchg
aam
push
inc
test
xor
sbb
lock
in
sub
lfs
add
aas
gs
repnz
and
ds
mov
add
add
test
leave
fcmovbe
adc
add
and
icebp
sbb
push
jg
mov
arpl
xorb
testb
lahf
shlb
insl
mov
out
je
lods
shl
into
mov
xor
gs
inc
sub
ja
int
shll
sbb
pop
lret
dec
sahf
inc
mov
mov
call
shl
hlt
xchg
sbb
out
loop
xchg
cmp
and
shrl
inc
sti
cltd
out
jmp
imulb
les
andb
inc
pop
sub
adc
mov
stos
dec
enter
dec
gs
and
test
lods
popa
test
pop
or
adc
mov
mov
mov
pop
pop
mov
adcl
sbb
data16
adc
loope
mov
insl
inc
mov
mov
mov
loope
xchg
sbb
lret
add
add
out
fisttpll
mov
jp
add
cmc
add
add
nop
xor
xchg
mov
adc
cmpsb
cli
das
cs
xchg
shlb
js,pn
ja
fadds
in
scas
stos
loop
arpl
test
sarb
push
mov
out
push
cmp
leave
into
push
fwait
adc
dec
out
jb
add
xchg
sti
dec
divl
pop
movsl
push
scas
xchg
adc
mov
mov
sub
push
adc
and
loop
push
mov
mov
or
in
nop
inc
popf
adc
inc
xchg
xchg
mov
adc
lock
lods
jae
pop
xchg
ljmp
and
ljmp
xchg
pop
clc
cmp
cld
add
loopne
mov
lret
cmp
jl
jmp
cli
sbb
in
inc
lcall
sub
adc
lea
js
cwtl
fisubrs
or
xorb
add
fildll
mov
arpl
outsl
push
add
cmc
add
add
cmp
je
xchg
fstps
xchg
inc
pop
mov
dec
adc
vmwrite
inc
adc
aas
inc
rorl
int3
scas
das
movaps
int
xchg
sbb
in
jae
jmp
sub
shrd
mov
and
popf
jg
sub
add
add
jo
and
imul
pop
and
popa
mov
mov
sbb
icebp
cmpsb
sbb
fimuls
je
popa
inc
sub
xor
repz
lret
lahf
hlt
rcrb
outsb
xchg
or
sbb
mov
push
jbe
mov
fs
fcmovbe
mov
fucomi
jnp
jecxz
dec
cmpsl
iret
push
dec
fsincos
pop
fidivrs
xchg
out
in
aam
jo
hlt
loop
movsb
pop
sbb
cmc
adc
repz
xchg
sub
or
in
sbb
or
rol
mov
testl
mov
sub
add
add
jmp
out
aas
mov
repnz
pop
add
cmc
add
add
xorl
cwtl
lret
leave
movsl
outsb
jg
shrl
mov
sbb
push
ds
mov
imulb
pop
nop
jp
pop
jae
push
xchg
push
and
mov
gs
mov
loope
sbb
adc
mov
mov
testl
dec
imull
pushf
jmp
mov
sub
in
xor
adc
mov
repnz
lret
lock
or
mov
xor
mov
je
mov
jo
lock
pop
cmp
loope
movsl
mov
out
je
dec
xchg
pop
cli
xchg
sbbb
rolb
cltd
fwait
push
ret
sbb
pop
andb
jmp
jle
fs
push
mov
xchg
cmp
pop
jno
jp
push
or
mov
in
test
xchg
or
lret
test
cmp
imul
out
mov
arpl
pop
add
cmc
add
add
es
andb
cmpb
adc
popf
mov
imul
sahf
rcr
pop
jb
jb
mov
fdivrs
in
mov
mov
push
adc
add
or
ret
ret
xchg
dec
sub
push
xchg
enter
fwait
jge
in
rcl
test
inc
cmc
and
movsl
test
dec
int
loope
mov
outsb
je
ljmp
pop
test
les
jg
insl
xchg
cs
aam
pop
add
xor
cwtl
mov
push
add
xlat
leave
jmp
cld
cli
neg
fildll
sbb
xor
pushf
call
loope
xchg
or
popf
test
cltd
and
pop
sbb
daa
movsb
loope
cli
or
lods
inc
stos
mov
subb
nop
mov
das
dec
xchg
xchg
push
call
add
push
fiaddl
cmc
mov
add
add
dec
stc
mov
clc
add
mov
pop
add
cmc
add
add
add
out
push
sub
mov
icebp
jmp
mov
cmpsl
les
add
stos
hlt
pop
iret
aad
jl
test
cmpsl
xor
mov
mov
and
cmp
and
test
arpl
clc
adc
pop
insl
and
pop
mov
lahf
xor
cmpsl
cmc
mov
or
add
and
xchg
jmp
cld
shll
mov
inc
dec
add
cmpsl
bound
cmp
mov
jl
ret
out
pop
inc
pop
pop
scas
mull
ret
bsf
add
jmp
push
repnz
or
lcall
or
sti
add
xchg
pop
andb
cmpl
jnp
xchg
ret
rcl
aaa
movsl
jo
std
sbb
stos
inc
and
push
xchg
or
inc
pop
mov
cmpsl
mov
bound
and
and
out
mov
add
xchg
cmp
jle
jg
cld
jo
hlt
leave
popl
ficomps
inc
pop
add
cmc
add
add
jb
fildll
shlb
lret
ret
clc
repz
cmp
rcl
sbb
dec
mov
inc
dec
pop
push
fwait
lahf
mov
ror
sarb
inc
pusha
inc
adc
jmp
sub
ret
outsl
sbb
pop
jmp
popf
ret
gs
sub
sbb
lock
xchg
ror
lods
scas
pop
and
sbb
inc
pushf
fsubs
pop
sti
ja
xor
adc
mov
sbb
cmpsb
adc
out
mov
xchg
data16
lds
ret
shlb
mov
sub
adc
shl
icebp
imul
xor
sbb
sti
sbb
jae
push
sbb
sbbb
lock
lds
jo
lahf
mov
push
jg
xchg
push
sub
cmp
inc
inc
daa
mov
mov
add
xchg
mov
mov
fiadds
add
add
add
push
cmp
xchg
imul
out
xchg
sahf
pop
mov
mov
js
dec
sbb
aad
cltd
sbb
int3
push
sub
ss
xchg
ret
push
adc
lea
pop
adc
cmp
mov
jp
test
jne
repnz
in
incl
dec
jo
push
imul
mov
adc
ljmp
cmpsb
jmp
cmp
xchg
xorl
xchg
pop
inc
push
push
and
test
mov
inc
mov
repz
sarb
push
data16
clc
hlt
mov
subl
push
insb
lahf
sub
adc
inc
pop
cmpsl
out
mov
pushf
mov
stos
mov
and
and
cmp
inc
jb
insb
pop
sbb
data16
pop
imul
mov
add
or
mov
rcrb
push
pop
add
cmc
add
add
dec
std
ret
lods
faddl
jbe
push
xor
xor
fdivr
mov
and
adc
stc
mov
std
add
hlt
sub
jl
add
fildll
sub
scas
loopne
stc
subl
icebp
jb
addr16
fwait
shrl
sub
and
push
mov
adc
out
cmp
clc
xor
pop
inc
pushf
jl
xchg
bound
insb
testl
adc
cmp
arpl
fwait
js
loope
mov
hlt
movsb
cmp
aaa
pop
test
mov
out
out
jle
xchg
ss
fldcw
mov
loopw
jb,pn
and
test
inc
mov
inc
ja
adc
add
aam
in
push
pop
ds
out
mov
jge
add
fsubrl
mov
out
cmp
dec
maxps
push
lret
add
cmc
add
add
and
loope
push
pop
gs
jmp
xor
es
pop
loope
lahf
push
aam
fstpl
cmp
sub
jg
mov
cs
stos
push
or
mov
mov
stos
stos
mov
and
stos
fwait
sub
adc
dec
insb
inc
or
push
outsb
mov
clc
sub
push
es
xchg
adc
xchg
loopne
scas
push
push
xchg
movsl
scas
cmp
pop
mov
xchg
nopl
pop
imul
cmpsl
hlt
cmp
sahf
inc
enter
call
mull
pop
push
lea
or
pop
into
adc
add
sbb
and
stc
sti
cmpb
call
push
in
aas
data16
cmp
xorb
bound
or
je
sbb
bsr
hlt
into
xor
loopne
cmp
fidivrs
add
add
push
shll
out
xchg
inc
push
adcl
add
cmc
add
add
xor
shll
mov
fisubrs
push
bswap
repz
mov
sub
mov
inc
js
or
in
sbb
fsts
addr16
lds
pushf
cmp
cmp
mov
dec
ss
inc
xchg
jle
mov
sbbl
push
adc
xchg
xchg
ljmp
out
or
add
es
mov
and
pusha
adc
dec
insb
pushf
inc
cmp
or
out
sarl
push
mov
cmpsl
mov
scas
rcrl
or
loopne
call
insb
add
sar
hlt
or
and
cltd
mov
insl
xchg
xor
daa
or
lods
push
pop
add
or
mov
push
aad
rol
dec
pop
jmp
xchg
out
add
stos
push
lcall
inc
and
jge
stos
push
or
add
cmc
add
add
pushf
push
pusha
add
or
daa
cli
adc
imull
or
aam
std
mov
jo
test
mov
mov
addb
out
mov
xchg
loopne
lret
jmp
negb
push
daa
insb
xchg
shll
mov
mov
xor
add
dec
mov
adc
xchg
adc
xor
mov
sbb
cmpsb
sarl
dec
mov
xchg
jno
sub
in
div
inc
lea
jecxz
sub
mov
adc
dec
cmpsb
pop
fstps
cmc
inc
xor
rcrl
test
cltd
jecxz
sahf
pop
and
push
xchg
call
das
cmp
pop
movsl
lret
neg
xchg
jo
sbb
outsl
aaa
jle
mov
in
xor
or
or
into
mov
xchg
rcr
dec
ret
lcall
aaa
mov
mov
add
add
jbe
idiv
imul
sbb
add
add
add
add
mov
add
push
xor
outsb
out
sub
mov
outsb
mov
iret
push
into
add
outsb
mov
inc
add
cmc
pop
xchg
xor
mov
in
int
mov
jno
fcomps
pop
call
xchg
int
mov
in
dec
sub
pop
jnp
jnp
mov
cwtl
push
shrb
outsb
pop
mov
aam
pop
popf
imul
mov
inc
repz
mov
aas
in
fwait
std
jo
push
mov
inc
inc
nop
int
out
pop
scas
mov
mov
cmc
xchg
inc
shrb
mov
dec
adc
aaa
inc
imul
mov
xchg
aam
xor
mov
mov
cld
pop
std
rolb
dec
out
xchg
pop
sbb
adc
add
jae
fwait
cmp
dec
data16
addr16
xchg
mulb
add
add
add
out
or
or
jno
cwtl
mov
inc
pop
stos
clc
iret
sbb
and
std
in
pop
xchg
andb
scas
pop
leave
fstpl
push
xor
sbb
pop
cmp
push
inc
movb
jne
out
xchg
sub
jecxz
je
loope
cli
jno
adc
push
call
xor
scas
es
cwtl
leave
mov
cmp
adcl
dec
out
xor
insb
sub
inc
xchg
adcl
repz
and
int3
and
rclb
dec
mov
fldt
scas
icebp
sub
stc
sub
lods
xor
adcl
mov
gs
fsubl
sbb
adc
in
ret
xor
cltd
and
pop
xor
sarb
fmull
sbb
pop
cmp
stc
int
repz
push
lahf
xor
add
clc
mov
or
int
jmp
add
cmc
add
add
imul
cmpsl
inc
mov
mov
add
int
or
push
popf
pop
outsb
push
and
xor
cmp
popa
push
nop
cmp
jl
arpl
out
sbb
and
jl
inc
cwtl
daa
fisubrs
pop
insl
sub
ja
out
mov
add
pop
sti
leave
add
sub
or
jae
out
popa
mov
push
xor
sbb
stos
xchg
inc
ficomps
push
or
fsubr
add
cmp
insl
dec
addl
xor
jle
dec
data16
lods
lea
mov
je
or
mov
inc
fwait
int3
add
icebp
or
rorl
mov
pop
jae
push
aaa
jbe
pop
nop
jg
push
mov
inc
mov
fxch
ret
out
fstps
insl
or
mov
outsb
mov
loope
call
sbb
sldt
add
shr
mov
rorb
add
add
add
ja
jg
mov
jns
xchg
gs
mov
inc
jb
in
cmpsl
in
lret
jp
shll
pop
lahf
rcl
stos
add
fidivs
mov
push
xchg
or
add
xor
divl
mov
in
push
hlt
pop
ss
mov
decl
dec
loope
mov
ss
mov
aad
add
xor
movsb
pop
sbb
and
sarb
sbb
add
xor
and
lods
inc
cwtl
and
rorl
imul
inc
jb
clc
xor
xchg
cli
jecxz
xor
sarb
push
ret
call
pop
push
cli
out
int3
dec
fcoml
pop
popfw
xor
div
pusha
cli
add
sti
mov
sbb
adc
xor
jge
jne
out
push
mov
arpl
push
push
sub
jns
pop
jo
movsl
add
add
mov
int3
rorb
fiadds
add
cmc
add
add
inc
mov
cld
das
dec
xlat
mov
sub
mov
dec
ds
out
mov
sub
mov
xchg
les
jnp
lret
push
sbb
push
into
mov
push
stc
imul
nop
inc
jb
adc
xor
xchg
add
aam
daa
fcompl
out
sbb
dec
mov
pusha
inc
fldcw
sub
jecxz
in
fwait
mov
fiaddl
xchg
mov
out
sbb
jecxz
cmp
mov
jbe
insl
pop
fwait
cmpsl
jo
xor
cmpsl
test
shrl
fidivl
enter
cmc
sbb
jecxz,pn
addr16
jmp
and
mov
mov
pop
rep
in
sub
repnz
pop
pushf
shrb
and
cmc
cmp
sbb
daa
imul
add
add
mov
cmp
sbb
cmc
add
add
js
inc
xor
scas
in
addr16
or
scas
dec
loop
sbb
ret
add
hlt
test
lock
cli
mov
hlt
xchg
dec
out
sbb
out
mov
call
lock
fimull
mov
enter
sahf
mov
xor
nop
mov
loopne
imul
loope
test
xor
int3
sbb
insb
out
fdivl
stc
test
aas
movsl
mov
pusha
ljmp
out
mov
xchg
movsl
dec
stos
js
sub
dec
or
pop
out
ret
add
loop
fcomip
ds
aad
iret
xchg
pop
inc
adc
jle
popa
and
pop
popf
hlt
test
cmpsl
in
add
inc
mov
inc
aam
or
inc
push
icebp
inc
test
sti
cld
scas
psubw
jno
sbb
pop
pop
xor
adc
add
add
movsb
jae
jnp
mov
lods
push
adc
sahf
sahf
lea
add
add
xchg
xlat
or
add
int3
mov
cld
ss
jge
push
adc
push
lret
repz
xlat
dec
mov
or
cmpsb
xchg
push
and
lret
scas
out
jnp
js
rcll
and
jmp
and
les
jns
pop
std
pop
adc
jp
test
adc
dec
shll
gs
das
add
ficomps
pusha
mov
inc
cwtl
int3
mov
cmp
jo
pop
cld
mov
push
insb
and
cmp
fsts
and
mov
ds
dec
decb
mov
jp
push
xchg
xchg
mov
sub
mov
in
lods
and
jae
mov
xabort
movsl
xchg
in
sub
dec
cmp
cmp
sub
movsl
add
add
xor
mov
and
mov
add
cmc
add
add
lds
movsl
rolb
add
xor
cmp
movsl
or
bound
dec
pop
scas
and
lock
outsl
mov
mov
clc
into
add
inc
cltd
aaa
mov
mov
in
inc
insl
cmp
outsb
in
in
adc
inc
mov
js
xor
sub
inc
popf
mov
enter
mov
xchg
loopne
jnp
int
lcall
fildll
fnstsw
xchg
push
cwtl
mov
mov
iret
or
mov
push
push
jecxz
pushf
jle
fwait
out
adc
sbb
jno
lods
shl
xchg
insb
jge
lcall
jl
rcr
int
adc
pop
push
adc
lock
in
addl
stc
xchg
mov
vmovhps
fsubs
push
es
std
in
adc
add
mov
scas
sub
mov
add
cmc
add
add
xchg
cmp
pop
fidivrl
xor
scas
repz
fstpl
mov
push
imul
bound
push
fstps
mov
ds
add
pop
mov
sub
std
pop
aas
lret
int
mov
dec
jle
cmp
lods
cmp
inc
mov
mov
lret
popa
sbb
pop
out
pusha
adc
repz
ret
cwtl
sub
sub
push
pop
pop
sarl
mov
enter
int3
sbb
add
pop
std
in
inc
fidivrl
inc
or
test
movsb
lahf
pop
dec
sub
test
cwtl
sbb
sbb
call
jno
lods
inc
and
mov
xchg
es
lods
add
cmp
out
mov
pop
cwtl
loope
movsl
xchg
push
shll
and
or
cmc
add
add
push
into
push
cmp
sub
inc
xor
sahf
imul
add
mov
xor
mov
lods
mov
cmp
sub
das
cmp
push
ss
sub
int
dec
dec
lcall
pop
pop
outsb
cmp
sbb
xchg
mov
sbb
fsubp
xchg
popa
sbb
mov
movsl
in
daa
xor
stc
int3
aas
ret
dec
insb
std
xchg
aaa
test
les
ss
leave
flds
in
push
inc
stc
mov
pusha
sbb
aas
por
fisubl
lahf
ja
pusha
leave
loope
mov
pop
in
jbe
js
sbb
add
mov
shrb
pop
xchg
push
sarb
and
ljmp
in
sub
push
stos
mov
aas
orl
cmp
sbb
andl
cmp
int3
or
add
and
mov
fisttps
jo
jne
jne
push
add
add
add
movsb
jmp
div
cs
dec
cld
push
push
dec
lock
jle
testb
and
fisttpll
arpl
push
or
movsl
lods
pop
adc
jno
fmull
aaa
and
mov
cvttps2pi
or
or
mov
dec
xchg
sbbb
sbb
int
mov
in
pop
int
push
mov
sub
fsubl
xchg
stc
rcrl
and
jbe
rorl
pusha
jle
clc
aam
dec
stc
dec
insb
jl
movsl
mov
jno
hlt
dec
mov
mov
adc
dec
loop
lahf
test
xchg
scas
pop
add
cmp
int
sub
out
insl
leave
sbbb
mov
push
sbb
aas
mulb
pop
scas
push
scas
or
lahf
cmp
xchg
nop
push
sbb
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
bnd
mov
mov
add
add
add
sahf
jmp
sub
mov
and
fwait
push
ja
adc
sub
fsubrs
pusha
xor
pop
jno
xor
cmp
arpl
mov
xor
and
insl
mov
cli
in
jl
jle
je
fcmovnb
sub
jp
lahf
pop
movb
and
adc
jne
es
dec
adcb
sub
push
cmp
sarb
xchg
gs
cmp
sahf
cltd
out
incb
test
push
repnz
pop
test
and
call
insl
push
dec
stos
push
mov
repz
dec
shll
pop
inc
fmulp
imul
xor
aad
sub
pop
inc
jns
jae
inc
xchg
in
inc
rcr
or
or
cmp
jle
mov
sbb
ret
cmp
push
push
aam
in
in
out
or
jno
popa
outsb
lock
add
idiv
jg
data16
aad
test
jge
add
cmc
add
add
loop
push
push
hlt
mov
sub
insb
mov
dec
push
xchg
ret
std
xor
mov
push
push
fs
loope
cs
int
lret
icebp
cltd
pop
nop
stc
clc
aas
and
pop
pop
push
in
xchg
popa
xchg
jnp
and
inc
fisubl
mov
cmpsb
lcall
fidivrs
outsl
pop
dec
add
push
jb
nop
cmp
adc
jns
push
call
popf
mov
in
jns
enter
out
loopne
aas
out
cmpsl
cld
cmp
cltd
insl
pop
push
jae
stos
sbb
or
cmp
mov
in
jmp
bnd
pop
outsl
in
fwait
mov
cwtl
xor
xor
jmp
shrl
imull
sub
insb
icebp
or
fmul
das
sub
cli
jnp
mov
and
and
add
inc
pop
mov
movsb
inc
gs
add
insl
add
cmc
add
add
nop
stc
ljmp
or
jbe
push
mov
je
dec
sbbb
or
cmp
and
cmp
push
insl
sbb
inc
jle
xchg
mov
cmp
xor
test
pop
cltd
mov
jl
push
dec
lea
loop
ficoms
sbb
jo
rcll
mov
push
dec
rcr
sub
xchg
mov
data16
pushf
fidivrl
outsb
loope
sbb
xchg
xchg
outsl
and
jo
addr16
mov
fsubs
aam
inc
mov
add
fwait
xchg
clc
jnp
adc
inc
sub
scas
rorb
or
imul
and
sahf
jmp
adc
push
inc
insb
inc
pop
jmp
jno
mov
cmp
cltd
lods
add
mov
lock
add
repnz
movsb
jle
mov
adc
outsb
add
cmc
add
add
push
ret
cwtl
mov
mov
sbb
xor
or
cmp
lds
cmpsl
mov
rcrl
outsl
jbe
sub
lret
test
lods
mov
dec
rcrb
std
bound
out
cmp
fsts
bound
fstps
outsb
stos
ljmp
sub
cmp
xlat
rolb
xorb
dec
push
in
mov
insl
push
cmpsb
in
not
jno
add
or
mov
jp
xor
outsb
pop
scas
xor
push
pop
int
jns
mov
loopew
les
shlb
sub
pop
xchg
cmp
xchg
bound
outsb
sahf
pop
add
pop
add
lret
mov
outsl
sub
clc
ljmp
gs
xlat
pusha
clc
aad
lods
insl
push
enter
add
stos
sub
stos
out
jmp
sub
xchg
xor
pop
outsl
add
cmc
add
add
in
das
cmp
inc
into
cltd
testl
mov
mov
xchg
jg
popf
jl
push
fdivl
out
repz
scas
ret
jbe
xor
xlat
daa
sub
addr16
in
inc
adc
popf
pop
popf
gs
mov
xchg
je
lea
push
fcompp
cmpsl
cs
mov
shl
les
fnstsw
loop
vpmaddwd
lods
outsb
add
and
and
data16
push
push
mov
push
jge
movsb
pop
pop
or
mov
add
in
pusha
movsl
inc
inc
js
lahf
pop
xor
bound
scas
ret
imul
gs
movsl
js
test
pop
andb
addr16
and
cmc
shrb
and
pop
cli
pop
or
popa
sub
fs
push
push
mov
or
jbe
pusha
cli
adc
mov
insl
dec
lods
out
aam
movsl
in
sub
push
addl
add
shll
fnstenv
cmpsl
xor
add
cmc
add
add
cld
fiaddl
and
mov
je
cmp
out
cmpsl
add
sbb
ljmp
adc
fdivr
fildll
ss
cs
mov
cs
popa
pop
lret
repnz
sbb
jae
push
push
or
pop
mov
push
sub
ljmp
xchg
rcrl
loop
sbb
add
pop
popa
orb
xchg
out
jne
sub
dec
lcall
or
push
fs
mov
ret
jp
and
xor
stos
pusha
rclb
andb
lea
and
mov
jo
daa
dec
dec
xor
mov
sbb
xchg
les
add
daa
cld
sbb
xor
pop
ljmp
dec
inc
mov
push
aad
jo
add
add
cld
je
jbe
jmp
lea
xchg
test
pop
sub
add
cmc
add
add
sub
add
mov
mov
scas
mov
out
mov
adc
cmp
push
push
push
mov
cmp
push
insl
and
lods
inc
roll
ja
mov
icebp
sbb
cmpsb
dec
scas
add
mov
dec
smsw
sahf
pop
jne
shll
mov
ljmp
mov
mov
inc
ds
daa
mov
dec
in
mov
add
sbb
aaa
adc
flds
rcll
sbb
pop
mov
int3
ret
pop
movb
test
shlb
and
jge
loope
nop
and
dec
shrl
aad
adc
arpl
outsb
xchg
mov
das
fidivrs
icebp
xchg
inc
push
or
jo
ret
test
mov
rol
scas
outsb
jne
rolb
lock
add
add
cltd
jmp
fcmovnbe
cld
xor
xchg
push
out
cmp
add
add
add
jns
xor
test
insl
scas
outsl
dec
dec
pop
sbb
out
mov
jb
cmc
inc
rorb
pop
push
cmpb
out
mov
dec
cmp
mov
sahf
sar
jb,pt
dec
inc
in
adc
mov
movsl
lods
lods
das
cmp
push
gs
jecxz
inc
add
xchg
jmp
cs
inc
push
push
inc
or
cmp
mov
xchg
push
sub
sti
pusha
pop
dec
popa
jmp
sbb
and
mov
outsl
mov
cwtl
dec
lret
adc
push
test
loopne
xor
xchg
ficomps
cmp
arpl
rorb
inc
in
dec
xor
pop
add
xchg
ror
xchg
out
add
mov
mov
push
jg
pop
jne
xchg
and
xor
add
add
add
js
pop
icebp
stos
cmp
xor
jecxz
sub
aad
push
mov
add
loop
faddl
inc
add
iret
nop
pop
cmp
cmpsl
xchg
dec
ret
lahf
movsb
xchg
mov
fsubl
and
adc
inc
imul
minps
mov
add
lcall
mov
out
sbb
add
mov
jmp
mov
pop
adc
push
inc
mov
sarl
push
sbbl
add
push
outsl
inc
xor
jne
sbb
mov
or
or
dec
cli
push
daa
ror
inc
repz
nop
cld
repnz
xchg
inc
out
jg
mov
fiadds
jecxz
shl
inc
popf
clc
pusha
sbb
cltd
jmp
lds
pushf
mov
or
cmp
mov
sbb
sti
sub
add
iret
mov
fucomip
addr16
push
lods
and
add
add
in
adc
mov
mov
sbb
pslld
cmp
cs
xor
sub
lahf
aaa
repnz
xchg
sub
mov
mov
aam
dec
dec
fldl
cltd
push
inc
inc
and
and
add
jmp
inc
xchg
inc
outsl
jmp
fistpl
fucomi
adc
cmp
sub
xor
orl
jl
mov
adc
nop
xor
jae
test
mov
jmp
fdivs
loope
sub
nop
pop
dec
in
rolb
push
mov
ja
std
mov
jbe
dec
inc
push
fldenv
xchg
mov
leave
jmp
mov
dec
push
out
mov
repnz
mov
out
dec
cmp
testb
push
inc
sub
sahf
daa
lods
inc
repz
or
add
add
dec
out
iret
jmp
cmpsb
add
imul
add
cmc
add
add
popf
fcmovb
dec
or
jge
fisttps
pop
int
cmp
jo
je
ret
cli
xchg
push
mov
mov
lds
add
jbe
push
xchg
inc
ss
jo
xchg
mov
outsb
xchg
or
ja
nop
push
outsb
daa
mov
jge
add
loop
push
or
xlat
shll
xchg
insb
dec
jmp
mov
add
push
mov
jmp
sub
mov
jp
and
mov
daa
or
in
push
fwait
push
insl
cmp
cmp
loop
stos
lods
lods
aas
repz
rcll
push
xor
aas
push
sub
sti
mov
push
pop
xorb
movsl
in
lods
daa
insb
enter
adc
shrb
sbb
xchg
nop
fiaddl
ja
cwtl
bound
popf
fstp
sub
add
arpl
add
add
std
cmpsb
pop
lods
jne
xchg
f2xm1
ret
push
pcmpeqd
add
add
add
sbb
dec
enter
jb
push
push
cmp
pop
add
adc
aad
adc
stc
lret
and
jbe
or
sahf
xchg
popa
mov
xor
clc
and
push
rorb
push
fnsave
and
jno
arpl
mov
add
arpl
lret
dec
cli
inc
cmpsb
cmp
lahf
and
xlat
xchg
jb
jbe
lea
or
sahf
inc
xor
xor
inc
pushf
stos
jp
sbb
orb
jae
push
add
popa
imul
in
mov
add
inc
cmp
jmp
lcall
pop
pop
inc
or
pop
aad
sahf
imull
mov
mov
loopne
into
mov
imul
sub
rclb
mov
sbb
sbb
jns
enter
adc
add
in
lods
imul
neg
std
stc
idivl
outsl
add
add
cmc
add
add
add
xchg
pop
out
xor
mov
xor
sub
xor
enter
jecxz
and
xor
mov
mov
mov
mov
ljmp
iret
outsl
pop
inc
adc
negb
insl
xchg
test
orb
sub
push
lahf
inc
cmp
scas
xor
or
movzwl
jno
cmp
jecxz
add
or
sbb
scas
stc
lods
dec
movsl
jge
in
test
cs
xchg
jnp
cmpsb
in
jp
sbbb
dec
fprem1
nop
xchg
inc
mov
arpl
cmc
rorl
inc
int
push
inc
pmulhuw
movsb
dec
shrl
popa
push
xor
lods
cmp
xchg
sub
das
or
ljmp
inc
andl
sub
add
cs
mov
jnp
stc
ja
add
add
add
iret
xor
int3
jecxz
lods
int3
imul
push
scas
push
mov
jg
xor
loop
mull
sbbb
ss
repnz
ret
jns
xor
rclb
inc
xor
pop
roll
dec
sahf
movsb
jp
imul
shl
icebp
pop
lret
pushf
dec
fadd
popa
out
sarl
sub
sti
xor
push
cmp
push
inc
fnsave
out
adc
dec
cmp
xor
jnp
jge
out
scas
stc
test
in
xlat
gs
and
mov
rorl
sarb
mov
clc
test
dec
into
leave
cmc
adc
into
int
mov
xor
mov
cli
xor
add
out
les
adc
pop
addr16
jo
jb
push
push
ss
adc
scas
faddl
push
std
or
add
lcall
out
dec
jg
aad
sub
add
add
add
xchg
jns
adc
dec
outsb
and
jp
jns
ret
test
mov
cs
jmp
push
lds
mov
sub
lods
mov
clc
sbb
je
ljmp
inc
add
push
cmp
xchg
cli
scas
outsb
fistpl
push
ljmp
iret
push
sub
fwait
mov
cmc
pop
jno
mov
push
popa
lods
add
push
nop
xchg
and
mov
cld
shrb
mov
xchg
add
fmuls
pop
xchg
add
inc
insb
mov
pop
xor
stos
inc
sub
inc
enter
mov
xor
mov
gs
lret
sub
sbb
mov
sub
lret
lods
push
add
das
scas
rcrl
cwtl
push
cwtl
cltd
jp
pop
mov
mov
mov
jl
imul
int3
pushf
das
das
pop
popa
mov
add
daa
sub
ja
mov
paddq
jns
add
add
add
rcrl
jge
bound
xchg
mov
sbb
pop
test
xor
rcrl
push
cmpsb
gs
sbb
jg
dec
es
push
lds
dec
loope
cmpsb
into
cmp
jp
imul
dec
jmp
and
and
sahf
add
sub
out
push
clc
ja
shll
loop
cwtl
fdiv
aas
out
xchg
pop
mov
stos
mov
xchg
jge
sbb
cmp
pop
adc
or
sbb
sbb
gs
aaa
popa
movsl
push
pop
loope
icebp
mov
push
loop
push
xor
je
fistpll
insl
xlat
inc
jne
xchg
push
in
popf
adc
mov
xchg
in
pop
jne
imul
adc
cli
fcmove
and
inc
xor
in
movsb
addr16
xor
mov
enter
cmp
inc
push
mov
dec
push
cwtl
push
mov
add
add
cmp
jnp
jge
xchg
popf
out
jo
fdivrs
add
add
add
std
xchg
data16
mov
data16
stos
dec
cli
adc
jp
cmp
es
das
repz
repz
xchg
mov
outsl
rorb
enter
push
xchg
pop
sbb
push
xor
shl
sbb
int3
call
sbb
jl
negb
push
movsb
inc
addr16
jne
int
jg
je
fstps
aad
or
or
push
dec
or
mov
mov
mov
outsl
xchg
bound
mov
in
dec
int3
bound
imul
decb
outsl
inc
dec
scas
pop
fwait
add
mov
aad
shl
rcl
push
inc
stos
xor
jae
ljmp
mov
jae
add
in
stc
sbb
pop
push
ret
push
ljmp
cmp
lret
sub
je
sbb
or
lret
cltd
mov
mov
add
add
cli
xchg
jle
mov
mov
lret
int
add
cmc
add
add
addb
imul
movsb
mov
jl
sahf
and
fistps
or
mov
sbb
jne
xchg
or
xchg
or
jno
mov
adc
pop
mov
push
ret
in
fwait
incb
jp
mov
mov
es
shrb
mov
pop
xchg
sbb
jno
in
bound
movsb
xchg
iret
stos
and
pop
push
mov
adcl
dec
mov
in
sub
cmp
in
jno
sbb
dec
push
push
rcl
or
popf
xchg
pop
fidivs
jge
scas
fdivs
daa
maxps
stos
and
and
inc
rolb
xchg
popf
nop
imul
add
push
xchg
movsl
scas
fmuls
cmp
rcrl
lret
loop
push
lea
lds
fucomip
lret
aas
push
sti
inc
outsl
frstor
aad
mov
or
inc
aaa
dec
fwait
jnp
aad
gs
into
add
push
pop
mov
add
cmc
add
add
add
mov
push
inc
push
shll
fisttpll
stos
mov
inc
lods
push
push
xor
ret
jae
xchg
jo
outsb
and
imul
cmp
xchg
xchg
adc
xchg
mov
jle
outsb
insl
clc
in
cld
push
pop
aaa
jbe
xor
shlb
and
push
in
dec
out
movsb
dec
pop
aaa
lcall
dec
pop
addr16
push
adc
push
ret
mov
repnz
stos
push
int
sbb
push
add
fdivs
fiadds
cmc
sbb
mov
mov
xor
jecxz
cltd
scas
cwtl
jle
test
imul
mov
push
xor
out
pop
lret
bound
and
add
outsb
jge
and
dec
pop
xchg
mov
pop
test
add
mov
std
mov
enter
mov
cmc
add
add
shll
xor
mov
insb
je
mov
lock
mov
imul
add
rclb
jecxz
xor
jecxz
into
dec
inc
leave
dec
ja
inc
fistpl
dec
jno
mov
xchg
daa
lcall
push
inc
sub
pop
mov
clc
pop
and
scas
out
hlt
mov
jbe
jmp
xchg
add
xchg
je
add
jo
lcall
push
sbb
and
pop
dec
stc
or
xor
add
test
xchg
addr16
icebp
scas
mov
add
and
test
je
mov
xor
xchg
in
repnz
sbb
sbb
pop
jns
xchg
cmp
scas
lock
mov
jo
imul
sbb
dec
ljmp
in
repz
add
fstl
out
dec
mov
mov
jle
add
add
add
test
xchg
sbb
aas
subl
in
lods
daa
rcll
ret
xchg
push
push
xchg
aaa
mov
and
fdivrl
push
mov
js
pusha
push
add
xchg
mov
or
lds
mov
pusha
jne
inc
les
test
sub
or
cwtl
or
inc
mov
pop
stc
in
lock
mov
cmpsl
sbb
ja
sbb
cltd
mov
insb
dec
jbe
pop
das
iret
imul
xlat
in
mov
push
aaa
dec
adc
sbb
leave
out
aad
in
cmpl
dec
test
stos
mov
mov
mov
mov
push
mov
mov
leave
popf
leave
xchg
arpl
xchg
xlat
xchg
dec
add
sub
mov
cmp
push
inc
dec
lods
hlt
add
add
bound
in
pop
test
mov
insl
mov
add
add
sbb
lret
sbb
int3
mov
xor
jl
fistl
in
stc
imul
dec
mov
pop
add
fsubrl
rolb
lahf
fstl
sub
mull
nop
cmp
dec
push
ds
in
jl
inc
sub
negl
jmp
pop
xchg
lods
lock
es
enter
out
xchg
cs
jmp
and
fisubrl
xlat
rorl
jp
sbb
xchg
dec
ror
jno
dec
in
and
mov
jmp
mov
xor
mov
mov
cmpsl
mov
push
pop
dec
cwtl
add
stc
nop
arpl
pop
or
pop
into
call
jo
mov
out
mov
mov
out
clc
cmpsl
sbb
fidivs
scas
inc
fadds
gs
adc
sbbb
jecxz
imul
mov
lret
add
divl
bound
push
xchg
addb
cmc
add
add
sub
pop
aam
shll
mov
hlt
lahf
jg
push
mov
es
lods
inc
movsb
loope
cmp
lods
mov
aaa
rol
mov
sbb
push
jno
negb
cltd
fwait
and
repnz
aam
ja
xchg
outsb
cmp
or
lret
test
pop
shlb
loope
mov
popa
jb
push
fs
adcl
cmp
fcomi
in
dec
sti
inc
loope
cmp
ljmp
mov
aam
sti
cs
dec
adc
icebp
sub
jmp
bound
xchg
pop
jno
addr16
mov
jl
sbb
jae
insb
xor
pop
movsl
cltd
jle
xchg
inc
add
cmp
fwait
sahf
jno
into
cld
dec
or
imul
stos
loope
inc
jb
adc
sti
mov
ja
sti
jnp
mov
leave
add
add
fisubs
mov
push
mov
sub
add
add
inc
jge
dec
hlt
pop
roll
mov
push
mov
scas
mov
mov
test
mov
jno
adc
sbb
je
xchg
xor
das
cmp
pop
je
mov
into
out
inc
mov
repnz
fdivl
les
push
cmp
mov
adc
fldl2e
outsl
xchg
inc
fmuls
xchg
lcall
push
sbb
sub
imul
iret
test
std
loope
xchg
push
stos
fs
das
in
xor
adc
shlb
stos
cmp
aad
mov
popa
lea
mov
xor
js
add
sub
outsl
dec
ja
push
mov
gs
aaa
fs
add
mov
xchg
adcl
je
push
sub
pop
lahf
inc
out
xchg
cmp
mov
es
clc
inc
lds
shlb
mov
xchg
cmp
cmc
add
add
int
sbb
fimuls
or
outsl
adc
imul
sti
cmp
push
lods
jle
sbb
sub
fmul
add
inc
jp
inc
ljmp
jbe
movsb
pushf
pop
mov
mov
stc
cmpsl
scas
addb
enter
aam
je
push
sarl
push
pop
pop
popf
inc
dec
push
jg
jp
cwtl
mov
xchg
lret
test
sbb
mov
xor
fstl
mov
insl
scas
out
jns
stos
sbb
mov
inc
aad
orl
xor
subb
jno
divps
ljmp
out
sub
cmp
sbb
sub
inc
mov
and
jns
lock
xor
push
orl
cmp
xlat
pop
sahf
push
ja
add
add
testl
aas
jne
add
cmc
add
add
dec
lods
fwait
inc
mov
loopne
mov
jecxz
sbb
cmp
inc
out
iret
imull
inc
stos
sbbb
mov
repnz
pushf
inc
inc
mov
jbe
fcmovbe
lahf
imul
jecxz
fildll
push
dec
xor
cmpb
or
test
fstpt
mov
inc
cli
fs
popf
pop
daa
xchg
sbb
pslld
push
mov
push
add
xor
cmp
xor
clc
ret
jo
xchg
or
inc
repz
pop
mov
push
scas
aas
cmp
add
jecxz
mov
add
and
adc
pop
pop
or
fprem1
cmp
push
pop
fistpll
sbb
test
shrb
scas
mov
sti
push
jp
paddw
call
fs
into
sub
mov
add
add
jo
ja
std
stos
lods
and
jae
lret
add
cmc
add
add
fcmovne
jno
jecxz
pop
es
mov
pop
mov
repz
jl
push
and
jle
inc
jbe
mov
stos
je
xchg
imul
movsl
shrl
lahf
imul
jecxz
lods
mov
push
scas
inc
cmpsb
sub
bound
add
stos
add
int3
pop
sub
int3
jb
mov
xchg
cmova
add
add
stos
add
add
aas
shld
outsb
cmp
add
rcr
outsb
pop
test
aad
sbb
dec
cmp
adc
repz
push
push
pop
or
pop
sub
jmp
ljmp
daa
sub
cmp
stc
mov
add
sub
pop
inc
push
stos
sub
dec
sbb
and
popf
rolb
ja
xor
add
cmpsb
arpl
je
jbe
and
add
cmc
add
add
sub
enter
push
xchg
test
dec
icebp
xorl
cltd
jbe
outsb
loop
mov
cmp
xor
sub
lock
stos
push
jo
mov
arpl
push
inc
mov
imul
push
pusha
push
rcrl
mov
push
sbb
lret
es
jnp
imul
jmp
add
inc
jnp
jl
adc
adc
testl
mov
pop
xor
fcomip
test
dec
xchg
clc
data16
push
psubd
repz
ret
repz
adc
inc
call
jmp
cltd
or
dec
pop
add
nop
movl
cltd
lods
mov
and
or
in
jp
xchg
or
lock
lods
add
mov
call
repnz
push
cwtl
movaps
push
fldcw
sbb
sub
int3
add
add
cmp
cli
mov
test
add
cmc
add
add
fs
jo
mov
jle
push
mov
and
cli
movsl
les
std
les
fwait
into
sub
fs
rolb
dec
cs
jl
cmp
clc
test
flds
test
mov
jnp
cmp
enter
xchg
fildl
orb
fiaddl
sarl
push
nop
xor
insb
adc
sahf
mov
in
push
sar
out
xor
mov
out
xchg
dec
movsb
sub
mov
dec
clc
lcall
pop
mov
xchg
jne
jle
fnstenv
pushf
adc
mov
jecxz
mov
outsl
pop
rorb
ljmp
and
cltd
ds
nop
insl
dec
xchg
pusha
dec
dec
fcoml
into
push
mov
pop
mov
xor
add
out
lods
stc
add
add
test
ljmp
daa
rclb
add
add
ret
nop
cmp
mov
icebp
or
add
push
inc
sahf
inc
lods
lahf
loop
mov
in
cmp
pop
dec
popa
mov
outsb
fcoms
pop
or
and
cmp
rcrb
mov
iret
cwtl
ror
movsb
xchg
jecxz
lods
mov
addr16
dec
mov
loopne
rolb
test
adc
repz
jl
jle
adc
rcll
xor
adc
pop
loope
in
pop
cli
es
leave
cmp
dec
cwtl
push
mov
mov
lods
std
jo
inc
mov
adc
xchg
dec
imul
adc
cwtl
and
sbb
adc
aaa
xchg
iret
out
add
mov
lods
je
lods
in
nop
lret
mov
into
jmp
out
orps
lods
push
shl
mov
ret
in
sbb
add
testb
test
test
mov
add
add
add
loopne
xor
pusha
xor
nop
loope
dec
clc
jmp
xorb
jo
int3
das
adc
stos
repz
leave
cs
cmpsb
cmpl
sbb
sbb
out
add
cmp
sbb
mov
jno
shr
adcb
lea
negl
mov
test
loope
jge
pop
adc
jecxz
mov
lods
adc
lods
pop
sub
adc
xlat
jno
sbbl
mov
dec
test
aas
pushf
adc
pop
mov
out
icebp
xchg
mov
insl
add
xchg
js
out
cmpl
enter
sbb
aad
fwait
aam
pop
sbb
mov
push
es
jecxz
cmp
mov
loop
mov
dec
dec
add
test
xor
add
scas
lcall
xchg
dec
lea
xor
add
fwait
or
mov
loopne
andb
dec
xor
sub
xchg
mov
push
das
lea
dec
push
lahf
inc
pop
dec
lret
push
lret
inc
cld
dec
mov
mov
adc
lods
outsb
loope
fs
xor
fs
cmp
add
inc
mov
iret
or
cmpsl
adc
fcomi
dec
cli
jbe
mov
sbb
addl
ss
cmpsl
cmp
jg
cmp
jno
popf
mov
aaa
cld
or
hlt
nop
js
sarb
inc
push
pop
cmp
jno
rsqrtps
ss
push
stos
adc
xor
int3
mov
push
es
sbb
stos
pop
std
jle
sub
std
cmc
and
jmp
jno
rclb
jmp
and
stos
mov
dec
mulb
stos
fldt
sbb
scas
rcrb
add
mov
idiv
fst
inc
sahf
pop
push
je
mov
cmc
add
add
push
sbb
js
out
popf
fisttpl
data16
push
jae
enter
insl
xchg
ja
cmpsl
cmpsb
insl
xchg
cld
and
push
out
xchg
mov
rcrl
neg
adc
adc
inc
xor
push
mov
xchg
divb
mov
or
pop
xchg
cltd
loope,pn
jecxz
pop
fdivl
pop
dec
ret
out
sbbb
jmp
sub
cwtl
fildll
jmp
sbb
jne
pop
push
movsl
div
stc
in
cs
pop
sub
and
ficoms
hlt
adc
insl
test
lcall
jl
ljmp
lcall
daa
push
popf
popf
roll
sahf
subb
push
dec
rcrl
pop
mov
pop
mov
jecxz
cmp
ror
je
stos
orb
inc
mov
stos
dec
addb
inc
clc
pop
cmc
cmpsl
adc
sub
mov
xchg
add
add
call
and
test
add
cmc
add
add
imul
hlt
push
rorb
lods
mov
cmpsl
je
lds
fldenv
es
test
inc
outsl
jmp
mov
shll
push
jecxz
mov
push
xchg
int3
sub
out
mov
dec
mov
cmc
and
mov
nop
push
lahf
dec
cmpsl
inc
pcmpeqb
out
mov
fisubrl
inc
dec
bound
lds
inc
xlat
sarb
mov
insl
sbb
dec
mov
adc
inc
push
in
ror
decb
xor
sub
or
pushf
les
cmpl
or
into
loopne
xor
test
mov
push
adc
ffree
aam
mov
jne
stc
jmp
push
cmp
mov
stos
mov
inc
enter
mov
sbb
mov
jbe
jne
incb
add
mov
jge
std
sti
iret
and
repnz
test
movlps
add
imul
aad
jnp
push
mov
dec
mov
and
jmp
js
adc
push
sub
incl
push
jge
andb
jnp
dec
stc
adc
call
rcll
sbb
in
mov
push
shlb
xor
jle
inc
dec
das
adc
xor
ja
add
push
lret
mov
popa
sub
popf
and
stos
std
mov
loopne
mov
in
mov
sub
sbb
pusha
mov
stc
or
andb
shrl
divb
ss
aad
mov
dec
pop
jae
out
add
in
jb
scas
test
movsb
push
jne
inc
imul
bound
setp
loope
adc
insb
test
subb
and
or
pop
icebp
arpl
pop
ljmp
andb
push
pusha
cwtl
les
dec
jmp
loopne
xchg
inc
lahf
sti
hlt
out
cmp
loop
sahf
pusha
inc
push
pop
lea
add
add
add
popf
sahf
testb
sbb
lds
popa
jmp
sub
sub
jnp
push
shlb
xor
fneni(8087
decl
push
push
fwait
int3
ja
pop
stos
inc
pop
xchg
int3
sub
and
mov
jg
push
dec
xor
aaa
into
popf
iret
ret
out
dec
leave
pop
rorb
nop
dec
jo
dec
pop
mov
scas
jns
mov
mov
mov
mov
int
mov
cs
in
push
fldt
jp
enter
mov
push
dec
push
xchg
pop
mov
dec
out
or
nop
push
insl
or
lcall
pop
int
fsubrp
fildl
push
xchg
dec
ret
out
fnstcw
push
mov
fistpl
pop
into
jp
xor
cltd
fdivr
inc
mov
inc
pop
lods
jnp
aam
fcomps
mov
mov
pusha
cmpsl
movsb
add
int3
ljmp
add
mov
mov
into
push
bound
xchg
cld
lea
add
add
add
mov
mov
xchg
sub
out
test
js
mov
mov
aam
and
mov
inc
aas
outsl
testb
pop
ljmp
xor
push
repnz
cmp
mov
mov
adc
fsts
dec
sbb
add
cmpl
mov
jmp
les
sbb
cmpsl
ljmp
in
push
icebp
or
sub
mov
add
jl
adcl
push
rcrb
addr16
pop
bsr
iret
xchg
xor
xchg
int3
lock
cmp
insl
add
lods
stc
xchg
insb
outsl
aad
mov
sub
pop
scas
fidivrl
push
adc
adc
loopne
xchg
pushf
fsubl
mov
fildll
adc
dec
imul
sub
ja
orl
inc
out
push
js
cmpsb
mov
add
add
pop
test
ljmp
jp
cmp
pop
flds
add
add
add
in
mov
adc
insl
xchg
std
add
pusha
add
aad
add
call
std
popf
push
jl
test
stc
pusha
imulb
or
sub
aas
into
inc
jecxz
or
and
mov
loopne
xor
in
add
lcall
or
jge
outsl
inc
jno
mov
enterw
mov
push
pop
lret
mov
loope
repnz
jne
sbb
push
nop
test
jns
mov
jge
in
cmp
rolb
adc
xchg
push
inc
mov
nop
push
mov
mov
repnz
mov
and
lds
movsb
or
xchg
cmpsl
roll
jae
ds
movsl
xlat
push
movb
aad
jae
test
xchg
dec
and
sub
jp
xchg
xor
hlt
pop
push
mov
add
arpl
jnp
sbb
xchg
sub
stc
add
cmc
add
add
ret
and
in
stos
mov
loop
imul
inc
xchg
cmpsb
jnp
ret
daa
hlt
rorb
and
fnsave
jg
jge
pusha
rclb
mov
sbb
gs
ljmp
test
mov
in
arpl
sub
sbb
xor
sbb
cltd
aas
stc
mov
mov
sarb
fwait
or
xchg
jo
xorl
data16
lret
push
repnz
mov
fucomi
xchg
add
loop
mov
fstl
iret
pminub
adc
out
imul
ds
adc
mov
ja
fsubrl
subl
test
fwait
mov
imul
xor
mov
cli
shll
cs
add
push
aas
or
mov
inc
mov
add
cmc
add
add
mov
xchg
sbb
das
jno
or
fmul
add
lods
out
jg
sbb
sahf
stos
mov
pusha
mov
repnz
jno
pop
arpl
cmc
fbstp
pop
mov
or
dec
xor
cmp
mov
xchg
xchg
pop
jae
jo
push
imul
pop
cmp
mov
test
xorl
push
fimuls
add
dec
and
aaa
gs
and
jl
ror
not
ror
inc
in
sub
in
shrl
xor
insl
pusha
fdivs
ficomps
pop
cmpl
in
sub
and
aad
in
xchg
and
xchg
jl
cmpb
faddl
jecxz
xor
aad
push
cmp
sbb
jns
fidivrl
mov
mov
push
push
mov
lods
add
add
push
outsb
fdivrp
sub
lcall
add
cmc
add
add
fstps
mov
cli
xchg
lret
push
xchg
push
retw
loope
cmpsl
fsubrp
pop
stos
loope
or
adc
jmp
into
pop
jns
loopne
das
cmp
arpl
mov
mov
adc
or
fnstenv
push
icebp
jno
lods
pushf
aam
mov
lahf
call
loop
xchg
dec
sbb
ret
push
adc
shlb
rorl
movl
inc
or
lahf
lea
scas
scas
and
cmp
adc
ret
sbb
les
jmp
packuswb
das
pop
pusha
pop
fwait
pop
dec
scas
sbb
inc
lds
out
sbb
and
stos
inc
out
out
repz
add
inc
cmovs
aaa
jne
imulb
xor
fistpl
add
sbb
pop
mov
mov
mov
xchg
pop
aas
inc
ret
mov
add
cmp
mov
in
imul
add
add
add
popa
sbb
fdivl
je
pop
fs
or
xchg
xor
jle
inc
cmpsb
inc
pop
cltd
push
sbb
pop
jb
clc
push
stc
jge
pop
push
ljmp
ret
enter
fs
push
imulb
jmp
jg
iret
lock
outsl
sbb
add
or
inc
sti
pop
pop
js
sti
sbb
dec
mov
sbb
aad
mov
xchg
cmpsb
pop
mov
cli
icebp
ja
adc
pusha
mov
or
mov
leave
sbb
sbb
dec
cmp
shlb
pop
aam
cmpsl
mov
mov
xor
push
mulb
ss
aaa
cmp
pop
and
sbb
pop
pop
xchg
aam
daa
mov
push
cmp
aad
mov
mov
rep
stos
and
and
mov
lods
push
and
pop
adc
add
dec
push
int
fstp
iret
push
lock
jmp
test
add
add
add
out
fistpl
pop
mov
jle
les
or
mov
popa
popa
mov
xchg
dec
out
push
mov
mov
insl
add
dec
in
pop
push
xor
dec
divl
jl
in
push
jnp
adc
sbbb
jle
bound
adcl
orb
daa
movsb
shr
scas
aas
pushf
adc
push
cmpsl
or
popa
arpl
pop
rclb
scas
out
sbb
ret
cmpsl
inc
dec
cmp
stos
inc
movsb
mov
adcl
out
xchg
jae
les
mov
mov
cwtl
pop
push
and
jmp
out
js
mov
dec
mov
cld
sahf
mov
xlat
aas
fs
mov
push
xchg
cmc
sahf
repz
mov
cmpsb
xchg
in
jmp
sub
int3
scas
push
mov
out
add
add
adc
std
sub
pop
mov
scas
xchg
add
cmc
add
add
push
jns
mov
push
pop
in
jne
mov
push
sub
rcrb
outsb
insb
outsb
loopne
inc
mov
mov
jle
push
xor
lea
adc
lret
aaa
fs
mov
pop
repz
lcall
adc
ss
mul
push
test
jb
xor
adc
enter
insb
pop
xchg
cmp
adcb
xchg
jae
inc
jo
inc
insb
or
add
es
jno
sub
xchg
push
add
popa
lock
int3
sbb
into
fwait
add
lea
push
mov
insb
jno
ljmp
das
add
pusha
scas
movsl
xor
jns
mov
sbb
mov
je
xchg
mov
jo
rolb
popf
jne
xchg
ret
std
add
call
out
xchg
mov
out
pop
xchg
orl
add
mov
push
aad
jns
xchg
add
cmc
add
add
sub
call
xchg
mov
or
add
add
jp
pop
arpl
es
dec
or
out
mulb
into
fidivs
lret
inc
test
popf
mov
sub
mov
scas
mov
add
sbb
cmp
loop
cmpsb
cmp
sbb
xchg
and
and
inc
push
into
test
jno
ret
ret
sub
sub
dec
sbb
or
jbe
rclb
jge
jg
scas
cmp
mov
push
cwtl
and
sbb
jecxz
add
add
xchg
loopne
sub
sub
divl
rorb
aaa
sub
inc
dec
xorb
or
fidivrl
aas
shlb
inc
xchg
sbb
je
repz
lahf
in
sti
cli
xchg
push
pop
mov
in
std
xchg
add
add
les
mov
pusha
or
add
add
add
sahf
dec
int
xor
pop
lods
repnz
loop
xchg
mov
in
lcall
orb
enter
mov
mov
xor
in
mov
push
popf
cmc
gs
cmp
fwait
adc
decb
push
jae
out
loope
sbb
js
sahf
xchg
dec
lods
add
fldenv
and
or
and
mov
cmc
jecxz
lahf
idivb
pushf
mov
dec
mov
pop
jne
jmp
addr16
pop
dec
adc
test
jg
int3
pop
xor
andb
lcall
scas
stos
adc
pushf
movsb
mov
repz
icebp
dec
mov
jecxz
mov
mov
nop
or
jge
in
test
push
pop
sub
mov
push
movl
lods
stos
jge
arpl
aaa
aad
mov
testl
add
ljmp
loop
dec
pop
nop
adc
push
mov
add
sbb
pop
push
mov
mov
dec
shr
ja
lahf
or
cs
clc
adc
sub
hlt
jg
sbb
aaa
push
std
ds
dec
mov
movsb
jns
data16
popf
ret
out
jae
inc
xor
mov
sbb
lret
mov
repz
or
out
in
addr16
pop
and
scas
cmpsl
aad
test
dec
jl
sub
jbe
aaa
sub
add
loop
xor
jnp
ljmp
popa
mov
push
shll
scas
cwtl
iret
inc
inc
push
fdiv
repnz
shrd
std
xor
ret
inc
mov
jne
mov
sbb
in
xor
das
loope
add
ss
or
push
lret
dec
fcomps
mov
dec
insl
push
imul
out
cs
adc
sub
and
aaa
shlb
cmc
div
rcl
inc
pop
push
mov
sbbl
add
in
push
jg
or
pop
lods
les
dec
mov
and
enter
imul
jmp
mov
scas
fsubl
push
xor
sub
or
popa
movsl
fwait
push
stc
mov
out
fisubrs
fmuls
xchg
or
xchg
pop
xchg
movsb
int
addr16
mov
push
es
stos
loopne
jl
dec
or
mov
mov
mov
daa
inc
xchg
aad
ja
mov
outsb
outsl
iret
aam
pop
bound
shl
jmp
scas
xor
jecxz
mov
ret
push
shl
push
pop
sub
cmp
cmp
pop
push
fdivrs
test
push
into
pop
daa
pop
jo
mov
adc
inc
fldcw
jo
sbb
jmp
gs
pop
lahf
add
sbb
xor
fisttpll
jg
fwait
inc
sub
add
add
push
sahf
rcr
pop
test
cmpl
add
sti
or
enter
xor
fsubrl
frstor
pop
lea
stos
adcl
or
xlat
aad
and
pop
push
cwtl
out
mov
lea
and
je
or
popf
std
sbb
sahf
inc
add
out
mov
pop
jl
sti
aas
pop
mov
out
int3
mov
jge
inc
push
ds
out
dec
repz
and
fsts
push
out
hlt
ds
gs
out
xlat
adc
add
call
fisttps
orl
add
jns
pop
daa
das
test
repnz
insl
arpl
popf
mov
loopne,pn
gs
dec
ds
lret
jmp
andl
shrl
push
jne
gs
in
pop
pushf
sub
mov
or
stos
dec
mov
int3
mov
mov
jle
sub
jno
mov
lret
lods
xchg
add
add
arpl
cmpsb
jcxz
jne
push
inc
cmp
dec
int
lcall
dec
mov
mov
jmp
std
scas
push
lret
xor
mov
push
adc
mov
fisubs
stos
cli
fimull
fwait
hlt
imul
push
pop
je
in
outsb
ds
vdivss
jp
mov
pop
cmp
pop
adc
out
adc
insl
ja
mov
and
dec
fisubrs
gs
mov
enter
outsb
cmp
mov
rcll
lea
les
pop
push
cmp
enter
sbb
sbb
mov
or
arpl
lahf
push
xor
fwait
adc
imul
mov
mov
jne
mov
sub
cmp
jb
jne
popf
xor
fldl
add
cli
dec
addb
bound
jns
ljmp
inc
test
add
cs
stc
sub
add
clc
jnp
jg
in
cli
cwtl
inc
mov
jg
outsl
mov
cmc
add
add
add
out
push
testl
push
xchg
pop
pop
or
or
lahf
xchg
mov
xchg
add
div
push
fstl
sbb
clc
push
imul
jp
mov
gs
aas
pop
adc
add
testb
and
imul
push
pop
sub
mov
add
mov
pop
mov
ret
popf
mov
xchg
ja
les
outsb
out
xchg
ret
ficoms
mov
aad
fidivl
gs
stc
and
lcall
gs
sub
mov
adc
or
mov
jne
xor
jne
sbb
push
inc
jecxz
roll
add
fsubs
outsb
xchg
jp
andl
les
leave
je
gs
xorb
add
ljmp
cld
inc
push
cltd
das
sbbb
add
add
add
pop
jp
adc
push
xchg
pop
sub
mov
loope
push
or
ja
xchg
jge
leave
out
rcrl
and
and
cli
test
jecxz
pop
mov
jle
stos
xchg
lcall
in
cmpl
and
repnz
mov
jne
xor
cmpl
fcmovu
loope
inc
fistpl
dec
cli
cmpsl
xor
lahf
div
stos
or
dec
jno
imul
imul
sbb
nop
fiadds
jmp
add
loopne
stos
mov
sarb
lahf
mov
add
cmp
scas
sti
ljmp
mov
push
push
in
test
or
cmp
mov
cmp
imul
movb
add
or
xchg
xorb
cli
jnp
ror
mov
es
mov
and
add
jl
sar
std
jle
loop
out
jl
stos
dec
popf
add
cmc
add
add
test
outsb
clc
lcall
push
dec
pushf
mov
sub
call
add
dec
cmpsb
inc
addr16
loope
push
test
in
lahf
lcall
lods
mov
ret
andl
stos
cmp
xchg
sub
jo
lcall
adc
dec
lea
jle
add
mov
clc
rcrl
dec
mov
cmc
fstl
pop
jle
or
shl
test
jbe
enter
jno
mov
add
icebp
mov
pushf
or
test
int3
cmp
fdiv
std
dec
jne
aas
fcmovnbe
mov
jns
inc
mov
jb
mov
add
in
ds
lods
cmp
add
movzwl
jno
dec
daa
mov
xchg
idiv
ret
cmp
loopne
cmp
outsl
cmp
mov
jle
mov
cmp
dec
sub
sub
inc
sbb
cmp
cmp
pop
outsl
sahf
jle
inc
sahf
add
cmc
add
add
rorb
stc
sarb
xchg
jmp
sbb
mov
mov
mov
sahf
jl
mov
adc
xchg
xchg
rcrb
adc
add
ja
push
pop
mov
mov
ret
lret
repz
frstpm(287
inc
pop
dec
sub
lret
jl
pop
in
jmp
cwtl
xor
or
das
repnz
or
in
test
mov
inc
pop
xor
movsl
or
inc
push
test
les
shll
push
adc
dec
jb
int
jmp
ljmp
jae
cltd
xor
iret
ds
in
out
lcall
pop
cmp
ja
out
push
and
lock
leave
push
cmpsb
pushf
lret
jmp
inc
pop
cmovne
or
push
jne
xchg
hlt
mov
mov
popf
orl
add
outsl
sti
into
aad
aam
imul
cmc
add
add
sbb
or
ljmp
and
pop
pop
mov
std
cmp
inc
rorb
in
popf
mov
inc
dec
pop
lahf
inc
jb
into
mov
sbb
in
mov
idivl
dec
sub
mov
mov
fistl
pushf
jmp
imul
mov
mov
aas
pop
fcompp
movsl
inc
push
xorl
ss
sub
mul
sub
push
fsubrl
ret
cltd
mov
loope
mov
jp
dec
fcompl
out
push
adc
adc
dec
stc
mov
sbb
aam
mov
dec
jae
out
loop
mov
sub
mov
out
orl
arpl
mov
lods
cmp
and
and
inc
xor
push
aad
mov
mov
fmul
mov
aaa
stc
ret
sbb
adc
imul
add
add
dec
std
out
xlat
aas
jle
ds
sub
add
dec
imul
test
xchg
or
xor
fdivrl
push
mov
sbb
xchg
adc
add
cmpl
into
int
std
cli
cld
lret
inc
mov
adcb
push
mov
ficoms
sbb
and
and
test
fs
xchg
add
and
fcmovnbe
nop
shll
movsb
sbb
cmp
mov
rorb
pop
or
loopne
add
fisttpl
sbb
mov
das
jg
add
inc
ds
mov
mov
push
lods
cmp
sbb
popa
leave
dec
test
jg
sub
push
push
mov
lret
enter
icebp
push
inc
adc
js
lret
push
mov
cwtl
fsts
fcoml
test
mov
jge
shll
lret
rolb
add
imul
outsl
popl
subb
add
add
add
lcall
out
mov
xchg
loopne
jno
mov
lcall
js
mov
aaa
and
std
testl
mov
xchg
popf
cli
dec
in
xchg
pop
gs
dec
adc
and
cmpsb
mov
call
lds
cltd
imul
popf
inc
mov
sbb
imul
xor
arpl
lret
lock
fsubp
es
push
adc
loop
push
lods
imulb
shrb
cli
or
jmp
or
add
xchg
ss
fs
stc
push
jo
jne
mov
aas
push
cmpsl
adc
ds
xchg
and
jns
mov
lret
ffree
pusha
mov
outsw
cs
bound
xor
imul
in
dec
mov
jno
add
adc
sbbl
mov
xor
add
cmc
add
add
xor
rol
mov
cmp
xchg
inc
sub
mov
test
fisttpll
jp
aad
bound
nop
mov
pop
pop
mov
sbb
jns
adc
les
shll
repnz
mov
imul
ret
pushf
shrb
mov
dec
push
sub
inc
mov
and
out
dec
jno
cs
lock
ss
test
mov
in
mov
sbb
mov
and
lret
push
outsl
sub
mov
xchg
stc
cmp
push
insl
jnp
rcrl
jns
les
js
push
rcl
ret
stos
dec
jge
dec
outsl
xchg
sbb
mov
rorb
fcoms
mov
aaa
jo
sbb
int3
xor
pop
or
fstps
dec
pop
movsl
repnz
mov
int
out
add
add
imul
and
or
xchg
movb
mov
add
push
jle
jge
or
insl
inc
fldl
clc
or
dec
into
ret
jae
fisttpll
fmull
adc
mov
sbbl
adc
shll
das
mov
mov
xor
xchg
rcr
add
mov
icebp
mov
jle
cld
jbe
scas
sti
aas
jne
loop
xor
jns
sbb
out
fs
mov
sub
dec
push
sub
aas
out
xchg
cmp
cmp
inc
leave
mov
cmp
xor
sub
in
movsb
movsl
push
jno
lahf
ffreep
pop
notl
mov
aas
xchg
repnz
xor
rolb
jbe
mov
data16
sbbl
lock
addr16
xchg
inc
add
sahf
dec
mov
out
push
cmp
gs
test
pop
filds
add
mov
jge
jg
decl
xchg
cld
mov
add
cmc
add
add
ljmp
cmpsb
ret
in
jge
aas
bound
fldcw
das
xor
inc
in
shlb
enter
sub
pop
jnp
test
push
sarb
fdivrs
repnz
cltd
loopne
add
outsb
shrb
nop
inc
xor
scas
fsubrs
mov
jne
add
cmp
call
cmp
insl
popf
fstl
jmp
lods
push
sbb
xor
imul
xchg
test
pop
addr16
pop
movntps
ret
mov
xor
mov
push
ljmp
dec
and
ret
or
sub
ss
pusha
dec
lods
mov
adc
and
insl
or
and
or
adc
pop
addb
jae
or
hlt
test
leave
jbe
in
mov
lahf
add
es
add
add
ja
out
das
mov
aam
fists
hlt
movsb
add
cmc
add
add
outsb
sbb
xor
push
push
mov
push
mov
inc
pop
in
test
in
clc
mov
pop
repz
popa
add
aaa
icebp
std
mov
add
out
jne
mov
mov
movsb
das
inc
stos
add
call
pop
mov
jmp
mov
sarl
or
pop
fcmovb
xchg
jnp
daa
shl
xchg
push
hlt
jns
sbb
push
sbb
cmpsb
dec
ds
jle
add
lcall
pop
aas
fmul
popa
loopne
and
sub
cmp
cwtl
fwait
sub
or
pop
xor
jns
add
mov
call
xor
and
mov
mov
inc
pop
add
je
in
sub
xchg
int3
xor
lods
mov
leave
and
in
loopne
jle
aad
popf
mov
xor
jns
mov
les
in
mov
xchg
add
add
pusha
test
mov
pushl
add
add
add
not
hlt
je
pop
adc
jp
int
das
stos
fdiv
out
mov
jmp
or
cwtl
cli
pusha
aam
in
fiadds
test
cli
idivb
dec
fldenv
inc
push
push
arpl
ja
jecxz
lcall
adc
orb
push
pop
enter
pusha
lds
push
or
sahf
jge
cmc
sbb
cmpsl
aas
push
ret
aad
sar
les
aad
inc
push
jecxz
push
ljmp
popl
repnz
cmpsl
push
pop
mov
iret
mov
js
add
nop
adc
fisubrs
xor
inc
popf
jecxz
sbb
and
adc
in
pop
shl
push
jg
loop
inc
push
ss
clc
mov
stc
sub
mov
or
gs
imul
mov
test
add
or
lcall
adc
cmpsb
add
cmc
add
add
sub
cmpsb
rclb
sti
and
stos
push
shrl
mov
cmpsb
or
mov
cmp
mov
adc
push
pop
jle
lret
pop
and
in
lret
out
xchg
pusha
dec
popf
outsb
dec
push
jl
add
aas
iret
insw
mov
mov
fs
cs
out
jp
movsl
cmc
jns
lods
pop
push
out
lret
sub
lahf
cltd
pop
mov
cmpsl
jne
rolb
push
inc
sbb
shl
xor
test
insl
sub
push
jmp
jbe
hlt
mov
leave
mov
jl
push
enter
jp
fisttps
xlat
gs
pushf
push
ficomps
mov
pusha
adc
std
push
lcall
mov
stos
jno
mov
iret
in
divb
fadds
sub
ja
and
int
outsl
add
add
mov
mov
cmp
adc
xchg
rcl
add
cmc
add
add
mov
stc
test
andl
int3
mov
push
addr16
push
xor
mov
and
pop
push
pop
in
xor
cmp
mov
mov
cmpsl
stos
ds
sbb
fiadds
daa
enter
cmp
shll
imul
shl
adcl
xchg
sahf
xor
jecxz
orb
rcll
loop
and
jne
mov
fs
pop
mov
je
xorl
leave
inc
xchg
aam
push
loopne
sub
pop
mov
dec
push
aaa
iret
push
mov
mov
stos
clc
leave
outsl
adc
popa
icebp
dec
fisttpl
stc
push
insb
int
jae
dec
push
jp
ret
loopne
ficoms
test
pusha
dec
jg
popa
xchg
xchg
adcb
dec
sub
or
sbb
mov
xchg
jnp
enter
cmc
add
add
fcom
fisttpll
mov
add
mov
mov
gs
cmp
lods
push
arpl
xchg
test
sbb
pop
in
mov
push
popf
popf
rolb
aam
sbb
dec
xchg
jo
xchg
test
add
hlt
aas
out
cwtl
stc
adc
add
cmp
xchg
inc
cmp
add
lea
cmp
push
and
lds
and
out
cmp
std
test
inc
outsl
leave
cmp
js
int
jp
push
mov
dec
adc
subb
xchg
movsl
jo
out
xchg
iret
cmpsb
and
pop
and
arpl
mov
mov
sub
addr16
or
xchg
nop
push
pop
and
aad
out
int
and
call
inc
mov
mov
lcall
xchg
rorl
mov
add
add
inc
fdivl
stos
push
fs
add
add
and
loopne
sbb
arpl
xor
test
adc
cwtl
movq
xor
push
inc
pop
jb
loop
add
mov
dec
int
push
lahf
mov
inc
dec
dec
orl
dec
fs
mov
sbb
push
push
add
add
scas
mov
mov
imul
jns
int
mov
push
jp
lods
adc
or
imul
push
or
mov
ret
push
mov
sbb
mov
pop
andl
dec
jns
add
test
mov
dec
out
and
adc
cmc
lods
aas
aad
sub
mov
push
mov
les
scas
inc
pop
insl
lock
fistl
xchg
jno
cmpb
mov
fsubrs
add
add
sbb
mov
pusha
in
mov
mov
add
cmc
add
add
repnz
fisubrs
add
rclb
loope
repnz
mov
inc
xchg
xchg
imul
mov
sub
fidivl
imul
test
out
xor
push
xchg
mov
xchg
jne
xor
inc
xchg
push
repnz
rcl
add
jae
cmpsb
fldl
mov
pushf
dec
and
adc
ljmp
test
cwtl
inc
inc
lahf
jne
xchg
xchg
lret
xchg
inc
repnz
xchg
fcmovne
rcrl
loope
pop
mov
cli
add
push
aad
test
fcmovnu
decl
inc
adc
addr16
adcl
int
aas
xor
jmp
insb
pop
cs
mov
jecxz
pop
sbb
pushfw
pop
pop
mov
sub
enter
repnz
adc
dec
inc
jae
mov
mov
popa
fnsave
and
fidivs
add
add
add
stos
hlt
jmp
ljmp
push
add
cmpsl
stos
add
cmc
add
add
imul
jno
lds
mov
fsub
mov
mov
jle
scas
mov
lock
scas
fs
and
rclb
in
sahf
ds
inc
repnz
mov
adc
les
mov
dec
cli
test
inc
cmpsb
dec
sbb
pop
push
sub
or
jb
xor
mov
push
les
in
push
xlat
test
in
inc
sub
mov
shlb
push
movsl
shld
lret
fwait
mov
mov
mov
jae
in
mov
sub
jbe
testl
ret
pop
and
adc
mov
je
outsl
stos
xor
or
adc
inc
push
or
mov
or
mov
sahf
or
sbb
out
adc
inc
ret
pop
lock
xchg
jmp
add
add
out
xlat
out
jg
dec
cmp
and
xor
add
pop
sub
rcll
mov
or
and
xchg
mov
rcrl
bnd
xchg
addb
mov
out
lock
fldl
xchg
les
mov
inc
mov
lock
je
mov
in
dec
xor
cmp
inc
inc
orb
nop
jp
mov
mov
imul
jbe
jmp
jecxz
test
xchg
pop
lock
lea
repz
add
inc
gs
ljmp
cmp
shll
adc
pushf
mov
ret
int3
or
xor
mov
aaa
sbb
loope
insl
xchg
stc
xchg
jmp
pop
repnz
fs
shrb
xchg
rolb
std
aam
adc
mov
fsubp
mov
and
movsl
rcl
sub
jecxz
add
sbb
pop
fbstp
mov
push
outsb
xchg
lods
add
cmc
add
add
adc
orl
fldl
push
pop
mov
sbb
stos
cs
fstps
pushf
fadd
dec
stos
xlat
mov
rcrl
push
xor
pop
mov
mov
jbe
ja
arpl
frstor
int
test
pop
cmp
cmp
in
mov
fdivrl
cmp
pusha
sub
in
lock
xchg
mov
es
aad
out
mov
mov
push
cmpsb
cmp
push
jp
rorl
and
xor
into
fnstenv
or
test
mov
loope
in
add
out
add
mov
movsb
std
rcl
lea
mov
xor
out
push
sarb
xchg
sbb
inc
cli
lds
cmc
cmp
adc
testb
inc
xor
cs
adc
mov
outsl
pop
xchg
xchg
stc
inc
ds
and
push
inc
test
call
mov
adc
ret
xlat
sub
lret
call
add
add
mov
ja
pusha
lahf
cltd
sub
add
add
jecxz
push
stos
ret
inc
iret
sub
lods
addr16
push
mov
push
cmp
das
jmp
ljmp
xor
inc
mov
push
lcall
mov
jb
push
lcall
in
push
and
test
mov
cli
xchg
inc
sti
js
aas
pop
jle
jo
loopne
fdiv
mov
sbb
clc
or
loope
pusha
arpl
mov
or
ds
add
and
and
popw
dec
in
jp
cmp
leave
mov
outsb
sub
lea
daa
int3
arpl
pop
adc
mov
jo
iret
sarb
inc
scas
cltd
xchg
dec
pop
cmp
das
divl
xchg
cmp
loopne
loope
jg
jmp
fadds
pop
sub
lahf
xchg
add
lea
shl
sti
mov
jae
adc
add
add
mov
push
sti
jmp
xchg
sub
loopne
jnp
add
cmc
add
add
xchg
rcl
loope
and
shr
loope
mov
fldenv
and
mov
test
shr
test
dec
mov
ss
cmpsb
pushf
out
imul
clc
pop
int
pop
push
stos
mov
mov
cmp
popa
je
daa
test
jb
call
inc
arpl
scas
sub
and
mov
bound
mov
loope
mov
cli
xchg
pushf
into
sub
repnz
mull
out
adc
cmpsb
mov
jnp
test
out
push
dec
and
lret
bsf
jecxz
out
out
xchg
std
enter
ds
dec
hlt
mov
orb
mov
sbb
cli
cmp
adc
ret
push
cmpsl
inc
push
ficompl
jae
inc
dec
cltd
or
add
add
jecxz
lock
push
int3
in
mov
add
add
add
mov
lods
ror
adc
mov
mov
cmovge
push
lahf
cmp
mov
repnz
dec
popf
adcl
test
xlat
jl
shlb
js
cmp
imul
sbb
repz
mov
xchg
sbb
cmpsb
loope
mov
roll
das
sbb
lods
out
ljmp
sub
xchg
push
js
dec
iret
or
lahf
lret
adc
dec
cmp
dec
fiaddl
sbb
lret
xor
mov
mov
dec
mov
imul
fwait
mov
mov
cmc
xor
cmpsl
gs
mov
ljmp
xor
add
in
fiaddl
or
ret
jns
jnp
add
cwtl
mov
addr16
push
sti
ret
inc
lcall
mov
cld
mov
test
gs
add
add
add
or
or
iret
adc
mov
fmulp
pop
sub
and
fbstp
cmpsl
inc
xor
cli
jge
mov
jae
stc
sub
fsubl
push
scas
xchg
mov
fldcw
push
std
and
add
jno
js
lea
enter
in
sarb
into
ljmp
ds
iret
icebp
aaa
inc
ss
sbb
inc
add
xchg
loope
dec
and
in
lret
or
jb
rorl
xchg
fcmovne
cmp
in
out
ljmp
sub
xor
push
mov
dec
push
mov
in
mov
add
cmp
cld
cmp
jle
nop
jnp
and
cmpsb
sbb
or
cwtl
dec
or
jle
int3
test
cltd
ja
dec
dec
imul
scas
cmpsl
xlat
pop
or
mov
insb
ljmp
mov
dec
das
pop
out
cmc
mov
dec
js
ja
mov
add
add
add
es
shll
jecxz
or
stc
dec
inc
xor
pop
cmpb
jmp
insl
imul
or
mov
std
out
fists
daa
lock
lea
mov
cmp
ret
loop
hlt
jl
mov
mov
cmp
out
pop
out
in
cwtl
movsl
lods
mov
aaa
inc
out
mov
add
sub
jecxz
pop
ret
cmp
mov
xor
mov
add
leave
sub
xchg
inc
sbb
jae
push
popa
pop
sbb
dec
sbb
pop
xchg
mov
dec
out
mov
mov
into
ja
lock
mov
push
das
inc
push
shlb
mov
adc
pop
das
sbb
jae
imul
sahf
jmp
cmp
jl
sahf
dec
filds
dec
inc
xor
sbb
je
xchg
jne
add
fucomip
std
dec
std
pop
mov
mov
add
cmc
add
add
rolb
in
data16
lahf
fsubs
lea
push
add
jmp
test
adc
mov
fsubp
mov
mov
aad
aas
fldenv
out
sbb
testl
push
lret
int3
je
mov
lods
sub
mov
int
fmull
dec
fisubrl
cmp
sarb
mov
pop
incl
sub
out
mov
sbb
cmp
pop
xor
sub
sub
das
inc
into
lods
dec
jnp
imul
cmp
aad
mov
inc
jne
enter
lcall
movsl
sbb
adc
ljmp
mov
or
push
je
test
mov
cmpsl
dec
mov
mov
fs
aad
push
xchg
jae
enter
in
fsubl
bound
mov
fcmovbe
pop
jg
shl
fidivrs
add
fidivs
loop
ljmp
sbb
negb
mov
add
add
add
and
dec
sub
ret
pusha
or
mov
mov
mov
jp
xlat
jbe
xor
sub
stos
movsb
les
dec
repnz
add
jmp
mov
mov
clc
aad
mov
push
cli
lds
movsl
int3
cmp
sbb
mov
sub
push
dec
lret
adc
cli
inc
ret
push
mov
cmpsb
mov
pop
add
push
mov
cs
shll
loopne
stos
cmp
ret
mov
pop
mov
loop
ljmp
daa
mov
fadd
inc
push
popa
xchg
out
lahf
sub
mov
bound
cmp
mov
sar
test
or
mov
ficoms
sub
sbb
incl
loopne
add
xor
add
add
xchg
jg
jmp
std
jge
in
xchg
fcom
mov
add
add
add
xchg
add
daa
jle
pop
fwait
push
out
xchg
outsl
sub
gs
jbe
push
fistpl
or
adc
test
pushf
pop
pop
add
pop
adc
or
sbb
pop
jae
sbb
out
push
xorb
cmp
es
jmp
les
mov
data16
fisubl
inc
jno
xor
loope
push
std
xchg
aad
ret
mov
iret
ljmp
fucom
gs
jbe
sahf
and
adc
movsb
and
add
fs
or
jmp
push
push
es
xor
or
xor
pop
jnp
lods
fdivrs
orb
inc
sub
mov
out
lret
call
add
dec
xor
xchg
and
fldenv
cmp
test
add
xor
std
cmp
test
cs
add
add
add
int
pop
sub
lret
push
test
mov
push
xchg
sub
adc
mov
cmp
mov
add
pop
adc
faddl
lret
scas
cld
lret
inc
or
and
rclb
aad
and
dec
sbb
jbe
call
mov
mov
cld
rcr
addr16
or
push
dec
test
cmp
and
loop
outsb
pushf
pop
cld
xchg
xchg
xchg
in
push
push
push
sub
test
jb
mov
cltd
inc
imulb
jle
push
iret
bound
cli
arpl
ljmp
out
imull
orl
je
mov
jl
jb
pop
and
rolb
inc
mov
in
mov
lea
add
xchg
stos
stos
in
les
call
add
xor
cmp
ficoml
jne
and
add
add
add
loop
jmp
add
jmp
pop
fbstp
jno
jg
lock
nop
in
bound
mov
out
pop
icebp
cmpsl
iret
test
add
bound
in
pop
stos
in
jnp
pop
xchg
push
mov
cmp
ss
scas
das
push
jne
lret
push
adc
and
in
insb
inc
cwtl
mov
cmpsl
jp
cmp
lds
jo
xchg
mov
lahf
xchg
sbb
mov
push
vphaddwd
lods
sbb
decb
jle
pop
ret
sub
lcall
jp
int3
pop
insl
sbb
mov
push
pop
test
lods
mov
lcall
scas
lcall
mov
pop
mov
mov
mov
addb
fs
cltd
in
loopne
push
out
mov
jb
sub
inc
imul
add
es
les
mov
push
push
adc
lods
imul
add
cmc
add
add
scas
dec
jg
insb
mov
jns
fucom
out
rclb
ret
add
xor
outsb
jb
faddl
mov
pop
and
pop
mov
mov
adc
jg
push
jl
clc
cmc
sbb
jne
test
or
add
rep
cmp
sbb
les
divb
inc
pop
push
repz
bound
cld
shrl
add
xor
jmp
xchg
xor
xor
movsl
mov
mov
sub
sub
xchg
lea
adc
cmp
ds
xcrypt-cbc
cmpsl
xchg
in
dec
mov
dec
adc
push
aaa
pop
and
add
add
mov
das
movsl
test
add
lods
cmc
pop
mov
xchg
clc
gs
repnz
out
lods
scas
add
add
clc
pop
stc
out
push
insb
xchg
cld
sub
test
popf
or
add
add
mov
push
push
mov
fs
in
invd
es
lock
ficompl
mov
enter
stos
adc
sub
push
mov
jge
addl
xchg
jb
inc
adcl
stc
mov
call
in
dec
mov
sbb
ljmp
sbb
mov
ret
pop
or
mov
xchg
adc
mov
jae
jl
jmp
sbb
movsl
lahf
call
mov
or
ffreep
mov
jge
fsubrs
repz
js
arpl
inc
mov
out
dec
mov
dec
mov
mov
jmp
test
rcr
lea
js
mov
jbe
leave
mov
fidivs
and
inc
add
rol
and
fidivs
int
xchg
mov
mov
test
mov
sbb
add
lds
cli
lcall
ret
out
push
add
add
stos
cmp
js
dec
inc
fcompl
mull
ret
add
stos
inc
movsl
push
sarb
outsb
cmp
repz
orb
test
idivl
jae
xchg
movsb
push
aaa
out
in
jne
ficompl
xchg
fnstenv
in
lods
and
mov
std
xchg
fmulp
sarl
fnstenv
shrb
fcompl
pop
ret
mov
iret
mov
jg
fmul
rcrb
pop
out
std
lret
dec
xor
jg
jmp
fwait
jge
jb
stos
repnz
lds
out
fidivrs
sbbl
xor
outsb
inc
stos
add
xchg
inc
inc
push
arpl
imul
sub
mov
rcl
dec
or
pop
pusha
or
and
push
adc
pop
ret
gs
jno
adc
pop
lock
cmpsl
xchg
mov
fs
and
shll
pop
xlat
in
in
fadds
add
xorl
insb
scas
adc
add
cmc
add
add
mov
in
test
das
mov
mov
cmp
inc
mov
jg
test
mov
scas
popf
gs
shl
loopne
ss
fbstp
adc
idivl
mov
pop
xor
xchg
jg
mov
sub
xchg
jl
jp
loopne
inc
jl
mov
rorb
jp
sbb
iret
fnsave
add
test
and
insb
sub
out
movsb
in
repz
sub
push
js
in
call
mov
dec
jg
pop
push
std
ret
loopne
std
or
or
pop
and
mov
jne
aas
out
sbb
mov
rcrb
popf
mov
or
lcall
add
mov
dec
push
movsb
push
pop
pop
js
push
les
add
add
pop
sbbl
fstpl
bound
in
mov
add
rcrl
jg
inc
add
pop
jno
xor
shrb
push
adc
cmp
fisubrl
jg,pt
jo
daa
lds
jmp
and
push
mov
add
jl
push
add
subl
mov
xchg
jl
cmpsb
lret
xor
xor
nop
loop
jecxz
sub
repz
mov
lds
insb
push
xor
es
pop
mov
rcrl
jmp
stc
imul
sbbb
jnp
jg
mov
inc
movb
dec
mov
mov
dec
xlat
rorl
push
cmp
xor
mov
cmp
xor
lods
sub
sub
test
xchg
loope
incl
frstor
movsb
mov
push
cmp
inc
adc
out
sbb
ret
jg
pushf
xor
mov
test
xchg
int
add
loope
mov
jecxz
out
sub
xor
mov
add
nop
xchg
leave
lods
dec
leave
fildll
xchg
jae
es
mov
push
and
xchg
sbb
mov
inc
sub
je
mov
push
dec
std
lahf
outsl
js
fst
in
jnp
inc
aas
movsl
mov
or
mov
fwait
jb
mov
ds
lds
xchg
mov
sub
into
call
pop
or
fs
xor
inc
repnz
inc
in
mov
sub
es
sub
dec
shrl
jbe
xchg
sbb
push
mov
pop
loope
sub
fstpt
sahf
dec
cmp
sbb
mov
mov
dec
or
or
cmp
adc
jns
movsb
jp
loopne
out
mov
fs
ja
je
jle
xor
add
nop
mov
data16
and
je
pop
cmp
outsb
mov
sti
mov
add
push
xchg
test
jg
jbe
movsb
inc
jb
rcl
mov
add
lods
dec
int
test
push
push
adcl
xchg
fldenv
stos
outsb
movsl
and
dec
push
sbb
mov
add
inc
jae
je
rolb
adc
rolb
mov
fcomip
and
push
inc
dec
sbb
out
mov
frstor
sbb
fld
sub
mov
mov
jbe
ljmp
out
outsl
mov
in
push
sbb
sti
jns
mov
pop
cmp
sti
mov
add
fwait
jne
arpl
mov
inc
or
push
push
dec
rol
xchg
and
imul
int
mov
pop
xchg
push
and
scas
push
jae
mov
jns
jne
sub
dec
xchg
push
mov
lea
rorb
outsl
test
call
push
lods
lock
in
mov
cmc
xor
lods
push
mov
nop
dec
std
xchg
nop
push
add
add
adc
in
lcall
xor
sbbb
mov
add
or
inc
sub
mov
sbb
push
iret
jge
rcr
mov
popf
shrl
fisubrs
repnz
das
mov
aad
stc
or
jb
sbb
dec
leave
fwait
leave
dec
movsl
inc
fcom
sbb
mov
fsubp
or
and
xchg
xchg
jae
ret
popf
mov
mov
insb
and
mov
sbbb
stos
and
in
jmp
push
lahf
arpl
mov
add
add
lcall
sbb
sbb
xchg
adc
push
push
adcb
inc
lret
cmp
sbb
leave
mov
adc
push
xor
push
and
dec
lods
fs
jp
push
xchg
jg
stos
pop
addr16
push
fnstsw
or
add
call
mov
inc
xchg
mov
shrl
in
cmp
lock
add
add
sub
jg,pt
stos
dec
push
jo
aad
mov
add
cmc
add
add
push
add
scas
xor
adc
add
adc
sbb
insb
stos
xchg
addr16
jecxz
in
inc
in
mov
pop
fildll
ss
fmul
bound
add
dec
or
psubusw
aas
xchg
je
cwtl
jae
mov
sbb
cwtl
push
adc
in
pop
loope
xchg
dec
mov
std
inc
mov
and
cmp
sahf
jo
loop
arpl
add
pslld
inc
xor
es
cli
inc
xchg
push
cmp
sbb
addb
outsb
test
mov
xchg
lds
insb
rcr
inc
mov
xchg
mov
cmp
shrl
and
mov
cmc
xchg
fisubrs
imul
ret
add
inc
test
mov
cmpsb
call
mov
jae
enter
add
insl
sbb
outsl
mov
add
add
add
add
jae
jae
in
repnz
adc
mov
in
sar
andl
mov
and
mov
imul
inc
ja
cltd
xchg
test
pushf
movsl
push
jg
int
inc
insb
cwtl
sub
mov
xchg
aad
rcrl
xchg
push
in
mov
mull
lods
mov
jle
sbb
mov
popa
pop
sub
ljmp
movsb
cwtl
or
push
out
xor
ljmp
cmc
pusha
sbb
dec
adc
cmpsb
xchg
fidivrs
mov
dec
rorl
sbb
jns
aas
lock
ss
mov
pop
sub
xlat
and
test
mov
jb
out
sbb
stos
outsb
xchg
inc
test
shrb
mov
xchg
or
sub
add
xor
mov
cltd
sarl
add
cmc
add
add
or
test
xor
xor
nop
mov
or
aad
xchg
shll
test
fdivrl
ds
jp
or
mov
jge
pop
mov
test
or
sub
test
mov
shlb
and
enter
mov
sub
xchg
iret
push
push
loop
test
xchg
mov
push
out
mov
gs
pop
xchg
aas
and
pop
pop
sbb
ja
andl
xchg
xchg
lea
jp
call
std
insb
iret
aaa
stos
pop
jp
mov
aam
roll
enter
dec
outsl
push
lret
xor
arpl
jne
mov
ljmp
test
imul
push
jge
or
ret
cmp
add
add
fistpll
call
rcr
popf
push
lahf
ret
cmc
add
add
push
data16
aas
movsl
fistps
loope
or
add
fcmovb
call
test
mov
int
loope
hlt
jmp
js
push
cltd
loopne
and
xor
in
sub
pop
cmp
push
mov
nop
cs
cmp
leave
loopne
out
loop
out
xor
or
icebp
and
pop
mov
imul
xor
sbb
repnz
fimuls
ds
push
xchg
add
inc
jae
jno
nop
test
pop
cld
mov
jp
mov
rclb
sub
test
pop
inc
fldenv
imul
out
xchg
stos
shrb
test
add
dec
push
inc
mov
dec
pushf
jecxz
xchg
into
lea
sbb
xchg
pop
sub
cwtl
cmp
test
fisttpl
fs
mov
jecxz
shrb
test
inc
imul
js
fisttpll
popa
loop
inc
cmpsb
dec
add
add
std
sti
leave
sti
iret
ljmp
clc
or
add
add
add
cmp
aas
dec
pusha
sub
add
sbb
push
pop
int
sbb
ds
or
fchs
lock
sbb
xchg
push
sub
test
cmp
testl
shrb
sub
in
or
ljmp
sub
push
push
add
rcll
xor
dec
cli
xor
in
xchg
mov
or
mov
sbb
mov
and
cmp
push
xchg
loopne
cmp
daa
in
cmp
jmp
xor
mov
loopne
jmp
push
hlt
jge
test
cs
dec
ljmp
ja
xchg
sarl
pop
push
mov
xchg
lret
cltd
int
stc
ja
cwtl
sbb
xchg
dec
add
rorl
rcll
or
enter
sub
xchg
jmp
sub
adc
inc
and
push
add
add
mov
es
int3
pop
dec
in
les
add
add
add
into
jge
jns
mov
flds
mov
mov
hlt
pop
and
adcb
xor
out
and
icebp
or
mov
sbb
dec
sbb
sbb
cmp
push
add
jle
xchg
push
faddl
push
lret
notl
packsswb
test
pop
ds
int
dec
test
lods
pop
sbb
daa
popf
or
lahf
inc
out
xchg
test
js
pop
cmpsl
lock
jecxz
add
cmp
sub
inc
xor
or
inc
mov
out
mov
loopne
xor
dec
call
jnp
push
adc
pop
inc
xchg
and
test
pop
push
adc
mov
mov
add
stos
push
out
mov
and
negl
jbe
push
mov
cmpsl
add
add
jg
mov
sub
ucomiss
pop
jle
add
cmc
add
add
pop
xor
push
pop
and
xor
sub
test
sbb
popf
xchg
js
or
xchg
push
inc
jecxz
mov
ror
mov
fcomps
sbbb
test
mov
push
in
xchg
jbe
imul
out
mov
negb
fwait
sbb
mov
adc
aam
out
xchg
rcr
push
pop
pop
cli
addb
sbb
adc
imul
lea
push
mov
iret
dec
xchg
fisubl
sahf
mov
sahf
fwait
repz
mov
aam
imul
stos
fcompl
xchg
ret
xchg
mov
and
cmpsb
in
fcmovbe
jmp
pop
pop
jns
fistl
test
xlat
imul
scas
jge
in
pushf
test
lds
xor
mov
xchg
add
add
inc
enter
pushl
out
adc
mov
jmp
add
add
add
or
sbb
jb
jne
sarb
clc
je
dec
scas
jbe
dec
je
ret
lods
jge
mov
dec
or
in
sbb
repz
or
push
insl
pop
pop
dec
xchg
pop
or
das
faddp
int3
loope
pop
and
xchg
mov
or
pop
dec
xchg
add
xor
loope
sarl
or
or
add
mov
cltd
ja
sahf
mov
test
or
dec
into
test
mov
jge
lds
mov
push
adc
dec
jo
neg
icebp
inc
jg
imul
or
out
xchg
fmuls
jmp
and
fisubrs
mov
fsts
inc
push
in
fstp
adc
jmp
add
dec
xorb
mov
fldcw
cld
jb
and
aam
add
add
pushf
shrb
jb
ret
in
push
add
add
mov
mov
mull
jbe
inc
pop
fs
mov
adc
imul
test
sahf
call
add
or
dec
loope
adc
inc
jmp
mov
mov
lea
mov
stos
mov
push
pop
inc
pop
lods
add
in
pop
jns
aad
add
or
inc
sub
mov
imul
lret
mov
iret
shlb
lds
cmpsb
ret
mov
mov
jb
add
jo
hlt
add
loop
pop
bound
mov
das
mov
add
dec
leave
stos
lcall
mov
gs
jmp
lret
incl
jb
insl
or
and
xchg
nop
lods
add
mov
jecxz
xor
cmp
lea
dec
jnp
add
xchg
xor
add
add
test
mov
xchg
push
outsl
push
ret
mov
cmc
add
add
jecxz
pop
icebp
lods
mov
int
push
lahf
jbe
sub
xchg
adc
divl
daa
sub
shll
jmp
icebp
xchg
push
or
mov
dec
add
shll
aad
mov
pop
idiv
addr16
mov
jmp
aam
popf
push
sub
lds
mov
push
dec
int3
cmp
push
sbb
in
inc
movsl
test
cmp
adc
imul
fsubrs
push
mov
push
fcompl
or
pop
or
lcall
stc
arpl
sahf
sub
mov
rol
inc
or
jno
xchg
or
add
sbbb
lds
push
jnp
xchg
pop
enter
push
aaa
lock
xor
mov
out
xchg
cs
repnz
stc
sbb
btc
sub
jl
cmp
nop
fisubl
push
add
add
jne
jne
jg
out
and
and
add
add
add
mov
mov
nop
arpl
jmp
pop
cmc
scas
jp
addr16
jae
lock
push
mov
mov
mov
and
out
call
and
ret
or
adc
jecxz
stos
push
dec
or
push
xchg
fs
ret
sbb
addr16
sahf
adc
movsb
xchg
jb
inc
adc
or
xchg
repz
inc
shl
jo
mulb
jp
jmp
pop
mov
in
jbe
shlb
and
inc
aad
sbb
outsl
xchg
add
arpl
add
je
hlt
jnp
inc
outsl
repnz
shl
push
push
gs
dec
mov
enter
shrl
daa
cmpsb
test
pusha
dec
pusha
cmpsl
in
sub
xchg
mov
bound
idivb
ret
cli
enter
jne
xor
and
and
inc
mov
sbb
add
dec
pop
mov
cmpsb
fstpl
jne
jge
inc
lret
cmc
add
add
sub
adc
dec
cmp
add
cmp
clc
xchg
add
jne
inc
in
test
js
or
test
dec
sbb
pusha
movsl
in
and
repnz
outsb
pusha
and
and
jns
ds
jg
movsl
mov
mov
imul
sbb
sub
jge
mov
ret
xchg
xor
push
mov
or
sub
test
orb
push
pop
jbe
aad
fwait
cwtl
push
mov
add
push
xor
push
notb
out
mov
mov
pusha
mov
push
jbe
xchg
lret
inc
push
sbb
lcall
sti
or
inc
into
xorl
inc
add
fiaddl
lcall
lods
or
lea
test
movsl
or
sub
dec
jl
add
add
outsb
jle
lods
not
mov
add
xchg
sarb
add
cmc
add
add
sbb
repz
sbb
orb
jmp
int3
test
mov
idiv
mov
jmp
sbb
xor
add
fsub
mov
jbe
out
pop
fdivs
fs
dec
jecxz
out
xchg
aas
fiaddl
push
sbb
jo
mov
shlb
insl
mov
cltd
mov
and
ja,pn
or
ljmp
test
pop
repnz
push
adc
repz
add
lock
cmp
push
adc
sub
in
xor
test
scas
lds
pop
cld
push
es
adc
jle
mov
aad
ss
adc
xorl
stc
push
push
dec
std
and
and
mov
and
popa
inc
pop
mov
cld
aad
cld
add
push
in
mov
out
mov
out
repnz
dec
jmp
xlat
sbb
popf
add
add
mov
xor
xchg
xor
add
cmc
add
add
jne
push
in
mov
mov
xor
bound
mov
int3
xchg
jnp
xor
xchg
sbb
push
lcall
dec
jmp
mov
mov
pop
sub
push
cmp
arpl
mov
jp
jb
in
and
clc
push
test
push
lods
push
test
pop
fwait
pop
repz
sbb
mov
in
imul
sub
mov
push
mov
cmp
arpl
mov
int3
shrl
imul
loope
inc
add
in
mov
pushl
outsl
in
mov
sbb
sbb
sub
out
mov
lcall
and
and
cmpsl
or
cmpsb
int3
lret
push
arpl
adc
add
test
sbb
xlat
ss
inc
movsb
loope
and
int
add
add
add
jl
sbb
popa
xchg
je
xchg
in
iret
mov
push
scas
cmovle
sti
inc
sahf
push
es
testl
ja
xchg
inc
sub
push
pop
fisttpll
repz
pop
orb
jbe
xor
popf
pop
xor
cmp
int3
push
test
jae
dec
jno
xchg
scas
mov
or
xor
out
fadds
lahf
xor
rcr
insb
or
es
cwtl
out
ret
cmp
out
or
daa
cwtl
xlat
sub
lea
std
pop
jbe
or
cmp
xor
push
cmp
ljmp
hlt
in
jno
cmc
cli
mov
cmpsl
movsl
arpl
imul
dec
and
ficompl
loop
es
sahf
mov
fisubs
sub
call
repz
fidivrs
mov
filds
jae
mov
add
add
push
sub
cmp
jg
cmp
xchg
sbb
add
cmc
add
add
mov
nop
xchg
scas
mov
popf
mov
outsl
mov
inc
sub
push
sahf
push
push
jge
and
popf
jo
or
ds
filds
lock
mov
dec
jp
dec
pusha
xor
cltd
lcall
mov
cli
and
lods
popf
xchg
sub
outsb
mov
jbe
jge
ret
sub
xchg
cmp
loop
mov
mov
sbb
test
add
and
mov
test
xchg
inc
sbb
pop
sub
sbb
pusha
popf
jmp
xor
in
movsb
mov
cmp
mov
or
sub
scas
iret
xor
std
aam
xchg
fimull
sbb
fwait
pop
adc
and
ror
inc
and
scas
cmpsl
loope
pop
mov
idiv
out
dec
pop
lcall
add
xor
fistpll
out
repz
aam
sbb
lret
add
cmc
add
add
xchg
pop
pop
cmpsb
xor
xchg
mov
mov
and
mov
clc
or
cwtl
arpl
jmp
push
es
inc
fwait
inc
cmpsb
adc
xchg
inc
mov
sub
pop
test
and
push
pop
loope
int
jecxz
sub
mov
bound
jmp
inc
cmp
pop
pop
sbb
jnp
mov
lods
jle
cmpsl
adc
repz
out
or
aam
adc
enter
or
inc
movsl
insl
ds
aad
jbe
pop
pop
fwait
jbe
xchg
sbb
pop
mov
push
ret
inc
sub
pushf
or
in
push
xchg
lock
sbb
scas
sbb
nop
mov
add
xchg
fs
mov
mov
add
mov
jne
fcoml
add
add
add
and
sbb
inc
xchg
lods
push
pop
sub
hlt
pop
iret
xor
inc
push
pop
pushf
or
jl
sbb
popa
stos
fidivrs
jno
inc
xor
jae
shlb
lret
xor
mov
add
rep
ret
adc
push
dec
mov
mov
lcall
aam
inc
adc
jg
pusha
add
out
pop
xor
mov
iret
jo
subb
mov
push
add
and
bnd
sti
mov
cwtl
or
pop
scas
pop
mov
push
es
adc
dec
daa
mov
inc
scas
pop
pop
aam
mov
cmp
cmpsl
jecxz
mov
xor
add
xor
repnz
or
jle
or
jl
jno
leave
mov
xchg
cmpsl
pop
inc
insl
jno
dec
pusha
add
or
mov
push
add
add
enter
in
out
mov
dec
xor
and
cli
rolb
add
add
add
enter
outsb
addr16
es
ss
fwait
test
ss
xchg
rclb
xchg
adc
add
in
shrl
inc
mov
out
int
pop
movb
xor
pop
push
ds
sub
jno
out
cmp
stos
mov
out
mov
dec
gs
in
and
xor
inc
mov
test
cmc
sbb
cld
cmp
mov
cs
std
mov
sahf
and
or
in
xor
or
iret
lods
and
test
jg
mov
dec
inc
mov
push
mov
iret
lods
cld
sbb
add
push
or
js
xchg
sahf
out
add
mov
dec
jge
fadd
cmp
les
push
xor
add
jns
mov
pop
into
push
xchg
jne
mov
add
imul
cmc
call
inc
sub
cmc
add
add
icebp
mov
inc
pusha
jl
call
mov
mov
out
cltd
mov
divl
ret
ljmp
js
dec
pop
lret
adc
cmp
fs
ds
push
mov
pusha
mulb
out
mov
sti
pop
aaa
mov
jg
hlt
repz
pushf
sub
sbb
dec
dec
hlt
sub
push
mov
cwtl
cmpsb
add
ret
pop
pop
call
sbb
push
fmuls
aam
jo
jns
lods
jmp
aaa
adc
hlt
mov
jnp
sbb
jne
xorb
xor
xchg
setno
scas
jns
push
cltd
mov
cmp
pop
lock
je
mov
dec
inc
lods
aad
mov
stos
js
xchg
out
in
adc
mov
js
addr16
mov
sarb
mov
stos
xor
imul
incl
add
movsl
mov
iret
xchg
xor
fs
in
add
cmc
add
add
push
arpl
fwait
jmp
mov
xchg
mov
jbe
jbe
push
lahf
popa
fdivrl
lahf
push
add
add
repnz
or
ret
and
and
inc
stos
call
pop
xorb
dec
fwait
push
scas
sbb
mov
ljmp
mov
xorl
iret
jg
cmp
outsl
daa
les
sub
test
outsl
adc
push
sbb
enter
push
inc
enter
cmp
push
rcrb
push
testb
test
outsl
and
popa
in
xchg
push
lods
add
sub
push
pop
lcall
cmp
js
mov
mov
dec
jl
incl
dec
xchg
fstpt
and
and
push
test
mov
aad
jnp
inc
push
ret
sub
rcl
mov
scas
mov
fs
mov
add
add
out
into
gs
fsts
xor
and
roll
add
add
add
fdivs
xor
mov
inc
mov
test
in
jl
sbb
das
pushf
mov
jno
add
test
int3
push
adc
xor
jle
jnp
jle
jle
and
clc
xchg
or
mov
fwait
add
mov
scas
add
jo
jl
std
stos
inc
cwtl
or
mov
sub
or
add
push
adc
mov
pusha
cmp
movsl
call
fs
pusha
ror
push
dec
lahf
fnstenv
fld
inc
xor
out
sbb
pmaddwd
fmuls
xchg
loope
lods
or
or
inc
bound
mov
cmp
cmpsb
pushf
dec
mov
ret
and
sbb
das
push
inc
add
movsb
cltd
sti
pushf
jle
loope
lods
mov
push
hlt
push
pop
push
add
loopne
and
je
out
mov
adc
fwait
cmp
aam
add
add
add
jae
loop
inc
cmp
add
lods
repz
push
inc
pop
push
dec
mov
pop
adc
jmp
jns
jb
pop
cld
jmp
lods
push
push
sub
sar
test
lods
mov
movsl
subb
mov
int3
hlt
js
sbb
jge
lods
shlb
and
dec
outsl
inc
adc
ss
ds
push
cmp
jge
jle
jbe
sbb
pushf
inc
dec
inc
ds
mov
test
cmpsb
cmc
mov
aad
rorb
and
jmp
xchg
mov
xchg
dec
es
push
movsl
je
mov
jns
jge
pushf
adc
incb
dec
aas
lea
ret
rorb
jp
in
aad
push
push
push
repnz
ret
out
xor
cmpsb
jno
dec
mov
cwtl
mov
movsl
dec
dec
pop
mov
stos
mov
push
add
add
dec
daa
dec
das
outsb
imul
enter
outsb
xor
cmc
add
add
mov
fsub
sahf
mov
mov
push
mov
jb
or
lods
clc
hlt
pop
xchg
sub
or
enter
out
xor
or
sbb
add
in
cmp
cs
or
fcoms
mov
rorb
push
push
dec
sahf
pop
arpl
ss
push
lods
popf
add
xor
int3
mov
xchg
xchg
adc
int
xor
cmp
xor
ret
bound
mov
sahf
cmp
xchg
adc
mov
addr16
ds
dec
jle
xchg
mov
cmpsb
pushf
into
fistps
cmp
jl
aaa
idivb
sub
cmc
in
pushf
rdmsr
add
push
popa
mov
rcr
insl
sub
jo
cmpsl
cli
sahf
mov
out
push
arpl
or
xchg
mov
int
add
add
popf
mov
lahf
or
fdivs
mov
add
add
inc
mov
cld
pop
pop
push
out
jg
in
cmpsl
out
je
dec
lds
je
repz
mov
push
subb
cld
and
lcall
adc
dec
jecxz
and
lcall
gs
dec
push
lds
stos
xchg
adc
lods
jbe
aam
jg
push
test
jns
lods
sub
push
mov
repnz
mov
pop
xchg
xchg
dec
and
addr16
jecxz
xchg
push
ljmp
jge
cli
icebp
mov
sbb
jl
pop
scas
jle
stos
notl
xchg
push
test
mov
test
stos
adc
xchg
xor
dec
lods
fneni(8087
add
call
in
mov
push
xchg
dec
std
mov
xchg
adc
daa
scas
popf
jge
inc
lds
xchg
add
mov
add
add
neg
outsl
mov
push
and
fldt
lods
xlat
add
cmc
add
add
pop
lahf
gs
in
push
rcrl
push
ret
sub
jge
je
orb
sub
xlat
mov
addl
xlat
push
xchg
out
int3
test
fucomp
push
add
ljmp
sbb
mov
cmpsl
push
testl
mov
popa
mov
push
lods
cli
insb
mov
and
adc
cmp
movl
das
loope
adc
mov
mov
push
cmp
jle
pushf
iret
push
mov
and
xchg
and
sti
pop
andb
stc
xchg
add
fcomps
aaa
xor
jo
mov
sbb
push
mov
setae
insb
fdivl
sti
or
movsl
mov
mov
push
push
shlb
testb
stc
mov
mov
mov
in
test
add
add
add
sbb
sbb
sbb
fadds
add
add
add
or
stos
out
sbb
rcr
pop
add
sub
pop
pop
int
adc
adc
aaa
mov
mov
lods
adc
jbe
fs
jg
repz
inc
loope
loope
sub
lock
jae
test
or
mov
pop
xchg
mov
popl
jno
loop
test
jns
lock
sarb
nop
aad
jmp
bound
mov
popf
ss
cmp
mov
push
in
test
mov
test
mov
jno
or
movsb
cmp
add
rorb
dec
push
ret
decl
scas
jbe
inc
adcl
sub
jo,pn
cmc
pop
jg
iret
das
add
pop
xor
cs
push
xor
cmp
jg
add
lds
sahf
jb
in
mov
cli
xchg
xor
mov
push
outsl
pop
fldl
add
mov
pushf
adc
ds
sub
fs
flds
add
add
add
mov
and
mov
shl
push
add
cmp
repz
pop
icebp
sbb
adc
jmp
sti
iret
cmp
xchg
daa
cmp
das
fwait
sbb
sbb
xor
mov
jecxz
push
aam
aaa
testb
mov
pop
js
stc
out
lret
sbb
dec
mov
push
pushf
leave
les
push
ss
and
inc
ret
or
loop
and
dec
sub
adc
rorb
std
loop
inc
push
mov
stos
xor
add
rolb
addr16
test
cli
pop
shr
aad
mov
sub
imul
cs
das
sub
xor
pusha
inc
sbb
int3
addl
xchg
ss
rcl
fwait
dec
or
jbe
js
negb
lods
mov
push
mov
push
xorl
add
add
lcall
sbb
fiaddl
add
add
add
lods
test
stos
pop
mov
mov
shl
xlat
addl
pop
mov
cmp
inc
or
popa
mov
fnstenv
or
imul
inc
call
js
iret
shll
in
inc
xchg
jnp
pop
mov
sub
stc
pusha
inc
jecxz
mov
mov
push
xor
xor
xchg
jg
es
lods
xor
xor
xor
loop
pop
jo
push
pop
daa
jge
pop
push
dec
cmpb
sbb
stos
xchg
add
sti
enter
pop
xlat
adc
and
dec
adc
xchg
cmp
mov
pop
xchg
cmp
pushf
and
ss
and
push
ljmp
or
push
arpl
lret
icebp
sbb
sbb
sti
lret
add
add
xchg
ja
push
jg
loope
cs
repz
sbb
add
mov
inc
stc
push
cmp
cmc
and
jne
push
cmp
push
sub
std
gs
hlt
cmpb
pushf
and
and
lahf
outsl
xchg
add
adc
dec
jbe
push
mov
cmp
cs
jne
push
inc
hlt
mov
push
lret
clc
cmc
mov
add
mov
lea
adc
mov
fsub
aas
dec
insb
in
push
adc
into
pop
shrb
shrb
jl
lahf
push
repz
adc
ret
lret
pusha
lods
jge
je
jno
and
in
mov
int3
mov
and
mov
push
mov
scas
mov
addb
imul
jo
cmpsb
imul
jp
ret
cmp
xchg
pop
insl
mov
cmp
outsb
int
jge
xchg
shr
mov
fdivr
call
add
imul
xor
jae
faddl
add
add
add
mov
lret
je
popa
fs
cmp
xlat
pop
adc
lea
push
test
xor
and
test
cmovs
push
fdivp
shl
push
mov
xchg
insb
mov
lock
lret
cmp
or
cmp
arpl
pop
loopne
push
jbe
and
insb
add
cmpl
les
mov
dec
xchg
imul
sub
xlat
jecxz
lods
push
dec
lret
adc
inc
mov
int3
add
in
sub
or
js
cs
and
sbb
ret
jmp
cmpsl
in
mov
lcall
mov
fsubl
adc
ds
push
addr16
sub
inc
lret
push
test
push
imul
xor
lcall
cmp
lret
xor
lods
fbld
add
out
fldcw
push
xchg
fsubrs
cmp
fldl
add
add
add
cmpl
pop
out
sub
or
mov
adc
push
lock
and
hlt
shrb
int3
dec
fldt
popa
mov
in
popa
aad
sti
mov
xchg
inc
inc
roll
pop
jne
inc
sbb
incl
xlat
adc
mov
iret
push
lods
mov
jg
js
xor
into
das
lret
notb
push
mov
xor
cmc
movsb
fs
pushf
xchg
popa
xchg
mov
ja
ja
xchg
push
cmc
outsl
sub
xchg
or
dec
ret
fistpl
popa
sbb
and
mov
mov
incb
sub
stos
pusha
push
adc
pop
pop
lock
dec
add
xchg
cmp
fstps
cmp
mov
or
push
loop
ss
dec
add
add
sbb
sahf
cmc
fsubrp
jnp
mov
clc
cmp
cmc
add
add
cmp
lock
cmp
pusha
mov
dec
mov
and
mov
cmp
jp
into
pushf
scas
push
dec
or
test
mov
inc
mov
dec
setne
adc
xor
fxch
into
jle
push
jge
repz
fidivrs
cmp
dec
xchg
sbb
inc
sar
sbb
pop
fnsave
xchg
xchg
jle
cmp
lcall
scas
sti
dec
dec
and
and
rclb
ficoms
popf
test
or
test
movsl
divb
push
jns
popf
repz
mov
in
andl
push
inc
sub
sbb
sub
outsb
into
aam
test
adc
mov
jmp
adc
cmc
in
jne
push
scas
in
add
pop
dec
jle
jg
std
fldt
cmp
es
mov
add
cmc
add
add
test
adcl
xchg
adc
pop
mov
out
xchg
xchg
aaa
add
or
push
sub
fistl
or
call
nop
jl
sbb
pop
filds
sbb
rcr
or
ljmp
sub
mov
inc
add
add
mov
or
inc
and
les
xor
xchg
dec
cmc
lock
and
mov
inc
fldcw
inc
adc
gs
pop
dec
sbb
cmp
xor
mov
scas
jno
cmpsb
sahf
test
repz
hlt
fimull
adc
shll
push
mov
sbb
aad
xchg
mov
push
aad
and
mov
lea
and
sbb
push
into
fcomp
or
mov
int3
pop
loope
sarb
pop
xchg
scas
jl
fstl
xchg
cltd
dec
out
jp
or
push
out
or
add
add
mov
sti
idiv
lods
jne
adc
sub
loopne
add
add
add
lret
neg
testl
fxch
mov
pop
dec
inc
pop
mov
push
sbb
xchg
int3
add
jp
add
sahf
in
sti
aas
pop
cmpsb
adc
xchg
cltd
push
cmp
mov
fldcw
inc
popa
pop
das
loopne
int
sbb
stos
pop
stos
xor
add
inc
cmpsl
incl
repz
xor
jns
jbe
cmpsb
scas
inc
and
cmp
pop
out
or
imul
xor
push
jle
mov
dec
jns
movsl
call
push
jbe
movsl
aas
cmpsl
xchg
jecxz
cmpsb
mov
cmp
xchg
dec
mov
fnsave
mov
jmp
fbstp
xchg
rcl
stos
lret
out
xlat
mov
and
and
push
lods
sbbb
xor
dec
fsubl
divl
outsl
mov
mov
pop
out
jg
add
add
sbb
jmp
mov
call
add
cmc
add
add
stos
pushf
lea
pop
mov
pop
xor
adc
inc
or
inc
je
js
addr16
push
pop
mov
mov
mov
fisttpll
cmc
fmull
push
xchg
enter
pop
popa
sub
repz
mov
lret
cmp
rolb
je
and
subb
das
or
loope
and
fcoml
arpl
out
mov
icebp
jle
xchg
xchg
sti
or
repnz
adc
sub
cmpl
xchg
xchg
adc
aaa
es
iret
adc
addl
sti
add
lds
test
lea
and
jge
pop
stos
aas
popf
out
mov
inc
outsb
and
jmp
comiss
cmp
mov
adc
lock
push
and
rol
and
pop
mov
push
xor
ret
add
add
push
out
jp
dec
popl
imul
add
add
add
mov
sub
jns
sub
jb
sahf
sub
mov
fstl
ss
cmp
and
lods
and
daa
mov
cmpsb
test
jp
push
iret
dec
pop
rorl
movsl
cmp
xor
sbb
add
aad
lcall
inc
mov
jne
mov
adc
mov
sarb
jle
pop
cli
xor
add
cmp
in
jg
jbe
cld
or
aaa
lock
movsb
jge
negl
subb
sbb
add
mov
push
push
lea
ds
inc
test
aad
loopne
div
dec
imul
sahf
mov
sub
cld
push
sub
ja
cmp
popa
ficoms
iret
jg
jb
rcr
and
dec
mov
or
mov
loop
add
jg
mov
lcall
mov
mov
cmc
add
add
inc
bound
lret
sbb
xchg
push
pop
popf
pop
test
notb
outsb
aad
outsb
cmpb
xchg
sbb
jno
sub
or
fs
mov
sbb
cmp
cmp
sub
out
push
into
out
mov
xchg
inc
pop
insl
or
or
mov
xchg
sahf
ffreep
in
xorb
push
stos
cmp
scas
in
sub
ljmp
cmp
add
mov
push
aas
jle
shl
imul
jns
icebp
pop
mov
cwtl
jo
adc
sahf
js
mov
pop
imul
inc
addb
std
sbb
mov
cs
lret
testl
popf
fdivrs
lret
out
cli
enter
in
in
mov
insb
imul
jns
add
add
mov
jns
daa
data16
push
in
add
add
add
inc
cli
cmp
cld
andl
and
repz
fmul
mov
cltd
adc
mov
mov
sahf
pop
cld
pushf
adcb
push
aam
sbb
inc
dec
mov
mov
inc
adc
cmp
cmc
add
sub
popf
pop
add
fs
mov
push
xor
repz
sbb
andb
mov
outsb
sub
jp
inc
dec
pop
adc
outsb
insb
xlat
push
sar
xor
inc
pop
cwtl
loop
pop
enter
push
js
test
sub
jg
arpl
and
mov
push
lea
xor
daa
pop
popa
arpl
cmpsl
pop
dec
pop
or
aaa
shl
ret
and
add
stos
sub
add
push
cmp
inc
aas
push
imulb
or
pushf
lret
aaa
pop
neg
mov
and
and
add
add
fadd
fsubp
jnp
push
xor
sub
in
add
add
add
inc
cmp
jecxz
and
mov
mov
lock
das
test
pop
xor
mov
aas
xchg
push
jno
and
mov
inc
pop
sub
pop
cwtl
aad
fdivl
in
mov
test
ja
movsb
scas
je
lret
add
pop
pusha
cwtl
jmp
daa
inc
or
repz
cmp
mov
fnstenv
or
mov
inc
sbb
divl
push
mov
adc
xchg
add
rcr
cmp
sub
push
jmp
push
pop
pop
bound
lea
arpl
cltd
fcoms
push
in
incl
dec
push
jbe
pop
pop
out
push
sub
sarl
leave
repz
pusha
dec
xor
cmpsb
stos
insb
rcll
mov
xor
xor
lret
popf
pop
int3
dec
jns
lea
cmp
add
pop
add
add
sub
cld
cli
jle
addb
or
add
cmc
add
add
mov
mov
nop
and
flds
stos
push
andl
or
push
je
xor
mov
and
enter
dec
ud2
bound
mov
icebp
xor
aaa
dec
fwait
push
jecxz
dec
or
into
jg
call
add
dec
push
mov
cmpsl
mov
or
in
mov
jbe
outsb
push
cmp
xchg
pusha
test
pop
push
call
or
dec
cmpsb
imul
dec
mov
and
xor
push
call
xchg
div
dec
sub
insl
push
jbe
data16
pop
sbb
inc
lret
aas
test
fnstcw
in
mov
sbb
inc
xchg
rorl
fiaddl
addr16
scas
gs
shr
or
jb
jle
std
loope
sbb
aam
pushf
jae
cmp
mov
dec
pop
xchg
das
dec
pop
jo
add
add
ja
sti
dec
push
sbb
das
std
out
add
add
add
ret
fistl
xor
push
or
pop
xchg
cmp
mov
push
pop
and
test
xchg
mov
xor
nop
push
dec
ret
mov
inc
call
subb
xchg
xor
insb
shlb
cmp
ljmp
daa
cmc
pop
push
push
jne
mov
shlb
sahf
loope
es
mov
cmp
pop
pop
test
cli
bound
imul
mov
out
fists
dec
sbb
adc
fcomip
clc
fdivs
adc
repz
scas
cmc
xor
or
fdiv
xchg
dec
xchg
push
scas
dec
cmc
and
push
loopne
dec
push
sbb
daa
jge
pop
out
dec
sub
test
and
insb
dec
or
out
test
cwtl
dec
mov
out
arpl
xor
sbb
sbb
add
add
into
arpl
inc
push
cmc
or
mov
add
add
add
mov
out
mov
cmp
mov
inc
xchg
test
jne
cmp
pushf
xchg
dec
cld
pop
stos
enter
test
and
cmpsl
repz
inc
xor
jno
subl
iret
call
out
cltd
movsl
ja
pop
je
mov
scas
aas
aad
sub
test
push
sbb
mov
sti
stos
mov
sub
clc
sub
mov
add
add
xor
ret
insb
inc
sbb
mov
outsl
je
pusha
pop
leave
pop
std
inc
es
btc
and
outsb
stos
dec
mov
ljmp
lds
popl
mov
jmp
test
add
repz
pop
push
add
pop
push
push
fisubs
scas
jns
loope
je
lret
sbb
jae
add
pop
fimull
cltd
cmc
adcb
fcos
pavgw
mov
out
add
cmc
add
add
push
mov
pop
cmpsb
mov
jle
aam
pop
es
loope
adc
notl
icebp
mov
xchg
xchg
pop
xor
sahf
sub
std
mov
rcrl
jmp
icebp
jnp
sbb
cmp
push
pop
adc
sarb
in
arpl
mov
in
sbb
push
mov
insl
stos
mov
mov
or
jbe
lret
jmp
pop
insl
xchg
shll
push
jns
xlat
pop
adc
push
faddl
push
mov
lret
pop
fsubr
fbld
inc
adc
pusha
ja
ffree
mov
inc
popa
outsb
loopne
pop
ret
sub
fidivrl
sub
jns
cmpsb
pop
push
xor
mov
pusha
shrl
icebp
lahf
push
push
daa
dec
xlat
in
mov
stos
push
pop
and
mov
repz
cmp
adc
stos
mov
mov
xchg
xor
add
repz
lock
jg
mov
xlat
lock
add
cmc
add
add
int3
jnp
cmp
push
add
bound
mov
push
ss
sbb
xchg
movsb
cmc
mov
lcall
xor
fdivrs
pop
test
or
test
out
call
mov
cli
sahf
je
mov
jg
sbb
test
ffree
adc
dec
pushf
mov
inc
cmp
fimuls
pop
push
test
xchg
mov
add
xchg
xchg
les
std
or
out
stos
push
sub
push
jo
mov
int3
mov
pop
icebp
cmp
inc
scas
movsl
or
pop
fisubl
sete
adc
pop
mov
popf
shll
push
orl
sub
sahf
mov
mov
cmp
into
jmp
add
cmp
add
xchg
fwait
cwtl
pop
popf
pop
xlat
fisttpl
mov
add
cmc
add
add
xor
lods
shlb
iret
jb
bound
aaa
pop
push
mov
clc
enter
iret
dec
inc
or
xor
in
mov
push
inc
xchg
xor
aas
aaa
add
lret
icebp
add
out
jb
cmp
sbb
out
ds
gs
imul
mov
bound
xor
mov
or
jle
insb
mov
jb
pushf
outsb
mov
xchg
push
dec
mov
jp
xor
dec
push
pop
xor
jo
push
mov
movsl
hlt
or
jb
jo
and
jnp
cmp
push
cmp
sbb
icebp
fsub
xor
xorb
mov
adc
hlt
icebp
or
ret
adc
stos
lods
movsl
dec
je
xor
stos
xchg
jmp
fisubl
insl
mov
mov
mov
add
xor
add
stc
mov
dec
js
stc
mov
push
nop
aad
loopne
arpl
jmp
add
add
add
add
lods
jmp
mov
iret
test
ret
jl
sbbb
out
frstor
cli
pop
aad
mov
jns
and
pop
pop
inc
ss
test
sub
lds
lcall
cmpsb
bound
repz
fidivrs
js
sub
negb
or
in
lods
insb
cmpsb
outsb
stos
inc
or
out
and
adc
inc
or
push
adc
adc
jge
adc
sub
cmpsl
enter
dec
mov
insl
pop
stos
pop
inc
fwait
loop
jmp
ja
call
push
xchg
mov
jg
push
out
cmp
jge
loope
dec
xor
pop
popf
mov
push
mov
mov
fists
or
lret
fcompl
mov
dec
dec
adc
ret
enter
xchg
jo
lods
xor
add
mov
pop
insb
fildll
decb
add
pop
addr16
sarb
add
add
or
ret
pop
push
mov
xchg
add
adc
mov
ror
push
scas
xchg
jo
loop
xor
cmc
ja
aad
or
fadds
je
xor
fidivl
shl
xchg
cmc
lods
push
xchg
cmc
sbb
lods
mov
or
adc
inc
push
cmpsb
sti
push
cmc
xchg
pop
loopne
sarb
sbb
popa
pop
xor
sbb
movsb
dec
push
add
or
fdivrp
dec
setno
bound
add
fldcw
scas
fcomps
pop
xchg
jbe
jl
cmp
xchg
scas
xchg
cmp
je
xor
xlat
call
xchg
pop
add
call
dec
aas
adc
cmp
fisubs
lds
orl
inc
and
leave
icebp
pushf
loopne
jg
inc
push
xchg
xchg
kmovw
fisubrs
mov
add
cmp
jnp
sbb
sub
cmc
add
add
push
cmpsl
cmp
lods
or
mov
and
mov
sar
addb
lods
push
xchg
arpl
inc
inc
cmp
call
mov
stos
push
cmp
stos
fsubrs
xchg
adc
mov
mov
mov
jge
out
sbb
xadd
ja
in
insl
insb
ljmp
mov
push
cmp
adc
jg
je
cmpl
insb
addb
push
mov
divl
ret
stos
pop
mov
stos
push
in
lret
jbe
sbb
test
mov
fsts
out
xor
fiadds
fiaddl
mov
or
fiadds
stos
fists
std
dec
jmp
hlt
ret
fcomi
push
cld
into
pop
stos
xor
jmp
imul
hlt
test
mov
or
lods
jno
push
cmp
add
add
subb
jmp
popa
test
movsl
out
add
cmc
add
add
dec
ja
cld
add
mov
insl
jge
sub
sub
stc
rep
xor
sbb
inc
mov
mov
subl
bnd
cs
add
jno
or
inc
cmc
leave
mov
cmp
sbb
scas
jo
sti
xor
cmp
loope
movb
dec
xor
sbb
test
loop
dec
ljmp
xchg
sar
mov
fistps
pop
cs
subb
lods
mov
sub
adc
test
lret
mov
insl
imul
xchg
xchg
inc
sahf
cmp
dec
outsl
enter
loopne
mov
arpl
fisubl
mov
in
js
add
aad
imul
or
scas
sbb
inc
mov
add
add
jb
scas
cmp
int3
bnd
aad
lcall
add
jne
test
lods
test
mov
lds
pop
or
cltd
leave
sti
iret
lcall
cmp
int3
mov
inc
cld
imul
fimuls
fsts
lret
pop
mov
mov
movsl
xchg
adcb
or
lret
xchg
mov
loop
and
ds
add
mov
cmovl
xchg
imul
cmp
rclb
scas
mov
mov
mov
movsl
adc
loopne
push
leave
aad
bnd
mov
ret
jmp
dec
ja
out
mov
push
mov
loope
mov
and
or
and
jmp
mov
call
xchg
mov
lods
shlb
inc
pop
rolb
add
xlat
mov
bound
lock
cmc
add
add
mov
xchg
inc
pop
pop
dec
mov
fisubrs
jl
cli
sbb
adc
int
enter
lods
incl
inc
daa
in
jmp
xorb
pusha
leave
xor
or
lods
jge
int
xchg
lahf
scas
out
xchg
int
dec
mov
pushf
mov
pop
mov
out
sub
mov
les
test
or
test
and
add
xchg
aaa
stc
adc
mov
stos
das
out
arpl
jns
cmpsl
mov
es
js
and
in
push
xor
dec
pop
sbb
arpl
jl
jge
xor
push
nop
out
icebp
jae
fistpll
lcall
out
mov
push
in
insb
mov
fisubrs
or
pop
mov
in
sub
xchg
jb
aad
and
push
addps
inc
loop
xchg
test
imul
loopne
test
sub
push
lods
int
outsb
mov
add
lods
cmp
lods
aas
jp
int3
icebp
ror
dec
dec
test
add
cmc
add
add
negl
or
pop
fwait
test
adc
imull
mov
test
mov
mov
mov
imul
push
push
sahf
jo
xor
push
cmp
mov
lods
xchg
cmp
mov
xchg
push
scas
arpl
pop
pop
aas
mov
pop
mov
push
dec
leave
jle
or
inc
sub
mov
mov
loope
sar
xchg
mov
daa
cmp
cmpsl
dec
test
push
push
ss
dec
out
add
or
loopne
rorb
cmpb
addl
xor
xor
jno
ss
mulb
jne
pop
les
out
addb
pop
aaa
mov
aad
and
add
sbb
scas
aaa
mov
adc
loop
fadd
sti
mov
sub
push
sarb
add
cmc
add
add
and
fwait
aaa
in
test
in
in
sahf
shll
imul
push
jno
pop
stc
add
aas
mov
aad
mov
xchg
jb
les
inc
pop
aas
fwait
lahf
lcall
xchg
arpl
pop
push
adc
test
rorb
jg
cmpsl
dec
call
xchg
pop
mov
mov
fxch
fs
addl
jne
cmp
outsb
stos
adc
pop
mov
sbbb
mov
cltd
in
xor
clc
xor
ficompl
fwait
adc
lret
push
ror
fisttps
xchg
mov
mov
jns
mov
push
aas
mov
add
inc
push
shrl
ds
sub
sub
mov
push
sub
adc
dec
xchg
mov
push
cs
pop
cmp
add
add
into
adc
neg
jge
push
xchg
push
adcl
add
add
leave
dec
sarb
add
fadd
cli
mov
cli
mov
dec
jo
jns
mov
mov
xlat
mov
lcall
into
and
pop
imul
sub
leave
add
shld
cwtl
mov
inc
lods
sbb
inc
mov
mov
adc
jb
dec
jbe
sub
lds
mov
test
loope
push
pop
mov
rcrl
xor
xchg
sbb
pushf
lcall
ss
dec
cmp
mov
dec
test
jbe
outsb
and
popa
adc
movsl
pop
out
xorb
arpl
jmp
icebp
cs
add
out
mov
push
std
je
repz
push
sbb
jle
jo
ss
popa
insb
int
cmpsb
pop
repnz
shlb
inc
sbb
addr16
mul
int3
add
mov
int
inc
cltd
sub
push
aad
add
pop
cmp
outsl
jg
jg
mov
xor
xor
add
cmc
add
add
insb
push
movsl
js
int3
jp
pop
mov
ss
shl
fistpll
xchg
ljmp
mov
shr
inc
inc
jns
and
lods
popf
xlat
out
xor
dec
stc
lret
jle
or
inc
push
stos
xchg
adc
inc
cmpsl
test
loope
pop
lret
ret
push
addr16
cmp
decl
mov
lock
enter
aaa
rolb
fdivrl
pop
cmc
sti
imul
out
jno
dec
cmc
mov
mov
mov
push
jg
imul
adc
jg
lret
xlat
mov
fstps
pfpnacc
mov
sar
nop
movsl
inc
jns
loop
sub
stc
sbb
out
push
sub
push
or
pushf
xchg
pop
jns
pusha
dec
andl
dec
idivl
sbb
outsl
sub
push
imul
mov
mov
xchg
mov
add
add
ja
and
aaa
negl
fs
pop
cmc
add
cmc
add
add
add
orb
ds
sbb
rorl
popf
fnstenv
xchg
and
mov
rol
push
popf
adc
fisubl
inc
jl
repz
mov
xchg
push
inc
jp
inc
jge
enter
jp
pop
arpl
jne
ljmp
lods
xchg
pop
pop
mov
lods
sbb
xlat
lods
sti
mov
lret
add
or
pop
add
lcall
aas
sbb
push
pop
bound
mov
jnp
jg
lods
or
jmp
push
sub
xchg
daa
hlt
and
mov
clc
aam
sub
mov
lds
push
inc
fistpll
or
bound
incb
sub
or
leave
lret
lcall
cmc
xchg
cmp
rcrl
xlat
js
cmp
mov
mov
lret
out
pop
scas
add
add
mov
cmc
mov
mov
pop
ds
testb
cmc
add
add
add
mov
xor
ljmp
js
and
addr16
in
enter
lock
shll
mov
dec
iret
mov
fsincos
mov
or
xchg
cmc
insb
enter
ss
stc
sbb
stos
add
aas
test
paddw
shl
pop
mov
call
mov
daa
xorb
shlb
push
nop
xchg
sub
ljmp
pop
test
lods
out
je
cli
cmpsl
mov
in
stos
aad
and
test
adc
dec
pop
nop
cmpl
lock
mov
dec
push
hlt
pop
stos
pop
repnz
sti
or
mov
xor
popf
dec
or
ljmp
push
into
dec
push
jns
and
outsl
nop
sbb
sti
adc
iret
or
imul
in
cld
fwait
sbbb
mov
add
jle
jne
cmp
pop
cmp
ss
inc
testl
add
lods
push
sbb
dec
push
and
dec
mov
sahf
push
mov
dec
jo
iret
ret
sbb
fsubrs
jo
jns
fldl2e
pop
in
or
jne
and
or
in
mov
jecxz
jb
or
adc
cli
pop
or
movsl
and
adc
ret
mov
sbb
imul
dec
xor
dec
daa
jae
dec
lcall
push
shr
in
xchg
stc
pop
cmp
jp
mov
lock
xlat
stos
sti
popa
bound
dec
jnp
or
and
add
push
jae
jbe
sbb
and
aaa
inc
sbbb
shl
cmpsb
lods
das
mov
shrb
mov
xor
push
mov
outsl
or
xor
int3
sub
test
dec
xchg
pop
adc
int
dec
pop
cli
sbbb
jecxz
daa
push
cmp
push
test
mov
add
add
imulb
testb
cmp
cmc
add
add
mov
cli
xchg
xor
jns
in
ljmp
mov
push
cltd
loope
pop
mov
push
xchg
or
fisubrs
icebp
lret
xchg
outsl
int3
push
xchg
daa
fcomps
aaa
arpl
in
mov
stc
loope
insl
addr16
movsb
arpl
divb
aam
jle
ljmp
mov
jae
xchg
outsl
repnz
sub
xchg
jns
das
mov
jecxz
lret
cltd
mov
sarl
add
lret
jbe
sub
mov
push
in
inc
mov
out
xchg
push
add
xor
and
add
pop
push
or
jge
lahf
or
sbb
pop
xchg
std
bound
jbe
jnp
aam
add
xor
push
push
pop
mov
icebp
pop
xchg
fidivrl
add
ret
add
xor
xchg
fwait
bound
xchg
sub
dec
sub
add
cmc
add
add
std
fisubrs
fidivl
insb
mov
cmp
mov
cmp
scas
and
jne
or
dec
push
sbb
pop
mov
ror
jle
pusha
mov
mov
in
cs
pop
or
xchg
sub
bound
dec
fwait
addps
fidivrs
xchg
lds
lods
xor
jl
mov
test
cld
divb
hlt
scas
pop
repz
lret
shl
outsb
cs
cli
aas
fiadds
cmp
inc
xor
pushf
push
pop
fnstsw
in
mov
inc
jo
fsubrl
inc
in
daa
cmp
sub
adc
jb
lea
inc
negl
mov
rolb
push
push
jmp
jno
scas
scas
fs
sbb
outsl
push
and
add
add
ds
in
idivl
pushl
add
add
cmc
add
add
adc
in
add
fistpl
cli
push
les
aad
repnz
ljmp
sahf
ret
push
or
int
xlat
inc
loopne
adcl
adc
call
shll
cmpsl
push
push
jb
mov
cltd
mov
mov
mov
fmuls
mov
imul
add
mov
add
filds
sbb
mov
lahf
test
fcmovnb
jae
stos
icebp
sub
jge
adc
pop
adc
subl
repnz
cld
cwtl
imul
les
jle
pop
lret
xor
loope
sub
inc
push
jbe
jmp
inc
ljmp
leave
ret
lret
addl
out
adc
sbb
jecxz
fucomi
xor
xchg
add
add
jecxz
inc
cli
aas
push
ljmp
push
sti
add
cmc
add
add
mov
cmpb
mov
or
jo
push
pop
mov
ds
inc
or
dec
int
movsl
jo
cmp
xor
stos
push
ret
lock
jb
out
or
push
inc
aas
ja
cmp
lret
rcr
mov
sub
and
mov
pop
in
sbb
jns
pop
mov
dec
mov
call
push
and
mov
mov
loop
js
stos
popf
stos
adc
or
int
mov
jnp
mov
pop
or
cwtl
frstor
sub
into
imul
shll
or
in
out
cmc
pop
xchg
nop
push
jne
call
and
lds
adc
scas
dec
fiadds
add
movsb
imul
mov
jg
in
movsb
data16
aad
jp
xchg
xor
pop
add
add
lcall
sub
push
rorl
add
cmc
add
add
pop
mov
imul
gs
shl
repnz
cmp
inc
adc
xor
mov
jne
scas
mov
ret
mov
cld
jbe
hlt
out
xchg
sbb
xchg
pusha
repnz
enter
dec
add
sbb
mov
pusha
mov
mov
adc
mov
aam
dec
stc
dec
mov
pop
lcall
push
mov
aam
cmp
xchg
mov
aas
hlt
cli
jns
repz
and
gs
mov
sbb
jbe
mov
mov
test
nop
inc
icebp
lahf
clc
les
pop
inc
push
scas
mov
cmp
mov
mov
lds
pusha
lods
push
fwait
cmp
movsb
sub
pop
outsb
sbb
mov
mov
jge
adc
add
aaa
jae
cltd
dec
mov
fs
add
cmc
add
add
cmp
add
inc
call
dec
fidivs
stos
lds
and
mov
dec
mov
add
or
dec
stc
sbb
push
cltd
adc
lea
aam
add
cmp
insb
fisubrl
rcr
cmp
xchg
mov
xor
cmpsl
adc
inc
bound
clc
pop
shlb
pusha
sbb
cltd
sub
and
inc
fisttpl
sub
mov
cmpsb
cmp
inc
loopne
sbb
fdivr
cmp
add
call
movsl
add
popa
or
xchg
aas
xor
outsb
test
pop
repz
dec
daa
das
adc
addr16
mov
and
inc
cmp
push
mov
mov
mov
sub
inc
xchg
out
or
cwtl
dec
in
jl
add
add
push
into
nop
out
cwtl
jle
xlat
movsb
add
sahf
xlat
cmc
std
add
cmc
add
add
push
pop
rorl
mov
lods
add
mov
jmp
fldcw
push
pop
or
adc
push
sbb
lret
aad
mov
std
insb
fstl
cmc
jmp
dec
adc
xchg
sbb
loopne
adc
pushf
outsb
mov
push
aam
mov
loop
fs
in
lea
inc
pop
cmc
xor
sub
pop
mov
mov
js
repz
mov
and
ret
cmpl
cmp
mov
jmp
shrl
push
pop
adc
aas
sub
push
jp
mov
in
fisubrs
adcb
imul
push
mov
repnz
psubsw
pop
pop
jecxz
cmc
out
dec
into
mov
pop
out
mov
mov
add
sbb
ret
pop
outsl
mov
push
jg
stc
lea
fcomi
inc
lcall
add
add
test
jg
xor
or
fwait
push
add
add
add
or
and
push
int
lods
es
inc
cmp
xchg
jmp
adc
jl
or
out
push
fildll
mov
push
out
inc
mov
inc
pop
cmpsl
pop
ljmp
fmuls
cs
into
xor
imul
lds
jae
cmp
stos
sbb
addr16
daa
ljmp
sbb
sbb
jecxz
rorl
icebp
ja
cmp
ret
cmpsb
pop
mov
outsl
pop
test
cmpsl
pushf
adc
pop
push
or
push
test
data16
xor
stos
add
xor
xor
jno
dec
int
mov
xchg
test
insb
cmc
gs
loop
inc
das
shlb
rcrl
xor
test
out
lock
insb
movsb
xchg
mov
add
add
movsb
push
in
cmc
jne
pop
adc
lods
mov
xchg
add
cmc
add
add
mov
sub
or
xor
adc
movsb
xchg
mov
jne
mov
add
leave
push
sbb
ds
mov
push
push
pop
in
lgs
pop
cmc
fs
jnp
xchg
xor
sub
xlat
dec
push
loopne
lods
hlt
push
std
adc
jl
mov
adc
shl
cmp
cmp
xlat
xchg
out
push
insb
cmpsb
outsl
mov
cli
xchg
lds
xor
xchg
mov
dec
push
xchg
mov
mov
or
sub
push
push
push
sub
xchg
cwtl
pop
add
sahf
movsl
jne
mov
add
daa
add
pop
mov
push
iret
aaa
sbb
cmpsl
pushfw
ljmp
lock
in
shl
test
hlt
ss
jnp
outsl
ljmp
fs
inc
push
mov
sbb
shlb
aas
out
fwait
aaa
call
or
add
add
add
add
cmp
jo
hlt
xchg
jae
dec
addr16
xor
repnz
jno
jg
mov
mov
out
mov
mov
ss
pusha
cmpsl
ds
xchg
nop
and
in
jns
in
shll
fwait
idivl
mov
xabort
or
dec
mov
dec
mov
fdivs
cli
xchg
xchg
movsl
ret
outsb
les
and
leave
loop
pop
adc
mov
movsl
push
aas
shl
jle
rcr
ja
std
pop
xchg
jb
ljmp
cli
nop
fwait
push
pop
fdivl
xor
mov
xchg
in
dec
into
dec
push
mov
scas
test
add
jae
xchg
imul
lahf
loopne
fnstenv
cli
sbb
es
cmp
testl
pop
pop
repz
jb
stos
pushf
xor
arpl
hlt
inc
ljmp
add
add
mov
lcall
sti
test
add
cmc
add
add
outsl
add
frstor
pop
mov
push
ficompl
lock
in
cmp
ljmp
mov
in
mov
fldl
inc
aaa
out
sub
enter
int3
jp
xchg
pop
jg
mov
and
insl
xchg
adc
push
stos
mov
xchg
cmp
xchg
pop
or
and
sub
lret
mov
dec
mov
mov
sbb
xchg
mov
xchg
dec
scas
xor
or
xchg
in
gs
test
ja
stc
cli
fisubrl
or
adc
fst
pop
add
dec
mov
mov
lahf
insl
lods
and
stos
rorl
jmp
outsb
fistpll
sbb
sbb
adc
inc
xchg
out
pop
cltd
hlt
inc
mov
test
je
mov
xchg
stos
mov
ret
pop
add
add
ret
bnd
rorb
cltd
jl
inc
push
out
add
add
add
add
leave
sub
jecxz
fimuls
mov
cs
dec
dec
cld
negl
dec
dec
mov
add
fists
js
mov
xchg
pushf
ss
mov
inc
cmp
or
mull
mov
pop
sbb
mov
mov
or
xor
pop
rorl
repnz
flds
test
mov
mov
dec
outsl
aas
pop
xor
or
mov
mov
rorb
and
push
xchg
es
fs
pop
sub
sbb
sbb
or
adc
dec
scas
sbb
clc
xor
sbb
arpl
popf
scas
pop
xchg
es
push
insl
mov
pop
dec
insl
repnz
roll
push
jg
add
in
clc
fldcw
sub
xor
adc
xchg
mov
mov
ds
mov
cmp
add
add
add
std
aaa
mov
lret
jne
lahf
jecxz
mov
add
cmc
add
add
cmp
sub
iret
or
bound
lock
jge
sbbb
jmp
jp
iret
cld
xor
push
ds
xlat
fs
inc
out
sbb
xchg
add
mov
rcl
xchg
xor
movsb
comiss
adc
int
or
mov
or
cmpsb
xchg
dec
leave
dec
sub
mov
xlat
push
push
adc
arpl
int
aaa
shl
pop
ja
or
jns
dec
clc
insl
mov
push
vfrczss
push
shrb
cmpsl
adc
sarb
sub
mov
dec
sub
sub
jo
adc
sub
mov
or
outsl
shlb
dec
shlb
jnp
cmc
and
dec
imul
pop
cltd
pop
dec
lahf
in
xor
pop
shlb
xchg
call
dec
add
add
insl
aam
mov
fs
stos
ja
xlat
test
add
sldt
add
xchg
mov
in
or
lods
ret
add
mov
mov
or
dec
add
add
add
movl
add
lret
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cltd
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
call
out
fisttps
jecxz
call
lea
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cltd
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
addr16
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
ss
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cltd
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
ss
pushf
inc
decl
push
xabort
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
mov
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cltd
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cltd
lret
xor
mov
lea
xor
add
inc
dec
mov
addr16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
cltd
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
cltd
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
mov
ret
xor
add
ss
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
ss
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
pushf
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
inc
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cltd
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cltd
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
nop
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
jmp
mov
jle
inc
nop
in
inc
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
leave
add
and
inc
jne
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
in
jle
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
mov
mov
push
insb
push
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
ss
lea
mov
fadd
dec
lds
out
inc
lea
inc
dec
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
jmp
addb
mov
sub
add
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
jmp
push
jmp
addl
mov
inc
out
add
mov
outsb
inc
jle
idivb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
inc
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
std
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cwtd
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
add
lea
push
rolb
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cltd
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jae
add
mov
mov
data16
inc
lea
test
inc
dec
test
pushl
jnp
mov
mov
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
ss
pushf
inc
mov
hlt
test
cmp
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cltd
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
ss
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cltd
pushf
xor
jne
mov
icebp
icebp
shl
mov
inc
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
testb
dec
mov
mov
xor
mov
in
jge
mov
dec
inc
xor
inc
hlt
ss
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
ss
fdivl
test
push
add
cmp
setns
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
call
jne
mov
inc
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cltd
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
jle
popa
data16
into
addr16
add
cmp
add
cld
add
cmp
pop
or
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
decb
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
ss
call
clc
inc
shll
cltd
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cltd
cltd
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cltd
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
ss
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
ss
pushf
pop
mov
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
incb
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
ss
pushf
push
movl
inc
cmpb
pushf
addr16
shl
dec
xchg
jmp
aam
test
mov
or
add
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
ss
pushf
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
clc
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
mov
push
ret
call
call
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cltd
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
leave
call
call
in
jmp
and
call
pushf
inc
mov
pop
push
in
ret
and
mov
and
mov
or
lcall
or
decl
jl
adc
dec
cmp
mov
and
xor
test
jge
push
jmp
adc
dec
pop
ret
push
jmp
mov
add
adc
or
add
add
adc
std
dec
adc
outsb
adc
sahf
xor
add
adc
fs
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
adc
adc
add
push
adc
roll
int
adc
aaa
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
adc
sbb
adc
mov
dec
adc
inc
or
add
adc
mov
inc
inc
add
inc
add
inc
add
inc
inc
add
inc
inc
add
push
add
imul
sahf
push
adc
jle
adc
jbe
adc
cmp
add
adc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
adc
dec
dec
adc
dec
popa
adc
adc
add
push
adc
hlt
pop
adc
dec
pop
adc
testl
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
xor
cmp
push
add
push
xor
xor
push
add
inc
pop
dec
push
push
add
pop
aaa
xor
xor
inc
pop
add
cmp
push
cmp
add
cmp
cmp
pop
inc
dec
inc
push
add
xor
xor
inc
xor
xor
xor
dec
xor
add
inc
pop
ss
pop
inc
push
dec
add
push
pop
inc
push
push
push
dec
add
inc
pop
xor
push
pop
pop
xor
push
push
pop
xor
push
dec
xor
xor
xor
inc
pop
pop
xor
push
dec
push
xor
pop
push
xor
inc
add
push
cmp
pop
inc
xor
aaa
xor
pop
inc
cmp
dec
pop
dec
add
pop
push
push
aaa
dec
pop
xor
dec
dec
add
xor
push
pop
push
inc
inc
inc
add
inc
cmp
push
push
pop
dec
inc
push
pop
inc
add
inc
pop
push
inc
pop
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
add
add
add
add
inc
add
dec
add
add
inc
add
add
xor
xor
pop
add
xor
dec
add
pop
add
add
dec
add
add
dec
add
dec
add
xor
xor
pop
add
inc
add
add
push
add
add
pop
add
xor
add
add
dec
add
add
pop
add
pop
add
add
add
add
xor
xor
pop
add
pop
add
pop
add
add
add
dec
add
add
add
push
add
pop
add
xor
inc
add
add
add
add
cmp
push
add
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
push
push
into
cltd
imul
jb
in
and
pop
sbb
add
push
cmp
jne
insl
dec
jb
pop
bound
gs
arpl
js
je
jno
jno
bound
jo
bound
