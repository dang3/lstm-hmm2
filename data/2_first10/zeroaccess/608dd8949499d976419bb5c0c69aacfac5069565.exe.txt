push
mov
sub
mov
adc
mov
mov
or
mov
sub
push
movl
mov
mov
mov
sbb
mov
and
mov
orl
mov
mov
add
orl
mov
add
mov
jmp
iret
inc
loopne
push
adc
fmuls
and
mov
xchg
insl
mov
mov
jmp
xlat
sahf
aam
in
mov
adc
ss
data16
mov
dec
inc
movsl
mov
pop
inc
xchg
mov
fdiv
ret
orl
adc
movsb
jge
dec
mov
and
cwtl
clc
pusha
lds
popf
mov
inc
push
mov
cli
imul
loop
push
stos
xor
notb
out
mov
cmp
xor
sub
jae
jp
call
jle
push
push
jl
adc
or
cmp
lret
xor
mov
aam
jne
push
ret
aad
adc
cmc
jne
cwtl
mov
test
xchg
and
inc
mov
mov
cmp
or
pop
test
fs
aam
ret
cwtl
mov
and
jge
ds
push
jo
test
fptan
test
pop
cmc
daa
inc
xchg
jo
mov
sti
jo
mov
cmc
inc
mov
insb
adc
and
js
pop
inc
call
out
fstpl
cmc
jns
mov
inc
add
add
faddp
leave
inc
add
jl
lock
push
sbb
jns
shrl
incl
dec
mov
call
sub
mov
daa
aam
les
in
fdivrl
lahf
stos
repz
loop
fistpll
inc
inc
mov
insl
stc
imul
popf
popa
sbb
jge
lcall
mov
lods
pushf
dec
ja
lds
lock
xchg
lret
sahf
andl
pminub
jge
sub
xchg
out
fs
aam
mov
adc
push
xlat
jb
imul
test
hlt
ffreep
dec
dec
insl
inc
dec
icebp
and
leave
ret
mov
inc
or
jno
jge
dec
popf
pop
jno
mov
fisubrl
fimuls
or
dec
andl
stos
insl
mov
adc
repz
ja
jno
xlat
sbb
arpl
add
sbb
pop
sub
sbb
int
cli
or
dec
mov
repnz
adc
stc
je
jnp
les
mov
mov
mov
and
inc
inc
pop
jae
add
repnz
movsl
popf
in
popf
cs
xor
lcall
fdivrl
cwtl
sbb
push
loop
adc
rcrl
idivb
rclb
mov
xor
push
stc
mov
jmp
adcl
xchg
loop
inc
cwtl
in
daa
jno
int3
cmp
fdivs
dec
push
dec
xchg
decb
leave
xor
mov
sbb
call
sbb
xchg
xchg
leave
movsl
call
push
xor
sbb
and
inc
adc
mov
jg
push
les
or
inc
mov
jl
int
jbe
pop
test
cltd
or
arpl
jmp
push
cmp
aas
sub
out
mov
or
pop
lcall
mov
push
cmpsb
outsl
or
in
push
fs
mov
jns
push
or
out
sub
inc
lahf
aam
inc
movsl
pop
jecxz
xlat
lods
cli
sub
adc
mov
lock
popf
add
push
daa
push
mov
xchg
cli
push
enter
mov
daa
iret
pop
ss
pop
ret
fsubrl
and
test
xchg
gs
clc
loop
pop
fdiv
mov
repnz
test
mov
pop
das
mov
add
sbbl
outsl
rorb
adc
push
enter
lock
or
pop
ja
push
mov
rcll
mov
and
stos
cmp
xchg
icebp
inc
and
out
fxch
or
dec
mov
cmc
es
jp
mov
je
stos
mov
enter
mov
cwtl
scas
pop
push
or
cmp
hlt
push
fdiv
aam
fldcw
sbb
xchg
movsl
jbe
stos
imul
cltd
sahf
pushf
test
xchg
sbb
aad
and
clc
mulb
ret
jle
jle
andl
xchg
cmc
mov
notb
mov
repnz
mov
jns
sub
lcall
cmp
arpl
xorl
bound
xor
loop
ljmp
in
fmuls
outsl
and
nop
xchg
pop
mov
lcall
jnp
mov
lret
fldl
xor
xor
es
push
lock
jno
jbe
cs
popa
shrb
movsl
sub
fs
inc
sarl
ss
or
insl
fwait
inc
aaa
stos
outsb
int3
clc
cmpsl
lods
jge
outsb
dec
jbe
xchg
push
and
ljmp
sbb
lret
repnz
bound
add
lret
dec
cmp
test
popa
mov
sub
mov
xchg
jg
icebp
rorl
test
fwait
lock
pop
mov
scas
push
add
std
movsl
rclb
jp
pushf
loope
aaa
push
add
cmp
insb
movsb
fbstp
testb
lds
inc
cltd
push
jl
cmpsl
xchg
movsl
mov
xor
adc
pusha
sbb
sub
rcll
add
push
mov
mov
in
mov
mov
jmp
iret
sbb
sahf
cli
insb
test
movsl
xchg
fs
dec
sub
push
cmp
sub
inc
adc
jae
mov
fimuls
or
xor
push
jecxz
out
fsubl
jae
xchg
push
xor
lcall
push
ss
inc
mov
cs
xchg
adc
fisttpll
jns
pop
jns
cmpsb
push
add
lea
mov
pop
sbb
scas
outsb
mov
popf
inc
fadd
sbb
jmp
shrl
xor
mov
mov
adc
ret
xchg
outsl
std
adc
sub
outsl
or
loop
inc
insl
inc
cmpsl
into
mov
cmp
dec
push
xor
ret
sub
xchg
jo
mov
jnp
repnz
xchg
movsb
mov
aam
xchg
inc
sub
dec
frstor
add
test
sub
loope
add
cmp
mov
cld
mov
js
sarb
cmp
repz
push
mov
mov
outsl
sbb
imul
int
and
in
pop
xor
mov
jge
jle
andl
hlt
xorl
outsl
incb
dec
out
outsb
rcr
pop
add
dec
out
xchg
popa
dec
out
mov
adc
fs
push
push
mov
xor
stos
push
call
sbb
push
or
xor
pop
repz
fsubr
lods
iret
lea
and
insb
jg
and
jecxz
xchg
jae
lock
push
movsl
sbb
mov
ljmp
add
and
mov
inc
mov
mov
mov
addl
sub
notl
mov
movl
sbb
add
mov
not
orl
orl
cmpl
movl
mov
jmp
mov
jg
pushl
pushl
call
sbb
sbb
sub
or
orl
lea
adc
mov
or
mov
and
mov
xorl
mov
adc
add
mov
dec
mov
mov
adc
jmp
mov
xor
js
popf
mov
xchg
jno
and
push
jmp
jbe
mov
push
jnp
daa
xchg
inc
jle
nop
mov
pop
cmp
fldt
std
jg
cmp
add
mov
ficompl
lods
xor
adc
lods
mov
leave
insl
sub
mov
shlb
pop
out
outsb
xor
pop
pushf
and
jge
or
or
push
jns
shr
std
mov
insb
pop
loope
lea
loop
mov
cmp
mov
inc
outsb
push
pusha
test
in
arpl
mov
add
lods
es
pop
mov
xlat
stos
fmulp
mov
fldt
sbb
insl
sbb
jecxz
outsb
out
mov
xor
jne
mov
add
dec
lods
test
into
jo
sbbb
push
std
into
mov
das
mov
mov
jl
insb
movb
incl
add
ret
aad
mov
jnp
pop
xor
fsts
jg
mov
mov
inc
mov
and
pusha
gs
shrl
loopne
mov
cwtl
push
out
scas
push
xchg
sbb
aad
xchg
jo
xchg
mov
xor
sub
jge
cmp
lahf
mov
pop
xchg
mov
mov
mov
sbb
mov
jbe
enter
push
pushf
out
ret
push
xchg
bound
faddl
clc
xchg
ret
shll
cmc
sub
lea
lea
cmp
mov
test
imul
lea
or
cmp
adcl
mov
pop
lahf
mov
out
and
xchg
sbb
pop
mov
hlt
inc
rcl
mov
xor
aam
add
jbe
test
mov
loop
cmp
outsb
jne
pop
test
jnp
push
mov
push
mov
daa
jne
push
dec
stos
dec
adc
add
xor
sub
into
ret
cmpsl
push
mov
push
lret
sbb
lret
mov
shr
in
in
dec
pushf
in
cmpsl
test
fisubl
mov
jno
jae
out
adc
adc
cmp
in
or
shlb
popf
mov
sbb
shr
adc
cli
fwait
push
data16
sahf
add
call
xchg
popa
dec
fsubrl
add
sbb
movsb
test
mov
inc
sahf
fs
fiaddl
jmp
push
in
pop
into
mov
push
push
jge
push
lods
incb
repz
stos
js
std
bound
xor
add
mov
mov
out
popa
pop
inc
or
rcl
push
cmp
std
jae
enter
sub
in
jle
pop
jmp
or
in
mov
and
jge
xchg
dec
dec
cmpsl
movsl
pop
pop
sar
mov
sub
or
scas
or
pushf
testb
xor
mov
pop
call
lods
popf
cmpsl
cs
fisttpll
je
sbb
jle
pop
push
push
sub
or
lret
js
cmp
repz
mov
ljmp
xchg
out
mov
adc
xchg
ret
push
addb
out
and
push
dec
pop
fildl
cld
aad
lea
das
pop
das
dec
sbb
mov
inc
add
scas
xchg
lds
mov
mov
inc
push
and
lcall
mov
xor
lret
bound
push
call
nop
mov
shrb
out
or
or
mov
insl
cld
jo
xor
cli
pop
movb
jnp
cwtl
lcall
mov
xchg
fwait
jo
cmc
fld
mov
fs
mov
shrb
mov
mov
xor
xor
push
cmp
outsl
xor
shlb
cwtl
jge
xchg
negl
out
mov
sub
das
push
add
and
cmp
add
addb
test
movsb
add
out
in
inc
arpl
sbb
insb
jno
push
std
xor
add
and
repz
lea
loop
or
dec
dec
mov
sub
stos
jb
jb
push
xor
lret
imul
and
ja
lods
mov
push
out
dec
xchg
inc
pop
into
jbe
mov
outsl
adc
inc
mov
mov
add
arpl
add
adc
cli
fucomp
popf
mov
xchg
mov
cmp
imul
out
mov
imul
cmp
sub
lds
adc
xlat
sub
inc
dec
insl
jbe
jo
and
aaa
xchg
xor
pop
jge
ret
sub
cmp
es
mov
jno
push
insl
sub
mov
and
sti
sbb
cli
dec
cmpsb
lods
lahf
leave
sahf
fcomps
pop
clc
pop
or
jns
and
xor
mov
ss
data16
mov
fwait
in
mov
add
cmp
imul
push
xchg
and
dec
lds
xor
aam
mov
fs
popw
in
or
fstps
mov
dec
mov
jb
jmp
push
push
ret
mov
mov
jnp
in
data16
sbb
insl
stc
stos
push
add
push
push
leave
clc
loop
jp
mov
sahf
orb
cmp
xchg
faddl
lods
mov
xchg
pushf
inc
cmp
jo
xor
aaa
cmp
pop
stos
cmp
out
push
outsl
stos
or
mov
push
dec
mov
lods
icebp
mov
and
jl
sbb
mov
jmp
ja
push
cmp
lcall
out
in
fnstenv
add
cmpb
mov
push
fcoml
cmpsl
push
sub
jmp
leave
or
lods
and
hlt
pop
sub
sub
or
xchg
out
lcall
ret
sbb
inc
inc
leave
jg
es
xchg
xor
mov
pop
icebp
pop
repnz
dec
mov
clc
xor
pop
cmp
lcallw
push
jbe
add
ficoms
popa
adc
in
in
loope
es
and
jge
cli
add
iret
push
fisubrs
or
addb
gs
in
mov
jns
clc
cmp
push
add
mov
aam
daa
sub
and
jno
es
adc
pop
fsubrl
pop
cmp
sbb
jmp
cmp
cmc
xor
xor
pop
or
add
adc
pop
popf
and
mov
mov
aas
movsb
mov
cmp
dec
pop
mov
in
hlt
inc
xorl
pushf
inc
outsb
scas
mov
lcall
lock
push
imul
test
inc
enter
jbe
dec
sbb
lods
enter
hlt
adc
add
jmp
jmp
mov
lock
popf
mov
add
pop
js
cmc
ja
inc
cld
scas
jmp
movsb
pop
popf
ds
into
sub
jbe
push
and
divl
cmpsl
fdivrs
mov
test
push
pop
or
mov
mov
test
repnz
xor
imul
jns
push
mov
shll
sub
imul
fldcw
jno
or
in
pushf
xlat
push
jo
mov
xor
push
mov
mov
out
les
data16
test
in
jecxz
xchg
js
jp
mov
js
scas
pop
xorl
pop
and
test
and
rcrb
fstps
or
mov
xor
cmp
cmp
mull
xor
lret
mov
das
mov
jle
lock
in
inc
out
pop
mov
in
add
adc
mov
mov
adc
sub
push
fld
jp
fnstsw
and
pop
cld
imul
and
mov
faddl
ficomps
pop
ljmp
jmp
orb
jno
inc
xchg
adc
out
dec
addb
mov
sbb
test
lods
or
xor
mov
call
adc
cmp
pop
pop
jo
adc
mov
ret
imul
orb
mov
jge
pop
adc
xorl
dec
loop
adc
in
in
and
sahf
movsl
popa
mov
out
mov
pop
pop
cmp
inc
push
push
jg
call
xchg
and
add
negl
pop
je
aaa
loop
pop
and
mov
mov
or
test
stos
cmpsb
idivb
inc
cmc
cltd
cltd
push
in
rep
and
jg
sub
inc
mov
and
iret
sarb
jb
mov
dec
pusha
mov
add
gs
jg
sti
bound
outsl
jl
xor
xchg
bound
ds
dec
jp
push
sbb
sarl
gs
js
out
fwait
insb
dec
adc
dec
sub
pop
lahf
andl
shrb
daa
jge
adc
adc
arpl
or
movsb
add
adc
push
xor
push
jbe
pop
jl
rcll
inc
push
fistpll
and
sub
lds
xchg
cs
mov
shl
cmpsl
xchg
aad
mov
xchg
mov
cmp
les
loopne
push
xor
in
js
add
xchg
push
mov
pop
aad
pop
pop
dec
push
cmp
sbb
or
testb
and
xchg
push
int
mov
sub
aam
stos
cmp
add
mov
inc
nop
and
pushf
inc
loope
xor
push
outsl
mov
repz
and
repnz
mov
jmp
ret
pop
dec
dec
cs
in
loope
jg
adc
das
aas
cmp
add
js
fwait
xor
mov
loope
pop
jecxz,pn
adc
hlt
stc
aaa
push
mov
js
pusha
ret
mov
pshufw
inc
jnp
shll
jns
cmp
shl
and
jne
imul
into
adc
outsl
jne
sub
repnz
ds
arpl
jns
mov
insb
adc
cs
jmp
es
mov
push
xor
dec
adc
bound
cwtl
mov
dec
stos
popf
adc
loop
adc
aas
jo
or
cmp
pusha
cmp
xor
mov
cmp
cmp
in
mov
imul
adc
inc
imul
adc
pop
clc
jno
orl
and
xorl
push
pop
sub
addr16
lcall
fidivl
xor
add
mov
mov
mov
xor
stos
xor
mov
cmp
xchg
out
xchg
in
lods
cmpsl
fistps
add
add
mov
sub
repnz
push
shlb
pop
popfw
jne
dec
int3
mov
ljmp
adcl
sub
push
clc
xchg
stos
cmp
xchg
das
push
inc
xchg
sub
bnd
dec
int3
or
sub
in
in
sbb
jne
dec
jne
push
mov
xchg
test
and
jnp
xor
cmp
sub
sub
sbb
cmp
push
cmc
mov
mov
pop
and
fwait
lea
lret
dec
movsl
insb
dec
push
imul
or
aaa
add
mov
pop
aas
mov
xchg
mov
mov
add
cmp
jno
clc
jnp
mov
movsb
xor
sti
push
push
pushf
add
pop
xchg
cmp
push
into
jno
xchg
push
xchg
and
out
sub
clc
in
pop
mov
into
push
fistl
repz
xor
mov
add
mov
loopne
jno
mov
xchg
data16
sbbb
inc
insl
mov
adcb
cltd
outsb
ret
sbb
inc
cltd
fisttpll
lret
cmc
adc
pushf
movsb
mov
cmp
call
ret
jbe
sbb
pop
push
or
xchg
jmp
aaa
xchg
xchg
jle
sahf
mov
and
xchg
lods
cwtl
daa
movsb
or
or
inc
movsl
xor
push
jnp
mov
fdivrs
mov
dec
stos
enter
repz
cmp
loop
adc
mov
sbb
stc
popa
inc
decl
pop
out
hlt
or
js
insl
inc
push
enter
lods
jp
cmp
mov
jbe
sub
cmpsb
scas
xchg
inc
xchg
popa
fdivp
sarl
outsb
in
cmpsb
mov
stos
dec
int
xchg
jmp
inc
cld
test
loopne
dec
mov
ds
pop
mov
jle
subb
pop
cmc
xor
sub
push
push
fsubrl
fwait
push
leave
jge
xchg
in
imul
and
mov
retw
es
inc
aaa
mov
xor
ret
test
mov
cmpsl
push
mov
cmc
sub
int
sbb
jmp
fwait
mov
ja
or
dec
xchg
nop
ret
daa
xor
xor
mov
mov
xchg
add
xchg
mov
adc
adc
xor
inc
ds
cmp
lahf
test
xchg
int
sub
inc
lock
adc
lahf
cmpsl
xchg
cmpsb
sub
mov
add
lock
dec
push
xchg
and
fists
lcall
inc
es
and
pop
mov
mov
in
inc
cltd
xchg
push
icebp
repnz
popa
xchg
test
enter
push
xor
mov
pusha
sbbl
mov
or
movsl
int
cmp
dec
mov
mov
rcll
and
loopne
add
xchg
jae
and
pop
mov
push
pop
mov
loopne
sub
add
out
call
es
into
mov
das
scas
dec
shrl
inc
mov
jns
mov
adc
test
push
enter
push
sub
sbb
and
pop
cmp
add
movl
add
rorb
rolb
add
movl
movl
movl
jmp
movl
not
jg
pushl
push
push
push
pushl
push
pushl
call
sub
xorl
andl
andl
addl
addl
adcl
movzbl
adc
jmp
sti
loopne
stos
dec
or
xor
add
cwtl
out
ja
mov
and
cmpsl
and
sahf
aam
mov
aas
pop
faddp
aad
mov
aas
movsl
mov
mov
shl
popa
cmp
or
ficomps
sub
outsl
mov
cmp
stos
mov
loope
and
lea
ds
inc
or
dec
push
mov
xchg
xor
cs
mov
cmpsl
shll
xor
add
mov
mov
inc
lock
mov
jp
mov
lds
adc
stos
in
adc
sub
int3
xchg
clc
pop
jmp
or
mov
jne
sar
int3
mov
pusha
or
push
jecxz
or
inc
in
popa
lahf
cmp
addr16
jns
pusha
push
push
lea
cld
sbb
sbb
fidivl
mov
cmpsb
jo
mov
test
adc
int3
gs
lods
xor
adc
push
sbb
mulb
or
outsl
mov
xor
jl
cmp
jg
fsubr
mov
into
je
push
mov
push
adc
xchg
mov
icebp
sbb
add
cmp
or
xor
xlat
xor
dec
imul
movsl
or
stos
pop
lret
mov
andb
fmuls
lds
cmpsl
into
outsl
push
xorl
inc
pop
xchg
fs
sbb
sar
lret
stos
shll
cli
adc
or
aaa
subl
jo
sub
mov
adc
aam
into
xor
push
inc
jno
lea
lea
jns
fmul
insl
jno
imul
popa
ss
fistps
jmp
cmp
pop
xlat
seto
int3
dec
shll
sbb
out
sbb
mov
and
lods
ret
test
fisttpll
mov
xor
out
jnp
mov
and
scas
lcall
xchg
or
gs
and
sub
inc
xchg
mov
jmp
enter
enter
mov
pop
mov
pop
and
in
repz
testb
sti
and
dec
or
sahf
ret
sub
popa
aam
loopne
pop
mov
arpl
push
loope
push
inc
lahf
popl
andb
cmp
loope
inc
movsl
xchg
shrb
jmp
pusha
mov
test
lods
icebp
out
or
addr16
bswap
dec
leave
les
add
and
out
or
jl
scas
sub
shl
jmp
lahf
mov
and
lret
call
lods
dec
in
sti
in
rcr
ja
aam
xor
cmp
mov
aaa
js
fiadds
jmp
cmp
jns
mov
xchg
dec
and
aaa
nop
cmp
mov
pop
aaa
cmp
imul
loope
dec
ret
adc
mov
push
pop
xchg
jp
into
push
and
movsl
dec
lea
pusha
push
lcall
pop
arpl
adcb
xchg
in
push
lea
or
into
daa
or
int
out
xchg
sbb
xchg
and
leave
xlat
fsubrs
cmp
add
xchg
mull
jb
cmpsl
stc
in
test
mov
mov
mov
sub
mov
je
lods
push
add
pop
rolb
jae
shl
or
cli
jmp
pop
dec
push
int
adc
bound
test
lock
mov
mov
lcall
sub
cmp
pop
mov
loope
jno
paddusb
in
in
push
fdivrl
sbb
inc
xor
pop
mov
je
daa
push
out
pop
ja
movl
pop
pop
sbb
pop
or
jmp
enter
push
fs
lcall
adc
xor
mov
jl
cmpsb
scas
mov
pop
outsb
fdivs
adc
xchg
popf
jecxz
mov
mov
ja
test
lret
orb
popa
sub
les
jno
in
dec
negl
das
leave
inc
negb
pop
ljmp
and
je
inc
movsb
mov
jo
popa
jne
ficomps
movsl
inc
imul
pop
jo
push
outsl
test
inc
mov
bnd
lcall
popf
xchg
andnps
sub
sbb
pop
xchg
mov
mov
lock
adc
lds
inc
adc
dec
fnstsw
movsl
push
add
sub
add
mov
and
ja
mov
mov
cmpsb
pop
mov
pop
push
pop
shll
daa
sub
ja
xchg
mov
sub
dec
sarl
loopne
pop
dec
in
xor
faddl
rcr
inc
lock
les
das
mov
icebp
inc
jmp
jle
push
leave
inc
loopne
ja
xchg
daa
movsb
inc
add
inc
ffree
jno
push
cmp
movsb
sub
lea
push
not
ss
cli
mov
loope
sahf
cmp
xor
mov
lds
mov
hlt
pop
frstor
or
aam
sub
and
cwtl
lret
mov
es
sub
test
xchg
ds
test
cmp
fadds
idivl
mov
jne
fnstcw
xor
es
or
push
enter
ja
xchg
push
or
lahf
movsb
push
xchg
xor
pusha
lahf
mov
push
add
sbb
mov
push
pop
push
out
jmp
pop
out
std
es
fucom
jge
mov
add
cmp
or
jb
cmp
call
and
and
imul
pop
xor
cs
insl
fcomps
loop
movsl
dec
into
push
rorl
sbb
jae
jg
cmpl
icebp
and
dec
es
or
pusha
cmpsb
call
jne
loopne
icebp
sub
lret
rorl
xchg
adc
xor
fs
push
fcmovne
mov
adc
mov
mov
scas
std
xor
mov
cmc
test
xor
insb
rolb
movb
push
sarl
sbb
mov
imul
push
dec
and
mov
mov
lahf
push
mov
hlt
mov
pop
jb
and
adcl
xchg
xchg
sarl
adc
push
pop
cwtl
in
jbe
sbb
xlat
and
dec
or
mov
xchg
jnp
ret
sbbl
ja
mov
popf
adc
push
xor
stc
pusha
mov
shl
stos
jne
dec
dec
outsb
orps
lods
jb
test
sub
and
mov
pop
aas
mov
loopne
neg
adc
movb
ss
ret
pop
mov
push
push
scas
and
movsb
pop
call
push
add
and
fisttpl
repnz
pop
fsubrs
push
mov
inc
or
jnp
xchg
loopne
mov
enter
xchg
pop
xor
pop
dec
mov
or
movl
movl
sub
movl
movl
and
movl
movl
movl
xor
or
adc
movl
cmpl
movl
mov
jmp
not
jl
push
pushl
pushl
push
call
add
sbbl
add
sbbl
xorl
sbbl
notl
or
movl
addl
movl
movl
movl
mov
or
mov
movl
dec
movl
movl
cmpl
movl
movl
movl
movl
jmp
mov
jge
push
call
movl
orl
orl
add
xorl
xorl
xorl
and
movl
cmpl
movl
mov
jmp
mov
mov
jb
push
pushl
push
push
pushl
push
pushl
push
push
pushl
pushl
call
orl
sbbl
adc
addl
movl
sbbl
movl
add
movl
jmp
and
jnp
sub
mov
xchg
outsl
adcb
cmovs
push
xchg
fcoml
andb
cmp
jge
in
push
ret
iret
xor
and
std
ret
loopne
dec
lahf
rorl
dec
inc
mov
jbe
mov
test
sarl
es
sbb
dec
adc
jbe
lret
in
popf
mov
sbb
pop
inc
aad
cmp
sahf
pop
cld
or
int3
mov
push
jecxz
test
mov
and
rorl
add
jmp
pop
repnz
adc
mov
push
cli
sahf
sub
js
xlat
xor
fisubrs
popl
adc
push
jnp
push
cwtl
loope
jo
idivl
push
adc
outsl
lahf
or
js
inc
push
dec
sub
push
sbb
sbb
movsb
pop
adcl
mov
or
inc
ret
pop
push
mov
shrb
pop
in
cld
add
pop
add
aam
jle
push
sbb
aad
mov
std
sub
data16
aas
cmp
cmp
jg
cmpsb
xor
adc
inc
cmp
hlt
adc
pop
pop
test
ret
imul
pop
mov
test
lahf
fsubs
stos
mov
inc
imul
pusha
stos
mov
xchg
aas
inc
add
bnd
subl
adc
test
mov
push
aas
sbbb
pop
je
jmp
test
insb
and
push
or
pop
push
rorl
mov
jge
cli
lret
ss
pop
loope
orl
xorl
std
cwtl
sbb
cmp
inc
dec
repnz
out
sbb
fs
dec
adc
scas
ficomps
adcb
fwait
xor
jmp
xchg
mov
leave
ret
xor
loop
cmp
insb
data16
mov
into
test
cwtl
cli
icebp
or
popf
es
and
aaa
dec
jge
mov
pop
in
jae
les
cwtl
push
daa
push
stos
roll
sub
cmp
loop
jmp
pop
into
xchg
imul
fisttpll
mov
fimuls
sti
lds
and
push
ds
cvtps2pd
sub
shll
fsts
pop
mov
sub
cltd
jbe
inc
shlb
scas
xor
adc
fidivs
xor
add
xor
sub
mov
popf
lods
adc
fdivp
xchg
inc
xchg
pusha
jns
mov
lock
pusha
test
mov
lds
xchg
ret
pushf
lahf
pop
adc
mov
inc
adc
sub
adc
push
adc
addr16
ret
and
subb
cmp
dec
pop
dec
xor
mov
fs
mov
fldt
gs
outsb
jg
sbb
xorb
scas
test
xchg
inc
loop
cmp
clc
inc
push
add
shll
subb
inc
sub
testl
test
xor
stos
xor
imul
imul
cmp
in
dec
insl
movsb
mulb
fwait
popf
inc
mov
add
test
jb
fnstsw
xchg
xlat
test
and
xchg
insb
push
lret
inc
lcall
push
push
pop
movsb
ss
movsl
fidivrl
cld
and
sub
rorl
scas
scas
mov
jmp
int
outsb
jo
mov
out
cli
jp
arpl
mov
scas
ficoms
jo
add
vmovd
cmp
mov
lea
cmc
mov
mov
movsl
and
icebp
cmp
lea
add
pushf
mov
or
sbb
dec
out
int
inc
cld
dec
sub
jmp
imul
popf
sbb
loopne
ret
idiv
fwait
push
xchg
pop
and
fs
gs
insl
xor
mov
loope
je
std
sbb
cltd
int
sbb
lock
cmp
mov
sarl
xchg
loope
js
int3
mov
and
sbb
dec
pop
daa
sbbl
push
sbb
mov
stc
mov
movsb
jo
sbb
cmc
icebp
jmp
mov
cld
sub
jp
xchg
mov
lcall
das
es
enter
jb
dec
lret
daa
cmpsb
daa
add
dec
sbb
jne
fdivs
insb
test
lcall
out
movsl
std
push
fs
push
insl
xchg
test
inc
xchg
mov
lret
imul
addr16
loop
cli
push
xor
inc
lea
mov
mov
sbb
stos
mov
pop
jle
sbb
inc
jg
lods
ja
xor
inc
pop
push
sub
cmpsl
movl
jne
jbe
mov
arpl
add
jecxz
popf
je
pop
xchg
push
xor
mov
adc
pop
cltd
push
int
je
or
das
pop
mov
xor
jbe
inc
xorl
xchg
mov
in
mov
adc
pop
retw
dec
inc
fstl
push
and
subb
lods
mov
fidivrs
mov
xor
ja
xlat
xor
data16
or
and
add
cmpsb
push
cwtl
aad
mov
lds
xor
scas
mov
scas
sub
xor
xchg
sti
test
stc
or
lods
jnp
push
sub
fidivrl
pop
test
dec
ficoms
or
scas
icebp
cmpsb
mov
mov
xabort
bound
dec
or
xchg
adc
je
int
std
repz
push
outsb
xchg
or
xor
cmp
sarl
out
mov
mov
push
ror
daa
dec
adc
ds
xor
sub
xchg
stos
mov
or
lock
lahf
mov
jp
mov
shrb
dec
dec
sbb
cmpsb
and
aaa
mov
ret
sub
arpl
dec
call
test
out
or
ds
popf
iret
pushf
mov
sahf
subb
xor
das
inc
ret
icebp
ss
dec
jne
jnp
add
mov
dec
pusha
sub
sub
ffree
pusha
mov
sbb
jp
adc
inc
sub
push
mov
sub
inc
cmpsb
inc
scas
xchg
leave
call
lds
or
xchg
cmc
cld
mov
add
ss
in
mov
ljmp
inc
pop
imul
xchg
mov
push
jbe
movsb
data16
ljmp
popf
lds
popf
jecxz
mov
fnsave
test
in
shlb
test
pop
addr16
dec
mov
fimull
scas
push
stos
rcr
mov
xchg
mov
dec
cmpsb
push
push
scas
sbb
jnp
push
push
lcall
mov
out
into
jg
pop
sbb
aas
adc
xchg
fwait
xchg
pop
test
ds
add
in
push
lret
jno
ror
and
xlat
sbb
aas
pop
xor
push
daa
mov
ja
add
enter
movl
inc
movl
xorl
movl
mov
xor
movl
not
movl
mov
addl
jmp
in
outsl
dec
gs
notb
inc
test
cmpsl
les
ja
imul
ljmp
inc
outsb
les
sbb
lea
push
cs
xchg
mov
cmpsb
inc
dec
test
in
das
cmp
inc
ficompl
test
out
mov
sub
and
lock
std
fistps
lds
and
lea
mov
xchg
and
js
lods
shr
lcall
popl
add
test
iret
hlt
test
dec
push
in
notl
cli
imul
loopne
or
and
mov
mov
loopne
lret
into
xchg
fdivs
bound
out
out
lret
mov
in
cs
xchg
dec
nop
aam
cmpsl
cltd
dec
lock
jmp
loope
xchg
test
imul
pusha
fisubrl
jp
aam
lds
fidivrl
xor
rclb
xchg
pop
mov
pop
pop
iret
push
add
imul
xchg
fwait
inc
fwait
jl
addb
or
xor
sarb
sub
inc
nop
sahf
decb
mov
mov
lahf
mov
leave
fwait
or
idiv
xchg
pop
out
dec
movsb
mov
sub
push
jge
push
and
lret
mov
mov
fistpl
sar
jno
push
fsts
pop
jp
dec
out
mov
or
mov
repnz
subb
nop
aam
cli
testl
lea
mov
push
test
ret
push
lock
idivb
pop
std
int
lret
lret
or
gs
and
xor
lds
shll
mov
and
adc
je
mov
sub
mov
out
and
push
jge
jo
dec
rcrl
mov
mov
clc
mov
sub
push
inc
jp
ja
mov
iret
test
je
sbb
adc
mov
subb
pop
mov
push
sbb
mov
push
aaa
out
out
jg
dec
jne
std
jns
mov
xchg
addr16
mov
ljmp
ret
adc
mov
test
into
in
mov
inc
jb
call
add
out
lret
int3
and
popa
add
xchg
test
fisttpll
pop
cmpsb
xchg
mov
fisubrl
aas
mov
sahf
adc
push
lods
inc
inc
cmp
pusha
fwait
jno
adc
xchg
lds
jg
push
ficoms
dec
out
jnp
outsl
push
icebp
ss
fbstp
fdivp
insl
adc
cmp
cs
push
jbe
stc
insb
xchg
xchg
out
mov
in
sbb
inc
jge
nop
es
orb
mov
mov
loope
or
inc
or
pushf
sbb
lret
nop
dec
aad
sbb
out
fstl
pop
or
inc
lds
fists
std
adc
pop
mov
or
cmc
std
and
mov
mov
fldcw
test
test
dec
pop
mul
aam
ret
nop
xchg
xor
sbb
sub
and
mov
jnp
add
jbe
les
ficoms
push
pop
pop
leave
ret
push
daa
das
popa
cmpsl
iret
xor
pop
add
sbb
lds
mov
subl
mov
xchg
inc
dec
cmp
mov
jmp
or
enter
out
lods
fidivrl
and
and
and
jns
xchg
clc
push
cmc
jle
or
std
insl
xor
push
nop
sbbb
adc
xor
sarl
xor
jg
push
rolb
mov
scas
pop
dec
scas
add
in
mov
inc
mov
pop
mov
add
mov
loopne
lret
cmc
fisttpl
ss
aad
lret
out
add
mov
fdivs
aad
sub
sbb
out
add
sbb
hlt
adc
adc
mov
and
ljmp
xor
int3
es
push
in
je
repnz
repz
stc
xchg
pushf
mov
mov
in
inc
sbb
sti
rorl
mov
sub
fldenv
enter
sbb
lea
ret
outsb
xchg
xor
int
andl
cs
mov
cmp
dec
cmp
pusha
ret
xchg
xchg
dec
push
insb
sbb
lahf
push
addl
sbbl
or
dec
xorb
mov
push
out
loope
ja
add
lret
mov
mov
pop
pop
push
fwait
test
adc
jnp
push
rclb
cmpsb
in
or
les
sbbl
sub
mov
fdivrp
fsubrl
mov
aam
mov
push
repz
int3
loop
mov
cli
and
lds
xchg
mov
jl
addb
ja
movsb
inc
cmp
iret
mov
cli
inc
movsb
push
jns
cmp
dec
mov
loop
leave
test
xor
inc
fs
cltd
add
sbb
inc
inc
ret
push
push
in
cmp
shl
test
test
jnp
mov
push
inc
inc
aas
stos
repz
xchg
cld
xchg
lret
in
popf
lcall
adc
movsb
dec
lods
jno
xor
dec
inc
jmp
in
imul
nop
sub
cltd
lret
cwtl
iret
jge
sbb
popf
ficompl
add
or
lods
push
stos
lods
xor
inc
gs
shrl
xor
push
or
popa
dec
das
dec
clc
test
ljmp
jbe
xor
imul
pusha
in
cmp
cmp
mov
cld
pop
inc
fwait
pop
divl
sbb
fisttpll
cmc
and
sub
sub
mov
leave
xchg
scas
hlt
aam
add
adc
dec
xchg
lock
mov
mov
add
js
shrl
jb
dec
xlat
test
clc
sub
xchg
mov
sub
xchg
jge
movb
clc
popf
fistpl
out
mov
roll
or
or
icebp
ja
inc
push
shll
and
int3
push
fimull
out
stos
sub
xchg
jo
inc
mov
and
lcall
xchg
fisttps
test
xchg
cmpsl
sti
mov
add
ljmp
cmp
mov
daa
in
sbb
adc
cmc
neg
inc
cli
jae
repz
sub
dec
movsl
pop
cli
add
ds
pop
inc
inc
js
or
pushf
dec
inc
fcoml
push
add
add
daa
mov
test
scas
std
cmp
outsb
pushf
ret
adc
jmp
mov
mov
mov
in
pop
adc
jae
xchg
inc
add
in
or
rcr
popf
stos
roll
pop
push
test
pop
ljmp
repz
xchg
addr16
pop
outsl
pop
dec
pop
sbb
push
push
jns
push
mov
lahf
or
sub
addr16
sti
setns
inc
pop
sub
aam
push
push
mov
orl
push
adcl
push
andl
push
push
adcl
call
adc
mov
subl
mov
xor
mov
sub
mov
movl
jmp
mov
daa
xchg
gs
or
mov
data16
inc
mov
ja
mov
ss
adc
jg
and
lcall
clc
push
adc
mov
sbb
add
jo
bswap
pusha
dec
push
sahf
mov
push
push
mov
out
in
inc
mov
jae
dec
out
adc
leave
jp
push
rolw
push
repnz
mov
imul
add
xor
mov
aas
arpl
add
daa
push
mov
insb
xlat
mov
sbb
adc
jnp
aam
mov
pop
mov
cmpsl
in
subb
push
cld
test
nop
sbb
jge
jp
pop
sti
and
jge
inc
sub
jnp
incl
imul
pop
jmp
sub
ret
loop
cmpsl
add
mov
aad
cmpl
aaa
mov
cmp
adc
dec
xor
jl
sbb
js
push
add
repz
fsubl
hlt
loop
sbb
fs
pop
insl
push
pop
lret
test
addb
dec
lods
inc
dec
inc
aam
xchg
push
inc
shl
sbb
ret
loopne
rorb
test
ja
enter
push
xorl
fstl
cmp
dec
mov
clc
popa
or
mov
cmp
stos
in
movsb
jno
fsubp
sbb
sti
mov
push
xchg
xor
dec
das
xchg
push
mov
pop
in
mov
fisttpll
les
pop
popa
test
loope
loope
dec
adcl
and
mov
filds
cmp
mov
mov
fists
fs
subl
sbb
movsl
iret
loop
push
mov
xchg
jp
movsl
scas
adc
push
lock
cmp
adc
or
incb
cltd
fcompl
aam
lods
push
add
iret
xor
cmpsb
or
fiaddl
dec
hlt
inc
jg
ret
out
push
ret
pop
dec
daa
sarb
sub
sbb
adcl
in
xchg
xchg
loopne
mov
mov
pop
and
sbb
push
xchg
mov
loop
sub
xor
add
test
jg
jp
mov
add
mov
mov
or
aam
dec
push
filds
lahf
jecxz
rol
je
push
std
mov
jne
std
push
push
adc
ja
stos
or
lret
mov
and
mov
je
mov
pop
and
sarb
and
in
add
mov
cmp
test
jmp
in
or
fstp
xor
mov
adc
or
xor
xchg
in
mov
aas
loope
sbb
cli
fwait
mov
lock
aad
stos
out
or
aas
cmp
shll
push
mov
jge
cwtl
mov
movsb
sahf
inc
sbb
je
and
stos
test
fcomi
lret
sarl
fadds
in
test
andl
adc
jbe
pop
stos
addr16
push
xchg
aaa
add
outsb
pop
ss
or
sub
movsb
mov
or
call
lcall
cli
cld
dec
cmp
mov
fsubp
jae
mov
mov
jo
int3
lds
jle
dec
ljmp
jo
jno
jge
flds
mov
mov
fsts
aad
xchg
nop
sub
mov
push
push
lret
leave
lds
adc
pusha
iret
add
xor
xor
fdivrp
nop
rcl
fidivl
cs
aaa
inc
pop
xor
pop
repz
mov
movsb
inc
adc
jno
fimull
mov
sub
xchg
dec
push
mov
rorl
push
bound
insl
nop
loop
push
loopne
or
in
int3
movsl
ja
mov
aad
loop
adc
bound
lahf
sbb
out
mov
adc
xchg
testb
jge
les
das
push
les
shrl
imul
mov
cmp
loopne
pop
cld
repz
sub
push
icebp
icebp
mov
inc
lods
push
mov
xchg
insb
dec
test
sbb
sahf
fs
xor
test
sbb
mov
dec
pop
test
in
inc
cmp
test
add
incb
jp
popl
push
push
pop
adc
mov
jb
lock
push
xchg
cmpsb
adcb
push
push
push
imul
shlb
inc
and
fnstsw
cld
mov
push
insl
pop
jne
test
add
gs
xor
jp
jae
sub
or
imul
pop
ret
lret
and
sbbb
jnp
mov
push
push
and
jle
mov
sbb
test
dec
mov
idivb
push
mov
pusha
sub
sbb
popa
mov
push
cmp
dec
movsl
into
or
imul
push
xchg
sub
inc
xor
mov
add
ret
aam
mov
popf
adc
add
jg
call
and
pop
sub
sub
icebp
and
push
cld
sbb
cmp
mov
cld
loope
push
test
and
in
pop
jb
and
stc
cwtl
fdivrl
popl
xchg
adc
cmp
sub
rolb
roll
rcr
sbb
cwtl
loop
int
mov
xchg
adc
jecxz
int3
ljmp
dec
mov
outsb
les
into
mov
xor
outsl
leave
ja
lret
inc
in
jl
pop
mov
aas
add
pop
nop
cmpsb
push
sub
fimuls
mov
subb
pusha
out
xchg
sbb
lock
dec
and
loopne
lret
inc
das
mov
adc
inc
dec
push
outsb
lret
pop
mov
or
loopne
mov
aas
jecxz
int3
loopne
test
sarl
cmc
jmp
pop
fldt
pop
dec
jnp
fsts
adc
pop
jge
mov
lret
jle
and
addb
shll
jno
or
mov
inc
pop
push
mov
fs
mov
imul
into
cmp
js
orb
sub
in
in
stos
data16
insb
xor
negb
jp
mov
xor
mov
push
adc
arpl
dec
dec
inc
aad
or
scas
or
mov
push
rorb
pop
jp
and
sbb
in
push
xchg
sbbb
insb
mov
jmp
loope
add
push
jmp
out
adc
add
idiv
dec
sbb
pushf
gs
stos
push
cld
or
dec
cmp
xchg
out
repz
push
and
xor
push
sbb
xchg
sbb
sub
push
add
call
rcrl
push
das
rcl
pop
imul
cld
ds
subb
sbb
dec
push
insl
adcl
mov
adcl
lea
mov
mov
or
subl
and
mov
or
adcl
xor
movl
cmp
movl
jne
mov
and
mov
shrd
adcl
shr
adc
mov
mov
orl
shl
xor
andl
jmp
sub
sub
sub
adc
xchg
dec
loop
xchg
add
push
xchg
sub
xor
aas
mov
lret
cmp
fmul
mov
pop
inc
sbb
inc
fnsave
insb
pop
popa
mov
xchg
popa
jae
fs
mov
ret
inc
pop
inc
pop
fadds
jb
sbb
pop
scas
in
leave
imul
test
cltd
test
add
or
insb
or
shll
test
gs
pop
sub
lock
jae
adc
cmc
aam
mov
mov
loopne
lahf
jb
in
gs
cmpsb
imul
dec
cmp
inc
stos
mov
lret
loopne
mov
lret
dec
xlat
dec
mov
dec
data16
jp
sub
call
mov
aad
ljmp
adc
push
mov
mov
rorb
in
xor
xchg
inc
pushf
lret
cwtl
stc
imul
jle
and
add
mov
mov
sub
ljmp
ljmp
and
mov
sbb
push
dec
and
xorb
jge
inc
pop
pop
std
push
xorl
cltd
jns
lret
aas
mov
and
push
or
stos
pop
xchg
fdivs
aad
adc
popa
push
outsl
test
mov
movsl
mov
inc
push
sbb
call
and
push
sbb
inc
dec
mov
mov
test
add
pusha
lods
jge
fsubr
xorps
subl
or
sbb
push
pop
les
mov
int
xrelease
jae
pusha
fsubrs
out
dec
and
mov
xorb
inc
or
aas
pop
mov
xchg
subl
loop
and
jbe
test
mov
lret
out
push
cmp
jle
mov
jbe
test
and
xor
jle
cs
out
mov
mov
push
and
pop
inc
out
sbb
add
aam
or
push
es
icebp
icebp
jmp
mov
xchg
ret
nop
mov
notl
xor
lret
sbb
mov
jae
test
scas
fbld
push
mov
adc
mov
fidivl
lret
je
data16
outsl
leave
pop
push
stos
mov
jae
or
aaa
adc
sbb
ja
imul
aas
inc
adc
mov
popf
stos
jp
enter
rcrb
push
adc
int3
lret
and
or
dec
cmp
cli
stos
movsl
test
out
loop
lahf
sub
ss
clc
xor
daa
inc
mov
in
jmp
adc
insl
sti
mov
pop
out
jl
cld
je
push
outsb
mov
cmp
insl
clc
mov
test
testl
pop
lret
lods
repz
jne
inc
call
pushf
mov
out
fdiv
add
dec
andb
push
sbb
jecxz
add
loope
mov
sub
loope
jg
push
adc
fcomps
push
nop
mov
cmp
shrb
mov
and
rorb
les
daa
lods
sbb
and
rcr
mov
std
sub
dec
or
sub
inc
mov
es
sub
outsl
jecxz
and
ljmp
pop
mov
or
fs
call
xchg
and
sbb
add
in
bound
lods
pop
fs
ds
icebp
aas
call
sbbl
cli
ret
cmp
test
sarl
in
outsl
hlt
lcall
insl
pop
aas
inc
and
sbb
sub
cli
xchg
push
pop
cmp
in
jle
gs
mov
adc
pushw
mov
xchg
leave
test
xchg
fldlg2
xor
xor
in
jge
jge
aas
mov
xchg
xor
sub
or
push
and
nop
mov
add
lea
jo
and
js
sbb
cmp
lret
jbe
pop
dec
hlt
and
pop
or
ds
les
adc
xchg
xor
jo
cwtl
adc
push
or
test
hlt
lret
insb
mov
jmp
dec
or
mov
in
pop
outsb
sbb
cwtl
adc
sub
lods
push
cmp
pop
inc
jo
add
push
xlat
mov
or
inc
scas
inc
sbb
adc
mov
add
xchg
out
jbe
add
jecxz
inc
popa
std
hlt
push
jp
pop
xchg
push
jp
push
frstor
scas
les
aam
mov
lahf
lods
aaa
mov
f2xm1
jmp
inc
lcall
sbb
hlt
adc
movsb
cmp
dec
pop
gs
cmpsb
movsl
movsl
jl
pop
leave
adc
push
scas
repz
cmp
pop
adc
lds
and
loopne
movsl
lds
mov
inc
sub
push
cmovle
add
aam
fnstenv
mov
or
inc
sub
cmpsl
movsb
mov
movsl
add
inc
inc
cwtl
rcll
add
add
pop
jnp
and
mov
loop
movsb
and
std
nop
lds
pop
in
cs
lcall
push
dec
push
xchg
cmp
xchg
int3
shlb
inc
neg
cmpsl
mov
dec
aam
push
jge
adc
add
addr16
ja
mov
fcomps
adc
push
mov
xchg
push
je
ds
xchg
jnp
lods
loope
repnz
cmp
sub
jg
mov
sbb
cmpsl
loop
pop
push
push
sbb
mov
mov
jge
in
pop
dec
lods
rol
jne
add
xlat
sub
or
pop
sub
xor
aas
ss
jl
pop
pushf
clc
or
scas
bound
add
or
leave
insl
jg
stos
adcl
std
xorl
test
jge
rorl
jb
fwait
rcll
inc
push
mov
xor
in
imul
fwait
je
lds
scas
jb
das
testl
jmp
mov
cmp
mov
sahf
push
xchg
test
cmp
xchg
dec
xor
outsb
cmp
out
popa
negl
push
jne
loope
popa
dec
cltd
mov
arpl
xor
pcmpgtb
xchg
dec
push
add
shlb
mov
add
jno
aaa
fwait
pop
lds
mov
popaw
fdivl
pop
inc
out
test
xchg
dec
mov
stc
dec
out
mov
jmp
push
jl
lcall
out
fcmovnbe
pop
shlb
sub
cld
inc
mov
xchg
das
jo
xchg
cmp
push
cmp
inc
inc
ret
arpl
cld
cmpsb
adc
shrl
cmpsl
push
add
or
jns
mov
rcrl
dec
fdivl
adc
pop
push
dec
repz
nop
cwtl
and
cmp
mov
call
cmpsl
sub
pop
or
sbb
jb
out
dec
imul
imul
je
sti
out
or
mov
decl
mov
movl
cmp
jne
notl
mov
mov
xor
cmpl
mov
movl
mov
jmp
mov
movl
jl
push
call
xor
or
movl
movzbl
xor
and
mov
xor
mov
xorl
mov
jmp
daa
mov
or
sti
sbb
mov
ja
stos
push
pop
push
pop
aas
pop
mov
cmp
jecxz
aas
inc
out
adc
cltd
int
mov
pop
out
das
push
mov
ja
and
mov
ss
push
cmp
push
mov
aaa
lahf
leave
inc
add
movsl
jae
jg
repnz
enter
adc
out
lea
jle
inc
pop
insb
pop
jge
popa
inc
loopne
out
jmp
mov
mov
and
cmp
pusha
and
jno
xchg
repnz
dec
dec
mov
mov
sbb
and
jb
xchg
mov
movsl
cltd
aas
rolb
jl
call
data16
je
aam
sbb
inc
test
sub
fsubrl
jp
sarb
addr16
enter
push
cmpsb
inc
sar
dec
mov
mov
pop
mov
xor
push
or
insb
adc
cld
jnp
insl
jne
into
es
jmp
sbb
ja
or
lret
push
out
mov
mov
shrl
cmpsb
xor
dec
repz
fwait
cmp
jle
bnd
and
sbb
lods
lods
pop
clc
stos
sub
fisttpl
data16
bound
ss
push
push
push
std
into
sti
pop
jb
movb
mov
jp
dec
xor
inc
mov
cmp
sbb
xor
xor
fs
cmpb
add
bound
jecxz
int3
xlat
xchg
mov
mov
ds
or
cli
or
sahf
sahf
mov
adc
loop
mov
mov
les
cmc
adc
shll
mov
bound
out
movsb
testl
fildll
mov
imul
out
xchg
mov
xor
imul
push
clc
mov
out
push
cli
mov
aam
flds
ret
gs
ficomps
out
stos
das
dec
mov
adc
add
inc
cmp
frstor
fbld
js
sbb
arpl
andb
call
push
push
repz
ret
repz
icebp
mov
inc
iret
push
mov
cmp
pop
mov
clc
shrl
popf
out
add
jbe
push
clc
jecxz
cmp
jmp
inc
or
jge
sub
or
bnd
jp
clc
int
mov
stos
lods
sub
mov
sbb
jl
jb
push
mov
das
xor
mov
dec
pop
add
pop
mov
movlhps
fwait
test
mov
push
out
xchg
imul
das
aad
pushf
cwtl
sbb
inc
jae
xor
xor
das
cwtl
mov
sub
push
fimuls
adc
out
jae
mov
les
lock
cvtpi2ps
idivl
cmp
xchg
std
jno
mov
lret
mov
push
and
jns
ret
mov
mov
push
inc
clc
pop
push
xor
loopne
xlat
pop
mov
and
xchg
xor
pop
add
mov
inc
ljmp
scas
sub
in
stos
mov
dec
inc
pop
inc
dec
mov
cld
inc
sub
aas
aad
push
push
mov
push
iret
cltd
jae
int
aas
shll
data16
insl
imul
mov
aam
xchg
xchg
js
cmc
xchg
xchg
rcrl
lods
sub
aad
jecxz
shll
outsl
popa
inc
and
ss
dec
fsubrs
inc
ja
fstp
xlat
mov
int
mov
mov
dec
push
mov
cmp
out
dec
aam
sub
stos
sbb
sub
aaa
daa
push
es
push
mov
mov
sub
aam
xor
mov
sbb
out
adc
enter
in
cld
xchg
mov
jae
insl
xchg
pop
jecxz
push
frstor
inc
mov
jg
mov
sahf
mov
sub
jmp
leave
loopne
add
outsb
pop
insl
push
fiaddl
mov
add
scas
sub
sbb
sub
jb
sub
notl
and
adc
cmp
xchg
loop
xor
std
mov
jge
fs
not
jb
mov
test
insb
es
fs
push
mov
xchg
xor
mov
mov
or
jecxz
inc
dec
xchg
inc
mov
mov
ljmp
cmp
fcmovnb
jp
mov
push
fistpl
mov
clc
sbb
push
popl
sub
mov
clc
movl
das
or
inc
mov
test
test
jl
dec
push
sbb
mov
mov
mov
addr16
mov
cmp
cwtl
test
ja
fwait
divb
dec
cmc
inc
cmc
mov
hlt
and
fildll
dec
repz
stc
mov
scas
loop
push
imul
push
mov
add
fldcw
iret
sahf
and
aam
jne
imul
adc
or
and
mov
mov
sti
pusha
pushf
or
mov
sti
test
jb
and
test
jnp
into
cmpb
in
insb
push
rcr
sbb
lcall
mov
jmp
cmpsb
push
xchg
sub
stc
subl
push
or
sbb
insl
sub
dec
pop
out
mov
ret
adc
mov
cs
jmp
xchg
add
jecxz
test
xchg
xchg
adc
pop
fwait
repz
loop
int
xor
lret
in
adc
push
adc
sub
xor
mov
push
jmp
jo
and
lock
adc
jp
lds
hlt
aaa
aaa
jp
lods
out
imul
outsb
jne
push
inc
sbb
shlb
mov
repz
leave
sti
dec
mov
mov
arpl
adc
bound
int
xor
or
xor
gs
dec
mov
jmp
subb
jmp
out
test
and
dec
mov
scas
mov
addl
fistpl
sahf
dec
sbb
jae
jae
loop
divl
sbb
ljmp
inc
xchg
add
inc
fiadds
pop
mov
stos
pop
int
cmp
mov
xchg
stos
adc
fs
aas
xor
fldcw
not
and
lret
cmp
scas
mov
push
adc
xor
stos
push
in
xlat
mov
outsb
pop
sbb
adc
xor
rorl
lods
inc
xchg
adc
in
jmp
fildl
fmull
adc
dec
add
nop
sbb
in
cld
mov
cltd
pop
mov
adc
mov
fwait
xchg
add
mov
sbb
aad
xchg
rcl
fs
test
cmpsb
sbb
pop
sub
push
sbb
mov
lods
roll
andl
mov
cmpl
movl
mov
jmp
movl
movl
jne
push
push
push
push
push
pushl
push
push
call
orl
or
xor
xor
xor
add
adc
adc
sub
add
mov
xor
xorl
shr
xorl
mov
orl
xor
or
movl
shl
cmpl
movzwl
movl
jmp
movl
movl
jle
push
call
not
or
sub
sub
sbb
sub
mov
mov
sub
imul
mov
cmpl
not
movl
jmp
mov
jne
push
pushl
pushl
push
push
call
sbb
adc
neg
subl
adc
mov
mov
not
add
mov
mov
mov
shrd
shr
adcl
mov
mov
xor
add
shl
incl
xor
jmp
jle
jl
dec
mov
push
es
ja
mov
and
dec
mov
js
xor
rcrb
add
imul
push
mov
data16
cmp
jnp
push
pop
push
dec
pop
mov
call
fnstcw
sbb
push
fbld
pop
in
outsb
xor
jmp
cmc
in
push
inc
je
pop
cmp
jo
push
fistpll
push
int
and
dec
jne
sub
jmp
jo
and
movsl
sbb
sbb
ret
or
sub
jmp
push
jl
fmull
in
dec
fld
psubd
adc
jnp
bound
ja
mov
cmp
cmpl
addb
cltd
outsl
call
xchg
dec
mov
xchg
shlb
flds
loopne
hlt
test
popl
popl
inc
call
mov
cltd
xchg
jno
sbb
or
movsl
adc
fwait
out
lea
sbb
decb
loope
nop
out
mov
shrl
lock
xchg
clc
negb
mov
xor
int3
mov
lods
vcomiss
insb
xlat
lret
mov
adc
cmp
ret
mov
in
lret
insb
cmp
mov
jo
sub
into
stos
sub
loop
mov
sbb
mov
gs
pop
out
mov
fsub
adc
inc
lock
and
mov
int
xchg
testl
das
lds
pop
fnsave
imulb
sbb
sahf
add
push
lret
fwait
push
jbe
pop
pop
and
jle
xorb
pop
out
mov
xchg
pusha
subb
jmp
arpl
roll
mov
in
popa
stos
lods
in
mov
and
cmp
add
out
mov
loop
outsl
shr
sarb
xor
add
jmp
xchg
rorb
lret
mov
daa
hlt
mov
mov
push
pop
iret
dec
xchg
xchg
cmpb
in
pop
cmp
jmp
lret
test
lret
jnp
mov
leave
lcall
add
pop
xchg
test
dec
cli
jecxz
cmp
jbe
fwait
ss
cmpsb
rcr
xor
adc
fs
movsb
shrb
mov
test
out
adc
cmp
lds
mov
dec
notl
inc
lods
add
insb
sbb
or
push
int
cmc
insl
in
lcall
push
cmpsb
inc
cli
push
enter
add
and
mov
div
mov
lea
dec
inc
mov
hlt
pop
cwtl
rorb
mov
sarl
xor
leave
mov
ds
out
loopne
sub
mov
pusha
sbb
pop
push
cmc
jl
xchg
cmp
adc
out
pop
push
dec
push
sbb
xor
ret
cmp
gs
and
pop
loope
fildl
jl
mov
xchg
jo
and
sbb
lods
in
or
daa
jb
dec
inc
repz
cs
into
fwait
pop
in
sbb
cmpb
cmpsl
arpl
pop
inc
outsl
movsb
dec
sbb
imul
jmp
insb
jmp
sbb
pop
inc
ret
loopne
adc
test
jnp
enter
ja
testl
jb
std
aam
xor
jmp
mov
dec
cmp
push
arpl
add
mov
jg
jecxz
xor
xor
ljmp
ret
mov
sti
xchg
jne
scas
add
pop
movsb
les
push
repz
lret
jmp
mov
out
ror
mov
mov
pop
scas
add
call
sbb
je
data16
pop
pop
int
in
xor
cld
pop
outsb
mov
into
mov
into
sub
xor
daa
icebp
out
in
mov
fnstsw
sti
mov
call
and
mov
sbb
loopne
and
or
cmp
faddl
mov
pop
mov
adc
push
and
pusha
jb
dec
pop
neg
inc
push
lcall
dec
shlb
sub
fdivrp
push
jge
xchg
arpl
xchg
sub
xchg
adc
int
mov
aam
fmulp
push
or
in
jb
test
ljmp
sbb
inc
pop
cmp
sbb
dec
mov
sbb
imul
jmp
xor
pop
xchg
je
pushl
stos
clc
andb
test
pop
fdivs
pusha
out
push
fldl
pushf
ret
pop
sbb
and
fcoml
pop
pop
mov
std
sarl
mov
mov
rcrl
negl
jle
aaa
lret
mov
enter
inc
test
daa
out
adc
jae
or
repz
push
in
mov
mov
mov
xor
xchg
aas
push
cmp
mov
xchg
mov
inc
dec
jge
out
inc
into
or
movsl
imul
xchg
aaa
mov
inc
dec
adc
mov
rclb
sbb
testb
push
dec
cs
or
lea
jb
into
xor
inc
lea
jl
rorl
out
mov
mov
jmp
fildll
adc
xchg
cmp
jnp
out
xchg
push
fucom
and
iret
test
int
sub
xor
jno
lea
fsubrl
stos
pop
jb
dec
js
jge
loop
and
xchg
divl
adc
fistpl
inc
std
push
xchg
mov
dec
mov
xchg
out
lret
pop
cmp
in
mov
adc
lcall
aam
jo
push
mov
outsb
sti
fs
cld
stos
jge
push
inc
inc
lret
mov
mov
push
jnp
enter
imul
mov
loope
enter
jne
sub
ret
add
or
mov
scas
outsl
cmpsl
fwait
ret
xor
insl
shr
inc
push
lret
orb
or
repz
aam
jne
add
sbb
cmp
es
fwait
mov
jb
test
jg
cmc
imul
pop
lea
lods
or
jb
dec
jo
fnsave
mov
ljmp
fisubl
lds
addr16
jmp
push
test
mov
or
scas
or
pop
xchg
movsl
xlat
dec
sbb
add
in
iret
mov
mov
dec
lret
test
bsr
and
pushf
pop
xlat
shl
xchg
xor
push
pop
and
cltd
das
lds
fs
sahf
int3
mov
mov
mov
fstps
ja
shlb
out
inc
jns
jns
adc
and
sbb
test
out
pop
lret
into
stc
add
adc
roll
add
mov
jmp
movl
movl
jae
pushl
push
push
call
xor
or
mov
sub
sub
mov
xor
or
sub
xor
and
xor
or
sbb
mov
mov
add
mov
mov
sbb
mov
mov
incl
shrd
subl
shr
adcl
mov
add
mov
cmpl
not
mov
jmp
not
jne
push
push
push
call
mov
sbb
and
andl
and
orl
sub
or
sbb
jmp
pop
and
push
adc
lds
mov
xchg
xorb
adc
nop
ljmp
int
and
push
fwait
jl
sub
and
push
jb
sahf
cmpb
sbb
rcrb
push
push
test
dec
push
leave
xor
sub
sub
roll
xchg
pop
leave
lds
push
inc
push
mov
out
outsb
push
insb
or
enter
cld
pushf
loop
add
imul
aam
xor
mov
je
pop
loopne
lock
sbb
aam
inc
jp
adc
mov
add
jae
in
adcb
in
pop
cltd
bound
xchg
icebp
and
mov
sbb
or
jae
lods
jnp
divb
je
inc
in
cltd
dec
cltd
cs
or
sbb
sti
bound
push
inc
mov
add
mov
xchg
xlat
jno
popf
pop
adc
jo
out
jmp
insl
xchg
je
mov
cmp
inc
sti
in
out
xor
out
xchg
rorl
int
jle
movsb
xlat
out
shrl
pop
add
jl
int3
pop
pop
pushf
mov
fildll
jl
pop
lea
sub
mov
pop
loopne
std
xchg
xor
lret
dec
add
lea
scas
imul
aaa
stos
inc
or
scas
adc
sbb
xchg
cld
and
test
mov
mov
into
sbbb
in
xor
add
push
dec
push
adc
jg
in
and
sbb
push
jmp
loop
adc
lds
in
lahf
push
loopne
test
mov
out
pop
add
mov
push
mov
xchg
pushf
xchg
adc
test
cmp
shlb
cmp
xlat
je
inc
dec
lock
addb
data16
lods
loop
push
xchg
dec
scas
pop
sub
cmpl
ja
push
dec
adc
cmpsl
mov
out
sub
jp
jo
push
test
jb
jne
sahf
fwait
mov
mov
into
jecxz
pop
xchg
popf
add
sbb
fdivrs
daa
add
jne
shl
push
int3
or
call
push
insl
inc
scas
test
or
lret
in
mov
dec
push
xchg
xor
lods
adc
and
cmp
cmc
fs
sub
bound
icebp
cmp
movsl
lds
mov
out
mov
rsm
inc
jo
adc
adc
mov
sub
adc
mov
pusha
xor
push
push
push
insb
push
xchg
shll
xchg
jmp
cmp
clc
shlb
shll
sbb
adc
arpl
in
mov
flds
jae
pushf
mov
jbe
push
or
test
insl
popf
pop
inc
jmp
nop
sbb
out
out
out
in
xchg
test
cmp
jge
mov
cmp
mov
xor
xchg
inc
push
push
cmp
pop
push
mov
std
das
inc
xchg
pop
das
mov
ret
shll
jb
sbb
xlat
cmpsb
and
xor
jne
or
fnstenv
ffreep
inc
add
cmp
push
stos
push
scas
pop
sbbb
sub
adc
sub
lods
inc
push
gs
arpl
push
sbb
or
cmp
loopne
add
lret
inc
xchg
mov
pusha
into
ljmp
lods
cs
cmp
xchg
inc
fwait
stc
pushf
jae
adc
xchg
jg
adc
fildl
push
pop
inc
push
push
push
sbb
jnp
call
addr16
pop
cmp
mov
pop
mov
mov
mov
nop
dec
push
lcall
shr
lock
mov
xchg
jbe
jns
fidivs
fimuls
int
ret
fidivl
xor
xchg
adc
mov
addr16
push
or
fmul
cmp
dec
cmpl
pop
lcall
fcompl
mov
sub
sub
lods
mov
mov
dec
adc
and
push
sbb
sbb
outsl
push
inc
cmp
arpl
pop
xchg
jno
imul
push
jo
shl
mov
iret
inc
icebp
fsubr
out
and
cltd
jae
xchg
sub
and
mulb
call
loopne
rcr
es
mov
cmp
roll
xlat
es
cmp
out
lcall
pop
push
rcr
or
shl
adc
js
or
out
lods
inc
mov
xor
dec
ljmp
add
stos
xor
out
std
decb
push
clc
test
in
mov
inc
or
fiadds
cmp
insl
ja
xchg
fdivs
sbb
xchg
jns
jne
pop
sub
ret
mov
inc
repz
inc
addr16
int
lret
cmp
sti
and
test
sarb
test
jns
lret
and
movsl
xchg
or
adcl
leave
scas
add
test
sub
xchg
iret
and
dec
cmp
add
fidivl
push
ss
mov
and
pop
rclb
ja
dec
dec
mov
je
sbb
pop
in
mov
std
mov
xlat
xchg
cmp
mov
jb
fnsave
loopne
jno
xlat
sub
or
fnstsw
int
sbb
cld
shll
hlt
jae
cltd
les
aas
cmp
pusha
int3
mov
in
xchg
jne
pop
and
mov
xchg
add
leave
rcrl
aam
cmp
jl
mov
test
cwtl
pop
push
pop
fs
dec
push
rorb
adc
in
sub
aas
in
movsb
push
sbb
addr16
xlat
ret
imul
cli
aad
push
hlt
add
lods
add
or
lock
fsubrs
cli
popf
cwtl
push
std
push
jmp
xchg
arpl
xor
inc
push
imul
add
jl
stos
push
sti
xchg
into
pop
mov
jbe
mov
lret
inc
inc
mov
repnz
sbb
lahf
xor
jl
stos
cwtl
mov
hlt
movsl
fprem
dec
sahf
mov
into
mov
mov
adc
arpl
mov
sub
daa
adcb
ficomps
sbb
repz
pop
hlt
cld
in
add
push
cs
xchg
xor
jecxz
in
mov
cmp
push
shrl
mov
and
lds
add
cld
push
sbb
xchg
adc
sub
inc
ljmp
jae
xor
xor
jg
arpl
sub
and
sub
mov
push
mov
jle
adc
jbe
dec
cmc
and
mov
dec
unpcklps
cmp
mov
stos
push
stos
js
lods
push
orb
sbbl
add
mov
cmp
sbb
arpl
sbb
inc
mov
sti
sub
dec
adc
scas
pop
ds
jl
faddl
fcmove
add
pop
adc
dec
rol
pop
out
mov
mov
test
add
jmp
jne
pushf
inc
or
inc
jno
in
loop
je
in
or
mov
mov
xor
xor
subl
or
andl
shl
sbbl
lea
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
jg
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
pushl
push
call
xorl
movzbl
adc
movzbl
add
or
add
movzwl
sub
mov
shrd
shr
cmpl
mov
mov
mov
jmp
mov
jbe
push
call
andl
mov
adc
sbb
movl
mov
mov
or
not
mov
mov
sub
mov
add
jmp
rcrl
cmp
and
and
scas
dec
or
fcomps
ja
das
stos
mov
jge
lahf
inc
std
lds
or
and
in
adc
outsl
testb
lahf
addr16
pop
out
fwait
movsl
xor
mov
imul
pop
push
mov
push
jge
test
rcl
aas
pushf
insb
push
jae
sbb
mov
repz
add
inc
test
daa
in
in
movw
dec
mov
sub
mov
test
outsb
add
mov
repnz
daa
ret
dec
jp
shll
mov
loope
shll
call
adc
movb
cmp
mov
sub
pop
sbb
adc
push
pop
insl
imull
nop
repz
test
sub
je
mov
pusha
mov
dec
pusha
stc
sbb
roll
cmc
cmp
test
in
pop
push
push
push
jbe
fs
push
dec
inc
adc
or
pop
pop
dec
popf
cmc
cmp
adc
rep
lret
sub
jl
cltd
je
int
mov
sbb
stc
cmp
loopne
pop
mov
test
jl
sti
mov
jle
and
xchg
scas
push
mov
rolb
cmc
push
cli
inc
jb
xor
xchg
or
es
dec
mov
popf
jae
and
clc
inc
leave
inc
clc
add
inc
aaa
lds
lret
inc
paddusw
aad
xlat
popw
daa
adc
in
es
fwait
adcb
dec
sub
xorl
xor
mov
imull
pop
clc
add
jle
inc
call
repnz
and
dec
mov
mov
lods
or
xchg
pop
jle
add
in
pop
int
jmp
cmp
sub
or
jbe
movsl
jns
mov
dec
imul
jge
mov
lcall
or
sbbb
sahf
js
lock
shl
shll
out
adc
jmp
mov
mov
dec
fisubl
es
jb
add
cmp
rclb
and
adc
int
roll
or
jnp
lcall
pusha
xlat
arpl
jle
jmp
lcall
fnstcw
add
shll
lock
aam
add
inc
repz
aas
jl
adc
mov
push
nop
mov
cld
sti
sbb
loopne
xchg
std
adc
push
ja
int3
mov
movsb
popf
jl
sti
sbb
mov
sub
dec
dec
pop
mov
cmp
xchg
ret
jae
rsm
shll
and
pop
stos
xchg
xchg
flds
cmp
jge
adc
out
fnstsw
push
sbb
outsl
shrb
sbb
insb
movsb
lret
es
push
repz
in
out
sub
cltd
pop
cmp
cmpsb
pop
fadds
or
push
stos
fsub
bound
push
inc
mov
xor
call
xchg
mov
call
addr16
dec
fwait
loopne
les
cwtl
fs
mov
or
dec
cmpsb
aam
clc
adc
popa
out
cwtl
sub
clc
mov
mov
sahf
test
movb
xchg
or
mov
pop
test
or
in
jl
std
faddp
cmpsl
lret
sbb
xlat
stos
xorb
or
xchg
loop
rolb
push
xor
mov
lods
in
jno
loope
cmp
mov
pop
les
mov
test
pop
sbb
popw
in
dec
hlt
cld
frstor
out
mov
add
out
mov
bound
mov
fldcw
jns
xor
outsl
adc
popa
sub
xchg
fistl
and
add
dec
add
pop
mov
pushf
and
les
enter
test
aas
cmpsb
popf
jecxz
pop
out
mov
pusha
xchg
and
push
sbb
movups
stos
sahf
inc
cmpb
add
clc
push
mov
cmc
xchg
je
inc
rcll
scas
daa
push
mov
and
int
popa
push
rcll
out
xor
inc
ret
cmp
hlt
mov
mov
ret
cmp
and
sti
fwait
lret
push
sub
test
inc
nop
lahf
cmp
cmpsl
mov
out
loopne
or
push
cmpsl
or
add
jne
and
out
pop
in
scas
test
mov
mov
or
inc
enter
popa
aaa
push
nop
into
mov
jnp
test
imul
daa
out
icebp
cmp
dec
xchg
scas
xor
lcall
rol
movsb
inc
push
sbb
daa
pop
movsl
cmpl
ss
push
iret
dec
les
cmp
loop
xor
jge
ror
insl
xchg
inc
je
inc
jb
mulb
dec
sbb
pop
pop
sahf
xor
frstpm(287
orl
repz
mov
pop
cwtl
jmp
pop
dec
aam
and
stos
movsb
cmp
mov
jbe
insl
dec
jecxz
add
adc
push
push
iret
ljmp
push
aaa
and
jge
add
es
push
cld
subb
jnp
les
inc
cmp
adc
mov
and
or
outsl
cmpsb
stos
sbb
mov
pop
in
and
mov
pop
push
mov
mov
lods
int3
jmp
xchg
push
stc
cli
xchg
icebp
pop
pop
sbbl
inc
pop
jb
or
add
sub
repnz
mov
mov
mov
add
xorb
arpl
jb
imul
movsl
xorl
ljmp
pop
negl
push
mov
adc
mov
mov
mov
leave
cmp
sbb
imul
dec
dec
test
jo
in
aam
lahf
sub
hlt
je
into
andnps
push
xlat
inc
mov
stos
aad
mov
scas
gs
sbb
repnz
mov
mov
cmpb
add
push
pop
sahf
lock
push
lds
repz
push
mov
imulb
shl
rclb
sbb
shrl
adc
out
xor
cmp
or
add
cmpsl
clc
shlb
xchg
fnstsw
and
fs
aad
daa
dec
loopne
mov
xchg
push
dec
int3
cld
ret
xor
jp
iret
jae
inc
dec
jl
add
mov
or
cmp
int
fstl
pop
sub
enter
lock
ja
cmp
xchg
les
sbb
pop
test
clc
test
or
xchg
push
lds
scas
sub
mov
rcr
ja
pop
in
fxch
pop
andl
mov
outsb
xchg
mov
xchg
aad
pushf
std
dec
das
add
jmp
iret
pushf
inc
bound
sbb
pop
lret
sahf
cmp
data16
and
jae
jnp
adc
aaa
xor
mov
xor
adcl
or
shl
movzbl
or
imul
mov
mov
xorl
shrd
xorl
mov
mov
xor
shr
mov
and
mov
sbbl
xor
orl
or
sbbl
shl
adcl
sub
mov
mov
cmp
mov
mov
jg
xor
add
mov
sub
and
mov
cmpl
movl
movl
jmp
mov
mov
jb
push
push
call
xor
mov
sub
sbb
movzbl
and
mov
jmp
les
cmp
push
mov
mov
movsb
js
sbb
xchg
push
popa
iret
lods
jmp
xchg
rorb
push
or
fiadds
pop
or
mov
rclb
inc
dec
std
pushf
into
cmc
sbb
inc
push
sub
into
add
jge
nop
aaa
sti
pop
shrd
mov
in
pcmpgtb
outsb
jg
push
add
in
xchg
mov
adc
decl
inc
jb
test
adc
push
mov
into
sarb
dec
inc
add
xchg
imul
adc
lret
mov
stos
sub
or
xor
add
dec
fmuls
test
test
pop
bound
jno
fistps
or
pop
add
pop
xchg
pop
cmp
cli
adc
test
dec
mov
cwtl
mov
or
mov
push
rorl
and
popa
cli
out
roll
js
jl
outsb
push
push
out
inc
movsl
jnp
daa
in
pop
jge
das
mov
inc
repnz
cmp
push
and
mov
mov
scas
cmp
lods
and
pop
hlt
mov
iret
jae
aam
jg
adc
andb
loopne
stc
data16
sbb
mov
sbb
inc
call
cltd
aas
sbb
xor
lret
pop
outsl
test
xchg
in
bound
leave
cmpsl
adcb
dec
pusha
int
xchg
ja
cmp
push
leave
push
jmp
push
mov
mov
mov
pop
mov
mov
in
cwtl
cmp
and
mov
inc
cmp
fiaddl
insl
stc
push
pop
inc
lods
push
cmp
dec
mov
sbb
stc
mov
shlb
fisubrs
dec
jbe
in
cld
fnsave
out
cmp
jecxz
es
ja
dec
jo
scas
test
mov
adc
push
jns
xor
dec
jne
sbb
leave
xor
push
lods
cmpl
das
gs
push
sub
fstpt
addr16
js
bound
inc
scas
jne
cmp
cmp
mov
mov
lret
les
fs
pusha
jmp
pop
aam
das
test
daa
fsubr
xchg
mov
ret
addr16
divb
leave
scas
leave
mov
sbb
adc
andnps
push
idivb
push
jg
das
addb
adc
outsb
repnz
ja
cmp
sub
sbb
pop
dec
sub
repz
xchg
dec
subl
ror
fnstcw
xor
daa
inc
call
das
pextrw
ja
add
inc
jb
lret
push
pop
sub
in
int
dec
rcrb
ljmp
jne
sbb
scas
sub
pop
mov
popf
push
insb
xor
jle
out
pop
jbe
lea
daa
out
dec
aas
lods
pop
sahf
pop
jecxz
out
iret
adc
xchg
testb
popf
mov
out
test
xor
pop
adc
icebp
push
lock
xchg
sub
xor
cmova
inc
and
sbb
xchg
iret
fistpll
xor
daa
repz
inc
add
sbb
arpl
clc
sbb
popa
mov
ds
xor
push
call
mov
outsl
popa
rcl
or
pop
or
xchg
adc
jb
fdivs
scas
add
lret
sub
daa
pop
dec
je
outsl
and
hlt
xor
loop
xchg
sarl
mov
gs
pop
sbbl
call
xchg
rcll
lds
frstor
loopne
ss
in
call
adc
addl
out
ret
std
lea
mov
pusha
divb
lods
sub
inc
aad
mov
ffree
or
mov
and
jl
xchg
and
jle
dec
sbb
mov
xor
es
xchg
mov
add
inc
in
cmp
or
pusha
push
pop
jle
pusha
stos
fsubl
mov
or
fimuls
lcall
sbb
std
mov
inc
dec
jbe
cmp
mov
jo
mov
lea
std
outsl
cltd
xchg
inc
stc
addl
inc
stos
nop
es
fdivl
cmp
xor
aam
push
adcl
mov
jne
scas
xchg
sbbb
push
or
xchg
sub
push
sbb
cmpsb
scas
inc
addr16
clc
inc
and
mulb
jmp
inc
jo
out
fisttpl
test
pop
stc
inc
dec
inc
sub
inc
out
sbbl
pushf
jge
sbb
addr16
bound
add
icebp
jb
sub
cmpsl
dec
sub
mov
shll
xchg
dec
and
mov
aaa
lret
mov
hlt
dec
pop
inc
aad
add
push
imul
sub
mov
aas
ds
adcl
mov
jg
cmpsl
xor
repz
fcoms
cli
rol
outsb
jae
mov
pop
ret
add
cmp
je
not
rcr
cmp
sbb
stc
push
fsubs
aam
mov
clc
loop
out
adc
push
add
lods
hlt
adc
fsts
aaa
xlat
adc
mov
sbb
repz
sbb
test
adc
dec
js
idivl
jo
sbb
push
mov
mov
divb
lock
cli
xor
pop
xor
jmp
inc
dec
mov
xor
fnsave
xchg
xchg
mov
or
pop
xor
dec
mov
add
xor
imul
push
xchg
mov
push
push
bound
stos
mov
xor
outsl
pop
dec
popa
mov
or
xor
pop
repz
daa
and
mov
and
push
mov
dec
mov
sbb
inc
data16
xchg
xchg
mov
push
mov
dec
stc
ja
rorb
out
dec
pop
xlat
in
into
rolb
pop
inc
test
lods
cmp
hlt
dec
pop
add
andl
repnz
lods
shll
nop
pushf
jl
cmp
mov
jno
loop
adc
int3
jae
movsb
js
cltd
inc
jo
adc
arpl
test
mov
es
jo
mov
push
lcall
mov
lods
int
sub
cmp
push
pop
lea
stc
push
xor
ret
loopne
xchg
sub
popa
ljmp
or
jle
stos
push
sarb
jp
incl
ljmp
ja
lret
xchg
aam
xchg
and
mov
sahf
sub
or
cmp
sbb
xchg
mov
hlt
es
ds
sub
scas
mov
pop
push
stc
mov
lahf
fisubl
or
loopne
fcmovnbe
push
in
mov
lret
xor
add
dec
fstpt
dec
jb
movsl
sub
fcoml
xchg
jae
mov
sbb
inc
aad
or
aam
inc
cmp
sub
or
arpl
roll
or
fsubr
xor
pop
addb
xchg
aaa
inc
add
lods
roll
mov
movzwl
or
mov
adcl
xor
andl
shl
orl
xor
adcl
or
sbbl
shr
and
mov
jmp
mov
mov
adc
and
call
add
jmp
sub
jne
cmpsb
arpl
adc
and
xchg
arpl
insb
sbb
add
es
rcrb
testl
test
mov
lock
mov
or
pop
enter
outsl
adcb
xor
leave
jle
out
mov
pop
imulb
push
jbe
sbb
rcrb
pop
imul
sbb
jnp
mov
hlt
jg
in
data16
inc
into
jg
add
enter
les
out
pop
adc
push
adc
outsl
jge
shll
or
int
lret
sahf
movsl
push
mov
lock
push
arpl
js
lret
push
lcall
cmp
xchg
clc
in
data16
mov
call
mov
dec
mov
mov
sbb
dec
aam
dec
and
rorl
movsb
mov
imul
mov
mov
dec
ret
cmp
push
test
lock
lret
addl
mov
bound
lock
dec
cli
sub
movsb
push
sbb
dec
add
call
aas
faddl
add
xlat
pop
xchg
dec
movsl
mov
pop
pop
jg
xchg
add
cld
jmp
adc
pop
push
inc
jmp
add
mov
mov
fildll
jge
xor
inc
jbe,pn
jae
jb
loope
jb
enter
dec
add
sub
inc
out
jle
push
cwtl
mov
imulb
jns
es
cmpl
dec
fnstcw
cmp
popf
mov
inc
mov
les
test
aaa
and
out
dec
fwait
insl
push
cmovns
fcom
lock
mov
ds
sti
xchg
push
fidivs
fdivrl
call
mov
and
cwtl
pop
nop
stos
sub
or
cmp
dec
cmp
out
pop
inc
jb
pop
sub
or
and
jecxz
or
scas
js
call
add
lods
stc
rorb
lock
pop
lea
xchg
mov
or
cmc
inc
in
shrl
sub
sbb
fsubrl
movsb
loope
or
fadd
int
adc
cmp
lret
and
not
js
cltd
add
mov
adc
rcrb
sbb
sub
adc
pushf
fsub
xchg
daa
sub
fmulp
jb
enter
fs
lock
shrl
lahf
inc
fmul
cltd
dec
shrl
mov
iret
sub
popf
add
daa
jo
add
jp
icebp
fwait
cmpsl
lcall
loopne
loope
xlat
cmp
fnstcw
xor
inc
and
es
mov
aas
bnd
outsb
push
sbb
pushf
and
ds
addr16
mov
xor
loopne
xchg
mov
mov
jge
inc
nop
xor
pusha
cmpsb
fwait
in
mov
dec
adc
pop
or
das
test
or
jo
xor
and
and
adc
mov
lret
mov
dec
cmp
push
push
loope
clc
add
jge
xor
add
cmp
pcmpgtb
mov
jmp
inc
mov
shll
xchg
out
mov
xchg
adc
rorb
jle
inc
int
out
cmpsb
fistpll
out
pop
xor
xor
rorl
test
mov
add
arpl
insb
fnstcw
push
out
out
dec
pop
daa
fsubl
ljmp
mov
dec
rolb
into
xchg
mov
mov
ret
std
lahf
mov
imul
jbe
pop
pminsw
das
rcr
in
or
jle
popa
xchg
psubusw
sbb
mov
outsb
leave
imul
jns
sti
cmp
adc
aam
sbb
jl
or
fdivl
and
fwait
add
mov
mov
mov
add
test
inc
xchg
int
or
aam
inc
push
mov
test
repnz
xchg
jmp
imul
xchg
xor
mov
xor
mov
hlt
sub
push
sbb
cld
inc
subb
fmull
push
pop
pop
ljmp
jp
popa
jnp
aas
xchg
js
adc
mov
jno
sbb
stos
jbe
xor
push
push
xchg
xchg
adc
xor
push
ret
stc
cld
sbb
and
lock
xlat
mov
cmp
sbb
jb
lahf
jb
mov
xor
adc
xchg
push
mov
jnp
prefetchwt1
dec
dec
lahf
stos
loopne
mov
xor
jnp
lcall
call
mov
or
aam
add
insb
mov
fcomip
inc
cltd
rcrl
and
adc
dec
dec
cli
add
mov
out
into
dec
enter
fwait
jg
scas
or
add
adc
jg
insb
mov
jle
repz
jb
ss
mov
addr16
mov
adcb
outsl
test
inc
lds
dec
sbbl
or
mov
test
ja
sbb
stos
insl
mov
dec
jge
jne
dec
pusha
aas
pushf
pop
call
sub
pop
jne
stos
lret
pop
mov
sub
xchg
cltd
dec
mov
cwtl
pop
mov
dec
dec
pop
jecxz
mov
xchg
mov
out
fdivr
test
xlat
pushf
sti
inc
jae
inc
fcmovnu
cs
movsb
gs
leave
inc
add
insl
adc
or
fldt
movsl
data16
sbb
mov
testb
mov
push
lock
fadd
sbb
ljmp
sbb
sub
cld
mov
jmp
jo
loop
lods
mov
jne
nop
or
pushl
cmp
aaa
pop
scas
add
fwait
ds
mov
xorl
movsb
and
xchg
test
ds
out
push
jp
mov
cmpsb
inc
push
repnz
xchg
jae
mov
cli
cmpsl
push
repnz
cwtl
cmpsb
jbe
or
push
mov
mov
or
cltd
xchg
mov
enter
pop
mov
inc
dec
sub
movsl
xchg
lahf
mulb
popa
jo
jle
lods
popaw
dec
test
inc
imul
xor
sub
pop
outsl
push
xor
int3
cs
sub
arpl
adcl
cmpl
adc
sbb
mov
fsubp
sti
xor
rorl
popl
and
sbb
movsb
dec
pop
fmul
xchg
mov
mov
cmpsb
dec
loopne
insb
sub
and
cmp
mov
sbb
push
adc
mov
test
fnsave
cmc
gs
lods
imul
jae
and
shrl
std
add
out
vmovups
dec
in
pop
insl
shll
cmpsl
ret
or
pop
sbb
je
shll
fs
cmpsl
pop
mov
mov
jmp
in
adc
or
xchg
adcb
push
mov
andl
sahf
shll
sub
mov
mov
leave
add
mov
js
sub
jp
icebp
xchg
push
push
fisttps
dec
scas
or
xor
adc
mov
cmp
push
loope
aaa
mov
dec
aam
adc
or
mov
mov
mov
add
mov
andl
shrd
sbbl
shr
mov
mov
inc
jmp
shll
adc
push
scas
xchg
pop
pop
mov
ja
mov
mov
out
cmp
icebp
mov
push
or
lods
aam
sti
movntq
inc
add
rorb
cltd
push
cmp
shrl
push
fmull
fs
jb
fcoml
inc
sub
sarb
add
arpl
aaa
jns
jmp
cld
add
dec
push
inc
insl
cmp
das
pop
cmp
jl
insb
push
jg
pop
jbe
cmp
mov
mov
popf
repnz
jns
in
clc
data16
fs
and
fists
filds
push
push
arpl
mov
add
outsb
xchg
jp
fucomi
cmp
jg
stos
int3
stos
push
adc
mov
rcll
mov
or
sbb
stos
sahf
fisttpl
mov
adc
mov
hlt
pop
and
fstpl
sbb
fs
mov
das
xchg
xchg
pop
cmp
aaa
mov
repnz
jg
xor
int3
rcl
in
xor
and
inc
cmp
or
dec
std
xor
aam
pusha
imul
test
hlt
jle
cmc
lds
lods
andl
or
inc
inc
lea
ret
add
dec
jnp
xlat
repnz
pushf
arpl
adcb
cmpsl
lods
sub
mov
popa
sarl
adc
int3
lods
add
cmp
sahf
sub
popa
mov
sub
mov
out
mov
shlb
xchg
fnsetpm(287
mov
cltd
repnz
fldt
cmp
mov
xor
movsl
ds
inc
hlt
mov
aad
fsubl
aas
sub
call
lret
dec
dec
enter
xchg
jbe
inc
push
jo
pusha
inc
jge
daa
dec
sbb
xchg
popa
in
mov
aam
push
mov
pusha
mov
sarb
imul
repz
jns
test
fdivs
mov
loopne
lea
dec
mov
sub
mov
fwait
mov
push
add
add
cwtl
pop
leave
xchg
xchg
push
push
push
lock
sbb
in
pop
stos
inc
sbb
pop
mov
lea
xchg
mov
orb
lods
mov
inc
jbe
outsb
jge
push
ret
std
xchg
daa
mov
shll
pop
stos
push
mov
bound
or
mov
pop
jnp
dec
out
pop
inc
rcrb
das
cmpl
stos
and
or
pop
mov
adc
push
icebp
dec
into
insl
sti
ss
sbb
shrl
mov
fidivrs
mov
popf
pop
in
and
int3
inc
aam
xchg
cmp
inc
outsb
pop
adc
dec
adc
subl
sbb
sbb
orl
insl
xchg
mov
out
lea
stos
pop
shll
mov
mov
cmp
ret
lods
addr16
dec
push
mov
adc
add
push
flds
int
sub
mov
in
call
xchg
push
movsl
sub
xor
push
leave
jg
xor
inc
dec
add
enter
sub
cmc
test
je
or
dec
push
push
movsb
push
push
adc
int
loope
inc
mov
jmp
lahf
shl
lea
or
push
test
inc
cmp
xchg
js
repnz
test
cltd
jl
xor
lock
and
sub
ficoms
jne
jle
adc
mov
add
insb
and
cwtl
cwtl
into
mov
jge
adc
cld
ds
xchg
dec
out
or
jmp
pop
jae
dec
outsl
cmp
js
add
push
lahf
ret
mov
dec
hlt
mov
leave
std
aad
ds
nop
std
xchg
pop
js
setnp
repz
jns
or
arpl
and
les
test
aas
sub
and
testl
jge
mov
faddl
rorb
adc
fwait
cltd
xor
push
daa
mov
mov
jno
fidivrs
shr
insl
dec
fnstsw
lret
mov
in
scas
jns
shll
dec
push
push
jo
inc
mov
pop
mov
push
mov
mov
mov
pop
mov
jnp
adc
sub
xchg
adc
cmpsl
ja
add
jle
jnp
aam
xchg
mov
sub
sbb
add
aad
mov
push
repnz
mov
xchg
lcall
adc
pushf
fsts
push
add
jg
das
mov
inc
std
push
cmpsb
add
out
xchg
pcmpeqd
mov
mov
push
sbb
repnz
add
ficompl
mov
scas
cmpsb
imul
xor
xor
stos
aad
or
sbb
adc
mov
mov
xchg
pusha
stos
icebp
dec
or
mov
mov
cmp
cwtl
enter
sub
ljmp
push
out
and
call
out
sbb
cmc
dec
sbb
pop
jecxz
leave
dec
ds
inc
xlat
pop
xor
std
inc
pop
lcall
ljmp
pop
and
mov
and
add
add
orb
adcb
gs
pusha
mov
xor
idiv
fisubs
jmp
imulb
xor
jmp
pop
imul
push
fldt
stos
pop
adc
bound
lea
movsl
mov
sbb
scas
dec
call
repnz
sub
xor
je
mov
out
jae
pop
cmp
and
mov
dec
mov
mov
enter
jb
lea
into
int3
cmp
sub
mov
xor
lcall
std
adc
or
mov
and
outsl
clc
cmc
lret
sbb
fistps
outsb
std
shrb
sbb
and
cmp
cltd
aaa
xchg
push
push
out
dec
jo
push
call
xchg
sub
inc
add
test
push
scas
mov
push
or
lods
aam
mov
inc
cmp
call
cmp
pop
mov
jmp
push
pusha
push
ss
ljmp
jnp
jmp
sub
dec
bound
or
je
dec
ja
in
pushf
clc
sub
loop
in
dec
xor
lcall
pop
fsubl
mov
imulb
sub
sbb
inc
loopne
mov
adc
mov
cwtl
stos
push
xor
xchg
mov
inc
je
push
popf
fnstenv
test
and
or
mov
inc
push
add
je
sbb
fmuls
pop
push
ficompl
push
cmpsb
int
out
jge
jle
jo
ret
lds
mov
mov
inc
shrb
insl
push
xchg
xchg
add
es
movsb
add
xchg
push
js
lock
jmp
ret
fbld
imul
out
test
loop
test
and
aad
popa
jmp
push
jp
jp
imul
xorl
xor
subl
jmp
scas
popa
inc
jge
sbb
cs
mov
mov
negl
ja
adc
mov
lahf
jecxz
cmp
push
mov
aaa
int3
leave
popa
adc
fwait
pop
ds
mov
orb
mov
xor
and
cmpsl
adc
pop
outsl
mov
sbb
sahf
js
pop
inc
test
aad
jl
jno
inc
cmp
bound
stos
pop
aad
out
sti
or
jno
idivl
add
dec
add
jb
mov
nop
enter
pop
imull
mov
adc
push
dec
jge
ja
push
mov
hlt
loopne
aas
sbb
dec
sub
sub
or
cmp
inc
orb
mov
sub
jne
push
fcompl
push
adc
push
mov
add
movl
xchg
mov
and
pop
pop
cli
push
jmp
mov
pop
adc
cmp
mov
cs
sbb
fbld
push
aad
inc
popf
outsb
mov
mov
pop
imul
inc
scas
xor
jb
shrl
inc
js
dec
mov
cmpb
or
loop
outsl
adc
mov
imul
inc
mov
dec
xor
int3
jae
mov
enter
pushf
push
sub
fstpt
insb
nop
push
inc
in
jns
daa
shrb
aad
test
lcall
aaa
stos
lea
daa
adc
aas
sarb
jg
cli
mov
ss
mov
adc
repnz
lock
nop
fidivrs
pushf
and
dec
scas
leave
incl
mov
push
fsubrl
pusha
mov
mov
sbb
sub
push
fistpl
lret
xor
ja
cld
xor
mov
icebp
sub
in
test
sbbb
mov
jle
push
mov
mov
xor
out
ret
fidivs
cli
ljmp
mov
dec
jbe
inc
cmp
std
inc
out
jb
adc
loopne
mov
and
leave
test
pop
jp
xor
xor
aam
dec
mov
mov
gs
xchg
mov
scas
and
xchg
xchg
not
fsubs
fisubrs
jo
call
out
rorb
sbb
cwtl
and
jl
cmp
shl
pop
lahf
fwait
pop
xchg
gs
mov
jo
das
enter
pop
mov
sbb
in
xchg
or
orl
hlt
inc
test
or
mov
xor
mov
and
fs
inc
push
aam
ss
adc
or
cwtl
test
sub
xchg
test
iret
or
cmp
shrb
pop
mov
fisttpll
mov
add
mov
in
add
inc
shlb
test
enter
orl
in
sub
rcr
add
mov
inc
scas
ret
outsb
shrb
lcall
es
sti
jnp
out
jae
loope
jecxz
stos
xorps
fildll
or
adc
push
push
loopne
push
sub
add
jle
pushf
pop
mov
jo
pop
dec
pop
shll
call
out
mov
decb
fs
xchg
dec
ret
add
add
ds
inc
aas
stos
arpl
pop
fwait
inc
pop
int3
ss
push
repnz
jns
mov
bnd
insl
loopne
and
sbb
cmp
movsb
cwtl
and
sbb
or
mov
pop
inc
jmp
pusha
adc
insb
cwtl
mov
mov
ret
es
cmp
mov
jno
adc
test
call
adc
clc
mov
sbb
push
xchg
cwtl
and
addb
sbb
out
sub
shl
and
jmp
pop
fcmovne
shrl
adc
dec
inc
in
pop
push
push
xorb
ss
std
xor
pop
leave
cmp
and
test
mov
arpl
adc
outsb
and
mov
sbb
mov
pop
loope
xor
dec
int
ret
shll
int3
mov
cmp
or
mov
clc
bound
adc
imul
pop
repnz
jnp
pop
fisubrs
pop
dec
mov
test
add
insl
mov
xorb
fsubl
push
out
orb
and
mov
jmp
push
mov
mov
mov
jmp
xchg
jg
jle
inc
outsl
lret
sbb
lds
loope
push
in
in
fistpll
push
pop
ss
mov
xor
and
out
inc
push
cmpl
sub
outsl
das
jne
xlat
mov
inc
clc
shlb
and
hlt
xor
adc
xchg
sbb
xchg
or
repz
jnp
lods
mov
dec
jle
inc
addb
mov
fldt
sub
cmpsl
xchg
lcall
das
stos
jle
insb
imul
data16
and
test
int
push
lret
ss
mov
push
cs
add
push
mov
mov
push
nop
hlt
aas
stc
jp,pt
in
rcrb
sti
aas
push
cmp
js
mov
daa
repz
lock
lret
jl
nop
roll
and
js
push
pop
lret
sbb
dec
cmp
or
push
and
sarl
adcl
test
mov
xchg
jne
rclb
push
mov
loope
jl
mov
sub
stos
mov
nop
dec
inc
mov
stc
scas
cltd
or
lods
mov
ds
sbb
mov
jno
cmc
mov
push
dec
mov
sbb
subb
js
gs
push
aad
addb
mov
scas
xchg
mov
fcompl
jno
insb
mov
cmc
sarl
sahf
sbb
std
pop
movsb
lea
push
sbbl
cmp
add
cmp
fnstsw
jbe
mov
jno
fcompl
sub
mov
cmp
or
mov
lret
negl
lcall
and
inc
pop
pop
mov
jp
push
fisubs
mov
dec
inc
jecxz
and
xor
sbb
and
jecxz
popa
xor
push
pop
add
sbb
outsb
mov
aaa
test
lret
push
call
scas
cmp
frstor
cmp
arpl
cmp
add
sbb
mov
mov
loopne
int
pushf
or
out
clc
repz
movsb
mov
push
add
add
jo
repz
movsb
xchg
aam
out
mov
ss
lahf
nop
stos
lahf
test
mov
loope
stc
pop
sub
jge
xchg
xchg
int3
test
cmc
xor
or
addl
shl
imul
jmp
add
or
or
adc
push
push
ja
mov
pop
int3
icebp
out
cmpl
and
cmp
es
mov
mov
xor
pusha
shrl
add
dec
mov
cld
mov
scas
pop
mov
out
jg
mov
pop
mov
loop
xor
push
mov
jns
data16
or
int3
and
jb
add
jns
hlt
out
sub
sbb
mov
es
and
pop
pop
lret
cmp
jl
sbb
cli
xchg
movsb
jp
rorl
jno
neg
dec
pop
inc
or
sbb
pop
adc
in
push
test
ds
jge
imulb
cvtdq2ps
popf
cmc
fists
inc
pop
adc
push
mov
xchg
ror
or
and
aam
inc
fcompl
mov
push
sbb
pop
fcoml
pushf
nop
dec
xchg
loop
xchg
lds
imul
into
mov
pmulhw
and
push
es
inc
inc
xor
pop
mov
push
outsb
sbb
iret
mov
push
adc
pop
sub
jmp
enter
divl
sbb
shrl
cmp
and
mov
push
cld
in
outsb
test
testb
pop
repnz
in
mov
mov
shll
outsb
stos
cmpsb
rcr
fwait
test
lret
pusha
js
jnp
xlat
jne
test
mov
or
pop
xchg
aas
add
ds
cmp
cmp
std
jle
lret
mov
test
jp
test
sub
in
dec
rcll
lea
mov
jg
adc
outsl
and
xor
ret
iret
dec
faddl
movsb
hlt
xchg
jo
emms
mov
mov
ds
dec
dec
ds
mov
mov
inc
icebp
rolb
xor
pop
push
push
pop
push
mov
xor
cmp
ficompl
lea
outsl
cmp
pop
cmp
inc
leave
mov
adc
lret
leave
mov
inc
mov
sub
icebp
pop
aad
jg
imul
jae
jns
loope
xchg
ret
mov
sub
jns
jae
les
sub
mov
in
dec
mov
mov
lret
imul
push
mov
ss
and
cwtl
ret
cmpsb
xchg
push
stos
or
dec
rclb
push
mov
adc
jns
int3
out
jnp
inc
sbb
pop
push
or
aas
addr16
sahf
mov
leave
es
fisubrs
pop
das
pop
and
imul
pop
mov
movsb
fwait
mov
and
in
mov
mov
hlt
jnp
add
ljmp
xchg
mov
cmp
mov
add
mov
adc
xchg
sbb
and
ficoms
pop
and
jecxz
call
pop
add
xor
lret
daa
dec
sub
std
int3
fdivl
and
test
and
mov
push
rolb
xor
and
clc
ds
pushl
dec
mov
cmp
pop
jecxz
hlt
leave
cmp
inc
clc
ds
faddl
loop
int
test
es
arpl
lahf
dec
xorl
es
ja
out
and
sbb
lock
mov
lahf
aaa
adc
lret
mov
xor
jge
inc
test
adc
int
dec
aas
mov
and
lret
and
sbb
js
movsb
in
jne
add
sub
outsb
pop
daa
jg
push
or
push
in
or
jno
pop
nop
inc
jo
in
fdivs
stc
push
insb
add
stos
fsubr
push
popf
push
outsb
stos
inc
push
mov
dec
aas
jecxz
jo
lahf
push
cli
int
cmp
cmp
daa
sbb
mov
cmp
sbb
mov
cmpb
cs
cltd
mov
stos
ret
arpl
int3
fimuls
adc
mov
mov
xchg
and
jp
pop
fstl
test
das
je
jle
xor
sbb
push
push
pusha
inc
mov
push
leave
cmpsb
inc
jp
cwtl
mov
sub
outsl
aaa
mov
test
fisttpll
sbb
push
or
sub
imul
jno
leave
adc
mov
ljmp
mov
mov
xchg
push
pusha
je
xor
xchg
jne
mov
enter
mov
mov
jp
repnz
cmp
std
or
sub
mov
push
xor
gs
repz
xlat
inc
dec
inc
fs
inc
jle
jecxz
jo
mov
push
std
and
push
push
clc
aaa
scas
js
push
in
out
mov
pop
mov
push
xchg
jle
pop
mov
bound
das
pop
pusha
ret
push
mov
jo
cvtps2pd
sub
push
push
xchg
rclb
pop
test
inc
arpl
push
jns
js
sbb
lds
popf
lret
sbb
adc
repz
pushf
pop
xor
addr16
inc
mov
repnz
mov
mov
xchg
pop
int3
sub
mov
push
dec
js
mov
adc
adc
mov
in
push
adc
jbe
cmp
mov
cmpsl
in
mov
stos
fistps
mov
push
jge
xchg
xchg
mov
clc
decl
aam
add
cmp
cli
bound
addr16
fdivl
xchg
insb
imul
xlat
out
stc
cmpb
pusha
sbb
cmc
sti
mov
adc
mov
mov
pop
dec
cmp
pop
push
xlat
int
inc
sbbb
or
outsb
mov
dec
pop
imull
mov
ja
or
inc
mov
lds
jno
sti
cmp
push
test
arpl
inc
pusha
pop
jmp
std
mov
jmp
cmp
outsl
mov
fs
jl
pop
scas
mov
notb
mov
out
jg
shrb
mov
int3
sahf
in
dec
ret
jbe
jb
mov
mov
fldl
pop
mov
aaa
jmp
sbb
data16
jb
mov
mov
push
jbe
sub
sub
sub
lcall
insl
add
inc
push
shll
sbb
lods
push
mov
mov
mov
es
out
inc
mov
mov
push
stos
mov
test
shrl
arpl
dec
es
dec
scas
rolb
jno
mov
jo
ljmp
jno
lret
movsb
fsubr
jne
cmpsl
sar
mov
int
push
outsl
pop
fprem
das
rcrl
cmc
stos
out
fisubrl
popf
repnz
movsl
xor
insb
sbb
hlt
mov
fwait
push
xchg
cmp
lea
mov
mov
sub
aad
andb
stos
xor
fmull
push
outsl
and
adc
push
repz
xor
cld
aaa
pop
mov
jns
pusha
pop
lcall
sbb
aam
dec
or
lds
xchg
adc
pop
lahf
push
push
fldl
loope
xlat
mov
cmc
daa
dec
xor
sub
and
aas
sub
movl
jmp
cmpl
mov
movl
movl
mov
jmp
movl
jle
push
pushl
call
andl
adc
xor
xor
mov
sub
and
not
and
movzwl
adc
cmpl
mov
movl
movzbl
mov
jmp
movl
movl
jbe
push
push
push
pushl
call
add
sbb
sbb
xor
add
mov
mov
shrd
adcl
mov
or
mov
addl
jmp
inc
or
add
cltd
or
push
leave
lcall
add
cmpxchg
add
sub
into
push
test
cmp
push
repz
mov
dec
or
or
hlt
inc
push
adc
sub
movsb
and
xrelease
out
rclb
push
mov
inc
xor
mov
adc
stc
orl
cmp
shr
sub
mov
and
addr16
mov
mov
cmp
mov
sbb
mov
or
movsb
ljmp
scas
into
dec
dec
clc
pop
pop
mov
inc
sbb
add
jo
sbb
aam
rclb
sub
sub
mov
std
adc
idivb
mov
dec
dec
fsubs
daa
mulb
sbb
fidivrs
lock
sub
pop
lea
lret
push
cmpsl
aaa
cmp
gs
out
in
and
push
jmp
cmp
mov
xor
xor
sub
repz
sub
test
shrl
lret
shlb
add
lret
sti
cli
xor
or
inc
cs
push
cltd
adc
fstl
stos
mov
lods
shlb
add
mov
scas
lcall
stc
add
jle
test
dec
adc
add
dec
add
xlat
std
and
mov
jmp
adc
adcb
iret
push
xor
mov
sbbl
jo
fstpl
mov
lods
iret
mov
sbb
mov
jbe
repnz
arpl
jge
sub
in
fmul
xor
cmp
jne
xchg
stos
sub
xchg
clc
push
jp
repnz
xchg
fstpl
dec
cmp
movsl
sbb
pop
inc
dec
cli
test
loopne
fcmovne
ds
pop
iret
or
xor
dec
mov
lcall
movsb
clc
inc
sbb
mov
cli
loope
cs
lea
cmpsb
daa
imul
mov
mov
cmpsl
lods
pop
sub
repz
out
dec
mov
jns
cmp
sub
pop
std
imul
xchg
lods
push
fiadds
in
dec
stos
out
sbb
js
adc
dec
rclb
jmp
cli
cld
jge
stos
mul
jmp
jno
add
jp
fcmovne
icebp
sti
imul
daa
rcll
sbb
nop
insl
push
jl
dec
pop
repz
mov
jp
test
xor
jb
jg
fs
fldcw
in
inc
imul
out
sbb
add
inc
test
mov
cmpsb
int3
lahf
mov
sbb
cmpsb
aam
mov
pop
dec
addb
loopne
test
mov
mov
inc
cmpb
iret
cs
clc
sti
sbb
lret
sbb
outsb
loopne
imull
add
sub
ficoml
aam
loopne
inc
decb
dec
dec
mov
scas
xor
adc
sbb
rcr
fdivrl
sti
inc
mov
adc
dec
arpl
insb
or
pop
mov
imul
shrw
sahf
jo
dec
push
sub
leave
filds
dec
lret
and
mov
adc
lret
xor
add
cltd
sbb
mov
pop
and
lods
sbb
jmp
add
xchg
sub
push
loope
fwait
mov
pop
icebp
xor
mov
jnp
push
inc
cmc
dec
pop
pop
sbb
fwait
jb
push
adc
addr16
cmp
pop
fisubl
pop
icebp
je
sbb
in
fsubs
xor
mov
ljmp
sbb
iret
mov
push
xchg
clc
dec
cmp
cmpsl
xchg
mov
maskmovq
testl
or
mov
sarl
dec
aad
loop
cmpl
pop
add
bound
push
sbb
loopne
stc
adc
jbe
in
inc
push
push
rcrl
ficomps
subl
clc
out
daa
pop
bound
shll
iret
js
fstpt
dec
aaa
pop
mov
mov
repnz
or
iret
pop
jne
push
mov
push
iret
cmp
adc
jnp
and
and
pop
push
stos
push
insb
andb
mov
xchg
outsl
aad
sbb
loopne
iret
pop
pop
bound
lea
sbb
and
out
dec
dec
mov
sub
mov
sub
bound
inc
pop
ror
lds
push
xor
sbb
aad
and
xchg
lods
fimull
cmp
filds
daa
movsl
push
cmpsl
jmp
leave
cmp
in
inc
dec
inc
mov
mov
outsb
dec
and
loopne
ror
bound
dec
cltd
test
loope
pop
add
es
stos
lret
jno
cld
xchg
push
or
xor
or
popa
dec
fistps
mov
xor
sarb
stos
push
stc
test
les
fsts
sbb
pop
pushl
add
cmpsb
cmpsl
xor
inc
gs
sub
adc
in
arpl
adc
bnd
mov
jbe
cmc
imul
xchg
xchg
mov
mov
idivl
ss
adc
lock
dec
inc
shlb
cmp
inc
andb
ret
ljmp
sbb
sbb
jae
xchg
mov
mov
bnd
imul
and
sbb
or
add
or
jnp
dec
lea
add
jns
fimuls
mov
out
movsb
jns
and
xchg
int
jge
lahf
call
pop
repnz
stos
rcrb
bound
pop
mov
ja
push
cmp
push
sub
pop
call
mov
jle
movsb
jbe
xor
loopne
jno
or
xchg
shll
xor
mov
mov
cmp
ficoml
mov
or
sub
xchg
cmp
in
jno
out
push
mov
mov
rorl
xchg
test
iret
add
mov
mov
mov
pusha
scas
jbe
add
mov
shrb
clc
aad
repz
mov
repnz
push
lock
dec
push
sub
xor
stc
test
jb
or
aaa
inc
out
push
inc
shl
xchg
arpl
sbb
xchg
push
imul
loop
ret
ds
push
lahf
cltd
xor
in
dec
inc
mov
and
or
push
andb
ret
dec
rcrl
sbb
mov
mov
jge
jp
inc
jo
out
and
lods
int3
jmp
fwait
in
gs
fdivp
insl
dec
in
lahf
test
test
jg
jnp
sub
add
ja
sti
push
sub
fldcw
call
lds
jge
shl
xor
movl
or
shr
mov
subl
mov
mov
addl
mov
adcl
shrd
shr
mov
cmpl
not
mov
movl
mov
jmp
mov
mov
jb
pushl
pushl
pushl
pushl
push
pushl
call
or
adcl
movl
sub
and
subl
subl
mov
mov
xor
xor
adcl
or
adcl
shl
add
add
add
mov
mov
adc
mov
and
shrd
cmpl
movl
not
mov
mov
jmp
movl
movl
jge
pushl
pushl
push
pushl
push
push
call
sbb
add
or
or
xor
or
add
mov
movl
cmpl
mov
movl
mov
jmp
movl
movl
jg
push
push
pushl
call
add
sbbl
mov
adc
mov
xor
mov
addl
sub
shr
movl
mov
or
mov
addl
xor
shl
cmpl
movl
mov
not
jmp
movl
ja
pushl
push
push
push
call
xorl
xor
incl
xorl
subl
sub
xor
mov
sub
or
cmpl
mov
mov
movl
jmp
mov
jl
push
call
addl
adc
xor
neg
mov
mov
add
sbb
and
mov
movl
mov
and
mov
movl
mov
add
movl
mov
mov
adc
jmp
ret
mov
dec
rcrl
dec
mov
add
push
pop
imul
std
stos
pop
sub
inc
and
add
or
sub
push
aaa
mov
ja
mov
add
mov
xor
and
cmp
arpl
hlt
ret
xchg
mov
stos
pusha
sbb
in
adc
mov
xchg
push
add
push
sub
sub
fwait
jbe
gs
dec
in
adc
movsl
pop
test
cli
mov
repnz
add
pop
push
add
sbb
push
sbb
sub
adc
push
jle
inc
jns
mov
adc
movsb
lcall
pop
lock
xor
inc
adc
push
testl
xor
aad
jmp
pop
jle
imul
mov
xchg
sbbl
adc
inc
jne
push
xor
inc
cmpsb
ret
les
cmpsl
call
fsubrl
mov
pop
jo
ljmp
loope
test
lock
inc
xchg
xchg
sbb
xchg
pop
or
fbld
xchg
loope
ret
mov
pop
in
add
aas
movsb
inc
mov
push
xchg
bnd
sub
mov
les
sub
ret
or
ret
pop
test
mov
sbb
pop
mov
add
or
mov
imul
sbb
sbb
sar
sub
and
fs
xchg
es
je
aam
inc
mov
push
mov
hlt
pop
shlb
mov
lahf
dec
gs
fwait
lds
int
inc
or
popa
bound
pop
out
imull
inc
lret
flds
dec
pop
aaa
mov
pop
cmp
iret
sahf
pop
dec
fistps
push
pop
sbb
mov
mov
xchg
mov
movsl
fistl
adc
sbb
mov
mov
push
cs
xchg
xor
stos
aas
inc
xchg
mulb
nop
in
adc
cltd
repz
incl
pop
mov
sub
xor
pop
xchg
sarb
mov
add
icebp
mov
jp
push
or
movsl
jns
mov
stc
add
xlat
scas
cmpsl
iret
repnz
fcomp
xor
xchg
ds
in
in
fstl
insb
dec
popf
enter
jmp
mov
cld
out
dec
or
out
cmp
mov
ljmp
jo
movl
ss
xor
sub
mov
cwtl
add
or
in
mov
jg
cmc
addr16
imul
xor
ds
arpl
add
dec
mov
ja
aam
in
push
jg
push
cmp
jbe
add
loope
fcomip
jo
sub
xor
cmp
daa
xor
xchg
sub
in
and
out
js
inc
xchg
cmp
cli
fcmovb
cmp
push
sub
aas
test
data16
fwait
jno
jae
mov
pop
sbbl
sub
bound
ljmp
es
sub
push
jg
daa
std
cmp
cld
jbe
addr16
push
jns
jp
in
fnstcw
lods
xor
outsl
sti
jle
jnp
ret
daa
aam
jecxz
shrb
xor
repnz
imul
push
fcompl
pop
inc
mov
inc
sbb
ffree
in
pop
dec
insl
xor
add
pop
loop
stos
jb
rcll
inc
stos
icebp
rcl
mov
int
or
push
roll
mov
xchg
arpl
dec
sti
call
jb
sub
mov
pop
sub
ret
add
ret
out
lret
inc
or
xchg
and
dec
inc
dec
mov
je
movsl
xor
add
into
leave
mov
sub
dec
sbb
lahf
adcl
stc
lea
js
icebp
ja
push
jmp
and
test
push
ss
xchg
xchg
divl
dec
pop
cltd
loopne
daa
xchg
sub
xor
ja
jecxz
enter
loop
dec
test
jb
or
or
mov
dec
jl
cmp
push
mov
enter
repz
sbb
inc
adc
push
xchg
xor
sbbl
push
sbb
adc
push
pop
sqrtps
mov
xchg
xlat
lret
idivl
fsubrl
lret
gs
and
inc
or
sub
sarb
aas
xor
and
add
push
int3
mov
ret
push
fwait
idivb
xchg
xor
into
add
lods
cmp
in
sbb
sarb
mov
data16
imul
aas
das
pop
test
outsb
outsl
mov
mov
pusha
pusha
cmp
mov
int
shrb
xor
xchg
dec
insb
scas
iret
mov
push
fwait
outsb
mov
add
ja
jmp
fcmovb
ret
xchg
sbb
add
shrb
jo
pop
lds
int3
sbb
xchg
adc
jno
mov
ret
mov
inc
mov
add
stos
and
dec
dec
mov
outsb
adc
in
pop
push
xor
stos
and
rorb
jnp
sbb
lret
adc
fadds
les
lods
ret
loopne
stos
mov
pop
imul
inc
dec
lea
scas
pop
inc
jns
in
shlb
inc
fsubl
jecxz
scas
in
sbbl
insl
rolb
loope
imul
xchg
jge
push
scas
mov
pop
hlt
cmp
sbb
push
mov
inc
xor
dec
mov
push
xorb
or
dec
pop
fildll
sub
cld
mov
sub
xchg
popf
dec
aam
dec
inc
repnz
cmp
scas
adc
jno
int3
push
xchg
bound
shrl
lret
adc
imul
xchg
sbb
jne
fists
mov
add
add
stos
pop
adcl
pop
ficomps
adc
inc
fsubr
push
lock
add
jl
mov
pop
addr16
jge
xor
xlat
push
mov
in
call
xor
icebp
stos
ds
jb
das
sbb
inc
popf
idivb
cs
inc
rcl
pop
lds
stc
or
clc
push
pop
popf
stos
test
jno
xor
mov
pop
adc
mov
cmp
push
cmc
pop
xchg
ror
into
ljmp
mov
pop
mov
adcl
cli
cmp
insl
sbb
arpl
movntq
cmpsl
leave
push
jle
cmp
scas
or
aam
jl
das
pop
out
mov
int3
mov
sub
es
int
fstsw
mov
or
xor
cltd
bound
movsb
cmp
addr16
test
out
xchg
out
xor
mov
hlt
std
aad
ret
subl
push
nop
pop
cmp
push
add
inc
sub
mov
jmp
lods
jp
scas
adc
xchg
mov
pop
fisttpl
ja
fwait
popf
mov
xchg
sub
and
mov
in
shlb
dec
fisubs
xlat
icebp
push
sarl
cmpsl
sbb
ror
sub
sbb
hlt
adc
xlat
lret
xchg
js
std
push
test
adc
enter
andl
push
cmpl
lods
inc
cmpsb
test
cs
dec
inc
and
xor
stos
add
mov
cwtl
push
idivb
ss
dec
out
add
xor
insl
sarl
cmp
fs
mov
adc
je
sbbb
mov
movsl
pushl
push
je
mov
outsb
push
arpl
inc
jle
add
je
pop
call
xchg
or
repz
test
add
sub
lods
sub
cmp
or
cmp
ljmp
push
loop
jbe
hlt
inc
sub
jbe
sub
cltd
mov
in
cmp
and
je
cmp
data16
icebp
adc
push
scas
rol
or
gs
sbb
jmp
cmp
mov
adc
xchg
xchg
mov
fmull
ret
add
jge
xor
pop
jo
fidivs
jae
outsl
aaa
popa
or
xchg
das
push
sbb
out
outsl
xchg
jle
icebp
movl
fnstcw
cwtl
sbb
sub
sbb
pop
xor
mov
mov
jecxz
add
xor
inc
js
pop
ret
jb
fmuls
fs
add
fstl
data16
push
mov
dec
negb
arpl
mov
sbb
push
fisubrs
insb
idivl
pop
pop
sahf
mov
and
jle
cmp
dec
shrb
mov
shrl
and
in
das
or
into
pop
pusha
xor
mov
out
xchg
icebp
push
cmp
push
ja
bound
outsl
lahf
stos
sarl
mov
addr16
xchg
lock
xor
xor
ja
imul
push
out
jae
inc
shlb
notl
and
fs
mov
stc
in
popf
or
add
test
test
sbb
cmp
inc
inc
rcrb
mov
xor
arpl
das
loope
or
pop
cmpsb
inc
cwtl
inc
push
cmp
xchg
sub
pop
hlt
or
inc
andb
sbb
jmp
stc
pop
mov
adcb
mov
inc
mov
loopne
mov
ret
lret
jmp
adc
shrb
push
jae
jp
push
xchg
mov
mov
les
aad
leave
mov
fdiv
or
and
out
loopne
int3
das
jp
inc
repz
leave
add
inc
push
push
push
popa
dec
adc
cltd
movsb
adc
push
dec
rolb
xchg
pop
aad
mov
das
xchg
into
fdiv
add
das
cmp
arpl
jle
jb
jmp
xor
daa
sbb
add
pop
inc
ds
xchg
arpl
pop
pop
mov
lret
enter
xor
lea
out
sbb
mov
jo
sub
ret
icebp
add
push
dec
push
mov
pop
xlat
lahf
mov
sahf
les
xchg
push
sub
ja
mov
dec
mov
mov
mov
cld
push
add
push
nop
push
pop
imulb
inc
in
pop
nop
sub
xlat
xchg
aam
sub
mov
xchg
sbb
mov
std
cmp
mov
mov
xchg
repz
stos
xchg
add
pop
scas
outsb
dec
jle
mov
popf
mov
push
xchg
mov
scas
pop
add
shrb
aas
cmp
push
sti
push
jbe
and
push
ror
mov
mov
frstor
inc
rorb
enter
push
sti
pop
xchg
mov
je
mov
cmp
enter
les
xor
cs
movswl
or
mov
inc
xchg
mov
jb
mov
int
orl
jno
loope
sub
stos
xchg
mov
jne
fbstp
test
fnstenv
inc
mov
pop
jecxz
cmp
ficoml
imul
icebp
adc
push
jb
fstl
jge
mov
jecxz
stos
mov
addr16
and
fistpll
outsb
mov
hlt
mov
dec
orl
ficoml
mov
shl
je
sahf
ret
push
push
xchg
push
xchg
xor
arpl
test
xchg
pop
jnp
inc
fistps
xor
and
xor
push
imul
mov
lds
sub
jmp
xlat
fistps
push
rcrl
into
mov
daa
sbb
sub
fistps
sbb
push
imul
rcrl
fs
lahf
aaa
mov
je
int
popf
imul
fsubs
rcl
xchg
mov
outsb
mov
out
mov
lahf
out
fs
call
dec
in
jle
nop
in
xchg
jmp
push
cwtl
in
rorb
push
sub
sti
add
pop
mov
lods
int
push
out
ret
imul
outsl
lods
jae
das
bound
cmpsl
pop
cmp
aad
cmpsl
push
and
mov
idivb
xor
mov
or
imul
jg
inc
lods
icebp
cmp
pop
inc
inc
cli
out
and
outsl
lods
xchg
and
stos
movsb
adc
jmp
loope
mov
ss
fstpt
adc
test
add
fld1
sub
adc
out
mov
and
sub
adc
push
push
gs
sbb
cmc
push
jne
mov
insl
adc
jnp
pop
repnz
mov
incb
pop
fstl
cli
in
popf
xor
sbb
daa
hlt
std
push
sahf
pop
ljmp
push
mov
sahf
jecxz
xor
jb
das
dec
sub
aas
clc
mov
ss
dec
mov
sbb
fists
call
inc
repz
lret
lods
insl
mov
sub
leave
into
pop
push
scas
sub
adc
sbb
outsl
or
lcall
mov
mov
outsl
sub
out
add
sbb
push
fcmove
adc
dec
lea
inc
xchg
push
sbb
mov
in
rcrb
or
or
adc
dec
popf
pop
ror
jne
daa
mov
add
les
push
cmpsb
jp
sub
rcll
xor
jp
les
rcrb
sarb
xor
cmpsl
call
in
inc
lods
icebp
popa
pop
cmpsl
cmp
dec
mov
fiaddl
adc
push
xchg
add
test
clc
ds
add
aam
mov
lds
in
sti
into
push
cmp
xor
ljmp
sub
dec
notl
add
xchg
sbbb
outsb
ljmp
ficoms
sbb
imul
insb
aaa
cmp
shll
fcoms
imul
inc
leave
sub
push
xchg
add
mov
mov
mov
shrd
jmp
add
dec
push
adc
call
fimull
lret
pf2id
pop
cmp
in
ret
test
dec
inc
lret
jae
sbb
add
in
mov
aad
cs
sarl
push
and
pop
and
mov
inc
add
mov
cmp
inc
int3
jl
sub
bnd
push
cltd
jns
mov
jg
sbb
ja
push
sub
jae
push
mov
xor
mov
scas
fwait
cmpsl
in
clc
lods
in
pop
or
mov
pop
sub
mov
xchg
test
dec
cmc
aaa
rorl
sub
movsl
lock
movsb
mulb
std
test
adc
sub
sub
jno
xor
fdiv
and
push
lret
popa
roll
mov
in
pusha
pop
and
mov
push
jg
jle
rorl
pop
scas
sti
mov
scas
dec
push
inc
outsb
mov
jo
lret
sahf
xchg
pop
xchg
repnz
dec
outsb
icebp
mov
hlt
out
xchg
jb
je
mov
mov
data16
xor
dec
in
cmp
rclb
dec
stos
icebp
ja
push
stos
push
jns
xchg
sti
pop
jp
jb
jnp
cmp
lods
adc
add
inc
jo
shrl
adc
out
push
popf
outsl
mov
dec
filds
xor
testb
loopne
cmp
movsb
insb
popf
push
jp
aas
xor
sbb
mov
xlat
adc
sub
jnp,pt
movsb
pop
inc
sbb
test
push
mov
cmpsb
pop
iret
sbb
push
daa
adc
dec
or
popa
lds
add
inc
adc
sbb
orl
jno
shlb
add
es
out
test
mov
pop
ffreep
cmp
scas
stos
cmpl
mov
repnz
sub
loopne
std
fcmovnbe
add
lret
add
scas
jge
mov
int
inc
out
xor
jae
cmp
mov
aad
ss
fdivrl
clc
aam
gs
mov
out
cmp
aas
scas
pop
pop
les
lds
add
aas
jp
pusha
jb
andb
decb
mov
outsb
mov
adc
aad
cmc
stos
popf
jnp
stos
mov
and
inc
ss
fistpll
mov
mov
rcrb
sub
jne
sbb
js
aas
xor
jno
sbb
cwtl
push
sbb
adc
or
cld
jmp
jae
or
je
push
nop
gs
movsb
out
pop
arpl
enter
and
cmp
cli
xchg
inc
jb
cli
push
test
dec
sub
adc
mov
adc
mov
int
rcrl
pop
add
cmp
iret
imul
loop
insl
push
and
xor
pop
in
mov
push
iret
lea
or
xchg
loop
xor
cs
out
rcrb
lret
enter
cmp
add
mov
xchg
out
sbb
or
cmp
sbbl
mul
movsl
inc
fdivrp
lds
test
ret
adc
mov
cmc
testl
nop
mov
and
add
xchg
enter
inc
in
xor
sahf
jecxz
dec
enter
jg
fsts
dec
jl
push
xchg
dec
cmp
jp
ljmp
sahf
xchg
push
jne
mov
sbb
sub
and
out
pop
inc
outsb
ficomps
mov
pop
sub
imull
pop
mov
in
lods
push
pop
scas
inc
jge
mov
sbb
pop
xor
mov
fbstp
movsb
mov
or
xchg
cmp
dec
lea
dec
push
push
sub
xor
push
pop
push
scas
ss
icebp
add
dec
repz
std
sub
outsl
mov
cmp
int3
push
aam
adc
hlt
bound
and
mov
jg
cmpsb
lcall
les
test
mov
shlb
mov
jnp
inc
daa
dec
icebp
sub
jp
jae
dec
pop
in
and
and
push
into
xor
dec
push
mov
jg
jp
sub
pop
push
add
and
jmp
loopne
rcr
scas
cs
xchg
jno
out
aam
push
outsl
push
xchg
fs
pop
inc
mov
sbb
and
scas
insb
adc
call
pop
push
inc
add
int
mov
pushf
mov
pop
adc
sti
repnz
ja
pop
fcoms
push
fdivs
pop
jl
dec
ret
lret
leave
sub
fistps
scas
ds
fldl
jp
mov
cmc
push
lret
daa
ss
mov
fld
mov
mov
movb
jg
addb
cmp
cmp
addr16
jp
dec
data16
and
jns
mov
test
repz
movsb
lods
addl
popf
or
test
cmc
repz
cmp
mov
mov
outsb
sub
aam
clc
gs
mov
and
jl
add
jle
jne
stos
je,pn
adc
pop
sbb
push
or
sti
into
std
bound
jbe
ds
jnp
push
out
leave
fnstcw
test
imul
pop
cld
push
lock
ja
cmc
aaa
pop
out
fstpl
shlb
pop
subl
test
xor
dec
or
mov
addr16
mov
fs
repnz
mov
test
and
inc
lcall
jns
add
std
movsl
mov
fldenv
jb
inc
sub
idivb
mov
lds
lcall
js
lcall
icebp
pop
or
push
xor
testb
jg
push
fwait
scas
push
lods
roll
daa
addl
ret
dec
iret
and
bound
pop
lea
fsts
shrl
pop
and
mov
push
or
add
bound
xor
fwait
iret
roll
or
sub
adcb
gs
sbb
cmc
loop
jo,pt
lcall
iret
les
inc
test
pop
mov
xchg
call
hlt
add
sti
stc
pop
lock
call
mov
jns
adc
mov
jae
xchg
mov
lods
stc
mov
sbb
gs
adc
std
test
and
lret
cmp
std
add
xor
or
mov
push
out
xchg
sub
mov
and
aad
pop
les
sub
mov
jns
pop
xor
add
subb
in
out
into
outsl
pop
gs
cs
xor
cmpsb
push
jb
iret
popa
xor
push
int
cmpsb
rcrl
sbb
mov
mov
imul
add
mov
push
jo
dec
cmp
cmp
xor
mov
je
mov
inc
pop
dec
pop
dec
xchg
jne
adc
loope
jno
cmpsb
xor
in
mov
int3
fsubr
mov
jmp
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
jmp
in
in
data16
push
sbb
arpl
mov
mov
addps
fisttpl
jbe
jnp
mov
dec
xchg
int3
test
fimull
pop
push
cmp
jg
pop
or
pusha
inc
or
adc
jbe
pusha
into
mov
lods
cwtl
or
rclb
nop
xchg
sti
pop
loope
and
mov
push
mov
jp
lods
int
mov
jl
jo
and
ret
and
cmp
jae
inc
cmp
rorb
cltd
mov
leave
jae
test
loope
iret
mov
adc
add
pop
cltd
sbb
mov
jmp
lds
or
fcmovbe
fnstcw
or
dec
decb
out
push
mov
push
sahf
cmp
jb
loope
in
dec
xchg
mov
dec
imul
pop
jg
std
addr16
push
lret
fcom
mov
push
iret
mov
imul
add
hlt
dec
jae
mov
roll
xlat
jp
mov
cmc
jno
dec
mov
into
adc
inc
add
out
pop
xchg
cmp
imul
jecxz
pop
pushf
jns
outsb
dec
test
fwait
mov
add
lahf
clc
stc
or
push
sub
ds
out
repz
sti
add
daa
enter
shl
aam
jno
xor
js
and
mov
jb
xchg
daa
cmp
in
imull
add
in
inc
rcrb
icebp
mov
movsb
xchg
sbb
or
dec
mov
mov
repz
outsl
and
dec
jns
lcallw
push
xor
jbe
pop
push
test
imul
je
ja
clc
int
mov
sub
mov
xchg
adc
cli
pop
lods
les
push
ja
mov
nop
in
xchg
sbbl
dec
out
leave
in
int
jp
cmp
xor
das
insl
fs
pop
popa
stos
aam
ret
lahf
aas
hlt
fcomip
in
add
adc
sub
int3
insl
loop
adc
and
adc
mov
stos
xchg
in
mov
add
and
jbe,pt
jno
mov
xchg
push
rcrl
aaa
mov
or
lahf
dec
test
pop
sub
xchg
push
repnz
lcall
push
cmc
ljmp
jb
adc
add
sbb
cmpsb
nop
imul
mov
jg
jl
sub
in
gs
cmp
adc
push
and
sahf
aas
cltd
jns
cmp
fcompl
pop
and
jge
test
nop
inc
addb
sbb
fstp
int3
mov
or
push
jge
sti
dec
test
shrl
mov
push
cmc
xchg
iret
fs
lock
xchg
outsb
dec
adc
icebp
and
pop
sbb
pop
sbb
push
stos
jae
jbe
leave
and
pop
ret
mov
aaa
fstpt
push
cmp
bnd
mov
pop
pop
and
ret
mov
xchg
arpl
decl
mov
lret
or
imul
jns
add
add
push
jg
int3
sub
mov
dec
cmpsl
sub
xor
and
lahf
iret
mov
xor
loope
inc
ja
jbe
arpl
or
incb
sub
sbb
jle
jp
lret
fsubs
cmpsb
rorl
inc
jecxz
popf
mov
push
shll
xchg
in
lcall
mov
cmp
lahf
jnp
call
or
adc
mov
or
pusha
pop
ds
xlat
call
and
pop
pushf
call
aad
hlt
movsb
mov
fisttpl
push
das
jae
cmpsw
or
stc
pop
jbe
loope,pn
lret
loope
cs
fdivrs
mov
imul
cmp
adc
lds
mov
jne
lods
sbbb
shll
push
mov
sub
std
xor
dec
push
scas
adc
insb
fisubrs
lods
adc
push
adc
pop
fists
lcall
cwtl
push
sbb
mov
stc
jmp
pop
push
stos
mov
loopne
rorb
js
add
sub
insl
dec
fdivs
jns
cmp
adcl
orb
xor
jo
mov
out
and
repz
push
inc
mov
mov
mov
divb
add
cli
lret
inc
ret
mov
loop
outsb
dec
shll
dec
in
mov
mov
mov
dec
mov
cltd
lret
pop
popl
inc
xchg
jb
popf
iret
stc
idivl
jo
int
dec
adc
pop
inc
daa
in
out
fstpt
je
cltd
push
iret
in
imul
or
test
cmpsl
ret
mov
dec
cmovo
adcb
jae
or
in
xor
cmp
cmpsl
inc
es
or
outsl
sbb
and
xchg
cmpsl
les
pmaxsw
dec
cmp
jge
lea
idivb
adc
js
or
mov
mov
adc
inc
jle
shr
mov
lret
push
dec
dec
add
shrb
or
lcall
jo
mov
jo
and
out
add
clc
icebp
fnstsw
jle
pop
aaa
jae
sbbb
scas
fmull
push
or
xchg
add
mov
dec
ret
aam
xor
sar
daa
std
ds
cmp
sbb
jl
xchg
testb
pop
subl
cmp
sbb
mov
jno
or
repnz
rcl
andl
roll
dec
adc
sub
inc
stos
jecxz
faddp
push
insb
adc
push
xchg
mov
xchg
aad
sbb
add
mov
sarb
ret
pop
into
ficompl
xchg
arpl
lahf
cltd
outsb
stos
out
cltd
push
cmp
shrl
sbb
inc
jmp
sub
std
insl
ljmp
push
sub
ljmp
cli
jns
jnp
xor
cmpsl
ret
push
es
shlb
jns
pop
dec
inc
pop
sbb
pop
lods
or
in
dec
lahf
jp
leave
dec
ret
out
cmp
cltd
push
js
stc
je
jb
test
stos
cmpsb
cmpsl
jle
and
mov
xchg
pop
xor
int3
outsl
mov
xchg
push
adcb
cmp
pop
aad
push
lahf
test
push
in
mov
int
pop
lret
push
scas
data16
out
dec
mov
push
dec
pop
add
notl
imul
mov
sbb
lret
into
cmp
roll
mov
mov
push
fwait
outsb
lds
pushl
rorb
xchg
cmp
scas
or
push
inc
icebp
lret
mov
xorl
jmp
dec
in
cmp
int
xchg
cmp
ret
adc
pushf
in
push
ss
pop
add
idivb
mov
neg
insl
mov
sub
stos
xchg
es
movsl
cmpl
cs
push
fistpll
sbb
inc
pushf
add
lods
mov
mov
push
pop
mov
sti
pushf
mov
sbb
aam
loope
mov
xor
xor
or
mov
mov
xor
jmp
outsb
hlt
xorl
scas
xchg
mov
xchg
shlb
pushf
lret
das
pop
ret
in
mov
ss
outsb
or
andl
inc
arpl
xorl
int3
shl
or
adc
rcrb
mov
push
shlb
add
adc
sbb
add
int3
add
aad
jae
pop
push
jl
mov
adc
pop
shlb
enter
lret
inc
and
fistpl
pop
jecxz
push
sub
shll
sti
and
lcall
mov
aas
pop
fisttpl
mov
nop
pop
addr16
fsubs
mov
jo
inc
daa
jecxz
sbb
daa
pop
dec
mov
dec
movsb
xchg
iret
sbb
addr16
stos
dec
sub
cmp
jle
fstpl
dec
icebp
loop
fnsave
mov
jp
mov
std
loop
adc
pop
js
test
das
sar
fisubrs
negl
xorl
mov
into
cld
dec
or
fistl
dec
add
jno
add
dec
pushf
outsb
cmp
ja
sarb
push
jae
mov
xabort
adc
add
or
mov
rclb
lds
call
add
add
and
dec
iret
mov
stos
out
mov
jle,pt
jmp
mov
cmpl
mov
loop
xchg
mov
lcall
mov
pop
inc
bound
aam
or
in
ret
pop
in
popa
push
push
jmp
jo
in
sahf
jae
pushf
cmpsb
lock
xchg
cmp
leave
cmpsl
mov
add
dec
pop
sbb
daa
es
mov
or
xchg
popa
in
fstpl
xchg
mov
insb
int
insl
into
fidivs
xchg
mov
mov
in
test
mov
bound
jp
and
xchg
cmp
sbb
loopne
push
inc
sarb
inc
cmp
testl
xchg
and
sbb
and
aam
push
lahf
test
shll
leave
cmp
mov
push
icebp
xor
dec
arpl
sbb
xor
or
adc
sub
call
in
imul
loop
lock
test
xchg
xor
add
cmp
test
add
xor
mov
sub
xchg
xor
add
movsl
pop
in
fmull
stos
mov
xchg
mov
lret
bound
mov
xchg
loopne
mov
xchg
xchg
add
cmp
sub
stc
add
xchg
xchg
mov
jno
stos
push
mov
mov
dec
aas
cmpsb
jae
dec
mov
add
outsb
dec
xor
movsl
xchg
out
push
push
add
fisubrl
pop
loopne
push
sub
mov
jle
cmc
sbb
mov
cwtl
inc
jg
mov
or
add
loope
imull
and
aam
int3
and
inc
test
iret
mov
and
and
mov
mov
mov
fldl
cltd
rcrl
test
rcrl
or
mov
xchg
xlat
test
fisubrs
sbb
hlt
sbb
push
sub
sbb
jl
pop
out
cwtl
or
fnstcw
jae
sub
cwtl
add
call
insl
and
jg
dec
out
lods
icebp
lds
push
fmulp
outsb
rcl
inc
pop
adc
add
cmc
xor
xor
movsl
pop
aam
xor
in
inc
mov
add
int3
movsl
sbb
add
les
mov
gs
adc
and
jb
sbb
movsl
push
rcrb
sarl
sbb
hlt
outsl
fs
scas
mov
jg
push
xor
pop
imul
and
leave
adc
das
ret
sub
sub
mov
push
popa
out
cs
mov
xchg
xchg
mov
jo
out
bound
pushf
mov
lret
jb
jp
jp
inc
push
loop
sub
rorl
enter
mov
adc
cld
lret
mov
push
dec
neg
xor
ja
jecxz
push
or
lods
add
jge
fwait
push
jl
jbe
cmp
test
mov
sub
pop
pop
sub
inc
js
sti
sbb
cmp
sub
inc
push
sub
cwtl
mov
loopne
movsl
sbbl
xor
in
push
or
lds
in
push
jns
mov
inc
aaa
test
lods
int
insl
mov
lahf
add
xchg
adc
iret
pusha
pushf
push
das
test
sub
leave
repz
and
and
xchg
jns
cltd
mov
mov
jmp
aaa
cmc
out
inc
stc
les
sbb
sbb
dec
outsl
cwtl
icebp
cmp
pop
mov
adcl
pop
xchg
test
jmp
outsb
xor
rclb
mov
dec
push
rorb
xor
pusha
lahf
paddq
push
or
cmpsl
mov
in
mov
dec
filds
and
fsubp
fxch
inc
out
repz
movsb
into
loope
and
rcrl
into
iret
insl
sbb
jne
dec
push
cltd
inc
inc
add
mov
mov
mov
jecxz
jle
aas
cmp
mov
xlat
leave
pop
xorb
scas
movsb
lock
std
push
ljmp
rcll
jbe
push
jno
xchg
sbb
push
xchg
icebp
data16
nop
jg
inc
fildll
sub
into
es
dec
loopne
call
outsl
pop
les
jnp
dec
stc
jg
cs
dec
lcall
in
push
push
les
jo
push
push
jg
jl
add
das
leave
ficoms
call
lods
addr16
jae
stos
data16
push
out
leave
fldenv
xor
dec
out
dec
cwtl
bnd
and
push
mov
lret
js
pop
inc
jmp
iret
mov
mov
mulb
fs
enter
dec
lods
mov
repz
mov
ficoml
push
xchg
mov
mov
aaa
push
push
fildl
xor
int
mov
push
jne
movsl
dec
adc
mov
pushf
test
movsb
pop
mov
cmp
mov
add
push
pusha
sbb
xor
mov
leave
addb
mov
roll
push
shrb
popf
popa
jmp
sbbl
jge
inc
pop
bound
in
jle
jne
pop
mov
jb
cmp
xor
mov
inc
cmp
mov
push
xor
cs
into
rclb
fwait
and
aas
arpl
loope
enter
or
dec
into
aaa
dec
mov
daa
mov
test
xor
and
call
add
ljmp
addr16
jno
mov
xchg
sbb
sbb
adc
cld
aad
icebp
xchg
ficoms
nop
sti
inc
clc
mov
loop
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
add
mov
inc
iret
hlt
jl
aaa
mov
ja
js
pop
sti
fucomp
fistl
xchg
adc
pop
sarl
cmp
add
adc
xchg
insb
add
inc
mov
in
jns
cmpsl
outsb
xchg
or
mov
and
bound
jnp
cltd
pushf
popf
sub
adc
test
and
xor
fsubs
pop
pushf
push
fdivrl
add
sarb
xchg
cmp
ds
push
adc
cs
mov
shlb
mov
gs
bswap
xor
out
decb
or
cwtd
cli
fisubrs
mov
sarl
push
mov
cmc
mov
std
loopne
test
xchg
mov
xor
mov
pop
pop
stos
and
mov
jmp
jbe
or
in
fxch
cmc
lret
push
jbe
dec
xchg
lock
jno
push
jo
es
out
shl
into
sbb
out
mov
add
xchg
sub
loope
dec
and
jmp
inc
insl
movsb
out
or
cmc
bnd
stos
adc
outsb
pop
inc
cmpsb
inc
inc
call
jp
cmp
and
ljmp
add
sbb
mov
xchg
stos
imull
pop
js
pop
popa
dec
notl
mov
call
in
pop
test
adc
rorb
pop
dec
cwtl
jge
dec
cmp
fimull
aaa
outsb
sub
jecxz
ret
insl
mov
cmpl
out
jne
lret
xor
dec
sub
mov
and
ret
bound
cmpsl
xchg
les
fsubrs
sbb
pop
mov
je
aad
stos
mov
nop
sub
cmp
or
or
cli
data16
nop
test
int
sub
inc
out
mov
faddl
xor
repnz
add
in
xchg
mov
and
xor
fadds
xor
dec
pushw
shrb
stos
mov
outsl
mulb
ret
out
pop
xchg
or
add
mov
call
sbb
aam
mov
mov
push
in
ss
adcb
sub
fs
mov
ficompl
test
sub
pop
imul
mov
jns
xchg
insb
jb
lcall
jmp
das
cmpsb
push
and
dec
scas
add
pop
mov
mov
movsl
adc
fnsave
mov
push
add
and
fsts
xchg
icebp
sub
jnp
dec
jge
or
sbb
lahf
into
add
inc
cmp
mov
or
sub
scas
pop
stos
aam
inc
and
push
cmp
dec
push
sub
icebp
js
sahf
scas
shl
mov
int3
cmpsb
outsl
dec
cmp
xor
xchg
mov
dec
sub
int
adc
mov
sub
add
sbb
pop
xor
in
push
xchg
cmp
xor
fsubrl
xlat
sarb
adc
data16
loopne
pop
lds
adc
sbb
out
jle
lcall
inc
mov
icebp
cmp
ljmp
push
dec
push
test
fildll
or
popfw
add
adcb
pop
push
lods
insl
jle
lock
aas
adc
iret
lds
movsb
pushl
test
inc
and
add
stos
inc
gs
jle
jge
bound
mov
jp
push
fmull
pop
push
mov
xor
xor
inc
jle
jle
sahf
shl
inc
gs
arpl
adc
push
mov
out
push
mov
int
push
repnz
les
neg
in
test
call
cwtl
sbb
imul
fs
push
jbe
ds
nop
stc
shr
and
jl
loop
mov
insl
pusha
jo
movsl
sbb
inc
sahf
enter
xor
out
jbe
xchg
insb
out
or
or
inc
call
in
stos
inc
or
test
leave
or
fsubs
pop
lea
jg
or
pop
sahf
add
pop
fsubs
call
mov
or
push
xlat
mov
sub
add
faddl
int3
mov
xchg
mov
mov
fiadds
push
aam
adc
rorl
call
and
pop
movl
push
sbb
and
pop
sub
mov
fmuls
mov
pop
test
or
adc
ret
int
inc
daa
push
dec
ljmp
out
xlat
inc
sub
fiaddl
and
mov
loopne
jnp
push
mov
lcall
mov
and
xchg
stc
mov
jmp
jg
movsb
xchg
ret
mov
aaa
int
sbb
xor
in
dec
bound
or
mov
mov
cmp
dec
or
add
popa
mov
jae
or
les
mov
pop
lret
call
cltd
pop
dec
or
or
mov
jecxz
xchg
aam
inc
orl
jg
xor
xchg
xor
outsl
mov
iret
jl
into
jo
jmp
mov
sub
adc
or
pop
fldt
mov
mov
inc
mov
sarb
fcompl
xorl
pop
adc
aas
cs
push
sub
popf
jbe
insb
sbb
mov
js
push
and
mov
mov
mov
out
jae
lds
das
dec
mov
push
mov
push
fdivrs
push
movsb
dec
loopne
mov
jnp
pusha
pop
fwait
aas
cmp
and
mov
pop
cwtl
pop
xlat
xor
adc
mov
mov
lea
aad
mov
pop
outsb
and
pop
das
or
or
dec
adc
mov
divl
mov
aad
and
xorl
xchg
push
scas
neg
hlt
adc
mov
popa
lods
jne
jno
pop
dec
mov
cmpsl
fsts
pop
jle
pop
aam
sub
enter
pop
adc
test
jae
outsl
adc
or
movsl
cmp
out
push
mov
cmp
movsb
negl
mov
rcl
cmp
mov
dec
enter
xchg
pop
mov
aaa
dec
mov
xchg
stc
cmp
fdivl
inc
inc
insl
mov
lea
mov
or
xor
mov
cmpsl
or
push
std
test
mov
mov
adc
lods
sub
push
out
xor
mov
out
orb
xor
int
adc
lret
in
ficoms
mov
adc
sub
ss
pop
add
je
negl
cmp
cmp
pop
mov
imul
into
aam
stc
sub
add
scas
add
addr16
stos
jge
mov
clc
in
std
sbb
sbb
jge
lock
mov
inc
lcall
sbb
les
fisttpl
jp
enter
add
aad
sbb
sub
rorb
enter
add
hlt
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
orl
push
cmpb
clc
addr16
mov
xchg
xorb
daa
sub
rolb
lahf
xchg
shrl
stc
bound
loopne
push
mov
pusha
das
mov
mov
mov
add
jl
mov
test
jb,pt
mov
das
jl
sub
cmpsl
lcall
ss
loopne
mov
adc
and
dec
sbb
aad
sti
xchg
or
mov
cmpsb
adc
fs
ret
inc
mov
push
fs
subl
leave
cmp
pop
bound
scas
xchg
shrl
test
lcall
aaa
jae
jno
addr16
test
jae
push
push
fs
imul
ffreep
iret
imul
or
xchg
fs
std
inc
fnsave
and
shlb
add
mov
pop
add
fwait
and
ljmp
jl
mov
push
mov
inc
mov
fbstp
mov
in
add
jb
stos
inc
fists
adc
daa
lcall
ja
mov
loope
lds
and
bound
out
jecxz
jae
mov
or
mov
sub
outsl
xor
outsb
lcall
ljmp
sbb
rcr
sub
scas
xchg
addr16
cmp
dec
mov
daa
leave
mov
in
xchg
and
and
test
imul
insb
leave
xorl
lock
out
mov
mov
inc
or
loope
xor
ja
adcb
xchg
aam
in
sbb
sbb
add
dec
sub
imul
loope
push
pop
enter
mov
mov
pop
int3
fsts
loopne
pop
push
mov
push
or
push
out
mov
outsl
cmp
fistpl
sub
fcmovne
arpl
jnp
bound
loope
lahf
push
inc
jne
and
lods
mov
imul
and
mov
mov
in
pop
mov
stc
adc
jmp
cmc
mov
lahf
push
outsb
xchg
jl
and
mov
sub
cld
out
or
hlt
sarb
daa
push
xlat
inc
dec
push
pop
into
icebp
icebp
jae
mov
and
adc
xchg
pop
mov
and
outsb
shl
cmc
and
mov
sub
inc
loop
ret
xor
push
cld
bound
or
xor
push
pop
sbb
shlb
movsb
mov
mov
mov
pushf
adc
and
cld
rolb
imul
adc
outsl
mov
dec
jge
jge
ss
stos
stos
lds
ja
and
rol
push
xchg
cmpl
gs
jae
pushf
in
sahf
mulb
sub
rorb
es
push
test
adc
add
loope
adc
add
test
in
and
pop
or
sub
lcall
test
stos
mov
xchg
in
fucom
movsb
add
out
push
pop
arpl
jnp
stos
or
push
dec
loop
lcall
adc
rcrl
sub
cmpsl
sbb
shrl
cmp
jge
adc
jno
loop
rolb
ret
addb
loope
xor
ljmp
sub
xchg
cli
out
sub
mov
sahf
add
outsl
and
lcall
mov
xchg
mov
add
adc
push
xlat
mov
push
mov
mov
arpl
out
ficoml
or
lret
pushf
cmp
xchg
mov
dec
cmp
xchg
jo
add
cmp
mov
es
sub
dec
cltd
sbb
jecxz
jno
pop
and
jnp
adc
cwtl
push
out
into
dec
popf
cmp
ja
adc
stc
bound
mov
jl
and
jge
fbld
push
dec
arpl
pop
int3
or
mov
sub
stc
lods
and
push
test
mov
sti
sbb
fstpt
lahf
mov
gs
lods
push
dec
or
add
fidivl
mov
addr16
xchg
pop
push
pop
pop
push
ret
lcall
leave
jnp
loop
mov
cmc
cmp
push
int
sbb
mov
insb
jmp
test
add
jo
int
and
xor
ds
xchg
inc
sbb
lcall
in
lret
popf
cmpsl
jge
sbb
jecxz
xchg
jp
mov
mov
xchg
pop
loopne
out
cmp
mov
inc
fistl
leave
adc
mov
clc
in
stc
sbb
sbb
push
aad
jecxz
jecxz
or
outsb
sub
notb
stos
dec
and
cmp
std
loop
testb
subl
pop
repz
sub
xlat
sub
fsubrl
out
mov
mov
repnz
repnz
mov
lods
add
push
lahf
sbb
mov
inc
sub
idivb
in
pusha
lahf
orl
jge
dec
out
dec
out
or
int3
dec
mov
xchg
jbe
imul
cmc
jmp
adc
sahf
rcrl
shlb
mov
cmp
jecxz
jle
stos
xchg
dec
dec
adc
xchg
add
insl
decb
adc
loope
dec
insl
in
movlps
adc
xchg
into
mov
cli
loopne
mov
pop
cmp
push
xor
jno
arpl
movsb
fldl
std
cmp
mov
popf
adc
fdivs
je
scas
cmp
lods
xchg
iret
jnp
loop
insl
scas
mov
push
scas
cltd
std
ret
cld
ljmp
bound
pop
shll
fsubrl
sub
outsb
adc
mov
ret
jb
fstps
mov
jg
mov
push
fcoms
push
pop
lea
sub
mov
movsb
incl
mov
push
ss
mov
push
xor
aaa
cld
jnp
pop
bound
mov
sbb
pop
arpl
gs
add
cmp
in
add
and
outsb
lcall
jl
imul
pop
mov
sub
mov
jne
and
xlat
test
out
ret
or
dec
xor
xchg
push
pop
stos
mov
int
sub
mov
mov
cld
mov
rolb
out
loope
mov
adcb
movb
in
sub
leave
jnp
jnp
jecxz
aad
scas
pop
lahf
fcompl
xor
imul
jp
pop
add
scas
jnp
je
mov
test
jo
sbb
add
out
mov
imul
fildll
adc
push
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
jmp
mov
and
setns
dec
dec
cs
dec
xchg
ja
pop
mov
dec
dec
push
mov
imul
repz
mov
mov
aas
js
je
lret
cwtl
movsb
sbb
or
pop
lea
adc
sub
cmc
bound
xor
cli
fidivl
sti
xor
lcall
pop
push
mov
push
xchg
icebp
aad
arpl
or
test
mov
sbb
out
adc
bswap
xchg
scas
mov
js
scas
adcl
arpl
inc
pusha
mov
inc
aad
sbb
push
movsb
lock
add
adc
push
sub
mov
icebp
mov
test
pop
inc
push
sar
icebp
push
cwtl
sbb
add
jge
mov
mov
lcall
fsubr
fscale
xlat
jg
fisubrs
push
jmp
es
xchg
leave
cld
push
lods
into
fs
xlat
jnp
testb
or
xor
fnstsw
cmp
dec
cmp
or
push
push
imul
into
or
int3
xchg
es
cli
cmp
and
push
sub
repnz
xchg
mov
sbb
in
outsb
sbbb
cltd
popf
push
stc
testl
adc
sbb
xor
mov
jge
pop
mov
jne
sbbl
add
shll
or
repz
xchg
xor
arpl
inc
pop
iret
or
sub
mov
repz
mov
sti
adc
dec
insb
popf
repz
stos
aad
ja
ror
rclb
cld
xor
aaa
dec
pushf
sub
pop
mov
adcl
jne
mov
add
add
adc
adc
pushf
mov
jnp
add
test
mov
push
mov
add
int3
mov
loopne
cmp
dec
imul
std
sub
loopne
or
mov
fucomi
inc
repz
or
hlt
sbb
lds
lret
xchg
cmpsb
lods
mov
lds
xor
mov
ret
dec
test
xchg
cmpsb
dec
cmp
inc
mov
fisttpl
jne
inc
ffree
mov
in
push
push
out
rcrb
cs
stos
ret
out
jp
ja
dec
push
add
sbb
arpl
sbb
loop
rclb
xchg
dec
dec
ret
sub
or
inc
mov
sub
cmp
mov
mov
pop
adc
jg
les
inc
rolb
mov
test
push
adc
sub
arpl
mov
add
push
add
aas
test
dec
aam
movsb
xor
push
enter
jae
mov
xchg
lock
jmp
mov
xchg
leave
daa
and
xor
cmpsl
dec
adc
lods
push
jnp
push
stc
pop
insl
mov
ret
clc
or
adc
repz
xor
mov
lods
in
cmc
or
mov
mov
ja
inc
mov
and
push
jle
test
and
push
dec
je
lcallw
incl
add
and
fidivrs
mov
lods
xchg
clc
or
test
aam
cmp
sbb
lea
or
movsb
into
ljmp
mov
push
pop
cmp
sbb
fadd
pop
sti
pusha
pop
cmpsl
or
adc
or
pop
and
mov
adc
les
sub
popf
lret
and
es
movsl
dec
bound
rcll
mov
xchg
mov
mov
jecxz
push
out
fidivl
cmpsb
or
mov
fidivl
arpl
adcb
lret
je
and
pop
hlt
fldl
rolb
dec
insl
pop
stos
cld
dec
mov
mov
sbb
add
loop
mov
lret
and
fistl
adc
popf
push
imul
dec
jno
mov
inc
imul
cmp
dec
lret
mov
pop
cmp
lods
cmpsl
xor
pop
outsb
lods
add
xor
lods
lahf
int3
xchg
pop
or
fadds
jmp
lea
aad
sub
sub
push
mov
dec
mov
xchg
sub
mov
ficoml
testb
dec
ret
fwait
pop
dec
adc
arpl
xorl
shrb
xlat
movsb
into
enter
data16
adc
mov
testb
sub
aas
push
cwtl
andb
movsb
outsl
xor
outsb
std
jns
mov
jne
and
imul
adc
pop
mov
sub
jae
lcall
or
mov
out
xchg
pop
jge
pop
pop
fstpl
add
mov
inc
add
aad
enter
ss
call
jmp
sub
mov
out
pop
sbbb
push
mov
fwait
lret
mov
pop
movsb
sbb
sbb
fisubl
mov
mov
cmp
jne
test
sub
cli
shlb
dec
sub
xor
loopne
xchg
add
inc
ficomps
push
cltd
or
roll
filds
shr
loopne
and
or
jmp
je
pop
popa
inc
outsl
test
adc
leave
pop
dec
and
mov
mov
sbb
xchg
outsb
cmpsl
ret
xor
and
mov
dec
cmp
in
ljmp
aad
in
dec
leave
sub
lods
int3
test
pop
push
outsb
icebp
std
push
xchg
cmc
mov
icebp
sub
sbb
js
data16
data16
or
shr
cmp
push
mov
ja
and
insb
je
sub
sub
mov
jge
add
xor
enter
mulb
push
push
mov
sbb
push
xor
cmpsb
fcompl
xor
out
roll
mov
ja
jge
dec
jbe
xor
sarb
cmp
shll
mov
out
hlt
cmp
lret
sub
lea
loopne
inc
dec
cmp
iret
lods
or
scas
iret
xlat
sub
ds
addr16
jp
jb
repnz
push
loop
fwait
inc
dec
add
out
jge
sub
in
pop
cmp
mov
lds
jo
fidivl
aaa
mov
pop
imul
loopne
dec
dec
mov
in
sbb
jp
add
jno
std
in
in
stos
sub
mov
and
xchg
or
loopne
dec
setnp
mov
xor
ds
and
iret
dec
pusha
ret
mov
xor
adc
and
insl
and
push
sbb
sbb
mov
jb
test
test
xchg
push
cmpsl
jp
sbb
add
inc
add
cmc
sbb
jge
mov
mov
or
add
jge
xchg
repz
inc
jne
or
js
add
mov
and
mov
mov
cli
rorb
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
jmp
ret
fwait
mov
and
cmpsb
fwait
mov
ja
mov
int3
jns
and
mov
inc
mov
aaa
nop
jp
jecxz
xor
adc
scas
dec
push
push
enter
cld
xor
jae
loopne
dec
rclb
icebp
filds
pop
sbb
mov
add
or
push
sbb
mov
lods
and
xchg
mov
jbe
int3
scas
add
add
jecxz
cmc
and
mov
dec
add
xor
dec
sub
test
test
mov
pushf
add
add
scas
sub
push
ljmp
xor
shll
scas
mov
cmpsl
jecxz
xchg
or
push
jae
pop
xchg
in
mov
push
push
inc
xchg
into
mov
jg
lret
and
cmp
repnz
sub
fs
dec
loopne
scas
mov
mov
cmpsl
out
lods
into
cmp
jle
test
jbe
into
sbb
xor
cli
sbb
call
adc
aad
jae
mov
xchg
pop
and
cmpsl
jno
and
hlt
mov
andl
in
inc
mov
jecxz
cmc
fstps
vpminsw
scas
inc
or
or
icebp
sahf
out
adc
dec
jmp
adc
dec
inc
sbb
shlb
jns
jge
gs
outsl
outsb
jecxz
stos
lret
xchg
aaa
mov
add
rcr
iret
add
outsl
mov
fidivrs
or
lret
inc
outsb
aaa
lds
ljmp
xchg
mov
es
dec
and
movsl
or
xchg
popf
nop
mov
and
imul
push
mov
aaa
xor
minps
inc
inc
and
repz
dec
adc
aam
sbb
insl
pop
sub
and
jo
sbb
shlb
inc
aaa
sbb
or
fucomp
subb
mov
and
push
stos
jb
jl
das
fsubrl
dec
xor
iret
out
lret
sbb
pop
push
cs
jg
jo
dec
xchg
daa
xorb
xchg
dec
pop
inc
in
mov
movsb
mov
xchg
ltr
adc
mov
cmpsb
dec
pop
cmpsb
xor
out
stc
add
or
adc
idivl
pop
xchg
or
jle
inc
imul
mov
jno
jns
imulb
cmp
mov
loopne
jl
cmp
xchg
cli
lahf
je
pop
ret
lock
insb
dec
push
fsqrt
mov
cmc
shl
cs
loopne
imul
push
push
jbe
test
dec
jno
push
lock
xchg
outsb
imull
jp
mov
lret
push
jp
loopne
mov
ja
jl
sub
sbbl
inc
or
adc
sahf
movsl
jno
or
repz
lods
setae
int
mov
loopne
mov
pushf
inc
or
add
sbb
fmuls
push
dec
lock
aas
and
in
mov
push
repz
lea
push
mov
dec
mov
hlt
mov
jp
or
sarl
jle
das
push
cmpsb
ja
xor
add
aam
sti
push
inc
add
lcall
xchg
aam
test
mov
das
and
inc
popa
jl
pop
mov
sarb
cli
sub
jne
sbb
dec
mov
dec
mov
int
clc
test
mov
cmp
hlt
fcomps
pop
push
enter
shrb
out
ds
sub
inc
mov
jno
push
mov
mov
mov
jge
dec
jl
jle
lods
lcall
lea
test
imul
xchg
out
inc
mov
xchg
pop
sarb
xlat
pop
ret
push
ret
fwait
into
jg
dec
enter
incl
cmp
xchg
subl
xchg
stos
out
mov
xor
pop
mov
adc
int3
scas
sbb
enter
out
addl
imul
mov
cld
mov
iret
push
push
cltd
cmp
sub
pop
int3
nop
mov
inc
inc
movsl
scas
lret
rolb
loope
mov
cmp
cmp
popf
xlat
jmp
mov
dec
imul
xchg
pop
or
arpl
or
adc
adc
insb
lcall
dec
into
int
mov
lock
push
inc
sub
adc
add
scas
in
pop
and
ss
testb
adc
outsl
pop
lds
dec
and
test
and
cmp
pop
repz
cmp
push
and
addr16
mov
xchg
imul
out
mov
pop
call
mov
orl
ds
adc
xchg
movsl
mov
stos
adc
ds
lods
cmc
fisttpll
test
cmp
mov
or
hlt
call
imul
vpsllq
mov
repnz
xchg
test
pop
jnp
mov
mov
pushf
adc
mov
push
das
sub
push
mov
jae
or
aaa
test
dec
mov
sub
cmp
cmp
add
push
incl
inc
push
test
push
mov
mov
sahf
add
lcall
add
mov
test
adc
in
outsl
daa
outsl
push
push
fwait
sbb
jbe
fwait
lods
xchg
in
rcl
xlat
mov
sti
pop
push
jno
fwait
test
jg
xchg
test
adc
les
jge
mov
stos
mov
out
dec
dec
testl
imul
adc
je
inc
dec
imul
in
cmc
dec
lods
pop
dec
push
daa
sbbb
int
imul
fcmove
pop
fcompl
test
sub
mov
pop
mov
mov
rclb
mov
cmc
jno
imul
sbb
fisubl
outsb
out
sti
icebp
mov
lods
xlat
fmull
jmp
ret
mov
cli
dec
addr16
sbb
push
jae
xchg
xor
mov
rcrb
sarl
adc
aad
imul
sbb
ret
mov
push
test
inc
inc
repz
popa
ret
jno
pop
les
sbb
jns
call
push
mov
mov
sbb
mov
testb
div
lcall
cwtl
dec
xchg
add
shlb
mov
out
xchg
mov
call
mov
call
rcl
sub
out
fs
cmp
pop
lret
inc
testl
sbb
in
dec
outsl
cmp
sbb
inc
into
inc
pop
mov
push
lock
in
push
dec
sbbb
cld
sbb
xor
jo
shlb
mov
mov
add
xchg
mov
out
pop
xor
push
mov
inc
jle
cmc
dec
cvtps2pd
roll
fstpt
rorl
mov
jmp
aam
inc
test
addr16
add
movl
wbinvd
push
in
mov
stos
jns
roll
lods
daa
xchg
dec
pop
jo
jecxz
imul
pop
pop
mov
mov
mov
lds
pop
pushf
lock
cmp
fldenv
std
lea
sub
mov
jle
shrl
icebp
xchg
cmp
scas
and
push
orl
sahf
test
push
adc
cmp
or
into
and
leave
add
mov
lret
out
in
lock
lcall
sub
mov
mov
dec
cmp
xor
push
int3
sahf
cmpsl
xchg
jmp
idivb
push
test
mov
orl
rcrb
loop
insb
int
inc
add
xchg
sub
loopw,pn
pop
dec
sahf
jmp
movsl
push
pop
mull
cmp
cwtl
outsb
outsl
xchg
jnp
mov
inc
in
movsl
inc
inc
test
ss
int
xchg
out
pop
sub
xchg
enter
subl
inc
adc
movsb
jmp
jp
ja
orb
jle
or
mov
jns
ficompl
je
ret
test
data16
dec
jmp
icebp
add
push
mov
pop
stc
lods
out
rcrl
add
push
rorb
bswap
add
test
imull
sub
dec
repnz
scas
fst
dec
mov
xchg
add
repnz
jno
orb
cmc
ret
cmp
js
fisttpll
push
mov
jb
stos
jecxz
pop
clc
out
xchg
sub
sub
enter
dec
out
mov
ds
addl
sub
rorb
and
push
rclb
stos
mov
xchg
pushl
cmp
add
test
into
adcl
inc
sub
nop
xor
cmp
mov
imul
loope
sbb
and
aam
dec
dec
aas
push
fcomps
cltd
pop
mov
pop
outsl
mov
add
arpl
int
js
fcomps
dec
inc
xchg
xor
ljmp
insb
repnz
fsubl
pop
addl
add
ret
imul
cli
cmp
popa
adc
push
adc
mulb
ja
push
aas
mov
xchg
jg
loop
addl
sarl
push
xlat
sub
or
cmp
out
and
xor
cltd
outsl
dec
decb
xchg
pop
sbb
loop
push
inc
pushf
push
sbb
and
jg
repnz
movsl
push
push
xchg
clc
fcomps
outsb
cli
mov
ds
clc
dec
mov
out
shll
lods
push
and
stos
lcall
repnz
int
loope
inc
pushf
cld
push
scas
ffreep
hlt
lea
xchg
push
ret
pop
jge
mov
mov
adc
bound
xchg
xchg
dec
push
mov
push
aaa
stc
repz
pop
dec
in
mov
insl
cmp
in
mov
sbbb
xchg
sbb
fidivrs
jnp
sub
fsubrs
loop
jge
cld
sti
add
mov
sub
mov
push
and
sbb
xchg
and
cmp
jno
or
mov
lock
in
es
orb
pop
cmp
hlt
lcall
mov
xor
xor
jg
dec
js
in
cmc
xlat
pusha
sbb
mov
les
and
sbb
setno
and
in
jmp
cmp
hlt
pop
repnz
add
xchg
xor
mov
jo
inc
xor
out
jo
push
cmpsl
stc
icebp
add
lahf
inc
jns
cltd
adc
mov
mov
in
ficompl
xor
cmp
jg
mov
sti
lods
jecxz
scas
mov
out
jnp
in
xchg
arpl
push
fs
dec
addr16
xchg
out
or
xchg
or
inc
push
in
es
pop
mov
adc
jo
push
orb
movsl
es
adc
mov
ja
sub
aas
push
je
dec
addr16
shrb
into
xchg
addr16
ja
js
xchg
and
jae
xchg
push
stos
dec
mov
rcrl
movsb
test
mov
sbb
mov
in
dec
mov
out
mov
fiaddl
xor
jl
call
aaa
inc
and
pop
add
adc
adc
mov
pop
ret
mov
push
adc
adc
rorb
jl
stos
push
jecxz
mov
aam
cmc
lods
sbb
cmp
in
je
inc
insb
js
mov
out
outsb
mov
push
cltd
je
adc
xor
mov
bound
imul
sbb
imul
jle
add
fwait
aas
stos
std
icebp
lods
outsb
pop
ja
je
sbb
sbb
jae
push
or
jecxz
and
cwtl
cwtl
outsb
dec
push
mov
movsb
jmp
fwait
and
pop
test
xchg
xlat
add
fbstp
push
xlat
adc
push
lock
nop
add
mov
xor
mov
leave
inc
jb
pushf
ljmp
in
xchg
imul
movsb
rorb
xchg
xchg
outsb
mov
out
roll
mov
out
popa
clc
scas
lods
out
inc
imulb
pop
or
sti
or
xor
sub
dec
sub
inc
js
inc
xor
adcb
mov
sbb
movb
dec
sub
dec
idiv
push
imul
push
or
cmc
lds
fcom
and
sti
push
imul
shll
and
pop
xchg
and
xchg
fildll
ljmp
into
mov
cmp
test
xor
inc
sub
aas
sbb
add
cltd
jecxz
inc
int3
jmp
loope
or
pop
aam
sub
ja
fcompl
jne
mov
in
push
add
out
dec
add
notl
leave
sub
leave
push
gs
dec
mov
push
jb
loop
and
roll
push
jnp
inc
add
push
pop
adc
rcll
xor
pop
xchg
adc
jns
jp
and
or
mov
lods
jbe
push
divb
test
mov
in
rol
adc
dec
jns
or
loope
cli
dec
cmp
arpl
cmpsb
mov
xchg
imul
outsb
lret
aam
adc
jl
imul
fwait
popf
pop
cmp
jge
inc
stc
or
adc
divb
mov
sti
mov
in
bound
repnz
mov
ss
sub
gs
add
inc
cmp
repz
xchg
test
xchg
ret
fsubr
negb
or
andb
ss
cltd
dec
xlat
fildll
push
repz
test
dec
shr
push
insb
jle
out
imul
mov
push
push
lret
xchg
rcrb
mov
dec
shlb
shl
sub
pop
pop
push
dec
mov
outsb
sbb
mov
adc
pop
push
popf
iret
jne
sbb
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
jmp
adc
cmp
ret
aam
mov
pop
ja
out
mov
xchg
mov
adc
pusha
inc
adc
push
or
int
dec
sarl
gs
xor
lcall
add
outsl
jle
fildll
push
test
popf
cmp
iret
mov
imul
mov
aam
sub
je
dec
add
mov
ja
xor
push
mov
dec
xchg
sbb
and
inc
popa
shrl
mov
daa
pop
jl
jns
push
xchg
sub
add
mov
adc
jb
popa
es
aad
mov
adc
pushf
push
fcmovnu
and
push
inc
pop
fs
jmp
ljmp
daa
leave
mov
popf
divl
movb
push
data16
mov
cmpsl
push
cmp
xlat
jae
pop
scas
or
fdivrl
push
jge
or
mov
hlt
mov
pop
or
nop
nop
in
aas
movsb
ds
push
jg
pop
lahf
jns
sbb
pop
xor
mov
pushf
loop
cld
jno
cltd
stos
sbb
call
xor
cmpsb
mov
dec
out
repz
aas
jae
cs
es
cmpsl
mov
jns
pop
sbb
lea
loope
cmp
mov
and
lar
push
xchg
xchg
lea
or
fs
popa
mov
or
sbb
dec
clc
adc
fdivrs
inc
js
inc
cmp
fsub
dec
in
dec
pop
leave
jmp
adc
lret
fistpl
push
add
pop
movsb
dec
int
sub
and
jle
mov
inc
aaa
adc
shrl
jmp
jbe
dec
das
lock
cltd
scas
call
adc
pop
cmp
fcompl
scas
cld
test
dec
clc
pop
ja
adc
sbb
stos
mov
push
sub
fs
loopne
inc
sub
inc
xchg
jo
jge
mov
je
inc
inc
out
in
aam
iret
inc
cltd
mov
add
mov
test
addr16
lahf
rorb
in
sbb
pop
cmp
jmp
adc
adc
cli
dec
scas
stos
cld
mov
cmp
pop
das
hlt
mov
add
inc
pop
cld
jle
and
arpl
les
push
nop
lock
inc
aad
adc
pop
fimuls
jnp
sub
mov
push
iret
sbb
shlb
mov
adc
push
in
pop
xchg
popf
dec
sub
imul
pop
push
push
mov
cmp
dec
inc
fsubl
mov
fwait
insl
or
lret
arpl
dec
jbe
xchg
dec
mov
cld
mov
sbb
in
sbb
cmp
mov
jno
sub
mov
mov
mov
leave
js
sbb
shll
push
sub
mov
aam
test
xor
inc
cmpb
inc
mov
inc
jle
sub
push
xor
test
movsl
clc
out
mov
pop
pop
mov
ss
pushf
mov
add
addr16
add
jne
jne
lods
mov
lcall
inc
mov
mov
imul
ja
push
or
jmp
fmull
xor
outsb
movsl
mov
es
and
insl
cmp
mov
or
loopne
jns
sub
ret
jmp
dec
std
data16
scas
push
idivb
inc
arpl
aad
jbe
and
testl
popf
cmc
dec
mov
bound
xor
push
push
sti
insb
divl
lock
lea
cwtl
push
adc
repz
js
mov
push
insb
xchg
imul
data16
jbe
push
inc
lds
add
dec
mov
adc
fdiv
loopne
fdivrs
mov
mov
xor
mov
stc
popf
sub
push
pop
outsb
inc
or
inc
outsb
xchg
outsl
inc
mov
xchg
inc
sbbl
mov
sub
push
scas
fcompl
mov
loopne
xchg
mov
hlt
add
popfw
in
scas
lret
out
movsl
aad
or
xor
mov
aaa
movsb
popf
stc
repnz
mov
loopne
dec
and
psrlq
mov
or
dec
test
bswap
and
sbb
stos
sbb
js
movsl
stc
in
pop
xchg
mov
test
or
das
clc
stos
sub
loop
lret
push
negl
sub
xor
push
aam
addr16
fbld
add
lock
scas
imul
sub
dec
jmp
pop
out
inc
jb
jge
dec
dec
xor
push
xchg
into
xchg
bound
mov
movsb
push
js
lea
pushf
sub
ret
push
repnz
ror
sbb
inc
ret
adc
clc
add
dec
add
dec
je
rcl
aam
or
push
es
and
cmc
mov
cmc
fwait
in
sbb
mov
and
add
sbb
xor
hlt
outsb
nopl
fs
insb
sbb
pop
adc
in
popf
je
and
call
cmp
mov
popf
addl
not
jge
addl
and
cld
je
jae
fbld
addl
xor
mov
rclb
insb
or
repnz
js
movsb
stos
and
push
cmp
push
ret
jnp
jne
pop
cmp
hlt
popa
sarl
xchg
loope
clc
popa
gs
pop
aas
mulb
jmp
sub
dec
cmp
mov
fsubrl
imul
dec
push
aas
push
inc
push
inc
icebp
cmp
dec
leave
outsb
sub
in
xchg
jne
mov
mov
pop
stos
ljmp
add
sbb
loope
arpl
mov
inc
insb
clc
shrb
jb
outsb
mov
mov
popa
dec
pop
in
inc
add
shrb
inc
je
mov
adcb
push
sahf
roll
adc
jbe
hlt
adc
xor
imul
sub
xor
ljmp
ja
hlt
inc
out
xor
jge
push
addr16
test
cmpsb
jle
pop
sbb
push
cmp
gs
loopne
xor
cmp
rcrb
xchg
pop
enter
inc
mov
jecxz
cmpsb
sub
pushf
mov
hlt
shl
jae
mov
dec
pushf
xlat
addr16
lds
or
xchg
aas
sbb
jmp
jbe
movups
mov
dec
mov
jne
fs
adc
aad
hlt
push
ja
jnp
repz
cwtl
cmpl
mov
lock
iret
lock
inc
cmp
and
arpl
iret
pushf
enter
jl
cmpsw
sbb
sar
and
js
movsl
sub
cld
xor
add
jno
rorb
cmp
insl
dec
out
mov
or
shrb
loope
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
jmp
sbb
and
sub
ret
dec
ja
mov
mov
js
jle
inc
jns
call
mov
ret
rcrl
leave
xchg
clc
jp
mov
adc
add
cmp
lock
loope
jne
or
jb
fwait
or
xchg
rcrb
scas
mov
inc
lods
mov
insl
jo
push
stos
and
loope
out
jno
ja
outsl
mov
test
push
lcall
dec
adc
mov
ja
inc
cmp
popa
jb
add
imul
xchg
fldl
pop
je
movsl
mov
mov
push
cmpsb
rclb
jmp
cmp
lods
jns
daa
mov
add
fchs
jns
in
mov
push
push
mov
arpl
dec
jg
and
xor
xchg
pop
mov
adc
flds
and
push
cli
pushf
movsl
push
cmp
aad
test
adc
daa
mov
out
imul
subl
lcall
popf
test
mov
xchg
dec
mov
loope
inc
shll
adcl
test
mov
in
xor
pop
sbb
xchg
dec
mov
fadd
ficoml
movsl
jo
xchg
movsb
int
leave
and
out
mov
add
call
and
and
stc
fsubr
sarl
mov
mov
push
fsubl
cmpsb
mov
cmp
or
pop
adc
xor
imulb
fdivr
xor
out
mov
or
xor
jo
dec
sar
iret
sub
xor
lret
sbb
jle
fwait
repnz
mov
cmp
fistps
pop
addr16
std
mov
icebp
call
out
pop
in
mov
movsb
das
pop
mov
loopne
pop
sahf
adc
dec
pop
leave
xor
adc
fdivrs
std
bound
daa
repz
lret
es
xchg
loop
int
mov
hlt
mov
push
pop
jl
xchg
jg
or
ds
inc
data16
add
cmp
in
out
mov
cmp
dec
and
dec
ret
shrl
movsb
cmp
mov
clc
scas
add
icebp
dec
mov
mov
adc
orb
clc
lds
call
mov
sub
in
cmp
lcall
cmpsl
scas
xor
popf
js
pop
jb
fisubrl
sub
insl
repz
leave
les
outsl
ds
iret
call
mov
jg
and
ret
mov
pop
and
push
ss
mov
push
pop
mov
mov
adc
shrb
hlt
jl
mov
lods
hlt
add
cld
out
ja
sbb
adc
inc
sbb
ret
ds
test
orl
cmpsl
and
pop
lret
inc
mov
pusha
push
lahf
and
orl
popf
call
jge
add
imul
cmp
sti
push
pop
dec
in
mov
pop
lcall
outsl
sbb
mov
stos
pop
inc
jbe
das
xchg
and
or
push
test
jae
cmc
ja
sub
cmp
xchg
add
roll
out
loopne
push
frstor
sub
push
aam
cld
loope
data16
or
inc
push
in
jno
jmp
bound
mov
rcrl
pop
mov
and
pop
in
push
out
mov
xorl
roll
mov
xor
xor
sub
sti
mov
in
cld
loopne
lcall
mov
popa
sub
inc
ds
rorl
dec
pop
ficomps
pop
sbb
jo
ljmp
call
lds
dec
std
mov
pop
push
push
xor
inc
arpl
mov
or
fcompl
stos
mov
or
test
xchg
mov
in
dec
hlt
dec
insb
shrl
cmpsl
ror
inc
push
pusha
dec
pushf
pop
mov
sbb
sahf
xor
push
ret
loop
mov
enter
dec
jp
xor
pop
inc
xorb
cmp
pop
pop
lret
cmp
xorb
sahf
lahf
lcall
pop
call
or
or
cmpsl
mov
add
cmp
sahf
jl
mov
jbe
call
pusha
into
nop
mov
mov
or
or
addr16
push
std
fisubrl
sub
push
pop
cmp
xor
xor
gs
or
inc
add
je
rcll
inc
int3
jb
jb
pop
outsl
mov
enter
rclb
inc
jnp
xor
sub
lods
and
aas
pop
mov
fistl
mov
and
pop
dec
inc
and
jmp
ret
push
dec
push
movl
sub
aaa
sbb
fucomp
and
push
cmp
xchg
jecxz
sbb
fwait
stc
outsl
sti
iret
jmp
subl
pop
push
push
in
aaa
lcall
xchg
push
scas
xor
out
test
out
js
mov
mov
push
movsb
sub
stos
cmp
push
and
mov
jecxz
in
bound
fisubl
pop
mov
dec
daa
lret
jp
gs
sbb
cmp
mov
enter
pop
cmp
jge
decl
jo
jae
push
or
outsb
into
xchg
es
daa
orb
xchg
xchg
out
dec
shlb
movsbl
pusha
cld
test
add
mov
sarb
sbb
loope
dec
stos
mov
sbb
cwtl
imul
inc
add
movsb
out
and
fsub
mov
sbb
fsts
mov
daa
mov
je
ja
adc
and
jnp
dec
sahf
cmp
inc
sub
popf
ret
addb
in
add
loope
inc
push
stc
push
pop
adc
insl
aaa
cmp
jae
sbb
inc
stos
in
sbb
add
sub
and
fldt
push
fistpll
xor
xchg
mov
and
mov
jmp
inc
cli
pop
in
lcall
add
lods
int3
sbb
jecxz
std
insb
cmc
scas
loopne
push
push
ja
xchg
ret
or
mov
and
stos
std
adc
mov
imul
addl
mov
and
int3
rolb
xchg
popf
push
xor
lock
xchg
jnp
sbb
outsl
imul
bound
lcall
xor
cmc
push
mov
mov
leave
loope
out
add
sbb
jp
inc
xchg
in
sarl
cmp
dec
cld
sbb
add
hlt
push
mov
leave
clc
dec
pop
insl
jno
jo
jg
sub
orb
andb
pop
mov
add
scas
mov
pop
xor
cli
aas
jp
stos
mov
test
outsb
ss
mov
gs
xor
sarl
dec
mov
in
rcrb
mov
mov
scas
das
adc
cmp
mov
or
inc
push
jecxz
enter
insb
mov
mov
imul
in
daa
jbe
fwait
stos
mov
andb
mov
mov
xor
shl
xor
mov
mov
mov
jmp
sti
test
sbbl
rcll
aas
ja
pop
xor
mov
xor
aad
fcmovu
mov
das
mov
sbb
outsl
lcall
leave
push
add
mov
lcall
sub
pop
fcompl
cs
movsl
push
xorb
mov
dec
mov
fs
push
das
cmp
cmpsb
rclb
push
out
xchg
nop
mov
dec
xchg
cmp
ror
sarl
inc
adc
sub
lock
dec
adc
in
movsb
mov
and
pop
mov
hlt
inc
cmp
mov
cmc
leave
lret
in
mov
mov
xchg
mov
repz
mov
cmpsb
jb
out
push
jo
clc
loop
bound
xchg
push
sub
rcrl
icebp
jg
test
nop
in
mov
mov
lahf
or
jle
loope,pn
mov
gs
xchg
iret
sub
fs
rcrb
sbb
das
pop
pop
push
mov
outsb
in
leave
push
shrb
loop
dec
xchg
sub
or
enter
pop
in
xchg
lods
or
or
mov
xor
cltd
aam
filds
push
je
call
lods
rcl
and
dec
faddp
ficoml
adc
cmp
orl
add
rclb
stos
pop
gs
stos
ret
sahf
jbe
popf
xor
xor
in
stc
mov
pop
pop
inc
aas
adc
jmp
mov
in
nop
push
mov
push
jl
lret
fiadds
aas
dec
pop
sub
arpl
adc
pop
and
push
int
mov
lods
cmpsb
in
mov
fidivrs
test
outsb
push
sbb
ja
xlat
adc
jge
dec
ret
clc
pop
add
add
pop
mov
jecxz
sub
call
in
and
ljmp
je
loop
adc
out
mov
xor
push
out
mov
scas
pop
test
sub
hlt
or
xor
fnstenv
cmp
push
mov
pop
movsb
rol
pop
fwait
test
hlt
inc
fstpl
cld
scas
aad
add
adc
sub
pop
jecxz
inc
jl
xchg
stos
daa
push
push
mov
setbe
aam
imul
add
xchg
inc
cmp
daa
iret
sbb
or
xchg
clc
jge
test
shr
sar
cmp
pop
imul
out
dec
daa
or
or
and
add
sub
rcrb
xchg
sbb
cmc
je
std
int3
push
mov
mov
sub
sbb
cwtl
xchg
sbb
jle
mov
push
pop
inc
out
shlb
push
add
pop
push
int
cld
lds
clc
adc
dec
adc
dec
xor
int3
push
adc
lds
cwtl
add
test
int
es
push
mov
imul
mov
or
nop
sti
mov
jg
jnp
ljmp
mov
jg
sub
sbb
fs
dec
inc
sti
clc
mov
sbb
fs
cmp
sbb
lods
cs
cli
dec
xchg
cmpsb
sbb
xor
psubd
sbb
fistpll
mov
lods
adc
mov
pop
aas
pop
sub
mov
data16
jge
ljmp
cwtl
cmc
fstp
push
pusha
fs
jo
mov
mov
or
loopne
adc
mov
dec
push
adc
stos
sbb
and
sbb
std
lahf
mov
outsb
mov
adc
dec
pop
xor
call
mov
lds
rolb
mov
pop
ljmp
dec
mov
xor
lret
add
mov
sbb
pusha
stos
cld
jno
jle
mov
adc
mov
lcall
mov
add
int
das
out
pop
repz
insl
push
adc
inc
int3
add
outsb
cmp
xor
lcall
stc
sbb
sbb
pop
or
sub
out
push
mov
pop
add
mov
mov
clc
imul
stos
or
stc
lock
dec
dec
mul
push
xor
mov
outsl
cmpsl
sahf
scas
stc
cltd
nop
xchg
push
mov
loop
inc
cmpsb
push
sbb
jp
mov
lods
inc
inc
pop
adc
pop
mov
add
cmpsl
inc
sub
cmp
sbb
add
lret
and
outsb
inc
dec
das
and
iret
xchg
test
xor
aad
add
ret
mov
lods
xlat
or
pop
pop
mov
sbb
in
lcall
mov
pop
pop
xchg
mov
shll
jmp
jle
testl
xchg
jmp
push
cmpsl
sub
shl
sub
cmp
jb
int
inc
push
in
adc
adc
xchg
andb
sbb
loope
xor
jp
ja
ficompl
dec
movl
push
pop
pop
lock
insb
sbb
cmp
test
popf
fucom
inc
or
ja
cld
cwtl
dec
mov
mov
mov
bound
mov
adc
jle
cs
inc
and
out
mov
imul
xor
lock
xor
dec
test
mov
xchg
not
dec
push
mov
pop
out
cmpl
jmp
hlt
fistpl
mov
push
mov
icebp
lcall
pop
int3
push
lock
loope
fldcw
call
push
cmc
into
fadd
mov
or
cmp
jns
pop
inc
movsb
pop
inc
or
or
mov
push
in
mov
cli
inc
mov
or
inc
roll
mov
lds
out
aam
push
cmp
pop
out
sbb
bound
aad
dec
out
inc
xchg
daa
sbb
mov
loope
cmp
and
jb
push
sbb
pop
and
pop
xlat
dec
mov
ljmp
das
lahf
mov
cltd
fmull
negl
out
ret
mov
xor
xchg
js
xchg
xchg
or
leave
or
push
movsb
sbb
cmp
cmovns
mov
test
xor
repnz
xchg
pusha
test
cltd
arpl
mov
shrl
fwait
lcall
data16
sbb
rol
mov
mov
test
idivl
stc
call
sbb
mov
lcall
adc
mov
gs
adc
fs
pop
jno
lahf
push
enter
sub
xchg
neg
dec
in
loope
mov
js
jae
dec
cmp
fsubrs
inc
cvtps2pi
repz
loope
pop
push
roll
jle
dec
iret
xchg
subb
push
mov
iret
inc
push
fwait
int
cs
jge
sar
mov
int3
jno
adc
fcoms
shr
pusha
cmp
ret
push
sar
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
jmp
nop
loope
pop
dec
gs
int
xlat
sub
rorl
ja
and
mov
repz
idiv
jg
mov
and
lock
push
mov
fistpl
mov
dec
mov
clc
insl
bound
sti
nop
scas
jnp
add
pusha
test
mov
in
int
xchg
ficoml
pop
add
add
mov
imulb
aas
call
cmp
pop
hlt
in
adc
xchg
into
sub
cmp
or
xor
mov
das
mov
jl
add
inc
pop
inc
insl
xchg
and
scas
leave
arpl
imull
es
fnstenv
movsb
pop
ss
sbb
fisubrl
xchg
push
js
loopne
shr
push
xlat
xlat
push
xor
pop
icebp
cmp
adc
mov
cli
fistl
or
stc
movl
out
testb
mov
inc
mov
xor
out
out
add
pop
mov
xor
add
aad
dec
mov
add
mov
mov
ret
cmpsl
xor
das
push
test
aaa
pop
or
loop
movsl
mov
idiv
and
into
mov
test
imul
and
mov
push
insb
push
cmpsb
dec
incb
pop
mov
sbb
das
repz
outsl
mov
add
cmc
ficoml
sahf
add
test
loopne
pop
mov
adc
das
add
test
xchg
pop
minps
push
loop
je
ds
push
mov
xor
mov
loop
loope
or
add
inc
dec
dec
daa
dec
push
add
test
test
xchg
cmp
sbb
loop
jb
rorb
pop
or
push
movsl
pop
fistpll
repz
insl
fsts
shlb
pop
dec
mov
outsb
xchg
hlt
fsts
cmpb
cmp
push
mov
pop
sub
push
fdivr
shrl
cltd
leave
push
xor
out
fidivrl
dec
push
shrl
js
push
inc
sbb
sbb
push
test
inc
lods
mov
and
jmp
pop
ficompl
cwtl
call
ds
lcall
sub
and
lret
sub
xchg
daa
sbb
jne
outsb
cmpsl
cmpsl
int
lods
push
outsb
data16
pop
xor
popf
inc
lea
imul
call
mov
jmp
dec
stos
addr16
sbb
fstps
iret
lret
outsl
mov
in
fsts
sub
dec
out
and
pop
pcmpgtw
aad
aas
mov
cmc
cmp
in
aas
xor
xor
push
cmp
lret
movsb
adc
xchg
shll
and
popf
and
andl
outsb
jno
pop
stc
jb
movsb
imul
sahf
icebp
fisubl
inc
ss
dec
cmp
ljmp
mov
add
push
lret
int3
int3
je
mov
dec
push
es
test
dec
call
in
dec
out
cmp
lock
rol
jmp
jns
nop
clc
rorb
fbstp
jne
dec
les
int
or
or
test
mov
cmpsl
push
cld
lahf
jae
mov
and
push
out
mov
out
inc
aaa
fimuls
std
and
in
ds
cmp
or
xorb
int
fwait
pop
mov
mov
jne
jmp
dec
nop
fimuls
xor
mov
or
pop
sti
mov
leave
pop
subl
mov
mov
push
xchg
bswap
push
popf
in
lea
dec
stos
sarl
jmp
leave
mov
negb
cmp
rolb
mov
shrl
cli
add
push
lock
cmc
js
push
pop
imul
sub
sub
mov
test
jp
mov
pop
and
aas
mov
lret
mov
mov
loop
in
mov
and
divb
and
es
fildll
mov
sub
adc
std
or
push
ret
add
mov
push
loopne
and
out
pinsrw
insb
repz
xor
cmpsb
or
scas
mov
pop
push
test
outsl
mov
sbb
scas
in
aaa
or
cmp
adc
pop
lock
cmpsl
pop
dec
imul
mov
mov
pushf
fmuls
sahf
or
shrl
push
adc
sub
inc
out
sub
mov
fwait
mov
int
pop
hlt
cmp
mov
and
bound
dec
push
mov
cmp
mov
cmp
filds
and
cmp
and
insl
lahf
mov
jle
push
je
cmpsb
mov
sub
lea
clc
scas
sbb
or
push
in
cmp
shrl
mov
cmp
ja
lret
fnstenv
scas
cmc
pop
jl
dec
fs
jne
iret
test
sbb
mov
cmp
inc
push
mov
or
sti
push
imul
dec
xor
xor
mov
cmc
scas
inc
dec
popf
mov
mov
out
or
inc
iret
aad
dec
loope
loop
xor
cmp
aaa
push
xchg
adc
mov
cmpsl
mov
mov
addl
jg
cmc
fmuls
cmp
iret
lods
mov
xor
movsl
jns
pop
fstps
mov
insb
sub
mov
push
push
fdivrl
dec
push
gs
add
test
pop
fstpl
mov
cmpsb
cmp
shlb
out
ret
or
xorl
aaa
mov
nop
sti
jecxz
imul
popf
inc
or
cli
jmp
sub
cltd
pop
sbb
inc
mov
jmp
jmp
mov
out
outsl
add
push
pop
imul
and
xor
mov
lock
popa
push
pop
les
std
call
and
stc
into
fwait
cmp
xor
popf
and
xchg
lret
inc
cmp
clc
xorl
jecxz
iret
stos
aad
mov
pop
mov
pop
mov
mov
mov
mov
dec
sbb
hlt
lods
cmpb
ss
pop
add
jl
add
fsubrs
sbb
xor
out
and
lahf
pop
and
enter
pop
js
in
xchg
dec
mov
inc
pop
mov
adc
das
rcrl
outsb
test
mov
bound
icebp
mov
mov
out
cmp
int
insb
add
loopne
sar
mov
rclb
mov
imul
fidivl
pop
xchg
mov
jb
pop
aas
pop
push
cmp
punpckldq
dec
sub
push
sbbl
mov
in
xor
xlat
push
sbb
cmc
in
loopne
pop
clc
add
xchg
pop
std
pushf
sbb
ljmp
mov
pop
out
adc
lods
add
sub
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
dec
loope
lret
sbb
or
mov
adc
pfadd
je
sbb
je
dec
les
in
push
push
jno
jmp
jno
bound
cmpsb
jge
inc
xchg
pop
inc
outsl
dec
fsubrs
jge
hlt
cmp
xchg
mov
push
int3
mov
sbb
jbe
or
cmp
sbb
mov
adc
daa
add
notb
aaa
jge
jl
jge
adc
sti
mov
scas
pop
lods
enter
leave
push
ror
add
dec
cmp
sbb
mov
lret
push
cmp
in
das
addb
insb
rolb
jle
popf
push
mov
add
or
daa
adc
lret
push
cmpsl
cmp
xchg
insb
sub
es
mov
xchg
sbb
shlb
lds
mov
addl
xchg
ret
decl
push
cmp
imul
test
into
adc
mov
out
lahf
repnz
fsubrl
cmp
sarb
add
adc
mov
les
inc
dec
dec
push
pop
push
xor
cvtdq2ps
xor
test
inc
aas
sub
adc
mov
cmpsl
fcomps
insb
mov
cmp
fdivs
lcall
arpl
fadd
cmp
rol
sbb
add
pop
mov
xchg
and
loop
scas
imul
sbb
std
push
sbb
in
sub
jle
pop
arpl
sub
pop
pop
jp
js
test
in
sub
xchg
lcall
loopne
jecxz
cli
cmp
push
and
cld
pusha
ret
std
loope
cmp
adc
jnp
mov
mov
jl
lcall
gs
push
xchg
xchg
daa
mov
nop
cmc
adc
in
outsb
fmull
push
andl
cltd
add
dec
in
adc
dec
cmpsb
and
outsb
enter
cli
xor
jae
pop
adc
mov
sbb
dec
xchg
mov
mov
pmullw
push
mov
dec
ljmp
cmpsb
nop
adcb
mov
fists
out
mov
shlb
hlt
push
jnp
pop
pop
push
clc
shrb
xor
fcos
out
and
pop
xchg
push
xchg
add
dec
cltd
mov
addr16
push
adc
mov
aas
mov
out
mov
into
inc
insb
pop
jbe
sub
xchg
xchg
pop
xchg
mov
sti
lea
xor
ror
sub
fidivrs
push
loopnew
bextr
dec
xchg
mov
and
sbb
pop
adc
nop
stos
inc
fwait
sbb
and
les
adc
into
mov
test
loope
outsl
cmp
dec
sarb
dec
pop
pop
rcll
inc
pop
push
mov
xchg
cmp
aaa
imul
mov
rolb
sahf
aaa
shrb
pop
fxch
xor
xchg
adc
sbb
leave
jae
out
xchg
daa
mov
jp
cmp
push
repnz
adc
xchg
pop
push
test
adc
data16
push
sarb
mov
lods
xor
mov
xchg
loop
cmp
add
dec
ss
mov
or
addb
dec
inc
pop
je
arpl
std
stos
xchg
enter
mov
dec
in
xor
mov
mov
or
mov
cmp
dec
inc
xor
push
mov
xor
lret
mov
or
mov
dec
push
xor
dec
outsl
mov
sub
add
xchg
lret
pusha
sbb
sbbb
pop
xchg
mov
in
sbb
mov
or
cwtl
push
cmpsl
cwtl
out
scas
mov
insl
or
mov
int
and
testl
dec
mov
loop
cmp
cltd
xchg
insb
icebp
adc
xor
movsb
test
das
lock
enter
fsubs
sub
xchg
popf
fsubrs
stos
test
push
push
nop
lds
fwait
jl
lcall
and
daa
nop
mov
lds
xchg
add
cmp
mov
xor
lods
xchg
xchg
sub
fistps
dec
int
sbb
enter
dec
fsubrs
scas
stos
rolb
push
mov
push
es
jle
aas
into
hlt
fwait
inc
pusha
mov
outsb
xor
dec
dec
mov
adc
cmp
xchg
jo
fs
lahf
mov
je
scas
aam
xor
xchg
xchg
in
sub
sbb
mov
dec
pop
cmpb
dec
fwait
ret
mov
sub
test
es
or
and
clc
shrd
pop
test
mov
mov
test
xor
add
inc
push
and
cld
mov
xchg
sbb
push
jno
or
mov
dec
scas
dec
inc
xor
ficomps
inc
xor
push
fld
inc
mov
dec
fwait
mov
bound
mov
test
aad
fistps
ja
lods
dec
cmp
pop
pop
incl
push
mov
ret
sbb
in
inc
fwait
inc
aad
repz
xor
ret
pusha
dec
das
push
in
xor
jns
mov
sbb
mov
pop
cmp
pop
sbb
dec
int3
pop
adc
push
mov
das
or
mov
mov
enter
mov
std
out
ds
idivl
mov
std
sbb
fists
pusha
or
std
inc
data16
mov
andb
jns
ret
call
mov
add
into
inc
cli
mov
cld
fadds
inc
xor
fwait
loope
or
push
pop
repz
js
out
pop
mov
mov
fistl
xchg
or
adc
dec
lock
fisttpl
insb
cs
jecxz
mov
imul
lea
mov
adc
ret
jmp
push
sbb
xchg
inc
cld
andl
mov
inc
pop
jmp
cmp
dec
cmp
sub
arpl
adc
add
loopne
and
es
push
test
lods
fildl
sbb
xchg
and
mov
repnz
outsl
jnp
mov
lds
daa
push
rcr
jle
or
shlb
rcl
ja
or
sbb
mov
pop
dec
mov
sub
pop
test
or
dec
mov
mov
filds
mov
inc
and
dec
xor
push
cmpsl
jecxz
fcompl
sub
rol
sbb
mov
xchg
pop
push
sbb
sub
fisttps
insb
pop
cmpsb
outsl
xchg
push
mov
dec
xor
aaa
inc
inc
loopne
ljmp
push
popa
and
mov
and
sbb
add
push
insl
clc
add
shr
jg
icebp
cwtl
ljmp
add
bound
inc
test
cli
and
lods
jmp
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
jmp
cltd
push
in
sub
jno
loope
push
mov
add
mov
hlt
insl
cmp
mov
je
mov
ljmp
add
push
shrl
sbb
adc
popf
sbb
jbe,pt
cli
pop
fnsave
sbb
xchg
imul
jp
mov
push
fs
test
fucomip
arpl
push
dec
jl
cld
cld
mov
xorl
test
rclb
out
push
lret
cld
loope
and
mov
pusha
push
std
lahf
fldt
loopne
fidivrs
adc
xor
add
jns
push
cli
aas
outsb
popf
das
or
call
rolb
or
xor
jo
test
cmp
jb
pop
add
pop
mov
xor
test
inc
xor
xor
insb
sub
aad
xor
fisttpll
popa
daa
sub
clc
int3
in
push
imull
cmpsl
int3
jl
pop
pop
lods
and
inc
je
imul
cmp
and
mov
movsl
ja,pn
jmp
movsl
push
aaa
cltd
pop
sbb
mov
sub
fisubrl
or
ret
cmp
imul
mov
inc
xor
mov
aas
jne
int3
cmp
aam
movsb
mov
mov
js
aaa
push
mov
pusha
cmp
mov
mov
inc
sbb
dec
add
cmpsb
mov
cs
lahf
jle
data16
aam
sysret
push
cmp
jecxz
jmp
jb
sub
xor
test
ds
dec
test
mov
test
fiaddl
mov
mov
ret
and
pop
push
cmpsl
mov
out
movb
nop
push
imul
fdivl
pop
cltd
lret
enter
imul
mov
adc
es
jb
jl
fidivl
add
sbb
and
xor
or
inc
ja
rcll
adc
jae
mov
mov
mov
ds
jns
cld
iret
cmpsl
sub
popa
sub
pop
aaa
mov
add
into
jb
pop
mov
insb
and
in
add
adc
jae
es
test
imulb
mov
test
inc
jnp
mov
repnz
arpl
xchg
addr16
repnz
movsl
shll
repnz
jae
cs
shrb
dec
aam
or
dec
sub
das
dec
cmp
addb
mov
stos
arpl
sbb
cltd
push
mov
sbb
imul
and
pop
sub
outsb
sub
aaa
inc
xchg
xchg
and
mov
shr
mov
shl
push
test
pusha
insl
push
mov
adc
test
es
sub
xchg
std
ficoms
jno
sti
adc
movsl
dec
xor
push
dec
xchg
aaa
add
push
mov
icebp
dec
add
cltd
xor
test
sahf
xchg
mov
aad
and
movsb
scas
jns
or
mov
xor
into
xor
fbld
out
les
lock
and
pop
jle
les
fcom
cmp
out
filds
clc
add
cwtl
or
push
fldcw
push
mov
ds
fisubrs
fdivrl
in
or
les
lret
inc
jg
ror
push
in
loopne
movsl
sbb
pop
in
in
mov
pop
nop
and
icebp
mov
pop
adc
aaa
scas
sar
or
cmp
sbb
stos
clc
stc
xor
out
inc
iret
sub
jmp
pop
stc
dec
in
lds
jne
outsb
add
fidivrs
mov
push
es
out
inc
mov
divb
adc
adc
in
jmp
add
adc
leave
cmp
mov
pop
jbe
dec
sub
mov
cmc
mov
xchg
in
mov
cs
pop
sub
xchg
mov
xchg
push
xor
cmpsb
lods
jbe
mov
mov
clc
lea
sub
cli
test
sbb
xchg
jmp
cs
repnz
fimuls
cmp
test
push
cmp
pop
xor
out
loopne
pop
inc
cmp
out
out
push
push
orb
pop
mov
xor
and
adc
sub
enter
cmpsb
in
test
test
xchg
mov
sbb
repnz
fisttpll
xchg
add
jo
icebp
in
fnstsw
sbb
iret
scas
or
xchg
imulb
dec
push
mov
rol
jno
add
fwait
mov
or
scas
sbb
lret
mov
outsb
lahf
ret
or
mov
inc
cli
aaa
sbb
int3
pushf
mov
inc
cmp
nop
lret
and
cmp
cmp
rcll
es
mov
sub
jge
ret
mov
es
or
mov
xchg
lock
mov
stos
cltd
add
outsl
dec
mov
add
js
mov
add
add
mov
dec
cltd
adc
icebp
mov
pushf
push
aaa
or
lods
sahf
std
testl
in
cmp
aam
lret
gs
ss
test
sbb
and
push
int
stos
mov
xor
add
mov
add
rcll
insb
xlat
sbbl
test
mov
mov
add
jb
outsb
xchg
insl
cwtl
fiadds
enter
xchg
push
dec
loop
int
mov
dec
jl
test
fstpt
test
leave
inc
cwtl
subb
ret
scas
jae
ret
les
push
sbbb
or
sub
imul
dec
cmp
mov
out
push
ret
push
fsub
cmp
aaa
mov
mov
insb
push
outsb
and
in
add
push
and
add
add
jg
mov
add
pop
mov
test
sub
adc
dec
cs
push
out
stos
push
ficoml
fs
adc
fdivrs
push
bnd
push
mov
or
xor
inc
rcll
outsl
daa
and
popa
or
jg
jb
inc
fsubp
stos
or
cmovne
test
dec
in
scas
cmp
sub
jne
outsl
push
xor
scas
cmpl
dec
cmp
adc
fucomi
inc
and
inc
ficompl
mov
push
out
in
dec
imul
pop
lods
shrb
sbb
adc
adc
mov
pushf
jnp
int
mov
enter
repz
rcl
jae
aaa
pop
fstpl
jb
and
xor
jno
fcmovb
scas
jl
add
xor
int
test
ljmp
xchg
cmpsl
sub
inc
or
sub
jb
and
test
push
add
sbb
hlt
pop
inc
mov
mov
and
mov
out
std
dec
sub
sub
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
jmp
push
mov
adc
xchg
add
ja
lcall
pop
pop
pop
push
neg
lcall
stos
sbb
rcr
xchg
pop
sti
jmp
ljmp
lcall
jg
bound
in
sahf
cmc
mov
xchg
pusha
cmp
push
aam
jle
jnp
sbb
pusha
stos
xchg
and
or
xor
sbb
sahf
gs
jo
lods
rorb
push
add
fnstsw
cmpsb
cmpsl
mov
ja
and
add
stos
pop
rcrl
lods
xor
push
and
out
push
fsubrs
lret
out
aam
cmp
cli
sbb
push
add
cmp
jmp
and
mov
xchg
je
push
ljmp
cmpsl
pop
int3
repnz
add
xor
push
push
jle
insl
pop
push
sahf
popf
pop
sahf
jmp
ss
adc
bound
inc
sbb
aam
testl
stos
sbb
cmp
rol
mov
cmp
insl
fsubr
mov
inc
lret
cmp
dec
or
clc
insb
pop
daa
sub
aad
orl
cmp
xchg
popa
mov
lea
lods
stos
ret
dec
daa
cmpsl
pop
adc
push
js
xor
lock
add
adc
jge
xor
cmp
les
push
and
in
imul
out
pop
dec
aaa
mov
addb
mov
dec
sahf
sti
jge
and
rolb
fnsave
or
adc
fdivs
idivb
loope
mov
arpl
lahf
hlt
or
mov
mov
movb
xor
push
lock
notl
dec
push
aad
adc
and
cmc
dec
cmp
pop
jecxz
dec
ss
out
aad
mov
sbb
rcl
fildl
mov
xor
in
xchg
xchg
out
test
sub
xchg
sub
jmp
mov
sbb
into
faddl
out
lret
xchg
xlat
int
fs
or
adc
fbstp
mov
repnz
in
aaa
aam
lods
lret
cmpl
lret
out
pop
pop
pop
cwtl
and
mov
cltd
aaa
inc
cltd
pop
jmp
sub
lcall
fldt
or
adc
out
rcrl
sahf
lcall
movsb
addr16
mov
flds
sub
test
lea
jne
cmc
or
cli
pop
imul
push
push
imul
repz
add
ja
xchg
pushl
sbb
popf
psllq
dec
xchg
cmp
push
cmp
jmp
mov
cmp
hlt
xorl
gs
clc
jb
or
lock
add
mov
push
clc
mov
jbe
and
ja
js
popa
push
call
rcrb
lea
jb
sbb
adc
int
imul
pushf
aas
mov
adc
xchg
sbb
fbstp
inc
mov
clc
lret
pop
jb
ret
arpl
test
xor
iret
or
push
cmc
inc
inc
mov
std
cld
jbe
push
ljmp
sbb
sub
stos
sti
fidivrs
out
jl
adc
ret
lahf
jnp
daa
cmp
stc
lcall
xchg
xchg
sbb
mov
dec
jnp,pn
mov
inc
sti
fisttpll
imul
sbb
in
pop
and
or
xchg
xchg
cltd
sub
cmp
inc
fsubs
cld
push
out
push
mov
lods
sbb
divb
and
cmp
pushl
popf
mov
push
ds
aas
adc
das
xchg
jp
imul
sbb
gs
pop
cmpsb
and
cmp
cmpl
xor
jp
sub
ffree
xor
rorb
inc
mov
sbb
aam
outsb
pusha
adc
daa
pop
lret
or
test
xchg
or
lret
ja
ljmp
sub
mov
and
es
pop
xchg
fcmovnb
cld
fmull
sahf
outsb
push
jmp
xchg
jae
gs
or
lahf
mov
push
sbb
sahf
arpl
jmp
jle
and
mov
nop
pop
cmp
jbe
ret
dec
sub
jne
adc
cmp
pop
cs
je
inc
jns
inc
lea
mov
aam
add
sti
sbb
xchg
ret
ja
mov
sbb
lods
rorl
sarb
xor
sbb
leave
stc
js
imul
or
pop
pop
sbb
cmc
mov
push
shlb
adc
mov
mov
inc
pusha
add
neg
testl
stc
mov
cmp
movsb
fsubrs
data16
pop
dec
sbb
mov
mov
fldl
inc
in
addr16
test
imulb
mov
test
ss
pushf
mov
pop
mov
sbb
out
lahf
and
push
cmpsl
hlt
lods
dec
xor
cmp
adc
jae
adc
fidivs
jo
add
pop
sub
ds
out
scas
in
scas
data16
in
dec
add
rcl
push
jg
fwait
mov
dec
xchg
ret
in
jp
jp
dec
aas
outsl
add
push
shrl
mov
xchg
das
loope
shrl
jne
es
cmp
rclb
xchg
pushf
xor
add
outsl
adc
pusha
add
lahf
repnz
sub
lea
jb
lock
cwtl
cld
out
std
and
call
mov
sbb
rorb
jne
cmc
push
mov
add
inc
adc
nop
xchg
ret
popf
scas
int3
sbb
or
jle
fimull
cmp
adc
xchg
mov
sbb
sbb
popf
loopne
push
push
sbb
xchg
dec
fidivs
imul
loope
push
add
mov
mov
shr
cmc
push
pop
das
cmc
mov
out
sbb
sbb
push
loope
cmp
jp
loope
leave
jp
ficompl
mov
fldenv
repz
inc
mov
xor
cmp
mov
mov
mov
imulb
int
sbb
mov
mov
mov
hlt
pop
lahf
data16
shr
xchg
dec
imul
jl
mov
testb
out
arpl
loopne
sub
push
jns
sub
fwait
push
cs
pand
xchg
jne
in
push
in
icebp
and
iret
out
shrl
jmp
fcmovb
sub
aam
push
sub
pushf
mov
es
call
mov
jge
cmc
lahf
mov
jbe
xor
adc
mov
mov
sti
mov
leave
jmp
mov
lods
cmpsb
arpl
pop
add
addb
dec
in
daa
int3
add
dec
pushf
pop
sahf
jno
pusha
cwtl
push
xor
js
int
xor
mov
int
fimuls
mov
mov
stc
fstpl
jne
sti
shll
test
aas
mov
shr
pop
add
cmp
adc
mov
test
xchg
repz
xchg
pushf
popa
sub
xchg
lret
es
ret
in
push
fstpl
mov
out
xchg
or
cs
fcomps
inc
clc
ds
fiaddl
push
xchg
cmpsl
pop
dec
push
iret
mov
loope
gs
out
or
out
cmp
outsl
repz
adcb
jp
arpl
daa
sub
stc
sbb
cltd
int3
jo
stos
call
aas
cld
out
das
and
inc
xlat
push
pusha
mov
lret
add
clc
pop
mov
test
mov
push
repnz
push
jb
or
fildl
pop
data16
repz
pop
int
mov
jmp
mov
dec
or
lahf
jp
pushl
lock
stos
jo
ljmp
lds
sbb
subb
rorb
scas
test
cli
mov
fwait
insl
push
or
lea
mov
xor
cltd
jbe
dec
fisubs
cmpsl
mov
inc
loop
jl
shl
std
sub
std
add
dec
inc
loop
lea
shr
data16
xchg
daa
pop
aad
push
int3
mov
mov
jbe
popa
inc
jb
and
jb
push
jp
movsl
pop
jo
andb
shrl
lds
adc
xchg
xchg
sub
iret
fisubrs
in
std
xchg
mov
mov
enter
insb
outsb
mov
cmpsb
mov
and
jmp
pusha
sub
pop
out
xor
push
and
and
psubusw
cmpsl
sub
add
shrb
dec
and
rcr
fldt
xchg
dec
inc
es
jo
or
repnz
dec
sub
roll
cmp
in
fwait
insl
lcall
mov
xor
sbb
test
out
jb
ja
fdivl
mov
mov
movsb
test
pop
in
ljmp
shll
imul
pushf
cltd
sti
enter
fildl
call
scas
xchg
roll
rorl
pop
rcll
jle
jl
dec
jmp
mov
test
mov
mov
dec
fbld
lea
pop
pop
fwait
push
ficompl
sub
les
es
jns
or
cmp
test
popf
adcl
sub
mov
xor
adc
xchg
push
fldl2e
in
out
rorl
pop
xlat
push
lcall
andb
mov
adc
jae
or
dec
orl
dec
pop
stos
adc
stos
inc
lcall
xor
icebp
pop
pop
fistpll
rorb
dec
pop
repz
fwait
pop
mov
cmp
inc
mov
pop
out
mov
lret
mov
fcompl
rorl
sub
repnz
pop
adc
aad
aaa
push
movsb
mov
pop
lods
fistps
push
stc
ss
mov
xchg
pop
or
push
test
push
mov
sbb
pop
fstps
dec
fists
adc
repz
jp
dec
cwtl
xor
lods
adc
outsl
xchg
mov
call
ret
xchg
es
cmpsl
lods
addb
cmpsb
add
in
mov
mov
push
mov
xchg
or
hlt
push
arpl
gs
fwait
ja
mov
adc
into
cmp
adc
repnz
jp
std
insb
push
lock
out
aas
jg
push
mov
sub
add
xor
push
std
sub
cli
pop
cld
mov
jle
shl
dec
push
mov
mov
or
ret
mov
inc
xor
cmp
ja
cwtl
sbb
icebp
iret
sahf
nop
xchg
mov
in
sar
jae
push
imul
cmp
add
outsl
push
imul
ja
lcall
gs
push
stc
subb
sti
enter
inc
clc
popa
in
mov
xchg
mov
sub
insb
push
leave
mov
sbb
xchg
pop
ret
popf
inc
popa
inc
or
lret
mov
xchg
sub
mov
inc
cmp
or
es
xchg
lahf
mov
cmp
stc
insl
clc
les
call
push
cmp
or
nop
add
mov
sar
cmp
fs
or
dec
cld
mov
movsb
cwtl
aaa
rolb
jle
rclb
cltd
ret
and
int3
mov
pop
and
aaa
push
cmp
add
inc
lds
adc
adc
roll
mov
lahf
xor
mov
mov
jg
mov
dec
cmpsb
pop
mov
jns
in
mov
sub
push
xchg
mov
sub
pushf
cmp
dec
stos
dec
inc
adc
outsb
jne
lret
popf
fcmovu
push
dec
gs
and
add
fdivp
cmpsb
pop
jno
xor
push
dec
jne
mov
push
and
or
mov
pop
ret
xchg
sub
lahf
int3
and
push
out
or
int3
sti
sub
int
inc
mov
dec
shll
sub
cmp
and
mov
xor
clc
xchg
cmp
aad
orb
add
lods
insb
lcall
mov
xchg
fmuls
cs
scas
sub
inc
cmpsb
rcl
data16
addr16
ja
cmp
cwtl
rclb
add
lods
movaps
push
push
push
add
add
push
cmp
add
push
mov
test
xor
cmp
int3
in
enter
mov
pop
push
shll
les
pop
test
repnz
loop
pop
mov
push
jecxz
fldl
repz
int
inc
arpl
in
cmpsb
mov
loopne
xchg
into
and
or
movsb
push
inc
aas
dec
push
sub
sti
cld
pop
sbb
lret
loop
dec
test
add
jno
jb
sub
add
insb
jg
mov
xchg
add
sbb
frstor
xchg
add
mov
push
cmp
sbb
jo
add
dec
repz
xchg
filds
adc
push
fsubr
out
iret
xor
jmp
pusha
sub
jno
fdivl
push
out
jl
xor
shl
push
and
sub
test
cmp
push
cli
xchg
mov
or
xchg
jnp
fdivrs
fimull
es
shrl
fcoml
xor
fmulp
add
sub
inc
pop
xchg
loop
xchg
shl
pinsrw
xor
mov
call
stos
inc
dec
lret
call
scas
or
jns
xchg
adc
or
push
xchg
loopne
dec
gs
pop
les
push
negl
pop
lret
enter
fnstenv
push
jmp
push
nop
pop
add
outsl
pop
inc
mov
inc
popa
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
jmp
cmpsl
icebp
cmp
pop
dec
arpl
xor
adc
xchg
jno
and
andb
mov
mov
cs
xor
mov
sbb
outsl
fwait
and
test
gs
push
mov
jne
out
popl
hlt
adc
bound
mov
scas
mov
push
cmpsl
sbb
adc
dec
cmc
ds
sbb
and
mov
push
inc
cmc
pop
push
and
dec
insb
test
ret
push
xchg
setne
lcall
xchg
mov
shlb
sbb
mov
loope
lcall
xor
mov
leave
push
sbb
int3
and
into
cld
xchg
mov
jge
jmp
jle
les
mov
enter
xor
test
mov
ds
push
pusha
or
adc
xchg
idivl
test
inc
push
pusha
cmp
pop
xor
subl
iret
and
cmp
ljmp
push
repz
mov
in
jo
jge
ljmp
ret
std
push
xor
jnp
cmp
rcll
fwait
ja
xchg
test
clc
ljmp
cmp
pusha
cmpsl
test
lds
pop
repz
ss
lea
pop
add
aaa
and
dec
imul
or
jns
lea
sahf
je
scas
fs
xchg
adc
add
popa
iret
leave
scas
stos
cltd
das
cmovns
jns
shll
lods
ja
fidivrl
cwtl
inc
add
cmp
jle
clc
mov
ljmp
sbb
imul
mov
adcb
cwtl
mov
xchg
push
mov
adc
pop
or
in
outsb
xor
xor
inc
hlt
jg
mov
push
xchg
push
sbb
outsb
mov
lahf
push
dec
ss
lods
jbe
fdivrl
or
fs
shll
and
dec
mov
dec
jo
dec
sahf
cmp
outsl
xor
adc
fnstsw
jle
pop
adc
mov
pusha
mov
xchg
jl
mov
push
jbe
push
adc
shlb
in
or
cmp
sbb
mov
mov
cmp
push
jbe
cwtl
loop
or
sub
loop
icebp
pop
xchg
fsubs
xor
in
movsb
fldl
mov
adc
add
icebp
test
xlat
loop
push
xchg
cld
test
inc
fidivl
subb
subb
dec
cmp
xchg
popa
adc
loope
and
mov
mov
fisubrs
xor
and
das
fisttpll
pop
inc
or
das
mov
dec
adcl
mov
jmp
repnz
sbb
inc
mov
jb
aam
dec
push
jo
xchg
xlat
cmp
test
pop
sub
jns
and
mov
xor
and
daa
mov
cmovg
jmp
adc
mov
xor
cmpsb
and
int3
jnp
popa
mov
add
rcr
jae
and
cli
test
xchg
xlat
hlt
cwtl
mov
add
pop
sbb
lret
pusha
repz
pusha
xor
xor
mov
pop
pop
jle
test
adc
lds
and
dec
in
out
ror
shr
inc
push
aam
shll
push
sub
xchg
mov
mov
or
mov
notl
stc
aam
mov
dec
sub
mov
stos
daa
add
lcall
test
mov
out
dec
jno
loop
dec
mov
add
insl
ss
adc
and
sub
arpl
push
add
dec
lahf
and
mov
sub
out
mov
pushf
jne
ret
cmp
subl
je
mov
loopne
pop
sbb
sbb
jg
cmp
inc
pop
push
push
mov
or
sbb
addr16
add
xchg
mov
mov
and
test
cmp
cmc
sbb
add
int
jb
cmpsl
test
aam
int3
icebp
mov
fwait
bound
and
xor
adc
and
pop
dec
pop
push
fstpt
inc
mov
mov
loope
shl
movsb
push
test
sarl
push
inc
xor
mov
xchg
fucomip
inc
pop
sub
cmp
fsubs
add
jne
mov
ss
xchg
out
stos
decb
out
orb
popaw
adc
das
ret
loopne
je
loope
outsl
or
and
jb
ret
and
cmpsb
out
mov
xlat
jns
test
pop
mov
xchg
cmp
scas
mov
xor
cs
pop
mov
and
jae
mov
repnz
test
ret
jmp
mov
lahf
mov
mov
hlt
dec
adc
xchg
sub
je
push
lret
js
call
mov
pop
pop
popa
or
flds
out
les
movsl
stos
add
pop
sbb
flds
int3
movsl
cmp
in
mov
sub
and
add
adc
clc
outsb
lahf
push
push
das
popf
and
adc
and
jmp
imul
sbb
das
mov
repnz
bound
mov
pusha
mov
jne
les
dec
mov
xor
sub
xorl
addr16
mov
daa
sti
fists
xor
es
mov
sub
adc
jmp
insb
dec
xchg
data16
mov
es
fsub
aam
inc
and
jae
push
and
inc
mov
out
les
mov
iret
gs
jp
movsb
mov
std
sbb
adc
mov
mov
iret
insl
and
jecxz
mov
fmuls
inc
mov
sub
and
pop
scas
push
gs
cmp
stos
lods
cmp
sub
imul
inc
and
pusha
push
dec
sub
dec
fs
mov
cwtl
xor
in
rcll
daa
adc
in
mov
xor
test
sub
mov
int
cmp
int
and
pushf
sub
fsubp
xor
xor
add
add
sub
es
dec
adcb
mov
mov
pop
or
add
inc
in
cli
cmp
mov
mov
sub
or
push
pushf
out
xchg
scas
imul
shlb
cmpsb
cmp
faddl
jp
push
mov
lcall
inc
dec
dec
les
rclb
lret
es
dec
sub
adc
xor
mov
imul
jno
jo
or
push
out
pushf
pop
adc
pop
scas
out
frstor
add
dec
popf
stc
cmc
scas
leave
pop
lret
adc
ljmp
test
scas
push
dec
mov
arpl
ret
push
lock
adc
mov
psubq
shr
mov
ret
inc
cmp
push
add
fadds
add
ljmp
sub
out
xor
test
adc
xchg
sub
sbb
int
stos
stos
and
nop
test
pop
sub
popa
sbb
cwtl
insl
pop
in
test
inc
and
addr16
xchg
iret
adcb
xchg
je
push
pop
and
sub
adc
push
cltd
xlat
push
xchg
xor
sahf
sbb
lods
leave
dec
and
mov
xor
pop
and
pop
cmpsl
lods
test
stos
hlt
mov
in
std
pop
mov
ret
dec
in
sar
adc
pop
and
and
pop
xor
push
mov
cmpsl
and
cltd
cmp
cmp
fwait
mov
xchg
ret
loopne
sbb
fnstsw
pop
mov
push
pop
pop
repnz
sub
add
push
clc
lahf
inc
push
addr16
sbb
repnz
pop
lret
push
dec
inc
icebp
inc
adc
sti
sub
sbb
sub
cmp
in
nop
mov
xchg
xchg
adc
pop
in
jno
arpl
imul
cltd
jnp
dec
jmp
je
fdivl
lret
nop
lods
mov
je
loop
cmp
aad
add
shll
add
out
loope
fwait
mov
jecxz
fwait
inc
pop
leave
xchg
int
cwtl
xchg
fildll
pop
int
inc
mov
sbb
jae
jo
stos
sbb
inc
fcompl
xor
insl
fwait
jno
mov
sbb
lahf
in
xchg
rclb
mov
rol
dec
xchg
mov
mov
mov
jns
jle
inc
push
psrlq
aaa
lahf
jl
int3
jnp
push
loop
add
mov
stc
in
inc
pop
popa
dec
mov
xchg
lahf
shll
sub
shlb
and
xchg
jno
xor
and
dec
adc
mov
xor
sbb
mov
sub
repnz
js
add
push
adc
xchg
mov
xchg
xchg
sub
cmp
leave
mov
mov
or
sbb
movsl
movsl
inc
mov
lcall
jp
dec
int
mov
or
movsl
fidivl
in
loop
mov
or
daa
adc
int
daa
ficoml
mov
arpl
add
cld
dec
fdivrl
testb
sub
jle
roll
inc
inc
sbb
jns
and
fimuls
and
cld
outsb
aas
jbe
loopne
daa
stos
inc
rcl
cmp
scas
or
xchg
fsubl
xlat
icebp
mov
fcomps
and
rcrl
fldl
or
call
ficoms
mov
xor
and
adc
jg
mov
enter
gs
jmp
pop
add
dec
fdivrl
xchg
mov
std
ss
ret
and
lahf
xchg
mov
js
mov
cmpsb
cmp
adc
iret
mov
fdivs
push
sbb
mov
push
and
je
and
jno
and
cmp
mov
aad
in
and
pop
out
pop
mov
and
mov
cmp
inc
stos
inc
xchg
mov
and
cmp
cld
xchg
jb
outsb
cmp
dec
ss
insl
mov
aam
inc
fdivrl
xor
sbb
shll
mov
and
je
scas
dec
aad
push
adc
imul
jle
lret
test
out
push
movsb
test
stc
xor
shr
push
adc
ret
fisttpl
bnd
dec
xchg
int
repnz
cmp
xlat
fdivl
ljmp
or
rorl
dec
jb
mov
mov
fwait
cmp
adc
aaa
lret
push
jns
sbb
jl
out
jle
in
scas
cmp
mov
lret
je
mov
shrl
out
shlb
shlb
mov
mov
mov
mov
stos
test
es
cs
cmp
mov
movsb
push
inc
icebp
test
adc
jae
pop
xchg
xchg
stos
outsb
sbb
dec
sbb
mov
outsl
jle
xchg
push
mov
jecxz
lret
scas
insb
mov
mov
push
dec
mov
sub
inc
push
sbb
test
pop
lret
es
ss
repz
movsb
fdivp
push
mov
cmp
xor
jge
es
sub
dec
pop
inc
movsl
mov
jp
int3
jns
ret
jmp
xor
jge
sub
xchg
lret
scas
into
arpl
mov
sbb
sahf
bnd
shlb
mov
ja
fisubl
out
adc
sahf
xchg
or
imul
sbb
mov
sub
mov
add
pushf
jge
mov
dec
les
mov
movsl
out
dec
cmpsb
cs
jns
push
ja
adc
cs
cmp
sarl
out
push
jge
push
sub
cli
xchg
jb
pop
lahf
insl
mov
lea
fldcw
ret
cmp
sub
dec
icebp
inc
movsb
enter
pop
add
xor
inc
lcall
hlt
jecxz
ss
dec
xchg
test
popa
ficoms
mov
pop
inc
pop
loop
push
inc
nop
dec
mov
pop
push
shll
adc
dec
cmp
outsb
adc
test
push
dec
lea
pop
mov
aas
sub
loopne
dec
inc
jne
push
nop
pop
add
call
test
xor
les
in
cmp
mov
mov
movsl
push
jg
idivl
push
lods
mov
leave
jns
jo
jle
pop
push
enter
mov
sub
dec
pop
pop
mov
out
adc
insl
mov
jp
jge
xchg
loope
iret
unpckhps
add
pop
fists
add
ffree
and
mov
adc
fwait
je
xchg
fnstenv
sub
mov
shr
int3
push
sbb
loop
inc
and
jbe
rorb
rcl
jno
imul
nop
or
fs
and
mov
push
insb
and
sbb
or
leave
loope
ret
loopne
cmp
jge
out
mov
das
add
in
push
cmp
and
pushl
mov
aam
mov
mov
fdivrl
cmp
sbb
dec
jno
pop
icebp
lcall
clc
lret
nop
jnp
mov
stc
push
push
jle
push
mov
fldt
pop
mov
sti
sub
das
inc
mov
out
fisubl
fbstp
cmp
cltd
jmp
adc
sub
cwtl
test
push
push
jbe
shll
jnp
sub
jno
ret
adc
in
out
icebp
ret
out
scas
popf
cmpsl
stos
push
sbb
sub
xchg
scas
xchg
fistps
mulb
push
enter
sbb
inc
lahf
sub
aas
jmp
pop
pop
fmul
aad
mov
dec
mov
insb
outsl
mov
pop
xor
fsubrp
mov
mov
push
mov
mov
ret
xor
shlb
andb
popl
pop
mov
sub
insb
or
sub
cmpsb
in
and
pusha
adc
lods
sub
adc
les
sbb
sti
repnz
xchg
push
push
call
mov
jmp
push
rcrb
and
inc
outsb
xchg
sar
js
mov
pfrcp
testb
push
or
mov
rcll
or
jbe
lea
dec
sub
push
jnp
stos
subb
rcrl
inc
js
popa
mov
rolb
mov
in
repz
addb
cmp
cmp
andl
xlat
pop
mov
inc
divps
ljmp
mov
cli
inc
movsl
xchg
orl
adc
stc
xchg
ljmp
enter
add
insb
pop
loope
xchg
aam
fildll
cmp
jno
out
aad
icebp
push
out
test
add
std
lahf
adc
sbb
insb
ret
lea
cmp
lcall
dec
mov
fidivrl
sub
movsl
jb
cmp
jmp
lret
lret
gs
enter
or
ficoms
mov
adc
and
cmpsl
dec
or
mov
es
adc
sbb
lea
dec
jo
sbb
cmp
xchg
testb
or
fs
adc
or
out
dec
xchg
ret
mov
pop
leave
mov
dec
fiadds
push
mov
scas
rorb
and
loopne
xchg
adcb
mov
faddl
sub
scas
les
pusha
and
cltd
mov
loop
dec
int3
loop
hlt
fbstp
jne
adcl
pop
test
xchg
movsb
call
adc
jecxz
push
mov
sti
lcall
xor
pop
cmpsb
mov
push
lcall
xor
scas
cs
pop
and
imull
stc
push
imul
push
pusha
insb
mov
sbb
sub
sbb
leave
sub
sti
lret
in
dec
push
xchg
sbb
pusha
sbb
jae
out
inc
dec
test
xchg
shlb
or
ss
sahf
stc
inc
mov
int
cs
jnp
into
mov
pop
push
adc
call
jns
pop
xlat
sbb
jl
or
mov
stc
jns
add
dec
pusha
ja
or
mov
js
jae
js
pop
imul
ret
test
jmp
sub
addr16
scas
cmp
std
push
push
daa
add
pop
in
mov
dec
xor
dec
popa
push
and
out
insb
xchg
sub
fwait
daa
aaa
fistpll
pop
and
outsb
out
mov
jae
clc
and
in
pop
int
sub
daa
int
std
add
cli
jne
push
out
dec
in
and
push
mov
jbe
mov
jo
xor
sub
ds
negl
test
stc
ljmp
ss
dec
cld
call
ucomiss
das
push
in
jbe
dec
sub
add
push
push
das
cmp
negl
xchg
xchg
inc
lahf
mov
dec
lds
and
call
dec
bound
ret
rcrb
dec
ja
daa
bound
addl
pop
ss
daa
iret
pop
cmpsl
imul
movsb
xchg
je
add
fistps
push
les
and
jae
push
cmp
jns
dec
imul
fsubrs
jno
push
xchg
pop
lods
and
mov
out
and
gs
jl
xchg
cs
adc
test
sub
iret
pop
xor
xchg
stos
jne
std
push
push
cmp
pusha
lret
lret
popa
dec
test
mov
inc
inc
jno
stos
mov
xor
xchg
inc
lds
cmp
loop
add
jg
outsl
cmpsl
pop
in
dec
loope
mov
dec
push
xchg
je
fldenv
inc
popa
pop
lds
jmp
and
and
repz
jmp
pop
mov
iret
cmp
mov
lea
fwait
add
sub
dec
xorl
in
js
and
sub
sub
rorl
or
in
add
xor
lods
sbb
aam
jg
add
loopne
lea
ss
xor
aas
je
or
mov
ja
cmpsb
jnp
mov
cmp
xchg
fbstp
gs
repz
push
mov
hlt
aaa
push
dec
ljmp
test
ljmp
loopne
cwtl
ret
xor
add
pushf
jecxz
rcll
and
lods
or
mov
int
lret
lods
or
cs
test
insl
mov
das
aam
ljmp
xor
repnz
mov
addl
cmp
cmp
sbb
pop
test
xchg
pop
hlt
dec
mov
adc
xchg
xlat
jmp
push
shl
push
jne
mov
inc
pop
int3
push
hlt
call
pop
adc
loop
test
push
dec
inc
rcl
pop
in
and
adc
and
sbb
shrb
cwtl
aam
mov
cltd
daa
stc
jl
mov
je
mov
cwtl
mov
lret
aaa
movsb
sub
cmp
gs
mov
mov
mov
test
out
scas
pop
sbb
xchg
mov
in
aad
push
test
enter
call
jne
jp
lods
rclb
pop
stc
ljmp
shr
lahf
jnp
in
stos
sbb
jecxz
fsts
loope
lds
mov
test
andl
mov
bound
push
clc
xchg
shl
mov
stc
sar
pop
aaa
imul
stos
imul
and
pop
push
cwtl
lret
cltd
push
mov
mov
mul
sbb
add
stos
pop
dec
repnz
daa
stc
mov
cmp
mov
inc
sti
test
int
mov
stos
icebp
jo
pop
pop
ds
or
out
sbb
int3
pop
movl
aaa
cwtl
insb
lods
add
cmp
mov
mov
cld
imul
mov
cmp
inc
xor
pushf
add
mov
aad
in
sahf
add
push
je
js
adc
push
sahf
add
int
push
loopne
dec
and
sub
rorb
in
pop
or
rolb
stos
aas
jmp
lea
lcall
push
aam
jmp
jge
or
loopne
cmc
push
jle
push
mov
enter
sub
xchg
push
mov
pusha
xchg
stc
insl
es
inc
dec
daa
xchg
fcmovbe
and
sarl
test
jns
mov
fstpl
lock
and
outsl
aad
mov
mov
xchg
arpl
cmpsl
sbb
mov
sbb
lcall
cmpb
pop
add
add
and
jns
lret
cmp
lcall
xor
loopne
dec
xor
push
aas
dec
les
shlb
in
sub
mov
jl
jnp
xchg
lods
pop
mov
sbb
cltd
outsb
mov
int3
xchg
stos
addr16
addl
fs
neg
lret
push
sbb
lods
enter
add
ljmp
imul
scas
sbb
xor
out
sbb
mov
add
scas
pop
das
jb
cmc
mov
sbb
jle
sub
pop
sbb
adc
push
cli
out
pop
xchg
aad
xchg
popa
push
mov
out
adc
cltd
mov
jae
bound
hlt
xchg
adc
test
and
ja
xchg
mov
pop
xchg
jnp
sbb
or
test
ljmp
xchg
dec
push
mov
lods
jp
stos
fidivs
scas
ss
pop
out
popf
aaa
and
scas
mov
dec
adc
hlt
dec
lods
insl
push
rcl
jge
pop
fldcw
ror
rcrb
je
arpl
inc
jne
jae
lods
mov
adc
idiv
out
mov
mull
jnp
pop
adc
mov
xor
or
xor
adc
adc
sbb
loope
outsb
inc
push
data16
dec
pop
xor
stos
lret
xchg
dec
sbb
roll
mov
cs
outsb
arpl
test
inc
cmpsb
push
das
sbb
mov
inc
cwtl
mov
xchg
or
sbb
ja
or
mov
xchg
dec
js
lcall
test
jb
xchg
and
add
mov
movsb
cmp
sub
push
testb
mov
bnd
inc
insl
test
adc
sub
xlat
xchg
and
imul
xchg
js
fadds
clc
loop
sbb
roll
int3
adc
cmpsl
int3
mov
outsb
bound
lahf
mov
test
aam
mov
cmp
cmp
jl
mov
imul
jmp
or
in
cs
sbb
punpckhwd
cwtl
mov
or
pushf
inc
dec
loope
push
xchg
movsb
rcrb
mov
inc
adc
and
stos
mov
cli
test
arpl
lret
scas
shll
jecxz
ljmp
adc
lock
out
in
fldt
pusha
pop
cvttps2pi
mov
mov
imul
adc
ret
fwait
inc
mov
inc
xchg
test
sbb
jno
mov
and
sbb
push
scas
stc
scas
jb
mov
fwait
push
in
aam
mov
clc
xchg
aas
shl
aad
popa
in
in
outsb
dec
jnp
lock
adc
cmp
shl
fcompl
fwait
in
cmp
out
cmp
push
mov
js
leave
movsl
cmpsl
outsl
out
clc
pushf
mov
jo
das
or
lret
cmp
aaa
lahf
mov
rcr
lret
imulb
fcmovnb
int
arpl
out
out
ret
sbb
out
pop
sbb
outsb
bound
cmp
fs
jge
dec
xor
dec
sbb
sbb
sub
addr16
jle
arpl
clc
push
iret
cmpsb
imul
inc
test
sub
cmp
nop
in
mov
jp
movsl
jle
push
xor
push
xchg
pop
adc
push
pop
pop
out
addr16
sarb
call
adc
repz
jp
mov
xor
add
mov
and
sub
fs
cmp
insb
into
popa
jbe
cli
xor
ja
dec
adc
push
fnstsw
addr16
inc
sbbl
mov
lds
repnz
push
xchg
in
lea
xor
adc
enter
pop
bound
xor
and
mov
push
or
daa
and
jp
bound
adc
rcrb
call
test
xor
mov
out
cli
adc
int
and
or
cmp
jnp
pop
int3
inc
dec
or
add
arpl
inc
mov
mov
mov
into
out
pop
imul
shll
test
ret
aas
dec
cli
xchg
cmp
aad
lret
pop
mov
hlt
inc
mov
xchg
sbb
inc
push
icebp
loop
fcoms
jbe
jmp
dec
cs
mov
cmp
inc
pop
movsb
jb
repnz
insb
enter
out
mov
adc
dec
mov
mov
mov
xchg
inc
test
add
repnz
rorl
push
imul
popf
push
mov
decb
inc
fimull
inc
stos
fmuls
testl
jp
cwtl
pop
int
push
jle
or
inc
sbb
push
jbe
mov
je
jmp
and
dec
sub
lds
or
mov
es
pop
repz
push
es
xchg
push
into
aam
adc
mov
push
or
roll
in
test
in
cmp
pop
adc
movsb
mov
dec
mov
dec
test
adc
idivl
dec
sub
jl
shrl
cwtl
push
jl
insl
inc
stc
xor
inc
jne
movsb
jae
iret
sbb
popa
sub
fsubrs
rcrl
iret
xor
rcll
and
jb
divl
imul
scas
ljmp
pop
outsl
sub
dec
pop
bound
add
pop
cmp
or
xlat
das
das
pop
movb
lcall
clc
or
dec
shrb
lock
sbb
fdivl
sahf
xchg
and
fcmovne
inc
movsb
sub
fadds
push
in
sti
pop
jno
inc
fbstp
push
or
stos
cs
adc
mov
sub
lret
test
jbe
lods
fcoml
xchg
addr16
das
pushl
int
jecxz
xor
jp
or
jg
lahf
jecxz
adc
dec
out
cmpsb
pop
inc
dec
sbb
imul
testl
jge
mov
inc
int
scas
insl
out
add
cmp
movsb
push
cld
in
cmp
xor
push
xchg
loop
ds
icebp
xor
inc
cmpsl
insl
or
pusha
mov
add
insb
dec
jno
cwtl
push
dec
sub
adc
xchg
mov
inc
push
xor
pusha
std
ljmp
das
push
test
call
jno
jno
mov
movsl
dec
popf
test
or
cmp
neg
mov
fnsave
outsl
outsl
sub
ficoms
jbe
cmp
cli
lds
arpl
jns
cs
sub
adc
lcall
xchg
je
subl
movsb
into
mov
fists
push
adc
sbb
or
test
test
xor
jg
fdivr
xor
xlat
add
xchg
push
cli
and
pushf
ss
arpl
sub
fs
popf
sub
sub
ja
bound
sarl
xchg
push
aaa
cmp
decb
xchg
into
sbb
xchg
mov
ret
dec
mov
stc
stos
std
pop
and
les
mov
dec
scas
push
ds
mov
pusha
flds
lods
shll
xchg
inc
pop
into
in
in
shrl
adc
or
mov
fists
mov
and
arpl
fs
movsb
outsb
cmc
insl
pop
lea
sub
mov
aaa
ds
xchg
shll
mov
sub
test
ljmp
xor
push
xor
mov
mov
mov
push
push
jmp
push
xchg
stos
les
ret
dec
ret
push
lcall
dec
popa
lret
pusha
es
test
inc
push
cmp
lods
dec
clc
mov
jmp
iret
mov
shr
mov
xchg
and
lcall
outsl
out
lcall
pop
push
sbb
jge
mov
jne
movsl
test
test
ret
stos
sub
xor
loop
pop
push
inc
jp
mov
xlat
xor
push
out
dec
xchg
sub
popa
ljmp
outsl
adc
pop
xchg
push
lcall
roll
in
rcll
and
cmp
aam
jmp
jg
sarb
mov
adc
xor
out
out
push
ds
inc
adc
addr16
outsb
aas
gs
mov
jmp
orb
mov
inc
jge
outsl
mov
les
add
dec
pop
dec
lret
rsm
out
stos
pop
stos
les
cmpsl
stos
jge
add
cmp
xchg
pop
inc
push
xor
shll
mulb
aad
fsin
aad
sub
arpl
and
mov
xchg
lods
inc
jp
mov
aas
xor
pop
sub
popf
movsl
cmp
xchg
test
rcll
out
aam
adc
ljmp
dec
loop,pt
jbe
fbld
es
lret
mov
jb
dec
pop
repz
in
es
insl
push
clc
xchg
sbb
fnstsw
nop
mov
and
scas
fs
lahf
test
adc
test
lods
dec
sub
sbb
repnz
jne
mov
int
sbb
sbb
sub
push
aas
xor
nop
adc
rolb
jmp
adc
mov
in
jl
daa
jbe
test
sbb
and
inc
fmull
call
test
sbb
mov
sub
insb
inc
or
add
int3
pop
jns
mov
jmp
pop
jmp
xchg
add
aam
mov
or
mov
sub
add
sti
cwtl
lods
stc
ja
outsl
mov
adc
repz
jns
andl
add
adc
fidivrs
out
xlat
jmp
pop
mov
adc
sub
push
and
lcall
dec
push
adc
in
ljmp
sbb
mov
xchg
jl
cmp
jmp
rcrl
push
sub
enter
adc
cld
test
subl
xor
and
jg
dec
lods
mov
sub
dec
movsb
or
inc
xchg
mov
jecxz
cs
lods
xchg
mov
int
xor
fwait
or
imul
pushf
pop
lock
pop
xlat
lret
loope
sub
sub
adc
dec
clc
int
call
sahf
lahf
fs
nop
fidivs
jge
out
loope
lods
mov
sub
leave
lahf
cmp
loop
sar
jp
cwtl
int3
pop
lahf
inc
test
mov
lods
jl
sti
popa
into
pop
aam
and
pop
mov
adc
xchg
cmpl
out
lock
and
sahf
leave
cmp
pop
ud0
shlb
icebp
xor
enter
inc
ds
or
sbb
xor
into
popf
fsts
cmp
scas
mov
iret
cltd
test
stc
loopne
sarb
xor
jnp
orb
cmp
ret
dec
mov
int
movsb
xlat
sub
push
loop
inc
and
mov
inc
inc
mov
rclb
daa
mov
push
dec
mov
test
push
sbb
ja
imul
stos
adc
call
push
outsb
daa
cmp
fwait
xor
bound
cmp
fwait
sbb
sub
xor
sub
inc
insb
mov
jl
cmp
cmp
and
jg
or
cmc
inc
pop
test
dec
push
xchg
adc
lret
daa
add
push
cli
adc
mov
or
pop
push
push
and
push
mov
xchg
xor
cmpsl
scas
fildll
xchg
addr16
outsw
rcrb
dec
out
xor
mov
into
sbb
cld
push
lret
pop
clc
gs
push
pop
popa
pop
call
mov
outsb
stc
xor
xor
jnp
pop
cmp
pop
mov
mov
jbe
stos
bound
lea
insb
add
sbb
insb
out
nop
dec
rcr
movsl
mov
stos
dec
stos
fwait
iret
xchg
movsl
cmp
dec
incb
push
add
mov
pop
jl
stc
ret
in
sub
add
cmpsb
sbbl
pop
mov
into
lds
mov
imul
movsb
xchg
mov
sbb
scas
ss
mov
fs
in
add
out
cwtl
add
aad
test
imul
pop
sbb
and
ja
mov
jle
cmp
jge
cwtl
mov
test
leave
out
mov
in
dec
xor
js
dec
jno
jbe
sti
or
xor
jbe
popa
sub
leave
idiv
xchg
sbb
dec
into
rcll
or
stos
repz
inc
xor
dec
xorb
dec
add
and
fwait
dec
sub
pop
sub
jno
jb
and
pushf
adc
or
sub
mov
pop
les
and
mov
test
cwtl
int3
orb
addr16
cmp
xchg
mov
or
in
mov
jl
lods
icebp
popf
lods
pop
xor
and
aaa
cmp
mov
aaa
ja
inc
int
mov
movsl
sahf
fidivl
or
test
jg
in
insl
push
addr16
pop
jae
inc
addl
cmp
sahf
movsb
repnz
jecxz
xchg
and
mulb
inc
ret
jp
movsl
mov
enter
pop
push
mov
and
mov
inc
imul
mov
scas
testb
int3
aaa
scas
adc
lods
xchg
pop
inc
cmpsl
xor
test
mov
hlt
mov
add
test
push
adc
out
out
dec
add
mov
adcl
lds
sbbb
into
scas
xchg
imul
dec
push
scas
inc
inc
push
pop
fwait
inc
or
pop
pop
aam
pop
negl
pop
mov
lds
jmp
lods
movl
push
cmp
lea
xchg
lahf
mov
add
cmp
sub
out
icebp
shrl
mov
inc
push
stos
and
push
into
fiadds
ret
push
aad
add
lret
daa
push
pop
pop
sub
shlb
pop
mov
mov
out
xchg
addr16
xchg
dec
pop
pop
mov
fidivrs
sub
push
push
call
mov
icebp
and
cmp
sbb
pusha
or
popf
shrb
mov
lds
fiaddl
jo
ljmp
daa
mov
divb
adc
movsb
pop
fiadds
mov
push
mov
cmc
jmp
mov
cmp
popf
push
push
aaa
dec
call
lds
mov
rep
int3
out
mov
pop
aad
mov
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
jmp
pop
jge
lds
hlt
inc
inc
fsts
mov
mov
ja
scas
rcrb
mov
mov
jmp
mov
xor
pop
sti
fisubrl
into
cmp
adc
and
jge
lods
mov
shll
clc
jb
ss
repz
lock
cmp
pop
lret
and
sbb
sbb
into
popa
sar
dec
in
pop
stc
mov
xchg
mov
aad
inc
mov
lea
sarl
mov
lods
push
mov
repnz
sub
scas
fld
repz
fistps
sbb
test
fcmovbe
cli
add
ds
sarl
push
stc
clc
ja
clc
inc
mov
inc
mov
fs
mov
orb
imul
test
aad
test
jecxz
xlat
mov
inc
push
jns
mov
lcall
xchg
ds
in
test
mov
hlt
jns
jbe
aam
mov
jmp
roll
fisubrl
loopne
jnp
out
adc
sbb
fadds
jp
jno
das
movsb
fsubs
repz
or
xchg
dec
inc
pop
xchg
push
popf
fs
xchg
jns
inc
sub
pop
lock
push
outsb
sbb
cmp
pop
or
sbb
xor
adc
inc
ds
aad
push
movsl
add
int3
popf
icebp
mov
rorb
mov
idivb
bound
out
xchg
js
ds
insl
addr16
addr16
das
aad
sub
jnp
add
inc
pop
sbb
sub
or
mov
jg
pop
insl
daa
pop
mov
mov
xor
lds
xor
jle
ljmp
outsl
pop
andl
cwtl
push
pop
js
lret
sbb
jp
mov
jle
xchg
add
or
or
pop
and
repz
add
andb
or
inc
jae
jle
or
sbb
pop
stc
rcr
adcl
shl
pop
jl
imul
js
fbstp
inc
lods
xlat
push
cltd
cmp
add
insl
sbb
lods
ror
lret
cmpsb
jecxz
adc
mov
mov
aam
inc
cmp
jl
sub
insb
sbb
or
loopne
xchg
aam
fs
and
push
or
and
dec
cmp
sub
fs
adc
mov
dec
or
cwtl
int3
push
nop
in
lock
aaa
lret
jo
inc
and
jo
xor
and
test
sub
pop
pop
call
or
jae
add
int
push
adc
mov
or
sub
mov
sbb
xchg
sbb
mov
inc
xchg
xor
data16
push
xchg
jb
ret
gs
nop
xchg
shrl
rcrl
fiaddl
xchg
arpl
lods
jne
cmpsb
push
outsl
bound
pop
outsb
xor
add
pop
test
jle
inc
sbb
out
xor
sti
inc
enter
fmull
lea
ljmp
test
shll
outsb
divb
loope
jno
pop
inc
gs
mov
stos
iret
sbb
aas
sbb
jne
jl
je
xchg
faddl
sub
and
push
push
iret
mov
mov
xchg
subb
pop
jg
inc
popa
ljmp
add
jae
xchg
jecxz
dec
xchg
movsl
xchg
imul
sub
flds
push
push
adc
rcr
repnz
notb
jne
sahf
scas
enter
sbb
int3
adc
cmp
sbb
xor
or
fwait
mov
call
lock
adc
xchg
pop
jo
mov
jo
popf
shrb
or
and
adc
orl
addr16
push
fisttpl
ljmp
lret
andl
adcb
xorl
mov
jae
inc
push
int
popa
orl
add
sbb
ja
inc
loop
mov
or
stc
rcrb
loopne
lahf
jl
or
addr16
rcr
repnz
mov
xor
mov
xor
imulb
shr
add
mov
call
mov
std
test
sub
pop
daa
adc
mov
sub
sub
xchg
xchg
cmp
aaa
jle
outsb
xor
mov
push
or
push
mov
xor
mov
and
mov
out
sahf
cmc
dec
data16
sub
das
pop
adc
pop
mov
fprem
fs
pop
inc
test
push
xchg
data16
int3
push
mov
mov
sbb
fsubrs
pushl
jnp
popf
sbb
jbe
and
nop
inc
ret
and
ffreep
andb
sub
arpl
repnz
out
adc
gs
pop
ret
pop
les
and
push
fisubs
xor
js
jne
mov
sbb
mov
aas
sbb
mov
repz
xlat
pop
pop
mov
adc
nop
xor
loop
das
cmp
sub
sar
pop
fs
jns
or
loopne
pusha
fwait
jmp
inc
push
aaa
insl
cmp
loop
mov
jae
outsb
adcb
stos
jl
mov
xlat
cld
test
aad
jecxz
aad
xor
rolb
aas
fisubl
xchg
inc
imul
add
cmp
mov
xchg
outsb
insl
lea
adc
push
popa
out
push
cwtl
lahf
imul
add
scas
pop
icebp
dec
dec
pop
xor
nop
xchg
push
fdivrl
lcall
inc
push
scas
iret
sbb
pop
stos
sbb
int3
mov
dec
sbb
insb
push
adc
xor
mov
jo
jp,pn
gs
pop
sub
add
xor
mov
out
dec
leave
xchg
das
fidivl
push
inc
aas
ss
push
les
jp
cmp
mov
aas
in
push
cmp
mov
dec
out
push
pusha
push
fs
jnp
shll
cmp
mov
and
mov
fstpl
dec
movsb
xor
int3
not
adc
jno
je
scas
shll
adc
push
xor
inc
les
mov
sub
pushf
xor
dec
fcmovb
hlt
or
orb
pop
rolb
jo
fiadds
cmp
repnz
jo
popf
call
insl
outsb
loope
push
add
fcomp
pop
in
sbb
outsl
pop
cmp
xorb
scas
out
and
ficomps
jge
sub
in
add
push
mov
pop
shlb
add
jge
fwait
mov
in
in
jge
adc
jmp
daa
pushf
mov
mov
mov
mov
jno
xor
into
out
repnz
stc
das
add
loope
gs
cmp
or
popa
pop
push
or
incb
dec
or
stos
xlat
sbb
xorb
imul
dec
jmp
dec
or
loopne
mov
sub
stos
or
push
int
shrd
shr
jmp
and
add
loop
es
pop
js
negb
js
ja
nop
pusha
leave
push
push
lcall
call
push
addl
fsubrp
jae
in
ja
loope
out
or
mov
jnp
call
jge
and
sbb
jbe
jmp
mov
push
inc
lret
push
jmp
mov
fwait
push
insb
out
or
mov
pop
mov
sbb
dec
or
out
jb
dec
dec
jnp
out
daa
jne
aas
xor
dec
jne
aas
arpl
push
dec
push
ret
lcall
movsl
scas
push
in
icebp
adc
cli
int3
loopne
nop
inc
scas
mov
orb
cld
push
lret
jp
inc
inc
xor
fs
push
add
mov
or
cmp
cmp
and
divl
dec
xchg
lods
jl
clc
xchg
test
mov
sti
adc
movsl
cwtl
bound
mov
scas
lret
nop
fistpl
in
fwait
pop
xor
sti
add
xor
sti
loope
cmp
push
push
out
aas
fbstp
daa
mov
data16
inc
out
sarb
aam
lods
mov
movsl
adc
pop
sbb
jge
mov
mov
enter
jbe
das
mov
out
stos
jb
stos
inc
lea
scas
roll
push
push
jle
xor
lods
sbb
in
sbb
mov
sar
sbb
repz
loope
mov
add
jae
test
add
cld
jmp
int
aaa
lock
out
mov
es
and
rolb
adc
mov
mov
adc
push
out
movsb
in
jno
dec
fsubrs
xchg
xor
adcb
aad
jg
mov
addl
fcoml
sub
xor
stos
sub
outsb
and
pop
add
xchg
xlat
and
sbb
dec
mov
inc
jl
scas
pop
filds
fwait
in
frstor
pop
xchg
fucom
inc
xlat
out
pop
xlat
xor
adc
loopne
push
pop
push
jne
scas
lret
mov
adc
jne
sbb
pop
fcmovu
loopne
add
sub
imul
clc
add
outsb
divl
inc
lahf
pusha
fcmovnbe
lods
jl
ret
xchg
sub
cli
add
inc
mov
push
mov
pop
stc
or
nop
hlt
dec
mov
int
add
sbb
xor
dec
fwait
repnz
xchg
fwait
pushf
push
cmp
test
fistps
dec
loop
mov
cmp
in
ljmp
pop
pop
cmp
push
dec
jle
add
lods
dec
sub
sbb
ret
cmc
ljmp
pop
add
lret
mov
cmp
dec
sub
sti
loop
lds
icebp
shll
es
fs
and
pop
fnstenv
xor
rdpmc
jmp
pop
ret
insl
push
jecxz
incb
lcall
shl
lret
stos
lret
xchg
cld
pop
or
sub
popa
int3
inc
add
cwtl
or
aaa
add
testb
rorb
cs
jecxz
cmp
int3
inc
push
cltd
jp
cwtl
mov
mov
pop
and
adc
fisubl
add
std
xchg
inc
pop
xchg
popa
lea
daa
adc
jbe
push
stos
pop
pop
xchg
inc
add
in
cmpsl
mov
xor
add
ds
jl
push
xchg
aaa
jecxz
test
cmpsl
enter
nop
xchg
cmp
scas
lea
mov
outsb
pop
fimull
mov
push
and
add
mov
cwtl
xchg
xor
lcall
mov
xchg
sbb
jl
mov
push
outsb
aam
push
add
cwtl
sbb
sbb
xchg
dec
shlb
arpl
sti
pop
mov
popa
jb
jg
and
push
xchg
xor
sbb
cli
out
adc
pop
cmp
dec
sbb
rclb
mov
inc
or
pop
fidivl
push
adc
inc
mov
fwait
mov
add
sbb
sub
lods
xchg
sbb
mov
scas
int
and
mov
sub
mov
fisubrs
call
adc
pushf
add
jb
dec
pop
jne
repz
subl
pusha
mov
lock
scas
add
xchg
mov
xchg
cmp
cmpsl
mov
ror
mov
mov
bound
sarb
jo
in
in
dec
addr16
dec
sub
xchg
lods
fldcw
mov
ss
repnz
in
loopne
adc
lods
cmp
add
mov
xor
mov
pop
and
xor
aas
scas
fld1
ds
cwtl
cmpsl
push
rcll
dec
adc
pop
xor
dec
aaa
scas
out
rcl
xchg
aad
sub
or
mov
shll
fisubs
dec
mov
out
ret
xor
adc
dec
movb
dec
or
stos
call
pop
ss
sbb
mov
pop
or
and
sub
aad
xor
xorl
add
fnsave
dec
test
mov
sub
jne
pop
orb
fisubrs
push
pop
jl
stc
mov
fsubrp
mov
shrb
loopne
mov
ret
inc
jmp
mov
pop
mov
les
jne
stos
push
push
mov
sbb
pop
int3
int3
stos
fnsave
sub
shrl
aad
pop
scas
shlb
push
add
sahf
out
les
leave
or
mov
test
mov
sub
pop
inc
sbb
dec
adc
ret
sub
ds
inc
inc
xchg
jp
out
scas
adc
into
push
add
sbb
add
cmpsb
fwait
mov
mov
sti
jae
dec
lds
insl
push
sbb
adc
jle
das
call
into
loopne
rcrb
sbb
mov
add
leave
incl
aam
xlat
pop
mov
mov
loopne
leave
and
in
mov
pop
rorl
or
sahf
outsb
jb
mov
jns
pushf
inc
xchg
movsl
sbb
imul
mov
out
xor
mov
mov
bound
mov
xchg
sahf
imul
sti
jno
fcomps
ja
sbbb
cmp
mov
push
dec
call
jge
xor
test
testl
movsb
jmp
pop
in
adc
clc
add
push
pop
ror
sbb
sti
sub
jne
pop
adc
mov
push
push
jl
shrb
inc
fdivr
inc
scas
mov
mov
push
mov
lods
dec
jae
insb
loop
fs
ret
test
pop
or
xlat
inc
cmc
add
dec
mov
testl
cmp
jmp
movsb
out
icebp
sbb
stc
mov
rol
dec
sbb
xlat
test
adcl
mov
sbb
mov
and
aaa
push
mov
negb
popa
mov
stos
adc
pusha
inc
xor
mov
mov
xor
shl
xor
or
jmp
aam
mov
xor
push
in
data16
xlat
push
bswap
mov
push
mov
add
inc
dec
lret
jb
adc
adc
xor
gs
inc
dec
sarl
les
adc
jne
xchg
jne
push
adc
lcall
mov
ljmp
dec
and
fsts
stos
cltd
cld
stos
packsswb
je
mov
outsl
cmp
pop
lret
mov
inc
and
and
mov
push
xchg
icebp
jae
scas
inc
xchg
test
insl
cmp
test
lods
and
jae
pop
mov
inc
cwtl
ja
nop
dec
nop
lds
sbb
test
jp
lret
jecxz
jbe
movb
jecxz
mov
push
sahf
dec
sahf
es
push
imul
pop
cmp
mov
das
lcall
test
add
mull
stos
and
mov
mov
pop
jae
mov
les
cmc
dec
pop
inc
jae
lock
insl
push
and
jle,pn
pushf
dec
test
add
pop
push
das
cmp
cmp
fwait
pop
mov
cmp
in
cmp
cmpsl
and
out
test
xchg
movsl
pop
mov
xchg
es
js
inc
push
ljmp
scas
sub
bound
mov
fwait
je
stc
push
mov
mov
xchg
and
sbb
ret
movsb
shl
xor
jp
in
loope
mov
aam
les
cmp
lret
sub
jns
mov
rdpmc
clc
imul
jge
lods
jl
push
insb
into
mov
xor
pop
fsubrs
xorl
mov
jg
jle
lcall
mov
inc
mov
lds
add
lret
adc
mov
les
or
jge
rolb
mov
test
cmpsb
iret
insl
je
add
cmp
ficoml
es
negl
frstor
jb
and
lods
popa
xchg
mov
push
ret
shl
push
xchg
inc
es
sti
mov
popf
fimuls
loop
dec
or
std
dec
cmp
leave
dec
inc
or
lds
dec
stos
jge
xchg
add
std
notl
loopne
mov
dec
or
out
das
cs
leave
outsb
adc
cmp
rol
lods
pop
pop
ds
fmull
xchg
sub
mov
dec
shll
call
cmpl
out
adc
cmp
filds
xor
int3
push
leave
pop
fistl
into
sbb
sub
push
bound
lret
sahf
pop
mov
dec
xchg
ret
xchg
lock
shll
dec
enter
xchg
insb
jl
imul
add
leave
mov
lret
xchg
fdivrp
lret
addl
push
add
xor
add
out
insb
pushf
xchg
out
jle
scas
std
dec
push
movsb
xor
cmp
testl
test
inc
xor
inc
idivb
aaa
lcall
cli
mov
xchg
andb
and
iret
jmp
dec
dec
mov
sub
xorl
dec
cmp
adc
xlat
sub
dec
aad
pop
mov
sti
or
and
mov
xchg
test
dec
fists
jno
daa
cmp
insb
stos
in
cli
pusha
iret
fwait
sub
inc
push
stos
cmp
loop
xchg
roll
jbe
pop
dec
int
pop
in
cmp
jmp
sbb
nop
sbb
cltd
push
mov
mov
dec
adc
pop
out
aas
movsl
mov
jmp
jns
pop
jge
jmp
dec
fidivrl
pop
jmp
fnstsw
iret
inc
push
mov
sbb
stos
jb
adc
enter
cmpsb
and
or
push
and
adc
sahf
stc
rol
sub
mov
in
adc
sbb
outsl
pop
pcmpgtd
xchg
icebp
or
aas
adc
popf
bound
cmp
mov
rorb
inc
fcmovne
jge
movsl
pusha
arpl
jecxz
push
mov
lcall
mov
push
out
pushf
dec
sub
frstor
incl
iret
or
lock
push
das
imul
pushf
mov
es
mov
jmp
out
sub
and
mov
scas
sbb
cmp
push
push
outsl
sub
and
sar
scas
mov
push
sub
out
add
in
mov
pop
mov
mov
sub
aaa
js
mov
jns
imul
add
xor
adc
sbb
out
mov
fstps
adc
xchg
ds
leave
cmp
mov
mov
in
andb
sbb
pop
jmp
pushf
inc
and
pop
movsl
adc
sbb
ret
jb
mov
in
ret
add
push
cs
shlb
jo
rolb
negl
lcall
ffree
mov
imull
jno
pop
sub
int3
mov
ss
xor
fwait
or
outsl
lahf
aam
mov
pop
fcom
fidivrl
ljmp
jo
pop
mov
fwait
outsl
aaa
xchg
das
stos
inc
sub
cmp
divl
idiv
mov
lea
mov
push
mov
push
not
push
shrd
or
or
icebp
enter
and
lea
adc
mov
sbb
push
mov
xchg
jo
fwait
cmpsb
mov
lcall
add
mov
pop
lods
push
or
int
test
mov
testl
sub
or
insl
out
jmp
adcb
cmp
rcl
adc
jb
pop
rolb
xchg
cmp
lret
sbb
inc
push
cmpsl
mov
cs
out
inc
movsl
rcr
inc
outsl
sub
xor
test
imul
stos
jo
or
repz
lock
mov
cltd
mov
mov
inc
dec
and
cmp
dec
or
push
sub
incb
jno
dec
sbb
or
sarl
orb
push
mov
cmp
mov
dec
out
jmp
in
test
int3
rclb
pop
push
and
push
pop
out
out
mov
xchg
int3
pop
cmpb
daa
pop
xchg
out
and
cs
int3
cld
popa
mov
inc
aaa
lods
xor
mov
rclb
jle
cwtl
decl
pop
fldl
mov
stc
scas
roll
pop
xlat
xchg
sub
sub
lahf
inc
sbb
jae
call
das
popa
cmovp
or
outsl
mov
mov
test
adc
in
jb
lret
adc
inc
dec
cltd
fldpi
test
mov
cmpsl
inc
in
xchg
lahf
mov
mov
sahf
imul
fldenv
lock
pop
dec
addl
push
fnstcw
int3
jo
sub
jae
dec
arpl
test
mov
cld
loopne
lds
cmp
xlat
and
scas
mov
jmp
or
pop
inc
or
and
jo
adc
xchg
mov
push
sub
mov
std
sub
dec
or
jno
pusha
aad
lahf
mov
mov
and
mov
mov
push
stos
stos
mov
mov
js
xchg
push
fs
sub
xor
push
xchg
shl
push
inc
cmp
jge
push
cmc
jbe
mov
dec
jno
add
pop
add
mov
push
ret
xorl
repnz
sbb
inc
and
push
or
mov
shrl
es
pop
xor
xlat
mov
movsb
cmp
xor
mov
push
or
mov
call
clc
mov
roll
js
xchg
insl
xor
mov
scas
int
jnp
sub
pop
push
pop
mov
shl
ret
fisttps
ja
dec
insl
sub
je
repz
jg
lock
mov
pop
dec
pop
inc
jne
popa
icebp
dec
aad
adc
jle
sub
mov
pop
repz
adc
add
add
pop
sbb
add
popf
mov
jnp
add
mov
in
pop
fsubrs
mov
mull
add
movsl
mul
pop
int
sub
movb
add
mov
leave
imul
fildll
mov
les
lret
xor
dec
clc
pop
rolb
mov
iret
or
xchg
cltd
sahf
inc
mov
dec
cmpsb
or
rcll
test
scas
pop
mov
pop
test
aam
mov
add
in
pop
jg
scas
out
in
or
fstps
aaa
fs
sarl
scas
jecxz
jne
cli
xchg
int
sub
xor
ror
pop
jle
ret
mov
aad
sub
dec
pop
pushf
cmc
pop
pop
cs
inc
push
sub
pop
fld
clc
add
sub
pop
in
and
xor
cmp
lods
aaa
pop
cmp
ljmp
jno
andl
arpl
aas
test
mov
mov
mov
adc
inc
inc
mov
movsb
adc
fcompl
movsb
mov
scas
pop
test
xor
push
jecxz
lahf
and
mov
jl
mov
sbb
mov
insb
aad
jne
loope
or
sti
movl
nop
cwtl
int
repz
mov
jecxz
es
ret
into
and
xchg
daa
mov
test
nop
inc
hlt
or
je
mov
adc
or
xchg
and
inc
xor
sbb
push
push
add
push
push
mov
shl
pop
in
loope
repnz
vmaxss
dec
faddl
lahf
cwtl
imull
lods
negl
fwait
clc
or
lcall
out
jge
mov
out
xor
dec
mov
and
daa
sbb
ret
and
add
aaa
shrb
mov
movsl
aam
fwait
ret
lods
xchg
pop
test
xchg
cmpsl
push
data16
pop
dec
fldenv
cmpsb
mov
aad
or
cltd
in
jp
mov
adc
sbb
fistl
pop
jb
push
mov
xor
mov
fmulp
rorl
lods
adc
scas
jmp
xor
xor
cmpb
push
out
inc
dec
pop
rsqrtps
out
add
jne
in
mov
jle
mov
loope
in
popa
xchg
daa
cmp
cmp
cli
mov
push
push
stos
push
push
cmp
es
add
fldcw
push
inc
lahf
flds
ss
jnp
hlt
arpl
push
lods
ds
mov
pushf
call
xor
addr16
mov
ja
add
mov
lahf
inc
fs
add
fs
push
and
fs
and
jmp
sarl
fstpt
xor
sbb
lahf
push
cmp
push
pop
xor
orl
push
test
push
addr16
lock
cmc
lahf
decl
sbb
mov
mov
push
add
lds
jecxz
dec
popa
push
repz
inc
push
negl
mov
out
popw
lahf
outsl
leave
jns
pop
ljmp
xor
xchg
or
cmpsl
jno
jbe
lock
mov
shr
lret
daa
into
jno
jecxz
mov
dec
repz
or
repz
push
cmpsl
adc
inc
xchg
or
dec
into
pop
cmp
mov
lods
imul
or
mov
loope
ds
add
pop
call
jo
aam
mov
mov
popa
enter
repnz
sbbb
xchg
add
mov
xchg
jns
mov
jl
adcb
leave
daa
sub
inc
dec
pop
cmpsl
cwtl
mov
mov
in
ret
rcrl
out
arpl
nop
push
mov
mov
lds
adc
imul
cmp
or
dec
scas
stos
add
xchg
cmp
call
aas
xchg
jb
dec
sbb
inc
ljmp
fcoml
adc
mov
or
fisubl
cld
sub
add
jne
and
dec
stos
sbb
outsb
pop
clc
mov
hlt
xchg
insb
lds
lods
cltd
pop
cmp
or
scas
cmpsb
pop
test
lods
push
push
sub
mov
sub
cmpsb
adc
test
inc
arpl
push
mov
into
in
rorl
dec
sbb
arpl
in
arpl
aas
xorb
pop
mov
push
fcmovu
sbb
clc
imul
jle
shl
jo
mov
ds
cmp
add
push
push
xchg
xor
pop
pop
icebp
test
imul
lds
and
inc
stos
push
sbb
jne
hlt
arpl
push
iret
dec
insb
pusha
or
push
lret
cmpb
mov
mov
sahf
push
push
xlat
push
int
mov
lahf
lret
outsb
lods
lahf
xchg
loop
inc
ret
sbb
fldt
cmp
adc
mov
cwtl
stos
push
lods
xchg
ja
lods
les
sbb
test
imul
fwait
rcll
cmp
popf
dec
xchg
ret
pusha
dec
and
add
ret
jle
sti
rorb
dec
daa
mov
cmp
push
mov
dec
push
arpl
mov
mov
insb
int3
sbbl
fmull
and
jle
cmp
cltd
cmc
cmpsl
mov
cmp
xor
out
nop
jg
mov
hlt
in
sbb
mov
adcl
stos
test
les
loop
jae
push
or
inc
cli
inc
in
push
push
lods
icebp
sub
cwtl
out
fnsave
mov
inc
push
mov
imul
ret
out
flds
inc
imul
imul
pop
mov
std
mov
add
push
lds
into
fisttps
out
gs
imul
xor
lret
out
or
cmpsl
inc
add
jg
jp
sbb
jae
mov
mov
dec
xor
sbb
mov
jmp
std
sti
sbb
sbb
mov
out
adc
xchg
insb
pop
mov
fdivl
mov
mulb
push
dec
orl
sub
je
and
lods
lods
push
mull
lret
push
xor
pop
je
adc
and
pusha
xchg
dec
sbb
js
loopne
lahf
rcrl
test
int
loop
mov
cmp
adc
arpl
das
pop
aam
and
jge
movsl
test
cmp
cmc
cs
mov
nop
pop
mov
and
ret
xor
cmp
add
cmp
mov
sub
rcr
xor
or
rcr
dec
clc
stc
shlb
adc
pop
inc
call
jg
fldenv
cmc
cmpsb
lods
xor
sbb
mov
inc
xchg
jl
movsb
push
xlat
add
cltd
in
jmp
pusha
or
jo
and
add
ficompl
sub
mov
cmpsl
in
js
cltd
arpl
pop
lds
cmp
icebp
cs
push
mov
adc
cmp
xor
mov
aad
sbb
lcall
xlat
pop
inc
xlat
test
or
out
scas
mov
dec
xchg
mov
inc
xorl
movsl
mov
lret
dec
adc
sbb
jge
cmpsl
cmp
les
std
rcrb
adc
stos
and
int
mov
cltd
jl
xchg
cmp
popf
inc
in
lods
cmp
out
cli
fs
sahf
jb
dec
fbstp
jl
insl
ss
jmp
cltd
xchg
mov
mov
or
jmp
inc
dec
pop
pop
aas
pusha
aam
and
add
sti
sbb
jae
or
push
data16
dec
jp
push
sbb
je
pop
scas
sbb
inc
push
outsb
xor
xchg
jne
add
hlt
test
dec
das
jle
jmp
loopne
jo
mov
jmp
push
pusha
xlat
push
pop
jmp
and
rorb
mov
lret
mov
outsl
les
mov
cmp
mov
in
cmp
rorl
adc
or
jecxz
push
popl
sub
and
popf
pop
sahf
dec
jbe
rclb
push
mov
ret
xor
inc
mov
cmp
fldenv
push
adc
xor
jmp
xchg
sbbl
pop
pop
lock
scas
jbe
lret
fstpl
mov
fiadds
xchg
push
xchg
out
xlat
sbb
pop
pop
jne
pop
into
jno
mov
dec
or
jmp
xor
dec
and
test
sub
stos
fistl
jp
rcrl
ds
mov
pop
aad
rclb
fbstp
sbb
and
cmp
and
pop
fadd
orl
jge
fiaddl
rol
add
push
or
scas
dec
outsl
push
in
jle
mov
push
push
sbbl
test
lea
les
push
inc
mov
jo
mov
xchg
nop
mov
xchg
adc
aad
fwait
shlb
pushf
cmpb
push
daa
fadd
enter
cltd
push
stos
mov
rcrb
cwtl
xor
adc
jns
adc
cmp
mov
cltd
jp
stos
mov
fwait
push
sarb
dec
cmp
or
fwait
stc
fwait
mov
xor
out
or
push
in
push
jb
cmp
mov
stc
pop
add
sub
xchg
aad
aas
jmp
in
mov
push
dec
cmp
pop
rcl
fisubl
stos
mov
data16
insl
sbb
sub
mov
pop
and
mull
lds
cmpsb
xchg
sbb
and
in
sub
mov
aam
addr16
icebp
decb
stc
jp
and
in
lcall
cmp
mov
jb
sahf
rol
gs
rcrb
pushf
lock
bound
jg
cmp
mov
xor
xor
lds
pusha
or
adc
push
jmp
adc
jmp
in
lret
out
out
stos
and
or
bnd
loopne
mov
push
pushf
pushf
mov
call
notb
je
mov
call
xchg
mov
popf
add
fisubl
push
xchg
addb
push
dec
test
fisubrs
jnp
sub
imul
mov
icebp
sub
inc
mov
xor
scas
rcrl
scas
xchg
outsb
xor
mov
ret
iret
mov
shlb
pop
cs
lcall
into
inc
in
mov
jge
movl
mov
push
clc
inc
jae
inc
icebp
pop
std
jle
pop
jmp
imul
js
ja
aam
dec
ljmp
inc
dec
out
xor
mov
cmp
xor
addr16
imul
insl
or
in
lret
add
enter
lret
jo
outsl
fbstp
lret
xchg
cmp
sahf
xor
pop
loop
pushf
or
fists
xchg
push
adc
pop
cltd
pop
rolb
negl
mov
fstps
xchg
adc
mov
es
imull
push
dec
mov
aas
jge
jl
inc
nop
lret
addr16
sti
rclb
mov
fdivr
outsb
out
inc
mov
rol
scas
lds
mov
inc
out
rcll
lcall
imul
jo
lcall
adc
sub
push
adc
and
testb
mov
and
cmp
ljmp
cmp
leave
jg
lods
movsl
sbb
mov
xchg
push
popf
je
jbe
in
pop
in
xchg
sar
jmp
sub
jo
test
cmp
push
cltd
push
mov
test
sbb
lods
jmp
cmp
out
ret
jae
mov
jns
shrl
cmp
push
stos
or
cs
out
jno
sub
pushf
sub
pop
fiadds
adcl
mov
int
loopne
test
push
fldcw
movsb
mov
repz
stos
repz
xchg
in
imul
in
sti
push
add
xchg
loopnew
call
idiv
add
lcall
fst
push
mov
ss
mov
aad
inc
out
sbb
sbb
mov
xor
nop
mov
jp
lods
pusha
mov
pop
ja
lret
fprem
inc
pop
sub
mov
mov
cmp
inc
push
test
dec
add
adc
aas
xchg
in
fwait
add
dec
sti
cld
sti
test
dec
sti
in
outsl
dec
out
mov
push
loope
das
cmpsl
imull
xchg
cli
jae
jmp
icebp
dec
arpl
stos
gs
and
add
fwait
dec
test
in
xchg
jp
bound
xchg
repnz
xchg
pusha
or
scas
sbb
ret
imul
cld
addr16
mov
mov
icebp
sti
pminsw
mov
xchg
flds
mov
push
pop
fnstcw
pop
sub
xor
aas
das
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
xlat
mov
iret
or
push
mov
xor
adc
xchg
daa
scas
hlt
fwait
mov
mov
inc
sbb
out
or
push
mov
imul
xor
pusha
dec
mov
das
mov
movsb
dec
cmp
insb
xchg
imul
xor
mov
sub
mov
pop
dec
ret
xor
lock
and
fists
lcall
mov
out
jbe
into
mov
xchg
jle
jecxz
test
arpl
inc
xchg
scas
popf
adc
fs
movsb
cmp
cmp
dec
test
sbb
sbb
aaa
fistps
dec
adc
or
out
push
dec
int
pop
imul
repz
and
sbb
imul
xor
ret
loop
xor
xor
rcr
cs
xlat
outsl
outsb
inc
pusha
mov
add
int
xor
out
in
jmp
lds
sti
or
pop
gs
leave
xor
dec
bound
pop
ret
and
dec
xor
jle
mov
fistps
out
gs
inc
loope
cli
add
add
inc
push
shlb
xchg
pusha
xorl
jne
out
xchg
mov
repz
cmp
mov
cli
xor
jle
cmpsb
sti
fcompl
addr16
sbb
sarl
test
inc
test
fildll
fdivp
aaa
push
dec
mov
mov
out
idivb
aaa
jns
sbb
insl
outsb
dec
daa
xchg
out
jnp
inc
inc
push
shlb
test
jp
xor
leave
jmp
push
idivb
jb
mov
xorl
xlat
sub
jo
mov
lahf
out
loopne
cmpsb
sbb
out
xchg
aas
jnp
cmp
jmp
mov
daa
aas
and
jge
jo
cmpsb
out
mov
adc
fcomps
cli
pop
mov
inc
es
push
dec
jg
cmp
hlt
ss
add
push
out
or
cltd
xor
test
fucomp
cmp
fsubl
sbb
icebp
add
dec
in
aas
xchg
maxps
pop
jbe
insb
xchg
out
loop
or
sbb
sbb
xor
imul
call
lods
inc
ja
xchg
sbb
jecxz
aad
or
xor
xor
mov
mov
and
mov
into
sub
data16
xchg
dec
cmp
ret
jno
out
fdivrp
insl
inc
push
dec
scas
stc
dec
loopne
xor
ds
loopne
cmp
cmp
insl
cmpl
das
pop
gs
inc
xchg
jle
or
movsb
imul
xor
and
cmp
sub
roll
pop
lods
push
fists
arpl
xchg
push
pop
jg
sbb
push
and
dec
std
jg
nop
fcomi
mov
push
repz
xchg
lea
sub
inc
cmp
add
rcrb
jb
dec
sub
mov
decb
sub
push
mov
scas
iret
sub
sti
mov
mov
fnstcw
rol
loope
lret
inc
sub
push
push
dec
jnp
mov
int
cmp
mov
and
pop
jae
push
inc
jo
cmp
xchg
jo
mov
push
mov
sub
daa
mov
mov
shlb
dec
xor
add
mov
aas
inc
negb
out
loopne
aam
fbld
push
or
sub
jns
addr16
std
fcmovnb
sbb
rcll
cmp
das
xchg
es
pushfw
xchg
pop
test
aas
jle
nop
xchg
push
add
jne
dec
push
movsl
push
mov
imulb
pop
aas
lret
inc
pop
add
lahf
sub
pop
xchg
or
mov
mov
cmp
stos
xor
xchg
loope
lods
andl
pusha
cmc
test
mov
in
js
pop
mov
popa
popa
pop
mov
push
popf
cmp
jg
or
enter
fwait
mov
cwtl
ret
cmp
add
jle
movsl
inc
add
into
fadds
xor
std
addb
and
icebp
push
mov
inc
ds
sarb
xchg
dec
call
or
ret
lds
outsl
dec
jmp
adc
stos
mov
pop
jecxz
mov
pop
stos
fstpl
jmp
mov
mov
movsb
pop
sub
ret
lods
call
shrl
jp
ljmp
test
jnp
mov
ds
cmc
cmp
mov
adc
mov
out
dec
jo
sbb
adcb
psubsb
stc
mov
sbb
cmc
sbb
jge
mov
lds
sub
roll
cmpsl
push
xchg
leave
add
cmp
pop
xorl
mulb
sub
adc
nop
mov
dec
push
stos
mov
insl
xchg
aam
stos
leave
xchg
add
shlb
sub
pop
and
dec
lret
outsb
or
stos
pusha
mov
pop
mov
lahf
imul
jmp
inc
divl
push
sbb
jb
pop
cmp
dec
dec
cmp
in
xor
adc
mov
mov
adc
dec
push
test
mov
fistpll
imul
into
sbb
ss
pusha
gs
jp,pt
lahf
xchg
test
andb
sbb
int
adc
data16
inc
inc
insb
push
xlat
out
fwait
mov
inc
push
fwait
enter
loop
sbb
arpl
gs
enter
cmp
imulb
mov
jae
dec
mov
pop
scas
call
stos
js
push
adc
pop
out
add
mov
mov
mov
out
stos
dec
mov
cmp
outsl
je
mov
push
in
push
outsl
mov
inc
xchg
mov
and
enter
movsl
mov
hlt
sahf
scas
call
mov
stos
sbb
rcrb
std
pop
int3
mulb
mov
movsl
add
out
ret
jg
or
mov
mov
movsl
or
insl
xchg
xchg
xchg
gs
setle
sub
pop
roll
adc
dec
sub
pop
lea
mov
and
loopne
adc
pop
outsb
lea
push
pop
sbb
outsl
popa
pushf
mov
fmuls
out
push
out
int3
jmp
in
nop
adc
push
outsb
xorl
mov
sub
dec
pop
pushf
sbbb
inc
ret
push
pop
cbtw
adc
lret
and
jns
xor
lods
rorl
in
inc
mov
push
rcll
not
mov
sarl
cmpsb
shlb
mov
push
hlt
pop
xchg
test
test
jge
add
ds
cmpsb
fmull
fimull
addr16
jno
fsqrt
icebp
sbb
imul
xor
mov
fdivrs
mov
stos
lods
mov
xchg
stc
mov
leave
sbb
fsubr
ljmp
mov
inc
add
mov
lods
enter
add
movsb
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
mov
outsb
arpl
xchg
and
xchg
inc
mov
adc
xchg
nop
mov
dec
cmp
push
adc
test
mov
lea
clc
mov
mov
mov
ds
aas
jo
cmpsb
in
test
loopne
jle
mov
dec
mov
push
dec
mov
push
and
push
xchg
ss
mov
loope
xor
sub
dec
sub
scas
jmp
int3
dec
rolb
in
dec
cmp
and
jnp
pop
xchg
lret
mov
in
sub
sub
push
out
out
adc
mov
mov
or
cs
sub
fisubrs
sbb
test
bound
lods
dec
adc
bound
clc
pop
inc
dec
pusha
fdivl
mov
popa
and
fcompl
push
add
xor
add
dec
push
shlb
push
mov
or
shrl
cmp
push
and
inc
xchg
and
lret
cmpsl
dec
pop
ficoms
adc
pushl
pop
jmp
loopne
and
push
test
sbb
repz
dec
push
adc
mov
enter
repz
cmc
adc
xchg
mov
xchg
popl
adc
sbbl
adc
scas
aas
jmp
repz
sti
loope
jbe
xor
int3
sub
xchg
ret
jp
adc
in
out
in
dec
and
cmp
dec
nop
lds
jns
jno
add
or
cmp
mov
mov
fistps
mull
and
shll
mov
mov
lods
mov
sbb
ljmp
mov
test
aad
or
dec
or
pop
xor
aam
mov
pop
lock
push
xchg
in
scas
imul
mov
xchg
insl
add
fisubrl
js
rorl
icebp
push
cld
int
mov
fistps
mov
jbe
sub
pusha
push
mov
cmc
rcrb
addb
cmc
hlt
xchg
es
out
icebp
lret
pop
jae
nop
mov
in
pop
lods
adc
mov
sarb
xor
pop
cli
mov
or
dec
pop
repz
xor
sub
es
push
pushf
push
inc
shr
mov
or
imul
int3
pop
mov
mov
sub
test
mov
aas
adc
lret
int3
dec
xchg
je
push
cmpsb
ss
adc
cltd
loop
jb
jb
mov
xor
outsb
lea
xchg
fsubr
xchg
jno
imul
mov
aas
packuswb
cmp
xchg
cmc
pop
sbb
mov
scas
xchg
data16
cmp
mov
xor
pop
inc
jnp
mov
jmp
adc
sub
out
dec
cmp
movsl
rcll
gs
aaa
lahf
inc
loop
imul
inc
push
pusha
jg
lret
pusha
cmp
mov
add
mov
xchg
daa
adc
sbb
mov
cltd
jns
sbb
sti
vprotd
out
shrl
das
clc
push
jbe
jno
pop
arpl
mov
cmp
lret
jbe
mov
sti
test
fs
mov
mov
jmp
xor
fldcw
push
dec
xchg
shlb
imul
pushf
mov
lahf
dec
push
dec
mov
cmp
cmp
push
xor
out
in
dec
add
icebp
xchg
xor
movsl
push
dec
out
es
and
push
and
xor
cmpsl
jbe
and
xor
mov
inc
push
adcb
fbld
push
fistps
jmp
adc
leave
xchg
sub
mov
in
mov
jne
jbe
sbb
lds
insb
stos
mov
add
jle
or
outsl
in
loop
inc
call
cli
inc
xchg
lds
aaa
add
and
mov
addl
lret
into
aad
and
or
jbe
xor
outsb
pop
sub
inc
xor
mov
pushf
dec
fisubrs
pop
push
adc
xchg
insb
loopne
xchg
into
pop
mov
enter
fs
xor
mov
cli
subl
adc
das
pusha
mov
mov
sbb
rorb
cmp
mov
cmp
ljmp
pop
leave
sbb
sti
aam
inc
lods
mov
fldt
sub
mov
cmp
lods
enter
fs
popf
push
sarl
ds
push
xchg
jge
rorb
inc
jle
mov
ljmp
mov
out
and
icebp
sub
data16
push
inc
or
filds
mov
sub
cwtl
andl
sbbb
pushf
aad
sbb
xor
fdiv
jo
dec
jbe
mov
mov
pop
xchg
push
lock
fimull
psrlw
pop
call
adc
jp
xor
rorb
loope
xlat
int3
clc
lea
dec
xor
es
out
xor
jno
push
mov
in
pop
insb
popa
mov
jecxz
mov
cmpsb
add
push
xchg
subl
adc
jb
js
aaa
mov
or
jns
xchg
insb
dec
lcall
cmc
imul
outsb
xchg
or
movsb
dec
ja
dec
stc
out
fwait
push
scas
add
sub
mov
imul
xchg
rolb
and
ret
cmc
mov
jecxz
xor
mov
ret
pop
dec
pop
push
push
jo
mov
jmp
inc
dec
dec
add
cmpsl
fwait
sbb
or
push
fsubrl
out
mov
in
mov
fidivl
inc
int
jle
in
roll
aam
jno
jb
mov
xor
mov
les
mov
mov
aas
sub
mov
xor
xchg
ret
mov
dec
pop
lahf
xchg
dec
sub
dec
aaa
imulb
mov
or
sbb
repz
ds
pop
jp
imul
jae
adc
or
popa
push
lds
jnp
push
xchg
ss
xor
fwait
cmp
sub
mov
test
push
dec
jno
icebp
push
push
lock
test
pop
mov
incb
in
shrb
cmc
dec
nop
movsl
into
stc
insb
mov
mov
gs
push
xchg
pop
mov
fistpll
and
sub
push
cmpb
cld
cmpsl
pop
and
cmp
fcoms
pop
out
adc
cwtl
jl
pop
rclb
ret
fdivrs
adc
icebp
scas
mov
insl
mov
call
jnp
mov
mov
ror
pop
xchg
xorb
inc
jmp
mov
mov
aaa
outsl
xlat
ja
pop
push
fstl
pop
jbe
mov
cmp
dec
sti
mov
sarb
xchg
xchg
pop
ret
stos
jo
dec
add
xchg
adc
and
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
fnsave
push
adc
adcb
adc
xchg
mov
jo
leave
psubq
or
mov
mov
inc
int
mov
fimuls
cmp
xor
pop
mov
or
mov
test
xor
clc
loope
mov
cmp
je
in
gs
fiaddl
push
outsl
fld1
xchg
das
stc
sub
mov
jne
in
adc
mov
mov
notb
dec
or
mov
movsl
inc
and
mov
dec
push
wrmsr
add
mov
lds
mov
es
add
mov
div
cmp
xchg
test
popf
mov
vmread
jmp
test
mov
sar
insb
pop
ret
adc
rol
xchg
adc
adc
dec
sbbb
lds
fmuls
push
push
addr16
mov
xlat
scas
sarb
ret
scas
cmp
lret
mov
inc
or
shlb
fsubrl
ljmp
jbe
repz
mov
cmpsb
jo
shrl
cmp
arpl
pop
dec
mov
out
push
push
ljmp
inc
fmulp
test
cltd
pop
lahf
cmp
mov
imul
jg
push
push
nop
iret
je
jge
subb
icebp
xor
add
lods
lea
mov
push
cli
inc
add
mov
rolb
inc
and
std
pop
push
xor
inc
push
push
inc
cltd
icebp
dec
lret
repz
fdivrl
jnp
sarb
xor
fsubrl
clc
add
lret
popa
cmp
outsl
adc
cmpsl
push
push
scas
aad
fnstenv
xor
pop
cmp
mov
rcll
into
div
jmp
fnstcw
sub
adc
fnstsw
mov
xor
int3
mov
sub
ja
sub
imul
movsb
dec
fsubrl
sbb
dec
sub
inc
test
out
xor
pop
fisttps
ret
out
ss
aam
in
xchg
lea
fldl2t
push
and
jge
test
adc
cmp
xchg
and
push
adc
std
lahf
jl
add
in
lret
aaa
nop
mov
pop
int
add
mov
jnp
dec
dec
rorb
xchg
mov
into
add
or
cltd
dec
cmc
int
pop
outsl
mov
out
loope
imul
push
lahf
adc
xchg
loop
fwait
rolb
xchg
std
cmp
fldt
xchg
mov
mov
jmp
das
adc
lret
jge
negl
sti
stc
lret
pop
icebp
or
sahf
or
xor
adc
xor
movsb
arpl
dec
orb
dec
and
sub
loop
sub
and
dec
jmp
add
jg
test
xchg
loopne
sbb
inc
add
cmp
fdivrl
shrl
mov
fdivrl
mov
rolb
xlat
shlb
hlt
mov
int3
or
adc
jb
dec
lods
loop
adc
and
xor
int3
mov
mov
sub
mov
ljmp
lods
iret
mov
xchg
xchg
pop
mov
mov
lcall
outsl
addl
push
aad
lods
inc
out
popa
movsb
mov
push
out
mov
inc
pop
cwtl
fadd
fmul
mov
jg
sarl
inc
push
sbb
or
mov
fwait
lret
pop
jge
incb
jo
shlb
bound
out
jecxz
jnp
nop
adc
jns
push
inc
das
outsb
rcll
test
or
jbe
stos
arpl
mov
dec
xchg
dec
inc
and
pop
ficoms
ret
and
dec
xor
cmp
pop
scas
lret
daa
push
lock
push
xchg
or
mov
add
push
xor
fisubrl
add
out
xchg
div
push
jmp
push
dec
jbe
in
aad
and
cmp
pop
sbb
mov
call
inc
xor
sbb
mov
xor
pushf
sub
push
loope,pt
lahf
iret
mov
sarb
push
shrl
loop
mov
int
or
sub
out
ficompl
jg
adc
jne
mov
cli
sahf
inc
les
push
push
scas
ljmp
pop
mov
lcall
push
sbb
ljmp
imul
je
xor
out
data16
sub
out
cli
cwtl
fldcw
or
mov
cmp
xchg
pop
in
mov
shll
insb
xor
out
add
mov
or
push
add
cmp
mov
mov
pusha
adc
mov
add
into
push
adc
mov
popf
iret
jmp
insl
sbb
pminsw
orb
push
jne
pop
push
addl
icebp
outsl
and
movsb
adc
lcall
into
fbstp
lock
rcr
inc
repz
out
jl
xchg
ja
fptan
mov
sbb
sarb
push
outsl
xchg
sti
push
mov
lea
pop
cs
repz
lret
jp
jbe
daa
pop
ret
cmp
mov
int
jecxz
gs
sbb
lds
aad
insl
hlt
enter
cmp
pop
sbb
push
mov
addr16
pop
pop
mov
xor
clc
orl
idivl
jo
mov
pop
jg
ljmp
jnp
mov
jnp
cs
push
mov
fcoml
push
jno
std
mov
adc
push
test
dec
and
sbbb
adc
push
jg
test
fidivs
test
orl
mov
fs
pop
pop
mov
loopne
popf
std
xchg
or
push
out
scas
push
add
xchg
sub
pop
add
addr16
jle
sbb
test
and
xor
mov
mov
mov
mov
sub
xor
push
inc
push
lcall
sbb
pop
fisubs
xchg
cmp
fnstsw
push
data16
and
stos
xor
jno
or
lret
jae
loope
in
push
sbb
ds
cs
popl
sahf
adc
js
cmp
jge
scas
xor
cmp
mov
imul
mov
xor
xchg
add
sbb
push
push
test
xor
mov
push
lea
pushf
rolb
in
inc
sub
test
xchg
dec
cmp
cli
jl
dec
enter
outsb
add
fisubs
clc
mov
xchg
fldl
shrl
push
jnp
ret
jns
or
fwait
push
xchg
scas
xchg
dec
mov
xor
test
pop
enter
movsb
adc
or
shl
shl
mov
mov
jmp
test
fcoms
fbld
ja
mov
mov
aas
jmp
add
call
mov
es
sub
lds
clc
push
xlat
shrb
sarl
fnop
mov
or
inc
insb
and
sti
rcrl
lock
inc
fistps
sbb
xlat
stos
fistpll
cs
fdivr
inc
mov
lahf
xchg
cmp
dec
test
es
js
add
sahf
or
notb
dec
adc
jg
xchg
dec
imul
pop
cmp
in
push
mov
pusha
lret
push
sbb
cmp
iret
add
xchg
mov
mov
push
mov
outsb
movsl
mov
das
jno
sub
jae
clc
subb
out
sbb
or
mov
lret
xchg
rclb
lock
xchg
rorl
rol
sub
sbb
cmpsl
mov
fistpll
pop
scas
in
pop
xor
aas
daa
pop
xor
flds
cmp
shll
into
mov
fs
stos
movsl
fmul
pop
loope
jne
out
insl
rol
add
lods
xchg
xrelease
mov
outsb
pop
das
jmp
dec
arpl
adc
mov
fwait
ljmp
adc
xor
mov
pop
movsb
xlat
lcall
daa
les
dec
sahf
cld
ret
xor
push
pushf
in
or
stos
clc
data16
sbb
cmp
sahf
mov
mov
jbe
or
pusha
mov
repz
and
stos
mov
pop
mov
jns
mov
hlt
jecxz
xor
hlt
cmp
jne
js
lcall
mov
xchg
lea
xlat
or
daa
sbb
outsb
clc
lock
lods
lods
mov
jmp
inc
adc
mov
dec
xchg
sti
int
mov
out
mov
popa
xchg
fwait
mov
adc
inc
or
mov
pop
cmp
xlat
inc
mov
in
nop
cmp
cmp
lock
sbb
or
imul
mov
out
rcrl
or
push
mov
sub
sbb
cmc
push
mov
test
dec
cmpsl
xchg
mov
mov
cmp
into
pop
pushf
out
mov
movsb
out
pusha
in
mov
out
mov
xchg
bound
dec
insl
clc
sub
lock
jns
icebp
call
ja
xlat
fisubl
jge
and
mulb
push
ja
in
mov
push
pop
arpl
in
cli
pop
leave
fstps
inc
mov
push
adc
adc
jne
xchg
dec
cmp
jmp
popl
jno
adc
scas
rcrl
loopne
aaa
cwtl
incb
push
outsl
jl
jmp
xchg
outsl
std
push
and
fwait
mov
pop
loop
jecxz
fistl
adc
sbb
mov
push
jbe
std
outsb
rorb
rcrb
fwait
mov
int
fs
push
inc
pop
sbb
ljmp
jne
loope
fsubl
jl
fisubl
shlb
sti
imul
and
dec
cmp
adc
jp
adc
pop
enter
mov
mov
xor
mov
push
adc
mov
mov
lds
outsb
sub
sti
mov
or
dec
clc
mov
xchg
addr16
jne
dec
cltd
pop
mov
sbb
ret
add
test
decb
clc
testb
and
adc
iret
std
js
movsl
mov
and
ljmp
sub
scas
xor
push
mov
push
cwtl
int3
push
fcoml
lcall
jbe
dec
pusha
pop
fsubrl
aam
dec
xor
mov
scas
out
repnz
cmc
push
in
mov
push
cmpsb
push
cmp
lds
dec
in
inc
in
xchg
push
shrb
rcrb
fdivl
push
mov
pop
inc
gs
movsl
aam
add
sbb
inc
mov
shl
mov
sbb
shll
and
push
repnz
adcl
jp
push
repnz
enter
jl
sbb
sbb
dec
dec
dec
xor
mov
stos
scas
inc
sbb
rcrl
insb
idiv
incl
les
and
test
mov
nop
jle
xor
and
or
nop
cmp
xchg
imul
int3
repz
sti
hlt
pop
iret
inc
sbb
jo
dec
sbb
cmp
stc
fildl
jno
mov
out
or
mov
lds
cmp
pop
dec
xchg
insl
pop
pushf
dec
push
lea
or
inc
lahf
add
xchg
int3
and
mov
push
lcall
mov
loopne
mov
ret
imul
test
dec
adc
leave
out
pop
ffreep
sub
icebp
xorl
imul
loopne
jae
adc
add
cmp
clc
movl
jge
and
adc
add
je
jge
xor
shl
cmpsl
mov
lret
insb
test
stc
cld
es
stc
pop
aam
or
adc
out
xor
cmpl
jecxz
movsb
fidivrl
inc
and
sub
fwait
les
inc
pop
mov
push
ss
mov
inc
arpl
leave
stos
adc
push
or
clc
aas
xchg
jmp
faddl
pop
loope
sahf
enter
cli
or
inc
test
ja
repz
sbb
sub
xchg
mov
mov
lret
xchg
mov
jbe
movsb
ss
dec
cld
add
pop
xchg
xchg
aaa
adc
sub
or
xchg
mov
ja
push
push
jbe
dec
test
ret
enter
or
shll
push
test
push
aas
adc
int3
movsb
mov
bound
dec
mov
push
imul
ret
dec
imul
std
or
outsb
jmp
dec
mov
ret
sbb
jge
push
lret
outsl
sub
mov
and
fbstp
add
movsb
pop
pop
push
scas
jb
or
mov
mov
test
nop
push
aad
jb
pushf
pop
icebp
add
cpuid
xchg
mov
or
xor
jg
ror
pop
lret
cwtl
xchg
mov
push
add
mov
push
leave
or
pusha
mov
jge
xor
insl
pop
push
icebp
fsubrp
xchg
fs
je
movsl
dec
sbb
cwtl
js
inc
pop
fbstp
ret
xchg
cmp
pop
lahf
adc
shl
scas
in
mov
and
pop
cli
ret
ja
fwait
pop
inc
mov
movsb
mov
jo
cs
sub
mov
in
imul
cmpsl
cmp
sub
sub
sahf
xchg
mov
js
ja
or
test
dec
pushf
in
lcall
push
scas
adc
mov
mov
inc
fneni(8087
inc
mull
or
movsl
pop
sub
jae
stc
repz
movsb
xchg
pop
or
inc
adc
add
clc
and
mov
cmp
ljmp
xchg
pop
mov
test
cli
movb
inc
jg
les
lcall
ds
xchg
lods
cltd
add
xchg
call
or
imul
ljmp
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
jmp
sti
icebp
lods
mov
outsb
fs
mul
dec
lahf
cld
adc
pop
testl
pop
pop
int3
imul
xor
cmp
popf
outsl
aaa
sti
sub
xorb
jne
out
or
cmc
or
fstl
dec
adc
into
lods
call
mov
pop
adc
icebp
inc
fiaddl
inc
lcall
bound
xchg
cs
jmp
or
jo
aam
mov
dec
jmp
push
hlt
dec
cmpsb
cmp
mov
je
mov
add
jnp
sbb
xchg
xchg
push
xchg
dec
insb
fnstcw
xlat
xor
popa
pop
les
popa
sub
ds
sti
jle
aam
mov
cmp
call
insb
add
or
test
xchg
adc
cmp
fbld
iret
repz
mov
mov
imul
stos
outsb
push
bnd
pop
adc
adc
scas
jge
cli
lods
add
cmpl
packuswb
xor
insb
lds
sub
fucomi
jl
sbb
stc
jp
push
repnz
push
mov
lods
arpl
lods
dec
inc
fidivs
sbb
sub
aad
inc
or
pusha
pop
jb
dec
add
add
inc
popf
push
lock
mov
sahf
testb
xchg
cmp
inc
sbb
xchg
iret
ds
adc
fsubs
push
test
mov
sbb
insb
lds
pop
mov
cmp
sub
dec
mov
push
popf
les
loopne
sahf
pop
sbb
cld
ret
leave
mov
mov
sbb
lret
lds
lods
cld
ret
xor
orl
inc
repz
enter
or
mov
inc
xor
dec
pop
ss
jno
mov
ja
jmp
mov
scas
adc
mov
add
or
out
cmp
es
push
je
sbb
loope,pt
inc
xchg
inc
push
inc
adc
rclb
mov
pop
adc
mov
mov
nop
je
sbb
mov
add
clc
imul
mov
adc
in
inc
adc
adc
popa
gs
jb
cltd
jne
shrl
fidivl
pop
scas
cli
out
jg
xchg
add
cld
js
and
and
test
push
loope
stos
orb
push
cld
ss
ljmp
adc
fwait
divb
mov
and
push
push
xchg
inc
pop
sub
xorl
bnd
scas
mov
test
cmp
in
pop
insb
pop
loop
adc
xchg
inc
sub
mov
inc
push
push
mov
fcomps
or
stos
jle
sub
scas
cltd
loopne
aad
cmc
add
adc
pop
insb
mov
cmpsb
pop
xor
lods
pop
ss
fs
cmp
loop
jo
fs
int3
push
vmovsd
jp
mov
cmp
out
pop
fwait
adc
pusha
repz
xchg
test
rcrb
jl
or
call
fchs
mov
xchg
leave
test
add
jo
mov
jle
mov
sub
pop
add
sti
adc
mov
or
in
test
out
adc
lret
leave
xor
xorb
shlb
clc
xor
push
xchg
sub
inc
idivb
clc
or
xchg
sub
dec
shrb
sahf
xorb
mov
xchg
inc
call
movb
les
scas
mov
xchg
or
jecxz
in
movsl
out
push
sbb
enter
comiss
jnp
pop
call
xor
in
adcb
insb
push
xchg
inc
xchg
add
movsl
insb
shll
push
xor
mov
aad
loope
imul
repnz
mov
mov
fstl
push
cs
pop
sbb
cli
mov
lock
push
dec
outsl
packuswb
fcomps
push
push
sub
mov
jo
mov
int3
add
mov
mov
mov
mov
test
add
les
fmulp
data16
and
outsb
leave
std
hlt
hlt
cmp
xor
mov
push
or
push
lock
xchg
fnstcw
pushf
lret
rorb
stos
out
mov
out
and
data16
out
jne
push
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
cmp
jae
xorl
shrd
movl
shr
ret
adcl
mov
xorl
xor
sbbl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
movl
movl
jmp
movl
notl
jle
push
pushl
call
notl
andl
andl
sbbl
adcl
movl
mov
incl
mov
adcl
movl
mov
movb
sbbl
movb
and
movb
adc
movzbl
andl
mov
sbbl
sub
addl
imul
movzbl
andl
push
and
andl
mov
addl
movb
movb
andl
movb
movb
negl
mov
mov
negl
add
adcl
imul
sbbl
mov
subl
or
mov
sbbl
and
mov
movl
cmp
ja
mov
mov
mov
or
mov
mov
cmpl
not
mov
movl
jmp
movl
jb
push
push
call
dec
xor
add
mov
add
adc
xorl
xor
adc
mov
movzwl
addl
movzwl
sbbl
shr
notl
or
sub
mov
subl
movb
notl
movb
mov
orl
mov
xor
xorl
add
mov
or
mov
movzbl
and
cltd
sub
push
cmpl
not
mov
mov
jmp
mov
je
push
push
call
mov
adc
xor
neg
adcl
or
adc
pop
adcl
idiv
mov
addl
movb
addl
movb
xorl
mov
mov
negl
add
movzbl
movzbl
xorl
cltd
idiv
mov
movl
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
and
push
cmpl
not
mov
not
not
jmp
movl
movzbl
je
push
pushl
pushl
push
pushl
call
sbb
adc
adc
subl
add
push
adc
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
pushl
push
pushl
push
push
call
sbb
adc
xor
mov
mov
sub
sub
xor
add
xor
or
sub
and
addl
addl
sbb
mov
shrd
shr
cmpl
movl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
push
pushl
call
addl
orl
mov
add
mov
add
mov
sub
mov
mov
mov
sub
sub
xor
movzwl
sbb
mov
neg
xor
sub
or
mov
mov
cmpl
mov
mov
jmp
movl
mov
jne
call
dec
addl
xor
sub
inc
andl
mov
mov
adc
shl
cmpl
mov
movl
movl
jmp
mov
movzbl
jle
push
push
call
mov
adc
mov
adc
xor
inc
xor
or
or
notl
add
movl
mov
cmpl
mov
mov
jmp
mov
jge
pushl
push
pushl
pushl
call
andl
or
add
xor
or
shrd
xor
orl
shr
xorl
mov
and
mov
xor
or
or
cmpl
not
mov
mov
movzwl
jmp
mov
mov
jge
push
pushl
call
movzwl
xor
movzwl
add
mov
or
mov
sub
or
addl
xor
mov
mov
and
mov
mov
mov
mov
inc
mov
xor
mov
mov
mov
mov
cmpl
mov
movl
jmp
movl
movl
jle
pushl
push
pushl
pushl
call
not
andl
adc
sub
xor
shl
orl
xor
and
shld
sub
shl
inc
mov
orl
xor
addl
xor
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
cmpl
movl
movl
not
jmp
mov
movzwl
jle
push
push
push
call
sub
adc
or
sbb
adcl
sbbl
xor
adc
mov
mov
mov
and
mov
xor
shld
sbbl
shl
xor
xor
cmp
jne
movl
cmp
movl
je
cmpl
mov
movl
jmp
mov
not
jbe
push
pushl
push
pushl
call
xor
mov
add
adc
and
adc
not
mov
subl
mov
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
pushl
pushl
call
subl
mov
add
add
add
xor
shl
mov
xorl
xor
shr
adcl
or
mov
mov
movzwl
or
mov
mov
and
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
call
and
orl
subl
subl
sbbl
orl
and
cmpl
movl
movl
movl
movl
jmp
movl
je
push
call
sbbl
movl
orl
andl
adcl
sbbl
xor
subl
cmpl
movl
movl
movl
jmp
movl
not
jb
pushl
pushl
call
xorl
sbb
add
addl
subl
movl
and
push
pop
sbbl
sub
mov
add
mov
lea
mov
mov
mov
sub
and
mov
xor
or
xor
mov
xorl
xor
xorl
shr
subl
shl
or
add
mov
cmpl
movl
mov
jmp
mov
mov
jae
push
call
add
sbb
or
movl
and
movl
add
mov
mov
andl
xor
movl
shr
shl
adcl
or
push
orl
lea
adcl
push
adcl
lea
push
call
cmpl
mov
movl
jmp
movzbl
jbe
push
push
pushl
pushl
pushl
pushl
call
orl
addl
movzwl
sub
mov
movzwl
sub
mov
sub
movl
sub
mov
mov
subl
xor
subl
shr
mov
xor
shl
or
cmpl
mov
mov
mov
jmp
movl
mov
jne
call
add
sub
add
adcl
mov
or
movzwl
or
push
lea
sub
push
or
mov
mov
sbb
shrd
sbb
shr
xor
add
xor
or
sub
imul
mov
notl
mov
xor
addl
xor
or
xorl
lea
adcl
push
adcl
shl
subl
call
mov
mov
xor
shl
cmpl
mov
movl
mov
jmp
movl
jne
push
push
call
xorl
xorl
add
orl
and
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
push
call
mov
mov
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
adcl
or
movl
mov
jne
sub
mov
adcl
mul
ret
push
mul
cmpl
movzbl
movl
push
pop
jmp
mov
mov
je
push
push
pushl
push
push
push
pushl
call
mov
sbb
mov
not
movzwl
adc
mov
mov
add
mov
xorl
sbb
mov
adc
mov
xorl
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
pushl
call
test
jg
movl
movl
movl
push
dec
movl
mov
xor
mov
andl
push
notl
push
orl
push
call
sbbl
push
andl
push
and
and
push
subl
push
andl
call
cmpl
mov
movzwl
notl
movl
jmp
movl
jbe
push
push
pushl
call
neg
subl
dec
sbb
subl
xor
or
mov
sub
or
mov
mov
xor
or
cmpl
movl
not
jmp
mov
jg
push
push
push
push
call
sbbl
xor
movzwl
and
orl
xor
mov
xor
or
mov
movl
movl
or
movl
sbb
movl
mov
xor
or
sub
add
movl
cmpl
mov
mov
jmp
mov
movl
jg
push
push
pushl
call
dec
xor
inc
adc
movl
xor
add
xor
mov
adcl
movl
cmpl
mov
movl
jmp
mov
mov
jg
push
push
call
addl
mov
sbb
sbbl
mov
mov
sub
xor
xor
or
xor
movl
or
sub
sbb
mov
cmpl
mov
movl
notl
jmp
mov
movzbl
jg
pushl
call
xor
movzbl
sub
mov
mov
sub
add
adc
xor
mov
mov
mov
andl
or
or
mov
or
mov
sub
mov
mov
sbb
or
mov
xor
subl
xor
addl
and
adcl
and
cmp
movl
jne
cmp
jne
movl
decl
movl
xor
movl
adc
movl
xor
or
mov
sub
xor
movl
mov
and
mov
sub
adc
mov
orl
imul
subl
and
notl
imul
mov
xorl
pushl
or
imul
adc
xor
mov
movl
div
mov
xor
cmpl
movl
notl
mov
jmp
movl
je
pushl
pushl
push
pushl
push
call
sbb
adcl
or
mov
sbb
mov
add
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
neg
mov
mov
xor
sbb
sub
sbb
cmpl
movzwl
mov
movl
jmp
movl
jl
pushl
call
sbb
or
addl
and
sub
xor
add
mov
sub
dec
mov
sbbl
sub
addl
or
xor
adcl
pushl
pushl
addl
call
addl
pushl
call
movl
cmpl
mov
movl
not
jmp
mov
mov
jge
pushl
call
and
add
adc
xor
movl
adc
movl
xorl
movl
movl
movl
mov
mov
xor
mov
mov
subl
add
movzwl
mov
adc
add
mov
add
adc
and
xorl
mov
orl
and
mov
movl
movl
subl
movl
orl
movl
dec
cmp
jne
and
movl
mov
xorl
mov
subl
movl
mov
subl
call
andl
lea
mov
cmpl
movl
movzbl
jmp
movl
jb
push
call
adc
sub
and
andl
mov
xor
add
sub
imul
xor
sub
lea
mov
sub
mov
sbb
mov
add
mov
mov
decl
xor
shl
and
shr
movl
or
mov
or
mov
mov
cmpl
movl
mov
movl
jmp
mov
movl
ja
pushl
push
push
pushl
call
and
xorl
add
sub
addl
addl
cmpl
not
mov
jmp
not
jae
push
call
adc
subl
and
xor
add
adc
and
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
pushl
call
or
andl
and
sub
adc
mov
and
mov
mov
mov
shrd
shr
and
mov
not
mov
movl
xor
xor
andl
or
mov
sbb
mov
mov
orl
push
addl
pushl
subl
lea
andl
push
adcl
shl
orl
call
addl
lea
addl
push
mov
mov
sbbl
lea
orl
push
mov
orl
lea
adcl
mov
adcl
mov
mov
push
call
subl
push
andl
push
pushl
xorl
call
andl
mov
or
mov
and
mov
cmpl
mov
movl
mov
jmp
mov
jg
push
pushl
push
push
push
call
sbb
xor
or
mov
adc
xor
adc
mov
shr
not
shl
or
sub
mov
or
xor
mov
notl
lea
xor
mov
lea
movzbl
or
mov
cmpl
mov
movl
movl
mov
jmp
movl
movl
je
push
call
or
add
mov
or
mov
xor
inc
add
not
mov
mov
and
mov
cmpl
mov
mov
mov
jmp
movl
mov
jne
push
call
or
sbb
addl
add
orl
mov
mov
sub
sub
movzwl
sbb
mov
and
sub
cmpl
movzbl
mov
movl
jmp
movl
jae
pushl
call
add
add
movzbl
add
add
movl
add
lea
andl
xor
cmpl
mov
mov
movl
jmp
mov
jg
push
pushl
pushl
push
push
call
or
adc
xor
mov
adc
mov
movl
movl
movl
cmpl
movl
not
jmp
movl
not
jle
push
call
subl
not
orl
and
and
mov
or
mov
movl
mov
mov
add
mov
not
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
cmpl
movl
mov
movl
jmp
movl
jbe
push
pushl
push
pushl
push
call
adcl
sbb
sub
adc
mov
xor
mov
mov
mov
sub
xor
movl
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
push
pushl
pushl
call
adcl
notl
dec
add
subl
sbb
not
sub
movl
mov
subl
mov
xor
xor
mov
xor
and
adc
mov
sub
xor
or
and
cmpl
mov
mov
not
jmp
mov
jl
push
push
call
inc
xorl
and
sub
sub
add
mov
add
xor
mov
or
movl
movl
mov
sbb
mov
add
xor
sub
adcl
mov
or
imul
adc
xor
mov
or
div
subl
sub
and
mov
movl
sub
movl
movl
mov
mov
adc
movl
cmpl
movl
mov
movzbl
jmp
mov
movzbl
jg
pushl
push
push
push
call
or
xor
or
or
mov
sub
add
inc
movl
mov
sbb
mov
movl
movl
mov
xor
mov
imul
adc
add
xorl
and
adc
sub
cmpl
mov
movl
mov
mov
jmp
mov
je
pushl
push
push
call
add
adc
neg
and
not
mov
sub
or
mov
mov
cmpl
mov
movl
mov
movl
jmp
movl
jne
push
pushl
push
call
inc
or
dec
sub
adc
adc
or
add
sub
add
mov
xor
adcl
div
not
mov
sub
and
mov
add
addl
mov
cmpl
mov
mov
mov
jmp
mov
mov
jle
push
push
call
add
add
sbbl
subl
xorl
movl
movl
dec
movl
cmpl
movzbl
mov
jmp
mov
jne
pushl
pushl
pushl
push
call
sbb
orl
movzwl
adc
add
mov
mov
add
mov
xor
add
mov
andl
xor
movl
div
add
and
mov
or
cmpl
movl
mov
jmp
movl
movl
jg
push
push
push
call
mov
sbb
mov
add
mov
movzbl
sub
subl
decl
adc
cmpl
not
mov
jmp
mov
movl
jae
push
push
push
push
call
xor
sbbl
mov
sbb
mov
inc
mov
mov
sub
sbbl
cmpl
mov
movl
mov
jmp
mov
movl
jg
pushl
call
mov
adc
mov
mov
adc
mov
mov
xor
xor
or
mov
sub
sub
adcl
mov
and
movl
movl
movl
and
movl
mov
sub
mov
orl
xor
sbb
xor
push
xor
pop
orl
div
mov
andl
xor
div
mov
or
sub
xor
mov
xor
movl
inc
mov
movzwl
sbb
mov
xor
div
imul
adcl
xor
xor
sub
imul
xor
dec
mov
adc
movl
cmpl
movzwl
movl
mov
jmp
movl
mov
jg
pushl
push
pushl
pushl
pushl
pushl
push
push
pushl
push
push
call
adc
xor
mov
adc
mov
mov
xor
mov
xor
or
xor
mov
movzwl
sub
or
or
movl
movl
cmpl
mov
movl
movzwl
jmp
mov
movl
ja
pushl
call
xor
dec
adc
movzbl
sbb
xorl
mov
and
mov
xor
subl
div
mov
sub
mov
orl
imul
xor
add
mov
or
add
xor
sbb
mov
sub
movzbl
or
mov
mov
movl
cmpl
notl
mov
mov
mov
jmp
notl
mov
jg
pushl
call
notl
adc
adc
sbb
movl
mov
or
and
notl
and
or
xor
cmpl
mov
mov
movl
jmp
movzwl
mov
jg
pushl
push
pushl
call
movzbl
sbb
add
negl
sub
dec
mov
movl
movl
movl
cmpl
movl
movl
movl
mov
jmp
mov
jb
pushl
push
push
call
mov
and
mov
neg
xor
andl
and
movl
mov
xor
and
add
xor
add
or
or
cmpl
notl
movl
mov
movl
jmp
movl
jle
push
pushl
push
push
pushl
pushl
pushl
push
call
adc
mov
add
or
sub
neg
sbb
sub
mov
inc
movl
cmpl
mov
movl
mov
jmp
mov
mov
jne
push
pushl
call
decl
decl
sbbl
and
movl
movl
movl
xor
mov
shr
xorl
sub
cmpl
movl
mov
mov
mov
jmp
mov
movl
jbe
pushl
pushl
call
add
xorl
mov
sbb
and
adc
or
xor
mov
lea
sbbl
push
adcl
call
addl
mov
adc
or
cmpl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
sub
mov
xor
or
sub
imul
negl
sbbl
and
mov
orl
or
xor
and
lea
adc
mov
movl
movzwl
xor
movl
movl
xor
xor
or
movl
movl
and
movl
cmpl
mov
not
movl
movl
jmp
mov
notl
jg
push
call
sbb
orl
xorl
add
xor
xorl
xor
xor
xor
mov
sub
or
movl
sbbl
movl
mov
mov
mov
sub
xor
mov
sub
and
cmpl
movzbl
movl
jmp
movl
movl
je
push
push
push
push
push
call
sub
or
notl
sub
xor
add
add
mov
sbb
sub
and
sub
or
mov
sbb
lea
mov
mov
add
mov
add
mov
mov
imul
sbbl
and
cmpl
mov
mov
mov
movzbl
jmp
notl
mov
jbe
pushl
pushl
pushl
push
pushl
pushl
call
xorl
add
movzbl
adc
not
or
imul
mov
lea
mov
addl
movl
movl
movl
movl
mov
sbb
mov
or
mov
movl
xor
andl
xor
sbbl
mov
call
cmpl
movl
movl
movzbl
movzwl
jmp
movl
movl
jb
call
sub
and
and
add
adc
subl
sub
sbbl
mov
mov
sub
mov
mov
adcl
xor
xor
mov
call
xorl
or
or
sub
mov
or
mov
andl
xor
xorl
xor
mov
call
mov
cmpl
movl
mov
movl
jmp
movl
jbe
call
or
xor
inc
or
andl
cmpl
notl
mov
jmp
mov
movl
je
push
pushl
call
mov
mov
and
sbb
not
mov
sub
sbb
or
and
mov
movl
mov
mov
xor
xorl
xor
addl
mov
mov
xor
mov
xor
or
mov
sub
mov
movl
mov
mov
movl
call
cmpl
mov
movl
mov
jmp
movl
movl
ja
push
push
call
and
addl
adcl
movzbl
xor
or
mov
adcl
or
mov
or
subl
push
push
subl
push
andl
push
orl
call
movzbl
mov
cmp
movl
jne
mov
sub
mov
mov
xorl
mov
subl
xor
xorl
xor
mov
call
adc
mov
add
mov
xor
mov
mov
incl
xor
addl
xor
xorl
mov
xorl
call
or
and
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
notl
jmp
movl
mov
jle
pushl
push
push
pushl
call
negl
addl
orl
adc
sbbl
sbbl
not
push
push
not
mov
or
movl
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
sbb
and
or
xor
xor
mov
sub
add
add
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
je
add
mov
mov
pop
pop
movl
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
xor
mov
addl
xor
and
shl
ret
xor
xor
ret
