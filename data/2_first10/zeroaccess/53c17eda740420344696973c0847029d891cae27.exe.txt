push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
xchg
out
push
sub
push
push
push
dec
scas
adc
test
cmp
sbb
dec
popf
add
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
inc
rcrb
push
clc
xchg
ds
test
jmp
inc
nop
jmp
daa
insb
xchg
test
sar
or
out
mov
pop
inc
push
movsl
mov
cmp
cwtl
push
sahf
in
int
sub
xor
mov
add
mov
adcl
data16
xchg
add
mov
jno
test
xor
inc
jo
lahf
or
out
pop
pshufw
and
out
mov
sbb
and
jns
and
mov
mov
or
mov
lds
inc
mov
insb
push
cmp
and
inc
dec
mov
pop
iret
inc
xor
sbb
inc
fldlg2
pop
cwtl
imul
lods
fwait
dec
jno
jae
pop
dec
lods
mov
sub
daa
fs
mov
dec
lea
jg
add
sbb
repnz
js
pop
loopne
pop
out
mov
das
xor
xchg
mov
cwtl
mov
ret
cld
fs
xor
outsl
outsb
cmp
xor
fldenv
scas
mov
cmpsb
in
dec
hlt
mov
add
cmp
xor
fsubrs
dec
jecxz
popf
push
jns
pop
out
mov
or
push
jbe
mov
jmp
imul
dec
pop
ljmp
mov
push
out
inc
inc
notb
cmp
or
sub
stc
mov
push
shl
ja
nop
test
or
pop
arpl
xchg
inc
mov
stos
fs
pushf
sub
jp
mov
push
push
dec
sbb
lret
pop
out
adc
lret
fyl2x
cmc
cmpb
aas
movsl
mov
rclb
push
lea
stos
pop
jmp
inc
add
fwait
push
jg
int
fs
hlt
inc
imul
stos
and
adc
inc
pop
mov
jp
ds
add
nop
clc
fisttpll
icebp
jb
ret
stos
ja
pusha
popa
add
gs
pop
sbb
dec
std
inc
cld
dec
push
pop
js
and
lds
add
cmp
les
orb
and
sub
add
mov
lahf
add
lcall
mov
xchg
push
shlb
mov
pusha
xor
scas
shlb
xchg
xor
repnz
mov
push
xor
dec
xchg
shl
jecxz
mov
push
pop
sub
push
push
sar
out
push
dec
ret
dec
ja
push
xchg
leave
add
arpl
xor
addb
add
mov
inc
push
xor
jge
xor
fists
sub
sti
jbe
data16
orb
sub
xor
in
and
cmpsb
enter
incb
pop
dec
movsl
sahf
adc
lea
test
jmp
test
xchg
push
push
scas
adc
aaa
push
iret
in
stos
cli
jecxz
xchg
outsb
daa
leave
mov
mov
int3
mov
loopne
sbb
cs
imul
imul
sbb
js
enter
sbb
add
nop
jmp
iret
add
bound
loop
mov
arpl
dec
pop
mov
leave
js
mov
mov
fdivs
test
cltd
push
mul
fdivp
fdivl
clc
pop
cltd
ja
shlb
sub
push
jl
mov
andb
sbb
sub
outsb
xor
repz
adc
gs
xor
rorl
movsb
enter
insl
divb
in
inc
dec
in
repnz
int3
cli
push
xor
mov
movb
or
xchg
jmp
push
pusha
mov
adc
cmp
mov
sub
pop
push
xchg
mov
popf
xor
inc
or
ficoml
sbb
inc
pop
mov
or
mov
pop
test
fbstp
pop
push
aaa
dec
push
cmpsl
sub
jae
or
ljmp
std
mov
and
push
dec
mov
ror
mov
imul
xlat
or
sbb
bound
mov
out
in
inc
jnp
jecxz
sbb
insb
add
mov
icebp
or
mov
mov
add
or
mov
js
sbb
inc
pop
mov
add
push
sbb
mov
mov
fdivs
cmc
test
shlb
xor
sahf
insl
in
bound
mov
jp
pop
leave
mov
js
mov
loop
fistpll
repnz
xchg
repnz
test
ja
sub
add
inc
movsl
mov
jg
push
shl
loop
aad
lret
lds
jbe
jnp
scas
pop
push
push
call
stos
les
jo
push
movsb
sub
jp
out
das
lods
jb
das
faddl
jns
enter
dec
push
sbb
cld
test
adc
mov
xor
add
iret
add
add
or
enter
cmp
fs
sbb
xchg
mov
aaa
xchg
sbb
push
es
mov
mov
push
xorl
sbb
jb
push
lock
in
hlt
fwait
mull
ljmp
ficomps
xor
stc
and
fimuls
inc
lea
pop
sete
out
nop
pop
sbb
lea
pop
lds
mov
mov
hlt
les
test
dec
or
fs
dec
out
jns
sub
cmp
mov
fnstcw
mov
imul
pop
jg
dec
inc
sbb
scas
incb
enter
loopne
int3
push
repnz
je
mov
andl
aaa
mov
and
cmp
push
jbe
std
and
loopne,pn
push
lds
inc
mov
orb
cli
jns
orl
sbb
mov
pop
int3
mov
push
xchg
stos
sti
cmc
adc
inc
das
fwait
daa
mov
out
sbb
mov
mov
pop
xorl
inc
dec
outsl
lds
dec
xlat
lea
add
stc
std
out
fiaddl
xchg
add
xchg
clc
pop
push
cmp
inc
movsl
aad
push
push
ss
mov
xchg
xchg
add
test
mov
jae
aad
dec
repnz
rcr
jo
popa
pop
dec
loop
push
cli
movsb
in
push
lds
push
shrb
daa
iret
mov
test
faddl
int
mov
mov
insb
arpl
call
sbb
mov
cmp
daa
or
leave
mov
fadd
dec
clc
out
das
nop
jge
xor
fsts
pop
add
std
xchg
mov
xchg
pop
scas
mov
inc
fwait
xor
nop
jb
xor
add
kmovw
jle
scas
fs
xor
jecxz
popa
sbb
sbb
dec
loope
lahf
subb
scas
and
cmpsl
incb
sub
xchg
popf
inc
mov
cmp
cmp
es
and
movsl
iret
lds
xchg
call
mul
ja
scas
dec
jg
inc
mov
insb
pusha
in
call
fidivs
fstpt
lods
std
fs
ficompl
xor
adc
or
pop
xor
xchg
push
gs
adc
lahf
addr16
fwait
rol
cmp
in
jecxz
add
dec
fisttpll
std
leave
jecxz
fcoms
daa
adc
and
mov
xchg
mov
enter
mov
push
jp
iret
insb
xor
ret
outsb
push
push
mov
cmpsl
fsubrl
sub
cmp
outsb
dec
ret
xchg
addr16
cmp
leave
test
jns
xchg
outsl
imul
fisubrl
out
jo
and
cmpl
fs
into
ficoml
fmul
ja
jno
repz
dec
sbb
cld
xchg
inc
movl
sbb
xchg
jns
pop
imul
dec
xchg
push
sub
jg
dec
out
push
add
sub
add
fs
or
sbb
fmuls
dec
xor
xchg
and
fwait
dec
out
daa
push
mov
mov
sti
mov
repz
and
pop
les
insl
ret
xchg
sub
cmpsb
inc
and
jnp
outsb
xchg
mov
mov
ss
push
xor
xchg
ret
pop
pop
inc
xchg
dec
xchg
sub
loope
push
xchg
out
xlat
xor
mov
adc
addb
push
jo
jo
sbb
pop
fisubs
scas
fisttpl
xchg
out
add
in
outsb
dec
mov
cld
cld
xchg
fwait
pop
fisubrl
inc
xor
ds
mov
int3
push
pop
cli
jl
adc
mov
and
mov
sbb
mov
push
push
loop
adc
sahf
fwait
mov
movsb
jp
das
jg
cmp
pop
pop
lods
cmpsl
movl
ret
aad
loopne
jne
xchg
cmc
sbb
sti
out
idivl
pop
out
sahf
jmp
add
fldcw
push
jmp
fs
sub
rol
addb
pop
mov
neg
dec
xor
mov
nop
or
jecxz
fisubl
int
das
mov
int3
or
fwait
pop
push
push
push
cmp
dec
fidivrl
rcrb
outsl
xor
adc
lahf
push
add
lcall
ret
loop
fnstsw
push
addr16
mov
adc
inc
cltd
clc
xchg
jl
push
xchg
add
and
xchg
xchg
add
stos
or
fcoml
cli
incb
pop
xor
mov
scas
out
inc
mov
push
pop
das
scas
push
xchg
loopne
test
push
imul
sbb
add
jmp
stos
pop
cmpsb
adc
mov
aad
gs
add
mov
popa
loopne
pop
cmc
and
mov
xchg
sti
lea
adc
std
add
adc
push
icebp
mov
jmp
cmp
leave
stc
loop
jmp
jnp
jp
jecxz
dec
sbb
sub
or
repz
dec
jno
pop
cmpsl
js
push
pop
and
pop
out
jo
cli
inc
mov
pop
mov
xlat
pop
jno
rclb
xor
push
movsl
xor
mov
push
outsb
mov
mov
clc
adc
adc
aas
rorb
pop
imul
or
xor
les
daa
rclb
fcomi
cmp
sbb
and
jne
xor
pop
aam
pusha
mov
push
or
mov
mov
mov
sub
dec
lret
pop
xchg
gs
lret
cmp
inc
imulb
popa
les
mov
stc
xchg
outsb
pop
mov
repz
inc
sbb
or
pop
or
ret
popw
xor
out
test
addr16
push
push
sub
cwtl
sbbb
loope
sbb
js
mov
mov
sbb
fisttps
xor
inc
sahf
fwait
ds
pop
loope
jb
and
and
xchg
lcall
jnp
mov
fstpl
mov
repnz
jge
inc
arpl
mov
clc
and
repz
out
mov
xlat
in
stos
enter
sub
pmaxsw
cmc
push
adc
or
mov
stos
out
mov
ja
pand
sbb
imul
fsub
arpl
cli
push
or
xchg
xchg
outsl
mov
jbe
sub
pop
loop
fbld
xchg
cmpl
inc
add
movsl
cmp
sahf
movsl
cmp
mov
call
dec
pinsrw
stc
sub
jne
xor
xor
mov
sbb
pop
jmp
mov
dec
sbbb
mov
aam
sub
push
pop
jge
mov
dec
dec
arpl
jno
fstp
fisubl
mov
sbb
mov
dec
shll
xchg
orb
gs
or
call
mov
or
lahf
sub
test
out
shlb
sahf
mov
xlat
fcmovbe
std
dec
pop
cmp
ficompl
int3
leave
rcrb
mov
roll
cs
imul
movsl
jge
dec
out
jle
cmp
xlat
jno
ljmp
pop
pop
xchg
int3
adc
out
test
pop
dec
xor
dec
rorl
je
leave
das
roll
pop
pop
pop
push
xchg
add
scas
jg
mov
ds
sahf
in
inc
pop
data16
push
mov
push
fcomps
lods
ljmp
loope
mov
add
lret
rclb
dec
out
push
icebp
testb
push
pop
mov
sbbb
mov
xor
and
je
jae
nop
push
hlt
shlb
sub
fwait
mov
fstpt
mov
add
push
fsubs
cwtl
cmpsb
add
xor
mov
inc
les
iret
out
or
rorb
stos
imul
xor
dec
pop
pop
mov
pop
testl
cs
in
andl
mov
les
js
jno
or
cwtl
dec
jl
dec
imul
jge
mov
dec
cwtl
cmp
cmpsb
shll
cltd
cs
mov
push
or
enter
in
jnp,pt
cwtl
loopne
xchg
das
add
jno
pop
and
sbb
push
test
fs
add
dec
int3
xchg
sbb
hlt
shr
lahf
pop
popf
aad
dec
xor
push
push
adc
sub
enter
dec
add
adc
pop
adc
sub
jmp
adc
or
insl
inc
js
inc
mov
push
push
in
out
repz
jo
push
xchg
movsb
jmp
push
xchg
out
icebp
faddl
imul
or
popa
mov
popf
in
loope
test
jb
jle
mov
push
scas
or
add
inc
rorl
pop
pop
mov
push
outsb
divl
xchg
ss
adc
sub
xor
or
mov
das
or
pop
popa
pop
ss
mov
outsb
sub
fs
lods
cli
and
cmpsl
mov
push
bound
fs
inc
in
cli
inc
adc
movsl
sbb
adc
in
daa
shl
sbb
jmp
fstps
jg
push
stos
jle
mov
cmp
popf
jne
ss
add
xchg
mov
or
addr16
adc
sub
cmc
call
cmpsl
adc
enter
push
xor
dec
xor
or
fbld
roll
mov
mov
jb
mov
mov
out
xlat
jo
sar
js
outsb
push
and
iret
ret
loop
ret
mov
sbb
aam
sub
cmp
fiaddl
in
sahf
xchg
xchg
orl
mov
insl
stos
stc
mov
fistl
xlat
pop
push
test
xchg
aad
pusha
dec
test
loop
lret
scas
imul
cmp
sbb
and
int3
jno
push
std
loop
repz
leave
js
xor
adcb
insb
idivb
adc
inc
imul
test
or
or
xor
in
or
mov
scas
cli
dec
imul
inc
lcall
sub
push
push
push
ss
mov
mov
push
aaa
insl
xchg
fiaddl
sub
mov
out
pop
jne
xchg
daa
xor
cmp
ror
xchg
sub
sbb
xchg
mov
arpl
adc
xchg
pop
and
add
icebp
enter
lds
xchg
ds
push
cwtl
xchg
sub
and
and
sarb
ja
add
pop
pop
test
outsb
add
ret
mov
ja
addb
dec
xor
leave
fdivl
lret
mov
mov
mov
movsb
arpl
and
movb
shrl
pushf
jo
push
xor
jae
lcall
add
dec
and
sbb
mov
adc
stos
dec
loopne
mov
std
mov
scas
jge
jae
dec
or
nop
neg
test
dec
mov
xor
dec
dec
or
fsts
arpl
sarb
sub
adc
test
xor
nop
sbb
daa
aaa
gs
sahf
outsl
xchg
ljmp
jbe
pusha
das
repnz
jae
loope
xchg
mov
mov
mov
push
in
adc
shrl
shll
inc
jno
or
lea
xlat
sbb
mov
dec
jmp
mov
and
popa
mov
push
mov
aaa
test
jo
cmp
cld
push
adc
cmovns
insb
pop
pop
sub
cmp
mov
scas
inc
fstps
mov
jb
pop
data16
insl
mov
xlat
fstpl
jmp
repnz
jnp
add
or
sar
mov
insb
cmpsl
lods
or
lret
or
in
jle
insl
cltd
xor
xchg
cmc
outsb
xor
push
frstor
clc
sub
or
gs
cmp
inc
fisubs
ret
xor
sub
jge
aas
shrl
mov
test
push
pop
bound
scas
fdivrs
mov
hlt
stc
lret
ror
ret
mov
add
add
ret
mov
insb
jb
lods
cmp
ds
cmp
pop
int
fldt
stc
movsl
inc
jecxz
fwait
xchg
out
mov
decl
add
mov
into
push
and
sarl
scas
mov
sbb
mov
rolb
mov
inc
xorb
fildl
push
cmpb
cltd
cwtl
push
icebp
fnstsw
dec
testb
fcmovnb
outsl
dec
dec
ret
into
test
dec
call
rcll
andb
mov
int
movsl
pop
leave
add
mov
push
xor
sti
cmp
js
es
add
pushf
add
inc
daa
lock
or
push
push
lock
int
mov
lahf
fs
xchg
iret
xchg
jp
jns
cwtl
in
orb
adc
mov
gs
fsub
orb
dec
pop
into
xchg
lahf
push
mov
push
adc
mov
bound
jns
sahf
inc
movsl
push
cmp
xchg
sbbl
push
popa
js
xor
movsb
popa
ljmp
sbb
into
push
jl
sbbl
sub
in
sub
push
jmp
adc
enter
int
test
mov
mov
jo
or
sub
sub
dec
cmp
sub
inc
lds
lods
or
and
mov
imul
lods
cmpsb
jo
mov
jmp
sub
jmp
add
daa
add
mov
add
and
inc
movsb
cltd
xor
clc
in
repnz
inc
mov
dec
addr16
mov
outsb
pop
inc
in
mov
gs
pop
movsb
push
fs
push
jmp
xor
push
or
lock
loop
pop
fisubrl
sahf
cmpsl
and
sub
xor
mov
inc
out
fdivl
lcall
fldenv
stc
notb
scas
fs
popa
pop
mov
mov
and
xor
jle
popa
mov
jg
movsb
mov
jbe
sti
pusha
sub
gs
push
stc
fists
sub
rclb
and
in
outsl
arpl
pop
cwtl
pop
mov
mov
jno
inc
xor
lret
int3
cmc
ret
xchg
sar
jecxz
jne
mulb
xchg
aad
out
lea
xchg
sbb
popf
jb
cs
fnstcw
push
aad
fs
mov
xchg
push
sub
mov
adc
mov
mov
and
pop
xorb
pop
lock
arpl
pop
aas
sbb
test
divb
jo
dec
xchg
dec
stos
jecxz
dec
lds
jb
jmp
shlb
mov
sbb
test
in
lock
test
imul
pop
aad
insb
ss
out
xor
aam
rcll
in
dec
cli
xchg
insb
dec
mov
push
jle
xchg
sahf
stos
and
dec
push
xor
add
pop
mov
jg
je
mov
cmp
dec
mov
jmp
scas
mov
ja
cmp
push
inc
in
sbb
insl
mov
pop
popa
adc
and
pop
addr16
add
pop
es
les
dec
cmp
mov
mov
rcrl
jle
je
add
add
imulb
adc
mov
mov
add
push
inc
scas
push
mov
inc
aaa
lock
push
add
sub
out
jge
xlat
add
imul
in
push
jae
pusha
ljmp
jl
cld
mov
push
sbb
js
bound
imul
clc
add
inc
scas
cli
gs
je
mov
cmp
repnz
jb
mov
jno
insb
cs
pop
xor
inc
mov
pop
xor
mov
jmp
mov
push
jb
das
cmp
mov
fcmove
rcl
inc
or
push
lret
and
jp
jnp
cmp
sahf
and
jmp
nop
rcll
aam
add
dec
inc
xorl
sub
pop
fadds
rolb
ss
cli
gs
test
mov
test
mov
fnstcw
cmp
dec
jo
in
or
xchg
pop
mov
ds
fcoml
lods
push
inc
jecxz
mov
into
js
sub
movsl
rclb
inc
insb
popa
cld
push
insb
ret
lods
addl
push
xor
sub
pop
adc
fwait
ss
frstor
mov
adc
add
sar
sbb
fdivrs
xor
insb
jmp
dec
loope
aaa
loopne
iret
pop
fimull
or
arpl
jp
sub
into
icebp
nop
cmp
push
jne
mov
lret
lods
or
stc
xchg
mov
movsb
cmp
aas
in
mov
or
les
inc
insl
add
in
stos
xor
pop
nop
inc
lods
mov
lods
or
mov
pop
mov
ss
je
jle
inc
inc
movl
out
jo
adc
ja
in
loope
les
push
push
push
arpl
or
xchg
test
cli
nop
mov
mov
cld
inc
and
adc
lds
sub
jle
je
in
int3
aad
inc
lret
cwtl
mov
dec
push
sarb
mov
jnp
data16
mov
mov
or
inc
and
out
xor
les
fs
dec
adc
pop
push
adc
or
dec
jnp
cmp
stc
push
popa
loop
mov
jle
scas
xor
xor
fwait
dec
stos
inc
bound
cltd
nop
dec
and
lods
hlt
fsubs
std
push
xchg
das
mov
push
scas
insl
or
dec
adcb
aaa
xchg
cmp
push
je
outsb
mov
test
pop
inc
pop
aas
jmp
stos
push
repz
cld
fnsave
xor
in
mov
pop
xor
lret
in
dec
insb
rorb
repz
negb
xchg
das
inc
push
rorl
loope
out
pop
cmp
sub
xor
or
xchg
push
fdivr
jns
arpl
xor
pop
sbb
or
push
scas
sbb
stos
add
sarl
xor
xchg
push
mov
mov
xchg
sbb
out
mov
xchg
test
std
cwtl
sub
popa
sahf
jbe
stos
mov
and
test
mov
xchg
imulb
js
xchg
sbb
add
std
dec
int3
or
repnz
cmpsl
nop
jnp
movsbl
subl
lcall
mov
adc
adc
addr16
inc
xchg
jbe
push
hlt
jae
add
bound
into
push
stc
add
into
jo
loopne
mov
js
mov
inc
dec
mov
push
xor
xchg
inc
clc
xchg
and
es
popf
rcll
test
js
pushf
out
ret
imul
in
sub
mov
mov
fucomp
sub
pop
xchg
test
adcl
repnz
mov
cmp
sub
enter
fidivrs
jl
decb
xchg
fdiv
out
cmp
adcb
enter
jns
ljmp
cs
in
shrl
add
pop
cmp
mov
push
out
loopne
es
icebp
mov
enter
pop
les
arpl
add
and
jne
pop
aam
jle
cmp
test
dec
into
mov
scas
test
ja
fcmovbe
loope
dec
cmp
xor
mov
rol
enter
mov
pop
or
xchg
cmpsl
ds
pop
into
je
jno
mov
mov
or
das
stos
pop
loope
inc
jnp
ja
loopne
lock
rorb
subl
bound
rorb
xor
sahf
cmp
fwait
out
scas
cld
xchg
stos
pop
xor
mov
dec
cli
mov
push
cmp
cmp
adc
lock
adc
or
push
xor
aaa
and
pop
pusha
jge
dec
jns
sbb
xor
ja
fildll
mov
ss
xchg
mov
xchg
icebp
aas
xchg
pop
sbb
adc
fwait
je
in
mov
imul
out
ss
sub
stos
bound
xchg
into
add
adc
out
into
lds
and
mov
adc
adc
add
stos
mov
movsb
ljmp
leave
push
push
lret
sbb
sub
or
movsb
stos
mov
fcoms
test
sti
faddl
push
imul
sbb
xor
ljmp
mov
dec
call
pushf
push
mov
fidivl
sti
xchg
xchg
xchg
mov
sbb
xchg
cmp
repnz
les
cmp
sub
inc
fnstsw
jp
cli
xlat
call
push
mov
fwait
mov
inc
or
ljmp
add
loop
ljmp
mov
dec
clc
imul
scas
pusha
mov
xor
mov
rcrl
push
lret
aaa
lahf
lahf
mov
int
aaa
jne
repz
jb
inc
or
xor
clc
adc
fildll
jmp
mov
sbbb
cmp
int
mov
inc
rorb
push
int3
pop
loope
or
pop
sbb
movsl
out
ljmp
pop
lcall
adc
iret
push
dec
push
rcr
mov
mov
inc
pusha
push
xchg
cmpl
jnp
mov
jo
fnstenv
jo
mov
jle
sbb
add
inc
jns
cmp
jns
mov
loopne
cmpsl
aas
bound
pusha
sbb
mov
mov
mov
shlb
sbb
std
jl
dec
jne
and
cs
cwtl
fcmove
ljmp
std
daa
mov
mov
sub
insl
sbb
mov
jmp
adc
sti
sub
pop
jle
adc
inc
xor
mov
or
out
mov
pop
sub
mov
hlt
xlat
cmp
sarb
dec
pop
hlt
add
movsl
pop
adc
pop
xor
sbb
shll
mov
test
and
push
lcall
ss
xor
nop
imul
jge
hlt
ss
cmpsl
xchg
mov
mov
icebp
std
mov
mov
lret
sub
dec
aam
inc
or
cmp
lahf
sub
cmpsb
cltd
enter
dec
jo
add
andb
xor
push
loope
insb
out
sbb
out
and
fwait
push
pcmpeqd
faddl
test
leave
mov
inc
scas
mov
movl
adc
popf
pop
hlt
push
and
push
xchg
jb
jle
ret
sbb
fstl
add
and
add
lret
call
or
pop
push
addb
cli
inc
sbb
inc
dec
jg
and
cmpsl
mov
mov
fists
sub
test
enter
dec
hlt
mov
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
pop
je
xlat
push
push
sub
push
push
repz
je
or
cmp
mov
fcmovnbe
ss
outsl
inc
mov
fs
outsb
jmp
or
or
mov
mov
or
mov
push
cmova
sub
sbb
sbb
inc
mov
repz
movsb
cmc
leave
jns
ror
xchg
fwait
jecxz
pop
mov
add
aad
jecxz
inc
xchg
push
add
popf
out
add
xchg
pop
adc
mov
test
fnstsw
xor
popa
stc
inc
ja
xchg
pop
push
add
dec
mov
mov
lcall
sbb
xor
negl
push
std
ret
sbb
test
int
xchg
roll
mov
mov
xor
in
sahf
adc
xchg
sar
sub
dec
push
leave
push
movsb
jge
cmp
jl
faddl
mov
call
out
add
seta
xor
inc
mov
int
divb
out
std
ror
sbb
jmp
xchg
xchg
mov
xchg
out
mov
add
xor
scas
lahf
xchg
and
fldl
mov
fnstsw
jb
lcall
orl
aad
pop
test
movsb
mov
mov
jb
and
add
adc
add
int3
outsb
ds
jge
mov
movsb
popf
add
and
in
sub
movsl
cmpsl
jge
pop
test
jmp
inc
jno
and
sti
ljmp
roll
dec
sbb
pop
xor
mov
mov
std
mov
jnp
xchg
ss
cmc
aad
pop
cltd
dec
push
cmp
dec
mov
pop
popf
ds
ficoms
loopne
jmp
sub
nop
movb
add
orl
insb
mov
aad
pop
mov
pop
mov
imul
fisubrs
or
mov
shll
outsb
sub
push
adc
sarb
out
scas
jbe
fldenv
lahf
or
sbb
inc
sub
mov
test
jge
xchg
aaa
sub
aam
cltd
repnz
inc
push
jo
cwtl
fdivrs
dec
ret
jbe
inc
int
cmp
inc
xchg
enter
sub
adc
in
pop
rcrb
jb
mov
sbb
pop
or
ljmp
dec
lods
into
add
insl
sub
sub
push
pop
sbb
ret
xchg
jnp
cli
sbb
push
sbb
sub
mov
dec
jl
fcoms
cwtl
and
adc
fsubl
xor
mov
add
imul
cmp
rolb
cwtl
push
inc
jmp
lahf
mov
cld
pop
xor
jmp
dec
jnp
sbb
and
mov
cwtl
in
test
dec
stos
loopne
mov
mov
fldt
or
pop
sub
inc
xor
lods
shlb
and
leave
std
je
mov
xor
mov
repz
cwtl
in
dec
cmpsl
or
mov
popf
pop
pop
pushf
loop
int3
repnz
xchg
push
add
add
xchg
jmp
push
jno
or
xor
imull
sahf
cld
add
mov
sti
and
sbb
jp
mov
repnz
scas
lock
sub
xor
dec
jns
lods
mov
cmpsl
scas
incb
mov
lret
push
xchg
and
shl
sub
cltd
mov
lahf
sbb
adc
lds
out
sbb
xchg
icebp
push
mov
mov
inc
in
inc
jb
jne
cmp
mov
sub
stc
sub
inc
pop
xchg
jne
mov
shl
pop
mov
sbb
test
mov
mov
inc
sub
inc
nop
out
sbb
lret
inc
test
add
and
fldt
push
ja
fstpt
and
xchg
mulb
pop
andl
and
jne
sbb
addl
push
ret
jns
jle
jl
iret
jno
cwtl
es
xorl
fisubrs
sub
aam
lcall
fisttps
scas
lock
cmpsb
and
xchg
and
or
enter
jbe
loop
mov
aaa
popa
out
je
inc
loope
mov
cli
xor
add
ret
inc
inc
cmp
and
in
sub
test
xchg
in
negl
pop
out
dec
dec
inc
shll
inc
popa
push
xorl
fdivr
xor
or
fistl
xchg
lock
dec
insb
or
arpl
xor
test
cli
add
fs
in
sarl
push
xor
mov
movb
dec
nop
fldpi
sbb
adc
adcb
shrb
push
std
fs
test
cwtl
mov
cmp
xor
push
out
sub
movsb
inc
sub
arpl
add
cmpsb
mov
fnstenv
sbbl
sbb
dec
push
xor
lcall
or
repnz
mov
out
leave
pop
adc
stos
cmc
mov
mov
std
mov
rolb
out
cs
cs
fmull
mov
ds
add
or
jge
mov
pop
outsb
stc
xchg
or
and
leave
xchg
out
nop
out
pop
mov
hlt
mov
enter
and
mov
mov
push
fs
xlat
pop
xor
sub
out
sbb
imul
cs
scas
cmp
xor
roll
cmp
sbb
fwait
dec
add
popa
movsl
cmp
outsl
xor
repz
das
div
adc
outsl
mov
mov
loopne
repz
fwait
and
loop
orl
fdivrp
jmp
lea
inc
les
pop
call
cmp
sti
int3
aaa
sub
inc
mov
sub
xchg
ret
xor
addr16
push
fists
movsb
sub
xor
jno
jg
imul
pop
int
pop
push
mov
xchg
hlt
inc
cmpsb
cli
inc
adc
adc
clc
subl
jmp
test
in
or
scas
fstl
test
cwtl
int3
mov
insl
sub
adc
and
mov
mov
mov
jle
out
mov
mov
jmp
sbb
fldl
shlb
or
cld
cltd
or
and
idivl
outsb
cld
clc
push
pop
mov
push
add
sarb
mov
mov
leave
dec
add
dec
in
nop
in
int3
or
dec
ret
push
jno
push
sahf
add
incl
fimull
jae
rorb
xor
push
addr16
xchg
push
stos
scas
ds
lods
sbb
xchg
loopne
ret
das
ja
pop
adc
movsb
jp
dec
and
jo
push
xchg
push
adc
xchg
xor
subb
rcrl
out
nop
fldcw
addb
push
push
in
cmpsb
cmp
cs
xor
mov
scas
sbb
inc
sub
push
mov
les
adc
adc
mov
lret
hlt
cmp
fcomps
das
adc
pop
mov
enter
js
mov
out
fisubs
and
jbe
fisubrs
xchg
mov
test
push
push
pop
movsl
cld
stos
aas
inc
mov
dec
leave
mov
cmp
cwtl
arpl
int
dec
mov
add
xor
js
in
shll
xchg
pop
aad
xchg
test
insl
ljmp
int3
xor
andl
jns
dec
or
movsl
imul
dec
gs
sub
out
mov
xor
xchg
xchg
sbb
fs
jns
jbe
and
mov
sbb
pop
cs
mov
lods
cmp
sub
or
jno
or
insl
imul
sbb
jle
arpl
mov
or
into
sbb
outsb
jo
loopne
cmpsl
adc
cs
inc
push
cmp
add
shl
xchg
mov
inc
filds
mov
aam
sahf
fsubrs
insb
lcall
ljmp
in
fsubs
xor
aaa
lret
adc
sub
call
into
xchg
cmc
add
xchg
mov
push
ret
bound
or
es
xor
inc
js
pop
lret
pop
push
fcmovbe
push
jnp
fdivrs
sub
xor
add
push
je
push
push
mov
mov
cmp
pop
sbb
lret
xchg
out
mov
popf
inc
adc
adc
mov
mov
movsb
and
sahf
mov
loop
xchg
mov
add
dec
hlt
push
loope
lret
adc
push
leave
lcall
lahf
pop
repnz
push
enter
mov
vmaxss
in
pop
pop
sub
jl
test
xchg
loope
insl
xchg
lret
mov
outsb
clc
ljmp
aas
and
add
lret
ficompl
ljmp
add
pop
movsb
movsl
xor
push
lcall
repz
mov
pop
mov
push
fcmovb
imul
adc
inc
push
loop
sbb
es
or
and
dec
cmp
fbld
insl
mov
imul
ja
ja
rclb
fwait
stc
fcomps
aam
outsl
scas
ja
arpl
or
xchg
insb
add
fistpl
mov
cs
aaa
xchg
in
adc
push
pop
inc
sub
xorl
mov
sarb
negb
les
imul
dec
and
aam
int
int3
and
cmpsb
mov
cmp
into
fbld
in
popa
cmpsb
bound
add
out
lds
in
out
mov
ss
pop
and
mov
mov
adc
int
pop
xorl
adc
imul
push
std
test
mov
arpl
std
jne
inc
stos
mov
pop
mov
or
cld
aam
cmp
xor
mov
add
add
incw
lods
das
int3
jmp
push
mov
mov
insb
jae
jecxz
or
or
add
sbb
xchg
pop
jbe
push
imul
movsl
dec
dec
fisttps
inc
jo
stc
adc
xchg
cld
stc
int3
xor
ret
lret
cmp
sub
jo
adc
sub
or
call
test
and
fmuls
pop
xchg
sub
mov
fs
bound
shlb
lock
imul
in
and
outsb
into
out
hlt
mov
and
and
xchg
jns
mov
minps
roll
aad
sub
dec
xchg
jmp
xor
ret
fnstsw
mov
lds
movsb
lock
add
push
aam
int
and
or
pop
stc
jp
dec
mov
xor
add
push
mov
mov
ja
lds
cli
or
mov
cmp
ret
insl
xor
pop
adc
adc
std
mov
cltd
and
mov
pop
lahf
gs
xchg
push
insl
pop
mov
enter
and
loopne
xchg
mov
mov
repz
mov
lea
ss
add
clc
push
xchg
push
inc
out
daa
add
outsb
and
insl
cmc
insb
xor
dec
lods
nop
mov
clc
and
fcmove
cmc
cmp
mov
mov
jg
push
arpl
rcrl
shlb
insl
movsl
and
mov
aas
xlat
add
jp
jae
in
add
loope
bound
out
outsl
hlt
jp
cmp
outsb
xor
insl
add
push
out
dec
add
repz
inc
mov
jo
ljmp
mov
push
test
and
cmc
leave
xchg
and
ffreep
cmp
out
pushf
loop
push
sub
ss
push
insl
xchg
out
ss
sbb
jnp
add
in
dec
outsb
std
loopne
and
dec
insl
lea
test
and
test
mov
cmp
sbb
jp
nop
cmpsb
aad
adc
xor
xor
or
mov
out
xchg
sub
ds
pop
jecxz
in
mov
les
push
push
mov
scas
lock
aas
mov
push
popf
dec
pop
cmp
xchg
int3
out
ja
imul
scas
bound
sbb
mov
mov
pushf
lds
scas
add
sub
and
mov
ret
mov
subl
hlt
sbb
jo
fistps
mov
pusha
rorb
mov
push
sub
call
dec
mov
jb
out
pop
in
or
add
ret
testb
cmpsb
lret
shlb
xor
fdivrs
test
test
mov
movsl
and
pop
lods
push
xor
int3
inc
and
and
mov
adc
rcrl
sub
or
xor
jmp
mov
aam
sbb
xchg
addr16
test
mov
or
in
cmpsb
mov
bound
inc
jp,pn
dec
adc
loop
test
or
inc
dec
xchg
das
lret
inc
inc
shl
cli
mov
scas
shlb
mov
and
stos
in
out
sbb
rcll
insl
pop
stos
and
xchg
fisttpl
shlb
and
popf
xchg
xchg
aam
inc
push
fidivl
pop
cmc
adc
xchg
sub
rorb
fwait
adc
pop
das
dec
hlt
push
movsb
sti
lret
jb
dec
mov
cli
dec
xchg
fcompl
cmp
xor
cmp
adcb
add
mov
lea
jno
pop
xlat
testb
cltd
cmp
data16
cli
adc
add
sbb
mov
mov
daa
out
xor
daa
jo
jmp
adc
mov
push
sub
pop
nop
into
sbb
or
dec
movsl
mov
lcall
les
ds
cmp
and
mov
and
dec
fisubrl
cmc
cs
adc
les
ss
cmpsb
or
and
xor
mov
mov
popf
dec
inc
xchg
stos
addr16
sub
cltd
sbb
test
push
xor
and
les
dec
test
imul
js
or
mov
cmpsl
cmp
xchg
loope
cmpsl
adc
dec
repnz
lret
es
test
pushl
fbstp
cmp
fisttpll
adc
cmpsl
pusha
add
mov
lea
cwtl
add
test
mov
push
in
mov
mov
std
movsl
and
pop
and
lret
pushl
popa
daa
je
or
push
popa
push
fisubs
cmp
pop
and
push
repz
idivb
inc
lret
jp
mov
ror
adc
dec
mov
push
imul
mov
jle
in
jecxz
mov
sub
xchg
add
mov
movl
xchg
fdivl
dec
daa
jge
cmpxchg
mov
mov
test
mov
push
sbb
and
mov
dec
push
fidivs
cmpsb
or
pop
mov
jne
in
jl
pop
jecxz
daa
out
push
incl
ja
pop
jg
dec
lahf
es
cld
cmp
cli
mov
stos
jbe
and
and
lods
mov
cmp
sbb
sub
pop
jl
sarb
loope
adc
mov
pop
jb
sbbb
pop
mov
ret
rol
mov
dec
pop
cmp
adc
xor
and
repz
adc
mov
frstor
insl
sbb
push
mov
roll
sub
arpl
mov
jb
push
jmp
cwtl
int3
vpshuflw
xor
hlt
movsl
add
sarb
and
mov
mov
and
mov
icebp
push
sbbl
inc
add
push
leave
dec
dec
push
mov
fldl
adc
jbe
imul
fprem
add
sti
aaa
imul
push
xchg
sub
stc
mov
fdivrp
pop
adc
jns
xor
dec
fcomps
push
mov
jp
gs
sbb
mov
lcall
bound
mov
scas
cmp
mov
imul
shll
fnstenv
add
adc
inc
mov
xchg
subl
inc
pop
test
out
es
popa
mov
jp
cmpsb
gs
sbb
inc
inc
and
sbb
int3
push
xchg
imul
fnstsw
stos
fwait
xor
je
xchg
push
cmp
cmp
andb
out
add
mov
push
cwtl
cltd
cli
push
stos
jg
mov
xor
sti
test
xchg
scas
sar
pushf
or
cmp
fsubl
in
daa
xchg
mov
test
jb
add
cmp
and
loopne
add
sub
cld
jnp
scas
shlb
test
shl
and
popf
sbb
test
cmp
or
inc
xor
fstl
fnstsw
jb
adc
lret
out
inc
cmp
out
and
shlb
pusha
movb
clc
ss
nop
cmp
xchg
cmp
sub
ds
rcrl
mov
sub
dec
adc
mov
pop
ss
add
mov
fbld
bound
xchg
out
lods
rorb
dec
jbe
lret
inc
lods
aas
pop
mov
cmp
sub
inc
pop
inc
inc
aad
inc
sbb
xor
in
loope
cmp
add
or
xchg
enter
jbe
out
into
and
mov
shlb
js
xchg
adc
cmpsl
add
scas
lods
shl
dec
push
dec
sub
dec
mov
leave
add
sub
mov
shlb
test
sub
pop
lock
subb
shlb
fstps
sub
test
mov
mov
add
push
or
xchg
lret
mov
add
mov
das
adc
sbb
inc
cmp
jg
xchg
sub
mov
adc
pop
jae
leave
ljmp
mov
mov
xor
add
js
jecxz
imul
in
lods
sbb
adc
push
push
adc
adc
cld
xor
fcompl
xchg
push
and
aad
push
inc
xchg
jle
aaa
sub
mov
in
outsl
outsl
lahf
in
xchg
push
inc
inc
gs
aad
bound
stos
stc
mov
rcll
les
mov
jne
jge
testl
or
sbb
cltd
push
pop
ja
adc
add
mov
test
out
cmp
jmp
sahf
mov
outsb
pop
add
lock
pop
sbb
fisubrl
xor
and
xor
or
mov
mov
jl
or
sti
xchg
seta
fidivs
fnstcw
inc
xchg
add
push
test
dec
sbb
or
mov
jmp
push
pop
sub
fsts
dec
xchg
dec
xchg
jge
pop
xchg
push
inc
xchg
insl
dec
nop
inc
sub
mov
add
insl
in
mov
lods
cli
ret
pop
pop
lock
sub
jne
pop
xor
push
dec
and
mov
xlat
icebp
pop
dec
inc
ret
add
outsl
mov
aad
push
add
aad
sub
fildl
dec
xchg
adc
mov
cld
daa
sub
xchg
xchg
aaa
ja
sbb
enter
ljmp
mov
inc
cmp
fs
sbb
mov
call
and
cmp
push
out
in
xchg
pmaddwd
pusha
outsb
xor
push
sub
sti
shll
or
pushf
mov
ret
adc
or
ss
loopne
fcomps
in
xchg
gs
insl
inc
ret
out
dec
or
adc
stc
cmp
mov
jae
jge
mov
ja
dec
or
loop
js
xor
inc
xchg
push
and
xchg
mov
addb
pop
stos
jns
dec
aaa
jge
and
dec
mov
faddl
cs
in
ds
test
mov
lods
shrb
inc
dec
sbb
sub
repz
adc
push
push
push
cmp
daa
insb
rcr
ret
shll
mov
loopne
and
movsl
ret
adc
cmp
jg
jle
addb
xlat
cmpsb
cmpb
mov
cs
lds
mov
adc
jnp
in
dec
sarb
dec
das
ljmp
fdivrl
adc
sub
data16
negb
fdivrl
dec
arpl
movsb
loopne
ja
cmp
in
out
mov
repnz
imul
fsubrs
je
pop
inc
jne
ret
movsl
xor
repnz
add
pop
xchg
and
loope
lret
add
dec
inc
push
mov
pop
dec
xor
pusha
pop
jl
pop
jge
dec
jo
xchg
push
sbb
pushw
jbe
and
addr16
sub
mov
stos
cmpl
outsl
sub
mov
add
adc
xchg
loopne
fcoms
jns
mov
insb
push
popa
jne
add
insl
fiadds
sbb
and
mov
hlt
sbb
lcall
in
imul
arpl
dec
mov
loopne
or
sbb
in
jp
mov
sti
idiv
push
jle
adc
pop
rcll
lret
mov
mov
sub
mov
pop
inc
not
mov
dec
or
cltd
das
sbb
sti
push
jecxz
mov
dec
cmc
cld
fwait
js
push
sti
xor
ret
pop
shll
pop
pop
pop
xchg
mov
add
adc
je
mov
add
and
jae
rcr
stos
repnz
jg
pop
cmp
add
sbb
mov
loopne
dec
repnz
fucomi
insb
test
jne
aad
jp
mov
mov
loop
fwait
cs
dec
mov
std
jl
lea
and
pop
push
jl
outsl
jns
aaa
loopne
xor
enter
mov
dec
push
mov
dec
sahf
cmp
mov
dec
cmp
scas
cli
hlt
add
inc
test
pop
imul
mov
cmp
pushf
sbb
insb
mov
test
push
aaa
cli
add
lea
mov
fistps
sub
fistps
fcompl
cltd
cli
push
inc
mov
cltd
push
into
test
pop
das
jmp
and
fldl
pop
in
test
jl
pop
adc
pop
xor
mov
shl
ss
fcoml
jo
sar
mov
inc
xchg
mov
fucomip
scas
push
shlb
stc
xor
stos
shll
mov
dec
repz
add
movsb
scas
int
ja
aad
inc
sub
stos
cmp
repz
clc
mov
pop
jns
and
add
sti
inc
iret
dec
imul
pop
cmp
jne
scas
jb
xchg
mov
push
aam
mov
stos
js
sahf
es
xor
adc
out
push
out
and
sbb
in
dec
mov
mov
pushf
ja
push
and
mov
or
cmpsl
jl
ret
ljmp
push
loopne
and
roll
movsl
push
popf
inc
sets
dec
push
ret
xchg
xchg
in
xchg
sub
cmp
fsubrl
pop
loopne
sbb
inc
xchg
ret
fwait
rcrb
jmp
sbb
fidivrl
je
pop
pop
loopne
cmpsl
cmp
das
rorl
xchg
ret
pop
mov
iret
cld
lret
xchg
mov
pop
or
ss
ret
std
out
jge
fs
adc
mov
fs
jge
scas
mov
xchg
clc
out
out
repz
inc
push
mov
push
xchg
fidivrs
xchg
cmpl
mov
fcoms
sti
outsl
in
push
jne
mov
cmp
out
out
mov
daa
data16
jg
inc
or
bound
jp
dec
push
ret
add
into
adc
xlat
lock
popa
aas
pop
dec
cmpsb
loope
mov
xor
jge
pop
push
mov
sti
insl
ja
jo
sbb
adc
mov
mov
mov
mov
lods
mov
fiaddl
repz
mov
xchg
aad
rcrl
aas
jae
jg
lret
push
mov
es
lods
sub
jns
pop
fnstcw
and
jp
gs
dec
cld
dec
es
outsb
aam
inc
mov
cvtps2pd
push
lret
cli
cld
push
jae
pop
roll
fisttps
lret
inc
outsb
arpl
push
aam
jbe
std
pop
call
jmp
pusha
flds
dec
stos
add
mov
scas
mov
ljmp
mov
das
mov
xchg
lea
roll
jno
iret
aas
fcmovu
mov
dec
hlt
les
aas
or
addr16
and
xchg
push
aad
cld
add
insl
imul
shrb
lock
arpl
mov
imul
pop
shlb
mov
roll
repnz
stc
stos
xor
xor
ficompl
lods
mov
mov
push
mov
push
fldl
cld
mov
adc
mov
pop
setae
xchg
mov
jne
into
xchg
test
shr
jae
fldl
xchg
jbe
cs
push
faddl
arpl
mov
jb
sub
inc
add
xchg
ljmp
adc
jge
mov
jns
shll
popf
jecxz
fmuls
std
push
out
pusha
out
mov
out
dec
stos
in
mov
loopne
mov
jmp
lods
pop
mov
jle
sub
roll
pop
and
mov
push
mov
mov
das
pop
xchg
loop
in
inc
add
push
dec
inc
sbb
xor
fmull
push
or
xor
xorl
into
insl
add
inc
adcl
mov
cmpsl
sub
mov
jmp
xchg
jo
ror
fwait
xchg
shll
inc
addr16
fsubrl
dec
cwtl
aad
or
dec
repz
jo
or
push
xor
shll
and
faddp
js
lret
sub
lea
or
jae
mov
push
into
mov
mov
dec
lods
jne
mov
xor
pop
xchg
pop
or
xchg
sbb
das
add
popa
mov
jb
lahf
or
bswap
fs
icebp
fnstsw
mov
out
pop
gs
sub
xchg
out
out
cmpsb
or
cmpsl
jbe
push
adc
mov
pop
jns
lds
mulb
xchg
pop
jle
push
ljmp
out
sbb
add
ds
int
movsb
mov
mov
ficoml
pop
add
sbb
cmpb
mov
ja
rolb
push
lret
jle
xlat
pop
dec
ljmp
rclb
sub
xchg
sub
enter
aam
mov
mov
add
pcmpeqw
inc
bound
xacquire
cli
pop
sbb
stc
jmp
dec
inc
inc
push
jle
fldenv
daa
rcrb
jne
and
adc
and
jmp
mov
icebp
and
popaw
pop
pop
and
addr16
and
cmp
mov
push
iret
hlt
fwait
mov
mov
iret
mov
and
fldl
inc
cmp
mov
movsb
and
jmp
lahf
daa
mov
push
enter
adc
push
shrl
ret
push
mov
xchg
cmp
pop
pushf
bound
dec
clc
xor
scas
pop
fldt
sar
sub
jno
std
mov
xchg
int3
mov
add
cmc
jmp
out
scas
call
int3
arpl
sbb
lret
xchg
adc
jmp
fstl
add
cmc
in
push
clc
lds
xchg
js
imul
xchg
xor
pop
and
ja
lock
cmp
ret
cli
adc
mov
pop
popa
adc
mov
xor
jnp
out
jecxz
mov
movaps
xchg
fldt
cmpb
inc
fwait
nop
adc
mov
fistpl
add
cmp
and
imul
xchg
xchg
and
stc
push
pop
cmc
mov
lret
mov
mov
push
mov
lods
jns
sbb
mov
push
or
push
jno
mov
scas
mov
fdivrs
mov
mov
fs
fistl
push
or
cs
mulb
mov
scas
ljmp
sahf
add
lret
je
sbb
adcl
mov
pop
cmpsl
fiaddl
mov
rorl
loope
xchg
cmp
mov
mov
out
sbb
xchg
dec
leave
test
push
push
gs
in
mulb
rclb
inc
sub
push
lock
sar
imul
inc
popa
adc
mov
mov
aas
mov
xchg
pop
dec
mov
popf
mov
dec
loopne
out
add
outsl
add
or
fdiv
daa
sbb
movl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
pop
insl
add
lcall
or
sbb
add
xor
popf
repz
das
imul
pusha
cs
xor
push
or
or
and
loopne
sbb
or
lds
imul
xchg
aaa
sbb
aaa
cli
ret
mov
ljmp
sbb
int
mov
insl
add
lea
jnp
imul
lcall
mov
xchg
cli
or
xor
in
aaa
outsb
and
packssdw
mov
jecxz
pusha
and
scas
and
xchg
xchg
call
in
mov
add
mov
test
out
scas
sbb
push
jle
mov
dec
idivl
sarb
sub
popl
les
and
clc
mov
aam
cmp
dec
sub
push
fidivrl
mov
outsl
jecxz
out
adc
dec
ja
xorl
cli
sub
jbe
lret
inc
and
jns
jne
mov
mov
aaa
mov
rcl
xchg
popa
movsb
insb
rol
fldenv
pop
xchg
cmpsb
add
iret
lock
add
mov
pushl
ja
pop
les
mov
aad
jo
jecxz
jno
daa
pop
sub
xor
das
movb
sub
dec
mov
lcall
jmp
jmp
mov
mov
loope
adc
xchg
mov
push
imul
popf
dec
inc
jbe
ficomps
sub
enter
jmp
test
adc
mov
imul
mov
icebp
jbe
das
push
adc
test
xlat
pop
sub
push
hlt
test
out
xchg
fidivs
incl
leave
movsb
xchg
jbe
pop
xor
xor
aas
xor
mov
test
jns
sub
sbb
lcall
mov
stos
es
or
mov
out
xchg
inc
fucomp
movsl
mov
push
sbb
dec
addr16
icebp
or
mov
mov
mov
stos
pushf
sub
pushf
mov
loopne
adc
sbbb
insb
jns
dec
xor
fwait
adc
cmp
cld
leave
adc
xchg
inc
imull
cld
ja
imul
xor
mov
movsb
ds
fildl
loope
push
inc
mov
into
wrmsr
test
xor
jb
cmp
dec
ja
dec
std
pop
mov
das
daa
cmpsb
rclb
xchg
clc
or
leave
xchg
push
add
xor
in
xchg
xchg
inc
in
jo
gs
fdivrs
popa
xor
and
add
jg
cwtl
mov
andl
movsl
pop
and
push
loopne
addr16
bound
cmp
sub
repnz
mov
inc
jnp
or
mov
dec
popa
xchg
mov
ja
dec
das
cltd
test
xchg
push
jmp
mov
mov
das
mov
lahf
loope
xchg
xor
in
test
push
test
mov
adc
jne
sub
pop
jns
sbb
call
pop
cmp
cwtl
dec
add
sbb
out
sub
mov
xchg
pop
movl
xchg
lds
arpl
xchg
popa
lahf
inc
sub
pop
add
stos
ficompl
test
inc
in
bound
je
mov
cmp
in
xor
lret
xor
inc
mov
cli
inc
adc
or
and
cwtl
outsb
and
mov
call
push
lds
cmpsl
rolb
push
sbb
or
inc
dec
push
lahf
inc
hlt
jg
cmc
add
enter
mov
and
push
insl
adc
imul
mov
pusha
and
mov
jge
or
in
and
adc
pop
sbbl
notb
lds
scas
mov
xlat
stc
stc
xorb
iret
cltd
push
push
lret
xchg
and
pop
fstpt
xchg
mov
adc
mov
les
add
mov
insb
mov
fsubr
jo
lcall
jae
cmp
push
pop
test
repz
mov
fstpl
xchg
xlat
pop
jg
insl
and
idivl
int
mov
xchg
inc
add
push
inc
jl
loopne
or
insb
test
pop
fstpl
outsl
out
mov
pop
sarb
adc
popf
je
ljmp
outsl
jle
mov
and
cltd
push
mov
jbe
jnp
adc
clc
mov
fcoms
adc
cmp
fistps
inc
xchg
jle
lock
cli
xchg
mov
test
adcl
cld
fwait
push
pop
in
lock
jecxz
dec
jne
and
cmpsl
xorl
push
or
pop
jbe
fisubl
push
cmc
leave
mov
sbb
sbb
sbb
pop
sub
sar
imul
out
adc
lahf
sub
insl
mov
dec
jne
in
enter
jle
xor
in
pushf
jnp
int3
add
cwtl
rolb
jne
and
in
inc
cmp
cs
movl
stc
xchg
lret
lock
dec
jns
push
out
ret
cs
sahf
lds
in
lea
arpl
ret
cmp
gs
and
pop
fisttpll
out
sbb
mov
push
push
cmc
dec
jne
scas
int
pop
das
or
into
lods
ret
stos
dec
daa
push
push
scas
jmp
movsb
fmull
lock
aas
jne
pop
mov
cmp
add
jle
cmp
imulb
out
sub
loope
inc
xchg
sub
loopne
pop
inc
add
shlb
sti
test
lock
inc
pop
fst
ret
sti
leave
addb
fs
lods
test
rolb
lock
aad
not
push
add
and
dec
push
lods
mov
jbe
adc
mov
or
js
hlt
stc
ret
xchg
jle
inc
cli
dec
xor
sub
jns
xchg
mov
test
mov
int
out
add
xor
add
int
pop
mov
popa
out
xchg
adc
scas
add
sub
jl
outsb
fidivrl
inc
data16
mov
call
mov
sbb
in
add
xor
mov
cmp
out
std
cmpsb
inc
icebp
call
fdivp
fstpt
gs
adc
pop
xor
test
xchg
hlt
mov
fldenv
mulb
jecxz
jns
adc
dec
js
rclb
cs
xchg
jnp
cmp
fisttpl
fdivp
subl
ss
jno
cwtl
add
jle
daa
std
dec
and
ret
stos
imulb
dec
mov
loop
cmp
or
lret
jnp
mov
in
pop
in
push
xor
fsubs
mov
sbb
push
jg
das
shrl
std
popa
rorb
divl
xchg
inc
div
jne
cltd
in
ss
push
in
scas
bound
mov
repnz
clc
test
or
popa
push
xchg
stos
in
pop
dec
push
and
pop
test
cmp
xchg
pop
leave
sahf
pop
mov
js
jne
imul
loopne
mov
pop
xor
js
insb
cmpsl
push
xchg
arpl
inc
outsl
in
mov
mov
inc
adc
xchg
clc
stc
jnp
xchg
push
pop
mov
push
xor
ret
push
inc
int3
dec
inc
daa
xor
inc
push
add
movsb
lret
adc
repnz
jg
jns
dec
xchg
dec
aas
roll
ss
fsubs
sti
xlat
mov
in
add
stos
es
push
lds
ss
inc
push
ss
cmp
out
loopne
insl
stos
dec
les
jg
mov
adc
xor
lds
cmpsb
dec
fs
cli
and
push
xor
andl
push
add
dec
adc
push
sub
or
jne
shll
sub
pop
dec
loopne
sbb
sub
cmp
daa
mov
jb
jnp
sbb
stc
test
mov
outsb
scas
xor
xor
mov
jnp
ret
cmc
or
mov
ret
mov
loope
mov
outsb
pop
insl
fimuls
scas
jb
pop
cmc
pushf
shrb
push
cs
rcrb
fs
mov
inc
jnp
or
jae
push
push
inc
std
inc
ss
cmpsl
push
fidivs
aas
xchg
adc
xor
iret
jb
mov
mov
mov
fisubl
je
testl
mov
stc
xchg
insl
out
mov
mov
mov
inc
add
jle
js
test
mov
or
xchg
lahf
fildl
dec
xchg
sub
pop
add
push
jp
jmp
xor
dec
xchg
sarb
pop
lcall
lods
lahf
jl
into
pop
cld
sbb
fs
ficoml
out
mov
fidivrl
enter
mov
pop
dec
push
sub
mov
mov
inc
sbb
xchg
push
into
fs
jp
js
push
scas
cmp
inc
jmp
push
push
and
shrl
cli
mov
jnp
roll
nopl
jae
sahf
lret
cld
jle
sbb
clc
in
mov
test
repz
enter
rol
lea
ss
sbb
ljmp
std
or
inc
cmpsb
outsb
add
sub
xor
faddp
outsb
es
mov
sub
sti
outsb
scas
mov
iret
movsl
dec
add
fsubr
clc
ret
out
es
ja
fildl
ja
int
sub
mov
rclb
inc
inc
insb
jecxz
or
popf
cld
lret
arpl
enter
sub
addr16
loope
xor
rcll
sbb
test
push
mov
or
aad
call
cmpsb
imul
push
add
stc
or
inc
or
out
popa
sbb
sbb
add
xchg
cmpsb
sub
or
cltd
and
inc
and
daa
leave
dec
ret
xor
mov
addl
movsl
cmp
dec
push
fdivrs
jmp
lds
lahf
movsb
inc
add
orb
sbb
mov
inc
roll
les
sub
outsl
jmp
movsb
mov
mov
ret
mov
dec
add
and
popf
into
lock
test
cmpsb
sub
dec
jo
aas
pop
xchg
aaa
mov
adcl
push
arpl
mov
xchg
loope
xor
mov
sahf
leave
sbb
sbb
mov
sti
in
xchg
gs
and
divl
pop
ret
cmpsb
andb
in
loope
jle
inc
icebp
rcr
shll
cmp
gs
push
lds
cmp
pop
mov
and
repnz
mov
ret
std
std
jg
imul
fcompl
insl
mov
out
andl
cmp
dec
in
scas
lcall
outsb
pusha
scas
and
sub
loop
nop
pop
push
add
jge
test
loop
dec
xor
jg
mov
pop
mov
fimull
jne
nopl
stc
push
sbb
movsl
mov
repnz
divb
pop
mov
in
xchg
lods
jno
xchg
test
and
in
or
or
jle
pop
ljmp
mov
roll
mov
out
mov
inc
adcl
or
test
push
icebp
in
daa
mov
mov
adc
loopne
jns
imul
lret
jo
dec
pop
cli
imul
dec
and
popf
arpl
adc
ret
inc
xor
cs
jno
stc
test
outsl
das
mov
sbb
lcall
xchg
leave
cmpsb
add
sub
ret
jle
ljmp
shl
sub
hlt
frstor
cmp
cmpsb
daa
xchg
inc
test
sub
dec
outsb
mul
std
popf
mov
lock
pop
dec
jg
dec
lods
xchg
push
js
cmp
xor
int
xchg
adc
mov
xorb
icebp
cmp
mov
enter
push
jmp
and
scas
push
jmp
cmp
jno
push
jb
les
jp
sub
mov
shlb
loope
mov
mov
lds
insb
sbb
pusha
sbb
mov
cmc
andb
mov
sub
imul
mov
in
xor
ret
roll
sub
inc
jne
pop
mov
jl
arpl
dec
addb
lret
out
scas
pop
jmp
xchg
cmp
pop
negb
js
imul
fcomps
incb
in
dec
imul
sbb
jns
mov
loope
in
setbe
int3
dec
data16
out
out
dec
sbb
fadd
inc
mov
adc
js
add
enter
inc
mov
sub
test
jo
pusha
ret
call
pushf
jbe,pt
lds
test
pop
sub
cmp
shll
test
xchg
sbb
xlat
add
stc
ss
cmp
aas
inc
sub
xchg
pop
andl
xchg
cmpsl
mov
insb
jns
ds
inc
and
ja
sbb
je
js
jmp
mov
xchg
push
inc
aad
sub
imulb
pop
add
in
push
dec
inc
and
mov
xor
cmp
push
data16
pop
xor
cmp
leave
xchg
stos
jmp
enter
cmp
and
adc
cmp
repz
jge
add
adc
jno
cmc
xchg
fwait
push
or
insb
ds
sub
or
aad
dec
fisttps
mov
xor
arpl
sbb
or
repnz
xor
shlb
sub
push
ja
jb
sub
arpl
je
lock
daa
icebp
pop
fwait
jo
roll
push
std
push
movsb
and
inc
pushf
lcall
ret
inc
mov
xorb
imul
rcll
dec
pop
adc
fisttpl
stc
pusha
xor
xchg
int3
mov
inc
lcall
pop
leave
cwtl
mov
lahf
add
dec
push
faddl
dec
outsl
add
scas
fnsave
pop
pop
push
mov
push
sahf
ret
xlat
sub
in
popl
stos
push
cmp
or
repnz
enter
adc
cmp
sbb
xchg
or
repz
clc
push
inc
mov
cli
mov
std
xor
jb
insb
inc
xor
inc
or
icebp
gs
sbb
popf
lret
insb
shll
pushf
enter
imul
cltd
les
outsb
mov
push
mov
mov
testb
lret
or
loopne
and
repnz
aad
sbb
icebp
ret
subb
mov
inc
xchg
jb
loop
out
in
jbe
fnstcw
subb
int
in
inc
lcall
loope
push
add
lret
dec
sahf
cltd
imul
or
push
mov
jp
mov
push
mov
roll
jne
fsts
pushf
xchg
sbb
sbb
xchg
in
incl
jg
cmovg
dec
lcall
and
js
sub
sub
ret
sub
clc
mov
xorb
dec
or
je
add
mov
int3
xor
jl
fucom
pop
test
loop
iret
jae
inc
shrd
and
and
loopne
or
adc
xlat
xchg
adc
addr16
ja
fidivs
xor
in
arpl
push
ror
or
popf
outsl
lods
jbe
mul
pop
cmc
and
shrl
cmp
xchg
pop
cmova
in
inc
push
pop
rcrb
pop
and
ljmp
push
mov
loop
jno
in
push
sub
bound
cmp
sbb
mov
jmp
int3
lcall
out
dec
jae
jb
jo
out
xchg
dec
rcrb
inc
xor
cmc
jno
mov
aaa
adc
xchg
sti
test
iret
jl
or
aam
push
pop
stos
jb
sub
push
sbb
pushf
mov
push
push
cmp
stc
stos
insl
pop
ljmp
pop
lods
or
xchg
out
ja
xor
dec
nop
dec
rolb
imul
sbb
les
clc
mov
inc
ja
insl
insl
aas
out
xchg
xor
mov
rsqrtps
cltd
mov
cmc
in
and
lock
and
and
rcl
pop
push
jns
xchg
insl
sub
lods
repz
mov
mov
into
jns,pn
dec
rclb
scas
test
testb
or
push
mov
cmc
xchg
dec
js
pop
xchg
stos
clc
imul
repz
in
mov
loope
iret
push
js
push
or
fnstsw
mov
inc
fld
lea
aam
insb
sub
jle
sbb
jae
shll
inc
je
xchg
mov
mulb
data16
dec
pop
xchg
icebp
dec
pusha
jbe
incb
pop
and
mov
clc
fcomps
in
out
test
jle
sbb
sub
cwtl
add
fildll
into
sbb
mov
sbb
repz
ret
and
andl
jae
add
aaa
mov
out
dec
sti
lods
and
das
ja
ss
or
xchg
cmc
dec
rolb
fcmovb
inc
ret
adc
aad
push
and
pop
xor
pop
mov
outsb
mov
sub
shl
inc
sub
mov
and
gs
jae
mov
pop
adc
push
pop
rol
and
mov
jmp
gs
push
xor
and
jg
mov
cmpsl
fucomip
enter
push
stc
push
push
or
cltd
scas
mov
and
jne
in
mov
popf
aaa
mov
loope
adc
adc
push
lods
xor
out
fldl
scas
xchg
mov
ss
pop
cmp
jno
ss
dec
or
inc
ror
call
adc
mov
pushf
or
inc
int
pop
inc
push
inc
xchg
xchg
xor
call
cmpsl
push
inc
inc
subl
or
aad
out
lea
cs
enter
cmp
xor
xor
mov
cltd
enter
lahf
jne
lret
inc
pushf
push
inc
inc
inc
sbb
arpl
jne
mov
jge
into
cli
aaa
rclb
out
add
mov
ljmp
add
pop
jp
subl
push
lds
out
daa
idiv
insl
stos
data16
mov
aam
jmp
sub
cmp
out
imul
mov
cmc
xchg
sbb
icebp
lret
or
mov
call
cmp
sbbb
incb
jmp
xor
cmp
scas
sarb
gs
mov
mov
adc
aam
inc
jmp
inc
or
add
ret
pop
insb
xor
iret
or
pop
jae
push
push
hlt
daa
inc
sub
lret
mov
push
cmp
xlat
sbb
test
or
cli
mov
rcrb
add
push
lods
jno
pop
add
pusha
ret
adcb
int
jae
xlat
mov
in
ret
das
out
divb
sub
cmpsl
xchg
sbb
jb
mov
stc
dec
das
mov
dec
ret
rolb
movsl
js
dec
lahf
lret
in
aaa
jmp
aas
push
xlat
movsb
lock
outsb
adc
sub
xor
sub
addr16
mov
jne
fsts
mov
push
mov
int
xor
jns
fbld
push
lret
outsl
enter
lret
dec
pop
jnp
jl
xor
ljmp
outsb
pop
adc
push
imul
jno
xor
out
stos
insb
mov
jns
imul
jns
inc
ror
xor
push
in
fdivs
pop
ds
filds
out
pop
test
mov
sub
mov
test
adc
cs
mov
push
inc
mov
shrb
cmp
notl
outsb
adc
pop
add
inc
aaa
ret
frstor
mov
cs
cmp
ja
shll
es
jbe
aas
sti
fcoms
cmpsb
jno
push
pop
insl
and
inc
mov
les
jg
lea
sbb
mov
pushf
hlt
mov
pop
jmp
inc
sbb
dec
inc
or
pop
das
push
cmp
fwait
push
jge
inc
jb
movsl
jmp
ret
pop
mov
push
adc
pop
add
ss
ljmp
leave
sbb
imul
out
mov
adc
cs
push
vhaddpd
mov
je
int3
stos
cmpsb
in
call
out
xor
outsb
dec
mov
sub
into
push
pushf
jb
rorl
pop
ljmp
lret
push
or
jg
and
js
icebp
jnp
jbe
dec
fcmovu
daa
cmc
inc
dec
cltd
sub
mov
stc
xlat
mov
xor
pop
js
ja
jle
jnp
mov
inc
or
loop
sbb
int
ret
cmc
xor
bound
aad
push
iret
movsb
mov
fldcw
add
mov
xchg
mov
out
ror
cwtl
pop
out
filds
out
mov
adc
addr16
sub
mov
mov
dec
insb
pop
mov
sub
mov
repnz
fsubr
push
adc
popa
pop
ret
repnz
mov
pusha
xor
dec
rclb
mov
xor
std
adc
adc
pop
cmp
loope
mov
pop
xchg
dec
pop
push
dec
mov
lods
shlb
sbb
lret
scas
dec
loop
dec
inc
jne
xchg
jnp
js
int3
pop
test
mov
test
lret
test
rorb
test
mov
fld
rcr
shll
xchg
lret
fistpll
ds
jmp
adc
arpl
or
js
xchg
xor
and
sbb
iret
subl
nop
adc
jl
pop
fwait
dec
inc
cltd
pushf
add
pop
and
mov
xor
adc
xlat
icebp
sbb
daa
pop
mov
add
jl
or
jnp
jns
loop
mov
push
jecxz
push
in
inc
or
inc
rcrb
hlt
cmc
sbb
test
xchg
subb
add
xor
test
add
rcrl
cmpsl
cmpsl
add
or
jo
mov
add
enter
pop
ret
pop
xor
repnz
icebp
sarl
adc
cmp
leave
mov
jmp
gs
bound
jmp
jg
call
aas
push
in
je
jmp
in
loop
sub
dec
inc
xorl
or
mov
xor
mov
xlat
dec
add
adc
addr16
daa
aad
adc
inc
je
shlb
lea
or
cmp
imul
or
pop
xchg
fiaddl
xchg
aas
add
scas
pop
xchg
mov
popf
dec
jp,pn
lds
notb
cwtl
cmp
jo
jmp
mov
pushf
mov
cmp
hlt
cmpsl
add
jnp
dec
inc
jae
inc
ljmp
scas
pop
in
shrl
xor
push
arpl
pusha
shll
dec
dec
stos
loope
jecxz
jb
jae
xor
cmpsl
pop
in
sub
bound
jae
mov
cmc
movsb
inc
addr16
inc
cmp
add
mov
jge
sarb
push
mov
inc
mov
js
insb
cmp
cmp
pop
aas
test
cwtl
xor
int
into
scas
sbb
jmp
negb
xchg
mov
and
inc
neg
int3
fidivrs
and
inc
mov
test
mov
xor
aam
mov
sub
mov
fwait
add
sbb
jae
or
mov
and
out
repnz
sub
lcall
loopne
cmp
push
les
enter
xchg
sbb
dec
pop
xchg
mov
lds
ljmp
repnz
cmpl
sub
jae,pn
pop
push
enter
hlt
pusha
fs
sbb
scas
jne
mov
push
sbb
mov
pop
or
pop
mov
adc
adc
icebp
scas
hlt
dec
popf
lods
xor
mov
mov
mov
out
shll
daa
push
push
and
das
jle
into
ja
jl
ljmp
idivl
bound
cmc
xchg
mov
or
xor
mov
mov
add
loopne
ljmp
cmp
fidivs
add
mov
xorl
movsl
cli
out
inc
fsub
orl
pop
adc
out
lods
lahf
sarb
add
inc
xchg
lcall
fstp
push
clc
pop
andb
sbb
jg
mov
push
mov
icebp
push
mov
into
leave
loopne
jp
addr16
and
aaa
xor
lock
aad
int
adc
dec
mov
sbb
das
sub
dec
test
adc
dec
jbe
sbb
cmp
outsl
fimuls
adc
jmp
lret
push
or
cs
dec
aad
push
sub
jb
xlat
test
loope
xor
adc
sub
testb
mov
mov
imulb
dec
dec
mov
es
jbe
sbb
jns
sub
fwait
in
repnz
ljmp
fcoml
adc
mov
adc
daa
inc
inc
xchg
int3
cwtl
jl
jae
ficomps
or
cwtl
lock
lcall
mov
rorb
nop
adc
leave
or
sbb
and
add
enter
push
sub
out
adc
inc
xchg
call
stos
sub
movsl
lods
mov
pop
jge
xor
outsl
pop
xor
xchg
push
das
loop
sub
lea
rcrl
pop
aam
jge
gs
lcall
jge
xor
mov
adc
sbb
mov
xchg
mov
loope
pushf
xor
outsb
cmp
aam
adc
cmp
add
std
and
int3
inc
movsl
mulb
fisttps
lret
popf
mov
sub
xchg
in
bound
xchg
push
les
jbe
shll
push
inc
xchg
push
push
push
out
mov
in
mov
inc
or
shll
push
stc
repnz
dec
fists
or
push
mov
sub
ficomps
lods
loope
sti
and
out
in
mov
mov
dec
adc
jl
out
cwtl
mov
jmp
pusha
stos
shlb
lret
pop
push
das
outsb
mov
int
cmp
xor
or
xchg
cmp
mov
test
mov
sbb
cmp
fisttpll
icebp
int
ss
int
idivb
aam
imul
cld
gs
shll
gs
lcall
lea
add
imul
sahf
xchg
pop
sarl
rorb
movsb
inc
sub
int3
dec
mov
adc
add
addl
mov
popf
push
mov
sbb
push
aas
mov
add
fmull
and
aaa
dec
mov
push
jne
jmp
mov
nop
mov
andl
rcrl
das
in
pop
dec
mov
out
inc
movsl
insl
xchg
mov
adc
fwait
mov
idivl
daa
push
xchg
ja
das
mov
dec
iret
add
aaa
adc
pop
push
pop
adc
mov
cmc
xchg
mov
jno
mov
inc
std
or
mov
add
fidivrs
jbe
mov
cmp
xor
fwait
inc
mov
hlt
icebp
add
std
cmc
insl
popf
sbb
ret
xor
add
jl
add
ret
cmpsb
push
xor
popa
cmp
out
cmpsb
lahf
movsl
mov
out
ss
mov
adc
inc
test
das
lea
mov
arpl
lods
subb
test
aam
enter
jnp
push
gs
jns
fcmove
push
pop
mov
pop
add
sub
push
popa
jp
movl
decb
or
mulb
faddl
outsl
xchg
stos
xchg
xor
je
fldenv
fisubs
inc
inc
pop
arpl
pop
mov
push
and
inc
xchg
add
into
test
sub
fstl
lods
dec
out
les
mov
xor
inc
add
add
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
sub
outsb
inc
dec
push
push
sub
push
push
xor
in
mov
rorb
inc
jmp
push
push
mov
mov
mov
mov
andl
ja
mov
xchg
or
test
pusha
mov
xor
fucom
cmp
out
mov
test
sub
pushf
mov
cmpsl
mov
and
push
or
mov
stos
frstor
mov
lahf
mov
xor
fidivrs
das
or
sti
and
push
fsts
lahf
pop
inc
mov
xchg
sti
in
adc
and
push
out
dec
inc
xchg
out
in
mov
inc
inc
add
dec
mov
push
jno
jg
inc
dec
scas
adc
call
imul
mov
jp
jp
inc
fxch
clc
dec
mov
xor
push
add
and
cmp
iret
hlt
repz
jnp
inc
mov
jno
divl
rorb
shrd
scas
in
in
mov
sti
and
shlb
andl
dec
nop
daa
gs
nop
mov
push
fucomp
insl
popf
int
sub
sti
sub
gs
enter
in
dec
jne
pop
movsl
push
inc
mov
in
mov
dec
icebp
lods
cwtl
decl
inc
inc
xchg
pop
fdivl
pop
adc
popa
int
and
mov
cmp
es
les
xchg
cmpsb
xchg
fstps
arpl
lds
mov
pop
popf
xchg
sub
jne
push
iret
jns
call
cmp
jb
xor
mov
jmp
jecxz
or
pushf
movl
mov
andl
cmp
int
jne
xchg
lods
xor
xchg
out
leave
movsl
add
lods
insl
xchg
leave
pop
popa
xchg
jo
mov
stc
pop
adc
ret
jg
aad
adc
les
xchg
adc
dec
cs
mov
jno
pop
push
or
adcb
or
inc
arpl
mov
and
mov
enter
sub
and
push
imul
dec
or
ret
repz
xlat
sub
rcll
xlat
and
movsl
rcl
xchg
inc
mov
mov
fsubrl
lret
sbbb
jo
pop
sbb
inc
or
cld
stc
repz
mov
mov
les
mov
xchg
movswl
dec
fiadds
cmpsb
adc
rcrl
lods
sarl
testb
hlt
aam
ret
ja
ret
adc
test
jmp
clc
lret
xor
cmp
stos
fisttps
cmp
xchg
daa
xor
push
inc
push
cmpsb
xchg
das
enter
jg
es
lods
out
mov
out
in
cs
jmp
addr16
leave
push
mov
or
lods
mull
mov
dec
xor
fiadds
outsb
pop
mov
fdivl
int
inc
inc
in
sbb
ljmp
lea
push
iret
outsb
js
ja
sbb
jp
iret
dec
out
xchg
pop
pop
scas
iret
seta
idivb
pop
push
mov
andl
mov
xchg
jns
lahf
xchg
aam
call
xchg
cmp
lds
les
cltd
arpl
jp
xor
xlat
sub
nop
mov
add
jg
repnz
je
ljmp
sbbb
dec
or
pop
call
or
push
popa
fists
mov
push
and
in
inc
sub
nop
in
pop
ret
pop
jp
iret
int
mov
pop
fiadds
jle
repnz
or
pop
js
notb
test
mov
push
and
mov
inc
daa
or
test
in
rcl
fnstcw
insl
sub
int3
clc
xor
inc
jne
sbb
or
out
add
dec
xchg
add
cmp
mov
insl
inc
sbb
push
mov
jge
adc
sub
es
cmp
inc
pop
jmp
mov
xchg
das
icebp
cltd
movsb
mov
insl
nop
loopne
inc
xchg
pop
test
dec
loope
adc
scas
jae
ljmp
or
mov
js
dec
adc
pop
cmp
push
aas
into
inc
incb
fists
mov
fwait
inc
xor
mov
xorb
mov
xor
and
adc
fdivrs
dec
mov
pushf
inc
loope
sbb
test
leave
mov
mov
adc
push
cmp
mov
cmp
pushf
mov
sbb
cld
sbb
mov
ds
insl
inc
dec
pop
inc
rorb
dec
insb
xchg
fldl2t
dec
or
jbe
xor
cmc
pusha
mov
push
add
pop
adc
cmpsl
or
xchg
or
repz
sub
push
add
mov
mov
gs
jnp
scas
jb
aaa
bound
cltd
jbe
jmp
ficompl
sub
xor
xchg
icebp
dec
pop
sub
inc
adc
push
add
mov
out
mov
dec
lcall
cmpsl
stos
xchg
pop
loop
sbb
xor
cmp
cs
dec
movsl
repnz
loope
stos
bswap
lcall
std
addr16
and
xchg
stos
pushf
pop
sub
test
jl
inc
mov
dec
lret
lret
int
gs
or
test
mov
fsubrs
loope
ret
std
adc
pop
outsl
lret
xor
lret
sbb
movsl
rolb
pushf
dec
lock
sbb
mov
add
cmpb
push
sub
adc
lret
push
scas
adc
or
and
mov
sub
in
lock
pop
xchg
push
es
inc
mov
jbe
mov
mov
bound
es
lcall
outsb
int
pop
lods
pop
and
mov
daa
xchg
imul
jg
or
and
mov
adc
mov
bswap
call
mov
insb
loop
loopne
leave
dec
aad
xorb
imul
cmc
and
xchg
mov
lods
and
sbb
adc
sub
sub
aad
cltd
fsubs
cwtl
orl
orb
nop
mov
enter
dec
sbb
or
cmp
adc
sub
movsl
or
inc
sub
iret
jbe
sub
cwtl
or
outsl
outsb
and
dec
leave
mov
in
test
xchg
push
push
sbbb
test
stos
mov
push
call
mov
pop
and
cmp
jge
xchg
adc
jb
push
ret
icebp
mov
sub
jecxz
xor
popf
jg
mov
out
jl
mov
mov
divl
enter
mov
stc
pop
sbb
in
rolb
xor
ljmp
fnstsw
rcrb
sbb
add
push
enter
cmp
mov
pop
stos
test
mov
mov
jae
cmpsb
or
jne
test
fistl
orl
dec
ljmp
sbb
adcl
stc
push
adc
pop
jmp
fnstenv
pushf
pop
xor
push
mov
or
and
inc
jp
in
ficompl
imul
scas
fistpll
jecxz
push
lret
into
fstl
mov
es
fwait
xchg
jle
jo
scas
out
mov
ds
push
in
popa
shl
pushf
mov
fnsave
jmp
ja
inc
add
pusha
jbe
test
jno
sarb
dec
cli
rorb
sub
jae
xchg
jne
outsl
jno
cli
mov
sub
lds
mov
stos
lds
jp
sbb
pop
les
mov
sub
sub
sbb
sbb
adc
ficomps
imul
in
xor
popa
repnz
addr16
push
mov
inc
mov
inc
jle
xchg
out
xchg
loopne
mov
aaa
add
test
dec
aas
lods
jo
push
mov
dec
dec
sbb
aam
shlb
sub
insb
movsb
push
cmp
lahf
cmp
jp
adc
out
jmp
aam
mov
pop
add
int3
sbb
cmp
jno
lds
test
cmp
push
adc
or
sbb
out
dec
cmp
and
sub
testl
mov
pop
rcrl
sbb
jae
xor
inc
mov
and
es
cmp
ret
fistpl
sbb
mov
xor
outsl
fmul
out
cld
jge
lds
repz
cmc
and
repnz
add
loop
xchg
pop
rcll
mov
cmp
mov
pop
mov
inc
jle
cmpsb
in
sarl
mov
jno
sbb
or
pop
mov
sub
cmp
aad
loopne
xchg
xor
sbb
jns
test
pop
sar
lahf
dec
and
pop
loope
dec
stos
repz
mov
sub
xchg
cmpsl
xchg
inc
idivl
jne
push
push
sub
int
fstps
xchg
xor
dec
mov
xor
test
push
add
xchg
push
pop
daa
int3
gs
push
sbb
push
mov
or
pusha
leave
xchg
cmp
scas
in
pop
icebp
stos
fsubrs
add
in
sub
and
push
push
xor
mov
jl
sbb
push
orl
lea
sub
cmpsb
unpcklps
jle
jbe
push
sbb
pusha
sub
lahf
aam
adc
cmp
or
inc
xchg
cmp
and
inc
cmp
push
stc
aad
lods
jge
inc
imul
and
cltd
dec
insb
out
mov
ljmp
popf
xchg
inc
inc
cmpsl
xchg
mov
push
mov
jns
negb
push
mov
sbb
stos
mov
jno
jnp
stos
mov
mov
rcll
jl
pop
mov
in
jmp
xchg
and
mov
pop
xchg
pop
insb
mov
and
xor
and
pusha
sbb
ds
dec
std
scas
ret
add
mov
es
xchg
push
mov
imul
test
jne
and
arpl
lods
inc
in
ror
cld
inc
pop
iret
jne
or
andl
stc
jbe
scas
cltd
cmp
and
xchg
pop
cltd
pop
push
orl
xchg
jbe
in
fs
dec
mov
daa
cmpsl
cmp
add
sbb
dec
hlt
shr
mov
mov
test
out
fbld
lea
dec
xchg
data16
into
insb
push
sbb
stos
mov
mov
sbb
aam
xchg
sub
movsl
dec
mov
movsl
push
xchg
in
lods
loopne
mov
push
dec
or
adc
lea
js
leave
add
jb
stc
leave
push
addr16
mov
xchg
dec
push
inc
push
add
adc
ret
into
addr16
aas
movsb
test
cmp
lea
out
or
div
cmp
hlt
lds
imul
cmp
dec
lods
dec
fisttpll
jle
sub
aam
daa
sub
ficompl
mov
cli
insb
and
les
ror
cs
cmpsl
aad
xchg
pop
and
in
scas
cmp
xchg
sbb
mov
lock
clc
arpl
xchg
into
pop
add
mov
xchg
push
stos
cmp
mov
fwait
cmpsl
mov
mov
aad
out
cmp
dec
jno
arpl
adc
fwait
and
testl
movb
mov
hlt
mov
mov
sbb
repz
sub
xchg
mov
faddp
mov
jl
dec
lods
push
dec
xor
add
xchg
int
int
add
lret
insb
stos
xor
xchg
shl
pop
cmp
sub
ja
add
into
movsb
jmp
repz
repnz
mov
inc
dec
pop
out
rcrb
rcrl
mov
and
mov
fldt
or
mov
mov
ss
cmpsl
int
mov
xchg
inc
int3
xchg
lret
push
and
in
xchg
test
aaa
lods
and
mov
xor
sti
js
jne
xchg
test
xchg
add
cmpsb
pop
lret
call
xchg
add
dec
mov
jmp
and
imul
inc
xor
xor
test
daa
inc
dec
pop
dec
add
sub
push
mov
xchg
lods
xor
shr
mov
sub
push
dec
cmpl
leave
push
cmp
inc
lret
jo
shr
mov
cmp
sti
inc
lret
pop
xchg
es
daa
cmp
add
xor
push
leave
mov
insl
and
adc
mov
xchg
cld
mov
add
daa
pop
dec
outsb
or
dec
cwtl
mov
outsb
sub
dec
fimuls
aad
data16
and
test
orb
int3
sets
aaa
jae
inc
push
out
pop
push
inc
push
adc
and
lcall
dec
sahf
and
jge
lods
sbb
lods
xchg
imul
lret
pusha
fldz
fisttpll
call
xchg
xor
pop
jno
fnsave
mov
mov
or
mov
scas
or
jne
mov
mov
mov
gs
push
inc
jns
rcr
push
add
dec
daa
xchg
loopne
cli
mov
int3
adc
add
cld
sbb
mov
adc
loop
idivb
xlat
repz
jae
fwait
push
mov
faddp
xchg
pop
ss
add
ja
pop
mov
pop
jb
mov
popf
repnz
icebp
pop
mov
pop
movsb
or
mov
imul
sbb
in
jecxz
pop
jb
xchg
xchg
scas
arpl
pop
cmpl
jns
xchg
jg
sbb
jmp
movsb
inc
fdivrs
movsb
push
flds
loop
push
dec
sbb
roll
cmpb
push
movsb
dec
jnp
mov
mov
mov
jle
test
ror
fsubrs
or
insb
cmp
xorb
ds
outsl
pushl
ds
insl
aad
dec
popf
cwtl
xor
mov
cmp
adc
push
add
sub
js
xor
xchg
int
in
pushf
negl
cwtl
jecxz
sub
pop
insb
push
or
xor
jle
or
mov
rorb
out
das
sbb
andb
lret
and
mov
gs
sbb
fdivrl
mov
cmpsb
in
mov
fstps
mov
fxch
jb
sbb
mov
adc
add
adc
iret
and
inc
cwtl
adc
nop
lock
push
sbb
xor
jns
inc
push
repz
sub
adc
incb
idiv
or
lods
enter
cmpsb
mov
fildll
mov
shr
outsl
in
mov
insb
mov
leave
xchg
rcll
cmc
sub
lcall
in
cmpsl
pushl
mov
mov
mov
aad
ret
and
in
pop
adc
mov
test
mov
jo,pt
lods
mov
inc
inc
test
mov
mov
cli
arpl
int
cmp
in
xor
cmp
rorl
call
cmp
cmp
iret
stos
sub
mov
pop
gs
iret
mov
sbb
sbb
xor
popl
and
sub
dec
in
push
mov
add
stos
dec
push
icebp
jae
cmp
add
orb
push
call
xor
rorl
sbb
mov
push
push
mov
inc
imul
xchg
mov
aaa
nop
push
movsw
xchg
roll
ss
cmp
stc
jge
dec
mov
insb
dec
movsb
mov
adc
data16
rclb
andl
jne
jl
out
push
xchg
stc
dec
xchg
pop
out
int3
fldt
push
lcall
mov
pop
outsl
sbb
mov
movsb
pop
ja
shrb
mov
sub
dec
lods
adc
pop
adc
sbb
or
sub
adc
fldt
inc
mov
sub
add
sub
ficoml
push
cmp
mov
mov
or
gs
or
movsb
cmp
inc
or
mov
or
push
leave
insl
xlat
loopne
cmp
out
jnp
xor
cmpsl
movsb
gs
cmpb
push
leave
pop
dec
jne
jnp
dec
jo
add
adc
sbb
mov
out
and
push
inc
push
mov
or
pop
sub
lea
leave
pop
mov
xor
pop
mov
cmp
mov
ja
mov
js
notl
xor
jne
fldenv
js
lret
xor
inc
lret
popa
sub
mov
push
inc
xor
jno
lods
pusha
jl
xchg
cmp
into
pop
fdivrs
adc
pop
add
jge
inc
pop
sti
add
push
mov
mov
jmp
or
inc
lods
jl
in
jmp
mov
fcomip
mov
xchg
cld
inc
es
lods
ds
icebp
test
push
mov
jns
mov
leave
aaa
movsb
sub
inc
in
pop
notl
ret
lds
adc
mul
filds
shll
mov
nop
lret
mov
jmp
insl
lcall
lds
leave
je
add
test
out
jns
sbb
jae
sbb
sarl
sbb
mov
push
or
xor
inc
jp
cli
mul
es
rorl
mov
mov
sbb
mov
mov
or
pusha
adc
leave
cmp
sub
inc
icebp
lea
mov
sub
stos
pushf
push
in
mov
sub
or
mov
dec
add
sarl
xlat
xchg
data16
mov
ljmp
xchg
cmp
pop
cmp
call
pop
js
add
and
sar
gs
jp
and
lret
push
jne
stos
mov
dec
fnsave
mov
lahf
lock
adc
js
fadd
mov
lods
adc
rcl
je
pop
mov
adc
mov
add
pusha
xor
lret
inc
inc
mov
and
daa
mov
ja
scas
jnp
xchg
xchg
loopne
subl
jmp
xchg
pop
mov
sysenter
clc
sbb
push
arpl
frstor
xor
sub
fstpl
sahf
in
std
lock
lcall
inc
mov
pop
xlat
mov
ret
and
sub
subb
or
xchg
arpl
push
jmp
mov
push
ret
mov
andb
test
in
cs
jo
mov
sub
int
and
or
add
sar
jge
mov
pushf
in
push
outsb
arpl
sbb
dec
shrl
lods
subl
mov
jg
loopne
lret
das
jg
in
jle
mov
sbbl
and
or
dec
fsts
mov
loopne
negl
push
add
shll
cltd
in
insb
lahf
in
andl
lods
adc
das
mov
mov
cmp
mov
push
ror
mov
jecxz
push
sub
int3
mov
cmp
cwtl
ret
into
push
push
das
fstpt
add
leave
adc
pop
mov
push
push
or
and
push
pop
hlt
mulb
inc
arpl
lea
sub
sub
pop
fbstp
lock
mov
scas
leave
lods
shl
ret
jno
insl
or
test
vpunpckhwd
fstpl
stos
push
push
xor
xor
jns
cmpsl
das
fisttpl
mov
mov
pop
inc
out
pop
dec
fidivrs
jl
sub
out
xlat
lcall
mov
jmp
or
sbb
xlat
sbb
fs
js
mov
mov
js
xor
add
push
push
rolb
fcmovne
inc
or
out
adc
mov
dec
jns
das
outsb
sub
push
sarb
xor
ret
lock
les
testl
cmp
jno
daa
pop
jno
cwtl
mov
fwait
inc
pop
inc
mov
sub
data16
test
ret
lcall
add
push
adc
cmp
loop
nop
addr16
xchg
gs
push
xlat
movsb
or
inc
aas
cmp
popa
bound
sub
pop
popf
rol
lods
imulb
add
rorl
gs
mov
inc
jle
out
leavew
fistpl
jge
xchg
stc
or
lahf
jb
pop
mov
fldenv
add
stos
push
push
jmp
dec
movsl
out
jmp
mov
xchg
mov
sbb
shl
fldz
mov
loop
mov
mov
je
icebp
mov
inc
push
lret
cmc
cmpsb
sub
repz
lods
out
mov
push
dec
sub
shl
ss
xor
add
jns
lret
rcrl
dec
lahf
push
adc
mov
lcall
scas
cmp
test
clc
or
pop
or
lea
dec
sbb
shlb
sbbw
pop
mov
inc
sbb
mov
xbegin
add
test
daa
mov
push
div
frstor
loopne
pop
sub
in
enter
fucomp
ret
out
int3
jno
insb
pop
in
mov
jge
sbb
xor
in
stc
xchg
push
fwait
or
int3
jmp
and
push
push
aas
leave
or
mov
lret
test
insb
and
out
int3
push
xor
insb
adc
mov
jb
lcall
das
mov
sbb
lea
xchg
add
cltd
stc
jle
xor
mov
pop
or
in
movsl
test
pop
test
ja
jg
inc
sti
stc
enter
stc
push
les
cmpsl
or
pushw
cld
sub
xchg
jecxz
andb
test
jns
xchg
mull
test
movsl
fstps
dec
in
xchg
rclb
imul
les
push
push
into
int
cmp
pop
or
loope
aas
gs
or
adc
cwtl
push
adc
adc
dec
fisttpll
xor
sahf
jl
ret
lds
insb
mov
daa
and
in
push
xchg
dec
push
inc
push
ja
push
das
in
dec
cs
mov
sarb
mov
dec
std
faddl
add
mov
xchg
cs
adc
dec
aad
add
xlat
inc
lahf
or
shlb
pop
xchg
push
xchg
push
bound
rcrb
pop
es
js
push
jecxz
xor
fdivrs
icebp
in
add
xchg
and
ds
nop
dec
loope,pt
movsb
movsl
in
stc
inc
sti
push
frstor
ja
push
aas
jle
std
mov
std
sbb
sub
in
adc
cs
sub
les
dec
push
subb
xor
xor
and
push
jo
cmc
iret
lock
mov
rorb
xlat
and
xchg
sbb
sarb
mov
aad
loope
dec
cmp
pop
test
je
mov
push
mov
pushf
mov
cltd
pop
fs
pop
icebp
and
repz
mov
xchg
adc
inc
js
lods
vlddqu
add
pop
mov
push
or
pop
cltd
cmp
and
push
xchg
inc
loop
mov
jo
jae
popa
adc
push
lods
cli
divl
mov
aaa
jbe
lahf
out
mov
aam
dec
gs
push
mov
inc
mov
sub
inc
mov
in
mov
loop
xor
punpckhbw
jmp
pop
nop
xor
push
adc
jge
dec
bound
fs
fstps
mov
and
lods
stos
push
insl
lds
cmp
mov
sub
int
pushf
xor
les
int
leave
jmp
fnsave
pop
inc
dec
repz
pop
xor
or
cmpsl
mov
push
imul
fildl
push
loop
pushf
aaa
das
fwait
or
ret
xchg
pop
outsl
ficoml
stos
xor
jge
addr16
jmp
add
mov
or
fisttpll
mov
insb
mov
mov
test
pop
mov
xchg
lods
fsubl
lret
mov
xchg
inc
mov
dec
cli
dec
adc
xchg
int3
mov
or
cwtl
push
and
stos
pop
xor
push
loopne
xor
push
xor
int
fdivr
dec
idiv
mov
jg
and
fmull
out
push
push
jmp
mov
enter
lods
push
adc
push
xor
sub
xchg
mov
call
sbb
inc
test
xchg
sarb
out
repnz
add
dec
fs
icebp
jae
pop
shlb
imul
sbbl
jbe
popf
mov
jecxz
jl
pop
sub
fdiv
push
ds
cmc
xorb
mov
jne
outsl
and
enter
pop
dec
lahf
xlat
inc
pop
fmull
dec
pusha
and
ss
ljmp
mov
mov
adc
test
xor
and
inc
daa
jl
and
aam
cmp
js
addr16
dec
bound
stc
xchg
pop
in
push
cmp
test
jle
xor
and
lds
out
and
add
mov
ja
mov
rorl
sahf
xor
or
jg
mov
daa
mov
push
xor
aad
lods
ret
mov
push
jo
mov
fisttpll
hlt
push
cmp
add
loope
and
insb
pop
lea
aas
hlt
test
insl
push
mov
jb
imul
insl
enter
xchg
push
mov
pushf
nop
data16
aad
lcall
test
mov
inc
pop
jno
test
lcall
push
insl
stc
xchg
push
loope
cmpl
pop
cmpsl
test
loop
mov
inc
dec
xor
test
jcxz
inc
sub
jmp
and
jg
cmpsb
fcomps
mov
lret
xor
xor
and
pop
sbb
cmpsb
push
fcmovnu
lea
adc
mov
clc
aad
jns
mov
mov
push
sti
mov
xor
adc
adc
pop
cmp
jo
sub
pop
and
loop
sub
leave
mov
mov
push
pop
jecxz
js
js
and
sbb
xorb
dec
mov
push
mov
jle
fwait
mov
mov
popf
mov
sbb
lock
hlt
je
pop
pop
inc
and
outsl
lret
aad
lds
xor
out
push
fnsave
int
pop
mov
ret
or
mov
les
je
in
mov
std
aaa
pop
pop
ret
adc
add
dec
jo
mov
cltd
mov
insl
push
cmp
mov
das
sbb
lods
pop
stos
mov
dec
dec
inc
xchg
notl
data16
in
popw
addr16
push
stc
ds
in
es
repnz
imul
outsl
cmp
in
sub
and
add
aaa
cwtl
ficoml
sbb
out
mov
inc
adc
mov
dec
pushf
stc
test
pop
lods
cmp
dec
jb
in
or
rol
fninit
xor
add
dec
popa
jb
movl
xchg
int3
cmp
hlt
rcr
dec
sti
push
lods
out
and
dec
shlb
xchg
stos
pop
mov
sbb
add
cld
jnp
jne
mov
jle
mov
mov
dec
mov
jmp
rcl
inc
cmp
dec
xorl
mov
call
dec
cli
arpl
xchg
loop
test
xchg
pop
ja
mov
bound
mov
pop
mov
mov
push
inc
out
pusha
popa
and
adc
sahf
dec
fcoml
jge
cmp
out
cmp
jle
push
cmp
push
loopne
pop
fsqrt
pusha
pop
addr16
adcl
xchg
cmpsl
jmp
mov
repz
movsl
push
cmp
jo
jecxz
daa
inc
jge
sbb
mov
mov
aas
xlat
js
shrb
scas
repz
mov
add
push
xor
insl
movsb
out
cmp
mov
or
out
jmp
hlt
xor
das
mov
in
repnz
mov
mov
dec
pop
push
sub
mov
add
flds
and
adc
flds
adcl
sbb
aad
sub
sbbl
test
xlat
jae
mov
fistpll
xchg
xor
xchg
inc
xor
xchg
lea
cmpsl
icebp
adc
push
push
push
inc
enter
adc
rclb
in
pushf
cmc
subb
cli
clc
lahf
inc
icebp
mov
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
jno
push
sub
push
push
push
mov
mov
pop
sub
js
in
fs
loope
adc
sbb
daa
in
out
ss
cmpsl
fdivl
adc
lret
cltd
mov
pop
sub
cli
dec
xchg
outsl
jnp
aam
outsb
nop
sub
sti
out
das
fidivl
shrl
rolb
scas
jno
xchg
cmp
xchg
lods
insb
mov
push
lds
out
push
daa
test
sarl
add
mov
insl
mov
ja
fsubrs
xor
mov
dec
mov
call
mov
jo
mov
pop
mov
push
mov
hlt
mov
xchg
or
xchg
dec
jbe
incb
jbe
and
or
jmp
jle
jmp
dec
scas
mov
dec
adc
test
fstpt
jnp
sahf
xchg
cmc
mov
js
mov
and
lret
add
aaa
negb
cltd
stos
cmp
push
xchg
mov
cmp
xorb
adc
mov
out
lret
les
adc
jmp
outsl
stos
adc
xor
dec
xchg
test
subb
pushw
shlb
jae
sbb
fsubl
pop
in
add
cmp
es
lret
inc
and
add
cmp
mov
test
in
or
ljmp
jmp
xchg
mov
or
arpl
and
enter
out
jg
dec
sub
lock
movsl
rolb
mov
fdivr
and
mov
jge
fdivrl
cmp
js
push
mov
mov
push
insb
repnz
in
lcall
xchg
pop
adc
jnp
in
iret
pushf
lods
and
into
addr16
imul
jl
jae
lret
stc
jo
xchg
iret
mov
pop
or
pop
jp
nop
movb
mov
pop
jne
imul
enter
mov
in
gs
loope
add
push
sbb
pop
jmp
inc
push
pop
adc
cwtl
jl
ret
repnz
sbb
sbb
das
movsl
cmp
pusha
outsl
push
rcrl
out
loopne
mov
fcomp
push
pop
xlat
cwtl
xor
cmp
jno
add
popa
lds
ret
or
push
mov
lock
arpl
push
pusha
pop
sarl
fisubl
push
jne
popa
inc
mov
xchg
dec
xorl
jmp
test
es
lret
repz
insb
inc
pop
repz
cwtl
mov
inc
shrb
dec
pop
inc
call
sti
rol
lret
and
nop
fwait
adc
dec
stos
xor
and
jp
or
push
in
inc
jle
jns
lods
std
pop
divl
lret
xchg
sub
int3
mov
xchg
jecxz
movl
dec
or
xorb
dec
adc
or
mov
and
sahf
test
add
aad
mov
jae
js
cwtl
jge
jle
inc
enter
xchg
dec
cmc
iret
push
iret
aaa
leave
imul
push
add
jo
popa
adc
iret
ds
into
sti
shlb
push
push
add
enter
nop
lock
jno
test
data16
sbbb
mov
push
cmpsb
lds
paddusw
sub
jo
jb
out
add
shll
and
mov
jb
jns
mov
mov
loope
mov
push
adc
out
sbb
cld
add
dec
xor
dec
icebp
add
or
xchg
in
outsb
xorb
or
xor
push
pop
push
gs
and
ret
fstps
jo
scas
out
cmc
lret
sbb
pop
in
test
add
cmp
insl
mov
test
inc
repz
xor
or
mov
cltd
mov
xchg
ds
pop
fiaddl
roll
push
dec
jnp
test
ss
insl
jo
das
xchg
sbb
sub
sahf
pop
mov
xchg
lret
or
and
dec
insl
or
das
jbe
cmp
scas
or
aam
push
adc
rorb
xor
sbb
dec
lods
sub
sub
inc
add
hlt
mov
xor
rol
mov
push
lods
pop
fildll
mov
imul
out
inc
or
outsb
mov
rolb
inc
mov
xor
jnp
and
data16
arpl
cltd
xor
mov
push
sub
ds
lea
mov
mov
andb
push
cmovo
loop
gs
fcmovb
xchg
push
xchg
xor
add
inc
popf
mov
sti
in
les
outsl
insl
pop
pushf
sti
test
xor
bnd
push
mov
mov
das
cmp
in
inc
lds
xchg
test
mov
xchg
ds
lods
mov
lret
xorb
iret
pop
xor
mov
cwtl
movsl
jmp
pop
xchg
cmp
adc
mov
jp
cmp
push
sub
push
rcr
insl
div
out
scas
sbb
mov
inc
ror
pop
ljmp
idivl
xchg
fwait
sbb
push
sub
push
xchg
mov
push
sbb
pop
mov
and
jnp
pusha
mov
sbb
movsb
or
cld
lahf
push
mov
jl
out
dec
movsl
push
mov
leave
stos
in
lds
add
mov
dec
cs
jmp
xchg
sbb
mov
mov
jl
movsb
stos
aas
clc
and
aam
imul
outsb
out
sar
scas
sub
popf
jae
dec
pop
dec
mov
imul
int3
or
pop
or
sbb
xchg
call
mov
or
nop
fwait
rol
adc
dec
xor
cs
aad
mov
adc
mov
jge
mov
stc
xor
ljmp
das
jge
mull
mov
or
mov
stos
mov
movsb
insb
rcr
sahf
push
push
in
cmp
cld
or
push
jmp
shll
dec
or
inc
mov
xchg
movsb
mov
aam
nop
dec
push
jecxz
jle
repz
fwait
rcll
dec
adc
dec
out
xor
dec
enter
jecxz
icebp
shrb
pushf
pop
pop
jle
outsl
scas
outsl
push
mov
loopne
push
push
cmc
aaa
adc
in
out
adc
pop
or
icebp
mov
mov
pop
push
shlb
cmpsb
mov
imul
bound
pop
mov
push
call
mov
cmp
fidivs
mov
cmp
xchg
imull
jns
mov
iret
sbb
repnz
stc
and
xchg
push
cmpb
sar
push
mov
jbe
mov
nop
push
dec
ret
mov
inc
dec
sub
cmp
inc
test
push
cbtw
and
xchg
lea
push
xchg
movsl
js
and
jnp
xchg
fcmovne
scas
pop
les
movsl
inc
ret
lods
cmpsl
xchg
jae
daa
dec
arpl
push
mov
pop
add
or
sbb
fistpl
xlat
dec
xchg
sti
mov
mov
dec
pop
movsl
jmp
xor
fiaddl
iret
popf
out
sub
lea
lret
dec
mov
mov
scas
lods
insb
mov
daa
jno
dec
mov
xchg
mov
out
sbb
outsl
lock
repnz
sbb
mov
ja
outsl
pop
shlb
mov
pop
pop
inc
daa
add
jns
inc
arpl
mov
fsincos
or
dec
jb
sbb
xchg
add
stos
repnz
xor
or
or
jbe
test
arpl
fnsave
addr16
jo
popf
out
pop
dec
jo
dec
sti
jmp
mov
push
dec
mov
jp
mov
mov
sbb
jle
xor
imul
fbstp
push
xor
loope
sub
outsb
adc
adc
incb
inc
xor
fwait
pop
sub
popf
leave
push
sbb
inc
fxch
insl
push
call
jb
jl
sbb
jmp
or
or
out
aas
ljmp
jnp
loopne
imul
push
clc
sbb
pop
sub
push
add
addr16
sbb
test
adc
adc
push
sub
mov
pop
std
xchg
out
ja
xchg
icebp
jge
fucomp
enter
lahf
mov
aas
push
daa
movsb
jnp
push
and
idiv
pushf
xchg
mov
in
not
mov
sbb
jp
std
stos
xchg
mov
dec
shll
or
mov
lcall
mov
jp
push
sti
insl
mov
imul
add
es
in
or
xor
pop
mov
dec
mov
fstpl
inc
xlat
sti
sahf
test
mov
inc
adc
mul
cmpsl
fwait
xchg
test
jbe
or
mov
fsubl
dec
add
inc
fldcw
jno
sub
lods
sub
inc
and
jae
jno
cltd
jmp
insl
xchg
jg
enter
js
push
test
adc
mov
inc
xchg
adc
adc
jno
push
loopne
cli
out
jb
into
cmp
repnz
fldt
out
push
hlt
dec
sbb
sub
andl
push
scas
or
aad
lahf
fimuls
xor
pmuludq
inc
sub
fwait
mov
jne
push
sti
push
lea
jno
jbe
dec
xlat
es
mov
push
pop
nop
stos
and
arpl
imul
rclb
sub
ljmp
cmp
cmpb
dec
icebp
sti
xor
hlt
mov
shrl
xlat
push
xor
cltd
pop
scas
add
jle
repnz
jae
arpl
jg
les
aad
jnp
out
push
out
shlb
push
pusha
dec
sbb
adc
push
sub
outsl
adc
scas
les
push
pop
leave
in
popa
push
xor
in
sbbl
push
das
repnz
out
mov
je
lods
rcl
mov
xor
insl
push
xchg
and
or
jge
sbb
mov
int3
fbstp
mov
sub
mov
mov
popf
fistl
rcrl
adc
imulb
mov
icebp
push
fs
sub
lock
stos
jb
lea
loop
sub
stos
sbb
inc
mov
addr16
sarl
mov
mov
cmp
add
push
mov
loopne
push
adc
sbb
lea
les
test
mov
popf
jecxz
sub
sahf
mov
addr16
fimull
fadds
pushf
fs
jl
fildll
aam
loope
jne
push
and
andb
jnp
sub
xchg
xchg
data16
pop
and
test
mov
cmpsl
shl
insb
lea
dec
mov
pop
repnz
out
cmpsb
pusha
enter
mov
xchg
rcll
std
pop
mov
inc
out
cmp
cmp
cmpsb
out
xchg
int3
inc
dec
in
test
add
lea
inc
pop
lret
mov
or
adc
mov
sbb
fxam
daa
push
in
fdivrs
arpl
xor
sub
outsb
sub
mov
cmp
xchg
push
cmpsl
cmp
aas
and
xor
jle
push
push
fmuls
or
cmp
dec
cld
push
mov
loopne
out
cmp
push
movsl
cli
mov
mov
js
out
xchg
adc
mov
or
mov
xchg
jno
outsb
push
sbb
lods
pop
test
add
leave
lods
adc
je
dec
fiaddl
sbb
xchg
es
faddl
jg
inc
aaa
loopne
mov
mov
daa
push
lcall
fidivs
adc
call
jne
arpl
ja
push
pop
scas
outsl
test
and
out
cmc
iret
adcl
xor
les
mov
mov
lea
std
adcb
lret
lods
xchg
test
mov
daa
lret
in
pop
out
jns
dec
xchg
mov
cmp
mov
mov
lods
pushl
dec
into
mov
mov
nop
jp
arpl
aas
jns
dec
or
test
xchg
sub
fcmovu
dec
and
add
mov
imul
push
mov
cld
enter
push
insl
adc
and
roll
clc
dec
mov
jp
ds
pop
sub
push
mov
jg
sbb
lret
nop
add
jbe
xor
mov
add
adc
cmp
jbe
fwait
je
subl
mov
sbb
cmp
dec
pop
mov
movsl
xchg
mov
inc
sbb
loope
mov
mov
inc
inc
scas
lret
or
sub
xor
mov
and
ret
xchg
into
fmuls
dec
andb
shll
pusha
sub
das
ja
into
pop
jns
xchg
idivb
mov
in
add
sbb
repz
dec
hlt
vpaddusb
loope
jge
cltd
cltd
cli
xchg
sub
ret
fdiv
movsb
xlat
cmc
sti
sbb
mov
arpl
out
add
or
int
xor
add
add
in
push
jnp
dec
push
cmp
das
push
cld
add
xor
cmp
out
adc
decl
rcrb
fldenv
ja
je
push
sub
mov
lods
insl
fistps
jnp
aam
icebp
jno
sbb
jne
pop
repz
xor
clc
int
movsb
dec
das
es
cwtl
cmpsl
fisubrl
inc
inc
adc
sub
push
dec
idivl
xlat
jp
arpl
adc
sub
in
jmp
pop
outsb
jecxz
mov
jge
scas
aad
adc
dec
fs
in
xchg
pusha
xor
sbb
xchg
or
xchg
cmp
or
lret
xlat
xchg
xor
sbb
loope
frstor
and
aas
jge
and
push
bound
xor
push
cmc
or
aad
push
mov
mov
enter
xorb
dec
push
imul
dec
dec
aam
daa
cmpsl
jle
xor
call
pop
dec
mov
pop
pop
mov
int3
or
fldl
push
out
or
sbb
imul
rorb
jo
gs
adc
adc
clc
stos
inc
jns
adc
popa
divl
int3
imul
push
push
cld
loop
mov
test
pusha
cmc
ss
cli
negl
sbb
xchg
cmp
fbld
outsl
cmc
icebp
xorl
push
cmpsb
and
daa
bound
ja
out
cmpsb
pop
inc
scas
ss
mov
pop
adc
dec
dec
add
or
in
xchg
mov
cmp
xchg
popf
push
lcall
cmp
jle
jle
jecxz
mov
xor
adc
in
shrl
jae
sbb
mov
cmp
mov
imul
cltd
mov
loopne
jle,pn
push
jp
je
xchg
int3
mov
in
adc
jno
mov
das
iret
in
push
lods
test
aas
in
cmp
cmpsl
mov
push
add
sbb
push
and
out
push
mov
mov
cmpsb
jo
loope,pt
lds
loop
jg
arpl
movsb
mov
pop
xchg
xor
imul
arpl
ficomps
jnp
sbb
sub
into
dec
xor
test
sarb
cmp
popf
jmp
mov
outsb
push
jb
leave
mov
call
jno
push
jb
out
pop
cmp
push
and
adc
inc
les
pop
mov
jnp
lds
or
push
adc
pop
stos
jo
cld
mov
lods
mov
lret
enter
and
jecxz
repz
mov
out
fwait
nop
aas
cs
mov
or
dec
add
push
mov
pop
lods
jne
das
inc
mov
movsb
jae
jmp
inc
ret
lret
jns
icebp
fsubrl
dec
sahf
fnstenv
xchg
adcl
popf
lahf
ja
cmpsl
js
jnp,pn
or
xor
lahf
out
addb
add
mov
mov
or
fsubrl
rorl
xchg
jecxz
movsb
test
xor
hlt
jp
lret
dec
ss
dec
or
hlt
divl
stmxcsr
add
push
gs
insb
cmp
dec
jl
outsw
inc
aam
fmuls
addr16
nop
push
je
shll
insb
insb
ret
push
mov
cmp
mov
repnz
jmp
adc
adc
cmp
xor
cli
arpl
inc
mov
mov
cmc
xchg
std
shll
out
jmp
dec
gs
cmpsb
aad
daa
add
xchg
push
mov
scas
xor
cmp
push
dec
add
inc
add
mov
mov
xchg
imul
pusha
cmp
push
repnz
inc
ds
pop
out
inc
mov
pop
notl
in
push
rcl
cmp
push
sub
mov
xchg
js
scas
subl
push
pop
dec
pop
jno
dec
mov
and
jl
jge
add
shll
scas
push
int
pusha
insb
xor
adc
scas
in
icebp
stc
jg
popf
xchg
and
cmp
xchg
sub
or
shl
lock
outsb
jnp
daa
xchg
ficoms
ficoms
sarb
ret
xchg
loope
mov
mov
adc
mov
test
jge
jne
ret
fldcw
dec
pop
inc
mov
adc
sbb
push
adc
lret
sbb
cmp
adc
scas
je
adc
daa
cmp
jl
cmp
cmp
mov
popf
push
movsl
dec
add
push
jnp
pop
add
jmp
std
sarb
jae
add
call
pop
mov
sbb
sarl
push
shrb
cmp
xchg
aam
mov
fimuls
sahf
dec
mov
lret
mov
dec
push
adc
ljmp
sti
in
mov
dec
insl
popf
cwtl
jmp
ret
sbb
inc
mov
mov
test
dec
push
pusha
mov
add
shlb
add
xlat
rcll
dec
out
pop
cmp
add
fwait
inc
fsubs
lods
xchg
sarl
jl
mov
xchg
mov
repnz
negl
mov
xchg
mov
or
mov
sub
or
push
or
adc
icebp
nop
jnp
mov
out
push
sahf
inc
sbb
test
movsl
movsb
bound
aam
dec
mov
out
shlb
insl
repz
jnp
test
int
xor
enter
jnp
nop
daa
fcoms
lea
xchg
push
or
clc
fidivrl
test
dec
mov
jnp
xor
adc
adc
out
shlb
fwait
js
hlt
fcoms
mov
sub
aad
je
push
xor
cmp
pusha
add
add
push
mov
inc
xchg
pop
lahf
jecxz
mov
out
daa
andl
rclb
insl
adc
scas
pop
mov
lods
and
dec
jl
js
pop
lods
sbb
in
in
inc
les
push
and
lret
ljmp
jo
aad
cmc
test
loopne
jb
jne
jno
adc
jg
or
pop
cmp
xor
adc
test
ja
clc
mov
es
inc
mov
lahf
test
cs
scas
int3
inc
inc
stos
jecxz
cli
sub
insb
adc
push
out
mov
pop
xlat
push
pop
in
push
es
dec
inc
and
or
rcr
out
inc
or
les
xchg
scas
inc
scas
mov
out
sub
mov
jecxz
lods
sub
cmp
shll
imul
mov
push
mov
xchg
ljmp
push
cmp
mov
fcmovnu
dec
jo
dec
cmp
sarb
ja
dec
jle
sbb
in
pop
jns
inc
sbb
cmc
in
and
adc
cli
add
xchg
pop
cwtl
pop
sarl
dec
add
sub
lds
jl
ret
pop
popf
aaa
shlb
inc
imul
leave
arpl
pushf
cld
or
pop
test
push
push
rolb
jnp
or
mov
xchg
add
int
or
test
jmp
sub
shr
fdivrl
jno,pn
popf
es
mov
pop
pusha
mov
jb
jl
cwtl
leave
out
jae
sarb
movsb
dec
imul
mov
sbb
repnz
xor
jo
in
xchg
jle
scas
mov
sbb
and
mov
xor
lahf
in
test
pop
jmp
pop
jmp
xchg
sub
inc
data16
test
cmpl
lret
sbb
leave
mov
and
mov
pop
add
cmp
rorl
cmp
in
push
int
lock
mov
cs
push
ja
loope
jnp
inc
lods
frstor
hlt
mov
mov
addr16
mov
inc
pop
inc
jae
or
xchg
lcall
cmp
das
inc
sub
xchg
testl
ret
test
pop
iret
cmp
xchg
std
cmp
ffree
sti
dec
and
scas
ja
xchg
xchg
loopne
sub
into
and
dec
pop
lcall
inc
xor
mov
or
push
cs
shl
mov
jnp
inc
gs
int3
sub
fidivs
or
push
jle
jbe
lcall
add
mov
jle
add
mov
push
and
fnstcw
dec
popa
push
mov
sti
imul
mov
mov
call
clc
jns
aad
cltd
xchg
shlb
adc
ret
add
mov
mov
icebp
shrb
mov
imul
jns
fistpll
cld
or
and
loopne
and
filds
push
ljmp
push
cwtl
dec
enter
and
scas
or
push
push
in
or
sarb
cmp
mov
sub
add
cmp
jns
mov
xor
scas
jno
scas
inc
ret
pop
movsb
mov
test
movsb
lea
push
xchg
push
out
popf
mov
mov
movsb
mov
lgs
cmp
mov
jnp
mov
push
test
push
lahf
mov
es
es
adc
mov
adc
mov
pop
je
sub
loope
leave
inc
fidivl
test
ja
lea
add
sub
shr
mov
or
fistpll
rep
incl
jecxz
mov
popf
dec
test
pop
loopne
bound
mov
pop
rorb
pop
cli
data16
adc
lcall
jnp,pt
sbb
loop
adc
fcoms
mov
movsl
push
mov
cwtl
cltd
sahf
push
subb
out
jns,pt
mov
sub
push
sbb
mov
or
lods
mov
mov
adc
push
test
jmp
int3
out
jge
and
int
add
dec
into
fxch
movsl
cmp
pushf
adc
sbb
out
insl
test
outsb
and
sub
sbb
and
or
mov
sub
shll
shrb
push
mov
fsincos
ret
xlat
jle
adc
mov
les
jnp
mov
rol
xlat
rcl
and
mov
xchg
cld
cld
pop
or
mov
dec
add
mov
adc
xor
movsb
push
xchg
and
ja
cmp
repnz
je
repz
loope
in
mov
ret
push
int3
popa
sahf
pop
stos
lea
dec
or
mov
and
pop
les
push
jno
scas
lds
mov
lods
divb
mov
push
cmpsl
rol
adc
je
dec
xlat
xchg
cmp
pop
inc
pop
adc
mov
add
stos
xlat
movsb
mov
aad
add
ja
sub
shlb
xchg
mov
outsl
jns
jno
test
sarl
mov
ss
sti
clc
jge
movsb
out
xorb
dec
fmuls
xor
adc
popa
inc
iret
popa
fldl
lahf
aaa
mov
inc
orl
loop
cmpsl
stc
xor
cmp
clc
loope
imul
cli
sbb
std
push
inc
and
xor
jnp
sbb
jg
stc
sbb
push
mov
sub
mov
jbe
mov
movzbl
or
out
push
psubsb
xchg
add
push
lahf
xor
popa
lret
push
and
in
fnstcw
mov
out
in
pop
stc
lods
pop
adc
cmp
fs
mov
fistl
jns
adc
in
mov
push
push
mov
pop
adc
mov
pop
fdivs
mov
mov
pop
push
push
repnz
mov
lret
hlt
les
dec
dec
push
pop
iret
lods
lock
push
cli
lds
out
xchg
ljmp
or
cltd
push
lock
icebp
xchg
cmpsb
ret
mov
mov
lea
addr16
jmp
fsubrl
lods
push
jb
mov
stos
inc
movsl
and
or
xor
fidivl
jecxz
insl
or
in
jne
lahf
adc
push
and
stos
cmpsl
ret
nop
mov
sqrtps
mov
cwtl
repz
aam
adc
dec
fstpt
adcb
sbb
das
shlb
lods
mov
in
ret
jmp
xchg
xor
push
sbb
fmuls
add
ljmp
xchg
xor
into
sbb
ss
and
dec
push
sub
add
subb
xchg
xchg
mov
and
fldl
adc
mov
fwait
daa
add
hlt
cmp
add
push
xchg
push
xchg
es
dec
clc
push
gs
pop
cwtl
xchg
adc
outsb
jae
repz
and
pop
insl
filds
imul
xor
xchg
adc
add
nop
adc
pop
adc
sub
lods
rol
add
lea
add
sbb
cld
fdivrl
xor
mov
aam
aad
and
mov
aad
mov
xchg
gs
dec
mov
xchg
fld
pop
push
insl
sub
or
in
scas
and
cltd
mov
divb
mov
lea
lods
mov
loope
lods
mov
clc
mov
mov
popl
push
sub
lea
aas
or
inc
out
daa
xor
out
xor
xchg
push
and
xchg
pop
mov
jb
popa
inc
push
dec
cmc
pop
pop
adc
push
fs
jg
pop
push
gs
cltd
push
dec
inc
movsl
iret
in
mov
sub
mov
lds
xor
xorb
movsl
lea
orl
icebp
sarb
xchg
push
pop
fildll
inc
les
dec
fisubs
adc
sbb
dec
cmc
in
push
mov
je
add
dec
divb
add
pushf
test
jbe
vunpckhpd
pop
and
inc
decl
test
xchg
inc
xor
jle
adc
cwtl
aam
inc
and
pop
mov
cmp
and
es
mov
xchg
push
adc
out
push
je
aas
push
and
xchg
mov
mov
pop
or
arpl
dec
xchg
roll
pop
and
ljmp
add
js
mov
push
add
mov
pop
inc
xchg
int3
mov
mov
not
inc
pop
add
shr
push
pop
push
add
popf
in
pop
mov
cmpsb
jl
loope
or
sub
jg
loopne
out
sbb
push
cmpsb
gs
into
pop
xlat
cmp
cmp
lea
mov
xor
ret
dec
clc
xchg
dec
xchg
pop
sbb
sbb
mov
xor
sub
imul
cmp
or
loopne
call
jp
jae
mov
xlat
daa
cmc
jge
pusha
sbb
lock
bound
sbb
jns
inc
popf
rcr
mov
xchg
es
test
inc
mov
cli
aas
dec
pop
aad
dec
xchg
mov
insl
lret
bound
sub
je
inc
mov
push
call
or
out
shll
pop
cmpl
and
xor
jb
into
imul
pop
push
xchg
ds
xchg
sub
mov
bound
cltd
xor
jge
mov
inc
mov
lods
enter
add
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
mov
cmp
jno
push
push
sub
push
push
leave
ja
out
mov
es
pop
mov
rcrl
mov
sbb
popf
or
mov
cmc
and
rcrb
or
pushf
pop
mov
mov
push
out
sub
push
add
mov
adc
sbbb
sbb
clc
leave
sbb
sub
push
mov
push
jl
arpl
pop
jns
cmc
mov
jb
pop
aad
push
fsubr
inc
mulb
jbe
imulb
mov
inc
add
lock
stos
mov
mov
lods
rcl
cmpsl
or
inc
xor
aam
jbe
push
cwtl
fs
adc
mov
cmp
push
dec
sbb
dec
dec
loope
repnz
inc
mov
lret
cli
mov
xlat
push
aam
lret
mov
cmp
adc
lods
mov
mov
jecxz
jp
insl
mov
std
test
scas
sub
test
xchg
leave
and
rcrb
push
popa
das
push
out
xchg
sbb
bound
ss
ret
leave
dec
mov
jecxz
pop
fcmovb
clc
rcrl
movsb
mov
mov
dec
sub
jbe
inc
lods
adc
cmp
adc
sub
push
mov
sub
jae
mov
inc
outsl
jno
ja
aad
sarb
js
xlat
ss
pop
bound
test
ret
nop
and
test
repz
xor
test
lds
mov
mov
arpl
jmp
mov
sbb
jp
xor
inc
les
in
pusha
mov
and
icebp
popw
or
in
je
daa
test
xor
enter
scas
mov
push
jmp
pop
jno
adcl
jl
test
adc
jne
pop
ss
aam
adc
stc
test
pusha
rorb
jge
jmp
jo
ljmp
mov
sbb
sub
cmp
or
inc
adc
xchg
daa
pop
xchg
dec
lods
push
push
lahf
pop
sahf
pop
fidivl
or
mov
mov
cmp
sbb
and
insl
out
xchg
mov
sbb
test
sbb
lods
out
push
stos
popf
scas
inc
mov
cli
inc
cmp
imul
mov
out
pop
jbe
lret
push
mov
jo
test
repz
jl
decb
jmp
test
aaa
arpl
outsl
ss
xor
incb
cmp
pop
insb
xor
loop
fstpl
mov
test
add
cmp
mov
subb
adc
imull
test
rclb
rclb
sbb
or
and
sbb
lods
mov
jg
sbb
xchg
inc
push
in
mov
pop
les
out
daa
scas
add
cli
ret
xchg
insl
leave
jne
lahf
lcall
dec
xchg
cs
iret
insb
stc
mov
add
and
lea
or
pop
add
les
inc
test
loopne
and
push
fistpll
call
ljmp
cld
jle
and
int3
test
incb
hlt
xor
sbb
mov
jmp
or
jmp
icebp
stos
test
mov
sub
into
add
out
and
and
add
insb
popa
int
lock
jge
and
adc
pop
pop
adc
push
push
jmp
inc
xor
in
sub
ljmp
add
dec
pop
and
dec
shrb
cmp
addr16
out
lret
shrb
test
adc
mov
ljmp
lock
xor
sub
ret
ss
decb
jmp
ja
fdivp
jbe
leave
jne
or
test
xor
jl
sbb
cld
insb
addl
aas
sbb
lahf
inc
loop
xor
push
scas
stos
lret
xlat
out
push
dec
stos
and
in
inc
negl
pop
xchg
lock
gs
aam
lretw
push
jo
push
add
jecxz
jae
aaa
and
ret
mov
jns
nop
push
js
or
dec
mov
lods
add
cwtl
aaa
mov
lcall
aam
mov
ds
and
mov
push
je
mov
mov
mov
jecxz
into
jg
or
popf
test
push
xchg
dec
jb
sbb
and
sbb
je
scas
mov
sub
imul
and
test
mov
ja
orl
xor
or
in
dec
lds
loopne
mov
imul
jg
jp
mov
dec
scas
cmp
lcall
sbb
and
xor
lret
mov
sarl
mov
andb
mov
call
mov
cmp
sbb
ret
cmpsb
pop
push
inc
rclb
mov
xorb
xchg
call
in
fidivrs
addr16
cmpsl
popl
test
pop
adc
jle
rclb
ret
push
cmp
sbbb
mov
ljmp
lret
scas
test
outsl
pop
cmc
jnp
insl
loope
test
outsb
push
cmp
ss
lea
pusha
push
xorl
pop
dec
inc
adc
and
das
sbb
sbb
addb
clc
push
lret
sbb
jp
sbb
xor
cmp
roll
loopne
add
mov
sub
loope
mov
out
int
adc
sub
jnp
pop
xchg
push
jle
pop
push
je
cmp
jae
mov
mov
mov
mov
jb
ds
xor
leave
in
push
aas
jno
ds
shr
sbbb
xchg
test
pop
popa
jb
outsb
or
or
or
test
ret
nop
into
jl
shrb
dec
jmp
inc
mov
cwtl
push
mov
popf
repz
into
xchg
test
fstps
mov
insl
dec
out
cmpl
jmp
cmp
push
and
mov
push
fiadds
cmp
push
jg
cmp
sbb
shll
jp
lret
data16
hlt
inc
jl
mov
mov
clc
in
or
mov
or
jns
or
push
fwait
xlat
out
pushf
rorb
pop
cmp
push
outsb
aas
cwtl
out
in
mov
out
jns
push
lods
mov
out
adc
pop
or
xlat
popf
enter
lcall
jne
mov
lock
jge
jl
and
mov
xor
in
cwtl
jmp
addr16
call
xor
clc
lods
in
mov
lret
adc
adc
xorb
push
scas
mov
push
add
inc
jg
outsb
loop
or
imul
in
int
and
sbb
cmp
icebp
outsb
inc
out
aas
mulb
and
ljmp
push
rolb
fists
push
sbb
movsb
out
mov
lock
stc
push
insl
in
and
repz
sub
js
fiaddl
fcmovnb
pop
js
data16
enter
lea
pop
mov
pushl
mov
push
mov
lret
pop
xchg
cmp
jp
data16
shlb
mov
sahf
push
and
in
add
loop
pusha
ljmp
out
jl
sub
mov
lcall
rorl
cmpsl
pop
shrb
int
movsl
mov
pushf
push
pop
aad
and
sub
dec
mov
lods
roll
xchg
inc
push
adc
pop
xchg
in
push
jmp
xchg
or
inc
bnd
jp
ret
xchg
insb
mov
fwait
xchg
mov
xchg
xchg
inc
mov
xchg
jae
and
aas
xor
jo
dec
pushf
aam
or
aad
incb
cli
or
cmp
push
mov
jnp
jmp
dec
dec
std
in
mov
cmp
inc
add
mov
xchg
in
aad
aam
cltd
imul
pop
xorb
mov
sarl
outsl
lea
sbb
and
sub
ret
xchg
std
add
in
cmc
cwtl
lods
jae
insb
cmpsl
mov
sbb
out
aad
test
stos
out
mov
mov
push
add
jo
pop
sub
mov
dec
mov
sti
test
bnd
add
repz
sahf
jnp
scas
sbb
lret
sub
cmpsl
lock
int
lods
mov
sbb
push
sbb
aaa
adc
inc
lods
xchg
pop
mov
mov
fcom
jge
xor
loopne
shrb
fsubrs
and
ljmp
pop
imulb
add
jbe
mov
xlat
mov
dec
mov
mov
call
add
jg
push
add
pop
inc
push
lods
xor
xchg
lea
ret
imull
xchg
xchg
fs
ret
xchg
sub
dec
adc
sub
popa
fists
clc
aad
stos
incl
insb
mov
mov
and
stos
ljmp
in
nop
mov
popf
mov
loop
inc
das
out
dec
loope
xchg
or
dec
xor
lds
insb
jo
je
push
push
sub
inc
or
and
testl
shlb
fadds
xchg
repnz
sub
jmp
add
insl
pop
fs
mov
jnp
add
and
adc
ljmp
hlt
sub
ss
inc
jb
dec
stos
lock
dec
sbb
adc
test
insl
or
mov
stc
jno
inc
xchg
sub
hlt
push
ret
jns
cmp
lcall
std
aad
icebp
mov
xorl
mov
icebp
pop
out
lcall
fsts
andb
lods
mov
lods
mov
jno
dec
loope
lea
icebp
cwtl
add
mov
adc
pop
xor
enter
cmp
into
jl
inc
psllw
add
iret
adc
add
sub
arpl
or
outsl
je
dec
inc
mov
add
xchg
rorb
inc
jns
pop
push
adc
out
sti
ffreep
in
push
add
adc
sub
vrcpps
inc
test
add
aam
push
inc
fwait
xor
lods
cmpsb
and
aad
jecxz
cmp
dec
ror
aaa
push
sub
loop
push
push
fldt
mov
sbb
sub
int
fnstenv
mov
xchg
xor
jns
add
bound
xor
push
push
call
ffreep
mov
cmp
mov
xchg
in
mov
or
jo
arpl
repz
add
shrd
jg
cmp
stos
hlt
pop
and
or
das
mov
lret
repz
rcr
dec
fbld
idiv
shlb
hlt
ret
jnp
repnz
insl
mov
aad
lods
mov
lods
xor
xor
dec
sub
sbb
pop
push
cmp
mov
icebp
cmpsl
in
sub
pop
xlat
int3
pushf
cltd
stos
lods
lahf
sub
xor
jmp
jle
cmp
nop
rorl
and
call
ja
ljmp
imul
sub
int3
adc
cmp
gs
cmpsl
xchg
ljmp
jmp
sub
mov
test
into
stos
bound
mov
std
jnp
jno
in
scas
cli
inc
inc
pop
xchg
jae
adcl
mov
sub
inc
daa
adc
test
fldt
xchg
add
cwtl
cld
call
xor
jmp
xchg
add
mov
sub
clts
int3
into
pop
mov
cmp
incl
xor
jb
inc
mov
mov
mov
subl
xchg
aam
int
jmp
insl
sub
jl
sbb
call
das
ret
jecxz
jp
or
add
rcll
fcomps
stos
cmc
aam
out
testl
cmpsb
cmp
test
mov
bound
add
add
bound
sub
pop
sbb
rorl
cld
fsubrl
fdivrl
imul
cmp
adc
js
addr16
rcrb
fld
pushw
cmp
jno
pop
jmp
outsb
cmp
int
inc
test
cmp
adc
out
lock
std
sahf
push
shl
outsb
shlb
push
cmpsb
xchg
out
js
mov
int
pavgw
adc
test
inc
jl
enter
ror
jnp
icebp
div
cli
pop
repnz
ror
push
cmp
inc
jb
addr16
cmp
stos
int3
outsl
pop
lock
pop
jle
sbb
mov
fprem1
lock
push
stos
fstpl
das
scas
aad
xor
fs
push
arpl
in
daa
jnp
in
jno
mov
mov
pop
dec
orl
test
dec
push
fisubl
in
dec
dec
addr16
ret
movsl
scas
jnp
in
mov
int3
dec
test
xchg
push
mov
add
pop
subb
int
jl
jb
sub
push
mov
into
dec
sbb
out
ljmp
daa
loopne
xor
jmp
pop
cld
popa
jae
or
add
int3
mov
or
add
adc
mov
cmp
jnp
pextrw
adc
sbb
adc
sbb
cltd
adc
sti
repz
mov
pop
out
cmp
stos
push
mov
cli
xor
dec
sub
xchg
int
aaa
out
imul
sbb
mov
adc
mov
aad
pusha
pop
xchg
cltd
sub
insb
jecxz
in
jle
pop
mov
jne
in
out
cli
xchg
leave
in
jbe
fimuls
mov
mov
add
inc
push
sbb
movsbl
cmpsb
call
jno
outsb
mov
lea
mov
aaa
in
ffreep
xchg
rolb
xchg
flds
js
jns
xchg
xchg
incb
push
cmp
jne
fcoml
fisttpll
dec
int3
mov
fisubs
arpl
add
mov
mov
xor
mov
cmp
mov
mov
outsl
add
loop
repnz
inc
inc
xor
sub
mov
lret
adc
mov
cmp
mov
mov
sub
jae
stos
mov
outsl
jne
mov
xor
andl
lret
inc
mov
lods
and
fsubrs
cmpl
mov
into
inc
pop
mov
cmp
add
xchg
jmp
fsubrs
inc
pop
and
fistpll
js
sahf
cwtl
lock
int
inc
pop
push
cmp
jmp
sub
gs
pushf
jbe
clc
addb
test
dec
push
lahf
sub
push
sarb
cmp
insl
mov
xchg
inc
hlt
daa
enter
stos
mov
push
pushf
add
jne
mov
sbb
dec
sbbl
xor
mov
xchg
xor
mov
shll
adc
xor
rolb
nop
sub
imul
stos
sbb
subb
scas
xor
xor
jnp
sbb
pop
jae
lcall
leave
cmpl
lock
or
cmp
jb
faddl
xlat
fwait
xor
or
dec
cld
adc
jge
cmc
jo
add
xchg
sahf
jbe
mov
xor
test
outsb
js
idivl
out
inc
orb
sbb
icebp
cltd
aaa
inc
iret
xor
pop
mov
inc
mov
and
popa
int3
lret
ret
lcall
lret
pop
in
clc
loopne
out
jecxz
orl
adc
cmp
test
push
cmp
mov
push
gs
lea
sbb
or
iret
and
push
jb
mov
rcll
das
dec
and
cmp
xor
push
lds
xor
ficoms
jbe
dec
roll
sbb
stc
aas
and
push
leave
subb
cmp
push
rcrl
xor
in
repz
adc
andl
push
imul
xor
cmpsl
int
xor
insb
dec
dec
sbbl
outsl
das
inc
xchg
fwait
hlt
fdivrl
in
adc
sub
add
jns
mov
push
or
jecxz
mov
xchg
dec
mov
js
mov
fcoms
jecxz
aas
add
lea
lock
cmp
insb
push
add
scas
jnp
and
pop
lret
inc
or
cld
push
push
int3
mov
sub
rcr
and
add
add
outsb
xor
pusha
in
insb
in
mov
mov
or
dec
sarl
dec
inc
pusha
jl
add
dec
jno
dec
ja
sub
dec
addr16
insl
push
jno
push
aas
insb
inc
cltd
xor
fbstp
sbb
rcrl
jge
add
add
fwait
pop
clc
push
lret
das
mov
cmp
loope
mov
pushf
jno
test
xchg
xor
stos
fldenv
sbb
sub
xor
add
fldenv
insb
adc
pop
sub
cmpsb
inc
loopne
sub
gs
jnp
xchg
leave
mov
popl
daa
push
aaa
in
dec
fstp
add
mov
lods
xchg
js
mov
movsb
cltd
or
jo
sub
ds
outsl
inc
mov
sub
jg
jp
mov
scas
xchg
inc
xchg
jl
mov
cmp
lcall
push
dec
jo
sub
popa
int3
lret
test
je
pushf
fucomp
jb
lcall
lahf
pop
out
mov
out
cmp
inc
leave
sub
dec
pop
push
or
mov
push
xchg
pop
nop
sbb
mov
mov
xor
imul
mov
push
xor
pop
movb
mov
aad
inc
jo
cmpsl
sbb
sub
aad
out
jg
push
je
icebp
pcmpgtw
stos
inc
jbe
push
inc
pop
rolb
inc
fbld
gs
sbb
add
popa
mov
pop
xchg
icebp
sub
lret
pop
jbe
inc
jne
mov
add
dec
ja
popf
loopne
mov
je
xor
sti
mov
ret
es
or
lock
add
outsb
mov
sti
push
xchg
sub
ja
lods
dec
xor
jp
je
inc
add
xchg
xchg
insb
sbb
inc
add
add
cmp
jbe
mov
scas
movsb
fistps
jb
sbb
jo
das
test
shl
cmp
addr16
push
xchg
adc
idivl
push
dec
mov
xlat
mov
lods
ljmp
ret
out
movsl
insb
pop
fisttpl
pusha
fmuls
int3
lahf
frstor
ljmp
mov
jb
jp
adc
cld
mov
movsl
jl
stos
xchg
pop
popa
andb
mov
les
or
lcall
icebp
test
adc
ds
pop
mov
and
mov
lods
mull
aas
out
fildll
add
dec
mov
push
and
pop
xchg
mov
pushf
pop
not
xlat
xor
push
mov
sub
sub
sub
dec
or
or
sti
ret
dec
xchg
xchg
outsb
xor
aaa
mov
dec
dec
pop
xchg
mov
aas
mov
std
sti
aad
xor
das
dec
sbb
aas
nop
jae
mov
fimuls
or
mov
scas
inc
cmp
ljmp
pop
cmp
loope
int
sbb
aam
push
xor
lcall
enter
inc
jb
inc
pusha
mov
imul
das
pop
data16
cmp
mov
ret
mov
adc
cmpb
and
test
imul
pop
mov
or
jmp
sbb
cmp
jecxz
push
lret
outsb
lret
repz
frndint
scas
les
or
lods
sub
jle
mov
in
xchg
sub
jnp
into
mov
sbb
sbb
push
test
popf
cmp
insb
iret
lahf
inc
daa
mov
lds
push
lcall
cmp
jo
pop
in
pop
daa
mov
bound
sub
lods
dec
xchg
xchg
lret
mov
jl
dec
and
dec
ds
sub
push
mov
in
jns
enter
xorl
pop
or
jbe
test
nop
iret
pop
fistpl
mov
or
mull
int
xchg
push
sahf
jns
ds
push
int
sbbl
xchg
add
push
inc
mov
jno
sbb
or
mov
jb
hlt
xor
std
mov
adc
inc
push
inc
repz
jge
cmp
stc
cmp
scas
test
stc
lock
out
push
mov
stos
int
fwait
sahf
or
xchg
decl
pushw
mov
inc
sbb
imul
subb
out
in
xor
lds
popf
scas
lret
adc
add
ret
pop
cli
sarb
mov
mov
xchg
push
or
pop
cmc
push
adc
mov
xchg
push
sub
rclb
incl
lds
and
iret
sub
and
inc
outsl
mov
jecxz
mov
or
adc
arpl
lods
icebp
movd
int
mov
cwtl
cmp
jno
pop
mov
movsb
pop
fiaddl
gs
mov
std
out
shlb
fdivs
icebp
jo
sbb
inc
push
cmp
sub
sbb
fxch
add
cli
xor
sub
notl
xchg
pop
sub
mov
pop
movsl
inc
xor
pushf
in
pop
mov
sub
scas
inc
mov
hlt
loop
inc
xchg
scas
adc
mov
dec
sbb
cmp
xchg
lcall
adc
rorl
imul
push
mov
rcrb
cmpsb
sahf
rorb
mov
mov
cmpsl
scas
mov
sti
scas
push
fbld
pop
xchg
pop
mov
push
ss
adc
xchg
add
mov
leave
in
fnstcw
imul
sahf
mov
inc
flds
mov
cmp
sub
jo
subl
dec
sbb
push
mul
sbb
clc
or
xor
lcall
jo
je
mov
ljmp
pushf
pop
mov
adc
sub
rol
xor
xchg
imul
adc
jge
push
std
and
sub
sub
push
negb
fs
aas
push
pop
mov
jg
subl
lock
adc
or
jae
push
adc
in
daa
out
sti
adc
out
dec
pushf
popl
xchg
inc
int
adc
dec
mov
or
cmpsl
sub
jge
ja
fmuls
imul
fwait
pop
cmp
pushf
add
call
out
in
dec
out
jecxz
and
js
outsl
push
inc
pop
sub
dec
pusha
dec
lea
pop
xor
loopne
cmpsb
mov
fadds
hlt
sbb
dec
sub
xchg
mov
cmp
jne
xchg
dec
iret
adc
xchg
add
repnz
jno
pop
pop
hlt
packsswb
addl
sub
arpl
std
popa
xor
decl
jmp
int3
push
xchg
rclb
int
aad
jnp
test
jp
xchg
cltd
jl
fsubrl
xchg
dec
xchg
add
cwtl
btc
lret
cmp
push
mov
imul
mov
or
or
insb
xchg
xor
lahf
int
popf
adc
dec
cltd
sarl
stc
adc
fwait
jmp
add
pop
imul
push
stos
popf
lret
mov
sbb
cmpsb
add
mov
out
ret
test
lcall
out
mov
dec
bound
xor
or
push
into
inc
or
or
cmp
test
mov
cli
and
adc
xchg
or
cmp
pop
popf
lahf
sar
cld
ss
push
pop
push
jo
aam
jbe
lret
mov
mov
and
xchg
out
negl
ljmp
pop
sbbb
aas
push
scas
add
add
mov
das
mov
sahf
or
gs
mov
clc
xor
push
call
in
push
xchg
push
adc
xor
test
lahf
jecxz
popa
call
enter
jnp
jb
mov
xchg
xlat
jnp
fstps
out
enter
aaa
pop
frstor
popa
add
imul
push
out
dec
jae
divb
sbb
cmpsl
cmc
roll
addb
mov
lods
mov
out
and
pop
js
cmp
inc
cmp
add
dec
xchg
dec
out
mov
pop
or
adc
cmp
cmp
pop
ss
lret
hlt
out
jnp
pop
cmp
cmc
or
and
test
push
popa
call
add
sub
rclb
hlt
sub
cld
add
xor
addr16
sub
pop
das
jp
adc
scas
sti
pushf
xlat
jecxz
lret
sbb
cmpsb
mov
dec
add
inc
push
push
jns
outsb
push
xchg
jne
sbb
imul
mov
push
push
dec
xor
pop
add
aaa
test
stos
mov
xchg
cmp
arpl
jne
xor
dec
ss
sahf
mov
inc
int3
jns
and
mov
dec
pop
std
push
std
jle
outsb
add
and
or
add
mov
dec
iret
out
fidivs
xchg
popf
aad
jbe
test
sbb
je
mov
lods
iret
iret
or
cld
fists
ficompl
loope
sbb
dec
jnp
dec
inc
push
cmc
xor
xchg
in
push
mov
xlat
leave
jae
cmc
inc
sbb
adc
mov
stos
inc
loope
push
repz
sbb
adc
mov
sbb
repz
push
mov
int
fdivl
lds
jmp
jnp
lock
movsb
xor
xlat
or
mov
xor
lret
loopne
adc
cmp
ret
or
fnstsw
adc
cmp
xchg
fidivrs
jl
jl
fldcw
lods
push
sub
dec
mov
xlat
pop
bound
sbb
lahf
push
jmp
lods
push
loop
popa
push
mov
jge
fdivl
lret
repnz
sbb
mov
ss
push
scas
gs
nop
mov
repz
jne
and
inc
inc
cmpsl
push
adc
not
in
push
and
std
adc
push
lea
into
adc
imul
jnp
pop
fs
jnp
pushf
and
pop
fcomps
lods
or
leave
cwtl
dec
jl
jne
std
cld
notl
fistpl
pushl
int3
int3
imul
and
xchg
out
xchg
jne
iret
cmp
add
stos
xor
fcompl
mov
shlb
pop
test
mov
adc
xchg
testl
mov
fimull
push
xchg
fs
push
aam
push
lds
popf
adc
mov
add
sub
cltd
repnz
imul
mov
in
into
loop
outsl
shrb
xlat
mov
loop
xchg
out
in
into
movl
sbb
shlb
mov
cwtl
pop
in
aas
xor
aas
lods
xor
cmp
and
int3
cwtl
repnz
pop
stc
test
rcl
xchg
mov
in
dec
or
push
aad
pop
mov
imul
fbstp
xchg
outsb
sti
fisttpl
fs
loope
notl
std
sub
add
enter
jbe,pt
pop
aas
and
sub
movsl
jns
movsl
int
jmp
jae
in
push
pusha
stos
jg
rclb
mov
stos
es
ss
daa
or
int3
roll
xor
and
fsts
jnp
test
xchg
insb
adc
sub
push
nop
cmpsl
popa
jecxz
mov
jl
push
push
inc
sbbl
js
lret
es
gs
jnp
pusha
movl
cmp
out
cmp
cwtl
jmp
jge
hlt
jbe
stos
cmc
adc
lea
into
call
xchg
mov
mov
adc
cmp
mov
xchg
or
loope
lds
ljmp
sahf
mov
xchg
lock
mov
into
xor
push
sar
or
arpl
loope
scas
and
outsb
sub
scas
outsl
ds
in
jb
repnz
push
mov
mov
add
push
pop
orb
push
daa
addl
repnz
es
movsb
sub
adc
or
cmp
sbb
mov
jno
fsub
lret
not
mov
sub
mov
dec
xor
push
adc
popa
mov
mov
jp
sub
hlt
ljmp
jecxz
sbb
pop
shr
das
mov
push
sub
jl
lods
movsl
test
rol
bound
sbb
pop
out
pop
jnp
mov
add
das
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
addr16
mov
jp
push
push
sub
push
push
sbb
leave
sub
stc
xchg
or
inc
aaa
loop
lahf
jo
int
cmpsl
enter
enter
push
sub
xchg
dec
test
cli
jl
jnp
xchg
pop
jno
cmp
sbb
nop
mov
dec
scas
or
bound
adc
int
pop
add
inc
adc
into
not
mov
popf
push
scas
mov
xor
push
xchg
repnz
insl
cmp
fwait
mov
and
arpl
pop
push
cmp
inc
jo
jns
or
dec
nop/reserved
loope
lcall
mov
and
sbbl
nop
lock
icebp
popl
add
repz
outsb
adc
dec
lds
in
fs
fldl
hlt
jge
or
notl
mov
mov
sarb
xlat
lods
es
inc
aaa
and
gs
add
and
mov
and
jo
mov
inc
lds
pop
cld
or
add
xor
fcmovbe
icebp
ds
sbb
push
dec
xchg
mov
mov
cmp
and
mov
xchg
mov
sbb
jmp
cltd
mov
fsubs
movsb
push
mov
in
xchg
adc
lcall
sub
out
mov
shrl
inc
add
xchg
enter
dec
xchg
je
lcall
or
mov
sbb
cmc
sbb
pop
mov
addr16
lea
test
ret
jp
scas
cmp
movsl
inc
dec
push
push
aam
and
pop
scas
inc
pop
sbb
xor
cmc
pop
cmp
jb
sbb
pop
in
mov
inc
mov
sbb
lret
int3
ss
negl
imul
fisubl
cmp
stos
imul
mov
inc
fwait
sbbb
rep
insb
sub
icebp
shl
add
arpl
mov
enter
mov
les
rolb
jecxz
cmp
adc
cmpsb
lods
sub
xor
and
inc
ja
add
jno
xor
fcompl
in
push
stos
jmp
fbstp
sub
cmpsl
push
mov
scas
inc
cmp
inc
in
push
insb
mov
loopne
arpl
mov
add
fildl
fwait
jnp
popa
xchg
xchg
mov
push
cmp
shll
out
shll
into
outsl
addr16
inc
in
cmc
std
test
push
jo
fnstenv
inc
pop
cltd
mov
test
mov
or
fsubs
and
inc
int3
pop
dec
std
mov
jmp
mov
call
push
pop
shlb
jge
sbb
or
xchg
push
jecxz
inc
sbb
imul
fiadds
xor
jne
inc
ret
shll
neg
or
pushf
cmp
cmpb
inc
mov
addr16
xor
int
lcall
mov
jmp
pop
leave
popf
lods
aaa
xchg
push
aam
push
xchg
fiaddl
mov
arpl
adc
scas
les
in
mov
sub
xchg
and
xchg
and
pop
or
cltd
fistpll
movsb
lds
insb
push
push
mov
movl
out
or
call
nop
imul
jbe
add
outsl
rol
movsl
lock
and
out
mov
or
push
cwtl
jne
and
daa
fwait
das
jo
add
rolb
in
inc
sahf
lea
sbb
fcmovne
enter
mov
add
xchg
fs
ss
fcompl
jae
data16
gs
mov
lods
arpl
loope
test
orl
and
push
or
sti
hlt
cmp
cwtl
fidivs
add
mov
push
je
pop
dec
cmpsl
mov
xchg
inc
xor
sbb
pop
shll
dec
mov
pop
push
mov
cmc
mov
das
cwtl
subps
mov
push
lods
mov
ljmp
stos
imul
sub
mov
push
test
mov
push
adc
adc
xchg
mov
push
xor
xor
xchg
pinsrw
push
add
bnd
inc
mov
xchg
ds
rcrb
int
sbb
stc
outsl
das
sbb
dec
mov
lahf
lret
adc
mov
jp
jecxz
sbb
push
ret
lods
ds
inc
jne
mov
into
mov
and
rorb
arpl
popa
fndisi(8087
mov
fldcw
ljmp
push
inc
mov
mov
pop
xor
xlat
mov
inc
addr16
xchg
clc
ret
jle
shl
and
rcr
call
cli
adc
fidivs
out
insb
jle
mov
outsb
mov
movsb
bound
in
test
rol
sub
dec
jbe
or
pop
scas
std
xchg
mov
movsb
dec
in
nop
cmp
aas
idiv
jb
gs
mov
add
out
out
fwait
imulb
mov
push
and
mov
dec
jmp
lcall
and
and
scas
jle
xchg
inc
test
shl
std
out
jne
push
add
sti
and
testl
enter
ds
stc
int3
aam
test
daa
jb
dec
and
jecxz
push
adc
repnz
out
xor
pushf
cmc
mov
adc
into
add
das
mov
repnz
es
pushl
fnstenv
scas
jnp
inc
fcomi
mov
dec
push
in
rorb
add
xchg
jge
jo
pop
cmpsb
cwtl
notb
cld
jp
dec
test
repz
push
jge
fnsave
push
jbe
sub
repz
lcall
xor
mov
cltd
mov
aam
divb
scas
mov
xchg
in
xchg
mov
add
subb
xchg
stos
add
cmp
sub
sbbb
or
mov
insb
inc
pushf
cmpsb
pop
and
fs
add
inc
test
mov
dec
stos
xor
ds
and
cld
pop
pop
or
pop
insb
test
cmp
inc
mov
mov
mov
fiaddl
sarl
add
stos
xor
mov
jb
and
jo
dec
xchg
push
imul
lock
repnz
into
xchg
or
cld
stos
clc
sbb
xor
les
push
mov
jecxz
mov
imul
push
stos
inc
mov
into
mov
int3
xor
dec
cmp
enter
jl
fcoml
int
pop
data16
loop
out
not
push
or
jge
pop
push
icebp
xor
andb
pop
mov
adc
mov
jle
jl
lds
arpl
pop
jp
shl
in
mov
orl
or
dec
pop
enter
lahf
mov
inc
and
shlb
movsb
lds
fucomip
xchg
push
xchg
popa
enter
loop
scas
cmc
cmp
lds
mov
aaa
xor
pop
pop
add
ss
dec
cmp
mov
dec
push
clc
push
push
ds
daa
negl
lret
sbb
jne
cli
xor
bound
dec
lcall
sbb
roll
je
aaa
pushf
jae
scas
jae
dec
mov
push
in
lods
jmp
cmp
pop
cltd
or
lock
mov
sub
push
dec
data16
xor
inc
xor
iret
xor
cmc
in
add
sub
mov
pop
enter
inc
repnz
cmp
out
insl
cmp
cli
in
je
pop
outsl
push
rcll
add
inc
cmp
rorb
call
je
ss
hlt
mov
jl
addr16
adc
out
out
pop
xchg
jae
cmc
jae
sbb
xchg
das
sbb
in
sbb
aas
adc
fldcw
push
clc
mov
and
leave
mov
fisttps
js
xorb
cwtl
outsl
pop
in
arpl
dec
cli
pop
jo
inc
push
testl
jmp
push
inc
mov
cli
cltd
int3
lcall
push
movsb
fmull
movsb
or
and
in
mov
cmpsw
aad
push
popf
mov
cli
pop
jle
je
xchg
fisubl
mov
and
cmp
xchg
imul
mov
push
add
jl
xor
addr16
xor
fisubrl
push
sub
sub
outsb
sbb
pusha
iret
jne
mov
loope
loopne
jecxz
les
push
scas
sub
rcrb
cld
daa
aas
ljmp
sbb
cld
mov
pop
inc
pop
ret
and
negb
out
int3
and
dec
mov
cmc
jg
adc
xor
and
into
rorl
sub
mov
push
das
sbb
test
daa
lods
test
js
push
push
xlat
mov
or
iret
inc
jecxz
mov
push
out
inc
cmpsl
cwtl
in
sbb
aam
cmc
inc
leave
jo
inc
jbe
mov
data16
sub
jecxz
gs
xor
lds
xchg
mov
jne
mov
rol
push
push
mov
sahf
movsl
dec
nop
aam
jae
cwtl
lcall
test
mov
call
idiv
icebp
sub
xor
nop
mov
cmpl
jb
loop
adcb
dec
out
xorl
xchg
rcrl
push
test
jge
sahf
inc
clc
jnp
in
jae
xor
js
adc
rolb
leave
in
mov
call
hlt
or
ds
mov
call
dec
ljmp
cmpsl
jle
push
int3
cli
pop
push
sar
or
cltd
push
mov
push
mov
adc
mov
outsl
xor
jno
test
leave
test
ds
jg
repz
sub
addr16
jecxz
cmp
pop
out
dec
loope
mov
aas
sahf
insl
jno
pop
dec
fdivl
fsubl
bnd
inc
inc
inc
jmp
dec
jno
rcl
orb
sbb
cltd
push
jg
adc
fucom
or
out
popf
xor
sub
gs
fsts
mov
rcll
stc
push
fwait
ss
outsl
cmp
mov
dec
lea
hlt
sbb
add
repz
mov
int
jae
insl
ljmp
mov
pop
ss
mov
shll
aaa
int3
adc
popf
loop
dec
or
push
jl
inc
mov
stos
pop
lcall
insb
ss
cmp
fbld
fstps
mov
push
inc
nop
and
sarb
ss
pop
in
aad
mov
jnp
and
test
loop
sub
in
sbb
stc
rorb
shlb
pop
add
mov
adc
xor
lds
mov
mulb
movsl
or
out
push
or
rep
call
mov
push
sub
test
sti
or
sub
sbb
jmp
lds
or
ret
stc
insb
aas
add
lret
aas
push
pop
outsl
xchg
int3
imul
mov
sarb
or
sbb
movsl
popf
enter
push
lret
and
push
fwait
gs
dec
pop
mov
xor
cmp
ja
xchg
dec
xchg
inc
pop
das
jecxz
xor
mov
xchg
inc
and
sahf
mov
or
aas
or
roll
jle
mov
dec
leave
pop
sub
dec
andl
jg
ror
insb
addb
pop
mull
iret
in
or
iret
repnz
pop
cmp
sub
je
sub
cmp
pop
iret
stc
leave
dec
in
push
jecxz
fldt
inc
push
jb
mov
mov
loopne
sub
and
push
or
in
cmp
mov
test
imul
loop
sub
sub
inc
arpl
jae
loope
decl
rcrl
mov
pop
aad
lret
push
shrb
rclb
int3
jno
and
add
dec
push
cltd
sti
cmp
mov
sbb
push
jae
js
sti
lds
cwtl
js
adc
xorb
push
mov
jae
test
hlt
bound
mov
dec
popa
dec
shrb
int3
lock
stc
or
mov
jo
or
insb
ljmp
inc
insb
xchg
mov
jg
js
sub
lahf
daa
fs
std
push
leave
pop
shr
stos
sub
stos
in
scas
mov
xchg
fcomp
clc
xchg
cmpb
pop
xor
ljmp
lock
pop
scas
repz
adc
mov
fstpt
xor
or
popf
enter
loop
fsubrs
sub
mov
scas
push
pop
sti
inc
pop
jno
cwtl
shll
andl
scas
pop
lret
in
faddl
pop
scas
sub
adc
inc
sub
xchg
push
xor
popa
or
out
pop
out
out
cltd
mov
or
fldl
xchg
lahf
stos
movsl
call
sbb
jb
mov
push
aas
stos
mov
dec
cwtl
jno
cmpsl
sbb
fdivl
mov
xor
sbbb
and
shlb
rclb
push
sub
insb
fdivrl
cmp
dec
xchg
or
movsl
sahf
stc
add
movsl
pop
xchg
mov
ficoms
cwtl
dec
js
test
push
icebp
data16
inc
mov
loope
cmpsb
pop
adc
jo
and
push
lods
fistpl
adc
negl
jp
or
add
dec
mov
pop
mov
out
add
mov
or
ret
pop
fisttpll
lahf
in
sub
and
lcall
add
cmp
mov
sbb
loop
and
std
inc
jbe
lret
sbb
and
jne
xchg
dec
pop
jns
and
push
icebp
lods
xchg
pop
loope
adc
mov
xor
sub
inc
lahf
out
es
fsts
fld1
adc
scas
inc
enter
bound
fs
inc
cmc
xor
test
cmp
or
mov
stc
inc
sub
push
add
inc
adc
adc
shll
imul
sub
push
cld
mov
jl
test
adc
cmp
adc
shlb
mov
into
fists
sbb
es
push
insb
das
jle
je
mov
test
outsl
mov
std
pop
sbb
test
inc
pushf
jbe
insl
and
push
xor
iret
shrl
cmp
cmp
outsl
les
or
lods
sbbl
outsl
aaa
orb
fsubr
sbb
out
lcall
lret
icebp
fnstcw
inc
idivb
rcrb
call
popa
pop
mov
out
mov
outsb
decl
fisttps
push
and
ret
ret
xor
pop
dec
mov
adc
mov
lahf
mov
cli
int
or
insl
xchg
push
scas
jbe
outsb
mov
test
sbb
movsl
addr16
loope
loope
lret
xlat
jno
or
pop
inc
repz
dec
sub
cwtl
push
mov
stos
cmp
cld
cs
xor
movsb
mov
rol
repnz
push
or
adc
mov
stos
lret
lea
xchg
es
jge
sbb
inc
mov
add
cmovne
les
mov
stos
sbb
mov
mov
mov
push
push
jecxz
dec
xor
stos
pop
mov
inc
cmp
xchg
sti
xchg
jns
dec
cld
ficompl
dec
lret
jb
pop
adc
jbe
rol
fldt
and
stos
leave
xor
stos
das
scas
or
popf
subb
sub
cmpsl
jno
test
sub
add
sbb
or
icebp
mov
movsl
in
mov
lds
mov
sbb
cmpsb
mov
push
lret
fstps
das
push
lods
mov
cmp
loope
cmp
xorl
xor
lods
jns
pop
hlt
pop
cmp
xchg
mov
mov
sbb
jecxz
ret
insl
sbb
sub
in
push
sarl
mov
pop
adc
lcall
js
iret
cs
fstpt
les
or
mov
ss
or
dec
mov
pushf
push
mov
mov
mov
out
ljmp
cmp
call
imull
addl
inc
cmp
hlt
push
ret
lret
push
pop
mov
clc
mov
lea
or
mov
ja
movsb
mov
ljmp
sub
fistpll
movsb
aas
lcall
add
inc
jl
push
xchg
mov
aad
inc
mov
jg
mov
jg
jo
inc
gs
out
ret
and
push
lret
mov
jecxz
mov
fwait
repz
and
dec
les
dec
cmp
mov
icebp
dec
pop
jge
jns
dec
imul
repnz
jge
test
clc
shrl
push
js
fs
push
ja
sub
jo
orb
sub
arpl
in
dec
sbb
out
idivl
inc
shr
xor
sbb
jecxz
out
add
pop
push
clc
stos
in
scas
mov
sub
les
add
repz
sbb
inc
cmp
push
int3
loope
shll
xor
inc
mov
ds
xchg
mov
or
out
add
xor
xchg
ret
and
pop
add
loop
test
cmpsb
or
sti
or
int
pop
xchg
adc
rcrb
push
bound
or
pop
fwait
aad
push
stc
imul
xchg
or
lret
cld
test
std
es
mov
das
cmc
test
scas
jmp
es
sbb
cmpl
mov
insl
dec
push
push
cmpb
xlat
ljmp
push
pop
in
push
fcoms
je
je
ret
shll
inc
add
xor
xor
and
in
push
push
arpl
leave
aad
repnz
sub
mov
stos
stos
frstor
fwait
pop
punpckhwd
pushf
or
xchg
inc
ret
cld
add
jp
fiaddl
mov
push
sub
dec
mov
call
fstl
cld
and
divb
pop
push
xor
xchg
jbe
lcall
jo
in
and
jle
mov
popf
dec
inc
dec
faddl
push
test
imul
xorl
xor
repnz
pusha
cwtl
dec
mov
stos
inc
sbb
jmp
xor
xor
cwtl
jecxz
xchg
adcl
stos
sub
pop
clc
outsl
mov
popf
mov
sub
sbb
lret
mov
int3
push
adc
int
or
cwtl
mov
jl
jne
add
pushf
int3
ljmp
dec
push
lods
addb
jbe
and
dec
lcall
pusha
daa
sbbb
pusha
int
mov
push
push
aam
jmp
incb
outsl
fsubs
sub
jl
popa
scas
mov
sub
lods
or
dec
or
out
stc
loopne
push
push
mov
push
lods
jns
pop
popa
inc
lock
pop
clc
mov
stc
jmp
add
mov
pop
stos
ds
adc
xor
dec
rolb
cmpsb
push
pop
cld
add
in
subb
dec
push
ja
lcall
orb
pop
out
mov
insb
mov
adc
sti
mov
sbbl
mov
in
pop
fwait
mov
mov
sti
add
push
pop
or
jmp
dec
add
nop
fistpll
push
mov
fucomp
dec
cmc
mov
xor
frstor
mov
jecxz
mov
pop
mov
cld
hlt
adc
jmp
stos
add
fildl
mov
push
inc
sbb
lcall
push
stc
xchg
scas
push
lret
lret
inc
outsl
rorl
mov
and
ficompl
pop
inc
pop
push
aad
and
xor
inc
into
aas
mov
cltd
iret
movsl
xchg
insl
mov
pop
shrl
jmp
nop
stc
xchg
fucomip
xor
in
xchg
fsubs
pop
sbb
mov
in
jnp
add
bound
or
js
fwait
pop
jb
int3
dec
orl
lods
outsl
ss
dec
leave
jl
jp
lods
sbb
test
jge
cmp
xchg
mov
push
dec
stc
xchg
mov
pop
lea
scas
mov
inc
add
test
mov
mov
cltd
sub
shlb
xor
sbb
cmpsb
roll
mov
xchg
out
mov
xchg
xchg
popa
in
aaa
je
pop
js
adc
sbb
nop
test
sbb
sbb
xor
mov
faddl
add
ja
stos
xorb
in
fwait
cwtl
and
dec
xchg
iret
call
mov
rclb
fistps
xchg
dec
imul
das
or
inc
xchg
sbb
cmp
xlat
or
push
mov
pop
addl
aad
mov
mov
nop
mov
dec
jp
iret
shrl
mov
icebp
orl
push
xchg
sub
ss
dec
add
inc
and
push
mov
scas
jnp
jne
cmp
jle
jle
mov
les
jg
jb
rolb
push
and
inc
out
cli
clc
ja
call
inc
cmpsl
stos
mov
or
sub
jge
cmp
loope
fcompl
or
divl
and
movsb
mov
xor
xchg
imul
pop
mov
xor
xor
shrb
pusha
sub
fisubl
addr16
iret
insb
ret
dec
add
mov
dec
loopne
stos
loop
xchg
mov
dec
popf
and
or
int
inc
lock
sar
mov
leave
and
movsb
ret
sbb
sbb
mov
and
mull
cld
or
sbbb
or
jno
in
insb
jg
xor
int
xor
mov
push
mov
insb
xchg
hlt
push
pop
xchg
jp
mov
adc
cwtl
dec
hlt
xchg
xchg
mov
in
dec
jnp
adc
jg
cli
lds
xor
push
cmc
lret
push
pop
cmc
sub
pop
jge
mov
jmp
sahf
pop
aad
gs
mov
scas
jmp
push
daa
das
lret
in
out
sti
in
or
pop
jmp
or
rcrl
test
fnsave
push
sub
or
inc
aaa
mov
or
or
int3
aas
sbb
stos
ret
push
mov
jl
repz
and
cmp
mov
insl
arpl
cmp
adc
je
jg
addl
lods
je
push
daa
pop
dec
mov
xchg
adc
aaa
dec
addr16
orl
out
lret
xor
pop
pop
add
mov
ret
in
inc
call
dec
add
insb
scas
addr16
lock
add
pop
icebp
add
fadd
pushf
and
cmp
ss
fimuls
xor
add
push
sub
push
jge
sti
pop
xor
push
add
fdivr
adc
loop
aaa
xor
outsb
sub
sub
out
mov
jbe
cmp
jg
pushf
sahf
push
push
sahf
cmc
leave
ja
loop
push
dec
push
iret
aas
add
xchg
test
jns
push
sbb
popa
in
add
or
push
add
push
xor
xchg
sbb
fs
push
mov
repz
xchg
loope
adc
ss
in
and
push
xor
popa
pop
and
sbb
sbb
xor
hlt
arpl
stos
lcall
pop
stc
adc
enter
jl
leave
rcr
and
mov
inc
pop
fwait
loope
jmp
pop
jl
clc
fcoml
notl
pop
lret
and
loop
sub
in
lock
test
aam
mov
xchg
pop
push
inc
cmpsb
sbb
pop
pop
mov
out
sbb
xchg
rclb
lret
shl
pop
jns
xchg
in
imul
sub
xchg
pop
sbb
cmp
dec
mov
add
mov
push
add
xor
xor
aaa
test
iret
call
decl
jae
imul
subl
sub
inc
pop
jecxz,pn
stos
push
roll
pop
arpl
cmc
fwait
mov
sbb
push
shl
mov
sahf
lods
in
enter
negb
mov
fcoms
imul
jns
stos
pop
shl
mov
push
pusha
cmp
jl
int3
xchg
std
bound
jle
ror
stos
incb
sbb
pop
notl
sbb
or
enter
aaa
dec
or
jl
mov
mov
decb
sbb
mov
data16
push
stos
jb
fisubl
js
insb
push
bswap
jmp
mov
push
in
rcrb
lahf
iret
cmp
mov
mov
jmp
mov
mov
stos
rclb
add
sahf
inc
scas
sbb
fwait
lret
jno
sbb
sbb
addb
mov
cld
imul
pop
mov
bound
add
fnstcw
and
or
or
pop
jp
loopne
pop
divb
xor
fcoml
pushf
call
popf
mov
test
popf
sbb
js
jbe
xchg
into
cltd
xchg
mov
cmp
fcomps
mov
icebp
adc
shl
ficompl
jl
stos
mov
push
out
fnstenv
je
jae
cmpsl
sbb
xorb
mov
push
nop
popa
pop
das
into
mov
push
pop
pop
mov
push
xor
movsb
xor
mov
cvttps2pi
test
es
andl
adc
dec
aad
jle
in
js
adc
xchg
push
fsubl
jne
sahf
aad
jno
test
xchg
stos
pop
mov
pop
mov
mov
cmp
xchg
ret
jae
movsb
int
add
push
mov
lret
mov
pop
dec
fcomi
jb
pop
dec
outsl
pop
jae
mov
fadds
jmp
jo
mov
jb
lock
jb
cmpsb
inc
lods
or
mov
je
adc
cwtl
pop
pop
mov
mov
imul
xchg
sbb
insb
jp
shl
xor
fwait
adc
xor
pop
sub
mov
loope
push
jmp
icebp
ss
addr16
lahf
int
inc
push
sub
mov
outsl
xor
pop
xchg
ja
js
cwtl
insb
call
sub
test
sbb
inc
or
xchg
lahf
loop
test
and
or
enter
push
data16
mov
add
addr16
outsb
lds
mov
xchg
and
jge
and
std
cmp
movsb
add
lock
or
loope
popa
inc
sarb
and
iret
and
jg
or
lods
lcall
in
pop
arpl
mov
xchg
pop
xchg
xchg
stos
adc
dec
pop
enter
out
xchg
xlat
shl
jecxz
std
mov
into
mov
adc
fadd
ds
imul
shlb
pop
pop
jecxz,pt
sub
mov
es
push
repz
rorb
xor
add
push
pop
mov
insl
mov
aaa
xchg
sbb
pop
add
mov
push
es
repz
out
dec
push
add
pop
mov
rcrl
les
bound
lret
roll
xchg
sub
jb,pn
iret
sahf
mov
test
sub
mov
push
dec
push
pop
aam
mov
in
push
loope
inc
loope
clc
out
rolb
sbb
push
clc
jg
mov
pop
and
adc
xor
add
int
jb
push
jle
lds
mov
movsb
adc
jecxz
shlb
pop
cmp
cmp
and
loopne
test
outsb
jbe
out
scas
mov
xchg
outsl
dec
pop
cmp
test
pop
sbb
xchg
enter
cld
cmpsl
xor
mov
ljmp
jmp
mov
or
jmp
pop
insl
sub
cmp
icebp
or
mov
push
push
push
sub
push
push
js
je
sbb
jmp
mov
or
in
xor
cmp
ja
aad
and
inc
shll
cs
testb
mov
xor
mov
mov
fcom
stc
repz
xor
cmp
pop
js
cmpsl
faddp
inc
sub
int
push
lock
mov
xor
mov
jnp
cli
arpl
jg
sahf
jbe
lret
mov
iret
pop
test
fisubs
gs
setne
int
das
ret
mov
sub
mov
xchg
in
cltd
cmp
pop
dec
dec
pop
mov
rclb
xchg
lcall
gs
das
gs
fisttps
cmpsl
fisubs
xor
xchg
fstl
mov
ss
jbe
jle
imul
jle
les
js
adc
lds
sub
mull
pop
mov
push
fiadds
and
mov
mov
cmp
notb
cmp
sub
sub
mov
cmp
adc
cmp
cmp
add
cmpsl
lret
sbb
push
sub
mov
dec
sbb
jle
xor
push
movsl
xlat
mov
test
dec
fnstcw
clc
or
or
ret
mov
xchg
nop
dec
dec
sti
mov
pop
in
arpl
cmp
and
movsl
pop
adc
jle
push
pop
xlat
sub
fsubl
sub
pop
mov
xchg
fmuls
push
sbb
pop
outsl
and
cmpl
pushf
fstpl
push
cwtl
add
fisubl
mov
xor
or
mov
call
xor
in
adc
pusha
inc
repnz
cli
sti
fldenv
sbb
gs
and
jne
xlat
imul
push
fstpl
nop
mov
popf
push
popa
mov
or
sub
movsl
mov
xlat
adc
cli
xor
mov
inc
cli
push
jmp
add
insb
cmpsl
outsb
adc
inc
std
scas
insb
cmp
push
mov
insb
pusha
cmc
cmp
int
pmaddwd
and
mov
add
lods
sub
mov
dec
clc
push
cmp
push
aas
mov
lret
pop
xchg
add
jecxz
fadds
jb
dec
add
cmc
jo
add
sti
jo
addr16
insb
lds
aam
xlat
cmp
lret
lds
sub
arpl
loop
pop
hlt
js
xchg
dec
push
jb
icebp
rcll
mov
dec
add
cli
cmp
jmp
or
js
push
pop
sarb
inc
mov
fs
add
mov
int3
lea
push
adc
ror
cmp
cmp
pop
insb
js
dec
jb
into
fidivl
insl
xchg
mov
addl
out
cmp
push
jae
jae
mov
xchg
mov
mov
or
push
pushf
pop
jnp
dec
sbb
xchg
xchg
add
cmc
and
dec
cwtl
popl
aad
push
mov
mov
add
sub
mov
mov
bound
sti
es
and
jbe
mov
imull
repnz
ss
pop
mov
gs
pop
lock
pop
mov
lds
pop
sbb
xor
jg
imull
dec
xor
push
mov
add
and
xor
rclb
call
ss
fmull
cmc
mov
lcall
push
dec
pop
gs
fisubrl
xor
mov
lds
sub
stos
rcrl
xchg
or
and
rcrl
mov
mov
mov
lahf
mov
cmc
testl
andb
add
mov
fstl
pop
add
inc
fnstcw
cmp
add
or
xchg
jns
or
inc
popa
inc
idivb
negb
jns
out
and
lahf
test
fnsave
inc
and
jge
test
sub
das
call
nop
sub
cmp
xchg
sub
popf
loop
mov
xchg
fmuls
cmp
cltd
or
cmpsl
sub
sar
mov
shrl
stos
and
xchg
pop
inc
adc
sar
xor
sbb
aad
push
mov
in
sbb
or
mov
pop
enter
push
xchg
jne
inc
ret
adc
sub
cs
add
imul
mov
std
push
mov
cmp
sbb
push
adcl
or
mov
xor
shll
and
dec
nop
les
mov
jae
push
lea
lods
cmpsb
out
scas
xchg
dec
jp
mov
push
sti
inc
mov
mov
and
mov
int
xchg
sub
sub
mov
addr16
imul
sbb
rorl
faddp
out
bound
mov
das
in
or
jns
dec
repz
dec
cmp
or
or
sbb
loop
cs
loop
in
sarl
fdivrs
mov
or
loope
bound
aad
stos
sub
icebp
add
jmp
loope
out
sbb
xchg
aam
arpl
jg
add
cmpsl
and
cmc
or
mov
cmp
xchg
xchg
subl
xlat
sbb
lds
aam
lods
fucomi
arpl
or
dec
push
mov
out
lret
call
lods
cmc
faddl
sub
addl
outsb
xchg
mov
cmp
mov
fildll
sbb
repnz
mov
sahf
or
cltd
push
addb
add
jnp
push
mov
aam
mov
jbe
test
aaa
pop
mov
jae
dec
je
mov
lret
cmpsl
lds
iret
rorl
stc
cmp
adc
imul
outsb
pop
and
push
jl
pop
fcmovne
jmp
repz
fdivrl
mov
and
jbe
pop
mov
imul
das
sbb
lods
jmp
add
jbe
ret
mov
lahf
out
pop
cmp
xlat
icebp
sub
xchg
loop
fldl
sub
or
xor
dec
jo
popf
pop
mov
push
in
dec
add
mov
lret
icebp
sahf
pop
hlt
jae
mov
xor
inc
ror
data16
dec
jb
push
lea
lahf
pop
lods
mov
rorb
jmp
and
in
lcall
xor
jg
nop
pop
testl
lds
xchg
lahf
sbb
or
push
pop
xlat
popa
testb
sahf
push
enter
les
inc
push
sbb
sub
sbb
mov
in
sub
lahf
jo
imul
ret
or
push
jns
loope
into
aam
repnz
in
fistps
ret
sub
push
out
fldl
add
outsb
add
mov
loop
aam
jmp
mov
push
xchg
inc
std
ljmp
pop
sahf
sub
sbb
cmp
lret
lock
xor
mov
pop
mov
into
push
mov
cmp
or
jl
hlt
shrb
sub
xor
add
and
incb
adc
pusha
aas
sub
lret
pop
popa
cmp
add
jp
mov
jo
fwait
std
sahf
sbbl
std
lods
popa
sahf
ret
test
negb
jg
mov
aas
mov
outsb
lret
daa
int
das
popa
lahf
sbb
movsl
dec
mov
xchg
cld
dec
mov
add
repnz
in
ret
xchg
dec
adc
andb
mov
jl
loope
pop
sbb
dec
cmp
ret
aaa
cmp
xchg
inc
scas
push
ja
fcmove
enter
inc
adc
jne
xor
xor
mov
mov
sti
push
jle
pop
mov
stos
jl
xor
movsl
pop
addr16
jge
mov
jmp
jns
pushf
cmp
lock
jmp
rcrl
sub
loop
pop
push
sub
and
mov
imul
xor
push
sub
push
cmp
xchg
mov
xacquire
aas
popa
jnp
add
push
inc
xchg
adc
xchg
popa
loope
pop
ds
sti
xlat
lds
ret
pop
pop
push
movsb
popf
dec
mov
pop
out
cmc
push
dec
test
arpl
rcrb
adc
xor
push
jge
daa
jb
fwait
sub
pop
movsb
rcr
sub
mov
push
cmp
and
jg
jo
sbbb
push
cli
inc
jae
pop
mov
popa
in
adc
mov
or
das
outsb
pushf
dec
cmpsb
mov
notrack
ss
push
test
mov
lret
jns
dec
daa
test
lock
dec
insl
fucomip
pop
mov
popl
iret
xchg
jo
fucomp
sbb
dec
xchg
test
inc
sbb
inc
sub
cmp
scas
sbb
fisubrs
cmp
stos
jge
outsb
pop
xor
sar
outsb
lea
xlat
push
test
stos
imul
xor
cmc
xchg
cmp
fwait
add
cmp
in
push
andl
jno
mov
jne
xor
pop
xlat
jecxz
jge
aaa
mov
adc
loop
sbb
mov
pop
fidivrs
mov
cltd
lret
daa
mov
add
push
sub
adc
xorb
sbb
adc
adc
mov
push
jnp
lahf
inc
test
cld
je
cmp
fcmovnbe
push
out
adc
and
shrb
outsl
repnz
ja
into
clc
vcvtuqq2pd
pop
sub
enter
adc
mov
je
and
stos
test
xchg
xor
andl
push
inc
push
cmp
test
aaa
and
insb
jle
dec
mov
lahf
sahf
fiadds
xchg
jg
sub
dec
mov
mov
sbb
dec
mov
inc
and
ja
add
gs
stos
lahf
inc
ss
lock
bound
in
or
in
sub
lahf
dec
scas
ds
repnz
sahf
mov
jmp
push
enter
xor
adc
popf
and
or
sbb
inc
test
test
icebp
sbb
call
out
orl
xchg
lret
push
cld
push
xor
lods
push
inc
push
daa
mov
data16
outsl
fs
scas
mov
aam
ja
in
sbbl
mov
sub
js
jae
dec
mov
adc
cwtl
sar
cmp
imul
xor
movb
mov
daa
add
add
fdivrl
insl
dec
jae
lret
iret
cmp
repz
js
mov
inc
in
jno
sbb
pop
xor
jnp
and
inc
inc
mov
mov
cltd
mov
test
loop
sub
pop
dec
test
jle
xlat
fnstsw
jns
shl
clc
icebp
mov
xor
stos
mov
jo
sub
pushf
fsubrl
or
das
out
push
fwait
push
pop
fcomps
scas
stos
xchg
mov
xor
push
sbb
sti
jne
xor
push
in
ffree
sbb
push
lods
out
sub
mov
or
lret
xchg
pop
cmp
pusha
pop
loope
jae
mov
xchg
adc
and
out
test
jns
int
xor
push
sub
inc
inc
rorb
mov
insl
cmp
ljmp
push
lds
add
ret
dec
sbb
xchg
and
sbb
das
cld
push
loope
pop
aad
add
xchg
jp
adcl
mov
imul
bound
nop
push
enter
or
push
add
pop
imul
jge
sbb
lahf
pop
roll
hlt
mov
jns
mov
sbb
lds
loop
pop
jb
cmc
mov
icebp
xchg
call
sub
out
fisttpl
push
sbb
sub
jbe
int
daa
loope
sbb
fs
int
inc
sub
cmp
out
and
fwait
or
flds
jmp
loop
icebp
mov
or
mov
cmp
flds
mov
inc
loope
shrb
movsb
push
negb
or
xor
popa
xchg
aad
mov
scas
inc
out
cmp
xlat
dec
sahf
mov
jecxz
pusha
and
dec
out
mov
in
ljmp
pop
aad
lock
lods
orl
les
mov
outsl
ret
dec
push
scas
inc
sahf
push
pop
or
ffreep
sub
mov
movsb
test
mov
jne
sbb
adc
mov
mov
jecxz
jae
into
jle
pop
bound
fnstcw
xchg
inc
aas
mov
push
xchg
dec
xchg
lds
sti
dec
pushl
js
pop
rclb
xchg
fstpt
adc
or
call
stos
mov
mov
pusha
subl
mov
outsb
sbb
jno
mov
fildll
repz
xchg
dec
cli
and
cmp
mov
ds
sbb
push
es
jmp
cmp
jl
aam
lds
jnp
in
lea
mov
out
dec
or
sbbl
movsl
iret
sarl
ret
adcl
jle
lret
add
jne
mov
sbb
ret
aad
mov
fcmovnb
push
jb
int3
push
mov
mov
pushf
subl
je
ss
movsl
sbb
pusha
mov
and
mov
xor
adc
dec
lea
lock
sbb
andb
je
mov
outsb
jg
xchg
scas
jmp
sti
shrb
mov
faddl
cmc
and
enter
loopne
out
cmpsl
xchg
mov
mov
inc
rclb
adc
ret
cmpl
dec
xor
popf
adcl
cltd
sub
inc
mov
jmp
mov
lcall
push
inc
ficomps
ss
cmpsb
es
jne
or
negl
push
insl
push
inc
dec
dec
lods
cwtl
iret
in
mov
loopne
in
mov
aas
jne
and
pop
dec
mov
push
add
shll
popf
adc
faddl
pop
sbb
or
pop
out
push
fimull
js
ljmp
dec
out
lcall
jnp
lret
cmp
mov
mov
push
ss
outsb
sub
sbb
adc
enter
push
pop
push
in
nop
xor
jp
jns
jecxz
add
sbb
mov
xor
ret
les
nop
rcrl
cltd
pop
or
push
roll
mov
sub
imul
fldcw
cwtl
movsb
mov
lds
pop
xchg
pop
cmc
lret
pop
dec
lahf
call
or
add
add
lcall
dec
dec
inc
test
out
push
popf
sbb
loope
out
sub
xchg
movsl
lcall
mov
std
dec
jmp
loope
call
jp
fiaddl
or
jle
outsb
jecxz
and
mov
call
lcall
xchg
dec
ljmp
sbb
lock
out
cmp
out
cmp
rol
rcr
iret
fldcw
mov
icebp
mov
pop
rcll
pop
xlat
out
ds
int
dec
jge
les
inc
or
icebp
daa
popa
jg
jbe
add
fistps
add
xor
mov
shlb
jmp
dec
add
loop
jmp
xor
jl
popa
icebp
dec
mov
lods
pop
mov
or
and
arpl
es
push
cmp
mov
mov
lret
in
mov
movsb
or
jnp
daa
dec
xor
xor
adc
pusha
push
xorl
push
push
push
push
jnp
xlat
cmpsl
jae
dec
adc
adc
into
dec
push
shrl
loope
aam
inc
inc
dec
xchg
sahf
push
pushf
arpl
test
sub
fimull
movsl
and
or
dec
in
push
in
mov
dec
je
fcom
aas
cmc
ja
pop
out
in
jp
repnz
mov
or
rcl
cmp
lea
stos
sub
inc
les
jb
pushf
jno
push
mov
mov
and
xchg
add
or
js
adc
popw
jnp
inc
andb
arpl
sbb
pop
gs
sbb
out
and
xor
mov
cmpsb
dec
mov
cmpsb
jb
cmpsb
sub
fisttps
xchg
xchg
jmp
add
mov
mov
fmuls
or
or
fiadds
pop
lods
mov
xor
insb
inc
cmp
xchg
outsb
mov
shrl
test
and
popa
add
adc
push
cmp
lcall
push
xor
mov
xchg
push
dec
leave
xor
into
jge
push
movsl
lds
std
repnz
and
ret
sbb
sbb
xor
jbe
mov
and
mov
push
sarb
lea
sub
cltd
dec
ljmp
or
push
inc
outsb
push
inc
stos
jbe
aaa
push
aam
jmp
js
stos
stc
sarb
inc
cwtl
adc
add
sub
adc
hlt
xchg
bound
bound
addb
imul
int3
dec
push
fldl
js
cmp
dec
sbb
xor
sbb
mov
inc
and
xor
fs
aad
adc
fmul
fnstenv
sub
dec
out
cmp
scas
jmp
js
imul
lds
and
idiv
mov
dec
jecxz
inc
test
aam
cmp
fs
dec
jp
adc
mov
das
arpl
pop
jno
lret
cmpsl
cmp
arpl
loopne
mov
push
out
nop
subb
sub
imul
lods
push
cmpsb
bound
or
jb
cs
mov
xchg
iret
cwtl
jnp
lock
mov
addr16
repnz
dec
js
mov
orl
in
and
sub
mov
mov
nop
add
jbe
dec
jne
std
cmc
cmp
cmpsl
psllq
xor
dec
fmull
sar
mov
lcall
cmc
and
fmull
mov
and
test
fs
loope
add
cmc
push
fisubl
pop
cli
mov
and
cmp
arpl
repnz
bound
pop
adc
stc
mov
adc
pop
std
and
lods
pop
jnp
mov
push
or
sbb
stos
fidivs
addr16
fsubr
mov
stos
flds
mov
mov
cmp
sbb
mov
mov
jbe
loopne
shl
das
call
push
repnz
cmpsb
xchg
lahf
cmpsl
or
and
jecxz
fs
clc
lock
xchg
sub
imul
mov
in
es
jb
mov
lods
mov
and
loop
jp
mov
js
repnz
gs
movsb
out
xchg
getsec
cmp
fsubs
jp
cmp
mov
mov
sub
mov
inc
and
daa
inc
jb
enter
mov
sbb
ljmp
mov
jl
jecxz
ljmp
dec
movsb
push
scas
and
lret
dec
adc
out
xchg
xchg
out
cmp
mov
and
or
ja
adc
adc
push
or
outsb
sbb
mov
rcrb
xchg
les
popa
push
mov
or
or
inc
ljmp
andl
fisttps
adc
dec
ja
push
insl
fcmovu
or
adc
mov
aaa
shlb
push
jmp
rorb
mov
lods
out
insl
andl
mov
cmp
adc
and
out
dec
jb
pushf
lahf
pop
dec
ds
fwait
lods
pop
aam
jmp
mov
push
push
mov
daa
jecxz
sbb
or
sarl
or
out
xor
inc
push
out
loop
sub
xchg
add
push
cs
cld
pop
cmp
mov
pop
mov
frstor
dec
adc
dec
mov
loope
scas
cmp
xchg
mov
shrl
jmp
mov
jne
fildl
xlat
cmp
pop
add
pop
ret
mov
stos
insl
lret
sub
test
mov
mov
sbb
in
cmp
in
sti
pusha
sti
push
fstpt
sti
repz
loopne
lret
je
jae
addr16
pop
les
repz
hlt
and
sbb
xchg
test
aas
push
imul
cwtl
or
std
pop
mov
inc
leave
in
xchg
leave
mov
jb,pt
lahf
jae
cmpsl
mov
call
jg
or
mov
sarb
call
in
cwtl
mov
xlat
jns
jo
cli
insl
push
out
in
dec
movsb
cs
cmpsl
sahf
sub
incl
stos
outsl
sahf
mov
fsubr
movsb
mov
cmp
jne
sub
jns
pop
mov
pop
adc
sahf
lds
out
mov
sub
mov
add
out
sub
cld
les
jecxz
rcrb
jns
ret
test
aam
inc
mov
cmpl
and
cmpsl
cld
sub
dec
mov
or
icebp
add
mov
adc
jmp
dec
cmp
loope
sub
sub
and
inc
clc
popa
std
scas
sbb
das
cmc
inc
inc
arpl
mov
incb
mov
movq
pop
mov
xor
lahf
inc
sub
push
loopne
hlt
sub
mov
cmp
std
sub
imul
mov
pushf
ss
mov
cmp
mov
jge
call
arpl
xor
xor
lods
sbb
scas
cmpsl
push
imul
mov
aad
fiaddl
dec
add
or
xchg
outsb
pusha
stos
cmp
xchg
add
dec
inc
xchg
insl
jg
filds
dec
imul
das
push
mov
aas
loope
fsubs
and
gs
xor
repz
pop
adc
mov
gs
out
rorl
jg
cld
push
push
cmp
xchg
push
xor
ljmp
jmp
sub
movsb
movsb
push
mov
std
pop
out
icebp
icebp
xchg
cmp
or
push
jge
add
xor
and
jb
sub
pop
fldenv
testb
test
mov
out
jo
pop
decl
sahf
adc
outsb
mov
aam
aam
outsb
xor
ja
dec
push
inc
or
dec
adc
mov
and
push
cmp
ficomps
test
cmp
clc
mov
mov
insl
sub
nop
xchg
xchg
push
int
push
daa
ds
pop
jno
cmpsb
sub
shl
pop
lock
sbb
and
rcl
pop
imul
dec
pusha
into
cmp
xor
push
je
pop
dec
loopne
mov
leave
cmp
dec
sarl
jo
cwtl
cmpsl
pop
pop
cmp
sti
push
cmp
push
insb
lds
cmp
mov
dec
cld
and
sub
xchg
xchg
and
or
aaa
pop
xor
pushf
dec
jp
xchg
lret
or
cmc
and
jl
push
imul
in
fs
arpl
xchg
gs
outsl
mov
insl
or
decl
fsub
mov
gs
mul
xchg
xchg
sub
xor
xor
mov
in
divb
adc
bound
fwait
test
bound
test
or
mov
push
lods
scas
clc
inc
sbb
jmp
lods
cmp
add
popl
jb
pop
shl
adc
lds
or
or
pop
jge
mov
data16
sbb
add
fdiv
jl
movsl
orl
cs
add
fs
shrl
jmp
in
sbb
in
rcl
push
out
repnz
iret
pop
cmp
jae
cs
aam
lds
ds
iret
jecxz
xor
stos
cmp
sbbb
fsubrs
dec
jmp
adc
pop
sbb
mov
daa
loope
push
insb
notb
orl
mov
sbb
loopne
aam
les
shrl
mov
subb
mov
jl
lret
pop
cld
push
cltd
mov
add
pop
xor
xchg
sub
insb
cmpsl
xor
add
inc
mov
mov
dec
mov
int
and
lock
aaa
sahf
mov
xchg
std
stos
cmp
insl
lcall
jae
and
dec
cmp
pop
insb
pop
dec
jo
push
icebp
sbb
es
cld
fisttps
movl
jp
test
or
mov
imulb
dec
repnz
mov
fcmovnbe
jno
call
inc
dec
scas
adc
iret
int3
jbe
scas
lds
push
mov
mov
mov
lock
aaa
add
cmp
std
mov
mov
sub
push
call
pop
mov
pop
xor
call
dec
mov
mov
aam
pop
hlt
hlt
or
push
iret
aam
ljmp
bnd
out
pop
pop
cmp
mov
mov
dec
push
or
mov
inc
dec
loopne
push
push
insb
cmp
and
sbb
cmp
je
sahf
sti
daa
adc
ja
and
or
jmp
test
fsubrs
mov
cmpsb
lret
ja
cmpsb
ja
pop
push
shl
loope
cltd
or
js
cld
cli
mov
or
pop
sti
cmp
lret
add
prefetch
xchg
pop
out
push
mov
jne
les
sbb
cltd
loopne
in
xlat
fsubrl
arpl
in
ret
data16
jbe
adc
pop
mov
and
out
sub
sbb
sub
xchg
push
mov
pop
hlt
and
andb
push
sahf
dec
pop
add
add
fwait
outsl
test
cmp
adc
call
mov
xorb
into
jno
xchg
pop
cmc
push
cmp
push
mov
xchg
jp
push
andl
leave
mov
test
sub
inc
mov
lods
test
cwtl
pushl
pop
sub
push
dec
cld
out
movsb
std
fnstsw
push
or
push
jnp
mov
aam
xchg
iret
push
fdivp
cli
mov
and
jle
mov
out
sub
lcall
sbb
gs
xchg
lea
cmpsb
fildll
sbb
arpl
inc
outsb
adc
mov
push
iret
call
cmp
rorb
pop
arpl
xor
cmp
cmp
inc
lahf
add
and
inc
ret
test
shlb
mov
sbb
popf
shrb
xchg
leave
pop
loope
jae
push
mov
xlat
or
mov
aam
pop
test
sub
and
fisubl
pop
cmp
js
cmovl
in
test
xor
mov
popa
movsl
mov
aas
jo
lcall
arpl
jno
lea
add
mov
aaa
mov
push
sub
into
inc
cld
fisttps
repnz
push
mov
fisttpll
incb
scas
push
add
or
and
ja
out
ret
sub
test
popa
sub
jl
jno
push
fmul
mull
insb
jne
nop
pop
out
adc
mov
or
fdivr
imul
lea
incl
push
jmp
in
xor
scas
nop
stos
sub
adc
cmpl
jns
fsts
or
cmc
sbb
adc
lret
aaa
insb
lods
and
dec
adc
mov
jge
gs
mov
mov
enter
push
mov
inc
sub
imul
fistpll
cmp
pop
push
mov
mov
mov
fistps
xor
cmp
out
add
cmpl
xchg
sbb
sahf
repnz
clc
push
pusha
add
arpl
dec
dec
roll
lcall
stos
push
push
lock
xor
and
and
add
pushf
or
pusha
push
jg
lahf
shlb
cwtl
sub
sub
cmp
subps
nop
inc
fcoms
movsb
fidivl
cmp
mov
xchg
adc
dec
mov
xor
loope
push
mov
ret
test
xchg
clc
mov
icebp
sbb
jg
xchg
sub
push
push
cmp
faddl
subb
faddl
adc
jae
mov
scas
stc
and
lods
iret
cs
jnp
dec
jns
ja
aas
fdivs
xchg
push
ljmp
push
sub
push
cmp
xor
orb
loopne
xlat
shlb
lock
dec
out
imul
test
cmp
int
test
out
push
lret
mov
add
sahf
aad
lds
inc
sbb
push
sbb
add
xchg
mov
inc
mov
mov
mov
add
les
ljmp
add
jp
daa
test
out
pop
adc
mov
dec
adc
jmp
push
call
lcall
fisubrl
pop
hlt
js
fwait
mov
mov
faddl
imulb
pop
inc
inc
jno
js
mov
scas
mov
inc
lret
sbb
add
cmpsl
mov
push
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
mov
or
sub
push
push
imul
movsb
daa
cmp
sahf
scas
cmp
mov
cltd
sbb
int3
jg
insb
sub
mov
mov
lcall
push
stos
adc
dec
pop
mov
into
and
adc
adc
icebp
dec
inc
xor
jge
roll
jg
or
mov
outsl
push
sahf
xor
jmp
and
lret
mov
mov
push
jnp
or
push
cmpsb
pop
cmp
adc
aam
add
je
lret
push
push
movsb
fsubrl
clc
pop
sub
pop
pop
iret
mov
aam
fdivr
push
lahf
pop
adc
insb
es
insb
push
js
jecxz
out
out
jp
fdivl
add
jg
dec
ja
push
fisttpl
test
or
adc
push
xor
js
inc
or
cwtl
mov
pop
dec
cs
xor
cmp
int3
cmp
shrl
lods
push
lea
sub
sub
adc
ficomps
xchg
push
push
cmp
insb
xchg
xchg
loop
xchg
mov
mov
lods
imul
lcall
stc
aaa
stc
xchg
dec
and
movsb
imul
rolb
sub
mov
iret
pusha
sbb
icebp
inc
cmp
mov
pop
ror
cmp
lock
jns
push
test
ret
dec
or
movsb
leave
into
jno
cmp
push
daa
cli
insl
add
icebp
xchg
loop
dec
mov
fst
xlat
mov
cmp
sbb
in
adc
xchg
enter
push
cmp
incl
mov
or
and
insb
pop
and
in
mov
push
add
jmp
pusha
add
lahf
lds
push
push
push
xor
mov
fidivrs
pop
inc
xchg
sub
arpl
add
mov
inc
xor
jge
cwtl
jg
jb
jl,pn
dec
cmp
sbb
fs
shll
das
sarb
jae
aaa
pop
loop
pusha
inc
mov
insl
pushf
pop
imul
adc
and
and
mov
shrl
dec
sbb
push
dec
imul
or
add
ljmp
dec
jb
push
loop
outsb
jl
jl
lcall
push
daa
popf
call
jecxz
push
mov
xor
add
nop
imul
xor
jmp
xor
subl
das
js
cmp
dec
aam
sahf
jno
pop
pop
sub
cmp
mov
ret
rorl
xchg
inc
test
add
testl
bound
push
jb
fisubs
imul
rcrl
or
fstpl
iret
std
dec
orl
cltd
push
lret
cmp
add
push
inc
sub
or
aaa
ficompl
mov
push
ds
dec
mov
scas
sahf
jge
mov
dec
xchg
fsubrl
inc
jne
push
pop
xor
insl
xlat
xor
cmp
out
xor
pushf
stos
dec
fildl
js
push
push
dec
pop
cmp
xchg
cmc
mov
inc
add
xlat
sub
sub
ds
push
pop
scas
lea
les
jmp
mov
jl
adc
inc
rep
sub
dec
sbb
adc
lea
in
lea
xorl
push
ret
shll
jl
push
cmp
idivl
jg
mov
xor
dec
lea
into
cwtl
addr16
int
mov
insb
and
jae
aad
dec
cmpsl
test
sbb
mov
clc
sbb
roll
jecxz
and
and
ret
xor
inc
lret
leave
add
dec
fsubs
aas
xchg
fldt
xchg
cmp
sub
lods
lds
lock
int
sub
lods
push
fwait
shl
inc
jp
push
xchg
xchg
pop
and
ljmp
mov
or
pop
inc
jge
aas
or
stc
imul
inc
mov
jbe
fisubrl
es
leave
orb
pusha
pop
fs
shl
sti
aam
and
mov
shll
add
fnsave
and
push
cmp
jne
xchg
out
out
mov
nop
icebp
insb
xlat
mov
fistps
inc
lahf
xor
test
xchg
jmp
pusha
dec
mov
mov
mov
dec
insb
out
out
jecxz
xor
mov
lahf
sub
cmc
xlat
pop
jb
cmc
mov
js
repz
in
test
popf
into
dec
mov
sbb
ret
sti
daa
repz
subl
mov
add
xchg
mov
add
jmp
leave
neg
imul
sub
fimull
mov
and
aam
push
inc
mov
loopne
cmp
push
nop
or
daa
push
add
sbb
or
bound
pop
iret
and
sub
mov
dec
lods
andb
lods
imul
adc
jmp
cltd
inc
outsl
cld
outsb
cltd
repz
jl
lods
in
sub
rclb
scas
xor
mov
das
xor
hlt
lods
mov
and
mov
adc
popa
jo
mulb
mov
cltd
mov
pop
fsubrs
pop
movups
in
addr16
pop
inc
loopne
mov
cli
dec
movsl
in
add
or
push
cmpsb
and
std
xor
mov
lcall
pop
leave
push
ja
mov
mov
rcl
sub
test
and
ret
sbb
cmpsl
mov
cmp
mov
mov
cmp
in
shrb
cli
and
push
push
ss
jp
shrl
cmp
xor
dec
outsb
inc
xchg
jecxz
sar
mov
arpl
andl
addps
movsl
mov
inc
pop
cmp
push
cmp
fistps
mov
add
rorb
fcomi
fldt
push
pop
js
jne
xchg
adc
and
aas
leave
adc
or
and
lret
pop
dec
sub
push
and
out
jmp
aam
pusha
shr
jb
insb
data16
mov
test
sti
jno
jmp
jg
daa
xchg
sub
and
orl
push
lret
iret
sub
rol
inc
xor
lcall
xchg
xorb
cli
daa
jb
fwait
loopne
xchg
mov
cs
fsubrl
cmpsl
xchg
in
add
mov
in
mov
push
or
cmpsl
jge
xchg
pop
je
pop
subl
ror
dec
addr16
mov
xor
add
test
push
incl
dec
mov
inc
xchg
pop
lret
sub
imul
lea
popf
ret
and
pop
inc
xor
scas
inc
mov
jae
pop
cltd
mov
xchg
loope
ss
jae
out
xchg
into
sub
sbb
int3
enter
and
or
bswap
xchg
aaa
popf
sub
add
rcr
aad
sub
shrb
mov
in
insl
sub
mov
jle
int3
imul
add
and
push
ljmp
push
inc
js
lahf
cmp
push
xor
stos
dec
pusha
and
fsubrs
lahf
aam
xchg
dec
jmp
repz
cmpsb
adc
lahf
jo
mov
test
cmp
cmp
daa
and
repz
stos
enter
xchg
sub
mov
repnz
xchg
orb
xor
pop
sar
clc
mov
cmp
test
js
jns
popa
rcrb
mov
cmp
cmpsb
idivb
or
add
pop
in
ret
sub
sbb
popf
fadd
data16
jne
push
outsl
dec
imul
dec
int3
cs
ficompl
mov
dec
hlt
xchg
into
stc
and
push
jl
adc
jno
aad
cmpsl
lds
cmp
sub
shr
int
jl
push
lcall
sbb
je
cmp
lods
cs
cmp
dec
and
push
in
push
shll
popa
out
jb
push
cmp
jg
inc
add
in
push
pop
dec
sahf
notb
test
icebp
mov
hlt
mov
mov
hlt
imul
push
inc
fcompl
jle
rcrw
sub
xor
sbb
jl
cmc
jg
mov
inc
inc
dec
sbb
push
nop
push
popf
popa
gs
cmp
rolb
scas
mov
mov
bound
add
and
dec
add
das
lods
test
mov
push
or
sbb
fadds
ss
insl
adc
call
shlb
fnsave
faddl
jl
rorb
xor
mov
addr16
sub
out
out
pusha
cmp
sub
movsb
orb
xor
inc
inc
mov
out
or
sbb
inc
popa
jns
xchg
sbb
jae
ljmp
outsl
mov
stc
cmp
jno
or
es
xchg
adc
test
add
add
inc
adc
shrb
std
pop
mov
stc
bound
out
pop
push
sbb
dec
fs
sahf
or
cmp
mov
rorl
stos
dec
sub
inc
mov
cmp
mov
shll
loopne
cmp
adc
stos
outsl
daa
loopne
push
fisttpl
jg
mov
pop
jo
and
mov
mov
fists
and
in
iret
pop
xchg
xor
in
ret
int
push
cwtl
or
stc
and
push
adc
mov
mov
jmp
filds
mov
mov
jne
int3
xchg
cmp
icebp
cltd
pop
sub
dec
or
outsb
and
mov
lret
sub
daa
ljmp
mov
rcrb
mov
push
sub
sub
test
pop
frstor
and
jg
dec
jo
in
lret
pusha
jecxz
mov
or
dec
pop
mov
jge
pusha
xor
popa
aad
bound
adc
lcall
mov
xor
in
add
mov
adc
jg
out
sub
mov
scas
xor
cmc
jmp
and
push
sbb
fwait
sub
jmp
sub
push
stc
mov
sti
or
and
sub
jg
shlb
xor
xor
sti
sub
xor
jne
add
pop
bound
popf
fsubp
clc
sub
insb
or
les
jg
rcrl
jae
imul
cmp
das
stos
in
cmp
or
fcoms
push
test
leave
ljmp
xor
in
rcl
fs
je
lret
sub
push
out
mov
and
or
stos
sub
jg
xchg
movsl
lods
loope
scas
and
mov
mov
fnstsw
and
sahf
jae
add
cld
divb
ss
xchg
pop
cmp
movsb
mov
add
js
mov
add
dec
xchg
fiaddl
jo
mov
push
scas
xor
int3
cltd
ljmp
imul
icebp
leave
dec
mov
movl
mov
iret
adcb
pop
aaa
and
push
imul
pop
mov
pop
fadds
xchg
push
xor
icebp
pop
mov
out
sub
push
jae
add
pop
jo
sti
cmpl
cli
xor
sahf
xlat
leave
mov
and
fcoml
mov
pop
insb
movsl
mov
xchg
and
jmp
inc
shrb
in
xchg
mov
outsl
and
jno
mov
les
lcall
jnp
jg
lods
pop
jno
xchg
adc
inc
ret
or
push
out
daa
jle
xchg
repz
leave
mov
and
adc
jp
pusha
in
xlat
in
hlt
xor
mov
mov
cmc
leave
jae
xchg
or
pop
in
inc
negl
pop
mov
ljmp
ss
lock
xor
xchg
lahf
jns
pop
mov
jns
or
mov
add
mov
aad
push
xchg
ret
mov
xor
add
jbe
arpl
in
sub
test
and
mov
lcall
dec
insl
test
ja
pop
sti
mov
mov
mov
out
mov
xchg
cmp
icebp
mov
sbb
push
adc
mov
ret
push
lcall
sahf
inc
das
push
mov
add
mov
push
nop
icebp
pop
mov
popf
sub
mov
into
in
cli
push
push
addr16
loope
addr16
or
ficoml
pushf
lds
and
mov
push
mov
sarl
mov
in
repz
lea
rcll
sbb
sbb
scas
cmp
test
repz
popf
cmp
ds
inc
push
sbb
mov
cmc
mov
cwtl
push
repnz
jge
mov
mov
jne
xor
or
in
loopne
mov
pop
and
inc
push
test
popl
fwait
repz
push
rorb
xlat
adc
mov
or
loop
int3
fwait
in
ret
ret
or
fiaddl
lods
mov
sub
ljmp
pop
out
aad
sahf
adc
fldenv
jo
fisttpl
dec
pusha
pop
jbe
dec
add
pop
push
popa
fidivs
sub
inc
jmp
xchg
sbb
inc
sub
pop
arpl
scas
cmp
pop
lcall
loopne
add
lods
ja
je
iret
sbb
or
add
cmpsb
repz
push
xchg
leave
sbb
stos
dec
jno
push
mov
mov
cmp
bsf
loope
push
pop
xor
cs
and
jge
dec
fisubs
or
inc
adc
jo
in
sahf
mov
push
lcall
fisubrl
insl
sahf
movsl
rorb
outsb
jne
dec
xchg
xor
sti
mov
fsubrp
movsl
xor
xor
mov
movntps
out
mov
sbbl
xchg
enter
mulb
and
out
xor
popf
mov
inc
lods
arpl
in
pop
mov
mov
ret
fdivl
shl
xchg
push
js
mov
gs
popa
add
dec
xor
add
movsb
mov
sbb
push
cwtl
addr16
inc
inc
and
cwtl
es
in
repnz
jo
sbb
or
ficomps
imul
xchg
mov
dec
cmp
addr16
loopne
int
ds
pusha
cltd
xchg
dec
out
out
sbb
js
jb
adc
test
mov
mov
and
popf
dec
jmp
jo
dec
jmp
mov
xchg
push
jg
xchg
scas
xlat
iret
inc
sub
ss
sub
mov
in
pushf
add
add
or
xchg
addr16
jmp
and
push
aad
in
xor
push
ljmp
inc
stos
popa
test
dec
fmul
inc
or
cmp
jno
dec
into
cld
xor
mov
cmp
stc
popa
pushl
test
iret
mov
in
mov
out
adc
imul
pop
test
fs
lea
xor
sub
mov
sar
fsubrl
sub
jns
pop
mov
sbb
push
inc
lret
xchg
and
clc
sub
int3
test
dec
xor
xor
add
push
ljmp
testb
lock
mov
test
decl
xchg
mov
insb
xchg
repz
orb
data16
fdivrl
push
and
rcr
ret
cmc
cmpsl
test
pop
cmpl
cmp
lahf
dec
mov
testl
lcall
pop
cmpsl
sub
pop
jmp
sbbb
test
add
dec
clc
lahf
insl
in
mov
xor
jne
cmp
daa
push
shrb
mov
inc
lock
jno
push
imul
xlat
popa
mov
jbe
incl
out
cld
cwtl
bound
jnp
or
sahf
daa
push
into
and
xor
adc
fistps
mov
insb
push
fisttps
xor
int3
jle
and
cs
es
out
lods
cmpsb
jae
je
mov
imul
mov
loop
arpl
xlat
mov
adc
xor
push
sbb
sahf
stc
jecxz
pop
mov
mov
jbe
or
aaa
xlat
daa
xchg
inc
sub
add
sbb
xor
enter
imul
and
and
dec
lods
pusha
cmc
jbe
sbbb
push
dec
dec
stos
sbb
jmp
xchg
cmp
sbb
mov
add
int3
enter
das
pop
or
in
shr
insb
in
jbe
mov
sbb
subb
sbb
jo
daa
cmpsl
fists
and
adc
into
xchg
cmp
aaa
out
push
loop
xchg
imul
loope
insl
js
fucom
dec
testb
out
mov
mov
jb
cmp
pop
adc
ret
fs
repnz
out
xlat
xor
lods
insb
hlt
adc
in
push
adc
jg
into
jbe
ja
scas
imulb
or
sub
push
or
and
sub
dec
jge
xchg
push
jle
pop
inc
outsl
insl
inc
pop
xchg
push
cld
faddl
loop
test
ljmp
aad
pop
mov
dec
xor
xor
lods
jle
mov
cwtl
fistpll
repnz
sub
sbb
insl
jle
mov
jno
xchg
cltd
repz
mov
aaa
fwait
xchg
add
lahf
imul
inc
mov
stc
add
out
call
aad
jle
jo
aad
iret
clc
push
scas
addr16
push
ds
std
adc
fsubr
inc
mov
cwtl
mov
sbb
jge,pt
jno
lret
add
mov
ljmp
ficoms
inc
inc
add
pop
inc
testb
icebp
js
aas
dec
mov
hlt
jno
sbb
xlat
cli
push
hlt
add
mov
pushf
out
cmp
lock
inc
scas
xlat
ficomps
and
ss
sub
ja
mov
scas
aam
ja
cmc
lcall
int3
and
sub
cmpsb
filds
mov
lahf
pop
sahf
enter
adc
xor
cli
rcl
jecxz
nop
xor
rcr
les
dec
das
in
jnp
sbb
sbb
adc
jmp
adc
push
movsl
adc
lds
jnp
mov
mov
stc
addl
insb
test
pop
push
out
adc
dec
jg
ljmp
pop
aaa
sub
cmp
call
inc
xor
stos
ljmp
inc
shrb
test
rcl
sub
ficoml
aas
or
mov
push
test
daa
out
test
mov
imul
popf
cmp
mov
adc
inc
or
loope
mov
iret
and
mov
or
fsubl
adc
mov
out
insl
movsb
xchg
les
sub
dec
fs
mov
hlt
sub
pop
sbb
dec
outsb
jecxz
scas
adc
fucomp
movsl
or
aas
in
xchg
repnz
push
push
loop
mov
movsl
lods
rorb
jae
pop
mov
jl
xor
fwait
repz
mov
cs
adc
enter
xorl
and
or
hlt
mov
iret
in
pop
neg
pusha
mov
sub
movsb
out
nop
pop
cli
popa
loope
add
insb
jp
sarb
aaa
push
out
cmp
es
loope
mov
dec
cld
push
push
pop
scas
xor
jecxz
mov
pop
flds
iret
mov
or
cs
cld
aas
dec
adc
or
or
sub
out
test
movb
cmp
xor
dec
mov
ss
inc
clc
or
fstl
mov
inc
mov
add
rolb
scas
jge
mov
ds
cmp
or
mov
incl
jns
mov
aam
mov
sub
clc
fdivl
scas
stos
out
push
adc
cmp
adc
mov
jbe
pop
fimuls
out
push
loopne
adc
jle
mov
sub
inc
push
out
push
push
aas
cs
sub
repnz
mov
mov
push
inc
pop
int
test
push
sbb
insb
push
mov
mov
pop
jle
sbb
jnp
cmp
out
adc
mov
std
jmp
jle
xor
xorl
cmp
jge
xor
mov
or
mov
xchg
ss
aaa
fmul
mov
inc
dec
push
and
fldl
movsl
icebp
out
stc
mov
jb
pushf
int
stc
mov
mov
aas
mov
jp
std
add
mov
and
jp
push
cmpsb
jbe
lock
mov
leave
adc
and
loop
adc
fcmovnu
dec
rol
loope
lcall
lock
jmp
or
out
in
jmp
mov
dec
roll
adc
or
pusha
fadd
pop
sbb
dec
test
or
jo
mov
or
adc
add
mov
es
dec
add
or
in
cmp
adc
jbe
lock
jle
lret
mov
jge
or
mov
add
xchg
and
xor
inc
ret
fisttpll
xchg
in
sbb
mov
loope
outsb
inc
or
and
push
pop
insl
fidivs
stos
fstps
rorb
stc
test
sub
mov
cltd
clc
lea
testl
shrb
adc
jns
mov
adcb
or
cwtl
xchg
dec
mov
dec
pop
jne
mov
mov
roll
xchg
jno
inc
dec
les
repz
xlat
mov
scas
inc
mov
sbb
cltd
mov
lods
xor
sub
adc
xor
pop
push
or
jle
enter
pusha
addr16
rolb
enter
jp
mov
call
xchg
addr16
jbe
dec
dec
dec
dec
mov
jge
outsb
lods
stos
sbbb
loopne
pop
mov
imul
orb
push
jne
filds
lea
icebp
jmp
loop
mov
dec
mov
jae
adc
mov
pop
pop
mov
mov
test
pop
dec
ret
xchg
jo
add
xor
dec
mov
pop
cli
or
adc
imul
imulb
out
or
movsl
xchg
xlat
and
lahf
repz
mov
inc
jnp
dec
sbb
sub
jo
out
lahf
inc
rclb
stos
stos
jecxz
and
pusha
adc
and
das
and
adc
mov
iret
lods
stc
pop
cwtl
out
pop
cmp
push
add
stos
in
add
xchg
sahf
jno
mov
add
sub
in
inc
lcall
jae
mov
imul
test
jo
jnp
dec
push
lods
sub
sahf
push
aas
in
sarl
mov
sbbl
push
addl
and
je
xor
xlat
xchg
dec
dec
mov
dec
sarl
jae
ss
push
test
shlb
pop
loope
xchg
adc
shrl
mov
shll
lds
push
andl
xchg
out
decl
rcrl
daa
mov
ficomps
add
add
pop
jb
sbb
repz
and
or
sahf
cmp
mov
push
jecxz
movsb
scas
xor
mov
stos
mov
arpl
sbbb
lret
insl
and
inc
xor
push
orl
mov
sarb
cmp
into
jle
bound
pop
jp
lcall
cs
cld
add
add
ja
jge
pop
test
addr16
xchg
xchg
cwtl
not
mov
rcrb
cwtl
pop
incb
mov
dec
sbb
push
mov
or
int
jle
outsb
pop
out
jb
push
mov
filds
clc
mov
jnp
or
inc
pop
sbb
mov
nop
sub
andl
mov
aaa
inc
nop
in
out
jmp
pusha
xchg
cmp
xorl
push
cmp
fldenv
add
and
test
push
stos
fists
xchg
mov
pop
cwtl
push
jmp
jne
daa
xchg
std
mov
repnz
xor
pop
cwtl
cwtl
xor
cmp
fsts
push
jb
pop
xchg
sbb
sbb
data16
inc
insb
fcmovnbe
xor
sbb
je
inc
sahf
popa
jno
addb
add
scas
push
icebp
cmpsb
sbb
push
lcall
xor
xlat
ds
pop
or
fmull
jae
mov
popf
fldl
xchg
push
notl
les
push
pop
or
bound
sub
sbb
push
jmp
sub
js
sti
adc
in
ds
aam
mov
or
jecxz
push
cmpsb
push
fcompl
call
in
mov
dec
pushf
ja
cmpl
pop
testl
cwtl
fs
movsb
push
inc
mov
mov
lods
cmp
ret
lcall
pop
jno
lock
jecxz
xchg
nopl
cmp
out
stc
mov
cmpb
jns
cmc
add
mov
ror
dec
adc
inc
mov
jle
or
fs
pop
aad
cmpsb
fisubrl
inc
aas
sbb
sti
cmpsb
enter
dec
imul
or
loope
sti
xchg
and
mov
imul
mov
stos
int3
or
cmpsl
mov
pop
sub
orl
rclb
push
icebp
jo
nop
aaa
push
or
mov
or
mov
or
xchg
jg
sbb
fsubrp
adc
gs
jo
mov
pop
in
imul
movsl
rolb
and
repnz
imul
popl
pop
adc
mov
adc
push
xchg
push
inc
lods
xchg
mov
inc
xchg
ja
cmpl
int3
jnp
sbb
mov
mov
push
xchg
outsb
mov
mov
sbb
mov
fnstcw
test
mov
dec
mov
xorb
inc
inc
inc
mov
les
add
fimull
outsb
mov
out
push
insb
or
test
gs
inc
xchg
adc
push
lods
enter
and
mov
and
pop
jns
lahf
push
mov
icebp
cmp
sbb
in
mov
js
jne
aad
repnz
inc
loop
jp
clc
or
out
insb
sbb
jb
dec
push
ret
push
jae
push
cmc
inc
xor
mov
je
xor
ret
add
jno
in
jns
mov
movsl
or
pop
addr16
xor
pop
stc
fs
cs
popa
stc
rcll
test
adc
test
dec
add
das
scas
jecxz
cmpb
xor
mov
push
sahf
mov
or
sarb
out
sbb
pop
sarl
push
xchg
jge
fwait
bound
outsl
iret
loop
arpl
cwtl
aad
adc
testb
ja
push
mov
lahf
arpl
ss
rcr
xor
sbb
push
into
pushf
ret
loopne
inc
push
add
or
mov
cmc
loope
push
sub
push
inc
into
sbb
mov
push
fnstenv
push
in
dec
dec
sub
aas
ljmp
fcoml
jns
xorb
mov
inc
pushf
das
adc
inc
sbb
cmp
push
xlat
or
inc
rolb
mov
xlat
mov
pop
test
cmp
cmp
insb
adc
fwait
lods
adc
mov
test
mov
or
push
jle
mov
sti
push
add
fistpll
ljmp
mov
xchg
out
hlt
roll
lret
fistps
xchg
jbe
movsl
repz
pop
pop
jne
mov
js
and
xor
mov
cmp
ja
push
mov
push
mov
add
test
pop
adc
jb
sub
pop
clc
inc
pop
lret
addr16
stos
out
ja
shlb
jmp
lods
lods
scas
sub
push
aad
add
ss
mov
mov
mov
jmp
mov
cld
or
lock
fs
cli
and
not
dec
adc
cmp
mov
mov
and
cmpsl
dec
daa
mov
ds
xlat
imull
int
push
add
cmp
push
push
cld
jns
xor
popf
xor
jl
lret
dec
mov
pop
pop
push
adc
das
mov
ljmp
or
gs
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
jb
push
out
mov
dec
xchg
xchg
jbe
mov
scas
jmp
and
and
push
shll
mov
lods
cwtl
cmp
pop
shrl
xlat
jmp
repz
fdivr
sbb
mov
nop
push
aas
loope
cmp
leave
loopne
pop
xchg
das
mov
imul
dec
jno
repnz
stos
lahf
push
iret
mov
inc
mov
popf
mov
xchg
daa
jmp
jbe
add
sub
xchg
mov
je
xchg
dec
dec
inc
xor
pop
int
lcall
add
cmp
cmp
dec
dec
mov
cwtl
clc
stos
adc
leave
jg
aaa
cmp
icebp
jb
push
mov
rorb
xchg
xchg
add
cmp
repz
push
or
xor
inc
rorl
test
add
mov
test
enter
xchg
inc
xorl
arpl
iret
mov
or
pop
cmpb
notl
and
jae
adc
mov
out
sub
cmp
xorl
ret
test
cwtl
add
add
mov
lods
loop
mov
fidivs
outsb
lret
addb
pop
leave
enter
cmp
or
ja
pop
das
inc
inc
jl
ret
dec
cmc
xchg
mov
out
repz
jmp
inc
or
lods
lds
lds
lods
add
or
add
sbb
enter
xor
sbb
insl
sub
scas
mov
int3
add
ret
add
adc
adc
loop
into
add
fbstp
dec
adc
push
mov
and
outsb
inc
fwait
lds
repz
mov
sti
out
lcall
nop
fdiv
addr16
pop
scas
jl
xchg
loopne
rorl
push
adc
pop
sbb
push
lret
xchg
lods
mov
shrd
lret
and
int3
adc
mov
mov
pop
mov
movsb
or
push
out
push
sbb
pop
ficompl
mov
inc
imul
inc
imul
and
lds
test
push
cmpsl
out
sub
fwait
jne
test
xchg
fnstenv
and
add
arpl
push
dec
mov
jge
ja
pop
ljmp
dec
data16
lcall
in
leave
repz
andb
dec
cld
xor
jle
andl
xchg
insl
push
add
jecxz
xorl
out
jbe
or
xchg
addr16
std
mov
fldl
dec
jecxz
fs
hlt
dec
leave
fs
inc
push
repnz
int3
insl
aam
int3
mov
stos
mov
iret
jns
stc
daa
mov
rcrl
stos
leave
and
cmp
xor
dec
fcompl
push
insb
and
push
jecxz
lret
push
dec
or
int3
dec
sub
ss
mull
clc
stos
not
push
adc
push
inc
push
test
push
stc
push
daa
cltd
jae
mov
or
daa
jns
es
repz
adc
fwait
pusha
jns
mov
jae
jl
jns
shr
fidivrs
xlat
adc
aam
test
hlt
daa
and
xchg
mov
gs
out
adc
or
stc
lea
push
sub
scas
lret
fldenv
imul
lret
faddl
fwait
push
outsb
test
std
lret
sbb
or
outsl
jb,pn
lock
daa
icebp
inc
mov
push
jl
stos
mov
lock
sbb
push
bound
jb
push
pop
lret
cld
out
mov
add
inc
jb
fistpl
insb
cwtl
adc
inc
adc
push
fwait
xor
fidivl
in
mov
andl
xor
mov
lret
scas
adc
fists
xor
lea
pop
push
push
cmp
xorb
daa
or
pop
cs
stos
daa
jne
dec
aas
pop
je
adc
xchg
mov
out
dec
ficompl
scas
cmp
adc
dec
jp
iret
add
cli
sbb
pop
push
iret
daa
and
dec
stos
mov
cltd
pop
push
mov
int
push
mov
or
cmp
in
mov
mov
mov
stos
jno
daa
xchg
clc
nop
mov
in
jp
xchg
ss
mov
or
and
cltd
stos
inc
mov
mov
dec
mov
mov
movsl
or
and
jbe
pushw
testb
sti
inc
mov
xor
mov
mov
dec
repnz
fidivl
cmp
inc
mov
sbb
cld
sbb
sbb
nop
fisttpll
add
or
cld
inc
out
fdivrs
test
push
loope
lahf
bswap
iret
adc
scas
test
repnz
pop
push
mov
sub
loope
pop
popf
in
pop
ljmp
xlat
fldl
sbb
jl
outsl
je
lea
stos
repz
lds
adc
outsb
loop
rcrl
cmp
fcmovbe
cmp
cmc
cmp
push
jae
movsb
aas
pop
shrb
or
filds
xchg
inc
in
ss
clc
imul
xchg
iret
cmp
sahf
push
les
push
fcompl
dec
mov
ret
pop
push
lods
test
xor
fnstsw
xor
add
in
test
aas
mov
hlt
cmp
dec
loop
cmpsl
sarb
jnp
adcb
or
lods
ljmp
xchg
or
cwtl
mov
xchg
cmp
jns
jp
stos
scas
sub
lahf
gs
jbe
push
jb
pop
push
sahf
xor
or
movl
mov
mov
mov
lahf
outsl
dec
popf
mov
pop
mov
push
xchg
inc
cmp
mov
dec
rcrl
add
push
stos
ret
sub
pop
adc
jo
ss
push
jg
maskmovq
testl
jl
mov
mov
orb
mov
stos
cmc
pop
mov
repnz
or
je
xor
mov
push
push
and
dec
test
xlat
sbb
mov
xchg
das
icebp
mov
int3
mov
inc
in
push
popf
xchg
lcall
in
sub
inc
mov
cmp
fists
push
mov
lods
ficomps
das
cs
jnp
cmp
mov
xor
push
xchg
ja
mov
and
imul
mov
adc
ds
clc
mov
les
mov
mov
lock
pop
xor
mov
aas
mov
xor
stc
lock
filds
cmp
add
pop
jge
inc
rcrl
inc
mov
in
rorb
nop
inc
sahf
xor
scas
lret
aas
shl
ficompl
or
cmp
es
mov
jge
adc
xor
sub
addl
inc
pop
ret
mov
xor
adc
jecxz
push
adc
sbb
and
pusha
jne
jg
inc
sbb
jne
in
and
jmp
cmpsb
aas
mov
cmpl
add
jbe
push
test
hlt
out
fsubp
xchg
adc
cmp
add
sbb
test
cmc
ss
mov
cmp
std
adc
mov
cmp
sbb
cld
pop
pop
push
push
loop
movsb
pop
xchg
cmpsl
cltd
cmpsb
or
in
sbb
sbb
sbb
mov
int
cld
or
jo
bound
lret
add
push
enter
icebp
mov
jmp
int
adcb
icebp
jg
out
push
stc
ffree
sahf
and
pop
rclb
mov
imul
es
jg
negl
mov
push
dec
aam
in
jl
push
mov
mulb
xor
stc
clc
jecxz
pop
sub
cmp
cwtl
stos
push
sbb
insl
sbb
ret
inc
loop
jnp
or
ljmp
inc
inc
aas
adc
lahf
push
bound
mov
movsl
or
incl
xor
push
mov
insl
popa
push
idivb
enter
jmp
push
out
cmp
test
scas
lret
jg
sbb
sbbb
jbe
jno
fdivp
addb
sub
out
mov
and
sub
xchg
dec
push
repz
test
inc
pop
jae
sub
push
jge
pop
inc
dec
mov
lds
cmpsl
mov
std
push
push
sub
and
addr16
cmp
fsubr
roll
bound
call
sbb
sbb
in
push
mov
adc
jnp
negb
xor
sbb
into
push
cmp
ret
mov
leave
cli
xor
xor
mov
in
or
out
aaa
outsl
mov
xorl
nop
test
ret
jmp
jne
lahf
cmp
test
arpl
loopne
sub
shlb
addr16
inc
movsb
xchg
in
aad
jne
ds
scas
pop
loope
jae
sub
inc
insb
scas
aas
mov
xor
jae
fwait
add
or
mov
adc
xchg
mov
outsb
push
mov
ja
push
xor
jp
mov
sub
add
sub
movsl
imul
xchg
cwtl
dec
sbb
jns
xchg
roll
sbb
flds
mov
jns
and
dec
in
pop
mov
into
in
inc
lret
sbb
mov
mov
dec
nop
push
nop
stc
test
in
dec
in
jle
mov
mov
mov
sbb
inc
inc
dec
shll
mov
or
in
mov
mov
imull
cmp
inc
dec
mov
imul
pop
hlt
cmp
aas
xor
jne
push
xchg
or
sub
adcl
ljmp
and
js
fs
repnz
mov
pop
out
mov
mov
sti
std
add
push
pop
mov
push
stc
xlat
push
cmp
jge
xchg
push
insl
call
xchg
mov
inc
dec
repnz
test
push
ds
push
add
mov
jne
das
repz
jae
clc
add
rorl
js
adc
push
dec
shlb
mov
mov
rclb
ljmp
les
neg
aas
add
int
in
cmpsb
popf
cmp
js
je
xchg
and
iret
aad
cmp
jecxz
xchg
mov
pop
mov
cmp
mov
push
in
inc
pop
sbb
sub
push
add
sub
xor
inc
imul
push
loope
adc
fadds
loope
push
sti
insl
enter
ret
push
pushf
or
ljmp
mov
jne
bound
jns
mov
jl
sub
jge
dec
push
push
xlat
gs
imul
outsb
cs
shll
cmp
push
add
outsl
int3
adc
in
push
popa
inc
xchg
lret
enter
jge,pt
cmp
adc
jb
mov
shll
mov
cwtl
sub
push
pushf
int3
insl
sub
push
xlat
lods
push
clc
sbb
ret
lea
or
adc
ss
sbb
mov
idivb
sub
ljmp
add
mov
popf
call
aam
dec
mov
dec
loop
jne
iret
mov
fs
bound
scas
bound
adc
adc
adc
xchg
jl
pusha
sub
jne
mov
add
in
rcll
dec
mov
mov
pop
xchg
or
push
aas
mov
push
hlt
cmc
sub
in
in
mov
push
lods
jno
iret
mov
test
pop
inc
cwtl
jo
cmp
cmp
pavgw
mov
pop
mov
and
outsb
cwtl
mov
mov
ja
insb
mov
sbb
push
xor
out
fstps
inc
lds
rorl
stos
push
call
xor
iret
aam
lods
jnp
mov
fdivl
inc
mov
mov
daa
sbb
push
gs
mov
xor
and
lods
cmp
dec
adc
pop
jns
jnp
fsubrl
dec
sub
in
bound
stos
mov
or
lds
fsubrl
dec
mov
add
mov
and
movsb
lock
sbb
pop
sbb
loop
rolb
mov
dec
push
mov
jle
pop
xor
adc
imul
ja
cmp
cmp
lcall
dec
ljmp
int
movsl
ret
or
jle
sub
xchg
call
test
iret
or
pop
xchg
hlt
cmpsb
cmp
dec
sub
xchg
pusha
adc
stos
add
lock
xchg
pop
cmp
xorb
pop
and
push
les
sub
gs
test
mov
filds
and
dec
xchg
jl
icebp
inc
mov
inc
das
xchg
mov
push
pop
push
jno
insb
sbb
cmc
mov
mov
mov
popa
xor
add
pusha
jnp
aas
add
adc
push
mov
shlb
fdivl
es
das
pop
clc
pop
and
dec
mov
bound
in
cltd
pop
ja
xchg
sub
sub
dec
mov
les
insl
hlt
aaa
pop
cmp
psubd
mov
lret
cmp
dec
pop
add
ja
fnstsw
outsb
adc
inc
sbb
out
add
and
inc
je
jno
pop
mov
mov
pushf
std
mov
add
insb
cmpl
test
cmpsl
push
fld
out
xchg
lahf
sub
nop
rcr
dec
jnp
or
sbb
mov
int
outsb
mov
dec
insl
xorl
and
xchg
repz
dec
add
jp
push
data16
mov
mov
stos
imul
push
jno
fsincos
cltd
mov
jp
imul
int3
push
lods
pop
hlt
push
paddusb
arpl
or
shlb
aam
hlt
fwait
ljmp
mov
in
adc
jns
xchg
movsl
jno
repz
pop
jl
loope
xor
repz
mov
stc
fnsave
push
xor
inc
xchg
test
jnp
ljmp
xor
in
popa
mull
jbe
jle
mov
sub
lea
mov
xchg
push
stos
jmp
cmp
aaa
mov
and
mov
mov
es
cmpsb
sbb
add
dec
imul
push
aam
inc
fmuls
mov
iret
inc
imul
fisttpl
out
mov
pop
jmp
xchg
loopne
pop
jno
outsl
inc
mov
push
hlt
xchg
push
cmc
fwait
xchg
das
aam
cmc
or
adc
and
push
xor
pushf
fsubs
fcomps
lret
in
dec
loop
std
fstpl
lds
popf
adc
mov
mov
test
jp
fadds
cmpxchg
shl
sub
inc
ja
movsl
sbb
xor
hlt
mov
push
jne
leave
loopne
sub
mov
jmp
mov
fimull
test
xchg
mov
insb
jge
in
add
mov
add
cli
xchg
test
jo
and
aaa
push
stos
mov
cmp
clc
test
popf
imul
mov
dec
clc
push
mov
add
or
jae
add
call
jbe
xchg
pop
sbb
out
pop
movsl
ret
test
push
xchg
hlt
and
sub
aas
test
or
xor
iret
dec
inc
mov
mov
rcll
mov
xor
or
pop
test
out
dec
mov
jmp
push
sbb
push
pop
push
jb
dec
fwait
lret
mov
test
rcll
and
mov
xor
cmc
dec
popf
shlb
dec
stc
repz
dec
mov
pop
push
rclw
sub
stos
js
cld
mov
int3
lea
mov
insl
outsb
push
cmp
cmpsl
dec
call
mov
sub
arpl
xchg
lds
es
ds
adc
or
filds
in
aam
popa
addr16
sarl
mov
sarl
cmp
div
dec
xor
lcall
and
xor
and
pop
mov
sbb
andb
add
mov
xchg
sbb
and
mov
sub
int
ret
lcall
mov
xchg
sbbb
aaa
inc
xchg
ficoms
dec
sti
cmc
push
pop
dec
mov
add
xchg
add
je
sub
push
xchg
or
addr16
repz
or
sbb
repnz
cld
cmp
xchg
cli
dec
or
push
cwtl
ror
pop
jae
cmp
jno
pop
sub
out
jno
aad
xchg
add
sub
in
call
sti
cld
aaa
mov
sub
and
ss
mov
fwait
and
jbe
cmp
pop
pop
and
and
and
sbb
adcl
jl
fdivrl
je
ret
dec
iret
push
mov
js
push
ficoms
push
mov
sub
aaa
rorl
cmp
adcl
scas
sub
lods
mov
movl
add
sahf
jle
mov
fcompl
sub
cmc
je
popw
jmp
mov
inc
rcr
jle
in
xchg
or
or
mov
test
outsb
lods
addb
bound
sub
fstpt
in
jge
inc
sbb
lds
out
cmp
cmp
and
mov
pop
push
jb
mov
stos
or
lahf
lret
xchg
ret
adc
imul
push
test
movsl
sub
fdivs
repnz
adc
or
nop
insl
orl
mov
fbstp
sub
adc
sahf
nop
xor
fbld
xor
fdivrs
out
cltd
xchg
cmpsb
jecxz
fld
into
movsb
movsl
add
ja
enter
fcmove
sahf
or
outsb
or
push
ds
inc
add
xchg
inc
mov
in
out
aaa
ret
sub
add
pop
xor
fdiv
adc
in
mov
sbb
cmp
ss
pusha
mov
lds
data16
ljmp
cwtl
fstpt
adc
cmp
mov
ljmp
test
xor
shrl
push
cmc
jae
es
lds
xchg
jb
xchg
jge
push
pop
xor
imul
bound
mov
roll
jge
repz
jg
mov
movsb
inc
insl
into
cmpsb
mov
aam
push
ss
aam
or
push
mov
sti
jg
push
inc
test
pop
pop
pop
xlat
jno
cmpsb
fstp
js
test
jbe
sub
nop
push
cmp
pop
mov
xchg
lock
mull
andl
sbb
insb
xor
or
xor
fimuls
push
sbb
shrl
mov
jne
mov
lock
xchg
cmp
cmp
cmp
mov
sbb
out
and
inc
in
and
or
ds
jns
sbb
clc
jle
fwait
sbb
les
mov
xor
add
cmp
das
call
std
push
test
mov
sub
xchg
stos
cltd
mull
jp
xchg
fwait
orb
fisttps
aad
xchg
addr16
setbe
xor
rclb
mov
dec
add
stos
pop
add
add
popa
int
dec
cli
stc
mov
add
push
lahf
xor
adc
scas
adc
aas
nop
mov
out
call
fistl
sub
ja
jbe
cmp
adc
insb
xchg
pop
cltd
lret
push
ret
sti
xchg
cmp
fnstcw
push
insb
jl
lods
pop
mov
mov
daa
cmp
shlb
mov
inc
in
lds
stc
test
mov
pop
xor
cmp
jmp
je
adc
arpl
outsl
stos
sub
fisttpl
mov
cwtl
in
xchg
fnstcw
dec
xlat
filds
sarb
cs
test
or
pop
jl
add
jecxz
jl
fucomi
cmp
cltd
cmp
popf
mov
aaa
rcrb
push
ror
ret
mov
push
mov
sbbb
dec
push
cltd
jge
sbb
mov
adc
lods
mov
or
insb
bswap
arpl
xchg
loop
jmp
push
cli
xchg
push
push
xchg
push
push
sbb
mov
imul
mov
sub
ljmp
fnstcw
hlt
mov
inc
mov
and
das
cmc
pop
movsb
repz
in
mov
xchg
orl
repnz
fs
jle
xor
mov
adc
insl
mov
xchg
cli
or
aas
push
test
addr16
dec
test
xor
inc
mov
clc
inc
aas
jl
mov
pop
sub
popa
xchg
mov
jecxz
rcrl
filds
or
or
test
jo
cwtl
adc
xchg
dec
sbb
ja
dec
subl
mov
cmc
aaa
clc
push
movsl
aam
sbb
cld
push
adc
outsl
pop
sbb
mov
ja
popf
add
mov
lock
mov
inc
icebp
enter
jne
inc
or
in
test
sub
scas
fs
in
mov
sbb
and
add
inc
adc
sub
addb
int3
ljmp
lret
out
xlat
in
je
loope
dec
or
in
push
jecxz
mov
mov
mov
subb
repz
nop
pop
lods
cmpsl
jae
leave
jle
mov
cmc
push
in
pop
fsts
in
add
ret
call
jmp
stos
dec
xchg
adcl
inc
mov
add
push
pusha
sbb
cmp
lss
mov
insb
mull
xor
test
dec
jmp
or
pushf
repz
jo
imul
adc
cmc
lahf
or
jmp
stc
mov
std
xchg
jnp
cli
xchg
das
fcomps
div
xchg
fstl
cmpsb
imul
sbb
push
mov
xchg
sbb
hlt
or
out
jg
cmp
pop
negl
push
dec
cs
adc
pop
aad
cmp
dec
daa
jns
mov
xor
adc
jno
push
jge
push
mov
gs
inc
adc
and
pop
dec
add
and
jae
sti
loopne
ret
jg
pop
dec
lock
mov
repz
inc
stos
jns
in
pushf
hlt
test
into
or
cmp
mov
stc
clc
iret
lahf
xlat
inc
push
icebp
add
test
and
mov
mov
mov
addb
les
lods
and
push
mov
daa
xchg
mov
int
lret
add
push
inc
in
test
cmp
push
shlb
mov
hlt
dec
pop
cmp
adc
push
out
and
xchg
int
dec
sub
lret
or
push
mov
cmp
bound
lods
push
rcrl
int3
iret
jbe
mov
push
leave
out
sbb
mov
and
mov
push
sarb
in
hlt
push
movsb
cmc
fistpl
sbb
movsl
cmpsl
inc
sbb
mov
jge
lret
xor
movsl
test
mov
sahf
mov
xchg
mov
movl
sub
sbb
xor
xor
repnz
std
mov
clc
js
mov
or
xchg
movsb
mov
cli
int
les
push
push
shrb
xor
inc
xchg
xchg
imul
push
shrb
push
pop
inc
in
out
iret
in
repz
test
sbb
lea
fcompl
movsb
push
push
or
and
rorb
adcl
cmp
adc
loop
mov
jnp
push
mov
adc
jbe
inc
and
and
push
scas
sub
sbb
sub
enter
jg
pop
and
mov
mov
jge
mov
in
mov
fists
push
mov
lea
in
das
cmp
outsb
lahf
mov
fwait
and
dec
sti
dec
mov
aad
xchg
xchg
es
jbe
icebp
dec
inc
pop
in
pop
lods
adc
dec
int
fildll
leave
pop
test
and
and
or
scas
sub
outsb
cli
sbb
enter
fisubrs
outsb
popl
jmp
cld
inc
cmp
packsswb
sbb
sub
pop
imul
mov
dec
push
fcompl
fwait
mov
ret
jecxz
dec
sbb
xchg
rolb
mov
fwait
xchg
dec
inc
lahf
pop
pop
loop
xchg
in
push
sbb
es
iret
in
lret
out
mov
loopne
sub
or
jge
push
shll
cmp
mov
filds
out
shlb
movb
in
dec
jl
idivl
mov
adc
cmc
mov
loop
mov
and
lcall
push
dec
stos
sub
leave
dec
cwtl
mov
push
or
fstl
aad
xorb
adc
jne
mov
sti
repnz
dec
cmpsl
data16
xlat
pusha
mov
pop
test
mov
lret
pop
pop
mov
mov
lods
divl
inc
jo
jbe
out
fildll
pop
in
les
lret
mov
xchg
cmp
lahf
jmp
add
cwtl
stc
bound
pop
aam
rorl
pushf
xor
push
sti
ljmp
loop
std
cmpps
push
add
cli
mov
mov
mov
xor
adc
icebp
lea
pop
into
cmp
cltd
mov
and
pop
imul
dec
jge
int3
push
pop
pop
jnp
lret
or
ror
xor
fwait
int3
pop
repz
stos
cmpsl
test
xchg
mov
inc
pop
push
adc
xor
jnp
outsl
sti
adc
or
push
pop
pop
sbb
sbb
mov
rorl
add
cmp
lods
pusha
andl
fwait
ds
add
inc
gs
cmp
outsl
mov
jge
inc
xchg
cld
cmp
xor
roll
inc
mov
add
daa
cmp
push
out
dec
test
cmp
dec
mov
lods
jbe
lahf
in
mov
jo
add
jecxz
test
add
pop
mov
int
pmuludq
xor
andb
mov
push
xchg
outsb
inc
adc
aam
scas
pop
dec
mov
and
dec
pushf
dec
das
jns
adc
pop
shlb
inc
mov
xlat
xchg
out
mov
fidivrs
adc
adc
sarl
orl
xchg
sub
pusha
push
pushf
cmpsb
mov
ret
pop
cmp
mov
inc
push
push
repz
addr16
adcb
push
inc
push
jg
aam
stc
das
and
lret
repz
xor
lea
cld
fldl
mov
rcl
adc
scas
andb
push
mov
mov
dec
fcmovne
ss
lcall
daa
inc
mov
mov
ffreep
push
stos
subl
je
pop
or
imul
or
xor
mov
cmp
pop
adc
rcr
fidivl
mov
addr16
or
mov
mov
adc
lahf
add
jp
mov
xchg
adc
cmp
pop
pop
inc
sti
sbb
pop
pop
fistps
jecxz
incl
hlt
and
pop
scas
cmp
mov
cmpsb
stc
and
ja
cli
dec
aad
push
out
loopne
bswap
jp
dec
and
push
jne
pop
insb
pop
fs
pop
push
inc
imul
in
loopne
sbb
dec
add
fistpll
in
jmp
pop
mov
or
xchg
rorl
pop
out
jb
mov
cmpsb
push
dec
imul
pop
icebp
push
jnp
sbb
cmpsb
mov
notl
fnstsw
push
sti
ljmp
add
jle
sbb
xor
mov
cmc
in
data16
sub
incl
dec
xchg
into
lea
sub
xchg
sub
addr16
adc
jge
push
or
out
addb
rcrl
insl
shrl
cmp
aad
add
fsubr
inc
aas
mov
pop
and
sub
inc
mov
cld
pop
jo
divb
fimull
or
rorb
pusha
pushf
mov
in
jno
jle
pop
lret
push
outsl
mov
loopne
push
mov
xor
jbe
fstpt
xchg
cld
lret
movl
dec
push
jecxz
aad
pop
popf
sbb
adcl
pop
jecxz
js
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
adc
ret
push
sub
push
push
imul
push
insl
jmp
jmp
mov
pop
or
inc
xchg
and
pop
jae
test
pop
xchg
scas
mov
xor
outsb
mov
cmpsb
cwtl
mov
mov
inc
loop
or
scas
cmp
stc
push
pop
mov
arpl
mov
mov
or
jge
out
shr
int
movl
fiadds
pop
xchg
cmc
mov
clc
adc
lock
scas
mov
mov
loop
inc
cwtl
aam
scas
push
inc
sub
mov
mov
in
js
pop
or
gs
xchg
aas
repnz
les
subl
loopne
sarb
adc
imul
pop
aas
imul
cmp
push
and
sub
pop
cmp
aam
scas
stos
fdivr
sub
xchg
or
cmpsl
imull
in
cmp
push
xchg
roll
popl
rol
jbe
jl
icebp
sbb
cmp
test
idivl
orl
or
mov
stos
aad
mov
nop
sti
jmp
daa
or
lock
popa
sub
sbb
ss
orb
cmpsb
ret
fs
subl
dec
in
xor
pusha
fsubrl
mov
push
inc
lahf
sbb
or
jg
out
or
dec
jecxz
lock
fnstcw
sub
fstpt
in
push
pop
test
mov
and
int3
int
xchg
int
lea
sbb
cmp
je
add
mov
xchg
outsb
dec
xchg
call
stc
mov
es
call
rcrb
push
mov
jb
lea
loopne
mov
push
cmp
arpl
lcall
cmpsl
ljmp
jp
sbb
dec
outsl
xchg
and
movsb
in
stos
add
shr
pushf
scas
std
mov
dec
into
lret
adc
or
pop
pop
dec
aaa
dec
pop
icebp
nop
shrl
push
pop
jmp
imul
vpaddw
mov
mov
dec
outsl
or
insl
ljmp
repz
leave
lods
add
adc
fimuls
inc
or
pop
sbb
ja
push
and
insb
sub
xchg
scas
popf
push
iret
xlat
cmc
xor
mov
cmpsl
mov
test
stos
push
imul
call
or
xchg
iret
int
andl
ror
pop
mov
iret
popa
out
ret
packuswb
adc
js
outsl
pop
mov
mov
rorl
dec
xchg
sub
sahf
jmp
xor
mov
outsb
cmp
ds
popf
pop
test
jg
cs
leave
test
cmp
icebp
aas
sti
cwtl
leave
push
out
push
push
shl
fisttpll
test
sub
aaa
and
pop
xor
pusha
jmp
testl
ret
xor
rcrl
mov
scas
fidivrs
roll
dec
sahf
out
jp
jns
add
push
xchg
bswap
jp
repz
insb
mov
jne
add
rcrb
fnstsw
dec
in
sbb
mov
cmp
adc
cmp
iret
mov
enter
out
xlat
mov
or
sbb
imul
stc
push
sub
pop
adc
and
lret
loop
sub
stos
cmp
cmp
inc
dec
pop
repz
pop
cmp
call
jp
mov
pop
xchg
std
mov
hlt
or
dec
pop
repz
adc
fdivrl
cmc
pop
fisubs
daa
imul
ret
in
jmp
cmp
data16
fnstsw
scas
pushf
mov
fs
les
inc
cmpsl
cmp
xor
or
fistl
xchg
cs
addr16
test
xchg
shll
dec
and
les
pop
cmpsl
add
mov
adc
adc
pop
shll
into
jle
push
lret
dec
mov
mov
fildll
fimuls
xor
pop
lret
jbe
or
scas
addr16
icebp
fndisi(8087
push
mov
repz
test
in
fsubl
push
xchg
add
or
pop
mov
clc
mov
sub
shl
insb
push
jbe
xchg
push
fld
loope
jno
arpl
mov
testl
or
push
push
pushf
loopne
cmp
pop
xor
xchg
or
cmp
pop
xor
pop
dec
push
jecxz
bound
movsl
icebp
sbb
or
xor
xor
mov
sbb
sbb
xchg
push
sub
insl
repz
cltd
xchg
gs
pop
mov
xlat
jecxz
clc
sbb
push
add
lods
js
mov
add
ljmp
call
lds
out
nop
dec
shrb
int
mov
clc
mov
icebp
add
inc
jae
xchg
jg
cld
or
inc
cltd
inc
mov
jo
loop
stc
or
test
mov
xchg
test
dec
xchg
cmpsb
int
and
aaa
jnp
mov
dec
jne
cmc
cmc
mov
sbb
xchg
test
fmull
or
stos
sbb
pushf
ljmp
rorl
pop
lds
pop
test
popf
jns
add
jp
out
shrl
xchg
cltd
clc
je
loope
js
jne
das
insl
xor
pusha
fmuls
or
adc
in
mov
fistpl
lods
mov
cld
push
push
xor
jo
pop
xchg
test
scas
hlt
cld
imul
push
push
icebp
cmp
jns
jmp
add
mov
push
rclb
adc
xor
lock
adc
pop
add
lods
shll
jmp
xor
xchg
insl
cmovae
and
xor
adc
test
popa
mov
test
push
lods
faddl
scas
xor
fidivrl
or
popl
pop
jp
add
xchg
add
mov
jno
mov
cs
mov
das
in
xor
xchg
iret
jmp
inc
hlt
cli
ret
pop
xchg
cwtl
in
mov
movsl
cmp
cmp
cs
in
stc
ja
sub
out
fs
add
std
jns
leave
cmpsb
lahf
bnd
jne
sub
lret
dec
fwait
movsb
mov
mov
mov
in
mov
inc
cld
or
sbb
jno
movsb
push
pop
lea
xor
lds
pop
mov
mov
mov
xchg
push
push
lret
or
pop
cmp
jecxz
subb
lret
out
pushf
shl
pop
and
orb
cmpsl
daa
cmp
es
sbb
xor
xor
fdivs
sbb
jle
aad
nop
pop
cmp
jl
fwait
daa
das
sub
lock
xor
push
mov
hlt
stos
loopne
ljmp
cltd
aas
push
adc
and
push
xor
xlat
pop
pop
xchg
movsb
sub
jg
adcb
cmovge
ret
pop
add
xor
lds
mov
fwait
xchg
push
mov
movsl
nop
inc
mov
push
sahf
cwtl
enter
push
das
fbstp
popf
in
mov
ss
in
sbb
jb
shrb
xor
add
in
xchg
adc
data16
popa
adc
ss
add
jmp
or
insl
xchg
ss
dec
insl
filds
xchg
adc
pop
or
xor
movsb
scas
cltd
sti
dec
aad
mov
lock
dec
xchg
pusha
sub
fnstcw
mov
lods
shr
cmovno
mov
in
jecxz
mull
cmp
sub
mov
jo
mov
ja
ss
cltd
xlat
cmp
loop
insl
js
mov
inc
daa
and
in
push
mov
or
pop
sub
pushl
sub
repnz
pop
sahf
xor
js
add
mov
add
pushl
mov
sahf
mov
adc
rcl
xor
sbb
mov
add
scas
enter
sbb
pop
add
gs
stc
mull
pop
divl
xchg
dec
or
outsb
pop
idivl
pop
loopne
push
fsubrl
inc
lea
insb
inc
cmp
or
aas
sarb
adcl
xchg
movsl
repz
enter
mov
mov
std
pop
xor
lds
mov
and
sbb
neg
xchg
jl
pop
lods
test
xorl
insb
lahf
mov
xor
lods
push
xlat
lods
jns
sub
sub
push
xchg
inc
pop
ljmp
jl
mov
out
shll
pop
inc
adc
adc
mov
test
ret
mov
push
mov
insb
mov
or
pop
adc
fadds
adc
dec
outsb
mov
out
je
or
fnstsw
add
inc
lods
stos
dec
mov
inc
jecxz
cmp
dec
leave
sar
add
shrl
wrmsr
sbb
cmp
lahf
cmpsb
push
sbb
dec
pop
shll
sub
int3
inc
push
inc
lds
int3
lods
mov
call
and
dec
dec
lods
add
push
rcll
daa
std
jo
and
mov
out
sub
rcrb
cwtl
jae
cmpsl
test
add
mov
or
inc
std
ds
les
imul
out
repnz
fs
fildll
xchg
out
ret
adc
enter
fadds
dec
dec
pop
dec
jne
dec
popa
pop
push
sub
adc
cmp
jp
mov
es
lods
push
andb
out
ljmp
arpl
xor
sbb
sub
pop
cmp
mov
or
jae
pop
addr16
int
lahf
stos
inc
aaa
call
add
repnz
mov
cmp
sub
xor
xor
fimull
and
addr16
js
lahf
xor
test
and
scas
cmp
cmc
lods
push
mov
aaa
out
xchg
and
ja
int3
mov
sub
int
flds
ds
jne
lds
in
add
ds
in
pop
fcmovnb
out
jecxz
and
xorl
mov
inc
pop
in
cs
adc
incb
cmp
fstps
xchg
sub
mov
xchg
sbb
shrl
les
push
das
xlat
outsb
add
adc
outsl
mov
xchg
adc
xor
sbb
mov
jne
add
mov
cs
mov
mov
stc
rcr
mov
add
negb
iret
mov
mov
lret
or
dec
test
push
shlb
mov
jle
gs
mov
mov
push
mov
jne
rcl
ss
inc
jb
aas
in
or
mov
xchg
jns
test
dec
ret
fs
push
in
jecxz
movswl
aaa
outsb
ret
mov
test
dec
int3
out
idivb
add
sub
sub
jbe
or
or
xchg
fiadds
pop
push
and
add
dec
pushf
pop
push
xchg
sub
mov
lock
sbb
xchg
xlat
pop
dec
mov
xor
adc
jp
adc
xor
test
in
mov
jmp
in
adc
bound
mov
lahf
add
sarb
pop
enter
adc
andb
bound
arpl
dec
and
in
mov
aaa
iret
push
hlt
cmp
std
js
mov
cmp
mov
adc
xchg
repz
aas
inc
fistl
out
mov
sub
dec
int3
setg
test
mov
cs
mov
shl
call
xchg
lret
pushf
cmpsb
mov
push
xchg
stos
aaa
loopne
mov
xor
pop
jmp
add
xor
ret
pop
ds
sahf
and
mov
add
imul
leave
xchg
sub
data16
clc
ja
pop
cmp
and
subb
popf
lods
addl
lock
mov
dec
pop
movsb
mov
jp
mov
jbe
cmp
or
xchg
adc
mov
inc
sbb
xchg
mov
ss
sbb
or
inc
jb
mov
mov
or
inc
push
xor
jo
sub
ds
push
lret
dec
adcl
xchg
into
cmp
loope
pop
mov
stos
lea
jb
fs
pop
pop
mov
or
xor
loope
pop
add
sbb
cmc
jge
pop
pop
pusha
pushf
push
pop
ja
or
adc
mov
mov
mov
scas
dec
jae
jae
cmp
xchg
ret
bound
push
mov
pop
cmpsl
insl
push
push
pop
enter
lea
pop
adc
stos
into
cltd
das
in
int
hlt
ljmp
cld
rcl
xchg
mov
sbb
ja
into
xchg
popa
xor
pop
lods
pop
mov
ja
cmp
sbb
outsb
pop
aam
je
mov
and
and
cmp
iret
notl
fadds
rcr
out
dec
lods
jp
cmc
push
xchg
scas
test
js
jns
jne
mov
pop
sarb
ret
push
movsl
lock
dec
and
lret
sbb
and
and
clc
sbb
das
cmc
sahf
fidivrs
jmp
sbb
jno
cwtl
rcll
xchg
pushf
mov
stos
or
in
mov
pop
and
insb
mov
push
and
fldenv
mov
sub
insl
mov
in
aas
insb
or
cltd
cmpsl
je
jnp
xchg
mov
iret
repz
jmp
repz
std
mov
scas
lds
adc
enter
mov
out
pop
lret
imull
int
stos
cwtl
popa
jecxz
add
pushf
test
loopne
sbb
mov
adc
jle
xchg
das
leave
sub
lods
mov
ret
insl
xchg
inc
loope
loopne
jmp
or
push
aad
mov
pop
dec
xchg
pop
es
arpl
in
adc
push
mov
adc
test
xor
inc
inc
pop
sub
dec
lods
sub
and
or
repz
jne
pop
in
or
mov
rcrb
jge
cmpb
pop
pop
add
sbb
jne
fwait
inc
mov
loope
test
cmp
jmp
out
andl
aad
inc
scas
repnz
pop
jae
sbb
fwait
pop
jmp
imul
adc
pop
sub
jne
jl
enter
sub
sbb
or
lret
mov
outsl
in
jg
pushf
mov
pop
pop
insl
int
scas
roll
lock
xchg
adc
div
loope
loopne
pop
jns
and
fidivs
sti
pushf
inc
rcl
or
jno
or
test
jnp
fnstcw
pusha
frstor
fdivrs
push
mov
inc
add
loopne
enter
jae
insb
pop
rorl
fcoms
sti
data16
push
movsl
test
jb
jne
inc
cmp
pop
std
test
les
add
addl
ljmp
bound
shl
imul
inc
and
xchg
mov
cmc
hlt
jno
cmp
ds
push
or
adc
popf
loop
clc
fadds
jne
int
leave
pop
xchg
pushf
imul
das
and
mov
jb
pop
daa
daa
gs
jecxz
sub
popf
cwtl
sbb
sahf
xchg
test
sarb
and
mov
push
inc
xor
stc
ds
push
orb
sub
inc
loopne
jbe
data16
adc
mov
adc
jno
aad
mov
jle
lods
loope
fldcw
xchg
and
or
push
dec
sub
lds
push
mov
sub
pop
or
mov
dec
sahf
cs
mov
xor
pop
sub
mov
sbbb
enter
jae
add
iret
lret
ret
push
sub
adc
push
jecxz
movsl
dec
mov
lods
xchg
mov
xchg
pop
rorl
dec
dec
lahf
std
cmpsb
sub
pop
sahf
mov
movl
push
xchg
in
call
xor
jmp
js
mov
loopne
and
inc
aad
mov
call
mov
inc
icebp
push
ffree
pusha
mov
ja
sbb
jbe
add
and
in
mov
in
push
movsl
mov
dec
lock
xchg
in
sbb
push
aaa
in
iret
add
int3
cmp
pushf
add
mov
sbb
mov
push
rcrl
and
stc
rcrb
xchg
dec
and
dec
stos
in
stos
arpl
mov
icebp
push
mov
stos
in
ljmp
pushf
mov
pop
scas
out
scas
push
xchg
loop
mov
test
or
in
mov
out
rep
mov
nop
jbe
scas
add
sub
jmp
rcrb
or
dec
or
jae
shl
mov
adc
loope
mov
and
ja
add
dec
rcr
rorl
arpl
and
mov
pop
repnz
scas
jae
stc
jl
enter
clc
sub
push
xchg
mov
dec
or
pusha
fistps
stos
jmp
cmp
xor
in
mov
cld
loope
or
out
nop
lods
pusha
or
inc
push
bswap
push
add
sub
pop
jle
mov
or
popa
or
andl
js
mov
cld
mov
test
repz
mov
into
insb
ret
mov
dec
xor
ja
and
mov
pop
jb
je
xchg
xchg
add
mov
mov
movsb
dec
or
jmp
negl
mov
or
mov
cmp
pop
mov
sti
outsb
fdivp
pop
rcll
daa
dec
fcomps
addr16
adc
adc
and
mov
lret
or
lods
jnp
in
inc
xchg
push
into
stos
mov
mov
movsl
push
ljmp
inc
je
push
push
xchg
push
adc
and
fwait
inc
imul
sub
xor
call
adc
xchg
fwait
cld
and
ficoms
dec
popf
sahf
fmulp
sub
sbb
clc
mov
cld
add
je
test
aas
or
jns
out
inc
xchg
or
jae
mov
repnz
fwait
sbbb
fsubs
cmp
add
movsb
bound
mov
test
cmc
loop
mov
and
mov
lock
mov
or
clc
stc
mov
cmp
lret
dec
imull
mov
mov
xlat
dec
add
rclb
lods
les
inc
movsl
jno
mov
imul
call
dec
enter
xchg
sub
int
jae
mov
lret
addl
sti
add
incb
dec
ret
adc
jp
test
cmpl
filds
jle
inc
push
sub
jne
fsubrs
cmp
repnz
data16
pop
scas
testb
ret
negb
or
movsl
push
insl
xor
scas
shr
inc
cltd
cmpsb
loopne
xchg
fmul
cmpsl
pavgb
sbb
ja
leave
lock
sti
cwtl
and
sub
or
mov
pop
mov
loope
mov
setg
aam
sti
and
add
add
push
in
push
aas
push
and
push
pushw
cli
xor
dec
and
pop
shll
addr16
stos
jmp
jbe
or
cmp
rcrb
in
cli
lret
jns
pop
jmp
xor
pop
sub
cmp
push
ret
xorb
fiadds
push
les
dec
dec
daa
xor
insl
mov
ljmp
enter
push
pusha
and
cli
push
test
popa
jo
aam
fstps
sub
push
inc
aaa
data16
or
lcall
les
mov
pop
lret
sahf
sub
jecxz
inc
mov
pop
xchg
outsl
and
call
scas
pop
push
xchg
mov
jmp
add
pop
jp
std
pop
fs
fbld
pop
dec
jge
roll
repz
or
scas
ror
ljmp
int
jb
sbb
mov
push
jle
push
adc
ja
add
jae
cmpsb
fisttpl
dec
sbb
and
mov
cmpsl
mov
jae
dec
divl
sbb
dec
mov
xchg
add
adc
loope
lret
call
xor
call
cmp
inc
insb
cli
cli
stos
mov
fisubrs
jmp
or
sub
nop
adc
in
pop
stc
cmp
clc
arpl
loopne
mov
mov
jnp
adc
sbb
adc
or
bswap
push
pop
push
adc
inc
push
pop
sbb
push
xor
inc
movsl
int3
fstpt
cmp
add
aaa
mov
xor
adc
loopne
adc
xor
inc
js
cmpsl
cld
es
cld
orl
test
mov
adc
shr
cwtl
ss
and
mov
mov
iret
mov
cmpsb
xlat
ds
sbb
test
std
mov
testl
negb
fs
cmp
cmc
aas
insb
mov
sbb
add
pop
xchg
pop
or
jb
jnp
mov
pop
mov
shrl
test
loop
xor
in
add
sarl
mov
add
fsts
sbbb
popa
fs
icebp
repz
dec
and
leave
movsb
test
rcrb
sub
outsl
jne
inc
mov
mov
dec
xchg
mov
daa
lret
jg
imul
dec
pusha
fnstsw
xor
mov
fists
cmpl
cwtl
fimuls
mov
das
loop
test
xchg
inc
mov
mov
rcll
faddl
test
scas
cmpsl
or
sbb
jnp
inc
fidivl
je
and
mov
fmull
push
and
andb
repz
xor
in
fadds
in
push
xchg
push
ja
les
adc
dec
push
sbb
dec
aam
ss
je
ss
dec
mov
scas
push
loopne
lahf
fimuls
and
mov
cmp
loop
lahf
clc
xchg
pop
add
xchg
mov
sbb
mov
out
jl
xor
cmp
outsb
enter
arpl
inc
rclb
popa
leave
inc
sbb
mov
ds
in
cltd
addl
in
mov
ja
ret
test
js
movsl
das
xor
jl
pushf
mov
inc
dec
jae
mov
mov
cmpsl
repnz
in
enter
sbb
jecxz
inc
mov
ret
mov
cmp
insl
jmp
pop
inc
xchg
lahf
push
fistps
addl
test
leave
xchg
xchg
pop
popa
cltd
and
cmp
push
mov
jae
jge
sub
jg
lret
jp
ret
mov
sub
daa
aam
cs
iret
and
xchg
shll
into
pop
mov
aas
fs
shlb
adc
sbb
shrl
xchg
inc
in
pop
cmp
xchg
stos
push
and
jns
stc
test
lods
repz
adc
je
sbb
mov
sbb
cmpsb
scas
mov
and
inc
mov
leave
ret
sbb
xlat
mov
lret
rorl
pushf
pop
cmp
ficomps
in
mov
int3
dec
popa
enter
imul
sub
cmp
adc
push
mov
fildl
insb
dec
mov
adc
or
push
jae
adc
jb
stos
sub
js
sub
add
xchg
pop
mov
mov
push
es
push
pop
mov
add
stc
call
popl
in
jb
add
clc
in
sub
jmp
mov
mov
out
push
or
cmp
lods
pop
xchg
mov
fidivs
sahf
mul
mov
rcrl
sub
scas
loopne
push
xor
lds
sub
mov
xorl
mov
cvtdq2ps
iret
jns
and
xlat
aam
movsb
ret
hlt
push
or
push
scas
cmp
std
sbb
mov
add
icebp
cmc
enter
mov
adc
sti
ret
in
adc
testb
int3
sub
xchg
in
adc
pop
in
repnz
std
and
push
mov
jge
jmp
xlat
pop
jae
lds
xor
fidivrl
dec
push
pop
cmpsl
mov
sub
les
pusha
call
xchg
and
popa
rolb
mov
mov
movsl
push
lcall
loope
sbb
hlt
jle
dec
adc
cmpsb
mov
add
outsb
lock
push
sbb
xchg
insb
inc
mov
dec
outsb
mov
mov
jb
dec
xchg
jae
psubw
mov
add
xor
push
xchg
out
sti
call
in
push
add
cmc
imul
push
movl
orl
push
rcr
push
jns
pop
ja
int3
into
pop
popf
loope
mov
nop
pop
push
and
xchg
xchg
mov
pop
push
test
pop
cmp
push
cmpsb
mov
out
add
and
cmpsl
cmp
shlb
push
arpl
js
fistl
push
mov
scas
xchg
scas
dec
ret
jns
xchg
cld
movsl
cwtl
push
pop
jo
ficoms
cmpsb
add
flds
push
adc
outsb
mov
mov
ret
pop
or
xlat
mov
inc
arpl
inc
addr16
push
mov
fwait
mov
stc
add
pusha
cmp
or
add
call
add
es
jbe
and
mov
cmp
add
repnz
insb
push
mov
in
scas
add
pop
ds
ss
inc
int
rcrl
mov
jle
mov
or
test
mov
pop
xchg
test
cs
push
cmc
push
inc
xor
gs
sbb
mov
movsl
or
loop
repnz
clc
pop
stos
adc
testl
lcall
push
popa
mov
outsl
cmc
sbb
aas
ret
inc
mov
jnp
inc
fldenv
and
fs
dec
inc
jg
xorb
xor
inc
mov
in
sbb
inc
sbb
int
std
sub
push
mov
pop
cmp
mov
shlb
mov
push
mov
mov
inc
stos
inc
sub
xor
inc
insl
xchg
mov
cs
cmc
add
addb
sub
fcmovnbe
pusha
repz
aam
cltd
imul
sbb
into
scas
xor
xchg
mov
testb
xor
aaa
lret
sub
sub
xchg
cmp
or
in
je
sahf
mov
and
cltd
pop
ds
adc
pop
jne
or
jo
jle
test
xchg
into
sub
xor
imul
add
sbb
jns
pop
cld
push
cmpsb
pop
jle
cmp
and
xor
fstps
push
or
fcos
pop
stos
and
inc
add
test
icebp
lea
and
je
xchg
movsb
aas
add
insl
in
mov
add
fildll
sub
shll
stos
je
dec
lahf
mov
xchg
push
or
loopne
test
ljmp
arpl
inc
and
das
mov
int3
jmp
mov
clc
imul
sub
sbb
mov
mov
outsb
imul
lods
pop
ds
outsb
jo
mov
and
and
cmp
sbb
test
or
mov
test
dec
inc
cmp
dec
sarl
lock
xchg
add
out
out
dec
fnop
fwait
shrb
mov
out
sti
insl
jbe
mov
cmpsl
xchg
ljmp
lret
mov
pop
dec
jg
push
dec
imul
mov
in
push
add
pop
xor
stos
lods
pop
jnp
xor
cmp
add
jecxz
jmp
push
std
jae
outsl
roll
popa
mov
xor
pop
and
adc
test
cmp
jp
cli
sub
cmpsb
mov
pop
lods
xchg
mov
roll
inc
mov
repnz
nopl
push
adcl
insl
fsub
jns
sbb
into
into
outsb
mov
and
sahf
enter
inc
xor
pop
inc
push
fcompl
mov
popa
fs
ret
xchg
lret
sbb
inc
js
mov
adc
cs
outsb
sbb
repz
push
jno
idivb
lods
or
inc
lods
fcmovnu
cmpsl
adc
sub
fwait
arpl
sub
inc
cmp
orb
jbe
out
or
adc
pop
push
and
cltd
inc
xor
push
mov
dec
bound
xchg
inc
push
test
fbstp
shrb
mov
jmp
xor
sbb
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
outsb
aad
or
xchg
int
push
ficompl
or
jae
mov
lret
sahf
cmp
popa
loop
jecxz
repnz
adc
fwait
out
xchg
pop
rcrl
aam
sub
insl
pop
sarb
sbb
sbb
iret
jno
je
pop
nop
pop
jns
movsl
test
clc
jno
orl
loope
and
pop
sahf
add
dec
rep
xchg
add
sub
mov
fdivrl
mov
jb
dec
movsl
sbb
in
add
jmp
loopne
repz
sti
test
inc
pusha
dec
or
shll
leave
faddl
stc
adc
mov
sub
faddl
inc
fldt
jno,pt
sti
shrb
sbb
repnz
adc
xorl
dec
rorb
mov
icebp
rol
fs
dec
lret
xchg
or
fsubp
sbb
fadd
xchg
orl
cmp
sbb
xor
iret
mov
scas
lcall
xchg
push
pop
imul
mov
push
xor
ficompl
js
outsl
pop
dec
and
cmpl
dec
sub
mov
push
arpl
mov
push
mov
aad
bnd
mov
adc
xor
mov
adc
mov
xchg
fists
sub
ret
adc
or
fucomp
or
dec
pop
ss
stc
sbb
push
push
mulb
cs
pop
sahf
das
scas
aas
push
jnp
mov
pop
adc
jmp
loopne
mov
hlt
dec
jl
stc
inc
pop
pop
push
mov
sub
pushf
lahf
loop
inc
cltd
cmp
sbb
repz
xor
push
push
push
xchg
gs
aas
xchg
notl
int
adc
mov
adc
je
sub
scas
jp
mov
nop
pop
pop
mov
ja
pop
mov
mov
aad
pop
rcrb
sbb
out
pop
mov
enter
and
mov
sarb
in
mov
lret
mov
idivb
int3
dec
adc
imul
adc
inc
sahf
adc
cmp
lret
shll
mov
xor
shll
jmp
push
mov
cmc
stc
jl
cltd
in
push
lds
and
push
movsl
mov
xor
fstpl
cmp
loope
dec
adc
out
das
dec
xlat
int3
sub
dec
inc
icebp
bound
fucomi
cmpsb
mov
insl
and
pop
add
scas
mov
fbstp
scas
push
sub
dec
xor
fld
jge
mov
cs
sub
jnp
pop
push
sbb
shll
lcall
cmpsb
inc
scas
sbb
mov
mov
int3
dec
fiadds
cmp
jg
popf
bswap
mov
mov
inc
in
lods
insb
ds
inc
push
adc
iret
pop
fs
push
ds
out
jb
inc
incl
xchg
cmp
mov
loop
push
sub
add
icebp
xlat
pop
call
sbb
xor
loopne
scas
jg
loopne
popa
xor
test
lock
lcall
sbb
push
sub
sbb
mov
pop
or
mov
lods
push
mov
dec
sbb
pop
push
fldcw
sub
mov
push
add
inc
xchg
adc
pop
in
xchg
popf
ss
cmp
push
sarb
jns
lds
mov
jbe
push
addl
fiaddl
lea
pop
scas
xor
aas
hlt
shrb
mov
push
jno
aam
dec
leave
and
dec
and
pop
sbb
mov
popa
and
clc
mov
sub
scas
pop
out
mov
xor
int3
daa
jne
call
adc
mov
or
pop
mov
mov
push
sbb
in
repz
jecxz
sub
inc
mov
push
push
in
mov
insb
cmp
add
push
pop
xor
add
lret
cmpb
popf
add
mov
and
jns
or
out
push
push
and
mov
std
jb
decb
pop
dec
cmc
inc
or
push
xor
aas
inc
movsl
cltd
ds
adc
ret
push
add
lcall
cmp
out
cld
inc
mov
divl
jecxz
lods
fwait
imul
aam
js
roll
xchg
sbb
lds
adc
dec
test
jg
jecxz
cs
jg
mov
pushf
imul
jp
aad
jo
stos
xor
sbb
ljmp
inc
nop
mov
popf
int
orb
sbb
pop
push
std
pop
in
mov
lahf
cli
mov
lret
xor
fidivs
in
adc
fmuls
aad
lret
lock
jns
adc
sub
inc
mov
xchg
sub
ret
xchg
mov
add
jb
cmp
xchg
pop
mov
into
nop
xor
dec
movsb
mov
psadbw
mov
xchg
stos
xchg
repnz
movups
cmp
add
sub
fcoms
ret
push
mov
loope
icebp
dec
sub
inc
mov
jp
jl
push
pop
ljmp
jg
je
inc
jge
jae
or
sbb
mov
jmp
call
sarl
cs
mov
inc
mov
ss
or
mov
test
aam
adc
fistl
outsl
sbb
push
cmc
and
mov
iret
jae
ret
jne
shl
adc
inc
or
pop
or
out
popa
pop
cltd
mov
popf
jmp
xchg
cmp
or
repnz
loop
cli
and
clc
push
adc
subb
xchg
je
jae
jne
test
sbb
ljmp
movsb
cmp
mov
popf
test
hlt
out
stos
push
sub
cs
jnp
mov
cmpl
outsb
inc
push
add
packuswb
dec
push
push
xchg
xor
sti
sbb
dec
filds
push
fnsave
cs
pop
pop
call
xlat
add
das
fs
imul
inc
lret
sbb
and
movsb
mov
flds
xchg
scas
fwait
iret
xchg
sub
insb
jne
add
fwait
fs
mov
xor
lret
mov
inc
jo
ja
pop
mov
pop
sub
mov
fcom
adc
mov
pop
mov
adc
jp
add
subb
sub
out
mov
rorl
sbb
int
jae
sti
shll
mov
sbb
arpl
or
stos
pusha
out
insl
and
hlt
or
sti
repnz
add
xor
jae
pop
clc
cwtl
fneni(8087
mov
adc
and
loopne
sub
dec
inc
ljmpw
xor
xchg
jae
fidivs
bound
adc
in
push
dec
mov
and
or
out
adc
push
adc
ror
cmp
push
imul
mov
mov
loop
loopne
imul
in
ficompl
into
sub
dec
insb
insb
nop
xor
insb
mov
out
scas
fisttpl
mov
ret
loopne
dec
add
arpl
es
scas
enter
and
mov
and
or
popa
mov
xchg
jb
iret
jo
fstpl
dec
add
rolb
insl
cli
gs
jge
xchg
jno
xchg
add
aas
cwtl
jmp
fcomi
add
sub
xchg
or
xchg
pop
adc
jecxz
jne
jb
outsl
leave
inc
fnstcw
fs
stc
jl
pop
sub
push
and
mov
pop
mov
mov
fmull
xlat
pop
sbb
scas
push
fwait
pop
ret
fs
jle
fistpll
push
xchg
cld
cmpsb
jae
adc
mov
aad
int3
xchg
in
inc
mov
fldl
shlb
shlb
test
test
addr16
repnz
andb
add
inc
cmp
sbb
xor
jae
out
lcall
ret
fs
xor
push
mov
stos
adc
cmpsl
lret
ljmp
jnp
not
mov
inc
adc
jmp
lret
in
stos
jge
push
jne
test
xor
jae
lret
lods
fmul
icebp
lods
insl
or
xor
pop
jnp
mov
test
jg
mov
cmp
mov
jnp
popf
sbb
notb
push
inc
cmp
lods
je
adc
arpl
lds
into
or
stos
xor
jmp
test
iret
push
inc
es
or
int3
lahf
jo
push
mov
push
je
out
pop
pop
out
pop
xchg
mov
push
pusha
imul
add
add
out
fdivrl
adc
cmp
xor
in
sub
push
pop
adc
dec
pop
mov
add
push
inc
fst
sti
divl
testb
mov
imul
gs
in
rcl
les
jbe
xlat
add
mov
inc
ds
inc
jle
xchg
xchg
mov
insb
jg
mov
dec
mov
and
pop
xor
out
icebp
pop
idivl
aam
mov
jecxz
jg
pop
dec
xor
aam
aas
test
aaa
add
sti
ret
dec
cld
or
push
pop
repnz
loope
cmp
imul
lcall
les
add
push
es
mov
ret
mov
out
mov
pop
mov
shlb
faddl
jp
out
mov
xchg
imul
ror
roll
sbbl
and
incb
in
dec
je
mov
inc
pop
push
xchg
test
shlb
add
mov
push
ds
cmp
lret
xor
xchg
fdivs
jne
ret
mov
xor
sbb
out
push
dec
or
add
pusha
mov
gs
test
xor
mov
mov
push
fst
pop
gs
sub
push
pop
test
ret
xor
daa
jbe
jbe
jns
fwait
mov
pushf
outsb
nop
cmpsb
cwtl
clc
sahf
and
xchg
sbb
pop
scas
sub
add
int
pop
lock
cmp
repz
imul
ja
adc
shll
shll
pop
sub
es
clc
test
call
rolb
scas
rcrl
or
sbb
lock
mov
push
push
call
mov
or
or
test
outsb
pop
ja
add
loope
push
rol
or
ficoms
movsb
mov
fwait
movsb
aaa
pusha
orl
or
popf
mov
push
call
inc
xor
pop
aam
jae
imul
cmp
ds
movsb
mov
or
sbb
in
leave
xor
inc
push
popa
les
testl
adc
std
dec
push
insb
fsubrl
sbb
mov
insl
sbb
mov
xor
add
mov
cmp
lds
xchg
pop
aaa
pop
mov
mov
psubusb
shrl
xor
shrl
xchg
mov
fdivl
insb
cmp
les
xor
push
sub
dec
push
fwait
sub
or
stos
sti
out
shll
sbbl
dec
in
je
mov
int
iret
add
daa
push
push
dec
jo
mov
adc
mov
xor
inc
icebp
cltd
lods
pushf
mov
je
icebp
inc
js
jg
cwtl
enter
shl
add
mov
or
or
ss
sub
movsb
lods
inc
imul
cld
dec
mov
cmpsl
aaa
add
sbb
ds
push
dec
xlat
lods
jno
push
cld
lods
adc
adc
enter
ret
cli
or
mov
ret
stos
and
and
enter
mov
push
sbb
aam
xchg
inc
dec
sbb
in
std
nop
dec
ss
je
cmp
leave
xor
call
addr16
xchg
jp
cmpsl
andb
xor
pop
or
pop
sbbb
xchg
data16
mov
jmp
mov
mov
lds
pop
lock
sbb
mov
lahf
or
ss
mov
push
aas
int3
adc
pop
cltd
pop
xor
dec
mov
and
jmp
insl
pop
sub
adc
in
inc
stc
js
lods
out
mov
inc
test
cmc
xchg
sub
out
add
bound
cmpsb
sti
or
imul
pop
aaa
call
mov
add
sub
decb
dec
cmp
sbb
adc
mov
ret
adc
pop
xor
dec
inc
inc
sahf
mov
outsl
cld
push
xor
add
and
ljmp
lret
cmp
repz
and
aam
pop
sbb
stc
movsl
push
add
test
adc
in
cmp
dec
sahf
inc
pop
jne
mov
jl
data16
jmp
ja
or
or
adc
add
sub
mov
repz
sub
lret
inc
fst
sub
mov
lods
sbb
and
scas
jecxz
inc
jo
xchg
sarb
cld
mov
cmp
hlt
xchg
adc
popf
mov
inc
repz
mov
aas
cmp
mov
dec
dec
xor
flds
aas
dec
clc
xlat
ljmp
xorl
cmpsb
loope
repnz
sbb
jnp
sbb
fcmovne
pop
xchg
jbe
or
add
data16
gs
jbe
testb
in
test
inc
loope
mov
ret
add
gs
xor
pop
add
iret
sti
aaa
xor
movsl
xlat
jl
cmpsb
orl
orb
mov
pop
dec
inc
jl
add
mov
lea
data16
arpl
fnstcw
das
mov
enter
or
dec
loope
adc
jle
insl
stos
popf
pop
outsb
jecxz
aaa
sub
pop
sbb
cmp
fucomp
jmp
cmc
add
in
mov
inc
jnp
les
adc
cmp
xor
or
add
mov
jae
inc
adc
xor
lds
into
mov
popf
and
jno
lds
xlat
fdivrl
mov
sbb
movsl
lret
les
cld
mov
jo
lods
fwait
jge
push
dec
inc
sti
dec
mov
imul
movsl
push
add
push
test
push
sbb
ss
push
pusha
int
xor
mov
dec
aaa
test
cld
inc
loop
ds
cmp
pop
or
fldenv
xchg
push
aaa
lcall
aad
mov
rcr
xchg
add
dec
aaa
inc
roll
jg
test
lea
dec
dec
mov
shrb
shl
inc
pushl
mov
cs
adc
loopne
inc
dec
jge
or
push
fcmovnu
cltd
das
fisttps
das
push
mov
bnd
fstpt
jle
xchg
and
mov
jo
dec
ret
js
sbbl
pop
repnz
jg
ret
mov
xchg
sbb
inc
shrb
sbb
and
inc
cmpsl
aam
add
inc
mov
fs
push
and
popf
stos
shrl
xor
xchg
lea
jecxz
lods
lods
mov
jb
stos
mov
sub
mov
xor
mov
cltd
xchg
mov
add
and
mov
adc
out
push
push
outsb
dec
popa
cmp
test
int
stc
inc
push
dec
pop
loopne
shl
std
popl
out
lahf
cld
je
pop
ds
inc
stos
pop
and
ds
inc
ficoml
subb
fwait
and
popf
dec
lea
test
or
dec
rolb
xor
xchg
xchg
out
mov
cmp
mov
jl
adc
scas
ljmp
out
push
pop
in
movsb
insl
mov
insb
sub
test
add
sbb
dec
push
xchg
adc
cmpb
subl
and
sub
push
imul
pop
mov
fcomp
push
inc
mov
adc
push
jne
and
cmp
ss
movsb
addr16
movsl
jge
roll
jnp
xchg
inc
sub
mov
popa
mull
je
mov
lea
mov
jno
sub
sub
adc
notl
jle
outsb
jbe
or
out
subb
filds
subl
sbb
pop
cld
insl
pop
call
add
sahf
mov
push
xor
cltd
jmp
outsl
aas
sti
ret
jmp
mov
out
mov
out
test
insl
and
xchg
jno
orl
or
jnp
popl
fsubs
mov
jb
jg
out
outsl
xorb
pop
dec
out
imul
call
scas
inc
mov
mov
jmp
data16
push
dec
enter
xchg
repnz
sbb
imul
cltd
jb
cmp
in
push
aam
jae
mov
mov
cmp
cltd
push
lea
cltd
fildl
stos
cwtl
xchg
mov
push
xchg
inc
jecxz
xchg
pop
cmc
mov
xchg
sub
push
popf
scas
mov
lea
jns
pop
std
sub
xor
sbb
xchg
push
cltd
bound
into
adc
test
cmpsb
xor
dec
mov
adc
sahf
and
push
in
add
and
dec
sbb
sub
enter
insb
xor
mov
repnz
dec
sub
or
push
or
mov
stos
dec
xchg
add
outsl
push
notl
mov
mov
repz
push
cmp
mov
xchg
or
adc
dec
push
fstps
in
mov
adc
or
add
mov
sbb
nop
mov
ljmp
xchg
add
out
int3
and
fisubrs
arpl
std
pop
out
cmp
sbb
cmp
stos
out
test
pop
leave
outsb
daa
fidivl
xor
add
push
and
gs
mov
push
jnp
cmp
jo
mov
cmp
sbb
mov
xchg
fcmove
cmc
cmpsl
mov
repnz
imul
mov
adc
fsubl
mov
push
mov
push
lret
in
sbb
pop
jl
icebp
push
sbb
cli
neg
dec
and
das
or
movsb
enter
inc
sar
push
xchg
loopne
lret
xchg
out
jp
subb
mov
inc
out
mov
scas
xor
dec
rorl
out
jae
nop
scas
inc
cld
xlat
jl
ret
lahf
sbbl
das
dec
jno
repz
xchg
and
jnp
data16
daa
or
mov
jl
movsb
mov
das
mov
pusha
adc
testb
jge
and
repz
or
andb
mov
in
and
pop
adc
nop
es
out
cmpsb
push
popa
cld
lock
cs
lret
pop
stos
and
cmp
and
cmp
outsl
in
ficompl
inc
mov
cli
ficomps
mov
lods
orl
mov
mov
xchg
xchg
mov
and
cwtl
push
jge
mov
cmp
inc
inc
fs
sbbl
outsb
push
sbb
lods
es
mov
cli
test
xchg
enter
cmp
sbb
sub
data16
cmp
jno
sbb
movsb
shrl
jno
pop
inc
add
sbb
in
mov
adc
sub
lea
jecxz
push
jne
sbbb
mov
mov
rcrb
xchg
add
push
cmp
lret
jecxz
sti
cmp
cli
rolb
es
inc
ljmp
dec
mov
mov
pop
xchg
in
cwtl
add
and
jp
sub
jmp
sbb
xchg
or
mov
dec
xor
push
mov
loopne
call
sub
bound
lods
nop
lods
dec
mov
iret
fwait
ss
jg
ljmp
xor
or
cli
push
out
popa
jno
dec
fstp
jg
andb
dec
addr16
cmp
popf
jbe
mov
scas
pop
test
mov
push
sti
mov
or
pop
dec
cmpsb
cmpsl
dec
mov
inc
fidivs
mov
xlat
sub
jbe
or
sbb
xchg
dec
aaa
jg
lcall
push
cmpsb
repnz
aaa
pop
xor
lret
ret
arpl
ds
xor
hlt
cli
sbb
xor
sub
jle
jb
lock
fucomp
stos
js
adc
push
mov
scas
jmp
repnz
ss
negl
leave
aas
adc
arpl
ss
out
repz
int3
or
cmp
mov
les
fs
pop
ljmp
arpl
adc
lcall
push
mov
jmp
pcmpeqb
pop
mov
jp
lds
push
sbb
sbb
das
push
cs
jecxz
test
fiaddl
add
ss
jge
loopne
xor
and
mov
xorl
jns
and
xchg
aam
jne
jmp
ja
push
sbb
data16
loop
mov
jne
rorl
mov
daa
mov
clc
sub
jbe
add
pop
popf
das
lret
jle
sub
mov
out
je
imul
xlat
add
imul
lock
jle
push
aas
jne
lock
stos
dec
push
out
iret
out
insl
adc
idivl
js
jle
ljmp
push
xor
sbb
rcll
adc
cmpl
inc
ret
inc
test
mov
outsb
xchg
sub
xchg
testb
sbb
push
push
jecxz
out
add
mov
aaa
sub
gs
push
mov
mov
clc
push
jne
ds
and
dec
add
xlat
fstpt
shlb
adc
je
push
hlt
ljmp
repnz
lods
adc
pop
fcoml
lcall
and
sbb
out
lock
pop
push
shrb
in
inc
and
xlat
and
pop
mov
mov
orl
push
xchg
jo
nop
cmc
jle
or
cli
pop
sub
fwait
pop
xor
stc
xlat
sub
fisttpl
je
inc
daa
sub
adc
xchg
xor
and
mov
call
dec
xor
and
and
jns
mov
xchg
cmp
icebp
cmpsb
jb
mov
aad
inc
cmp
xchg
scas
and
adc
and
cmp
loopne
out
fwait
insl
daa
fiaddl
sbb
lret
mov
cwtl
movsb
jbe
jnp
xor
shlw
push
scas
jg
pop
fmull
out
sbb
sub
outsb
les
out
sbb
arpl
adc
xor
inc
adc
mov
fs
xor
sub
into
sub
jae
jbe
sahf
sbb
inc
push
adc
outsb
and
jbe
inc
jp
mov
hlt
test
jl
insl
dec
lret
jp
add
push
pop
pop
adc
out
jnp
and
and
cli
xchg
lahf
cmp
cmp
call
sbb
add
jae
scas
inc
sbb
pop
add
pusha
fwait
jg
in
inc
jge
cmp
push
add
add
jge
mov
sahf
iret
cmpsl
push
push
inc
jbe
inc
push
push
push
dec
ja
xor
aad
mov
jp
ja
lret
adc
lret
jle
lock
push
xor
cli
pusha
icebp
shll
and
popa
dec
cmpsb
orl
nop
out
sub
dec
mov
push
push
push
hlt
and
xchg
adc
xchg
sbbl
fnstcw
cmp
xchg
in
stos
xchg
jecxz
add
imul
insl
dec
pop
lds
pavgw
movb
lock
pop
insb
movsb
jp
xchg
leave
js
sbb
insl
and
aam
test
mov
test
pusha
pop
mov
clc
sbb
enter
jmp
test
test
jge
dec
or
rcll
xchg
leave
imul
jg
imul
push
mov
inc
jb
mov
lret
mov
movsb
fucomi
in
sub
jg
jbe
or
lahf
add
aaa
or
jae
enter
cmp
mov
je
sbb
cmp
loop
fists
cmp
test
pushl
pop
adc
jmp
stc
fldcw
push
incb
jle
add
imul
flds
int3
pop
push
mov
aam
into
inc
insb
loop
mov
sbb
cmp
insb
scas
pcmpgtb
punpckhdq
push
cmp
jl
fnsave
or
pop
mov
inc
fnstsw
cmp
jno
inc
int3
out
cmpsl
test
adc
mov
aam
mov
inc
movsl
push
aad
jmp
clc
mov
outsl
sar
mov
mov
push
cmp
lods
pop
bound
jl
lret
xchg
cmp
cmp
jae
out
or
jne
jne
int3
ss
fidivrs
and
je
cmp
sahf
or
fnstenv
insl
inc
pushw
es
out
sbb
mov
or
nop
cmove
mov
movsb
lcall
xor
pop
mull
dec
jns
sub
cmp
outsl
push
dec
pop
hlt
std
inc
test
adc
jne
mov
popf
cs
mov
pop
leave
nop
pop
stos
adc
push
xchg
xchg
lock
inc
popa
jmp
xorl
mov
or
dec
mov
inc
push
and
sbb
mov
testb
sbb
test
mov
out
lret
arpl
jge
dec
dec
cmp
and
push
std
fbld
ljmp
out
adc
push
rcl
push
lods
outsb
dec
cmp
repz
repz
dec
ficoml
mov
ljmp
ja
add
cmp
add
cmp
mulb
add
jmp
mov
pusha
lods
cmp
xchg
sub
insb
je
imul
sbb
sub
test
sbb
and
sbbl
push
rol
jp
push
notb
or
add
push
fldcw
xor
cmp
outsb
jne
xchg
in
xchg
cmpxchg
xor
sti
shlb
out
stc
les
call
pop
pop
mov
aaa
stc
pop
repz
fsubrl
and
mov
clc
mov
fucom
fwait
lret
int
cmpsb
jbe
dec
pop
popa
push
mov
rorb
insl
push
orb
push
add
fdivrs
nop
sub
sbb
jb
pop
fimull
ret
mov
loop
mov
sub
or
icebp
test
xchg
out
popf
loop
fs
mov
das
adc
mov
bound
sbb
add
or
je
add
add
dec
cmpsb
data16
std
lea
push
pop
mov
push
xchg
sub
jl
jo
xchg
pop
repz
jbe
orl
int3
push
mov
daa
lods
or
sbbb
testl
pop
jge
sar
idivb
xor
repz
loope
sarl
mov
xchg
jo
dec
inc
js
les
cwtl
leave
jg
mov
sbb
lahf
jbe
cwtl
insl
stos
bound
clc
xor
and
push
push
fistpll
mov
adc
cltd
cmp
xor
mulb
dec
jb
cld
jecxz
add
mov
test
stc
push
fs
push
cmp
insl
cmp
ret
roll
std
pop
and
pinsrw
rcll
dec
imul
pop
je
cltd
fidivrs
mov
fldcw
das
push
dec
xchg
sbb
js
hlt
es
adc
add
sbb
sbb
xchg
cld
dec
lods
ret
das
and
hlt
push
aaa
mov
push
jle
jg
jge
les
mov
add
scas
inc
dec
popf
inc
jecxz
jg
sbb
sti
mov
and
wbinvd
cmc
clc
pushf
mov
xor
and
mov
cmp
ret
jecxz
insb
insl
fistpll
imul
sbb
mov
inc
pop
mov
xor
push
int
fsubl
push
dec
xor
dec
jecxz
add
adc
push
mov
mov
pop
push
nop
out
es
dec
mov
pop
push
lcall
sub
push
je
push
mov
js
js
mov
idivl
pushf
stos
mov
in
sbb
adcl
fmuls
inc
cmp
daa
addr16
clc
xor
repnz
push
push
adc
dec
and
lea
outsl
xor
pop
or
sub
pushl
orb
mov
sbbl
dec
cmp
sbb
test
or
jmp
push
adc
xchg
fs
jae
test
sbb
sub
mov
mov
in
je
mov
or
jmp
push
decl
add
jo
pop
dec
adc
push
idiv
pop
out
sub
add
or
push
repnz
bound
insb
lods
pushf
hlt
sahf
jno
jecxz
in
pusha
cmpb
inc
test
sahf
mov
fldt
sub
pop
mov
fcoml
lcall
cltd
adc
mov
fwait
mov
mov
and
les
push
sbb
stc
inc
hlt
push
sbbl
aad
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
std
je
pop
add
call
push
push
and
inc
or
mov
arpl
stos
cmp
loope
bound
and
scas
jle
adc
pop
out
pop
jae
push
pop
in
loopne
fimull
xchg
add
fnsave
dec
adc
cmpsb
dec
sbb
sarb
out
pop
addr16
mov
pop
push
pushf
sbb
push
hlt
stc
repz
or
cld
mov
std
jbe
sbb
mov
rol
lret
stos
addb
aad
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
