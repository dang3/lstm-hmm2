push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
addr16
pop
jl
adc
and
popa
pusha
mov
insb
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
jae
gs
dec
mov
fwait
pushf
cmpsl
rcl
scas
add
xor
cmp
jb
push
jp
cwtl
xchg
add
adc
adc
add
out
repz
stc
in
xor
xchg
into
mov
ss
repnz
daa
or
popf
mov
leave
cmp
and
mov
jl
pop
rorb
loopne
lock
mov
outsb
shll
jb
in
adc
jnp
cmpsb
fst
cmp
loope
inc
add
xchg
stos
add
lods
js
mov
and
sub
mov
pop
lods
fs
jp
jle
pop
cmpsl
std
or
pop
add
data16
jecxz
pop
test
cltd
jno
pop
pop
inc
add
push
pop
test
or
rcl
popw
sub
xlat
gs
xor
shrl
aas
aam
int3
mov
in
mov
into
and
xor
add
pop
sub
push
aam
fdivrl
adc
rcr
sbb
ficoms
mov
pop
out
jbe
jae,pt
test
std
mov
mov
xor
xor
or
fdivrl
dec
fwait
leave
test
jae
add
push
imul
mov
xor
dec
mov
pop
int3
lcall
inc
loop
mov
inc
daa
out
mov
cmp
les
movsb
flds
shlb
fisubs
xchg
fwait
sbb
and
and
ljmp
movsl
repnz
push
int3
mov
mov
xor
ret
dec
jb
xchg
fs
insb
clc
push
jns
xor
jge
repz
xor
sbb
sub
pop
mov
ja
xchg
lock
jno
sub
dec
sub
fisttps
jne
xor
mov
sub
fdivrs
mov
scas
add
ss
cli
mov
addr16
and
stc
pop
adc
xchg
fcmovu
dec
loop
fisubs
jge
imul
jno
pop
sub
ret
shrl
inc
sbb
jl
xchg
bound
sbb
mov
sub
aam
out
icebp
pop
dec
fsubl
ljmp
popf
dec
gs
out
shlb
test
and
pop
leave
pop
and
lahf
outsb
pop
sarb
xchg
cmc
or
lea
dec
shrb
pop
movsb
loop
jae
mov
jae
das
xor
je
push
xchg
in
imul
lret
aam
bound
popf
je
push
jno
lods
adc
int3
int
pop
lods
sahf
cmp
sbb
sahf
loopne,pn
jns
cmp
pop
jns
sub
adc
pushf
repz
clc
cmp
jge
outsl
sub
pop
les
cmpsb
int3
fstpl
inc
xor
ret
ret
dec
inc
mov
fldcw
and
xchg
shl
cmp
stos
add
xchg
lods
xor
ss
cmp
lret
push
shl
data16
hlt
and
cs
pop
or
dec
imul
sahf
add
adc
popf
cmp
mov
jle
sbb
xor
rclb
out
ss
gs
outsl
repnz
or
jae
xor
daa
cmp
cmc
push
and
movsl
movsb
pop
adc
adc
xchg
mov
les
shlb
insb
ja
push
popa
rolb
testb
iret
movsl
add
sbb
ds
out
enter
pop
lahf
mov
fcomi
ja
mov
arpl
dec
xchg
xchg
fadds
xchg
jmp
jbe
les
sarl
jne
jmp
mov
pop
cmp
mov
jge
push
inc
jg
mov
pop
int
fs
mov
cmp
ja
push
mov
repnz
xchg
js
stos
ret
ds
mov
fstl
sarb
inc
mov
fwait
cmp
lods
mov
testb
mov
cmp
xchg
xor
adcl
mov
mov
cltd
xchg
pop
lcall
mov
lods
cmp
mov
dec
jb
mov
lcall
rcl
roll
xchg
out
mov
jecxz
lahf
jge
adc
pop
fsubrl
roll
mov
ret
push
mov
or
push
cld
jl
bound
in
outsl
pushf
sub
dec
adc
clc
leave
in
adc
push
mov
popf
je
push
lret
stos
int
mov
xlat
xor
lea
mov
sahf
mov
fldenv
imul
or
js
pushl
inc
mov
jns
imul
inc
or
add
sub
or
ss
mov
add
dec
enter
dec
mov
les
nop
out
into
mov
cltd
and
pop
pusha
push
imul
push
lds
add
adc
addr16
testb
mov
popf
fidivl
mov
pusha
pop
jp
sbb
addb
test
lock
sbbb
adc
daa
jge
mov
cs
or
mov
cmp
sub
sub
inc
dec
dec
jb
gs
dec
add
mov
pop
test
lock
mov
cmpsl
bound
xlat
mov
imul
pop
adc
and
lock
mov
inc
lods
mov
mull
mov
imul
jnp
movsl
mov
scas
je
fst
fsubs
inc
insl
xor
add
out
inc
mov
and
dec
mov
push
shr
jno
add
jne
outsl
fistl
xor
mov
sub
or
jecxz
daa
xlat
pusha
xor
xor
sar
mov
scas
leave
bound
mov
pop
addr16
in
mov
ja
lahf
inc
push
push
adcl
push
das
xchg
cmp
inc
loope
jp
push
nop
outsb
bound
mov
and
sbb
adc
test
mov
sub
mov
out
dec
or
test
idivl
mov
add
fldenv
xchg
inc
addr16
jnp
incb
xchg
insb
mov
mov
popa
ss
shrb
dec
xchg
sahf
out
shlb
repnz
jl
pop
lea
subl
push
imul
sti
lahf
rolb
insb
mov
lods
cmp
mov
pop
data16
sbb
hlt
mov
pop
mov
mov
scas
mov
mov
sar
sub
cmp
mov
popa
xor
popf
roll
enter
das
sbb
cmp
sub
mov
hlt
test
enter
mov
and
sti
sbb
leave
pop
xor
mov
stos
sbbl
inc
hlt
jmp
rolb
pop
ret
push
add
js
xor
fildll
je
sarl
push
pop
ss
in
dec
shl
hlt
inc
loope
jle
lock
add
stc
inc
xchg
test
cltd
es
cmc
dec
stc
jnp
sarb
in
sub
or
mov
inc
xchg
test
dec
xorb
stc
inc
popa
fwait
jbe
or
cs
arpl
push
jns
mov
enter
outsl
pop
orl
out
pushl
rorl
dec
and
pop
jns
je
orb
dec
testl
mov
imul
cmp
addr16
mov
inc
int
push
shlb
inc
add
inc
mov
lods
lods
push
mov
dec
mov
xor
xchg
inc
icebp
add
pop
mov
dec
and
pop
cli
jo
dec
push
repnz
add
mov
mov
in
pushf
dec
pop
xchg
push
lods
push
int
xor
pusha
ficomps
adc
mov
add
push
xchg
divb
xchg
xor
cmp
sbb
xor
gs
test
and
push
pop
test
jmp
mov
adc
cmpl
xchg
jb
jecxz
shrl
mov
xor
push
aad
lea
iret
xor
xchg
lods
pop
out
in
mov
test
xchg
imul
sete
push
lods
add
lcall
stos
pusha
cmp
fs
jnp
adc
aas
icebp
jl
ret
imul
fisubrs
rolb
push
push
or
lods
add
outsl
or
pusha
pusha
cmp
pop
sahf
jp
dec
and
adc
mov
pop
or
pop
in
mov
daa
es
push
call
sub
testl
push
arpl
dec
out
lret
cmp
lret
arpl
lahf
or
test
mov
addr16
cwtl
pop
mov
xor
outsb
adc
test
xchg
shr
int
shrl
lods
out
jle
lret
call
xorb
mov
icebp
adc
pop
fs
mov
aas
mov
cmc
bound
sbb
stc
lret
aad
xor
outsl
pop
das
icebp
mov
aam
push
mov
fbld
pop
mov
and
fsts
insl
mov
daa
pop
pop
cmp
xor
mov
test
inc
cltd
mov
mov
push
shl
aam
cmp
mov
jl
pop
pop
in
fisubrl
add
jmp
xor
incl
sub
add
xor
jg
dec
popa
push
push
mov
cmpsb
ret
imul
std
sbb
imul
xor
cmp
pop
sbb
aas
fs
incl
clc
mov
xchg
adc
scas
stos
mov
cmp
ds
mov
loope
and
jmp
scas
jb
ret
rcll
mov
inc
push
jns
imul
jb
bound
in
pop
dec
jp
sbb
adc
mov
rclb
insb
shrl
xor
mov
ljmp
fldt
fcmovnb
push
pop
jl
repz
add
hlt
mov
icebp
mov
lods
addl
sub
adc
testb
fs
aas
pusha
inc
in
mov
ljmp
out
lods
and
js
push
push
in
lods
adc
adc
xchg
pusha
sub
stc
stc
roll
xorb
push
ret
icebp
bound
mov
xor
fimuls
xchg
sahf
pushf
jle
lods
dec
push
dec
push
and
in
sti
leave
mov
pop
into
je
add
ja
cmpsb
dec
popf
xchg
mov
outsl
and
jl
add
or
test
je
loopne
push
insl
or
and
xorb
loop
std
add
nop
pushl
push
testb
jae
and
movsl
mov
lods
imul
or
outsl
push
rorl
lds
push
icebp
lods
sbb
js
addb
fnstsw
ss
sbb
add
popf
adc
negl
lcall
js
movl
repnz
lret
inc
scas
stos
loop
mov
sbb
jmp
nop
jl
outsb
daa
pop
cmp
fisubl
mov
pop
add
push
push
add
mov
sbb
mov
add
xor
add
sub
cli
ss
and
int3
aas
push
cmc
dec
imul
es
push
inc
mov
int
add
xor
lcall
jmp
inc
cmpsl
je
mov
and
mov
mov
inc
push
push
pop
insl
mov
pop
inc
lret
lret
inc
mov
inc
stos
leave
cwtl
cltd
insl
pop
cmpsl
aad
das
fs
push
mov
mov
in
pusha
mov
mov
rcrl
call
lcall
and
outsl
aad
cli
test
sub
and
fnsave
mov
clc
mov
add
sbb
mov
pop
dec
testb
adc
mov
xor
add
mov
push
movsl
sbb
lahf
fistps
add
fs
in
mov
sbb
mov
cmpb
mov
and
aad
mov
push
aad
fsubl
das
stos
std
jp
addr16
pop
out
mov
push
outsl
pop
std
xchg
xchg
test
sbb
stc
sbb
mov
loopne
int3
jbe
adc
daa
dec
popa
call
rcl
sub
push
fisttps
push
sub
imul
sarl
hlt
test
mov
adc
inc
xorl
roll
pop
xor
push
das
repz
test
mov
rorl
mov
fdivs
jp
cltd
and
push
cli
aaa
cmpb
adc
nop
cwtl
jns
mov
lock
and
dec
jnp
dec
push
out
or
xchg
dec
cli
push
sbb
ljmp
out
outsb
mov
push
jge
add
xor
sbb
mov
daa
lock
stos
cli
iret
add
mov
fisubl
or
xchg
xor
imul
inc
in
popf
es
pop
lock
test
mov
mov
sub
movsb
inc
mov
inc
addb
or
add
push
ljmp
xchg
inc
mov
push
clc
in
sbb
inc
inc
jp
shll
fdivl
ret
clc
sbb
aad
push
out
pinsrw
pop
push
rorl
push
mov
addb
shrb
ret
sbb
jo
sbb
xchg
into
enter
imull
in
sub
into
mov
xor
in
pop
mov
add
dec
jbe
cltd
enter
jg
imul
ljmp
mov
aaa
sub
jo
dec
jbe
xor
ja
addr16
mov
call
mov
mov
sahf
xchg
and
adc
adc
sbb
fcmove
mov
add
das
mov
xchg
fwait
mov
stc
sahf
jecxz
cmp
xchg
dec
xchg
xor
xorb
fsubr
daa
xor
mov
jbe
or
fs
std
leave
outsb
andl
fsubrl
lods
scas
sldt
jecxz
andl
sbb
adc
fnsave
cli
decl
in
imul
pop
mov
sub
ret
rcll
mov
sub
cwtl
loopne
cmp
stos
outsb
das
nopl
mov
popf
hlt
popf
shlb
std
push
pop
dec
or
sahf
pop
shlb
clc
fwait
repz
test
lods
ret
cwtl
inc
mov
lret
lock
mov
and
mov
or
lahf
sub
mov
sub
lds
jns
sub
push
into
xchg
push
mov
das
and
cmp
fists
mov
ret
call
or
loope
push
jl
mov
out
dec
in
rcll
fs
mov
test
into
scas
out
out
xlat
movsl
push
cld
insb
add
cmc
add
ds
and
int
push
pop
mov
jle
pop
jnp
leave
cmp
lcall
jge
shr
dec
shl
sbb
dec
popf
test
cmpsl
jbe
xchg
mov
jne
xor
pop
mov
popa
sbb
cld
ret
ja
std
rorb
mov
sbb
aaa
jo
jmp
in
repnz
push
and
iret
mov
dec
scas
imul
sbb
sub
sbb
sub
and
dec
sti
cmp
and
nop
rclb
and
cmc
nop
xchg
popf
xor
inc
cmp
fmuls
ds
push
fmuls
test
ljmp
scas
mov
ficompl
pop
pop
mov
sbb
in
push
loopne
ja
aaa
jne
out
inc
fbstp
mov
aas
sti
inc
mov
lret
and
jns
out
popa
push
sbb
push
cmpb
aas
cmp
fmull
sub
subl
int3
fs
mov
pop
add
push
bound
jecxz
rorl
inc
test
and
push
mov
cltd
es
fmuls
fisttpl
xor
out
fcmovnbe
subb
cmp
leavew
and
test
jl
push
scas
ja
je
jmp
cmp
mov
ds
xchg
ret
nop
cmpsb
xor
pusha
lds
inc
loopne
adc
and
out
repz
dec
popf
push
push
addr16
subb
xor
icebp
repnz
add
shl
out
push
cmp
cmp
es
sbb
pop
mov
mov
mov
or
ret
repz
mov
mov
adc
testl
out
or
repnz
in
not
dec
rorl
adc
negl
pop
xlat
mov
and
sbb
into
in
cmp
fiaddl
adc
push
out
mov
mov
push
sti
decl
and
pop
mov
iret
mov
pop
mov
hlt
pop
dec
cmpsb
mov
pop
push
cmp
fstl
inc
movsb
rcr
push
out
jne
lea
stos
or
outsb
fdivs
bound
jle
mov
das
cwtl
lods
in
out
cmc
pusha
fcomp
rcrb
xor
push
or
and
scas
addr16
aas
in
pop
jnp
xchg
sbb
adc
sub
bound
pop
sbb
push
jbe
xchg
repnz
jb
mov
out
xchg
push
sbb
xor
xchg
js
pop
and
and
out
lcall
lock
add
bound
testl
clc
bound
in
rep
mov
adc
outsl
jo
inc
cmp
xchg
inc
jns
mov
fsubrs
jae
fstps
popl
jo
push
pop
dec
loop
pop
push
orl
dec
push
add
sahf
lds
outsb
int3
test
mov
dec
xchg
repnz
js
pop
loope
adc
and
aad
shll
xchg
adc
mov
fmull
sti
ljmp
cmp
push
xchg
stc
out
pop
notb
sbb
inc
sti
pop
out
mov
and
stos
lods
jg
cli
or
imul
push
arpl
stc
jbe,pn
decb
xor
pop
sub
cli
loopne
or
mov
loope
ljmp
or
xor
sti
lcall
jle
pop
in
xlat
sub
dec
pop
adc
sub
sbb
cmp
mov
mov
pop
jns
arpl
push
in
lds
push
adc
lock
or
push
push
sub
xchg
stos
jo
pop
leave
or
mov
ret
imul
xor
or
lods
adc
sti
in
xor
test
imul
es
orl
and
mov
addb
lret
and
faddl
decb
or
pushf
mov
rorb
lock
push
sbb
arpl
pop
shld
cmp
xorl
sbb
shl
and
dec
das
mov
dec
out
mov
ljmp
fildll
sub
push
shlb
loopne
pop
lahf
and
xchg
jmp
loopne
fldcw
mov
mov
icebp
data16
and
xor
jae
and
mov
out
orl
xlat
pop
cwtl
jmp
scas
jno
fldt
into
clc
scas
out
sarb
js
or
cmc
in
pop
adc
lds
int3
fdivrs
and
xchg
shlb
push
or
jbe
pop
mov
and
inc
fsubs
fsub
sub
jge
loop
out
int3
or
movsl
std
pop
jne
aad
fs
lret
jbe
rcl
sahf
dec
cld
insl
dec
imul
daa
lea
subb
ret
jecxz
cld
cs
lods
push
sub
or
adc
inc
and
mov
lcall
aad
movb
sub
mov
and
jns
cmp
cmp
lea
pop
idivl
mov
mov
inc
daa
cli
mov
pop
mov
mov
inc
and
lods
pop
inc
movsb
push
bound
push
and
push
inc
dec
aaa
mov
sub
clc
inc
jb
and
pop
sti
mov
hlt
sub
unpckhps
frstor
add
xlat
jp
ja
gs
ficompl
daa
test
les
and
or
mov
sti
push
mov
push
ror
mov
stc
mov
cld
mov
das
fmuls
jnp
inc
mov
fildll
pop
add
jb
inc
adc
dec
popa
mov
sbb
sti
push
mov
out
adc
xor
rcl
inc
xchg
mov
cli
adc
je
fidivrs
jl
inc
movsb
stos
adc
fucomp
int
adc
lock
imul
call
idivl
sub
xor
fists
jbe
pop
xor
push
int
arpl
mov
mov
cld
mov
push
mov
sub
shlb
mov
lcall
xorl
filds
fstps
ss
shll
test
ret
push
mov
and
jge
jo
stos
jmp
inc
xor
jmp
sub
cmp
mov
cld
jecxz
xorl
in
adc
cwtl
mov
mov
sub
pop
push
cmp
add
push
adc
out
mov
cmc
clc
popf
sub
pop
aam
xchg
mov
leave
stos
or
mov
xchg
inc
cld
shlb
xor
add
out
or
lahf
fwait
cltd
mov
push
out
and
imul
roll
jmp
aas
aam
in
cmp
xor
mov
jmp
jge
lods
xchg
stc
pop
sbb
in
decl
dec
aam
sbb
rcr
push
scas
fcmovnb
and
add
test
mov
gs
out
pop
xor
mov
mov
testb
adc
aad
fisubs
or
frstor
fimuls
ror
in
faddl
mov
popa
fsub
inc
and
dec
dec
adc
sbb
aas
test
shl
inc
mov
out
cld
jg
inc
add
inc
mov
xchg
rolb
jae
in
pusha
cmpsl
jbe
addl
dec
sahf
leave
scas
enter
cmp
xchg
lea
sub
or
sbb
dec
mov
idiv
pop
mov
lret
sbb
adc
fsubs
inc
sbb
lods
mov
loope
push
out
test
pop
nop
mov
inc
cmp
xchg
xor
cli
sub
dec
sbb
lahf
insb
nop
sbb
jo
dec
cltd
mov
xor
xchg
cmp
cmc
ss
xchg
pop
mov
push
mov
or
inc
test
mov
mov
mov
loop
xchg
int3
cmp
xchg
mov
loop
xor
lods
nop
enter
xchg
or
popf
imul
push
and
pop
pop
outsb
pop
cmp
jp
pop
into
push
dec
cmp
lock
adc
pop
ficoml
cld
dec
jo
adc
movsb
jnp
pop
sub
lds
adc
jo,pt
add
cmp
push
rol
push
mov
shll
sub
iret
lahf
add
inc
in
fisubl
fstpt
and
ret
shll
ja
add
xchg
pop
and
lcall
mov
std
repnz
mov
mov
pop
add
push
xor
out
cmp
pop
popf
sub
loop
popf
out
or
cmc
out
sbb
or
mov
stc
mov
dec
int3
xchg
adc
std
xchg
sbb
dec
mov
aad
test
push
and
int3
insb
fsubrs
shrb
in
lret
inc
enter
sbb
mov
ret
pop
sbb
push
push
ljmp
das
rcr
xor
adc
lods
xchg
xor
mov
aas
xchg
cmp
or
mov
push
push
mov
cmc
push
cld
cmpsl
mov
add
sub
pop
mov
sahf
rcrb
loop
lret
sbb
pop
adc
movsl
mov
test
xor
add
xchg
or
subl
addr16
shll
xor
push
xor
jp
dec
mov
inc
push
fisubl
sub
shlb
cmpsl
inc
cmp
jne
mov
adc
repnz
jno
dec
std
cmp
arpl
fwait
pop
insl
ja
cmpb
inc
sub
lret
push
test
cmpsb
sbb
bound
jae
xor
shl
inc
movsl
push
popa
push
movsb
lret
xchg
cld
jns
leave
mov
inc
push
mov
xchg
test
imul
adc
repz
arpl
sbb
xlat
mov
cs
stc
insb
or
addr16
xchg
and
rorl
subb
lock
cmp
sub
xchg
ss
in
loope
test
adcl
sub
adc
jb
push
xor
adc
bound
xor
rcl
pop
movl
xchg
pop
xchg
cmp
enter
sbb
outsl
out
rolb
lret
in
jl
ljmp
push
add
dec
fs
and
in
ror
lods
daa
mov
call
addr16
jg
out
push
hlt
scas
repz
clc
xor
pop
and
testb
imul
mov
out
cwtl
lods
lods
add
and
cltd
xchg
cli
sbb
leave
fistl
loope
cmpsl
push
movsb
imull
ffree
sarb
lcall
add
insl
out
inc
adc
mov
nop
jns
mov
dec
into
pop
jne
mov
mov
jo
cmpsb
das
ja
sub
lcall
popf
das
jne
pop
push
sub
xor
sti
and
pushf
cltd
pop
cltd
int3
jne
pushf
xor
insl
sub
or
data16
mov
outsb
int3
aam
ja
mov
arpl
iret
push
cli
std
adc
arpl
ds
fwait
jo
stos
jns
mov
mov
add
jb
xor
int3
stos
push
or
or
repz
shrl
into
daa
jbe
test
in
stc
cld
stos
pop
adc
jmp
cmp
dec
inc
dec
add
imul
mov
xchg
pop
ds
gs
mov
pop
inc
test
fcmovnb
mov
imul
and
adc
pop
pop
ss
add
xorb
pop
cmc
imul
out
shll
iret
push
mov
leave
mov
sbb
loopne
push
mov
sbb
xchg
fs
mov
jge
subb
dec
fnstcw
adc
shll
cmp
add
sbb
mov
mov
jne
clc
and
ficoms
or
jle
add
push
xchg
test
ljmp
push
fcoms
inc
push
adc
sbb
mov
lock
pop
ss
dec
fdivs
sbb
push
sti
ss
push
out
mov
mov
flds
mov
pop
fisttpl
pop
jnp
xchg
jno
daa
popa
fwait
push
pop
out
fists
cwtl
loopne
int3
mov
lret
neg
cs
leave
mov
push
imul
pop
int
sub
nop
push
pop
shlb
mov
cs
add
bound
adc
sahf
divb
sub
dec
movb
pop
mov
pop
xchg
push
xor
push
and
inc
adc
cmp
or
cmp
or
mov
add
cmp
pop
inc
popl
or
pop
mov
dec
mov
or
aam
fidivs
or
pop
in
sub
fmulp
inc
rcrb
or
push
fcoms
stos
sbb
shrb
cmp
stc
sbb
popa
loopne
pushf
inc
xchg
mov
xchg
in
push
push
cmp
pop
jecxz
jg
xchg
and
and
ret
xor
push
pushf
jne
adc
mov
push
lret
jae
mov
lods
fnstenv
jle
push
ds
push
jns
iret
pop
xor
lods
scas
ss
adc
repz
je
xchg
scas
ret
ja
test
mov
xor
lret
test
pop
xchg
mov
pusha
lock
movsb
and
aam
loope
mov
sbb
iret
xchg
clc
call
inc
lds
jecxz
dec
pop
test
mov
mov
jbe
jle
cld
loop
mov
pop
mov
lea
push
xchg
or
dec
lods
cmp
scas
stc
mov
sti
lcall
icebp
out
push
inc
mov
cwtl
test
jb
ficoms
ret
sbb
int
stos
mov
movsl
fcom
in
imul
add
or
das
gs
ljmp
mov
mov
daa
mov
and
mov
cmc
testb
adc
imul
jo
pop
mov
and
pop
aaa
xchg
sbb
pop
pop
xchg
in
cmp
adc
adcb
or
adc
mov
sbb
cmp
call
xor
sub
adc
bound
mov
sbb
xchg
mov
xchg
mov
xchg
cmc
push
mov
xchg
mov
hlt
movsb
pop
enter
add
int3
lods
mov
push
pop
leave
lods
cmpsb
shrb
adc
lcall
jmp
mov
sub
mov
es
outsb
incb
and
jb
and
inc
je
sub
fcoms
das
test
or
sub
loope
int
dec
pop
pop
or
or
mov
push
shlb
add
les
mov
rolb
flds
xlat
push
pushf
lds
xor
mov
adcl
lahf
shll
std
fwait
pop
jnp
sti
add
je
add
mov
minps
lret
shrb
pop
loop
cli
push
sub
adc
jne
sbb
scas
imul
lahf
stos
les
test
cmp
sti
nop
xchg
daa
psllw
jno
mov
jns
sub
stc
das
outsl
mov
sub
dec
ret
mov
idivw
cmpsb
stos
dec
fpatan
outsb
adc
jae
mov
or
sarb
fnsave
sahf
mov
cltd
or
xlat
ret
outsb
mov
fisubrs
cld
fadd
inc
inc
xchg
scas
mov
fisubrs
sbb
in
loopne
lds
testb
subb
test
jg,pn
or
add
insb
adc
in
mov
sub
int3
je
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
push
jp
xor
jl
dec
pop
jl
mov
push
fwait
mov
push
sbb
mov
jne
dec
or
inc
rol
sub
xor
aad
aas
jnp
das
cmp
inc
fsubs
adc
js
jl
rcrb
bound
lahf
jg
rcrb
push
add
sub
push
aad
jle
movsb
dec
adc
sahf
clc
cld
jb
mov
push
sbb
outsl
cmpsb
mov
cmp
clc
or
je
xlat
push
sbb
dec
xchg
push
mov
lods
sti
arpl
jnp
es
gs
daa
mov
or
enter
xchg
sbb
hlt
stos
push
inc
jp
pop
mov
pop
rorl
dec
dec
jecxz
sbb
cmp
sarl
xchg
out
mov
iret
push
mov
cmpsl
mov
mov
int
cmp
or
xlat
pop
or
push
int
mov
aas
sbb
sbb
or
addr16
pop
xor
adc
dec
lcall
adc
mov
pop
sarl
inc
rcrl
outsb
shl
push
jno
mov
pop
xor
cmp
ljmp
scas
shlb
cs
xchg
sbb
jmp
mov
imul
push
pusha
mov
jge
add
rorl
mov
and
daa
rolb
mov
dec
push
movsb
outsb
pop
sbb
dec
insl
out
lock
adc
aam
pop
in
dec
aaa
out
add
and
jle
or
bnd
movsl
int3
sbb
inc
out
andb
mov
fnstsw
push
lcall
and
cli
add
stos
sub
xchg
out
pop
cwtl
daa
mov
xchg
in
data16
pop
cltd
ss
add
mulb
pop
inc
mov
mov
repz
jl
sahf
xor
test
jle
sub
ret
rclb
xorl
inc
sub
shlb
cmpsl
add
and
push
adcl
testb
inc
repz
sbb
nop
cli
or
jae
out
iret
lds
sbb
dec
dec
jmp
mov
push
sub
lcall
hlt
call
loop
cli
dec
mov
push
push
es
in
test
mov
iret
pop
roll
test
dec
xchg
nop
mov
dec
cld
popa
cmp
adc
push
nop
mov
shrb
push
mov
mov
pop
fldcw
out
cmp
loop
mov
frstor
int
ret
adcl
adc
push
mov
lahf
fisttps
int
dec
inc
xchg
push
sbb
fisubl
lds
loopne
insb
jg
outsl
inc
fisttps
push
mov
dec
out
push
rolb
or
and
sbb
jmp
out
mov
dec
push
push
push
lods
sbb
xchg
mov
pop
cmp
push
sub
call
mov
addr16
jbe
jo
outsl
int
mov
fs
jbe
pop
in
movsb
push
pop
cmp
ret
inc
xor
xor
rcrb
push
xchg
and
and
xor
sbb
hlt
jecxz
lcall
push
jae
pop
scas
daa
icebp
dec
xchg
sarb
pop
pop
imul
addr16
mov
arpl
cmc
insb
jle
cmpsl
xchg
and
clc
in
jecxz
xchg
inc
sub
in
repz
mov
lea
cmp
pop
in
call
inc
popf
out
sar
test
ja
xor
mov
or
sbb
mov
int
adc
cmp
ljmp
movsb
add
out
es
sbb
inc
mov
mov
test
xchg
bound
popf
xor
leave
jae
out
xor
test
mov
mov
add
ret
lods
leave
mov
add
addb
loopne
push
cmp
fs
enter
xchg
mov
fistpll
mov
test
inc
arpl
loop
or
in
lahf
pop
lcall
xchg
aam
xchg
movsb
sub
cmp
xor
push
stos
and
sbb
fdivrl
or
out
mov
adc
hlt
lahf
cmp
mov
sarl
loopne
jmp
je
lods
xacquire
inc
dec
xchg
xor
xchg
bound
std
cmp
mov
in
int3
jns
adc
jnp
dec
cmp
test
pop
dec
enter
cld
icebp
dec
adc
test
cs
cmp
test
call
out
sahf
in
sbb
xor
cmp
push
mov
ds
test
mov
fmuls
out
mov
iret
call
xor
xchg
test
jg
stos
mov
mov
xchg
into
dec
int
or
aaa
aad
test
xchg
xlat
mov
cmp
mov
aam
retw
jnp
jb
outsl
cmp
fcmovu
add
fisubl
call
mov
inc
mov
push
mov
roll
test
lods
mov
movsl
dec
insb
or
jbe
fadds
lods
jp
mov
pop
ret
sbb
mov
or
and
jle
jb
or
jmp
mov
jbe
loop
jnp
fldenv
or
loopne
or
les
cmp
fists
cmpsl
andl
orb
xor
dec
jbe
push
mov
and
xchg
sub
aaa
fdivr
inc
push
xor
sbb
pusha
shll
sbb
dec
pop
scas
jno
mov
inc
and
insb
jb
cltd
push
hlt
or
adc
jecxz
push
xor
loope
adc
mov
rol
pop
insb
dec
xchg
add
inc
adc
jl
mov
xchg
leave
gs
dec
leave
icebp
mov
cld
addr16
aaa
mov
xchg
cmovno
sarb
adc
enter
add
lahf
inc
or
xor
push
cmc
scas
rorl
std
adc
testb
dec
dec
stc
sub
test
stos
xor
rorl
mov
stos
dec
or
lret
cmpsb
das
pop
fisubrs
or
fwait
push
push
xor
or
lods
ret
aaa
xchg
arpl
pop
jne
and
dec
jle
push
pop
mov
xchg
mov
sbb
mov
sbb
int
bound
ja
stos
hlt
lahf
add
cmp
repz
shll
cld
or
imul
jg
cmpsb
inc
jo
cmc
push
mov
mov
sub
lods
cmp
xchg
pushf
rorl
cld
mov
add
add
mov
movsb
cmp
fisubrs
push
cmp
icebp
jno
sub
dec
adc
subb
jp
aam
es
jno
lahf
js
mov
and
cs
push
push
test
loop
mov
mov
sar
stos
cmp
push
jne
dec
mov
call
hlt
std
jbe
add
cmp
ss
xlat
adc
jecxz
es
jmp
test
loopne
add
movsl
cmpsl
xchg
mov
push
in
add
sub
jb
push
aad
lea
rcl
aaa
xchg
pop
or
or
push
repnz
and
inc
ds
pop
jne
lock
fistpl
mov
out
lcall
std
mov
ss
insb
cltd
xchg
or
movsb
or
sbb
popf
fwait
scas
addl
add
sbb
adcl
cmp
popf
mov
or
mov
adc
cmpsl
pop
inc
aas
scas
xlat
xor
adc
fisubrl
jmp
mov
neg
push
test
pop
dec
inc
push
sub
cwtl
das
cmc
imul
pop
adc
xor
loope
test
fmul
mov
std
daa
mov
cmp
push
rcll
iret
mov
push
lock
jnp
rol
jl
adc
pop
cmp
jmp
mov
loop
or
jns
mov
aas
mov
fisttpl
in
outsl
fwait
shll
cmpsl
jl
jb
lret
cmp
mov
pop
jmp
sbb
mov
adcl
adc
ficompl
stc
ljmp
pop
mov
mov
les
loopne
sub
adc
loope
shl
sahf
cmpsl
mov
fucom
or
ret
push
les
pop
mov
pop
loopne
aas
or
push
sarl
hlt
xchg
repz
jb
jecxz
pop
pop
mov
movsl
sar
push
xchg
inc
lret
sub
div
mov
pop
pop
iret
push
lret
jb
fimull
mov
stos
addr16
lret
mov
loope
inc
pop
test
adc
lods
fsub
lds
or
inc
cltd
fxch
int3
cwtl
or
jae
cld
push
push
mov
imul
add
or
jnp
sbb
and
and
xchg
pop
movl
loope
pusha
dec
adc
cmp
arpl
sbb
mov
pushf
xlat
fimuls
popf
fwait
jne
fwait
les
outsl
sbb
in
lret
adc
je
fldt
sbb
xor
mov
call
cmp
js
out
pusha
cmp
jl
push
pop
mov
inc
arpl
in
ljmp
je
xor
mov
imul
mov
mov
mov
das
mov
push
add
pop
xchg
inc
mov
mov
jbe
lahf
es
mov
sahf
sarb
or
mov
mov
jbe
int
popa
es
jne
lock
enter
data16
aad
push
inc
or
jo
dec
cmp
hlt
rcr
push
into
stos
ljmp
bound
pop
pop
nop
sbb
shll
popa
dec
loop
std
outsb
ljmp
xor
xchg
push
cmp
mov
in
sbb
cmp
adc
mov
loope
fcoms
in
incb
xchg
ss
jecxz
inc
std
lahf
cmp
cs
cmp
mov
mov
dec
pop
fstl
jmp
jo
sbb
cmp
cmc
inc
out
sub
in
and
xchg
or
jle
loop
push
dec
jmp
cli
mov
test
lret
add
cltd
leave
and
jmp
lods
and
dec
xlat
mov
pop
xchg
jbe
aaa
pop
mov
pop
loopne
xor
sub
push
test
or
cmp
sub
arpl
dec
sub
cli
pop
fnstsw
jge
sub
inc
jl
sarl
jl
cli
and
mov
cltd
stos
xchg
lods
rorb
adc
leave
shlw
lods
pop
jns
push
pop
xchg
pop
pop
dec
or
pop
xor
xchg
enter
rcrb
and
cmp
cmp
push
daa
push
push
mov
push
inc
lods
lock
mov
jbe
std
jl
push
outsb
sbb
cmp
pusha
shl
fwait
sub
or
stos
xor
dec
clc
sbb
sbb
xchg
sub
call
mov
or
popf
scas
movsl
sub
pop
ds
push
mov
mov
fsubl
cmc
xchg
addr16
popa
call
or
mov
insl
push
pushf
jns
add
cmp
test
or
xlat
xchg
xchg
jl
push
add
fisubs
repnz
out
movsl
call
jnp
mov
xchg
mov
daa
test
es
std
cmpsl
inc
stos
jle
adc
pop
rcrl
pop
ret
push
sub
daa
add
daa
sbb
xchg
pop
sahf
xchg
and
test
adc
test
pop
inc
dec
cli
pusha
in
imul
mov
jg
mov
ja
sub
in
dec
test
imul
pop
in
jb
or
cmp
sub
loopne
rcrl
inc
push
or
nop
scas
fwait
push
adc
loope
mov
data16
add
je
shlb
sbb
mov
sbb
or
je
loope
sahf
ret
mov
mov
std
jmp
mov
dec
add
xchg
sarb
xor
or
lock
dec
xor
aad
cmp
sub
mov
data16
iret
popf
jg
xchg
ljmp
push
aad
jge
mov
mov
ret
fs
in
ret
je
jmp
and
int3
xor
xchg
push
loopne
and
scas
lods
jb
fnstenv
dec
insl
out
lds
mov
js
lock
xchg
lret
dec
xor
push
push
lea
clc
xchg
cltd
aaa
sbb
push
pop
or
orb
mov
je
test
andb
ss
das
mov
push
sbb
add
movsb
pop
jmp
or
lret
inc
mov
xor
xchg
movsb
xor
fs
dec
pop
mov
shlb
mov
xchg
aad
cmp
popa
xor
dec
mov
push
movsb
dec
jl
xor
push
pop
test
jae
sbb
ret
js
push
inc
cs
cmp
lahf
push
jae
xchg
fidivs
mov
lret
dec
dec
gs
add
addl
mov
xchg
adc
cmp
gs
test
lds
fldenv
lods
lock
xchg
ret
loop
cld
enter
jge
popa
xor
ss
pop
pop
enter
push
out
mov
out
daa
and
sub
mov
into
std
pop
shll
repnz
mov
cmp
aaa
add
ret
or
jb
push
push
pop
ja
rolb
mov
fs
scas
lea
scas
mov
mov
or
stos
pop
jne
lds
iret
pop
pop
inc
orl
lea
push
inc
sub
xor
mov
jmp
mov
sar
push
insb
dec
pusha
inc
pop
pop
adc
stos
pop
addr16
pushf
mov
adc
xchg
imul
js
out
aam
test
push
cld
cld
sahf
stos
ret
ss
iret
pop
loopne
jecxz
repz
add
push
jle
repz
shlb
in
pop
xchg
mov
mov
cwtl
pop
push
or
inc
loop
cmpsl
mov
dec
xchg
sub
xchg
out
aad
xchg
ret
int3
testb
daa
sbb
dec
outsb
jo
stos
int
xchg
jns
clc
mov
ss
cmp
repnz
jae
cmc
mov
sbb
loop
cs
insl
clc
and
aaa
add
xor
xchg
arpl
sbb
jmp
leave
outsl
sub
out
sub
adc
sub
iret
sub
mov
ja
loopne,pt
std
loope
gs
inc
inc
mov
mov
fidivrs
rolb
dec
sbb
add
mov
mov
and
inc
fucom
jl
push
inc
fcoml
jge
inc
jnp
repz
sub
je
push
icebp
inc
push
lods
iret
test
je
insl
stos
adc
inc
lret
add
lcall
mov
movsb
mov
hlt
sub
mov
and
jo
xor
jp
xor
in
dec
jle
pop
sub
inc
ljmp
jg
xor
adc
mov
add
jecxz
push
out
jns
inc
lahf
xchg
icebp
ret
xchg
stos
nop
or
mov
cli
or
and
adc
stc
jg
fmuls
push
movsl
or
dec
sahf
imul
repnz
in
stc
insb
cli
mov
popa
lret
or
shr
ficomps
sub
popa
xor
cmpb
imul
out
push
mov
sub
xor
outsb
push
stc
cmpsb
mov
test
dec
imull
jb
loope
leave
cld
je
scas
clc
insb
sub
mov
in
fiadds
pushf
int3
pushf
fsubr
cmp
sahf
mov
jl
vmwrite
sbb
xor
popf
insl
xor
test
mov
cmp
push
lcall
and
pop
in
sub
push
sar
shr
test
out
outsb
mov
mov
repz
inc
cmp
fisttpll
jge
mov
sub
add
pop
add
gs
or
insb
mov
mov
push
sti
sbbb
and
neg
jo
inc
push
dec
adc
lods
ds
sbb
int3
fbld
dec
stos
push
sub
int
mov
lret
call
lahf
cld
and
aas
add
pop
cmp
dec
das
ljmp
fistl
enter
add
inc
enter
pop
xor
lods
bound
bound
mov
lods
fucomi
inc
fisubrs
int
lods
cli
mov
aad
or
ljmp
inc
jnp
and
or
fldenv
inc
rolb
or
xor
scas
ret
mov
addb
cwtl
mov
lock
push
cmc
fs
out
jo
pop
lahf
stc
enter
sbb
scas
cmp
jno
sbb
mov
pop
enter
xchg
and
negl
shrb
jl
jle
push
hlt
les
sbb
arpl
aad
mov
daa
shlb
loop
jb
xor
mov
stos
pop
mov
addl
mov
imull
cmp
cmp
and
lret
popf
mov
mov
push
lea
push
xchg
aas
jl
pushf
stc
aad
xor
jl
xchg
sub
cli
jbe
cld
insl
filds
mov
jmp
cmc
sub
pusha
add
repz
xchg
mov
iret
or
cmp
ret
stos
or
push
push
jns
int3
jg
mov
pop
jecxz
fcmovu
lcall
push
push
test
add
sub
xchg
xchg
sti
test
andb
xchg
fildll
aam
adc
xchg
jg
sbb
and
mov
dec
lds
jno
enter
fisttpl
arpl
adc
stos
dec
sbb
xor
sbbb
push
mov
sub
pop
and
push
call
movsl
das
sbb
mov
out
xchg
fmuls
cli
lret
aad
das
sbb
enter
pop
mov
int
cmp
push
sar
jl
lcall
jmp
mov
js
sbb
lods
js
inc
cmp
xchg
sbb
inc
popa
fidivrs
sarl
sub
jnp
cmpsl
icebp
add
sar
lock
movl
ds
ja
and
adc
lea
inc
test
add
clc
dec
and
rcrl
push
xor
das
xor
call
inc
cmp
dec
out
xchg
sub
or
outsb
sub
cmp
pop
add
jo
je
mov
enter
movsl
pop
fstpt
imul
push
popa
dec
loope
push
mov
add
jl
xchg
test
inc
cmp
and
fdivr
sbb
aam
adc
add
ficoms
or
mov
outsl
mov
rolb
xchg
inc
pop
pop
ljmp
repnz
sti
fwait
add
jg
mov
pop
or
inc
pop
lods
mov
adc
mov
out
xchg
xor
addr16
lods
gs
cmpsb
out
aaa
push
cmp
add
or
mov
testl
mov
data16
mov
push
and
sbb
xchg
sti
das
dec
mov
sbb
jmp
and
adc
ds
repz
push
xor
or
fisubl
addr16
pop
fidivrl
adc
and
fcoml
shlb
push
xchg
sub
sbbl
push
fs
ret
fs
or
lcall
popf
push
push
clc
andl
js
cmp
lock
jae
jbe
pop
push
xchg
stc
sub
test
push
outsl
mov
clc
pop
xor
fistpll
sbb
les
jb
ret
int
idivb
jp
ja
enter
mov
push
out
notl
jne
jae
js
ret
and
inc
and
cmp
and
or
cmp
fcmovu
inc
in
jb
sub
insb
enter
push
adc
xchg
leave
inc
call
call
mov
test
and
mov
push
inc
addb
and
aam
push
ret
jbe
add
mov
aas
cmp
cmpsb
mov
mov
or
shrl
call
sub
fistps
cmp
lods
adc
inc
lods
sti
into
lea
jp
sub
xchg
stos
pusha
mov
sub
sbb
fsubl
pop
das
jecxz
push
ja
movsl
leave
fwait
lret
aaa
mov
in
mov
add
sbb
fisubl
rclb
fmuls
ljmp
out
in
push
xor
mov
push
push
jb
testb
xlat
mov
dec
push
inc
mov
lods
rolb
aam
jo
mov
mov
pop
pop
dec
adc
xchg
push
test
pop
seta
or
out
ss
inc
movsl
mov
pop
jo
lock
bound
jne
lods
xor
stos
jnp
filds
dec
adc
in
xchg
pop
sti
out
outsb
xchg
aaa
add
sub
cwtl
pop
test
jno
jg
lret
mov
in
jmp
cld
popa
pop
addr16
repnz
ss
iret
jmp
daa
fnsave
inc
ss
jmp
xchg
arpl
dec
or
aas
pop
jno
push
push
hlt
mov
cmp
hlt
jo
cmc
sbb
xorb
pop
sub
cli
int
pop
and
add
and
sbb
sti
sub
sub
pop
bound
fcoms
iret
daa
popa
push
cmp
in
outsb
jno
xor
test
aas
inc
pushl
pop
xchg
daa
mov
push
test
inc
push
dec
into
xor
test
adc
mov
cmp
into
add
in
js
or
add
jne
movl
jae
inc
into
andl
mov
inc
pop
stos
jae
dec
insb
or
xor
cmp
push
les
add
jge
and
leave
adc
pop
adc
leave
fwait
enter
sbb
pop
shr
test
insb
fsubl
mov
pop
pop
xchg
cmp
cmpsl
jae
push
stos
shl
clc
fwait
dec
and
add
sub
aad
out
fcoms
dec
mov
fnstsw
sub
sub
and
out
mov
dec
adc
scas
inc
outsb
shrl
or
mov
jne
jle
stos
lea
ss
adc
ss
push
ja
ds
call
mov
mov
mov
in
lds
add
scas
push
and
pop
inc
fldl
dec
aas
cmp
mov
sbb
sbb
add
loopne
jo
cmp
fidivrs
hlt
sbb
pop
lds
xor
rclb
inc
cmp
adc
inc
jg
sarb
mov
vandps
and
inc
adc
xchg
sbb
scas
mov
jg
mov
test
or
sbb
pop
test
ss
push
int3
test
and
in
aaa
xchg
mov
push
rcrb
cmpsb
mov
rolb
jno
push
sub
popf
and
jae
mov
pop
stos
iret
bound
shl
inc
dec
loop
cs
je
es
cwtl
sarb
adc
jnp
testl
pop
aam
dec
cli
out
pop
xchg
cmp
cwtl
lds
in
movb
ss
xchg
and
cmpsl
mov
sub
pop
dec
dec
fbld
and
add
sub
sub
jmp
cmp
hlt
imul
fmulp
andl
mov
xchg
popf
inc
fs
jg
lock
outsb
add
add
bswap
or
mov
sahf
and
pop
sbb
test
and
scas
add
push
cmp
in
out
lret
int3
pusha
sti
pop
mov
mov
dec
les
push
adcl
stos
push
inc
xchg
mov
shr
xchg
mov
mov
jecxz
movsl
imul
pushf
mov
scas
cmp
mov
jmp
into
cs
xor
mov
in
xorb
sbbb
mov
out
js
aaa
jne
adc
push
es
enter
ss
mov
gs
popa
and
aas
pusha
push
cmpsl
cmp
cs
idivl
or
mov
daa
mov
in
scas
push
jae
push
inc
sub
xchg
pop
cmpsb
add
push
loope
popa
xor
xchg
dec
ja
pop
fists
das
mov
in
lds
imul
jp
stos
in
push
mov
jns
mov
cmpsl
xor
or
mov
mov
aam
cmpsl
lods
push
cmpsl
mov
dec
sbb
mov
sbb
sub
movsl
test
cs
push
inc
in
cltd
dec
mov
cs
sbb
adc
pop
sbb
mov
fstp
pop
mov
dec
fstp
sahf
or
inc
stos
jns
repz
ret
lret
push
mov
mov
in
decb
mov
cld
or
cmpsb
popa
stos
add
cmpsl
cli
mov
adc
pop
ret
outsl
je
jbe
pushf
pusha
fdivrl
in
mov
inc
loope
xchg
cmp
inc
fadds
icebp
ss
pop
jmp
jno
cmc
int
repnz
xchg
test
in
and
shrl
sub
pusha
jb
sbb
push
fsubs
popf
fmull
sbb
pushf
hlt
fmuls
incb
xchg
nop
fnstsw
cmp
in
jmp
mov
mov
sbb
test
lds
fidivrl
dec
clc
or
dec
jge
xor
pusha
add
int3
aas
sahf
push
movsb
add
lods
jg
and
mov
adc
outsl
sbb
loopne
xchg
imul
ds
mov
pushl
and
mov
scas
push
add
mov
and
ret
xchg
scas
jg
sti
xor
adcb
iret
cmp
fisttpll
lahf
pop
push
push
outsb
inc
xor
xchg
sbb
cwtl
pop
sti
mov
dec
shrb
mov
mul
std
outsb
mov
jns
inc
fsubrs
or
dec
cmp
pop
daa
push
jae
test
lret
or
adc
test
loopne
imul
cmp
loop
pusha
jae
sti
jno
or
mov
add
out
fnsave
in
test
cltd
scas
cmp
jmp
inc
xchg
das
les
test
outsb
dec
cmpsb
inc
cmp
jne
xchg
stc
cmp
ret
pushw
fnstsw
adc
and
aam
fldl
jne
mull
arpl
cmc
shlb
cmpsb
inc
sub
or
sbb
repnz
lcall
ret
jne
in
mov
sub
xlat
cmp
or
jp
push
inc
aad
cmc
pop
je
les
fwait
pop
add
outsb
adc
xor
pop
mov
and
inc
inc
out
outsl
and
loopne
xchg
ror
ret
fdivrs
dec
and
lods
add
dec
pop
pop
sub
dec
push
ljmp
imul
mov
inc
outsl
adc
js
jb
outsl
stos
jle
insl
bound
lods
push
sbb
push
fsubl
mov
shll
cld
fimuls
xchg
andl
popf
or
add
out
push
out
sti
adc
test
cmp
std
push
xchg
movsl
push
push
mov
insl
stos
loopne
xchg
lods
dec
or
sbb
leave
inc
xor
fimuls
xchg
fmull
dec
jno
cwtl
pop
jecxz
xorb
sub
mov
mov
lret
pop
xchg
ds
aad
push
mov
mov
add
lahf
les
mov
aaa
inc
mov
sbb
faddp
mull
test
push
ja
and
adc
sbb
repnz
inc
imul
push
aas
mov
push
bound
cmp
push
ss
inc
jle
rcr
jg
cwtl
and
push
xor
fidivs
or
dec
jnp
aad
and
outsb
xchg
push
push
jae
xchg
dec
cmp
sub
bound
mov
addr16
xchg
fdivl
mov
fs
pop
mov
lods
sub
jge
data16
xchg
sub
inc
push
xlat
adc
adc
clc
cld
mov
ljmp
pusha
cmp
mov
or
jecxz
pop
jp
xor
aaa
push
dec
jb
mov
jge
test
fwait
pop
stos
lcall
imul
cltd
inc
clc
imul
xor
daa
arpl
push
cmpb
ds
shl
push
add
and
adc
jecxz
test
pushf
fcompl
imul
lret
add
sub
pop
push
ret
or
enter
jbe
cwtl
pop
fwait
lods
push
mov
out
xor
ret
insb
and
mov
mov
mov
lret
movb
test
xchg
popf
push
int
sub
in
mov
popf
push
loopne
and
std
sbb
cmp
and
xchg
cs
popa
mov
lahf
lret
sbb
and
dec
add
sbb
and
mov
pushl
ss
enter
lea
aaa
jg
in
lahf
scas
int
out
hlt
cmp
ss
int3
xchg
addb
test
xchg
in
ret
sbb
fs
jo
mov
std
mov
inc
fldt
or
and
in
aad
inc
inc
inc
imul
jnp
inc
test
jecxz
xchg
dec
mov
inc
hlt
mov
jnp
inc
nop
iret
shufps
and
in
pop
divb
fwait
xchg
adc
es
imul
scas
hlt
add
inc
push
push
fisttpl
jb
sbb
jmp
dec
ds
fdivrs
mov
stc
shr
mov
fcoml
popa
es
aas
sar
xchg
dec
pop
pushf
shrl
jg
enter
or
mov
fimull
pop
pop
jno
cmp
sti
dec
lret
loope
push
add
fs
add
push
mov
sbb
and
in
cltd
fmuls
xchg
pop
push
pushf
inc
call
idivb
dec
clc
cmpsb
xorb
negl
mov
pop
fbld
pop
and
lock
pop
sti
cmpsl
inc
ret
push
leave
repnz
call
sbb
nop
mov
xor
sbb
imul
adc
add
push
js
push
push
sub
and
daa
inc
xchg
fstps
mov
stos
jne
sub
xchg
xchg
stc
mov
out
pop
insb
push
xor
pop
adc
pop
icebp
fsubrl
pop
jbe
fmull
mov
sub
jno
inc
and
mov
outsl
shrl
cmp
imul
fldt
inc
add
leave
fimuls
xchg
je
lret
mov
xor
ret
repz
jae
cltd
sbb
data16
jg
pop
sbb
mov
int3
repz
lds
fstps
insl
icebp
int3
jg
mov
stc
jae
mov
mov
out
add
leave
adc
inc
fxch
mov
out
daa
mov
dec
jmp
mov
cmp
mov
sbb
sub
cmp
pop
jl
jb
insb
dec
add
push
mov
sub
push
xlat
add
ljmp
insb
cmp
and
ss
gs
adc
rcrb
dec
sub
ret
dec
adc
nop
sub
out
stc
adc
inc
xor
push
jle
pusha
fdivrl
inc
and
ja
pop
mov
add
outsb
mov
sbb
push
cmp
jge
int
add
into
add
dec
repnz
aam
ror
mov
dec
mov
les
dec
adc
sbb
out
adc
rorl
lods
adc
mov
xchg
xchg
pop
sbb
gs
test
sub
inc
sub
ds
jecxz
cli
js
int3
dec
pop
sbb
mov
push
ss
push
test
repz
xor
stc
jle
cmpb
enter
mov
mov
mov
or
and
pop
jae
fstpt
and
pop
and
mov
in
pop
mov
jmp
jg
shlb
and
jecxz
or
mov
dec
pop
xchg
or
test
je
and
cmp
push
repnz
xor
outsb
xor
popa
scas
push
mov
or
cmpsl
insl
fisttpll
gs
lahf
in
sti
inc
adc
stc
push
inc
outsb
or
or
xchg
popf
sub
sbb
sbb
and
movsl
cmp
xor
inc
cmp
fwait
test
cmc
pop
jge
and
ja
jb
je
mov
fdivr
and
inc
inc
cs
sbb
addr16
push
cmp
add
jmp
add
and
dec
stos
int
fwait
mov
nop
xor
fs
and
or
mov
lds
lcall
push
sbb
pop
inc
dec
or
or
cld
adc
lock
mov
dec
jl
push
cmp
mov
sbb
in
fldt
nop
mov
add
sub
pop
sti
sub
xchg
movsb
lret
arpl
ret
push
push
cmpsl
pop
imulb
in
sti
movsl
pop
int3
sahf
inc
cmc
xchg
dec
xor
aam
out
ret
sahf
fs
icebp
xor
mov
push
jle
mov
dec
fcomps
iret
push
cmp
pop
lcall
add
pop
cmp
in
int
movsb
dec
jl
aaa
leave
push
push
int
inc
pusha
mov
jl
ljmp
imul
out
jecxz
push
mov
dec
and
xchg
mov
fs
or
jp
fists
or
sub
pop
or
push
add
adcb
int
push
pop
jp
mov
push
fadds
popa
movsl
mov
dec
xor
dec
insl
lret
dec
iret
mov
rcll
add
sbb
fists
into
fstpl
fdivrs
mov
push
mov
hlt
fwait
or
roll
push
pop
mov
in
mov
xrelease
stos
mov
dec
int
ljmp
inc
and
and
sub
pop
mov
pop
pop
dec
int
push
pushf
sbb
pop
mov
popa
cli
add
push
jle
jmp
and
pop
in
push
lcall
pop
sahf
sti
pop
pop
cmp
jl
es
fbld
xor
inc
xchg
mov
xchg
test
sbb
lods
pop
xor
sbb
cmp
pop
inc
xchg
xchg
arpl
cmp
jno
jne
or
xchg
leave
cmpsb
push
mov
out
xlat
mov
xor
and
mov
repz
test
hlt
lock
jne
fidivs
push
scas
pop
mov
aaa
or
pop
sbb
pusha
in
loop
and
std
xlat
cmp
and
xchg
inc
sub
ror
dec
je
cli
pop
ficoms
jl
out
cld
lods
xor
aad
sub
dec
xchg
mov
enter
arpl
in
xor
aas
jnp
jg
add
test
xchg
xchg
in
sub
adc
stos
inc
dec
mulb
loopne
mov
ret
jecxz
testl
sti
neg
clc
inc
add
lret
sub
or
adc
xor
test
mov
call
popa
lock
lret
je
add
into
pand
inc
loop
xchg
pop
sbb
movsb
jbe
mov
sti
xor
shlb
jl
into
pop
out
and
movsb
lock
mov
ret
sub
fninit
inc
daa
std
orl
or
mov
ja
mov
fisubl
andb
nop
bound
jnp
inc
fimuls
in
fldenv
loope
cld
mov
jnp
cmp
aad
pop
mov
arpl
fstl
and
pop
cmpsl
popl
in
bound
scas
and
or
imul
push
dec
pop
lock
daa
imul
mov
jmp
jbe
jge
insl
sbb
sahf
call
add
ljmp
xor
mov
and
cmp
adc
loop
in
add
rcrl
pop
and
pop
jo
pop
scas
inc
cmp
cmp
fmull
bound
xchg
or
cwtl
and
nop
cmc
sbb
and
rclb
addr16
sbb
adc
andb
daa
fdivs
push
adc
hlt
fsubp
inc
xor
and
sarl
pushf
aas
pop
shrb
jb
dec
xchg
mov
cmp
jg
dec
sub
sbb
add
push
call
or
lock
pushf
jmp
and
push
push
call
in
std
mov
ret
add
pushf
jbe
ja
mov
emms
push
ljmp
jp
cli
sbb
icebp
dec
mov
pop
jo
and
arpl
jle
fisttpl
stos
insl
cmc
out
xor
xchg
dec
adc
or
pop
aad
jno
imul
adc
add
add
sub
in
je
fadds
sub
jb
jge
lret
mov
rcl
insb
inc
mov
pusha
dec
out
ss
jmp
xor
psrlq
or
test
out
mov
cmp
dec
push
mov
and
adc
pop
fcomi
pop
inc
xchg
aaa
pusha
repnz
xor
enter
sbb
in
data16
cld
daa
frstor
xlat
mov
pop
aad
add
in
mov
jne
cmp
repz
and
or
pop
pop
int3
dec
sbb
imul
movsb
push
je
jnp
orb
cld
es
jo
aaa
mov
sbb
sub
cltd
dec
cmp
cmp
add
adc
dec
xor
mov
in
sbb
rclb
sub
cmpsl
pop
lcall
lret
push
arpl
rol
cmpsb
push
and
inc
cmp
xchg
adc
out
dec
cmp
xor
xor
popf
xchg
xor
push
cmc
adc
addr16
cmp
aas
rcll
mov
dec
xchg
cmc
add
jns
pop
inc
sub
cmp
cmp
push
ret
mov
imul
fsubl
and
cmp
pop
mov
mov
dec
cmp
out
inc
sbb
je
sub
jmp
in
pop
or
int3
mov
mov
fs
xchg
imul
rcr
push
add
je
fnstenv
mov
mov
push
test
imulb
sbb
pop
cmp
push
ds
xor
in
xlat
lods
movsb
xlat
pop
mov
pop
popa
je
cmpsb
fdivrs
lcall
push
adc
stos
insl
cli
push
mov
imul
fcoms
fs
ficompl
adc
repnz
test
xor
mov
test
cmpsl
sub
xchg
ja
repz
xchg
lds
cmpl
xor
dec
insl
mov
pop
inc
jecxz
pop
push
mov
xchg
push
mov
sub
sub
push
push
dec
inc
cmp
push
jecxz
and
lret
ja
leave
in
push
aas
sbb
xchg
push
xchg
xchg
stc
add
cmp
dec
loop
or
pop
arpl
rcl
push
jmp
or
pop
call
and
test
fildl
xchg
mov
and
jnp
bnd
arpl
or
out
and
inc
daa
inc
cmp
mov
mov
adc
lock
mov
lcall
add
jl
pop
ret
push
popa
mov
dec
sub
lret
or
pop
and
adc
adcl
or
scas
cmpsl
test
push
lods
jbe
mov
xchg
and
es
roll
pop
dec
adc
mov
xor
ret
repz
daa
pop
sbbb
mov
stc
push
add
mov
or
xor
stos
mov
lcall
imul
imul
decb
jbe
push
lcall
je
data16
lcall
fidivl
add
in
xchg
cs
ljmp
scas
pop
fs
enter
jge
addr16
pusha
inc
mov
es
xor
stos
loop
jae
shlb
mov
push
leave
mov
inc
pushf
add
or
pop
rcll
push
jecxz
dec
bound
and
xor
adc
push
mov
dec
cmovp
popf
pop
dec
pop
mov
cmp
jmp
std
adc
sbb
nop
int3
mov
pop
loope
fwait
iret
lahf
loopne
mov
loopne
mov
test
gs
stos
arpl
xor
lock
scas
mov
rcll
cmpsb
in
jp
arpl
fnsave
popf
pop
xchg
pop
out
inc
fnsave
popa
mov
dec
mov
add
cltd
xchg
stc
jecxz
xor
in
iret
or
lock
insb
jl
lock
stos
loop
cmp
xor
xchg
fnstsw
adc
xchg
shlb
jbe
jge
inc
cli
ds
push
loop
push
cmpsl
scas
cmp
ja
push
test
cmp
in
out
push
aaa
push
repnz
inc
and
dec
mov
subl
arpl
mov
adc
jle
jae
dec
inc
sub
aaa
sti
cmp
in
mov
das
dec
movsl
rcl
insb
out
push
mov
in
test
sub
xchg
dec
cmp
push
fsubrs
mov
ret
or
jno
jg
pop
mov
dec
cmc
mov
xor
scas
mov
and
popf
cltd
sbb
push
out
popf
and
bound
ss
sahf
out
andb
or
sub
dec
fstps
xlat
jnp
aad
mov
xor
lods
outsl
xorb
or
xchg
fstpl
or
push
sub
xchg
add
pop
inc
ss
test
lods
iret
cmp
push
pop
cmp
inc
lcall
into
in
mov
or
push
fsubrs
sub
adc
mov
adc
daa
fs
mov
mov
aaa
cmp
loope
imul
test
sahf
cli
ss
cmp
push
out
fisttps
push
or
hlt
shll
add
sub
jge
sahf
cmp
jecxz
sub
sbb
je
adc
arpl
mov
jo
fstps
xchg
dec
ret
jg
mov
add
jle
inc
xor
into
adc
out
ds
in
cmp
cld
test
dec
or
das
mov
aas
mov
lret
es
out
xchg
dec
aad
gs
dec
nop
leave
mov
fldcw
inc
jmp
addb
out
stos
push
inc
movsb
in
fcomps
cmp
nop
cmp
pop
jb
or
sub
cmp
adc
sbb
shlb
sbb
jp
shrl
mov
xchg
std
xor
mov
outsb
push
xchg
push
lea
xchg
jecxz
sarb
lock
mov
insl
dec
gs
std
jae
jnp
adc
push
inc
mov
cwtl
fcmovb
inc
lret
negl
loopne
mov
pop
shll
add
fcomi
hlt
test
inc
enter
mov
xchg
xor
mov
gs
decb
popf
add
inc
sbb
addb
add
fldl2t
jle
outsl
hlt
rorb
cmpsb
jl
out
sbb
aaa
dec
xor
das
loopne
popa
mov
cmp
arpl
subl
lahf
fistps
into
cmp
in
adc
jl
push
xor
push
or
inc
push
out
stos
stc
js
test
sbb
xor
ss
filds
ret
push
dec
aas
push
lea
aas
fwait
out
push
jl
outsl
rcll
enter
shlb
imul
fimull
xchg
fwait
jo
push
dec
cmpsb
mov
mov
leave
out
jg
les
repnz
daa
imul
add
ret
xorl
jo
outsl
fucomip
mov
cmp
dec
or
mov
shll
bswap
dec
xchg
mov
testl
rcr
inc
sub
or
or
cmpsl
jl
sar
dec
outsl
cmp
or
mov
xchg
clc
pushf
or
pop
and
loope
xchg
fdivl
popf
add
xchg
dec
lods
or
jp
test
nop
rcl
enter
add
and
fucomip
sbb
test
insb
out
jmp
push
loopne
dec
mov
iret
cmpsl
inc
lcall
rcrb
or
in
mov
xorl
mov
test
ja
xchg
mov
mov
sub
movsl
or
int
nop
push
ljmp
jmp
out
xchg
xchg
cwtl
sbb
into
call
mov
cmp
xchg
push
mov
lcall
imul
pop
aad
movsb
or
jns
push
bnd
cmp
or
and
add
lods
insl
jp
pop
lret
cli
push
mov
loope
push
xlat
push
xor
cmpsl
adc
push
int3
bound
out
fadds
loope
fucomi
xchg
je
xchg
mov
inc
pop
in
ret
pop
call
dec
jge
sbb
mov
cmp
scas
mov
movsb
movsl
and
xchg
mov
add
inc
loope
push
cmp
jne
sub
jle
and
lret
sbb
mov
fwait
inc
or
pop
stc
fiadds
mov
daa
mov
in
xchg
stc
cmp
cmpsl
pop
adc
xor
add
mov
and
mov
popf
mov
jmp
cmpsl
icebp
ror
add
cmp
mov
fldenv
dec
push
lea
xchg
pop
xor
and
cltd
ficoml
movsl
int
inc
pop
imul
ret
add
sti
jmp
stos
mov
repz
repz
aad
inc
enter
add
test
mov
jnp
or
addr16
divb
popf
out
rorl
pop
mov
sbb
into
add
mov
add
lahf
mov
es
sbb
and
bound
xchg
in
lcall
and
mov
lret
movsb
enter
dec
push
and
je
adc
iret
fdiv
std
adc
dec
aad
fs
insb
dec
faddp
movsl
ss
das
jne
clc
mov
cmp
jmp
xor
dec
lcall
dec
cmp
mov
mov
fs
lcall
sub
pop
mov
sub
xor
mov
pop
adc
sbb
iret
cmp
test
scas
pop
sub
push
daa
sbb
fincstp
cwtl
inc
sahf
fdivr
ja
rorl
mov
rclb
add
xorb
insl
mov
outsb
sub
movsb
dec
clc
mov
into
pop
jb
cmp
sub
fadds
add
imull
sub
bound
repz
popa
arpl
clc
cltd
mov
and
mov
mov
dec
or
add
or
jbe
jge
arpl
sub
sub
subb
sub
in
fbld
jle
gs
stos
fldt
cltd
and
push
push
add
imul
jp
xor
mov
subl
out
jne
outsl
mov
test
aas
out
mov
cwtl
movsl
push
notb
into
aad
xchg
cmpsl
push
sbb
in
jmp
lock
cmp
push
mov
inc
loop
fiadds
repz
sub
or
mov
jge
jne
and
add
mov
pop
popa
jmp
mov
dec
dec
push
cmc
aad
cmc
jae
dec
fcmovnb
lahf
movsl
jecxz
std
test
sub
andl
adc
test
cmp
jmp
xor
sti
daa
shll
pop
sbb
into
icebp
or
imul
inc
pop
or
adc
jg
adc
cmp
scas
andb
bswap
and
loopne
repnz
push
sahf
mov
or
mov
les
pushf
cmp
mov
fsubp
xor
inc
mov
fldenv
divb
fistps
pop
outsb
lea
xor
pop
inc
aaa
cmpl
shll
mov
xor
add
stos
stos
std
mov
sub
rorl
shlb
ret
leave
rorl
stos
xlat
sbb
sbb
mov
sbb
adc
dec
test
mov
ret
xor
dec
sbb
push
mov
sub
stc
dec
mov
in
cmpsl
je
xor
not
in
into
cmp
cmp
sub
xor
lret
shlb
pop
xor
rorb
push
inc
adc
mov
dec
inc
adc
insb
scas
daa
cld
xor
push
enter
clc
mov
aas
jae
push
xor
mov
cmpsb
ret
cld
jo
cmpsb
inc
adc
cld
test
fstps
inc
loope
xor
xor
verw
mov
mov
push
in
les
inc
jno
ss
icebp
mov
pop
int3
jle
or
daa
push
add
and
add
sub
inc
les
pop
xlat
arpl
xchg
gs
jp
pop
negl
enter
pop
rcrb
or
popa
mov
push
mov
lret
mov
cmpsb
daa
xchg
mov
std
out
hlt
cli
adc
loop
xchg
push
mov
loop
mov
in
push
insb
call
cmp
lcall
js
adc
mov
test
insb
cmpsb
rclb
gs
or
cmp
lea
sub
push
lcall
mov
pop
loop
gs
adcl
sbbb
mov
icebp
pop
lods
and
add
jp
std
lcall
or
ror
dec
cmp
xor
or
cmp
into
and
mov
jecxz
cmp
xchg
hlt
lahf
xchg
out
xchg
adc
in
xchg
scas
roll
pop
dec
lock
pop
inc
or
jecxz,pn
and
ja
iret
mov
cltd
jb
dec
jmp
push
mov
sar
mov
dec
jne
out
dec
sbb
pushf
fcompl
out
addl
mov
add
jg
sbb
cmp
pop
jns
outsl
and
mov
mov
xchg
sub
lods
mov
aam
hlt
cmp
cmp
jne
lea
jnp
scas
imul
sbb
fstpl
pop
or
pop
cmpsl
movsl
insl
xchg
shlb
mov
sbbl
mov
in
jmp
fiadds
jg
and
loope
push
jecxz
js
pushf
repz
inc
sbb
imull
add
test
sbb
adc
push
cli
gs
and
pop
inc
in
mov
xchg
lret
fistpll
xchg
mov
jmp
xchg
jl
daa
xchg
mov
ret
loop
mov
sarb
jbe
xor
nop
jae
cmp
mov
out
xchg
mov
inc
lods
adc
test
orl
add
jne
inc
ja
jno
or
jecxz
mov
dec
inc
xchg
push
js
mov
insl
in
pop
xchg
xchg
or
sbb
test
push
and
mov
out
adc
daa
leave
fwait
xor
out
cli
push
or
xchg
fcompl
mov
icebp
mov
clc
loop
lea
loopne
jns
and
icebp
mov
rclb
or
dec
xor
fsubl
mov
arpl
or
sub
jge
pushf
shrb
mov
add
leave
xchg
adc
mov
stos
repnz
dec
lahf
js
adc
inc
adc
sti
clc
cli
fidivrl
jle
out
sub
xor
jmp
jg
into
cmp
test
xchg
pop
adc
ret
jmp
push
in
loopne
loope
lcall
dec
dec
inc
xor
jae
sub
cmp
leave
daa
sub
jp
push
jge
and
dec
icebp
jge
imul
cmpsb
push
shll
repz
movsl
mov
lock
addr16
cwtl
lcall
mov
pop
out
lahf
xchg
pop
xchg
ss
xor
fstpl
ss
inc
jnp
jp
xchg
mov
imul
pop
loop
stos
clc
dec
mov
shr
or
cmp
stc
xor
fwait
outsl
push
mov
xchg
xorb
movsb
xchg
gs
sbb
pop
das
hlt
cltd
mov
push
lds
int3
push
aas
rcr
movsl
pop
xor
in
push
mov
out
imul
out
dec
addr16
aam
cld
push
xor
outsl
andl
jge
insb
inc
andl
or
outsl
aas
cli
dec
jecxz
movsb
inc
cmp
inc
cmp
inc
into
cmp
adc
pop
xor
sti
push
dec
stos
outsb
pop
inc
mov
xchg
out
or
pusha
lock
lcall
pop
cmpsl
push
dec
mov
popf
fs
mov
nop
bsf
jp
insb
scas
fldcw
jle
lret
dec
xchg
push
idiv
repnz
je,pn
shl
adc
inc
pop
aas
loop
push
scas
js
jns
sub
nop
popa
adc
les
inc
jb
bound
rcrl
faddp
movsl
xor
xchg
xchg
jl
fadd
pop
fildl
or
andl
pop
outsl
lcall
sub
sub
dec
sbb
jnp
push
movsb
push
into
fstl
push
dec
or
adc
cmp
add
xchg
and
jmp
aas
negl
jns,pt
fmuls
pop
push
les
mov
xchg
pop
and
pop
sub
ret
inc
dec
js
adc
jne
xor
ret
jo
movsb
imul
lods
jno
je
and
jno
lea
mov
int3
lods
lret
hlt
jns
sbb
popa
mov
mov
pmulhuw
jecxz
xchg
ret
push
xor
lock
insb
clc
insl
roll
pop
xor
sub
fs
sbb
and
xchg
insl
sub
loope
inc
mov
pop
mov
aas
mov
mov
je
incl
push
testb
adcb
scas
fwait
scas
jno
jl
cwtl
mov
aas
cmpsl
xchg
fistps
out
cmp
inc
cmp
inc
mov
fwait
jb
or
xchg
maxps
es
dec
fxch
daa
pop
dec
popa
cwtl
loope
test
addr16
or
push
inc
repnz
adc
mov
xor
test
ficoms
jno
pop
cmp
xor
loope
rolb
add
pop
cmp
js
in
and
cs
jl
inc
mov
popa
xor
sahf
push
dec
fwait
nop
lock
pusha
test
popf
adc
in
mov
jl
mov
add
in
mov
mov
cmpl
es
pop
push
sbb
fmull
push
mov
imul
aam
fidivrl
imul
rolb
lds
pop
cld
mov
adc
xor
fsubr
lret
add
mov
xor
or
loopne
stos
dec
test
or
into
add
xchg
fisubs
push
rorb
sub
pop
sti
push
outsb
mov
push
sub
out
cmp
jg
shrb
jle
adc
xchg
add
or
lds
cld
inc
fnstsw
outsb
pop
cmpxchg
adc
add
mov
sub
enter
mov
jno
out
pop
jmp
dec
in
movsl
jnp
imul
cmpsl
jmp
cmp
test
mov
sahf
adc
ret
fistpll
xor
jle,pt
out
xchg
rorb
push
testl
jae
add
fsubp
sbb
pop
mov
pusha
aaa
pop
bound
xorb
add
fwait
lret
loop
jnp
add
out
inc
sahf
and
cwtl
inc
mov
stos
scas
pop
mov
mov
sub
ret
adc
pop
push
in
sbb
cmp
sbb
scas
push
push
out
scas
out
push
fxch
xchg
hlt
in
jecxz
repz
dec
jo
cltd
pop
lret
enter
daa
mov
cld
xchg
fs
loope
test
rcr
mov
imul
mov
sub
mov
fsubrs
mov
fldenv
outsl
arpl
jg
inc
dec
add
and
es
cltd
iret
cmc
ds
mov
jbe
and
out
iret
iret
iret
iret
insb
jns
ja
das
notb
movsl
ret
shll
clc
sar
clc
jbe
pop
and
imul
pop
inc
pop
das
xor
cmp
push
xchg
inc
add
sub
push
sarb
xchg
inc
scas
dec
inc
data16
jg
inc
sbb
std
jge
push
mov
lods
cmp
aaa
push
or
add
xchg
out
aam
lret
movsl
mov
iret
or
rol
mov
in
data16
mov
scas
roll
cmp
ss
shll
das
cltd
in
sbb
jne
adc
aas
je
lea
lret
xor
pusha
push
jne
xchg
inc
popf
repnz
pop
lock
xor
cli
ds
jo
arpl
je
bound
push
pop
sti
mov
adc
outsb
or
sbb
jo
push
movsb
or
pusha
sbb
inc
orl
pop
mov
int
ds
cmpsl
mov
mov
inc
push
iret
xchg
cltd
pop
adc
loop
cmp
cmp
xor
xor
fsubs
hlt
fdivs
pop
jns
sbb
xchg
ds
or
inc
clc
sub
inc
cmp
fsts
test
adc
sbb
or
stos
jnp
js
std
lea
xor
push
sub
sbb
test
gs
dec
dec
mov
sub
xchg
andl
outsb
je
push
cmp
jle
rcl
xchg
jnp
pop
pop
mov
stos
adc
dec
lea
cmp
stos
inc
and
cmp
sbb
mov
aam
es
add
xor
pop
fs
sbb
pop
mov
jmp
cmc
ret
push
or
outsl
enter
jl
icebp
pop
mov
rolb
mov
les
ljmp
or
dec
cmp
or
popf
sub
mov
fsub
and
jecxz
stos
mov
mov
push
adc
jl
movsb
pop
ret
mov
gs
xchg
and
loop
pusha
cwtl
add
push
sub
and
add
xchg
rcll
decb
mov
je
fs
orl
jo
das
enter
rcll
xchg
lods
jo
sbb
es
inc
jbe
fsts
xchg
pop
push
test
movsl
adc
xor
xor
cmp
lods
andl
ja
xchg
cmp
mov
fstpl
mov
pop
xor
ret
xchg
inc
andb
arpl
adc
pop
fs
sub
mov
fidivrs
imul
fstpl
ljmp
pop
ret
adc
mov
inc
iret
sub
fdivrl
inc
aas
mov
fsubl
lods
or
daa
jbe
fs
ret
shrl
fwait
jne
or
mov
dec
outsb
or
sahf
mov
ret
repz
pop
adcl
mov
jp
mov
jmp
in
cmp
outsb
mov
js
sbb
repz
data16
int3
and
repnz
pusha
cmp
out
cld
hlt
and
rclb
cmc
rcl
test
sub
push
sub
mov
xor
hlt
cltd
sub
dec
stos
cwtl
int3
es
and
mov
mov
imul
sbb
push
sbb
outsb
cmpsl
sbb
cs
or
jmp
movl
mov
rcll
aas
pushf
add
test
aas
mov
lcall
push
stos
sbb
out
movsb
jb,pn
ret
jae
mov
aas
xor
push
ljmp
and
fisubl
dec
dec
ret
xor
xor
add
into
or
es
nop
pop
mov
dec
inc
xor
repnz
push
or
dec
sahf
push
inc
sbb
mov
mov
test
xchg
out
jnp
lock
subb
push
lret
repz
mov
in
xor
insb
lea
jbe
push
out
fiadds
push
shr
rcl
inc
mov
ljmp
and
insl
mov
inc
or
stc
inc
clts
pop
or
push
cltd
push
add
inc
fsubs
fbld
push
mov
ljmp
xchg
hlt
adc
fdivs
fst
jae
mov
jl
js
popf
icebp
xchg
ret
rcll
ja
sub
aaa
leave
mov
and
mov
mov
popf
cmpb
mov
loope
mov
add
inc
xorl
pop
js
cmp
sub
mov
jo
xor
emms
int3
fsubl
int3
jno
out
lret
outsb
jne
bound
rcrb
arpl
push
and
xchg
lret
fbstp
mov
out
xor
jle
fcomp
mov
push
lret
lret
sub
lret
imul
test
iret
dec
jp
pop
stos
shlb
iret
out
int
call
test
mov
lcall
sahf
rclb
jecxz
sbb
and
dec
test
adc
cmp
mov
sub
iret
lea
xor
enter
das
arpl
jl
outsl
sub
enter
subl
pop
mov
push
cwtl
mov
lret
sub
pop
outsl
movsb
in
rcrb
push
mov
mov
cltd
or
mov
inc
sub
rcrb
add
mov
mov
movsl
loop
ret
or
mov
call
or
fwait
and
negb
mov
dec
pop
dec
lock
repnz
cmp
outsl
add
dec
sbb
add
je
cmp
or
xchg
testb
pop
dec
xchg
xchg
mov
mov
test
jle
pop
sbb
lea
clc
sbb
scas
mov
cmp
test
xchg
lds
les
or
negl
fwait
icebp
cmpsb
add
mov
cmp
xchg
sti
arpl
shlb
movsb
in
push
mov
cmp
loop
push
stos
jae
and
out
jmp
jae
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
fs
in
add
jl
sub
repz
mov
jae
js
in
test
loope
jecxz
lahf
mov
or
mov
sti
lods
fs
jno
and
adc
mov
les
aaa
insl
and
push
lock
outsb
addb
aaa
sarl
push
inc
int
lret
push
scas
xlat
iret
lret
insb
push
lea
mov
clc
insb
mov
cmp
mov
sbb
cmpsb
pop
loopne
aas
scas
les
inc
xor
sti
lret
xor
sbb
sti
xlat
adc
bound
and
mov
loopne
jp
push
fsubl
les
data16
std
cmp
imul
dec
lock
adc
pusha
dec
scas
push
pop
pushf
xchg
mov
and
mov
into
pop
cli
push
sbb
in
sahf
imull
xor
std
das
sub
shll
int
fdivs
sbb
outsl
sub
mov
xor
ds
and
push
xor
test
push
jl
sbb
mov
das
sarb
lret
and
lahf
pop
push
dec
cmp
push
loopne
cmpsl
addr16
and
pusha
and
lret
push
jo
and
jp
mov
clc
and
pop
lret
cli
fsubl
fnsave
sub
and
jns
or
in
push
push
data16
adc
and
fstl
inc
and
push
pop
lods
out
xchg
dec
push
push
gs
push
xlat
in
jns
mov
xchg
aam
shl
jp
lods
pushf
les
and
or
fadd
push
xor
xor
mov
movsl
hlt
adc
or
inc
jns
stos
inc
nop
cld
mov
sti
jne
xor
or
jmp
mov
sbb
into
cmp
arpl
ds
jg
jecxz
out
mov
cmc
add
stos
jmp
shrb
mov
cmp
js
jnp
daa
jno
push
sub
jle
test
inc
xchg
stos
lock
jl
lret
mov
jp
daa
mov
xor
push
push
and
sahf
push
mov
cmp
loope
cmpsl
and
mov
sbb
add
adc
in
adc
leave
sub
pop
scas
test
dec
lahf
add
cmpsl
or
into
imul
sbb
out
cmp
push
mov
sub
cltd
popf
or
ljmp
inc
inc
mov
sub
add
cmc
mov
pop
inc
jmp
push
mov
sub
or
sbb
lahf
sub
mov
sbb
loopne
fucom
mov
push
outsl
push
adc
inc
pop
daa
scas
sub
xor
xchg
movsb
xor
insb
xchg
cltd
scas
xchg
arpl
aas
pusha
nop
sbb
ss
or
pusha
push
dec
es
or
fs
mov
sti
add
sahf
cmp
fisttpll
adc
xchg
lahf
jmp
lock
adc
mov
fimuls
movsl
lcall
and
push
inc
xchg
jne
push
xor
jl
add
sub
sbb
shl
les
pop
xchg
insb
cmc
ficoms
ds
pop
bound
mov
les
cmp
test
push
sbb
pop
cmp
mov
jecxz
loope
sub
and
or
fs
test
push
imul
sub
pop
in
std
test
add
ljmp
xor
jecxz
int3
test
push
ss
insl
jns
sbb
xchg
nop
mov
sbb
push
pusha
xor
fmul
jmp
stc
jno
mov
andb
imul
push
lods
jb
xchg
jg
mov
pushf
jae
mov
pop
inc
repz
fdivs
ss
adc
mov
fdivs
pop
mov
addr16
and
push
dec
packsswb
mov
jle
and
mov
inc
cmpsb
ss
pop
leave
mov
out
pop
xor
testb
jmp
xlat
lret
or
jge
test
dec
or
push
adc
xchg
jmp
adc
call
repnz
and
or
inc
add
mov
push
data16
dec
ret
cmpsl
push
push
push
insb
dec
push
and
movsb
inc
add
add
ret
mov
mov
sti
cmc
and
xchg
adc
xchg
out
fidivs
nop
imul
pop
sub
mov
pop
or
imul
dec
pop
dec
jno
mov
and
mov
dec
push
addr16
das
in
jg
bound
add
stos
sub
dec
in
lret
popf
dec
ja
mov
mov
jb
fstpt
testb
inc
jecxz
stos
jo
shlb
pop
pop
test
loopne
enter
or
mov
push
sbb
mov
inc
fcompl
or
and
rcrl
xchg
test
push
loope
adc
mov
dec
rolb
pop
mov
lret
lret
sub
in
ret
xchg
incl
imul
jl
add
movl
pop
xrelease
or
xchg
mov
jmp
shlb
mov
push
sar
aad
ja
aaa
pushf
jg
scas
xchg
push
nop
stos
cmp
or
xchg
or
in
cld
cmp
test
inc
push
pop
in
cmpsb
xchg
xchg
push
jb
or
mov
sbb
xor
dec
pusha
sarb
bound
pop
sub
xor
xor
sbb
cmp
push
pop
lcall
in
out
dec
mov
add
sub
push
lock
rol
mov
mov
xchg
cwtl
inc
cmp
gs
xor
test
imul
mov
in
adc
mov
in
mov
ret
mov
dec
xchg
inc
jb
cmpsb
mov
push
mov
push
and
mov
jnp
xchg
add
xor
sahf
xor
lock
push
xchg
cmpsb
ds
int
cmpsl
pop
nop
jmp
je
scas
jb
enter
lahf
les
arpl
jae
mov
mov
outsb
clc
jg
fldenv
aad
vpextrb
adc
sbb
stos
and
lods
push
add
lea
lret
xor
push
aaa
inc
xlat
mov
movsb
adc
sub
mov
adc
sbb
mov
icebp
popf
xlat
rcl
out
sarl
testb
and
fidivrs
movsl
jmp
shlb
jns
fwait
icebp
fcoml
fwait
gs
bound
subb
xchg
fcmovnu
loopne
in
ret
or
daa
xor
fbstp
sti
sbbb
pop
push
push
dec
add
into
push
xchg
xchg
std
loope
sub
xor
xchg
test
push
lock
push
hlt
into
dec
xor
cmp
jge
shl
jbe
add
mov
pushf
inc
xor
pop
sbb
int
leave
frstor
fisttpll
fstpl
in
jo
pop
mov
leave
cltd
mov
ret
pop
mov
pop
dec
sbb
lret
add
pop
adc
and
repnz
mov
std
ss
jbe
jp
jns
dec
pushf
mov
push
loope
lcall
pop
jns
dec
imull
pop
into
ljmp
lcall
push
jge
ja
adc
mov
arpl
cmpsl
cmp
dec
add
fsubs
rolb
mov
xchg
or
lds
dec
xchg
ds
call
adc
fbld
push
sti
std
mov
aad
ljmp
jl
sbb
add
fistps
lods
cmp
es
test
push
xor
clc
pop
xor
pushf
xor
push
push
push
mov
fadds
cmc
rorl
push
call
sbb
daa
and
out
stc
xor
popf
out
jg
lret
pop
push
ds
adc
popa
sub
sbb
addr16
add
les
adcb
xchg
xor
xor
adc
sub
ds
stos
dec
jae
cmp
xor
mov
pop
xchg
imul
fwait
and
add
sub
add
add
packssdw
xor
sbb
jmp
icebp
into
ss
scas
roll
aad
add
aaa
pusha
pop
push
xchg
adc
inc
and
icebp
push
hlt
xchg
in
aaa
das
mov
xchg
addl
mov
inc
adc
mov
xchg
aam
push
std
mov
es
push
loop
push
xor
dec
mov
into
insl
repz
inc
jl
xchg
push
cwtl
movsl
jg
sub
cmp
fsts
out
outsb
push
repnz
dec
rcrl
mov
pushf
pop
and
mov
and
or
int
mov
in
mov
inc
loop
inc
lcall
fwait
lret
mov
pop
test
les
fwait
xlat
dec
fs
pop
inc
repz
stos
cld
insb
jne
cmp
add
and
sti
insl
sbb
andb
jne
inc
ficoml
pop
insl
cmpsb
ret
sub
insl
push
pop
fwait
call
push
iret
test
repz
mov
sub
cmp
add
mov
fstpt
pusha
fwait
dec
sbb
arpl
cld
push
jno
sahf
xlat
imul
inc
ja
jmp
dec
fs
push
sahf
cmc
movsl
mov
stos
outsb
cmp
and
xor
push
cwtl
jg
xorb
xor
psrlq
imul
pop
sbb
iret
leave
jle
and
push
hlt
les
push
or
sub
xchg
jle
jbe
cwtl
cwtl
sub
popa
lock
sbb
mov
mov
scas
mov
push
cmp
xor
ret
xchg
icebp
test
push
sahf
ficoms
push
sbb
mov
stos
or
fs
out
sub
jl
stos
jae
punpcklwd
mov
push
mov
jmp
dec
push
sub
add
add
inc
pushl
jno
addr16
stc
xchg
mov
jecxz
jmp
leave
or
loop
dec
mov
cwtl
ja
xchg
or
jg
cmpsb
adc
cmc
ss
mov
xor
pop
xorb
xor
jecxz
dec
mov
icebp
out
inc
adc
subb
mov
es
fsubp
lods
jns
mov
xor
call
out
ffreep
jg
and
roll
sbb
adc
xchg
pop
pop
push
test
sub
and
arpl
cltd
ret
mov
mov
push
fsubp
test
add
push
mov
inc
and
xor
iret
aad
xchg
or
bound
pop
in
dec
lock
push
and
or
lods
cmp
mov
xor
sbb
shlb
sub
inc
ret
cwtl
cmp
bound
lods
icebp
fcoms
jnp
bound
fcompl
leave
push
and
inc
fs
push
fsubr
call
fcoms
mov
inc
xor
push
pop
sbb
and
xor
inc
mov
sbbl
inc
cmp
out
les
cmp
push
out
mov
fwait
cmp
mov
aad
mov
out
pop
sbb
test
js
push
dec
mov
mov
jne
mov
sub
icebp
clc
data16
jmp
mov
xor
test
addr16
mov
push
daa
mov
mov
cld
jecxz
andl
jg
movsl
jbe
in
fnclex
inc
sar
call
insl
jo
testl
stos
mov
andl
mov
fwait
sbb
loop
adc
jmp
push
lds
adc
mul
and
mov
sub
xor
outsb
inc
repnz
fimuls
aaa
dec
cmpsl
push
jecxz
lods
mov
pop
or
fwait
sahf
mov
cs
adc
in
push
pop
mov
mov
es
inc
cmpsb
pop
mov
clc
mov
test
lods
test
sbb
shlb
arpl
add
aas
and
cli
jmp
xchg
sub
jns
stc
pop
push
mov
pop
xor
push
mov
ds
jne
subb
div
and
xchg
mov
add
push
sbb
hlt
add
pop
incl
or
stos
arpl
pop
cmp
imul
push
or
xor
cmp
mov
loope
adc
js
rol
inc
mov
rclb
clc
fdivl
inc
loopne
test
xchg
mov
popf
pushf
xor
in
sub
mov
adc
fdivs
push
mov
dec
push
mov
in
adc
push
sbb
xchg
jnp
mov
add
std
mov
push
cmp
mov
hlt
dec
xchg
div
mov
pop
das
enter
lds
adcl
shlb
or
aam
inc
sbb
push
sub
jns
adc
mov
mov
jns
nop
loope
xchg
callw
adc
add
sbb
add
sbbl
in
push
sbb
loopne
cmpsb
sahf
jno
mov
call
ret
mov
stos
inc
lret
insb
test
xchg
xor
jo
cmc
mov
gs
jmp
adc
ret
in
gs
out
enter
jo
push
push
push
xor
mov
jl
or
outsb
push
mov
pusha
xor
push
fsubrs
daa
cmp
push
enter
repnz
inc
adc
mov
inc
loop
lods
xchg
fidivrs
mov
cmovns
decb
cs
sbb
xchg
and
inc
in
fwait
ljmp
out
faddl
stc
xchg
jge
daa
shll
das
mov
cmp
icebp
shrb
cmp
outsl
gs
jp
mov
jbe
mov
fsubr
mov
rclb
clc
sub
inc
jge
mov
pop
out
dec
fdiv
dec
xchg
and
sub
cmp
out
fsubrs
pop
pop
jl
jmp
lock
divl
or
dec
add
pop
add
das
ficompl
test
sub
pop
sbb
sub
iret
jb
cmpl
dec
mov
xchg
aas
cmp
xchg
xchg
sub
xor
adc
push
push
hlt
sbb
xchg
movsb
push
mov
les
adc
xor
mov
call
jb
sub
xchg
jae
dec
lods
sbb
cs
ljmp
jnp
insb
nop
js
scas
xor
mov
cmpsl
adc
sbb
jle
enter
shll
aaa
jl
mov
push
pusha
jnp
outsb
inc
pop
mov
jnp
mov
add
insb
pusha
js
jg
lock
sbbb
cld
imul
loopne
xchg
int
addr16
pop
mov
jg
cmpsb
jns
orl
jae
xor
push
dec
aam
les
in
scas
or
roll
movsb
push
insl
loope
je
and
out
or
add
jnp
sub
test
mov
enter
sbb
add
jo
je
xchg
cmp
push
and
outsl
lods
leave
dec
jnp
enter
cltd
inc
insb
jne
test
clc
dec
xchg
push
mov
movsl
jge
fiaddl
sahf
dec
adc
in
push
or
mov
push
lea
cmp
outsb
jecxz
sub
fstl
je
adc
ss
or
cwtl
into
mov
iret
push
test
dec
insl
insb
in
lds
pusha
jbe
mov
das
cmp
sbb
je
aam
push
sub
sti
cmc
inc
inc
scas
lods
movsl
lds
cmp
mov
movsb
icebp
add
push
daa
xor
fdivl
mov
pop
mov
xchg
out
mov
add
notl
sbb
xor
xorl
push
aam
movsb
call
mov
inc
inc
stc
fisubs
clc
mov
test
xor
adc
mov
ret
xchg
jmp
push
lahf
add
inc
pop
inc
mov
add
sub
hlt
or
xchg
test
push
test
or
mov
lret
pushl
and
mov
fsubrl
sub
inc
lahf
sbb
xchg
jl
cmp
inc
push
bound
dec
mov
je
int
dec
pop
push
and
or
jecxz
and
je
xchg
lahf
sti
test
or
sub
sahf
mov
stc
sbb
fisttpl
add
mov
icebp
aaa
mov
and
mov
cmpsl
stos
stos
dec
dec
sbb
push
add
add
es
punpckldq
and
jmp
sub
outsb
scas
sub
aad
leave
lds
aam
xchg
jne
or
stos
popl
jo
jp
adc
push
push
or
mov
lea
rorb
sub
or
cmp
lret
xchg
rclb
cwtl
shll
push
dec
and
gs
mov
mov
mov
stos
in
jae
arpl
pushf
fwait
fwait
sub
and
insb
or
inc
lock
jo
sbb
and
outsb
lock
arpl
push
push
bound
aam
int3
loope
sahf
or
push
sbb
dec
cltd
rcrb
stos
lcall
pop
inc
or
lds
sbb
xor
push
xor
pop
lock
adc
dec
sti
mov
arpl
push
or
dec
inc
aaa
cld
pop
lods
gs
push
xor
cmpsl
push
fwait
or
sbbl
sbb
out
les
bound
fdivrl
stc
rcll
xchg
cli
cmpsb
xchg
xor
data16
sub
sti
or
gs
dec
inc
mov
mov
dec
pop
data16
push
mov
or
inc
negl
and
push
and
xlat
mov
mov
subl
xchg
shrl
test
jbe
jae
xor
push
mov
cs
push
repz
rclb
movlps
inc
jnp
pop
into
scas
test
lds
cmpsb
daa
int3
inc
xchg
mov
mov
repz
dec
jge
jp
push
ds
out
in
cmp
icebp
sub
mov
mov
xchg
ljmp
movsl
rclb
pusha
xor
mov
cmp
stc
andl
repnz
into
shll
lods
xlat
nop
jecxz
popa
into
or
lret
push
sbbl
inc
xchg
icebp
inc
movsl
out
imul
cmp
or
sbbl
inc
cltd
mov
jb
sub
xchg
test
adc
test
mov
mov
test
scas
mov
ret
xchg
fsubl
aad
jno
mov
arpl
andl
xchg
sub
xchg
call
mov
rcl
int3
ss
pop
bound
aas
xchg
shr
push
loopne
call
divb
cs
mov
push
add
lret
test
fcoms
jb
dec
imul
add
fcompl
mov
or
ds
mov
xchg
mov
adc
adc
sbb
adcb
jnp
and
push
mov
out
imul
imul
test
out
cmp
sarb
push
mov
flds
pushl
adc
mov
dec
mov
xlat
xchg
aam
or
jecxz
mov
adc
les
sub
xchg
pusha
lret
mull
add
push
mov
mov
or
or
mov
std
lods
push
rolb
sbb
pop
in
xor
popf
ljmp
xor
pop
xchg
mov
mov
iret
add
je
mov
jae
add
aam
xlat
push
pop
xor
mov
mov
jb
in
scas
incb
mov
mov
or
dec
movsl
addr16
lcall
cmpsl
test
stc
aam
cmpsl
in
dec
lods
sub
xlat
push
mov
cmpsb
push
inc
and
xor
pop
ret
outsb
xchg
ret
pop
out
or
jns
lret
push
insb
adc
lods
rclb
mov
jl
xchg
lret
mov
mov
dec
rclb
mov
push
pop
test
inc
scas
sub
mov
into
into
repz
vmread
or
test
and
test
int
fwait
sbb
jnp
xchg
fdivr
rcrb
mov
jmp
mov
call
mov
loopne
inc
test
dec
test
jo
and
addr16
mov
and
sub
sub
jmp
test
inc
mov
jecxz
xchg
and
mov
sti
fisubrs
lea
sbb
sbb
push
fisubrl
mov
lods
ljmp
in
imul
cwtl
test
mov
inc
cmpsl
sbb
bnd
lahf
cmp
xor
xchg
sbb
dec
out
mov
mov
xchg
into
jp
add
inc
rcrl
les
mov
fwait
sub
notl
loopew
xlat
pop
or
pop
dec
pushf
mov
inc
sbb
pop
mov
jae
xchg
test
mov
dec
pop
adc
mov
cmp
sub
repz
push
pop
mov
mov
xor
sbb
mov
dec
iret
add
push
arpl
popf
movsl
iret
outsl
in
cltd
mov
lods
jnp
cld
daa
or
mov
icebp
cwtl
aaa
fsubrl
lret
das
xchg
not
outsb
fidivrl
imul
jne
aad
cmp
insl
adc
mov
mov
imul
mov
or
inc
and
sarb
mov
dec
hlt
xchg
pop
mov
ja
in
adc
loop
push
fs
popa
push
movsl
jo
lods
xchg
gs
filds
xor
push
fidivrs
or
jmp
jbe
push
rcl
and
pop
dec
lds
fildll
mov
fdivr
sar
jecxz
gs
pop
fdivp
add
pop
jbe
js
pushf
aam
dec
fldt
sbb
adc
aam
cmpl
xor
les
lret
mov
rorl
pop
pop
jl
mov
mov
inc
mov
mov
pop
sbb
movsb
aas
adc
push
dec
xor
sbb
pop
pop
lea
and
aas
sbb
push
repnz
adc
sub
repz
sbb
enter
jmp
mov
xor
mov
ss
clc
pop
inc
pop
cmp
pusha
pop
loop
mov
mov
jp
pop
test
pushf
mov
outsl
add
lds
dec
insb
sub
cmp
roll
insl
loope
js
mov
xchg
aaa
enter
or
hlt
insl
iret
adc
into
mov
pop
popl
adc
pop
andb
jl
sti
dec
jge
int
stc
popa
xchg
add
in
inc
addr16
lcall
xchg
addr16
cwtl
inc
add
mov
sub
fsubl
ja
lods
ds
or
lahf
fs
les
jo
pop
in
push
ljmp
pop
jle
mov
hlt
xchg
mov
or
nop
xorb
fisubrs
push
dec
inc
ficoml
nop
mov
dec
fstl
pusha
jbe
push
mov
inc
lret
aam
and
loope
pop
mov
mov
mov
loop
pop
je
push
jmp
scas
mov
fwait
icebp
push
jl
test
jl
mov
pop
mov
xchg
mov
pop
fistps
inc
test
xor
shl
loop
fistpl
andb
add
xchg
sub
mov
jne
mov
test
stc
inc
push
adc
mov
sbb
mov
es
dec
mov
push
fcmovnb
xchg
mov
and
fwait
ljmp
push
mov
ljmp
testb
add
fildl
dec
pop
test
inc
scas
inc
sub
sbb
dec
pop
cmp
mov
lea
mov
push
lock
jne
ret
mov
les
repnz
mov
inc
dec
pop
dec
nop
jbe
mov
push
jbe
push
dec
test
cmp
mov
push
popf
pop
xor
popa
mov
lods
stc
xor
fs
jnp
sub
or
lods
lds
loop
xchg
cld
inc
or
dec
js
adc
sbb
sub
nop
lretw
call
adc
jnp
sbb
push
mov
mov
push
stc
lods
insb
clc
xlat
jecxz
daa
fisubrs
jae
cmp
dec
shll
ds
inc
cmp
jp
push
ja
inc
xlat
push
or
jae
addl
rcl
inc
ret
ja
outsb
adc
jno
lret
push
movsl
inc
add
mov
jmp
out
xor
add
bound
popf
mov
mov
dec
xor
sti
cwtl
bound
insb
test
loopne
das
pop
imul
sub
jg
outsb
frstor
testl
ret
dec
nop
push
or
jl
cmp
pop
sub
and
push
mov
sub
adc
js
mov
xor
das
jo
out
jo
aam
pop
inc
pop
arpl
and
push
sub
sti
stos
sub
test
mov
fistps
jb
or
jg
test
inc
or
dec
in
aaa
push
shl
adc
mov
test
push
jge
imul
daa
or
cs
xor
mov
sbb
dec
inc
pop
in
hlt
aad
push
push
ret
or
cmp
mov
repz
mov
icebp
pop
rcl
mov
sbb
daa
xchg
xor
push
sub
pop
sbb
les
mov
push
ficoml
push
lods
call
iret
pop
mov
in
fwait
daa
imul
pop
sbb
pop
mov
fiadds
cs
cmp
jle
pop
and
dec
in
fs
pop
leave
jle
dec
or
pop
icebp
jbe
insl
dec
arpl
mov
mov
bound
sti
nop
xchg
cmp
jne
fs
sub
in
sbb
js
stc
in
pop
adc
ja
int
movsl
aad
data16
pop
negb
test
loopne
popf
int
sbb
or
orl
adc
inc
jl
bound
fisubrs
pop
xor
push
pop
adc
mov
add
arpl
data16
and
repz
mov
xchg
add
xor
sarb
outsb
out
sbb
mov
lret
cmpsl
orb
hlt
test
lods
push
dec
subb
dec
push
fidivl
sub
jge
inc
pop
fsubp
btrl
mov
xor
les
daa
stos
mov
and
sahf
test
call
push
out
int3
fisubs
dec
out
xor
lods
leave
imul
xchg
imul
jo
mov
xchg
and
imul
maskmovq
sbb
test
call
push
sbb
xchg
cmpsb
int3
ret
fnstcw
lahf
pop
mov
arpl
sub
adc
pop
cld
data16
inc
and
push
sbb
js
fs
mov
cmp
push
pop
loopne
mov
leave
inc
in
xor
in
mov
jg
dec
dec
cmp
xchg
sub
xchg
cmp
and
adc
jns
add
xchg
cs
sbb
xchg
add
sub
test
xchg
push
xorb
pop
inc
divb
ljmp
lahf
es
push
inc
test
fsubrl
and
push
xor
lds
shll
lock
pop
push
push
xchg
in
imul
jmp
mov
cmc
aam
mov
adc
jno
addr16
sub
xchg
jnp
mov
aaa
add
inc
inc
cmc
test
mov
ds
inc
mov
mov
ffreep
push
jge
ja
push
in
adc
jo
mov
jle
in
repnz
dec
add
xor
sub
ret
pop
std
sub
push
jb
aaa
add
shlb
mov
fildl
jo
jp
mov
popf
dec
out
jnp
mov
es
ds
xchg
sarb
movb
shr
mov
mov
setb
sub
les
test
inc
mov
cmp
data16
lods
mov
xchg
sbb
loop
or
mov
jnp
outsl
cmp
jmp
and
add
xor
scas
mov
icebp
movsb
aas
sti
sub
cmp
push
divb
jae
sti
jb
mov
fdivr
mov
push
imul
cltd
enter
movsb
cltd
in
mov
jae
jne
dec
xor
lret
dec
rcll
pop
jmp
mov
shl
ficoms
mov
stc
pop
inc
mov
sbb
movd
mov
andb
pop
sub
imul
or
jns
loop
push
fiadds
sbb
adc
cwtl
cmp
jno
pop
jle
lock
xchg
icebp
nop
insb
jl
ss
cmp
daa
rol
mov
sbbb
jne
jb
icebp
mov
xchg
and
inc
mov
inc
adc
xchg
xlat
sub
mov
mov
data16
mov
sub
ror
arpl
aas
or
sub
sbb
xor
jbe
pop
out
adc
sub
mov
sbb
es
pop
div
adc
mov
lods
pop
pop
pusha
lods
cmp
scas
fstps
clc
stos
and
std
shlb
push
subl
or
dec
scas
cmp
push
push
mov
add
ret
sti
outsl
cmp
xchg
into
push
roll
outsb
cmp
pop
mov
mov
mov
xchg
pop
nop
xchg
adc
mov
add
lods
xor
xchg
cld
leave
mov
in
mov
dec
dec
js
push
inc
dec
push
mov
in
enter
stos
jmp
xchg
stos
dec
test
je
lret
add
dec
sti
xchg
test
lods
pusha
cld
inc
jge
push
mov
fsts
std
inc
and
cmp
and
jno
pop
sahf
insb
js
shl
je
mov
popa
dec
ljmp
jle
out
bound
mov
jne
sub
add
xor
pop
ss
fstl
inc
pop
mov
xor
pop
pop
inc
xlat
xor
mov
std
pushw
add
mov
push
pop
push
sub
inc
loope
inc
fisubrs
cmp
stos
cmp
rclb
stos
xchg
out
cmovg
jmp
cmpsb
test
cltd
adc
pop
jns
push
int3
mov
neg
dec
movsb
and
sbb
negl
pop
sbb
pop
test
xchg
fwait
icebp
repnz
cmp
push
js
dec
cmp
cmp
or
pushf
mov
ja
mov
aam
pop
dec
test
lret
popf
loop
data16
fwait
adc
add
cmp
sub
movsl
es
sub
dec
inc
lret
ret
out
xchg
xchg
xchg
icebp
xor
aas
or
mov
xor
das
adc
pop
inc
aad
aas
xor
and
push
dec
jecxz
add
jbe
lea
scas
and
ljmp
add
test
and
stos
lock
pop
subb
in
filds
xor
xchg
into
test
sub
fcomps
mov
mov
inc
adc
xchg
mov
xor
mov
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
jnp
fbld
pop
jl
shrw
ret
sbb
cmpsb
push
jle
cmp
cmpsb
cltd
fwait
inc
or
jns
mov
nop
ret
loopne
in
and
cli
adc
adc
imul
sub
cmp
fimuls
xchg
sub
js
sti
or
inc
cmp
inc
and
dec
hlt
xchg
push
sub
in
cmp
mov
push
pop
sahf
out
add
push
movsb
ja
push
cmpsl
add
test
inc
loopne
fs
jg
out
and
rolb
push
mov
push
jge
lret
subl
cmp
xchg
sbb
lds
psubd
add
sbb
pop
ljmp
push
or
lahf
jmp
test
sub
cmp
movb
shrl
fsts
leave
inc
outsb
jbe
xor
cmp
or
icebp
pop
dec
jns
inc
outsb
sbb
movsb
mov
xor
aas
pusha
mov
cld
lods
test
insb
fisttpll
shr
adc
xchg
pop
imul
xchg
push
pop
jle
pop
pop
jbe
jle
cli
sahf
sbb
mov
outsl
in
inc
iret
addl
jno
loope
jmp
lods
jmp
mov
pop
adc
sub
mov
push
mov
inc
data16
dec
jmp
rcll
in
pop
adc
stc
outsl
negl
sarb
les
cmp
push
std
lea
mov
lret
cli
into
push
jb
mov
inc
pop
mov
or
jb
imul
fwait
jmp
or
ret
pop
pop
jle
lods
xchg
scas
daa
jecxz
push
das
pop
cmp
and
adcl
or
ret
jbe
loopne
pop
sarl
cwtl
or
pop
sbb
xor
sbb
lods
aam
mov
imull
mov
xchg
out
fwait
jmp
call
jno
pushf
pusha
aad
lea
cmp
cmc
sub
push
fs
push
out
pmulhw
xchg
rcr
stc
outsl
aam
and
out
add
or
sbb
cmp
ljmp
add
jl
adc
dec
sbb
dec
stos
sub
data16
xchg
and
dec
hlt
adc
stos
xor
xor
out
adc
xor
and
jmp
outsb
jno
dec
aas
clc
iret
hlt
mov
jae
mul
cmc
adc
push
push
mov
jge
arpl
out
movsl
jle
push
stc
adc
cmp
popa
sub
pop
lds
movsb
jbe
xchg
int3
or
pusha
inc
mov
mov
cmp
aam
orl
das
mov
out
cmp
or
xchg
movsl
push
xor
sbb
stc
dec
dec
testb
sub
and
je
pushf
or
pop
ret
jge
je
adc
or
popf
ja
dec
jne
sub
xchg
cwtl
xchg
lret
xchg
pop
ljmp
mov
add
fldenv
popf
xor
jmp
lret
push
add
and
imul
add
mov
sahf
add
push
nop
dec
addr16
cwtl
into
stos
jne
insb
loop
inc
jbe
icebp
lds
push
outsb
jl
jg
lock
fwait
cmp
call
sub
and
cwtl
in
out
fwait
xor
mov
aaa
push
push
or
mov
xor
xor
in
push
cmp
je
dec
jg
jl
xchg
mov
push
mov
adc
add
pop
sahf
stos
fadds
jge
imul
lods
jno
fwait
sbb
lret
dec
ja
not
mov
in
xlat
inc
arpl
out
loopne
xchg
test
pushf
inc
data16
sbb
stos
fwait
jae
mov
repz
mov
imul
mov
xor
xchg
and
jnp
jbe
into
ds
lahf
push
dec
aaa
pop
fistpll
inc
scas
adc
or
repnz
lret
mov
sti
add
ret
xchg
pop
dec
sarl
andb
lahf
in
faddl
clc
xor
mov
dec
andl
clc
mov
ffreep
jle
inc
pusha
add
dec
xlat
in
popa
outsb
xor
jae
push
int3
or
fwait
jle
clc
ja
pushf
inc
push
dec
pop
jbe
sbb
xchg
lret
mov
or
cmpsb
sbb
ret
and
jne
cltd
aas
cmp
mov
outsb
xor
adc
mov
jae
push
adc
pop
rcrl
rcrw
movsb
dec
fwait
inc
pop
out
lods
pusha
xlat
test
fisubrl
ja
pop
sarl
in
into
add
and
xchg
sahf
xor
stos
sbb
cmp
arpl
push
push
add
pop
xor
push
cld
push
pop
dec
inc
jns
add
push
movsb
dec
inc
loop
xchg
ljmp
mov
sbb
popa
mov
or
mov
xchg
pop
dec
das
nop
sub
xor
add
orl
daa
fcmovnbe
jl
inc
aas
sahf
dec
into
pushf
sbb
daa
arpl
leave
sarl
pop
call
cs
adc
out
loope
push
mov
popa
push
negb
jne
push
imul
dec
cmc
in
lods
mov
and
push
test
icebp
vsqrtps
jl
xchg
pop
in
mov
jnp
adc
loop
mov
or
dec
mov
shrl
jne
or
jmp
mov
test
bound
addb
loop
lret
faddl
add
xchg
rcll
xchg
insb
xchg
xor
jae
push
jle
in
or
dec
and
flds
addb
jmp
mov
pushf
aad
in
mov
jl
ds
repnz
lds
push
pop
push
mov
cmp
inc
test
mov
ficoms
clc
push
adcl
movsb
std
mov
loopne
pop
in
jp
out
sbb
bound
rcrb
fsts
fadds
sbb
jmp
pop
shll
shl
dec
push
jns
cmpsl
les
jmp
and
sbb
ret
outsl
xor
cmp
sbb
les
sbb
test
ja
ficompl
test
enter
repnz
jle
push
xor
and
stos
jne
xlat
outsb
mov
sti
push
jmp
mov
cwtl
fimull
movsl
dec
incl
or
jge
add
sub
xchg
xor
jp
mov
xchg
ret
fistps
ret
inc
adc
sbb
mov
mov
push
xchg
mov
mov
lcall
dec
cwtl
insl
fistpl
aaa
jge
sbb
inc
mov
rol
pop
aaa
int
pop
cs
add
shr
out
stos
add
cmp
in
sub
dec
cmpsl
in
xor
push
lret
imul
lods
dec
fistpll
add
push
mov
xchg
rcll
aas
sti
popa
loop
rclb
sub
pushl
out
sqrtps
fldcw
xchg
loope
ret
and
enter
ljmp
fistpl
dec
icebp
cmp
and
in
cmp
sbb
jns
jns
cmpsb
push
sbb
in
mov
adc
sub
jle
lock
loope
add
and
cmp
inc
push
mov
cli
clc
sbb
push
adc
adc
cmp
xor
push
jnp
test
lods
mov
ret
je
jmp
dec
and
int
inc
pop
dec
push
xor
ss
in
mov
stos
enter
push
shlb
es
lods
shrl
into
mov
inc
add
push
xchg
adcl
pop
ljmp
xchg
cmpsb
dec
inc
andb
jne
mov
es
sub
adc
das
idivl
sub
aaa
scas
mov
imul
aam
mov
xchg
ds
push
into
int
cli
xchg
and
fisttpl
sti
loop
int
xchg
stos
push
lea
int
mov
sub
mov
mov
mov
test
imul
dec
mov
mov
jp
jecxz
xchg
imul
les
cwtl
pop
mov
jge
and
jne
fcoml
mov
mov
jns
and
pop
xor
cltd
or
jns
cmpsb
test
xchg
jmp
jae
scas
sbb
dec
mov
aas
mov
std
clc
xor
iret
fimuls
lahf
push
in
movsb
sub
sub
and
jo
test
adc
jp
push
imul
sub
cmp
mov
push
xchg
aam
repz
push
in
sub
adc
mov
das
push
mov
sbb
repnz
je
sbb
call
fwait
stos
jo
dec
int
dec
mov
jo
adc
jecxz
cmp
mov
sub
push
or
mov
xor
mov
dec
inc
pop
stos
cmp
push
adc
mov
xor
fidivl
sarb
stc
xchg
xchg
gs
mov
add
add
jecxz
idivl
int
js
movsl
adc
dec
inc
mov
mov
sub
test
ds
ret
jno
inc
xchg
xor
int3
movsl
lahf
fdivs
adcb
es
dec
ret
cmc
dec
lods
cmp
mov
call
and
xor
clc
movsl
mov
jae
mov
dec
inc
fsubrs
roll
mov
aaa
movsl
mov
mov
sub
cli
test
dec
mov
inc
data16
mov
jp,pt
leave
fwait
and
in
or
test
pop
xor
sbb
add
cmc
push
mov
inc
push
out
sbb
xchg
jb
fnop
clc
jae
pushf
sub
and
dec
imul
bswap
in
jnp
xor
add
mov
jl
jb
sbb
ja
mov
imul
ss
insb
shll
sub
iret
loopne
pop
je
hlt
addr16
jmp
pop
ja
mov
inc
outsb
ret
stos
sbb
sbb
dec
mov
jnp
fstps
push
pop
xor
pop
popf
rcrl
jmp
pusha
xchg
adc
jno
add
cli
sub
sbbb
mov
les
arpl
popf
or
and
jae
pop
push
in
dec
lret
and
in
mov
or
lcall
movsl
fistl
add
mov
xor
in
or
xor
add
into
cmp
pop
js
stos
pop
add
loope
cmpl
mov
ljmp
mov
std
jb
push
mov
daa
enter
jnp
jno
je
push
outsb
and
and
mul
push
cli
or
mov
fdivrl
lahf
dec
fnstsw
imul
pushf
jl
mov
jp
test
cmp
test
ficomps
fwait
aas
lahf
sub
xor
cmp
sarl
jecxz
cmp
cmp
mov
adc
mov
pop
fcmovne
push
xchg
popf
or
mov
dec
je
dec
xchg
or
mov
stos
inc
cmp
and
test
jo
out
pop
test
add
pushf
pop
sub
push
cmc
scas
lods
xchg
popa
nop
adc
or
movsl
pop
insl
shll
rorb
xchg
pop
jge
outsb
add
mov
outsl
outsb
lds
jo
xchg
sbb
lea
fldenv
movsl
mov
push
jns
fadds
les
cmp
xorb
std
rcl
adc
xchg
pop
cwtl
pop
lahf
subb
jnp
inc
insb
or
jg
fnstsw
xchg
push
filds
pop
pop
or
lea
sbb
in
mov
or
lret
pop
in
cmp
xlat
and
clc
jnp
push
insb
sbbb
and
and
lock
cmp
scas
insl
inc
push
out
dec
jne
cmp
mov
sbb
adc
or
dec
xor
fwait
inc
adc
lock
jb
loope
in
ds
push
out
movsl
cli
jb
jb
dec
loop
mov
adc
mov
in
into
and
and
pop
push
jnp
xor
imul
mov
js
popa
adc
lea
add
outsb
mov
push
test
fst
or
xor
fs
insl
or
cmp
movsl
insb
jl
mov
inc
popf
lcall
lret
ret
mov
push
ljmp
and
xor
stc
out
or
jb
push
push
xchg
sub
imul
cmp
in
sarb
push
into
xchg
push
push
scas
dec
cmp
xor
mov
mov
xor
sub
xchg
push
std
dec
mov
jae
cmp
or
push
out
jl
mov
pop
repnz
lret
pop
jnp
inc
xchg
fistps
inc
popa
das
adc
cli
outsl
push
inc
imul
sub
iret
hlt
cmc
mov
sbb
xchg
adc
cmp
push
roll
cmp
jo
aas
mov
mov
dec
jbe
lret
fidivrl
mov
rolb
add
sarl
cld
ror
add
jge
subl
sub
xchg
mov
cs
outsl
mov
stos
inc
ds
das
xchg
rcrb
test
xchg
mov
stos
ficomps
in
fwait
cld
cmp
enter
and
push
fst
insl
push
inc
out
popa
dec
cmp
rolb
ja
fcompl
cmc
dec
pop
xor
popf
pop
xorb
stc
pop
xor
stos
inc
and
mov
add
push
pop
ret
icebp
imul
andps
outsb
mov
daa
xor
stos
stc
shlb
js
repnz
sbb
popf
je
movsb
mov
mov
xlat
jge
les
or
dec
pop
stc
je
dec
xchg
inc
adc
cmp
sub
enter
rclb
jo
fnstenv
fwait
shrl
and
pop
jnp
cmc
push
out
jns
popa
jno
xchg
push
pop
jmp
sub
and
aas
mov
ss
addr16
jg
int3
icebp
dec
ja
ss
aad
pop
sarb
gs
inc
pushf
mov
lds
push
jg
push
pop
enter
cmp
xchg
ljmp
jg
push
xorb
push
mov
cwtl
jg
pop
push
mov
movsb
js
xor
sbb
push
aas
clc
add
fadds
andb
fs
cmp
xor
push
jp
push
jmp
mov
repnz
enter
inc
jle
add
sbb
mov
divb
outsl
pushf
sar
add
fdivrl
test
out
cmp
inc
lods
or
adc
push
sub
mov
xor
inc
cmp
jl
cmpsb
cmpsb
push
cmp
lret
push
add
adc
mov
and
push
mov
add
pop
xor
xor
sub
inc
clc
cmp
in
jmp
push
aam
jp
sbb
daa
out
je
divl
aad
dec
data16
jnp
bnd
pop
fisttpll
clc
ficoms
push
dec
push
ss
mov
sub
add
xchg
or
mov
cmc
fstps
inc
adc
int3
push
pop
imul
fistps
ret
cmp
inc
mov
out
mov
fildll
loop
aas
sahf
fisubs
cmp
lret
adc
sbb
pop
les
cmp
mov
into
out
sbb
inc
data16
out
cwtl
jo
lock
cmc
in
pop
mov
frstor
or
dec
roll
aaa
fisubrl
mov
inc
cmp
sbb
out
rcll
push
adc
cmc
and
adc
sti
sbb
or
sbb
add
dec
testb
imul
imul
aas
flds
aas
in
jns
cmpsb
sar
ret
mov
aaa
jle
mov
in
lahf
or
pop
pusha
jbe
mov
xor
jns
imul
jl
inc
shlb
xor
add
sub
mov
imulb
repnz
adc
jnp
sub
mov
push
fs
sbb
cmc
jno
adc
pop
out
sub
outsb
sbb
ljmp
inc
cmp
movsw
push
dec
pop
enter
lds
mov
enter
xchg
jecxz
out
jle
je
xchg
je
inc
mov
imul
hlt
addr16
lahf
cmp
shlb
call
xor
je
in
rclb
popa
inc
push
and
clc
iret
aaa
pop
enter
jo
movsb
test
xchg
lret
xor
add
loope
ja
inc
stc
fs
sub
or
pusha
mov
mov
push
jmp
xlat
loop
sbbb
ja
int
push
mov
sbb
cmpb
sub
push
es
and
je
sub
aaa
jbe
pop
fs
push
sarl
mov
sbb
push
icebp
cmp
adc
daa
je
hlt
andl
out
popa
mov
xchg
mov
jb
loopne
pop
sub
aad
test
fisttpl
mov
test
or
fldt
dec
pop
imul
scas
arpl
int
popf
in
xchg
rcll
loopne
xchg
mov
mov
call
aaa
out
push
xorb
push
dec
mov
xchg
mov
xchg
mov
xor
xor
jb
ja
std
cmp
loope
mov
outsl
sub
xchg
dec
pop
mov
iret
in
push
fwait
xor
adc
push
rclb
lods
test
mov
into
xchg
xchg
pop
mov
das
push
cmp
xor
jne
jnp
add
inc
inc
push
xchg
arpl
push
loope
inc
outsl
adc
mov
je
mov
adc
xor
mov
outsb
dec
sbb
test
mov
movsb
pop
icebp
dec
in
and
mov
xchg
clc
xchg
cmpsl
mov
mov
xor
icebp
ljmp
imul
mov
cmp
ss
gs
mov
arpl
xor
pop
cmp
inc
adc
pop
inc
mov
push
repz
sbb
jae
jmp
dec
pop
lcall
push
dec
lret
into
mov
push
xor
mov
and
xor
sbb
cltd
dec
icebp
test
adc
jbe
cmp
jg
mov
and
sub
xor
cmp
bound
push
adc
sub
int3
jmp
add
enter
push
incb
iret
inc
sbb
jae,pt
jo
loope
aaa
or
cmp
dec
mov
xor
out
pop
adc
pop
mov
mov
push
fs
pop
xchg
ret
add
or
sbb
pushf
fbstp
loope
sbb
push
push
mov
sub
sbb
lods
xor
loop
test
shlb
pushf
jmp
sbb
or
or
or
mov
dec
rcll
aad
and
scas
or
xchg
xor
jp
or
jmp
sbb
mov
push
imul
leave
and
lods
mov
add
cmp
pop
xor
rcr
sbb
or
scas
pop
and
mov
xchg
jmp
adc
jae
es
test
mov
pushf
enter
add
sub
icebp
inc
int3
lods
push
outsb
sbb
fsincos
or
clc
mov
mov
int
push
jne
scas
pop
fwait
dec
cld
jno
adcl
scas
std
push
mov
addr16
dec
xlat
xchg
pop
scas
jno
insb
into
mov
lcall
jo
dec
mov
push
xlat
xchg
push
jle
xor
testl
mov
inc
xor
into
das
and
ret
add
lds
sbb
pop
jb
or
jno
mov
xor
xchg
aaa
add
jle
insl
enter
fidivs
inc
loopne
push
or
mov
inc
daa
int
sbb
xchg
push
repz
aas
xchg
loopne
adc
jne
sbb
jmp
inc
xchg
jns
mov
pop
jecxz
lahf
mov
mov
pop
lcall
mov
outsb
out
scas
outsb
push
sub
test
int
test
out
push
scas
or
addr16
adc
jmp
dec
loop
cld
inc
pop
mov
aaa
sub
push
nop
pop
sub
jge
fucomi
fs
mov
jge
clc
orl
inc
and
sub
add
pop
xchg
mov
sbb
mov
sub
js
es
push
dec
test
jmp
xor
xchg
push
loop
cwtl
and
xchg
and
insb
popf
xchg
stos
in
cmc
imul
loope
sbb
mov
push
add
mov
add
pop
leave
fdivrl
add
arpl
cmpsl
jl
inc
jno
and
into
xchg
cs
pop
and
xor
sub
cmp
call
mov
pop
mov
popf
cmp
call
es
test
mov
mov
dec
popf
out
xchg
pop
add
mov
cmp
int3
fwait
or
xchg
dec
mov
pop
push
mov
mov
jb
test
jns
jp
aad
sti
and
mov
iret
fdivrs
daa
xorl
xor
bnd
imul
out
cmp
xchg
pop
into
sub
dec
push
adc
sbb
pop
mov
cwtl
mov
jp
sti
dec
mov
or
std
test
pop
dec
cmpsl
jno
or
stos
scas
popf
pop
and
aam
stc
dec
xchg
jbe
and
pop
inc
in
outsl
mov
sahf
daa
jbe
dec
sbb
pop
and
int
jo
js
mov
sub
out
adc
inc
mov
adc
rclb
sub
test
jle
imul
hlt
adc
adc
adc
scas
inc
test
sub
jb
sub
test
je
xchg
lret
outsl
fstl
mov
cmpsl
cld
push
pop
popf
insb
push
rorl
dec
andl
or
js
xor
test
frstor
fisubl
je
popf
push
ds
imul
out
inc
ja
test
xchg
sbb
dec
jae
jle
adc
mov
mov
push
dec
cmp
jb
pushf
mov
sarl
cmpsl
xor
push
pop
xchg
into
cmp
jb
notb
jmp
rclb
sbb
arpl
sub
xor
mov
dec
jp
icebp
pop
sbb
fisubl
movsl
out
idivb
inc
cmp
sbb
lds
mov
or
cmp
mov
pop
sahf
popf
shlb
jle
test
test
enter
lret
shrl
and
pop
or
mov
pop
fcmove
aam
iret
mov
addb
jbe
pop
adc
rcrl
in
and
pop
repz
pop
movsl
sbb
pop
cs
out
ret
jl
or
or
out
lock
js
arpl
loope
aam
enter
test
rorb
filds
push
mov
jg
fldenv
mov
testl
inc
mov
sub
jg
sbb
lds
jg
jge
xchg
mov
sub
adc
jg
fsubrl
lods
jl
mov
test
adc
push
popa
pop
mov
push
lock
ja
es
cmp
jg
sbb
jo
loop
cld
cmp
loope
mov
cmp
aaa
sub
jno
mov
ja
mov
pop
inc
and
push
and
mov
inc
into
iret
add
fwait
in
add
xchg
rcrl
orb
push
aam
jmp
ds
aas
nop
pop
dec
inc
imul
imul
lods
outsl
jns
push
enter
push
das
pusha
fmul
xor
sti
into
pop
add
lahf
jg
insl
das
data16
pop
push
pop
lock
jp
mov
sub
stos
pop
mov
aad
or
mov
movsl
mov
mov
mov
fwait
xchg
adc
push
rorb
add
push
push
cltd
and
xor
in
add
inc
subl
jbe
jmp
bndstx
outsb
in
popl
orl
cmp
aaa
aam
cwtl
les
inc
push
xchg
jae
xchg
daa
mov
sub
pop
pop
mov
mulb
sti
and
sub
jns
scas
adc
push
mov
arpl
sbbl
jns
or
faddl
mov
xchg
xchg
xor
pusha
jne
push
mov
push
jno
add
inc
cwtl
and
lea
setg
into
ficoml
ss
out
inc
sti
lds
xchg
dec
xchg
dec
js
test
cmpxchg
pop
mov
sbb
icebp
adc
adc
hlt
out
cwtl
in
shrb
mov
andl
cli
in
jb
inc
jno
clc
jecxz
clc
frstpm(287
add
inc
not
lods
xchg
jg
int
or
je
mov
ret
sub
lret
call
and
out
cmpsb
dec
mov
mov
les
and
or
aad
jg
cmc
jne
push
xor
xor
js
arpl
jbe
sub
int
dec
test
mov
jo
pop
fneni(8087
pop
mov
and
pop
imul
cltd
cmp
scas
mov
push
jle
imul
clc
js
test
int
fcomp
sbb
nop
mov
mov
inc
push
sbb
outsl
sbb
test
sub
xchg
xchg
or
flds
inc
dec
xchg
xor
cmp
loope
fwait
iret
loope
mov
jecxz
pop
push
inc
movb
mov
mov
hlt
insb
shr
test
std
push
push
fldcw
imull
sarl
insl
add
ficoms
push
pop
iret
out
adc
test
sub
mov
jae
inc
ficoml
jmp
aad
fisubs
sti
inc
shrl
lahf
pop
incl
lea
pusha
loopne
inc
ss
shrb
je
popa
jge
push
mov
nop
loopne
mov
cmc
pop
ret
js
dec
out
push
filds
icebp
je
dec
jg
iret
mov
addl
test
ret
je
mov
push
pop
mov
das
lock
mov
mov
lahf
ds
push
jo
out
cld
dec
gs
jae
lea
mov
pop
cld
fisttpl
mov
sub
call
lahf
dec
mov
push
push
inc
pusha
push
xor
bound
ret
mov
cmp
jmp
and
dec
jmp
inc
jecxz
sub
mov
sti
movhps
popa
push
mov
in
mov
cltd
cmpl
and
lret
mov
stos
test
jecxz
push
icebp
pop
xor
mov
push
sahf
repnz
call
jmp
dec
dec
xchg
mov
jo
arpl
sbb
push
xchg
inc
dec
pop
mov
inc
fwait
sub
inc
fimull
sub
push
cmpsb
mov
imul
push
xor
dec
mov
stos
pop
dec
add
cmp
dec
sub
rorl
inc
pop
in
fs
dec
sbb
push
enter
xchg
rclb
pop
popa
mov
xchg
jbe
sub
enter
sbb
jp
sahf
out
sbb
adc
and
jmp
jno
mov
cmp
addr16
jnp
ja
ret
mov
jbe
pop
push
cmp
jmp
pop
stos
iret
out
int
lcall
lcall
pop
and
jle
sub
daa
loop
inc
cmc
outsb
xchg
push
mov
push
out
jne
mov
xor
fs
int3
adc
mov
add
or
fisubl
mov
icebp
mov
push
out
mov
inc
xor
mov
scas
xchg
push
pop
cmp
mov
inc
pusha
leave
shrl
mov
push
gs
xor
cmc
push
data16
and
js
ret
mov
xchg
xor
adc
fstps
xchg
test
aaa
aaa
dec
xchg
outsb
filds
pop
test
int3
mov
dec
imul
sbb
pop
gs
cs
adc
or
pop
and
insb
gs
xchg
in
inc
push
out
push
incb
fildll
mov
shll
daa
jl
xor
dec
sbb
inc
mov
js
popf
shll
sti
stos
cltd
pop
push
pop
call
cmc
xchg
add
push
jmp
lret
jns
movsb
cmpsl
jne
mov
pop
jbe
nop
aam
adc
cmpl
jno
xchg
ret
mull
aad
jno
popf
movsl
mov
ret
ja
scas
sbb
push
aad
sub
rcll
mov
pushf
jb
cmpsl
and
mov
stos
lods
in
sbb
mov
test
sahf
sahf
das
jne
xor
sbb
out
cmp
add
stos
add
dec
xor
push
dec
xor
test
adc
out
notl
outsl
mov
push
xor
dec
js
mov
and
imul
jno
sub
fs
je
xchg
dec
and
jmp
mov
insl
stos
jmp
xchg
ljmp
hlt
mov
cmp
or
rol
xchg
dec
mov
xchg
mov
pop
dec
adc
push
fnstenv
dec
mov
dec
push
pop
sub
inc
rcrl
mov
std
ret
dec
loopne
pop
sub
fsubrl
movsb
inc
add
fwait
mov
jb
movsl
loop
push
and
lods
add
jmp
and
daa
pop
lcall
jg
out
in
mov
sti
incb
jp
push
scas
adc
pop
je
jne
or
stos
lret
aas
jne
and
aam
test
xchg
cld
inc
sbb
out
push
lock
test
pop
popa
repz
je
outsb
mov
sub
in
adc
inc
lods
or
jl
hlt
stos
mov
mov
iret
jg
inc
inc
cmp
movsb
push
pushf
scas
jo
insl
ret
pop
loop
scas
xchg
sar
pop
mov
jecxz
cmp
and
dec
fnstsw
ljmp
andl
adc
orl
subb
add
movsl
jae
std
jbe
adc
and
ja
mov
jae
fs
addb
push
imul
rol
and
sarl
lock
fadds
testb
mov
xlat
xlat
mov
dec
xor
in
lods
in
pop
sahf
es
jl
sbb
in
stc
push
mov
sti
jns
add
lods
cmp
insb
sti
mov
shl
iret
jae
loope
sbb
js
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
fsub
fdivl
int3
jl
inc
pop
jl
fildll
fs
cltd
dec
testb
and
jge
js
pop
pushw
arpl
scas
push
insl
inc
inc
rclb
or
test
mov
arpl
push
dec
inc
testb
loop
testl
icebp
insb
xor
mov
jns
jbe
pop
adc
sar
sbb
push
xchg
mull
mov
and
pop
mov
stos
sub
push
xchg
jb
xor
popf
cli
xor
pop
pushf
cmpsl
adc
mov
cmp
dec
and
mov
cld
mov
push
push
add
scas
call
pusha
cmp
mov
dec
mov
lods
mov
lcall
data16
add
sbb
pop
jmp
xchg
fs
icebp
xor
push
sbb
cmp
je
test
jecxz
lahf
movsb
mov
jbe
inc
shlb
stos
inc
push
sub
dec
out
std
jmp
divl
adc
dec
mov
fists
fcomp
push
fsubl
mov
cmpsl
cmp
aas
test
enter
fisubrl
sub
mov
sahf
cli
mov
and
scas
frstpm(287
mov
sahf
shll
repnz
cli
push
add
mov
add
data16
sbb
add
add
pop
mov
adc
out
pop
stos
xor
insb
fucomi
fcoms
xor
idiv
insb
push
cmp
mov
fwait
mov
inc
sbb
cltd
idiv
dec
orl
and
add
mov
test
xor
fs
sti
loopne
jg
bsr
aam
scas
push
mov
roll
movsb
fnstenv
test
outsb
sub
add
inc
aaa
and
imul
fidivl
mov
mov
pushl
mov
sub
pusha
pushf
mov
dec
icebp
das
and
loope
mov
scas
gs
jmp
jno
jae
loop
and
jne
add
les
mov
mov
jmp
lods
pop
push
mov
gs
add
adc
mov
xor
into
pop
dec
out
adc
out
push
and
mov
xchg
jg
int3
cmp
es
xlat
mov
xor
cltd
shll
mov
jnp
lret
adc
subb
mov
or
fwait
mov
xor
outsl
sbb
scas
mov
scas
mov
fadd
fnstcw
cmp
mov
xor
outsl
dec
jge
mov
pop
test
or
andb
rorb
dec
lcall
pop
sahf
cmpsb
or
bound
add
insb
pop
int
inc
subl
push
pop
lds
add
pop
push
mov
mov
add
inc
js
xlat
mov
cmp
add
shrb
or
inc
aas
sahf
xor
ds
mov
jbe
movsl
outsb
mov
shrl
mov
sbb
sbb
icebp
enter
test
or
sub
dec
pop
inc
mov
mov
sbb
jne
pop
jmp
test
sub
mov
mov
neg
ja
inc
cmpsl
testb
fstp
adc
or
fidivl
adc
pop
xorl
lods
fwait
push
add
fbstp
xlat
lea
cmpsb
pusha
imul
sbb
cli
lret
push
lahf
xor
adc
sub
mov
les
push
leave
cli
jp
inc
leave
aad
add
pop
es
divl
pop
scas
mov
lock
jle
sbb
fldcw
and
leave
sti
in
and
sbb
in
xchg
ja
sbbb
mov
xor
pop
and
and
adc
mov
btr
shll
mov
cld
mov
stos
ret
cmp
daa
mov
sub
xor
sub
dec
enter
sbb
adcb
dec
add
lahf
xor
test
ljmp
loope
leave
outsl
sub
cmp
cmc
and
insb
mov
adc
aas
mov
ds
lret
cmp
and
mov
mov
outsl
xchg
por
cltd
inc
or
mov
push
sbb
enter
fists
jne
jo
mov
popf
mov
data16
mov
inc
inc
pop
cmc
sbb
add
test
ljmp
pop
shll
dec
adc
lahf
mov
int
and
lahf
mov
add
mov
insb
shlb
sub
jg
cltd
push
sbb
test
pop
dec
rcrl
push
outsl
jb
out
mov
lock
cli
jb
call
add
loop
iret
out
jmp
push
leave
pop
xlat
shll
lcall
push
data16
fidivl
sti
lods
ljmp
out
insb
cmp
inc
xor
in
idivl
das
pop
push
sbbb
dec
mov
pop
ret
icebp
stos
mov
dec
push
xor
ja
inc
or
mov
imul
jl
push
ss
sub
jecxz
mov
fidivrs
cwtl
pop
sub
pop
or
inc
out
repz
jle
mov
sahf
inc
xorl
hlt
ja
lahf
imul
imul
cli
aam
dec
push
xchg
mov
or
xchg
xchg
cltd
sarb
push
clc
clc
adc
cs
shrl
mov
pop
adc
or
mov
dec
jmp
push
aas
cmpsl
cmc
inc
in
add
adc
shll
pusha
sbb
jo
xor
add
fs
cmp
ds
push
xlat
lods
push
imul
xor
or
imul
adc
jbe
aaa
jle
aas
scas
stos
es
and
mov
jl
adc
cltd
popa
ja
std
stos
insl
fs
adc
aas
mov
popf
imul
cmp
and
andl
push
fistps
add
fstps
push
xchg
push
mov
nop
cmpl
mov
pop
push
lret
out
scas
push
xchg
mov
movb
jb
lea
pop
or
and
xchg
mov
mov
mov
cmp
push
mov
jp
daa
pushf
aam
cmp
jnp
and
inc
lods
enter
sub
insb
mov
daa
add
jns
dec
sub
mov
in
inc
pushf
aad
rcll
and
push
jmp
xor
lods
cli
popa
popf
or
test
ss
mov
mov
enter
xchg
mov
fwait
gs
xchg
cmp
dec
scas
fcompl
dec
negb
lret
insb
dec
or
pop
rorl
in
adc
mov
daa
rcrl
cld
push
lret
aas
or
xchg
clc
test
xchg
inc
inc
mov
and
rol
cltd
ds
adc
lret
sub
addr16
mov
fs
dec
jp
addl
movl
jmp
sbb
movsl
ljmp
lahf
sti
testb
sub
idivl
lods
xor
out
out
xchg
out
js
or
jg
push
xor
mov
test
lret
shlb
repz
js
sub
jo
adc
shrl
cli
sbb
rcr
scas
jb
movsl
popa
pop
pushl
dec
aam
jno
popf
imul
das
pop
xor
iret
adc
or
mov
test
faddl
iret
add
lods
cmpsl
inc
mov
shrl
orl
repnz
xor
dec
jle
adc
ja
adc
push
cld
movsl
dec
fstp
xchg
testb
push
leave
es
fdiv
mov
mov
sahf
pop
ret
lock
pop
xchg
cld
mov
ucomiss
adc
mov
out
pop
add
lock
lea
add
test
dec
cmp
sub
mov
pop
aam
rorl
nop
imul
cmp
cmp
sub
pand
xor
push
mov
les
movsl
jl
and
push
pop
test
shll
aaa
ror
lods
add
push
in
and
cmp
mov
and
dec
lods
push
cmp
iret
sbb
rorl
jb
push
or
out
shl
lret
xor
jle
fucomp
jno
push
pop
mov
outsb
adc
imul
in
jae
pop
push
fimull
cmp
rorl
sub
pop
cltd
mov
insb
mov
lahf
aas
movsb
rolb
pop
fldt
dec
push
enter
xchg
jge
jge
push
cmp
xchg
sub
lahf
dec
test
stc
and
scas
mov
rcr
sub
pop
fcoms
mov
fidivl
mov
and
cmp
jl
push
repz
pop
in
ficomps
sbb
cwtl
nop
jle
sub
mov
lods
pusha
xchg
outsb
aas
in
lahf
adc
fcmovnu
lods
ret
or
sbb
lret
call
add
popa
dec
incb
inc
mov
cld
jne
jbe
jecxz
enter
add
out
add
aaa
inc
ret
js
pop
std
jge
sbb
rolb
lahf
inc
xchg
bound
xchg
inc
test
sub
push
mov
jecxz
xor
aas
clc
je
push
pop
and
sbb
sub
xchg
inc
cmc
stos
push
mov
cltd
imul
fucomip
adc
push
ret
repnz
pop
mov
movsl
ret
adc
sub
inc
and
xchg
int
ds
push
push
fs
jl
mov
lret
or
ficoms
xchg
rcrb
push
pusha
mov
test
xchg
mov
test
jge
pushf
ds
push
xchg
aam
fadd
pop
in
std
lods
xchg
mov
sbb
test
sub
test
test
out
add
mov
cmpsb
stos
je
cmp
test
dec
out
cmp
push
imul
dec
daa
hlt
pushf
mov
lds
cmp
xchg
xchg
push
inc
cmp
adc
rorb
mov
jmp
inc
popa
pop
lds
std
jno
add
dec
std
test
mov
in
push
sbb
test
dec
gs
incl
mov
cld
icebp
mov
inc
pop
scas
iret
mov
out
push
dec
fdivrs
popa
mov
fwait
sbb
mov
cmp
sbb
push
sbb
movsb
lods
bound
cmpsb
lock
je
mov
add
push
cmpb
int
mov
mov
mov
pop
addl
lret
dec
sbb
xchg
sbb
scas
adc
add
mov
int
pop
sbb
lods
and
mov
mov
dec
ja
push
cld
jle
leave
ficoms
lcall
sub
mov
and
mov
int3
pop
dec
loopne
add
and
int
bound
push
jno
fcmovbe
filds
gs
mov
adc
or
insl
xlat
cltd
push
imulb
cmp
les
shrb
outsl
dec
dec
jo
jle
add
pop
push
jb
leave
ret
fildll
adc
xchg
xchg
scas
cmpl
jae
xchg
js
adc
cmp
jmp
dec
outsb
and
sti
push
sub
jbe
sub
xchg
movsb
fcompl
push
cmp
or
inc
push
sarl
aas
imul
mov
jp
or
jb
sub
or
js
mov
jae
popfw
ret
cmc
add
dec
ja
mov
stos
mov
hlt
dec
or
mov
fs
mov
pop
mov
test
mov
out
jno
ja
ss
and
inc
jne
sub
inc
and
cli
pop
mov
pop
cmp
jns
inc
xor
inc
imul
es
mov
clc
jns
test
imul
push
push
leave
test
adc
sti
cs
cmpsl
mov
jnp
add
cs
adc
mov
mov
pop
or
repz
cmc
lock
aaa
push
sbb
mov
sub
jb
push
dec
clc
out
int
ljmp
xor
imul
aas
adc
rorl
cltd
ds
aas
sbb
mov
push
imulb
test
imul
push
popw
or
jl
and
adc
pop
pop
push
pop
cld
push
inc
xchg
and
shrl
mov
mov
push
clc
gs
stc
lds
sti
lcall
or
mov
gs
adc
jl
aad
shlb
cmc
push
lds
xor
push
sarb
mov
or
cmp
mov
push
add
or
adc
and
hlt
nop
cmp
in
orl
mov
aaa
lcall
rcl
jbe
or
mov
cmp
mov
jecxz
lret
adc
les
push
int3
mov
call
xor
test
xor
adc
and
xor
int3
mov
mov
ret
test
xor
sub
xchg
fs
cmc
xchg
int3
aaa
cmp
mov
jne
test
notb
push
push
cmp
fnstsw
xor
in
push
mov
pop
inc
es
in
faddl
mov
in
aaa
mov
sbb
cmpb
inc
pop
push
stc
out
sbb
inc
mov
mov
add
outsb
hlt
xchg
int3
or
mov
and
test
lea
out
inc
pop
jle
and
push
add
into
test
lock
fwait
aaa
inc
inc
or
xor
sbb
xchg
push
lods
inc
mov
lret
mov
mov
dec
subb
rcrl
jno
xchg
inc
mov
or
popa
dec
mov
pop
xchg
sub
mov
push
test
rcr
xchg
lods
or
mov
loopne
and
enter
aad
divl
add
stos
jne
data16
dec
fwait
sbbl
mov
mov
push
lods
adc
push
mov
in
mov
sahf
shl
cmp
pop
inc
add
cli
inc
lods
aas
dec
or
adc
sbb
out
popa
movsl
fsubrl
cmp
enter
xchg
stos
repnz
mov
cld
aad
loopne
clc
std
lcall
mov
push
hlt
loopne
inc
jmp
cwtl
mov
mov
cmc
popa
jae
ds
in
adc
adc
hlt
lahf
push
add
fs
sbb
les
test
fadd
pop
fs
pop
aas
ljmp
jg
cltd
cmpsl
or
dec
shlb
pusha
pop
fidivl
pop
sahf
aam
adc
repz
pop
dec
fs
cld
push
inc
test
aad
into
ss
int
nop
js
push
ret
inc
xchg
std
jbe
addb
jl
dec
sub
loop
jo
push
dec
or
cmc
sbb
insl
pop
insb
pop
xor
and
aaa
sbb
cltd
out
xor
pop
inc
adc
int3
loope
repz
clc
mov
fistpl
cltd
data16
xchg
repz
cwtl
adc
pop
stos
lahf
popf
jne
mov
mov
xor
pop
mov
out
dec
test
aas
mov
fsubr
sbb
xor
rolb
add
push
enter
cld
mov
sbb
mov
lret
mov
dec
in
dec
arpl
in
es
repnz
or
lret
mov
mov
mov
and
mov
mov
push
sbb
xor
popl
lock
add
mov
nop
xchg
bound
mov
int3
sbb
dec
and
lock
cmp
add
fs
fdivrp
push
arpl
sbb
sbb
pop
leave
add
lods
in
lds
or
fcompl
push
icebp
jle
sub
das
mov
out
int
mov
adc
insb
cmpsl
xor
iret
lret
push
push
or
and
or
mov
mov
sahf
xchg
inc
mov
pop
jmp
aas
and
push
mov
and
cpuid
sbb
mov
sbb
hlt
icebp
jno
xchg
cmp
xchg
xlat
aas
push
pop
pushf
addr16
add
insl
jae
mov
mov
testl
loopne
mov
push
and
adc
stos
inc
sahf
or
push
es
out
inc
ljmp
sbb
xchg
mov
mov
bound
out
adc
add
sbb
jbe
das
jne
sub
or
mov
sub
jnp
xchg
pop
std
adc
fsubp
dec
je
roll
int3
pop
mov
test
das
stc
inc
andb
orb
ror
lret
mov
mov
cmpsl
push
jne
jge
test
push
xchg
int3
mov
int
inc
cmpsb
or
xor
xlat
pop
imul
inc
nop
out
dec
js
pushf
outsb
jns
push
xchg
sti
adc
adc
push
daa
ds
mov
test
dec
pop
int
pop
push
inc
jbe
test
sub
xchg
mov
hlt
add
push
add
mov
or
out
dec
ja
ja
and
lock
ret
mov
mov
and
gs
dec
add
dec
insb
mov
repnz
mov
les
es
inc
mulb
test
sbb
mov
js
into
mov
lahf
in
cli
mov
mov
loop
mov
ss
lods
xchg
adc
xor
lcall
cli
adc
jmp
sbb
pop
sub
sbb
ss
pop
sahf
xor
adc
out
mov
out
fsubs
adc
scas
fs
jb
jle
or
cmp
push
jg
cmp
dec
mov
xchg
jne
bound
jp
cs
nop
inc
or
frstor
pop
outsl
mov
cmp
xor
movsl
dec
ja
pop
jp
cs
cli
inc
add
or
jmp
jge
sbb
or
push
add
jb
sbb
ret
mov
lcall
cmp
mov
adc
add
ret
dec
dec
mov
in
insl
xor
insl
jbe
jle
mov
or
push
push
movsb
into
pop
pop
pop
push
jne
mov
sbb
dec
cmc
sbb
push
mov
pop
cmpsb
and
push
cmp
mov
xor
pop
ss
xor
mov
les
mov
cli
mov
popfw
push
push
lcall
and
mov
sub
push
outsl
xchg
jno
sub
popa
aaa
sbb
test
dec
andl
cmp
add
jno
fcomi
or
ds
fisubs
fadds
jns
lahf
iret
mov
out
jno
pop
into
sahf
inc
cs
mov
jmp
push
outsl
push
roll
int3
bound
iret
imul
les
adc
jmp
jmp
mov
lods
les
mov
lahf
adc
pop
mov
iret
stos
jns
add
mov
dec
push
xlat
xor
adc
cmp
adc
mov
mov
enter
pop
lods
or
xchg
sbb
sbb
sbb
mov
dec
addb
or
lcall
js
mov
mov
and
jbe
xorb
jb
mov
cmp
lret
rolb
lock
xchg
outsb
call
sub
mov
fninit
jmp
fldl
test
pop
xor
sahf
into
lret
fs
in
call
cmp
adc
lds
push
xchg
mov
insl
dec
arpl
jo
call
push
popa
xchg
mov
and
scas
and
adc
loope
jle
inc
leave
mov
int3
and
and
cmc
mov
push
ljmp
mov
sub
ja
loopne
call
std
and
daa
mov
push
xchg
sbb
andl
push
out
popf
push
push
mov
fadds
sbb
adc
and
cmp
insb
jo
jae
dec
jl
pop
js
ljmp
popf
lret
and
xorl
insb
scas
mov
dec
pop
fistpl
sub
repnz
out
stos
pusha
xchg
xor
sub
mov
dec
push
xchg
fmull
push
jmp
shlb
aad
pop
push
cmp
cmp
sbb
lock
arpl
cld
dec
test
test
in
push
mov
and
jmp
inc
arpl
mov
mov
cmp
fstl
dec
jp,pt
lahf
cmp
push
xchg
repz
leave
mov
cmp
int
out
mov
sub
repnz
or
mov
jecxz
pop
sbb
pop
xchg
out
jg
and
je
mov
xchg
lcall
aaa
mov
aas
shll
rcr
sub
add
pushf
push
xor
insl
mov
sub
imul
mov
lret
push
and
xorb
push
or
lcall
adc
les
xchg
std
pop
jns
xchg
test
xor
xor
repnz
pop
dec
cmp
or
sbb
jg
adc
scas
and
dec
mov
fwait
push
outsb
leave
xor
mov
inc
inc
mov
aaa
jle
rcll
sbb
and
add
cli
pop
cmp
lods
test
andl
xor
pushf
enter
sbb
cmp
nop
pop
cmpl
xchg
xchg
pushf
push
cld
out
aad
xchg
fldenv
cmp
ljmp
shll
inc
orb
daa
std
cmpl
out
out
ljmp
jo
insb
push
sahf
mov
sti
sbb
lea
jo
iret
popf
mov
lret
outsb
xor
fldt
push
mov
add
out
sbb
push
icebp
leave
stos
xchg
cmp
ss
int3
xchg
sbb
lea
cmp
sub
xchg
js
sahf
cmc
lret
or
arpl
mov
and
fistpl
sub
jns
jbe
daa
xor
in
movsl
gs
cmp
mov
lods
xor
inc
lea
roll
sti
xchg
lods
icebp
cmp
mov
inc
and
mov
sub
idivb
xchg
cmp
adc
add
mov
sahf
outsb
cmp
xchg
xor
push
jg
sbb
inc
adc
test
pop
outsl
xchg
mov
dec
jle
orb
leave
int3
mov
sbb
out
push
push
or
ljmp
mov
mov
lret
cmp
imul
pop
sub
in
xchg
std
push
mov
scas
mov
sbb
lea
outsb
clc
add
and
sbb
in
xchg
mov
into
add
testb
mov
movsl
fldcw
mov
cltd
or
pop
adc
je
adc
fimuls
inc
daa
pop
pop
lcall
mov
int3
sbbl
aam
mov
cmpsb
aam
xchg
cmp
mov
call
div
push
xor
mov
icebp
lods
mov
mov
lcall
test
xchg
ret
inc
int3
addb
add
enter
and
mov
insl
sar
xchg
inc
mov
std
dec
mov
mov
or
fwait
lods
lods
mov
mov
jns
cmpsb
dec
push
loope
iret
mov
inc
or
push
stos
or
sub
mov
gs
ss
icebp
testl
jg
cmp
aaa
xor
cmp
sbbb
add
sub
test
imul
jo
jle
xlat
xor
xchg
xchg
cld
mov
lods
inc
in
sahf
lcall
movb
xor
push
leave
ret
sbb
xchg
cmp
popa
pop
lret
lds
xchg
xchg
shll
add
fsubrl
ja
sahf
test
xchg
sbb
add
popf
cmc
mov
ret
test
mov
pop
mov
push
jbe
pop
or
adc
cmpsb
mov
aad
test
repnz
call
outsb
subl
pop
push
cwtl
inc
stc
push
adc
roll
mov
jbe
pop
jge
inc
adc
push
cmp
repz
add
cltd
insb
mov
xchg
bswap
sbb
push
adc
icebp
and
ret
or
call
push
imulb
lds
cld
idivb
inc
jge
inc
gs
es
out
addr16
dec
adc
out
mov
mov
stos
mov
pop
rol
pushf
pop
and
jno
fbld
sub
or
repnz
jp
clc
inc
je
test
push
imul
fsts
xchg
and
mov
push
lret
inc
push
or
idiv
push
mov
mov
and
test
add
frstpm(287
lret
mov
add
aas
pop
loope
add
sti
out
cmp
ret
xor
dec
xor
pusha
push
out
test
into
mov
stc
dec
lods
lods
rol
and
push
mov
icebp
inc
sarl
ljmp
cwtl
scas
fstl
push
test
imul
outsb
cmp
rol
imul
sar
or
in
lret
cltd
insb
into
inc
jae
mov
sahf
xlat
mov
rorb
cmp
push
or
adc
cmp
lcall
and
fnstsw
rorb
adc
ret
push
test
and
gs
loop
mov
and
add
push
push
sub
add
orl
xchg
mov
pop
clc
jbe
pop
mov
scas
xor
lcall
push
test
pop
ret
jo
jge
movsb
iret
stos
cs
mov
mov
or
stos
push
and
adc
jle
xchg
sti
mov
scas
out
insb
cmp
jg
fldcw
cmp
pop
pop
xor
inc
in
adc
fs
jg
cmp
cmp
mov
test
cmc
jae,pt
and
outsl
lret
mov
cwtl
lods
scas
cmpsb
mov
inc
dec
fs
lahf
cmp
xchg
ret
inc
add
jnp
cmp
loopne
mov
pop
pop
mov
popl
sub
lods
rcl
test
cmp
pop
enter
pop
ja
mov
add
lahf
dec
xchg
mov
cmp
xchg
cwtd
adc
fnsave
je
movsb
add
daa
mov
mov
outsl
aad
je
insb
sub
xchg
jl
push
jp
mov
call
sbb
xchg
jne
xorb
mov
sbb
hlt
iret
jns
or
pushf
clc
jbe
sbbb
mov
mov
xchg
aad
ljmp
sub
aaa
cmpsl
repnz
push
push
add
sbb
outsl
negb
sahf
insl
hlt
inc
jg
add
and
xchg
sbb
push
inc
mov
lcall
inc
xchg
lret
fdivs
jecxz
pop
mov
fs
mov
fxch
addb
stc
xchg
js
mov
mov
es
sub
bound
mov
fs
cld
imul
pop
mov
out
arpl
or
xchg
inc
lret
fcompl
inc
xrelease
scas
cmpl
in
sbb
fidivrs
sbb
adc
or
std
inc
lahf
test
jne
adc
jge
push
xor
cwtl
shl
cmp
fsubrs
sbb
dec
mov
xchg
jg
testb
lds
arpl
push
push
add
pop
outsb
icebp
je
test
scas
push
mov
add
push
ss
inc
mov
dec
fnsave
sub
fsubrl
cmpsb
nop
and
mov
in
dec
in
mov
je
repnz
fistps
iret
loopne
xor
enter
xor
sub
call
mov
jbe
sbb
leave
sub
jecxz
inc
cmp
mov
inc
adc
dec
jecxz
daa
or
mov
or
fs
aaa
packuswb
repnz
jbe
mov
add
ds
mov
push
jl
lcall
ljmp
dec
inc
mov
mov
mov
enter
dec
aas
mov
cltd
stc
dec
pop
pop
mov
xchg
pop
or
inc
lods
int3
enter
pop
pop
cltd
test
jb
cmp
xchg
mov
dec
movsl
adc
leave
shl
sbb
xchg
in
add
xchg
pop
ja
cmp
call
rolb
movsl
outsb
pop
add
clc
sub
pop
xchg
aas
xchg
mov
and
pop
push
rorl
pop
dec
adc
out
xchg
out
xchg
sahf
les
test
popf
adc
lds
xor
adc
sub
call
cmp
les
adc
cmp
push
cmc
adc
sbb
subb
xor
mov
and
call
test
enter
inc
lea
dec
mov
push
repz
fisubrs
sub
adc
dec
orb
dec
lea
push
inc
ds
mov
add
or
ss
movsb
push
call
xor
or
popa
pop
sbb
leavew
sub
sbb
mov
cmp
pop
xor
adc
clc
dec
push
addr16
fcomps
lret
jle
mov
int
iret
mov
bound
dec
mov
rcrl
sbbl
leave
fcomip
xor
xchg
jno
dec
lcall
cmp
push
lret
pop
stos
ret
pop
nop
mov
lret
sahf
insl
std
aas
inc
aad
cwtl
dec
insb
out
mov
jmp
jnp
jo
lahf
test
push
in
loopne
cmp
jne
jne
shr
pop
mov
insb
inc
push
xor
into
nop
mov
jmp
pushf
loop
stc
mov
stos
sub
jno
cmp
sub
or
stc
adc
ja
test
mov
rcrl
inc
add
loop
add
push
jb
adc
data16
sahf
adc
dec
add
or
orb
shll
push
fstpt
dec
mov
lock
xchg
lcall
lea
mov
pop
aam
sub
adc
cmpl
sbb
js
sub
sub
pop
ret
cs
outsl
mov
cmp
frstor
dec
cmp
adc
ja
movsl
ret
ret
mov
test
jle
je
pop
enter
cmp
cmp
mov
jbe,pn
hlt
lret
inc
lds
xchg
jne
push
shlb
jge
call
lcall
in
dec
or
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
jae
je
inc
scas
jl
inc
pop
jl
test
daa
std
dec
sbb
cmpsb
ret
xchg
mov
or
ljmp
pop
xchg
js
dec
or
inc
cmpsl
lock
in
repnz
pop
sbb
lcall
pop
sbb
inc
stos
mov
and
jbe
and
mov
sub
add
mov
mov
mov
xchg
je
jb
leave
push
rorb
dec
and
mov
adc
xchg
cmp
cmp
sahf
add
stos
inc
push
xor
inc
out
cmpsb
aas
or
mov
cwtl
mov
cmp
popf
cmp
icebp
aaa
in
imul
push
adc
jge
adc
push
pop
jl
sbb
popa
inc
cmpsb
xor
xor
xchg
lods
pop
shlb
cmc
cmpsl
sti
inc
sbb
jbe
stos
les
push
inc
icebp
lret
sub
imul
scas
adc
cmp
dec
jnp
jbe
sbbl
add
lret
pusha
pop
hlt
push
xchg
fimull
imul
scas
push
popa
outsb
jecxz
sbb
xor
cmc
fistpl
jle
cmp
add
shll
imul
loopne
mov
cltd
aad
add
xchg
lcall
test
dec
mov
adc
sub
or
and
popa
pop
add
push
push
lret
adc
in
sub
iret
cld
cbtw
int3
arpl
jp
fdivs
lods
sbb
sub
sub
shll
std
mov
movsb
adc
fldenv
push
inc
xor
sub
dec
nop
sarl
sub
mov
arpl
das
cmp
push
pop
pop
into
add
push
mov
inc
jmp
loopne
pop
idiv
fstl
push
dec
imul
mov
dec
inc
leave
jns
or
mov
adc
lds
dec
jmp
or
adc
jne
sbbl
and
outsb
jno
sbb
mov
add
aam
adc
mov
cmp
mov
jmp
mov
push
or
fs
mov
pop
sub
add
in
arpl
xchg
aaa
outsl
cmp
jg
pop
mov
imul
pop
jmp
cmp
fadds
mov
xlat
sbb
xor
jmp
in
xchg
fisubl
test
shlb
jge
dec
xorb
push
clc
push
nop
and
xchg
pop
stc
mov
cs
xor
hlt
jbe
ficompl
popa
pop
fnstcw
and
shl
xchg
adc
and
daa
cmp
sbb
jae
mov
mov
push
jmp
test
cmp
or
call
cmp
jecxz
les
pop
cmp
addb
sahf
push
sbb
mov
inc
inc
popf
div
scas
and
push
jp
inc
cmp
dec
dec
cmp
add
and
xor
lret
xchg
cs
cmp
xor
add
orb
push
mov
mov
dec
mov
mov
int3
or
clc
stos
push
push
shrl
mov
and
pop
xor
clc
push
push
push
call
sarl
push
add
daa
and
std
icebp
mov
lea
mov
addr16
dec
cmpsl
mov
fisttpl
and
mov
mov
adc
cmp
xchg
mov
adc
hlt
push
sub
xor
inc
cmpsl
push
pop
dec
jg
inc
out
fwait
add
and
out
mov
notb
loopne
or
or
hlt
outsl
outsb
mov
pop
push
int
cmp
mov
adc
rcll
sbb
and
mov
and
movsb
adc
cltd
jecxz
xor
xchg
in
pop
cmc
shlb
mov
xchg
insl
scas
jno
stos
inc
int
divb
inc
mov
shl
jp
test
mov
imul
in
pop
cwtl
movl
mov
loope
mov
sbb
and
out
cli
mov
adc
nop
std
scas
fsubrp
std
jg
mov
cmp
notl
cmp
fistps
and
out
sub
jmp
push
in
insb
cmc
sub
in
aad
pop
sub
popa
hlt
add
rcrb
jmp
stos
scas
test
cmc
pop
subb
adc
or
inc
std
out
mov
jno
js
push
call
push
jecxz
xchg
and
jle
push
jno
nop
ret
repz
outsb
imul
mov
adc
and
fldenv
aad
data16
pop
push
jnp
and
or
gs
xchg
cmpsl
mov
insb
or
pop
std
push
call
mov
sub
ja
fwait
cld
jge
test
cmp
or
movsl
fwait
and
and
cmp
out
jge
je
jnp
into
fucomi
or
jnp
jne
jle
lcall
stos
sbb
pop
or
dec
rcrl
in
add
mov
push
or
ja
out
imul
aad
mov
cs
pop
lret
pop
subb
mov
jnp
test
fcmovnu
cmp
out
sbb
adc
cmp
pop
mov
push
stos
loope
fsts
push
insl
frstor
sbb
cli
cltd
pop
clc
inc
xorb
mov
in
push
leave
mov
insb
mov
cld
xor
aaa
ds
iret
ficoml
xor
rcrb
mov
je
sub
sti
std
mov
inc
pop
jne
xchg
stos
jmp
ljmp
add
lock
xor
sbb
scas
sbb
jl
lret
mov
pop
lret
movsb
push
icebp
inc
inc
mov
or
jae
cmp
dec
ds
adc
arpl
xor
aas
adc
test
rclb
adc
adc
jmp
sbb
cmp
mov
mov
inc
dec
adc
mov
mov
ss
repnz
mov
xor
test
push
inc
mov
xchg
add
add
hlt
pop
sub
ljmp
mov
lret
sbb
sub
inc
cld
mov
aad
addr16
out
jmp
jle
addr16
testl
std
sub
mov
das
test
xchg
aam
in
or
xchg
xchg
clc
adc
ja
scas
es
lahf
bound
mov
ljmp
sbb
mov
or
loopne
fbstp
mov
popf
iret
inc
add
mov
test
inc
clc
add
cwtl
stos
ss
mov
sarb
setnp
dec
fildll
jo
bound
shrb
mov
rorl
mov
dec
mov
idivb
cmp
xor
aaa
push
imul
jmp
lods
jno
inc
adc
adc
add
fnsave
mov
pop
xchg
mov
test
jp
pop
or
push
insl
movsb
enter
call
lods
jb
fldl
mov
mov
push
aam
jb
sahf
subl
mov
xchg
sub
xor
outsb
out
in
mov
xchg
enter
stos
in
je
pop
adc
mov
das
testl
repz
sbb
repnz
lcall
sbb
xor
jbe
jb
cld
insl
cmp
mov
loop
and
sbb
adc
push
mov
adc
imul
mov
aad
mov
insb
xorl
nop
call
in
adc
push
add
xchg
mov
jg
lock
std
ds
dec
stos
dec
pop
fst
cmp
jle
xor
sbb
test
and
repz
push
mov
mov
addb
pop
sub
adc
setge
mov
lret
pop
mov
push
ret
push
pop
and
cli
hlt
jae
int
mov
adc
dec
fdivl
je
call
mov
sbb
pusha
jae
jo
scas
xor
js
inc
aas
and
outsb
cmpsl
orl
jmp
pushf
insl
mov
dec
cmp
sub
scas
xor
pop
push
jecxz
xor
daa
mov
test
stc
bound
xor
mov
pop
nop
inc
pushl
imul
fwait
add
cmpsl
fnstenv
cmp
xchg
repz
stos
or
adc
push
add
mov
in
mov
adc
or
jp
stos
push
xchg
cmp
or
je
inc
mov
aas
cmpsb
cmp
aam
mov
xchg
xchg
leave
push
sub
xchg
and
ljmp
inc
je
popf
loopne
movsb
dec
ja
mov
push
and
dec
out
xchg
ljmp
test
dec
mov
or
aam
test
cmp
sub
orl
arpl
rcrl
js
aam
xor
in
fs
mov
add
cmp
lret
mov
sarb
mov
gs
gs
inc
aaa
in
lcall
out
push
mov
xor
adc
adc
xchg
mov
jae
sbb
sbb
test
test
fstps
bound
outsb
sar
pop
jbe
leave
push
pushf
mov
pop
inc
dec
js
push
scas
jnp
jo
dec
nop
cmpsl
data16
lea
add
jmp
iret
lahf
mov
cltd
ljmp
fcoms
pop
ja
cwtl
push
mov
imul
cli
mov
and
push
sti
fwait
sub
in
xor
push
shlb
jg
in
mov
xor
lcall
mov
sahf
mov
in
lcall
aad
dec
fstpt
jmp
int
cmp
or
adc
js
cs
icebp
push
adcl
mov
cmp
mov
xchg
and
cmp
jb
mov
mov
je
pushf
js
lret
xchg
icebp
mov
dec
pop
mov
enter
xchg
lock
push
push
js
pop
popa
pop
aam
mov
subl
pop
mov
popf
xchg
ret
jns
ja
std
sub
stos
add
fsubrs
out
insb
inc
mov
xchg
aas
mov
inc
cs
jl
cld
std
cmp
or
ja
aas
and
cmpsl
jmp
imul
adc
scas
add
and
shlb
je
testl
inc
int
cs
cmpl
das
inc
push
sbb
std
mov
leave
and
cmp
mov
popf
shr
xchg
add
repnz
mov
push
dec
add
int
lods
xchg
fistps
xorl
pop
into
std
pop
xchg
js
adc
ja
pop
int3
nop
mov
sub
jg
xchg
inc
rol
jo
fsts
or
cmp
es
jne
push
xor
or
loope
cmp
mov
int3
mov
xchg
std
repnz
imul
les
xor
adc
int
ffree
lds
and
cmp
lods
push
ljmp
inc
fisttpll
dec
sub
inc
cmpsl
pop
iret
mov
dec
xchg
lret
push
les
fimull
mov
mov
call
push
pop
ret
xchg
cs
int
out
int3
es
mov
mov
aas
push
lea
fcomp
adc
adc
aad
mov
ret
cwtl
pop
sub
inc
inc
dec
test
xlat
adc
std
idiv
jg
mov
stos
sub
xor
addr16
push
inc
push
icebp
cmp
xchg
std
in
xorb
add
mov
cmpsl
inc
mov
push
and
push
push
add
scas
mov
loop
mov
mov
xchg
ds
aaa
adc
pop
mov
mul
aas
orl
divl
insb
add
mov
dec
cltd
test
push
lods
cmpsl
into
pusha
fdivl
cmpsl
mov
add
pop
push
repnz
hlt
idiv
in
push
imul
xchg
ss
ret
lods
jbe
aam
and
sub
aaa
cwtl
jae
jbe
mov
ficompl
popa
mov
push
dec
mov
out
inc
jecxz
sahf
inc
sbb
sbb
mov
dec
cltd
inc
aaa
jle
sti
push
dec
repz
call
repnz
insl
xor
movsb
data16
cmp
xor
out
xchg
dec
mov
jle
mov
jp
xor
imul
inc
mov
mov
notl
ljmp
sbb
dec
mov
and
xor
mov
jbe
ret
or
push
cmpsl
ja
jnp
iret
inc
lret
push
jne
test
cmc
aad
pushf
cli
add
mov
sarl
scas
ret
popa
test
repz
movsl
mov
cwtl
in
imul
and
imul
jae
out
inc
adcl
cld
dec
mov
or
dec
pop
fs
sub
mov
xor
add
test
mov
das
imul
lret
and
pop
lcall
pop
jbe
push
fimuls
xor
ja
push
bound
ljmp
lds
imul
xor
jb
daa
push
cmp
push
xor
adc
repz
imul
fnstcw
dec
xor
js
jl
and
loopne
pop
mov
mov
sar
mov
out
dec
push
in
push
cmpsl
mov
mov
and
ja
out
gs
lds
pop
lods
hlt
shl
scas
in
push
and
cld
je
out
pop
bound
jae
pop
or
daa
inc
test
and
cmp
negl
jmp
loope
lahf
in
cld
scas
stos
push
inc
push
shrb
shll
movsl
jae
inc
push
rcrl
xor
adc
enter
mov
xchg
mov
fcomip
push
cmp
ficoml
push
mov
push
push
jecxz
gs
xchg
btr
mov
push
jno
dec
mov
divps
xlat
mov
cmpsl
jbe
les
mov
cmp
addb
mov
out
pop
mov
pop
mov
cmpsb
pop
jg
popf
pop
fwait
jbe
xchg
pushf
mov
push
mov
mov
jnp
mov
inc
jns
lock
int3
inc
cmpsb
xchg
pop
int
dec
out
pop
xchg
mov
sbb
lods
mov
scas
adc
sub
popf
clc
jo
cmp
inc
xchg
or
pop
fsubr
test
mov
inc
push
imul
insl
sti
sbb
sbb
push
lds
aad
sub
mov
xchg
pop
mov
adc
decl
fstps
call
xchg
cmp
icebp
stos
sbbb
popf
call
pop
cs
mov
cmpsl
lcall
push
mov
adc
jmp
push
cmc
mov
pop
push
sub
push
orl
sahf
sarb
ret
sbb
jne
sub
xor
cmp
sub
push
insl
mov
sti
ficoml
inc
mov
jmp
testb
xchg
fcmove
xchg
or
xor
cmp
dec
and
dec
and
mov
and
dec
cli
sbb
mov
inc
dec
bound
int
mov
xlat
test
adc
add
jp
mov
sbb
push
ss
call
lds
inc
arpl
xchg
add
arpl
and
fldt
in
stos
push
ljmp
scas
loopne
mov
mov
or
popa
push
lret
loopne
mov
dec
dec
lods
sub
out
mov
faddp
es
push
mov
mov
jno
or
xchg
mov
jp
dec
jbe
enter
lcall
lea
cmp
xchg
dec
cmc
adc
addb
lahf
test
mov
jo
lcall
clc
push
jne
jb
or
into
sbbb
call
sub
sbb
sti
and
aas
orl
enter
outsb
pop
mov
xchg
test
stos
stc
gs
in
mov
jge
and
adc
or
cmp
xor
jle
push
cmp
push
or
xchg
aam
mov
sarl
mov
or
pop
push
add
sub
add
pusha
out
add
sub
js
sub
sahf
cltd
mov
push
push
dec
mov
cmc
push
adc
dec
pop
dec
es
fstps
xchg
xchg
lea
aad
pop
aam
adc
dec
movsb
xchg
lods
insl
xchg
les
inc
test
popa
aam
inc
mov
mov
xchg
pop
daa
fwait
mov
lret
ljmp
icebp
jmp
cli
mov
mov
fldt
ljmp
pop
lock
mov
out
movsb
push
gs
lahf
mov
rcrb
fidivl
lcall
pop
lock
je
into
mov
adc
mov
fs
xchg
push
ss
bound
lret
stos
add
out
xchg
test
dec
cmp
repnz
mov
push
inc
sahf
pop
mov
mov
fs
pop
mov
sub
push
popa
pop
sahf
sub
les
addr16
cmpsb
mov
mov
sbbb
mov
jbe
sahf
or
mov
mov
jo
add
ljmp
lahf
out
mov
cmp
scas
ljmp
xor
sbb
pop
dec
xchg
jo
mov
popa
xchg
xor
sbb
jno
mov
mov
test
pushf
jae
filds
clc
lds
clc
add
dec
aaa
xor
std
push
xchg
test
mov
mov
push
sti
retw
in
inc
jp
sbbb
in
mov
jno
stc
xchg
lea
out
pop
cmp
fisubrs
sub
int
cld
fmuls
mov
jb
adc
sub
add
cli
adc
pop
ja
add
or
pop
outsb
xor
ret
jnp
cmp
lock
dec
jp
push
scas
mov
out
and
loope
jne
fiadds
add
faddp
adc
ds
data16
arpl
jne
fsubl
jno
call
push
sub
pusha
adc
cmp
inc
lahf
mov
lods
jg
shlb
adc
push
je
lret
out
push
mov
out
xor
movsl
xchg
pop
fistl
cmp
push
adc
cld
pop
test
mov
mov
test
push
or
add
adc
cmpsb
cmp
mov
cmp
sub
pushf
mov
outsb
sahf
jmp
mov
or
add
lahf
inc
leave
imul
jmp
xchg
cmpsb
in
stc
lea
aam
sub
jns
sbb
test
mov
std
or
popa
ret
jmp
incb
cmpsl
mov
cld
stc
inc
stos
push
pop
out
cmp
cld
pop
sub
test
sahf
jbe
inc
shll
call
call
inc
sub
sub
push
test
xchg
mov
xchg
pop
ljmp
dec
nop
xchg
and
fwait
cmp
es
ret
jb
xor
mov
mov
popf
ret
repz
imul
jb
clc
frstor
cmp
push
dec
mov
cmpb
test
fdivs
insb
push
addr16
mov
inc
xchg
mov
into
sbb
out
jo
stos
jp
outsl
lcall
test
mov
sbb
sub
test
mov
sar
iret
repz
out
adc
nop
ja
cmp
mov
push
mov
xchg
pop
cmp
cmc
cmp
pop
mov
out
repnz
push
test
jne
daa
and
xchg
int
jge
jb
pop
dec
pushf
push
jl
in
test
mov
sub
pmullw
mov
dec
mov
and
sbb
pop
jo
push
jl
lds
mov
inc
or
out
pop
push
js
mov
mov
cs
popa
jmp
mov
dec
scas
pop
popf
or
pop
sbb
loope
pop
and
xorb
mov
es
daa
stos
push
out
out
ret
mov
jne
cmc
or
and
pop
push
dec
pop
adc
out
fmul
and
ret
xchg
jbe
sbb
fnstsw
aas
test
cmp
inc
hlt
imul
adc
pop
xchg
pusha
jl
out
mov
sbbb
int3
and
sbb
fnstsw
mov
aad
pop
sbb
mov
dec
rorl
mov
xchg
dec
hlt
sbb
rcr
and
adc
cltd
inc
mov
jns
pop
mov
fstpl
pushf
and
push
pusha
xchg
test
mov
push
xchg
jmp
xor
out
fidivrl
in
cltd
pop
pop
dec
cs
ret
mov
aaa
pop
xor
nop
inc
pop
mov
jns
cmp
data16
sub
push
imul
pushf
nop
fst
and
or
gs
sahf
jg
fdivp
adc
inc
loope
cmp
aaa
push
dec
daa
addb
or
mov
cmp
dec
into
scas
call
je
test
mov
shlb
das
scas
pop
dec
mov
lods
cmp
aas
cmp
fbld
lds
sbb
mov
and
xchg
pop
nop
push
scas
mov
xchg
adc
sub
cmp
push
jns
mov
xchg
inc
jmp
in
dec
or
mov
je
cmp
inc
jnp
push
xchg
sub
movsl
sub
jno
mov
daa
inc
lods
mov
jp
add
out
stos
shll
ficompl
hlt
rol
xor
xor
cli
sbb
sub
xchg
push
xor
xchg
xor
cmp
inc
ret
pop
out
test
mov
pop
popa
data16
lea
fldt
or
aas
cmp
in
shrl
mov
jge
add
loope
iret
adc
cwtl
insl
inc
xchg
mov
cmp
ljmp
or
mov
pop
or
mov
sub
int
jg
inc
roll
loopne
mov
nop
add
jmp
and
mov
sbb
inc
out
lcall
test
idiv
sub
stos
aad
jg
out
pop
imul
push
cmp
cmp
fwait
mull
sbb
std
push
push
fistpll
dec
adc
cld
ja
mov
hlt
pop
ret
imul
xchg
xlat
stos
outsb
cmpsl
cwtl
mov
cld
jo
fnsave
mov
dec
dec
mov
inc
adc
rcll
sbb
fsubs
loopne
and
xchg
jno
addr16
dec
call
cmpsl
out
out
or
xchg
fcomi
adc
jl
aaa
stc
jbe
xor
pop
stos
sti
testb
pop
xchg
je
fists
pop
popf
outsl
in
sbb
add
aam
xchg
pop
adc
push
cs
mov
sub
and
enter
xchg
cmp
mov
ret
dec
pop
push
cmc
movsl
push
daa
sti
ds
cwtl
das
fdivrs
mov
loopne
hlt
int
push
subl
dec
adc
test
xchg
or
xor
xor
andb
call
enter
add
mov
dec
or
das
lcall
mov
cli
daa
pop
shll
inc
mov
cmp
mov
adc
dec
mov
xchg
pop
sub
lods
mov
hlt
or
or
mov
call
jge
bound
pusha
mov
scas
nop
and
jmp
pop
push
aad
ss
sbb
sbb
and
cli
mov
movsl
and
shl
jecxz
mov
xor
adc
push
je
lods
and
pop
push
fistpll
sbb
out
inc
cmpsl
arpl
push
sarl
mov
stos
push
adc
int
and
gs
data16
ret
pop
sarl
leave
xor
inc
cmp
pop
shrb
add
xor
sbb
in
mov
mov
xchg
pop
pop
push
subl
dec
jbe
mov
jo
test
shrb
inc
cli
movsb
xchg
xor
xchg
es
xor
add
xchg
jb
lods
jmp
xchg
pop
sbb
fists
cmpsl
je
mov
mov
push
stos
cmp
sahf
notb
dec
and
jbe
xor
and
sbb
mov
movsl
arpl
jl
mov
push
mov
fwait
cltd
popf
bndldx
or
xchg
inc
rcl
mov
popa
into
or
lret
fistps
in
xor
js
hlt
shlb
jo
std
xor
cwtl
sub
mov
movsb
jb
cli
sub
imul
jb
gs
push
cld
insb
vmovq
clc
sbb
lret
idivl
or
sbb
dec
test
sbb
shlb
inc
out
and
push
dec
lods
jmp
insl
aad
or
outsb
shl
cmc
fwait
icebp
ja
jp
push
jnp
icebp
pushf
cmc
imulb
inc
mov
inc
and
jl
shlb
inc
out
inc
sarl
mov
inc
enter
jp
inc
xor
adc
and
mov
sub
mov
xchg
cmp
pop
mov
ja
dec
popf
push
repnz
ja
shlb
out
out
xlat
pop
loop
inc
imul
aad
push
pop
xchg
data16
mov
jns
sahf
jno
fwait
repnz
shll
test
sub
add
outsb
lahf
mov
outsl
and
mov
mov
pop
dec
les
movsb
int
ret
jb
ljmp
dec
mov
mov
adc
ss
cmp
loopne
push
sub
push
inc
jle
or
mov
call
dec
aam
int
rcrb
fildl
add
cmc
push
mov
fs
mov
adc
dec
mov
fcmovnbe
jmp
sbb
jnp
std
mov
lahf
test
mov
mov
xor
push
and
fbstp
fstpl
and
jp
jg
outsl
stos
adc
and
xor
jbe
sub
jle
push
loopne
xor
inc
insl
imul
int3
sub
push
hlt
pop
data16
or
and
xchg
test
es
xchg
xchg
xor
das
inc
cmpsl
sub
mul
push
sub
icebp
add
addr16
mov
push
lret
ljmp
repnz
jle
mov
movzbl
push
xchg
rep
test
rorl
ret
cmp
stc
fidivs
dec
adc
sub
es
mov
pop
addr16
ljmp
jmp
fistpll
add
enter
mov
test
cmc
adc
loop
mov
sti
jb
loope
insb
jmp
xor
pop
sahf
xchg
adc
inc
pop
push
jl
dec
loope
roll
outsl
dec
dec
icebp
clc
add
mov
mov
pop
jl
aam
int
push
int
call
cli
inc
mov
mov
lds
les
push
out
mov
or
sbbb
jl
popf
sub
xsha1
cmpsb
or
ficoms
repnz
dec
push
shlb
movsl
jmp
aad
insb
bound
add
ror
mov
add
xor
xor
clc
cmp
xchg
fwait
adc
xchg
jo
hlt
inc
adc
sbb
xor
adc
inc
loopne
outsl
repnz
fs
or
mov
aad
lcall
or
dec
aaa
jg
nop
lret
and
xlat
enter
stc
sbb
push
orl
and
and
pushf
dec
cltd
sub
inc
jo
mov
push
pop
es
popf
repnz
stos
xor
jmp
pop
scas
xor
inc
hlt
les
pop
jg
scas
mov
push
into
frstor
daa
rcl
sbbl
xorl
mov
jne
mov
sbb
lahf
lods
out
sub
call
add
in
out
mov
out
jecxz
push
jecxz
or
xor
pop
in
pushf
pop
pop
xchg
inc
in
adc
std
mov
notb
mov
dec
imul
xor
js
gs
int
js
test
sbb
sbb
data16
int
adc
int
in
lcall
loope
jnp
out
aad
cld
leave
jb
out
mov
or
push
dec
imul
sub
adcb
mov
dec
imul
or
mov
movsb
loopne
push
mov
sahf
roll
mov
out
mov
hlt
mov
sbb
xchg
jne
jo
in
mov
dec
xchg
imul
imul
cmp
mov
xor
or
stos
jecxz
int
jnp
inc
in
ja
rcrl
xchg
add
es
mov
call
and
int
mov
mov
idivl
sbb
cmpsl
mov
and
lret
cmp
jl
and
mov
test
add
cmc
and
xchg
cmpsb
adc
cmp
fcmovu
xchg
xchg
xchg
xchg
sub
mov
loope
cltd
in
movsl
jg
adc
cld
imul
icebp
xchg
mov
pop
xchg
cmc
mov
and
and
xor
sub
dec
jb
push
cmp
and
fdivl
je
movsb
push
pop
in
mov
sub
test
jbe
adc
scas
pop
adc
arpl
jg
vaddsubpd
or
popa
jecxz
add
mov
dec
mov
test
cmpsb
cmc
aas
mov
fldl
pushl
xchg
xchg
cltd
push
adc
jp
jg
mov
aas
push
sahf
clc
loop
cli
mov
test
inc
clc
jg
sbb
pop
mov
imul
cld
sti
movsb
nop
shr
sub
mov
enter
bound
insl
int
cwtl
xor
cmpsl
mov
jp
ret
mov
push
mov
pop
inc
movb
int
ljmp
jle
movsb
ljmp
push
inc
inc
test
sub
and
jbe
into
insb
lret
loope
movl
xor
mov
cmc
scas
das
adc
cld
rcr
mov
xchg
cmp
scas
sub
xor
mov
push
dec
jmp
inc
addr16
mov
jecxz
call
jge
jnp
sahf
mov
xlat
xor
cmp
mov
ret
call
inc
xchg
rcrl
popf
jnp
jl
sub
and
mov
inc
insb
inc
sub
cmp
inc
inc
or
into
inc
in
and
loop
xchg
pop
fdivs
pop
or
out
inc
jecxz
xlat
outsl
mov
xchg
and
inc
dec
je
fadds
add
add
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
sub
enter
jl
pop
jl
daa
or
and
das
add
and
aaa
mov
jp
sub
sbb
shlb
mov
std
sub
fstpt
out
sub
xchg
or
fxch
xor
push
xchg
jb
push
ror
adc
or
inc
inc
jno
inc
xchg
push
dec
dec
scas
iret
xor
cmp
cmp
and
cmp
mov
xorb
and
cmp
lcall
sbbb
stos
xchg
stos
int3
in
mov
rolb
dec
xchg
das
push
ficomps
test
mov
call
push
cmpsl
sbb
xchg
add
jecxz
push
ret
mov
and
iret
mov
int3
stos
test
cwtl
dec
pop
xchg
mov
roll
mov
jne
add
stos
xor
incb
lret
and
lock
aam
pop
lds
and
lods
lock
mov
add
cmc
loopne
push
inc
push
rorb
dec
insb
jnp
mov
cmpsl
test
mov
xlat
mov
rcll
loope
or
xchg
jp
sbb
fimuls
push
jae
enter
mov
out
call
out
add
ret
mov
nop
scas
add
cmp
push
in
dec
in
roll
and
outsl
dec
xchg
or
ror
mov
stos
push
repnz
dec
inc
mov
dec
lcall
gs
push
ret
mov
cs
mov
int
ljmp
loop
pusha
dec
lret
or
jg
mov
mov
jle
stc
push
icebp
lods
pop
add
push
xor
inc
sbb
shlb
pop
lods
lret
fwait
xor
lcall
mov
jae
add
sbbl
xorl
sarb
lods
dec
leave
xchg
dec
xor
out
adc
jno
pop
ret
out
cmp
lods
rclb
push
ret
jnp
dec
mov
jecxz
pop
sti
aaa
xor
ret
mov
xor
movsb
fmuls
and
dec
out
pop
mov
push
pop
test
jae
dec
fstps
mov
dec
fs
inc
test
sbb
lahf
or
enter
jns
push
inc
lret
cmp
stc
inc
shr
adc
xorl
inc
jg
aaa
out
mov
aaa
mov
add
repz
mov
outsl
addr16
xchg
hlt
cli
cmc
xchg
fcmovnu
and
lods
nop
in
fstps
out
imul
mov
and
fdivl
push
ret
inc
imul
xchg
out
inc
adc
adcl
xorb
ss
aad
js
cmpb
xchg
adc
outsb
into
or
int3
je
sub
add
push
lods
mov
xchg
scas
mov
dec
call
out
and
push
lea
lahf
bound
cmpsl
sbb
outsb
sub
mov
aam
fmuls
xchg
push
call
inc
cmpsb
push
and
mov
loop
lcall
xor
cmpsb
movsb
pusha
test
jae
xor
inc
ret
jns
pop
inc
cmp
sarl
jns
cli
xor
rcll
orl
fimuls
push
push
xchg
pushf
and
fwait
jmp
fwait
test
inc
add
jg
cmp
and
jecxz
neg
pop
inc
jecxz
lds
shll
mov
jmp
enter
nop
loopne
out
adc
mov
pop
stos
rcr
push
xchg
mov
cmpsb
sbb
adc
mov
dec
repz
call
aad
ret
or
shrd
sub
pop
mov
mov
inc
lods
nop
lcall
out
pop
mov
jecxz
mov
js
repz
jp
call
and
cs
dec
repz
sbb
adc
nop
test
mulb
jbe
cmp
rep
gs
insl
test
sti
jb
mov
nop
pop
int
pop
pop
push
stc
rcll
movsl
lods
xchg
les
xor
fwait
cmp
sub
cmp
scas
adc
xchg
dec
and
ror
fs
flds
fdivrs
adc
sub
jbe
jmp
mov
cwtl
sar
or
mov
aas
ljmp
pop
outsb
outsl
rorl
mov
push
xor
mov
loopne
das
dec
adc
push
adc
fnsave
and
dec
jne
push
mov
std
push
aam
mov
push
mov
and
jecxz
sbbb
aam
jo
pop
cmpsb
aaa
addl
add
mov
call
sub
out
push
aad
xchg
je
jns
or
cwtl
mul
daa
pop
pop
imul
xchg
jo
jnp
adc
jg
popf
xchg
cld
shlb
cmp
out
out
sbb
lret
cmpsb
pop
sbb
test
push
xchg
fidivrs
sarb
or
imul
xor
and
aaa
add
pop
fstpl
out
jp
mov
dec
dec
jbe
ja
xor
fcmovne
cmpsb
enter
adc
mov
loope
sbb
lea
jne
pop
mov
pop
rclb
mov
ja
sbb
out
push
cmp
addb
jl
adc
inc
cmp
fucomi
xchg
cmp
pop
mov
mov
sub
xchg
cmc
add
and
jge
push
or
xchg
mov
cld
dec
jbe
shll
mov
jmp
xlat
jae
push
popa
cmp
fldl
aaa
and
fsubrp
jnp
sbb
xor
inc
popf
repz
mov
pusha
xchg
xchg
aaa
in
ss
daa
outsl
movsb
adc
sub
mov
sbb
sub
inc
dec
lahf
inc
pop
mov
mov
adc
or
or
iret
scas
xchg
stc
sbb
fsubl
cmp
outsl
insl
add
inc
pop
in
mov
lds
call
cs
sub
and
jl
jmp
inc
and
sbb
in
aaa
mov
mov
out
les
icebp
in
adc
cmp
sahf
lods
xor
lcall
fstl
in
js
inc
xor
cmpsl
and
mov
adc
lds
jle
outsl
shrb
sub
sbb
xor
sub
xor
mov
insb
cmc
lret
jg
jno
subl
inc
fwait
rclb
xor
push
jbe
sub
mov
dec
xchg
insb
pop
out
sbb
jle
cmpsb
test
popf
insl
hlt
pop
sbbl
adc
add
nop
and
mov
pop
cs
pop
mov
arpl
sbb
lret
jb
jmp
repnz
ja
out
fdivrl
int3
jb
test
add
mov
mov
fucomp
xchg
mov
jno
mov
scas
test
ja
rcll
xchg
mov
sub
adc
cmp
jmp
mov
or
repnz
addb
jge
test
out
or
pop
xchg
jne
mov
cmpsl
jnp
pop
mov
pop
pop
dec
jl
sti
sbb
pop
jle
mov
movsb
cmc
adc
cwtl
cmp
jecxz
int3
out
out
insl
cmpsb
xchg
pop
and
push
stc
popf
mov
fsub
sahf
fldl
insl
pop
insb
cmpsb
adc
pop
jbe
cli
and
daa
cmp
ds
into
pop
mov
std
scas
fcompl
andl
lret
dec
lds
pop
push
mov
lret
add
jg
inc
xor
ret
xchg
rcl
leave
or
nop
inc
call
mov
cmp
mov
cmpsb
xor
push
add
add
aaa
xlat
xlat
nop
ds
cmp
sub
fisttpll
addl
and
mov
hlt
jne
inc
jp
inc
push
popf
popa
decb
psubsw
sub
lcall
xchg
fcomps
dec
pop
repz
nop
lahf
add
arpl
scas
jge
clc
leave
jne
inc
cmp
add
mov
xor
mov
dec
out
dec
sbb
std
pusha
inc
inc
jge
cmp
push
push
mov
cwtl
xlat
push
stc
mov
lods
dec
mov
ds
mov
insl
out
ja
cmp
pop
scas
adc
or
dec
in
fcoms
jo
leave
mov
pop
aaa
adc
mov
lret
add
add
fidivs
stc
mov
sbb
rol
mov
mov
loopne
stos
and
fsubrl
fisubl
or
inc
xchg
sbb
xchg
pop
or
mov
lods
cmp
out
jl
cmpsb
jge
cmp
mov
out
scas
mov
add
outsl
repnz
and
jno
pcmpgtb
mov
mov
pop
sbb
dec
and
mov
stc
adc
xchg
inc
aaa
sbb
loopne
lods
lods
test
jno
adc
sub
std
cmp
in
je
lret
loopne
test
xchg
push
mov
nop
push
clc
push
lret
ja
or
test
test
lods
jle
inc
mov
std
push
cld
xchg
cs
jle
mov
ds
adc
or
test
pop
or
ret
test
adc
push
test
mov
pop
ss
jmp
jecxz
jg
test
pop
std
mov
bswap
pop
mov
es
inc
jns
cwtl
sub
mov
mov
je
ds
iret
xchg
sub
inc
pop
xlat
shlb
sbb
les
flds
cmc
cmp
cmp
test
ja
push
xor
jmp
xchg
cmc
adc
mov
cld
inc
or
movsl
xchg
les
filds
or
inc
cmp
adc
scas
in
push
shrl
repnz
pavgb
out
mov
jp
pop
mov
jmp
sub
jbe
shr
mov
stc
lahf
pop
jnp
lahf
in
notl
fiaddl
add
mov
cmp
add
aaa
call
loop
pop
cwtl
cmp
cmpsl
nop
insb
out
push
aad
mov
fldcw
jns
xor
outsb
leave
jb
cmp
pop
dec
scas
fwait
xchg
jo
push
mov
xchg
daa
sub
aad
daa
push
mov
fcoms
mov
addr16
xchg
sbb
xor
sub
sti
ss
cli
insb
mov
loope
inc
loopne
repz
jle
inc
ja
mov
adc
xor
addr16
insb
sub
mov
call
enter
ds
pop
mov
dec
fimuls
mov
sbb
inc
adc
pop
jecxz
push
popf
pop
fdivl
inc
xchg
ljmp
xchg
mov
movsb
xchg
int3
cmp
push
iret
inc
addr16
xor
and
xchg
sub
cld
cmp
fs
ret
xor
xchg
and
in
and
dec
aam
pop
rcll
mov
pop
bound
fidivrl
pusha
xchg
imul
mov
sub
mov
lds
sbb
xor
and
aas
loopne
sub
xchg
xchg
pusha
push
lcall
sarl
cmp
push
inc
lcall
jp
roll
push
mov
inc
or
popf
sbb
cmp
and
push
out
daa
adc
inc
cltd
jb
push
dec
into
mov
add
ja
and
mov
xor
cs
xchg
ds
jg
out
fdivl
fwait
outsb
loop
pop
sti
xchg
fnclex
outsl
dec
xchg
mov
mov
dec
sbb
rcrl
and
dec
dec
push
test
xchg
lods
in
add
nop
inc
pop
jl
fldl2e
jnp
dec
stc
xor
imul
adc
arpl
pop
xchg
adc
mov
mov
dec
test
xchg
js
test
adc
sbb
mov
push
cmpl
jmp
mov
mov
cld
jmp
xchg
jns
sub
mov
faddl
fcmovnbe
adc
cmp
xchg
push
sbbb
mov
sbb
and
sahf
pusha
mov
jno
sub
xchg
sahf
xchg
dec
aam
xchg
outsb
jle
hlt
icebp
pop
dec
popa
inc
mov
rorl
enter
test
sbbb
mov
mov
shll
push
inc
jl
pop
sbb
lret
jmp
jne
aam
lret
sbb
add
loope
loopne
sub
imul
mov
jge
push
fstpt
lock
nop
sbb
mov
inc
adc
sbb
adc
or
mov
sbb
xor
and
lods
dec
test
jg
mov
arpl
and
sbb
insb
out
pusha
jle
testl
test
or
jbe
xorl
jmp
loopne
push
push
push
jns
leave
loopne
pop
jae
push
dec
mov
or
xor
dec
lret
or
mov
sbbl
push
adc
and
add
ret
scas
jbe
xlat
push
and
loop
xor
xchg
or
addl
dec
add
xchg
or
fistpl
adc
xchg
test
mov
add
out
sbb
inc
movsl
cmp
pop
jmp
fsubrs
stc
sub
stc
popa
stos
jne
js
das
xorb
add
or
add
jno
jge,pn
sub
icebp
sbb
repz
xchg
outsl
sbb
les
and
subl
test
mov
mov
dec
stos
xor
pop
or
clc
xchg
aam
xchg
outsl
dec
mov
sbb
pop
mov
jge
jle
imul
jl
gs
cli
lods
push
cmc
sub
mov
imul
xor
int
or
adc
push
popl
out
aam
jnp
jmp
push
xchg
stos
out
ljmp
add
push
add
insl
mov
add
pop
insb
es
cli
push
sbb
pop
jl
hlt
hlt
pop
fstpl
orl
lods
xlat
mov
jo
pop
sub
shlb
push
and
jnp
cmp
adc
aam
stc
xchg
sub
xchg
das
loope
cmp
jae
roll
add
dec
rcrb
and
push
mov
insb
rorb
es
adc
jae
adc
jo
movsl
push
sbb
pop
mov
push
out
cmp
scas
insl
cmp
cmp
cmc
add
aaa
mov
fs
js
or
outsl
in
xchg
scas
daa
lock
mov
mov
nop
or
cmpl
dec
loope
rcrb
nop
mov
push
enter
sti
movsl
push
lret
add
jmp
inc
dec
jecxz
adc
sahf
loopne
mov
push
jne
mov
jge
outsb
js
gs
fwait
out
adc
add
pushf
adc
inc
adc
sub
incl
fs
ficomps
mov
mov
fidivl
or
call
lret
shll
in
sbb
jne
or
sub
idivb
push
or
sub
ret
sbb
push
adc
clc
push
sub
sti
test
xchg
in
lods
cs
sub
mov
icebp
ja
add
jecxz
and
sub
dec
loope
test
mov
call
xchg
mov
xchg
inc
push
push
lods
fistpll
fmull
push
pop
add
xlat
pop
popf
jae
xor
in
cmp
aas
icebp
sub
test
adc
jl
daa
pop
cmpsl
mov
push
push
ret
mov
rcrb
call
je
sbb
xchg
adcl
add
and
inc
push
cmp
and
add
jl
mov
jp
mov
sbb
add
jns
push
adc
sti
sub
dec
add
jp
push
xchg
loop
cmp
es
test
push
aam
adc
pop
mov
cmp
xor
repnz
jp
hlt
stos
pop
hlt
and
xchg
incl
loopne
addr16
scas
int
sub
sub
stos
test
mov
or
xlat
xchg
arpl
mov
and
loopne
adc
xchg
rorb
inc
nop
dec
es
cmpsl
inc
xchg
gs
into
cs
mov
jmp
xor
push
sbb
ficoml
mov
clc
sbb
sti
sbb
out
inc
in
cltd
adc
and
push
ret
not
cld
push
xor
lea
jnp
cs
sarl
xor
inc
nop
loopne
clc
test
or
pop
fsubrl
sub
xor
rcll
in
pop
aas
mov
cmp
jnp
and
pop
xchg
push
lret
cwtl
pop
rorl
les
mov
cwtl
sbb
pop
fldl
imul
sub
sarb
mov
leave
stos
mov
inc
mov
lds
adc
movsb
ds
icebp
xchg
testl
out
mov
cmp
dec
mov
lret
or
mov
pop
mov
lods
int3
test
mov
sub
or
xchg
mov
push
roll
xchg
or
pop
xchg
test
mov
and
mov
mov
insl
fmull
int3
pushw
pusha
aas
jns
xchg
cmpsl
mov
jne
stos
fistpl
das
adc
pop
test
push
daa
mov
scas
pop
call
repz
pop
mov
outsb
imul
or
je
repz
jbe
xlat
or
rorb
jp
mov
stos
jnp
xor
cmp
shll
xor
cmpsb
jle
jle
inc
stc
mov
jp
push
loop
mov
jbe
sbb
cltd
cmp
dec
sbb
mov
add
xchg
sahf
dec
and
stos
sbb
mov
or
jmp
lea
mov
mov
jne
inc
cmpl
pop
sub
push
xorl
add
jb
enter
mov
into
mov
test
movb
test
in
adc
mov
mov
hlt
loope
out
xor
fistl
movsl
inc
shr
adc
into
mov
stc
std
xor
mov
xor
fisubs
sti
sub
loope,pt
sbb
shll
sahf
not
ficoml
insl
aad
es
shlb
sub
adc
jecxz
pop
and
mov
test
leavew
mov
jnp
push
add
fxch
imul
ss
aaa
mov
add
insl
add
and
mov
inc
cli
int3
movsb
hlt
repz
and
nop
mov
and
pop
stos
xor
cmp
push
inc
jne
cs
cmp
push
repz
pop
scas
dec
cmp
xchg
adc
fbld
pop
ret
roll
ja
in
adc
in
mov
push
inc
mov
movb
in
mov
push
dec
addr16
cmp
push
dec
xor
clc
fdivrl
sbb
xlat
jge
test
sub
lds
je
out
repnz
cmpsb
mov
or
dec
out
adcl
sbb
fisttpl
stc
xchg
les
mov
pop
xchg
jns
cmpsb
inc
rorl
les
mov
dec
pop
inc
xor
lock
sbb
iret
scas
daa
push
jl
js
add
mov
clc
add
icebp
pop
lea
sub
hlt
movsb
adc
jp
adc
inc
hlt
cmp
mov
inc
and
push
inc
cld
pop
xlat
popf
xchg
movsb
push
cld
inc
pop
pusha
mov
out
sub
gs
and
mov
test
fmuls
mov
lods
lret
adc
fisubl
and
dec
jp
add
mov
or
and
and
pop
sbb
shll
add
push
aad
dec
cmp
lods
aas
mov
aas
test
xor
test
pop
xor
std
adc
adc
out
dec
xchg
mov
mov
cmp
mov
xchg
jp
sub
in
repz
mov
call
mov
inc
jbe
adc
jbe
jg
loope
inc
stc
add
imul
dec
push
and
inc
enter
mov
jg
dec
dec
push
je
push
into
pusha
xchg
sub
dec
movl
bound
out
loop
hlt
test
andl
out
jne
jns
xor
imul
mov
adc
xchg
shll
scas
bound
and
jle
inc
loope
stc
xlat
decb
mov
xchg
xchg
ss
and
add
dec
test
push
fildl
mov
push
jge
faddp
sti
and
jp
mull
clc
and
sbbl
push
lock
aaa
xchg
mov
mov
mov
in
pop
mov
mov
pop
xor
cld
jl
inc
popa
mov
mul
cwtl
cmpsb
jle
filds
lahf
xchg
mov
repz
ret
xchg
mov
sub
ficoml
pop
pop
adc
or
mov
pop
orb
sub
xor
in
adc
push
inc
je
push
inc
cmp
ficomps
xchg
xchg
into
mov
fwait
inc
sub
push
pusha
sbb
and
dec
in
iret
pop
js
popf
mov
shr
sahf
cmp
popf
add
or
or
jae
push
dec
cltd
not
jl
int
rcrl
ja
call
daa
adc
stos
lret
mov
psubusw
jo
and
sub
lret
aaa
cmp
adc
sbbl
mov
and
sub
lock
cmpsb
dec
inc
cld
fisttps
cwtl
leave
xor
gs
mov
rcl
xchg
mull
jp
gs
mov
xor
fwait
mov
adc
sub
push
out
lea
push
push
push
shll
sub
xchg
xchg
or
or
js
pushl
mov
movsl
fwait
cs
pusha
mov
pop
enter
lret
xor
mov
testb
movsb
sbb
idivb
cld
subl
aam
push
stos
add
stos
pusha
or
mov
icebp
insb
dec
jmp
ret
jno
sbb
cmpsl
xchg
xchg
bound
add
repnz
or
shll
jbe
or
adc
leave
les
jmp
in
hlt
pop
ljmp
loop
movsl
roll
inc
out
dec
lds
inc
pop
xor
mov
mov
adc
mov
or
sbb
xor
xlat
add
aaa
pop
mov
insl
leave
mov
push
into
xchg
ffree
cmpsb
shrb
mov
dec
jge
jle
std
jns
lret
pop
mov
push
popl
hlt
mov
mov
data16
push
pop
in
in
sub
lret
xor
xchg
imulb
inc
sub
add
jp
aad
mov
add
in
imul
nop
lods
dec
iret
dec
rcrl
gs
stos
cmp
pop
dec
movsb
out
lods
mov
addr16
cli
jae
xchg
leave
pusha
mov
aas
fs
jle
xchg
notl
mov
or
or
aad
lods
aad
cmp
loop
stc
fs
pusha
in
sbb
add
adc
dec
push
loope
jle
and
mov
bound
shlb
fistpl
mov
dec
xchg
lret
fdivrp
jmp
enter
dec
into
inc
sbb
push
outsb
or
mov
push
push
pop
xchg
in
mov
lds
popf
xor
mov
and
lahf
divb
mov
sti
loopne
faddl
sbb
leave
inc
and
add
and
mov
mov
pop
negb
outsl
pusha
pop
inc
loop
insb
mov
int
mov
jbe
sbb
add
pop
scas
xor
cmp
test
add
mov
daa
push
insb
out
clc
add
loop
arpl
in
inc
jnp
jnp
pop
rep
and
add
xchg
das
and
jecxz
jnp
test
sub
sbb
push
movsl
mov
stos
add
lret
pop
pop
bound
dec
jae
and
adc
push
adc
mov
mov
idivl
ror
fsub
fldenv
fwait
xlat
add
outsl
xor
dec
mov
jns
test
mov
push
push
imul
and
dec
scas
test
enter
sub
and
lea
mov
out
movsb
int
push
xchg
push
and
mov
sbb
pusha
in
or
mov
lret
sbb
xchg
sbb
xor
mov
jne
jo
test
pop
rcrl
xchg
push
je
jge
in
mov
jbe
rcr
out
mov
leave
lcall
sbb
push
test
push
pusha
and
and
cld
leave
jecxz
jae
sti
out
std
mov
mov
in
mov
inc
fstps
dec
test
and
dec
fbld
out
mov
sahf
int
dec
jle
clc
mov
lahf
pop
adcl
push
in
xchg
ret
xchg
xchg
int3
in
in
icebp
pop
lea
mov
in
shlb
sub
dec
xor
mov
cld
lret
jno
sub
addl
add
addr16
movq
and
js
dec
call
mov
sti
call
sub
and
adc
dec
xchg
mov
push
adc
jae
or
stos
jnp
aam
imul
aad
ret
aad
push
mov
imul
ja
enter
and
insl
cmp
fidivrs
jno
mov
imull
int3
out
pop
add
sbb
hlt
aaa
fdivrp
or
jmp
pop
cmp
or
repz
pop
inc
repnz
pop
push
lods
or
ss
inc
inc
stc
setl
xchg
inc
pop
rolb
sbb
les
inc
cmp
nop
nop
xor
jae
std
sbb
add
or
popa
fs
sbbl
jo
jb
mov
cli
mov
sbb
imull
mov
jnp
sbb
cmp
sub
mov
push
popa
add
jbe
ljmp
jo
shl
adc
jg
xchg
out
xlat
cmp
mov
aas
mov
mov
mov
ficoml
leave
pop
jnp
ljmp
xchg
cmp
mov
addr16
sbb
adc
lods
or
scas
push
jl
pop
mov
test
pop
xchg
arpl
xchg
dec
jmp
sub
popf
leave
lds
lock
push
xor
imul
push
xchg
sbb
jp
jo
sahf
pop
xchg
cmp
cmp
inc
inc
add
sbb
push
jmp
cmp
cmpsb
jmp
mov
xorb
push
cmpsb
adc
out
adc
mov
and
or
dec
outsl
push
jg
mov
xchg
sbb
test
out
lret
and
push
adc
xor
loop
fldt
and
sub
jae
pop
or
fcoml
jnp
cwtl
mov
mov
shr
lds
int
cmpsb
cmp
pusha
or
xchg
dec
pop
sbbb
roll
stos
or
das
ja
leave
sub
sub
scas
lods
dec
unpcklps
cmpsb
pop
mov
fucom
addr16
sub
pushf
jno
cmp
push
outsb
bound
sti
test
aam
jbe
aas
fcom
dec
les
cwtl
scas
aas
iret
mov
add
fistps
dec
das
or
and
imul
pop
mov
rcr
jns
and
adc
inc
push
cmp
mov
jno
loope
decl
sbb
enter
pushf
cmpsl
gs
lcall
lock
pop
xchg
pop
fists
pop
sbb
imul
dec
enter
jae
mov
dec
or
cmpsl
ud1
jne
jno
xchg
add
jb
cmp
mov
cmpsl
mov
mov
int3
out
add
lock
dec
add
mov
cmpsl
jg
scas
jg
dec
xchg
dec
sbb
pop
or
jle
xor
pop
lods
test
mov
icebp
adc
push
jnp
out
dec
test
jecxz
les
xor
es
stos
add
push
cltd
xor
insl
bound
adc
add
cmp
fwait
shlb
push
jb
jae
xchg
add
out
ja
dec
mov
jne
xchg
in
mov
xor
and
int
lret
test
or
dec
cmp
movsl
pushf
leave
cmpsl
or
lahf
xor
fincstp
test
jae
jg
scas
sbb
mov
cli
add
sub
inc
and
xchg
loop
nop
sbb
jbe
ljmp
mulb
in
mov
sahf
xlat
adc
dec
xor
xchg
sub
les
jae
xor
jb
mov
popf
sub
js
les
rorb
stc
adc
stos
cmp
pop
popf
pop
adc
data16
or
mov
loope
rolb
aas
xchg
sub
aas
clc
jnp
jle
push
sbb
popl
lds
ret
shlb
jno
shlb
loopne
arpl
sarb
push
xchg
sbb
push
pop
inc
inc
add
and
inc
negl
cmp
ret
inc
cmp
jg
dec
aad
rcrb
ret
push
mov
ret
ja
push
sahf
sbb
xchg
cmp
stos
or
push
xor
into
xchg
xchg
push
adcl
push
dec
hlt
outsb
repz
xchg
mov
aad
dec
test
leave
aad
xchg
fsubrl
jge
mov
mov
push
cmp
ljmp
xor
jnp
sub
dec
xor
adc
incb
pop
or
addr16
shll
xor
movsb
fimuls
mov
push
stos
fimull
mov
jno
loope
push
push
xchg
xor
mov
adc
loope
xchg
addb
and
cmp
inc
scas
add
addl
sbb
rorb
out
je
mov
dec
add
cmp
fwait
outsb
pop
xor
es
sub
dec
insb
xor
addl
cwtl
arpl
jne
jae
nop
lock
lods
cmp
int3
lods
pop
push
fsubrl
and
dec
cmpsb
xchg
xor
dec
inc
push
or
mov
pop
adc
and
outsb
out
and
xor
clc
push
subb
gs
nop
xchg
aam
push
and
pop
mov
sbb
pop
repnz
xor
fs
add
push
repnz
ret
int
cmc
das
aad
enter
div
iret
insl
mov
rorl
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
dec
nop
add
repnz
es
stos
mov
sahf
call
fnsave
stc
es
cmpsl
jne
jno
sarl
fidivrl
cmp
shrl
add
jo
aas
outsb
ds
jg
push
lcall
stos
negb
imul
xor
and
mov
or
jp
lods
inc
lds
movsb
jl
push
push
fnstsw
arpl
lds
bound
push
and
out
ret
mov
insb
out
add
cmp
jno
sub
aas
call
sar
cwtl
imull
call
jne
jno
ret
mov
mov
arpl
fcomps
jns
test
jp
jae
idivb
xchg
cmpl
into
mov
insl
loope
jmp
pusha
aas
cmc
inc
pop
lock
fiaddl
jns
xchg
add
xor
mov
cmc
mov
xchg
cmp
lds
or
pop
mov
push
xor
push
pop
and
adc
cmpl
int
mov
out
es
insl
pushf
insl
test
out
mov
fucompp
push
push
xor
jge
aad
das
cmc
js
in
sbb
sahf
ss
divl
movsl
jnp
bound
repz
out
xchg
cmpsb
scas
je
jo
sahf
or
jne
out
cmpsl
xchg
mov
mov
push
into
mov
dec
jb
inc
mov
dec
imul
pop
cmpsl
and
pop
inc
jno
jg
repnz
add
xchg
out
adc
push
mov
mov
xor
add
xor
dec
or
fstps
in
test
push
jg
push
sbb
push
jb
push
lds
sbb
jne
pusha
aas
mov
sub
mov
xchg
cmpl
push
push
push
push
jecxz
inc
mov
add
xor
aaa
pop
xchg
fldt
push
jmp
mov
out
jne
movsl
xchg
subb
adc
or
xchg
and
imul
das
fcom
jmp
sysret
rcrl
lods
mov
gs
mov
mov
push
sbb
jbe
cmp
push
jmp
dec
pop
inc
fsubl
push
push
fdivr
fs
xor
and
dec
xor
scas
jecxz
mov
xor
dec
xor
xlat
gs
fstps
mov
daa
loope
pop
cmpsb
icebp
cs
clc
mov
shll
cs
lds
movsl
cmp
xchg
xlat
out
scas
and
mov
mov
fcomp
bnd
imul
sti
xchg
cmp
mov
sbb
add
add
xchg
add
xchg
fldcw
push
mov
jns
out
cmp
rclb
pop
inc
and
jns
aam
leave
mov
aaa
test
daa
add
mov
pop
jnp
mov
popf
push
test
out
cmp
lock
daa
cmpsb
sbb
lods
mov
sub
cmpsl
loopne
test
aad
mov
adc
shll
js
movb
pop
aas
xchg
xchg
sahf
pop
and
iret
cli
sub
stc
lahf
or
sub
or
pop
dec
mov
mov
add
adc
push
add
pop
jb
adc
lea
pushl
vmptrst
xchg
in
add
int
sub
repz
mov
orl
adc
test
xchg
fs
pop
and
push
mov
popf
out
cmp
xor
mov
jmp
or
push
imul
aas
pushl
push
outsl
pop
jmp
add
aas
imul
add
imul
cmp
sahf
push
mov
mov
ja,pn
gs
loopne
insl
nop
xchg
stos
and
cmpsl
jp
fyl2xp1
sub
fisubrl
add
sub
lods
inc
movsb
fwait
scas
xor
int
xchg
sarb
or
xorb
ss
int3
insb
ds
cwtl
mov
iret
mov
and
inc
mov
dec
push
out
ret
push
mov
das
sub
scas
out
repnz
call
mov
hlt
push
rol
inc
aas
out
cmpsb
jmp
cmpsb
or
inc
adc
fwait
jg
xlat
testl
jl
pop
sub
mov
sahf
lahf
sti
faddl
insl
mov
or
mov
jg
fsubs
out
cmp
mov
push
lahf
mov
push
mov
mov
push
jmp
daa
push
popf
leave
mov
stc
leave
cmc
inc
sti
push
mov
inc
das
addr16
mov
cld
rcrl
ja
insb
fsubr
nop
mov
rcl
xchg
push
adc
or
pushf
orl
jno
stos
sahf
aas
and
inc
add
js
and
out
popa
or
and
sub
shr
xlat
sbb
mov
and
push
fst
and
rcrl
cmp
sti
stc
pop
xchg
shrl
push
mov
clc
pop
or
mov
lods
loope
je
jp
pop
mov
adc
dec
xchg
fcoms
nop
push
dec
leave
push
push
icebp
scas
into
lret
in
push
push
mov
dec
jbe
lea
dec
mov
ja
hlt
xchg
or
pop
fnsave
pop
je
cmp
loopne
faddl
pop
cmp
jne
pop
mov
lods
mov
dec
add
or
jnp
mov
xor
push
mov
cmp
mov
push
aas
mov
lods
enter
jae
mov
sub
inc
fcmovnbe
xorl
cmc
andl
stos
mov
mov
scas
in
add
icebp
inc
int
push
pop
int
pop
pop
rcr
sarb
sbb
mov
hlt
insl
in
gs
sbb
lcall
fwait
jmp
int3
addl
dec
divps
outsl
jl
in
out
stos
call
movsb
add
movsl
dec
pusha
mov
rorb
pop
jnp
lretw
sbb
pop
call
test
out
sub
dec
or
xor
sub
aas
out
stos
add
in
sti
and
into
sbb
jbe
mov
sahf
or
adc
mov
in
mov
sbb
jbe
inc
mov
xchg
sbbl
jae
jo
imul
das
test
stc
js
xchg
push
pusha
stos
push
fstpt
jo
xchg
iret
jg
add
inc
iret
rorb
js
dec
jl
adc
mov
popa
loope
loope,pt
mov
popf
addr16
daa
jae
leave
push
int
mov
add
add
cld
jle
pop
aad
idiv
jmp
sub
cli
push
xor
mov
fnstsw
pop
dec
into
xorl
rclb
jl
aad
cwtl
lods
jmp
fs
sti
mov
dec
loop
xchg
fnstcw
movsl
adc
aam
enter
in
pop
jae
out
aaa
jl
mov
push
aad
ret
xlat
addl
mov
jmp
pop
fwait
and
push
sbb
mov
sbb
ret
sub
daa
ja
push
cmpl
dec
movsl
mov
and
push
shll
or
push
jno
mov
or
leave
lcall
outsl
mov
push
test
cs
out
xchg
and
dec
push
inc
cwtl
outsl
sub
pop
cmp
mov
pop
adc
fs
add
jo
inc
into
or
mov
clc
inc
mov
stc
inc
subb
inc
inc
push
push
sahf
movsb
enter
fnstcw
jmp
add
push
lods
movsb
lea
cmp
scas
adc
jmp
inc
loopne
test
xlat
ret
cmp
stc
sbb
pop
push
push
test
jge
lods
out
sbb
jns
nop
mov
and
pop
ss
in
sub
xchg
and
aaa
in
out
inc
sbb
sbb
stos
ljmp
inc
jne
pshufw
mov
mov
push
inc
loopne
and
pop
mov
rcrl
jns
bound
das
lods
ja
dec
call
ret
fistpl
arpl
mov
bound
ret
xor
xor
jecxz
cltd
into
jg
popf
and
sub
inc
add
xchg
lods
jne
jecxz
mov
daa
movsb
fadds
xor
dec
xor
fldl
sbb
adc
and
xchg
mov
outsl
adc
cmp
call
stc
cmpsl
pop
movzbl
lahf
jbe
into
popf
iret
xlat
cli
or
out
mov
sub
sub
mov
in
stc
lret
pop
lea
jmp
cmp
push
jp
mov
cli
adcl
push
inc
imul
mov
mov
icebp
pusha
add
mov
push
fwait
push
push
sbb
cld
xchg
test
mov
adc
pop
insl
lret
les
mov
loop
data16
adc
mov
cmc
out
gs
mov
or
pop
cwtl
cmpsl
jae
sub
inc
ljmp
in
test
push
cmpsl
push
sub
dec
mov
ret
sbb
cmp
jb
gs
in
sbb
pop
xchg
loop
call
mov
pop
test
sarb
out
jne
adc
jns
cmp
sub
int
pushf
std
cmpsl
fwait
sub
inc
cmpsb
movsl
jne
inc
or
test
test
adc
test
pop
addb
lock
sahf
inc
lret
xlat
repz
out
cmp
xchg
mov
out
out
or
shrb
call
and
insb
stc
inc
inc
mov
arpl
test
xchg
xchg
inc
add
xchg
jmp
gs
insb
jnp
imul
sbb
lahf
ret
sub
lret
xchg
mov
lods
and
xchg
push
add
dec
inc
mov
or
ja
les
stos
das
cmp
sub
adc
sbb
iret
add
xchg
xchg
pop
sub
mov
mov
rclb
dec
clc
nop
out
mov
lds
inc
in
cmp
pop
fadds
jns
mov
out
aam
ret
inc
mov
sti
sbb
movsb
sub
ret
outsl
jbe
cmp
dec
fadds
sbb
mov
ficompl
cltd
push
movsb
sbb
ja
test
test
je
dec
sbb
xchg
xor
mov
inc
jno,pt
not
mov
add
xor
mov
aad
lret
xlat
je
xchg
or
mov
int
mov
jno
fbstp
xchg
leave
xor
dec
and
xchg
pop
fcomps
scas
movl
data16
sbb
dec
int3
decb
cmp
lds
mov
pop
mov
aam
stos
pop
fstpl
dec
aaa
repnz
out
imul
js
lock
ljmp
stc
stos
negb
faddl
out
mov
cltd
push
jmp
in
stos
les
mov
push
and
in
and
push
mov
dec
mov
repz
pop
movsl
fs
je
imul
jae
lret
add
in
xchg
mov
lock
repz
dec
sbbl
pop
jns
sbb
cmpsb
insb
in
inc
add
inc
les
sbb
lock
xor
test
mov
sbb
cmp
jmp
aaa
xor
pop
jmp
mov
sarb
addb
dec
addl
clc
adc
in
add
shrl
addb
and
mov
outsl
out
add
imul
pop
fldl
aam
add
loope
push
in
adc
icebp
das
imul
sbb
mov
and
lret
es
mov
and
ljmp
in
test
cmp
aad
mov
add
xor
aam
mov
push
cmp
xchg
push
xchg
popaw
jl
jne
mov
sub
jp
dec
ljmp
adc
clc
into
fs
sub
mov
ljmp
mov
pushf
orb
jae
test
into
cmp
or
add
sbb
jns
rcll
push
jg
jecxz
add
sbb
jl
fwait
xor
dec
andb
shlb
test
stos
xor
fsubl
out
mov
loopne
xchg
sub
add
and
sub
lcall
cltd
les
dec
pop
ficompl
pusha
scas
ret
sbb
js
push
and
push
les
and
test
cmp
xchg
call
add
xor
dec
mov
stos
es
mov
cwtl
mov
xchg
xor
fsubs
inc
pop
mov
jno
jbe
mov
mov
imul
mov
movb
stos
jp
sub
mov
mov
dec
dec
fst
mov
cmp
mov
lock
inc
fprem
and
add
cpuid
fmuls
sub
push
sbb
mov
mov
inc
aad
inc
aas
push
inc
lea
movsb
mov
les
and
cmp
push
dec
xchg
or
fildll
push
lock
pop
mov
push
filds
js
mov
jmp
inc
addr16
in
or
pop
xchg
push
lret
insb
xor
cmpsb
lahf
push
dec
sbb
inc
cli
shll
shll
xor
pmaxsw
test
into
sub
pop
xlat
sub
inc
or
dec
test
sub
pop
addps
stos
or
pop
xchg
jnp
nop
repz
clc
inc
test
adc
enter
jle
rcrl
add
xchg
cmpsb
aas
cld
or
aaa
mov
sti
sub
pop
out
out
or
ljmp
out
fs
or
sub
sti
scas
push
adc
std
sub
stos
adc
lods
fwait
mov
je
push
ret
add
in
pop
lret
mov
inc
jl
add
jg
hlt
pop
das
pop
adc
xchg
mov
imul
sub
jle
mov
and
sbb
jmp
dec
push
fwait
push
xchg
fisttpl
and
stc
divl
mov
sti
sub
in
xor
sbb
cld
pop
fbstp
or
fstps
add
sub
insb
mov
sub
xchg
movsb
pop
and
mov
jecxz
mov
cs
and
mov
das
sub
mov
stos
fcmovnb
inc
movsl
frstor
nop
sub
mov
iret
sbb
jp
mov
cmp
dec
mov
dec
xchg
and
jg
sbb
cli
push
je
int3
cld
or
clc
push
mov
mov
jo
mov
in
sub
std
inc
sub
mov
lods
mov
mov
jecxz
mov
cmpsb
shrl
xlat
push
sub
or
push
mov
mov
adc
push
ss
dec
inc
lea
jge
push
jmp
adc
sub
push
jp
call
push
out
lret
andb
xor
fs
movsb
xorb
shll
jp
xchg
mov
arpl
mul
dec
push
sbb
xchg
add
imul
xchg
int3
push
fisubs
jne
lds
dec
pusha
jl
or
cwtl
aam
pop
aaa
sti
sbb
mov
in
fidivl
sbb
mov
inc
popa
adc
dec
sub
lods
pop
push
stos
jnp
outsb
ficomps
jle
sbb
mov
inc
data16
pop
adc
pop
addr16
fistpll
cli
movsl
sahf
dec
jmp
xchg
aaa
jb
mov
stos
pop
sub
sub
fdivs
push
orl
movsb
mov
aad
data16
pop
sub
xchg
sahf
arpl
jmp
sti
sub
push
xor
sub
cmp
cmc
pop
sbb
add
out
lods
pop
clc
push
add
scas
sub
push
pop
aas
mov
arpl
push
jae
fisubl
pminsw
jmp
and
pushf
adc
pop
push
test
push
add
arpl
rcll
ret
add
test
in
push
add
pop
mov
push
movsl
add
pop
xchg
xor
mov
div
and
out
lods
hlt
jns
adc
mov
scas
and
stos
push
push
xchg
iret
cmp
fsubl
fmull
jmp
pushf
pop
ret
aam
mov
cmp
lret
fidivrs
and
cltd
mov
icebp
movsl
pop
std
movsb
fucomi
mov
shl
inc
cmp
adc
cmp
lea
call
xor
add
sub
imul
xchg
cs
inc
inc
push
cmp
mov
jns
pop
leave
mov
xchg
ficompl
repz
enter
loope
and
mov
lcall
or
push
and
je
adc
addl
xlat
pusha
adc
out
xchg
and
sub
inc
xlat
lods
das
jae
or
test
pop
xchg
mov
mov
adc
jmp
idivb
je
icebp
call
sbb
xchg
sbb
lcall
int
test
jmp
sub
and
fs
push
outsl
jg
movsb
sbb
jae
inc
push
sbbb
xchg
sub
in
out
mov
xlat
js
outsl
lret
xchg
sti
addb
insl
jns
fdivl
ror
cmp
lretw
sbb
filds
scas
cmp
or
repz
xchg
and
sub
ja
ret
add
mov
outsl
movsb
xor
aad
stos
lcall
mov
into
movsl
ss
negb
mov
mov
mov
push
and
mov
insl
inc
in
push
in
mov
loop
in
ds
inc
adc
and
xchg
mov
cwtl
mov
mov
stos
test
and
lcall
dec
lret
in
lods
imul
pop
movsl
int3
cmp
js
xor
ja
dec
lds
xchg
jg
divl
and
or
sbb
mov
dec
fmul
fwait
subb
mov
pushf
repnz
pop
add
lret
sub
jnp
je
leave
in
iret
adc
test
test
popa
jbe
jp
leave
xchg
mov
lret
cltd
es
push
cmovae
dec
mov
std
inc
shll
add
dec
test
sbb
and
pop
cmp
cltd
loope
adc
divl
lahf
pop
jns
movsb
mov
outsl
pop
cwtl
arpl
xchg
push
dec
dec
push
mov
decb
jnp
xor
jnp
cld
into
jae
jg
mov
popf
xor
lods
vpsrlw
loope
add
sbb
add
dec
je
fnstsw
jecxz
repz
push
pop
fwait
ret
mov
jns
mov
in
sbb
clc
mov
jns
sti
repnz
movsl
jmp
jmp
sub
xchg
dec
lret
xor
dec
jb
int
out
xlat
popf
or
lock
inc
mov
mov
fwait
negb
mov
pop
fwait
xor
clc
xlat
mov
ret
mov
xchg
adc
mov
fcomi
and
pop
mov
sub
in
push
rolb
mov
mov
xor
mov
leave
dec
fcoml
fisttps
xchg
jecxz
mov
mov
addr16
dec
popa
mov
loope
out
push
dec
push
pop
imull
rolb
pcmpeqb
jnp
addr16
jge
sbb
gs
sub
rcrb
movlhps
dec
mov
mov
xor
loop
aad
xor
pop
stc
pop
jmp
scas
fidivrl
jmp
jecxz
dec
insb
inc
pushf
jns
jg
inc
push
out
sbb
test
test
and
in
stos
repnz
repnz
inc
cltd
pop
or
jl
in
fbld
mov
sbb
or
add
scas
mov
enter
clc
fs
shl
or
test
cld
fists
jne
scas
cwtl
xlat
dec
push
add
mov
pop
clc
inc
les
hlt
sub
xchg
lock
lret
gs
and
or
sbb
cmp
fwait
or
stos
pop
jne
in
imul
sub
sbb
push
xor
sub
cltd
xlat
xchg
add
popa
xor
and
lret
dec
push
and
xlat
mov
sub
jecxz
fbld
call
imul
push
adc
cli
or
jge
inc
jge
adc
pop
jae
sub
mov
mov
jno
lret
aas
cmp
cwtl
incb
inc
lcall
push
or
aas
divb
leave
add
adc
and
mov
xchg
std
sbb
test
pushf
xchg
inc
adc
or
sub
out
popf
cmpxchg
xchg
push
in
cmp
cltd
sbb
aas
xchg
push
lret
pop
add
cmp
add
addl
inc
jne
lcall
mov
out
jo
mov
das
inc
jmp
mov
imul
or
fisubrs
or
inc
lcall
loope
or
orb
pmulhuw
hlt
popa
fwait
lock
pop
push
nop
clc
jb
je
sub
loop
push
in
pop
cmp
pop
xchg
jmp
and
ds
das
mov
outsl
pop
lods
bound
scas
fnsave
jne
mov
xor
push
mov
sbb
mov
or
pusha
or
jge
dec
rorb
and
cltd
lods
loope
mov
gs
movsl
outsl
and
cmpsb
jge
movsb
decb
mov
sti
ljmp
sub
push
push
mov
in
clc
lret
mov
in
aam
nop
fadds
mov
les
insb
jnp
lods
es
dec
fndisi(8087
mov
or
fmull
adcb
push
or
adc
jl
and
fxch
dec
movsl
pop
in
xlat
fsubs
and
test
and
xchg
add
sbb
outsl
push
push
fcmovu
nop
mov
fisttpll
loope
xorl
pusha
int3
jecxz
and
fs
push
test
dec
out
ljmp
movsl
push
mov
mov
js
int
push
cwtl
fldcw
xlat
adc
dec
pop
mov
into
xchg
dec
jo
pusha
mov
fwait
pop
pop
lahf
cmp
jo
add
rcll
outsb
or
jge
mov
shrl
mov
cli
rorb
test
or
pop
lcall
xor
mov
push
xchg
sbb
popa
adc
jl
into
cwtl
rorl
imul
sarb
in
hlt
insl
xor
push
fs
imul
push
jns
adc
xchg
ret
js
js
rorb
or
jg
xchg
mov
inc
xchg
push
inc
push
xor
mov
fsubrl
sbb
dec
leave
stos
add
rorl
push
xor
aas
cltd
or
and
adc
mulb
repnz
mov
leave
jge
sbb
rclb
out
jecxz
mov
in
mov
push
mov
adc
lea
aam
sbb
daa
hlt
push
and
popf
ljmp
pop
pop
push
mov
cmp
lret
fucomi
bound
push
pop
inc
sub
push
jbe
jns
xchg
out
adc
iret
movl
push
pop
ss
ror
mov
ret
sub
stos
cmc
outsl
mov
sbbb
fwait
xlat
jge
out
inc
out
imul
cmpsb
adc
vmwrite
testl
cmp
mov
jecxz
inc
dec
rorl
mov
add
lods
mov
mov
into
and
mov
pop
sbb
dec
data16
or
xchg
pop
and
sbb
sub
pop
sbb
sahf
scas
es
std
sbb
pop
jnp,pn
cmc
ss
in
mov
add
jnp
xchg
xchg
jge
mov
mov
push
xor
icebp
rcl
jle
repnz
andl
or
lret
jle
cmpl
adc
aam
popf
lret
out
add
cmp
mov
dec
insb
sub
push
je,pt
mov
imul
bound
out
arpl
xor
jns
sbb
pushf
or
iret
or
mov
dec
adc
push
lahf
or
outsl
sarl
add
in
fs
les
and
das
lcall
adc
and
cs
std
mov
rcrb
imul
ret
sbb
xor
pop
inc
cmp
mov
mov
sub
sbb
add
cmp
sbb
std
jno
push
mov
arpl
mov
outsb
push
filds
push
scas
orl
or
jno
pslld
jg
sbb
out
daa
fmull
dec
mov
ss
je
adc
dec
jecxz
push
fnstenv
sbb
cli
sub
and
sbb
orl
shrl
scas
adc
cmp
aad
or
fmul
or
bound
fcompp
or
lea
mov
aam
enter
std
xor
popa
cwtl
push
pop
mov
std
sahf
popf
ficoms
insb
xchg
jae
jg
fs
add
imul
add
mov
iret
insb
or
notb
inc
dec
ja
add
outsl
cmp
jb
jge
mov
and
jmp
pop
sub
cs
sbb
hlt
jge
sti
jno
cwtl
mov
sub
xor
inc
sbb
fidivl
adc
cmc
jmp
jbe
gs
dec
movsb
ljmp
fwait
push
lock
stc
sbb
add
sbb
icebp
adc
arpl
out
lahf
scas
mov
pop
shlb
mov
mov
push
mov
xchg
cld
inc
imul
aaa
gs
iret
mov
or
out
mov
test
add
or
dec
mov
pop
xchg
sahf
call
xor
cmpsb
cltd
push
add
mov
xchg
dec
loopne
data16
sub
mov
xor
lcall
or
pop
fcoml
cmpsb
jae
add
pop
iret
dec
jle
inc
adc
pop
loop
int
out
xor
push
cmp
mov
inc
ja
fidivl
imul
es
leave
cwtl
push
mov
ljmp
inc
in
jo
jns
repnz
sub
xor
daa
jecxz
mov
test
incb
out
mov
int3
lods
inc
pusha
and
sbb
sbb
fstpl
insl
dec
inc
pop
enter
sarb
pop
xchg
cmpsb
movsl
dec
dec
pop
push
lea
mov
jb
popa
push
xchg
adc
out
mov
push
jbe
imul
and
frstor
xchg
jge
mov
push
arpl
fadd
aad
xor
jbe
inc
adc
xor
and
lret
lahf
push
lods
push
nop
cmpsb
in
jo,pn
imul
xor
jecxz
xchg
divb
mov
or
loopne
jns
dec
stos
pop
sbb
mov
lods
push
dec
add
mov
test
jl
xorl
pop
icebp
rorl
xor
loopne
popa
pop
int3
sbb
aad
cmc
push
adc
mov
sbb
jbe
xlat
out
outsb
pop
dec
dec
jmp
fwait
lea
outsl
xchg
aas
and
out
pop
adc
rorl
mov
xchg
add
lds
jnp
sbb
jg
lahf
jmp
jo
push
arpl
push
adc
xor
addr16
add
iret
cmp
pop
test
ljmp
sub
dec
test
cmpsl
fadds
mov
mov
cmp
addr16
data16
jmp
mov
movsl
adc
push
fcoml
aad
adc
xor
inc
pop
mov
jns
jns
pop
popa
dec
push
xor
or
ss
or
sub
lock
mov
mov
fmuls
sbb
cmp
xor
jo
sbb
hlt
jmp
test
clc
mov
subl
shrb
outsb
imul
rclb
movb
jns
in
adc
jl
jno
psubq
cld
add
fsubp
dec
xchg
movsl
daa
or
popf
pop
cmpsl
and
insb
cwtl
mov
fidivrs
jmp
mov
and
dec
and
mov
jl
fdivr
pop
enter
pop
sbb
mov
sub
and
xchg
in
or
hlt
iret
mov
shll
in
push
jecxz
insb
fwait
bound
repz
inc
xchg
pop
xchg
dec
inc
push
jg
jbe
cmpl
fldt
adc
cmp
cmp
or
das
sub
in
jns
shl
in
or
daa
pop
dec
sbb
aas
and
lods
or
sbb
insb
iret
icebp
ds
arpl
popf
inc
lods
js
add
push
adcb
lahf
int3
push
mov
sub
movhps
adc
jns
nop
fstl
lcall
mov
pmullw
dec
sub
mov
inc
mov
push
ret
das
in
test
outsl
repz
daa
jg
aad
fisttps
or
fcoms
sub
push
lds
add
push
movsb
mov
push
or
pushf
xor
cmc
sub
add
aaa
std
mov
das
dec
repnz
rorb
xchg
push
in
outsb
mov
push
jge
push
xor
sbb
lds
aam
cmp
out
ds
outsl
sti
scas
xchg
out
ret
cmp
fidivl
lahf
jns
stos
mov
sub
jmp
loopne
jbe
xchg
or
dec
sub
jge
stos
mov
bound
xor
dec
cmp
xchg
mov
sub
popf
xor
cs
pop
jl
aas
dec
sbb
inc
mov
movsb
jp
cwtl
pusha
push
fidivrl
out
pop
popf
test
or
jmp
arpl
aam
aaa
mov
inc
mov
test
js
popa
xchg
ss
test
lcall
pop
push
dec
mov
mov
fdivrp
fistpl
push
push
mov
cmp
shll
sbb
sbb
mov
int3
fdivr
cwtl
subl
adc
iret
and
sub
pusha
sbb
add
pop
clc
xchg
push
sub
or
sub
mov
fs
ja
lds
push
int3
iret
insb
jmp
pop
inc
mov
ss
add
mov
pusha
fists
xchg
pop
add
and
pop
mov
in
inc
add
mov
mov
or
sbb
sbb
movb
xchg
pop
mov
adc
ret
xor
shl
dec
mov
jmp
scas
cmpb
xchg
cltd
das
sbb
mov
js
cmp
dec
pop
pusha
mov
add
enter
xchg
jecxz
inc
lods
imul
dec
lea
jae
out
sbb
sbb
mov
push
and
sub
fdivrp
sbb
and
out
leave
cmp
ret
test
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
jg
sub
pop
jl
add
lcall
mov
push
sbb
into
sub
xchg
dec
or
das
enter
push
mov
mov
xlat
in
add
mov
jecxz
inc
mov
jecxz
push
in
lods
cltd
insb
cmp
jns
pop
add
stos
jge
mov
pop
xchg
jne
out
inc
jae
cmp
lea
xchg
push
jnp
dec
mov
lret
test
sub
push
mov
mov
jp
xchg
sub
addr16
cmp
or
int3
jnp
xchg
push
fiadds
add
testl
push
mov
jns
nop
jae
icebp
movsb
jl
lret
xor
in
dec
dec
imul
sar
jbe
aam
outsl
or
inc
mov
int3
test
cwtl
mov
pop
jmp
xchg
xchg
shlb
jle
push
out
push
sbb
lods
mov
inc
push
cli
repz
test
sub
inc
js
imulb
mov
adc
cmp
das
sbb
xchg
cli
adc
mov
or
cmpsl
loopne
dec
cltd
sub
inc
mov
lret
jbe
jg
dec
adc
jnp
pushf
mov
jno
xchg
int
fnclex
sub
jmp
jecxz
push
sahf
xor
cmp
icebp
sub
in
sbb
enter
adc
or
cmpsb
insb
fidivs
add
aaa
adc
mov
xchg
push
mov
negb
loope
mov
out
ja
xor
sar
jmp
adc
add
in
mov
sub
dec
movsb
stos
push
or
out
cmp
sbb
shrb
or
aas
jbe
iret
out
dec
cld
xor
inc
mov
inc
cltd
aam
mov
into
outsl
sbb
jns
hlt
or
xor
mov
lcall
jge
clc
adc
jle
mov
jns
ficoml
sbb
mov
mov
hlt
cmp
subl
dec
push
mov
mov
arpl
pop
adc
sbb
mov
fnsave
fimuls
dec
sbbl
jecxz
adc
lret
pop
pop
mov
mov
mov
add
xchg
mov
fnsave
jmp
and
scas
js
jl
sbbl
shl
shlb
inc
add
mov
lcall
bnd
leave
clc
hlt
inc
je
movsb
xchg
xlat
push
jo
into
add
pushf
or
iret
xor
daa
pop
fildll
cmp
or
inc
lahf
push
mov
das
out
pushl
mov
mov
or
dec
xchg
mov
ja
mov
dec
enter
pusha
pop
jns
mov
jg
mov
ss
dec
jbe
and
jnp
cmp
inc
xor
xchg
or
sahf
push
xor
ss
notb
mov
sbb
leave
pop
mov
dec
in
inc
fsubs
pop
lcall
or
mov
in
pop
xchg
lds
in
ret
mov
lret
lahf
ficomps
dec
lods
or
inc
out
insb
inc
dec
ljmp
xor
mov
add
movsl
push
call
shrb
pop
aas
out
lods
pop
fwait
xor
adc
das
lcall
cmc
lcall
push
mov
dec
push
push
xlat
xor
mov
mov
pop
imul
xlat
pop
adc
aad
movsb
mov
imul
xorl
pop
xor
jge
movsl
sbb
and
repnz
sub
dec
add
mov
iret
std
repnz
mov
in
or
cwtl
push
imul
push
xchg
pop
decb
mov
gs
fstl
sub
lock
sbb
inc
adc
in
mov
test
mov
push
out
fiaddl
popf
cltd
insl
push
add
lods
inc
jg
subl
xlat
inc
out
cmp
stos
pop
jns
xor
repz
rclb
sti
ja
daa
mov
push
sub
jo
dec
out
movsl
dec
adc
sbb
sahf
jnp
adc
add
jo
xchg
scas
lds
pop
mov
lods
ss
sbb
pop
cmp
jno
push
es
insl
mov
or
cld
stc
ficomps
icebp
popf
jmp
sti
sbb
movsl
sub
pop
aad
mov
test
mov
iret
lock
push
fistps
add
adc
cmp
inc
push
fadds
mov
cmp
pop
fdivl
popf
pop
cwtl
pop
in
jb
enter
add
int3
aad
xlat
add
dec
lock
xchg
lods
cmpsb
leave
addl
or
mov
and
andl
mull
data16
lds
mov
jnp
xor
cmp
pop
add
and
test
lock
iret
mov
jne
sahf
clc
add
xor
cmpsl
xlat
push
xor
jle
adc
out
add
insb
dec
sbbl
ficompl
pop
and
inc
lods
cmp
adc
mov
in
jge
xchg
sub
arpl
add
or
inc
mov
fcoms
mov
jmp
sub
je
icebp
sub
orl
stc
mov
push
insl
mov
xchg
adc
ljmp
sub
xor
cli
xchg
orl
mov
jne
cmp
xor
jecxz
or
outsl
push
jno
icebp
fs
insb
mov
fsubrl
jmp
ja
in
xor
lods
mov
icebp
lret
or
pop
jg
and
xor
jnp
js
out
cltd
addr16
mov
les
and
mov
mov
mov
pusha
pop
sub
jnp
in
sub
sahf
push
inc
imul
push
insl
insl
into
incl
sbb
jmp
ret
push
xor
sahf
call
sbb
add
lret
xor
jne
push
adc
jg
scas
sbb
push
lret
jecxz
lret
or
adc
mov
rorl
cmp
out
xor
out
mov
lret
ror
cmp
ficoml
jbe
adc
fisubs
std
xor
aam
add
sub
out
hlt
mov
test
stos
xchg
fldcw
outsb
incb
cmp
jne
xorl
add
ds
loope
cmpsl
out
imul
mulb
mov
adc
sbb
lock
cld
in
add
lcall
psllw
enter
subb
dec
mov
lea
push
leave
or
cmpsl
cld
aaa
xor
dec
cld
shlb
lcall
adc
test
inc
push
sub
adc
int
and
sbb
in
dec
lods
mov
out
lret
pop
sub
mov
lahf
es
jns
mov
je
pop
adc
pop
call
xchg
pop
pop
rcrb
je
daa
outsb
ljmp
and
mov
dec
icebp
scas
xor
or
cmpsl
push
dec
jo
iret
jg
lret
mov
movsb
push
jo
xlat
pop
push
cmp
aam
mov
icebp
shlw
push
jo
cmp
cs
xor
jg
mov
pop
and
xlat
cld
fstl
push
repnz
cli
xchg
xchg
loopne
pop
jge
andl
outsl
cmp
pop
out
imul
ret
cmp
call
mov
fsubrl
mov
aad
ret
mov
aam
inc
mov
loope
mov
pop
sbb
pop
rcr
push
or
inc
in
jmp
push
and
mov
mov
adc
pop
sbb
sbb
mov
xor
sbb
movsl
push
jge
rolb
jno
clc
hlt
mov
mov
das
pop
jmp
enter
cmp
push
push
sbb
xor
xor
nop
push
xor
cmp
jmp
in
jmp
pop
jno,pt
fdivrs
sbb
dec
mov
aam
fstpt
rorb
xchg
push
dec
add
sti
dec
xor
sub
sub
mov
out
call
pop
cli
int
mov
pop
test
xor
add
sarl
mov
in
xchg
stos
or
jg
pop
aaa
enter
lods
js
aad
cmp
xchg
imul
xor
sbb
call
pop
fwait
pop
cmc
stos
lret
push
arpl
add
add
sarb
testb
lea
mov
cmp
and
cld
xchg
in
cmp
rcll
into
nop
aas
fisubl
and
out
stos
lock
je
add
xor
ror
push
pop
cmp
adc
rcrl
mov
mov
or
aaa
and
mov
orb
int
add
aad
or
add
inc
pop
mov
repnz
push
mov
ljmp
adc
mov
mov
scas
out
loope
sar
cmp
dec
xchg
or
xor
xchg
cmp
push
xchg
pop
test
inc
jbe
repnz
xor
adc
rdpmc
adc
mov
or
aad
pop
mov
push
ss
cmp
dec
mov
stos
fs
pushf
sub
add
in
outsl
sahf
cld
xchg
lods
fmull
lock
cltd
mov
int3
aaa
cmp
pushf
sahf
mov
std
jns
ja
jo
sbb
push
xchg
cmp
push
jo
out
mov
mov
adc
daa
iret
jbe
callw
sub
mov
ret
sbb
fbld
sahf
dec
add
push
jns
loopne
testb
cmpsb
dec
es
and
or
adc
gs
xor
lea
sub
add
out
jl
arpl
lock
in
popa
pop
rcll
mov
adc
out
sahf
cmpsl
sbb
outsb
jle
xchg
sti
incl
pushl
mov
hlt
sub
xchg
mov
cmp
push
pop
js
lds
cmp
into
lods
stos
adc
sub
testb
ja
lcall
outsl
and
add
jl
lock
repnz
cltd
insl
mull
bound
sbb
mov
pop
cmp
outsb
cwtl
fsubrs
inc
push
divb
gs
mov
out
jnp
xchg
test
insb
mov
insl
repnz
enter
cmp
cmc
or
jo
inc
shll
popf
mov
sbb
jo
push
pusha
stos
dec
fdivs
or
sbb
pushf
or
rorb
daa
mov
jg
xchg
jmp
inc
pop
gs
xchg
out
dec
cmp
pop
inc
repnz
push
cld
in
mov
sahf
insb
fisubrs
jle
jb
cmp
lret
cmc
and
xchg
push
and
jle
inc
lock
imul
lcall
inc
inc
sub
push
push
pop
es
lock
mov
aas
xchg
sub
inc
es
outsb
mov
sahf
ret
clc
movsb
out
push
adcl
mov
aas
mov
lock
pop
push
push
add
mov
mov
ds
mov
add
lret
mov
data16
and
cmpsb
adc
jae
lods
mov
cltd
and
enter
out
gs
pop
adc
inc
popf
imul
pop
stc
nop
cmpsb
pop
inc
cld
push
or
rolb
je
or
movb
pop
in
insl
inc
pop
pop
ljmp
movb
xchg
add
sbb
xor
bound
pusha
adc
fbstp
adc
js
pushf
mov
popf
aaa
and
adc
sbb
mov
and
out
pop
and
arpl
mov
pop
call
adc
lds
pushw
adc
push
add
mov
or
jne
mov
nop
das
pop
in
inc
mov
and
jb
jmp
gs
adc
add
push
andb
out
test
push
adc
pop
ret
xchg
jle
dec
imulb
push
fstl
outsl
aam
jne
push
sbb
outsb
xchg
in
dec
or
cmp
jo
xchg
and
or
or
nop
loopne
repz
dec
rcrl
lret
dec
fisubl
js
add
roll
mov
push
lcall
aad
nop
inc
pop
movsl
loopne
jmp
lods
inc
or
mov
cmp
sbb
adc
ret
iret
test
insl
in
fs
xchg
mov
jne
int3
mov
sbb
mov
movsl
push
push
dec
push
mov
in
jmp
jnp
jae
aam
jecxz
in
push
xor
bound
in
xor
andb
out
aaa
mov
fldcw
std
push
mov
pop
lahf
fdivl
jg
sbb
out
lods
add
push
lods
fbstp
pop
sub
negb
nop
test
push
and
xchg
je
dec
dec
fdecstp
xchg
dec
test
xchg
pop
jge
nop
test
mov
jo
sbb
lret
push
or
mov
jns
fstpt
enter
fadds
subb
lcall
sbb
gs
movsb
inc
es
pop
cmp
pop
cli
aad
inc
out
pop
aad
loope
ljmp
xchg
fs
sbb
sti
int3
repz
aam
adc
cmc
push
jg
in
sbb
in
pusha
pop
loop
out
and
orb
iret
jp
inc
lods
push
scas
sub
and
loope
std
test
xchg
xlat
jo
or
mov
xchg
loopne
popf
mov
xor
jp
enter
jbe
leave
inc
aam
xor
xor
fcmovu
push
mov
cli
leave
or
jno
mov
dec
xchg
out
jge
sub
test
push
mov
insb
addr16
mov
roll
or
jno
xchg
jmp
mov
mov
leave
aad
pop
or
xchg
mov
jge
push
pop
push
mov
and
scas
fdivs
data16
ljmp
pop
rolb
jb
or
into
mov
icebp
push
sbb
jge
jno
fxch
and
cli
inc
mov
mov
dec
rorl
inc
imul
jg
add
dec
jns
sti
inc
push
lret
mov
ds
push
jecxz
aas
or
test
andl
or
add
es
faddp
cmp
lcall
mov
ljmp
mov
fprem
jmp
lahf
cmpsl
dec
inc
mov
cwtl
adc
pusha
sbb
in
ljmp
pop
cltd
xchg
inc
push
sti
mov
jg
daa
dec
dec
vcvttpd2dqx
mov
jns
icebp
push
or
pop
or
add
mov
mov
mov
in
mov
lods
loop
loope
xchg
ja
push
and
lret
inc
pop
aad
scas
xchg
jno
in
stos
mov
sub
pop
stc
ret
add
or
inc
loopne
or
rcrl
push
stc
cmc
push
shl
and
ret
xor
push
xlat
mov
std
ret
sti
ret
nop
fwait
imul
jno
inc
pop
ja
repnz
cld
jo
in
xor
daa
or
adc
push
clc
repz
pop
jg
popf
mov
leave
xor
rcrb
cmp
xchg
jbe
push
out
add
aad
cs
mov
int
dec
mov
stc
pop
push
adc
pop
xor
in
adcl
test
mov
or
sub
enter
sub
cmpsb
lea
mov
sub
add
dec
mov
and
imull
sbb
mov
pop
adcb
test
mov
cld
pop
loop
in
pop
inc
or
roll
rclb
inc
ljmp
lcall
jo
xlat
in
xchg
arpl
mov
mov
rorl
cmpsb
sbb
mov
sub
add
lods
gs
mov
in
lock
dec
jecxz
movsb
or
loopne
adc
mov
stos
aam
scas
ja
adc
xlat
pop
dec
test
sti
cmp
ds
dec
cmp
push
mov
add
insb
iret
jo
sbb
xchg
popf
cwtl
cli
into
pop
jg
push
cmp
lds
popa
test
jne
cld
outsl
lock
mov
lods
aam
daa
jecxz
adc
jge
jb
pop
aas
lret
inc
xor
lock
test
jne
cmp
dec
xchg
fcomps
les
sbb
fwait
icebp
sbb
and
or
adc
sub
add
pop
mov
sub
movsl
bound
iret
push
dec
jne
cmp
pop
dec
push
pop
bound
clc
jle
mov
mov
sbb
ret
push
jnp
mov
dec
repnz
cmp
cltd
lds
test
test
adc
push
popf
inc
jne
and
bound
add
test
xor
pop
dec
je
or
lret
sar
pop
into
and
mov
imul
xor
fldt
jge
inc
bound
mov
sarl
aam
jbe
adc
movsb
fldcw
mov
push
jle
out
xchg
mov
clc
xor
fstpt
push
sub
xor
sbb
sbbl
fimuls
cmc
adcb
mov
ficoml
clc
xor
sti
pop
pop
and
pop
mov
mov
sti
adc
enter
into
fidivrs
idivl
out
nop
icebp
adc
sti
es
or
clc
mov
nop
stos
das
jmp
stos
push
inc
dec
cli
dec
xchg
fimull
imul
inc
push
pop
int3
mov
fimull
arpl
ss
out
scas
in
add
imul
push
xchg
jbe
xchg
sbb
sbb
addr16
icebp
push
aam
inc
dec
mov
adc
inc
cmp
mov
and
mov
xchg
mov
pop
jecxz
ljmp
jno
sub
mov
add
mov
dec
add
enter
ja
xchg
incl
ror
sbbb
push
pop
jge
dec
movsb
sub
rorl
sub
call
pushfw
lahf
cmp
ds
imul
jecxz
xchg
or
bts
mov
pmulhw
repnz
scas
and
or
sahf
test
pop
stc
in
push
call
out
dec
test
sub
cwtl
add
movsb
sbb
and
test
xor
outsl
and
shlb
pushf
and
mov
pop
movsl
pop
mov
and
pop
jbe
xchg
dec
ljmp
fidivrs
dec
adc
cmc
cmp
fcmovb
xchg
add
xorl
add
xchg
cli
sub
mov
leave
loopne
and
mov
xchg
rol
sbb
push
shlb
cmp
int3
cmc
and
add
xor
test
sti
aam
imul
jne
pushl
dec
outsb
stc
jo
fs
adc
jns
lock
cmpxchg
and
leave
add
or
cs
xor
repz
addr16
mov
cld
mov
popa
pop
push
mov
dec
les
flds
loopne
lock
xchg
jecxz
xlat
mov
out
mov
nop
cltd
sub
lods
sub
sub
adc
aad
adc
hlt
adc
pop
ljmp
sbb
sub
push
sahf
fldl
outsb
dec
adc
jnp
sub
xor
push
cli
add
pop
hlt
repz
mov
pop
nop
pop
sahf
xlat
jg
mov
les
or
xchg
jmp
pop
sbb
mov
gs
mov
jnp
imul
aaa
sbb
cld
arpl
outsl
xor
stc
imul
pop
jbe
loop
push
xchg
mov
das
movsb
imul
lock
mov
lods
add
xor
int
movsb
xor
or
dec
jle
cwtl
sahf
enter
and
inc
movsl
xor
xor
lods
shrl
xchg
stos
mov
push
dec
imul
mov
push
sub
adc
mov
pop
fadd
notb
jbe
test
je,pt
loopne
ja
je
sbb
or
mov
adc
inc
in
push
frstor
movsb
scas
mov
popa
cld
jle
shl
outsb
scas
mov
in
xchg
fadd
push
xor
push
in
mov
adc
fwait
arpl
sub
adc
test
sub
sbb
dec
aam
aaa
jge
push
inc
ret
push
inc
jae
aas
xor
xchg
mov
xor
add
idivl
cld
push
mov
cmp
enter
xor
movsl
cltd
push
inc
and
sub
shll
out
or
jmp
rol
or
xchg
and
mov
or
xchg
add
xchg
add
push
or
or
jg
les
lods
sbbl
jns
aad
adc
js
fldl
adc
aam
inc
ds
scas
addl
aam
into
jae
insb
push
out
push
and
js
iret
pop
or
inc
mov
fistpl
dec
dec
in
fcomi
test
jg
xchg
mov
aad
xchg
addr16
sub
pop
addr16
cmc
xchg
ljmp
add
int3
jp
xchg
je
push
frstor
neg
rol
test
jb
test
adc
push
mov
push
sub
gs
dec
cmp
and
lcall
xor
jne
xor
dec
pop
movsl
pop
xchg
jecxz
xor
ss
and
mov
in
fisttpl
sbb
dec
iret
jge
dec
inc
cli
fwait
jo
cmp
loop
cmp
lcall
rclb
fsubrl
lods
stc
mov
out
xor
mov
insb
inc
adc
adc
aaa
mov
pop
test
and
enter
mov
cmp
in
jge
ss
xchg
rcrl
lret
mov
cld
icebp
lahf
mov
sbb
jl
scas
stos
dec
mov
fs
iret
adc
cmp
mov
pop
push
cmpl
cld
andb
sbb
out
daa
add
dec
xor
jo
sbb
cs
nop
faddl
test
gs
flds
repz
mov
xor
or
cmp
pop
sbb
lods
xchg
shrb
push
push
pop
xchg
imulb
in
xchg
outsb
jns
cmp
jne
call
push
in
xchg
cmp
repnz
repz
push
cmpsb
cs
mov
lret
sub
sti
mov
in
addb
adcb
sub
add
shll
mov
fiadds
xor
and
inc
in
dec
add
mov
sub
dec
push
mov
mov
fiaddl
add
jl
inc
popf
jbe
add
sub
scas
fwait
call
mov
xor
mov
mov
and
mov
enter
mov
mov
loope
shl
mov
dec
jle
icebp
fldcw
int
iret
push
xor
gs
push
pop
lret
sub
adc
jnp
cmp
mov
sub
mov
into
in
sbb
sbb
outsl
lret
add
lods
cmpsb
fldenv
jne
dec
jecxz,pt
xchg
xchg
cmc
clc
bound
pop
mov
jns
arpl
nop
or
xor
aam
adcb
xor
sbb
xchg
in
out
dec
lock
aaa
lock
fistpll
or
mov
xor
xor
cmpb
mov
ja
rolb
data16
add
xchg
into
dec
mov
out
inc
pop
or
lds
inc
jmp
andl
pop
data16
xor
call
shlb
test
subl
popf
jl
mov
das
test
imul
roll
jae
mov
lods
push
shl
mov
push
sbb
jno
or
or
in
scas
leave
inc
cmp
adc
sub
in
dec
mov
fadd
mov
mov
imul
popa
ljmp
pop
lret
mov
mov
test
fwait
mov
adc
xchg
or
push
pop
fiaddl
popl
ds
and
cs
scas
fildll
adc
insb
arpl
loope
into
inc
xor
add
imul
inc
inc
lret
dec
xor
mov
fisubrs
insb
dec
sub
jmp
add
pop
pop
mov
jp
ficoml
mov
lret
ret
imul
add
or
lahf
test
push
jnp
push
jp
inc
sti
mov
xor
fstpt
iret
in
jb
xor
jo
add
in
jmp
xor
lcall
xchg
popa
bound
cltd
outsl
adc
push
add
jno
pop
jno
push
xor
test
or
imul
dec
dec
popa
cmovno
add
cli
adc
aam
jmp
lods
dec
incb
sbb
or
lret
call
out
push
push
loope
sbb
push
rcrl
iret
daa
push
dec
loop
sub
movsl
mov
push
loope
and
iret
aad
in
jo
add
jmp
jge
add
inc
add
pop
cwtl
push
mov
xor
push
addr16
and
arpl
xchg
push
enter
cmp
xor
pop
in
add
repnz
xor
mov
mov
leave
dec
push
mov
jp
js,pn
jecxz
in
fcmovnu
sub
dec
adc
mov
mov
pop
fs
xor
inc
push
jb
rorl
adc
loope
dec
cmp
adc
test
mov
addb
pop
imul
test
jbe
jns
pop
outsb
mov
inc
sub
aad
adc
int3
lods
cltd
mov
sbb
or
sub
jecxz
and
add
stos
mov
lret
shr
or
push
dec
stc
test
or
dec
repz
xchg
pop
repnz
adc
jne
jge
test
and
sbb
pop
sub
lea
sub
pop
aam
or
add
jg
out
sbb
jg
sub
cmpsb
pusha
insb
lds
lds
or
popa
jnp
divb
ror
bound
mov
xchg
sbb
jmp
jp
movsb
push
lret
sbb
jmp
fwait
addr16
pop
dec
sbb
inc
insl
adc
out
pop
or
jmp
cmp
in
shrb
mov
iret
cld
cld
xor
sar
mov
leave
sbb
out
cmp
aam
mov
jnp
ljmp
push
enter
sbb
push
and
and
mov
dec
xor
cmp
in
add
dec
shl
into
sbb
rorl
pushf
inc
xor
test
cmp
mov
add
jo
dec
stc
bound
jecxz
push
mov
push
mov
xor
pop
in
push
pop
mov
xor
sbb
mov
sahf
popf
icebp
push
clc
iret
sub
push
add
sti
or
pop
sbb
mov
pop
ficompl
jae
adc
ret
test
sub
sbbb
jb
ljmp
std
sbb
imull
int3
pushf
daa
lea
xchg
addr16
bound
cmp
rorl
ds
inc
fstps
rorl
sahf
cmpsb
lods
popf
lock
in
fbld
push
fisubl
add
xchg
cmp
xor
popf
cmp
pop
fyl2xp1
pop
jge
subb
mov
lea
orl
addr16
jl
cmp
lods
xchg
mov
lods
leave
aaa
cs
inc
jno
xchg
arpl
push
dec
paddq
pop
add
mov
sub
cmp
adc
mov
and
adc
mov
outsb
mov
push
aas
stos
cmpsl
movsl
scas
loop
cwtl
xchg
mov
jbe
dec
lahf
test
dec
jbe
fsubl
aaa
sub
inc
mov
sbb
or
out
rcl
cmpl
push
cltd
add
bound
xlat
xor
fcoms
lds
call
xchg
jg
ja
mov
pop
jno
mov
cmc
icebp
sarb
xchg
sub
pop
aas
std
fstpl
cmp
in
in
add
add
jb
jp
into
repz
and
imul
xor
lods
dec
dec
andb
xor
stc
cmp
std
jmp
jnp
xor
dec
mov
dec
ret
lods
fiadds
test
or
jp
and
ds
xor
js
push
xchg
pop
int
mov
stc
cmp
aas
xor
ror
jmp
dec
adc
add
add
rolb
add
add
xchg
ja
xchg
mov
adc
adc
adcb
lret
jb
jmp
pop
decb
jno
sbb
ret
inc
cli
mov
out
xchg
lock
inc
pop
mov
lods
call
add
das
outsl
cwtd
cs
in
ljmp
pop
loopne
jge
int
mov
into
cld
and
jns
xchg
sti
sub
add
data16
imul
loopne
push
jg
add
cmp
dec
test
add
add
sbb
ds
fbld
mov
or
push
stc
mov
cld
or
jne
sarb
outsb
push
sarb
xchg
jg
in
jl
xor
jbe
adc
jmp
inc
fwait
mov
lods
push
cmpsl
push
sbb
ljmp
repnz
mov
jb
mov
sub
jl
xor
insb
jle
fbstp
test
mov
stos
sbb
jne
in
aam
or
popl
and
push
and
inc
pusha
jb
dec
or
addl
sub
mov
flds
movsl
xor
dec
es
gs
mov
pop
push
fabs
das
shll
mov
std
sub
dec
ret
sarb
clc
mov
outsl
or
lret
std
adc
cmpsl
scas
outsb
lods
mov
outsb
mov
insl
js
out
sbb
and
aam
iret
ss
stos
in
xchg
mov
jge
push
fidivrs
mov
add
jmp
xor
mov
push
jle
adc
mov
jbe
xchg
enter
jno
insb
xor
jmp
push
sbb
inc
jbe
adc
xor
outsb
pop
hlt
movsb
sahf
pop
xchg
loope
sbb
jle
popa
in
enter
data16
mov
jge
out
push
in
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
jecxz
adc
inc
pop
jl
lods
aaa
inc
push
or
pop
in
pop
out
jecxz
cmp
fisubrl
or
xlat
in
lret
icebp
or
loop
jae
clc
ja
and
add
out
sti
lahf
call
sub
add
imul
jmp
in
dec
mov
push
js
cmc
xchg
cli
aaa
sub
or
jne
fbstp
fs
cli
dec
jnp
jmp
xor
popf
mov
insb
int3
push
xchg
mov
sbb
repnz
aaa
jo
push
sbb
out
pop
xchg
adc
or
jne
jge
adc
imul
xor
xor
cmc
mov
clc
xchg
add
inc
xchg
daa
mov
mov
mov
stos
addr16
stos
push
dec
subl
cltd
jecxz
sbb
loope
push
jne
jae
mov
imul
cmp
xor
mov
ds
lds
hlt
cmpsl
cmp
jge
ds
xor
pop
xchg
insl
mov
dec
ret
sub
andb
mov
shlb
push
loopne
shlb
pop
cli
icebp
pop
pop
divl
jp
cmc
and
je
adc
aaa
aas
fs
repz
xor
push
dec
sahf
out
add
stc
or
outsb
add
lcall
shll
aas
push
dec
rcr
shll
xchg
mov
push
dec
popa
or
dec
repnz
daa
arpl
mov
add
loope
push
jb
xchg
add
or
pop
jb
inc
outsl
pop
push
sarb
cmp
in
das
in
lea
enter
fidivl
pop
xchg
mov
push
daa
popa
out
mov
hlt
call
dec
jb
fwait
xchg
lcall
pushl
mov
loopne
dec
cmp
xor
icebp
inc
hlt
cwtl
mov
leave
fnstenv
xchg
das
loop
jnp
lods
inc
jg
lret
insb
adc
out
xchg
push
xchg
nop
addr16
iret
in
xor
outsb
dec
jns
rcr
lret
inc
sbb
adc
les
mov
das
idivb
sub
push
cs
addl
es
bound
decl
sbb
pop
push
es
mov
js
jl
stos
pop
inc
sbb
or
sahf
mov
cmpsl
cs
pop
test
inc
ja
fnclex
test
push
lock
pop
ds
fmull
std
aad
mov
cmpsb
lock
lods
jle
push
rcl
mov
and
mov
cwtl
jb
fimuls
test
notl
dec
ror
pusha
loopne
shll
cmpsl
jns
mov
int3
notl
inc
pop
fidivrs
aas
jg
sahf
outsl
ds
or
lock
outsb
mov
enter
in
push
daa
mov
loop
arpl
mov
adc
mov
and
fcmovne
repz
scas
test
jo
sub
add
xchg
clc
test
mov
int3
orb
sbbl
mov
xchg
repz
scas
or
stc
imul
or
insl
xchg
push
fstpl
les
xchg
leave
jp
dec
je
dec
out
push
mov
push
call
adc
sbb
lea
sub
push
lock
xchg
sub
jo
and
adc
jnp
loope
mov
fldt
push
mov
jnp
ret
sbb
pusha
inc
dec
test
lock
or
sti
loope
add
xor
or
xchg
xchg
into
mov
xor
jne
adc
in
pop
lret
mov
cli
jp
cwtl
sub
pop
inc
dec
sbb
push
push
adc
mov
adc
hlt
cmp
movsl
mov
xchg
pop
bound
int3
adc
enter
ret
testb
jne
pop
loop
ficomps
insb
or
mov
subl
and
fimuls
pop
addl
mov
add
leave
sbb
loop
fbld
inc
mov
popf
int
aas
ja
scas
cld
mov
cltd
xchg
sbb
fcmovnbe
fcmovbe
push
mov
loope
push
addr16
mov
lret
xchg
cs
adc
xor
leave
dec
jmp
add
xcrypt-ofb
cmpsl
out
xchg
mov
push
pop
lcall
xchg
mov
repz
mov
jle
or
adc
xchg
xchg
outsl
sub
mov
mov
adc
fwait
movsb
ret
dec
push
mov
sti
gs
adc
mov
inc
jg
icebp
test
mov
cmpsb
push
sbb
icebp
cmp
cli
jmp
pushl
and
or
fnstcw
mov
mov
icebp
cmc
cmpsl
push
mov
ret
fwait
repnz
lret
stos
xor
outsb
stos
cmp
out
push
std
aaa
pusha
lods
jae
xchg
and
sbb
mov
les
jg
insl
dec
jne
leave
jns
mov
es
cmp
adc
pushf
fnsave
jne
sub
scas
sub
pop
xchg
dec
inc
fisttps
and
lea
ds
inc
adc
clc
cmp
dec
into
push
push
daa
aaa
movsb
ljmp
cmpsl
adc
cmp
scas
add
cli
lods
jne
popf
xchg
jno
pop
mov
pop
mov
xorb
pop
pop
and
inc
loope
xor
cwtl
jns
shr
cmc
cltd
add
mov
xchg
repnz
xchg
cmp
push
lods
inc
pusha
fcoms
out
or
pop
xor
aad
mov
xchg
pop
daa
or
mov
fildl
push
sbb
sbb
dec
adc
popa
mov
lods
jge
test
stc
xor
xor
pushf
pushf
pcmpgtb
pop
xor
inc
xor
lds
and
loopne
sub
inc
mov
dec
movsl
iret
jmp
lods
movsl
mov
std
mov
push
cs
imul
movsb
mov
inc
xor
bound
xchg
sub
sete
mov
jmp
data16
mov
pop
pop
add
xchg
adc
dec
pop
lcall
xor
jecxz
addr16
lods
mov
js
sti
imul
and
adc
bound
loope
sbb
inc
pop
repz
and
insl
repnz
out
dec
mov
nop
mov
jne
adc
jae
sbb
inc
jmp
sbb
aaa
push
addb
adc
xchg
movsb
xchg
dec
loop
and
push
push
adc
loopne
adcl
outsb
fcoms
or
subl
pop
std
adc
rcrl
pop
sbb
mov
pop
int3
mov
jb
cltd
cmovae
push
push
cmp
mov
fwait
mov
out
pop
out
lret
fs
dec
jb
mov
cmpsb
int
jge
push
jmp
pop
sbb
push
or
addr16
pop
sbb
cmp
imul
pop
xor
bnd
loopne
shrl
sbb
pop
push
sub
rol
sbbb
bound
shl
xlat
test
xchg
es
sbb
cmpsl
xchg
mov
out
ds
pop
sbb
rcrb
gs
jns
xchg
aam
leave
cli
pop
cmp
stos
add
dec
pop
ficoml
xchg
pop
fidivs
outsl
loop
les
rcll
inc
bound
rolb
add
sub
fnstsw
push
testb
mov
add
and
add
dec
icebp
mov
insb
arpl
mov
lods
sbb
sbb
gs
inc
cmc
cmpsb
sub
test
xor
or
sub
pop
xor
mov
popf
cmc
jecxz
sub
out
push
fsubrl
xor
movsl
in
jno
call
insl
in
out
xchg
in
cmp
jns
sbbb
cmp
jo
sarb
sbb
push
shlb
call
pop
and
loop
mov
add
add
movsb
adc
cmp
in
daa
mov
or
leave
in
dec
pop
shll
xchg
add
sub
jmp
xchg
movsl
xchg
pop
lods
cmp
mov
lea
gs
mov
mov
sbb
pop
insb
test
shlb
in
jg
and
lock
lahf
fists
dec
les
sub
xor
pop
dec
push
and
and
leave
and
test
adc
adc
jmp
rorb
fs
lods
imul
add
pop
sub
or
inc
or
clc
lea
mov
dec
push
das
add
pushf
imul
dec
mov
pop
dec
lahf
pushf
mov
and
je
into
aaa
rol
call
and
out
add
insb
cs
push
cli
jl
cs
or
fdivl
pop
push
and
pop
adc
decl
mov
mov
mov
push
sarl
sub
cmp
jmp
and
cmpsl
lods
adc
test
adc
mov
pop
aas
or
flds
sub
fimuls
lahf
pushf
call
jle
push
rcrl
pop
push
cmp
dec
mov
and
cltd
sbb
mov
loop
test
rcrb
cmp
scas
rorb
push
jns
mov
xor
hlt
mov
loopne
push
sub
xchg
xlat
jo
push
loope
jne
jnp
adc
fdivl
and
inc
push
nop
add
pop
pop
fdivrs
mov
mov
push
inc
jl
mov
scas
std
ja
int3
js
jb
mov
rorl
movsl
shrl
sbb
mov
nop
test
dec
jae
mov
jne
negb
and
push
nop
sarl
out
sbb
in
or
xor
int3
lahf
mov
push
mov
imul
push
scas
or
insb
xchg
xchg
out
ficomps
jecxz
jmp
xor
subl
xchg
mov
out
xchg
xor
xlat
adc
dec
pop
xor
test
scas
cmc
outsl
ja
sub
push
mov
cmp
pusha
push
loope
hlt
push
dec
jne
jbe
push
or
jecxz
fiadds
lret
das
jnp
lret
add
ret
enter
fcmovb
mov
repz
fidivs
imul
mov
pusha
dec
jne
cwtl
push
sub
test
pop
int
call
shrl
fdivrs
test
mov
pop
push
cmp
adc
xchg
mov
add
mov
ret
loop
jbe
inc
shrb
fdivrl
lods
movsb
or
ret
outsl
je
sub
call
dec
xchg
cmpsb
sti
fsubr
mov
jb
cmp
mov
xor
fs
jmp
xchg
vmread
into
mov
stos
lods
add
ret
or
jmp
jp
rclb
lcall
mov
mov
xchg
jl
xchg
xor
sbb
or
mov
in
leave
mov
or
dec
jecxz
ja
adc
test
and
cli
jbe
inc
sbb
stos
xchg
sbbb
mov
cmp
es
cmpsb
jb
shl
jo
pop
imul
pushf
fsubr
inc
add
rcll
push
xchg
int
shrb
scas
dec
loope
clc
jecxz
les
dec
or
pop
in
jno
int
inc
mov
fldcw
sbbl
push
xor
or
hlt
aaa
xor
inc
dec
mov
ds
mulb
adc
jae
jne
push
push
pop
mov
jmp
ret
out
pushf
mov
sbb
lcall
mov
and
mov
iret
cld
ss
cmp
cmc
mov
xor
hlt
jmp
rcll
push
cmp
outsl
ficoms
dec
adcb
pop
addr16
mov
xchg
popa
out
adc
shll
mov
loope
inc
push
inc
lods
iret
or
adc
inc
lods
jmp
dec
clc
cmc
and
pop
adc
fucomip
or
jp
mov
out
adc
xchg
jns
fwait
pop
lock
aas
repz
leave
sti
sub
xlat
add
jg
addb
fst
xchg
sbb
int
das
push
inc
shlb
das
dec
jmp
sbb
add
sbb
push
jbe
sub
lahf
add
jb
pop
je
jnp
jne
push
test
inc
loop
in
sub
mov
pop
into
ljmp
push
movsl
fbstp
repz
or
fnstcw
dec
xorl
out
xor
and
cmp
inc
incb
jmp
fdivrs
xorl
fisubs
sbb
loop
or
aam
cmp
and
jbe
sbb
imul
sarl
mov
and
dec
popf
int3
sbb
push
mov
push
jb
data16
cmpsb
pop
jbe
cli
sbb
pop
pop
dec
cmpsb
or
push
aaa
xchg
sbb
add
cltd
in
add
mov
xchg
pop
lds
mov
or
nop
jecxz
ret
mov
hlt
xchg
lods
fwait
aam
fstpl
xchg
pop
inc
in
decl
sbb
mov
out
jle
lcall
out
aaa
xchg
jge
daa
loopne
daa
adc
jmp
and
movsl
sub
int3
inc
rep
jmp
iret
aaa
in
clc
mov
pop
inc
out
sub
faddp
jg
mov
stos
lods
xchg
ret
shlb
mov
xchg
dec
dec
ficompl
bound
cmp
sub
ljmp
mov
xchg
scas
mov
sbb
and
cmp
fwait
ret
scas
ret
pop
sbb
or
sub
enter
push
test
mov
cmp
lret
xor
push
adc
in
stos
mov
ret
int
loop
mov
or
jb
lods
popf
cli
inc
test
dec
pop
popf
cmp
adc
out
dec
jbe
mov
and
mov
nop
xor
dec
dec
cs
mov
lods
aaa
lcall
pushf
xchg
int
pop
stc
bound
js
push
push
xchg
sub
jo
aas
adc
cmp
out
cltd
cmc
sahf
xchg
pop
mov
int
jmp
mov
sti
xchg
stos
jp
mov
shlb
xor
addr16
mov
rorl
mov
push
xchg
mov
or
or
mov
sbb
lds
sbb
cltd
mov
mov
and
pop
aam
cld
xlat
or
ss
fildll
movsl
inc
or
sarl
xchg
stos
add
notl
sub
jno,pt
movsb
mov
mov
or
mov
mov
dec
leave
adc
jecxz
rcrl
push
imul
jns
rclb
scas
adc
outsl
inc
pop
jb
xlat
imul
xchg
add
ret
add
inc
jns
push
lret
jecxz
inc
cmpsl
rclb
jmp
dec
cli
push
aad
xchg
jae
jb
aas
daa
lods
pop
jmp
lock
stos
fcmovbe
loope
push
jecxz
mull
adc
push
push
imul
mov
ret
mov
jp
push
mov
pop
xchg
int3
sub
mov
movsb
jns
add
in
aad
test
jnp
pop
in
mov
shrl
and
enter
sti
stos
insb
pop
dec
pop
adc
pop
sti
jecxz
fidivl
sub
jp
arpl
push
mov
ljmp
mov
sub
inc
pop
sub
shl
pushf
cmp
mov
call
add
ret
mov
sub
adc
add
and
hlt
mov
in
xchg
push
lret
pop
lahf
stos
repz
loopne
aaa
push
sub
add
leave
rcrl
test
pop
mov
sub
jo
sbb
addl
mov
adc
push
das
push
mov
jb
adcl
addr16
stos
push
filds
das
jecxz
orb
cmpsb
or
mov
ret
xchg
lret
inc
fbstp
xlat
adc
ss
test
dec
and
inc
mov
adc
xchg
mov
dec
pop
repnz
hlt
nop
add
and
in
add
int
pushf
and
out
xchg
mov
jp
das
mov
scas
andl
or
mov
into
sbb
or
sar
mov
out
and
sti
and
jle
stos
xchg
imul
or
lock
movsl
dec
inc
hlt
pop
fisttps
jnp
xchg
ljmp
addr16
out
xchg
adc
ret
incl
push
fisubs
shll
cmp
pop
lret
ss
mov
jnp
jp
or
sbb
mov
insl
clc
ja
xchg
stos
repnz
rcll
pop
addl
push
enter
aaa
or
out
wrmsr
mov
orb
and
arpl
iret
mov
dec
bound
daa
leave
shl
pop
cmp
push
out
mov
inc
fdivrl
mov
or
jecxz
push
add
jl
sbb
sbb
mov
mov
in
adc
cli
or
test
mov
xchg
jbe
aam
push
inc
popf
in
push
dec
dec
inc
mov
rclb
adc
jno
cmc
and
std
fs
dec
out
cmp
xchg
and
mov
clc
sub
in
imul
sub
fwait
jle
movsb
mov
fildll
mov
jbe
dec
push
sbb
mov
mov
cmpl
std
push
adc
call
adc
and
push
jbe
inc
sti
mov
movsl
jmp
sub
sahf
ss
dec
or
ret
pop
dec
jb
dec
inc
xchg
int3
mov
roll
or
cwtl
xor
into
sar
sub
mov
xchg
push
xchg
sub
test
decb
mov
mov
in
dec
iret
in
mov
push
add
mov
add
loopne
cmc
inc
jo
stc
das
mov
inc
pushf
aaa
dec
mov
mov
popa
scas
and
mov
cld
hlt
cld
xchg
lds
pushl
mov
add
sbb
push
mov
aam
and
cmp
adc
fxch
ret
fsubr
aad
fnstenv
lcall
xor
push
mov
imul
stc
cmpl
imul
jg
stc
mov
mov
cld
inc
pop
pop
outsl
loope
pop
push
rcrl
push
push
pop
ja
dec
pop
rcl
loop
cli
dec
jp
mov
into
and
in
icebp
cmp
clc
push
jnp
in
ret
andl
sub
js
repz
mov
aaa
push
mov
jnp
test
xor
cmpb
pop
testb
sub
jecxz
mov
fildll
fwait
xor
aam
inc
test
mov
shl
and
pop
add
pop
loopne
fisubrs
in
sub
mov
call
ficoml
cld
xor
jnp
push
shlb
ret
sarb
jno
pop
pop
movsb
js
sti
or
xor
xchg
dec
lock
sub
ficoms
ret
sub
lahf
in
mov
int
test
idivl
jne
aaa
imul
push
pop
shll
repz
scas
inc
and
adc
mov
js
divb
inc
cmp
mov
js
sahf
adc
ds
cwtl
divl
mov
cwtl
clc
inc
cld
or
and
xlat
sub
fs
or
jae
mov
xor
sbb
clc
jmp
stos
into
insl
das
bound
mov
cmp
test
or
in
xchg
shrl
inc
mov
loop
cmpsb
jae
lods
daa
pop
xchg
aas
push
fsubl
pop
mov
mov
add
xchg
dec
jne
fsubrl
xchg
cmp
jne
dec
dec
mov
mov
lea
mov
shll
xchg
mov
dec
addr16
out
popa
sub
ret
xchg
test
fistl
mov
daa
and
aad
pop
nop
int3
mov
fucomip
stc
into
xchg
pop
sbb
pop
insl
mov
xor
mov
xlat
test
call
xor
ret
xchg
lods
cwtl
mov
clc
push
push
mov
fsts
dec
xor
jno
pop
adc
sub
adc
mov
ret
fidivl
ret
and
or
hlt
push
daa
out
xor
hlt
or
pop
nop
lods
in
test
negb
sbb
sub
pop
mov
loop
pushf
rcrl
lret
clc
mov
push
js
mov
popl
ja
mov
cmp
xchg
xchg
imul
popa
or
test
in
loope
push
in
enter
punpckldq
icebp
or
mov
inc
and
test
cli
add
repnz
mov
pop
aas
mov
rcrb
inc
push
movsb
shrb
push
leave
movsb
jmp
fldt
adc
in
out
fldcw
inc
vmread
inc
stc
pop
xlat
jno
xlat
sub
pop
int3
and
mov
rclb
roll
out
addr16
lret
sarb
pop
inc
cli
lcall
xchg
in
in
mov
push
cmp
jae
rcrb
lds
jmp
bound
or
xor
inc
xchg
mov
mov
mov
mov
jb
scas
add
add
add
sar
insl
mov
fcomps
pop
les
push
sbb
sbb
xor
xchg
dec
pop
mov
push
mov
push
mov
xor
cmpsb
movb
xlat
fmull
lods
mov
dec
mov
mov
ds
mov
ljmp
cs
and
jp
jns
imul
mov
ret
mov
loop
lret
outsl
imul
inc
mov
test
aas
jae
test
nop
jb
cmpsb
arpl
fsubrp
movsl
sbb
stc
adc
mov
pop
cltd
or
sbb
in
pop
out
repz
dec
incl
andb
jns
int
pop
inc
roll
mov
adc
inc
cmc
sbb
sub
inc
and
jne
and
jge
loopne
cmp
test
mov
pop
cmp
std
aad
ja
jns
adc
xchg
fwait
mov
adc
sbb
adc
add
das
pop
add
pop
xchg
popl
inc
pop
scas
mov
fstpt
lcall
xchg
xor
mov
mov
add
out
aaa
inc
and
bound
sub
pop
ret
add
lret
pop
mov
call
repnz
mov
mov
ljmp
and
mov
insb
fildll
inc
mov
jne
mov
ficoms
fdivrp
lock
int3
mov
stos
imul
aam
fwait
cmovg
xor
ret
popf
and
add
inc
cmpsl
cs
cmp
push
inc
cwtl
stos
sbb
insl
lahf
das
lods
push
dec
fidivl
cmp
icebp
or
jae
xor
mov
out
arpl
sbb
push
cltd
and
loopne
xchg
sbb
xchg
adc
push
addr16
jb
cmp
stc
ds
and
mov
push
add
sub
cmp
inc
mov
pop
lret
out
les
popf
push
or
jg
jnp
dec
push
mov
mov
dec
dec
and
test
aam
rol
orl
mov
jle
xchg
movsl
aas
dec
ret
push
test
ret
test
mov
gs
sti
push
jge
mov
jecxz
lods
jno
xchg
fsubs
or
adc
mov
pop
xchg
in
enter
scas
mov
out
sub
or
add
inc
lods
and
dec
mov
arpl
in
push
pop
repz
sub
dec
cwtl
add
in
popa
jnp
and
dec
dec
or
jmp
adc
fs
mov
loope
pop
xor
cld
sub
push
add
aad
int3
sahf
rcll
enter
loope
subb
arpl
add
pop
push
xchg
xchg
cmp
xor
jp
pop
into
daa
mov
sbb
insb
mov
sub
sbb
pop
jno,pt
inc
lcall
xor
outsb
mov
add
outsb
or
fistl
inc
pushf
aas
xchg
xor
mov
jnp
popa
push
adc
call
loopne
jae
sbb
movsl
rorb
mov
neg
rcr
hlt
sbb
jecxz
mov
lock
push
xchg
test
cmpsl
sub
nop
jp
lds
push
pop
add
xchg
hlt
enter
popa
sub
cmpsl
push
daa
mov
iret
jo
dec
push
jg
fsubl
mov
mov
stos
int
and
and
adc
fsubrl
sbb
sbb
out
scas
xor
mov
jns
mov
jo
sub
arpl
pusha
aaa
xor
enter
cmp
pop
add
push
lea
push
ret
call
inc
lods
leave
mov
out
insl
jno
clc
rcr
rclb
fimuls
lock
lea
rcrl
add
jbe
sbb
rclb
jecxz
cmp
fsubs
xor
pop
sbb
jge
mov
std
cs
pop
popf
mov
add
inc
adc
jg
std
add
mov
je
lea
sahf
loop
pop
xchg
xchg
lods
cmpsl
es
aad
cmp
mov
pop
bound
push
mov
out
aas
data16
push
filds
outsb
mov
inc
sbb
in
je
dec
movl
fcoml
sub
sbb
out
js
jns
sti
cld
iret
shrl
ficompl
cmc
cmc
sbb
dec
pop
pop
mov
xor
pop
mov
loop
cmp
mov
in
xchg
test
mov
push
jg
cmp
mov
lcall
pop
es
scas
je
jbe
aaa
shlb
jl
jns
mov
jle
out
xchg
daa
fmuls
loop
pop
lea
daa
mov
cmp
xchg
les
out
popf
testl
xchg
sahf
inc
xchg
ret
mov
push
movsl
ljmp
test
jnp
outsl
cmp
xor
and
mov
dec
add
or
add
lds
lock
ret
cld
jne
or
arpl
inc
or
inc
lret
ja
pop
add
sbb
cld
cltd
sub
push
push
int
shlb
das
inc
mov
fldt
mov
in
repnz
mov
mov
iret
test
jg
cmp
insb
mov
jmp
cld
arpl
fadds
mov
call
arpl
pop
adc
mov
icebp
pop
pop
and
mov
fdivl
cmp
repnz
xchg
jecxz
lahf
scas
add
mov
push
lahf
jle
or
sub
stos
push
jmp
lock
add
inc
xchg
jmp
mov
fldln2
ss
push
push
sub
mov
add
loope
test
cmp
inc
lret
scas
cmp
adc
dec
rcl
adc
xchg
ret
loope
in
jg
gs
push
dec
pop
cmc
inc
imul
xchg
jl
adcl
sbb
mov
stos
jbe
out
test
jae
mov
adc
lods
cmc
pop
lret
cmp
cmpsb
add
mov
inc
fninit
in
aad
dec
cmp
push
sbb
mov
and
ds
push
or
inc
add
inc
push
push
cmp
add
adc
sbb
in
pusha
or
cmp
inc
adc
xchg
push
repnz
xor
adc
cmc
fmuls
sub
xor
sbb
sub
jnp
cwtl
cmp
mov
cmp
pop
sbb
dec
pop
mov
or
pop
orb
bound
shl
lahf
or
cmpsb
ljmp
mov
mov
mov
mov
inc
repz
xor
out
inc
jnp
mov
cltd
mov
out
es
add
pop
xchg
sbb
xor
test
sbb
xor
popf
dec
push
push
test
xchg
out
lcall
pop
inc
pop
mov
out
outsb
stc
xor
or
lea
lret
insl
or
mov
ljmp
cmp
stos
fcoms
loopne
les
push
sbb
mov
insl
inc
dec
bound
test
jne
sub
dec
push
sbb
cwtl
push
stos
clc
adc
xchg
jbe
dec
and
shrl
aam
dec
aad
adc
lods
inc
roll
daa
repnz
sbb
outsl
scas
lock
stos
cmpsl
and
mov
leave
xchg
jne
aad
jne
and
out
xor
dec
stos
pop
mov
pop
pusha
inc
jle
and
push
subb
cld
mov
aas
ret
xlat
and
mov
daa
rolb
xor
push
clc
cmc
scas
in
or
outsl
mov
imul
repnz
call
pop
shr
sbb
mov
and
es
stos
pop
xor
pushf
mov
jge
aaa
push
push
arpl
xchg
jle
sbb
or
jecxz
hlt
les
cltd
cmp
jns
ljmp
cwtl
jbe
adc
dec
pop
fidivs
fisttps
and
loopne
arpl
adc
fbld
lods
rorl
push
cmp
movsb
mov
mov
jo
das
outsb
js
ss
push
jl
pushf
sbbb
loop
repz
in
cmp
push
arpl
mov
in
pop
xor
jecxz
jno
iret
cmpsl
in
mov
mov
outsl
out
out
bound
and
pop
lea
sbb
xor
les
ljmp
in
sahf
mov
ljmp
push
xchg
pop
dec
dec
push
test
loop
jge
dec
arpl
in
cld
test
test
mov
out
xor
test
adc
mov
mov
cmp
insb
inc
jb
ds
mov
adc
xor
ret
in
xchg
xchg
mov
out
lret
jae
jbe
out
into
imul
push
paddusw
scas
cltd
loope
dec
enter
js
shrb
out
movsb
in
xor
sub
rol
daa
mov
mov
and
mov
mov
call
sub
fucom
dec
xchg
movsb
jecxz
call
icebp
sub
scas
repz
xchg
sub
adc
xorb
repz
iret
or
push
mov
insb
pop
cmp
fincstp
mov
cwtl
fdivrs
xchg
push
addr16
pop
fs
inc
jg
push
js
adc
pop
pop
repnz
sub
pop
mov
and
jbe
cmp
test
test
enter
pop
mov
negb
add
jbe
dec
sub
mov
fdivrl
push
or
sbb
cmp
jo
cmp
xor
lods
cmp
jne
cmp
jae
cli
sbb
xchg
repz
dec
call
or
push
lcall
cmp
fbstp
adc
mov
push
out
inc
shr
inc
neg
jne
add
or
mov
push
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
xor
adc
nop
into
mov
dec
ss
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
push
movsl
add
or
add
and
lock
sbb
arpl
mov
jl
enter
loopne
stc
scas
out
sbb
cmp
sub
mov
and
iret
ror
inc
aaa
lea
aas
scas
sbb
xchg
repnz
clc
pop
sbb
in
ret
xor
int
fnstenv
test
lods
cmpsl
lods
fldl
sub
mov
xchg
das
adc
sbb
stos
ds
pushf
cmpsb
movsb
xor
outsl
sbbb
pusha
out
inc
nop
xorl
pop
push
jno
sub
xor
fisttpll
mov
or
cli
leave
addb
fidivl
int3
mov
mov
pushf
xchg
push
mov
xor
stos
icebp
sub
jno
mov
pushf
inc
out
adc
pop
push
lret
dec
das
arpl
in
cwtl
adcb
pusha
mov
jbe
insl
jp
cmp
sbb
addr16
sbb
pop
pop
xchg
and
jl
hlt
cmp
dec
sahf
pop
push
xchg
ret
icebp
add
hlt
mov
test
jb
pop
fcoms
mov
js
mov
ret
int
out
nop
js
sti
pop
and
xor
dec
dec
adcb
out
mov
lret
jo
push
icebp
popa
cld
jo
out
push
jns
imul
fs
aas
lea
cmpsb
cmp
sbb
mov
mov
aam
adc
add
fcomps
fmull
mov
inc
push
out
xlat
lods
cmp
aad
adc
nop
mov
inc
cmp
jo
std
jge
mov
mov
xor
cs
mov
push
movsl
cmpsb
jb
dec
xor
ret
push
lea
ret
je
mov
fcompl
cmpb
loope
and
sbb
movsl
add
idiv
jg
mulb
pop
add
add
push
jle
je
les
inc
pop
push
or
call
mov
inc
lea
out
test
je
fisubl
cmpsb
dec
push
sbb
fidivs
daa
push
pop
popa
or
mov
add
dec
mov
out
mov
arpl
lcall
push
cwtl
ret
jo
out
mov
mov
subb
pop
sub
jp
cld
lds
arpl
cmpb
xchg
adc
in
cmp
bound
adc
cli
mov
shlb
fiadds
mov
xchg
xchg
pop
movsb
mov
fwait
jge
and
sbb
fmulp
lods
xchg
loopne
push
mov
xchg
insb
mov
adc
mov
aaa
lods
scas
cmc
cmc
dec
xchg
xor
push
xchg
dec
fs
ss
cmp
push
das
pop
bound
test
aaa
adc
movl
pushw
dec
pop
mov
aad
pop
fidivl
mov
or
cwtl
loopne
mov
sub
jbe
mov
cs
sub
int3
hlt
push
aad
fiadds
push
outsb
dec
shll
imul
lahf
or
jmp
je
push
in
push
cmpsb
push
mov
and
sub
or
fstpl
sbb
aad
cmp
add
or
and
test
sub
mov
or
cld
push
sbb
push
jecxz
cmpsl
adc
icebp
lea
xchg
insb
in
adc
mov
add
mov
jns
jne
and
lds
adc
sbb
sbb
movb
stos
nop
cmp
fisubrl
lock
dec
fwait
fs
push
lea
test
lds
or
flds
pop
sbb
pop
std
jg
in
or
xchg
add
add
add
cmp
xor
pop
in
andb
or
call
jo
inc
jmp
cmp
dec
and
stos
into
cmc
and
lcall
mov
test
fdivrl
aam
rcrb
xor
jo
or
mov
dec
xchg
rol
add
imul
sub
xchg
push
or
mov
xchg
push
scas
mov
push
cmpl
pop
add
jnp
divb
xorb
test
pop
out
mov
sarb
sub
inc
push
sti
nop
lds
pop
mov
dec
mov
sarb
push
jp
mov
fmull
sbb
mov
pop
push
ljmp
addb
adc
inc
pushf
lock
ds
adc
pop
inc
pop
push
cmp
xchg
jnp
jno
adc
imul
sub
in
jle
inc
jle
cmc
jp
lret
movsl
popl
nop
push
xchg
xchg
aaa
xor
popf
and
clc
add
ja
add
fldpi
ret
inc
add
add
imul
shlb
test
fdivr
mov
loop
jne
add
pop
pushl
pushl
or
jmp
nop
sbb
in
imul
cld
sarb
and
lret
cwtl
jmp
and
loop
popf
push
sub
mov
or
mov
insb
insb
cmp
inc
and
inc
inc
pop
bound
mov
loopne
rcll
inc
cmp
mov
push
outsl
int
mov
movsl
in
rdpmc
iret
dec
adc
lret
mov
sub
adcl
mov
int
or
stos
insl
xchg
out
lahf
dec
popf
sti
sarl
out
cmpsb
pop
and
add
add
mov
int
mov
iret
ret
mov
add
add
add
ret
das
dec
jl
aaa
lock
mov
test
lds
movsb
and
std
addr16
and
push
ljmp
push
push
and
shlb
je
fwait
das
push
jne
fdivl
push
jmp
cld
mov
push
lcall
xlat
mov
insb
mov
in
push
enter
xchg
scas
clc
sub
mov
pop
mov
idivb
popa
or
mov
test
stos
ljmp
imul
movsb
cmpb
jecxz
ds
mov
adc
ficoml
lcall
cli
cmp
push
jg
cmp
cmp
int
and
xor
rcrb
jnp
and
iret
insb
out
insl
or
mov
mov
shll
push
jp
lock
push
shlb
lcall
outsb
push
push
hlt
mov
xor
ret
outsb
add
das
dec
jge
mov
fsts
negb
insb
dec
fucomp
mov
cmp
jo
mov
pop
mov
xchg
sub
repz
adc
or
insl
aam
mov
lret
jecxz
mov
cmp
mov
test
lcall
ja
push
fidivrs
jmp
aad
imul
ja
add
cwtl
pushf
stos
fildl
pop
fldl
fcoms
xor
scas
xlat
insb
dec
jns
mov
nop
stos
insl
mov
ss
mov
mov
arpl
mov
repz
mov
xor
cmp
lds
jge
repnz
pop
in
mov
pop
sbb
or
loope
call
push
jg
ss
cmc
idivb
std
dec
pop
fadd
aas
lret
xchg
mov
mov
int3
pushf
mov
jge
add
hlt
mov
std
jl
xor
jg
xor
pop
hlt
mov
add
add
add
pop
lods
sbb
inc
sub
xchg
mov
and
jae
xlat
inc
je
inc
sahf
jne
dec
sbb
mov
cmp
xor
mov
fld
mov
xchg
adc
dec
jmp
mov
inc
push
mov
lods
mov
out
inc
mov
rclb
and
push
cmc
xor
test
ret
xchg
das
adc
jmp
out
mov
mov
adc
daa
cmc
ret
ljmp
lahf
fs
les
lea
push
sub
add
xchg
incb
in
sbb
pop
xor
and
and
sbb
pusha
out
dec
leave
mov
push
addr16
mov
jge
dec
cs
mov
or
jecxz
mov
ja
outsl
into
cltd
cmp
aam
push
pop
and
or
cs
int
push
xchg
stos
jmp
pushf
lret
fmuls
testb
ret
mov
sub
mov
and
mov
fs
adc
jecxz
fadds
call
enter
and
imulb
or
aam
cmp
cmpsb
dec
andb
mov
push
fisubs
xchg
outsl
or
lahf
mov
in
push
xchg
stos
mov
or
ret
outsb
cmp
into
mov
mov
jae
loop
xchg
mov
xlat
mov
std
add
sub
jmp
js
test
jnp
sbb
sbb
inc
divb
call
jecxz
inc
push
pop
in
mov
push
or
aas
jg
aam
lcall
dec
les
mov
jno
adc
insl
sbb
lahf
ss
adc
push
pushf
lcall
or
je
fiadds
mov
out
jle
hlt
out
add
imul
fdivrl
nop
inc
mov
out
mov
add
add
add
sbb
xchg
sub
mov
cmp
fisttps
push
or
xchg
jl
or
sub
inc
adc
mov
jmp
icebp
icebp
xchg
orl
and
fiadds
outsl
sbb
fildll
test
mov
int3
xor
cmp
inc
mov
cmp
sub
je
jp
xchg
sub
xlat
arpl
or
mov
lret
loope
clc
mov
jp
cld
push
test
push
out
shlb
lods
xchg
clc
out
push
aaa
push
dec
cmp
fnstsw
sub
push
push
outsb
je
outsl
sub
mov
mov
cmovle
and
js
dec
jb
shll
cltd
adc
pop
ljmp
mov
jmp
dec
and
dec
mov
ds
push
enter
push
sub
je
xor
lret
dec
pop
scas
push
pop
fdivrl
lahf
repnz
dec
mov
ds
lds
dec
inc
ljmp
inc
jne
ljmp
repnz
outsb
cltd
loop
lock
shll
or
pop
push
popf
push
dec
xchg
or
out
jge
cmp
jg
aam
aad
test
imul
sbbb
mov
mov
sti
lahf
test
loope
mov
add
bound
xchg
je
out
jp
sub
push
shll
pop
test
mov
dec
mov
aas
bound
ja
xchg
push
repz
bound
adc
mov
jno
push
lahf
xchg
mov
jb
in
pop
sahf
aaa
dec
xchg
push
push
sbb
loope
push
sub
orl
sub
lds
sti
adc
xlat
sbb
add
xor
movb
xor
insl
insl
js
jmp
or
mov
ja
cmpsl
sbb
jg
pop
fstps
ljmp
add
fs
push
bound
jnp
push
xchg
push
mov
and
int3
jnp
sub
and
mov
dec
lret
fisubrl
xchg
insb
cmp
fisubs
jp
rclb
jp
dec
lret
and
cli
xor
add
shlb
mov
and
adc
jge
xchg
mov
jne
mov
xchg
dec
gs
dec
sbb
lods
jge
cmp
push
popf
push
out
dec
or
inc
or
popf
out
stos
mov
aam
subl
mov
les
mov
mov
jno
and
ficoms
outsb
pop
push
dec
inc
cmpsb
les
sbb
or
push
mov
cmp
scas
popa
cltd
daa
cmp
sbb
vpcmpgtd
and
cmp
mov
or
daa
inc
call
call
roll
mov
push
and
mov
lret
adc
test
fs
mov
or
in
lds
stc
jnp
pop
cmpsl
das
mov
insl
insb
stos
adc
sbb
xor
xchg
in
xor
jne
shrb
lret
faddl
mov
cwtl
lea
jne
or
mov
inc
mov
sbb
outsl
es
inc
xor
in
or
pop
inc
lds
mov
rclb
cltd
pop
mov
or
push
bound
test
cmp
cwtl
mov
push
jl
addr16
or
cmpsb
pop
xchg
das
mov
adc
xchg
inc
cmpsl
leave
push
adc
push
pop
mov
inc
cmp
pop
lock
stos
pop
lahf
mov
pop
je
push
out
test
sub
dec
fdivr
mov
add
add
cmc
fistpll
movsb
fidivl
loop
pop
mov
nop
add
sti
add
add
cwtl
out
jmp
jno
mov
sub
push
xchg
adc
pop
into
jg
je
or
mov
les
push
stos
jae
scas
and
push
or
or
dec
adc
mov
mov
jge
loop
xor
mov
mov
hlt
ss
in
pop
in
mov
imul
cltd
shll
ds
dec
repnz
sar
loope
pop
cld
shrb
mov
pushf
shrb
dec
xchg
adcb
stos
mov
hlt
inc
lock
imul
jae
in
lea
push
loop
popa
sbb
inc
dec
js
lahf
jle
or
ret
pop
adc
jmp
aad
push
cmp
push
xor
aam
push
fmuls
mov
mov
scas
ljmp
out
sub
push
jne
jg
repnz
and
mov
push
pop
jecxz
adc
xor
mov
jge
out
hlt
fcomps
mov
movsb
xor
pop
pop
loopne
xor
orl
call
int
dec
sbb
xor
das
sbb
cs
jmp
gs
pop
repz
cmp
fstps
fsts
repz
shl
or
dec
sahf
cmp
mov
fcomps
icebp
mov
cmpb
rclb
xorb
in
cwtl
scas
inc
mov
xlat
jae
lcall
lods
sub
jne
mov
out
scas
cmc
pop
aad
or
sub
insl
and
add
mov
aam
dec
xlat
xor
sti
adc
xlat
or
out
jecxz
loopne
jge
outsl
push
mov
call
fnstcw
stos
cmpsb
mov
mov
push
repnz
fistpl
jbe
pop
aad
sbb
add
push
movsb
lea
sub
imulb
sbb
call
sti
add
add
cmp
adc
jmp
inc
dec
test
pop
cmp
cmp
inc
adc
mov
test
adc
or
push
sub
xor
nop
shl
xchg
mov
push
or
decl
movsb
dec
cmp
popl
jae
in
ret
bnd
arpl
xor
and
sub
xor
mov
cmpsb
mov
cmp
aas
pusha
in
or
mov
add
xchg
es
dec
leave
adc
xor
inc
inc
pop
movsl
hlt
xor
loope
out
orb
adc
add
jge
sub
inc
push
push
out
mov
sbb
les
movsl
jl
mov
stc
xor
pop
inc
adc
xlat
enter
add
xchg
xchg
xchg
push
pop
xchg
jns
fucomip
mov
imul
mov
aad
jo
jg
sub
dec
in
test
test
xor
insl
or
xchg
lea
xor
aad
cmpsl
or
xchg
jne
imul
out
out
sub
jb
ss
daa
xor
jge
insl
ret
xor
movlps
jp
mov
inc
cmp
mov
test
xor
dec
fimuls
sub
rorl
subl
ss
data16
test
test
mov
inc
pop
outsb
push
ja
pusha
int
stc
mov
xchg
and
lret
std
push
jne
xchg
jne
fs
arpl
or
xchg
loope
adc
out
jns
sub
inc
xlat
rcrl
lret
das
call
lret
mov
lods
add
sarl
mov
jae
call
push
lods
arpl
popa
mov
mov
mov
lds
repnz
add
add
test
mov
enter
add
add
add
imul
div
mov
sub
adc
xor
adc
pop
cmp
jbe
lret
cltd
fcomps
push
jle
mov
cmpsb
pop
mov
js
mov
inc
add
leave
mov
mov
and
dec
cld
in
lret
dec
icebp
sub
push
jne
arpl
mov
das
push
push
lods
testb
pop
or
rorb
outsb
dec
test
repz
xor
push
loope
fiaddl
pop
xlat
xchg
pop
cmp
nop
sub
mov
push
das
adc
neg
xchg
insl
std
jmp
mov
test
and
mov
push
sbb
sbb
daa
push
jno
iret
mov
mov
iret
sahf
push
outsb
ja
inc
pop
fwait
xchg
adc
or
out
roll
rcrl
inc
inc
gs
pop
cmpsl
sti
fmull
sbb
sub
les
mov
mov
arpl
loope
ja
cwtl
in
mov
subl
inc
mov
imul
sbb
xor
cli
fisttpll
push
add
pop
loopne
popa
sub
push
sub
shlb
mov
xchg
xor
push
dec
jecxz
sbb
test
jo
mov
xchg
sub
xchg
push
out
stc
sbbb
mov
pop
push
pop
sti
add
adc
jmp
xchg
test
iret
sub
pop
pop
dec
pop
cmp
mov
lret
rcrl
fiaddl
sbbb
cltd
push
outsb
movsl
fs
mov
inc
mov
inc
sub
enter
pop
icebp
sub
into
push
adc
add
outsb
push
push
into
xlat
popf
adc
in
and
cwtl
mov
mov
cmp
into
movsl
and
sub
cmp
add
xchg
std
jg
mov
lea
xchg
add
sti
add
add
mov
xchg
inc
cmp
push
pop
or
je
enter
gs
mov
add
je
xor
sti
data16
dec
cli
pop
gs
hlt
xchg
jg
mov
pop
roll
xchg
xchg
fcoml
cmp
add
out
loopne
inc
js
stc
out
scas
jmp
or
dec
xor
movsb
in
mov
push
andl
and
sbb
scas
cli
mov
push
push
ljmp
fisubrs
ret
lods
push
sbb
add
ret
mov
call
rcrl
in
call
cmp
inc
inc
add
ret
popa
dec
push
xor
gs
mov
inc
shl
lahf
cmp
push
sbb
in
inc
ret
imul
fisttps
mov
push
mov
mov
loopne
xchg
jp
sub
mov
push
in
adc
lea
mov
push
push
sbbl
jo
jge
cmpsb
into
dec
daa
push
adc
xchg
or
xchg
jg
movsl
or
and
or
or
cmpsb
jns
and
ljmp
call
stc
mov
pop
clc
inc
pop
out
ss
popl
fcompl
sahf
int
aas
movsl
ljmp
cmpsb
cmp
std
sub
rclb
ret
sar
cli
lea
repz
jae
test
lea
decl
inc
ss
aaa
repz
mov
or
jne
adc
insl
loope
push
enter
notl
cmp
popf
daa
pop
rorb
cmp
push
cltd
into
inc
push
decl
stc
mov
fwait
int
jb
pop
hlt
test
stc
ds
push
addr16
inc
and
in
sub
add
idiv
iret
rorl
pop
wbinvd
sbb
cwtl
add
sti
add
add
int3
inc
testb
sub
aad
pop
inc
in
sbb
mov
mov
aaa
mov
mov
dec
mov
lods
cli
test
imul
ret
mov
and
push
into
push
lret
leave
vorps
adc
jo
pop
and
mov
roll
pop
cmpsb
imul
sub
sub
fcmovne
pop
jnp
ljmp
or
push
fcompl
or
dec
xchg
pop
jecxz
je
nop
pause
out
xlat
mov
mov
loop
push
jge
sbb
and
pop
bound
rcrl
test
inc
arpl
or
mov
add
fsts
repz
jno
add
lret
roll
pop
dec
out
int3
push
xor
inc
fsub
bound
sbb
mov
push
imul
in
cmpsb
dec
jbe
repz
dec
add
fldl
mov
pop
sbb
aad
ljmp
jne
out
in
xchg
das
mov
sarb
lods
sbb
in
xor
cmp
pusha
into
mov
jl
mov
cmp
mov
shlb
dec
mov
testl
push
stos
mov
adcl
or
adc
call
jne
mov
jae
imul
out
xchg
pop
inc
icebp
sti
pop
xor
or
int3
add
dec
pusha
xchg
pop
mov
shrl
fisttpl
xlat
loop,pt
jb
lahf
xchg
cwtl
jo
and
orl
push
stos
jbe
sbb
lahf
leave
xor
popf
adc
add
xor
xchg
add
mov
loopne
pop
mov
sub
pusha
pop
inc
and
sub
mov
inc
add
ret
mov
ja
or
lcall
push
pop
add
jnp
dec
mov
fcoml
xchg
mov
sbbb
push
nop
fyl2xp1
and
dec
push
ss
xor
fadd
aas
sbbl
cmp
dec
insl
push
aad
mov
lahf
mov
jmp
dec
ret
push
mov
inc
mov
jge
mov
clc
add
daa
cmp
adcb
push
mov
pusha
jle
fdivs
jbe
jno
add
cmpsl
lock
push
xorl
bound
test
add
stc
lock
mov
jg
pop
lds
xlat
test
pusha
fisubrs
cmpsl
shll
je
inc
cmpsb
jns
pop
sbb
ficoms
sbb
mov
in
dec
sbb
sti
fsubl
jns
jp
xchg
jne
dec
stos
sahf
sub
sbb
jnp
xor
aad
cmc
mov
xor
repz
or
iret
in
sbb
scas
es
xor
cmc
or
jmp
in
mov
scas
or
cmp
cmp
jg
xchg
jle
inc
mov
in
mov
repnz
cwtl
rcrb
mov
inc
lods
lea
leave
xor
add
mov
fidivrs
or
scas
rorl
pop
mov
repz
pop
dec
hlt
mov
adc
nop
pop
jecxz
insl
and
xor
pop
sti
jecxz
cld
jae
pop
aad
push
lods
mov
jne
xchg
sbb
dec
out
jne
scas
add
loope
dec
cmp
cs
jmp
out
add
mov
in
xlat
movsl
inc
repz
adc
inc
test
mov
push
aad
repz
or
mov
xor
fndisi(8087
cmp
hlt
outsb
jmp
add
push
jle
xlat
lret
push
testl
pushf
add
sti
add
add
pminub
lock
sub
cmpsb
xchg
cltd
push
je
xchg
xor
and
push
mov
outsl
inc
sub
mov
cmp
cmp
pop
mov
push
adc
push
and
xor
jge
inc
mov
out
cmp
xor
fmuls
fildl
pop
dec
adcb
into
add
movsl
mov
cmp
xchg
shll
nop
xor
test
sub
mov
mov
mov
inc
add
insb
jecxz
clc
or
dec
pop
xchg
or
dec
and
pop
or
push
push
jmp
es
popf
mov
and
sub
mov
fnsave
rcr
mov
jg
mov
or
lods
fs
jnp
enter
xchg
dec
out
repz
bound
pop
daa
dec
scas
xlat
jg
out
mov
mov
ss
pop
pushf
std
push
mov
int3
inc
or
jne
sub
jnp
cwtl
sbb
sbb
sti
push
iret
fistpll
js
push
mov
call
shrb
sub
xor
mov
xor
mov
mov
andnps
fisttpll
xor
es
fbstp
and
push
jns
outsl
fs
push
loope
dec
push
out
repnz
cmc
push
mov
and
pusha
pop
mov
lock
jne
in
in
stc
mov
mov
xor
mov
and
loopne
shl
leave
stc
inc
mov
push
inc
cmc
daa
cwtl
aad
mov
flds
shlb
push
mov
ficomps
cli
pop
scas
fcoml
das
fidivl
cld
jae
inc
add
push
or
pop
out
repz
fucomp
insb
out
pusha
xchg
ret
add
add
add
add
inc
mov
cld
inc
add
or
xor
ss
je
jno
push
cmpb
test
in
nop
inc
ret
push
test
int
mov
pop
scas
inc
mov
pop
dec
pushf
bound
in
dec
in
test
cwtl
mov
or
xchg
fcmovbe
mov
sarl
insb
das
sbb
popa
xchg
jmp
repnz
dec
repz
dec
leave
xchg
cs
outsb
cmp
dec
lds
sbbl
popa
jae
je
sbb
cmp
int3
jmp
and
mov
jg
rcrb
fs
test
mov
push
js
push
jl
popa
mov
adc
xchg
mov
insb
jle
sub
inc
arpl
pop
insl
push
or
xchg
movsb
loope
int3
add
jae
jp,pn
adc
std
les
fisubrs
test
adc
cld
test
std
gs
cmp
jo
dec
mov
cli
sbb
dec
mov
jb
and
sbb
std
shll
cmpsb
js
lcall
pop
mov
cmp
xor
int3
push
xchg
sub
aam
in
cmp
sbb
out
lods
std
cs
sub
pop
lret
aad
or
pop
mov
dec
aaa
jbe
xchg
dec
and
mov
sub
sbb
push
sahf
mov
add
push
pop
rorb
leave
popa
push
dec
mov
cld
mov
nop
rcrl
or
mov
jns
imul
push
and
sbb
pop
outsb
data16
das
inc
insb
or
pop
add
add
pop
andl
icebp
push
test
fdivrl
xor
xor
andb
xchg
jge
lret
and
add
add
xchg
insl
mov
out
nop
sbb
outsb
mov
add
add
add
mov
insl
fnstenv
cmp
aad
xchg
cld
ja
mov
lcall
pop
xchg
imul
mov
cmc
cmpsl
jae
ds
aaa
adc
in
jle
xchg
cs
jmp
mov
rorl
test
or
add
and
jae
mov
ja
push
jb
movsb
jnp
sbb
add
fs
push
inc
mov
stos
nop
std
mov
sbb
mov
fadd
xchg
data16
pop
sub
iret
dec
test
jmp
jne
inc
stos
pop
outsl
mov
cmp
cmp
fiadds
adc
push
lret
sbb
push
dec
rcll
sahf
push
cmpsb
add
push
and
cmp
mov
xchg
stos
jno
mov
xlat
or
rclb
or
xchg
das
jecxz
cmp
mov
adc
out
aaa
or
les
mov
test
push
gs
or
push
fimull
pusha
xor
lret
or
in
mov
adc
aam
pop
sub
inc
cmpsl
or
jmp
bound
das
pop
push
jge
jns
xchg
rcrl
das
sub
gs
rclb
mov
jb
xor
js
jg
addr16
jns
shlb
pop
idiv
leave
rcrb
jnp
xor
lods
mov
cmp
cltd
sbb
filds
mov
pop
aad
and
in
and
mov
test
nop
or
repnz
xlat
adc
xchg
stc
pop
push
nop
faddl
cwtl
mov
add
cs
aas
cmpsb
roll
test
add
jbe
jne
test
adc
call
out
mov
push
mov
shlb
repz
arpl
push
out
adc
stos
mov
add
dec
out
ja
idiv
pop
out
cmp
out
mov
add
add
inc
mov
aad
movsl
mov
loopne
cmp
mov
or
cltd
cmp
mov
daa
xchg
xor
stos
std
jl
out
lret
outsl
rclb
mov
mov
or
inc
mov
sbb
sub
push
sahf
jb
xchg
and
push
cmpsb
js
xchg
rorb
add
test
ljmp
ja
jb
sub
int
sbb
inc
pusha
cmp
das
ficomps
cmp
cmpsl
repz
mov
test
imul
fwait
leave
jns
dec
sub
xchg
js
rcrb
pop
cld
cwtl
xadd
xchg
stos
dec
frstor
gs
aad
jp
or
jnp
loop
pop
jo
cmpsb
repnz
pop
fsubrl
jmp
ror
scas
mov
sbb
jbe
push
fs
lret
rol
and
add
aam
pop
jb
sub
and
loope
mov
aad
ja
mov
mov
scas
push
inc
notl
or
jne
sub
mov
sbb
and
sarl
testl
out
dec
pushf
sbb
mov
pushf
lret
loop
jecxz
jnp
loopne
xchg
dec
repz
out
jge
sub
xor
pusha
hlt
rorb
loope
cmp
movsb
xor
inc
jmp
pushl
in
mov
xchg
add
mov
cli
dec
cmp
xor
inc
push
clc
dec
ret
jo
mov
dec
mov
push
xchg
mov
movsl
enter
dec
outsb
loope
cwtl
loop
sub
adc
dec
jp
in
inc
pushf
lds
push
cli
pop
test
daa
cmp
repnz
xor
push
mov
popl
push
inc
mov
imul
push
xchg
cltd
mov
and
mov
gs
xchg
or
add
sti
mov
inc
pop
lods
subl
add
sti
add
add
pushl
or
adc
clc
xchg
xchg
sbb
pop
pop
inc
mov
pushf
mov
xchg
push
sub
sub
cmp
aaa
cmp
mov
and
mov
pop
mov
jbe
into
idivl
adc
cmpsl
push
push
fcmovnb
fsubrs
fdiv
cmpl
aam
inc
push
enter
sub
and
sbb
leave
cmp
nop
or
cmc
sub
out
and
cld
push
cmpsb
push
pop
push
sub
adc
lret
xor
xlat
pushf
orb
repz
and
movsl
dec
dec
ror
inc
addr16
mull
mov
sbb
pop
in
jns
jbe
or
xchg
lea
jmp
fmuls
xchg
data16
loop
mov
mov
push
into
lret
adcb
scas
and
aam
push
in
add
adc
insb
pop
ja
sub
ror
add
inc
int
mov
rcr
pop
sub
cmp
jle
xor
inc
mov
fisttpll
addl
clc
int
bound
stc
cmp
shr
faddp
aad
sti
xchg
add
mov
inc
push
lahf
call
xchg
inc
int
jecxz
mulb
loope
fdivrl
jle
or
fs
out
mov
dec
aad
pop
aam
sahf
mov
enter
out
aaa
sbb
int
dec
pop
jbe
cmp
jb
or
push
fld
and
mov
xchg
cmp
shlb
aaa
shrb
test
dec
fs
pop
lock
mov
out
ret
pop
out
or
and
and
shlb
mov
pop
and
mov
lods
sub
rcl
jecxz
test
add
sahf
xor
sub
hlt
cmpsl
adc
cmpsb
add
sti
add
add
das
test
int3
pop
mov
test
in
push
adc
push
aas
and
or
xor
sbb
and
mov
and
rcrl
jg
fwait
sbb
pop
gs
in
pusha
lcall
xor
pushf
mov
fmuls
adc
arpl
push
popa
mov
les
pop
dec
pop
movsl
push
adcl
cmp
int3
fwait
ret
pop
aad
or
nop
fwait
daa
js
and
ss
les
rcl
push
add
scas
inc
frstor
push
outsb
ret
lds
mov
popa
adc
inc
mov
inc
mov
jae
push
pop
mov
cmpsl
test
insl
or
mov
insl
loopne
jmp
mov
xchg
dec
les
adc
mov
mov
pop
pop
and
pop
aas
ljmp
lock
cld
test
jne
ss
cmp
dec
inc
les
cmp
fildll
aad
and
push
mov
pop
push
add
pop
call
cmpsl
and
in
sahf
xchg
loopne
fs
movsb
pop
cmp
lea
sub
fwait
dec
mov
pop
ja
mov
sbb
adc
lods
jl
inc
repz
call
popf
in
insb
imul
lret
scas
dec
dec
xor
sbb
mov
sti
jecxz
dec
or
inc
fisttps
jmp
pushf
jb
int3
mov
add
insb
lcall
dec
cltd
jne
or
cmc
ljmp
popf
clc
int
icebp
dec
ljmp
ret
lret
cmc
loop
mov
mov
sub
jp
add
shl
js
repz
orl
mov
cmpsl
lock
popa
iret
roll
stc
std
in
mov
mov
std
cmp
cmp
add
add
add
inc
flds
dec
outsb
push
in
bnd
or
jecxz
mov
add
movsb
push
pushf
out
insb
aad
enter
sbb
pop
or
fucomip
cmpsl
pop
mov
fwait
sub
insb
push
outsl
jle
loopne
dec
inc
fnstenv
das
lret
xor
jb
pusha
push
mov
cmpsl
cmp
jns
loope
xchg
xlat
rcrb
lock
addr16
ror
fidivrs
and
mov
rep
sub
es
pop
mov
scas
sub
push
cltd
imull
shlb
mov
adc
xorl
push
fadds
and
cld
xchg
xor
sbb
sub
sub
push
push
jmp
xor
js
roll
dec
dec
cltd
je
mov
mov
popf
arpl
adc
or
ret
push
xor
add
lcall
xchg
pop
lret
pop
push
jns
cmp
pop
jns
scas
aad
pop
cwtl
jmp
test
jmp
xlat
dec
pop
jo
pop
xor
dec
or
scas
pop
sub
leave
addb
int
xor
xor
sub
push
fs
mov
mov
in
and
jo
stc
xchg
lahf
cmp
sub
adc
into
inc
mov
add
lahf
mov
ljmp
cmp
mov
test
cwtl
adc
arpl
push
cmp
push
mov
into
test
shll
or
sub
cmp
ficoml
xlat
into
mov
leave
push
xor
adc
inc
fdivrp
test
in
fbld
jl
push
push
cmp
fsubl
dec
cmc
add
rolb
testb
inc
les
mov
sti
add
add
pop
out
test
popa
repnz
out
xchg
arpl
xchg
mov
xorb
in
and
mov
adc
push
mov
lock
fwait
push
lahf
adc
paddb
xorl
lea
mov
repnz
mov
cmpl
add
mov
faddl
leave
flds
fs
mov
scas
movsl
and
adc
push
pop
pushf
adc
xchg
pop
nop
cmp
iret
cmpsl
imul
dec
mov
xor
mov
lahf
xchg
xchg
sbb
dec
mov
add
jb
mov
jns
repz
stc
mov
sub
sub
loopne
int
dec
lret
jne
push
or
aam
mov
rorl
mov
push
add
cs
das
pop
das
mov
dec
iret
in
int
stos
inc
cmp
fs
push
in
sub
add
adc
jg
in
les
pusha
sarb
cmp
cmp
mov
jge
mov
dec
sbb
lahf
repz
das
jge
jb
sbb
mov
sarb
mov
fwait
subb
pop
popa
cmp
jp
inc
enter
cmp
lods
rcll
fs
loope
cmc
xchg
mov
cmp
sub
lods
cmp
in
or
jmp
lods
sbb
fldenv
imul
or
push
out
mov
inc
fwait
cmp
movsb
test
xchg
jb
test
inc
pop
jae
xor
push
and
das
or
out
int3
lret
mov
cmp
pop
or
ficoms
mov
push
aaa
fwait
cmp
add
add
scas
mov
inc
inc
popa
out
scas
adc
sub
in
add
popa
data16
gs
mov
push
and
lahf
lods
add
sti
add
add
pop
inc
aad
or
push
jl
mov
push
lods
xchg
mov
aas
cmpsb
sub
mov
jge
sbb
xor
out
add
and
stos
add
dec
dec
dec
test
cld
addb
fwait
mov
lret
mul
nop
jg
int
int3
add
outsb
imul
jg
insb
das
adc
mov
mov
hlt
mov
aad
repz
daa
mov
add
and
jmp
mov
dec
xor
stc
jecxz
or
outsl
shll
jmp
incb
pop
pop
leave
out
out
lahf
aaa
insl
xor
das
mull
jg
addb
decl
mov
or
sti
fnsave
xor
add
dec
sub
icebp
stc
push
push
js
or
pusha
leave
rcll
cmp
add
aam
fwait
out
aam
ljmp
fldl
mov
das
sub
pop
push
mov
cmp
int
subb
push
sti
int
in
mov
out
xlat
xor
xor
cmp
fnsave
push
mov
inc
push
jp
test
jmp
lcall
pop
xchg
mov
sub
daa
fimuls
push
mov
bound
iret
sbb
test
pop
add
jle
das
jne
xchg
iret
pop
loopne
push
repnz
and
jecxz
jns
mov
adc
mov
xor
pop
ficomps
dec
out
dec
in
pop
sbbl
or
rclb
imul
out
cld
arpl
lret
xchg
cmp
mov
mov
stc
mov
aaa
jmp
out
add
add
xchg
shrb
cli
ss
arpl
enter
scas
jle
dec
mull
add
sub
popf
or
sbb
jg
adc
add
cmp
cli
cmp
adc
xchg
mov
rcrl
add
add
push
pop
xor
icebp
dec
mov
loop
dec
insb
sti
add
stos
jb
pop
mov
mov
in
lahf
cwtl
pop
lea
leave
xor
jle
cltd
in
mov
pop
jne
or
pop
addr16
or
clc
mov
or
sub
sarl
and
fcoml
bound
orl
mov
leave
pop
mov
mov
and
out
loop
mov
iret
or
push
dec
pop
sub
or
inc
pop
mov
mov
xor
test
movsb
add
ss
daa
cmp
lods
mov
lock
and
push
add
std
negl
mov
push
lahf
mov
lea
out
dec
mov
rorl
pop
stos
leave
mov
pop
jae
and
dec
push
xchg
ret
stc
lock
dec
shlb
mov
pusha
mov
int3
in
rcll
iret
movsb
shrl
xchg
ljmp
jl
lods
adc
push
xor
sbb
in
data16
popf
in
pop
ds
xchg
sti
jmp
or
jl
pop
mov
mov
push
or
xchg
xor
enter
sub
adc
jo
stc
js
pop
lcall
and
mov
mov
ror
stos
sub
or
lods
jge
sbb
ja
sub
cmpsb
ffree
je
mov
jmp
xlat
sub
fnstenv
pop
sbb
jnp
xor
adc
in
pop
rorl
adc
cltd
xchg
pop
ret
add
jo
inc
imul
xchg
pop
rorl
jg
lea
into
insl
lods
inc
andl
jl
push
shlb
out
adc
cmp
hlt
and
add
adc
mov
mov
hlt
mov
add
and
push
push
cmp
adc
pop
cld
xchg
mov
add
add
add
xchg
cmc
add
in
and
or
or
addr16
cmp
mov
cmpsb
push
xor
jae
xchg
outsl
push
ljmp
mov
jb
stc
lret
push
lods
test
cmp
nop
lret
cmc
lods
rcrb
aam
sbbl
loope
insl
and
ja
sub
lock
int
cmpsb
xchg
push
jg
push
mov
rorb
mov
mov
adc
jb
sub
cmp
adc
repz
pop
and
and
jbe
orl
in
mov
inc
into
sti
shll
pop
adc
iret
out
and
clc
mov
cmp
inc
mov
test
sti
imul
sti
lret
mov
out
xor
dec
pop
add
test
sub
jbe
jne
pop
inc
scas
mov
add
fldenv
lods
icebp
jge
dec
adc
xchg
dec
xchg
enter
lea
out
out
inc
sbb
pop
push
mov
dec
sub
sti
pop
sbb
push
mov
insb
sub
inc
jo
cld
mov
dec
pop
xchg
pop
sbb
fs
inc
stos
sub
std
sbb
cmc
dec
xlat
test
and
push
decl
out
lds
and
rcrb
out
or
stc
push
gs
mov
stos
pop
add
idivl
daa
in
mov
scas
ss
es
jo
xchg
int3
repz
inc
pushf
dec
leave
out
mov
mov
fistl
fiadds
cltd
inc
inc
data16
out
add
jle
aaa
mov
xor
or
adc
dec
fisubrl
mov
in
mov
and
aaa
and
cmpsb
xchg
mov
xchg
stos
inc
add
cmp
mov
in
outsb
fs
sub
mov
add
add
add
cmp
lahf
and
push
je
sub
sub
fwait
xor
inc
mov
dec
pop
cmovp
pusha
pop
adc
lahf
inc
push
jae
sub
das
add
mov
imul
addr16
stos
xchg
cwtl
mov
dec
mov
in
ja
arpl
les
xchg
fisubs
daa
push
xchg
jnp
jl
mov
dec
popa
jle
aad
addr16
cmp
test
nop
js
in
ss
adc
mov
hlt
jp
addr16
cmp
pushf
and
mov
adc
pop
push
shll
sti
mov
push
repnz
mov
fs
test
insb
into
out
dec
js
movsl
xchg
nop
mov
mov
lcall
icebp
pop
pop
divl
adc
mov
arpl
je
ret
xor
cld
jo
cmp
rol
sahf
and
je
clc
mull
inc
insl
int3
cmp
jnp
pop
sbb
leave
test
mov
std
sbb
sbb
sub
adcl
data16
or
mov
notl
in
int
lods
add
mov
mov
lcall
sub
jecxz
xchg
lock
sub
lahf
inc
push
insl
mov
sub
inc
dec
ficomps
cmc
aam
dec
clc
lods
in
sti
bound
ficompl
pop
mov
xor
into
jl
adc
fnstenv
test
inc
ds
fwait
sarb
sub
mov
lock
xor
pop
icebp
push
cmp
mov
xor
stos
push
test
test
inc
sahf
addb
in
into
sarb
adc
dec
pushf
addr16
push
loope
mov
int3
negb
or
push
push
push
inc
xor
in
inc
cmpsb
lods
xchg
fstps
pop
lahf
add
inc
mov
jb
add
decb
add
add
shll
push
xchg
out
daa
dec
mov
popf
mov
mov
jg
adc
pop
jg
xchg
pop
call
push
and
xchg
push
ss
aad
cs
lahf
adc
cmpsb
call
xor
in
ret
pop
shr
jb
in
stos
popa
fs
cwtl
outsl
insb
sti
xlat
adc
sbb
mov
adc
fs
mov
pop
mov
mov
ljmp
movsb
in
xchg
insl
pusha
lock
dec
dec
js
xchg
aas
mov
mov
sbb
popf
insl
push
icebp
inc
add
push
cmc
fldenv
ds
stc
pop
insl
pop
outsl
mov
jae
decl
xchg
mov
pushf
pop
pop
int3
mov
dec
rclb
mov
int3
mov
adc
push
jno
fimuls
jmp
lahf
ds
sarl
out
movsb
xor
xchg
aad
mov
inc
aaa
jb
pop
xchg
lock
push
xor
rcl
lahf
or
insb
sbb
dec
pop
enter
add
aaa
in
xchg
push
ret
out
adc
sbb
mov
lret
and
mov
or
inc
push
ljmp
repnz
push
into
insb
pop
inc
mov
neg
fcmovnu
scas
dec
push
int3
aas
dec
push
inc
inc
pop
in
pop
sub
cmpsb
sbb
aam
dec
pop
scas
jno
mov
aad
and
pop
pop
in
cs
ljmp
or
add
shrb
cmc
jo
pop
jnp
icebp
mov
ja
pop
mov
insb
call
lret
xor
cmp
jle
sbb
xlat
daa
adc
shll
cmpl
or
imul
daa
gs
cmpsb
out
mov
nop
mov
fsubrs
cwtl
test
lahf
dec
mov
add
clc
mov
cmp
mov
in
out
or
add
add
and
aaa
dec
and
push
mov
dec
dec
and
push
inc
out
pop
call
in
sub
push
pop
mov
daa
testb
lods
or
leave
enter
inc
movmskps
add
sbb
mov
test
cmc
xchg
loop
sbb
gs
mov
mov
ljmp
dec
rol
push
mov
scas
sarb
mov
stos
pop
push
movsb
nop
ret
scas
stos
xor
sub
pop
sbb
cmpsb
jl
rdmsr
lea
sbb
mov
das
mov
and
pop
add
out
gs
lcall
pop
test
fcmovnb
or
cmpb
orb
dec
inc
or
mull
fisubrs
or
push
mov
push
adc
mov
ds
mov
push
xchg
in
test
in
add
xchg
test
imull
push
pop
and
pop
inc
bound
adcb
sub
js
loop
mov
sub
and
jo
xchg
cmp
movsb
add
xchg
enter
ds
sti
sbb
lret
ror
mov
loope
out
adc
add
aad
pop
jp
pop
aad
sub
mov
test
rorl
cli
out
mov
lds
sbb
scas
xor
inc
pop
shr
das
rorb
jno
lcall
xor
xor
or
insl
mov
cltd
push
ss
sub
sub
lret
inc
sahf
insl
ss
xchg
jl
mov
fisubl
mov
loope
out
jne
mov
xchg
int3
add
sbb
out
idivl
test
shrl
mov
add
mov
addr16
sbb
mov
jno
jb
out
xor
adc
inc
fsub
sub
jecxz
or
dec
jecxz
cwtl
outsl
mov
rorb
sbb
push
cmpsl
stos
sub
xchg
xchg
dec
fwait
stos
js
sbb
cmpsl
iret
scas
ss
or
sbb
ljmp
cmp
jbe
aad
inc
dec
push
jo
push
test
shll
aam
dec
iret
cmp
adc
mov
aad
add
and
dec
push
xchg
movsb
or
add
xor
dec
pushf
xorl
subl
aas
sbb
push
push
mov
sub
inc
and
and
std
cmc
in
push
push
cmp
pop
bound
xor
dec
pop
imul
movsb
lock
xlat
xchg
mov
rorl
pop
push
ljmp
xlat
adc
mov
xchg
and
mov
push
dec
mov
or
mov
sbb
insl
mov
jbe
add
xchg
lods
sbb
or
mov
lea
mov
loopne
iret
cs
and
pop
mov
or
je
push
pop
add
test
lcall
popf
mov
stos
xchg
cmp
hlt
cwtl
gs
jae
lahf
ds
loop
fisttps
push
out
mov
mov
pop
push
jecxz
rorb
sti
push
mov
adc
pop
or
pop
popf
and
and
ja
cmp
int3
adc
pop
or
mov
dec
sbb
sub
sub
mov
cwtl
in
dec
stc
jge
cmpsb
lcall
lock
aas
add
mov
gs
fcompp
out
fs
popf
outsb
xor
add
add
add
mov
leave
aam
addr16
xchg
dec
mov
mov
cld
or
cmpsb
jge
popa
roll
inc
lods
lahf
inc
mov
mov
out
xchg
jle
mov
mov
dec
stos
iret
cmp
cmp
in
ret
sub
xor
mov
and
sub
xlat
imulb
inc
sub
push
int
test
in
negb
mov
int
cmp
xlat
movsl
jp
dec
mov
out
dec
and
cwtl
scas
push
push
enter
daa
ja
xchg
xor
fcoml
push
aam
pop
mov
jp
and
push
je
adcl
addr16
mov
mov
push
int3
mov
push
adc
jnp
cwtl
lahf
jbe
xor
jge
adc
outsb
ret
push
jno
pop
lods
mov
xor
test
or
jl
inc
or
stos
es
add
xchg
in
xchg
xor
xchg
cli
inc
decb
in
outsb
fadd
stos
and
frstpm(287
xor
dec
mov
lods
aaa
roll
data16
fcompl
mov
sbb
jmp
mov
push
sub
shll
repnz
imul
in
pop
dec
xchg
xor
jge
ret
xchg
ret
movsl
mov
mov
cmpsb
cmpsb
xor
add
add
mov
aad
into
or
pop
cmc
cwtl
mov
gs
icebp
add
jb
fstps
jp
adc
mov
mov
jno
or
or
push
pop
add
adc
xchg
pop
jle
repnz
mov
das
scas
cmp
call
fwait
xlat
dec
push
shll
jno
add
fsubs
jmp
adc
jl
dec
dec
test
add
sti
add
add
pop
aas
add
ss
or
push
xchg
popa
sbb
sbb
and
jnp
and
or
lods
xor
in
aas
xchg
pop
xchg
cmp
xchg
mov
adc
inc
cs
mov
adc
ja
mov
xchg
shr
nop
icebp
cmp
js
cmpsl
in
push
jae
loope
push
ret
dec
jbe
adc
out
lret
lret
or
push
mov
cmp
or
das
dec
xchg
int
jno
mov
cwtl
test
jmp
leave
dec
aad
inc
adc
sbb
repnz
je
mov
inc
jbe
dec
ret
or
mov
rcl
mov
or
rorb
vpunpcklbw
mov
and
stc
push
fs
cltd
xchg
inc
into
add
jns
ret
sbb
leave
pushf
xor
lret
lods
adc
jae
push
scas
xchg
insl
test
mov
or
jae
and
sbb
js
mov
mov
push
and
push
cmp
addb
push
push
mov
aas
inc
sbb
test
sbb
ljmp
mov
mov
dec
stos
imul
adc
jns
and
pop
mov
push
or
jno
ja
repnz
sbb
mov
rclb
movl
and
dec
adc
rcll
add
inc
lret
and
repnz
roll
mov
or
jl
cs
stos
jle
inc
pmaxsw
data16
adc
push
adc
test
inc
fidivrl
lds
addr16
inc
cmc
ja
xor
inc
nop
or
mov
xchg
call
cmp
rcrb
cwtl
jnp
mov
mov
ss
push
fisubs
xlat
sbb
in
push
and
xor
sub
sbb
mov
add
inc
lret
int3
sbbb
adc
sub
push
aam
movsb
mov
lahf
cs
out
int3
pop
jle
pop
pop
addr16
mov
adc
adc
mov
fnstenv
out
pop
xchg
inc
push
mov
push
jno
fnstsw
sub
fisubrl
or
jmp
push
loope
hlt
rolb
imul
xchg
mov
sar
adc
jecxz
lea
fadd
push
push
clc
test
fbstp
shr
subb
out
loop
imul
sbbb
rcrl
hlt
stos
dec
mov
punpckhdq
sub
inc
add
arpl
cmpsb
in
push
cmp
dec
repnz
sahf
jmp
mov
mov
js
test
sub
test
lods
lea
fidivl
das
add
stos
or
mulb
or
push
xchg
cmpsl
fwait
xor
pop
notb
test
movsb
push
pop
xor
push
cmpsb
mov
pop
xor
sub
inc
sbbb
push
lds
or
jmp
cld
daa
cmp
pop
mov
mov
and
xlat
cmp
loopne
shll
outsb
arpl
mov
cmc
leave
test
stos
les
loop
mov
xor
pop
ret
sbb
inc
xchg
test
outsl
rcl
xor
jg
imul
inc
lods
jns
cli
mov
jmp
aaa
cmp
inc
inc
jbe,pn
xchg
js
lahf
add
aam
cmp
and
mov
pushf
cmp
test
mov
jecxz
in
cmp
rcl
jnp
inc
popa
dec
jmp
dec
mov
jno
mov
mov
in
dec
xchg
mov
sbb
add
pop
mov
jg
data16
sbb
jmp
mov
rolb
sti
add
add
mov
inc
push
jge
in
imul
clc
and
popf
rorl
jle
repz
adcb
xor
mov
xchg
push
xor
push
stos
cmp
or
mov
adc
pusha
cli
jo
sbb
jo
cmp
push
jne
movsb
in
mov
inc
xorl
mov
adc
mov
ja
js
imul
jb
ret
push
fcomps
dec
es
mov
jae
mov
pop
dec
test
cmp
sub
sbb
out
pushfw
daa
xor
hlt
enter
add
fbstp
push
rcrl
aad
clc
add
cmc
inc
popa
xor
imul
test
xchg
dec
sub
push
hlt
movsb
data16
das
xor
add
loop
and
aam
pop
imul
les
adc
mov
sbb
aam
cmp
pop
jg
popa
jae
jae
lock
loopne
xor
into
xchg
push
jb
and
mov
nop
ja
lea
xchg
mov
stos
data16
outsb
das
or
and
mov
push
mov
push
pop
mov
push
or
lret
stos
je
pusha
stos
fnstenv
pop
ss
movsl
sbb
jno
ljmp
sub
outsl
leave
jo
cwtl
loop
xor
sub
cwtl
adc
push
push
icebp
mov
pop
mov
les
sub
lea
cwtl
fmull
xor
cltd
and
add
cmpsb
inc
jp
jg
mov
rorb
imul
lret
inc
sbb
push
mov
pushf
cs
mov
mov
lret
xchg
stc
pop
pop
divl
stc
popl
mov
ret
mov
aas
push
call
test
mov
xchg
push
insl
scas
pop
xlat
sbb
inc
push
pusha
jbe
out
test
stos
inc
out
add
sti
add
add
aad
out
jb
mov
inc
imul
mov
imul
pop
shlb
stc
xor
add
outsb
adcb
xorb
mov
jmp
aam
and
js
mov
lret
repnz
leave
jmp
sbb
fwait
mov
sti
mov
mov
fistpl
ret
xor
pop
insb
stos
jne
orb
shll
leave
call
push
mov
scas
lea
cltd
pop
rolb
outsl
into
and
addr16
cmp
faddl
and
inc
or
push
adc
xor
subb
mov
push
outsl
popf
dec
jp
or
in
or
dec
dec
fisubl
xchg
mov
sbb
xchg
arpl
enter
data16
sub
das
int
pop
inc
pusha
mov
sbb
jne
push
pop
push
dec
es
mov
adc
or
xlat
add
in
rorl
and
push
and
mov
add
push
jne
negb
int3
mov
scas
aam
sbb
pop
push
faddp
pushl
enter
add
imulb
shlb
in
pop
and
fld1
pushf
cwtl
std
push
mov
dec
xor
mov
sub
fdivp
ss
scas
xchg
mov
lods
pop
stc
out
insl
lods
mov
scas
mov
xchg
popa
push
xor
imul
dec
clc
in
loopne
sbb
mov
nop
xor
dec
push
rorl
jl
lock
in
inc
ror
sahf
and
out
pusha
sbbb
xchg
arpl
aam
dec
lods
iret
fcom
sarb
sub
insl
int
insl
je
mov
inc
popw
sbb
add
pop
lcall
addr16
push
imul
add
sti
add
add
in
jno
into
mov
dec
push
mov
pop
cmp
pop
and
add
les
shll
and
int
mov
out
mov
lock
pop
inc
mov
or
iret
std
cmpsb
sahf
sub
push
and
pop
shl
mov
push
shll
cmp
sub
xor
out
sbb
aam
fsubrl
sub
movsl
inc
test
inc
add
mov
xchg
hlt
mov
cmpsb
daa
imul
xor
jb
inc
jbe
icebp
fcoms
or
push
push
in
std
into
cwtl
xor
test
packssdw
inc
repz
jno
adc
dec
and
pop
mov
adc
rcl
gs
enter
jnp
enter
shll
dec
xor
call
and
out
out
inc
inc
test
imul
jnp
imull
push
int
jp
fmulp
pusha
out
or
cmp
iret
movsl
vorps
into
sbb
adc
daa
fmull
je
pop
addl
pop
cmpl
jo
imul
movsb
aam
imul
pop
or
fsub
mov
scas
pusha
push
mov
dec
std
pushf
shl
mov
dec
xchg
ljmp
addr16
je
pop
jb
aam
cmp
rcl
add
dec
sbb
or
js
inc
and
in
dec
xor
movsb
insl
or
dec
test
rorb
fwait
div
rolb
movsb
xchg
push
and
cmp
mov
lcall
hlt
rol
and
lret
adc
iret
jge
addl
in
nop
loopne
sbb
pop
int3
test
les
mov
or
testb
or
int3
insb
scas
jo
adc
icebp
dec
adc
dec
sbb
mov
dec
aas
or
add
insb
sub
outsl
daa
insl
push
addb
jge
jne
pop
movb
sti
add
add
mov
out
mov
clc
mov
xchg
pop
shlb
iret
mov
and
cs
ss
xbegin
idiv
cmp
mov
inc
or
xlat
pop
fdivr
insl
jmp
sbb
jecxz
add
mov
mov
inc
setne
adc
cmpsl
sbb
mov
lods
ja
jb
sub
cs
hlt
add
scas
sbb
sbb
jecxz
pop
scas
aas
and
push
pop
test
dec
dec
jb
dec
sahf
test
es
shlb
out
stos
scas
in
xchg
nop
movsb
ljmp
cs
adc
xor
sbb
js
pop
push
enter
add
lock
hlt
push
jg
popa
andl
mov
cwtl
lods
inc
movsl
pop
fwait
pop
lret
and
or
mov
rcr
and
aaa
sbb
in
mov
rcl
mov
push
sbb
mov
xor
movsl
mov
rcrb
jmp
mov
push
into
ficomps
lret
or
add
out
jb
repnz
sub
outsb
popf
aas
lods
jge
push
mov
xchg
xor
test
sbb
xor
xchg
xchg
adc
mov
ficoms
inc
movsl
lcall
fstpt
cli
mov
inc
je
push
sub
mov
mov
cli
mov
lods
fnstsw
lret
test
scas
in
mov
jle
and
lret
inc
jle
push
ficompl
lret
fs
outsb
inc
xchg
inc
adc
jnp
mov
sbb
ret
testl
and
or
sub
aad
cs
dec
dec
cmpsb
popf
addr16
adc
push
rcrb
mov
aas
and
xor
int3
mov
stos
cmp
add
pop
and
mov
out
leave
enter
call
add
sti
add
add
loop
lods
sub
sbb
jle
dec
out
fadds
mov
cmp
push
and
jno
sub
loop
subb
lahf
mov
clc
scas
fidivrl
push
mov
mov
jle
fdivr
add
mov
add
push
inc
lds
and
adc
sbb
cs
fnstcw
pop
jmp
clc
or
stc
push
loopne
jg
movsl
loopne
jne
fiadds
xor
mov
mov
aad
add
or
push
lret
xor
int
enter
outsb
lea
js
inc
mov
jnp
xor
dec
loopne
mov
sbb
push
dec
ljmp
jne
into
cmp
cs
adc
ds
andl
sbb
bound
iret
xor
xchg
mov
xor
or
jns
push
inc
fwait
mov
jl
frstor
add
stc
xlat
add
inc
sbb
imul
repnz
pushf
push
fldcw
jmp
daa
cwtl
xor
jle
shrl
pop
mov
push
dec
mov
jbe
sub
dec
dec
sbb
loop
rorl
call
inc
in
dec
adc
dec
shl
imulb
dec
fldl
mov
cmpsb
sub
dec
add
orl
jno
shl
mov
enter
aas
dec
or
cmp
inc
inc
and
mov
mov
out
mov
dec
sbb
xchg
add
nop
data16
mov
cs
or
stos
dec
pop
xor
push
fs
mov
adc
push
popa
lds
imul
decl
lods
mov
loope
push
add
cmp
mov
cmp
lret
sti
add
add
iret
dec
sbb
stos
in
sbb
sub
jp
loope
addr16
cmpsb
mov
jmp
jle
in
jl
cmpsl
adc
mov
mov
pop
jl
les
push
leave
test
adc
stc
test
sbb
daa
stc
add
lret
movsb
data16
push
call
mov
je
mov
cmpsl
int3
add
pop
push
popf
inc
out
mov
icebp
pop
outsb
sarb
pop
mov
cmp
push
adc
push
cltd
out
ss
ret
mov
push
aad
jno
pop
popa
inc
sub
mov
mov
mov
mov
out
jg
arpl
mov
jo
bound
dec
mov
mov
rcll
insb
clc
pop
jne
pop
loope
mov
popa
dec
xor
clc
insb
inc
adc
and
lcall
pop
dec
or
or
mov
mov
ljmp
add
mov
mov
pop
cmp
stos
icebp
dec
cli
daa
stos
sub
mov
rclb
out
mov
insb
inc
mov
and
stos
data16
aam
hlt
or
repz
pop
inc
ret
cmp
mov
add
lcall
insb
fnop
jnp
xor
enter
cwtl
cwtl
dec
or
jle
pop
cmp
test
cmp
gs
ret
and
leave
cmpsl
jne
aam
aam
mov
pop
es
push
jb
jl
outsb
cmp
mov
jmp
lods
ja
mov
sbb
das
sti
out
mov
inc
push
xor
in
test
or
push
push
push
ficoms
popf
sub
int3
mov
imul
sbb
aad
bound
adc
push
push
daa
aad
dec
aam
xchg
xchg
add
sbb
jge
aam
dec
rcll
add
sti
add
add
pop
pop
mov
jecxz
xchg
jnp
dec
lea
push
xchg
add
adc
ja
jl
fdivrp
hlt
mov
arpl
mov
xor
mov
mov
andl
scas
aad
out
xchg
dec
dec
subb
push
inc
mov
push
movb
aad
outsb
repz
mov
dec
pop
add
data16
js
fidivrs
mov
or
arpl
inc
filds
cmpsb
jne
add
imul
ja
orl
aas
ret
fildl
jmp
push
mov
add
xchg
bound
mov
test
das
ret
push
jnp
mov
add
and
insb
mov
dec
outsb
pusha
stos
clc
leave
inc
inc
js
cmp
outsl
sbb
scas
xor
psubq
xchg
adc
daa
pop
xchg
out
xchg
ljmp
into
insl
dec
movq
and
push
outsl
lods
or
mov
imul
lretw
int3
jge
into
add
push
cmp
dec
into
insb
ljmp
sbb
xor
cmp
std
cld
imul
outsl
xor
jmp
lea
mov
xlat
push
inc
out
not
pop
push
cltd
pop
test
fisubs
fnstenv
mov
je
or
cmc
std
pop
push
push
mov
shll
out
ljmp
pop
and
arpl
adc
sbb
pop
dec
mov
jecxz
xor
xor
push
das
mov
aad
or
aad
cltd
xor
and
inc
dec
xchg
push
lods
dec
rcl
fstl
out
pop
jno
xchg
fldt
sub
cmpsb
popf
test
pushf
jne
mov
xor
dec
stos
out
sarl
xchg
cmpsb
mov
add
add
mov
nop
stos
xlat
mov
dec
into
add
sti
add
add
test
pop
fmull
push
xor
jbe
das
not
lret
subb
ficoms
stos
int
sbb
loopne
test
or
mov
negb
nop
add
lods
sarb
fisttpl
sbb
data16
pop
adc
xor
shlb
or
insl
sbb
cwtl
adc
lods
or
mov
popa
cmp
into
aaa
pusha
lea
shll
sbbl
movsb
jg
mov
mov
vpsrld
test
cmc
pop
jmp
jae
xchg
push
insl
int3
xlat
push
pop
jle
lds
and
rcll
push
xor
fiaddl
test
stos
pusha
or
stos
jmp
cltd
test
bound
ficomps
xchg
movsb
movsl
movsb
sbb
in
xor
add
add
xchg
ret
ss
jno
lds
int
leave
in
xchg
aam
nop
mov
jge
pop
dec
test
xchg
movsl
jg
lret
mov
or
dec
mov
popa
xchg
mov
out
shrl
jecxz
jp
rcll
adc
dec
push
test
repz
xlat
jle
push
clc
lcall
push
jmp
insl
mov
push
adc
pop
jns
repz
cmpsb
das
adc
fimuls
xor
fisubrs
nop
test
cmp
sti
jb
cltd
adc
sub
imul
les
dec
mov
jmp
lret
sub
jmp
add
fs
mov
fsts
std
fcoms
mov
cmc
lcall
in
iret
ss
xorl
xchg
add
mov
in
dec
cmp
or
das
inc
rolb
add
add
add
popa
loopne
adc
shl
pop
push
shrb
push
push
mov
adcb
inc
jns
imul
jecxz
pop
inc
and
lcall
xor
out
mov
adc
cmp
rclb
imul
fsubrs
sbb
pop
lret
dec
jp
xchg
adc
push
aas
int
fisttpl
andl
out
pop
add
xor
inc
mov
out
sbb
imul
inc
adc
sbb
jle
push
xor
lret
insl
xchg
outsb
or
mov
lods
pushf
lods
je
faddl
sub
stc
enter
or
xlat
js
and
pop
call
and
xchg
sbb
movsl
cmp
xlat
addb
add
leave
jne
rcll
fwait
ja
mov
daa
sub
pop
jl
loope
outsb
dec
adc
mov
jns
adc
sub
dec
mov
push
jo
sub
adc
jae
jmp
jae
pusha
xchg
js
mov
sub
int
inc
in
add
or
mov
push
pop
xchg
mov
mov
loopne
test
fucomip
sbb
enter
ljmp
enter
out
outsb
jg
xchg
push
push
or
pop
stc
sbb
mov
pop
in
add
cli
fidivs
in
push
int3
pop
rcrl
into
mov
bound
add
xchg
jge
and
dec
stos
aam
mov
mov
inc
dec
fldcw
mov
dec
outsb
test
lahf
loop
pushf
push
xchg
in
or
lret
jne
pop
shll
push
jne
fsubrs
lea
dec
sub
imul
ret
cs
pop
fmulp
aas
gs
sbb
mov
stos
jo
dec
cli
fldcw
imul
add
xor
adc
fwait
push
adc
and
test
xlat
es
adc
jle
adcb
mov
subb
xchg
lret
xor
xchg
gs
sar
insl
popf
rcll
pop
fistpl
clc
adc
xor
test
or
jp
push
mov
jno
mov
and
push
int3
lret
pushf
minps
ljmp
dec
inc
sub
push
cmpsl
in
xchg
sbb
push
jae
dec
jge
mov
add
add
cmpl
adc
sub
dec
idiv
xchg
arpl
pop
into
or
mov
xchg
into
pushf
pop
pop
xlat
je
fbld
add
xchg
pop
jle
lds
mov
inc
aam
pop
push
cmp
xchg
jp
idiv
xor
jl
call
stc
ja
mov
mov
adc
mov
pop
jae
push
mov
xchg
mov
mov
sbb
sti
insl
sub
shlb
test
shr
xchg
mov
imul
inc
pop
mov
lods
je
push
xor
orl
sub
js
xor
repnz
push
fmul
int
test
stos
loop
fnstenv
adc
repz
movsl
in
js
jge
jmp
add
mov
jnp
sahf
into
adc
int3
or
bound
and
stos
aas
mov
lock
inc
call
add
and
cmpsl
iret
pop
gs
negl
sbb
aam
mov
cltd
mov
cltd
vpsubusb
sbb
mov
addr16
push
sahf
xchg
enter
push
mov
xchg
sti
or
stos
or
out
lock
fidivl
lret
int
xor
push
bound
pop
dec
add
push
jl
movsb
js
add
xchg
call
add
push
dec
pop
xchg
cmp
add
sti
add
add
in
adc
mov
push
loop
ss
lods
mov
push
js
and
sub
xor
jg
movsb
pop
out
sahf
outsb
jecxz
or
pop
fwait
in
int3
repnz
insb
sbbb
jmp
cmc
sub
out
ljmp
fwait
mov
fcom
mov
loopne
fcmovne
sbb
repz
out
mov
mov
jno
add
and
jmp
inc
dec
sbb
xchg
fwait
test
mov
mov
cmc
or
sub
popw
repz
orl
jle
enter
xchg
sbb
push
cmp
or
imul
inc
test
mov
mul
mov
outsl
nop
ffreep
je
cmpsb
outsb
xor
movsb
cli
scas
push
dec
shlb
add
xchg
fs
loopne
xor
cmp
rorb
or
leave
sar
xchg
or
and
push
push
ret
mov
mov
inc
popa
xor
out
imul
add
pusha
inc
pop
and
cli
cmp
test
adc
addr16
and
push
add
dec
push
pop
sahf
lret
mov
sbb
movzbl
loope
dec
cwtl
xchg
stc
cli
pop
cmpsl
mov
testl
leave
cmp
fisttps
insb
dec
and
xor
in
in
cmc
into
cmp
insl
int
dec
movsl
aad
xor
xchg
out
stos
js
pop
stos
push
lea
mov
arpl
testb
std
leave
pop
insb
enter
mov
push
sbb
lods
js
scas
cmc
leave
imul
xor
test
ds
mov
lret
mov
and
dec
sahf
pop
and
loope
push
daa
pop
loop
xlat
test
or
dec
mov
sub
sub
add
sti
add
add
push
pop
repnz
ror
loope
cmp
add
push
dec
jg
adc
testl
mov
add
cmpsb
and
mov
out
ds
xchg
mov
out
repz
jmp
aad
flds
imul
pop
or
jne
cmpb
rorb
pop
xor
inc
ret
enter
pop
mov
insb
inc
pop
stos
outsl
lock
sub
mov
xor
xor
xchg
xchg
pop
incb
mov
or
add
add
call
xor
sbbl
lahf
iret
mov
mov
mov
popa
imul
xchg
lcall
fwait
mov
sti
in
or
or
xchg
jp
repz
hlt
pop
pop
pop
lcall
push
gs
pop
xor
incb
xchg
test
xchg
mov
push
mov
inc
mov
jb
dec
daa
and
or
out
mov
in
push
push
add
xor
test
lds
xlat
stos
arpl
sbb
mov
aas
mov
loopne
int
mov
mov
icebp
adc
movsl
dec
hlt
ret
xchg
popa
mov
shl
stos
ret
sbb
icebp
shlb
insb
ja
xorl
cltd
jmp
lds
mov
and
outsl
cld
gs
and
popf
cmpsl
sub
push
test
je
push
and
or
jb
push
fcompl
addl
imul
adc
mov
daa
pop
das
loopne
clc
das
dec
mov
pop
add
jae
insl
loope
icebp
das
iret
pop
inc
push
jmp
mov
mov
or
and
in
xor
jge
les
data16
test
sub
mov
out
xchg
gs
mov
add
add
and
dec
repz
fldt
cs
add
sti
add
add
push
aaa
jns
pop
jmp
xchg
out
jo
sbb
cmpsl
lea
or
mov
xchg
push
std
out
loope
scas
inc
div
call
stc
cmpsl
adc
push
leave
jecxz
mov
lods
sbb
cmc
testl
jno
jle
mov
lahf
arpl
or
out
xchg
sbb
test
xor
sub
popf
sahf
pop
es
pop
xor
mov
jae
cmc
xchg
dec
mov
jno
add
sbb
add
push
das
pop
push
scas
das
cmc
jo
or
test
mov
sub
bswap
pop
pop
movsb
adc
jp
stos
inc
xor
mov
pop
inc
movsb
ret
test
flds
addr16
cltd
xchg
cmc
push
push
jl
inc
jg
xor
std
jne
xchg
push
mov
ret
call
dec
sub
leave
ja
jns
inc
jbe
test
cs
pop
pop
mov
shlb
out
jbe
xchg
rcll
mov
std
ret
mov
lcall
xchg
cmp
jne
out
mov
dec
lahf
adc
rorl
or
shufps
addr16
adc
loopne
jb
push
stos
sub
xor
cmp
cltd
dec
mov
aaa
xchg
les
js
filds
sbb
mov
mov
movsb
mov
sub
xor
addr16
lahf
ret
mov
and
enter
add
lret
cld
test
add
imul
inc
sub
and
ss
mov
sbb
sub
ret
push
cltd
lcall
test
ret
adc
cltd
xchg
dec
lahf
mov
ljmp
sbb
addr16
notl
repnz
cmp
nop
out
jb
xor
add
rcrb
enter
lcall
jnp
push
mov
sub
add
sti
add
add
lods
mov
mov
add
mov
pop
sarl
nop
dec
pusha
in
adc
into
rcrl
and
fisubl
mov
pop
lret
mov
insb
sub
loope
mov
pop
jle
fistps
jns
bound
popa
je
jbe
mov
jge
rcll
sbb
and
and
es
roll
movsl
cmp
sbb
dec
je
icebp
sbb
dec
mov
ja
cli
adc
mov
add
addr16
dec
add
and
rolb
push
popa
cmc
ja
sti
imul
pusha
icebp
popf
aad
clc
mov
sbb
xchg
popf
jnp
ror
cwtl
insb
aaa
dec
mov
ja
cmc
mov
push
orb
shlb
mov
push
repz
xchg
push
push
xchg
fsubp
rol
or
jbe
or
aaa
daa
movsl
pop
mov
xchg
insb
jecxz
sub
pop
xor
clc
fcmovb
sub
pusha
pop
jle
or
and
jmp
andb
add
mov
mov
xchg
cwtl
sbb
cmp
out
arpl
test
je
cmpsl
and
icebp
in
adc
in
ret
xor
fwait
out
lret
imulb
mov
fs
mov
add
into
adc
sbb
push
and
iret
or
jo
push
out
xchg
fisubrs
in
sahf
out
push
or
cmpsl
daa
imul
adc
jb
pop
jnp
fdivs
xchg
jmp
cwtl
xchg
inc
add
jmp
in
mov
push
js
dec
xor
add
fwait
or
inc
imull
test
arpl
add
idivl
jg
test
popa
daa
faddl
add
add
add
push
loop
xchg
mov
dec
pop
inc
icebp
or
sahf
test
std
sub
push
dec
cmpsl
adc
icebp
jp
arpl
xor
mov
dec
cmpsb
jg
in
push
inc
mov
cmp
arpl
repz
push
mov
cmpsb
inc
push
sbb
push
pushf
mov
sub
mov
dec
sbbb
jge
adc
cs
adc
mov
mov
push
inc
fadd
std
testl
pop
insl
pop
push
inc
inc
xchg
push
xchg
testb
adc
adc
xor
cmp
insb
add
movsb
xchg
dec
bound
loope
inc
data16
decb
aam
decb
and
jno
scas
cmp
and
insb
cmpsb
mov
xchg
inc
xor
dec
jbe
xchg
xchg
repnz
aam
mov
cmp
add
aam
adc
into
jmp
pop
push
lea
mov
test
test
mov
in
jnp
lods
adc
addr16
pop
pop
jmp
test
mov
mov
rcrb
jle
add
cmp
out
sub
fdivl
rorl
nop
push
adc
repnz
roll
lret
jbe
hlt
pop
and
or
or
in
stos
add
pop
mov
enter
pop
rcrb
loopne
and
cmp
xor
mov
jbe
movsb
fs
lahf
aaa
hlt
outsb
push
inc
rclb
push
jo
rcrl
adc
cmp
scas
mov
jb
add
enter
lds
cmpsl
adcb
test
mov
xchg
stos
dec
cltd
or
cld
mulb
fisubl
sub
mov
xor
inc
mov
mov
adc
sbb
or
nop
ss
xlat
xchg
add
ds
add
jecxz
mov
sbb
jecxz
and
add
sti
add
add
xlat
mov
pop
lahf
leave
not
in
test
adc
subb
inc
adc
and
test
cmp
call
mov
pop
xchg
jnp
in
adc
rol
mov
rcll
and
cmp
pop
aam
ds
jecxz
lods
xor
dec
jo
icebp
mov
pop
push
pop
out
std
push
xchg
lods
jo
add
data16
les
mov
xor
jmp
mov
add
xchg
std
bound
pop
leave
stc
jnp
call
or
push
jl
push
dec
mov
pop
jae
sarb
inc
scas
sub
and
mov
rcrb
popf
and
and
add
cld
and
enter
stc
lock
add
push
test
dec
xor
push
and
cmp
cmp
xchg
movsl
inc
and
add
fcomip
jg
and
sub
imul
int3
nop
into
inc
lcall
aaa
or
push
xchg
pop
mov
mov
enter
or
leave
imul
popf
add
shrb
push
pop
repnz
jmp
fistpl
xor
mov
pop
jns
and
shrb
aam
xchg
jbe
iret
sbb
shrl
push
jp
mov
fldt
mov
insl
incl
ds
dec
das
cmp
add
mov
subb
mov
imul
sti
mov
mov
xor
mov
popa
ret
daa
jo
pop
dec
sbb
cmp
pop
mov
push
mov
out
xchg
mov
mov
and
mov
cmpb
pusha
sub
stos
stc
mov
push
inc
enter
xchg
fwait
xor
stos
in
mov
fcompl
or
inc
mov
xchg
sbb
add
add
jae
xor
jno
jno
mov
pop
xor
sub
and
jecxz
pop
mov
fs
sub
test
xchg
adc
mov
pop
leave
mov
repnz
aam
movsb
add
cld
and
rcl
pop
inc
fdivs
xor
lcall
jb
jle
mov
xchg
daa
dec
or
xchg
nop
fstps
ljmp
cmp
ljmp
inc
sub
test
sub
fildl
dec
cmpsl
int
fcmovbe
mov
fldt
jg
ja
dec
fstps
and
test
daa
jb
xchg
sbb
xchg
cmpsl
arpl
sub
stc
xchg
push
jb
xor
xor
fdivs
cmpsb
test
adc
dec
sbb
sub
xchg
das
ja
push
popf
hlt
jl
loop
repz
xor
sbb
aam
test
ljmp
pop
cmp
negl
roll
test
call
fadds
push
stos
jne
icebp
adc
test
movsb
mov
fsubrl
jmp
outsl
push
hlt
mov
aas
inc
stos
movsb
xor
sbbb
aaa
sub
pop
lret
enter
or
imul
leave
cs
jmp
cmp
sub
ds
test
out
or
push
dec
daa
jno
add
fst
adc
mov
xchg
or
xlat
cmpsl
lahf
inc
xorb
repz
dec
pop
dec
cmpsl
add
push
outsl
push
mov
xchg
push
cmpsl
xchg
add
call
icebp
sbb
push
fcomps
rorb
ds
rclb
arpl
bound
and
mov
add
inc
stos
pop
sbb
cli
inc
cli
mov
sarb
loop
add
add
add
adc
push
lea
xchg
pop
aam
mov
daa
mov
mov
fwait
andnps
sub
cmp
lahf
repz
or
push
scas
fistl
cmpsl
jecxz
lds
mov
push
dec
jbe
es
jg
pop
add
arpl
test
repnz
cmc
loope
out
aaa
sbb
xchg
mov
adc
arpl
mov
pop
arpl
sub
mov
dec
or
pop
es
outsl
xchg
sti
stc
mov
test
stc
cmp
push
int3
lods
shl
and
test
push
faddl
adc
jo
leave
or
inc
insl
stc
orb
pop
add
lcall
repnz
cld
sub
leave
or
push
sbb
dec
sahf
push
lahf
mov
xlat
pop
inc
add
mov
out
out
cmpb
test
popa
dec
mov
pushf
mov
adc
jno
daa
push
sbb
jno
mov
inc
cld
sbb
fsubl
pop
test
call
clc
push
push
cmp
xchg
xchg
or
push
lock
gs
add
xor
and
ret
jmp
and
in
sahf
cld
lea
add
scas
jl
or
mov
or
push
addr16
push
jbe
jl
add
ja
sarl
sbb
mov
addl
push
fsub
das
xor
lret
mov
xchg
pop
test
xor
and
leave
xlat
xchg
orb
sbb
lcall
xchg
xor
fwait
mov
or
das
movsl
push
push
sub
cmp
roll
jne
insl
scas
movsb
push
dec
and
inc
inc
inc
nop
fiadds
mov
xlat
push
xlat
ja
out
push
lahf
loopne
sahf
lods
adc
add
sti
add
add
push
pop
dec
rcll
jno
scas
fisubrl
std
xchg
fmulp
push
andl
jno
xchg
xchg
xor
out
sbb
push
jmp
negl
sub
incl
sti
lret
sub
add
mov
lea
popf
addr16
fs
mov
arpl
mov
push
and
mov
daa
daa
inc
rcr
roll
mov
pusha
adc
dec
or
shr
out
adc
sbbb
jo
inc
jno
repz
xor
int3
mov
cmp
clc
rcll
inc
mov
cmp
xchg
iret
unpckhps
mov
pop
or
sbbl
daa
sub
ljmp
test
jo
cli
jge
push
fwait
xor
push
push
add
insl
movsb
push
and
sub
mov
shlb
cs
nop
cmpl
cs
clc
adcl
test
in
es
cmp
clc
adc
cmp
xor
push
faddl
cs
and
pop
or
cmc
insb
and
pop
dec
popf
ja
and
rclb
test
mov
fwait
pop
jmp
jnp
push
mov
lahf
call
or
xchg
lock
pop
push
xchg
gs
xor
scas
xchg
cmpsb
mov
push
jbe
mov
mov
ret
pop
mov
or
sbb
test
push
ljmp
call
test
cltd
inc
lock
ja
jb
or
clc
cmc
xchg
mov
adc
inc
or
sub
popa
push
xchg
orl
lods
aas
xor
shlb
sub
dec
movsl
sti
fnsave
shlb
mov
add
rcll
jmp
repnz
and
sti
add
add
push
and
std
add
jo
push
adc
in
sbb
aas
rolb
mov
mov
mov
and
in
cmp
out
adc
or
inc
inc
pop
ljmp
cmc
sub
out
cmp
mov
mov
or
cmp
push
xchg
dec
stc
add
xor
push
push
popf
inc
dec
mov
sbb
movups
test
cwtl
adc
lret
push
xor
xchg
ljmp
sarb
lock
push
stos
dec
mov
sbbl
xor
push
dec
iret
js
cmp
loopne
test
xor
icebp
imulb
cmp
and
repnz
mov
jb
cs
lret
xchg
stc
lods
mov
xor
outsl
scas
add
ja
sub
sub
out
lret
add
dec
pop
into
push
sub
int
inc
in
cmp
roll
and
ljmp
mov
inc
mov
int3
adc
push
sahf
das
fcoml
jbe
mov
and
jecxz
sbbl
test
scas
mov
pop
dec
mov
pop
out
fmul
cltd
mov
inc
mov
cmp
lret
xchg
repz
sub
adc
or
xchg
nop
imul
pop
popa
or
subb
mov
fidivs
repnz
add
sub
negb
inc
loope
insb
rclb
clc
cmp
leave
mov
pop
pop
ss
adc
sahf
hlt
es
mov
movsb
and
inc
test
inc
dec
jae
jecxz
sub
ljmp
mov
inc
repnz
pushf
call
pop
add
negb
mov
mov
orb
add
sti
add
add
cmpsl
mov
orl
push
add
xchg
cmpsl
push
xchg
leave
adc
cwtl
cmp
xor
xchg
popf
xor
mov
mov
push
and
imul
push
xor
push
fsubs
pop
insl
fistl
jl
dec
inc
cmp
add
xchg
shlb
sub
mov
jno,pn
cmp
notl
and
xorb
dec
ja
shr
ret
adc
add
lock
mov
or
and
gs
out
std
jp
or
sarl
data16
decl
movsb
out
jns
jecxz
inc
add
push
fmull
inc
sub
loopne
psraw
cmpsb
jbe
mov
cwtl
insl
pop
cmp
xchg
popf
and
adc
loop
pop
dec
cmp
adcl
xchg
insb
les
and
in
pop
in
xor
sti
fsubrl
das
fcomip
out
cmp
xor
mov
push
push
inc
loopne
dec
shll
mov
cmp
mov
or
add
repnz
stos
movsl
cmp
fdivrl
clc
xchg
push
lods
mov
ja
jg
sahf
ljmp
xchg
dec
hlt
jg
pop
dec
fadd
dec
adc
mov
in
mov
sub
mov
test
mov
stos
push
inc
pushf
vxorpd
sub
dec
jbe
and
dec
test
jno
out
mov
jp
neg
mov
or
les
cmpsl
jmp
xor
mov
outsb
pop
adc
mov
in
push
mov
dec
sbb
das
mov
sbb
outsb
mov
incl
insb
and
jb
mov
and
cmc
mov
add
sub
ja
jno
dec
ds
ror
add
add
sti
add
add
mov
mov
xchg
out
add
add
aad
fnstsw
xlat
add
pop
xor
xor
dec
lret
adc
push
jne
pop
pop
or
lock
sbb
cs
mov
xchg
jbe
adc
aam
test
aas
jae
push
scas
adc
xchg
shlb
jle
jl
jno
out
jne
mov
mov
inc
push
gs
xchg
in
mov
aad
aas
mov
fnstcw
sbb
loope
ds
add
fs
mov
fdivrs
std
mov
pop
jnp
shll
fnsave
js
inc
mov
pop
jg
push
inc
inc
inc
loope
scas
sbb
data16
mov
es
rorb
mov
pop
cwtd
jmp
xchg
xchg
xor
jnp
xchg
xchg
push
hlt
adc
cmp
movsb
das
xchg
adc
pop
mov
or
out
inc
sahf
movsl
dec
cmpl
jns
and
es
lods
ret
and
data16
aad
add
out
scas
insb
xchg
jge
stc
jle
icebp
lds
dec
sub
stos
loopne
mov
data16
repnz
sub
bound
insb
mov
leave
pop
dec
ds
in
xchg
lcall
outsl
sub
dec
insl
bound
cmp
cmc
test
int
repnz
dec
dec
jl
jo
aam
dec
xor
mov
sub
pop
stos
jp
outsl
rolb
leave
adc
dec
sti
popf
pusha
cld
cwtl
inc
sub
or
cs
or
mov
cmp
inc
or
inc
sbb
jg
clc
cmpsb
fisubs
mov
pop
stc
xchg
mov
xor
dec
jecxz
adc
xchg
pop
and
pop
xchg
inc
sahf
mulb
shrl
faddl
cltd
enter
mov
stc
popf
xor
xor
sti
add
add
fdivs
inc
mov
cmpsb
ja
repz
rcl
pop
mov
jbe
adc
mov
gs
mov
int3
daa
in
mov
or
arpl
xor
xchg
xchg
out
xchg
in
fiaddl
xchg
add
push
popa
js
inc
in
loopne
imul
mov
hlt
inc
lods
ja
dec
sub
push
fsts
je
fldcw
xor
dec
dec
sub
sbb
pop
mov
pop
sub
repz
xchg
and
je
xlat
jbe
mov
in
sbb
mov
idivb
sahf
cmp
jg
stc
sahf
shll
sahf
xorl
imul
in
jl
xlat
mov
adc
adc
and
pusha
mov
les
or
mov
jmp
cmp
push
stc
jb
mov
sub
cmp
xor
rclb
loope
outsb
leave
jno
sub
or
cmp
inc
shl
fstl
jnp
dec
cmc
imul
popa
movsb
lret
dec
sbb
xor
test
out
insl
stc
adc
mov
std
add
mov
lret
mov
fnstenv
sbb
and
jne
mov
out
cmpsb
xor
dec
xor
imul
clc
sub
stos
test
fsub
stc
loope
push
mov
inc
adc
cs
jnp
lock
mov
mov
inc
and
jmp
add
pop
or
inc
repnz
leave
movsl
daa
lret
cmc
icebp
fsts
rorb
ror
and
out
jae
jnp
sub
sbb
jbe
iret
mov
arpl
arpl
or
and
xchg
loopne
push
xor
aaa
pop
xor
sub
xchg
cmc
pop
inc
cwtd
cmc
cs
rorl
mov
xor
sbb
jns
sbb
jge
and
dec
aad
js
in
add
sti
add
add
mov
cmc
inc
mov
sub
sbb
mov
cmp
dec
out
push
sbb
inc
aaa
aam
mov
and
push
adc
jno
fs
sub
adc
dec
fcoml
test
pushf
or
xchg
xchg
shl
xchg
xlat
roll
rclb
xchg
inc
push
sbb
outsl
jp
inc
test
sbbb
sti
std
test
lock
je
xchg
clc
fcompl
or
jge
lret
xor
dec
jl
in
subb
aaa
jge
or
push
mov
mov
std
or
fcoms
stc
sbb
mov
enter
mov
xlat
stos
int3
mov
lea
xchg
in
mov
lahf
push
mov
ds
or
repnz
and
cmpsb
xchg
inc
adc
inc
lahf
lea
add
jle
jp
mov
pop
hlt
ficoms
cwtl
test
or
lret
loope
into
ljmp
xchg
sahf
scas
enter
stos
ret
in
inc
jg
or
ds
add
add
loope
push
loope
add
arpl
mov
lcall
inc
cmpsb
lds
cld
fsubr
mov
fisttpl
mov
cli
sub
call
cmp
sub
sub
xchg
testl
and
outsb
dec
adc
or
enter
mov
inc
inc
loope
or
es
int
mov
fsts
sbb
std
lds
imul
scas
push
push
xor
jne
shlb
jle
xchg
ljmp
dec
dec
inc
sbb
shlb
push
push
push
push
fldenv
out
ret
mov
jnp
cmp
push
add
roll
pop
arpl
sub
cmc
out
add
sti
add
add
sub
xor
les
sbb
jbe
sarb
repnz
and
mov
sub
gs
aaa
call
and
and
sub
pop
mov
mov
dec
fsubrs
repz
xchg
ss
mov
clc
lds
fs
inc
dec
mov
ret
pop
and
pop
inc
dec
mov
mov
sbb
push
clc
mov
outsb
jns
imul
fsubrl
ja
xchg
xchg
dec
enter
xchg
mov
call
and
test
lods
sbb
cmp
push
mov
fcmovbe
jns
out
or
pop
xchg
xlat
mov
mov
push
mov
xor
adc
je
int3
movsl
pop
stos
or
sub
adc
repz
and
jnp
jmp
cmc
sub
std
std
popa
ja
jb
leave
inc
rcrb
xor
xchg
das
cmp
and
sbb
adc
out
popl
pop
inc
pusha
out
test
outsl
fsts
rolb
popa
ficoms
in
test
xchg
test
adc
adc
mov
cmp
bnd
xchg
adc
mov
jecxz
int
xor
shr
adcl
dec
xchg
popa
adc
std
jbe
imulb
jno
xchg
dec
popf
cmp
lods
leave
and
and
ret
stos
popf
fcoms
pop
sbb
popa
nop
xchg
push
sahf
pop
imul
repz
test
mov
jp
scas
es
push
push
fildll
xchg
lret
les
dec
xchg
ret
mov
fwait
sbb
or
jo
shr
add
in
xchg
rorb
mov
notb
pop
enter
test
sahf
adc
int3
xchg
push
lret
fs
fistpll
mov
add
sbb
pushf
cli
mov
xchg
out
cltd
insl
inc
lds
sti
add
add
mov
movsb
addl
cld
test
decb
pop
push
sti
fistpll
and
pop
or
cmp
mov
repz
push
ret
mov
adc
push
inc
movsl
repz
jmp
loope
xchg
dec
inc
cmp
xchg
imul
adc
adc
jb
lds
fdivrs
inc
nop
jecxz
or
clc
jg
jns
add
ret
popa
imul
mov
je
cld
inc
jp
xorl
les
test
mov
mov
pop
lods
inc
or
dec
lock
mov
push
ds
scas
cmp
adcl
push
fsub
es
jmp
or
clc
lods
call
inc
stc
jge
ret
daa
fdivrp
mov
fistpl
in
xchg
mov
inc
aaa
imul
scas
fwait
jnp
pop
sub
aam
insb
pop
push
jnp
outsb
push
xchg
popl
and
and
clc
in
fwait
ror
mov
es
imulb
inc
divb
or
lret
les
aaa
dec
testl
dec
icebp
mov
sbb
cli
jo
div
dec
pop
or
out
aam
icebp
xor
lea
mov
inc
lret
jne
xchg
add
and
popl
and
and
xor
dec
sbb
xchg
inc
adc
pusha
dec
imul
call
cmp
roll
or
jge
xor
neg
pop
jp
aaa
dec
dec
test
or
add
lods
xchg
pop
push
mov
subl
fistl
popa
popa
sti
add
mov
dec
jns
jl
data16
fmul
cmpsl
repz
mov
or
add
dec
lahf
and
lcall
leavew
and
xchg
mov
add
add
add
adc
jmp
and
orl
cmp
repnz
and
mov
cmp
sbbl
cltd
cmc
shrb
lods
repnz
ss
push
mov
adc
test
dec
adc
enter
out
pushf
or
ljmp
scas
int
push
std
scas
push
pop
into
push
mov
inc
mov
jge
orb
aad
jno
shlb
dec
push
sahf
insb
jecxz
pop
adc
and
push
add
cmp
lret
xchg
std
bound
xchg
or
add
and
or
ljmp
xchg
xor
mov
lods
add
or
jge
push
mov
fcoml
cli
jnp
lock
or
or
call
negl
inc
cmp
xchg
lea
fbstp
test
xchg
push
inc
test
int
mov
std
cmp
test
fmull
inc
outsl
flds
dec
dec
push
xchg
int3
mov
loope
push
pop
push
mov
dec
pop
dec
mov
cmp
ror
add
les
pop
out
sub
mov
dec
jae
mov
xchg
push
dec
outsb
mov
in
push
movsb
mov
push
lods
mov
sbb
pop
lret
inc
sarb
jae
js
pop
lcall
pop
xchg
dec
mov
inc
sub
leave
xor
xchg
int3
mov
and
push
cmovno
cmpsl
xchg
push
push
andl
mov
jecxz
mov
adc
je
pop
repnz
lret
push
test
mov
xor
cmp
pop
into
cli
nop
rcrb
mov
cmp
push
addr16
push
lock
add
add
iret
cmc
sti
pushf
and
push
mov
mov
out
add
sti
add
add
mov
outsl
push
dec
loope
repz
cmp
fdivrl
jle
in
mov
cmp
loop
imul
out
push
mov
cmp
push
push
push
push
pop
std
and
or
aaa
pop
dec
xchg
pop
xor
movsb
push
dec
lock
in
push
jmp
mov
push
call
mov
iret
aas
in
filds
xchg
popa
push
dec
jl
xor
or
mov
mov
cmovl
mov
fstpt
adcl
lods
imul
push
lret
arpl
pop
xlat
mov
sbb
xlat
iret
pushf
sbb
mov
dec
sub
ja
jo
rorb
popf
jmp
jg
mov
xor
jnp
pop
icebp
xchg
add
sbb
xor
iret
enter
lahf
nop
out
fwait
add
lods
add
mov
loope
inc
aaa
insb
pop
lret
rcrl
pop
pop
push
add
cmpsb
mov
push
daa
idivb
mov
jb
and
xor
mov
and
in
aam
dec
rcr
mov
daa
or
xor
insl
cmp
xlat
test
adc
mov
scas
sbb
js
xchg
dec
mov
mov
fistl
ja
mov
mull
mov
out
xor
dec
xchg
xor
jp
adc
cmp
sbb
cmpsb
cmpsl
xor
les
xor
sbb
lret
mov
push
mov
pop
lea
test
jge
leave
pop
and
push
js
popf
in
gs
dec
out
out
inc
and
add
test
mov
lods
rcrl
xchg
pop
jp
push
push
sbbb
mov
mov
aam
and
sub
std
cmp
stc
jl
stc
jne
data16
sti
add
add
into
cltd
pusha
in
ret
pop
iret
mov
dec
mov
or
sti
lret
mov
cmp
pop
incb
add
pop
out
ds
cmpsl
sub
mov
dec
fildll
movsl
or
cmp
cmp
jne
sub
push
push
inc
loope
into
xchg
loope
ss
repz
sbb
mov
roll
push
sarl
insl
or
cmpsl
dec
rcrb
mov
xorl
clc
adc
dec
stos
jmp
adc
mov
ret
cvttps2pi
cltd
xchg
dec
movsb
clc
xor
loop
add
cmp
cltd
cmp
into
xor
add
inc
cwtl
jne
sbb
loopne
hlt
sub
movsl
cmp
std
fwait
and
stos
lock
mov
in
xchg
mov
sub
jne
scas
mov
mov
sbb
dec
pop
inc
test
mov
sti
mul
arpl
jg
in
xor
jno
aaa
xor
lds
dec
in
pop
fwait
out
imul
jmp
mov
cmp
js
popf
or
fmuls
mov
outsb
cmp
icebp
sbb
popf
enter
sbb
push
add
sub
push
decb
icebp
cmpsl
adc
xchg
push
pop
loop
sub
dec
addb
mov
jecxz
dec
mov
mov
orb
and
shrb
pop
sub
jns
inc
loope
sub
or
push
lods
add
push
mov
ljmp
cmpsb
cltd
push
xlat
pop
inc
cmp
mov
in
jmp
idivb
clc
mov
sbb
repz
jo
dec
lds
sahf
mov
into
mov
xor
aaa
pop
sub
arpl
jp
sub
adc
inc
jp
mov
xor
daa
xchg
popa
pop
popf
xlat
out
pop
shr
ret
arpl
dec
jge
mov
pop
push
roll
pop
sub
cmp
jns
add
cmp
test
fdivr
add
pop
add
add
jecxz
icebp
mov
push
fnstcw
adc
