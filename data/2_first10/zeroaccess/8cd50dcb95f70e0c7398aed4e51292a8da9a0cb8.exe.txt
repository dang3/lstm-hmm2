push
mov
sub
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
subl
push
mov
mov
sub
add
push
mov
xor
xor
mov
sbbl
add
andl
mov
mov
sbb
mov
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
sbb
mov
mov
mov
sub
add
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
mov
movl
sbb
mov
and
xor
add
adcl
mov
mov
mov
mov
mov
and
mov
adcl
mov
and
mov
xor
push
neg
pop
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
movl
mov
and
movl
mov
xorl
mov
mov
orl
mov
and
mov
xor
movl
add
mov
adcl
lea
sbbl
mov
mov
or
mov
adcl
xor
add
mov
lea
andl
push
mov
movl
xor
add
andl
push
subl
mov
xorl
push
subl
pushl
xorl
call
andl
mov
inc
mov
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jb
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
movl
mov
incl
mov
lea
incl
mov
movzbl
or
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
pushl
push
call
jmp
mov
sbb
xor
sub
mov
sub
mov
mov
movzwl
movl
mov
mov
cmp
movl
je
add
mov
mov
sbbl
xor
xor
lea
mov
orl
xor
div
mov
xor
mov
xor
orl
xor
orl
sub
cmp
jne
mov
mov
add
mov
mov
subl
xor
addl
xor
add
add
movl
mov
movl
cmp
movl
jae
and
lea
not
mov
mov
xor
xorl
add
lea
mov
mov
mov
cmp
jbe
addl
addl
movl
jmp
addl
addl
sub
mov
xorl
xor
decl
inc
sbbl
incl
addl
add
cmp
movl
jb
notl
mov
xor
mov
movl
xor
xorl
mov
sub
add
mov
adcl
xor
sub
andl
ror
movzwl
sbb
xor
mov
mov
mov
adc
mov
orl
jmp
pop
mov
pop
mov
add
std
sub
addl
sub
and
cmp
jae
jb
fcmovu
imul
jb
int3
bound
lea
xchg
xchg
inc
mov
sub
push
rol
repnz
sub
nop
ss
mov
aad
jb
adc
and
aaa
jo
lods
sub
mov
notb
test
pusha
push
and
cmpl
fwait
dec
or
jecxz
imul
xchg
ss
leave
int
outsb
cmc
pop
imul
or
mov
shll
imul
jno
add
add
inc
insl
jl
add
and
mov
dec
xor
js
in
push
fidivl
shlb
push
push
sbb
inc
popa
ret
nop
mov
dec
add
or
fucom
cmp
jl
jle
in
inc
xchg
push
mov
mov
movl
inc
jmp
inc
scas
xchg
inc
shl
pop
cmpsl
iret
xor
lea
dec
adc
aaa
mov
jmp
and
push
adc
insb
rcrb
lea
pop
inc
std
push
pop
sbb
push
add
mov
bound
out
das
mov
cli
divps
ret
outsb
out
cmpsl
ficomps
cmpsb
scas
repz
int3
cld
push
adc
cli
add
add
addl
popf
or
hlt
sar
mov
lods
inc
arpl
int3
pop
or
mov
sub
mov
jp
je
rcrb
xor
xchg
and
clc
add
aaa
rcll
cmp
jb
pop
sub
add
roll
mov
or
mov
mov
rclb
push
add
movsb
aas
into
mov
repnz
jo
loop
push
push
lds
shrb
aaa
pop
sbb
jecxz
pop
into
sbb
cmp
das
push
xor
xchg
dec
mov
pop
jmp
inc
dec
pop
add
adc
dec
jp
add
jl
jmp
xor
or
push
leave
je
sbb
loop
dec
scas
insb
mov
adc
hlt
imul
daa
ret
mov
mov
add
sbb
pushf
enter
jg
xchg
push
sub
and
xchg
cmp
movsb
test
sbbw
dec
test
xchg
push
stos
mov
ss
rolb
mov
pop
and
mov
cmp
imul
cmp
sub
adc
dec
arpl
cmc
and
jbe
xchg
xor
and
scas
in
adc
cli
icebp
je
xchg
aas
mov
pop
fwait
xchg
inc
jb
adc
fldenv
shrb
adc
sbb
jo
mov
jle
jmp
pop
pop
or
mov
movsb
mov
sbb
aam
leave
xchg
inc
mov
loope
mov
xor
mov
mov
and
and
push
dec
push
imul
dec
lods
fisubl
into
out
or
or
inc
inc
lods
pop
aad
jne
sub
fdivrs
inc
or
push
jae
push
cmp
jae
fmull
pop
insb
jle
xor
test
adc
pop
sub
add
fsub
adc
jns
cmp
inc
mov
dec
xchg
iret
into
cltd
push
push
jg
xor
mov
push
aad
pop
xchg
and
loopne
cmp
xchg
sbb
jns
pop
cmc
rclb
test
test
add
lds
stc
jg
adc
mov
push
cli
es
int3
xor
mov
push
xchg
clc
addr16
adc
out
sbb
lret
movsl
pusha
pushf
rcrl
cltd
loop
pop
sub
mov
cmp
daa
push
push
jae
clc
or
je
jmp
sub
dec
int
mov
xor
fdivrl
insl
fdivrl
nop
jne
maskmovq
inc
xchg
imul
jmp
jle
or
ret
aas
cmp
inc
jne
popa
pop
dec
jle
cmp
int3
and
stos
leave
and
test
push
stos
push
test
jns
adc
jnp
mov
jae
popa
js
adcl
mov
lcall
pop
imul
sub
insb
dec
pop
pop
mov
test
xor
dec
xchg
jne
inc
push
lods
jg
mov
cmc
dec
cmc
mov
mov
pusha
inc
mov
mov
add
loopne
ret
std
jb
test
enter
xlat
xor
call
xor
adc
inc
ss
shll
mov
popf
ret
lcall
aad
ret
pop
test
stc
jl
pop
jge
dec
pop
outsb
pop
mov
mov
pop
xchg
enter
adc
ret
dec
movsl
mov
out
cld
xor
addr16
pop
fistpll
pusha
xchg
jp
lret
push
loope
cltd
sub
jmp
lret
jmp
lock
out
shl
stos
std
mov
es
js
scas
aas
mov
repnz
movsl
fsts
outsb
add
dec
sarb
imul
out
imul
mov
icebp
imul
jmp
sbb
je
sbb
lods
insl
sbb
pop
ss
jo
data16
mov
pushf
mov
div
jo
sub
out
ret
pusha
mov
push
rcrl
push
mov
adc
push
inc
jmp
cmp
or
insb
fwait
out
sahf
test
inc
movsb
sub
sub
bound
and
pop
repnz
jmp
add
ficomps
push
rcll
cmp
mov
shrb
outsl
push
cli
rcr
cmpsl
shlb
add
lods
mov
loopne
mov
or
push
push
pushf
sbb
stos
xor
xlat
xor
sub
pushl
cld
mov
jle
dec
mov
rolb
out
xchg
sarb
and
xchg
sarb
lds
jmp
dec
testl
xor
outsb
lahf
add
push
push
hlt
cwtl
pushf
add
inc
test
and
jns
in
jno
xchg
mov
ret
adc
mov
add
mov
pop
test
push
into
scas
lcall
lods
push
xchg
clc
sub
iret
jp
dec
jns
cmp
inc
cmp
pusha
xchg
stc
fucomp
and
add
jle
test
adc
test
xor
push
out
mov
sti
mov
push
imul
add
jl
outsb
ds
aaa
mov
xchg
pusha
pusha
adc
jecxz
repnz
gs
fcoml
dec
iret
addr16
mov
lret
mov
add
sub
jp
mov
push
gs
rorb
jbe
fsub
jno
mov
mov
cmpl
sbb
hlt
pop
push
push
adc
stos
mulb
shr
and
push
pop
in
adc
ret
ljmp
dec
pop
pop
mov
jns
sarl
jbe
push
jns
and
sbb
outsb
cmc
inc
lock
shlb
test
adc
mov
mov
dec
lock
aam
cmp
inc
pop
and
push
jl
mov
aam
push
pop
jbe
push
and
loope
int
cwtl
ljmp
adc
inc
mov
or
xchg
std
imul
popf
in
adcb
cmpsl
aaa
std
sub
adc
rcr
mov
inc
inc
scas
les
loope
sbb
popf
jle,pn
adc
ss
outsb
pop
std
leave
add
ja
cmpsl
test
fldenv
aaa
ret
cmp
sahf
enter
add
shll
in
adc
pop
aad
mov
leave
lods
jo
push
jecxz
int
movsb
data16
fs
fs
cmp
insl
push
xchg
sub
in
and
sbb
in
pinsrw
ror
xlat
pusha
int3
or
jl
lret
imul
mov
call
and
push
mov
jne
mov
addl
mov
popf
mov
pop
inc
sarb
icebp
fistps
jbe
xor
sahf
mov
push
dec
xor
mov
mov
xchg
subb
jae
pop
xor
das
sbb
push
inc
push
pop
adc
jno
dec
or
pop
mov
sub
xchg
incb
pop
cmpsl
xchg
mov
hlt
ss
fwait
dec
movsb
notb
push
dec
sub
adc
inc
pop
ds
add
cmp
addr16
jbe
popf
dec
int3
jle
pop
bound
jb
sub
js
mov
sub
icebp
int3
lret
enter
sbb
inc
aas
push
test
adc
mov
ret
lds
and
push
cmp
jg
sarl
cmp
dec
xorl
mov
mov
dec
mov
or
stos
test
loope
pop
sub
sbb
shl
jmp
inc
and
arpl
push
ret
cwtl
pop
dec
out
stos
or
mov
stos
or
cmp
lea
aas
movl
dec
and
ljmp
aad
testl
mov
int
mov
test
xchg
or
cli
scas
mov
fisubl
lret
fists
aam
scas
arpl
jle
filds
inc
inc
and
cwtl
mov
loopne
xor
lret
ret
sub
mul
icebp
xchg
in
call
dec
sub
outsl
jge
inc
jl
stos
mov
sti
push
in
cmp
mov
inc
cld
sbb
cmp
push
movsb
push
sahf
stc
pop
iret
orl
int
mov
adc
repz
inc
jnp
outsb
lcall
adc
decb
popf
push
jns
movsb
sbb
cwtl
into
push
int
dec
subb
pop
xchg
lret
inc
inc
xchg
fnstsw
loope
cmp
jl
cmpb
lret
jnp
push
push
pop
imul
mov
mov
cli
mov
popa
je
add
mov
dec
mov
mov
aas
scas
sub
imul
sub
aas
cli
daa
push
push
xor
mov
push
sbb
add
xor
inc
mov
and
aaa
loop
lret
leave
fstpl
mov
xor
icebp
divb
lea
icebp
inc
shrb
subb
mov
sub
adc
add
jae
sahf
lahf
cmp
fistpll
cwtl
mov
leave
scas
fisubrs
pushf
aas
clc
iret
add
mov
decb
fsubrp
inc
or
and
lahf
imul
js
or
punpcklbw
inc
cmp
or
ljmp
xchg
loopne
aam
insl
leave
hlt
pusha
stos
sbb
xchg
lea
orl
pop
flds
lahf
rorb
imul
xchg
inc
pusha
mull
hlt
sbb
and
clc
es
ljmp
pop
sbb
test
cmp
fnstsw
xchg
mov
enter
out
clc
sub
sub
popl
ds
into
or
bound
mov
push
shr
xor
lcall
bound
pop
fcompl
shll
adc
insb
inc
mov
aad
xchg
or
sbb
in
insl
int
mov
adc
push
sub
icebp
mov
or
loop
pop
mov
mov
mov
cwtl
push
jp
inc
push
insb
xor
cwtl
scas
popf
in
aad
add
ljmp
mov
jo
in
js
push
dec
into
ljmp
out
ror
xchg
pop
fs
jb
and
ja
ret
adc
in
aas
adc
int
dec
sub
in
std
aad
push
push
insb
dec
jbe
fisttps
shlb
and
mov
mov
add
sub
cmp
push
dec
subl
dec
lods
mov
test
dec
in
test
hlt
cmp
sub
inc
mov
jne
rcr
shlb
pop
mov
mov
fsubr
loop
mov
xchg
cwtl
insl
dec
outsl
inc
lods
pop
jecxz
and
repz
sub
ss
push
push
xor
and
jo
out
addr16
enter
out
int3
cmp
xor
into
adc
scas
jae
sbb
lea
int
mov
loope
pusha
pop
dec
aad
js
imul
int
clc
cwtl
sbb
sti
clc
mov
repz
mov
push
push
mov
aad
test
out
and
lods
repnz
in
into
fimull
cmpb
rol
gs
inc
dec
and
int3
movsl
sub
xchg
cmp
push
mov
mov
xor
push
sub
adc
pushf
jb
leave
mov
cld
inc
mov
icebp
out
pushf
popa
sbb
lods
ljmp
je
sub
jne
push
repnz
aas
cmp
js
dec
mov
cmp
mov
ret
mov
sbb
loop
fwait
cli
lea
or
mov
in
iret
enter
and
mov
adc
push
sbbb
dec
and
loope
iret
mov
inc
jle
or
sbb
dec
cmp
sbb
mov
les
out
sub
icebp
and
lea
sahf
test
je
push
dec
pusha
daa
ret
mov
out
mov
pop
mov
jo
inc
lock
ljmp
popf
adc
pop
scas
add
mov
ret
das
lods
lret
leave
and
and
aas
dec
cwtl
repnz
je
ja
mov
js
mov
fs
sub
xchg
mov
push
out
xchg
cmc
popf
push
pushfw
sbb
orl
ret
mov
dec
push
xchg
pushf
xor
jo
mov
in
pop
notb
call
cmpsl
inc
mov
mov
sbb
outsl
lahf
jb
sub
push
pop
insl
jns
loopne
mov
jg
pusha
pop
cmp
imul
gs
es
push
aaa
fists
dec
minps
daa
rcll
xchg
and
inc
daa
popf
cmpsb
ret
adc
pop
sub
pop
sbb
insl
mov
mov
repnz
fisttps
fisttps
push
mov
push
imul
inc
mov
inc
jae
sahf
cmc
adc
xor
xchg
mov
add
addl
lds
negl
mov
out
and
ret
mov
pop
pop
dec
push
adc
fsubl
int3
sub
out
das
inc
ds
xchg
sbb
and
jae
jne
orl
cs
jo
dec
sbb
and
push
icebp
cmp
scas
cmp
icebp
inc
scas
sub
jmp
nop
insb
mov
in
jne
aaa
cmpsb
out
inc
push
mov
out
in
pop
mov
xchg
pop
lods
cmpsl
push
push
sub
int3
int
hlt
sub
mov
loop
push
das
sbb
dec
push
into
jae
insb
nop
movsl
cmp
add
and
dec
and
jns
mov
push
xchg
or
daa
mov
repz
mov
sbb
repz
ret
aad
fildll
jns
ret
fmuls
imul
xchg
dec
mov
dec
ret
or
fstpl
add
aam
fldcw
out
push
scas
or
lods
arpl
scas
dec
aaa
fimuls
cltd
and
pusha
lds
lods
out
into
xor
inc
dec
jne
push
add
sub
xchg
stos
repz
jns
mov
or
push
pop
orl
test
pop
and
xchg
cwtl
ss
pop
mov
jbe
sub
loopne
das
repz
jnp
rcll
mov
sahf
inc
pop
mov
je
bound
jp
aaa
lret
or
xor
xor
pushf
xchg
push
daa
rolb
dec
lods
xlat
pop
fwait
mov
adc
les
xchg
sub
stc
mov
mov
pop
or
pop
fldenv
insb
sub
add
loopne
mov
les
pop
leave
xchg
inc
dec
aad
mov
outsb
jns
popa
dec
fwait
xor
xchg
fcom
mov
inc
sbb
insl
add
mov
xor
or
cmp
shll
push
push
sub
gs
shrb
cs
cmp
mov
gs
mov
fs
in
les
adc
jnp
adc
mov
jns
sbb
pop
pop
add
outsb
mov
enter
add
loopne
fistl
jb
fadds
dec
mov
gs
jo
arpl
cmp
int3
lret
cmpsb
lock
push
inc
push
in
sub
and
pop
insl
xchg
adc
add
lea
jecxz
rclb
pop
dec
je
lret
jp
add
ret
mov
test
test
into
cmp
sbb
andb
enter
dec
outsb
iret
adc
and
arpl
loop
pop
mov
jp
aas
lods
inc
cmpsb
dec
andl
or
xor
cmp
xchg
xor
and
inc
mov
xchg
fiaddl
aaa
push
cmpsb
and
les
xor
loope
daa
jne
scas
cmpsl
mov
stos
pusha
add
aaa
cmpsl
pop
pop
subl
loopne
mov
mov
insb
sub
inc
add
cmp
daa
add
leave
or
in
or
pop
xor
jne
ss
mov
pop
or
dec
outsb
pop
jae
dec
ss
iret
nop
loopne
nop
mov
dec
pop
in
xor
mov
jp,pt
xor
adc
out
insb
mov
xor
ss
rorb
pop
call
sub
sub
pusha
mov
pop
push
fwait
mov
push
xchg
pop
hlt
movsb
cmp
and
cmp
cli
xchg
adc
mov
cmp
lret
sti
xchg
lret
sti
adc
int
pop
xchg
inc
pop
int
pop
add
pop
aad
mov
push
mov
in
cmp
inc
cwtl
test
cli
adcl
test
sbb
pop
and
cmp
pushf
sbb
add
and
xchg
xor
sub
gs
and
push
pop
xchg
or
mov
mov
incl
lods
mov
pop
mov
cmp
daa
cmp
bound
lock
add
in
jl
sub
cli
jno
movsl
jmp
pop
rolb
jne
or
test
je
orb
xchg
cmpsb
out
mov
fstpl
test
pop
pop
mov
jns
sub
test
mov
push
sti
adc
rcr
xor
mov
sub
xor
mov
sub
sti
aas
mov
push
daa
insl
or
nop
sub
fdivrl
data16
leave
ds
cmp
or
mov
sub
outsl
sbb
mov
jns
pop
adc
or
fcoml
scas
mov
shll
leave
sbb
and
dec
pop
sbb
jae
mov
pusha
cli
cmpsb
mov
add
faddl
orb
push
psrld
aad
mov
out
orl
cli
faddl
mov
dec
pop
dec
pop
mov
inc
push
and
or
lahf
lahf
push
icebp
mov
xchg
rorl
lods
dec
scas
xchg
and
inc
sub
not
and
shr
dec
and
adc
xchg
push
ja
pop
outsb
dec
push
mov
or
xlat
scas
sub
pop
clc
es
aas
jnp
dec
out
sub
sbb
into
xchg
popa
movl
mov
or
xchg
pop
push
adc
faddl
jg
faddl
jnp
es
mov
mov
mov
pushf
addb
sub
push
outsb
fisubs
xchg
ds
jl
inc
cmpsl
dec
mov
mov
sbb
fidivs
xchg
jns
scas
sbb
pushf
mov
add
popf
int3
jecxz
idivb
mov
xor
leave
cs
stos
or
in
into
andb
in
lahf
jns
mov
push
pusha
xchg
hlt
mov
xor
mov
jg
add
fnstsw
and
mov
cmpsb
rolb
dec
xor
inc
cltd
xor
push
fwait
sub
inc
and
cmc
mov
cltd
jl
adc
adc
sub
pop
sub
mov
test
push
mov
enter
pop
mov
push
aaa
std
cli
jg
in
sub
popa
cwtl
cmp
rcrl
test
mov
push
add
mov
cmp
daa
stos
data16
adcl
nop
mov
into
dec
cmp
scas
xchg
hlt
or
inc
adc
lcall
inc
int
ret
icebp
xchg
cmpsb
inc
add
sub
push
dec
pop
daa
es
fistpl
push
iret
lret
fdivrl
lea
cmp
shll
aas
push
out
mov
je
sahf
mov
or
add
imul
ret
cmp
mov
gs
or
jne
inc
icebp
dec
xorb
sub
scas
jnp
sbb
inc
movsb
int3
ljmp
cmp
js
hlt
lcall
es
aaa
sub
mov
fcompl
jmp
popl
mov
mov
and
mov
mov
sub
cmp
lock
int
cmp
sbb
sarb
and
inc
or
ficompl
mov
and
jl
stos
cmpsb
enter
ficomps
andb
dec
or
addr16
push
stos
clc
aaa
pop
xchg
data16
movsl
fisttpll
in
pop
movsl
pusha
fsts
into
incb
xchg
xchg
sarb
and
bound
sub
jo
test
push
insb
nop
mov
push
jbe
repz
jns
pop
sti
push
push
inc
in
jmp
sub
loop
jl
movsb
push
popf
mov
push
ret
sbb
insl
js
int3
repnz
cmpsb
push
mov
in
lods
adc
or
dec
mov
std
rolb
dec
in
cmpsb
rcrb
pop
inc
push
mov
sub
mov
stc
inc
je
cmp
adc
cli
xor
popa
ret
mov
cs
lcall
inc
pop
or
popf
arpl
imulb
adc
inc
test
negb
in
jnp
inc
jns
int3
adc
notb
xchg
xchg
cmp
pop
sbb
stc
mov
cmpsl
mov
orb
adc
insb
mov
int3
xchg
clc
ss
xchg
lret
push
pop
in
mov
xchg
imul
inc
push
pop
pop
sub
test
mov
sub
insb
into
mov
push
pop
in
xchg
pop
lret
sahf
cli
push
mov
fisttpl
push
or
negl
mov
mov
aad
jbe
lcall
sbb
jno
imul
test
push
xor
mov
shrl
push
cltd
inc
and
xchg
imul
repz
push
fists
adc
add
orb
mov
hlt
push
test
ja
push
out
mov
in
and
andb
cltd
sarl
mov
outsb
mov
cmp
in
or
loop
aam
and
push
lock
ret
in
dec
pop
movsb
add
pop
xorb
xchg
dec
fisttps
icebp
mov
jge
scas
out
pop
and
push
jo
in
js
push
in
sub
sub
xorl
aas
fsub
divl
subb
sbb
sti
ret
jg
xorl
or
and
pop
test
cmc
push
andnps
aaa
mov
lcall
pushf
cmp
lret
call
xor
mov
dec
cmp
or
out
lret
cmp
out
pop
rol
jae
bound
mov
cmp
add
out
pop
inc
mov
xchg
scas
int
jl
jp
xor
aas
test
je
pusha
add
jle
pop
mov
adc
ja
out
push
pop
inc
mov
sub
mov
lcall
in
push
add
adc
shll
stos
aam
mov
jno
jl
dec
mov
test
adc
pusha
xchg
and
imul
jo
jl
inc
shl
clc
or
lret
xor
and
fadds
mov
push
shll
scas
sbb
insb
push
push
lret
jecxz
lods
out
or
aaa
shl
cmp
jo
test
add
subb
cmc
xchg
insl
and
inc
repz
popa
jnp
sar
xor
and
or
in
cmp
test
cmp
rcrl
pushf
call
xchg
lea
or
testl
int3
int3
xor
fs
nop
scas
repz
sub
mov
data16
fcmovnbe
push
out
pop
pop
xor
xor
scas
dec
and
ficomps
sarb
cli
jg
mov
cmp
fcmovnu
inc
adc
mov
pusha
mov
arpl
or
or
mov
dec
lods
cld
sub
adc
out
popa
jnp
push
data16
add
push
adc
in
imul
stos
neg
call
popf
mov
sahf
clc
push
push
lods
js
dec
push
insb
jb
inc
mov
mov
or
test
jnp
adc
cmc
push
cmp
ret
sti
mov
into
stos
out
mov
js
jns
xchg
mov
push
sbb
xor
imul
pop
mov
data16
inc
and
mov
xchg
mov
ss
xor
mov
lcall
mov
mov
sub
push
mov
ret
in
push
es
inc
into
mov
push
push
inc
jle
mov
scas
andl
sahf
ret
aam
iret
lret
scas
mov
jne
shr
js
pop
pop
inc
pop
xchg
jecxz
adc
mov
mov
mov
xchg
sub
call
in
int
xchg
andb
ret
mov
cmp
xor
dec
push
cmc
popa
mov
cmp
testb
in
add
xor
test
repz
cmpsl
aas
arpl
pop
test
jge
popf
jbe
dec
inc
mov
jbe
seta
lcall
mov
test
rcrl
pop
inc
outsl
pop
xor
xorb
sbb
xchg
flds
mov
inc
leave
xchg
xlat
jae
jge
push
mov
push
jecxz
mov
mov
nop
jns
repnz
sahf
shll
faddl
xchg
mov
mov
pop
pop
popf
stos
pop
mov
push
movsl
aaa
mov
bound
mov
stc
pop
xor
sbb
dec
jnp
lock
arpl
jp
inc
sbb
fildll
rcrb
nop
sbb
sbb
xor
cld
imul
jecxz
loopne
cmpsl
fsts
mov
sti
stc
cmpsb
push
stos
mov
cwtl
xchg
dec
push
sahf
loop
push
dec
cmp
pop
dec
push
into
addr16
push
leave
sbbb
test
fs
je
enter
sbb
xchg
adc
and
bound
pop
in
cmp
sbb
fldcw
loopne
lods
cmpsb
xor
insl
nop
push
cmp
jnp
jae
cmp
call
xchg
roll
mov
add
xor
es
insb
or
lock
or
sbb
jae
mov
add
add
dec
push
das
ds
mov
adc
mov
mov
dec
ds
or
xor
inc
icebp
ds
or
add
fisttps
cmpsb
rcrb
xchg
aad
sbb
lcall
xchg
pop
add
xchg
test
fmulp
repnz
outsl
jbe
sub
and
fisttpll
dec
or
cmp
int
and
pop
sbb
fisttpll
leave
sub
mov
or
insb
xchg
arpl
mov
pusha
addb
mov
lret
testb
stos
arpl
and
push
push
in
dec
daa
sti
xor
cld
adc
enter
adc
inc
sub
push
popa
inc
push
dec
mov
pop
jl
je
sub
cmc
lods
mov
fs
push
lahf
or
fisubrl
cwtl
sbb
lods
in
dec
cld
out
movsl
bound
icebp
out
push
mov
imul
cmp
outsb
mov
out
sarb
stos
cmp
lcall
icebp
dec
dec
adc
sbb
rcrb
mov
cmp
int
frstor
pop
push
mov
xor
mov
int3
mov
adcl
shrl
test
sub
push
adc
or
and
or
mov
xor
push
mov
or
jecxz
mov
fistpll
test
lahf
lahf
pop
mov
jne
xor
xor
and
xorl
icebp
mov
stos
movsb
or
gs
jecxz
mov
xchg
adc
adc
bnd
add
nop
ss
loop
ror
cmpsb
pusha
cmc
scas
sub
jp
mov
pop
ret
js
cmp
xor
das
popf
adc
mov
shlb
xor
lock
inc
mov
add
imul
cmp
add
je
fnsave
in
addr16
mov
jmp
repz
es
mov
push
mov
sbb
add
rcll
pop
and
fimuls
insb
sub
int
jle
xor
mov
aad
sub
stc
rorb
dec
cli
pop
sbb
adc
gs
sbb
push
sbb
jns
jge
gs
pop
lea
mov
int
sti
sahf
inc
mov
stos
imull
popa
xor
int
lock
jge
push
dec
push
sub
test
ret
fdivs
and
mov
and
inc
shlb
ja
mov
xchg
mov
das
add
cmc
imul
pop
aaa
movsb
movsb
xchg
les
mov
sbb
pop
push
adc
mov
add
fadd
inc
sub
cli
loopne
mov
cmp
xchg
and
rol
jp
mov
fldl
cmp
xchg
dec
pop
and
mov
pop
sub
and
mov
es
outsl
out
xchg
mov
cmp
dec
sbb
xchg
or
add
mov
mov
shll
fidivl
or
pop
cmp
lea
xor
test
jg
add
jnp
xchg
jl
nop
cmp
add
push
pushf
sbb
les
aad
sub
jno
aaa
mov
sub
jl
xchg
nop
jge
mov
xlat
jmp
out
sbb
sbb
xchg
mov
cli
jge
adc
mov
mov
shll
sahf
xor
scas
ljmp
and
xchg
mov
inc
push
pop
push
xor
outsb
cwtl
mov
incl
js
mov
mov
das
jno
pop
scas
add
xor
ja
shr
cmp
bound
pop
adc
sbb
sub
call
fsubr
push
stos
xchg
push
inc
jae
jmp
cli
adc
pop
inc
sub
fidivs
rolb
aad
je
inc
inc
sbb
leave
fld
movsl
nop
in
cmp
inc
les
imul
cwtl
addr16
dec
dec
push
adc
sub
xor
cmp
jne
or
mov
andl
mov
adcl
xor
xorl
xor
sub
sub
mov
mov
xor
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
mov
and
out
mov
ffree
jbe
clc
out
pop
addl
les
mov
cwtl
test
js
push
in
imul
call
jle
xor
rorl
flds
or
ds
shll
mov
pop
push
inc
in
call
scas
or
xchg
sub
scas
repnz
pop
adc
jecxz
push
sbb
jp
xchg
mov
lcall
js
inc
setb
icebp
decl
adc
pop
pinsrw
ds
fstpl
neg
dec
ficoml
clc
imulb
or
and
xchg
repnz
rclb
xorb
pop
int3
adc
test
repnz
mov
movaps
cld
shlb
mov
cmp
add
and
push
cmpsl
or
js
pop
mov
sub
add
pop
cwtl
push
rcrb
leave
lret
or
push
stos
jmp
icebp
das
push
stc
add
je
repnz
cld
and
mov
jle
sar
adc
mov
push
jno
sahf
or
cmp
push
adc
jb
and
jmp
das
nop
insb
or
cmovg
push
xchg
cltd
inc
subb
aaa
dec
sbbl
mov
sahf
mov
and
jge
outsb
mov
dec
dec
mov
movsl
ret
repnz
enter
aad
mov
and
mov
dec
xchg
sbb
imul
mov
mov
xchg
cmpsb
sbb
jge
mov
subl
jns
inc
movsb
sub
sti
out
das
mov
sti
push
inc
sub
and
add
hlt
imull
push
cmp
pop
sbb
xchg
or
pop
push
fldt
icebp
xor
js
xorb
jae
out
iret
xor
shll
outsl
jns
les
cs
mov
push
adc
mov
mov
outsb
adcb
inc
mov
cld
cmc
jb
ja
mov
cmp
adc
and
pop
mov
les
fbld
mov
outsb
inc
adc
nop
std
test
pop
xchg
or
lock
loope
fs
xor
mov
imul
jae
pusha
push
xchg
mov
shlb
mov
adc
mov
pop
adc
ljmp
jae
call
cmc
fwait
sub
ljmp
pop
les
pop
adc
imul
add
out
mov
fs
dec
leave
push
lods
dec
or
bound
lock
cwtl
adc
add
mov
fnstenv
push
cmp
jp
loop
je
push
loopne
sti
ljmp
or
gs
orb
popw
cmpsb
pusha
mov
sub
cmp
insb
or
fcomps
jbe
jp
xchg
je
sbb
cmp
js
mov
push
xor
cmp
adc
sub
mov
sub
into
xor
push
jb
sbb
pop
aam
dec
push
push
and
inc
push
mov
jl
pop
loope
jo
and
je
out
jno
orl
je
call
dec
je
or
add
das
and
shl
jl
pop
sahf
insl
je
mov
push
pop
dec
into
loope
pop
mov
xchg
mov
cmp
xchg
dec
mov
in
arpl
ljmp
add
sahf
jl
xlat
fst
arpl
jecxz
or
xchg
mov
xlat
adc
and
push
fs
dec
inc
xchg
jg
jle
xchg
clc
cmp
lock
mov
xor
out
cli
xor
enter
cltd
inc
lock
outsb
loopne
jne
pop
es
mov
insb
mov
or
mov
packssdw
jbe
push
xchg
pop
xchg
push
push
push
mov
mov
repz
and
in
pop
das
cmc
jbe
add
jge
dec
movsb
adc
popa
mov
dec
pop
addb
mov
std
popa
cmp
fmull
ja
jp
sub
cmpsb
enter
ds
xor
jl
mov
jg
test
cmp
sbb
cmp
cmpsb
ljmp
aam
adc
test
dec
sti
pop
mov
jmp
adc
cs
push
in
aaa
pusha
movsb
cmp
mov
ret
mov
inc
pop
lds
test
mov
ficomps
lea
iret
ficompl
xlat
inc
out
mov
lods
aad
fs
adc
mov
sbb
out
xchg
in
movsb
test
mov
sub
mov
je
pop
fidivrl
loop
mov
sbb
fmull
and
push
sbb
pop
stos
fwait
inc
inc
jno
mov
testb
lods
mov
icebp
sub
rcrb
lods
mov
out
xor
mov
fildll
mov
les
lahf
ds
and
dec
adc
cli
jle
cmp
popa
test
xchg
cmpsb
in
jo
ds
repz
xchg
shll
out
bound
jmp
mov
movsl
stc
movb
or
cmp
dec
fxch
cmc
push
add
pop
movsb
jnp
and
aas
mov
and
lock
les
add
or
jae
inc
imul
jmp
lret
sbb
xchg
mov
out
insb
cmpsl
addr16
pop
jge
jl
lahf
push
and
push
xlat
adc
jg
adc
loopne
xchg
out
cmpl
repnz
and
test
xchg
popa
xchg
insl
or
sub
lods
pop
push
cli
popf
sbb
lret
lods
stos
add
dec
mov
loope
jmp
bnd
addb
icebp
mov
loopne
fwait
sbb
inc
jmp
jo
jle
dec
adc
imul
cmp
sbb
xor
xchg
popf
stos
cmp
add
xchg
ret
loopne
mov
pop
sbb
adc
xchg
clc
dec
jg
dec
push
dec
sahf
ljmp
rcll
in
pop
and
jecxz
jecxz
std
pand
adc
enter
lret
ja
enter
xchg
leave
cmpsl
outsb
bnd
inc
test
ret
add
loope
mov
pushf
std
fistl
and
jecxz
xor
movsb
mov
mov
aaa
inc
mov
in
cmp
outsl
pop
sub
mov
xchg
sbb
and
cmp
mov
push
xor
or
jl
and
push
cmp
popaw
mov
lock
xlat
dec
and
sbb
push
pop
cmpsl
lahf
xchg
adc
mov
in
repnz
pop
test
pop
mov
aam
icebp
das
testl
cs
pop
dec
stc
adc
ds
nop
cmp
pop
adc
rcl
jl
push
xchg
cli
inc
jmp
lock
cmp
mov
add
mov
dec
mov
push
pushl
xlat
add
call
in
jge
test
pushf
add
jg
outsl
aas
or
gs
je
push
imul
push
or
adc
cli
lods
mov
mov
cmp
push
cli
mov
sti
and
inc
fyl2x
xchg
notb
pushf
mov
enter
jecxz
sbb
test
out
nop
mov
and
int
inc
push
pop
int
sahf
insl
xchg
fcomps
gs
jbe
mov
jmp
or
les
repz
mov
stos
inc
cwtl
dec
test
bnd
je
and
incb
ljmp
xor
lock
or
sbb
adc
jns
sub
popf
jl
js
and
or
clc
shl
mov
in
pop
andl
sbb
inc
push
push
cmp
mov
stos
scas
subb
pop
dec
mov
sub
jl
mov
repz
jbe
push
adc
sbb
add
xchg
into
pushl
mov
pushf
enter
stc
aam
lock
insl
stc
jb
leave
mov
mov
add
inc
mov
stos
das
mov
inc
leave
jb
lret
outsl
call
arpl
cmp
mov
mov
adcb
pop
adc
mov
into
pop
cmc
arpl
outsl
push
sub
ds
out
jns
xor
stos
push
popf
push
ficoms
mov
mov
movsb
pusha
divl
adc
xlat
inc
mulb
jne
mov
push
cmc
sti
outsb
insl
hlt
lock
je
sahf
lahf
mov
lahf
fimull
xor
jbe
mov
cli
mov
ljmp
cmc
out
cli
dec
dec
addr16
jle
push
outsl
popf
push
mov
add
dec
addr16
mov
xchg
mov
xchg
imul
jo
xorb
int
icebp
or
mov
mov
jno
push
aad
imul
cmp
shrb
jecxz
loopne
cmp
jmp
pop
dec
pop
add
in
stos
mov
icebp
and
adc
aad
cmpb
std
cmp
pop
pop
xlat
mov
scas
je
je
mov
inc
cmp
repnz
jnp
arpl
jne
jbe
arpl
ret
add
pop
in
inc
bound
ss
mov
push
outsl
dec
pop
ret
test
addr16
push
mov
xorb
pop
sub
mov
sbb
push
fwait
adc
iret
arpl
rcl
std
mov
jnp
mov
gs
cmp
iret
or
fidivrl
adc
ja
cmpl
sahf
adc
mov
mov
daa
mov
dec
das
leave
movsl
arpl
dec
push
int3
cmpsl
sbb
sbb
sti
push
adc
fcmovb
outsl
adc
add
mov
xchg
push
push
pusha
in
fsubrs
and
cli
sub
xchg
in
mov
mov
add
cwtl
cmpsl
stos
mov
dec
cmpsb
pop
jp
dec
insl
xchg
ret
xlat
fisubs
sbb
jge
shl
loop
dec
mov
pop
std
stos
cs
test
cltd
inc
pop
jle
push
lcall
jno
inc
fbstp
cmp
leave
add
xor
jmp
testb
xchg
mov
loop
test
rclb
and
adc
or
je
gs
jne
das
cli
xor
push
les
mov
cs
lret
mov
mov
mov
mov
mov
jns
aam
mov
cltd
in
mov
mov
pop
inc
stc
idivb
outsb
popf
bound
pop
mov
aas
mov
pop
mov
in
addr16
scas
sahf
sar
xchg
hlt
dec
mov
sbb
mov
sbbl
dec
cli
pop
mov
and
sbb
lods
adc
push
sbb
inc
fists
lock
jle
adc
push
push
nop
dec
cwtl
pop
std
xchg
jle
mov
mov
je
xchg
sbb
mov
cmp
iret
fsubrs
dec
cmpsl
loop
cmpsl
inc
xchg
movl
mov
loop
xchg
idiv
or
push
mov
call
push
sbb
outsb
mov
test
rcrb
pop
imul
test
in
pop
lret
pop
mov
jne
sub
pop
negl
mov
adc
gs
xchg
hlt
jp
add
lcall
bound
and
stc
dec
pop
cmp
test
push
add
jbe
fprem1
jecxz
xlat
imul
cmp
pop
into
pusha
mov
shr
xor
fdivrs
mov
add
sub
ret
nop
enter
pop
xchg
loopne
in
test
or
dec
xor
mov
push
cmpl
mov
andl
fildl
pop
loope
clc
mov
mov
cmp
mul
hlt
push
push
sti
lods
testb
jmp
mov
adc
or
dec
imul
jl
or
in
movsl
mov
outsb
add
and
xchg
stc
xchg
pop
dec
jg
and
adc
sahf
inc
mov
push
sbb
mov
jge
jno
pop
cmp
in
fwait
cli
xor
popa
rcrl
inc
sub
addl
xchg
daa
repz
cmp
cltd
cs
mov
push
xchg
repz
cmpsb
sub
dec
cmpsb
repz
jae
pop
stos
jg
stos
insb
clc
pop
inc
sahf
sbbb
push
or
or
mov
push
int
mov
sub
push
cmp
jle
aam
out
add
inc
lret
mov
rcll
or
push
imul
clc
std
lea
int
inc
pop
inc
sbb
dec
outsb
imul
push
out
and
in
std
mov
divl
push
dec
pop
test
insl
jnp
out
sarl
gs
or
insb
adc
cmp
sahf
cmp
jg
mov
test
xlat
pusha
es
clc
scas
cmp
cmc
adc
jns
je
add
sub
icebp
shrb
sbb
push
fs
movq
nop
ret
jmp
pushf
add
push
popa
push
cmc
sub
adc
test
mov
out
mov
push
mov
outsl
mov
in
sbb
xor
jo
or
imul
out
aas
xor
or
popf
xchg
pop
inc
push
jge
xchg
pop
dec
sbb
ret
and
xchg
std
sbb
jae
movsl
outsb
adc
adc
xor
xor
jmp
mov
inc
popa
adc
loopne
out
fcmovnb
cmp
push
ja
push
jmp
es
pop
xchg
xchg
loope
ljmp
cmpsb
jg
cmpb
dec
popf
xor
lahf
lds
push
out
lods
pusha
pop
das
push
cmp
xor
cmpsb
call
or
jl
pop
loope
jns
add
xchg
jmp
bound
sbb
fbld
push
jg
and
xchg
push
dec
in
xor
addl
lcall
aas
outsl
and
mov
fisubl
ss
jo
lret
das
cmp
pop
orl
mov
imul
pop
sub
test
mov
daa
hlt
add
lds
shr
dec
and
xor
data16
fmul
mov
mov
mov
shrb
clc
sbb
mov
out
push
cs
call
adc
cmp
pop
cmp
mov
or
in
sti
mov
movsb
sti
jo
mov
data16
mov
gs
xor
mov
cmp
sbb
pop
and
mov
cwtl
jns
popf
pop
sarb
cmp
adc
test
dec
out
dec
pop
decb
call
aam
mov
cmpb
fwait
pop
movsl
jb
push
sub
push
lods
hlt
insl
je
xchg
dec
ret
xchg
or
les
xor
into
add
jo
ljmp
rol
and
lret
mov
push
sub
xchg
decl
or
adc
test
push
inc
clc
mov
inc
sbb
pop
mov
xchg
add
in
test
lods
cld
dec
cmp
sarl
dec
add
cmp
faddl
add
and
or
cmpsb
pop
fmuls
cmpsb
cmp
mov
repnz
lahf
xchg
jle
mov
xor
mov
inc
cmpsl
out
adc
jbe
mov
out
popf
fcomip
mov
jae
std
inc
gs
adc
cmpsl
add
das
ds
sub
adc
inc
aas
xor
scas
add
xchg
or
stos
dec
sbb
cmp
lcall
xchg
ljmp
mov
sub
adc
out
or
test
shl
xchg
jp
pop
out
jecxz
adc
aaa
mov
popa
jne
and
mov
ret
sbb
mov
insl
xor
sbb
pusha
stos
inc
inc
scas
dec
and
cld
mov
xchg
stc
dec
inc
mov
dec
jl
mov
sbb
mov
popa
mov
adc
mov
push
lcall
dec
fwait
in
add
dec
cld
popf
lret
loop
cmpsl
decl
cmp
pop
pushf
loop
std
fwait
outsl
pop
stc
sbb
pushf
dec
cltd
and
dec
gs
lods
out
scas
enter
add
xchg
xor
jmp
out
clc
hlt
testb
loop
mov
sbb
add
push
movb
insl
arpl
and
test
sub
lods
incb
mov
dec
imul
cmc
jg
out
add
sub
jle
mov
inc
add
mov
pop
repnz
xchg
popa
sbb
xchg
cmc
stos
cmp
imul
insl
xchg
add
xchg
addr16
mov
mov
into
je
mov
xchg
into
or
ljmp
sub
mov
int
clc
lds
and
es
les
rcr
or
xor
pusha
stc
mov
mov
mov
jnp
les
stc
jle
loope
dec
nop
outsl
mul
ret
in
aaa
mov
sbb
inc
insl
sub
nop
into
arpl
mov
xor
pop
rclb
out
mov
push
iret
mov
jle
out
nop
arpl
add
sbb
aam
je
and
das
push
pop
and
mov
push
daa
fildll
push
mov
pop
lcall
and
icebp
cmp
lahf
pop
add
hlt
adc
mov
sub
frstor
rcrl
aam
sbb
xchg
call
and
stc
or
mov
xchg
test
test
sub
mov
sub
fmull
sbb
mov
jno
mov
test
add
mov
orl
cmp
mulb
pushf
clc
test
push
xlat
fcomps
out
push
popa
push
stos
inc
cld
jne
or
push
push
and
pop
xlat
das
pusha
roll
subl
insl
into
mov
test
push
outsb
mov
dec
sub
mov
dec
cwtl
mov
repnz
adc
pop
std
xchg
je
mov
xchg
cmp
dec
std
cmpsl
imul
pop
incb
or
pop
mov
cld
lahf
ret
push
push
adc
clc
cltd
xchg
adc
ja
test
out
xchg
dec
sbb
sbb
adc
cwtl
xor
mov
xlat
mov
repnz
sub
jno
push
dec
pop
test
or
movsb
loop
xchg
or
andb
inc
movsl
inc
push
cwtl
push
mov
mov
push
ljmp
jnp
dec
icebp
add
adc
and
jnp
fs
and
data16
jle
shll
or
xchg
ffreep
inc
fcmovne
push
aaa
insl
cwtl
add
xlat
mov
push
jo
out
sahf
dec
test
popa
int
inc
dec
jmp
push
adc
scas
add
fsubrs
add
jo
mov
adc
ret
mov
lret
insl
into
in
ret
pop
lret
or
push
ss
int3
and
or
mov
repz
loope
leave
mov
xor
sub
or
add
inc
int
mov
sub
outsb
and
add
pop
pop
iret
jne
mov
inc
test
push
nop
mov
adc
lds
mov
movsb
sarl
mov
sbb
ss
js
and
mov
arpl
imul
adc
jge
add
cmc
dec
jo
sub
push
dec
repnz
movsl
int3
ficoml
push
pop
fldenv
aam
loop
mul
inc
fsubp
push
notb
frstor
dec
push
sbb
faddl
shl
mov
fs
cmp
push
inc
popa
xor
mov
fbld
jns
divl
mov
sbb
loopne
pop
lds
lea
bnd
pop
jne
mov
movsl
fistps
xchg
add
cmp
sti
mov
jmp
adc
mov
jne
adc
mov
movsb
pop
jg
xchg
inc
js
sbb
push
mov
cltd
ja
xchg
jbe
push
pop
iret
pop
pusha
push
mov
inc
daa
adc
xor
or
outsb
repz
loopne
int
sub
in
cmc
into
dec
popf
pop
enter
xor
dec
sbb
das
lcall
insb
out
js
inc
adc
daa
mov
shll
adc
in
mov
sarl
popl
sbb
push
ds
aam
test
or
mov
mov
xchg
mov
fdivl
xorl
xorb
clc
fs
sbb
inc
cld
fs
pop
pop
jne
mov
test
sbb
sbb
mov
or
and
mov
fmuls
push
mov
sub
into
in
shr
in
mov
stos
popa
pop
mov
pop
sti
mov
pop
add
inc
cwtl
cld
dec
cmpsl
mov
daa
cmp
cld
sub
out
cs
mov
andl
aas
dec
mov
push
and
xchg
lods
ljmp
stos
inc
or
repnz
imul
xchg
and
mov
cmpsb
push
ds
in
pop
das
cmp
or
lcall
out
dec
testb
push
dec
mov
imul
xor
fwait
add
or
lds
mov
jge
mov
sbb
jmp
stos
iret
fs
sbb
xchg
enter
mov
adc
and
pop
imul
add
sbb
fidivl
repz
and
in
and
lahf
ret
xor
int3
or
cmpsb
jb
push
add
mov
fwait
add
mov
fstps
cmp
and
push
out
add
iret
adc
lock
inc
push
push
outsb
and
fs
inc
xor
sub
sbb
cmp
cmpsl
lahf
loopne
xchg
ss
jne
mov
int3
push
addr16
inc
mov
push
add
imul
and
mov
sbb
cmp
pop
lock
popf
stos
aaa
push
sub
push
jg
mov
sbb
jno
sahf
cmpsb
cmp
jecxz
addl
aad
hlt
vpaddsb
inc
jnp
outsb
inc
test
push
hlt
adc
sub
loope
cmp
sbb
icebp
test
insb
test
mov
fsubrp
xchg
pop
shrl
and
jle
pusha
mov
cmp
fwait
cmp
pop
adc
pop
out
adc
add
push
ds
and
cmp
or
in
add
inc
cmpsb
mov
pop
shl
ljmp
cwtl
xor
stos
enter
adc
pop
sti
or
jne
outsb
adc
sbb
push
push
sbb
mov
jns
mov
insb
inc
add
cmp
loope
outsb
and
fidivl
insl
hlt
arpl
xor
adc
pushf
in
fcompl
pop
pop
lock
mull
inc
popf
and
shll
ss
lcall
sub
movsb
push
xchg
pop
mov
xchg
jno
jp
mov
ljmp
nop
lods
or
xchg
cmpsl
std
adc
xchg
popf
push
add
fcomp
je
add
cwtl
iret
int3
or
add
mov
xor
cmpl
adc
jb
cmpsb
push
scas
clc
jmp
clc
loopne
and
stos
xor
cltd
mov
mov
insl
aad
and
arpl
cli
pop
repz
gs
ljmp
cs
rcrl
pusha
pop
repnz
xor
jne
sbb
lock
sub
scas
inc
and
jle
mov
jl
mov
arpl
daa
hlt
push
jge
aas
cmp
jae
notb
push
pop
add
iret
ss
shr
aas
inc
push
xchg
pop
add
sbb
cmp
jb
pop
mov
add
add
sbb
xchg
jp
cs
neg
cld
ja
repnz
push
sub
fists
xor
fwait
rclb
and
push
subb
and
in
cmp
push
cmp
jae
inc
cmp
andl
fldlg2
push
push
add
outsb
sub
fadd
inc
mov
dec
jae
or
scas
push
sub
mov
cs
shlb
out
cs
iret
dec
rcrl
scas
fsubs
jo
adc
into
mov
jp
or
inc
jecxz
jbe
add
add
or
jnp
jl
pop
xchg
mov
cltd
or
pop
add
and
inc
push
in
jo
pusha
aaa
out
pop
inc
inc
in
and
xorb
stos
lret
rolb
push
in
push
in
aas
iret
clc
xchg
and
mov
ss
popa
xchg
test
cmp
enter
xorl
push
lcall
scas
and
in
push
leave
outsl
mov
jle
add
push
lret
cmp
mov
and
mov
lea
xor
fwait
mov
jae
test
xor
aam
int
xchg
movsb
and
lret
mov
mov
nop
xor
fsubp
push
mov
cmc
jmp
adc
push
fildl
sub
inc
adc
pushf
fs
shll
into
pop
jge
cwtl
movaps
pop
inc
adc
out
aas
pop
imul
adc
pop
ds
fsts
shll
xchg
or
mov
std
cmp
stc
cmp
pop
sar
jbe
adc
sti
lret
pop
and
or
jo
iret
dec
cmp
push
mov
adcl
mov
mov
push
fwait
imul
aas
icebp
pop
push
outsl
mov
stos
gs
push
insl
lahf
jo
pop
sbb
adc
ret
mov
jmp
and
movsb
movsl
pop
and
jecxz
daa
iret
popf
pusha
push
sbb
mov
lret
cs
inc
in
add
scas
data16
in
jmp
out
xor
int3
adc
fcomps
or
add
stos
inc
push
enter
sbb
mov
scas
xor
dec
int3
mov
pop
pop
xchg
xchg
mov
inc
adcl
in
leave
pop
jae
jle
sbb
dec
push
cmpsb
sahf
notl
push
outsl
aaa
add
imul
cmp
sti
mov
sub
inc
popa
pop
rcr
mov
dec
stos
adc
inc
lods
stos
sbb
push
insb
mov
jp
xchg
rclb
test
repz
sub
inc
sub
icebp
mov
xor
addl
push
sbb
out
andb
push
pop
or
in
bound
lret
xchg
jl
xchg
add
push
int3
sti
xor
in
xchg
cwtl
inc
adc
mov
test
stc
sar
mov
fxch
jl
sahf
xor
out
popa
and
rorb
xchg
cmp
pop
bound
xchg
icebp
add
scas
push
inc
push
popa
cmc
dec
repnz
mov
hlt
mov
xchg
sbb
or
jg
lea
mov
lea
mov
imul
or
adc
ljmp
cltd
scas
mov
iret
sub
dec
cli
add
repz
mov
int3
sbb
inc
pop
dec
sub
test
jecxz
cmp
int
call
or
scas
sub
sub
jnp
enter
fwait
pop
in
scas
or
mov
mov
mov
jp
es
in
and
dec
fimuls
rorb
or
call
aas
cmpb
inc
pop
or
daa
mov
sub
popa
xchg
sti
fimull
movsl
mov
push
fildl
xchg
imul
cld
fwait
jmp
rorl
ret
sub
xor
xchg
cmp
pushf
mov
pop
mov
data16
cmp
pusha
jno
sbb
insb
scas
xrelease
xchg
add
pusha
sub
push
xchg
mov
ljmp
adc
dec
push
xor
in
test
addl
data16
mov
push
inc
das
pop
cmp
arpl
ret
and
mov
mov
cmpsl
andb
shr
cs
cs
push
mov
hlt
gs
inc
fdivr
jge
flds
pushf
leave
jmp
aam
sub
cmp
dec
std
push
jl
fldenv
pop
das
fistpl
xchg
jns
xor
mov
repnz
and
movsl
in
sbb
jne
cmp
insl
jle
lea
iret
inc
jecxz
repz
xor
jnp
ret
pop
pop
daa
jmp
sahf
scas
repnz
pusha
xchg
inc
bound
adc
xlat
sub
into
insb
inc
imul
jb
mov
pop
sbb
xchg
inc
adc
push
jle
lret
pop
push
inc
pop
mov
xchg
outsl
xchg
or
sbb
inc
test
jno
inc
lock
es
inc
loopne
xlat
push
jmp
add
cli
std
notl
call
sti
popa
mov
addr16
fcoms
dec
sahf
mov
outsb
gs
ffree
int3
dec
adc
sti
in
in
pop
aam
push
pop
rorb
adc
pcmpgtb
sbb
xor
icebp
lahf
pop
sbb
fs
jbe
das
fwait
inc
sbb
sub
adc
jge
les
outsl
test
push
jae
out
aad
out
loop
add
pop
cmpsl
cmp
cmp
cmp
cld
pop
or
hlt
fdivs
dec
sbb
inc
mov
or
pop
clc
shl
out
mov
dec
lea
xchg
push
dec
fs
push
movsb
lret
cli
movsl
fldenv
jb
movsb
pop
inc
outsl
call
add
sub
pop
fdivs
cmpsb
add
or
push
sbb
jb
mov
popf
jmp
out
and
sbb
or
fdivl
fdivl
pop
sahf
lcall
pop
popa
ret
jb
daa
jo
test
cmc
mov
rcr
adc
and
pop
lods
mov
xor
fwait
das
cmp
pop
or
sub
mov
ret
js
sub
inc
adcl
jnp
test
jne
cltd
repnz
clc
pop
jg
into
cmc
cli
fldcw
xlat
and
icebp
loopne
xor
rcrb
cltd
fcoml
sub
inc
dec
cwtl
and
xchg
xchg
out
loop
out
jae
and
jmp
sarl
shlb
js
in
jo
test
push
ficoms
imul
pop
cmp
sub
call
cmp
or
mov
adc
cmp
cmp
push
xor
pop
jp
std
aas
inc
xor
sbb
cmp
push
pop
mov
mov
dec
sub
and
and
push
dec
and
mov
pop
std
fstpl
xchg
fwait
xor
xchg
movsb
call
jno
add
data16
sbb
sbb
jbe
ja
js
das
aaa
push
dec
lea
xorps
add
dec
idiv
jmp
add
push
mov
or
test
mull
mov
push
xlat
cs
or
mov
pcmpgtb
push
or
cmp
push
leave
popa
xchg
xor
mov
hlt
rorb
scas
xchg
scas
ret
mov
sbb
out
mov
fadd
mov
inc
insb
lcall
js
lea
fs
mov
daa
or
out
mov
lcall
mov
push
dec
loope
push
test
mov
inc
loope
inc
jg
movsb
das
inc
jmp
adc
jnp
adc
dec
in
enter
pop
cmp
insl
push
xchg
dec
insb
push
aad
ret
mov
cli
dec
inc
imul
fnstenv
and
shrl
xchg
mov
add
stos
and
mov
and
add
push
jl
rol
out
popl
pop
lea
movsb
andl
fisttpl
movb
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
movsl
mov
sbb
scas
mov
nop
into
dec
dec
jecxz
cmp
cmpl
mov
cltd
sarl
repnz
mov
jl
jmp
mov
das
dec
stc
add
sub
js
dec
xchg
aas
xor
sub
into
sbb
fwait
push
mov
jg
mov
out
test
out
ss
xor
repz
imul
lock
insb
adc
push
js
jg
xchg
mov
ja
orb
int3
ds
sbb
leave
push
pop
xchg
pop
mov
scas
into
xor
insb
leave
and
pop
mov
mov
jp
xor
adc
mov
lea
dec
sbb
mov
pusha
fwait
xchg
push
ljmp
mov
pop
jl
fwait
dec
mov
std
add
lret
lahf
fsubs
in
push
fmuls
dec
xchg
lahf
out
jo
test
sti
sub
push
xor
popf
lahf
scas
dec
test
cmp
xor
frstor
fcoml
cmpsb
sbb
xor
adc
pop
dec
fwait
push
sbb
ja
xlat
and
xchg
enter
insb
sub
sub
push
dec
pop
cmpb
mov
test
decl
adc
mov
push
mov
mov
sbb
pop
std
jno
fcomps
or
fdivl
adc
xlat
cmpsl
movsb
cltd
xchg
cwtl
push
pop
iret
out
mov
mov
je
xchg
sub
dec
icebp
or
sarb
scas
fisubl
js
xchg
movl
bnd
pop
mov
push
ffreep
sbb
loope
sub
movsb
dec
mov
mov
mov
mov
shrl
popa
jl
xchg
and
ret
and
and
mov
jg
cmp
aad
jmp
adc
mov
and
icebp
mov
xchg
fucomip
jge
xor
les
mov
and
dec
rcrb
adc
es
pop
rol
inc
sbb
or
das
pop
cmc
inc
popa
test
cmpsl
xchg
mov
les
adc
test
int3
jge
push
out
dec
addb
subb
jb
jl
mov
shlb
es
test
hlt
pop
icebp
pop
xor
iret
jo
movsl
xchg
insb
fmull
mov
inc
dec
push
push
subl
mov
mov
in
cld
xchg
loop
mov
data16
sbb
lods
sub
xchg
dec
cmp
mov
add
mov
insb
mov
ljmp
out
shll
adc
js
or
lods
lods
inc
push
or
push
xor
push
sarl
or
js
jmp
pop
pop
std
std
cli
jo
movsb
add
push
leave
mov
xor
das
out
or
jo
mov
mov
inc
sub
jmp
xchg
cld
push
jnp
cltd
jbe
fildl
insb
mov
arpl
ljmp
pop
testb
je
sub
in
out
subb
out
mov
sub
sarl
sbb
fidivrl
bound
xchg
adc
es
xor
add
sub
lcall
les
in
cli
popa
pop
pop
in
jno
mov
add
cmpsb
or
push
dec
mov
push
arpl
lcall
popf
test
repz
inc
and
stc
cltd
mov
push
ljmp
or
bnd
dec
pop
push
mov
out
cmp
inc
dec
xchg
aaa
in
les
jge
mov
mov
pop
mov
imul
bound
xor
jp
lret
cmpsl
jne
movsl
das
scas
xchg
movl
test
fdivrl
into
push
fadd
mov
sub
push
mov
lods
andb
cmpsl
das
idivb
push
sub
aad
subb
dec
xchg
add
lods
test
nop
add
pop
loope
xor
aad
xchg
and
loop
addl
lds
iret
xchg
dec
mov
and
notb
cmp
subb
adc
in
movl
jbe
roll
cmp
ljmp
adc
out
cmc
fs
cmc
addr16
sub
push
test
std
xchg
or
out
adc
loope
movsl
add
jns
cmp
inc
pop
int
test
dec
sub
pop
mov
insl
addr16
mov
xchg
dec
cmc
movsl
lds
pop
sti
mov
stos
sbb
and
test
push
movsl
mov
jl
mov
jmp
loopne
imul
iret
dec
adc
pop
pushf
mov
fcmovnu
fs
adc
shll
imul
jmp
add
xchg
int
mov
mov
jae
mov
inc
ljmp
xor
lds
inc
inc
sub
jne
cmpsb
rclb
nop
cmp
xchg
push
pusha
mov
jmp
or
call
dec
jl
xor
jae
div
test
ficomps
out
dec
adc
enter
or
adc
imulb
pop
push
dec
int
dec
pop
inc
lock
cld
icebp
pop
fimuls
sbb
test
lods
push
or
mov
add
inc
out
mov
lods
cmp
aad
and
fildll
xchg
bound
shrb
ror
cmp
xor
adc
xor
add
and
sbb
aam
divl
in
lods
into
sbb
mov
lods
push
movsb
scas
pop
mov
mov
push
inc
xchg
pop
sbbb
add
je
mov
lcall
xchg
pop
testl
sub
stos
test
in
push
rclb
mov
mov
in
in
jg
js
dec
sbb
fildl
mov
fisttpll
fsubs
push
subl
in
push
pcmpgtb
mov
adc
ficomps
ljmp
fnsave
cli
push
sti
es
mov
in
and
arpl
xor
out
adc
pop
and
mov
cmp
cmc
fldenv
test
fcom
lret
jno
out
adc
xchg
xor
push
push
jno
inc
sbb
jmp
cmc
fidivs
je
dec
repnz
pushfw
push
xor
lret
or
insb
outsb
add
sub
mov
and
popa
pop
roll
jmp
loope
inc
push
dec
aad
and
test
push
fnstenv
cmp
in
pop
dec
push
sub
sahf
mov
cmp
adcb
mov
xor
pop
mov
imul
pop
adc
arpl
mov
fisttpl
xchg
mov
push
ds
adc
divb
mov
icebp
out
sti
sub
adc
add
add
xor
or
dec
cmpsl
inc
test
int
mov
bound
test
sub
dec
jecxz
test
jns
mov
xchg
into
sarb
pop
adc
movsb
xchg
fimuls
lahf
add
jle
lcall
mov
mov
sub
mov
or
mov
sahf
stos
out
ss
iret
mov
mov
and
xor
pop
cmp
mov
push
test
mov
lret
or
cwtl
and
mov
pop
std
push
sub
fistpl
push
adc
and
jno
pop
pop
sub
movl
jecxz
jae
jge
mov
push
das
aas
sahf
xchg
inc
mov
mov
scas
mov
push
pop
sbb
mov
aam
pop
leave
xchg
hlt
or
lret
dec
ljmp
insl
stc
popa
nop
push
icebp
adc
mov
mov
adc
enter
xor
adc
les
lods
mov
and
dec
lock
mul
jbe
cltd
or
sti
dec
popa
xlat
cmc
fwait
scas
enter
out
mov
fisubl
xchg
ficoms
jo
mov
inc
push
cs
adc
jmp
mov
adc
ss
lahf
jae
jl
imul
sarl
clc
push
jp
out
lds
pushf
aaa
sbb
loop
cmp
cmp
jae
pop
adc
rcll
xor
rolb
dec
cmp
xchg
adc
jmp
xor
test
test
push
enter
push
cmp
and
push
out
pop
jnp
cli
mov
lea
mov
mov
cmp
iret
add
push
dec
negl
nop
iret
mov
insl
ret
and
das
push
xchg
cmpl
pop
js,pn
pop
lock
dec
mov
stc
incb
push
cmp
sub
test
jno
stos
adc
in
scas
pushf
push
dec
fs
xchg
inc
sar
clc
cltd
mov
ror
ja
in
cmpsl
insl
push
sbb
rep
xor
cmp
lcall
xchg
sub
inc
and
jp
and
jns
rolb
jb
sub
int
mov
pop
pop
clc
stos
xchg
insl
movsb
xchg
test
in
inc
sti
lea
jbe
pop
fildll
pop
pop
lods
aaa
imul
xchg
mov
cmp
cmc
and
ficoms
adc
sub
dec
adc
or
mov
cmp
add
ljmp
test
shl
clc
icebp
mov
push
les
popf
push
clc
idivb
xchg
hlt
dec
dec
bound
lods
dec
sbb
xorb
frstor
dec
scas
jns
int3
rcll
pop
ss
jbe
xor
popa
rcr
xor
movsb
mov
pusha
and
mov
outsb
shll
push
xor
sbb
pop
mov
in
mov
pushf
in
das
or
rorl
out
jmp
add
popf
int
pop
addr16
fdivr
stc
fistps
adc
xor
push
cmp
or
sub
add
fisttps
fldcw
rclb
jp
adc
mov
xor
fnstsw
lods
mov
in
mov
mov
repz
jnp
lcall
inc
dec
sti
mov
push
cmp
inc
mov
outsb
push
cmp
or
cmc
inc
jne
add
sbb
mov
pushl
arpl
or
repz
popf
test
or
shl
imul
and
push
test
push
and
scas
pop
jae
pop
pop
fisttps
in
cmp
orl
adc
xchg
add
dec
int3
mov
inc
int3
jecxz
inc
lea
jle
sahf
xor
shrl
and
mov
enter
adc
lods
cmp
pop
pop
and
hlt
dec
pusha
outsb
addl
adc
repnz
sbb
adc
repz
pop
scas
push
pop
xchg
pop
int
lret
data16
loop
mov
ret
and
stos
xchg
jnp
fs
test
xor
push
jnp
dec
out
loope
je
xchg
loope
xchg
test
fst
dec
mov
xchg
sbb
or
push
jne
cmp
arpl
je
mov
pop
mov
negl
js
xchg
test
js
xchg
cmpsb
sub
add
fwait
rcrb
or
int
int3
outsb
jmp
jge
test
jecxz
lea
bound
les
xchg
out
gs
cwtl
aaa
lds
mov
xor
adcb
pop
pop
xchg
movsl
aaa
and
aaa
movl
and
lret
movsl
fdivrs
push
int3
orl
mov
mov
iret
iret
push
xor
cmp
push
loop
mov
in
mov
xor
lcall
ret
sub
lods
por
int
mov
lret
xchg
and
add
jnp
lods
stos
test
inc
cld
std
push
xchg
out
push
dec
clc
push
dec
aam
enter
arpl
outsb
or
fistpll
and
jle
inc
xor
cmpsb
inc
mov
mov
outsb
scas
dec
cmpsb
cld
xchg
or
sub
es
into
ret
push
pop
xor
fidivl
mov
fistpl
mov
push
and
out
test
pop
cmp
fwait
arpl
add
sub
mov
rclb
mov
lods
mov
fwait
and
add
add
mov
jl
sbb
jge
rolb
pusha
mov
cmp
mov
cltd
push
js
push
clc
leave
jp
sahf
cli
jae
inc
outsl
es
cmpb
pop
daa
dec
sti
daa
or
imulb
dec
pop
cli
repz
adc
lods
inc
inc
adc
jecxz
adc
xor
inc
mov
arpl
sbb
int
call
rcrl
out
mov
pop
mov
xor
popa
dec
or
ret
pop
cmc
std
inc
in
cmp
xor
xor
aaa
xor
dec
subl
fisubs
jo
imul
dec
lea
out
mov
add
xor
fdivrs
sbb
leave
xor
inc
push
sbb
mov
lds
dec
and
das
pop
xchg
lcall
mov
lods
mov
aaa
or
push
lea
jg
add
mov
negl
flds
jg
call
leave
dec
dec
mov
cmp
xchg
fldenv
jg
xchg
or
xor
xchg
adc
or
es
mov
out
roll
iret
or
mov
nop
xchg
dec
or
shl
data16
popf
test
popf
std
push
pop
add
js
out
int
daa
inc
jne
clc
dec
popa
xchg
call
mov
bswap
scas
xchg
aaa
or
xor
paddusw
out
mov
inc
jbe,pn
and
es
xor
pop
mov
addb
cmp
cmp
ret
add
outsb
and
shlb
pop
xor
sbb
fwait
push
insl
sbb
test
inc
inc
pop
and
sti
mov
jne,pt
and
ljmp
xchg
or
ja
cwtl
out
pop
sahf
jmp
jno
xlat
loop
adc
aam
adc
mov
fists
lods
popf
ret
scas
xor
stc
test
adc
inc
sub
enter
leave
loope
das
jp
mov
mov
mov
ds
jle
inc
out
lock
fwait
jbe
dec
mov
aad
pop
insb
push
mov
ds
bnd
hlt
pop
pop
jb
out
insl
sahf
js
movswl
inc
test
push
and
movsl
or
add
lock
xor
mov
mov
fwait
mov
dec
adc
test
lods
jecxz
fdivs
cs
push
pop
fdivp
push
pusha
dec
add
xchg
and
pusha
push
dec
fildl
adc
cmpsb
out
pop
inc
fistps
stos
out
dec
orl
adc
mov
cld
mov
cli
inc
add
or
in
loop
imul
sbbb
add
jmp
inc
das
mov
lcall
add
xorl
and
xchg
mov
mov
lods
sub
test
adcl
cmp
fdivp
loope
mov
sar
inc
push
sbb
mov
adc
fcmovu
into
mov
mov
add
test
or
and
fsubp
lahf
xor
lcall
push
lods
popf
pusha
div
add
dec
sbb
pusha
outsb
jmp
push
inc
lcall
mov
loope
cmc
sar
ds
movsl
fs
adc
dec
or
scas
lret
sbb
ljmp
mov
shr
ja
mov
inc
pusha
pusha
shr
pop
cmc
fxam
mov
std
cmc
add
xlat
cltd
push
incl
mov
pop
scas
mov
test
in
jae
mov
xor
jg
pusha
rcrb
dec
push
cs
push
sub
popf
xlat
cmpsb
mov
xchg
pop
xlat
cmp
pop
addr16
mov
ds
test
mov
push
insb
cmp
outsl
outsl
sarl
push
sbb
mov
jo
xor
sbb
out
mov
sub
movsl
xor
xor
mov
iret
sub
lret
adc
cmp
or
sub
fsts
movsl
sub
insl
pop
xchg
xchg
add
subl
mov
fcoms
xchg
mov
mov
xor
lods
and
pop
lock
add
mov
adc
inc
add
mov
jbe
cmp
dec
lods
sbb
mov
rcr
push
in
jmp
sbb
call
jo
jp
stos
test
push
inc
push
loope
fildll
jo
mov
mov
es
xor
mov
dec
xchg
int
pop
inc
sbb
mov
das
lea
push
daa
mov
gs
push
xor
in
xor
xchg
aaa
popf
movsl
sti
pop
movsl
fdivl
jge
fldl
std
ljmp
push
cmpsb
dec
mov
in
loop
frstor
mov
jmp
clc
adc
mul
pusha
fistpll
or
sahf
lds
loope
pop
jae
cmpsl
mov
lods
push
adc
arpl
lods
mov
sub
jp
lds
mov
push
pushl
jmp
std
inc
bound
adc
mov
mov
dec
xchg
in
mov
or
dec
inc
arpl
std
dec
or
add
in
out
lcall
dec
xchg
xchg
push
nop
inc
mov
adcb
cmove
fldcw
ret
js
jnp
push
neg
scas
xor
test
mov
or
pusha
xchg
xchg
jg
add
dec
pop
sarl
lds
add
les
or
mov
sbb
push
ffree
in
nop
mov
scas
sbb
push
sti
and
jp
out
loopne
test
test
cmp
add
push
das
add
mov
jecxz
and
cmpxchg
and
xchg
pusha
incl
xchg
fistpl
adc
xchg
cld
fdivrs
or
dec
into
rolb
jnp
or
lock
push
xchg
push
mov
les
lahf
pop
push
inc
ljmp
pop
mov
xchg
inc
insb
test
xor
nop
jns
xchg
adc
int3
adc
adc
push
sub
sti
xchg
test
pop
or
inc
sub
aam
mov
jge
xlat
fimuls
dec
mov
cmp
cmp
int
hlt
enter
and
cmp
inc
push
pop
mov
jl
int
pop
mov
ljmp
popf
xor
mov
or
add
mov
cmc
inc
mov
sbb
mov
sub
dec
push
loopne
aas
shl
ds
dec
lds
dec
push
jle
test
fwait
jne
push
in
inc
int
push
mov
push
mov
xlat
out
adc
push
push
sub
xchg
jae
xor
mov
test
inc
mov
fiaddl
mov
jge
data16
mov
push
sbb
loope
lods
ret
mov
fdivrl
jmp
adc
imul
pusha
repnz
lret
xor
loopne
and
push
xor
mov
stc
outsl
out
insb
cmpsl
or
xchg
lds
jmp
sub
mov
ss
jp
fwait
pushf
incl
push
fidivs
xchg
or
ljmp
inc
adc
xchg
into
int
rcll
arpl
stos
push
mov
pusha
scas
and
call
mov
and
pop
fisubs
xlat
xchg
repnz
jmp
mov
xchg
jmp
sbb
dec
adc
inc
push
xchg
cmpl
pusha
fidivl
xchg
push
mov
mov
pop
cwtl
or
mov
inc
sbb
test
insl
adc
adc
mov
sbb
sbb
dec
mov
push
pop
inc
outsb
mov
aaa
data16
xchg
jnp
push
scas
int3
adc
or
mov
test
or
mov
pop
enter
inc
stos
mov
or
mov
inc
push
cmpsb
mov
loope
xor
jecxz
ret
call
je
jge
fldl
cmp
mov
jge
out
iret
test
test
jb
add
pop
and
add
inc
ret
xchg
cmp
loop
int3
gs
ficompl
xor
mov
popf
nop
mov
sti
and
cmp
inc
movsb
sbb
loopne
movsb
sbb
jecxz
jo
bnd
icebp
adc
pusha
shlb
in
xchg
jb
mov
outsl
jg
rcrb
outsl
dec
ret
mov
sub
inc
mov
fwait
sti
dec
xchg
loop
push
pushf
dec
cmp
cmp
ret
add
outsl
inc
xchg
mov
shrl
push
jl
mov
jo
clc
push
xor
mov
aad
adc
add
mov
xchg
mov
add
lods
dec
insb
je
cmp
insl
outsb
rcll
mov
pop
sbb
clc
shlb
addb
mov
lds
and
ret
xchg
cli
push
je
cld
ljmp
jo
xor
lods
sbb
lret
mov
push
lds
mov
push
lret
insb
loop
lock
inc
and
mov
in
movsl
push
les
sarb
jno
outsb
sbb
aam
dec
cmpsb
lret
sarl
in
lods
scas
data16
ljmp
nop
pop
dec
cwtl
fincstp
cs
jp
xchg
gs
mov
movsl
sbbl
lret
outsl
test
jbe
daa
fisubs
imul
pop
mov
add
adc
gs
adc
cmc
das
into
xor
mov
jns
lgdtl
out
mov
mov
or
mov
aam
rcrl
shlb
aas
jns
mov
sub
jecxz
das
pop
jle
cmp
add
push
out
loopne
in
mov
ja
pop
nop
cmpsb
fdivrl
ss
push
jmp
mov
pop
cmp
cmp
rorb
sub
aad
mov
ss
push
jbe
pop
mov
cmp
outsl
aam
leave
mov
mov
into
in
mov
nop
pop
cmp
jb
adc
jp
inc
das
in
fstpt
das
push
cli
xchg
lock
mov
loopne
pop
pop
in
ficompl
mov
mov
mov
sub
test
aas
sarb
jbe
stos
and
decb
jg
pop
mov
mov
imul
mov
insl
mov
fsubrl
mov
sub
addr16
pop
and
xlat
out
xor
sahf
jae
sub
pop
out
mov
addr16
jmp
xchg
or
mov
divl
idivl
or
fs
or
into
push
pusha
and
mov
inc
mov
icebp
dec
inc
jl
pusha
insl
xor
dec
in
pop
popw
shl
xchg
stc
std
sub
js
jge
sub
sub
shll
jne
sarl
mov
adc
lret
in
jnp
mov
test
fcomp
aam
loope
or
add
push
push
lahf
cmpsb
rolb
inc
aad
ljmp
mov
jo
cwtl
dec
loope
push
out
mov
xchg
mov
sub
push
into
pusha
fimuls
jno
xchg
outsb
data16
ret
xchg
and
dec
jne
xchg
jbe
xchg
push
lcall
test
xchg
lea
push
popf
adc
xor
push
xchg
sub
xchg
pusha
cmp
rorl
bound
cli
jg
add
mov
or
outsb
and
std
pop
mov
and
adc
cli
jbe
dec
stos
aam
add
sub
cmpsl
repnz
insl
daa
pop
or
js
mov
cmp
push
sbb
xlat
ret
xor
movsb
pop
add
sub
adc
mov
xor
aam
add
ljmp
cmp
sbb
mov
leave
push
dec
lods
outsb
call
imul
add
and
lcall
xchg
cltd
ss
adc
orl
fucomp
inc
loopne
jns
repnz
or
gs
or
sub
cmp
lods
scas
pop
push
and
push
inc
jge
jo
inc
adc
nop
push
mov
mov
sti
arpl
bound
push
cmp
loop
aad
push
push
test
xor
cvttps2pi
jnp
sub
mov
test
shll
xor
fidivl
das
pop
clc
mov
test
hlt
add
das
sbb
cltd
inc
push
mov
ja
je
outsb
xchg
xor
pusha
stc
and
push
push
push
stos
xor
hlt
ret
mov
cmp
int3
je
fs
cmpsl
imul
xchg
mov
fstpt
and
popa
ret
ffree
adc
adc
loope
in
xor
in
mov
dec
outsb
les
insb
jnp
adc
dec
mov
dec
jno
in
les
jmp
xor
push
mov
add
test
cmpsl
dec
mov
mov
jp
aam
leave
xchg
or
sub
push
mov
push
insb
test
sahf
subb
aas
in
push
fildll
xorl
cmp
push
adc
js
push
cmp
fsubrs
pop
push
ret
aad
inc
in
jge
adc
mov
enter
dec
cwtl
dec
add
adc
cmpsb
lods
cmp
out
test
insl
pushf
dec
jg
mov
mov
xor
xor
mov
mov
cltd
mov
sub
and
ljmp
sub
xor
cmp
inc
pop
pop
cmc
inc
or
mov
and
mov
insb
or
mov
sbb
push
cmpsl
sbb
test
mov
repnz
jns
dec
jbe
into
cld
sbb
and
idiv
pop
and
andl
test
pushf
insb
inc
sub
cmp
xchg
mov
gs
jl
sbb
push
shll
pop
stc
aas
lahf
out
fiadds
int
push
into
or
xor
std
and
sbb
lcall
sar
daa
lock
nop
shl
push
ja
rol
mov
add
mov
dec
inc
in
add
add
push
xchg
sub
push
pop
xchg
xor
xlat
jg
lret
dec
stos
sti
sbb
in
mov
xchg
xchg
nop
lods
and
out
mov
les
lcall
dec
xchg
push
xchg
or
dec
mov
sub
int
test
mov
add
sub
mov
push
mov
or
inc
aad
lret
pop
scas
leave
sub
push
push
test
sub
in
cmc
add
es
mov
cmp
mov
mov
and
loope
psllq
mov
xchg
in
adc
bnd
push
movsb
outsb
cmp
mov
loopne
mov
sbb
daa
cltd
and
mov
leave
mov
shrl
scas
in
or
call
xchg
ja
gs
ds
dec
inc
xchg
or
mov
loopne
jmp
adc
mov
push
lock
dec
insl
leavew
add
sti
ds
imul
or
mulb
dec
and
xor
sub
loopne
xchg
dec
pusha
pop
pushf
or
jbe
inc
xor
lea
mov
xchg
add
and
add
int3
xor
cwtl
cmpsl
and
xchg
pop
cmpsl
or
movsl
scas
mov
sti
aaa
imul
sahf
ljmp
lret
dec
int3
cli
cmp
cmpsb
dec
push
or
cmp
cltd
out
and
lret
mov
mov
jno
outsb
adc
pop
cmp
inc
xchg
cmp
ret
outsl
cmp
mov
push
mov
pop
repnz
dec
push
jle
xchg
ljmp
fdivrs
lret
push
aad
add
rcll
ficompl
lds
negb
insl
add
les
gs
orb
rol
inc
clc
imul
imul
out
push
xchg
loope
inc
push
dec
cmpsb
sti
cltd
mov
cmpsl
dec
ss
mov
cmpsb
insl
aaa
incb
jle
pop
sub
xchg
roll
icebp
push
out
pop
btc
cmp
add
mov
xor
jne
cmpsl
mov
loop
inc
fwait
xchg
out
jb
loop
pop
jle
movsl
pop
shll
jns
or
and
cmpsl
and
repnz
in
mov
mov
and
pop
out
out
in
insl
mov
lock
xor
mov
outsl
cmc
mov
jo
lds
xchg
pop
cmp
insl
int3
repz
fildll
subl
fsubl
shll
fstps
pop
mov
xchg
ds
dec
ljmp
rorb
repnz
adc
and
or
pop
push
cltd
ss
stc
jae
mov
sbb
add
jmp
pmullw
jmp
stos
imul
and
dec
ljmp
pop
iret
invd
pop
cmpsl
mov
sub
push
mov
rolb
inc
or
je
pop
jbe
jl
and
cld
daa
pop
inc
jb
cwtl
stc
mov
pop
and
dec
out
fwait
iret
repz
popa
inc
lret
adc
mov
ret
xor
ret
leave
jle
mov
shrb
xorl
xlat
bound
push
sbb
mov
bound
push
fmul
push
leave
lea
lret
outsl
gs
insb
movsb
ss
scas
or
inc
jmp
sahf
sub
mov
or
cld
test
and
cs
mov
cld
push
movsb
je
dec
mov
xor
jmp
push
xor
cmp
adc
push
fdivs
popa
push
leave
jnp
ljmp
lods
adc
xchg
add
leave
jo
insb
mov
xchg
imul
sbb
fnstenv
jl
sbb
cmp
stos
jmp
je
xlat
push
cmpsb
stos
adc
movsb
hlt
daa
adc
adc
pop
or
mov
imul
dec
xchg
cmc
sbb
outsl
jge
inc
pop
stos
popw
cwtl
jns
aad
sub
cmpb
and
cmp
aad
inc
xor
jno
negb
stos
fnstsw
aaa
popfw
push
jmp
xchg
js
or
stc
and
sahf
mov
stos
imul
mov
int
mov
add
jg
andb
inc
pop
imul
in
fildll
fmul
or
and
lahf
xorb
add
arpl
push
jo
xlat
sbb
sbb
addb
dec
mov
bswap
xchg
jp
jno
shr
arpl
loop
das
add
jne
or
test
in
sbb
pusha
pop
jne
pop
lds
bnd
addb
push
push
or
add
mov
cmp
mov
or
mov
push
leave
cltd
cmc
lret
jp
sahf
mov
mov
movsl
inc
add
out
loop
cmp
popf
fbld
clc
nop
pop
lock
mov
xchg
popf
leave
jl
lcall
repnz
add
mov
into
pop
mov
mov
mov
mov
fldcw
push
push
jecxz
jecxz
jae
cltd
test
stos
push
jno
adc
subl
cwtl
enter
dec
mov
add
mov
int
push
jmp
jo
mov
outsb
sbb
mull
ret
pusha
js
idivl
imul
mov
cli
xrelease
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jb
movl
push
adc
movl
subl
mov
push
mov
adcl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
orl
add
andl
mov
mov
addl
test
movl
je
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
sbb
mov
addl
mov
mov
xor
xor
add
and
mov
mov
and
xor
mov
and
mov
add
sbb
mov
mov
xor
mov
or
mov
add
or
mov
orl
mov
xor
mov
xor
mov
add
mov
sub
sbbl
lea
xor
xorl
xor
movl
cmp
movl
je
xorl
mov
subl
xor
adcl
add
cmp
movl
jne
pushl
call
mov
not
mov
adcl
mov
addl
xor
add
movl
cmp
movl
je
pushl
sbbl
pushl
call
mov
xor
mov
xor
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
jmp
mov
add
sbbl
mov
mov
mov
sbbl
add
orl
mov
jmp
push
mov
andb
test
xchg
imul
adc
addl
rcrb
mov
mov
adc
addb
lcall
dec
cmp
xchg
sub
and
dec
nop
movsl
into
jecxz
jmp
clc
andb
push
out
xchg
lock
mov
jp
aaa
loopne
mov
jns
add
push
jmp
sub
movsl
mov
mov
nop
out
addr16
xor
push
push
jle
ret
dec
out
xor
cmc
adc
sbb
cmp
ficoml
jo
and
pusha
sbb
xchg
xchg
xchg
dec
or
cmc
ljmp
into
adc
mov
pop
pop
add
sbbb
cwtl
ds
fldcw
test
add
xor
or
lds
cli
loopne
mov
fsubr
xor
loopne
adc
sbb
sbb
and
rorb
rclb
mov
cwtl
ret
or
inc
sbb
push
mov
xor
cmpb
pop
cld
add
mov
test
cmc
cmp
pop
mov
mov
push
sbb
inc
cmp
pop
std
add
popl
loop
and
pop
and
inc
push
aam
ds
inc
mov
push
dec
cmp
rcrb
cmc
dec
jo
xchg
in
push
subb
and
shlb
mov
in
sahf
dec
add
les
xlat
call
push
xchg
loope
sub
xorb
cs
xchg
outsl
add
sub
sbb
mov
xlat
test
popa
sbb
xor
daa
and
les
xchg
lods
fisttps
addr16
cmc
sub
inc
ffree
imul
mov
sbb
cwtl
jb
xchg
pop
mov
pop
mov
mov
mov
shl
xchg
xchg
icebp
mov
or
dec
sub
inc
jbe
mov
sub
int3
jecxz
es
cmpb
packsswb
jmp
shrb
cwtl
dec
lods
repz
cmp
orb
mov
sarb
sbb
fs
stos
lea
out
xchg
mov
int3
enter
cltd
shlb
mov
mov
ret
fadds
sub
push
cmp
inc
pop
pop
mov
ja
ret
sub
or
ss
loopne
mov
pop
xlat
dec
sbb
and
or
dec
push
stos
dec
jmp
fs
or
push
cmpb
push
or
ficoms
push
push
dec
orl
bound
cmpsb
pusha
pop
sahf
fwait
popf
adc
jl
mul
int
mov
sub
andl
and
inc
rorb
pusha
mov
rcrb
in
mov
aaa
mov
pop
xor
inc
je
imul
mov
gs
mov
loope
mov
push
std
dec
or
mov
sbb
roll
in
inc
inc
fidivrs
ret
jns
lea
in
adc
int3
sub
aas
test
sarl
mov
xor
aaa
pop
pop
cmp
hlt
xchg
pop
xchg
xor
xchg
imul
pop
dec
repnz
jns
xor
inc
lds
add
popf
xchg
loopne
stos
imul
sti
movsl
jne
fdivrp
push
jecxz
jle
mov
mov
loopne
mov
mov
pop
xchg
jno
negb
mov
shlb
or
dec
sarl
imul
and
fsubrs
jmp
ret
std
xchg
repnz
mov
ficoml
inc
fistl
and
dec
cmpsl
xor
repz
xor
fnsave
lcall
ret
mov
fsubp
sbb
repnz
mov
mov
mov
icebp
fdivrs
lods
dec
mov
xor
inc
cltd
mov
cmp
je
jg
into
mov
std
addb
sub
test
sub
xchg
in
nop
rclb
push
mov
or
fwait
xchg
xor
fimull
xor
pop
jmp
mov
dec
xor
mov
sbbb
gs
pop
sub
ja
mov
cmp
sub
aas
sbb
jg
call
pop
xor
cmp
jae
test
push
and
cmpsb
cmp
les
cmp
es
fstl
addr16
cltd
stc
push
idivb
pop
fcmovnbe
mov
test
inc
adc
neg
fidivrl
mov
inc
sbb
add
jb
mov
pop
sti
popf
movsb
in
or
fidivs
jp
test
aaa
movsb
inc
push
fimuls
push
outsl
push
mov
mov
mov
imul
mov
arpl
and
xchg
cmp
out
sbb
lcall
in
in
inc
bound
test
lahf
int
mov
pop
out
sahf
adc
or
int3
dec
xor
mull
insl
push
call
jmp
mov
push
mov
mov
push
ficomps
jg
inc
adc
xchg
mov
cmp
inc
addr16
jno
mov
gs
arpl
cmc
shll
sbb
or
cmc
scas
jp
popf
cmp
pop
mov
fimuls
mov
and
rol
xor
cmc
inc
out
mov
into
fwait
mov
cmpsl
adc
ss
and
dec
inc
idivl
xor
mov
cmp
lahf
ret
shl
scas
pop
mov
xchg
push
push
jno
outsb
jmp
iret
xchg
mov
orb
jecxz
jge
adc
adc
out
movsl
adc
ja
lret
nop
aas
xor
arpl
xchg
outsb
sbb
mov
gs
arpl
sub
inc
sti
iret
pop
jae
lret
sahf
mov
xor
push
cmp
cltd
mov
xor
pop
push
push
mov
aam
imul
jns
and
mov
adcl
lcall
dec
add
fnstcw
insb
int
idivl
xor
jge
cwtl
vmovups
pushf
cmpsl
xchg
push
unpckhps
fidivrs
arpl
mov
adc
jp
and
adcl
push
cmp
inc
adc
adc
push
movsb
lea
das
and
xchg
or
cmp
inc
cld
stos
subl
inc
add
adc
outsl
movsb
icebp
adcl
loope
sarb
cltd
inc
arpl
inc
dec
mov
imul
pop
outsb
leave
push
mov
int
icebp
jg
sbb
test
icebp
inc
clc
sahf
cltd
cmp
dec
mov
std
lcall
and
jl
push
and
pop
iret
aad
mov
mov
lods
and
lcall
loope
push
stos
int3
jle
dec
fisttpl
dec
inc
or
in
cmp
lret
aad
nop
scas
fnsave
xchg
push
and
mov
jnp
push
jns
inc
mov
fldcw
mov
sub
cwtl
imul
push
push
pushf
push
jne
and
orb
and
mov
inc
aad
mov
push
mov
cld
sti
adc
jbe
and
xor
mov
cwtl
jns
mov
fidivs
pop
sbb
testl
pusha
dec
out
cli
rol
sbb
fiadds
cmpsb
add
les
mov
sar
push
pop
les
mov
xchg
dec
daa
pop
push
and
daa
std
fidivs
inc
mov
push
push
cmpl
cmp
mov
push
push
push
mov
or
dec
les
and
insl
movsb
mov
ljmp
xor
movsl
inc
loop
pusha
jecxz
xor
out
xor
mov
into
faddp
leave
mov
sti
mov
add
stos
xchg
ret
push
mov
jmp
ja
mov
in
int3
mov
push
cwtl
mov
mov
and
pop
cmp
dec
inc
sti
shll
push
ret
inc
mov
pop
imul
mov
mov
ds
jle
jge
lret
shl
mov
imull
xlat
test
push
out
rcl
test
push
jmp
inc
das
sub
dec
xor
das
insb
sbb
aad
and
mov
outsl
mov
jle
lods
pushf
mov
aad
mov
lcall
rcr
ljmp
scas
jl
mov
cmp
pop
icebp
xchg
push
mov
push
mov
call
dec
add
aam
lea
pop
mov
or
pop
push
pop
sbb
das
jns
and
inc
inc
dec
pop
out
xlat
cmp
gs
jl
inc
shlb
inc
xchg
adc
dec
adcl
mov
cmpsb
jmp
mov
xor
adc
fdivrl
ss
in
loopne
lcall
dec
mov
pop
push
dec
mov
adc
xchg
jno
fiadds
pop
add
jmp
jmp
mov
sub
int
aas
cld
and
lcall
insb
inc
out
pushf
dec
mov
fisubrs
bound
adcl
mov
add
stos
add
arpl
inc
dec
pop
dec
xchg
ret
mov
push
and
inc
mov
pop
dec
add
add
std
pop
ljmp
jno
push
dec
add
loope
stos
es
add
sub
inc
xchg
jae
subb
in
pop
pushf
repz
dec
mov
roll
push
pop
loope
push
cwtl
cmpsl
add
add
loope
pop
sub
stos
sub
icebp
out
mov
cwtl
fdivs
ja
jle
jnp
cmpsl
sbb
dec
ss
inc
push
rcrb
aas
sti
cltd
fildll
outsb
pop
lods
test
sbb
dec
mov
mov
aaa
mov
inc
and
jecxz
cmp
lahf
insl
sbb
xor
inc
xchg
jnp
pmaddwd
jo
out
lds
and
js
pusha
xchg
shlb
lock
fistpll
movsl
aaa
inc
cmp
icebp
mov
movb
mov
dec
mov
call
xor
sbb
xor
mov
push
pop
dec
testb
or
rorl
lock
inc
push
pop
int
jbe
repz
push
and
sbb
push
mov
or
out
imul
mov
adc
cmpsl
cmpsl
mov
pop
and
inc
mov
fcompl
pop
pop
sahf
das
arpl
out
xchg
add
aas
repz
popl
fwait
stos
data16
xchg
and
mov
xchg
and
fcoml
xor
fildll
repz
aaa
adc
cmp
sbb
mov
xor
inc
orl
cmp
cmp
out
xchg
js
mov
imul
nop
imul
outsl
in
divps
lods
cmp
push
mov
ljmp
aad
lea
cmova
mov
sbb
fidivrs
aaa
scas
popf
fwait
adc
inc
lods
in
pop
ficompl
sub
jl
scas
inc
stos
inc
push
cmp
cmp
pop
leave
pop
mov
push
push
pop
leave
mov
lea
mov
insl
adc
daa
dec
bnd
mov
add
jnp
pop
or
inc
shlb
scas
pop
and
test
pop
xor
cli
cmp
xchg
or
sbb
test
rcr
mov
imul
out
in
in
out
xchg
jge
xchg
jp
lea
mov
sub
pop
adc
xchg
add
dec
and
out
sub
leave
dec
jg
lcall
inc
push
mov
pop
jp
ja
or
xchg
lock
cmc
icebp
sbb
fistps
outsb
sub
mov
clc
lahf
out
sbb
sub
mov
movl
out
and
shr
xor
cmp
and
out
loop
xchg
and
adcl
adc
in
jg
rcll
fisubrs
enter
pop
fistl
mov
mov
popf
clc
and
add
and
daa
das
push
mov
pop
fildl
fsts
pop
repnz
mov
fsubrl
repz
icebp
in
xchg
jb
sub
mov
lret
xchg
mov
mov
xchg
jae
jns
aam
gs
int
push
xor
mov
fsubrs
mov
adc
mov
daa
pop
sub
aaa
lret
in
mov
stos
test
lock
xchg
outsl
pop
pop
mov
arpl
fidivrs
mov
sti
cmp
pop
int3
cli
jno
sub
in
mov
mov
cmp
scas
pushf
xor
mov
in
test
mov
cmp
add
and
and
mov
adc
int3
sub
sub
pushf
popa
popa
mov
push
adc
sar
push
fsubl
dec
jns
pop
cmc
push
xlat
aam
fwait
or
ret
jb
xchg
inc
lock
xchg
xor
dec
in
test
xor
push
mov
das
mov
sti
outsl
pop
nop
shrl
cmp
nop
stos
push
jp
sahf
mov
cmp
adc
pop
xor
into
and
lds
outsb
cwtl
xchg
mov
mov
jbe
and
ja
outsb
fstpl
xor
push
movsb
repz
add
scas
mov
dec
sti
mov
in
push
mov
out
flds
adc
or
test
enter
and
pop
mov
scas
bound
and
ljmp
cmc
aas
lret
je
inc
jle
xchg
push
pop
pushf
push
xor
sub
cmp
pop
call
sbb
mov
repz
in
fadd
adc
es
arpl
cltd
loop
cmc
int
push
pop
sbb
aas
pop
mov
neg
xchg
std
andb
sbb
pop
daa
es
mov
rol
sub
jns
inc
push
iret
inc
jge
jg
aas
mov
test
orl
dec
rcrl
orb
mov
xchg
cmp
dec
push
xchg
fs
adc
addr16
fcomps
sbb
stc
lock
push
cld
sbb
mov
mov
int3
cwtl
outsl
cmp
sahf
int
mov
cmc
xchg
sbb
lahf
jmp
xor
mov
adc
imul
fisttpl
ret
data16
xor
test
xchg
xchg
fistl
xor
jnp
and
mov
fs
sbb
and
mov
jae
push
mov
xor
lods
sahf
test
test
cmp
cmpb
in
push
jne
pop
mov
mov
mov
or
and
jns
jge
inc
lea
jno
adc
jmp
lret
das
rep
scas
in
in
sub
outsb
dec
lret
add
loopne
mov
jp
sub
sbbl
jle
push
mov
cmp
adc
insb
test
sub
mov
xchg
xlat
jecxz,pn
testl
and
lcall
inc
push
add
roll
mov
add
xor
jl
test
mov
test
pop
cmp
fwait
shlb
push
test
pop
fisttpll
daa
cli
cli
push
cli
call
dec
cmp
enter
ror
xchg
fcoms
or
cmp
or
push
fistl
mov
inc
fcomps
das
push
cs
and
lahf
cmp
sbb
les
or
push
mov
push
in
pop
mov
add
mov
sbbl
aas
aad
xchg
in
jmp
arpl
js
repz
pop
fcoml
jae
fiaddl
add
hlt
pop
out
js
adc
pop
mov
out
sub
cmc
adc
sbb
jbe
xchg
lds
push
pushf
lods
aad
mov
sub
rolb
mov
dec
andb
leave
out
push
insl
test
xchg
add
add
dec
sbb
and
orl
push
sbb
jle
imul
xchg
out
fisttpl
nop
add
fs
int3
out
pop
aaa
mov
xchg
dec
sahf
adc
arpl
adc
lcall
adc
lds
xor
add
out
int3
xor
push
inc
push
xor
cld
in
stos
lret
push
leave
xor
test
scas
call
push
sti
popa
mov
fsts
test
aad
imul
in
mov
pop
sbb
and
inc
pop
ret
xlat
cmp
xchg
popa
add
pop
mov
leave
cltd
sbb
xchg
mov
test
scas
lods
jns
in
mov
cmpsb
psubb
arpl
mov
cmp
inc
xchg
enter
imull
sub
and
ret
movsl
pop
lock
mov
xor
out
cmp
in
cmp
push
lds
xchg
in
add
call
xlat
into
jns
test
in
sub
push
mov
xor
rcrb
and
dec
test
xor
mov
scas
push
ret
or
pop
rolb
lds
ret
dec
mov
dec
adc
flds
pop
fisubrl
bound
clc
add
and
xchg
sahf
mov
mov
inc
es
leave
sub
ficoms
ret
rorl
loop
adc
cmp
aaa
pop
es
or
cs
test
or
into
mov
sub
ret
mov
jge
mov
mov
nop
cmp
je
lods
lock
test
inc
lea
loop
movsb
push
jmp
out
push
dec
mov
jg
fidivrl
jge
fstps
rcl
push
mov
and
ror
cld
jo
mov
addr16
pop
lcall
outsb
movsb
sbb
pop
pusha
pop
stos
repz
cmp
sub
cwtl
aaa
shrb
and
pop
int3
loopne
aam
lret
adc
pop
sbb
outsb
adc
test
stc
aad
push
cwtl
roll
jns
inc
xchg
scas
bound
pop
xor
push
int3
sub
mov
lds
cmp
xor
and
add
es
imul
adc
and
packuswb
add
jecxz
pusha
push
and
add
sbb
jmp
pop
in
sub
or
repz
adc
cmc
xchg
adcl
stos
pop
insl
insb
shrl
fsub
xor
cltd
add
repnz
imul
jns
aad
mov
andb
pop
cmpsl
scas
sub
cld
mov
inc
inc
pop
jnp
inc
loope
mov
or
sbb
lret
cmp
movsb
in
invd
aam
inc
push
mov
lods
arpl
and
ficomps
stos
jecxz
jmp
jne
fsubrs
hlt
push
arpl
test
mov
xchg
das
repnz
sbb
sbb
and
inc
pushf
in
mov
push
cld
icebp
inc
cmp
push
or
adc
sub
outsb
mov
inc
jno
push
es
dec
mov
pop
out
jno
push
adc
ret
mov
out
mov
adc
das
push
xchg
stos
and
pop
and
mov
inc
gs
push
mov
ds
movsl
jb
into
xor
add
mov
in
or
sbb
mov
sbb
or
inc
mov
xchg
movsl
mov
and
cmovne
orb
pop
push
les
mov
xor
ficoms
adc
shlb
fadds
ret
leave
cmc
cmpb
mov
fbstp
int3
notl
push
imul
insl
test
out
mov
adc
add
jp
sub
push
sbb
cmp
mov
loopne
mov
push
mov
lock
mov
pop
mov
dec
cmpl
sbb
inc
into
test
adc
pusha
lahf
movsb
stos
fs
subb
push
enter
xchg
jle
lahf
or
inc
shl
shll
subb
push
jae
pusha
sub
in
lcall
push
incb
fwait
inc
mov
pop
test
mov
and
dec
cli
inc
xchg
mov
cmc
push
inc
jo
push
ret
xchg
and
out
aad
loop
xchg
dec
cmp
iret
popf
mov
jp
stos
sub
push
sub
test
js
mov
sub
mov
pushf
loope
stos
das
in
ss
lahf
sbb
pop
jmp
std
repnz
int
sbb
inc
fisttpl
xor
cmpsl
int3
pop
jle
pushf
notb
rcrb
fiaddl
stos
jbe
int
rorl
add
xchg
push
sub
outsb
hlt
jns
cli
rcrl
mov
rcrb
push
inc
or
rclb
movsb
sub
clc
movsl
sbb
mov
push
jle
sbb
jmp
movsb
jo
inc
idivl
jl
xchg
xor
icebp
dec
mov
es
push
shrl
push
aam
dec
enter
aas
jnp
ss
fisubl
pop
out
push
frstor
jle
xor
inc
push
jl
xchg
push
cmpsb
xchg
stos
out
and
insb
mov
test
pop
std
loop
aaa
push
adc
iret
fmuls
ja
xchg
pop
fwait
cmp
jne
mov
sti
pop
sbb
mov
or
adc
dec
loop
dec
jno
adc
push
push
lahf
andb
push
ljmp
adc
popa
data16
sti
imul
std
push
test
adc
inc
jge
int3
pop
sub
add
lcall
inc
out
jg
mov
gs
outsb
pop
jnp
les
xor
dec
xor
in
nop
pushf
adc
ss
incb
push
mov
xchg
mov
push
mov
mov
and
popf
inc
subl
inc
faddl
mov
or
mov
push
xchg
shrl
aaa
test
and
int3
lret
sub
and
inc
push
repz
lods
mov
dec
ss
push
and
and
and
jb
mov
cmc
rcrl
into
in
mov
stos
add
mov
mov
shl
push
shrb
inc
push
pop
push
mov
popa
xor
fisubrl
cmp
js
stos
mov
arpl
pop
or
xor
lods
adc
xchg
inc
dec
repz
rcr
cli
fsts
in
shr
adc
jp
popa
clc
mov
scas
es
mov
xchg
sarl
fmul
and
test
rcll
dec
lods
cs
cmpsl
jp
sar
and
and
sbb
mov
jo
inc
inc
repnz
xor
add
and
stos
jl
push
add
xchg
fucomip
aam
sbb
fstl
jecxz
mov
push
or
inc
xor
aas
call
mov
hlt
and
fs
fiadds
fistps
sub
arpl
adc
push
insb
adc
add
xchg
lods
rcrb
mov
outsb
ja
xchg
mov
mov
sub
outsb
sub
cmp
xlat
rcrb
test
aad
fsubrs
add
je
dec
cwtl
sub
sub
inc
jae
mov
xor
mov
push
clc
mov
and
mov
int
mov
mov
or
testb
mov
push
icebp
xor
aas
mov
sbb
mov
ror
iret
sahf
lds
pop
repnz
add
pop
lea
fcoml
jl
push
jno
test
inc
js
repnz
fisubs
lret
rcrl
sbb
xor
mov
cmpsb
std
sub
jo
into
adc
cmp
mov
cwtl
mov
push
push
lret
jo
pushf
lock
jmp
adc
data16
push
lods
inc
mov
aaa
in
and
sbb
aad
jb
sbb
mov
int3
pop
fidivrs
sub
fidivrl
fsubrs
mov
scas
out
shr
sbb
aaa
fists
xor
je
into
imul
cmpsl
pop
sbb
or
mov
xchg
test
sbb
xchg
push
stc
pushf
dec
stos
cmpl
adc
fucomi
jbe
cmp
test
scas
dec
xchg
filds
or
iret
mov
push
dec
out
push
insb
pushf
outsb
adc
sarb
pcmpgtb
and
loope
aad
inc
cmpsb
js
lea
stos
int
cmpsb
sub
push
iret
push
add
pop
cmpsl
stc
mov
jmp
mov
fcoms
ds
sbb
fistps
mov
pop
packuswb
fs
icebp
shlb
outsb
shll
pop
sbb
sarl
lods
out
add
stos
pop
or
cmp
fstpl
push
and
push
aam
inc
mov
mov
adc
int3
and
pop
sub
and
jne
in
pop
hlt
add
or
xor
out
cmp
and
jbe,pt
and
push
cs
cmpb
cwtl
fidivrl
cwtl
inc
pop
in
movsb
push
cmp
or
sbb
loop
push
sbb
fnstenv
daa
pop
out
jg
fisubrl
inc
jno
arpl
popa
sbb
push
les
mov
sbb
pusha
sbb
imul
xor
sahf
dec
jecxz
loopne
dec
frstpm(287
stos
outsl
xor
dec
push
icebp
into
inc
out
bound
dec
fs
adc
add
shlb
dec
push
fstl
cwtl
test
dec
mov
lret
xchg
adc
scas
fdivp
int3
xchg
orps
inc
out
push
or
call
inc
jae
inc
add
lcall
ss
xchg
cwtl
nop
imul
pusha
xchg
imul
mov
out
cwtl
mov
ror
adc
les
jl
rorl
sti
inc
xor
inc
inc
inc
xchg
push
jbe
aam
mov
addr16
jle
test
arpl
mov
andb
xchg
test
push
repnz
addl
push
cmp
adc
arpl
sub
pop
and
xchg
imul
cmp
and
in
sub
jb
inc
pop
add
repnz
packssdw
js
fs
sub
arpl
test
popf
dec
xor
ds
cmc
insb
or
mov
xchg
das
ficoms
pop
xchg
call
outsl
outsl
push
cmp
mov
sti
xchg
mov
mov
mov
jns
mov
hlt
icebp
loope
scas
out
jp
imul
push
adc
pop
pop
mov
sub
lret
sbb
adc
dec
jecxz
push
fsts
pop
stos
push
in
push
lahf
mov
dec
sub
pop
xor
push
pop
iret
lahf
lret
mov
xor
push
leavew
cmp
loop
je
iret
pop
mov
nop
pop
fcomps
pop
xchg
orb
insl
pop
mov
add
movsb
cwtl
sarb
std
push
aaa
cmp
out
pop
or
outsl
scas
sbb
fstpt
inc
divb
add
add
lret
jae
and
lods
aas
aam
fimuls
mov
sbb
jne
das
adc
or
fistpll
and
out
nop
cltd
or
sub
xchg
lds
mov
push
cmpl
xchg
lret
stos
jno
adc
lcall
ret
dec
sub
mov
jg
stos
popf
sub
mov
out
mov
fistl
std
xchg
and
data16
outsl
sti
sub
bound
orl
out
pop
fists
push
sbb
jbe
or
dec
xor
mov
in
inc
pop
dec
xchg
aas
lods
xchg
push
ss
cmp
cs
pop
repz
sbb
push
push
cmp
or
addr16
push
inc
sub
pop
pop
and
hlt
dec
cmp
cmp
mov
lods
dec
xor
ds
mov
loop
push
jae
push
leave
xchg
adc
outsb
into
push
dec
roll
pop
dec
cltd
test
lods
and
inc
test
sbb
jg
loop
clc
or
gs
sbb
scas
sbb
sub
sti
push
pop
inc
xor
xor
stos
xchg
cli
push
lock
jge
pushf
push
repz
jbe,pt
push
adc
fs
popf
mov
add
or
mov
sub
js
out
mov
mov
and
pop
jg
cmp
pop
xchg
dec
mov
add
inc
lret
inc
sbb
in
inc
leave
inc
cmp
out
or
mov
inc
or
adc
repnz
add
pandn
decb
adc
xchg
sbbl
push
mov
sbb
mov
cltd
sub
or
push
mov
xor
fwait
mov
add
leave
in
sbb
das
pop
push
xchg
push
sub
push
mov
xchg
aas
icebp
paddw
bound
mov
pusha
jecxz
jb
dec
push
jmp
and
es
movsb
out
stos
popa
mov
pop
push
adc
dec
sub
sbb
inc
push
mov
mov
cmp
jg
loopne
inc
cli
orl
dec
insl
sub
cmp
fildll
adcl
xorb
cmpsl
out
and
mov
mov
xor
push
lahf
push
aad
test
stc
adc
notl
outsb
loop
lcall
ja
or
aam
pop
call
mov
lcall
jne
iret
movsb
xlat
or
jne
mov
xor
push
push
xor
xchg
xchg
idivb
lcall
xchg
jns
mov
xchg
push
jmp
adc
mov
in
add
push
push
in
xor
mov
lods
lods
add
lods
test
cltd
pushw
shlb
xchg
mov
insl
mov
mov
fucomip
imul
stos
test
mov
pop
cmc
nop
xchg
and
sub
popa
loopne
jg
adc
sub
sbb
lcall
jl
jne
cltd
test
in
dec
push
inc
pop
rcrl
jmp
mov
aas
ljmp
shlb
pushf
cmpsl
or
call
mov
mov
leave
cmp
or
sbb
mov
loope
test
add
sbb
cmp
sub
ds
addb
mov
mov
mov
push
lods
push
xor
out
sarl
dec
xchg
bound
jg
popa
loope
jnp
push
mov
das
movsl
xchg
mov
jbe
or
jp
lods
ret
cld
aam
stos
xor
mov
sti
mov
jno
psubusb
pop
call
cmp
mov
adc
adc
dec
icebp
popf
es
push
sahf
cmp
xchg
mov
pop
in
xchg
push
ljmp
adc
mov
mov
lret
fcmovnbe
jmp
insb
and
aam
jecxz
ljmp
mov
int3
jbe
lods
iret
mov
and
daa
dec
pop
mov
xchg
cwtl
iret
scas
push
pop
sti
cld
and
js
sahf
popa
movsl
fistpl
int
lea
scas
movsl
rcrb
jg
mov
stos
sub
jecxz
mov
xor
loop
pop
mulb
dec
mov
or
push
mov
cli
into
jne
lods
js
mov
add
test
dec
sub
jne
dec
lcall
xor
and
out
mov
call
iret
repnz
out
loope
outsb
fisubrs
pop
aas
and
fwait
out
xor
sahf
ds
test
call
fnsave
jne
fisubrl
mov
xlat
cmp
fsts
or
sbb
addr16
loopne
mov
ds
aas
jbe
data16
pop
movsl
aaa
jg
mov
inc
in
movzwl
or
mov
add
mov
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
xor
mov
xor
jmp
add
cld
sbb
nop
andb
push
sub
addl
fadds
scas
fidivrs
imul
out
mov
out
add
jbe
pop
cmp
mov
xlat
rorl
pop
sbb
dec
xchg
sti
imulb
test
jge
pop
lahf
mov
dec
lcall
pop
sbb
mov
dec
add
fcoml
mov
push
ss
xchg
inc
xor
or
ss
das
fwait
jne
push
popf
adc
lahf
mov
sub
and
inc
stos
nop
sbb
mov
sub
mov
loopne
xchg
mov
mov
cli
xor
sub
mov
pop
lock
push
testb
xlat
jge
or
aaa
jmp
aam
out
mov
inc
xor
add
int
enter
xor
lret
mov
es
mov
xchg
xor
pushl
cmp
cmp
sub
pop
cltd
mov
movsb
stos
in
arpl
jecxz
mov
push
roll
je
lcall
outsb
mov
js
or
out
insb
dec
adc
stc
sbb
outsl
or
aas
sbbb
cld
cwtl
push
popf
dec
cmp
cmp
cld
mov
sub
mov
or
adc
add
xor
xchg
sub
push
lahf
cld
inc
es
in
loop
mov
lea
leave
or
iret
insl
shll
cmc
call
mov
xchg
std
mov
mov
mov
mov
add
dec
popf
fcomps
mov
loope
mov
inc
int3
flds
push
xor
xchg
imul
je
cmp
pop
scas
mov
in
mov
gs
or
andb
lods
shlb
ljmp
fisubl
inc
and
push
mov
mov
xchg
jns
push
mov
popa
sbb
cwtl
xor
jne
outsb
xchg
push
inc
sbb
pop
das
cltd
pop
cli
cwtl
andl
push
icebp
stc
into
out
icebp
mov
test
xor
add
mov
add
mov
xchg
sub
sbbb
outsl
sub
jle
push
dec
getsec
sarb
adc
loope
jns
ror
imul
xchg
mov
pop
daa
inc
xor
test
sahf
daa
cld
scas
and
adc
sub
fst
xchg
ja
or
jp
xor
push
jno
repz
imul
xchg
shrl
pop
push
insl
jl
int
or
sbb
sbb
mov
imul
ljmp
xor
sbb
or
push
stos
rorl
and
pop
mov
and
shll
jbe
adc
xor
sbb
xchg
icebp
iret
iret
clc
xchg
stc
lret
dec
adc
sbb
or
and
shl
add
add
mov
xlat
js
loopne,pt
and
insl
cmp
icebp
xlat
mov
lods
and
lea
adc
daa
xlat
popa
aaa
iret
push
fadds
dec
pop
cmpsb
mov
push
cmp
add
jl
and
or
insb
mov
push
pushf
sahf
scas
insb
aas
das
gs
pushf
adc
mov
mov
push
lods
out
push
adcb
ffreep
mov
pop
jbe
add
nop
aad
xchg
lods
int3
ljmp
push
add
loopne
inc
inc
and
pop
mov
inc
cmp
fucomi
lahf
outsl
fs
jmp
cmpl
repz
inc
inc
test
imul
addl
stos
pmullw
inc
push
mov
arpl
cmc
xchg
ret
insb
jp
je
jo
sbb
addb
jle
nop
sub
sti
rcll
or
and
arpl
cmp
or
push
push
testl
icebp
icebp
xchg
dec
push
test
mov
in
push
jb
and
push
out
stc
cs
rolb
cltd
mov
or
aas
loop
jmp
inc
xchg
add
repnz
in
imul
add
das
xchg
add
jle
or
pop
and
popa
xchg
sub
mov
ljmp
sbb
sti
leave
push
mov
sub
test
xor
fxch
into
pop
das
nop
cld
jno
out
imul
adc
or
and
repnz
fistps
loope
je
out
jb
add
dec
inc
pop
inc
outsl
cmc
cmp
test
mov
outsb
jge
fldl
or
stos
inc
pop
mov
mov
jge
inc
mov
or
iret
testb
dec
fld
xchg
gs
mov
cltd
enter
das
sub
pop
ljmp
dec
ja
nop
push
pop
inc
popf
cmp
jmp
or
jno
jns
loope
xchg
mov
mov
and
outsb
xchg
mov
movsl
cmp
stos
fnsave
rcr
mov
jg
and
push
push
lods
out
mov
nop
and
jle
mov
sub
add
jb
xchg
or
sbb
jns
mov
insb
or
add
outsl
adc
dec
popf
ja
fdiv
mov
pusha
sahf
rcl
and
push
push
xchg
dec
call
add
fucomip
cmpsb
xchg
ds
dec
lret
pop
mov
shr
push
push
in
es
cwtl
lret
imul
ds
push
sbb
fdivrs
mov
sub
stc
scas
das
jo
imul
sub
or
out
add
adc
dec
adc
fistps
inc
movb
inc
and
lahf
xchg
leave
shll
inc
xchg
mov
dec
adc
sbb
or
cmp
jo
inc
mov
push
cmc
mov
imul
cld
sbb
int3
cmp
das
cmc
in
mov
mov
pop
std
cmpsl
lods
lret
iret
jl
stos
cmc
stos
aaa
arpl
mov
ds
cmp
mov
adcb
in
push
movsb
mov
adcl
jle
adc
mov
test
cmc
in
mov
push
push
pushw
push
cmp
out
sti
add
fadd
push
xor
mov
stc
dec
cmp
cmp
aaa
cmp
in
mov
mov
enter
outsb
push
push
out
imull
repnz
addr16
test
adc
lea
mov
outsb
sbb
inc
orl
cmp
sub
push
jae
sbb
jnp
jbe
leave
shrl
push
cld
mov
ret
icebp
aad
popa
mov
mov
pop
rcll
orl
bound
es
push
push
inc
cmp
pusha
aas
cltd
mov
dec
and
shrl
fidivl
pop
fwait
xor
jne
jl
mov
icebp
jp
popa
stc
lods
mov
cwtl
pop
lds
lret
popa
add
fcmovnbe
neg
cmpsl
out
cmp
mov
ret
faddl
push
jg
nop
cmc
pop
stos
add
xor
adc
xlat
xor
cs
sti
cmc
jg
dec
dec
addl
enter
adc
jns
mov
or
dec
aad
and
aas
fucompp
loope
fsts
sbb
aaa
sub
push
shrl
jmp
sar
adc
clc
push
cmp
lds
cmp
test
jmp
pop
xchg
movsb
mov
fdivrs
mov
inc
popf
xchg
repz
xor
pop
in
test
jg
mov
addr16
pop
pusha
and
pop
hlt
clc
ficoml
sahf
sub
mov
outsb
mov
aaa
mov
pop
pop
inc
pop
push
insb
sbb
pop
rol
jge,pn
cmpsl
ret
nop
insl
punpckldq
push
jp
mov
iret
popf
mov
int
jae
cmp
icebp
lret
addr16
or
jns
pushf
add
adcb
xchg
clc
add
jecxz
icebp
out
inc
insl
mov
int3
lcall
es
outsb
rep
cmp
mov
in
jl
lcall
xor
ja
mov
jb
scas
adc
cwtl
bound
mov
insl
inc
jae
cmp
ljmp
js
mov
scas
push
sahf
jno
pop
testl
or
mov
push
jle
push
in
sti
jp
loopne
pop
adc
mov
in
xchg
lods
sbb
repnz
xchg
in
or
cmpsl
sahf
iret
mov
jle
icebp
adc
lret
xor
jae
aas
pop
pop
inc
add
pushf
xchg
sub
scas
lds
js
ljmp
test
cli
jge
imul
push
loop
call
mov
mov
in
int
sarb
bound
sbb
mov
fcomi
aas
xchg
jle
inc
add
xchg
sbb
mov
inc
jo
xchg
sub
scas
xor
rcll
adc
or
mov
mull
out
loopne
xor
daa
mov
dec
adc
lods
addr16
mov
mov
lock
push
xlat
sub
sbb
cmc
xor
push
lea
or
cs
xor
fwait
push
adc
scas
jmp
jle
push
ficoml
and
pop
test
mov
or
xor
sub
nop
cmpsl
bound
push
data16
aad
lret
sti
mov
movsl
jmp
scas
xor
lods
add
or
adc
cltd
mov
xor
or
inc
dec
mov
cli
xchg
jne
cmp
subb
sbb
jo
insl
or
mov
es
scas
in
insl
std
sti
mov
sub
shrb
pop
jns
lcall
nop
adc
adcb
adc
sbb
xchg
push
or
fstp
jne
sub
push
jge,pn
gs
popa
jb
js
lret
repz
sti
imul
popf
in
inc
inc
into
jmp
or
pop
push
mov
out
cmc
ljmp
push
out
imul
and
mov
mov
mov
dec
push
mov
adc
sbb
mov
ja
push
cmc
shrb
mov
andb
mov
imul
mov
xor
rclb
std
mov
iret
mov
cmc
sub
enter
loope
inc
add
dec
sbbb
jmp
xchg
cli
mov
inc
mov
sbb
fldcw
and
pop
mov
mov
lret
xchg
jecxz
push
xor
rcrl
hlt
dec
dec
xor
fs
xlat
test
jge
cli
push
fsubr
mulb
outsl
inc
mov
aas
push
fwait
jp
dec
adc
cmp
and
sbb
popa
push
pop
push
ljmp
repz
cli
pop
nop
jae
push
pop
jns
repnz
imulb
inc
pop
or
or
inc
sbb
scas
test
les
leave
pop
push
fnstsw
xchg
mov
outsl
pop
in
and
fs
leave
xchg
imul
mov
ja
jge
aaa
ficoml
cmp
cmp
fwait
mov
sbb
mov
mov
test
popa
jae
push
scas
adc
lret
leave
in
jle
inc
cmp
in
out
inc
push
push
cmp
push
leave
loopne
adc
fidivs
mov
pushf
fsubs
movl
mov
fisttpl
popa
jne
stc
imul
inc
ljmp
dec
push
leave
push
mov
dec
push
ret
jns
xchg
mov
cmp
or
out
in
xor
cmpsb
lods
cmp
mov
push
xchg
push
in
dec
je
xchg
jmp
xchg
push
sub
adc
or
pop
orl
and
stos
xor
jge
shrb
insl
addr16
and
aas
arpl
xchg
adcb
lds
pop
cmc
and
or
mov
sbb
pushf
test
jns
lret
movsb
fmuls
dec
gs
push
mov
aaa
rcr
test
rcrb
push
sbb
xor
fidivs
mov
pop
insb
arpl
cmpsl
pop
aaa
xchg
scas
out
lods
mov
js
cs
rol
jb
lods
cmpsb
push
fistl
out
cmp
lret
enter
jmp
pusha
jne
aam
pop
or
inc
xchg
pushf
loope
cmpsb
movl
cli
ror
rol
xchg
jl
mov
sbb
aad
sub
dec
cld
mov
push
out
and
testb
mov
or
sub
sub
stos
lods
xor
mov
push
bound
lahf
sbb
decb
das
jmp
filds
push
cmpsl
sub
cmp
xchg
mov
movsb
or
push
stos
mov
testl
push
mov
shrb
stc
mov
stos
idiv
sub
lcall
mov
or
sti
xor
in
jnp
or
or
lcall
pop
mov
lcall
inc
sbb
pushf
add
ret
mov
jl
xor
xor
ljmp
dec
xor
mov
xchg
dec
inc
arpl
movsb
xlat
aas
jnp
dec
ljmp
nop
int3
stos
jl
insl
pushf
and
lds
pusha
or
and
stos
inc
cli
sub
sub
sahf
pop
and
mov
cmp
imul
jp
pop
jl
adc
lds
jbe
xor
add
fwait
push
jecxz
jge
fisttpl
out
loope
ljmp
sbb
imul
xchg
lcall
hlt
inc
mov
jno
mov
jmp
jmp
lock
jle
xchg
mov
cli
sbb
xchg
aam
ja
in
mov
push
sub
ljmp
ds
not
shlb
int3
fidivl
ret
cmp
jp
cmpsb
ds
xchg
cs
pop
lock
ja
jb
pop
cltd
fwait
pop
add
inc
pop
add
add
xlat
dec
xor
scas
sub
pop
push
add
dec
test
out
jnp
sub
daa
add
insb
mov
pop
sbb
lods
lock
or
cmp
mov
addr16
mov
inc
xchg
push
xorl
or
insl
subl
rolb
add
cmp
cld
pop
int
xchg
pop
xchg
push
mov
jo
pop
and
inc
shll
lea
sbb
mov
in
stc
sub
fs
outsb
cmpsb
cli
inc
mov
push
and
jb
mov
mov
mov
aad
cmp
ds
fbld
imul
shl
sub
lret
das
push
sbb
jl
test
or
sbb
fdivl
lock
mov
cltd
rorl
nop
lret
mov
adc
int3
clc
scas
negl
std
call
jg
shrl
mov
mov
mov
xchg
xchg
adc
inc
repz
shrl
mov
add
call
fdivrl
or
xchg
add
addl
int
jnp
jnp
jbe
andl
cwtl
inc
test
sbb
pop
fst
testb
jge
inc
idivb
flds
mov
inc
xchg
jnp
mov
sub
push
push
bound
insl
pop
and
es
movsb
inc
xor
wbinvd
inc
aaa
dec
jle
lock
fists
in
notl
dec
sub
push
and
lahf
insb
dec
xchg
dec
fwait
imul
and
cmpxchg
lahf
inc
daa
push
fstpl
in
add
pop
loope
aas
mov
lea
mov
adc
icebp
xchg
pop
pop
add
mov
shlb
sub
ficoml
std
out
sub
mov
xor
rolb
jnp
ss
fbstp
movsl
xchg
sub
aad
insb
add
xchg
jp
bound
and
add
jo
ss
push
sbb
int3
int3
dec
es
adc
mov
bound
mov
adc
or
xor
inc
xlat
fisubrs
cmp
sub
aaa
pusha
loop
lret
mov
xchg
pop
sti
repz
pop
and
repz
mov
imul
es
imull
mov
mov
jge
rcr
addb
mov
stos
outsb
out
aaa
pop
sub
jns
imull
mov
push
push
dec
mov
sub
add
mov
jo
decl
push
jbe
mov
push
push
adc
scas
rcrl
jo
adc
inc
popa
push
js
insb
lods
fs
jge
mov
or
mov
cmp
sbb
pop
mov
popf
pop
dec
add
push
leave
xchg
xchg
cld
mov
pop
sbb
mov
jae
in
out
imul
int3
cltd
adcl
mov
sub
cli
enter
je
xor
xchg
inc
clc
xchg
imul
xchg
add
dec
push
imul
into
add
cmpsl
push
adc
cli
mov
int
es
sbb
repnz
out
insb
in
sub
xor
idivl
cwtl
fcmovnb
sbbl
or
dec
lea
sub
sub
int
ljmp
pop
adc
cmp
adc
mov
mov
aad
xchg
movsl
stc
jo
xor
jmp
in
ss
in
cmp
and
es
cltd
pop
stos
mov
push
fiaddl
add
pusha
iret
movsl
mov
leave
std
sub
in
inc
aad
jnp
push
js
xor
cs
int3
pop
dec
in
out
cmp
mov
dec
sbb
and
push
cmpl
aam
mov
cwtl
ljmp
push
jp
adc
loop
cwtl
or
mov
lahf
push
pop
aaa
loope
ds
enter
and
fildl
lcall
jecxz
xor
insb
inc
es
or
cmp
mov
nop
or
dec
dec
fwait
dec
out
jb
aad
sti
insb
lock
call
push
es
test
push
test
xor
sbb
arpl
inc
xorb
inc
xor
stos
sbbl
cmp
and
js
sub
or
cltd
into
xor
jo
mov
dec
repnz
push
mov
pop
xor
fnstsw
call
out
dec
test
pop
popa
mov
xchg
sti
or
pop
xchg
aad
add
ja
popf
gs
arpl
inc
les
fisttpll
xchg
mov
or
xchg
pop
sahf
aaa
dec
sahf
flds
push
xchg
cld
pop
xor
xor
add
clc
cs
jnp
sbb
ss
jge
daa
inc
jns
fstpl
push
add
xchg
hlt
jnp
mov
lods
mov
pop
jp
les
in
push
xchg
cltd
into
movsb
faddl
call
rorb
imul
movsl
mov
pop
ficomps
fwait
shr
mov
mov
cmp
inc
cmp
movsl
pop
pushf
mov
lods
adc
jmp
loop
dec
mov
xchg
in
inc
popa
add
xorb
inc
cli
fstps
lea
xchg
out
xor
fcomi
test
clc
mov
adc
loop
pop
xor
punpckhwd
icebp
pop
mov
xchg
push
sub
xor
stos
push
cmc
cmpsb
sbb
xorps
sub
pop
add
repz
daa
hlt
rcll
jbe
es
cmp
inc
push
ljmp
in
inc
xlat
iret
sti
lret
pop
or
sarb
aas
sub
je
push
cmp
sbbl
xor
sub
stos
test
test
cwtl
jno
icebp
xchg
sarb
insl
add
stos
shl
xchg
add
mov
aam
inc
lock
xchg
cmp
cmpsl
adc
mov
sub
sbb
sbb
jno
dec
mov
pop
das
test
sub
mov
sub
mov
inc
sub
fistpl
pushf
push
outsl
es
out
ret
lea
call
dec
sub
je
dec
mov
inc
jno
stos
aaa
jmp
and
xor
or
xor
shlb
or
adc
pop
stc
test
nop
outsl
pop
loope
mov
clc
cmpb
mov
cmp
fwait
das
sarb
and
or
test
mov
cmc
or
cs
inc
xchg
inc
sbbb
mov
bnd
cmpsl
test
test
mov
jecxz
inc
int
add
lahf
shll
and
push
or
movsb
iret
loopne
sbb
xor
rcl
mov
xchg
lcall
orb
movsl
xchg
cs
or
out
mov
outsb
test
nop
lahf
inc
andb
push
pop
or
inc
cmp
ret
add
sub
sub
ret
fwait
add
cltd
and
xor
add
movsl
push
push
cmpsb
mov
lret
dec
or
xchg
push
les
std
out
add
and
sbb
loop
ret
cld
inc
inc
movsb
and
cmp
xor
xor
jle
movsl
lea
jg
jge
je
out
sbb
jmp
sbb
repnz
gs
jno
movb
idivl
jge
mov
push
icebp
jle
xor
cmp
and
lret
cmp
lds
sub
je
and
les
dec
fwait
xchg
lods
jp
arpl
cmp
sarb
aas
fnstsw
pop
lcall
iret
cmp
test
mov
mov
out
dec
add
lock
jle
mov
jle
push
das
bound
mov
sub
cmp
cmp
repz
mull
mov
lock
mov
leave
hlt
add
test
icebp
push
mov
outsl
fstpl
sub
dec
std
outsl
add
cmp
mov
jl
xor
and
repz
test
adc
jge
shll
sbb
mov
mov
dec
dec
faddl
aad
addl
movsb
shrl
dec
mov
out
pop
add
test
sub
movsl
add
xchg
lea
lds
sub
xchg
movsb
and
xchg
xchg
push
jl
aam
lret
dec
xchg
popa
addr16
mov
push
sbb
pop
gs
xchg
insl
jp
in
loop
cmp
stc
adc
jg,pn
clc
pcmpgtw
lahf
testl
dec
fdivl
popf
and
cmp
pop
int
cs
inc
inc
pop
cli
jo
rcrl
roll
rcll
xchg
das
sub
and
or
fnsave
cwtl
sub
dec
add
bound
mov
outsb
cmp
push
bound
out
cmp
aad
enter
and
or
pop
test
adc
pop
push
out
jns
in
push
cltd
ds
and
int
test
sbb
cmp
cmp
pop
mov
pop
out
jle
sti
test
mov
loope
lret
push
call
cld
jge
ja
ss
rcl
insl
inc
scas
in
outsl
cmpsb
test
sti
mov
add
test
daa
addb
adc
bound
dec
in
dec
adc
shrl
test
in
pusha
arpl
lahf
mov
add
dec
push
stos
fstpl
cmp
mov
loopne
cmpsl
dec
pop
iret
nop
push
clc
pop
hlt
sub
xchg
clc
pushl
jp
cltd
adc
and
jecxz
mov
adcl
jo
mov
cmp
xchg
arpl
or
mov
fcomp
mov
ret
bound
cmpsl
call
ss
pushf
dec
pop
test
ss
inc
imul
and
ja
cmp
stc
outsb
stc
push
dec
push
and
call
mov
ficoml
fistpl
jecxz
mov
jl
dec
std
cmp
rcr
dec
mov
dec
jl
je
xor
jmp
lock
in
outsb
mov
lea
push
cmp
pslld
leave
sahf
add
sahf
rcrl
mov
or
mov
sub
test
lock
adc
mov
jno
xor
mov
neg
pusha
mov
arpl
bound
ja
outsl
je
and
mov
inc
jne
in
stos
fcoml
gs
lea
push
out
iret
pop
popf
sub
inc
jecxz
inc
mov
adc
in
mov
hlt
sahf
jmp
and
mov
inc
jno
or
addr16
pop
in
loopne
dec
jns
mov
sub
imul
lods
and
mov
test
adc
inc
loop
imul
aaa
cmp
inc
daa
and
pop
imul
nop
popf
mov
das
pop
jle
fdivl
dec
or
xor
mov
insb
xlat
fsts
data16
das
nop
enter
lock
cmp
jp
pop
inc
cmpsl
test
out
xor
mov
mov
fldl
xchg
mov
in
cli
out
xchg
mov
lahf
loop
ljmp
sbb
or
cmp
int
push
ljmp
in
or
cmp
and
das
inc
sub
pop
gs
push
xchg
sbb
xor
push
pop
inc
lods
add
mov
mov
xchg
test
ret
jbe
sbbl
daa
xchg
and
adc
mov
or
sub
fisubrs
xchg
mov
lods
mov
dec
sub
jns
fsub
jge
mov
pop
daa
mov
adc
mov
push
mov
sub
xchg
in
das
sti
outsl
movsb
sbb
mov
repnz
xor
xor
or
jp
push
push
out
hlt
lcall
out
add
cmp
pop
fbstp
dec
enter
imul
add
std
adc
mov
call
sbb
cmpsl
and
cmpb
mov
adc
shlb
js
fwait
pop
jns
lock
popf
sub
xor
cld
into
clc
push
pop
xchg
pop
inc
cmp
js
shld
mov
pop
cwtl
lret
scas
push
xlat
scas
pop
es
dec
jbe
paddusb
mov
aaa
loope
aaa
test
call
pop
lcall
push
loope
mov
mov
pop
call
mov
icebp
add
xchg
insl
mov
xlat
sbb
test
loop
jg
gs
lds
fistps
sub
pop
mov
scas
xor
int
adc
xor
sti
mov
add
push
inc
add
sub
jp
sahf
sub
aaa
fstpl
inc
rorl
sub
shrb
jo
dec
leave
push
outsb
fsubl
pop
lea
cmp
fsts
push
cltd
loopne
mov
adc
or
iret
inc
out
xorb
dec
imul
sub
and
and
fnstsw
loopnew
pop
sbb
xor
mov
push
adc
xor
or
cld
imul
inc
jmp
xor
cmpsl
sub
add
enter
cld
xchg
sub
pop
xchg
mov
shll
xor
scas
sbbb
out
out
mov
jl
dec
push
mov
in
jl
pop
scas
pop
push
fdivs
adc
ss
pop
sbb
push
popa
add
xchg
imul
inc
popl
rcl
mov
lods
aaa
push
insb
rol
aas
lahf
stc
loop
xor
rcll
mov
push
pop
addr16
add
mov
popf
loopne
pop
shrb
and
inc
pushf
xor
dec
mov
xor
pop
and
adc
sbb
in
cmpsb
aam
mov
imull
sub
or
stc
inc
mov
mov
lds
lods
jmp
sahf
jmp
push
sbb
out
lret
cwtl
mov
mov
jb
jp
outsl
ret
outsl
mov
subb
loop
inc
in
shl
ja
fwait
mov
movsl
xchg
dec
xchg
jb
xchg
push
call
mov
test
jp
and
mov
out
cmp
stos
movsl
add
fsubr
mov
add
lds
lods
cmp
jl
int3
mov
xor
mov
mov
hlt
popf
jne
xchg
enter
mov
out
inc
lret
inc
inc
gs
les
jl
outsl
jl
inc
push
xor
mov
push
out
arpl
push
stos
in
dec
icebp
cld
dec
cld
push
jnp
fwait
mov
fnstenv
cs
jae
out
mov
mov
dec
jne
or
imul
sbb
jno
lret
testl
fstpt
ss
in
lret
adc
inc
cmp
jo
mov
pop
data16
test
notl
xlat
jecxz
rclb
iret
sub
cmp
in
cmp
outsb
pop
out
cmpb
in
mov
jb
enter
in
cltd
pop
enter
enter
xchg
rclb
je
jle
test
jecxz
hlt
iret
mov
adc
xchg
xor
mov
dec
arpl
mov
iret
imul
inc
pusha
inc
sarl
pushf
xchg
inc
xchg
or
aam
popa
js
pop
test
scas
out
inc
mov
push
ficomps
xchg
inc
cmp
cmp
fsubs
in
mov
mov
add
sub
lret
fsubr
xor
not
shl
or
rcr
fcomp
jnp
mov
jae
lods
or
adc
or
and
push
ljmp
rcrl
pop
sbb
leave
mov
call
pushf
jle
fisubl
mov
add
cmp
mov
fdivr
lods
xor
or
fwait
jne
test
jle
pushf
xchg
int3
xor
fwait
test
sub
xchg
push
hlt
pop
ret
lcall
pop
pop
or
push
nop
je
insb
sbb
inc
ret
or
xchg
mov
xchg
ds
ret
out
aad
pop
pop
pop
inc
sahf
push
stos
inc
repnz
lods
out
popa
inc
mov
fimuls
rorl
adc
mov
in
test
jmp
lock
mov
pop
pop
repz
sbb
pushf
add
add
add
dec
dec
xor
repnz
sub
inc
adc
push
inc
imul
mov
stos
add
rcrb
xor
out
hlt
fdivs
fs
pop
pop
jno
ret
mov
push
sub
cltd
cmp
add
push
leave
jb
cld
pop
and
jmp
repz
and
xchg
inc
jb
sub
inc
outsb
add
xchg
inc
and
jno
mov
lret
fldt
sub
mov
push
popa
imulb
shl
mov
lock
adc
inc
ret
fmuls
ficoml
push
jl
cli
stc
mov
fsubs
inc
inc
enter
movsl
jo
pop
mov
pop
imul
dec
cld
in
in
icebp
push
xlat
sbb
xchg
xor
jge
rcrl
ds
stos
push
adc
adc
jge
sub
xchg
mov
js
cmp
mov
out
shll
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
jmp
add
mov
hlt
aas
push
sub
addl
divl
dec
in
in
ss
mov
push
xor
mulb
push
loopne
pop
stc
int
shll
sbb
out
xor
mov
cmp
insl
mov
sahf
dec
stc
xchg
inc
push
movsl
test
mov
or
out
adc
lods
xchg
in
push
aad
cli
mov
add
cmp
insl
mov
mov
sahf
sub
xor
aaa
sbb
in
or
or
hlt
mov
mov
xor
cmp
sbb
test
dec
fwait
sahf
cltd
mov
outsl
xchg
push
lret
not
test
orb
sub
test
dec
mov
adc
in
aaa
scas
punpckhwd
daa
and
loopne
frstpm(287
lahf
mov
js
adc
sub
cmpl
or
cwtl
in
push
cli
xlat
pushf
pop
stos
jmp
sub
mov
xlat
xor
fsubrl
xor
push
mov
sbb
jb
add
jmp
orl
and
cmp
imul
push
inc
dec
test
sbb
in
dec
shrb
adc
dec
jecxz
dec
pusha
sbb
rcll
icebp
mov
pop
mov
dec
ljmp
xor
mov
pop
ljmp
inc
lods
roll
out
in
pushf
out
xchg
and
jae
insl
sbb
push
fldcw
push
xor
jne
testb
stos
clc
adc
imul
leave
in
shlb
popa
imull
call
and
and
fdivs
loop
lods
lea
popa
sub
sbb
mov
add
and
sbb
jnp
mov
or
popa
pop
xlat
addb
pop
xor
sbb
push
dec
shlb
ljmp
lods
cmc
pusha
shr
mov
movsb
cmp
das
dec
js
or
jg
inc
out
mov
jmp
outsl
cmp
dec
movsl
insb
lea
xchg
push
pusha
xchg
jno
inc
fildll
rcr
subb
out
sbb
sbb
scas
sbb
mov
pushf
out
lods
or
cltd
rcr
cmp
scas
mov
imul
adc
leave
aad
fs
cli
test
cltd
lcall
lret
leave
aad
imul
xor
inc
fsubrs
inc
mov
aaa
xor
in
mov
mov
bound
aam
jg
fyl2x
cmpb
imul
sub
push
out
sub
sar
fwait
icebp
outsb
or
push
sub
out
inc
rcrb
addb
push
sbb
lods
xchg
add
jb
xchg
bound
cli
cmc
inc
outsb
add
inc
add
cmp
mov
js
push
arpl
addb
cmc
inc
pushf
scas
iret
idivb
push
in
loop
inc
daa
cs
ucomiss
jnp
xlat
jns
or
mov
fistpl
je
push
insb
fldl
loopne
gs
xchg
imul
jg
xlat
jmp
imul
sbb
pop
mov
jmp
incl
cmp
jnp
cmpsb
sbb
and
mov
pop
sti
sub
fmull
mov
ret
jne
push
aaa
push
cwtl
add
aas
push
lret
mov
test
fists
sti
in
in
shr
mov
push
subb
adc
inc
test
adc
push
out
and
je
mov
mov
scas
add
sub
xchg
in
dec
dec
std
loopne
fs
sbb
jnp
mov
push
fstps
push
icebp
scas
adc
mov
add
xlat
pusha
jg,pt
ficoms
fcompl
stc
jle
outsb
inc
stc
das
jp
ret
imul
dec
call
int3
mov
add
es
ljmp
jmp
sti
rcrl
lock
ret
shll
mov
movsl
lds
int3
push
cli
or
enter
push
mov
outsb
xchg
fwait
mov
mov
aad
andl
mov
push
push
xchg
fsubr
pop
inc
mov
lods
jno
push
dec
fbld
pop
xchg
jne
mov
xchg
mov
notl
outsb
xor
xchg
fisttps
arpl
es
sbb
push
gs
mov
aas
out
mov
call
inc
movsl
xchg
pop
dec
lahf
pop
or
jmp
and
xchg
add
xchg
jae
xchg
push
inc
in
cmpsb
lods
cltd
adc
adc
mov
push
dec
aaa
ja
adc
arpl
or
or
stos
sbb
fists
stos
fsubrl
ror
mov
xorb
push
test
test
mov
add
xor
add
sahf
ljmp
jns
loop
sub
sar
pusha
cmp
sbb
jecxz
mov
or
insb
xchg
fildl
insl
jbe
call
pushf
or
ds
mov
and
sbb
push
out
int
pop
in
dec
loope
ja
stos
hlt
lcall
mov
pop
xor
into
adc
out
or
iret
bound
jno
clc
fimull
out
mov
xorb
mov
xlat
scas
lods
cld
mov
leave
add
popf
jg
or
cmp
or
mov
test
popf
fucom
mov
mov
or
lock
loop
pop
mov
cmp
push
sbb
push
mov
add
xchg
pop
fisubrs
out
inc
push
mov
leave
fsts
mov
pop
gs
cmpsb
insb
ret
jl
cmp
mov
je
movsl
push
jae
addr16
or
pop
inc
cmp
or
lret
xchg
mov
lea
jne
lahf
cmp
lea
jb
xor
mov
mov
cmp
mov
and
mov
push
pop
mov
pop
inc
test
adc
negl
mov
cmp
and
in
or
sub
xor
mov
sbb
fucomp
inc
dec
jle
les
xor
lret
js
adc
jmp
xor
bound
mov
divb
fs
mov
dec
les
jb
adc
pop
xlat
cmp
sub
out
inc
xor
gs
lcall
pop
sbb
lcall
arpl
sbb
test
mov
jmp
loopne
adcl
jne
mov
test
sbbb
push
xchg
xor
out
sub
testb
sub
mov
add
int3
inc
imul
movsl
jb
xrelease
sbb
jp
pop
pop
cmp
cmp
xor
pop
push
lds
fidivs
lret
addr16
mov
insl
cld
sti
mov
dec
jbe
pop
popf
arpl
or
cmp
jmp
ror
mov
cmpsb
cmpsl
or
xor
cmpsb
xchg
dec
cwtl
cmc
pop
mov
sub
bnd
aam
gs
xor
add
pop
sbb
inc
jno
stc
in
add
mov
mov
adc
outsb
xchg
cmp
mov
xor
xchg
and
in
jge
js
and
jae
enter
mov
dec
cli
adc
sub
pop
mov
sbb
jne
clc
lock
cmp
jno
mov
out
loop
push
stos
movsl
neg
gs
add
gs
mov
aam
inc
jmp
xorb
out
mov
sbb
pop
pop
cmp
arpl
xchg
outsb
shlb
shl
lods
cmc
lods
push
sbb
sub
xor
leave
ja
aam
mov
fimull
mov
push
jne
pusha
jb
xlat
and
testl
jmp
dec
bound
pop
insl
pop
loopne
dec
jno
mov
add
scas
or
arpl
fxch
andl
dec
sbb
push
into
subb
jmp
mov
inc
jle
dec
xchg
cmp
adc
xchg
outsl
icebp
push
or
cmp
inc
movb
pop
xlat
hlt
pop
mov
cmp
mov
mov
out
mov
and
mov
xchg
lock
loope
arpl
loope
adc
adc
lret
jl
dec
shlb
pop
mov
js
popf
popa
outsb
aas
out
xchg
cltd
mov
push
pop
orb
lret
hlt
xchg
sub
sbb
pusha
sub
push
outsl
add
pop
jge
push
movsb
mov
repz
mov
or
stos
mov
fisttps
ret
data16
mov
test
loop
adcb
das
pusha
pop
add
call
jnp
arpl
or
xorl
mov
adc
xchg
call
sbb
cltd
icebp
std
je
out
lea
je
xchg
dec
mov
jg
fsts
sbb
xor
sahf
subb
es
pusha
das
fdivs
int
or
push
mov
fcomip
pop
xchg
dec
rcl
shrb
cmc
xor
aad
int3
mov
orl
cmp
clc
push
pop
xchg
ja
popw
js
lods
in
popf
arpl
pop
fs
mov
ret
jo
lds
inc
xor
add
mov
popf
aas
cmp
aad
push
clc
ds
inc
cwtl
lock
aad
fdivr
aam
ficompl
in
jo
sbb
lods
dec
int
negl
in
cmp
dec
in
rclb
jecxz
mov
jbe
cmc
and
sbb
jge
pop
xorb
push
xchg
call
mov
pop
or
jno
or
mov
enter
or
les
cmc
lock
ret
lock
call
inc
cld
jae
jg
push
mov
cmp
fimuls
xor
adc
pop
push
sub
push
ret
repnz
popf
xor
jne
or
sbb
sub
inc
mov
push
sbb
and
jmp
mov
outsb
cli
sbb
add
push
lret
std
jnp
clc
inc
dec
mov
aaa
outsb
jl
lcall
dec
cs
sti
xlat
nop
push
mov
mov
or
das
sbb
adcb
out
dec
rolb
std
icebp
scas
lods
dec
mov
pop
pop
jle
repz
outsb
fcompl
mov
sub
sahf
je
test
imul
ud0
daa
lds
bound
dec
mov
mov
mov
mov
push
add
push
pop
lea
mov
mov
pop
loope
cmpsl
outsl
into
xorb
adc
pop
sub
cwtl
jmp
xchg
jo
in
push
jmp
add
xchg
fdivr
imul
jns
mov
pop
mov
pop
jbe
or
mov
dec
loop
stos
jbe
aaa
sub
jge
jge
cld
push
in
sub
dec
testb
jb
shlb
push
inc
test
orb
movsb
dec
xchg
imul
sub
push
inc
and
fldt
dec
ja
out
xor
std
cld
lods
xchg
imul
adc
xchg
push
sub
je
jg
cld
and
imul
mov
pop
pop
mov
jo
or
out
mov
adc
aaa
adc
popa
or
clc
ret
inc
insl
cld
aaa
cli
fs
clc
in
xchg
mov
in
and
jno
pop
and
or
rcrb
fcmovnbe
lahf
insb
or
lods
push
mov
xlat
jmp
jg
xlat
add
fsubp
lods
std
push
adc
aam
mov
stos
popf
mov
sti
push
test
push
pusha
sbb
xchg
lods
in
ljmp
sub
push
and
or
dec
and
and
and
bound
jae
inc
adc
in
add
xor
jns
sahf
jp
mov
ss
mov
push
xchg
rol
lret
jb
push
js
cs
stc
cmp
xchg
fnsave
cwtl
dec
sti
push
test
scas
push
pusha
dec
lahf
mov
in
es
jl
mov
fs
sub
jl
aad
mov
test
mov
cmp
jo
jl
xchg
mov
or
insl
out
add
insl
test
and
test
jp
mov
cld
push
addr16
out
test
cld
jae
les
xchg
fisubrs
cld
cmpb
je
fnstenv
cltd
dec
mov
push
dec
jo
fbld
frstor
push
popa
cmp
cmpsl
mov
mov
lods
push
sti
dec
lods
lds
mov
or
lahf
aam
test
or
xchg
mov
mov
in
aam
fbstp
sbb
hlt
lret
sbb
loop
lock
xchg
mov
mov
sbb
insl
or
pop
mov
xor
iret
shrb
mov
out
call
repz
test
repz
mov
popa
jg
push
xchg
xor
add
jae
adc
aaa
out
cli
cwtl
dec
mov
push
gs
inc
stos
push
mov
out
fwait
aad
out
cmp
loop
imul
lret
xor
inc
lret
mov
mov
jl
sbb
out
xor
push
insl
sti
add
pop
or
pop
inc
jecxz
and
enter
mov
dec
jp
das
xchg
aam
sbb
ja
xchg
pop
popa
in
lcall
in
sub
push
aad
mov
xor
mov
sbb
dec
lods
mov
mov
push
or
fiadds
dec
add
out
scas
lret
shl
aam
cltd
scas
or
xchg
into
fstl
push
mov
in
cmpsb
cmp
sbb
mov
iret
adcb
mov
int3
jmp
push
pop
fcoms
xchg
out
inc
rorb
mov
cltd
mov
inc
mov
inc
xor
cmc
sahf
push
sbb
repnz
test
testb
shlb
dec
test
push
xchg
sti
or
jge
jp
cli
xchg
int
test
cmp
cmpsl
adc
sub
xchg
movsl
pop
adc
inc
cmp
xchg
aaa
cmp
arpl
dec
daa
xchg
icebp
inc
pushl
test
inc
andl
jae
scas
ds
or
repz
lds
mov
hlt
js
push
repz
and
sarl
mov
leave
or
push
pop
cmpsl
pop
js
sbb
popf
in
iret
sbb
adc
fmull
rclb
push
shlb
jmp
dec
adc
sti
mov
sub
fdivr
cmp
jbe
test
dec
repz
push
sub
lods
jecxz
push
mov
sub
push
sub
ljmp
addl
sub
cmp
cltd
cwtl
jg
cmp
mov
and
enter
jge
dec
add
cli
arpl
addb
adc
xchg
and
xor
fistl
enter
loop
into
mov
out
cmpsb
int3
inc
loope
lahf
lods
repz
inc
into
jne
jecxz
sbb
sub
push
aam
sub
sub
in
lods
xlat
sub
arpl
mov
call
mov
lcall
insl
inc
icebp
imul
stc
mov
dec
adc
add
rorb
add
leave
sbb
jle
sub
cmp
jecxz
push
je
in
gs
je
ja
fildl
dec
inc
pop
mov
push
stos
out
pop
mov
sbb
je
fisubrs
bnd
push
out
sub
in
mov
mov
jno
add
mov
aaa
jne
inc
push
fmull
arpl
cld
pusha
insl
lahf
pop
iret
ljmp
das
and
pop
cmc
xchg
mov
mov
lods
out
adc
adc
lahf
push
push
pop
jne
jnp
sub
cmpsb
and
loopne
je
inc
add
clc
dec
add
gs
cmp
subb
sbb
inc
jp
repz
gs
into
jle
mov
adc
out
scas
lea
mov
sahf
mov
jbe
jecxz
and
jmp
inc
mov
int3
test
mov
push
mov
jl
push
sti
adc
ds
mov
pop
adc
ljmp
dec
jmp
clc
das
test
sub
adc
cmp
pop
les
sub
fs
jp
shlb
out
inc
lods
push
push
inc
outsb
push
lcall
test
pop
adc
int
pop
aaa
mov
or
add
push
outsl
jg
mov
arpl
ret
dec
add
or
stc
cmp
lock
test
adc
jne
int
xchg
pop
push
cmp
pop
add
dec
sub
jne
stos
xor
mov
arpl
xchg
les
mov
dec
add
jecxz
cmp
mov
mov
cmc
outsb
push
bound
les
out
enter
pop
inc
jp
mov
cmp
xchg
loopne
mov
iret
cltd
jo
sbb
sbb
jb
xor
lods
imul
adc
dec
and
ljmp
in
lahf
cmp
mov
ds
mov
push
sbb
push
std
add
inc
or
insb
stc
int3
leave
jbe
xor
adc
sbb
shrl
push
xor
xchg
dec
mov
idivb
mov
inc
push
cmp
push
cmc
test
fidivs
adc
jbe
sub
ja
jne
push
or
or
adc
jge
sbb
jl
pop
out
test
pusha
mov
jo
lock
ret
and
or
adc
mov
lcall
dec
xchg
or
fisttpll
and
add
and
or
add
sbb
dec
cli
clc
in
jae
sub
insl
cmc
pop
enter
lods
mov
adc
in
fstl
or
push
das
xor
popf
daa
mov
sti
mov
xchg
movb
out
add
push
shlb
lahf
adc
sub
push
xchg
dec
lods
sti
pop
fnop
pop
xchg
jp
xor
pop
shrb
out
mov
in
loopne
inc
gs
push
mov
imul
or
data16
les
imul
cli
int
shr
push
sbb
daa
cmp
sbb
arpl
addb
adc
aam
outsl
jecxz
loope
sub
sub
shl
xchg
outsl
sbb
mov
lahf
and
push
in
mov
dec
cltd
mov
mov
icebp
rcr
pop
out
dec
mov
popa
or
aam
fucomp
xor
adc
xlat
jne
lods
or
inc
mov
xchg
sub
lahf
pop
sub
es
sub
call
mov
jno
leave
pop
mov
and
or
bound
std
jns
and
mov
or
or
xchg
int3
insl
les
xor
push
xor
imul
xor
mov
dec
adc
shll
aad
cld
xchg
inc
out
or
jecxz
xchg
je
roll
xchg
fidivs
add
cld
sbb
xchg
ret
dec
jle
int
pop
inc
test
xchg
ss
mov
popa
dec
jp
mov
jge
adc
push
mov
sbb
or
push
sbb
int3
loop
loop
sub
aaa
push
inc
xchg
mov
add
and
insl
in
sub
call
ret
loopne
xchg
inc
cmc
sbb
stos
sub
push
ljmp
aad
push
sarl
xor
sub
push
loope
xchg
adc
outsb
cwtl
xchg
and
jb
pop
je
in
ds
ss
leave
sbb
jne
rcrb
outsb
pop
adc
sbb
mov
loope
dec
add
ret
inc
dec
movsb
add
insb
into
dec
jmp
push
push
in
push
lods
cmp
sahf
imul
dec
sbb
inc
jmp
pop
mull
jbe
inc
ja
ret
gs
cmp
mov
dec
js
xchg
xchg
pop
xlat
xchg
jnp
mov
push
test
adc
mov
fs
mov
push
js
sahf
pop
adc
pop
dec
out
and
xchg
stos
int3
dec
stos
insl
xchg
inc
mov
std
pusha
orl
test
daa
inc
lods
scas
repz
orl
xor
fmulp
mov
mov
rclb
pop
sub
pop
or
add
jmp
sbb
cmp
cmp
and
in
divb
cld
add
nop
add
test
xchg
lods
outsb
mov
mov
loopne
negb
fdivl
add
les
cmc
ret
dec
stos
ss
jb
loope
sbb
add
xchg
xlat
out
adc
jge
jecxz
dec
movsl
fstpt
jns
call
and
or
add
pop
xchg
mov
jns
outsb
push
out
clc
sbb
cmpsb
lcall
pop
xchg
inc
enter
xchg
cwtl
jmp
push
dec
mov
adcl
jmp
mov
and
pop
xchg
add
les
dec
loop
mov
jl
push
test
mov
sub
les
sub
or
cmc
repnz
lret
add
mov
pop
mov
aas
or
or
repz
dec
popf
pop
in
fbstp
adc
out
xchg
ja
aaa
call
push
xor
mov
mov
xchg
mov
xchg
dec
insl
mov
rorl
jns
jae
in
mov
pusha
popw
je
icebp
mov
jns
ss
mov
movsl
inc
lea
sbb
inc
pop
jp
test
push
out
and
out
jae
testb
jg
fxch
notl
inc
cmp
push
popf
lods
sbb
lea
fdivl
gs
adc
pop
aas
and
rorl
fisttps
xor
jo
movsl
sub
inc
frstor
xor
imul
imul
int3
mov
icebp
xchg
inc
and
gs
ljmp
xchg
call
jle
mov
std
sahf
push
sub
mov
sbbb
std
rorb
adc
pop
sbb
rol
pop
dec
outsl
out
mov
mov
jmp
or
in
inc
push
inc
mov
and
sahf
aas
iret
ret
popa
cmp
cmc
test
je
popf
cmp
fwait
mov
jnp
dec
mov
scas
inc
pop
insl
int
shlb
push
dec
or
popf
loope
xor
cltd
cltd
pop
bound
fdivrl
xchg
es
dec
mov
movsl
hlt
sub
iret
jno
or
pop
cli
out
xchg
cmp
inc
mov
sets
lret
mov
sbb
adcl
pop
pop
adc
movsl
mov
and
stos
fcmovu
mov
adc
push
jmp
insl
fs
outsb
or
testl
fs
addr16
ret
push
cmc
pop
aaa
mov
dec
scas
loop
cmp
sbb
mov
mov
push
push
sbb
scas
or
dec
cmp
fnstcw
add
addr16
and
xchg
mov
call
mov
push
xor
les
jle
fnstcw
popa
and
cmpsb
xchg
inc
mov
cmp
js
inc
xor
xlat
roll
or
fldl
and
mov
clc
jle
hlt
mull
or
in
clc
jge
test
shl
xor
push
sub
push
jae
movsb
in
ljmp
cmpsb
fwait
adc
push
stos
sbb
pop
out
fwait
jbe
imul
xor
loopne
inc
jbe
push
dec
mov
scas
pop
flds
lahf
lret
ss
cmp
and
dec
scas
jmp
xor
shrb
imul
pop
or
mov
dec
stos
insb
mov
loope
outsb
js
into
aad
loope
enter
pop
fistpll
dec
cwtl
mov
mov
movsb
shll
lock
gs
and
xor
mov
repz
dec
mov
aas
pop
out
mov
or
pushf
mov
pushf
lea
ficomps
xchg
mov
cmp
and
repz
stc
ds
movsl
jne
or
adc
cmp
lcall
daa
enter
inc
fdivrl
daa
repnz
pushf
xor
jne
fs
mov
xor
or
aas
fwait
push
inc
pop
lret
fwait
push
dec
xor
xchg
je
lahf
dec
shrl
jb
mov
fs
add
aad
mov
dec
rorl
adc
je
or
mov
sbb
push
sub
rcrb
jae
jbe
sub
mov
test
sbb
add
int
int3
inc
mov
pop
das
fsubrs
adc
sub
imull
push
adc
andnps
push
jno
sahf
mov
mov
sub
sbb
cmpsl
aas
push
xor
pushl
push
data16
clc
ja
push
jecxz
mov
pop
test
ljmp
push
sbb
gs
hlt
cmp
faddl
or
icebp
push
mov
push
ja
xor
popa
pop
push
test
in
enter
cmpsb
mov
loope
cmp
fidivrl
call
dec
push
lods
cwtl
mov
sub
pop
inc
push
push
jle
sbb
mov
jg
stos
stc
mov
das
dec
cmp
cltd
pop
push
xor
mul
loopne
adc
add
stos
mov
adc
pop
inc
loop
int
rorb
sahf
xchg
ja
movsl
fistl
cs
lahf
cmp
xchg
lcall
pop
push
aaa
mov
inc
and
repz
jno
stos
movsb
xorl
or
mov
ret
fwait
out
sti
mov
push
mov
in
jae
xor
xchg
dec
ret
cmp
pop
push
or
std
mov
jge
subb
lcall
mov
clc
add
xchg
repnz
fisubrl
stos
mov
inc
inc
ret
iret
mov
jns
inc
xor
and
jl
add
stc
lods
fcomps
mov
push
mov
push
popf
aas
fsubr
roll
cmpsb
insb
jo
mov
mov
jae
hlt
sbb
mov
fsts
pop
mov
scas
sub
cmpsb
lea
call
fs
fisttps
cld
repz
sbb
mov
jbe
push
mov
xchg
mov
sahf
mov
jmp
dec
es
dec
stos
xor
rcrl
xor
jns
cmp
adc
add
jne
pop
sbb
lods
sbb
sub
mov
add
rclb
and
or
add
push
dec
arpl
imul
negb
pop
mov
cs
pop
add
jg
cmp
adc
xor
aas
push
cld
fdivrs
push
pop
gs
pop
pop
dec
jl
dec
pusha
sub
or
hlt
sub
aas
repz
xor
mov
xchg
push
and
push
jo
test
fdivr
fcoms
jo
repnz
mov
mov
aad
xchg
scas
sbb
inc
loop
mov
scas
cmp
aam
pop
leave
daa
dec
push
mov
scas
inc
push
jecxz
mov
push
mov
add
aaa
inc
xlat
push
loope
cld
icebp
inc
dec
adc
scas
movsb
pop
add
jne
fsubs
ret
dec
sub
imul
jne
fnstsw
jecxz
aas
mov
imul
xchg
pop
ret
mov
add
leave
roll
add
rorb
sub
das
push
cmp
aaa
leave
inc
add
and
sub
mov
iret
dec
mov
scas
aaa
xchg
outsb
adc
test
mov
imul
xchg
or
dec
insl
xor
or
outsl
push
xor
xor
clc
popf
xchg
add
mov
je
sub
push
ret
popf
adc
hlt
or
popa
pop
mov
jne
add
push
mov
gs
nop
outsl
sub
xchg
dec
sub
lret
jmp
aad
mov
and
push
xlat
test
notb
test
loop
pop
test
mov
and
jo
sti
test
divl
ret
pop
mov
mov
enter
insb
in
pop
loopne
push
pusha
test
mov
adc
jg
mov
xor
sarl
mov
outsb
adc
dec
jae
jl
xor
or
sub
mov
push
imul
pop
lret
pop
or
bound
sbb
in
mov
mov
mov
mov
lcall
cli
movsl
mov
scas
repnz
leave
in
aaa
push
ret
sub
in
ret
fistpll
jnp
jae
movzbl
sub
in
jl
inc
mov
pop
mov
je
fiadds
sti
into
outsl
hlt
dec
andb
ljmp
icebp
and
es
out
sbb
xchg
pop
filds
lret
or
jecxz
das
push
push
mov
out
inc
xor
outsb
mov
jnp
insb
dec
adc
adc
adc
lret
xchg
inc
mov
or
cli
xor
and
adc
daa
sub
fs
out
fists
cmp
incb
nop
adc
add
mov
or
cmpsl
shrl
pop
or
sub
cli
movl
jl
inc
mov
cmp
loope
sbb
add
or
mov
ja
in
mov
ds
pop
inc
scas
daa
loope
push
andl
es
cmp
out
ljmp
xor
cld
mov
fdivl
xchg
jle
repnz
xchg
xor
jp
xor
popl
popf
and
aam
cmp
out
outsl
xchg
mov
decb
pusha
mov
jl
inc
jo
push
mov
mov
hlt
outsl
sub
pop
push
lock
ror
or
cli
sbb
mov
fdivs
lret
pop
or
popa
cmpsl
push
fiadds
les
dec
rolb
xlat
push
and
sbb
xchg
inc
addr16
test
xchg
and
inc
lahf
out
dec
out
fildll
repnz
movsb
jno
sbb
mov
sub
mov
mov
dec
pop
jo
dec
sbb
xor
cmp
inc
cmp
les
lods
pop
cmp
jmp
repz
mov
cltd
jmp
in
mov
aam
imul
fwait
ja
adcb
fisubl
clc
push
addps
xchg
mov
jb
push
cmp
mov
xor
cmp
bnd
pop
inc
add
sbb
mov
sub
sbb
push
shl
jbe
or
lock
in
add
pop
sti
sbb
repnz
mov
lock
stc
sbb
dec
and
mov
pushf
icebp
cmc
mov
jno
loopne
mov
movsb
jmp
or
ss
cli
inc
push
jo
mov
leave
sti
sub
xor
ljmp
mov
pop
outsl
xchg
push
popa
add
shll
inc
push
addl
std
aas
pop
mov
or
and
into
adc
push
lahf
cmpsl
xor
nop
xor
xor
mov
cld
sub
shrl
xchg
cmp
inc
push
test
mov
je
lcall
les
pop
out
mov
in
fcomip
hlt
and
hlt
cltd
scas
xor
rcrl
ljmp
sarl
or
sti
mov
fstpt
lods
divl
cmp
mov
mov
stc
loope
mov
nop
insl
mov
ja
adc
mov
outsl
or
jae
rcrb
shll
add
cmp
das
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
jmp
outsb
lods
or
mov
cmpsb
or
push
jecxz
scas
addl
fwait
cmp
xchg
push
lret
fistpll
sbb
sbb
inc
iret
aad
ret
jmp
aaa
or
sbb
or
xlat
subb
dec
inc
hlt
cmpsl
jge
insl
sti
cld
cli
mov
sub
inc
in
and
and
jbe
jg
xchg
cmpsb
pop
mov
jl
int3
jb
outsl
scas
sbbl
push
jb
fwait
cmp
stos
xchg
jne
das
pop
mov
and
in
inc
push
repz
push
push
pop
popf
shll
insb
test
gs
xchg
scas
push
dec
out
sbb
orb
data16
pop
dec
cmp
sub
jns
popa
shr
test
adc
cmpsb
rclb
jg
repz
out
test
rcr
dec
xor
fstpt
sub
cmp
adc
sbb
test
jnp
mov
dec
int3
mov
dec
push
ret
scas
pop
rclb
push
dec
test
mov
aas
fimuls
and
std
lret
sbb
iret
aas
maxps
into
aad
or
jle
ficomps
adc
adc
dec
xor
int3
insb
rcl
inc
adc
sub
mov
out
in
rclb
lds
push
lods
fcmovnu
cmp
push
jnp
jb
jp
push
mov
mov
mov
in
dec
mov
fstpl
js
gs
sti
in
std
shlb
inc
sbb
push
rcrb
imul
sub
sub
hlt
popa
movsb
lods
dec
fcoms
or
push
xor
mov
sub
mov
jg
loope
sub
data16
push
orb
cmpsl
or
mov
ljmp
test
or
or
mov
inc
push
pushf
clc
inc
mov
out
dec
add
lods
adc
mov
mov
sbb
or
pop
shlb
sub
ret
pop
adc
add
pop
pop
movsl
cmp
jecxz
sub
imul
or
xchg
add
movsl
xchg
movsb
data16
out
out
mov
ret
jbe
popf
mov
jmp
std
pop
sbb
xor
insb
push
inc
jne
aam
test
cmpsb
sbb
lock
test
test
add
sti
sbb
or
fmull
jecxz
cltd
pop
lock
daa
psllw
ss
loopne
jo
and
ficompl
mov
cwtl
ret
lds
dec
dec
in
pop
or
cli
insl
pop
mov
sub
ja
sti
push
adc
aas
imulb
xrelease
adc
sbb
sbbb
pop
add
fucomi
jmp
dec
mov
lods
pop
add
xor
popa
mov
inc
imul
subb
cmp
jl
xor
es
mov
adc
adc
jge
sbb
test
mov
popa
cmp
ljmp
incl
mov
pop
sbb
xor
mov
mov
mov
xchg
inc
jns
out
faddl
std
xor
mov
daa
cld
pop
fs
movsb
lcall
adc
ficompl
cs
fildll
dec
cltd
jge
push
xchg
jle
push
inc
push
cmp
hlt
setae
and
nop
mov
and
push
pop
xor
ljmp
mov
adc
aas
bnd
in
popf
jl
push
negb
mov
dec
inc
pop
lret
out
imul
mov
mov
test
ds
sub
rcrb
cmp
push
dec
lret
inc
fisubl
in
inc
fldl
inc
pushf
xlat
pop
hlt
jmp
mov
xor
shrl
cmp
fs
xlat
aaa
enter
mov
xchg
jnp
dec
adc
mov
inc
dec
loop
cli
lcall
ljmp
addr16
testl
loope
xchg
push
jmp
mov
xor
sub
or
xor
sbb
loop
clc
push
loope
push
pop
mulb
dec
popf
push
mov
jbe
or
sbb
adc
dec
dec
iret
cltd
je
jg
adc
in
test
lret
xchg
adc
and
aas
mov
icebp
jl
stc
fs
in
mov
fimull
jo
xor
push
push
xor
int
pop
aam
sti
add
jmp
and
adc
aaa
movb
hlt
cltd
aas
stos
jp
sub
mov
mov
fadd
lock
insb
test
dec
out
sbb
adc
jno
test
mov
jg
out
mov
adc
cmpsb
jae
popf
sub
sbb
and
rol
push
mov
dec
mov
sub
data16
and
hlt
dec
in
scas
std
outsb
pop
dec
test
sysenter
mov
mov
xchg
pop
mov
mov
inc
inc
pop
jns
cmp
mov
inc
sub
sbb
push
xor
mov
cmp
or
fcompl
inc
sbb
data16
push
rclb
or
or
adc
inc
sbb
testl
add
mov
cltd
pop
dec
imul
pop
enter
mov
sbb
test
jnp
in
and
lods
cmp
in
xor
mov
mov
pop
icebp
push
mov
fists
push
stc
adc
add
pop
stos
xlat
cmp
mov
mov
xor
sbb
inc
pop
or
mov
jg
repz
pop
mov
add
mov
addb
add
ja
inc
into
insb
pusha
popf
cmc
out
stc
fcomp
push
test
lock
cmp
lcall
and
jnp
push
xchg
push
add
loope
shll
push
xor
movsl
pusha
addr16
pop
lea
insl
pop
popa
and
ljmp
and
push
nop
cmpsl
leave
std
add
jnp
mov
dec
lock
adc
jo
stos
pop
roll
adc
sbb
pop
lea
fucomp
sub
pop
mov
sbb
push
test
mov
inc
add
add
jns
incb
mov
leave
mov
cmpsl
flds
popa
dec
mov
cmp
xchg
insl
xchg
push
notb
es
popa
xlat
lret
rcrb
test
out
dec
cld
pop
mov
aad
ret
scas
ljmp
sti
roll
jb
jge
dec
pop
sbbl
xchg
sbbl
movsl
subl
iret
mov
pop
push
xchg
jne
sbb
cld
mov
dec
cmpsl
cltd
pushf
in
int3
sarl
push
in
flds
int3
jecxz
push
add
orb
mov
rcll
or
jae
jne
add
imull
pop
repnz
pop
and
push
lock
ret
mov
push
pop
mov
xor
pop
sbb
cmp
xchg
xlat
sbb
lea
pop
enter
push
adc
or
sub
pop
push
mov
outsb
ja
lahf
add
in
mov
insb
cmpsl
xchg
call
xor
push
mov
test
repz
dec
fs
mov
dec
xchg
or
and
sarb
push
mov
mov
push
xchg
sbb
rorb
icebp
pop
lret
out
add
icebp
push
sbb
lods
dec
ja
or
jg
lret
dec
out
xlat
imul
int
aad
pop
xchg
test
idiv
shlb
movl
mov
xchg
ljmp
push
adc
jg
add
push
hlt
fldt
out
dec
jne
ds
mov
cwtl
pusha
push
fwait
pop
in
cld
push
mov
jb
xchg
lret
mov
iret
push
scas
or
jl
dec
mov
lock
dec
mov
test
mov
mov
push
aas
sub
stos
xchg
mov
ljmp
ret
sbb
repnz
je
je
mov
mov
sti
pushf
mov
sbb
sbb
inc
and
sub
test
inc
sbb
push
incb
sub
adc
in
scas
push
les
sahf
sub
rorl
int3
and
scas
dec
mov
cmp
rcll
loopne
or
mov
jbe
jbe
stos
scas
mov
roll
loop
sub
sub
ret
sbb
rcl
cmp
repz
mov
mul
mov
pushf
jmp
dec
mov
andl
lds
cmp
adc
push
pop
jge
mov
sbb
test
pop
in
xlat
sbb
mov
or
int3
and
sbbb
lahf
popa
inc
rclb
rcll
push
std
mov
rclb
aaa
mov
inc
and
nop
mov
sar
mov
mull
mov
nop
stc
or
movsl
inc
sub
dec
xchg
fwait
hlt
jecxz
fisttpl
inc
daa
aaa
mov
es
loope
jmp
mov
in
inc
testl
mov
lods
in
push
rcrl
sub
mov
mov
xchg
mov
pop
and
xchg
insb
ss
in
jl
add
push
inc
ss
mov
xor
push
hlt
or
xchg
xor
neg
fidivrs
stc
ret
enter
jae
pop
jnp
cmp
stos
xorb
inc
sbb
jmp
jmp
xchg
iret
cmpsb
fcompl
enter
hlt
add
sbb
lods
inc
xchg
xchg
sub
xchg
cwtl
add
out
cmp
xor
ljmp
orl
aas
fcomps
shrl
fcomps
enter
scas
aam
xor
push
sub
add
enter
pusha
mov
imul
inc
pop
pop
pop
cmpsb
in
dec
jne
fadds
cmp
int3
inc
fdiv
je
push
xchg
test
stos
incl
test
insl
xchg
popf
pushf
pop
lret
leave
daa
imul
ljmp
push
notl
pushf
loope
shlb
ss
shl
fwait
scas
push
push
mov
dec
addb
fwait
sub
sbb
push
js
pop
add
stos
out
or
sub
cmp
rclb
loope
stc
jne
sbb
loopne
cmp
xlat
add
in
push
or
pop
fdivl
or
add
ljmp
pop
dec
dec
pop
mov
js
dec
xchg
int
jo
jno
xchg
mov
dec
jg
push
scas
repz
out
xor
stos
rcr
jno
inc
lcall
aas
imul
pop
movsl
int3
push
out
push
hlt
or
test
dec
cmp
or
cmp
xchg
out
sbb
testl
clc
and
dec
les
sbb
push
repnz
push
stc
push
inc
push
xchg
mov
jg
sarl
lret
jb
in
jecxz
pop
fistpll
aas
scas
sub
cmp
ljmp
dec
xchg
fcompl
mov
mov
xor
mov
out
push
es
adcb
pop
cwtl
xchg
gs
mov
ds
subl
xor
movsbl
sub
jg
cmpsl
push
icebp
push
mov
filds
xchg
sbb
and
ds
and
gs
xchg
shrl
sbb
in
and
push
sti
sbb
cld
xchg
push
test
addr16
jp
cwtl
dec
sbb
pop
cmc
inc
push
cmp
adc
stos
pop
faddl
mov
or
xchg
mov
fs
std
jbe
dec
shufps
adc
or
mov
cld
int3
dec
std
mov
fcoml
pop
pop
mov
into
js
mov
daa
fld
insb
xchg
pusha
cwtl
jle
mov
shrl
push
popa
pop
cmp
pop
fcmove
mov
fsubr
test
pop
push
fwait
cmp
and
stos
pop
add
out
adc
in
xchg
shl
pop
push
jno
repnz
jle
jle
and
dec
or
xor
ret
sti
cltd
sub
and
adc
jl
sbb
push
test
outsb
sub
outsb
push
mov
fldt
cs
adc
inc
mov
xor
push
mov
cmp
xor
lahf
xchg
ljmp
sbb
add
xchg
loop
popa
mov
sub
xchg
jp
cltd
bound
push
fwait
lcall
lcall
xor
sarb
xchg
jnp
fisubrs
inc
into
and
inc
out
mov
popf
lods
mov
fimull
xchg
jl
xchg
or
test
push
jp
sub
nop
stos
fiadds
and
pop
ss
xchg
adcb
mov
push
roll
imull
or
dec
push
jb
shl
outsb
aad
cmp
imul
and
cmp
loopne
sarb
jbe
dec
sub
jmp
xchg
std
scas
jbe
int
in
pop
lds
aad
movsb
jle
mov
dec
cmp
js
in
cmpsl
cmp
adc
aaa
sti
loopne
cmp
cli
lock
dec
jg
xor
sbb
inc
xorl
fnsave
dec
mov
add
cmc
xor
inc
das
add
dec
pop
fistl
dec
push
fwait
fwait
jno
inc
mov
add
and
lret
into
xchg
rcll
bnd
pop
lret
dec
mov
add
cmc
iret
and
loopne
cmpsb
stos
std
add
lea
adc
aad
jne
inc
add
cltd
mov
mov
lods
jecxz
pop
or
and
std
cmp
cli
add
mov
std
or
out
jmp
inc
pop
pop
sub
adc
out
dec
jo
cmp
pop
fisubrs
dec
add
mov
pop
pop
xchg
sub
push
sbb
ss
imul
mov
sub
dec
loop
out
mov
movl
push
xchg
mov
repnz
jnp
sub
stc
mov
cmp
cmp
arpl
shl
cmpsl
mov
push
scas
xor
repnz
pop
aas
mov
mov
mov
fwait
movsl
cmc
pop
xorb
daa
pop
or
lret
jle
test
sbb
int
xchg
nop
mov
pop
inc
xor
push
mov
ljmp
lods
sub
out
jmp
daa
xchg
std
sbb
in
roll
aaa
sub
les
push
mov
loop
ficomps
fnstcw
cmp
call
arpl
test
dec
cli
and
push
mov
and
sub
and
dec
and
inc
sbbb
stc
pop
sbb
mov
sti
mov
inc
clc
fs
dec
mov
cmp
stos
inc
test
adc
mov
jge
cmpsb
push
lcall
mov
lcall
xor
and
mov
pop
jecxz
push
mov
jl
or
out
repz
fwait
adc
lock
jmp
xor
arpl
adc
and
mov
repz
leave
sub
cmp
inc
mov
sbb
test
repz
push
repz
ret
add
cmp
adc
pushw
pop
notb
push
scas
movb
lahf
cmp
inc
jle
in
push
add
push
fwait
cmp
push
addr16
test
adc
xor
jg
in
stc
push
aas
jnp
inc
or
in
pop
sbb
rorl
addr16
or
test
fs
loop
mov
or
sub
xchg
test
mov
add
incl
aad
jnp
xor
xor
jecxz
sub
mov
pop
push
mov
mov
jbe
repnz
and
xchg
out
jg
add
mov
call
movsl
push
cmp
pop
dec
iret
iret
jnp
in
bound
push
push
xchg
lock
insl
push
cmpl
int3
push
fisttpll
fiaddl
push
shrl
daa
push
mov
lret
insl
pop
xor
pop
imul
shrb
ret
xor
outsb
fisubrl
lods
test
xor
test
push
jp
mov
movsl
sub
mov
ja
xchg
cld
xor
push
cwtl
jnp
lds
sub
ret
xchg
cmpsb
or
push
sti
cmpsb
sbb
dec
stc
lds
fwait
jp
sub
xchg
pop
mov
mov
add
rorb
sbb
xor
xchg
dec
bound
test
shlb
sub
push
sbb
gs
inc
decb
scas
out
inc
adc
aaa
lods
lods
mov
sub
dec
sub
push
jge
jmp
enter
sub
mov
mov
scas
mov
loopne
mov
bound
mov
shl
popl
fsts
jbe
mov
lret
call
movsb
xor
and
push
icebp
flds
negb
mov
ja
inc
fnstenv
mov
std
jo
sub
ds
push
cwtl
dec
mov
dec
scas
fisubs
mov
out
nop
outsl
test
inc
sbb
xor
iret
out
cmpsb
enter
adc
mov
dec
inc
jg
sbb
or
xchg
fcompl
fstl
ficoml
xchg
jno
nop
adcb
add
loopne
mov
mov
in
mov
push
sbb
mov
loope
xor
aas
imul
jno
stos
out
cwtl
or
lock
loope
pop
mov
cwtl
repnz
ficomps
sbb
lret
pop
icebp
jg
fiadds
and
das
rorb
cmp
sub
pop
loopne
jge
xor
nop
imul
push
filds
sub
ret
mov
div
or
xchg
stc
pop
push
or
pop
cld
loop
lock
outsl
in
jecxz
xchg
aaa
std
into
inc
add
lds
or
in
sbb
push
pop
or
dec
add
xor
mov
xchg
in
ja
mov
jnp
inc
push
sbb
push
pop
sbb
mov
jle
pop
shrl
int
jbe
or
div
ror
sbb
jg
insb
xor
aas
sbb
push
mov
or
enter
int
mov
in
inc
cmpb
mov
or
fdivp
sub
repnz
push
xor
mov
inc
idivb
xchg
mov
pop
jge
cmp
ret
pop
shrb
rcll
adc
and
mov
leave
lret
cltd
in
add
and
or
add
faddl
mov
push
pop
cltd
ror
stc
test
enter
in
push
ljmp
mov
les
in
mov
dec
xor
mov
aas
sub
or
cli
sbb
push
and
sbb
mov
push
aaa
pusha
das
je
add
inc
mov
or
jle
clc
aad
ds
xor
xchg
sub
add
lret
test
call
stos
cmpsb
loop
push
inc
testb
test
repnz
adc
mov
push
dec
xchg
sub
div
data16
cld
push
sbb
jne
or
mov
inc
aas
jge
add
jp
add
xchg
hlt
cmp
pop
xchg
adc
cmp
cld
and
enter
xor
dec
or
jno
imul
int
xchg
mov
adc
outsb
outsb
push
dec
fdivs
cmp
nop
push
xor
inc
jb
mov
jl
push
xchg
cli
andl
cs
fdivl
dec
aad
xchg
lds
sub
xor
pop
addr16
shlb
mov
cmp
push
sub
ss
fisubrl
mov
and
xchg
insl
mov
out
leave
roll
cmp
fisttpll
inc
sub
xor
jg
push
mov
mov
or
dec
fdivs
cli
adc
add
mov
movsb
mov
cmp
dec
xor
pop
mov
and
push
imul
jp
ss
gs
sbb
loopne
jbe
imul
lahf
andl
dec
lods
dec
test
sahf
inc
arpl
jno
sub
sbb
and
sahf
pop
lcall
dec
adc
fnsetpm(287
sarl
xchg
lret
shll
xchg
fldt
adc
shrl
or
xlat
xlat
ret
sub
pop
add
adc
pop
or
push
jb
rolb
push
and
pop
faddl
test
mov
sbb
fcoms
xor
lds
xlat
inc
push
dec
or
mov
sub
mov
mov
mov
fs
shrl
aas
cmc
push
and
sub
push
mov
push
jp
test
sub
outsb
mov
ja
cmp
mov
pushf
sub
xchg
in
hlt
out
xor
and
add
xor
jge
pop
xor
mov
into
jo
xchg
mov
loope
pusha
jb
mov
int3
mov
inc
push
leave
xchg
dec
ret
popa
pop
cmp
dec
hlt
xchg
movsl
sar
mov
inc
push
lds
xchg
loop
and
mov
xor
mov
and
push
sbb
test
push
cltd
sti
mov
sbb
out
xchg
xor
jg
cwtl
lret
sbb
fnstcw
cmpsb
aas
push
loope
int
inc
loopne
mov
push
cs
jecxz
popa
fisttpll
add
add
jmp
shrd
in
sbb
aam
mov
cli
xor
sbb
jmp
jnp
std
jne
movl
fisubl
or
inc
mov
push
sbb
xor
inc
mov
enter
repnz
inc
sub
out
fldcw
pusha
int3
add
mov
push
ja
lahf
dec
dec
dec
push
jle
dec
pusha
movsb
pop
xchg
test
aad
ret
xor
adc
shlb
xlat
jbe
inc
fucomi
enter
dec
ret
lahf
jl
add
jecxz
pop
fcoms
in
mov
lret
jl
sahf
lock
das
cmp
daa
test
dec
add
enter
mov
aad
hlt
or
dec
ljmp
ljmp
fs
inc
mov
and
jne
jg
sbb
scas
call
mov
inc
fstps
dec
stc
js
inc
xlat
pop
and
or
push
and
lcall
mov
cmp
mov
push
js
sub
xchg
add
add
not
test
xor
js
lahf
int
mov
jle
jp
leave
ja
cli
xlat
shlb
aad
aam
mov
in
mov
ffreep
mov
nop
push
xor
mov
mov
test
push
adc
xor
scas
mov
les
push
ret
cmp
sbbb
fs
es
xchg
in
lret
idivl
xchg
dec
mov
outsb
inc
inc
mov
paddusw
divb
es
jle
xchg
call
aas
fiadds
cmpsl
test
xchg
jg
and
inc
lods
pop
and
add
dec
sub
leave
test
lea
jb
out
jnp
popf
mov
xchg
sarb
iret
idiv
lret
adc
hlt
cwtl
ljmp
sbb
lret
inc
mov
fistps
xor
jecxz
cmp
mov
mov
sahf
in
loop
inc
imul
and
loop
out
xchg
cli
mov
loopne
shll
jb
sahf
vpandn
outsb
inc
call
sti
jae
arpl
mov
jno
jno
and
or
cs
fnstenv
pop
lahf
loopne
push
cmpb
test
pop
xlat
or
in
pushf
mov
aad
pop
ljmp
xor
push
enter
dec
inc
fnsave
aam
cld
in
push
repz
aam
jnp
push
pop
aam
andb
int3
daa
add
lret
xchg
xor
lahf
cmc
sarl
loopne
ds
ret
movsl
pusha
mov
cwtl
icebp
xchg
orl
push
xchg
dec
testl
arpl
pop
xchg
int3
push
mov
ficompl
adc
push
mov
cmp
jmp
push
xchg
adc
pop
pop
jg
cmp
push
mov
xor
push
ds
cmp
jg
lcall
mov
add
scas
mov
jbe
mov
lock
jecxz
mov
mov
xchg
pop
mov
mov
mov
jnp
pop
adc
mov
orl
cmp
pop
push
inc
loope
inc
dec
pop
push
xor
bound
pop
mov
dec
aam
ret
fisttps
in
push
aam
insb
aas
loop
inc
jns
xchg
rcr
or
and
rcrl
lock
dec
test
sub
in
xchg
add
sarb
fidivl
push
test
scas
push
fsubrl
pushf
pop
mov
rcll
ss
mov
mov
cli
cmp
sbbb
ret
loop
fists
in
dec
js
jo
mov
adc
xor
sbb
paddsb
dec
in
fwait
movb
aas
jns
cmp
lret
add
scas
xor
mov
subb
mov
and
leave
leave
sbb
mov
jbe
and
mov
loopne
pop
sbb
lock
sub
adc
push
cs
sbb
shlb
dec
jno
sar
clc
mov
in
cmp
leave
mov
fildll
jg
xorb
movsl
fnstcw
push
cld
dec
pusha
lea
push
imul
daa
inc
sub
adc
sub
add
lret
push
push
mov
aas
push
inc
mov
mov
mov
das
mov
mov
add
loopne
add
mov
add
sub
fcmovu
push
inc
fnstenv
adc
add
jns
rclb
jle
xchg
jns
mov
pushf
icebp
xchg
lds
mov
arpl
add
in
jae
xchg
sti
mov
lret
mov
popa
jge
lods
dec
inc
cmpsb
lret
ret
fbld
cmp
stos
cmp
leave
adcb
add
repz
jo
in
inc
or
lea
movsb
xlat
sbb
leave
movsb
hlt
insl
nop
mov
arpl
in
pop
xchg
cmpsl
sbb
lods
mov
jae
shlb
mov
fstps
xor
stos
out
inc
and
xchg
pop
mov
push
aas
out
sbb
bound
shrl
mov
daa
jge
dec
pop
adc
jg
nop
test
fisubl
mov
cwtl
shll
lcall
cmp
pop
aas
sub
fdiv
mov
mov
ret
ficoms
inc
sbb
dec
pop
lret
addr16
push
sahf
mov
mov
ss
mov
jg
lods
push
lock
out
jecxz
mov
inc
adc
sahf
aad
in
adc
cli
lcall
lock
sbb
movsb
xor
cmp
sub
mov
fcoml
adc
ljmp
push
inc
xlat
add
xor
outsb
lret
inc
std
pop
add
mov
pop
test
pop
pop
inc
and
ret
cs
into
dec
push
xchg
or
imul
ds
inc
mov
sarb
mov
nop
sar
or
loopne
add
or
ss
add
jle
push
sbb
cmp
cmp
xchg
popa
cmp
inc
pop
jge
sbb
lret
popf
cmp
add
imul
sahf
pushf
dec
push
jno
hlt
out
enter
stc
dec
ss
repz
fisubrs
inc
idiv
addr16
icebp
jbe
ds
cmp
fbld
push
scas
shr
hlt
mov
repz
js
test
adcb
mov
mov
and
jne
dec
jmp
testl
stos
lock
mov
das
mov
jns
je
inc
pop
cmp
fcmovnbe
push
lea
leave
repnz
lea
xlat
fcmovb
lods
fldt
jg
add
test
inc
fxch
jg
sub
sti
mov
xchg
fiadds
fldl
jg
leave
test
in
lods
mov
out
and
incb
inc
xorb
xchg
in
loopne
lcall
xchg
mov
push
dec
mov
in
das
sahf
pushl
or
stc
xor
jp
mov
gs
cmp
mov
sbb
xor
in
subl
fstpl
lret
or
push
stos
inc
mov
adc
outsl
sub
hlt
push
sub
pusha
jne
repnz
mov
addr16
mov
shrb
push
repz
xchg
jbe
imul
inc
in
fistpll
insl
lea
lods
and
int
or
in
repz
xor
jbe
mov
jae
sub
push
mov
pop
jg
mov
cmp
insl
xchg
aam
inc
mov
lods
xchg
rcrl
adc
jge
rcr
pop
inc
adc
xchg
dec
call
stc
lock
test
sar
and
xchg
mov
push
jl
aaa
loopne
outsl
add
sub
into
xor
inc
dec
aaa
fwait
mov
or
pop
cmpsb
in
cmp
jne
fisttpll
insb
jg
in
repz
rorl
dec
xchg
xor
fs
push
rep
cli
scas
loope
js
inc
dec
mov
jmp
insb
xchg
push
jge
addr16
add
xchg
mov
xchg
test
pop
push
cwtl
sbb
and
xor
jae
das
mov
pop
movsb
push
mov
cmpsl
pop
push
mov
mov
push
in
jno
inc
inc
adc
mov
icebp
cmpl
addr16
pushl
mov
sub
pop
jb
arpl
repz
lea
stos
insl
aas
loop
xchg
mov
std
imul
je
cmp
inc
mov
ret
mov
mov
outsb
cltd
and
or
insb
pop
cmpsl
sti
sbb
add
push
shrb
jb
lea
fcompl
ljmp
sub
mov
cltd
out
jle
cli
add
cmp
das
sub
adc
movsl
ss
scas
dec
cltd
xorl
leave
loopne
sbb
insl
mov
test
sub
dec
jmp
js
jmp
das
or
adc
pcmpeqw
andb
mov
and
and
mov
jl
pusha
jecxz
and
xlat
or
sub
adc
cmp
enter
fcmovnu
xchg
test
mov
add
mov
and
and
mov
les
pop
pop
je
clc
jo
dec
sti
inc
sub
fistl
fcom
repnz
push
dec
sbb
pop
cmp
dec
ret
mov
jp
push
aam
xchg
icebp
pop
pop
and
xorb
mov
lahf
inc
es
fcomp
icebp
mov
popf
fidivl
fnsave
outsl
call
repz
and
cmc
inc
in
add
std
xor
out
sar
push
std
stos
je
pop
call
int
scas
icebp
popa
aaa
fwait
pop
scas
xchg
or
test
adc
jp
cmc
in
mov
repnz
bound
cltd
sbb
and
sbb
fdivl
fs
inc
mov
in
lods
adc
mov
sahf
mov
movsl
mov
adc
ljmp
pop
sbb
dec
cmc
push
stos
test
popf
int
sub
or
int
mov
xchg
mov
xchg
cld
pop
cmp
cltd
mov
inc
fdivl
into
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
mov
xorl
mov
mov
sbbl
xor
xorl
add
mov
and
mov
and
xor
xorl
push
xor
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
or
mov
mov
subl
xor
mov
add
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
mov
movb
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
jmp
lea
incl
mov
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
xor
movl
add
andl
mov
sbbl
movl
push
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
or
push
mov
xor
xor
or
xor
mov
sbb
mov
mov
push
add
jmp
incl
mov
mov
inc
movl
cmp
jb
not
mov
xor
movl
add
jmp
movzwl
or
mov
adc
mov
adcl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
add
addl
movzwl
sbbl
mov
movzwl
and
mov
sbbl
movzwl
xor
add
mov
movl
mov
mov
inc
not
mov
movl
cmp
jne
and
mov
sub
mov
xorl
xor
and
add
mov
mov
sbbl
xor
add
adc
mov
addl
movl
movl
movl
movl
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
xor
add
movzwl
mov
mov
je
mov
subl
mov
xor
xor
notl
sub
notl
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
mov
movl
add
andl
imul
mov
xor
mov
mov
add
mov
add
incl
or
mov
mov
mov
sbbl
add
xor
mov
dec
mov
add
mov
add
and
and
mov
xor
mov
subl
mov
lea
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
or
mov
sub
movzwl
and
add
mov
andl
mov
xor
adcl
add
movl
jne
movl
jmp
xorl
mov
subl
sub
xor
movl
cmpl
je
cmpl
jbe
jmp
push
call
xor
or
dec
mov
jmp
mov
subl
mov
mov
xor
decl
xor
adcl
sub
sub
xor
mov
mov
mov
jmp
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
addl
imul
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
addl
add
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
mov
mov
andl
add
movl
xor
mov
subl
mov
mov
xorl
add
xorl
and
or
mov
mov
sbb
mov
xorl
mov
lea
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
jmp
rcr
sbb
mov
nop
cs
or
pushf
dec
xchg
imul
andl
inc
jg
shl
aam
fstps
mov
xchg
mov
cli
cmp
outsl
mov
roll
cmpsl
div
jb
inc
jno
dec
add
jp
push
divl
fdivrs
les
dec
shr
xor
pop
dec
repz
cli
ja
cmpsb
sub
test
mov
insl
jb
lods
push
push
mov
scas
in
iret
gs
inc
xor
push
pushf
adcl
inc
xchg
call
push
loopne
jbe
mov
out
mov
mov
pop
mov
adc
js
nop
mov
aam
dec
inc
icebp
cmp
mov
push
mov
js
lock
xlat
mov
test
mov
adc
xor
cmc
push
adc
jbe
mov
pop
pop
or
push
add
ds
or
dec
lea
aam
fwait
sub
pop
dec
jecxz
pop
dec
mov
rol
push
jecxz
insb
popa
mov
push
adc
lds
test
pusha
hlt
jecxz
jmp
and
subb
ret
shl
jb
push
outsb
or
mov
ret
dec
dec
mov
repz
pop
xchg
mov
inc
repz
mov
cmp
sub
mov
xchg
mov
fcomp
stos
lcall
push
in
push
and
popa
js
fstps
ret
insb
cli
insl
pop
cli
pop
fnstcw
repz
push
icebp
in
push
pushf
sub
sub
leave
mov
push
rcl
fiadds
movb
into
shrl
in
cmp
sub
xor
cmpsb
xchg
add
ret
mov
add
and
shrl
mov
cmpsb
movsl
fstps
add
mov
dec
jnp
ret
data16
movsb
push
push
adc
fidivrl
jl
xor
pop
scas
xor
fnstsw
cmp
jmp
add
fidivrl
mov
pop
push
push
push
jp
add
sarb
es
repz
pop
jo
daa
cmp
idiv
adc
pushf
cwtl
stos
shll
orps
sbb
ljmp
in
xor
stc
sbb
or
std
mov
ss
fstpt
and
push
or
adc
hlt
mov
lds
jmp
inc
jmp
jecxz
test
mov
push
ret
adc
mov
jb
lret
cmp
scas
js
xor
int3
popf
mov
mov
notl
movsb
rolb
sbb
sbbl
mov
or
mov
cmp
mov
pop
aaa
push
or
jbe
or
pop
scas
outsl
jnp
lock
cmpsb
push
scas
lahf
cmp
lods
clc
xchg
in
cmp
out
test
cmp
inc
xor
dec
inc
cmpsb
lock
fiadds
nop
add
xchg
sub
bound
out
sahf
fcompl
push
xchg
dec
xchg
addr16
in
nop
ja
jns
je
push
add
xchg
cmp
jno
jmp
adcb
fildll
adc
xchg
xor
add
push
icebp
jge
ja
mov
mov
in
mov
call
pop
cmc
or
cmpsb
mov
and
sbb
outsb
pushf
mov
js
xchg
movsl
push
imul
roll
inc
stos
in
nop
xor
inc
out
lods
mov
ds
pop
xor
pop
setno
fisttpll
sub
movsb
or
ret
jle
push
xchg
dec
repz
jle
xchg
mov
pop
cli
sub
in
mov
arpl
add
jne
fldl
daa
adc
xchg
lock
cwtl
je
shl
js
clc
mov
lret
and
sbb
mov
cltd
mov
fldenv
in
mov
push
jae
into
in
xchg
mov
imul
lret
jecxz
mov
lods
xchg
in
ljmp
mov
pusha
jg
pop
in
push
jl
or
sub
in
sti
mov
dec
dec
mov
adc
jb
loope
cmpb
loopne
mov
rcll
jae
cmp
inc
sub
loop
fs
or
xor
cli
imul
clc
pop
add
out
std
xchg
or
dec
setg
fiaddl
mov
movsb
faddp
or
imul
dec
cli
mov
test
push
test
xor
gs
xchg
xchg
negb
mov
pop
jecxz
mov
jns
dec
xchg
lock
sub
das
inc
jp
insb
inc
and
pusha
rolb
shr
xor
clc
mov
mov
jmp
out
cmpsb
adc
hlt
cmp
jge
jno
insb
aaa
xchg
mov
mov
mov
fisubrs
mov
fwait
mov
int
jle
ret
out
push
iret
into
mov
in
cwtl
sub
shll
xchg
sete
pusha
mov
stos
jecxz
jns
or
dec
neg
sub
les
fwait
ja
adc
pop
cli
in
sbb
jae
imul
into
pop
cs
sbb
pop
test
hlt
gs
xor
mov
mov
and
mov
add
jne
cmp
ljmp
xchg
jb
hlt
ficoms
repnz
repz
mov
pop
fsub
daa
imul
inc
mov
add
or
and
sti
inc
pusha
dec
insb
mov
sub
pushf
stos
shr
push
push
or
adc
jo
fwait
pop
mov
dec
fdivrs
imul
xchg
nop
add
add
lds
sbb
paddq
leave
cmovns
mov
sarl
add
pop
outsb
sub
mov
mov
dec
pop
dec
andl
ret
rorl
cmp
mov
xor
sbb
mov
sub
aad
bound
lea
mov
aam
jns
add
mov
bound
dec
repnz
pop
or
faddl
movsb
pop
mov
mov
adc
fsts
xor
adc
dec
sarb
loope
jg
or
test
jecxz
repz
imull
sub
fnstsw
es
bound
arpl
mov
or
inc
mov
int
and
les
fbstp
push
xchg
mov
rorb
sbb
lret
xchg
hlt
gs
cmp
enter
fstps
out
xor
lret
jmp
mov
test
add
ljmp
mov
pusha
inc
ds
ret
pop
loop
scas
testb
repz
mov
ret
out
mov
add
cmpsl
pop
jnp
xchg
xor
fs
sbb
fwait
in
subb
nop
jge
incl
ds
push
shll
pushf
cmpsl
jp
add
adc
sbb
into
sbbb
or
nop
jae
in
jbe
add
arpl
into
mov
test
mov
addr16
inc
and
setnp
add
xchg
inc
push
aam
in
sub
mov
pop
xchg
push
into
add
pop
pusha
bound
or
jge
test
and
mov
adc
stc
push
lret
movsl
pop
scas
test
or
mov
fwait
xor
mov
mov
stos
pop
dec
divl
sbb
loope
jg
in
das
mov
jmp
iret
pop
push
push
mov
mov
or
cmp
adcb
orb
pop
and
mov
rcrb
int3
lea
mov
jle
cmp
cmpsl
mov
mov
rcr
imul
leave
enter
fadds
adc
mov
cmc
sbb
jge,pn
out
imul
cs
dec
mov
sbb
subl
mov
mov
push
sahf
jge
ljmp
add
rcll
scas
loopne
xorb
lret
add
psrlq
repz
inc
ljmp
sbb
ltr
dec
dec
sub
loope
xor
cmpsb
xchg
je
les
cli
pop
mov
lods
ljmp
fcmovne
dec
or
in
ficoms
or
out
dec
gs
aaa
inc
xor
fadds
aaa
aaa
cmpsb
lock
flds
jae
dec
mov
jle
clc
and
sub
movsl
jno
push
lods
adc
push
pop
jbe
cltd
mov
xchg
or
loopne
int3
adc
dec
mov
cmp
xchg
repz
inc
push
inc
out
aaa
mov
adc
js
repnz
mov
sbb
in
cmpsl
sub
cmp
cmp
mov
jno
stc
xor
insl
fldl
adcl
test
dec
imul
xchg
addr16
out
mov
jg
subb
push
nop
xchg
ret
xchg
add
inc
sahf
dec
sub
sarl
ds
fsubrl
inc
sub
xchg
cli
test
aaa
cs
mov
int
int
pusha
push
sahf
rolb
fadds
push
fisubrl
pop
and
sahf
addr16
dec
rcr
cmp
mov
cld
mov
jae
and
sbb
repz
pop
xor
call
in
add
lea
sahf
mov
or
mov
imul
dec
inc
test
lock
push
cmp
and
sbb
insw
mov
mov
insb
repnz
fwait
xchg
pop
cmp
xchg
std
icebp
ja
or
aas
popf
fmuls
mov
xlat
rclb
jb
sub
imul
or
mov
cmp
test
or
enter
sbb
daa
data16
push
xor
mov
jle
loopne
lret
sbbl
cmpsl
lods
cmp
xor
sbb
dec
iret
adc
adc
dec
mov
sti
adc
sti
sbb
cs
xchg
push
outsl
iret
test
mov
jbe
into
pop
aam
and
ja
jae
jbe
in
push
push
jo
cltd
jg
scas
xor
mov
sub
jae
orb
cld
jae
insb
add
cmpsb
outsl
and
stc
mov
xor
xchg
mov
pop
cli
jae
iret
in
mov
ljmp
mov
rcll
out
sar
leave
in
xor
insl
cmpsl
cmp
js
jbe
mov
aam
add
dec
iret
pop
cmpsl
xchg
je
out
jno
push
mov
dec
jge
push
xchg
ror
in
push
and
or
dec
adc
lods
dec
popa
fwait
cmp
push
xchg
pop
mov
xor
lods
push
je
mov
imul
inc
pushf
cltd
xor
insl
scas
jne
jnp
in
mov
mov
and
clc
lds
jb
hlt
pop
ja
out
dec
in
xchg
jnp
jns
push
jmp
in
decl
fcoms
push
pop
and
shrl
icebp
or
icebp
filds
clc
cli
or
cmp
pushl
mov
mov
mov
push
jl
sub
pushf
mov
jnp
loop
outsb
loope
cmc
rclb
xor
mov
loop
mov
sub
xchg
data16
or
pop
out
xchg
stos
out
push
mov
pop
jl
shll
push
push
mov
xor
mov
lcall
pop
shlb
pop
adc
in
ljmp
xchg
in
sbb
dec
in
sbb
and
andb
mulb
in
loopne
mov
fmuls
sbb
lods
and
push
inc
add
rclb
lcall
arpl
push
cltd
ret
insl
push
sbb
push
jo
mov
cmp
pop
pushf
xchg
jecxz,pt
inc
adc
cs
call
mov
xor
sbb
xchg
testb
ret
imul
ljmp
xchg
mov
or
add
cwtl
scas
loop
adcl
dec
sbb
into
xlat
insb
subl
inc
pop
mov
mov
cs
inc
pop
fistpl
mov
imul
pop
test
xor
fmull
jnp
and
ljmp
push
imul
adc
pop
dec
out
pop
sub
dec
cmc
sub
loop
push
mov
cs
fildll
scas
xchg
mov
cmp
add
add
or
sbb
das
lock
sub
xorl
mov
lds
push
lret
lcall
or
xchg
arpl
loope
jo
and
fstpt
out
pop
mov
scas
fcmovb
xchg
out
rcr
and
push
xor
test
mov
shrb
mov
insb
notl
shrl
xchg
inc
adc
jp
setbe
xor
xor
bound
jne
div
cltd
push
jle
loop
jae
je
rcrb
cmp
pop
push
in
push
shr
cmp
adc
jns
sbb
cld
fmuls
mov
aas
daa
hlt
arpl
out
inc
outsb
xchg
sbb
jg
mov
nopl
xchg
and
loopne
rcr
jae
std
and
divl
push
push
adc
in
adc
rclb
push
sbb
cli
fisubl
adcl
adcl
test
in
fisubrs
sbb
fidivrs
inc
sti
bnd
ja
add
fadd
sbb
xor
lock
jg
xlat
mov
cmp
mov
repz
inc
leave
sub
inc
xor
xchg
pop
lods
fldl
in
lcall
leave
push
dec
and
leave
jns
js
faddl
int
mov
jb
in
xchg
xor
fdivrl
and
frstpm(287
das
mov
sbb
dec
test
dec
xchg
dec
jae
mov
je
addl
in
add
cwtl
test
in
das
xlat
dec
mov
and
sub
andl
dec
mov
insb
cmp
scas
pop
movsl
mov
loope
pop
adc
xchg
cmp
shrb
pushf
pop
shlb
ffreep
out
mov
or
bound
dec
and
add
ljmp
shll
mov
mov
jecxz
mov
mov
rcrb
aaa
sarl
pushf
adc
mov
inc
arpl
arpl
adc
out
in
sbb
sbb
inc
insb
pop
sti
push
out
out
orb
jge
stc
lods
mov
std
mov
rorb
sbb
and
pushf
sbb
and
lock
mov
and
or
push
sbb
sbb
ret
xor
loop
js
push
jae
fdivrl
dec
ljmp
adc
repz
xchg
or
fwait
cmp
decl
mulb
mov
out
or
adc
pop
xor
daa
or
cmp
xor
out
sti
jg
shlb
sub
mov
repz
xchg
into
cwtl
aam
cmpsl
cmpsl
sbb
lret
mov
sysenter
mov
movsl
lcall
jg
cld
hlt
shlb
in
loop
leave
dec
loop
or
and
or
in
addb
jle
adc
adc
ljmp
cwtl
out
fsts
mov
inc
or
mov
cmp
ficoml
imul
add
test
mov
out
cmp
xchg
mov
dec
scas
mov
sub
mov
dec
sarl
add
xchg
stos
cmpsl
pop
pop
lret
lds
pop
imul
repz
xchg
cli
lret
ds
mov
push
jno
mov
cmp
aaa
test
ffree
jae
andl
lret
fcmovu
mov
lock
xlat
jle
push
pop
adc
sub
adc
mov
dec
fcmovnb
xor
push
ss
push
inc
pop
xor
inc
cmpsb
xlat
mov
cmpsl
mov
and
call
insb
les
fnsave
int3
jl
pop
xor
inc
or
jmp
mov
push
mov
and
stos
pop
xchg
xchg
idivb
js
xor
add
nop
jecxz
popa
int
xor
dec
mov
inc
xor
mov
repz
push
ss
dec
dec
mov
lahf
ficoml
es
fsts
cmp
dec
xorl
mov
out
push
out
cltd
pop
pushf
sahf
mov
call
push
adc
push
fdivs
or
inc
mov
dec
lods
mov
xchg
sbbb
dec
fistl
sbb
repz
outsl
inc
loop
mov
adc
insl
lcall
rclb
int3
ret
ja
push
or
cmp
cmp
fimuls
mov
cmp
and
jl
push
in
hlt
jg
pop
test
lods
dec
xor
cmp
icebp
jecxz
cs
inc
popf
mov
clc
addb
xchg
vpshaq
sbb
imul
sub
pusha
aad
add
mov
jle
ds
icebp
pop
or
and
pop
cmp
stc
enter
sub
ret
dec
imul
mov
sti
in
xchg
xlat
inc
jae
sub
xor
stc
cmp
fbstp
and
push
inc
out
sub
fidivrs
pop
xchg
and
sarl
insl
js
and
or
add
lods
xor
xor
and
cmp
scas
in
cld
mov
pop
in
adc
inc
cmpl
jl
shll
test
lahf
add
pop
insl
and
loope
push
add
leave
pushf
xchg
xchg
jno
or
pop
pop
movsl
mov
loop
mov
cmpsl
aad
xchg
mov
shrb
insl
movsb
xor
nop
jno
call
pop
imul
or
mov
xor
es
rcrb
sub
aam
sbb
in
cmpsb
xchg
repnz
inc
xor
out
ja
xchg
imul
ljmp
sbb
pop
push
shrb
mov
lret
rol
mov
out
into
cltd
push
push
ss
jne
or
insl
mov
dec
xchg
leave
sub
pop
test
shrl
fcoms
mov
paddb
shlb
push
sbb
jns
pop
push
xor
jl
loopne
mov
addl
push
push
pop
jl
roll
call
mov
into
sub
adc
jno
popf
push
push
repz
pop
mov
sub
sub
int
stos
jne
add
movsl
xchg
addr16
das
dec
pop
pop
adc
test
inc
into
aam
test
add
dec
inc
sahf
test
xchg
or
popa
ja
es
les
push
xchg
push
dec
sahf
jg
cmp
jp
pushf
push
mov
or
loope
mov
outsl
les
xchg
push
fcomi
sahf
dec
nopl
insl
xchg
xchg
and
xchg
pushf
cmp
rorb
imul
cltd
lods
push
lock
sub
bnd
cmp
jo
mov
loop
pop
push
or
lret
push
add
ret
aam
das
adcb
sahf
lcall
out
mull
dec
xchg
scas
icebp
scas
stos
and
adc
popf
xchg
scas
ja
aad
xchg
cs
addr16
movsl
xorb
jge
imul
mov
pop
push
sbb
and
sbb
call
cmp
jns
enter
jecxz
dec
add
aaa
sbbl
and
lahf
and
cwtl
fistl
cmp
ror
test
xchg
and
mov
aam
or
or
loop
mov
jmp
insb
fsubrs
call
movsl
icebp
shll
loopne
sbb
mov
lcall
lcall
jae
adcl
sub
stos
sub
jg
push
mov
imul
mov
inc
fidivs
push
add
xchg
cli
mov
bound
push
in
int3
aas
ret
sahf
mov
mov
inc
enter
mov
cli
das
dec
lds
popf
stos
xchg
mov
or
ss
xchg
and
jne
daa
in
aad
push
dec
in
jmp
subb
or
mov
aas
xchg
push
jne
mov
aaa
cmp
cmpb
push
lock
je
pop
roll
stc
jl
adc
in
mov
mov
hlt
add
shll
mov
ltr
mov
cld
movsb
adc
andl
add
dec
popa
jle
push
aas
aam
xchg
xchg
jbe
lret
cmp
pop
lea
popf
inc
das
sbb
dec
or
iret
jae
push
daa
inc
cmp
inc
rorl
out
push
movsb
cld
loop
loopne
jns
sub
inc
push
xchg
loopne
and
jbe
mov
cwtl
pop
fs
inc
jg
adc
rcll
and
push
xchg
adc
movsb
adcl
mov
jns
jbe
aas
xor
aad
inc
push
dec
push
sarl
xor
scas
mov
mov
pop
xor
or
push
mov
ds
xor
adc
push
push
mov
sarb
paddd
and
movsl
mov
pop
mov
sbb
pop
mov
and
inc
ficomps
sub
nop
cmpsb
push
sbb
pusha
inc
stos
insb
mov
cld
ja
lock
and
cwtl
bound
lcall
xor
fstl
push
nop
push
testl
icebp
sub
imul
jp
dec
add
rcrb
push
pop
push
jp
pop
jnp
ror
pop
test
rep
movb
scas
arpl
int3
inc
int3
push
inc
pop
dec
out
in
call
pop
shld
pop
pop
repnz
pop
xchg
inc
popf
jg
insl
sahf
and
mov
cmpsb
pusha
cltd
push
shlb
test
pushf
rclb
fists
cltd
cltd
xchg
mov
mov
iret
popa
mov
es
adc
lcall
push
inc
scas
pop
and
dec
mov
loop
popf
in
mov
scas
xor
mov
xchg
add
jnp
arpl
loope
add
inc
shll
daa
and
test
sub
inc
sub
jb
out
mov
jl
out
pop
or
inc
or
aaa
cli
xor
sub
out
xchg
jnp
scas
mov
jae
bound
sbb
lret
aad
test
aas
lret
je
pop
adc
ret
insb
sub
add
inc
sbb
aad
data16
fidivl
data16
mull
fucomip
shrb
pop
push
loopne
iret
add
xchg
adc
push
pop
add
dec
fs
inc
mov
pop
jno
adc
mov
push
or
mov
das
clc
inc
xor
iret
pop
sub
push
cmp
pop
std
push
pop
mov
push
jp
std
iret
cltd
add
das
add
cmp
cmpsl
call
adc
test
dec
insb
dec
lods
mov
jmp
ret
int3
lret
fucomip
clc
lret
mov
jnp
mov
int3
sbb
pop
or
xor
xchg
rcr
sub
out
scas
pop
popa
mov
lods
subb
int
sbb
mov
jo
or
js
popa
pusha
push
insl
xchg
movsl
add
imul
xchg
stos
adc
sbb
loop
nop
inc
cs
hlt
cmp
jmp
movsl
pop
and
or
mov
call
in
jmp
outsb
mov
out
test
imul
adc
pop
and
iret
fwait
mov
xchg
pop
push
lods
in
and
sbb
in
inc
andl
mov
test
sarb
xor
fldt
add
ficoms
xchg
or
iret
in
ret
dec
fsubrl
xchg
cltd
xchg
sub
push
cld
cmpsl
icebp
jne
or
mov
sbb
lods
dec
sub
pushf
mov
pop
xchg
sub
decl
outsb
pop
mov
loopne
in
and
mov
mov
outsl
jbe
popa
push
or
jno
jns
jmp
xchg
cmp
and
pop
leave
mov
jg
sub
fidivrs
shl
insl
movsb
adc
or
cmp
pop
fisubl
ret
lock
mov
cmp
mov
fs
cmpsl
and
or
push
rorb
lods
inc
sub
xor
xchg
jp
or
jmp
xchg
in
mov
fiadds
js
and
shlb
out
sbb
push
std
or
pusha
popf
and
cmpsb
jbe
fcompl
xchg
outsl
adc
imul
sbb
or
mov
xchg
ja
fmull
cmp
mov
and
fimuls
in
fnstcw
inc
adc
mov
call
add
cs
mov
dec
divb
jne
std
leave
xor
int3
jns
js
and
mov
popa
mov
push
inc
inc
mov
rcrb
and
pushf
in
dec
iret
mov
mov
push
outsl
lahf
aad
inc
test
pop
inc
imul
outsb
sbb
cmpsl
dec
jae
inc
ret
sub
inc
and
fwait
hlt
mov
mov
in
fwait
ret
js
stc
cmpsl
jb
pushf
rcr
mov
mov
mov
cld
xor
xchg
pop
or
inc
ds
aad
fidivrl
xor
pop
in
mov
jg
fwait
xor
fnstcw
jg
inc
jne
mov
mov
out
roll
in
decb
dec
repnz
jbe
andb
cmp
rcrb
jo
adc
lds
insb
fldenv
cwtl
inc
xchg
mov
aaa
stos
lods
out
dec
jmp
push
xchg
ss
mov
stos
fists
js
dec
pushf
inc
repnz
push
mov
out
mov
push
mov
shr
test
rcll
fbstp
push
movsl
inc
mov
sub
mov
repnz
jle
aam
dec
xor
jnp
push
sub
popa
mov
mov
shrl
push
xchg
lahf
inc
and
imul
and
mov
jne
jne
pop
pusha
cld
mov
dec
ret
jae
lds
inc
push
and
add
inc
jg
xchg
jns
es
inc
pop
push
mov
xor
int3
subb
cmp
fnsave
stc
and
sti
adc
das
sub
xchg
mov
xchg
cmp
sub
dec
loopne
leave
adc
icebp
and
sbb
xlat
pusha
call
sbb
mov
sarl
and
and
push
mov
bound
int3
test
adc
dec
sbb
stos
jbe
imul
iret
and
inc
mov
mov
cmp
in
mov
rcrb
cmp
dec
clc
and
fwait
adc
or
fwait
cmp
lods
fidivrl
cmp
repz
or
adc
cmpsl
sub
addl
pop
xchg
xor
jns
inc
loopne
sti
aaa
cmp
enter
mov
stos
cs
xchg
loope
cmp
sub
jge
popf
mov
push
loopne
xor
sub
dec
xchg
push
inc
mov
movzwl
sub
push
ss
lds
xchg
shl
mov
mov
test
data16
xor
pop
outsl
mov
mov
cmpsb
cmp
popa
rol
aaa
adc
mov
sti
cmpsl
les
or
fcmovbe
lds
mov
cwtl
ror
je
push
push
mov
subb
fs
cmp
clc
mov
jns
push
or
test
mov
cmp
fimull
sahf
push
scas
xchg
mov
xchg
insb
neg
sbbl
jmp
push
jg
xor
pusha
imul
std
jbe
sub
int3
dec
ljmp
aaa
dec
into
push
pop
ljmp
cmp
mov
sub
mov
sub
sub
addb
push
fwait
enter
push
stc
clc
loop
lds
adc
out
dec
pop
rcll
pop
inc
fstps
jb
out
jmp
pop
shrl
add
sub
mov
dec
cli
sbb
xor
mov
cmp
pop
adc
dec
mov
cmp
jecxz
ljmp
xor
xlat
sbb
out
jl
ret
adc
pusha
les
cmp
shrl
add
std
jnp
cmp
sahf
movsb
subb
rorb
push
cmp
js
js
js
jne
icebp
dec
fimull
sub
jge
cmp
fstpl
xchg
sbb
add
call
xor
push
stc
sub
mov
mov
cmpsl
cmp
daa
push
add
gs
fsubrs
fstl
popa
out
icebp
pop
in
bound
add
mov
mov
mov
fs
xlat
inc
mov
cli
mov
inc
nop
shrl
mov
shl
iret
outsl
jge
mov
mov
mov
jle
daa
lock
mov
cld
cmp
addr16
lods
sbb
mov
xchg
dec
aad
xchg
rcrl
lret
or
jecxz
push
inc
leave
jl
xchg
imul
iret
inc
pop
shlb
sub
cli
loope
sbb
js
add
xlat
rorl
jecxz
cs
stos
xchg
bound
aad
inc
xchg
pushf
shl
or
xor
leave
inc
cmpsb
push
rclb
rcrb
ret
repz
inc
mov
xchg
sub
insl
push
jnp
jae
push
stos
incl
fisttpll
mov
jmp
mov
xchg
fwait
pop
and
ds
mov
nop
nop
cs
cmpsl
sbb
dec
inc
xchg
fistpll
and
lahf
cmp
popa
repz
in
addr16
dec
and
cld
add
add
jge
outsl
or
xchg
popa
int
leave
xor
ret
jb
outsl
jp
dec
testb
mov
push
lahf
push
repz
aas
lds
jnp
loopne
add
fdivs
pop
scas
lret
lea
aas
outsb
or
pop
insl
inc
stc
pop
aam
aad
nop
sbb
xor
fs
bound
mov
popf
inc
shl
xchg
cwtl
test
inc
or
xor
adc
outsl
loope
cmpsb
mov
inc
cmc
xor
aaa
jo
jnp
push
test
jg
or
dec
mov
mov
imul
in
out
cmp
sub
inc
inc
je
mov
into
lahf
adc
mov
pop
mov
aas
and
or
lret
out
cmp
out
popf
or
clc
jg
pushf
fs
adc
fstpl
cmpsb
lret
dec
or
lea
roll
test
je
and
push
add
out
sub
enter
pop
and
mov
add
sbb
inc
pop
jmp
adc
mov
jo
add
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
jmp
repnz
repz
addr16
jno
jmp
adcl
addl
aaa
sub
cmp
cmpsl
out
push
xchg
sbb
lock
lock
psubw
jg
or
arpl
loopne
aam
pop
cmp
repnz
pop
add
not
pop
fcomps
mov
sahf
stos
lahf
or
xchg
ret
xchg
and
sbb
push
push
xor
jmp
dec
lret
in
jnp
sbb
inc
andb
jbe
push
lock
and
mov
xchg
xor
xorl
pop
icebp
push
mov
pop
mov
in
insl
out
push
add
add
sbb
in
scas
cs
ss
push
mov
lea
pop
imul
xchg
xor
xchg
jb
pop
jmp
sub
fsubs
push
cmpsl
adc
add
mov
pop
pushf
rolb
scas
mov
jae
mov
iret
cmp
js
xor
sbb
in
add
bound
mov
out
and
and
rorl
or
xchg
stc
loopne
inc
mov
and
add
inc
push
mov
out
mov
push
and
aam
push
ret
es
fdivrl
add
rorb
push
call
push
sbb
stc
shll
ret
add
cmc
test
int3
and
insb
xchg
test
push
repz
repnz
push
xlat
ret
push
movsb
ja
mov
cmpsl
jbe
stos
xchg
ds
pop
fprem
imul
sub
cltd
xor
aas
pop
cmp
je
sub
imul
adc
leave
push
test
cld
dec
std
faddl
das
or
movl
lds
int3
mov
clc
cmp
lock
xchg
std
sbb
ds
lret
push
jns
divb
pop
inc
ss
xchg
testl
xchg
jl
or
loope
xchg
stos
jo
push
addl
int
nop
jbe
xchg
es
pop
pop
repnz
stc
sbb
cmp
inc
imul
or
xchg
roll
loope
stos
push
lds
xchg
lock
leave
bound
jp
sub
imul
out
pop
in
das
xchg
pop
mov
xchg
inc
cmp
xchg
mov
lods
mov
popf
jmp
test
aaa
stos
in
cmp
insb
icebp
pop
aaa
push
in
mov
cmc
and
inc
xchg
inc
sarl
mov
ret
sbb
jl
in
inc
jnp
jmp
pop
dec
js
fcmove
sbb
pop
mov
testl
sti
cmc
movsb
pop
pop
push
popa
push
aad
xor
addr16
les
push
lods
jne
dec
movsl
fildl
adc
imul
sbb
xchg
in
mov
dec
out
rclb
std
pcmpeqb
and
xchg
mov
inc
notl
lahf
or
jbe
sbb
mov
adc
xchg
mov
mov
xor
sub
in
je
mov
int
xchg
fldenv
insb
dec
in
mov
add
movsl
xchg
or
sbb
jne
push
jmp
xchg
xor
push
out
mov
enter
sbb
mov
xor
push
push
mov
js
sbb
lods
je
nop
xor
cmc
fstpt
movsb
gs
push
js
pop
xchg
xor
pop
mov
loop
push
add
mov
lahf
dec
loope
out
or
sub
inc
inc
or
mov
push
sub
jae
push
aas
inc
and
xchg
hlt
dec
stos
sub
inc
in
cs
ret
mov
jge
ja
fidivs
test
cmpsb
xor
int
faddp
add
sbb
mov
push
adcb
das
test
test
je
sbb
nop
aaa
xor
mov
out
mov
jmp
enter
popa
push
add
push
nopl
leave
jnp
sbb
push
sub
jmp
jae
or
pop
add
dec
jmp
sub
pop
test
jge
es
cs
jecxz
loopne
fisttps
lahf
je
pop
enter
std
sub
sub
pop
mov
push
cs
or
jb
cli
psubsw
outsb
js
dec
dec
push
pushf
dec
ret
pop
pusha
in
pop
adc
loope
sub
xchg
xchg
les
shl
dec
add
sarb
inc
bound
arpl
cmc
les
xchg
mov
mov
aad
int3
stc
jb
fists
pop
xor
dec
ja
loop
mov
aas
push
sbb
test
lods
mov
lods
lahf
cmp
cmp
fnstsw
xchg
mov
mov
scas
inc
and
jns
inc
dec
rorl
jle
dec
imul
mov
ds
in
loop
push
xchg
push
adc
adc
loopne
push
fstpl
and
push
fistpl
rol
sarl
js
out
sbb
daa
mov
pop
cli
lea
push
mov
cmp
xchg
cltd
loop
sbb
insb
inc
cmpsl
adc
sub
adc
nop
fsub
mov
daa
jnp
fucomip
lahf
or
fnsave
add
out
push
sub
push
push
repnz
dec
loopne
and
add
mov
fwait
dec
fstps
cs
int
fwait
add
test
push
arpl
icebp
ret
sbb
into
jge
scas
arpl
dec
mov
mov
adc
xor
movsl
sub
jg
adc
paddsw
mov
fwait
test
xchg
in
das
jne
mov
xorl
in
aad
sub
add
mov
stos
sbb
jmp
into
sub
jns
scas
rcrl
or
outsl
sub
pop
sbb
in
enter
dec
add
xchg
iret
sub
adc
aad
rcrb
mov
js
pop
sbb
mov
or
testl
cltd
dec
ja
mov
filds
lahf
int
inc
ljmp
imulb
aaa
cmc
pop
inc
sub
pop
lcall
or
push
or
nop
jmp
jmp
fs
inc
aas
rol
into
les
cmp
push
out
sub
loope
scas
or
or
dec
or
cmp
and
shrl
and
stos
xor
arpl
cmpsb
loopne
mov
std
or
sbb
mov
mov
cld
lods
jmp
aas
in
int3
sub
popa
addr16
bound
and
insb
gs
cmp
fsubr
push
jbe
sti
push
repnz
lcall
mov
mov
pop
xchg
xchg
xlat
rcrb
or
outsb
call
scas
or
jbe
xorb
adc
adc
xor
mov
dec
cmp
lods
cld
scas
out
add
dec
mov
loop
mov
scas
add
repz
mov
pop
push
into
je
mov
dec
fidivrl
lods
xor
adc
pop
call
mov
xor
inc
push
push
sbb
sub
frndint
adc
mov
sbb
mov
inc
pop
add
int3
nop
repnz
add
or
filds
in
into
stc
insb
jb
cmp
mov
cmp
movsl
ss
stos
sti
cmp
loope
int
aam
adcb
and
dec
inc
cmpl
icebp
out
and
sub
push
comiss
xchg
push
lea
jmp
insb
sbb
idivl
pop
enter
sahf
push
or
ds
or
mov
push
jbe
cmp
mov
jmp
clc
xchg
mov
mov
cmpsl
out
psrld
push
arpl
insl
addr16
sahf
cmp
push
sub
or
paddsb
pusha
aaa
jae
xchg
mov
xor
daa
movsb
xor
inc
fsubrp
in
push
enter
fdivl
sbb
and
dec
sbb
lds
fisubrs
js
adc
orl
fs
in
add
mov
clc
loope
call
stos
mov
inc
adc
mov
pop
pop
mov
jne
nop
psubsw
test
hlt
jge
jecxz
shll
dec
jb
dec
adc
or
dec
dec
aam
push
xchg
lds
and
xchg
iret
and
popf
flds
popa
inc
daa
mov
aas
push
xchg
hlt
xor
lods
xor
lcall
repz
mov
out
push
or
addl
je
sub
aas
cwtl
push
xchg
sarb
sbb
inc
ja
sbb
sti
std
lahf
test
mov
pop
cmc
sub
fdivrl
insb
add
xor
sbb
lods
add
fstpl
mov
push
pop
mov
stos
clc
test
into
xchg
shrb
icebp
shrl
fwait
push
mov
cli
xchg
or
push
pop
cmp
int3
in
in
cmp
xchg
adc
dec
mov
cltd
ds
push
xor
in
loopnew
imul
lret
add
xor
psrad
movsb
cmc
mov
jl
and
or
movsl
and
repnz
fisttps
sub
xor
enter
das
push
pop
cmpsl
adc
test
test
dec
dec
push
push
sbb
cmp
test
pop
jp
jno
jmp
jle
fwait
leave
jg
add
jne
or
xor
andnps
cs
push
in
stc
aaa
sub
scas
lods
sub
call
insl
int
ja
in
pop
inc
das
rorl
pop
xchg
dec
or
mov
adc
jecxz
les
mov
das
fdiv
outsl
icebp
sbb
xchg
cmp
cmp
int3
xchg
add
filds
pop
add
ljmp
lret
jmp
cmpsl
xchg
mov
iret
insb
movsb
sysexit
mov
stos
and
sub
or
in
mov
into
aam
inc
sbb
and
lds
mov
add
xchg
into
jb
mov
out
push
jb
inc
in
jmp
jnp
jp
fbstp
sbb
rorl
fldcw
sahf
mov
inc
or
pop
ret
pop
jnp
pop
roll
psubd
push
pop
jle
cwtl
inc
scas
jb
lods
xchg
xor
dec
jns
cmp
push
sub
jae
mov
push
pop
addb
loopne
in
sub
int3
jmp
out
movsb
int
cli
lods
pop
sub
stc
leave
mov
in
adc
cs
push
fcmovne
adc
adc
mov
pop
xchg
and
pop
in
in
adc
xchg
mov
jbe
rclb
xchg
lcall
incb
cli
lret
mov
xor
movsl
lret
xchg
sahf
sbb
or
pop
xchg
xor
in
imul
repz
jbe
add
lret
pop
fstpt
jns
mov
sub
stos
test
aas
jo
adc
test
scas
xacquire
pop
mov
xor
lcall
xor
mov
push
mov
adc
cmpsb
roll
imul
adc
orb
loop
jns
cmc
mov
stos
add
mov
ljmp
cmp
cmp
in
in
jmp
push
mov
sub
cmp
stos
mov
enter
dec
lods
mov
inc
ret
xchg
dec
sbb
hlt
xchg
cmp
ja
push
adc
adc
adc
int
push
sub
xlat
fnstenv
inc
fisubrs
adc
xlat
std
xchg
push
adc
jp
push
jl
test
mov
jae
cmp
xorb
loope
movsl
adcl
out
ja
adc
xchg
pop
loopne
ret
out
int
sti
maxps
and
push
std
mov
push
mov
fidivrs
xchg
mov
adc
mov
loopne
xlat
dec
stc
mov
or
push
repnz
addb
sbb
xor
push
int3
jns
pop
repnz
add
push
iret
push
xchg
jmp
and
pushf
in
xor
fstpl
call
pop
pop
pusha
enter
lea
sbb
sub
test
sbb
sub
iret
jno
in
mov
jno
push
sub
jp
pop
xor
xchg
fnclex
enter
mov
xchg
adc
or
jl
jecxz
jb
mov
or
mov
inc
adc
vpmacsdql
jecxz
xchg
stos
or
es
mov
fdivs
dec
add
mov
ret
outsl
mov
xchg
sti
dec
sbb
inc
test
fsub
adc
xchg
push
cmp
xor
push
lahf
fdivrs
xlat
jns
out
mov
xlat
xchg
adc
rcrb
xchg
cltd
fdivs
ljmp
push
adc
loope
mov
pop
or
loop
and
sti
aad
inc
pop
lea
scas
sbb
adc
ficoml
mov
or
xcrypt-ecb
cmpsl
dec
inc
push
ljmp
ja
xlat
xchg
inc
ss
adc
fs
mul
sbb
pop
stos
and
movl
lds
add
cmc
fldpi
or
lahf
cmp
fldt
int
sub
lahf
lds
push
adc
jns
lods
andb
jno
add
push
jge
push
and
or
and
cs
scas
repnz
nop
inc
sbb
xchg
sbb
inc
sub
stc
pop
rcll
mov
or
pop
inc
iret
sub
pop
enter
into
mov
adc
sbb
pushf
xor
mov
push
mov
and
gs
and
jnp
mov
xchg
dec
movsl
lods
mov
nop
xor
adc
jp
mov
xor
xorl
mov
into
push
push
push
add
and
iret
mov
popf
test
xchg
fwait
mov
jl
or
test
or
rcrb
test
sbb
lods
xor
dec
add
xchg
mov
popf
push
pop
hlt
add
sub
inc
imul
dec
scas
enter
jae
mov
nop
cmp
push
inc
mov
cmp
cmp
sarb
sub
fistps
ja
mov
rol
and
mov
notb
adc
sbb
popf
pop
notb
cmp
clc
and
mov
sub
sbb
loopne
jge
mov
or
or
sti
xchg
loop
jl
fistl
push
gs
iret
push
mov
aam
xchg
or
inc
xchg
aaa
xor
sahf
cmp
and
test
repz
pop
or
pop
lock
and
cli
fnstsw
pop
mov
lret
int
stos
mov
nop
ret
data16
lahf
mov
jbe
cld
sub
es
aas
out
mov
mov
ja
nop
cltd
addr16
push
sub
dec
cmc
out
fildll
and
jecxz
mov
mov
fisttps
imull
dec
and
xchg
sahf
ficoms
xchg
scas
pop
shll
cmpxchg
xchg
jg
mov
push
or
xlat
or
mov
shlb
mov
mov
sahf
xor
xor
and
outsl
repnz
iret
sbb
leave
dec
jle
ficomps
push
incb
inc
xlat
sub
adc
push
fwait
lret
pop
popf
jae
jb
or
gs
push
repz
sub
mov
in
ror
addr16
mov
mov
pusha
in
dec
loop
push
adc
or
loope
ss
xchg
out
lods
fistpll
adc
pop
sbb
cmp
mov
inc
add
pop
pop
test
test
or
movsb
ljmp
movsl
xchg
pop
pop
inc
cmp
pop
dec
icebp
sub
out
mov
in
sbb
std
cwtl
ret
out
test
fwait
cwtl
imulb
fmuls
fiaddl
das
je
jb
ss
push
outsb
lods
call
test
pop
out
cli
ficomps
cmpl
out
jp
call
stos
jl
mov
xor
and
lcall
fldt
xchg
cmc
js
ja
ss
call
push
mov
negb
out
xor
jb
dec
push
cwtd
subl
aad
pop
ss
sub
into
js
test
aad
jne
outsl
cld
jmp
push
pop
add
xor
pop
lods
pop
fdivrl
push
mov
add
jmp
fmull
movsl
push
shrb
jb
add
lret
pop
push
lahf
std
andb
mov
cmpsl
leave
in
fnstcw
out
jge
xchg
pop
fisttpll
mov
test
or
xbegin
ret
sbb
xor
mov
mov
adc
or
jge
fwait
xchg
sub
push
sbb
sbb
fmull
movsl
ljmp
mov
enter
movsl
push
inc
leave
push
pop
push
loopne
out
fmull
and
adc
dec
fcoml
pop
dec
xchg
jecxz
mov
xchg
leave
jbe
out
hlt
hlt
test
push
hlt
ficoms
rcrb
fdiv
push
outsl
stos
mov
xchg
je
jg
pop
cltd
pushf
and
in
roll
int
sahf
pop
das
pushf
mov
rclb
xchg
ffreep
stc
sbb
out
xchg
test
aas
insl
pop
inc
cmp
movsl
mov
pop
pop
inc
jo
icebp
jne
mov
out
les
scas
mov
ljmp
cmp
cmp
fs
xchg
mov
ret
push
stos
inc
xchg
cmp
idiv
xchg
sbb
push
xchg
pop
mov
cli
out
pop
in
add
in
add
push
scas
mov
push
cmp
sbb
lods
sub
ret
xchg
or
loope
pop
rolb
dec
mov
add
or
ret
loop
outsl
into
mov
pop
push
scas
push
dec
shr
sahf
adcl
mov
shll
and
sub
adc
in
lcall
cltd
sbb
jmp
or
das
enter
fiadds
sbb
add
in
gs
repnz
call
dec
xor
adc
dec
ljmp
lea
and
shlb
shrl
das
cmp
mov
sub
push
mov
aad
lahf
jg
sbb
inc
xchg
addb
xor
inc
mov
xchg
lret
enter
or
push
mov
mov
into
in
loop
mov
xchg
mov
clc
or
pusha
xor
fnsave
mov
add
fiadds
jecxz
cmc
pop
and
jmp
xchg
imul
xchg
xchg
jae
push
adc
cmpsb
shrb
push
testl
fcomps
jnp
adcb
popa
lock
cli
sub
or
loopne
xchg
insb
add
fists
stos
into
inc
mov
loope
in
and
mov
pusha
addr16
or
push
bound
adc
fwait
mov
pop
lret
cmp
push
hlt
sub
inc
pop
stc
outsl
mull
into
cmp
sub
push
inc
shlb
xchg
pop
mov
loop
mov
mov
rol
mov
int
adc
sub
add
xchg
sbb
icebp
mov
in
or
test
or
mov
shll
push
mov
mov
xor
addr16
lea
lcall
gs
pushf
push
xor
test
dec
in
xchg
push
sbb
in
cs
test
jno
dec
cwtl
xchg
ret
int3
inc
inc
inc
pop
in
lcall
lods
mov
fdivrs
and
mov
insb
aas
test
sbb
pop
pop
jp
dec
mov
lods
in
out
push
push
gs
jnp
sbb
jmp
push
and
cltd
fnstsw
mov
aas
or
sbb
jp
pop
inc
lock
jnp
adc
sbb
push
dec
jg
sbb
xor
push
das
jae
xchg
cwtl
push
mov
mov
mov
lea
mov
cltd
cmc
jo
stos
sub
xchg
xchg
int
jp
enter
or
ret
in
sub
lret
xchg
sub
fistpll
cmpsl
cld
cltd
cltd
rcr
push
in
sbb
xchg
push
mov
sub
sti
leave
and
xchg
fwait
je
test
lcall
notb
cld
mov
divb
addr16
xor
test
aam
neg
lds
ss
adc
testb
ss
and
adc
ds
xchg
mov
mov
rolb
dec
xchg
test
inc
mov
mov
sub
lea
incl
into
rclb
stos
int3
das
mov
inc
or
dec
pop
jo
xor
inc
sti
cmpsl
mov
inc
add
sarl
fisubs
jl
arpl
outsl
push
mov
push
outsl
outsl
roll
inc
lods
and
fs
push
xor
mov
jp
imul
ss
bound
push
adc
pop
or
mov
sub
ja
lcall
shrl
add
aad
sbb
mov
hlt
jmp
inc
mov
mov
jg
sub
inc
icebp
mov
push
roll
push
clc
fcomps
xchg
push
mov
stc
cwtl
sub
cmp
dec
jecxz
jecxz
ja
jno
or
sub
shr
enter
adc
testl
in
sub
xchg
mov
xchg
repnz
jo
aas
stc
test
xchg
ljmp
aad
cmp
xor
mov
aad
cmpsl
movsb
repnz
xchg
mov
mov
inc
cmp
mov
lahf
push
sbb
dec
loop
add
mov
cmp
fwait
jno
cmp
cmp
fwait
orl
js
fistl
jns
ljmp
and
jbe
outsl
in
inc
movsb
arpl
cmpsl
jl
mov
insl
mov
inc
shlb
insl
xor
mov
xor
loope
mov
in
loopne
loope
xchg
add
dec
mov
outsl
fnstenv
sahf
js
leave
loop
daa
add
inc
inc
push
mov
pop
cmp
and
jle
cmpsl
sub
or
into
rcl
ljmp
test
stos
pop
mov
hlt
add
aas
dec
pop
and
inc
cli
loopne
fmull
and
aad
or
lahf
popf
rcrl
jb
dec
repnz
sbb
popa
mov
fcomps
sbb
ret
shrb
out
popf
jne
fsubrs
test
fsubs
push
orl
addb
xchg
negl
cli
sub
aad
pop
xor
xor
das
insl
movsb
or
cwtl
pop
scas
cmpb
movb
pop
aaa
adc
pushf
mov
xor
mov
loopne
hlt
stos
pop
mov
in
mov
inc
mov
pop
pop
orl
clc
sbb
xchg
pop
or
jl
loop
in
ja
xchg
mov
call
stc
dec
jp
adc
mov
adc
rclb
inc
add
icebp
sbb
test
cmp
mov
dec
mov
xchg
orl
inc
and
push
pop
pop
mov
cmc
cmp
ret
xor
aaa
adc
jno
mov
xor
push
and
icebp
roll
pusha
fldcw
mov
mov
lret
movsl
and
dec
dec
ret
inc
adc
popa
lds
xchg
orb
jle
and
rcrl
sbb
and
push
inc
and
pop
fsubrs
cmp
sbb
out
movsb
loope
or
cmpsl
pusha
xor
imul
xor
icebp
scas
and
mov
push
daa
popf
arpl
jl
add
les
xchg
sbbb
dec
mov
imull
jp
push
jnp
stos
pushf
sub
and
add
inc
lret
dec
js
rcrl
fisubrl
inc
and
cs
fmul
jo
out
and
cmp
jb
xchg
in
sti
lds
mov
bound
ret
push
mov
and
mov
jo
shl
imul
mov
popa
jb
mov
mov
pop
jne
xlat
leave
sbb
mov
xor
push
call
jne
inc
mov
out
adc
data16
pop
jl
shrb
xchg
push
mov
shl
mov
pop
scas
sub
fsubs
sbb
sbb
stos
rolb
inc
je
mov
mov
es
cmp
lahf
mov
sbb
cld
lods
das
push
adc
sub
dec
das
pop
mov
and
test
sub
sub
pop
xor
lahf
inc
lahf
push
sbb
imul
lret
outsl
sbb
hlt
pop
sahf
jp
lods
lods
es
andb
outsl
movsb
imul
or
aas
xchg
jo
fldl
pop
jbe
dec
lret
xor
mov
jns
pop
xchg
ret
push
rcrl
sbb
cwtl
or
jmp
cmpsl
adc
hlt
mov
adc
movsb
or
fucomip
fiaddl
sti
jmp
sbb
jo
inc
int3
outsb
movsl
sti
mov
mov
pop
pop
stc
pushf
es
xchg
xor
mov
pushf
clc
test
lret
xchg
mov
das
push
pop
arpl
outsl
mov
lret
mov
insl
pop
pop
mov
sbb
bound
pop
xchg
out
mov
sbb
movsb
mov
dec
mov
push
mov
mov
aas
int3
adc
xor
out
jl
imulb
movsb
lcall
pop
dec
repz
mov
xor
sub
inc
cli
mov
scas
pop
sahf
aam
imul
lods
pop
jg
aad
daa
iret
jno
mov
js
call
insl
mov
mov
adc
inc
and
orb
xchg
mov
jmp
jle
mov
lcall
sti
ret
mov
out
adcl
sahf
fnsave
xor
push
clc
pushf
add
test
and
je
xchg
push
pusha
sub
adc
cmp
mov
add
pop
sub
incl
mov
loope
sbb
test
pushf
outsl
mov
das
int
sbb
cmp
mov
cwtl
bound
cltd
imul
out
out
cld
pushf
jp
sub
adc
loopne
in
xor
or
loop
push
jp
xor
insl
enter
subl
or
mov
test
push
mov
pop
lret
hlt
push
sti
notl
es
or
mov
test
mov
call
fs
sub
or
sbb
cs
dec
mov
fmul
inc
cmpsl
pop
pusha
hlt
jecxz
sbb
scas
adc
dec
roll
push
adcb
movups
xor
add
nop
mov
sbbb
inc
pop
pop
mov
js
rcl
scas
jp
inc
das
and
clc
mov
pop
sbb
push
push
jmp
or
sbb
ljmp
xchg
loopne
dec
pop
cmp
mov
daa
sahf
fcoms
leave
rorb
loop
or
and
popf
xchg
cwtl
mov
fnstenv
bound
push
sbb
or
push
xor
dec
pop
add
cmc
pop
pop
ds
out
adc
mov
clc
fidivl
jle
in
cltd
jge
cld
push
loope
enter
jle
enter
push
fstpt
jp
jp
lret
lea
stos
jp
xor
mov
xchg
push
or
test
dec
js
shll
add
clc
das
popa
inc
inc
sbb
xor
shrb
cli
cli
fcmovnbe
mov
sahf
nop
mov
push
in
outsl
sub
fucom
aad
xor
push
xor
push
add
lea
movb
sbb
sbb
cmp
mov
lahf
sbb
mov
sbb
sarb
scas
dec
cltd
or
mov
mov
mov
imul
lahf
pop
lds
pushf
jns
mov
ja
xchg
leave
mov
inc
jge
xor
aam
loop
mov
stos
push
mov
xor
repz
mov
push
stos
inc
adc
jns
push
mov
inc
outsl
inc
xor
and
stos
stos
mov
loope
stos
xor
fwait
and
cmp
pop
cli
mov
cmc
or
lcall
lock
lcall
gs
jmp
ja
bound
adc
push
inc
loopne
das
cmp
cmc
or
jbe
lahf
sti
mov
cmp
mov
jbe
insl
or
negb
stc
or
js
pop
mov
cmp
jle
popf
add
mov
push
xchg
popf
iret
es
adc
inc
jmp
mov
adc
pop
clc
div
jo
lret
push
fnstenv
dec
adc
into
inc
and
ss
rolb
jbe
mov
ss
sub
shrl
jp
lret
jge
adc
inc
sub
enter
out
xchg
or
jecxz
adc
insb
mov
into
pop
inc
enter
js
aam
xchg
inc
push
orb
xchg
add
pushf
bound
les
jbe
ss
pop
xchg
sbb
or
jg
cmp
add
sub
ret
inc
add
lret
pop
lock
mov
xchg
das
push
cli
jp
test
sub
push
loopne
test
sbb
and
movsl
adc
jno
pop
pop
xchg
inc
mov
cmp
xchg
test
mov
arpl
fdivrs
cwtl
stos
mov
sbb
sbb
pop
pop
pop
jle
inc
sbb
jecxz
push
ljmp
std
push
lock
pop
mov
pop
repnz
jnp
cld
popf
cmp
sbb
ja
push
cmp
sub
fcomp
sub
fmull
retw
sub
orl
or
pusha
stos
cmpsb
add
and
subl
testb
dec
int3
repz
shrl
shl
js
cmp
xor
int3
cs
mov
fisttpl
fisttps
cmp
das
pusha
imul
sbb
scas
sbb
adc
xor
test
insl
test
xlat
fnstcw
and
jmp
jns
ljmp
out
sbb
jmp
and
into
push
popa
scas
insl
sbbb
pop
jne
sub
cltd
mov
adc
xor
in
sbb
mov
mov
cmp
lds
jnp
movsl
push
test
popa
mov
mov
push
cmp
and
jge
imul
daa
xor
sub
and
test
lret
push
int3
jg
adc
dec
fdiv
jl
pop
insb
add
or
hlt
push
jns
repz
fcmovbe
lcall
or
mov
mov
arpl
adc
lea
loop
pop
lods
loope
popa
cld
in
sub
dec
pop
xchg
jge
outsl
je
adc
ffreep
out
mov
push
test
lcall
pop
sub
and
mov
mov
and
in
push
cs
xchg
jbe
sub
and
stos
imul
xor
fwait
mov
imul
ficomps
mov
lock
jge
xlat
jl
mov
adc
mov
push
popf
dec
stos
jecxz
inc
cmpsb
movsl
inc
ja
push
imul
pop
lds
or
fdivl
shrb
lret
jmp
adc
test
cmpsb
xor
sub
pop
addl
mov
adc
pop
cmp
pop
mull
push
push
jmp
inc
lds
popf
sub
mov
inc
jle
int3
cmp
movsl
xchg
scas
scas
lret
push
xchg
jbe
pop
fwait
jmp
or
lds
xchg
push
das
test
sub
cmp
cli
or
inc
dec
loop
imul
sub
xchg
scas
push
lods
mov
xor
push
insl
xchg
push
lods
mov
add
aaa
mov
clc
ror
push
mov
test
mov
in
sbb
xor
jne
dec
xor
sub
xchg
inc
adc
add
mov
xchg
add
fcomip
adc
out
test
xor
pop
inc
mov
imul
pop
dec
cmc
clc
sub
jg
and
gs
cmp
xchg
int
sti
adc
mov
pop
sbb
shl
gs
fldt
outsl
add
mov
lds
mov
popa
jbe
xor
imul
push
int3
mov
mov
jg
cs
clc
xor
mov
hlt
insl
or
outsl
cwtl
mov
fsubl
adc
push
and
xorl
daa
and
repz
and
or
add
ja
or
iret
es
pop
adc
ljmp
sarl
nop
cs
sub
loopne
mov
loope
push
sahf
loope
push
and
push
dec
inc
lods
mov
cmp
lock
cmpsl
jmp
lahf
cmp
gs
outsl
sbb
mov
add
add
lods
ja
cld
addr16
inc
fsubl
cwtl
ret
div
data16
cmp
adc
jl
movsl
ret
ljmp
mov
jg
mov
sbb
xor
pushf
test
lahf
cltd
jns
fildll
inc
mov
aaa
jns
cmp
hlt
addr16
push
dec
in
cli
xor
aad
dec
jns
mov
into
pushf
pop
lahf
mov
xchg
inc
jmp
fldpi
dec
sub
mov
cmp
leave
loop
imull
lods
in
xor
adc
bound
insb
xor
mov
sarl
or
pop
mov
lea
xor
pop
inc
decl
outsb
dec
dec
pop
iret
mov
pushf
aaa
test
mov
dec
ficompl
jnp
nop
mov
mov
clc
dec
addr16
cmc
call
xchg
inc
push
cmp
push
inc
setl
lahf
inc
repz
jbe
mov
pop
jns
sahf
faddp
or
out
adc
pop
mov
pop
fisttpl
adc
adc
sbb
jmp
cmpsl
push
fcom
pop
inc
fmul
int3
insl
dec
adc
test
push
test
test
xor
dec
cli
jbe
aas
ficoml
imul
or
mov
pop
stos
movsl
mov
adc
inc
jg
mov
mov
insb
insb
aad
sbb
fldcw
ljmp
pop
repnz
add
fisubs
cli
hlt
xor
mov
stos
adc
icebp
dec
mov
inc
xor
stc
fldln2
adc
movsb
dec
adc
and
xlat
mulb
add
mov
fs
test
stos
add
mov
push
push
cmp
pop
pop
loop
pop
xor
mov
packssdw
hlt
scas
aam
push
xchg
sbb
xlat
adc
icebp
std
inc
dec
cli
call
xor
test
jl
sti
int3
dec
adc
fs
js
dec
mov
mov
enter
jmp
adc
xchg
and
loope
cs
mov
add
pop
hlt
stos
pop
in
js
notl
lods
cmp
dec
hlt
pop
inc
mov
mov
pop
jl
mov
or
cmpsb
iret
outsb
loop
cmpsl
push
cmpb
cmp
pushf
rclb
mov
xor
push
in
jl
pusha
cmpsl
in
ret
mov
sbb
repnz
inc
aaa
sbb
xchg
arpl
mov
mov
sbb
jno
out
pop
js
xor
jb
pop
push
out
scas
add
push
jnp
jecxz
adc
fbld
and
sub
add
pop
mov
cwtl
xchg
cmc
inc
inc
aad
cwtl
or
adc
pop
sti
shlb
fwait
push
sti
sbb
in
ds
test
inc
cld
sbb
mov
xor
mov
sub
loop
pop
xchg
or
imul
and
enter
or
ljmp
mov
adc
push
xchg
imul
mov
mov
fcompl
or
outsb
and
pop
sbbb
jb
hlt
add
mov
pop
xchg
push
jecxz
les
es
dec
inc
insl
pop
and
decl
movsb
mov
sbb
dec
jecxz
and
lods
mov
hlt
push
xchg
call
mov
outsb
movsb
ret
mov
lret
sbb
xor
call
out
or
repnz
nop
mul
xchg
dec
mov
push
jle
add
test
xchg
stos
push
addr16
rol
lcall
lret
push
mov
add
xchg
pop
xor
mov
dec
jg
das
jnp
lods
shrb
gs
mov
cld
sub
in
clc
cmpsb
addl
enter
ret
rorb
sub
lret
lock
sar
push
into
pop
cmp
mov
stos
pop
adc
pop
sub
sub
rcll
sbb
jmp
adc
ret
sarl
mov
xchg
xlat
aad
push
xchg
push
inc
out
add
and
mov
add
orl
and
dec
cld
mov
or
test
sbb
cld
lods
clc
pop
js
cmp
xchg
rcr
mov
cmc
pushf
scas
push
pop
lods
loope
mov
pop
fidivs
mov
add
es
pop
inc
mov
lret
pop
push
int
cmpsb
xlat
sbb
aaa
pushf
push
inc
push
pop
pop
popa
cmc
int3
out
ret
daa
enter
jge
cmpsb
outsb
pop
or
mov
cmp
mov
mov
fs
mov
sub
mov
aad
fs
leave
mov
mov
frstpm(287
lods
fwait
hlt
leave
dec
ret
mov
setno
dec
adc
nop
sbb
insl
and
dec
imul
cmc
push
lods
sbb
pop
fs
pop
mov
push
adc
xchg
pop
xchg
xor
mov
imul
stos
sbb
sub
jg
mov
fs
xchg
fstl
rcr
adc
mov
insl
pushf
divl
je
mov
shrl
xchg
adc
insl
mov
jae,pt
stc
adc
sbb
dec
inc
mov
xor
sbb
fwait
rcr
cmpb
cmpsb
mov
icebp
scas
fwait
outsb
fs
lock
leave
lahf
jg
scas
mov
jge
pop
mov
adc
pushf
pop
stos
sbb
cli
mov
scas
lds
xchg
enter
push
pop
lods
sub
sub
je
rclb
xlat
fcmovnbe
jb
add
es
rorb
inc
mov
data16
es
bnd
mov
popf
inc
jo
sbb
push
inc
icebp
mov
and
dec
and
std
iret
mov
adcb
push
jb
stos
aad
jno
cmpsb
notb
enter
cmpsb
sbb
dec
cltd
aaa
lods
out
pop
popa
adc
enter
dec
test
jmp
mov
xchg
cltd
jmp
out
jge
dec
ret
fldt
push
or
mov
mov
gs
add
lods
mov
jae
inc
xor
in
xor
ret
push
insl
je
out
mul
clc
adc
push
test
je
cld
adc
inc
inc
dec
xchg
lock
or
jno
popa
sti
jbe
or
cld
jne
jae
lods
mov
inc
sub
ja
mov
stos
push
adc
stos
cs
and
int
cmpsl
ret
adcl
sahf
jge
xchg
test
sub
cmp
subb
pop
popa
xlat
scas
pop
hlt
mov
pop
inc
loope
jae
fs
and
stos
addl
adc
jmp
or
lods
roll
movsb
aad
sub
ja
cli
mov
push
pop
mov
cmp
cltd
sbbb
sar
iret
scas
mov
inc
lods
cmp
in
mov
fcmovne
divl
stc
dec
mov
das
and
jecxz
adc
ficoml
inc
aam
mov
int
loopne
adc
mov
cmp
js
jno
sub
fs
mov
xchg
hlt
movsl
sub
cmc
jnp
pusha
mov
push
and
adc
and
inc
xchg
call
inc
push
mov
xchg
movsb
inc
sbb
mov
arpl
pop
in
mov
and
pusha
roll
or
or
sub
gs
sbbb
mov
pushf
loope
xor
fisttpl
shrb
mov
jb
adc
mov
lods
jmp
std
movsb
add
int3
or
lcall
les
inc
cltd
jmp
add
dec
lods
cli
clc
leave
jbe
push
xchg
insl
add
mov
push
inc
arpl
jb
nop
fdivrl
addr16
dec
adc
xchg
fwait
add
cs
aaa
mov
bound
mov
xor
scas
fwait
imul
notb
mov
xchg
imul
mov
jecxz
in
adc
cmpsb
out
cmp
inc
icebp
ljmp
mov
add
fisttpl
jge,pn
mov
adcb
jo
mov
stos
shr
inc
fistl
jle
dec
int
jo
mov
fcoms
mov
sub
mov
dec
dec
xor
adcl
ror
jp
mov
pusha
dec
sub
jno
inc
enter
pop
dec
jns
cmp
xor
and
sarb
cltd
roll
cmp
icebp
loop
pop
sub
movsl
inc
sbb
push
orb
cs
mov
pop
mov
jg
dec
push
push
mov
xchg
shrl
mov
cwtl
inc
pop
shrl
rol
or
cmp
and
in
sbb
mov
fs
mov
lret
jmp
cmp
inc
sbb
lock
mov
jne
test
and
in
es
test
mov
push
jbe
std
xor
imul
xchg
mov
sbb
fidivrl
orl
pop
outsl
inc
mov
test
xchg
fcmove
cmpsl
in
add
das
aas
scas
aaa
adc
fstp
add
in
jle
dec
lds
pop
pop
inc
dec
add
rcll
add
cli
jo
push
fidivrl
mov
shll
cmc
jb
out
outsl
mov
add
mov
pop
push
xor
sbb
in
inc
or
cmp
add
add
sbb
js
push
mov
pop
incb
inc
push
lds
out
xchg
insb
and
sbb
insb
push
rol
sub
xor
and
inc
pusha
sbb
cli
push
aas
bound
call
ror
xor
sub
xor
shlb
pop
sub
xchg
push
mov
mov
in
mov
fcomps
mov
pop
inc
xchg
adc
add
or
push
push
jno
mov
pop
test
add
push
lods
add
hlt
rcll
push
dec
add
sbb
lea
push
lods
cmp
or
dec
insl
or
hlt
hlt
shl
jg
mov
lret
pop
push
ss
orb
sbb
add
and
mov
mov
push
adc
repnz
push
xchg
jno
xor
iret
imul
sbb
into
call
aas
push
xchg
out
shlb
xchg
call
adc
aam
ss
stc
mov
mov
mov
push
lret
mov
pop
fwait
lds
jnp
stos
adc
in
ja
jmp
dec
push
enter
aam
jmp
push
push
arpl
push
insl
jbe
lret
mov
sub
faddl
xchg
sbb
sub
push
std
lcall
ret
mov
stos
pop
dec
xchg
add
lea
aad
mov
and
mov
outsb
into
pop
pop
ret
sbb
push
or
lahf
out
rcl
mov
mov
outsl
cli
aam
out
jae
pop
icebp
push
inc
xchg
dec
pop
scas
xor
pop
push
and
test
xor
push
adc
jo
fidivl
loope
sbb
sub
dec
jnp
aad
push
mov
xchg
ljmp
and
pop
xchg
rclb
xchg
js
cmp
sub
popf
int
pop
cld
or
mov
repnz
idiv
pop
cmp
mov
inc
adc
and
mov
repz
jl
hlt
mov
xchg
cmp
sarb
jle
ss
mov
adc
adcb
lods
pushf
push
insb
mov
jno
decb
popa
jl
sbb
std
clc
into
test
aas
fisubrs
mov
out
dec
dec
mov
out
decl
pop
mov
adc
nop
or
inc
pop
btsl
xchg
les
in
xchg
push
flds
jno
pop
or
das
xchg
aas
mov
lock
aam
pop
jge
and
call
lea
xchg
aaa
dec
aad
ret
xor
pop
ss
ret
push
or
jecxz
jns
orl
sub
sub
daa
sub
and
ss
or
ljmp
sbbb
pusha
pop
pop
xchg
js
jecxz
jae
cmpsb
or
aam
imul
sub
xor
lret
test
fisubs
sub
mov
and
or
pop
add
dec
xchg
jns
cmc
mov
mov
out
xor
daa
dec
sbb
cmp
sbb
jle
xor
inc
aad
out
insb
out
push
sbb
enter
fs
rclb
stos
add
loope
lds
ret
add
popf
and
jmp
mov
out
adc
mov
shlb
sar
jnp
int3
mov
xchg
int3
js
scas
inc
xchg
cmpb
gs
lods
pop
sub
fcomps
push
push
mov
shll
sti
inc
and
fs
inc
js
mov
sub
fmuls
lret
mov
sahf
jle
mov
inc
test
xchg
cld
or
lret
or
inc
jns
lahf
jbe
xchg
sbb
push
xchg
xchg
ret
cli
lsl
addr16
fs
lds
jge
sbb
mov
into
in
loop
dec
or
imul
and
xor
pop
pop
inc
mov
mov
scas
outsl
mov
stc
cmp
push
mov
ja
lods
add
fbld
mov
lcall
jno
testl
in
inc
jp
sbb
mov
data16
cmp
mov
inc
push
dec
rcrl
sbb
scas
rclb
jecxz
push
push
je
mov
outsb
testl
jmp
inc
into
cld
dec
add
mov
dec
cs
das
lods
jo
shlb
jmp
cmp
inc
sub
add
dec
aam
cmp
mov
or
mov
shlb
mov
dec
mov
push
xchg
adc
insb
mov
arpl
pushf
add
icebp
xchg
pop
adc
adc
shll
pop
call
and
mov
pop
aaa
push
imul
fidivrs
dec
mov
mov
out
dec
pop
out
orl
inc
loope
add
jae
testb
and
mov
mov
sub
push
loope
or
outsb
jge
mov
ljmp
mov
mov
outsl
sub
aaa
dec
imul
push
or
mov
adc
ja
and
sub
mov
out
out
test
fimuls
mov
das
jne
pop
or
pop
mov
sub
cmp
fsts
fmul
pop
mov
adc
sub
orl
sti
lahf
daa
pop
mov
xchg
xor
sub
aad
pop
insb
jbe
test
xor
or
clc
outsb
rorb
jno
leave
adc
out
dec
or
push
lods
add
popa
fdivrs
fiaddl
sbbl
sub
fildll
stos
xlat
jmp
sbb
cld
jbe
outsl
lret
into
pop
or
adc
std
adc
sub
hlt
out
ljmp
lcall
stos
out
ret
ja
es
nop
push
adc
mov
mov
sarb
movsl
and
scas
pop
out
inc
mov
jae
call
idiv
jp
sbb
push
fucomi
sub
cmp
dec
mov
sti
push
sti
pop
inc
xchg
push
cli
mov
in
lret
cmp
inc
in
xor
rclb
fcompl
and
int
mov
sahf
push
fs
push
or
adc
rorl
mov
jb
out
jb
out
jno
push
jno
and
dec
repz
jmp
xchg
add
sub
icebp
push
pop
addb
mov
jne
cmp
xchg
fdivr
in
mov
inc
jmp
sti
test
nop
pop
mov
loopne
in
cmpl
sahf
rclb
xchg
mov
hlt
aas
cmp
sub
fistl
inc
and
add
in
les
or
mov
ja
push
mov
loope
stc
sbb
push
jmp
and
lods
call
mov
mov
das
out
and
push
aad
pop
sub
mov
aas
mov
out
xor
or
push
sbb
std
out
mov
jns
push
sub
out
fildll
mov
mov
lret
xor
mov
push
mov
sahf
cmc
jmp
faddl
in
sbb
dec
and
xor
pop
inc
lea
out
jb
cmovno
rol
dec
adc
test
xor
pop
dec
pop
mov
inc
jl
test
push
ret
nop
push
xor
test
in
das
push
pop
push
loopne
push
cmp
mov
mov
xchg
ds
ficomps
ds
mov
clc
dec
popf
out
adc
div
xchg
or
lret
stc
jg
dec
lret
iret
mov
xchg
shlb
and
xor
loop
xchg
push
mov
call
in
pop
xchg
lock
arpl
or
xchg
push
ljmp
add
fcompl
xor
cmp
cmp
jns
mov
jmp
xchg
or
adcl
mov
stos
push
int
enter
fimull
jbe
fistl
in
mov
dec
mov
jo
jne
stos
aam
xchg
iret
push
jmp
ret
loopne
inc
cmp
adc
cmp
scas
pcmpeqw
and
sbb
leave
imull
out
xor
dec
js
xor
imul
jl
fdivs
scas
fwait
cmp
roll
push
imul
lret
adc
insb
fsubs
jbe
shrb
and
mov
pop
and
lahf
mov
ljmp
or
sti
sub
push
enter
inc
hlt
xor
mov
add
pop
jg
lahf
mov
pushf
stos
cmp
xchg
iret
inc
int3
aad
iret
shlb
fcmovnu
gs
clc
fcomps
ret
mov
adc
jae
push
cwtl
mov
repz
and
je
cmp
js
pushf
or
dec
enter
cmp
fwait
inc
addps
lcall
pushf
or
mov
jp
or
and
das
lock
arpl
popf
add
push
xor
and
fwait
xchg
cwtl
mov
stc
je
xchg
icebp
and
xlat
xor
push
pop
lret
mov
lods
clc
push
loopne
mov
adc
push
pop
pop
or
repz
cli
ja
sbb
push
mov
and
push
adc
aad
sbb
push
sub
push
lods
pop
mov
jg
in
push
push
pop
mov
addl
cmp
pop
adc
loope
xlat
pop
xor
jg
mov
or
mov
cmp
adc
mov
inc
inc
jl
mov
hlt
test
loop
rorb
sahf
inc
sub
xchg
dec
push
pop
pop
fadds
dec
loopne
loope
xlat
jae
test
dec
shrb
and
ret
cltd
mov
mov
in
push
stos
mov
or
jmp
imulb
mov
cli
add
lock
in
in
push
aam
add
cmp
outsl
imull
push
mov
ljmp
xchg
sub
sub
mov
push
inc
mov
je
jmp
movsb
clc
test
arpl
sti
jp
aad
lret
mov
sbb
into
lock
pop
rorl
and
mov
insl
mov
dec
rcll
ret
int
pusha
repnz
adc
adcl
inc
lods
mov
xlat
fs
cmpsb
xchg
mov
sub
inc
add
inc
stos
das
xor
lds
push
mov
push
gs
jecxz,pn
paddsw
pop
hlt
insb
cwtl
cmp
lret
lret
fcoml
fcoml
sbb
jmp
sbb
dec
lock
movsb
jnp
xchg
add
mov
xchg
cld
les
cmp
out
jg
add
arpl
les
test
mov
xchg
rclb
xchg
aaa
or
dec
ds
out
enter
xacquire
mov
mov
jae
movsl
divb
xor
cmp
jle
cmp
mov
lds
cmpsb
push
mov
aad
adcl
sbb
std
leave
pop
mov
mov
cld
test
add
and
cmp
or
mov
mov
dec
movsl
pop
cmpb
ss
jmp
std
test
adc
mov
inc
rol
sti
pop
push
mov
mov
lcall
cmp
ljmp
dec
ljmp
movsl
cs
pusha
xlat
and
addr16
or
sbb
insb
and
sbb
daa
mov
pop
ss
insl
icebp
andl
mov
cmp
pop
test
addr16
cmp
sub
je
cmpsb
add
in
loop
mov
inc
adc
xor
insb
repz
orb
in
mov
dec
sti
fs
inc
push
mov
stc
gs
loopne
ret
das
adc
jbe
ror
sbb
xchg
out
and
scas
popa
lods
daa
or
mov
aam
das
jge
and
pop
add
sbb
in
je
dec
sbb
std
mov
cmc
mov
mov
ljmp
mov
or
addr16
mov
inc
pushf
inc
cmc
mov
es
cmp
xchg
mov
shl
fwait
ja
xor
imull
sahf
xor
dec
xchg
aas
daa
call
loop
dec
push
pop
mov
xlat
add
jb
sti
cmc
js
add
nop
sbb
xchg
pop
sbb
nop
mov
mul
in
je
xchg
shrb
mov
fcomps
loop
ret
mov
loop
in
mov
mov
dec
scas
out
xor
jae
pusha
xchg
in
sbb
fsubs
cwtl
sub
mov
int
adc
push
mov
cld
inc
cmpsl
push
sbb
and
xlat
dec
adc
loope
jae
in
add
mov
inc
pop
clc
dec
aam
imul
jecxz
aas
stc
push
lcall
lahf
mov
ja
push
and
es
cld
cmp
jge
pop
leave
out
hlt
lea
mov
int
in
cmovle
pop
hlt
fidivs
icebp
and
fcmovb
jne
mov
inc
push
xor
dec
push
fisttpll
pop
xor
shrl
popf
gs
mov
push
mov
loop
mov
jne
push
push
stos
dec
jg
adc
fsubs
push
pushl
xchg
dec
xor
sbb
sub
cmc
cmp
xchg
push
dec
sti
rcll
jmp
js
jns
and
cmp
shlb
loope
test
pop
dec
enter
adc
and
lods
je
lods
lcall
sub
mov
xor
mov
sbb
sub
decl
mov
fucomip
mov
movsl
cmpsl
fildll
cmp
popa
fnstenv
inc
fidivs
roll
rol
shlb
jge
data16
and
repnz
pop
fwait
mov
inc
out
adc
inc
ficoml
je
and
pushf
sar
ds
stos
shlb
push
and
aas
loope
ljmp
add
aad
je
adc
lcall
popa
lods
push
testl
cwtl
mov
push
dec
inc
inc
xor
loope
sbb
out
pop
test
jae
add
leave
jae
cmc
sub
mov
dec
push
jle
arpl
jl
aam
push
xor
outsl
jl
fcmovnu
jmp
outsb
mov
mov
jno
fldpi
and
inc
loop
mov
es
inc
pop
clc
xorb
pop
cmc
push
mov
stos
jno
ret
insl
and
jmp
and
jp
les
xchg
icebp
aad
adc
inc
adc
or
aad
jnp
movl
popf
jb
test
js
int
scas
scas
bound
xchg
sahf
pusha
sub
cmpsb
mov
dec
imul
stc
mov
inc
mov
es
or
dec
lret
push
pushf
loope
stos
rorb
mov
fwait
cwtl
mov
movsl
je
call
test
das
cmpsl
add
lds
fisttpl
pop
add
bound
cmc
scas
scas
shll
movsl
cli
shrl
into
xchg
fs
lcall
inc
inc
add
add
fxch
dec
pop
cmp
shll
test
dec
xor
adc
shlb
movl
mov
outsb
and
iret
stos
popf
push
out
inc
and
inc
popf
out
push
dec
cmc
mov
pop
adc
dec
jnp
xchg
add
jg
popf
push
scas
adc
aas
mov
cmp
scas
out
xchg
mov
nop
cmp
xchg
rcll
mov
xor
mov
cwtl
pop
test
jb
std
out
cmpsl
mov
aas
mov
or
cmc
sub
push
pop
lea
cmp
sti
adc
arpl
jecxz
stos
rorb
in
or
out
add
pop
xchg
jns
leave
lcall
cmp
sbb
outsl
out
dec
add
test
lods
andl
xor
mov
decl
scas
push
xchg
jo
imul
imul
xor
xlat
dec
sbb
repnz
mov
into
imull
xchg
ja
daa
jmp
sub
xchg
push
mov
shll
mov
xchg
lcall
loope
outsb
jne
xchg
pop
movsl
xrelease
in
sbb
mov
imull
mov
inc
call
dec
in
push
pop
dec
dec
pop
ret
or
rorb
out
sbb
hlt
enter
dec
mov
inc
and
repnz
sar
mov
ret
push
jno
sub
daa
pand
ljmp
inc
add
push
insb
test
pusha
arpl
pop
add
xlat
cmp
cmp
and
xlat
or
pop
xor
sbb
pop
mov
lret
add
sbb
mov
pop
xchg
stos
lret
push
mov
jg
mov
popa
hlt
and
lea
into
movsb
cmc
cli
adc
cmp
push
out
jbe
and
ds
cltd
and
xchg
push
sbb
xchg
loop
call
in
insl
mov
sub
lock
mov
es
leave
cmp
xchg
push
test
fcomip
or
pop
pop
pusha
adc
aam
std
mov
mov
mov
add
push
enter
xor
push
out
xchg
scas
jp
xor
ds
incl
inc
or
outsl
cltd
call
ret
enter
mov
cmp
jno
xlat
cmpsl
cs
aas
dec
fidivs
cli
xchg
fnstsw
jnp
rorb
pmaxsw
inc
jns
sub
mov
push
jg
icebp
fcompl
add
adc
lcall
push
mov
push
cli
bnd
fistps
pop
subb
leave
inc
dec
and
bound
mov
or
jo
iret
add
sub
lret
xchg
sub
sub
lea
jp
xchg
jne
xchg
cmpsb
jmp
mov
and
cmp
nop
imul
aad
cwtl
xchg
fisttpl
pop
mov
push
and
hlt
testl
xchg
xor
pop
xchg
inc
cwtl
lret
std
jb
push
mov
mov
or
movsl
and
test
ljmp
stc
or
daa
jl
ljmp
mov
xchg
out
jbe
pop
dec
movsl
jmp
mov
jo
sbb
inc
push
pop
cmp
inc
out
adcl
push
xchg
mov
jmp
inc
xor
lock
mov
sbb
aas
mov
xor
and
or
xor
rol
add
arpl
sub
cmp
sahf
lods
sub
scas
addl
sti
sbb
and
pop
add
cmp
dec
and
aaa
dec
mov
and
sbb
ficoms
sbb
mov
shll
mov
jg
shll
mov
inc
into
int3
xor
mov
outsl
in
gs
jo
in
stos
mov
push
inc
pop
xor
lcall
pop
arpl
cmc
nop
mov
mov
js
and
out
add
int3
push
inc
xor
adc
sahf
fbstp
hlt
pushf
and
cmc
addb
pop
fwait
lcall
ja
sub
xchg
int3
int3
seto
ljmp
repz
add
sbb
xor
enter
adc
pop
roll
je
ljmp
in
pop
pop
fbstp
xchg
and
ret
add
mov
push
add
hlt
jb
xchg
adc
in
xor
not
jo
sbb
inc
bound
cmp
add
dec
loop
pop
insl
push
dec
fsubl
adc
ret
push
ljmp
sahf
cmpsb
mov
test
ja
je
lock
mov
sbb
movsl
fnsave
xor
or
ds
adc
pop
xchg
into
stos
sahf
sub
movsw
sub
inc
jg
outsl
test
mov
out
mov
mov
dec
sti
icebp
jl
mov
lock
xchg
daa
mov
or
cmp
mov
dec
and
ret
out
pushl
cmp
pop
mov
inc
clc
stos
sbb
in
and
mov
and
push
arpl
pcmpgtb
data16
mov
xor
add
movsb
aam
add
mov
mov
mov
mov
jae
out
cmp
and
adc
xlat
in
mov
mov
mov
out
repz
pusha
test
push
inc
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
jmp
aad
mov
mov
rorb
mov
adcl
addl
decl
mov
je
mov
push
adc
cltd
mov
push
xor
in
mov
inc
gs
xor
sar
sub
xor
push
jg
sbb
cs
mov
pop
dec
xor
mov
pusha
ficoml
mov
sbb
pop
cmc
idiv
addl
xchg
and
xchg
test
adc
xchg
repz
jns
jmp
aam
int3
popf
lcall
leave
out
pop
scas
pop
mov
js
push
mov
das
xchg
pop
sbbb
adc
xor
push
mov
ss
sub
ret
sbb
and
push
xor
sub
out
adc
subb
xchg
out
push
je
mov
insl
mov
mov
cs
pop
sub
ss
xor
ret
fnsave
clc
iret
daa
mov
lods
push
inc
xchg
insl
imul
mov
loopne
insl
rorl
movsb
fs
sub
dec
addb
adc
jmp
rcrb
mov
mov
adc
lock
cmp
sbb
aas
cli
mov
imul
movsl
in
pop
push
xor
push
hlt
adc
mov
in
sub
sahf
iret
test
mov
and
cmpsl
cmp
inc
pop
bound
sti
insl
push
je
jno
mov
add
stos
mov
pop
pop
repz
xchg
test
out
xor
adc
iret
out
fldenv
jle
mov
int
inc
cli
mov
pushf
push
sbb
hlt
push
mov
into
push
jmp
xchg
xchg
loope
sbb
dec
mov
push
push
cmp
cmp
pop
sbb
es
stc
scas
lds
pop
pop
inc
pop
mov
cs
and
fwait
cmpsb
push
mov
pop
bnd
mov
pushf
push
mov
sbb
xchg
adc
idiv
andb
ljmp
gs
push
fwait
adc
cld
cmp
inc
call
inc
cmp
insb
xor
mov
pop
fistl
sbb
push
insl
lahf
jns
ds
add
popf
daa
ljmp
mov
fdivl
les
dec
cs
fistps
xor
add
mov
daa
rorl
sbb
cld
shrb
les
pop
aaa
and
jno
divb
aaa
ret
xor
cmpl
xchg
xlat
mov
sbb
jb
jae
andl
lods
dec
cmp
mov
add
addr16
pusha
lea
lcall
inc
in
outsl
icebp
cmp
mov
xchg
clc
adc
fisttpl
push
push
mov
icebp
hlt
je
inc
jg
int3
mov
mov
insb
fwait
jl
pop
sbb
cmpsb
xchg
call
fnstcw
lea
pop
frstor
pop
repz
pusha
loop
pop
mov
out
adc
and
es
pop
jae
addl
push
push
popa
xor
mov
cmp
fwait
push
inc
scas
and
jae
and
scas
add
jno
loopne
jbe
fimull
sbb
scas
roll
into
add
insb
aad
sarb
movsb
xor
dec
pusha
jns
push
add
or
loopne
daa
ds
inc
xchg
sbb
imul
sub
es
add
test
shlb
lea
nop
iret
ja
sbb
push
jle
fildll
arpl
test
push
push
fwait
lahf
popf
push
xchg
pop
cmpb
nop
or
jl
and
xchg
xchg
and
fistl
push
pushf
je
subb
hlt
jne
jns
jnp
dec
dec
jns
jl
jge
mov
dec
lea
push
cmpsl
and
pop
push
xchg
mov
jle
mov
pusha
ss
jp
mov
test
dec
ds
add
mov
cltd
mov
inc
push
out
jne
xor
dec
jb
shlb
aam
sbb
idivl
push
pusha
insb
aad
sbb
shl
cld
out
notl
or
pop
test
inc
dec
leave
dec
loopne
mov
cmp
data16
in
addr16
icebp
or
xor
cmp
and
mov
sbb
xchg
pop
xchg
inc
push
fwait
push
addr16
psubq
cmp
das
jle
enter
ret
outsb
lods
or
in
clc
mov
fiadds
xlat
stos
fldl
pop
out
sub
jns
mov
cwtl
mov
imul
insb
movsl
addl
sbb
cmpl
testb
lret
push
stos
int
ss
sub
mov
jns
int3
push
sub
adc
push
mov
xchg
nop
sub
dec
test
xor
lahf
or
dec
jp
sbb
fadd
cmp
test
out
or
dec
cmc
mov
jbe
mov
cwtl
or
movsl
out
xor
xor
imul
jecxz
jo
fwait
sub
push
dec
cmp
mov
fistpll
push
mov
jo
push
adc
paddusb
add
lret
add
cwtl
jbe
out
mov
rolb
or
fstl
dec
out
pushf
sahf
or
cmp
sub
sbb
pavgb
xchg
outsb
mov
in
stos
lods
push
mov
and
adc
mov
jg
xchg
scas
adc
dec
int
sti
enter
pusha
mov
dec
xchg
neg
int3
scas
inc
and
mov
sub
mov
fdivl
adc
xor
sub
cmpb
insb
jle
daa
sti
cmpsl
mov
fidivrl
pop
jno
push
mov
cmp
pop
fildll
test
ljmp
fwait
call
inc
les
push
inc
or
jecxz
dec
lahf
mov
out
out
mul
xchg
shrl
pop
mov
aad
test
pop
cmp
push
xor
cli
xchg
xchg
rcrb
or
fwait
aad
and
xor
imul
cmp
rorl
in
subl
jp
cmp
mov
loope
es
aad
mov
pop
sub
pop
jnp
add
fwait
aas
inc
add
hlt
sahf
xchg
push
xchg
sti
xor
insb
mov
push
cmp
das
xor
jl
shll
clc
jae
sub
in
mov
pop
mov
jp
push
push
sub
adc
cmp
fidivrs
jae
sub
repz
mov
inc
push
or
sub
inc
adc
inc
sbb
test
sbb
out
cmp
addr16
add
dec
into
xchg
or
je
inc
or
into
sub
test
insl
lahf
mov
cmc
cmpb
xor
movsb
mov
jecxz
je
mov
mov
fsubr
faddl
adc
scas
rcll
mov
jge
popf
icebp
movsb
sahf
cwtl
pop
xor
push
loope
mov
sbb
fnstenv
cs
hlt
dec
cmp
mov
andb
ljmp
pop
ret
cmp
xor
fcompl
push
mov
pop
or
cmpsb
mov
adc
inc
mov
fmull
call
mov
mov
xchg
dec
mov
inc
gs
jmp
adc
xchg
repz
rcrl
rorl
stc
pop
add
and
and
leave
sbb
adc
pop
in
jle
nop
xchg
pop
pushf
or
vsubpd
repnz
and
fistl
imul
sbb
out
xor
cmp
insb
and
ds
fiaddl
add
pop
adc
or
sbb
push
popa
mov
adc
cmp
sahf
xor
mov
push
mov
sbb
and
cltd
push
mov
push
movsl
inc
mov
sub
xor
xor
and
push
stc
push
nopl
push
jecxz
xchg
fisubrs
shll
pop
shr
sub
addr16
sub
lods
cmp
das
out
ja
xchg
xchg
mov
inc
adc
aas
push
mov
mov
add
andb
adc
repz
push
jecxz
dec
xchg
stos
jnp
inc
nop
lea
push
sbb
inc
mov
xchg
cmp
xchg
mov
pop
mov
test
sbb
sub
imul
hlt
push
pop
lock
popf
ficoml
shl
adc
stos
sbb
lods
cwtl
mov
add
sub
mov
std
xchg
scas
mov
aam
hlt
in
adc
movsw
mov
fbstp
jecxz
dec
std
std
push
popa
in
adc
arpl
mov
scas
cs
stc
ss
pop
lds
femms
lods
in
mov
movsb
pop
mov
or
pop
es
fnstsw
cmc
and
test
test
std
ds
pop
xchg
sbbl
mov
sub
cli
add
js
pusha
jmp
js
sub
adc
xlat
hlt
rolb
js
inc
mov
and
test
lret
jecxz
push
mov
enter
pcmpgtw
pop
cmp
sbbb
mov
rclb
movsl
or
loop
or
int3
ja
aas
adc
adc
pop
sbb
ljmp
jns
mov
stc
jge
jmp
push
paddsb
out
out
mov
aas
inc
les
push
scas
bound
shlb
mov
out
faddl
dec
movsl
cwtl
movsl
cmp
fcmovu
fstl
cmp
loopne
ss
push
ds
adc
push
icebp
stos
add
pop
add
aas
pop
stc
pop
iret
out
stos
bound
dec
sub
int
dec
add
fmul
lock
xor
lods
or
je
repnz
shll
cmp
into
sarb
mov
sub
scas
push
fwait
jl
cmp
mov
repz
xorb
cmc
call
or
cmp
pop
pop
test
lock
inc
data16
jecxz
jmp
ret
adc
cmp
rcl
xchg
out
pop
lahf
xchg
xchg
jge
dec
mov
dec
imul
movsb
jecxz
mov
lahf
mov
fildl
cmp
cmpsb
fstp
sbbl
pop
and
xor
and
mov
popf
imul
je
outsb
sub
clc
mov
or
adc
mov
add
xchg
mov
cmp
cmpl
es
pop
fucom
mov
pop
gs
or
pop
or
lret
je
cs
jge
jae
pusha
push
or
jns
arpl
test
out
test
pop
cmpl
xchg
imull
cmp
xchg
adc
dec
or
and
sbb
add
push
sub
mov
mov
iret
mov
mov
mov
adc
pop
enter
add
negb
scas
out
push
or
popa
hlt
mov
mov
mov
push
pop
pop
xor
test
mov
sbb
mov
je
add
in
xchg
pop
xchg
push
adc
xchg
insb
push
push
subl
mov
xchg
rcr
rclb
out
mov
jle
xchg
jmp
xchg
mov
aaa
gs
pushf
sbb
repz
sbbl
jno
iret
inc
inc
pushf
icebp
shrl
dec
mov
imul
mov
ss
fsubs
sti
hlt
divb
inc
xchg
jmp
pop
ja
mov
mov
sub
test
pusha
fisttpll
dec
pop
mov
enter
mov
das
movsl
xor
cld
outsb
cmp
cld
and
or
jae
fnstsw
push
jno
lahf
into
sub
imul
outsl
add
fwait
adc
sbb
rsm
dec
mov
inc
adc
das
jecxz
inc
sbb
jle
lcall
or
incl
ja
into
pop
in
hlt
pop
out
push
mov
adc
repz
pop
xchg
loop
pop
iret
or
xor
dec
daa
loop,pt
pusha
pop
inc
or
outsb
mov
or
sbb
mov
data16
mov
push
or
push
lods
aas
int3
and
jecxz
int3
inc
in
dec
xchg
dec
lock
pop
jge
or
adc
mov
add
mov
roll
fdivrl
xor
push
fldcw
inc
ficoml
out
aam
sub
cli
sbb
lock
ret
mov
inc
mov
mov
inc
jg
dec
paddq
or
outsl
loopne,pt
test
icebp
pop
and
imulb
lock
fdivp
cltd
inc
push
les
mov
pop
or
and
mov
cmc
setno
sub
push
mov
in
inc
cmpsb
mov
cmp
and
mov
stos
loope
movsb
mov
mov
sbb
mov
push
mov
leave
mov
cmp
sti
mov
sbb
arpl
xchg
sub
bound
jno
in
jecxz
cmp
or
mov
lods
jmp
orb
sti
out
mov
in
mov
repz
push
mov
fists
jne
sahf
pop
mov
xor
cmc
or
pop
jg
loope
pop
xor
dec
fsubl
xchg
jae
or
test
sub
shrb
fidivl
pop
lock
fimuls
cwtl
sub
ja
into
xchg
sti
test
push
sub
dec
lret
ret
adc
in
jl
je
mov
scas
sti
shr
push
add
push
push
cmp
jnp
loope,pt
or
popf
xor
inc
outsl
mov
mov
jo
outsb
adc
dec
sub
rclb
ror
jae
fwait
scas
imul
pop
movsb
inc
sub
mov
dec
fdiv
aam
xchg
mov
and
stc
out
inc
jmp
xchg
and
pop
sahf
lds
pop
mov
mov
xor
adc
imul
dec
sbb
out
pop
mov
or
xor
push
xchg
jo
ja
orb
jns
add
icebp
into
cltd
aaa
add
lret
fcmovnbe
out
mov
push
xchg
int
stos
push
jg
fwait
nop
addr16
inc
das
and
xchg
jb
jbe
jne
in
or
cmpsb
scas
pop
push
fisubl
lret
fstps
pushfw
out
xor
or
lret
mov
push
ljmp
fwait
push
xorl
add
xor
in
test
lret
mov
out
addl
sbb
ja
pusha
out
push
jnp
lret
stos
cmp
xchg
mov
in
sbbb
push
mov
xchg
sub
into
popa
out
mov
dec
loope
adcb
fmull
or
inc
loopne
in
test
sub
sub
lds
and
xor
cmp
push
js
push
mov
arpl
mov
sub
mov
adc
mov
hlt
jl
loope
jbe
push
and
mov
cmc
outsl
inc
lock
lock
pop
push
jl
test
ja
cmp
imul
ljmp
testb
mov
push
sub
lea
or
cmpsl
mull
pop
add
inc
xchg
jle
adc
lcall
mov
xchg
das
fldl
mov
mov
sub
fdivs
pop
push
outsb
push
cltd
push
gs
xchg
add
je
adc
outsl
xlat
gs
jle
mov
je
push
cld
inc
cmp
aad
xchg
les
xor
sbb
mov
sbb
push
mov
or
lcall
adc
rclb
ljmp
loope
fstpl
hlt
add
push
mov
sub
and
add
ret
ficomps
lahf
into
fcmove
arpl
add
adc
pusha
pushf
xchg
jae
or
cmp
push
add
xchg
int
fwait
xchg
xchg
inc
test
or
movl
sub
and
aad
sub
push
pop
jecxz
out
out
shll
pop
enter
dec
mov
nop
mov
arpl
subb
out
jg
popa
cmp
xchg
mov
xchg
sahf
sbb
in
adc
pop
mov
adc
push
mov
xlat
lods
sub
xor
jns
mov
mov
fsubrl
mov
sbb
test
fnsave
mov
xor
in
arpl
add
pop
enter
nop
inc
push
ja
adc
xor
mov
dec
ret
jne
leave
sub
dec
xchg
out
les
xchg
xor
pop
sub
dec
outsb
xchg
lret
adc
mov
aam
repz
mov
xchg
add
and
inc
jbe
sub
insl
mov
js
add
imul
lods
mov
in
sub
popf
shrb
lcall
nop
jp
mov
mov
pop
fldl
int3
cmpsl
adc
pop
add
or
lret
mov
xchg
push
jae
sub
test
mov
test
sub
lock
stos
jo
jne
push
fisubrl
sub
int
fsubs
mov
mov
add
loop
add
inc
icebp
mov
jecxz
or
xor
ret
jae
or
out
push
sub
bound
and
ljmp
xor
ja
clc
cmp
push
jns
pop
fs
sub
sub
aad
xchg
inc
sub
ljmp
xchg
movzbl
mov
je
mov
adc
repz
mov
sub
iret
lret
fsts
pop
ret
outsl
aaa
sub
adc
sbb
hlt
xor
mov
xlat
pop
aam
fsts
test
shrl
dec
call
movsb
mov
out
or
pop
jne
icebp
in
mov
inc
repz
pop
fbld
outsb
xchg
in
ljmp
outsb
cmpsb
push
mov
dec
imul
adc
negb
mov
aad
pushf
adc
stos
push
insw
cmp
xor
cltd
xor
add
mov
push
push
inc
imul
mov
sub
xor
cltd
add
add
icebp
aas
adc
cmpsb
inc
pusha
sbb
xorb
std
jns
sbb
stos
sub
mov
lock
jae
sub
add
sbb
cmp
adc
xor
out
cwtl
popf
push
outsb
adc
mov
scas
cmpsb
add
lea
mov
mov
mov
enter
insl
jle
and
and
mov
jno
test
je
arpl
xor
adc
sbbl
mov
pusha
lahf
xchg
roll
in
cmc
pop
xor
data16
inc
mov
dec
jmp
jl
ja
add
insb
pop
push
mov
xchg
push
stc
loope
adc
sbb
daa
pop
mov
lcall
es
int
out
xor
xchg
sub
out
clc
adc
cmp
dec
cwtl
pushf
adc
adc
ret
gs
call
ljmp
adc
jb
and
and
push
outsl
mov
dec
les
fwait
jmp
cs
shlb
xchg
mov
jns
out
int3
cmp
arpl
cltd
pop
mov
dec
inc
out
clc
pop
test
loop
mov
arpl
pop
mov
jb
daa
imul
insb
xchg
xchg
fs
repnz
cmc
sbb
outsl
and
insl
mov
pushf
pop
loope
rorl
aam
push
add
into
inc
or
jno
bound
flds
dec
ror
push
aas
jae
aam
inc
mov
mov
leave
inc
push
in
jae
cli
aas
xchg
inc
or
sbb
inc
in
and
rcll
insl
mov
jae
mov
and
dec
mov
xor
notb
int
xchg
sti
mov
push
pushf
sbb
mov
iret
inc
and
dec
xchg
sbbl
xlat
ffree
push
cli
inc
cmp
stos
ficompl
fisubl
jbe
lock
adc
xor
pusha
fcomps
or
xchg
add
outsb
pusha
in
mov
es
dec
mov
dec
movsb
and
push
push
rol
je
cltd
idivb
push
lahf
inc
shl
sbb
jbe
pop
cmp
shll
leave
cld
add
rorb
xor
dec
or
pushf
inc
data16
lcall
arpl
fstpt
xor
dec
or
lods
pop
arpl
add
test
sub
test
push
fld
test
mov
lea
jae
daa
fiadds
icebp
mov
add
incl
add
aad
sbb
inc
fwait
sub
sub
jns
sbb
fcompl
sub
adc
sbbb
cmp
clc
mov
pop
pop
test
filds
mov
and
sbb
cmp
gs
mov
stc
cmp
pop
pop
and
adc
dec
sbb
test
movsl
mov
jge
and
sahf
stc
push
fxch
out
in
daa
roll
mov
es
bound
je
xchg
mov
mov
cli
stos
dec
pop
mov
add
test
xor
xorb
out
mov
push
pop
faddl
jbe
sbb
in
aaa
xor
mov
xor
ljmp
push
lret
es
fdivp
add
pop
pop
pop
push
out
lods
clc
ret
lret
add
dec
mov
pop
xlat
cmp
rcrb
aaa
mov
lea
gs
push
aad
pop
daa
mov
in
mov
cmpsb
dec
xchg
add
ret
jo
or
test
cld
xchg
sub
aad
pop
cmpsl
jmp
addl
out
stc
add
xor
inc
sub
mov
mov
cs
xor
dec
loope
dec
and
pop
ret
lods
es
inc
xor
clc
adc
enter
movsb
clc
sarb
xchg
mov
xchg
mov
jns
out
aaa
in
dec
ret
js
sub
or
sahf
and
xchg
test
mov
cltd
outsb
mov
out
sbb
int
mov
ja
jno
sbb
cs
inc
dec
sub
sub
xor
lods
xor
int3
mov
inc
jb
test
loop
pop
cs
xor
jl
pop
test
movsl
lret
push
pop
scas
fmuls
pop
mov
out
jp
mov
sub
fdivrl
arpl
and
rorl
xor
cmpl
aas
sbb
adc
mov
movsl
add
fcomi
jnp
add
xor
jl
add
cmp
inc
loopne
loop
test
sbb
fs
jnp
mov
dec
sub
js
xchg
testb
adc
dec
lock
fdivrl
dec
pop
stos
pop
mov
pop
and
push
dec
sub
daa
push
or
jne
mull
push
xor
enter
xor
jg
mov
ljmp
aaa
shll
scas
cmp
pushf
ja
add
sub
jp
fistpl
mov
int
xor
scas
cmc
in
add
pop
add
fsubl
out
paddq
imul
lock
sub
push
pushf
nop
mov
scas
movl
js
cmp
ja
lods
movsb
mov
enter
mov
sbb
add
pop
xor
repnz
add
add
stos
mov
mov
bound
popf
fistl
fstpt
push
dec
dec
pop
push
in
movsl
xlat
stc
rcrl
adc
mov
stc
sub
push
out
call
test
rorb
bound
pop
in
negb
mov
insl
dec
cvtdq2ps
mov
js
aas
aad
pop
fdivrs
std
mov
dec
lahf
push
rorl
arpl
jbe
lret
pushf
cwtl
movsl
mov
mov
cmp
sbb
sub
lahf
sbb
jb
out
sbb
cltd
cltd
scas
pop
pusha
fwait
pushf
push
mov
xchg
xchg
add
adc
xchg
dec
jp
cld
jecxz
sti
add
cmp
or
into
inc
js
inc
insb
sti
dec
in
dec
add
or
and
loop
fs
idiv
xor
and
insb
xor
lahf
int3
mov
mov
adc
jl
out
mov
xchg
push
xchg
aaa
adc
fmuls
sti
add
cmpl
inc
add
aam
jnp
and
jns
ret
popf
or
repnz
mov
inc
dec
pop
cli
pop
add
ss
shll
cltd
cmpsl
jae
into
jne
pop
in
into
out
and
in
lock
cmc
mov
repnz
or
sub
or
sub
sbb
ret
cmpsb
ficompl
andl
dec
xor
ficompl
pop
inc
mov
out
incl
inc
cmp
jbe
in
sahf
lahf
push
stos
adc
dec
dec
pop
jo
out
test
lahf
and
xchg
leave
es
aad
add
sbb
push
je
jns
inc
into
int
sbb
pop
iret
negb
popa
sbb
push
sbb
sbb
les
cmp
lea
sbb
ret
pop
xor
std
int
shlb
xor
xchg
cmp
lcall
pusha
cmc
test
inc
testb
add
inc
and
mov
and
sbb
inc
mov
mov
mov
sub
cmc
faddl
sbb
sub
es
push
mov
add
cltd
les
shlb
mov
imul
shl
loop
push
inc
sbb
loopne
das
repnz
pushf
in
ljmp
push
adc
arpl
xchg
or
mov
add
in
xchg
shll
data16
or
push
scas
mov
jmp
dec
pop
dec
repz
out
imul
or
lea
idivl
cmp
lock
les
xor
stc
adc
mov
lret
and
xor
adc
adc
push
arpl
aas
lods
pop
daa
cmpsb
clc
and
xchg
mov
out
leave
loope
pop
or
movb
or
or
nop
cmc
adc
push
test
stos
mov
test
decl
rcr
pop
xchg
xor
lea
ds
fbld
xchg
outsl
adc
rol
xchg
fiadds
lret
ds
mov
stos
jmp
mov
sub
fadds
test
and
sbb
insl
pop
push
sub
loop
sub
mov
mov
loopne
sti
jecxz
jns
cmp
pusha
xchg
fimuls
aad
cmpsb
repz
jne
add
or
mov
cmp
fnstcw
test
sbb
shrl
call
jno
dec
test
cwtl
xor
adc
sbbb
and
mov
test
mov
les
mov
leave
fstps
mov
jl
popa
adc
shrl
out
aam
add
pop
mov
test
lock
std
inc
add
into
dec
xor
push
outsb
into
mov
ljmp
add
adcb
out
leave
popa
lock
xchg
leave
rcrb
adc
adc
mov
negb
into
push
jle
xlat
and
lahf
fucomi
aas
fwait
loope
lock
pop
mov
movsb
gs
mov
mov
imul
mov
cmp
mov
inc
push
xor
mov
std
out
in
mov
xor
push
pop
std
adc
mov
shl
rol
sbb
cmp
leave
mov
adc
insb
lea
pop
loope
in
leave
sub
mov
mov
mov
xor
push
addr16
lcall
jb
dec
lea
lods
lods
outsb
iret
roll
xchg
iret
fsubl
outsb
mov
jns
loope
push
lods
mov
sub
pushf
dec
sti
lahf
xor
xchg
call
ret
xchg
mov
lahf
cvtps2pd
sahf
cmp
cltd
inc
ja
xor
data16
mov
sub
pop
outsb
dec
mov
sbb
lods
lds
int3
dec
fadds
pop
jnp
aam
mov
cwtl
push
sub
xchg
cmp
inc
js
cmpsb
sahf
mov
out
or
dec
mov
jg
and
pop
fwait
push
sbb
sarb
notb
or
aas
and
push
xlat
loop
gs
mov
les
call
or
imul
pop
sarl
push
lods
sub
hlt
cmpsb
and
jb
bnd
or
jb
dec
sub
js
adc
outsb
mov
shl
mov
test
add
inc
fwait
sub
sahf
lcall
mov
icebp
adc
repnz
shl
fidivrs
jno
cltd
dec
push
cld
fwait
cltd
add
jnp
daa
adc
rolb
mov
gs
and
push
mov
adc
add
sub
ret
mov
cmp
pop
js
movsl
dec
scas
pop
or
or
imul
lcall
cmp
cld
dec
icebp
push
jle
mov
push
or
adc
dec
sbb
pop
in
sub
fwait
push
dec
pusha
fisubs
mov
cmp
fstp
cmpsb
push
repnz
and
call
inc
testb
inc
push
out
inc
adc
and
ficoms
hlt
fcmovne
mov
inc
aaa
cmp
pop
cltd
or
xchg
pop
dec
xor
out
pop
add
repnz
mov
add
and
pop
fisubrl
iret
out
cwtl
aaa
jbe
fidivrl
cmc
lds
call
mov
in
loope
xchg
movl
jp
jae
gs
and
mov
std
jae
mov
add
test
mov
push
int3
fldenv
cmp
mov
incb
sbb
aad
lahf
xor
cmp
sbb
aas
insb
xchg
arpl
outsl
adc
shrb
mov
mov
notl
fnstcw
ljmp
setb
mov
inc
lahf
jg
xchg
adc
cli
aad
inc
arpl
jg
mov
daa
sti
dec
popa
mov
jg
aaa
test
mov
out
or
icebp
inc
gs
div
lods
jo
dec
mov
ret
mov
xchg
xlat
ja
mov
push
out
adc
mov
mov
hlt
mulb
lret
jge
icebp
sti
lods
xor
xchg
adcl
aad
add
lret
scas
or
xchg
cli
and
into
rcrb
jne
repnz
je
cltd
mov
xorl
push
mov
add
hlt
nop
insb
xor
add
stc
test
xlat
jno
push
sbb
fdivl
pop
repnz
sub
mov
mov
mov
push
hlt
sbb
mov
out
sbb
dec
fwait
mov
adc
fsubrs
ret
inc
mov
cltd
xor
jecxz
cmp
xor
aad
or
andl
and
sub
jl
leave
push
or
push
xorl
xor
cltd
and
cmp
push
mov
ror
inc
add
lret
mov
dec
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
notl
push
sub
push
sub
mov
mov
mov
inc
mov
or
movl
movzbl
adc
movl
adc
mov
add
mov
adcl
sub
adc
mov
xorl
xorl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
pushl
pushl
call
cmpl
jb
mov
sub
mov
orl
mov
andl
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
mov
xorl
orl
mov
andl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
movl
cmpl
je
cmpl
jbe
jmp
call
mov
dec
mov
jmp
mov
orl
add
mov
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
mov
mov
neg
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
adcl
movl
subl
lea
movzbl
sbb
mov
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
call
jmp
lea
add
mov
xor
mov
mov
mov
sub
xor
mov
adc
mov
adcl
xor
orl
add
xorl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
pushl
call
cmpl
jb
mov
mov
mov
add
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
or
dec
mov
jmp
push
sub
mov
mov
mov
mov
mov
adc
mov
xor
and
mov
add
movl
cmp
movl
je
notl
mov
jmp
mov
xorl
xor
push
add
xor
xor
sub
mov
add
movl
push
adc
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
push
pushl
call
jmp
mov
xor
subl
xor
movl
cmp
movl
jne
movl
cmp
jne
push
movl
jmp
mov
xor
adcl
add
subl
xor
add
movl
adc
subl
xor
orl
xor
movl
cmp
movl
jne
cmp
movl
jne
addl
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
call
xor
xor
dec
mov
jmp
xor
add
mov
subl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
jmp
mov
movl
xor
add
adcl
imul
mov
orl
xor
add
movl
cmp
mov
je
movl
cmpl
je
cmpl
ja
jmp
push
push
call
mov
dec
mov
jmp
mov
orl
add
and
mov
mov
xor
add
imul
sbbl
mov
mov
mov
mov
xor
mov
sub
mov
jmp
mov
xor
mov
mov
mov
xor
mov
sub
mov
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
jg
mov
mov
xor
mov
sub
mov
jmp
mov
xor
add
add
mov
mov
mov
xor
add
not
and
mov
movsbl
cltd
add
adc
jmp
pop
push
xchg
dec
add
shll
stc
addb
cmp
pushf
aaa
es
adc
push
xor
and
mov
pop
data16
xor
jl
sub
xchg
cmp
add
daa
fs
mov
decb
int3
loopne
sbb
icebp
frstor
js
mov
add
dec
in
lods
das
test
mov
xchg
stos
xchg
ds
ss
lds
lock
roll
pop
loope
cltd
pop
pop
mov
fnstsw
out
push
pop
test
subl
js
cmp
xchg
fildll
xor
or
add
mov
mov
sarl
lds
out
mov
push
out
idivb
jmp
pop
pop
bound
mov
orb
xchg
xor
mov
cld
xchg
cmp
push
mov
mov
xor
add
outsb
mov
push
in
imul
fwait
mov
imul
mov
adc
add
int
cmp
jne
adc
inc
adc
ss
jp
fdivrl
rcll
fiaddl
arpl
shll
xor
insb
test
addr16
xorb
jne
sub
rcrl
int3
inc
inc
push
scas
cmp
in
dec
dec
pop
ret
inc
sbb
and
pop
jg
negl
inc
pop
push
jge
push
fnstsw
rcll
insb
cmp
push
loop
xchg
push
mov
femms
mov
es
popa
sub
mul
xchg
out
decb
xchg
xchg
pop
subb
out
lcall
mov
lcall
lods
xor
mov
mov
and
fidivrs
add
test
add
pop
push
dec
jne
jne
cmpsb
out
enter
cli
sub
xchg
dec
je
out
push
inc
jl
push
addr16
push
fildll
pop
push
pushf
and
aad
mov
mov
dec
and
inc
inc
insb
mov
dec
and
jle
sbb
fnstenv
fs
mov
insl
dec
mov
adc
mov
mov
out
mov
add
test
push
xlat
cmp
pushl
adc
jno
and
mov
fldcw
push
repz
mov
jl
add
and
cmp
testl
hlt
mov
cmp
mov
and
out
insb
repz
jns
and
insb
dec
jmp
out
outsl
mov
cmp
lret
loop
sub
or
inc
in
into
xchg
fwait
pusha
push
push
mov
cmp
daa
xchg
inc
test
and
in
and
int
outsl
sbb
std
jge
stc
test
dec
hlt
cwtl
adc
cltd
push
cmc
clc
dec
sbb
cmp
icebp
mov
cmp
push
les
jmp
loop
ret
add
or
dec
push
aam
repz
jecxz
cltd
rcr
movsb
movsl
adc
xor
shl
cs
jg
iret
dec
mov
pop
or
mov
sti
mov
jle
std
mov
mov
js
paddusb
push
lds
inc
cld
lret
sti
push
adc
xor
ret
push
pop
mov
xchg
pop
out
sti
jecxz
mov
sbb
jle
sub
stos
xor
in
stc
mov
jle
and
repnz
xchg
push
xlat
aam
xchg
dec
dec
inc
dec
jp
pop
repz
jne
jl
decb
repz
or
mov
mov
inc
ja
mov
sub
jmp
call
push
in
punpcklwd
call
in
and
or
daa
push
iret
pusha
repz
sar
out
pop
xchg
ds
cwtl
push
aaa
andb
push
std
mov
dec
add
lahf
and
scas
movsl
stos
mov
pop
sub
add
imull
data16
inc
add
pop
scas
test
repnz
and
js
outsb
jb
sub
mov
add
gs
adc
int3
cmp
into
lods
pop
push
add
int3
push
fstpl
es
xor
les
pop
repnz
xor
loop
xchg
nop
dec
aaa
je
dec
fcmovnbe
jg
test
inc
in
cmp
sahf
sti
jle
jb
cmc
dec
cmpsl
jmp
jne
adc
stc
call
xor
xchg
jno
jecxz
aam
stos
push
mov
hlt
incb
aas
push
dec
loope
pop
xchg
pop
rolb
push
cmpl
push
test
cmp
cmp
dec
jg
mov
inc
dec
and
fdivr
xor
jecxz
in
ds
add
push
adc
lea
adc
aaa
mov
ljmp
dec
in
lods
xor
das
pop
fadds
pop
mov
inc
lcall
or
push
cmp
ds
daa
ret
out
in
jp
insb
mov
test
add
je
and
inc
int3
inc
pusha
enter
int
mov
in
cmp
xchg
push
nop
data16
enter
mov
neg
insb
scas
sub
imul
pushf
dec
mov
or
xchg
mov
in
test
das
dec
jle
sahf
xchg
sbb
fwait
lock
lahf
popf
mov
test
jmp
lahf
xor
inc
push
ds
int3
ficoms
js
push
das
repz
mov
int3
ds
sbb
mov
jb
iret
cmp
out
cmpsl
pop
cld
mov
sub
outsl
lcall
daa
mov
xor
or
or
in
mov
adc
push
psllq
mov
jns
popf
test
or
or
mov
cli
imul
ds
mov
mov
popf
in
sbb
xlat
sgdtl
xor
push
sub
in
add
movsl
xor
in
mov
ret
mov
mov
add
jmp
xchg
pop
arpl
in
or
rcll
push
mov
aas
dec
xchg
xchg
cwtl
imul
stos
andb
pop
sub
push
inc
ret
mov
sub
outsl
pushf
xchg
mov
leave
xor
sub
test
popf
sub
into
add
dec
and
xor
and
imull
dec
lret
pop
cmp
test
adc
sbb
test
lock
repnz
dec
cmp
lahf
jl
sbb
or
jbe
mov
xlat
cmp
add
stc
in
push
jae
inc
fwait
cli
mov
push
mov
inc
test
mov
xchg
inc
and
mov
lock
orb
and
adc
xchg
add
lahf
cli
scas
mov
inc
addl
popa
test
or
mov
ds
xor
adc
clc
or
movsb
mov
dec
xlat
mov
xchg
add
out
adc
imul
std
mov
cmp
orb
sub
cmp
inc
mov
enter
in
mov
lcall
mov
push
xchg
test
and
ret
pop
and
mov
mov
push
das
mov
fnstcw
loop
pop
mov
scas
rorb
push
ja
push
into
les
jb
push
dec
pop
pop
scas
mov
push
stc
call
out
cmp
ja
outsb
and
shll
or
xor
mov
icebp
mov
int
shll
pop
out
gs
push
push
mov
scas
loop
mov
hlt
in
lds
mov
dec
into
lret
scas
lock
xor
repnz
push
jg
push
push
cmp
add
inc
fwait
mov
pop
or
int3
stc
mov
or
aas
pop
lds
sub
pop
mull
orb
pop
mov
mov
dec
clc
clc
push
insb
stc
dec
sub
push
sub
repz
fs
in
mov
outsl
xchg
shrb
jnp
sbb
xor
mov
jmp
jecxz
out
add
xor
hlt
leave
aam
std
out
mov
std
inc
ss
and
outsl
xchg
aas
loop
mov
popa
cli
adc
mov
sub
adc
jg
in
sarb
xor
inc
mov
mov
leave
inc
stos
clc
sbb
adc
cmpsl
adc
fbstp
xchg
ss
pusha
xor
inc
cmp
lock
sbb
xor
hlt
cld
out
mov
cmpsb
dec
dec
daa
daa
mov
add
pop
in
rorl
lods
xchg
std
out
pop
xchg
jns
test
xchg
inc
pop
pop
xor
rolb
fsubl
cwtl
cmc
in
adc
mov
adc
fpatan
movsl
adc
cmp
sbb
push
mov
cltd
enter
out
lock
push
adc
in
insl
lods
and
add
cmp
lea
ds
xlat
jle
add
mov
repz
icebp
bound
pop
xchg
bound
sub
rolb
and
fwait
test
ja
out
jae
movl
in
gs
push
sbb
xchg
loope
in
out
stos
push
int3
lahf
sub
dec
mov
xchg
je
push
sti
rorl
in
dec
ljmp
shlb
mov
jb
mov
out
je
das
jno
pop
testl
dec
or
add
pop
adc
ds
jge
imul
jne
arpl
bsr
adcb
fsubrl
jl
push
jg
test
adc
aaa
push
dec
and
in
dec
test
loopne
movsb
aas
mov
mov
and
rorl
cmpsb
or
or
jecxz
lahf
loope
test
pop
loop
outsl
imul
adc
mov
mov
mov
add
jecxz
xor
inc
or
pop
scas
inc
sub
lods
pop
sbb
incl
dec
jnp
lock
inc
lods
and
pop
imul
sub
pop
xchg
jp
cmpsl
mov
cmpsb
sub
adc
fldl
lods
dec
out
lds
ja
dec
push
add
add
in
add
repnz
push
shlb
xor
pusha
int
push
inc
scas
cmp
jb
shrl
scas
clc
loopne
shl
pop
aad
jns
cwtl
mov
push
cli
mov
test
adc
pop
mov
inc
add
lahf
sbb
cwtl
cmp
popa
sbb
or
into
mul
fwait
insl
dec
rcrb
xchg
icebp
aad
xor
int
mov
add
ds
or
int
ret
xchg
sub
pop
pushf
in
decl
fstps
out
mov
and
mov
std
dec
adc
adc
mov
test
xor
mov
in
and
push
pop
fs
out
jb
pop
outsb
out
inc
mov
and
mov
shlb
scas
shlb
push
pop
push
sub
gs
fsubs
adc
sbb
adc
pop
imull
pop
out
aaa
adc
xor
incb
cmp
xchg
clc
and
xchg
or
or
xchg
std
addr16
pop
add
mov
ds
mov
pop
push
insb
test
ror
in
rcrb
push
push
cmp
in
mov
inc
dec
add
pop
ss
test
stos
xor
dec
mov
jle
pop
xor
pop
outsl
loope
push
aam
xlat
fsubrl
aad
mov
push
loopne
xchg
std
sbb
outsl
push
pop
cmp
mov
inc
shrl
test
das
fbstp
fiadds
jo
mov
xchg
idiv
mov
cs
lcall
in
cltd
xor
pop
jp
fidivl
add
inc
jnp
pop
and
lret
pop
pop
cmpsl
add
pusha
test
mov
out
pushf
cld
sub
inc
mov
aas
push
xor
pop
mulb
faddl
pop
sbb
inc
pushf
mov
cmp
vpmaddwd
mov
out
in
adc
inc
into
in
xor
dec
mov
dec
lahf
push
int
cmpsb
and
fimuls
scas
mov
test
lods
push
jmp
aad
stc
push
push
mov
cmp
lcall
loopne
xchg
ja
roll
lods
testl
add
cltd
in
repnz
jle
cltd
lret
pop
addl
cmp
dec
sbb
out
push
ret
adc
ret
stos
lods
icebp
or
movlps
jge
or
push
push
jmp
cmp
arpl
insl
adc
icebp
mov
push
dec
xchg
mov
fimuls
imul
dec
mov
mov
subb
xor
mov
test
push
orb
dec
and
xchg
dec
jb
test
push
test
add
lret
push
xchg
cmp
xchg
dec
movsw
js
bound
ret
pop
mov
ret
movb
xor
jle
mov
xor
mov
mov
jnp
cmpsb
xchg
outsb
dec
ret
pop
fimull
dec
sti
xchg
call
mov
in
inc
inc
loopne
mov
jp
test
cltd
stos
and
and
pop
scas
iret
lea
mov
mov
sub
std
xchg
pop
jmp
xor
jl
repz
mov
mov
cmpsl
in
dec
push
in
pop
xchg
xchg
sub
dec
xchg
aam
sub
shlb
push
stc
add
lea
jle
shl
jno
iret
shl
iret
les
add
mov
cmp
push
ret
lock
cmp
mov
loope
mov
cmc
or
pop
movsl
or
das
mov
in
cltd
loope
lcall
fistpl
jne
fisubs
xor
bound
dec
out
testb
shll
jl
jo
pop
mov
push
pxor
mov
ja
and
nop
js
or
stc
fimull
pop
rcll
pop
xor
mov
ljmp
push
sub
push
jg
sbb
int3
aam
and
pop
push
dec
xchg
in
mov
xchg
jge
mov
faddl
jne
nop
test
stos
mov
or
rcll
mov
jmp
add
clc
pop
jae
mov
add
jmp
pop
stc
mov
adc
outsl
fmul
xchg
mov
sub
cmpsl
fs
mov
cwtl
xchg
int
sub
sahf
test
leave
inc
jle
inc
mov
sub
mov
add
sbb
mov
and
push
dec
sbb
icebp
or
cmp
push
out
ret
sbb
jl
inc
xor
call
das
push
push
fistpll
outsl
sub
add
fisubs
sysenter
sbb
xchg
out
arpl
into
mov
cmp
stos
out
dec
imull
pop
xchg
inc
xor
push
pop
sub
loopne
lods
icebp
push
sub
inc
and
sub
or
dec
jnp
push
pop
mov
xchg
add
outsl
xchg
fimull
adcb
jp
pop
xlat
add
ficoml
loop
imul
pop
or
fucomp
xor
mov
xchg
mov
push
popa
aas
orl
roll
out
adc
jb
mov
dec
mov
push
mov
jne
and
cmp
sbb
lock
inc
adc
cld
jmp
inc
scas
out
adc
pop
add
std
jb
add
jmp
ud0
insb
xchg
adc
ret
and
outsb
mov
and
cmpl
push
dec
jecxz
rolb
stc
pushf
outsb
jnp
dec
mov
andb
adc
xor
xchg
fsubs
shlb
es
push
orb
rcrl
loopne
dec
push
loope
mov
inc
insl
in
arpl
in
jb
cld
out
cmp
aam
pop
ljmp
add
pusha
pusha
popa
xchg
out
je
mov
loop
jns
cmp
aam
or
popf
mov
js
add
sbb
daa
xor
xchg
inc
iret
sub
cmc
and
imul
adc
xchg
pop
stos
or
aaa
fisubrl
push
add
lret
pop
pop
imul
int3
test
pop
aam
ja
adc
pop
xchg
mov
icebp
xchg
push
aas
cwtl
inc
outsl
sub
sbb
fstpt
mov
cmp
pop
lret
xor
data16
cmp
pop
incl
cmpsl
sub
mov
pushf
fs
cmp
and
sarb
sti
mov
sahf
out
xchg
mov
mov
adc
sub
cld
adc
push
pop
xorl
cld
ljmp
push
pop
movsl
pop
sbb
inc
loope
repnz
push
repnz
je
std
adc
insb
jmp
insl
fsubs
push
lds
ss
pusha
test
das
pop
mov
ja
gs
test
nop
out
xor
aam
mov
dec
cld
push
sbb
cmpsb
xor
outsl
es
rclb
addr16
call
xchg
xor
pop
push
orb
lods
sub
mov
ja
movsl
add
add
out
sti
jle
sub
ss
jno
fldenv
mov
mov
jp
fwait
dec
bts
mov
xchg
sub
idivb
xor
jmp
aas
or
push
cld
loopne
fmul
fildll
sbb
cmp
or
sub
mov
movsl
ret
ljmp
sarb
cmpsl
jno
in
mov
mov
mov
stc
mov
subl
xlat
mov
inc
test
cmp
lea
and
add
fcomip
stos
fstl
push
and
push
mov
pop
aad
xchg
cwtl
inc
fimull
out
xchg
mov
xlat
faddl
adc
in
mov
enter
cmp
sbb
lret
inc
in
in
rcrb
xchg
pop
repnz
clc
cmp
movsb
jg
rcrl
pop
adc
mov
dec
movsb
sub
notb
div
leave
fcomps
add
outsl
mov
in
aam
cmc
cs
imul
data16
xlat
push
pop
popf
sti
mov
fidivl
jnp
test
mov
jecxz
dec
popf
dec
adc
subl
cmp
jmp
test
aas
xor
push
add
mov
fwait
pop
repnz
sub
out
stos
pop
imul
sbb
mov
aad
push
dec
insb
test
cmc
or
cmp
std
push
out
data16
pop
inc
sub
inc
inc
mov
cld
mov
jno
or
push
ljmp
fisubs
repz
sbb
cmp
jl
or
lods
push
xor
decb
mov
xlat
sarl
jle
clc
pop
xchg
out
add
mov
hlt
jae
cmpsb
mov
lods
jns
cs
push
test
push
mov
mov
adc
fldt
mov
jle
in
xchg
dec
and
push
xor
pop
push
dec
insl
add
test
jl
jno
mov
sub
push
pop
inc
iret
outsl
lret
fs
jl
push
xor
adc
pop
sub
jl
jge
push
and
sbbb
inc
test
fdivrs
or
int
adc
fwait
adc
pop
outsb
mov
xor
jg
inc
add
dec
addb
pop
rcrb
or
mov
test
test
js
jl
jle
xchg
nop
adc
shr
cmp
dec
pop
mov
fidivl
test
lret
inc
test
jecxz
rcll
into
pop
bound
and
mov
aad
cmp
test
adc
dec
fmuls
xor
popa
xchg
aam
or
test
shl
fcmove
push
test
lret
repz
jmp
cmp
cwtl
lcall
flds
nop
mov
push
pop
lret
jae
jne
sub
push
test
and
add
mov
sbb
cmp
adcl
mov
sub
movsl
and
aad
ja
fisubl
notb
add
mov
mov
dec
dec
push
sbb
jmp
dec
mov
jno
repz
fwait
mov
arpl
sahf
cli
leave
push
cmpsb
lds
cmova
inc
mov
lock
cmpsl
mov
fstl
push
push
es
shlb
mov
jbe
xchg
stos
mov
insb
mov
jle
mov
dec
sbb
push
lock
sbb
jg
or
lahf
adc
push
xor
push
or
das
xor
imul
rcl
shl
fldl
daa
imul
out
jne
sub
pop
pop
xlat
fisubs
loopne
pushf
bound
in
imul
xchg
enter
lahf
push
imul
sub
xor
sahf
push
pushf
add
int3
adc
insb
push
popa
pop
mov
push
arpl
outsb
test
rcll
arpl
sbb
inc
mov
sbb
push
mov
mov
pop
mov
pushf
loop
or
inc
lret
in
inc
dec
gs
lcall
es
jp
test
pushf
mov
jmp
push
mov
push
or
sub
sbb
daa
cmp
icebp
mov
fidivrs
adc
mov
pushf
sbb
mov
out
pop
sub
lcall
rcll
insl
stos
popa
adc
dec
out
cwtl
add
fnsave
lret
dec
mov
ja
push
mov
pop
hlt
movsl
inc
imul
jmp
lods
inc
jg
mov
call
dec
iret
xchg
nop
dec
xchg
jle
ljmp
sub
movsl
xor
cs
sub
cmp
sti
inc
mov
adc
jl
push
sbb
add
mov
or
mov
out
sub
fidivrl
pop
test
outsl
loopne
cmpsl
push
xlat
out
cwtl
or
decb
push
mov
xlat
cmp
add
leave
cmpsb
jnp
fadds
outsb
xchg
xor
repnz
iret
in
test
jle
je
repnz
out
mov
push
mov
int
popl
xchg
or
xor
sbb
popa
lods
push
xlat
push
lods
cwtl
lret
push
cmp
push
push
xor
je
or
inc
mov
sbb
ret
mov
sbb
push
xchg
jno
rorb
pusha
jb
rcrl
xchg
mov
cmp
xor
or
push
in
frstor
movl
lahf
pop
std
lahf
or
jecxz
leave
cwtl
popa
iret
popa
sub
in
add
stos
dec
jne
push
dec
addr16
filds
inc
dec
lahf
sbb
jl
data16
push
out
or
pop
cwtl
loope
sbb
out
mov
mov
add
mov
sub
daa
xchg
bound
sub
xchg
sbb
pushf
rorb
scas
lock
dec
and
mov
mov
jnp
inc
jmp
cmc
mov
dec
aam
out
mov
faddp
mov
test
cmp
imul
pop
mov
scas
mov
pop
in
jmp
add
div
xorb
roll
cmp
rol
xor
lods
inc
sbb
jnp
enter
add
xchg
and
test
sub
mov
fistps
inc
and
lret
xor
push
clc
or
mov
sbb
xor
push
mov
adcb
daa
push
scas
dec
in
pop
pop
dec
pop
sahf
push
or
inc
inc
data16
cmp
scas
and
fs
sbb
fs
xor
jl
push
mov
mov
pop
test
das
push
jge
adc
jnp
outsl
loop
rorb
lods
fbld
lds
ficomps
daa
std
push
xchg
stos
mov
jp
int
mov
sbb
loope
lock
xchg
aas
adc
out
popf
shlb
fcoml
fdivl
jb
insl
and
xor
stos
ss
sub
push
cmp
cmpsb
ret
or
int3
insl
xchg
leave
gs
jnp
mov
clc
imul
shlb
repz
cmc
lcall
stc
fistps
mov
lcall
cmp
jnp
push
imul
cmp
jbe
mov
rolb
lret
lods
in
xchg
shlb
repnz
dec
push
stos
mov
push
test
ror
shrb
pop
lcall
movsl
xchg
std
cltd
pop
test
cli
pushf
jno
mov
ljmp
pop
addr16
test
xor
fldcw
lcall
mov
mov
and
cmp
mov
sti
cmp
arpl
jle
mov
sbb
ljmp
pop
xor
cld
add
bound
push
icebp
add
jg
jnp
jmp
push
or
jge
xchg
sbb
popl
adc
inc
icebp
or
pop
sbb
out
cld
sbb
fidivl
adc
lock
or
out
xchg
cmp
sub
in
cmp
out
popa
xor
pop
or
vpcmov
and
dec
mov
mov
jmp
cmp
xor
testl
in
rcrb
mov
out
fisubl
add
and
pop
adc
popf
mov
pop
cmpsb
sbb
mov
clc
push
imul
push
loop
pop
sbb
out
dec
or
hlt
mov
pop
lods
fiadds
sub
xchg
das
mov
mov
inc
leavew
scas
or
sub
fimull
add
lret
popa
cmp
lret
arpl
cmp
out
shlb
cltd
and
and
sbb
pop
popa
loop
lea
cmpsb
sub
aas
add
add
aaa
shlb
out
cmp
outsb
pop
jae
mov
test
pushf
stc
jecxz
repz
mov
fldcw
and
pop
pop
inc
aad
push
fwait
insb
jecxz
jmp
stos
outsb
adc
inc
or
mov
movsl
rcl
fstl
int
pop
sub
idivb
fdiv
aam
push
daa
aam
bound
add
and
or
ds
mov
xlat
xorb
clc
les
mov
mov
lret
pop
lahf
mov
mov
sbb
fldcw
lods
stos
jp
jecxz
mov
fstpl
jo
fiadds
pop
scas
sbb
popf
stc
inc
dec
stc
jb
aas
adc
int
outsb
jmp
pusha
sbb
lock
lret
dec
inc
sbb
xchg
and
fs
sub
or
into
cmp
xor
icebp
icebp
jne
xchg
sbb
call
inc
scas
and
pop
and
shld
lret
jg
mov
mov
and
push
dec
add
int3
jl
iret
nop
dec
out
jl
popa
push
mov
lock
repnz
cmp
in
jae
xchg
ret
sarb
jl
sub
inc
and
cld
movsl
sub
std
inc
pop
push
xor
fidivrs
xchg
mov
aaa
and
and
fdiv
dec
hlt
ss
fs
mov
cltd
fstpt
mov
movsb
mov
dec
adc
sub
cmp
cmp
testb
add
and
cmp
mov
push
fsubs
leave
test
pop
aam
xchg
mov
insb
sbb
pop
add
pop
jbe
jbe
outsb
scas
lcall
andb
nop
xor
xchg
clc
or
das
mov
call
or
xchg
and
jge
nop
jns
inc
fcmove
clc
testl
nop
push
pop
adc
xor
test
jl
lods
push
push
mov
sub
push
aad
rcll
arpl
xor
sahf
sub
cmp
mov
mov
repnz
shl
fsubrl
loop
sbb
xchg
fbld
jnp
and
lods
push
int
sbb
add
mov
mov
ficoml
movsl
lahf
std
xchg
popf
pop
test
fsubrl
or
out
es
mov
mov
pop
test
test
push
dec
out
and
popf
push
sub
mov
je
dec
lea
adc
jmp
repnz
or
test
rcll
popa
pushf
negl
inc
and
adc
inc
mov
fdivrl
dec
pushf
mov
jnp
pop
sbb
push
out
lahf
mov
and
xchg
popa
jp
pushaw
inc
test
jno
cmp
xor
mov
fisubl
mov
mov
pop
xchg
out
cmpsb
sub
xchg
mov
test
das
mov
arpl
fsubrl
sbb
jp
mov
dec
cltd
sub
stc
fidivl
loope
mov
aas
popa
sub
xor
push
add
sbb
insl
test
test
pusha
push
and
or
fs
jne
mov
xorl
fincstp
xchg
fisttps
in
jmp
movsb
incb
add
mov
and
test
xchg
stos
mov
cld
negl
xchg
fisttps
push
jle
rclb
movsb
sub
das
cmp
mov
fistpll
xor
rcrl
dec
aas
out
mov
or
push
adc
shlb
pop
inc
and
imul
stc
sub
mov
popf
jg
jle
cld
add
or
and
adc
cltd
jno
mov
pop
push
data16
pop
ret
in
outsl
adc
loopne
test
dec
pop
stos
push
fdiv
xchg
jb
aam
jmp
xchg
adc
imulb
enter
mov
repz
xchg
and
xor
sub
js
and
cmp
lret
add
popf
out
leave
inc
jmp
icebp
push
pop
inc
scas
std
mov
icebp
por
xor
cld
adc
cmc
and
xchg
lahf
sarb
out
sub
adc
dec
push
imul
out
ds
aam
out
mov
movsb
mov
pop
sbb
and
shl
xchg
aad
add
repz
pop
or
out
pushf
push
addr16
daa
push
jp
cmc
sub
xchg
ja
mov
ficoml
dec
in
sbb
dec
pushf
xor
xor
enter
xlat
mov
mov
lock
movsb
das
mov
cwtl
mov
lds
jp
ret
or
std
mov
out
cltd
sbb
jg
lods
adc
add
push
cmc
jno
mov
mov
pusha
sbb
scas
sbb
ja
sbb
scas
dec
daa
xchg
mov
jnp
adc
inc
lret
ret
ljmp
mov
push
fsubrs
cmp
fldcw
enter
scas
jmp
xlat
outsl
fstpl
out
cs
push
adc
add
add
push
jg
or
rcrb
mov
shlb
cmp
jg
lahf
mov
cwtl
shr
dec
fiaddl
or
shrl
mov
jp
dec
icebp
pop
int
scas
inc
jg
js
jae
jbe
out
jo
addl
int
aad
jns
fidivrl
test
and
jge
cmp
sub
popf
sbb
mov
roll
cmc
out
pop
and
mov
testb
mov
insl
xchg
mov
or
ljmp
adcl
stos
out
and
ret
movsl
popf
add
mov
jb
popa
mov
lret
jnp
int
or
push
test
xchg
pop
loope
loop
cltd
das
fs
xor
loopne
push
test
push
jle
jge
cmp
mov
dec
inc
gs
test
shll
add
xor
imul
clc
push
out
arpl
test
fstps
mov
dec
jnp,pt
or
dec
jmp
rorb
adc
xor
mov
pop
dec
add
std
bound
cmc
test
shl
movsb
add
movl
test
add
add
and
inc
cld
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
je
mov
xor
mov
sub
add
mov
jmp
mov
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
mov
jmp
test
lock
orb
enter
sbb
addb
lea
insl
scas
lcall
adc
movsl
jmp
mov
pop
cld
sbbl
mov
call
out
shrl
aas
scas
cld
ljmp
cmp
repz
dec
aam
push
sub
jge
ret
jb
clc
hlt
rcr
je
inc
mov
cmp
push
adc
repz
xchg
sahf
stos
daa
lret
mov
arpl
loop
sub
mov
jg
push
mov
loope
jge
mov
gs
xchg
repnz
ss
popl
inc
les
fcmovu
lock
in
inc
inc
cld
mov
adc
jp
shrb
pop
in
pop
test
xchg
mov
int
jb
loope
adc
aas
jle
lock
add
cmpsb
in
or
les
sub
cli
and
es
pusha
and
xchg
add
jo
add
pop
andb
loop
cld
adc
jns
mov
scas
adc
pop
jno
jge
je
cmpsb
test
mov
fdivrl
add
aam
pop
adc
mov
call
sbb
filds
add
pop
ret
jmp
xor
les
iret
nop
addb
out
mov
mov
rcrl
ljmp
daa
nop
pop
std
or
dec
repz
roll
repz
fwait
imul
lds
in
mov
cld
testl
fdivl
shl
jne
inc
sub
inc
sub
outsl
test
repz
adc
rolb
add
in
adc
push
dec
cmc
mov
mov
jbe
dec
mov
xchg
out
scas
fdivl
js
adc
testl
inc
mov
sub
push
dec
jle
pushf
jg
int3
add
fwait
ret
loope
incl
mov
cltd
dec
lds
jno
dec
add
push
push
lds
or
adc
mov
sbb
ss
call
jb
pop
in
sub
sti
lcall
mov
cmc
pop
fsubl
dec
mov
push
mov
mov
push
cmpsb
movsb
adc
les
pop
arpl
rol
decl
icebp
iret
sbb
or
jecxz
scas
cld
xor
add
or
push
mov
movsl
lcall
cltd
mov
lea
or
test
sbbl
imul
cwtl
xchg
loopne
jecxz
aas
add
inc
stos
xor
out
jno
int
int3
jbe
mov
fwait
push
dec
jle
mov
mov
cmp
insl
movsb
mov
sbb
daa
push
pop
andb
push
shlb
cmpsb
scas
in
scas
loope
fidivrl
adc
or
shld
rcrb
lods
cmp
cmpsb
stos
add
add
daa
sub
insb
xor
push
mov
sti
and
or
fistpl
mov
xchg
hlt
mov
lcall
xchg
subb
xchg
pop
roll
or
mov
ljmp
mov
mov
pcmpgtw
mov
lret
xchg
outsb
lock
lret
jle
cmp
jp
jae
negb
fpatan
scas
adc
hlt
pop
int
and
xchg
xchg
loope
mov
inc
nop
bound
scas
sbb
loopne
rorb
xor
sarl
lods
xchg
sarb
outsb
and
jbe
mov
rorl
dec
inc
test
sti
lahf
mov
mov
jno
cmp
mov
mov
cltd
add
pop
sbb
out
cmp
mov
cmp
in
mov
xor
xchg
inc
int
das
pop
je
pop
je
jnp
rolb
ja
xchg
outsb
xor
shll
fstps
leave
push
imul
arpl
dec
cmpsb
jp
or
sahf
or
in
enter
lock
loopne
mov
jp
cmp
js
stc
aaa
in
movsl
ror
pop
scas
out
mov
icebp
mov
mov
dec
addb
mov
add
scas
lods
jno
jmp
clc
int3
stos
fs
daa
mov
jl
lods
popa
aas
jg
mov
inc
fdivl
adc
dec
adc
ljmp
mov
push
and
lret
inc
dec
repnz
adc
ljmp
and
xchg
popf
inc
loope
inc
bswap
lds
subb
lods
aam
xchg
cld
orl
in
ret
cltd
sahf
and
outsb
sbb
mov
mov
dec
movb
lret
loop
mov
rcll
xchg
xchg
mov
jae
mov
mov
sti
movsl
sbbb
push
cmovp
inc
mov
imul
mov
imul
jp
cmpsb
sahf
mov
lcall
jle
dec
mov
jo
xchg
mov
bound
test
out
xor
add
aas
test
xor
lcall
dec
jns
lret
popf
add
cmpsl
data16
push
popl
pop
mov
insb
inc
push
cwtl
daa
fdiv
push
mov
cmp
xchg
into
imul
imul
inc
xor
mov
stos
fsubp
lods
stos
mov
mov
mov
mov
jmp
cmp
insb
or
out
fildll
fimuls
fcompl
in
test
xchg
and
dec
andl
int
ret
jge
cs
xchg
enter
aaa
mov
test
push
lea
sub
push
imul
adc
insl
mov
sub
lods
sbb
es
inc
loopne
fistpll
repnz
xor
clc
mov
jg
dec
mov
jo
test
pop
cmp
hlt
sbb
aad
xchg
jbe
ss
pop
pop
ret
add
outsl
push
fsubl
test
sub
and
push
pop
pop
lahf
loopne
xchg
push
fadds
sarl
jp
inc
cmp
push
lcall
mov
ja
push
rcrb
and
jo
sbb
pushf
mov
push
rol
push
cmp
jecxz
addb
xchg
mov
mov
out
mov
or
fcoml
add
inc
ja
pop
pop
xchg
stos
mov
push
movsl
stc
cld
dec
jge
push
dec
sub
dec
int3
in
jb
mov
jg
adcb
add
loopne
les
push
cltd
xor
aaa
cmpb
jae
dec
aad
imul
call
pop
das
mov
mov
mov
pop
mov
xchg
dec
std
daa
filds
xor
jb
cltd
cmc
sahf
mov
inc
dec
xchg
nop
xchg
jns
into
sub
movsb
je
xchg
mov
orl
xchg
push
xchg
jle
mov
or
cmp
test
mov
mov
mov
cmp
cld
iret
inc
dec
cli
arpl
pop
scas
sbb
push
shll
ds
out
stos
data16
rep
loop
adc
loopne
mov
mov
mov
cltd
mov
sbb
xchg
mov
pop
add
out
push
pop
xchg
sar
jo
insb
and
jl
cmp
insl
add
cmpsb
scas
ret
dec
pop
sbb
push
aaa
pop
nop
shrl
test
rorb
dec
int3
inc
and
repnz
xchg
stc
jo
ret
ss
adc
cmp
push
repz
jmp
popa
ljmp
cltd
cs
out
xor
push
or
popa
es
mov
js
mov
pusha
mov
jne
mov
fstps
sub
mov
dec
or
outsb
mov
add
rcrb
cwtl
imul
jae
fwait
jb
popf
push
repnz
in
mov
insb
jmp
sub
lea
daa
ret
decb
push
dec
cld
loop
insb
loopne
out
sbb
shlb
xchg
shll
std
sub
pop
pop
lret
inc
sbb
lea
push
inc
adc
enter
lock
inc
bnd
mov
rcl
sub
js
add
loopne
arpl
out
cmp
not
jmp
int
mov
pusha
and
mov
cmp
mov
lock
xor
scas
lcall
out
sbb
pop
insl
dec
gs
add
push
mov
lods
mov
cmovle
lods
push
sbb
cltd
rol
outsb
inc
rcl
out
outsl
and
dec
rcl
pop
push
shl
cmp
loop
and
push
cmpsb
hlt
ret
addr16
dec
stc
sub
fs
xchg
push
clc
xor
jnp
scas
inc
add
lret
lods
shr
js
inc
test
add
fwait
or
cmp
mov
pop
ficomps
and
mov
sbb
xor
add
aam
dec
mov
adc
mov
xor
inc
and
add
lods
in
imul
xchg
scas
sbb
out
lret
and
sub
stos
cmp
cmp
jg
icebp
sbb
dec
lds
les
inc
or
inc
mov
inc
xlat
add
xor
sub
cmpsb
popf
mov
leave
xchg
adc
push
or
jns
xchg
orb
xchg
xchg
push
loope
leave
sub
cmpsl
push
cmp
outsb
xlat
xchg
add
sbb
test
push
dec
xor
push
mov
ljmp
mov
sub
or
mov
adc
cmp
adc
fstps
lds
cmc
into
cmpsl
icebp
ja
aaa
imul
sub
push
arpl
adc
pop
lahf
mull
push
xorb
imul
pop
pop
es
shlb
xlat
jmp
das
mov
add
pop
jbe
pop
push
pop
cmc
sbb
mov
add
push
pop
outsb
push
mov
cld
std
cmp
and
push
fldl
sbb
ja
lods
dec
daa
xchg
sbb
movsb
cmp
test
add
fisttpl
loopne
fldl
jecxz
sub
adc
jge
movsb
daa
push
stc
leave
insb
std
icebp
imul
pop
xchg
sbb
cmp
aas
mov
imul
push
repnz
insb
cwtl
jnp
pop
sti
es
aas
xchg
pop
mov
cmp
jo
mov
inc
and
sub
push
in
jl
pop
add
mov
push
cmp
sbb
scas
test
inc
std
loopne
out
pushf
pop
jbe
jg
cld
jg
in
mov
fxam
sub
mov
pushf
icebp
insl
dec
in
test
mov
and
cli
dec
xchg
cwtl
jp
add
mov
inc
lcall
sbb
ljmp
push
and
outsl
pop
fildll
and
cmpsb
push
xchg
aaa
jb
jo
add
mov
cmovl
xchg
inc
sbb
pop
lret
sub
popa
sub
fidivrl
test
rcrl
lock
into
aam
mov
in
fildll
in
sbb
jno
cmp
lds
jno
cwtl
iret
stos
cltd
aam
mov
or
sub
iret
test
sub
and
into
cmpl
sbb
in
xor
pusha
out
or
xor
and
mov
mov
in
inc
fdivrl
outsl
xor
jl
adc
push
fs
or
push
cltd
mov
dec
jns
mov
push
xchg
jnp
sti
mov
xor
stos
mov
cli
dec
xchg
jne
jmp
sbb
add
movsb
mov
xchg
push
or
xchg
pop
leave
hlt
insl
lds
xchg
sbb
xor
out
nop
pop
nop
xchg
dec
xor
sbb
mov
out
adc
ror
lds
insb
cltd
or
nop
cmpsb
inc
pop
repz
sub
dec
xchg
push
push
lock
dec
jnp
lret
pop
leave
dec
push
or
xchg
xchg
in
subl
cld
popa
sbb
adc
shr
adc
pop
arpl
and
xchg
push
cs
fdivp
cmpsb
mov
push
insb
jbe
cmpsb
push
std
dec
xchg
inc
xchg
lret
adc
pop
call
cs
ja
xchg
mov
jbe
mov
add
lahf
stc
fsubr
outsl
dec
ljmp
push
stc
mov
scas
aaa
test
mov
hlt
cwtl
add
sti
out
in
out
addr16
push
cmp
xor
popf
adc
in
push
fmull
arpl
out
cmp
sahf
sub
lods
dec
ja
pusha
insl
inc
std
out
in
inc
jb
or
dec
fs
cmpsl
arpl
into
inc
cwtl
add
lods
enter
jns
adc
sub
mov
cltd
push
outsl
sub
add
xchg
mov
push
rorl
sti
xchg
add
insl
test
xchg
repnz
sahf
cmova
pushf
inc
jo
jp
jb
sahf
movsb
ds
and
push
es
ret
jecxz,pn
stos
lods
in
or
in
and
jl
sub
iret
inc
pop
cmp
dec
in
mov
pop
cmp
xor
pop
and
lret
bound
je
push
leave
test
pushf
push
test
push
push
ss
test
addr16
and
mov
add
popf
clc
mov
xchg
fmulp
dec
push
loop
mov
and
fcmovnu
mov
dec
mov
push
faddp
clc
lret
sub
xor
dec
xor
jle
jmp
sub
and
adc
xlat
cmp
insb
add
push
jge
addr16
lds
out
push
add
mov
jns
loopne
lahf
cmp
roll
stos
sti
cmp
jo
mov
pop
fyl2x
sarb
mov
and
jmp
jnp
test
andb
add
cmp
pop
pop
jmp
fistl
pop
mov
cmp
inc
jae
mov
scas
sbb
test
rorb
pop
stc
jnp
mov
and
pusha
adc
jne
call
jae
shll
jnp
shrl
insb
test
inc
mov
shlb
pop
ret
decl
negl
ljmp
mov
cmpl
stos
icebp
jmp
sbb
dec
jbe
and
test
jo
and
jcxz
cwtl
sbb
repnz
repz
cmp
cld
xchg
fadds
mov
jge
xor
popf
sti
and
lea
xchg
jg
loop
std
mov
clc
dec
lahf
adc
pushw
inc
xor
or
jno
and
nop
les
xchg
lret
dec
jbe
dec
mov
inc
push
and
lea
mov
adc
gs
mov
mov
clc
mov
or
and
loop
pop
out
xchg
jnp
jl
sahf
hlt
in
add
cmp
dec
and
pop
fwait
mov
imul
das
enter
imul
leave
iret
mov
idivl
pop
pop
call
jns
mov
dec
push
pusha
dec
call
xchg
mov
and
call
ja
loope
std
arpl
jb
xor
mov
xchg
sub
jae
lods
jle
stos
jne
xor
leave
in
insl
mov
out
xor
leave
cmp
push
mov
sbb
ret
pop
dec
push
aaa
fcomps
std
cmpsl
data16
or
adc
and
cmp
imul
mov
loopne
jge
sub
and
lock
jne
int
and
call
rolb
push
mov
mov
in
add
fdivrs
in
mov
std
or
les
adc
into
pop
sub
aam
repz
jge
testb
andl
pusha
popa
xchg
fmul
xchg
lret
je
enter
xchg
mov
and
js
ret
test
mov
add
enter
sbb
pop
jo
add
pop
sti
mov
xor
lods
push
clc
imul
lds
mov
dec
cltd
daa
cwtl
pop
adc
out
sbb
xchg
lcall
mov
sti
lock
sub
mov
das
inc
inc
xchg
inc
push
nop
mov
adc
jae
sub
xor
stc
inc
mov
adc
push
pop
mov
sub
push
aaa
jg
es
out
pop
aaa
dec
test
dec
loop
pop
inc
mov
out
addb
call
stc
pop
sbb
sarb
mov
and
sarl
iret
xor
gs
pop
movsb
fs
mov
and
pop
push
xor
and
imul
call
push
pop
add
cmp
inc
cmp
jno
lret
add
pop
repnz
call
cmp
jmp
jg
sub
sahf
pop
ret
ja
jecxz
xor
dec
in
add
lds
bound
pop
adc
sub
pop
cltd
arpl
jb
mov
inc
pop
xchg
pop
cmpsb
insb
push
ss
sbb
or
jg
in
jae
jno
repnz
iret
stc
adc
loop
rclb
bound
movsl
icebp
adc
mov
out
sbb
sahf
test
inc
int3
sti
sbb
or
jl
jl
add
mov
ss
es
outsl
xchg
jge
push
es
ret
loopne
outsb
jne
inc
lds
imul
pop
adc
in
in
scas
or
mov
imul
int3
mov
fiaddl
or
and
xor
cmpsb
add
rcl
or
inc
icebp
xchg
ficomps
pop
xchg
mov
roll
dec
cmp
imul
mov
add
hlt
lahf
add
imul
lods
pusha
pop
mov
xchg
pop
inc
dec
into
add
call
or
das
out
fwait
data16
pop
jns
sti
fwait
test
push
mov
sub
loope
dec
hlt
sbb
subl
pop
lahf
ss
adc
dec
out
lds
xor
stos
ret
xlat
decb
sub
fnstenv
scas
jnp
mov
call
out
mov
bound
mov
movsb
lret
lods
xchg
pusha
sub
xor
ja
icebp
dec
mov
dec
out
mov
cmovl
imul
icebp
jl
mov
pop
jl
lock
enter
add
dec
mov
daa
mov
insl
in
xor
cmpsb
mov
fucom
fdivr
js
pop
push
sub
sub
arpl
addl
pop
add
inc
lods
push
inc
in
cs
imul
mov
lret
xor
or
gs
mov
and
push
sbb
mov
push
sbb
push
rorb
ja
add
and
call
mov
adc
movsb
or
lret
push
and
push
lret
loop
mov
jge
mov
sub
add
add
jg
lret
cmp
and
addr16
push
jb
sbb
imul
jae
enter
dec
inc
cmp
pushf
add
xchg
out
mov
pop
pop
pop
fwait
aam
nop
sbb
dec
in
lahf
push
sahf
jne
xor
mov
rclb
ret
jge
into
sbb
push
orb
ret
cmp
cld
mov
lret
out
lcall
jle
add
sarb
jl
jmp
mov
or
jae
xor
mov
mov
xor
into
pop
inc
and
mov
cmpsl
mov
and
cmp
test
or
sbb
jecxz
in
adc
add
or
lcall
mov
ret
out
rcr
gs
in
fs
cli
mov
inc
push
mov
lcall
sbb
push
or
dec
xor
inc
add
test
fdivrl
inc
les
cmpsb
testb
cltd
mov
stc
lret
pop
icebp
mov
pop
and
or
les
aam
test
roll
lds
fimull
fmulp
clc
dec
cmpsl
xor
xor
sarb
std
movsl
jo
sub
int
cwtl
loope
adc
call
outsl
fsts
mov
and
mov
pop
fwait
andl
mov
pop
test
stc
mov
and
mov
pop
cmpsl
inc
adc
jmp
arpl
pop
ffreep
xchg
mov
xor
cmp
cmp
xor
cld
pop
pop
int3
sbb
aas
push
and
bound
mov
add
lods
pop
in
sub
adc
and
div
orl
lret
mov
sub
mov
mov
jo
push
in
es
movsl
jp
dec
fadd
inc
clc
dec
repz
or
push
mov
cld
vpcomuw
push
xchg
xor
mov
adc
pop
call
enter
add
push
dec
lods
loope
dec
arpl
mov
add
scas
push
adc
testl
adc
movsb
ret
jg
lods
es
out
inc
pop
js
inc
jae
pop
sub
outsb
bound
jge
pop
mov
sub
mov
jmp
loop
push
pop
jmp
add
outsb
push
or
enter
sbb
jmp
and
shrb
lahf
popa
orps
sbb
mov
mov
mov
mull
rolb
std
insb
sbb
shll
push
pusha
pop
jl
out
lcall
pusha
leave
daa
mov
inc
jns
sahf
dec
push
push
dec
sahf
mov
push
xor
icebp
test
push
lea
or
jmp
lcall
push
fwait
pop
xor
rolb
xor
nop
loopne
aaa
adc
mov
adc
aad
mov
and
cs
flds
pop
fistl
mov
hlt
cmp
sbb
icebp
xor
add
cmp
rorb
push
cmp
decl
and
aas
fwait
mov
cli
ffree
or
sbb
jbe
mov
gs
xchg
popa
scas
cmp
test
mov
imul
dec
fstl
jno
scas
jl
sahf
loop
mov
test
leave
insl
stc
in
sahf
call
loop
in
sti
jae
dec
xchg
jne
jmp
adc
cld
or
out
in
fwait
mov
inc
or
jo
shll
inc
rclb
pop
test
and
dec
inc
jmp
pop
sub
sbb
into
loope
insl
pop
and
cli
movsl
outsb
cmp
sub
xchg
jg
ljmp
xchg
sub
adc
jbe
jb
imul
scas
mov
jge
jo
repnz
push
jl
add
push
xlat
test
jle
xchg
mov
push
adc
andb
and
pop
jp
or
insb
jle
and
loopne
xchg
adc
into
add
push
enter
xor
out
cmpsb
mov
mov
push
cmp
jb
iret
cld
fstl
push
dec
mov
insb
clc
add
sub
ret
mov
xchg
leave
loope
inc
jne
mov
cmp
sbb
mov
inc
sub
stos
popa
dec
repnz
sub
jmp
leave
push
push
mov
cs
pushf
mov
inc
enter
outsl
inc
mov
lcall
sub
or
dec
cmp
lret
push
fidivl
in
loopne
stos
lcall
or
pop
mov
hlt
rcll
lock
test
fnstenv
rcll
sub
jecxz
popf
jge
inc
cmpsb
pop
sahf
icebp
aam
lods
ljmp
ficoms
es
push
das
inc
insl
dec
mov
aaa
add
add
xchg
sbb
imul
push
sahf
jle
outsb
outsb
ss
mov
add
inc
inc
mov
and
and
mov
rcr
popa
in
push
jecxz
insl
out
test
push
jge
jnp
cmp
jmp
js
enter
xchg
adc
out
xchg
mov
sbb
test
lret
popf
stos
mull
sub
mov
sbbl
es
insb
jge
in
aad
je
push
adc
test
cli
insl
das
inc
into
cmp
jmp
xchg
in
into
xchg
jb
mov
cmp
in
pop
aam
mov
mov
idivb
adc
addr16
inc
jnp
dec
fmull
push
sub
mov
sub
mov
iret
ficoml
rorb
imul
jnp
push
ja
add
lret
sahf
mov
daa
loopne
push
inc
fs
mov
loop
lret
test
ljmp
fidivs
out
sbb
xchg
shll
push
mov
stos
add
jg
pop
mov
jnp
lret
repz
xor
sti
xchg
cmpsl
jg
adc
or
and
fdivrl
inc
adc
in
andl
xchg
mov
jno
push
popa
xchg
push
int
jno
lods
dec
push
insb
mov
scas
inc
in
jno
lea
xor
and
leave
adc
lahf
sbb
mov
adcl
cmc
cmp
xor
or
mov
mov
xor
stos
sbbl
cwtl
push
lods
adc
in
imul
push
lahf
fstps
test
and
cmp
inc
outsb
aad
jl
xchg
push
mov
adc
cmc
cli
mov
cwtl
xchg
mov
popf
outsb
push
sub
ljmp
fs
jnp
mov
stos
sbb
test
sahf
sub
inc
leave
adc
sbb
cwtl
or
adc
and
out
adc
mov
icebp
add
subb
xor
xchg
mov
pop
sbb
or
leave
call
inc
imul
clc
and
pop
call
test
std
scas
dec
rclb
adc
ljmp
xchg
sub
jecxz
push
imul
jo
and
test
xchg
mov
fldt
insl
sbb
popa
push
xor
push
mov
fdivrs
cwtl
cld
cwtl
or
push
js
sti
push
sahf
adc
push
cmpsl
jecxz
mov
push
adc
xor
clc
mov
cmp
push
fstps
enter
push
or
sbb
jnp
cli
pop
popa
cmpsl
lcall
adc
dec
inc
scas
mov
push
fdivrl
xchg
sbb
adc
and
lods
in
mov
sti
push
cmp
fwait
jg
pop
pushf
mov
int
push
jo
repz
popa
and
inc
or
push
jne
das
repz
out
cmp
js
stos
lods
pop
and
sahf
mov
pop
jecxz
fwait
pop
cmpsl
scas
sbb
loope
mov
push
and
dec
test
sbb
xchg
push
cld
mov
or
xchg
andl
fdivrs
rol
loope
jge
pop
push
dec
fists
sarb
mov
repz
aam
lcall
push
int
test
jmp
ja
add
sbbl
es
and
or
lcall
sahf
push
xchg
mov
cmpsl
ret
add
cmp
pop
ss
ljmp
cmp
call
inc
mov
iret
outsl
cld
out
sub
dec
inc
test
lea
enter
jo
mov
inc
dec
fxam
lock
xchg
inc
fdivl
enter
daa
mov
cmpb
jmp
jb
hlt
shll
nop
jl
outsl
popa
inc
xor
ss
or
in
repnz
fadd
fisttps
xchg
lds
push
cwtl
aas
mov
pop
xchg
cmp
xor
mov
ficomps
leave
xchg
fldl
xor
adc
mov
jle
mov
or
lods
cmc
js
loope
cmp
insb
pop
popf
xchg
xor
mov
sbb
push
test
or
mov
or
aam
ja
mov
mov
cli
add
sbb
pop
adc
push
dec
pop
dec
sti
pop
daa
inc
sbb
fstps
sbb
pop
jnp
out
ffree
ja
mov
or
push
icebp
mov
pop
bound
cmp
adcl
icebp
fadd
xor
shl
test
neg
das
les
inc
adc
mov
test
cs
cs
scas
dec
push
shrb
rcl
inc
inc
shr
test
loopne
outsl
jecxz
mov
das
outsl
xor
xchg
mov
add
add
push
mov
out
inc
lock
into
cmpb
enter
sub
mov
dec
xchg
and
sahf
es
pop
mov
inc
insl
shlb
int3
loope
mov
fistpl
stos
imul
mov
imul
jno
cli
shrb
popf
mov
push
aaa
dec
sbbl
jmp
jle
ja
orb
mov
in
outsb
xchg
les
lret
mov
call
sbbb
sbb
icebp
cld
xlat
scas
cmc
pop
jb
pop
jmp
xor
push
fldcw
lds
ljmp
xor
jae
pushf
mov
gs
stc
lods
mov
mov
push
xor
and
les
pop
mov
mov
jno
ret
es
rcl
aad
xor
ret
jmp
mov
and
push
jnp
dec
leave
jp
push
add
cmpsb
mov
fisttpll
out
adc
mov
fisttpl
jle
xchg
rcrb
movsb
pop
or
xor
jns
pop
lods
mov
push
out
inc
dec
shrl
insb
in
mov
push
fistpl
sahf
insl
and
mov
dec
jg
jns
dec
cmpsl
adc
mov
xchg
mov
aas
outsl
pop
rcrl
xchg
leave
xor
and
lret
aam
cmpsl
jne
mov
shll
cmpsb
jae
in
xor
aaa
sbb
cmp
or
push
dec
or
lock
sbb
jo
xor
movsl
or
pop
lods
sti
insb
jns
and
jnp
jnp
pusha
add
testb
mov
cmp
mov
in
sub
push
xor
jge
dec
in
sub
add
mov
dec
imul
popa
outsb
jo
xor
in
sahf
adc
add
movntq
xchg
dec
nop
fld
sub
pop
stos
or
adc
out
dec
add
scas
pop
inc
hlt
jl
mov
pop
adcb
jbe
mov
adc
adc
push
pop
lcall
mov
pop
ds
test
add
xchg
push
int3
jge
lret
mov
dec
add
data16
mov
mov
lods
leave
leave
cmp
mov
rorl
xchg
lcall
mov
jg
dec
mov
cmpsl
mov
add
xchg
cmp
sbbl
jne
loope
gs
inc
pusha
outsl
aam
push
jne
or
jecxz
frstor
cmpsb
sbb
mov
in
fcmovnu
cltd
cmp
sbb
aad
pop
add
enter
ret
jecxz
xor
sub
es
sub
leave
mov
pop
pop
pop
decl
pop
pop
pop
aad
stc
add
sbb
imul
mov
mov
aaa
dec
movl
lahf
add
or
cs
iret
insl
jle
sbb
lea
dec
jns
cmp
push
pusha
mov
sub
xorl
clc
popa
cmp
pusha
pop
in
popa
and
jl
aam
in
xchg
mov
daa
adc
jnp
mov
in
aad
pop
sub
fsubr
cmp
mov
jg,pt
push
out
lret
dec
add
mov
mov
mov
movsbl
cltd
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
orl
sub
sbbl
push
push
push
andl
push
orl
push
orl
call
subl
mov
lea
push
subl
push
movl
call
cmp
je
xorl
xor
jmp
mov
xorl
push
lea
push
push
push
subl
push
adcl
call
imul
cmp
movl
jne
orl
lea
andl
push
addl
push
andl
call
cmp
jne
addl
movl
or
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
addl
movl
mov
or
lea
mov
xor
lea
sbb
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
xor
add
dec
mov
jmp
mov
mov
mov
mov
mov
sbb
xor
adcl
mov
addl
add
notl
mov
movl
mov
cmp
movl
jne
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
adcl
xor
subl
add
addl
mov
mov
xor
notl
add
sbbl
mov
mov
sbbl
xor
subl
add
mov
andl
xor
xor
inc
mov
cmpl
jb
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xorl
mov
addl
mov
mov
mov
mov
addl
mov
orl
mov
mov
decl
mov
andl
xor
add
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
sbb
mov
xor
xorl
add
jmp
lea
subl
push
addl
push
addl
call
movl
cmp
jne
push
lea
addl
push
adcl
push
push
orl
push
call
imul
movl
cmp
movl
jne
sbbl
lea
push
push
sbbl
call
movl
cmp
jne
mov
xor
mov
sbbl
xor
sbbl
lea
incl
push
add
mov
xor
lea
xorl
push
movl
mov
xorl
pushl
adcl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
xor
and
lea
mov
neg
mov
orl
xor
orl
xor
xorl
add
mov
addl
xor
movl
lea
movl
mov
cmp
jbe
xor
or
or
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
movzbl
adc
mov
subl
sub
andl
xor
mov
lea
mov
xorl
lea
subl
mov
lea
subl
push
addl
push
call
movl
cmp
movl
jne
push
lea
xorl
push
push
adcl
push
push
call
imul
cmp
jne
lea
push
push
subl
call
movl
cmp
movl
jne
lea
addl
push
negl
push
addl
call
movl
cmp
movl
jne
xorl
push
orl
lea
andl
push
subl
push
adcl
push
xorl
push
orl
call
imul
movl
cmp
jne
orl
lea
push
subl
push
notl
call
movl
cmp
movl
jne
lea
push
subl
push
subl
call
movl
cmp
jne
addl
push
lea
push
sbbl
push
push
push
call
subl
imul
movl
cmp
jne
addl
lea
orl
push
push
andl
call
movl
cmp
movl
jne
andl
lea
adcl
push
orl
push
sbbl
call
movl
cmp
movl
jne
xorl
push
lea
orl
push
push
push
subl
push
call
imul
movl
cmp
movl
jne
addl
lea
orl
push
andl
push
andl
call
cmp
jne
orl
lea
subl
push
xorl
push
addl
call
movl
cmp
movl
jne
adcl
push
xorl
lea
xorl
push
adcl
push
push
sbbl
push
adcl
call
imul
cmp
jne
movl
lea
addl
push
notl
push
call
movl
cmp
jne
lea
xorl
push
push
addl
call
movl
cmp
movl
jne
push
lea
adcl
push
xorl
push
adcl
push
xorl
push
call
adcl
imul
movl
cmp
jne
lea
xorl
push
push
orl
call
movl
cmp
jne
addl
lea
movl
push
push
adcl
call
movl
cmp
jne
andl
push
lea
push
push
subl
push
sbbl
push
call
xorl
imul
movl
cmp
movl
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
cmp
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
sub
mov
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
mov
dec
mov
jmp
mov
xor
mov
push
mov
add
cmp
movl
je
movzwl
adc
mov
mov
incl
xor
andl
xor
add
addl
add
movl
adc
orl
xor
adcl
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
jmp
sbb
cmp
xchg
xchg
dec
push
adc
add
sbbl
je
jns
jmp
nop
into
scas
ds
movsb
cmpl
push
mov
test
sbb
clc
arpl
les
stos
popa
ljmp
lods
rcll
xchg
leave
and
mull
push
sub
xchg
push
repnz
and
stos
cwtl
pop
mov
pusha
push
jecxz
in
adc
mov
xchg
mov
pop
sub
adc
xchg
add
inc
inc
test
jmp
je
dec
sbb
rorl
jne
add
jnp
enter
pop
mov
ror
push
mov
out
int
icebp
rol
inc
sbb
sub
loopne
xchg
dec
iret
mov
cmp
mov
movsl
push
sbb
mov
jp
pop
arpl
mov
test
pop
lods
test
cmp
iret
cmp
aas
inc
push
push
outsl
mov
jno
jnp
and
addr16
push
jo
inc
dec
mov
fdivrs
mov
mov
jns
push
xchg
xchg
jae
cmp
das
pop
lahf
mov
cwtl
icebp
gs
adc
cs
lret
arpl
iret
stos
sub
cmp
les
mov
add
and
jns
ret
dec
sbb
or
aas
cmp
xchg
icebp
dec
lret
call
aaa
js
xor
add
jne
icebp
pop
inc
jge
mov
aad
test
arpl
repnz
mov
sbb
pop
sbb
mov
stc
fidivl
enter
sub
jmp
ror
and
sbb
jne
pop
push
loopne
int
adc
fwait
aaa
adc
mov
push
pop
icebp
and
dec
inc
push
jecxz
and
stos
test
adc
jo
push
mov
pop
dec
jno
push
xchg
or
push
int3
addb
add
clc
loope
fs
shll
jne
inc
sub
mov
inc
mov
stc
cmpsb
repnz
or
mov
shlb
jae
inc
pop
clc
lcall
pop
in
mov
ret
aas
test
out
and
cmpsb
xor
pusha
mov
pop
inc
popa
dec
xchg
loop
cmp
push
xor
aam
lods
test
pusha
les
xor
vaddpd
leave
add
repnz
repz
arpl
icebp
fnsave
fdivs
aaa
mov
mov
sahf
cmp
pusha
cld
inc
int3
jp
inc
push
jne
pusha
lock
mov
push
fwait
out
addr16
jae
adc
inc
addr16
xchg
push
ret
popf
mov
out
shrl
imul
cld
decl
lock
xor
jmp
sbb
adc
inc
or
add
stc
pop
std
int3
fbstp
push
rcrb
xchg
test
movl
loopne
push
hlt
xchg
mov
jmp
cmp
pop
and
xchg
add
push
shll
pop
aas
shll
jo
mov
popa
fsubs
int3
or
rorb
cld
sbb
fidivrl
fwait
mov
lods
mov
xchg
xchg
cmp
dec
stos
cli
cmpsl
int
loopne
leave
jmp
ljmp
aam
notb
or
xchg
xor
pusha
sub
mov
fildl
fadd
mov
or
mov
add
mov
push
pop
pop
adc
sbb
sub
sub
cld
mov
loope
or
pop
stos
lods
sar
xchg
adc
std
js
rclb
fsubl
gs
cwtl
jae
ljmp
insb
ret
scas
xchg
adc
mov
inc
inc
xlat
sbb
dec
imul
jns
int
daa
subb
cld
or
cltd
inc
ret
xchg
stc
mov
xchg
xor
dec
int
in
test
pop
and
xchg
fidivl
or
xchg
ss
fisttps
push
inc
sbb
xchg
sub
dec
cld
and
es
aam
cmp
cmp
pop
push
cs
lods
insl
aad
sbb
xchg
mov
jmp
dec
jl
mov
imul
iret
fldenv
jno
mov
inc
xlat
adc
jbe
arpl
mov
or
mov
add
js
jl
insb
or
test
fsts
or
out
test
and
xchg
les
add
nop
inc
adcl
push
jne
xor
xchg
mov
movsb
sub
rsqrtps
mov
add
daa
push
fwait
hlt
divl
cmp
dec
mov
pop
and
lods
shrb
add
les
div
sbb
outsb
sub
mov
pop
imul
and
mov
dec
pop
call
push
inc
mov
call
jno
sbb
and
out
jo
jle
push
xchg
xchg
mov
mov
jmp
xchg
lods
dec
clc
mov
push
add
stos
imul
adc
sbb
sbb
xchg
orl
stos
les
jo
in
mov
rcrb
adc
and
lret
xor
je
js
push
jmp
iret
jne
pop
mov
dec
shrl
mov
bound
pop
movsb
test
cmpsl
cmp
and
stos
cmp
sub
xor
push
xor
mov
mov
mov
add
adc
adc
pop
andl
dec
sahf
sub
lods
inc
rorl
lahf
dec
pop
cmp
dec
aaa
sub
mov
leave
aas
daa
daa
stc
inc
fchs
push
mov
shll
push
jp
iret
and
or
dec
mov
dec
sub
mov
push
out
sbb
sahf
sbb
push
pop
out
shrb
out
mov
add
and
xchg
sub
lret
sbb
scas
mov
fs
sub
fcmovnb
inc
jns
in
jmp
movsb
cmpsb
test
test
cs
arpl
xor
aaa
adc
daa
pop
push
outsb
lret
push
dec
scas
cmpsb
pop
lret
lds
pop
ss
xor
mov
and
repnz
adc
aas
mov
test
jmp
out
sbb
mov
fs
insb
cmp
mov
mov
mov
adc
clc
sub
adcb
adc
or
insl
out
insl
repnz
push
jmp
ja
mov
and
sahf
pusha
mov
aad
sbb
lods
loope
pop
ret
xchg
mov
adc
dec
fcmove
es
xchg
test
xlat
sbb
cwtl
testl
mov
mov
leave
rol
test
insb
mov
imul
adc
outsb
or
sub
mov
adcb
jno
out
sbb
outsb
xor
push
out
fstpl
rclb
fsubrs
gs
fs
mov
clc
mov
cwtl
pop
mov
shl
sub
adc
cs
fwait
sub
lds
fdivp
cmp
cmpsb
sbb
xchg
jae
inc
into
ffreep
sbb
push
in
test
jno
fsub
loopne
sub
addl
ja
jbe
fnstenv
xchg
mov
cli
add
push
push
xor
imul
xchg
sub
add
into
jp
mov
movb
inc
jno
into
in
movsb
dec
jg
mov
lea
dec
and
rorl
pushf
int
dec
push
lea
jp
sbb
pop
fildll
arpl
cld
stc
jmp
stos
in
fs
or
cmp
aaa
lret
push
inc
pop
mov
pop
pop
ficompl
ret
addr16
cmpsl
fcomps
push
cmp
push
sub
movsb
cmp
mov
gs
pop
fcmovne
xor
mov
mov
jmp
iret
mov
dec
pop
sub
jo
inc
cmp
add
ret
pushf
mov
xchg
push
lret
cwtl
testl
int
push
or
xchg
je
aam
cld
mov
mov
es
inc
pop
loop
mov
iret
jmp
adc
in
xchg
dec
pop
mov
adc
lcall
jo
and
xor
jg
xchg
jbe
sahf
inc
cs
dec
ficompl
inc
jp
xor
dec
mov
test
jmp
mov
lret
sbbl
xchg
adc
sub
or
jecxz
mov
sbb
cmpsb
leave
test
mov
push
mov
xor
sahf
dec
in
xchg
fbld
push
insb
xor
xchg
mov
pop
lock
push
cli
pop
xlat
aam
or
sbb
enter
adc
sbb
jbe
jo
lods
xor
push
mov
lea
sub
ds
mov
xor
xor
pop
cmp
dec
inc
lods
add
movsl
push
xchg
out
and
cmp
lcall
leave
call
mov
mov
cmp
test
dec
rorl
adc
dec
out
push
and
mov
adc
cmp
cmp
sbb
lret
sbb
and
jp
or
int3
sar
dec
lea
ret
cltd
or
dec
dec
sub
les
shl
int
arpl
mov
sti
ljmp
adc
data16
call
sbb
int
cmpl
sbb
xchg
and
lcall
loop
xor
and
test
js
or
jle
push
xor
mov
shlb
jns
mov
inc
inc
jmp
cmp
lret
xchg
js
das
fistl
std
cwtl
arpl
es
clc
fists
enter
and
cwtl
ss
fisttpl
sar
imulb
push
adc
in
pop
arpl
les
imul
and
push
pop
inc
pop
loopne
inc
mov
xor
incl
lea
xor
dec
mov
xor
xor
scas
mov
leave
cmp
sub
cmp
jno
xor
adc
cld
pop
jge
push
fistpl
mov
out
ds
cmpsl
dec
ds
inc
mov
mov
add
repz
fldcw
icebp
xor
das
fdivl
popa
or
cltd
mov
sbb
test
sub
mov
mov
jnp
push
fnsetpm(287
jge
in
fnstsw
nop
mov
xor
sarb
push
mov
sbb
dec
cmp
pusha
inc
cmpsl
pop
dec
testl
fidivs
mov
xor
fdivp
xor
mov
sub
sar
movsl
push
lock
push
push
cmp
test
cltd
je
imul
test
and
aad
pop
mov
loop
jecxz
xor
pop
decl
ret
push
cltd
pop
xor
pop
das
dec
outsb
cs
mov
lods
ljmp
out
test
xchg
xor
mov
rclb
push
lods
lahf
mov
cltd
jge
lcall
jp
xchg
pop
jg
xchg
cmp
cmp
cmpsl
mov
lea
sub
push
inc
mov
js
xor
xchg
js
ret
push
stos
pop
arpl
in
sub
cmp
jb
ljmp
pop
sar
push
dec
or
mov
int
test
xchg
or
pusha
mov
jmp
xor
pop
pop
inc
icebp
xor
lcall
outsb
mov
adc
push
fwait
mov
lret
jl
push
jg
push
cmp
lret
in
in
cmpb
add
add
hlt
jecxz
adc
ret
pop
xor
sbb
in
jns
pop
pop
inc
movsb
adc
or
test
loop
jmp
sbb
mov
imul
cmp
dec
adc
pop
rcrl
xchg
pop
mov
jbe
stos
mov
ss
cmpsl
in
inc
or
fsub
sbb
decl
js
dec
aad
sub
pop
sbb
or
push
std
mov
fldt
in
push
mov
jecxz
mov
mov
cli
pop
mov
cmpsb
sbb
mov
fidivl
sti
xchg
cmp
shll
cli
test
xchg
sbb
or
xlat
mov
cmp
jbe
mov
ret
adc
fwait
push
mov
fnstsw
mov
fdivl
cmc
xchg
test
lret
in
lret
test
jge
jo
jae
js
cmp
and
clc
inc
push
lret
aaa
sub
test
stos
mov
cli
or
jb
mov
cli
or
insl
js
adc
or
adc
testl
fstps
fidivs
pop
push
xchg
and
rorl
lds
pop
fwait
cli
movsl
scas
and
jg
jbe
inc
inc
jnp
mov
push
jge
xchg
ret
mov
mov
inc
push
cmp
out
mov
imul
xorl
int
mov
pop
xchg
add
mov
popa
int
inc
rclb
pop
icebp
xchg
xchg
adc
out
sahf
out
sub
xchg
inc
enter
iret
fwait
dec
fwait
loopne
push
jb
cltd
dec
ret
mov
movsb
adc
pop
inc
ja
divl
adc
jo
push
cwtl
sbb
sub
pop
into
das
cmp
sbb
add
std
imul
dec
adc
fwait
push
xchg
cmpsl
push
or
icebp
inc
jae
and
xor
loopne
push
pop
jb
push
jns
ds
mov
repz
add
shrb
test
xchg
and
lret
stc
sti
cli
fwait
add
mov
jmp
sbb
arpl
popf
or
pop
add
out
nop
jge
xchg
mov
mov
jno
fbstp
push
add
test
mov
es
fdivp
jbe
mov
sahf
add
test
call
cmp
jl
mov
lds
frstpm(287
mov
dec
mov
jnp
fbld
int3
push
xchg
push
adcb
cmpl
pop
mov
das
stc
stc
int
pop
test
add
push
ja
pop
fildl
int
push
xlat
std
dec
push
xchg
popa
jnp
adc
and
fwait
pop
sbb
imul
jge
add
leave
mov
es
outsl
rol
add
push
xchg
das
js
jmp
xchg
jl
in
es
adcb
gs
cmp
mov
insl
stos
lea
pop
test
les
mov
cli
scas
ja
inc
jp
mov
scas
fdivrl
sbb
lods
push
andb
jge
cmp
pop
jle
inc
add
dec
insb
das
mov
xchg
push
cmp
imul
test
adc
jmp
gs
sbb
shll
pop
loop
andb
popf
repz
jle
xor
and
iret
mov
or
mov
add
xchg
push
movsb
outsb
loop
clc
mov
sti
sub
out
movsl
sbb
outsl
loopne
sbb
rcl
cmp
xchg
loopne
imul
ret
sub
push
push
lock
cmpsl
repz
and
mov
rcrl
in
push
cmp
or
das
and
movb
xchg
xor
addr16
fstps
ja
in
cmp
loopne
out
pusha
fidivs
imul
daa
in
aaa
jle
fwait
cmc
rolb
mov
mov
outsb
xchg
inc
in
mov
pop
xchg
mov
pop
xchg
mov
jp
popf
mov
push
cmp
dec
lret
xlat
cld
cwtl
cli
insl
dec
shlb
jns
clc
adc
mov
je
scas
inc
sub
jnp
jp
xchg
cmpsl
lcall
les
inc
push
sbb
hlt
push
out
cli
lds
test
and
ret
scas
sub
mov
mov
pushf
adc
fsubs
outsl
mov
fnstcw
call
mov
xchg
sub
and
rclb
xor
push
or
stos
not
test
call
repnz
sub
fmul
roll
cmpsl
push
and
jne
mov
push
xchg
data16
fwait
mov
pop
mov
das
inc
fisttpll
pop
les
in
sarb
mov
or
adc
fld
pop
scas
dec
adc
xor
movsl
adc
call
adc
movl
rolb
inc
dec
push
lret
inc
lods
rclb
das
rorl
cmc
cmp
lcall
cmp
fldt
sbb
out
aam
jmp
out
in
fdivl
imull
xor
stos
out
arpl
jae
push
fwait
pop
xor
xlat
arpl
push
xchg
ret
mov
dec
dec
mov
aad
loope
add
lods
mov
cmp
aaa
rorl
sahf
lods
push
adc
xor
mov
pop
push
divl
dec
adc
fcoml
mov
add
outsb
jno
cmpsb
push
lcall
aad
out
cmp
cli
fbld
dec
fwait
outsb
std
inc
lcall
cltd
mov
push
jp
xor
adc
cwtl
popa
inc
pop
jmp
stos
arpl
xchg
jnp
or
xor
push
cmpsl
push
add
loopne
sti
stos
out
or
mov
mov
cmp
cmp
adc
add
adc
adc
pop
xlat
dec
and
jmp
cltd
sub
fs
stos
mull
nop
lds
push
movsl
sub
in
fs
test
jmp
ljmp
adc
clc
stos
lcall
mov
shr
xor
ds
rorb
jg
sbb
mov
into
insb
fnsave
rcr
sbb
cli
mov
and
mov
rcl
cli
sbbb
lcall
roll
fdivp
pop
xchg
jecxz
jle
outsl
inc
adc
mov
scas
dec
mov
test
xchg
sbb
into
mov
inc
pop
lea
push
in
ss
stos
pop
rcll
xor
mov
fisttps
push
cld
mov
mov
and
inc
stos
mov
sti
sti
jbe
pop
push
mov
ficomps
fisubl
inc
push
push
clc
dec
std
scas
ds
and
in
dec
out
jno
les
in
test
or
cld
push
in
mov
pop
pusha
cltd
adc
inc
sbb
push
mov
cld
push
push
jmp
jmp
add
inc
push
ljmp
pop
lods
jne
and
mov
aam
pop
push
mov
sti
out
mov
push
jo
adc
mov
jne
jo
lods
dec
nop
xchg
add
outsb
into
mov
aaa
mov
pop
pop
scas
loop
and
lods
cmp
mov
push
add
test
aam
enter
int3
dec
movsl
and
cmp
xchg
sbb
pop
xchg
mov
sub
push
mov
sub
insb
push
lds
dec
test
inc
testb
imul
rorl
arpl
into
mov
repnz
in
fnstenv
ja
mov
into
or
cmpsb
jge
call
test
push
cmp
push
pmulhuw
xlat
test
xor
push
jae
leave
roll
scas
inc
mov
cli
insb
push
add
pop
mov
orl
pop
mov
mov
das
insl
rcr
xchg
add
iret
mov
jae
aaa
jo
pop
cld
imulb
call
mov
addl
pop
mov
xor
pop
xchg
mov
fwait
arpl
and
mov
mov
and
sbb
pop
imul
sbb
mov
mov
xchg
add
loope,pn
xor
dec
in
push
movsb
insl
test
dec
dec
jg
add
cld
mov
sub
lcall
shlb
out
int3
xchg
sbb
fs
push
mov
jecxz
jo
in
inc
jnp,pt
mov
sub
jns
loop
pop
fldl
bound
dec
shl
popf
dec
mov
lret
fst
repnz
nop
xor
push
xor
shr
shrb
fwait
mov
repnz
sub
mull
ret
push
xchg
cmp
in
imull
mov
je
fidivs
idivb
adc
popa
dec
ret
mov
sti
adc
lret
jns
xchg
pop
pop
out
and
movsb
push
imul
popa
popa
jge
pop
mov
cli
shr
and
cwtl
bt
jb
mov
xchg
jnp
leave
repz
idivb
loope
in
cwtl
mov
sbb
push
int
aaa
popf
jb
and
fldl
arpl
repnz
fcompl
sub
loope
adcb
hlt
pop
je
call
mov
mov
sbb
inc
sbb
les
or
jne
cmp
adc
xchg
insl
stc
xor
repz
imul
lret
popa
jmp
adc
jne
push
leave
or
pop
addr16
cmp
push
sti
push
and
cli
xchg
movsl
mov
xorl
xchg
popa
pushf
inc
ret
leave
fsubrp
mov
dec
or
ss
aam
sub
sub
adc
add
in
sbb
ss
repz
jle
inc
add
jbe
addr16
or
push
sub
adc
sub
pop
sbb
das
es
or
ret
mov
nop
mov
adcb
mov
or
ret
mov
xorl
int3
or
jg
mov
mov
push
jmp
push
pop
xlat
imul
unpckhps
aas
push
add
pop
xchg
sbb
ret
pop
testb
test
les
fnsave
jae
cmp
cmp
lods
nop
outsb
xorb
cli
icebp
bound
xchg
inc
imul
andl
movsb
push
inc
aas
stos
fnstsw
testl
scas
mov
call
xchg
or
sarl
xchg
sub
cmp
out
push
ss
cli
mov
adc
xchg
les
mov
lcall
int
and
inc
outsl
sbb
leave
loopne
jae
add
setp
fstpl
cmp
or
insb
test
arpl
imul
arpl
mov
iret
pop
inc
bound
add
stos
lock
dec
loop
adc
push
xchg
jge
mov
dec
es
fsts
rorb
pop
ret
dec
test
push
adc
push
cmp
mov
aaa
xor
fwait
lods
pop
ja
mov
dec
cmc
dec
fcoml
nop
jecxz
xchg
and
cs
sub
enter
sti
fisubrl
or
add
mov
repnz
add
adc
aas
aad
mov
push
test
jns
jp
cltd
xchg
add
popa
pop
xchg
cwtl
lods
jo
ja
lock
popa
add
push
push
mov
inc
cld
bound
dec
add
dec
adc
dec
adc
aaa
ret
fwait
mov
push
popf
clc
fdivs
add
mov
dec
out
sbb
sbb
lahf
jb
nop
push
mov
push
fstps
mov
pop
movsb
pop
dec
int3
xchg
inc
inc
push
jle
mov
push
pushf
adc
imul
mov
clc
and
pop
mov
push
jecxz
imulb
mov
cmc
test
insb
enter
es
jge
inc
pop
mov
or
add
adc
ss
int
inc
fadd
xchg
lea
xor
les
pushf
push
dec
jg
scas
rorl
fnstcw
mov
in
dec
sbb
repz
sub
add
jnp
fmull
je
shrb
cmpb
loop
or
out
cmp
stos
aaa
lret
data16
jo
mov
mov
push
jb
cmpl
arpl
in
in
mov
push
sub
movsl
fimull
into
stos
imul
add
lods
push
mov
ficoms
dec
stc
xor
push
and
flds
push
cmc
mov
sub
jo
iret
scas
xchg
add
or
mov
stos
negl
cli
xor
sub
adc
movsb
pop
add
dec
sbb
test
les
or
mov
nop
inc
pop
fstps
xor
scas
sti
sbb
jno
dec
mov
jb
xor
or
add
xchg
ss
jle
xor
dec
and
stc
loopne
xchg
repz
mov
imul
cmp
std
movsl
lret
es
or
or
test
das
lea
push
cmp
fsubrl
out
shr
jae
adc
push
xchg
std
sahf
leave
rcpps
test
mov
push
or
sub
mov
mov
out
pop
iret
push
xchg
mov
cltd
cmp
fildl
cmp
jbe
xor
jnp
rclb
arpl
in
xor
push
xor
sbb
ds
mov
cwtl
imul
xor
cmpsb
ja
pand
mov
orb
dec
add
jmp
or
cmpsl
sbb
jae
xchg
jg
jge
adc
mov
testb
cmp
add
std
pusha
lcall
loop
cs
push
mov
scas
cld
xor
into
hlt
test
dec
cmc
aad
xlat
loope
addl
pop
outsl
pop
inc
stos
push
push
mov
mov
dec
rolb
into
jmp
adc
add
mov
cmpl
dec
adcb
jg
xor
ds
cs
adc
popf
test
cmp
loop
jmp
sarl
lret
dec
aas
lock
iret
shll
std
cli
jge
lret
cmp
xor
ds
add
aas
and
repz
out
in
pop
push
sub
mov
aad
dec
adc
mov
sti
mov
xor
lret
push
lret
xor
inc
xor
mov
addr16
repnz
jge
jmp
push
mov
and
mov
imul
repz
shlb
fwait
mov
xor
data16
jecxz
jbe
push
inc
mov
push
loopne
incb
out
or
sbbl
popf
xchg
cmpsl
fwait
jmp
push
jecxz
mov
or
addr16
scas
xor
add
data16
xchg
imul
adc
in
pusha
sub
mov
xlat
outsl
icebp
sub
sub
xchg
pushf
outsb
pushf
mov
icebp
xchg
inc
pop
sarb
or
jecxz
lcall
mov
add
jg
sub
sarb
pop
call
pop
cli
push
mov
data16
data16
xchg
jg
pop
sub
popf
sbb
dec
adc
dec
cs
adc
test
cld
jns
adc
in
nop
das
call
xchg
dec
jp
jb
add
xchg
test
jnp
testb
lret
dec
mov
xlat
add
mov
movsl
fidivs
stos
dec
mov
test
jne
jp
aaa
test
dec
jnp
cmp
mov
mov
les
js
xchg
pop
dec
sub
adc
inc
nop
in
mov
inc
jle
insl
mov
add
push
dec
push
sbb
jle
iret
add
xchg
or
push
pop
dec
out
pop
test
cmpsb
pop
lret
test
int3
pop
lret
nop
gs
pusha
mov
cmp
adc
xor
vmptrst
xchg
and
jo
je
test
sub
lea
xlat
rolb
add
cmp
icebp
cmpsl
invd
xor
imul
or
push
dec
pop
jnp
ds
test
test
imul
popf
xchg
push
in
leave
dec
inc
sub
add
push
test
mov
fists
lods
popa
dec
mov
addr16
pop
in
popa
rorl
popf
pop
clc
cld
outsl
jnp
mov
mov
movsb
xor
cltd
repnz
lods
adc
rcrl
mov
xchg
xlat
aas
int3
sub
fidivrl
std
into
rol
inc
out
jnp
lea
inc
push
add
sarb
imul
dec
cmc
addb
xor
add
shlb
sti
inc
pop
stos
ficompl
cwtl
movsb
insl
mov
adc
jno
adc
leave
js
rcrl
jns
andb
outsb
dec
lods
hlt
xor
dec
addr16
shrb
movsl
pshufw
adc
xor
push
les
pop
mov
inc
aas
rcrb
int
cmc
in
mov
or
mov
push
ds
imul
cmpsl
or
pop
adc
inc
cli
movsl
arpl
mov
fmull
push
enter
aam
enter
ficompl
jns
enter
hlt
cli
sub
sti
sbb
and
stos
mov
scas
nop
movsl
mov
scas
outsb
add
sahf
push
mov
push
jmp
xchg
cmpsl
mov
nop
and
adc
sub
mov
or
cmp
std
insl
insb
jge
xchg
into
pop
cltd
mov
adc
sub
arpl
cmp
stc
mov
fstpl
jmp
mov
imul
rclb
xchg
mov
sbb
in
mov
out
std
xor
sbb
sbb
loope
cmp
inc
nop
jecxz
and
ret
xchg
mov
sahf
js
inc
cmp
inc
pop
sub
call
pop
adc
jo
or
test
add
pop
loop
sub
inc
shlb
dec
or
xchg
aam
dec
mov
xchg
fistpl
stos
dec
jmp
jbe
mov
dec
daa
xchg
ljmp
scas
sbb
imul
sub
xchg
and
sbb
jo
inc
je
or
jle
sbb
in
aam
adc
mov
mov
sbbb
adc
call
mov
pop
pop
icebp
hlt
outsb
dec
lods
or
mov
push
push
out
inc
bound
rorl
add
cmp
mov
and
jg
repnz
sub
in
mov
adc
jbe
gs
int3
outsl
push
jl
aam
push
es
nop
int3
push
push
xchg
stos
xchg
push
xchg
mov
xchg
bound
mov
push
divl
xchg
not
insl
fstps
fidivl
jns
dec
push
jb
xor
sub
dec
mov
in
test
xor
xor
icebp
out
push
movsl
xchg
repnz
mov
xor
mov
mov
fdivrl
jl
push
clc
pop
cmp
fwait
mov
jge
jo
inc
pop
aaa
sub
bound
pop
push
jp
jmp
add
rcrb
adc
jbe
adc
dec
test
xchg
fwait
rcll
adc
mov
push
jne
cld
pushf
mov
xor
outsb
dec
lahf
or
gs
mov
and
pop
xor
neg
pop
push
push
cmp
fs
ret
xor
fcoms
xchg
push
repz
clc
adc
cmpsb
out
xchg
lock
int3
pop
mov
es
idivb
push
push
cmp
data16
enter
push
gs
imul
imul
jge
sbb
push
pop
popf
xchg
xor
les
push
fsts
shr
xlat
xchg
imul
push
or
xchg
call
mov
add
xor
shrb
test
stc
test
test
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movsbl
or
mov
addl
sub
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jl
jmp
pushl
call
cmpl
jb
push
mov
mov
mov
sub
sub
mov
andl
movl
sub
push
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
call
jmp
mov
andl
mov
addl
mov
adc
mov
mov
and
xor
addl
xor
mov
mov
adc
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
push
test
add
add
add
add
add
add
add
push
cmp
add
add
add
inc
push
dec
mov
js
les
mov
dec
ss
add
add
pop
push
imul
inc
imul
inc
js
arpl
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
inc
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
jl
lods
outsl
scas
hlt
add
testl
jbe
xchg
mov
cmpsl
loopne
pop
push
pop
notl
pushf
or
pushf
or
mov
lcall
xchg
pushf
sub
popa
mov
stos
mov
mov
jbe
xchg
mov
pop
pop
cmpsl
jae
pop
clc
push
stc
mov
xchg
cmpsl
test
lret
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
