push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
or
ljmp
movlps
cli
cmp
jmp
push
repz
lods
push
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
jp
xchg
pop
js
imul
nop
in
enter
mov
andb
add
insl
xchg
in
cmpsl
jl
push
add
sahf
mov
sti
in
push
imull
and
andl
out
lods
cltd
mov
cltd
adc
inc
add
pop
int3
lods
cmpsl
das
push
mov
sbb
fdivl
mov
push
loop
mov
mov
and
call
push
int
and
cmc
inc
push
repnz
xor
shrb
pop
sub
inc
shrl
lods
dec
xchg
mov
prefetch
int3
outsb
mov
sub
aam
es
cli
lret
sti
cli
movsb
aam
add
push
loop
inc
dec
enter
cmp
or
xor
mov
jmp
in
popl
movb
arpl
jae
orl
pop
mov
call
adc
push
mov
rcll
xchg
push
mov
inc
jno
lods
pop
inc
lea
pop
add
mov
lret
insb
pushf
inc
and
xor
jne
push
popa
jnp
push
push
mov
xchg
fisttpl
icebp
mov
sahf
daa
push
push
addr16
mov
mov
mov
dec
stos
cmp
push
mov
out
outsl
push
outsl
push
and
cmp
xor
subl
xor
jmp
mov
push
xchg
mov
movlps
movlps
cltd
int
out
iret
ffree
pop
jno
iret
jo
mull
fwait
mull
xchg
imul
push
cmpsb
jno
call
setbe
sbb
mov
or
test
pop
and
jmp
push
pop
loopne
sbb
xor
mov
icebp
sbb
js
pop
or
out
sub
jne
test
fdivrs
add
daa
sub
jns
cmpsl
outsl
jp
mov
inc
jg
sbb
mov
fisubs
imul
pop
ds
outsl
jns
or
aam
cmovo
jnp
iret
inc
push
xlat
lea
test
ficompl
pop
shrl
pop
das
call
mov
adc
sub
and
dec
and
jb
inc
jns
push
mov
pop
popa
jo
stos
mov
lret
lahf
sub
ljmp
mov
ja
fld
mov
testl
inc
dec
negb
push
push
icebp
adc
and
mov
mov
imul
jns
mov
daa
in
lods
aaa
int
mov
dec
ljmp
add
stos
ljmp
fprem
cmpsb
jo
or
testl
pusha
pop
stos
aad
lcall
cltd
mov
cmp
jp
scas
sbb
in
mov
add
jb
cmp
std
daa
test
push
clc
leave
lahf
mov
mov
out
cmp
leave
dec
cmp
aas
clc
mov
cltd
insl
xchg
sbb
xor
mov
inc
enter
clc
cmpsb
int3
mov
pop
mov
adc
pop
mov
sarb
cmp
lahf
jmp
ss
stc
xor
add
rolb
scas
push
or
mov
movl
movl
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
mov
adc
movlps
sbb
inc
ljmp
stos
jae
imulb
movsl
xchg
mov
jecxz
and
pusha
scas
movw
scas
hlt
add
pop
rorb
mov
mov
or
jno
in
int3
pop
adc
pusha
sbb
xor
scas
and
sbb
mov
push
mov
cmp
shlb
jp
ja
lods
in
sub
aaa
fsts
adc
jnp
pop
xor
inc
mov
inc
mov
jg
arpl
pop
sar
ret
pop
std
or
dec
shll
push
xchg
cmc
or
dec
or
insb
fwait
lret
iret
cmp
into
or
mov
int
pop
mov
or
cs
or
or
or
and
sub
in
sub
pop
sbb
xor
les
loop
int
les
mov
lock
negb
cmpsb
das
lock
pop
data16
cmp
js
stos
lods
mov
dec
iret
loope
add
fdivrp
jnp
enter
popa
sub
sub
or
jl
test
out
imul
mov
xor
mov
add
fldcw
jne
xchg
or
jl
mov
fisubrl
adc
jmp
xor
cmp
test
cmp
stos
lahf
xchg
lea
xlat
in
enter
cmp
pushf
mov
add
sbb
leave
xchg
pop
pop
in
fldt
mov
jns
or
mov
mov
out
mov
mov
jns
dec
out
xor
sbbb
mov
xor
mov
jne
bound
imul
fcmovnbe
cltd
sbb
push
jle
mov
jne
insl
and
sbb
push
mov
fcmovnu
xchg
jl
sbb
mov
dec
gs
push
lcall
pop
lock
ret
stos
mov
sbb
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
addl
stos
pop
pop
adc
movlps
xchg
mov
sbb
cld
ja
mov
xchg
sbb
jl
imul
or
add
xchg
push
xchg
lret
fdivp
scas
popf
arpl
mov
icebp
cmp
adc
lods
rcrb
sahf
and
mov
unpcklps
call
sub
je
movb
jbe
orb
mov
lahf
out
testl
outsl
outsl
sbb
cmp
aas
adc
sub
sbb
jbe
ja
fildll
lea
push
les
jns
ja
mov
pop
xor
bound
lods
shlb
push
mov
loope,pn
bound
out
pop
jb
pop
mov
test
and
mov
ss
mov
or
add
sub
push
lahf
int3
xchg
jle
sub
popa
sub
inc
insb
push
insb
ret
add
lret
inc
dec
pop
aaa
sti
sbb
and
mov
out
lea
mov
add
ret
jmp
or
aaa
or
jl
lods
sub
sub
pop
push
mov
inc
push
jg
adc
negl
aam
jae
sti
cmpsl
mov
adc
jecxz
iret
xor
fsubr
addl
inc
pop
fst
mov
andb
or
fwait
dec
sbb
repnz
mov
adc
adc
cmpsb
lret
shlb
xchg
pop
or
fninit
xor
inc
add
jns
sub
mov
cmp
mov
out
cwtl
or
mov
xchg
pop
jae
js
pop
or
push
xchg
sbb
setg
cmp
test
sub
rolb
mov
sub
or
sahf
push
shll
xchg
stos
lret
stos
call
jb
cld
adc
sbb
mov
ss
stos
jo
add
in
ljmp
adc
jle
mov
shrb
fidivrl
mov
movl
shrd
cmpl
mov
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
mov
movlps
cwtl
pop
loop
daa
icebp
cmpsb
out
leave
in
roll
setno
movsl
jns
cmp
out
push
mov
cmp
xor
daa
rclb
je
cmc
fdivr
enter
pop
mov
push
jo
movsl
xor
mov
xchg
bound
pop
or
int
std
repnz
dec
fnstcw
xor
cmpsl
dec
adc
pop
inc
cmp
or
adc
pop
bnd
push
int
mov
adc
fs
orb
mov
mov
pushf
shr
repnz
ret
mov
jb
and
in
jmp
mov
hlt
add
add
xor
or
fdivl
mov
add
add
hlt
ja
jmp
pop
adc
shrb
push
add
and
sbb
int
int3
ljmp
test
pop
int3
adc
addl
mov
fldcw
fists
mov
pop
mov
pop
add
shl
adc
les
rorl
sub
lds
je
mov
xor
or
stos
dec
lea
cmpsb
in
and
pop
jo
mov
ss
jecxz
cmp
cmp
xchg
scas
xor
addr16
xchg
insl
jnp
mov
mov
mov
mull
test
push
ficoms
or
hlt
cmp
shlb
pop
inc
test
jb
out
push
fidivs
out
xchg
xchg
dec
mov
mov
jno
popf
mov
mov
pushf
icebp
rorl
incl
mov
xor
xlat
cmc
lock
mov
mov
pop
int3
cmpsb
imul
fistpl
or
mov
mov
out
test
movb
aaa
jno
scas
xchg
push
hlt
mov
mov
notl
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
jle
call
adc
movlps
xor
sub
jae
ljmp
cmpsl
into
pop
fwait
jbe
jo
scas
mov
fidivs
in
mov
adc
cmpsb
bndldx
ss
repz
adc
inc
cmp
or
inc
lahf
xchg
mov
pop
add
rcrl
mov
pop
and
in
sahf
shrb
jnp
xchg
pushf
rcrl
adc
pop
mov
scas
bound
sub
out
ds
jl
pop
dec
gs
stos
scas
sub
lcall
int
hlt
frstor
xor
rorl
bound
stc
jmp
arpl
add
ss
addr16
push
dec
pop
sub
jg
xor
cmp
leave
jg
js
dec
les
and
pushf
push
dec
sarl
rcll
int
test
stos
cli
jnp
jge
iret
sbb
jmp
decl
jg
nop
mov
flds
call
mov
sti
cmpsb
cli
fidivrs
jge
gs
scas
push
jmp
lods
inc
inc
cmp
pusha
push
aam
arpl
imul
cld
lret
pop
aam
jo
jnp
sbb
sub
and
cmpsl
jne
les
mov
dec
sti
sbb
imul
dec
cld
jbe
repnz
xor
test
pop
push
lret
into
int
sub
pop
test
out
pop
mov
xor
test
jae
adc
xchg
jl
in
adc
incb
addr16
shrl
shlb
stos
jp
inc
popf
decb
dec
jb
dec
imul
inc
xor
sbb
ljmp
test
ss
rolb
inc
insb
loope
jmp
or
xchg
or
loop
pop
fdivl
mov
pushf
ss
mov
mov
mov
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
xor
adc
movlps
push
je
loope
popf
sbb
sti
xchg
cmpsl
fisubrl
stos
lcall
fnsave
adc
lods
add
push
push
xchg
mov
or
pushf
cltd
inc
jne
push
mov
pop
sub
iret
in
insl
push
lock
loopne
cmp
or
mov
frstor
nopl
movl
fwait
sub
enter
pop
out
ret
fiadds
and
add
cmp
mov
dec
and
cmp
push
leave
cmp
scas
repz
movsl
dec
es
lcall
mov
test
sub
addr16
jecxz
lret
mov
mov
cmp
lcall
adc
int
popf
and
aad
popf
repz
repz
repz
ss
ret
xchg
jae
sbb
inc
in
push
stc
lods
clc
lods
jnp
jns
aam
arpl
add
dec
and
cmpb
loope
lret
sahf
hlt
stos
xor
jg
std
icebp
mov
fdivr
mov
pop
icebp
fmul
jns
shrl
fldt
mov
mov
ftst
or
pop
nop
jns
adc
jnp
mov
push
and
adc
hlt
pop
cmc
xchg
outsl
inc
mov
add
shll
movsb
int3
test
xchg
push
jae
sub
pop
ljmp
jo
fcmovnbe
mov
test
inc
fdivr
push
adc
add
scas
xor
and
sbb
cli
xor
cs
outsb
fsubrp
shl
insl
aad
les
pop
lds
dec
scas
movsb
and
jp
pop
imul
ds
adc
push
insl
jno
mov
cli
mov
scas
jno
pusha
mov
or
xchg
fcoms
int
push
cltd
das
iret
cmp
bound
leave
movl
in
jo
outsb
imul
aam
mov
jle
xor
or
add
inc
add
jge
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
into
lods
div
adc
movlps
shlb
pusha
std
jp
cwtl
jle
cmp
fmull
dec
mov
adcl
lea
push
repz
addr16
repz
jnp
inc
add
out
ret
mov
add
push
jae
outsb
cs
push
push
xor
lds
cmp
aas
std
mov
jmp
push
mov
or
bound
adc
sbb
or
roll
xchg
fmuls
in
jbe
int
daa
roll
add
fs
xchg
dec
mov
push
lock
mov
mov
jmp
push
testl
or
inc
or
pop
add
out
cmp
das
test
fwait
out
push
or
subb
mov
jno
cmp
iret
in
in
bound
outsb
xchg
sub
hlt
push
and
stc
cmpsl
aad
loopne
mov
fdivl
loope
add
adc
push
or
push
push
mov
push
iret
mov
add
stc
insb
cltd
call
push
movsb
ss
sub
cmp
pop
adc
adc
xor
sbb
not
jecxz
mov
out
insl
lock
cmp
popf
test
mov
fs
inc
jne
sbb
cld
adc
mov
xor
push
fwait
jbe
mov
sub
sahf
outsb
xlat
stos
int3
xor
std
sub
add
inc
fwait
and
sub
ja
inc
scas
setno
mov
sbb
dec
outsb
or
and
mov
pop
sub
into
mov
pop
pop
fadds
rcrb
out
insb
repnz
outsb
in
je
orb
adc
inc
cld
imul
cmpsl
jecxz
js
test
fistpll
add
jge
lock
mov
nop
jno
xchg
jno
mov
cltd
xorl
cmp
mov
jg
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
xchg
push
repz
movlps
loop
out
imul
fidivs
stos
std
jnp
push
outsl
popa
pop
lret
mov
lds
pop
add
or
sbb
pop
ret
inc
mov
add
and
outsl
ret
lcall
pop
lock
push
lods
das
and
pop
negl
push
jno
sbb
scas
push
out
bound
enter
gs
lcall
pop
icebp
or
sbb
icebp
cmp
loop
lcall
andl
jl
out
pushl
xchg
sti
sar
adc
sbb
xor
ljmp
imul
pushf
repz
rorl
cld
push
jecxz
mov
popa
rep
push
jns
jle
hlt
jo
pop
negl
sbb
insb
jno
push
adc
lea
mov
rorl
fistpl
cmp
sub
cmpsb
aam
out
lahf
leave
clc
shrb
push
adc
pop
sub
fs
jp
les
popa
cmp
lock
fistpll
addr16
sub
pop
jnp
cs
rorb
adc
or
push
enter
scas
adc
movsl
gs
xor
adc
imul
mov
out
push
jnp
into
xchg
lret
incb
aad
lea
aad
cmp
ja
pop
iret
loop
dec
ja
icebp
test
pop
xor
lahf
sub
dec
popf
fst
jp
cltd
data16
sub
stos
lcall
mov
push
clc
or
int
and
push
mov
push
mov
mov
xchg
adc
pushf
xchg
jg
jg
pop
repnz
mov
push
mov
cs
jne
cwtl
pop
jb
mov
cld
mov
mov
ljmp
sbb
jg
xchg
popa
mov
inc
fdivs
lds
cld
sbb
rcrl
sbb
loope
mov
addl
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
lds
adc
movlps
mov
push
dec
and
mov
and
xchg
xchg
cs
mov
iret
dec
scas
lahf
or
adc
and
test
xor
push
xchg
xlat
int
rorl
jae
out
scas
mov
xor
sti
lock
xchg
mov
inc
lahf
mov
fsubl
pop
or
inc
inc
fildll
pop
xchg
cld
or
icebp
loopne
aad
in
xchg
xchg
movnti
xchg
jb
mov
pushl
push
mov
repnz
lret
xchg
out
sub
add
add
std
scas
ret
cmp
xchg
jns
jns
pop
sub
mov
aas
sbb
popa
mov
fnstsw
xlat
out
jne
imul
adc
les
xor
jns
inc
fstpt
push
adc
mov
xor
daa
or
call
fnstsw
ret
pop
int
rep
add
push
xchg
pop
pop
in
int3
fwait
mov
lret
enter
sbb
pop
testl
inc
adc
sub
cwtl
in
inc
enter
hlt
push
mov
daa
cmc
and
xchg
push
gs
out
lock
xor
shll
lds
cmc
decb
sub
mov
outsb
dec
or
ficoms
jne
adc
loopne
lret
xor
adc
shll
or
push
sti
ret
cli
sbb
mov
stos
or
nop
and
inc
xor
in
call
cmp
ret
cmp
pop
mov
adc
push
shrb
call
imul
or
test
lret
add
inc
hlt
jmp
stos
add
scas
lods
fdivr
xchg
xchg
cmpsb
dec
dec
adc
jmp
xchg
scas
fs
lock
pop
pop
in
out
fadds
mov
mov
mov
jle
daa
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
fpatan
stos
jmp
adc
movlps
test
stos
sbb
xchg
sbbb
jns
mov
in
scas
cmpsl
push
les
in
xchg
ret
xor
push
inc
mulb
jo
fisubrl
xor
int3
mov
pop
mov
jns
ljmp
cmpsl
sarl
and
sub
je
and
and
stc
xlat
clc
push
jp
fcompl
int
inc
scas
and
or
cmp
les
adc
and
int
inc
push
sahf
and
dec
loope
cmpsl
and
adc
sbb
add
add
dec
in
fisubrl
iret
inc
xorb
aas
loopne
sarl
aam
bound
int3
push
sbb
outsl
adc
shll
cmpsb
jmp
sbb
dec
cld
jbe
fwait
cmpsl
push
dec
loopne
ret
and
jb
dec
jmp
je
xor
test
in
sarb
sub
clc
push
je
dec
std
pushl
push
js
jg
mov
adc
mov
popa
jecxz
jbe
dec
push
xchg
cs
je
add
stc
jmp
adc
adc
scas
std
and
int3
jbe
out
pop
les
stos
or
es
add
loop
popf
adc
xor
sbbl
pop
ss
mov
out
call
addr16
mov
int
jo
popa
fwait
mov
repnz
sub
and
ljmp
mov
nop
and
loopne
int3
add
mov
sub
inc
vcvtsd2ss
insl
out
dec
movsb
loopne
icebp
push
sahf
loop
xchg
push
filds
icebp
rolb
xor
aam
xor
test
mov
mov
movb
mov
das
or
jle
fcom
loopne
jnp
in
xchg
and
popf
mov
dec
jne
jmp
insb
add
mov
sbb
popa
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
js
call
adc
jp
repz
outsl
sbb
mov
xchg
xchg
add
inc
hlt
aad
add
test
decb
inc
xor
addb
jge
iret
push
pusha
int
cmp
sarb
pushf
rcrl
dec
sarl
mov
stos
push
xor
sbb
pop
cmp
test
nop
insl
inc
fiaddl
mov
add
push
lods
ret
mov
enter
jg
add
jbe
pop
repz
pop
les
inc
pop
in
hlt
dec
out
jae
scas
sbb
lret
push
lret
ds
ja
ficomps
cmpsl
add
and
jg
sar
mov
stc
popa
xchg
pop
pop
clc
ret
mov
sahf
xchg
pop
sbb
rol
adc
cli
dec
mov
xchg
mov
js
ds
aas
inc
sbb
cmpsb
push
push
shll
cmp
pminub
int3
and
xorb
fdivl
cmp
xor
and
mov
addr16
repz
mov
insl
mov
cs
pop
xchg
test
xchg
ds
adc
xchg
push
xor
out
and
push
add
clc
mull
mov
lret
leave
push
aas
sub
pop
pusha
xor
test
mov
ss
pop
mov
pop
enter
add
mov
arpl
sub
pop
or
jno
xor
mov
mov
stos
cltd
sti
test
push
stc
leave
mov
push
add
lret
dec
popf
mov
dec
popa
and
push
mov
imul
scas
les
fwait
jbe
lret
psadbw
adc
testb
mov
mov
out
insb
or
cmp
out
inc
pop
repz
adc
jo
loopne
jb
addr16
test
ljmp
sub
dec
fimuls
add
test
inc
adc
inc
cld
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
bnd
jle
in
adc
movlps
jno
jns
sub
or
iret
scas
cmp
pop
out
aam
std
pop
dec
in
add
xor
mov
stc
es
outsb
push
lods
je,pt
mov
jae
lock
jle
push
ret
mov
cld
popa
sbb
inc
fdivs
push
ja
icebp
fbld
add
stc
jns
sti
movsl
rcrl
fdivrl
cmp
sarb
push
push
popf
mov
jnp
jo
jg
stos
out
cmp
cmp
pusha
sub
dec
cmpb
sarb
mov
xchg
add
movsb
cmp
mov
add
lods
arpl
sub
les
jg
xchg
jl
cmp
add
jle
incl
enter
sti
mov
je
stc
mov
xchg
leave
test
push
ret
movsb
rolb
dec
dec
sbb
xchg
lcall
lret
push
mov
mul
add
stc
lea
imul
das
push
repz
mov
out
jp
and
andl
shll
stos
add
push
aaa
leave
stos
xchg
into
mov
and
iret
rorb
cmc
push
ljmp
mov
jae
sub
cmc
sub
pop
pop
adc
pop
xor
inc
mov
push
pop
sahf
mov
repz
dec
jle
psubsw
sbbl
lea
adc
pmuludq
sub
and
xlat
mov
mov
or
shl
adc
push
dec
cld
loopne
cmp
je
cmp
std
mov
push
sub
cmp
xchg
and
jno
xchg
dec
jne
rolb
idivl
jnp
dec
outsb
lahf
nop
sarb
arpl
inc
les
lahf
in
lret
mov
pusha
es
adc
push
out
xchg
stc
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
adc
adc
movlps
pop
jmp
addr16
sub
ljmp
je
ljmp
mov
mov
mov
rcrb
or
lahf
movsl
xchg
arpl
xchg
pop
adc
shlb
push
movsl
loop
insl
mov
add
and
add
mov
dec
adc
cmp
xchg
cmp
leave
int
ja
xchg
sbb
push
mov
fimuls
enter
mov
cs
popl
dec
mov
icebp
mov
push
aas
sbb
leave
insb
pop
out
rcr
pop
notb
push
ret
outsb
idivl
mov
inc
movsw
aaa
daa
jg
out
pop
mov
daa
sbb
jo
mov
cmp
pop
fildll
pop
rcrl
mov
sbb
mov
lahf
es
fs
xor
jae
ret
cmpl
inc
push
scas
mov
xchg
repnz
pop
fisubrl
xchg
jle
sbb
mov
jb
ljmp
push
mov
inc
inc
mov
mov
jns
ds
decl
add
lock
scas
cmpb
aaa
sub
xor
and
jl
lods
pop
loope
jb
out
inc
ret
popf
inc
pop
adc
cmc
or
imul
adc
xchg
pop
and
cltd
mov
and
cld
sub
push
fistpl
in
sbb
jno
xchg
stos
push
xor
cld
add
xor
mov
push
call
add
scas
inc
sub
ss
xor
dec
jno
and
ds
xor
adcl
push
iret
or
lock
es
or
sarl
call
push
add
inc
mov
inc
xchg
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
mov
jle,pn
fcoml
adc
movlps
lret
out
fucomi
sti
inc
std
inc
jle
out
pop
fs
and
ret
ds
sahf
cmpsl
push
lea
pop
xchg
rcrl
mov
xchg
xor
dec
jae
adc
aas
jecxz
jb
xor
xor
test
mov
xchg
dec
jmp
push
cmpsb
aas
xchg
call
out
add
jno
popa
cmp
add
in
jecxz
cmovl
mov
sahf
mov
mov
je
negl
fadd
insl
push
rcl
cmpsl
or
lds
and
in
push
imul
dec
xchg
iret
adc
in
inc
test
add
fs
popf
jle
pop
and
sub
aas
pop
and
stos
sbb
or
and
movsb
and
mov
mov
jp
cltd
xchg
cmp
lock
sbb
sub
xchg
dec
push
lret
xchg
xor
dec
lcall
and
push
or
xchg
cwtl
lods
in
shr
scas
push
repz
inc
adc
mov
dec
mov
dec
jecxz
gs
push
iret
roll
jae
jl
enter
adc
jg
or
loope
shrl
fldenv
lock
jo
xchg
sbb
test
imul
js
or
add
ficomps
jle
bound
shlb
jl
test
xor
imul
shr
cld
or
mov
ljmp
push
mov
shrl
cmpsl
in
mov
and
das
mov
ljmp
pop
sbb
add
jecxz
push
into
iret
imul
imul
scas
jmp
rcrl
mov
shll
pop
push
mov
leave
xchg
dec
outsb
and
popa
pop
mov
mov
jne
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
mov
js
fcomp
adc
movlps
lock
lahf
mov
je
in
data16
sub
movsb
lcall
out
out
and
out
xor
into
sub
cwtl
ds
fistpll
push
xor
popa
ja
mov
out
sbb
out
nop
jb
mov
and
arpl
dec
les
ds
pop
icebp
sahf
jns
pop
sub
mov
imul
hlt
das
das
mov
jno
jle
xchg
xor
dec
cmc
ja
and
push
xchg
les
insl
bound
test
jl
cmc
divl
sub
leave
push
inc
xchg
adcl
test
daa
lds
bound
or
xchg
mov
push
add
bound
repz
or
mov
or
inc
not
or
or
roll
dec
xlat
sub
jmp
cwtl
dec
xor
fs
dec
sti
inc
mov
or
shl
popa
insb
fstl
and
mul
into
adc
pop
pushf
jmp
pop
icebp
movsb
push
jle
fucomip
out
add
inc
adc
jecxz
rolb
cs
add
enter
mov
fiadds
xor
xchg
jb
iret
jae
pushf
aaa
sti
xchg
ret
mov
das
adc
stos
ljmp
clc
adc
mov
mov
mov
aam
sahf
ret
les
dec
je
sub
pop
xchg
push
mov
cmp
ficomps
push
in
loopne
arpl
dec
dec
push
ss
jnp
fsubrl
ljmp
mov
pushf
jecxz
adc
pop
or
xor
fcmovnb
xlat
std
popa
push
jl
pop
jge
jb
pop
mov
cld
push
gs
addr16
sub
push
mov
call
inc
push
test
out
push
adc
push
add
add
fstpt
xor
aam
adc
movlps
lret
das
xchg
mov
pushf
rolb
pop
sbb
and
dec
lods
jecxz
ret
out
adc
xchg
and
std
mov
test
sub
cli
loop
sub
sbb
sbb
dec
test
or
test
push
xor
insl
fisubrl
mov
dec
enter
adc
dec
mov
sbb
jne
mov
pop
data16
stc
pop
pop
push
ret
movsl
sbb
push
fwait
stc
push
fiadds
jge,pt
pop
sub
shlb
mov
xchg
xor
dec
popa
push
into
xchg
cwtl
lock
loop
or
sbb
sub
sbb
sub
adc
adc
xchg
sub
js
add
pop
push
jbe
fidivs
jl
ret
daa
and
test
in
and
cmpsb
lahf
add
adc
mov
stos
push
std
fsubs
pop
mov
cmp
ljmp
mov
push
xchg
adc
add
pop
or
jmp
and
push
pop
mov
ficoml
push
mov
movsl
ljmp
rcrb
aaa
xor
ss
nop
mov
popf
xchg
out
dec
add
sub
pop
mov
scas
bound
sub
mov
pop
fldl
or
in
js
or
inc
pop
xor
mov
fidivl
mov
xor
sub
push
lret
xor
fstps
xchg
repz
xor
fsubrp
ja
pop
insl
mov
clc
push
cs
js
push
roll
pushf
orb
and
mov
cmc
outsb
push
push
mov
and
aas
push
jae
jb
jne
dec
xlat
jnp
testb
jl
sub
mov
mov
xchg
sbb
aaa
orl
sub
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
mov
jle
rclb
adc
movlps
jno
jmp
pop
jae
adc
xchg
fidivl
pop
pop
add
or
push
mov
add
mov
lds
add
xlat
push
inc
gs
fadds
repnz
mov
adc
dec
add
aas
int
sbb
loope
push
adc
cmp
inc
dec
aam
sti
mov
notl
xor
sub
push
and
cwtl
adc
fists
jnp
cmp
xor
push
add
jg
adcl
insl
mov
add
pop
or
push
cwtl
mov
xlat
dec
rcrb
jae
insl
clc
pop
sbbb
or
mul
out
or
xchg
incb
out
out
lret
mov
lock
dec
xor
mov
jp
and
cs
adc
mov
fmul
push
int
jle
sbb
mov
scas
xor
push
lret
mov
clc
inc
mov
cltd
aad
and
lahf
jge
pop
scas
ljmp
mov
int
xchg
gs
movsb
push
fsubrl
xchg
xor
mov
mov
dec
or
daa
std
cli
pop
scas
mov
add
add
sub
rcl
shl
outsl
pop
cmp
test
sti
shlb
rclb
push
or
inc
iret
xor
xchg
inc
dec
jne
jne
loop
jmp
pop
addb
add
push
push
pop
dec
stc
pop
lods
aam
cmp
stos
jmp
mov
out
and
and
int3
push
or
shrl
movsb
adcl
dec
mov
std
push
clc
adc
icebp
fwait
push
xchg
adc
adc
sub
xchg
adcl
cmpsb
ret
cli
xor
lahf
jo
jnp
inc
call
rcl
es
addr16
ja
add
dec
rorl
push
or
faddl
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
int3
int3
adc
movlps
pop
mov
loope
adc
inc
cwtl
roll
in
scas
push
jo
dec
sub
jae
push
ret
or
addr16
clc
and
xchg
add
jae
repnz
mov
sub
call
pop
mov
xchg
pop
adcb
fstps
xchg
jmp
mov
inc
gs
rclb
int3
jo
ficoms
xchg
orl
lret
xchg
into
inc
cmpb
cmp
out
push
pop
pop
lods
sbb
cmpsl
sahf
fsubrs
push
or
ss
mov
ret
add
fst
push
sub
fimull
xorl
or
jecxz
dec
pop
and
sub
imul
dec
mov
adc
insl
jp
stos
mov
out
arpl
add
leave
push
ret
and
fisubs
xchg
in
mov
mov
sbb
loopne
jp
je
fsubr
sbbb
sub
and
sub
imul
cmp
in
lahf
xor
lds
int
aad
pop
mov
pop
addl
jb
aam
jno
cmpsl
sahf
dec
notb
xlat
nop
jb
mov
scas
out
cli
jno
jae
xor
ret
gs
int
mov
pop
jbe
cmpsb
xchg
insl
outsl
mov
cmovnp
mov
repz
mov
idiv
pop
jns
pop
shlb
push
pop
mov
mov
pop
mov
push
xchg
addl
adc
pop
andb
inc
test
jns
xchg
rorb
xor
push
mov
dec
dec
sub
int3
or
outsl
fdivr
orb
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
int3
mov
push
enter
movlps
stc
add
pop
sub
cmp
mov
ja
test
iret
mov
xor
cli
mov
mov
paddw
xchg
push
adc
inc
cltd
pop
in
stc
dec
addr16
jp
mov
iret
push
mov
dec
xchg
mov
pop
repnz
out
test
bound
inc
cltd
or
in
add
xor
lret
inc
adc
mov
xorps
and
lret
dec
inc
outsl
in
repz
out
mov
mov
lahf
lcall
fstps
cs
fwait
jae
push
out
dec
ret
mov
mov
mov
or
jg
lahf
cmp
inc
jp
pop
loope
mov
or
cs
les
add
inc
mov
arpl
cmpsb
aaa
mov
cmpsl
xor
add
movsl
adc
sub
mov
pop
movsl
pusha
xchg
lret
rclb
daa
daa
xchg
mov
cli
call
push
sbb
test
sbb
test
and
fsts
and
xchg
mov
push
adc
push
aas
sub
or
add
adc
dec
mov
notb
or
and
ss
das
test
add
iret
out
jl
out
and
jbe
repnz
mov
cmpsb
lods
push
pushl
scas
jmp
or
mov
bound
leave
sahf
loope
dec
loope
loopne
push
ret
js
dec
ljmp
lock
loop
movsl
pop
js
push
add
iret
pop
mov
xor
jno
movsb
ljmp
pop
fucom
dec
testb
scas
fmull
add
jbe
dec
fadd
add
push
xchg
sub
jecxz
adc
out
dec
mov
out
mov
rorb
ret
add
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
pop
lods
les
adc
movlps
aaa
mov
mov
mov
pusha
fiadds
fistl
hlt
jl
push
pop
mov
cmc
ror
negb
jmp
lods
lds
adc
scas
movsb
dec
xchg
out
fs
cmc
jle
arpl
cmp
das
push
stos
aad
dec
into
cltd
mov
rol
les
fs
lahf
xor
test
xchg
xchg
mov
fidivrl
mov
sbb
xor
adc
cmpl
mov
mov
sarl
inc
lret
shll
xorb
lret
xor
xchg
cmpsb
jns
adc
cld
iret
sbb
insb
push
das
test
xlat
xabort
out
adc
jno
xchg
push
mov
cmp
pop
fdivrs
fsubl
add
arpl
loopne
mov
aam
sub
or
mov
pop
xchg
sbb
dec
xchg
jle
pop
out
aas
xchg
cmp
adc
lods
negl
mov
roll
lea
cmc
mov
or
loop
mov
pop
pop
sub
pop
mov
inc
sahf
and
divb
out
movsl
xor
pop
mov
jle
in
scas
xchg
pop
shr
xor
arpl
jns
mov
divb
push
xchg
daa
fwait
and
mov
test
movsb
sti
sub
cli
rcrl
pop
shlb
or
hlt
push
scas
add
or
out
cmp
mov
mov
repnz
inc
lock
call
test
or
ret
sbbb
mov
dec
stc
cmp
cmp
movsl
dec
sbb
mov
je
xchg
mov
adcl
add
adc
sbb
pop
lds
cmc
fdivr
push
cmpl
fisubl
sbb
cmp
jno
das
adc
in
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
xchg
icebp
cmpb
movlps
fbstp
loopne
aad
cmp
cltd
lock
mov
jno
mov
pop
mov
push
movsl
jae
dec
push
mov
cmp
xor
repz
sub
xor
and
jo
repnz
popa
push
dec
enter
notb
jecxz
dec
xor
pop
clc
xchg
aas
in
lea
sbb
icebp
mov
cmc
cmpsl
imul
call
or
cmp
popa
ret
xchg
nop
mov
iret
pop
pop
sub
pop
cmp
test
ds
inc
pop
push
out
jl
jge
cmp
stos
push
mov
int3
and
aaa
dec
adc
push
cmp
push
cltd
sub
sub
pop
dec
imul
mov
lods
add
adc
push
xor
jg
loopne
adc
and
jno
aam
or
fadd
call
fildl
mov
xchg
cld
cmpl
fdiv
roll
cmp
adc
or
pop
mov
jmp
xor
test
push
shll
ret
fdivrs
sub
mov
jg
rcrl
inc
aaa
idiv
scas
mov
jg
fwait
pop
cmpb
mov
xchg
rcrb
jmp
add
mov
dec
cs
fcmove
or
mov
jb
hlt
insl
sbb
xchg
push
sbb
adc
inc
loopne,pn
mov
into
lahf
js
sbb
test
je
dec
cmp
lret
and
push
xor
xor
in
test
mov
nop
inc
sub
mov
sahf
and
push
roll
add
jne
jo
rol
nop
scas
loopne
ficompl
push
push
cmpl
and
push
push
lret
pop
mov
and
lcall
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
mov
mov
adc
rolb
and
das
mov
loope
jno
bound
aaa
nop
xchg
aaa
aad
lods
and
lcall
test
jl
mov
xchg
or
xchg
std
add
ret
jne
and
adc
add
rcrb
jle
adc
or
cld
sahf
jecxz
subl
cmpsl
stos
aas
out
pop
push
mov
mov
cs
test
xor
setae
and
sub
rcrb
xlat
pop
mov
add
imul
push
mov
pop
imul
xlat
test
les
jne
adc
pop
popf
popf
cmpl
mov
inc
mov
xor
pop
ret
fistpl
cld
lcall
sub
jmp
and
cmc
not
out
mov
add
cld
mov
stc
pop
scas
lret
add
xchg
imul
inc
movsl
clc
adc
inc
jnp
jb
and
fmul
jmp
push
mov
lea
adc
insl
mov
cmc
jae
and
sbb
jl
popa
sbb
lods
lret
test
sub
rcrl
cmc
out
jo
mov
push
mulb
dec
aas
mov
pop
inc
add
out
pop
pop
negl
add
xchg
js
add
ss
std
lea
int3
loopne
jecxz
jnp
or
add
test
or
mov
add
out
cld
pop
mov
jge
js
dec
mov
out
movsl
cmp
dec
or
sub
js
pop
dec
ds
pop
jl
mov
adc
and
rcrb
add
mov
enter
lret
sbb
iret
xchg
inc
les
cld
sbb
cwtl
xchg
mov
add
mov
call
mov
or
loop
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
mov
mov
movlps
or
cmp
cmp
out
mov
jbe
outsb
std
into
sbb
inc
call
add
and
das
mov
popa
pop
inc
mov
movsb
call
jae
dec
daa
sub
xchg
mov
fldt
adc
fdivrp
or
add
fnsave
rcl
dec
lods
pop
imul
xchg
cmp
mov
xor
or
gs
mov
mov
mov
dec
cs
imul
xor
in
lods
add
sar
pop
add
cmc
dec
rorl
push
pop
sub
stos
popa
adc
xchg
cmpsb
aam
shlb
sbb
cmp
es
jp
dec
pinsrw
stc
jnp
loopne
lods
dec
add
sub
es
mov
cmp
ss
std
and
lock
push
xchg
dec
and
popf
fadds
and
std
mov
mov
shrl
adc
push
sbb
sarl
inc
aam
mov
lahf
sbbl
adc
jbe
dec
dec
popf
mov
jae
dec
testl
xchg
cmp
fnstenv
sub
aam
jmp
and
idivl
pop
fs
mov
lcall
loope
pop
pushf
push
adc
cmp
das
push
fldlg2
mov
lret
add
fldl
icebp
lds
imul
or
and
adc
imul
mov
push
out
ffreep
mov
push
imul
les
cmpsl
add
fs
cmp
sub
fs
jle
dec
and
insl
dec
aam
pusha
daa
inc
sub
push
or
sbb
ljmp
adc
cmp
sbb
pushf
inc
mov
pop
mov
lods
xchg
mov
inc
inc
pop
les
jnp
repz
or
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
or
call
stos
ds
pop
popf
xor
sarb
lea
sub
inc
negl
sahf
xorl
loopne
mov
or
xchg
psadbw
pop
popf
adc
es
mov
and
pop
inc
push
adc
mov
lret
mov
movsl
sbb
and
add
xchg
or
or
ja
cmp
pop
clc
sub
shrb
jecxz
inc
and
out
or
jl
scas
lret
mov
jb
call
mov
out
mov
adc
sbb
jae
ljmp
cmpsl
das
xchg
pop
call
and
and
sti
cmp
divl
scas
inc
nop
loop
mov
scas
into
jg
ret
add
mov
pop
lock
data16
sub
jo
push
inc
adc
xor
fwait
push
jo
fisttpll
mov
out
dec
mov
fistl
adc
dec
mov
xlat
pushf
ljmp
mov
inc
sub
pop
fistpll
jbe
lret
in
lock
xlat
roll
aaa
std
jl
inc
pusha
add
inc
addr16
sbb
stc
pop
das
loopne
adc
xorb
mov
xchg
mov
or
sbb
rorb
jg
sub
push
dec
mov
jle
std
cmp
xor
push
aas
sub
sti
jle
outsb
cltd
jecxz
jae
stc
inc
outsb
loopne
iret
aaa
xchg
cmp
andb
fs
and
out
or
mov
ret
ljmp
xchg
aaa
mov
xor
shrb
dec
xlat
arpl
xchg
jnp,pn
repnz
testb
cld
in
test
pushf
je
jo
std
mov
dec
sub
mov
add
cmpsl
inc
outsl
mov
mov
sbb
cmp
mov
int
mov
mov
fabs
pop
pop
inc
sarb
dec
pop
fists
adc
sub
sub
bound
adc
test
pop
cmpsb
cmp
cmpsl
sub
out
cmpsl
sbb
fs
icebp
loop
xchg
imulb
stc
adc
hlt
push
mov
jp
dec
xchg
add
gs
sti
pop
mov
push
pop
test
lahf
js
jmp
jne
push
xor
in
sahf
adc
sahf
sub
stos
popf
in
lock
push
dec
cltd
or
lods
mov
pusha
loop
push
rorb
push
aaa
aam
mov
sbb
je
mov
addr16
movsl
les
fwait
pop
pop
mov
push
test
add
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
mov
push
mov
adc
and
dec
sbb
jl
roll
mov
jae
cmp
jg
ljmp
ficompl
stc
rcrb
rcl
pop
inc
cmp
add
loopne
ss
loopne
jecxz
je
pop
hlt
sbb
outsl
cmp
push
mov
leave
sbb
cmp
imul
test
int
lcall
xchg
inc
lea
inc
mov
xchg
je
jmp
lahf
mov
pop
sub
lds
out
movsb
leave
leave
push
jle
inc
inc
out
bound
sub
mov
in
xchg
cmc
mov
xchg
imul
or
push
jp
adc
or
in
lock
mov
add
subb
movsl
repnz
dec
mov
mov
mov
fadds
xchg
in
lcall
inc
push
in
int
pop
lcall
mov
adcb
mov
cmpsb
jo
movlps
adc
xor
xor
inc
push
movsl
clc
dec
shl
pop
ja
add
shll
in
sbb
leave
movsb
leave
rcrl
mov
decl
mov
stos
jecxz
push
or
mov
jns
mov
lcall
imul
jp
out
stc
xor
pop
out
mov
outsl
stc
mov
enter
cmp
daa
inc
movsb
dec
popf
scas
xchg
test
shlb
fs
cmpsl
mov
inc
pusha
pop
mov
daa
and
loop
in
sub
jmp
sbb
rclb
fisttpll
cmpsl
pop
int
inc
sub
stos
ret
inc
mov
pop
pop
jb
fisubs
loop
pop
out
xorb
add
ret
negl
inc
cmp
jecxz
mov
addr16
add
fs
inc
mov
adc
push
mov
loope
sub
call
cmp
sbb
testl
int3
pop
adc
inc
dec
xchg
pop
shlb
mov
mov
or
inc
pop
outsb
mov
dec
xor
test
sbb
inc
jmp
mov
fidivrs
rol
pusha
add
les
xor
inc
shll
pushf
insb
cld
scas
add
pop
cmp
add
frstor
mov
popa
mov
pop
or
lcall
sbb
movsl
lods
add
pop
and
push
repz
lahf
scas
popa
inc
inc
adc
nop
frstor
rorl
pop
fdiv
scas
sbb
rorb
aam
icebp
pop
std
pushl
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
aas
movsb
loop
stos
ja
cltd
push
push
lock
xchg
mov
ss
sbb
pop
testb
inc
cwtl
scas
aaa
mov
mov
les
icebp
cmp
lea
insl
xchg
in
push
mov
add
fistps
inc
lea
mov
lret
test
movsl
pusha
mov
cmp
and
test
sub
stos
sbb
lea
leave
das
fsubr
adc
jmp
fisubs
pop
leave
jno
add
fstpl
inc
sahf
in
scas
fdivrl
mov
jg
mov
repz
in
mov
push
pop
movsb
or
pop
xor
mov
mov
ljmp
out
jbe
pop
insb
shl
sub
mov
jmp
and
dec
dec
movsl
and
add
sti
adc
lods
addr16
lret
adc
jl
in
scas
rorl
or
pop
xchg
scas
ret
push
push
jnp
push
pop
adc
push
jecxz
cmp
insb
sbb
fnstenv
inc
dec
imul
js
lret
pop
out
shr
xorb
adc
push
dec
int
sub
cmp
aaa
mov
sub
mov
inc
or
push
bound
adc
std
aad
jo
in
mov
or
gs
leave
ud0
jmp
and
sahf
out
scas
subl
js
sahf
js
dec
jl
and
mov
add
pusha
mov
lock
outsl
nop
sbb
pop
jo
mov
lea
push
xor
xchg
test
push
sbb
jne
or
xlat
and
xor
fcmove
mov
mov
cwtl
jae
loopne
dec
jo
mov
and
imul
iret
loop
xchg
test
int3
adc
xor
adc
in
imul
inc
int
stos
outsb
xor
fprem1
imul
add
and
inc
sub
cmp
loopne
sbb
pushf
sub
icebp
jmp
es
sbb
subb
in
gs
push
push
push
in
mov
fmuls
ds
fdivs
inc
loop
test
pop
mov
sbb
jmp
push
clc
popa
shr
fdivs
rcl
add
inc
xchg
mov
std
add
push
mov
mov
lret
push
in
mov
enter
pop
rolb
data16
int
pop
mov
sti
xor
xor
add
mov
adc
jmp
addl
scas
sbb
pop
add
lret
stos
pop
movsb
adc
lahf
movlps
punpckhbw
es
inc
xchg
pop
sbb
cmp
pop
lret
adc
cmp
int
mov
sbb
inc
les
in
ss
xor
imul
sbb
insl
sub
mov
and
adcb
fsubrl
es
test
popa
pop
push
xlat
jmp
pop
inc
leave
cwtl
shlb
scas
mov
bound
sbb
pop
xchg
fs
out
and
mov
mov
mov
inc
repnz
mov
mov
add
dec
fsubr
icebp
gs
xor
sub
jge
lret
pop
mov
punpcklbw
adc
repz
cmp
push
call
mov
outsb
add
test
jge
cmp
es
test
xor
xchg
aad
addl
mov
push
pushf
fidivs
adc
jle
push
nop
inc
leave
adc
xor
lods
jno
jae
adc
adc
mov
lret
mov
xchg
dec
xor
lea
dec
add
jae
push
aas
les
das
add
rcll
xchg
adc
xchg
mov
jnp
iret
pusha
mov
idivb
rcl
rep
sbb
mov
push
pop
fcmovnu
mov
push
lret
cmp
sbb
jg
mov
out
loopne
fwait
mov
dec
pop
adc
jmp
int
notb
jmp
leave
mov
fld
dec
dec
shld
mov
mov
les
es
shll
fs
stos
push
push
lods
or
ficoml
inc
cmpsb
hlt
enter
sarl
cmp
rcrb
loope
dec
push
aam
push
sbb
dec
cmpb
add
mov
pop
mov
or
lret
das
lock
aad
fadds
and
sysenter
add
dec
and
xlat
pop
pop
pop
hlt
or
cmp
mov
and
sub
aad
push
call
lock
xchg
and
fistps
push
mov
jbe
pop
jge
inc
lret
lock
adc
mov
in
enter
cmc
inc
fcmovne
mov
mov
push
lods
sbb
jb
add
insb
imul
inc
rorb
xchg
sub
pop
scas
scas
rorb
jb
repnz
lcall
cli
xor
mov
cmovs
std
in
add
inc
mov
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
jle
mov
adc
jb
out
nop
int3
adc
popa
xor
jp
enter
jle
inc
cli
xchg
pop
mov
and
dec
push
push
fidivs
jnp,pn
cmp
dec
or
movl
bound
or
test
push
cs
js
je
ss
enter
data16
push
add
xchg
xchg
fs
lahf
push
das
pushf
stos
loop
mov
xor
stos
ja
dec
test
rolb
std
jle
icebp
and
mov
nop
jo
stc
mov
nop
dec
xchg
pushf
jmp
inc
and
adcb
into
ret
xchg
or
pop
dec
testb
decb
leave
mov
mov
or
cmpsl
arpl
dec
push
daa
inc
push
mov
pop
rorb
outsl
fwait
and
mov
push
dec
fimuls
or
icebp
xorb
push
and
xchg
decl
jne
fcoml
rclb
test
stos
inc
xor
fbld
adc
fadds
xchg
gs
loopne
sbb
outsb
cld
lods
insb
inc
cmpsb
fidivrl
sti
loope
arpl
les
cmc
repz
lods
pusha
push
mov
and
mov
fldl
pop
add
pop
test
lcall
ss
mov
mul
xlat
xchg
aad
fiadds
ret
jmp
mov
mov
lahf
dec
or
adcb
sbb
lods
mov
mov
push
out
inc
and
loop
or
fchs
stc
jl
outsb
push
inc
ljmp
out
pop
ds
lret
xor
mov
mov
lock
movsb
mov
loop
jnp
daa
jno
jno
mov
icebp
jnp
in
popf
test
aam
negb
push
cwtl
out
leave
xor
outsb
add
sub
sub
pushf
adc
sti
and
imul
inc
add
jle
bound
and
lods
add
stos
xlat
js
mov
ljmp
push
stos
call
mov
push
rcl
ja
data16
mov
in
fs
xor
mov
fcomip
and
ret
into
mov
inc
jne
and
ljmp
lock
or
and
mov
mov
inc
divl
push
inc
dec
jp
xchg
hlt
add
cmpsl
mov
mov
std
cmpsl
outsb
or
jge
fimull
push
cmp
jo
icebp
dec
add
mov
dec
inc
iret
mov
movl
jmp
ja
pop
add
rcll
push
bound
loopne
jle
sahf
adc
lahf
movlps
bound
enter
jno
push
dec
leave
dec
inc
negl
add
pushl
inc
cwtl
jp
push
lea
repz
movsb
push
jge
mov
inc
jo
sbbb
in
arpl
dec
pop
push
cwtl
leave
dec
mov
sbb
enter
outsl
fisttps
das
and
sub
repz
lret
push
icebp
out
fistl
shrl
sbb
mov
inc
lahf
mov
dec
les
jne
or
jb
xchg
and
ss
aas
dec
mov
jg
mov
cmpsl
repnz
test
lods
push
cmpl
pop
sbb
xchg
leave
outsb
sub
add
add
popf
sub
jne
dec
and
push
inc
pop
dec
lret
inc
pop
mul
push
divl
mov
dec
inc
sarl
xor
aam
pop
xchg
sub
xchg
cmp
in
adc
xchg
push
lock
in
imul
cmp
add
mov
in
pushf
adc
jb
lret
xchg
sub
xor
leave
inc
push
les
add
stos
and
les
test
ret
mov
decb
pop
mov
cmc
shll
sub
adc
adc
loop
aas
fsubs
aam
jg
jl
cli
dec
cli
push
jmp
lock
dec
dec
pop
fisttpll
fcmovnb
test
mov
push
and
mov
leave
insl
inc
test
add
test
shlb
mov
sti
push
pop
xchg
sub
jle
xchg
stos
dec
fstps
mov
inc
test
in
aaa
icebp
inc
test
fincstp
stc
fstps
daa
jae
inc
push
jae
push
push
lea
xchg
stos
lock
and
xor
test
or
mov
adc
dec
and
bound
pop
sbb
xor
or
adc
icebp
dec
add
out
xchg
loop
jecxz
data16
sbb
cmp
or
or
in
inc
push
test
pop
mov
push
icebp
add
push
das
jnp
xorb
vmovups
addb
loopne
pusha
mov
and
movsl
mov
insl
shrb
stos
leave
jo
sub
inc
mov
and
adc
or
loopne
and
fdivl
lds
pop
jmp
mov
sarl
mov
mov
int
insl
sub
icebp
mov
shlb
mov
inc
push
scas
bound
ds
jecxz
arpl
imul
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
ss
cld
xchg
adc
lahf
movlps
shrb
sbbb
cmp
jle
lahf
cmpsl
sub
hlt
jl
in
lahf
dec
divl
pop
sub
dec
sub
loope
leave
cmpsb
jb
loop
xlat
and
pop
xchg
pop
mov
mov
inc
sbb
mov
sbb
js
push
push
mov
call
flds
sbb
pop
popa
cltd
sbb
cmp
cld
push
mov
xor
lds
rorl
dec
jl
mov
mov
int3
cmpsl
xchg
or
decb
cs
aam
dec
push
sbb
xchg
divl
sahf
nop
cli
add
adc
push
mov
adc
push
cwtl
mov
xlat
sbb
add
mov
iret
jl
cld
lret
sub
loopne
dec
pop
jno
mov
into
push
lahf
inc
pop
test
dec
sarl
inc
stos
jp
and
jne
test
jbe
jne
inc
imul
cltd
dec
cmp
fsubr
add
repnz
rorb
cmp
idivl
cmpl
enter
movsl
orb
add
ss
push
fs
hlt
dec
lcall
sub
mov
sbb
loope
mov
xor
das
mov
movsl
lods
jae
shrl
sub
adc
hlt
cmp
sbb
sub
lods
test
repnz
lret
jae
mov
push
jmp
icebp
jb
ret
test
sub
fucomi
jbe
add
fadd
push
push
in
jg
dec
or
xchg
cs
mov
lds
test
adc
fwait
cmpsl
mov
xorb
push
loopne
sbb
out
daa
inc
cld
mov
pushf
mov
sti
xlat
mov
sbb
inc
mov
push
lds
push
out
push
adc
in
lcall
add
in
jmp
mov
decb
or
bound
lock
xchg
enter
in
fst
repz
imul
imul
es
pop
or
scas
cmpsb
jp
mov
or
and
pop
cld
dec
lds
mov
lods
xchg
cld
sbb
inc
xor
fdivrs
arpl
and
into
xor
orps
mov
out
lcall
or
sahf
sbb
push
mov
aaa
mov
call
jp
jae
and
sbb
mov
or
incl
add
cmp
inc
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
xor
adc
je
loope
incl
mov
pop
imul
stos
add
pop
fists
dec
add
add
mov
leave
popf
xchg
mov
pushf
lds
mov
sbb
push
fwait
mov
loop
add
out
mov
push
xchg
mov
add
xor
mov
push
test
rcrb
loopne
xor
loop
imul
inc
jns
mov
mov
movsl
adcb
mov
and
pop
ret
inc
sub
in
lea
and
in
test
dec
pusha
je
push
enter
sub
fwait
dec
outsb
add
pop
scas
outsl
or
xor
cmp
loope
dec
jb
inc
inc
push
bound
mov
es
shrb
dec
scas
out
mov
inc
pop
dec
enter
call
pop
jb
cmc
or
mov
loop
and
fbld
jae
push
loop
push
aas
out
mov
cmc
arpl
adc
or
xor
sub
loope
inc
xchg
pusha
pop
xor
fsubrs
mov
cmp
jns
sub
mov
int
xchg
or
ds
nop
imul
icebp
xlat
out
add
ficoms
shll
fisttpl
lock
mov
outsb
adc
or
into
shlb
sbb
mov
lcall
ss
push
sahf
cmpsl
sub
adc
cmc
push
dec
adc
aad
sub
push
inc
rcrl
mov
loop
push
cmp
mov
dec
push
push
jp
xor
push
push
je
add
jmp
and
jp
push
stc
push
inc
shl
fwait
mov
sub
in
sarl
sub
or
popf
fsts
xchg
loop
scas
push
std
and
adc
sbb
scas
inc
xchg
inc
loope
rcrb
std
adc
int3
push
jle
sti
sbb
sub
cmp
sbb
stos
jecxz
cmp
loope
hlt
pop
loopne
lcall
ljmp
dec
push
cmpsl
mulb
pop
jnp
mov
add
cwtl
push
iret
pop
dec
xor
push
add
jo
addr16
aam
pop
mov
push
jge
sub
xchg
lea
mov
call
xlat
and
bound
inc
push
out
push
and
push
cmp
jmp
mov
imul
or
je
insb
ficomps
es
mov
shlb
cmc
out
out
stc
mov
jns
xchg
and
ret
test
xor
push
cmpsb
lcall
loope
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
pop
nop
icebp
stos
adc
adc
sub
mov
jno
xorl
rorl
imulb
cmp
xor
push
or
xchg
ficoml
or
movsb
insl
icebp
sub
cmp
out
inc
xchg
out
test
dec
stc
loope
test
sbb
popa
in
or
xchg
test
icebp
inc
in
mov
mov
mov
mov
pop
push
pop
in
cmpsl
cmc
loope
int3
out
xchg
scas
dec
add
sub
inc
pusha
sbb
pop
call
sahf
std
lds
lret
or
xor
and
pop
aad
ljmp
adc
jg
lods
cltd
push
popf
movsl
jle
mov
stos
call
cltd
flds
pop
and
leave
aam
pop
mov
les
sub
push
push
dec
out
cmp
aam
prefetch
cmp
in
outsb
enter
xchg
aas
mov
js
push
movsb
push
xchg
and
enter
or
roll
push
dec
lcall
scas
xchg
sub
lret
mov
adc
test
xchg
inc
adc
inc
movsl
sbb
clc
mov
orb
cmp
pop
into
into
or
push
ja
dec
fisubl
xchg
sti
sbb
add
rcll
xchg
mov
icebp
jb
mov
testb
je
inc
lock
mov
adc
movsb
sbb
fwait
ret
adc
and
imull
jno
add
lahf
jge
mov
mov
aaa
inc
cs
pop
nop
fs
xchg
sbb
sub
test
xchg
dec
sbb
pop
jecxz
movsl
jno
adcb
dec
rcrl
inc
inc
sbb
lret
mov
inc
dec
outsl
das
call
test
pop
add
xlat
insl
mov
jp
stos
xor
cmc
mov
pop
data16
pop
pop
inc
cmp
loope
int
xchg
loop
test
stos
and
test
and
jnp
add
in
dec
inc
cmpsl
inc
in
aad
mov
jne
adc
jnp
in
or
pop
and
stc
sbb
pop
xchg
fwait
pop
addb
hlt
in
push
mov
fistpl
mov
adcl
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
call
adc
pop
movlps
xor
and
out
jne
jbe
cltd
aas
or
pop
in
scas
faddl
push
rcll
adc
in
push
adc
sub
jmp
push
imul
test
mov
out
shlb
popa
sub
pop
lret
push
and
adc
pop
xchg
xchg
icebp
cmp
ss
or
add
enter
xchg
jecxz
in
leave
imul
sub
addr16
push
dec
adc
cwtl
push
cmp
out
movsl
scas
outsb
stc
sbb
adc
xor
cmc
mov
enter
and
aaa
jl
rcrl
out
lods
dec
in
lret
call
outsb
std
jno
hlt
xor
xchg
jg
push
fdivrs
aad
jmp
mov
fdivrl
es
pop
and
das
enter
pop
xor
loope
pop
mov
addb
aaa
sub
xchg
into
in
adc
ljmp
std
stc
adc
mov
leave
arpl
jmp
fsts
stos
popl
jmp
push
sbb
and
clc
and
stos
pushf
and
shlb
jp
out
dec
add
lods
inc
dec
push
and
xchg
int
xchg
inc
push
pop
mov
add
xor
and
jno
cs
cmp
rorb
popa
mov
das
inc
and
mov
in
shrb
mov
cmc
fnstenv
pop
adc
movsl
imul
repz
adc
rorb
fcompl
insb
es
faddl
ss
repz
push
sbb
fidivrs
movsl
push
push
cwtl
fs
das
mov
adc
push
mov
outsl
sub
inc
push
insb
testl
pop
mov
xchg
iret
call
lods
xlat
aad
or
testb
clc
ss
out
or
mov
sub
es
pop
push
push
mov
mov
jo
mov
shrb
mov
cs
cmpsb
dec
lods
fimull
lds
movsl
filds
popf
lahf
jae
mov
xorl
mov
cmpsl
inc
or
jmp
fdivl
fnstcw
sbb
push
aad
js
adcb
pop
movlps
xor
sub
cltd
mov
iret
sbb
rorb
pushf
js
cmpsb
xchg
sbb
mov
mov
sahf
imul
test
out
sti
ja
lahf
mov
lea
stos
xchg
and
pop
arpl
jbe
mov
jbe
ljmp
sub
adc
loope
fildl
std
fs
sbb
arpl
dec
push
push
push
int
inc
xor
lods
js
lods
xor
sub
movaps
push
cmpsb
inc
mov
imul
add
repz
adc
iret
repnz
fucomip
pop
clc
mov
cmp
mov
push
add
js
inc
and
adc
cmp
leave
insb
pop
add
jns
mov
mov
cmp
mov
mov
aaa
jbe
and
push
xor
test
cmp
adc
out
daa
andl
jle
mov
pop
adc
lret
jg
adc
rorb
xor
inc
mov
cld
or
pop
pop
mov
xlat
fmull
inc
das
adc
adcl
scas
inc
push
mov
sbb
mov
ljmp
popa
mov
je
lea
dec
xor
aad
insl
lock
in
xchg
imul
and
mov
scas
cli
shrl
cmpsl
loop
pop
fadds
fsubr
inc
pop
or
cmp
pop
fsubrp
xor
ds
arpl
fsubrs
es
aas
arpl
aad
xor
mov
add
cmc
sbb
mov
ret
aas
fidivl
js
lret
sub
sbb
push
pop
ds
mov
enter
or
push
subb
or
ds
cmp
inc
dec
enter
pop
jge
data16
sti
jmp
or
dec
push
add
aaa
mov
pop
pop
loopne
push
add
or
dec
in
fcomps
bound
cmc
imul
dec
xor
fsubrp
call
scas
jmp
subb
xchg
jo
sahf
out
into
pop
mov
into
pop
or
xchg
cmp
sbb
cmp
arpl
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
aas
pop
lods
ljmp
adc
scas
push
xor
pop
xor
fcompl
jmp
jns
je
inc
jle
cli
shlb
pop
jge
jne
add
and
lret
xor
call
cmp
jnp
outsl
sub
std
ret
lahf
push
scas
mov
xchg
jmp
lret
dec
adc
push
mov
repnz
shrl
rclb
dec
jle
mov
lsl
xchg
mov
lods
pop
cmp
les
push
jl
or
loopne
jge
adc
sub
imul
dec
pop
jl
xchg
out
in
xor
clc
das
mov
mul
inc
rclb
hlt
aas
mov
mov
outsb
push
out
pop
xchg
sub
pop
aad
testl
test
mulb
sub
push
jbe
addr16
or
outsb
out
jecxz
mov
xor
es
adc
mov
insl
or
pop
push
scas
lcall
in
lret
pop
ds
js
es
cli
push
xorl
movsl
sarb
push
jg
dec
xchg
dec
push
sbbb
and
dec
daa
xor
cwtl
push
je
int
outsb
sbb
xchg
stos
fcmovnu
mov
std
pop
mov
rclb
loope
jmp
pop
in
mov
or
test
adc
mov
in
repnz
les
das
add
aam
cwtl
inc
and
and
dec
popa
xchg
mov
pop
push
out
stos
cmp
xor
add
xchg
mov
xor
addr16
xor
pop
push
jge
or
out
int3
int3
sbb
jl
pop
loope
inc
mov
pop
adc
sub
inc
jae
ja
pop
sub
int3
mov
repnz
add
xchg
pop
mov
push
lods
stos
push
or
push
push
xchg
jne
mov
dec
scas
lods
call
or
in
shlb
xor
enter
xchg
xchg
pop
sub
mov
and
sub
xor
icebp
pop
outsb
fdiv
mov
jmp
jne
inc
andl
lret
push
mov
xchg
cld
pop
lock
in
rcll
ss
icebp
out
push
lock
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
sbb
mov
ficoms
adc
aaa
ds
ljmp
stos
cwtl
loopew
mov
pop
outsb
rorb
adc
xchg
push
je
das
scas
jns
repz
cmp
pop
lcall
addr16
iret
mov
ja
or
out
push
lret
jne
clc
repz
cmc
jecxz
cmp
mov
arpl
mov
mov
lods
and
ja
lods
xchg
icebp
outsl
inc
mov
rcrb
pop
mov
push
push
add
mov
pop
cld
out
add
lahf
and
sbb
bound
nop
cmp
daa
stc
mov
mov
mov
aas
sbb
repnz
cmp
cmp
pop
lock
cmp
int
dec
jnp
adc
adc
addr16
sub
aam
xchg
cwtl
pop
mov
pushf
and
leave
pop
pop
inc
pop
cwtl
and
fcoml
dec
into
adc
adc
xchg
sahf
lcall
scas
shr
jo
cmpsb
es
ljmp
cmpsl
ds
in
or
andl
mov
mov
xchg
fabs
jo
sbb
ds
add
xchg
push
lcall
xor
jl
in
jp
jnp
xor
mov
test
jge
or
sub
cmc
inc
aas
fsts
xchg
int
lret
roll
icebp
sub
push
sarb
inc
pop
xor
add
psubsw
inc
rcrl
das
sub
push
push
sub
mov
sub
sarb
fcomip
jae
ljmp
imull
jmp
push
lods
lods
cld
jae
add
js
and
xor
popa
lea
and
and
sub
push
xor
inc
aaa
fcomps
lret
and
ds
repnz
jle
mov
adc
in
sub
orb
adc
iret
mov
xor
mov
push
mov
and
aad
pop
xchg
mov
jbe
and
cmc
or
mov
rcr
imul
and
mov
outsl
ja
lods
insb
pop
in
pushf
inc
cmp
shll
mov
push
adc
and
in
and
jbe
jecxz
lock
push
fadd
rcpps
pop
fcomps
push
push
fs
lahf
sbb
lods
push
inc
mov
pop
lret
and
into
iret
pop
sbb
hlt
insl
jl
inc
pop
add
fidivs
mov
cmp
repz
ret
adc
xchg
int3
popl
or
stos
mov
mov
repz
xlat
rorb
fadds
inc
sub
in
dec
sti
mov
hlt
add
pop
jecxz
and
jp
pop
mov
es
in
arpl
int3
or
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
test
adc
ficoms
adc
mov
xchg
es
hlt
daa
xor
and
jns
sbb
sbb
add
push
test
fadd
push
fstpt
mov
in
cwtl
loop
mov
int3
xchg
ret
xor
jmp
xchg
jne
xor
jmp
andb
std
lds
repz
inc
fdivrl
push
ljmp
or
out
xor
fidivs
push
fs
je
sahf
or
sub
mov
xor
loopne
adc
xor
lods
sbb
xchg
mov
in
mov
pop
and
cwtl
or
out
xor
mov
out
icebp
inc
or
sub
mov
mov
cmp
pop
ss
jecxz
dec
mov
pop
rcl
or
add
js
cwtl
mov
mov
jecxz
add
push
jl
and
test
cld
shlb
pop
into
sbb
jp
xchg
mov
sub
cmpsb
scas
xchg
jle
aad
mov
hlt
or
xor
dec
inc
addl
or
dec
lods
aas
sarb
movsb
push
mov
fs
sbb
mov
sub
cmpsb
loopne
repz
bnd
test
rcl
clc
mov
mov
pop
sti
and
cltd
add
cld
ja
xchg
pop
inc
aam
clc
push
jp
add
lods
or
add
sbb
push
rol
add
pusha
icebp
pop
or
aas
xor
jecxz
mov
into
aam
scas
sbb
cli
imul
fcomip
mov
loopne
sbb
mov
and
inc
jae
sbbl
add
pop
fisubrs
add
scas
loope
dec
xchg
or
jo
inc
lahf
push
notl
sub
mov
mov
dec
pop
movsl
mov
add
inc
inc
test
and
lods
iret
clc
es
jb
add
sbb
inc
out
jp
iret
mov
jno
jg
sbbl
notb
mov
adc
movsl
mov
push
outsl
or
adc
xor
ss
insb
push
cvtps2pd
xor
and
aad
pop
daa
jo
mov
sar
sbb
adc
dec
push
and
cmc
and
imul
call
dec
in
rcl
aad
popf
inc
negb
test
push
xchg
or
ficomps
cmp
pop
imul
orl
adc
gs
lods
push
sbb
test
stos
add
xor
push
mov
cmp
xor
xor
push
mov
in
lret
pop
mov
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
push
outsb
adc
ficoms
adc
loope
and
sub
jnp
mov
sub
stc
in
push
mov
js
mov
popa
movl
and
jnp
sbb
pop
push
jnp
mov
dec
dec
pop
ss
push
outsb
jmp
fs
repz
mov
popf
add
xor
outsl
jbe
add
or
std
sub
ficoms
xchg
out
sub
int
mov
shrb
loope
cmpsb
xchg
ljmp
daa
pop
repnz
inc
out
sbb
jp
xor
lock
and
shll
mov
hlt
nop
fstpt
pop
sub
add
sbb
mov
cmp
jg
push
fnstsw
xlat
sbb
xchg
mov
sbb
pusha
adc
mov
mov
push
push
data16
push
xchg
ja
aas
cmc
add
fldt
xlat
insl
popa
fcomip
dec
jg
sti
dec
out
mov
inc
fidivl
sti
test
insl
outsl
adcl
dec
cmp
pop
imul
sub
inc
inc
int
movl
and
ja
xchg
ds
pop
fstpt
iret
mov
xchg
pop
out
mov
mov
xchg
addr16
or
mov
sub
test
ds
mov
iret
imul
jno
icebp
in
insb
sub
pushf
mov
test
cmp
faddp
fstps
or
mov
and
insl
add
cmp
jmp
push
es
pcmpeqd
cs
imul
xor
in
jae
outsl
mov
cmp
mov
xchg
add
lods
jns
jo
icebp
out
dec
xor
mov
daa
cld
sahf
pop
shl
icebp
or
lds
into
push
push
xor
sbb
dec
add
stc
push
hlt
fistl
xor
les
fnstenv
ds
xchg
or
adc
mov
call
sbb
in
xor
dec
lcall
push
adc
xchg
lret
xchg
and
pop
into
mov
daa
inc
and
fstl
popl
repnz
out
loope
fidivrs
imul
sbb
jo
pop
test
je
daa
ja
fwait
insb
adc
xchg
push
ficomps
sbb
xchg
loop
mov
ss
sbb
xlat
add
mov
sub
inc
icebp
push
dec
or
and
xor
mov
fnstenv
les
outsl
jp
push
sbb
jl
aaa
lcall
out
xor
call
xchg
ss
mov
xlat
jecxz
cwtl
aas
testl
divl
loope
push
add
outsl
and
scas
and
adc
push
sahf
inc
mov
mov
test
mov
test
push
in
jne
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
dec
imul
adc
ficoms
adc
ljmp
push
fistl
add
popa
xchg
sbb
add
inc
mov
aam
and
inc
xchg
xchg
mov
xbegin
add
in
pop
negb
xor
push
and
sbb
add
mov
sbb
fmul
stos
xchg
stc
xchg
mov
nop
mov
pop
inc
inc
and
lods
jo
sub
inc
xchg
fistps
inc
sahf
mov
cmpsl
jb
mov
call
dec
sahf
repnz
pop
cmp
sbbb
flds
push
ret
lock
jns
sub
xchg
cmp
add
stos
rolb
fisttpl
or
xorl
jp
call
fcmovnb
push
mov
push
add
pushf
out
xchg
aad
xchg
and
sub
mov
adc
pop
rcrb
xchg
mov
out
push
lock
es
aas
and
ljmp
mov
sbb
push
cmp
lret
mov
daa
and
lret
test
cli
inc
into
adc
lods
mov
ja
sbb
ror
cmp
xchg
ljmp
dec
or
jns
aad
adc
mov
jae
inc
ret
jnp
fidivrl
xor
test
sar
fiadds
mov
dec
jae
outsl
and
adc
push
fdivrs
push
mov
sarb
mov
cmp
xor
loop
repnz
rorl
xor
je
sti
jle
cmpsl
jmp
pop
enter
inc
mov
sub
cwtl
call
cld
lock
jnp
jmp
sub
popf
dec
jne
jne
aad
mov
sub
cli
mov
test
sub
aaa
adc
outsb
push
imul
mov
scas
sub
jbe
adcb
repz
rorb
xchg
mov
xlat
mov
push
add
jecxz
imul
mov
mov
scas
lds
ret
add
add
adc
inc
inc
repz
pop
dec
stc
mov
inc
or
insb
xor
fs
sbb
imull
xchg
inc
movsb
daa
add
push
ret
ja
push
aas
lock
jne
sub
xor
pop
fidivrl
notl
adc
nop
pop
add
hlt
mov
pop
gs
stos
add
pop
clc
add
jnp
pop
aad
cmp
in
mov
in
sub
pusha
inc
pop
xor
dec
jno
and
mov
es
sub
cmpsl
jns
push
xchg
fwait
sub
xchg
outsw
aad
decb
inc
ss
stos
pop
add
aaa
add
test
sub
or
add
stos
mov
nop
jmp
jne
std
pop
adc
les
and
or
push
out
inc
outsl
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
cmpsb
push
fidivrl
ficoms
adc
and
add
sub
sub
mov
adc
pop
out
sbb
jne
mov
test
cmpsb
push
or
iret
inc
lret
and
scas
sub
jnp
inc
data16
or
or
ret
adc
and
clc
jmp
xchg
pop
mov
push
push
jmp
dec
shrl
xchg
or
sub
jl
repnz
pushf
leave
test
pop
insl
cmpsl
mov
ficoms
add
jns
fiaddl
inc
int3
roll
mov
mov
xor
inc
rcll
dec
adc
sbb
xlat
cli
clc
fisttpll
jl
repnz
popf
xchg
jno
aas
xor
movntq
out
mov
ljmp
sbb
mov
jg
vmovaps
lret
movsl
fistpll
sub
or
repz
rolb
mov
jne
jge
or
call
lret
adc
push
test
icebp
loope
mov
sahf
xor
lea
dec
cmpb
outsb
mov
pop
or
std
rol
xchg
push
cltd
mov
push
and
jl
shll
cmp
cmp
jnp
cmpsb
sbb
adc
mov
xor
fs
ja
lods
jmp
jmp
mov
push
sarb
into
xchg
mov
shl
dec
mov
mov
repnz
std
aas
jno
xchg
jae
inc
popa
lods
sarl
std
dec
repz
adcb
adc
mov
jmp
mov
lock
xor
xchg
push
cs
dec
popa
mov
or
data16
lods
je
pop
mov
mov
out
dec
aad
push
lcall
mov
inc
aam
jl
or
adc
pop
imul
mov
mov
dec
mov
leave
les
mov
int3
icebp
add
enter
push
das
fisubrs
test
sub
sub
and
iret
dec
dec
test
andb
pop
pop
sbb
rcrb
cli
popw
dec
cmp
or
jb
inc
mov
xor
cwtl
inc
pusha
add
cmpsl
inc
xchg
sub
pop
iret
jmp
pop
inc
or
push
rolb
les
jae
inc
push
test
mov
or
jno
jmp
add
mov
cli
cmp
sbbl
mov
cld
xchg
sahf
pop
jo,pt
fldt
pop
push
mov
add
and
xchg
jp
ss
add
idivl
push
xchg
imul
ds
cmp
sub
jo
push
jne
out
mov
int
shrl
in
sbb
sti
mov
mov
inc
in
pop
and
sbb
mov
fldenv
ljmp
jl
fdivs
lock
leave
mov
push
mov
mov
push
inc
xor
rcrb
xchg
or
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
fidivrs
xor
adc
pop
gs
movsl
ror
aaa
push
or
popa
outsl
mov
imul
pop
sub
sub
xchg
popf
xchg
fsub
inc
aaa
and
jmp
push
jp
mov
fisubl
outsb
cmpsl
in
mov
xchg
sub
pop
add
adc
dec
or
xor
sbb
jmp
add
sbb
cmp
add
adc
xchg
inc
xchg
ror
cmp
fldcw
scas
out
adc
test
fiadds
mov
out
jbe
push
xlat
hlt
xchg
add
add
je
mov
or
loopne
outsl
sbb
push
adc
pop
jmp
mov
test
inc
test
movsb
adcl
aas
cld
iret
or
movsl
les
mov
dec
cmp
dec
repnz
jl
or
jmp
pop
or
push
inc
inc
clc
xor
xchg
mov
push
stc
in
or
xchg
dec
popf
cli
and
push
dec
dec
fmul
test
xlat
lahf
push
lods
mov
test
scas
xchg
dec
sbb
imul
dec
gs
cld
out
adc
das
inc
imul
js
adc
je
mov
push
cmpsl
psllq
or
xor
test
pop
adc
nop
fcmovnu
mov
insl
sar
sub
loopne
insb
fiaddl
cli
cs
dec
cwtl
cltd
dec
adcl
sahf
daa
mov
call
push
pop
ret
push
or
hlt
es
add
jl
sub
mov
outsl
push
mov
icebp
mov
pop
mov
pushf
xor
xlat
lods
xor
jle
lods
inc
dec
loopne
xor
js
inc
sbb
popa
into
push
fcom
in
jmp
or
pop
lea
pop
in
enter
imul
in
das
xor
scas
fwait
ss
and
lcall
mov
add
xchg
test
daa
sub
addr16
mov
mov
and
loopne
jns
dec
push
push
mov
sbb
insb
repnz
fsubr
lods
ljmp
movsb
mov
inc
clc
iret
xchg
inc
dec
not
mov
leave
in
jb
and
loopne
sarb
jnp
cmc
mov
stos
lds
in
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
pop
push
push
push
adc
xor
adc
jns
sub
cld
mov
xor
jbe
jo
rcrb
or
inc
bound
inc
or
add
repz
gs
inc
in
jno
scas
xchg
aas
xchg
pop
std
inc
adc
add
int3
xorb
or
add
push
loope
and
xchg
mov
std
ja
shrb
popa
pop
xchg
movsl
cmp
xor
and
push
jns
out
ljmp
out
arpl
in
sub
in
mov
mov
xchg
inc
xchg
sar
or
mov
mov
shlb
cmp
rol
xchg
mov
fst
xchg
cli
es
push
enter
cltd
or
cld
mov
imul
sub
and
imul
sub
popa
pop
jo
mov
pop
push
rorl
xchg
xorb
outsl
pop
or
dec
in
shrb
adc
lret
push
add
adc
addr16
or
movsb
inc
test
push
pop
repz
je
ja
dec
out
jmp
out
sub
xor
xor
aad
jo
loopne
cltd
push
out
movsl
inc
loop
sub
xor
mov
in
and
inc
cwtl
adc
int
xchg
adc
ret
inc
mov
push
sar
push
or
icebp
and
inc
xchg
cmp
insb
jmp
xor
outsb
dec
xor
mov
sbb
icebp
jae
fs
hlt
loop
std
or
ss
in
cmp
push
je
jo
mov
sbb
dec
cmpsl
mov
jns
pop
xor
xor
or
mov
and
sbb
aas
pushf
mov
jbe
jo
jnp
adc
dec
pop
xor
jne
jp
add
jp
incl
hlt
outsb
or
test
cmp
pop
dec
push
cmpsl
mov
sub
jno
adc
inc
inc
dec
pusha
mov
ljmp
or
jb
sbb
jecxz
fstps
pminub
or
pop
sub
dec
jne
stos
push
popa
fnsave
test
mov
fcompl
xchg
sub
insb
sub
clc
dec
lea
mov
mov
push
stc
jge
xchg
in
xchg
push
test
in
pop
dec
push
pop
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
ja
xchg
js
push
adc
push
adc
adc
insl
sub
cli
xchg
push
inc
xchg
popf
repz
mov
mov
push
ror
xchg
mov
cwtl
icebp
xor
sbb
rolb
ret
jb
jo
mov
test
xor
repz
cltd
bound
add
out
push
ljmp
stos
stc
mov
mov
adc
mov
shlb
jb
adc
dec
mul
arpl
xor
add
imul
inc
clc
add
xor
and
dec
pop
sbb
loop
jnp
cwtl
sbb
subl
sti
lods
arpl
mov
scas
ja
and
jmp
and
out
pop
xor
ja
sahf
or
and
add
int3
jl
xlat
inc
scas
popf
and
dec
cmp
jno
mov
sbb
sti
orl
sub
add
push
sub
aam
mov
inc
test
xor
jge
std
mov
nop
adc
pop
lret
sbb
xchg
mov
lret
mov
mov
dec
jg
into
das
jl
aas
adc
and
jnp
pushf
jmp
dec
xor
dec
in
pop
xchg
insb
fisttps
rcrb
ds
fisubs
ja
nop
int
push
outsl
mov
movsb
js
ror
in
decl
out
or
sti
cld
mov
mov
or
and
fsubrs
mov
bound
cmpsl
adc
mov
scas
xchg
fnstsw
ds
rep
add
daa
cmp
filds
dec
push
lret
loop
or
pushf
in
push
mov
test
and
cs
mov
cmp
or
sahf
pop
pop
std
mov
and
rclb
jecxz
ds
stc
jecxz
int3
repz
repz
jp
sub
jmp
int3
xchg
popf
and
pop
xor
add
xlat
neg
notb
mov
and
pop
out
stc
dec
pop
mov
repz
xchg
jns
mov
mov
push
add
pop
mov
mov
cltd
sub
mov
mov
or
arpl
sub
and
cwtl
push
mov
inc
mov
jno
jg
lock
cmc
orb
cwtl
xorl
inc
jg
js
jmp
lahf
cli
pop
in
xor
mov
cmp
std
mov
sbb
xor
or
or
fucomip
and
lods
mov
push
loopne
stos
add
aad
adc
pushf
cmp
dec
mov
adc
mov
fisttps
sub
clc
pusha
sbb
fidivrs
push
in
rorl
mov
aaa
pop
and
imul
add
cmp
cltd
rcll
cli
cmpsb
std
push
xor
and
push
in
insl
std
je
cmp
mov
mov
loopne
add
call
pop
dec
mov
or
push
aaa
hlt
je
xor
jae
xor
xor
add
dec
stc
mov
outsl
imul
cmp
pushf
ret
fwait
stc
jle
or
jg
sbb
mov
enter
add
push
pusha
push
jl
mov
bound
or
insl
into
test
lods
add
jbe
aad
shll
insb
test
bound
xchg
and
add
jle
add
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
sub
adc
adc
adc
inc
and
xlat
ss
out
test
pop
cs
cmpsb
iret
fxrstor
add
ja
jle
lods
pushf
popf
mov
in
shrl
orb
cltd
push
mov
les
push
inc
add
addr16
stos
xor
mov
imul
mov
push
xor
fcompl
shl
pop
popa
es
push
cs
repnz
cmp
cmp
inc
fldl
js
pop
push
mov
cmpsl
test
adc
and
mov
xor
xor
imul
mov
pushf
shll
jno
sbb
mov
clc
xchg
rclb
dec
in
les
out
add
je
cmp
mov
leave
push
jnp
clc
xor
push
xor
mov
adcb
dec
stos
cmp
daa
cs
jp
sbb
add
dec
pop
sti
inc
mov
stos
pop
adcl
fmuls
movl
out
bnd
es
mov
pop
out
mov
mov
stos
xchg
cmp
into
mov
pop
cli
into
inc
jge
xor
movsl
stos
test
ficomps
cmpl
xchg
lahf
mov
aad
mov
scas
dec
push
pop
or
add
xchg
jl
cmp
pusha
leave
fsub
stc
jne
cmp
icebp
mov
jmp
xor
xor
ss
shll
aad
in
cmp
mov
mov
cltd
add
jecxz
mov
inc
push
shlb
inc
mov
or
sarb
imul
push
lock
mov
cs
sub
rcrl
test
push
fstpl
jns
add
rcr
xchg
sbb
sbb
mov
and
loopne
js
xchg
sbb
rcl
addr16
std
das
xor
xor
leave
mov
cmp
stos
mov
or
out
bound
enterw
mov
lahf
incl
jg
pop
cmpsb
add
in
cli
inc
leave
cmp
mov
cmpsb
jne
repz
dec
mov
movsl
dec
mov
das
xor
loop
loope
push
mov
push
mov
jmp
mov
cmp
gs
loop
repnz
jge
dec
sbb
push
leave
sbb
shlb
cltd
mov
les
dec
aad
cli
daa
femms
fildl
or
cld
xchg
int3
fwait
fwait
imulb
pusha
test
cld
call
sbb
mov
mov
mov
sbb
xchg
dec
adc
and
dec
inc
xchg
shlb
adc
push
mov
and
leave
loop
xchg
dec
mov
push
mov
sub
jecxz
and
inc
sub
stc
jge
mov
mov
mov
push
push
lea
push
push
adc
jae
pop
adc
push
dec
ret
divb
pop
lahf
iret
test
cmp
dec
lds
rcrl
int3
out
adc
fndisi(8087
xor
aam
sbb
pop
lret
add
pop
add
xor
or
in
shlb
push
sar
dec
stc
cmp
adcb
inc
push
mov
das
jbe
or
add
mov
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
incb
adc
adc
adc
mov
hlt
or
popa
dec
adc
mov
mov
dec
push
or
hlt
cld
aad
adc
aas
mov
stos
sub
shlb
push
pop
pop
daa
add
push
aam
jl
mov
test
mov
xor
loop
popf
inc
insb
adc
or
xchg
rcrl
fs
mov
outsl
hlt
shlb
or
jp
sbb
sti
xchg
sbb
cli
iret
das
push
lds
cmp
fs
sbb
out
repnz
popf
adc
cmp
mov
cmp
mov
cmp
shll
push
mov
outsl
rcl
push
mov
arpl
test
push
pop
in
sbb
cmp
xor
insb
mov
enter
lahf
call
hlt
aam
xor
call
mov
mov
xchg
fldl2t
jp
loopne
sub
mov
mov
jg
mov
xchg
add
cs
roll
sbb
push
cmpl
popf
inc
sar
cmpsl
popf
cltd
hlt
mov
mov
aad
add
stc
cltd
fistps
sti
ret
shll
push
lret
shll
xchg
cmp
dec
bnd
push
mov
int3
mov
push
xorl
sahf
lock
fmuls
sbb
cli
cmp
mov
jle
xchg
xor
mov
cwtl
or
dec
mov
add
shll
out
rclb
cmp
aam
jl
and
mov
call
stos
test
push
testb
xor
iret
cwtl
jns
daa
into
nop
add
sahf
bound
xchg
add
jmp
fsub
push
test
repnz
mov
xor
out
push
pop
push
outsb
and
push
xchg
aad
aas
sbb
mov
outsb
cwtl
push
jae
insl
jg
jge
stos
and
lods
sub
repz
rcr
push
dec
popl
adc
xchg
adc
xchg
ret
lcall
mov
ljmp
xor
shlb
loope
add
pop
and
mov
xor
jecxz
sbb
add
fisttps
adc
notl
icebp
jl
xor
outsb
fbld
aad
or
or
pop
adc
clc
or
add
mov
sub
jp
lds
xchg
out
mov
cwtl
jge
inc
add
sbb
inc
xchg
inc
cmc
js
pop
pop
lock
xchg
mov
cmp
sub
scas
fldt
or
dec
mov
dec
and
imul
fldl
imull
cmp
jnp
bound
push
add
add
sbb
jno
stos
ficompl
out
and
fxtract
shlb
hlt
jp
push
xor
lret
das
movsl
jecxz
std
cmpsb
xor
pop
sub
xlat
adc
out
dec
mov
cmp
int3
movb
neg
adc
sub
shll
addl
push
aam
imul
ror
out
push
pushl
scas
faddp
mov
insl
add
aas
jp
cmc
std
ljmp
mov
movsl
adc
and
push
mov
add
xchg
sbb
out
mov
dec
nop
mov
inc
cmp
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
jne
mov
adc
adc
adc
xchg
xor
jb
adc
sub
sbb
cmc
ds
sti
pop
jb
sahf
sbb
std
xor
enter
inc
cs
das
jl
fldt
iret
sub
das
pushf
cs
xchg
sub
push
imul
jb
sbb
jecxz
adc
aaa
stos
inc
les
or
movsb
push
iret
ss
cltd
cmp
sahf
sub
jno
fdivp
cmp
dec
xlat
movsl
mov
int
jo
adc
jl
sub
sub
jl
lods
push
fisttpll
into
sbb
dec
xchg
push
jno
inc
mov
sub
jnp
pop
push
pop
dec
lods
push
xchg
inc
cmp
aaa
loop
orl
xor
sub
sarb
jbe
push
test
cld
sbb
cli
lss
cmp
pop
imul
add
pusha
in
jmp
mov
test
ss
or
mov
test
mov
or
popa
gs
insb
jne
stos
cmp
fs
lea
pop
add
fwait
rclb
rcll
adc
sub
and
popa
add
adc
addl
lea
stc
pop
or
lahf
sub
push
pop
stc
and
data16
sti
lds
mov
mov
inc
xchg
push
es
rol
push
jecxz
add
loope
mov
out
test
jmp
arpl
ret
mov
roll
jbe
nop
in
outsl
imul
sub
fdivl
pop
pop
cmpsb
sahf
into
out
mov
sub
imul
out
loopne
in
mov
mov
int3
fcomip
call
mov
jns
mov
push
insl
xor
inc
cs
pop
or
cmpsb
push
dec
aad
dec
out
inc
mov
add
scas
sub
push
ret
into
dec
mov
mov
mov
mov
and
jbe
cld
cmc
mov
push
and
aaa
or
imul
jnp
xor
and
mov
loop
xor
mov
push
pop
adcl
cli
out
gs
or
std
cmp
cli
or
inc
or
ja
and
sbb
mov
inc
inc
dec
cmp
lods
mov
popa
mov
insb
lret
int
mov
jmp
insb
mov
stos
add
jne
sbb
sub
loope
push
insb
test
dec
inc
mov
sub
dec
pop
shrl
fbstp
iret
mov
test
sbb
nop
jge
cwtl
push
cmp
mov
push
jae
scas
jle
adc
mov
or
int
cmc
jnp
jb
aad
jne
sub
inc
mov
or
mov
loop
push
pop
lcall
popa
cmp
jae
jl
pop
add
dec
cwtl
fistps
adc
dec
adc
adc
dec
fsubl
jae
cmpsl
stc
test
aas
or
cmp
jmp
mov
test
shll
mov
leave
push
cmpsl
je
dec
loop
push
or
pop
add
cld
jp
xlat
ret
push
leave
pop
pop
mov
and
push
pop
sub
mov
cltd
xchg
das
mov
mov
add
jmp
insb
ror
shlb
insb
daa
ret
mov
mov
xor
adc
adc
adc
lahf
push
xor
addl
notl
les
push
xchg
cmp
pop
std
xor
dec
adc
roll
mov
lods
roll
in
cli
mov
fucomp
es
movsb
jmp
cld
mov
loop
scas
pop
aaa
dec
leave
add
sbb
push
nop
dec
jp
xchg
rcrl
or
rorb
mov
fs
addr16
sbb
or
jne
fmuls
dec
jae
push
js
push
sub
push
mov
sar
inc
mov
call
fidivrs
sub
rclb
pop
inc
push
test
cmp
sub
jno
ljmp
mov
cmp
aam
xor
and
ficoml
or
enter
sbbl
or
into
push
lret
subl
jl
addr16
jno
hlt
mov
repz
pop
std
mov
dec
jp
mov
xchg
mov
xor
mov
add
cmp
aaa
rorb
or
out
and
jo
fdivrl
test
out
mov
xchg
dec
add
data16
sub
aaa
mov
fwait
mov
mov
mov
int
into
bound
inc
xchg
mov
sbb
in
bound
in
pop
fnstcw
and
loope
std
sti
pop
and
sti
aad
dec
int
inc
jle
sbb
xor
loopne
push
mov
or
inc
mov
mov
lret
test
pop
inc
pop
icebp
lea
loop
mov
orb
push
cmp
fldt
sbb
push
cmp
mov
inc
add
jb
sub
jns
and
xchg
dec
repz
aam
ret
add
call
inc
icebp
jo
pop
out
sbb
negl
ja
dec
in
mov
mov
xor
sti
pop
fs
movsb
xchg
addr16
lret
sub
icebp
fisttps
es
not
test
movsb
dec
inc
sub
divl
loope
negl
sbb
mov
pop
mov
push
mov
adc
or
xor
imul
inc
mov
sbb
pop
inc
add
inc
call
testl
mov
adc
in
ja
out
adcl
in
cmp
scas
xor
cmc
std
mov
mov
add
inc
fimuls
loopne
pop
sti
aad
loope
pop
clc
lahf
mov
fwait
sti
xor
fbstp
adc
xchg
cltd
cmpb
fadd
js
sub
mov
mov
int
cmp
and
out
or
push
sbb
call
mov
sub
or
sub
xchg
jg
push
scas
popf
sbb
out
incb
pop
aas
into
iret
mov
jmp
jne
push
pushf
cmp
lret
hlt
xchg
inc
out
xchg
and
cmpsl
pop
fildl
out
cld
call
stos
pop
mov
add
xchg
pop
add
pop
jg
test
lods
mov
lret
xchg
rol
jns
mov
mov
lods
adc
jnp
hlt
movsl
push
in
xchg
fstpl
and
inc
mov
dec
mov
push
mov
sbb
add
add
ret
nop
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
pop
sbb
xor
pop
test
bound
out
push
pop
nop
push
fadds
inc
adc
lret
decl
loop
subb
lock
xchg
sti
push
jmp
adc
add
cwtl
or
xor
jae
sub
clc
xor
push
pushf
pop
sbb
inc
push
in
insb
mov
test
add
push
mov
lret
mov
idivl
das
lahf
pop
outsl
xor
fcmovnu
bound
lods
pop
dec
cmpsl
int
xchg
adc
mov
mov
adc
mov
incl
repnz
push
data16
into
jae
inc
xor
cmpsb
pop
dec
sbb
inc
fldl
push
lods
mov
adcb
xchg
sbb
adc
add
rcr
or
cmp
inc
roll
pop
mov
push
cld
pop
push
lcall
hlt
push
enter
inc
ficoms
movb
out
addb
lock
adcb
mov
mov
or
or
outsl
or
sbb
sub
push
pop
clc
out
jnp
push
enter
stos
cmp
repz
enter
cmp
or
arpl
dec
ret
addl
ss
and
cld
movsl
icebp
add
and
jnp
push
push
push
daa
fldl
pcmpgtw
repz
xchg
repnz
mov
adc
jge
loope
push
in
and
jg
shll
push
das
fimull
or
out
sahf
xor
lret
push
pop
jne
or
frstor
sbb
leave
adc
int3
xor
inc
aad
rolb
ljmp
push
aaa
push
inc
dec
sbb
sahf
or
dec
and
jecxz
dec
and
cmpsb
std
cmpsl
gs
or
xlat
loopne
pop
inc
aad
xchg
dec
dec
cmc
loopne
daa
fisttpll
rcrb
mov
adc
mov
insl
add
and
mov
test
sarb
cld
in
inc
imul
ret
push
mov
test
xor
cmp
xlat
xchg
mov
inc
cltd
jg
test
mov
cltd
mov
mulb
sbb
sarl
insl
pop
test
xor
xor
mov
insl
xchg
dec
or
ret
mov
rorl
shlb
xchg
lcall
movsl
mov
push
xchg
scas
std
inc
idivl
dec
mov
lock
sbb
sbb
leave
js
sbb
rclb
jno
inc
stc
pop
xchg
or
adc
arpl
push
mov
sbb
sub
int3
mov
icebp
xchg
mov
push
out
cmp
fldcw
mov
pop
adc
call
jbe
add
mov
sub
add
aaa
enter
mov
mov
cmpsl
fadd
ret
jmp
cli
test
cmp
add
lcall
mov
and
int
lret
das
jg
stc
adc
mov
and
push
lock
xchg
push
pop
fidivl
sbb
xchg
out
clc
cli
stc
pop
mov
pop
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
mov
adc
adc
adc
push
cmp
push
nop
fwait
jmp
lret
testl
xchg
dec
outsl
xor
mov
cmp
inc
jge
and
push
inc
repz
mov
add
aam
push
rclb
push
out
xchg
ja
adc
and
add
cmc
enter
fs
sti
sbb
jecxz
add
fdivr
lods
bound
lods
movsb
xor
aaa
mov
dec
daa
loope
or
push
push
pusha
test
mov
jbe
dec
fldlg2
test
dec
pop
mov
nop
fistl
mov
frstor
lahf
stc
or
sbb
inc
xor
test
fnstcw
int
je
aad
fcmovu
fcomps
xor
pop
jge
sub
sbbb
cmpsl
mov
xchg
cmp
jle
mov
push
aad
cmovge
std
jne
adc
fisttpll
and
ljmp
test
cmc
cmpsl
cmpb
inc
mov
test
push
and
xchg
push
jb
sbb
mov
sbb
and
scas
test
jnp
mov
mov
into
add
adc
loopne
or
lcall
lock
popa
cmp
out
inc
dec
enter
mov
ret
inc
cmp
jno
mov
mov
data16
add
adc
popa
daa
aaa
orb
push
loop
jbe
popa
popa
xchg
fs
mov
cs
pop
insl
sbb
mov
aad
xor
jl
and
xor
mov
fsubl
imull
leave
lods
inc
mov
pop
dec
dec
out
scas
pop
adc
dec
in
and
cltd
test
icebp
sub
add
sub
push
mov
mov
mov
adc
outsl
inc
mov
sub
push
mov
in
jb
lds
mov
rolb
ret
lea
aam
mov
mov
xchg
jnp
jecxz
jg
stc
pop
cmp
fistl
add
or
mov
ret
out
adc
rcl
and
push
sbb
inc
mov
loop
lcall
fimull
cmp
sti
mov
imul
adc
or
dec
icebp
cmpsl
enter
cmpsb
push
fnstcw
xor
xor
xor
cmp
cwtl
ds
add
lret
ds
pop
or
ljmp
sahf
push
jg
mov
ljmp
nop
in
and
aaa
jmp
les
and
cmp
pushf
jle
pop
add
pop
jbe
dec
dec
sarb
add
xchg
mov
bound
dec
rcrb
addr16
in
inc
and
jne
jnp
pop
mov
lock
pop
dec
jns
icebp
arpl
std
adcb
repnz
cli
fs
inc
test
xlat
mov
add
sbb
inc
fldl
and
mov
add
cmp
jmp
js
cmp
xchg
js
xor
iret
push
pop
xor
jb
mov
aam
sbb
adc
adc
sbb
lds
bnd
mov
pop
mov
rclb
mov
mov
addr16
jno
popf
js
xor
lret
cmpsl
dec
shrl
mov
aam
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
push
call
adc
movlps
adc
mov
test
jns
adc
push
push
adc
push
mov
cmp
xor
push
or
mov
jbe
and
ss
nop
ljmp
adc
dec
jo
xchg
jo
dec
sub
inc
out
shlb
sub
stc
lock
testl
sbb
fwait
jne
dec
mov
pushf
dec
test
jne
cmp
std
enter
lret
adc
push
jg
aas
subl
daa
je
jb
sbb
xchg
lret
dec
mov
mov
add
mov
push
and
aaa
je
xchg
lcall
mov
and
jnp
push
jg
int
cmp
cld
stos
xchg
stos
in
pop
popa
loope
push
or
jp
hlt
stos
xchg
pop
call
pop
scas
sbb
mov
mov
xchg
jns
insb
xlat
icebp
sti
sahf
or
inc
stc
jb
push
jmp
dec
sahf
pusha
test
das
incl
inc
jb
or
xchg
or
and
jbe
pop
xchg
incb
mov
stc
out
lret
aad
push
sub
paddw
push
sub
or
push
jno
out
mov
rcl
stos
inc
jl
shlb
idivl
xchg
loop
hlt
aam
shll
adc
and
push
hlt
xorl
mov
lods
mov
mov
pop
es
shlb
movsl
in
cmp
aad
and
adc
mov
cmp
mov
push
push
bnd
dec
lcall
xor
dec
pshufw
fiaddl
mov
cwtl
jbe
aaa
fdivrp
push
add
jle
adc
cmp
in
fidivs
add
int
xchg
ljmp
roll
in
push
fsubr
xchg
jne
mov
mov
xchg
sub
or
mov
sbb
test
mov
mov
inc
fnstcw
sbb
push
fists
das
push
cmp
pop
dec
push
sbb
sub
add
mov
mov
ss
sub
rorl
mov
xchg
das
mov
add
jne
xor
mov
rcll
and
lods
js
sbb
pavgb
mov
sbb
inc
scas
jb
jp
lret
fs
icebp
sbb
leave
xor
add
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
movsb
sbb
decb
adc
xlat
sbb
call
xchg
inc
fsub
aas
sbb
xchg
dec
sbb
push
sub
test
mov
cmp
and
out
sarb
sbb
xchg
cmp
ja
outsl
lahf
dec
std
cld
push
xchg
les
andb
jbe
es
fldenv
jg
xchg
cmpsb
repz
out
ret
push
js
iret
sub
jmp
push
xchg
test
push
mov
dec
orb
popf
shlb
nop
pop
cmpsb
or
mov
popa
jg
cmp
out
cmc
sbb
sbb
push
mov
pop
js
addr16
dec
std
xor
or
inc
lods
rcl
int
add
xchg
paddsb
mov
jbe
ret
mov
xchg
mov
xor
sahf
sbb
aas
mov
inc
es
push
js
ficoml
test
dec
mov
push
cmp
dec
loop
xor
push
and
jns
inc
add
mov
int3
xor
lods
mov
icebp
xchg
out
hlt
sbb
je
sub
cmp
daa
insl
clc
das
pop
mov
out
jmp
in
xor
cs
mov
push
sub
int
out
stos
pop
lea
mov
jg
push
dec
jle
cs
mov
mov
xchg
jno
fmull
inc
ret
int
scas
adc
sbb
aad
popf
addl
jl
decb
stos
loope
and
cmpsl
ja
popa
or
je
push
push
pop
mov
pop
aaa
push
push
mov
cmp
jo
mov
mov
outsb
push
or
gs
cmp
mov
jge
cltd
mov
inc
rcll
inc
addr16
sti
cli
ret
dec
addr16
or
jnp
adc
sbb
pop
sub
mov
bound
inc
nop
adc
sub
es
xor
mov
or
jp
fisubs
in
pop
mov
mov
js
pop
mov
jne
or
xor
pop
cmp
les
jmp
roll
hlt
mov
repz
xchg
or
mov
pop
mov
or
out
jbe
repnz
shlb
das
das
push
js
call
jns
loop
push
jp
shlb
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
jp
mov
decb
adc
mov
or
inc
pop
ss
hlt
cmpsb
jnp
in
mov
mov
cmp
hlt
daa
pop
cmp
and
cmp
fisttps
out
inc
xor
pop
dec
sbb
dec
inc
test
or
inc
xchg
adc
maxps
jb
std
mov
sub
aam
enter
push
stos
or
stc
leave
fildll
mov
xor
or
cmp
push
shlb
repnz
cmpsl
mov
addb
or
movsb
and
ret
pop
andb
push
add
or
cmp
mov
and
dec
ret
add
dec
lret
sbb
testb
enter
jp
xor
rcl
setge
dec
test
and
mov
pop
and
adc
xchg
dec
addr16
dec
cmp
jno
mov
and
mov
mov
dec
enter
sti
cmp
push
add
push
push
xchg
or
mov
xorl
dec
adc
hlt
jno
inc
inc
cmp
xor
clc
shrl
fcompl
pop
push
inc
mov
mov
adc
pop
xchg
lcall
xchg
push
mov
pop
adc
hlt
mov
dec
div
jge
inc
jo
test
loopne
push
inc
fisubrs
jl
lcall
scas
mov
lods
mov
fsubs
lret
and
xchg
mov
arpl
lods
mov
test
fdivrp
fwait
push
arpl
mov
push
in
fsubr
ret
addb
cltd
mull
lcall
xchg
repz
dec
dec
cmp
fcompl
fsubp
xchg
add
fadds
mov
or
cltd
cmp
xor
jmp
arpl
push
xor
add
or
roll
add
cmpb
imul
xor
in
out
pop
adcb
or
aam
and
dec
jp
out
rorb
divb
dec
lret
adc
pusha
outsb
pop
push
jo
pop
push
xchg
ss
nop
and
xchg
vshufps
hlt
cmpsl
add
mov
jb
xor
adc
mov
mov
cltd
fdiv
xor
gs
adcl
add
lock
inc
outsb
idiv
call
push
pop
sub
adc
rorb
dec
add
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
xchg
adc
decb
adc
lahf
add
sub
dec
mov
mov
mov
sti
movsl
sarb
push
shll
cmp
out
outsl
cmpsb
aaa
lock
notb
xchg
movsl
xchg
push
imul
icebp
push
mov
push
fimull
test
push
jbe
enter
lock
inc
out
sub
mov
mov
push
sub
sbb
std
jb
lcall
jl
sbb
push
mov
call
out
mov
push
out
dec
mov
xor
sub
add
clc
stos
mov
mov
sbbl
or
pop
inc
adc
jne
xor
dec
lods
add
insb
sbb
dec
test
leave
test
dec
adc
mov
push
mov
push
cltd
lcall
mov
cmpsl
ret
into
add
addr16
dec
fnsave
push
repnz
data16
andl
mov
setge
push
jns
xchg
mov
inc
in
sti
jecxz
cmp
adc
iret
cld
cli
pop
clc
cmp
mov
pop
jp
in
insb
adc
loop
outsb
xor
call
mov
outsl
sbb
and
pop
inc
jne
jmp
sbbl
mov
shlb
ja
mov
sub
and
jnp
mov
loope
pop
ss
nop
test
push
lods
dec
sub
xchg
test
mov
pop
push
xchg
and
aaa
pushf
add
fsubrl
ficoms
movsb
inc
imul
fwait
std
les
push
xchg
xorb
decl
mov
repz
fisttpll
dec
sbb
pop
fsubrl
inc
push
lret
mov
xor
dec
ret
cmp
das
or
pop
xor
sbbb
sub
or
filds
adc
inc
xchg
arpl
ret
xorl
mov
pop
push
insb
add
xchg
push
inc
jmp
fsubrl
mov
and
inc
loope
xchg
lods
mov
or
xchg
fs
xchg
add
dec
jo
xor
push
jnp
std
jno
dec
data16
arpl
aam
sub
cmpsb
push
jbe
mov
stc
fsubl
mov
imul
sub
fs
shlb
cmp
push
imul
or
aam
push
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
leave
icebp
jle,pt
or
adc
movlps
adc
out
outsb
pop
ss
mov
js
test
cs
pop
adc
dec
dec
xor
pop
pop
ret
cltd
call
mov
or
int
or
loop
jne
pmullw
fwait
mov
pop
popa
loope
dec
inc
cld
sub
les
iret
mov
dec
out
ret
loop
push
or
xchg
xor
pop
cmp
add
jmp
mov
xchg
mov
aad
adc
sbb
adc
jno
jg
icebp
aam
lcall
mov
xchg
dec
fiaddl
xor
pusha
cmp
jmp
jg
jle
ss
fdivr
mov
mov
mulb
fnsave
inc
xchg
or
in
ss
les
adc
outsl
fwait
int
sbb
sub
ret
dec
jle
or
pop
push
sar
add
jmp
fxam
sub
adc
sub
mov
pop
mov
or
and
out
add
cmp
popa
call
dec
in
in
inc
imul
fistpl
xor
xchg
pop
es
xor
mov
pop
lret
lret
clc
jae
ljmp
daa
adc
loopne
imul
push
into
test
jecxz
pop
rcrb
push
sbb
jecxz
add
bound
push
sub
push
aaa
fs
outsl
mov
cltd
mov
push
nop
cmp
lret
shlb
cmpsl
in
cld
mov
dec
orl
clc
leave
sbb
push
std
sub
add
or
xor
mov
popa
push
adcb
pop
lret
push
fisubl
loopne
and
popl
gs
adc
add
aaa
into
insl
lds
icebp
das
and
or
scas
dec
mov
sbb
test
cmp
inc
sbb
rorl
test
jne
cmpl
jle
dec
inc
out
bound
lock
out
call
add
mov
pop
loopne
cli
pop
push
pmaxsw
sub
xchg
out
int3
aad
pop
ja
jge
call
and
dec
xor
dec
add
ret
icebp
test
fldl
cmc
dec
lret
popa
lods
push
jp
mov
movsl
xlat
fcoml
push
mov
lock
cmovb
sbbb
xchg
xchg
rol
das
cmc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
and
xor
xchg
test
mov
jae
cmc
mov
addb
dec
out
decb
rclb
fwait
or
shr
adc
mov
int3
jp
dec
and
repnz
sub
imul
pop
dec
jp
out
dec
pop
imul
pop
in
xlat
scas
add
and
mov
mov
sub
popa
xchg
mov
fiadds
dec
sbb
lea
pop
sbb
nop
fnsave
rcr
mov
insb
xchg
loope
jmp
pushf
mov
push
sbb
jb
dec
icebp
call
and
jnp
mov
xor
divb
loopne
sahf
into
and
bound
or
cmp
push
xchg
cli
xor
pop
mov
fsts
icebp
lock
push
jecxz
into
or
jno
mov
imul
push
or
shlb
jmp
pop
pop
popa
inc
xchg
xor
adc
ja
adc
cld
arpl
push
adc
pop
jg
bound
pop
mov
shlb
jb
je
repz
inc
sub
dec
dec
es
mov
add
add
in
loopne
add
das
cwtl
addb
cmpsl
les
push
pop
mov
push
test
test
iret
je
push
mov
mov
cli
popf
sbb
inc
and
mov
rolb
or
mov
adc
clc
mov
jg
xor
leave
cmc
mov
mov
jbe
pop
jmp
lret
mov
sub
mov
xchg
adc
test
mov
sub
rep
and
sbb
outsl
mov
js
or
mov
add
test
sbb
jle
mov
or
loopne
push
sbb
fwait
mov
pop
and
cmc
ret
inc
cltd
adc
filds
or
enterw
in
stos
addr16
stos
inc
insb
mov
pop
and
popf
mov
pushl
xchg
push
adc
pop
and
clc
les
pop
scas
sbb
jecxz
fs
sahf
test
rorl
movsl
bound
push
frstor
ficoms
lahf
repz
mov
andb
cli
lock
pop
test
insl
stos
xor
mov
push
out
call
loop
nop
mov
jmp
stc
add
ret
xor
in
jecxz
xlat
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
shlb
adc
popa
movlps
out
jo
loop
inc
out
mov
pop
push
cli
inc
movsb
ds
push
jmp
test
xor
addr16
insl
push
mov
aam
outsb
inc
jle
cli
cmp
mov
inc
mov
jle
test
data16
add
jge
repz
pop
adc
jns
or
mov
das
fnstcw
xor
mov
popf
sub
adc
mov
iret
rorb
mov
jae
sbb
mov
cmp
daa
add
cmpl
sbb
xchg
iret
push
xchg
mov
xor
pop
ret
repz
mov
ljmp
mov
dec
idiv
je
sbb
push
icebp
push
or
loopw
scas
and
push
sbb
stos
stc
insl
cmp
scas
pop
adc
push
imul
mov
inc
jne
mov
push
jge
inc
dec
movsl
push
fbstp
add
mov
and
adc
mov
out
loopne
sbb
pop
ficoml
dec
or
icebp
shr
cmp
in
add
in
negb
mov
adc
aam
inc
push
pop
mov
test
or
scas
push
dec
mov
hlt
out
push
insb
jbe
cmp
fisubs
pop
cmpsb
adc
std
mov
mov
sbb
add
call
mov
mov
roll
icebp
scas
xor
pop
sub
mov
xlat
jne
xor
pop
clc
subl
shrb
mov
and
dec
movsl
aad
adc
inc
cmp
movsb
inc
shll
cs
ret
je
lcall
xor
js
cwtl
mov
mov
jnp
scas
aaa
pusha
cld
out
pushf
or
inc
cmp
xor
out
addb
in
push
ljmp
jmp
sbb
mov
add
inc
repz
pop
daa
dec
inc
lret
out
stos
mov
loope,pn
mov
aas
jns
mov
pop
adc
popf
lret
cmp
out
inc
add
idivl
jl
mov
in
cmp
or
in
clc
pushf
shl
add
inc
dec
sbb
adc
dec
mov
and
xchg
adc
jmp
repnz
jnp
test
adc
loop,pt
xor
shrb
addr16
mov
test
out
test
jle
stos
push
xchg
mov
aam
pop
jp
push
xchg
in
sub
sub
jge
sbb
loop
pop
loop
or
scas
fnstenv
pop
stos
dec
jae
inc
cld
dec
pusha
add
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
cld
sub
adc
adc
mov
mov
push
jns
test
cmc
jne
xor
sbb
es
lods
cmc
xchg
gs
sbb
jns
pop
ja
push
lret
scas
jb
out
dec
jnp
orl
sti
pop
sbb
dec
adc
leave
aaa
jl
xchg
dec
popa
aam
shlb
sti
cmc
fbstp
push
shlb
mov
fisubs
xor
dec
into
dec
jg
call
jnp
fstl
dec
pusha
and
dec
dec
xlat
adc
mov
nop
lahf
jecxz
lods
add
or
jmp
xchg
mov
sub
xor
daa
push
lret
adc
push
mov
daa
fsubrl
cs
cs
or
in
fstp
mov
mov
rorb
js
dec
dec
pushf
aad
outsl
lods
les
movsb
sahf
push
sbb
mov
sub
and
push
or
xor
dec
jle
sahf
aas
subb
xchg
xor
dec
dec
xorps
aad
sbb
fmull
sbb
push
sub
xor
sbb
test
hlt
jne
jecxz
or
adc
cli
pop
stos
push
mov
test
fbstp
lods
sub
or
cmpsl
pop
repnz
adc
jbe
rorl
push
and
pop
mov
mov
clc
dec
daa
inc
mov
cmp
pusha
and
jns
call
enter
cmp
mov
mov
movsb
pop
cmc
dec
push
pop
aam
push
adc
lods
inc
movsl
pop
mov
pop
adc
or
xchg
lahf
stc
adc
imul
daa
pop
xchg
call
dec
jg
movsb
movsl
jl
fsts
jnp
push
cwtl
jge
jl
jae
dec
dec
jae
fstps
mov
inc
mov
mov
mov
je
pop
mov
inc
push
cmpl
es
pop
pop
mov
lret
les
jecxz
iret
fcmove
fstps
test
in
andl
fmul
mov
cmp
jno
idiv
sub
into
cmp
mov
push
jge
push
ljmp
aad
andl
xchg
stos
xchg
cwtl
cmpsl
xchg
jae
inc
por
int
cmc
iret
loope
dec
jne
imul
jecxz
hlt
mov
test
icebp
xchg
mov
pop
cmc
rorb
and
xchg
cld
cmp
inc
jp
cltd
and
mov
cmc
in
and
cld
pusha
xchg
mov
mov
mov
ljmp
gs
in
clc
lock
subl
clc
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
pop
adc
notb
adc
adc
inc
repnz
lahf
adcl
xor
cmpsb
adc
sub
sub
add
nop
push
xlat
sti
in
jns
repz
mov
mov
mov
push
bswap
and
sub
movsl
out
ljmp
rcrb
inc
cmp
pop
std
testl
sub
leave
shl
xor
outsl
mov
das
loopne
xchg
repz
pop
mov
lods
insb
xor
push
xor
mov
stos
rol
test
pop
fstps
test
std
pop
ret
jbe
mov
mov
aas
pusha
pusha
aad
adc
push
les
test
cmp
mov
or
mov
in
stos
test
stos
cmp
push
rcrb
test
out
push
mov
xchg
daa
fs
popf
adc
xlat
adc
xchg
stc
and
xorl
out
lods
rcrl
xor
test
scas
lds
push
dec
lods
jecxz
add
and
xor
cmpsl
sub
inc
push
adc
test
cld
xchg
push
in
icebp
sbb
add
imul
loope
int
shlb
cmp
scas
test
fistpll
outsb
jns
and
sub
insb
jle
es
push
sbb
xor
push
mov
inc
ret
xor
dec
pop
int
pop
jl
mov
les
idivb
cmp
and
loopne
gs
push
xchg
out
jp
or
mov
mov
or
jecxz
xor
outsb
jb
test
call
std
mov
inc
xor
pop
cli
ja
add
lock
sbb
push
aaa
push
xchg
inc
push
mov
ja
xor
cmpb
cltd
add
cltd
in
les
cmp
icebp
sub
cwtl
roll
lea
adc
adc
std
lds
pop
and
dec
incb
xor
pop
sub
pop
xchg
or
rcrl
xor
or
push
cltd
jnp
sbb
dec
cmp
sub
test
call
scas
xchg
jl
push
jl
xchg
lahf
sbb
jnp
mov
or
gs
dec
rcr
inc
mov
out
sahf
sub
hlt
jo
mov
or
adc
fldt
inc
popa
mov
cmp
pushl
pushf
jmp
ljmp
ret
test
shr
pop
cmpsb
pop
outsb
jle
cld
stos
ds
ds
push
jle
ds
adc
sub
and
sbb
jl
dec
and
rolb
cltd
sarb
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
sbb
mov
adc
adc
cmp
xor
sbb
pop
push
into
in
jg
inc
sub
std
arpl
rolb
sarb
cltd
adc
cmp
add
lret
incb
in
adc
rorl
xor
pop
pusha
fcmovu
test
loop
cmp
outsb
fdivp
sub
jo
push
jle
xor
sbb
repz
repnz
test
stc
sbb
push
pop
xchg
lods
leave
int3
into
aam
xchg
dec
or
js
lcall
out
cmpb
or
cmc
leave
push
fimuls
stc
mov
dec
mov
mov
scas
adc
es
jb
or
icebp
adc
cli
mov
dec
in
mov
enter
mov
push
in
jp
roll
negl
pop
push
mov
and
or
and
and
mov
pop
es
stc
lock
out
jg
sbb
add
jl
pushf
and
xchg
xchg
dec
cli
mov
aad
dec
adc
sub
sbb
inc
mov
cli
icebp
add
movsb
out
orl
mov
inc
fs
cmp
push
testl
cmp
js
mov
cmp
mov
add
fbstp
push
sbb
stos
xlat
cltd
stos
inc
out
adc
pop
and
pushf
push
loop
cltd
push
insl
and
sbb
pop
push
mov
inc
and
mov
pop
fcoms
fsubp
imul
lods
pushf
nop
mov
fs
dec
int3
mov
sbb
lods
fildl
in
add
mov
ss
push
mov
and
divb
and
xor
and
mov
iret
ret
icebp
push
into
test
fucom
dec
pushl
js
mov
xchg
cs
loopne
int3
sbb
insb
aas
mov
fs
mov
and
sub
out
xchg
mov
jnp
fcom
inc
xor
es
or
out
and
subb
add
movsl
out
xor
lahf
dec
sub
jb
xchg
imul
push
inc
int
aam
rorl
subl
mov
add
push
pop
insl
xchg
push
sub
pop
and
push
sbb
adc
inc
sub
sbb
mov
scas
mov
push
pop
in
hlt
xchg
gs
inc
int3
xchg
and
mov
sahf
hlt
xor
mov
loope
das
inc
and
push
mov
xchg
mov
cmc
cmp
cmp
subl
and
inc
adc
add
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
ret
inc
xchg
js
jmp
adc
lcall
pop
or
mov
cmp
je
mov
xlat
inc
dec
xchg
push
dec
jb
out
jp
pop
inc
fcmovb
jnp
cmpsl
mov
outsb
xor
scas
repz
sbb
pop
mov
out
test
lret
mov
in
fisubrl
push
imul
pop
sbb
shrb
and
jns
sahf
xchg
repz
fbld
or
mov
rcll
arpl
or
jp
les
mov
loopne
mov
inc
xchg
xor
push
push
call
sbb
jbe
pushf
inc
leave
mov
je
jbe
mov
and
es
pop
fwait
mov
xchg
xor
xchg
jle
aad
sbb
xchg
shl
shr
out
xor
ja
xchg
pop
push
xchg
jmp
gs
mov
jae
inc
mov
xor
push
mov
cmpb
mov
popf
std
pop
scas
enter
xor
shrb
mov
jl
add
mov
aaa
orl
movsl
inc
mov
adc
xchg
jl
mov
and
xor
gs
pop
cmp
in
sbb
jg
and
jl
lds
mov
out
scas
jb
sub
int
jge
xchg
add
and
sbb
lret
mov
sbb
sbb
pushf
mov
mov
aas
fimull
enter
add
outsb
jno
aad
js
inc
pop
mov
cli
aad
add
ret
inc
add
mov
cmpsb
in
push
insb
js
aad
push
ds
push
jp
sub
push
mov
lea
int3
loope
imul
dec
jle
or
mov
inc
cmpsl
int
adc
arpl
adc
imul
sbb
leave
popf
or
inc
add
jle
xchg
push
jl
xchg
and
and
mov
lret
mov
xchg
push
xchg
pop
addb
sub
xor
jle
mov
or
sub
rorl
inc
pushf
or
mov
lcall
popa
or
addb
in
or
enter
stos
cmpl
je
or
cmpsb
repz
inc
jmp
ss
push
insl
pop
xchg
push
lods
cmp
sub
inc
push
data16
inc
aam
jbe
or
add
adc
add
movb
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
mov
adc
xchg
movlps
add
das
pop
ss
jnp
inc
dec
mov
loope
fbld
cmp
xor
imul
call
or
movsb
dec
lock
sbb
jp
jge
fcomp
test
mov
mov
push
nop
gs
pop
leave
sbb
inc
adc
pushl
jmp
cltd
aad
and
jmp
lds
pop
pop
xchg
decl
mov
scas
mov
pusha
push
sub
push
mov
clc
popf
sbb
jb
add
inc
ret
mov
leave
in
sub
lret
into
filds
adc
sbb
cmpsl
and
push
movsl
out
add
mov
dec
jne
mov
jne
push
data16
movb
inc
nop
int
cwtl
pop
setp
ja
sbb
fsub
adc
pop
mov
mov
add
inc
cwtl
mov
fwait
or
inc
lcall
out
test
test
push
icebp
sbb
pop
faddl
dec
iret
jno
lods
orb
and
stos
and
js
loopne
in
in
cmp
test
movsl
inc
mov
jne
inc
sbb
cmp
add
mov
leave
in
mov
insl
inc
push
mov
add
xor
mov
daa
xor
dec
rorl
dec
dec
push
inc
lahf
fnstenv
sbb
dec
mov
mov
mov
xchg
pop
cwtl
out
inc
pop
and
and
ja
loopne
enter
lods
xchg
adc
push
mov
andb
xor
jg
xchg
fdivp
dec
aam
sub
sahf
mov
scas
inc
adc
sti
mov
xchg
daa
notl
and
mov
or
scas
or
das
dec
in
rolb
jle
mov
cmp
jnp
lret
js
jb
dec
rcrb
mov
ds
dec
std
pop
js
mov
cmp
add
cwtl
mov
test
mov
xchg
mov
pop
push
dec
push
ljmp
and
gs
loope
xchg
jp
xchg
jne
mov
into
fmuls
movsb
pusha
xchg
sub
mov
iret
and
stos
sbb
mov
or
sbb
jl
jp
push
sub
inc
cmp
pop
cmpsb
jge
push
fnsave
in
mov
lds
push
push
movb
xor
xchg
cmpsl
mov
sub
and
rcr
push
fidivrs
adc
mov
jmp
xor
data16
outsl
rol
mov
adc
mov
imul
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
aam
loopne
inc
mov
mov
cmc
mov
dec
mov
cmp
adc
lds
push
shlb
shl
xlat
mov
in
mov
pop
scas
dec
dec
sub
aaa
adc
pop
cmpsb
call
inc
jl
jge
and
dec
mov
jl
mov
mov
in
pushf
ja
gs
movsl
iret
test
out
stos
and
addr16
pop
dec
adc
test
pop
dec
sbb
movsb
out
or
push
lea
ljmp
dec
mov
xor
test
mov
clc
jo
enter
mov
es
sbb
shll
or
jno
movsb
ret
ds
icebp
sub
jbe
jp
sbb
cs
popf
lret
fs
jns
rcrl
into
mov
or
sbb
mov
mov
push
jo
xchg
lcall
and
in
out
pop
pop
shlb
lds
pusha
jbe
pop
test
flds
and
mov
out
and
icebp
int3
popa
pop
mov
add
ss
push
and
push
and
test
cld
pop
sub
mov
jo
mov
push
data16
cmc
mov
cmpsl
adc
int
fiaddl
or
sahf
ljmp
xchg
push
push
pop
push
scas
push
pop
or
nop
inc
fimull
mov
dec
sub
loopne
loopne
xchg
ret
dec
xchg
or
dec
pop
dec
add
cli
inc
movsl
pop
out
sub
subb
in
es
mov
ret
inc
lods
sub
cmpsb
xchg
mov
cmp
pop
mov
lods
jl
loop
ja
outsl
stos
jle
inc
push
dec
inc
aas
pop
dec
mov
mov
mov
repnz
stos
int
cmp
mov
rcll
xor
data16
ret
shll
dec
add
mov
hlt
and
push
mov
mov
pop
xor
push
mov
out
xor
inc
loopne
arpl
push
sub
enter
roll
pop
mov
and
fucom
repz
add
clc
pop
fdivl
scas
test
xchg
incl
leave
mov
fs
pop
and
sbb
mov
popf
cmpsb
inc
pop
dec
mov
call
pop
outsb
cmp
inc
xchg
push
and
mov
pusha
gs
mov
ret
iret
add
movsl
outsb
pop
shl
ja
add
popa
push
add
and
jnp
xchg
in
lahf
push
in
push
aam
fidivrs
cwtl
out
adc
mov
paddusw
mov
dec
xor
xor
andl
jmp
sub
sbbl
pop
js
lods
fildl
mov
xchg
movlps
aaa
pushf
data16
push
mov
addr16
pop
add
jnp,pt
add
mov
ljmp
mov
out
mulb
xlat
loop
pop
xchg
adc
push
add
add
into
pop
push
xor
imul
inc
leave
je
mov
popa
inc
push
jne
inc
ljmp
or
in
xchg
push
mov
mov
mov
iret
dec
shll
sbb
sti
push
jle
inc
in
mov
jae
jl
and
mov
out
fwait
pop
subb
pop
dec
inc
in
test
ret
jns
pusha
scas
xchg
jne
arpl
hlt
iret
xchg
cmpsb
sub
cmpsb
shll
xchg
and
push
out
mov
dec
cmc
xchg
pop
dec
into
lahf
fcmove
movsb
aam
in
lea
inc
scas
dec
ljmp
das
jg
sbb
pushl
mov
add
push
push
clc
adc
mov
mov
rclb
cld
subb
fidivrs
test
xor
movsb
lock
in
std
mov
cmpsl
push
icebp
insb
add
add
ret
adc
imul
mov
in
nop
mov
push
push
fnstenv
push
pop
scas
ss
sar
lods
shll
cmp
jg
imul
push
xlat
mov
int3
ds
jg
fnclex
mov
sbb
pop
pop
pop
cmc
jmp
shrl
push
mov
and
es
jnp
icebp
imul
jnp
aam
xchg
or
pop
jbe
lret
lret
mov
or
cmp
push
jge
mov
sti
movsl
out
fldenv
xor
cltd
dec
test
pushf
fsts
mov
leave
inc
mov
int3
inc
cmp
push
mov
sbb
fwait
mov
and
sbb
sub
mov
outsl
xchg
insl
hlt
pushf
and
mov
jecxz
sti
ficomps
xchg
daa
int
mov
imul
int3
xchg
and
pop
movsb
sar
jbe
loop
aas
jle
xchg
arpl
xor
xchg
aaa
outsl
in
shlb
std
inc
mov
sub
sub
dec
enter
jno
mov
dec
mov
inc
sub
jns
mov
loop
and
cmpsl
mov
test
rcll
push
aas
dec
inc
mov
popf
sub
ljmp
nop
inc
subb
jmp
lods
fld
ret
pop
pop
sbb
pusha
std
dec
jbe
ss
lds
jae
xor
shr
addl
shl
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
push
not
cmc
cmp
pop
insb
and
xor
sub
sub
hlt
dec
inc
ljmp
xchg
lods
xor
xchg
sti
arpl
test
mov
mov
inc
fiadds
loopne
push
aas
xchg
cwtl
daa
push
sbb
jb
lds
outsb
mov
sub
scas
cmpsl
or
insb
jmp
stos
pop
mov
or
ds
mov
push
cmpsl
ds
dec
cmp
cld
jo
cwtl
enter
stos
mov
sub
fmull
inc
cld
jno
mov
aas
hlt
pop
fcomps
iret
jle
cwtl
or
cs
stos
shl
out
or
lahf
or
xchg
stos
cmp
jnp
mov
pop
ret
or
stos
cmp
mov
or
gs
cld
dec
mov
mov
or
xor
xchg
mov
jo
jl
xchg
dec
cli
mov
jns
push
xor
mov
mov
jne
inc
ror
push
fdivrs
imul
mov
mov
ljmp
cmpsb
and
mov
addr16
cs
movsb
inc
int
in
neg
test
shlb
test
imul
dec
dec
push
sub
lock
in
out
sbbl
imul
cld
cmp
arpl
pop
xchg
cmp
aaa
dec
sub
in
rorb
stos
cmp
jae
es
mov
je
sti
test
xchg
mov
fdivr
imul
test
in
cmpsb
shrl
lahf
orl
jecxz
cmpsl
pop
sbb
cwtl
insl
insb
daa
mov
xchg
and
xor
clc
dec
push
subl
popa
dec
lcall
mulps
sar
mov
ja
xor
out
fstl
int3
call
push
push
sub
dec
sbb
cmp
add
stc
adc
bound
dec
add
sarl
rorl
ret
mov
dec
pop
push
fs
pop
stos
adc
pop
and
mov
movsl
outsl
stc
sub
and
sbb
pop
fadd
vandnps
mov
push
add
int
sbb
pop
or
mov
mov
push
dec
out
mov
das
ds
arpl
mov
lock
cmovo
aad
mov
push
jno
jo
inc
mov
addr16
addr16
inc
clc
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
or
adc
xchg
movlps
adc
jnp
sbb
sbb
ljmp
outsb
dec
repz
jb
sub
arpl
ljmp
pop
daa
mov
and
adcl
pop
lock
loopne
adc
pop
ds
mov
pop
xchg
inc
fwait
mov
stos
lret
outsb
movsl
in
xchg
xor
push
inc
sbb
jns
ret
jb
lea
adc
imul
mov
xchg
jbe
or
or
test
ds
inc
divb
dec
push
lahf
and
ja
cld
cs
popf
and
in
sub
and
stc
jp
xor
xor
inc
mov
lock
xchg
add
jmp
stos
push
enter
inc
push
in
shlb
ss
sbb
xor
pop
inc
loop
sub
cwtl
jmp
mov
pop
sbb
wbinvd
notb
xchg
or
and
mov
sbbb
sub
pop
jle
fldt
push
or
out
into
ja
fdivrs
fwait
sbb
bound
cltd
pop
cmp
int
mov
mov
shlb
jo
lods
fisttpll
inc
mov
nop
mov
in
fisubrl
and
in
cltd
or
jecxz
inc
push
dec
adc
adc
lret
icebp
dec
shll
dec
xor
add
xor
sar
jle
int3
lahf
sub
loop
outsl
jae
inc
mov
js,pn
mov
xchg
mov
sub
daa
inc
pop
sub
test
cmp
into
sbb
mov
fmuls
xor
loope
aas
push
lds
fwait
mov
adc
adc
xchg
roll
jb
das
pop
movsl
lock
jg
mov
imull
bts
popa
jp
nop
and
cmpsb
mov
cmp
jge
ja
je
daa
and
sbb
ret
mov
push
dec
or
xchg
fcomps
dec
addr16
sub
adc
aas
jbe
mov
xchg
mov
aaa
inc
icebp
xor
sbb
xor
mov
jae
lret
popa
pop
jnp
xchg
orl
scas
adc
pop
adc
pop
aam
and
jbe
push
shll
jnp
daa
adc
movsb
xchg
cmc
icebp
mov
dec
dec
dec
mov
bound
cld
mov
jns
mov
nop
iret
mov
and
sub
mov
inc
ds
mov
das
rclb
loope
test
sub
scas
xchg
or
adc
or
dec
sbb
pusha
xchg
jno
push
add
loopne
dec
clc
xor
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
repz
jle
leave
adc
xchg
movlps
pop
sub
mov
int
add
pop
adc
jle
and
mov
inc
hlt
sbb
pop
sbb
lods
in
push
fidivs
mov
fnstenv
jmp
xor
lods
rol
cmpl
sub
out
sbb
mov
arpl
int3
mov
aas
or
fs
jmp
mov
xchg
sti
lahf
push
outsl
and
sub
dec
push
shr
les
js
fidivrl
cmc
push
leave
rol
sub
sbb
cmpsl
and
add
mov
loopne
jno
xchg
adc
xchg
mov
lcall
jo
lret
sarb
sub
out
mov
sub
dec
fstps
xchg
aaa
push
sbb
daa
popl
xchg
sarb
sbb
jecxz
int3
mov
shlb
adc
out
std
dec
call
mov
add
pop
xlat
mov
and
inc
pop
add
xchg
push
lds
js
mov
test
or
sbb
loopne
hlt
jmp
jne
ror
addl
pop
out
push
into
sbb
sarl
sub
out
fisubrs
jae
imul
daa
push
mov
cmc
inc
adc
aas
test
hlt
insl
rorl
add
fistpll
repnz
cmp
sub
cmp
scas
fidivrs
inc
pop
push
ss
out
inc
add
mov
daa
ljmp
rcl
shlb
mov
lods
idivl
jp
in
es
pop
cli
addr16
and
and
hlt
mov
iret
sub
or
in
lahf
mov
roll
inc
insb
cli
mov
cmp
gs
movsl
repnz
lock
mov
xchg
ror
movsb
incb
lock
adc
hlt
daa
mov
push
or
add
sub
jle
xor
add
aam
inc
inc
jmp
and
jecxz
popa
inc
xchg
adc
lods
mov
inc
loope
jne
xor
inc
sbb
sub
xor
repnz
addb
frstor
mov
ljmp
fistpll
push
nop
int3
cmp
mov
pop
cmp
icebp
xlat
ja
jbe
mov
adc
cmp
jecxz
push
cmp
lods
daa
std
cmc
pop
shrb
jae
pop
imulb
mov
test
insb
push
lahf
sbb
adc
and
cmp
dec
dec
decl
and
pop
push
dec
xchg
out
mov
js
rorl
loop
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
mov
inc
and
movups
out
inc
or
sub
insb
sti
inc
out
fistpll
pop
ja
pop
sub
gs
adc
sarl
cmp
lahf
cmp
and
and
mov
inc
pop
ss
sub
test
xchg
pop
in
insl
jne
pop
popa
add
sarl
test
mov
push
dec
xchg
push
adc
xchg
or
sbb
push
xor
in
adc
mov
xor
inc
test
push
or
aam
sbbb
add
shlb
ficoml
fwait
sbb
iret
pop
ja
mov
mov
lret
cltd
xchg
in
push
jb
sub
xor
xchg
jl
xchg
inc
adcb
sbb
adc
xchg
dec
push
sub
std
pusha
call
flds
mov
jmp
add
push
xlat
sbb
xor
inc
pop
inc
out
ss
ljmp
cmpsb
xor
mov
xor
or
xchg
mov
int
imul
sub
nop
insb
addb
cmp
or
mov
in
insb
js
andl
in
faddp
jb
test
mov
dec
inc
ja
outsl
popf
idivb
dec
mov
jnp
mov
adc
icebp
test
stc
mov
mov
inc
xor
nop
add
xchg
filds
gs
jbe
adc
movsl
pop
and
icebp
cltd
fwait
xor
mov
mov
push
hlt
outsl
arpl
roll
add
add
sub
sub
dec
xor
mov
test
sbb
and
loop
jp
int
dec
add
push
pop
into
and
jne
imul
adc
test
outsl
or
mov
rcll
sub
movsb
inc
xchg
jo
negl
stos
mov
adc
add
rcl
leave
mov
hlt
vmovupd
push
mov
lock
in
mov
imul
and
dec
xlat
testb
add
shlb
pushf
xchg
ljmp
pop
bound
cmp
les
lods
and
decl
fldt
inc
sahf
lods
push
xchg
sub
dec
adc
sti
and
in
dec
gs
mov
cmp
push
scas
mov
cs
aaa
push
mov
xor
sbb
mov
lock
aam
fidivrs
sbb
enter
push
pushl
shl
call
jmp
imul
cltd
sbb
imul
data16
mov
adc
loop
repnz
mov
jb
inc
scas
adc
ss
sbbb
inc
pushf
ljmp
or
sbb
jmp
dec
das
jg
sbb
js
mov
test
leave
ret
and
pop
sahf
repz
ljmp
nop
push
mov
push
sub
std
aad
mov
loopne
loopne
pusha
dec
mov
and
out
and
inc
inc
dec
push
cmpsl
adc
pop
push
and
ds
fnstsw
or
pop
mov
ss
push
out
out
test
xor
add
mov
dec
xchg
fidivrs
jle,pn
ret
mov
das
push
mov
pop
ret
ret
lds
cmpsb
mov
fisubs
xchg
and
push
xchg
dec
scas
cld
popa
fwait
imul
es
xor
clc
nop
jmp
sbb
xor
and
icebp
in
into
and
in
jecxz
push
or
or
cmp
shll
adc
or
imul
xchg
divl
xchg
repz
jle
add
in
ret
push
xor
add
aas
add
mov
addr16
jns
loope
nop
mov
jo
in
aaa
push
sub
fwait
sub
dec
sahf
mov
dec
leave
sbb
lock
movsl
popa
addr16
test
bound
mov
aaa
repz
sbb
mov
ds
imull
sti
lods
jg
test
inc
dec
cmp
lods
dec
adc
fnstsw
std
loopne
test
mov
fisubl
xor
lcall
pusha
jmp
cmp
inc
repnz
and
insb
jecxz
push
rep
loop
shll
outsl
push
mov
movsb
lods
mov
mov
mov
mov
jp
xchg
mov
rclb
movsb
hlt
push
cmc
lds
test
clc
int
cmpsb
fsts
cltd
and
pop
dec
mov
imul
cmp
sbb
lods
mov
int
inc
inc
cmc
xor
lock
push
in
dec
hlt
insb
mov
adc
cmpsb
dec
and
mulb
sub
inc
dec
dec
sbb
lds
lock
aam
and
push
xlat
add
imul
inc
fcmovb
inc
cmpsb
loop
push
pop
shlb
xor
xchg
mov
mov
inc
dec
loop
lea
push
sbbl
lods
mov
xor
ja
jne
add
rorb
ret
xchg
outsb
jae
out
ljmp
or
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
mov
pop
pop
mov
lods
popa
out
stos
cwtl
mov
adc
lea
scas
sbb
ja
inc
in
sub
insl
hlt
cmp
mov
ret
faddl
push
arpl
mov
cmc
or
outsl
dec
lock
jecxz
mov
or
test
std
push
rorb
xor
jae
add
mov
mov
sub
mov
fildl
or
int
das
cltd
jbe
int
into
jg
mov
dec
inc
jmp
out
loopne
lods
add
add
jle
dec
mov
cmp
cs
push
and
cwtl
cltd
add
ficompl
popa
xchg
js
int
mov
push
sbb
outsl
sbb
adc
add
data16
shll
adc
jmp
or
sub
and
push
cmp
out
stc
mov
sbb
fcom
out
sub
enter
add
into
ret
jmp
sbb
cmp
daa
pop
cmp
aaa
or
mov
xor
mov
fsubrs
scas
int3
das
xor
insb
jle
mov
dec
out
stc
or
insb
pop
cltd
xorl
lods
orl
mov
divl
add
int3
sub
push
mov
fistl
xchg
shrl
mov
mov
out
mov
bound
cmpsb
sbb
push
movsb
sti
and
mov
inc
add
lods
lret
push
jne
call
jno
mov
adc
out
xchg
mov
push
mov
jns
add
sahf
mov
cs
jl
pop
or
xor
mov
mov
cmp
sahf
inc
ror
or
mov
rcl
mov
lret
test
xor
aad
dec
mov
pusha
icebp
outsl
pop
test
add
cmpsl
cwtl
sahf
jo
enter
sub
out
dec
xchg
mov
gs
andb
sbb
push
mov
inc
push
es
sahf
es
loopne
mov
movsb
imul
adc
push
sub
jmp
movsb
or
pop
cmp
xchg
pop
and
push
mov
bound
out
bound
mov
lret
dec
lret
sbb
sub
mov
mov
sub
stc
push
xor
cltd
in
test
sbb
divb
sbbb
push
rol
mov
stos
rol
fwait
sub
int
mulb
cmpsl
call
out
jo
aas
and
mov
jne
dec
aad
fwait
rcrb
popa
cmpsl
aas
rcll
and
mov
push
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
insb
sbb
adc
sub
xor
dec
jo
inc
xor
test
xchg
in
cmpsb
mov
das
rcrl
cmp
jp
movsb
xchg
mov
icebp
push
mov
mov
repz
mov
out
or
push
hlt
push
and
push
jae
pop
pop
mov
push
adc
or
xor
xchg
dec
dec
popa
jle
cmp
cmp
adc
ds
and
sahf
cmc
bound
lods
jp
pop
sahf
in
cs
out
test
je
aaa
mov
mov
mov
aas
inc
jbe
xor
clc
outsl
ret
add
aas
lods
adc
mov
cmpsb
mov
inc
pop
sar
cmp
je
adc
gs
lds
xchg
dec
pop
frstpm(287
das
mov
call
mov
xchg
mov
fldenv
hlt
sub
lods
call
dec
shrl
cmp
add
loopne
fidivl
or
jl
push
loopne
mov
mov
xchg
sbb
sbb
jae
popf
rorl
sub
in
push
push
mov
inc
mov
adc
test
adc
scas
inc
xchg
in
scas
stos
out
xlat
push
mov
and
dec
push
cli
pop
pop
push
test
cmp
push
cltd
sub
xchg
popf
test
adc
sbb
nop
and
int
bound
idivl
cld
push
sub
scas
push
outsl
xor
add
cmp
push
rolb
jae
xor
pop
or
adc
cmp
push
push
fstpl
outsb
sbb
mov
test
sub
in
push
jb
bound
aam
jno
out
pop
push
ljmp
mov
pop
popf
fimull
mov
mov
cli
cltd
jecxz
cmp
push
cs
sahf
jmp
loopne
hlt
ds
aas
jo
out
idivb
aaa
jnp
xor
dec
pop
or
or
add
mov
enter
sub
mov
cmp
cmpsb
pop
dec
or
outsb
and
insl
shrl
js
or
mov
inc
popf
in
fimull
std
aam
pushf
aad
test
ds
adcl
in
or
aad
push
pop
imul
sub
daa
mov
xchg
mov
cmpsb
push
cmpsl
cld
lods
in
xor
mov
enter
mov
ret
sti
or
pop
fldt
loopne
mov
or
push
cmpsb
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
xor
stos
xchg
lods
adc
xchg
movlps
jo
mov
inc
in
xchg
xlat
loop
sbb
cmp
xchg
imul
lds
mov
fsubs
in
cmpsl
jecxz
mov
xor
sbb
out
xchg
pop
inc
add
jecxz
jb
pop
xchg
dec
arpl
mov
adc
mov
daa
adc
stc
pop
and
pop
xchg
xchg
add
adc
aaa
fwait
xor
sbb
dec
stc
xchg
or
push
dec
add
aaa
cmpsl
pop
sub
mov
cmp
dec
pop
and
dec
sbb
call
jp
cltd
pushf
lock
sbb
shrl
lcall
ds
mov
shrl
cmp
movsl
pop
mov
dec
dec
dec
fisttpl
add
or
call
gs
in
dec
cmp
jnp
add
or
jmp
in
or
xor
into
inc
lret
cmp
jl
and
rolb
jb
mov
pop
push
adc
mov
push
mov
aad
movsl
sub
dec
or
sub
icebp
std
js
mov
iret
xchg
out
test
rcrl
jne
jmp
popa
inc
and
xchg
rcll
cli
insb
aam
jge
movq
xor
jecxz
mov
outsb
loope
sub
aad
hlt
sar
pop
mov
and
xor
xor
out
xlat
sahf
fsubrl
addr16
push
jno
and
mov
push
pop
std
cmp
sbb
mov
lret
daa
leave
adc
and
jnp
outsl
cmp
and
inc
pop
out
pop
push
fs
cmp
shlb
or
mov
cmc
mov
add
or
movsl
mov
lods
mov
je
insl
sub
aaa
sbb
mov
sahf
xor
xchg
cmp
push
faddp
inc
imul
test
pusha
in
pop
rorl
and
and
stos
mov
aas
mov
inc
cli
mov
je
push
push
cmp
icebp
rorb
jg
xchg
add
inc
hlt
fimuls
add
push
xor
or
dec
divb
and
out
dec
lea
aad
jecxz
movsl
push
js
sahf
adc
xchg
mov
push
pop
iret
cld
jns
into
xor
imul
std
insb
bound
gs
ret
je
dec
lds
cli
out
inc
mov
shrb
in
add
lret
dec
ret
sbb
mov
mov
repz
cwtl
mov
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
push
mov
mov
movsb
psubsb
cwtl
adc
in
ss
loope
pop
or
push
mov
jns
nop
cmp
cwtl
pop
mov
ret
sti
mov
ja
pushf
sub
sbb
sahf
jg
ds
ljmp
test
pusha
loopne
add
lock
icebp
pop
mov
jle
in
lods
mov
add
in
clc
mov
jbe
or
pop
out
mov
daa
in
mov
and
or
loop
sti
push
dec
std
bound
loope
mov
cwtl
repz
jle
mov
in
push
ds
mov
test
push
pop
or
shlb
cld
cmpsl
xchg
dec
mov
aam
inc
xchg
shlw
fists
cmp
bsr
int
lcall
daa
out
push
jnp
dec
notl
push
xchg
data16
adc
adc
and
in
xorl
lods
rcl
fimuls
sbbl
jnp
scas
jge
jmp
and
cmpsl
push
movsb
xor
add
fstp
dec
and
dec
fwait
and
rclb
sbb
adc
into
aad
into
mov
test
cmp
inc
lds
stos
fprem1
addb
sbb
push
les
xlat
sub
sub
rcrl
sub
jae
fwait
sub
sub
mov
lahf
xchg
js
pop
pop
sub
in
xchg
mov
sbb
pop
stos
or
aad
bound
push
aas
stc
dec
in
mov
insb
int
nop
mov
jp
xlat
push
mov
cmp
lds
adc
js
movsl
adcb
stc
cmpsl
mov
add
inc
lcall
and
stos
insb
push
mov
lds
push
dec
outsb
lea
fsubrl
xchg
mov
push
sti
lock
out
lret
mov
adcl
cs
gs
xchg
xor
inc
sub
sahf
js
psubd
popa
cmp
cmp
aas
adc
in
jne
lea
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
xor
adc
jbe
loop
inc
cmp
sar
fs
stos
xor
insb
dec
ljmp
pop
sub
mov
xchg
mov
pop
test
and
sbb
mov
lods
cmpl
xor
idivb
sahf
xchg
nop
mov
inc
mov
inc
ret
xchg
inc
adc
xchg
jbe
fmull
pushf
pop
jb
inc
aad
in
fnstcw
xor
cmp
or
jmp
inc
cmpsl
push
push
aaa
jge
cmp
cmp
mov
loop
mov
or
dec
mov
add
das
inc
inc
lret
lcall
std
fs
cli
dec
lods
xlat
xchg
xchg
scas
mov
imul
mov
mov
fcom
in
add
loop
mov
repz
nop
cld
xchg
mov
mov
xchg
in
cmp
add
mov
sbb
shrl
pop
xchg
xchg
mov
movsb
xlat
inc
pop
roll
loopne
dec
add
cltd
adc
mov
repz
roll
insl
sub
sub
stos
dec
or
inc
or
mov
cmp
loop
pop
into
xchg
pop
dec
and
sub
jae
popa
add
inc
xor
adc
hlt
sahf
stos
loopne
leave
in
lret
mov
sti
push
push
aad
movsl
data16
test
dec
xchg
jmp
or
out
sub
xor
aas
inc
dec
mov
cltd
xor
lds
lea
jg
in
sahf
jae
mov
loopne
or
movsl
jne
fs
aad
imul
je
mov
xchg
mov
das
jae
insb
shlb
cmpl
ja
or
outsl
xlat
cmpsl
cmp
cmp
fdivs
pop
sbb
popl
mov
rcrb
pop
mov
sub
sub
fs
mov
call
repz
xor
sahf
lret
cwtl
sub
cs
shrb
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
test
pop
fwait
adc
mov
pop
inc
xor
inc
mov
mov
call
rcl
test
popf
enter
enter
push
adc
fnstcw
mov
sbb
jns
rolb
mov
dec
sbb
xchg
sbb
hlt
fwait
stos
dec
dec
pop
or
out
mov
inc
xchg
and
inc
repz
pop
cwtl
mov
lods
mov
repnz
test
nop
pop
mov
mov
jae
stos
mov
pusha
add
xchg
push
xor
mov
cltd
sub
jmp
out
mov
xchg
xor
inc
push
jns
imul
cmpsb
sbb
js
loopne
inc
out
mov
pop
lods
rcl
test
sub
xchg
push
adc
outsl
inc
lcall
xchg
xlat
inc
leave
adc
pushf
xchg
lods
push
jl
or
sub
dec
inc
notl
inc
cltd
enter
lods
mov
pop
mov
jne
scas
jmp
fnstsw
int3
lret
outsb
mov
push
aas
fstl
enter
sti
notl
fmulp
inc
test
xchg
dec
mov
add
insl
gs
jle
std
add
test
pop
ja
arpl
cmp
cmp
mov
mov
insb
ret
inc
lods
lods
cltd
adc
lret
cld
popl
push
test
das
outsb
sub
orl
or
rorb
or
inc
ljmp
cmp
jecxz
dec
movsb
dec
mov
mov
aas
sub
ficoms
add
fcom
into
scas
sti
push
mov
loopne
in
pop
in
outsl
push
dec
push
adc
push
leave
pop
iret
fcomps
dec
pop
inc
int3
inc
push
adc
mov
flds
test
ficoml
xlat
or
cmpsl
incl
sar
push
hlt
jb
jecxz
xchg
cmp
aad
icebp
call
je
je
lret
les
add
stos
jl
adc
add
insl
daa
lret
fsubs
aam
pushl
pop
sti
sahf
bound
xadd
scas
adc
fwait
das
inc
pop
stos
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
inc
stos
negl
adc
add
sbb
mov
cld
cltd
fildll
inc
pushf
pop
jecxz
mov
call
mov
and
fbld
xorl
fisubrs
ja
xchg
nop
push
lock
pop
stos
ja
cmpb
adc
cmp
mov
sbb
cmpsb
sub
fistpll
call
add
mull
mov
jp
insl
adc
and
mov
xchg
push
pop
xor
data16
mov
sbb
push
inc
jl
push
jne
or
xor
sbb
testb
data16
mov
in
jmp
xor
in
sbb
jmp
adc
pop
push
pop
adcl
nop
addr16
mov
mov
jo
mov
loopne
mov
sbb
subl
pop
loop
mov
es
lods
or
shl
sbb
cltd
adc
sub
sarb
popa
adc
outsl
adc
enter
mov
jns
repz
mov
mov
pop
test
xchg
hlt
pop
push
ds
outsl
pop
jne
jl,pt
sbb
lock
sti
shlb
sbb
pop
xor
rolb
enter
dec
popa
arpl
les
imul
xorb
repnz
xchg
clc
insl
push
test
data16
sarb
daa
mov
ret
in
pop
insl
xchg
sbb
xchg
aas
push
and
mov
cmp
leave
aas
cwtl
xchg
add
test
call
pop
pop
sbb
in
rolb
sbb
test
jb
popf
jb
cltd
jnp
mov
pushf
push
ss
xor
fwait
mov
lret
jb
sub
insl
mov
xor
orl
mov
push
cmp
imul
cwtl
shlb
or
push
dec
jnp
add
mov
push
test
xchg
scas
xor
jmp
jl
cmp
pop
pop
mov
jmp
jbe
popa
lret
mov
jmp
ds
push
push
sbb
sub
test
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
fsubrl
adc
pop
adc
adc
nop
xchg
fcoml
pop
fcoml
stos
sti
scas
adc
jmp
inc
mov
inc
in
aas
scas
ljmp
jne
lds
lods
aaa
adc
pop
or
xchg
ret
test
sbb
mov
mov
sahf
xor
jno
es
sbb
je
sbb
addr16
sti
add
mov
inc
sub
push
loop
and
jae
lods
sub
and
mov
pop
std
aam
rcl
es
std
sbb
clc
jo
stc
mov
out
outsl
xchg
lret
push
add
out
sub
xlat
add
lret
sub
jnp
in
aas
inc
dec
rolb
cmp
arpl
jno
sti
mov
and
cmpsb
add
push
and
popf
fldcw
insl
pop
sbb
sbb
dec
mov
imul
sbb
fsubl
out
ds
js
aas
repz
push
fwait
imul
icebp
addr16
sub
cmc
pop
notl
push
adc
insl
ret
int
pushf
fidivrl
sub
bound
lret
addl
daa
xlat
lret
les
adc
std
insl
add
lcall
inc
notl
addr16
or
dec
mov
mov
lahf
js,pt
adc
jp
mov
add
test
xchg
cmp
or
les
or
cmp
push
mov
es
fldt
jge
in
test
arpl
pop
fimuls
xchg
mov
or
pop
rorb
push
add
pop
or
cmp
cmpsb
test
or
push
mov
push
fdiv
cmp
and
scas
fisubrs
cmp
test
dec
jns
and
adc
das
test
outsl
inc
lret
incl
in
js
ret
testl
fisubs
fistps
movsl
add
add
and
jmp
sbb
aas
xor
adc
lret
icebp
and
xchg
mov
pop
pop
sbb
mov
pop
jp
ds
mov
xor
mov
mov
add
jo
or
adc
fbld
fs
lods
jne
sub
push
es
lea
stc
jecxz
inc
sub
xchg
popa
xor
sbb
push
in
rorb
sbbb
cmp
pop
cld
ret
mov
loopne
pop
dec
cmpsl
aam
je
mov
hlt
sbbb
xor
pop
mov
imul
in
push
jle
cs
mov
inc
out
mov
mov
xchg
cmp
adc
sub
mov
out
dec
ds
cmpsb
xchg
fstpt
lock
pop
ret
jbe
test
add
pop
sbb
scas
push
add
gs
loopne
xchg
and
call
jbe
pop
adc
pop
mov
leave
in
cli
mov
das
divl
sti
ret
flds
mov
insb
movsb
and
repnz
popa
out
hlt
mov
std
push
push
loop
jmp
mov
sbb
movl
mov
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
call
adc
pop
adc
adc
xorb
sub
nop
ja
cld
add
mov
mov
mov
cmpsl
roll
scas
dec
out
daa
add
stos
or
xor
lea
ss
mov
jge
pop
negl
or
movsb
jns
mov
addb
loope
mov
and
inc
in
imul
aas
int3
mov
push
movsb
inc
faddl
inc
test
aad
ljmp
repz
scas
ds
movsl
push
loope
push
dec
inc
jecxz
movsb
inc
rclb
sbb
ds
pop
fs
add
and
push
dec
push
jno
adc
adc
mov
xchg
and
jge
out
add
sub
lret
dec
ja
enter
leave
sbb
cmp
int
push
jnp
cmpsl
mov
mov
test
out
dec
dec
cmp
ret
rolb
jge
fldt
sbb
sub
arpl
call
fwait
mov
sbb
scas
ljmp
mov
push
insl
mov
fisubl
sahf
je
cmpsl
test
inc
inc
adc
roll
adc
push
movsb
push
loop
fdivr
add
jp
das
or
dec
pop
mov
add
stos
dec
cltd
mov
mov
cltd
arpl
popf
insl
movsb
xchg
sub
aad
imul
out
xchg
sub
mov
and
out
mov
iret
or
sbbl
arpl
cmp
rcrl
xor
scas
pop
repnz
cmc
dec
rcll
dec
push
inc
insb
jne
xor
scas
les
sbb
pop
out
jle
jbe
push
call
mov
pop
cs
sub
cmp
cmp
push
inc
xchg
les
cmp
daa
push
mov
pushf
xchg
mov
out
sahf
fs
jns
jg
cmp
mov
jnp
lock
jns
pop
ds
pop
mov
or
add
addr16
jp
inc
push
and
jae
adc
jno
push
lcall
arpl
hlt
dec
dec
fstpl
and
sbbl
hlt
aaa
pop
pop
jo
call
ja
dec
leave
jle
pop
outsb
aad
mov
jg
mov
sbb
sbb
ret
pop
push
pop
pop
sbb
lea
or
sub
test
and
push
es
dec
inc
pop
pop
xlat
pop
popl
rclb
int
jbe
pop
testl
test
stos
imul
sbb
test
mov
adc
aam
fdivrs
mov
ljmp
mov
pushf
mul
fs
scas
mov
sub
xor
push
xchg
pusha
fs
cmpsl
stos
in
xchg
mov
jae
or
pop
and
pop
lret
add
jns
stc
shrl
sti
jne
lock
lcall
mov
mov
cld
aaa
mov
stc
mov
pop
stos
or
jle
dec
mov
lea
mov
fldcw
cmp
mov
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
dec
cmpb
adc
adc
add
adc
sbb
sti
and
dec
jae
in
mov
adc
or
mov
xlat
ja
addr16
popl
add
and
rorl
in
mov
jno
sahf
add
dec
rorl
push
inc
sbb
mov
pop
mov
inc
leave
pop
divb
inc
test
adc
icebp
jle
cwtl
js
test
dec
lods
test
test
js
pop
or
sbb
test
add
add
out
in
js
xchg
clc
lcall
mov
cmp
stos
add
in
ret
mov
aaa
push
out
in
xchg
mov
out
xor
fidivl
int3
xchg
movsl
jle
or
adc
int
aam
insl
ss
add
aad
mov
sbb
gs
mov
sbb
ret
push
insl
aaa
pop
add
push
and
push
jo
xor
das
inc
inc
popf
loopne
inc
push
shrb
adc
call
adc
mov
imulb
cltd
bound
imul
lods
insl
cmc
in
gs
ds
into
bound
pop
pop
sbb
data16
shlb
fwait
testb
add
or
mov
jge
xchg
push
sbb
ffreep
out
pop
mov
cmpsl
test
adc
dec
call
mov
add
test
push
icebp
dec
inc
jo
shlb
scas
cwtl
mov
xchg
push
in
test
ffreep
add
and
imul
pop
or
mov
cmp
pop
mov
or
orb
push
push
jmp
mov
in
jno
cltd
hlt
iret
out
jmp
lock
in
cwtl
shrb
popf
mov
mov
out
call
mov
cmp
or
push
movq
rcll
cld
mov
push
lret
dec
stc
fmul
mov
dec
xchg
xor
ret
call
mov
inc
pop
mov
repz
aad
dec
imul
out
aas
jne
scas
out
jae
es
rorb
push
sbb
push
mov
lcall
fsubl
push
bound
push
sub
cmpsl
mov
sti
inc
jnp
mov
into
dec
xchg
push
or
xor
mov
xchg
lret
push
inc
rorb
xchg
mov
mov
dec
push
call
mov
cmpsb
inc
mov
addr16
sar
ja
cmc
jp,pn
ss
clc
jmp
sub
and
pop
leave
clc
sahf
shll
dec
pop
sub
loopne
mov
in
xor
cmp
mov
xchg
popa
xchg
dec
cmp
setns
arpl
mov
lods
adc
dec
fcompl
imull
dec
aam
inc
dec
scas
mov
dec
insb
or
pop
sti
lahf
fmuls
xor
mov
jns
xchg
je
mov
imul
rorb
and
shlb
daa
jmp
mov
and
add
mov
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
mov
pop
adc
adc
xchg
cld
ljmp
sub
inc
mov
stos
fwait
daa
stc
xlat
loop
sbb
pop
lea
cmp
outsb
jae,pn
sbb
ja
push
sahf
add
shlb
popa
call
and
out
sbbl
dec
xchg
gs
sahf
enter
and
ficoml
out
xchg
repz
loopne
dec
add
or
fcompl
insb
leave
adc
push
rolb
pop
cmp
dec
sbb
jne
mov
mov
sbb
pop
jge
push
in
popa
daa
icebp
sbb
push
xchg
in
imulb
testl
fnstcw
out
pusha
addr16
lcall
jbe
add
inc
pop
ret
inc
rclb
sub
pusha
lods
jns
sbb
push
hlt
add
push
mov
loopne
bound
testb
mov
fstl
fwait
push
adc
cmp
je
or
cmp
fistps
repnz
push
mov
mov
mov
scas
push
inc
cli
idivb
adc
jle
ds
and
imul
pop
rolb
icebp
pop
fiaddl
pop
cmc
enter
push
fsubl
pushf
cmc
pop
loop
jnp
mov
mov
dec
adc
sbb
mov
cs
sbb
outsl
cld
mov
fcomps
rorb
fidivs
add
inc
or
repz
mov
sbb
lahf
xchg
and
or
pusha
fiadds
xor
xlat
clc
mov
aad
ljmp
movsb
mov
dec
into
mov
push
jmp
pushf
pop
sub
sub
arpl
bound
rolb
jb
fisttpl
loop
sub
das
xchg
or
mov
daa
das
cmp
enter
test
sbb
enter
pusha
lods
insb
hlt
adc
call
lret
lcall
sub
movsl
insb
xchg
adc
out
adc
add
cmc
xor
mov
inc
nop
test
mov
xchg
daa
mov
mov
movsl
and
mov
dec
adc
sbb
inc
orb
add
test
cld
ljmp
pop
jns
add
jno
test
push
popa
adc
imul
and
scas
into
into
mul
loop
movsl
lds
adc
arpl
dec
inc
xchg
ss
inc
jg
data16
xor
mov
mov
int
fisubrl
push
inc
adcl
fists
in
push
adc
in
xchg
cs
mov
mov
jbe
rorl
cmp
jno
roll
jne
in
inc
pop
xchg
repz
dec
mov
outsb
dec
push
xchg
popa
mov
int
in
pop
aam
mov
mov
cli
or
sbb
call
fwait
movsl
add
mov
adc
sub
jl
and
push
pop
imul
das
repnz
das
pop
bound
mov
xchg
mov
daa
inc
arpl
repz
mov
loope
pop
clc
lods
test
cmp
ficoml
std
loopne
movsl
mov
sub
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
inc
stos
mov
adc
adc
pop
sbb
adc
in
dec
xlat
mov
add
adc
gs
mov
sar
ss
insl
sti
and
xor
xor
fimull
pop
pusha
out
stos
arpl
add
cmpsb
lahf
lret
imull
pop
or
push
push
shrb
fldt
cwtl
mov
fldcw
push
dec
jae
cmp
pop
mov
aaa
test
lcall
xchg
dec
pop
shll
sub
mov
arpl
lock
sub
setns
adc
icebp
jmp
jbe
lods
push
cmp
lcall
jge
fs
jl
mov
jbe
notb
fisttpll
push
into
xlat
enter
cmp
sti
enter
out
mov
rcrl
pushf
mov
and
xchg
cmp
push
pop
fidivs
pop
outsl
mov
mov
rolb
mov
add
pop
mov
pushf
insb
outsl
push
xor
pop
les
xchg
and
dec
int3
lret
sub
scas
es
mov
sub
push
xor
xchg
xor
out
mov
sub
push
push
xchg
call
sbb
jecxz
into
pop
insl
addr16
js
rcrl
and
data16
mov
and
loope
inc
mov
add
xchg
mov
xor
ljmp
pop
pop
cmc
popa
sub
mov
ret
aad
sub
ds
pop
scas
test
sub
minps
in
cld
movsl
sbb
cmp
cmp
sbbl
adc
test
shl
sub
in
out
out
mov
add
or
repnz
ss
mov
jno
and
mov
mov
mov
loopne
lcall
js
imull
daa
lea
mov
inc
mov
ficompl
inc
xchg
idivb
push
mov
mov
into
in
inc
imul
xchg
loop
cmp
jbe
sti
pop
add
pop
inc
push
add
cmp
xchg
imull
mov
cmp
mov
repnz
movsl
mov
out
pop
jle
or
popf
mov
jg
pop
push
add
test
cmc
or
pop
push
sbb
sbb
repz
sbbl
loope
mov
sub
sub
mov
lret
stc
jp
repz
pop
and
lahf
js
jle
in
cwtl
fiadds
test
cmc
gs
cmpl
lock
fsubrp
test
repnz
insl
scas
movsb
sub
movsb
xchg
aaa
jp
lods
jns
xor
push
mov
adc
sahf
pop
out
jo
dec
push
ror
cli
cmp
out
out
xchg
rorb
lret
data16
jg
jae
push
mov
lcall
scas
fbld
dec
sub
mov
adc
rolb
mov
das
xor
xor
jg
add
mov
pop
repz
and
loopne
sub
mov
push
push
mov
sbb
add
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
dec
lods
sub
outsl
adc
pop
adc
adc
jp
out
add
mov
inc
cmp
push
and
clc
ljmp
xchg
gs
inc
dec
pop
push
orl
mov
adc
clc
adc
xchg
mov
loop
adc
loopnew
cmp
dec
je
loop
out
pop
fmuls
rorl
popf
in
enter
dec
daa
and
adcl
repz
stos
enter
ret
daa
push
or
mov
ror
xor
addl
int
movsb
or
insl
adc
fistl
sub
xchg
test
xor
test
sub
jno
jo
sbb
insl
lea
stos
jg
mov
sub
sti
pushf
leave
imul
gs
mov
jmp
and
setp
jo
and
ja
and
imul
mov
sbb
xor
in
rcl
sub
cltd
pop
aad
fistpl
shl
or
test
dec
cwtl
std
pop
pop
cmp
inc
out
das
pop
xlat
insl
sub
test
add
lods
sar
mov
cld
mov
add
arpl
iret
mov
inc
xchg
push
fadd
or
xor
sub
idivl
test
and
fs
fscale
xchg
push
xor
cli
push
xchg
data16
cmpsl
cs
dec
or
roll
loopne
dec
out
ret
mov
mov
pop
add
xor
push
cmp
pop
pop
sub
out
xchg
push
sub
lret
xchg
lret
mov
test
lock
xlat
decl
leave
leave
xchg
repz
cmpsl
outsb
pop
cmp
adc
inc
dec
rorb
mov
lret
and
pop
cmpb
out
adcb
das
out
pop
fisubrl
mov
repnz
mov
or
iret
and
jl
pop
mov
in
shl
insl
flds
rcrl
insb
insb
xor
xor
js
enter
fisubrl
cmpb
sub
sub
cmpsl
mov
in
in
aad
and
dec
jbe
dec
ljmp
push
cmp
bswap
cmpsb
inc
inc
push
xlat
sbb
negl
divb
icebp
push
add
xchg
inc
lods
and
mov
jmp
aas
mov
std
lock
push
xchg
inc
pusha
mov
push
inc
cli
add
outsl
inc
negl
push
xchg
mov
adc
xchg
push
pushf
mov
add
imul
sbb
sbb
mov
jmp
movb
lea
pop
sub
test
xor
xchg
gs
icebp
shll
pmovmskb
inc
add
scas
mov
insl
mov
cld
jmp
jo
in
fistpll
filds
xchg
mov
sbb
imul
lret
push
repz
pop
sti
aad
push
mov
mov
mov
cmp
aad
mov
ret
adc
cltd
int
and
adc
imul
inc
loop
jne
cwtl
lahf
jle
clc
xchg
rclb
and
cli
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
cwtl
movsb
pop
test
adc
dec
adc
push
ljmp
lret
jns
insb
cs
and
push
pop
repz
sbb
sti
das
push
inc
fsubrl
push
stos
push
movsb
mov
jge
jnp
cli
jno
test
and
in
mov
jp
mov
pop
mov
lods
lods
mov
das
popa
int3
mov
jg
pop
inc
pop
lea
mov
add
mov
popl
xchg
sbb
in
mov
and
mov
mov
dec
addr16
lret
mov
push
movd
cmp
sub
test
out
inc
enter
loope
add
fistl
scas
pop
repnz
adc
andl
push
mov
sub
das
mov
adc
xchg
pop
or
sbb
sub
fs
iret
xor
loop
orb
ja
adc
cmpsl
or
je
ficoms
addr16
das
icebp
dec
fsubrp
pop
and
dec
fisubrs
jae
pop
les
jno
adc
bsr
shl
aam
mov
mov
pop
jp
or
mov
or
lahf
or
dec
adc
mov
nop
xor
xchg
push
pop
shlb
pushf
rol
incl
jbe
es
fstpt
mov
pop
push
mov
cltd
shlb
std
fsub
loop
sarb
pop
jle
jbe
gs
adc
ret
into
pop
clc
mov
pushf
sub
sub
adc
lods
jne
inc
jmp
sti
adc
les
jmp
leave
or
or
pop
push
das
push
addl
cmpsl
rcll
cmp
cmp
je
pop
stos
or
pushf
mov
aad
mov
sbb
xor
dec
je
jo
cmp
test
out
push
mov
jg
jecxz
cmp
inc
mov
inc
mov
fwait
test
mov
mov
lcall
jl
stos
push
mov
mov
mov
clc
jp
fs
jne
mov
movsl
pop
jne
loope
loopne
jp
dec
aam
les
fildl
mov
push
aad
push
fs
enter
daa
rorb
sbb
sbb
in
jae
push
xor
test
mov
or
lret
dec
jbe
scas
push
sarl
hlt
cltd
sub
xchg
inc
ret
sub
sub
mov
pop
xchg
stc
or
mov
pop
cmpsl
fwait
mov
outsb
mov
add
cmpsb
push
inc
mov
jp
cmp
dec
idivb
sub
adc
push
loopne
inc
imul
mov
andl
add
scas
lcall
dec
aas
nop
int3
pusha
fs
sbb
mov
in
xchg
and
lret
push
shl
fwait
shrb
inc
or
aad
int
push
push
clc
aas
int
mov
js
repz
mov
dec
dec
int3
push
and
fidivrs
push
int3
push
call
push
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
stc
add
adc
adc
pop
lret
and
cmp
pop
mov
test
sarl
pop
push
in
cmp
fwait
call
jo
shl
imul
pop
jg
fs
cmp
pop
inc
xor
test
test
or
cmp
ficomps
movsl
insb
xor
aam
pop
dec
mov
out
inc
mov
add
jnp
lods
test
sbb
dec
or
mov
inc
add
lods
pop
std
data16
adc
pop
fsubl
scas
push
add
mov
or
xchg
pop
cmp
lret
dec
lahf
clc
push
andl
push
dec
mov
push
jb
ret
hlt
pop
jb
push
data16
pop
dec
cmp
mov
fistpl
sub
jg
popf
xchg
jg
mov
sub
jle
or
lret
dec
jmp
mov
out
xchg
push
push
ljmp
and
out
shlb
push
aam
clc
movb
push
mov
scas
xchg
xor
add
xor
jno
or
pusha
xor
sar
test
clc
rorl
add
inc
adc
pop
jge
push
daa
fldenv
jl
shlb
adc
icebp
mov
nop
xor
mov
mov
int
imul
imul
push
popf
cmp
rclb
and
mov
push
cmp
dec
filds
jmp
push
pop
adc
mov
sub
imul
jno
and
mov
movsb
jecxz
mov
fimull
int3
popa
lds
xlat
and
shlb
pushfw
adc
adc
push
cmpb
xor
push
jne
xchg
push
addr16
lock
clc
or
add
xchg
fsubrs
add
adc
fdivl
inc
push
cmpsb
pop
cwtl
cmp
sbb
mov
jmp
aam
sti
or
sub
cmp
mov
lods
insb
sbb
dec
mov
pop
orb
inc
add
cld
jne
in
dec
cmpsb
adc
mov
mov
imul
outsb
dec
adc
aas
cld
dec
sbb
movzwl
mov
cmp
push
adc
jbe
std
enter
out
out
xor
in
adcb
inc
dec
and
out
mov
xchg
fiadds
push
mov
jmp
cld
aaa
push
mov
inc
in
orb
sub
jge
scas
cmpsl
push
fs
jmp
movsl
push
sahf
mov
aad
std
dec
jge
jge
cwtl
jnp
sti
sbb
jae
mov
daa
and
mov
scas
adc
fistl
out
jns
dec
pop
pusha
inc
push
mov
xor
xor
mov
jg
clc
ret
addr16
push
mov
pop
shll
and
pop
or
push
xchg
fdivr
push
mov
xorl
xor
mov
mov
cli
mov
ficompl
jne
cld
dec
fbstp
inc
adc
jmp
imul
and
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
ja
js
pop
adc
pop
adc
adc
lea
loope
and
mov
fmulp
lods
inc
xor
and
fnstsw
jo
out
adc
or
cwtl
fcoms
xor
sub
mov
fadds
outsb
stos
adc
jbe
fimull
jno
xchg
jb
mulb
jmp
aaa
mov
int
or
std
mov
repnz
and
sbb
xchg
inc
jp
bound
js
shrl
test
push
xchg
dec
test
push
or
cmp
fs
ficompl
in
mov
into
jbe
inc
mov
jno
test
adc
fdiv
xlat
fiadds
xor
or
mov
imul
rcl
xor
popa
sbb
dec
lcall
outsl
sbb
into
movsl
dec
enter
jg
mov
cmp
jp
inc
and
add
and
std
daa
fsubs
dec
and
inc
xlat
leave
dec
dec
xchg
mov
cmp
and
adc
shll
loopne
push
mov
jno
and
pop
gs
test
adc
repnz
push
stos
in
xor
jl
jnp
xchg
adc
pushf
insb
loopne
add
inc
mov
lods
inc
stos
or
push
jne
dec
xor
repnz
or
bound
loop
mov
ljmp
pop
sarl
fwait
pushf
fsts
add
pop
xor
push
ja
sbb
xchg
incl
sbb
xchg
test
push
aam
jmp
repz
sub
inc
orl
mov
into
or
mov
mov
mov
stos
add
sbb
stc
loopne
call
repnz
jne
push
cmp
push
and
xchg
cvttps2pi
xchg
fs
add
inc
add
ss
es
arpl
bts
mov
mov
aaa
popf
lds
inc
fbstp
insl
jb
pushf
stos
sti
popl
pop
push
adc
adc
xchg
insl
fs
int
jl
add
movsb
dec
and
pop
pushf
data16
mov
add
sbb
pop
cmp
mov
sbb
cli
cmc
or
jb
outsl
jmp
mov
add
ss
negl
lahf
es
mov
push
sub
test
adcl
out
fsub
movsl
xor
daa
out
repnz
imul
test
dec
loop
addr16
sbb
xchg
pop
adc
xor
jg
shrb
nop
pop
sub
cmpb
ljmp
push
pop
jg
xchg
xor
inc
or
mov
fwait
enter
add
fadds
cmp
repnz
fidivrl
xchg
inc
insb
aam
mov
fimuls
cwtl
and
stos
push
testb
and
ds
and
mov
js
insb
out
lock
outsb
mov
xchg
sbb
sub
mov
push
repz
loopne
fists
push
jmp
jne
pcmpgtb
sbb
aaa
data16
int
xor
pop
adc
adc
sti
sahf
sbb
lods
call
add
rolb
adc
mov
pop
cltd
sbb
inc
stos
sbb
jbe
aam
imul
jp
lods
xchg
xchg
dec
dec
neg
push
sbb
sbbl
jp
call
movsb
xorb
movsl
rcrl
jecxz
xchg
aaa
js
call
pop
into
bound
in
inc
xchg
pop
movsb
aaa
inc
pop
adc
or
dec
fwait
out
fsts
mov
mov
mov
into
lods
outsb
js
add
jnp
pop
cmp
or
js
mov
in
outsb
pop
and
mov
or
jp
push
xchg
push
jmp
cmp
cltd
out
ret
enter
add
stc
dec
mov
ss
in
or
jg
int
jb
push
add
push
mov
jmp
sbb
enter
cmp
inc
and
das
sub
int3
fmuls
addb
xor
sbb
add
subl
movsb
std
push
mov
movsl
push
outsb
dec
adc
addr16
mov
mov
xacquire
mov
push
mov
mov
adc
outsl
enter
into
sub
mov
in
ds
or
cli
mov
inc
sbb
daa
jge
sbb
addr16
inc
inc
fdivs
inc
lret
clc
cmpsl
and
inc
lcall
outsl
xchg
xchg
xchg
push
mov
dec
jge
inc
xchg
test
lahf
mov
xchg
sub
mull
aam
mov
into
sub
loopne
mov
sar
xor
std
dec
and
mov
dec
jnp
loope
loopne
outsb
sub
sar
das
xlat
push
cld
fs
xchg
xchg
inc
outsb
int
repnz
xchg
cmovns
fisttpll
out
or
mov
lock
ret
repnz
add
dec
dec
xchg
and
iret
out
rorl
in
add
and
pusha
jb
es
out
dec
inc
lock
xchg
adc
sub
in
test
in
or
xor
mov
into
jno
xor
mov
shlb
repnz
cltd
mov
stos
scas
lret
aad
cmp
andl
fadd
sub
sbb
inc
imul
dec
pop
ja
mov
inc
shrl
xor
mov
jp
push
fwait
adc
sahf
repz
sti
mov
inc
inc
pop
cmpsl
cwtl
and
daa
stc
lret
lods
add
push
dec
pop
add
mov
pop
cld
int
lods
mov
xlat
dec
in
xchg
adc
in
js
add
out
xchg
mov
jnp
mov
fwait
xchg
enter
daa
cmp
sbbl
fs
pop
ja
fimuls
cmp
cli
push
es
pop
lods
shll
and
imul
pop
adc
jne
xchg
push
fidivrl
pop
ror
clc
adc
mov
jne
jge
das
sarb
inc
insl
xchg
mov
es
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
cmpsb
js
dec
adc
pop
adc
adc
out
loope
cmp
adcl
pop
fnstenv
mov
cmp
ljmp
lahf
aad
sbb
xchg
and
xchg
scas
ljmp
sub
bswap
imul
cmp
inc
inc
test
sti
dec
adc
jo
sbb
xchg
jecxz
push
pop
shl
sbb
push
enter
cltd
sbb
add
call
adc
xchg
mov
push
test
mov
pushl
sub
pop
xchg
mov
mov
mov
jno
xlat
or
fcoms
jne
ljmp
fs
sbb
or
mov
and
dec
addr16
cmp
cmc
jb
mov
scas
jnp
lods
push
sub
ror
mov
mov
cmp
and
jmp
xchg
pop
inc
mov
mov
xlat
adc
js
cs
push
xlat
push
xchg
test
outsl
jle
mov
push
test
inc
lret
icebp
shll
lret
mov
cld
test
inc
ja
aad
jbe
cmp
call
sub
jge
hlt
jb
and
repz
mov
repz
xchg
pop
mov
jno
push
mov
mov
leave
lahf
adc
jp
dec
mov
shl
xlat
dec
xorl
aas
mov
test
sbb
dec
xor
mov
cmp
push
call
cs
pop
jo
and
andb
push
jp
test
fildl
fsubrl
push
cli
fdivrl
mov
xchg
adc
jge
mov
adc
jmp
in
scas
pusha
jl
js
jbe
enter
outsb
shll
add
mov
jne
roll
incb
cmpsl
mov
push
rcll
jo
and
mov
js
das
mov
push
sub
adc
pop
ret
cmp
daa
add
adcl
out
and
jl
outsb
push
jbe
stc
fmuls
cmp
cwtl
lock
scas
mov
shll
and
test
xchg
ror
cmp
sub
pop
inc
adc
hlt
outsl
mov
test
jne
or
pop
scas
insl
mov
inc
mov
imul
push
xor
xor
outsb
iret
jns
jecxz
pop
pop
sbb
insl
scas
sbb
shrb
adc
push
aaa
cmp
scas
shll
lea
lret
out
pop
dec
das
loopne
or
dec
lods
add
inc
mov
mov
fwait
mov
mov
and
pop
xchg
out
jnp
lock
lret
hlt
mov
xchg
xchg
jmp
xlat
inc
push
xchg
xchg
insb
enter
push
cmc
adc
add
fstps
cld
add
daa
pop
xchg
lods
push
popf
jecxz
lcall
sbb
clc
repnz
jbe
popf
adc
inc
inc
pop
jecxz
push
xchg
imull
aas
dec
cmp
xchg
adc
xchg
xchg
shlb
xor
dec
sbb
xor
scas
pop
mov
std
or
pop
jb
push
pop
and
inc
and
insl
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
movsb
js
inc
adc
pop
adc
adc
or
mov
aam
aad
inc
jne
sub
fcmovne
mov
out
jne
test
inc
add
or
test
lea
xchg
cs
imul
add
inc
jne
int
xchg
mov
push
icebp
push
pop
push
dec
push
mov
mov
dec
pop
movsb
cmpsl
call
inc
push
cmp
in
repz
lds
not
adc
or
mov
or
aam
mov
pusha
das
mov
and
and
mov
loop
pop
mov
mov
xor
mov
xor
lahf
jb
enter
cli
dec
mov
add
xchg
std
sbb
loop
adc
mov
data16
cmp
cltd
jmp
lea
xchg
andl
or
sub
fnsave
xchg
cmp
push
out
jb
in
mov
insl
jmp
fdivrs
push
and
fcmovnb
test
loop
out
test
mov
aaa
lods
inc
push
icebp
ficoml
xor
lock
cmp
add
xlat
in
shr
sub
popf
stc
addr16
fpatan
inc
mov
addb
cs
and
fidivrs
hlt
lods
add
dec
mov
aam
cmp
mov
mov
xchg
icebp
mov
ja
mov
or
sub
push
in
inc
mov
jae
mov
xor
lret
stos
mov
cs
inc
dec
push
adc
add
and
xchg
xchg
int
push
mov
cwtl
addb
push
addl
ret
sti
out
outsb
xchg
movsb
loopne
xchg
xchg
pop
xchg
or
sub
xchg
mov
xor
insl
xchg
sub
sbb
fadds
mov
nop
push
lock
xorl
sti
aas
and
xchg
decb
ja
cmp
push
jl
xor
rcll
inc
loop
push
imul
and
push
aad
les
sti
add
mov
or
sar
pop
popa
negl
push
popf
fxam
or
shlb
insb
clc
mov
js
cwtl
jecxz
sahf
xchg
inc
js
sub
lcall
mov
and
pop
pop
lds
int
fldt
pusha
sub
jne
sbb
std
push
fcomip
aam
mov
mov
push
cld
jae
or
mov
fmull
inc
nop
jno
cs
bound
push
adc
ja
mov
insl
into
jnp
dec
cmp
inc
pop
jge,pt
in
add
cld
sub
mov
sti
mov
sbb
pop
js
add
enter
divl
in
mov
in
mov
and
xor
inc
or
or
jecxz
lcall
lods
outsb
dec
xchg
mov
jne
xor
jmp
jbe
lods
out
test
push
inc
in
test
adc
negl
icebp
pop
das
mov
iret
add
rorb
cmc
loop
test
mov
add
or
pop
ret
sahf
push
sbb
movzbl
movzbl
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
push
xor
mov
pop
adc
adc
pop
dec
ljmp
inc
inc
scas
ljmp
xchg
scas
sbb
lods
push
push
rcll
adc
inc
inc
adc
out
in
mov
shll
int
sub
inc
ss
add
lcall
outsb
icebp
icebp
mov
jge
mov
jge
cmp
jo
or
stos
push
and
cmp
pop
cli
push
outsl
in
aaa
decl
pop
out
mov
xchg
mov
out
pop
mov
insl
int
cmp
inc
insb
add
sbb
filds
leave
mov
jp
jecxz
cmp
jle
adc
into
push
out
jl
jmp
out
and
das
pushf
cmp
sti
fldcw
dec
lcall
dec
sarb
pop
aam
in
leave
mov
add
es
iret
call
mov
test
and
adc
sub
or
push
fs
xchg
sti
pop
imul
into
outsb
shll
or
test
cltd
sbb
enter
sub
mov
push
inc
sub
sbb
jp
inc
sub
push
call
fs
ffreep
add
test
mov
mov
addl
sbb
rcll
cmpb
in
xchg
or
popa
mov
xchg
or
std
sbb
out
cmpb
mov
fiadds
cmovb
jecxz
in
lea
shlb
cmp
and
xlat
lret
sub
or
push
iret
mov
clc
add
lods
pop
and
movsb
jmp
pop
fcomps
scas
repnz
mov
xchg
add
jo
pop
std
inc
adc
sub
iret
xor
sbb
lods
adc
cmp
jmp
dec
out
repz
mov
push
ja
scas
cmc
pop
je
push
xor
inc
stos
js
and
mov
js
xor
xchg
xchg
dec
cmp
cmp
push
gs
xchg
add
es
jo
dec
gs
mov
or
push
jbe
loopne
test
xchg
movsl
int
inc
jmp
xchg
jne
cmp
sub
dec
jmp
cmp
mov
cmpsb
push
aam
test
fistps
loopne
cmc
outsb
push
inc
jne
fwait
cwtl
in
jmp
or
or
or
insb
or
cmp
roll
lahf
sbbb
cs
pushf
loopne
mov
push
pop
bound
or
les
out
pop
sbb
sub
mov
in
mov
sahf
jbe
sbb
xor
rcr
sub
push
pop
mov
jo
inc
inc
in
inc
movsl
cmp
jbe
test
ja
mov
inc
sbb
in
je
in
jle
loop
jbe
nop
dec
xchg
divps
pushf
orl
das
cli
inc
xchg
xchg
outsl
mov
adc
repz
leave
incl
push
or
addr16
jbe
adc
rcr
sub
sub
dec
mov
rorb
gs
cli
sarl
rorb
lea
sbb
popa
xchg
pop
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
out
mov
mov
pop
xor
ja
push
addb
adc
fisubrl
addr16
lcall
daa
pusha
cwtl
mov
fwait
and
mov
repz
mov
pop
mov
pop
arpl
out
fs
cs
inc
jecxz
jecxz
mov
nop
dec
lret
sub
lods
repnz
imul
sub
pop
sbb
fmuls
cmp
or
cwtl
and
adc
dec
xchg
mov
sub
aam
push
push
xchg
hlt
inc
test
xchg
scas
clc
inc
cmp
and
iret
jns
ja
mov
imul
movsl
push
insb
cmp
or
lods
ss
mov
pushf
mov
cmc
or
mov
in
mov
mov
ja
xchg
shlb
mov
push
jmp
stc
and
in
xlat
lods
stc
outsl
nop
jbe
cmp
test
lds
inc
xchg
out
push
sbb
sbb
lds
hlt
shll
and
pop
js
nop
aaa
pop
jo
leave
mov
push
pusha
push
add
aas
sbb
jp
scas
in
adc
mov
sub
and
imul
iret
adc
mov
dec
lret
xor
jb
xchg
mov
mov
push
xor
lret
cmp
test
nop
lahf
leave
mull
mov
fstpl
sbb
xchg
or
movsb
mov
jl
popf
mov
in
xchg
lret
mov
fcompl
lods
shl
cmp
cmp
mov
ljmp
sbb
mov
cmp
into
push
mov
xor
dec
jo
pusha
stos
shlb
push
fwait
cmp
lret
movsl
cmp
push
add
sub
mov
and
mov
jno
or
or
aad
fs
jmp
push
inc
push
mov
jge
fsubs
sub
lcall
xor
fcmove
pop
out
dec
dec
sbb
pop
test
sub
add
xchg
loopne
mov
pusha
dec
lods
cmp
sahf
insl
fcoms
sub
adc
outsl
iret
and
mov
movsl
push
mov
push
adc
js
cld
xchg
iret
jbe
test
mov
mov
sbb
or
mov
push
sbb
jg
jmp
adc
push
repnz
cmp
adc
xor
xchg
mov
inc
sub
pop
repnz
out
call
fdivl
or
aaa
into
cs
and
js
cmp
ja
xchg
aaa
cltd
out
push
sub
pop
inc
les
inc
xor
ret
or
dec
xchg
sub
lock
or
cmc
imul
inc
fsub
lar
mov
call
mov
in
lahf
test
push
cmpsb
cld
mov
sub
inc
pop
and
shll
jecxz
ret
and
test
xor
mov
and
or
mov
in
add
sti
ja
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
mov
into
mov
inc
test
cmpsb
andl
enter
pop
cmovl
data16
int3
mov
mov
dec
fwait
inc
mov
jae
push
mov
inc
ja
lods
xchg
iret
scas
ret
sbb
out
fs
stos
add
lds
sbb
stos
dec
jmp
in
dec
cld
movsb
fs
pop
call
lods
ds
adc
hlt
xchg
ljmp
shrb
nop
insl
push
cmp
mov
mov
cs
mov
stos
pop
dec
pop
sub
pop
sti
xor
sbb
mov
or
dec
shl
push
ja
pop
cmp
mov
fwait
movsl
divb
mov
mov
es
sbb
ret
cmovg
jns
ret
sub
into
mov
leave
test
test
test
sbb
sahf
jle
sti
fcmovnbe
es
fs
push
adc
and
lods
pop
pop
mov
jp
sbb
ss
in
inc
shlb
mov
shrb
cmc
push
icebp
pop
js
xchg
mov
ret
fwait
push
push
mov
mov
pop
mov
cmp
js
pop
cmp
or
jmp
dec
xchg
test
mov
lret
inc
enter
mov
rorl
rorb
cmpsl
cmp
xor
pop
xor
push
xchg
leave
addb
repz
aam
leave
ss
imul
dec
sti
fidivrs
loopne
aad
loopne
pop
ss
addr16
pusha
pushf
mov
insb
popf
sbbl
add
add
and
mov
add
fstpt
cmpsb
nop
ds
mov
decb
loope
push
pop
fs
mov
cmp
pusha
pop
mov
add
paddusw
inc
loopne
subl
insb
mov
xor
fwait
popa
adc
xchg
add
jg
clc
dec
mov
ds
add
cmp
je
and
dec
adc
in
pop
pop
xchg
fdivr
out
jnp
dec
lods
outsl
decb
cwtl
mov
jg
mov
push
ret
stc
out
fcompl
dec
cmp
test
fs
popa
hlt
outsl
scas
jo
daa
sbb
movsb
fcmovnu
jp
sub
and
int
sbb
jb
mov
adc
and
lcall
lock
iret
call
xchg
mov
cmp
nop
ret
pushf
sub
inc
out
push
cmc
popf
xor
push
out
mov
or
jp
push
nop
push
lcall
sti
shlb
lods
stc
add
mov
int3
stc
cld
test
sub
mov
gs
sbb
fwait
out
sbbl
jmp
mov
inc
dec
adc
mov
add
jne
jb
negb
sar
or
lods
test
mov
lahf
jb
stos
ret
push
sbb
inc
dec
pusha
or
mov
inc
loop
idivb
lcall
pop
mov
mov
lea
jae
lds
es
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
mov
cmc
stos
aad
adc
pop
adc
adc
scas
sbb
cmp
and
mov
mov
out
adc
jecxz
or
adc
mov
cli
outsb
push
rcrl
stos
int
imul
pop
fisubrl
loop
iret
xchg
inc
inc
dec
pop
push
dec
or
pushf
imul
jb
inc
xchg
test
icebp
stos
lcall
mov
xchg
pop
cmp
adc
or
scas
stos
adc
hlt
jecxz
lods
jnp
xchg
movsb
pop
sbb
iret
rorl
or
cmp
sbb
lret
sbb
lds
sub
inc
xchg
xchg
xchg
jmp
push
xchg
sbbl
sbbb
lea
insl
int3
push
add
inc
adc
fdivrl
or
inc
xlat
fs
mov
shll
jne
icebp
sbb
aas
xchg
mov
add
mov
call
xchg
out
pop
mov
xchg
sub
test
jnp
adc
inc
pop
les
fwait
xchg
mov
addb
push
mov
inc
shll
out
xchg
testb
mov
shrl
sub
inc
out
inc
cwtl
adc
push
pop
cmp
aam
push
inc
jb
xchg
insb
mov
js
loopne
lods
push
add
cltd
cmc
out
fst
scas
cmp
out
int
lret
stos
int3
adc
mov
loop
mov
sti
outsl
sub
in
dec
je
mov
jb
ss
stos
push
daa
xorb
dec
and
or
enter
pop
add
xchg
push
lcall
mov
adc
inc
dec
sbb
or
inc
lds
icebp
loope
cs
push
js
gs
push
ds
ljmp
rorb
xor
and
adc
das
fstpl
xchg
sbb
sub
adc
dec
stos
jmp
jmp
inc
test
lock
mov
pop
dec
sub
jecxz
stos
push
mov
or
sbb
adc
roll
pop
inc
mov
adc
push
cs
imul
scas
fs
rol
daa
inc
test
inc
ret
fstpl
adc
jbe
lcall
out
push
mov
push
lret
push
lods
cmpsb
je
dec
push
mov
adc
in
cltd
and
xlat
dec
nop
jp
xlat
xchg
or
leave
and
inc
jns
and
mov
sarl
sbb
mov
mov
cmpsb
ja
pop
sub
jbe
sbb
insb
cmp
jne
adc
pop
mov
xor
in
sbb
js
push
and
imul
mov
pop
roll
insl
loopne
jne
arpl
fistl
xchg
xchg
xor
jmp
xor
mov
shlb
mov
xchg
adc
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
fsubr
mov
adc
movlps
dec
xchg
jp
fcomps
push
fmul
sbb
js
jae
push
xchg
lret
in
mov
enter
or
mov
aas
adc
mov
or
mov
in
js
rcll
fmul
in
aas
sub
and
adc
fisubrl
sub
inc
pushf
fcmovu
mov
pop
imul
mov
or
mov
fdivrs
icebp
mov
sub
pop
out
mov
faddl
pop
push
jbe
sub
mov
jge
dec
jp
fdivl
xlat
mov
dec
mov
pop
push
ret
lods
dec
je
dec
in
and
pop
pop
mov
sbb
xor
jne
push
hlt
clc
push
pop
inc
mov
cmpsl
adc
add
aaa
mov
xor
cwtl
mov
sbb
addl
js
push
and
sub
sbb
repnz
sahf
add
neg
add
loopne
jno
addr16
xchg
mov
adc
bound
dec
cmpsl
popf
dec
ret
out
lods
popf
mov
jmp
push
xchg
mov
loopne
mov
mov
mov
push
cmc
testb
and
stc
xor
cmpsb
das
das
call
arpl
mov
cmc
mov
fwait
or
or
lock
inc
fbstp
push
std
jnp
push
cld
push
lods
int3
sub
ss
bound
xorl
daa
pop
aaa
push
insl
or
int3
sbb
insl
outsb
cld
and
xchg
loope
cmp
xor
push
es
dec
stos
push
divb
inc
lock
scas
aam
insl
cmp
es
aad
mov
fcomi
fidivrs
sub
ja
mov
xor
loop
movsl
xchg
call
push
mov
in
sti
xchg
mov
call
push
std
dec
cmp
sbb
fnop
outsl
and
cmp
faddl
dec
dec
push
jno
xchg
es
dec
or
scas
int3
mov
pop
mov
ficoms
sbb
jmp
jb
dec
adc
jb
xchg
cmp
and
adc
or
out
sbb
nop
fbld
pop
cli
add
or
test
xchg
inc
stos
jns
add
sbb
mov
cmp
repz
mov
xchg
popf
aas
mov
cmp
stos
out
jl
test
test
orb
and
lahf
fldpi
in
insl
dec
mov
lods
stc
xor
mov
jbe
les
movsl
pop
data16
push
in
leave
lock
jp
dec
push
mov
adc
sbb
push
sahf
loopnew
add
cmp
adc
rcrl
and
ficompl
movsl
mov
pop
nop
jge
dec
and
xchg
lods
cmc
add
mov
das
pusha
push
sbb
dec
out
aam
ss
aad
pop
cmp
mov
bnd
adc
xor
ja
setae
dec
xchg
jne
jmp
sbb
out
push
je
and
mov
call
or
jae
sub
in
add
dec
sbb
in
cmp
sub
scas
mov
sarb
push
int
push
push
mov
and
and
pushf
scas
mov
xchg
push
sbb
ret
cli
in
cmp
hlt
push
imul
adc
outsb
lret
cmc
jp
xor
or
and
jge
mov
mov
lcall
daa
ds
push
in
nop
jb
movsl
addr16
pop
mov
lea
mov
adc
leave
push
sbb
mov
test
and
shrb
ljmp
or
dec
xor
xchg
leave
mov
out
push
test
or
xchg
push
ficompl
ret
or
mov
orb
inc
xor
lcall
inc
fwait
mov
mov
and
ss
pop
mov
sub
or
mov
out
subl
addr16
sub
sar
mov
daa
je
adc
push
add
cmp
or
push
cmpl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
bound
adc
int3
movlps
xor
xlat
filds
mov
add
mov
mov
and
xchg
push
jnp
jne
push
pop
add
or
sub
xor
lds
pop
int
sub
cltd
loope
jno
bound
jne
push
aas
jnp
mov
push
leave
ffree
xchg
sub
or
pop
es
push
push
lahf
jmp
xchg
xchg
cltd
add
jne
xchg
test
aas
xlat
push
xor
je
rolb
stos
sub
mov
xchg
push
mov
inc
sbb
sbb
loope
in
xor
fwait
js
int3
pop
ds
inc
out
mov
xor
lds
js
add
xlat
fcompl
inc
clc
sbb
movsl
cmpsb
sbb
or
repnz
jbe
xchg
test
je
and
xchg
mov
mov
insl
loope
setp
push
out
lods
loope
push
cs
ds
jg
and
ret
in
sbb
in
ret
repnz
and
cmc
and
incl
or
out
clc
xor
repnz
inc
enter
xor
lahf
adc
popf
je
sbbl
in
movsb
in
lret
pop
loop
adcl
js
add
jle,pn
push
popf
cmc
mov
lea
pop
mov
xor
jbe
mov
or
push
jg
jge
mov
pop
or
movsl
scas
sarb
dec
or
mov
in
out
scas
ret
or
push
aad
in
mov
inc
xchg
aas
jbe
lahf
add
test
pop
aad
jge
insl
adc
lods
push
jb
lret
cli
int3
pop
xlat
mov
stc
and
and
lds
aad
sbb
inc
lds
in
cmp
xor
xlat
xchg
dec
push
into
sti
pusha
in
popa
arpl
mov
orl
data16
inc
inc
sub
xor
mov
sub
mov
mov
pop
pop
cmp
jne
ret
pop
out
sub
push
xchg
out
cwtl
movsb
loop
and
fisubrs
xchg
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
pop
xorl
lcall
and
enter
repz
inc
lods
testl
jae
shlb
or
outsb
sub
cltd
jo
mov
ret
push
loopne
inc
sbb
fcmovnb
push
add
in
xor
mulb
js
jne
pop
and
adc
dec
shrl
xchg
lock
test
shll
xchg
sbb
pop
in
movsb
out
gs
jne
push
mov
cmp
into
imul
shr
and
fidivs
rcll
loop,pn
stos
push
lds
hlt
jl
jmp
int
fs
push
inc
xchg
lea
aas
or
or
mov
jl
out
and
sbb
sbb
xchg
add
clc
mov
inc
jb
test
inc
jbe
push
popa
inc
rcrl
mov
sahf
xor
imul
and
sti
fs
pusha
add
xlat
pop
cltd
mov
test
xchg
sbb
in
test
stos
sbb
inc
mov
movsl
mov
sub
jecxz
fcomi
push
shll
mov
push
loopne
fdivrl
fmuls
push
fnstcw
push
xor
loope
add
jno
sub
stos
imul
popa
and
adc
mov
jno
and
push
fs
xor
loope
test
loop
ds
push
stc
sub
xchg
lods
mov
dec
outsb
inc
mov
repnz
or
mov
pop
or
pop
pop
push
jnp
jle
mov
cwtl
cwtl
cli
popa
xor
push
aaa
adc
mov
cmpl
ficoms
dec
mov
ret
xchg
mov
xor
sbb
data16
filds
sub
loopne
fidivl
fiadds
jbe
mov
xchg
aad
xor
test
loope
iret
sub
xchg
nop
mov
imul
cmp
adc
test
clc
das
add
movl
addl
jmp
pop
repz
cmp
pop
data16
pusha
js
sbb
adc
movlps
inc
mov
in
stos
xchg
out
add
or
inc
dec
shlb
cmp
testb
dec
inc
lea
inc
stos
lcall
lcall
cmp
jmp
arpl
jnp
mov
dec
mov
xor
in
xchg
es
movsb
test
fnsave
mov
sbb
xor
data16
mov
pop
xor
jg
jne
dec
mov
dec
ror
out
mov
xchg
or
cmpsb
cltd
femms
in
add
in
mov
xchg
iret
cmpsl
testb
add
mov
loope
test
cmp
out
xchg
shl
imul
push
repnz
push
mov
sti
xchg
push
jae
fimull
jmp
cmp
lds
jnp
push
fisubs
aaa
fsts
add
xchg
movsb
xchg
push
je
out
xchg
jne
dec
sub
mov
test
mov
mov
sbb
inc
mov
fidivrs
pop
hlt
push
cmpsb
cltd
sub
or
mov
lods
scas
jle,pn
adc
arpl
mov
imul
push
push
fs
imul
mov
jl
aaa
dec
int
les
daa
std
dec
popf
or
adc
cmp
and
push
int
cmp
pushf
in
xor
insb
cmp
int3
negb
enter
arpl
aas
aas
loopne
mov
cmp
xchg
inc
int3
jno
or
pop
mov
mov
push
dec
xchg
lock
out
sbb
lods
fistl
nop
enter
mov
dec
arpl
sar
xchg
stos
aaa
ror
mov
cmc
inc
nop
out
cmpsl
or
sbb
adcb
sub
xchg
popf
mov
pop
pop
cltd
inc
dec
es
cmp
pop
mov
or
xor
fldt
in
push
pop
jbe
adc
xlat
mov
mov
inc
adc
cmp
and
pop
pusha
xor
mov
loopne
or
cmpb
repnz
movsb
adc
dec
movl
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
out
push
adc
adc
jns
sub
addr16
sub
jns
and
jmp
sbb
fdiv
repz
mov
js
mov
insl
or
dec
mov
inc
mov
arpl
mov
cmp
xchg
inc
push
and
scas
push
sbb
inc
and
adc
lret
jmp
mov
pushf
outsl
loopne
ds
cs
adc
pop
mov
add
mov
cmpsb
icebp
stos
push
ja
dec
pop
jl
mov
sub
dec
mov
xchg
ja
cli
and
jg
mov
xor
or
or
rcl
sbb
add
insl
imul
ljmp
leave
rolb
jmp
es
outsl
xchg
fs
popf
repnz
imul
adc
cmpsl
push
mov
mov
xchg
inc
enter
xor
dec
xor
and
stos
lods
add
inc
pop
push
fadd
mov
add
adc
andb
dec
movsl
adc
cld
cltd
jmp
rcrl
xor
dec
ret
data16
mov
ret
rcl
cmp
mov
push
shrb
fdivrl
pop
insl
inc
lahf
dec
test
xchg
in
add
dec
sahf
cmpsb
sub
ja
aad
push
ret
insb
rcl
xchg
iret
jg
dec
cmp
inc
and
pushf
outsl
or
xchg
xchg
bound
into
inc
sub
mov
stc
hlt
cmp
fcom
xchg
mov
imul
ljmp
flds
push
out
jecxz
mov
inc
push
outsb
xor
or
repnz
push
fisttps
mov
mov
add
inc
inc
push
xchg
mov
pop
enter
push
push
out
incb
icebp
outsl
xchg
imul
mov
add
mov
push
jp
xchg
xchg
clc
mov
addl
or
add
mov
sbbl
or
movzwl
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
in
mov
int3
movlps
cwtl
pop
cwtl
loop
sbb
mov
ret
into
gs
pop
sar
adc
add
shrb
daa
shl
push
addr16
push
sub
mov
sbb
movsl
jno
add
gs
in
dec
out
pusha
aas
fnstsw
ss
sbb
aaa
repz
aad
mov
call
rcll
in
jg
add
lock
test
iret
movsb
fimuls
stos
pop
movsl
lods
push
xchg
add
stos
cmc
push
data16
loope
adc
inc
dec
scas
mov
lahf
inc
sbb
enter
mov
ret
cwtl
clc
push
push
dec
cs
xchg
inc
test
xchg
bound
wrmsr
lods
sub
dec
cmp
icebp
jno
inc
mov
adc
lods
repnz
sub
pop
out
testb
sbb
stos
out
fs
push
jmp
cmc
push
fistpl
popf
push
and
in
jg
push
or
mov
sbb
push
iret
jge
cli
mov
ss
jl
lea
call
into
and
and
je
push
cli
nop
jg
cmpsb
notb
movq
xchg
int
mov
fwait
inc
dec
pop
mov
push
orl
inc
jbe
jmp
mov
mov
mov
push
sub
shll
mov
test
fcoml
sbb
int
out
mov
pop
fiadds
push
int3
in
shll
adc
pop
xlat
cmp
outsb
imul
scas
inc
outsb
mov
scas
lds
ret
mov
push
lds
stos
cmp
inc
out
leave
ret
cwtl
sbb
and
rolb
fstl
out
push
pop
outsl
pop
xor
mov
dec
stos
movsb
inc
pop
nop
cmpsb
in
fstps
push
jle
repz
shll
sub
dec
pusha
addr16
sbb
sbb
pop
or
push
and
fdivs
lret
pop
in
mov
mov
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
mov
adc
movlps
lcall
test
sbb
mov
lcall
pop
cltd
and
inc
cmpsb
popa
sub
call
bound
cmc
pop
lret
jo
addr16
add
pop
pop
jmp
push
jle
sub
dec
push
adc
mov
push
enter
inc
inc
cmp
in
sbb
mov
inc
loope
xchg
xchg
fiadds
sub
xor
cltd
add
or
fldcw
loope
ljmp
in
mov
mov
mov
sub
les
ja
mov
mov
dec
jle
movsb
imul
test
xchg
ljmp
sub
inc
mov
add
fld
cmpsb
jp
dec
lock
jle
movsb
ficoml
mov
ret
xor
inc
out
and
xor
add
mov
std
mov
inc
outsb
and
cltd
sbb
adc
adc
dec
or
outsb
idiv
inc
pop
xchg
add
repz
xchg
or
cmc
repnz
test
sub
jmp
cmp
mov
jg
dec
mov
mov
test
out
lds
les
sbb
fwait
aas
mov
stos
ret
jno
insl
inc
dec
es
xor
scas
ffreep
cmp
jge
xchg
cmc
ljmp
mov
jo
lock
push
ficoms
fstpt
call
pop
sub
je,pt
push
mov
flds
add
scas
insb
jge
mov
fsubs
cltd
mov
pushf
push
sub
pop
push
cmp
enter
jle
add
cmp
loope
stos
sbb
insb
mov
mov
adc
rorl
push
test
jnp
pop
sbb
mov
pop
xor
xchg
mov
mov
push
movsb
inc
mov
pop
leave
popa
xlat
lret
sbb
fcmovnb
mov
dec
das
lcall
push
outsb
mov
div
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
push
aad
jle
add
adc
loop
out
mov
pop
out
xchg
mov
cmp
lahf
xchg
adcl
and
loop
push
inc
mov
add
ds
and
adc
in
push
xor
and
jecxz
cmp
not
push
cltd
add
push
pop
xor
push
sub
xchg
imul
cmpsb
xchg
imul
xchg
dec
adc
das
and
movsb
mov
adc
jbe
xchg
cmp
insl
in
lea
test
loopne
dec
sub
cmc
cmp
nop
dec
lcall
jae
jecxz
adc
int
push
sub
adc
mov
sub
shlb
in
jecxz
lods
leave
scas
dec
test
xor
testb
test
mov
xchg
jge
imul
pop
mov
mov
mov
adc
adc
cmpsl
and
pushf
jno
mov
scas
les
pop
dec
inc
outsl
push
cmc
cmp
movsb
push
sbb
pop
stc
mov
mov
fwait
scas
fsts
cmp
scas
mov
iret
div
pop
jns
push
xchg
and
clc
lea
and
pop
xor
lods
adc
fcoms
mov
ret
mov
sbb
cmpsb
shrb
xchg
or
pop
je
mov
push
test
lahf
jg
xchg
jnp
outsl
gs
mov
inc
in
xchg
in
pop
imul
and
push
xchg
movsb
pop
fdivs
or
pop
xchg
cmp
adc
mov
ret
mov
cwtl
dec
test
xchg
sbb
aaa
mov
dec
mov
insl
hlt
faddp
movsb
sbb
sub
add
fiadds
and
scas
jge
jp
pop
sbb
push
rcr
fdivl
xor
rcr
jle
lcall
mov
xor
cmp
das
dec
push
inc
dec
in
call
add
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
and
outsb
fcmovbe
mov
jbe
mov
mov
adc
push
int
scas
push
sbb
retw
scas
cmc
pop
cmp
push
xchg
lods
mov
decl
and
scas
inc
mov
cvttps2pi
test
outsl
cld
inc
cmp
dec
adc
in
jbe
ja
xchg
das
call
pop
mov
lcall
pop
scas
push
push
ja
stos
cmp
mov
sbb
adc
shll
sahf
das
mov
jle
pusha
or
cli
pop
adc
std
adc
in
pop
add
xor
into
repz
mov
jo
mov
mov
and
add
test
pop
outsb
std
push
aaa
ja
dec
iret
fists
repz
add
js
jg
mov
stos
jne
mov
test
addl
jg
fs
xchg
cmp
xchg
daa
inc
mov
push
mov
imul
arpl
aas
mov
lods
fwait
aas
scas
jmp
jmp
lcall
les
clc
xchg
ja
adc
flds
es
int
and
insl
or
push
xchg
add
xor
cwtl
adc
jp
pop
ficompl
test
ljmp
pop
xor
mulb
icebp
xchg
sahf
dec
pop
cwtl
sub
inc
mov
mov
subb
mov
dec
aam
shrl
cmp
mov
lret
or
pavgb
test
jae
call
mov
push
lahf
jl
rcll
mov
jbe
jmp
cli
mov
popf
xchg
mov
movsl
popa
and
es
lock
pop
cmp
xor
call
dec
aaa
and
scas
insb
cld
mov
mov
add
lods
lea
daa
sub
js
sub
xor
cld
aas
addr16
test
lret
loope
bound
int3
push
ret
cmc
into
sti
add
sbb
sbb
and
adc
cmp
lret
inc
xlat
jl
inc
js
lcall
pop
stos
xor
xor
mov
xorl
mov
or
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
lea
adc
adc
shl
push
xchg
dec
rolb
hlt
sbb
dec
inc
xchg
mov
pop
and
test
lahf
lcall
lret
lret
lahf
xchg
mov
jns
sub
jmp
nop
bnd
movsb
inc
imul
xlat
jmp
push
dec
and
push
sbb
adcl
lock
scas
or
pop
push
push
lahf
or
mov
push
xchg
xchg
xor
mov
js
and
test
insb
mov
rcl
ljmp
xor
enter
mov
jbe
mov
outsl
test
das
daa
rolb
and
xchg
xor
fists
test
jl
jp
shlb
inc
pushf
cli
add
hlt
or
hlt
add
imul
push
xor
lods
loopne
or
adc
sbb
outsb
frstpm(287
in
dec
push
jns
mov
sbb
outsb
jle
js
pop
mov
std
jae
int
ret
pop
call
sbb
insb
test
and
cld
leave
leave
mov
loope
mov
das
add
mov
xor
add
jp
push
inc
cmpsl
cmpsb
test
dec
rolb
xchg
insb
test
pop
sahf
cmpsl
mov
out
test
inc
mov
int
lahf
sbb
mov
xor
lahf
mov
xchg
add
push
mov
and
push
cmpsl
pop
js
test
xchg
lods
xchg
adc
inc
pop
sbb
lock
subb
iret
mov
push
fucomi
lret
movb
adc
add
add
inc
outsb
inc
mov
fisttps
add
test
cmpsl
in
aam
jnp
xor
iret
pushf
fidivrs
icebp
ss
sub
or
lds
mov
mov
dec
pop
fucom
mov
addb
fsts
insl
adc
addr16
jmp
dec
add
add
std
decl
ret
add
add
add
js
pusha
icebp
stos
push
notl
adc
sub
mov
add
insb
pop
stc
xchg
pop
add
test
stc
lret
lret
pop
cmp
loope
xchg
in
fwait
cmp
xchg
push
out
outsl
mov
fwait
mov
mov
add
or
rorl
push
pop
or
repnz
push
sahf
outsl
pushl
les
js
rol
and
pop
stos
mov
scas
mov
subb
gs
test
lcall
sarl
mov
aad
xchg
lcall
xor
mov
sbb
xchg
shl
xlat
add
or
out
dec
mov
or
icebp
mov
lods
sub
xchg
inc
imul
sbb
inc
loop
jbe
pop
xchg
or
or
pushf
xchg
jne
xchg
jmp
sbb
mov
aaa
js
jns
push
inc
arpl
icebp
lahf
pop
shlb
dec
jle
ficompl
test
test
push
lods
ret
xor
cmc
cmc
inc
or
push
pushf
mov
fs
mov
imul
mov
dec
jle
cs
js
fisubs
ds
jmp
cld
loopne
shrl
dec
mov
incl
adc
fnstenv
mov
mov
cmp
stos
or
jp
sub
mov
insl
sub
push
pop
xor
sti
jmp
jge
pop
movsl
test
cmpsb
es
xor
call
mov
test
push
and
fstl
in
fwait
xor
push
mov
imul
cltd
in
and
lods
jl
add
fidivrs
cmpsl
mov
testl
mov
push
push
mov
or
sbb
jne
stos
insb
push
adc
jb
xor
push
ret
xor
loopne
add
repz
outsl
cli
sbb
or
out
jns
mov
jg
push
cltd
mov
mov
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
sbb
jmp
pushf
in
add
mov
mov
push
lods
std
mov
daa
cli
lcall
or
pop
dec
in
ret
sahf
mov
sub
div
jo
add
mov
scas
repz
pop
das
push
sub
dec
in
sarl
push
mov
rep
lock
mov
fwait
jo
test
push
ret
push
cltd
cmc
sub
mov
je
adc
repnz
jmp
mov
pop
push
int
mov
sub
lods
add
pop
mov
lcall
mov
lcall
push
lcall
cmp
inc
addr16
inc
out
dec
pop
iret
xlat
xchg
imul
jg
ficomps
call
pop
aad
sbb
pop
idiv
pop
xor
and
js
add
and
es
pushf
decb
mov
add
test
rcrl
movsl
pop
mov
mov
stos
xchg
adc
fwait
xor
fnstcw
aas
cmp
jg
jmp
cli
xchg
das
add
pop
in
jle
add
sbb
xor
push
mov
push
xor
jns
out
aad
and
xor
sub
test
fisttpll
daa
jns
sbb
stos
jae
xor
xlat
js
mov
pop
bound
pop
ja
mov
addr16
mov
xchg
shlb
arpl
dec
in
pop
mov
xchg
loopne
jecxz
mov
test
or
mov
daa
inc
jge
popf
jg
cltd
js
and
jnp
inc
cmc
sbbl
cltd
frstor
lock
mov
cmp
iret
out
pusha
push
arpl
dec
into
jp
dec
outsl
xor
fmul
cmp
mov
fwait
test
mov
loop
xchg
imul
xor
aam
idivl
inc
xchg
fwait
mov
fstl
mov
mov
mov
inc
add
add
pop
sbb
sbb
ss
cmp
js
mov
adc
adc
inc
arpl
movsl
cld
xchg
adc
cmp
int
repnz
movsb
orb
or
out
mov
or
in
mov
jp
mov
adc
lcall
in
sbb
mov
xchg
pop
mov
push
popf
xor
popf
jle
in
and
sbb
shrl
push
in
test
dec
shl
xchg
cmp
fwait
mov
or
sbb
loope
leave
xchg
inc
lock
dec
clc
mov
insb
pop
inc
in
mov
pop
inc
cli
mov
push
loope
pushf
sub
in
aam
je
lods
or
jbe
pop
pop
sar
inc
xchg
mov
push
pusha
int
neg
jge
xor
dec
mov
out
cmc
adc
int
xchg
and
aas
dec
push
and
dec
or
shrb
fcom
or
push
sahf
mov
shll
push
push
enter
outsw
mov
xor
sub
ljmp
lods
pusha
jnp
gs
inc
icebp
mov
push
pop
es
cmpsb
mov
mov
addl
cwtl
sub
mov
andb
mov
adc
cmc
xor
or
xchg
cmp
push
lret
fwait
sbb
push
push
jae,pt
adc
mov
cmp
jl
lea
icebp
jle
and
repz
fimuls
jne
jns
pop
xor
in
cmp
aas
js
rcll
popa
or
push
push
dec
jne
jge
loopne
jl
and
popf
mov
ret
pusha
fcomi
insl
testb
cmp
xchg
call
lcall
lock
aaa
mov
mov
ret
or
dec
cmpsl
dec
mov
imul
push
dec
xchg
inc
inc
pop
push
sub
std
push
pushf
mov
sub
cmp
int
loopne
out
in
pop
push
mov
pop
adc
into
pop
push
loop
jl
in
pusha
pop
ja
gs
mov
lea
icebp
sahf
lcall
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
inc
sbb
add
adcl
sbbb
xlat
pop
outsb
and
xorb
lret
pushf
std
movl
or
repnz
mov
adc
lods
inc
xorb
mov
mov
adc
dec
push
addl
mov
popa
mov
in
jnp
movsb
xchg
mov
cs
and
xchg
pop
xor
jle
sub
inc
push
out
cmp
xlat
xor
or
rclb
jne
mov
mov
pop
ret
jno
int3
mov
and
xor
or
out
mov
addr16
cld
inc
icebp
shrb
lods
sbb
mov
mov
xchg
mov
je
repnz
mov
push
mov
test
inc
enter
std
mov
pop
fisubrs
inc
pop
and
adcb
cli
xchg
nop
and
imul
jle
es
popa
lds
loope
dec
xor
arpl
icebp
loope
insl
sbb
test
mov
dec
out
jbe
test
fisttps
lock
subl
mov
dec
push
mov
cli
mov
movsb
xor
fwait
xor
sbb
addr16
inc
add
fs
fdivl
adc
es
xchg
aaa
mov
loopne
adc
jecxz
outsb
sbb
mov
xchg
sbbl
in
stos
and
inc
iret
loope
xchg
mov
inc
imul
jno
addr16
sbb
push
jno
cmp
adc
outsb
mov
xor
hlt
cli
lods
mov
sub
jne
idivl
jbe
adc
push
and
xchg
mov
fldenv
dec
and
mov
in
sbb
rcrl
and
sub
fdivr
js
sbb
movsl
cmp
xchg
test
pusha
jb
xlat
jmp
push
adc
les
decl
jmp
xor
fisttpll
and
rcrb
insb
out
adc
adc
out
popa
cli
into
and
push
rorb
mov
sub
fcmove
addl
pop
mov
mov
or
push
fcoms
or
push
and
mov
push
push
stos
out
out
sbb
test
mov
xchg
adc
add
mov
push
mov
pushl
pop
add
fwait
inc
mov
das
mov
pop
lds
jecxz
ss
sub
outsl
push
pop
pop
cs
push
sahf
mov
hlt
shlb
cwtl
xchg
mov
cli
sti
sub
test
mov
xor
push
enter
inc
shrl
testb
sub
and
jnp
out
sub
jbe
or
mov
arpl
xchg
sbb
aad
mov
int
sti
fiaddl
mov
scas
inc
adc
cld
into
or
sti
cmpsl
xor
and
and
sub
cmpsl
fnstcw
into
ror
mov
and
mov
fwait
mov
test
imul
xor
fs
inc
inc
pop
into
mov
ss
xchg
and
mov
lret
or
mov
mov
cltd
movl
inc
mov
jne
lds
sbb
js
sub
cmc
cmp
stc
mov
js
ret
push
adc
jecxz
mov
out
gs
cmp
jl
in
jbe
cmpsl
inc
jl
pop
xor
aad
loopne
jo
ret
mov
or
shlb
push
cmp
cmp
push
pushw
fs
pop
lea
jnp
cmp
cmp
test
sub
frstor
cld
dec
mov
je
and
sarb
iret
fwait
mov
pop
out
jae
inc
cwtl
mov
or
aaa
repz
pop
scas
pop
inc
in
out
pusha
xor
dec
insl
mov
movsl
imul
or
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
ret
xor
in
mov
stos
push
scas
lret
dec
sub
stc
daa
jbe
adc
or
imul
push
inc
imul
jo
push
push
sub
enter
inc
push
lods
xchg
sbb
loop
cmp
jecxz
ss
nop
jae
mov
addps
test
out
into
mov
jns
loopne
clc
pushf
fsub
fldcw
jae
xchg
inc
pop
popa
mov
sub
test
cltd
push
jge
inc
shl
in
sub
leave
fs
push
ljmp
loope
xor
or
xor
sbb
inc
cmpsb
mov
mov
leave
inc
adc
shll
adc
xchg
outsl
xchg
xor
add
and
lock
push
mov
fwait
push
xchg
add
js
add
nop
lret
or
push
inc
dec
pop
dec
xor
in
cmp
pop
lods
stos
mov
xchg
add
push
jg
mov
xchg
sbb
mov
pop
imul
fildl
add
xchg
stos
sti
dec
aam
mulb
iret
push
outsl
fidivrs
jae
lds
jne
ljmp
xor
negl
jecxz
sbb
lea
in
aam
add
ss
frstor
ja
repz
test
pop
mov
ret
gs
mov
inc
jne
pop
je
loope
cmp
and
je
push
int
mov
xlat
ljmp
pop
pop
jno
cltd
inc
mov
pop
mov
inc
sbb
pop
xor
repz
rcr
cmp
in
pop
orl
ficomps
inc
test
mov
nop
or
in
adc
fmul
dec
sahf
lahf
xor
repz
xor
cmpsl
lods
and
jle
adc
idivb
imul
xor
popa
sbb
aas
and
mov
add
pusha
xchg
xor
cltd
or
mov
and
mov
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
sub
loop
adc
movlps
orb
and
pop
lret
lods
mov
jo
dec
xchg
leave
and
adc
jg
push
rcrl
push
sbb
push
inc
in
and
jbe
mov
pop
aam
cli
loope
jge
test
push
mov
in
push
mov
inc
iret
jno
cmp
push
cmp
loope
imul
and
inc
cmp
int
mov
lcall
sub
in
sti
cs
loope
subl
xchg
clc
jg
pusha
push
enter
mov
pop
push
lds
jecxz
mov
or
pop
cmp
fildll
enter
hlt
in
outsb
sbb
sti
popa
hlt
and
adc
xchg
xor
inc
sbb
fisttpl
mov
inc
mov
inc
mov
add
aaa
loope
ret
test
xchg
jmp
xchg
es
sub
nop
fwait
jb
sub
pop
adc
es
sbb
or
fimuls
inc
sub
push
cmp
popa
loopne
iret
ljmpw
cwtl
hlt
fwait
test
jae
cs
shr
ljmp
xor
fbld
bound
inc
mov
xor
lcall
lret
test
in
ja
pop
dec
pop
mov
mov
adc
lret
fistps
ficoms
dec
inc
movsl
lcall
xor
jg
sub
jge
jo
cmp
mov
shrl
xchg
push
jg
out
xchg
fwait
stos
fucomp
inc
add
movsl
sbb
cmpsl
sbb
ficomps
mov
mov
cli
pop
rolb
jno
stc
cmp
push
les
or
cmp
dec
sahf
ret
inc
nop
lcall
jmp
sbb
aas
imul
into
mov
sub
push
icebp
push
mov
push
fisttpll
mov
add
push
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
cmp
jle
ficoms
adc
mov
out
sarl
pop
addr16
loopne
and
es
dec
and
mov
and
mov
fs
mov
adc
mov
xor
jb
pop
lods
insb
jne
les
adc
clc
repz
insb
cmp
lods
cmc
pop
outsb
mov
ss
cmp
rorb
stos
xchg
addb
push
ret
hlt
subb
sub
insl
leave
das
sti
mov
cmp
jp
dec
clc
scas
lods
push
cmp
in
stc
rcrl
push
push
stos
pusha
hlt
sbb
jns
adc
insl
xchg
shrb
xor
notb
xor
xchg
rcll
mov
push
ljmp
mov
xchg
int3
xchg
mov
cmpsb
push
scas
stc
sti
mov
push
xchg
test
and
dec
sbb
jb
push
ljmp
pop
push
data16
mov
inc
cmp
test
cmp
mov
mov
rcrb
push
adc
sbb
sbb
mov
xor
cs
lret
cmpb
jae
cli
imul
sub
repz
cmc
xchg
push
mov
sub
inc
xor
xchg
adc
das
xchg
push
xor
pop
aam
ljmp
inc
push
lds
jns
mov
push
cltd
sub
mov
adc
jecxz
out
outsl
fisttpll
test
stos
in
sahf
bound
int
fistpll
data16
xchg
sahf
and
mov
sbb
jmp
jg
jge,pn
xchg
jg
fstpt
mov
inc
push
insl
popa
inc
enter
mov
test
inc
bound
out
loope
add
adc
pop
mov
sub
adc
jb
fucomi
leave
xchg
fistl
jecxz
mov
aaa
fdivp
add
aam
out
cmc
dec
push
out
pop
xchg
adc
mov
adc
sahf
sub
pop
mov
pop
ret
xor
push
pop
push
fsubrl
call
add
lock
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
sub
adc
movlps
fistpll
loop
iret
into
sub
push
inc
test
ret
push
ss
mov
mov
fistpl
aam
and
shr
jmp
pop
in
mov
inc
jbe
mov
cmpsb
mov
rclb
xchg
aas
sti
mov
fisubs
test
into
iret
xor
jo
inc
sub
ds
stos
pop
cwtl
int3
cmp
sub
or
jbe
jae
mov
in
sub
les
xor
lahf
and
mov
pop
test
loop
jae
jae
outsb
push
dec
sub
or
push
cli
sbb
inc
repz
fs
adcl
out
lods
in
mov
dec
pusha
addb
xchg
bound
pop
mov
je
pop
mov
daa
cmp
xchg
cvtpi2ps
popl
add
dec
jnp
sbb
push
stos
stc
xchg
mov
test
xchg
sub
xor
mov
fcoml
or
dec
stos
sahf
pop
insl
and
in
adc
cli
imul
sub
mov
mov
and
mov
xchg
jle
or
xor
in
rorb
dec
pop
cmp
movsb
xor
in
and
rorb
into
and
adc
push
xchg
decb
loope
lds
ficompl
add
stc
dec
aam
or
mov
imul
sti
fst
iret
dec
out
xchg
inc
push
jne
inc
inc
fdivs
lcall
lods
lahf
cli
pop
loopne
xchg
inc
or
and
cs
aaa
shl
in
daa
sub
je
ret
cmpsb
sbb
sahf
sbb
mov
xchg
or
incl
outsb
jge
jle
mov
mov
shl
test
push
jp
mov
jge
or
cmp
mov
mov
or
or
aaa
pop
leave
icebp
aad
adc
loop
mov
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
pushf
fdivrl
int3
movlps
pop
cmp
ljmp
nop
test
leave
jbe
mov
les
jno
push
lcall
jbe
cmp
dec
es
or
lret
roll
clc
cs
adc
mov
xor
cwtl
js
jb
xchg
adc
mov
ret
jnp
addr16
das
js
mov
loope
and
out
lret
sahf
pop
ret
imul
pop
ss
adc
dec
rclb
mov
mov
je
adc
fdivrl
mov
iret
popa
mov
rdmsr
out
enter
pop
adc
mov
shrl
js
fbstp
push
mov
jb
jecxz
xor
pop
sbb
ja
outsl
inc
ret
mov
xchg
sbb
lds
int
mov
dec
in
ljmp
in
push
or
das
repz
adc
jg
mov
add
mov
push
fldcw
mov
fbstp
push
lds
jmp
jb
movsl
mov
jmp
rclb
mov
jne
lods
or
add
test
mov
and
inc
pop
mov
int3
and
cmc
cmp
ret
movsl
lods
jmp
clc
cmc
imul
mov
pop
mov
test
shl
push
or
dec
xchg
out
lret
shl
das
pop
add
mov
in
push
lahf
dec
dec
pop
xor
mov
or
pushf
mov
push
pop
in
jp
clc
mov
jb
stc
out
cs
out
xor
mov
fiadds
ljmp
imul
fists
mov
pop
scas
mov
xchg
es
hlt
jnp
arpl
pushf
mov
add
or
xor
sub
sbb
push
decb
popf
mov
and
fiadds
xchg
inc
fwait
sub
loopne
pop
mov
nop
loope
sbb
hlt
inc
mov
pop
rcll
sub
ficomps
xor
dec
inc
mov
fdivr
jge
add
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
and
sahf
lods
xor
movlps
sbb
clc
sbb
mov
insb
lret
stos
xchg
repz
or
adc
pop
adc
dec
cmpsl
inc
mov
insl
mov
sub
lds
mov
jp
mov
inc
pop
add
xor
jmp
push
xchg
stos
fcmovb
es
divb
icebp
aaa
pop
stos
sahf
sub
call
gs
bts
fisttpll
lods
shrl
mov
imul
pop
push
mov
jo
addr16
jo
inc
adc
movl
popf
testl
or
fnstenvs
push
ja
or
or
add
pop
in
push
mov
xor
dec
jo
or
push
aaa
lods
stc
cmp
inc
out
cwtl
popf
xchg
cmpsb
push
pop
xor
push
mov
notb
jo
mov
into
or
dec
loope
inc
add
mov
sbb
push
xchg
sub
push
sub
add
test
sbb
xor
test
add
and
mov
fdivrp
jp
test
iret
sub
jg
mov
sub
ficomps
mov
adcb
test
mov
push
jno
cmp
jnp
nop
inc
arpl
inc
pusha
cmp
daa
dec
mov
pop
stos
jns
xchg
push
and
lcall
push
cmp
and
insl
add
sahf
sub
push
lahf
dec
pop
lds
pusha
mov
xchg
mulb
xchg
pop
ret
xchg
aaa
scas
inc
cs
ret
jns
iret
xor
cmc
cli
loopne
pop
mov
into
imul
xor
or
mov
nop
enter
or
fsubrs
test
or
jns
outsb
and
ud1
mov
xchg
mov
imul
dec
push
or
test
and
lds
popa
push
xchg
add
and
stc
pusha
aad
fildll
and
test
sar
scas
sbb
sbb
mov
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
insb
in
enter
movlps
pop
xor
xor
adcb
jb
call
pop
shl
mov
lods
xor
fwait
mov
int
inc
mov
fdivrl
lret
push
scas
dec
mov
sub
mov
push
out
mov
int
xlat
and
movsl
int3
inc
push
mov
inc
and
inc
daa
loope
push
pushf
cmpsb
aam
lret
popa
add
cld
xadd
adcb
cwtl
mov
adc
cwtl
das
fwait
pop
inc
loopne
fists
xchg
lret
repnz
pop
ja
push
out
test
push
rolb
idivl
sub
and
mov
mov
arpl
sbb
mov
jmp
lahf
ret
mov
popa
add
data16
jae
cltd
call
add
push
cmpsl
cld
sub
mov
xor
xor
dec
cmovl
dec
iret
ja
stos
mov
bound
lods
mov
push
ljmp
xchg
jno
mov
push
arpl
xor
stc
push
scas
lahf
imul
aaa
jle
movsb
cltd
popf
addr16
inc
fs
sti
les
or
lahf
or
mov
repz
imul
add
dec
pop
adc
hlt
cmp
sub
xor
mov
push
daa
es
mov
pushf
inc
pop
mov
popf
xchg
xchg
fnsave
xchg
mov
inc
pushf
in
cmp
repz
ja
adc
xchg
dec
inc
mov
and
mov
fld
and
ficoms
bound
je
pop
popa
popf
xchg
arpl
dec
lea
xchg
xor
or
fcompl
mov
pop
xor
das
insb
leave
mov
jp
arpl
lret
lds
jmp
add
and
out
cld
icebp
xchg
add
cmp
push
cld
and
mov
in
int3
loop,pt
adc
pop
testl
in
das
or
and
mov
out
orb
imul
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
dec
stc
sbb
cmpsb
les
adc
aad
call
stos
xchg
outsb
lret
sbb
mov
sub
cmc
test
call
call
jp
xchg
test
inc
add
mov
inc
je
and
in
push
xlat
lcall
popf
dec
addr16
xor
mov
add
jg
jo
or
dec
fisttpll
fidivl
aam
and
xor
inc
rolb
sub
lods
jecxz
lea
lret
movsl
cmc
mov
fnstcw
push
lret
mov
cli
hlt
fcomi
lods
test
push
into
push
mov
lret
ss
das
xchg
and
scas
fld
mov
mov
add
adc
pushf
repnz
add
pop
or
cltd
ljmp
cmp
clc
rorl
sbb
out
mov
push
mov
fistpll
xchg
jmp
xor
fucomip
inc
xor
int
dec
xlat
fcoml
roll
and
fs
int3
jne
test
hlt
and
cmp
cmp
pusha
jl
mov
sbb
into
and
push
add
and
and
mov
push
jbe
xor
aaa
daa
sub
cmpb
or
xchg
or
stc
push
addr16
sbbl
fcmovnu
and
mov
mov
adc
daa
lods
pop
fcompl
mov
loopne
push
jge
movsl
clc
cmc
jmp
test
dec
push
out
mov
inc
out
and
pop
rcl
pushf
sbb
out
add
jp
aam
shlb
dec
out
xor
adc
fistpll
mov
inc
jns
int3
mov
mov
cs
stos
pop
shrb
pop
adc
adc
andb
in
nop
sub
popa
pop
out
jne
ljmp
popl
int
sbb
shrl
lcall
ret
xchg
setae
icebp
lods
and
cld
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
out
mov
int3
movlps
cwtl
and
ljmp
add
push
out
xor
xchg
js
inc
fimuls
stos
aam
fistps
scas
push
movsb
or
lahf
sar
bound
mov
insl
pop
inc
shl
xor
add
popf
data16
outsl
aam
add
and
out
repz
adc
add
mov
push
xchg
xrelease
dec
push
inc
add
mov
lea
popa
int
cwtl
fldt
lods
and
mov
pop
mul
int
inc
test
inc
and
sub
std
hlt
mov
jecxz
sub
add
test
jge
mov
push
lcall
push
inc
adc
shrb
cmp
inc
add
imul
inc
mov
dec
push
inc
pushf
mov
lret
or
mov
insb
fld
mov
ror
sbb
adc
stos
add
mov
movsl
sub
movsb
in
adc
xchg
jns
pop
jge
fidivrs
adc
scas
sub
cmc
loopne
xor
inc
test
or
fsts
ud2
fsubr
test
pop
iret
cmpsb
cmp
xchg
adc
fcoms
xchg
jmp
push
ss
sbb
mov
sub
lahf
daa
adc
test
xchg
lods
sti
add
rol
mov
scas
out
in
rorl
mov
jp
add
shrb
int3
shll
mov
bnd
push
das
test
cmp
mov
mov
icebp
out
mov
sbb
inc
movsb
in
add
dec
xchg
imul
test
xchg
cwtl
and
lcall
sbb
jbe
aas
sub
inc
jns
flds
fcoml
or
add
dec
jmp
movl
pop
mov
mov
jb
sbb
dec
hlt
loope
pop
lods
lock
sar
sbb
inc
push
cltd
push
ljmp
pop
inc
movsl
jecxz
adc
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
test
adc
adc
sub
lods
test
cmovns
arpl
mov
divl
cmp
imul
mov
rcll
xlat
mov
add
xchg
lret
sub
in
lahf
shll
jne
pop
sub
jle
or
pop
imul
std
lods
xchg
enter
mov
mov
scas
mov
test
fwait
cmp
xor
negb
and
mov
pop
fisubrs
push
movsb
or
push
sub
stos
inc
add
les
enter
pop
dec
fiaddl
and
mov
aad
or
push
cpuid
cltd
fists
lcall
scas
mov
mov
inc
sub
lret
adc
pop
out
call
ja
fmulp
daa
imul
jl
lcall
pop
cmpsl
sub
ret
inc
adc
push
int3
mov
jo
and
adc
mov
fdivrp
mov
loopne
xchg
jp
jmp
or
xor
mov
jae
xor
adc
fcoms
jbe
push
ljmp
stc
es
in
or
stc
mov
adc
and
dec
mov
outsb
xchg
ds
fisubrl
repz
and
cld
adc
push
or
pop
add
mov
or
int
mov
cmp
out
jmp
inc
mov
cmp
push
popf
xchg
jo
pop
sub
or
cmp
ds
mov
sbb
cmp
xor
loop
lcall
pusha
iret
sub
push
push
orl
xor
aam
xor
lret
or
xchg
mov
enter
pop
pop
fidivrs
jl
cmpsb
stos
imul
jae
push
arpl
xchg
jnp
shl
push
mov
jmp
mov
inc
das
xchg
les
jo
inc
xchg
pushf
dec
adc
pop
addr16
mov
in
into
daa
xor
or
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
xchg
pushf
lods
int
adc
adc
or
js
mov
in
push
sbb
test
leave
imul
testl
shlb
test
and
xchg
sbb
mov
imul
and
in
std
lcall
lea
inc
sub
xchg
cmp
js
fwait
lea
rdtsc
adc
lcall
lret
sub
insb
inc
push
idiv
fdivrp
lret
fdivs
or
das
jle
xchg
cmp
mov
cli
imul
out
push
test
test
or
mov
sar
sbb
cmpsb
ret
stos
push
fnstcw
std
sub
arpl
data16
sub
push
sbb
and
push
test
movsb
add
pop
adc
xor
mov
xlat
not
add
xchg
ret
xchg
aas
mov
ftst
fistps
and
jo
xor
mov
cmc
fisttpll
int
xchg
lods
or
push
jmp
es
jns
xchg
lea
movsl
sbb
imul
mov
scas
jns
push
xchg
pop
mov
inc
xchg
inc
sbb
fnstenv
jbe
xchg
aad
jp
pop
dec
cmp
mov
inc
dec
adc
les
lretw
hlt
inc
mov
cltd
stos
dec
shrl
mov
jno
inc
stc
inc
or
loop
sbb
mov
lods
jle
xchg
dec
sbb
in
out
int
or
push
jns
add
inc
scas
mov
mulb
mov
outsl
sahf
mov
jbe
sub
pop
aam
fwait
adc
aas
sub
dec
ror
popa
not
mov
sub
movsl
cwtl
in
pushf
mov
push
xor
sub
adc
cwtl
aaa
mov
mov
in
lods
mov
mov
mov
shl
mov
test
test
adc
xchg
lods
adc
or
addr16
loope
pop
fists
stc
cmpsb
push
sbb
push
out
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
adc
jns
fstps
mov
roll
jnp
xor
push
jns
add
jmp
push
dec
inc
mov
jp
cmp
imul
nop
or
jb
test
xchg
dec
jp
fbstp
jb
jae
mov
mov
inc
mov
insl
in
jp
dec
rcrb
stos
loop
arpl
fdivrs
jnp
lods
push
xchg
notb
mull
imul
and
in
call
and
dec
wbinvd
movsl
or
adc
outsb
sti
enter
pusha
lcall
icebp
scas
mov
mov
fcoml
xchg
jb
in
int
sbb
dec
call
call
inc
fidivrl
pop
das
pop
ljmp
test
iret
out
ret
ss
xchg
and
shll
or
data16
mov
out
or
aaa
mov
aam
or
or
cld
xlat
movsl
enter
mov
xor
shlb
dec
testl
mov
aas
outsb
add
gs
cmp
loop
pop
dec
sbb
call
xlat
and
xor
xchg
pop
popf
inc
mov
sbb
pop
cld
fistl
mov
sub
dec
aad
xchg
dec
inc
jle
testl
in
cmc
fsubl
xchg
notb
mov
hlt
mov
mov
lea
jge
jns
clc
loop
pushf
dec
out
stc
adc
loope
ret
inc
sbb
or
mov
add
fcmove
aam
dec
or
popa
xchg
lods
sbb
mov
lret
sub
add
adc
or
lret
cs
xchg
dec
les
xchg
xlat
and
xchg
pop
bound
pop
push
or
hlt
lods
movsl
loopne
mov
dec
mov
in
lret
mov
int3
stc
repz
iret
sbbb
jp
movsb
cli
div
sar
cmc
cli
ds
in
cltd
mov
cmp
aas
loop
imul
mov
jmp
and
add
lock
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
mov
cmp
movlps
fsubrs
movsl
mov
leave
insl
fcmovbe
or
aad
popf
cmp
in
jns
sbb
out
popf
mov
jp
ja
jbe
xlat
into
ud1
popf
or
lret
ja
sbb
repnz
bound
and
bound
jnp
jecxz
inc
mov
repz
lds
shl
mov
and
repz
imul
jno
icebp
fisubs
adc
shrl
cs
push
es
inc
mov
pop
mov
push
push
in
scas
fstl
and
mov
jg
mov
cltd
sbb
scas
inc
inc
ret
rcr
clc
imul
add
sub
cmpsl
pop
mov
inc
jnp
pop
lea
xor
add
iret
scas
xor
pusha
test
dec
adc
arpl
cltd
or
mov
aam
std
shl
adc
fstpt
mov
or
ret
popl
push
test
movsb
dec
mov
pop
mov
and
daa
xchg
pop
scas
push
test
add
xor
aaa
add
faddp
xchg
out
sub
cmp
fildll
sbb
fwait
mov
xor
daa
test
ret
lea
jl
xor
fimull
outsb
ljmp
sahf
add
mov
and
adc
shlb
popl
inc
mov
cld
inc
adc
lcall
xchg
and
sbb
int3
jae
addl
fstpl
jp
jecxz
mov
mov
adc
lcall
sub
xchg
xchg
pop
mov
pop
outsl
ljmp
loopne
or
xor
insb
jg
and
cwtl
jb
je
sbb
adc
jge
jp
movsbw
sbb
cwtl
xor
sub
pop
aam
shrl
test
fimull
push
mov
pushf
xchg
mov
jmp
je
imul
or
decl
test
decl
jmp
sub
sbb
sbb
cs
icebp
mov
add
adc
movlps
cmp
mov
andb
xchg
outsb
push
mov
lret
repz
cld
aas
test
jl
and
shll
insl
push
xchg
xchg
in
mov
cli
sar
mov
add
in
test
sbbb
adc
out
fmull
sarb
outsl
jno
nop
mov
fimuls
pusha
jo
sbb
lock
data16
inc
pop
cmp
das
out
inc
repz
xor
or
dec
div
inc
add
icebp
mov
rcr
cmp
shlb
mov
pop
mov
push
xchg
lods
jg
jnp
mov
xchg
add
dec
lahf
cmpsl
aas
cmpsl
loope
and
imulb
ret
imul
scas
clc
pop
or
lahf
mov
mov
sbb
jae
cli
cmp
mov
sub
lods
ja
inc
pop
dec
xchg
push
bound
jnp
push
mull
dec
hlt
mov
pusha
aaa
mov
pop
or
loop
outsb
jno
dec
sarb
and
aaa
aas
rcrb
ret
mov
insb
jecxz
xlat
insl
pop
push
sbbl
ja
mov
inc
imul
mov
push
andl
enter
inc
imul
popa
pop
push
mov
or
push
fcomip
cmpsl
rclb
jmp
sub
lcall
gs
out
nop
ss
subl
mov
pop
jnp
arpl
or
cmpsb
xchg
sbb
dec
sbb
adcl
adc
inc
cmp
test
cld
scas
or
xchg
repz
shrl
dec
iret
fbld
mov
push
adc
lea
push
mov
xor
inc
clc
dec
lahf
cmp
in
add
xor
mov
cmp
sar
cmp
scas
mov
sub
pusha
xorb
cmp
push
mov
mov
in
decb
xor
sub
cmpsb
jbe
out
popa
dec
int3
cmp
mov
movsl
imul
or
add
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
stos
scas
stos
adc
adc
fldenv
fstpl
int3
andb
addr16
nop
lock
sub
xchg
xlat
movsl
cmp
fdivr
andb
loopne
dec
es
lcall
pop
cs
test
dec
cmp
xlat
rcrl
jge
xchg
fnstcw
adcb
cmp
std
add
jno
loopne
jmp
cmp
cmp
sbb
jne
inc
add
sbb
test
mov
xchg
cmpsb
dec
fsubr
jae
in
add
fwait
loop
repnz
or
notl
js
mov
popf
pop
mov
incb
fcmovnb
orl
mov
sbb
inc
loopne
xor
mov
iret
ljmp
adcl
loop
ret
into
aas
mov
es
xchg
push
call
push
sub
jns
push
ss
push
out
fistpll
xchg
sbb
push
arpl
outsb
push
jle
stos
adc
les
cmpsl
cmp
clc
fstps
into
jbe
push
mov
out
cmp
js
ret
aaa
nop
and
dec
pop
xchg
jne
inc
stos
dec
inc
sub
cmc
dec
sbbb
mov
mov
dec
into
fnstenv
mov
outsb
addb
pop
cmpb
adc
loope
leave
mov
insb
push
sub
enter
inc
push
xchg
lret
inc
jmp
dec
out
test
scas
sub
lahf
pop
push
or
xor
das
ljmp
jnp
mov
sub
lods
push
mov
xor
cmp
das
out
outsl
adc
mov
push
jbe
jle
in
mov
dec
push
insl
rorl
fs
jnp
add
sbb
out
push
jmp
dec
jp
loopne
mov
outsl
fidivrl
addr16
ret
nop
ljmp
ficoms
push
mov
scas
aas
xor
mov
call
or
or
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
mov
adc
movlps
cmp
xor
and
js
in
jmp
pop
rcr
push
mov
outsb
cld
xor
hlt
push
out
fmuls
pusha
iret
xchg
jb
fisubl
sbb
inc
subl
dec
mov
ret
lods
pop
adc
loope
mov
lods
clc
push
jmp
sbb
or
lods
movsl
ss
stos
js
sub
push
aam
sub
push
dec
scas
out
push
scas
jl,pn
jg
dec
setb
orb
or
jl
inc
popf
push
js
cmpsb
jne
cmp
inc
mov
loop
mov
sbb
jno
dec
movsb
ja
shll
push
adc
mov
inc
cmpsb
gs
inc
fwait
xor
sbb
dec
pop
jge
and
cmpsb
repz
sarb
push
fnstcw
add
imul
xor
cmp
add
inc
dec
sbb
xor
jmp
iret
je
add
scas
xchg
icebp
orb
ret
cmpsb
add
dec
push
dec
push
mov
rcrl
ficoms
inc
imul
or
test
filds
xchg
imul
ret
addr16
fs
pop
pop
in
or
movsl
add
sbb
hlt
js
mov
stos
push
outsl
push
fstl
inc
mov
mov
jmp
or
xchg
inc
fxch
mov
jne
mov
ret
arpl
sub
push
inc
push
imul
ret
iret
mov
mov
loop
mov
mov
sbb
and
lcall
or
jae
aas
jnp
loop
sub
mov
je
xlat
pushf
outsb
pusha
dec
fwait
xchg
push
lret
decl
mov
or
inc
mov
outsb
xor
xlat
outsb
fiadds
mov
outsb
cmp
jnp
mov
jo
sub
xchg
repnz
jo
add
scas
cmp
pop
repnz
cmpb
xchg
adc
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
push
hlt
cmpsb
js
mov
adc
mov
fbld
sub
inc
popa
fiaddl
dec
loopne
ljmp
push
pop
cld
insb
roll
dec
loop
loopne
lcall
sbb
adc
arpl
dec
sbb
mov
clc
mov
out
push
cli
or
test
add
adc
outsl
icebp
nop
repnz
repnz
sub
pop
push
xor
fldenv
jb
adc
cwtl
mov
sub
icebp
mov
mov
mov
mov
sbb
inc
sub
mov
push
add
into
pop
cmc
jae
movsl
sbb
xchg
mov
ds
adc
mov
pop
adc
aam
test
jne
xor
arpl
or
mov
stos
jb
adc
or
add
lahf
out
mov
inc
add
or
mov
fwait
cmp
lret
test
jbe
mov
add
mov
lret
rorl
sbb
aas
test
arpl
sub
push
mov
ss
ficomps
and
addb
fisttpll
xor
pop
and
sahf
xchg
data16
xchg
imul
mov
cmp
dec
push
cmp
int
test
insb
mov
enter
test
jnp
out
orb
jbe
xchg
and
mov
cmp
testl
jmp
sub
insb
xor
and
inc
push
fadd
xor
pop
adc
mov
jg
ficoml
or
out
xchg
jae
or
cmp
lret
sbb
shlb
insb
inc
out
aas
mov
dec
or
std
mov
fbld
lret
insl
stc
adc
dec
mov
cli
or
test
jo
lcall
std
and
add
jmp
xchg
ss
mov
cmp
push
mov
mov
sahf
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
aad
or
int3
movlps
loopne
inc
ljmp
test
xchg
mov
mov
mov
lds
xchg
push
push
dec
dec
and
add
sbb
leave
adc
jl
mov
cmp
cmp
sbb
xchg
btc
lock
push
je
or
jo
xor
int3
imul
fs
push
out
inc
and
sahf
inc
lds
push
and
or
inc
shll
mov
push
mov
pop
inc
push
je
sbb
sub
pop
add
pop
out
int
clc
sbb
sub
fmuls
adc
lret
roll
idiv
loopne
fnstsw
lret
arpl
das
sti
fdivs
cmpsl
inc
bound
xchg
mov
mov
push
repz
pop
mov
pop
loope
adc
popf
rclb
movsb
pop
inc
push
cmp
sub
loope
cld
mov
leave
fstpt
jns
in
loope
inc
inc
cmp
mov
inc
add
xchg
or
in
fisubl
imul
daa
lret
pop
fdivs
mov
out
adc
mov
pop
push
push
rol
mov
das
and
ja
aas
ss
cld
inc
inc
xor
cmp
jle
sub
and
idiv
mov
cmp
ss
sysexit
xor
jbe
mov
push
xchg
inc
mov
or
sub
xlat
and
inc
scas
lcall
xchg
xor
lcall
ret
xor
or
xchg
lret
add
or
cwtl
mov
movb
outsl
in
push
aaa
ficompl
inc
dec
mov
das
out
inc
cmpsb
sub
mov
xchg
rclb
arpl
lds
inc
mov
pop
or
repnz
in
or
push
adc
ljmp
push
lods
scas
insb
loope
je
call
iret
dec
dec
fbstp
mov
mov
xchg
add
pushl
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
lcall
ret
pop
js
movsl
loope
adc
push
push
je
loope
xchg
cld
push
adc
jecxz
mov
insl
scas
xlat
push
lcall
in
xchg
in
inc
loopne
xchg
out
push
inc
jb
add
mov
jnp
and
hlt
mov
aam
std
rcll
enter
sbb
fstps
inc
cmp
adc
mov
mov
filds
xor
dec
jbe
shrl
mov
add
cwtl
mov
jg
cmp
add
mov
fwait
dec
mov
outsl
daa
out
push
jne
ret
mul
sbb
cmp
shll
aam
stos
mov
sti
sub
xor
adc
cwtl
int
sub
out
dec
push
sub
push
mov
addr16
pop
popa
sti
mov
cld
lea
push
xchg
jbe
movsb
fistpl
dec
pop
ffree
inc
lret
push
push
and
cmp
arpl
ljmp
or
es
f2xm1
mov
sbb
adc
mov
push
sti
dec
xor
add
gs
xlat
inc
adc
push
lahf
cmp
cld
ss
mov
push
repz
icebp
sbb
rcl
test
sub
es
and
sub
lahf
push
or
int
test
xchg
jle
jle
shll
inc
jle
and
lahf
rol
xorb
or
subb
push
adcl
fisttps
jmp
into
pop
mov
mov
addr16
push
jp
lahf
fdivrl
push
lods
daa
jle
sub
xor
ffree
ret
mov
inc
cmp
mov
std
popa
or
rcrb
mov
inc
ret
inc
add
mov
pop
outsb
xchg
out
dec
mov
aam
cmp
sbb
sbb
sub
decb
test
lock
jecxz
cmp
mov
negl
mov
cs
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
js
xchg
adc
adc
stc
xor
add
mov
dec
scas
subl
push
out
stc
mov
shlb
sub
or
insb
out
mov
test
pushf
into
repz
sub
pop
mov
add
mov
sbb
push
popa
xchg
imul
push
xchg
into
xchg
js
rol
dec
sbb
cltd
xlat
es
ja
jae
pop
sbb
pop
clc
sub
dec
mov
and
mov
and
out
mov
pop
incb
sbb
add
aaa
pop
xor
flds
mov
fcmovbe
jecxz
cmp
lret
push
std
inc
dec
in
push
mov
cmp
inc
mov
lock
mov
jecxz
arpl
loopne
lods
sbb
xor
jmp
enter
in
sub
mov
pop
jecxz
les
push
fucomip
xchg
and
xor
iret
pop
mov
or
push
mov
mov
repz
or
daa
xchg
daa
imul
cmp
cmp
mov
popa
lret
idivl
cmp
cmpl
ret
pusha
nop
filds
fcomip
xchg
divl
lcall
push
inc
adc
sbb
leave
add
pop
movsl
add
pop
aaa
loope
or
imul
pop
lahf
xor
cmpsl
pop
in
inc
stos
repnz
repnz
inc
xor
shll
push
outsl
andb
or
addr16
mov
aam
ds
mov
cmp
je
push
mov
into
in
lcall
sbb
xchg
sbb
jae
ret
sub
cltd
lock
push
faddl
shrl
xchg
mov
push
loop
and
xchg
cmc
jmp
lods
pop
sbb
sub
xor
addb
or
xor
mov
outsb
cli
dec
adc
leave
mov
lds
add
repz
pop
jnp
mov
inc
sbb
addr16
enter
push
popa
ljmp
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
imul
adc
adc
and
jb
mov
das
popl
push
fldt
jp
xchg
mov
mov
popfw
inc
lds
mov
mov
aaa
mov
inc
iretw
add
imul
inc
daa
hlt
xorl
jmp
aam
scas
lds
xor
testb
faddl
pusha
into
mov
xor
int3
std
ficompl
flds
aam
rolb
test
js
ss
call
sbb
dec
sbbb
mov
jp
push
push
and
test
inc
test
shl
mov
ljmp
adc
mov
sub
mov
je
outsl
loope
ret
fisubs
sbb
movl
imul
push
rorl
ja
pop
xchg
out
repnz
lods
lods
popa
ljmp
movsb
xchg
fisubs
lret
fstpt
rcrb
pusha
fdivs
stc
push
cwtl
dec
imul
jne
dec
adc
fs
divb
cmp
lea
pop
mov
push
ror
jmp
or
jp
out
stc
xchg
ret
mov
clc
sub
pop
mov
push
push
pop
add
ljmp
cwtl
lret
mov
into
jae
mov
sahf
scas
inc
fsubrl
dec
jno
pop
adc
insl
jb
mov
filds
or
das
pop
push
cmp
loopne
sahf
push
xor
sbb
jo
inc
loop
aam
stos
cs
lods
mov
or
pop
mov
cmp
gs
out
bound
inc
mov
test
inc
mov
scas
fwait
mov
lock
arpl
jge
sub
jno
fildl
sbb
adc
add
lea
mov
int
sub
shll
std
jl
dec
and
jbe
jbe
jle
add
les
shl
fldt
mov
push
mov
test
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
pop
mov
movlps
rorb
xor
xor
icebp
push
jmp
adc
sub
xchg
imul
jno
mov
and
sbb
or
lret
jbe
or
lods
or
adc
mov
pop
jge
xor
jb
inc
mov
andl
addb
hlt
jle
sub
mov
pop
sbb
xchg
test
and
int3
lahf
push
push
les
and
nop
sbb
xchg
cwtl
and
xchg
add
lcall
mov
cmp
gs
scas
dec
sbb
call
cmp
dec
xchg
iret
cmc
dec
inc
mov
lock
cmp
stos
shrl
fidivrs
mov
and
popl
sahf
ds
cli
adc
xor
test
xor
hlt
repz
rcl
jp
mov
lahf
fildll
jecxz
lret
inc
bound
rcrl
das
sbb
stos
push
insb
mov
mov
mov
pop
lret
clc
dec
xor
adc
cmp
data16
and
adc
int
jle
xchg
insb
add
in
loope
movsl
sub
test
mov
fwait
push
icebp
mov
int3
lret
ljmp
mov
icebp
das
adc
sbb
fnstsw
inc
mov
mov
mov
daa
pop
add
aas
sarl
and
das
pusha
sbb
into
cmpsb
lods
aas
mov
and
inc
in
fsubrl
out
in
iret
jp
xor
push
dec
sub
pop
jmp
xchg
sbb
mov
inc
jae
jno
jbe
ret
frndint
mov
in
add
daa
inc
stc
xchg
mov
adcb
iret
in
pop
push
xor
scas
and
pop
adc
pop
jns
inc
sbb
cwtl
xlat
dec
stos
dec
xor
std
mov
push
mov
xlat
cmp
inc
sbb
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
push
data16
test
adc
adc
ljmp
imul
aaa
jg
fistps
xor
test
daa
js
mov
in
jns
mov
mov
pusha
loope
xchg
mov
mov
mov
stc
pushf
sub
mov
fs
cmpsb
adc
adc
insl
push
push
dec
sub
mov
dec
xor
cmpl
jbe
hlt
and
mov
stos
mov
xchg
repnz
repz
incl
es
dec
loope
jns
lods
mov
sub
jmp
mov
fsubr
xor
or
lock
movsb
sbb
lock
mov
mov
dec
inc
and
ljmp
test
push
cmp
mov
cmp
jmp
push
xlat
cltd
movsb
or
aaa
repnz
daa
in
add
jne
test
ljmp
add
cltd
ljmp
jb
ja
push
mov
int
inc
jl
push
imul
mov
pop
dec
adcb
mov
cli
lock
push
inc
sub
pop
xchg
lret
in
out
or
cltd
sahf
jp
push
and
popf
sbb
pop
cmp
sub
cmp
jno
and
pop
movsl
push
jnp
sbb
scas
jne
adc
pop
sub
mov
inc
fwait
jle
mov
fwait
std
rolb
fnstenv
sub
cmpsl
in
cmpsb
outsb
xchg
xchg
push
xchg
lret
adc
mov
pop
rcrl
hlt
push
pushf
inc
ret
push
insb
pop
xchg
sbb
popa
iret
adc
or
inc
cmp
sarl
push
pop
jo
sub
xor
clc
pop
pop
xchg
xchg
ss
xchg
xchg
mov
dec
in
jmp
mov
addb
fmuls
imul
jl
fisttps
ss
int
ret
dec
xor
iret
cs
xor
xor
cli
jg
das
cwtl
aas
mov
out
cmpsl
or
jo
lds
mov
sbb
jle
sbb
adc
inc
insb
imul
insb
pop
aad
inc
add
or
xor
pusha
jno
ret
jmp
sub
js
dec
jge
sub
push
lret
jae
in
xchg
fsubs
test
sub
pop
fdivrs
jecxz
call
adc
stos
stos
mov
jbe
sub
mov
jg
dec
lret
cwtl
inc
pushf
add
leave
cmp
sub
push
pop
fxch
repnz
js
test
sub
mov
mov
leave
dec
or
and
pop
jb
xor
mov
stos
fistl
minps
cmp
adc
sub
push
mov
push
dec
mov
fs
icebp
loope
mov
loopne
sbb
iret
iret
and
or
jbe
mov
fldenv
loope
sbb
es
test
add
push
movsl
mov
out
and
outsb
inc
pop
mov
push
jle
xor
sub
mov
mov
mov
stos
push
push
xchg
filds
cld
icebp
mov
xchg
adc
movsl
xchg
and
dec
inc
lahf
cmp
movsb
shr
jmp
les
jno
sbb
and
lret
push
stc
or
adc
adc
adc
dec
ljmp
mov
fsubp
lahf
ljmp
fnsave
loope
and
jbe
insb
cmp
inc
push
lahf
jmp
pushf
jns
mov
or
lcall
add
mov
push
sahf
push
inc
shll
cs
xchg
mov
jnp
mov
loop
daa
cmp
and
insb
push
mov
mov
or
dec
out
push
dec
mov
pop
dec
stos
aam
mov
jle
call
xchg
xor
ds
mov
inc
ret
adc
pop
push
pop
pop
sbb
xchg
call
mov
daa
stc
jecxz
adc
push
movsl
dec
pop
loop
cltd
sbb
jo
bound
adc
pop
ja
scas
mov
and
sbb
es
sti
sbb
or
jl
and
or
sbb
lcall
cmpsl
stos
pop
dec
jne
ja
arpl
push
ret
das
dec
sub
repz
imull
dec
adc
test
and
in
fcomps
cmpsl
loop
dec
fwait
aaa
jmp
push
sbb
add
xchg
cmpsl
cltd
jmp
cmp
hlt
out
dec
hlt
arpl
or
mov
fisttpll
mov
jge
pusha
or
aas
fwait
and
pop
mov
data16
out
push
in
sub
repz
cs
sbb
lds
fidivrl
loop
pop
cmpsb
push
adc
sbb
jmp
popf
cmp
imul
mov
sub
cmp
test
push
cmpsl
enter
jmp
xorb
and
repz
cmp
fwait
xor
push
xchg
scas
jmp
or
repz
push
push
adc
mov
pop
decl
cmpsb
rcll
dec
push
fbstp
or
push
call
lret
std
inc
rorb
addr16
imul
ds
pop
mov
mov
out
push
aaa
xchg
mov
shll
das
aam
push
test
jno
mov
cmc
push
xor
push
fs
int
fwait
arpl
mov
adc
imul
icebp
ss
inc
xchg
fldt
out
sbb
xorb
mov
sub
incl
push
loop
sbb
or
ret
pop
lret
arpl
aaa
mov
or
cmc
jmp
adc
jle
mov
mov
lods
push
adc
fcmovne
pop
push
rcrb
je
push
inc
out
aad
pop
hlt
cmp
sub
inc
cmp
dec
mov
pop
fisubrs
add
std
or
or
jecxz
cmp
inc
mov
and
lahf
sub
cmp
lods
out
adc
scas
push
aas
inc
ret
fwait
test
cmp
sub
rorl
pop
ror
or
xchg
popl
cmp
cmp
cmp
add
push
ljmp
pop
sub
jnp
push
cld
jne
sbb
cwtl
cmp
fimuls
push
pop
mov
xor
subb
aam
or
sarl
pop
sub
push
stc
xchg
xchg
xchg
pop
add
jo
and
stos
jg
rorl
cmp
jmp
insb
mov
clc
je
and
xchg
les
jl
dec
pop
push
sbb
xor
movsl
jno
sbb
imull
sbb
push
fwait
rcl
fcmovnbe
ljmp
dec
cld
push
repz
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
