push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
rorl
jle
sbb
sbb
div
stc
rorb
cs
shll
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
or
add
insb
xor
imul
daa
mov
popa
test
imul
stos
div
mov
test
movsl
and
or
xor
pusha
pop
xchg
push
and
add
mov
int3
out
gs
pushf
dec
xchg
jl
mov
popl
outsb
hlt
mov
mov
rorb
xchg
ret
sub
mov
mov
ret
stos
fisubs
ficomps
push
test
test
test
xchg
xchg
int3
arpl
test
ss
or
mov
scas
mov
or
or
insl
push
lods
xchg
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
mov
adc
sbb
push
mov
ljmp
cmp
pop
stos
ds
cmpsb
adc
call
push
scas
inc
pop
stos
fisttpl
or
inc
pop
lret
aaa
cs
fidivrs
sub
adc
les
aam
xor
in
ret
fisubs
fcompl
mov
int3
xor
inc
push
in
xor
push
iret
mov
mov
outsb
jns
fisttpl
mov
shl
lock
sub
cld
mov
daa
push
sub
out
xchg
mov
cmpsl
xchg
adc
pop
addr16
mov
fisttpl
fwait
mov
xor
jg
sbb
shl
scas
add
and
push
loopne
sbb
test
dec
dec
icebp
es
push
xchg
imul
filds
adc
inc
setne
cmpb
jg
adc
scas
mov
fmuls
pop
push
inc
movsb
dec
cmp
mov
or
ror
sbb
jp
out
repz
or
and
stc
adc
pop
mov
jno
push
adc
push
in
mov
xor
gs
jae
xchg
mov
pop
rclb
mov
mov
mov
lret
jge
cmp
mov
aas
push
sbb
mov
aaa
clc
inc
sub
test
xlat
inc
test
cmpsb
jae
fcomps
movsb
loope
push
sbb
sub
fisubs
mov
xchg
loope
xchg
xchg
out
lahf
dec
sub
icebp
lret
frstor
pop
and
adc
cld
dec
mov
jp
subb
inc
pop
rcrb
out
dec
int
aad
ret
inc
dec
xlat
and
push
push
aaa
dec
repz
popa
insl
add
test
sub
xor
pop
stos
int
insl
lock
push
dec
xor
inc
adc
mov
jno
inc
aaa
adc
cmc
add
pop
add
cli
enter
subl
cmpl
shll
adc
fwait
aad
mov
dec
popf
pcmpeqw
ja
out
cmp
js
add
ljmp
jl
cmc
cmp
jle
test
insb
jmp
ljmp
mov
mov
dec
xor
jge
out
int
rorb
jns
add
cli
mov
rcll
cli
ja
jmp
iret
mov
es
jle
dec
mov
popf
jg
and
or
std
cld
jle
adc
lods
out
adc
je
xor
jl
cs
inc
jle
and
arpl
dec
iret
outsl
ja
fldl
inc
les
cmp
stos
cwtl
aas
add
pop
pusha
ret
xchg
ss
push
testb
sbb
gs
xor
les
data16
add
lahf
ljmp
repz
sbb
cwtl
ud0
popa
sbb
in
shlb
sarl
adc
loopne
aad
xchg
popa
je
leave
xor
ds
dec
lcall
or
xchg
loope
es
dec
test
imul
ret
int3
leave
jno
ds
mov
jl
jne
outsl
dec
pop
dec
icebp
jge
ret
stc
sbb
fmul
cmp
lahf
ljmp
inc
fidivl
dec
jae
ret
fstps
add
fwait
and
jmp
stos
pusha
clc
orl
lds
sub
or
inc
outsl
sbb
xchg
sbb
lods
pop
jnp
cld
mov
cmp
insb
pop
test
lods
out
in
xlat
jp
js
sbb
cmp
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
lods
cltd
mov
sahf
adc
sbb
or
add
fwait
xchg
xor
pop
jge
inc
sarl
adc
cmp
sub
jle
lret
sub
adc
pop
xchg
adc
fcmovne
sub
enter
add
add
adc
fistps
cmc
pop
or
push
cmp
add
mov
hlt
in
or
mov
pop
mov
insl
xchg
mov
sbb
popa
mov
mov
jecxz
hlt
jo
fsubr
and
decl
mov
std
imul
add
pusha
or
je
pop
xchg
pop
ret
jo
sub
out
or
add
inc
rcr
pop
rclb
xlat
out
out
sbb
movsl
push
add
xchg
sbb
xlat
bound
dec
js
shlb
loope
out
movl
mov
mov
rcr
bound
push
jle
mov
jmp
leave
push
cmpsl
sahf
xor
insl
pop
push
ficompl
pushf
ja
hlt
sbb
call
mov
pop
lcall
jae
sub
jae
in
mov
jne
lock
pop
jb
and
mov
inc
call
subl
or
sbb
call
sbb
mov
add
in
push
js
iret
movsb
test
push
data16
pop
mov
mov
pop
xlat
mov
out
cmp
pop
mov
push
test
dec
xlat
pop
sub
hlt
cltd
jp
aas
sub
sub
into
sub
std
outsl
and
fcomps
inc
adc
inc
adc
les
vpandn
xor
in
fdivr
lcall
push
mull
lea
sub
cmc
out
sti
mov
jae
inc
pop
lret
into
cmp
les
ret
dec
push
push
mov
and
fucomip
mov
jg
leave
and
sahf
cmpsl
pop
pushf
jl
ret
loop
movsb
loopne
std
loop
int
mov
mov
fcoms
call
cmc
fbld
mov
cld
adc
loope
mov
notb
mov
add
xchg
push
iret
hlt
jmp
sbb
repz
jecxz
push
in
lea
insl
xor
aam
cmp
cs
call
cld
or
sub
or
mov
addr16
inc
addr16
sub
pop
repz
xor
mov
outsl
rorb
popf
adc
sbb
jnp
sub
xchg
int
popf
lods
loope
and
push
dec
and
rolb
pop
jg
out
arpl
popa
jb
push
pop
sbb
pop
fldcw
cmpb
fcomps
loop
les
pop
out
loope
mov
scas
push
stc
std
cmp
rclb
test
pop
mov
roll
adc
jp
orl
add
pop
dec
inc
pusha
lock
lcall
inc
imul
mov
jne
mulps
adc
adc
mov
sbb
dec
push
fnstsw
jns
xchg
xchg
movsl
in
mov
imull
sbb
div
jne
mov
fbstp
add
mov
es
cmp
adc
repnz
leave
dec
dec
mov
nop
push
sub
add
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
sub
fbstp
sbb
es
mov
scas
in
stos
cmc
test
movsl
lea
ret
mov
mov
repz
inc
repz
or
inc
jecxz
gs
shll
or
push
mov
adc
pop
sub
add
sbb
or
add
add
inc
loop
or
ret
inc
mov
arpl
mov
push
add
jno
nop
dec
push
dec
fnstcw
dec
call
xchg
in
das
cs
mov
fiadds
addl
jbe
sub
insl
pop
faddl
xchg
jmp
test
push
cltd
imul
into
pop
popf
stc
sub
je
and
xchg
loope,pt
cld
insb
lods
test
jecxz
or
lods
sarb
xor
sub
mulb
aad
inc
pushf
out
adc
cli
stc
dec
out
push
dec
sbb
fistl
outsl
jns
daa
int
int
aad
xor
and
sti
jb
inc
mov
mov
lock
lea
filds
pop
repnz
jo
push
cs
mov
bswap
dec
daa
mov
jbe
inc
int3
or
push
imul
std
or
cmp
sarb
and
push
faddl
lods
and
ficompl
test
sub
adc
mov
cmp
aaa
mov
out
inc
push
adc
dec
and
jge
push
inc
cmp
or
add
mov
jle
dec
inc
jl
pop
in
add
jb
xorl
outsl
mov
loopne
loopne,pn
push
mov
hlt
cmp
ficoms
in
mov
jle
xchg
inc
adc
or
cmp
repz
mov
pop
ret
cli
leave
adc
pop
or
fwait
mov
cltd
jns
jo
push
mov
shr
rcrb
sbb
sarb
mov
loopne
pop
inc
cs
mov
push
cs
sub
add
cmp
fnstenv
xchg
sbb
sbb
daa
stos
ret
shrb
mov
es
outsb
fcoms
clc
mov
dec
popf
cmp
sbb
sub
jp
mov
jbe
jl
jle
pushf
roll
stc
rolb
psubb
push
xor
push
or
add
aaa
mov
js
cwtl
rcr
scas
scas
dec
mov
outsb
mov
je
dec
pop
clc
fidivs
dec
mov
mov
cmp
aad
adc
jb
cli
push
ja
aam
xchg
or
mov
and
popf
scas
int3
loope
jl
pop
mov
fdivrs
mov
out
jle
jmp
dec
testl
dec
les
ja
fldenv
jmp
and
inc
outsb
mov
cmpsl
adc
xchg
add
ja
xchg
fildll
pop
int3
gs
loopne
xor
adc
mov
fstpl
push
jecxz
cmc
out
xchg
xor
lds
js
ret
push
data16
push
jno
rcll
push
rorl
adc
push
sbbl
out
addr16
or
inc
pop
xchg
dec
pop
or
cmp
xlat
sub
test
ja
mov
adc
arpl
mov
sbb
int
cmpsb
adc
roll
mov
jmp
psubd
scas
dec
rolb
addb
xchg
sub
out
ljmp
scas
push
sbb
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
push
cld
sbb
sahf
adc
sbb
es
movsl
jmp
sub
lods
push
mov
and
cmp
mov
push
dec
lods
out
in
inc
mov
shlb
rcll
rcr
push
mov
inc
adc
cltd
orl
push
pop
pop
xchg
loop
mov
stos
shlb
sbb
mov
sub
subb
in
icebp
mov
cmp
out
mov
fs
sbb
stc
xor
stos
xor
popa
cmp
pop
stos
pushf
lods
mov
js
rcrb
out
push
test
lea
sbb
jbe
leave
ret
int
movsb
orl
sbb
in
mov
fcompl
cmp
jno
arpl
inc
mov
add
push
adc
xchg
cmp
adc
fdiv
fisttpl
pop
lds
mov
ret
fldcw
mov
loope
rcrb
adc
sub
add
jb
aaa
iret
push
and
cmp
test
jmp
mov
pop
jae
cmp
movl
cltd
sbb
pop
fs
test
loope
sub
scas
es
popf
jg
sub
call
lret
insb
jae
rcll
mov
lahf
ds
sub
mov
jl
inc
add
int3
push
sub
in
sti
imul
js
push
repnz
adc
add
int3
jns
push
loopne
mov
stos
sti
ret
or
sub
clc
shl
aaa
mov
popa
lahf
orb
pushf
cmp
push
add
jnp
adc
stos
cmp
mov
pop
dec
sub
sarb
inc
sub
repnz
add
out
xchg
push
sarb
shll
cmp
js
mov
sti
pop
sbb
lcall
cltd
mov
lods
insb
inc
jb
jbe
not
jae
lgs
xchg
fmuls
ds
fidivl
pop
lock
sbb
scas
test
inc
cmp
sub
jnp
popa
mov
xor
jns
outsl
mov
shll
push
insl
jmp
aaa
cwtl
mov
lods
mov
cli
or
lds
jnp
jge
mov
mov
bound
ds
xchg
sbb
jge
xchg
cmp
sbb
mov
xchg
jmp
and
int
stos
fldenv
roll
cmpsl
es
into
lcall
mov
jge
int
xchg
test
loope
mov
nop
push
jae
popf
mov
mov
cmc
arpl
movsb
mov
test
sbb
jp
jl
in
rcl
orb
outsl
adc
jecxz
xchg
pop
mov
adc
mov
jae
mov
jl
mov
mov
dec
push
push
es
aas
into
lret
sub
cli
push
ror
xchg
sbb
sahf
std
sub
push
cwtl
push
sub
and
jae
out
stos
add
xor
mov
scas
inc
popf
mov
adc
pusha
pushf
jo
cmp
pop
sub
in
out
mov
pop
test
push
call
mov
fwait
bound
jbe
cmpsb
or
loope
dec
mov
mov
iret
sub
jb
std
pop
sbb
sahf
hlt
pop
loope
sahf
in
sbb
mov
add
mov
mov
dec
int3
popf
int3
mov
testb
push
push
sbbl
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
jo
hlt
sbb
sahf
adc
sbb
adc
xor
jg
xchg
fs
lcall
or
cwtl
push
or
mov
hlt
in
lahf
int3
cmp
insb
fstpl
idivl
xlat
pop
loop
push
mov
inc
cmpsb
or
popa
xor
sub
adc
sbb
jo
hlt
les
or
orl
push
aas
cmp
mov
mov
jnp
mov
icebp
adcb
pushf
inc
inc
aas
movsl
das
push
leave
mov
test
dec
jge
mov
sti
andb
mov
bound
call
call
adc
xchg
mov
cmp
mov
lock
push
ja
adc
dec
or
adc
clc
pop
and
test
xchg
adc
movsl
push
clc
jp
and
fwait
lock
cmp
inc
mov
sub
xchg
sbbl
jae
loop
pop
fs
outsb
aam
jl
and
int3
mov
mov
les
out
push
mov
push
in
out
and
add
fdivl
jmp
stos
adc
lock
fwait
mov
push
xchg
pop
bnd
testb
add
cmpsb
mov
fsubrl
sub
mov
inc
bound
sub
cld
pop
inc
push
mov
test
jo
pop
fnsave
cmp
ljmp
mov
inc
mov
std
dec
imul
cs
cli
out
adc
sbb
push
xor
mov
shlb
sub
nop
mov
enter
in
in
in
and
stos
dec
cmp
or
push
into
and
cli
xchg
sub
scas
rep
mov
stos
push
or
jmp
mov
loopne
sub
ss
ljmp
xorl
push
push
cmp
lret
int3
mov
stc
pop
mov
xor
jns
out
daa
cmp
xchg
or
cs
and
pop
aam
je
repnz
scas
sbb
mov
in
pop
jno
jnp
pusha
pop
mov
ss
aaa
add
xor
push
iret
xchg
stc
mov
cmp
fcmovnbe
hlt
xchg
pusha
std
add
cmp
or
fistpl
movsb
jae
negl
out
push
jmp
aad
push
pop
and
cli
or
jnp
addb
push
shrl
jl,pt
cmp
insl
add
icebp
out
adc
mov
aas
out
push
jo
stos
sub
fildl
aas
mov
push
xor
xor
lods
lcall
cwtl
das
loop
mov
ret
enter
ret
jne
movl
mov
out
pop
dec
loop
cli
jge
cmp
cs
outsl
lock
push
testb
xlat
stos
cmovo
jl
mov
ret
mov
test
pop
dec
sub
jp
fidivl
lods
push
push
dec
pusha
pop
cli
adc
pop
mov
dec
xchg
stos
mov
in
adcb
shll
inc
jns
mov
push
push
jecxz
js
sub
outsb
or
add
mov
sub
pop
test
je
in
sbb
imul
sbb
jbe
and
lret
arpl
add
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
or
sbb
mov
pop
cs
ror
xchg
xchg
imul
fstps
fidivs
decb
xor
and
fisubs
pop
sarb
sbb
inc
daa
jmp
xor
mov
adc
hlt
test
aas
sti
xor
aam
push
mov
rolb
xchg
and
sbb
dec
aas
xor
rorl
adc
loope
sbb
jge
pop
inc
lea
adc
orl
adc
pop
dec
gs
lahf
stos
dec
lods
movsb
push
clc
jnp
fisttpll
adcb
xchg
mov
popa
loop
xchg
xchg
xor
inc
xchg
jne
mov
ret
cld
shrl
les
push
push
cld
test
ret
mov
push
stos
movsl
xor
xor
int
push
xchg
push
sub
ja
fstpl
cmpsb
pop
rep
popa
and
je
pop
dec
mov
adc
mov
test
pop
push
and
mov
fsubrl
dec
js
inc
push
xchg
jns
push
imul
es
lods
ljmp
xchg
loop
xchg
adc
jecxz
mov
lret
adc
andb
add
fisubs
mov
insb
gs
add
mov
sub
and
pop
addr16
adc
int
fs
cmc
subl
add
loope
mov
ja
cld
fdivs
xor
adc
dec
mov
or
icebp
stos
inc
fstl
xor
adc
enter
outsl
adc
xor
push
hlt
es
sbb
jecxz
lret
das
mov
cmp
adc
aad
xchg
xchg
je
push
test
xchg
mov
jge
test
inc
sbb
xor
xchg
and
sbb
testl
pop
mov
or
or
and
ss
and
xor
jle
adc
sub
aaa
js
jae
pop
outsb
add
aad
mov
mov
cmp
mov
mov
sub
mov
pop
out
jne
add
and
decb
cmp
dec
sbb
js
cmp
push
jge
inc
in
fidivrl
jne
inc
mov
push
sub
xor
mov
jl
std
and
inc
shr
adc
xor
lcall
testb
in
imull
aaa
leave
ljmp
push
inc
sar
pop
adc
jbe,pt
enter
cmp
fsubrs
cmp
jnp
cmp
push
lods
shr
arpl
cmp
push
jbe
inc
dec
dec
lret
xchg
enter
mov
jnp
cld
or
das
int3
cmpsb
ljmp
mov
test
scas
fdivl
scas
cmpsl
jp
push
imul
push
push
xchg
adc
or
push
cmp
inc
je
call
es
xlat
jmp
shld
les
xor
out
pop
mov
add
cli
dec
jne
nop
in
scas
inc
lds
pop
mul
loope
das
jle
das
xor
dec
bound
dec
fsts
loop
imul
mov
mov
mov
inc
stos
rorl
xor
sub
inc
aas
sbb
xor
or
pop
jle
jae
imul
add
cmc
jmp
aaa
sbb
mov
arpl
sti
jae
xchg
pushf
push
and
jle
or
andl
or
mov
cmp
movl
jne
jmp
sbb
fldt
sbb
or
test
sbb
stos
sahf
test
int3
mov
cltd
aad
xor
dec
mov
into
sub
or
mov
mov
jmp
in
add
mov
adcb
pop
push
dec
inc
mov
jp
and
cmp
lock
and
sbb
das
call
mov
sub
sahf
call
repz
dec
cltd
fcom
lods
popa
dec
movsl
addr16
mov
cmp
lret
mov
lret
arpl
ljmp
push
stos
mov
rorb
pop
mov
lds
or
dec
or
jnp
mov
mov
lods
inc
adc
fcomi
add
add
lock
pop
xorl
or
scas
jle
daa
add
lock
adc
jo
pavgw
mov
fimull
mov
bound
jp
dec
jnp
jg
dec
popa
dec
sbb
movsl
loop
jmp
jbe
xor
sbb
inc
notb
fsts
or
int3
sub
add
outsb
or
push
loopne
dec
fdivrl
ss
or
sbb
cmp
add
fcomi
add
sbb
hlt
in
xchg
jmp
daa
and
inc
popa
sub
and
enter
adc
or
jle
or
mov
jne
cmpb
pushf
loop
dec
cmp
adcl
xchg
fadd
pop
shlb
int
aam
mov
ss
lock
jne
shl
icebp
jno
ret
mov
std
scas
sti
pop
sub
sti
fnstenv
lds
scas
and
cmp
in
hlt
sar
mov
pop
in
fcoms
dec
mov
cli
cmp
iret
xor
std
cli
sahf
data16
nop
aas
mov
lods
idivb
insb
stc
movsb
mov
inc
es
xchg
loop
loopne
cld
stos
pop
and
repnz
cmp
in
jb
sahf
rcr
push
loop
dec
sbb
sub
inc
mov
ljmp
push
aas
or
pop
daa
adc
sub
push
lods
test
in
cmp
ror
sub
fisttpl
leave
cs
jo
jecxz
in
popf
xor
and
or
adc
or
test
pushl
mov
sbb
cmc
sbb
lret
test
scas
stc
sbb
xchg
push
mov
and
mov
cmp
add
mov
shl
movsl
jge
dec
jno
sub
xor
test
xor
or
xor
push
sbb
cld
nop
lret
add
cmp
aaa
arpl
push
test
adc
adc
push
data16
xchg
pushf
int3
mov
sbb
push
xchg
mov
movsb
je
inc
mov
rorl
adc
out
cmp
dec
mov
mov
out
push
push
adc
add
rorl
fstpt
xchg
add
fneni(8087
mov
push
andl
dec
mov
cltd
movsb
dec
lock
jno
mov
je
test
rclb
sbb
test
mov
add
sarl
mov
inc
insl
popf
mov
pop
leave
aaa
mov
sti
pop
dec
and
dec
and
jle
in
call
add
mov
hlt
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
adc
in
test
insl
repnz
pop
int
mov
mov
adc
rcl
int3
push
notb
loope
cli
adc
push
sub
cld
xor
and
jnp
inc
pop
scas
inc
push
int3
xor
pop
data16
xor
sbb
cmc
cmpb
adc
jmp
or
lods
fldcw
mov
jmp
xchg
push
pop
push
mov
lea
imul
sahf
inc
into
andl
dec
xor
das
mov
into
or
dec
push
ficompl
add
xchg
and
adc
aam
and
cmpsl
outsl
loop
out
sbb
jg
inc
in
fptan
jmp
dec
loope
movsl
aad
pop
inc
cmc
inc
adc
jmp
push
mov
ret
adc
cmp
push
mov
adc
pushf
inc
pushf
pop
mov
in
and
stos
jl
sbb
pop
in
jmp
push
fs
shrl
adc
test
pop
in
scas
sub
and
fcoml
xchg
jg
jbe
iret
xchg
xor
fildll
int
sbb
adc
pop
xchg
and
xchg
xchg
int3
outsb
mov
mov
sub
inc
movb
leave
cmp
cltd
xchg
jo
stc
jbe
insb
pop
and
std
jge
sbb
add
out
or
scas
addr16
movb
leave
mov
aas
dec
shll
popa
cmc
mov
pop
sbb
dec
mov
adc
into
popf
sub
or
pop
aam
pop
inc
inc
dec
in
lds
fstps
ja
jns
aaa
pop
jo
cmp
sarb
insl
adc
adc
pop
clc
sbb
cli
sub
pop
std
outsl
je
jl
jle
cmp
jle
adc
loopne
mov
push
xor
lock
inc
dec
dec
sbb
cmpsb
adc
mov
je
scas
outsb
sbb
xchg
adc
mov
addr16
pop
nop
clc
sub
mov
cmp
sub
push
adc
mov
mov
cld
dec
loop
xchg
pop
mov
and
sub
fdivs
fsubrs
xor
adc
cmpsl
lcall
xlat
inc
mov
imul
push
out
and
mov
pop
inc
pop
data16
test
mov
cmp
xchg
stos
adc
popa
lahf
jl
cmpsb
ss
rcr
test
inc
push
in
stc
xorb
in
xor
and
jns
fld
push
xchg
mov
mov
inc
inc
std
in
cmp
sbb
xchg
fildll
mov
mov
into
dec
mov
push
push
insb
mov
aad
psubusb
xor
and
inc
jle
xlat
adc
out
mov
sarl
jae
fisttpl
sub
das
mov
sahf
adc
jns
pushf
scas
test
xor
lock
addr16
adc
mov
pusha
iret
push
mov
mov
inc
pop
adc
adc
jnp
adc
imul
into
iret
mov
push
ljmp
and
andb
push
lods
repnz
es
push
adc
sub
enter
adc
into
decb
sbb
xchg
dec
cmp
sub
adc
ja
fcmovne
fdiv
mov
pop
and
cwtl
dec
addb
cli
mov
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
mov
sahf
adc
sbb
push
fistpll
push
fwait
repnz
movsb
push
push
or
addl
inc
iret
in
hlt
pop
xor
push
sbb
sub
out
out
mov
sti
test
fwait
adc
or
push
lds
mov
dec
aaa
xor
mov
jb
int3
test
and
dec
pop
bound
inc
cmp
lar
test
lods
or
aas
inc
fsubr
es
adc
adc
jno
call
inc
and
xor
or
jns
pop
xchg
jne
or
fmull
ds
or
xchg
inc
sbb
insl
out
sbb
push
xchg
data16
in
enter
call
sub
jbe
and
xchg
les
pushf
xchg
mov
insl
rorb
push
adc
xchg
mov
mov
shrl
xor
jbe
and
outsl
add
dec
xchg
adc
mov
xor
mov
into
add
jmp
out
fnsave
add
loope
pusha
rorl
and
mov
xlat
pop
pop
push
scas
jp
std
jo
in
outsb
popf
pop
dec
fs
hlt
xor
cmpsl
pop
repz
cs
mov
pop
es
fimull
and
jmp
mov
jne
or
xchg
lods
pop
mov
adc
stc
xchg
in
cmp
cs
mov
sub
ret
pop
gs
and
jge
loop
mov
mov
mov
cld
sbb
imul
call
ret
and
fists
addb
lods
ss
aaa
scas
int
mov
push
cwtl
pop
out
pop
and
jle
out
sahf
cmpsl
add
lret
scas
fiaddl
pop
push
fildll
dec
push
add
and
mov
loope
gs
out
fidivs
mov
lahf
iretw
lea
xor
popa
nop
xchg
xchg
mov
push
mov
sbb
mov
out
inc
dec
mov
int3
ss
mov
sub
or
scas
add
inc
test
dec
lock
inc
scas
insb
jl
pop
enter
lods
clc
dec
mov
sbb
cltd
dec
pop
lea
sarl
xor
clc
lahf
cwtl
je
fcompl
xchg
jae
lahf
aaa
mov
pop
stos
sbb
leave
inc
jmp
push
sti
scas
les
int3
mov
out
push
mov
data16
loopne
gs
fisttps
cmp
mov
inc
ds
xchg
dec
dec
orl
sub
mov
ret
inc
cmpsl
add
nop
cmp
mov
jle
cmpsb
lea
imul
and
and
xchg
or
fs
xchg
or
xchg
loope
std
xor
test
shl
arpl
pop
mov
lcall
subl
push
data16
and
pop
sub
cld
dec
mov
lret
pop
push
or
rcrl
icebp
scas
jnp
inc
jl
sub
pop
xor
sbb
mov
movsl
movl
cwtl
lds
test
fnsave
dec
insb
imul
sub
pop
icebp
sbb
jl
iret
in
add
xchg
imulb
push
or
mov
js
addr16
das
fsubrs
mov
mov
jmp
stos
inc
inc
jmp
cmpsl
les
adc
mov
dec
aad
int3
mov
and
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
fwait
dec
xchg
sbb
sahf
adc
sbb
rcr
push
cmp
jmp
xchg
inc
inc
xchg
popf
mov
lret
cmp
sbb
sbb
xchg
or
insl
push
and
inc
jne
adc
inc
std
jecxz
jae
mov
xor
rclb
lahf
in
call
in
leave
sub
mov
cmp
fisubrs
mov
fisttpll
movsb
and
stc
add
mov
cmp
mov
cwtl
mov
jae
or
or
jecxz
test
rolb
mov
inc
mov
lods
test
xor
mov
jge
fildl
sub
jg,pn
enter
mov
ret
jmp
and
xchg
mov
test
dec
lock
cli
xchg
mov
pop
mov
gs
cs
cmpsb
in
or
mov
or
das
shrl
cmpsb
loop
movsb
movsl
cmp
jl
stc
push
mov
push
subl
int3
scas
pusha
icebp
xchg
test
cli
loope
test
mov
mov
cmp
mov
sub
test
xor
out
leave
add
mov
add
repnz
inc
or
pop
mov
push
int
mov
jecxz
aas
in
stos
popf
or
pop
addr16
jno
dec
mov
iret
cmp
pop
push
aas
fidivl
lods
add
xchg
mov
and
sub
fs
imul
movsb
adcl
mov
imul
shrb
adc
add
mov
movsb
xor
cmp
outsl
jbe
movsl
add
mov
aam
sti
or
sub
ja
mov
lock
push
repnz
test
cmp
imul
push
int3
and
test
push
mov
insl
int3
mov
push
in
push
adc
push
mov
jo
mov
fwait
movsl
nop
insl
pushf
jb
lds
or
xor
std
xlat
filds
jns
cld
mov
leave
adc
jg
lods
add
mov
icebp
sub
cmpsb
leave
sti
push
vsubpd
aam
lcall
pop
adc
pop
push
or
and
fistps
dec
dec
adc
mov
outsb
push
ret
add
cmp
loopne
in
dec
int
xchg
outsb
pushf
or
adc
push
sbb
push
and
dec
inc
daa
mov
cmp
das
jno
lds
pop
push
int
lcall
mov
pop
lods
dec
stos
xchg
sti
imul
xor
shr
and
and
pop
fistps
xchg
mov
xchg
xor
and
lret
add
test
rorb
sbb
inc
cwtl
cli
jecxz
lcall
push
inc
adc
jne
aad
aad
xor
dec
xchg
pop
insb
les
pop
xchg
sub
arpl
dec
xor
push
jnp
scas
leave
add
std
mov
sub
mov
adc
fists
jne
fiaddl
push
test
out
push
or
data16
ret
negl
icebp
mov
sub
fldt
push
push
xor
or
cmp
pop
scas
pop
add
cmp
add
cmp
sub
jb
ds
add
mov
roll
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
sbb
aam
es
loop
jns
cmp
gs
cmp
mov
incl
adc
xor
or
cmp
fwait
adc
push
push
jp
cmp
dec
rolb
adc
jle
out
jae
mov
cld
push
ficompl
dec
xchg
daa
adc
scas
push
adc
mov
inc
insl
push
lret
inc
rolb
mov
scas
jb
bnd
clc
xchg
lret
rorb
cs
sbb
or
lock
jg
les
push
imul
inc
or
pop
and
push
mov
adc
popa
rclb
ficoml
sbb
movb
cmp
mov
pop
int
mov
push
lret
adc
xchg
test
mov
sti
sarb
adc
faddp
xor
ret
fiadds
stos
cltd
lahf
dec
xchg
sbb
lcall
sub
outsb
out
add
push
ret
jmp
jmp
nop
mov
dec
rol
xor
aas
imul
mov
dec
fstpt
jno
cmpsl
inc
jecxz
adc
lret
jne
lahf
push
int3
push
movsl
mov
pop
roll
jecxz
cmp
pusha
mov
push
push
sub
js
add
roll
fldcw
xor
mov
into
popf
jl
ret
xchg
mov
or
lods
fstpt
mov
stos
mov
scas
cmpsl
scas
orb
pop
mov
cmc
lds
push
pop
add
cmp
cmpsb
cmp
lcall
push
in
hlt
and
pop
hlt
in
and
pop
add
ja
mov
mov
or
push
pop
in
movsl
nopl
scas
sbb
js
bound
mov
test
addr16
popa
pop
std
dec
cmpsb
mov
lret
jp
add
mov
cmp
fadds
sbb
inc
insl
fnsave
out
sbb
popf
dec
imul
insb
pop
add
xchg
movsl
aad
mov
pop
pusha
mov
nop
rcl
andb
shlb
inc
loop
inc
add
mov
xchg
aam
jno
lds
enter
or
ss
mov
and
fldenv
or
cmc
into
arpl
xor
cli
repnz
sahf
xor
imul
out
nop
sbb
mov
fsubl
push
daa
pop
sbb
leave
sti
jle
test
add
hlt
sahf
mov
int
mov
push
rol
jmp
cmpb
push
fcomps
out
movsb
mov
xlat
dec
xor
mov
leave
data16
dec
aas
sarl
push
lods
mov
pusha
iret
roll
dec
xchg
add
in
fisttpll
jae
mov
or
loope
adc
lods
bound
lds
and
ja
decb
imul
sarl
xor
mov
ret
data16
pop
xor
lds
add
xchg
std
and
pop
daa
or
rcrl
not
cwtl
mov
jmp
mov
insb
dec
xor
ret
sub
inc
dec
imul
mov
sbb
insl
xchg
in
lds
jle
add
mov
fnclex
xor
mov
jo
js
scas
aaa
adc
or
scas
pop
punpckhwd
rcrb
sub
insb
out
pop
stos
or
cmp
add
jge
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
lds
mov
rcrl
sahf
adc
sbb
je
xor
and
fwait
pop
dec
mov
out
dec
jle
addr16
in
xchg
fistpll
push
inc
jo
push
notl
sub
inc
mov
xor
adc
shll
jp
mov
pop
jns
outsb
jp
xchg
jb
scas
in
pop
rorb
je
in
ja
je
out
fidivl
decb
jmp
mov
and
add
and
sbb
rorl
sub
stos
mov
push
cmp
aam
sub
ret
jl
pop
jg
mov
in
or
xorb
xor
pop
aam
or
movsl
mov
pusha
shlb
pop
xorb
fmuls
push
std
pop
scas
push
and
fisubrs
xor
sub
insb
lock
mov
xchg
test
in
hlt
mov
pop
inc
xor
fmull
std
leave
sahf
sbbb
sbb
jns
in
arpl
add
mov
cld
pop
aas
jmp
dec
cmpps
xchg
test
cwtl
cmp
nop
sbb
adc
push
add
scas
je
daa
mov
push
mov
xor
mov
lock
dec
pop
ret
movsb
mov
test
or
call
and
fistpl
mov
push
add
sub
cmp
hlt
push
push
fs
test
out
mov
clc
xchg
das
xchg
das
stos
sub
mov
fistpll
inc
das
pusha
inc
pop
pop
fmul
mov
jecxz
dec
dec
in
test
stc
icebp
mov
into
push
cs
jo
bound
mov
lcall
jge
mov
pop
sbb
movsb
mov
fucompp
push
sub
test
popf
lret
iret
lods
aad
dec
cli
fs
test
in
sub
les
faddl
mov
stc
les
and
lods
sub
cmpsb
fdivrs
mov
daa
pop
adc
xor
rcl
xlat
cmp
jnp
inc
mov
sbb
insl
jge
and
outsl
fwait
xlat
xchg
dec
dec
rcrl
into
addl
inc
addr16
or
mov
jecxz
cwtl
rolb
cs
mov
loope
dec
inc
mov
jmp
push
std
lret
scas
stos
inc
cmc
daa
push
stos
gs
mov
xlat
icebp
xor
popa
adc
adc
into
dec
sbbb
inc
mov
add
stos
icebp
jp
inc
cmp
les
jo
and
cmp
pop
sub
mov
outsb
mov
cmp
ss
cltd
jns,pn
push
push
arpl
ds
pop
sub
ret
add
mov
lahf
in
cmp
sub
inc
push
xor
push
dec
icebp
clc
das
hlt
inc
jbe
mov
dec
adc
bound
popa
pop
sbb
adc
movsl
ja
inc
mov
nop
aad
sbb
or
jo
mov
stc
cmp
xor
popa
xor
jge
mov
stc
es
cmp
jge
sbb
ret
sbb
lret
inc
adc
mov
out
push
pop
int
lea
dec
lds
aad
lods
subl
push
inc
ja
xchg
fsubrs
sarb
arpl
out
fnsave
and
sub
sbb
outsl
and
mov
shrl
push
jmp
imul
sbb
mov
lret
push
in
sbb
push
je
add
loope
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
out
mov
sbb
sahf
adc
sbb
lds
stos
mov
clc
in
jecxz
mov
jmp
push
fldl
lea
jmp
popf
aad
nop
push
aas
mov
inc
sbb
ja
out
nop
outsb
incl
clc
shr
lret
out
stos
repnz
mov
arpl
das
jmp
ret
mov
sub
pcmpgtd
cmpsl
cmpsb
inc
int3
test
clc
stos
in
add
push
sti
dec
movsb
maskmovq
mull
pop
adc
and
mov
aad
lea
push
orl
dec
icebp
arpl
mov
jp
push
sbb
fucom
insb
push
and
inc
cmp
xchg
xchg
call
push
or
xchg
or
adc
lods
lcall
test
push
clc
xor
sub
or
mov
cs
loop
fcomps
push
loopne
pop
xchg
jl
push
and
push
inc
inc
call
jne
add
cmp
cltd
lds
jge
mov
fwait
xchg
push
fsubrs
sbb
cltd
jp
adc
cmp
sub
push
mov
rcr
mov
xor
mov
outsb
or
or
hlt
inc
mov
dec
jle
mov
or
pop
std
and
push
pop
mov
fcoml
or
in
arpl
pushf
lds
std
adc
pop
outsl
sbb
addl
icebp
or
sbb
ret
inc
pop
dec
or
jl
lock
xchg
inc
testl
insl
filds
pop
sub
out
adc
in
cmp
inc
sub
mov
test
cmc
xor
jae
adc
and
push
jo
inc
enter
xchg
mov
mov
add
aad
push
lcall
mov
mov
inc
enter
pop
ja
in
sbb
cli
xchg
ja
xlat
aad
stos
data16
xor
pop
in
in
inc
jnp
jae
rcrb
sub
push
xchg
xlat
xchg
lods
sub
or
or
dec
mov
mov
bound
add
push
adc
jle
xor
xor
lea
xor
mov
sarl
mov
and
fstpl
sub
add
insl
movsl
cs
fldcw
and
inc
stos
add
cld
sub
jns
cmp
arpl
cwtl
pop
xor
jnp
int
mov
std
fs
pushf
add
jnp
divb
cwtl
dec
mov
xor
inc
lcall
lock
push
cltd
fcomps
inc
or
or
push
addl
dec
adc
shlb
pop
sbb
imul
mov
jns
xor
and
xor
lret
fistpll
inc
inc
mov
call
dec
inc
push
popf
pushf
fmuls
enter
bound
jge
inc
push
or
sbb
je
add
sbb
dec
adc
ficomps
or
add
fwait
sbb
test
movsb
stos
adc
je
fnsave
jle
loope
mov
outsl
fsubrs
jno
xchg
xorl
test
xorb
ja
shll
jne
or
mov
or
push
jl,pt
push
imul
arpl
sbbb
mov
cmpb
mov
lods
mov
dec
cmpsb
sbb
and
lock
into
aas
insl
or
dec
xor
or
inc
cmp
add
sbb
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
sub
jle
mov
sbb
mov
stc
mov
test
aad
in
cmc
js
jnp
data16
cli
and
pop
sub
xchg
xchg
sub
push
mov
pop
adc
dec
and
and
xchg
loop
xorl
mov
cli
pop
mov
adcl
aam
cld
push
mov
fsubrl
hlt
daa
or
mov
test
int3
push
xchg
les
outsl
lcall
or
pop
mov
cmova
rolb
bnd
loopne
repnz
sub
dec
sbb
push
scas
mov
xchg
push
daa
mov
jbe
lahf
push
push
jle
call
jge
mov
fnstenv
or
idiv
xchg
sub
fnstsw
pop
xor
push
sbb
sub
pop
mov
push
add
outsb
loope
js
push
mov
mov
stos
repnz
and
bswap
sub
xchg
std
pop
hlt
jns
pop
lahf
or
mov
icebp
and
and
push
adc
dec
or
movsl
leave
dec
daa
dec
or
popf
mov
sub
mov
movsb
cld
mov
xchg
add
mov
mov
push
stc
mov
in
dec
dec
pop
sub
movsl
addr16
ds
daa
dec
iret
jo,pt
popf
test
ficoml
sarl
mov
call
mov
out
ljmp
pop
dec
in
mov
mov
lods
fbstp
push
loop
in
lods
xlat
out
jge
shll
pusha
adc
or
push
nop
andl
cli
pop
cmpsb
sub
movsb
adc
mov
fsubl
mov
mov
pop
iret
sub
lret
out
xor
dec
test
add
mov
adc
orb
outsl
xchg
cmc
es
cmp
inc
lods
add
jno
cmp
mov
xor
push
inc
arpl
fcmovu
in
or
jge
xchg
inc
jmp
test
pop
adc
inc
add
xor
inc
fnsave
scas
mov
sub
xlat
dec
xor
sbb
inc
dec
pop
in
gs
in
push
jo
jae
in
test
fdiv
pushf
test
mov
popf
and
inc
fsubrl
addr16
xor
pop
out
fdivp
imul
mov
or
fldl
push
jns
arpl
jge
push
or
lock
dec
xchg
push
test
cltd
repz
mov
inc
push
adc
add
call
add
mov
mov
adc
mov
mov
inc
dec
xchg
dec
pop
cmp
sub
pushf
xor
pop
xorl
in
insb
mov
push
daa
out
dec
out
sub
flds
js
cltd
push
pop
cmp
xor
scas
pusha
out
inc
pushf
lret
int3
cmpsb
divb
xchg
stos
rclb
push
popa
fs
xor
xor
jl
in
dec
sbb
imulb
adc
jmp
mov
orl
cmpsl
dec
or
es
adc
arpl
in
insb
in
movsb
pop
push
adc
xor
cltd
lds
sbb
xor
lcall
aam
inc
loopne
movsl
jns
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
jno
stos
repnz
sbb
cmpl
aaa
pop
cwtl
pop
mov
adc
cmpsb
gs
and
xchg
cwtl
pop
pop
orb
mov
or
or
sarl
mov
movsl
cld
dec
dec
jg
inc
cmpsl
mov
scas
sbb
scas
rolb
xor
outsb
es
mov
out
cwtl
pop
push
push
jmp
les
adc
enter
push
mov
xchg
pop
pop
leave
jge
sbb
mov
xchg
stos
faddl
xor
nop
adc
xchg
cld
adc
fiaddl
cmc
xchg
popl
mov
inc
std
cs
je
arpl
cmpsl
adc
jge
int3
jns
dec
rorl
int
decl
jl
push
pop
repnz
adc
mov
xor
pop
lods
cmovns
sbb
cmp
bound
lret
test
cmpsl
jne
out
in
push
mov
call
sbb
movsl
out
iret
pop
mov
dec
iret
pop
sbb
aad
outsl
dec
adc
xor
inc
and
cmp
lret
loopne
aaa
fmuls
ret
and
push
scas
push
mov
cvtps2pd
mov
das
lods
in
mov
fiaddl
je
inc
lods
dec
jecxz
mov
dec
mov
scas
fcmove
jmp
pop
dec
push
leave
out
ja
rclb
arpl
sahf
jle
pop
comiss
cwtl
std
stos
push
cltd
add
rolb
fisubl
out
push
xchg
xchg
cmp
sti
xchg
cli
ja
adcl
mov
aaa
int3
adc
test
jno
enter
add
sbb
push
inc
inc
xchg
mov
push
and
sub
xor
or
xchg
ret
sbb
icebp
cmpsb
add
les
enter
fmul
jge
int
sbb
leave
jo
aaa
push
adc
pop
and
js
stc
fistpll
and
jnp
or
cmc
pop
cmp
push
xchg
mov
push
pusha
cmp
hlt
movsl
loopne
cmpsl
push
xchg
movsl
xor
inc
sti
orl
enter
xlat
int
popa
and
or
inc
inc
adc
divl
test
ret
cltd
jne
pop
xchg
xor
sar
xchg
add
jb
incb
sbb
and
out
cmp
mov
sarb
adc
xor
mov
sub
xchg
add
xchg
jno
mov
mov
add
hlt
scas
dec
add
dec
daa
subl
faddl
add
repnz
jp
jp
orb
aaa
or
cmpsb
jnp
ret
mov
lret
mov
inc
dec
lahf
mov
popa
cli
mov
mov
movsb
add
xchg
sbb
insl
sub
adc
flds
in
jmp
cmp
mov
movsb
or
jg
and
dec
add
push
jae
outsl
mov
mov
out
jp
push
out
xchg
jl
test
and
xchg
mov
arpl
pop
scas
lcall
add
insl
mov
out
fisubrl
push
or
inc
insl
lret
xor
aas
mov
repz
cmp
xor
inc
mov
push
pop
push
hlt
fsubp
cli
sub
fiadds
mov
pop
jp
lods
push
mov
dec
jnp
jb
or
testb
pop
adc
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
xchg
cmp
jle
mov
sbb
into
pop
out
inc
out
in
add
inc
loope
mov
sub
mov
mov
imul
imul
pop
sub
nop
xor
fcoml
pusha
dec
mov
mov
stc
jg
push
inc
inc
insl
gs
push
mulb
mov
scas
test
dec
cltd
mov
stos
push
loop
rclb
or
jp
mov
push
lea
notl
and
imul
aam
jne
push
cli
mov
in
xor
or
das
mov
movsl
pop
inc
jb
ret
sbb
loopne
push
arpl
cltd
mov
or
fldt
fcompl
das
shlb
cltd
mov
stc
xchg
cli
mov
sub
lret
mov
push
leave
nopl
jmp
dec
and
sbb
sbb
push
rcrb
push
mov
shrl
jp
insb
jno
push
mov
repnz
dec
test
push
into
mov
adc
push
fidivrs
scas
jmp
jle
mov
jnp
je
addl
popa
lds
or
int
rorl
mov
cmp
test
pop
cmp
mov
inc
pop
jl,pt
bound
jne
cmc
gs
pop
mov
inc
mov
sarl
cld
sub
ret
and
incl
jecxz
xchg
loopne
pusha
pop
mov
push
lock
lret
jb
xchg
inc
mov
shll
jmp
dec
cmc
sub
xchg
xor
pop
pop
lds
jl
fdivrl
mov
in
lcall
mov
outsb
dec
fistpl
lods
xchg
inc
clc
pop
dec
xor
lock
in
inc
push
arpl
pop
cmpsl
lds
ret
adc
sub
pop
mov
je
mov
fldenv
cs
pextrw
inc
cmp
sbb
inc
loopne
popa
adc
repnz
std
out
pop
mov
jo
repz
inc
sub
cmp
mov
pop
mov
or
pop
or
insl
sub
fisubl
cltd
insb
dec
xor
mov
jnp
sub
push
ljmp
push
hlt
jnp
dec
in
decb
in
and
in
outsl
data16
sbb
push
clc
add
jmp
in
daa
out
stc
rorl
in
sarl
addr16
popf
call
mov
sarb
fstpt
or
add
shrb
sub
mov
aam
jae
mov
cltd
mov
outsl
dec
jecxz
mov
cltd
cmpsl
out
dec
jno
insl
mov
mov
pop
or
pushf
call
dec
pop
pop
outsb
mov
and
cmc
ja
or
sub
scas
or
mov
fisttpll
stc
std
ja
sub
jae
and
ss
sbb
or
or
lret
xchg
pop
popf
test
pushf
sub
pushf
adcl
dec
cmpsb
ret
pop
pop
mov
jne
pop
pop
sub
arpl
xchg
rorb
xchg
fs
testb
loop
push
div
int
ss
shrb
cmpsb
mov
pop
xchg
adc
or
jp
sbbl
push
and
xchg
movsb
lea
das
out
ljmp
decl
ret
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
aam
loopne
xchg
push
lahf
cmp
inc
sub
incl
and
or
lret
sbb
jne
ucomiss
lret
shlb
pop
push
jg
cwtl
xchg
xchg
cmpsl
inc
and
jnp
adc
and
xor
pop
adc
scas
push
add
repz
test
loop
cltd
push
cmpsl
sub
cmp
pop
aas
pop
outsb
in
inc
jns
mov
dec
add
lret
loope
cmp
add
or
jbe
add
test
xchg
xchg
adc
push
sbb
cli
cmp
nop
add
mov
xchg
mov
pop
sbb
sti
std
insl
inc
jg
fildl
fnstenv
pusha
xchg
pushf
popf
cmp
push
dec
xchg
jno
cmc
fadds
inc
add
mov
bound
mov
js
xchg
cmp
mov
or
xchg
jg
mov
xlat
pop
rorl
int3
ljmp
sarl
arpl
sahf
pop
or
adc
push
mov
scas
adc
out
mov
jle
push
cli
sahf
pop
movsl
adc
jb
addr16
roll
sub
or
xchg
jge
xchg
mov
sbb
sbb
int
jmp
and
dec
andb
shrl
cmp
pop
xor
imul
int
xor
or
pop
jl
xor
pusha
insb
shll
jp
andl
mov
push
fidivs
imulb
jecxz
imul
nop
sarl
mov
addl
push
bound
mov
rol
dec
ret
lock
invd
imul
pop
dec
shll
pop
adc
out
pop
dec
inc
iret
inc
jmp
ljmp
adc
cmp
adc
test
pushf
pop
js
mov
out
into
jno
test
and
sti
xor
jle
in
or
leave
jo
insb
mov
imul
iret
dec
xor
hlt
jmp
mov
out
mov
pop
ret
test
int
fadd
call
mov
inc
std
rclb
fmull
lret
rcrl
mov
aas
sbb
or
pop
push
cli
lret
int
aad
inc
push
popf
sbb
and
ret
pop
mov
cmp
das
lahf
mov
loopne
loope
fsubp
cmpsl
push
jno
pop
lcall
push
jecxz
pop
or
inc
mov
loop
ljmp
jnp
sub
sbb
stos
test
js
cmp
xchg
sub
fisttpll
icebp
push
cmp
adc
adc
or
popa
mov
jb
mov
xchg
pop
sbb
movsb
cmpsb
mov
jae
mov
aad
andb
xor
xchg
push
cmp
pop
cwtl
int3
in
xorb
xchg
push
push
or
sub
push
add
mov
and
and
mov
xchg
movsb
or
aaa
push
jae
sahf
es
push
pop
cmp
out
shlb
adc
es
fwait
and
lock
cli
mov
in
cmp
jp
push
mov
jns
inc
adc
or
xor
pop
jecxz
sbb
sbb
fwait
int
call
lret
jecxz
inc
or
sti
cmp
pop
lret
or
add
sub
adc
stos
cltd
cmc
add
je
mov
lahf
jp
push
sub
pop
jge
sub
xchg
lcallw
sub
jbe
cmc
loope
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
mov
push
sbb
daa
enter
pop
rcrl
mov
push
xchg
shll
push
sti
sbb
or
dec
mov
mov
sub
je
testb
mov
sub
in
dec
loope
aam
rcl
mov
inc
insl
incl
add
movsb
jno
push
cltd
out
cwtl
pop
lahf
je
shll
int3
fcompp
pop
add
mov
cs
jnp
outsl
loop
sbb
lock
out
xchg
aas
adc
sbb
xchg
dec
sub
jle
push
adc
jbe
xor
xchg
loop
push
or
mov
insl
ljmp
cli
fldenv
or
out
shlb
and
jbe
and
and
push
jg
nop
cwtl
filds
xchg
and
xorb
add
sub
sub
addr16
mov
push
xchg
in
stos
push
jb
xchg
adc
or
pop
dec
jb
pop
cs
or
pop
sarl
mov
shrb
dec
sub
push
sbb
orb
jne
mov
lods
sbbb
cmc
cltd
cwtl
fsubl
je
mov
ss
shr
scas
bound
mov
lods
xchg
leave
popf
or
cmc
xchg
jge
dec
and
fdivs
jle
mov
push
jmp
sbb
add
icebp
stos
cmc
or
pop
sbb
push
push
es
pop
js
js
fwait
test
aaa
test
push
pop
mov
push
sbb
push
and
pop
lock
xor
ficompl
mov
loopne
cmpsb
pop
xor
mov
push
cmp
push
pop
test
sbbb
jge
lret
push
les
sub
mov
clc
sbbl
out
scas
sbb
ret
pop
lock
or
cmp
fisubrl
out
mov
cmp
and
dec
dec
stos
daa
jne
insl
loop
insb
arpl
enter
and
fstl
loope
and
mov
mov
js
jecxz
push
inc
shll
ret
xor
aad
lock
xor
jecxz
pusha
imul
adc
test
dec
stc
cmp
pop
pop
pop
nop
or
insb
and
test
mov
inc
jb
nop
lea
pop
fnstsw
mov
nop
daa
std
stc
mov
nop
cmc
stc
rol
and
test
mov
push
insl
pop
sbb
sbb
mov
xchg
mov
push
jbe
push
clc
aad
add
lds
dec
sti
movsl
popf
mov
adc
popa
out
push
jo
addr16
scas
mov
and
pushw
call
mov
jmp
ds
pop
pop
ffreep
xor
hlt
mov
ds
jns
xor
mov
cmpsl
cmpsb
and
cmp
mov
jnp
lods
cli
andb
sbb
pop
xchg
int3
push
rcll
jo
mov
mov
add
call
sbb
ds
data16
xchg
pop
or
pop
cli
dec
mov
xor
cmp
pop
fldt
jmp
clc
dec
addr16
lods
and
mov
fisttpll
fistpll
lcall
jnp
mov
les
jge
aaa
or
call
insl
xor
xor
sub
xor
cmp
fists
push
lahf
mov
je
js
push
gs
jbe
mov
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
jae
jo
mov
sbb
je
xor
outsb
aam
test
cmp
add
sbb
and
or
loopne
push
aam
in
rol
inc
sbb
or
jae
inc
pushf
clc
xchg
out
ret
cmpsl
leave
jb
aad
pop
dec
or
ljmp
cmp
dec
je
and
scas
cmc
cwtl
cmpsb
sub
icebp
jb
pop
aaa
jp
jecxz
pusha
sub
inc
pop
fcmovu
xor
push
roll
orb
pop
mov
sar
and
add
pop
ds
push
mov
movsb
lods
push
add
sub
lcall
sbb
insb
enter
ficomps
ficoml
adc
loope
pop
pop
xor
rol
aaa
je
inc
dec
and
jns
rorb
shll
cmpsl
in
dec
or
rcrl
pop
aaa
rcrl
out
out
mov
sub
dec
jns
enter
jge
subl
push
hlt
inc
mov
rorb
mov
push
xchg
push
add
sub
dec
xchg
pusha
jbe
and
sub
rcll
icebp
xor
shlb
cmp
mov
mov
mov
push
dec
pop
pop
loope
add
or
ljmp
mov
and
inc
fwait
jp
daa
jge
orl
mov
mov
mov
aaa
push
pop
stos
sbb
cmp
push
adc
push
sbb
mov
shrb
mov
scas
xor
push
aad
aaa
stos
cld
pop
jnp
repz
scas
or
lods
jecxz
stos
mov
lcall
sbb
loope
inc
mov
iret
repz
inc
aas
sbb
shlb
mov
mov
xchg
cs
and
repz
sar
fyl2xp1
out
stos
jns
int
jmp
and
out
jmp
aas
pop
adc
cmp
push
inc
adc
ds
lcall
ret
and
pop
jmp
arpl
sub
faddp
mov
shrb
loope
dec
leave
mov
movsl
dec
add
rol
ds
ret
and
adc
cmp
int
aas
test
clc
rcll
jo
gs
bound
dec
aas
xor
rorl
jns
xchg
shlb
adc
shrb
cli
ljmp
sbb
nop
sbb
mov
faddl
add
nop
dec
xchg
mov
mov
daa
inc
mov
push
inc
jg
ds
adc
jno
loope
fnstsw
add
mov
mov
mov
sbbl
ds
xchg
mov
sbb
and
mov
mov
cmp
cmp
leave
shlb
cmp
and
jle
or
mov
mov
inc
xor
add
add
scas
imul
xchg
fnstsw
cmpsb
popa
jns
ret
push
inc
ja
ds
sbb
jecxz
out
and
adc
stos
mov
arpl
movsb
std
and
dec
cmpsl
cmc
cmp
add
aad
xchg
les
jns
scas
jo
xchg
sub
sbb
imulb
cmc
ja
dec
or
mov
mov
out
cmp
rclb
cltd
pop
in
jne
mov
mov
push
testl
xchg
jno
call
inc
lock
sub
repnz
in
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
add
sbb
sahf
adc
sbb
mov
ljmp
xor
sub
loop
mov
insl
or
scas
decl
mov
xchg
lahf
rcr
sub
dec
cmp
add
cli
lahf
inc
xchg
adc
xlat
pop
xor
or
push
jg
adc
cmp
dec
inc
sbb
jp
add
mull
jnp
cmp
inc
mov
mov
mov
ja
cmpsl
test
leave
int3
jge
outsb
jne
inc
xchg
xlat
imul
rcrl
pop
loop
lods
aaa
mov
or
test
not
fwait
test
ret
xor
sub
js
in
insb
dec
push
pusha
xchg
sub
pop
push
cmp
adc
dec
mov
inc
add
fstps
mov
mov
push
push
xor
pop
inc
mov
pop
fs
cmpsb
inc
loop
push
addr16
shrb
add
xor
xchg
dec
and
push
test
add
js
movsl
sti
cs
adc
inc
data16
daa
and
xchg
test
mov
in
add
outsb
or
sbbl
dec
pop
or
rorb
inc
adc
pop
push
sbb
inc
mov
adc
jp
xchg
stos
push
xor
rorb
mov
pop
pop
or
xchg
pop
mov
cmp
gs
rclb
mov
mov
aam
and
sub
mov
xchg
xor
mov
in
or
adc
mull
int
fisttpl
or
sarl
imul
adc
outsl
jae
das
leave
fwait
test
test
jnp
dec
bound
pop
scas
mov
in
inc
test
inc
cmp
shlb
fldcw
cmpl
sbb
xor
push
xchg
test
lds
push
xchg
lret
dec
cwtl
cmp
loope
aaa
jmp
icebp
filds
xchg
cmp
jno
jl
xchg
iret
xor
mov
cmpl
xlat
sbb
jmp
cmpsb
sub
sbb
cmpl
cmp
push
movsl
movsl
jmp
jg
mov
push
loope
jmp
ret
cs
mov
imul
jbe
dec
jmp
inc
add
incb
in
inc
push
push
xchg
add
lcall
sbb
ljmp
jecxz
test
orl
popf
fnsave
cmp
push
sti
sbb
stos
or
call
sbb
cmp
fnstcw
xor
add
das
jmp
fs
imul
sarb
mov
mov
ja
xor
adc
ret
adcb
fildl
mov
call
shll
xor
out
mov
in
dec
adc
adc
inc
xchg
push
and
nop
add
in
jb
movsb
pop
popf
imul
sub
not
fsub
aas
push
inc
push
xchg
push
xor
mov
pop
push
mov
jp
xchg
xor
cli
enter
push
xlat
imul
add
out
xchg
insl
iret
mov
push
xchg
adc
jb
movsl
mov
test
xor
or
inc
lea
fwait
shl
lea
or
shl
leave
pop
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
push
sbb
sahf
adc
sbb
idiv
mov
dec
call
push
ljmp
popf
xchg
mov
or
clc
shrb
out
mov
les
call
loope
dec
ror
lea
ret
cmp
popa
nop
mov
dec
cld
dec
ss
cltd
inc
out
lods
cltd
jno
jb
jae
dec
push
mov
popf
cmp
aam
mov
sbb
mov
sub
iret
jp
mov
sbb
mov
repz
sub
mov
mov
push
pop
cld
xchg
mov
in
arpl
test
rclb
mov
mov
lods
adc
xlat
xchg
test
mov
aam
or
and
out
push
jne
notb
lret
aam
mov
scas
int
push
cwtl
mov
mov
add
insl
movsl
mov
test
push
test
loopne
mov
mov
push
lret
and
iret
stos
btc
jbe
pop
inc
int
fsubrp
push
lsl
ret
xchg
and
sbb
cmp
or
cmc
adcb
xacquire
xor
out
jns
jge
cs
insb
cld
sub
mov
jle
es
ss
fwait
cmp
sbb
pop
js
mov
iret
mov
or
pusha
mov
mov
sub
sbb
insl
dec
xchg
add
sbb
in
mov
imul
mull
adc
dec
cmpsl
test
pop
sub
jmp
mov
stc
sti
pop
int3
cmpsb
stos
mov
lock
sti
add
pop
ds
rclb
jge
sbb
stos
xor
pop
out
adc
loopne
icebp
flds
xchg
gs
je
dec
mov
mov
mov
push
mov
sti
xchg
fidivrs
push
lcall
nop
inc
add
sub
jns
aaa
int3
cmp
add
clc
mov
mov
dec
and
scas
loop
pop
ja
xchg
and
fwait
in
jns
xchg
adc
leave
jl
jecxz
outsl
jp
test
insb
push
dec
das
cmpsw
cmp
sti
dec
cmpsb
shl
jmp
inc
clc
xor
lock
ja
xor
data16
jle
sub
cs
pop
or
xor
in
call
cs
dec
dec
sahf
jnp
xor
sahf
push
div
or
cmpsl
fdivrs
flds
test
add
aas
hlt
fdivrp
inc
jbe
jl
sub
dec
lds
push
aad
xor
add
outsb
jno
fwait
pop
iret
sbb
xor
rcll
popf
mov
dec
fsubrp
cld
xchg
push
int
dec
popf
adc
and
lods
ja,pn
mov
jne,pt
dec
divb
ja
jnp
mov
pop
mov
mov
rcl
or
shll
jl
or
push
shll
outsb
arpl
xchg
sbb
jp
lret
lds
sbb
sbb
in
std
imul
test
sub
das
or
xlat
xlat
stc
sahf
loope
xchg
jl
sub
xor
cltd
daa
lods
lock
scas
and
in
and
or
data16
mov
mov
sub
jno
xor
enter
pop
int
cmp
lcall
fmulp
out
mov
imul
in
outsb
gs
cmc
divl
xchg
inc
inc
les
jae
inc
int3
jmp
repnz
jmp
imul
pushf
pop
jle
arpl
sbb
cmp
fsubrp
xor
orl
dec
movsl
cmp
jb
jg
cmc
int3
cld
stos
aaa
mov
imul
scas
adc
imul
cwtl
cmc
mov
hlt
insl
pop
and
push
or
mov
int3
ret
push
adc
pop
imul
pushf
or
pop
stos
mov
mov
scas
adc
xchg
jnp
sbb
xchg
inc
mov
xchg
sbb
cmp
insb
leave
mov
pop
sub
loop
fistpll
cltd
mov
nop
add
mov
addb
jns
sbb
pop
pop
adc
xchg
outsl
inc
lock
jno
scas
ds
mov
pop
out
push
pop
mov
jl
loopne
inc
and
dec
jge
loope
fmull
and
adc
cli
lds
into
cmpsl
and
jle
dec
bound
push
mov
jb
mov
divl
clc
nop
sarl
hlt
jne,pt
movsl
pop
mov
mov
mov
mov
push
in
inc
stc
lahf
in
mov
je
cmp
imul
mov
stc
out
mov
inc
or
jbe
mov
lcall
jmp
inc
cltd
adc
outsb
mov
add
sub
test
xor
pop
outsb
stos
addr16
loopne
mov
jno
mov
nop
imul
mov
pop
ret
pushf
pop
add
push
cli
add
xchg
in
add
jg
push
inc
mov
mov
jno
fildl
js
mov
mov
jecxz
ljmp
and
mov
add
adc
add
mov
aad
sahf
or
jns
fnstenv
out
es
xchg
mov
loopne
pop
cmpsl
lcall
pushl
and
js
sub
pop
cwtl
mov
sub
mov
pusha
pop
in
mov
add
mov
xchg
cmp
xchg
ret
cmp
fstenv
sub
dec
mov
in
mov
adc
ds
cltd
int3
pop
add
sub
pusha
xor
dec
std
stc
sub
fsub
insb
addl
cmpsl
frstor
xor
lods
int
lods
pop
mov
add
jmp
adc
cmp
xchg
push
bound
int
inc
rclb
and
hlt
mov
movsl
js
or
adc
fnsetpm(287
fisttpl
mov
jmp
adc
xchg
xor
xor
sub
inc
pop
imul
or
out
ror
xor
mov
popa
repz
mov
faddl
test
add
fdivrs
sbbl
inc
lret
test
cs
fisubl
cs
test
inc
imul
hlt
scas
pop
xor
out
insl
cmp
pop
das
hlt
pop
sub
cmp
mov
out
mov
jo
or
mov
cld
mov
enter
mov
push
cwtl
pop
jmp
lcall
mov
loope
cli
fadd
adc
inc
ret
dec
in
insb
push
stos
gs
lret
fdivrs
cltd
pop
xchg
repnz
sbb
aad
sub
fs
shlb
pop
ror
sub
ret
enter
adc
mov
adc
ljmp
dec
mov
add
scas
cmp
mov
out
mov
cld
jo
sti
js
ret
lea
xor
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
jle
outsl
sbb
sahf
adc
sbb
sub
cli
xor
push
das
add
sbb
mov
xor
jo
adc
popf
data16
adc
fbstp
and
sub
adcb
inc
hlt
mov
jnp
lret
jb
in
lods
scas
insl
sti
bound
rcr
mov
ss
insb
xor
movsl
leave
jae
fimuls
jecxz
pop
shlb
sbb
push
or
aaa
enter
mov
mov
jl
pusha
cmpsl
jmp
imul
shll
sub
stc
orl
mov
xlat
test
je
lock
clc
sahf
je
pop
sub
cld
xor
jo
dec
movsl
js
lahf
cwtl
in
insl
scas
mov
stos
xchg
cli
sub
xchg
push
sbb
daa
jg
push
or
and
jns
lds
sbb
pushf
into
cwtl
jp
pop
icebp
pusha
jne
adc
jp
xor
sbb
in
mov
lret
jo
mov
mov
shufps
mov
sbb
adc
dec
pop
out
in
mov
icebp
dec
sarl
adc
mov
sub
movsl
scas
adc
ljmp
das
fdivr
ret
cmp
lahf
in
test
mov
jge
mov
inc
push
xchg
lods
scas
das
cli
jl
push
std
adc
cld
inc
cltd
jp
std
sar
push
into
sbb
ja
cli
in
jmp
outsb
jb
hlt
adc
sub
mov
imul
jg
sub
fistpl
jmp
scas
pop
pusha
fstps
pop
mov
cs
adc
sbb
dec
mov
add
sbb
mov
loopne
movl
pop
lahf
shlb
daa
arpl
mov
xchg
insb
ficompl
cwtl
pop
out
scas
adc
mov
cs
int3
xchg
sbb
push
cli
ffree
sbb
loopne
movsb
adc
push
jns
jnp
xchg
scas
data16
pop
cli
mov
mov
ds
jl
cmp
pop
jecxz
pop
scas
sarl
mov
push
mov
outsb
or
add
and
iret
aad
cmp
aaa
aam
adc
sub
xor
dec
push
dec
ret
and
insb
and
scas
mov
daa
sub
aaa
addb
adc
xor
mov
out
cltd
cmp
shr
cmp
stos
lds
or
xchg
sub
mov
cltd
mov
xchg
pop
ss
out
sti
andb
lret
popf
sbb
inc
dec
decl
adc
aas
push
gs
loope
imul
inc
xor
mov
cmp
insl
data16
mov
push
mov
mul
jb
lods
pop
xor
xchg
pop
imul
fs
jbe
push
cs
loope
mov
out
dec
mov
fisubs
add
jg
mov
cmpsb
into
pop
sbb
loope
call
dec
pop
mov
xchg
sahf
sbb
in
je
int3
sub
cmp
push
cmp
leave
lcall
repz
pop
cld
inc
and
mov
jmp
xor
pop
mov
xor
mov
daa
cwtl
push
cmp
xchg
sti
push
xchg
sbb
xchg
call
pop
cmp
sub
mov
js
adc
iret
xchg
fistl
les
icebp
aas
or
push
xchg
mov
jge
fiaddl
mov
push
xchg
add
lods
mov
inc
xchg
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
add
sahf
adc
sbb
js
clc
in
pushf
neg
roll
xorl
mov
push
mov
cmp
cmp
test
push
mov
js
int3
inc
sub
lods
cs
and
pop
sti
jl
inc
push
ret
mov
adc
add
sbb
iret
jmp
dec
add
mov
addr16
xchg
lret
or
sub
adc
in
and
cmpsl
inc
push
ja
push
xorl
fwait
scas
cli
orl
arpl
push
scas
das
mov
ret
out
aad
mov
ljmp
stc
cmp
ror
mov
fisttpl
loopne
fwait
aam
loope
jno
mov
mov
in
xor
xchg
cmpsl
mov
imul
aas
push
mov
lea
and
mov
cs
jbe
pusha
aas
xchg
pushf
mov
fwait
movsl
cmpsl
xor
fs
and
pop
in
inc
mov
fcoms
dec
or
lods
mov
stos
outsl
jge
imul
jb
cmp
out
or
cs
xchg
mov
mov
cltd
ss
or
scas
into
bnd
cmp
or
pop
insb
ret
bound
mov
cmpsb
and
rol
mov
cmpsb
or
pop
jecxz
dec
mov
cmp
icebp
or
enter
jne
std
dec
rep
ds
inc
ret
or
test
pushl
aad
stos
cmc
sub
dec
mov
jmp
inc
loopne
inc
jbe
xor
les
and
or
inc
pop
notl
add
jb
inc
jbe
in
push
in
adc
mov
sub
mov
fcoml
mov
cmc
sbb
insb
inc
outsl
add
cmpsb
insl
xchg
push
out
sahf
fldt
imul
cmp
lods
add
xchg
push
or
push
cmp
out
jo
std
sub
mov
repnz
orl
push
rolb
ljmp
add
pop
bound
add
adc
andb
adc
dec
test
mov
mov
sahf
sub
test
in
mov
dec
inc
loope
movsb
lods
jo
pop
out
lret
ds
and
dec
mov
mov
inc
sub
pop
xor
loopne
mov
arpl
push
leave
ss
std
stos
cld
inc
jne
cwtl
lret
jns
lods
pop
xchg
push
inc
adc
mov
or
out
or
rcrl
je
mov
xchg
daa
lds
dec
push
cmp
mov
inc
test
cld
xchg
test
aam
sbb
push
out
enter
ja
push
fbstp
int3
xor
xor
fadds
sbb
pop
xchg
enter
mov
jge
iret
jle
clc
cwtl
ret
mov
and
dec
cs
mov
sbb
ss
or
hlt
xor
sbb
mov
xchg
addr16
cwtl
lods
fs
cmp
xchg
mov
mov
jo
daa
xchg
adc
mov
stos
arpl
jno
push
in
loopne
jle
inc
subl
push
insl
in
jle
add
cmc
aad
out
jno
pop
mov
mov
fwait
test
add
xchg
sti
dec
push
orb
cmp
lret
or
mov
jge
pop
lods
rcr
imul
add
and
test
add
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
stos
sub
cli
push
adc
pop
dec
xor
sbb
mov
sbb
pop
cld
sub
xor
sub
mov
push
cli
xchg
push
scas
fwait
push
call
dec
icebp
sbb
ret
fs
lods
enter
mov
insl
cmp
xlat
adc
or
mov
mov
hlt
xlat
xor
pop
in
push
push
jmp
add
mov
lcall
mov
fidivs
xor
sub
cmpsb
xchg
pop
mov
pop
jmp
push
push
addr16
cmpb
mov
and
push
mov
mov
iret
dec
and
frstor
add
rol
cli
int3
jmp
nop
adc
js
je
dec
adc
sub
mov
mov
and
orl
xchg
or
test
add
push
push
inc
add
jp
inc
cmp
inc
leave
ds
or
fldt
cmpsb
outsb
out
pop
fwait
aaa
test
lods
fildl
add
stos
adc
movsl
and
imul
cltd
xchg
push
fimull
or
rcrb
add
or
pop
jnp
cmp
add
cmp
into
xor
sub
pusha
pusha
inc
dec
inc
push
add
sub
lock
inc
pop
inc
pop
xchg
xlat
jmp
add
xchg
stos
test
mov
add
mov
js
lods
pop
and
cld
xchg
or
rolb
jb
mov
into
xchg
call
xor
in
ror
aam
adc
xor
addr16
arpl
scas
bound
ja
jne
inc
mov
xor
push
lcall
xchg
imul
icebp
outsl
and
xor
les
fxch
enter
jmp
icebp
inc
dec
imul
mov
fdivrp
xor
or
adc
in
addr16
les
or
jns
cmp
jns
insb
or
push
pop
sub
in
mov
jecxz
jp
pop
or
sbb
inc
ss
xor
ja
push
leave
adc
mov
and
mov
testb
daa
sbb
mov
daa
dec
mov
jge
ss
mov
dec
inc
and
lods
and
or
outsb
lods
xchg
add
mov
pop
xor
sahf
repnz
notl
arpl
outsl
test
sarl
orl
and
inc
or
lret
mov
stc
mov
roll
mov
das
sbb
pop
stos
mov
repz
push
mov
jb
or
imul
rcl
xchg
in
adc
jb
xor
mov
cld
inc
stos
adc
sub
movsl
orb
inc
aaa
mov
xchg
and
inc
xchg
or
sub
gs
repnz
xchg
and
and
and
or
dec
inc
aad
shrb
ss
mov
push
lret
shlb
dec
pop
orl
push
cmp
sub
sub
push
popf
std
inc
test
inc
cmpsb
mov
mov
mov
hlt
aad
jmp
cltd
push
hlt
cwtl
pop
loope
fistpl
mov
or
or
sub
mov
hlt
jl
or
leave
sub
sub
bound
mov
mov
jmp
pop
jno
mov
xchg
lods
xchg
mov
sbb
sahf
adc
sbb
test
das
stos
push
jge
xchg
out
out
and
notl
rorl
lret
and
test
gs
adc
xchg
shll
in
and
movswl
sbb
cwtl
xchg
scas
mov
clc
sub
or
lock
and
pop
and
mov
mov
push
mov
into
test
mov
mov
lds
fiaddl
xor
jne
sbb
lahf
int
jne
cmp
mov
int3
pop
cli
mov
push
das
sarb
outsl
and
scas
pop
adc
adc
and
dec
add
dec
add
out
insl
pushf
or
imul
xor
xchg
cmp
out
cmc
aas
inc
dec
inc
pop
inc
in
jge
das
mov
in
sbb
rcll
fisubl
mov
out
dec
adcb
xrelease
es
in
sub
subl
fistpll
jnp
hlt
mov
pushf
cmp
out
push
pusha
mov
int
sahf
mov
lods
test
enter
adc
and
mov
jmp
cwtl
daa
push
cmc
insb
ds
mov
mov
mov
into
or
xchg
shll
js
xchg
das
in
ds
mov
adc
cwtl
les
out
popa
nop
cld
mov
std
mov
xchg
mov
mov
jg
push
sub
push
jg
mov
sarb
int3
mov
cwtl
mov
neg
ret
insl
sbb
add
cmp
pushf
pushf
cmp
jae
int
push
ficompl
jle
mov
pushf
push
fadds
mov
xor
les
inc
add
daa
ret
ss
dec
insb
out
and
in
pop
push
sarl
push
aad
dec
or
cmpsl
jge
dec
mov
std
pop
mov
imul
mov
pop
inc
out
push
mov
mov
fadd
or
push
jno
fstp
scas
sti
mov
sbb
in
arpl
std
push
cli
or
dec
push
xlat
stc
pop
mov
and
aaa
push
aad
xor
xchg
sub
imul
inc
or
test
push
or
lock
outsb
lock
cmpsb
or
push
push
mov
mov
push
sub
lahf
rclb
dec
sti
shr
es
dec
adc
jp
popa
mov
add
cmp
enter
xchg
adc
pop
inc
outsb
and
vmread
mov
xchg
out
clc
push
xchg
or
push
pop
mov
loope
mov
adc
jo
sbbl
pusha
imul
orb
arpl
adc
xchg
pop
pusha
pop
ja
or
sbb
fwait
mov
enter
adc
in
sub
pop
dec
bound
icebp
mov
jbe
lret
fcomps
clc
fwait
xor
movl
jns
adc
pusha
fnsetpm(287
rorb
mull
xchg
mov
and
dec
int3
jns
inc
rorl
dec
notb
cmpb
insb
mov
push
and
add
outsb
mov
aas
cmpsl
mov
xor
sub
cmc
xchg
dec
rorl
mov
into
lds
pop
dec
pusha
push
push
mov
pop
pop
scas
in
pop
lods
cmp
enter
sub
dec
dec
pop
jbe
lods
das
xchg
dec
xlat
mov
mov
in
cmp
hlt
pop
pop
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
addr16
xchg
jo
push
sbb
sahf
adc
sbb
lock
cltd
add
or
jmp
mov
pop
mov
stos
pop
inc
mov
and
lret
pop
mov
movsb
jle
mov
mov
pushf
pop
or
out
sbb
outsl
fwait
jl
xlat
add
add
das
pusha
repz
aaa
mov
in
sub
popf
lea
popa
in
adc
lea
xchg
lret
test
inc
pop
cltd
addb
shlb
int3
into
push
jo
sar
add
inc
mov
imul
inc
mov
int
lcall
add
data16
pop
xchg
sbb
pusha
fistpll
leave
mov
jle
stos
test
nop
pop
lea
data16
test
dec
test
lret
jnp
inc
int
add
jo
clc
loop
mov
test
fcmovu
into
jne
in
lock
jmp
pop
mov
loop
mov
aaa
push
dec
test
or
cltd
subb
rcrl
add
xchg
jns
cmpsb
push
out
repnz
into
mov
push
jle
cmpsl
sbb
nop
loope
dec
stc
inc
push
out
cmp
or
adc
addr16
adc
dec
fldt
ds
adc
fisubrl
sarb
or
jnp
out
pop
in
mov
es
aam
dec
out
lcall
clc
arpl
dec
scas
pop
in
push
jbe
cmp
pop
mul
xor
pop
add
insl
add
sbb
xchg
adcb
fmull
jge
mov
jp
ja
popf
jbe
add
or
data16
mov
js
inc
jge
pop
xlat
gs
inc
dec
shr
xchg
int
cltd
dec
sbb
out
mov
out
les
aaa
mov
rclb
mov
pop
or
ret
jg
mov
jp
mov
and
mov
xor
xchg
insb
sbb
stos
cli
das
pop
scas
rolb
lcall
jne
fcomps
mov
arpl
data16
enter
jb
pusha
out
xchg
xor
dec
sbbl
mov
out
xchg
pop
gs
push
mov
adc
pop
sbb
pop
fcmovnb
pop
pop
shll
sub
adc
jmp
mov
xor
jmp
cmp
test
inc
xchg
pop
inc
scas
popa
into
ret
push
dec
lret
cmc
jb
push
test
test
mov
inc
jp
fmul
fnstcw
outsb
je
xor
hlt
inc
push
mov
push
test
push
out
push
and
imul
mov
mov
mov
shrl
pop
push
dec
je
and
inc
add
and
adc
aas
adc
xor
rorl
xor
fwait
xchg
cmp
ss
lret
dec
sbbb
faddp
ljmp
lcall
adc
jne
mov
mov
movsl
insb
and
mov
jb
orb
test
outsb
fcompl
mov
dec
jp
popf
lret
xorb
int3
inc
push
mov
lea
and
xchg
cmp
rcr
scas
idivl
sub
push
inc
or
insb
repz
xchg
fwait
or
iret
and
test
inc
lea
ficoml
mov
xor
shld
xor
mov
jmp
loop
es
mov
stos
rorb
sahf
adc
sbb
insl
dec
sub
fs
cmp
inc
nop
fdivl
push
mov
pop
jecxz
fisubl
inc
inc
popa
pop
xor
jmp
mov
pushf
sbb
push
popf
lret
xchg
mov
mov
cltd
orl
mov
xor
lods
dec
ffreep
sub
push
inc
jae
lret
mov
pop
std
mov
xchg
repz
call
addb
cmp
mov
push
js
lods
repnz
inc
pop
cwtl
pop
icebp
jns
orb
lea
mov
sarl
or
xor
in
mov
xor
insl
fistl
loope
xchg
xchg
test
jbe
mov
pusha
cltd
enter
out
bound
or
xchg
lods
cmc
test
or
mov
xchg
mov
mov
add
addl
mull
inc
sbb
mov
jbe
add
lods
call
mov
sbb
in
dec
testb
add
loop
mov
mov
push
sbb
dec
call
fidivl
sub
ficoms
sub
xchg
data16
dec
cs
aad
std
sbb
pop
bound
rorb
inc
push
in
subb
cs
adc
jg
popl
mov
jne
lret
es
test
insb
cmpsb
add
add
popa
lods
iret
add
insw
stos
jbe
xchg
pop
and
adc
add
lods
xchg
mov
sbb
mov
inc
div
pop
dec
inc
adc
ds
call
xchg
out
scas
mov
sahf
rorb
lret
insb
mov
frndint
mov
stc
jg
mov
jns
jbe
aam
add
es
inc
dec
dec
dec
pop
nop
sbb
lods
stos
mov
shlb
dec
or
dec
lcall
jno
and
mov
popf
xor
mov
dec
xor
mov
call
mov
cmp
xchg
mov
dec
xchg
clc
lods
mov
sti
or
repz
arpl
sbb
insb
mov
int
addr16
xchg
repz
nop
or
jnp
mov
sahf
jne
lea
jo
mov
push
lret
xchg
pop
rcrl
test
cs
sub
loope
or
lock
dec
push
bnd
cmc
loop
icebp
lret
jae
add
es
outsl
jle
jns
add
aam
push
cmpsb
pop
jl
inc
cltd
into
dec
movsl
cmpsl
pop
jnp
fs
cmp
out
ljmp
sarl
leave
int
jns
mov
stos
pushf
stos
push
xor
jl
and
mov
jbe
out
mov
dec
inc
mov
inc
sarl
and
ret
lret
mov
xor
xor
push
movsl
mov
add
add
fcom
enter
mov
ret
lret
mov
icebp
or
sub
ja
cltd
sbb
xchg
arpl
adc
les
push
in
lcall
add
sti
jo
popf
adc
daa
rol
dec
pop
sbb
int
or
sahf
add
shl
insl
sbb
jne
orl
sbb
add
sbb
or
adc
outsl
add
dec
cmpxchg
movl
add
fldl
push
inc
icebp
lods
cmpsl
mov
into
dec
out
dec
or
pop
and
lret
in
push
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
repnz
mov
sahf
adc
sbb
jb
notb
lds
adc
lahf
inc
add
add
mov
sbb
and
cmp
pop
rorb
jle
in
inc
dec
scas
pop
xlat
jbe
lret
ss
xchg
cs
cld
dec
psraw
mov
sbb
js
je
rorl
in
aad
test
push
add
shrl
cmpsl
call
fwait
dec
push
xor
test
das
xlat
icebp
add
movsb
adc
sbb
iret
mov
repz
or
mov
xor
pop
push
mov
into
and
mov
pop
jge
push
int3
clc
movsl
cli
or
mov
and
std
lea
lcall
sbb
fistpl
and
sub
loope
aad
mov
js
int
jp
adc
mov
test
xor
outsb
jne
jp
ret
adc
fidivs
lods
es
fidivrs
pop
ja
mov
mov
and
mov
xor
js
in
shl
pop
push
mov
xchg
sbb
outsb
pop
test
sti
lods
inc
aas
ss
mov
xchg
fiadds
and
mov
add
hlt
cmp
mov
ret
inc
fimull
mov
lock
mov
adc
mov
jb
lret
pop
sbb
fs
movsl
pop
je
jmp
call
enter
lods
stos
xchg
mov
popa
flds
push
xlat
sbb
movups
test
lock
in
ficoml
stc
aad
xchg
inc
sbb
cmp
fdivrs
fs
rorl
xchg
sbb
jb
mov
sub
mov
dec
iret
push
sub
mov
lret
shlb
out
pop
sbb
ds
std
jns
shll
mov
icebp
mov
scas
xor
clc
lods
jnp
adc
dec
add
add
or
test
nop
js
notl
cmp
in
sub
fnsave
mov
inc
cli
addr16
pop
ss
xchg
mov
fildl
xchg
loopew
pop
lret
sub
in
fsts
add
movsb
dec
lds
jae
out
sub
bound
stos
cmp
addr16
push
pop
sbb
xchg
stc
xchg
pusha
pop
pop
and
dec
pop
and
add
cmc
in
push
imul
xchg
enter
push
xchg
inc
mov
mov
push
gs
jnp
push
dec
lock
inc
adc
or
and
testb
aam
push
icebp
cmp
mov
hlt
xor
ds
add
les
fdivr
pop
jp
or
push
mulb
sbb
jne
dec
int
jg
daa
mov
mov
add
sub
outsb
sahf
add
push
or
jb
jmp
test
fistpl
aam
jg
pop
add
dec
jno
jb
cli
pop
aam
adc
fscale
stc
sti
shlb
cmpsl
pop
out
mov
movsl
repz
mov
leave
xor
pop
push
in
inc
push
aad
mov
mov
fildll
mov
or
fsubr
fstps
insl
jecxz
mov
jle
fs
std
xchg
dec
jne
mov
mov
push
xlat
and
push
into
jns
loopne
lret
fildll
dec
mov
lret
xchg
aas
shl
mov
fimuls
shll
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
mov
sahf
adc
sbb
incb
or
es
imul
cs
xchg
movsl
xchg
or
outsb
mov
sbb
jp
lea
ljmp
xchg
pop
sub
shrl
mov
mov
mov
inc
nop
xchg
ds
xchg
arpl
int
inc
jmp
cmpl
es
mov
insb
push
mov
jecxz
jae
rorl
mov
push
sbb
push
movsl
jmp
sbb
fs
jg
mov
sbb
repnz
and
ror
or
adc
outsb
call
mov
mov
jbe
inc
and
mov
leave
in
ds
push
std
ret
inc
dec
push
add
jmp
sti
iret
test
lock
push
adc
sbb
add
rorb
outsl
sti
inc
int3
repnz
cmpb
pop
lahf
adc
sub
pop
pop
in
rorb
jo
mov
mov
fwait
lods
cmp
or
dec
mov
sbb
xchg
adc
push
sub
pop
mov
pop
dec
dec
mov
xchg
cmp
inc
insl
sbb
push
xchg
dec
int
clc
inc
ljmp
xor
or
jo
cmc
je
push
fnsave
fstpt
xor
dec
out
cmp
fidivrl
arpl
xchg
mov
cmp
inc
lock
cmp
xor
jno
mov
hlt
out
mov
into
fisubl
leave
addb
cli
xor
xor
out
lock
or
push
clc
mov
jl
shrb
hlt
aas
xchg
and
mov
mov
or
repnz
xor
out
out
push
scas
jge
mov
xchg
movl
je
pop
mov
cwtl
mov
mov
cmp
inc
dec
orb
in
sub
pop
push
enter
mov
dec
and
aaa
sub
sarl
xor
stos
mov
adc
rcll
sti
add
dec
xchg
addr16
shll
mov
nop
in
mov
xchg
inc
cmovno
pop
aad
fsts
inc
dec
xor
sti
push
or
and
lds
icebp
rcrl
adc
dec
mov
adc
pushf
adc
insl
push
push
repnz
lret
inc
aad
fdivr
mov
and
nop
push
sbb
inc
out
stos
mov
add
jg
sub
das
pop
jbe
and
dec
popf
add
mov
inc
inc
jo
cmp
xchg
repz
stc
movsb
fs
lret
push
call
ss
adc
jge
inc
mov
scas
aaa
sub
pop
shll
leave
repnz
notl
xchg
jp
jmp
imul
fs
clc
enter
xchg
mov
pop
push
cwtl
xchg
iret
pop
jnp
popf
bound
dec
add
lret
lea
push
inc
or
mov
push
mov
callw
push
lods
ds
sub
dec
out
sahf
idivl
and
mov
in
into
add
pop
cltd
xchg
inc
xchg
fisubrl
push
mov
mov
leave
xchg
enter
inc
outsl
mov
push
cli
dec
call
pusha
nop
scas
stos
fmull
hlt
push
fwait
xchg
and
cmp
inc
in
add
fnsave
icebp
mov
call
je
in
dec
xor
sbb
shl
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
mov
test
sbb
sahf
adc
sbb
xchg
cs
and
out
add
push
xchg
out
or
add
ja
fisubs
arpl
push
addr16
cmp
in
repz
xlat
mov
scas
fisubrs
cmpsb
ljmp
lods
xor
rclb
jp
mov
and
sub
adc
mov
push
ss
sub
jmp
cwtl
insl
test
clc
adc
ret
ss
and
sbb
and
dec
push
inc
cld
pop
testl
add
andps
pop
adc
hlt
add
pop
push
jnp
in
movsl
xlat
jb
repz
mov
mov
dec
xlat
dec
jb
mov
mov
sbb
jno
pop
insl
out
inc
mov
in
test
push
leave
popa
into
pushf
loop
fs
test
jbe
jno,pt
sbb
stos
xchg
stc
repz
xchg
popa
mov
mov
cmp
sbb
sub
inc
and
xchg
mov
sub
sub
jg
xor
into
add
mov
pusha
lea
sub
fbstp
shll
jle
test
jo
cmp
mov
sbb
push
sub
adc
sub
stos
add
stos
cwtl
adc
cmp
adc
vaddss
es
adcl
fwait
mov
mov
enter
mov
or
ret
icebp
shl
push
mov
divl
rcl
mov
sbb
leave
repz
inc
mov
push
jo
repz
fmul
stc
lea
hlt
xor
sub
push
out
cli
cmp
mov
lods
xorl
cld
pop
int
mov
sti
mov
arpl
xor
fnstenv
mov
mov
popf
xor
out
ret
in
dec
mov
dec
cmp
cmpsl
sbb
vmread
out
inc
ret
insb
cld
sbb
push
repnz
js
loop
push
dec
push
aad
lods
or
push
sbb
xchg
xchg
insb
test
push
jb
rcrl
fadd
add
cmp
fistl
mov
mov
rclb
cs
bound
pop
in
push
pop
mov
int3
fwait
jg
jp
and
ja
push
mov
jns
push
data16
movaps
cmpsb
pusha
leave
daa
pop
test
fadds
cli
push
imul
xchg
sti
fildll
cmp
in
push
mov
sarb
xchg
iret
fwait
lret
cmp
dec
push
and
js
mov
int
mov
aaa
cltd
shrb
jecxz
sbb
jne
bound
mov
das
subl
pushf
mov
or
mov
cmpsl
jmp
insl
addr16
addl
lret
pusha
sub
stc
mov
xchg
fidivs
daa
mov
inc
cld
sbb
adc
cld
jecxz
decb
test
sub
and
call
fcom
jle
push
or
fs
sub
rorb
iret
outsl
das
push
push
int
jnp
pop
fwait
jb
sbb
mov
or
repz
mov
mov
push
xorl
sbb
test
test
push
stos
into
lret
jns
and
mov
mov
ss
repz
sahf
pop
dec
lea
push
xlat
mov
and
aad
sub
add
mov
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
dec
dec
push
sub
sbb
push
lret
push
jno
add
inc
enter
xor
mov
das
pop
xor
mov
pusha
mov
ja
fmull
xor
or
xchg
jp
cmpb
mov
sbb
lahf
lret
or
lret
mov
push
dec
pop
imul
jo
pop
inc
js
xor
sub
je
fdivl
mov
mov
mov
test
xor
and
dec
cmp
sbb
jne
jmp
push
cli
push
repnz
and
mov
sub
test
xchg
daa
lret
adc
pop
inc
das
fwait
inc
int3
lcall
cmpb
xchg
ljmp
cmp
movsl
xorb
repz
in
push
mov
dec
lahf
jnp
cmp
inc
jecxz
stc
push
mov
mov
addb
xchg
lret
out
loopne
jnp
mov
jae
orb
mov
jno
fcompl
push
pushf
loop
test
jge
add
push
sti
divl
test
xchg
scas
xchg
cmovnp
adc
inc
adc
rorb
in
int3
jnp
mov
push
loopne
sti
cmpsb
and
xchg
xchg
scas
pop
push
addb
mov
mov
and
cli
xchg
sub
mov
mov
jge
out
sub
fisubrl
adc
ds
xorb
jecxz
rclb
jne
mov
divb
mov
adc
iret
icebp
dec
fs
je
jecxz
js
inc
pop
mov
lret
cld
sbb
jbe
insb
addl
add
xor
push
mov
push
xchg
adc
insb
mov
data16
or
cmc
insl
cmp
movsl
mov
adc
lahf
lret
xchg
ljmp
xchg
adc
fstpt
jp
jno
mov
mov
sbb
cmp
or
mov
sub
mov
cli
gs
popf
out
inc
bound
mov
sbb
push
pop
wbinvd
cmp
push
pop
pop
aaa
js
rolb
sub
imull
or
add
xchg
jno
dec
and
aaa
xchg
aas
inc
call
sbb
lret
push
addr16
dec
subb
push
roll
test
test
popa
cmpsb
repz
xchg
sbbl
mov
test
mov
fidivl
fwait
xor
xchg
mov
jo
push
test
loopne
push
les
xor
int
push
xor
fisttpll
xor
fld
negl
sbb
movsb
pop
mov
push
lret
rolb
mov
fcmove
cmp
add
arpl
or
cmp
xor
outsl
xchg
mov
mov
add
xlat
fisttps
div
xchg
nop
imul
orl
test
xchg
in
ffreep
ds
inc
insl
cmp
cmp
imul
mov
pop
out
cmpsl
outsb
xorl
mov
mov
shr
or
sub
outsb
bound
push
sarl
sar
jp
out
mov
cmpsl
addr16
dec
sti
call
mov
mov
mov
pop
sub
dec
fcoms
popf
sar
call
ds
xchg
push
adc
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
push
jle
and
sbb
sbb
sahf
add
notl
jo
mov
fs
ljmp
orb
data16
call
in
test
cmp
push
jmp
scas
jmp
xor
loop
mov
pop
in
xor
xlat
jmp
jbe
test
pop
inc
sbb
jo
mov
addb
add
jns
aad
adc
fildll
mov
inc
sti
pop
sub
ret
add
mov
dec
add
in
jle
pop
testl
xchg
loop
hlt
outsl
repnz
test
fbstp
xchg
push
mov
jmp
mov
or
cmpsl
in
mov
or
adcl
mov
test
cmp
mov
movsl
in
jae
or
clc
lds
test
fldt
mov
xchg
aaa
cld
rcrb
fidivs
lock
test
sub
mov
dec
stc
adc
pushf
dec
daa
dec
add
lret
add
sbb
lock
int
es
das
aas
imul
stos
and
enterw
push
out
loope
int3
cli
inc
push
fisttps
stos
mov
out
jae
add
insl
mov
outsb
dec
xor
jp
sbb
jo
lea
sub
or
adc
stc
lret
mov
xchg
cmpsb
gs
inc
cli
adc
cmp
enter
fdivrl
xchg
addl
in
arpl
mov
jg
scas
add
pop
in
cwtl
lcall
int
mov
inc
lahf
sub
sbb
pop
adc
popa
shl
xchg
call
rolb
push
jle
mov
mov
repnz
movsb
xchg
jno
jne
icebp
faddp
cmp
sbb
ss
xor
loope
test
cmpsb
cmp
rol
push
push
lret
loopne
add
rolb
lods
paddd
call
js
or
cmp
pop
mov
repnz
mov
stos
jae
leave
xor
addr16
mov
or
scas
cmp
cli
testl
mov
mov
cmp
add
andl
in
adc
mov
cmp
aad
xor
or
sbb
cmp
adc
adc
movsl
in
insb
cltd
push
jne
mov
push
and
mov
dec
lods
xor
xchg
adc
push
lods
push
push
sbb
movl
and
imul
bound
mov
stos
fisttpl
mov
adc
dec
push
out
test
fnsave
jae
mov
xorl
in
jp
insl
jmp
add
fsubrl
or
sub
adc
or
iret
aas
mov
cmpsb
fstps
dec
jl
pushf
imul
pop
push
pop
mov
imul
cld
push
mov
movl
mov
push
sbb
mov
dec
out
cmp
mov
bound
mov
enter
mov
fbstp
test
negb
jmp
es
xchg
inc
scas
sarl
out
lock
ljmp
push
mov
stos
mov
cmp
fxch
insb
test
mov
in
mov
pop
xchg
lea
or
fs
sub
out
out
movl
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
arpl
gs
outsb
adc
sbb
mov
lock
test
and
and
addl
jnp
and
push
sbb
fdivrs
sbb
outsb
sub
or
push
mov
scas
and
push
inc
push
mov
cmp
jmp
fsubrs
insl
rol
adc
mov
movsb
leave
popa
xchg
pushf
jnp
push
ss
push
cmpsl
sub
test
lret
out
aam
xor
pop
lret
popl
mov
jno
mov
inc
sti
scas
data16
jae
cmpsl
jo
ret
jne
bnd
dec
je
mov
sbb
mov
lods
sahf
inc
popf
sbb
xor
and
push
and
dec
or
cmp
fstps
cmc
ja
or
sti
call
sub
jmp
dec
and
cmpsl
sbb
cli
pop
mov
xor
jo
nop
push
or
inc
in
pusha
inc
add
adc
int3
or
fstps
inc
rcr
stos
push
add
xchg
repnz
loop
and
pop
and
dec
lcall
jne
xor
or
fisttpl
je
mov
xchg
push
enter
adc
test
cmpl
xchg
fs
dec
aad
inc
xchg
aas
jo
push
sti
das
insb
std
movsb
std
jle
das
dec
mov
popa
sti
inc
pop
jno
aad
outsb
daa
cmc
mov
scas
mov
or
cmp
jmp
cmp
mov
addr16
adcb
add
dec
idivl
pop
xchg
int3
out
mov
shl
cld
std
inc
out
sub
and
jge
xor
cmp
out
jnp
jmp
cmc
mov
into
dec
jge
vmrun
out
mov
movsl
jno
bound
inc
add
into
js
adc
call
push
xor
inc
scas
and
pop
lods
shrl
fmull
imul
icebp
dec
test
dec
pop
int
xor
aas
push
movsb
in
outsl
adc
pop
inc
cmp
cld
aas
push
nop
and
arpl
lret
sti
int
jae
add
aam
cmp
cmp
xchg
sbb
mov
sub
push
push
or
loope
xchg
repnz
mov
in
mov
shlb
in
mov
sbb
stc
cmp
mov
into
cwtl
xchg
popa
imul
sub
bound
mov
cs
in
pop
or
jmp
lret
les
ja
fiaddl
out
mov
sbb
mov
sarl
cmp
sub
dec
jo
icebp
cmp
add
in
pop
xchg
clc
pop
aad
stos
cld
sti
scas
push
movhps
and
push
mov
and
les
add
inc
repnz
lock
add
rcrb
xor
jg
lods
inc
xor
inc
stos
das
ffree
lret
and
hlt
pop
jg
repz
xchg
adc
and
add
shl
insb
jne
fwait
mov
xchg
rcr
push
push
into
fmull
adc
sbb
out
inc
sti
mov
loopw
ss
aaa
lcall
fwait
inc
inc
inc
jl
push
leave
cmp
jb
cwtl
xchg
jbe
in
adc
rorl
inc
outsl
es
cwtl
adc
xor
repz
xor
sbb
xchg
cmp
inc
cwtl
pop
inc
out
sub
fildll
mov
add
andl
mov
out
push
pop
or
out
cmp
shrb
daa
shll
mov
mov
jae
push
pop
rolb
xlat
push
clc
mov
nop
lds
adc
ret
addb
cld
mov
mov
inc
add
xchg
add
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
add
sbb
sbb
js
je
and
in
sub
xchg
fcomps
sub
les
or
xor
mov
in
sbb
and
pop
jge
int
jmp
stos
pop
fldenv
cld
les
loopne
popa
clc
pop
push
dec
mov
sbbb
in
rcrb
pop
jle
mov
mov
lock
rcrb
cld
jno
mov
xchg
push
dec
andl
cmp
repnz
mov
mov
cmp
mov
add
add
jp
mov
push
xchg
and
and
jl
mov
inc
pop
xor
dec
into
pushf
and
or
xchg
arpl
fs
adc
add
cld
aam
insl
pop
jp
daa
data16
scas
out
pop
jne
lods
mov
jne
fs
ja
sbb
pop
and
jae
pop
and
mov
insl
jns
arpl
lock
sbb
push
mov
mov
neg
lahf
mov
ss
ret
mov
mov
jge
xchg
inc
pop
jmp
mov
xchg
shrl
inc
mov
pop
jnp
andl
and
clc
xchg
pop
nop
movsb
popf
fs
or
data16
or
pop
xchg
xor
cmp
pop
mov
scas
jmp
sbb
scas
xor
in
cmp
mov
rorb
icebp
or
popa
lock
jo
inc
adc
stos
dec
mov
std
fs
mov
in
test
lahf
jle
push
inc
icebp
xor
pusha
and
out
aas
dec
jmp
jbe
rorb
jge
adc
pop
das
loope
pop
aaa
mov
mov
shrl
ror
je
xchg
push
cmp
mov
push
fdivs
dec
cli
push
sbb
and
xor
gs
push
fisubrs
mov
mov
daa
ror
fwait
or
pop
pushf
stos
sub
cmp
jmp
loopne
dec
cmpsl
out
dec
lretw
xor
imul
lock
std
lret
stc
mov
pop
and
movsb
sbb
jns
sahf
jl
fstl
aas
into
lods
test
arpl
or
or
pop
xor
dec
add
push
out
leave
sbb
mov
cld
xchg
in
push
mov
mov
cmp
sar
adc
inc
iret
test
hlt
cltd
test
andb
sbb
mov
adc
cmp
lret
xlat
mov
adc
and
mov
and
jbe
mov
loope
ds
loop
mov
subl
dec
xchg
and
scas
adcb
sub
test
mov
adc
insl
enter
mov
cltd
mov
sub
fstp
in
imul
jp
push
enter
int3
sarb
dec
hlt
pusha
jb
dec
das
or
push
cmp
mov
or
or
mov
test
and
cmp
hlt
out
arpl
into
jp
clc
jecxz
push
cwtl
clc
ja
stos
xor
repnz
dec
mov
ds
inc
pmaxsw
cmp
sub
in
mov
call
lods
ficoml
das
ljmp
push
fistps
sub
jb
dec
shll
cmp
aaa
sub
test
cwtl
xchg
pop
cltd
inc
or
sbb
iret
jnp
adc
inc
enter
sub
add
add
add
ret
lock
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
mov
or
sbb
notb
loopne
xchg
test
shrb
push
pop
sti
mov
ljmp
andl
xchg
add
rcl
sarl
notb
out
xchg
push
dec
jg
idiv
cmp
mov
lret
into
ss
incl
lods
ret
ret
ja
and
mov
pop
je
fidivrs
sub
repnz
pop
push
mov
inc
xchg
jb
mov
in
xor
fwait
sahf
pop
jmp
lea
lahf
arpl
dec
aam
sahf
rep
mov
das
arpl
adc
iret
jo
in
gs
dec
imul
xor
rol
mov
or
mov
xchg
fs
mov
push
out
xor
ds
imul
lret
or
addb
gs
and
adc
xor
inc
dec
and
mov
js
ds
cmp
sub
dec
and
dec
int
movsl
mov
cld
adc
cmp
add
stos
lock
mov
sub
ret
mov
mov
jmp
orb
sub
push
mov
jge
xor
jmp
inc
lds
pop
pop
jg
inc
sbb
xchg
daa
imul
add
push
les
dec
insb
pop
testb
cmp
dec
popf
or
cmpsb
xlat
loopne
lret
jle
mov
push
aad
pop
int3
clc
xchg
sbb
xchg
leave
popa
addr16
mov
or
es
pop
jno
mov
cmp
jecxz
and
insb
movsb
xorb
sarb
jnp
repnz
xchg
mov
xchg
lods
mov
lea
push
loope
pop
mov
inc
add
mov
cmp
pop
or
sub
cmp
popf
inc
lods
fsub
repnz
jecxz
fcomps
adc
mov
and
mov
jb
push
pop
and
push
mov
popa
jns
xor
mov
dec
dec
jo
sar
xlat
cs
loopne
in
add
add
into
stos
fs
test
inc
cmp
pop
cmp
loopne
sbb
push
dec
mov
je
adc
orl
ja
out
dec
mov
mov
mov
outsb
sbb
push
sbb
mov
push
pop
in
and
leave
bnd
fstl
or
shrl
inc
daa
inc
je
pop
xchg
in
cwtl
pop
mov
sbb
pop
mov
xor
mov
shlb
pop
push
leave
add
pop
insb
test
add
inc
sbbb
ss
mulb
loopne
cmpsb
inc
cmp
mov
jg
sahf
loop
inc
and
mov
inc
nop
decl
cmp
dec
mov
daa
pushf
out
xchg
imul
imul
cmpsl
shrb
daa
or
idiv
jne
xchg
and
test
xchg
lods
jb
inc
jne
sub
mov
mov
xchg
test
cs
xor
mov
and
xchg
outsl
ds
or
bound
push
mov
jo
negb
shll
mov
movsl
jmp
cwtl
push
push
aad
enterw
in
jle
imul
inc
or
sbb
push
out
aad
mov
dec
jns
aam
pop
mov
or
cld
stos
xchg
or
mov
push
cld
pop
mov
in
fldt
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
mov
sbb
outsb
adc
sbb
xor
or
push
ficoml
test
ret
es
test
xchg
sub
idiv
inc
mov
rcl
bound
leave
cs
imul
mov
mov
stos
stos
dec
cmp
xchg
dec
outsb
lcall
int
mov
cmp
sti
outsb
xlat
sbb
outsl
in
popf
negb
jecxz
popf
movb
pop
jns
fabs
push
jne
sti
popf
pop
out
mov
mov
dec
out
adc
mov
or
sub
and
pop
out
xor
dec
inc
fstp
popa
xlat
lahf
fistl
mov
mov
jg
sbb
mov
fwait
pop
add
sub
outsb
jmp
mov
sbb
sbb
sbb
cmpsb
into
push
inc
inc
mov
sub
jae
stos
call
mov
sbb
jp
aad
loopne
pop
dec
into
push
ds
sbb
arpl
scas
pop
je
xor
mov
pop
or
push
fisttps
push
lret
sbb
push
xor
inc
lret
faddl
jo
mov
aaa
pop
mov
mov
imul
push
mov
mov
pop
in
sub
dec
fcompl
push
mov
lods
mov
lds
bound
pop
rcrl
add
xchg
mov
jp
xchg
incb
cmc
dec
push
sbb
out
sahf
das
adc
pop
or
out
addr16
arpl
inc
mov
add
xchg
xchg
movsl
sbb
shl
xchg
js
bound
dec
popa
cmpsl
fldenv
imul
pop
mov
in
add
sub
push
mov
jo
in
lock
dec
inc
add
lahf
out
pop
aam
dec
xchg
push
jecxz
mov
outsl
lock
ret
mov
sub
aaa
mov
adc
in
fldt
fldcw
xor
jne
lods
inc
pop
pusha
adc
add
jg
test
or
push
pusha
cmpsb
sysexit
xor
xchg
sbb
fs
adc
enter
cmpsb
pop
fisubrl
cmpsl
sub
cwtl
push
std
mov
cltd
cmp
push
into
or
dec
fisubs
or
lret
inc
mov
pushf
in
lods
imul
sbb
mov
xchg
push
cmpsl
add
lock
add
sub
scas
push
or
xchg
cmp
std
xchg
stc
pop
mov
inc
jne,pt
add
dec
adc
cmp
int3
mov
push
out
jmp
and
nop
repz
jge
inc
dec
aad
mov
xchg
push
jo
mov
hlt
bnd
pop
insl
pop
sub
es
xchg
xor
push
sub
sub
or
addr16
jecxz
cmpsl
sahf
adc
xchg
cltd
test
inc
mov
movsb
lcall
xor
das
icebp
mov
jnp
test
and
sub
out
mov
ljmp
push
js
cltd
cltd
sbb
aad
movsb
and
cmpsl
loopne
xchg
and
mov
pop
arpl
loopne
aas
stc
adcb
sahf
xchg
or
inc
dec
mov
enter
jg
inc
push
gs
jg
and
shlb
pushf
mov
outsl
jecxz
push
dec
jns
xchg
lds
dec
or
adc
pop
jns
rolb
loope
ja
cmp
int
push
mov
mov
loop
cmp
ss
mov
add
or
cmpsb
push
insl
dec
pop
xchg
mov
jmp
push
pop
insl
push
dec
adc
inc
adc
loope
add
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
iret
fidivrs
or
adc
sbb
pop
orb
addl
into
cmpsb
cmp
mov
inc
dec
push
or
loop
add
add
adc
push
outsb
cmp
or
cmp
inc
adcb
add
test
fwait
xor
cmpsl
mov
sub
mov
mov
movsl
dec
cmp
adc
mov
or
ret
push
addr16
cli
mov
push
jmp
addl
jae
arpl
mov
pop
push
xchg
int3
xchg
andps
xchg
test
dec
call
inc
pushf
out
pop
stos
cmpsl
out
pop
fs
push
inc
add
pop
mov
lock
out
add
stos
ljmp
movl
push
scas
add
outsb
out
push
stos
outsl
rorb
or
test
adc
xor
inc
pop
jmp
imul
out
data16
mov
pushf
or
icebp
jne
test
in
mov
movsl
jl
adc
jo
pop
inc
xchg
mov
lret
push
dec
fstl
mul
lea
fldt
mov
sbb
mov
das
retw
aad
sbbb
jne
sbb
push
jno
pusha
insl
push
pop
outsl
loopne
movsb
mov
push
add
jmp
cmc
mov
mov
xchg
sbb
testl
cmp
out
xor
pop
lcall
jno
inc
inc
fwait
out
mov
and
mov
pusha
shlb
inc
lahf
or
cmp
mov
jl
ljmp
dec
push
iret
into
lret
mov
jns
push
cwtl
fidivrs
outsl
adc
ljmp
frstor
adc
aaa
insb
mov
xor
aam
xchg
mov
fsubs
push
arpl
xlat
push
pop
outsb
push
and
ja
lock
xor
int
out
dec
decb
mov
cmp
aad
imul
adc
push
cmp
mov
arpl
mov
dec
test
arpl
jb
popa
pop
das
repnz
and
or
cwtl
and
cmp
xor
xchg
stos
scas
inc
lahf
lret
push
jle
mov
dec
test
divb
jo
jp
imulb
jl
pusha
roll
data16
test
cmp
mulb
xchg
aam
cmp
outsl
ja
pop
sub
lock
push
add
add
addb
pop
dec
mov
stos
in
sar
in
jae
add
jge
cmp
push
cld
dec
and
scas
lret
sbb
push
jbe
pop
enter
inc
dec
adc
cmp
mov
fdiv
xor
xchg
xor
and
loop
push
push
add
jle
dec
out
daa
aam
cs
and
scas
adc
dec
lods
adc
sub
pusha
daa
out
pop
push
mov
loop
inc
sti
roll
iret
adc
dec
pushf
fwait
sbb
je
cltd
popa
push
out
lcall
xlat
xchg
int
cmp
movl
daa
mov
sbb
xchg
jbe
jmp
mov
push
mov
inc
adc
inc
xchg
pop
test
cmpsb
xchg
fs
jp,pt
jno
mov
jge
mov
fcompl
xchg
imul
sub
enter
jmp
rcrb
arpl
dec
test
shrl
jnp
cmp
lock
dec
iret
jae
scas
mov
les
pop
jbe
xchg
adc
in
add
dec
pop
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
jo
cmc
sbb
outsb
adc
sbb
out
cs
xchg
ja
mov
dec
divb
and
sbb
je
push
lret
cli
push
es
enter
movsl
cmp
push
sub
adc
es
inc
mov
repz
mov
push
ret
outsb
and
leave
addr16
std
jl
fcompl
sub
mov
in
fisubs
push
and
insb
lods
loop
jbe
outsl
notb
inc
xchg
int3
jmp
pop
mov
mov
jo
scas
jne
and
sbb
stc
test
or
sub
inc
rorb
fwait
in
in
fnsave
adc
mov
arpl
cmp
sbb
pop
jmp
xchg
mov
adc
orb
test
dec
mov
inc
shlb
dec
int
jne
inc
shl
xchg
data16
jns
mov
push
push
int
xchg
loope
adc
rol
sbb
inc
push
ds
nop
fistpl
in
jo
push
or
mov
adc
push
jge
xchg
pop
adc
adc
push
xchg
push
pop
cmpsl
sub
sub
lret
repz
or
iret
mov
cmp
sahf
enter
aam
push
dec
test
mov
xlat
cwtl
insl
int3
mov
fwait
adc
add
xorb
jns
and
fs
insl
out
and
mov
scas
sahf
rcr
pop
cli
push
cmc
push
cmp
movsl
or
lds
jae
hlt
or
mov
push
pop
xlat
fwait
lock
mov
jle
cs
push
xor
mov
mov
sbb
jno
pop
mov
dec
fdivp
fcmovb
lret
cmpsb
aad
push
jb
push
mov
mov
pop
ja
call
dec
sarb
aaa
jns
xor
dec
mov
sbb
mov
aaa
mov
mov
or
arpl
push
in
cmp
mov
pop
ja
repnz
jno
xchg
jo
leave
add
mov
mov
or
jge
mov
and
mov
scas
scas
test
inc
cmpsl
gs
xor
pop
adc
arpl
shlb
jecxz
or
jne
push
les
mov
fnsave
in
dec
add
mov
mov
adc
outsb
ljmp
rcl
lods
je
out
pop
jno
in
push
cli
jo
and
cmp
popf
cmp
pop
loopne
pop
das
in
xchg
shll
add
test
rorb
fstpl
pop
popa
fs
xchg
mov
loop
out
pushf
mov
scas
into
dec
push
shrl
repz
repnz
pop
fisubs
pop
xchg
std
mov
jno
mov
mov
mov
dec
mov
cmpsl
pop
in
xchg
xor
cmp
mov
dec
xchg
fdivp
add
cmpsl
mov
cwtl
pop
jge
cmp
mov
mov
stos
mov
cmpsl
mov
mov
out
lcall
out
ljmp
mov
xchg
sub
repz
push
insb
xor
add
pop
or
loopne
out
push
repz
xchg
je
sbb
sbb
xor
lahf
pop
stos
ficoms
fldenv
xor
pop
enter
fiadds
push
ret
stc
sub
daa
loop
sub
sbb
loope
cmc
in
lods
lahf
pop
les
ret
push
mov
rcrl
daa
lods
cmp
movsb
mov
mov
jno
xchg
mov
and
add
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
es
hlt
dec
dec
ss
mov
inc
sarl
pop
or
mov
sahf
movlps
xchg
inc
jl
xorl
sahf
adc
sbb
arpl
ljmp
xor
jle
fdivr
mov
jecxz
mov
mov
aad
push
xchg
mov
xor
jae
dec
sahf
clc
cs
pop
out
mov
jnp
pop
mov
jbe
pop
jne
sub
or
jb
js
mov
push
out
sbb
rcr
push
test
push
cmpsl
in
xorl
test
cmpsl
leave
mov
or
add
sbb
in
sub
scas
and
cli
loop
shlb
jmp
idivl
call
arpl
lar
hlt
dec
pushf
fbstp
adc
inc
lret
movsb
xchg
mov
fnsave
test
add
insb
fcomip
and
push
stc
push
inc
adc
pop
mov
push
jp
int3
stos
adcl
pop
jmp
out
in
roll
adcl
lds
adc
popf
orl
jb
inc
xchg
adc
lds
jmp
dec
ss
clc
push
and
mov
pop
and
adc
out
mov
mov
sub
repnz
lcall
mov
aam
pushl
mov
push
push
push
aas
stos
scas
pop
dec
inc
pop
jecxz
xchg
scas
fs
mov
xchg
loop
mov
insl
js
push
insl
dec
lds
or
cmp
call
cmp
cmpsb
pop
scas
mov
xorb
xchg
jbe
mov
xchg
mov
outsb
mov
mov
add
lea
sti
xor
jecxz
mov
jp
push
inc
add
stos
pushf
lahf
mov
call
ret
xor
jb
rolb
xchg
in
das
cld
imul
popa
icebp
iret
leave
mov
add
xchg
imul
leave
call
out
cmc
and
dec
into
jmp
fcomps
sarb
xor
and
push
loopne
and
popf
pop
lods
jae
les
je
mov
sti
adcb
inc
sub
rorb
mov
lret
lcall
scas
cs
addr16
dec
jge
xchg
mov
mov
sbb
mov
call
enter
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
mov
call
sbb
out
mov
push
jg
movsl
frstor
cs
bound
mov
mov
jle
or
pushfw
mov
jmp
fistpll
xor
stos
jo
pop
xor
mov
nop
inc
cmpsb
js
pusha
inc
sub
or
out
mov
movsb
or
imul
test
adcb
aad
movsb
out
xchg
movsl
sti
in
ljmp
scas
test
arpl
lea
je
jb
jae
push
dec
pop
mov
mov
gs
sub
fs
and
adc
pop
dec
mov
pushf
lds
push
pop
fdivrs
sti
lods
mov
mov
add
xor
movsb
sbb
xor
inc
mov
pusha
adc
out
pop
and
lods
mov
mov
test
push
inc
inc
iret
cwtl
repz
lahf
cmp
out
sub
sub
shll
ja
insb
mov
jg
iret
or
push
data16
nop
in
cmp
and
xchg
xchg
jo
das
xor
and
and
ret
xor
add
es
inc
add
cs
cld
jp
outsb
sbb
stc
imul
or
repz
xor
jae
mov
cmp
data16
scas
daa
cmp
sbb
repnz
pop
mov
push
adc
push
push
mov
fstl
iret
jge
jp
cmp
jb
sub
xchg
dec
cmp
sti
filds
push
popf
mov
dec
fidivrl
fldenv
mov
push
subb
lods
pop
or
dec
add
sbb
sbb
mov
lds
fwait
mov
push
fidivrs
pop
aas
int
cli
inc
mov
lock
mov
fcomps
outsl
or
xchg
jg
jno
xchg
in
cmp
imul
dec
mov
cmp
pop
ja
pop
pop
cmpsb
loopne
in
sahf
jmp
adc
jns
js
data16
xchg
sub
push
mov
and
dec
into
nop
add
mov
pop
xlat
fs
mov
or
shl
xchg
fwait
add
adc
mov
pusha
loopne
add
loope
sbb
mov
and
xor
std
bnd
xor
pop
pop
insl
insl
sub
shrb
lahf
arpl
pop
mov
pop
push
andb
mov
ret
repnz
sub
loop
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
xchg
pop
push
stos
sub
adc
sbb
mov
mov
scas
loope
or
subl
jmp
fstpt
jae
xchg
pushf
imul
in
mull
imul
and
inc
fimull
stos
loopne
repnz
inc
psubsw
rorb
mov
adc
hlt
push
push
inc
mov
mov
add
scas
out
clc
pop
test
inc
icebp
fimull
bnd
jnp
jnp
jl
push
mov
pop
sub
xchg
xchg
in
ret
fadds
push
mov
lar
lods
nop
sbb
je
in
out
aam
xorl
sub
arpl
jbe
cmp
adc
out
jmp
sbb
sbb
lea
jge
pop
cmp
sarl
and
mov
and
lock
rolb
mov
call
push
mov
rcrb
movsl
pushf
mov
insl
addb
movsl
sub
aaa
sarb
andl
je
mov
int
lahf
stos
mov
pop
popf
sbb
xor
fiadds
daa
pop
xchg
test
rcrl
inc
xchg
jl
stos
mov
pop
bound
testb
jecxz
or
orl
xchg
sub
std
aaa
xchg
sub
and
mov
push
in
fmull
stos
cmpl
nop
mov
rcrb
mov
xor
sbb
je
adc
addr16
stos
shl
xlat
stos
push
jecxz
pop
movsb
imul
sarl
mov
xor
les
xlat
xor
into
add
das
cmp
bound
test
mov
addr16
jge
ss
sbb
out
sub
daa
out
mov
inc
dec
jge
mov
push
or
andl
push
icebp
sub
ds
add
jmp
push
aad
dec
addl
sub
dec
xchg
fisubrs
add
push
xchg
inc
inc
pop
insl
mov
data16
mov
loopne
jl
and
loop
out
sbb
pop
addr16
sti
and
imul
dec
dec
lock
sahf
pop
pop
push
add
popa
pusha
roll
sbbl
lcall
loope
mov
fdivrs
push
jecxz
ficompl
sub
xchg
mov
movsb
inc
int
jae
jne
mov
sub
sahf
inc
or
orl
dec
loopne
shr
mov
fdivs
sbb
pop
into
sbb
jae
adc
fcompl
sbb
adc
sbb
test
fimuls
jmp
push
aas
sbb
mov
push
sub
outsl
push
call
cmp
inc
mov
filds
dec
insb
xchg
pop
shll
cmp
pop
cmp
in
je
daa
add
or
out
in
add
sbb
movsb
sub
push
mov
fadds
jns
add
subb
inc
lahf
adc
push
cld
aam
cltd
bndldx
test
add
pop
push
ds
mov
orl
adc
outsl
das
pusha
mov
mov
fdivs
jecxz
sub
into
clc
and
int3
push
mov
inc
stos
inc
pop
lcall
fs
ja
jnp
mov
add
xchg
addr16
xor
xor
insb
mov
mov
jmp
xchg
je
fisubl
and
jo
pop
adc
addr16
cwtl
pop
test
pusha
sub
or
rolb
popa
push
inc
inc
cmp
add
dec
ret
and
xchg
pcmpeqw
stos
lret
scas
pop
dec
mov
pop
mov
dec
cmp
xor
outsl
push
sbb
jb
dec
xchg
xchg
ds
jbe
sub
xor
or
cltd
or
xchg
bnd
mov
xor
cwtl
add
fistps
sbb
das
inc
bound
lret
rcr
sahf
jne
call
mov
movsl
mov
sub
out
dec
xor
jle
test
mov
mov
movl
dec
mov
xchg
mov
mov
movsb
jns
inc
jns
stos
dec
jmp
sar
stc
xchg
stos
jecxz
sub
nop
enter
in
dec
xchg
xor
sar
popf
les
dec
mov
push
cli
mov
xchg
movhps
movsl
or
js
stos
dec
dec
xor
repz
pop
cmc
xor
inc
outsb
push
mov
mov
push
push
into
xlat
in
ss
movsb
pushf
mov
mov
adc
add
cli
test
mov
test
mov
lret
xor
jmp
fcoms
pop
mov
xor
loopne
lcall
xchg
divl
mov
aaa
push
repz
sub
mulb
mov
movsl
xchg
push
add
jns
jnp
sub
fwait
jle
mov
fldpi
mov
fistl
adc
sti
lahf
jmp
push
jecxz
clc
ss
daa
xchg
test
dec
cmp
cmpsb
imul
loope
xchg
addr16
mov
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
stos
mov
adc
sbb
les
mov
xor
cmp
incl
shr
scas
and
jp
mov
fwait
stc
aaa
and
repnz
gs
add
stos
mov
mov
mov
push
sub
xchg
and
je
cmc
jb
adc
jne
mov
sub
or
jle
lods
ljmp
das
adc
inc
pop
mov
jae
js
push
fdivs
arpl
xor
lret
xor
icebp
in
das
adc
push
fsubs
push
out
loope
dec
out
test
fidivrl
mov
cld
push
or
stos
jge
jecxz
and
xchg
loopne
xchg
pusha
aad
loopne
icebp
in
rolb
shl
ret
je
sahf
scas
add
push
pop
lahf
cmc
cmpb
in
xchg
icebp
xchg
push
push
ret
loopne
and
repz
xchg
inc
lahf
jmp
mov
push
ror
adc
and
xchg
inc
mov
xor
add
sub
cltd
mov
clc
cmp
or
xchg
cmp
cmp
jmp
xchg
adc
jae
insl
std
push
mov
in
mov
mov
or
add
and
push
or
push
lcall
leave
inc
mov
mov
icebp
sub
jne
cwtl
jecxz
decb
cmp
lahf
add
xchg
pop
dec
pop
mov
inc
bnd
les
andb
lock
xor
inc
fmuls
mov
sbb
in
sbb
cmp
icebp
push
sbb
jbe
into
gs
xchg
aas
sub
nop
iret
cmp
mov
inc
jl
leave
movsl
cvtps2pi
mov
xchg
mov
jecxz
call
pop
xor
pop
inc
push
xchg
call
addb
xchg
sar
out
mov
repnz
or
pop
hlt
mulb
cwtl
mov
mov
dec
addr16
dec
scas
jmp
mov
cs
pop
or
test
jmp
ret
xchg
cltd
outsb
sub
and
stos
and
adc
pusha
inc
enter
sbb
adc
and
pop
sbb
in
or
rolb
fistpl
or
push
jb
xor
hlt
xor
pop
add
lret
cmp
outsb
stc
xor
mov
loope
stos
xor
loop
lahf
xor
jmp
enter
jbe
fidivrl
pop
aam
pop
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
rcrb
rcrb
sbb
adc
sbb
mov
pop
ret
and
adc
jecxz
and
add
mov
cmpsl
push
dec
test
test
mov
insl
add
mov
mull
es
jb
pusha
jne
sarl
push
int
jne
repz
push
fsubrl
mov
insb
xor
mov
fcmovnb
push
sub
mov
jg
lods
popf
mov
adc
out
xor
dec
std
cmp
and
mov
call
pop
hlt
cmpsl
add
test
sahf
xchg
pop
xor
sbb
mov
imul
notb
ljmp
fwait
push
push
cmpb
rcl
cmpsb
daa
mov
sub
mov
push
dec
mov
loope
jae
enter
pop
jge
out
or
popa
cltd
cltd
sbb
shlb
push
gs
and
arpl
incb
and
adc
sbb
xor
mov
mov
das
cmp
lahf
test
dec
neg
sbb
xchg
imul
dec
ss
jbe
rol
pusha
jnp
mov
cltd
pusha
fcmovnu
testb
pop
paddw
jne
jo
rcr
shr
xor
cmp
lcall
or
mov
mov
mov
insl
push
pop
sbb
rcll
mov
sub
bound
mov
test
mov
test
mov
push
xor
sbb
stc
or
imul
inc
cmp
call
jb
mov
xor
test
xor
int3
jmp
push
mov
mov
gs
cmp
shll
push
cmp
xchg
push
addr16
add
outsb
xchg
and
mov
adc
sub
bswap
and
jnp
and
in
nop
std
jnp
rcrl
leave
fmull
add
mov
mov
cmovs
mov
xor
sub
jl
push
xor
iret
cmp
sub
xchg
xor
sti
dec
pop
hlt
adc
add
sub
data16
sahf
ja
out
jbe
test
in
in
loopne
or
hlt
adc
pushf
add
jbe
mov
lods
sti
cmp
sahf
sub
cmp
loop
pop
les
sub
scas
aaa
or
scas
mov
and
cmp
in
push
out
inc
push
jb
dec
xchg
push
xchg
dec
jb
push
negl
pop
jl
mov
add
mov
or
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
arpl
stos
adc
sbb
rclb
sbb
xor
daa
test
cmp
pop
test
sbb
mov
xor
mov
push
lods
dec
shrb
dec
insb
imul
or
sbb
mov
out
aas
cmp
jns
jbe
xlat
push
or
mov
out
push
adc
imul
insb
adc
push
cwtl
dec
dec
enter
or
sub
push
fwait
dec
aaa
fisubs
fidivrs
inc
pop
cli
jnp
icebp
dec
push
and
and
inc
fcomi
dec
pop
test
filds
mov
push
repnz
ds
mov
jle
mov
ja
andl
sub
dec
mov
dec
bound
jns
out
js
mov
mov
xchg
lds
sbb
aaa
jne
es
jbe
sahf
in
sub
xorl
cld
push
shrl
scas
or
mov
pop
adc
or
lds
loopne
pop
js
daa
jecxz
lahf
jmp
and
shrl
mov
adc
in
je
outsl
rcrb
or
divl
test
in
mov
xchg
imul
mov
aas
std
xor
outsl
pop
repnz
or
push
into
push
pop
aas
inc
xchg
loop
pusha
and
xor
jne
enter
dec
es
xchg
dec
adc
and
in
fldl
je
sbb
fs
inc
and
sbb
add
lret
pop
mov
xor
mov
sti
pop
mov
jecxz
adc
xor
jmp
popa
xchg
or
cmp
push
mov
jbe
in
shl
sub
dec
cs
ret
jo
jmp
dec
adc
addb
jl
jno
jno
lock
hlt
imul
jecxz
inc
ret
in
or
jl
mov
dec
pop
sub
lahf
jno
mov
mov
jb
pop
cmp
stos
out
test
dec
pop
leave
pop
int
mov
ds
stos
inc
xor
or
push
in
mov
dec
repnz
inc
adcb
filds
fwait
jo
cwtl
dec
inc
cld
xlat
push
cmp
or
cwtl
mov
hlt
xorb
cmp
adc
or
push
cmp
std
aaa
mov
add
ja
and
cvtdq2ps
inc
xchg
or
insb
inc
pop
sub
fcmovnu
mov
arpl
fnstcw
cmp
lock
add
jmp
sub
mov
inc
pop
and
leave
out
jle
mov
sbb
rclb
sbb
vpmaxub
scas
aaa
pop
hlt
sbb
lea
daa
push
outsl
xchg
pop
sub
push
imull
popa
sub
sub
test
xchg
fmull
int
fisttps
push
in
dec
hlt
mov
and
hlt
scas
mov
xchg
int3
loop
cmpsb
pusha
movsb
sarl
adc
and
movb
mov
out
scas
sbb
xor
dec
jmp
int3
adc
xchg
mov
xchg
sbb
xacquire
dec
inc
call
inc
daa
inc
pushf
test
mov
or
aas
aam
adc
sub
mov
push
rolb
scas
cmc
xor
push
mov
and
mov
add
stos
nop
or
sbb
repz
add
jb
out
cmp
mov
cmp
cmp
ja
lds
gs
push
rcll
loopne
fmull
jo
dec
mov
out
mov
movsl
push
inc
add
fldt
shrb
xlat
jne
xchg
pop
sbb
aaa
xchg
addb
int3
repz
cltd
mull
mov
nop
mov
aam
jmp
pop
sahf
cmpsb
gs
fcompl
mov
push
pop
das
out
out
add
push
or
fisubs
inc
push
idivl
call
sahf
faddl
and
popf
aaa
call
les
in
iret
enter
xchg
push
pushf
dec
movsb
inc
jae
sti
pop
xchg
jecxz
jbe
or
mov
jo
dec
movsl
scas
xchg
add
add
jle,pn
xchg
fsubrs
ljmp
fcmovnbe
jp
adc
mov
lcall
dec
movsl
jmp
testb
push
rcrb
sbb
loopne
add
into
insb
or
shrd
je
or
dec
cmp
es
int3
adc
inc
sub
call
aad
xchg
stc
jecxz
and
jecxz
xchg
iret
out
push
pop
sub
out
fsubrl
xlat
push
test
mov
stos
icebp
mov
outsb
jp
mov
arpl
iret
popf
push
push
scas
out
cmpsb
or
add
es
in
stc
ret
stc
popa
cmp
test
cmpsl
xchg
pop
fs
dec
add
scas
push
test
sub
pop
mov
mov
pop
stos
adc
shlb
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
les
and
dec
mov
fistpl
outsb
mov
adc
imul
lret
dec
sub
shl
es
inc
mov
movsl
push
std
and
add
out
push
bound
sahf
test
or
push
lods
push
sub
popf
ds
movsl
or
xchg
ds
pop
insb
sub
or
xchg
cmp
stos
aas
inc
lods
loope
rorl
mov
mov
xchg
out
cmp
ret
inc
in
fs
mov
les
push
je
sub
jge
sub
jae
jp
in
push
jne
es
cld
and
in
pop
ret
push
mov
adc
test
sti
sub
jnp
inc
bound
sahf
das
test
ljmp
and
enter
loop
jbe
enter
je
scas
arpl
dec
lds
lret
movsb
inc
cmp
xchg
add
inc
dec
pop
ret
out
icebp
inc
test
xchg
pusha
xchg
iret
mov
jnp
es
js
xor
sbb
mov
xor
push
or
iret
dec
jmp
mov
lock
inc
lods
push
lret
and
xchg
lret
adc
xchg
das
ficoml
mov
jb
mov
aas
cmp
jmp
lds
and
enter
jge
jnp
fistpll
xchg
mov
dec
mov
addr16
push
pop
sbb
cmpl
into
xchg
repnz
and
mov
mov
mov
or
mov
sub
stc
sub
fnstcw
xchg
imul
xchg
jne
mov
lds
cmp
push
fdivrl
bound
pusha
dec
nop
xor
add
pop
rcll
inc
jecxz
lds
std
outsl
mov
jb
jno
jo
test
and
imulb
lods
dec
ret
push
aas
pop
jne
dec
lret
test
pop
rolb
shr
bound
addr16
sub
xchg
imul
cmc
sub
hlt
inc
xor
mov
jns
cmp
jp
add
jae
mov
xchg
shll
pusha
xchg
icebp
loope
mov
ret
or
dec
in
mov
jge
mov
jecxz
xchg
cmp
enter
shr
mov
mov
cmp
fwait
sub
lods
addr16
add
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
push
sbbb
inc
mov
sbb
mov
pop
inc
rorl
xchg
adcl
ljmp
addr16
add
and
in
cmovne
clc
dec
mov
je
mov
movsl
movddup
test
cld
scas
cmp
mov
imul
pushf
outsl
test
mov
cmpsb
aas
es
push
mov
repnz
cmp
je
out
imul
fucomi
push
repz
out
and
cmc
int3
movsl
mov
xchg
mov
jmp
push
pop
push
sbb
dec
sub
jno
add
ds
test
int3
mov
pusha
rcl
dec
repz
outsb
mov
es
scas
push
das
lcall
rcrb
xchg
pop
fisubl
leave
mov
loope
adc
and
mov
xor
lods
adc
pop
jg
out
movsl
mov
pop
ljmp
dec
fsubrs
sbb
loopne
sbb
popa
je
out
xchg
sarl
mov
xchg
xor
nop
xor
fsubl
cmp
test
xchg
sbb
arpl
add
jns
ret
ret
mov
cltd
or
ret
out
cmp
jns
cmc
call
add
mov
lods
aad
std
cs
dec
fldt
mulb
mov
movsb
adc
mov
repz
xor
daa
and
cli
push
and
xlat
push
or
jg
xchg
rcll
push
mov
inc
out
xchg
fwait
int
add
xchg
jge
les
test
xchg
lgs
out
sbb
fimull
push
pop
fsubrp
lods
popl
clc
dec
mov
jp
call
or
int3
and
mov
or
xor
sub
fchs
mov
lods
hlt
jno
pop
cld
je
in
add
lods
jbe
mov
inc
adc
jge
fldl
imul
ss
cld
cmpsb
addr16
jnp
fwait
ljmp
ljmp
pop
aaa
jl
ja
pop
jns
or
mov
incb
adc
std
movlps
lock
cmp
xchg
add
outsl
mov
iret
add
xchg
sub
jb
cmp
sub
sbb
and
loopne
push
adc
fsubs
lods
pop
jo
inc
pop
mov
sbb
insl
in
lods
dec
jg
imul
push
inc
dec
stos
in
enter
iret
add
outsb
push
sbb
movsl
imul
popf
push
add
enter
push
push
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
push
imul
out
dec
ffreep
scas
xor
enter
pop
sub
mov
popa
js
xor
in
dec
lock
aam
std
mov
mov
xor
decl
out
stc
cmp
sti
clc
mov
fnstcw
in
rclb
mov
popa
add
in
ss
lret
test
das
sbb
jne
bound
test
je
popl
ja
sbb
dec
mov
les
movsb
sahf
aad
sub
ds
insb
sbb
pusha
jno
and
and
or
push
cld
lret
mov
aad
xor
aas
shrl
dec
fidivl
push
lea
mov
inc
cmp
addr16
push
mov
push
pop
or
dec
aam
jge
or
jp
call
jno
cmp
cmpsl
adc
les
jno
xchg
mov
adc
es
adc
leave
in
into
mov
jmp
and
mov
movsl
dec
add
mov
sub
sub
pop
xchg
push
imulb
das
shl
mov
push
arpl
andl
inc
xor
fmull
pop
push
pop
jne
cmp
lcall
stos
mov
stos
or
cld
loope
xlat
lret
and
stos
mov
sbb
nop
mov
xor
inc
or
mov
push
jle
jp
pop
push
xchg
test
stos
clc
icebp
cmc
cs
cmc
or
sub
insb
cltd
push
xchg
imul
adc
sti
inc
jnp
mov
mov
std
hlt
inc
inc
subb
inc
fisubl
out
insb
adc
xchg
sub
sbb
xchg
dec
sub
mov
fsubl
push
pop
jmp
jbe
adc
inc
xchg
and
adc
cmp
jge
xchg
cmp
stc
cmp
mov
push
aaa
pop
cmpl
aaa
bound
stos
mov
cmp
and
sarb
pop
mov
jne
push
xchg
push
dec
or
mov
and
mov
aam
push
adc
sti
xlat
fisttps
hlt
inc
jbe
adc
jle
or
xchg
mov
outsl
gs
push
pop
addr16
or
or
xchg
jbe
cmpsl
nop
repz
bswap
inc
out
sub
ret
mov
sar
pop
adc
jle
popf
cmc
movsl
movups
inc
inc
mov
jnp
je
notb
push
sbb
mov
adc
sbb
fstp
rclb
arpl
add
and
add
xor
add
cmp
jmp
cmp
daa
sub
mov
mov
mov
sbb
adc
sbb
test
je
test
pop
mov
and
and
inc
in
adc
pop
jg
and
add
jb
lcall
sub
and
mov
adc
stos
pop
push
stc
cwtl
es
sti
mov
int
pop
stc
push
cmpb
in
fcomps
xlat
insl
add
lahf
and
dec
hlt
dec
jo
inc
jmp
mov
inc
jns
loope
push
adc
nop
mov
pop
jp
push
mov
sbb
mov
enter
cmp
adc
or
jp
cmp
test
mov
imul
cmp
test
loop
xchg
dec
daa
lds
adc
out
push
adcl
jno
xorl
sbb
push
mov
mov
fs
lds
and
stos
dec
jbe
push
imul
pop
sub
ljmp
sub
mov
and
xchg
fs
pop
sub
mov
fwait
cld
jecxz
nop
jecxz
leave
lahf
sbb
mov
das
pop
inc
add
sub
jo
cmc
call
out
shr
call
dec
adc
sar
test
dec
hlt
scas
ss
rcl
subb
adc
dec
cli
popa
add
cld
mov
int3
pop
mov
cmp
int
scas
adc
aaa
pop
in
push
dec
or
jge
fdivrl
or
pop
sub
sahf
xor
inc
lahf
mov
addr16
insl
cmp
xchg
fistps
or
pop
jp
cmp
test
jecxz
fisttpl
jnp
xchg
sub
xor
or
in
mov
ret
into
call
fsubr
sbbl
mov
stos
dec
hlt
addr16
xor
dec
push
rcrb
add
jae
add
pop
movsl
rol
xchg
and
arpl
scas
push
push
mov
and
mov
lret
jp
scas
adc
sbb
test
dec
add
mov
int
pop
jge
adc
mov
push
pop
mov
int3
adc
jb
jno
pop
fistpll
sbb
clc
mov
lock
std
out
xchg
cwtl
mov
pop
fisubl
pop
pop
popl
hlt
sub
clc
mov
stos
mov
xor
and
sub
lret
adcl
xor
ja
cmpsl
imul
or
lcall
mov
mov
inc
lcall
inc
mov
rclb
sbb
call
xchg
or
pop
aam
inc
adc
xchg
lret
pushf
repz
and
xchg
inc
mov
xchg
sbb
rclb
sbb
fbstp
pop
dec
sub
js
ret
shl
inc
and
lea
jmp
jmp
rorb
call
sti
aam
mov
std
dec
mov
dec
movsl
jno
decb
in
ret
lahf
sti
sbb
add
je
xchg
in
push
xchg
leave
arpl
sahf
hlt
xchg
fucomp
mov
int3
adcl
push
jnp
and
shlb
sbb
subb
mov
inc
bound
dec
std
int
outsb
cli
dec
xor
jg
mov
sub
fucomi
arpl
icebp
dec
popl
inc
daa
idiv
cwtl
aam
inc
icebp
mov
mov
mov
fucomi
and
mov
inc
lret
icebp
cmp
call
lds
adc
pop
movsb
xor
stos
inc
jmp
rcrb
stos
push
imul
xchg
xor
inc
loop
and
pusha
sub
loopne
push
and
mov
sub
pop
gs
loope
in
push
jne
enter
sub
or
and
or
mov
pusha
movsl
push
pop
mov
in
in
imul
mov
je
icebp
mov
lahf
cmp
mov
fisttps
decl
out
addr16
inc
popa
mov
push
test
and
popf
fmull
addl
loope
push
mov
cmp
dec
jne
mov
pop
test
int3
andb
pop
jl
dec
xchg
adc
stos
cmp
lcall
addl
jb
or
add
dec
in
cmp
inc
jbe
sahf
in
sub
cltd
dec
je
inc
mov
xchg
dec
adc
js
cld
ret
mov
mov
and
into
bnd
xor
shrb
or
je
shr
cltd
jae
sub
iret
add
and
fnstsw
in
mov
jle
rol
cld
xchg
std
out
testl
sbb
repz
rcll
mov
inc
mov
push
push
xchg
insb
xchg
sbb
xlat
mov
push
jno
cmpsb
add
bound
push
xchg
iret
cmp
jle
ljmp
popf
push
mov
in
les
lcall
mov
cmp
jle
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
jb
push
test
sbb
jbe
sub
pop
pushf
aam
shll
rcrb
lock
sahf
or
ret
fstl
cltd
cmp
inc
xor
ret
filds
lret
cmp
sbb
dec
adc
leave
fwait
dec
fistl
add
or
hlt
pop
dec
scas
and
cmp
pushf
xorb
mov
aad
sbb
subb
xchg
imul
adc
add
mov
push
insb
or
in
push
cli
test
sti
push
mov
pop
sbb
add
ret
pop
cld
jo
psllw
push
bts
or
and
je
pop
ds
lods
adc
sahf
cmc
dec
add
rolb
repnz
mov
test
js
leave
inc
mov
into
adc
lock
mov
cmp
lretw
inc
sbb
xor
and
sbb
es
mov
icebp
inc
push
sub
imul
xchg
mov
pop
jl
outsb
and
pop
adc
leave
jnp
push
mov
mov
jne
sbb
ja
cwtl
repz
sub
ret
push
nop
scas
mov
pop
inc
mov
orb
in
cmp
out
orl
push
fsubr
add
repnz
jg
sub
mov
pop
out
fwait
clc
jg
decl
ljmp
cmp
jae
cmp
inc
inc
jo
or
adc
stos
gs
pop
and
rclb
push
sbb
nop
ret
pop
adc
sub
mov
int
scas
ret
insl
dec
xchg
dec
mov
mov
test
mov
icebp
into
jmp
stc
fdivl
insl
inc
cs
outsl
adc
dec
xorl
mov
mov
hlt
testb
shld
rorb
repnz
mov
adc
lahf
lahf
aaa
push
adc
pop
and
cltd
cmp
cli
cld
cmp
lahf
cld
sub
mov
or
cs
enter
mov
inc
out
jmp
or
xor
fidivrs
dec
loop
mov
hlt
movsb
and
scas
jbe
mov
jmp
dec
push
stos
or
inc
orb
sbb
inc
jp
orb
mov
mov
scas
or
mulb
stos
and
call
stos
sub
test
dec
clc
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
addl
mov
cld
xchg
je
loop
dec
int3
fcoml
or
mov
daa
add
aaa
jmp
pop
std
repnz
and
xchg
cmp
lds
inc
jo
ds
lcall
cmpsb
mov
xor
mov
imul
pop
scas
sub
cmp
pop
xor
cltd
dec
hlt
push
inc
dec
std
jo
cld
fldenv
icebp
sub
hlt
xor
shlb
shrl
call
les
test
mov
test
or
in
cli
rcr
das
push
fs
imul
jo
ret
pop
inc
repnz
testb
mov
push
and
push
mov
flds
das
repz
mov
pop
ret
pop
jmp
push
inc
cmpsb
mov
xlat
fbstp
mov
add
and
push
adc
adc
push
movsb
jge
push
repnz
xor
sub
ljmp
mov
pop
and
daa
inc
pop
sarb
inc
les
lods
sub
arpl
mov
fisttpll
push
jl
nop
popf
aam
jbe
and
sub
aas
sbb
lods
cmpsb
mov
in
sbb
sbb
mov
or
dec
lea
push
lea
ficoml
dec
dec
loop
nop
in
add
xchg
pop
clc
xor
inc
repnz
cli
fnsave
inc
xor
cltd
fistpll
shlb
mov
scas
xchg
pop
out
jmp
dec
outsb
jns
adcl
je
lods
jmp
mov
clc
hlt
sub
int
popf
xlat
dec
xor
or
ja
in
pusha
mov
jno
fwait
jns
daa
std
pop
aad
cmc
add
lahf
loopne
mov
gs
jl
push
into
imul
jmp
jae
mov
das
imul
mov
aad
sbb
cmp
sbb
insl
mov
adc
scas
mov
insl
add
je
mov
mov
push
das
lea
sbb
sti
outsl
xchg
test
and
scas
xor
scas
jo
jp
loop
sbb
adc
inc
mov
into
push
dec
lret
in
int
clc
adcl
in
dec
outsl
lods
das
jl
sub
add
repnz
shrb
mov
jl
and
mov
sub
xchg
inc
stc
jns
pop
bound
fs
cltd
pop
mov
push
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
mov
mov
pop
or
dec
pop
jmp
cli
clc
jge
mov
pop
out
add
hlt
add
sbb
sbb
xor
jecxz
hlt
dec
fdivs
arpl
cs
mov
xchg
arpl
andb
push
xorb
lret
fs
clc
jo,pn
sbb
adc
jns
insb
or
lcall
jb
xor
fcmovnb
mov
mov
cwtl
mov
push
cmovae
xchg
test
lea
pop
pop
addr16
xchg
mov
xor
out
inc
cs
fistps
sub
and
lea
xchg
call
out
add
push
mov
sub
inc
enter
jbe
movsb
loopne
cwtl
sbbl
loop
mov
cwtl
xchg
jl
cmpsb
repnz
xchg
in
inc
and
fmul
rclb
pop
popa
fsubrp
sbb
jp
lcall
mov
test
outsl
mov
imul
movsb
aas
lahf
xor
mov
dec
xor
mov
cmp
andb
xlat
or
fwait
lret
mov
leave
scas
and
mov
scas
imul
fs
in
pop
inc
adc
add
ljmp
dec
insl
dec
xchg
cmc
mov
sub
inc
xor
sub
mov
shll
ljmp
xorl
cld
clc
xor
cmp
add
add
sub
adc
pop
push
cmp
dec
mov
enter
adc
sbb
nop
std
add
clc
dec
mov
cltd
fadds
out
xor
and
test
or
scas
inc
cmp
cmp
add
ficomps
mov
dec
mov
jo
push
dec
mov
call
adc
sbb
cmp
pop
inc
mov
cs
dec
arpl
pop
cmp
cmp
and
mov
cmp
xor
xchg
adc
je
stos
sub
xchg
and
mov
push
cmp
stos
cs
push
in
lods
dec
stos
push
subb
mov
stos
or
daa
sbb
sbb
pusha
out
mov
jns
sti
loop
push
mov
jecxz
in
xor
je
out
out
int3
lock
cmp
xor
and
in
cli
xlat
adc
sub
ja
add
add
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
jecxz
mov
mov
xor
loope
inc
pop
aad
or
aad
xchg
lcall
leave
cli
lods
in
pop
cli
inc
mov
sub
dec
test
xchg
imul
aaa
outsb
jecxz
xor
das
mov
aas
mov
adc
icebp
repz
sub
pushf
pusha
popf
int3
inc
cmp
roll
jp
mov
add
xchg
ss
dec
jle
add
into
add
pushf
inc
enter
mov
xchg
mov
jle
xor
mov
inc
adc
jl
pop
and
xor
popf
add
mov
out
div
js
shlb
mov
jle
lret
adcb
pop
mov
stos
jle
mov
and
jle
mov
push
cmpl
add
jo
aam
in
and
lahf
xchg
add
lea
and
cmc
mov
add
push
data16
adc
stos
add
fsubl
sbb
add
fisubrs
adc
and
cld
nop
pop
inc
int3
adc
cwtl
push
sub
ret
cmp
push
aam
mov
cltd
or
cmp
cmp
xor
add
shlb
stc
pop
adc
imul
nop
stos
mov
dec
cld
loope
push
push
add
sub
inc
inc
outsb
jbe
mov
loopne
lock
push
cmp
pop
jbe
loope
pushf
addr16
cmp
xchg
std
mov
hlt
sbb
bound
sub
call
cmp
data16
sbb
call
out
out
js
cmp
mov
je
aad
inc
std
pusha
clc
fiadds
data16
fistpll
rcrl
dec
mov
mov
enter
lret
ljmp
inc
jno
mov
rcrb
inc
addr16
sub
stos
leave
sar
pop
divl
or
cmpsb
ret
mov
mov
cmp
std
sarl
jmp
push
hlt
cs
inc
push
fwait
lret
add
pushf
dec
mov
xor
frstor
jmp
dec
popa
int
mov
cmp
mov
cwtl
push
add
mov
xchg
mov
mov
lcall
push
pop
push
popa
out
cmpsl
lret
jecxz
mov
xor
call
xchg
divb
mov
xchg
fisttpl
jnp
push
clc
je
lahf
in
test
add
test
dec
mov
sarb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
inc
rcr
mov
mov
cli
or
in
xchg
ret
test
add
testb
fcomps
inc
and
xchg
cld
mov
fildll
insb
jp
and
sub
dec
xor
stos
mov
pop
rcr
jno
in
mov
push
jmp
fimull
mov
cli
test
or
ficomps
sub
sti
loop
xor
lahf
add
test
loopne
dec
pop
ds
add
icebp
mov
xchg
es
cltd
mov
or
inc
pop
sbb
dec
fisubrs
pop
push
xlat
mov
ss
push
data16
push
pop
or
rcrl
and
mov
pop
packssdw
fsubrp
xor
repnz
es
repnz
jae
aaa
mov
in
sub
in
cmp
jb
stos
ret
xchg
repz
rclb
imul
mov
paddsw
mov
mov
in
movsl
sbb
std
pop
sub
or
arpl
push
lea
lea
adc
test
xor
loopne
xor
or
sbbl
bound
mov
sbb
adc
add
inc
bound
mov
and
inc
adc
xor
jne
popa
mov
mull
test
pop
mov
mov
fadds
jmp
push
into
sub
adc
jge
fisubs
lea
push
jo
lds
mov
sub
jecxz
fcom
lds
mov
pop
repnz
or
test
cltd
add
in
sub
aas
into
shll
js
out
mov
hlt
xlat
sbb
mov
pop
cld
push
xchg
pop
lock
push
jno
fwait
mov
inc
cli
enter
ds
pop
in
or
mov
sub
dec
jns
ss
lock
or
dec
ja
inc
xor
subb
dec
mov
cltd
rcrl
xchg
int
sarl
inc
mov
and
or
inc
iret
jmp
mov
lret
scas
mov
ret
push
and
pop
mov
pop
leave
dec
or
and
loopne
lods
aas
loope
imul
adc
loope
xchg
loope
jb
or
cld
inc
push
adc
pusha
add
mov
dec
mov
or
cwtl
mov
aam
dec
pop
nop
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
hlt
mov
push
mov
sbb
adc
dec
scas
jmp
push
divb
add
call
jbe
div
pop
out
ds
push
in
lret
testl
mov
sarb
shlb
mov
xchg
in
lods
stos
aad
addl
or
cmp
in
out
iret
fists
sub
inc
fcmovnb
sti
enter
aad
and
pop
pusha
push
sub
nop
fadds
xor
fmuls
lods
out
lret
leave
icebp
mov
dec
pop
jnp
push
inc
sbb
pop
xor
push
push
lods
dec
movsl
or
movsb
out
and
adcb
push
or
sub
sbb
flds
rclb
ret
bound
into
xor
pop
daa
xchg
add
fucomp
jnp
sub
imul
xorb
adc
jae
aad
inc
fwait
push
cmp
js
pusha
push
out
add
sub
mov
xchg
and
lock
cmpsl
test
mov
ficoms
dec
lods
enter
shlb
shrl
loope
push
ss
ficoms
clc
pushf
jmp
pusha
xchg
lods
add
mov
sbb
adc
fistpll
inc
popa
gs
cmp
cmp
fs
sbb
aam
lods
fld
and
cli
dec
test
mov
iret
mov
lahf
hlt
jg
and
dec
and
push
scas
ficompl
pop
sbb
out
imul
lods
inc
pop
mov
mov
inc
sub
xlat
enter
aas
jecxz
pop
lods
dec
fstp
pop
jno
and
fimull
inc
jge
cmpsl
inc
aam
repz
and
out
sub
popa
fstpt
add
push
push
aas
jecxz
sub
xor
call
lock
sbb
mov
icebp
movsl
daa
mov
jp
lcall
and
add
xchg
add
int
ss
sti
inc
ljmp
add
leave
ljmp
in
daa
mov
mov
mov
movsl
pop
data16
adc
inc
test
mov
push
mov
jbe
scas
cmpsb
pop
mov
dec
insl
idiv
xor
call
sub
xchg
and
adc
jp
imul
imul
mov
ss
cli
popa
fsubr
in
sub
or
adc
orb
sub
rorb
pop
push
test
repnz
cmp
push
push
int
mov
stc
loope
outsb
fdivr
lahf
pop
in
mov
pop
add
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
rclb
out
inc
and
push
stc
sbb
sub
enter
insl
test
and
repz
and
enter
mov
jo
jns
jae
inc
dec
mov
jg
xor
fs
es
dec
sbb
bound
bswap
sahf
bound
mov
inc
out
xor
sahf
inc
ljmp
addr16
cmp
cmc
mov
and
inc
dec
and
xchg
pop
in
repnz
pop
fisubs
and
mov
cmp
sahf
push
mov
inc
jp
sub
add
xchg
popa
lea
icebp
mov
clc
pop
leave
xchg
leave
in
sbb
jo
xchg
jmp
pop
sub
loopne
mov
ficoms
mov
je
cwtl
cmovb
adc
push
mov
adc
xchg
out
add
cltd
and
icebp
push
stos
cmp
mov
push
inc
shr
ljmp
xchg
jp
xchg
dec
cmovno
cwtl
pop
out
shl
and
or
clc
cmp
dec
pop
adc
and
ljmp
sbb
add
sbb
xchg
xchg
push
iret
pop
fidivrs
mov
pop
xchg
mov
cmpl
imul
dec
cli
fisttpl
ja
push
in
push
in
leave
test
rorl
xor
pop
imul
pop
je
loop
inc
subl
repz
lret
and
out
inc
ljmp
frstor
xchg
addr16
xchg
sbb
and
lret
clc
out
or
mov
and
icebp
rol
add
fidivl
cmp
adc
lahf
jnp
cmpsb
add
into
scas
pop
dec
movsl
aam
loope
jl
addb
ss
push
mov
adc
outsb
stc
pusha
push
jb
pusha
rolb
stos
pop
loop
movsl
xor
scas
cmp
sub
movsb
in
out
test
inc
inc
cmp
test
or
sbb
jb
dec
loop
cmp
sub
icebp
mov
add
shll
or
out
push
test
lret
mov
arpl
pop
cmp
loop
stc
aas
or
push
inc
dec
ja
andl
xchg
mov
adc
inc
js
out
jb
ficompl
scas
cmp
jae
mov
pop
out
add
mov
movsb
ss
data16
rcll
push
mov
xor
out
insl
or
inc
iret
in
cwtl
shll
fsqrt
ljmp
movl
mov
mov
sub
jmp
test
mov
push
sub
insl
sbbb
lcall
cs
jl
shrb
cli
int
cmp
push
je
es
xchg
out
mov
push
jg
push
out
inc
decb
mov
jmp
mov
mov
mov
xchg
sbb
mov
cs
xor
lahf
xchg
lret
mov
pop
pop
xor
fsubs
sbb
sub
pushf
ss
cmpsl
ret
or
rcrl
test
cmp
pop
clc
pusha
or
out
mul
inc
js
jns
dec
clc
outsb
fcomp
sarl
fsubp
in
aas
loop
inc
notb
movsb
xchg
int
out
jge
adc
mov
mov
mov
adc
mov
adc
adc
pop
shrd
leave
adcb
popa
std
inc
sarl
push
cmpsb
push
testb
mov
push
mov
jle
push
fs
or
lahf
lods
adc
data16
das
mov
in
fwait
lds
mov
enter
mov
aam
sbb
xchg
shr
xor
and
mov
sub
push
add
imul
aad
cmp
stos
mov
and
sub
jp
out
adc
punpckldq
out
xor
lods
xor
push
and
shlb
mov
add
sbb
lods
jmp
outsb
inc
xchg
mov
push
fcomi
fucom
sbb
out
lds
lea
in
gs
inc
adc
cli
push
mov
je
fdivp
es
add
mov
mov
call
pop
arpl
inc
adc
aam
pushf
and
or
push
jg
mov
pop
cmp
loopne
xor
in
inc
mov
jno
imul
xlat
das
leave
inc
leave
push
cwtl
mull
dec
gs
mov
mov
sahf
fs
cmp
sbb
cmp
std
mov
push
mov
inc
data16
jae
loope
fiadds
sbb
call
mov
push
jmp
loopne
lahf
pop
test
lock
insl
aam
xlat
mov
aas
sbb
imul
mov
jp
jb
adc
pop
push
cmp
gs
mov
pop
ljmp
std
mov
adc
pop
cmp
cmpsl
adc
inc
and
bnd
mov
mov
push
repnz
scas
jae
mul
pop
pop
loopne
mov
jg
xchg
push
xor
pushf
test
stc
rorb
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
lret
pop
jo
jl
sbb
sbb
daa
push
sbb
push
push
cmp
notb
ret
loop
sbbl
mov
in
sub
ficoml
pop
mov
bound
dec
add
gs
arpl
dec
daa
loope
xchg
pop
aas
ffree
sub
or
pop
pop
movsb
stos
orb
lret
clc
ret
xorl
add
xchg
aas
and
in
add
ljmp
jb
dec
fldcw
xchg
mov
jl
xchg
cmp
scas
jge
stc
into
call
stos
nop
mov
add
dec
sub
ljmp
popa
and
in
push
pop
xchg
dec
in
std
sarl
adc
cmc
cli
stc
aam
cmp
push
data16
ljmp
push
push
mov
lods
sub
pop
jle
jle
jl
test
call
inc
lea
or
jle
pop
in
mov
add
mov
xchg
dec
xlat
or
push
andl
mov
ljmp
mov
add
repnz
ret
movsb
or
jb
mov
scas
insl
scas
stos
dec
ja
jo
shrl
add
bound
sbb
aaa
and
nop
andl
inc
nop
adc
mov
addr16
mov
fsubrs
lock
mov
sti
mov
movsb
daa
dec
ret
mov
rorb
add
push
adc
xor
jmp
cmp
and
es
sub
push
mov
pusha
test
pop
insl
stos
ret
and
adc
cwtl
xchg
aam
xchg
ss
les
mov
jo
lahf
in
in
add
pop
mov
pop
rorl
cltd
daa
out
mov
and
pop
xor
cs
push
dec
pusha
pop
mov
and
dec
mov
aad
xor
cwtl
mul
ljmp
adc
into
sbb
sarl
lcall
pop
inc
inc
insb
add
repz
cmpsl
ljmp
push
sub
dec
addr16
mov
xchg
push
push
dec
mov
xchg
mov
jl
pusha
clc
inc
mov
mov
sub
jnp
dec
stos
sbb
jo
movl
movl
movl
movl
movl
movl
movl
movl
push
jmp
dec
sub
sub
jp
jo
js
sbb
sbb
pop
divl
xchg
mov
fcmove
pop
ficoml
outsl
mov
cmpb
adc
fdivs
ljmp
sbb
outsl
cltd
add
pop
ljmp
cmpb
cwtl
stc
mov
sti
inc
jnp
pop
arpl
push
iret
jge
adc
mov
mov
mov
test
mov
push
imul
jns
mov
lods
mov
and
popf
pop
outsl
loop
inc
stos
iret
cwtl
imul
dec
sub
mull
call
and
fmulp
lods
movsl
popa
fsubs
push
jb
int3
into
jns
mov
mov
imul
pop
adc
test
lods
popf
shrl
js
popf
mov
xchg
lret
jns
pop
imul
jp
mov
adc
mov
pushf
sub
movsl
jle
jns
cwtl
push
aam
push
mov
cld
fcoml
sub
add
inc
push
cltd
in
mov
adc
loop
sbb
jb
enter
and
push
xchg
add
in
inc
cmpsb
push
or
sub
cli
out
jl
dec
sbb
inc
cs
ret
data16
sub
sbb
xchg
cmc
addr16
pop
js
xchg
cmp
mov
out
stc
aam
jmp
loop
lret
jnp
jg
sti
push
pop
xor
push
pop
jmp
pop
scas
jno
xchg
std
fs
pop
pop
pop
xchg
jle
fs
add
fistl
mov
xchg
sbb
loopne
inc
out
mov
jge
or
cli
push
das
inc
sbb
iret
enter
mov
ret
nop
repnz
xchg
addr16
dec
mov
inc
addr16
jle
xchg
loop
arpl
push
subb
and
lods
inc
nop
dec
cmp
xchg
sbb
sub
fldt
sub
mov
addr16
xchg
mov
add
fucomp
cld
idivl
inc
lods
jmp
cli
or
and
lds
loopne
pop
xor
ds
inc
les
ja
mov
js
push
lcall
dec
fnstcw
hlt
out
test
mov
jne
or
mov
xor
in
xchg
add
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
inc
push
je
sbb
sbb
fbstp
adc
push
xor
cs
push
inc
xor
mov
cli
movsl
inc
mov
sbb
mov
out
cmpsl
sbb
mov
insb
sbb
out
xchg
add
ret
out
ret
or
pop
sbb
lock
xor
mov
mov
out
dec
mov
mov
jnp
pushf
nop
dec
and
dec
test
rclb
mov
movntps
insb
cmp
or
push
out
or
and
adc
cmc
mov
push
imul
bound
idiv
lahf
inc
adc
mov
movb
sub
bound
cmp
lret
mov
mov
shll
jecxz
xor
inc
fwait
cmp
pop
xor
push
cld
leave
cmp
dec
data16
adc
dec
mov
sarb
andl
rcrb
cwtl
jge
mov
in
nop
jno
jp
or
pop
ret
loop
call
dec
shrb
inc
mov
pop
insb
jl
sbb
lret
xor
out
repnz
out
dec
push
adc
mov
push
mov
dec
jge
test
jns
cltd
jbe
mov
xchg
or
sbb
aam
jecxz
fdivrs
test
mov
pop
sub
out
pop
xchg
subl
enter
ljmp
cmp
dec
mov
sub
or
xchg
inc
mov
mov
lcall
mov
adc
decl
push
mov
shl
push
je
add
add
jb
pusha
adc
movsl
stc
pusha
sub
mov
decb
dec
pop
je
in
add
std
stos
inc
sbb
add
out
or
insb
fwait
rol
jle
push
test
mov
jb
ljmp
out
into
xorb
lcall
or
cmpsl
mov
nop
adc
arpl
das
sarl
out
outsb
daa
aas
ret
std
loopne
sti
cmp
push
inc
bound
xor
xchg
negl
hlt
xlat
test
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
leave
pop
jmp
aaa
lcall
cmp
cmp
and
fdivrl
notb
or
add
cmp
arpl
aas
sahf
mov
rorb
adcl
pop
and
aad
sbb
sbb
and
jae
notrack
mov
adc
dec
push
push
jge
insb
clc
mov
lea
cmp
filds
xchg
les
sub
int3
cmp
jno
stos
push
xchg
mov
call
insb
addr16
inc
add
xchg
push
repnz
add
inc
fsub
leave
mov
call
pusha
pop
test
in
pop
pop
pusha
inc
mov
or
jp
xor
popl
dec
std
add
xchg
hlt
sub
adc
hlt
xchg
add
pusha
jnp
ss
pusha
lods
dec
aas
lds
mov
mov
mov
in
and
aad
cmp
or
flds
ss
js
push
mov
cmpl
dec
das
mov
inc
out
mov
aad
mov
in
aad
push
jo
out
rclb
mov
iret
out
inc
cwtl
jnp
add
es
std
jmp
mov
add
xchg
cs
push
pop
pop
or
push
sti
out
sbb
lods
inc
cmp
ficomps
lea
add
mov
fs
rolb
aaa
mov
inc
loope
out
sub
jg
jle
dec
call
or
xchg
fidivrs
add
jmp
xor
aas
daa
stos
das
adc
gs
push
push
cltd
jae
sbb
sti
cmc
repz
aaa
mov
into
jno
lret
pushf
loopne
add
test
inc
inc
scas
subb
lret
dec
dec
sub
xchg
or
aad
mov
push
stos
sub
or
test
clc
lock
mov
jecxz
push
xor
imul
ret
outsl
sub
jp
cmp
arpl
sbb
aad
adcb
inc
arpl
add
mov
jo
adc
or
mov
xchg
out
mov
scas
mov
fs
std
test
dec
mov
push
mov
sbb
add
add
ret
nop
jmp
pop
and
xor
pop
sbb
xor
sbb
sbb
dec
sub
push
or
mov
sub
push
sub
push
push
xor
pop
lods
dec
adc
imul
outsl
adc
loopne
sub
scas
ret
fistl
in
sub
rcrb
sub
lret
mov
mov
push
fwait
popf
out
sbb
sbb
adc
sub
psadbw
cmc
adc
rolb
lods
add
idivl
adc
pop
bound
pop
xor
in
mov
out
lods
mov
in
lahf
call
jl
sar
add
jle
cmp
sbb
sub
imulb
lods
inc
dec
mov
mov
pop
lcall
lret
fxch
lods
fimull
push
addb
lret
xchg
mov
lret
inc
icebp
in
and
jg
scas
in
pop
inc
and
nop
das
jns
push
out
sub
push
mov
int3
iret
je
mov
adc
sbb
inc
push
hlt
inc
pop
or
rolb
sarl
jo
or
std
add
mov
mov
jp
sub
adc
stos
mov
lock
gs
or
insb
out
pop
adc
jns
xchg
cmp
jns
out
cmp
les
cmpsl
xchg
push
popa
pop
mov
loopne
faddl
idivl
aad
sbb
test
out
test
and
xor
pop
sbb
sub
jns
andl
popf
mov
pop
cmpsl
push
insl
inc
mov
or
adc
lea
mov
sub
shlb
test
push
sbb
sub
pop
stc
mov
xchg
int3
mov
js
lret
cwtl
or
in
xlat
fwait
and
repz
cltd
and
add
movsb
adc
mov
xor
jo
fwait
mov
or
xchg
pop
das
data16
scas
mov
sti
cld
ss
rcll
addl
rcr
mov
shr
or
cmpl
xchg
dec
push
and
sti
imul
sub
popf
jmp
repnz
adc
xchg
or
jno
or
popa
adc
lcall
pop
shrb
jle
push
ret
loop
jae
jecxz
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
jle
cltd
mov
jno
sbb
call
sbb
add
iret
call
push
dec
jp
sti
push
xchg
stos
cmpsl
aam
std
adc
imul
xor
out
add
fdivl
inc
jl
mov
add
scas
push
pusha
pmuludq
lds
hlt
dec
push
push
add
push
mov
ret
or
jmp
adc
ror
shrl
jp
shll
or
sub
lods
leave
out
and
or
mov
xchg
jbe
sbb
cmp
movsw
outsb
or
jnp
pushf
mov
lret
mov
mov
leave
cli
dec
idivl
inc
cmp
mov
int
inc
sahf
dec
ret
aas
idivl
data16
popf
sub
fwait
jno
sbb
les
out
idivl
fptan
sarb
inc
repz
in
mov
jecxz
ret
xor
pushf
imull
bound
dec
xchg
rcrl
inc
xor
cmpsb
out
mov
nop
inc
fwait
lea
insb
aam
out
inc
pop
lcall
mov
jmp
add
push
icebp
mov
lds
stos
mov
and
repz
jecxz
pop
fstpt
pop
xchg
pop
jno
push
test
fwait
xor
cld
ja
mov
add
push
test
sub
xchg
inc
lods
mov
jb
shl
in
lcall
inc
xchg
inc
jecxz
xchg
jne
js
loop
mov
lret
jle
cmp
jmp
add
jnp
jne
mov
sbb
outsl
popl
cmpsl
adc
cmp
shrl
sbb
or
mov
push
inc
daa
cmp
fsubrs
sub
jo
movsl
inc
lret
mov
stos
fsubs
jecxz
lods
int3
sbb
mov
mov
pop
es
push
inc
push
pop
or
jecxz
dec
mov
into
mov
enter
insl
cwtl
arpl
add
jle
mov
int3
xlat
fwait
sub
xchg
cmp
clc
popa
lock
xchg
and
pop
mov
push
scas
mov
or
push
cmp
adc
sbb
push
mov
jmp
out
enter
cmp
jge
rol
dec
ljmp
cmp
and
in
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
add
xchg
jo
pusha
sbb
jno
sbb
pop
mov
lock
sub
shll
inc
mov
sbb
add
int
xchg
shlb
popf
les
pop
push
push
insb
mov
add
or
repz
repz
cmpsb
mov
mov
dec
jne
aam
pop
std
lea
push
xor
ja
aad
inc
mov
in
jnp
inc
adc
clc
push
cwtl
dec
fcomip
insb
mov
or
jmp
adc
push
dec
orl
push
hlt
cli
fisubl
scas
addr16
in
or
dec
jecxz
insl
inc
inc
dec
mov
sub
insb
mov
push
loopne
fnstcw
lahf
dec
leave
xchg
dec
cmp
push
stos
adc
pop
js
addb
repz
in
ret
cmp
sub
xchg
jo
pusha
sub
pushf
jg
aam
mov
lods
mov
xchg
cmp
cmp
add
cmp
cmc
xchg
xchg
inc
or
and
stos
and
ret
cmp
xchg
dec
lret
adc
aas
dec
push
sub
enter
mov
inc
adc
push
cmp
push
rcll
and
push
xor
repnz
in
inc
lock
popa
mov
stos
pushl
dec
add
jae
leave
icebp
adc
sub
fwait
cltd
out
roll
fwait
js
mov
sbb
mov
lret
push
outsl
and
xor
or
pop
pop
xchg
ret
ror
xor
fs
xor
ja
stc
xor
mov
mov
scas
cmpsl
jl
inc
insb
cmp
jns
mov
test
jle
mov
setge
js
or
hlt
data16
ja
les
pop
xchg
dec
mov
and
ffree
lock
idivb
out
insl
rol
dec
test
loope
and
loop
in
stos
xor
dec
popa
ret
out
inc
idiv
or
push
push
inc
xor
cmp
mov
mov
iret
pop
and
xor
nop
jbe
xor
imul
xlat
mov
cmp
outsl
incb
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
mov
push
pop
sbb
jno
sbb
enter
jg
mov
sbb
xor
cs
mov
lods
xor
lods
dec
jne
pop
jae
cmpsb
lret
sub
outsl
call
adc
add
mov
jg
jl
add
sbb
stos
inc
aad
dec
outsl
xlat
pop
pushf
push
mov
jl
mov
std
mov
mov
ret
push
xchg
insl
cmc
and
mov
test
and
test
xor
and
mov
sti
push
leave
movsl
test
and
jbe
push
mov
lret
xchg
stos
xor
test
rcll
inc
mov
sub
enter
xlat
call
and
in
hlt
sbb
call
ret
cs
jbe
scas
inc
nop
inc
jge
xchg
add
stos
mov
cmpsl
adc
imul
hlt
sbb
bound
lret
mov
repz
push
cmc
and
daa
mov
pop
loope
add
push
add
loope
outsb
inc
or
out
das
popl
cmp
and
notl
add
add
aad
iret
in
out
nop
lea
push
mov
push
into
push
mov
and
int3
xor
sbb
int3
dec
mov
push
dec
lock
subl
call
pushf
loope
pop
outsb
loop
pop
nop
test
std
or
cs
adc
addr16
pop
mov
pop
adc
addr16
xchg
ja
cmp
dec
aas
pop
decl
je
ljmp
push
pop
leave
mov
outsl
lret
ret
out
lret
shll
sub
sahf
fbstp
popa
ljmp
sub
rol
xchg
jl
xchg
addb
insl
insl
aam
add
jge
push
adc
push
jno
fisubs
cmp
and
cmp
xchg
and
ret
lcall
mov
mov
jmp
insb
lret
lahf
inc
add
popl
mov
bound
lods
iret
pop
movsl
xchg
jo
ss
scas
push
sbb
call
out
cs
subb
clc
jge
mov
or
inc
add
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
xlat
in
push
in
mov
inc
mov
dec
xchg
xor
pop
cmp
mov
stos
fists
xor
cmp
sbb
push
pop
test
jo
mov
xchg
mov
int
sub
ss
or
cmc
outsb
in
sub
or
inc
xor
lods
push
add
movsb
jne
push
sub
cltd
push
lds
stos
jnp
scas
pushf
aad
xor
inc
dec
mov
xlat
iret
mov
xchg
out
mov
dec
pop
insb
repz
sbbb
mov
out
pop
mov
out
jne
xchg
dec
in
jns
xchg
sbb
lea
jo
push
sub
movsl
mov
mov
add
dec
dec
mov
adc
out
cmp
int
lods
ds
xchg
ret
aas
imul
notb
xchg
jae
sub
aas
mov
and
stos
push
into
inc
fdivp
cmp
dec
aaa
sbb
add
pushf
inc
cmp
arpl
aad
and
inc
pop
dec
mov
lret
xor
mov
int
movsl
jg
sub
insl
pop
sbb
shlb
ret
pop
pusha
arpl
icebp
cld
mov
lret
mov
xchg
xor
leave
adc
and
and
xor
repnz
aaa
lods
or
jns
imull
ss
mov
pop
pop
cmc
pop
mov
insl
cmpsb
push
insb
push
addr16
fsubrl
pusha
cmp
lahf
clc
iret
js
movb
add
xlat
cmp
xor
das
je
lock
pop
cmpsl
jmp
cmp
sub
imul
mov
pop
cmp
mov
out
cld
mov
dec
jno
into
mov
fcoms
xor
mov
sbb
test
test
cmpsl
enter
out
push
dec
in
or
push
iret
aad
add
cli
fidivs
xchg
clc
xor
jo
mov
jbe
mov
lcall
push
fidivrl
mov
mov
push
add
testl
mov
mov
cmp
lret
bound
dec
mov
xlat
pop
imul
and
jno
mov
daa
mov
inc
mov
jo
pushf
dec
add
sub
cld
sub
neg
clc
sahf
notb
adc
outsb
test
aas
in
sbb
pop
loope
sahf
aas
adc
xchg
cs
imul
mov
pop
in
ficomps
dec
inc
out
jecxz
jnp
cmpb
jmp
mov
jbe
cmc
sub
sbb
mov
push
cmp
pop
hlt
inc
fcmove
mov
mov
fiaddl
mov
fsubrl
out
les
xchg
push
mov
rorl
sarb
pop
test
clc
xchg
inc
or
fisttpl
cld
add
xchg
scas
xor
repnz
xor
sbb
jg
call
xlat
push
test
dec
mov
in
aas
mov
ja
adc
sub
push
cltd
mov
int
jbe
sbb
cld
jno
divb
mov
inc
adc
sbb
data16
outsl
adc
notb
pop
mov
test
and
dec
cli
ror
mov
loop
and
sbb
outsl
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
sub
sub
push
fldcw
pop
lret
push
sti
lret
in
ja
xor
aaa
jl
jne
xor
scas
or
popf
dec
popa
popf
out
mov
inc
stc
mov
test
add
data16
lret
push
aam
xchg
ss
pop
rcrb
sub
sbb
mov
mov
adc
shll
dec
clc
pusha
or
nop
xor
scas
xchg
outsb
mov
mov
insl
xlat
cmp
mov
inc
cmc
enter
scas
push
xor
or
push
push
jmp
popf
mov
adc
inc
xor
stc
jle
mov
mov
push
push
and
add
xchg
imul
sbb
out
mov
jmp
repnz
ret
pop
outsb
out
or
xor
mov
shl
mov
xchg
out
mov
mov
mov
sub
cmp
pop
mov
lds
jo
repnz
cmp
iret
xor
rcrb
addr16
xor
mov
out
mov
xchg
leave
lret
cmpsl
pusha
mov
adcl
lret
sti
std
call
cmpl
mov
xchg
arpl
outsb
cwtl
insb
movsb
mov
jnp
stos
ds
sub
faddl
cmp
jmp
stc
and
pop
pop
jg
lods
aam
xor
xchg
or
shl
adc
fsub
mov
inc
loop
inc
scas
into
push
clc
inc
in
or
adc
fidivrl
test
xchg
lock
data16
pop
inc
adc
fcomps
scas
push
jge
stos
xchg
add
sub
notb
in
jg
dec
cmpsl
out
jne
clc
inc
lcall
insl
out
ljmp
gs
ljmp
sub
loope
repnz
lcall
dec
repnz
add
inc
xor
lock
rcll
xor
bound
jle
repnz
push
sub
clc
mov
leave
sbb
aam
scas
out
or
xor
orb
scas
test
jno
dec
push
enter
sub
pusha
sub
fcom
gs
xchg
arpl
adc
lock
lcall
out
fwait
jl
inc
adc
std
arpl
xchg
inc
sub
out
push
mov
nop
lods
dec
cmp
popf
pop
mov
pop
leave
pop
addl
mov
fidivl
pop
inc
fmuls
pop
arpl
inc
xchg
sbb
dec
mov
mov
and
mov
sub
call
add
xchg
scas
xchg
test
iret
sar
mov
ret
push
stos
test
roll
orl
pop
pusha
xchg
xor
and
scas
xor
dec
dec
sub
stos
mov
fs
adc
adcl
andb
push
addr16
les
call
and
mov
rorl
xor
sub
mov
int
shll
sbb
jge
cwtl
loop
andl
je
pusha
loope
xchg
mov
pop
jecxz
repz
sbb
xchg
ss
inc
fsubr
ja
and
sub
test
cs
hlt
lahf
dec
cmpl
jp
negb
mov
xchg
pop
aam
sbb
outsl
xchg
xor
arpl
mov
pusha
mov
test
movsl
xor
cmp
push
inc
push
rorl
fwait
imul
push
stos
add
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
ret
jl
dec
sbb
stos
adc
sbb
dec
loopne
xor
inc
fidivrs
dec
test
mov
aam
cmp
mov
frstor
sub
inc
shlb
push
and
fstpt
lods
xchg
adc
in
sub
dec
std
xchg
lret
aas
inc
add
jmp
mov
out
xchg
imul
ljmp
icebp
in
inc
pop
jp
int3
cltd
popl
stos
out
mov
popf
xlat
sbb
fucomip
mov
inc
push
jmp
in
divb
add
and
jle
sub
cmp
add
push
icebp
add
ss
mov
das
sub
cmp
mov
mov
aam
inc
das
fbstp
or
mov
imul
lock
xchg
mov
mov
inc
test
les
insl
daa
out
loope
ret
scas
imull
add
mov
mov
or
pop
or
outsb
mov
out
movsb
inc
subb
ja
add
rclb
cmp
xor
lock
sbb
pop
or
ds
dec
mov
jge
movsl
in
mov
inc
inc
pop
or
movl
lret
push
push
dec
mov
jns
movsb
push
adc
shll
jge
test
iret
in
popa
stc
mov
adc
lcall
lahf
push
ljmp
cs
les
stos
mov
fs
int3
push
aam
adc
pop
and
push
das
push
or
call
push
data16
jge
jl
xor
loop
inc
and
ds
lahf
jge
inc
call
decl
lret
dec
sbb
sti
mov
jle
and
outsb
and
dec
stos
and
mov
fbld
cwtl
dec
addr16
xchg
mov
cmp
mov
into
aas
or
fwait
mov
mov
test
mul
lcall
loope
xor
lret
cmp
sub
jne
xor
mov
les
out
ss
fwait
loopne
sbb
aaa
sar
loop
push
lock
add
adc
pop
sbb
jle
xstore-rng
cmpsl
lds
ret
and
decb
push
lret
push
stos
xchg
insl
imul
loopne
sub
sbb
jmp
xor
sbb
rol
lea
daa
inc
imul
adc
sub
shl
fnsave
les
pusha
pop
inc
notl
xor
fdivl
pop
shlb
adc
fwait
lock
das
pop
mov
out
into
push
pop
int3
mov
xchg
loope
sahf
nop
inc
push
mov
mov
aaa
movsb
fcomp
and
jo
out
pop
jge
and
cmp
push
rcrb
pop
lcall
out
jo
movsb
push
push
test
push
push
mov
inc
push
ds
mov
sub
dec
sbb
mov
popa
mov
inc
aad
dec
push
dec
dec
add
inc
jp
dec
mov
fstl
int
mov
and
mov
std
int3
mov
pop
in
cmp
test
cmc
mov
push
jne
notl
jno,pn
dec
xor
mov
cmpsb
mov
movsb
ss
cld
and
fldenv
jae
add
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
cmp
inc
sbb
stos
adc
sbb
imul
mov
push
mov
insb
push
mov
push
cmp
test
mov
mov
xor
fdivrl
or
orl
mov
mov
insb
add
fnstsw
popf
enter
jecxz
cld
arpl
xchg
xor
adc
test
pop
inc
std
jno
imul
sbb
inc
inc
fsubrs
inc
popa
push
inc
in
rolb
mov
mov
mov
sub
pop
mov
clc
push
cltd
fwait
imul
or
test
leave
mov
adc
mov
xor
addb
add
push
frstor
xor
pop
mov
mov
bound
mov
push
dec
stos
aaa
lods
dec
push
xor
xchg
andl
push
hlt
push
ror
jmp
mov
jp
cmp
mov
loop
mov
mov
add
and
in
inc
sbb
inc
mov
in
int
mov
stos
jg
hlt
add
data16
shl
popf
ss
mov
xor
mov
iret
sub
clc
cwtl
push
add
dec
fcoml
aad
cmp
jns
out
es
inc
out
adc
adc
fmuls
aaa
gs
mov
pop
adc
jae
outsl
aam
push
xor
jp
in
adc
add
outsb
in
pushf
jae
idiv
addr16
nop
xchg
fnsave
cmp
push
inc
xchg
pop
add
push
rolb
stos
movsb
jno
andb
add
lahf
xor
dec
lcall
imul
in
lret
bound
movsl
pop
adc
dec
mov
xchg
adc
inc
lock
icebp
lock
add
add
dec
mov
jecxz
jp
divl
ret
test
xchg
mov
dec
cmp
mov
and
or
sub
sahf
outsl
notb
dec
fsubr
mov
insb
cwtl
stc
and
pop
not
sub
fisubs
mov
pop
hlt
jle
cmp
sbb
cmc
adc
sbb
les
nop
faddp
loop
sbb
sbb
fdivs
xchg
int
mov
pop
sbb
pushf
mov
and
add
sbb
lock
repnz
outsb
push
mov
in
push
and
push
imul
mov
pop
cltd
adc
mov
test
sub
adc
imul
loope
jns
dec
cmp
pop
repnz
pop
adcb
int
xchg
xchg
mov
in
xor
cmp
push
loope
cmpsb
push
inc
lods
lea
mov
cli
mov
sub
loop
dec
dec
dec
shrl
js
xor
xchg
fists
dec
dec
dec
in
aas
mov
mov
mov
lcall
daa
jl
sub
cmp
repz
dec
daa
dec
insb
faddl
add
cld
shll
cwtl
cs
out
inc
dec
test
ret
dec
mov
fdivrl
aad
mov
mov
shl
push
pop
cwtl
add
in
xor
dec
das
lahf
and
push
lcall
ret
rclb
pop
es
inc
sbb
lds
or
pop
pop
out
mov
cld
jnp
and
outsl
or
in
icebp
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
cwtl
mov
idivl
sbb
stos
adc
sbb
xchg
loopne
cmp
sub
mov
dec
cmpb
sbb
aaa
mov
jo
jb
mov
and
scas
ss
pop
test
inc
insl
push
repnz
leave
pop
mov
adc
cmp
sbb
sbb
xor
jno
into
outsl
stos
je
stc
test
mov
ja
and
jne
inc
and
ret
arpl
add
and
je
or
subps
xor
loope
jecxz
jbe
adc
pop
js
xor
and
movsl
ret
xorb
ss
filds
sub
sub
imul
mov
and
jg
lcall
psrlq
add
fwait
jo
shlb
into
ss
stos
scas
in
adc
movsb
pop
sub
in
mov
nop
or
xchg
pop
stos
cmp
call
xor
xor
lock
jmp
cmpsb
adc
adc
loope
test
lods
push
arpl
sbb
mov
in
sub
add
xchg
fadds
add
mov
sbb
pushf
arpl
xlat
inc
cld
pop
ljmp
fisttpl
xchg
cmp
cmp
lahf
mov
popa
xchg
dec
sti
inc
xor
xchg
lods
adc
xor
in
loopne
mov
mov
xor
jge
arpl
test
jmp
roll
mov
repnz
in
jbe
lea
jne
push
insl
add
cmp
pop
jcxz
sbb
cmc
repnz
nop
jg
ss
leave
adcl
mov
mov
lcall
inc
cmp
mov
push
push
xor
movsl
imul
push
mov
shll
mov
inc
cmp
fdivrl
mov
imul
push
mov
inc
jns
cltd
adc
fcmove
mov
ss
rorb
popa
insl
or
dec
inc
stc
sarb
cmp
int
cwtl
xchg
pop
sub
cmpsl
mov
mov
ret
cmp
xor
sub
mov
pop
nop
psrld
arpl
dec
in
lahf
dec
or
pop
pavgw
push
or
mov
roll
int3
mov
xor
outsl
xchg
mov
sbb
scas
arpl
ret
adc
stos
cmpsl
cmp
sub
xor
adc
and
fdivr
push
rcl
in
loope
mov
sub
adc
sbb
pop
bnd
push
imul
cmp
aaa
push
jp
jl
enter
icebp
out
inc
test
dec
fisubrs
cld
xorb
js
out
xchg
cmp
sti
jge
lcall
in
out
daa
dec
repnz
fsubr
movsl
scas
inc
ds
and
mov
ljmp
pushf
and
and
push
ljmp
mov
mov
out
add
jno
pop
lods
incb
push
in
sub
data16
popf
push
scas
repnz
push
lds
sbb
sub
and
add
sbb
lea
rolb
mov
jae
ret
cli
lock
add
or
lret
rclb
repnz
lods
push
mov
mov
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
nop
or
stos
mov
sbb
stos
adc
sbb
ja
push
pusha
sbb
imul
mov
and
dec
jo
rorb
jp
push
mov
das
sub
xchg
int
and
push
and
dec
nop
mov
inc
pop
mov
cld
lds
cmovge
xlat
sub
test
mov
and
or
rorl
repnz
test
push
aas
mov
ljmp
cli
cwtl
xchg
inc
mov
mov
shlb
pop
idivb
sub
pop
push
add
ljmp
mov
dec
sbbb
xorb
es
shrb
lea
xchg
int3
sbb
dec
das
mov
std
movsl
in
mov
aas
data16
or
hlt
test
adc
jne
aam
mov
popf
icebp
adc
cmpsb
test
in
cli
arpl
int3
ret
jecxz
lock
push
aad
shrb
in
test
add
fnsave
imul
cmp
and
lea
sub
dec
inc
jno
movsb
sbb
xchg
mov
adc
test
add
jae
xchg
enter
dec
sbb
mov
jecxz
lods
inc
dec
rorb
je
inc
add
mov
add
fsubrl
fmuls
dec
dec
sbb
add
push
mov
pop
push
pop
mov
pop
call
ja
loopne
mov
inc
sbb
mov
stc
push
mov
sbb
rorb
pop
dec
cmpsl
dec
push
insb
gs
adc
cltd
xor
and
add
mov
sub
nop
hlt
cld
xchg
xchg
les
int
or
clc
in
jle
int3
pop
or
testl
dec
lahf
push
int3
jg
addr16
mov
adc
repz
push
dec
imulb
inc
bound
popf
aad
push
add
rorb
mov
test
pusha
mov
push
inc
negb
enter
enter
clc
jo
insl
jbe
in
push
xor
lock
dec
push
jb
sbb
cltd
faddl
push
mov
push
into
push
inc
nop
scas
mov
cmp
jns
adc
pop
pop
adc
imul
nop
jecxz
gs
dec
add
jne
xchg
bound
mov
jge
pop
push
push
dec
arpl
bound
ds
jle
mov
cmp
in
jb
inc
pop
lret
inc
aas
test
dec
scas
inc
inc
dec
out
add
fwait
test
dec
xor
push
xchg
enter
xor
int3
jae
jecxz
xchg
cmpsl
and
inc
sbb
jb
cmp
add
or
mov
add
pop
mov
ljmp
mov
les
clc
jg
in
sarb
mov
xchg
jb
test
idiv
pop
cmc
add
mov
sbb
mov
outsl
pop
adc
in
jge
cmpb
pop
jmp
int
loopne
lahf
cltd
cmp
or
mov
insl
pop
add
pop
ret
lret
sbbl
movsb
and
inc
rcr
push
fistpl
sti
or
cmp
lahf
lods
imul
ss
in
jne
cmpsb
outsl
jmp
xchg
dec
out
inc
outsb
push
mov
sbb
dec
push
xor
lods
mov
sbbb
or
sub
lcall
xchg
leave
shl
mov
inc
xchg
adc
jae
or
aam
loope
or
sti
outsl
mov
adc
mov
add
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
cmp
sbb
adc
sbb
lock
testb
cmpsb
shlb
mov
cmpsl
fsubrl
fidivrs
roll
dec
popf
repz
cltd
push
or
push
pop
test
outsl
and
lods
mov
and
dec
idivb
aaa
cwtl
or
xchg
mov
nop
movsb
scas
dec
cltd
fsts
mov
loopne
mov
out
int3
inc
mov
pop
pushf
inc
cmp
pop
in
push
jg
aas
ds
mov
cmp
pop
cld
aas
rclb
mov
out
mov
push
xchg
inc
ret
movsb
jbe
and
xor
dec
jp
ljmp
push
test
int
pop
aaa
cs
cmpsb
jnp
pop
sub
enter
popf
out
outsl
ja
add
pop
leave
mulb
and
xorb
push
dec
scas
int3
cmp
cltd
scas
shld
sti
js
rcll
mov
mov
les
shll
leave
test
lock
xchg
dec
mov
or
and
mov
in
jmp
push
lahf
xor
cmp
pop
pop
ret
fwait
scas
and
dec
pop
imul
js
lods
fwait
mov
push
sub
int3
xchg
adc
cmc
mov
ret
test
lods
push
fisubs
push
xor
push
lods
in
mov
cmp
lret
bound
push
mov
cmc
push
test
dec
jmp
adcb
mov
push
into
mov
mov
and
mov
fidivs
mov
push
cmp
mov
push
inc
inc
cwtl
scas
pop
fisubl
mov
pop
popf
cmc
cmpsb
lahf
cli
jae
das
in
ffree
dec
mov
popa
pop
mov
jle
mov
adc
mov
lock
out
aam
jns
push
out
mov
xchg
enter
mov
out
jo
insb
mov
sbb
jp
add
xor
cmp
lds
xor
repz
rep
cmp
adc
fisubrs
nop
inc
jb
or
sarb
mov
dec
mov
push
xor
sbb
test
les
jbe
out
in
icebp
dec
xlat
add
inc
and
rcll
lods
imul
push
addl
cmc
imul
and
jnp
pushl
mov
sub
sub
jecxz
xchg
loope
xorb
ljmp
mov
rclb
shrb
leave
mov
es
mov
mov
push
cmp
jnp
addb
adc
xor
enter
ljmp
jns
cld
nop
lret
ret
sbb
xor
lret
sub
sbb
outsl
ja
push
xchg
add
rcll
fwait
pop
jg
xchg
jge
jb
sub
inc
jne
fsts
xchg
imul
adc
xchg
xchg
inc
or
mov
frstor
push
xor
pop
xor
rorl
mov
cmp
cmp
mov
xchg
stos
ss
cltd
mov
jecxz
pop
xor
aaa
and
dec
pop
mov
ret
cmp
ret
push
lds
sbb
stos
mov
repz
adc
int3
jns
cmp
push
and
sahf
imul
add
inc
pop
dec
aad
pushf
add
test
and
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
loop
mov
rclb
sbb
sbb
inc
fildll
aam
xchg
mov
add
xchg
mov
hlt
push
in
push
mov
mov
ja
mov
mov
sub
and
daa
jns
cmpb
and
sbbl
shr
or
cmp
push
push
lcall
add
push
sub
or
sti
decl
test
pop
in
push
jns
mov
test
push
jns
jmp
jg
dec
add
ror
outsl
push
mov
mov
xchg
roll
fdivrl
xchg
and
adc
ds
mov
out
mov
or
popf
mov
popl
cmp
sub
adc
clc
stos
cmp
inc
xor
dec
pushf
inc
jge
stos
mov
push
testb
outsl
adcb
dec
shlb
in
adc
shll
iret
fidivs
inc
and
in
cli
xchg
imul
pop
aas
sti
loopne
xchg
mov
imul
in
jno
sub
repz
test
xchg
inc
jns
sub
rorb
test
out
sbb
ljmp
or
or
pop
jno
dec
sbb
mulb
sbb
sbb
ljmp
mov
add
lcall
pop
shrb
pop
in
mov
psrlw
sbb
mov
sbb
and
ret
leave
push
sub
dec
test
fimuls
jecxz
nop
mov
xor
and
add
mov
stos
jno
bound
pop
outsb
test
test
andl
xchg
cmp
into
or
fimuls
cmp
adc
cmp
dec
mov
out
dec
jno
add
ds
cmp
and
les
iret
mov
dec
bound
ds
lahf
call
sub
ss
and
adc
int
mov
pop
inc
gs
cmp
cmp
shlb
into
in
es
std
leave
aaa
lods
adcl
in
test
jne
repz
pop
xor
aam
out
test
cwtl
and
ret
and
inc
add
mov
jbe
and
push
mov
int
test
push
jp
jl
inc
and
rcll
jmp
aad
jo
jae
int3
rcll
cmc
sub
divb
rcrl
dec
push
ret
arpl
jbe
lods
ja
out
and
pushl
and
scas
inc
movsl
das
xlat
rcl
cltd
xorb
leave
pop
test
cmpsl
mov
je
test
insl
lods
shlb
pusha
jns
mov
sub
xchg
sarb
mov
sub
push
push
sub
aam
and
and
lea
cwtl
pop
push
scas
jg
mov
dec
jns
lret
inc
cmp
sub
mov
push
mov
mov
orb
xchg
sahf
popf
pop
and
rcrb
roll
or
in
add
push
test
mov
adc
test
icebp
add
ret
repnz
das
adc
mov
push
mov
mov
sub
and
sbbb
gs
in
sub
or
jp
imul
mov
cld
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
fwait
pop
jo
sbb
sbb
adc
sbb
sbb
dec
pop
jle
bound
push
push
icebp
leave
mov
sbb
push
loop
dec
loop
int3
stos
mul
xor
aad
subb
mov
cmpsb
test
jle
aam
push
mov
arpl
mov
call
mov
aam
pop
jmp
pop
fldl
xchg
bound
mov
mov
into
cwtl
cli
adc
pop
dec
movsl
fsubr
test
sbb
mov
add
nop
mov
xor
dec
lds
sub
dec
push
in
inc
push
cld
mov
push
push
mov
mov
xchg
add
push
mov
jge
jmp
mov
mov
jbe
dec
fnclex
sbb
inc
movsl
es
mov
sub
cs
aaa
add
jns
xchg
jg
fsts
push
and
loope
das
push
push
aas
leave
xchg
mov
mov
push
or
pop
sar
xlat
xchg
dec
xchg
sub
imulb
test
ror
jmp
jge
mov
push
cltd
cs
xchg
insl
cmp
jge
lcall
xchg
je
push
imul
arpl
inc
push
stos
xchg
add
pop
cmp
call
divb
lcall
push
push
sbb
shll
mov
fisubrs
jge
sti
jno
cwtl
ds
push
sub
andl
inc
shrl
sbbl
push
loopne
inc
mov
xchg
je
leave
movsl
mov
movsb
call
sbb
lcall
cmp
xor
repnz
sbb
sbb
mov
mov
mov
stc
iret
xlat
fcmovb
insb
jo
add
jae
inc
ret
dec
repz
cmp
stos
stc
xor
lret
nop
add
cs
lcall
adc
loopne
pop
fs
icebp
out
xor
xor
insl
cmp
repz
fs
in
push
inc
xlat
xchg
stos
out
imul
call
xchg
inc
and
jmp
ret
xchg
loope
adc
push
hlt
ljmp
xchg
dec
push
or
popf
jmp
int
dec
jmp
scas
nop
fstl
mov
lret
addb
lock
push
pop
jmp
test
loopne
xor
int
sti
mov
inc
add
xchg
push
imul
in
adc
hlt
stos
push
dec
sbb
leave
in
adc
in
jbe
mov
jmp
subb
testl
mov
push
adc
xor
xor
daa
sbb
xor
pusha
gs
out
fmuls
push
jle
and
xchg
lret
pop
stc
cmp
pop
addr16
jns
pushf
xchg
les
ficomps
dec
aaa
push
adc
dec
loopne
in
sbb
mov
out
pop
jle
sub
cmp
xchg
jae
imul
or
xchg
lcall
and
addb
repz
ja
lret
mov
mov
rclb
push
outsb
data16
mul
push
mov
icebp
mov
push
sub
xlat
js
jl
inc
push
icebp
es
mov
or
mov
xchg
mov
jmp
push
adc
mov
fadds
rorl
dec
or
fsubs
rorl
dec
rorb
scas
rorl
dec
enter
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
pop
aad
inc
push
push
sbb
inc
jmp
mov
shll
fdivs
stos
sti
sbb
pop
rclb
xor
dec
push
test
incl
sbb
scas
mov
sub
imul
stc
sub
in
jl
test
inc
push
pop
nop
mov
mov
mov
psraw
repz
mov
xchg
mov
pop
vmwrite
push
add
mov
inc
jg
fwait
mov
cmp
mull
sbb
jg
jno
nop
popa
je
jle
sub
cmpsl
enter
insl
xchg
dec
js
add
stc
xchg
xorb
mov
mov
and
or
pop
popf
pusha
or
adc
fcmovnb
in
mov
xor
int
stos
mov
adcl
push
aam
xor
or
mov
pop
das
std
aam
mov
mov
and
xor
push
push
adc
push
xor
jecxz
sbb
adc
js
add
xchg
aaa
sbb
jecxz
fcmovbe
sbb
sahf
lcall
inc
push
push
adc
fs
insl
mov
and
push
xor
mov
ja
xor
pop
scas
loope
push
inc
cmp
push
jmp
dec
jle
imul
pusha
push
adc
fcmovb
sti
pop
cli
inc
out
xor
rcrb
fmuls
xchg
loopne
idivl
add
push
cmpsl
xor
enter
stos
jmp
lea
out
push
stc
and
or
lahf
mov
jp
jecxz
in
adc
adc
vmwrite
movsl
inc
lahf
std
in
lahf
test
out
insl
lock
lods
mov
pop
mov
xor
stos
mov
and
mov
dec
popa
test
arpl
pop
loope
xor
ljmp
cs
fisttps
outsb
lds
sti
jae
sub
add
and
or
pop
pop
loop
mov
decl
fucomp
mov
add
mov
jb
push
sub
dec
add
mov
dec
mov
lea
mov
fs
mov
adc
inc
jle
test
push
add
and
mov
xor
lret
outsl
xor
inc
sub
mov
cmp
mov
inc
sub
add
push
pop
push
popf
or
imul
hlt
in
or
es
outsl
popa
ret
out
mov
xlat
add
adc
add
xor
clc
imul
arpl
xor
cmp
mov
jmp
add
mov
scas
pop
ret
sbb
mov
mov
jne
in
and
in
fisubs
aaa
jmp
jle
inc
and
fldcw
jne
lret
shrl
aad
xor
xor
pop
sbb
cli
dec
jo
mov
out
mov
push
mov
push
aas
maxps
sub
sbb
stos
push
jno
sub
mov
andb
add
inc
xchg
pop
push
pop
push
in
ss
adc
and
test
mov
mov
mov
jecxz
lds
movsb
lret
sub
call
lods
imul
das
sub
sar
push
loope
push
xorb
or
mov
stos
scas
fwait
std
mov
imul
push
and
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
cmp
sbb
popa
pop
xor
fisttpl
jae
adc
test
sahf
push
dec
icebp
gs
inc
pop
pop
rolb
inc
jbe
test
inc
xchg
pop
push
movsl
ret
je
test
in
popa
cltd
popa
cmp
mov
dec
lock
popa
fsubs
hlt
lret
dec
stos
or
push
dec
mov
sbb
into
ficompl
dec
jbe
add
xor
ret
cmp
or
jb
jp
bound
or
rolb
dec
mov
sahf
adc
mov
in
sti
cwtl
xorl
mov
dec
mov
sarb
pop
cmp
sub
mov
pop
mov
push
push
and
mov
mov
hlt
mov
je
mov
mov
inc
sbb
jl
out
jb
mov
add
into
jae
sahf
popa
or
jns
and
jp
mov
arpl
xchg
inc
cltd
add
dec
es
mov
leave
dec
add
outsl
jle
fistpll
call
std
mov
xchg
pusha
mov
pop
mov
ja
dec
sarl
pop
outsl
sti
arpl
or
add
cmpsl
mov
or
inc
stc
jns
sbb
cmp
inc
mov
cmp
fs
neg
notb
lock
leave
mov
ja
rcrl
int
test
mov
xchg
xlat
gs
pop
sbb
out
pop
out
sbb
push
sub
mov
jne
je
add
mov
pop
in
mov
mov
std
negl
sub
adc
and
ss
ret
in
jg
filds
pop
xlat
pop
imul
aam
repnz
cwtl
out
std
cmp
jl
cmp
lret
ret
sbb
mov
jbe
out
mov
cmpsb
leave
scas
push
xchg
test
pop
and
out
imul
or
sbb
jno
imulb
xor
inc
lret
lock
mov
xlat
mov
jbe
fisttpl
ret
dec
inc
and
mov
mov
mov
shrb
dec
push
rcll
mov
pop
jmp
mov
movsb
jne
add
or
orb
push
fsubl
and
add
inc
mov
sahf
js
cmp
jg
pop
fsub
out
stc
xchg
stos
jnp
jp
or
and
mov
adc
test
jb
sub
popf
mov
inc
inc
pushl
gs
mov
xchg
inc
xchg
jo
xlat
fs
cmpsl
fidivl
or
sbb
inc
loop
into
push
jecxz
cmpsl
inc
ret
sbb
outsb
inc
popa
insl
cmp
lcall
jae
push
out
push
mov
inc
jae
ret
push
les
dec
lcall
insb
or
ficoms
mov
cwtl
mov
push
push
mov
pushf
mov
es
mov
jns
cmp
leave
push
mov
outsb
iret
jb
roll
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
push
push
jle
or
sbb
cli
ljmp
adc
and
test
push
ds
adc
ljmp
cmp
int
sub
dec
mulb
cmp
bound
jbe
pop
pop
xlat
std
xchg
ficoml
and
es
test
mov
shrl
xchg
and
push
lock
push
pop
push
jmp
movsl
jb
mov
stos
xor
mov
mov
icebp
ficoms
mov
cmc
aas
shr
jle
cltd
fidivl
mov
ret
mov
pop
push
xor
dec
mov
mov
rorl
inc
pop
ss
xchg
mov
in
mov
icebp
dec
mov
mov
sti
bound
pusha
loopne
imul
scas
sbb
jbe
mov
loope
pop
inc
inc
jl
jg
push
frstor
cmp
xor
cmp
mov
push
std
mov
sbb
xchg
or
js
mov
pusha
mov
in
rol
aaa
cmpsb
push
popa
rclb
mov
scas
add
cmpsb
jae
mov
das
mov
cld
clc
addr16
pushf
and
dec
xchg
mov
fidivs
and
lahf
or
movsb
xlat
pop
out
jne
sub
setns
sub
jno
test
add
mov
pusha
ficompl
xor
jo
aaa
insb
subb
cmpb
dec
cld
xchg
xor
ds
dec
sbb
xchg
cld
cwtl
xchg
mov
sub
leave
in
jecxz
mov
pop
cltd
loop
lods
xchg
mov
stc
ja,pn
mov
dec
pushw
pop
arpl
loop
jmp
sub
mov
repz
fldt
inc
jno
mov
ret
dec
add
les
pop
bound
mov
adc
cmp
mov
mov
jbe
mov
cli
mov
jecxz
pop
xchg
ljmp
xor
je
and
xchg
mov
mov
stos
mov
xchg
mov
fdivrl
dec
and
mov
xlat
sub
repz
push
push
inc
xchg
ficompl
lea
test
dec
cli
jmp
aam
ret
xchg
addr16
lret
mov
dec
mov
les
fistpll
dec
mov
mov
decb
mov
xchg
cs
and
or
xchg
sbb
loope
fchs
xchg
and
lret
pop
fldl
jo
andl
inc
int
inc
dec
mov
sbb
leave
das
scas
lock
mov
add
sbb
stos
push
cmp
iret
icebp
nop
adc
and
idivl
adc
push
stos
imul
xchg
push
sti
imull
lds
fcomps
cmp
sbb
out
xorl
cmpsl
mov
jmp
int
and
push
shll
dec
dec
aam
cmpsl
sahf
inc
and
pop
arpl
mov
mov
ljmp
int3
out
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
ret
adc
jle
add
sbb
in
sbb
mov
inc
jp
lea
lret
outsb
xchg
inc
cmp
cmpsb
je
sub
popf
mov
dec
jnp
mov
mov
inc
push
lods
rcll
movsb
aas
stos
cmpsb
aaa
add
inc
inc
pop
inc
ret
addr16
xor
int
pop
outsb
shrb
or
dec
pop
sbb
mov
loope
xlat
insb
xchg
and
subb
push
rcl
daa
in
mov
or
stos
xchg
aaa
lahf
push
mov
repz
pushf
push
adc
push
mov
push
lods
aas
bound
loopne
push
fisubrl
clc
mov
jle,pt
lret
icebp
idivl
jne
push
jbe
insb
cs
iret
xchg
sti
ljmp
cmp
jmp
add
sahf
roll
lods
cmc
push
pushf
xor
gs
or
xchg
sub
mov
pusha
fsubp
sti
je
adc
fidivl
addr16
shl
dec
sbb
imul
xor
clc
sub
mov
sahf
mov
mov
rcrl
daa
and
add
cld
jp
sbb
push
inc
xor
jno
mov
xchg
in
icebp
sbb
inc
mov
mov
inc
cld
rcrb
mov
stos
es
mov
or
lret
dec
dec
dec
enter
push
hlt
repnz
mov
outsb
jge
cmp
andl
push
outsl
adc
dec
mov
addb
dec
insb
js
mov
push
or
into
ret
jae
lret
inc
cwtl
gs
mov
and
sub
adc
or
inc
inc
lock
sub
mov
aas
or
lods
je
test
bound
int
hlt
sbb
test
pop
cmpsl
adc
jbe
test
push
xchg
dec
jno
cmpsb
movsb
mov
outsb
jbe
stos
jl
pop
fcomps
push
push
or
inc
arpl
dec
ja
mov
pop
clc
pop
fists
fmull
movsl
xor
neg
jne
jecxz
jge
repnz
xor
out
test
test
cmp
push
adc
sub
icebp
mov
push
xor
gs
cmc
mov
cmp
stos
inc
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
jl
cld
push
sbb
roll
push
adc
cmp
xchg
cmp
jo
test
cmp
or
jg
data16
ljmp
mov
dec
das
add
or
mov
fdivrl
movsl
mov
dec
mov
das
mov
mov
or
or
lret
xchg
scas
das
data16
sbb
xchg
sub
dec
stc
push
lds
dec
stc
xchg
popf
outsb
fsubrs
lret
jae
or
enter
inc
pop
mov
pop
pop
jle
cwtl
xchg
cmp
imul
add
fnsave
or
mov
aam
decb
cmpsb
or
pushf
push
push
xor
sbb
lods
fwait
in
loop
fcmove
cmp
int
loopne
or
mov
pop
ds
jno
fdecstp
sbb
out
mov
mov
dec
ljmp
inc
popf
push
fiaddl
xchg
lds
inc
inc
test
jae
jmp
adc
adc
std
shll
cwtl
mov
loopne
sbbl
pop
rcll
call
outsb
or
add
mov
push
insl
lcall
push
and
test
dec
mov
xor
in
nop
pop
fisubl
push
dec
inc
fincstp
les
mov
sbb
shl
jb
mov
fsts
les
cmc
or
inc
inc
loopne
cmpsb
out
insb
sbb
idivl
pop
inc
mov
xchg
sub
dec
adc
int3
lock
lea
rol
jo
rcll
cmp
jns
addb
mov
arpl
pop
pushl
bound
rcl
inc
push
adc
jmp
adc
adc
outsb
call
dec
xchg
insl
jnp
iret
jp
inc
cmp
mov
pushf
jl
jl
fsubl
fnstsw
repnz
xchg
test
dec
cmc
push
pop
cmc
adc
aaa
loopne
clc
push
push
filds
pop
sub
add
xchg
inc
fidivrs
push
jns
pop
add
xor
add
inc
adc
enter
add
adc
jmp
mov
sbb
mov
stc
clc
push
sbb
inc
mov
jmp
push
in
das
gs
add
mov
sub
cmp
ret
adc
sub
sbb
ljmp
orb
enter
orb
into
jae
xchg
pop
jno
fcmovnbe
bound
pop
leave
insl
jmp
loop
loope
dec
shr
push
jp
mov
mov
add
leave
ljmp
jecxz
repz
pop
aad
mov
adc
rorl
or
push
in
xor
mov
loopne
xor
xchg
jle
mov
xor
rcl
cmc
fwait
pushf
ljmp
cmp
cmp
sub
lret
cmp
mov
jae
adc
cmp
jg
mov
leave
cmp
popa
fnstcw
daa
inc
aas
int
sar
shr
mov
jnp
stc
mov
xor
jle
popf
sbb
mov
inc
cmp
loopne
ret
insl
jmp
rol
mov
repnz
rorb
inc
push
ret
push
enter
dec
sti
mov
shlb
aad
cwtl
cmpb
xchg
or
test
inc
sti
pop
push
jecxz
mov
adc
into
test
cltd
repnz
inc
loope
sbb
add
jg
adc
lcall
xchg
in
roll
movsb
add
pop
int3
xchg
mov
adc
rcrb
inc
xor
mov
fsubrs
fwait
jge
cld
stos
jbe
and
fnstsw
sahf
and
loope
ja
add
stos
mov
in
rolb
or
and
movsl
scas
fldcw
xchg
push
inc
jne
js
or
mov
fsubrl
outsb
lahf
insl
fistpll
cmp
jp
std
ret
cmp
and
push
mov
cmp
push
push
mov
pushl
mov
cmp
push
push
xor
dec
adcb
outsl
or
inc
lret
jne
cmp
cmpsl
cmp
xchg
inc
nop
push
mov
ror
pop
adc
movzwl
into
js
xchg
fmuls
add
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
xchg
out
mov
loope
sbb
js
jae
mov
popa
cmp
insb
fs
jo
fidivs
pushf
pop
push
jne
sub
mov
and
push
cs
in
mov
mov
into
adc
inc
scas
in
push
cmp
mov
pop
mov
fsubs
and
jno
loopne
mov
pop
sbb
fcoms
stos
test
pop
int3
jp
xchg
movb
icebp
fwait
arpl
adc
fwait
mov
js
stc
push
fdivrl
pushf
mov
pop
insb
and
popf
or
icebp
xor
and
jnp
cmp
imul
push
outsl
insl
call
aaa
arpl
mull
lock
in
mov
stos
inc
mov
adc
or
jnp
imul
mov
lahf
sub
out
loop
sti
xchg
dec
sbb
mov
movsl
test
jae
pop
or
mov
sbb
cmpsl
push
push
sbb
out
jbe
data16
jnp
and
stc
lods
mov
jns
cltd
sbb
fiaddl
and
ja
mov
dec
cmpsl
add
xchg
cmp
cwtl
clc
mov
mov
add
std
outsl
mov
adc
sti
pop
jp
adc
push
dec
push
jecxz
xor
adc
jbe
fbstp
mov
mov
into
dec
jle
loope
pushw
sbb
push
fistpl
mov
out
sub
mov
cmp
sub
pop
imul
inc
in
or
add
cltd
inc
insb
xchg
jle
rolb
cmp
and
sti
mov
andl
push
jno
and
rcrb
push
mov
jb
inc
push
mov
popa
sbb
xor
xor
push
cmp
and
call
bound
cltd
mov
in
insb
adc
enter
xor
sbb
inc
jl
sub
ljmp
idivb
addr16
sub
mov
push
inc
dec
sub
push
adc
dec
jp
std
cli
xlat
xchg
sub
arpl
xchg
stos
mov
pop
xchg
jns
cmc
lret
ficomps
and
es
lods
stos
bound
cmp
inc
lret
mov
mov
mov
fsubrl
gs
push
or
dec
mov
and
ss
stc
repnz
or
xchg
add
add
std
lods
insb
dec
sub
cld
mov
inc
jno
push
sbb
in
cmp
inc
clc
add
mov
cmp
sub
subl
adcb
cmp
lods
mov
lods
rcll
cmp
xchg
repnz
gs
push
jge
cmp
add
ds
sbb
loope
and
add
jnp
sbb
mov
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
lahf
mov
rcrb
das
push
repnz
das
leave
mov
fbld
je
mov
cmp
jmp
mov
push
dec
cmp
sub
pushf
loop
mov
std
push
adc
enter
sbb
imul
rclb
jp
sub
sbb
shlb
mov
in
xchg
movsl
scas
mov
inc
ret
mov
cmp
jge
push
jne
pop
arpl
mov
or
dec
hlt
fistl
dec
scas
fdivl
fs
test
xchg
xchg
adc
sub
stos
jecxz
out
xor
mov
pop
adc
pop
pop
jo
insl
jg
aam
inc
bound
mov
test
push
push
sbb
mov
ljmp
dec
or
xchg
xchg
out
push
xchg
mov
add
jae
inc
das
roll
xor
loope
mov
mov
jecxz
es
fisttps
sahf
je
popf
ret
fwait
xor
jp,pt
pop
push
mov
push
jns
add
out
jmp
fldl
xlat
fldl2t
pushl
sbb
xchg
mov
jecxz
aad
out
cwtl
js
imul
imulb
hlt
inc
rclb
push
mov
movsb
jg
adc
jmp
fwait
leave
aad
push
or
mov
add
in
ret
push
cmp
jl
xchg
mov
scas
shrl
xchg
test
mov
inc
xor
jae
jno
call
xor
jnp
dec
push
inc
jmp
loope
adc
lds
inc
in
cmp
adc
in
jle
lret
lods
popf
pop
dec
jl
mov
xchg
fadds
loopne
aam
aaa
xor
es
add
cmp
mov
add
inc
pslld
pop
add
mov
jle
or
jb
inc
idiv
sti
mov
sub
test
pop
cmp
mov
push
and
cwtl
xor
adc
jno
add
test
mov
jp
fiaddl
cmpl
in
xor
pop
and
and
mov
shlb
sbb
leave
loope
cmp
insb
xchg
loop
test
or
dec
sub
lahf
push
movsb
inc
push
jb
imul
sub
repz
cmpsb
faddl
add
mov
rclw
inc
mov
sti
popf
cmp
data16
stc
mov
dec
lock
sarl
shll
fsub
loop
aaa
jg
jne
mov
or
fnstcw
mov
sub
rcll
ret
lock
pop
mov
mov
dec
je
sbb
call
ret
inc
aad
xorl
inc
lahf
push
or
les
ss
xchg
testl
in
gs
mov
push
jnp
popf
pop
bound
shrl
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
rcr
mov
in
add
inc
add
adc
iret
loopne
mov
pop
pop
or
jo
fucom
lds
sbb
jo
int3
mov
arpl
repnz
movsl
sbb
or
mov
test
pop
add
mov
and
leave
bound
rclb
js
jmp
scas
inc
dec
rcrl
imul
xor
mov
or
adc
sub
mov
sbb
adc
dec
add
and
and
xchg
cmp
in
mov
mov
int
aas
sub
icebp
jo
add
sbb
ja
pop
aaa
pop
mov
mov
mov
das
xchg
push
pop
fidivrs
rcrb
push
push
xor
leave
arpl
inc
arpl
or
dec
sti
push
in
adc
sbb
cmc
mov
inc
clc
fstpl
test
test
cmp
or
aas
leave
jnp
pop
sub
push
bts
scas
test
dec
push
sbb
dec
mov
outsl
sbb
pop
cld
mov
push
jnp
mov
dec
mov
jmp
push
daa
ret
arpl
fwait
clc
daa
cmpsl
aad
mov
es
mov
scas
cmc
aad
ds
inc
mov
jmp
idivb
loop
cmc
mov
enter
mov
sbb
lods
testl
subl
aas
imul
xlat
xlat
mov
test
fimuls
sbb
mov
imul
pop
sub
das
negb
pop
insb
push
aas
bound
xchg
insl
cmp
test
mov
cwtl
inc
dec
xor
add
xor
xchg
test
popa
push
mov
pop
jne
jg
push
mov
dec
jne
shlb
icebp
xchg
pop
cmpl
sbb
imul
xor
add
cld
cs
pop
popa
in
push
dec
cltd
and
aaa
push
int
mov
mov
inc
fisttpl
shll
ret
movsl
cli
pop
xor
nop
arpl
or
addb
sub
xchg
dec
nop
and
aam
push
arpl
sbb
or
or
jno
add
jb
imul
mov
add
xchg
pusha
sbb
cmpl
add
adcb
lds
mov
in
les
jb
or
lods
xchg
mov
fiadds
mov
jl
aad
arpl
rorl
push
movsb
mov
jno
ja
and
dec
rorl
xorb
dec
fs
sbb
mov
add
orb
decl
sbb
push
scas
cs
jmp
push
testb
lods
pop
pop
push
loopne
sub
mov
mov
xor
mov
cmpsl
ljmp
bound
mov
inc
sahf
push
fucomp
add
mov
xchg
add
arpl
pusha
cli
shufps
xor
and
imul
dec
out
push
movsb
cmc
repz
aad
adc
pop
das
outsl
stos
lods
sub
imul
out
jo
test
imul
dec
inc
test
xchg
push
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
fdivl
push
stos
je
stos
and
dec
test
xchg
inc
sub
ljmp
rcrb
mov
and
movl
shl
iret
pop
adc
sub
xlat
or
dec
mov
pushf
test
sub
sbb
add
lock
or
jnp
push
mov
es
jbe
push
jge
fnstsw
scas
stos
iret
xchg
lret
test
icebp
cli
pop
xor
mov
loop
mov
clc
adc
mov
lods
gs
dec
mov
dec
leave
adc
dec
test
mov
jbe
inc
fsubrl
mov
push
push
push
scas
dec
dec
or
int
pop
sub
xchg
xor
in
negl
inc
xor
fbld
xor
jns,pt
stos
mov
repz
mov
lods
push
mov
or
inc
push
add
push
outsb
hlt
call
sbbb
jecxz
or
cli
jp
and
xchg
mov
ss
xor
test
imul
fdivrl
leave
or
and
mov
push
push
lret
push
mov
fdivl
jle
mov
dec
mov
mov
test
cmp
mov
dec
xchg
dec
aad
xchg
or
xor
add
in
inc
insl
mov
repz
jb
pusha
aaa
stos
cmp
cwtl
mov
push
pop
or
andl
push
mov
movsl
mov
push
lret
mov
or
cltd
jb
mov
mov
sbb
or
mov
testl
cmp
adc
jne,pn
loopne
mov
in
dec
cmpsb
fwait
mov
or
out
mov
fisubrs
sbb
xlat
push
pushw
repz
mov
mov
xchg
add
imul
mov
mov
popa
mov
adc
pop
int
inc
lret
cmp
aaa
or
sub
jmp
jge
and
push
jne
in
cmp
insb
or
mov
sub
sbb
sti
lret
lods
mov
xor
xchg
xlat
and
das
aaa
fisttps
shlb
fiadds
sti
je
jo
mov
or
ss
aad
jmp
js
je
lock
mov
lret
call
loope
cmp
shlb
cmp
xchg
cmpsl
xchg
jne
mov
pop
stos
mov
push
sub
add
mov
out
stc
fimuls
xchg
loopne
ljmp
or
pop
leave
cmpsb
sbb
shrl
add
lret
pop
or
ja
scas
imul
aas
in
sub
cmp
arpl
add
cmpsb
mov
fdivrl
fs
shlb
dec
fnstenv
les
pushf
mov
push
xchg
test
mov
stos
jl
in
ja
mov
cli
out
lahf
fs
push
sbb
jg
adc
or
out
sbb
loope
jne
xchg
push
cs
pop
lds
or
leave
in
sub
push
sub
cld
mov
ret
mov
test
cmpsb
jmp
arpl
lods
adc
mov
in
aaa
movl
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
pop
cmp
fsts
sbb
nop
es
rcrl
mov
scas
arpl
adc
mov
test
icebp
push
pop
rcrb
push
dec
enter
popf
xchg
imul
movsl
pushf
outsb
es
aas
andl
mov
jns
cmp
cltd
mov
hlt
sub
leave
loop
pusha
mov
inc
adc
cltd
xor
ja,pt
cmpsl
test
adc
insl
iret
cmpsb
cmp
loop
shll
loopne
insl
js
push
or
mov
into
sub
dec
into
iret
adc
add
fsubrs
push
xor
rclb
jmp
btc
or
pop
mov
and
jno
aam
jmp
jae
call
je
cwtl
push
pop
cmp
mov
outsb
movsb
sbb
sub
push
cmc
xchg
add
xor
psubsb
cmp
scas
mov
jne
stos
ds
shrl
inc
pop
inc
dec
lock
push
sub
sub
cmc
idivl
sahf
push
sub
push
adc
sub
fmuls
cmpsl
mov
lcall
dec
xorl
cmp
stos
ja
lcall
int
push
test
jecxz
and
je
imul
jbe
or
push
pop
pop
xlat
lahf
push
push
sbb
cmp
push
cmc
dec
jnp
sub
mov
sub
xor
fcmovnb
inc
inc
sbb
or
aad
scas
and
lds
xchg
out
xor
aad
jecxz
pop
mov
sub
and
popa
and
adc
xchg
popf
cmp
test
xchg
nop
mov
xchg
mov
das
push
loopne
jo
mov
scas
dec
mov
cmp
sbb
cmc
sub
pop
jno
lods
add
jae
in
jne
adc
repz
jl
iret
cmpsl
cmp
stos
in
dec
movsb
pop
shll
int
out
fistps
bound
or
lea
cmp
repz
aas
add
mov
or
jecxz
insl
pop
inc
loop
orb
push
cmp
adc
inc
aam
call
fnsave
cltd
jg
out
lret
mov
xor
sarb
imul
out
pop
xor
fs
cmp
int3
repnz
push
fdivp
mov
outsb
mov
or
cmc
add
ffreep
das
data16
mov
mov
aas
add
pop
mov
adc
cltd
xor
test
inc
sub
add
lock
sub
fiaddl
add
lock
stos
lcall
ja
bound
fs
xor
lcall
adc
cmp
fbld
and
sahf
and
cmp
dec
xor
imul
fwait
xchg
inc
push
mov
pop
pop
idivb
pop
mov
daa
std
pop
scas
sub
lods
cmpsl
sahf
xor
cmp
adc
pop
loope
nop
add
dec
stc
mov
push
in
sub
or
mov
push
dec
or
jne
mov
test
call
test
add
sub
add
movsb
out
aam
fsubrl
icebp
mov
xor
cmp
add
add
movb
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
cwtl
cwtl
loope
not
push
sbb
das
stc
push
cli
push
ret
sbb
xor
arpl
cmp
xchg
sbbl
faddl
loope
flds
fdivrs
mov
scas
ljmp
pop
sbb
stc
jno
cwtl
pop
mov
mov
push
sbb
pop
jno
or
pop
out
neg
fildll
imul
mov
ret
pop
mov
xchg
shll
pusha
rcrl
movhps
out
push
mov
mov
shrb
cld
mov
pop
lea
sbb
pop
mov
pushf
loop
adc
mov
int3
out
add
in
push
leave
data16
lret
dec
lea
pop
enter
insl
iret
mov
jo
js
ret
pop
sahf
and
xor
and
or
ds
pop
imul
sub
scas
sbb
cmpsl
inc
mov
setbe
pop
cmp
scas
or
push
sarb
push
in
outsb
xchg
sbb
and
xchg
xor
xchg
dec
repnz
pop
push
cld
sbb
push
dec
jecxz
rcr
push
and
cmpsb
inc
push
xchg
dec
sub
insl
jp
cmp
add
addr16
mov
movsb
lock
iret
fisttpll
or
jo
sub
sub
sbb
mov
inc
fs
dec
int3
sbb
nop
das
xchg
cmpl
fisubl
sbb
pop
sub
xchg
and
mov
push
int3
and
mov
sub
mov
adc
or
adc
hlt
mov
add
cs
fcmovu
mov
jne
mov
sub
cmp
cmp
xorb
push
in
mov
testb
mov
cltd
shll
adc
mul
sbb
jl
aaa
sbb
add
insl
dec
sub
inc
add
dec
dec
pop
pop
sti
loopne
faddp
jb
stos
jne
adc
push
fnstsw
and
imul
popf
andb
adc
sti
aaa
out
adc
clc
xor
iret
aam
mull
popf
imul
nop
adc
insb
mov
xor
rorb
xor
sbb
jecxz
or
xchg
shl
sub
or
and
push
lret
popa
sahf
pop
push
ret
dec
add
movsl
add
push
int3
cmp
ret
pop
cmpsb
xchg
jg
xchg
pop
rcll
mov
mov
xchg
mov
loop
arpl
sbb
inc
fcmovne
xor
aas
mov
sahf
mov
inc
popf
cwtl
cmpsb
out
ss
sub
fs
push
cld
mov
mov
test
pop
xchg
repnz
inc
add
sub
sbb
pop
fadd
fdivs
jg
adc
jns
imul
ret
cmp
mov
add
mov
cmp
cmp
call
sub
xchg
loopne
mov
jecxz
hlt
mov
rclb
xchg
dec
jp
popa
lcall
and
data16
imul
push
mov
inc
stos
movsb
mov
movsb
imul
loopne
arpl
xacquire
mov
xor
mov
add
mov
jmp
and
inc
add
loop
and
sahf
popf
out
adc
shll
inc
add
iret
push
push
loop
dec
dec
mov
rorl
lea
adc
mov
xchg
mov
mov
or
or
dec
addb
rcll
jae
inc
add
icebp
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
push
cmp
sbb
sahf
mul
das
adc
hlt
arpl
mov
dec
pusha
dec
mov
pusha
push
jl
sbb
push
movsl
roll
pop
rolb
add
add
invd
sub
ljmp
sub
pop
test
adc
pop
xchg
sbb
enter
cli
popa
rolb
or
sbbb
daa
or
mov
je
pop
fcmovnb
inc
das
aas
mov
pop
and
sbb
test
and
mov
mov
dec
or
jp
popf
cmpsb
xchg
adc
jnp
sub
aad
sbb
xchg
pusha
jle
sub
sbb
lret
cmp
scas
mov
push
fs
lea
sub
add
adc
pop
test
and
loopne
xchg
ds
lods
das
mov
mov
loopne
mov
es
sbb
push
inc
cmp
dec
mov
adc
dec
popf
outsb
outsl
mov
mov
mov
lahf
push
pusha
fnstcw
andb
enter
adc
lock
cwtl
or
sbb
hlt
add
mov
cmpsb
mov
loopne
and
jno
pop
adc
outsl
call
and
push
and
ret
fists
mov
cmpsb
and
fisttpll
rorb
clc
out
sub
cli
imul
mov
les
pusha
sub
mov
xchg
sbb
mov
inc
loop
scas
in
jbe
add
and
add
xchg
mov
sbbb
aaa
push
or
push
movl
mov
iret
scas
jl
loopne
rolb
inc
loopne
fldt
mov
out
sbb
push
out
sub
ret
sub
push
fstl
cmp
adc
xor
mov
aas
jnp
adc
cmpsb
mulps
sbb
adc
add
dec
and
mov
adcl
inc
jmp
test
jecxz
dec
mov
inc
pop
mov
fcoms
sbb
mov
add
sbb
imulb
mov
lock
outsl
mov
mov
ljmp
xor
adc
and
fldl2t
mov
mov
scas
hlt
adc
dec
xor
xor
push
inc
rorb
sbb
cmp
sbb
push
xor
cwtl
push
cmp
or
es
cwtl
cld
pop
pop
sti
cmpsb
mov
or
mov
mov
insl
jbe
pop
sbb
aam
push
and
jmp
int
mov
xchg
jo
mov
test
aam
sbbl
cwtl
imul
adc
adc
xchg
andb
pop
insl
xchg
in
or
dec
jge
adc
jl
dec
xor
add
mov
in
jno
fimuls
cwtl
pop
into
test
ret
leave
cwtl
lods
adc
sbb
sti
shr
pop
orb
movsl
add
out
adc
in
or
mov
or
fs
daa
xchg
dec
test
psubusb
cmp
stos
aad
lds
inc
pop
sub
and
and
cld
test
outsl
iret
dec
in
push
in
lods
dec
or
cmp
sub
add
leave
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
pop
cmp
mov
push
cmpsb
testb
sbb
push
out
dec
jl
ja
lret
je
mov
mov
out
push
stos
xchg
mov
cmp
sarl
dec
fstpl
xor
xchg
repnz
inc
repnz
jle
and
pop
mov
inc
sub
xchg
inc
xor
cmc
je
mov
lcall
jnp
push
bound
loopne
roll
scas
inc
lret
and
ja
and
loop
das
leave
pop
mov
sbb
xor
lock
or
arpl
add
enter
mov
sub
insb
idivl
enter
sub
push
mov
iret
push
mov
sbb
mov
hlt
add
out
or
xor
dec
add
aam
dec
jl
sbb
or
fsubs
inc
dec
outsb
mov
js
and
scas
rcl
popa
fcomp
fldenv
repnz
inc
jbe
into
movsb
aaa
inc
shrb
call
pop
xor
push
es
mov
inc
in
loopne
les
pusha
loop
sub
xor
sub
fsubrl
xchg
ljmp
js
mov
rcl
andb
dec
enter
popa
pop
aam
add
shrb
inc
aad
lcall
loopne
lods
sub
int
addr16
aad
out
adc
sub
fnstsw
add
ljmp
and
jecxz
mov
cmp
test
fimuls
and
test
push
cmpsb
lods
mov
les
cmp
aaa
inc
fsubrs
aas
pop
jne
lret
or
loop
cltd
mov
adc
jp
sub
mov
adc
ja
cmp
stos
int3
fisttps
je
jl
cmp
ja
dec
push
dec
jbe
adc
cmpsl
add
aam
cmc
and
and
daa
mov
fists
int
notl
out
mov
outsb
aaa
pop
adc
outsl
sub
mov
and
js
push
pop
das
and
aaa
xchg
push
std
roll
jmp
testl
add
fstpt
mov
pop
icebp
lods
cmc
sub
sbb
out
mov
stos
ljmp
sahf
push
pop
inc
mulb
and
adc
mov
mov
inc
cmp
cwtl
imul
sbb
ret
pop
jecxz
test
pop
lods
in
xorl
push
dec
outsb
je
in
pop
shrl
cmc
add
jnp
les
out
xchg
push
pop
add
and
scas
mov
mov
push
push
cld
pop
idivb
les
cs
rorb
fsub
sar
push
xchg
inc
pop
push
outsl
pop
pop
loop
xor
pop
add
push
repnz
fs
mulb
push
hlt
xor
ret
out
xor
out
cld
orw
mov
mov
test
dec
sbb
cmp
fldl
negb
jp
adc
mov
xchg
xchg
movsl
and
xchg
dec
stos
push
das
cmp
movsb
cltd
adc
inc
mov
push
adc
dec
je
sub
sbbl
mov
daa
or
cmpsb
dec
and
dec
cld
sbb
xor
nop
mov
sbb
popf
test
inc
push
stc
inc
ljmp
mov
jp
ficoms
lea
mov
and
add
mov
shrd
cmpl
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
aad
jle
mov
sbb
fdivp
sub
ljmp
les
outsb
adc
pop
data16
fnstsw
jb
ret
jp
lea
mov
sub
mov
icebp
stc
push
add
sbb
mov
add
add
pop
and
ss
cwtl
sbb
fdiv
dec
sub
jle
sbb
out
stos
mov
std
aam
enter
mov
sbb
outsl
cli
jne
pop
pushf
loopne
ss
arpl
mov
jg
repz
notb
xor
dec
jp
cmp
in
out
sbb
sahf
cmp
in
imul
loop
xchg
sti
push
pop
lock
into
gs
xchg
flds
jae
repz
xchg
hlt
divb
out
cmp
add
fistl
push
ds
lret
jb
pop
mov
mov
js
movsb
pop
push
cmp
rcrb
sbb
test
clc
les
jmp
in
push
sbb
or
inc
in
pop
or
inc
in
outsb
adc
cmpsl
pop
xchg
mov
adc
faddp
gs
cltd
add
xor
xchg
mov
mov
jb
cmp
into
fldl
rolb
or
jno
loop
xor
mov
mov
ljmp
dec
mov
in
mov
adc
pop
push
jecxz
xchg
push
stos
out
leave
fmul
jmp
addl
xor
xor
loopne
fwait
into
add
imul
aas
add
xor
ss
in
movsl
push
dec
movsb
cwtl
test
push
push
insl
xchg
dec
insb
lock
pushl
inc
jb
jnp
jbe
bswap
aas
hlt
mov
ret
bound
fwait
icebp
shl
mov
bound
in
dec
push
jno
mov
loope
jb
shrl
cmpsb
jno
cmp
test
mov
into
mov
movsl
or
iret
daa
mov
xchg
push
mov
movsb
cli
incb
add
sub
adc
or
cmp
push
mov
fstl
movsl
jp
les
outsl
fstl
lods
mov
jnp
sahf
aaa
and
push
mov
sbb
mov
cmp
jge
out
xchg
jle
cltd
roll
cmp
lret
imul
add
jg
add
scas
inc
mov
pop
xchg
pop
mov
fcoml
push
mov
and
mov
pushf
addb
push
ret
sub
jp
mov
pop
imul
jge
xchg
fidivs
push
lret
mov
and
fmul
push
push
mov
aad
in
xor
andb
jg
xchg
jg
add
xlat
ss
adc
xchg
bound
jmp
xor
add
into
dec
movsb
xor
xor
inc
xchg
rolb
je
dec
jb
add
or
jbe
repnz
cli
xchg
jns
leave
push
push
xchg
je
add
or
pop
pushf
pop
push
add
mov
push
shll
or
stos
add
ret
add
call
leave
mov
dec
ret
popf
jmp
frstor
inc
xor
fsubs
or
mov
dec
and
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
jmp
rcll
inc
jae
das
ja
push
inc
hlt
out
push
cmp
sbb
mov
push
sbb
cmp
jge
sbb
mov
push
xor
jg
pop
nop
xor
adc
inc
mov
outsl
cmp
adc
jmp
cmpsl
jmp
pop
jbe
and
int3
jne
enter
add
shll
mov
fstpl
fisttpll
mov
xchg
push
cmp
sub
xor
xchg
shl
adc
xor
arpl
repz
test
pushf
fcmovnbe
add
lret
jg
in
xchg
mov
xchg
pop
xchg
jne
inc
movsb
scas
movsl
sub
pop
inc
call
mov
mov
sub
stc
jl
out
test
xchg
aaa
out
inc
rcrb
or
test
int
adc
sbb
add
push
and
icebp
or
and
aam
and
fldlg2
xchg
jmp
mov
jecxz
dec
pop
cmpsl
aas
push
loop
push
pop
mov
cmp
iret
lods
sub
lcall
inc
mov
xlat
dec
lret
sub
lods
cmc
daa
jle
gs
push
jge
pop
lods
or
mov
sub
xor
test
and
aas
add
adc
aad
jae
cmp
inc
ds
cmpsb
inc
jle
int3
and
shl
jg
mov
lods
test
leave
jge
jmp
xchg
shlb
cmp
icebp
xor
int3
pushf
in
lret
bound
dec
push
orb
adc
mov
push
out
lods
xlat
sbb
xor
mov
or
mov
hlt
jno
xlat
xor
js
xchg
es
loopne
cmc
pop
pop
mov
jp
mov
xchg
test
push
lahf
mov
sbb
mov
and
push
pop
sub
into
cltd
shrl
hlt
insb
inc
ljmp
sub
enter
scas
jae
mov
dec
aas
ljmp
bound
enter
repz
push
or
jns
and
leave
out
push
shlb
daa
inc
fcoml
fcmove
or
hlt
push
js
sub
jecxz
int
pop
stc
or
shll
sub
mov
push
jmp
fdivl
jne
push
loope
outsb
movsb
adc
sub
sbb
les
add
in
in
cmp
gs
sub
pop
mov
mov
and
andl
push
arpl
xorb
fucom
pop
fisubrs
ljmp
sub
ja
mov
sub
mov
cli
icebp
push
cmpb
lods
pop
aas
mov
ss
mov
dec
dec
and
sbb
test
push
inc
into
inc
pop
cld
cli
clc
push
push
cmp
and
js
nop
cmp
insb
add
aaa
and
test
mov
mov
pop
adc
fdivs
inc
xchg
popa
lock
sbb
or
cmc
popl
jp
mov
jb
push
cld
xchg
sub
pop
sahf
jmp
xchg
in
mov
xor
sbb
mov
ficomps
cmc
jns
cli
or
subb
stc
in
xor
lea
shrb
push
dec
pop
jno
mov
jne
push
xchg
lds
stos
fs
and
mov
repnz
fisttps
add
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
push
or
sbb
cmp
cwtl
aad
lock
sahf
dec
sbb
sub
sti
jns
inc
fwait
push
and
mov
addr16
testl
xor
and
jns
xchg
jmp
push
inc
data16
test
test
ss
cmpsb
sub
fyl2xp1
xlat
xor
adc
sub
flds
xchg
imul
dec
lret
call
es
imul
jbe
pusha
in
jne
andl
mov
mul
psraw
aas
je
fcmovb
ljmp
or
rclb
popa
sbb
shll
sub
sbb
sahf
inc
inc
or
into
mov
push
cltd
rolb
jnp
sbb
sahf
and
and
ljmp
jbe
adc
jo
and
data16
jle
inc
icebp
das
adc
js
adc
cmp
cmpl
dec
cmp
or
push
imul
push
mov
pop
ret
rorb
scas
push
lds
adc
lds
jns
add
in
stos
jl
cmp
fcoml
xorl
lret
sbb
test
je
imul
pop
mov
mov
lret
mov
lcall
cmp
lret
pop
jnp
xchg
jb
cmp
mov
jge
inc
gs
testb
add
out
bound
int3
xchg
lock
rep
push
cli
dec
stc
divb
inc
aad
mov
add
js
mov
sbb
push
stos
lret
sbb
movsb
mov
bswap
jae
arpl
pop
movsl
pop
dec
mov
cmp
stos
loopne
das
clc
cwtl
mov
adcl
sub
jle
mov
outsl
and
fidivs
pop
ret
push
repz
sbb
xchg
jge
push
call
dec
ret
out
push
loop
pop
aaa
repz
dec
sub
lret
pop
mov
inc
mov
cmpsl
inc
add
lea
push
inc
das
push
mov
add
ret
xchg
imul
fwait
and
mov
push
stc
inc
shl
jnp
test
repz
aaa
shrl
mov
inc
jle
xchg
test
jmp
imul
cld
and
out
sahf
fisubrl
jle
ja
leave
sahf
lret
jnp
xor
fs
jo
pushf
sbbb
repz
ja
jg
push
mov
testl
and
dec
cmp
lret
hlt
push
cmp
xor
ffreep
dec
mov
rcrb
jns
daa
or
aas
and
sarl
sti
jne
xor
insl
mov
fdivrs
shr
jge
push
fsubrl
out
xchg
mov
out
add
jle
in
jb
popa
pop
out
and
das
mov
pusha
outsl
outsb
lods
mov
orl
sbb
cmp
cmp
aad
xor
jno
rdmsr
lcall
loopne
je
or
aaa
lds
jg
mov
lcall
cs
jmp
bound
xchg
shll
xchg
dec
int
gs
hlt
mov
je
fistpll
movsl
add
inc
adc
sbb
or
jne
push
push
and
push
mov
icebp
dec
jnp
daa
out
leave
push
aas
in
mov
jae
jl
rorl
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
lahf
cmp
iret
movsl
push
sbb
div
push
dec
jo
add
dec
jp
xorl
lea
in
test
cmpsb
xor
xchg
sbb
push
adc
lods
enter
push
mov
cld
scas
aam
sbb
mov
roll
jo
jecxz
fs
clc
outsb
mov
sti
test
or
jbe
fldt
pop
and
and
mov
add
int3
out
jecxz
cmp
mov
push
xchg
lea
ljmp
lret
hlt
mov
fwait
outsb
fbld
add
sbb
clc
dec
sub
stos
icebp
sbb
inc
arpl
insl
xchg
add
in
xchg
or
pop
mov
xchg
jne
jae
cmc
push
dec
lret
ficoml
es
movsl
xorl
mov
push
pop
daa
movsb
mov
sbb
push
test
mov
je
inc
inc
test
js
mov
sbb
ficoms
adc
das
ja
rorb
and
fcomip
sahf
inc
inc
sbb
popa
sub
fidivrs
dec
inc
cltd
and
sbb
push
inc
std
jb
inc
cld
cs
shlb
pop
adcb
push
pusha
xor
dec
jp
imul
xchg
fisttps
stos
call
xor
or
fildl
lock
or
sahf
mov
inc
out
xor
xchg
mov
fdivrl
pushf
ret
ljmp
iret
xchg
out
cmpsb
dec
stos
nop
lds
loopne
in
mov
mov
mov
mov
mov
fistps
test
and
fsubs
xchg
lds
cmp
lret
xchg
in
addr16
dec
xchg
inc
fwait
inc
lds
push
rorl
sbb
call
xor
adc
push
movsb
inc
mov
seta
insb
sarb
fwait
xchg
stc
sbbl
les
xchg
lret
adc
outsb
js
aas
outsb
dec
cwtl
cmp
clc
je
imul
sub
xlat
jl
mov
adc
mov
cmp
fs
pop
pop
movl
push
stc
out
or
add
jbe
scas
sbb
in
pop
pop
xchg
js
mov
jmp
mov
std
and
in
jp
mov
call
aam
shl
bound
mov
iret
push
mov
xor
sahf
ret
shll
jno
adc
inc
mov
and
adc
push
mov
mov
lds
sbb
pop
sub
pop
mov
xchg
sbb
mov
fcmovb
aam
shl
jns
xchg
sub
cwtl
jmp
test
movsb
adc
push
sub
jo
inc
or
imul
xor
xorb
xor
inc
pop
popl
bound
lret
add
out
mov
cmp
pop
sub
lods
fcoml
sbb
movsb
adc
sub
mov
in
incb
sbbl
mov
add
xor
lea
popf
adc
es
mov
pop
je
js
in
sahf
scas
lods
xor
mov
fists
push
shlb
xor
push
pop
lea
das
pop
lds
lods
and
vcmpss
inc
cmpl
fsubrs
iret
mov
add
pop
cmp
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
add
cmpsl
jl
xor
push
out
jns
mov
lahf
test
inc
sbb
andb
icebp
and
out
jne
mov
sub
mov
dec
push
ljmp
sbbb
push
mov
in
jnp
xchg
dec
mov
mov
imul
mov
push
jl
test
pop
popl
jmp
outsl
push
cld
int3
xor
add
adc
xlat
push
pop
mov
icebp
ja
pop
or
ss
je
dec
jecxz
jmp
loope
pop
roll
out
js
in
or
mov
rcl
lahf
add
add
and
iret
pusha
sub
pop
add
push
shll
mov
fistpl
dec
popa
push
ret
fdivrl
sarl
or
add
jp
jbe
and
sub
repnz
dec
xchg
adc
insb
jns
lret
adc
xor
sbb
mov
jp
popl
cmp
std
jb
jmp
cs
jbe
jge
dec
xchg
cmp
cmp
dec
ljmp
jnp
and
xchg
jo
mov
gs
outsl
leave
movsl
cli
xor
xor
adc
pop
scas
and
ja
dec
icebp
adc
adc
mulb
stos
gs
adc
cld
out
cmp
jge
dec
sbb
clc
jno
lea
sub
stc
sub
sbb
push
push
mov
sbb
out
jle
dec
out
dec
cld
cwtl
scas
outsl
data16
push
adc
push
cs
xor
xor
ds
push
movsb
jns
mov
push
xchg
push
aas
pop
addr16
dec
test
roll
or
iret
xlat
and
or
xchg
push
mov
mov
cs
dec
out
mov
lcall
jne
sub
pmaddwd
insb
cmp
jno
push
clc
arpl
rcrb
lock
sub
inc
sbb
adcb
sub
mov
fs
push
into
cmp
push
aaa
xor
add
xor
xchg
dec
les
sub
push
add
xor
shll
xlat
iret
inc
push
xor
or
or
pop
sub
sahf
movsb
das
aam
out
ret
mov
push
mov
xchg
test
aam
pop
cltd
jns
in
cmp
loope
fldenv
mov
aam
inc
out
mov
mov
andl
scas
xchg
loopne
cmp
lock
mov
push
scas
insb
icebp
add
psllw
fisttps
pop
insl
sub
sbb
sub
mov
push
jecxz
out
mov
xchg
mov
cli
ljmp
ret
iret
rorb
sub
insl
inc
jnp
add
sbb
pop
sahf
and
or
scas
pop
and
bound
xchg
push
popa
notl
pop
sub
rorl
test
std
ja
push
dec
dec
popa
adc
xchg
loope
xor
mov
imul
sbb
call
and
push
and
inc
xor
aaa
adcb
testl
insb
icebp
adc
cld
mov
add
add
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
daa
push
stos
pop
xchg
push
sbb
sti
daa
add
dec
in
xor
dec
mov
xor
mov
mov
inc
lds
jge
das
addl
cmpsl
shlb
gs
fcomps
loope
push
dec
inc
test
ficoml
cmp
xor
or
pop
mov
leave
xor
xorb
add
and
xchg
mov
pop
pop
xchg
adc
ret
push
mov
xor
movb
mov
sub
mov
xchg
dec
xchg
sub
daa
into
in
ret
in
sbb
int3
pop
out
sub
adcl
fnstsw
cmp
mov
gs
push
xchg
imul
mov
sub
fnsave
xor
and
jnp
mov
adc
sbb
push
mov
or
daa
inc
adc
movsl
sub
adc
jmp
pop
das
sub
sbb
sbb
push
add
add
sbb
inc
and
add
and
jp
js
sarl
outsb
push
mov
xchg
cmpsl
jno
arpl
icebp
nop
inc
incl
push
or
fidivrs
cmp
mov
daa
dec
xchg
push
push
jl
adc
outsl
inc
cltd
jp
push
jno
xchg
add
into
lock
cmpsl
aad
fstps
dec
push
mov
push
movl
fisubs
gs
lea
xchg
xor
scas
es
cli
lds
stos
outsl
mov
out
jp
cwtl
call
adc
orb
out
in
adc
aad
jnp
lahf
pop
add
and
and
lea
xor
jns
ret
fcoms
cmp
or
cmp
inc
push
sub
subb
mov
jmp
mov
jo
adc
inc
rcl
aam
add
xchg
in
test
mov
cmp
ret
fimuls
inc
jge
repz
dec
and
dec
cmp
mov
pop
xlat
mov
xchg
mov
add
insb
xlat
imul
lods
pop
mov
repz
mov
cmpsl
adc
jae
fwait
stc
popa
outsl
in
mov
dec
out
bound
mov
sbb
add
mov
loope
subb
imul
popf
je
mov
cmp
cmp
mov
xchg
push
mov
jg
das
or
push
xor
push
jecxz
push
pop
shrb
and
cmp
inc
cld
cmp
or
vpsrld
adc
shll
or
add
sub
iret
ljmp
jno
sbb
push
sub
add
lods
insb
jmp
xor
or
in
or
sahf
cmp
popa
xor
pop
into
dec
sar
jo
shrl
mov
mov
imulb
push
lret
and
jge
stc
lcall
and
xchg
pusha
cld
cmp
xlat
or
push
mov
jl
jo
pop
sti
xchg
inc
sbb
pusha
int
pop
sub
and
dec
fcompl
xor
pop
sub
jmp
ret
hlt
cmpsb
cli
pop
jmp
pop
push
jg
mov
mov
fidivs
fidivl
xor
shrd
shr
mov
mov
mov
jmp
push
or
sbb
nop
cmp
push
push
sbb
xchg
sub
dec
mov
dec
inc
jae
mov
cs
inc
inc
out
sub
outsb
addr16
flds
cwtl
int3
pop
mov
pop
xor
sbb
cmp
leavew
adc
cltd
push
insl
mov
pop
xor
test
jp
jmp
inc
sub
or
pop
test
xor
mov
xor
adc
sahf
jmp
sbb
sahf
xchg
enter
loop
dec
mov
cmp
movsl
inc
out
ficomps
cwtl
sbb
sub
mov
notl
iret
adcl
push
xchg
fnstsw
outsb
in
dec
cmp
xor
aam
std
rorb
add
std
and
mov
pop
iret
xor
fldt
lret
in
mov
in
xchg
in
dec
xor
arpl
sub
repz
je
bound
in
mov
aas
add
pop
rorb
and
adc
test
ss
mov
add
ror
aam
js
sti
mov
add
and
mov
xor
xchg
in
loope
dec
jmp
jmp
xchg
mov
inc
je
ret
sbb
sub
insb
ftst
psrlw
xor
mov
js
in
add
adc
jns
pop
pusha
cmp
mov
test
lds
pop
cmp
xor
or
inc
insl
mov
call
mov
fisubs
adc
push
nop
fxch
movsl
sbb
mov
mov
jb
inc
mov
nop
mov
jbe
dec
push
lret
cmp
dec
popa
aad
or
dec
loop
cltd
mov
in
int3
mov
cmpsb
daa
aaa
test
push
in
or
in
jae
mov
mov
sub
mov
addr16
loope
lods
loopne
insb
lahf
mov
icebp
ja
pushf
mov
mov
or
push
pop
sarb
out
iret
or
insl
test
and
out
and
xchg
hlt
aam
and
lahf
mov
mov
mov
dec
popa
cwtl
fnstenv
xchg
mov
jle
roll
jg
sbb
pop
and
push
das
jo
push
xchg
jns
rcll
movb
sub
cmpsb
ljmp
psubw
test
jecxz
bswap
cmp
or
mov
adc
repnz
inc
pop
jo
xor
ret
test
in
gs
mull
xchg
cmp
xor
push
or
xor
sub
scas
or
mov
rorb
lea
jg
adc
mov
sub
pop
mov
xchg
add
xor
dec
gs
lret
jae
push
xor
lcall
mov
xor
cltd
lret
push
mov
or
push
sbb
shll
fimull
stos
sub
sbb
sub
cmc
adc
add
add
iret
add
sub
push
out
inc
mov
push
jecxz
dec
les
xor
mov
mov
add
pop
test
xchg
in
push
mov
lret
dec
cmpsl
mov
or
push
lods
sub
push
std
jne
scas
fstps
mov
push
out
or
dec
ror
lds
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
cmp
mov
mov
popa
scas
clc
jp
sub
test
and
mov
or
ljmp
inc
mov
add
fs
popa
fmull
jae
mov
sub
frstor
bnd
jb
mov
fdivl
xor
pushf
insl
inc
cmp
imull
inc
cmp
sarb
in
or
ds
and
test
sbb
sbb
cmp
mov
mov
aaa
inc
mov
movsl
pop
sub
jp
xlat
mov
sbb
cltd
je
sub
insl
lods
xchg
lods
arpl
inc
cltd
mov
add
sub
and
add
stos
push
fcmove
loop
add
jg
out
andb
jae
lock
imull
jmp
xor
mov
cmc
negl
in
stos
ds
enter
popf
inc
fsubrs
repz
fidivrs
cltd
mov
add
es
or
xchg
jp
add
test
xchg
or
push
dec
pushf
and
lds
call
xchg
loop
ret
stos
pusha
subb
int3
pop
add
add
mov
js
int3
lret
inc
leave
adc
cmp
cmp
lods
push
ficomps
addr16
dec
mov
sbb
insb
jg
xor
cmp
fsub
leave
int
test
jnp
test
loop
push
push
fs
loop
jge
xor
lret
pop
pop
clc
cltd
cmp
jecxz
xchg
cmc
test
cld
cmc
inc
cmp
inc
cmp
aam
das
aas
int3
test
es
xor
mov
or
addl
mov
push
cld
sub
cmpsb
mov
arpl
sbb
cmp
dec
in
lahf
pushf
jg
repnz
xchg
ja
ds
cmpsb
gs
add
push
and
pop
ror
xor
gs
sbb
mov
outsl
push
adc
mov
inc
popf
push
jp
insl
call
jg
xchg
pop
test
mov
daa
std
lret
and
jns
jbe
lods
xchg
xor
bound
mov
push
nop
int
sub
ljmp
add
jl
mov
hlt
push
pop
ja
xchg
jecxz
cmpsb
dec
dec
adc
add
lcall
in
and
dec
imul
jbe
sub
xor
mov
adc
mov
push
add
data16
int
or
sti
sbb
sub
aad
sub
add
xor
cmp
mov
and
push
mov
inc
push
and
push
repz
push
dec
pop
mov
dec
inc
das
daa
cmp
aas
dec
test
pop
mov
jg
les
mov
xchg
gs
adcl
cmpsl
insl
movsb
jne
sub
xchg
stos
hlt
jecxz
pop
int3
jnp
cld
cmp
out
daa
inc
test
inc
mov
or
stos
add
jecxz
rcrl
mov
jg
fldl
ss
test
pusha
sti
cmp
out
fbld
das
ljmp
iret
push
ja
xorl
push
andb
pop
pop
push
ljmp
add
andl
and
fs
pop
add
roll
jle
stc
mov
ficompl
push
add
inc
mov
and
in
repz
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
inc
jb
jle
adcl
sbb
jb
imul
xchg
jns
jno,pt
outsl
mov
test
lods
fcomps
cmp
stos
pcmpgtw
adc
subl
fistps
or
push
jp
xlat
je
cmpsl
dec
or
jg
pop
rol
sarb
sbb
sbb
cmc
adc
cmp
jns
loop
inc
aad
pop
jb
push
mov
stc
jb
cmc
sahf
and
mov
sti
sarb
fmull
pusha
negl
and
pushf
fsubs
pop
xchg
orl
fsubrs
rcrb
pop
jae
or
shl
lods
xchg
jbe
stos
xchg
mov
cmp
outsb
sahf
gs
hlt
aam
cltd
gs
adc
pop
popf
je
sub
jno
or
aas
sbbb
ret
das
jge
dec
scas
pusha
push
mov
xchg
cli
call
sbb
mov
repnz
cmp
sub
into
mov
je
adc
pop
jmp
jg
mov
leave
pop
shlb
jecxz
mov
fwait
cmpsl
movsl
arpl
pusha
xchg
or
xchg
xchg
cmp
xor
push
sahf
jbe
in
dec
or
inc
or
rcrl
fimull
outsl
leave
cmp
ss
mov
sbb
pop
call
pop
es
push
cmp
mov
push
xchg
scas
sbb
subl
aad
xlat
inc
imul
jne
inc
cs
lahf
cmp
mov
cli
cmpsb
repz
mov
sbb
push
addr16
cmpb
pushf
xchg
push
lods
andb
in
push
push
sbb
aaa
mov
lret
fldl
cmp
ss
sbb
pop
loop
mov
mov
mov
call
sarb
or
out
and
mov
jo
adc
jns
dec
or
jnp
pop
in
sbb
ds
cmp
fwait
in
bound
nop
cltd
sub
fmuls
cld
aas
pusha
hlt
lds
lods
mov
dec
mov
test
ljmp
push
orl
xorb
jcxz
stc
mov
loope
notb
or
cwtl
add
jle
mov
pop
pusha
jg
int
adc
dec
inc
sti
cmpsb
lcall
imul
jg
push
cmpsb
out
jns
xchg
xchg
push
mov
mov
je
movsl
adc
jl
movsb
adc
out
xor
jbe
stc
jge
jg
mov
gs
call
xchg
adc
sub
sub
cmp
sbb
add
loopne
imul
andl
jg
xor
gs
sub
filds
mov
dec
lret
dec
sub
cmc
andl
pop
ss
pop
jl
addb
iret
loope
lds
inc
loope
pushf
jo
popf
mov
test
pop
xor
std
out
jnp
jp
aaa
gs
cmp
nop
and
xor
pop
in
mov
mov
mov
lcall
lcall
inc
icebp
dec
push
fwait
shrb
jnp
xor
rol
loop
lcall
rcl
ljmp
xlat
aas
scas
in
mov
or
jmp
loop
ficomps
enter
mov
rclb
dec
pop
push
out
inc
popa
xchg
push
and
sub
cmp
bound
stos
mov
cmp
inc
pop
jae
imul
scas
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
cmp
push
sbb
dec
fbld
inc
mov
lret
mov
out
sbb
mov
inc
arpl
popf
adc
lcall
and
xchg
push
ficomps
push
sahf
sub
push
test
in
out
stos
inc
jp
aas
testl
fstl
dec
mov
add
movsl
dec
sub
mov
add
jo
les
and
call
stos
cmp
das
mov
adc
mov
xchg
and
lret
jno
insb
add
adc
in
adc
inc
or
dec
cmp
imul
lock
adc
adc
mov
push
adc
pop
xchg
sarb
mov
lret
popf
jae
push
inc
stc
jnp
pop
cmp
fsubr
xchg
cwtl
pop
push
jg
fwait
mov
push
or
cmp
or
or
adc
ret
cmp
aad
adc
jbe
push
fimull
xchg
xchg
cmp
mov
xor
fwait
push
cwtl
ret
std
les
out
or
insl
negl
daa
je
add
clc
in
sub
pop
call
inc
jmp
daa
xchg
fistl
jne
mov
lods
sbb
or
movsl
pop
ret
and
pop
push
lods
mov
leave
cmc
das
movsb
jl
test
lds
repz
jp
pop
xchg
dec
in
and
pop
sub
gs
jae
mov
xchg
insb
mov
jns
and
mov
xchg
sub
fildll
pop
das
sarb
xchg
leave
pop
mov
dec
add
mov
sbb
inc
mov
dec
and
lods
mov
data16
sbb
movsb
xor
aam
int3
jle
stos
es
testb
popa
frstor
out
mov
xchg
push
mov
xor
adc
jbe
mov
lret
mov
icebp
mov
add
push
add
stc
mov
cld
movsb
pop
leave
sbb
sub
mov
cmp
fs
fildl
cmp
pushf
add
mov
out
push
aad
mov
shlb
jl
loop
pusha
sub
insl
dec
sbbl
lds
pop
rorl
push
adc
fimull
xchg
mov
inc
ret
popf
pop
insl
jl
push
outsb
ljmp
jne
add
out
inc
shrb
mov
imul
jle
je
push
sti
cmp
imul
int3
add
mov
push
adc
shlb
pushf
lahf
popf
sbbb
aas
jge
scas
inc
lods
out
mov
ljmp
dec
inc
xchg
mov
out
fwait
es
mov
xchg
mov
insl
jae
loopne
lcall
pop
pop
inc
pop
imull
inc
das
popf
push
out
add
xchg
dec
jmp
rorb
mov
out
das
xor
scas
imul
das
or
sahf
aad
sbb
jl
xor
push
pop
popf
lods
int
lcall
ljmp
lea
cmc
sub
imul
scas
inc
or
repnz
es
mov
std
mov
fildl
adc
mov
xor
dec
jb
insb
insl
filds
sub
push
out
push
pop
xlat
sub
daa
pop
xchg
xor
sahf
shrl
repnz
insb
mov
pop
mov
mov
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
push
pop
jo
jae
sbb
aaa
and
sub
pusha
mov
inc
fisubrs
cmc
push
fmul
lods
adcb
xchg
adc
mov
xor
push
outsl
je
aas
enter
movsl
or
push
fbld
dec
test
adc
lods
inc
loope
cmp
xor
adc
xor
jno
jge
iret
xor
xor
jge
outsl
push
enter
inc
aam
inc
jnp
push
xchg
js
repz
mov
into
sbb
push
outsb
pop
test
xlat
push
inc
orb
xchg
pop
jbe
xor
jmp
adc
es
outsl
dec
iret
stos
stos
iret
add
aaa
sub
push
rclb
push
pop
or
inc
stos
jnp
inc
stc
mov
shlb
push
sub
in
xchg
mov
das
jbe
aam
out
adc
in
fs
inc
nop
fdivrl
cmp
test
inc
jle
mov
pop
mov
xchg
xchg
pmulhw
lret
xchg
fimull
nop
outsb
mov
mov
and
mov
scas
inc
jp
rcrb
jae
mov
loopne
adc
xor
call
dec
xorb
sub
and
mov
test
data16
add
nop
and
enter
mov
popa
shl
mov
xlat
loope
out
aaa
xchg
pop
or
mov
in
leave
je
js
pop
mov
jne
dec
ljmp
das
mov
es
in
outsl
xor
pop
lcall
jne
mov
xorl
jae
lahf
pop
daa
sbb
in
mov
jle
dec
stos
pop
mov
inc
lret
mov
push
jno
xchg
mov
push
out
gs
pop
iret
xchg
jl
out
add
mov
mov
and
enter
sub
mov
int
sti
mov
xrelease
aas
mov
jle
je
jns
out
je
fwait
jo
popa
scas
fidivrl
lret
cmpsb
ja
nop
cmp
push
jmp
push
dec
lret
jmp
fxch
or
ja
push
inc
push
shl
mov
xchg
ja
aaa
fs
add
jle
jno
popa
push
mov
sbb
cmp
scas
imul
insl
push
push
int
add
mov
movb
sub
pop
adc
iret
xchg
and
imul
mov
adc
mov
mov
xchg
jns
mov
ds
add
sti
jnp
call
repz
imul
sbb
mov
adc
jae
rorl
scas
or
xchg
xchg
dec
jo
mov
rcll
xchg
inc
jbe
outsb
sub
rolb
and
shlb
push
cmp
xor
cli
mov
pop
mov
aad
cmp
cmpsb
jmp
cmpsb
data16
cld
push
pop
sbb
hlt
data16
cmc
and
jns
hlt
and
or
xchg
xlat
jl
lds
jbe
stos
cli
sub
adc
lret
in
shr
pop
cld
jae
lds
xchg
sti
or
xchg
mov
addr16
or
incl
test
adc
gs
sahf
cmp
hlt
cmpsl
xor
addr16
and
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
adc
push
stos
out
imul
mov
inc
add
jle
aaa
loope
jg
out
fisubrs
pop
push
aaa
popa
or
cmp
jae
inc
sbb
nop
xchg
jmp
xchg
pop
pop
cwtl
or
mov
push
pop
xlat
mov
or
pusha
movsl
sahf
or
inc
shl
lret
jns
dec
dec
xor
es
cmp
inc
and
fdiv
out
sub
fnstsw
mov
adc
into
ds
push
or
lock
xor
add
push
mov
cmpsb
xchg
shll
popf
in
xchg
xchg
pushf
test
out
inc
adc
not
loope
inc
sbb
mov
jl
movsl
in
fsubr
clc
add
mov
cltd
sbb
sbb
mov
lahf
mov
movsl
push
fcmovb
cmp
mov
sub
jmp
dec
and
xchg
pop
test
push
lods
cmpb
lret
pop
inc
xor
insb
cmp
xchg
lods
jmp
sti
mov
dec
mov
out
lret
xchg
mov
loope
adc
outsl
cs
sbb
pop
mov
push
xor
push
push
lcall
sbb
add
sbbb
add
fs
scas
cmpsl
sbbl
dec
sbb
mov
arpl
pop
clc
pusha
mov
ficoms
cmc
test
loop
mov
stos
pop
popf
decl
scas
sbb
loope
lds
movsl
push
test
lret
aaa
ret
shl
push
cmp
sbb
fcmovb
adc
and
pop
imul
xor
push
inc
inc
or
mov
ja
jbe
cmpsb
in
jns
adc
jae
test
pop
add
lret
jp
push
jle
dec
jnp
mov
xlat
fbstp
ss
ss
loopne
lahf
test
push
shl
or
sbbb
addr16
out
dec
ss
mov
imul
dec
div
repz
jg
jge
aas
mov
mov
pop
mov
stos
stos
gs
cmpsb
pop
xchg
sti
push
add
xchg
xchg
cltd
addr16
ds
cli
hlt
mov
bound
and
add
test
xchg
mov
imul
mov
add
inc
scas
aam
jb
jp
xor
out
jbe
cmp
cmp
int3
adc
jl
mov
add
test
mov
jb
push
int3
or
push
xor
lock
push
mov
mov
adc
mov
cmpsl
push
addl
push
mov
or
inc
in
jecxz
push
push
push
cmp
mov
icebp
adc
ljmp
push
out
xchg
jp
and
jp
sub
test
addr16
xchg
push
push
js
mov
adc
test
insb
jecxz
adc
pop
pop
ljmp
pop
mov
and
orl
inc
mov
outsb
lock
scas
jno
cltd
sar
ret
xchg
jae
into
xchg
insl
je
stc
cmp
and
addb
pop
sub
and
mov
and
jo
sub
xor
test
cmp
icebp
dec
xchg
pop
ljmp
xchg
dec
repz
shll
xchg
and
out
test
leave
pop
add
fsubr
lret
add
dec
push
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
push
loope
test
mov
jl
cmp
mov
popa
out
mov
mov
mov
inc
mov
xchg
lret
push
iret
push
and
ja
xor
xchg
mov
mov
sub
cli
scas
push
cli
dec
cmp
jne
mov
xor
pop
sti
pop
pop
pop
int
xchg
mov
pop
push
dec
js
or
xchg
daa
repz
mov
aam
aad
icebp
mov
pop
enter
push
rolb
jo
jmp
pop
mov
add
dec
jmp
mov
mov
push
jnp
xchg
scas
fstps
mov
pop
cwtl
and
fisubl
aas
icebp
daa
in
mov
or
sbb
outsl
movsb
jmp
push
mov
scas
inc
jle
or
icebp
ret
arpl
ret
pop
add
inc
fdivs
cs
xchg
cli
mov
stos
push
push
inc
in
sbbl
inc
rclb
rclb
mov
cld
shrl
or
cwtl
cmp
idivl
idiv
test
push
dec
das
mov
ljmp
jl
ret
rorb
enter
cli
and
sbb
repnz
adc
and
sbb
mov
ds
xor
pop
pop
cs
adc
xchg
mov
daa
adc
or
rcrl
gs
sbb
cmpsl
dec
mov
out
inc
nop
xor
cld
and
inc
lods
add
or
or
fistpl
add
pop
sbb
scas
cltd
icebp
aas
ret
andl
push
mov
cmp
in
mov
xchg
mov
push
jp
jmp
mov
pushf
xchg
cmp
adc
xchg
in
in
xor
cmp
cmpsb
sbb
jmp
icebp
and
stos
xchg
inc
sub
push
mov
mov
sub
push
ljmp
test
lock
sahf
loope
sub
stc
test
icebp
sub
or
andl
call
pop
sbb
xchg
push
lea
shll
sbb
sub
mov
sbb
or
lret
jg
loopne
push
jns
cmp
or
fwait
xchg
clc
mov
arpl
jg
cli
notb
jo
imul
fs
xor
test
lahf
cmp
pop
sbb
ja
fmull
insl
repnz
dec
std
les
cmpsb
ficomps
sbb
inc
idivl
pop
les
sbb
pop
in
mov
stc
jne
lock
sub
out
aad
inc
xor
push
xor
mov
dec
sbb
arpl
enter
in
xchg
inc
cmpsb
and
aas
or
out
push
mov
jge
xchg
sub
add
push
sahf
sub
sbb
dec
push
sbb
add
cmp
add
enter
dec
and
stc
inc
inc
mov
adc
jmp
mov
sti
ret
or
mov
stc
mov
scas
cltd
incl
jmp
xlat
jp
lock
pop
add
insb
lods
lret
daa
push
sub
jmp
fs
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
pusha
repnz
pop
push
sbb
xchg
mov
xchg
insl
stos
fsts
pop
xchg
in
decb
test
popa
lret
cwtl
je
xchg
xor
mov
enter
stos
lret
scas
push
movsb
lret
add
jecxz
data16
mov
enter
std
xchg
sti
mov
subl
xchg
and
call
notl
in
pop
pop
inc
push
sbb
sarb
popf
icebp
xchg
mov
fwait
hlt
jns
rcll
jne
mov
push
ret
mov
insl
cmpsb
pop
push
lods
push
push
adc
pop
fadds
dec
fdivrl
popa
adc
arpl
loope
jl
jb
cld
sbb
xchg
sbb
jb
sbb
daa
shrl
leave
enter
lahf
sub
test
sarb
sub
xlat
loopne
pop
pop
cli
inc
push
iret
lds
ss
cli
test
mov
cmpsb
insl
fisubrs
sbb
dec
xor
cmp
push
xchg
loop
cmc
mov
add
das
cmp
dec
sar
es
lcall
outsl
jecxz
test
jmp
add
and
mov
into
xchg
mov
pop
dec
sub
stos
mov
inc
hlt
nop
mov
and
mov
test
in
add
pop
cmp
bound
dec
xor
xor
push
cmpsl
dec
push
cs
lret
mov
xchg
lock
out
cmp
movsl
filds
add
adc
and
aaa
movsb
lea
xchg
jl
xorb
in
movsb
or
add
xor
mov
sets
fimull
ja
sbb
jge
push
push
xor
add
push
ja
xor
js
fsubs
fistpl
loopne
mov
outsb
jle
fwait
int
push
loopne
dec
test
loope
pop
bound
xchg
iret
shll
pusha
xchg
inc
jo
dec
or
pop
push
add
or
in
dec
push
in
enter
push
push
mov
dec
lcall
nop
testl
pop
mov
mov
jmp
aaa
sbb
cmp
test
aad
psraw
sub
mov
outsl
dec
lret
mov
pusha
std
jp
xchg
es
gs
cmp
stos
push
daa
push
cltd
ja
inc
les
cs
xor
mov
aas
aas
das
fisubrs
lret
mov
cwtl
dec
dec
inc
mov
mov
cs
gs
outsl
jg
push
insb
jns
popa
addl
xor
loope
inc
jnp
xchg
add
mov
sub
out
loopne
mov
pop
push
mov
add
or
pshufw
cld
iret
popa
pop
adc
outsl
jg
aaa
js
or
rdmsr
adc
jns
stc
mov
loop
movsb
or
cli
mov
mov
adc
xor
mov
fstps
fdivs
test
add
jmp
xor
push
imul
jle
inc
out
adc
lea
or
mov
nop
sbb
repz
in
mov
pushfw
cmp
jl
outsl
xchg
jae
mov
cmp
cltd
sub
add
cltd
popf
mov
xor
decl
fld
in
and
sbb
adc
fldcw
xor
xor
and
add
add
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
jns
stos
ficoml
sbb
push
daa
ss
mov
jle
jae
cmpb
cwtl
pop
add
fdivrs
dec
cmp
data16
jmp
cmp
and
add
mov
sbbb
jp
sbb
mulb
adc
ret
dec
or
push
nop
das
sbb
cs
adc
icebp
ds
jae
cltd
data16
dec
sbb
enter
inc
loopne
cmp
les
leave
mov
imul
push
nop
sar
leave
sbb
sbb
scas
int
or
mov
cmp
loop
jmp
data16
subl
pop
arpl
out
dec
fadds
mov
ds
jne
and
add
dec
dec
and
xchg
fs
mov
inc
aaa
mov
int3
xor
sbb
aam
xor
aaa
mov
add
fwait
nop
push
repz
jbe
ljmp
sub
push
cmp
test
ljmp
nop
cs
das
out
adc
insl
mov
xchg
add
je
inc
push
jle
into
es
sub
movsl
cmpsb
jmp
xor
xchg
addr16
xchg
testb
adc
sbb
jb
sti
ffreep
arpl
xchg
xchg
sar
std
cmp
jmp
fpatan
fldt
or
mov
jle
shll
bndldx
sbb
int
outsl
and
mov
xchg
lds
cmpb
sub
fmulp
cwtl
sbb
jl
test
inc
jb
jge
ljmp
sub
pop
push
lret
loopne
aaa
push
cmp
ja
pop
inc
pop
mov
mov
add
sub
sarl
xchg
cmpsl
testb
cli
inc
jl
aaa
dec
jnp
push
outsb
mov
jecxz
and
sar
fistpll
dec
inc
add
mov
pop
inc
cmpsl
orb
add
sbbb
and
in
mov
inc
stc
mov
dec
push
test
push
loop
lcall
ja
xor
js
inc
jl
imul
mov
insl
add
ds
cmpsb
jg
and
out
mov
xchg
test
jno
loop
daa
jl
je
es
jne
and
ss
fstps
and
mov
fisttpl
movsl
mov
sub
mov
das
add
icebp
ret
testl
pop
cwtl
xor
fwait
pop
in
mov
into
out
leave
and
mov
jl
mov
inc
mov
aam
ret
int
clc
pop
and
or
aad
sbb
cmp
dec
xor
clc
lret
into
add
imul
sub
test
and
dec
leave
rol
aaa
mov
inc
loopne
addr16
sbb
xor
pushf
cmc
mov
xorb
jmp
stos
hlt
es
adc
xor
xlat
data16
movsl
out
into
fisubs
xchg
fdivrl
xchg
inc
xor
gs
xor
xlat
jnp
into
movsb
mov
pop
stos
mov
fwait
imul
test
test
cmp
test
rcrb
jb
stos
cmp
clc
int3
in
ficoml
mov
inc
fildll
scas
roll
mov
or
jle
push
mov
ds
cmpsb
test
inc
nop
imul
mov
and
push
and
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
jo
dec
push
sbb
clc
cs
add
dec
push
mov
dec
push
push
dec
call
mov
outsl
divl
jle
iret
sti
cltd
sub
cmpsb
clc
out
in
jmp
xchg
aas
mov
mov
out
jge
fsubs
cmc
and
fdivrs
scas
fcmovnu
cmp
das
cmp
cld
inc
int3
or
ss
sti
adc
mov
xor
cmpsb
sbb
dec
mov
mov
mov
xor
fdivrs
and
xor
dec
xchg
mov
aas
lahf
inc
xor
int
adc
call
xor
xor
mov
and
les
push
adc
enter
stc
int
orb
jo
push
roll
fwait
aaa
and
leave
fidivrl
mov
aad
jg
popf
nop
cmp
sub
cmc
mov
std
addr16
lods
call
call
lret
dec
sbb
aaa
shlb
imul
movsl
adc
sub
adc
mov
add
repnz
push
imul
jp
sbb
sahf
fwait
mov
addr16
daa
clc
xor
sub
fcos
xor
scas
dec
cmp
movsb
leave
mov
stos
loopne
aaa
dec
adc
pusha
xchg
sbb
mov
dec
insb
dec
or
popa
imul
xchg
lock
sti
data16
insl
nop
sbb
mov
xchg
out
daa
mov
mov
xlat
cmp
ds
je
mov
and
loope
popl
je
addr16
mov
test
and
mov
lea
push
jp
push
hlt
mov
bound
mov
pop
imul
push
and
jns
and
insb
fsubp
push
fisubrs
lahf
lods
into
test
or
inc
mov
loop
loopne
jecxz
cs
fisubrs
call
xor
test
bound
and
pop
shlb
pop
push
pop
mov
add
fwait
imul
loope
or
push
sub
imul
and
shrb
pop
mov
shr
outsb
add
jp
add
pop
lahf
mov
sub
ret
test
xchg
lods
pop
cmpsb
mov
jl
or
mov
inc
fnstsw
push
idivb
adc
sbb
loop
rcrl
dec
outsl
pop
push
xchg
mov
rol
mov
in
sbb
cmp
push
mov
and
fs
jl
sbb
pushf
out
xlat
cltd
inc
popf
mov
repnz
pushf
push
cmpsb
cwtl
call
jns
add
repnz
push
les
fsqrt
fcmovb
dec
insl
pushf
stos
xchg
shrl
jmp
popa
inc
push
rorb
aas
lds
jbe
pop
mov
pop
xchg
adc
xlat
cmp
scas
xor
mov
rol
je
and
xchg
fwait
jo
mov
adc
movsl
mov
jb
out
jle
inc
mov
fisubs
xchg
dec
aad
jp
aam
hlt
xchg
pop
popf
xchg
jo
mov
rolb
iret
adc
or
fcomi
push
sbb
cltd
roll
add
cmpsb
sbb
sub
and
stc
add
dec
xchg
movsb
inc
inc
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
cmc
pop
stos
and
sbb
adc
popa
hlt
dec
xor
cmp
sahf
cs
aaa
pop
popa
and
jmp
imul
push
inc
jg
ja
mov
mov
sub
sub
addr16
pop
and
jl
cltd
aas
int
mov
lea
push
inc
pop
out
sub
add
lock
mov
add
shrl
mov
pop
pop
ja
mov
scas
sub
sub
push
sti
movsb
test
fidivrl
pusha
icebp
lcall
push
dec
push
iret
in
lods
sub
mov
dec
repz
sbb
test
add
push
xor
je
sbb
sbb
popf
faddl
jbe
cmp
mov
shll
xor
bound
xchg
outsl
add
adc
mov
xor
mov
out
xchg
mov
in
pop
es
popf
and
imul
cli
pop
aas
push
cmpsl
sbbl
jg
sbb
pop
mov
xchg
or
vcvtsi2sdl
mov
mov
and
xor
mov
test
and
mov
and
jbe
idiv
inc
xchg
cmpb
ljmp
and
mov
aaa
cwtl
dec
xor
xchg
mov
jb
mov
outsl
sub
syscall
data16
mov
cs
mov
push
subb
out
xchg
xorb
and
bound
test
imul
hlt
popf
fiaddl
sub
mov
cwtl
cld
into
push
in
je
mov
mov
push
into
mov
pop
movsb
xor
bnd
and
mov
stos
jns
ret
cmpsb
cmpl
inc
pop
inc
cmp
insl
mov
jae
sub
push
sbb
outsl
loop
clc
cmp
test
jb
sbb
stc
xchg
pop
sub
movsl
fmulp
sbb
mov
pop
daa
lret
inc
into
and
sub
sbb
loop
pop
xor
mov
or
ret
les
pop
cwtl
lods
jnp
int
int
sub
aam
scas
popf
rep
repz
loopne
in
jno
outsb
fwait
adc
pushf
add
cs
into
int
or
ds
roll
mov
rolb
push
sbb
push
jge
xor
movsb
mov
iret
mov
and
iret
loop
add
outsb
and
test
mov
mov
mov
cmp
mov
push
sar
js
mov
cmpsb
call
mov
adc
inc
insl
out
cmp
push
xor
clc
js
test
dec
nop
and
mov
pushf
aam
inc
push
rcrl
xor
xor
loop
sahf
jnp
mov
xor
cld
inc
inc
fisubrs
mov
adc
jbe
cvtps2pd
sub
inc
jne
inc
add
push
scas
fldt
push
adc
mov
dec
jno
mov
pop
jp
clc
ror
sbb
lods
mov
mov
or
dec
jnp
sub
popf
push
lret
push
cmp
mov
fistpll
fldt
dec
pop
pop
cmp
das
or
or
sbb
add
mov
fsubl
ss
cmp
add
pop
xchg
mov
mov
mov
clc
orl
xor
push
in
cmp
sbb
add
inc
ret
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
sub
aas
push
sbb
ds
pop
hlt
lea
push
or
repz
cmc
into
mov
stos
call
jp
imul
push
dec
iret
mov
jne
rcl
xchg
mov
fiaddl
xchg
incl
lret
inc
adc
push
cmc
ss
cmc
insl
push
cli
mov
jecxz
ds
dec
mov
aaa
adc
cmp
jne
inc
xor
cmp
push
cmp
shll
jl
jb
ret
jge
sub
in
xorb
roll
test
xor
filds
insl
push
cmp
ficomps
lahf
jl
and
dec
jns
add
jmp
mov
push
loope
and
mov
jno
bound
sbb
jo
push
pop
mov
enter
sbb
mov
inc
xor
mov
rcll
push
fwait
jb
sbb
inc
movsb
dec
cld
jne
or
rcll
bound
negb
sub
inc
jo
bound
stos
das
in
jbe
insl
pop
adc
idiv
stos
xor
mov
out
rcl
addr16
pushf
adc
aad
dec
push
int3
icebp
pop
ja
js
lahf
push
and
pop
jmp
lea
xchg
push
dec
sahf
or
inc
jns
int
push
subb
mov
ds
repnz
ret
pop
outsl
jl
arpl
pop
cmp
je
inc
inc
lods
fcoml
jnp
imul
repnz
xor
or
push
xor
sti
jmp
mov
mov
popf
xchg
jne
push
mov
adc
dec
adc
insb
not
or
adc
jnp
xchg
push
cmp
pop
mov
push
addr16
mov
lock
xchg
add
into
movsb
aaa
test
xor
jp
out
xor
sbb
sbb
xchg
scas
insl
ljmp
adc
test
inc
and
pusha
lods
and
mov
popa
dec
push
icebp
sbb
pop
ja
xor
loopne
repz
pop
inc
inc
aaa
push
iret
ret
ret
out
xchg
ja
cmp
sbb
leave
push
jb
cwtl
aam
adcb
icebp
mov
cmpsl
call
jbe
inc
ds
inc
pop
fldlg2
cmp
das
mov
test
cld
std
mov
pop
push
and
and
ds
test
iret
test
or
les
jno
jge
and
mov
ss
je
cmp
push
and
or
mov
sub
ficomps
fistpl
shr
cltd
mov
xor
push
inc
mov
jmp
jl
jbe
xor
jbe
sub
pop
add
jb
out
and
out
or
push
cmp
sbbb
pop
jg
jmp
ss
addr16
xchg
mov
mov
lret
loopne,pn
cmp
cmp
dec
test
jmp
pop
mov
pop
cmpsb
lret
in
repz
in
out
fsts
mov
outsb
sbb
or
cmp
jne
mov
mov
cli
xchg
add
xchg
js
cmp
cwtl
lahf
pop
pop
repnz
fldl
jbe
aam
insb
jnp
out
and
sbb
out
ret
imul
jnp
sub
mov
outsl
mov
pop
mov
loopne
or
jmp
test
nop
lahf
jp
and
xor
push
push
sbb
out
xor
add
into
aas
into
insl
push
push
filds
mov
jno
aam
lods
leave
xor
les
sub
inc
or
xchg
xchg
sub
outsl
xchg
in
push
cltd
iret
mov
cltd
fildll
lret
cmc
daa
mov
outsb
pop
cmp
lcall
or
imul
popa
shlb
sub
daa
mov
outsl
fstl
jbe
outsb
inc
loop
lahf
lcall
aam
push
je
test
push
mov
jae
mov
dec
mov
ret
jmp
shrl
sbb
out
sub
xchg
lahf
icebp
cmc
imul
pop
loop
sub
in
aas
pop
in
mov
mov
out
xchg
jb
mov
xchg
mov
pusha
loope
sbb
push
jg
xor
roll
scas
xor
out
pop
int3
dec
push
fdivs
push
mov
ljmp
sbb
xchg
movsb
repnz
jo
xchg
repnz
cmp
fidivrs
pop
mov
popf
push
aaa
lret
repz
mov
fdivr
inc
jmp
mov
shlb
cmp
out
sbb
cmpl
inc
push
data16
loopne
aaa
pop
or
into
or
xchg
dec
pop
lods
mov
or
push
repz
pop
cli
jae
or
sub
sbb
xchg
ljmp
fistpl
sub
xchg
inc
pop
leave
movsl
push
mov
cwtl
jmp
test
int
jne
fisubrl
adc
mov
cmpb
adc
rolb
fs
xchg
lods
mov
xchg
test
ss
hlt
or
rcrl
or
sti
movsb
scas
push
mov
xchg
imul
jo
lcall
pop
sarb
mov
sub
mov
jb
xchg
outsb
lahf
fisubrs
repnz
iret
lods
inc
push
sub
repz
mov
dec
or
addr16
and
jae
sbb
adc
sbb
pop
mov
pop
lahf
pop
movsl
repnz
aad
in
rcrl
or
int
or
jae
xchg
pop
mov
and
leave
inc
xor
sahf
test
mov
and
push
pop
dec
add
xchg
es
ret
mov
add
xlat
gs
ljmp
or
or
pushf
sbb
xor
mov
lea
je
aaa
or
sbb
mov
xchg
les
ja
stc
mov
call
jbe
clc
loopne
stos
mov
ss
jmp
call
mov
data16
xor
jno
xor
popl
ss
sub
xchg
mov
xor
cs
pusha
and
and
inc
xor
cli
and
lods
dec
sbb
sbb
daa
mov
push
jmp
add
mov
cld
push
or
dec
mov
repnz
mov
mov
jnp
push
lds
data16
jl
mov
cld
test
add
ret
mov
dec
sub
ds
adc
sbb
sahf
pop
inc
stc
loope
in
pushf
fildll
add
loop
xor
xor
or
mov
cmpsl
inc
adc
shrb
rorl
aaa
fdivrs
jne
add
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
iret
mov
push
das
push
sbb
push
jl
test
in
inc
jle
test
cmp
cwtl
add
jb
mov
cli
sbb
rcr
aas
push
sub
ss
loope
push
pop
insb
mov
xor
aad
pop
dec
dec
jne
loope
test
xchg
outsl
mov
sub
sti
pop
repnz
enter
mov
lret
stc
outsb
mov
mov
lds
and
pop
jge
lea
sbb
in
dec
adc
inc
push
xchg
cs
aaa
fcoml
add
adc
dec
ljmp
mov
xchg
sub
pop
and
outsb
mov
std
push
outsl
inc
inc
loopne
xchg
dec
mov
inc
arpl
je
push
std
ret
dec
lret
or
xlat
or
mov
int3
push
clc
add
js
adc
sahf
popf
ret
inc
mov
cmp
push
popa
icebp
pop
inc
jp
mov
loop
or
xchg
jo
aas
adc
mov
iret
loop
jle
sarl
idivb
adc
rcrl
imul
sub
adc
dec
adc
dec
gs
scas
push
push
scas
pop
adc
add
neg
sub
or
inc
jnp
sub
adc
mov
call
mov
inc
pop
out
xor
sbb
pop
dec
cwtl
sub
mov
push
mov
hlt
sub
sub
sahf
sbb
xlat
or
mov
add
aad
sub
add
cld
ja
mov
sbb
jecxz
xor
mov
dec
mov
in
adc
add
mov
sti
and
mov
xlat
mov
adc
push
fst
push
loop
aam
sbb
mov
dec
push
jo
pop
shr
femms
sub
sarl
xchg
sbbb
mov
ret
jne
rcr
dec
xor
mov
jno
inc
mov
int
daa
pop
test
jne
lock
push
sub
movsl
rorl
mov
inc
mov
lods
in
inc
mov
dec
aas
sub
xor
xchg
mov
arpl
mov
push
cld
push
mov
test
orb
sbb
sti
roll
and
arpl
adc
sbb
out
mov
icebp
xchg
dec
loopne
or
call
xchg
pop
iret
shlb
nop
test
stos
inc
stc
dec
dec
ja
and
cmp
js
xor
in
outsl
xor
repz
pop
pop
dec
decb
mov
xlat
scas
iret
mov
popf
leave
jns
call
or
xor
imul
jge
pop
mov
pop
sub
pop
xchg
mov
es
clc
filds
and
sbb
mov
in
notl
subb
ljmp
insl
mov
adc
fnstsw
aad
pop
dec
jbe
inc
stos
xchg
out
xchg
jmp
das
fs
add
andl
inc
fisttps
push
das
mov
adcl
add
xor
xor
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
mov
sub
sbb
mov
fwait
pusha
jne
adc
cli
je
out
xor
outsl
push
ss
movsb
pop
insl
mov
lods
bswap
and
cmp
jg
jp
mov
dec
leave
imul
stos
stos
cmpsl
popa
cld
pop
mov
into
lods
daa
cmp
testl
push
add
push
loope
sarb
xchg
test
out
mov
rolb
push
js
clc
insl
jecxz
fiadds
inc
or
pop
repnz
ljmp
mov
stc
inc
push
dec
sbb
adc
jl
jo
xor
mov
into
dec
in
or
sub
jg
les
cltd
mov
lea
xchg
cwtl
and
mov
lahf
or
jnp
push
imul
xor
sbb
icebp
adc
sti
jecxz
pop
xor
vunpckhps
pop
push
fcoms
push
xor
and
sub
xchg
dec
push
mov
jle
xchg
testl
cmp
popf
rolb
cmp
fdivs
mov
mov
mov
inc
dec
repz
and
pushl
es
mov
das
fwait
push
leave
xchg
inc
pusha
jae
idiv
jecxz
arpl
fcoms
hlt
icebp
lds
mov
into
fsubrs
mov
rorl
mov
popf
movsb
lahf
mov
cmpsb
and
inc
lret
dec
in
jb
out
push
lret
cmpsb
push
enter
dec
negl
add
sub
pop
in
cmp
lods
pop
pop
dec
loop
mov
mov
add
rcll
jecxz,pt
lcall
fs
fisttpll
std
dec
fwait
dec
mov
mov
cmpsb
jecxz
vaddpd
add
ja
xchg
or
inc
jnp
daa
dec
dec
arpl
and
sub
jmp
sub
mov
imulb
add
es
in
pop
inc
mov
mov
or
mov
stos
sub
sub
mov
add
cmp
mov
sub
mov
repz
mov
dec
jbe
push
es
mov
sub
cmp
shrb
add
je
adc
stc
enter
sub
add
cltd
pop
fistl
cmpl
jmp
mov
pop
push
or
lea
adc
out
mov
adc
scas
imul
sbb
sub
rolb
fldcw
xchg
jno
mov
pop
dec
dec
inc
fildl
imul
jne
sub
adc
out
or
jl
cmp
ds
outsb
mov
pop
mov
mov
inc
int3
pop
xchg
cld
mov
int
cmp
xor
stos
in
dec
arpl
orb
jae
and
sahf
xor
mov
xor
cmp
jle
dec
dec
mov
adc
jecxz
sub
movl
cmpl
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
adc
and
push
sbb
imull
jae
shlb
push
test
add
push
inc
hlt
pop
repnz
call
popa
push
in
jge
mov
pop
in
sbb
cltd
inc
sarb
insb
lea
es
fildl
pop
mov
jmp
fsubp
xchg
mov
jnp
push
das
xor
sti
xchg
mov
or
adc
add
lods
xchg
movsl
les
mov
or
or
es
dec
xor
inc
jnp
mov
sarb
cmp
rep
push
fisubrs
sub
dec
mov
xchg
xchg
test
outsb
add
sbb
adc
or
lods
sbb
test
or
inc
dec
push
mov
lahf
aam
scas
add
es
jl
shll
scas
xor
insl
jl
popa
jbe
jle
rolb
ret
mov
jmp
xor
adc
push
lret
cs
push
add
adc
jbe
dec
mov
pushf
psrad
aad
sbb
fs
dec
push
jns
es
mov
jg
je
das
push
mov
imul
test
pop
jl
mov
or
xor
lcall
jle
outsb
push
hlt
mov
jle
cmp
jo
inc
ja
andl
arpl
lds
dec
pushf
leave
or
out
jl
push
mov
jae
stos
fisttps
push
adc
xchg
in
xchg
movsl
dec
or
inc
ss
aam
data16
jbe
adc
inc
gs
in
insb
xchg
xchg
sub
add
sub
sbb
dec
pop
mov
sbb
fidivrl
out
subb
adc
ds
sub
stos
mov
bound
fs
xchg
mov
xlat
rclb
xor
outsl
adc
xor
je
or
pop
sbb
ljmp
leave
xchg
or
rorl
mov
mov
pop
lods
push
cmp
jo
into
enter
and
sub
movsl
push
fsubl
or
pop
sub
jbe
cmp
lods
jge
mov
gs
cltd
call
sub
nop
jg
cmp
aam
dec
adc
sarl
mov
test
sub
pop
or
jbe
adc
cmpsb
and
movsl
push
in
decb
fcmovne
fs
imul
jecxz
dec
pusha
inc
lahf
mov
lcall
inc
and
xor
je
mov
jge
pop
pop
scas
fwait
jl
mov
pop
jbe
mov
rcr
jge
xchg
jmp
out
and
es
insl
int3
cmp
sbb
lahf
sbb
xor
sti
push
cmp
add
or
mov
and
movl
leave
iret
pusha
xlat
lahf
iret
pop
pop
sbb
sub
adc
pusha
add
lods
lds
pushf
js
xchg
rcl
dec
xor
in
incl
add
addl
rorl
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
movsl
out
outsl
mov
sbb
sbb
xchg
test
aaa
push
js
mov
cmpsl
aad
fs
rolb
xor
loopne
outsl
notb
push
pop
repz
outsl
jae
pusha
xchg
test
in
insl
loopne
xchg
cmp
or
fildll
jge
fwait
or
lods
ret
roll
mov
mov
mov
inc
dec
fwait
pop
mov
push
gs
aas
aas
addr16
mov
sub
popa
in
push
ja
add
hlt
sub
out
fstps
fistl
cltd
fidivrl
stc
clc
pop
xor
cmpsl
test
mov
or
sbb
jmp
mov
mov
fmulp
add
mov
ja
rsm
cmc
enter
ljmp
rol
out
xchg
add
dec
adc
aas
or
jns
add
inc
roll
sbb
icebp
mov
or
lcall
xchg
push
lods
or
or
push
es
das
pop
das
inc
aad
jecxz
jo
lret
lahf
rcrb
xchg
push
jbe
dec
cmpsl
rorl
neg
mov
mov
stc
rcr
push
mov
xchg
push
mov
sub
mov
rolb
sbb
pop
lods
jb
out
les
pop
jne
adc
lock
sub
mov
je
inc
rcr
fldcw
movaps
adc
jl
jmp
mov
jno
or
cmpsb
daa
cmp
xchg
xor
mov
loopne
aad
mov
and
aam
mov
mov
dec
and
insb
or
pop
lret
mov
std
push
mov
neg
sbb
fbld
pop
mov
test
or
xchg
mov
sbb
repz
inc
stos
cmp
fiaddl
int
push
es
xchg
adc
mov
loop
xor
mov
lahf
jns
sti
xacquire
mov
xor
pusha
mov
jae
test
inc
mov
sbb
mov
sti
pop
test
lds
add
fdivrp
insl
mov
inc
pop
std
in
xchg
xchg
out
in
shll
or
mov
shl
cmp
lret
out
and
push
add
pop
popf
jo
neg
fistpll
nop
xchg
or
cltd
ret
insb
xor
rcr
jo
aas
add
xor
adc
push
sub
dec
jnp
jp
push
jmp
pop
cltd
outsl
dec
mov
sub
into
dec
cmpsl
insl
mov
jp
out
xchg
mov
xlat
mov
movsb
add
loope
sti
or
dec
icebp
stc
sti
add
xchg
xchg
mov
out
xchg
sbb
sub
inc
fld
lds
mov
fisubrl
test
mov
push
xor
xchg
xor
sbb
adc
and
sbb
jo
out
push
sbb
gs
jno
sbb
adc
inc
sbb
mov
adc
loopne
pop
pop
leave
movl
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
lock
sbb
jl
fmulp
add
inc
mov
std
adc
idiv
ret
andl
ds
pop
push
dec
imul
and
dec
xor
negl
outsl
lret
outsl
xchg
sbb
cmp
stos
insl
idivl
cwtl
push
rcrl
sarl
stos
divl
int3
inc
outsl
idivl
cmpsl
or
inc
or
mov
xlat
decl
mov
jne
xchg
pushf
insw
pusha
jle
and
and
inc
or
loop
clc
mov
mov
inc
xor
xchg
test
pop
jne
mov
icebp
pop
fisubl
add
or
pop
sbb
sub
dec
push
out
dec
jle
inc
and
lods
sti
mov
pop
sub
push
pushl
xor
jmp
push
pop
cmp
inc
adc
xchg
hlt
adc
daa
fisubrs
repnz
dec
mov
repz
mov
stos
or
adc
and
and
lret
jo
and
push
mov
out
int3
mov
fs
movsb
jmp
xor
rcrb
inc
sub
and
and
and
aad
loope
dec
xchg
lods
mov
loopne
pop
add
push
mov
inc
test
lahf
mov
inc
fwait
jecxz
shl
pop
and
mov
cmpsl
lea
or
scas
mov
cmp
cwtl
clc
test
pop
insb
mov
xchg
mov
ljmp
inc
add
add
push
lcall
notb
push
ret
fs
addr16
sub
pop
dec
push
hlt
push
cli
adc
inc
xor
in
sub
aaa
ljmp
shll
das
adc
jge
in
fstl
dec
pushf
stos
push
add
inc
lcall
sub
daa
das
fidivl
js
aas
loopne
inc
mov
aaa
or
stos
xchg
pop
mov
xchg
out
mov
das
and
out
cmp
cmp
test
jg
mov
cld
insb
or
cmpl
mulb
dec
cs
pop
pop
ficoms
scas
negl
jno
mov
imul
loope
jns
sahf
aas
mov
xchg
aas
imul
sub
lea
rorl
adc
adc
sub
sbb
cmp
into
fbstp
add
cmp
mov
adc
ljmp
stc
ret
fsubrl
rcrb
mov
mov
in
push
lret
das
adc
push
fs
jne
loopne
in
or
pop
cmp
jbe
push
arpl
ja
pop
bound
mov
add
add
and
mov
or
mov
inc
mov
pusha
push
sub
mov
movsl
xchg
sbb
int3
adc
pop
xor
or
sub
add
add
xor
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
mov
mov
lret
adc
sbb
push
fdivrl
xor
ret
inc
jle
and
dec
sti
fistps
sub
xor
aad
xor
dec
out
in
push
mov
push
xchg
test
lahf
inc
cld
dec
fs
inc
sub
or
inc
std
mov
les
daa
pop
adc
xchg
daa
xchg
sub
add
scas
out
fdivrl
xorps
cwtl
xor
mov
sub
les
mov
mov
mov
pop
loope
inc
les
xchg
lods
xorb
outsb
ret
push
test
and
and
dec
nop
sbb
pop
adc
pop
ret
adc
test
sahf
mov
mov
push
dec
push
or
ret
ficoml
scas
dec
mov
mov
jmp
xchg
sub
outsb
push
inc
stos
lods
lods
push
inc
mov
xor
sti
mov
adc
add
testl
or
aas
push
sbb
imul
inc
fucomi
pop
jl
cmp
outsb
lahf
int3
nop
sub
movsb
cmpsl
ret
inc
xchg
mov
pop
fisubrs
popf
adc
mov
movsb
push
sub
insl
xor
mov
cltd
ja
lcall
mov
loopne
int
pop
and
ds
das
xchg
ret
xchg
lock
push
hlt
dec
sbb
inc
in
mov
sbb
cmp
mov
mov
fs
dec
repz
test
push
popa
adc
and
decb
pop
sub
test
scas
jecxz
imull
aas
mov
cmpsb
cltd
ss
jnp
rorl
lea
sbb
hlt
xchg
xchg
mov
xchg
ds
clc
rorl
jl
scas
adc
jae
fsubl
daa
jne
fs
cmp
jb
add
cmp
popa
hlt
jl
in
ss
inc
push
aaa
mov
sbb
xchg
cmp
adc
adc
gs
inc
jp
push
and
aam
or
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
jmp
es
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
dec
and
dec
insb
gs
arpl
push
outsl
inc
jne
jae
jb
aam
inc
add
daa
inc
add
inc
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
add
add
inc
add
inc
add
inc
add
es
add
inc
add
jle
add
daa
inc
add
inc
add
and
inc
add
add
push
movsb
scas
or
movsb
adc
inc
add
es
add
es
add
es
add
es
add
inc
add
and
push
es
add
lcall
js
inc
add
es
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
out
jle
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
hlt
and
in
inc
add
loop
js
lcall
and
add
lock
and
addb
add
hlt
clc
sarb
sub
jle
add
add
inc
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
and
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
inc
add
inc
add
inc
add
inc
add
addl
popl
inc
add
addl
mov
addl
scas
addl
mov
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
jo
add
add
add
add
add
add
add
inc
lea
add
add
push
lea
add
xchg
add
add
xchg
add
add
pusha
xchg
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
xchg
add
xchg
add
add
bound
add
jle
add
nop
xchg
add
add
les
add
loop
add
xacquire
add
mov
add
mov
add
add
mov
add
add
add
insb
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
cmp
add
mov
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
sub
add
dec
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jl
add
xchg
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sub
add
cmp
add
add
bound
add
mov
add
add
aam
add
loop
add
cli
mov
add
add
push
lea
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
add
imul
outsl
insl
add
je
outsb
arpl
jb
jb
imul
add
add
add
xchg
add
add
xchg
add
add
pusha
xchg
add
add
add
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
xchg
add
xchg
add
add
bound
add
jle
add
nop
xchg
add
add
les
add
loop
add
xacquire
add
mov
add
mov
add
add
mov
add
add
add
insb
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
cmp
add
mov
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
sub
add
dec
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jl
add
xchg
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sub
add
cmp
add
add
bound
add
mov
add
add
aam
add
loop
add
cli
mov
add
add
push
lea
add
add
