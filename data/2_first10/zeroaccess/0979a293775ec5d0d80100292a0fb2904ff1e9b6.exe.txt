push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
cmpsl
jle
jle
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
sar
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
jmp
shl
aaa
out
out
cli
dec
shr
sti
cmp
in
cli
lds
jmp
ret
rol
into
ror
xor
add
stc
int
and
fcomp
ds
mov
nop
iret
sbb
leave
out
repnz
sti
cmp
sub
out
out
fyl2xp1
in
ret
jmp
out
ljmp
xor
iret
xlat
cmc
cmp
out
cmc
hlt
test
xor
not
rcll
in
fmul
xor
ss
aam
test
loopne
std
in
out
mov
out
icebp
loope
nop
xchg
cs
cli
clc
cli
out
rcr
iret
lret
hlt
hlt
xchg
movb
rcl
xchg
cs
xor
stc
leave
aas
int3
cli
stc
sbb
icebp
icebp
enter
std
rorb
xchg
aam
clc
cld
stc
into
cld
out
aam
in
in
cmp
out
xlat
mov
cli
cld
xchg
sub
cmp
hlt
into
in
stc
ror
stc
rcl
shl
fsub
fisttps
jmp
loopne
xor
jmp
aaa
fcmovu
lock
xor
jmp
rol
ror
rcr
fcmovnu
mov
into
fimull
add
sbb
fcmovu
neg
rolb
aam
out
clc
int
in
shl
ss
cmp
test
clc
out
loope
cld
int3
ffree
mov
hlt
rcl
fucomip
ljmp
cmc
rcl
test
test
iret
mov
icebp
iret
in
stc
aam
xor
in
xlat
movl
sbb
loop
fcmove
jecxz
xchg
cmc
lret
shr
icebp
cmp
repz
les
idiv
in
int
xchg
jmp
aad
cmp
fstp
cmp
rcl
cmp
fcmovne
icebp
out
movb
hlt
in
fistpll
xlat
lock
and
int3
in
ss
ret
fdiv
aam
xlat
in
fisttps
imul
jmp
xor
rcr
div
fcmovne
sbb
hlt
in
mov
out
iret
mov
adc
lock
stc
hlt
std
aaa
jmp
test
out
shl
fninit
ds
into
xchg
xchg
jmp
lret
std
int
repnz
sbb
neg
cmp
mov
xchg
aam
int
cmc
enter
fst
loopne
aad
repz
aad
int
lret
aam
stc
in
ljmp
loop
fcomp
cmp
std
cld
cli
cld
xchg
xchg
int3
enter
cs
iret
cmpb
stc
into
cld
cmp
cmc
mov
ljmp
shlb
aam
xor
clc
loop
cmp
lret
test
rclb
enter
aad
cmp
sar
testb
in
cmp
ret
ljmp
shr
iret
in
cmp
sub
loope
addb
xlat
mov
in
cld
xchg
shl
orl
jmp
out
call
int3
mov
jmp
nop
ret
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
enter
add
or
jle
nop
ljmp
enter
idiv
in
loope
shl
out
fsub
xchg
cld
jecxz
int3
lret
in
iret
mov
xchg
loop
aaa
aaa
out
stc
rcr
jmp
aas
lock
and
out
nop
in
in
icebp
jmp
aam
fmul
cmp
or
cmp
cli
jmp
adc
cld
fldl
jmp
xor
aad
repnz
fst
cmc
and
jmp
stc
roll
out
loopne
xor
lock
loopne
sub
xchg
mov
addl
ror
in
xlat
aad
aad
cmp
sarb
movl
incb
les
iret
xor
xor
xor
aam
testb
out
in
fisttpl
hlt
aaa
xlat
shl
in
cmp
int
sarb
sar
int3
lret
out
out
jecxz
lret
ljmp
xor
stc
into
clc
icebp
incl
aad
xchg
jmp
lret
loop
xchg
aad
into
lret
into
fsubp
iret
aas
repz
jmp
mov
ficoms
shlb
jecxz
in
xor
cmp
aaa
ds
mov
xchg
call
mov
int3
ss
in
leave
into
cmp
test
ret
sar
xlat
inc
sti
or
std
mov
std
in
lea
cmp
in
out
int3
xor
int3
loope
cmc
shl
leave
and
lret
shl
int3
aad
fsub
xor
cmp
repnz
clc
ret
div
out
lret
icebp
out
in
out
ret
sar
iret
into
in
cmp
ss
rcr
icebp
in
vmovntdq
fists
ss
int
cmp
into
ret
cmp
fcomp
sbb
loope
rorb
out
rcl
fxch
fdiv
push
add
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
fcomi
adcl
add
jle
add
cld
cmp
roll
leave
xchg
in
std
repnz
int3
into
sub
fcompp
into
out
int3
jecxz
fcmovnu
icebp
ror
enter
iret
loopne
xchg
jmp
xor
out
cld
shl
in
hlt
testb
rcl
in
rcll
loop
enter
sar
cli
aas
addb
mov
xchg
shr
cli
repz
jmp
xor
rcr
xlat
hlt
sti
loop
aad
repnz
mov
lret
call
ret
aam
fistpll
out
repz
in
xchg
mov
loope
fsubr
jecxz
jmp
leave
in
jmp
fldt
repnz
cmp
into
xor
in
filds
test
fdivrp
adcb
aaa
in
fcom
loopne
in
roll
or
faddl
enter
ror
in
fneni(8087
aad
cmp
into
out
xchg
in
in
ret
xlat
in
faddl
test
loope
aad
out
xor
hlt
cmp
sbb
in
fdivrs
test
incl
leave
loopne
loop
xlat
cmc
cli
fcmovbe
xor
fcmovnbe
aam
stc
out
cmp
in
fimull
std
test
out
cmc
shlb
aad
stc
int3
ljmp
fdiv
out
fstp
mov
shl
rol
in
cmp
ror
sarl
into
cmc
cmp
cmp
test
leave
jmp
call
subl
in
repnz
repnz
rcl
repz
out
roll
clc
xlat
into
test
loop
test
or
ljmp
fsubr
fcomi
xlat
out
cli
xchg
mov
xor
shll
lock
stc
ret
mov
cli
loopne
lret
int
into
xchg
fsub
int
shl
stc
cmp
cmp
cmp
iret
testl
inc
cld
sbb
mov
jmp
rcl
fcom
fcom
fstp
outsb
push
mov
dec
jnp
aas
ss
jle
or
jle
jecxz
call
shrl
aam
fidivl
out
jmp
cld
lock
hlt
lock
mov
mov
loop
mov
out
int3
in
out
aad
stc
cmp
aas
filds
lds
jecxz
leave
repnz
xor
cli
in
out
sarb
repnz
ret
lock
fdiv
out
stc
out
rclb
xlat
cli
icebp
out
lret
stc
int3
clc
cli
in
test
xor
iret
cmp
fstpt
repnz
clc
dec
xchg
mov
xchg
fldl
in
in
int3
into
enter
into
jecxz
shl
loop
jmp
lret
fdivr
mov
xchg
loope
aaa
hlt
ret
fsubr
lret
fnstenv
repz
cmp
cli
fadd
cld
std
mov
idiv
loopne
sar
lock
out
jmp
stc
hlt
sub
cmp
loopne
xlat
enter
fdivr
jmp
lock
std
int
div
xor
lock
cmp
loope
jmp
rcl
ret
xchg
test
in
out
aam
xchg
enter
in
not
cmp
aad
int
cli
cli
cli
hlt
vpmaddwd
loope
enter
test
xchg
sar
jmp
fmul
hlt
enter
sar
test
lock
test
ljmp
addl
xor
xlat
cmc
jmp
std
out
shl
mov
sub
hlt
xchg
hlt
repnz
int
aad
aam
out
test
std
int
xchg
enter
and
lret
ret
lock
out
jmp
lret
in
jecxz
sbb
ror
clc
incb
xchg
jmp
cld
div
lock
cmp
dec
imul
test
jmp
int
incl
shll
fcmovne
cmp
clc
sar
cmp
call
fmul
inc
out
test
xlat
ljmp
lock
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
scas
push
or
les
jle
or
jle
cmc
int
lret
loopne
aad
aam
ret
loope
fisttpll
mov
aad
jmp
xlat
ss
rcl
call
in
mov
mov
out
shll
xor
cmp
cmc
repnz
fcomip
test
lock
loope
hlt
shl
sub
and
repz
cmp
cmc
cmp
jmp
sbb
orb
mov
int
in
jmp
xlat
lret
cmp
ret
int3
cmp
fcmove
cmp
aad
faddl
fadd
mov
out
int
mov
in
xlat
in
std
test
fld
cmp
ret
aas
mov
sub
in
jmp
in
ljmp
sar
cmp
cmc
cmp
mov
in
cmp
enter
int
out
shll
jmp
iret
fcmovb
cmp
aas
fiaddl
shl
std
enter
into
loopne
mov
idiv
imul
hlt
loope
in
cli
cmc
in
std
xacquire
fisttpll
ljmp
aaa
adc
stc
ds
clc
loope
addl
mov
ret
aad
cmp
shl
xlat
ds
sarb
jecxz
hlt
sti
call
loope
mov
out
iret
out
int3
in
in
in
cli
loope
aas
filds
push
fucomip
cld
xchg
incb
aaa
cld
cmc
clc
in
out
cmp
int
aad
jmp
ljmp
xorb
xor
iret
ss
fneni(8087
int
ret
aas
idiv
fmull
std
iret
icebp
mov
in
loope
clc
xlat
xor
cmc
sti
hlt
idiv
add
fdiv
fcmovu
fcmovnu
cli
call
test
sbb
out
out
jmp
rcr
rcl
iret
lds
lea
out
jmp
shl
xor
int3
cld
in
idivl
in
in
cld
stc
xlat
ret
add
or
mov
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
aad
rcl
or
or
jle
out
mov
sub
cmc
repz
loop
jmp
imul
repz
stc
neg
sbb
cld
call
mov
mov
out
not
xor
fldcw
into
into
fdivr
in
hlt
mov
mov
lds
ljmp
rcl
aam
testb
call
fmul
fdivr
out
mov
aaa
shl
xor
cmp
ds
sti
xlat
jmp
leave
loope
mov
stc
clc
fcom
out
xor
leave
cmp
fdiv
out
rcl
fcompp
jmp
orl
hlt
int3
out
stc
std
cmp
cmp
rol
ret
or
test
in
xlat
lret
xor
cld
fcmovnu
fiaddl
test
leave
cld
in
icebp
nop
iret
jmp
out
out
cmp
cmp
loop
sti
iret
aam
sti
ret
idiv
in
stc
xlat
in
in
xchg
sub
ljmp
iret
shl
std
test
ror
enter
loop
in
out
aaa
cmp
clc
dec
fdivp
cmp
loope
mov
stc
in
fucom
xchg
rcl
shr
xor
sti
into
xor
dec
fdivrs
leave
shr
std
jmp
ljmp
lret
out
xor
fildl
cmp
sti
ret
test
fst
jmp
nop
loop
icebp
test
into
ljmp
sti
in
ret
cmp
clc
repz
aam
mov
int
test
test
cmp
sar
loope
iret
icebp
icebp
jmp
mov
jecxz
loop
leave
xchg
repz
ror
fincstp
cmp
jmp
xorb
sti
mov
test
addb
xchg
and
loop
aaa
sti
leave
jmp
leave
into
repnz
add
neg
loop
mov
in
or
fucomp
lock
test
cmp
jmp
fstp
je
xchg
or
loopne
jle
or
jle
fucomi
cmc
clc
cld
shl
std
out
cmc
cmp
jecxz
hlt
lret
in
xor
filds
call
mov
cmp
testb
xchg
test
mov
orl
cld
fildl
test
ffreep
leave
jmp
loopne
xchg
xor
xor
dec
cmp
loope
cmp
cmp
xlat
aad
ljmp
divb
repz
ror
shl
shl
cmp
rol
mov
in
out
iret
xor
lret
hlt
aaa
fsubr
clc
out
iret
fcomp
loope
in
cld
fmull
out
fmul
aad
in
std
fnstcw
test
cmp
icebp
fadd
loope
out
mov
fucom
in
sbb
shl
aam
xor
shl
lock
sub
ds
aas
mov
in
loop
nop
xchg
repz
icebp
ss
in
ss
rcl
ret
ds
mov
ljmp
jmp
aad
int3
aaa
repnz
in
fstpt
cmp
in
fsubp
repz
in
shl
ret
xchg
sti
fisttpl
mov
fldcw
call
loope
ds
cli
std
jmp
ljmp
hlt
icebp
out
ljmp
aad
hlt
loopne
into
aam
rcr
xchg
and
in
hlt
repnz
in
xlat
in
in
xor
cmp
shl
filds
shr
xchg
xchg
in
xchg
ret
enter
out
into
cmp
cmc
rcl
fucom
sti
mov
fcmovnbe
jecxz
fld1
fadd
sub
out
out
aas
in
aam
cli
aam
sar
xlat
fdivrp
into
lock
fcomip
fisttps
iret
aam
xchg
sub
sti
cld
icebp
cmp
sti
aas
fidivrs
jecxz
cli
xlat
leave
jmp
jecxz
test
shr
icebp
stc
sarl
aad
fcmovne
rorb
test
push
add
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
lret
jle
or
jle
idiv
in
cli
xchg
fsubp
out
out
shl
divl
in
sarl
icebp
fidivrl
fmul
icebp
rcr
xlat
mov
lret
xchg
in
ss
das
int
jmp
cmp
rcr
xor
add
test
clc
xlat
lret
fmul
int
enter
hlt
out
clc
xor
cmp
lock
rol
hlt
hlt
rol
jmp
xor
out
xchg
into
shl
cmc
cld
int
ss
lret
int
out
filds
loop
cli
in
mov
ss
jecxz
repnz
sub
rolb
cmc
mov
mul
rol
sub
jmp
out
ljmp
lret
stc
cmp
in
jmp
repnz
iret
out
repnz
repz
sti
rcl
iret
test
in
repnz
xchg
ds
sti
xchg
incb
jmp
in
out
jmp
stc
cmc
aaa
xlat
lock
shl
mov
in
in
sti
jmp
in
xlat
in
hlt
jmp
loope
jecxz
inc
test
fsub
cld
out
cli
mov
aad
cmp
dec
fsqrt
incl
cli
vshufpd
cld
test
lret
cmc
lds
enter
out
out
repnz
rol
hlt
in
cmp
nop
in
rol
mov
shrl
xor
aad
hlt
addl
imul
xchg
rorb
aaa
cs
fistpll
repz
jmp
cmc
rol
cmc
jmp
stc
sbb
jmp
sub
ljmp
in
repz
jecxz
fidivrs
leave
loopne
or
lret
fucomi
fnsetpm(287
iret
jecxz
loop
out
enter
loopne
push
xlat
cli
test
enter
int
xchg
rcr
into
xchg
clc
call
std
cld
jmp
icebp
loop
stc
loope
incb
loope
xor
add
mov
mov
mov
jmp
leave
ret
int
int
mov
xchg
add
cld
adc
or
jle
jmp
idiv
jmp
fdivrs
aaa
cmp
fcom
out
stc
xlat
mov
sti
mov
in
lret
testb
fxch
repz
lock
rolb
mov
stc
int
popl
aaa
aad
cmp
out
ljmp
addb
out
mov
lret
mov
loopne
cmc
in
hlt
lret
cmc
lock
ror
out
aam
ret
fmul
push
xchg
mov
test
xor
div
xor
int
rcl
loope
xlat
leave
sti
in
out
lret
jecxz
call
xlat
out
in
cli
iret
loope
mul
int
std
cli
in
loopne
frstpm(287
out
jmp
ljmp
ror
rcl
sub
shl
out
fldl
clc
out
mov
repz
lds
rcr
enter
in
loop
idivl
ret
in
nop
leave
fcmove
mov
out
adc
cmp
cs
out
in
ret
jecxz
test
fdivp
call
std
orl
ret
neg
in
into
repz
aam
jmp
cld
xabort
fucomi
neg
lret
out
loope
out
repnz
in
xor
cmp
aaa
icebp
ds
int3
cmp
clc
int
in
out
aam
loope
aad
mov
int
cld
cli
out
out
fucom
in
enter
loope
fsub
test
nop
repz
lret
int
imul
std
cmp
xor
ret
push
int3
lret
jecxz
jecxz
shll
iret
bnd
out
cli
xor
ljmp
out
icebp
xchg
ret
cmc
enter
enter
int3
clc
test
call
xlat
int3
jmp
loope
shl
nop
ljmp
fnstenv
ds
fnstcw
test
sti
aas
cmp
mov
int
cld
out
icebp
int
test
jmp
xor
jmp
aam
mov
sbb
cwtl
mov
jle
or
jle
lret
f2xm1
xchg
test
cmp
fcomp
loop
loope
decb
in
lret
lock
out
sti
xor
in
rcr
aas
decl
jmp
mov
mov
mov
std
shr
cmp
sti
rol
fst
sar
sti
loope
jecxz
xchg
repnz
xchg
int
int
int
aam
stc
aaa
rcr
cmp
sti
inc
incb
incb
xor
lock
jmp
int3
out
lock
fsubp
sarl
cld
bnd
loopne
fsubp
jmp
lret
cld
rcll
ss
cmp
repnz
repnz
sbb
add
mov
out
into
into
xchg
lock
cld
xchg
loop
rol
lret
out
fdivrp
cmp
xchg
imul
imul
in
lret
fdivp
xchg
in
out
ret
iret
out
cmp
sti
int3
repz
fstpt
fcomp
ftst
in
test
mov
int3
int
out
xchg
sub
loope
ljmp
sti
cmp
ret
iret
fadd
fcmovnb
fmul
xchg
cmp
out
iret
out
rcl
xlat
sti
clc
fdivr
lock
shlb
fst
test
mov
out
ljmp
lret
in
jmp
iret
into
fcmovne
aas
sar
aam
cmc
ftst
fdecstp
filds
into
repz
jecxz
enter
in
into
repz
sti
ror
rcr
mov
cmp
sbb
xchg
lea
aad
int3
fcmovnu
cmp
jmp
xor
ret
mov
jmp
lret
in
xor
into
out
test
lret
iret
out
ds
call
xchg
stc
sti
shl
orb
aam
int
shl
lret
loopne
ds
out
test
ljmp
xchg
int3
xchg
shl
cmp
xlat
cmp
call
fucom
in
ljmp
enter
test
enter
repnz
iret
in
fucomp
loope
fcmovu
fdivp
loope
jecxz
mov
sub
add
mov
mov
jmp
xlat
rol
xlat
enter
push
dec
stos
jle
cwtl
adc
jle
add
test
hlt
iret
rcl
xor
int3
cmp
sbb
in
call
icebp
int3
test
xor
fdivrl
rolb
std
mov
lock
out
aam
cmp
call
ljmp
cli
ljmp
xor
leave
xor
std
ljmp
testl
and
shrb
cmc
xlat
int3
leave
fsubr
ds
idiv
xchg
aas
ljmp
dec
test
in
in
call
into
loopne
shl
and
rolb
mov
nop
mov
loop
hlt
mov
xor
jecxz
xor
sti
out
sbb
cmc
ret
fcmovne
ret
jecxz
loopne
mov
cmp
aam
aad
xor
in
aad
cmc
add
test
mov
in
nop
repz
clc
in
sti
cmp
repnz
in
into
bnd
fincstp
in
out
ffree
out
orb
cmp
aam
icebp
fnsave
jmp
loope
fldl
in
out
in
mov
rcr
ljmp
clc
fadd
cmp
rcr
loop
test
cld
xlat
fnsetpm(287
mov
out
hlt
enter
aaa
sti
not
in
stc
loop
std
xlat
mul
icebp
in
mov
int3
out
in
icebp
xchg
out
repz
in
xor
shl
cmp
hlt
hlt
cmp
mov
stc
mov
out
xor
shl
fnstsw
aam
into
repz
stc
repnz
xchg
jecxz
lock
repnz
sar
sarb
rcr
fstp
mul
aaa
aad
icebp
mov
in
sti
out
jmp
in
jecxz
vpsllq
shl
aad
out
inc
fadd
in
leave
out
cmp
faddl
xor
xor
jmp
dec
cld
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
std
divb
sarb
div
cli
rol
sbb
sub
popl
repz
aad
fmul
icebp
rcr
push
call
decb
aam
in
jmp
int
sarb
iret
test
cld
in
mov
std
test
out
ss
in
cmp
repnz
shlb
jmp
cmp
xchg
out
in
ret
in
mov
in
loop
lret
test
xor
lret
idivb
out
incb
idiv
mov
fmulp
xchg
into
fsub
enter
vpaddusb
neg
loopne
xor
clc
out
mov
rcl
int3
lock
in
ret
out
das
repz
in
cmc
test
fdivr
add
or
sbb
lock
out
xor
das
icebp
hlt
jmp
cld
ss
cmp
loope
test
flds
hlt
loope
clc
loopne
test
iret
int3
fdivrl
ljmp
sarb
xchg
aad
out
int
iret
out
in
out
in
lock
jmp
cmp
adc
out
clc
test
enter
out
into
fcmovu
out
adc
out
neg
aad
cmp
icebp
fnstsw
loopne
in
imul
mov
jmp
loope
xchg
xchg
shl
ret
in
jmp
icebp
rcl
cmp
cmp
stc
fxam
repnz
mul
int
jmp
xchg
cmp
cmp
repnz
fdiv
loopne
call
call
leave
mov
enter
sti
xor
sar
int
jmp
iret
aam
aam
cli
xlat
mov
incb
repz
into
cmc
leave
int3
sar
into
xor
jmp
aad
neg
cmpb
ror
not
call
jmp
fucom
sub
ror
rcl
out
jmp
ret
stc
ret
int3
ljmp
xor
out
aam
cmc
cmp
imul
test
cld
movzwl
add
mov
jmp
ret
rol
rcl
rcl
sar
and
adc
mov
jle
or
jle
clc
loope
in
xchg
jecxz
aaa
divb
call
cli
fcomp
loope
sti
fucomp
mov
mov
popl
loopne
ror
lret
cmp
xlat
ljmp
lds
aas
test
xchg
in
int3
xlat
fcmove
aam
int3
xlat
shr
cmp
rolb
fmulp
nop
in
lret
orb
div
iret
not
cli
sbb
xlat
roll
fadd
leave
out
mov
fadd
out
aam
repnz
repnz
test
ffree
aam
aad
sti
out
jmp
xchg
lret
icebp
clc
cmp
in
loope
int
testb
test
out
and
iret
lret
in
ss
clc
ss
hlt
call
out
frndint
rcl
xchg
fldl
test
mov
les
sti
cmp
int
out
fst
sti
neg
repz
les
hlt
aad
out
nop
test
xchg
test
test
aam
xor
out
cmp
cmp
ds
aas
addb
fmull
sti
fstl
in
cmc
cmp
cli
sarl
aas
clc
out
ds
test
cli
flds
fldl
lock
enter
clc
aam
cmp
cmc
sti
mov
aad
mov
loope
in
lret
iret
out
iret
leave
int
fidivrs
fiadds
rorl
iret
addl
lret
ss
cmp
jmp
adc
fdivr
enter
lret
xchg
shl
in
sub
aad
xlat
icebp
lret
cmp
aam
ds
addl
jmp
in
mov
out
jmp
xlat
cmc
push
repz
xlat
push
cmp
test
in
xchg
or
test
loopne
sar
xor
jmp
into
faddp
aad
icebp
fdiv
leave
ffreep
adc
xchg
dec
icebp
repnz
or
movb
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
test
jle
or
jle
hlt
xor
jmp
in
out
imul
incb
xchg
ret
xor
jmp
fdivrp
cmp
orl
pop
out
mov
aam
in
out
enter
ret
in
out
mov
cmc
xchg
fcmovu
xchg
loope
jmp
in
repnz
iret
cmp
add
loop
iret
loop
cld
orb
out
in
in
fnstcw
loop
sar
xor
test
std
mov
das
into
ret
int3
iret
fst
sub
in
fnstcw
cmp
lock
ret
sbb
int
call
aam
int
imul
fcomi
lret
and
sarl
enter
in
addb
clc
repz
stc
icebp
lret
clc
ds
cmc
xlat
shr
rcr
decl
out
shl
out
rol
jmp
leave
sbb
aam
fdivr
fsubrp
mov
popl
iret
orl
in
fmul
test
cli
mov
sbb
fdivr
sub
sbb
xchg
xchg
enter
cmp
out
ljmp
fiadds
clc
std
stc
std
iret
shl
hlt
test
in
repz
flds
into
in
xchg
aam
std
icebp
hlt
ror
lret
leave
out
call
cli
xlat
in
lock
adc
mov
int
ror
cld
in
sub
xor
xlat
in
mov
testl
in
incl
test
xchg
call
cmp
fst
jmp
test
loopne
xlat
out
cli
mov
xchg
mov
cli
in
ljmp
icebp
fcomi
cli
in
les
test
xchg
xor
xor
cli
cmc
cmp
fbstp
cmp
loope
into
div
lock
sub
mov
jmp
int3
enter
lret
int
stos
test
adc
jle
or
jle
out
cmp
test
out
test
cmc
xorl
jecxz
stc
shr
aam
aad
in
stc
aad
in
fsubr
lret
sbb
lock
xor
xor
sarb
repz
cmp
fdivrl
fcmovbe
xchg
fmul
clc
loope
ljmp
aad
icebp
aad
fadd
xor
icebp
leave
std
int
rcr
out
leave
xchg
sub
xor
out
fsubr
aas
cmp
loope
in
fcmovbe
out
mov
int3
shr
out
lock
decb
in
jmp
cli
aaa
sti
std
out
fcmovne
repnz
repz
cld
in
dec
incb
ret
xor
leave
out
stc
cli
xor
loop
ret
repnz
in
mov
ror
jecxz
xor
jmp
shl
ret
hlt
clc
aad
xchg
out
fcmove
ret
loop
aam
out
int3
in
lret
enter
shr
fdivr
rcl
orl
sti
xchg
cld
nop
repnz
hlt
mul
push
ljmp
cmc
out
imul
out
in
ftst
xchg
in
aam
iret
cmc
cmp
idiv
aaa
cmp
loope
cmp
movb
adcl
repz
aas
clc
fdivr
aas
sar
mov
pop
xchg
jmp
jmp
jmp
xor
fnop
repnz
ffreep
ds
cmc
icebp
repnz
fmulp
loopne
in
mov
in
imul
jmp
ror
fiaddl
xchg
lret
clc
in
icebp
lock
xchg
test
enter
aaa
out
iret
in
sarb
repnz
fcmovu
fildl
enter
fldl
ss
fcom
loopne
cmc
ljmp
loopne
jecxz
mov
loope
cmc
out
sub
cmp
enter
cmc
out
aad
aam
cmc
ret
xchg
out
test
jmp
shrb
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
fdivs
into
ljmp
sbb
test
mov
in
leave
leave
xchg
ljmp
aad
int3
rcl
icebp
sarl
jmp
cli
sar
out
xchg
aas
ror
out
out
stc
shr
rcr
sarb
cld
aam
loopne
mov
test
mov
lret
int
out
in
iret
in
cld
in
div
out
enter
iret
in
test
sarl
stc
or
clc
loopne
nop
faddl
xor
lret
call
repnz
hlt
repz
aad
mov
out
int
in
call
shl
not
loop
cmc
cmp
fdivr
int
in
out
fsts
enter
iret
xlat
aaa
cmp
sbb
cmp
sti
mov
mov
mov
sarb
out
out
cmc
test
inc
add
sar
in
enter
loope
out
aad
fnstcw
ljmp
repz
cli
cmp
clc
loop
mov
fcomp
out
out
lret
xchg
into
iret
xor
out
ljmp
leave
adc
fcmovu
movb
mov
xchg
mov
hlt
out
in
cmp
out
ss
add
mov
leave
mov
fmul
xchg
loop
loop
shr
aaa
cmp
fdiv
cld
rcr
cmp
cmc
fcomip
ret
fdivr
std
ret
cli
lret
mul
ljmp
das
iret
lret
out
icebp
jmp
imul
iret
test
xchg
loopne
int3
leave
test
test
shr
int3
sar
lret
cmp
iret
fadd
enter
sbb
into
repz
das
loope
jecxz
cli
cmp
clc
out
xor
xchg
cmp
mov
std
xchg
out
jmp
sti
idiv
cld
aaa
int
rcl
ret
fimuls
fsubrp
vpsubq
cs
call
adc
sub
sub
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
cld
cmp
insb
and
or
jle
int
lock
fildl
jmp
xlat
fxam
cmp
int3
cmp
cli
fmull
nop
cld
mov
jmp
sub
repnz
cmp
add
test
mov
test
fsubp
xchg
int3
aas
out
iret
int3
rcl
rcr
repz
loop
aas
neg
fucom
fcomip
fsubp
fsubr
mov
jmp
loopne
jmp
aad
int
aas
lret
cli
decl
mov
test
in
in
xchg
ror
xor
aad
test
xchg
in
out
loopne
out
icebp
addl
ror
lock
out
icebp
aad
in
stc
out
cmc
int
in
mov
ret
into
shr
fcmove
enter
fstpt
aam
fcomp
test
ret
lret
jmp
ljmp
fld
jmp
aad
ret
out
lock
sbb
les
ljmp
sub
int
stc
loopne
fdivrs
loope
jmp
out
mov
xor
ret
cmp
cmp
fcmovu
push
shl
test
cli
loopne
neg
in
jmp
jecxz
in
cmc
fidivrs
jecxz
ss
std
jecxz
mov
lock
xchg
cmc
iret
xor
stc
jmp
xlat
out
repz
rol
mov
ret
faddl
jmp
aam
shr
enter
fsincos
aam
cld
rol
in
cld
sti
mov
loopne
xchg
leave
cs
jecxz
ror
cmc
aas
fxch
cmc
aas
in
ret
aas
ror
loop
loope
xchg
out
mov
icebp
clc
in
leave
leave
sarb
int3
shr
clc
adc
int3
sti
stc
test
int3
loope
out
mov
cmp
shl
cli
cld
into
iret
cmpl
rolb
xlat
test
in
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
aam
and
or
jle
out
std
adc
loop
int3
jmp
jmp
icebp
repnz
neg
shl
cli
cmp
mov
loopne
hlt
and
in
repz
cmp
xor
cmp
and
fadds
sti
loopne
xchg
call
iret
ror
jmp
iret
int
testl
fsubr
sbb
and
ss
repz
fdecstp
loopne
xor
mov
sbb
out
xchg
icebp
adc
fxch
les
iret
cmp
loope
cmp
std
aad
cli
fcoml
xchg
rol
loop
xor
lock
out
cmpl
les
out
clc
neg
nop
loopne
leave
lret
test
xor
aam
out
aam
ss
shl
repz
lret
call
shr
out
shl
fcmovnbe
fcmovb
lock
lock
iret
ret
mov
dec
aad
sbb
jecxz
mov
into
clc
lret
cli
cmp
out
aam
lock
idiv
ljmp
loopne
mov
nop
orb
repz
out
sar
std
shl
mov
leave
jmp
enter
mov
sub
jmp
ds
clc
flds
addl
lock
in
xlat
enter
repnz
into
fldl
mov
out
mov
xchg
jmp
orl
in
cmp
loope
repnz
addb
or
icebp
adc
jmp
lret
xor
fsub
aam
xor
fiadds
in
shl
lock
shl
out
loop
ss
repz
ret
test
in
or
test
out
enter
out
cmp
sbb
mov
faddp
fcmovbe
loopne
xchg
jecxz
xor
in
std
bnd
je
jmp
aam
int
aad
fldt
sbb
or
jle
repnz
out
adc
add
enter
lea
fdivp
leave
loop
out
sarb
cmp
repz
xor
jmp
fucomip
leave
fcomp
enter
mov
cmc
in
cmp
hlt
aam
jmp
into
sarl
in
enter
fdivrp
loop
jmp
out
xchg
aad
aad
enter
aas
lret
cmp
loope
out
fidivrl
add
aad
jmp
in
ret
int
loop
out
lret
out
hlt
fcmovb
int
icebp
lock
incb
xchg
stc
jecxz
in
push
ret
shl
cmp
out
leave
cmp
jecxz
cmp
fcmovnu
out
int
in
in
xchg
out
in
enter
aad
out
xor
hlt
loop
clc
test
ret
mov
xchg
aad
xor
cmp
aam
jmp
loopne
aad
loope
in
in
out
mov
sti
loope
orl
ljmp
sub
testl
mov
aam
in
repnz
out
ret
cmp
icebp
ret
mov
fsubp
cld
fstp
test
into
cmc
xor
icebp
in
aaa
ss
test
rorb
jecxz
mov
into
out
in
rcl
enter
cmpl
filds
leave
aad
mov
mov
aam
shrb
lret
neg
int
xlat
int3
in
aas
xlat
in
mov
test
leave
into
out
jmp
in
xor
hlt
int3
cmp
xor
in
mov
out
iret
cmc
fbstp
stc
jmp
xor
cmc
fidivrl
lret
cmp
idiv
and
out
div
loope
lds
in
lock
in
aaa
sarb
int3
repnz
test
fisttpl
decl
out
leave
fdivs
hlt
std
ljmp
div
rolb
lret
dec
in
mov
jmp
aam
iret
int3
fst
outsl
fmull
stos
xchg
push
daa
jle
or
jle
stc
call
aam
in
mul
ror
fdivr
cmp
repz
sub
cmc
jecxz
stc
icebp
aad
mov
testb
shrb
lock
out
aas
rolb
fdivp
imul
xlat
fsub
rcr
mov
loop
mov
in
test
iret
aad
cmp
cmp
repnz
xlat
out
jecxz
hlt
mul
fmull
mov
rorb
out
rcr
hlt
fcmovnbe
mul
cli
cli
not
cli
and
sub
out
loop
aam
lret
cli
rcr
cmp
shr
fadds
fstpt
xchg
cmp
lret
icebp
in
fyl2xp1
int3
aas
aas
repnz
cmp
ds
enter
in
icebp
shl
xchg
cs
xor
cld
fidivs
fnstsw
loopne
cld
ret
clc
ret
out
in
nop
xchg
aad
lret
cmp
icebp
cmp
test
ds
shr
cli
enter
or
into
into
int3
out
lret
out
fdivrp
sarb
loop
lds
ds
mov
in
jmp
out
hlt
lret
cmc
cli
idivl
incl
xlat
idiv
adc
mov
lret
leave
lret
enter
cmc
aad
mov
fld
std
fldl
cld
lret
out
mov
cmp
jmp
cmp
leave
repnz
shl
cmp
orl
movb
xchg
cmc
in
rol
clc
int
ds
lock
cld
int
icebp
hlt
ljmp
fsub
test
icebp
ret
fdiv
lret
in
repnz
sti
aam
jecxz
in
mov
cmp
into
lret
iret
cmp
out
cmp
mov
call
mov
icebp
fcmovnbe
in
cld
cmc
cmp
std
test
stc
shl
xchg
mul
ljmp
jmp
out
int
cmp
jmp
ret
xlat
int
fstp
cltd
sbb
pop
and
jle
or
jle
repnz
rcr
ret
fildl
cld
mov
xor
in
aad
in
sub
out
out
cmp
xlat
rol
fcmovu
jmp
in
std
mov
call
das
jecxz
cmp
cli
shl
cmp
in
fldl
jmp
in
loope
aad
in
sar
xor
hlt
cmp
faddp
icebp
loopne
cld
xchg
ret
ljmp
xchg
xor
fldl2e
xor
cmpl
test
fadds
out
out
xchg
in
repnz
cmp
jecxz
xlat
repz
cld
add
loopne
fcos
lret
xchg
xchg
xchg
sub
leave
xor
out
int3
ljmp
aad
shl
stc
fstp
xlat
int3
fisttps
loopne
lret
in
hlt
fmul
sarl
stc
test
in
aad
mul
in
clc
loopne
lock
hlt
loop
and
xor
div
aad
lock
iret
loope
test
mov
in
lret
cld
out
faddl
loopne
shl
jecxz
ljmp
cmp
ret
aam
xchg
lds
loop
loope
shll
ss
in
sti
lds
aad
out
mov
loopne
out
aam
ljmp
out
rcr
out
xor
mov
ret
mul
lret
enter
xchg
imulb
in
clc
aaa
divb
ret
loope
out
in
fdivr
mov
sti
mov
xchg
nop
shl
div
lret
idivb
div
cli
addl
fnstsw
rolb
mov
out
fcmovu
xor
cmc
hlt
shr
loopne
in
ss
hlt
fildl
out
mov
aam
shll
out
jmp
cld
sbb
stc
ret
test
std
out
call
xor
lock
call
rcr
into
in
cmp
lea
add
mov
mov
mov
jmp
rol
xlat
int
arpl
mov
push
mov
xor
jle
or
jle
xlat
jmp
xchg
fisttps
fsub
aam
fcmove
cld
cmp
cld
xlat
cmp
aam
addb
loope
int
jmp
clc
xlat
enter
shl
loopne
ret
rcr
repnz
hlt
loopne
incb
fiadds
ret
cmp
hlt
fdivrl
sarb
incl
int
dec
test
out
fstpt
xorl
ffreep
or
roll
lock
shl
in
sar
repz
icebp
fnstcw
fmuls
adc
orb
icebp
ror
out
cli
fdiv
rcl
repnz
fdivrp
cli
fiadds
sub
iret
in
cs
int3
int
lret
or
out
std
loopne
lret
into
xchg
cmc
in
ret
lds
out
cmp
jmp
fchs
out
hlt
idiv
aam
ds
out
mov
in
loop
enter
lret
out
cmp
sarl
test
in
jmp
int3
test
sti
mov
jmp
sti
ds
repz
aam
loope
aam
fsub
out
clc
fiadds
rcl
fcom
lock
int3
loopne
loop
cmp
jmp
out
loopne
cld
enter
faddl
xor
int3
sub
rcl
cmp
enter
sti
aam
jecxz
ret
fmul
ljmp
loop
rol
repz
shl
fadds
loop
in
cmp
loope
out
out
out
or
stc
shlb
cli
repz
aad
repnz
or
xchg
std
iret
xchg
decl
jecxz
sar
out
loop
roll
cmp
stc
xchg
fiaddl
in
ret
out
aam
std
hlt
repnz
jecxz
fcmovnb
jmp
fcmovnu
stc
loop
iret
test
jecxz
xor
add
add
enter
ret
xorb
pushf
shrb
jle
out
out
icebp
fdivs
sar
into
iret
addb
std
xlat
fsub
xor
shl
mov
idiv
loop
cmp
out
cmc
out
out
in
rorl
xchg
loop
repz
jmp
aas
aam
ss
cld
add
jmp
out
leave
test
xchg
cmc
leave
ss
call
aam
loop
xlat
cli
faddl
push
xchg
adcb
cmp
cmp
cmp
fmuls
jmp
xchg
out
out
cmc
fnstenv
std
push
jmp
ret
fsub
aad
stc
les
in
mov
in
loopne
iret
shlb
xor
ss
lret
sti
repz
roll
mov
xchg
fcmovbe
mov
mov
ror
out
lds
frndint
lock
xorb
lret
orl
jecxz
sub
in
repnz
iret
fdivp
loope
repz
std
incb
int3
addb
out
xor
neg
fst
jecxz
fcmovne
xlat
cmc
rol
in
lret
sbb
xchg
repz
mov
clc
fadd
leave
out
das
fptan
cld
aam
fsubrp
cld
div
aam
in
fcmovnu
repz
out
call
cmp
aad
cmp
adc
xchg
loop
hlt
xlat
in
fcmovb
xchg
jmp
in
shr
rcl
aad
into
ds
clc
lock
decb
sub
into
enter
ljmp
ss
enter
fdiv
in
rol
xlat
flds
ror
loope
ljmp
fdivr
leave
fdivr
out
incl
aas
incl
mov
in
loope
rcl
xor
ror
in
cmp
les
ret
stc
hlt
movl
shl
in
imul
rcl
sti
stc
clc
stc
fcomip
not
jecxz
mov
xor
jmp
leave
xchg
aaa
cmp
into
das
jle
or
jle
xchg
rol
fdivrp
lret
in
std
lock
repz
lret
stc
hlt
repnz
sarb
inc
in
mul
cmp
xchg
out
or
cmp
cmp
lock
leave
mov
lds
test
shlb
xor
into
cli
aas
std
aad
ret
cli
cld
cli
addl
xchg
xchg
int3
test
out
lret
ss
fiaddl
fcomip
loopne
lret
mov
inc
nop
ljmp
ret
in
cmp
std
in
std
sbb
xchg
fcomp
fscale
stc
mov
into
out
out
bnd
lock
cld
into
dec
aas
cmp
sarl
hlt
out
cli
call
aam
int3
int
int
sarl
bnd
leave
in
xchg
out
cmp
in
in
xor
test
cmp
fcomip
into
in
jecxz
aad
and
xchg
ljmp
mov
enter
cli
rcl
aaa
aam
aam
out
ds
cmc
fildl
lock
xor
into
fdiv
ljmp
cmp
std
neg
jmp
jmp
out
nop
int
lret
enter
iret
cmp
xor
sarl
cld
fsubr
loope
fcom
out
out
fmulp
ljmp
aam
sti
clc
fadds
in
out
imul
cmp
mov
out
loopne
int
mov
leave
sti
lret
xor
clc
cmp
out
cli
ret
out
fdivrp
mov
xchg
orb
fnstenv
cmp
testb
cmp
xchg
incb
xor
xor
xor
icebp
out
loopne
in
out
idiv
shr
aad
sti
out
mov
icebp
repnz
cmc
ret
ds
aad
cmp
fdivr
fisttps
xchg
lock
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
jecxz
ret
repz
xor
loopne
rol
ror
fmuls
aam
test
mov
xchg
ret
in
xor
faddl
mov
hlt
loopne
loop
loopne
loope
xchg
loop
lret
icebp
int3
xor
enter
fdivrl
rolb
test
cld
lret
mov
xlat
in
aaa
loope
imul
std
fptan
xor
faddl
icebp
test
sti
rcr
int
shr
out
stc
ljmp
repnz
stc
roll
fld
mov
loope
sti
in
jmp
das
aad
fdivr
sarl
fidivrs
into
cli
test
aad
loopne
fucomi
cmp
repnz
shr
not
aaa
xlat
cmp
sbb
loope
xchg
out
in
in
int3
jecxz
ljmp
stc
ljmp
xlat
cli
stc
aad
fiadds
repz
adcb
hlt
cmc
fsqrt
aas
fsubr
repnz
cld
clc
cli
int3
enter
mov
loop
xlat
neg
cmp
fistpll
rcl
aas
xchg
addb
lret
lea
sar
into
shr
cmp
fprem1
jecxz
ror
sti
roll
mov
int
jmp
aad
test
fdivr
icebp
sarb
cld
loope
aad
ret
xchg
decb
hlt
xchg
rol
cmp
xor
imul
out
fsubp
ljmp
cli
cmp
into
repnz
adcb
lock
std
div
loope
aad
aam
xlat
loopne
cld
xlat
in
loopne
test
divb
lret
sarl
sti
cld
lock
std
fisttpll
sbb
lret
nop
jmp
int
div
ror
aas
out
fmul
int
xor
fsubr
in
lret
call
hlt
out
loope
fidivl
xor
fdivrp
fstp
cmp
or
jmp
ret
enter
int
aas
icebp
jg
xor
mov
or
jle
int3
test
std
sar
fdivp
add
in
test
call
int3
aam
idiv
sarb
jecxz
sarb
loope
in
int
lret
in
jmp
ss
cld
lret
sub
loopne
std
repz
hlt
mov
ret
std
test
leave
mov
into
pop
xor
cmp
lret
div
aad
out
cmpb
out
leave
std
mov
ljmp
icebp
repz
clc
in
xor
lret
iret
ret
sar
mov
std
fmuls
repz
mov
cs
iret
clc
std
xor
sti
test
fcmovnb
jmp
in
in
out
cld
ffreep
repz
int
in
call
jmp
aad
repnz
mov
shl
in
addl
icebp
mul
leave
shl
fst
jmp
ds
sti
ret
fcmovb
test
jmp
fisttps
sub
fdivrl
shl
std
cld
xor
mov
sbb
ljmp
cs
flds
fdivrp
cli
clc
out
cld
xchg
mov
ror
orl
clc
aas
cmc
in
int
hlt
loope
mov
out
loop
fdivr
out
sub
shll
repz
enter
filds
in
xlat
stc
cld
icebp
shr
mov
out
xorb
ret
shl
leave
cmp
add
ret
loopne
out
movb
mov
leave
icebp
lret
repz
leave
ds
xor
loop
aad
hlt
loopne
fldl
in
rol
ret
aaa
in
hlt
clc
fcmovnbe
lock
fnstcw
add
rcl
stc
enter
jmp
sar
fsubr
ror
fcmovnbe
xor
ds
fdivr
cmp
fcmovu
fcomp
in
testb
mov
out
out
fcmovnbe
repz
clc
shr
fsubr
out
xlat
loope
repz
lret
out
lret
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
mov
jle
add
int3
loopne
rcr
xor
out
jmp
into
jmp
adc
cmp
jmp
ffreep
mov
adc
out
enter
aad
xor
out
cmp
hlt
int
fdiv
cmc
loop
addb
into
in
into
xchg
int
cmp
clc
shl
rorb
ret
mov
ljmp
in
cmp
leave
in
jmp
int3
clc
cmp
lock
xchg
in
in
clc
cli
std
in
cmc
in
jecxz
div
out
shr
cmp
fidivrs
xor
aas
lret
leave
fsubrp
loopne
std
into
fdivp
jmp
not
int3
xor
cmp
aas
cmpb
loop
mov
in
loope
ret
in
cld
cld
fucomi
out
fdecstp
aas
xlat
ror
xchg
cli
fists
lret
xchg
xchg
xor
ror
int
sarl
out
cmp
xor
jecxz
cld
loopne
repnz
lret
xchg
cld
mov
decl
call
loope
hlt
cli
rcl
cmc
std
loop
loopne
loop
shl
out
ljmp
cld
out
shl
inc
fsubp
ret
xchg
xchg
mov
ret
dec
rorl
int3
cmc
enter
fdivrp
shl
fsubr
out
lret
clc
jecxz
lret
ljmp
out
cmp
faddl
roll
inc
orl
movl
lock
xor
fstpt
in
lret
int
sbb
fiadds
int
jmp
sti
cmp
fsubrp
xchg
rcl
flds
xchg
loopne
in
in
out
cmc
icebp
fincstp
jmp
fdivrp
cmc
cld
rol
in
aad
sti
in
in
test
xlat
lock
fcomi
mov
das
loop
cmc
xlat
xor
ss
enter
imul
hlt
stc
cld
clc
leave
fld
jecxz
mov
sub
out
test
ljmp
mov
mov
mov
mov
pushl
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
clc
sar
in
add
ffree
in
loopne
adc
loop
out
das
loop
ror
cmp
clc
fidivrs
cmc
loopne
out
sti
fcomi
enter
testl
repnz
hlt
cld
call
lock
shl
test
addl
aad
leave
ror
out
xlat
jecxz
cmp
in
sti
fdivrp
mov
xor
ljmp
ret
std
lock
jmp
lret
call
lret
nop
xchg
aam
shl
leave
fdivl
lret
faddp
out
cli
icebp
xchg
cmp
jecxz
test
in
out
cmp
out
cld
hlt
aam
ljmp
aam
cli
loop
fcmove
sub
int3
xchg
xchg
fsubp
fbstp
clc
lret
cmp
enter
cmc
lret
cli
cmp
ret
fsub
in
out
test
sti
xchg
iret
out
loop
aam
ss
int
jmp
cmpl
in
xchg
add
fdivr
clc
int3
mov
rol
ss
int
out
call
fiaddl
rcr
fisttps
icebp
lock
clc
cld
iret
das
rcl
jmp
jecxz
out
icebp
rcr
sti
icebp
clc
xchg
loopne
in
icebp
in
cli
lock
ss
aas
and
lds
frstpm(287
decb
rcl
ljmp
int3
ds
cmc
out
in
lret
into
jmp
mov
out
out
int3
jecxz
fld
aaa
rcl
clc
cmp
fdivp
sub
cmc
lret
mov
jmp
jmp
shr
call
int
out
aas
repz
cli
fdiv
lock
cmp
out
div
mov
test
int
xchg
fists
repz
aaa
int
jmp
rol
cli
out
sub
xchg
out
and
jmp
stc
in
xor
fldlg2
ss
cld
cld
ret
std
cld
fldl
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
push
lcall
add
mov
mov
notb
cmc
jmp
xor
shl
fnstcw
cmp
fcom
rorl
cli
call
mov
xchg
ror
hlt
iret
out
into
cld
cmc
int
fsqrt
fdivr
out
cmp
call
iret
cmp
not
out
fnop
cli
cmp
in
aam
int
add
xlat
lret
xchg
loopne
cld
out
hlt
mov
fdivrs
iret
into
aaa
cmp
rol
incb
mul
mov
xchg
dec
out
test
cmp
in
xor
xlat
fcomi
cmp
mov
cmp
leave
jmp
mov
ret
hlt
out
cld
jmp
loop
shl
leave
call
int3
into
hlt
xchg
nop
idivb
ret
shrl
cmp
cmp
ret
jecxz
lds
jecxz
test
jecxz
sti
in
into
aam
roll
faddl
mov
in
std
hlt
xor
out
jmp
rcl
sti
test
call
lret
call
int3
icebp
aad
rcl
cmc
cld
stc
lret
lock
jecxz
sar
test
test
shr
aam
xor
hlt
call
cmc
cmp
cmp
in
addl
leave
call
hlt
in
in
lds
repnz
xor
cmp
enter
test
and
fdivp
das
loop
int3
in
repz
aad
out
lret
fnstsw
lds
addb
rcl
lret
xorl
ljmp
test
shl
mov
test
leave
fcmovb
xchg
jmp
cmp
ss
clc
cmc
fdiv
shr
aad
cmp
les
nop
mov
lock
out
xchg
mov
ss
cmp
lret
fadd
repnz
idiv
fcomi
mov
cmc
neg
loopne
lret
loop
mov
hlt
in
fsubr
aaa
repnz
int
in
ror
ds
ljmp
into
rorb
in
std
out
aad
aaa
ds
sti
clc
mul
ret
or
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
mov
jle
add
jmp
test
adc
mov
out
fmul
clc
stc
ljmp
hlt
fsubp
int3
jecxz
int3
mov
loop
int3
cmp
in
std
leave
jmp
fadd
out
aad
orb
fisttpll
xlat
ljmp
int
or
iret
loop
cld
loope
int
fsts
xor
enter
iret
jmp
sbb
int
hlt
xchg
out
fdiv
or
int3
mov
repz
sar
lret
rcl
fucomp
lock
sar
repz
flds
jmp
out
loop
cli
cmp
std
ds
xor
adc
in
mov
rolb
aaa
iret
out
enter
cmp
std
cld
in
ret
clc
neg
cmp
xchg
in
fucomp
xchg
iret
cs
sub
cmp
aaa
int
repnz
frndint
xlat
ds
jmp
xor
lret
shl
aad
enter
cmc
clc
lret
stc
lock
jecxz
in
fcmovne
xor
ljmp
stc
ret
icebp
hlt
test
fistpll
repnz
xchg
jecxz
mov
imul
repnz
not
cmp
fdivrs
rolb
xchg
jmp
mov
in
shll
aam
loop
repnz
out
add
fcmovu
in
mov
imull
hlt
in
lock
aas
cld
sub
cmc
sar
sub
xchg
lret
int
hlt
jmp
ds
int
repz
rolb
fsubr
in
out
xchg
adcb
ret
xor
icebp
aam
icebp
fsubr
cld
sar
fabs
mov
mov
subb
xor
lret
cmp
cmp
sar
shl
in
fcmovnu
aad
test
xchg
iret
int
faddl
fprem
cs
cmp
cld
xor
cmp
stc
iret
out
repnz
xor
icebp
leave
repnz
lret
loope
in
loop
std
les
inc
ja
add
test
add
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
and
adc
jle
cmp
jle
roll
fmulp
out
loope
loop
out
int
in
xor
aaa
stc
cli
std
fnstsw
test
cmc
xlat
in
clc
in
in
cmp
into
lret
aam
xlat
cmp
lret
fcmovnbe
out
sbb
std
repnz
loopne
jmp
out
fucomp
lock
jmp
cli
shr
in
aaa
lret
rcl
out
roll
hlt
les
out
into
fsubp
ret
hlt
xor
ss
lret
ds
fcmovu
in
xor
cmp
call
std
test
aad
fldln2
xlat
ds
ror
clc
cmp
fdivr
loopne
movl
iret
divl
loop
into
int3
sti
out
repnz
cld
in
fsub
and
hlt
fsubp
adc
rcl
mov
hlt
neg
stc
in
ljmp
repz
fdivrp
ds
in
neg
orb
jecxz
xor
xor
clc
int3
shl
lock
cmp
ffree
xchg
cmp
fucomp
out
mov
xchg
xor
ljmp
cmp
iret
xor
fiadds
mov
lea
cmp
hlt
ljmp
std
std
sar
shl
out
int3
fimull
loop
rcr
ljmp
jmp
fcmovne
aam
loope
in
lret
jmp
icebp
loop
loope
lret
enter
xor
xor
hlt
clc
std
cmp
cmp
clc
in
jecxz
call
int
jmp
jmp
xor
fldlg2
ljmp
call
loopne
cmc
sti
fdivr
out
sti
cld
int3
icebp
jmp
aam
rcl
aaa
xor
stc
into
cmc
cmp
clc
xlat
ds
cli
test
roll
repz
xchg
fsubp
lock
jmp
clc
jmp
cmc
inc
out
fiaddl
out
cld
fldl
repnz
xor
fcomp
out
leave
loope
repz
fdivrp
xlat
hlt
mov
jmp
aam
jecxz
ror
lret
out
fnstsw
xlat
int
int3
cmp
mov
in
mov
out
filds
iret
les
iret
enter
iret
loop
loop
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
in
jnp
into
sarb
add
sar
jmp
sti
mov
mov
in
out
loop
test
cmp
cmp
sti
cli
call
idiv
enter
xchg
fists
lret
iret
sti
ror
fstp
and
loop
cli
cmp
ret
in
rolb
xchg
xor
sti
repnz
loopne
xor
aad
aad
neg
stc
jmp
ror
jmp
out
hlt
aam
iret
faddl
shl
mul
ljmp
sub
int3
out
cs
in
clc
hlt
fucomp
cmpb
cmp
icebp
loopne
loopne
cli
cld
nop
out
icebp
out
ret
enter
loope
test
les
xlat
fldl
test
flds
cmc
shl
shlb
out
jmp
cmp
out
aam
jmp
fadds
mov
lock
fmul
lock
stc
faddp
in
fsqrt
loop
and
mov
shl
leave
repz
in
rcl
ror
fildl
add
aam
decl
lock
fsubrp
stc
ss
cs
cmp
loop
iret
out
fdivr
fcmovnu
int
out
mov
repnz
out
vpsubb
adc
into
cmp
rcr
ljmp
lret
ror
xor
das
clc
int3
aaa
cld
cmp
cmp
test
clc
addl
shl
mov
divl
xor
ljmp
idiv
fnstcw
fcmovnb
neg
addl
fimuls
sar
xor
fucomip
repnz
sarl
jmp
ret
sub
mov
xor
xor
in
fmul
clc
xor
std
repnz
out
clc
call
leave
mov
sti
in
in
mov
in
lret
dec
ljmp
inc
mov
decb
out
in
iret
aaa
out
aam
cmp
aad
fcmovnbe
test
xchg
jmp
xchg
std
int3
and
into
fdivr
iret
cmp
imul
sti
in
add
mov
jmp
ret
leave
lret
aad
flds
dec
daa
testb
jle
loopne
enter
xchg
leave
fldl
xchg
cmc
in
repnz
div
out
cmp
in
repnz
aad
fisttpll
int
fstl
out
cmc
enter
idivb
int3
fcmovnu
xlat
test
sti
out
orl
loope
cmp
aad
aad
ljmp
ror
shl
stc
in
out
xchg
das
in
xor
into
iret
iret
rcl
xlat
xlat
int
stc
sti
mov
out
xchg
loope
in
lret
in
ljmp
cmp
repz
mov
xchg
int
jecxz
icebp
iret
lret
loope
cmp
repz
jecxz
fdiv
icebp
loop
icebp
xor
cmp
call
repz
not
icebp
shl
xchg
xchg
fucomp
ljmp
out
into
leave
cmp
aam
rolb
sar
ret
sub
jecxz
xchg
xor
fcomi
std
std
shl
lret
lds
loop
in
fimuls
in
repnz
aad
aaa
cmp
leave
lret
ror
repnz
leave
repnz
imul
out
out
shl
out
adc
std
idiv
lret
in
cmc
loope
cmp
fdivrp
fldl
loope
lret
rcll
sub
cli
out
lret
shr
loope
iret
repnz
loope
testl
loopne
iret
shr
movl
test
jmp
clc
ljmp
jmp
in
std
lock
aaa
stc
aad
idiv
inc
inc
call
jmp
in
rcl
fucom
hlt
ret
divl
sar
into
fmulp
out
lret
in
idiv
rolb
fadds
xchg
mov
xor
out
int
jmp
out
rol
xlat
jmp
hlt
xchg
rcr
fucomp
orl
mov
cmp
cs
fst
out
lret
fiadds
in
test
lret
int3
lret
xor
lock
jmp
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
jecxz
in
mov
rolb
fimuls
in
loop
stc
shr
jmp
dec
mul
sti
clc
fsubp
in
mov
lret
iret
cld
xchg
cmc
out
loop
ret
cmp
das
std
repz
rcl
cld
les
int3
iret
leave
xchg
lret
xor
aad
aam
xor
cli
or
test
ret
dec
cli
out
enter
fisubrs
jecxz
jmp
lock
cmp
jmp
stc
repnz
xlat
aad
lret
mov
int3
aam
loope
int
int
call
cmp
sar
out
loopne
aas
std
ret
mov
loopne
flds
xor
das
in
xor
cli
ror
test
ret
xchg
leave
flds
fsubr
aam
lock
ss
leave
repz
idiv
fiaddl
leave
in
xchg
out
mov
rcl
xor
xor
iret
lock
lret
out
loope
lock
neg
leave
sti
jecxz
in
out
fimuls
xlat
hlt
lret
shr
sar
cmp
aad
aam
int3
or
loope
int
iret
enter
xor
cmp
enter
aad
shl
incb
mov
sti
shr
fdivr
icebp
aam
aam
flds
call
repnz
icebp
div
ljmp
cmc
sarl
xor
rcl
faddl
into
mov
call
int3
into
aad
sti
aas
in
clc
xor
fldl
ror
mov
repz
aaa
in
leave
call
fidivrl
cmc
cmc
fdivrl
aam
out
int3
in
fcomip
xor
out
ss
iret
cmc
cmp
out
fdivrs
shr
cld
fcmovnb
leave
xor
mov
int3
out
in
call
fiaddl
stc
fabs
sbb
ljmp
cmc
fld
lret
leave
shlb
loope
fcmovbe
test
idiv
mov
xchg
fcmovne
cmp
add
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
mov
and
cmp
jle
leave
fldl
ret
ffreep
lret
mov
and
call
ffree
out
enter
jmp
out
roll
in
mov
fucomip
addl
repnz
int
clc
loop
rcr
ror
loop
cmp
jecxz
xor
in
out
cmc
rcl
fdivrs
xlat
ret
mov
out
loop
vshufps
lret
sub
shl
xor
cmp
lock
ror
into
in
rol
in
leave
xchg
mov
nop
rcl
rcll
fxch
rcr
fdiv
cmp
xlat
aaa
out
sbb
cli
cmc
xchg
clc
mov
rol
aam
lock
divb
iret
cmp
cmp
clc
xor
xor
flds
mov
loope
cli
mov
sti
out
xchg
adc
into
repz
sar
add
sti
cmc
in
loope
cli
jmp
jmp
iret
cmp
cld
aam
std
into
loope
rol
cli
icebp
xlat
clc
fcom
leave
loopne
iret
shl
loopne
leave
xor
jmp
fucomi
cli
std
ljmp
lock
jmp
in
xlat
jmp
repnz
loop
xor
lret
xor
out
repz
repnz
fsqrt
enter
mov
jmp
xor
out
in
rol
cli
enter
ss
sti
jecxz
idiv
jecxz
xlat
ret
roll
loopne
mov
cmp
fcom
sarl
repnz
lret
xlat
clc
loopne
nop
orl
in
cmp
fptan
cmp
out
loope
sar
shl
sar
jmp
int3
mov
jecxz
lret
iret
not
std
aaa
repz
div
loop
fcomp
out
enter
mov
fadd
lock
sti
stc
fdivs
into
sar
mov
jmp
test
fst
xchg
in
lret
sti
shl
repnz
cmp
ret
cmp
test
lock
loop
in
out
in
ss
sarb
not
aam
mov
ret
rol
jmp
shl
call
into
repnz
repnz
jmp
enter
fcmovnbe
fcomp
insb
jae
fisubs
call
cmp
jle
cmp
mul
addl
ret
lret
in
out
lret
aad
sub
ljmp
in
int3
faddp
lock
repz
and
loopne
int
into
lock
aam
cmp
in
icebp
out
ret
xchg
leave
cmc
loop
iret
int3
cld
or
xor
stc
rcl
xor
call
rcl
fimull
std
mov
out
in
out
rcr
sti
out
jmp
fsqrt
loopne
xchg
enter
mov
loop
out
mov
fcom
lret
icebp
shl
stc
shr
out
out
xchg
rcl
mov
ret
mov
loope
fisttpl
jmp
ljmp
sarb
loop
test
hlt
fcmovnu
cld
jmp
jecxz
jmp
addl
jmp
std
fildl
lret
cld
imul
lock
jmp
div
cmp
shlb
fucomi
fmul
std
cmp
cmp
mov
out
rcll
xor
cmp
lret
into
stc
ljmp
rcr
xlat
loope
int3
out
mov
int
stc
rol
hlt
std
cmp
cmp
cmc
shl
std
cld
mov
stc
stc
testl
xor
sti
shll
ds
cld
rcr
xchg
lock
aam
stc
int
shl
int
and
in
xor
lret
jmp
push
repz
ret
f2xm1
jecxz
ljmp
out
jecxz
ror
enter
ljmp
repz
fcomp
fucom
in
jmp
cli
jmp
ss
sub
aas
rcr
xlat
in
loopne
shl
loop
cli
in
and
in
incl
ss
aam
cmc
xlat
iret
in
pushl
sar
fimull
mov
sti
icebp
mov
cmc
jmp
cli
int3
stc
jmp
lret
fildl
std
vpmaddwd
fiaddl
out
fucom
xchg
aam
xor
cmp
hlt
cmp
hlt
repnz
xlat
fstp
xchg
in
loop
sti
mov
loope
out
aam
call
ss
or
add
pop
jmp
aas
lret
ror
lahf
jmp
push
jbe
lret
jle
cmp
jle
cmp
ljmp
call
lea
xchg
test
out
ror
out
cmp
fsubr
out
shl
cmp
cmp
fst
flds
jmp
jmp
loopne
shl
ljmp
ljmp
sbb
cld
adc
mov
call
xor
cmp
cmc
aaa
cmp
ds
in
stc
or
shl
call
clc
xchg
loopne
in
in
repnz
out
xor
neg
repnz
cmp
sti
hlt
incb
ljmp
ljmp
rcl
lret
cmpb
test
repz
ffree
ret
in
in
mov
jmp
jecxz
aaa
in
fcmovne
hlt
cld
int
stc
cmpb
inc
div
mov
loope
jmp
int
mov
shl
stc
ss
fcomip
rolb
std
rcr
std
jecxz
nop
out
mov
xor
cmp
int
test
adc
fdivrp
fdivrp
lret
xchg
loope
ljmp
shl
clc
xor
cli
std
aas
cmc
les
ror
test
mov
int3
cld
lds
xor
ds
rcr
mov
jecxz
in
fldl
out
out
mov
aaa
shr
aaa
cmc
in
jmp
fyl2xp1
out
sbb
iret
fdiv
out
lea
ret
cmp
lock
out
test
loopne
in
out
sti
icebp
mov
xlat
xlat
imul
sti
sti
cmp
fcmovne
sti
xor
fcmovbe
addb
nop
std
test
lret
into
aad
cmp
shl
fcom
sarb
and
sti
out
repz
in
in
jmp
in
clc
xor
cmp
xchg
in
fcmovnb
mov
cli
in
cmc
xchg
jmp
cmp
xor
ror
loop
cmp
std
in
ret
sti
mov
out
and
in
mov
cs
sarl
int3
cmp
xor
lds
frstpm(287
cld
nop
leave
xchg
jmp
fdiv
in
pop
ret
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
ret
aam
int
into
lret
rcr
fsubp
in
mov
cld
mov
sti
fisttpl
repnz
aad
jmp
fst
loope
incl
std
fisttps
call
xor
out
hlt
div
repz
lock
ret
ds
std
std
xchg
shl
xor
cmp
aad
cli
aad
iret
call
shl
orb
fistl
int3
jmp
stc
int
shl
xlat
repnz
stc
in
sti
shl
int
int3
ret
jmp
shr
cmp
cmp
aam
cmp
xchg
call
in
out
aad
ret
aam
std
repnz
div
idiv
aas
aam
in
imul
mov
xchg
test
out
loopne
loop
lret
out
ljmp
ret
not
fprem
fstp
call
test
aaa
lret
shl
repnz
aad
in
loopne
stc
cmc
out
icebp
fldl2e
ljmp
nop
out
lret
sub
in
shr
repz
fcmovnu
int3
aad
fimuls
cli
in
xchg
mov
enter
fcmovbe
leave
repz
iret
lock
loop
mov
aas
orb
jmp
rol
cmp
lret
fnop
test
les
push
fiaddl
xchg
icebp
ror
int
loope
cli
rcr
out
cld
enter
sbb
std
filds
mov
cli
fcmovbe
sbb
loope
ror
cli
sti
fstp
neg
repz
fidivrs
aaa
in
idiv
fdivr
xlat
clc
jecxz
mov
fisttps
rcr
ss
ss
fcmovbe
fiadds
fadd
loopne
mov
into
decl
div
call
fcomi
int3
in
int
cmc
call
jmp
ljmp
jmp
sar
std
int
idivl
mov
rorl
shl
xchg
in
lea
in
cmp
aas
sub
out
fdivrp
ret
aad
in
fimuls
std
xchg
cmp
icebp
mov
and
or
jmp
ret
ret
rcl
aad
sbb
stc
add
jle
cmp
jle
shlb
bnd
lret
jecxz
and
ljmp
jmp
fiadds
in
rol
lock
fdivrs
icebp
idiv
std
iret
mov
int
mov
icebp
fbstp
ret
xor
cmp
std
in
neg
ret
fimuls
repz
mov
cmp
call
stc
ds
jmp
int
loope
sub
hlt
xchg
out
in
in
in
repz
loopne
sar
out
aas
enter
ret
in
mov
jecxz
repnz
hlt
aad
fcmovbe
xor
ror
loope
loop
ret
sti
mov
test
fcomi
ss
stc
xlat
jecxz
into
repz
sub
out
in
int3
sbb
mov
out
lret
stc
xor
in
fdivrs
fst
sti
mov
fimuls
jecxz
shl
cld
xor
cmp
loope
loopne
jecxz
xlat
in
jmp
loop
xor
jmp
ss
call
aad
cmp
orl
cmc
xor
das
jmp
lret
stc
ret
cmp
ljmp
lock
in
into
ror
aaa
cmp
fidivs
rolb
ds
fldl
out
mov
rcl
jmp
xchg
shll
out
sti
out
xor
mul
loop
rorl
in
lret
in
xchg
test
sti
aam
jmp
fcmovu
push
cmp
not
rcl
fmul
fdivr
cli
mov
int
out
das
cmp
hlt
idiv
ds
aam
cmp
addb
lea
test
ret
lock
loopne
std
clc
icebp
ret
loopne
add
filds
jecxz
repz
stc
cld
xor
cmc
lret
int3
shl
test
std
fdivr
cli
lret
jecxz
loope
xchg
adcl
lds
shl
shlb
cmp
mov
incb
enter
in
rorl
add
in
jmp
lret
aad
int
ss
sarl
sbb
adc
jle
clc
shl
jmp
shlb
sti
test
filds
in
test
call
idivl
aad
cmp
fdivl
out
sbb
out
out
clc
jmp
aad
fildl
std
ljmp
repnz
call
ror
test
ror
lret
lret
out
ljmp
aam
hlt
rcr
loope
loopne
loopne
sub
clc
int
xor
mov
cmp
std
fcmovbe
in
in
loope
lock
std
testb
mov
iret
nop
out
sar
xor
in
xor
out
fstpt
repz
hlt
jmp
leave
shl
cld
mov
in
iret
sti
in
aad
icebp
fildl
aas
clc
in
mov
clc
jmp
xlat
mov
out
sti
fsubrp
fsubrp
loopne
ret
xor
addb
cmp
test
sbb
fcmovb
in
in
mov
xlat
xor
fcom
leave
fcomp
aas
cmc
rcr
cld
cmc
std
lret
mov
mov
mov
lret
into
out
out
call
out
cli
ffree
aam
repnz
fisttpll
mov
mov
xchg
mul
fcmovnu
iret
cli
in
fcomip
hlt
ds
fst
testl
mov
loope
rcl
mul
sti
not
aaa
lock
in
aam
jecxz
loope
loopne
lret
mov
hlt
jmp
loop
xor
fdivrp
cli
jmp
aaa
cli
xlat
enter
or
lret
call
aad
neg
xor
into
aad
sti
sti
adc
aam
filds
std
in
test
out
sub
cmc
hlt
jmp
repnz
roll
cmc
jecxz
int3
in
or
sub
xor
fidivs
fdivr
out
fdiv
and
cli
test
int
lret
sti
cmp
leave
leave
cmp
imul
into
fcmovnbe
repnz
loope
sub
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
stc
incl
jmp
mov
icebp
fcmovnu
fistpll
cld
loopne
std
in
cmp
cli
fucomip
icebp
sti
lret
repnz
out
xor
hlt
std
cmp
xor
cmpl
stc
sar
clc
jmp
jmp
in
loop
xor
in
jmp
cmp
ror
hlt
loope
les
and
mov
lret
adc
hlt
xor
cmp
sti
xor
cmc
loopne
sarb
roll
incl
roll
jecxz
xor
lock
xor
idiv
testl
fsubp
loope
ret
call
leave
cmp
std
shl
filds
in
iret
out
loopne
cld
icebp
jmp
jmp
test
not
roll
loope
aad
in
jmp
jmp
leave
xor
sarl
cmp
out
fdivp
sar
mul
cld
flds
xchg
icebp
loop
out
lret
enter
hlt
fcomi
out
in
rcr
lret
call
xchg
sub
out
aam
ss
into
xor
icebp
out
in
ds
sar
cli
jecxz
xlat
int3
hlt
xchg
loope
xor
int
clc
in
iret
xor
cmp
sti
jecxz
cld
loopne
in
loopne
fistl
enter
std
fldl
into
repnz
fdivrp
sub
loopne
fucom
das
ret
out
hlt
hlt
ds
ffree
shl
aad
call
sub
xchg
into
aad
out
leave
iret
addb
leave
idiv
xchg
xchg
lea
loope
leave
call
aad
shr
fcmovnbe
shl
rcr
aam
out
mov
out
aas
fsub
cmp
imul
xor
cmp
cmp
repz
fcomp
neg
ffree
mov
ffree
in
rorb
enter
mov
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
rolb
in
in
jle
adc
jle
icebp
cmp
adc
imul
cli
sar
aam
xchg
roll
lds
loop
iret
jmp
sar
fcmovb
faddl
fld
leave
out
loopne
xor
into
jecxz
div
repnz
lret
test
in
sarb
jecxz
or
orl
leave
sti
xor
fsubr
aaa
sarb
rcl
lock
ret
fildl
ret
int3
jmp
fidivl
fcom
loope
flds
mov
fyl2x
loop
mov
xor
das
div
ror
cmp
out
jmp
ret
clc
test
leave
mov
lret
fcos
cli
cli
xchg
repz
xor
out
in
int
ljmp
shl
cmp
in
aad
sti
neg
loopne
sbb
xchg
xor
cmp
cmp
cmp
ds
cmp
roll
xchg
loopne
shlb
xlat
xor
stc
in
hlt
out
iret
rcl
xlat
sar
mov
out
faddp
lret
sub
das
cmp
xor
std
clc
clc
loope
loop
ret
cmc
les
mov
in
shr
icebp
stc
lock
aam
sti
out
shl
out
ds
loope
cmp
test
jmp
in
xor
cmp
rol
test
cmp
loope
xchg
mov
out
in
clc
leave
fucomi
imul
cli
loop
in
fadds
ljmp
loope
xchg
cmc
lock
out
enter
neg
fmul
cli
fxch
loop
jmp
iret
std
jmp
fdiv
in
out
int3
int
enter
jmp
sti
cld
aad
cmpb
mov
mov
fcmovnu
orl
enter
in
std
hlt
jmp
shl
aam
in
hlt
fsub
mov
std
sbb
in
in
mov
out
xor
iret
fsubr
jmp
filds
repnz
aad
in
mov
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
jp
dec
neg
jle
adc
jle
sti
and
aam
repz
ss
xor
rcl
lock
shl
aam
stc
xchg
fcom
std
sbb
xchg
xchg
xchg
xchg
xor
stc
aaa
jmp
in
hlt
test
lock
inc
cld
ljmp
jmp
icebp
shrl
in
shl
clc
jmp
rol
cld
stc
aam
testl
repnz
enter
cli
call
aad
lock
ftst
jecxz
std
mov
in
shl
rcl
repnz
cld
out
cmp
repz
aam
in
cld
repnz
vpmulhw
in
sub
xchg
in
shll
aad
icebp
in
xor
fucom
fyl2xp1
shl
stc
mov
call
decb
bnd
std
rol
int
loopne
jmp
fcmovne
shl
sub
repnz
int3
repz
jecxz
iret
fldz
cmp
rcr
out
rcl
dec
ljmp
xchg
mov
out
enter
ljmp
cli
jecxz
add
fdivr
and
lret
in
shll
repz
std
idiv
enter
iret
cmp
ds
cmp
out
lea
fnstenv
lock
shr
imul
cli
aam
std
fldl
loopne
mov
xchg
iret
in
lock
cmp
cmp
cmp
shl
sti
add
hlt
out
pop
jmp
rorl
les
int3
lret
repz
roll
std
sub
in
call
lock
mov
lret
xlat
jmp
sti
cmp
mov
fucom
jmp
fsubr
aad
lret
ror
xor
lock
fsubr
lret
xor
stc
xlat
les
cmc
idiv
cmp
jecxz
rcl
incb
fmulp
in
mov
clc
enter
out
rcr
xlat
fimull
aam
inc
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
pop
mov
aad
fidivrl
adc
jle
out
fdivrl
repnz
jmp
loope
in
std
sbb
rcl
lock
jmp
into
repnz
fsub
movl
cli
call
shl
iret
lret
ret
in
enter
inc
rcr
repnz
loope
int3
in
mov
xor
jmp
dec
leave
iret
fcmovb
iret
div
addb
cld
in
ljmp
in
xor
fcmovnbe
ss
loopne
ret
loope
sti
repnz
ret
ds
out
call
hlt
lock
aam
int3
ret
hlt
test
test
cld
jmp
rcl
xchg
iret
mov
ret
xor
leave
fucomip
ds
orb
in
sti
fsubp
int
repz
ljmp
cmp
lret
out
cmp
cld
rcl
xabort
in
xchg
cli
in
std
mov
aad
in
fdivr
cmp
lret
fxam
jecxz
loop
ljmp
fdivr
mov
loope
call
cli
ds
fcmovne
div
cli
fstpt
rol
call
test
call
enter
fchs
call
ss
icebp
out
jmp
clc
call
ffreep
shl
int3
ror
xor
int3
iret
lock
rol
shl
jecxz
in
enter
fildl
shll
in
aaa
clc
loop
stc
sti
test
jmp
aad
xchg
test
xor
aaa
xor
ss
rcr
shl
icebp
cmc
xlat
neg
out
in
out
aam
aam
in
not
hlt
in
jmp
ds
cmp
imul
rcr
aad
incl
mov
stc
addb
xor
leave
sarl
jmp
cmp
test
and
fadd
in
xchg
loop
mov
adcl
enter
clc
xor
aam
repz
fucomi
mov
int3
xor
decl
mov
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
jl
vaesenc
adc
jle
aad
aaa
mov
aaa
call
stc
cmp
iret
ret
cld
aas
clc
cmp
int
nop
iret
iret
lock
ret
out
leave
cli
clc
fxch
jmp
aad
ds
roll
mul
fsub
in
jmp
fucomip
fidivl
ljmp
cmc
neg
aad
neg
xlat
repz
xchg
mov
loopne
iret
cmp
xlat
out
fidivrl
cmp
cmc
into
rcl
flds
cld
loop
into
fmull
out
fdiv
out
out
out
fidivrl
not
aad
addl
out
test
jecxz
lret
in
out
fmul
fdiv
int
cmc
cmp
lock
test
loop
ds
cli
cmc
nop
xchg
lock
mov
xor
xor
imul
fcmovnbe
fcmovnbe
cmp
rcr
repz
ret
cli
cld
fdivp
lret
add
mov
out
jmp
leave
rcl
cmp
cmp
notrack
stc
jmp
loop
loop
cld
nop
xchg
in
sarl
cmp
fnstcw
cmp
fdiv
in
roll
ljmp
cmc
into
out
enter
jmp
lret
rcr
cmp
in
fimull
xlat
lret
sti
or
mov
shl
jmp
shrb
in
cmpl
std
faddl
flds
repnz
out
jmp
hlt
int3
xlat
xlat
fdivrp
ljmp
call
lret
fdiv
icebp
repnz
jecxz
repnz
xor
out
out
ret
aas
sar
leave
loopne
mov
call
mov
lret
out
aad
lret
xor
cmp
stc
lock
loop
fcmovnb
loope
call
call
fcomi
lock
xor
aad
shl
stc
out
jmp
into
lret
adcl
leave
out
jmp
incl
in
mov
out
loope
test
in
not
out
cs
aam
cmp
out
in
rol
jecxz
cmp
movl
jb
dec
jmp
aam
fadd
fstp
pusha
shl
push
dec
xchg
xchg
mov
jle
adc
jle
out
addb
xchg
push
xor
in
jmp
lret
lret
clc
ret
fcmovne
shl
mov
cld
xchg
test
xor
in
aaa
cmp
enter
in
int
cmp
icebp
cld
enter
test
loopne
mov
loop
out
icebp
fnstcw
fstpt
iret
lret
test
fdivr
in
ret
out
into
int3
int3
jmp
shl
loop
fcom
repz
std
xor
ljmp
clc
std
test
in
mov
lret
rclb
aam
cmp
cld
std
fsubr
sub
xlat
add
xlat
xlat
shl
sub
loop
int
jecxz
ret
repnz
lret
stc
clc
hlt
shl
rcl
in
shl
aad
les
mov
xchg
cmc
xor
icebp
call
icebp
out
aas
repnz
repz
cmc
clc
mov
fmull
loopne
shr
call
in
xor
div
aad
iret
in
mov
enter
in
decb
iret
lock
out
out
lret
repnz
cmp
sti
in
sbb
fimull
ljmp
leave
lret
jmp
testl
fcomi
dec
xchg
call
sub
aam
shr
out
lret
fst
repnz
cmp
rcr
xlat
mul
testl
out
xor
call
repz
fadds
sti
call
out
icebp
shlb
ss
fucomi
xor
fld
clc
rol
mov
mov
xlat
cld
call
jmp
sub
shl
cmp
cmp
int
sbb
fdivr
fmull
rorb
out
aad
out
call
in
repz
les
cmp
out
xchg
jmp
into
int3
enter
cli
clc
into
ss
out
sti
out
cld
lds
xchg
shll
in
mov
sbbl
mov
addl
jmp
fcomp
fistps
je
or
loopne
jle
add
xor
out
sbb
flds
filds
mov
loope
sti
leave
into
xchg
fucomip
ss
fcmovnbe
aad
in
div
in
cmp
addl
popl
test
cli
fprem
cmp
into
ljmp
fdivrl
xchg
mov
xchg
lret
out
xor
fdiv
hlt
in
xlat
xor
jmp
into
shl
loopne
call
xchg
lret
test
test
loop
xchg
mov
loope
aaa
cli
fdivrl
cmp
xlat
rcr
loop
lock
cmc
mov
sti
fucomi
ljmp
in
repnz
aad
int3
repnz
mov
fsub
hlt
cmc
cld
cli
cli
jecxz
ror
in
mov
ss
sub
int
fcmovb
adc
jecxz
repz
mov
aad
fimuls
rcr
in
xchg
ljmp
xor
lret
cmp
sarl
stc
call
aam
lds
loope
mov
fildll
in
std
cmp
cmp
loop
repz
xchg
out
jecxz
fistl
out
das
vshufps
fdiv
shl
icebp
aad
roll
in
fiadds
lock
ffreep
loope
in
fcomp
enter
and
repz
in
out
xor
in
loope
shll
cmp
cmp
repnz
repz
roll
addb
in
test
iret
lret
aam
repz
jmp
out
xor
fcmovnb
fld
rcl
xlat
imul
mov
in
sar
mov
xor
icebp
aas
aam
out
sarb
jecxz
call
mov
sub
notb
xlat
out
into
cmp
shr
sti
rorb
addl
xor
in
rol
shr
in
idiv
lret
in
shl
test
in
adc
xchg
out
in
repnz
xchg
rol
leave
sti
not
repnz
fcmovnbe
out
repz
test
xchg
in
cmp
roll
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
or
loop
jle
add
enter
repnz
cmc
sar
cmp
idivb
loopne
xlat
imul
in
into
iret
stc
enter
hlt
test
loopne
icebp
int3
cld
neg
lret
aam
lret
rcr
stc
roll
cli
lret
shr
shr
jmp
cmc
repnz
shr
loopne
cmp
sti
cld
rcr
enter
fsub
iret
in
jmp
lock
in
enter
fcom
std
hlt
cmp
fmulp
lock
test
lret
test
jmp
out
test
shlb
divb
rcl
aaa
shl
cmpb
jmp
out
mov
ljmp
int
into
out
lock
clc
fld
sar
std
loop
cli
out
in
mov
in
mov
repnz
in
into
fdiv
in
fcomi
rcl
aas
fcomp
cmpb
dec
rol
nop
jmp
iret
lock
clc
int3
aaa
idivb
idiv
out
xlat
out
call
out
enter
loopne
call
int3
shlb
fstpt
ljmp
aam
test
lret
or
mov
rol
cmc
xor
repnz
cli
in
cmp
cmp
aam
out
loope
cli
fcmovnu
out
lret
in
std
cmp
lret
shr
icebp
ds
in
loope
sti
addl
in
loope
into
les
test
lret
xor
cmp
ror
out
flds
cli
fcomp
xchg
out
iret
cld
cmc
lock
fld
hlt
aaa
aam
xor
cmp
lock
in
fildl
mov
nop
incb
xor
aaa
leave
testl
mov
loopne
jmp
iret
lret
sar
enter
jmp
loop
idiv
out
mov
loopne
cli
addl
into
in
shrb
repz
out
enter
cli
sub
ds
cld
cmc
std
loope
fiadds
mov
idivb
out
aaa
hlt
je
adc
jmp
int3
rol
aad
pop
pop
movsb
or
mov
imul
jle
ds
test
test
and
out
cmp
xchg
loope
icebp
out
out
aam
fcomip
stc
out
jmp
jecxz
sti
test
lret
repnz
xchg
enter
enter
into
cmp
int
fsubrp
incl
lds
mov
fucomp
xchg
jmp
ss
into
ljmp
fldl
std
mov
xchg
int3
in
int
xor
fucomp
out
idivl
hlt
rcl
fsubr
loope
enter
sti
xlat
loope
jmp
cs
in
lret
out
fdivrl
cld
shl
rorb
in
in
fiadds
in
jmp
cmc
xlat
in
clc
rcr
xchg
loope
loopne
frndint
nop
loope
loopne
ror
xor
fmul
icebp
leave
out
sti
loopne,pt
hlt
div
xchg
in
mov
fildl
xchg
fucomip
loop
neg
fcomi
cmp
ss
aam
cmc
aam
cmp
call
in
enter
lret
or
out
out
xlat
lret
aad
repnz
xlat
ds
jecxz
test
xchg
fucomi
stc
xchg
iret
in
out
jmp
out
cmp
cmp
lret
iret
sti
cmp
mov
hlt
mov
out
cmp
lret
shr
nop
test
hlt
idiv
rcr
cli
lret
repz
lds
fdivrp
loop
loopne
mov
in
lock
lret
fnstcw
fdivrp
leave
cmp
sti
rol
rol
fsub
fadds
fsubp
test
addb
xor
cmc
xor
cmp
cmp
call
out
jecxz
xchg
xchg
in
hlt
enter
loope
fdivrl
call
lret
out
out
in
sub
das
int3
in
cmp
aam
adc
aam
cmc
addl
out
rcl
xchg
aad
sti
sti
call
ds
idivb
aad
mov
out
repnz
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
fwait
loopne
out
jle
add
fsubp
lret
repnz
fdiv
aad
rolb
out
cmp
mov
xchg
sbb
fucom
lock
jmp
fmulp
fmul
cld
adc
fincstp
cmc
jmp
vpaddsb
rcr
mov
sub
jmp
xor
repnz
cmp
iret
imul
ret
sti
enter
mov
std
xchg
mov
cmp
enter
fxch
ret
test
addl
iret
xchg
or
lock
ljmp
loope
lock
fsubrp
clc
aad
sbb
jmp
into
jecxz
clc
in
in
fcom
cmp
cmp
stc
hlt
ret
repnz
in
cld
jecxz
sti
cld
mov
nop
fdivrp
jmp
jecxz
in
cmp
aaa
in
cmp
aas
flds
filds
fxch
in
fsub
out
int
cmp
aad
cmp
imul
aam
out
lret
in
cmp
rclb
clc
clc
cli
ljmp
in
clc
loopne
sti
test
shr
ljmp
into
in
leave
cmp
loopne
fadd
stc
cmc
add
testl
std
adcb
cmp
xor
sti
add
jmp
jmp
out
fucom
test
out
in
xchg
imull
stc
xor
cmp
out
sarb
stc
fcmovnb
out
test
xlat
clc
ftst
ljmp
aad
cld
in
sti
aad
sbb
adc
fucomi
sti
in
int
idivb
clc
rcl
ror
aad
clc
loopne
shl
ret
rcr
mov
std
sti
addl
xor
int3
lret
loopne
out
cld
stc
test
faddp
call
sbb
in
mov
pushl
ljmp
leave
leave
repz
in
test
leave
jmp
in
loop
stc
lret
repnz
ret
icebp
shl
lock
shr
fsub
ret
xor
mov
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
add
xor
jmp
jle
cmc
ljmp
sub
xchg
in
in
jmp
ret
out
icebp
sti
into
cmp
aaa
out
fcmovnb
aad
call
into
jecxz
jmp
out
ljmp
aad
fst
cld
fdivr
flds
in
xor
jmp
cld
aas
jmp
fcomip
addb
int3
cld
cli
iret
stc
int3
int3
loop
rorl
out
in
cmp
in
lret
iret
rolb
movb
fucompp
xchg
repnz
in
idivl
in
addb
dec
test
mov
out
into
hlt
xorl
stc
repnz
ror
fcmovne
cli
fsubr
fcmove
cmc
fdivr
std
roll
into
enter
lock
in
shl
icebp
fdivrl
jmp
ret
mul
leave
rol
jmp
cli
rcr
rcl
lret
ret
iret
in
repz
shl
int
iret
fneni(8087
filds
vpmaxub
nop
leave
xchg
lret
aam
fmul
enter
cmp
stc
cmp
filds
call
xor
call
cmp
xor
lret
repz
aas
loope
test
fld
sti
fnsetpm(287
enter
repz
loope
xor
jmp
rcl
call
test
lret
lret
lea
xor
out
in
in
ds
int
iret
stc
loope
cmp
out
in
mov
test
ljmp
cli
cld
cmp
aam
fscale
iret
shl
xlat
jecxz
in
mov
add
loopne
test
in
sub
repnz
faddp
stc
cld
decl
lock
and
out
cmc
rol
aam
in
fdivr
cmc
iret
xor
rol
loop
lret
lock
xchg
shr
rcl
ret
int
cmp
out
cmp
cld
fadd
repz
hlt
sub
fmulp
int
std
int
out
mov
movzwl
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
mov
or
adc
jle
call
iret
loope
cld
shl
test
ret
ljmp
cld
incl
vpmaxub
sar
shl
mov
std
rcr
in
in
jmp
loopne
jecxz
call
repz
rolb
cmc
loop
in
lret
mov
lock
repz
ss
cmp
roll
fdiv
loopne
in
in
xchg
int3
out
xchg
ret
jecxz
call
roll
aas
clc
cld
ffreep
out
in
std
xchg
jmp
clc
xor
add
adc
icebp
loopne
cmc
clc
mov
fimuls
jecxz
out
int3
leave
out
sti
fcmovbe
jmp
jecxz
out
fcmovne
testb
fmulp
loop
and
int
in
cmc
aad
cmp
fistpll
cmp
std
neg
fstp
cld
sbb
cld
std
call
iret
xchg
xor
aaa
repz
lret
lret
shr
cli
in
loopne
les
imul
cld
jmp
in
cld
xchg
into
rol
lds
ljmp
fnstsw
sbb
shr
loopne
mov
xchg
iret
loop
repnz
ss
lock
enter
iret
sbb
into
out
repz
call
test
xor
ret
in
in
aam
leave
lret
sar
lock
sar
out
jmp
xchg
in
nop
jmp
jmp
out
aam
out
incl
fistl
sub
cmp
cli
idivb
aaa
aad
fdiv
loope
hlt
fcmovu
fadds
jecxz
mov
loopne
repz
cld
fcomip
std
aad
addl
testl
xor
repnz
repnz
sti
in
out
int3
rcl
in
fmull
mov
clc
out
rolb
ret
fmul
cmp
cmp
fidivrs
out
icebp
ds
fcmovb
ffree
aam
ljmp
cmp
add
aam
aad
fstp
movsb
ficomps
xlat
xor
add
jmp
in
test
sarb
xor
vpminub
lret
jmp
lds
out
mov
int3
movl
xor
rol
sti
cmp
lret
fadds
ret
repnz
clc
lea
hlt
cli
iret
ljmp
loope
cmp
shl
repnz
lret
cli
loope
enter
xchg
in
idiv
neg
cmp
call
fdiv
rcr
int3
cmp
inc
xchg
clc
idiv
xchg
cmc
jmp
lret
cmp
fiaddl
aad
cmpl
test
jmp
in
repnz
int
in
xor
jmp
cmp
sar
mov
rorl
std
or
lds
stc
out
aas
int
ret
in
loop
in
add
lock
loopne
xchg
mov
cmc
clc
aad
cs
loopne
clc
aam
sti
std
clc
test
test
cmc
out
repz
out
lret
neg
leave
cmp
std
xor
fprem1
out
or
leave
decb
xor
out
lret
cmc
cmp
jmp
fsubp
xchg
cmp
mov
jecxz
cmc
xchg
fsubrp
fsubr
ss
aam
aam
in
xor
iret
ror
mov
ret
mov
cld
icebp
int3
mov
mov
in
lret
idivl
cli
cmp
aas
imul
int
sbb
leave
test
movl
test
fiadds
ret
loopne
test
repz
in
nop
xchg
leave
loope
lret
cmc
loopne
cmc
xor
aad
out
filds
cmp
xchg
call
fsubrp
mov
aad
int
aam
shl
cmp
clc
loope
xor
fcomp
mov
mov
iret
lock
fdivs
stc
hlt
adc
out
les
sbb
lock
test
aam
shr
shr
in
lret
hlt
jmp
ret
lret
enter
int
cltd
movsb
imul
mov
fiadds
out
jle
adc
jle
xlat
aad
in
cld
loope
flds
mov
in
leave
mov
out
xchg
xlat
mov
sti
aad
cmp
cmp
test
xlat
rol
cld
jmp
fxam
int
mov
call
cmp
int3
icebp
repnz
fcomip
mov
in
jmp
int
int
lret
out
cmc
cmp
sub
rcr
std
int3
sub
std
cmp
mov
cmc
test
hlt
cmc
xchg
xlat
neg
leave
fcomi
rcl
lret
sub
out
aam
xlat
xor
testb
xchg
mov
xlat
fxtract
lock
ss
cmp
ds
iret
bnd
cld
xor
icebp
iret
out
in
iret
cmp
xor
ret
int
repnz
sarl
mov
xchg
int
enter
xor
aam
shr
aam
adc
sar
enter
incl
lret
cs
out
xlat
icebp
aam
enter
test
fabs
rcr
decb
jecxz
fsubp
loopne
in
in
fcmovnu
in
clc
std
fcomip
fdivrs
movl
test
xchg
in
xor
sti
cld
clc
cmp
clc
in
faddl
fisttpll
test
lock
jmp
rcr
cmp
adc
sbb
leave
sti
stc
leave
in
cmp
in
lret
in
out
aam
jmp
rolb
xlat
mov
stc
fmul
xchg
roll
clc
std
out
ss
loope
fnstsw
jecxz
loope
mov
fldz
call
int3
aam
ffreep
loop
lock
lds
repnz
ds
lret
ljmp
xchg
mov
fsub
in
aaa
jmp
xor
cmp
std
sarb
xlat
addb
fdivp
shl
ret
ljmp
lret
rolb
fadd
and
lret
in
inc
jmp
iret
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
into
xchg
repnz
hlt
ret
shr
ljmp
loope
cld
rcl
in
test
cli
fsubr
mov
clc
out
jmp
cmp
int
addl
mov
int
fld
cmc
xor
repz
cld
div
int3
ret
into
fcmovne
orb
xchg
std
test
shl
lock
divl
fdivrl
jmp
icebp
jmp
test
into
mov
mov
in
loope
loop
lock
leave
shlb
lds
enter
loopne
loopne
cmp
cmp
in
jecxz
icebp
cld
ffreep
loop
jmp
sarb
jmp
aam
sti
lock
sar
clc
jecxz
call
lret
adc
repz
out
fsincos
fcmovnbe
incb
xlat
out
mul
ret
aad
jecxz
jmp
incl
call
int
ss
cmp
fst
lds
mov
ljmp
xchg
int3
hlt
xor
cli
neg
xor
test
lds
aam
lea
std
fsubrp
out
in
cmc
aas
sti
cmp
shl
test
in
out
int
xchg
in
ffreep
sub
repz
repnz
hlt
out
aas
cmpl
cmp
jecxz
repz
test
fisttpll
jmp
cs
cld
call
roll
xlat
movl
into
fdivs
ret
fdiv
repz
out
out
aaa
out
xor
out
int3
out
sti
lret
repnz
call
in
fdivrl
clc
cmc
div
loope
ljmp
icebp
std
repz
clc
in
cmp
xor
icebp
shl
out
ffreep
loop
stc
ret
repz
imul
cld
test
out
iret
out
aas
out
icebp
div
cmc
xlat
out
lret
aas
hlt
fsub
aas
ret
mov
fsubr
ret
jmp
lret
iret
xor
aam
ret
and
rorb
test
sub
add
int3
into
fmul
fsubrl
in
jecxz
mov
repz
adc
jle
aam
ljmp
loopne
leave
jecxz
mov
iret
sub
out
aam
xlat
lret
loop
ret
fsub
icebp
roll
nop
out
icebp
loope
mov
xor
iret
in
out
fmul
ret
loopne
loop
aas
test
cld
fiaddl
xchg
cld
out
in
lock
cld
repnz
cld
cmp
mov
and
leave
jmp
sti
ljmp
repz
cmp
ffreep
ljmp
rol
aad
test
fsubr
out
test
in
in
mul
xor
int3
stc
stc
lret
jmp
lret
lret
rol
repz
fld1
lret
in
orb
jmp
cmc
hlt
ljmp
stc
into
xchg
mov
xchg
lret
aam
jecxz
repz
enter
hlt
in
shl
test
icebp
jmp
aam
cli
lock
out
xchg
sub
icebp
aad
xor
int
sti
sar
hlt
cli
fiaddl
mov
decb
lock
rcr
in
hlt
rcl
stc
int
cli
incl
test
jmp
fisttpll
lret
xor
stc
iret
cmp
cmc
xlat
cmp
hlt
ret
sar
mov
fucomp
addb
repz
shl
aad
enter
fiaddl
fdiv
ret
testl
repz
iret
fcmovbe
iret
hlt
cmc
iret
fst
out
loope
out
clc
add
iret
test
icebp
call
ret
int3
in
out
ljmp
incl
cli
mov
out
cmp
ret
cmc
xor
lret
enter
aam
loop
cli
cmp
cld
fcomip
jmp
ljmp
jmp
sbb
cmc
call
fndisi(8087
cli
mov
cmp
lock
in
shr
cli
xor
repnz
mov
lret
mov
int3
hlt
jmp
jecxz
pop
jmp
ret
ror
aam
mov
iret
aaa
xor
jle
test
das
sti
dec
out
repz
sti
ret
cli
in
loopne
mov
fsubp
out
fmul
in
rcl
cmp
in
shl
jmp
not
out
cli
cmpb
xchg
rcr
in
xchg
ret
cmp
leave
fstpt
ss
fildl
sti
mov
idiv
fsubp
out
int
std
icebp
hlt
rcr
jecxz
int
int3
sar
icebp
cmc
hlt
fld
neg
hlt
aad
in
cld
mov
xor
out
ror
std
iret
std
aam
and
sub
test
lret
mul
int3
nop
iret
out
lret
int
out
ror
lret
lock
cmp
cmp
movb
cld
and
rclb
icebp
xor
hlt
cmp
cmp
cmp
test
mov
out
out
ror
mov
repz
hlt
cmc
fcmovne
loopne
jecxz
addb
rolb
ljmp
xor
repnz
lret
adc
cmc
test
fcmovne
lret
ljmp
out
enter
iret
cmp
jecxz
rcl
leave
out
sbb
test
icebp
jmp
int3
jmp
cmp
testb
add
roll
ret
jmp
out
jmp
out
iret
lret
loopne
in
xlat
jmp
les
sti
sar
xchg
stc
xor
cmp
enter
in
in
cmp
filds
mov
xchg
repnz
repnz
lret
repz
std
into
ror
fcmovnb
hlt
xrelease
in
out
icebp
ljmp
hlt
in
cmp
std
cli
imul
xor
aad
mov
cmp
roll
jecxz
in
fdivrp
cmp
cli
div
loop
enter
mov
lret
jmp
xchg
icebp
icebp
cs
fldcw
hlt
ds
cld
cmc
in
xchg
or
mov
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
enter
mov
aad
leave
cmp
aad
aaa
sti
loopne
test
shl
call
lock
xor
xor
xlat
cld
std
stc
fcmovne
int
fcomp
stc
cld
aam
cld
fcmovnu
jmp
jmp
ljmp
iret
out
test
xor
in
rcl
add
enter
stc
out
decl
iret
lret
out
lock
hlt
std
xor
out
test
fucomp
mov
lret
lret
int3
mov
std
out
jmp
leave
cmc
leave
lret
out
sar
jecxz
bnd
mov
leave
lds
ret
fcomi
ds
cmp
fld
iret
ret
std
aas
cli
cmp
mov
mov
call
cmp
call
int
loope
repz
mov
icebp
xchg
int
cli
int
idivl
fsubp
inc
lret
loope
in
int
in
jecxz
mov
in
into
aas
cmp
idivl
ds
xchg
testb
loop
jmp
fsubrp
jmp
int
fucomi
sti
in
into
int
test
ret
addb
sti
std
lret
shr
repnz
iret
cmp
ds
aad
loope
xlat
ret
leave
sti
in
fisttpl
out
movb
aad
lret
aad
sar
in
sti
test
shl
cmc
sti
test
cld
jmp
mov
in
hlt
sti
cmp
in
sti
cmp
out
cli
loope
hlt
idiv
cmp
call
mov
xor
leave
xor
xor
sbb
sti
icebp
call
clc
std
out
repnz
xor
rcr
stc
ds
jecxz
cmp
cmc
rol
cmc
xchg
jecxz
jecxz
iret
out
xchg
out
in
into
lret
clc
lret
ds
in
hlt
mov
flds
mov
jmp
int3
lret
aam
xor
add
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
add
out
aad
aam
aaa
xor
cld
fadd
lret
in
decb
call
xor
leave
neg
lret
cld
int
icebp
fmull
out
leave
stc
cld
iret
test
xchg
iret
lret
cmp
cli
lret
cli
aad
int
rorb
mul
iret
add
shll
in
ss
icebp
in
sti
cmp
in
cmp
loop
fld
mov
out
mov
fucomip
aam
loop
das
cmp
cmp
std
fnstsw
in
lock
rcl
jmp
shl
cld
repnz
xchg
xlat
in
in
jmp
cmp
aas
icebp
xlat
icebp
cmp
sti
cmpb
loopne
lret
leave
loope
jmp
ss
xor
int3
xlat
sarl
fildl
test
cmp
in
ljmp
ret
xor
cmp
clc
xchg
fsin
ljmp
fnsetpm(287
in
inc
sub
loop
aam
sar
loopne
in
hlt
sti
test
test
jmp
addb
enter
jmp
divb
sti
aad
rcr
sti
fsubp
cld
cmc
test
ljmp
shl
cs
aam
ljmp
ds
rorl
decl
jmp
into
icebp
ret
out
out
in
clc
lret
cmp
clc
icebp
jmp
filds
mov
fld
xor
cmp
cmp
add
fneni(8087
fsub
jmp
in
xchg
test
jecxz
loop
adcb
out
ss
loopne
int
fld
mov
fiadds
lock
leave
xchg
mov
cmc
out
sub
fadd
stc
jmp
cli
test
testl
loope
loope
loope
inc
idivb
shr
leave
repz
hlt
jecxz,pt
aas
cmp
call
mov
loopne
call
cmc
jecxz
out
out
xor
cmp
sbb
adc
aam
clc
loope
xchg
out
xchg
or
sub
add
ret
iret
enter
int
xchg
cmpsb
push
ja
sbb
xchg
mov
add
fmul
test
cmc
shl
aam
ss
lret
inc
in
not
testl
rorb
in
out
aaa
rcl
lret
out
ljmp
iret
mov
xchg
ret
mov
in
loope
shr
addl
iret
loopne
div
into
flds
clc
jmp
shl
call
cld
aaa
cmp
sti
cld
fildl
out
in
stc
leave
jecxz
repnz
shll
leave
in
cmc
imul
fst
ss
fadds
mov
jmp
jmp
in
fprem1
in
cmp
imul
loopne
clc
jecxz
aad
fdiv
sti
int3
mov
loop
vpmacssdql
rol
int
rol
xor
lret
cmp
hlt
test
fcom
in
ret
jmp
mov
mov
mov
aam
aaa
idivl
cmc
std
xor
rcl
test
xlat
loop
xchg
call
int3
xchg
ror
repnz
lret
cmp
lock
and
loop
call
mov
xor
int
mov
ljmp
cmp
hlt
fadds
enter
out
int
in
fldl2e
jmp
lock
repnz
jmp
lea
jmp
hlt
stc
lret
cmp
test
icebp
ret
out
call
ds
test
repnz
fst
out
xor
cmp
leave
std
neg
jmp
lock
xor
in
fadd
movl
jmp
loop
clc
clc
in
repnz
fstp
shl
aam
ret
rcl
xchg
jmp
xchg
ljmp
cmp
stc
jmp
hlt
aas
int
hlt
fucom
in
rol
mov
jmp
fcos
cli
stc
hlt
icebp
test
hlt
rcr
fildl
ret
decl
lret
iret
in
xlat
das
lret
int
adc
inc
add
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
cmp
rcl
dec
jmp
fisttpl
rorb
cli
test
test
add
mov
out
loopne
xchg
out
int3
xchg
sub
test
cmp
cld
adc
shl
mov
cli
sti
out
std
int
mov
lock
cmp
int
out
sbb
cmp
fcmovnb
call
out
fdivr
fdivrp
dec
repnz
xor
repz
cmp
cmp
filds
shl
in
in
fcmovnu
orb
out
repz
icebp
cmp
rorb
in
sbb
in
aam
xor
clc
sarl
addb
lock
nop
fdiv
sub
ret
rcr
hlt
neg
imul
xor
lds
jecxz
xchg
int
lret
xchg
cmc
das
shl
call
ds
fdivr
fdivrp
ds
repnz
loopne
clc
loopne
out
ror
iret
xor
loop
in
hlt
neg
xlat
cmp
lds
movl
out
fbstp
xlat
out
aam
cld
loope
idiv
loope
sti
fcmovne
out
iret
nop
mov
repnz
in
stc
test
stc
aas
idivl
xlat
shl
out
ljmp
in
out
divl
cmp
cld
xor
lret
lock
out
aam
cli
les
loopne
cmc
int
ss
into
cmp
lret
cmp
neg
iret
cli
stc
neg
hlt
fildl
iret
mov
jmp
jmp
shl
cmc
stc
fcmovu
sub
icebp
repnz
xor
jmp
cmp
in
jmp
fistpll
clc
cli
test
nop
mov
ret
xor
lret
aam
rolb
add
fdiv
xchg
in
orb
hlt
sarb
je
mov
mov
mov
jmp
xlat
into
rcl
aad
fadd
mov
adc
jle
adc
jle
in
shr
in
rcr
ljmp
rorb
ret
in
xchg
repz
xlat
fisubrl
fnstenv
jmp
ss
cld
fld
hlt
aad
out
fsubr
loopne
in
loop
inc
into
in
lret
int
aas
aas
into
hlt
rol
jecxz
sub
sub
ljmp
cli
shlb
lret
leave
repnz
into
cmp
cmp
cli
cmc
cld
out
mov
mov
fsubr
out
aad
shl
cmp
in
xor
call
ds
repz
loope
mov
enter
ss
ds
repnz
hlt
ffreep
movb
mov
mov
lret
out
icebp
cs
rcr
sti
idiv
out
in
loope
out
jmp
loopne
std
mov
sub
ljmp
idiv
xlat
addb
jmp
test
out
aam
repz
lret
test
hlt
loop
xchg
call
leave
fists
loop
out
call
out
std
repz
fcomip
aad
inc
cld
stc
xlat
cli
mov
mov
repz
ss
clc
cli
cmp
fsubr
loope
mov
mov
mov
icebp
lock
aaa
aam
int3
int
int
xlat
fcmovu
shl
mov
ror
repz
lret
in
aam
call
out
neg
les
fldl
flds
int
int3
int3
xlat
jmp
cmc
sti
jmp
xchg
orl
ficoms
out
rcl
hlt
repz
out
ret
test
jmp
jmp
repz
clc
divl
leave
icebp
fbstp
rol
in
stc
loopne
call
fiadds
icebp
pop
lret
shl
out
fxtract
ror
aad
addb
cmp
jmp
ror
enter
lret
add
jmp
jle
add
push
lds
xchg
shr
leave
out
out
repz
out
sti
iret
loopne
int
bnd
rolb
lret
sub
mov
xor
iret
stc
fnstsw
shr
sar
loope
fcomip
in
test
call
out
stc
lret
jmp
cmp
int3
rcr
jmp
not
ret
out
ret
ds
xchg
call
shr
fmul
cmp
rcl
jmp
add
stc
add
xchg
mov
int
loopne
ror
repz
in
cld
repz
xorb
sti
not
cli
test
ret
icebp
in
xlat
mov
mov
iret
shl
fadd
xor
jmp
hlt
sub
and
not
lret
loope
int
int
out
aad
ror
icebp
iret
icebp
fdivp
cld
lret
or
out
xchg
jmp
fucomi
xchg
ljmp
enter
push
hlt
ds
xor
ret
enter
decl
rclb
bnd
stc
rcr
hlt
fucomip
loope
into
test
loope
std
std
orb
repz
cs
icebp
cmp
cmp
aad
add
loope
test
shr
int
loop
in
xor
cld
aaa
xlat
fdivr
cmp
ds
fst
aas
test
test
test
nop
std
fsubp
mov
enter
jmp
sarb
test
and
out
cld
loopne
in
repz
cli
sti
sti
cmp
not
fneni(8087
fucomip
test
out
out
test
mov
iret
hlt
out
lret
cmp
into
fdivrs
cmp
in
mov
rcr
iret
xchg
cs
icebp
cld
aad
cmp
cmp
cmp
std
add
fcmove
ljmp
lret
ror
shrb
repnz
call
xor
cld
rcl
les
icebp
shr
rolb
xor
ljmp
add
or
mov
jmp
int3
enter
into
push
mov
loop
and
jle
add
in
cmc
roll
stc
aad
sar
jmp
jmp
fabs
fcmovnbe
lret
xor
out
shl
ret
out
mov
jecxz
iret
fdivr
leave
lret
test
out
xor
ljmp
test
ret
aas
repnz
ljmp
xor
fxch
call
div
sbb
rcr
incb
jmp
call
hlt
lret
cmp
out
leave
cmp
jecxz
sti
cmp
clc
cmp
in
ljmp
sub
jmp
aad
fst
lret
iret
cmpb
jecxz
xchg
add
in
mov
shlb
fldl2e
xlat
xor
shlb
clc
int3
loop
aam
lock
fcmovbe
loopne
test
enter
xchg
out
out
in
sti
shl
shr
cmp
cli
cli
icebp
ret
mul
jmp
lock
fsubp
enter
xor
aaa
repz
in
rolb
test
aad
and
fiadds
clc
aam
repz
xor
cmp
fsub
imul
jmp
dec
lret
in
xchg
aas
shrl
ss
sarl
xor
int
fldlg2
fdivr
aam
ds
lret
cld
fcmovb
lret
jecxz
out
in
call
repz
sti
cmp
fsubp
shl
add
lret
enter
jecxz
xchg
lds
shlb
aaa
fcomp
div
xlat
repz
icebp
loop
ljmp
mov
sub
in
into
rcr
loope
rcl
test
jmp
ret
cli
leave
cmp
xchg
aaa
int
leave
cmp
clc
aam
jmp
cld
xchg
cmp
aam
in
test
rcll
cmp
aam
xor
in
int3
imul
cmpl
xchg
test
iret
lock
jmp
xor
fcmovnu
jmp
rcl
addl
cmp
je
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
out
loop
sar
rcl
in
mul
fcomp
ds
sti
aad
incb
mov
stc
mov
shl
test
test
cmp
fidivs
div
test
test
jmp
rcl
loope
xchg
sar
repnz
xor
ss
ss
hlt
cli
not
rcl
cld
sti
fscale
ffree
mov
in
sub
fdivs
lock
jecxz
in
out
ret
sar
out
std
xchg
out
das
aaa
lret
ret
aam
sbb
repnz
sti
ljmp
mov
xchg
sub
sti
rcr
sarb
clc
xor
fadds
fcmovnbe
rcr
mov
sar
jmp
in
lret
ret
fcmovnbe
ss
aas
xlat
imul
cld
cld
cli
cld
loop
sti
xchg
iret
dec
mov
out
lret
int3
std
xor
stc
cmp
std
faddl
loop
fcmovne
loop
xchg
ljmp
ljmp
hlt
rcl
xlat
out
aas
enter
xlat
ljmp
mov
call
out
fst
lret
cmp
jecxz
rol
stc
loope
lret
mov
mov
mov
fmul
icebp
xor
hlt
xor
cli
std
cmp
hlt
call
iret
repnz
ljmp
jmp
out
repnz
stc
into
out
cmc
shl
fidivrs
fcmove
lock
fisttpl
mov
lret
lds
aaa
jmp
ror
loopne
icebp
shl
clc
fisttps
in
mov
rcl
int
out
icebp
iret
cmp
in
icebp
int3
rcl
cmp
cmp
repz
loop
fstp
jmp
nop
icebp
xchg
repz
iret
cmp
in
in
loope
stc
int
loop
ret
repz
ljmp
orb
out
test
hlt
out
jecxz
fdivr
fabs
out
out
call
frstpm(287
ljmp
cli
jmp
sar
mov
mov
addl
jmp
int
fcmove
fstp
adc
js
sahf
sti
mov
jle
add
lock
adc
jmp
adcb
xlat
rcl
cld
std
std
into
lret
int
repz
test
jmp
sbb
xchg
cmc
int
icebp
out
int
sti
repnz
adc
cli
iret
out
in
enter
sti
test
sbb
loopne
icebp
int
jmp
out
neg
cmp
clc
cmp
neg
call
lret
fcomip
jmp
jmp
fdivrs
sar
into
aam
cmc
sar
std
out
leave
fadd
and
xchg
int3
rol
cmp
into
repnz
aad
cmp
cli
ffreep
addb
mov
fcmovnu
fcoml
cmp
cmp
cmp
repz
icebp
clc
mul
idiv
or
xchg
fisttpl
icebp
in
fcmovbe
std
into
iret
cmp
loop
stc
and
repnz
repz
stc
fstp
out
std
fadd
in
leave
rol
cmp
cmp
loopne
ret
fildl
loopne
out
out
lret
mov
adcb
int3
aaa
rcl
ror
cld
cli
repz
call
jmp
cli
xchg
mov
aam
stc
enter
cmp
idivb
repz
fmulp
xchg
repnz
jecxz
iret
shl
xor
shr
hlt
out
cmp
ret
lock
cmp
enter
fisttpll
in
jmp
cli
cmp
cmp
aad
shl
loope
aam
orl
loopne
vpsubb
lret
dec
rcl
hlt
repz
ds
xchg
mov
ljmp
lret
loope
aam
cmc
mov
mov
cmp
pop
int3
incb
repz
shlb
cmp
out
in
cmp
rcr
call
out
out
cli
addl
cld
shl
in
jmp
cmp
cmp
fadds
shr
in
out
cli
jecxz
in
loopne
aas
mov
mov
xor
lea
jmp
into
aam
enter
fsubl
dec
pop
test
or
mov
adc
jle
out
jecxz
out
cmp
cmp
std
ret
addb
int
loope
xchg
lret
aad
aam
repz
cmp
int3
cmp
jecxz
shr
cmp
hlt
enter
loopne
mov
mov
icebp
cmp
jecxz
sarb
lock
loopne
out
hlt
fmul
lret
out
and
decb
sti
sti
cmp
hlt
fstp
iret
mov
std
lea
lret
out
cmp
ds
xor
clc
in
lret
lret
nop
xchg
enter
test
ss
aam
fstpt
shl
loop
mov
dec
loope
in
fucomi
loop
xchg
loope
fcomi
ss
cli
fidivrl
fxch
les
int3
lea
call
ss
out
int3
loopne
aam
sti
cmp
call
sti
into
out
xchg
fcoml
lret
out
ss
shr
aad
aas
loopne
aam
clc
mov
cld
in
nop
int3
loop
ficoms
clc
xlat
jmp
jecxz
xchg
loope
shr
jmp
jecxz
cli
sub
in
ret
xor
aad
in
repz
test
fdivrp
xchg
loop
out
lock
ljmp
das
repnz
cld
sti
cmp
jmp
test
cld
ret
cli
jmp
xlat
test
xchg
ljmp
fpatan
xor
cmc
dec
jecxz
repnz
fsubrp
or
ror
shl
hlt
ss
in
out
loopne
jmp
sti
ljmp
out
std
mov
test
iret
lock
xor
fdivrp
repnz
rol
cmc
adc
cld
nop
test
test
xchg
aad
xor
lret
enter
cli
icebp
in
hlt
aas
dec
sbb
aam
out
out
ljmp
fmul
leave
clc
repz
aam
add
cli
jecxz
cmc
hlt
orb
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
jb
pop
rorb
jle
clc
sti
out
out
hlt
aad
aas
fadd
int
jmp
ss
test
sar
repnz
in
fldl
xlat
clc
lock
int
cmp
fdivr
rcr
in
adc
cli
stc
aam
mov
hlt
jecxz
xchg
loopne
ljmp
fldl
in
in
mov
xchg
movl
xor
fsub
xlat
cmp
int3
stc
rolb
rolb
roll
jmp
sti
shl
sti
sarl
in
ss
ret
ret
std
xchg
mov
lret
jmp
cmc
leave
aad
cmp
clc
out
xchg
cld
mov
mov
orb
leave
test
std
fcomp
rol
in
mov
enter
mov
mov
shl
sub
repz
fadd
test
in
in
cmp
shl
aad
aam
cmp
int
in
cmp
ffree
fdivrp
repz
dec
fstp
std
iret
lock
in
ror
fcmovne
ljmp
clc
icebp
cmp
fcmovnb
ret
hlt
xchg
incl
loopne
xlat
out
jecxz
shlb
shl
test
mov
cmp
sar
xchg
repnz
xor
into
lock
not
iret
int3
into
icebp
ret
xor
sar
fadd
jmp
fcmovb
jmp
xchg
fdivp
aad
xor
fcmovbe
in
cld
hlt
in
icebp
test
fucomip
mov
jmp
in
fcomp
aam
cmp
repz
ljmp
test
fildl
lret
hlt
loope
ffreep
cli
jmp
iret
stc
fxch
lret
jmp
fucomi
aas
stc
test
std
mov
rclb
lds
into
xlat
fcmovu
cmp
xor
fcomp
test
cli
int3
repz
or
icebp
out
int
into
out
lret
in
repz
icebp
cmc
jmp
leave
loop
enter
sub
ljmp
cmp
cli
out
std
testb
rorl
or
jmp
cmp
fmul
cld
in
call
std
in
fmulp
inc
loopne
out
fsubr
cld
jmp
out
in
leave
ret
xor
out
pushl
out
fdiv
in
shl
rcr
test
loopne
add
out
xor
out
ds
sbb
cmp
jmp
in
loope
ret
in
orl
xlat
fdiv
lret
shl
stc
fdivrl
test
movl
add
jmp
rol
rcr
fld
pop
into
shll
adc
jle
mov
repz
icebp
leave
in
mov
fcomi
cmp
cmp
fstp
int3
shl
loopne
stc
loope
sti
loope
ljmp
mov
fdivr
out
lret
cli
sti
cmp
idiv
fmuls
in
sti
jmp
das
jecxz
icebp
call
cmp
out
repz
out
not
in
in
loopne
mul
icebp
fxch
lock
iret
hlt
aam
dec
in
std
sti
fdivp
mov
or
clc
in
mov
in
cmp
xor
out
cmc
cmpb
cld
inc
clc
rcl
add
in
shl
and
repz
shl
cmc
xlat
in
xor
add
and
sbb
mov
jecxz
out
xchg
xchg
loope
out
lret
cmp
xlat
neg
fdivs
lock
clc
hlt
sar
vcvtdq2pd
loop
xchg
hlt
ljmp
ret
sti
stc
aam
cmp
fsubr
icebp
shl
ret
not
jecxz
fcmove
in
nop
mov
shll
std
cmp
out
ds
sbb
fsubr
decl
call
out
leave
cmc
cmp
iret
out
cmp
dec
iret
neg
xlat
lock
cli
int
nop
jmp
jecxz
loope
aas
out
xor
xlat
in
cmp
repnz
fld
jmp
xlat
in
ljmp
shl
fildll
aad
std
cmp
out
loopne
test
bnd
xchg
cmc
fdivp
ret
shr
jmp
jmp
into
rol
stc
div
fmulp
loope
jmp
in
cmp
shl
out
shl
xlat
aam
cld
xlat
cli
sarb
cli
cli
jmp
std
jmp
fcmovne
loope
mov
in
xor
lock
call
hlt
rcr
aad
lds
clc
lock
lock
cmp
filds
ret
fdivr
ljmp
out
out
cmp
out
lret
aam
ret
addl
leave
roll
ret
enter
cld
cmp
cmc
shl
test
enter
hlt
aad
out
into
fcmovu
dec
call
shl
mov
fcmovnbe
ljmp
in
sub
ret
enter
call
fiadds
stc
vshufps
fmulp
sub
repz
lret
xor
cmc
lret
out
into
cmc
fcmovnbe
loopne
test
cli
sbb
leave
lock
aad
rcl
cmp
int3
xlat
cmp
fdivr
stc
loope
cld
movl
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
js
push
adc
jle
mov
mov
and
iret
leave
mov
jmp
imul
fildl
repz
shl
lret
lret
loopne
iret
and
fstl
repnz
out
ss
ljmp
call
fucomp
lret
and
mov
cmc
out
in
xor
aam
repnz
ljmp
xchg
neg
cli
incl
rorb
ret
call
cmp
fcmovnbe
fsqrt
ret
aas
not
hlt
div
call
icebp
test
rol
sub
loope
ljmp
jmp
int3
call
loopne
jmp
cmc
clc
push
jmp
test
not
loopne
in
lret
call
mov
fcomi
int
fstpt
out
icebp
loopne
shr
test
hlt
loope
mov
in
adcl
call
aas
hlt
loop
shr
out
ret
fdiv
lret
fcmovnb
jmp
test
jmp
jmp
addb
loope
fdivp
add
jmp
into
icebp
and
mov
cmc
enter
repnz
cld
aas
fdiv
clc
xchg
fmul
fcmovnu
addb
lock
icebp
xor
ss
aas
cmc
cmp
cmp
out
loop
stc
cli
test
out
lock
xchg
xchg
into
cmp
rcr
repnz
jmp
sar
clc
rol
cli
std
xchg
mov
jecxz
aam
in
out
out
cmp
xlat
ljmp
xchg
lret
repnz
in
iret
cmp
fcomp
sti
loop
aad
test
in
fdivr
stc
mov
in
fmulp
shl
out
xor
lret
lret
stc
sti
repnz
mov
test
test
into
fcomip
int
jmp
rcl
aad
cld
lock
out
aad
xchg
stc
fisttpl
lret
shl
out
cmp
in
xor
inc
testl
loopne
iret
cmc
in
out
fsubr
out
int
xlat
cmp
loope
ret
test
leave
sbb
test
div
ret
xlat
in
repnz
cmp
fcmovnbe
in
aam
loop
call
shl
icebp
loopne
jecxz
cmc
cmp
dec
iret
hlt
rcr
out
xchg
xchg
fimuls
out
rcll
in
cs
cmp
std
shr
std
fdiv
orb
std
repz
adc
clc
das
leave
out
test
idiv
in
in
inc
cld
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
aad
leave
sar
loope
loopne
out
xchg
addb
lret
repz
fdivr
lock
loop
in
jmp
xlat
addl
xchg
into
out
enter
out
aam
cmp
addb
xor
dec
in
jmp
aad
sar
cmp
cmp
enter
loop
in
in
mov
mov
shl
aaa
hlt
cmp
ds
fstp
jmp
rol
test
xchg
int
dec
loopne
xchg
in
enter
into
jmp
fdivr
out
cmp
xchg
cli
jecxz
lret
sbb
aam
out
clc
icebp
lret
in
repz
iret
cmp
adc
aad
neg
out
xchg
sub
and
xor
enter
int3
cli
out
fucomp
xchg
incb
loopne
fsub
fdivp
out
ret
xlat
out
cli
loope
fcmovnbe
fidivrl
mul
mov
in
int3
loop
decb
shl
ret
aad
stc
xor
out
neg
jmp
test
fadd
icebp
int3
out
jmp
aam
out
cmp
fxch
cmp
les
jmp
test
neg
loopne
xchg
icebp
int3
out
fdivr
clc
fidivl
fxch
ret
ds
aad
in
fdivr
xchg
fcomi
and
repnz
in
std
fstpt
cmp
and
cmc
mov
xlat
mov
ljmp
jecxz
out
ret
cmp
lock
jecxz
or
stc
loope
rorl
lret
xchg
mov
xor
cmp
out
cmc
fdivrl
cmp
xorl
fdivr
adc
sti
sti
std
int
icebp
rorl
repnz
ss
cmp
rcr
fcomp
fadd
clc
clc
std
lret
loope
call
leave
jmp
leave
rolb
inc
call
fcmovnu
call
test
xchg
out
in
cmp
enter
in
cmp
clc
aad
xchg
ret
repz
loope
rorl
loope
hlt
leave
idiv
fmul
rcl
clc
cld
addl
mov
out
test
out
lret
jmp
jecxz
cli
out
in
cmp
aaa
aas
fsub
out
xor
repnz
fcmovu
xchg
repnz
fdivp
shll
das
out
iret
jmp
cmc
flds
aam
in
fdivr
test
std
leave
cld
aad
out
call
stc
xlat
fstpt
into
aam
les
call
std
test
test
in
hlt
in
icebp
std
hlt
clc
cmp
push
pop
jmp
rcl
aad
aad
shll
daa
scas
add
xchg
jle
mov
cmp
in
mov
loopne
jecxz
int
repnz
icebp
repz
int
lret
xor
ljmp
out
fcmovnbe
xchg
cmc
test
jmp
cld
loop
xchg
xor
out
repnz
in
icebp
testb
dec
in
int
in
rol
xor
mov
fucomp
aad
neg
repnz
std
cld
out
loop
clc
loopne
fisttpl
iret
into
enter
ljmp
cli
loopne
frstpm(287
test
xchg
lret
lea
int3
repz
into
cmp
idivl
neg
out
in
fsub
lds
icebp
xchg
out
std
xchg
enter
xor
cs
jmp
loop
ds
loope,pt
clc
loopne
aad
loop
int
repnz
out
repz
call
fmul
aad
loop
hlt
jecxz
loop
xchg
sbb
cmp
xchg
out
lock
aad
lret
in
aam
int
xor
sti
cmp
jecxz
in
cli
std
cmp
in
int3
icebp
repz
shr
into
aaa
sarl
fadds
sti
cld
mov
nop
mov
icebp
hlt
int3
ret
xlat
ljmp
cmp
xchg
sti
int3
testb
out
int3
int
in
mul
in
aaa
ljmp
sar
repnz
mov
add
loope
rolb
divb
call
sti
fadds
sti
std
cld
fcomp
out
in
jmp
cld
call
icebp
xor
enter
idiv
shl
cli
iret
and
in
jmp
adc
rolb
hlt
sub
call
cli
in
int3
test
idiv
mov
repnz
into
aaa
fmul
lret
fst
fdivp
loop
sarb
movb
call
hlt
stc
loop
fcmovnbe
xor
jmp
sar
lret
aas
shl
ret
dec
hlt
test
sub
out
fcmovbe
out
xchg
fdiv
test
fsincos
int
jmp
dec
ds
repz
dec
clc
leave
orb
shl
aam
cmp
sti
repz
idiv
clc
clc
cmp
rol
enter
loope
xlat
loope
cmp
idiv
sarb
fdivrl
in
fiaddl
mov
cld
sti
lock
int3
cmc
rcr
into
out
fcmovne
rcr
cmp
jecxz
mov
test
not
aad
xor
lock
iret
clc
or
test
cli
iret
shl
repz
or
movb
ss
in
out
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
outsb
mull
or
jle
lret
loop
loopne
aam
in
mul
iret
stc
lret
adcb
ljmp
repz
in
lock
cli
loope
mov
xchg
loopne
test
lret
int
ss
aad
shl
cmp
rcr
mov
incb
aam
icebp
fldln2
out
cmp
in
fcomi
in
xchg
in
fsubp
loop
mov
rcl
ret
in
lret
div
jmp
cli
fcmovb
stc
mov
int3
lock
ror
leave
out
lock
repz
aas
fdiv
idiv
jmp
out
jmp
iret
rol
jmp
fdivr
out
cmp
out
jecxz
stc
cmp
decl
jecxz
repz
mov
loope
out
stc
fucomp
fdivrp
aaa
fcomip
repnz
stc
cmc
rorb
ljmp
jmp
cmp
int3
cmp
in
stc
fidivrl
lock
call
fucomi
les
xor
iret
rcl
testl
fcomip
orb
ret
xor
fucom
repnz
cmp
loop
cmp
cli
loope
xchg
lret
xchg
rolb
out
cmp
loope
xlat
loop
cmp
xchg
loope
jmp
mov
xor
ret
in
stc
fcmovne
cmp
ds
xchg
in
in
std
sti
orl
cmc
out
fldz
rcr
stc
jmp
sar
div
fst
out
out
call
out
jmp
cmc
cmc
xor
fmulp
idiv
test
std
rcl
jmp
stc
into
lret
loopne
xor
int
ss
in
cmc
int3
test
xor
rcr
dec
out
lret
cmc
mov
shl
ss
jmp
jmp
cmp
sbb
ret
mov
ljmp
fucomi
clc
fmulp
in
rcr
aam
ret
fimuls
mov
lret
cmp
into
shl
int
out
fcomp
xor
mov
rcr
mov
xchg
out
ret
frndint
loope
rolb
icebp
ret
out
testb
mov
sub
lock
leave
in
xor
clc
aam
and
testb
aam
shl
xor
cmp
std
cmp
fcmovnbe
cld
std
loop
leave
out
fiaddl
sub
cmp
cmp
test
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
inc
stc
jl
pushf
jle
mov
ds
cld
out
test
cmc
fimull
cmp
int3
int
in
or
out
in
out
cmp
loopne
ds
rol
leave
jmp
leave
and
sub
clc
aaa
fcmovu
cli
lock
in
xor
xlat
repz
in
loop
loope
lret
test
fstpt
ss
hlt
cld
divl
ret
mov
fcos
and
rolb
repz
fcomi
lret
cli
repnz
cmp
mul
in
ret
aam
mov
sar
roll
stc
not
rcr
int
cld
cld
out
shl
sar
enter
int
ror
int
in
xor
sub
fxch
adc
loop
sub
stc
cmp
into
int
lret
test
out
call
cmp
aad
into
shr
out
aam
iret
cmp
in
jecxz
mov
jmp
xchg
int
fld
cmc
stc
out
cld
int
in
call
fnsetpm(287
shl
sti
fxch
loopne
shl
call
shr
enter
cmc
in
cli
jmp
fcmovnb
loop
mov
aad
movl
jmp
sti
out
aaa
out
repnz
cmp
aam
flds
mov
addl
int3
in
fmulp
aam
rcl
les
clc
mov
rolb
jmp
xor
xor
aaa
into
xor
test
neg
enter
xchg
mov
ret
int
xchg
mov
jecxz
call
cmp
ret
out
xor
in
mov
das
aad
stc
cld
int3
lock
fsubrp
fmulp
ret
icebp
out
rcr
sti
fiadds
jecxz
mov
cli
in
out
fcomp
loopne
aam
ror
call
cli
iret
loop
call
enter
stc
sar
cmp
inc
cmp
addl
out
xchg
call
cli
in
sti
fistpll
fdiv
aad
sar
loopne
out
loope
mov
lds
enter
lds
cmc
in
xlat
not
repz
mov
sar
xchg
out
jmp
hlt
lret
out
enter
idivl
lock
lret
lock
ficoml
loope
fcmovne
not
cmp
fstp
icebp
fst
loope
hlt
ret
test
repz
repnz
xlat
leave
aam
repnz
in
out
cmp
xlat
cld
repz
jmp
fucom
and
xlat
fsubr
call
jne
jmp
rcl
rcr
fstp
aam
cmp
lods
sbb
fisubrl
mov
cmp
out
xor
xor
out
jecxz
fcmovne
stc
sar
enter
in
icebp
aad
ret
in
rol
repz
ds
ret
xchg
aad
fcmovne
iret
xchg
jecxz
call
in
cmp
enter
iret
adc
fadd
test
out
out
hlt
icebp
mov
lret
in
aaa
jmp
clc
sbb
fsub
call
fadds
add
xor
stc
int
xlat
std
fidivrs
iret
fucom
hlt
fcomp
xlat
hlt
or
pop
cli
xor
fsubp
ss
jmp
cmp
test
loope
rolb
loop
xchg
out
jmp
test
xor
jecxz
ss
fmulp
repnz
in
jecxz
sub
rolb
out
fnstenv
in
iret
fcomi
cmp
adc
orl
rorb
out
repnz
stc
jmp
out
cmp
out
repz
repnz
jmp
fmul
cli
loopne
ljmp
shlb
sar
cmp
sti
loope
ss
out
mul
in
in
mov
mov
fcmovu
lret
cmpb
cmp
jecxz
cld
out
jmp
sti
mov
jecxz
ret
fdivp
in
loope
in
aad
in
xor
cld
in
loopne
shlb
in
enter
cld
xchg
loope
in
hlt
xlat
leave
aaa
ss
fmul
enter
cmp
fcom
in
hlt
int
in
fmulp
sar
repz
in
enter
fidivrs
fmul
in
icebp
in
adc
cmc
and
out
lock
jmp
icebp
shr
leave
jecxz
cmp
cmp
aaa
cli
cmp
incb
clc
xor
shr
decl
aam
aam
out
aam
fdivrp
stc
jecxz
std
lock
rcl
out
out
in
lret
sub
lock
int
out
std
cmp
in
enter
xchg
fsubr
fistl
repz
out
shl
cli
xor
rol
jmp
shl
fstpt
enter
leave
fsqrt
icebp
test
mov
shlb
mul
out
fucomp
into
imul
sar
rcr
fcomp
fcmovnbe
lret
loop
jmp
lea
enter
lret
fistpll
cmp
into
fcmovu
loope
adc
mov
repz
icebp
in
xor
aam
out
cmc
leave
mov
into
lock
idivl
aaa
xor
icebp
repnz
in
rcr
in
ret
cmc
xchg
into
out
fsubrp
in
int
shll
ret
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
and
jle
add
clc
repz
fucomp
sbb
shl
std
cmp
jmp
loopne
call
neg
out
cli
ljmp
sarl
rcr
cli
hlt
jmp
xchg
int3
decl
cmc
jmp
fninit
fdiv
fistpll
cli
filds
lock
fdiv
int3
cmp
ss
cmp
ret
icebp
sti
clc
cld
xchg
mov
fimull
hlt
mov
ftst
xor
out
jmp
loop
stc
cmp
fcomi
stc
loop
loop,pt
lret
sbb
in
in
hlt
mul
hlt
xor
cld
icebp
leave
int3
icebp
add
aad
stc
fimull
lret
cld
call
rcl
enter
cli
hlt
testl
out
fucomi
icebp
xchg
jecxz
out
cli
cmp
lret
aas
sti
aad
fcomp
xchg
mov
jmp
aas
call
icebp
xchg
out
sar
call
sar
cmp
rcl
in
rol
stc
cmp
xchg
out
in
filds
iret
lret
out
das
lret
enter
shr
in
ds
call
mov
iret
mov
loopne
icebp
sub
jmp
hlt
in
out
shr
aad
out
movb
ret
repz
loope
enter
fdiv
cmp
sar
sarb
sar
cld
in
loopne
ljmp
idiv
repz
cmp
ljmp
cli
sti
aad
loope
fiadds
std
nop
mov
iret
sar
repnz
xor
in
xor
loope
cmp
enter
std
leave
loopne
leave
hlt
test
out
into
neg
ss
cmp
hlt
cmc
cli
loop
rcl
cld
cli
jmp
adc
jmp
xor
repnz
repz
jmp
cmp
cmp
cmp
out
mov
aad
sbb
cld
and
std
mov
in
aad
lock
cmp
icebp
out
into
out
hlt
fdivr
fmul
aam
neg
lock
jmp
ror
shr
repnz
idiv
into
std
shr
fabs
sub
fcomip
call
mov
xchg
sbb
lret
jmp
cmp
fucomi
adc
xchg
cld
xlat
ret
decb
hlt
jecxz
ljmp
rcl
lock
test
in
jmp
cld
addl
jecxz
cmp
xlat
cmp
enter
clc
test
mov
out
fcmovne
fsub
stc
mov
jmp
iret
aaa
jmp
xlat
jmp
stc
aam
in
sbb
jecxz
int
xor
mov
cmp
jmp
rcl
aad
rcrl
sub
add
jle
int3
hlt
cmp
lret
cmc
hlt
cmp
fdivr
ss
test
repz
lret
iret
and
xchg
fcomip
xor
sar
fcmove
shl
call
rol
xchg
call
jmp
enter
xchg
out
in
loope
lret
cmc
ds
add
ds
xchg
out
imul
out
out
xchg
call
fld
lret
int3
std
repz
fiaddl
fneni(8087
testl
in
out
ljmp
repnz
fucom
shl
stc
and
orl
out
xor
ret
in
lret
fnstsw
lret
int
cmc
loop
ret
mov
add
xchg
xchg
xor
fyl2x
xor
leave
fidivrs
and
jecxz
flds
xchg
xchg
fucomip
leave
ret
in
into
test
jmp
in
jecxz
lds
leave
cmp
call
repnz
xlat
jecxz
xor
cli
stc
stc
int3
loope
out
call
or
jmp
lret
cld
xchg
call
shlb
cli
cmp
cmp
sbb
icebp
out
sar
mov
fsub
ret
std
icebp
fisttps
jecxz
hlt
ds
enter
jecxz
repz
rorl
sti
in
iret
aam
mov
out
xor
std
fdivr
repz
aas
loope
idivb
repz
and
ret
into
ljmp
jecxz
das
lret
iret
aad
rol
in
mov
ljmp
jmp
sub
into
divb
out
cli
cmp
cmp
lret
repnz
repz
fdivr
adc
loope
lret
ljmp
into
icebp
std
aam
cmp
cmc
in
xchg
inc
ffreep
lret
rcr
fldl
int3
in
into
test
fcomi
jecxz
lock
rorl
fcom
leave
std
aam
loop
xor
in
xor
fdivr
lret
loope
sar
frndint
leave
mov
loop
mov
xlat
lret
jmp
fsub
cmc
test
int3
enter
cs
ljmp
fcmovnu
int
sti
les
fstp
fld
cld
out
test
jmp
xchg
call
aam
out
fnsave
icebp
shl
lret
lret
mov
call
cmp
in
fdivrl
repz
fldl
lret
loopne
in
sti
fldt
f2xm1
cmp
in
repnz
jecxz
out
stc
fdivrp
leave
call
cld
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
mov
setae
add
jmp
cli
ljmp
fucomip
out
sar
stc
out
and
std
out
lock
jmp
aam
ljmp
rol
aam
hlt
repnz
xor
fucomp
int
sub
hlt
xorb
shlb
xor
lret
fdiv
lret
int
fidivrs
shl
loopne
addb
xchg
call
jmp
lret
loop
test
hlt
hlt
aam
mov
test
xchg
in
aam
out
call
out
aad
fcomi
adc
fcmovu
xchg
fldl
cld
mov
incl
cmp
out
jmp
int
cmp
loop
ret
loopne
std
xlat
test
in
icebp
xchg
hlt
loop
ljmp
cmc
in
repz
ds
mov
sti
roll
call
int3
leave
repz
aad
fcmovne
imul
aam
int
fucomp
addb
jecxz
out
incb
divb
ss
hlt
shl
rolb
iret
fdivrp
sar
lea
jmp
cs
xor
divl
test
ljmp
fdivp
repz
lock
clc
in
ret
sti
cli
lret
std
in
repnz
test
faddp
mov
lret
into
rcll
shr
sub
xor
cmp
cli
cmp
cmp
repz
sti
loope
and
int3
fmul
in
in
shl
shr
jecxz
fidivl
repnz
clc
rolb
loope
in
mov
xchg
xchg
xchg
fmul
into
aam
fsubrs
cmp
aas
fnstsw
test
clc
in
ds
xor
loope
in
int3
jmp
sti
mov
out
shlb
idiv
ds
cmp
in
lock
call
faddp
lret
lret
fisttpll
shlb
sti
lret
cmp
aas
test
out
repnz
ljmp
sar
cmp
test
fiaddl
leave
orl
add
mov
add
movl
cmp
movl
jmp
mov
fstp
enter
imul
and
pop
test
jle
mov
stc
icebp
cmp
ljmp
fcomi
sar
enter
xchg
xlat
test
lock
cld
into
int
loope
stc
ret
aas
ret
cmpb
testl
out
out
fdivs
cmp
ffree
in
test
div
mov
sub
mov
lock
in
aam
out
fucomp
sarb
jecxz
stc
in
xlat
jmp
in
repnz
xor
xor
out
in
ds
aas
icebp
mov
mov
fistl
icebp
fsubr
lret
cli
xor
cmc
jmp
cmc
fcomp
clc
ds
enter
lret
loope
xor
aam
hlt
out
loop
divb
shl
xor
loop
ffreep
xlat
jmp
lret
fldl
ror
cmc
lret
cmp
fdivrp
stc
test
fld
fsub
in
clc
in
mov
jecxz
rol
stc
icebp
cmp
fsubrp
ror
fcom
out
aas
cmp
loop
mov
or
fsubp
ljmp
into
enter
fmul
lock
sti
jecxz
movb
mov
xchg
call
repnz
ror
fcmovne
cmp
cmp
cmc
in
shl
xor
cmp
int
leave
std
std
iret
lock
test
aam
loopne
in
xor
jecxz
fst
mov
in
jmp
loopne
xchg
call
out
rcr
cld
out
test
jecxz
mov
shl
hlt
idiv
fildl
ljmp
aaa
call
loop
repz
adc
test
ffreep
call
test
aad
in
xor
call
cli
leave
out
add
fcomip
call
lret
call
out
lock
out
jecxz
repz
aad
cld
std
rcr
aad
iret
hlt
loopne
test
fidivrl
test
enter
ljmp
repz
in
cmp
out
fcom
cmp
cmc
add
in
cmp
ljmp
andl
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
call
xbegin
fdecstp
int
xor
stc
loopne
push
adcl
lret
into
cli
out
sub
std
adc
fdivr
loop
in
iret
cld
sub
out
divl
in
faddp
int3
icebp
cmp
cmc
shl
push
fstp
cmp
int3
fdiv
xchg
lret
loop
enter
cmp
sub
fnsetpm(287
ffreep
repz
test
fcmovnu
dec
fsub
stc
int3
and
lret
iret
cld
stc
iret
dec
shl
fyl2x
ss
out
rolb
leave
sti
into
in
mov
iret
repz
not
cld
ljmp
aas
mov
lret
stc
xchg
cmp
test
repnz
repnz
hlt
std
in
loope
cmc
out
sbb
xchg
in
lret
in
leave
ljmp
xor
leave
sti
jmp
hlt
sar
rolb
cmc
xchg
icebp
int
loopne
shr
xor
clc
cmc
cmp
in
int
cmc
clc
not
icebp
fcmovnbe
ftst
cmp
movb
rol
ljmp
cmp
in
lock
leave
loopne
adcb
out
cli
lret
cmp
clc
sti
lock
sti
xchg
repz
loopne
lock
xor
cmp
clc
jmp
iret
into
and
cmc
ret
mov
adcb
shr
shr
cmp
leave
fucomip
cmp
stc
cmpb
stc
filds
sbb
out
leave
shr
repz
call
ffree
fsubr
cmc
addl
out
bnd
shl
xor
aam
cli
out
sarb
ljmp
in
repz
inc
test
rcl
xchg
out
repz
xor
jmp
loopne
in
xabort
cmp
std
xlat
test
repnz
out
xor
leave
std
fchs
ret
rcl
ds
sti
or
mov
ljmp
mov
add
add
add
add
or
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
sub
lret
scas
sbb
jle
sbb
or
aam
xlat
shlb
xor
cmp
loope
cli
mul
rcr
ret
mov
leave
ljmp
cmc
jmp
hlt
repz
ss
enter
test
rcl
ret
cmp
out
mov
in
jmp
in
cmp
in
idiv
fiadds
loopne
into
cmp
mov
jmp
rcr
jmp
aas
aam
xor
mov
sti
cmc
test
clc
out
xor
into
out
neg
cli
ror
int3
faddp
lock
repz
ret
ljmp
call
xor
repnz
repz
ds
loop
test
in
orb
ljmp
or
cmp
jmp
loope
mov
rorb
into
xlat
in
xor
enter
sti
fxch
push
std
loop
loop
stc
cli
xchg
jmp
fsubr
sarl
icebp
repz
std
repz
addl
hlt
in
loop
out
call
enter
aas
out
rcl
loop
clc
cmc
leave
xlat
test
cli
repnz
div
ret
cmp
jmp
into
xor
lret
out
test
in
fsubr
jmp
ljmp
out
fdiv
cmp
shl
aam
shl
fcomip
xlat
fdivp
cld
out
std
test
shl
ret
ret
clc
xor
int3
aaa
aas
xor
cmp
int3
cld
cld
sbb
cmc
cmp
sub
hlt
xor
out
aas
test
cli
ret
sbb
call
rorl
enter
aas
fnstsw
rol
fdivrs
loope
test
xchg
in
mov
divl
lret
ret
out
int
neg
cmc
in
cmp
les
call
iret
jecxz
rcr
test
lret
lret
sarb
call
rolb
roll
mov
add
sarl
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
ss
jle
add
fistl
out
loopne
xor
repz
cmp
aaa
aam
shl
int
fucom
sti
ret
in
sti
lret
inc
sbb
mov
sar
in
aas
jmp
ret
shl
cmp
lret
movb
out
div
out
aaa
ljmp
add
orl
ror
sub
cli
enter
cld
in
ss
ret
push
test
rcr
mul
int3
xchg
rclb
aam
cmc
jmp
lock
idivl
sar
hlt
aad
out
fsts
nop
ljmp
jmp
in
stc
cmp
xlat
ss
ret
inc
shl
cld
rcr
mov
in
loope
nop
shl
out
fmul
aam
jmp
into
cmp
jmp
inc
fdivrs
mov
std
repz
into
das
imul
idivb
sarl
clc
sar
add
inc
in
idiv
filds
in
call
xor
jmp
cmp
aad
in
iret
cli
rol
ret
out
mov
out
mov
loop
int
sti
icebp
out
cli
cld
call
cmc
adc
aam
jmp
mov
xchg
lret
lret
into
jmp
cmp
fcmovu
repz
mov
cld
mov
mov
std
xchg
out
shll
leave
stc
cmp
icebp
les
mov
fisttpll
call
fdivs
sub
out
int
loopne
xor
aas
fisttpl
cmp
nop
ljmp
aad
into
std
cli
in
into
repnz
xor
ret
in
enter
mov
aad
out
out
stc
cmp
fucomip
out
sar
jecxz
cmp
mov
int3
aas
in
out
int
dec
in
int
shl
lock
ret
sar
jecxz
loope
loope
fadds
mov
in
xor
divl
pushl
cmp
sarb
ret
in
std
aad
shlb
add
add
add
ror
int
fst
fld
cmp
and
ja
aam
jle
sbb
jle
in
cli
out
ret
jmp
loope
fmul
rcr
idiv
jmp
fcmovnbe
testl
iret
in
in
in
mov
shlb
out
cmp
ds
idiv
loopne
fildl
hlt
xchg
out
icebp
test
lret
xchg
out
enter
icebp
cmc
cmp
add
cld
fistpll
out
xlat
jmp
xchg
xchg
std
idiv
into
imul
xor
ds
in
out
test
test
lret
in
clc
int3
iret
jmp
int
aas
repnz
out
xor
fmul
fcomi
ljmp
ret
out
jecxz
faddl
fdivp
in
divb
xor
lret
std
fdivrs
mov
mov
addl
icebp
rcl
lret
xor
rcl
test
aas
xchg
xchg
loop
loope
icebp
icebp
std
int3
xchg
fsub
das
cmp
sti
int3
sti
leave
stc
cmp
ds
xchg
shl
aad
leave
cli
stc
fsub
fcomi
loop
aad
lret
into
repz
into
fcmovne
cmp
fld
in
lret
out
jecxz
xchg
call
repnz
repnz
fcomp
xlat
out
in
sti
cmp
out
xor
loope
icebp
jmp
xlat
cmp
test
aad
xchg
stc
sti
xlat
ffreep
out
out
adcl
aad
repnz
cmp
out
cli
sub
stc
jmp
out
shl
clc
repnz
cmp
int3
cmp
test
clc
in
addb
orb
fdiv
cmp
rcl
aaa
aas
repnz
stc
aad
idiv
test
lret
mov
mov
iret
cli
repnz
adc
rol
loopne
jmp
aad
jmp
roll
cmp
in
fcomp
cmp
fxam
cmp
jecxz
mov
call
clc
shl
repnz
cmp
xor
sarb
cli
lock
mov
mov
jmp
xorl
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
lds
into
mov
in
in
les
out
not
out
ljmp
cmp
jmp
in
orl
aad
xor
fmulp
cmp
int3
out
aas
jecxz
repnz
sar
sti
jmp
repz
repz
lret
fnstsw
in
ffree
hlt
xlat
in
fimuls
mov
loop
loope
sarl
hlt
cmp
xor
iret
shr
jmp
out
dec
decl
leave
rcl
enter
idiv
jmp
repnz
les
loope
ficoms
sar
in
lret
hlt
repnz
sti
test
cmp
test
xchg
enter
mov
leave
into
rcr
int
jmp
cmp
in
loop
sar
jmp
leave
call
call
test
shl
int
xor
ss
test
sbb
in
fisttpll
xchg
xor
out
in
clc
int
lret
and
cli
xor
loopne
xor
addl
clc
aad
cmp
cmc
fdivrl
clc
jecxz
rolb
xlat
sbb
icebp
in
ror
in
hlt
loop
out
leave
out
fistpll
aas
lret
fcomi
call
int3
out
orl
shl
xor
cmc
cli
stc
loopne
int3
xor
clc
jecxz
sbb
loope
in
xchg
in
mov
loopne
shl
fsubr
das
call
rcl
cmp
repz
icebp
jecxz
fildl
jecxz
icebp
roll
into
in
cli
cmp
cmp
ret
cmp
sbb
repz
xor
out
cmc
repz
cmc
loope
roll
lret
and
lret
cmc
test
out
ret
out
jmp
cmp
jecxz
mov
incb
mov
lea
ljmp
cmp
xchg
jne
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
popf
push
les
nop
mov
jle
add
cld
incl
fsubr
sub
rol
lret
xor
repnz
fiadds
lret
cld
and
lret
int
call
iret
cmp
cmp
aas
fiadds
mov
mov
mov
lret
xchg
nop
div
xor
out
out
int3
fadd
cmp
fneni(8087
in
in
stc
iret
rcl
sti
cmc
neg
loope
ljmp
loopne
aad
cmp
not
cmp
in
int3
fucom
ffree
fpatan
enter
stc
call
mov
fsub
ret
out
sar
sbb
out
out
incb
xchg
cli
bnd
aaa
out
in
fdivp
fnstenv
cmp
cld
xchg
xrelease
rcr
nop
xchg
in
xlat
out
int3
jmp
in
and
aam
mov
xchg
xchg
lock
fsubp
xor
shl
repz
xlat
int3
fst
shr
repnz
aad
adc
mov
aad
int3
fucom
jecxz
decb
shlb
call
jecxz
test
clc
ret
enter
in
test
out
xchg
jmp
cmp
loop
sti
fdivr
rcl
clc
aam
cli
xlat
mov
in
icebp
out
mov
out
call
shr
icebp
sub
loop
call
loope
lret
fucomp
repnz
test
jmp
cmp
stc
jmp
rcl
clc
aas
out
loop
mul
in
out
in
xchg
mov
aas
loope
jecxz
div
cld
leave
sarb
sarb
cld
mov
xchg
rolb
sub
cmp
cmp
lock
mul
cmc
loop
rorl
test
xor
sub
cmp
clc
cmp
xlat
iret
fcmovnbe
fcmovnb
fcmovbe
fildl
fmul
icebp
xor
fadd
call
jmp
sbb
std
call
mov
sub
out
lret
lock
jmp
shl
in
hlt
cmp
xchg
xlat
mov
rolb
ret
in
lock
idivl
fistpll
jmp
inc
cld
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
pop
xor
jle
add
test
ror
loope
in
xchg
sub
lret
int
lret
cmp
cli
ret
in
aad
or
mov
mov
xor
jecxz
sti
sarb
repnz
out
cmp
mov
cld
test
mov
mov
call
out
shl
ss
ljmp
shl
test
out
into
repz
orl
iret
sti
cmpb
aam
neg
sbb
rorb
in
std
int
sub
in
xor
xor
sub
stc
in
mov
lret
loope
into
les
iret
out
xlat
div
cli
out
cmpl
shl
call
aad
stc
cmp
mov
loope
xor
lock
idiv
cmp
clc
sbb
fisttpl
nop
jmp
mov
fists
xor
int
cmp
ds
fiadds
out
sti
mov
icebp
call
xor
aaa
rol
iret
cmp
aam
cmp
cmp
icebp
cld
jmp
not
cli
mov
jecxz
out
lret
cmp
cmp
loop
fdivrs
fmulp
hlt
hlt
test
jecxz
out
test
ljmp
sti
div
into
incl
jecxz
clc
fsubp
fldl
iret
shl
ror
shr
ss
fdivrl
loopne
lock
cmpl
ret
loopne
mov
std
jmp
xchg
rcr
cli
fnstcw
neg
shl
enter
rol
vpaddq
leave
xchg
nop
or
lret
call
repz
cld
icebp
cmp
repz
call
idiv
leave
fnclex
ret
enter
mov
stc
xor
fmul
stc
lret
jmp
ret
cmp
fmul
sti
ret
clc
jecxz
fsubp
call
jecxz
ret
jmp
jmp
clc
loopne,pt
aam
rol
in
stc
stc
fdivr
iret
xchg
int3
mov
shl
int
ljmp
in
cmc
ljmp
test
ror
ror
sti
repz
sarb
roll
int3
mov
mov
mov
push
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
int
jecxz
xchg
ror
sar
ror
fdivr
std
ljmp
fiadds
fiadds
jmp
shl
xor
enter
loopne
shl
cmp
out
std
xor
sub
xor
lret
fucomip
cmp
fcomp
cmp
adc
out
lock
out
xchg
out
das
jmp
repz
cld
in
fcomi
fsub
fcmovne
repnz
fcmovu
ret
lret
hlt
fmulp
rorl
test
loopne
xor
leave
enter
mul
int3
fldl
jecxz
lea
in
loop
lock
aas
mov
int3
leave
lock
idiv
repnz
xchg
in
idiv
mov
repnz
sar
rcl
into
cli
repnz
into
cmp
std
clc
icebp
cli
rol
repz
xchg
out
ljmp
cmp
aam
leave
cmp
out
test
aam
cmc
jmp
fdivr
int3
ficoms
cmp
hlt
cmp
out
cmp
mov
cld
loopne
mov
out
lret
xlat
lock
cmp
loope
ffreep
xchg
xor
jmp
out
mov
out
cmc
rol
cmp
fsubr
shlb
repz
cmp
cmp
out
test
mov
test
out
in
test
xchg
les
out
xor
aaa
leave
fildl
lock
cli
cld
std
incb
int
jmp
iret
jecxz
stc
hlt
jmp
out
lret
aaa
iret
in
fadd
clc
cld
leave
hlt
ffree
in
cld
cmp
in
in
das
loop
icebp
div
out
out
iret
ret
lock
iret
testb
cli
in
lret
rol
out
aaa
repz
sar
cmp
jecxz
cld
adc
test
test
jecxz
in
ljmp
aad
rcr
aam
fcmovnu
iret
cmp
stc
jmp
in
call
inc
jmp
cmp
std
ror
sar
shl
out
xchg
call
lret
jmp
call
xor
fcmovu
aaa
shr
call
repnz
sti
aas
fildl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
adcb
ret
jle
into
out
int
fxam
aam
stc
lret
repz
jecxz
fptan
ret
loope
out
leave
into
xchg
fisttps
int3
int
cmp
leave
aas
cmp
addl
aam
out
fsub
clc
out
lock
loop
dec
loopne
xor
fsubrp
aaa
shl
test
clc
aad
orl
in
div
out
xor
ss
out
int3
icebp
neg
rcr
loope
mov
enter
call
cld
xchg
mul
hlt
jmp
cmp
int
aam
hlt
and
call
fmul
in
test
xchg
fdiv
loope
xor
lret
out
int
aam
hlt
frndint
or
cld
int
mov
out
cld
in
repnz
fcmovne
xor
aam
ror
sar
cld
fdivr
hlt
fcomip
mov
addl
xchg
stc
cmp
neg
cmp
loop
stc
shl
not
shr
cmc
jmp
repz
mov
shl
leave
xor
hlt
rolb
aam
out
orb
orl
sti
ds
fcmovne
fcomp
ds
rol
clc
xchg
fadds
cmp
ljmp
sarb
aam
aad
loope
leave
fdivp
loop
mov
xchg
ret
enter
xor
clc
ds
cmp
clc
fsub
call
xchg
test
lret
cmp
repz
lret
int3
in
ds
fcmove
in
rcl
dec
xor
rol
cmc
iret
icebp
shr
cld
loop
cmp
call
mov
fucomip
cld
ljmp
ret
out
ss
rcl
out
rolb
xlat
fldl
mov
idiv
icebp
clc
fnsave
xlat
xlat
in
fdiv
test
xchg
xchg
rcr
icebp
lret
call
xlat
cmp
out
loopne
cli
cld
stc
repz
sbb
mov
loope
fisttps
xlat
hlt
xor
cld
jmp
or
idiv
enter
aad
mov
out
lret
out
aas
xor
sarl
adc
mov
add
flds
add
add
rolb
add
movb
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
mov
xchg
mov
add
repnz
ss
aam
ret
test
mov
loopne
xchg
xchg
mov
loopne
sub
mul
int
repz
ds
call
cli
clc
out
icebp
mov
loopne
fxch
into
repnz
clc
sbb
sbb
xchg
mov
call
in
into
xor
loopne
loop
ds
stc
test
fprem
lret
ljmp
out
lock
lret
ljmp
filds
out
mov
xchg
icebp
aaa
cmp
rcr
lret
neg
in
shl
ffreep
xchg
std
mov
test
lret
cmp
into
ljmp
clc
and
mov
cli
in
cld
flds
test
fnop
rcl
in
and
cmp
sar
out
sti
out
xchg
cld
out
and
out
cli
icebp
fcomip
enter
ret
fdivr
xchg
lock
out
not
fcom
out
std
cmp
out
ftst
hlt
clc
repz
stc
in
fldln2
lock
jmp
cmc
iret
shl
jecxz
ss
cmp
cmp
ret
sub
shl
mov
fmulp
xor
int
aad
sti
repz
std
sti
and
loop
adc
int
icebp
iret
filds
ret
lock
in
fcmove
aad
cmp
stc
cmp
lret
int3
ret
out
jmp
out
aam
out
shl
jmp
fst
xor
orb
xchg
push
nop
xchg
rcl
clc
int
jmp
push
std
iret
hlt
loop
add
out
std
sbb
int
rcl
into
loopne
fprem1
aaa
hlt
call
cmc
fsub
ds
lret
lea
stc
in
fdivr
fstp
sti
jmp
rcr
cmc
repz
int3
in
mov
adc
lock
icebp
rcl
jmp
loopne
fistpll
fdivr
sar
mov
jecxz
mov
call
loopne
int
test
add
movl
lea
jmp
iret
iret
ror
ror
xlat
fstps
pop
jne
pop
sbb
jle
add
jmp
loope
aad
lea
mov
clc
lock
lret
fdiv
iret
lock
mov
mov
std
lret
into
popl
shr
cmc
neg
ffree
cmp
add
cli
loop
jecxz
cmp
xchg
mov
mov
loope
les
idivb
std
leave
cmp
cmp
cmp
in
loope
std
lret
int3
int3
ror
shrl
call
fndisi(8087
cmp
rol
fcomip
fadd
ljmp
ljmp
sub
cmp
lock
into
cmp
ret
int3
sti
xlat
xor
out
lock
jmp
out
cmc
aaa
sti
lock
cmc
hlt
hlt
ror
loope
xlat
mov
loope
aam
mul
lds
lret
cmp
in
sar
cli
cmp
loop
div
sub
nop
faddl
lock
xor
enter
or
test
xlat
test
movl
das
sub
fcmovnu
aad
clc
cld
repz
ret
jecxz
jecxz
in
cld
out
cli
xchg
call
xor
in
enter
clc
aas
sti
aas
ds
in
out
enter
test
les
xor
cld
cld
rcl
sti
shl
aad
div
aam
leave
mov
sub
ret
ss
idivl
rolb
hlt
fmul
out
faddl
xchg
rol
out
out
cmp
int
iret
lock
stc
clc
testl
std
std
lock
sar
fnstsw
cmp
rol
fistpll
clc
idivb
mov
sti
lds
xor
stc
out
fpatan
aaa
call
inc
std
clc
out
cmc
cli
cli
clc
fisttpll
sub
loop
fldz
fnstcw
std
clc
sarl
lock
repz
ljmp
fldl
lock
out
xor
ss
std
lret
aad
ds
fsub
cmp
cld
int3
nop
in
out
aad
out
out
cmp
xlat
out
rcl
mov
mov
mov
jmp
lret
ret
int
lret
in
aad
cmovle
inc
jle
ret
jle
cmp
sti
aaa
rcl
out
jmp
jmp
int3
xchg
in
out
mov
repz
cmc
cli
xlat
fcmovbe
loope
test
call
out
jmp
xchg
shlb
hlt
ret
in
call
aam
sbb
xlat
fld
call
aad
iret
rol
cld
rcl
rol
divl
out
flds
out
out
ljmp
shrl
int3
jmp
ds
repz
fdivrp
mov
fcomp
in
adcb
fsub
xlat
clc
xor
in
in
loop
rcl
cmp
loop
ret
test
adc
hlt
loopne
leave
out
shll
aam
xor
test
xlat
mov
ret
loop
cld
cld
repnz
lock
int
xlat
sbb
loopne
cli
ret
aad
in
mov
leave
into
int3
test
aam
iret
icebp
aas
loope
test
xchg
test
call
nop
repz
stc
lret
shl
fdivrl
stc
leave
iret
cmp
ret
aad
shl
test
jecxz
in
xchg
in
imul
repz
divl
lock
ret
shl
fucomip
sti
test
fsubr
in
in
out
cmp
clc
aam
aam
icebp
sti
rcr
cmp
in
out
mov
xchg
xlat
xlat
cmc
xor
in
hlt
fistpll
xorb
fsincos
mov
loopne
lret
addl
cmc
jmp
sar
cmp
in
out
into
cmp
shl
inc
incb
mov
fcoml
aad
xbegin
cli
out
fiaddl
idiv
shl
sub
std
nop
out
iret
loop
aad
out
ljmp
rol
ds
sti
incb
xchg
out
aam
test
xor
lret
lret
flds
cmc
shl
xchg
call
test
repnz
aas
rcl
sarb
shr
jmp
ss
fadd
std
aam
inc
ljmp
ljmp
sarb
xor
fcomp
rcl
in
imul
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
xchg
div
test
xchg
rorl
xor
aaa
enter
cld
sti
into
jmp
fcmovb
xchg
stc
les
call
xchg
iret
sub
rcl
ss
fsubr
cmp
in
lock
mov
rolb
in
test
xchg
int
call
xlat
stc
out
lret
cmp
test
sti
in
in
orl
repz
ljmp
fnstsw
ffreep
fcmovnb
cld
fdivr
fadd
leave
in
out
out
out
call
xor
cmp
fucomip
repz
loope
cmc
ljmp
or
xchg
lret
int
out
out
aaa
fcomip
lock
fiaddl
aam
stc
mov
faddl
shll
sub
fcmovnb
shr
aad
int3
loope
in
cmp
call
out
ljmp
ror
not
aaa
enter
clc
in
std
addl
mov
sbb
loop
out
mov
cmc
in
out
int3
cmp
xor
loope
xlat
icebp
fdivr
clc
clc
fadd
fsubrp
call
lret
leave
xor
out
jmp
ljmp
fcmovnb
xlat
aad
mov
out
icebp
rcr
xchg
repnz
leave
cmp
out
aam
flds
sar
mov
loope
aad
in
div
xor
push
push
or
loope
cld
loop
adc
in
mov
in
in
repz
enter
dec
faddl
sti
enter
ffree
fsubrp
jmp
hlt
das
ret
out
aam
jmp
div
fmulp
addl
sti
xor
xchg
fimuls
jmp
fucomp
shl
cmp
fcom
sbb
mov
loopne
sub
lock
vpsubd
cmp
out
cld
lock
shl
out
loopne
rolb
int3
loop
int3
xchg
xchg
into
in
xor
out
int3
cmp
repz
mul
in
jmp
mov
and
repz
xor
enter
jecxz
iret
out
stc
mov
orl
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
cmpsl
push
xchg
mov
jle
ret
jle
cli
out
leave
lret
in
lret
int
jmp
fsubrs
in
aaa
rol
cmp
aam
call
ffree
addl
in
hlt
cmc
jecxz
fldl2e
sub
aam
cmp
fsubr
xlat
std
shl
out
ffree
fsqrt
movl
xor
int
lret
shl
in
fstp
fadd
and
xchg
ljmp
xchg
mov
out
aad
icebp
leave
cmp
shl
xchg
xlat
in
in
rclb
hlt
out
repz
lret
fmul
sar
cmc
rolb
xchg
jmp
in
fmuls
shll
int3
shlb
iret
test
cmp
clc
stc
cld
call
rorl
shl
test
out
cmp
in
rcr
aad
clc
filds
int3
test
ret
ljmp
call
xlat
cmc
icebp
cli
rcl
fiaddl
int
loopne
jmp
repz
xor
aam
lret
cmp
int
ds
not
fdiv
enter
mov
xchg
fbstp
aad
std
cmp
aas
in
fmulp
aas
xchg
cld
lret
ljmp
iret
in
out
cmp
fnstcw
repnz
loopne
repz
faddl
in
repnz
xchg
xor
iret
repz
cmp
cmp
loope
rcr
addl
int
imul
das
hlt
in
repz
loope
sarb
cmp
ret
lret
lret
test
in
in
iret
loopne
enter
xor
cmp
sti
repnz
out
jecxz
in
xchg
and
xchg
rcll
cmp
cmp
aad
icebp
cli
loop
aad
ljmp
cli
xchg
shl
shl
ljmp
lret
repnz
cmp
test
lret
lret
xchg
mov
xchg
into
loope
ss
das
jmp
cmc
out
fld
sti
sarb
mov
test
cld
ror
xchg
lret
adc
enter
sar
xor
cmc
rcr
out
ffreep
out
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
popf
push
mov
jle
ret
jle
fadd
sar
std
mov
lea
sti
lret
ror
cli
cmp
into
ds
std
sti
lret
lret
xchg
mov
movl
xlat
fcom
filds
addl
loope
out
test
out
test
ror
ljmp
leave
loop
shl
ds
call
fcmovu
loopne
ror
jmp
fsincos
fldz
aas
clc
jecxz
lock
test
iret
adc
lock
int3
in
sar
jmp
std
repz
and
fmul
aas
in
rol
incb
mov
int
and
mov
lret
enter
aas
sti
aam
decl
call
mov
in
cs
stc
in
int
enter
cmp
ret
hlt
testl
roll
mov
loop
lock
iret
repnz
repnz
ret
cld
loop
icebp
fcoml
cmc
in
sarl
in
cmp
fstp
fst
test
lock
mov
repz
stc
enter
cmp
fnstsw
shl
in
rcl
out
loop
incl
xchg
into
cmp
xor
call
fsub
fst
aam
cmc
mov
lea
loope
test
shr
ss
sti
xor
aam
call
test
fisttpll
in
mov
icebp
jmp
clc
lret
aam
lret
out
repnz
out
ffree
leave
out
cli
jmp
call
out
hlt
in
ss
aam
aaa
icebp
xor
out
xlat
ret
repz
imul
out
loope
in
test
in
test
ljmp
addl
cli
ror
jmp
lret
in
xor
sarl
cmp
sbb
roll
mov
sar
in
xor
ret
hlt
out
cmp
fsubp
mov
out
loopne
aad
mov
loop
sti
loopne
mov
fcomp
cmp
fidivrs
divl
lock
enter
fimuls
add
rol
rcr
and
outsb
mov
ret
jle
ficoml
das
lret
rcl
xbegin
sar
mov
ljmp
sbb
loop
nop
sub
test
aaa
jmp
cmp
aam
jmp
fxch
mov
out
into
out
int
cmc
in
sub
aam
cmp
incb
cmc
cli
int3
call
xchg
in
xor
shlb
loopne
fnstsw
sbb
test
filds
into
test
ss
enter
cld
ljmp
cmp
idivl
iret
cld
out
jecxz
int3
cmc
cmc
out
cld
mov
jecxz
icebp
clc
addl
ljmp
xor
sar
call
aad
in
rol
xlat
addl
xchg
hlt
loopne
xlat
hlt
lret
repnz
sti
rol
fiaddl
mov
xchg
shl
in
fmul
cld
into
jmp
cmp
loopne
lock
fdivr
sub
std
in
xchg
lret
jmp
repz
out
fcmovbe
int3
cmp
out
clc
ret
xchg
ror
shl
fdivs
repz
fbstp
sarb
cmpb
and
loop
nop
in
mov
test
cmp
fcmovu
fst
jmp
ds
fsubp
loopne
loope
mov
loopne
xchg
ljmp
sti
sar
out
out
stc
fmul
fsub
sar
test
loope
leave
test
in
imulb
lret
xor
into
xlat
dec
lret
loop
shr
test
in
xchg
das
cmp
fcmovnu
in
xor
std
rcl
xor
cmp
enter
filds
fmull
int
rcl
aad
cmp
fstp
fmul
lock
cmp
cmp
and
xor
jmp
fidivrl
cmp
add
sti
aam
test
in
test
mov
out
das
lret
rol
xor
leave
fadd
ror
cmc
sti
sar
faddp
cmc
jmp
ror
loope
mov
jmp
fadd
lret
fstp
aad
mov
cmp
mov
das
cld
dec
jle
ret
jle
out
jmp
enter
mul
aad
xlat
sar
sbb
fdivr
clc
cmp
mov
xchg
loopne
jmp
not
repnz
rcl
testb
stc
fiadds
xchg
ret
out
not
shl
jmp
test
out
incb
lret
test
in
jmp
enter
cmp
loope
shl
xlat
fdivr
in
xor
xchg
out
repnz
jmp
mov
fdiv
mov
xor
loope
testb
ror
lret
std
testb
in
out
clc
sar
iret
lock
fadd
addb
ljmp
xchg
repnz
cmc
in
sti
lret
shl
loop
fcmovnb
in
rcl
mul
addl
out
jmp
xor
clc
repz
aad
cmp
repz
sti
iret
lock
frstpm(287
int
test
sti
cmp
iret
aad
icebp
fptan
std
rcl
cld
fsubrp
xchg
sti
cld
in
repnz
xchg
div
clc
repz
rcl
cli
fcmovnu
xlat
jecxz
xlat
fcmovbe
fld
enter
into
stc
std
in
jmp
into
shr
rcl
xor
stc
cli
fptan
ss
fisttpll
xchg
fcmovne
leave
mov
loope
out
repnz
fdivrp
ret
flds
mov
out
xchg
lret
fldl
int
shr
cmp
fyl2x
fcmovu
ds
push
in
xchg
out
mov
fdivr
cli
out
and
lret
xor
cmc
xor
xor
xlat
int
lock
shr
mov
popl
xchg
loopne
cs
lret
cmp
cmc
aaa
shr
sti
sbb
fildl
int
decb
iret
xor
clc
jmp
aaa
cmp
clc
lock
shl
xchg
out
fisttps
jecxz
int3
xchg
xchg
lock
in
cli
repnz
cmc
test
repnz
ds
cmc
leave
cmp
leave
fistl
fists
cmp
xlat
aaa
clc
hlt
cli
fcomi
out
cmc
xchg
orb
mov
in
in
xor
mov
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
push
inc
push
jle
ret
jle
shr
fcmovnu
call
out
cmp
decl
mov
stc
in
std
into
mov
cmp
repnz
lret
loop
cli
lock
cld
fcomip
lret
fst
jecxz
repnz
leave
clc
ljmp
cmc
into
iret
int3
fstpt
loop
fadd
rcl
jmp
adc
icebp
xor
rcl
jecxz
iret
fnstsw
iret
xor
icebp
mov
mov
xor
out
rcl
cmp
idiv
clc
std
test
test
loop
mov
repnz
cmp
fsqrt
aas
fdivrl
aad
fcmovnbe
jmp
sti
in
in
out
in
rcl
clc
sub
idiv
cli
lret
cmp
into
icebp
in
clc
cmp
orb
fsubr
or
leave
lret
into
mul
repz
clc
cmp
stc
lock
loope
fiadds
lea
xchg
jecxz
imul
int3
jmp
lret
iret
adc
in
cld
cmc
loopne
mov
orb
das
repz
stc
int
hlt
or
fdecstp
xchg
sbb
aad
incl
mov
iret
xor
cld
sti
hlt
shr
iret
ror
out
iret
out
cli
mov
in
roll
icebp
shl
xor
aaa
fcmovne
cmp
loope
fcmovb
cli
repz
ljmp
out
cs
out
hlt
aaa
out
loopne
sar
aad
testb
frstpm(287
out
ljmp
fidivl
lret
into
fcomp
sar
loop
std
cmp
jecxz
jmp
mov
repz
icebp
into
xor
iret
fdivrp
rcr
in
out
sar
in
lea
xchg
cld
jmp
repnz
sti
call
fidivrs
loopne
icebp
lock
cli
fisttpl
cmp
shl
loope
repz
repz
fcmovbe
cmpl
loop
std
fdivr
test
lock
ret
hlt
iret
xor
lock
mul
and
int3
mov
cld
mov
icebp
in
mov
xor
xor
fldl
jmp
xlat
into
ror
fxch
flds
jp
pop
inc
fidivl
jle
add
aam
int3
ljmp
cmp
cmc
out
out
xchg
int
loop
xor
fsubr
lock
idiv
ret
loope
in
jecxz
lret
mov
fiadds
xor
std
std
sbb
cli
repz
test
fdivp
lret
stc
jmp
addb
loope
jecxz
iret
cli
int3
repnz
loop
in
rcl
fyl2x
hlt
xlat
adc
out
mov
iret
xor
shrl
in
xor
sarl
fmul
loope
xor
in
fsubrp
mov
test
lock
clc
call
in
iret
cmp
add
addl
test
dec
mov
xchg
out
lock
xlat
aaa
cmc
stc
cmc
rcr
ljmp
vshufpd
jmp
mov
xchg
out
into
into
sti
ss
hlt
aam
sub
jecxz
movl
jecxz
sbb
mov
xor
aam
out
in
xlat
mul
jecxz
and
sbb
hlt
test
leave
loopne
loopne
out
xor
fidivrl
cmc
fcomi
fucomp
cld
stc
int
cli
ds
cli
clc
xchg
lock
in
xor
lret
cmc
rcl
cmp
call
loopne
sub
orl
cs
out
int
jmp
ret
shl
repz
in
lret
test
call
ret
xor
shl
int3
sti
cmp
addb
fucomp
call
icebp
ljmp
xor
out
in
sarl
in
cmp
cmp
aam
ffreep
sub
lret
out
call
ror
call
ret
cmp
mov
adcb
out
lret
cmp
sar
cmp
ret
ds
aam
stc
ds
mov
loope
enter
fadd
cmp
imul
cmp
mov
cli
cli
and
out
test
rorb
clc
in
std
shl
adc
cmp
jecxz
aad
not
xchg
cld
leave
call
test
lock
in
not
hlt
aas
clc
mov
jmp
lret
leave
int3
aam
aad
fnstcw
ficompl
aas
lcall
ret
jle
idivb
xlat
idivb
std
std
les
int3
mov
lret
call
xlat
cmp
fcomi
into
repnz
aas
cli
fmuls
enter
out
in
and
mul
ret
shlb
cld
ds
inc
stc
ds
jmp
mov
rclb
out
xor
sar
xor
jmp
dec
faddl
loop
out
fisttps
rcl
shl
fdivp
fstpt
ret
test
std
mov
fsubp
mov
lret
hlt
mov
cmc
aaa
aad
xor
out
jmp
xlat
fucom
addb
std
lock
jecxz
bnd
loop
shl
ljmp
addb
hlt
out
cld
enter
fisttpll
in
into
fyl2x
fsqrt
cmp
fdivs
cli
call
fiaddl
xor
shl
fdivs
shr
out
int3
clc
cmp
fldl
mov
decl
ror
imul
leave
out
std
leave
cmp
xor
out
sar
iret
aas
fstp
out
ret
div
mov
xchg
int3
hlt
out
mov
in
into
divl
cld
hlt
cmp
iret
ds
jmp
sar
std
repnz
jecxz
clc
jmp
loope
iret
iret
jmp
fidivl
aam
jecxz
xor
mov
mov
nop
xchg
jmp
xlat
jmp
hlt
cmp
and
fucom
std
in
jmp
sti
fsub
push
nop
iret
aam
out
xor
aam
fnop
rcr
loop
fdivr
idiv
xor
ret
out
testl
sar
fnstcw
jmp
cmc
sarb
std
test
mov
cli
lret
out
lock
in
iret
sbb
into
cld
ss
rolb
leave
movl
mov
shr
out
xor
rol
fsubr
loop
fld
fcmovnb
in
fimuls
out
ret
xor
xor
lret
in
fcomp
out
xchg
rcl
ret
lret
jecxz
xchg
std
testb
aam
out
out
lock
mov
jmp
rol
int3
fmul
aad
mov
pop
cltd
loope
pop
jle
ret
jle
test
cld
cli
fildl
out
xor
xlat
sub
clc
lds
fstp
not
icebp
in
cmp
ret
orl
sub
icebp
into
repz
cmp
fsub
icebp
fldl
fdivrp
in
icebp
xrelease
call
out
hlt
loope
cli
or
mov
int3
stc
std
std
leave
sub
xor
loope
imull
cmp
clc
in
into
xlat
add
jmp
addb
ficoms
fxch
repnz
sti
sar
cmp
jecxz
xchg
add
fstp
sti
out
rcl
xor
sub
hlt
stc
aam
jmp
sarl
aad
ds
neg
clc
test
out
mov
lds
loop
xor
cli
cli
fcmovbe
rcl
out
test
into
shl
out
out
cmp
enter
repnz
jmp
call
repnz
shl
cmp
in
cmc
cmc
jecxz
mov
in
call
shl
out
fdivrs
in
out
int
test
mov
stc
sti
stc
int
repz
mov
hlt
ret
out
les
icebp
in
iret
sti
int3
sar
cli
rcr
cmpb
leave
sti
in
shl
jmp
lock
cmp
int3
jmp
fdivp
stc
flds
roll
mov
hlt
aad
out
into
fstpt
xlat
rolb
hlt
mov
mov
jmp
aam
loop
jmp
xor
cmc
sti
rcr
cmp
fchs
out
jmp
out
clc
out
mov
in
out
aaa
ss
out
cmp
std
int
int
int
and
rol
dec
int3
leave
mov
xlat
shr
call
cld
std
sar
test
icebp
cmc
cld
lret
out
sti
lock
ror
out
aam
repnz
loopne
repnz
ds
hlt
icebp
fadd
repz
mov
fildl
loopne
shr
sarb
ss
hlt
repnz
aas
out
into
cmp
call
mov
stc
int
mov
out
cmp
aas
clc
ljmp
jmp
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
cwtl
cltd
iret
push
pop
jle
ret
jle
loope
mov
mov
nop
repnz
into
cli
test
hlt
sub
xor
clc
repnz
loopne
out
fnsetpm(287
repnz
fprem1
ljmp
loop
shl
sbb
lret
test
filds
xor
repz
cld
sar
out
fstp
in
jmp
cld
ljmp
in
clc
lret
cmc
sar
incl
fstp
sbb
mov
iret
xorl
repz
int3
iret
ljmp
addl
adcl
into
clc
xlat
iret
jmp
jecxz
std
div
enter
lret
jecxz
sub
call
sub
xor
int3
int
shl
jmp
bnd
out
rol
loope
flds
jmp
into
xor
divl
test
out
sbb
icebp
inc
shl
jmp
or
xchg
xchg
jmp
sti
cmp
shr
cmp
in
cmp
fcmovb
mov
into
xchg
aam
xlat
into
jmp
fnstenv
jmp
cmp
roll
in
out
cli
icebp
int
std
in
hlt
aam
aam
shr
ss
out
fiadds
in
clc
in
int3
int3
mov
xorl
cmp
fcmovne
cli
shl
faddl
ljmp
mov
into
mov
fsqrt
cmp
shl
shll
cmp
aas
iret
jmp
in
jmp
xchg
nop
loope
ljmp
in
cmp
lret
into
cmp
mul
call
aad
leave
into
enter
iret
call
ret
aam
cmp
std
repnz
cmp
jmp
xchg
cld
out
xchg
fmul
sub
jecxz
sti
call
sar
cli
loopne
jmp
fldln2
lret
mov
shll
int3
fdivrs
cld
cmp
aad
lock
shl
les
ljmp
out
out
xor
in
xor
ljmp
rcl
rcl
icebp
call
clc
mov
jmp
into
aad
vpaddusw
aad
js
jg
jmp
push
ret
jle
out
fcos
jecxz
lock
test
div
aad
enter
sub
aad
loop
addb
jmp
hlt
out
ffreep
xor
xor
add
iret
fstp
enter
fninit
testl
cs
fcmovbe
cmc
adc
sti
sar
cmpl
fmuls
loope
ret
lock
das
repnz
cmp
lret
int3
leave
sbb
std
dec
xchg
xchg
int3
iret
shrl
fscale
into
cmp
fidivl
cmp
out
xchg
in
lret
or
sar
repz
repz
xlat
fld1
fdivp
cmp
hlt
rcr
cmp
loope
out
fadd
mov
repz
sub
aad
clc
cmp
test
fstp
xchg
ljmp
jmp
in
icebp
fiaddl
xchg
sub
mov
out
repnz
divl
loope
iret
cmp
aam
repnz
cli
xchg
out
std
cli
lret
frstpm(287
in
iret
icebp
xchg
hlt
repz
divl
cmp
cld
xor
fcmovnu
not
cmc
jecxz
iret
mov
ror
repnz
out
int3
stc
lret
xor
cmp
in
out
std
ret
cld
aad
enter
out
in
hlt
shl
aad
sub
cmp
cmp
sti
repnz
xlat
int
adc
test
fcomi
jmp
xchg
jmp
aad
stc
push
in
std
out
fiaddl
hlt
stc
mov
in
xchg
out
hlt
ret
out
imul
iret
std
ror
jecxz
xchg
adc
fisttpll
iret
hlt
subb
cmc
cmp
idivb
xlat
aam
loope
fcomp
sti
in
test
fsub
loop
enter
icebp
into
fdiv
ret
test
std
cmp
clc
aas
idiv
stc
fmull
jmp
sub
sar
out
leave
cmp
aam
loop
enter
test
loop
jecxz
in
xor
stc
ret
shlb
cmc
cmp
fidivs
out
fsub
loope
cld
testl
scas
xlat
sub
jmp
aad
int3
fmul
fnstsw
seto
pop
jle
ret
jle
repz
loope
lock
loope
cmp
enter
jmp
loop
cmp
sbb
lret
into
jecxz
nop
test
ljmp
rcl
repnz
int
cmp
ret
test
testb
in
mov
mov
hlt
cmc
rcl
lock
out
idiv
ret
fdiv
xchg
mov
enter
mov
xchg
fsubp
in
nop
xor
jecxz
int3
cli
fucomi
ljmp
out
out
mov
sar
xchg
rclb
fadd
leave
in
fidivrl
fdivr
fsin
out
ret
aas
ljmp
int
nop
rolb
lret
fidivl
aaa
repnz
cmp
fcomip
ds
aad
fsub
dec
mov
fcmovne
mov
fucom
ror
jmp
call
ds
stc
adc
shl
mov
loopne
in
jecxz
fyl2x
loop
sti
mov
out
std
leave
out
jmp
clc
std
cli
fstp
mov
out
test
ljmp
imul
cmp
iret
hlt
cmc
shl
xor
mov
xchg
nop
adcl
cmc
lret
fistpll
aam
jecxz
jecxz
repz
imul
out
rol
in
xlat
shl
stc
cmc
sub
rcl
call
fmuls
in
int3
loop
jmp
xor
aad
clc
iret
clc
cmp
shl
orb
or
rcr
fsubrp
aas
das
xor
jmp
in
xor
rcr
cmpl
lock
fimull
lret
or
repnz
fsub
fcom
xlat
lret
fmulp
jmp
loope
stc
cli
cmp
aad
mov
xchg
leave
repnz
xor
lret
cmp
div
iret
int
test
not
cmc
cmp
loop
out
xchg
xchg
aam
hlt
clc
leave
repz
lret
jmp
out
std
test
cld
loope
icebp
stc
std
cld
fdivr
fcmove
in
xchg
loope
loope
repnz
cld
cmp
lret
cmp
addl
cmp
repnz
int
xor
ljmp
loopne
cli
call
leave
jecxz
out
lea
jmp
mov
mov
jmp
int
iret
rcl
fcmovne
fnstcw
sub
popa
jle
ret
jle
cmc
rcl
xor
aaa
std
leave
cmp
sarb
loopne
rcr
mov
jmp
xchg
out
sub
rcl
aam
icebp
ljmp
icebp
stc
stc
mov
in
mov
xor
rcr
clc
jecxz
addl
sti
ror
loope
adc
out
cmp
aaa
in
imul
fsub
in
fstp
out
and
test
repz
cmc
jecxz
aaa
stc
fcomp
fsubr
cld
icebp
clc
aad
cld
lret
xchg
int
lret
sub
xor
cli
lock
div
stc
int
fmulp
xor
call
mul
xchg
in
out
in
clc
test
ror
fcmovbe
sti
sbb
lret
cmp
icebp
lock
fldl2t
lret
cld
sti
out
mov
xor
enter
in
int
cmp
and
add
test
std
sti
fisttpll
cmc
jmp
shl
xor
leave
aad
lret
shl
jecxz
cmp
loope
lret
lock
xchg
lret
repz
in
xor
imul
aad
faddl
fdivr
fcmovne
iret
hlt
loope
xchg
in
loope
lock
into
out
lret
not
out
in
std
fdivrp
fcom
sub
mov
or
repnz
leave
int
int
icebp
ror
filds
sbb
test
pushl
loopne
xor
int
cld
rcr
fcmovne
aas
cmp
lret
imul
mov
cld
lea
clc
aad
not
rcl
sar
rol
mov
mov
orb
shl
call
sti
call
idiv
dec
into
rol
enter
mov
std
lret
fmul
addb
ss
ret
cmc
std
xor
bnd
out
stc
enter
mov
xor
cmc
hlt
in
fucomip
cmp
aam
fiaddl
jmp
mov
loop
mov
xchg
xlat
xor
ret
xor
jmp
cli
ret
test
mov
out
ljmp
fstpt
sti
jmp
int
int3
int
cmc
inc
cwtl
mov
arpl
ret
jle
rcr
not
jmp
fptan
in
fmul
sti
in
fsub
neg
out
fldl
faddp
out
out
fcmove
repz
std
repnz
aas
loopne
and
mov
int
enter
jmp
cmp
aaa
clc
ljmp
out
loop
ret
incb
loopne
out
iret
aam
aam
fsincos
sarb
push
jecxz
shl
jmp
cmc
xlat
mov
ficoms
int3
jmp
into
out
in
enter
jmp
clc
test
cld
lret
lret
jmp
nop
lea
lret
xor
ret
sub
cmp
aam
sar
lret
mov
fucomip
loop
out
in
icebp
ss
fucomi
cld
cmp
fmuls
lret
loopne
out
int
xchg
bnd
fpatan
repz
out
faddp
cmp
cmp
mov
mov
lea
xchg
rcl
xor
bnd
jecxz
in
aas
in
cmp
leave
mov
aad
iret
cli
ss
lret
cmp
faddl
fsubp
and
jmp
addb
loop
rcr
loope
fnstcw
clc
xlat
test
in
cli
sub
in
jmp
icebp
int3
enter
stc
out
aad
out
lock
ds
std
cmp
aad
hlt
leave
cli
out
std
xchg
and
shl
xor
shr
repz
jmp
sarl
cmp
lret
out
cmp
int
lock
stc
repnz
fmul
cli
cmp
sti
xlat
loope
cmc
fld
fiadds
lret
out
fucomip
repz
xlat
lds
ss
rcr
and
rcl
ret
cmp
add
sbb
mov
in
shr
mov
in
in
cli
imul
in
aad
and
cmp
enter
out
loop
fimuls
aaa
les
cmp
in
icebp
cmp
xlat
cmpl
cli
mov
sar
xchg
shrb
aad
jmp
enter
aam
sarl
in
in
loop
test
cli
into
mov
mov
lret
out
je
mov
jmp
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
ds
add
cmp
addl
lret
cmp
in
stc
lret
fldcw
cmc
fdivr
jmp
jecxz
fcmovnu
cmp
mov
faddl
cmc
clc
stc
hlt
lret
shr
repnz
test
xlat
enter
add
ret
iret
sub
fucomi
aad
rcr
rol
shr
loop
mov
addb
fdivs
cld
cmp
xor
fldl
mov
cmp
ljmp
mul
leave
jmp
cmp
fcomi
out
aad
repz
out
mov
in
add
clc
shl
xor
sbb
sbb
repnz
std
sti
mov
popl
out
cli
out
in
cmp
call
aad
out
mov
loopne
test
loope
shl
cmp
stc
int
shlb
jmp
rcl
out
fiadds
into
in
xchg
icebp
sub
leave
fld
shl
xor
lret
in
fcmovnbe
in
fld
fxch
out
int3
or
lret
xchg
cmc
int3
lret
int
int3
mov
fld
clc
mul
sti
loope
in
jmp
mov
ss
lret
jmp
ret
cld
mov
cmp
int
test
int
shr
out
rcr
repnz
fucomp
into
aad
add
imul
leave
in
leave
xchg
xchg
lret
int3
leave
aam
out
clc
cmp
cmc
fisttpll
testl
shr
repz
in
leave
call
loop
jmp
in
loop
stc
sti
call
in
aad
aad
cld
cmp
shl
loop
test
hlt
stc
std
enter
fildl
fucomip
xchg
leave
cmp
clc
iret
fcmove
aaa
fcomip
test
out
enter
icebp
nop
test
jmp
loop
jmp
idiv
ret
ds
stc
out
lret
fildl
and
iret
xor
xor
rcl
leave
cmc
addl
jmp
mov
jmp
ret
int
fstl
mov
fidivrl
ret
jle
cmp
filds
fildl
icebp
stc
shl
mov
out
icebp
jecxz
icebp
jmp
xor
hlt
ret
sarb
in
sar
or
repz
xor
in
fsub
int3
repnz
aad
test
fadds
loop
incb
out
int
std
xor
xor
shl
xchg
aas
enter
xchg
fxch
iret
leave
rol
loope
fldcw
jmp
cmp
cmp
flds
testl
hlt
xor
aam
cld
icebp
cld
cmc
aad
icebp
movb
faddl
call
xor
mov
incb
sar
icebp
loope
stc
cli
fucomi
fsub
loop
xchg
std
nop
hlt
ss
xor
iret
leave
lret
shl
aam
cmp
shl
fsub
in
mov
loope
incb
hlt
lret
fdiv
cmp
shl
enter
in
std
fsubr
in
ljmp
cmp
fdiv
aam
push
ret
cli
fildl
loopne
in
xchg
call
aam
int
shl
cld
cld
call
ds
div
ljmp
repnz
call
mov
xor
leave
xor
sub
rcr
xor
add
std
fildl
in
in
icebp
xor
div
cld
rcr
int
std
out
fadd
fadds
in
loopne
xor
int3
les
cmpl
xchg
in
mov
in
in
iret
in
das
jmp
xlat
aad
ffree
cld
call
ds
fucomip
stc
shl
in
hlt
and
lock
std
repnz
jmp
repnz
hlt
cmp
fdivr
aam
lret
dec
cmp
incb
int
lock
fsub
icebp
out
cmp
mov
mov
mov
mov
repnz
hlt
loop
lret
repz
loopne
in
cmc
in
roll
fcmovnu
loope
lock
xchg
mov
fisttps
out
iret
fstp
fsubp
repnz
outsb
jmp
int3
ret
int
mov
pusha
das
mov
stos
outsb
lods
push
jle
add
sarl
out
in
xchg
out
out
xchg
rorb
int3
rcl
xor
cmp
aaa
int
iret
aam
test
fucomip
fisttpll
test
in
out
repz
aad
cmp
int3
loopne
cli
testl
in
ljmp
int
hlt
rcl
lret
in
xlat
xlat
shr
shr
test
fisttpl
lret
repnz
xchg
icebp
call
xor
in
xor
cmp
jmp
fidivrs
fsub
les
rol
cld
xlat
out
loopne
in
lret
xchg
into
rcr
cli
fucomp
aas
iret
idivb
std
neg
out
neg
fsqrt
test
test
iret
out
rcl
or
lock
cmp
int3
repnz
fldl
test
lret
mov
iret
hlt
in
loop
cmp
lret
lret
dec
lret
repz
out
call
mov
into
out
loop
dec
xor
icebp
lret
cmp
call
cmp
ret
call
ret
test
mov
xchg
xchg
jmp
in
fst
hlt
sub
loop
stc
fsub
in
fisttpll
sar
xchg
out
in
in
rcl
ds
fsubp
std
cmp
decl
cli
jmp
loopne
int
stc
out
lret
aaa
shl
cmc
shr
xor
cmp
sub
jmp
xchg
int3
hlt
jmp
enter
aad
out
repnz
mul
out
loope
jmp
leave
neg
fstp
mov
in
jmp
cld
cmp
filds
xchg
into
loopne
xchg
shrl
icebp
cmc
f2xm1
xlat
ljmp
addb
int3
fucomip
out
xchg
sbb
enter
aaa
int
out
ljmp
aam
mov
aam
sti
test
int
lock
hlt
jecxz
stc
cmp
call
clc
loopne
cld
shr
shl
fucomi
jecxz
lds
ffreep
rol
xlat
das
int
shl
jmp
lock
icebp
cld
cmp
lds
sub
mov
test
mov
fdiv
fstpt
dec
icebp
ror
faddp
ret
sbb
sub
call
in
jmp
aad
iret
aas
rol
aad
push
inc
push
popf
inc
fdivrl
jo
jle
test
jle
aam
loop
jmp
ljmp
ror
ror
divl
ds
loope
lock
sub
nop
mov
out
and
cmp
hlt
jmp
in
cmp
test
in
cli
aas
mov
leave
call
or
rclb
fcmovne
lret
faddl
ds
call
aas
jmp
loop
hlt
cmc
ret
sar
jmp
hlt
into
aaa
jmp
sarb
fiadds
in
in
int
xchg
std
rolb
ret
jecxz
aam
cld
cmp
loope
cmc
out
in
sti
rcl
ds
int
fisttps
leave
call
repz
stc
cli
jmp
fildl
jecxz
in
in
lds
div
int
xlat
cmp
jmp
fdivp
aas
test
ljmp
jecxz
roll
lock
in
sar
cmp
lock
icebp
ret
test
add
in
nop
icebp
jmp
xchg
call
enter
stc
hlt
lret
shr
fcomip
ret
out
sub
into
rcr
sub
xor
clc
in
fmul
aam
loopne
fcmovnu
dec
in
aas
mov
jmp
hlt
not
int
cmc
cmp
fcmovnbe
addb
movb
fmul
test
call
xor
lock
xlat
aas
sbb
mov
enter
mov
loope
icebp
out
shl
call
in
xor
sti
clc
sub
into
iret
in
enter
repnz
aam
int3
ror
sarl
testl
fcmovbe
jmp
fsubrp
mov
mov
fmulp
aaa
hlt
ss
cmp
repz
aam
repnz
filds
out
into
xchg
mov
ljmp
div
cmp
fcomp
aam
in
loop
in
fcmovnb
lret
cld
std
jecxz
sub
loopne
out
xor
ret
into
out
int
into
cmp
loope
jecxz
sar
repnz
orl
in
aam
enter
ss
cmp
fcmovu
sti
std
shl
cmp
xlat
lock
xchg
sbb
jmp
out
idivl
leave
into
bnd
fincstp
cmc
icebp
sti
out
sti
loop
in
out
xchg
sub
mov
into
lret
in
icebp
ror
fmul
cmpl
stc
loop
test
stc
out
fucomip
xchg
xchg
clc
imul
cmp
jmp
rcl
fistpll
ds
push
ret
test
sub
jmp
aas
into
lret
leave
aam
dec
jo
cltd
push
jle
test
jle
lret
iret
out
repz
ds
cmc
cmp
loopne
roll
loopne
addl
xlat
sti
sarl
repnz
cmc
rcr
test
test
mov
cld
test
mov
fisttpll
fidivl
repz
cmp
aam
aad
std
out
ret
ljmp
mov
ljmp
fcmovne
lret
aas
inc
fst
out
mov
mov
in
xchg
xchg
loope
nop
call
leave
xor
fstp
jmp
loop
xor
sti
mov
repnz
xor
fpatan
in
repnz
aad
and
stc
lret
int
stc
popl
xor
cmp
into
cmp
fidivrl
std
imul
int
clc
icebp
fcmovne
leave
in
out
mov
jmp
in
leave
fdivs
xor
cmc
ljmp
xchg
mov
out
cli
add
xchg
loopne
stc
shl
xor
lret
notrack
testb
std
aam
stc
in
in
test
out
lock
lret
hlt
xor
aam
cmp
std
aad
shl
aam
iret
call
lret
fucomip
not
clc
ljmp
xlat
std
fcmovnbe
in
and
xchg
into
leave
cmp
in
xlat
cli
rcl
lret
clc
hlt
fmulp
cmc
cld
loopne
cmp
xchg
call
out
fmul
rcr
in
cli
rcl
sarl
ds
shl
clc
call
fmul
in
int
mov
ret
into
in
cld
fdivrs
xor
loopne
std
fcomi
test
into
lret
in
xor
int3
sar
into
incl
cmp
jmp
faddp
enter
repz
xor
xlat
xor
ror
hlt
fiadds
icebp
lds
jmp
loopne
mov
in
iret
rcl
rcl
clc
ror
std
out
div
icebp
loope
loop
ret
in
loopne
in
icebp
test
in
ljmp
adc
repz
out
out
in
jmp
xchg
idivb
fcomi
int
ds
hlt
mul
repz
cmp
out
xchg
xchg
fcomip
jmp
loopne
cmp
loop
f2xm1
aam
fxch
neg
mov
mov
sti
std
xchg
lock
repnz
out
out
leave
cld
shl
test
aam
aam
loop
cld
mov
test
xor
rorb
push
jmp
int3
ret
int3
int3
sahf
pushf
vmread
jle
test
jle
into
xor
repnz
ror
cli
repz
in
movb
loope
call
out
in
shll
xor
fisttps
fadds
lock
clc
out
idiv
imul
into
fdiv
sti
cmp
int3
clc
rcl
ds
stc
in
xchg
jmp
iret
imul
ljmp
fsubr
loopne
cmp
cld
cmp
xlat
aad
ljmp
int
xchg
pushl
xor
xor
int
fcmovnbe
sti
sub
out
fdecstp
clc
jecxz
sti
sbb
loope
jmp
shl
enter
ss
icebp
sti
loope
sti
fildl
fdivrp
stc
fsub
out
shl
xchg
out
aas
fadd
hlt
ret
leave
out
cmp
cmc
cmp
cli
cli
ret
in
aas
lds
out
jmp
xlat
lock
not
stc
aam
int3
out
cmp
in
cli
addl
int3
out
jecxz
aaa
rcr
cmp
sti
icebp
fdivrl
fcmovu
ret
stc
jecxz
fcomp
loopne
rorb
rcl
fcmovnb
in
in
idiv
xlat
cmp
iret
rorl
sti
orb
in
in
hlt
lret
int3
lock
ds
jecxz
rcr
mov
cld
ror
in
out
mov
cmp
fdivrs
int
xor
fdivrp
std
cld
loop
mov
fdivrp
rclb
lret
repz
ret
les
out
into
jmp
repnz
test
lret
mov
icebp
jecxz
xor
jmp
cmp
repz
cmp
out
test
cmp
loop
in
rol
mov
jecxz
sar
fcmove
cmp
icebp
ret
fadd
in
ret
fcmovb
aad
nop
loope
lret
filds
cmc
cld
lock
xor
fucomip
in
loopne
out
test
stc
hlt
ret
jecxz
icebp
call
lock
ret
icebp
into
xor
xor
lock
fyl2x
fucompp
out
cli
or
icebp
ret
fmul
ljmp
neg
cmp
sarl
sbb
ret
iret
rcr
mov
mov
in
out
not
in
shl
cld
sti
aaa
cli
mov
jmp
add
xlat
call
jecxz
out
xlat
lock
repnz
fistpll
rolb
ds
clc
loop
mov
shl
call
cli
hlt
int
out
aaa
loop
push
loopne
cmp
fimull
fildl
iret
xor
leave
leave
fsubr
cld
clc
repz
aas
repz
xchg
dec
or
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
outsb
je
jle
add
out
cli
incl
sti
xchg
mov
xor
ret
std
fld1
enter
repnz
fimull
mov
hlt
xchg
cmc
iret
call
into
jmp
fcmovnu
orb
sub
in
fcmovbe
jmp
shr
ret
jmp
call
xlat
in
sar
sar
fsubp
fdivr
xchg
xchg
das
aad
aam
ljmp
aas
rcr
icebp
ret
addl
repnz
xchg
jecxz
int
shlb
jmp
loope
aas
sti
cld
loope
fiaddl
lret
xchg
xchg
sub
cli
cmp
leave
aas
fsubr
lock
rcr
jecxz
mov
fcomip
in
enter
icebp
jecxz
loope
in
lret
cmp
call
fiaddl
in
ljmp
fst
out
xor
das
cmc
cmp
jmp
cmc
icebp
sbb
mov
in
stc
out
fsubp
into
enter
fcomi
int
fistpll
ds
fdiv
ds
int3
out
jmp
lret
repnz
iret
cmp
jecxz
clc
fdivrs
std
into
loopne
sar
repz
fucomi
hlt
stc
mov
leave
mov
repz
xor
xor
out
rolb
cmp
ds
in
rol
fprem
add
iret
aas
lret
in
cmp
shll
fiadds
in
lret
int
out
out
jmp
mul
std
out
aas
cli
inc
testl
icebp
out
jmp
out
cld
fld
lret
repnz
loope
std
ffree
cmc
int
cld
jmp
orl
call
rol
aam
aas
repz
popl
not
aad
int
enter
sti
adc
fucom
rolb
fistl
aas
hlt
sub
sar
rcr
sar
test
rol
mov
icebp
fcmovne
xchg
loope
xor
aad
out
xor
in
iret
fst
rcr
loopne
loope
std
mov
fninit
in
faddp
iret
in
out
ret
jecxz
into
call
cmp
aam
ret
in
fcmovne
cmp
mov
in
in
div
loop
in
xor
jmp
cmc
rol
fcom
loop
jecxz
out
stc
in
mov
into
repnz
in
jmp
jmp
lret
shr
cmp
cli
ret
idiv
sar
cmc
sti
fimull
ret
add
aam
rcl
aad
inc
xor
xor
cmpl
jle
add
adcl
cmc
clc
in
loop
jmp
out
repz
ror
int
loop
mov
lock
jmp
in
xlat
fsubr
enter
sub
lock
repnz
clc
enter
sub
mov
in
in
xlat
fidivl
cld
repz
in
lock
test
loopne
repz
in
test
out
xchg
out
out
aad
cmp
repnz
icebp
cmp
cmp
loop
in
mov
fiadds
jecxz
xlat
ret
fsubr
clc
loopne
cmc
lret
test
loopne
fnstcw
out
ret
call
fucomp
out
jmp
in
sti
xor
iret
jmp
cmp
call
fisttpll
jmp
cli
xchg
int
loopne
jmp
xor
aaa
int
shl
cld
sar
dec
fld
repz
jecxz
out
lret
repnz
roll
cli
aad
ror
cmp
cld
test
cmp
hlt
xchg
fsub
ret
out
into
loopne
sar
jmp
jecxz,pn
fcmovne
fcmovbe
call
ror
sti
not
loopne
enter
sti
incl
call
in
out
in
in
cmp
aas
cmp
rolb
jmp
xchg
ljmp
shr
int3
fidivl
xor
cmp
testb
cld
xchg
in
int3
into
ror
nop
xchg
int3
cmc
xor
sti
in
cmp
rolb
fucomip
cmc
ljmp
fcoml
ret
in
in
cli
not
ds
sti
cmp
aad
lret
enter
mov
repnz
stc
iret
xor
in
repz
std
icebp
call
clc
call
mov
idiv
clc
leave
cmp
ss
fucom
out
div
fucom
std
mov
loopne
mov
test
in
xchg
sub
enter
call
out
into
xchg
jmp
add
lret
int3
shl
xor
in
lret
cmp
aad
fdivr
aam
std
lock
test
ret
xchg
lret
enter
fdiv
rcl
loopne
cli
cli
clc
fisttps
nop
xchg
mov
ret
aam
out
cld
fxch
sti
cmc
std
xor
loopne
mov
out
cld
test
adc
aad
repz
xlat
int3
cmpb
std
rorl
test
enter
ljmp
int3
aam
rcr
loop
fnstcw
jecxz
aas
sbb
loopne
mov
xchg
in
xchg
adcl
add
add
jmp
mov
fcmovnu
or
sub
lret
ret
jle
add
clc
divb
clc
clc
fadds
add
sti
mov
mov
filds
lret
ss
out
loope,pt
cmp
shl
loop
lret
leave
fcoms
into
in
hlt
ljmp
ljmp
iret
cmp
ljmp
test
loop
rcr
sar
xlat
cmp
lock
in
repz
test
hlt
test
out
decb
mov
out
jmp
fucomi
leave
lock
in
stc
ret
jmp
enter
iret
rcr
ror
into
fsubr
sti
fdiv
into
repnz
test
stc
mov
mul
out
sti
hlt
xchg
cmc
imulb
xor
xor
aad
call
out
std
sbb
decl
in
xchg
push
fbstp
leave
imul
out
cmp
ret
in
not
idiv
ret
and
fsubp
cld
mov
test
call
in
div
rcr
shl
enter
enter
repnz
iret
mov
xor
das
repnz
lret
cmp
int3
into
xchg
sti
repz
mov
mov
loopne
int3
int
in
iret
out
lret
jecxz
shr
xlat
stc
idivb
fdivp
ret
xor
mov
dec
fsubp
std
out
loope
incb
shl
cmp
out
std
fcmovbe
fmull
out
mov
jmp
xor
aam
cmp
aaa
lret
aam
out
aam
rol
imul
cli
call
mov
icebp
lret
out
fmull
in
cmp
cld
leave
fucomip
fdivrp
fsub
shl
add
sar
rcr
repz
ret
leave
in
iret
aam
ljmp
cmc
addb
mov
leave
in
out
xchg
clc
cmp
cmp
int
hlt
jmp
aam
fld
fcmovu
cmc
incb
dec
roll
in
lret
cmp
in
loopne
adc
cmp
ljmp
out
incb
jecxz
fnstsw
fdiv
clc
and
repnz
ret
mov
roll
aam
into
aaa
cmp
loope
cmp
cmp
xchg
test
xchg
xchg
int3
into
int3
aad
fcmovne
fdivs
fstpt
lret
int3
cmc
sti
loope
rol
ret
fiaddl
lret
xchg
test
sti
iret
into
fincstp
aas
cmp
int
fsubrp
loope
ret
lea
test
fsubr
lock
xor
cmp
not
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
cmpsb
fs
insb
jl
jle
add
cli
fucom
out
orl
repz
rol
cmp
cmp
fnstsw
in
aad
ret
sbb
fstl
in
ficoms
icebp
enter
jmp
into
aam
rcl
fsubrp
aas
hlt
aad
stc
incb
test
test
cld
cmp
fnstcw
icebp
idiv
and
mul
into
jecxz
hlt
std
aam
ret
into
repz
ljmp
shl
out
mul
jmp
in
fimuls
ss
cmp
into
xor
aad
repz
sbb
mov
int
out
fcmovnu
fcoml
xor
fisubrl
idiv
aam
cmp
ret
test
aas
in
xlat
lock
loope
rcl
jmp
into
shr
xor
cmp
ret
stc
sti
enter
xor
fstp
mov
cmp
mul
iret
xor
rcl
cmp
int
repz
adc
loop
in
sti
in
cli
in
orb
clc
xor
cmpb
mul
cmp
sar
test
std
test
jmp
aaa
aas
cmp
test
icebp
stc
out
loopne
sub
sbb
rcl
fsqrt
rcr
aam
jmp
stc
xlat
fisttpll
int3
xchg
and
sbb
jecxz
fdivs
in
hlt
jmp
xlat
cli
int
cld
xlat
fldl2e
xlat
and
out
xchg
or
xchg
icebp
aaa
rcl
sarl
into
cmp
int
aam
loopne
in
cmc
inc
sub
lret
sti
jmp
loop
icebp
jmp
lock
into
shr
leave
iret
cld
fst
repz
out
cmp
aam
lds
jmp
enter
in
cmp
iret
iret
jecxz
rolb
ds
into
clc
out
cmc
xchg
mov
lock
xor
cmp
cmp
loope
out
rolb
fsin
fldl
out
stc
aad
aad
ds
iret
clc
fucom
cmp
vpsllw
xlat
fdivr
int
sti
loopne
dec
mov
xor
icebp
in
cld
icebp
cmp
fdecstp
cmp
in
in
aam
cmc
cli
mov
std
loopne
mov
test
repnz
in
clc
sar
out
in
repz
test
popl
iret
int3
shl
aam
fdiv
hlt
adc
fcomip
cmp
fucomi
loope
out
sub
lret
xchg
ret
lock
repz
jmp
repz
ret
xor
mov
in
movl
add
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
fcomps
jle
add
xlat
in
mov
cs
leave
cmc
ljmp
sbb
sti
shl
aad
loopne
leave
stc
lret
incl
rcl
xor
cmp
cmp
aam
repz
cmp
lret
push
and
lock
out
xor
out
repnz
xor
fpatan
loope
fucomi
out
cmp
test
mov
jecxz
adcb
in
sub
xor
fnsave
div
hlt
ret
xor
sti
mov
flds
iret
xchg
rolb
sar
iret
xor
cmc
int3
repz
clc
aad
cld
dec
in
mov
jmp
jecxz
stc
lret
cmp
into
xor
cmc
cmp
test
ljmp
ficoms
iret
cmc
iret
int3
ror
call
fiadds
out
fdivrp
mov
fxch
out
xchg
loop
loop
shl
into
cli
cmp
into
fmul
iret
into
fcom
fscale
addl
sub
mov
out
jmp
cmp
aad
std
cld
call
leave
and
jmp
xor
iret
fdivrl
cmp
hlt
loopne
f2xm1
fnclex
orb
ljmp
xor
out
xor
stc
cmpb
into
orl
nop
iret
mov
aaa
cmp
leave
ror
lock
lock
loopne
rolb
xlat
fldl
iret
ljmp
aad
lret
xor
rol
jmp
int
xchg
shr
nop
xchg
cmc
ljmp
ss
into
fidivrl
hlt
mov
fsubr
cli
call
out
cld
fmulp
xor
lret
repz
stc
repz
neg
addb
cmc
ljmp
jmp
shl
xchg
into
cmc
lock
in
lret
cmp
fucomp
loopne
ffree
cld
sti
repnz
ljmp
into
ljmp
int
sarl
ljmp
aam
aam
flds
adc
or
shll
icebp
stc
ljmp
or
out
ljmp
call
loopne
xor
cmp
in
aas
ljmp
in
mov
out
loope
ljmp
clc
jmp
jecxz
cmp
lret
int
int3
addb
fimull
in
aad
in
icebp
out
sub
aas
cld
ljmp
repz
jmp
test
call
aas
jne
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
push
cld
pushf
rolb
jle
add
imul
jmp
test
in
sub
test
cmc
fiadds
jmp
mov
hlt
in
aad
cmp
call
ds
jmp
clc
xchg
out
xchg
popl
rclb
xor
stc
enter
lret
div
test
out
in
aad
fsubr
incb
xchg
sar
rol
jmp
fstp
sti
imul
cmp
mov
loopne
jmp
faddp
mov
div
cmp
rcr
stc
cmp
roll
fcomp
aad
loop
cld
sub
repnz
xchg
in
shl
lret
out
aad
idivb
cmp
shl
lock
mov
out
fisttpl
int
ljmp
std
sub
test
ret
out
out
ret
xchg
mov
repnz
out
xchg
clc
ror
lret
stc
fnstsw
shll
inc
stc
cli
addb
xchg
or
mov
leave
lds
out
imul
fdiv
rcl
cmp
fdivr
xlat
jmp
xchg
shr
idiv
cli
cmc
cmp
cmp
cli
repnz
xchg
xchg
rorl
sar
leave
leave
cmp
jmp
cmp
aas
in
std
ds
aam
not
xlat
out
jmp
shll
aad
idivb
rcl
ds
std
stc
lock
mov
cli
test
loopne
cld
cli
lret
jecxz
xchg
das
cmp
ds
cmp
into
loop
enter
loope
test
icebp
cmp
test
enter
int3
jmp
loope
loop
ret
loopne
int
lock
cmp
jecxz
cli
cld
loopne
lock
cli
cld
hlt
fdivrp
add
mov
int
leave
xor
lock
test
sarl
xlat
orb
loope
iret
int3
xor
in
enter
out
cmp
fcmovnb
lock
call
xlat
leave
out
iret
push
ljmp
in
cmc
sti
xor
jmp
rolb
rcr
sarb
enter
in
shl
lock
shrl
lret
repnz
cmp
iret
fdivr
cli
jmp
ljmp
int3
xchg
ret
enter
fdivrl
rcl
fdivr
cld
aam
icebp
test
neg
int
xchg
int
jmp
call
out
sti
lret
cmp
clc
test
mul
sbb
mul
lret
add
aam
jmp
xor
int
stc
loopne
mov
jmp
cmp
jmp
into
int
xlat
loop
stos
push
jg
test
jle
xor
mov
mov
ret
repnz
ljmp
out
jmp
fucomp
ret
testb
xor
sti
and
int
loop
aam
lret
lret
fstpt
fdecstp
repz
out
call
clc
std
lret
or
out
clc
xor
cli
fdivrp
into
sar
aas
xlat
hlt
loopne
mov
cli
enter
jecxz
out
lret
into
fsubrp
xor
into
loop
repz
cmp
sti
call
mov
in
xchg
out
shll
rol
clc
repnz
aas
stc
cli
jecxz
iret
loope
aas
hlt
neg
addb
lret
test
iret
iret
jmp
loope
out
stc
loopne
testl
fdivp
repnz
cmp
cs
cmp
icebp
test
jmp
out
nop
icebp
rolb
into
shlb
cmp
ret
std
cld
fldl
loop
lret
lret
rolb
shl
lret
icebp
lret
loope
iret
out
in
repz
lret
in
in
roll
out
jmp
cld
sarb
std
ds
cmp
sti
or
out
repz
idiv
into
cmp
sti
rol
clc
shl
test
mov
popl
aad
aad
call
cmp
out
in
in
out
test
lret
in
in
shl
fucomip
repz
rcr
iret
repnz
out
loope
testb
ffreep
decb
xor
fcomp
in
cmp
not
fistpll
ds
mul
loop
out
clc
out
jecxz
out
ljmp
xor
call
sarb
jmp
clc
out
jmp
test
xlat
shll
fdivr
fstpt
xor
clc
out
out
jmp
jmp
aam
jmp
cmp
fcomp
in
aad
ret
mov
mov
frstpm(287
xchg
xchg
out
int
ror
icebp
cmp
cmp
cmc
hlt
out
ret
mov
loop
xchg
loop
xor
int3
stc
out
repnz
loopne
test
aam
aas
hlt
sub
xlat
jecxz
lock
hlt
loope
hlt
sub
iret
out
cmp
cmp
loopne
testb
loopne
xchg
iret
call
fcomp
ljmp
cmp
cli
repnz
or
add
cmp
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
xlat
and
nop
fmulp
int3
out
xor
repz
sti
int
clc
rcl
repz
fcmovnu
call
fisttpll
fcmovnbe
mul
lret
out
fld
cmp
test
loop
faddl
jecxz
cld
fmuls
jmp
in
cmp
fldz
iret
aad
xchg
ret
out
cmc
int3
int3
mov
mov
lea
into
out
shr
enter
out
loopne
cld
loopne
fiaddl
jmp
in
xor
aad
in
xor
cmp
lret
lock
and
cld
add
in
mov
icebp
in
aad
out
fucomp
rcr
sti
into
xlat
shr
cmp
out
ret
fldl
cld
hlt
test
into
fsub
iret
vpmullw
lret
iret
xor
ds
enter
in
cld
out
mov
dec
rcl
hlt
in
into
rcl
cmc
leave
out
sbb
std
xchg
mov
inc
loope
aam
ret
int3
aaa
cli
ss
in
out
xlat
rcr
repnz
add
stc
lret
ljmp
repnz
repz
aad
fsubr
xor
cld
shl
stc
out
cld
lock
cmc
jecxz
jmp
in
cmp
cld
in
lock
add
sti
out
in
jecxz
repnz
out
leave
jmp
aad
push
iret
cmpl
jmp
clc
out
out
fcomip
xchg
xchg
ljmp
cld
iret
jmp
hlt
ret
shl
mov
loopne
mov
fdivr
repnz
int3
in
fdivs
cli
fsubr
aam
aas
aas
iret
in
xchg
rol
hlt
repz
call
repz
fldl
jecxz
in
icebp
cmp
clc
div
std
sti
stc
cmp
fcmovnbe
call
in
decl
not
div
cld
xor
xor
dec
loop
sbb
repz
clc
mov
int
lea
ror
aad
cmp
jmp
lock
aas
fcmovnu
fcom
jmp
lret
fsin
in
fmul
out
clc
xor
cmp
fucomi
lock
cmc
aam
out
sub
sti
ljmp
cmc
icebp
cmp
fst
fst
cmc
std
cmp
fistpll
ds
fcmovnu
neg
ljmp
ljmp
cmp
int3
rol
loopne
cmp
stc
in
std
out
int3
in
test
loope
hlt
lret
loop
iret
mov
loopne
int3
hlt
in
add
aad
lea
mov
fisttps
xorb
mov
add
inc
or
or
pushf
ja
add
ret
add
int3
ror
fcomp
aam
aas
idivb
jl
or
test
jle
clc
int
enter
lock
ds
xor
out
out
jecxz
rcr
sbb
ror
in
lock
enter
fldln2
cmp
cmc
not
in
cmp
xchg
fsub
sti
aas
fcmovnb
in
jmp
int3
ret
aam
iret
lret
fcmovbe
in
roll
test
xor
call
std
fst
mov
jmp
clc
aaa
in
loopne
cmpb
ret
rcl
in
lret
mov
int
call
icebp
std
repz
xor
lock
cmc
repnz
xlat
aas
shl
ret
loop
sti
mov
call
jecxz
xor
lret
add
iret
test
stc
in
mov
flds
xor
in
stc
in
out
jmp
cmc
loop
sar
fmulp
repnz
out
int3
xrelease
cmp
cmp
cmp
fcmove
rcr
rcl
cmp
fcmovnu
stc
int3
mov
in
loope
in
xor
out
into
mul
test
sar
out
fsubp
lds
fdivs
lret
cli
clc
cmp
out
xor
rcr
shl
aad
jecxz
in
add
iret
sar
loope
xchg
shrl
xlat
aad
cmp
lret
jmp
loope
aam
clc
adc
vpsadbw
in
iret
ror
ss
fsincos
not
sar
or
cmp
sti
loope
loope
fimuls
repz
fstpt
stc
das
aad
hlt
lock
fcmovne
shl
cmc
cmp
jecxz
test
std
mov
icebp
lret
lock
test
sar
iret
out
sti
lock
loopne
xchg
stc
fucom
dec
jmp
loopne
aaa
aam
jmp
cmc
idivl
cmp
repnz
idiv
fld
mov
addl
repnz
aaa
int
shr
sti
sar
iret
ret
shl
fnstcw
rcl
fdivr
in
int3
in
mov
nop
sar
int3
lock
test
aad
aad
inc
flds
testl
lret
rcl
aad
ljmp
jmp
shl
ror
shl
jmp
fimull
xor
in
cmp
fucomi
loopne
push
call
loope
into
xchg
in
out
ret
repz
repz
jmp
call
fcmovb
loope
ret
std
imul
jmp
sar
out
out
test
loope
ss
ror
mul
cmc
hlt
in
ret
icebp
iret
xchg
shr
repz
cli
out
jecxz
in
ljmp
in
ss
mov
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
push
mov
jg
test
jle
jmp
adc
ret
cmp
mov
xchg
xorl
cli
aam
vpmovmskb
sti
repz
cld
repnz
aas
shl
faddp
mul
out
in
out
cmc
pop
ret
aam
aad
fnstsw
cmc
fmul
fdivrp
aad
ret
mov
lret
leave
lds
shl
jmp
iret
in
cli
aam
in
ror
out
enter
icebp
ror
aam
call
call
jecxz
rolb
out
test
stc
mov
in
xlat
ret
out
icebp
lock
int
out
ret
loope
lret
in
and
call
mov
enter
test
lret
rcl
fdivp
xchg
clc
neg
loope
ljmp
ret
icebp
in
out
ss
cmp
int
in
adc
test
xlat
ljmp
xchg
call
aam
out
loope
rcr
cmc
out
shl
aam
ljmp
xchg
ljmp
out
out
ror
aaa
aad
cmc
sti
into
cmp
sti
jmp
enter
aam
jmp
shl
xor
cmp
repz
cmc
xchg
call
stc
in
out
ljmp
fdivs
call
faddl
aad
dec
lret
ret
fcoml
out
icebp
not
fcmovu
int
aad
cli
jecxz
aam
aas
rol
fcmovnbe
mov
in
test
icebp
rcl
jmp
int3
fdiv
cmp
hlt
cmp
test
addb
mov
shr
std
repnz
into
lock
aam
lret
int3
not
jecxz
mov
lret
jmp
lock
xchg
cmc
clc
cmp
aaa
cld
stc
jmp
fdivr
hlt
std
adc
loopne
sti
mov
in
lret
xor
call
xor
cmc
idiv
stc
shr
in
in
cld
lock
cmp
rorl
fsubp
hlt
out
mov
jecxz
int
out
in
fdivrl
fldz
fucom
repnz
lds
out
enter
sub
shll
lret
out
xor
fdiv
cmc
cmp
div
mov
cld
orl
fcmovu
into
bnd
clc
cmp
xchg
aam
call
xchg
loopne
int3
test
rcl
int3
cmp
fadd
adc
stc
cmp
fdivrp
jmp
fucom
call
lock
xlat
sub
in
cs
lock
loop
not
cmc
clc
mov
call
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
mov
addr16
xchg
movq
add
addb
sub
int
xor
jecxz
int3
out
cmp
fninit
fdiv
xlat
rcl
test
popl
loope
mov
sar
shl
out
ljmp
out
aas
jmp
filds
mov
out
xor
out
out
sar
loopne
icebp
xlat
fcmovu
neg
mov
sub
leave
shl
shll
fld
rol
aas
adc
neg
clc
cli
int3
jecxz
icebp
roll
in
int3
in
fcomp
loopne
stc
int3
ret
loopne
ljmp
xchg
lret
fucomp
aas
shlb
clc
enter
lock
iret
add
out
fsubr
add
repnz
ljmp
into
xor
ss
in
not
loopne
add
mov
out
in
in
fldl
sti
div
enter
fiaddl
rorl
mov
xchg
std
std
cmc
imul
int
int3
cld
ljmp
fld
xlat
add
neg
lret
aad
fisttpl
lock
aad
cmp
cmp
sti
lret
fidivrs
cmp
lock
xchg
mov
filds
aad
fsubr
xor
aas
stc
sar
faddl
rcr
cmp
out
sti
enter
shl
ss
idiv
jecxz
test
test
mov
call
fmul
xchg
into
std
mov
ljmp
fcmovbe
rolb
cmc
leave
mov
rcr
in
ficoms
lret
xor
hlt
sti
int3
hlt
aad
sti
jecxz
xchg
std
fcmove
mov
hlt
in
sar
out
shll
cmc
xor
test
sar
enter
mov
into
cs
xor
jecxz
fcmovu
aad
fdivp
in
stc
xchg
test
mul
call
hlt
nop
jecxz
idiv
aaa
iret
sti
xor
ds
cli
loope
loopne
fsub
add
mov
out
in
leave
leave
sub
repz
loopne
shr
cmp
cmp
out
test
leave
iret
int3
sti
iret
jecxz
out
cmc
enter
cld
jmp
sub
dec
loope
ljmp
aam
shrb
in
std
in
cmp
aaa
rcr
ret
loopne
sar
jecxz
fmul
ror
loope
iret
aad
loope
cli
fnstenv
in
into
jmp
std
fcomp
cmc
in
in
lret
fdivp
out
ljmp
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
hlt
jp
cmp
jg
test
jle
mov
aad
aad
lock
aaa
and
clc
out
rcr
aas
jmp
xchg
cmp
mov
xor
lret
cmp
in
repz
loop
rolb
rcr
test
fld
loop
shl
in
loop
repz
lock
rcr
lock
shl
filds
testl
hlt
les
shll
int
fsub
ffree
cmp
cmp
iret
ffree
xlat
lret
cmc
cld
out
incl
ljmp
lret
shr
in
cld
aad
cmp
out
shl
out
clc
lea
loopne
in
cmp
sti
stc
cmp
jecxz
iret
loopne
loopne
mov
stc
idiv
loop
fisttps
in
aaa
lock
out
int3
cmp
loopne
fsubrp
aas
mov
lret
out
mov
les
cs
fldln2
iret
fdiv
test
ret
loopne
fmuls
idiv
out
mov
leave
cmc
jecxz
aam
xor
xor
aad
shl
cmp
cmp
stc
aas
mov
aam
xchg
ljmp
iret
loop
fsubr
leave
hlt
in
fsincos
in
rolb
stc
fsub
mov
int3
shr
mov
out
cli
in
aad
call
clc
add
lret
mov
sbb
in
aad
out
ss
rcl
fdivr
out
ss
stc
shl
sti
cld
loopne
mul
into
lret
fmul
loop
hlt
ret
rol
sti
xor
call
jecxz
cmpl
enter
ret
or
xor
ljmp
lock
aas
fdivrs
rorb
icebp
int
cmp
xor
aaa
iret
ds
repz
fcmovne
ret
loopne
xlat
shr
out
repnz
fdiv
call
rcl
std
fcom
cmp
lret
imul
loop
xchg
in
xor
xlat
xor
in
into
int
std
and
std
ret
div
cld
cld
ljmp
repz
call
cmp
cmp
fisttpl
fmull
ror
xchg
lea
jmp
cmc
in
out
enter
ret
fucom
fcom
cmp
in
call
repz
jecxz
repnz
xor
cmp
ds
cmc
sar
test
fcmovb
out
call
icebp
lret
in
xchg
xor
cmp
cmpb
loop
out
test
clc
mov
mov
loop
fucomp
into
xor
out
int3
cmc
cmp
inc
mov
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
out
enter
adc
jle
add
cmp
leave
fdivrs
not
fsub
repz
shr
int
mov
idiv
int
in
enter
cmc
jmp
out
clc
rcr
aam
filds
and
lret
shl
ret
fnstenv
sarb
cmp
ret
out
xchg
lret
test
loope
mov
fadd
out
fcmovne
cmp
ret
fcom
clc
fadd
ret
xlat
leave
into
mov
into
loop
clc
call
cmc
orl
loop
out
int3
ljmp
xor
loope
faddp
test
fiaddl
shr
out
jecxz
rol
in
cmc
test
fcmovnb
fxch
aad
in
idivl
leave
out
int3
stc
fcomp
loopne
xchg
out
hlt
int3
jmp
std
fprem1
cmp
sti
shl
mov
loopne
cld
sub
stc
in
xchg
lret
jecxz
jmp
xor
xor
icebp
clc
lock
jmp
shl
jmp
fisttps
aad
fcom
cli
cli
cmc
jecxz
rol
fdiv
faddp
mov
cmp
mov
call
out
loop
loop
repz
aam
iret
rol
shl
fcmovu
fimull
in
out
roll
les
xor
iret
aas
fadd
cli
rcr
lret
sbb
in
loopne
into
div
icebp
les
cmp
cmp
icebp
stc
xor
rcr
fcomi
adc
out
out
xchg
enter
int
cmc
ret
xor
call
aaa
xlat
sti
loop
ret
out
ret
enter
ret
xchg
std
call
out
in
out
lock
stc
iret
aam
shl
xchg
or
nop
test
test
jecxz
int
xor
cmc
cmc
lret
rcr
jmp
jmp
fucom
test
ljmp
mov
fdivs
out
clc
cli
cmp
test
bnd
test
repz
fiadds
out
out
fdivrp
clc
neg
cmp
neg
fmulp
mul
fcmove
rorb
aaa
ljmp
ret
sti
repnz
rcl
filds
nop
jmp
enter
jmp
jmp
test
sar
cmp
in
enter
sbb
fnstenv
ss
xor
jmp
in
rol
int3
test
fcomp
int3
and
jmp
aad
out
stc
out
fmul
xor
jecxz
add
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
aam
lret
nop
pop
jg
test
jle
aam
cmpl
jecxz
rclb
cmp
cmp
cmp
xorb
int
cmc
xchg
rcl
decb
leave
jecxz
icebp
loope
leave
hlt
int
fidivs
fcmovbe
cmp
cmp
sarl
jecxz
loopne
dec
test
leave
in
shl
icebp
enter
ss
enter
in
int3
fdivp
repnz
aas
fsub
jmp
call
int3
fsubr
icebp
clc
fldl2e
enter
adc
xlat
rcl
aam
xor
jecxz
cld
sbb
filds
aad
lret
iret
int3
lock
cmpb
rol
clc
cmc
mov
cmc
sti
call
sar
ljmp
cmp
idivb
neg
testb
fmull
xchg
and
aaa
rcr
ss
ss
shr
lret
ret
test
clc
in
fiaddl
icebp
in
rcll
cli
sarb
hlt
incb
loope
movl
mov
lret
out
shl
xlat
in
cmp
loope
fdivr
ds
aad
neg
in
loope
in
xchg
xchg
jecxz
in
enter
neg
shl
fmulp
in
cmp
fildl
out
incl
cmp
xor
xor
aas
stc
cli
cmp
stc
rol
jecxz
in
fcmovu
mov
jmp
mov
addl
leave
cmc
in
xor
repnz
fstp
sar
std
aam
fadds
xchg
loope
mov
xor
jmp
sti
cld
aas
rcr
in
xchg
lret
mov
out
clc
out
rorb
stc
cmp
ds
cmp
out
or
sarl
repz
mov
decl
int3
aad
out
fxch
cmc
cld
cli
into
lock
faddp
mov
std
mov
fsubrp
repz
repnz
loopne
fsubr
in
orl
fisttps
test
cmp
cmc
sar
clc
mul
aam
clc
cmc
std
ds
and
int
int
cmc
test
lret
fucomi
std
call
out
or
jmp
loopne
mov
loope
mov
leave
aaa
xor
out
cli
lret
xor
rcl
out
les
rorb
das
xor
xor
cmp
fcomi
ror
stc
clc
in
out
in
or
rcr
into
lret
xchg
icebp
lock
aad
enter
xor
aad
test
in
add
movl
and
inc
add
xor
call
fcoml
add
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
sbb
test
jle
fucom
std
xchg
sub
in
xor
leave
fst
in
roll
jecxz
sar
fcmovu
enter
jmp
hlt
shr
fprem
in
ljmp
shl
test
loop
loop
enter
xchg
std
out
clc
into
out
jecxz
lret
out
xor
std
sti
repnz
aad
stc
mov
in
incl
jmp
xchg
jmp
shr
jmp
lret
icebp
fnstsw
xchg
in
test
cmc
lret
lret
cld
out
int
hlt
fnstenv
xlat
xor
repz
in
sar
stc
ret
fucom
ljmp
cld
icebp
lock
out
sti
shl
idivb
sti
clc
fistpll
in
fldl
out
incl
loop
stc
cmp
int
xor
fcompp
std
hlt
call
jmp
aam
mul
clc
jecxz
xlat
xlat
ss
repnz
in
sti
loop
loopne
cld
shr
loope
iret
out
test
mov
aam
out
repz
idivb
call
mov
push
int3
shl
nop
repz
out
rol
in
cmc
jmp
repnz
xlat
repz
in
and
test
in
mov
loope
out
fxch
into
cli
cmp
in
clc
cli
idivl
sti
clc
xchg
cmc
jmp
or
in
xor
fdivr
clc
iret
cmc
cmp
icebp
int
ds
xor
stc
sti
int3
loope
lock
repz
lret
in
icebp
ds
fadds
ret
aad
test
leave
ffree
rolb
xor
out
cmp
stc
xor
cld
aam
rcr
addl
loop
lret
out
not
out
in
loopne
cmp
div
leave
mov
out
and
mov
cmp
ljmp
into
fcos
in
test
fiaddl
mov
sub
f2xm1
cmp
or
out
cld
faddp
ljmp
xchg
shl
int3
mov
stc
xor
fsub
xlat
cli
std
jmp
aam
loop
inc
rcl
in
sti
loop
xor
int
repz
out
ljmp
shl
cmp
xchg
fcmovbe
mov
out
test
into
divl
aad
ret
cmp
lock
cmp
cld
jecxz
cmp
test
orl
out
repnz
fscale
int3
aam
not
mov
mov
icebp
lret
ror
xchg
sub
roll
add
test
push
add
jmp
enter
rcr
adc
lock
in
push
test
jle
repnz
dec
lret
iret
loop
loop
ljmp
out
xchg
fcomi
mov
iret
xor
in
leave
call
cmp
cli
test
roll
call
mov
ss
bnd
cmp
lock
repnz
xlat
test
dec
ljmp
int
lret
cld
cmc
lock
ds
test
repz
in
fprem
fsubp
repz
xor
shl
into
lret
aaa
shr
hlt
fstp
std
ret
mov
or
loope
in
out
repnz
out
int3
call
in
ljmp
shl
std
std
mov
sti
in
cld
iret
lea
xlat
clc
call
aas
cmp
add
aad
ret
test
loope
xchg
loopne
test
out
out
out
cmp
ljmp
lock
fucomip
out
fucomi
xchg
xor
out
aaa
into
int3
leave
cmp
incl
addl
imull
xor
cmc
icebp
in
aad
fcmovnu
sti
cmp
not
idiv
xchg
lock
xor
shr
cmp
out
ror
xor
fnstenv
rcl
out
aas
sub
mov
nop
icebp
out
or
clc
xor
sar
cli
cmp
les
fcomp
xchg
xchg
fiadds
mul
sar
xor
xor
fabs
fmulp
repnz
out
aas
repnz
cmp
fcomi
xchg
loop
out
repz
sbb
aam
ret
fdivr
cmp
sti
ljmp
repz
out
div
xor
xor
cmp
ret
rcr
repz
mov
into
mov
repz
test
lock
jmp
hlt
repz
loope
icebp
sti
fiaddl
enter
decl
loop
ret
aaa
shl
repz
in
addl
xchg
mov
out
adc
in
xor
sarl
call
cmp
rcr
fmuls
sti
enter
in
call
xor
repnz
xlat
fucomi
test
incl
lret
int3
cli
orb
loope
sti
in
jmp
cmp
hlt
jmp
jmp
cmp
out
mov
fstpt
out
lret
rcl
cmp
addl
fsubp
mov
call
xor
loope
rcr
out
loope
mov
xor
add
jmp
rcl
rcl
aad
mov
jne
pop
mov
jg
test
jle
cmc
loop
out
out
test
call
repnz
xor
repnz
jmp
cld
fcmovnbe
repnz
cli
int3
jecxz
jmp
jmp
shll
ss
fmulp
call
out
cld
shr
roll
lret
shl
out
call
leave
fmul
cld
int3
lock
rorb
fadds
shr
xlat
ret
out
not
clc
fdivr
repz
std
sti
icebp
cmp
out
mov
in
sar
xchg
not
xor
sub
icebp
in
rcl
call
fcom
call
sar
in
jmp
xchg
ljmp
lret
cmp
cmp
in
fsubrp
rol
add
xchg
enter
loopne
std
bnd
stc
cmc
icebp
out
adc
aas
fcmovne
loopne
rol
leave
jmp
test
rorb
xor
out
lock
shl
loope
aad
cli
into
cli
shl
repnz
fcmovne
out
xchg
shlb
out
rcr
xor
out
stc
shl
out
cld
or
sar
out
mov
rol
out
jmp
cmp
in
lret
out
shl
call
int3
xchg
fmulp
fsts
repz
out
jmp
sti
adc
stc
ret
test
out
xlat
orb
out
aaa
repz
jmp
int
sub
rol
aas
mov
mov
ret
out
lret
iret
fsubr
jmp
into
loopne
repz
aad
and
in
jmp
call
aam
int3
out
int
cmp
cli
sti
fidivrs
fdivrl
sti
not
mov
mov
test
xchg
ss
iret
sarb
icebp
fucomip
std
cmc
jmp
and
ret
mov
jmp
loope
roll
cmp
aaa
rcr
cmp
clc
loope
rcl
icebp
ret
enter
fucomip
out
ror
jmp
ss
hlt
cli
lret
enter
sub
roll
nop
int
shl
xchg
xchg
leave
clc
lret
hlt
xor
in
rcr
in
fsub
cmpl
cmp
call
mov
vpmacssdql
in
xor
repz
lret
xor
out
test
sar
clc
fmuls
xchg
pop
fmul
icebp
aad
cmp
int
in
sar
test
aam
icebp
clc
sti
aad
enter
out
test
add
xor
not
ss
rcl
int
test
aam
in
out
in
xlat
lret
or
ret
add
xlat
int
fstp
rcr
ficoms
cmp
jg
test
jle
enter
call
sub
clc
sti
enter
rcl
int3
aaa
cmp
cmc
mov
enter
rcr
cmc
out
out
xor
cmp
ror
rcl
aam
icebp
cmp
fadd
mov
aad
loop
shl
repnz
fbstp
shl
in
aam
fucomi
sar
out
jmp
xlat
fmulp
ror
jecxz
cmp
out
ss
in
cmp
out
lock
ret
shl
fxch
faddl
addb
in
aad
aad
neg
rcl
fdivr
iret
cli
fldl2t
clc
out
stc
fcmovnb
icebp
xchg
enter
xchg
xor
iret
sub
jmp
fcmove
jmp
aaa
rolb
loop
int
std
shr
call
repnz
stc
lret
xor
std
incl
flds
std
fcmovnu
lret
mul
aaa
stc
cmp
cmp
cmp
lret
aas
cmp
jmp
imul
loope
xor
lret
into
cmp
div
cmp
out
repnz
icebp
mov
xchg
xorb
int3
jmp
cli
cmp
clc
idiv
jecxz
hlt
sar
xchg
into
decl
shr
xor
das
hlt
fcmovnu
out
loop
addl
in
in
std
repnz
in
mov
leave
jmp
aam
sar
fadd
stc
faddp
xlat
cli
lds
jmp
test
aad
aad
aam
filds
aad
loopne
jmp
rclb
icebp
lret
fstp
aaa
cmp
jecxz
in
mov
aam
stc
stc
faddl
or
int3
loop
cmp
icebp
xor
cmp
in
testl
into
loope
fxch
xor
xlat
hlt
hlt
fcomip
test
clc
shl
aad
leave
out
out
or
xchg
cs
sub
fistpll
xor
stc
fptan
rcr
leave
mov
rcl
loopne
lret
cmp
stc
out
cmp
fdivrl
xchg
sti
mov
aam
or
lea
xchg
shr
sub
sti
cmp
cmp
ret
fmul
mov
out
fildl
fcomip
ljmp
in
fcmovbe
out
rcr
filds
int3
ljmp
xchg
clc
repz
aad
int
fmulp
cmp
cld
sti
fucomip
jecxz
aam
cld
xchg
clc
in
out
jmp
shl
mov
mov
mov
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
test
and
jle
add
in
int3
out
cmp
out
mov
clc
lret
cli
faddl
sar
call
out
jmp
jmp
aam
aas
loop
aad
xchg
jecxz
cld
cld
jmp
cmp
lret
int3
into
in
cmp
out
and
fimuls
icebp
xchg
lret
orl
repnz
call
cmp
icebp
cmc
out
rcr
jmp
or
loope
shl
lret
xor
out
lds
iret
cmc
aaa
cmc
adc
stc
repnz
icebp
fistl
cmc
xor
lret
int
xlat
repnz
out
fsubr
repz
fcomi
out
ljmp
into
das
into
aam
ss
sti
leave
xor
fdiv
fcmovnu
in
shl
std
sti
jecxz
clc
or
sub
out
fcmovne
jmp
in
loope
cli
mov
call
fsubrp
out
loope
in
cmp
hlt
ljmp
shl
in
fsub
or
jecxz
out
ljmp
in
loop
cmp
ss
sar
out
icebp
in
aad
repnz
shl
ret
out
mov
out
leave
lret
into
jmp
not
cmp
fmul
test
int
fistpll
fdiv
aad
in
in
icebp
call
faddp
jmp
shl
enter
sti
aaa
fcomi
test
aas
and
xlat
rol
mov
into
aaa
call
stc
in
fstp
fcomi
ret
out
stc
stc
cld
enter
sti
jecxz
aam
mov
icebp
int
ret
shr
cmp
aaa
lock
cli
loope
shl
mov
in
ficoms
shr
out
shlb
shr
lock
ret
vpsubsw
idiv
loopne
cld
xchg
mov
test
mov
hlt
jmp
lret
repz
repnz
xlat
ret
aad
fcmovnu
xchg
sar
stc
mov
fdivrp
repz
ss
int3
aaa
shl
fsub
cmpb
les
xchg
vpaddsb
cmc
jmp
loopne
in
cmp
cmpl
aad
int3
int
and
sar
shr
repz
cmp
cli
cmp
neg
jecxz
aas
inc
aad
xchg
cld
rcll
lock
cld
cmp
lret
loop
ror
fcomi
std
aad
les
std
jecxz
imul
repnz
aad
cmp
out
fdivr
jmp
repz
ret
into
mov
icebp
aam
std
jmp
cmp
aad
jmp
into
iret
xlat
xlat
into
xlat
fwait
in
mov
aaa
mov
mov
jg
test
jle
aam
xlat
in
fiadds
sti
roll
in
jmp
ror
shr
ret
fadds
xchg
mov
rcll
hlt
in
jmp
ror
sti
lret
aad
div
cmp
repz
mov
mov
loopne
xchg
jmp
sar
cmp
cmp
cmp
stc
hlt
cld
stc
movl
xor
lret
lret
fxch
xlat
fmul
loopne
xlat
fld
sti
leave
fsubr
mov
ret
out
mov
ljmp
call
aas
hlt
in
fst
xlat
ljmp
fucomp
xchg
loopne
sarb
lock
cmp
fcmovne
lret
in
fstp
ret
mov
test
xchg
mov
enter
aaa
jmp
cld
cmp
int
ds
call
orb
lret
fsub
lret
xlat
jmp
neg
cmp
aad
ret
sar
jmp
test
jecxz
shr
in
cmp
xor
out
fdivl
rolb
ret
cmc
jmp
testl
fadd
cmp
lret
repz
clc
fcmovbe
icebp
fld
not
mov
lret
call
cs
hlt
sbb
ljmp
repz
in
in
test
cli
sbb
div
call
fcomp
xor
cli
fdiv
mov
aad
in
clc
int3
into
rcll
ret
in
in
cld
test
int3
aas
std
out
loopne
fsubr
imul
in
stc
repz
mov
int3
cmp
leave
hlt
lock
fldl
call
out
out
in
in
xchg
divb
xor
xor
jmp
xor
aam
xor
iret
fcom
cmp
loope
lret
into
cli
leave
cmp
sar
int
cmp
and
sbb
repz
xchg
mov
hlt
in
in
ljmp
cmp
cli
mov
loop
rcl
fmulp
mov
divl
in
shll
das
cmp
rcl
rol
stc
xacquire
cld
in
in
mov
loope
repz
hlt
divl
into
in
jmp
int3
dec
cmp
fdecstp
mov
mov
sbb
out
cmp
xchg
in
imul
cmp
iret
ljmp
ret
ds
sar
cld
xchg
fimull
out
shlb
loopne
ret
call
shl
repz
fmul
jmp
stc
test
sub
add
mov
mov
xor
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
mov
jg
test
jle
mov
std
mov
xor
ror
in
aad
cmp
fdivrl
stc
cmp
test
in
lock
test
xor
enter
cmp
loope
cmp
stc
xchg
out
xchg
mov
out
mov
call
ljmp
ret
shl
ljmp
xchg
std
fcoml
aam
xor
lret
ljmp
sar
shl
loopne
fnsetpm(287
shr
int3
ror
xor
fcmovnb
sti
ljmp
cmc
shr
clc
cld
ret
in
nop
icebp
lock
call
rcl
cmp
sub
addb
fisttps
std
mov
lret
in
xor
aam
rcl
cmpl
test
int
addl
hlt
cli
cmp
fucomi
xor
fadd
stc
jmp
xchg
icebp
call
sti
cmp
shl
aam
rol
iret
lds
jmp
mov
fsubr
in
xor
xor
sub
sub
adc
cmc
std
cld
cmp
lock
mov
mov
in
int3
aad
cmp
std
cld
fcmovbe
shr
in
add
mov
fcmovne
jecxz
and
in
mov
aam
cmc
shll
fcmovbe
ss
les
cld
jecxz
jmp
fimuls
imul
cmc
sar
repnz
in
xlat
cmp
in
cmp
les
lock
sub
rcl
in
jmp
hlt
cmp
rcr
mov
repz
shl
fdivr
loope
rcr
out
cli
jecxz
cld
fcmovbe
cmp
shl
lock
in
loopne
clc
ret
ljmp
nop
into
in
ret
in
in
shr
cmp
out
fcmovu
mov
fiaddl
ficoms
ret
leave
idivb
xlat
xor
sti
in
stc
loopne
lds
mov
aam
int
stc
int3
and
jecxz
loope
call
xlat
fdivrl
fcmove
sarl
aam
cld
loopne
loopne
lock
rcl
int3
loope
aam
imul
xor
aas
fucomip
cmp
lock
std
out
adc
leave
out
pop
xchg
jmp
repnz
cmp
xor
repz
clc
roll
hlt
cmc
out
jmp
jmp
enter
cmc
in
out
ss
testb
inc
repz
test
mov
iret
clc
in
decl
add
cli
sar
decl
ret
add
int
ret
int
movsb
inc
push
loopne
cld
xlat
pusha
sub
jle
add
clc
cmp
lret
call
fcomp
sar
aam
cmp
in
ficoml
xlat
call
repz
cmp
out
cmc
repz
test
not
jecxz
iret
std
call
xchg
xor
out
call
cmp
iret
into
ret
out
cli
lock
ds
decl
iret
in
out
fdivr
rcr
aam
push
cli
stc
loopne
fcmovb
lret
mov
loope
xchg
loop
lock
into
xlat
shl
int
cs
call
cli
rcr
ret
lret
aad
int
xchg
mov
rolb
aaa
sarb
cld
xlat
neg
jmp
idivb
fyl2x
cmc
jecxz
fdivr
and
nop
nop
repnz
rclb
xor
xor
std
cmp
ds
std
int
out
test
xchg
cmp
in
test
aam
add
in
cmp
iret
iret
fsubr
aas
and
loope
sarb
fcompp
cmp
out
repnz
mov
xor
ror
not
into
cmp
jmp
cmp
xchg
loop
cmp
in
fldl
int3
xor
cmp
ds
cmp
aam
fucomi
cld
ret
stc
repz
loope
int3
loope
ror
in
icebp
loop
xlat
int
lret
into
int
not
out
test
std
fadd
leave
int3
stc
enter
fst
out
loop
cmc
cmc
cmp
int
aad
ror
cld
aam
addl
cld
lock
sar
in
fnstsw
lret
cmc
cld
shl
ffreep
in
jecxz
aad
test
cld
xchg
leave
mov
iret
div
in
imul
fnstcw
int
addb
vpsraw
orl
repz
repnz
clc
in
out
cmp
fdivrs
shr
in
in
leave
lret
repz
clc
sti
fcmovnbe
ror
shlb
out
xor
ret
test
leave
sti
in
cld
lock
flds
call
in
std
fnstcw
std
jecxz,pt
adc
ljmp
jmp
out
xchg
jmp
cld
lret
cld
fucomp
dec
aam
ds
fsubr
repz
loop
std
jecxz
xchg
orl
out
cmc
jmp
rolb
cmc
sti
out
sti
fmulp
xchg
add
hlt
repz
int3
into
cmc
stc
cmp
enter
sub
fadd
sarb
mov
call
in
leave
lock
in
out
fcmovnbe
rolb
jecxz
fcmovb
stc
jecxz
div
out
cld
icebp
in
shl
lret
out
cli
adc
jmp
ret
int3
rcl
ret
fldl
cmp
das
jg
test
jle
fdivrs
loope
in
ret
test
out
orb
test
cs
leave
rol
shl
out
loopne
cld
fadd
stc
iret
xchg
mov
ret
fcmovnu
cmp
sar
cmp
out
out
iret
loop
xchg
mov
xchg
in
in
out
rcl
lret
lret
lret
loopne
fld
hlt
out
lret
fsub
cli
repnz
xchg
add
iret
cld
sti
in
in
sar
cmp
mov
loope
sti
cmp
out
shl
cmc
aam
aad
hlt
fdivrs
test
fisttpll
xchg
adcb
xor
sarb
repz
clc
iret
fxch
sti
iret
fiadds
ret
cmc
incb
ror
out
in
xor
leave
call
cmp
ds
out
ljmp
call
loope
jmp
xlat
cmp
roll
fisttps
jmp
iret
in
fst
and
shl
stc
into
aad
fcmovne
sar
xorl
ljmp
cli
fcmovnu
fsub
shlb
xor
int3
jmp
jmp
iret
sub
incl
loopne
xchg
in
jecxz
shrb
fld
out
cmp
sbb
sti
xabort
leave
jmp
jecxz
out
rorb
in
iret
ljmp
push
xlat
loop
sarb
rcl
or
mov
sub
aad
lret
hlt
in
cmp
loopne
mov
repnz
xor
in
xor
fcmovnbe
jmp
cld
repz
xlat
cmc
hlt
imul
fsub
icebp
lret
mov
iret
xchg
test
in
sub
jmp
testl
testl
sub
stc
xor
hlt
lock
jmp
loop
fadd
clc
out
iret
mov
les
mov
out
in
loop
xor
loope
clc
leave
cmp
hlt
fst
cli
loope
shl
xchg
loope
mov
loop
mov
ret
shr
ret
cmp
int
cli
sar
xchg
loope
xchg
xor
out
sti
ss
repz
shl
mul
call
xlat
sti
lock
cmc
ljmp
out
fst
cli
shl
cld
fprem
in
hlt
ror
in
mov
fisttpll
fnsave
fdivl
cmp
int3
xor
clc
out
jecxz
cmp
jmp
fadd
aam
fst
fcoms
sbb
jg
adc
jle
add
cli
shr
into
xchg
int
ret
cmp
xlat
fucomp
lret
loop
cmp
stc
in
in
loope
mul
int3
mov
loopne
sarb
xor
xor
xor
std
jecxz
ds
test
xchg
mov
out
sbb
sbb
jecxz
imul
ds
fxch
cmp
icebp
ret
out
fadds
mov
in
call
hlt
icebp
cld
aaa
inc
icebp
jmp
in
icebp
cli
cld
mov
std
into
int3
nop
icebp
cmc
rcl
in
lock
cld
aam
iret
sarb
in
fcompp
orl
into
xchg
ror
rol
aad
cmp
cld
fsubp
stc
cmc
fsubr
cmp
rorl
fyl2xp1
mov
xchg
lock
jecxz
sti
fld
cli
cmp
out
ljmp
ret
mov
into
out
cmc
cmc
in
leave
fucomi
int3
cmp
lock
fcomp
cmp
test
in
or
shr
repnz
out
call
aas
fcomp
sti
cmp
hlt
rol
std
vpmaxub
orb
out
int3
shll
leave
out
lock
testl
call
mov
xchg
mov
aad
int
cli
lret
sarb
fcmove
aam
cmp
ds
xchg
enter
lret
jecxz
shl
xor
rcl
into
dec
cmp
cli
fdivp
rol
fcmovb
repz
aam
rol
out
xor
fildl
std
fdiv
jmp
flds
xrelease
cmp
leave
test
rolb
cmp
out
repz
ljmp
xor
sti
cli
jecxz
iret
ret
rol
leave
cmc
fsub
cmp
in
lret
lock
cmp
fstpt
cli
lret
leave
cmp
in
icebp
movl
out
jmp
fisttps
fmul
out
rcr
out
clc
adc
in
lock
mov
std
call
adcb
cld
imul
sti
bnd
out
vpslld
orl
xchg
icebp
out
xor
enter
aad
sub
ds
rcr
test
dec
lret
test
ret
out
xor
xor
ds
cli
loop
int3
iret
idiv
fucom
out
lret
out
loope
nop
icebp
ljmp
icebp
ror
jmp
test
fadds
xlat
loop
mov
fcomi
mov
pop
leave
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
sub
pop
xor
jle
add
lds
cmp
fsubr
lret
leave
rcr
hlt
std
test
ffreep
aam
xlat
mul
mov
sar
out
icebp
aaa
out
shl
xlat
out
lret
aad
sar
out
imul
loopne
loopne
or
shl
aam
clc
cmc
cmp
faddl
aaa
loop
hlt
fcom
test
jmp
in
mov
loop
ret
std
int3
ds
out
xchg
fiaddl
xchg
mov
rcl
lock
in
int
cmp
cmp
pushl
loop
repz
cld
lret
std
into
decl
in
cmp
iret
fnsave
call
in
shl
fsubrp
in
std
xlat
int3
in
repnz
mov
shl
cmp
xor
inc
repnz
addl
lock
shr
into
xlat
xor
sar
iret
xchg
addl
leave
aad
cmp
cmp
cmp
hlt
out
aam
fsub
fcomp
std
in
in
filds
shll
shl
cmp
cmp
xlat
sub
fcmovnbe
xlat
xchg
test
ret
repz
repz
icebp
icebp
clc
icebp
sti
ds
sub
hlt
loop
loopne
cld
cli
faddl
mov
in
jmp
repz
ret
int3
cmp
cld
xlat
mov
int3
mov
xor
cmc
bnd
fcom
lds
hlt
cli
fiaddl
into
in
out
ljmp
jmp
lock
fdiv
loop
std
testl
in
xchg
call
aaa
fmul
cmp
call
lret
aas
jecxz
repz
mov
inc
in
enter
bnd
loope
leave
xor
aad
aad
in
shl
sar
rolb
sbb
int3
out
repnz
repnz
loopne
fldpi
out
int
decb
out
in
fadds
in
lock
cli
in
cmp
sar
test
faddp
in
stc
out
sti
rcl
iret
ret
bnd
int
iret
sti
loop
loope
loop
cli
stc
lret
cmc
call
or
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
or
jg
fiaddl
jle
adcl
vpsubsb
ds
repnz
fcom
cmc
test
jmp
clc
leave
xchg
roll
in
clc
fstp
ss
icebp
iret
ds
out
xchg
jecxz
jecxz
xchg
xchg
filds
lock
cmp
cmp
jecxz
call
loope
faddl
orl
jmp
jmp
push
fdivp
cmp
sbb
jmp
in
std
xchg
aam
aaa
repz
out
clc
stc
stc
fcmovnu
out
fadd
ret
hlt
in
loopne
fists
loopne
das
int
lret
xor
int3
testl
incb
int
repnz
out
loop
xor
sti
fcmovu
loope
xor
cli
ljmp
fucomp
sti
adcb
lret
cmp
int3
out
ljmp
repz
mov
enter
shl
cmc
fadd
xor
fsubr
xor
dec
cmc
jmp
test
cmp
repz
mov
out
mov
mov
shl
cmc
in
xor
lret
lret
out
ret
sub
sbb
mov
cmc
sub
ret
lret
jmp
repnz
cmc
repnz
cmc
testb
fxch
jecxz
mov
hlt
int3
cs
icebp
imul
aas
into
loopne
shl
fadd
sti
loope
lds
hlt
faddl
lret
aad
int3
cmp
xor
test
aam
test
mov
lret
leave
in
and
test
enter
call
leave
cmp
cmp
fdiv
icebp
out
xlat
shr
push
sub
nop
int
jmp
fnstcw
repnz
jmp
out
in
sub
out
ret
in
cld
icebp
div
in
cmp
adc
mov
leave
or
enter
mov
rol
xor
iret
xor
xlat
cmp
clc
fnstcw
fsub
out
loopne
aad
enter
jecxz
mov
mov
repz
out
f2xm1
lock
fcomip
jmp
in
clc
sti
cmc
sub
ljmp
rcl
lock
aaa
cli
leave
xlat
sti
lret
iret
rol
incl
fdivrp
mov
inc
or
test
test
inc
add
add
cli
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
adc
jle
add
lock
fidivs
call
lret
stc
icebp
out
cmc
loop
out
out
test
hlt
std
cli
in
xchg
in
mov
jmp
iret
hlt
leave
iret
cld
out
cli
loopne
mov
stc
out
fcom
test
xchg
lret
jecxz
in
cmc
hlt
lret
fdivr
cmc
std
shl
rorb
fsubr
shl
test
sar
jecxz
repz
cli
cs
shl
loopne
repz
out
ret
fcmovnb
xchg
in
orb
in
in
fmul
adc
in
std
testb
int3
jmp
rcl
shll
int3
call
fucomip
ret
aas
or
sti
out
std
mov
in
mov
mov
rcl
jecxz
in
sti
repz
ljmp
aas
fnsetpm(287
xchg
ljmp
out
jmp
lock
out
cmp
jmp
loop
xchg
mov
lret
shl
fsubrp
das
xor
ror
jmp
out
ret
cmc
loop
repz
leave
fiaddl
xchg
rcl
xor
lret
out
aaa
cmp
out
cmp
inc
sar
mov
jmp
fsubr
lret
icebp
std
fcmovne
lea
shl
fcmovnu
call
in
cld
call
filds
ljmp
lock
cmp
leave
ds
ret
adc
test
out
and
mov
aam
stc
out
hlt
in
sar
cmp
xchg
fdivp
jmp
out
sar
out
jecxz
test
mov
in
in
cmp
xlat
repz
int3
lret
fildl
out
neg
out
mov
in
ljmp
fistpll
shl
iret
sarl
aas
icebp
cmp
orb
sti
incb
aad
lret
jmp
leave
std
fcomi
idiv
in
shl
fcmovbe
enter
rcl
lret
ljmp
clc
lret
lret
lret
in
loope
aad
hlt
fadd
out
int3
int
lret
addl
out
cli
hlt
loopne
cmp
out
test
clc
hlt
fidivrs
aad
imul
into
lret
into
sub
test
shl
out
jmp
out
sbb
mov
or
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
imulb
test
jb
jg
fiaddl
jle
testl
xchg
out
int
fmul
sub
fbstp
cmpl
fcmovnbe
in
flds
std
xchg
call
ljmp
aam
cmp
aam
mov
jecxz
nop
test
cmp
xor
enter
shl
sar
clc
cli
call
xchg
loop
loop
sarl
lret
repnz
in
aad
idivb
out
test
hlt
ret
out
mov
test
in
out
jmp
aad
clc
test
fsqrt
cld
test
xchg
out
ljmp
mov
jmp
into
std
ss
icebp
fdivp
lock
stc
ds
loope
out
in
mov
in
nop
aam
shl
fsub
in
cmp
aam
cmp
cld
addb
out
int3
icebp
fldlg2
aad
call
jecxz
int
cmp
mov
leave
mov
mov
cld
repnz
mov
in
int
cli
in
std
in
xlat
div
fildl
ljmp
icebp
xor
mov
call
shr
fsubr
cmp
int
sarl
ret
fsubr
enter
rorb
sub
cmp
idivl
icebp
ret
adc
lret
addl
into
in
shr
into
cmp
cmp
ds
fadd
cld
stc
jmp
clc
or
out
fsubrp
in
aaa
divb
loop
in
in
test
test
repz
aaa
aad
in
stc
cmc
fdivl
in
fadd
rcl
out
lret
enter
in
mov
mov
stc
xor
xor
repz
fmul
sbb
iret
jecxz
and
les
ljmp
iret
into
cs
hlt
cld
fcomi
iret
repz
mov
fdivr
mov
in
in
lret
pushl
shll
jecxz
aam
cmp
add
stc
out
lds
and
test
aaa
xor
into
repz
leave
aaa
sti
lock
cmp
jecxz
out
lret
int
sub
sub
clc
aad
repz
inc
cld
rolb
cmp
sub
jmp
ror
rcr
ror
js
cmp
pop
je
jg,pt
fiaddl
jle
clc
sbb
aam
cmc
flds
into
lret
repz
xor
in
shlb
cmp
repz
jmp
jecxz
cli
icebp
xchg
mov
xor
std
cld
div
cmp
aad
loope
shl
leave
enter
fsts
ffreep
loop
sub
stc
lret
leave
xlat
aad
cmc
repnz
shl
rcr
clc
fucomi
movb
test
xor
lret
filds
aad
in
xchg
call
out
cli
out
nop
jecxz
iret
out
shl
lock
call
sar
inc
fdivp
call
out
in
loop
shr
out
repnz
jecxz
das
mul
clc
sti
cld
int
sti
cld
ret
mov
fcmovu
cld
test
das
cmp
lock
imul
into
out
lret
fmul
hlt
in
addb
out
in
loopne
call
in
int
lret
shl
ds
rcr
mov
in
decb
in
call
aaa
aaa
cmp
cld
fmul
fucomip
test
aam
fdivr
ljmp
rol
in
loop
icebp
fsubrp
cld
out
cmp
rolb
repz
ret
in
out
jmp
sub
lds
fnstcw
sti
flds
aam
out
mul
cmp
jmp
xor
div
hlt
cmp
cmp
int
cmp
hlt
fsubr
mov
jmp
lock
fidivs
cmc
ss
repnz
xlat
cmc
out
stc
clc
xchg
ds
leave
in
and
orb
ljmp
std
rcr
loop
icebp
div
aas
shl
loop
out
xlat
inc
sti
into
lret
ror
into
in
repnz
fcmove
aaa
loop
repz
sar
loope
cli
fnclex
fsubr
mov
nop
mov
lret
aaa
jmp
out
loopne
fucom
stc
test
clc
leave
in
xlat
cmp
std
repnz
ljmp
dec
cld
hlt
jecxz
add
rcr
loop
shl
clc
into
mov
xchg
in
lock
aad
out
in
fsubrp
rcr
loope
ljmp
sti
xchg
out
cld
sub
loop
lock
in
ss
movl
or
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
les
rep
sarb
add
fyl2xp1
int
xlat
repnz
ljmp
mov
xor
in
cmp
ds
jecxz
sar
ret
fsubr
loope
into
nop
mov
mov
fmul
leave
das
jmp
ds
ret
loop
fcomp
cli
lret
int3
leave
fdivrp
lock
sub
sarb
div
in
fsub
fnsetpm(287
out
fdivr
in
jecxz
addl
cli
rcl
xor
cmp
cld
mov
out
leave
int
xchg
lea
icebp
jmp
fdiv
aam
xor
out
icebp
sar
enter
mov
fdivp
fst
jmp
ss
mul
stc
shr
ss
clc
in
ffreep
ret
mov
add
mov
xchg
xchg
cmc
loop
cmc
out
jmp
out
cmp
test
stc
mul
aad
lret
int
out
xchg
std
fmulp
clc
xor
cmp
xlat
sti
ljmp
loop
aas
test
fcomp
in
out
call
aad
xor
cmp
aam
rolb
call
aad
fucom
in
loopne
test
out
jmp
cmp
out
test
fiadds
mov
mov
rol
hlt
aaa
cld
hlt
jmp
faddp
in
add
adc
ljmp
jmp
ret
test
xlat
out
fst
int
cmp
ret
mov
jecxz
in
into
pause
ljmp
cmc
das
fnstsw
xorl
aad
aad
ret
ffreep
in
ret
mov
cld
loopne
cs
in
enter
cmp
clc
mul
aas
aam
shl
aas
stc
loopne
call
xchg
in
cmc
aad
aad
cmp
sti
cld
repnz
iret
loope
xlat
test
in
orb
mov
out
in
sarb
cmp
cmp
cmp
ds
aam
cli
sti
sti
fdivr
out
jmp
int
mov
rol
lret
xor
shr
fcomip
ror
fldl
adc
mov
int
rclb
lret
enter
std
repz
iret
sar
ljmp
out
in
xchg
jmp
or
xor
lret
faddl
rol
add
push
sbb
add
cli
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
imul
jg
fiaddl
jle
test
in
aam
out
into
repnz
mov
std
ljmp
test
xor
in
icebp
repnz
rcr
repz
cmc
lret
cmp
in
xchg
cld
lret
jmp
loope
xchg
ljmp
repz
aam
cmc
loope
sar
shl
cld
lret
fld
in
ret
xchg
lret
loopne
rol
leave
fcmovbe
call
shl
aad
fsubrp
fxch
fimull
hlt
jmp
lret
out
std
loopne
leave
aas
loopne
cld
rol
cmc
rorl
into
jmp
rolb
icebp
jecxz
icebp
fcomip
hlt
inc
int3
std
fmulp
roll
int
mov
repnz
hlt
cmp
in
in
rcr
add
in
test
call
lea
aam
divl
cmp
aas
jmp
loope
xchg
rcl
loopne
cli
jecxz
faddl
mov
loope,pn
int3
divb
aam
sub
mul
push
cmc
enter
out
test
ret
int
shl
fnstenv
leave
xlat
clc
repnz
cmp
loop
aas
imul
repz
jmp
and
xlat
imul
lret
repz
lret
cmp
clc
in
ffreep
loope
jmp
fmul
jmp
jecxz
aad
out
stc
aaa
ljmp
aad
loope
aas
cmp
mov
jecxz
mov
xchg
lret
into
xchg
fsubr
xchg
into
xor
stc
lock
sar
fiadds
cmp
repz
leave
xchg
iret
call
sar
cmp
cmp
cmp
std
out
rol
xchg
repz
into
out
in
out
std
xlat
hlt
icebp
repz
fcmovnbe
lds
std
int
into
movb
das
out
sti
fsubr
int3
sbb
aas
cmp
test
push
lret
cli
icebp
fiaddl
sub
int3
call
xor
cld
xor
jmp
xlat
loop
fsubp
decb
call
int3
xor
ret
loop
cli
fimuls
out
int
test
ss
cmc
fcmovu
cmp
sar
bnd
repnz
fisttps
xor
out
out
in
lock
jmp
fcom
rcr
fstp
fnstsw
fmull
sub
lds
fiaddl
jle
neg
ljmp
xlat
iret
in
loope
fdiv
out
ljmp
in
xchg
call
cmc
repz
fcomi
clc
lock
repz
in
les
out
mov
mov
into
aad
fstpt
cmp
in
cld
ds
into
test
cmp
mov
lret
ljmp
call
hlt
lret
cld
iret
lret
aas
rcl
xchg
call
orb
in
leave
sub
int
clc
cld
in
repz
hlt
fdivp
mov
cld
fdivr
clc
testl
shl
in
in
lret
push
fincstp
lret
lock
aad
fisttpl
test
call
mov
divb
sti
xor
lret
loopne
clc
out
icebp
fdivr
roll
xlat
call
shl
addl
sti
stc
iret
rol
in
shl
fiaddl
jmp
out
out
call
aaa
clc
aaa
out
ljmp
mov
in
jmp
int
leave
xchg
std
xchg
cmp
lret
xor
cmc
cli
imul
cmp
in
out
roll
fiaddl
addb
xor
aad
jmp
sar
sti
adc
enter
mov
fchs
out
nop
std
xchg
xor
out
sub
clc
das
rcl
loopne
cli
icebp
sar
testl
sti
cmp
jecxz
in
int3
ret
xor
clc
fsubr
aam
stc
cmp
roll
ds
stc
stc
xchg
out
ljmp
int3
out
shlb
cmp
sarb
sbb
int
fiadds
loopne
xor
cmp
shl
ret
clc
faddl
xchg
rol
push
divb
jecxz
f2xm1
out
cmp
loope
neg
cmp
cli
cld
stc
fucom
xchg
mov
loope
repnz
shl
rcl
divb
sti
cmc
fnstenv
fstpt
cmp
out
in
cld
in
mov
fsubp
int
in
call
std
cmp
cmc
ffree
fdiv
sar
mov
in
in
lret
in
out
call
out
repnz
icebp
aaa
cmc
fucom
ret
rcr
leave
in
repnz
into
mov
xorb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
or
jg
fiaddl
jle
jecxz
jmp
out
int
frstpm(287
std
in
into
mov
in
fsubp
jmp
cmp
icebp
sar
jmp
clc
vpminub
ret
mov
jecxz
fcmovu
fcmove
loope
loope
jmp
jecxz
xor
in
xor
lret
sti
lock
shl
cmp
in
cmp
stc
orl
xlat
stc
divl
clc
rcl
fsub
out
out
orl
aam
loope
lret
out
cmp
vpsubd
loope
xchg
int
nop
loope
loop
xor
shr
out
aaa
xor
lret
aas
into
test
fcmovnu
cld
sti
out
std
sub
call
rcl
ret
aaa
div
fdivr
shr
repnz
in
cld
aam
jmp
loop
int3
xchg
out
lret
int
in
in
not
clc
xlat
fsubr
repnz
rorl
jmp
fdivr
xchg
xor
fcmovnbe
cli
fcmovbe
fidivrs
sbb
clc
ds
fdiv
aad
xor
aad
jmp
sti
sar
icebp
call
fucom
shl
fcmovne
movl
cmp
ljmp
int3
mul
cmp
out
out
in
lret
mov
out
fsubr
imul
ret
loopne
vpminsw
mov
fildl
rolb
xor
stc
std
out
not
incb
loopne
lret
stc
out
mov
fdiv
xchg
icebp
fcom
xor
in
clc
rcr
stc
std
iret
rcr
vpmulhw
loopne
sti
loop
leave
loop
sti
out
fists
ljmp
lock
out
sti
int
aas
roll
ljmp
lret
lock
ljmp
cmp
cmp
in
cld
sarl
jmp
nop
fcmove
loope
repz
aad
icebp
cmp
fidivrs
int3
filds
xor
xchg
fxch
clc
mov
out
shr
div
iret
clc
jmp
into
cld
cmc
fadd
cld
mul
iret
out
sti
int3
jmp
enter
lret
shr
cmp
shr
cmp
fld
mov
xchg
fisttpll
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
nop
cmpb
lret
fiaddl
jle
mov
decb
sarl
ss
loope
fnstsw
cmp
cli
in
loope
stc
in
mov
jmp
xor
int
out
cmp
ret
aas
aam
clc
fiaddl
sar
in
xchg
shl
out
jmp
sarb
lret
repnz
clc
lock
call
aad
out
loopne
test
repnz
in
ss
xor
sar
ds
icebp
lock
sar
stc
ljmp
cli
in
mov
rcl
rcr
xor
cmp
cmp
xor
adc
fsubr
loopne
fucomi
call
aam
ret
stc
clc
fmul
ljmp
cli
sar
cld
aas
xchg
rorb
xor
jmp
fstp
loope,pt
loope
out
rolb
fldl
in
out
out
in
xor
cmp
lret
out
rol
orb
call
ljmp
hlt
in
xor
into
out
out
xchg
mov
in
nop
call
iret
rol
xor
aaa
cli
repz
iret
hlt
cmp
cmc
mov
lret
fsubrp
mov
roll
out
repz
leave
cmc
aas
idivb
fucomi
orl
mov
test
enter
in
repnz
sti
into
loop
ret
lds
mov
leave
mov
cld
or
loope
jmp
imul
loopne
repz
xor
call
les
repz
fndisi(8087
ljmp
shr
mov
das
lock
ret
aam
repnz
int3
fdivrs
roll
mov
ljmp
out
in
xor
jmp
sub
rol
ror
ss
mov
aas
test
enter
mov
mov
jecxz
iret
cli
int
int3
xlat
aaa
ljmp
cld
in
fdivr
clc
ljmp
out
repz
int3
idiv
out
aas
cmp
xchg
enter
loope
jmp
repnz
iret
loope
out
stc
xor
repnz
clc
loopne
std
lret
loopne
into
enter
aaa
lret
test
rcr
xlat
xchg
fdivp
out
sub
cmp
movl
jmp
rcl
ret
fucomp
insb
fstps
loopne
sbb
test
jle
add
in
leave
lock
fsubp
in
jmp
out
leave
clc
rcl
fcmovbe
fiaddl
loopne
addl
ljmp
sar
lret
out
test
mov
neg
xchg
sti
filds
iret
int
jmp
jmp
int
in
xor
clc
hlt
xchg
xchg
in
xchg
loop
rcl
ds
ds
fdiv
fdivrp
clc
icebp
movl
jecxz
shl
out
aad
into
lret
idiv
sar
in
sarl
fdivp
mov
lret
mov
cli
loop
rcr
aam
rcl
xor
fadds
ljmp
dec
aad
jmp
int
ljmp
neg
cmp
cli
clc
les
lret
call
lret
icebp
cli
aad
fdivr
repnz
cmp
loope
jmp
icebp
aad
enter
aaa
std
cld
call
xchg
fildl
jmp
loopne
mov
ljmp
cmp
div
aad
in
icebp
xchg
sub
test
test
jmp
aaa
leave
in
xor
lock
out
out
jecxz
xchg
movl
xchg
xorl
repnz
cmp
in
fcomp
sbb
movb
in
sub
in
not
xor
repnz
out
lret
loopne
cli
std
in
loopne
fldl
cld
enter
fimuls
stc
xor
das
fsubrp
shr
xor
loope
faddp
jmp
loopne
mov
mov
aaa
out
xor
loop
call
rcr
leave
cld
cld
out
mov
loopne
enter
cmc
lock
iret
ljmp
rcr
repz
fsub
test
ret
lea
xor
clc
xor
std
test
les
stc
fnstsw
test
sub
aad
hlt
hlt
out
rcl
shl
cmpb
adc
addb
hlt
xchg
out
cmp
cld
out
out
std
loopne
aad
hlt
fisttpl
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
fisttpll
into
leave
enter
rcr
cld
fnstcw
leave
int3
in
aad
and
jecxz
jecxz
fmuls
mov
xchg
ljmp
cmp
stc
stc
out
cmc
repz
aad
xlat
ror
or
loop
xchg
xchg
in
sub
in
int3
fucomp
clc
clc
lock
aam
faddl
iret
loope
icebp
mov
iret
xor
sti
out
cld
xor
cli
or
repz
clc
mov
xchg
call
call
push
loope
loope
rcr
test
xlat
mov
loopne
enter
ret
cld
in
call
das
iret
xor
clc
dec
cmc
xor
cmp
xchg
lret
jmp
int
lock
incl
cmc
xor
std
lret
cmp
jecxz
cld
repz
mov
loop
cli
out
into
loope
out
ret
xlat
xor
cmp
rcl
test
fdiv
cld
fadd
clc
or
orb
idivl
enter
xlat
ror
fmul
loopne
rcr
mul
out
iret
xchg
ftst
icebp
out
out
int3
shlb
cmp
ljmp
cmp
fiaddl
clc
fcomp
test
lock
xor
cld
cli
int3
xor
adc
jmp
int3
cmp
xchg
xchg
cmc
mov
mov
int3
xlat
std
ret
loopne
mov
in
call
int
ret
enter
cli
cmp
ljmp
xchg
jecxz
testl
mov
in
fxch
out
fucomp
jmp
imul
cmp
or
test
fdiv
decb
repz
in
lret
shll
add
sbb
fimuls
int3
orl
repnz
fstp
lret
test
out
in
fdiv
cld
lret
lock
leave
xchg
int
in
in
cli
fxch
int3
sti
neg
ljmp
hlt
repz
out
mov
xchg
ss
aaa
stc
int3
in
into
std
jmp
iret
and
jmp
imul
mov
jmp
loope
xchg
xchg
xor
hlt
in
fsqrt
fcmovne
shl
sar
out
ret
clc
add
jmp
rcl
aad
loop
pop
sbb
iret
add
sarl
fiaddl
jle
fdiv
shr
fmulp
fisttps
lret
decl
shl
cmc
cmp
idiv
in
xlat
icebp
enter
std
testl
leave
aad
lret
shr
repnz
repz
cmp
loopne
xor
vpmovmskb
int3
xabort
lock
iret
xor
ret
shr
hlt
cmc
ds
out
sub
in
mov
ret
aas
cli
leave
shl
into
loopne
rolb
xlat
int3
aad
cmp
xlat
fstp
fdivrp
out
sar
mov
in
fcom
mov
ficoml
clc
repnz
in
leave
sar
fmulp
cmp
int3
int3
fiaddl
loop
loop
rorl
in
iret
aam
int
aad
sti
jmp
hlt
fisttpl
lock
stc
ffree
shl
lock
enter
fcmovbe
rcl
cld
idiv
test
ret
clc
and
mov
cld
out
icebp
loope
loop
ljmp
shl
fadd
aam
loop
ror
idiv
out
test
lock
mov
fildll
xor
into
fucomi
cmp
aaa
in
rolb
std
mov
test
call
hlt
jmp
into
repnz
in
sar
cmc
int
shl
aas
icebp
lock
cld
jecxz
nop
test
ror
ror
repz
in
jmp
stc
sar
xchg
shl
xchg
loopne
ljmp
mov
xor
repnz
cmp
sar
cmp
fdivr
fisttpll
mov
std
adcb
int
leave
ret
cmp
cmp
call
fcmovb
cmp
mov
std
iret
int
lret
mov
into
in
cld
fdivr
int3
sti
fmul
in
test
sti
xchg
mov
std
cld
jecxz
mov
icebp
into
sti
out
out
fdivr
shl
fyl2xp1
rol
out
aam
cmc
and
mov
loope
loope
jmp
int3
fnstenv
sub
and
xchg
stc
ljmp
shr
xchg
subb
xor
clc
shl
cld
loopne
roll
mov
iret
rcr
loop
xchg
xor
xor
out
enter
cmpb
ds
fst
rcl
fst
mov
iret
in
test
xchg
hlt
std
hlt
divl
xor
int3
decb
fdivs
add
je
add
enter
fstp
int
inc
dec
and
popa
add
in
std
ret
fst
fcmovnb
cmp
in
int
bnd
cli
stc
ror
cmp
loope
rcl
ret
roll
fdivr
xchg
decb
repnz
sti
xor
fnstcw
cli
jmp
addl
rcr
jmp
xchg
test
cmp
int3
leave
cld
out
iret
or
not
test
xor
test
testl
stc
shl
out
in
out
loopne
leave
rolb
xlat
testb
call
leave
xbegin
stc
out
in
loop
aam
repnz
aas
inc
xchg
xchg
fistl
cmc
sti
aam
xlat
fidivrl
std
loop
fistpll
jecxz
aam
faddp
cmc
test
jmp
in
enter
cmp
into
aam
aad
xchg
cmp
jmp
std
mov
xor
sarl
imul
cmp
rcl
sar
ret
in
movl
out
cmc
cli
lock
lock
jecxz
jecxz
testb
jmp
fcom
enter
iret
out
cmp
sar
rorl
mov
test
mov
loopne
shl
fstpt
shll
in
lock
sti
hlt
ret
test
out
aam
fucomp
xor
out
cmc
lret
out
repz
ret
fcomip
sti
ret
cli
fmulp
xor
mov
test
fidivrl
cld
in
ljmp
cmpb
mov
and
xchg
shll
in
in
enter
cmp
add
jecxz
fdivr
orb
imul
shl
out
fucomi
cmp
push
fcompp
repz
mov
lret
mov
int
mov
fcoml
les
icebp
jmp
jmp
in
mul
idiv
test
jmp
loope
jecxz
and
jmp
in
out
icebp
jmp
in
loopne
cli
shl
lds
test
mov
xor
clc
xor
xor
shll
ror
test
and
enter
mov
fcomp
lea
jmp
ret
ljmp
fistpll
fcmovb
add
sti
jbe
add
xchg
add
add
add
sahf
add
fsubr
rcrl
add
add
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
mov
aad
jle
add
icebp
int3
ljmp
neg
hlt
leave
out
mov
fsub
nop
mov
and
shr
ret
repnz
ss
loop
sub
mov
call
out
imul
cld
repz
in
in
xlat
loope
hlt
iret
icebp
fst
xlat
sub
mov
leave
in
and
adcb
int
xor
iret
stc
std
out
test
cmp
cmp
lret
out
mov
xor
repz
xor
xor
xlat
iret
lret
repnz
int
rclb
lret
jmp
into
int
rcl
jecxz
clc
test
out
fsubp
sub
fcmovbe
out
fsub
loopne
repnz
aam
aad
fdiv
out
clc
fmulp
ljmp
lret
shl
ljmp
rcr
cld
in
aas
rcl
xchg
mov
int
out
int
ss
stc
into
cmp
cmpb
sarb
stc
mov
rolb
xor
repz
out
enter
cmp
ds
mov
fdivr
xchg
cli
test
jmp
call
lock
fdivrp
aas
lock
cmp
sti
test
clc
stc
adc
lea
cmc
lret
int3
icebp
ss
rolb
mov
mov
test
lock
fsubrs
lock
in
jmp
aad
fld
test
or
jmp
int3
cs
int3
mov
fdiv
ss
shl
adc
in
mov
in
jmp
fsub
lret
repnz
sub
xlat
sti
stc
fucomp
adc
cmp
test
fadd
fiadds
sti
hlt
in
and
in
enter
sarb
xlat
jecxz
loope
loop
test
in
xchg
sbb
nop
xchg
jmp
ss
cmp
shl
adc
in
mov
in
in
clc
xor
les
aaa
out
cmp
ljmp
aam
xor
jmp
mov
out
or
aas
xor
rcl
or
neg
fildl
rorl
cld
into
xchg
loop
loop
out
enter
xor
shlb
add
clc
jmp
aam
mov
int
rol
repnz
mov
fdivrs
fiaddl
jle
hlt
shll
call
ret
test
loopne
fcmovnu
cld
leave
ljmp
in
xor
rcl
repz
rol
loopne
cld
xlat
fprem1
in
lret
orl
out
divl
out
lret
rol
shl
cmc
xchg
dec
fisttpl
hlt
lock
not
ror
in
sar
jmp
into
hlt
fnstsw
sar
rcr
out
xchg
in
ljmp
in
iret
cs
sarb
out
ds
inc
and
in
idiv
out
out
cld
xchg
in
mov
into
cmp
test
idivl
cmp
clc
leave
loopne
clc
fsubr
out
hlt
mov
cli
cli
call
stc
sbb
iret
cmp
flds
cmp
mov
rcr
imul
cmc
lock
cmpb
stc
lock
sub
in
out
ror
out
xchg
xor
cli
sarb
cmp
loopne
cmp
jmp
lret
fcmovne
test
jmp
mov
cmp
cmp
shl
in
into
aas
out
cmc
repnz
out
fldl
nop
test
mov
jecxz
lret
cmpb
fadds
sbb
fsubrp
sti
enter
loop
shr
xor
fdivrs
lret
cmp
stc
ret
or
mov
jecxz
mov
orb
xlat
cmp
clc
xlat
flds
in
fiaddl
jmp
mov
clc
fmul
xor
cmp
adc
test
shl
cmp
aad
sti
mul
sti
xchg
xor
out
repnz
not
shr
iret
sbb
stc
ds
lret
testl
divb
int
in
lret
cli
ds
icebp
rcr
clc
out
cli
movl
int3
cmp
fcomi
ljmp
std
cmc
mov
xchg
jmp
cmc
ret
leave
call
cmp
cmp
fcomi
hlt
fcmovu
neg
xbegin
int3
cmp
int3
aam
cmp
cld
aad
stc
cmp
lock
test
jecxz
mov
xchg
adcl
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
scas
or
add
int
shl
in
fdivrs
xor
testb
aam
mov
clc
imul
mov
jmp
in
subb
imul
ret
sti
not
lock
shr
test
orl
loope
xchg
loope
jmp
into
leave
int
shr
fst
cli
aad
rol
div
cld
ret
sub
in
ret
out
in
xchg
aam
div
xor
in
cmp
cmpl
cli
testl
out
enter
mov
vpminub
cmp
fsubr
std
aam
rolb
std
xchg
ljmp
ljmp
xor
in
lret
out
cmp
xor
stc
xchg
mov
in
enter
and
xor
ret
int
cmp
rolb
cli
stc
loop
dec
fsubp
xchg
mov
sub
ljmp
std
xor
in
test
loopne
fmul
test
cli
xchg
sbb
int
aaa
lret
lock
rcl
xlat
aam
aam
cld
loope
std
rcr
rol
fistl
lret
nop
mov
call
in
ljmp
ret
repz
fsubrp
aad
clc
or
fsubrp
in
shlb
in
cmp
ror
loopne
rol
or
jmp
sub
hlt
jmp
sub
xor
icebp
in
shl
neg
cmp
not
cli
out
mov
and
into
enter
cmc
imulb
leave
ret
jmp
cld
ss
int3
cmp
cmc
loope
faddl
cli
in
fiadds
repz
in
fsubrp
rol
lret
in
ds
loope
lret
ror
orl
xor
cmp
cmp
cmp
mul
cli
decl
call
xchg
cmc
shl
shr
enter
jmp
cmc
sti
rol
shl
loop
jmp
out
repnz
int3
into
aam
in
ss
lret
in
cmp
ljmp
in
xchg
add
xchg
ljmp
in
cmp
xor
ss
icebp
lock
sti
cmp
enter
into
loopne
sub
sar
idiv
fucomip
idiv
sarl
out
fscale
fdiv
lock
jge
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
push
insb
test
jle
add
xor
out
in
aam
out
sar
out
lret
repz
cld
fdivr
test
in
xchg
iret
mov
jecxz
in
repz
int3
out
ljmp
mov
lea
int
adc
out
enter
aad
cmp
aad
cmp
call
cld
rcr
ljmp
int
aam
in
out
shl
in
testb
loop
test
decl
test
shrl
jmp
in
fcmovnbe
aaa
cmp
or
mul
fildl
xchg
jmp
fdivp
rcl
int
sar
fcmovbe
fnstsw
cli
sar
fprem
iret
fcomip
ret
in
xlat
mov
in
call
shll
xor
cld
cmp
lret
test
cld
hlt
aad
in
fldl
rcr
xchg
das
xor
int3
int3
fstpt
addb
jecxz
mov
orl
fdivl
leave
fdivp
aas
shlb
test
cld
loop
orl
in
lock
int3
xlat
icebp
cld
xor
jmp
cld
into
out
ffree
rolb
jmp
ljmp
rcr
xor
leave
fidivs
repnz
int3
clc
cld
xchg
out
dec
mov
fcoml
into
ret
lret
repnz
cmp
jmp
mov
mov
in
int3
ss
aaa
shr
in
icebp
out
cmp
icebp
test
jmp
jecxz
jmp
fists
xor
in
clc
out
in
roll
xlat
repz
mov
mov
cmp
sarl
fxch
cmp
out
rcr
shl
test
jmp
mov
lea
in
cmp
out
cmp
lock
loop
aas
ljmp
enter
shl
loope
shl
out
idiv
in
in
fnstsw
cmp
aas
leave
jmp
mov
call
in
xchg
cmc
cmp
cmp
cmp
ss
into
ss
xlat
fcmovne
enter
lea
mov
test
leave
iret
fldpi
cmp
aas
xor
ds
xchg
fucomip
in
add
adc
add
jmp
aad
ret
int
fistpl
shll
fiaddl
jle
loope
test
out
int3
xor
jmp
in
cmpb
sub
repnz
std
test
shr
fiadds
out
cli
sti
repz
xlat
cmp
imul
int
in
clc
loope
fiadds
cmp
std
ror
xor
lret
icebp
sti
lock
rol
clc
rcl
cld
test
fxch
xchg
sti
mov
loop
leave
jecxz
int3
pushl
test
fdiv
cld
cmc
aas
lret
cld
fucomp
in
shl
out
aaa
sarb
test
aaa
aam
repz
rolb
add
xchg
xchg
cs
aaa
cmp
std
out
aas
xor
cmc
jecxz
addb
mov
call
xchg
out
divl
aad
aas
adc
lret
icebp
loope
repnz
shr
lret
idiv
fimuls
lock
ret
cmp
cmp
int
cmc
sarb
les
loop
out
jmp
nop
nop
rcl
call
jmp
call
sub
stc
loop
leave
xchg
fcmovu
out
xchg
fldl
iret
leave
jmp
jmp
int3
in
icebp
out
out
jmp
lret
icebp
test
cmc
hlt
clc
ret
into
cmp
int3
cmp
imul
xor
out
int
shl
aas
aam
xchg
cld
orb
mul
jmp
lret
ffree
cmp
cmp
cmp
ds
shl
std
mov
xlat
fadds
out
hlt
das
xor
xor
cmc
fistpll
into
fdivrl
cld
rol
in
out
fnsetpm(287
xchg
in
loopne
cmp
enter
leave
cmp
int3
ret
fadds
lea
stc
mov
loope
iret
loopne
xchg
das
iret
out
sti
leave
cmp
repz
sti
shl
in
jmp
mov
xlat
jmp
iret
shr
sub
xor
hlt
jecxz
cs
ds
mul
std
cld
std
stc
sar
out
cld
test
call
stc
fadd
out
std
icebp
std
xorl
cmc
cli
rol
cmc
cli
lret
sub
cmp
repnz
xor
cmc
aad
lret
aaa
call
jecxz
in
in
into
xor
sarl
cld
stc
shl
xor
std
int3
shr
int
cli
loope
imul
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
cmp
loope
jle
add
cmp
jmp
icebp
aad
out
jmp
aam
cmp
test
cmp
fdivrs
fstp
incb
lock
in
call
out
loopne
aad
aad
ljmp
std
fsub
lock
icebp
loop
cli
xlat
into
cmp
imul
jecxz
out
loop
fsub
mov
fcomi
faddp
mov
mov
addl
cli
out
std
testl
enter
loopne
in
repz
nop
out
jecxz
cli
int3
enter
icebp
cmc
shl
fdiv
in
out
loopne
out
shl
xor
int
xlat
aad
out
loope
loopne
stc
icebp
fcomp
aam
call
icebp
cli
sub
in
icebp
lret
fmul
cld
in
shl
cli
cmp
in
aas
lock
mov
xchg
loop
call
shlb
hlt
in
test
aam
aam
in
repnz
fiadds
cmc
sub
cli
in
in
lret
loopne
divb
int3
ljmp
cmp
xor
shl
loopne
mov
orb
loope
aaa
out
aam
cmp
cmp
filds
clc
shl
clc
loop
out
jmp
leave
xchg
out
mov
fcomp
cmp
loopne
cmp
ret
mov
sti
iret
nop
jmp
lret
lret
hlt
cmp
repnz
hlt
ret
in
mov
mov
jmp
in
lret
lret
idiv
sub
hlt
rol
int3
rolb
ljmp
fucomi
int3
lret
lret
sarb
stc
loopne
xor
xlat
int3
in
iret
cmc
jecxz
out
in
cmp
lret
lock
sar
out
cli
in
loopne
jmp
out
lock
xor
xor
fstpt
sbb
in
clc
mov
mov
ret
sub
lret
hlt
std
out
aad
cmp
sti
repz
xchg
jecxz
sti
mov
mov
jecxz
mov
int3
shll
leave
fadds
ret
lds
in
jecxz
orl
aaa
jmp
iret
in
iret
cmc
cmp
sub
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
rolb
fldl
hlt
int3
int3
xchg
jmp
in
xor
ljmp
fsubr
fcomip
lret
out
repz
loopne
ss
icebp
cld
sar
aaa
fistpll
jmp
ret
aad
adc
jecxz
loop
mov
cld
test
int3
divb
aad
out
cli
aas
aas
shr
std
lock
fadd
icebp
in
xchg
leave
lret
mov
repz
ret
hlt
fstpt
cli
int3
shl
fcmovnbe
jmp
jmp
loope
fistl
int3
ret
icebp
cmp
fcomp
fsubr
fdiv
aam
in
test
repz
xchg
repnz
inc
aam
cmp
sti
std
fdivl
cmp
xlat
repnz
call
test
fadd
mov
int3
jmp
rol
jmp
cmc
enter
icebp
fdivr
fsubp
cld
cmp
shl
fisttps
cli
nop
repz
loopne
xor
rcl
xor
aam
into
xlat
cld
loopne
aas
repz
in
ret
mov
out
in
std
cmp
out
fcmove
cmc
cmp
repz
hlt
cli
aas
xor
int
mov
loop
out
in
mov
fsubr
call
xlat
repz
fildl
addl
sub
repz
xor
iret
cmp
aad
aas
rorl
sbb
fcomi
xchg
call
into
ljmp
cmp
sbb
loopne
cld
nop
into
mov
cs
aaa
fcmovnu
cmc
rolb
jmp
nop
repz
call
fdivp
lock
rcl
shl
ret
fdiv
stc
loopne
aad
testl
test
fdiv
cmp
xor
int
rcl
jecxz
cld
loop
in
mov
mov
and
enter
fldl2e
cld
out
cmp
out
idiv
enter
addb
fnstsw
into
aad
jmp
imul
out
leave
roll
test
mov
in
loopne
loopne
xchg
xor
fcomi
aaa
fdivl
cmp
adc
sar
repz
clc
sub
sub
xchg
xchg
in
lock
jecxz
rcr
lret
cli
fcomi
fmuls
xchg
add
add
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
in
push
ljmp
jle
shl
lock
mov
in
xchg
iret
divl
hlt
sub
les
jmp
std
ds
sti
repnz
fadd
neg
int
or
lret
repnz
in
in
aad
fdiv
int3
sub
jecxz
sar
cmp
mov
out
in
jmp
xchg
aad
aam
leave
aad
shr
shll
fcomp
mov
jecxz
fscale
int3
cld
leave
ror
aam
out
fidivl
sti
cmp
icebp
fcomi
adc
cli
loope
xlat
call
jecxz
iret
out
loop
std
repz
fucomip
loope
jmp
xor
sar
out
lret
filds
xchg
loope
icebp
out
in
imul
aaa
xor
cmp
out
cli
fcmovne
lock
addb
ljmp
enter
loop
call
xor
in
shl
sar
fdivrp
int3
out
ffreep
call
test
clc
out
nop
cld
fists
repnz
cli
jmp
in
ret
iret
in
in
cmc
clc
sti
jmp
jecxz
mov
xchg
jmp
idiv
clc
icebp
lock
out
call
repnz
shl
rol
ljmp
xchg
out
mov
ror
aaa
sti
out
out
jmp
std
aad
sti
roll
loopne
out
loopne
fcomip
out
testb
cmp
fucom
sar
out
not
hlt
loopne
ret
jecxz
dec
lret
in
xchg
repnz
jecxz
xor
cmp
lret
iret
fidivrs
clc
cmp
ret
test
sub
cld
jecxz
xor
stc
repz
iret
cmp
jmp
rolb
xchg
in
int3
xchg
in
fmul
sti
in
xor
in
jmp
xor
aam
icebp
xor
roll
leave
loopne
mov
out
out
jmp
aam
lock
repnz
lock
into
repz
cli
shl
lret
std
iret
enter
out
test
rcl
neg
xlat
faddl
mov
xchg
out
xor
in
repz
sti
cmp
lret
cmp
ror
test
in
mov
fiaddl
jecxz
xor
fsubr
cmp
leave
fsubrp
rcr
adc
add
out
out
shl
shl
fdivs
clc
xor
repz
xor
add
jmp
int3
int
loope
sub
call
jle
int3
testl
fadd
orb
jmp
hlt
shrb
out
out
fdiv
rol
aam
int3
into
rolb
test
mov
jmp
ror
shl
stc
in
cmp
cmp
int3
cmc
adc
jecxz
hlt
clc
int3
lea
out
aad
lret
divl
rcr
hlt
aam
loopne
aad
fucomp
mov
in
clc
out
jmp
aad
loop
cmc
xlat
jmp
divl
aaa
std
out
rcl
loop
fildl
lret
fmuls
subl
cmp
cmp
sti
loope
idiv
shl
xor
fucomp
out
jmp
xchg
xchg
in
jmp
clc
lret
lock
hlt
lret
sub
cmc
fdivr
rol
sub
test
fadd
out
fdiv
xor
out
lock
clc
mov
out
in
std
fimuls
int3
rol
int
out
cmc
aam
out
cmp
sar
cmc
bnd
ret
jecxz
mov
in
into
shlb
sar
in
icebp
ljmp
hlt
sbb
cli
ds
cmp
xchg
lock
rcr
fsub
sar
hlt
iret
in
aad
aad
ljmp
rcl
lret
shl
les
ljmp
fadd
in
fnstsw
clc
sar
xchg
addb
lret
aam
lret
shl
fcomi
cmp
sub
jecxz
cmc
xchg
std
fcmovnu
mov
stc
fcoml
loope
hlt
in
hlt
into
fdiv
cmp
rcl
fucomp
rolb
mov
cmp
ljmp
aad
in
sti
cmp
std
sarb
in
xchg
clc
out
nop
mov
xchg
rclb
fcom
std
cld
cmc
int
loop
cmp
fcmovb
rcl
xlat
std
jmp
nop
mov
xchg
loopne
enter
stc
std
cld
icebp
shl
int
rcr
shl
jecxz
ds
jmp
testb
clc
loopne
fcmovu
int
cmp
test
lret
fldl
xor
std
jmp
clc
fsub
mov
enter
loope
xchg
xor
lock
out
add
jmp
enter
fstp
int3
shl
scas
imul
sahf
ljmp
add
ret
fdiv
xlat
shl
filds
fadd
loop
or
in
ror
in
incl
in
out
out
push
ret
xlat
rol
test
call
fcmovnu
xchg
sub
xor
call
fdivl
out
sti
lock
std
leave
aam
lds
nop
test
xor
in
aad
in
jmp
std
into
sti
aad
xchg
mov
jecxz
mov
test
out
rol
sub
ror
ss
cmp
jecxz
fiaddl
neg
out
mov
mov
leave
ljmp
clc
cmp
lret
leave
loop
cmp
out
adc
fmull
call
aam
int
ret
in
in
sti
loopne
jecxz
jmp
mov
xchg
rcll
test
cmp
rolb
shl
shr
enter
and
xchg
hlt
icebp
loop
in
std
cmc
faddp
fcmove
jecxz
cmp
les
xlat
jecxz
out
fsubp
in
into
ss
stc
lock
sar
and
rcl
ljmp
call
ret
cmc
mul
aaa
in
not
aam
cld
fld
aad
std
test
aad
xchg
mov
xor
clc
iret
fcomip
idiv
clc
rol
out
ds
in
leave
loop
xchg
out
xor
loop
lret
fucomi
out
call
in
fdiv
stc
fsincos
lret
in
sti
loop
sbb
cmp
aam
rcr
fcom
iret
cld
fdivr
test
jmp
in
aad
stc
clc
stc
leave
aaa
enter
jmp
in
or
mov
dec
aam
icebp
lret
repnz
ss
loope
shr
repnz
fcomip
xchg
lret
mov
repz
cmp
ds
std
cmp
jecxz
out
adc
fsubr
addl
leave
out
idivl
fucomi
rcr
cmc
ds
add
enter
orb
mov
loope
not
xor
repnz
int3
out
stc
loopne
enter
add
xchg
mov
loope
imul
jmp
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
ror
xor
lock
hlt
div
fcomp
xlat
into
cli
aam
ret
out
jmp
xchg
fmulp
xchg
in
out
shl
enter
cmp
ss
xor
test
cmp
mov
fsubr
mov
jmp
xor
fstpt
fdiv
hlt
aas
stc
into
cmc
fdiv
enter
sbb
jmp
jecxz
out
into
xor
fdivrs
ror
cld
cli
cli
aas
test
in
leave
orb
hlt
fmul
xor
cmc
repnz
rcl
cld
out
repnz
fsub
lret
filds
icebp
hlt
xlat
ss
xor
cmp
lret
xchg
loop
iret
in
fdivp
mov
mov
shr
xlat
idivl
int
aad
out
loop
jecxz
mov
into
iret
mov
cmc
out
sbb
mov
xlat
mov
mov
test
addl
rcr
shll
in
rol
jecxz
jmp
ljmp
out
into
repz
int
lock
sar
out
std
int3
int
xor
std
lret
or
fxch
mov
leave
in
iret
hlt
ss
fmul
leave
in
xlat
fdivrp
shl
loope
loop
jmp
xchg
mov
out
out
cmp
rcr
neg
test
shl
fdivr
loope
orl
hlt
mov
stc
in
std
aas
fidivs
and
testb
cmp
loope
repz
jecxz
lret
int
lret
stc
not
idiv
loopne
fcmovnb
loop
testl
test
in
out
enter
loopne
in
into
out
jecxz
addl
mov
imul
jmp
aas
in
repnz
and
adc
inc
fucomip
jmp
lret
sub
rcr
aaa
xlat
cmp
aam
iret
in
aas
test
in
aam
clc
out
sub
into
rcr
xchg
in
rcl
xor
icebp
hlt
jmp
sbb
cld
cli
in
call
loope
jecxz
stc
jmp
xor
cmc
xlat
sti
rcl
shl
std
addl
ftst
jmp
mov
mov
sub
cmp
mov
jbe
jmp
lret
ret
in
call
push
dec
jns
out
jg
fiaddl
jle
popl
xor
in
cmp
into
cli
loopne
aad
and
cld
in
fdiv
call
shl
loop
xor
in
out
jmp
cmp
jmp
sarb
std
out
rcr
jmp
fcmovnu
xlat
sbb
out
test
aam
out
cld
out
lock
out
jecxz
cmp
cld
mov
in
fstp
loop
lock
mov
repz
stc
aad
out
fiaddl
test
repnz
leave
loope
jmp
mov
shl
in
test
ljmp
ss
cmp
out
adc
jmp
cmp
ret
adc
xchg
loopne
rcl
sub
out
fcomp
rolb
ret
fidivrs
fst
addb
fcomi
test
xchg
xchg
out
fsub
in
out
repz
fcomip
test
loop
cli
test
les
in
jmp
mov
out
clc
xor
jmp
cli
bnd
cmp
test
repz
cs
xor
fnstcw
clc
xor
flds
fmul
cli
std
fyl2xp1
and
mov
xor
cmp
ror
icebp
call
repnz
ret
loope
neg
fmuls
call
in
movb
test
cli
test
mov
mov
in
imul
loop
lret
lock
repnz
call
into
cmp
neg
into
mov
fisttpl
icebp
in
in
jecxz
cmp
xor
loopne
fcompp
incb
cld
sub
in
aam
jmp
in
hlt
xor
clc
repz
or
mov
shr
int
int
enter
stc
fdivp
shr
lret
sti
icebp
out
rcr
ljmp
call
in
shrl
repnz
cmp
test
sar
fldl
out
test
loop
jmp
in
leave
cmc
sti
sarl
loop
cmp
fcom
call
lock
mov
mov
fidivs
xor
jecxz
leave
int3
out
aad
rcr
not
iret
vpsubw
xchg
enter
aam
xor
fiadds
lock
sarb
loop
ret
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
popf
push
shll
bnd
fiaddl
jle
test
jecxz
rol
sti
ret
out
fadd
lret
out
fcmovb
cmp
fiaddl
dec
xor
jecxz
lret
shr
cmp
shl
stc
loopne
idiv
out
iret
ret
cli
mov
mov
clc
vpsllw
sarl
cmc
leave
jmp
out
xor
div
fabs
call
mov
rol
les
cli
leave
in
neg
or
test
in
movb
lret
iret
fst
in
ret
xor
lret
xlat
aaa
rcl
std
in
out
xchg
testb
into
jmp
cmp
ss
in
repnz
shl
out
mov
cmc
lret
aas
clc
in
xchg
xchg
xchg
ret
in
cmp
cmp
cmp
out
repnz
sti
nop
enter
lock
xchg
fsubrs
cmc
in
cmp
cld
cmc
adc
ret
fcomi
test
out
loope
out
icebp
cmc
leave
lock
fxch
out
ss
shl
in
loop
cmc
jmp
xlat
in
xlat
enter
cli
cli
cmp
aas
clc
aam
fsubrp
xlat
icebp
cld
out
loope
mov
fcomip
ret
enter
icebp
lret
out
icebp
cmp
in
cli
icebp
sti
test
shl
ret
into
test
jecxz
shr
jmp
call
lock
ds
out
rcr
lret
fmul
std
dec
in
loopne
out
out
out
aaa
ljmp
test
cmc
stc
out
aam
hlt
jmp
fsub
in
mov
int3
out
les
in
in
jmp
frndint
stc
in
test
decl
test
in
xor
xor
mul
lock
xbegin
fxch
cli
xchg
out
repz
xor
clc
fmul
sbb
out
xlat
fisttpl
jmp
loop
shl
mov
jmp
aaa
cmp
ss
stc
cli
cmp
cmp
ffreep
int
ljmp
sub
call
enter
int
rolb
out
popl
out
aam
jecxz
shll
not
fsubrp
fcmovbe
repnz
jmp
fcom
mov
rcr
xlat
sub
pop
rcll
add
clc
fisttpl
cli
into
call
div
cld
ljmp
lock
frstpm(287
xlat
ljmp
leave
orl
call
pushl
std
aad
ror
test
icebp
into
nop
int3
cmp
aam
in
leave
cmc
in
fucom
loop
rolb
out
loope
iret
mov
in
jmp
xor
enter
fadd
testl
loopne
cli
xor
xlat
shl
lock
clc
loopne
loopne
fdivrp
mov
shl
sbb
loop
xchg
adc
sar
icebp
call
cmp
int3
cmpl
test
shl
mov
out
cmp
shl
xchg
lock
lock
icebp
cmp
aam
fmul
or
sbb
adc
repz
cmp
xlat
sti
repz
shl
repnz
les
std
and
xor
call
aam
cmp
xlat
into
fadd
sti
and
xchg
enter
aam
iret
ss
imul
sar
fadd
enter
lock
cmc
not
idiv
lret
ljmp
mov
icebp
ret
neg
out
iret
stc
fnstcw
jecxz
fdivr
std
in
ljmp
leave
mov
out
fucomip
lret
lock
jmp
shl
jecxz
ret
cli
fmuls
hlt
mov
loope
cmc
ss
aad
xor
jmp
xchg
out
fsub
mov
loope
mov
int3
aad
imul
sarl
icebp
loope
add
aam
xchg
neg
lret
mov
lret
adc
fcmovu
cmp
cmc
xor
in
std
xchg
fsubr
mov
call
in
in
xor
into
test
rcr
in
xchg
lret
lret
fdivrp
fdiv
xor
imul
cmp
call
lock
rcl
loop
add
fcmovnb
loopne
dec
ljmp
lock
repnz
loop
int3
test
rcl
stc
cmp
into
in
repnz
repnz
lret
out
in
std
fst
cmp
clc
sarb
in
ds
jmp
lret
xlat
aas
rcr
int
in
push
loopne
test
outsb
idivb
fiaddl
jle
aas
leave
hlt
in
fsub
adcb
div
in
in
out
rcl
fldz
repz
ds
add
leave
mov
fiadds
shl
aad
divb
lret
ror
test
adc
call
dec
out
lret
xchg
nop
repz
stc
ror
hlt
iret
int3
ds
xlat
xlat
loope
rcr
idiv
push
fsubr
lret
orl
loop
out
in
fld
sarl
repz
fsub
dec
xchg
sbb
shl
loope
call
lock
xlat
and
repnz
lock
ret
ret
test
ror
stc
hlt
int3
loope
cmc
mov
cmp
fidivrs
out
ljmp
xchg
xor
ret
out
ss
inc
out
rcl
test
sti
int
fucomp
rorb
xor
leave
cmp
cmp
in
xchg
ret
xchg
mov
iret
in
lret
iret
cmp
fdiv
loopne
loopne
rolb
cmc
hlt
xlat
lret
lret
jmp
mov
nop
cmc
out
repz
enter
shr
lock
loope
rol
aas
fdiv
loope
clc
out
jecxz
sti
fstp
out
aad
iret
rcr
test
int3
lret
fld
loope
ffreep
jecxz
mov
xchg
divl
lret
lret
loopne
cmp
ret
cld
in
ffreep
in
test
fistl
aas
rcr
icebp
lock
stc
lret
into
adc
cmp
out
stc
fucomip
out
in
push
jmp
das
div
stc
icebp
in
ljmp
sar
loop
sub
fcomp
loop
call
leave
repz
aam
out
sar
jecxz
ror
xlat
clc
ret
rorl
call
sarb
fxch
in
rcr
fmulp
fucomip
rcl
aaa
std
ror
and
xchg
in
jmp
divl
jmp
out
push
std
out
fdivrp
shl
fdivp
cmp
xor
call
out
loope
xor
sub
xor
addb
jmp
hlt
rorb
xchg
jmp
fdivrl
fdivp
out
repnz
add
jmp
jmp
lret
fst
mov
addr16
adc
jg
fiaddl
jle
cli
cmp
out
out
fucomi
cmp
fdivr
test
icebp
aam
das
out
cmp
cmp
in
cmc
enter
loop
loop
out
xor
out
fstpt
stc
in
inc
loopne
cld
xchg
cmp
out
out
shr
xlat
in
fsubrp
int3
loop
int
std
in
cld
mov
out
lea
in
fdivr
repz
icebp
ror
rcr
out
in
cmc
testb
test
nop
out
iret
loope
out
in
cmp
aas
hlt
cli
cld
loop
cmp
fsub
call
orb
lock
jmp
jmp
xlat
ret
fucompp
rol
aam
fldln2
test
jmp
ljmp
std
icebp
repz
std
cmp
rorl
int
mov
mul
xor
fnstenv
hlt
xlat
cmp
ret
aam
sub
fcmovu
xchg
jmp
lret
in
in
repz
leave
cmc
in
lret
aam
int3
test
addb
xchg
std
iret
ljmp
clc
cmp
shll
stc
ffree
and
shl
loope
lret
hlt
aas
fsubp
loopne
loop
mov
mov
out
ret
lret
neg
iret
shl
loopne
in
adc
sti
fcmove
cli
mov
fdivp
out
test
sub
jmp
iret
test
loope
cmp
leave
int3
lret
iret
lock
fcoml
jmp
jmp
lret
cmp
frndint
std
out
in
jecxz
fldl
fmulp
in
mov
cmc
sti
rcl
jecxz
fcmovbe
lock
cld
xchg
fsub
fmull
fcom
cmp
cmc
std
clc
in
fnstsw
out
rcr
out
vpor
ljmp
int
sti
iret
int3
out
cli
rol
hlt
ret
call
sub
loope
orl
ss
jmp
fucomip
loope
hlt
jmp
test
xlat
loope
flds
loop
in
jecxz
ret
shl
shll
lret
cmp
hlt
aas
hlt
jmp
fucomip
rcll
shl
xor
shl
clc
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
add
ffreep
cmpsb
sti
jg
fiaddl
jle
cmp
iret
cmpl
sti
fstp
decl
in
repz
xchg
repnz
clc
ljmp
int3
cmc
idiv
xchg
orl
and
repnz
out
xor
sub
jmp
out
cli
out
std
cli
sarl
loope
cli
out
adcl
xor
aaa
jmp
cmp
cld
hlt
aas
and
in
fmulp
in
mov
incb
loope
shl
ror
xabort
aad
fidivrl
cld
std
ret
rol
clc
sbb
stc
lret
icebp
mov
aam
aam
fsubp
int3
jmp
cmp
cli
stc
mov
sti
in
mov
xchg
int
out
jmp
xor
jecxz
in
xlat
xchg
xchg
loopne
lock
adcb
enter
shlb
fndisi(8087
push
cld
cli
loop
fmull
incl
xor
xor
leave
cmp
shl
cmc
out
neg
cld
call
loope
in
decl
stc
imul
cld
ljmp
repnz
jecxz
mov
ljmp
out
into
jecxz
iret
repz
mov
aad
jmp
lret
fldl
ror
xor
ror
int
iret
int
icebp
call
mov
mov
out
jmp
iret
loop
shrl
cmp
int3
lock
fucomp
ds
cmp
xchg
out
sub
lret
int3
and
ljmp
in
fxch
cmc
cmp
repz
loop
lret
into
into
lret
mov
aam
rcl
xor
fcmovnb
cmp
icebp
xor
loope
mov
mov
fisttpll
push
xor
icebp
div
cli
cmp
ds
cld
cmp
div
cmc
sti
xchg
fldl
fcomi
jmp
in
call
rol
test
aam
clc
loope
add
fcomi
fxch
out
xchg
in
sarl
enter
lret
aaa
sar
ffreep
test
aam
aad
xlat
int
iret
jecxz
sub
out
repz
fdivrs
adc
sarl
lock
fsub
loope
loop
call
repz
aaa
rorl
cmp
push
or
je
add
lret
ret
fcmovu
fucomi
pop
test
adc
and
jle
add
repz
int3
ds
lock
ret
loopne
idiv
cld
loopne
sti
fcmovne
ljmp
lock
hlt
test
out
ds
or
out
loop
out
xchg
call
out
iret
cmp
aas
clc
fsub
out
fcmovnb
xchg
mov
mov
mov
mov
hlt
xlat
xor
cli
hlt
into
fucomip
cmp
aam
in
enter
mul
sti
nop
leave
adc
iret
hlt
in
hlt
cmp
aad
into
stc
repnz
aas
loopne
call
loopne
fildl
ror
xor
fsubr
sarb
into
cmp
repnz
out
jmp
mov
call
xor
cmp
fdiv
cmp
fadd
frstpm(287
enter
in
mov
call
das
lock
aad
in
stc
jmp
loope
movb
cli
xlat
out
out
mov
out
lret
fsubrp
enter
in
adc
and
cli
mov
and
shl
repz
icebp
xlat
fdiv
cs
cmc
sar
repnz
lock
cmp
clc
fstp
stc
out
out
out
mov
mov
jecxz
in
out
out
cmp
int
cmp
xlat
rcr
hlt
enter
in
out
mov
mov
shrb
loop
shll
cmp
xor
fdivrl
ret
adc
ret
movl
and
iret
divl
in
clc
sti
in
fcmovbe
fcom
xlat
rcl
roll
fistl
jmp
out
jmp
jmp
fucomi
lock
out
call
xlat
jmp
fsub
xchg
fdiv
shl
xor
out
lock
jmp
dec
out
jecxz
mov
roll
call
sarb
shl
test
jmp
loope
cli
xchg
xchg
xor
out
cmp
in
fcomi
sbb
out
repnz
rcl
repnz
jecxz
jmp
lret
in
cmp
in
int
hlt
out
testb
lock
loopne
testb
xchg
shr
iret
in
in
ror
shll
ds
test
fmul
mov
fcmovne
fmull
push
jnp
add
add
aas
ret
vpcmpeqw
sbb
mov
fiaddl
jle
jmp
xlat
int
jecxz
sar
shl
test
decb
mov
ljmp
rcr
out
cmp
cmp
xchg
fcmovnb
imul
stc
nop
mov
enter
in
aaa
repnz
out
cs
sti
out
shr
rolb
decl
in
fisttpl
lret
shr
out
mul
leave
loopne
in
sar
mov
lea
and
aaa
sarl
hlt
xor
cmpb
cmp
into
enter
cli
vpaddsw
mov
nop
xchg
out
cmp
out
out
jmp
out
div
cmp
fucomp
fdiv
test
leave
out
in
cld
lret
loopne
shlb
aam
xor
ss
rolb
aam
mov
mov
cmp
shr
mov
in
xor
in
ljmp
stc
in
int
std
mov
addl
xchg
xchg
xor
fnstcw
xor
in
clc
int
xlat
fadd
shl
out
mov
int3
leave
out
lret
in
jmp
xor
in
lret
cmp
in
div
xor
test
out
loope
movl
xor
lret
iret
cmp
aad
cmp
ret
cmc
enter
aam
mov
ficoms
ljmp
rcr
aas
aam
in
test
rcr
test
xchg
jmp
rclb
jmp
std
jecxz
cmpb
sti
fcmovb
fcmovbe
aad
mov
nop
icebp
lock
ljmp
xor
cmp
leave
test
in
cld
fmulp
fldl2t
aas
clc
lock
into
out
xchg
xchg
aas
xor
aam
aad
loope
ret
cli
test
call
lds
in
loope
out
shl
jmp
int3
int3
fnstsw
mov
mov
in
enter
test
hlt
aam
loop
cli
xor
std
loope
in
fildl
mov
call
loop
subb
idiv
ss
fdivl
fldpi
shl
cmp
aad
roll
xchg
rorl
out
in
out
aam
iret
jmp
cmp
and
call
fcmovnb
movb
add
int3
ret
lret
ret
int
int3
int
adc
test
cmpb
add
fildl
jecxz
jecxz
fxtract
cmp
repnz
aad
cmp
xlat
lds
fmuls
jmp
lret
aaa
repnz
ror
enter
rcr
fptan
lret
test
loope
xchg
call
shr
stc
cli
out
fucomp
rcl
ret
cmp
rcl
jmp
loop
cli
sar
in
aad
stc
ret
icebp
repnz
call
dec
test
ror
loope
out
cli
sti
repnz
xor
xor
sti
out
iret
cmp
repnz
rcr
jecxz
mov
addb
lret
cld
int3
ss
clc
idiv
cmp
repnz
cmp
xchg
fiadds
test
out
das
aad
lret
ret
aas
rcr
ror
cli
jmp
lock
xchg
rcl
fldln2
aad
in
leave
enter
fcom
fdiv
fstp
mov
jmp
fmull
lret
iret
out
ljmp
aam
xlat
cmp
cmp
aam
aad
fyl2xp1
xchg
and
into
jmp
cmc
pushl
divl
fptan
icebp
out
in
shl
xchg
push
fdivr
int3
iret
leave
int3
jmp
xor
cmp
fsubr
sti
hlt
fsincos
in
ret
loope
jmp
stc
out
faddl
out
fstpt
hlt
std
cmp
in
jecxz
xlat
sar
movb
test
fdivp
in
jmp
int3
enter
xor
cmp
cmc
std
fiaddl
cli
les
out
leave
in
in
repz
ljmp
ds
loop
addb
lret
in
ljmp
divl
aaa
xor
xor
leave
int
in
shl
cld
in
in
orb
out
loope
shl
fmul
fcmovbe
std
cmc
aas
out
ret
jecxz
in
mov
out
std
lret
xchg
cmc
aad
xor
test
fcmovu
shl
repnz
out
int
repnz
jmp
xchg
fmulp
xchg
xchg
mov
cmp
jmp
cmp
iret
hlt
cmp
fadd
xlat
into
test
fcmovb
hlt
int
jmp
roll
out
loop
jmp
not
fldl2t
loopne
lret
cmp
orl
loopne
add
mov
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
mov
mov
aad
ss
sti
cli
xor
lock
cmpb
rol
cld
leave
mov
cli
out
xchg
lret
loope
loopne
out
aas
stc
fidivrl
hlt
sarb
ret
fmull
test
filds
aaa
lock
cmpl
enter
cli
in
into
loope
mov
out
fcmovu
xor
clc
cmp
in
shl
ds
jecxz
lret
add
into
cli
into
call
shlb
in
aad
cmc
cmp
roll
xchg
cmp
mov
int
addl
aad
fucomi
aaa
sar
aad
shl
jecxz
ffree
cli
lret
nop
lock
xchg
in
shr
shl
xor
lds
lret
sti
in
loope
ffreep
fldl
xlat
imul
lret
iret
lock
aam
shlb
das
enter
stc
ds
addl
sti
lret
fstp
sub
xor
cmc
ljmp
addb
mov
jecxz
clc
fucom
lock
mov
test
in
cmp
jmp
filds
std
test
aad
in
out
in
incl
leave
shr
call
lret
fcmovnbe
xchg
loop
cli
fsubrp
out
rcl
into
cmp
icebp
fstp
xlat
aas
repz
repz
jecxz
in
out
cld
out
jmp
int
aad
imul
fnstcw
icebp
adc
test
icebp
enter
mov
iret
stc
mov
call
cmc
aam
aam
out
std
repz
iret
test
and
test
faddl
jecxz
hlt
imul
out
fxch
icebp
clc
ljmp
ret
mov
fnclex
fildl
jmp
icebp
imul
xor
cmp
ret
sti
fsubr
aam
sbb
incl
shr
leave
loop
out
fucom
in
jmp
fsub
loope
ret
mov
cli
lret
in
loop
rcr
ret
aaa
iret
fsubr
in
icebp
lret
mul
aam
shl
fisttps
sti
xchg
in
cmp
ljmp
and
aas
out
xchg
pop
xchg
jb
add
call
add
into
aam
fmul
dec
cmp
mov
fiaddl
jle
loope
in
fsubr
lea
loop
jecxz
sti
xor
iret
ljmp
aam
loop
aam
cli
lret
mul
fmulp
out
hlt
in
clc
ss
lret
out
repz
mul
cmpl
std
shr
mov
shr
out
sar
sti
cmp
fsubr
lock
in
shr
cld
test
in
mov
jmp
fnstenv
test
or
mov
rcr
lds
fisttps
repz
sub
lock
and
xlat
test
fcmovnu
mov
test
das
in
bnd
leave
fcmovu
fcmovnbe
cld
rol
ret
sar
mov
int
lret
out
in
ret
out
fsubr
hlt
ds
ss
clc
sti
xlat
rcr
repnz
loop
mov
test
rorb
repnz
call
aam
lock
mul
loop
xlat
in
cmp
lea
xor
neg
xor
in
std
fdivrl
fcmovb
xchg
xchg
or
fld
leave
shr
int
out
in
repnz
cmp
sarl
rcl
sarl
xchg
loop
jecxz
loopne
lret
loop
mov
and
repnz
jecxz
ljmp
aad
ror
clc
shl
fsubr
mov
xchg
sub
clc
hlt
std
cmc
lret
sbb
repnz
xchg
cmp
lock
sti
xchg
in
lock
xor
in
aaa
repz
repnz
cmp
cmp
sbb
into
decb
in
in
cmp
cmp
cmp
cli
cli
lock
in
cli
rcl
cmc
lret
lock
xchg
roll
ljmp
cmp
jecxz
iret
out
stc
jmp
cld
mov
rcr
mov
clc
cmc
hlt
ret
fucomi
int3
iret
cmp
cmp
hlt
cli
cmp
call
ret
jmp
les
loop
cli
repnz
stc
cld
fnstcw
sar
jecxz
ffree
neg
enter
add
int3
repnz
ss
int3
in
jmp
xlat
test
repnz
loopne
xchg
lret
lds
loopne
repnz
lds
aam
fmul
repz
iret
out
sti
into
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
lods
aas
dec
mov
fiaddl
jle
lock
cld
enter
clc
int
xchg
rcll
in
in
in
cmp
clc
cmp
rol
cmpl
div
cli
fsub
jmp
loopne
mov
out
iret
loop
into
xor
xor
test
sbb
mov
or
ret
jecxz
hlt
aad
jmp
aas
fcmovnu
div
aas
call
test
out
stc
ljmp
loope
cmp
ret
rcl
rcr
xchg
testb
nop
xchg
in
repnz
lock
int
hlt
cmp
sti
out
std
ljmp
xchg
out
nop
in
into
jmp
rol
hlt
ss
sti
call
cld
in
test
in
fmull
xchg
xchg
jecxz
xor
enter
lret
iret
cmc
loopne
fneni(8087
shl
enter
call
jecxz
out
int3
mov
hlt
iret
out
rol
in
fucom
lret
cmp
xchg
stc
enter
aas
decl
mov
aad
das
in
out
int
rcl
stc
shlb
repnz
test
xlat
loope
incb
int3
div
cmp
enter
aaa
ror
lock
test
cld
mov
fmulp
lea
enter
into
cmp
enter
fiadds
loope
stc
mov
cld
decl
ror
fdivrs
xor
lds
aam
jmp
xor
test
xlat
ret
fildl
faddl
aaa
div
jecxz
in
fcmovne
fucomi
sar
rcl
rcr
ljmp
sub
push
out
iret
mov
xor
lock
cmp
shl
mov
aad
fsub
cld
les
lock
fnsetpm(287
hlt
jmp
cmp
into
jecxz
lock
call
out
out
ljmp
stc
ss
div
ljmp
out
shl
in
fadd
xchg
icebp
mov
in
jecxz
lret
into
les
out
cmp
fdivrs
cli
std
aas
in
loopne
addl
addl
xlat
call
cli
stc
rcl
out
xlat
fcmovu
out
and
in
jmp
ss
cmc
test
push
in
jmp
ror
rcl
stos
sub
insl
adc
jg
fiaddl
jle
fmulp
loope
jecxz
rcr
lret
mov
ljmp
jmp
in
hlt
jmp
leave
call
loopne
out
add
aas
fldl
loop
iret
in
in
xchg
leave
xor
fcmovnbe
in
int3
repz
sti
adc
fdivrp
fcomp
imul
and
mov
xor
fsubr
into
in
enter
xor
mul
clc
leave
sti
jmp
test
loop
call
shl
aas
aaa
jmp
test
ret
cmc
neg
test
mov
mov
out
pushl
fmul
lock
fcmovu
aas
fildl
icebp
xchg
out
fdiv
stc
int3
lock
loope
test
lret
xor
ss
cld
ror
clc
cmp
mov
sti
fildl
lret
loope
loope
xor
cld
out
fprem1
icebp
call
fadds
std
fstp
test
mov
jecxz
in
xchg
shr
ret
xor
cmc
xor
fxch
xor
rol
into
icebp
std
aam
push
loopne
out
out
repz
loop
in
jmp
cmp
xlat
cld
push
adc
addl
mov
xchg
iret
int3
repnz
int
imul
fdivp
cmp
rcl
fucomip
aad
incl
fldl
in
cmp
fdivrl
rcl
rcr
cmp
in
loopne
test
jecxz
stc
hlt
lret
repz
xor
aaa
iret
in
in
fmul
clc
aad
jmp
mov
notb
mov
out
addl
jmp
ljmp
std
out
jmp
iret
fucomi
shl
lret
rcr
lock
xchg
cld
ljmp
cli
leave
repnz
out
out
int3
cli
loop
cli
out
in
in
fnstcw
shl
hlt
div
aam
fdivr
out
jecxz
sbb
in
enter
clc
icebp
fmul
cmp
std
aad
cld
fcmovnb
lret
loope
in
repz
test
loope
repz
cmp
icebp
ret
jmp
in
call
xchg
repz
ret
cmp
sti
fcmovnu
fiadds
in
fcmovnu
filds
xchg
mov
xor
fucomi
lret
fisttpl
hlt
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
sub
std
ret
cmp
loopne
in
or
sti
mov
loope
enter
cli
repnz
loope
shl
ds
ret
loope
fisttpll
leave
out
jecxz
repz
test
repz
shl
xlat
fiaddl
lret
out
sub
out
lret
icebp
xchg
rol
aaa
repnz
leave
cli
aas
out
aas
adc
jmp
stc
fincstp
rorb
aam
rol
out
cmp
cld
ffree
ftst
rol
loopne
sti
xchg
xchg
out
or
loop
in
in
cmp
ljmp
cmp
xchg
test
repz
ror
call
out
aam
cmp
fdivrs
ret
call
in
call
xchg
out
shr
call
fidivrs
cmc
stc
cmpl
loopne
into
lock
xchg
mov
into
xor
hlt
rcr
into
lock
or
repz
call
adc
xchg
xchg
xor
clc
fdivrs
repnz
in
cmp
clc
int3
loop
rol
fdivrp
std
jecxz
xchg
mov
mul
ss
repz
hlt
shl
enter
aas
aad
xchg
jecxz
fldln2
mov
iret
jecxz
out
in
xchg
jecxz
in
xor
fcmovnbe
aam
cmp
cmp
aad
sbb
stc
into
mov
xchg
out
fdivrs
aam
cmp
cmp
fst
decb
iret
fucomip
divl
sub
cmp
xor
aas
cmp
xchg
cmp
cld
mov
mov
std
loopne
mov
shll
jmp
aam
hlt
div
or
mov
faddl
out
shl
xchg
xchg
icebp
in
sarl
repnz
fcmovnu
loope
shr
enter
int3
test
mov
loope
xor
rcr
fcmovnu
lock
ret
jecxz
ror
ret
jecxz
enter
fiaddl
out
leave
ret
ss
lock
rcr
addb
mov
addl
fcom
out
aad
cmp
shl
enter
fiadds
fsub
icebp
xor
int3
imul
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
mov
bound
jle
icebp
out
and
cmp
testb
in
mov
add
in
hlt
xlat
hlt
cmp
cmp
loop
rorl
orl
cmp
fidivs
loopne
out
clc
int3
ret
aam
fmuls
mov
into
popl
enter
ss
lret
sti
iret
adc
out
sti
aad
in
loopne
jecxz
imul
ret
fnstenv
repnz
imul
cmp
aam
iret
ds
repnz
and
lock
jmp
in
rol
in
std
lock
in
div
loop
fsub
orb
int
out
shr
in
shl
xor
repnz
repz
out
fcmovne
xchg
add
orl
mov
lea
stc
cmc
aad
repz
icebp
sub
cli
fnop
lock
leave
or
lret
fsubp
mov
jmp
idiv
sar
fdivr
fcom
ffreep
cmc
rol
mul
ror
lret
xor
fcmovu
cmp
enter
loopne
int3
roll
fmul
into
nop
fisttps
in
cmp
ljmp
sar
mul
and
xlat
fdivr
jmp
loopne
out
clc
cmp
icebp
int
ljmp
test
loope
enter
loop
loop
cmc
aad
lock
lret
std
aas
in
stc
adc
inc
test
test
std
leave
repz
loope
jecxz
ret
fnstenv
stc
clc
lock
int
shl
fdiv
test
enter
mov
fmulp
xchg
nop
mov
stc
enter
aaa
lret
fidivrl
rcr
cld
mov
loop
fucomp
iret
sti
enter
shl
ret
cmp
cmp
out
aam
fcmovnbe
test
cli
out
jecxz
loopne
xchg
repz
leave
repnz
fidivl
enter
fiadds
cmp
fcmovu
mov
fadds
mov
clc
xlat
leave
call
out
idiv
ret
cmc
fsub
repnz
xlat
cmp
mov
in
cmp
clc
jmp
into
repz
cmp
cmp
mul
cmp
cli
cli
addl
add
enter
fcmovne
fst
or
pop
push
add
jle
add
iret
repz
out
repnz
loope
cld
hlt
fdiv
leave
ret
movl
cmc
lret
in
sub
rcr
loope
cmc
aam
rolb
dec
faddl
xor
xor
out
enter
shl
ds
into
xchg
fimull
clc
nop
out
repz
icebp
xchg
cmc
lock
fdivr
clc
cmp
fcmovu
iret
frstpm(287
cmp
sar
rcr
mov
fsub
mov
icebp
iret
std
cmc
and
out
repz
cs
ds
rol
fcmovnbe
repz
mov
xchg
clc
out
xchg
lock
shll
hlt
sarl
aaa
aad
ds
idiv
clc
fidivl
cmp
stc
test
std
stc
fcmovu
in
jmp
aad
out
out
fidivs
repnz
icebp
fdiv
clc
clc
xor
fucomi
rorl
jmp
icebp
rcr
ret
adc
in
cli
call
loope
std
mov
out
in
lret
jmp
cmp
int
icebp
shl
sti
int
sti
fucomp
lds
incb
fimuls
ljmp
sti
out
hlt
out
ret
test
lock
jmp
out
iret
xlat
mov
cld
rcr
aad
loope
repz
cmp
in
mov
xchg
rorb
not
xor
shl
fcmovnbe
std
adc
adc
idiv
into
out
filds
fcmovbe
lret
shlb
in
stc
jmp
std
add
fiaddl
enter
adc
icebp
sub
icebp
int
cmp
imul
cmpb
out
repnz
lret
lret
mov
mov
adc
jmp
fidivrl
rcr
sti
fadd
fcmovnbe
aas
aam
cmc
fcmovb
std
jecxz
leave
mov
icebp
icebp
int
xor
jmp
leave
fsubr
and
sti
test
faddp
and
cmp
out
fbstp
fdivr
fidivrs
xlat
repnz
fadds
in
fldl2t
into
test
ficoml
xor
out
cmp
call
cmp
fprem1
faddl
mov
test
loop
imul
cli
clc
in
std
xlat
and
xchg
in
xchg
jmp
stc
call
scas
sti
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
lcall
jle
loopne
repz
ljmp
sarl
aam
cmp
aad
aad
loopne
lret
out
int
fisttpl
in
sub
hlt
fcmovu
cmp
clc
cmp
rol
sar
ljmp
ljmp
in
jmp
stc
out
into
icebp
repnz
adc
xchg
cmp
call
cmp
xor
xor
shl
clc
aaa
ret
clc
cmp
int3
stc
xlat
sti
or
rcl
loop
jmp
aaa
enter
repz
aaa
clc
ljmp
enter
fdivr
mov
icebp
lock
out
xchg
icebp
loope
xor
out
cmp
repnz
lock
les
in
lds
lret
orl
enter
fdivr
repz
jecxz
loopne
dec
test
xchg
xchg
xor
les
stc
stc
ss
stc
cld
test
jmp
jmp
iret
out
jmp
in
nop
ljmp
ss
ss
neg
sbb
repz
jmp
fcomp
loopne
orb
stc
rcr
cmp
aam
loope
cmp
fcomi
fistpll
shl
mov
mov
lds
int
lock
icebp
mul
cmp
fnstcw
stc
xlat
in
in
aas
test
clc
mov
test
mov
mov
jmp
lret
stc
into
xlat
shr
ds
test
jmp
mov
fcmovu
mov
rol
ret
sti
repnz
sar
cmp
repz
cmp
xlat
ffree
fxch
out
out
hlt
in
in
out
ret
sar
lret
lock
shl
addl
out
jecxz
mov
xor
int
repnz
fnstsw
test
inc
out
lock
mov
xchg
lock
xor
repz
repz
lret
roll
rorl
jmp
rol
rcl
lret
lock
lret
cli
ljmp
addb
jmp
rcr
test
and
jmp
xor
aam
sub
idiv
sar
clc
add
loop
in
rorl
xor
lret
repnz
cmc
add
cmp
lea
cmp
jbe
mov
mov
jmp
rcl
into
test
mov
mov
fnsave
jg
fiaddl
jle
mov
lret
repnz
cld
cmp
stc
jmp
repnz
stc
xlat
cmc
fcmovnbe
call
in
fstp
push
jmp
xor
xor
iret
shr
in
cmc
repnz
fadds
jmp
aam
xchg
loope
iret
in
std
test
out
aam
imul
int
fcom
rcl
fsubr
repz
test
or
int3
stc
mov
xchg
test
cmp
in
int3
clc
ds
and
mov
fucomp
idiv
xchg
int3
ljmp
shrl
cmc
jmp
rcr
xchg
loop
lret
std
repnz
jecxz
iret
ret
int3
cmc
fsubr
out
dec
cmp
ds
cli
lock
leave
in
add
lock
out
in
ljmp
repz
loopne
loop
aad
test
incb
mov
xchg
jmp
xor
clc
in
out
icebp
ds
jmp
loop
aam
leave
fsub
mov
rolb
int3
xchg
sarl
cmp
imulb
vpmaxsw
repnz
in
shl
shr
mov
out
out
out
stc
in
xor
xor
xor
int
icebp
call
mov
in
iret
hlt
ret
cmp
iret
leave
rcl
cmp
stc
orb
jmp
jecxz
jecxz
lret
out
stc
shr
lock
repz
out
lds
shr
xchg
mov
xchg
rol
stc
xor
repz
cli
out
ret
sbb
call
int
fcmovu
ffreep
in
fisttpll
ljmp
sbb
hlt
rcl
ret
xchg
mov
int3
cmc
fcom
cmp
enter
loop
cmp
cmp
fld
in
adc
jecxz
loopne
ljmp
out
icebp
sar
cmp
into
out
int3
cld
out
cld
sar
cmc
fcmovb
ljmp
out
ror
aaa
shr
fcomi
cli
lret
in
or
hlt
ds
test
addb
repnz
icebp
xor
shrb
fldz
repnz
repnz
xchg
in
fcmovne
mov
in
call
aad
shr
lock
cmc
sarl
jmp
ds
loopne
shr
xor
add
imul
mov
xor
jmp
rcl
leave
int
aad
or
out
inc
rorl
rcrb
jle
add
fisttpl
aaa
xor
aad
enter
aam
ret
cmp
xchg
or
mov
xor
jmp
cmp
stc
leave
icebp
cmp
fcmovnb
cmp
mov
test
add
loope
in
ljmp
xor
loopne
fcomip
fdecstp
fnstsw
roll
fmul
call
ljmp
sti
cmp
stc
sti
xor
std
aad
addl
std
out
nop
lea
clc
out
fdivl
fsubr
shr
add
cmp
in
fsqrt
jmp
icebp
int3
in
loopne
shrl
xor
into
out
xor
int3
ljmp
repnz
xchg
xchg
xchg
jecxz
repnz
ret
ss
cmp
sar
in
sti
inc
cli
aam
loop
aad
mov
mov
cld
test
std
iret
xchg
ljmp
in
neg
cld
std
cmp
loopne
fdiv
xlat
cmp
mov
dec
shl
mov
das
in
out
cmp
incb
cmp
jmp
cmp
repz
shl
fcmovbe
stc
out
leave
test
ds
hlt
aad
fcom
mov
fsubrp
and
call
out
ror
das
pushl
cld
jmp
shl
orb
stc
nop
lret
ljmp
jmp
sti
xor
hlt
sti
into
test
shl
ffree
jmp
int
fimull
repz
lret
cmc
in
icebp
sar
repnz
sar
imul
test
xchg
test
xor
int
xor
out
fcomp
ss
loopne
lock
cld
out
cmc
fdivrp
enter
in
out
out
enter
ss
xor
not
sti
imul
fst
rol
jecxz
lret
xlat
neg
or
int3
in
jmp
out
xor
xor
ss
out
in
int3
test
cli
not
repnz
lret
int
cmc
xor
lock
out
rcl
loop
fadd
faddp
mov
xchg
stc
fucomp
nop
xchg
shl
xor
sub
cli
hlt
shr
clc
cmc
repz
adc
stc
les
out
dec
rorl
out
iret
icebp
clc
repz
in
xlat
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
out
jle
pushf
jg
fiaddl
jle
repnz
cmp
ret
loope
aad
out
in
loop
cmc
neg
cmp
jmp
out
aad
fld
in
addl
rcr
loope
xor
cmc
fmulp
ljmp
in
aas
loopne
cld
leave
fmuls
in
xchg
lret
cmc
ror
call
ljmp
out
mov
fiadds
in
in
sub
fnop
sti
rcl
xlat
loopne
idiv
clc
sarb
out
xchg
jmp
hlt
cmc
repnz
in
div
stc
call
call
mov
int3
rclb
cmc
mov
icebp
cli
xor
cli
icebp
incb
lret
lock
fldl
sti
test
into
lock
aas
fst
fdivrp
cmp
mov
into
fists
out
into
out
cmp
jmp
ss
ljmp
shl
loop
lret
int
ror
lock
loope
into
lock
repnz
cli
icebp
testb
out
loop
std
test
out
xchg
clc
iret
int3
aaa
aaa
aam
cli
aam
test
loop
xlat
cmp
dec
fimull
fdivs
icebp
lret
cmp
cld
sub
test
or
test
in
xor
lret
cmp
cmp
sti
repz
xchg
out
cld
ds
cli
addl
stc
aaa
rcl
fmulp
int3
in
cmp
rolb
fstp
enter
mov
aaa
out
out
sarl
jmp
cli
out
cmp
fiaddl
into
fdivr
xchg
fldl
jecxz
shrb
cmp
int3
shl
aas
test
loopne
repz
out
cmp
lea
in
cmp
rcl
hlt
roll
rol
cmp
roll
out
shl
and
ljmp
icebp
sti
in
sar
loopne
rorl
icebp
cld
test
xchg
fsubr
leave
enter
stc
ret
fucom
test
ljmp
xchg
nop
loop
cmc
int
repz
aad
into
int
aam
xor
jmp
iret
ret
rcr
fxch
in
incl
jp
or
jle
aad
repz
loop
in
out
decb
out
repnz
stc
cmp
cmp
aas
into
inc
sub
cmc
decb
xchg
in
icebp
repnz
lds
xor
iret
fdecstp
in
aad
addl
cmp
rcll
xor
cli
cmp
call
out
in
aam
fcomp
jmp
mov
faddl
aaa
out
in
jmp
out
cmp
icebp
xor
loope
faddl
fucomip
sub
fsub
das
lock
cmp
shr
aad
int3
lock
fdivp
fucom
mov
xchg
fsubr
sti
fnstsw
out
nop
cmc
loope
fxtract
ss
fcom
in
iret
cmp
jecxz
sti
ret
fdiv
les
xchg
loope
into
call
cld
loopne
cli
into
repnz
sti
roll
call
repz
test
sub
xor
out
fsubr
fst
xor
test
ret
out
movb
aam
loope
xor
filds
xlat
sti
aad
neg
ljmp
fists
out
loop
int3
cli
aad
int
div
cmp
loop
in
in
sbb
test
enter
fcmovnbe
fcomp
lret
shr
loop
inc
loop
cmp
rcl
aas
clc
in
incb
fnstenv
fcomi
repz
fucomp
std
lds
sti
ffree
cli
fcmovne
xchg
xchg
fcomi
iret
aad
loop
jmp
aas
in
shr
lock
idivl
cmp
std
leave
leave
cld
in
bnd
rcr
xor
not
cmp
sarl
loopne
clc
add
mov
aad
out
enter
jmp
fcmovne
sbb
rcr
testb
mov
out
xchg
xor
enter
xor
in
rol
call
enter
in
call
in
int3
xor
in
fsubr
lret
sbb
repz
cmp
out
out
test
ror
lock
fsub
xor
repz
in
mov
iret
sti
movb
stc
aaa
xor
imul
add
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
repz
aas
rol
repz
jecxz
cld
fildl
into
cs
xor
out
jmp
ffreep
out
call
testb
fcomp
lret
aam
out
aas
loopne
out
clc
ds
rolb
lock
cmp
aam
xchg
mov
in
decl
shl
fldpi
aad
cmp
cld
cli
aam
testb
lret
mov
adc
aam
shl
aad
ds
fcomp
cmc
icebp
ret
aas
rcl
repz
xchg
roll
int3
shr
out
fistpll
cmp
cmp
loope,pt
aam
fucomip
mov
test
lea
fcomp
lret
aaa
jmp
aas
loopne
fcmovnb
fdivr
test
mul
loope
lea
xchg
das
into
ret
in
ror
out
out
cmpb
loopne
loop
mov
out
std
fildl
test
out
rcl
out
in
cmp
int3
sar
idiv
loopne
icebp
clc
std
jmp
in
orl
ljmp
cmp
ds
add
jecxz
in
xchg
mov
into
clc
xor
rcl
call
loopne
in
fcmovb
in
ret
cli
loope
iret
nop
out
jmp
clc
jmp
repz
int3
ss
cmpb
std
loop
loope
out
std
iret
icebp
in
in
fmul
out
fsubr
in
out
repz
repz
in
neg
mov
xchg
fdivr
xchg
xchg
call
int
cmc
shl
in
jmp
cmc
out
out
shl
loop
clc
lret
orl
push
cmc
shl
xor
xlat
clc
cld
fxch
repnz
fcmovne
std
mov
in
in
clc
nop
std
out
lret
test
loope
xor
test
repnz
fdivp
repnz
xchg
jmp
fisttpl
lock
loope
xor
int
rcl
in
loopne
rcr
in
aad
clc
jecxz
cli
out
fmul
lret
test
mov
aaa
into
divl
fsubr
int3
fidivrl
rcl
fsub
xlat
leave
mov
jecxz
std
cli
hlt
out
mov
cmc
divb
in
out
not
clc
jecxz
rol
std
ret
leave
loopne
in
loop
out
lock
jmp
sub
jmp
leave
rcr
fcomp
cmc
pop
fildl
add
pop
inc
mov
jle
in
fld
rol
cmc
repz
and
test
std
fdivrp
xlat
fsubp
loopne
icebp
jecxz
test
sti
shr
in
ds
sar
ret
out
fdivr
fld
mov
int
mov
fmull
aaa
xor
rcl
sti
rcr
int3
aad
xlat
int
incl
cmp
leave
test
int3
das
in
cs
enter
loop
repz
shl
in
xlat
leave
in
xchg
repz
out
out
xor
jmp
out
clc
stc
jmp
out
sar
test
in
in
out
iret
xchg
repz
ror
hlt
loop
int
call
clc
cmp
mov
add
std
loop
loop
cmc
xchg
ror
jmp
repnz
int3
fcmove
ror
cmp
lock
in
icebp
rcll
iret
out
ljmp
cmp
icebp
out
mov
faddp
clc
jecxz
xchg
in
xorb
stc
jmp
repnz
rcl
out
clc
int3
fadd
rcl
cmp
in
stc
xchg
ret
in
into
xchg
xlat
aaa
clc
test
lret
cmp
cli
fucomip
fdivr
repnz
fldl2t
loopne
into
fisttpl
out
into
out
int
repz
sbb
call
call
call
icebp
fcmove
lock
in
test
ds
repnz
lret
in
or
loop
out
imull
icebp
cli
xor
leave
in
iret
shl
loopne
fst
aas
lds
and
mov
rcll
aad
ss
fstp
call
sbb
rol
mov
int
iret
fcomi
in
shl
out
ret
aad
int3
enter
lock
rcr
rcr
jecxz
frndint
int3
enter
lock
out
out
enter
cmc
addl
ret
out
or
fldl
cmp
repz
shl
cmpl
out
fists
out
out
cli
jmp
shr
call
testb
loopne
orl
jmp
xor
int
aam
xor
loop
loopne,pt
xchg
stc
loop
loop
int3
mov
lret
cmp
int
add
jmp
rcl
iret
aam
aad
sarl
cmp
xor
fiaddl
jle
shr
rcr
cmp
sti
iret
clc
fdivr
imul
std
ret
fcmovu
roll
xchg
int
xor
call
cmp
xor
test
fadds
out
call
xchg
loopne
ret
in
lret
in
cmp
aad
cmp
repz
fcmovnu
sar
fcmovb
stc
mov
lock
mov
int3
cs
repz
enter
or
cmp
cmp
clc
fsubr
lret
hlt
rcl
aam
ret
xor
jmp
clc
roll
addl
jmp
in
roll
ljmp
idiv
shl
std
adc
out
mov
or
icebp
cmp
repnz
aam
cld
add
cli
ret
stc
rol
iret
jmp
aad
aam
aaa
aaa
jmp
lock
repz
xchg
mov
iret
out
leave
rcr
cmp
out
xor
test
cmp
cli
ffree
jecxz
in
mov
jecxz
in
rclb
repnz
stc
repnz
faddl
xchg
fmul
fiaddl
ret
mul
in
shr
fucomp
sarl
int3
cmp
cld
lock
clc
cli
mov
jmp
in
lret
aad
into
clc
cld
jmp
into
std
cli
repnz
fnstsw
movl
into
mov
out
out
fsincos
leave
sti
loopne
cmp
rcl
fstp
out
xor
loope
jmp
dec
shl
test
lret
icebp
cmp
out
cmp
hlt
vmovq
in
cli
int
ror
in
mov
and
in
iret
shlb
enter
lret
fucomip
aas
xor
loope
hlt
xchg
out
aam
enter
enter
hlt
fsubr
cmp
int3
fadd
cld
addl
enter
aam
lock
idivb
jmp
stc
lock
repz
std
test
cli
loopne
rcr
sti
loope
test
cmp
repz
cli
neg
cmc
aaa
icebp
cli
in
clc
loopne
mov
mov
in
in
jmp
xchg
jmp
ljmp
int3
cld
loopne
repnz
cmc
les
out
enter
mov
mov
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
fs
adc
fiaddl
jle
fsubr
testb
sar
xor
aad
lret
in
fsub
hlt
fnstsw
std
out
jmp
repz
rcr
sub
lret
call
fdivp
shr
clc
mov
and
in
aam
into
loop
lret
repnz
icebp
fiaddl
fiaddl
ljmp
ljmp
cld
iret
fmul
icebp
leave
cmpb
xlat
ror
jmp
int3
in
sti
fucomp
jmp
in
in
aad
call
cmp
fstp
hlt
mov
xchg
out
xchg
int3
ror
ljmp
icebp
into
std
cmp
repz
sti
out
fldl
loop
enter
xor
jmp
icebp
repz
cld
out
call
xchg
ljmp
int3
jmp
sti
hlt
jmp
out
rcr
cmp
cmp
mov
fcmove
iret
xchg
sub
jmp
aad
loop
lret
ss
test
rcl
cmc
or
xchg
xchg
ret
fdivr
out
shl
call
stc
fcom
aam
roll
fnsetpm(287
icebp
lret
aad
aam
test
cmp
cld
cmpl
cmp
loop
fcmovnu
int3
xchg
sub
test
sub
fsubr
cmp
call
cmp
shl
std
cmc
int3
fisttpl
xchg
loopne
test
ss
ror
sti
shl
xlat
cmp
sar
sbb
sbb
xchg
loope
mov
xor
in
out
aad
sarb
cmp
fstpt
jecxz
loopne
loopne
fdivr
clc
loop
xchg
jmp
ljmp
aam
fdivrs
test
sti
fucom
test
enter
mov
xchg
enter
xor
cmp
aam
in
cmp
cli
fdivrp
in
xor
jmp
cmc
icebp
in
fxch
ds
cli
iret
shl
repnz
test
jecxz
mov
enter
mov
int
aam
lret
enter
addb
movb
and
into
ss
in
in
in
shr
ret
std
ret
ret
hlt
mov
imul
jmp
rol
lret
ror
int
aam
dec
push
testb
stos
jg
fiaddl
jle
cld
cli
in
enter
mov
in
shl
jmp
jmp
cmp
fdivr
xchg
mov
in
call
jmp
xlat
rol
cs
fcomi
fadd
fsubp
ds
enter
cld
loopne
cli
hlt
lret
repnz
icebp
call
rcr
cmp
ds
in
fdivrp
jecxz
hlt
fcmovu
xchg
mov
sub
out
iret
jmp
call
jecxz
inc
addl
or
mov
jecxz
call
std
lret
neg
shl
loopne
leave
fisttps
mov
mov
stc
jmp
out
cli
fcmovne
clc
sar
sar
mov
call
cmp
ljmp
repnz
fyl2x
xlat
aam
loopne
not
hlt
roll
in
jmp
in
hlt
jmp
lock
icebp
in
aam
cmp
aad
fstp
test
loope
mov
rcl
std
mov
in
int
in
xlat
cmp
hlt
aad
sbb
les
ljmp
sarb
cmp
ss
rcl
jecxz
loop
shl
not
xchg
addb
in
hlt
rol
xor
cmp
shl
fxch
std
in
xchg
cmp
cld
xchg
mov
loop
mov
not
stc
jmp
icebp
cmp
fidivrs
test
xor
cli
out
filds
xchg
rcr
into
fst
cli
repnz
cmp
loope
aad
fmul
in
out
les
shl
shl
iret
int
lock
int3
ret
in
ret
test
jecxz
adcb
xor
xor
cmp
lret
aas
aas
test
call
fcmovne
xor
rorl
ss
out
cmp
ljmp
sar
sti
ljmp
xchg
jmp
jmp
fcmovne
xor
in
into
cld
test
mov
aas
testl
aad
out
div
ss
fcmovu
jecxz
ret
cmp
xchg
jmp
fadds
mov
hlt
out
jmp
into
out
xor
out
cmc
rcl
in
cmp
jbe
jmp
int
lret
lret
int
mov
mov
lods
jg
fiaddl
jle
neg
cli
cli
in
nop
test
in
in
xor
cli
xor
cmp
hlt
xor
cmp
xchg
and
xlat
enter
loopne
out
test
hlt
fnstcw
cmp
int3
xlat
aam
fcompp
not
loope
and
ffreep
sti
fildl
out
loop
aam
out
sarl
sub
xlat
in
in
cli
in
and
cld
loope
sti
std
mov
fbstp
out
call
xor
repnz
cmc
mov
jmp
jecxz
in
xchg
rol
ror
xor
lret
ror
out
flds
xlat
out
enter
rclb
lret
neg
cli
int3
rcr
aad
cmp
out
fsubp
clc
jecxz
cmp
sti
in
loopne
std
out
shl
jmp
repz
idiv
repnz
into
hlt
shr
test
f2xm1
icebp
out
cmc
add
in
std
xchg
call
in
cmp
cld
shl
cmp
cmp
fadd
jmp
xchg
hlt
out
out
divl
repz
and
loope
mov
clc
mov
rol
enter
nop
in
loope
cmp
sti
jmp
into
aad
fcmovnu
cmp
dec
inc
in
in
fxch
ror
lock
imul
hlt
ljmp
aaa
cmp
cmp
roll
cmp
in
cld
sar
xchg
xchg
mov
ror
repnz
in
int3
ljmp
stc
ds
mov
sbb
lret
mov
divl
repz
out
leave
enter
in
shl
cld
call
jecxz
loope
rcr
in
lret
fnstenv
fcmove
jmp
loopne,pt
xchg
orb
test
out
xchg
test
xor
lock
out
mul
aam
mul
aas
xchg
cmc
aad
fsubr
mov
out
shr
fcomip
out
add
clc
enter
or
fcmovnb
ljmp
fmul
out
lds
int3
xor
idivb
leave
cld
call
loope
icebp
test
orb
xchg
cmc
xchg
int3
in
repz
out
aaa
into
jmp
cli
cmp
repnz
lret
int3
cli
lds
xchg
shl
xor
out
out
lret
repz
std
shl
cmc
lock
pop
jmp
ror
ror
aad
inc
push
mov
fiaddl
jle
fyl2xp1
icebp
call
lock
enter
xchg
int
ljmp
cmp
into
aaa
shl
sar
repnz
mov
mov
rol
lock
fadd
repnz
ss
xlat
call
leave
loope
cld
loopne
into
mov
int3
ret
out
cmp
call
out
div
fadds
into
loope
in
mov
repnz
fdivr
cmp
fucomip
std
fdiv
call
xchg
imul
shl
fucomip
xchg
xchg
test
repnz
jecxz
in
jmp
xor
cmp
cmp
loopne
aas
jmp
and
incb
mov
jmp
lds
enter
aad
xlat
loope
repz
xor
lret
sbb
shlb
lret
cmp
out
leave
aam
cmp
not
jmp
loop
mov
stc
test
xchg
lock
xor
xor
clc
aas
cmp
out
iret
icebp
ret
neg
cld
out
fmuls
sub
aad
jmp
int
jecxz
test
lds
out
out
mov
fxch
int3
int
in
in
in
cmp
fcmove
cli
repnz
not
xlat
fsub
enter
out
xchg
fsubr
fucomp
clc
xor
cmp
xor
sar
cmp
rcr
hlt
cmp
cmp
loop
rolb
fld
sti
lret
cmp
aaa
fnstcw
cmp
aad
test
mov
loope
rorl
clc
cmp
in
aad
fstpt
shl
shr
repz
stc
in
out
orl
xchg
jecxz
into
jecxz
aam
aam
cld
in
stc
shr
repz
mov
iret
loop
xor
cmp
into
or
icebp
test
idiv
int
fucomi
xchg
cmp
lock
cmp
fnstsw
clc
cld
fcmovnu
jmp
call
out
xchg
aad
cmc
frstpm(287
xlat
cmp
std
shr
aam
cli
repz
xchg
in
mov
mov
in
iret
call
fmul
lret
shlb
aas
cmp
rcr
int
add
ret
in
idiv
xchg
lock
rol
fcom
cmp
cli
cmp
sarl
in
pop
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
push
jo
call
pop
add
adc
jecxz
sar
jecxz
orl
loopne
in
rcl
neg
sti
imul
iret
xlat
std
out
clc
aas
test
fimuls
fcmovnu
lock
fsubrp
out
lock
stc
call
out
aaa
incb
std
fdivr
call
hlt
loopne
ffreep
aaa
out
call
cmp
out
clc
filds
ret
loopne
nop
fucomi
in
xchg
sub
in
lock
int3
fidivl
flds
out
ljmp
loop
in
int
sar
xor
ror
out
and
enter
out
xchg
loop
xchg
xor
call
test
fsubr
flds
loop
cli
frstpm(287
cmp
xor
xor
iret
out
in
aaa
cmp
cld
int
test
orl
rol
jmp
cmp
lret
aas
aam
out
xchg
mov
test
in
xor
das
sub
out
jmp
lret
loopne
cld
cli
loop
call
fimuls
rcl
xchg
cmp
ljmp
fdivp
leave
loopne
sti
clc
in
test
mov
fsubr
int
iret
ret
sub
cmp
out
xor
lret
sarb
out
rol
sti
mov
lret
mov
jmp
in
xor
ret
aad
test
fdivrs
faddl
mov
iret
loop
xor
xlat
in
call
clc
cmc
lret
shl
repz
fcmovb
mov
mov
xchg
std
xchg
fbstp
fmul
ds
idiv
in
mov
fcmove
int
fmulp
icebp
and
cmp
das
sti
in
into
sar
icebp
out
lds
sub
div
fiadds
in
cmp
leave
jmp
cmp
hlt
lock
iret
test
in
loope
in
test
ljmp
int
int
out
cmp
xlat
xlat
fdivrp
ret
hlt
filds
jmp
icebp
ret
jecxz
cmp
out
clc
iret
rcl
cmp
out
fldl
aas
cmp
cmp
repz
clc
loop
sti
xchg
sti
loope
xlat
mov
call
aam
in
out
stc
sti
std
call
rcl
out
iret
ror
hlt
les
out
mov
out
fxch
into
lret
incb
out
lret
fdivr
fxch
adcl
ss
out
cmp
cmc
ret
jecxz
stc
cli
ret
fadds
into
addl
xor
shl
lret
push
mov
movl
mov
push
jmp
rcl
leave
leave
fst
fsubrl
std
sub
add
jle
add
loopne
sarb
fcom
xchg
out
loopne
jmp
lret
jmp
xor
iret
out
cld
jmp
rcr
aas
out
hlt
faddp
ret
fdiv
int
cld
lret
sub
lret
leave
stc
ss
repnz
cmp
iret
loop
stc
cli
fld1
out
neg
fildl
shr
aam
enter
fcomi
loop
stc
sti
in
ret
in
xlat
enter
xchg
test
cmp
fidivl
cli
iret
test
lock
lock
mov
cld
iret
aad
aaa
in
fsub
lret
out
enter
loop
adc
fadds
out
xchg
out
sub
sti
shl
lock
icebp
cmp
repnz
rcl
mov
xchg
jecxz
lock
hlt
xchg
adc
jmp
jmp
shr
sarl
aas
test
std
in
stc
out
mov
repz
test
rcr
sti
sub
fsubrp
cmc
div
fiaddl
jmp
call
shr
in
stc
call
in
shr
ret
idiv
neg
out
loopne
icebp
int3
test
clc
jecxz
icebp
xor
iret
fidivrl
cmc
in
adc
rol
loope
hlt
orb
rol
in
mov
hlt
shl
sar
out
cmp
sti
sar
fildl
cld
aad
int3
in
incb
aaa
xor
jecxz
int
in
jmp
sti
iret
cmp
mov
int3
cli
int3
sbb
out
rorb
in
in
rcr
repz
aad
cmp
test
jmp
testl
xor
lock
lret
repz
jmp
std
and
rolb
sub
in
rcr
xor
xor
std
int3
icebp
fcom
fisttpll
cld
imul
iret
ljmp
jecxz
repz
cmp
xor
loopne
lock
ds
call
ret
out
out
std
ror
jmp
clc
jmp
repnz
aam
loop
cmp
cli
sti
call
test
xchg
loopne
aad
xlat
clc
out
lret
cmp
jmp
rcr
rcl
repnz
jecxz
out
enter
jecxz
sub
aad
ror
clc
out
into
rcr
cmc
fdivrp
fiadds
loopne
out
in
nop
in
out
test
xor
jecxz
xor
cmp
into
repz
fsin
sti
fmul
ljmp
out
addl
in
enter
lret
iret
clc
incl
ret
lret
xchg
in
in
hlt
ljmp
xlat
loopne
jmp
div
shl
repz
aad
fimuls
dec
out
in
cmp
mov
jmp
int3
iret
xlat
ffree
fst
loope
sub
ljmp
jle
add
int
cli
call
fdiv
xchg
fmul
call
rol
jecxz
ret
xlat
out
clc
fnsave
ds
aam
sar
rol
loopne
std
enter
fists
ss
cli
clc
ds
aad
dec
cmp
stc
clc
stc
ffreep
lret
lret
in
into
xchg
xor
lock
xor
fucompp
enter
shl
icebp
cmp
jecxz
loopne
int3
in
or
std
icebp
cmc
shrl
enter
cmp
xlat
sarb
roll
cmc
mov
out
lock
repnz
in
enter
leave
loopne
repnz
call
xchg
rcr
leave
int3
mov
test
shr
fcmovbe
cmp
ss
into
div
test
addl
fcmovb
int3
stc
fsub
fmulp
iret
inc
xor
enter
clc
lret
fiaddl
ret
cli
cld
in
leave
sbb
shl
jmp
jmp
test
rol
xlat
mov
sbb
fmulp
lret
jecxz
int3
call
cmp
cmp
loope
sarl
into
mov
loop
cmc
ret
frndint
out
fimull
clc
xor
in
out
cld
loopne
in
clc
into
cli
iret
xor
hlt
xchg
call
out
bnd
int3
lock
repz
sar
fdivr
jecxz
jecxz
addb
cli
cli
fsubrp
xchg
popl
iret
ss
das
ljmp
cmp
test
cli
xchg
shl
fcmovne
xchg
jmp
leave
aaa
into
cs
int
clc
in
shl
fadds
in
repnz
out
int
hlt
in
into
fsqrt
out
addl
iret
shl
sar
mov
sar
leave
jmp
into
cmp
fxch
out
loop
push
cld
movl
leave
xor
cld
aaa
xlat
clc
xlat
iret
out
cmc
ds
clc
test
ret
jmp
jmp
and
divb
into
fdecstp
aad
rcl
cmp
loop
vpand
call
jmp
xor
cmp
sti
lret
shl
fcmovne
aaa
lret
cld
test
cmc
cmc
jmp
lret
in
icebp
cli
leave
std
call
out
iret
aam
sar
std
sub
out
repnz
fldz
loopne
int3
fildl
xor
std
xor
loopne
lock
clc
mov
lret
addl
out
hlt
in
repz
cmp
leave
cmp
sub
adc
dec
ret
std
in
fucom
loop
nop
xor
icebp
leave
std
ljmp
aad
aam
cld
test
lds
xchg
cmp
ljmp
jmp
ret
ror
aad
and
cmp
cmpl
ljmp
fabs
std
fsincos
sti
fucomi
test
fcmovb
in
out
in
sub
out
jmp
rcr
fiadds
aas
fucomp
filds
iret
hlt
repnz
clc
xlat
out
into
fadd
rcl
fldl
std
lret
fsubrp
hlt
into
test
repnz
fdiv
aaa
aam
cmp
out
cmp
test
ret
stc
jecxz,pt
lock
icebp
xchg
loope
int3
xor
hlt
iret
idiv
aaa
cmc
into
into
cld
aas
ret
frndint
rol
fldl
icebp
fucomi
rorl
leave
neg
cmp
out
int
xlat
fnstsw
cmp
fsqrt
hlt
fadd
hlt
in
orb
ror
lret
loope
cmp
out
rcl
loope
repz
frndint
fstp
mov
ffreep
jmp
in
leave
fsub
mov
xchg
fdivs
sub
aaa
fnstcw
fcomi
rcr
hlt
out
loope
xchg
fcmovu
std
fcmove
out
xchg
jecxz
xor
lds
fcmovnu
aad
cli
fld
cmc
xlat
repnz
mov
test
jmp
mov
xchg
in
out
int3
ror
fmul
aaa
lock
lock
loopne
clc
xchg
stc
sub
rcl
out
rol
out
out
ds
loop
cmp
in
in
xlat
cld
aam
in
in
fisttps
loopne
fld
cmp
call
test
repnz
in
iret
loopne
iret
mov
imul
cmc
into
in
lret
xor
shl
shr
rolb
jmp
mul
out
fistl
cmc
out
cli
jmp
repnz
cmp
std
aas
cmc
repnz
jmp
call
std
fcoml
ret
in
repnz
std
fadd
mov
fmulp
movl
in
cmp
out
fincstp
int3
into
std
rol
sti
rol
mov
fiaddl
jmp
sub
lds
cli
in
test
cli
jecxz
xchg
shr
lret
nop
out
repnz
icebp
xor
cmp
fcmovu
ljmp
enter
cmp
in
out
test
in
in
call
fnstcw
shl
rcl
jecxz
fildl
aad
lret
jmp
out
in
sub
leave
lock
rcr
ljmp
lds
int3
mov
rolb
into
das
sti
lret
lret
jmp
cli
repnz
fadd
ds
in
loop
cld
xchg
decl
xor
jmp
fidivrs
cli
sti
mov
in
icebp
out
loopne
repnz
sarl
in
cmp
not
cmp
jecxz
jmp
out
incb
shl
mov
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
out
stos
adc
mov
jle
out
aaa
in
cmp
int
repnz
sbb
cmp
icebp
in
in
lret
jmp
or
out
out
lds
fcmovu
cmp
aam
loope
dec
loope
xlat
aad
leave
inc
xlat
mov
leave
call
lock
xlat
repz
lret
shl
out
roll
lea
test
cmp
aad
ss
shll
xlat
xchg
sti
out
out
in
fsubp
sub
enter
cmp
xor
lock
fucomip
cmc
cmpb
jmp
in
fsubp
dec
sub
hlt
sub
fidivrl
stc
shl
cmp
clc
fcmovb
cmp
incl
out
jecxz
iret
lea
stc
bnd
shl
enter
fidivrs
fadd
test
cmc
aad
aam
leave
fisttpl
repnz
lock
xor
cli
xor
int
fdiv
ds
cli
icebp
loopne
xchg
into
mov
in
jmp
aad
in
shr
fcmovne
aaa
clc
lret
cmp
loop
dec
enter
out
test
shll
sti
filds
in
repz
enter
mov
cli
iret
lds
jecxz
sti
cmp
sarl
int
out
aam
lret
out
test
in
xchg
adcb
xor
xor
cmp
repz
fcmovnbe
ret
fld
ljmp
sub
xchg
fldl
ss
call
clc
jmp
out
into
loopne
sti
call
nop
fiadds
int
xor
imul
in
hlt
addb
fildl
out
in
in
xchg
sub
lret
aam
out
into
xor
cli
cli
iret
xor
aam
mov
loop
fiaddl
call
shr
ss
lock
cmp
lock
shl
enter
lds
xchg
loopne
ret
rol
shr
out
rcl
cmp
int3
fiadds
and
iret
lret
xchg
xor
xlat
iret
loope
lock
out
stc
xor
in
fisttpll
in
int3
in
into
aam
jmp
cli
lock
cld
std
fdivrl
imul
std
rcr
sub
mov
int3
jecxz
xchg
xor
fdivr
int
fcmovnu
idivl
clc
stc
loope
iret
jecxz
rcr
mov
mov
loope
icebp
cld
out
sar
idivb
imul
fildl
sub
fucomp
into
xchg
in
int3
lds
xlat
cmp
out
fscale
sti
xor
sti
rcr
jmp
orl
cmc
out
into
shl
int3
out
ljmp
sti
aam
stc
fnstcw
call
in
mov
incb
nop
jbe
add
cmc
add
add
aam
aas
aad
iret
aam
adc
mov
hlt
jmp
pop
add
loope
repnz
int3
in
out
fcmovbe
lock
incb
shl
sar
stc
in
out
xchg
loopne
jmp
repnz
int
int3
hlt
fdivr
xor
ret
std
cmp
cli
addb
std
std
mov
leave
call
ret
testl
out
jecxz
fcmovne
rcll
lret
call
fmulp
repnz
xlat
enter
idiv
out
jecxz
orl
cmc
jmp
shl
jmp
out
jmp
ljmp
xor
das
in
rcl
ror
icebp
into
lock
repnz
aas
hlt
shr
fisttpll
fldl
out
rcr
cmp
lret
iret
ljmp
out
rolb
stc
leave
fucomi
loopne
xchg
jmp
shl
clc
cmp
int3
sar
fiadds
frstpm(287
mov
in
loopne
sti
loope
into
push
in
cs
out
idivl
out
sar
fdiv
int
loope
cli
clc
out
ret
in
cld
nop
mov
icebp
cmc
in
lock
out
lock
aas
in
lds
int3
lret
repnz
repnz
leave
stc
clc
out
repz
repz
rorl
fucomp
clc
xchg
sub
iret
div
idiv
xor
repnz
aad
fcmovnbe
aas
icebp
inc
testl
fucom
das
xor
call
out
out
fsubrp
shr
cmp
mov
addb
ror
repz
jmp
xlat
into
fsubp
in
loop
test
xchg
xchg
out
ss
shl
neg
lret
out
fidivrs
in
xor
loop
cld
ljmp
loope
cmc
aam
sub
out
in
int
in
clc
imul
out
xor
ljmp
cld
icebp
aam
shlb
aaa
ss
jmp
clc
lret
jecxz
std
mov
test
loopne
fsubrp
lock
aaa
loope
icebp
out
cmp
hlt
out
clc
aas
icebp
iret
out
in
mov
mov
int3
out
mov
repnz
not
sar
cmp
out
shl
sar
jecxz
std
stc
ljmp
fdivs
shl
cmp
clc
ss
clc
test
fdivrp
testl
call
aad
in
cmp
in
in
loopne
idiv
mov
ljmp
hlt
cmc
int
shll
xor
ljmp
cmp
fdivp
orl
shl
or
cmc
xor
aad
sti
out
cld
cld
loopne
cmp
repnz
fstp
cld
out
je
mov
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
in
ror
xchg
jmp
loope
shl
stc
xor
iret
icebp
ret
les
in
mov
mov
imul
xor
xabort
xor
out
stc
int
fdivr
sti
rolb
faddp
icebp
loop
int3
rolb
xor
xor
sti
cld
loopne
sub
hlt
jecxz
rol
hlt
enter
sar
leave
into
loopne
lock
lret
fdivp
stc
cmp
cmp
shr
sti
leave
add
mov
in
xchg
into
xchg
xor
das
out
fmul
fstp
fst
out
cli
cli
lock
fcmovnu
mov
test
not
loope
int3
fcmovu
jmp
iret
clc
xor
sti
shll
lret
lret
cmc
cmp
aad
test
int
icebp
in
iret
hlt
fxch
repnz
fdivrs
enter
cmp
lock
mov
mov
xchg
rcr
ljmp
aad
leave
shl
sti
ret
icebp
mov
int
mov
jecxz
xchg
leave
in
incb
out
in
shr
ret
out
out
jmp
lret
out
xor
cmp
fcomip
shr
repz
std
out
addl
lock
mov
out
hlt
out
shr
in
out
shl
aas
out
aas
ffreep
les
jmp
test
cli
jmp
popl
ror
jmp
aaa
jmp
iret
ret
stc
cld
mov
call
in
mov
mov
into
leave
in
cmp
cmp
in
sti
repnz
fucom
ljmp
xchg
repnz
fdivrs
ljmp
loope
repz
xchg
in
mov
mov
jecxz
in
cmp
cli
cld
loop
cmp
ret
shl
call
flds
mov
jecxz
ss
cli
in
out
repz
dec
xchg
out
out
in
jmp
rorb
xor
lret
iret
into
into
aad
test
hlt
fcom
cli
out
out
out
jmp
cmc
or
out
cli
std
cmp
aam
ljmp
rcr
lock
test
icebp
xlat
cmp
xlat
clc
cmp
loop
in
aaa
fiaddl
out
out
in
nop
mov
out
aaa
divb
lock
ds
int
sar
loope
loopne
loope
cli
shl
lret
mov
sub
in
imul
leave
cli
sti
ror
cmp
aam
leave
ljmp
in
and
mov
xor
aad
cmp
cmc
cmp
rcl
cmp
incl
mov
xchg
out
rorl
xor
cli
xor
xor
hlt
aam
call
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
out
mov
cld
rcr
out
leave
les
xor
fsub
jecxz
in
lock
lock
ret
loopne
add
addl
rol
repnz
leave
leave
ds
xlat
out
xlat
rorb
xlat
test
jecxz
out
mov
aam
in
int
shl
loop
testl
jecxz
out
fiadds
aaa
out
lock
out
cli
sar
hlt
cmpb
test
aas
roll
loopne
into
mov
std
out
neg
icebp
int3
in
jmp
cld
into
fiaddl
ljmp
xchg
iret
out
test
cmp
xor
cli
cld
cmp
std
neg
std
rorb
loopne
stc
shl
in
icebp
xor
cmp
aam
aam
call
loop
std
cmp
test
mov
enter
in
cmc
xchg
xchg
xor
les
lret
sti
lock
in
jecxz
repnz
fmull
cmc
fildll
aam
xlat
lret
cmc
div
ds
aas
ret
enter
clc
mov
jmp
in
out
cmp
sub
fisubrl
mul
fidivrl
xor
hlt
in
in
repz
lret
cld
iret
test
fstl
cli
out
out
cmp
std
repnz
ret
fdiv
call
lret
nop
mov
loopne
jmp
aaa
in
enter
aad
ret
iret
rcr
clc
fdivrp
addb
sti
sti
cmc
decb
sub
into
fcmovb
aaa
fidivrl
shr
mov
std
cld
iret
into
enter
or
aam
clc
int3
shl
repz
loope
repnz
fucomi
in
mov
xchg
cmp
aam
lret
int
cmp
out
rcr
in
test
test
fsubr
into
mov
rolb
out
fcmovu
lret
fidivs
fadd
hlt
in
icebp
ljmp
xchg
lock
test
xor
out
enter
imul
addb
aad
fsubr
in
test
nop
mov
loope
enter
ljmp
in
les
rol
neg
stc
loope
xchg
mov
sarb
fstpt
lret
fcomip
sar
fistpll
clc
loope
bnd
out
xchg
test
in
nop
div
lret
repz
repz
into
fdiv
sub
icebp
movl
les
stc
ror
in
into
test
in
sti
sbb
test
jmp
jmp
in
loope
enter
aam
cmp
aam
loopne
xor
out
out
loopne
xchg
and
xor
aam
out
aaa
fcomp
out
cmp
stc
in
in
cmp
clc
pushl
mov
jmp
rcl
int3
lret
fst
fstl
push
jo
dec
jg
pop
add
call
loop
fldl
out
aaa
ret
ror
std
fnstsw
cmp
ds
cmp
std
in
ret
fcmovne
stc
rolb
aad
jmp
fnstsw
cmp
stc
test
cli
repz
and
rorl
jmp
shr
div
xor
enter
aad
int
cmp
hlt
cld
leave
out
out
stc
stc
mov
out
xchg
div
stc
das
jmp
repz
ljmp
in
in
cmp
sub
jmp
jmp
loope
jmp
sti
out
bnd
clc
cmp
jmp
in
in
loopne
icebp
xchg
xchg
xchg
rcl
xor
aaa
shl
cmp
cmp
jecxz
ret
xchg
in
lock
mov
mov
loopne
hlt
icebp
into
clc
ljmp
add
addl
add
into
hlt
into
out
out
cmp
dec
ss
cmp
cmc
test
mov
xchg
out
cmc
stc
div
jmp
int3
repz
out
cmp
idiv
ret
mov
call
in
adcb
jmp
int3
repnz
loopne
div
sarb
cmp
div
sti
out
fsubr
clc
enter
xchg
loopne
loopne
shr
ret
aaa
stc
fidivrs
rcl
in
in
ffreep
cmp
in
out
out
jmp
ss
int
xor
rolb
test
mov
fsub
jmp
into
idivl
shl
dec
cmp
cmp
test
out
fdivr
in
in
icebp
int3
aad
in
xor
xor
lret
xor
aas
in
jecxz
mov
orb
jmp
xor
jmp
xlat
aaa
out
aam
jecxz
cmp
jmp
lret
mov
xlat
aam
int
into
test
sarb
rol
lret
sti
in
ror
lret
ret
repnz
in
lret
cmp
clc
lock
hlt
fstp
std
in
jecxz
and
mov
aas
xor
not
sti
std
ds
xor
aad
out
aad
loopne
ljmp
test
das
sub
hlt
std
cmp
into
loope
ffreep
shl
ror
aad
mov
cmc
mov
out
int
jecxz
lock
std
out
rol
in
ret
call
call
ljmp
in
repnz
sar
repz
repnz
fucom
in
loope
iret
cld
orl
mul
fstp
cld
sar
ljmp
mov
loopne
cli
dec
mov
xor
lock
lock
in
cmp
fucomp
inc
call
jmp
aad
fnstsw
repz
lock
add
sar
jmp
out
clc
in
orb
jmp
rcl
ss
cmp
ret
rcr
out
jmp
jecxz
jmp
in
shl
fucomi
cli
lock
roll
mov
loopne
fcoml
sub
out
lret
out
iret
std
sti
loopne
lret
cmc
test
clc
fcomip
jmp
fsubr
xchg
pop
in
int
iret
cli
shr
aaa
ds
icebp
iret
cmp
icebp
sarl
test
ret
ret
mov
mov
mov
shrl
rol
cmp
in
aam
div
cmp
sar
repnz
rol
in
jmp
add
nop
xor
lret
repnz
in
aas
fnstsw
xchg
fdivr
fucompp
mov
ljmp
imul
jmp
lret
cmc
stc
aas
shl
into
in
call
hlt
jmp
mov
mov
rol
ljmp
fsubrl
cld
out
cld
dec
fdivrp
std
shl
icebp
cmp
and
out
cld
lret
mov
fnstenv
sar
sarb
in
neg
cmp
and
fcmove
in
jmp
jmp
repz
stc
in
cmp
cmc
repnz
cmp
fildl
repz
loop
in
nop
mov
icebp
sub
stc
in
in
fsubr
cli
lock
iret
in
jecxz
mov
fsubrp
ffreep
jmp
enter
ror
in
out
sti
fdivr
cmc
in
cld
fcmove
idiv
in
iret
out
enter
testb
iret
call
jecxz
test
cmp
cmp
cmp
ret
xchg
jmp
mov
out
icebp
fildll
imulb
repz
loopne
int3
fiadds
mov
in
loopne
mov
cmp
out
cmp
aad
into
aas
out
enter
int
fildl
test
ret
repnz
fnstcw
adc
cmp
ret
fnstsw
mov
in
std
or
div
iret
ds
fmulp
in
test
rcr
aad
xchg
out
out
filds
ljmp
jmp
shl
in
cmp
cld
ljmp
int
rorb
fmul
shll
repz
lock
test
flds
orl
ss
mul
into
std
clc
aaa
jmp
shr
filds
repz
mov
cld
fmulp
sar
xchg
test
fst
aam
in
xor
out
jecxz
enter
lret
clc
test
rorl
rol
jmp
shlb
fdivrs
cli
test
aam
orb
mov
into
add
aam
lock
std
mov
jmp
iret
aam
aas
aad
iret
aam
ljmp
push
lret
or
jle
add
xchg
test
loopne
ds
mov
sti
in
sbb
shl
ljmp
clc
rol
loop
enter
mov
cli
cmp
int3
in
into
test
xor
in
cmc
enter
cmp
in
cmp
fdivr
incb
fdivr
xchg
xchg
int3
repz
jmp
in
xor
fdivrs
in
test
out
test
fdivp
fcmovu
fstp
lret
xchg
std
lret
in
rcl
test
out
and
out
fcmovbe
lock
mov
fadd
stc
mov
in
lock
jmp
add
xor
cli
fmul
stc
clc
into
mov
or
xchg
out
lret
jecxz
out
cmp
aad
loopne
icebp
fucomi
out
loope
movb
nop
fsubp
sub
lret
xor
fdivrl
repnz
cmp
decl
sub
mov
fst
divb
out
hlt
cld
enter
int
in
jecxz
fucomp
inc
jmp
xchg
mov
cs
imul
test
sti
fcmovnu
in
repnz
out
idivl
jmp
out
mov
fiaddl
aam
lret
fcomp
repz
add
ret
loop
testb
xchg
into
xchg
call
out
hlt
in
cmp
xlat
aam
jecxz
out
ret
and
in
jmp
fsubrp
xchg
ljmp
fdivl
iret
int
loope
sti
movb
test
lock
xchg
cmp
icebp
aad
sti
xor
sarb
and
lock
or
jmp
test
mov
test
imul
ret
jecxz
shl
neg
in
in
enter
aam
mov
sarl
sti
fdivr
fcomp
fdivr
stc
cmp
lock
jecxz
fucomp
loopne
fcmovnb
out
test
rolb
lret
jecxz
hlt
xor
cmp
out
adc
mov
jmp
lret
hlt
out
loop
aam
std
fucomi
hlt
leave
shr
cmp
out
ret
xlat
cld
out
f2xm1
enter
call
in
sti
neg
clc
shr
int
cmc
sbb
aad
mov
mov
xchg
out
jmp
aam
lret
fld1
icebp
ds
aam
cld
xchg
iret
jmp
fdiv
hlt
idivl
xor
fucomip
aas
sti
sar
sbb
loopne
inc
in
out
in
xchg
hlt
loop
mov
das
aam
imul
jmp
fcmovu
rcl
cmc
loop
stc
shl
sar
jecxz
test
jmp
int3
lret
out
ret
out
into
cmp
lret
sti
lret
fxam
add
sbb
nop
iret
orb
loope
ljmp
mov
mov
mov
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
cmpsl
push
aad
push
jg
pop
add
ror
icebp
out
mov
cmc
cmc
ret
mov
ficoms
out
shl
fcmovbe
dec
lret
jecxz
sti
icebp
aam
shl
ljmp
xchg
xchg
out
adcb
jmp
lret
xlat
out
std
in
lock
in
div
cld
call
cld
fisttpll
iret
rcr
idivl
aad
cli
jmp
cmp
cld
jecxz
ljmp
aam
into
in
sarb
ss
aam
dec
idiv
jmp
aad
sbb
lret
neg
shl
jmp
loope
shlb
cmc
in
jmp
not
mul
cmp
cli
ret
cmp
in
cmp
out
lock
xlat
int
into
clc
aam
shr
stc
loopne
rcr
ljmp
in
int
shl
xchg
sar
jmp
jmp
repnz
stc
out
test
test
aam
call
mov
faddl
into
cmc
in
out
std
in
rcl
aaa
out
fsubr
roll
addb
lret
loop
rorb
enter
cld
int3
rcr
clc
fcmove
cmc
std
roll
stc
fmulp
loop
ljmp
lock
in
fnstcw
fcmovnbe
sti
in
into
sti
lock
out
stc
stc
cli
mov
mov
lds
fsubr
fsubr
sti
ds
fdivp
sti
mov
jmp
mov
sti
addb
sti
in
clc
call
clc
rcr
in
clc
loope
mov
loop
mov
xchg
vpsubb
sti
sar
aam
out
lock
ret
fxam
fiadds
in
cmc
ss
repz
cmp
idivl
cmp
repz
fyl2xp1
enter
enter
lret
in
repz
ror
lret
int
fucomip
into
sub
jmp
ljmp
lret
aam
mov
in
repz
in
sar
leave
adc
adc
ljmp
rol
aam
lret
xor
jmp
hlt
out
loop
loope
loope
mov
out
out
xor
xor
repz
loop
cli
faddl
xlat
jecxz
mov
in
int
aad
out
ret
cmp
leave
lret
incl
cmp
out
repz
jecxz
shr
call
cld
into
cli
aaa
in
cmp
xor
enter
in
mov
mov
shrl
in
call
int3
xlat
cmc
int
aad
fiaddl
aam
testb
lret
xchg
aad
in
ret
ss
xor
ret
out
aam
iret
test
out
cli
aas
lea
hlt
sub
stc
lock
dec
adc
cmc
add
add
ror
fst
mov
cld
push
pop
add
sar
mul
in
add
mov
out
hlt
xchg
in
fmul
xchg
xchg
into
loop
shll
fcom
ss
in
fldl
shl
cld
std
loope
fucomip
out
xchg
hlt
xchg
xorl
out
fucomip
aad
rcr
cmp
lret
lret
out
jmp
aad
out
call
jecxz
ds
add
ljmp
fisttpl
in
cmp
aad
ror
fsub
shl
inc
cli
loop
fcomip
sub
icebp
mov
fisttpl
xor
sub
xor
rcl
aad
in
aad
and
sti
nop
int3
mov
out
ljmp
hlt
loop
fsub
shl
test
vpminub
shr
sub
aad
lret
fmul
sti
repz
stc
shl
repnz
iret
mov
rol
stc
test
shl
mov
rcr
lret
xchg
ret
xor
repz
aad
aaa
hlt
shl
clc
not
loop
cli
lret
incb
sub
aaa
loope
leave
out
ror
aaa
jmp
out
stc
ffree
out
in
aad
xchg
std
mov
call
call
aas
fucomi
cmp
icebp
aad
fldl
loopne
test
orb
iret
call
xor
call
cmp
decl
iret
xchg
xchg
in
xor
sub
lret
aaa
cmc
loope
dec
loope
fucom
leave
mov
lret
decb
test
adc
in
fdivr
std
fcmovu
shl
test
test
cli
test
fcomp
mov
leave
in
std
test
xchg
icebp
xor
in
in
aad
enter
shl
loop
cld
sar
lret
xchg
cli
lret
call
ljmp
cmp
cmc
std
ds
repnz
sbb
fcmovnb
test
int3
loope
hlt
aad
les
xor
sti
leave
shl
adc
in
cmp
roll
mov
jmp
shl
clc
aam
out
cld
fdiv
fyl2x
and
jecxz
loope
stc
xlat
jmp
leave
xchg
fildl
out
cmp
sti
ljmp
add
loope
test
xchg
aad
loope
int3
repz
int
aaa
fcmovu
adc
stc
sar
rcr
jmp
cli
into
rorb
shl
ret
sarb
ljmp
test
test
leave
aam
call
addb
ss
xlat
enter
loop
aaa
adc
in
xchg
test
mov
int
out
divb
cli
mul
fcomi
jecxz
fsub
fmull
jmp
xor
xor
add
cmp
jne
jmp
leave
aad
aad
int
jge
in
and
divl
ljmp
jle
aaa
xlat
testl
sti
mov
loope
fiaddl
cld
mov
in
out
in
out
fxch
fistpll
out
fdivp
stc
loope
lret
adcl
rcl
lock
xlat
fsin
cmp
sbb
out
incl
xchg
aam
fnop
cmp
fidivl
cmp
fst
in
cmc
clc
lock
and
shr
in
into
out
vpaddsb
in
int
shr
cmp
cld
mov
xchg
orb
xchg
sub
ds
ret
ds
xor
and
into
cld
mov
fcom
hlt
enter
out
lret
fsubr
rcl
shl
idiv
fsub
clc
vcvtpd2dq
in
cld
mov
ss
fdivrl
ds
fcmovu
aas
cmp
fiaddl
ror
fldln2
nop
and
repz
stc
in
shlb
fistpll
add
cmp
xchg
iret
mov
repnz
out
lret
int3
ljmp
ret
fmul
xlat
fdivp
fcmove
and
rcl
ret
icebp
iret
lret
lret
repnz
fadd
fildl
fcmovnu
fmul
fnsetpm(287
hlt
shl
xchg
in
out
xlat
xlat
out
lock
loop
sti
icebp
hlt
fdivp
call
std
std
fmul
lock
xor
cmp
repz
cmc
ljmp
shl
mov
ret
int3
loop
loop
xor
in
in
leave
cmpl
in
fsub
in
loopne
test
mov
aad
loopne
xor
sar
cmp
enter
fsub
icebp
clc
leave
xlat
call
out
call
into
std
lret
in
shl
repz
std
out
aad
sbb
in
cli
ljmp
fdivrp
xlat
cmc
int3
stc
xor
cmp
sar
int
fsubp
iret
rol
mov
sar
loope
mov
mov
sub
cmp
xor
cmc
aad
sarb
loopne
sarb
ljmp
fistl
lock
lock
ret
fcomi
loopne
sarb
std
ss
not
ret
ljmp
lret
test
div
shl
std
xor
std
rcr
ljmp
rcr
cld
jmp
loope
test
repnz
enter
lret
test
ret
out
idiv
loopne
into
in
iret
jecxz
nop
incb
jmp
cmp
lret
cmp
out
jecxz
std
jmp
test
ret
out
xchg
call
into
std
lret
sarb
loope
fldl
leave
fdiv
out
fld
shr
cmc
xchg
sub
xor
jmp
ret
les
je
push
stos
dec
addl
jg
pop
add
jecxz
xor
cmp
in
std
lret
fdiv
cmc
shr
fsub
imul
lret
leave
leave
out
rcll
out
iret
jmp
fucom
xlat
test
ffreep
fdivrp
sub
into
repnz
in
shr
sub
cld
cld
xor
iret
xlat
fnstsw
lds
div
xchg
addb
ss
cld
fdivrl
std
aam
test
rol
mov
xlat
in
test
in
mov
jecxz
lds
call
lret
hlt
in
cmp
hlt
mov
fmulp
lret
loope
aad
fxch
sub
out
faddl
fcomip
fadd
adc
fucomip
xchg
pop
fistl
shll
jmp
or
aam
loope
neg
jmp
mov
and
aam
xor
jmp
xor
std
aaa
or
aam
div
fyl2x
test
cmp
aad
fincstp
out
out
sarl
fnstsw
cli
iret
cmc
std
icebp
aad
testb
mov
out
xlat
fstpt
fcmovne
leave
cmp
out
aad
cmp
ret
fucomi
fscale
loope
fisttpl
out
cmp
cmc
rol
cmp
jecxz
cmp
roll
ret
flds
jmp
ror
xor
repnz
repz
ljmp
xchg
jecxz
adc
fdivr
xchg
test
ror
out
cmp
xor
aas
lock
jmp
shl
repz
lret
mov
jmp
icebp
call
leave
fmul
jmp
lret
ds
enter
loopne
fmuls
shr
nop
test
sti
int
fidivrl
lock
fucomi
idiv
std
nop
lock
aad
sub
fsubr
lock
aas
sar
cmp
orl
in
mov
jmp
lret
into
cld
cmp
aam
loope
xor
call
lret
out
out
shl
shl
in
mov
out
out
iret
fdivrs
push
xlat
div
cmp
xlat
hlt
jecxz
mov
rorb
out
aaa
mov
aam
cmp
hlt
add
dec
sub
into
call
xor
aad
aam
idivb
int3
aaa
loop
rcr
aad
fstp
cli
out
add
out
lock
xor
in
sti
in
aad
leave
icebp
loope
cmp
cld
xchg
cli
flds
repnz
jmp
shr
lock
in
loope
not
mul
rcl
repnz
std
or
xchg
xchg
mov
in
fcmovbe
test
ljmp
repz
ret
jecxz
into
fcmovnu
fimuls
cs
inc
add
add
add
rcl
rcl
aad
add
ja
icebp
pop
pop
jg
pop
add
aad
ror
aaa
cli
aam
cmp
fcomp
shr
cmp
xlat
loop
sti
shl
test
out
mov
shl
cli
fprem1
dec
call
out
in
xlat
jmp
sti
out
ffreep
iret
std
int
adc
xor
idivl
leave
out
inc
into
cld
loop
and
loopne
std
mov
xchg
mov
ss
rol
ror
and
int3
aad
hlt
fsubr
mov
in
in
loope
frndint
xchg
icebp
xchg
xbegin
cmp
iret
flds
out
in
mov
leave
xchg
rcl
hlt
xor
fdivr
hlt
cmp
repz
xchg
fldl
loopne
ror
sar
ss
fnsave
ret
stc
fcmovne
xchg
loope
out
int3
xchg
aam
ret
div
rcr
aaa
iret
fucomp
stc
aas
icebp
fdivr
out
rcl
in
in
decb
leave
int
in
sub
into
fyl2xp1
cli
int
out
test
std
mov
xlat
test
or
test
aas
std
icebp
icebp
into
addb
into
xchg
fcmovu
test
xor
ror
cmp
idivb
out
out
cmp
fldl
dec
mov
and
aaa
hlt
lret
cmc
divb
repz
fcmovnu
loope
rol
std
jmp
clc
ljmp
test
int3
clc
aad
aas
ljmp
fcmovnb
call
fcmove
mov
icebp
xor
iret
leave
fsubrs
out
iret
shr
shl
ret
fiaddl
cli
or
test
xor
out
shll
sti
clc
cmp
div
repnz
loope
ret
shr
mov
icebp
loop
mov
enter
cmp
stc
cmp
jecxz
fcmovne
div
fucom
aad
testl
in
fadd
cmp
iret
in
iret
sub
test
stc
hlt
test
lret
fdivrp
mov
shr
jmp
out
fnstsw
lock
or
testl
orb
jmp
repz
fmulp
in
sti
sbb
out
lret
xchg
xchg
out
xchg
xchg
into
fisttps
lret
call
cmp
rcr
mov
stc
add
in
mov
shr
cmc
fcom
in
aad
jmp
out
sarl
loop
adc
rol
shr
sub
xor
cld
xor
not
cmp
repnz
xchg
in
fsubp
clc
shr
into
xchg
out
in
cli
cmc
in
ds
cld
out
stc
hlt
add
or
addl
cld
inc
add
jne
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
rclb
movsl
mov
add
into
roll
repz
lret
jmp
adc
out
cmp
nop
out
mov
mov
neg
test
fstpt
lock
sar
ds
call
sbb
fsubrp
in
xchg
cmc
jmp
test
aam
cmp
cmc
jecxz
aam
in
cmc
cld
mov
movb
iret
xor
out
out
cmp
cmp
faddl
xchg
jecxz
sar
fistl
into
xor
fnstcw
lret
rcr
stc
hlt
xchg
aam
test
call
xchg
xchg
repnz
int3
std
into
cmp
ljmp
clc
jmp
fucom
call
xchg
xchg
rol
ret
out
xor
fnstcw
cmp
jecxz
test
ds
enter
mov
rorl
subb
repz
cld
icebp
cmp
in
lret
cld
xchg
in
mov
std
fst
cmp
std
fdivrp
cli
fst
cmc
les
jmp
push
leave
hlt
xor
repnz
fnstsw
cmp
addl
cld
repz
in
call
ficoms
lock
out
cmc
in
lock
int3
cmp
xlat
enter
jmp
lret
in
fmull
jmp
xlat
int3
cmp
sarl
shr
lret
shl
int
and
sbb
fdivrp
std
fmulp
fisttpll
icebp
lret
das
out
out
shl
mov
test
jmp
lret
xchg
loope
shr
in
in
repnz
icebp
cli
in
sar
div
fyl2xp1
xchg
fmulp
loope
fld
loopne
repz
xor
jecxz
cld
leave
fcmovu
not
lock
rol
jmp
xchg
sar
loope
in
fsqrt
stc
fdivrl
lock
imul
sti
iret
cld
test
hlt
shr
addb
out
rorl
imul
repnz
cmp
div
shl
roll
mov
loop
loopne
int3
das
leave
shl
vpsubsw
ror
fpatan
repz
xor
xchg
mov
mov
mov
xlat
cmp
int
aas
test
shl
repz
ljmp
nop
xchg
in
in
int
sti
xor
sti
int3
int
fiaddl
mul
rclb
xlat
sub
ss
aad
shl
ljmp
stc
sar
stc
fiadds
out
loop
loope
shr
cmp
cmp
cmc
lds
std
xlat
cli
mov
filds
jecxz
fcmovnu
aad
fmulp
cli
stc
idiv
ret
xor
jmp
xlat
ror
fld
and
test
xor
mov
xchg
bound
pop
add
mov
fisttpll
ret
in
iret
fxch
lret
iret
aas
sti
fst
int
cmc
push
not
xlat
loopne
sti
in
cld
test
out
in
lret
mov
in
ljmp
loope
test
out
orl
xor
aad
icebp
call
fistpll
jmp
leave
mov
fcomi
test
shr
lock
cs
cmp
sti
hlt
jmp
fdiv
fsubp
rol
sbb
loopne
mov
flds
loop
cli
cmc
shll
aad
enter
int
neg
aam
leave
out
in
lret
mov
xor
in
in
out
iret
iret
iret
in
clc
in
xor
fcmovnb
test
test
neg
and
fst
test
in
stc
enter
faddl
xlat
iret
icebp
cmp
std
call
mov
ss
fidivrl
shr
xlat
incb
xchg
xchg
xchg
xchg
iret
ror
xlat
out
out
divl
leave
faddl
mov
aad
leave
mul
lret
into
loopne
loop
sarl
aad
in
out
rcr
faddl
mov
sti
rorl
into
mov
orb
lock
icebp
jmp
aas
loop
jecxz
cmc
test
loop
ljmp
int3
adc
in
leave
shr
fdivrl
lret
sar
sti
in
test
fcmovu
mov
enter
decb
shl
fstpt
xor
into
roll
mov
mov
mov
in
cmp
rcl
out
cmc
adc
xchg
xchg
cld
in
jecxz
fsubr
addb
loop
fcmovnu
icebp
cmp
ljmp
rcl
ret
in
loope
fldln2
in
or
test
out
cmp
std
fnstsw
stc
rcl
jmp
rcl
ffree
jmp
jmp
mov
into
sar
cmp
lock
jmp
std
sti
rcr
shr
repz
fdivr
xchg
loope
xchg
hlt
in
xor
xor
rcr
out
rcr
fdivrs
fcmovb
rolb
hlt
decl
int3
add
test
xor
int3
cli
jmp
fucomi
std
rol
mov
sti
loopne
nop
shr
xchg
in
fdivs
cli
repnz
fcmovu
fidivl
push
cmp
fcmovb
iret
loope
cld
cmp
xchg
lret
shr
aam
rcl
ret
lret
out
sti
sar
sti
hlt
iret
roll
xchg
fisttps
fincstp
leave
faddl
loopne
fimull
enter
mov
nop
xchg
xchg
sub
jmp
jmp
in
ds
loop
fimuls
add
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
mov
pop
add
xchg
in
in
xchg
ljmp
std
testl
rcr
loopne
jmp
xlat
loope
leave
loope
mul
ss
sarb
aad
aam
out
lock
rcl
sar
and
jmp
les
int
xor
std
cli
shr
in
ret
sarb
rcr
fcomip
lret
xchg
mul
iret
mov
out
int
rol
rcl
int3
cmpl
enter
mov
in
in
jmp
ret
xlat
jmp
jmp
vcmpss
bnd
in
fcoml
lock
mov
sti
xlat
adc
faddp
fdivr
in
shl
into
in
xchg
jmp
lret
in
lret
int
repnz
ds
loop
in
iret
out
loopne
in
in
cmp
shl
in
cmp
xlat
test
mov
aam
out
fcmovne
lock
filds
sarb
hlt
enter
cmc
cli
ret
loope
repnz
fsubr
clc
cmc
out
loop
out
adc
loope
aaa
imul
fcmove
iret
shl
sti
cmp
aas
mov
leave
loopne
fcmovne
push
fmul
cli
fsubrp
out
shl
clc
rol
cmp
xlat
in
xor
rolb
leave
out
mov
in
jmp
jmp
sti
into
ret
roll
jmp
jmp
mov
cmc
stc
ds
int
std
fcmovu
loop
cmp
std
jmp
div
das
out
cmp
xlat
int3
cmp
icebp
sti
clc
rolb
in
out
lret
shl
xor
stc
aad
xor
aad
rcl
stc
loope
aam
ror
out
mov
nop
mov
sti
addl
cmp
std
aas
repz
fcmovnbe
div
div
ljmp
nop
jecxz
lea
cmp
cmc
cmp
out
rcr
cmc
rcl
ret
cld
ret
sar
fcomp
loopne
fstp
mov
nop
sub
ror
out
jmp
ror
jecxz
repnz
mov
std
fldl
int3
orl
sti
out
test
xor
fcomp
add
xchg
lret
ljmp
aaa
xor
cmp
cmc
rcl
clc
cmp
loopne
icebp
xchg
xlat
and
iret
int3
call
ss
clc
stc
cli
in
fcmovne
stc
fsincos
cli
cmp
out
out
std
lock
shr
nop
xor
icebp
into
clc
cmc
lock
idiv
loopne
adc
roll
enter
int3
xchg
sub
icebp
fnstsw
int3
sub
shl
clc
stc
jecxz
leave
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
push
jle
mov
lea
fimull
das
rol
repz
aaa
enter
hlt
and
neg
out
jecxz
mov
out
lds
cmp
xor
ror
ds
iret
jmp
cmpb
rolb
fadd
fdivr
and
std
mov
int3
shl
cmc
xor
out
repz
cmp
in
aas
aam
loope
fmuls
ljmp
int
in
cmp
fcomp
std
rol
std
loop
incb
int
jmp
in
cmp
leave
clc
repz
sti
aam
out
mov
xchg
cmp
incl
leave
aaa
incb
fcomip
xchg
cld
fucomip
xchg
lret
cld
fmull
out
in
cld
jmp
aam
cmp
cmp
jecxz
xchg
xor
loopne
loope
stc
icebp
in
leave
idivl
lret
cmp
cmp
ljmp
sub
aad
xlat
cmp
ds
out
rol
out
leave
hlt
enter
jecxz
jmp
xchg
into
shr
repz
icebp
in
mul
ret
clc
loopne
imul
mov
shr
in
mov
hlt
stc
sti
into
cld
ret
in
xor
loop
fdivp
decb
iret
hlt
xchg
fdivs
mul
in
hlt
lock
loope
rolb
mov
xlat
cli
xchg
in
not
jmp
fcmovne
hlt
fidivrl
in
aad
fiadds
ret
xchg
out
out
rclb
jmp
into
hlt
ljmp
and
clc
out
add
icebp
loope
sti
out
out
icebp
xor
xor
hlt
xor
sti
ret
div
shl
sbb
fdivp
enter
fimull
leave
ret
cmp
ljmp
fcmovnb
lret
icebp
std
fistl
xor
call
jecxz
xchg
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
xchg
gs
push
jle
add
in
enter
out
sub
out
in
loop
out
in
cmp
sti
out
lret
lret
cli
in
test
xchg
std
jecxz
adcl
int3
enter
lock
lock
lock
stc
test
in
cmp
out
test
int
div
sarl
cld
std
jmp
int3
shr
fld
xor
cmc
ds
out
ljmp
cmp
hlt
aad
cld
out
in
jecxz
clc
repnz
call
or
fisttpl
sub
out
stc
cli
bnd
int3
iret
aad
aas
rolb
cmp
fsubr
testl
out
into
ret
out
std
clc
loope
aas
clc
cmp
aas
lret
sti
fldlg2
in
sub
ljmp
xor
int
repz
shl
shl
shl
cmp
ljmp
adc
shl
fucomi
ror
cmp
xlat
mov
fmulp
hlt
stc
hlt
shr
jmp
aas
test
aam
cmp
sti
iret
jecxz
rol
into
enter
in
lret
lret
faddl
rol
jmp
dec
xchg
fld
hlt
aaa
int3
fidivrs
fsub
hlt
shl
add
fsub
lret
lret
mov
dec
jmp
jecxz
repz
cs
shl
int
cld
cmc
out
fcmovbe
mov
iret
xchg
xchg
loop
lret
out
out
ljmp
fsin
stc
test
loopne
lds
mov
int
repnz
fucomi
in
xor
call
lds
clc
cld
in
sbb
lret
ljmp
ret
iret
shr
out
stc
ret
test
idiv
mov
fildl
xchg
xchg
lock
xor
xor
rcl
xlat
jmp
loop
fadds
iret
xor
hlt
xor
idiv
int
in
mov
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
insb
jg
sbb
jle
cmc
sar
shr
std
out
filds
repz
in
xlat
div
in
xor
clc
cld
lock
sti
lret
test
nop
incl
ret
sarb
cmp
cmp
in
ror
jmp
rcr
fsubp
mov
mul
out
ret
mov
int3
ljmp
rcr
loopne
in
mov
fmul
and
loopne
repz
sub
repz
aad
rcl
xlat
sti
out
fdivp
rol
cmc
cmp
test
cli
mov
fsub
shl
fsubp
repz
xor
in
out
clc
loop
fcmovb
add
sti
neg
loop
jmp
into
in
filds
int
aaa
cmp
shr
cmc
loope
cmc
out
and
stc
mov
int3
out
lock
rclb
hlt
out
rcl
out
shlb
dec
ret
div
loope
icebp
enter
lds
cld
iret
aad
ss
leave
fstp
in
repnz
iret
cmp
cmc
sub
jecxz
icebp
mov
popl
cmp
das
cmp
out
sarb
fnstcw
loopne
jecxz
xlat
stc
loope
fisttpl
aam
fsub
stc
repz
in
cli
repnz
xor
in
cmp
cmp
test
fadds
xchg
xchg
iret
xor
int
lret
icebp
hlt
fdivrs
repz
cmp
clc
clc
std
fprem
xor
mov
lock
mov
mov
jmp
loope
fsubr
cmp
div
shl
jecxz
in
icebp
fsubrp
faddp
mov
cli
test
ror
mov
enter
call
fcomp
ret
ret
fdivr
sti
in
sti
stc
mov
fisttps
cmp
hlt
iret
leave
hlt
cmc
fsubrp
in
repnz
clc
rolb
xlat
lock
fsub
xchg
mov
out
clc
iret
into
lret
incb
stc
leave
cld
mov
mul
jecxz
cmp
cmp
cmp
sti
fucomip
test
roll
mov
sub
jecxz
enter
inc
cld
jmp
ror
aas
int
int
jbe
repnz
outsb
jg
sbb
jle
ljmp
sar
ds
fcmovbe
mov
loope
loopne
icebp
int
shlb
loope
in
xlat
cmc
sarb
ret
lock
jecxz
jmp
sti
in
xlat
test
sub
loope
xor
in
cmp
repz
out
cmc
sti
fadds
cli
leave
iret
xchg
enter
cld
aad
ror
sar
fnstsw
cmp
shl
in
fsubr
out
in
jmp
ret
sub
enter
cmp
loope
loopne
loop
cli
out
xchg
aad
out
cmc
clc
cmp
out
fcomip
aad
shl
cld
ds
aam
loope
mov
lock
xorl
xor
shl
cmc
dec
fcomp
cmpb
addb
test
out
jmp
call
fcmovb
sar
int
aam
in
test
mov
in
out
test
ror
imul
ror
fst
jmp
into
clc
loopne
ret
jmp
out
rolb
out
sti
div
lret
lock
stc
xor
aad
cmc
hlt
addl
rolb
call
cmp
out
fidivl
ret
loop
icebp
testb
xchg
jmp
mov
sub
test
xor
icebp
cmp
cmp
std
shl
std
add
mov
incb
xor
icebp
int3
sti
not
ljmp
fabs
in
pop
xor
jecxz
mov
in
cld
xor
ror
xlat
ret
aas
cmc
ljmp
mov
adc
loop
jecxz
std
fcomp
fsubr
cmpb
fstp
loopne
orl
rol
in
aaa
lret
clc
call
cmp
xchg
repz
sub
shl
shl
xor
sarl
cmp
hlt
test
mov
loopne
sti
sbb
xchg
clc
repnz
add
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
aaa
aam
repz
lret
in
and
test
sar
leave
cli
ror
mov
adcl
stc
ljmp
out
clc
xchg
in
jmp
fidivs
rol
fptan
stc
repz
in
aam
shl
call
out
neg
incl
aad
ljmp
fnstcw
ljmp
ljmp
cs
fdiv
loopne
cmp
cmp
jecxz
in
in
cli
test
push
int
jmp
hlt
sti
out
rcl
call
shl
loopne
xchg
rcr
cmp
jmp
adcb
fcmovb
sub
xlat
fldl
out
les
cld
jmp
jecxz
ret
sar
cmp
cmc
lret
xlat
cmp
div
fcmovnb
out
test
test
mov
xor
in
call
hlt
cmc
lock
in
std
ret
cmpb
call
int3
xchg
lock
xor
out
in
xor
cmp
repz
shl
mov
aam
call
cli
in
jmp
leave
cli
in
shr
ds
out
and
loopne
addl
mov
shlb
out
call
xor
vpsubsw
test
rorb
xor
stc
in
leave
xor
xor
lret
sar
test
cmp
jmp
std
xor
out
jecxz
jmp
idivb
iret
cli
sti
call
faddp
xchg
stc
in
lea
ljmp
into
cld
loopne
int3
xchg
xlat
in
mov
jecxz
in
nop
out
out
enter
xor
cmp
sarl
jmp
ret
rcl
cli
loop
or
incl
loopne
shr
cmp
int3
int
fmulp
loop
ds
sbb
sbb
jmp
in
test
cli
addl
clc
int3
int
fdivs
fcmovbe
icebp
ret
fcmove
int3
mov
aam
xchg
aad
stc
out
cld
lret
cli
aam
into
cmp
hlt
fstpt
mov
xchg
xchg
shl
xor
jmp
cmp
cmp
cmp
fsubp
clc
loopne
sti
in
cli
xchg
loopne
fidivl
int
idiv
ds
cmp
testb
mov
mov
lret
fstl
fcmovu
out
repz
sti
aaa
repz
fcmovnbe
fiaddl
mov
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
pop
incb
lock
jle
add
flds
loop
rolb
lret
cmp
loopne
fcmovu
fld
repnz
sti
loopne
fisttps
aam
xor
idiv
cmp
xlat
xor
fcmovnu
fcmovbe
fsubp
ret
xchg
fisttps
int3
std
rcl
lret
jmp
std
sti
fdivp
cmp
lock
fidivs
cld
clc
rorb
stc
out
loope
addb
in
cmp
hlt
cli
sbb
cmp
ret
sti
xabort
stc
out
int
adc
repnz
not
cmc
fldz
std
lret
icebp
int
fadds
shl
out
fyl2xp1
lret
loope
repnz
xor
int
fidivrl
iret
cmc
ljmp
icebp
clc
ror
cli
orl
rcl
xchg
mul
cmp
shl
repnz
xchg
ret
loopne
lret
clc
icebp
lret
in
roll
in
iret
shl
fdivrs
xlat
ds
fadd
call
xlat
fyl2x
leave
in
nop
mul
iret
hlt
xor
cli
fdivrp
fdivr
xlat
xlat
jmp
vcmpsd
lret
fld
fnstcw
xlat
cmp
sti
in
dec
shl
xlat
ret
xabort
fdivr
mov
repz
fnop
xor
ljmp
loop
ret
fincstp
enter
into
ljmp
int3
int
rcr
cmp
fxch
icebp
cmp
ret
fsub
call
fucomp
fst
in
ror
hlt
mov
xor
fucomip
aas
clc
shl
addl
out
fimuls
hlt
jmp
ret
xor
in
aaa
repz
std
cmp
sarl
aam
loope
cld
shl
shl
lea
fcmovnu
fcmovu
std
aas
into
aad
or
in
ret
idiv
out
xchg
loope,pn
xor
cmp
repnz
hlt
inc
ds
add
enter
lret
leave
sti
in
mov
aam
jmp
cmp
shl
repnz
testl
fildl
stc
in
fcmovnb
ljmp
int
cmp
xchg
out
ret
in
sti
out
aad
repz
stc
repz
sar
ret
ljmp
cld
mov
xchg
xor
aaa
aad
sar
int3
ds
ret
sarl
iret
loopne
fucom
in
loop
cld
mov
icebp
rclb
out
aaa
ljmp
ror
ret
loope
std
test
mov
in
xchg
orl
add
or
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
les
jg
lods
add
jmp
leave
aaa
stc
xor
sarl
rolb
fsubp
out
call
int
jecxz
jmp
fcmovb
repnz
out
test
stc
cmc
mov
jecxz
popl
xor
imul
cmp
into
int3
cli
stc
int3
ds
mov
ffreep
cmp
test
repnz
call
enter
adc
rol
test
jecxz
xchg
adc
mov
mov
aad
aam
call
lret
testl
lds
out
lock
jmp
out
cmp
cmp
not
fiadds
lds
icebp
jecxz
test
out
icebp
xor
fcmovnbe
ret
clc
faddl
adc
lock
rcl
fdivs
xor
repz
fucom
in
hlt
cmpl
lds
lock
in
mov
xor
aaa
sub
repz
shl
test
mov
loopne
ret
sub
mov
fdivp
and
cmp
sar
out
out
xor
icebp
fsubr
cmp
shl
mov
fucomp
flds
icebp
cld
fisttps
xor
into
cmp
loope
rcl
out
loope
test
incb
call
sti
sub
call
repz
fcomp
call
icebp
sbb
xchg
xchg
sti
xchg
lock
vpinsrw
int
call
add
call
idiv
or
addb
into
in
sarb
cld
xor
fdivrp
fabs
fcmovu
aas
shl
fsubr
stc
sub
sti
test
xchg
shr
int
call
xlat
fiadds
fcmovbe
sti
out
xchg
and
faddl
in
jecxz
xor
lret
lock
std
clc
fcmovb
sarl
loope
mov
out
in
repnz
enter
cmp
rolb
aad
clc
fcmovb
stc
xchg
std
shl
shll
out
fsubr
aaa
aad
ds
fidivrs
loope
fcomip
aad
ret
mov
jecxz
xchg
loop
icebp
stc
xlat
enter
leave
cmp
aam
ret
std
fsub
test
fildl
xor
clc
in
ror
sub
in
fsub
neg
test
jmp
out
int3
mov
ror
fcmovu
lock
dec
iret
loop
sti
xchg
inc
cmc
in
lret
ljmp
rol
aaa
jecxz
cmp
loope
rcr
xor
jmp
lret
aam
aam
insb
mov
dec
js
jle
add
xchg
aam
enter
xchg
into
sti
rorb
sti
in
iret
cmp
xor
jecxz
rcr
xchg
fucom
icebp
in
lret
decl
shr
icebp
test
in
fdivp
repnz
in
jmp
mov
jmp
orl
lock
in
xlat
cmc
std
fdivr
fdivrs
cld
shr
loope
lret
fsubp
mov
lret
hlt
out
lret
ss
in
sarl
out
out
aas
out
fcmovne
int3
ret
inc
fsubp
in
rcl
hlt
call
fcom
adc
ret
call
in
jmp
out
test
mov
xor
fdivrp
aas
xor
ftst
test
cli
jmp
xchg
orb
xor
cmp
cmc
aam
loopne
stc
addl
mov
out
fsubp
add
in
mul
aaa
enter
aad
cmp
in
adc
out
lds
in
fcomip
int
enter
out
lret
cmp
xor
cmp
iret
rcr
loop
incb
out
rorb
in
out
xor
out
rolb
rcr
out
ds
leave
in
out
xchg
in
xor
test
stc
cmp
aad
fiaddl
or
leave
jmp
shl
int3
xor
aam
call
out
call
int3
leave
out
enter
out
xor
fcmove
clc
ss
in
stc
int
loopne
fnstsw
jecxz
add
filds
icebp
xchg
xor
xor
cmp
out
ljmp
stc
rol
sti
shl
out
out
in
mov
icebp
idivl
in
shr
in
out
ljmp
clc
rol
rolb
fsubr
rorb
jecxz
xor
rcl
lret
repnz
int
cld
jmp
imul
clc
ljmp
ss
cmp
lret
iret
fsqrt
cmp
cmp
jmp
sti
out
repnz
fisttps
xor
sti
aad
imul
leave
cmp
test
cld
into
mov
shr
aad
clc
ljmp
xlat
hlt
lock
stc
loopne
int
testl
in
icebp
icebp
cmp
fdivl
cmc
fxch
fcmovu
out
jmp
lea
fucom
cmp
adc
into
loop
iret
lock
loop
mov
popl
push
xchg
jb
add
add
add
add
movl
enter
int
lds
push
mov
lods
add
xchg
xlat
in
out
vpavgb
sbb
cmp
in
fneni(8087
in
mov
fucomi
shr
repnz
idivb
hlt
aad
sbb
shl
mov
xchg
xchg
cs
ljmp
int
icebp
hlt
filds
mov
int3
fisttpl
clc
into
ss
sarb
cmp
in
xlat
fnstsw
hlt
add
cmp
mov
ljmp
xlat
std
in
out
mov
cld
fnclex
and
xchg
lret
out
repnz
fdiv
ds
int3
xor
icebp
mov
cli
repnz
cmp
fdecstp
cmp
hlt
aad
in
ret
div
in
std
mov
clc
loopne
iret
int3
repz
iret
ss
cmc
ss
xor
add
xchg
repz
hlt
sarl
int
loopne
fimuls
repnz
repnz
iret
cmp
iret
clc
aas
stc
rcl
addl
ret
test
adc
xchg
int3
shrb
jmp
in
imul
xlat
in
clc
cmc
ret
orl
and
out
out
shl
icebp
repz
enter
cmp
lret
and
testl
xchg
lret
test
rcl
call
repz
fidivrl
fisttps
ds
idiv
mov
in
in
mov
lock
into
in
lock
sar
lret
loope
repz
dec
xlat
clc
jmp
rclb
ss
xor
cmc
cmc
fcomip
cmp
fmulp
ret
test
call
stc
mov
test
loope
cmc
in
stc
out
rcr
aad
out
shr
in
sbb
loop
cmp
int
int3
out
out
fcmovb
xor
add
call
std
mov
in
std
ret
ljmp
sarb
repnz
lds
mov
nop
fcomp
shl
out
ror
ss
ss
cmp
faddp
cli
ffree
fimuls
call
mov
aaa
aaa
lret
and
loope
rol
lret
jecxz
rorb
icebp
lock
jmp
add
fidivrl
neg
aad
ljmp
xchg
div
shll
jmp
lret
repnz
hlt
loopne
rcl
xor
add
mov
xchg
xchg
into
in
fcmovbe
fcomp
loopne
clc
out
jmp
xor
cmp
jne
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
enter
sub
add
add
ds
rolb
xchg
sti
fmulp
jecxz
xor
ljmp
lret
rcr
aas
xlat
rol
les
xchg
in
xor
stc
fidivrl
out
shl
shl
rcl
out
std
lret
lret
fcomip
in
int3
out
ret
out
int3
stc
aas
add
fiaddl
xchg
orl
int3
cmp
ror
cmp
fdiv
neg
cmp
div
call
in
into
repnz
xchg
loop
lret
xor
fdivl
loope
fdiv
shl
call
in
std
cld
std
iret
jecxz
lds
in
in
aaa
not
divb
rcl
loop
fcom
ret
std
faddp
call
lret
xchg
lret
imull
xlat
out
out
xlat
rcr
hlt
stc
test
in
fcomp
lock
out
iret
rcr
xor
ss
fcmovnbe
jmp
cmp
jecxz
xlat
fadd
ret
stc
cld
mov
mov
out
xor
std
xor
xlat
fcomi
into
aas
loopne
fld
fimull
rorl
fdivrs
sti
out
lock
in
loop
cmpb
aam
ds
out
test
sar
inc
iret
shl
out
repz
fdivrs
rolb
mov
mov
lret
and
shr
rol
xor
xor
repnz
shll
cmp
loop
xlat
ret
jmp
lret
jmp
rorl
neg
rcl
cmc
shr
into
testl
lds
jmp
out
shr
out
cli
out
loopne
lret
jmp
sti
aas
sti
fucomip
incl
loop
ljmp
shll
xlat
out
fmul
shl
out
cmpl
repz
and
cli
orb
ret
lret
out
sar
fistpll
cli
ret
rolb
neg
cld
loop
fmull
icebp
in
xor
ror
std
rolb
std
mov
ljmp
into
int3
shr
loopne
aas
in
in
test
aad
out
mov
cmc
in
lock
fstpt
fcomi
xor
xor
in
ret
std
sbb
hlt
call
ret
xchg
jmp
hlt
bnd
loopne
ror
out
lret
rcl
cmp
into
cld
aam
fisttpll
lea
mov
sub
enter
icebp
sar
roll
out
loope
test
shr
mov
add
add
lret
enter
fcmovnu
push
icebp
ret
loope
pop
add
jle
add
roll
aaa
xor
sarl
repz
cmp
shl
mov
fsubr
mov
lret
aam
jmp
shl
hlt
shr
ret
test
loope
jecxz
xchg
xchg
in
imulb
shr
in
in
in
ror
lock
test
sti
fimuls
fmull
out
out
fldln2
jmp
in
loop
in
ror
in
fiadds
in
or
stc
rcl
enter
clc
sar
loop
adc
and
out
and
lea
into
fyl2xp1
jmp
into
jmp
jecxz
cld
fcmovne
ffree
lret
test
loopne
mov
stc
loope
cli
fdivs
push
fdivr
cmp
ss
fadd
lret
leave
jmp
xchg
mov
xor
shr
lret
not
aaa
repz
loop
aas
aam
les
fiadds
std
inc
out
jmp
out
fmul
repnz
hlt
hlt
cmp
repz
sti
mov
loopne
into
int3
iret
fists
sub
cmp
fdivr
rcl
lock
cmc
jecxz
aam
shl
xor
call
fucom
jmp
sub
sarl
repz
fdivr
jmp
enter
incl
out
aaa
ljmp
out
cmp
in
hlt
out
clc
mov
mov
fsts
in
in
ljmp
idiv
jmp
lock
movl
xchg
adc
into
enter
fdivr
dec
ljmp
shl
jmp
xabort
int3
aam
xchg
ss
aad
xor
xlat
int3
int3
fucomp
addl
clc
jmp
std
icebp
nop
xchg
or
repz
cmp
loopne
icebp
sarb
cmc
lds
incb
sub
leave
cmp
clc
call
rolb
orl
mov
idiv
xor
out
cmp
loopne
ds
leave
ljmp
fists
xor
xor
cmc
icebp
cmp
fcmovu
fidivrl
ret
clc
mov
rcl
jmp
in
cld
lret
loopne
clc
std
aam
testb
test
xor
out
in
jmp
out
aam
std
loope
incl
xchg
mov
jmp
into
aas
out
add
mov
mov
xor
jmp
enter
int
enter
push
add
sub
jle
add
repz
rolb
addb
out
aam
aas
aaa
in
ss
into
lret
xor
cmp
out
loop
movl
out
mov
icebp
shl
out
aaa
sti
xor
rcl
test
rol
out
out
xchg
in
nop
xor
lret
out
xor
xor
clc
ds
fdiv
xchg
orl
out
call
sbb
rol
out
faddl
in
call
fcmovu
xchg
enter
shl
lret
lret
fidivrl
fadd
test
testb
out
in
cli
repnz
in
ror
fdiv
fistpll
addb
leave
sub
in
shr
mov
leave
ss
fxch
in
lret
in
rcl
out
ret
sar
mov
cli
nop
in
lret
out
loop
fnstcw
lock
call
cmp
jecxz
div
leave
lret
loopne
iret
out
out
out
cmp
shrb
icebp
cmc
fidivrl
xlat
cmc
ds
aad
int3
hlt
clc
div
les
mov
ror
fxch
into
out
lock
ljmp
icebp
loop
mov
out
out
iret
mov
cs
jmp
xor
xlat
xor
in
cld
les
nop
ljmp
bnd
div
fcomp
testb
fisttps
icebp
ljmp
int
lock
cmp
rcr
not
xchg
mov
mov
addl
clc
fcmovbe
cmp
shl
aas
ret
ret
addl
fdiv
out
fstp
adc
aaa
aaa
xor
hlt
sti
cmp
in
in
mov
flds
adcb
hlt
xor
cmp
int
addb
aam
stc
cld
fninit
in
repnz
in
fmul
xor
xorb
cld
xchg
mov
into
mov
shll
iret
cmp
int3
idivb
hlt
lret
xor
cmp
stc
aas
and
incl
out
or
in
shr
sti
ror
cli
fdivr
jecxz
sbb
clc
aad
loopne
enter
xchg
repz
jecxz
shlb
xlat
int
ds
leave
int3
lock
cli
std
xlat
cmc
lret
fmul
into
mov
mov
cld
xchg
repz
shr
cmc
into
aad
in
fninit
cmp
cld
stc
in
lea
lock
aas
lret
fcmovnu
xlat
aad
jno
push
lods
push
cmp
add
add
and
loope
out
shll
loope
loopne
fiadds
loope
and
mov
loopne
xchg
out
lock
lret
in
loope
or
out
cmp
fst
cmc
test
mov
ficoms
stc
loope
lret
in
fdivrs
shl
jmp
sar
lock
ret
test
aad
shll
lret
neg
in
cmp
xchg
call
enter
cli
icebp
lret
cmc
repnz
shrl
in
std
test
repnz
std
or
xchg
jecxz
lret
xchg
out
int
lock
in
jmp
cmp
loope
aam
aam
fsub
loopne
int3
int3
int
push
xor
ss
aaa
call
int
cld
lock
loopne
jmp
fmulp
xchg
test
lret
aad
iret
fsub
fidivl
sti
out
std
stc
ljmp
fcomp
dec
jecxz
out
in
out
out
xor
into
mov
repz
cmp
xor
shll
cmpl
xlat
in
loopne
stc
icebp
lret
xchg
in
lock
fcom
xor
into
cmp
shr
xlat
out
in
out
fcmovnbe
ret
mul
nop
mov
cli
ljmp
clc
shlb
xor
fnstcw
int3
loope
xchg
sbb
out
fadds
rcl
enter
xor
jmp
shll
test
fdiv
loopne
ljmp
sbb
cmc
hlt
shr
clc
rolb
loop
iret
xor
cmc
call
loopne
xchg
out
xlat
lret
int3
cmp
loop
out
icebp
loope
xchg
adcb
rorb
out
hlt
int3
aad
in
test
ret
roll
shl
xchg
shr
jmp
shlb
lret
fidivrs
ljmp
ds
cli
add
orb
sub
xor
jmp
xor
ds
xor
rcl
xchg
loop
sti
clc
out
std
call
int
out
jmp
icebp
neg
cmp
call
out
test
mov
in
shl
ror
in
cmp
rcl
aad
cmp
xlat
cli
div
iret
neg
add
mov
lret
xchg
hlt
lock
in
imul
leave
aad
cmp
into
test
hlt
into
nop
iret
mov
xchg
lret
xlat
in
fdivrs
out
aaa
cmp
aam
into
loop
addb
int3
mov
enter
cmp
fyl2xp1
mov
mov
jmp
into
enter
int3
fwait
outsb
mov
xchg
inc
repz
lods
add
lret
fld
loope
enter
test
out
call
jecxz
aad
hlt
hlt
xor
std
fcomip
hlt
loope
int
in
in
lret
sbb
ficoml
iret
icebp
icebp
enter
xor
ror
ret
ret
out
cmc
testl
sub
lret
cld
int
cld
test
cmp
shl
shr
fdivp
in
filds
in
aam
xor
in
stc
cmp
cld
lds
jmp
sti
loope
call
ss
leave
cmp
loope
out
fucomip
in
out
test
ljmp
clc
icebp
icebp
lret
shr
into
repz
jmp
icebp
not
out
hlt
ljmp
repnz
loopne
nop
xor
shr
out
idiv
out
cld
fcmovnbe
cmp
fdiv
cmp
mov
loop
or
out
in
xor
out
repnz
cmp
shl
std
xchg
mul
fadd
stc
call
lock
out
xor
cs
shl
lret
stc
int
in
mov
xchg
in
xor
std
test
mov
ss
ror
out
fdivrp
cmp
cmp
flds
jecxz
cmc
cld
out
cld
cld
cmp
aad
out
cmp
xlat
vpsubd
into
cmp
cmp
shl
cmpl
ljmp
xchg
cli
cli
fnstsw
stc
jmp
out
rcl
ret
imul
cld
sbb
ret
lret
ljmp
cmp
ljmp
clc
aam
cmp
enter
addl
das
xor
xor
in
fnstsw
fdivrl
cli
out
aad
movl
xchg
icebp
int
shlb
out
xor
out
hlt
cmp
into
ret
fld
not
fimuls
fiadds
xor
shll
cmc
cmp
cmp
repz
aas
icebp
fcomip
fstp
movb
loop
ss
neg
xor
jmp
aad
hlt
icebp
in
xchg
mov
lea
out
loop
aad
aaa
lret
int3
cli
sar
out
jmp
test
jecxz
call
les
xchg
loopne
shl
enter
repnz
ds
and
in
xlat
inc
in
out
lret
lret
in
xor
int
ljmp
cli
rcl
ds
jecxz
movl
aaa
cmp
shr
ds
xor
loope
testb
loope
inc
cmp
movl
int3
into
fstp
pushf
mov
mov
jle
add
sti
cli
call
ftst
repnz
out
sar
idiv
in
ds
std
fldlg2
in
xchg
ret
out
test
out
fprem
shl
jmp
cli
lret
ss
xlat
cmp
ror
lock
fsubp
in
iret
cmp
shr
mov
in
lret
xchg
xchg
nop
icebp
jmp
into
iret
not
aam
lock
ljmp
std
xchg
in
mov
fcmovnb
divl
call
aam
fcom
fld
loopne
jmp
test
repnz
addb
enter
aad
cld
xlat
test
sti
in
lret
int3
sti
xchg
mov
lock
int3
aam
xor
das
cmc
rcl
in
cmp
cmp
repnz
icebp
aad
test
int3
ljmp
vshufps
in
shll
cld
icebp
aas
leave
neg
lret
loopne
into
fistl
div
out
aaa
lock
cmp
int
sar
icebp
repz
clc
leave
testb
xchg
xchg
mov
enter
int
in
fdiv
stc
aad
cmp
aaa
xchg
faddp
mov
mov
lock
jmp
xlat
cmc
ss
sti
cmp
in
out
fcomi
loopne
std
enter
int
jmp
lret
jmp
divl
jecxz
call
into
test
xchg
out
jmp
jmp
call
cmp
loopne
mov
orb
mov
dec
fcom
lret
in
out
cmp
icebp
xlat
int
fxch
std
rol
vpand
in
mov
rcl
loope
cmp
repnz
lret
aas
lock
out
rcl
lret
in
mov
sub
shl
repnz
aad
ss
ret
fcmovnb
mov
loope
fcmove
fcmovnu
leave
icebp
ljmp
icebp
into
cld
fdivr
rcr
cmpl
in
xchg
int3
mov
out
clc
hlt
sar
cmc
rcr
clc
repz
out
loop
call
clc
lret
lret
movl
fnstcw
cmp
clc
test
cmp
clc
jmp
std
jmp
aam
cmp
enter
aam
cmp
loopne
test
loop
std
xor
lock
aad
int3
repz
ret
aas
mov
test
clc
mov
iret
out
in
sar
nop
clc
jecxz
rorl
jmp
rcr
int3
ror
fcmovnu
arpl
push
jle
add
div
shr
aaa
les
cmp
fsin
jecxz
out
call
cmc
fidivl
out
ds
rolb
aad
enter
fisttpl
jmp
ret
aaa
out
incl
xchg
xchg
cmp
in
ret
loop
mov
aam
lret
out
repnz
cmc
fincstp
sarb
shl
xlat
testb
clc
iret
lret
call
lock
ss
xlat
fsubr
into
out
cmp
sar
fadd
ljmp
test
xchg
shl
ljmp
aaa
cmp
jecxz
xchg
fmul
ret
ljmp
sub
mov
cmc
cmp
xor
in
int3
out
stc
ret
cld
jmp
xlat
out
std
into
lret
rcl
lock
xor
rcl
fcmovnu
cmc
iret
into
sti
push
fnstsw
fcomp
mov
hlt
in
loop
int
in
xor
cmp
loopne
into
and
int3
icebp
addl
cmc
das
lret
fcmovnb
cmp
repz
sti
ss
in
in
fildl
xchg
cli
cld
repnz
aad
xor
ljmp
rcr
in
aad
loope
rolb
out
std
in
lret
out
sub
jecxz
hlt
out
jmp
cmp
rolb
sub
int3
out
iret
shr
add
xchg
enter
cmp
hlt
cli
stc
hlt
in
cmp
repz
aas
xlat
xchg
xchg
call
cmp
shl
ljmp
xlat
incl
leave
fsubp
orl
out
jmp
shl
repnz
fucomip
rol
leave
into
fsubrp
stc
out
rcr
test
ret
xlat
stc
cmc
iret
cld
into
int3
rcr
cmp
fchs
xchg
xchg
out
in
into
clc
hlt
lret
icebp
xor
cmp
ss
in
in
in
int
in
stc
das
leave
out
cmp
rcr
ret
iret
rcr
std
loopne
fmuls
lret
lret
das
shl
in
cmc
ss
xor
incl
lock
testb
jmp
out
rcl
loop
cmp
leave
aas
clc
cmp
aad
aad
cli
ret
ret
fldl
cli
fdivp
xchg
test
call
out
cld
in
in
cmp
roll
in
fcomip
cld
xchg
mov
lock
lock
xor
cld
fcomi
fstpt
shl
cmp
hlt
stc
repnz
roll
jmp
enter
aad
leave
fnsave
cmp
sbb
adc
jle
add
enter
loopne
fisttpll
enter
mul
xor
repz
rorl
stc
test
cld
jmp
test
jmp
aad
div
int
out
rcl
shl
fcmovu
aad
fcomp
jecxz
in
leave
and
leave
in
lret
loope
hlt
loop
xchg
stc
ret
les
int
loopne
loop
leave
jmp
mul
clc
int
icebp
shr
stc
in
cmp
cli
aam
leave
loop
enter
adcl
lret
shl
cmc
aaa
cmp
xchg
jmp
xlat
std
xchg
call
aaa
rcl
shr
shll
int
xlat
in
testb
rcl
clc
fadd
decb
in
sub
std
lock
cmp
cmp
test
fsubr
and
in
out
loopne
call
aaa
cmc
xlat
xlat
int3
jmp
fdivrl
fcmovbe
mov
in
xchg
out
loop
jmp
in
out
sarb
fmul
aad
icebp
rcl
jmp
iret
in
lret
xchg
in
loope
in
sub
fsubr
cld
ret
out
hlt
faddp
or
loopne
test
fmulp
mov
out
aad
enter
aaa
rcr
ror
out
in
cld
out
test
sti
vpand
repnz
icebp
or
stc
cmp
in
adc
test
out
in
mov
jmp
loop
out
repnz
mov
in
out
xor
shl
jecxz
cmp
loopne
ret
test
ljmp
sub
repnz
repz
cmp
ret
cmc
call
std
loop
jmp
xor
out
fcmovbe
repnz
ret
addl
clc
fsubr
out
mov
repz
das
xor
in
std
xor
in
fcmovbe
fucomi
ret
int
loope
std
leave
aam
mov
repz
imul
xlat
ss
fdivr
roll
add
stc
fcmovne
mov
shr
xor
xor
int
into
lret
into
cmp
loopne
cmp
aad
sbb
lret
or
fabs
out
jmp
fucomip
into
fstp
jecxz
out
fcmovnb
fiadds
fucomi
fsubr
shl
xchg
aaa
ret
in
hlt
ret
out
ds
xlat
std
xor
ds
ret
std
clc
stc
test
cli
clc
mov
sti
xchg
aam
sub
fcmovu
aad
xchg
cld
repz
cmc
mov
int3
fmul
xchg
adc
bnd
hlt
out
jecxz
pop
test
je
jmp
mov
int
sub
movsb
adc
jle
add
xor
rcr
fdiv
xor
jmp
in
popl
iret
mov
into
cmc
loop
xor
std
and
cli
fcmovbe
xchg
out
out
rclb
cmp
cmc
rcl
out
lock
loopne
sti
ljmp
jmp
ror
stc
lret
xor
jmp
jecxz
idiv
rol
shl
in
mov
in
sti
mov
repnz
aam
cs
aaa
vpsadbw
and
ds
test
hlt
lret
fcos
mov
cmp
xchg
shl
int
rcl
in
jmp
stc
shr
cmp
flds
into
sub
test
aad
cmc
cmp
cmp
test
loop
inc
in
xchg
xchg
rcr
test
aad
sarl
std
lock
out
leave
aad
mov
int
and
jmp
lret
shr
ret
cli
jecxz
leave
test
mov
jecxz
in
loope
xchg
int
xlat
fdivrs
cld
out
repnz
repz
loopne
fcmovnbe
cli
hlt
cmpb
aad
out
mul
lret
ror
iret
aas
clc
int3
int
aam
repnz
xor
repz
loopne
cmc
leave
fucom
leave
fmuls
test
lock
ret
loopne
sti
leave
aaa
cmp
shll
fldl
cmp
fadd
leave
mov
fmuls
rcl
in
lret
shrb
out
fadd
cmp
xor
cld
fildl
jmp
shl
xchg
ljmp
out
shl
ror
loopne
shl
repz
in
test
in
loopne
in
int
xor
int3
lock
cmp
std
fidivrs
rcl
mov
in
aad
into
lret
adcb
divl
les
cld
jmp
cmp
cmp
and
mov
fcmovu
mov
jmp
call
repz
cmp
shr
fidivrs
out
sar
sti
out
ljmp
lret
cli
out
fcom
shr
loopne
cmp
fadds
int3
lret
mov
imul
ret
imul
out
xlat
call
std
repnz
fisttpll
fcmovnb
lret
mov
call
sarb
xor
into
clc
fdiv
aaa
repnz
cmc
jmp
leave
out
dec
enter
aad
aaa
rcl
xor
repz
ret
rcr
aam
test
incl
lock
aad
ret
clc
ljmp
xlat
stc
loop
xor
xor
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
iret
mov
jle
add
stc
test
jmp
in
loop
cs
cli
int
xlat
lret
jecxz
cld
int
repz
fcmovnb
cmc
loopne
leave
jecxz
test
rcl
cmc
sar
int
cmp
int3
cmp
repz
test
fadd
xchg
leave
shll
shll
shr
fcomip
hlt
xlat
xlat
idiv
ret
stc
std
aad
loope
jmp
mov
loope
xbegin
cmp
cmp
loope
loopne
stc
not
std
xchg
repz
loop
xchg
test
xlat
lret
sti
leave
std
cmp
rcr
shl
shl
fsubp
stc
cmc
hlt
loope
int3
int
xchg
in
out
out
vpsubsw
shl
jmp
sti
ffreep
out
rcl
clc
fsub
std
fiaddl
ljmp
in
repz
std
loop
out
ret
icebp
sti
aad
out
or
xlat
loopne
out
hlt
repnz
aad
cld
fdiv
cmp
repz
out
test
jmp
xor
sar
aas
stc
clc
rol
icebp
out
in
stc
icebp
call
loopne
shlb
out
out
in
in
aaa
cli
icebp
adc
call
icebp
int3
aam
jecxz
rcl
in
fistpll
aas
sub
loop
test
test
fiaddl
int
aas
jecxz
rcl
stc
clc
xor
cmp
int
std
roll
test
cmc
mov
out
xchg
in
cmc
iret
fsubr
rcr
fdiv
xchg
call
clc
sbb
loopne
loop
fdiv
into
stc
fcomi
lock
out
xlat
aam
loopne
lret
add
fstl
divb
leave
rcl
fnsave
fcomp
cmp
fnstcw
xchg
stc
loope
jmp
out
jmp
mov
cli
in
lret
ljmp
hlt
fmul
loop
test
in
lock
out
out
hlt
xor
sarb
test
stc
cld
mov
in
out
ljmp
jmp
xor
lret
std
std
xor
jmp
sarl
adc
xlat
jmp
lret
in
int
leave
aam
xor
cmc
xlat
cmp
jmp
ljmp
mov
mov
sti
int3
loope
sar
ret
into
in
in
std
loopne
cmp
in
xlat
aas
ret
hlt
mov
jecxz
xchg
out
in
in
fnstenv
out
shl
ljmp
cmp
aad
in
clc
ret
faddp
fucomp
in
popl
lock
mov
leave
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
add
add
out
fmul
xor
les
in
aad
and
out
rol
int3
mov
out
xlat
in
cmp
out
fst
xor
clc
rolb
loopne
out
sub
int
in
cmp
repnz
int
cmp
hlt
roll
loopne
sti
ret
sti
test
in
loop
into
shl
out
enter
fdiv
jecxz
into
cmp
shl
faddp
loop
repnz
jmp
ljmp
fucomi
in
in
ret
stc
faddl
sbb
jmp
lret
xchg
jmp
lock
aam
fdivrs
clc
repz
call
fisttpll
xchg
ljmp
int
fnstsw
loop
fcomi
fstpt
mov
xchg
std
clc
cld
fcmovne
xchg
jecxz
out
divl
in
cmp
lret
repnz
xchg
push
ret
lret
in
or
int
lret
imul
cmp
stc
cmp
cmp
fadds
aam
aam
mov
fmull
loope
ljmp
int
out
fmul
out
xlat
cmp
repz
int
lock
lds
divb
fnstcw
std
cmp
xlat
divb
hlt
hlt
idivb
jmp
incb
repnz
loopne
ret
stc
xor
jmp
sti
fidivl
ret
sti
fmul
jecxz
fld
cmp
xchg
jmp
cmp
iret
cmp
sar
cmp
loop
lret
test
shl
iret
cmp
xlat
sar
cmp
jecxz
cmc
lock
repz
rcl
fptan
jecxz
test
out
out
std
aaa
cmp
icebp
loopne
leave
repnz
aas
ljmp
test
loope
cmp
xor
hlt
jmp
icebp
fdiv
add
add
out
ljmp
lret
in
std
leave
call
lock
testl
loopne
in
jecxz
xlat
in
ror
fcomi
cmp
xlat
out
into
cmp
std
test
cld
loope
orb
iret
adcb
or
inc
add
add
add
aam
enter
fldl
push
xchg
fiaddl
jo
sbb
jle
add
mov
loopne
cmp
shl
out
aas
icebp
cld
out
lock
xlat
in
cld
les
into
jmp
out
aad
fdivrl
xor
hlt
icebp
std
loopne
fcomip
fadd
repz
cli
xchg
fdiv
sti
in
shl
neg
xor
in
aam
imul
fildl
sti
ror
in
stc
out
leave
iret
loopne
aad
clc
hlt
in
in
int
in
rolb
cmp
loopne
fstp
leave
lret
loopne
int
nop
loopne
sub
out
jmp
into
idivb
ds
out
loop
in
mul
cmc
std
nop
fsts
aaa
hlt
ret
std
cmp
aad
cmp
shl
cmp
jecxz
stc
loope
loope
lret
jmp
test
jecxz
out
cmp
repnz
loopne
ljmp
movb
jmp
ljmp
repz
cmp
not
add
hlt
mov
in
in
jmp
xor
out
repnz
dec
idiv
repz
fucomip
test
out
lret
mov
int
ljmp
icebp
jmp
cmp
rol
int
icebp
ret
cli
loope
testl
rcr
jmp
rcr
leave
lret
iret
ds
loopne
fldlg2
in
fcmovnu
loop
popl
enter
fcmovnbe
cli
std
jecxz
in
ffreep
stc
loope
incl
out
lock
in
aad
xor
icebp
aad
xor
cmp
out
out
test
rcl
ffree
leave
in
cld
lret
fucom
adcb
ss
cmp
repz
clc
out
cmp
mov
or
lret
int
xor
cmp
shr
loop
ret
mul
int3
sbb
in
ljmp
shl
in
fdiv
fdivr
rcr
ret
std
mov
ds
jmp
call
repnz
out
fsub
rcl
fdiv
xchg
fucomi
mov
int3
faddl
in
out
hlt
sarb
ror
hlt
aas
aad
hlt
stc
cld
enter
dec
or
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
cmpsl
push
jp
negb
jle
fdivrp
f2xm1
int3
lock
fcomp
jmp
roll
addb
sbb
call
out
fdiv
xlat
xlat
cld
xor
cmp
loope
shl
sar
mov
out
jmp
std
out
lock
ror
ret
iret
leave
fmul
out
sti
sar
fdivl
xlat
ret
ljmp
enter
icebp
rcll
aad
call
fadd
fcmovu
jmp
sbb
in
lret
xchg
lret
xor
rcl
in
ror
out
in
cmp
adc
cmp
mov
out
mov
rol
lret
aad
xlat
out
ljmp
fdivr
call
mov
jmp
shl
clc
in
rcl
cmp
ss
icebp
not
fnstcw
xlat
test
enter
out
shr
fsubr
test
ljmp
enter
rolb
ret
xor
into
fiaddl
in
xor
ret
into
into
jmp
fmulp
xlat
cld
cld
cli
icebp
rcr
cmc
cld
out
fucomp
xchg
loope
in
int3
repz
out
lret
ss
jmp
cli
hlt
ds
call
orl
xor
ffreep
iret
test
ret
rol
shl
in
mov
std
out
out
in
orb
in
sti
cmp
fistpll
jecxz
int3
loopne
stc
fmull
aas
xor
aad
repnz
fdivr
clc
in
sti
in
les
cmp
leave
xchg
cli
fcmovne
in
repnz
in
repz
out
cld
aas
std
fcomi
lret
ljmp
icebp
ljmp
lock
cmp
fucomp
ret
hlt
ret
testl
mov
call
lret
int3
jmp
in
xor
ret
sar
std
loope
orb
ficoml
jecxz
rol
into
cmp
xor
in
fnstcw
ret
ret
loope
sub
lret
in
in
loope
shr
ret
out
fxch
rcl
ljmp
mov
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
jecxz
in
les
mov
hlt
out
cmp
lret
ljmp
lds
sti
cmp
cmp
fsubp
leave
xlat
out
std
leave
loop
out
out
into
in
fucom
cmc
aaa
fidivrl
jmp
iret
fmuls
cmc
fnclex
call
lea
ljmp
into
cmp
in
cmp
leave
xlat
mov
int3
test
les
int
in
fucomi
hlt
shl
in
lock
leave
lret
iret
lret
xchg
int
icebp
ret
int3
lret
in
repz
cmp
idiv
mov
loope
testb
out
call
jecxz
fcmovu
fucomip
shl
jecxz
in
stc
rorl
mov
repnz
in
aad
das
out
aam
lret
loopne
cmp
hlt
icebp
xchg
in
ljmp
roll
lret
xor
fdiv
aad
sar
out
loope
adc
ljmp
mov
fsubr
iret
in
int
hlt
out
testl
in
decb
std
test
jmp
out
aam
cmc
cmp
fcmovne
iret
int
hlt
loop
cmp
lds
jmp
in
xchg
xor
vshufps
idiv
or
out
stc
sti
cmp
stc
cli
lret
std
shr
out
cmc
shl
xor
call
aam
ljmp
enter
fucomip
xchg
int3
out
mov
xor
out
lock
in
ds
aam
ds
std
fimuls
loope
call
rol
in
jmp
adc
cmp
std
fcmovnb
rol
aad
int3
loope
loope
shr
nop
xchg
out
repnz
fcom
int3
stc
test
in
mov
int
lret
iret
loop
xlat
xor
out
rcr
stc
jmp
jmp
cmc
xchg
loop
out
in
xchg
fcom
xor
fld
clc
jmp
cli
div
out
neg
stc
fucomip
mov
push
ror
cmc
in
out
fcmovnu
sbb
jns
add
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
arpl
shrb
add
add
fsubp
stc
sti
clc
xlat
shr
xchg
out
in
mov
and
shr
idivl
ljmp
xchg
cld
int3
in
fxam
in
fisttps
loope
iret
cmp
shr
shl
iret
ret
aas
xchg
leave
fsubp
out
out
fcmovnbe
out
mov
loopne
jecxz
stc
cmp
cmp
rolb
mov
mov
hlt
xchg
iret
aam
into
ror
cmc
iret
enter
out
idivb
xchg
xlat
sti
ret
div
jmp
call
aam
das
hlt
ret
ror
sarl
fsubrp
cmp
hlt
cli
fdivp
hlt
loope
out
or
and
out
repnz
lock
loop
in
iret
loop
jecxz
mov
leave
jmp
shr
test
fldl
out
ss
fxtract
inc
lret
in
clc
sti
cmp
out
loop
out
test
xchg
sub
cmc
sub
int
fxtract
cmp
rol
out
loope
adc
leave
ret
ljmp
popl
xor
xor
into
icebp
into
dec
stc
test
xchg
aad
cld
loopne
xchg
xchg
not
fdivrs
cmp
cmp
repnz
aad
loopne
cmp
xchg
jmp
icebp
rol
cli
out
sar
std
div
testb
shl
in
mov
jmp
lret
rclb
leave
into
ss
cli
enter
fdivrp
decb
std
call
fucomip
aad
in
cmc
xlat
out
cld
fcmovne
faddp
stc
cld
fcomip
mov
std
call
xor
int
xor
in
cmp
cli
fxch
jecxz
mov
nop
out
in
ret
xor
in
ljmp
into
sti
fadd
stc
hlt
enter
mov
out
call
hlt
lret
aaa
das
xlat
cmc
in
into
int
sbb
mov
lret
loopne
iret
mov
out
xor
in
hlt
jmp
cli
test
test
aas
decb
nop
stc
xchg
call
mov
xchg
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
enter
int
sbb
fprem
ffreep
mov
fldl
mov
in
xor
vpsubw
aaa
or
clc
aas
fiadds
sub
call
idiv
out
xor
rcr
push
jecxz,pt
and
sbb
orb
rclb
jecxz
ffree
out
xor
std
out
jmp
lock
fmulp
clc
cmc
aaa
xlat
ljmp
cmp
sar
enter
cld
ljmp
out
lock
fxch
leave
out
shll
ret
hlt
fdiv
cmp
inc
sti
test
iret
adc
lock
in
hlt
aam
hlt
cmc
fld
int
out
mov
fcomip
std
in
test
shl
in
or
ss
iret
cmp
aad
idivl
aam
std
out
lret
in
repz
xchg
lret
xor
repnz
in
std
cmc
fcmovbe
std
cmp
ret
and
mov
mov
imul
cli
xor
cmp
ds
test
aad
mov
lret
out
test
out
out
in
das
in
xor
cmp
cli
ljmp
faddl
int
std
hlt
out
int3
out
jmp
ljmp
cmp
loopne
lock
cld
icebp
mov
std
sbb
fcomip
ss
xor
call
sarl
aas
loope
imul
sti
movb
fdiv
ljmp
cmp
std
in
cmc
fcomi
cmp
xchg
int
ret
leave
in
fsubr
call
clc
xor
test
stc
lret
leave
into
repnz
in
and
loope,pn
stc
repz
cmp
cmp
repnz
aam
fmul
test
loop
in
ljmp
repnz
aam
in
aas
leave
cmp
rcr
clc
std
cli
in
cld
lret
int
loop
nop
sub
sub
lret
aaa
fidivl
rcr
aas
cmc
sar
cld
enter
std
sti
out
cld
mov
lret
movzbl
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
int
sbb
jle
add
loopne
int3
ljmp
mul
jmp
aad
fcomp
shl
fmul
mov
xchg
test
lret
loopne
test
ret
xor
cli
rcr
icebp
shl
in
fyl2xp1
fcomi
ljmp
out
call
xchg
enter
cmc
iret
clc
loop,pt
cli
fcomi
xlat
cmp
out
decl
rclb
lret
out
cmp
fcom
icebp
xlat
enter
addb
cmp
enter
aam
ss
cmc
xlat
repnz
mov
rcr
lock
ss
stc
xor
ffree
cmc
into
aad
adc
xchg
loope
in
clc
dec
mov
out
in
in
vpsubsw
in
ror
leave
loopne
out
int3
cld
test
cmp
ret
xchg
fisttpl
lret
shl
enter
call
incl
rol
aad
enter
in
shl
test
ljmp
sar
aas
into
shl
aad
std
fiaddl
mov
fucomp
mov
out
in
out
fxch
xor
aad
xlat
ljmp
into
test
ret
enter
cmp
int3
out
cmc
jecxz
repz
int
into
faddl
cmp
int3
or
fucomp
icebp
or
shl
sub
shl
and
repnz
sar
in
cld
into
clc
xchg
cld
loop
ljmp
call
fnstenv
lock
xchg
fdivrp
loope
xor
int
in
cmp
cli
stc
mov
mov
stc
out
mov
addb
in
fsubp
hlt
sarb
loop
xchg
ret
out
sti
sbb
fldl
hlt
xor
int3
cmc
iret
cli
lret
std
cli
icebp
clc
sbb
cld
mov
xlat
das
shll
call
rcl
fstpt
fadd
aam
loope
mov
mov
incl
ror
sti
enter
fdiv
rcr
cld
hlt
lock
test
cld
add
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
sub
sub
jle
add
nop
fmul
loope
ljmp
cmc
leave
jmp
jecxz
filds
cmc
mov
into
xchg
shl
ret
out
idiv
enter
lret
aam
fcmovb
test
aad
sti
shl
clc
leave
mov
popl
leave
in
in
test
out
mul
out
rol
aad
cli
lret
ret
in
jecxz
icebp
loop
into
aas
lret
lret
not
in
aad
aam
cmp
ljmp
xchg
fcmovne
sub
ror
sub
into
shl
idiv
xor
shl
mov
fadd
sti
or
mov
out
xchg
stc
loop
lock
shr
cli
fnstsw
repz
jecxz
testl
in
repnz
lret
in
jmp
fsubr
leave
aam
std
fxch
shr
adc
mov
xchg
in
jmp
cli
cmc
ss
aad
xor
shl
std
rcr
in
fldlg2
decl
repnz
rcl
jmp
cmp
sti
rcr
fldl
addl
jmp
hlt
int
aam
ror
in
imul
cld
shr
ret
rcr
fdiv
jmp
xor
nop
jmp
shl
enter
xor
fst
fsub
fcomp
mov
in
faddl
loopne
int3
idivb
out
sar
rcl
cmp
std
mov
cli
or
fucomi
shl
shll
xor
idivb
cmc
cmp
fdivrs
shl
in
iret
out
enter
mov
out
loopne
sar
jmp
ljmp
ror
std
rcl
out
ret
loope
call
fucomp
iret
mov
fdivr
out
xor
xor
aad
jecxz
xchg
int3
test
test
mov
enter
out
sarb
stc
aam
in
test
aam
out
in
add
mov
lock
rol
out
idivl
cmc
cmp
iret
fcmovnbe
test
cmc
test
mul
loopne
cld
rcl
in
in
out
repz
jmp
std
hlt
les
inc
in
mov
mov
xor
add
jmp
rcl
int
ffree
fstpl
push
add
add
mul
jmp
int
rcr
in
xor
xor
out
or
sar
repz
call
xchg
leave
mov
fsub
shl
call
fdiv
ss
fdivrs
out
loopne
iret
repz
decb
clc
xchg
rolb
in
lret
call
in
iret
icebp
shl
lock
fmull
std
mov
lock
shl
int
aad
cli
int3
fdivp
in
jecxz
test
cmp
testb
hlt
lret
jmp
neg
jmp
aam
int
hlt
ret
out
enter
fmull
out
and
int
fucomp
in
sti
cmp
fcmovbe
add
flds
loop
test
clc
clc
leave
cmp
int
xlat
xor
in
rcr
fsub
push
cmp
decb
jmp
cmc
shr
fprem1
fdivr
ror
fisttpll
loop
mov
addl
int
pushl
into
divl
lock
cmp
sar
jmp
lret
mov
xchg
nop
hlt
in
int
stc
mov
jmp
in
stc
ror
fucomi
mov
or
mov
cmc
out
aad
lret
iret
repnz
sti
sub
sti
xchg
in
iret
aad
cmc
enter
testl
aas
loop
orb
xchg
leave
ljmp
fsubrl
aam
test
fcmovbe
hlt
clc
in
loopne
rcr
lret
loop
std
clc
iret
xchg
hlt
fcomip
repnz
stc
lret
repnz
icebp
sub
mov
out
out
ffreep
aam
cmc
das
clc
xor
out
xor
icebp
rol
cmp
in
in
loope
in
xchg
enter
leave
xchg
sub
repnz
cmp
not
aas
ror
xchg
aam
hlt
mov
out
mov
out
in
repnz
xor
lock
xor
cmp
xlat
in
cld
aad
test
cmc
in
addb
rolb
loope
ljmp
icebp
cmp
cmp
enter
adc
in
mov
jmp
int3
aas
rol
fst
fadd
ljmp
orl
ret
loop
jmp
cld
repnz
in
in
lock
jmp
into
fdiv
ds
shl
loop
movl
test
aaa
clc
fcomi
int
fsub
icebp
fsub
fucomip
sub
in
clc
clc
lret
loopne
in
test
repnz
lret
in
sar
xor
and
cmp
loope
ljmp
rcr
int3
xor
loop
cmp
hlt
fsubp
loope
fadd
fptan
rorb
iret
nop
fsubrp
loope
fsubrp
shr
xor
not
in
loopne
faddp
ret
mul
loopne
les
xchg
jecxz
xlat
xor
jmp
fmul
call
repnz
fdiv
ror
cmc
fiadds
jecxz
repnz
xchg
xchg
int
fldlg2
cmp
aaa
iret
cmp
roll
cmc
not
xchg
into
test
shr
in
int3
jmp
jmp
cmp
lock
out
rcr
xchg
jmp
loop
sbb
filds
sar
std
aam
cmp
cmp
xlat
lock
jmp
enter
stc
iret
xchg
loop
xchg
xor
iret
jmp
hlt
fmul
xor
shl
ffreep
ffree
mov
out
mov
rcl
in
fdivr
test
clc
fdivr
mul
orb
lret
shr
fmul
ljmp
aam
rcl
stc
repz
loopne
leave
jecxz
xlat
out
std
fsubr
iret
icebp
xchg
fsubrs
repz
out
cmp
loope
loope
incl
xchg
test
xchg
std
out
in
nop
into
fcomp
ret
int3
shl
icebp
xor
roll
fld
mov
repnz
int3
shlb
sub
loop
cmp
ljmp
loope
adc
jmp
orb
loop
shl
enter
rolb
ds
ror
incb
mov
hlt
out
shl
ljmp
fcmovu
fadd
filds
out
addl
cmp
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
sub
xchg
sti
das
add
add
ror
cmp
in
jmp
out
decb
xor
enter
cmp
std
int
fidivrs
xbegin
out
mov
aaa
sub
shl
cmp
xorl
fcmovnu
jmp
lret
enter
lock
cmc
lret
das
cmp
in
in
sti
in
cmp
repz
loope
incl
xchg
int3
mov
xchg
leave
lret
cli
jmp
shl
cmc
cmp
idivl
sti
loop
test
int3
int3
out
test
in
loopne
call
ret
aaa
into
enter
fsubr
cli
aas
sti
enter
std
out
test
lret
loop
int3
stc
shll
aad
leave
fnstsw
cmp
ret
test
fdivrp
std
cld
ffree
out
or
subb
fsub
out
fsub
cli
fdivrs
loop
out
testb
out
sbb
rorl
sarl
aam
aaa
sti
cmp
shl
fcmovb
testl
nop
repnz
cli
xor
or
xlat
movb
shl
int3
in
not
jmp
xlat
fcomp
loope
clc
ror
fiadds
out
adcb
xor
out
ret
out
fcmovbe
int
jmp
idiv
repz
clc
cld
ret
in
int3
fildl
xor
in
in
ror
clc
ljmp
sarb
mov
out
cli
fimull
cs
jecxz
fucomp
sar
cmc
shr
in
fcom
shr
fmull
repz
aam
shl
hlt
lock
in
fsubp
neg
shl
loopne
in
imul
mov
sti
fisttps
out
fdivs
iret
shl
aam
int3
fnstsw
addl
in
fdivrp
clc
mov
in
rolb
iret
ffree
cli
cmp
rcr
test
rcl
rorl
ljmp
mov
fdivr
in
cmp
repz
faddp
hlt
ds
fsubrp
out
int3
jecxz
adcb
mov
jmp
aas
xlat
xlat
rcl
ror
fld
cs
and
jle
xorb
jle
add
int3
out
cmp
cmp
int3
in
ror
in
xlat
in
jmp
xchg
repz
in
cmp
clc
jmp
cmc
lock
hlt
sti
shr
fadd
int
in
mov
in
nop
call
hlt
xor
enter
std
cmp
loope
xlat
ret
out
in
loop
jecxz
rcll
in
lock
cld
cmp
icebp
rcr
aas
mul
testl
out
repnz
xor
call
in
aas
rcr
jecxz
xlat
cmc
cli
xchg
jmp
in
test
mov
not
ljmp
inc
in
aad
hlt
stc
cld
imul
cmpb
std
into
mov
jmp
cs
into
fldcw
lret
aad
addb
mov
rcl
xchg
xor
xlat
jmp
in
cmp
testl
xchg
int
rolb
aaa
leave
xlat
in
aaa
xlat
rcr
cmpb
jmp
ljmp
xchg
mov
xor
ljmp
push
ret
rol
cmp
fcmovnb
ffreep
xchg
mov
xchg
jmp
mov
add
xor
int
fdivp
int
shl
shl
rcr
cld
and
jmp
enter
hlt
in
lret
ss
fdivr
ds
out
icebp
test
neg
xchg
rorl
lret
not
in
cmp
cmp
stc
rcl
repz
cmc
out
test
out
mov
in
frstpm(287
in
xor
out
cmc
aaa
in
int3
fucomip
rcr
cmp
cli
jecxz
into
nop
in
iret
xchg
into
addl
xor
neg
filds
mov
lret
enter
into
icebp
mov
mov
int
fucomi
lret
cmp
jmp
cmp
cmp
jmp
cli
icebp
out
ljmp
cmc
idiv
in
iret
iret
int
int
fdivr
cli
in
call
repnz
rcl
test
out
out
fsubr
sub
lock
fadd
fidivrs
decl
jmp
into
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
inc
mov
add
ljmp
idivl
repz
stc
xlat
aad
fmulp
fnstcw
flds
ljmp
sub
fstpt
shl
cmp
ds
clc
loop
idiv
clc
int
repnz
test
shr
clc
out
cld
ss
add
fidivrl
in
sar
loop
mov
loop
xchg
fucomip
rcr
rcr
shr
icebp
loop
clc
sbb
out
mov
loop
out
in
orl
shl
xlat
lret
aam
fidivrl
mov
loopne
mov
jecxz
in
xor
lock
aad
clc
fiaddl
jmp
loope
in
iret
lret
into
into
fdivr
loopne
lret
hlt
aam
fsubp
xchg
orl
xchg
xor
shr
cmp
jmp
in
test
into
idiv
fucomi
and
out
in
mov
out
aam
das
call
out
call
stc
aam
fiadds
leave
test
lock
out
test
lret
cmp
ret
ret
shl
ret
jecxz
test
fsubp
xchg
loop
enter
cmp
cli
cmp
repnz
cmp
ds
jmp
rorb
iret
in
aam
repz
repnz
out
fucom
rol
aam
mov
icebp
icebp
loope
mov
iret
shll
sti
fnstsw
aad
lock
in
repnz
leave
mov
lret
fsubr
out
xchg
xchg
shll
out
in
xor
repnz
hlt
rcr
mov
xchg
addl
cmp
cmc
cld
sar
ds
jmp
repz
in
xchg
dec
loope
rcl
aam
imull
cmp
ljmp
cld
decl
out
out
cmp
addl
jmp
leave
shr
aad
lock
ret
in
jecxz
std
or
loopne
xchg
repnz
xor
lret
cmp
test
cmp
xchg
dec
rclb
jne
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
jnp
push
je
add
add
int
sbb
int
sbb
sti
cmp
cli
std
repz
icebp
into
repnz
cmp
and
in
sti
jmp
fst
in
int
into
out
ss
cmp
cmp
in
in
cmc
int
neg
aas
mov
in
test
cli
in
lock
jmp
jmp
leave
leave
cld
cmc
hlt
iret
sti
repnz
fcmovnu
xchg
cld
ret
lea
hlt
loop
jecxz
out
clc
cmp
xor
clc
aas
iret
aam
sar
ffree
test
xchg
cmp
sub
aam
hlt
aad
call
lret
shr
and
in
adc
lret
fcmovnb
jmp
lret
mov
sub
icebp
clc
out
lret
fdivrl
out
enter
in
fldlg2
into
loopne
loope
ljmp
jmp
cmp
fcomip
test
fsub
aam
jmp
enter
mov
shl
cmp
in
cmp
fxch
in
sti
call
jecxz
les
test
test
repnz
adc
sti
aas
repnz
int3
add
mov
ljmp
out
iret
shr
out
fdiv
sti
shlb
cld
aam
aas
rol
fucomip
fsub
fisttpll
int
clc
cmp
lret
sti
ljmp
cmc
test
ret
cmc
fmul
fsubrp
mov
loopne
in
enter
aas
lock
test
ret
faddp
cmp
call
call
int
clc
stc
lret
into
in
call
in
or
out
out
fmulp
mov
xor
call
call
jmp
loope
aas
fcmovne
out
lret
into
mov
loope
or
xlat
fstpt
iret
cmp
cmp
jecxz
cmp
lret
xchg
xchg
xchg
call
leave
int3
repz
shl
int3
fcomp
cld
addl
dec
loopne
fcomip
ret
jmp
ss
lock
cmp
fndisi(8087
ret
loope
roll
in
ror
xor
out
idivl
cmp
clc
mov
jmp
vshufpd
ror
adc
push
sbb
xor
cmp
jle
add
clc
stc
out
cld
sub
xchg
xchg
lret
call
enter
adc
loop
test
lret
call
icebp
shl
ss
ds
loop
adc
and
in
fmul
out
out
aad
ljmp
fincstp
in
sub
test
cmp
icebp
hlt
addb
xor
cmp
iret
xlat
aad
rolb
stc
fadds
lock
pushl
cmp
sub
xor
cmp
in
aaa
fadd
jmp
aas
xchg
int3
incl
fmul
lret
int3
div
repnz
std
lret
and
into
adc
sti
fsubp
cld
out
mov
movl
ljmp
aad
cli
loop
cli
mov
mov
faddl
shr
jmp
iret
int3
cld
fst
aas
repnz
xor
loop
cmp
ljmp
sar
cli
in
mov
xor
cld
fidivrs
sarb
out
fcmovnbe
mov
shr
xchg
loope
hlt
lock
out
clc
clc
int
cmp
cmc
sar
ret
clc
out
in
mov
in
ljmp
ss
cmp
aad
ds
shl
fld
stc
stc
fimull
bnd
out
enter
icebp
fsubrl
ss
into
cmp
xor
lock
cmc
sbb
in
into
test
ror
aaa
xor
fcmovnb
rcl
hlt
sti
loope
sar
test
std
call
loop
enter
cmp
iret
std
shl
out
fcmovbe
orl
mov
cli
out
fiadds
out
rcl
in
cmp
cmpb
int
sar
mov
std
fcmovu
enter
rcr
xchg
in
aaa
lret
jmp
loope
aaa
out
sti
and
vpor
mov
imul
cmc
out
shlb
cli
xor
loopne
and
jecxz
incl
hlt
loop
hlt
out
fprem1
lret
repnz
xor
jmp
int3
aas
ret
sbb
roll
cltd
mov
cmp
jle
add
fucomi
std
loop
fdivr
add
xchg
cmc
out
in
out
lock
jmp
ljmp
shr
cmc
out
ffreep
cli
sti
out
loope
enter
leave
repz
sbb
fdivrp
loope
out
incb
xchg
ljmp
int
int3
sar
sub
jecxz
iret
out
sbb
lea
call
lock
div
test
out
test
stc
and
roll
into
clc
xor
das
fmulp
leave
leave
lock
sar
fcmovnbe
add
loop
sti
fucomi
fsubr
aam
xchg
cmc
iret
shl
ror
repz
lock
fcmovnu
and
jecxz
lea
xor
test
icebp
xor
jecxz
idivb
cmc
stc
in
mov
hlt
out
repnz
shll
xor
sti
ljmp
cmp
ds
adc
out
out
enter
adc
xor
ror
repz
jmp
in
rcr
in
fucomip
fdivrp
jmp
xor
mov
mov
out
jmp
in
in
idivl
ljmp
repnz
enter
mov
das
sub
sti
xor
jmp
jmp
neg
repnz
leave
aad
loopne
out
fmul
into
lret
int
shr
rcr
aad
xlat
fmul
xlat
shr
fsub
fdivr
loope
out
xchg
loope
lret
mov
aad
ret
int
xlat
aad
xlat
f2xm1
neg
iret
jmp
lret
lret
sti
xor
loopne
shlb
in
idivb
aad
into
xlat
cmp
clc
loope
fisttpl
in
test
out
not
leave
aam
fdivr
jmp
aam
neg
std
repnz
out
hlt
add
rcr
xchg
out
aam
into
cmp
std
ljmp
xchg
mov
cli
fcmovnb
out
loop
loopne
nop
xchg
in
leave
repnz
stc
enter
in
cmp
fistpll
cld
in
sbb
mov
fisttpl
and
ret
cmp
jmp
rol
rcl
rol
aad
sahf
xor
dec
addl
cmp
jle
add
xlat
cli
fcmovbe
stc
in
addl
ret
fcomp
lea
lock
shl
enter
lock
fsubp
rol
rcl
and
lret
xlat
std
enter
xchg
mov
lock
cmp
ror
shl
neg
shl
shl
stc
hlt
clc
mov
into
nop
incl
out
call
lret
cmp
rolb
mov
enter
lret
out
repnz
cmc
cmp
xor
int
xchg
hlt
cmc
loope
loop
rorl
in
shl
xor
fsubrp
out
in
cmc
loope
in
sub
into
xchg
test
leave
xor
icebp
fmul
cld
cmc
xor
test
rcl
mov
int3
lock
int3
out
loop
xchg
repnz
in
call
icebp
fcmovne
shl
repz
cld
mov
int3
int3
shr
out
ret
ret
shl
aaa
fdiv
fcmovne
idivl
xchg
cmp
cld
iret
iret
jmp
repnz
int3
lock
jmp
leave
sar
ljmp
shl
mov
test
jmp
mov
lret
jmp
ljmp
aad
in
out
cld
aas
ret
call
in
lret
xchg
loop
xchg
leave
rcr
call
rcr
clc
test
fsubp
fcomi
mov
in
int3
cld
ror
call
mov
int3
xor
leave
fld
stc
dec
shl
incb
fsubp
incl
out
xchg
shr
loope
leave
cmp
cmc
sti
xlat
cmp
fnstsw
ds
rcr
in
mov
ficoml
divb
shl
out
cmp
rcl
addb
aas
xchg
test
sti
xchg
in
cmc
shr
fnstenv
rol
out
repz
nop
xchg
shl
repz
xor
std
ljmp
fyl2xp1
lock
out
out
fsub
in
fst
in
xlat
aaa
rcl
into
call
addl
clc
cld
ret
fcomp
test
fcmovu
icebp
rorb
test
add
push
add
add
ret
mov
mov
bound
pop
pop
add
add
aad
call
rcr
sti
hlt
iret
rcr
fdivp
xlat
and
clc
loopne
test
int
nop
test
cmc
xor
leave
cmp
xorl
test
mov
fxch
lock
jmp
cmp
test
sti
sti
repnz
in
adc
lret
icebp
das
xor
cmp
in
int3
fstpt
fcmovnu
mov
sti
mov
shr
in
rcr
sti
clc
cmp
clc
std
cli
in
out
incb
repz
jmp
iret
lret
lret
lock
in
aad
incb
lea
out
loop
cmp
aaa
int
aaa
cmp
div
cli
rol
xchg
std
ret
xchg
cli
xchg
shl
xor
lret
fld
hlt
jmp
rcl
cmc
cmp
repz
out
xchg
cld
xchg
xchg
aad
clc
lret
cmp
xor
aas
fmul
shl
enter
jecxz
xchg
out
into
and
cmp
ljmp
icebp
hlt
repnz
ror
shl
ljmp
cmp
into
out
in
fldl
stc
xchg
mov
fucomi
xlat
jmp
out
fucomi
les
cmp
stc
cli
leave
rorl
lret
xor
ret
xor
cmp
sti
shr
in
clc
out
iret
ret
loop
lret
in
fistl
call
xor
lret
std
loope,pt
sub
sti
aam
ror
in
out
call
shr
das
not
xor
call
ret
aas
mov
shr
not
out
call
sub
fcmovb
in
iret
fcmove
sti
in
test
into
test
fildl
cld
iret
xchg
in
jmp
out
icebp
in
icebp
cmp
fcmovnu
fucomp
out
out
ret
jmp
call
int
lret
leave
jmp
sarl
fadd
lock
fcomi
ret
lret
enter
loopne
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
pop
mov
add
add
icebp
cmp
in
aam
loopne
loope
sar
out
fnstsw
test
roll
mov
ds
clc
call
test
iret
das
hlt
xlat
loop
xor
out
sti
cli
lret
hlt
sti
fidivrl
cmpb
sti
ffree
loopne
out
icebp
loope
call
fidivl
fucomi
iret
fdivrp
clc
addb
loop
addl
call
iret
ss
fdivr
cmc
std
in
fstp
cli
mov
jmp
loopne
fmulp
iret
fsubp
shlb
ljmp
lret
sar
cmp
jecxz
vcvtdq2pd
cld
enter
ret
and
jmp
fsubrs
iret
loop
shr
aad
stc
cmp
sbb
ret
fstp
ljmp
xor
out
cmp
not
cmp
test
ret
test
std
out
lds
lret
into
mul
shr
in
xor
fdiv
hlt
fucom
out
sti
xchg
ret
loopne
std
loope
test
in
sti
out
call
jmp
aam
cmp
jecxz
sbb
cli
fimuls
rorb
int3
sub
cmp
lock
leave
loop
cmp
cmp
fsubp
ffreep
lret
fmull
out
in
ljmp
fsubr
in
hlt
in
cli
in
fldl
fists
shlb
fdivr
aam
clc
sar
loopne
cld
cli
jmp
decb
mov
xor
int3
cld
fcomi
lret
cmp
rcl
fdivp
loope
fdivrp
fiaddl
xchg
into
ror
xor
in
in
cli
idivb
cmp
xor
xchg
fldl
lret
xchg
in
shl
in
mov
in
out
ret
cmc
clc
icebp
int
fadds
rcl
out
int
mov
mov
repnz
jecxz
icebp
icebp
cld
cld
clc
idivl
sti
rol
sti
stc
out
addb
call
sti
fstpt
cmp
cmpl
loopne
clc
movl
in
call
ljmp
rcl
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
leave
pusha
rol
add
add
incl
shr
std
nop
jmp
repnz
int3
int3
sarb
shl
leave
cli
xor
mov
fiadds
fcmovb
cmp
das
ss
int
into
stc
xlat
stc
faddp
stc
ret
f2xm1
or
xchg
test
out
cmp
out
in
int
rcr
cld
sbb
repz
neg
in
test
lea
fxch
leave
int
cld
icebp
dec
repnz
test
fcmovbe
ftst
loop
sub
out
mov
repz
shr
into
lock
idiv
cmp
xlat
in
fcmovu
xchg
cld
test
xchg
jmp
xchg
out
leave
iret
leave
shr
aaa
xor
and
bnd
in
cmp
xlat
mov
out
cmp
ljmp
xor
fdivrp
call
std
std
fdivr
ds
fisttps
in
xchg
xchg
in
xor
shr
aad
std
cmc
rol
loope
mov
test
sub
cmc
out
das
in
fsubr
clc
clc
enter
std
fadd
iret
dec
clc
hlt
fstp
sti
rclb
ror
leave
fnstsw
cmp
test
test
sar
addb
lret
ficoms
stc
repnz
leave
out
sar
loop
lock
in
xlat
mov
div
fcmovbe
filds
in
divb
imul
loop
cmp
xor
call
ret
ljmp
filds
ror
clc
aad
in
aaa
xor
fldl
flds
out
mov
iret
shl
shl
into
rol
xlat
out
aaa
out
cmp
iret
out
aas
aam
shl
in
enter
sti
cld
loopne
shr
repz
repnz
repnz
ljmp
incl
fisttpl
out
in
neg
xor
fprem1
int
sar
cli
ds
cld
loop
movl
in
fcomip
xlat
cmp
repnz
cli
out
jmp
fcmove
in
iret
vcmpsd
std
decl
lret
in
out
xor
xor
aad
rcr
ljmp
add
add
int3
mov
std
int
pushf
mov
lds
jle
add
ret
repz
fisttpll
in
sti
out
out
rcl
cmp
fistpll
adc
ret
enter
in
jecxz
in
out
xchg
shl
shl
xor
clc
lock
cmp
ret
loop
cli
xchg
in
sti
int
out
loope
repnz
jecxz
xor
hlt
xlat
call
shr
into
mov
loopne
in
addl
leave
clc
xor
shr
rcr
ss
icebp
fdivrp
aas
leave
in
xchg
or
mov
leave
xor
cmp
cmp
cmp
int3
cmpl
clc
bnd
out
jmp
leave
jecxz
in
repnz
idiv
aaa
rcr
cmp
ss
in
ret
repz
rcl
test
fdivrs
cld
lret
sbb
mov
enter
out
std
leave
cli
leave
aaa
aaa
cld
lret
in
cmp
cli
in
loope
jecxz
sbb
cmp
in
fdivrl
int
rcl
cld
fidivrl
fisttpll
sbb
jmp
xor
test
repnz
loope,pt
ds
enter
out
clc
jmp
repz
in
iret
lret
vpmulhw
lock
call
icebp
filds
fcmovnb
xchg
and
lret
mov
xor
cmp
in
std
neg
ljmp
std
fdiv
mov
mov
flds
mov
leave
out
out
or
cmp
sar
jecxz
rol
fucomi
std
cli
iret
in
in
mov
bnd
sti
icebp
iret
cmp
aam
fsubrp
or
ds
std
fld
out
cli
in
adc
ftst
lock
cld
roll
imul
enter
enter
mov
int
roll
sti
xor
fnstenv
fcmovnu
in
rol
xlat
fprem
xlat
addl
lret
mov
add
enter
lock
cld
std
xor
into
xlat
cld
clc
aam
cld
enter
in
xchg
mov
shr
loope
cmp
enter
xor
idiv
rcr
filds
loop
xchg
in
aad
sub
xchg
dec
jmp
lret
int3
fcmovnu
mov
add
add
xor
loopne
iret
xlat
testl
in
mov
jmp
in
xor
call
ss
jmp
shl
neg
fcmovu
xchg
mov
test
in
fmull
cmc
iret
jecxz
repnz
int3
into
rcr
cmp
test
cmp
decl
loopne
or
mov
aaa
jmp
aaa
lret
clc
ljmp
out
fidivrl
hlt
fsubp
loopne
in
cli
xchg
leave
rcr
lock
int
xor
int3
ljmp
clc
clc
jecxz
sbb
repz
mov
fcmove
int3
call
xchg
jmp
jmp
div
sarb
hlt
cmp
out
test
int3
cld
out
fdivp
notb
fnstsw
out
lret
out
ret
in
jmp
out
or
std
xchg
ret
xlat
test
ds
loopne
in
idiv
not
into
test
int
loopne
mov
int
aaa
stc
fdivr
fiadds
fcomi
xchg
in
test
xchg
lret
aam
cmc
in
xor
ljmp
fcmovnu
mul
cmp
stc
in
int
call
call
fdivr
xor
hlt
addl
loope
lret
xchg
into
xchg
rclb
shlb
iret
cmp
aas
in
int3
test
cmp
out
rorb
repz
icebp
ret
hlt
aad
sar
cld
sbb
fdivp
out
lds
out
xchg
lea
ror
xlat
cli
fdivl
xor
rcl
rcr
shl
out
testb
cld
xchg
xchg
xor
loop
repz
cmp
cmp
aaa
ffreep
clc
icebp
sub
mov
mov
out
adc
jecxz
aaa
rcr
shr
call
xor
ds
stc
call
fucom
lock
in
fidivrl
div
xor
iret
cmp
cld
std
jecxz
stc
fiadds
enter
shl
into
xor
aad
xor
cmp
test
into
out
not
ljmp
jmp
addb
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
and
lret
cmp
jle
in
jecxz
cli
das
repz
shr
aas
fdivr
cld
testl
std
xchg
in
aam
loop
cmp
into
lret
sarl
out
rolb
mov
lret
fdivr
flds
cmc
int3
repz
jmp
int3
fcomi
jmp
cmp
enter
int
leave
ljmp
out
das
lret
ror
clc
cmp
test
addl
mov
in
ror
das
idiv
out
fidivrl
cmp
cmp
repnz
cmp
shl
aam
rol
xor
not
cmp
cmc
aas
int
loope
into
aas
shl
test
test
test
int
fdiv
aaa
hlt
fucomi
idivl
stc
std
sbb
test
loope
in
enter
std
adc
int3
fsubrs
rcr
ds
fdivrp
loopne
repz
clc
call
cld
test
loop
xor
clc
sar
fcmovne
cmp
fdivp
aad
movl
xchg
fldl
jmp
jmp
mul
fdiv
movb
mov
lock
icebp
idiv
hlt
cmp
aaa
xor
ss
aam
fadds
cld
out
out
std
and
xor
div
leave
shl
ds
loop
aam
fiaddl
fndisi(8087
xchg
sti
mov
lock
xchg
iret
xor
out
std
fnstcw
jmp
repnz
cmp
add
xor
out
out
lret
enter
jmp
leave
ljmp
aas
fmull
roll
loope
out
idivl
xlat
div
fmul
loope
shr
flds
std
cld
sti
lret
xlat
int
mov
out
rclb
ret
fcomp
shr
out
icebp
aam
icebp
cmp
ret
clc
out
add
mov
xor
cmc
in
enter
fucomi
repnz
jmp
orb
repz
mov
jmp
ljmp
fidivrl
fdivrl
lock
loop
fildl
add
add
add
aam
int
int
aam
xchg
inc
lret
xchg
cmp
add
add
in
ror
fldl
cld
ljmp
loopne
cmp
test
fcomip
faddp
mov
in
xchg
repnz
in
out
ror
call
repnz
ret
cmp
jecxz
ljmp
iret
xchg
xor
in
call
cmp
rcr
jecxz
out
cli
loopne
mov
xchg
test
not
ret
cmp
int3
iret
fdivp
ror
cli
ret
sbb
test
mov
loope
in
repz
fsubrp
fidivrl
ljmp
cld
xlat
loop
cld
into
lock
mov
out
int3
xor
fsub
ror
int3
int
cmp
ret
test
jecxz
lret
loope
shr
out
repnz
neg
fsubr
jmp
aas
std
test
out
clc
test
mov
sbb
test
hlt
cmc
fadd
jmp
fsubr
lock
in
std
ror
out
cld
stc
in
vpaddd
into
mov
ljmp
in
repnz
aas
xor
jecxz
fdivp
loop
mov
xchg
lret
lret
shl
fcmovu
fidivrl
jmp
xlat
std
xlat
out
jmp
xlat
into
rorl
jmp
lock
in
shl
fiadds
ljmp
cld
in
shrb
out
int3
jmp
iret
in
and
fmul
enter
jmp
loope
fucomip
loope
xor
xor
aam
stc
icebp
ret
out
loopne
fmuls
iret
mov
loope
fimuls
stc
xor
fcomip
cli
repz
iret
ss
repnz
xchg
jecxz
xchg
call
shl
sti
fst
rcl
xlat
cmp
loope
ljmp
xchg
xor
jecxz
out
int
sarl
xor
lock
cmp
rolb
cld
in
xor
jmp
repnz
in
in
sti
mov
mov
test
int
mov
ror
cmp
ss
fdiv
aad
fsubrp
cmp
fstp
aad
shll
mov
lea
jmp
rcr
int
stos
outsl
int3
nop
pop
mov
mov
into
add
add
mov
into
fmull
clc
ror
cld
stc
repnz
xlat
ror
lret
cmp
fcmovnbe
int3
in
fcmove
mov
rcl
loop
repz
mov
iret
fdivs
fucomp
ret
std
clc
addl
fsub
sti
test
into
xor
iret
cmp
adc
test
icebp
fsubr
ret
jmp
fimuls
test
adcl
cmp
cmp
fst
orl
test
loopne
xchg
lret
clc
shr
aad
fdivrs
fdiv
filds
int
in
ljmp
in
fxch
cli
idivb
cld
cld
and
cld
loope
mov
stc
cmp
int3
or
into
out
ror
imul
sti
xor
sti
aam
loope
aam
out
cld
fcoml
out
out
clc
ljmp
stc
out
in
fimull
lret
std
ret
int
jmp
shll
jmp
jmp
sarl
cmp
call
xchg
or
in
xor
ror
aam
leave
in
out
mul
cmp
shl
call
nop
and
in
out
cmp
jmp
stc
lret
shl
repnz
jecxz
hlt
jmp
jecxz
into
repnz
shl
repz
out
int
ror
in
fcomip
ror
shl
jmp
mov
test
xchg
hlt
stc
lret
int3
shr
cmp
repnz
fcmovnbe
test
sti
loope
std
std
loopne
xchg
fsub
sar
into
ss
leave
in
xor
jmp
cmc
test
sti
popl
call
fdivp
leave
cld
repnz
fdivrp
cmp
shl
fcmovne
loopne
sbb
xchg
jecxz
xor
aad
hlt
lret
ret
fcmovb
rol
test
out
mov
xchg
cmc
xchg
jecxz
iret
clc
cld
hlt
hlt
fucomp
shl
cli
aam
idiv
out
jmp
fsubrp
repz
ljmp
icebp
neg
shl
sarb
enter
add
ret
xlat
fmul
fmul
rcr
test
jns
cmpsl
lods
rolb
jle
add
sarl
jecxz
out
loop
in
mov
lock
xchg
cmc
in
lret
out
in
int3
call
cmp
fcomi
out
std
fstp
roll
mov
mov
xchg
in
in
ljmp
ljmp
shl
ror
in
into
sub
or
xlat
call
int3
aas
icebp
cli
cli
int3
clc
xor
mov
in
mov
mov
sar
rcll
clc
call
aam
cld
loop
int
cmp
aam
in
cli
popl
aam
fucomip
aaa
xor
aad
fcmovu
int
fstpt
aad
out
cld
cmp
jecxz
mov
call
ljmp
lret
shl
sar
filds
jecxz
mov
lock
jecxz
cmp
cmp
rolb
testl
xchg
in
iret
hlt
fcmovnbe
lret
cmp
iret
add
in
fcom
leave
xlat
dec
call
in
call
fsubr
in
std
cmp
lret
cmp
shl
adc
in
in
nop
loope
in
hlt
mov
xor
repz
iret
shr
leave
sti
into
aas
cmc
in
sarl
adc
enter
in
in
shl
rol
jecxz
out
xlat
shl
iret
int3
stc
int
xlat
addl
out
adc
int3
int
in
jecxz
aad
int3
lret
lock
iret
lock
cli
add
cmc
loope
testl
imul
into
xor
enter
cmp
loop
shl
repz
aas
mov
stc
loop
test
fptan
out
xor
iret
cmp
ret
in
in
rol
jecxz
lret
out
lock
lea
loope
xor
fldln2
xlat
or
sti
sar
loope
sti
mov
nop
mov
loope
jmp
sarb
ss
pushl
cld
dec
ret
lds
loop
cli
mov
fimuls
add
div
shl
aaa
int
ss
ret
repz
aad
jmp
clc
enter
shr
in
xor
fxtract
std
test
add
mov
jmp
rcl
leave
int3
leave
fldt
outsl
into
data16
jle
add
clc
cmp
aam
sarl
cmp
jecxz
inc
ret
int
sbb
jmp
in
call
fcmovnbe
incb
mov
xchg
fimuls
aad
mov
in
cmp
ss
rol
aas
fcmovnu
fcmovnb
in
ret
clc
int
mov
mov
icebp
icebp
aad
in
fmul
int
ret
cld
mul
mov
aas
loope
fucom
in
cld
jmp
ljmp
lock
cmp
cmp
hlt
test
hlt
fcmovnu
jecxz
enter
incl
nop
out
sub
xor
out
iret
call
fxtract
and
loop
cmc
in
test
fsub
mov
out
out
xchg
loop
repz
repnz
hlt
clc
cli
shlb
fst
rcl
in
loope
loopne
ljmp
mov
lock
fucomip
les
jecxz
orl
fscale
addl
shl
xlat
clc
in
rcr
lock
test
std
sti
xchg
test
iret
std
mov
lret
cmp
iret
int
repnz
aad
cld
xor
std
fdivrp
clc
mov
leave
mov
repnz
cld
rcl
int3
xor
xor
sub
fmul
lock
out
aam
cmc
xchg
stc
fsts
cmc
in
stc
cmc
jmp
fnstcw
fucomip
repnz
fsub
hlt
xor
xchg
fimull
mov
icebp
loope
fidivrl
in
ljmp
rcr
repz
out
loopne
loope
xchg
rorl
xor
rcr
xor
icebp
leave
shl
loop
ffreep
hlt
fcom
fcmovne
int3
movb
call
jmp
hlt
lock
shl
repnz
fdivrp
jecxz
xchg
mov
out
fiaddl
in
in
lret
div
repnz
xlat
ror
jmp
rcr
cmc
aam
cld
repnz
loope
jmp
jmp
testb
shr
icebp
fdivp
cli
idiv
rcr
faddp
fsubp
test
testl
fdivs
cmp
jmp
call
loop
shr
ljmp
orl
mov
mov
mov
jmp
lret
ror
fstp
ffree
pop
fiadds
push
and
add
add
ror
cmp
fcomi
aaa
lret
not
rorb
incl
xchg
out
rorb
int
iret
leave
fcmove
cmp
hlt
out
clc
into
incb
int
and
out
xchg
faddl
xor
lret
clc
in
xor
ss
clc
xrelease
adcb
rcr
out
aad
cmc
cmp
jecxz
ret
xchg
xchg
jmp
loope
sar
xchg
xchg
int3
xor
ds
xlat
aas
fxch
aaa
rolb
aad
sbb
test
test
clc
aam
test
repz
cld
into
faddl
call
rclb
call
out
aad
cmp
cmp
fcomp
roll
out
call
iret
test
div
xor
or
shl
rol
icebp
cld
loop
fucomi
in
std
in
xchg
xor
hlt
leave
aad
xlat
ds
out
cmpb
stc
filds
jmp
icebp
mov
xor
xor
cmp
leave
ds
fdivp
loop
out
in
in
test
ljmp
loop
aaa
fisubrl
loopne
jmp
aad
std
mov
test
mov
adc
in
out
int3
mov
shr
cmp
out
xor
out
loopne
loop
test
iret
mov
repz
cmp
fsubr
lock
fidivrl
std
std
cmp
addb
out
and
into
aam
das
stc
cld
int3
jmp
clc
shl
call
test
aad
lret
int3
lea
jmp
jmp
fcmovnbe
lret
ror
fsubp
test
cmp
out
jmp
jecxz
xor
loopne
int3
aas
fcomp
clc
fcmovb
cld
xchg
mov
test
sar
xor
into
out
fcomi
fcmovbe
in
fdivr
xchg
lea
xchg
in
lret
fyl2x
ljmp
hlt
xor
aad
cli
aad
call
in
mov
jmp
enter
int3
aam
pop
adc
pop
or
scas
fcmovbe
add
add
test
lds
xor
xlat
fcmovnb
cmc
fadd
test
ljmp
out
xchg
clc
repz
repnz
cmp
sar
test
ror
and
jmp
and
icebp
enter
into
sti
in
fdiv
fadds
stc
in
fdivr
sub
xchg
in
xchg
jecxz
ret
out
xlat
rcl
ljmp
mov
sti
fsubr
orb
cld
jecxz
imul
into
xor
repz
out
fnstsw
lock
jecxz
roll
xchg
repz
jmp
jmp
cmp
rcr
loope
xlat
cmp
mov
mov
xor
xor
cld
aas
shr
cmp
add
filds
fiaddl
decl
aam
stc
call
bnd
sarb
cld
mov
call
ror
rcr
clc
cmp
clc
neg
cmc
std
repz
xlat
hlt
in
ljmp
in
icebp
in
in
fcmovu
clc
rcr
fcom
out
std
fcmovu
cli
fcmovnu
aam
mov
in
cmc
out
leave
xlat
xor
enter
iret
icebp
mul
aas
hlt
test
sbb
fcmovnbe
incl
xor
aam
int3
lret
xlat
int3
test
cmc
hlt
mov
mov
loopne
fst
lret
fnstcw
iret
idivl
lret
sarb
aas
ds
cmp
ljmp
loop
call
repz
cmc
imul
sar
sti
int
lock
loopne
sti
cld
cld
int3
out
out
rclb
jmp
lret
shl
jecxz
cmp
jmp
mov
testl
div
lret
cli
fdivr
shl
addl
std
faddl
aam
lret
leave
ss
in
lret
ror
fcmovnbe
fcom
shl
decb
clc
clc
icebp
mov
int3
stc
out
cmp
not
fdiv
lock
neg
ret
rcr
test
xor
jmp
rol
enter
jp
fimuls
xchg
flds
jle
add
int3
loopne
jmp
and
cmc
rol
cmp
rolb
xchg
call
call
in
fdivs
clc
out
cmp
cmc
cmp
mul
loop
aad
aad
fucomip
mov
xchg
addl
int3
in
aaa
into
int3
aaa
jmp
aad
and
and
std
int
mov
in
rol
aaa
cmp
std
cli
aas
stc
cmp
jmp
aad
ret
xchg
mov
iret
loopne
out
aam
into
call
loopne,pt
icebp
repnz
out
loopne
fyl2xp1
faddl
xchg
rclb
div
les
aam
fucomi
std
pushl
cli
rcl
mov
sub
into
mul
out
in
in
lret
ljmp
decb
jmp
in
xchg
into
xchg
lret
aam
vpaddq
cs
jmp
ss
adc
neg
jmp
out
call
cmc
out
ss
aaa
idiv
fidivs
repnz
iret
cmp
les
in
mov
leave
out
in
or
enter
shl
rcl
jmp
into
cld
loope
ret
shl
fcmovnbe
in
sti
lock
shll
cmp
enter
hlt
in
ljmp
aas
loope
cmc
decb
rcll
xor
stc
idiv
cmp
sbb
test
ret
test
xchg
in
int3
rcll
call
clc
sti
cld
addl
test
mov
xlat
fcomi
in
in
test
leave
enter
aas
cmp
sarl
fmul
ret
sti
repz
mul
fldlg2
addl
in
xor
hlt
xor
clc
aad
ds
loopne
test
into
cli
out
decb
aam
leave
into
aam
int
std
repnz
clc
neg
loope
test
into
faddl
shl
in
icebp
repnz
rol
rcl
ret
mov
or
adc
jecxz
xor
in
shl
hlt
into
repz
out
xor
xlat
xor
mov
add
jmp
aas
push
mov
adc
push
dec
fildl
jle
add
sbb
out
ljmp
test
adcb
out
out
ffree
repnz
bnd
fildl
into
addl
aam
leave
fcmovne
fadd
out
loope
out
lret
mov
out
jmp
ret
cmc
jmp
cli
div
cmc
in
jmp
aaa
fadd
mov
sar
xlat
jecxz
cli
dec
jecxz
xor
ror
jmp
out
clc
idivl
out
loop
cmc
inc
mov
mov
xchg
int3
in
jecxz
cld
xor
leave
aas
std
into
int3
adc
loope
rol
fdivr
xlat
cli
ljmp
xor
xor
cmp
mul
fcmovnb
mov
loop
cli
mov
flds
enter
fdivr
call
rcr
rcr
addl
xchg
and
into
addb
enter
out
cmp
aad
ror
mov
jmp
in
mov
call
enter
lock
frstpm(287
fabs
fsubr
sti
mov
int3
in
std
test
mov
lock
leave
fxch
fyl2x
loopne
aad
hlt
loopne
loop
loopne
les
cli
vprotd
stc
rcr
in
rcr
fmulp
test
or
stc
mov
enter
mov
xchg
out
loop
jmp
in
fcos
cmp
ds
cli
fdivrs
not
ret
int3
mov
cli
iret
test
int3
stc
hlt
sub
lret
cmp
add
cli
sar
fcmovbe
xchg
out
test
notb
sti
out
frndint
repnz
in
ret
ljmp
icebp
jmp
ret
jmp
rcr
lock
aam
rol
loop
in
cmp
test
shl
mov
cs
hlt
fcmovne
lret
in
out
xchg
shl
mov
sti
stc
in
lock
shl
shr
cli
dec
repz
loopne
int
sar
rcr
fsubr
mov
cmp
sti
xor
icebp
divb
ret
aam
fnstenv
div
mov
jmp
enter
lret
jno
sbb
add
and
cmp
jle
aaa
rcr
iret
out
fnstcw
xchg
repnz
loop
out
clc
in
out
ss
aas
repz
test
icebp
ljmp
loopne
mov
mov
jmp
ljmp
shr
rol
shl
cli
in
in
mov
in
iret
rol
in
rcl
lock
ds
cmp
fadds
addl
in
test
iret
int
fxch
cmp
cmc
lret
int
int
icebp
loopne
jmp
xchg
out
fcmovne
nop
out
xchg
vmaskmovdqu
lret
idiv
lock
mov
lds
xchg
test
imul
jmp
cmp
ljmp
test
in
clc
flds
test
out
call
xor
icebp
cmp
cmp
xlat
rcr
cld
fldl
jmp
aas
out
addb
int
loop
jmp
cmp
loope
clc
int3
filds
vpavgw
iret
jecxz
in
lock
shl
out
sti
out
int
hlt
fcmovb
clc
fiaddl
test
leave
mov
out
lock
iret
lret
rcr
jmp
xor
out
repnz
xrelease
stc
test
xchg
test
ss
cmp
out
cmp
ljmp
fcmovnbe
clc
sti
call
lret
mov
stc
xor
ret
vshufps
out
xlat
cmp
ret
ret
cmp
jmp
in
and
ss
enter
fdivp
cld
jmp
icebp
aas
call
sti
shl
sti
in
icebp
sar
jecxz
xchg
lret
in
xor
int
cmp
rolb
jmp
lock
out
loopne
fucomp
clc
out
ret
xor
in
sarb
fiadds
enter
mov
test
ret
iret
shl
rcl
out
leave
cmp
int3
xor
fnsetpm(287
aad
out
nop
lock
repz
cmc
leave
aaa
hlt
in
aam
stc
clc
aam
hlt
into
cli
call
fiaddl
xchg
pause
in
xor
jmp
int
rol
fcmovu
fstps
outsl
inc
cli
add
ja
loopne
jle
add
jmp
shr
into
in
in
flds
hlt
loop
fisttps
shr
cmc
fmul
ret
mov
aad
fmulp
loopne
rcl
in
fld
mov
faddp
and
fcmovnu
sti
rcr
and
ret
out
hlt
int3
jmp
lock
aam
cmp
aas
loop
jmp
repnz
loop
test
fxch
in
sar
loop
in
clc
cmc
loopne
xchg
int3
addb
int3
int3
out
fnop
lock
xor
rcl
aad
sti
add
aas
aam
mov
sub
hlt
test
lret
int
out
filds
out
cmc
xchg
into
out
and
int
repnz
in
cld
test
div
in
sar
cli
mov
addl
repz
fsubrp
loopne
out
clc
lock
aas
out
icebp
loopne
cld
aad
out
mov
leave
faddl
shr
iret
cmp
fistpll
xchg
mov
fsqrt
sti
loope
in
div
fidivrl
repnz
xlat
int3
ljmp
fildl
in
in
mov
out
ss
not
enter
test
fcmovb
idiv
add
jmp
in
div
xor
cli
out
ds
in
stc
out
out
std
sti
add
or
mov
repz
repnz
hlt
out
in
int
loop
stc
aad
aas
ret
out
xbegin
jecxz
xchg
ret
xor
out
cmp
fdiv
jmp
fdivrl
fldl
stc
lret
out
loopne
mov
loop
fucomip
sar
xor
clc
clc
aas
sarl
rcl
test
std
out
enter
sti
ror
in
jmp
loope
not
cli
cs
fdivrl
call
out
stc
mov
lret
mov
mov
hlt
fists
icebp
ret
in
lret
filds
out
fcmovne
mov
in
sti
out
call
mov
lock
xor
inc
int3
into
int
in
in
stc
mov
leave
int3
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
lret
ret
rcl
fcmovbe
lret
shll
in
push
cld
data16
cld
loop
jle
add
testb
xor
xlat
lock
idiv
div
shl
fdivr
lret
lret
test
jecxz
in
iret
lock
lret
cld
sarl
into
clc
in
aas
fmulp
rol
repz
out
out
mov
into
in
repz
out
out
aaa
sarb
adc
ret
hlt
in
xchg
aad
mov
ret
lds
sarl
sarl
cmp
cmp
cmp
in
fdiv
cld
xchg
jmp
out
fimuls
int3
loopne
loop
xlat
in
rcl
lret
cli
xlat
repnz
aas
fdivrp
cmc
fmulp
out
cld
fucomip
rclb
stc
jmp
enter
into
cmc
cli
cmp
fxch
xchg
jmp
std
jmp
lea
decl
out
rcr
int
xor
loop
fnop
ret
jecxz
in
aam
in
mov
into
xchg
decl
leave
cmp
sti
aam
loopne
ror
xlat
sub
leave
stc
mov
and
loopne
fildl
shl
aad
ss
out
rcr
loope
clc
fidivrs
repz
jmp
dec
out
cmp
ret
cmc
jmp
cmp
in
fdivr
iret
icebp
and
mov
sti
xchg
xchg
jmp
out
enter
fsub
lret
in
sti
cmp
bnd
cmc
out
in
mov
int3
in
lret
nop
in
xchg
xor
icebp
repz
shl
loopne
cmp
ds
jmp
out
rcr
leave
in
mov
aam
lock
aaa
cmp
cli
repz
fdivr
clc
aas
out
fcmovnu
enter
sub
repz
ljmp
fadds
std
cmp
test
lret
sub
call
xor
out
call
sbb
call
add
in
int3
out
xchg
xchg
jecxz
xor
out
xlat
lret
xlat
enter
cli
test
addb
int3
fiadds
mov
xor
icebp
cmp
ds
lock
test
hlt
mov
mov
iret
ljmp
cmp
lock
loopne
loop
aam
adc
test
out
testl
mov
ret
fstp
fcoml
jns
jl
in
jle
add
in
sbb
xor
clc
ret
das
sti
cmp
cmp
fdiv
std
incb
clc
test
xchg
enter
jmp
ret
jecxz
out
ds
rolb
sti
stc
xlat
repz
adc
xchg
ss
cmp
out
hlt
ds
sar
loop
repz
fldl
ljmp
xor
rol
jmp
icebp
xlat
xchg
rol
out
imul
leave
fdivrp
in
xchg
ljmp
aam
loopne
ret
cmc
loop
cmc
hlt
mov
int
fstl
icebp
jmp
int
out
call
fcmovnbe
fucom
shl
fcmovne
cld
enter
in
lea
xor
cmc
shl
cmc
xor
imul
jecxz
out
add
leave
fdivp
test
rcl
repnz
sar
fcomi
out
jmp
jecxz
out
fcomi
xlat
mov
call
ss
ss
cmp
not
loopne
ss
hlt
cli
jecxz
ret
fsub
mov
iret
shr
hlt
xchg
aad
sub
in
cmp
push
fadd
cmp
rcr
xchg
fdivrp
loop
loope
loopne
xchg
test
loopne
cmp
into
aam
sti
imul
repz
into
mov
test
mov
out
ljmp
push
ret
ret
xor
jecxz
cmp
aaa
cmp
rolb
fcomi
leave
lret
ficoml
rcl
cs
sti
cmp
lock
loopne
int
fsub
rcl
loop
test
jmp
call
out
mul
in
int3
aaa
cmp
fdivrs
cmp
aam
fildl
out
mov
lock
imul
in
fdivrs
leave
xor
lock
fsubp
rolb
jmp
loope
mov
in
rcl
aam
xor
fidivrs
rol
loope
cmc
test
call
int
ss
cmp
shl
or
rcr
stc
out
clc
jmp
call
loope
in
cmp
jmp
fistpll
or
aam
xabort
xor
add
jmp
ret
enter
int3
or
test
jo
add
add
ret
out
xchg
lea
xchg
out
aam
iret
stc
fstp
stc
stc
out
rcl
std
jecxz
clc
clc
mov
aam
cmc
out
xlat
lret
icebp
fcomp
sar
cmp
cmp
in
lret
mov
out
leave
mov
lock
clc
xlat
aad
iret
rolb
testl
rolb
clc
shl
shr
cmp
out
in
cmp
icebp
icebp
rol
jecxz
std
lret
dec
in
test
lret
icebp
iret
enter
in
rolb
sti
std
bnd
call
call
shll
aad
cld
cmp
and
call
loop
nop
loope
leave
sti
xor
lret
cmp
iret
ds
neg
leave
fdivp
rcr
in
in
das
int3
repz
cld
xor
in
sar
ljmp
aam
out
and
out
fcmovne
and
rcl
xor
cmc
test
shl
rcr
loope
lret
int3
std
out
xchg
lock
divb
clc
fcmove
xor
out
shl
xlat
cli
int
ret
in
aam
fdivrl
test
movl
enter
cld
out
rcr
out
filds
stc
ds
out
test
fldl
out
cmc
clc
cmp
out
mul
loopne
fcmovnb
aas
fildl
loop
test
and
sti
in
xchg
lock
ror
xlat
repz
repnz
cmp
mov
ret
xlat
mov
call
shr
in
out
lock
in
loop
cmp
leave
std
in
lret
lret
sti
in
xchg
fdivp
xlat
jecxz
ss
ss
in
aam
sti
out
test
adc
enter
mov
shll
repz
repnz
repz
icebp
hlt
lret
int3
jmp
in
rcr
test
stc
stc
out
std
lret
cmp
in
not
fcmovnb
sti
out
out
jecxz
test
not
aad
in
sti
cmp
jecxz
scas
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
repz
jle
add
lock
cmpl
test
in
in
adcb
out
xor
leave
cld
aad
cmp
sarl
clc
enter
fcomp
std
mov
shl
fucom
in
in
lock
iret
cmp
cld
hlt
cmp
sbb
mul
xor
int3
mov
iret
out
clc
in
fcom
ss
call
shl
clc
fadd
xchg
in
mov
mov
call
lret
sti
repnz
cmp
ror
ret
xlat
out
lock
mov
mov
mov
int
in
mov
cmc
shl
ret
sar
sarb
ljmp
mov
mul
imul
icebp
leave
out
mov
icebp
clc
xor
cmp
out
fstp
cmp
add
cld
ffree
out
in
xlat
int
cld
mov
repnz
ficoms
in
aam
repnz
loope
cmc
int
shl
xlat
std
xchg
fisttps
vpaddw
fcmovu
ss
cmp
bnd
xlat
iret
out
stc
in
cmc
in
loope
out
xchg
fsubp
call
idiv
leave
ljmp
div
cmc
in
xlat
repz
cld
enter
lock
enter
into
ss
icebp
out
not
xor
in
clc
loope
lock
rorl
fidivl
cld
roll
mov
fcmovne
test
xor
cmp
sti
ds
loopne
repnz
ret
fsub
mov
out
leave
int
ror
shr
iret
rcl
lret
leave
cld
aam
xlat
stc
out
aam
test
hlt
rcr
fcomp
fcmovnu
loop
out
icebp
jmp
iret
loopne
cmp
stc
cmp
jmp
lret
cmc
cmp
in
loopne
loopne
dec
out
mov
mov
aaa
rcr
lret
int3
out
jmp
cmp
rolb
clc
out
decb
aad
mov
repnz
xor
jmp
test
lock
out
sbb
iret
loop
xbegin
int3
lret
clc
fcmovnu
fdivr
rol
icebp
addl
cld
mov
xor
shl
sarl
rcl
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
shl
icebp
push
out
int3
cld
fucomip
in
ror
in
enter
dec
xchg
lret
into
repz
shl
idiv
out
idiv
movl
out
adcb
xor
stc
ss
or
out
jmp
iret
iret
jecxz
shl
not
lret
jmp
faddl
aas
test
out
cld
xlat
in
clc
cld
nop
aam
repz
cmp
lret
repnz
cld
in
out
ffreep
call
loope
in
flds
int
out
jecxz
xor
loopne
cmp
lock
test
xchg
mov
in
lock
ror
xor
clc
lds
jmp
ljmp
aas
jmp
mov
icebp
xchg
repz
ss
cmp
sar
ds
fcmovu
ffreep
xchg
repz
xchg
lret
loopne
int
cmc
lret
ror
not
into
out
out
fdiv
cmp
iret
stc
fabs
rcr
iret
out
ffreep
mov
mov
int
in
aad
jmp
out
fadd
in
in
mul
add
test
cli
mov
lret
incb
mov
clc
shll
les
out
repz
ror
aaa
aas
std
out
in
cld
test
aam
aaa
loop
stc
fst
fcomip
stc
flds
xor
std
testb
shl
fucom
lret
lds
repz
xor
cli
fcmovbe
in
in
neg
enter
cld
mov
xchg
roll
cli
lret
cmp
stc
fdivrs
jmp
clc
test
cld
xlat
mov
xchg
nop
enter
xchg
in
stc
aad
in
ss
push
or
ror
xlat
in
loope
dec
xor
jmp
hlt
lock
out
int
sar
clc
mov
cmp
fldl
xchg
in
icebp
loop
xlat
repnz
ds
cmp
test
out
stc
fst
cli
mov
jmp
shl
xchg
xor
int
xor
hlt
in
clc
repz
xor
fcmovnu
xchg
idiv
call
in
ljmp
fldl2t
push
add
add
aad
iret
aad
aad
pop
aaa
jp
dec
add
jle
add
in
xor
lret
fcos
lock
sti
aas
not
mov
hlt
call
or
lret
fmul
sarb
rolb
aad
aas
test
call
in
shll
ljmp
int3
aam
ffreep
ds
icebp
incl
fcmovnu
out
nop
repnz
aam
in
jmp
fdiv
lret
int3
repz
out
loope
leave
ret
jmp
fsubp
in
cld
decl
xlat
int3
out
leave
cmp
ds
sti
ret
fdivrp
cmpb
mov
sti
leave
fdivr
iret
loope
notb
iret
aam
lock
out
aam
add
cli
neg
int3
fisttpll
int
mov
idivb
into
lret
xorb
lock
icebp
stc
sti
lea
call
in
xor
sub
xor
repnz
cli
leave
xchg
out
jecxz
loope
icebp
rol
les
out
fistpll
out
cld
sti
cmc
adc
jmp
xchg
fcomip
rolb
test
clc
enter
fdivp
and
shl
cld
xchg
vcvtpd2dq
out
std
mov
xor
cmp
xor
icebp
sti
out
jmp
in
jmp
faddp
out
jmp
out
enter
in
leave
sti
cmp
ds
cld
std
std
loopne
out
int3
int3
clc
cld
in
lds
shlb
repnz
shll
std
out
hlt
xchg
stc
fsin
test
mov
bnd
enter
clc
ret
fistpll
cld
cmp
test
mov
int3
sbb
loop
sar
cmp
cmp
enter
sti
iret
lds
mov
in
iret
mov
in
jecxz
xchg
repz
iret
lock
int3
sti
ret
sbb
ffree
jmp
leave
mov
lret
out
mov
ror
cld
xor
lock
cld
aad
jmp
int3
jmp
test
ss
cld
out
fsubr
loope
into
repz
sti
test
xlat
aas
loop
mov
mov
push
add
add
rcl
fcomp
aad
mov
cmc
inc
pop
out
add
add
out
repz
rcr
int3
aam
idivl
cmp
jecxz
hlt
jmp
fildl
call
cli
sub
lret
test
test
std
xor
loop
neg
cld
faddl
into
repz
out
jmp
fsubr
fmul
loop
test
hlt
mov
std
loope
and
shr
enter
out
shlb
aas
shr
cmp
call
mov
out
fdivr
repnz
rol
ss
cli
xlat
xor
loope
cmc
cli
fucomip
loopne
mov
addl
int3
enter
jecxz
stc
fptan
cld
in
fincstp
out
fisttpl
mov
xor
in
in
out
loope
hlt
out
flds
in
xchg
dec
flds
cmc
aaa
in
rcr
div
int
hlt
rolb
ffree
xchg
out
test
xchg
fucomip
in
clc
cmp
hlt
in
cmp
lock
xlat
shl
test
leave
test
mov
fucomp
out
out
xchg
cmc
xor
neg
cli
out
aas
out
loopne
in
fstp
rcl
xchg
mov
leave
mov
cmp
mov
lock
xor
cmp
fnstsw
cmp
fdivr
aas
clc
sarb
cmpb
lret
int
xchg
shl
addl
cli
xor
repnz
adc
mov
cmc
xchg
out
fmul
call
in
aam
int
in
enter
shr
aad
out
test
shl
lret
lret
xchg
fcos
leave
mov
test
icebp
les
aaa
neg
fcomp
stc
leave
cmp
cld
fiaddl
in
fucomp
mov
mov
xor
out
cmp
xor
rol
les
repz
rcl
mov
icebp
stc
lock
fdivrs
ror
fndisi(8087
addb
cld
orl
jecxz
in
in
hlt
call
fcmovbe
cli
mov
loopne
int3
ret
out
mov
imulb
shl
fsubrp
adc
cmp
fdiv
lds
roll
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
cmp
sarb
add
in
jecxz
sti
enter
xchg
roll
sar
shr
int3
out
ljmp
std
lret
ljmp
incb
lds
ror
aaa
rcl
cmp
addl
call
nop
mov
xchg
std
repz
jecxz
stc
icebp
leave
xor
aam
cmp
cld
aas
loope
out
rcr
orb
and
repnz
div
rol
out
out
enter
into
cmp
ds
movl
aam
out
in
aad
cmp
idivb
mul
rolb
and
into
mov
lret
loop
jmp
out
ror
ror
int
xor
loop
in
ret
enter
fcmovne
nop
fiadds
shll
ss
iret
iret
repz
out
fdivrl
cmp
clc
ret
lret
ljmp
out
shr
sub
fcmovne
aad
shl
icebp
in
ret
fprem
out
sbb
call
out
cmp
loop,pt
sarb
rcr
mov
cmp
iret
cld
loopne
into
aas
xor
lret
in
enter
sarl
sti
aas
test
test
movb
jmp
repz
xor
shll
ljmp
fdivrs
mov
rcl
ds
test
repz
in
iret
xor
loop
cmp
repz
faddl
orb
loope
xchg
aam
mul
xor
aaa
in
shl
repz
cmp
test
ret
shl
xchg
mov
xchg
xor
xlat
xlat
test
lock
xlat
dec
xlat
hlt
out
ret
in
testb
jmp
loope
hlt
out
lret
stc
cmc
icebp
fnstcw
sti
xor
in
int
rol
rol
in
int
int
stc
in
lea
aam
out
test
cmp
icebp
cli
stc
sti
fucomp
out
ret
std
aam
xchg
ljmp
dec
iret
lret
test
xor
ljmp
iret
int
loop
out
ret
aad
xor
std
stc
out
stc
push
xor
mov
dec
inc
add
dec
jmp
int
ret
lret
aad
int
jmp
sub
push
cmp
jle
inc
aas
enter
int3
jecxz
adcb
xor
fprem
leave
fstp
hlt
sub
icebp
fadd
cld
in
jecxz
in
fdivr
inc
mov
shr
in
std
sti
fidivrl
ds
adc
lock
hlt
aad
clc
aas
jmp
call
fdiv
ss
fcomp
out
into
cmc
ffree
aas
cmp
cmpl
ror
hlt
xchg
repnz
sub
jecxz
leave
cmp
dec
dec
push
xlat
fcomp
cld
fisttpll
lock
in
loop
int
test
ret
lock
int
push
lock
std
loopne
mov
cld
rcl
loopne
cmp
lret
in
ds
loop
loopne
xchg
inc
call
mov
loopne
shr
out
xor
enter
lret
cmp
aaa
cmp
fdivrp
stc
mov
in
leave
out
fsub
in
xchg
fildll
lock
cmc
clc
cmp
enter
int
cli
out
addl
fmuls
xchg
call
clc
cmp
out
leave
hlt
fmulp
sti
jecxz
sbb
movl
ljmp
stc
iret
out
iret
fldl
mov
xchg
test
aad
xor
fdivrl
repz
cmp
test
in
fcmove
cld
faddl
ss
leave
xor
ds
lret
cmp
cmp
aad
test
cmp
mov
rclb
in
fadd
lret
lret
aas
aad
sar
mov
out
out
in
sti
fdivrp
sar
rcl
loopne
shll
cmp
fnstcw
loope
loope
xlat
cli
ljmp
out
in
mov
aam
aaa
cmc
out
cs
cmp
rcr
fdivr
vpaddusb
enter
in
out
mov
cli
out
out
dec
xlat
sti
iret
repz
loopne
jmp
mov
fimull
test
fcom
lret
iret
fucomi
std
in
repz
iret
repz
fsubp
movl
out
xor
jmp
xor
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
