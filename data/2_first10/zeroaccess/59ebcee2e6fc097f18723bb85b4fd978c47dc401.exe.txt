push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
jge
stos
xchg
bound
fstpl
bound
sub
pop
add
pop
jne
add
jb
jno
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
pop
out
inc
and
leave
cmpsb
aam
mov
inc
mov
and
lds
sub
lret
xchg
pop
cmp
jno
pop
orl
mov
repz
mov
inc
mov
gs
jbe
mov
mov
sub
pushf
jns
pushf
jo
jns
cmp
insb
lahf
push
add
mov
push
jo
sar
pop
sub
xchg
ffree
mov
adc
fs
shrl
fcoml
mov
int3
jne
outsb
push
add
xchg
js
and
ret
iret
push
fisubrs
int3
pop
xor
pop
adcl
mov
iret
scas
push
push
cmpsl
pushf
mov
loop
aam
scas
xor
into
aad
imul
jne
dec
rcrl
dec
xchg
push
pop
adc
dec
gs
dec
int3
and
repnz
push
adc
lds
xchg
push
test
and
mov
add
mov
lret
les
push
push
mov
cmp
cmc
xor
ret
imul
fwait
ret
jmp
lcall
out
aam
mull
mov
decb
ja
push
sbb
mov
fcompl
inc
pop
cmp
pop
mov
and
dec
add
add
and
gs
stos
xor
mov
xchg
iret
lods
mov
sti
sbb
mov
bound
fcoms
cwtl
rolb
inc
pusha
jns
jmp
sub
aaa
mov
lahf
sub
lods
arpl
fimuls
sub
je
sub
lret
and
push
loop
ss
xor
cmp
mov
jp
cmp
mov
mov
push
loopne
lret
dec
ds
loope
ss
test
lret
outsl
push
lret
or
dec
movsb
in
or
dec
push
pop
rolb
daa
xchg
dec
shl
addr16
cmp
sbb
test
xor
xchg
mov
xchg
lods
stos
and
sbb
lcall
mov
pusha
outsb
cmc
fsts
out
add
cmpb
xor
xor
nop
add
out
rcrl
ljmp
repnz
jg
mov
ret
mov
mov
test
sub
hlt
sub
jnp
and
and
xchg
lcall
xchg
leave
rcll
int
push
fs
mov
fbstp
ljmp
inc
sbb
mov
mov
pop
lahf
inc
xor
mov
or
cld
pop
shlb
push
or
jae
data16
jecxz
jno
jnp
cmp
push
jno
test
mov
inc
lret
sahf
mov
cmc
out
pop
aam
in
rcll
enter
sub
sbb
push
cmpsl
aas
in
daa
push
xor
test
aam
xor
pop
jb
push
mov
jns
into
pop
fidivrl
test
lods
dec
push
call
out
jno
les
mov
xchg
cmc
add
cltd
xchg
xor
cmp
xchg
pushf
imul
pop
pop
mov
adcb
or
ljmp
repnz
insl
out
jl
sbb
push
lahf
addr16
push
xor
inc
jne
iret
insb
mov
inc
pop
or
out
les
shll
lret
int
mov
inc
push
rcll
sbb
mov
dec
fisttps
cmpsb
sti
xor
xor
pushf
dec
jae
pop
fimuls
out
pop
daa
pushf
xchg
jnp
and
jae
sub
mov
out
test
and
sub
ss
xchg
das
test
dec
out
dec
rcrl
pop
int3
mov
mov
sbb
xchg
incb
loope
xchg
push
or
je
sub
mov
mov
aaa
rol
adc
movsl
sub
and
add
jp
mov
and
jge,pt
fidivrl
leave
arpl
and
pop
push
jmp
loopne
stc
and
int
fistl
ret
loopne
fcmovb
in
hlt
mov
xchg
dec
sbb
xchg
jmp
test
mov
dec
xchg
inc
pop
bound
xchg
fisubrs
movsl
cli
push
outsb
jns
mov
inc
or
add
hlt
call
dec
rep
lods
aad
sbb
xchg
ds
in
je
push
or
mov
push
sub
in
bound
inc
sbb
mov
xchg
xor
insb
push
addb
or
jae
inc
test
nop
ja
cltd
roll
ffreep
mov
lock
xlat
sbb
cmc
leave
pop
jne
ret
mov
fucom
jb
je
push
mov
pop
jae
sarb
fistps
add
fbstp
outsb
addl
aam
mov
dec
pop
fcomip
cmp
jmp
lcall
jnp
or
sbb
in
fcoms
sbb
lcall
mov
popf
pop
fisubrl
cmp
fisttps
je
popf
sub
test
dec
add
push
imul
mov
jge
cwtl
dec
dec
sar
pusha
and
push
sbb
hlt
loop
into
xor
push
inc
mov
test
stos
push
bound
xchg
movsl
cmc
push
pop
neg
icebp
pop
cltd
mov
popf
pushf
pushf
push
inc
pop
push
clc
cmp
rol
movsl
fisttpl
cld
push
lahf
jno
mov
jecxz
mov
in
inc
nop
loope
and
outsl
xchg
rorb
loope
push
stos
add
push
inc
pop
jns
add
cwtl
mov
mov
mov
fdivrs
hlt
jnp
ret
into
imul
outsb
dec
sbb
leave
out
call
addr16
pop
mov
jg
sbb
aaa
jnp
out
or
xchg
xchg
ret
out
aam
adc
fs
mov
fucom
xor
mov
adc
mov
or
imul
stc
dec
inc
test
push
dec
scas
stos
pop
mov
or
lea
sub
mov
and
jnp
je
les
ficompl
fidivrl
or
rcll
gs
mov
or
xor
popf
xchg
pop
dec
cs
pop
push
test
jl
add
les
jb
adc
cmc
mov
fists
hlt
or
pop
jbe
pop
test
adc
cltd
ret
adc
adc
xchg
jecxz
inc
mov
cli
or
mov
dec
cld
mov
inc
jg
test
push
lea
xchg
xchg
repnz
data16
jmp
add
mov
inc
or
cmp
mov
xlat
loop
dec
inc
addr16
leave
idivb
mov
mov
daa
jno
lea
rcrl
cmc
rcr
ljmp
hlt
mov
sti
push
mov
pop
insb
sbb
cli
add
mov
jb
hlt
jns
mov
repnz
add
idiv
scas
pusha
inc
hlt
or
sbb
mov
push
ljmp
jle
hlt
rcr
cs
mov
inc
nop
mov
sahf
pop
pop
add
cmpsl
movsb
ss
jp
notb
shll
sysenter
fmul
mov
and
dec
cmp
or
inc
push
pop
xor
or
mov
rorb
xchg
subb
or
pop
fwait
cs
sti
sbb
loope
and
std
sbb
push
loope
pop
mov
inc
cmp
ffree
jo
fs
xchg
jge
lea
out
and
dec
call
or
notl
push
mov
fldl
jno
fistpl
fcoml
movb
out
sti
ds
and
cmp
shl
mov
cmpl
jne
add
ja
ds
push
flds
fsubs
std
in
dec
push
pop
mov
std
out
adc
cmc
inc
push
icebp
mov
push
cmp
cmpsb
and
pop
lods
push
cmp
test
fbld
dec
mov
cld
sbb
add
imul
mov
cmp
loopne
int
test
and
fimull
sub
push
stos
in
arpl
mov
pop
ss
aaa
scas
popa
pop
sbbb
sbb
bound
add
adc
stc
std
lcall
adc
xor
add
cmc
sub
mov
jno
arpl
sub
fdivrs
mov
ret
jecxz
push
inc
xlat
in
adc
fimull
ljmp
popf
arpl
int3
mov
ljmp
sahf
xor
adc
inc
int3
sbb
loope
insb
shlb
fcomps
and
cmp
pop
cmc
movsb
aaa
xlat
gs
cmp
and
push
pop
out
outsb
mov
mov
xlat
sbb
loopne
mov
sar
mov
cmpsb
pop
das
into
popa
decl
ja
mov
or
and
add
shll
sbb
push
sbb
outsb
loopne
dec
test
cmp
mov
shlb
mov
dec
dec
rolb
xchg
shrl
cmp
mov
imul
sti
adc
xor
in
jecxz
push
orl
jg
loopne
push
jecxz
cli
dec
xlat
nop
and
dec
scas
inc
shr
dec
sbb
dec
mov
stos
jnp
mov
xchg
cmp
add
hlt
daa
cmp
lods
cmpsb
xchg
and
aad
mov
iret
fcompl
jb
cmp
xor
call
fs
pushf
out
stc
fldcw
cmp
jns
arpl
xor
adc
or
addr16
inc
push
outsb
and
or
or
xchg
add
repnz
insl
lahf
lock
stc
dec
lods
push
neg
and
jmp
or
mov
das
scas
fwait
mov
mov
mov
sub
inc
ret
mov
andb
js
add
adc
add
std
mov
std
cld
mov
mov
lods
sbb
fnstenv
ret
flds
aad
pop
mov
imul
in
cmp
rcll
sbb
push
or
cmp
mov
dec
cmp
je
fcoml
xor
and
cmpsb
mov
and
pop
jns
xchg
scas
dec
mov
sti
fistpl
jb
stos
js
pop
cltd
in
test
std
insb
mov
mov
sbb
popa
pop
aad
jmp
out
add
shl
sbb
sub
cmp
sub
js
xchg
test
push
xlat
std
popl
sub
push
test
mov
add
and
rclb
pop
sbb
aad
mov
push
pop
sub
dec
test
call
rcll
subb
add
and
push
sbb
popf
pop
jp
sub
cmpsb
mov
pop
out
xor
mov
pusha
sub
jecxz,pn
push
sub
mov
pushf
sub
jae
jge
and
mov
or
jne
pop
mov
push
add
scas
jmp
cltd
xchg
fdivrl
adc
shrl
xor
lret
lods
sub
sub
fs
or
sti
out
pop
sub
icebp
insl
lahf
and
or
fidivl
stos
pop
andl
or
push
add
popf
push
push
push
xchg
add
xchg
add
insl
dec
ja
fiadds
and
add
inc
adc
pop
add
push
fcoms
clc
test
xor
fcmovne
dec
loope
mov
loope
ret
mov
fisubl
cmp
cmp
mov
xor
mov
sub
outsl
ret
jnp
ljmp
imul
add
jg
fcomps
add
mov
mov
jle
gs
test
or
fldenv
fisubrs
addb
add
mov
call
fwait
call
cld
push
xchg
pop
cmpb
mov
inc
sahf
xor
popa
jae
fs
jnp
push
inc
lods
inc
jp
inc
xchg
dec
push
adc
test
testb
fcoml
sarb
add
jne
add
mov
fidivl
les
in
jo
or
and
mov
pop
jl
sahf
jno
jne
xor
push
inc
mov
cld
stc
mov
mov
xlat
mov
or
mov
sbb
push
cld
adc
xchg
dec
or
mov
sub
or
aas
sahf
lret
push
sbb
adc
mov
movsb
jmp
scas
fcoml
mov
cwtl
les
sub
xor
outsb
js
cltd
inc
mov
inc
or
mov
sbb
inc
dec
pushf
aam
les
scas
dec
rcrb
adc
cli
add
loop
xor
jecxz
js
xchg
lock
sub
xchg
xor
aas
adc
and
loope
add
lret
int3
hlt
hlt
popa
in
mov
fisubrs
ret
aas
sub
stc
iret
xchg
xor
pop
adc
push
mov
into
in
mov
inc
ja
lea
shll
sbb
outsl
lods
cmp
nop
test
mov
loope
push
in
aad
or
xchg
mov
inc
fmuls
or
dec
xor
pop
mov
push
aad
mov
pushf
jo
mov
dec
push
sub
pop
jno
in
adc
rcrl
aam
push
icebp
push
stos
stc
cmc
test
xor
dec
mov
bound
test
mov
cmpl
pop
xchg
cmp
add
mov
pop
xor
shll
sarl
xchg
xchg
ret
outsl
enter
loop
aas
cmp
or
pop
push
call
push
cli
or
pop
test
jne
mov
bound
inc
cwtl
mov
adc
sub
inc
mov
or
push
movsl
cmp
dec
mov
movsl
mov
neg
fdivrl
mov
cmp
les
xor
sbb
pop
insl
fwait
inc
add
movsb
int
ret
adc
jns
mov
outsb
sub
or
inc
or
cld
jmp
call
xor
add
push
inc
decl
enter
cmp
scas
sub
xor
dec
mov
dec
mov
mov
cmp
rolb
inc
dec
enter
and
mov
scas
addr16
pop
bound
movhps
shr
mov
sahf
je
sub
xlat
leave
repz
push
and
popa
jbe
xchg
mov
mov
add
repnz
and
cmp
cmpsl
int3
out
cmpsl
sti
mov
cmp
mov
xor
adc
pop
test
xchg
bound
sub
es
enter
xor
dec
adc
cmpsl
xchg
insb
mov
lds
cmp
jge
inc
or
jmp
call
sbb
jmp
inc
or
push
xchg
jg
push
and
fsubl
pop
lahf
subl
inc
lds
dec
add
pusha
ds
jmp
or
rcl
sub
fbld
push
mov
inc
push
cmp
push
push
sarl
pop
inc
jmp
data16
push
stc
adc
inc
push
testb
sbb
imul
call
mov
add
and
sbbl
movsb
fisubrl
cmp
lock
and
jecxz
pop
pushf
scas
mov
mov
filds
add
das
sbb
andb
fidivs
sbb
push
stos
scas
dec
cwtl
mov
mov
inc
or
cli
cmpsl
in
jb
addr16
gs
pop
pop
jmp
fldenv
test
testb
mov
xlat
inc
in
mov
fsubr
sub
lea
fistpll
sbb
inc
arpl
fnstsw
pop
sub
mov
out
daa
cld
fcoms
inc
ds
or
mov
out
inc
sbb
mov
mov
or
fmuls
test
adc
cmp
xor
cmp
mov
sub
mov
es
enter
pop
out
mov
fisubrs
pop
pop
and
lods
pop
int
cmp
cmp
sbb
test
call
lret
insl
daa
push
mov
repnz
es
mov
jecxz
dec
jecxz
hlt
hlt
and
and
out
add
aad
stos
xor
xchg
sbb
xor
arpl
hlt
pop
sub
cmp
into
add
jmp
jno
cmp
popa
xchg
xchg
inc
fstpt
or
cld
mov
insl
jecxz
mov
daa
pop
sub
xchg
pop
add
xchg
scas
adc
ja
aam
sub
outsb
lret
test
test
cmp
aad
mov
adc
mov
fidivrl
movsl
lcall
ret
in
mov
xor
lahf
jp
cmp
js
push
shl
loop
bnd
push
inc
push
sbb
push
cmp
dec
fwait
test
aam
xlat
xor
loop
push
jnp
imul
call
xchg
or
cli
scas
sbb
out
cltd
or
je
mov
rorl
or
push
stos
mov
nop
inc
adc
dec
pop
bound
cmp
out
xchg
jmp
sub
adc
insb
imul
lods
jle
loope
inc
mov
xchg
out
jl
hlt
test
xchg
std
sti
mov
mov
scas
add
jmp
inc
sub
sti
mov
adc
mov
push
push
mov
jnp
mov
insb
icebp
lods
roll
rclb
and
cvtpi2ps
out
lds
imulb
cmpsl
or
inc
lret
pop
cmp
sbb
mov
sub
test
and
and
popf
sub
dec
mov
or
push
in
mov
mov
cmp
dec
dec
inc
adcb
and
mov
cli
das
test
inc
xchg
gs
xor
out
dec
cmp
repnz
cld
jne
cmp
mov
mov
mov
and
stos
sub
jbe
jno
loop
jns
clc
loopne
mov
mov
out
mov
scas
jp
inc
pop
jae
ja
or
pop
push
stc
cs
cmp
xor
psubusb
call
and
push
mov
out
xchg
jo
fldcw
add
aam
pusha
mov
outsb
lods
pop
mov
shl
add
pop
xchg
sbb
push
movb
lret
and
lods
ret
xchg
push
jecxz,pt
mov
scas
sarl
xor
jle
sub
js
jne
push
std
cmp
jmp
sahf
cmp
mov
cld
lret
mov
inc
nop
add
rolb
sub
jns
add
aas
lret
xchg
sbb
loop
sbb
dec
cwtl
sarb
inc
mov
lods
sbb
outsb
jge
cwtl
dec
jecxz
fldl2t
shll
lcall
and
sbb
cmpsb
data16
xchg
pop
lcall
lret
enter
cmpl
out
or
aas
and
xchg
or
jmp
cli
leave
lods
addl
pop
and
loope
sbb
in
sub
sub
fs
sub
ja
in
adc
ja
sub
sub
jge
jmp
mov
repz
mov
xor
insb
xor
outsl
gs
clc
cmp
rorb
es
movsb
mov
mov
jo
popf
lret
sbb
mov
out
and
push
fnstenv
inc
lret
mov
jp
lea
in
test
pushf
xor
cld
ds
clc
lods
inc
xchg
inc
sbb
mov
mov
mov
cltd
mov
inc
hlt
jnp
add
add
xor
cltd
ja
jbe
or
setno
es
mov
out
cmp
icebp
jmp
lods
mov
shlb
cld
mov
sbb
loope
pop
adc
pop
xchg
das
aad
andb
jmp
clc
xchg
xor
lret
push
ret
adc
jecxz
bound
or
add
mov
mov
lret
push
dec
add
in
dec
xor
xchg
sahf
dec
stos
rcrb
jg
enter
cmp
mov
test
les
jns
jp
lret
sbb
sbb
pop
inc
dec
insb
aaa
add
jnp
adc
jae
out
xor
xor
xor
test
lods
sub
test
adc
lods
rcrb
lods
imul
int
mov
xchg
lods
mov
and
rorl
sbb
mov
mov
inc
add
add
mov
stos
xlat
loopne
mov
ljmp
xor
push
stc
pop
dec
jae
es
sub
cmp
rclb
fmulp
cld
dec
pop
test
sub
and
adc
sub
sbbb
jno
mov
cmp
popa
adc
mov
mov
lahf
insb
add
mov
je
xor
lret
or
jge
cmp
and
orb
jge
fmuls
dec
imul
js
cld
dec
call
adc
lock
inc
fstpl
shr
jae
xchg
cs
push
pop
popa
mov
mov
adc
mov
mov
pop
test
inc
clc
dec
outsb
addr16
test
mov
sbb
shlb
xchg
cmc
das
cmp
sbb
fs
inc
jp
test
cmpsl
mov
sub
and
add
mov
dec
cli
add
sub
cmpsl
fldcw
test
cwtl
mov
div
fnop
pop
in
mov
jns
push
out
pop
mov
or
mov
js
inc
test
enter
cli
mov
ds
sbb
in
call
popf
add
nop
pop
pop
int3
lods
bound
sbb
in
mov
sub
fstpt
les
cwtl
int3
out
jb
xorb
dec
shl
dec
jge
pushf
mov
sub
xor
ds
cmpsl
jge
sbb
lret
out
sbb
out
faddp
out
scas
mov
jns
test
in
mulb
dec
sbb
adc
mov
push
inc
push
outsb
push
pop
ret
fnstcw
xchg
call
mov
xchg
gs
inc
cmp
xchg
int
je
and
insl
sub
call
mov
js
mov
adc
fdivl
dec
shll
dec
add
adc
adc
orb
in
lods
adc
insl
jb
ret
mov
push
jl
push
push
mov
stc
testl
mov
add
add
and
insb
lret
xchg
enter
loopne
pop
into
xchg
pop
mov
jmp
fldl
jb
loope
bound
ljmp
mov
out
lret
cmp
xor
pop
push
or
ss
dec
add
subl
xor
sub
nop
sahf
cmp
cpuid
inc
movsb
call
cmp
or
lcall
cmp
push
fstpl
lret
repnz
mov
lock
mov
mov
jp
sub
mov
cmp
dec
mov
dec
sub
mov
clc
push
jl
daa
movsb
iret
dec
and
jae
leave
aas
rorb
and
add
or
mov
out
dec
xorl
sub
pusha
pop
inc
mov
pop
dec
push
sub
sbb
movsl
sbb
negb
push
or
inc
xor
jbe
adc
cld
cmpsb
add
fcomps
jo
jb
dec
mov
xchg
loope
insb
cmpsb
pushf
and
notl
jle
movsb
sbb
mov
mov
xchg
mov
cmp
rcrl
pop
mov
cmp
cmp
xchg
xchg
mov
push
shrl
pop
int
pop
adcl
or
aas
mov
mov
mov
xor
mov
rolb
push
and
sub
jl
cli
cltd
shrl
push
pop
sti
adc
ret
cli
push
pop
scas
mov
in
mov
pusha
mov
lahf
cmpsl
pop
ret
mov
ret
int3
stos
xchg
ficomps
insl
sub
ds
pop
test
push
and
imul
fs
sbb
int
dec
movsl
xor
push
mov
jg
sti
xchg
out
inc
cmpsb
jmp
popa
pop
roll
lock
mov
das
sbb
pusha
lahf
jo
jle
out
xor
lock
inc
mov
cmp
rorl
shlb
mov
mov
mov
rcl
dec
cwtl
cltd
test
iret
jae
sub
push
jecxz
das
pop
aaa
push
push
dec
leave
cmp
cmp
pcmpgtw
and
dec
into
orl
xchg
cmp
or
lret
inc
lahf
jae
jmp
test
repnz
cli
shl
adc
jns
xlat
popa
sub
push
mov
ret
add
pop
ds
dec
and
jp
push
push
pop
test
lret
rcrb
mov
rclb
loop
jge
and
lahf
sub
aam
jnp
dec
jnp
sub
dec
mov
fsubs
xchg
dec
das
mov
sub
pusha
cmc
cltd
push
fimull
rorl
mov
dec
movb
ljmp
and
cwtl
in
lahf
push
jp
es
mov
addr16
xchg
scas
or
inc
inc
test
pushf
xchg
es
fstpl
and
scas
andb
es
xchg
jno
or
lods
or
int
imul
xor
loopne
sbb
inc
mov
data16
inc
shrl
push
dec
mov
sbb
mov
jno
rorb
sub
and
add
sbb
mov
ret
xchg
dec
xchg
push
sbb
jmp
adc
inc
outsb
imul
xchg
and
and
int
push
xor
sub
clc
cmp
push
sub
or
mov
or
loop
test
sahf
into
js
in
je
inc
sbbl
and
ja
filds
mov
ds
std
ror
sub
ds
fnsave
adcl
sub
popf
dec
xchg
xor
adc
push
or
imul
sbb
rorl
add
mov
xchg
sub
inc
outsb
jecxz
mov
popa
xchg
andl
and
stos
aad
loope
nop
dec
add
sti
loope
test
jno
sbb
cli
jae
pop
jno
andb
pop
arpl
inc
mov
stc
aad
jno
sbb
pop
lods
and
clc
xchg
rclb
mov
jnp
out
sub
xor
jp
and
sub
fwait
jle
insb
fdivrs
pushf
inc
mov
lahf
es
adc
mov
ret
dec
dec
scas
loop
xchg
mov
imul
repnz
add
aad
ljmp
loope
insl
cmpl
cmp
rcrl
into
xchg
rcl
inc
in
adc
shll
pop
jne
fsubp
fcmovnbe
sbb
imul
bound
fists
xor
sbb
mov
adc
out
and
pushf
movsb
ja
push
sbb
lea
jbe
ss
xor
mov
xor
mov
rcl
ret
mov
mov
fs
push
scas
push
adc
adc
ret
pop
pushf
ss
jo
dec
fnsave
dec
add
ja
adc
adc
jno
jmp
mov
and
and
ret
popf
dec
inc
pop
jne
out
mov
cmp
repz
mov
fwait
jg
insl
idiv
aam
cs
adc
ret
leave
cmp
xchg
mov
fisubs
fstpt
jmp
push
fdiv
movsb
pop
lods
je
xlat
bound
add
pop
mov
notb
or
sbb
rolb
int3
ss
mov
mov
mov
aam
popa
fucomip
or
out
adc
cmc
add
stos
lret
xlat
sahf
iret
mov
dec
test
sbb
out
cwtl
lds
push
add
cmpsb
mov
fwait
xchg
lock
xchg
ja
mov
bound
cs
cld
cltd
fs
pop
outsb
xor
dec
pop
sub
arpl
in
nop
aas
mov
jp
int3
sti
push
inc
push
lcall
mov
mov
pop
mov
sbb
or
ds
xor
and
push
leave
mov
inc
cmp
sub
rolb
xchg
rcll
push
out
test
fildl
ss
push
adc
hlt
inc
and
cmp
xchg
fs
fidivrl
loop
pop
pop
xchg
lods
out
cmpsb
fcmove
inc
cmp
nop
pushf
push
clc
inc
lret
insb
push
outsb
jl
fdivr
mov
in
sarb
inc
clc
jl
sub
in
pop
inc
add
xor
popa
adc
addb
mov
adc
ja
or
cmp
mov
test
sbb
leave
xor
add
xor
test
std
cmc
mov
push
or
nop
pusha
adc
lds
mov
push
pop
test
xchg
push
fists
pop
mov
enter
or
inc
and
mov
cld
xorb
idiv
lret
loop
rorb
shll
xor
pop
sahf
shrb
jge
xchg
and
mov
mov
mov
xchg
popa
or
or
sbb
leave
pushf
repnz
or
add
je
ss
push
inc
mov
fldt
fs
mov
xchg
cltd
pop
bound
jge
jno
mov
call
call
pusha
adc
scas
jnp
mov
fnstenv
pushf
mov
clc
test
fisttps
out
pop
scas
inc
repnz
popa
je
bound
roll
int3
or
hlt
cmp
push
cs
pop
call
xor
xor
inc
ljmp
mov
and
mov
mov
mov
mov
sub
add
xchg
arpl
mov
pop
sub
sub
in
mov
pop
lahf
add
rcl
testb
push
xor
sbbb
movsb
or
pop
jl
mov
and
or
mov
or
call
lret
lret
xchg
cmp
cmp
jbe
lea
rcll
jb
shr
lcall
mov
movsb
adc
mov
outsb
stc
leave
icebp
movsb
xchg
xchg
sbb
or
and
xchg
xor
cs
xchg
mov
pop
out
push
xlat
int
filds
jmp
mov
icebp
mov
lds
int
mov
insl
dec
pop
mov
inc
sahf
and
cmc
push
fwait
mov
das
sbb
push
push
rolb
movsl
nop
and
sahf
int3
xchg
mov
in
xchg
adc
or
pop
xchg
pushf
int
aas
jmp
add
adc
xchg
push
rorb
cld
dec
pop
adc
aas
popa
adc
and
mov
je
lods
in
notl
outsb
jns
pop
mov
aas
fnsave
test
sub
push
dec
daa
mov
jne
mov
lods
add
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fdivrl
pop
bound
pop
bound
mov
adc
xchg
repnz
jl
out
mov
mov
aas
fistps
cmp
sub
cmpsl
aad
das
jo
rcrb
fisubrs
mov
gs
hlt
outsb
fs
xchg
sub
push
inc
mov
loope
xor
dec
arpl
mov
lahf
push
sbb
fs
dec
test
dec
movsb
mov
aaa
mov
shl
aam
out
cs
ret
pop
aas
sbb
mov
hlt
jmp
dec
jo
nop
jbe
adc
xor
lcall
xchg
xor
inc
lret
fs
out
shll
stc
mov
cwtl
ror
mov
js
out
sub
mov
push
xchg
cmp
cmc
push
lea
sub
push
add
lods
mov
or
popa
lods
je
les
pop
mov
add
imul
push
xchg
sub
xor
pop
repnz
shll
mov
cmp
test
dec
inc
dec
dec
gs
or
inc
xchg
vhsubps
cmpsl
jp
int
call
ljmp
lods
cmpsl
mov
ds
mov
fstpt
sbb
es
push
hlt
ds
pusha
inc
jge
jnp
and
adc
iret
push
sub
inc
add
mov
sub
imul
jge
xchg
or
scas
daa
sub
inc
jo
push
lods
mov
xor
sub
ja
into
inc
or
enter
xor
push
sbb
aam
inc
xchg
lret
push
push
or
arpl
stos
insb
test
mov
cmp
ret
cmp
rolb
jge
pop
test
or
cmc
mov
jle
test
mov
jmp
push
and
dec
cmp
cmp
in
sub
adc
mov
and
pop
cmp
test
mov
repz
fsts
jns
xchg
rcl
scas
inc
sub
gs
sbb
cmp
push
popf
inc
xor
xor
inc
ljmp
dec
fdivp
out
lcall
int
sub
sahf
inc
sub
outsl
pop
xchg
es
outsl
dec
rorl
daa
mov
popf
ja
bound
addb
pop
inc
imul
pop
addl
out
adc
fwait
aaa
aaa
shr
pop
test
jmp
fisubrs
cmp
insb
add
mov
mov
lcall
lcall
inc
orb
pop
mov
mov
sbb
lcall
jnp
xchg
das
cs
mov
scas
xor
mov
dec
test
jl
mov
xchg
shll
xor
push
mov
sahf
pop
into
jo
dec
cmpsb
in
pop
imul
cwtl
hlt
push
push
pop
rclb
jae
or
fisttpll
mov
jno
mov
sahf
movsl
adcl
xor
es
arpl
jmp
fs
mov
add
mov
inc
or
test
jp
sub
dec
push
push
cmp
es
pop
sbb
lret
dec
and
rcll
inc
sub
loop
sub
das
in
mov
sub
call
cs
aam
leave
jnp
fdivrp
xlat
jle
fiadds
sbb
mov
mov
sbb
lcall
pop
sti
rclb
stc
cmc
stos
push
lods
sub
and
add
insb
incb
xchg
mov
jb
mov
jmp
cmc
push
in
sub
orl
sub
pop
hlt
repnz
aad
mov
jbe
pop
mov
sahf
ret
jl
in
mov
repnz
enter
inc
inc
cmpsb
pop
cwtl
decb
push
push
mov
xchg
push
enter
in
std
aas
add
jae
pop
loopne
cld
pop
fisubrl
cltd
into
adc
mov
xchg
inc
adc
xor
in
lods
cmp
test
xchg
testl
dec
icebp
rcr
cmc
imul
xchg
ficoml
cli
and
pop
xorl
xchg
dec
in
sub
sub
sub
push
stos
movsl
nop
lods
pop
insl
sbb
push
lds
out
cltd
xchg
inc
loopne
pop
aam
inc
loopne
adc
add
rclb
lahf
rcrb
popa
dec
mov
scas
dec
sub
or
adc
lret
cmp
loope
dec
call
mov
test
xlat
repz
and
jmp
leave
test
adc
icebp
sarl
int
jecxz
sub
mov
test
push
addr16
adc
push
fmuls
pop
mov
rcrb
out
iret
cmp
cmp
fidivrs
sbb
xlat
add
dec
xchg
or
lcall
mov
popa
fwait
lcall
clc
addr16
xchg
dec
orl
mov
mov
stc
inc
movsb
pop
mov
aaa
cmp
in
xlat
xor
dec
xlat
push
nop
adc
sbb
xor
and
jle
pop
test
sub
outsl
sar
xor
mov
icebp
mov
test
pop
fdivl
imul
xchg
push
inc
add
mov
ss
fwait
icebp
cltd
mov
data16
sub
xor
push
push
mov
fildll
mov
pop
sbb
fistps
loopne
jmp
or
dec
loop
jb
jnp
fcoml
xor
jnp
fsubr
addr16
or
ds
mov
xchg
xor
in
cmpsl
call
dec
les
into
je
leave
loope
jns
jecxz
push
xor
jae
enter
push
jae
adc
jnp
inc
movsb
pop
cmp
jns
xchg
scas
xchg
aad
jmp
in
cmc
pop
sti
xchg
test
add
xchg
sub
enter
std
lock
and
add
inc
sub
into
or
cs
jae
cmp
pop
push
sbb
test
insb
sbb
pop
add
dec
les
mov
rol
ret
xchg
push
dec
testl
jb
iret
daa
mov
jbe
cli
arpl
jae
repnz
jno
adcb
and
lret
fwait
adc
ds
fsubs
cmp
mov
cmpsl
xor
cmp
dec
mov
jo
push
or
loop
cmp
jg
cmpsb
ds
inc
mov
stc
fsts
inc
leave
data16
mov
clc
mov
lcall
push
mov
xor
push
mov
notb
loopne
jge
mov
cmp
lds
jne
aas
jge
push
rol
pushf
mov
pop
jb
push
jo
mov
mov
mov
js
jp
or
call
js
inc
sub
aad
push
xor
sub
mov
sbb
xor
add
xor
dec
aas
cli
push
sbb
les
mov
mov
xor
mov
mov
sub
stos
ja
jecxz
sub
adc
scas
or
aam
and
mov
fidivs
push
sbbb
push
fsubl
sbb
jno
inc
sahf
decb
cmp
cmp
testb
lcall
bound
call
dec
aas
jp
add
pop
adc
xor
xchg
stos
or
enter
mov
shll
and
xchg
fistpll
lahf
xchg
rcl
inc
popf
lods
dec
dec
pop
xchg
cmp
pop
sbb
xorl
pop
insl
loop
loope
test
cmpsl
fsubl
mov
enter
sbb
gs
mov
gs
push
cmp
mov
orl
add
movb
xchg
fiaddl
js
ror
inc
dec
inc
lock
stos
shll
mov
jmp
js
xchg
sbb
out
fs
and
int
or
loope
outsb
clc
cwtl
dec
cmp
or
enter
adc
jne
add
mov
push
inc
arpl
push
ret
test
xchg
pop
sub
outsl
push
sbb
mov
cli
sbb
addb
out
cmp
cmp
scas
out
mov
aas
lds
xchg
stc
mov
pop
shlb
pop
inc
loope
mov
movsb
in
out
dec
push
addr16
and
and
aam
add
sahf
leave
xlat
std
cld
xor
fcoml
js
inc
cs
lea
shr
cwtl
in
push
xchg
dec
sbb
out
movb
xchg
fisubs
addl
push
je
inc
xchg
lret
ss
cmp
lds
and
mov
cmp
mov
pop
in
dec
ja
cs
out
adc
aas
stos
cmpsl
call
add
enter
aad
jne
fwait
add
in
imul
in
dec
lahf
push
andl
xor
jg
fistpll
ds
out
pusha
add
xchg
mov
xor
test
adc
xchg
arpl
test
adc
cmp
and
mov
ror
adc
inc
fwait
jmp
out
int
loopne
adc
cmpb
jl
fs
je
add
mov
out
xor
fwait
and
and
fsubrs
shr
loope
xor
shll
inc
mov
push
aas
mov
push
jne
imul
arpl
adc
sti
outsb
add
aam
or
cmp
mov
push
dec
sbb
pop
les
in
cwtl
popf
jmp
idivb
or
movsl
jb
sbb
or
outsb
outsl
sbb
push
push
sbb
subb
aas
les
movsb
mulb
roll
movsb
mov
loop
mov
movsb
stos
sbb
push
mov
jne
mov
sbb
pop
adc
cmc
xlat
xchg
stos
fnstsw
hlt
rcll
clc
cwtl
push
out
nop
jb
dec
test
pop
out
test
inc
jne
insl
mov
shlb
push
xor
xor
dec
ret
scas
jne
pusha
xchg
imul
sarl
and
mov
jbe
iret
mov
push
adc
sub
stos
push
outsb
xor
cltd
je
jg
inc
lods
add
and
inc
sbb
fsubrl
and
sbb
inc
testb
mov
push
xchg
cmp
aad
decb
dec
fcmovnb
sbb
out
pusha
clc
sbb
rcr
in
fstpt
test
mov
jne
repz
iret
pushf
push
cwtl
pop
jnp
imull
or
stos
or
xchg
jl
bnd
lcall
mov
ss
imul
jecxz
pop
jne
pop
insl
mov
orl
cmp
call
insb
jge
enter
jg
sbb
and
ja
add
pop
jp
in
loopne
fcomp
dec
fistl
ljmp
push
pusha
adc
mov
and
mov
repz
std
das
data16
push
pushf
mov
pop
push
call
test
and
loopne
jle
jne
fcoml
test
js
jo
xchg
adc
xor
xchg
call
xchg
lret
push
mov
cmp
shlb
lods
or
mov
out
push
fbstp
imul
xchg
jo
sbb
jb
pop
cmp
jne
adc
inc
repnz
push
int3
daa
lret
and
pusha
rolb
pop
sbbl
cs
sbb
mov
sti
sti
sub
and
xor
push
pusha
movsl
data16
inc
xchg
adc
fistpl
lock
std
adc
jne
mov
adc
imul
xchg
aam
lahf
or
mov
push
pop
mov
dec
inc
dec
sub
repnz
cmp
test
fwait
test
shll
jge
fidivl
sbb
loope
je
insb
stos
stos
into
pop
ret
clc
mulb
cs
pop
outsb
and
imul
pop
jge
xchg
jecxz
iret
push
sub
iret
inc
repnz
adc
clc
lods
sahf
scas
and
cmc
push
loop
sub
push
mov
cmovle
push
dec
add
xchg
clc
mov
mov
orl
mov
xor
pop
fwait
int3
imul
add
stc
mov
lods
lock
cmp
out
and
cli
sub
xchg
lock
pop
jmp
out
stc
add
out
or
xchg
orl
xor
outsb
and
jp
xor
sub
xchg
aam
nop
scas
cmp
sub
lahf
push
fwait
pop
movsb
cmp
sbb
data16
mov
into
pop
les
jb
push
pop
xor
and
push
test
and
scas
push
daa
orl
jmp
sub
and
xchg
inc
iret
dec
xor
enter
fmuls
movsl
pop
xor
xchg
jg
xor
and
sbb
nop
mov
sbb
mov
add
popf
test
aad
rcl
mov
sbb
add
movsb
dec
hlt
imull
inc
dec
cmpsl
lock
inc
push
fwait
cwtl
xor
hlt
add
fildl
imul
sahf
clc
xor
xor
lock
negb
cld
popa
das
cwtl
imul
out
scas
xchg
icebp
cmpsb
cmp
adc
fsubl
mov
jne
pop
jns
stc
stos
pop
imul
push
push
imul
sti
dec
push
or
sahf
enter
sub
cld
cltd
jp
loope
push
cmc
mov
ret
jns
in
xchg
test
jb
or
jo
cmpsl
jns
hlt
jle
push
adc
mov
pop
pop
movsb
pusha
cltd
or
lahf
mov
ja
add
leave
push
int3
lret
in
adc
adc
add
push
lret
popf
inc
xrelease
jmp
ljmp
aas
adc
ljmp
adc
pop
cmp
enter
add
sbb
jns
mov
clc
inc
and
rcrl
jmp
data16
mov
bound
push
in
aad
mov
cmp
push
push
push
out
cs
lret
in
pop
cmc
cwtl
sbb
ret
jg
or
xor
je
in
jmp
inc
xchg
cld
jle
imul
adc
shll
hlt
xor
rolb
dec
cmp
jg
push
arpl
roll
mov
push
mov
ret
gs
movsl
push
mov
in
fisubl
jge
fiadds
adc
pop
inc
jp
push
sti
jg
rcl
outsl
lahf
daa
add
scas
jmp
mov
mov
or
lock
inc
ret
mov
jo,pn
into
mov
daa
outsb
out
notl
stos
gs
jmp
mov
movsb
dec
cmp
imul
and
dec
jecxz
mov
push
mov
inc
lods
xor
or
enter
mov
add
rolb
push
mov
fstpt
or
mov
sbb
mov
jp
jbe
ficoml
inc
add
roll
cmp
jl
into
jge
and
push
into
or
icebp
mov
jnp
xor
mov
pop
outsl
icebp
cld
or
pop
cmpsl
lock
sbb
lahf
push
jbe
int
popa
cmp
clc
xorb
jl
add
xchg
and
aaa
add
cltd
out
std
aaa
in
cmpsl
icebp
jle
test
mov
sarl
lret
rol
mov
int
fs
lea
push
gs
adc
mov
rcl
dec
or
fs
es
shll
pushf
xlat
mov
repnz
push
dec
lds
mov
int3
inc
test
loope
decb
inc
lods
xorl
add
cmp
iret
xchg
leave
xchg
insb
imul
stc
ljmp
cmp
loop
dec
jg
jno
cmp
xor
and
rep
enter
mov
out
std
inc
lods
dec
mov
outsl
shl
sahf
xchg
xchg
push
push
cmc
xchg
loop
push
mov
mov
cmp
les
or
or
aaa
lcall
dec
enter
push
dec
in
inc
mov
test
inc
cmp
aaa
pusha
inc
shlb
cmpl
imul
jbe
pop
sub
xor
adc
sbbb
push
nop
daa
mov
mov
sbb
movsb
cli
xchg
divb
mov
fsubrs
mov
lock
mov
mov
notb
fstpt
aam
scas
test
rorl
jbe
push
inc
sarl
push
ret
cli
es
stos
mov
or
xor
sub
add
aas
adc
cmp
das
lds
jnp
cmc
xor
jb
aas
aaa
jecxz
sahf
jge
cmp
sub
sub
mov
test
jae
mov
push
mov
lret
cs
ss
mov
test
ds
inc
nop
icebp
es
jp
xor
rcrb
and
cmp
lods
mov
lret
adc
sub
mov
aad
sbbl
out
add
sbb
jge
cmp
pop
aas
dec
aad
fistpl
dec
push
jp
gs
jo
cmc
je
movsl
lcall
sub
or
les
rorl
scas
xchg
arpl
lods
push
pop
xchg
xor
jnp
lret
sbb
out
scas
mov
loope
sbb
roll
in
or
and
lock
outsl
or
or
sbb
xor
adc
mov
mov
pop
cmpsb
in
cs
stos
scas
test
mov
sbb
push
xlat
push
or
popl
dec
testb
cmpsb
pop
insl
pop
pop
clc
sbb
fs
and
fildll
pop
lahf
nop
test
adc
jecxz
mov
pop
pop
adc
ljmp
xor
in
fidivrl
mov
lods
xchg
jns
aam
sbb
call
push
leave
add
cpuid
out
test
ljmp
pusha
sbb
cmp
outsb
mov
iret
cmp
js
sub
mov
jnp
pop
sub
popa
cmc
jp
hlt
inc
mov
repz
mov
mov
xor
nop
add
pop
loope
pop
mov
xchg
xor
sbb
fbstp
dec
sub
pop
mov
shl
sahf
fldcw
adc
fucomip
jb
mov
ss
scas
outsl
sub
sub
ret
cmovge
inc
lods
or
mov
xor
add
testb
cmp
decl
fadd
aam
push
jnp
and
sahf
jl
cmpsl
repz
sub
cmp
cmpsb
jmp
mov
adc
pusha
lret
sub
push
inc
ljmp
mov
roll
adc
fiaddl
popa
inc
push
cmp
mov
cmp
imul
and
outsl
cmp
or
test
das
addr16
test
xchg
adc
sahf
shlb
enter
out
stos
xchg
sub
sbb
out
mov
popf
mov
lret
psrlq
loop
push
adc
scas
cmp
pop
aad
push
pop
add
adcl
pop
mov
cltd
jp
aad
and
fldcw
cmp
shlb
into
loope
mov
out
dec
loopne
daa
test
pop
repz
divb
jecxz
aad
cmpsl
adc
insb
mov
lahf
sbbb
cmp
stc
sub
aad
mov
cltd
fmuls
mov
or
pop
mov
xchg
sahf
adcb
push
fadds
or
lock
hlt
test
aaa
dec
rcrb
stc
aam
jge
popf
test
cmp
loopne
mov
lods
popa
lods
iret
push
cltd
imul
push
add
jecxz
push
sbb
cmova
adc
test
xor
dec
push
inc
adcb
clc
and
test
cmp
iret
add
imul
lds
xchg
cltd
xchg
imul
mov
adc
mov
movl
ljmp
push
add
rol
jb
scas
and
in
jmp
loopne
roll
sbb
cli
jecxz
ret
sbb
aad
mov
cmp
lahf
movsb
sub
loope
inc
or
fldpi
jecxz
sbb
push
jae
xchg
lahf
into
and
mov
stos
inc
fsts
into
sbb
fcoms
or
in
cmpl
jp
pop
adc
shll
cmc
stos
cmp
jb
xor
cmpsl
cmpsl
es
xor
ss
mov
idivb
jecxz
cmp
xchg
ret
fwait
pop
pop
call
mov
outsb
lahf
xor
add
pop
hlt
cmp
sbb
mov
imul
xchg
lahf
mov
push
movsl
insb
jnp
or
jns
subl
sub
xor
pop
pop
outsb
pop
inc
cmpsl
add
insl
jge
lock
mov
lahf
out
xor
push
popf
scas
addb
movsb
cmpsb
aad
cs
and
mov
mov
out
dec
fsubl
inc
aas
jnp
jb
stc
push
mov
pop
test
pop
insl
xlat
inc
test
test
rcr
or
pop
cmp
dec
sbb
cmpsl
pop
jo
add
xchg
jne
data16
adc
pop
imul
rclb
das
test
into
ficompl
loopne
and
sub
lcall
or
fimull
cmp
aaa
push
add
mov
dec
cmp
add
lock
insl
sub
xchg
mov
xor
mov
jb
out
xor
clc
adc
test
sbb
lcall
roll
fs
dec
add
add
cmp
jnp
scas
outsb
bound
lret
add
ret
lahf
sub
xchg
sbb
insl
int3
jge
fnsave
jle
adc
inc
xchg
jb
or
jge
dec
out
add
insb
and
adc
pop
xor
cmp
pop
dec
andl
es
insl
cld
push
pop
ret
mov
loope
pop
mov
roll
push
ja
pushf
inc
test
scas
add
xchg
cltd
xchg
cld
xor
add
addr16
pusha
ljmp
add
add
sub
subb
push
aad
sbb
repz
sbb
test
xor
pop
fnstenv
jmp
push
xchg
es
jbe
out
ss
popf
int3
test
add
sub
loope
arpl
icebp
lds
xor
jl
jecxz
es
test
cmp
inc
aam
negl
xor
iret
or
ds
int3
jmp
add
xchg
mov
loope
shlb
fwait
leave
shl
or
movsb
sbb
arpl
dec
cmp
stos
bound
or
test
inc
icebp
add
sbb
jp
or
pop
jb
inc
mov
dec
mov
pop
push
imul
add
dec
sbb
scas
mov
addr16
sub
shrb
sub
roll
xor
xor
std
sbb
sub
mov
inc
pop
cmp
pop
xor
adc
xor
push
and
cmc
sub
dec
lods
leave
fdivr
mov
inc
adc
rol
dec
adc
jmp
add
das
dec
push
in
jg
xchg
sahf
pop
cli
sub
lcall
adc
sahf
rcrb
mov
dec
cs
int
sub
sbb
xchg
loope
gs
jp
fstps
out
mov
jae
xor
test
mov
and
clc
sub
or
dec
clc
xor
call
dec
hlt
inc
sbb
push
ss
andl
sub
out
test
or
js
mov
in
and
adc
je
arpl
xchg
shll
xor
ljmp
ljmp
push
dec
fsts
sbb
sarb
push
sbb
push
sub
ljmp
jo
test
cli
inc
push
dec
daa
rcrb
mov
js
cmc
push
or
sub
jp
loop
mov
outsl
shlb
sbb
pop
in
arpl
or
ret
push
push
push
cmp
pop
cmp
out
scas
pop
cmpsb
jmp
test
xchg
cmc
or
jb
pop
fnstsw
adc
lret
add
es
sahf
imull
xor
push
pop
push
shrb
iretw
push
cmp
xor
lcall
dec
addl
adc
roll
cs
out
inc
fdivl
xor
shl
imul
push
xor
mov
push
int
sub
adc
pop
mov
outsl
and
mov
repnz
std
jecxz
pop
shr
push
xchg
push
jp
test
jmp
popf
mov
push
rorl
xchg
call
mov
add
repz
fwait
pop
mov
cli
xchg
ret
mov
sub
push
shrl
dec
addr16
pop
movsl
ret
cli
and
and
jge
test
dec
fiadds
ss
mov
push
sub
xor
mov
xor
inc
push
movsl
sbb
pop
sub
cld
out
mov
rclb
dec
add
lcall
idivb
dec
mov
fucomip
cmp
push
push
sub
in
dec
cwtl
fsubs
fcomps
pop
fcoml
mov
imul
popl
cmc
ds
mov
xor
sahf
and
push
or
xchg
or
jp
pop
jno
add
cmpsb
add
pop
lcall
out
out
xchg
pop
push
add
hlt
cli
xchg
mov
out
adc
scas
mov
and
dec
popf
mov
inc
dec
sbb
xchg
pop
loope
push
rol
test
jle
and
lds
pusha
jnp
pop
ret
mov
adc
push
lret
mov
adc
push
xchg
test
daa
in
scas
sarb
mov
push
mov
frstor
inc
push
pop
sahf
stos
into
stc
dec
sub
jle
xor
push
xchg
into
jge
dec
push
fisubrl
jecxz
mov
daa
push
ret
inc
xor
loopne
cltd
aaa
sahf
or
xlat
mov
ficoml
aad
inc
inc
int3
scas
les
jne
push
incl
addr16
adc
dec
pop
jns
adc
sub
pop
mov
add
dec
test
mov
ds
sbb
mov
movsb
sahf
fnstsw
pop
sub
imulb
mov
adc
dec
xor
pop
mov
add
sub
pop
fistpll
push
popf
scas
daa
pop
ret
fdivrp
mov
inc
data16
pop
or
pop
shlb
cmp
ljmp
lahf
subl
cmp
mov
loopne
in
int3
mov
adc
out
cmp
xor
pop
cmpsl
push
ljmp
and
lods
xchg
xlat
jp
div
jp
je
mov
mov
push
cwtl
cmp
push
cltd
adc
mov
rclb
mov
test
out
xor
sbbl
jl
fisttpl
or
test
mov
shll
adc
mov
mov
mov
int
inc
sbb
and
movb
or
sbb
outsb
clc
into
sub
lahf
imul
sub
jp
and
inc
sub
cmpsl
sarb
cltd
insl
xchg
insb
jg
mov
lcall
push
adc
ret
add
mov
mov
lret
mov
sarb
cld
stos
gs
dec
xchg
mov
xchg
xchg
jo
mov
imul
frstor
sub
imul
jae
outsl
adc
and
out
mov
shlb
call
dec
int3
test
xor
adc
adc
icebp
dec
sbb
jo
lds
lds
xor
stc
xchg
out
pop
jnp
imul
leave
sbb
lods
mov
outsl
mov
dec
sub
push
jae
push
jae
add
enter
jno
fnstcw
mov
jmp
and
cmc
aaa
mov
jb
into
pushf
cmc
aad
stos
pop
test
gs
mov
mov
sub
mov
mov
xor
movsb
jmp
leave
movsl
inc
jle
cmc
call
fidivrl
pop
xchg
mov
test
xchg
inc
cmp
aam
xchg
xor
sbb
lret
in
ja
pop
out
fdivrl
jp
sub
pop
mov
pop
push
andb
shlb
add
mov
pop
xor
push
fdivrp
pop
lret
negl
pop
in
xlat
pop
pop
mov
fs
clc
lds
xchg
cs
xchg
jbe
jbe
fs
xor
out
incb
cmp
push
mov
cwtl
jle
aad
cli
pusha
mov
popf
test
cmp
fistl
adc
in
dec
add
mov
cmp
mov
and
xchg
xchg
xor
lock
ret
mov
or
mov
scas
cmpsl
imul
adc
mov
push
mov
jae
ret
mov
lahf
pop
inc
cld
gs
test
aaa
dec
adc
add
mov
sub
cmpsl
lgdtl
and
mov
push
bound
add
jge
and
push
pop
push
cli
out
push
mul
in
xchg
lods
repnz
jo
sahf
cltd
adc
test
incb
mov
hlt
pop
in
fidivrs
inc
xchg
icebp
test
rcr
movsl
pushw
int
pop
loop
stos
mulb
cs
lcall
cmpb
fs
lock
mov
inc
dec
push
mov
pushf
push
inc
and
mov
arpl
lret
mov
mov
and
dec
incl
sbb
inc
outsb
mov
pop
lock
sub
sbb
inc
xchg
arpl
cmp
mov
gs
outsl
xor
out
lret
in
shll
iret
mov
xchg
or
adc
cmp
aad
sbb
nop
jmp
aam
inc
shll
push
mul
cld
xchg
mov
fnsave
rol
sti
rcll
push
push
std
jle
popa
mov
push
test
mov
in
negb
jecxz
inc
xchg
sahf
lds
test
cmpb
push
push
imul
gs
pop
mov
or
pop
mov
jp
outsl
pop
pop
add
in
popf
sbb
je
add
xchg
cmc
std
insb
fldcw
jb
and
scas
pop
loopne
pop
pop
decl
inc
mov
mov
dec
insb
xor
ja
and
addb
sbb
inc
mov
mov
inc
sub
pop
das
xchg
cmpb
cmp
jp
or
mov
adc
rorb
or
cld
xor
and
movb
jnp
sti
aad
add
hlt
xchg
mov
add
push
aaa
push
sub
inc
xchg
dec
sbb
jmp
and
and
shll
fildll
inc
push
daa
stos
sbb
out
inc
inc
or
mov
ds
hlt
push
xor
std
pusha
mov
dec
cmc
js
inc
jo,pn
push
inc
dec
jno
pusha
or
fmull
cmpb
rclb
popf
je
imul
push
adc
sbb
push
fisubs
pop
sub
add
stos
xor
out
rorl
add
cmp
jb
int
mov
std
decl
sbb
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
in
xor
adc
cmp
adc
bound
mov
outsb
mov
and
xlat
add
sahf
in
inc
inc
inc
sbb
repnz
and
lds
ficomps
sub
pop
xchg
ds
adc
pop
rorb
cwtl
out
int
mov
outsl
xor
mov
sub
xchg
dec
cmp
aad
lret
xor
sub
or
into
insb
arpl
sbbl
in
jle
adc
adc
adc
repnz
mov
push
aad
cmc
into
or
cmp
inc
inc
jns
mov
xor
add
xor
loop
xor
test
cld
push
jno
scas
rcll
sbb
jne
xchg
mov
movsb
add
loop
push
xchg
loop
sbb
mov
sub
hlt
fwait
into
aam
lcall
in
sbb
mov
cmp
push
lods
mov
in
int
dec
movsb
stos
repnz
add
pop
jg
jb
and
jge
xor
lock
lea
fnsave
cmp
adc
hlt
insb
push
rol
loopne
inc
mov
pop
idiv
lods
fisttps
adc
xchg
sahf
add
into
xor
ffree
sub
dec
rcl
xchg
es
xchg
dec
or
out
xor
and
pop
mov
ja
int3
scas
pop
fnstsw
mov
or
into
out
and
movsb
add
push
xchg
xchg
dec
addr16
sbb
push
add
outsb
loope
push
das
cmp
outsl
add
popf
jno
lret
inc
jno
pusha
mov
ja
push
ficoms
movsl
out
out
add
add
rcrl
add
movsb
cs
mov
sub
dec
jg
xchg
outsb
cmp
push
data16
data16
sub
pop
mov
loop
mov
fiaddl
adc
scas
jmp
fdivp
xor
mov
mov
dec
inc
xchg
or
in
insl
insb
pop
pusha
lock
add
add
sti
cmp
adc
ljmp
in
inc
sub
out
adc
aam
jns
or
cmp
add
and
cmpsb
jae
popf
lea
out
dec
stos
push
testb
push
outsb
adc
dec
pop
leave
rorb
inc
pop
pop
lret
ja
push
pop
pusha
rclb
mov
jl
pop
lret
orb
shlb
icebp
in
add
fnsave
mov
jnp
mov
ret
lods
add
aas
pushf
lods
add
mull
cmpsl
scas
cld
mov
lret
shlb
and
lret
xchg
xor
push
mov
push
mov
jge
fistps
lret
fucomi
jne
or
ret
sub
xchg
sub
jl
ficomps
add
mov
jbe
mov
inc
scas
or
cmp
lds
scas
and
ret
adc
iret
add
test
mov
negb
push
outsl
adc
in
xchg
sbb
jg
sarl
or
jne
cmp
cwtl
dec
mov
fisttpll
push
xor
fisttpll
call
into
sbb
adc
push
adc
adc
popa
or
loop
mov
cs
jbe
lret
fbld
cmp
xchg
jl
push
and
and
andb
in
pop
pop
inc
out
shlb
fwait
or
imul
into
push
mov
cmpsb
test
xchg
sbb
lahf
cld
xor
pop
xchg
or
inc
lods
aas
loope
adc
repnz
enter
js
test
mov
fmull
stos
push
add
mov
test
loopne
and
icebp
push
add
sub
outsl
negl
push
jl
fsubrp
pop
mov
cmp
lds
repz
daa
or
in
and
push
jo
hlt
push
jp
xlat
push
in
jecxz
fldt
xor
and
mov
adc
outsl
dec
or
or
test
fs
rcrl
shl
mov
mov
add
pop
test
mov
mov
scas
xor
xchg
push
ret
push
xchg
stos
ret
imul
add
fldl
xchg
xor
or
mov
or
test
loopne
sar
adc
xchg
xchg
dec
inc
mov
inc
gs
push
mov
add
mov
mov
jmp
adc
add
xor
pop
mov
dec
call
rclb
sub
and
fnstsw
lret
movsl
jae
and
ja
jge
stc
xlat
sub
js
clc
dec
pop
ss
pop
es
push
test
xor
add
cmp
sbbb
or
or
adc
out
or
ret
cmp
mov
ret
insb
mov
fs
mov
pushf
bound
jae
dec
mov
pop
mov
pop
cmc
andb
sub
push
arpl
adc
pop
outsb
inc
shl
push
stc
pop
and
push
mov
icebp
jns
push
shrb
sbb
mov
cmp
jmp
xor
ficoml
repz
pop
out
sub
fs
adc
movsb
jmp
aas
fsts
push
cmp
or
out
mov
das
pop
sbb
testb
push
shr
aas
ja
and
push
push
sbb
mov
jbe
inc
icebp
hlt
out
mov
leave
or
in
movsl
dec
inc
push
jg
xchg
imul
sbb
sti
or
cmp
push
addr16
xor
out
push
sbb
fucom
lretw
stos
cmc
jns
jmp
lock
nop
test
repnz
or
push
inc
insb
push
add
lret
sub
mov
and
adc
mov
in
fldl
adc
and
or
push
mov
movsl
mov
mov
mov
jle
xor
adc
inc
fisubl
mov
sbb
fstps
add
mov
jae
pop
sub
insb
ret
xchg
stos
ja
xchg
add
jbe
push
adc
pop
pusha
or
loope
fcomps
inc
mov
sub
fdivr
js
fidivrl
in
dec
and
mov
popf
popa
mov
inc
fdivl
stc
rcrb
out
lret
push
jbe
xchg
add
jae
push
pop
push
enter
enter
pop
insl
in
cmpsl
aaa
push
push
outsb
lahf
push
adc
add
add
inc
push
int3
pop
fdiv
aaa
dec
add
aad
leave
es
dec
pop
sub
cmpsb
movsb
push
mov
sbb
inc
xchg
push
jecxz
out
dec
push
sub
ret
fs
lcall
rol
xor
outsb
test
hlt
inc
add
mov
iret
iret
mov
pop
lods
imul
repnz
and
call
inc
in
push
popa
pop
pop
dec
shlb
notb
fs
sub
int3
adc
aas
mov
mov
cmp
xchg
cmp
mov
and
push
or
sti
pushf
movsl
push
loope
aaa
test
arpl
in
jg
lods
mov
sarb
mov
sbb
popf
cltd
cmp
and
sbb
movl
mov
pop
push
mov
mov
mov
pop
and
incl
sbb
inc
in
cmpsl
push
fs
andb
data16
xor
lds
ficoml
stc
push
xorl
mull
add
notb
or
adcb
bnd
dec
inc
mov
iret
adc
adc
sub
add
pop
popa
xchg
fnsave
adc
cmp
pop
cs
cmp
orl
sahf
inc
loop
dec
jge
ss
in
popa
rorb
mov
cmp
clc
sub
push
cmpsl
mov
adc
clc
sub
sti
add
xor
ds
into
pop
fnstenv
pop
xor
stos
xchg
cmp
adc
push
pop
lods
loope
or
cmp
pushf
mov
sbb
add
jae
xchg
rcll
mov
test
and
push
pop
jbe
out
in
cmp
negb
sub
int3
sbb
repnz
inc
sub
repnz
push
pop
out
sub
jbe
repnz
mov
fildll
mov
fbstp
fcomp
stos
pushf
fdivs
lds
dec
scas
xor
jbe
das
cmp
cmp
push
shrl
sbb
pop
andb
mov
or
inc
inc
mov
sti
dec
jns
or
test
or
and
xchg
fwait
lret
bound
push
sbb
dec
imul
mov
cmp
outsb
jb
aaa
push
push
xchg
imul
sbb
cmp
pop
aaa
pop
push
jns
bound
daa
lock
data16
in
es
jmp
mov
push
xchg
sub
push
imul
and
jg
push
subb
inc
mov
in
clc
and
jg
or
insl
sahf
cmpsl
scas
inc
sbbl
mov
ret
pop
or
ret
aaa
inc
adc
sbb
mov
dec
repz
dec
mov
clc
cmp
int
aaa
lcall
shrb
add
add
mov
ficompl
in
inc
xchg
xor
adc
inc
into
inc
pop
fidivrs
adc
insb
push
mov
cmpsl
sub
repnz
fnstsw
dec
lock
pop
movsb
aas
repnz
jmp
push
push
lahf
jb
mov
pop
pop
push
jo
in
jo
rclb
adc
les
fwait
in
mov
push
mov
jge
sub
les
popa
jne
int
mov
enter
dec
xchg
jl
jecxz
or
repnz
xchg
sbb
mov
clc
jg
sbb
mov
cmp
clc
xor
mov
xchg
jp
ljmp
sub
jo
adc
inc
repz
pop
iretw
in
jmp
push
dec
rcll
ret
inc
xchg
push
push
pop
mov
jbe
xchg
sub
in
mov
mov
out
push
negb
sub
cmp
repnz
lcall
xchg
scas
push
add
mov
ret
lret
ljmp
cmp
and
add
push
jns
jnp
into
dec
and
out
mov
pop
cld
add
cwtl
xchg
lods
mov
jae
sbbl
in
adc
jbe
in
aaa
dec
outsl
orl
nop
mov
scas
or
jns
xor
mov
lcall
mov
stc
pop
push
adc
xor
push
mov
mov
je
aas
jno
sbb
notb
push
jle
out
lods
inc
jno
xor
fldl2t
icebp
dec
mov
cs
test
fdivr
pop
cld
popa
pusha
cmp
cli
pusha
movsb
push
fistpl
out
into
cs
dec
add
test
push
incl
imul
imul
ljmp
add
mov
sbb
push
or
inc
fisttpll
push
push
out
pop
pop
pop
pop
hlt
ja
ds
cmp
push
mov
push
fwait
pop
rorl
setp
mov
or
psubw
dec
iret
inc
pop
push
cmp
cmpl
mov
push
xchg
pop
je
mov
push
cltd
xor
sarb
int3
dec
mov
xchg
loope
xchg
movl
call
mov
pushl
jne
push
sub
notb
adc
xor
xchg
out
lret
jo
xchg
scas
mov
or
push
mov
jbe
pop
mov
mov
adc
fnstsw
dec
push
lea
cli
rol
pop
fildl
stos
das
iret
pop
push
js
loop
pop
cltd
dec
push
andl
aam
lahf
pop
ficompl
push
pop
out
pop
adc
movsb
and
dec
dec
or
shl
or
mov
outsb
cmp
loop
aas
ret
add
xchg
push
and
adc
push
shrl
or
lea
cmp
hlt
push
pop
cmc
push
out
mov
adc
les
rcrb
dec
add
or
movsl
enter
fucomi
lahf
insl
inc
and
sti
cltd
jmp
add
dec
xlat
fadds
push
out
ficoms
pop
scas
mov
jecxz
cld
fcoms
xor
mov
scas
insb
sbb
cmc
mov
mov
xchg
loope
mov
mulb
add
inc
repz
mov
cmpsl
clc
mov
jae
mov
mov
hlt
sub
test
pop
jp
psrlw
or
cmp
loop
test
cmc
fists
in
sti
insb
lcall
lods
imul
das
or
jne
hlt
sub
xlat
push
loop
sub
push
das
jle
mov
hlt
jmp
je
push
pop
pop
stos
mov
mov
iret
cmp
mov
push
jae
lcall
jp
in
dec
and
fldenv
xchg
pop
mov
pop
test
cs
mov
std
test
jnp
dec
push
test
pop
mov
xchg
hlt
inc
sub
lock
inc
arpl
repz
inc
mov
dec
jo
enter
ja
push
xor
orps
sarl
imulb
out
lods
sti
pop
into
adc
push
cmp
aas
stc
fdivr
mov
leave
add
mov
mov
lcall
pop
dec
jns
xchg
rcrl
sub
or
out
cmp
das
sbb
mov
push
cmp
cmp
jns
or
dec
pop
cli
dec
testb
das
dec
xor
xlat
push
or
jle
xor
aaa
pop
lret
incl
mov
xor
loopne
xchg
pusha
adc
push
cli
fistps
sbb
mov
sub
fcom
rcll
pop
and
adc
std
dec
inc
mov
and
scas
rorb
les
clc
push
mov
loopne
in
sarb
insb
inc
xchg
jp
sbb
mov
ret
jae
pushf
imul
ror
imul
cmp
pop
loop
add
popa
xor
cmp
dec
cmp
lea
in
sub
add
outsl
or
negl
sub
mov
mov
sub
inc
std
lods
enter
adc
xor
stc
fdivrs
cmc
xchg
cmpsb
sbb
inc
fstp
jecxz
inc
jmp
pop
aad
sbb
push
clc
push
push
push
cmpsb
stos
rcrl
lret
cmp
jbe
loop
fildll
adc
shl
out
or
add
sub
mov
cmp
lcall
jmp
pop
idivl
push
notb
es
cmp
stc
jle
stos
dec
and
add
std
insl
jg
jecxz
dec
add
js
mov
xchg
in
popa
pop
fstps
and
fcmovnbe
pop
movsl
sub
mov
pop
inc
mov
rorl
or
push
int
add
lods
inc
ss
sahf
popf
shl
cltd
push
xchg
jp
sub
mov
loopne
or
pushf
mov
outsl
das
xchg
leave
jle
sbb
out
fwait
adc
out
mov
jo
cs
push
sbb
mov
lds
mov
iret
and
xchg
adc
mov
cmp
mov
add
or
jb
jnp
jmp
and
repnz
sub
pop
and
add
pop
jno
movsl
cmc
clc
movsl
xor
jg
in
push
sub
loopne
in
mov
cmc
lods
shlb
mov
jle
push
mov
aad
jb
ds
add
movb
fnstcw
cmc
mov
insl
shr
pusha
lret
rcll
push
jbe
lcall
daa
out
sbb
shrl
sub
adc
and
fs
mov
jl
mov
cmp
pop
add
arpl
imul
sbb
cld
xor
fsubl
or
xor
call
daa
fs
sar
jns
jb
push
add
cmpsl
pop
push
fmul
cmp
jnp
div
cmp
add
and
pusha
cmc
bnd
out
xchg
and
pop
add
sub
rclb
cmp
dec
js
sti
mov
dec
add
ss
pop
aaa
push
jae
mov
cmp
jl
je
pop
pop
xchg
xor
push
rolb
gs
out
pop
push
sti
xchg
jo
or
daa
pop
fcoms
lss
loopne
mov
fcomps
adc
push
imul
xchg
loopne
dec
add
enter
outsl
and
data16
lods
cmp
mov
mov
test
sub
lret
fnstcw
cmc
xchg
and
xor
aad
mov
jg
mov
push
hlt
xchg
mov
iret
push
out
add
adc
sub
cwtl
mov
jbe
sbb
shrb
adc
or
gs
lods
sub
dec
jg
adc
nop
ds
inc
lahf
or
push
sbb
dec
inc
ret
push
mov
mov
inc
sbb
sub
popa
mov
fwait
or
negl
stos
imul
hlt
mov
mov
mov
dec
cld
in
lcall
negl
cmpsb
movsl
cmp
sbb
std
adc
push
jbe
pop
add
xchg
lret
jo
fildll
bound
cmp
or
add
cld
icebp
jecxz
imul
jo
je
jae
or
mov
cmp
sub
mov
subl
in
push
cmpsl
mov
push
in
fldl
loopne
test
mov
mov
scas
testb
xchg
cmp
mov
icebp
mov
mov
aas
xchg
enter
xchg
adc
lds
mov
or
mov
sbb
mov
stos
inc
pop
in
cmpsb
int3
in
inc
push
pusha
push
sbb
xchg
fstpl
cwtl
xchg
pop
pop
mov
cmp
loope
scas
mov
ljmp
rolb
add
mov
cwtl
push
subl
data16
xchg
dec
fidivrl
ret
test
popa
mov
sahf
in
inc
lods
sti
pop
lock
out
fiadds
pusha
outsl
mov
adc
jge
dec
xor
xchg
xchg
push
outsl
nop
dec
insl
or
mov
addb
dec
mov
stos
sbb
mov
jbe
aad
aam
mov
inc
in
lods
hlt
push
mov
jmp
out
inc
mov
dec
push
cmpb
repnz
rclb
lds
inc
xlat
pop
into
xchg
cmp
cmp
int3
push
in
in
xchg
xor
fcompl
pop
subl
adc
out
add
sbb
sbb
stos
cmp
enter
pushf
and
inc
js
arpl
bound
pop
and
dec
push
scas
lods
pusha
xlat
sub
movsl
imul
pop
mov
pop
inc
adc
test
push
lahf
test
pushf
js
sahf
adc
int3
mov
mov
lods
pop
cmpsb
lods
xlat
or
addr16
imul
add
jg
add
pusha
or
shl
sub
addr16
or
bound
and
icebp
sub
pop
loop
fcmovb
or
adcb
push
ret
fldenv
pushw
and
push
je
test
jb
or
pop
loopne
rcl
adc
bound
pop
icebp
sbb
push
inc
xor
adc
inc
mov
lcall
pop
out
sub
repz
adc
inc
imul
pop
sbb
jl
adc
sbb
adc
jno
fildll
lcall
and
jb
nop
mov
cmp
repz
add
notb
push
ret
sbb
mov
fwait
xor
jne
mov
jno
lds
xor
sub
pop
fs
lock
jbe
xor
sbb
popf
lods
or
mov
in
xchg
insb
stc
and
inc
daa
xor
data16
push
je
push
js
lea
mov
mov
cmp
sub
into
sti
cmpsl
scas
push
roll
mov
cli
push
xchg
adc
addb
inc
rorb
das
in
int3
sbb
orb
adc
or
cmc
mov
call
adc
int
les
cs
push
pop
jg
or
mov
mov
xor
in
xor
repz
inc
pop
test
les
add
aad
jl
fdivl
push
mov
xchg
jmp
mov
push
inc
add
mov
insl
outsb
mov
adc
adc
inc
xor
xchg
dec
push
movsl
test
mov
imul
lret
idiv
pop
cmp
jnp
sub
imul
mov
push
mov
lock
inc
aas
in
loope,pt
push
lods
cmpb
lahf
inc
scas
in
hlt
jno
mov
jge
jmp
outsl
push
push
cmc
movsb
outsb
mov
mov
jmp
loope
jmp
sahf
je
add
cli
rorb
loope
pop
or
jnp
or
jnp
mov
inc
mov
roll
mov
stos
fdivp
aad
pop
jge
popf
or
rcll
repnz
push
cmp
inc
aam
orl
xchg
lock
scas
test
iret
je
mov
pop
mov
mov
dec
sub
test
mov
or
xchg
add
pop
mov
ljmp
test
push
push
lea
sbb
sub
or
rorb
push
inc
jmp
jl
mov
sbb
mov
jnp
out
add
rcrb
jle
xor
and
sbb
mov
mov
sbb
xor
push
in
fdivp
out
cmp
daa
lds
scas
mov
pop
sub
mov
adc
mov
std
into
bound
js
or
lods
insl
aad
or
mov
and
jbe
aad
jl
xchg
or
push
add
mov
jae
insl
rcrl
push
adcb
arpl
jae
pop
add
imul
and
xchg
in
dec
xor
lds
push
dec
dec
inc
cltd
and
xor
mull
loope
mov
pop
and
fwait
roll
or
ss
push
in
mov
mov
inc
daa
cltd
fcoms
sbb
mov
mov
stos
mov
movsb
pop
ljmp
pushf
xchg
sub
clc
iret
int3
mov
or
hlt
xor
pop
fcoml
mov
cmp
push
movsl
mov
icebp
cltd
test
test
out
and
jg
pop
mov
lcall
jle
cmpsb
mov
jae
leave
enter
and
cmc
aam
enter
stos
gs
rorb
ret
push
fidivs
xchg
js
shl
cmp
test
mov
popf
incb
movsl
mov
adc
mov
stos
rolb
xchg
xchg
sbb
sub
outsb
les
enter
mov
dec
add
xor
insb
xchg
push
inc
aas
push
sarl
inc
jbe
cli
mov
roll
pushf
mov
lods
xchg
push
xchg
clc
rcr
aam
lods
pop
jg
fsubrs
mov
add
pop
sub
in
popf
loopne
rclb
aam
lds
int
or
in
push
mov
sbb
cmp
insl
adc
faddl
inc
adc
or
pushf
lods
das
loope
fcoml
icebp
mov
pop
mov
push
jecxz
mov
jno
push
mov
add
inc
std
mov
cmpsl
push
enter
mov
incb
in
std
mov
pop
sub
loopne
bsf
sarl
orl
mov
scas
daa
popf
add
xchg
sbb
push
add
js
push
call
aad
push
mov
and
mov
bound
cmp
aam
sbbl
push
rolb
lahf
dec
icebp
cmp
xchg
add
add
and
push
sbb
cwtl
lret
push
push
push
lret
push
iret
push
xor
scas
js
lcall
dec
dec
lret
and
out
ljmp
sub
call
test
add
push
sub
cmp
jge
enter
mov
iret
scas
inc
sbb
outsl
cmp
std
out
das
cld
popa
ret
cs
push
mov
jo
xor
or
mov
iret
aas
or
js
push
dec
addb
cmp
and
pushf
jno
lock
hlt
mov
add
push
shlb
mov
adc
test
out
fimull
int
icebp
repnz
inc
push
mov
push
stc
ja
jl
mov
movl
pushf
int3
pop
jp
push
inc
jno
lahf
mov
je
mov
dec
mov
dec
fcomps
sahf
test
push
imul
outsb
ss
cmp
ret
jbe
negl
in
jnp
sbb
xchg
jno
lds
add
pop
dec
imul
arpl
cmc
lret
dec
lahf
imul
sbb
ljmp
cmpsb
jae
xchg
std
adc
jmp
xchg
out
cmpl
mov
addr16
xlat
je
repnz
pop
cmp
test
jb
repnz
lret
adc
pop
data16
xor
dec
hlt
cmpl
jbe
test
pop
pop
cld
mov
int3
push
mov
int3
inc
lds
add
loope
fstpt
mov
cmp
pop
inc
mov
xchg
dec
xlat
mov
enter
dec
int3
jmp
test
sub
pop
fwait
js
or
bswap
xor
pop
enter
shl
loop
fs
movsl
sbb
mov
outsl
adc
mov
xchg
out
or
outsl
mov
ss
pop
cmp
mov
mov
adc
jb
mov
movsb
mov
inc
cld
dec
cmp
aaa
enter
jb
xor
mov
mov
xchg
sahf
jns
jmp
outsb
enter
adc
sbb
enter
sbb
sbb
sub
adc
test
shl
jo
lods
sbb
stos
dec
mov
aam
dec
jae
xor
push
mov
add
sbb
hlt
movntps
lea
insb
jmp
js
out
push
dec
dec
or
mov
fnstsw
sbb
xchg
add
jp
loop
and
fs
cmpsl
clc
cmp
or
push
les
add
sbb
lret
ja
mov
mov
adc
aas
cmpsb
mov
add
sub
push
pop
pop
pop
negb
shl
out
nop
mov
inc
jne
lret
add
xchg
pop
push
mov
fmull
jns
out
lar
xor
rorl
ja
xor
adcb
mov
xor
fidivl
push
mov
inc
mov
push
fucomip
imul
xlat
xor
mov
and
fs
imul
inc
in
mov
repnz
jg
mov
cmpsb
lods
inc
mov
movl
pop
xor
lock
xchg
cmp
push
pop
pop
int
mov
std
jle
inc
mov
dec
pop
xor
adc
cmp
les
dec
fcoml
ja
pop
inc
hlt
test
jb
dec
in
pop
test
shlb
sahf
hlt
jmp
xor
pop
pusha
dec
mov
icebp
inc
in
inc
mov
pop
pop
test
cmp
test
rcrl
call
push
and
cmp
popa
pop
push
lea
je
inc
cmp
les
push
xchg
sbb
daa
push
xor
push
pop
icebp
loop
lods
bound
pop
adc
and
cmpsb
enter
sbb
jno
test
mov
pop
movsb
inc
out
push
stos
or
or
jns
dec
in
insb
addl
mov
xor
push
loopne
je
and
dec
xchg
lods
cmp
push
xchg
int3
pop
mov
int
mov
xlat
xor
pop
scas
mov
adc
cltd
dec
cld
jno
leave
je
inc
out
push
scas
pop
push
sbb
test
decl
sbb
adc
adc
mov
mov
xchg
out
xor
arpl
or
dec
mov
pop
in
test
hlt
or
pop
and
jne
stos
lret
flds
cmp
inc
shlb
popa
sub
sub
and
cmpsl
loop
cmc
push
rcrl
push
cltd
push
xchg
test
sub
push
sbb
iret
add
pop
xlat
cmp
push
mov
ret
aad
inc
clc
sub
xchg
adc
xchg
hlt
dec
cmpsl
adc
ss
jne
ret
inc
push
clc
aas
es
mov
cmp
ja
cmp
sub
sarb
adc
test
cs
sar
in
pop
mov
lcall
aam
out
adc
sbb
cltd
enter
je
ret
rorb
add
cmp
int3
add
xchg
push
push
out
pop
xchg
push
arpl
xlat
stc
and
pop
push
xor
mov
in
inc
push
jl
and
xor
enter
aad
xor
mov
dec
movsl
cli
sti
jecxz
jmp
xor
popa
dec
push
out
sub
pop
sub
stos
repz
sbb
out
adc
xor
arpl
enter
addr16
cmp
test
sahf
mov
or
pop
fisubl
shlb
mov
popa
push
mov
nop
xchg
aam
fldl
dec
sbb
movsb
out
cmp
xor
or
pop
inc
int3
push
sub
orl
and
inc
cmp
sbb
jge
mov
cmp
jne
rcll
sahf
push
jle
and
in
jl
jmp
pushf
paddw
cwtl
test
lods
mov
insb
sti
sbb
inc
or
cld
test
das
xor
in
mov
jbe
pop
fisubrs
jbe
jo
aas
movsl
or
sub
xor
pop
lcall
dec
test
dec
daa
pop
lods
sahf
jle
call
je
dec
jae
push
lcall
cmp
in
mov
cli
ss
ljmp
movzbl
ljmp
das
ss
sub
push
jns
lret
mov
test
sub
bound
gs
add
addr16
xchg
mov
and
push
out
in
mov
rclb
jnp
xor
push
or
loope
xor
xchg
xor
stos
cmp
and
or
imul
fadds
out
mov
psubb
xchg
cltd
cmp
imul
jg
lds
sbb
xor
dec
repz
pop
push
push
insb
xchg
or
xor
adc
pop
aaa
repnz
les
cmpsb
sbb
lds
ss
xor
lods
and
xor
cmp
movsl
in
push
cmp
inc
add
ja
sbb
mov
xchg
push
rcrl
popa
subl
dec
mov
lock
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
lahf
push
mov
lods
mov
jno
and
or
mov
sti
xor
xchg
sahf
testb
int
push
arpl
lret
add
popf
ds
lret
mov
and
shll
pop
js
jle
xchg
or
mov
popa
fwait
jno
mov
mov
dec
test
sub
pcmpgtw
pusha
cmp
xor
cwtl
es
sbb
push
mov
pop
or
popa
and
rclb
lock
lcall
mov
lret
add
sub
inc
jmp
pop
call
dec
out
lret
test
lahf
pop
xchg
push
mov
sahf
arpl
int3
push
pop
test
xor
sbb
xor
jmp
push
test
lret
fstpl
adc
loop
mov
sbb
push
dec
mov
or
js
mov
push
xchg
repz
push
mov
lret
icebp
lret
aaa
cmp
pop
fisubrs
push
popf
iret
inc
pslld
popf
mov
addr16
mov
ret
fwait
sbb
pop
jp
add
adc
dec
mov
or
xor
xchg
out
xlat
mov
shlb
int3
dec
mov
cmpsl
cwtl
scas
mull
sti
dec
pop
and
jg
mov
or
sbb
mov
adc
ss
bnd
jge
xchg
add
in
scas
sub
repnz
ja
xchg
mov
je
outsb
jb
fnsave
out
pop
jb
xchg
aad
jo
cmpl
cmp
mov
cmp
popa
inc
or
mov
or
cmp
testb
outsl
push
mul
and
call
sub
leave
mov
scas
cmp
bnd
mov
stc
in
ljmp
dec
sub
and
cltd
xchg
movsl
push
push
push
in
add
call
mov
ja
xor
mov
jo
mov
in
sub
jmp
fistpl
shlb
xor
lods
sub
xchg
cld
xor
push
mov
jge
stos
lea
fidivl
dec
jnp
jp
push
inc
sub
inc
cmp
mov
jmp
rcrb
cli
repz
xor
lods
pop
jb
rcrl
dec
testl
sbb
es
mov
pop
fwait
movl
sti
inc
fmul
sub
movsb
popa
lods
sbb
sub
push
mov
jo
cmpsb
testb
packssdw
loop
mov
fistl
aaa
out
clc
jno
js
arpl
cmp
lock
adc
adc
adc
push
push
fsubr
loopnew
add
sub
mov
leave
es
xor
test
push
add
mov
scas
jno
add
lret
insl
or
sbb
hlt
je
sbb
lods
loopne
or
shr
pop
stos
insb
cmp
mov
push
and
arpl
xchg
imul
sub
push
push
inc
lock
ret
dec
push
xor
adc
addr16
sub
pop
mov
push
pop
daa
xor
jbe
mov
push
lds
and
iret
into
inc
mov
xor
clc
lahf
inc
xor
loope
sbb
xor
pusha
das
pushf
mov
sbb
mov
sahf
test
add
mov
pushl
dec
push
mov
andb
loop
insl
pusha
stos
notl
ret
jg
lret
inc
adc
fs
xor
bnd
mov
and
test
aaa
push
pop
std
dec
aas
into
inc
scas
mov
mov
and
sub
pop
cmp
pop
push
js
outsb
push
imul
cs
mov
and
or
and
rorl
or
test
push
mov
jae
or
hlt
inc
stos
mov
push
out
or
daa
daa
mov
js
ret
jo
cmc
jmp
cmc
shlb
xchg
xchg
pop
sub
out
sbb
or
mov
je
jbe
sbb
cmp
mov
inc
lock
jae
pusha
push
mov
and
inc
xchg
add
pop
in
cs
idivb
movsb
push
push
icebp
test
ret
fdivr
pop
insl
addr16
sbb
mov
push
xor
fnsave
cwtl
dec
scas
fcmove
fs
addr16
popl
mov
popf
sub
dec
mov
lahf
mov
inc
pop
lods
sbb
sar
xchg
ss
pop
fdivrp
aad
sub
sahf
iret
sub
cltd
push
add
scas
stos
push
dec
ret
leave
inc
and
xor
sub
push
sarb
push
fcomi
jno
cmp
lahf
shll
sti
mov
loopne
loopne
bound
mov
sbb
sbb
cwtl
mov
shll
adc
in
jno
sub
pop
incl
ds
addr16
mov
nop
repnz
push
inc
popa
dec
mov
cmpl
ficoms
push
xchg
xchg
lods
adc
mov
lea
xchg
rcrl
or
sti
pop
sub
add
mov
sbb
mov
rclb
add
jno
xchg
xchg
jecxz,pt
loop
sbb
pop
test
inc
fmulp
mov
outsl
push
dec
sti
jb
pop
dec
and
jno
jbe
repz
data16
xor
or
or
adc
sub
pop
cmp
fwait
lret
repz
rcrl
pushf
cmc
dec
enter
clc
cli
icebp
sub
out
hlt
in
les
pop
and
test
jmp
repnz
lods
popf
mov
mov
scas
adc
pop
imul
mov
cmp
imul
cmp
cmp
lret
and
and
adc
cs
push
cli
fimuls
xorb
pop
fdivr
jge
test
stos
mov
pusha
ror
and
in
pop
out
das
pop
mov
mov
and
pop
mov
push
pop
push
mov
mov
sub
inc
lds
sbb
sti
xchg
imul
inc
sub
push
jnp
cmp
out
hlt
mov
pop
lea
arpl
lcall
push
movsl
loopne
xchg
adc
jecxz
cmc
xchg
push
sarl
inc
arpl
push
xor
repnz
pop
add
xor
iret
cmp
mov
or
push
aas
fs
or
data16
sarb
jmp
lea
imul
sbb
nop
rcl
inc
emms
jns
in
sahf
lds
rol
scas
ficomps
pop
aad
ficoms
int3
pushf
cmpsb
out
cmp
ss
add
inc
lret
insl
stos
dec
lret
and
sbb
mov
mov
mov
cmpsl
ja
push
inc
cli
xchg
or
pop
jo
pushf
test
xor
test
and
push
push
mov
nop
aad
mov
xor
sub
imul
fiaddl
add
popf
xchg
test
into
push
sub
lret
shlb
stos
mov
sub
lret
pop
push
mov
gs
cmp
sub
dec
nop
decl
jno
sub
push
push
xchg
push
sbb
push
push
adc
cmpxchg
adc
adc
lds
scas
loopne
mov
subb
scas
fisubrl
les
add
mov
cli
fdivrs
and
mov
movsl
es
inc
cltd
ffree
test
sub
in
jg
clc
add
outsl
adc
and
sub
test
mov
rcll
fucomi
lret
jmp
and
ljmp
shrl
cmc
loope
out
cmpsb
jbe
in
test
mov
test
mov
nop
loopne
add
dec
jmp
fs
lahf
add
pop
xchg
cmpsl
ljmp
sub
hlt
insl
shl
jns
les
scas
and
jbe
data16
jle
into
mov
pop
dec
inc
xor
and
push
jae
push
mov
sbb
int3
push
repnz
enter
jmp
adc
dec
movsb
cmp
cmp
cmc
int
sub
loop
mov
push
insl
jecxz
aas
sub
add
fisubl
jg
sti
imul
cmp
jle
fld
popf
scas
addr16
sbbb
sbbb
mov
pop
pop
mov
pop
pop
sbb
pushf
jecxz
gs
mov
mov
jb
ss
out
push
dec
sbb
cmc
sbb
push
inc
daa
fwait
dec
mov
push
or
test
in
cmp
mov
xor
test
cmp
mov
sti
mov
fwait
pop
adc
xchg
sbb
std
test
sarl
negl
add
in
int
shr
int3
mov
push
mov
push
jp
pop
cmp
xchg
insl
imull
roll
cwtl
scas
movsb
mov
push
or
sbb
paddd
jb
pop
test
rol
sub
mov
pusha
sahf
add
xchg
cmpsb
push
xchg
push
das
out
dec
add
shll
pushf
mov
cmpsl
scas
sahf
aaa
push
adc
cs
and
cmc
dec
adc
inc
pusha
cmp
adc
cmp
ljmp
jle
test
ja
mov
push
sub
fnstenv
insl
sub
imul
das
xchg
inc
mov
sbb
cmp
insl
scas
icebp
movsl
inc
rorb
negl
push
pop
popa
or
jle
cmp
mov
out
adc
loop
es
das
add
xor
adc
jecxz
or
cwtl
lret
bound
dec
leave
push
inc
sbb
mov
jbe
sbb
fistps
xor
sahf
push
xchg
testb
leave
cmpsl
push
xchg
popf
lods
sub
enter
rol
xor
adc
mov
js
sbb
pop
addb
inc
push
pop
mov
sarl
jg
rcrl
pushf
or
mov
sbb
mov
cmp
push
mov
mov
mov
xor
push
cmpsl
aam
cmp
and
out
adc
xchg
dec
or
push
xchg
cmp
loopne
pop
mov
pop
mov
popf
adc
xchg
mov
arpl
aaa
movb
movsb
cmp
adc
hlt
test
out
xchg
mov
subl
mov
lcall
pop
sbb
aaa
mov
test
add
in
fistpl
sub
pusha
add
adc
and
sbb
mov
mov
xchg
std
push
adc
movsb
pushf
mov
ljmp
push
test
subl
xchg
pop
xchg
push
push
dec
xchg
lods
cs
jno
bound
repz
and
out
daa
lahf
mov
mov
cwtl
jl
in
dec
xlat
pop
scas
jmp
das
xlat
jle
dec
add
or
lea
out
fldt
dec
push
aad
sub
test
out
jge
ss
push
push
hlt
and
pop
cli
inc
addr16
jbe
xor
cwtl
push
loop
notl
or
push
push
xor
xchg
mov
xor
sbb
xlat
adcb
cmp
dec
and
or
mov
cmp
jae
xchg
sub
addl
dec
or
mov
push
ja
mov
int
add
int3
mov
push
mov
in
jge
push
ljmp
insl
sub
lds
sahf
adc
push
mov
repnz
insb
mov
push
push
clc
out
or
int3
sub
clc
rclb
sub
sub
and
in
jp
xchg
dec
push
xchg
mov
inc
call
adcl
sub
mov
in
subl
xor
leave
mov
jb
shrl
mul
push
push
add
dec
add
enter
sub
push
ss
pop
clc
outsb
push
pop
in
push
xor
fdivrl
sahf
jnp
fwait
mov
xchg
dec
pop
cwtl
outsl
inc
outsb
dec
out
inc
cmp
hlt
jge
jecxz
fucomp
dec
jmp
xchg
mov
xchg
rolb
rcr
add
addr16
mov
lods
and
into
insl
cmp
pextrw
adc
sub
mov
adc
push
dec
jnp
pop
shlb
jmp
xor
sahf
jns
mov
shrb
out
lahf
mov
clc
and
mov
nop
mov
pop
fdivrs
dec
or
and
xchg
jae
push
daa
mov
xchg
jae
mov
mov
mov
mov
mov
adc
mov
mov
scas
jo
aam
dec
ss
jecxz
sahf
push
xchg
jge
jne
pop
sub
mov
clc
cli
jmp
es
sub
inc
sbb
pop
xchg
arpl
popa
mov
in
jmp
stos
popa
mov
inc
xor
xlat
sbb
add
pop
jbe
pop
sbb
in
loope
xlat
and
pop
cmp
int3
xor
mov
cmpsb
lea
addr16
js
pop
aad
out
dec
int3
push
data16
sbb
es
scas
fmul
ss
call
xor
out
jmp
arpl
or
or
std
stc
insb
cltd
cmc
out
sub
jle
inc
jle
lahf
shlb
in
inc
jae
mov
xchg
dec
leave
movsl
jno
decb
fs
and
inc
fisubrs
decl
push
data16
imul
sbb
test
push
shlb
iret
movsb
aas
mov
fists
xor
inc
jge
mov
mov
lock
sub
mov
fcom
das
lret
or
or
fisubl
mov
insb
jns
mov
pop
test
mov
or
add
dec
sbb
cmp
mov
je
jnp
mov
dec
dec
xor
add
ret
sarb
into
lock
mov
sbb
lret
sti
xor
xchg
sbb
mov
jo
or
adc
loopne
xor
add
push
sub
iret
in
mov
cwtl
dec
cmp
xor
jecxz
int
lea
jns
adc
lret
jo
inc
push
pop
lock
add
addr16
mov
dec
ss
clc
pushf
es
negl
dec
out
adc
popa
push
scas
outsb
loopne
ljmp
or
xor
add
xchg
push
call
or
nop
push
jnp
imul
add
mov
jnp
and
sub
push
addr16
rcr
scas
mov
lret
push
mov
inc
jb
out
cmpsb
jle
aas
mov
dec
xor
adc
pop
int
xchg
mov
ret
jecxz
mov
fmuls
scas
out
repz
lea
in
dec
je
sub
lcall
pop
xor
in
push
movb
bound
cmp
sub
mov
inc
and
fistpl
icebp
mov
movsb
adc
pop
loope
lods
ret
sub
lds
dec
and
lcall
shrb
mov
xchg
dec
ret
inc
cmc
cltd
jno
aad
inc
xchg
aaa
sbb
sub
push
dec
jg
test
xor
nop
sti
adc
mov
std
testl
or
enter
ret
fucomip
mov
xchg
pop
data16
add
push
adc
jns
fdivrs
call
inc
lahf
ss
ja
in
mov
addr16
sbb
jns
or
shl
or
leave
cmp
filds
lock
movsb
xchg
mov
pop
xchg
shll
adc
subl
insb
stc
popa
call
into
sbbl
cld
fwait
sbb
or
out
cmp
stc
push
fcompl
data16
or
pop
mov
push
inc
rcr
mov
sub
in
xor
fdivrl
test
mov
lods
adc
sti
mov
nop
xor
lret
and
xor
push
dec
call
pop
jne
repz
push
xor
mov
in
gs
add
dec
bound
stos
jo
push
mov
cmp
inc
addb
xchg
daa
or
std
pop
lds
push
ds
test
push
push
mov
into
inc
pop
inc
dec
xchg
negl
lret
sbb
push
sub
push
subb
xor
lods
mov
movsb
idivl
loopne
pusha
xchg
ds
popa
xchg
test
lds
xor
dec
clc
dec
cvttps2pi
dec
pop
sub
fistl
and
and
push
push
cmp
sbb
fcoms
mov
imul
aas
cli
pusha
test
add
push
dec
adc
sti
shrb
adc
das
sti
mov
test
mov
xor
test
cmp
mov
mov
movsl
das
cmp
add
sub
mov
mov
jb
dec
movsb
gs
js
negb
xchg
or
xor
push
jno
sbb
movsl
out
inc
cmpsb
arpl
pop
add
mov
outsl
push
lods
daa
fstpl
fcmovnb
sbb
mov
push
out
mov
xor
cmp
sbb
stc
inc
xchg
mov
int
in
jmp
out
jb
add
cmp
fldcw
addr16
test
mov
mov
inc
pop
mov
pop
pop
dec
aam
jp
sbb
ret
pop
jmp
push
push
cmpsb
xchg
dec
mov
pop
dec
decl
aas
cli
punpckhdq
mov
cmp
mov
mov
icebp
ja
push
sar
lock
pushf
bswap
pop
and
cmpsl
push
bound
or
mov
xor
shll
sub
pop
fidivrs
and
std
je
mov
cmpsl
fistl
and
and
jae
xchg
fwait
sbb
out
arpl
push
jle
js
rorb
lds
mov
push
sbb
adc
or
jg
pop
cmp
pop
ljmp
xchg
divl
sub
outsb
inc
pushf
xor
fwait
dec
fidivs
dec
scas
in
or
lds
mov
cmpl
cld
adc
push
nop
mov
dec
or
jl
xor
out
icebp
xchg
mov
test
jno
cwtl
and
push
add
xor
flds
or
es
pop
add
dec
and
sbb
cmpsl
adc
nop
cli
inc
insb
mov
inc
lods
xchg
sbbl
ja
addr16
into
pop
fdivrl
loop
sbb
push
dec
loope
xchg
pop
or
testb
jae
rclb
mov
arpl
push
pop
fistpl
fnstenv
sub
push
mov
jp
sub
je
leave
mov
imul
cmpsb
adc
fadd
pop
jo
adc
bound
andl
push
jp
mov
push
sbb
fnstcw
rcrl
sbb
sub
mov
insl
push
mov
push
cmpsl
pop
pop
rol
xchg
and
ret
sbb
daa
and
xchg
sarl
xchg
aad
mov
jbe
stos
frstor
ret
dec
leave
in
pop
stos
mov
fisubs
loop
and
shl
clc
push
fsts
and
inc
jno
sbb
inc
frstor
lret
addr16
mov
ror
inc
xor
jb
es
bound
cmp
dec
dec
test
testb
hlt
mov
xor
daa
or
jge
sub
stos
xrelease
lret
cmp
and
out
sub
mov
push
fsubl
push
mov
scas
add
inc
daa
rorl
xchg
fiaddl
in
in
test
xchg
push
sub
mov
js
push
pop
pop
das
stos
push
jmp
lods
jne
jge
pop
iret
and
adc
mov
nop
jmp
aam
mov
addr16
lret
mov
dec
jne
arpl
not
adc
push
adc
xor
push
dec
mov
rclb
mov
negb
cmp
sbb
pop
idivl
push
or
jecxz
lock
mov
pop
pop
pop
inc
add
inc
mov
call
loope
pop
cmp
or
movsl
jge
stos
pop
std
jno
call
in
xchg
adc
mov
lea
jl
mov
jl
or
mov
scas
sub
xchg
enter
lods
into
ficomps
mov
shlb
fldenv
andb
in
movsb
les
sbb
jge
dec
orb
add
scas
mov
xchg
fs
lds
sub
jmp
adc
add
push
mov
lahf
leave
jecxz
xorb
ret
or
cmpsb
imulb
jne
mov
xor
loop
inc
sbb
fwait
mov
ficomps
xor
movl
fisttpl
hlt
mov
leave
xchg
add
xor
insl
enter
jae
stos
leave
jp
pusha
xchg
push
add
std
mov
daa
popf
jmp
ljmp
jne
push
mov
push
sahf
mov
int3
sub
mov
push
or
cs
dec
lods
sbb
jnp
push
adc
push
shlb
dec
clc
aas
lret
scas
pop
adc
xor
aam
dec
cmp
and
mov
in
adc
rcrl
inc
lds
mov
pop
mov
or
inc
inc
sbb
movsl
xor
daa
clc
sbb
jecxz
pop
xor
in
push
xor
loope
popa
cmpsb
adc
cmp
and
pop
jmp
cs
aaa
inc
ljmp
cli
sub
not
pop
ljmp
ret
es
jbe
sub
jmp
vpunpcklbw
popa
jnp
arpl
insb
aam
pop
lods
add
adc
xchg
les
mov
outsl
adc
stc
pusha
movsb
into
sub
aaa
pop
xchg
popa
or
hlt
scas
imul
cltd
mov
dec
pop
and
jnp
mov
and
in
outsb
sbb
sar
fsubrs
hlt
jns
loop
add
pusha
mov
push
inc
jp
sbb
cmp
mov
jno
clc
aam
sbbl
xchg
fiadds
hlt
adcb
daa
mov
test
dec
sbb
cld
cmp
and
stc
add
cmp
aas
mov
jb
mov
dec
mov
jmp
mov
mov
and
in
gs
mov
push
mov
aam
ret
in
popa
xchg
and
jb
or
sbb
int
mov
lods
and
add
fisubl
mov
ret
pop
pop
add
or
cwtl
pop
jle
dec
addl
inc
mov
push
mov
mov
lahf
mov
sbb
lret
ljmp
cmp
ja
scas
mov
or
xchg
out
inc
adcb
daa
add
lret
xor
add
pop
nop
jmp
jne
xor
xchg
addr16
fists
mov
sarl
jnp
mov
pusha
ss
dec
aas
inc
loope
push
jle
roll
sti
test
std
push
in
inc
add
or
cmpl
or
ret
int
jbe
gs
cld
sub
xchg
mov
pop
pushf
mov
xchg
inc
loopne
and
push
movsb
dec
roll
daa
inc
push
cmp
sub
imul
and
sub
cld
in
test
sub
addr16
pop
mov
dec
mov
out
push
addl
call
mov
mov
in
push
cmc
enter
xor
mov
add
mov
fidivs
mov
call
cmp
loopne
add
mov
pushf
mov
push
mov
shlb
mov
pop
negb
or
jae
push
sub
or
push
incb
lock
xorb
inc
push
dec
outsb
jmp
cwtl
arpl
andb
push
rol
aaa
sub
sub
or
lret
cmc
xor
in
jg
cmpsb
mull
clc
inc
dec
rsqrtps
in
inc
bound
and
arpl
sarb
sub
leave
stos
push
mov
inc
push
pop
aad
or
sub
cltd
sbb
adc
xor
pop
dec
dec
mov
lret
aam
lea
mov
cli
ljmp
mov
inc
or
loope
push
push
rorl
aaa
inc
fwait
enter
out
inc
and
jp
cmp
or
xchg
cmp
out
adc
cwtl
push
stc
js
mov
imul
dec
lods
dec
fcmovne
ss
mov
add
outsl
and
add
fdivrs
int3
test
shlb
jg
movsl
fucomp
jp
aad
test
dec
sub
lods
mov
add
subb
dec
iret
sbb
push
pop
cltd
jne
gs
pop
in
or
clc
in
xor
divb
test
fstpl
jecxz
mov
xchg
xchg
into
mov
push
and
xorb
loopne
pop
push
ljmp
dec
mov
mov
cld
push
sbb
repnz
ss
ret
cs
or
shll
or
adc
loope
sub
gs
mov
loope
inc
xor
lods
fs
fisubs
dec
shl
jnp
adc
add
cltd
cltd
loopne
xchg
in
rcrl
xlat
mov
xorl
and
jne
xorb
xor
mov
pop
mov
shr
and
outsl
call
lods
mov
enter
jecxz
jbe
sbb
subb
lcall
fimuls
aam
push
out
dec
mov
inc
xchg
mov
aad
adc
jno
rcll
pop
notb
out
jmp
push
sbb
stc
adc
pop
mov
cs
mov
push
xchg
and
je
js
mov
repnz
pop
adc
sti
mov
add
cmp
add
sub
push
sub
mov
mov
lock
movsl
inc
stc
xor
and
sub
mov
imul
divl
sub
bound
call
fsts
or
mull
stos
shll
xor
xor
sub
rcl
mov
leave
cmpsl
enter
das
add
pusha
mov
adc
shrl
in
negl
jl
mov
out
or
sbb
daa
sub
in
push
hlt
xor
stc
mov
push
fsubs
ror
idiv
cmp
dec
mov
mov
nop
add
in
lcall
lea
dec
fxsave
sub
mov
ljmp
cmpsl
out
shlb
add
gs
jle
lahf
movsb
xor
adc
imul
mov
xchg
adc
xchg
inc
and
sub
inc
movsl
or
push
out
sarl
ret
aam
mov
repnz
jmp
sti
lea
test
in
cwtl
pop
mov
xchg
or
dec
cs
or
and
push
mov
in
mov
movsb
daa
cmp
add
adc
fisubrs
and
dec
or
push
inc
mov
icebp
mov
lea
cmpsl
cli
insl
movaps
and
mov
loopne
and
bound
push
lock
xor
in
fwait
ja
iret
cs
mov
inc
repz
push
mov
addr16
inc
xor
repz
mov
mov
mov
cmpsb
and
inc
sub
sub
dec
std
ret
mov
test
stos
mov
add
dec
test
mov
xor
test
out
icebp
rol
jb
enter
fisubrl
adc
inc
outsl
out
aad
sbbl
insl
popa
bound
mov
arpl
fildl
add
add
sarb
inc
sbbb
cmp
xchg
jmp
sub
adc
lods
push
cs
mov
jno
push
mov
push
xlat
nop
cmc
enter
addl
push
mov
pop
and
outsl
adc
stos
cmp
std
mov
jmp
sub
add
adc
xchg
out
dec
mov
pop
movsb
push
jne
or
icebp
pop
cs
mov
and
imull
jb
sbb
in
sar
rcll
arpl
cmp
loopne
mov
dec
mov
add
mov
rclb
sbb
mov
pop
add
das
arpl
daa
enter
mov
cmc
mov
mov
jmp
in
popa
and
dec
cmp
in
lods
addr16
ja
test
movsb
ret
hlt
andb
xor
and
fdivp
xor
xchg
punpcklbw
mov
enter
pop
movsb
xor
mov
loopne
std
ret
imul
pop
sbb
jb
mov
stos
mov
aaa
pop
inc
xor
push
fimull
pop
mov
rep
pop
or
pop
fneni(8087
jecxz
pop
lods
cmc
sub
nopl
push
inc
insl
cltd
lods
insl
or
shr
out
cmp
aad
in
call
mov
lret
cltd
jl
mov
stc
dec
pop
shrl
pop
out
lock
push
ret
popf
adc
jmp
mov
inc
add
cmp
fs
sub
lods
sbb
jmp
ss
mov
ja
cli
mov
in
scas
sbb
jns
aad
loop
mull
lods
mov
dec
js
jecxz
fiadds
testl
fdivl
aad
xchg
ljmp
jge
add
fnsetpm(287
dec
and
mov
loop
mov
add
pop
loope
lcall
xorl
pop
mov
pop
lcall
fsubr
adcl
es
inc
xor
mov
imul
lods
pop
cmp
mov
cwtl
cmc
or
dec
inc
loopne
imul
fcompl
jns
jg
inc
xor
movsl
gs
leave
cmp
rorb
push
sbb
hlt
adc
rcl
mov
shl
jnp
mov
push
dec
push
ret
leave
fst
dec
pusha
mov
movsb
out
aas
or
fiaddl
or
mov
int
push
ret
sbb
loopne
dec
cmp
in
pop
shlb
cld
dec
lret
dec
xchg
je
rcll
pop
push
faddl
sti
mov
pop
xchg
sbb
add
adc
jmp
xor
pop
das
xchg
push
movsb
ret
scas
subl
outsl
mov
in
leavew
xor
shll
jo
dec
dec
test
cltd
ficoml
jae
shrb
test
xor
sbb
fnstcw
mov
stos
pushf
pop
mov
pop
add
sbb
das
cmp
cltd
movsl
lds
mov
xor
arpl
shrl
clc
add
xchg
dec
movsl
xor
mov
ret
in
adc
dec
dec
sahf
loopne
or
and
push
arpl
pop
inc
mov
sti
adc
dec
mov
sbb
scas
std
jecxz
push
push
aas
les
ret
xlat
into
or
push
out
cld
inc
shr
and
in
inc
imul
sarl
mov
mov
out
add
inc
xor
xor
notl
test
ret
pop
mov
sub
sti
repz
mov
cmpsb
xchg
push
and
inc
add
jne
mov
cltd
mov
mov
in
fistpl
lods
in
les
addb
ja
jnp
fcoml
mov
iret
cwtl
mulb
in
fwait
jecxz
mov
inc
sub
iret
mov
sbb
mov
bound
mov
xchg
adc
inc
dec
in
and
cmp
leave
or
popf
cmp
clc
aad
mov
jns
cmc
jge
lock
cs
sbb
push
lea
ret
push
dec
out
lret
sbb
std
jmp
sbb
sarl
ret
or
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
pop
push
hlt
bound
pop
bound
pop
mov
sahf
movsl
xchg
cltd
movsb
cs
rcl
popa
xor
test
call
daa
int
dec
push
aas
iret
sbb
cmp
ss
jne
jl
shl
shlb
pop
icebp
xchg
ja
mov
rclb
loopne
and
mov
dec
fisubs
int
clc
cmc
inc
mov
shl
xlat
repz
daa
icebp
loope
mov
sub
cli
mov
mov
scas
mov
mov
je
xor
loopne
mov
dec
mov
sti
fsubrp
fcmovnb
cmp
mov
ss
cltd
mov
xchg
add
loopw
mov
adc
in
gs
xor
test
jecxz
in
cwtl
push
into
dec
imulb
xchg
xchg
xor
push
push
add
lret
dec
inc
nop
int
push
mov
sarb
sar
enter
aaa
xchg
pusha
cwtl
cmpl
divb
or
fldt
pop
jl
out
xchg
les
ficomps
or
or
and
repnz
pop
or
jo
ljmp
jle
sbb
arpl
push
decb
sub
or
inc
arpl
mov
xchg
rol
aas
cmc
fucomi
and
loop
mov
shrl
arpl
sbb
int
shlb
out
sub
lods
aas
add
frstor
lods
mov
adc
xor
pushl
add
mov
dec
or
push
add
stos
mov
cmp
pop
xor
inc
mov
cld
shlb
aad
xchg
subl
mov
jmp
dec
mov
fiaddl
mov
cmpsb
test
xchg
cmpsb
std
mov
sbb
popf
ljmp
pop
adc
lock
sbb
mov
xor
frstor
pop
push
push
ds
cmp
mov
add
inc
in
fidivs
out
mov
cs
jge
mov
scas
and
mov
mov
je
das
testl
aad
shlb
ss
sub
jno
sti
inc
stos
negl
inc
mov
cld
inc
xchg
xchg
repnz
stc
push
fcomi
sbb
push
sahf
in
sti
push
fstl
push
push
orb
pusha
sbb
arpl
adc
movsl
dec
movsb
jns
test
rolb
inc
inc
lods
pop
mov
ja
cmpsl
ret
outsb
gs
dec
xchg
icebp
jecxz
test
stc
cmp
loope
push
inc
push
rcrb
out
adc
inc
in
or
in
movsb
pop
and
mov
call
push
insb
cmp
or
push
fmulp
mov
or
fistps
sbbl
push
aas
fcoms
rcrb
icebp
mov
xchg
inc
insl
divb
out
and
sub
cmpb
stos
pop
mov
push
jns
xor
fists
gs
mov
out
cmpsl
frstor
add
sbb
mov
popa
mov
sbb
xchg
movsb
lock
repz
mov
sub
cmp
test
mov
and
dec
daa
mov
or
push
push
pop
mov
push
jg
out
fdivrs
loope
icebp
cmp
stc
sbb
pop
mov
pop
in
or
cmp
sub
add
les
fisubs
pop
jbe
push
mov
jo
rolb
hlt
subl
or
shl
mov
mov
jb
fistpll
jge
test
add
movsl
mov
cmp
jmp
pop
mov
outsl
inc
mov
loope
test
xchg
jo
and
jg
or
jae
int
outsb
mov
lret
loop
mov
add
leave
sub
lock
dec
data16
push
into
xchg
xchg
cmp
sbb
adc
add
mov
ret
decl
mov
loopne
out
add
dec
cmp
or
sbb
sub
cltd
les
dec
jne
sub
in
in
fstpl
sbb
dec
in
jl
xchg
stos
and
cltd
push
aas
or
stos
sbb
xorb
push
xchg
cmp
push
test
adc
dec
dec
movsb
xor
orb
daa
ds
mov
jl
fldenv
mov
inc
pop
outsl
cltd
outsb
push
mov
movb
js
bswap
movsb
fldenv
jbe
sub
shrb
rorl
jnp
push
sarl
sub
xchg
sbb
xchg
jmp
xchg
dec
mov
pop
leave
sbb
ja
jge
xchg
js
imul
mov
xor
test
ret
jne
sarl
cli
jbe
push
lods
ja
mov
pushf
pop
mov
jnp
pop
ljmp
dec
mov
mov
push
xchg
cmp
mov
push
int3
mov
mov
cmpsb
inc
xchg
cltd
cwtl
in
push
shll
daa
xchg
mov
mov
mov
jl
int
dec
nop
mov
mov
xchg
sbb
mov
ss
std
xor
sbb
loopne
ret
sub
xlat
add
test
push
xchg
jecxz
repnz
or
mov
adc
aaa
fdivs
sbb
movsl
adc
adc
sbb
daa
jb
adc
or
mov
xor
js
in
dec
lcall
scas
mov
test
pop
add
fwait
test
cmp
aas
popf
out
xchg
insb
and
fnstcw
sbb
pop
mov
insl
jae
pop
inc
fmuls
dec
push
sbb
subl
xor
xchg
pop
xchg
sbb
inc
negb
sbb
xchg
push
push
cmpsl
xchg
pop
pop
in
int3
pop
push
add
add
push
test
pop
push
and
das
stos
pop
xor
push
mov
icebp
cmpsl
pop
mov
outsl
adc
jge
test
lcall
push
inc
aas
and
push
fucomi
mov
cmp
sbb
shll
xchg
xchg
test
fwait
xor
das
pop
push
cmp
mov
outsb
subl
push
stos
add
cmpsb
ja
xchg
mov
cmc
fistpll
test
stos
call
es
cltd
gs
fucom
das
inc
xchg
lods
add
subb
pop
cmp
and
mov
cmc
add
idivl
popf
fistpll
add
xor
in
xchg
int
mov
repnz
xchg
cmp
xor
and
mov
add
ljmp
xchg
mov
sbb
gs
push
jae
call
xor
out
lods
push
aas
mov
ljmp
dec
outsl
xchg
stc
xchg
in
push
cld
hlt
je
outsl
xor
pop
dec
insl
push
cmpsb
mov
sub
ja
push
scas
jne
dec
sub
push
adc
shlb
jge
push
sarl
aam
lahf
jp
insb
bound
cmovg
jne
dec
inc
add
pop
mov
add
je
bound
ja
pop
cmpsb
jmp
fwait
add
or
aad
shr
mov
push
fwait
mov
inc
lcall
pop
jnp
out
mov
jbe
xchg
in
fs
insl
adcl
mov
adc
addr16
cmp
pop
sbbb
mov
ret
cwtl
push
ds
pushf
mov
ljmp
fildll
xchg
popf
adc
pop
or
jb
pop
cmp
in
movsl
cwtl
adcl
push
inc
mov
pushf
dec
xor
insb
sub
in
pop
jg
mov
push
rolb
xchg
lock
fsubl
inc
into
popa
cmpsl
jns
mov
in
insl
in
test
mov
sbbb
mov
adc
cmp
std
jl
push
xor
mov
dec
and
mov
pop
out
mov
adc
jmp
inc
mov
lea
add
mov
mov
xor
xchg
push
shll
movsb
dec
jle
push
mov
mov
out
lret
add
sbb
or
int
xlat
mov
lea
push
cmpsb
push
in
sbb
add
jle
scas
or
cltd
insl
adc
push
shr
or
test
std
nop
pop
mov
mov
cmpl
pop
mov
dec
jmp
add
in
mov
mov
jge
jbe
lods
cwtl
stos
hlt
incb
cmp
dec
in
push
imul
sahf
mov
mov
orl
int3
or
dec
jbe
push
sbb
adc
dec
cmp
xchg
mov
inc
out
xor
sbb
fptan
jmp
xor
or
fnsave
sbb
sti
or
jle
scas
and
and
inc
push
jb
test
rorl
inc
sub
mov
push
lret
push
sti
xchg
rcr
mov
push
scas
sbb
adc
and
jge
dec
inc
repz
sbb
mov
push
out
in
inc
pop
call
mov
cmp
test
or
push
xor
jecxz
cld
or
or
add
jns
mov
jne
cmp
leave
cmc
mov
fsubrl
mov
mov
push
mov
push
cli
popa
sbb
sbbl
adc
pop
mov
jecxz
ja
loop
aaa
inc
xor
and
sbb
lods
test
pusha
popa
aas
rcll
cli
mov
xchg
push
fdivr
aaa
mov
sub
out
xchg
jno
and
outsb
jg
shlb
push
jl
imul
mov
scas
pop
jae
int3
pop
imul
cmc
loope
hlt
mov
mov
shl
pusha
cmp
fistpll
pop
filds
pop
mov
sarb
xor
aaa
mov
outsl
das
addb
push
adc
sub
jb
inc
shrb
imul
jnp
lahf
fnstsw
sub
lahf
movsl
cmpsb
mov
cmp
loope
cmp
push
int3
test
sub
push
test
xor
push
jmp
cmp
arpl
out
roll
mov
loop
divl
pop
mov
daa
dec
jb
in
xor
sbb
mov
dec
sub
lret
fists
repnz
arpl
inc
add
clc
inc
cmp
jo
mov
jmp
ds
mov
mov
and
xchg
je
es
out
push
push
stc
sti
jmp
jne
push
or
mov
adc
sbb
addr16
push
cmp
add
aam
fcoms
cmc
jle
loop
mov
lods
fistps
out
fdivr
add
push
jns
dec
pop
pop
gs
scas
loopne
xor
xchg
jle
jmp
leave
in
out
pop
test
or
inc
and
les
mov
mov
inc
jg
xlat
ss
mov
push
mov
fwait
stos
cmpsb
xchg
mull
shll
jge
loope
add
popa
pushf
jl
repnz
or
int3
fsub
mov
sub
roll
addb
int
mov
jae
xchg
or
scas
sbb
mov
jnp
jg
xor
push
mov
js
aas
pop
call
cmp
arpl
std
add
jl
add
push
jmp
cmpsl
outsl
push
and
cld
adc
sub
mov
add
sub
arpl
jo
or
push
mull
xchg
dec
mov
adc
push
ljmp
and
rclb
xchg
in
sarl
call
jno
mov
les
test
or
addr16
pop
inc
pop
sub
fisttpl
dec
mov
rolb
pop
dec
popa
lret
loop
ret
ss
push
add
sbb
mov
pop
inc
das
sub
pop
dec
xor
pushf
loopne
xlat
and
pop
fdiv
adc
testl
int3
sbbl
xchg
outsl
fistl
push
rorl
insb
mov
js
leave
pop
pop
lret
mov
sbb
test
je
mov
in
mov
dec
mov
mov
jle
sbb
or
push
jbe
xchg
into
dec
xchg
push
sbb
and
arpl
ja
out
pusha
je
jb
push
push
mov
add
mov
mov
pop
cmpsl
fidivl
jle
and
popf
xor
lret
ficoms
push
mov
xchg
xchg
movsl
ljmp
dec
sbb
inc
arpl
cmp
std
inc
pop
sahf
sub
jnp
pop
mov
pop
outsl
sub
inc
push
jne
popa
inc
sub
adc
adc
fimuls
ret
xorl
test
mov
mov
in
xor
ja
mov
adc
movsb
xchg
mov
addb
ja
jecxz
ficomps
pop
xchg
jl
mov
sbb
mov
fwait
mov
jmp
or
je
and
inc
sbb
aaa
mov
inc
pop
sub
and
stos
mov
and
pop
jo
and
adc
mov
roll
lret
fldcw
xchg
dec
stos
mov
push
popa
cltd
fidivrl
out
cmpsl
jne
inc
or
in
jbe
mov
jmp
push
stos
mov
mov
mov
movsl
xchg
outsb
add
mov
xor
mov
mov
mov
cmp
or
jg
ss
cmp
test
movsb
call
mov
lahf
lahf
test
and
std
loope
inc
cmp
pop
add
mov
clc
cmp
cmpsb
gs
cwtl
fidivrl
mov
fdiv
lea
decb
out
lcall
pushf
sub
and
sub
fwait
aam
xchg
out
js
xchg
and
ja
dec
enter
lds
and
xchg
cmc
mov
mov
mov
adcb
not
add
pop
out
daa
inc
mov
pop
shrl
mov
fcomip
inc
imulb
sarl
fninit
daa
nop
jge
dec
jge
fwait
call
and
xlat
pushf
popa
push
int
faddl
insl
mov
push
adc
push
rcr
ja
xor
cmp
dec
dec
mov
sbb
jne
mov
mov
das
js
fnstcw
xor
sbb
jbe
and
es
xor
xlat
cs
adc
dec
testb
out
sbb
xor
insl
dec
sti
arpl
xchg
in
out
mov
inc
enter
dec
xor
lcall
add
sbb
adc
movsl
xor
test
or
xchg
add
hlt
cli
in
inc
in
dec
jns
fs
psubusw
leave
push
in
or
insl
addr16
xor
xor
cmp
pop
jbe
push
loope
dec
mov
or
loop
xor
pop
pop
movb
sbb
dec
sub
sbb
xchg
xchg
stc
push
outsb
jns
adc
sub
inc
mov
out
rcll
fsubrl
fimuls
mov
std
inc
jne
lock
notb
stos
in
mov
jl
inc
add
jge
or
lock
inc
xor
and
jne
sahf
jmp
fucom
bound
fbstp
leave
andl
xor
repz
test
ss
sbb
mov
xchg
push
cmp
sub
rol
xchg
adc
pop
and
cltd
fsub
xchg
jg
movsb
sub
subb
scas
jns
repnz
cmp
sub
push
push
or
fs
dec
and
adc
pusha
int
lret
outsl
xchg
scas
scas
sahf
jnp
into
and
in
outsl
sbb
cmp
jbe
cltd
fistpl
adc
scas
xor
mov
roll
jle
je
add
xchg
push
hlt
xor
xchg
stos
inc
in
add
mov
ret
inc
and
jge
daa
movsbl
or
stos
lea
add
push
mov
xlat
test
sar
es
sbb
jecxz
mov
push
sub
aas
pop
or
cmc
jne
push
divb
addr16
adc
shlb
test
or
shrl
test
popa
jb
add
push
mov
popa
jmp
mov
xchg
cmc
xchg
cwtl
push
xor
test
pop
pop
inc
lret
das
inc
mov
cld
push
nop
mov
jl
int
mov
mov
pop
outsl
out
inc
inc
ret
mov
loopne
sub
inc
ljmp
sbb
jns
sar
incb
sub
dec
negl
movsb
ret
stos
mov
mov
popa
xchg
push
xchg
xor
pop
es
adc
fs
cld
faddl
jns
cwtl
mov
cltd
xor
or
ficomps
call
imull
push
mov
mov
test
mov
rcrb
call
adc
or
fistl
mov
xchg
adc
cmc
inc
daa
repz
fs
xchg
flds
ror
and
sub
in
sub
jno
shrl
cmpsl
and
inc
lret
pop
movsb
inc
pop
repz
inc
in
std
or
sbb
pop
fidivl
push
push
cmp
and
insl
fldt
mov
mov
xchg
add
mov
adc
push
inc
xlat
cmp
orb
adcl
cmp
xchg
rclb
mov
addr16
lods
in
movsb
or
daa
mov
sbb
shll
in
sbb
mov
cmc
cmp
mov
xchg
sti
add
add
imul
inc
js
test
daa
or
icebp
sbb
std
sub
pusha
fidivl
mov
push
and
dec
dec
mov
clc
mov
add
or
pusha
mov
imul
aaa
pop
fcoml
or
mov
and
mov
add
loope
xor
jo
decb
sub
mov
sbb
jl
jmp
xchg
adc
lock
addb
jle
xchg
mov
icebp
std
in
test
sbb
aaa
cltd
in
out
cmp
and
pop
cli
dec
xlat
outsl
and
jns
ret
mov
pushf
in
aam
aad
jbe
aas
xor
pop
inc
push
fs
xor
popa
xchg
in
mov
pop
jb
pusha
mov
mov
mov
lret
adc
ret
fnstsw
pop
ja
cmpsl
cmp
es
in
ljmp
xchg
push
and
dec
pusha
sbb
push
fidivs
lods
aam
push
pusha
out
jno
scas
fwait
aam
les
and
addb
or
xor
sbb
stos
and
loopne
jnp
imul
and
fnstcw
sub
and
bound
inc
jmp
add
push
fiadds
rorl
or
clc
xchg
into
out
push
mov
ficompl
clc
xchg
adc
out
jae
in
stc
sub
aam
rcl
mov
dec
lds
sbb
ss
mov
mov
xchg
and
or
jmp
ss
outsl
push
dec
xchg
aaa
cmp
xchg
adc
popa
jmp
mov
cmc
aam
cmpsb
in
cli
fs
outsl
lcall
pop
loop
hlt
push
mov
xchg
orb
mov
ss
pop
sub
out
insl
add
arpl
adc
adc
push
mov
xchg
lcall
mov
dec
data16
fisubs
leave
jbe
imul
mov
mov
mov
loope
or
push
cmpsl
std
in
push
stc
push
dec
push
cmp
xchg
cmp
pop
fwait
sahf
mov
orb
xchg
sbb
enter
adc
jns
scas
pusha
push
out
push
popa
mov
mov
fldt
jle
repnz
or
stos
push
insb
dec
fldenv
enter
test
cmp
bound
xor
fists
daa
ret
cmp
push
xchg
ret
dec
fistl
or
adc
aad
inc
rorl
adc
pop
mov
dec
ljmp
out
mov
push
push
in
inc
cwtl
xchg
xchg
shr
push
xchg
repnz
test
jge
pop
jg
dec
or
bound
mov
in
add
push
push
loopne
inc
lds
bound
pop
test
out
add
data16
popa
out
dec
mov
cltd
adc
adc
sub
mov
fsubrl
jnp
int
je
aaa
adc
or
gs
inc
lret
out
sub
int3
in
mov
jb
lea
adc
out
mov
mov
outsb
or
shll
xchg
mov
sbb
sub
ficompl
mov
call
icebp
push
test
sbb
aam
loopne
insb
rolb
clc
leave
mov
push
enter
stos
imul
mov
lods
es
rcr
push
push
rol
sahf
adc
test
and
in
jecxz
lcall
dec
sub
in
mov
or
insl
in
xchg
mov
or
es
inc
add
xchg
or
imul
je
jmp
ljmp
or
inc
movsb
sbb
insb
ret
lcall
pop
or
mov
pop
xor
dec
cmp
cmc
adc
sbb
sahf
or
rcr
add
fucom
enter
sbb
mov
lds
fnstsw
mov
ds
inc
add
mov
add
lock
push
xchg
pmullw
mov
sub
pop
add
cwtl
mov
sbb
dec
mov
jns
mov
outsl
cs
sbb
cltd
xchg
adc
dec
fcomi
icebp
outsb
dec
pusha
mov
pop
in
jo
outsb
out
ds
pop
gs
mov
push
jle
add
adc
pop
out
add
and
subb
bound
push
hlt
dec
mov
lock
shll
cs
out
xor
mov
repz
adc
rorb
scas
sbb
popa
sbb
and
push
dec
push
or
adc
daa
stos
push
sub
adc
fld
xchg
xor
in
mov
scas
pusha
sahf
shr
mov
xlat
xor
int
xchg
jp
fidivl
sbb
scas
cmp
out
pop
inc
repz
jne
pop
push
push
mov
pusha
jne
jbe
pop
mov
inc
repnz
add
test
adc
pusha
jbe
add
push
stos
in
rcrl
test
mov
inc
pop
ds
enter
mov
jg
cli
inc
int3
or
ds
inc
mov
fnstsw
or
dec
sbb
addr16
fadds
ss
push
clc
jl
xchg
in
and
push
insl
jno
fmulp
or
or
das
pop
decl
pop
inc
cmp
ficoms
cld
inc
cltd
xor
xor
insb
sub
inc
out
subl
adc
outsb
fcoms
mov
pushf
sbb
pop
mov
outsb
fdivr
mov
pushl
jle
dec
scas
mov
iret
adc
sbb
sub
jo
fmull
and
pcmpgtd
sub
inc
cs
js
cld
or
subl
imul
cli
adc
daa
pop
mov
repnz
cmpsb
push
cs
mov
mov
xchg
jnp
les
xlat
jmp
out
lret
push
push
sub
cmc
push
js
push
idivl
mov
add
out
imul
rcll
push
add
adc
and
pop
adc
mov
rorb
movl
neg
in
stos
int3
cwtl
push
push
ds
test
mov
clc
dec
aad
sbb
iret
out
rcrb
and
sbb
mov
test
xor
nop
aas
imul
pop
gs
lcall
cmc
and
lcall
aad
stos
inc
call
or
in
and
int3
push
dec
or
nop
aam
int3
sbb
nop
int
push
adc
mov
je
add
sti
ss
jl
addr16
inc
sub
sbb
sbb
pop
out
in
mov
xchg
inc
icebp
add
shrb
or
dec
shll
cmp
xchg
lahf
mov
cmpsb
aas
push
cmpsl
mov
mov
das
push
out
sbb
jae,pn
inc
mov
mov
sahf
sub
das
aad
jns
dec
addl
mov
and
mov
or
pop
add
add
ds
ds
xor
lret
scas
in
fmull
sub
addb
mov
jnp
lahf
test
sub
adcl
xor
sub
fistps
cmpsb
sbb
fstl
jae
mov
fs
mov
scas
mov
or
cmpsl
aam
sbb
jns
mov
sub
stos
jge
sbb
rolb
push
das
push
fwait
cmp
jo
fptan
xor
jle
jae
clc
cmp
jle
pop
mov
sub
shlb
jno
ja
nop
jp
mov
dec
add
jl
xchg
mov
leave
movsl
imul
pop
jmp
jae
jnp
xchg
sub
mov
cmp
pop
lahf
fwait
jecxz
xor
ret
push
add
jo
dec
jne
negb
mov
or
sbb
mov
lcall
out
push
xorl
and
testl
xor
mov
mov
jg
push
shl
add
mov
and
loop
add
mov
lret
sbb
lods
cltd
sub
sbb
push
out
test
adc
in
inc
inc
adc
cmp
movsl
dec
sbbb
ja
mov
xchg
lret
xorl
adc
dec
int
mov
notl
insl
add
fistl
adc
xor
lret
pop
sub
sbb
cwtl
stos
jno
shrb
gs
int
sbb
in
lcall
mov
xchg
sbb
pop
xchg
inc
mov
pop
sbb
xor
movsb
inc
xchg
dec
mov
test
or
inc
mov
fistpll
dec
imul
jmp
mov
shlb
inc
das
insb
rcrb
mov
mov
adc
push
or
dec
rcl
sub
sbb
xor
push
mov
icebp
pop
ret
loopne
jnp
je
ja
sbb
ret
test
jecxz
outsb
push
and
jg
and
ret
mov
lods
mov
outsb
add
hlt
lret
mov
aas
fisttpl
add
movsb
in
dec
mov
push
xchg
lds
lret
dec
rcrl
cmp
roll
repz
cmp
cmp
pop
mov
push
imulb
fbstp
pop
outsl
mov
adcb
cmp
imul
jae
ss
cld
aaa
test
mov
int
xor
in
sub
xchg
or
add
cmp
xchg
mov
mov
pop
es
sti
test
scas
in
fcom
mov
aad
jne
push
test
push
out
shrb
dec
cs
push
cmp
mov
or
sbb
lea
mov
addr16
push
pop
les
jmp
popa
data16
mov
cld
push
inc
pop
adc
jnp
outsl
adc
adc
push
inc
clc
leave
and
dec
stc
fwait
xor
mov
call
xchg
xchg
add
dec
or
sub
push
daa
or
inc
jo
and
mov
test
push
je
mov
or
mov
adc
sub
mov
rcrb
push
arpl
xlat
mov
inc
pop
sbb
dec
push
pop
mov
in
add
push
sarl
jbe
movsb
mov
or
mov
popa
dec
jns
out
add
push
mov
imul
mov
cmp
mov
test
mov
mov
imul
inc
and
cld
cmpsb
dec
sbb
popf
sbb
out
js
adcb
xor
les
cli
mov
or
ja
ja
or
push
dec
xor
xchg
loope
inc
call
cmp
xor
vcvttss2si
sbb
mov
pop
jbe
pusha
pop
jbe
mov
xchg
sub
in
out
fwait
push
and
adc
daa
jo
aad
test
js
adc
inc
sbb
outsb
cli
aaa
pop
cmpsb
mov
and
cmp
mov
fbstp
in
push
cltd
outsb
in
lret
xor
or
cmpsb
push
sub
push
mull
scas
cmc
insl
jl
lods
cmpsl
es
int3
ja
xchg
lcall
cli
or
mov
movb
aas
cmp
pushf
jge,pt
repnz
test
repnz
fisubl
push
outsb
call
cmp
mov
repnz
and
sub
daa
xchg
xchg
pop
ss
ret
jno
lret
fwait
cs
dec
add
mov
mov
mov
push
mov
or
movsb
ret
sub
pop
hlt
mov
sar
and
in
push
jge
cmpsl
ljmp
mov
fisttpll
imull
mov
sub
push
or
jae
dec
mov
in
pop
hlt
pop
test
sbb
sub
inc
lfs
addb
ds
decl
xor
out
bswap
out
sahf
imulb
cmpsb
dec
imul
outsb
bound
sti
int3
sbb
pop
movsb
pop
pop
adc
gs
stos
lcall
sub
dec
xchg
mov
xchg
fcom
jle
popf
mov
fildl
lds
sbb
imulb
repz
sub
cmpsb
sub
popa
xor
testb
xchg
mov
or
scas
mov
lret
jge
add
jae
cmp
jmp
push
adc
out
clc
push
push
aas
jecxz
mov
and
mov
ror
repz
cmpsb
fwait
xor
and
cmp
cld
xor
pop
add
aas
jecxz
shrb
push
les
sub
adc
push
and
pop
mov
aaa
push
cmp
in
add
scas
mov
mov
repz
dec
sub
int
adc
fiaddl
lds
inc
mov
insl
mul
ret
xchg
shlb
xor
test
or
dec
pusha
cmpsb
mov
sub
iret
rcll
ret
mov
push
aas
pop
clc
and
pusha
je
call
hlt
mov
push
jo
into
or
ret
inc
lods
cmp
out
and
pop
mov
jae
sub
xchg
hlt
fsubrp
inc
test
sbb
jmp
xchg
mov
and
sbb
lcall
add
inc
rol
imul
xor
loopne
mov
int
daa
cmp
xchg
gs
rol
pop
push
inc
jae
int3
adc
addr16
fs
cmpsb
xor
es
add
sub
addr16
ret
add
push
ds
xor
jns
adc
fwait
add
sub
lret
mov
or
test
or
push
sbb
aad
in
xchg
sub
ljmp
jne
jns
mov
add
mov
es
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
or
shll
jmp
bound
sub
cltd
pop
in
sub
cmpsl
xchg
mov
or
inc
mov
loope
push
adc
das
lea
push
pushf
push
insb
cmp
xchg
adc
fucomip
jg
mov
mov
rorl
or
cmp
mov
out
nop
dec
lahf
xor
inc
sub
xchg
aad
dec
loop
insl
sub
cmp
sub
repz
bound
mov
popf
xor
scas
xor
and
pushf
lods
cmc
test
inc
mov
jno
sub
sbb
das
cs
mov
add
lahf
lahf
pop
adc
and
push
loopne
cmp
adc
imul
dec
shll
jmp
xchg
push
mov
int
out
es
cmp
mov
xchg
iret
pop
pop
fisubrs
add
sub
push
sbb
inc
aam
jns
in
cmp
add
inc
cmp
repnz
sar
repz
jg
mov
sbb
push
xor
scas
mov
push
xor
pop
scas
outsl
cltd
mulb
push
xchg
xchg
scas
and
xor
jge
js
stos
sahf
aam
xlat
loop
hlt
cmc
enter
stos
out
pop
jl
test
pushf
test
sti
jnp
pop
or
pop
gs
xor
cs
data16
cwtl
or
cld
ljmp
jmp
rorb
outsl
arpl
in
nop
movsl
push
pop
scas
mov
ss
mov
push
jns
test
sti
cltd
xchg
sub
sbb
mov
cmp
repnz
mov
pop
sbb
bound
cs
iret
pop
shlb
or
jge
in
repnz
dec
xor
outsl
dec
mov
mov
mov
cmp
dec
add
mov
mov
or
mov
inc
and
jmp
cmc
adc
pop
enter
inc
inc
subl
fisttpll
in
xor
iret
mov
daa
loope
leave
ret
stos
xor
push
push
push
test
pop
inc
push
push
daa
and
mov
int
pusha
jmp
jae
inc
xchg
mov
rcrl
pop
pop
inc
int3
pushf
push
cmp
repz
inc
outsb
xchg
and
sbb
fdivr
popf
mov
ss
std
hlt
popf
je
int3
jae
cmp
inc
arpl
or
lock
pop
hlt
dec
sti
insb
sub
add
jecxz
jo
xchg
test
push
pop
cwtl
js
jge
pop
pop
loope
daa
sub
xchg
mov
addr16
mov
das
mov
dec
int
push
hlt
rcl
ja
loope
popa
test
xchg
inc
pop
sbbl
cmp
out
mov
fisubrl
cs
das
mov
shlb
mov
sub
idiv
push
and
xchg
in
mov
sbb
sub
push
xor
sahf
lods
aad
imul
jp
adc
push
mov
test
cmp
test
in
fcompl
out
mov
mov
sub
pop
ja
mov
mov
out
cmp
mov
xor
jo
jecxz
enter
mov
jae
shlb
nop
dec
push
fstps
aas
fdivp
push
xor
outsb
xchg
imul
lea
mov
mov
loopne
sub
pop
and
sti
or
test
sub
scas
lcall
dec
push
adc
inc
lahf
and
lods
mov
popf
int3
dec
pop
insl
fwait
xchg
scas
lock
fwait
movsb
jg
jmp
xor
adc
cli
outsl
push
cmp
pushf
dec
ret
and
inc
push
and
cmp
mov
mov
mov
inc
icebp
or
mov
and
jbe
jle
orl
inc
shlb
jg
dec
xlat
incl
ja
stos
fadds
inc
mov
insl
dec
outsl
push
and
cmp
call
dec
orb
sub
sti
xchg
movsb
out
adc
cs
add
xchg
dec
insb
clc
ss
cltd
pop
int3
sete
add
repnz
cltd
ret
data16
and
popf
pop
repnz
dec
fldt
mov
pop
pop
add
std
jnp
int
push
mov
pop
pop
pop
aam
movsb
sub
imul
ss
fstps
pop
into
daa
aad
mov
shl
imul
mov
orl
stc
dec
pop
ljmp
addl
jecxz
add
jns
push
iret
jb
jmp
mov
and
dec
mov
jo
xor
add
or
jmp
xor
stc
in
xchg
mov
sbb
rorl
lcall
and
sub
inc
lret
ds
and
push
inc
imul
sbb
adc
xchg
xor
cld
sub
mov
jg
dec
loope
out
add
addr16
mov
int3
mov
insl
lods
or
inc
movsb
insb
adc
push
gs
sbb
mov
loop
pop
rcrb
jmp
or
mov
sbb
dec
popf
leave
mov
push
es
cmpsl
push
mov
pusha
int
subl
mov
and
roll
ret
mul
xor
push
outsb
pop
imul
lcall
pusha
xchg
subb
ficompl
jp
lods
xchg
dec
lret
xor
mov
xor
push
push
or
dec
push
xor
mov
insb
pop
cs
sahf
inc
or
mov
fildll
fiaddl
mov
lods
inc
jge
repnz
mov
add
mov
push
add
pusha
notl
and
add
mov
mov
inc
jno
mov
or
stos
dec
mov
iret
inc
pop
dec
adc
arpl
into
or
jo
push
jl
fwait
sbb
adc
mov
pop
int3
mov
cmp
stc
std
fmuls
lahf
sti
mov
or
sahf
lods
xchg
xchg
mov
pop
lret
jae
insl
dec
test
addr16
xchg
aam
adc
fidivs
cmp
shrb
dec
xor
cmp
je
loopne
fadd
lret
cs
mov
and
push
nop
call
stc
idivl
test
push
fsub
sbb
call
ret
sbb
push
dec
imul
jmp
call
mov
adc
mov
cmpsb
jae
mov
jge
xbegin
push
mov
xchg
dec
push
inc
mov
gs
cmovae
nop
cwtl
sub
imul
scas
xchg
fdivrl
xchg
and
jge
inc
out
jne
or
push
jp
mov
cmp
add
imull
xor
in
rorl
or
jns
icebp
pop
mov
lahf
mov
and
int3
aas
mov
pop
cld
movsb
dec
jbe
sub
sbb
das
and
imul
push
add
shlb
inc
cltd
or
jb
dec
or
cmc
jnp
ss
cmp
jmp
repz
mov
dec
cmp
mov
scas
sahf
cwtl
mov
out
adc
cmc
pop
mov
xchg
mov
add
jmp
add
movsl
lods
xchg
pop
int
int3
test
add
leave
sub
iret
and
jl
inc
fwait
lret
sarb
jp
les
jns
andb
jle
jle
xor
fcomi
mov
push
cmp
push
icebp
add
or
int
cmp
mov
pop
push
repz
lcall
dec
test
imul
gs
or
mov
leave
dec
jp
jmp
pop
testl
out
aam
lock
fnstcw
or
in
xor
adc
jecxz
cmp
cmpsl
pop
cmp
movsl
insl
xlat
jecxz
push
jne
fidivrs
and
roll
sub
xor
movsb
and
jbe
insb
add
std
and
movzbl
jae
test
sarl
dec
sbb
and
daa
int
jno
icebp
sbb
push
adc
jo
ljmp
cwtl
pop
push
sbb
dec
jecxz
add
ret
jae
ss
mov
mov
out
cmpsb
cs
jmp
stos
mov
enter
std
out
or
insl
scas
or
pushf
or
xor
stos
nop
sub
sub
shll
mov
fwait
mov
add
or
shrl
scas
lahf
jnp
cs
scas
adc
xor
ficomps
pusha
ret
rorl
ftst
lahf
imul
inc
dec
std
aam
xor
stos
add
push
jae
add
cmp
loop
movsb
ret
push
dec
jg
ds
pop
shlb
pop
mull
jae
cmp
dec
outsb
data16
cld
push
mov
mov
test
jae
lcall
xor
stos
jo
sbb
arpl
movups
sti
jle
jb
faddl
jmp
mov
sbb
mov
outsl
add
leave
push
cmpsl
repnz
shr
pop
outsl
or
pop
popa
adc
mull
out
rcll
out
in
pop
sti
incb
jbe
loop
std
mov
inc
les
jmp
jg
pop
and
das
jl
pop
pop
xchg
mov
xor
push
ret
adc
xlat
fs
fdivrl
add
pop
in
pop
and
cmp
pop
cmc
cs
and
jg
xor
scas
outsl
pushf
fbld
scas
xchg
xchg
mov
push
and
insl
xor
aam
push
dec
jnp
sti
cmp
sarb
mov
mov
sub
bound
into
sub
pop
jb
lods
scas
outsl
iret
stos
fisubl
fstps
adc
test
nop
jecxz
push
dec
out
add
push
xor
or
loop
mov
sub
outsl
or
dec
ds
decl
xchg
inc
stos
add
add
stc
inc
or
jmp
cmp
punpckhwd
push
adc
stos
sub
jle
jl
mov
test
pop
ds
add
lret
mov
jmp
jmp
xlat
js
and
loopne
jle
ds
jle
dec
cmp
and
movups
popf
push
lret
push
xor
enter
ret
sub
call
cmp
jl
imul
ud1
lock
les
sbb
pusha
cmp
fs
lock
loope
add
pop
jg,pt
test
dec
rorb
pusha
sbb
mov
shr
test
adc
dec
and
in
loopne
sbb
faddl
cmp
fs
adc
inc
xorb
aad
cmpsl
fwait
js
sbb
pushl
adc
inc
test
in
imul
insl
and
jg
mov
scas
jl
lods
mov
mov
pop
dec
mov
jnp
jo
and
subb
cmp
movsl
add
ud2
dec
ds
mov
xor
cltd
fcomp
jnp
lods
cmp
mov
mov
insb
je
sub
cmpsb
add
insl
mov
test
xchg
push
mov
data16
xor
popf
cmpsb
mov
stos
pop
sub
inc
cmc
inc
mov
xchg
std
out
adc
cmp
or
pusha
push
xchg
sub
dec
fcomip
pop
cmp
push
inc
jle
pop
arpl
int3
xchg
sub
sbbl
lods
xor
mov
xor
stc
add
xor
pop
xorb
mov
sub
mov
sub
xor
je
jne
les
rorl
loopne
jle
jns
lea
shrb
mov
inc
add
cmp
std
xchg
and
clc
pop
aam
mov
xor
notl
jmp
jbe
xchg
bound
xchg
pop
cs
in
shrb
and
sub
aas
mov
jp
fucom
adc
ror
js
lock
shll
in
xchg
mov
call
mov
repz
int3
stos
cltd
rcrl
icebp
fs
clc
and
adc
mov
or
fdiv
cmpsl
movsb
gs
fisubs
repnz
sub
arpl
push
lahf
mov
jg
adc
out
test
bound
in
std
xchg
ljmp
test
movsb
leave
or
sub
or
int
mov
sub
jl
adc
or
mov
or
xor
xchg
cmpsb
mov
stc
cmp
dec
loope
mov
dec
push
test
cmp
divb
mov
mov
dec
pop
rcrl
test
jne
lods
sbb
repnz
sub
add
int3
enter
cmpsl
insb
mov
mov
mov
inc
xchg
fstp
adcb
push
stc
adc
or
dec
fnsave
sub
inc
mov
call
popf
mov
pop
mov
fcompl
xor
mov
clc
or
jle,pt
repnz
xor
jmp
repnz
rcll
adc
push
repnz
pusha
imul
rcll
jle
push
stc
mulb
lahf
push
mov
or
mov
pop
pop
add
jns
push
js
cmp
arpl
mov
inc
adc
dec
cmpsb
lahf
sbb
es
mov
loopne
mov
or
and
pop
push
inc
mov
mov
xor
fldl
and
cmpsb
test
jbe
jbe
pop
adc
pushf
adc
ret
jae
call
adc
push
data16
aaa
lods
mov
inc
ror
jmp
xor
jp
sub
add
popa
aam
add
clc
pop
or
cmp
pop
mov
pop
in
xchg
push
fstps
subl
xchg
xor
movl
and
jle
jae
cmpsb
insl
and
mov
xchg
mov
jo
add
mov
lahf
sbb
push
fadds
lea
out
push
lds
pop
les
lods
add
xor
dec
pusha
cmp
jp
mov
xchg
mov
xchg
ja
lahf
js
mov
cltd
pusha
adc
fwait
push
and
push
jnp
mov
add
daa
cs
push
or
xchg
fisubrl
aaa
frstor
pop
cmpsl
xchg
clc
inc
add
xchg
and
adc
leave
mov
adc
cwtl
mov
ret
jo
std
das
je
iret
in
mov
rclb
mov
dec
mov
pop
stc
lret
mov
lods
adc
dec
ret
adc
or
mov
pop
fnsave
cmp
sub
ljmp
data16
pop
adc
xchg
and
fdivrs
push
fiadds
std
adc
das
xor
ds
aaa
adc
jp
cmpsb
mov
out
in
or
pop
inc
fnop
loope
mov
aad
and
and
int
jb
subl
outsb
int
mov
leave
pop
stos
arpl
out
inc
mov
jge
jne
mov
bound
faddl
xorb
divb
outsl
adc
jge
lods
xor
sub
or
fsub
cld
outsl
adc
sub
lea
adc
rcll
mov
mov
adc
repz
aas
inc
pushf
hlt
insl
xor
mov
idivl
mov
sbb
jno
add
mov
movl
push
imul
cmp
jge
sbb
rol
and
je
fmul
aaa
daa
xor
sti
lcall
mov
aas
dec
add
sub
cmp
inc
cmp
ds
dec
push
mov
push
and
mov
mov
aas
jb
test
xchg
test
idivl
es
and
inc
mov
mov
cmpl
hlt
lret
push
jmp
and
mov
adc
into
xor
arpl
or
xchg
out
lcall
push
push
lret
into
cmp
leave
movsb
pop
and
enter
pop
jno
xchg
das
or
aad
adc
fistpl
std
popl
je
and
mov
sbb
inc
cmp
mov
pusha
add
enter
cmp
jmp
aad
push
push
add
push
and
in
test
inc
cmp
popa
test
cmpsb
xor
push
stos
xor
dec
cmc
fmull
or
xor
cmpsb
pop
adc
ja
mov
into
mov
lea
add
mov
addl
add
out
cmp
fdivrs
jb
ret
sub
and
fmuls
xchg
jl
dec
call
push
pop
add
jp
jle
xchg
sub
add
movsl
icebp
fcompl
push
rcll
and
jmp
pushf
loopne
ja
push
cmpsl
and
mov
xlat
rcrl
mov
mov
adc
add
es
and
push
xchg
sar
inc
fistpl
jbe
stos
lods
pop
adc
sbb
inc
mov
cmp
sbb
mov
xor
xchg
fdivrl
mov
cmpsb
mov
loope
scas
cmp
add
ss
or
in
pop
stc
push
mov
popa
fsubl
or
aaa
jb
mov
inc
push
sub
pop
dec
jne
mov
enter
in
push
pop
ds
dec
lcall
out
lcall
out
int
ds
adc
fldl2t
stos
insl
jp
pop
or
jecxz
sahf
call
test
inc
push
cmp
gs
lods
popa
insb
mov
push
stos
int
or
push
adc
add
add
iret
mov
sub
sub
dec
sti
mov
in
xor
pop
inc
ds
nop
add
xchg
icebp
adc
lds
jb
lcall
std
jge
mov
lods
andb
jo
stc
mov
jne
cmp
adc
push
lea
mov
adc
or
mov
hlt
mov
gs
and
adc
xchg
into
jb
jecxz
cmc
lcall
adc
xchg
jnp
push
xor
jb
fmul
jae
cmp
mov
sub
addr16
cltd
leave
mov
pop
in
jge
test
jl
jnp
rcrl
or
in
jmp
add
mov
lcall
cs
subb
mulb
xor
repz
xchg
mov
adc
cli
xchg
test
inc
scas
hlt
std
dec
mov
sti
aam
sbb
fldcw
std
cmc
and
imul
test
inc
cmp
xor
add
adc
cmp
test
icebp
xlat
loope
cld
inc
add
ja
or
out
cmc
out
sbb
xlat
xor
aaa
ror
sub
cwtl
xchg
xchg
js
or
add
insb
push
lock
int3
ljmp
and
sub
jl
inc
shll
sarb
mov
push
jp
push
bound
jl
cmp
sbb
push
push
outsb
lret
dec
sbb
shl
sbb
lret
add
in
sbb
or
xchg
test
xor
call
out
xor
inc
fidivs
mov
push
jno
inc
pusha
imul
outsl
push
or
fsubrs
push
mov
lcall
jecxz
xchg
mov
adc
ja
loopne
loop
mov
hlt
push
pusha
mov
scas
test
push
xchg
mov
cwtl
imul
adc
inc
int3
es
jnp
mov
fidivrs
daa
setb
icebp
jle
mov
rep
adc
add
test
lea
xchg
dec
dec
imul
jl
es
mov
cmp
mov
sub
mov
lock
pusha
mov
std
bound
jno
mov
jae
mov
xor
mov
xor
ficoms
dec
in
cmpsl
aam
dec
add
xor
lahf
cmc
push
pusha
mov
sbbb
ljmp
ret
mull
pop
sbb
sbb
mov
push
cli
push
cwtl
es
xchg
data16
fmull
jae
mov
push
xchg
and
cltd
lods
outsl
xlat
movsb
xor
clc
es
adc
stos
push
mov
and
mov
mov
add
pop
or
lahf
mov
jl
inc
jmp
lret
insb
adc
mov
scas
jmp
cmc
inc
cmp
mov
jp
and
scas
pusha
call
dec
mov
xor
aam
shll
pushf
lret
in
inc
mov
addb
sbb
mov
mov
sbb
ret
mov
mov
cld
popa
jecxz
inc
cmp
mov
dec
inc
jns
pop
inc
jno
rcr
cltd
add
mov
or
cmc
mov
pop
mov
jge
jmp
out
aaa
pop
sub
and
xchg
imul
outsb
into
jp
xor
das
add
std
cs
pop
shlb
push
insb
out
inc
mov
pop
dec
data16
add
pop
adc
rorb
push
jle
dec
gs
xchg
xlat
dec
jbe
stc
adc
lds
mov
mov
in
mov
movsb
lea
fistps
lcall
pop
mov
popa
das
shl
mov
jne
or
je
aaa
push
data16
clc
fucom
call
push
arpl
lock
add
xchg
js
enter
or
ret
aam
and
sub
jo
int
lea
xchg
stos
lcall
lock
mov
push
cld
sahf
daa
mov
push
mov
jae
cmc
sbb
push
js
pop
loop
cwtl
push
jmp
pop
cmp
jne
call
add
inc
fisttpll
les
in
stos
jmp
jno
daa
and
mov
xor
ret
mov
jae
mov
xchg
sub
pop
das
mov
subps
or
nop
out
test
and
cmpsb
out
sbb
fsub
mov
add
jg
lock
fs
dec
fcoms
dec
cmpsb
mov
push
push
xor
fiaddl
push
ljmp
push
and
inc
idiv
adc
inc
ficompl
dec
cmp
daa
push
mov
dec
int
cltd
test
mov
dec
mov
popa
call
and
mov
or
loope
xor
lret
scas
arpl
dec
pop
xchg
loope
mov
lods
dec
xchg
out
adc
adc
cmp
scas
shlb
pop
popa
int3
inc
sub
les
jg
lcall
mov
in
movsb
push
in
je
mov
push
cmpsl
xor
pop
into
arpl
sub
pop
sub
leave
inc
loope
adc
or
dec
mov
jb
or
bound
shlb
arpl
xor
es
xchg
or
mov
xchg
pop
xor
test
lea
inc
xchg
cs
fstps
fld1
xor
cmpsl
icebp
sbb
lods
lock
xchg
movsl
mov
shl
movsb
ds
cmpsb
push
xlat
movsb
inc
fidivrl
in
fisubl
and
adc
mov
popa
add
fists
adc
in
leave
adc
aam
lea
and
jbe
or
mov
dec
shll
mov
dec
stos
scas
fnstsw
inc
into
bound
add
inc
fnstenv
lds
dec
xlat
lret
dec
fisttpl
cmp
jle
jp
xchg
jp
fistl
mov
pop
push
aas
ds
insl
inc
push
sbb
xor
mov
sbb
rcr
fimuls
add
or
mov
pusha
ret
or
sahf
pop
xchg
push
lods
sub
pop
outsb
faddl
stc
add
jmp
out
lret
add
lret
mov
stos
push
aaa
mov
iret
push
dec
jecxz
ss
mov
mov
inc
inc
jae
xor
fisttps
cltd
lret
jne
ret
out
jno
mov
mov
xchg
cmp
fildl
lret
and
jae
mov
cmp
sub
aas
jno
fidivl
leave
ret
push
mov
cs
fyl2x
dec
mov
adc
repz
inc
xchg
stc
test
sub
arpl
lods
dec
stos
not
jbe
stc
stos
jb
pop
cmp
lock
dec
ja
push
xor
iret
pop
sub
push
outsl
xor
andb
xchg
insb
lahf
repnz
adc
sbb
outsb
orl
push
nop
add
cmp
add
mov
xlat
xor
rcrb
add
dec
imul
cmp
loopne
pusha
jns
dec
pop
mov
push
fnstcw
inc
push
sbb
loopne
mov
xchg
xchg
repnz
xor
into
in
adc
dec
xchg
sbb
divl
in
mov
jns
lods
push
int3
ret
gs
gs
push
insb
mov
xchg
mov
out
cli
pop
and
jno
lds
and
shlb
adc
out
cmp
jbe
inc
rcrl
lret
push
bound
sahf
out
out
lcall
lods
sbb
sbb
stos
inc
repz
lods
nop
mov
inc
jbe
jp
fimuls
push
pop
imul
xor
clc
push
push
js
int
xchg
repnz
mov
inc
gs
or
rolb
shlb
aam
cld
xchg
loopne
sbb
add
inc
fsubrl
xlat
mov
rolb
ret
add
mov
push
movsl
popa
imul
pusha
jle
sub
adc
fisubrs
pop
adc
mov
xchg
loope
les
mov
push
shll
jb
jp
mov
insl
imul
in
xor
adc
adc
pop
xor
cmc
push
out
leave
jno
stos
jnp
xor
bound
push
addps
mov
outsl
pop
mov
int
andl
mov
arpl
mov
jg
in
and
cmp
fcomip
inc
ret
mov
mov
call
sbb
adc
dec
adc
pop
in
cwtl
jmp
and
aam
sbb
int3
or
xlat
stc
arpl
rcrb
jl
loopne
ja
pop
out
or
dec
dec
cmp
push
dec
imul
xor
cmp
loopne
dec
dec
push
xor
pop
xchg
jle
cmp
jnp
insl
dec
popa
cwtl
jbe
movsb
lret
cmp
dec
mov
mov
push
jae
inc
mov
sti
push
imul
adc
push
jge
sub
das
rcrb
loope
xor
adc
cld
mov
adc
push
outsl
enter
or
xchg
pop
mov
ss
popa
ss
jmp
movsl
xor
movsl
jae
jno
test
lds
jle
jbe
cmpsl
xor
sti
xor
stc
dec
inc
dec
sbb
lret
sub
xchg
jge
pop
sarb
sbb
int3
int
aam
and
add
adc
pop
sbb
das
adc
mov
xchg
movsb
stos
jnp
ret
mov
cmp
mov
push
cwtl
jnp
jno
cmp
lahf
add
pushf
lock
dec
jp
mov
test
adc
fcompl
popf
inc
cmp
insl
xchg
insl
mov
mov
leave
pushf
cmpsb
pop
add
jge
add
pushf
orb
sbb
hlt
bound
call
repz
test
in
cmp
inc
arpl
mov
ret
jno
adc
repz
or
mov
pop
add
js
das
or
ja
pop
sub
data16
std
add
loope
pop
repz
stos
stc
cmpsl
addl
mov
daa
out
out
cwtl
lea
popa
xchg
inc
stc
xchg
push
cmp
sbb
xchg
hlt
rorl
push
test
mov
jl
sub
andb
inc
dec
xor
dec
sub
jns
scas
cmp
gs
aas
sub
xor
es
bound
rclb
and
mov
incb
add
jle
jne
jno
lahf
or
movsb
mov
cwtl
xchg
sub
jne
clc
stos
cmpl
aas
das
mull
xchg
cwtl
and
sbb
xlat
sub
fiaddl
push
ret
or
mov
adc
sahf
imul
mov
cmp
fs
imul
xor
inc
cld
xchg
int3
pop
mov
call
int
mov
stc
lret
outsl
std
fwait
aam
cmp
imul
les
lods
loop
bound
or
jmp
jge
push
jge
enter
out
jp
add
stos
pop
add
cwtl
sbb
loop
aad
inc
and
mov
pushf
mov
dec
std
outsb
and
cmpsl
fwait
cld
push
rorl
or
xchg
pop
sarl
fisubrs
dec
ljmp
xchg
inc
xchg
mov
add
jge
test
pop
and
repz
in
add
fldenv
fdivrs
mov
xchg
or
cmp
sti
sub
imull
ljmp
shl
sub
jg
ficoms
inc
loopne
sbb
sbbl
mov
addr16
imul
mov
inc
testl
mov
jle
fsubl
mov
pop
cwtl
int
or
lret
adcl
inc
push
mov
addr16
mov
icebp
push
mov
xchg
fdivrs
jne
xchg
ficomps
jecxz
outsb
add
inc
sbb
aad
ficoml
icebp
out
pop
xchg
insl
mov
popa
xchg
repz
nop
in
push
cmp
dec
stc
inc
rcrl
xlat
mov
push
mov
jnp
xor
inc
inc
sahf
mov
int
test
adc
and
xor
notl
sub
popf
push
dec
cmovle
xor
mov
xchg
in
push
or
outsl
jp
sbb
sub
inc
std
gs
or
mov
addl
inc
clc
mov
popf
dec
les
or
sbb
aas
out
xorl
pop
fwait
std
fisubs
cmpsb
xor
bound
in
int3
mov
jbe
loope
jp
lods
push
jl
adc
cmc
test
sti
add
or
dec
mov
pop
sub
iret
cs
jne
popa
rcrl
movsl
loope
cmp
and
xchg
and
cmp
or
xor
inc
rcr
mov
xchg
imul
pushf
inc
mov
std
cwtl
jl
mov
inc
push
xor
and
inc
dec
pop
mov
test
outsl
and
fisubrs
stc
les
inc
cmpsl
xchg
jnp
ljmp
data16
add
or
jl
out
rorl
xor
loope
pushf
in
adc
jmp
jecxz
cmc
add
mov
aam
shr
es
ljmp
sarb
xlat
and
mov
jbe
xor
les
sbb
add
xor
loop
inc
add
pop
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
sbb
bound
pop
bound
add
mov
add
jle
out
ret
shrb
jmp
pusha
adc
icebp
ja,pn
mov
icebp
in
inc
lret
cmp
scas
sub
daa
cmp
repnz
iret
dec
cltd
inc
push
shl
cmp
pop
das
mov
out
inc
fstpl
test
out
adc
mov
add
adc
sbb
add
add
out
mov
sub
int
add
cmpsl
outsl
xor
in
cmp
icebp
inc
cmpsb
ret
push
sub
imul
or
cltd
dec
repnz
jp
insl
jo
mov
dec
mov
aaa
sti
cmc
in
dec
ss
mov
push
lret
pop
pcmpgtd
adc
out
inc
xchg
in
sub
dec
loopne
pop
aaa
xor
rcrl
mov
rcll
lret
in
out
loop
push
ljmp
mov
jb
xlat
lcall
add
or
neg
pop
add
in
les
add
cmp
arpl
jg
and
inc
loop
xchg
jo
mov
sub
repnz
jo
scas
stc
adc
push
aas
or
pop
cmp
insl
lldt
sub
ss
dec
jne
dec
lods
test
push
popf
push
pusha
adc
dec
adc
inc
jmp
add
loopne
mov
scas
jg
sbb
fs
fs
mov
mov
adc
or
adc
js
cmp
aaa
jle
fidivrl
shrb
pop
arpl
and
cmp
or
mov
sub
cwtl
repz
in
hlt
lret
cmp
imul
adc
push
rcrb
adc
push
and
leave
fwait
xlat
fldenv
ljmp
inc
ficompl
inc
pop
ficoms
cli
clc
pop
and
sub
sbb
fisubl
mov
mov
add
cli
dec
sub
mov
mov
callw
aaa
mov
scas
add
ja
mov
xor
sub
push
dec
and
pop
jge
scas
or
and
dec
xchg
push
popl
test
cmc
ret
mov
inc
addr16
fs
std
pop
shlb
loop
dec
repnz
lret
js
mov
push
or
and
jb
ds
xchg
lret
stos
dec
mov
pop
mov
and
pop
mov
hlt
add
pop
inc
lds
lock
xchg
mov
test
adc
adc
jp
xchg
cs
mov
or
cmc
push
lods
pop
outsl
int
dec
xchg
in
pop
or
lret
cmp
xchg
fldcw
les
les
jno
mov
sub
xchg
movsb
xchg
jmp
js
sti
call
push
mov
lods
xorl
cwtl
fldl
add
jmp
imul
out
scas
lahf
out
mov
dec
std
or
adc
lea
or
ja
and
jo
bound
mov
in
aam
cmc
addr16
push
test
out
mov
jge
stos
mov
push
inc
loope
hlt
sub
daa
hlt
xor
lret
roll
cmp
leave
mull
arpl
fldcw
xor
rcrb
sbb
into
jbe
sar
out
test
adc
int
pop
nop
jp
mov
ret
and
outsl
xor
inc
lea
imul
or
and
loopne
sbb
adc
mov
stos
jnp
jae
sbb
fimuls
xor
addr16
xchg
push
stos
add
out
insb
or
adc
xchg
cwtl
pop
push
bnd
push
mov
ds
out
or
cmp
sub
neg
or
das
jo
jnp
fsubr
fimuls
and
push
sar
mov
adc
notb
js
cmp
adc
xlat
push
ret
cmpsl
xchg
pushf
inc
xchg
adc
arpl
movsl
cmp
cmpsb
xlat
mov
mov
jecxz
sub
mov
xor
mov
das
xchg
mov
fmull
xchg
pop
adc
arpl
pop
es
aas
insb
loope
mov
jmp
test
xorl
mov
flds
je
mov
push
mov
insl
call
iret
push
mov
scas
mov
add
ja
fstcw
push
sub
ret
movsb
pushl
pop
arpl
scas
push
xchg
loopne
and
std
xchg
insb
pop
ja
test
mov
pop
mov
sbbl
jo
sbb
in
mov
adc
adc
sub
ja
xchg
divl
js
subl
in
xchg
jp
lret
ret
or
std
add
and
jecxz
cmpsb
arpl
orb
pop
jo
in
adc
daa
inc
outsb
jne
sbb
mov
pop
pop
pop
sub
mov
mov
lods
stos
dec
fs
mov
test
idivl
les
movsb
outsl
lds
jnp
mov
and
inc
fisubl
int3
xor
inc
mov
add
jnp
aaa
aas
mov
mov
out
pusha
jnp
daa
adcb
jne
sbb
mov
sbb
sbb
mov
adc
faddl
lea
mov
mov
push
inc
jle
shrl
imul
pop
sub
pop
lods
dec
nop
mov
mov
ret
loope
scas
xor
inc
mov
xor
mov
das
mov
rcrb
cli
inc
or
sub
outsb
fdivrl
or
loop
xor
sti
sar
dec
pop
in
cltd
aam
xchg
jp
lahf
xchg
inc
lret
push
push
bound
mov
push
in
ss
sarb
pop
movsl
sbb
fwait
call
imul
mov
push
push
shl
dec
imul
sub
push
mov
add
adc
dec
mov
es
rcr
lds
jle
fsubs
pushf
mov
test
jo
imul
mov
and
data16
loop
andb
mov
mov
add
aaa
mov
or
pop
xchg
xchg
push
ja
sbb
cmp
fildll
icebp
jbe
mov
iret
sarl
clc
cmc
sbb
xchg
scas
imul
xchg
insb
rcrl
mov
fs
and
mov
mov
xchg
pusha
data16
add
add
mov
es
dec
gs
insl
loop
push
inc
xor
cmp
shlb
sahf
xchg
and
xchg
in
adc
or
mov
inc
loop
rcr
icebp
out
movsl
shlb
mov
push
xor
mov
loopne
push
ss
add
into
mov
addr16
lock
mov
es
std
add
sti
out
adc
sub
pop
int3
enter
adc
add
jo
jmp
rcl
pop
mov
pushf
dec
mov
mov
mov
adc
xchg
jo
sub
mov
sub
incb
or
pop
aam
pop
nopl
or
or
ss
lea
insl
dec
sub
pop
cmp
out
push
or
dec
icebp
push
xchg
sbb
fsubl
out
test
pop
outsb
fbld
push
in
mov
adc
lock
enter
clc
xchg
mov
enter
ror
stos
in
movsl
and
adc
popl
xchg
stos
mov
inc
popf
pop
pop
inc
and
cmp
add
dec
mov
sti
inc
into
out
mov
aam
out
jb
mov
mov
scas
mov
mov
bound
test
jns
xor
out
inc
mov
mov
fidivrs
xchg
push
sbb
push
dec
dec
dec
fdivrs
mov
jbe
movsl
loope
fiadds
sub
mov
sahf
popf
dec
fstl
mul
pop
jp
push
xchg
clc
xchg
ret
pslld
and
mov
dec
pop
or
and
jns
cmp
mov
mov
movsl
sti
jecxz
aaa
shrb
mov
mov
int3
movsl
lcall
mov
and
test
enter
pop
test
mov
sar
pop
cmp
scas
add
scas
mov
or
repz
adc
mov
js
aas
dec
std
or
sti
lcall
and
dec
movsb
inc
sbb
cmpl
jno
xor
add
sub
hlt
stc
sub
dec
lods
sbb
xor
lcall
int3
js
cmp
test
cmp
sarb
sub
mov
jno
jp
cmpsb
ret
int
sarl
xchg
jge
mov
sub
pop
pop
dec
js
add
push
int3
daa
adc
jmp
loop
lods
fldt
inc
xchg
and
xchg
cmp
lea
adc
or
push
outsl
and
les
dec
mov
jg
mov
sub
test
xor
mov
adc
ror
adc
lcall
add
or
push
inc
int3
inc
jbe
pop
cwtl
fstl
movsl
and
dec
idivb
nop
push
inc
inc
mov
cmp
push
push
sbb
movsl
pop
or
bnd
add
int
ljmp
mov
loope
dec
lret
jmp
in
pop
sub
sbb
push
cltd
or
rolb
cld
push
xchg
add
cwtl
lods
xchg
dec
daa
je
adc
add
std
sbb
scas
xor
popa
fs
sbb
fbld
jbe
stc
cmp
imul
ja
adc
ljmp
sub
stos
mov
cmp
push
cltd
icebp
inc
test
cmp
xor
push
sahf
jo
clc
xor
loope
inc
rclb
in
cwtl
pop
or
sbb
cli
idivb
dec
add
loopne
mov
add
out
xor
in
and
scas
mov
fistps
add
cmpsb
fldenv
mov
sti
loope
mov
inc
aad
xchg
sbb
imul
push
and
cmp
adc
fcmovnb
pop
leave
mov
mov
sub
adc
ficoms
mov
add
jbe
dec
stos
pop
xor
jl
shll
sub
inc
aaa
cs
ja
cli
test
sbb
das
jp
aaa
add
lea
inc
jp
dec
add
xor
cmp
cwtl
push
cli
or
repnz
divl
add
testb
test
mov
aad
and
inc
jb
cltd
ljmp
lods
cmp
cmpsb
not
jp
not
fsts
arpl
push
push
or
into
pop
in
stos
inc
xchg
jbe
dec
xchg
int3
daa
scas
mov
xor
mov
xchg
jnp
int
cwtl
insl
cmc
mov
insl
pop
sti
mov
push
inc
adc
mov
ss
cli
mov
pop
stc
mov
or
pop
inc
outsb
cmp
xchg
sub
xchg
add
sahf
inc
and
shr
mov
inc
mov
xlat
mov
push
addl
mov
push
adc
xchg
std
push
test
out
inc
lahf
and
xor
in
cli
jp
mov
je
xor
dec
movl
js
or
cmp
sbb
rorl
dec
mov
push
cmp
mov
jg
cmp
std
xor
insl
pop
xor
std
lcall
iret
jg
inc
cmpb
mov
push
adc
push
shlb
ja
sti
inc
sahf
mov
mov
or
into
je
xchg
xchg
insl
jnp
sub
inc
rcr
ja
pop
sar
and
xlat
je
out
bound
iret
sahf
mov
loop
lret
cmp
in
push
mov
ds
inc
or
cwtl
mov
add
mov
add
call
push
adc
ficoms
mov
out
dec
std
inc
pop
push
push
or
adc
pop
lcall
dec
loop
hlt
pop
mov
popf
movaps
les
add
into
rolb
popa
push
inc
mov
icebp
out
inc
xchg
adc
scas
sub
ror
clc
add
add
cwtl
sub
scas
clc
fdivrl
pop
rclb
int3
xor
xchg
fbld
or
ja
imul
adc
sub
xchg
inc
fstl
pushf
jl
outsl
inc
es
jecxz
je
push
stos
push
push
xlat
inc
test
push
sbb
add
jnp
aaa
stos
sahf
adc
ss
xchg
mov
stc
lret
loop
xchg
and
dec
out
out
pop
test
xchg
shr
gs
cmp
mov
cwtl
adc
lock
mov
pop
inc
mov
xchg
lret
cmp
je
cmp
push
fs
push
mov
add
mov
mov
lods
rcll
push
xchg
je
jg
std
push
push
jge
and
and
mov
outsb
push
incl
and
mov
shrb
ret
fwait
add
lahf
jnp
sbb
pop
stos
push
bnd
dec
sub
fisubrs
repnz
sub
stos
mov
xchg
add
call
pop
rorb
rcl
sub
push
daa
push
mov
mov
insl
icebp
rcll
sbb
pop
imul
pop
movsl
push
or
pop
mov
push
dec
dec
in
inc
sbb
call
insl
call
mov
popf
mov
lea
or
lret
mov
addl
dec
jl
cs
mov
dec
mov
lret
mov
jl
shlb
xor
lcall
movsl
push
cmpsl
idivb
sub
js
lods
fdivrs
lcall
push
int
or
mov
mov
stos
pop
sbb
jb
data16
fwait
call
mov
xchg
lea
insl
mov
std
xlat
pop
xchg
ret
lock
enter
notl
mov
adc
push
adc
and
aad
mov
int
mov
cwtl
fucomi
dec
in
adc
jns
in
in
outsb
stos
mov
int
and
aam
sub
add
push
sahf
out
pop
sbb
scas
clc
cmpb
shll
mov
clc
lods
pop
pop
test
mov
out
pushw
repz
stc
aas
inc
lahf
popf
cmc
mov
aam
gs
inc
mov
mov
xchg
push
clc
lahf
mov
sbb
adc
xor
mov
lahf
push
jmp
fistpl
sbb
cmp
jmp
sub
outsl
arpl
pop
sub
sbb
dec
inc
leave
inc
and
and
sbb
jmp
dec
pop
push
test
jbe
push
xor
or
test
ret
fs
xlat
push
jle
sbb
pop
sbb
mov
dec
mov
das
icebp
arpl
je
and
loop
mov
icebp
jge
aad
add
shlb
xor
pop
je
scas
cmc
or
pop
aas
push
jl
xchg
std
jo
mov
ss
add
xchg
sub
stos
pop
mov
daa
sarb
lret
jbe
mov
or
jmp
pop
imul
in
mov
iret
jb
aam
repz
shll
push
add
jge
sub
fwait
out
mov
mov
lods
daa
rcrb
pop
jno
and
nop
pop
xor
mov
add
jae
rcll
push
push
je
adc
inc
xchg
lret
pop
aas
je
hlt
loopne
mov
ja
mov
mov
je
mov
js
dec
js
add
stos
xchg
lock
out
popf
mov
sbb
sub
cmp
shll
sbb
test
lds
pop
outsb
cmp
repnz
xchg
and
mov
mov
mov
clc
jp
int
lahf
sarb
insb
jno,pn
add
sar
das
movl
shrl
into
in
cli
aam
ss
xchg
addr16
xchg
mov
scas
outsb
mov
and
out
test
jbe
neg
inc
jmp
sub
cli
add
fists
and
cld
lahf
lret
mov
or
js
or
movsl
adc
ss
psllq
and
mov
xchg
xorl
test
clc
les
les
pop
or
push
in
mov
mov
lods
and
lds
inc
repz
xchg
cs
sub
fisttpll
xor
arpl
jl
ret
push
push
frndint
inc
aam
sbb
jmp
sbb
push
jo
mov
scas
lahf
pop
mov
je
sub
jp
inc
jl
push
xlat
add
dec
sti
cwtl
out
pop
dec
sbb
jb
or
out
ss
loope
mov
test
arpl
add
push
je
mov
xor
es
or
scas
sahf
cmpsl
ja
hlt
inc
dec
sbb
pop
call
sbb
and
stos
inc
movsl
aaa
aas
int3
andb
and
scas
rcll
jbe
pop
jbe
mov
mov
mov
jns
cmp
xchg
xchg
jge
mov
cmp
mov
push
and
push
or
fistpll
jbe
into
bound
inc
cmp
je
mov
fs
pop
fwait
pinsrw
rcr
xor
and
push
sbb
mov
jmp
clc
andl
push
add
je
mov
sbb
outsl
cmp
int3
lahf
or
inc
mov
push
loopne
adc
cmp
scas
test
cmp
cmp
sbb
aad
fsubrl
dec
mov
scas
mov
mov
lcall
jns
inc
jne
mov
in
sbb
mov
push
ds
xchg
push
std
dec
xchg
dec
insb
loope
fs
int3
cwtd
std
mov
sbb
fs
pushl
int
lahf
mov
adc
mov
or
add
stos
mov
add
mov
bound
out
dec
cwtl
inc
adc
jle
sti
into
sbb
jb
and
jb
and
movsl
ret
pop
iret
cli
dec
nop
lods
push
mov
mov
repz
and
mov
push
or
xor
mov
dec
dec
mov
fcmovu
push
adc
int
dec
mov
jle
cmp
jno
bound
or
and
cmp
mov
push
out
aas
sub
fiaddl
daa
mov
push
lcall
fistpll
adc
push
sbb
ja
add
push
lcall
cmp
pop
add
arpl
imul
or
aas
add
test
push
or
xchg
insl
sbb
ljmp
sub
or
jns
xor
push
jns
xor
adc
test
sub
pop
sub
test
cmpsl
mov
out
pusha
or
mov
lock
leave
xchg
fiadds
adc
test
inc
or
cmp
insl
add
inc
mov
jecxz
sbb
sbbb
xor
arpl
shrl
test
es
pushf
xchg
dec
cltd
mov
push
setge
outsb
movsb
lret
push
iret
xor
int
ss
inc
sub
push
and
or
imul
sbb
add
faddl
in
outsb
daa
scas
pop
mov
test
rcr
shrb
mov
testb
push
test
ja
push
lds
jl
leave
repz
ss
out
mov
clc
mov
dec
inc
les
sbb
adc
push
add
inc
sub
push
mov
nop
dec
ss
shlb
cwtl
mov
fsubrs
es
mov
lcall
xor
shlb
push
push
adc
mov
push
push
lds
fwait
movsb
xchg
test
xor
mov
or
mov
sahf
int3
inc
pop
aas
xor
or
out
dec
sub
jge
mov
lods
inc
mov
mov
jns
scas
jmp
shll
adc
fcmovb
mov
sub
push
shlb
xor
nop
mov
jbe
inc
pop
in
and
sbb
adc
sbb
bound
cmp
into
not
ret
in
out
mov
in
push
pop
aas
repnz
daa
lods
clc
add
test
mul
or
mov
addb
and
outsb
clc
mov
jno
lahf
ss
insl
test
rol
popa
aas
sbb
and
es
movsl
sub
movsb
pop
icebp
push
rorb
xor
rorb
add
loope
mov
outsl
imul
sbb
imul
je
rorb
xchg
and
mov
ds
sbb
int3
jnp
push
ret
vminps
jno
or
psubusb
test
mov
loop
test
mov
jae
lahf
mov
imul
push
cmp
cmp
lret
sti
dec
std
addl
sti
loope
aad
mov
out
leave
jp
fidivrl
adc
das
jge
adc
and
and
test
mov
pop
jp
ss
outsb
mov
test
pop
jns
fsub
mov
fnstcw
or
cli
aam
or
jmp
loope
vmovsd
mov
pop
jae
test
mov
les
int
jnp
push
popa
in
cld
xorl
cltd
push
rcl
mov
nop
inc
push
push
insb
fdivrs
and
add
popa
and
bound
push
inc
mov
addb
adc
jecxz
les
insb
and
loop
and
clc
inc
cmp
push
inc
sbb
call
mov
push
rcrb
lods
cmp
push
nop
push
in
dec
ljmp
xor
sub
inc
fdivrl
addr16
fwait
dec
adc
jecxz
cmpsl
add
push
fs
jae
jl
gs
bound
and
cmc
and
outsb
mov
das
mov
mov
shll
insl
pop
mov
mov
int3
aam
std
sbb
loopne
and
jae
addr16
xchg
std
jae
pushf
lock
push
test
daa
jnp
pop
push
cmp
adc
lcall
push
add
sbb
pushf
fsubrs
lods
inc
inc
lahf
outsl
add
pusha
inc
mov
repz
pop
or
bound
add
fadds
xchg
adc
mov
movsb
stos
add
jle
push
stc
mov
ja
push
jbe
cmp
dec
std
fcmovu
xlat
testl
mov
cld
mov
mov
int3
ret
push
xor
mov
pop
arpl
cmp
mov
mov
pop
xor
subl
jae
inc
test
push
xor
in
xchg
push
mov
inc
push
push
pop
adc
mov
cs
out
jge
mov
or
fiadds
jmp
movsb
lret
stc
leave
xor
or
add
sub
push
fadds
lock
fsts
jp
cwtl
mov
stc
mov
jmp
sbb
fidivrl
icebp
mov
out
mov
ss
dec
inc
mov
mov
pop
aaa
scas
pop
inc
sub
rorl
lret
xor
popa
js
mov
push
sarl
test
mov
sbb
aad
les
pop
and
aam
sub
cmp
bound
es
xor
jb
int
popa
movsl
adc
inc
repnz
push
pop
imul
fists
imul
jbe
mov
inc
stc
and
or
or
add
stc
jmp
out
les
inc
iret
cmp
rcrb
fs
fbstp
cltd
pop
jne
cld
pop
push
movsl
or
aad
jno
mov
int3
aaa
imul
and
push
dec
ss
mov
jge
sbb
cmpsb
push
or
imul
mov
push
jg
xchg
lods
adc
repnz
lret
pop
addr16
mov
push
cmpsb
ret
jb
or
shl
ret
cwtl
aaa
jo
pop
aad
cmc
addr16
cli
pusha
mov
pop
adc
mov
fwait
cs
xorb
xchg
pop
ror
cmp
or
sti
adc
or
arpl
scas
test
fcoml
dec
xchg
sbb
push
andl
jnp
or
sbb
popf
sbb
outsl
imul
out
and
push
push
shl
xchg
pop
aam
fwait
in
insl
xchg
test
mov
push
push
jp
pop
inc
cmp
mov
test
adcl
mov
inc
pop
in
cmp
mov
inc
xor
adc
orb
sarb
rorb
data16
push
jo
loop
movl
pop
jb
std
loop
fisubl
jno
movl
insb
mov
lahf
sbb
jbe
out
adc
mov
inc
pop
sahf
lcall
jg
push
xor
loopne
dec
push
mov
fists
push
shll
xlat
arpl
and
jns
stos
or
int
jb
jb
adc
imul
push
clts
daa
jp
xor
lret
das
fxch
jns
mov
dec
fmull
test
shlb
mov
sub
fldcw
les
js
mov
dec
xlat
push
aas
andl
lods
in
nop
push
rcrl
and
dec
nop
sub
cmp
adc
xchg
lcall
or
pop
jo
hlt
sbb
adc
popa
test
sub
dec
and
and
add
std
arpl
es
scas
pop
mov
inc
iret
rolb
je
adc
mov
push
xor
xchg
movsl
xchg
addr16
std
lds
ds
lods
mov
mov
sbb
fstpt
mov
lods
pop
cmc
push
add
loope
insb
jae,pt
cmp
cli
or
clc
sahf
jns
xor
test
mov
rolb
jmp
xor
in
jbe
lods
test
xor
mov
pusha
dec
mov
adc
cmp
adc
insl
cmp
xor
add
neg
cld
sub
scas
mov
sbb
pop
fstps
push
push
jp
push
jg
inc
dec
inc
stc
adc
popf
cmp
mov
sub
push
mov
add
fs
movb
pop
inc
push
jns
xchg
pop
lcall
dec
int3
push
mov
mov
mov
push
daa
pop
inc
mov
and
pop
inc
dec
iret
in
jno,pt
dec
push
xor
je
shlb
test
int3
scas
jb
cmp
inc
xlat
xlat
call
call
push
fwait
loope
lret
mov
fsts
daa
call
mov
loopne
and
mov
ljmp
imulb
test
mov
stos
sub
jnp
sbb
xor
pmaddwd
jmp
cltd
stc
dec
inc
stos
dec
push
shrb
sti
aas
inc
lret
movsl
adc
mov
iret
stc
pop
loop
cli
or
xor
jo
push
int
enter
xor
push
add
jb
les
inc
scas
push
pop
cmc
mov
mov
loopne
sub
addl
inc
ret
jno
xchg
dec
fs
inc
cld
or
out
shll
xchg
jecxz
push
push
jmp
fiaddl
inc
inc
dec
mov
dec
or
sub
out
je
mov
clc
cltd
jo
mov
adc
jmp
out
adc
pop
ljmp
inc
adc
mov
mov
stc
jne,pt
dec
stos
popa
cmpsl
mov
inc
xchg
and
insb
imul
ds
xchg
nop
sarl
and
mov
scas
int3
and
xor
dec
add
adc
bound
push
hlt
dec
or
and
aam
pop
jb
outsb
sbb
in
or
sbb
shl
repz
push
jg
and
dec
sbb
pop
stos
fists
leave
adc
dec
or
push
sbb
add
dec
iret
mov
jb
test
xchg
xchg
xor
ret
push
and
push
movsl
pop
cmp
and
sub
xchg
add
fldt
arpl
push
xchg
addr16
sbb
cmpsl
adc
pop
in
adc
loop
push
mov
jmp
push
mov
subl
test
push
jne
je
push
push
add
enter
daa
and
xchg
cmc
inc
enter
dec
cmp
repz
mov
lods
pop
inc
push
push
jne
dec
jg
pop
push
xrelease
lcall
dec
pusha
dec
cmp
mov
push
sub
cmp
jno
xor
xchg
inc
mov
sbb
dec
adc
pop
test
sub
jb
mov
lds
shll
je
dec
cmp
and
sar
imul
fwait
jg
loope
pop
pop
movsl
push
mov
repnz
cltd
xor
jge
adcb
lcall
push
leave
insb
pop
dec
dec
and
fldl
adc
dec
stos
jle
inc
xor
aaa
xchg
stc
jns
roll
mov
clc
mov
jnp
xchg
adc
test
push
mov
xchg
ficomps
cli
mov
push
jns
mov
push
pop
sahf
pop
push
jmp
pop
test
fdivrs
mov
cmp
cld
push
mov
cs
addr16
inc
pop
mov
sub
fsubs
cmc
xor
xorb
aas
sbb
je
in
pushf
xchg
pusha
mov
mov
adc
lret
or
insl
lea
adc
cmpl
out
insb
jns
inc
sub
add
leave
sbbl
aad
dec
adc
lcall
int3
cwtl
mov
mov
inc
call
xchg
cmp
mov
daa
xor
push
aam
cltd
loopne
sbb
aaa
insl
daa
adc
ss
das
push
and
or
inc
dec
je
dec
add
cwtl
test
dec
adc
fcompl
cmp
cmp
jns
repnz
xchg
fidivs
xor
ds
push
push
xchg
dec
scas
pop
dec
mov
pop
pop
mov
mov
into
xor
inc
add
jge
inc
test
push
mov
fimuls
dec
or
psrad
mov
out
dec
dec
imul
adc
imul
mov
stos
cmp
stc
jl
and
loope
dec
jbe
dec
pushf
sbb
negl
sti
jl
xchg
shll
popa
mov
mov
les
adc
roll
mov
xor
fcomi
and
mov
mov
or
mov
or
mov
add
add
adc
pushaw
lret
notb
xchg
out
pop
rcll
pop
aad
sub
cltd
ret
mov
xchg
cltd
mov
cmp
push
or
push
call
add
mov
push
sbb
push
jo
xor
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
jmp
jmp
bound
jle
adc
das
int
in
out
pop
movsb
ret
fwait
xchg
flds
or
add
test
decl
or
dec
imull
sbb
call
xor
adc
inc
inc
mov
inc
mov
insl
and
push
mov
add
leave
push
rcl
jg
insb
and
int3
hlt
inc
fdivrs
mov
mov
fnstcw
mov
jmp
inc
or
pop
push
sub
call
mov
mov
insb
jae
popa
and
sub
test
bound
lea
sar
xchg
pusha
test
pop
js
lret
fdiv
jl
sti
out
push
cmp
cmpsl
sahf
mov
scas
mov
shll
cmp
pop
adc
cs
xchg
jo
sbb
call
pop
push
lret
jl
xchg
fisubrl
dec
shll
test
stos
pop
sub
xor
jnp
push
push
add
mov
dec
or
mov
movsb
pop
lcall
ficoms
loope
add
repz
jbe
add
inc
or
pop
out
inc
push
repz
inc
stc
lahf
mov
ret
enter
loope
adc
outsl
jno
repnz
adc
insb
fidivs
pop
cld
test
jmp
fimull
mov
add
mov
mov
cmpsl
inc
add
or
jp
jno
and
pushf
cmp
mov
mov
and
hlt
mov
div
mov
mov
int3
cmp
ficomps
mov
fimuls
jo
mov
adc
inc
and
dec
mov
pop
cs
fcomi
cmp
and
add
xor
mov
lds
or
popf
jp
in
mov
icebp
adc
push
outsb
cs
cmp
ja
daa
jns
int3
adc
fcoml
xchg
or
sbb
jo
mov
or
cmp
push
mov
or
shll
mov
mov
push
mov
lods
mov
xchg
ds
mov
stos
dec
mov
mov
cmp
subb
jge
jb
into
fistps
rorl
out
jnp
pop
pop
mov
adc
enter
mov
pop
jmp
adc
shl
inc
fnstsw
mov
insb
mov
pop
mov
xchg
mov
add
adc
cmc
sub
or
faddl
and
sarl
and
or
fucom
arpl
icebp
push
cmpsb
inc
xchg
jmp
mov
adc
sahf
or
daa
dec
inc
push
pop
aaa
pop
jp
sub
in
sbb
test
std
lea
mov
fwait
push
pop
push
inc
mov
fisubrs
push
dec
stos
mov
es
mov
test
sub
ret
lret
das
sub
xor
fsub
sub
jecxz
or
iret
inc
inc
xor
sub
leave
stos
movsl
xor
insl
ds
out
pop
rclb
daa
in
mov
shlb
mov
ljmp
lahf
je
push
daa
mov
and
mov
cmp
sbb
sbb
xchg
movmskps
sti
ljmp
dec
shrb
pop
mov
es
cwtl
mov
in
xchg
jmp
shl
dec
rorb
outsl
pushf
lods
stc
and
jo
push
mov
sbb
cmp
insb
test
daa
push
mov
jecxz
mov
pop
lea
loop
hlt
jge
pop
insb
gs
orb
ljmp
sub
popa
pop
add
pop
cld
outsl
lds
inc
adc
jns
mov
imul
adc
or
cmp
pusha
mov
rdmsr
fisubs
cmp
cmc
cmp
xor
addr16
push
push
jl
push
mov
sbb
sbb
push
push
lock
in
inc
int3
xchg
sbb
test
int
subb
push
cmp
push
shll
or
fs
mov
arpl
jne
data16
mov
cli
and
repz
roll
xchg
xor
mov
clc
pop
push
ret
pop
pop
and
lahf
inc
lahf
jmp
push
out
xor
stos
jne
scas
pop
stos
out
xchg
mov
lods
movsl
mov
cmpsb
into
sti
cwtl
jns
push
stc
test
test
sbb
cwtl
push
push
icebp
out
imul
mov
and
jbe
repnz
push
xor
popf
add
push
fildl
ficoml
je
dec
lret
aaa
fisubrs
popf
mov
mov
ficoml
test
lods
fwait
jbe
cmc
xchg
scas
mov
ss
add
insb
cs
in
fnclex
inc
pushf
fsubrl
cltd
std
mov
lcall
mov
insl
push
push
add
aam
mov
jne
mov
pop
fbstp
icebp
push
gs
sub
jl
fistps
xor
sub
or
pushf
shrl
movsb
pop
sarl
arpl
pop
out
ret
push
frstpm(287
movsb
sub
pushf
hlt
or
stos
ss
sub
adc
xor
enter
ret
lret
mov
ret
cmp
jbe
mov
popa
movsb
das
pop
mov
push
adc
inc
xchg
cli
sbb
adc
sbb
inc
pop
jo
push
popa
icebp
jno
push
jmp
mov
jmp
lods
jl
repnz
setle
mov
add
loop
cmp
mov
and
or
add
jp
imul
mov
test
lds
call
insl
push
popa
icebp
in
stos
push
jbe
in
sub
and
std
push
clc
pop
jae
fidivl
jmp
and
jg
std
scas
push
jge
daa
icebp
lds
inc
fsubrl
xchg
in
xlat
xchg
push
fsubl
stos
sarl
adc
je
dec
dec
cmp
adc
scas
shrb
xor
lcall
nop
icebp
pandn
fisttpll
sbb
jbe
repz
into
and
and
sbb
stos
mov
lock
or
or
aas
adc
cmpsb
lock
pop
mov
gs
jge
popf
hlt
imul
push
sub
xor
scas
sar
adc
dec
xchg
mov
stos
imul
xor
jecxz
and
setge
fucomip
lret
sbb
mov
mov
push
call
mov
and
jnp
cmp
mov
aad
mov
and
add
jbe
or
iret
jmp
mov
js
in
xor
pop
mov
in
mov
addr16
out
sahf
lcall
fs
add
subl
cmp
cmp
aad
inc
push
push
mov
xchg
pop
fisubl
or
xchg
push
iret
push
push
cmp
icebp
sub
sbb
pop
mov
mov
pop
ss
push
lcall
insl
hlt
and
dec
push
sbb
ds
insl
ficoml
mov
in
addr16
fldcw
outsl
mov
push
repz
ljmp
mov
push
dec
cmp
fisttpl
lahf
repnz
cmp
sbb
jbe
inc
lcall
pusha
pusha
or
mov
and
lcall
cli
inc
pop
push
add
orl
dec
shrb
cmpsb
xchg
push
xchg
cmpsb
aad
aas
xchg
xor
push
or
cmpsl
in
faddl
pop
sbb
xchg
lea
mov
bound
out
mov
push
push
mov
dec
lcall
roll
aaa
loopne
loopne
jne,pt
fs
mov
nop
lcall
jle
xlat
pop
fwait
pop
aad
cwtl
mov
testl
mov
shlb
mov
push
test
mov
xchg
fisubrs
cli
jno
pop
std
cmp
std
rclb
loop
ljmp
clc
push
xchg
loop
xor
test
or
jo
enter
ret
icebp
testl
xor
fisttps
jle
inc
inc
push
mov
mov
aas
mov
add
pop
clc
leave
xor
inc
xchg
jg
jmp
stos
inc
ficompl
push
adc
pop
popa
in
cs
scas
pop
subl
pop
insl
cmpsb
or
iret
dec
ret
fs
mov
pusha
insl
lcall
jmp
into
push
dec
sub
int3
sbb
jo
repz
push
push
jb
or
add
xor
xor
jecxz
vmovntpd
sub
jl
stos
std
aaa
in
enter
mov
push
outsl
mov
pop
xlat
loop
push
lahf
sub
imul
pop
jp
cmp
push
loopne
ss
loop
fs
xor
pop
lea
popa
idivb
push
mov
mov
ljmp
leave
fs
mov
add
xchg
bnd
xchg
loop
das
adc
mov
pop
jb
or
jae
adc
loop
pop
pushf
stos
cld
mov
xchg
mov
pop
insb
test
loop
sub
xor
mov
js
sahf
lahf
ficoml
mov
pop
xchg
mov
imul
scas
std
and
pop
and
push
fdivs
dec
mov
jmp
add
lds
jnp
cmpl
popf
add
pop
sbb
cmc
hlt
jbe
mov
pop
mov
mov
leave
push
mov
in
fiadds
cmp
dec
scas
mov
lcall
sub
cli
dec
test
add
loop
movsl
aas
pop
testl
mov
mov
inc
ds
cmpsb
aaa
jg
shrb
repz
sbb
mov
clc
sub
xlat
xor
pop
pop
mov
paddusw
push
pop
mov
lcall
leave
inc
cs
or
mov
aas
fidivl
js
inc
xor
inc
xchg
test
xchg
jae
sub
loope
fiadds
repnz
add
stos
in
mov
cmc
push
pop
add
and
xor
inc
adc
movsb
cmp
cmp
push
cmp
in
orl
jae
pop
lahf
mov
push
scas
aam
nop
sbb
mov
cmp
outsl
repz
ja
or
pop
test
mov
inc
cwtl
enter
scas
sbb
jg
or
ja
xchg
pop
es
daa
mov
and
fldenv
ja
movups
add
lahf
push
xor
ds
xor
lahf
loop
cmp
ret
jne
jge
fcmovnbe
mov
xchg
fstpt
scas
xchg
dec
jb
adc
or
or
mov
ds
scas
cmp
insl
pop
sbb
xor
xchg
or
das
cmp
into
fwait
jg
popa
xor
divl
pop
dec
in
xorb
jno
addb
in
mov
add
or
and
pop
mov
jmp
pop
jns
sbb
mov
mov
in
add
jecxz
aam
test
inc
push
movsl
stos
jo
rolb
mov
and
fimull
sub
or
popa
ss
or
mov
sbb
cmp
icebp
adc
mov
dec
fidivl
or
cmp
mov
loope
movsb
clc
sbb
and
inc
or
sbb
sbb
or
dec
rclb
rorb
xorl
cmp
push
pushf
in
int3
data16
xor
pushl
int3
fistps
dec
dec
dec
gs
xchg
ja
cmp
shrl
inc
stos
mov
or
dec
fwait
lods
sbb
loop
inc
icebp
mov
push
ja
xchg
dec
mov
loopne
jnp
mov
daa
push
jbe
pop
mov
mov
cmpsb
or
cmpsb
jns
fmull
paddusw
sbb
js
lods
jg
jb
in
fwait
xchg
pop
stos
xchg
dec
fwait
jae
cwtl
icebp
jne
lcall
imul
xchg
sbb
ror
sbb
pusha
sub
into
mov
lahf
sbb
aam
push
out
add
das
xor
imul
cli
repnz
mov
repnz
jnp
std
insb
add
in
add
xchg
stc
cmp
out
xchg
inc
popa
mov
or
insl
dec
aad
push
push
repnz
aad
cmc
daa
pop
xchg
das
jge
or
int3
out
cmpsl
data16
add
pop
data16
adc
ljmp
sbb
mov
cmpsl
pop
adc
hlt
js
cmp
test
xor
scas
mov
in
adc
inc
pop
mov
sbb
popf
lar
cs
inc
ds
sbb
sbb
inc
sbb
insl
jl
inc
push
outsl
and
iret
shll
outsb
repnz
aam
cvtpi2ps
mov
inc
das
popf
movsb
mov
jo
pushf
jecxz
lea
js
pop
push
pop
pop
add
cmpsb
xchg
dec
rcrb
dec
mov
mov
lds
ljmp
loope
sbb
pop
or
adc
pop
ret
inc
inc
xor
aad
pop
lods
iret
nop
out
xchg
lret
cwtl
fs
xchg
fnstsw
std
test
das
and
mov
jnp
adc
adc
sub
adc
jo
pop
sahf
jnp
xchg
rcrl
jle
into
outsl
xor
notb
test
sbb
sbb
cltd
inc
insl
sbb
dec
mov
mov
xchg
xchg
out
and
inc
scas
xor
lfs
popa
icebp
cs
and
mov
cwtl
jp
std
xchg
add
faddl
outsb
sub
iret
sub
aad
je
jl
add
adc
cmp
popa
andl
push
in
mov
cltd
lea
notb
lea
sahf
mov
fldt
mov
xor
mov
mov
mov
dec
fwait
scas
out
push
lea
cmc
cmp
insl
jno
cli
mov
mov
int3
pusha
es
mov
add
adc
cmp
out
cmp
pop
push
insl
sbb
sub
push
mov
mov
fwait
lret
lea
es
dec
or
gs
xchg
dec
fdivl
push
roll
mov
inc
lret
push
mov
lret
arpl
cs
dec
sarl
cli
and
jle
dec
jne
xchg
mov
movsb
and
out
lea
cld
mov
xor
xor
push
fisubl
cli
push
insb
int3
add
ja
xchg
or
jae
mov
sbb
lcall
xorb
out
pop
call
insb
mov
jle
scas
sub
dec
js
lret
scas
es
xchg
lods
outsb
inc
push
mov
push
subb
inc
imul
or
cmp
les
cld
test
jo
inc
fsubrs
mov
xchg
xchg
jle
ret
sub
aaa
je
cltd
lret
and
sti
gs
mov
lea
xchg
inc
je
aad
and
xchg
nop
inc
xor
std
jo
pushl
outsl
push
je
jge
pop
mov
test
push
mov
mov
dec
add
lret
pop
inc
dec
fnstcw
cmp
call
icebp
pop
or
in
mov
sub
int
icebp
movsb
jge
sub
aad
mov
jo
movsl
pop
imul
pusha
xor
decl
int3
mov
pop
push
and
mov
push
into
inc
vorps
test
cmp
popf
das
mov
jne
out
inc
sub
pop
xchg
pop
xchg
push
mov
test
jle
cmpsl
ja
mov
hlt
movsb
adc
icebp
sub
mov
shll
ret
stos
repnz
shll
mov
lret
pop
push
add
xchg
int
loopne
fbstp
stos
xchg
call
xchg
inc
data16
pop
lret
inc
adc
push
mov
inc
hlt
push
jo
mov
mov
jnp
pop
daa
outsb
push
scas
orl
xchg
and
xchg
fnstenv
fwait
mov
lahf
mov
sbb
lcall
pop
and
test
jecxz
inc
cwtl
stos
xchg
lret
leave
arpl
fsubrs
xor
bound
cmp
test
icebp
test
xchg
push
xor
xchg
int
mov
xor
adc
dec
mov
imul
or
cmpsl
push
icebp
clc
add
cmp
adc
movq
pusha
lds
insl
jno
addr16
dec
cmpb
das
sub
sarb
cld
sbb
jmp
pop
stc
sub
xchg
ja
cmpl
cld
mov
sbb
pop
mov
test
ss
inc
dec
fists
aam
push
mov
popa
push
ja
movb
pusha
icebp
lds
sub
out
ret
aam
pop
scas
inc
test
xor
cmc
das
cmpb
in
out
test
out
aas
dec
push
dec
cmp
xor
fldl
mov
xchg
sbb
test
jae
stc
fdivrs
clc
lcall
aam
pusha
push
lods
test
cmp
std
sub
bound
or
imul
test
adc
jb
movsb
push
fsubl
fs
insl
lea
fimull
push
add
out
pop
cmp
lahf
arpl
xchg
scas
add
add
mov
xchg
andb
fisubrl
adc
hlt
dec
adc
fsub
cmp
movsl
loope,pt
mov
sub
mov
push
das
mov
jno
and
pop
sti
pop
mov
mov
inc
jbe
out
mov
outsb
js
stos
push
jnp
pop
and
xor
and
xchg
jl
inc
outsb
push
xchg
push
mov
into
mov
xor
mov
xor
lcall
mov
pop
pop
notl
aas
dec
cmp
push
lock
xchg
xchg
fldt
inc
jle
lds
fwait
out
inc
inc
arpl
jp
mov
ret
into
scas
and
cltd
xchg
pop
in
mov
shlb
clc
dec
loope
mov
mov
addr16
icebp
outsb
loopne
lret
mov
mov
or
cmp
mov
test
sub
orl
cmp
nop
aaa
mov
movsb
jecxz
int3
jle
cmpsb
xchg
push
mov
and
loopne
dec
cmpb
push
hlt
or
xor
dec
mov
mov
je
popf
push
dec
push
fcmovnb
rcrl
enter
pusha
pop
sub
add
mov
jne
lods
add
imul
jno
aad
testl
jbe
je
and
mov
sub
dec
jns
pop
paddq
mov
push
shrl
dec
push
ja
cmc
repnz
jbe
dec
sbb
mov
xchg
adc
mov
inc
push
clc
in
pop
mov
and
pop
iret
fs
lahf
jns
fisubs
pop
nop
test
enter
push
les
imul
clc
into
add
jg
mov
cs
xor
test
xrelease
repnz
pop
add
cli
add
cli
inc
ja
loop
fstl
roll
dec
rcll
mov
xchg
stos
pop
call
sbb
xchg
enter
jb
or
pop
pop
les
pop
clc
sbb
call
fcomps
ja
in
pop
mov
int
adc
in
push
fidivrl
clc
sbb
mov
iret
dec
add
xchg
shlb
bound
add
js
icebp
pop
in
mov
rcrb
adc
inc
aaa
mov
inc
lret
sbb
and
into
mov
in
and
add
jae
add
sub
fidivs
xor
pop
pop
arpl
mov
sub
dec
in
jle
xlat
enter
mov
movsb
arpl
xor
sub
lcall
mov
sbb
dec
popa
shlb
js
mov
jecxz
mov
pop
xchg
daa
mov
bnd
xchg
adc
mov
add
imul
dec
stc
in
inc
mov
add
or
fcomps
jne
ds
mov
aas
sub
push
pop
pop
mov
lret
ljmp
ljmp
cmpsl
jno
cmp
mov
in
pop
rcrl
inc
popa
adc
scas
lret
or
addl
push
icebp
push
add
stc
idivl
or
dec
sub
mov
stos
cmp
mov
or
cmp
push
sbb
mov
jns
mov
mov
xchg
inc
cs
xchg
faddp
add
orb
mov
inc
xor
mov
daa
push
dec
cmp
imul
jns
adc
popa
or
add
and
xchg
rcr
popf
adc
out
xchg
mov
pop
lods
repz
int
jae
test
mov
ljmpw
adc
and
pop
js
adc
cmp
push
das
dec
jle
jge
roll
xchg
icebp
jge
dec
cmpsl
pop
rcrb
orl
inc
jl
sub
call
xchg
xchg
cs
repz
lea
sub
insl
test
xchg
fadds
xchg
lcall
mov
imul
xchg
mov
push
pusha
cltd
jo
popa
daa
pop
jg
addr16
xchg
sbb
aam
and
pop
stc
imul
call
fs
mov
adc
aas
jge
pop
inc
and
mov
rolb
cltd
sub
cmc
test
sbb
sahf
add
push
repnz
and
pop
cmp
mov
lods
ret
inc
leave
pop
arpl
decb
sbb
inc
bound
push
inc
sub
cwtl
sub
hlt
sbb
call
xor
es
lcall
test
or
enter
pop
fdivl
fsubl
iret
inc
or
cmp
scas
stc
mov
aad
fdivr
dec
pop
sbb
sbbb
dec
cmp
sar
cmpsb
adc
cmpsb
and
decl
or
je
leave
mov
mov
mov
mov
into
adc
int3
sbb
xchg
dec
shrb
push
sbb
inc
dec
jle
mov
adc
mov
cs
daa
xchg
and
or
aaa
inc
pushl
xlat
sahf
inc
cmc
imul
mov
adc
mov
pop
dec
sbb
stos
sahf
push
fdiv
cltd
faddp
xchg
inc
cmpb
cmp
ljmp
jl
jg
mov
sub
xchg
xor
xor
lea
jl
mov
push
push
mov
push
insl
mov
sub
jge
jno
add
into
rcll
je
insl
adc
sub
mov
adc
or
sbb
loop
cmp
xchg
pop
push
mov
mov
je
clc
repnz
and
hlt
mov
cmp
out
fsubl
mov
ljmp
inc
sbb
mov
cmp
add
push
sbb
add
mov
push
jns
lock
add
loope
xchg
xor
lea
xchg
adc
js
jbe
faddp
or
icebp
xchg
inc
adc
cmp
push
scas
sub
mov
and
pop
xchg
ds
push
cmp
or
and
inc
push
pop
dec
cmc
ret
or
shlb
mov
dec
and
fnstenv
aam
movsb
adc
jp
fiadds
add
mov
dec
push
add
pop
mov
repnz
test
pop
jl
push
mov
outsl
mov
mov
call
adc
outsb
inc
xchg
movsl
pop
loop
pop
les
sub
outsb
push
loope
inc
sub
pop
les
sti
jno
sub
or
jne
punpcklbw
xor
in
add
and
aad
jb
mov
mov
adc
mov
fsubrl
sbb
xchg
fsubs
movl
mov
enter
jne
jp
mov
faddl
sub
cltd
push
xchg
xchg
push
loop
rorl
mov
or
repnz
jge
cmpsl
notl
test
enter
and
mov
adc
adc
insb
sub
or
hlt
push
jmp
mov
fidivs
inc
and
jge
or
test
enter
cli
into
inc
dec
gs
pop
sub
xchg
push
shrb
outsb
int
mov
lods
dec
jmp
xchg
and
stc
lret
stos
sbb
ret
enter
dec
pop
inc
mov
push
push
dec
mov
pmulhw
push
jecxz
outsb
insl
add
repz
pop
lods
jge
push
and
notl
inc
jbe
rorl
mov
popa
loopne
xlat
ljmp
mov
fcoms
jl
nop
int
ds
add
xchg
das
jmp
loopne
test
shrl
lret
fidivrs
imul
int
jbe
cmp
nop
outsb
xor
sbb
push
ficoml
movsb
inc
pop
inc
mov
push
jb
jp
cmp
pop
dec
pop
aad
push
mov
adc
das
test
mov
and
jbe
fidivs
sub
sbb
pop
aas
xchg
push
xchg
mov
loop
jbe
lods
movsl
and
push
cwtl
fwait
sbb
xchg
mov
rolb
push
add
aad
inc
mov
sahf
xchg
data16
in
sub
jg
stos
ret
push
bnd
orb
adc
pusha
jno
fnstsw
jnp
ljmp
addr16
mov
outsl
stos
cwtl
shrl
cmpl
wbinvd
bound
test
filds
mov
in
xchg
add
int3
pop
cld
cmp
mov
mov
orl
or
and
and
imulb
mov
jmp
cwtl
leave
out
rcll
mov
ds
mov
sahf
mov
in
stc
int
mov
shl
pop
cmp
fdivs
jecxz
ja
cmp
addl
loop
xor
mov
movhps
call
mov
in
mov
and
aam
ja
push
repnz
mov
iret
or
shrb
mov
mov
cmp
dec
lds
jge
inc
cmp
loop
imul
or
push
enter
test
jns
daa
and
mov
js
mov
xor
test
cltd
xlat
sub
cmpl
jbe
cmpsl
ljmp
or
pusha
xor
mov
cmp
cs
in
sahf
inc
and
cmp
adc
stos
stos
jle
cwtl
sub
stos
adc
adc
aam
lds
cmp
sub
lcall
cs
jb
lea
sbb
pop
cld
add
inc
lea
sbb
popf
adc
mov
js
push
aad
cmpsb
add
insl
jno
ja
rcl
popf
and
xchg
inc
or
orb
leave
jle
mov
rclb
pop
lods
push
mov
push
fs
inc
lcall
xlat
mov
lods
popa
imul
sub
shrb
inc
and
sub
mov
adc
repnz
movsl
out
ljmp
jecxz
in
add
sti
xchg
cmc
jl
sbb
xor
xor
hlt
ret
inc
xchg
mov
xor
push
in
jecxz
add
out
cmp
insb
fstpt
xor
loope
inc
mull
xchg
pop
test
repz
dec
rorl
adc
fwait
int3
ficompl
out
inc
mov
pusha
mov
or
in
aas
daa
test
mov
dec
popf
aad
and
sub
repz
cmpsb
dec
sbb
pop
shlb
cmp
mov
add
dec
ret
push
aaa
out
and
push
test
jnp
idivl
faddl
ds
out
jl
adc
mov
out
mov
scas
xchg
cwtl
cmpsl
pop
arpl
jns
jb
cmp
loop
iret
adcl
xchg
and
add
mov
sbb
idiv
ds
and
bound
mov
pop
sub
add
out
pop
fwait
mov
das
inc
jg
pop
mov
jge
aam
dec
pop
lret
in
ds
add
sub
out
lcall
sti
sahf
dec
sbb
push
fistps
data16
leave
int3
dec
mov
pop
outsl
pop
add
cmpsb
leave
sbb
movsb
inc
jo
mov
mov
cmp
mov
or
pop
fisttpll
test
sub
lods
fimuls
pop
lods
jecxz
add
add
outsl
lock
cmc
ds
xor
fsubl
in
dec
and
adc
pop
adc
iret
pop
mov
hlt
popf
mov
mov
mov
cmpxchg
stc
loope
pop
jbe
jo
add
in
in
in
and
mov
sub
out
or
aaa
hlt
test
xor
xchg
lret
pop
fadd
and
shl
or
push
mov
ffree
pushf
jge
push
aad
xchg
adc
fwait
adc
or
movsb
aam
jns
mov
cmp
dec
je
mov
jle
fcomip
daa
lcall
jp
sbb
mov
and
stos
mov
in
fwait
lcall
jmp
out
mov
outsb
cmpsb
jle
arpl
in
dec
push
mov
push
xor
fisubrs
out
fldl
mov
rcll
mov
in
or
dec
dec
stos
jb
mov
test
push
icebp
xchg
mov
lahf
lret
leave
sub
cmp
sub
lcall
test
pop
cmp
test
push
jb
cmp
movsb
mulb
pusha
cmp
add
sti
icebp
pop
aas
mov
mov
mov
into
popl
xchg
xchg
sub
push
pop
out
add
sub
dec
lcall
out
sbb
add
outsl
add
popa
mov
mov
and
hlt
cmp
sub
sbb
sti
jae
ret
pop
jbe
aad
scas
lock
ja
lret
sub
mov
sbb
xchg
fisubrs
cmpl
inc
xchg
add
sbb
xchg
loopne
test
xor
imul
jns
or
pusha
cs
in
js
movsl
lahf
sbb
push
pushf
inc
push
jns
inc
mov
ja
mov
and
dec
mov
fdivr
popa
adc
lea
sbb
xlat
push
pushf
addr16
scas
cmp
test
adc
imul
ljmp
scas
int3
decb
stos
les
stos
cmp
mov
mov
jl
loope
ja
popf
movsl
jmp
mov
jno
loop
push
test
or
bound
dec
mov
iret
pop
nop
daa
adc
pop
adc
popa
stos
cmp
and
int
xchg
mov
ficoms
je
fidivl
xchg
out
jl
jnp
xchg
pop
pop
xchg
or
sub
jbe
pop
out
push
add
bound
in
and
jb
rclb
icebp
into
mov
inc
mov
sub
notl
cmp
daa
jns
xchg
dec
add
into
push
int
enter
aaa
jl
rclb
mov
xchg
pop
or
dec
je
shrb
pushf
int3
inc
dec
mov
dec
or
out
add
jp
test
mov
push
popf
or
pushf
mov
imul
repnz
mov
add
push
out
subl
rolb
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
push
jns
jge
popa
rcrb
dec
lds
out
fmuls
mov
dec
scas
shll
leave
adc
scas
testl
jp
mov
lock
jno
outsb
aad
fnstsw
mov
lahf
cmc
or
adc
jmp
int
imul
xchg
jne
dec
push
mov
data16
cmp
and
ljmp
push
dec
pop
dec
js
and
add
pop
pop
pop
movsb
daa
mov
enter
in
fst
outsb
mov
ss
push
movsl
fwait
pusha
mov
xor
sti
mov
fstpl
decl
test
mov
outsb
dec
mov
sarb
jecxz
sti
or
dec
mov
dec
int
xchg
popa
gs
and
repz
xor
lods
xchg
lds
jae
xchg
push
cli
in
dec
adc
mov
xlat
jno
imul
hlt
xor
ffreep
jbe
outsl
je
loope
dec
push
xchg
sbb
lods
push
mov
les
jmp
cld
push
or
js
dec
add
or
mov
std
out
inc
lea
fwait
and
adc
popa
mov
mov
mov
or
sub
adc
and
inc
es
adc
popa
push
jno
add
std
jno
mov
les
out
cltd
lcall
cmpsl
pop
test
out
pop
push
push
push
shll
push
mov
adc
fiadds
or
mov
mov
js
cwtl
ss
mov
adc
xchg
mov
or
push
enter
adc
fimuls
testb
cltd
mov
cmc
iret
dec
cltd
dec
cmp
pop
mov
aam
movsb
and
scas
adcb
push
mov
movsb
pop
sub
aad
out
jg
mov
jno
add
jb
cld
adc
mov
and
xor
adcb
xchg
inc
dec
xor
scas
fs
pop
dec
dec
inc
test
cmc
mov
jecxz
cmp
xchg
pop
jb
fs
or
sub
mov
mov
jecxz
xor
stc
adc
or
sbb
lods
add
fwait
push
std
jne
int3
sbb
lea
pop
cmpsb
sbb
xor
fwait
pop
cmp
loopne
inc
lds
pop
mov
mov
pop
aad
dec
test
push
or
mov
sub
pop
and
popa
imul
lcall
xchg
sarb
cmp
jl
sarl
call
pop
jecxz
pop
mov
dec
fcmovu
adc
outsb
add
mov
repz
xlat
fsubl
jns
cmp
jmp
popf
mov
test
loop
sbb
jge
push
mov
cmc
xor
fwait
mov
hlt
adc
cmp
jp
shll
ret
repnz
sub
inc
add
adc
cmp
cs
jecxz
mov
scas
cmp
push
imul
int
imul
xchg
mov
pusha
pop
push
fwait
cmovo
add
in
adc
gs
sahf
xchg
cs
js
adc
cs
xchg
mov
mov
sub
mov
cmp
inc
mov
enter
jne
mov
loopne
jbe
jo
mov
push
mov
insb
and
ret
cmpsb
xchg
cmp
sub
mov
sub
jb
lahf
dec
sub
movsl
mov
sbb
inc
scas
lea
dec
jae
mov
mov
mov
dec
xchg
mov
shrl
push
add
inc
mov
xchg
cmpsb
inc
mov
push
mov
pop
mov
cltd
std
or
and
pop
aaa
cld
xchg
in
pop
dec
jmp
fldt
mov
pop
ss
test
push
dec
sbb
sub
push
call
xchg
test
es
fwait
mov
in
adc
jns
or
pop
imul
cmpsb
sub
lcall
jns
rorl
lahf
addr16
push
inc
sub
les
mov
in
movsl
jge
sub
ja
dec
fwait
cmpsl
das
fwait
cld
icebp
aas
out
fdivs
xor
out
cld
shlb
xchg
mov
adc
pop
dec
jg
cmpsb
sbb
pop
mov
pop
mov
lret
mov
incb
mov
xchg
xchg
mov
jecxz
out
std
inc
nop
sbb
xor
mov
jae
fwait
movsb
sub
shlb
xchg
sub
dec
mov
mov
popa
out
call
mov
adc
sub
fisttpl
sub
pop
jecxz
lods
test
mov
dec
sbbb
je
fs
insb
pop
test
roll
push
fistpl
pop
dec
dec
cmp
jo
and
jmp
inc
sbb
add
fldenv
lea
nop
fchs
pop
mov
shl
shlb
xor
add
lret
ss
stos
sbb
inc
inc
sbb
mov
in
cmp
sub
jge
daa
nop
cld
rcr
sbb
ja
pushf
out
push
adc
jae
gs
dec
out
in
inc
nop
daa
pop
adc
push
and
cmc
mov
cld
or
orl
fimuls
aad
ret
rcrl
stos
ret
stos
loope
testb
imul
xchg
dec
call
jge
sub
mov
jp
rcl
add
cmp
xor
inc
gs
hlt
adc
rorb
inc
repz
and
lea
repnz
push
cmp
addr16
cmp
adc
add
inc
dec
mov
push
fwait
xor
into
lods
sbbb
enter
pop
and
mov
iret
insl
jne
lea
mov
sub
imul
subb
push
lea
or
pop
push
sub
mov
dec
xchg
jbe
xchg
movsb
and
or
clc
push
loope
jae
cli
aas
dec
popa
push
cmp
jno
xor
mov
push
xchg
out
shl
jl
xlat
test
jecxz
lret
xor
in
xorl
int3
mov
int
movsl
inc
sarb
push
add
and
sbb
popf
xor
fs
int3
out
adc
xor
icebp
add
xchg
add
fistpl
pop
out
scas
xchg
pop
or
aas
mov
repz
xchg
arpl
cmp
mov
sub
leave
int3
int3
imulb
xchg
mov
int
ret
fldl
testb
cmpsb
pop
repnz
jnp
test
sahf
add
aas
sbb
sti
orb
push
out
test
fldcw
and
adc
aam
pop
mov
xchg
dec
shlb
inc
cmp
shr
and
pop
mov
dec
lods
inc
cmc
pop
adc
xor
cmp
clc
and
xor
stos
out
pushf
test
inc
mov
xchg
int3
jns
ds
fdiv
push
adc
arpl
lret
je
cmp
rorl
sahf
mov
lods
adc
sub
or
fstpt
lods
outsl
lret
jp
dec
mov
in
cmp
pop
jbe
sub
lahf
filds
addr16
pop
movsb
testb
inc
outsl
cmp
add
fwait
ds
add
mov
or
or
in
push
sti
add
cltd
cmp
outsl
cmp
xchg
clc
jmp
add
push
jp
roll
xor
je
mov
cmpsl
ficoms
ss
lcall
nopl
jle
xchg
add
mov
sarb
dec
enter
xor
dec
xchg
in
fs
jmp
pop
hlt
adc
js
or
push
pop
jne
insl
fldt
jg
xchg
movl
inc
xlat
xor
dec
dec
cmp
shrl
cmpl
xchg
clc
dec
into
lods
in
loopne
pop
add
dec
mov
sbb
pop
fwait
pop
ds
adc
push
in
mov
pop
leave
pop
in
pop
stc
hlt
cmp
mov
mov
or
lret
fmuls
outsb
mov
fistpll
icebp
inc
lret
inc
add
xchg
repz
adc
adc
lcall
aam
aad
insb
push
rcl
xchg
mov
pop
and
icebp
js
movsl
mov
jbe
mov
hlt
push
std
subb
xlat
out
push
dec
cmp
lret
or
divb
mulb
daa
jnp
xchg
mov
pop
cs
inc
and
and
add
rcrl
cld
cmc
jnp
orb
insl
lods
in
xor
clc
jp
mov
hlt
fwait
movsb
sbb
outsb
cld
fidivrl
sbb
sbb
dec
pop
lock
jo
inc
imul
or
sbb
adc
sahf
cmp
xor
xchg
stos
das
repz
out
jns
icebp
cmp
les
cmp
jns
bound
fldenv
fildl
push
scas
es
fdivrl
mov
fsubrp
and
adc
mov
in
cld
jp
fsubl
mov
lahf
lods
out
mov
xlat
aas
test
mov
adc
lods
jb
icebp
inc
lret
xchg
add
dec
fcoml
data16
cmp
fbld
xor
in
mov
orl
add
out
imul
xchg
loopne
outsl
aam
xlat
jns
or
sarb
fadd
or
inc
adc
ret
lret
sbb
add
and
or
stc
add
dec
push
xchg
inc
sub
jns
pop
and
imul
sub
lods
movsb
aaa
dec
dec
lea
push
adc
pop
or
jmp
mov
mov
out
lds
incl
pop
xlat
sbb
dec
jmp
out
fists
jg
addr16
mov
fst
mov
ja
push
pop
mov
lahf
ljmp
mov
fucomp
jge
dec
sbb
enter
leave
popf
in
in
mov
push
scas
movsb
xchg
imul
jnp
sbb
aaa
mov
mov
push
outsl
mov
xchg
dec
rorb
add
xor
imul
ret
push
add
and
negb
dec
cld
sub
add
sub
xchg
int3
adc
cmpsb
or
sub
cmp
pop
aas
ss
addr16
ja
jge
stc
xor
je
loop
xor
ror
cmp
dec
jg
test
stc
sub
test
or
add
andl
daa
xchg
fmuls
cmp
pop
add
mov
mov
mov
nop
cmc
xchg
jbe
les
in
sahf
lret
mov
stc
loopne
add
clc
out
cld
repnz
jecxz
push
movsb
xor
clc
add
jle
push
lock
fs
loop
push
jg
sbb
or
jnp
inc
ljmp
and
xor
xchg
push
or
std
jo
pop
and
iret
aam
insb
je
dec
sub
aad
ljmp
push
xchg
mov
fsub
outsl
fs
cmp
inc
adc
aas
sti
or
pop
ljmp
sub
test
jl
push
sub
push
out
in
and
test
in
or
es
jl
ljmp
into
inc
pushf
cmpsb
mov
mov
xor
lock
sbb
inc
arpl
out
sub
movsb
inc
rorb
lock
test
sub
loop
xchg
movb
clc
sub
and
inc
cmc
sbb
loop
lds
adc
jmp
inc
cs
pop
cmc
cmc
call
sbb
xchg
pushf
sbb
and
inc
push
out
out
in
cs
xchg
xchg
xchg
in
and
mov
jg
shr
push
cltd
mov
addr16
jmp
int3
aas
psubsw
sbb
cmc
rcrb
cmp
jp
call
cmp
ljmp
arpl
push
in
mov
jle
mov
mov
adc
jne
mov
pushf
sbb
mov
sbbl
das
push
and
or
out
ljmp
mov
cmpsb
shr
in
ret
jge
bound
hlt
mov
jp
gs
cmp
imul
outsl
cmp
mov
mov
mov
inc
xor
lret
imul
icebp
push
sbb
leave
xorb
add
push
lods
sti
xor
or
inc
cmp
dec
pushf
jg
test
pop
xchg
mov
cli
stos
ficoml
inc
sub
sbb
es
popf
inc
jp
jp
sbb
imul
inc
jg
add
test
add
cmp
shrb
sbb
and
imul
popf
dec
stos
sbb
jnp
fdivrp
jg
and
and
pop
addr16
enter
adc
ficompl
push
test
or
fs
int
ja
jecxz
bound
xchg
and
mov
mov
sub
ret
and
push
pop
jns
adc
fwait
rcl
sbb
sbb
dec
in
inc
or
jle
js
push
pop
jne
pop
shlb
mov
dec
adc
cmp
push
icebp
popf
aaa
add
jne
aam
mov
pop
into
fisttps
inc
pushf
mov
xor
mov
test
fdivrs
push
in
sahf
adc
call
add
jo
in
loopne
jmp
pop
add
insl
jg
mov
rdpmc
sbb
bnd
add
pop
pop
les
inc
cmpsb
popf
jnp
test
aas
int
cltd
sbb
rcl
int
adc
dec
inc
push
testb
mov
rcrb
push
cmp
mov
lcall
les
xor
inc
test
xchg
fcmovbe
xor
andl
mov
mov
xchg
mov
pop
push
add
fimuls
sbbb
movsl
cwtl
mov
lret
popa
repnz
divl
sub
adc
subl
pusha
or
clc
mov
adc
push
test
and
mov
push
jmp
push
rclb
cltd
pop
repz
or
inc
shl
jb
dec
aaa
insl
add
mov
sub
and
or
pop
loop
imul
sub
test
aaa
mov
pop
int3
add
gs
pop
shlb
test
mov
add
sub
fcmovne
rcr
ret
fnop
in
imulb
pop
xchg
fmul
iret
decb
mov
xor
mov
add
mov
dec
inc
jne,pn
ss
fistps
ja
test
mov
andb
int
mov
das
fs
in
and
sbb
mov
fisubrl
mov
xchg
fucomip
adc
outsl
cmc
push
inc
clc
lahf
lret
xor
jge
push
fldl2e
lahf
in
add
and
adc
sahf
cmpsb
jb
ja
loope
mov
imul
xchg
ret
cmove
arpl
add
aaa
xlat
sbb
push
add
mov
pop
addr16
arpl
add
frstor
mov
mov
and
adc
iret
or
dec
cld
push
sub
cmp
fidivrl
mov
popf
movsb
popf
insb
fists
fdivl
es
jo
sbb
xor
mov
in
fnstcw
push
outsb
mov
inc
inc
xor
sub
add
call
dec
int3
int3
sub
das
pop
xchg
jp
hlt
inc
ss
into
mov
insb
jo
rorl
aad
cmp
xchg
pop
fdivs
sbbl
imul
xchg
push
scas
iret
cmpsb
enter
clc
out
ret
push
xor
ja
add
or
dec
test
scas
shrl
sahf
ret
push
cs
or
adc
lret
inc
push
or
scas
dec
push
pop
gs
adc
outsl
pusha
aas
shrb
cmpsl
popf
mov
gs
fs
es
jl
jae
pusha
pusha
mov
sbbb
shrb
inc
xor
movsl
jge
ds
mov
xchg
pinsrw
arpl
or
scas
fdivl
fiaddl
mov
hlt
mov
cli
mov
test
pop
adc
add
pushf
lods
inc
jnp
jle
fnstsw
out
push
adc
inc
stos
rcrl
push
jno
mov
cmc
fsubs
push
lds
scas
cmp
dec
out
xchg
stc
ja
pop
pushf
adc
movsl
xor
loopne
ss
addr16
outsl
les
xchg
pushf
xchg
xchg
push
sub
mov
mov
jae
sbb
mov
or
lea
push
adc
lret
pop
loop
xchg
int3
rorb
mov
push
js
mov
jmp
push
pop
mov
and
out
pop
cmpb
pushf
lret
popa
addr16
in
jl
je
ja
ds
stc
mov
dec
push
outsb
mov
loop
test
jns
rorl
mov
lret
jp
mov
dec
mov
ljmp
ja
rolb
cs
inc
ss
loopne
in
fnstsw
xor
xor
sahf
inc
cmp
insl
aam
push
movsl
fsubr
rorb
xchg
sub
ret
mov
enter
mov
push
negl
je
sbb
stc
pushf
lods
pop
mov
popf
or
lods
int3
adc
insb
fidivs
xchg
adc
sub
lods
js
je
or
repz
jg
das
lcall
imul
inc
inc
cmp
jne
in
rorl
mov
cs
push
aam
jge
and
lea
ja
xlat
dec
pop
jl
jge
xchg
imul
out
in
sbb
loopne
fimuls
sub
push
mov
or
and
push
aad
jne
out
imul
jo
push
jmp
mov
call
push
sti
enter
movsb
jg
pop
add
iret
pop
leave
dec
cmpl
jl
jno
fcoms
mov
add
inc
cmp
sbb
pop
insb
xchg
insb
inc
pop
lds
sub
scas
push
mov
aaa
stc
into
xchg
lds
aad
add
fistps
push
arpl
dec
sbb
jecxz
xor
sub
fwait
call
lcall
in
xor
repnz
loopne
sbb
xchg
insb
adc
or
mov
cs
ret
movsb
jae
cmp
shll
jmp
or
imul
jae
jecxz
fnstsw
es
xor
loope
mov
int3
pop
outsl
and
push
test
mov
xor
pop
into
mov
bswap
lds
dec
inc
mov
push
adc
insl
cmpsl
push
add
mov
mov
mov
arpl
and
das
pop
mov
lds
outsb
inc
dec
aaa
cwtl
xchg
pop
cmove
mov
sbb
call
jge
leave
mov
sti
sub
pop
dec
xor
xchg
lock
mov
arpl
fucomip
dec
inc
mull
movl
aad
idivb
mov
jmp
shl
aad
mov
lret
lahf
add
pusha
fsubrs
pop
pop
xchg
and
daa
shrl
push
in
push
and
or
push
ds
out
push
clc
pop
jmp
add
fldlg2
ret
mov
adc
mov
xor
dec
insl
fbld
mov
xlat
adc
lcall
mov
dec
repnz
dec
fwait
stos
loope
or
mov
scas
adc
fsubrs
fdivp
test
jns
les
divb
test
scas
push
fiadds
insl
rcl
or
aam
and
adc
fcompl
scas
xchg
popa
mov
xchg
or
add
mov
lahf
jnp
daa
push
lock
sbb
imul
stc
adc
pop
pusha
push
loopne
cmp
pop
int3
xchg
push
push
clc
adc
leave
loope
jecxz
mov
ftst
test
adc
outsl
daa
les
add
mov
sti
dec
sbb
out
sub
pop
or
test
aad
sbb
imul
shll
addr16
xor
mov
addr16
mov
test
push
jg
mov
mov
es
in
cmp
or
outsb
insb
clc
inc
mov
push
arpl
add
inc
popf
sub
fmul
in
lahf
xchg
adc
mov
scas
xor
flds
or
enter
cmp
mov
push
outsl
xchg
les
and
arpl
and
aaa
lahf
and
adc
lahf
lods
jl
fst
cmpsb
lret
lds
lock
leave
or
push
neg
adc
hlt
scas
addr16
insl
call
jecxz
js
jo
arpl
test
xchg
xchg
ds
nop
lret
adc
add
out
push
aad
out
mov
inc
xchg
ret
and
dec
mov
jnp
ret
sbb
mov
cmp
sub
inc
lret
icebp
fdivl
sti
lds
leave
or
insl
inc
popa
leave
and
mov
and
cmp
inc
imul
out
dec
aas
pop
clc
push
and
cmpb
jp
mov
fbstp
mov
jno
fadds
or
xor
ja
ss
jb
sbb
mov
xchg
std
adc
and
push
in
rcrl
shlb
aaa
in
iret
icebp
idivb
add
xor
ret
and
jmp
rol
xor
call
push
inc
lret
ds
adc
fwait
mov
xor
ljmp
ljmp
sti
movsl
push
bound
xchg
pushf
and
xchg
out
lods
mov
pushl
out
pop
es
inc
popl
clc
pop
data16
mov
in
jnp
insl
sbb
lods
mov
jae
pop
jmp
jge
sub
out
push
fucomi
jne
push
fptan
movsb
push
xor
or
fwait
mov
and
les
lods
mov
add
lods
icebp
or
repnz
mov
xchg
je
aas
test
jae
out
arpl
iret
mull
outsl
insl
inc
jge
mov
cmp
arpl
scas
sub
test
dec
test
shll
aad
mov
ror
ja
test
cmp
shll
jns
or
push
cmp
or
into
ror
jae
lods
in
hlt
xor
adc
cmp
das
repnz
or
mov
xlat
in
mov
shl
insb
mov
js
pop
inc
xor
lcall
movsb
xor
shl
popf
sbb
stc
jne
xchg
xchg
imul
xchg
or
cmpsb
fs
xchg
xchg
sbb
icebp
out
es
or
jle
je
sub
mov
ja
and
repnz
sti
or
cmpsb
popa
cmp
jge
dec
xchg
repnz
lds
mov
jecxz
or
loope
sahf
xor
cli
cli
push
lods
movsb
ror
or
sub
push
jmp
and
pusha
mov
popa
popf
add
or
fmuls
sub
add
mov
aaa
aad
mov
push
xor
lods
xchg
or
jne
clc
xorl
xchg
int
pushf
and
cmpsb
sbb
mov
mov
fwait
scas
in
sub
pusha
mov
ss
ja
mov
bound
test
inc
lret
stos
xchg
sub
and
mov
lcall
mov
cmp
adc
and
sbb
jl
pop
sbb
lcall
das
sbb
inc
add
mov
cwtl
test
out
shll
enter
fstl
popa
xchg
dec
ja
mov
scas
insl
popf
fcmovbe
aaa
fcomi
mov
lock
xor
or
push
adc
dec
jns
add
out
arpl
push
in
sub
iret
fisubrs
mov
fists
daa
ds
push
ficomps
andl
push
push
int3
into
repnz
mull
jmp
dec
lret
imul
int3
in
xor
decb
jns
in
pop
jnp
or
lret
inc
pop
jns
rcl
js
ret
dec
adc
insb
pop
xor
imul
cmc
mov
add
xchg
rcr
adc
lods
push
push
ljmp
push
cmp
add
mov
sbb
sar
sbb
fstpt
inc
je
ss
inc
cmpsl
pop
inc
jp
lods
adc
filds
std
pop
pop
inc
lods
aad
mov
mov
ficomps
xor
pop
cltd
inc
fcmovne
sub
setno
out
sbb
jp
sub
and
movsl
sbb
ficompl
mov
fidivrl
sti
dec
shlb
jae
cmc
iret
jl
jge
jo
in
xlat
scas
cmp
subb
imul
addl
cltd
inc
sbb
out
add
in
adc
test
sub
sti
repz
push
mov
jo
adc
ss
xchg
xchg
inc
and
testb
inc
xor
push
repnz
pop
cmp
int
mov
cmp
push
push
pop
lds
pop
fcoml
push
push
mov
movsb
xchg
add
test
mov
fbstp
push
mov
test
iret
pop
cmc
xor
inc
mov
adc
bound
movsl
cmpsb
popl
and
pop
pop
mov
imul
jl
or
push
inc
push
bound
add
mull
adc
repnz
cli
fisttpl
pushf
jge
fwait
sbbb
cmc
inc
lods
and
mov
adc
cli
leave
stos
repz
sbb
aaa
mov
mov
test
jne
and
xchg
push
fldt
jnp
jmp
fstpl
sub
fs
cmpl
aad
fucomi
lds
inc
cld
sbb
push
jg
out
arpl
dec
and
je
pop
nop
popa
mov
into
cltd
ret
xor
jmp
mov
xor
insb
sub
and
out
mov
jae
sbb
dec
test
mov
sbb
in
lods
push
mov
adc
aaa
mov
out
cmp
jne
bound
add
mov
enter
xor
push
xor
cmpb
mov
xchg
cmp
lcall
sbb
imul
or
in
and
dec
mov
sti
ret
pusha
sbb
mov
dec
les
push
fcomps
enter
dec
xor
insb
ret
into
aad
ret
cmp
stc
add
aad
les
movsb
gs
adc
popa
jb
int3
pop
dec
mov
dec
int
and
and
pop
pop
mov
jecxz
pop
test
push
push
mov
aas
cs
js
adc
cmp
cmpsl
push
inc
fstps
arpl
jnp
pop
pop
xchg
pop
aad
jle
pop
sbb
cmp
ret
and
mov
adc
xlat
or
and
hlt
and
out
fstpt
hlt
jb
mov
push
into
popf
xchg
mov
mov
insl
iret
mov
jg
andl
xchg
fwait
xor
mov
cli
mov
inc
subb
fsubrs
out
out
mov
sbb
xchg
arpl
push
pop
mov
out
jecxz
push
push
or
arpl
mov
or
xchg
sbbb
mov
mov
jne
adc
mov
inc
es
popa
push
lods
dec
mov
int3
xchg
jae
mov
into
push
add
icebp
sahf
sbb
mov
inc
sub
ja
inc
arpl
or
and
push
jge
es
lds
clc
mov
and
jnp
pop
dec
and
inc
int
in
pop
mov
stc
pop
popf
test
and
push
adc
mov
sbb
pop
fsubrp
jne
outsl
testl
cmp
lods
lahf
std
mov
aam
mov
nopl
xchg
inc
test
mov
flds
cs
stos
adc
jne
adc
ja
lods
out
cmc
bound
rorb
fwait
cmp
cmp
mov
inc
mov
clc
nop
jb
clc
add
mov
jb
sbb
jnp
mov
inc
cmpsb
mov
lods
cmp
xor
jecxz
aad
sub
inc
mov
hlt
mov
sahf
mov
cmp
pop
dec
shl
data16
test
cmpsl
cmp
repz
sub
push
sub
rcrl
xchg
pop
mov
push
pop
outsl
lods
xor
dec
pop
enter
rolb
int3
push
out
cmp
clc
mov
jge
sub
cmp
popa
lcall
push
test
xlat
cs
fwait
test
call
sahf
aaa
inc
cltd
pop
sub
fst
mov
ret
pop
and
loope
cwtl
dec
push
pop
fxtract
xchg
xchg
ret
adc
test
icebp
sbb
sahf
fstps
ficoml
dec
add
dec
iret
or
movsl
call
aam
rorl
adc
adc
xor
xchg
je
fisttps
sbb
in
mov
mov
mov
les
cld
shlb
addl
inc
test
fcom
stos
mov
pusha
xor
inc
stos
sarl
adcb
in
fbstp
loopne
lds
fsubrl
gs
mull
mov
stos
inc
arpl
sbb
pop
mov
repz
cmc
dec
xor
mov
push
sbb
inc
push
cs
inc
clc
loope
push
test
mov
pop
test
mov
lret
int3
sti
data16
sbbb
jg
inc
ljmp
loope
inc
outsl
arpl
and
jmp
push
rcr
movsb
push
enter
loope
shrb
sbb
jecxz
popf
insb
fs
push
sbb
pop
and
in
fwait
jp
and
loopne
sbb
lcall
testb
xlat
push
or
stos
in
sbb
and
sub
xchg
pop
cmpsl
push
adc
movsb
jae
mov
test
fildll
sbb
in
sahf
jmp
lret
insl
dec
lds
mov
gs
hlt
mov
dec
sbb
xchg
je
lock
jle
sub
pop
dec
sub
cs
sub
sub
testl
xchg
sub
jle
aaa
xchg
add
dec
lds
adc
test
imul
sub
js
sbb
outsb
xchg
out
xchg
add
jo
std
and
xor
sub
mov
xchg
decl
sub
dec
push
mov
push
cmc
cmp
in
sub
ss
push
pop
mov
adc
mov
or
ja
ror
aam
jmp
ljmp
int
mov
jge
mov
mov
mov
cmc
xlat
fnsave
dec
xchg
dec
jg
aas
inc
aam
div
enter
inc
push
xchg
mov
sahf
in
push
fwait
mov
mov
fisttpll
mov
rcl
add
fwait
xchg
lahf
jle
bound
adc
xchg
mov
jmp
lret
dec
jge
jbe
mov
cmpsb
sbb
cmp
ret
popa
sbb
and
sti
pushl
mov
mov
rorb
idivl
or
and
in
push
mov
lcall
inc
pop
and
lds
lahf
or
mov
int3
dec
ret
xor
leave
sub
jge,pt
pop
jmp
mov
clc
sbb
test
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
and
rcrb
test
js
pop
push
cmp
test
sub
mov
loopne
pop
arpl
push
inc
fsts
inc
and
push
and
dec
mov
mov
mov
or
ss
sub
out
addr16
and
test
add
dec
xor
shlb
cli
in
in
sub
mov
jge
jp
sti
outsl
add
fwait
mov
sub
sub
rcrb
outsl
mov
ret
in
cli
inc
jp
sti
xor
dec
inc
push
mov
mov
arpl
aaa
and
mov
out
push
rcrl
sub
movsl
or
jecxz
in
out
pop
lahf
push
adc
cwtl
xor
mov
out
enter
pop
testl
inc
loopne
aad
mov
pop
or
insb
mov
sub
xchg
gs
xchg
xor
fnstcw
cmp
jecxz
scas
cmc
pop
jp
push
mov
testb
inc
fucom
push
adc
stc
aad
push
adc
jno
in
scas
sub
into
xor
cld
dec
gs
outsb
daa
dec
insl
jbe
push
je
mov
push
xchg
adc
sub
push
int
je
mov
xchg
popl
sub
ljmp
movsl
fisttps
scas
flds
or
sub
cmpsl
movsb
lock
and
and
pop
mov
and
call
push
jo
xor
jle
push
es
sbb
inc
pop
mov
xchg
repz
lods
and
cmp
aas
mov
xchg
pushl
mov
cli
nop
scas
icebp
add
dec
icebp
cltd
shl
inc
cli
repnz
cmp
stc
popf
fdivs
sahf
push
xchg
scas
jnp
shlb
mov
xchg
popa
inc
push
jmp
cmp
nop
mov
lcall
bound
cmp
leave
popf
mov
insl
adc
jmp
sbb
out
repz
aaa
fbstp
push
push
add
mov
push
jmp
aam
mov
subb
cmpb
pop
mov
inc
cmpsb
xor
jne
aad
inc
fisubs
ficompl
in
js
xor
lods
cmc
mov
lcall
fwait
cmp
gs
adc
in
or
lea
shr
lock
lret
mov
dec
and
andl
xlat
jle
push
cli
mov
sub
jecxz
pop
push
lea
fwait
pushf
in
cli
cmp
testl
mov
stc
cmp
sub
stos
in
adc
out
scas
sarb
fnstsw
inc
xor
gs
or
fnstenv
adc
adc
inc
shrb
cs
mov
mov
in
subb
mov
stc
cli
sahf
das
xor
and
dec
andb
scas
inc
sahf
push
and
enter
outsl
adc
add
mov
push
ds
mov
enter
push
mov
lcall
aas
add
fstps
aaa
add
pusha
fildl
int
jbe
cltd
popf
mov
ret
dec
ret
cld
xor
cld
in
sbb
popf
nop
jb
jle
xchg
loope
fisubrl
pop
test
dec
dec
mov
dec
fbld
outsl
pushf
jno
pop
sbb
subl
outsl
mov
pusha
mov
jo
lods
pop
jne
pop
aad
lret
mov
pop
pop
add
shll
rcl
add
ja
lahf
cli
push
push
and
cmpsl
push
sti
xchg
and
mov
mov
movl
jecxz
adc
ljmp
jl
xor
lock
push
repz
adc
xor
xor
daa
add
sbb
in
pop
add
aad
add
xchg
cmpsl
pop
jo
dec
lret
movsl
cmp
sbb
sbb
xchg
push
push
dec
dec
movsl
xchg
jp
sahf
je
aaa
pop
mov
mov
dec
in
stos
das
shrb
xlat
push
scas
push
xchg
mov
mov
stos
mov
lods
xchg
adc
out
loopne
and
jmp
lock
hlt
sbb
mov
jmp
mov
imul
movsl
ja
test
push
stos
lret
aas
in
cmp
xchg
repz
dec
aaa
mov
sahf
jns
cmc
adc
in
mov
mov
and
mov
iret
shll
fucom
sahf
je
inc
mov
stc
or
popf
mov
stc
xchg
and
jp
mov
hlt
fs
push
insb
daa
lods
dec
out
jmp
push
xchg
mov
mov
cmp
push
clc
lcall
add
movhps
gs
pushl
or
jmp
and
cli
nop
cmp
addr16
outsb
sbb
filds
cmpsl
lock
mov
add
dec
dec
add
lret
js
push
stos
cmovp
imul
popf
xchg
sub
lret
popf
pushf
mov
sbb
negl
int
mov
aad
adc
jns
call
aaa
cmp
mov
pop
ds
fisubrs
scas
imul
or
sub
out
sbb
js
sbb
out
dec
and
cmpsl
fwait
scas
inc
xchg
lahf
mov
add
inc
inc
inc
mov
into
cltd
cltd
cwtl
scas
xor
in
icebp
mov
jecxz
dec
push
cmc
cmp
inc
mov
popl
out
repnz
je
je
das
dec
xor
icebp
or
jbe
daa
mov
xchg
idivb
or
pop
mov
pop
insl
and
cmpsb
dec
ss
leave
stos
jecxz
test
push
mov
lods
rcr
mov
into
sbb
sub
mov
mov
in
cmp
push
jno
addr16
pop
repnz
mov
out
dec
pop
lods
jbe
jb
scas
mov
dec
fsubrs
rcrb
mov
sub
imul
mov
out
inc
sar
lock
jp
lods
ret
stos
mov
in
subb
pop
fs
cmp
nop
or
ret
cmp
mov
enter
jno
loopne
stos
aaa
push
scas
dec
pop
sti
mul
sub
sub
adc
insl
mov
add
mov
push
adc
leave
test
fimuls
lea
dec
xor
loop
out
jo
mov
or
jo
je
sbb
mov
minps
pop
test
cmpsl
lock
fwait
cmpsl
int3
shrb
nop
push
sub
movsl
mov
or
aam
popa
test
enter
dec
rorl
lret
mov
lret
add
pop
xlat
leave
pop
in
aas
cmp
clc
je
aam
mov
or
out
or
inc
push
sub
paddsw
pop
xor
out
jecxz
mov
aam
jp
rcll
or
ja
cmp
sub
in
push
adc
xchg
add
stos
sub
fs
push
out
sub
iret
inc
cmp
pop
popl
or
call
cmp
call
pop
std
xchg
cltd
sbb
sub
sub
int
cmp
repz
fucomp
bound
imul
enter
adc
stos
xlat
cs
stos
pop
add
lea
xchg
pop
leave
inc
pop
pushf
shlb
js
or
fildll
jno
and
add
sbb
push
sbbl
into
stos
aad
fcoml
xchg
or
mov
dec
out
outsl
lahf
jle
push
cltd
add
fnsave
pop
out
push
lods
imul
adc
xor
mov
cli
subl
fwait
nop
je
outsb
cltd
std
sahf
das
lods
test
inc
in
leave
mov
mov
inc
aaa
adc
pop
fdivl
or
ss
pop
clc
xchg
pusha
add
out
mov
or
insl
aas
add
js
and
inc
mov
cmpl
dec
adcl
push
orb
jmp
bswap
xchg
mov
jmp
sti
daa
mov
cmpsl
cmp
stc
jmp
aas
in
ljmp
xor
sub
jb
cmp
jae
and
in
fistl
jnp
jle
and
les
cli
ret
cltd
into
add
loopne
out
gs
movsl
jecxz
bound
and
xor
xor
decl
xorb
pop
subb
adc
pop
cwtl
adc
fldt
xor
ret
sub
icebp
cmpsl
cmpsb
test
outsl
stos
push
call
sub
mov
cmp
mov
sarl
sbbl
or
or
adcl
rorl
jge
dec
push
dec
mov
lret
out
outsl
mov
dec
inc
dec
jne
shl
push
adc
xor
shlb
push
cld
sbb
inc
stos
leave
mov
xchg
dec
test
push
ja
push
jecxz
sbbb
sbb
fists
ja
lds
jmp
idivb
ljmp
daa
xchg
pop
mov
or
mov
ja
mov
jne
jp
rcr
or
into
iret
jl
push
jne
cmp
push
shr
xchg
in
call
or
push
or
mov
push
lds
cmp
cmpsb
loopne
xchg
je
leave
dec
int
test
sbb
enter
push
and
fcompl
or
pop
adc
jg
inc
and
xlat
push
cmp
fucomip
dec
lret
imul
ljmp
push
inc
shlb
repnz
push
sub
pop
test
call
stos
push
lods
cmp
dec
mov
clc
xchg
loope
xor
outsb
push
aas
add
ljmp
cmp
fs
lods
ja
jb
xchg
cmp
mov
or
pop
adc
push
mov
addb
jb
lret
push
ja
sub
push
pop
lahf
jge
push
jle
mov
push
rclb
add
add
push
xor
daa
bound
sbb
jge
cmp
pop
xchg
aas
lcall
push
push
in
push
int
xchg
jae
lret
and
push
aam
mov
lods
pushf
nop
icebp
xchg
out
xlat
jb
cld
or
fidivs
into
loop
or
nop
addr16
xchg
xchg
fnstcw
test
jne
mov
dec
ja
shlb
loopne
push
shll
mov
ret
and
je
xchg
pop
mov
mov
xor
sbb
repnz
mov
lea
mov
cmp
je
imul
xchg
lret
lea
aas
jmp
push
pop
xchg
iret
pop
test
shlb
jecxz
inc
fcmovnb
xor
jbe
je
sub
adc
in
xlat
nop
xor
clc
adc
aas
sti
das
mov
xchg
push
call
popf
xor
outsl
sbb
je
dec
lods
dec
out
jg
mov
mov
dec
scas
arpl
cli
lcall
add
fs
stos
cmp
movsl
mov
in
jnp
jp
insl
adc
jle
mov
push
aad
leave
jecxz
inc
imul
add
and
mov
add
sub
inc
ficoml
fisttpl
lret
imull
repnz
mov
popf
roll
fdivr
ja
pop
icebp
movsl
push
sub
imul
sbb
loope
jne
mov
cwtl
scas
repz
push
filds
stos
mov
into
dec
out
imul
mov
cmpsb
dec
push
lods
rcll
fldpi
push
mov
lods
jnp
jge
xchg
popa
pop
mov
pop
add
xor
ljmp
cmpsb
mov
and
pop
imul
xchg
jle
ret
flds
paddusw
movsl
imul
sbb
mov
jne
pop
pop
xchg
mov
push
lds
mov
add
xor
pop
push
aas
pop
mov
cltd
imul
jp
and
xchg
xchg
pop
stc
ror
xchg
fs
dec
fistpl
and
nop
fisttps
jnp
jmp
inc
xlat
pop
out
xchg
xchg
mov
xor
pop
shll
sbb
ret
push
cmp
fsubrs
lea
es
lods
and
shl
add
nop
inc
lahf
push
lahf
pop
out
hlt
mov
pop
int3
adc
mov
sub
xor
push
xor
test
sub
mov
cmpsb
fstps
lds
stos
jne
outsb
in
movsb
push
push
data16
aam
ja
data16
xchg
xor
cmpsw
dec
ds
scas
ficoml
dec
adc
cltd
mov
mov
pop
sbb
push
jl
mov
rorb
js
shlb
or
adc
out
pop
lret
cmp
jle
das
jo
fwait
mov
jmp
pop
lret
jo
jge
cld
loop
mov
adc
sub
outsl
stos
das
gs
repz
inc
jae
or
xchg
mov
out
aad
push
add
and
lock
pop
dec
jge
or
add
fildll
jo
and
inc
add
insl
jbe
adc
repz
out
pop
mov
adc
jmp
bound
pop
mov
xchg
xor
cmp
cmpsb
or
test
imul
sbb
mov
in
xchg
ss
inc
aas
outsb
jecxz
jno
clc
out
push
cmp
jl
sub
outsl
ss
mov
popf
jbe
dec
xor
lret
rcrl
lret
pop
xor
test
popa
xchg
fcmovnb
roll
sub
pop
pop
movsl
xchg
popa
repz
shlb
add
fwait
sbb
or
lret
stos
clc
jbe
outsb
mov
mov
stos
xor
push
jecxz
lcall
orl
sub
loope
push
cmp
push
jae
mov
jnp
mov
inc
mov
and
cltd
jmp
ret
mov
inc
enter
hlt
xchg
rcrl
div
insb
add
test
adcb
call
or
fwait
inc
cmpb
repnz
push
cmp
clc
aaa
sbb
sub
aam
push
adc
jns
dec
sbb
daa
mov
adc
push
add
imul
repnz
call
or
addr16
clc
inc
cld
push
scas
xchg
outsb
sahf
and
ret
outsl
testb
sub
push
popa
jg
push
pop
lock
sarb
and
leave
pop
jnp
loope
dec
mov
in
adc
push
or
push
scas
es
cmpsb
std
call
pop
pushf
xchg
adc
fimuls
push
mov
scas
jg
cli
add
mov
sub
aam
shlb
mov
push
movsb
xor
aaa
add
je
loopne
cli
scas
jmp
loop
jne
clc
push
mov
gs
test
cmp
lods
pop
movsb
xchg
push
xchg
stc
adc
xor
lret
xor
sarl
enter
inc
outsb
shlb
inc
sti
out
lock
add
fsub
jae
inc
dec
jne
dec
xchg
mov
push
es
xchg
xlat
add
hlt
push
loop
xchg
sub
mov
sbb
in
jmp
lret
mov
icebp
adc
mov
pop
fldenv
dec
jp
dec
and
jge
outsb
sbbl
inc
jo
ror
lcall
and
cmpsl
mov
push
mov
add
pop
sbb
adc
shlb
cmp
lcall
xor
in
fsts
cmp
cli
sub
loopne
adc
ljmp
ret
xchg
push
mov
xchg
int
int3
imul
out
sub
sti
icebp
cmpb
inc
lret
sub
stc
jmp
push
mov
insl
xor
enter
std
add
cmpsl
out
dec
xchg
lcall
popa
sub
and
dec
rcll
xor
mov
scas
and
daa
or
mov
outsl
insb
into
ret
add
xor
stc
dec
lods
add
xchg
lock
movsl
ds
shl
cmp
in
sti
inc
jo
sti
clc
jge
pop
mov
sti
dec
mov
dec
aam
pop
and
pushf
imulb
mov
pop
popf
fbstp
int
inc
sub
jmp
inc
mov
mov
sbb
mov
adc
pop
jae
movsb
stc
cmp
orb
loope
or
and
outsl
in
push
andl
or
ds
out
push
test
lds
inc
push
iret
fs
lret
ret
adc
in
add
data16
ret
xchg
jge
push
lds
popa
pop
mov
jmp
inc
cs
sbb
jmp
push
fcomps
jno
inc
mov
or
in
fs
sub
and
test
into
in
xchg
ljmp
dec
mov
xchg
and
sub
xor
aas
inc
add
add
testb
iret
push
cmc
push
cmp
je
cmp
popf
jg
fsubrp
jecxz
mov
mov
iret
push
aam
out
packssdw
pop
cli
xor
int
cltd
test
jecxz
into
add
aam
test
loopne
add
cmp
sbb
fs
cmc
test
icebp
and
loopne
out
pop
jno
ds
xchg
out
pusha
bound
sbb
stos
inc
jo
sub
in
adc
addr16
adc
xchg
in
js
hlt
repnz
jnp
sbb
or
rorl
and
sub
mov
movsb
icebp
add
inc
pop
cwtl
sbbb
push
out
or
jo
lods
bnd
mov
movsl
jecxz
jge
mov
out
mov
push
sbb
xor
fidivrs
mov
mov
loopne
iret
mov
lcall
int3
jmp
imul
or
pop
mov
test
hlt
mov
clc
xor
push
cmp
jbe
ja
iret
into
add
pop
xor
xchg
and
and
outsl
sar
inc
adc
xor
add
lds
mov
cmpsl
push
adc
dec
mov
dec
sub
lahf
daa
xchg
push
arpl
in
mov
call
mov
scas
mov
inc
inc
inc
lds
inc
xchg
push
cwtl
andb
in
inc
pop
inc
push
jo
aas
mov
rorl
or
gs
sbb
icebp
adc
push
mov
xchg
loop
out
add
jecxz
ss
sub
mov
and
mov
fmull
adc
fmuls
push
arpl
out
sahf
lret
leave
or
jnp
pushf
call
sbb
inc
xor
mov
fwait
mov
xchg
adc
lds
xchg
add
repnz
lock
mov
imul
fucom
sub
and
mov
test
imul
adc
sbb
jne
cmpsl
repz
lods
jl
or
jge
mov
outsl
aam
test
enter
js
fisttpl
push
repnz
push
andl
daa
jbe
scas
lock
movsb
stos
icebp
xchg
ja
sbb
aad
sbb
adc
push
ror
xchg
push
leave
iret
insb
cmc
sti
sti
pop
add
pop
fldl
adc
shll
add
mov
push
ss
jno
mov
imul
and
jle
lods
lahf
shl
filds
pop
lods
test
adc
jno
xchg
adc
stos
call
mov
adc
and
adc
les
das
jg
enter
out
sbb
pop
movsb
jle
ljmp
push
mov
mov
stos
loope
xor
ss
mov
adc
or
jb
imul
or
in
or
push
inc
dec
mov
insb
mov
sbb
and
push
testb
scas
jmp
jp
pop
and
aam
or
adcl
int
aad
xor
and
mov
mov
sarb
or
cmp
std
fnsave
icebp
jae
xchg
in
negb
xchg
inc
imul
add
shll
testl
xchg
rorb
sbb
punpckldq
dec
jbe
jl
out
enter
pop
cs
adcl
scas
inc
loop
insl
mov
fwait
jnp
push
arpl
adc
and
in
pushf
outsl
mov
stos
sbb
das
cmpsb
fidivl
dec
push
in
call
mov
mov
sbb
dec
push
cmp
pop
sbb
xor
out
cmc
loop
cmpsl
cs
cwtl
sahf
xchg
adc
inc
xor
mov
pop
jo
jne
flds
and
enter
mov
sub
xor
lods
push
fs
rcr
pop
es
mov
pop
and
cmp
aas
sub
frstor
fimuls
rol
popa
adc
outsb
mov
push
ja
in
les
jecxz
add
xor
outsl
rorb
inc
pop
inc
outsb
sub
test
cli
push
fistpl
sbb
ljmp
and
into
xchg
loopne
fcomp
mov
adc
stos
cwtl
nop
cli
adc
imul
sbb
add
dec
inc
pop
inc
js
mov
movsb
mov
inc
mov
dec
sub
je
cld
sub
mov
test
test
or
in
ss
imul
lea
jg
sti
pop
ret
and
push
jno
or
mov
aam
insb
stos
and
sbb
pusha
jb
fwait
and
lret
push
testl
pop
out
sahf
bound
inc
mov
xor
push
jne
mov
xor
scas
cmpsl
int
scas
mov
mov
fildl
mulb
je
xchg
movsb
sub
jg
mov
btrw
dec
aad
or
in
sbb
push
test
dec
movsb
pusha
jno
xchg
lock
jecxz
xor
lret
inc
jno
cmpsb
fdivrp
scas
and
xchg
sbb
nop
xchg
mov
pop
sbb
je
adc
lea
sub
call
xor
push
enter
push
sub
clc
mov
add
push
outsl
cmp
loope
lods
insl
insb
roll
jmp
xchg
lods
mov
sub
pop
sub
lea
repz
mov
insb
xor
fisttpll
out
and
inc
lods
fndisi(8087
sahf
and
out
mov
jecxz
and
adc
mov
xchg
pop
sahf
push
xchg
fwait
jmp
lods
test
into
push
test
frstor
and
push
dec
gs
sbb
mov
sbb
rolb
jle
mov
inc
ja
pop
imul
and
inc
pop
stos
outsl
xchg
inc
lret
jp
test
test
sub
pop
lret
push
adc
xlat
sbb
int
test
dec
xchg
lea
dec
loopne
lret
int
cmc
mov
or
push
jns
or
out
sbb
sub
push
test
mov
xchg
mov
rclb
pop
scas
sbb
hlt
cwtl
and
movsb
loop
xchg
adc
jge
push
mov
cmp
adc
pop
mov
enter
out
pop
cmp
outsb
loope
cmp
aam
out
jb
dec
out
ret
dec
lds
stc
jg
lret
cwtl
fcomip
pushf
out
lahf
mov
gs
aam
aaa
dec
xchg
adc
ja
mov
fnstcw
xor
mov
mov
dec
inc
jl
repnz
and
xchg
jb
mov
test
inc
add
test
sarl
push
shll
popf
inc
test
cli
sub
adc
outsb
cltd
dec
pop
int3
dec
nop
and
mov
push
jnp
cmp
cmp
cmp
jg
sub
or
sub
pop
aam
les
addb
imul
xor
ret
adc
addr16
xor
rol
pop
cmp
mov
mov
rcl
in
push
daa
ja
outsl
sbb
jae
in
jae
clc
sub
mov
loope
mov
xchg
or
adc
daa
inc
add
icebp
in
loope
pop
pop
xchg
inc
dec
fnstenv
and
test
push
outsl
jae
and
add
sub
bound
dec
push
cmp
inc
mov
leave
inc
xor
inc
addb
xorl
mov
icebp
inc
xor
sub
or
popl
push
iret
push
enter
sub
sub
insb
add
mov
jne
jae
and
ret
fnstenv
je
sbb
sub
xchg
jl
out
jno
xor
mov
or
bound
ss
or
adc
ficompl
mov
mov
in
push
jle
pop
pop
das
test
lahf
sbb
cwtl
adc
test
aad
cwtl
sub
mov
bound
cmp
pop
mov
or
outsb
sub
push
andb
inc
in
add
fwait
in
rcrb
sub
add
sub
cmp
lock
sub
pop
or
cmp
into
add
pop
addr16
bts
int3
cmpl
fnstcw
jne
jmp
imul
test
ret
jmp
jno
out
or
pop
mov
dec
fadds
imul
test
mov
pop
lods
adc
fildl
cltd
cli
and
incl
fucompp
fistpl
or
je
xlat
fdivrl
in
sbb
dec
mov
inc
aam
jecxz
out
arpl
sbb
dec
mov
shr
lret
mov
shl
pop
imul
icebp
inc
ficompl
popa
mov
movsb
push
jne
insb
jns
loopne
notb
inc
movsl
ja
fstpl
negl
jb
xor
bound
imul
mov
xchg
fdivl
mov
pop
cmp
inc
mov
out
push
push
push
sbb
jnp
cmpsl
leave
jg
je
fwait
cmp
fnstenv
jns
xchg
mov
dec
push
icebp
cmpsb
mov
sti
psubd
dec
inc
xchg
cltd
mov
pop
clc
jne
push
mov
and
jb
xchg
xchg
cmp
sahf
pop
pop
jg
loopne
lods
inc
mov
inc
mov
rolb
jmp
std
in
dec
mov
pop
in
pop
dec
stc
jge,pn
or
orl
shll
sbb
mov
inc
mov
push
jle
mov
sbb
xor
xor
mov
clc
jle
aas
inc
mov
lea
jne
int3
mov
mov
or
addr16
mov
test
xchg
push
lods
push
xchg
xchg
test
or
pop
rolb
stos
mov
sub
fbstp
outsb
mov
inc
and
push
cmpl
or
mov
push
jns
pop
sarb
pop
and
insb
adcl
addb
cwtl
stos
icebp
lea
pop
test
pusha
and
mov
or
shll
ds
dec
push
sub
hlt
adc
and
or
test
test
fldl
lods
test
addr16
xchg
punpckhwd
xor
or
call
ja
roll
adc
loopne
xor
add
mov
insl
stos
cmp
mov
lahf
sbb
jp
sbb
dec
add
rolb
dec
testb
in
pop
push
xor
dec
lahf
mov
dec
roll
cmpsb
fldenv
sar
cmpsb
js
cmp
int
and
scas
mov
or
ljmp
dec
insl
les
adcb
pop
sub
pop
lock
or
int3
and
jmp
mov
sbb
inc
cmp
adc
aad
mov
add
not
inc
mov
add
cwtl
fisubrl
testb
jo
ss
test
cmp
push
push
push
inc
lahf
sbb
mov
pop
xor
mov
dec
imul
mov
xlat
jge
dec
mov
fucomp
and
mov
addb
push
stc
mov
sbb
es
popf
cmp
xchg
mov
xor
push
push
popa
hlt
dec
jns
mov
push
lods
out
mov
fld1
xor
sahf
out
and
hlt
mov
xchg
lahf
inc
push
inc
daa
pop
mov
pop
xchg
es
insl
or
lods
and
xor
cmc
insb
inc
sbb
out
outsl
jno
aaa
loope
xchg
lcall
mov
and
or
add
jo
not
sbb
xchg
addr16
icebp
lods
dec
and
mov
sahf
dec
sbb
dec
push
test
jl
fcomps
dec
jp
fistps
fldcw
add
sbb
mov
shlb
adc
pop
mov
test
xchg
mov
aad
jno
std
movsl
sbbb
or
jle
sub
ret
and
iret
repz
pop
icebp
aam
cmpsl
mov
mov
daa
push
pop
or
jnp
jno
pop
int3
shl
and
mov
cmp
insb
pop
cld
aam
cltd
pushfw
ret
inc
mov
mov
test
testb
cmc
and
daa
add
mov
rcl
mov
stc
dec
lahf
ds
mov
fs
mov
loopne
cltd
xchg
stc
js
repz
mov
lea
push
sbb
ss
mov
stos
jb
lret
push
shrl
jb
in
and
mov
or
stos
sti
mov
repnz
mov
jb
push
pop
adc
movsl
mov
mov
loopne
fsubrl
lods
mov
or
fsubl
rcl
lahf
sti
sub
mov
xchg
stos
movb
sub
jb
add
cmp
jmp
xchg
aam
movsl
gs
mov
inc
jmp
mov
mov
mov
mov
stos
xorb
int3
or
adc
xlat
jo
lcall
push
mov
sub
clc
dec
bound
jne
push
sti
or
mov
push
add
adc
xor
aas
xor
or
into
int
jne
mov
inc
jge
xchg
aaa
sbb
adc
into
mov
xor
jnp
mov
pop
add
push
fadds
xor
mov
into
xchg
int
enter
adc
pop
mov
leave
xchg
fimull
push
clc
or
lds
sbb
jg
dec
test
aas
aam
data16
stos
iret
mov
mov
inc
pop
pop
mov
insl
push
fdivp
bound
cwtl
inc
fistl
pop
nop
inc
in
and
pop
adc
adc
sub
jnp
mov
aas
mov
lods
sbb
and
xor
cmc
mov
loopne
or
add
dec
sbb
jecxz
shlb
icebp
mov
lret
inc
test
int
jmp
js
in
xchg
test
gs
dec
out
daa
jg
sbb
dec
cmp
dec
out
jne
fs
in
mov
dec
inc
lret
xlat
adc
pop
push
adc
adc
xor
push
push
jmp
cmc
cmp
shll
outsl
sub
out
xor
dec
jae
xchg
mov
jns
leave
fidivl
loope
in
jb
ds
outsb
push
sbb
sub
push
sahf
jb
std
mov
jns
jl
dec
mov
and
pop
fdivrp
scas
jns
push
xchg
comiss
test
jns
arpl
mov
scas
inc
inc
xor
adc
mov
ret
mov
das
mov
test
pop
mov
mov
mov
arpl
sti
les
jmp
dec
rcr
stc
in
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
call
pop
popa
rcrb
cli
imulb
stos
test
push
jae
fildll
ja
sbb
jbe
lret
daa
gs
andl
idivb
pushf
or
rorb
add
xchg
rcll
pop
ret
scas
mov
cmp
cmp
fldcw
repz
and
andb
in
pop
daa
test
je
add
js
xrelease
dec
xchg
pop
xor
gs
in
cmpsl
stc
int3
ja
sub
xchg
jns
cld
xor
hlt
push
test
cs
pop
inc
mov
pop
pop
push
dec
mov
sub
push
lret
lret
jo
fwait
mov
adc
addb
lret
call
lods
jne
pop
sar
pusha
dec
xchg
pop
in
sub
fildl
dec
cmp
mov
out
popf
or
or
sbb
rcll
inc
sbb
push
mov
fbstp
push
ss
inc
movsl
pop
add
clc
fidivl
mov
fs
lret
aas
xor
jmp
ret
pop
and
sahf
inc
and
mov
mov
das
sarb
lds
jl
xchg
inc
add
dec
in
outsl
notb
fs
arpl
add
add
and
data16
in
lret
dec
insb
scas
gs
stos
pop
ds
inc
sub
fsts
gs
push
mov
dec
cltd
jno
pop
pop
in
jns
loope
ja
and
and
sbb
and
jne
orb
sub
add
push
inc
jae
xchg
or
push
mov
call
inc
push
sub
lock
dec
daa
mov
mov
and
mov
lea
das
sub
fisubl
adc
inc
and
enter
and
pop
sub
in
sbb
add
cmp
sub
enter
pop
xchg
stos
mov
sbb
jno
sbb
xchg
repnz
std
lret
sti
jp
cwtl
mov
mov
cs
lret
lods
and
imul
or
push
clc
xchg
stc
ljmp
fldt
cmp
pop
lea
fisubrl
push
out
cmpsl
push
and
jae
in
sbb
test
xor
or
inc
iret
movsl
inc
jae
icebp
lods
std
das
and
add
clc
movsl
xor
xchg
jno
adcl
xchg
out
cmp
cld
push
mov
sub
aaa
push
jno
imul
jno
int3
movsl
insb
xchg
jg
push
loope
pop
loop
addb
pop
into
ja
rclb
inc
jo
cmc
imul
pusha
mov
mov
cmp
push
outsb
or
popf
int3
adc
popa
jbe
mov
add
push
fistpll
mov
pop
subb
bound
xchg
inc
fbstp
ficoml
outsb
popf
adc
outsb
jne
adc
push
lods
fmull
ja
ja
xor
fstpl
jle
adc
stos
jmp
pop
mov
cwtl
add
sbbb
in
outsb
es
push
sarl
xchg
lods
arpl
pop
repnz
mov
adc
aad
scas
and
call
lds
push
in
daa
fcoml
mov
fdivp
insb
popa
lahf
sub
pop
cmp
lds
pop
fcoml
shrl
out
scas
jbe
adc
inc
mov
aam
mov
sbb
push
adc
push
popf
leave
add
bound
out
inc
and
add
and
push
add
loope
shrl
or
les
dec
mov
cli
sbbl
repnz
rolb
mov
mov
cmp
dec
shrl
shlb
dec
push
mov
pop
sbb
cmpsl
xchg
xchg
cwtl
outsb
lret
add
pop
mov
jno
stos
shll
imul
setns
jne
loop
outsb
stos
and
icebp
xchg
xchg
lret
mov
lret
sbb
xchg
pop
in
jb
dec
notb
mov
sbb
inc
or
add
dec
pop
out
rorl
xlat
pop
fcoml
adc
ss
xor
into
jge
repz
insl
xor
in
sbb
and
mov
add
pop
cs
mov
ret
jge
inc
jle
movsb
fnstsw
adc
mov
clc
jl
les
dec
fsub
es
rcrb
add
cmp
cmp
icebp
mov
pminub
ljmp
adc
mov
decl
xor
ret
aaa
sub
lcall
mov
cmpsb
repz
mov
pushl
mov
or
imul
or
gs
sarl
mov
leave
test
mov
data16
adc
pop
and
sahf
insb
int
cmpsl
push
jecxz
jl
imul
in
and
pop
jle
mov
push
aas
lea
lcall
outsl
and
adc
jg
pop
push
incb
mov
fsubs
data16
pop
jns
enter
cmpsb
xor
es
shrb
push
inc
and
inc
xchg
popf
popa
xor
rorb
fwait
iret
aad
sti
dec
addl
shrb
add
cmp
enter
fbstp
or
xor
push
adc
adc
ret
or
ds
and
scas
add
into
mov
adc
into
push
enter
ret
adc
or
out
xchg
add
or
out
sbb
shlb
xchg
pushf
std
and
stos
ret
clc
pop
fwait
jg
outsb
dec
mov
in
cmp
dec
and
dec
repz
js
lret
xchg
cmp
or
xlat
jmp
xor
push
lods
fisttpll
mov
mov
mov
mov
inc
int3
pop
js
sti
in
mov
data16
sahf
emms
mov
add
repnz
cmp
cmpl
ret
out
je
aaa
ret
hlt
add
mov
lea
repz
mov
shrb
cmp
cwtl
or
in
out
cmp
pop
test
cltd
mov
adc
pushf
and
adc
jne
in
mov
pop
add
mov
mov
jg
adc
adc
dec
imulb
inc
or
cltd
pushf
pop
pop
sbb
jnp
cmp
cmp
push
shlb
mov
jnp
or
insl
sub
mov
insb
sub
pop
jnp
inc
cmp
cmp
sbb
stc
cmp
fstl
mov
inc
arpl
fsubs
fs
mov
push
xchg
mov
sub
fwait
iret
push
or
jb
std
sub
cs
xor
cmp
cmp
rol
mov
test
imull
dec
mov
push
mov
lods
bound
in
sub
aad
gs
popf
inc
daa
pop
mov
jno
lods
arpl
inc
xor
pop
and
mov
sub
adc
push
aad
push
lret
rolb
shlb
addr16
call
call
xchg
popa
sahf
mov
loop
fcoml
daa
test
cltd
push
sbb
lods
mov
jg
pop
xor
mull
dec
sbb
mov
mov
mov
jne
std
lods
xor
int3
in
mov
sub
cltd
cltd
jae
seto
out
dec
repz
rolb
adc
scas
cmc
mov
loop
sub
sar
out
and
sarb
mov
imul
lods
xor
ficomps
fiadds
sub
sbb
jns
push
pop
cmpsb
sbb
ds
ds
cmpsl
adc
pop
cli
nop
xchg
cmp
faddl
rcll
or
xchg
inc
add
aam
aas
jns
stc
test
add
arpl
pop
scas
out
ljmp
cli
dec
lret
sbb
push
aad
xchg
or
push
adc
cmc
mov
cltd
nop
fmull
lods
dec
fistpl
inc
sbbl
fsincos
or
mov
adcl
mov
mov
push
xorb
lret
jne
sti
daa
mov
lret
pop
or
pop
call
xor
sub
mov
sbb
test
fwait
call
xor
cmp
and
adc
lret
fisubl
and
add
mov
fimuls
outsl
or
jg
fistl
aaa
and
pop
sarb
jne,pn
popa
push
dec
sbb
adc
push
scas
sub
bound
dec
add
jle
inc
lahf
xor
push
fs
adc
lods
sbb
inc
adc
adc
test
inc
test
xchg
cwtl
cmc
xchg
sti
dec
mov
aam
test
cmp
mov
cmp
mov
pop
hlt
jno
pop
lea
xor
mov
sub
or
out
std
dec
inc
mov
xor
mov
pop
in
dec
lea
sahf
or
cmp
mov
arpl
dec
ljmp
xor
push
mov
mov
inc
pop
call
add
lock
pop
test
mov
push
out
mov
mov
jecxz
lret
dec
or
std
or
jg
add
push
and
push
int
icebp
js
pop
cmp
cmp
shlb
popf
scas
popf
ftst
fwait
inc
jnp
cld
mov
ret
out
sub
sub
gs
pop
inc
ja
mov
xor
fsubrs
mov
dec
xor
int3
cmp
rclb
repz
mov
pushl
stos
adc
loop
daa
fsubl
ret
xor
arpl
sti
cli
push
cmpsl
jno
scas
xsaves
fsub
out
mov
sub
ljmp
js
add
mov
xchg
fimuls
adc
bound
xchg
mov
mov
in
ja
push
les
shll
sub
rorl
imul
xorb
mov
stos
adc
bound
insl
cmp
mov
push
lods
in
ret
or
lea
lea
jg
cli
dec
cwtl
les
data16
sbb
inc
sub
fistps
jle
inc
roll
mov
cmp
sub
pop
sub
movsl
mov
xchg
mov
xchg
icebp
lret
mov
je
pop
or
orb
jp
fisttpl
jnp
sbb
stos
int
gs
in
or
lock
rorl
int3
aas
xchg
bound
xchg
mov
into
pop
xor
and
inc
jmp
cmc
jae
insl
jns
call
xchg
pop
mov
or
sbbl
fwait
inc
lods
sbb
mov
adc
mov
sarb
nopl
xchg
push
mov
jnp
inc
dec
mov
aad
or
loopne
adc
outsl
lds
fwait
jnp
adc
mov
out
sub
push
cmp
or
out
jl
aas
jecxz
mov
cs
push
lods
mov
sbb
jmp
cs
sbb
adc
lahf
es
fiaddl
rcrl
fbld
sbb
subb
dec
add
cltd
pop
add
mov
mov
pop
mov
out
enter
fidivrl
and
push
sub
sub
xchg
xchg
pop
fdivrl
int
cmp
js
xor
xor
idivl
daa
add
andb
andnps
or
pop
push
movsb
ret
mov
mov
dec
jnp
lock
adc
pavgw
rolb
fbstp
xchg
sub
mov
mov
jb
bound
push
push
dec
push
xchg
aas
sbb
icebp
outsb
jno
lcall
dec
push
adc
mov
adc
xchg
push
mov
jl
and
rorl
and
mov
int3
sbb
test
in
push
mov
mov
mov
pusha
adc
out
jo
leave
mov
cmp
jbe
das
stos
xchg
cld
jmp
xlat
and
mov
dec
in
pop
mov
int3
or
lret
sub
rclb
fdivr
popf
cmp
aam
xchg
cld
dec
mov
xchg
leave
test
test
mov
push
mov
aaa
lds
movsl
pop
pop
mov
add
cmp
cmp
push
mov
jmp
cld
push
jmp
pop
pop
sti
sti
in
xchg
les
mov
cltd
jmp
sbb
mov
and
test
push
fldcw
pop
cmp
sub
or
aas
addr16
adc
ret
sub
outsb
sub
mov
pop
out
out
pop
ficompl
pop
cmp
mov
xchg
mov
cmp
jg
mov
push
cltd
and
inc
icebp
int
inc
mov
add
dec
add
push
stos
lcall
cmp
inc
inc
fwait
xorb
inc
ret
mov
shlb
gs
hlt
sahf
fsts
mov
or
dec
call
mov
or
bound
lods
lea
fnstenv
into
xor
adc
jo
adc
paddusw
and
add
pop
cmc
jg
daa
or
pop
xchg
sub
or
insl
outsb
push
lods
xchg
or
scas
sub
sar
mov
jae
addr16
mov
sbb
xor
dec
movsb
mov
insl
cmpb
sub
pop
mov
xor
imul
jmp
and
aaa
adc
imulb
xchg
hlt
lods
js
sahf
mov
push
mov
jnp
inc
aaa
pop
or
jmp
mov
push
add
push
pushf
or
jmp
dec
adc
scas
mov
sub
inc
ljmp
or
ja
es
push
inc
jmp
xchg
mov
test
sbb
jecxz
xchg
inc
cltd
or
cmp
lods
pop
dec
dec
ljmp
in
call
cs
pusha
std
mov
jb
out
or
movsb
pushf
adc
xor
aam
add
jns
pop
inc
xor
add
jbe
enter
stc
mov
and
ficompl
flds
xor
xlat
cmpl
pushf
lcall
rcll
xchg
call
xchg
ja
pop
stos
pop
sbb
aam
adc
jb
inc
repnz
jmp
mov
jmp
mov
fidivl
sub
xchg
fadds
mov
movsb
mov
or
xchg
mov
inc
or
push
mov
scas
push
and
xor
mov
xor
rcll
test
push
insl
fwait
daa
icebp
or
stc
lcall
das
loopne
xlat
popf
stos
fwait
sub
and
jb
js
lcall
lret
int3
cmp
add
xchg
adc
data16
pop
cwtl
mov
test
out
pop
aaa
sub
shrl
flds
mov
outsl
in
lds
pop
xlat
pop
sbb
cmp
and
jno
shl
add
fdivrl
cwtl
jg
cmc
and
xor
inc
pop
out
pop
stos
popf
sbb
cwtl
je
xor
and
or
das
dec
push
aaa
test
mov
ja
divb
xor
popa
mov
mov
dec
push
shll
jb
mov
lods
inc
repz
and
stos
xor
xchg
adcb
scas
ds
stc
add
sahf
rolb
jne
popa
stc
repz
jp
jb
jle
xorb
popf
inc
adc
lds
cs
imul
cld
inc
loope
xor
xor
cmp
lahf
xor
cmc
movsb
cmp
ljmp
pop
das
cmp
xchg
xor
and
outsb
sub
sub
fidivs
scas
sub
mov
push
or
or
cwtl
pop
aam
push
imul
nop
jbe
pushf
rorl
add
lds
scas
rol
dec
in
jne
into
flds
pop
push
insb
lret
scas
xchg
mov
pop
xor
cmp
adc
mov
cli
dec
pop
inc
sub
movsl
notb
stos
sar
jo
lret
loop
mov
push
add
adc
or
jbe
jmp
pop
mov
or
pop
dec
jl
sbb
out
aad
shlb
xchg
fwait
cmp
push
aaa
mov
out
xor
je
popf
testb
xchg
js
inc
xchg
inc
lods
pop
div
movsb
dec
mov
arpl
add
sbb
fdiv
rcll
andl
in
xlat
sub
jle
or
fwait
pop
jmp
icebp
xor
mov
repz
loope
mov
into
repnz
jns
repz
xor
mov
aaa
scas
pop
sbb
mov
call
mov
cld
insb
call
test
xchg
stc
imul
jge
lret
nop
scas
mov
jno
fdivs
jecxz
cmp
or
mov
test
in
mov
lods
xchg
mov
int
sbb
int
jp
test
inc
in
sub
decl
icebp
fimuls
div
sub
loopne
xor
dec
dec
push
cs
in
out
mov
lcall
or
in
jo
out
mov
jbe
in
mov
pop
faddl
xor
mov
dec
in
movsb
lds
inc
sbb
cmp
mov
ds
mov
orl
shll
adc
jnp
insb
pop
lds
mov
or
testl
xor
cwtl
jno
std
xchg
imul
cs
in
mov
out
movsb
sbb
call
sti
cwtl
dec
loop
jmp
movsb
inc
mov
dec
cmpsb
repnz
mov
stos
fisubrs
pop
fs
jge
mov
jnp
cmc
ret
adc
cmp
mov
stc
and
xchg
inc
push
push
pusha
andl
jns
stc
push
mov
in
jb
shlb
inc
inc
xor
lods
pop
test
mov
or
mov
sub
sbb
ret
shll
mov
fidivl
out
orb
push
jnp
cs
insb
jb
pop
ror
push
xchg
sbb
imul
inc
xor
movsl
ljmp
mov
cmpsl
and
dec
cmp
cmpsb
cld
mov
jmp
icebp
sub
push
sbb
imul
repnz
fnstsw
fs
and
pop
pop
rorl
jecxz
xor
jp
sbb
mov
test
adc
cmp
and
in
cmp
sub
cmp
rorl
leave
and
daa
push
jmp
jge
inc
sahf
mov
and
aas
std
jge
hlt
in
test
in
lods
pushf
fs
imul
xchg
push
add
loope
cmpsb
aam
add
add
sub
mov
add
je
out
inc
jmp
and
add
push
aam
nop
push
mov
mov
cmp
and
btr
cmp
pop
or
repz
push
sub
sub
jbe
in
or
arpl
std
imul
shrb
jmp
inc
out
mov
cwtl
add
dec
mov
and
mov
pushl
lahf
pop
out
mov
push
mov
push
fsub
sbb
rclb
mov
jae
stc
pop
xorl
fs
xchg
sahf
rorb
push
mov
inc
icebp
push
lds
scas
mov
fwait
roll
mov
push
mov
in
subb
inc
jl
in
sub
inc
loopne
inc
out
ss
cmp
jne
enter
loopne
xchg
dec
sbbb
out
aaa
pushf
rcl
mov
stos
sub
mov
incb
test
xchg
pop
mov
mov
xor
adc
fucomp
pop
dec
stc
or
loope
arpl
negl
push
pop
pop
sbb
in
cli
notb
pop
shrl
sub
cmpb
movsb
fstps
fidivrs
adc
popf
in
sbb
aad
insb
jno
gs
pushf
pusha
pop
rclb
cmpsb
in
pop
lds
cmpsb
push
movl
jmp
pop
cmpsl
cmc
popa
rolb
shlb
cmp
pop
cmp
and
adc
xchg
xchg
fcompl
inc
imul
ds
in
push
jae
inc
pop
in
add
jae
xor
cld
cmpsl
or
lods
or
enter
xor
sub
loope
mov
fldcw
mov
pop
cli
cmc
mov
movsb
insl
mov
jo
movsl
mov
mov
test
mov
pusha
xchg
loope
je
add
xchg
jp
mov
sarb
dec
cli
push
sbb
inc
loope
sbb
cmc
loope
movsl
mov
jne
mov
mov
mov
mov
push
mov
dec
dec
adc
add
push
cmp
arpl
aam
fistpll
repnz
clc
lods
pop
inc
test
xchg
pop
es
pusha
enter
je
clc
lcall
fisubrl
sub
imul
imulb
push
adc
int3
call
gs
inc
daa
aas
sub
mov
sahf
je
leave
scas
push
sub
xchg
stos
dec
and
icebp
xor
push
sti
push
lahf
lret
mov
imul
rcll
out
and
bound
sub
adc
aad
jne
loope
inc
in
in
insl
sub
rcr
xor
sti
lahf
mov
les
ret
xlat
or
or
and
pop
mov
lret
cltd
int
into
in
std
lock
mov
xor
xor
loop
push
mov
mov
mov
and
jmp
hlt
cmp
test
and
adc
inc
addr16
jae
out
add
out
outsl
fimull
and
ror
and
ja
fwait
xor
test
cmp
jb
jmp
imul
or
sub
repnz
push
mov
dec
jns
pop
mov
aad
push
xor
loop
and
imul
negl
mov
jle
repz
mov
xchg
lret
fs
pusha
mov
stc
pop
mov
ret
mov
jecxz
mov
cmp
pop
das
ret
outsb
xor
xchg
loope
jl
push
pop
mov
scas
and
outsl
or
lret
pop
sbb
mov
idivb
cmp
or
and
lds
subl
pop
scas
aad
cmp
fimuls
in
inc
xchg
xchg
fdivrl
pushl
mov
or
ljmp
jb
lods
mov
lock
js
and
push
or
aad
orl
insb
dec
jnp
lea
ret
rol
flds
sbb
sbb
std
sub
mov
inc
push
mov
fisttps
or
les
dec
ds
in
shll
mov
imul
xchg
xchg
sub
pop
jnp
ret
inc
mov
dec
in
hlt
xor
pop
dec
inc
cmp
mov
imul
testl
les
sub
xchg
push
mov
jecxz
or
mov
daa
mov
mov
mov
aam
fldl
int3
push
ljmp
movl
jg
cmpsb
cli
mov
mov
cmp
or
nop
pop
mov
psubb
or
insl
cmp
sti
cmpsb
pusha
jns
ss
jbe
cmp
gs
jge
fs
xor
jbe
mov
arpl
mov
outsl
inc
xlat
lods
mov
aam
xchg
xchg
or
add
push
xchg
test
popf
imul
enter
add
sbb
arpl
imul
xor
mov
dec
fwait
pop
je
push
mov
dec
nop
popa
stc
fstpl
push
dec
cmpsb
or
scas
mov
divb
or
mov
fcmovbe
and
jecxz
mov
shll
fcoms
adc
xchg
repnz
push
xor
sub
jnp
jp
pop
mov
call
addr16
xchg
adc
jge
fildl
lret
jnp
or
pop
mov
pusha
push
mov
adc
adc
pop
nop
jle
cwtl
mov
mov
mov
in
push
out
ds
sbb
imul
outsl
mov
sbb
jb
bound
cwtl
mov
stos
push
cmp
sub
xchg
push
adc
jno
xor
mov
and
push
add
das
inc
adc
loop
xor
mov
inc
shl
gs
int3
out
xor
sbb
movsb
pushf
xchg
lods
and
loope
add
adc
cmp
addr16
mov
cmp
or
cmp
lahf
ljmp
mov
js
lahf
cmp
sbb
add
dec
push
pop
push
lret
push
push
push
pushf
or
insb
lock
xchg
sbb
hlt
idivb
inc
sbb
das
ret
lret
or
cli
lods
lar
xor
adc
pop
std
push
andl
es
pop
arpl
mov
ret
push
aam
or
xchg
push
dec
test
js
sbb
dec
inc
add
call
in
insl
das
add
mov
clc
imul
or
mov
inc
mov
into
jg
mov
sbb
pushw
out
push
ljmp
mov
lret
js
pop
xchg
roll
or
out
test
int
pop
pop
mov
mov
pop
sbbb
mov
cld
push
mov
pop
icebp
inc
jge
jp
xchg
test
insb
or
xchg
xchg
int3
jo
dec
mov
scas
pop
iret
jns
int3
push
push
loop
adc
fistpll
or
jns
in
mov
bound
hlt
inc
jbe
es
and
call
aam
cmp
add
xchg
mov
push
mov
xchg
pop
mov
jp
andb
xchg
sahf
movsb
int3
stos
daa
cmp
loop
pop
clc
xchg
adc
test
repz
mov
push
dec
mulb
hlt
and
fildl
fidivrl
ficoms
inc
jno
push
mov
lret
ja
jle
ljmp
sub
popf
lea
in
lret
insb
sbbb
adc
scas
cmp
test
dec
mov
test
mov
push
test
xor
mov
jmp
sub
repnz
jne
push
jg
cmp
inc
or
sbb
leave
xchg
in
adc
fiaddl
sub
sti
jb
or
ja
dec
dec
fisubl
pop
inc
ss
mov
cmp
outsb
xor
push
dec
in
ljmp
xchg
seta
loopne
aad
test
jmp
in
inc
mov
int3
sti
int3
and
lock
xchg
push
and
popa
lret
bound
xor
pop
add
out
cmp
in
repnz
pop
fmull
test
jo
sbb
xchg
xchg
push
cmp
mov
push
sti
lods
ds
outsb
std
incb
sbb
mov
adc
jmp
xor
push
push
fistps
inc
leave
sbb
pop
push
movsl
in
sub
pop
mov
scas
out
pushf
hlt
inc
sarb
dec
push
sbb
rcll
dec
or
mov
inc
push
mov
inc
ja
jnp
lret
rorb
mov
test
jno
fmuls
sahf
cmp
or
je
pop
decb
shlb
or
adc
repz
sub
test
ficoms
xchg
push
cld
push
pop
in
pop
xor
gs
arpl
mov
mov
repz
lcall
out
xchg
inc
rorl
xchg
les
and
push
jbe
call
sbb
out
test
and
mov
sar
add
add
or
hlt
sub
jo
push
and
in
fdivl
test
in
or
xchg
xor
int
ret
xor
cmpb
jge
sarb
popf
jg
jl
lret
pop
cmp
pop
xor
add
or
push
ret
mov
fmull
add
cmp
sbb
es
xchg
and
ja
fists
jmp
addr16
cmpsb
push
inc
pop
jae
xor
xor
lods
ljmp
pop
ret
ds
xchg
test
xor
mov
xor
test
stc
or
sub
mov
pop
mov
shrl
mov
cwtl
pop
jmp
mov
sub
in
xchg
cli
jg
into
inc
jge
test
scas
aad
out
scas
out
dec
fwait
dec
shll
mov
adc
pop
mov
aaa
fwait
lds
pop
pop
ds
mov
rclb
stc
lret
add
sbb
into
pop
or
add
and
dec
insl
daa
test
pop
in
dec
daa
lock
and
sahf
mov
lock
inc
mov
sbbl
jl
hlt
fcomps
mov
inc
pop
mov
push
dec
inc
and
and
in
lds
cmp
xchg
mov
jbe
jnp
sbb
xor
mov
push
add
inc
ss
and
fldcw
rorl
push
scas
adc
add
insb
sbb
lock
mov
clc
or
adcb
in
jl
push
inc
xor
mov
lds
pop
lock
mov
pop
and
cmc
pop
inc
push
jle
jno
arpl
popa
push
mov
movsb
cld
and
out
ror
add
lds
sbb
sbbb
adc
fidivrs
adcb
inc
daa
or
es
fistpll
outsl
adc
mov
inc
xchg
sub
int3
lds
and
or
xor
lret
mov
mov
sbb
arpl
mov
xchg
add
fsubs
or
jmpw
xor
loope
out
push
ret
or
pushf
or
xchg
inc
lcall
cwtl
mov
hlt
push
lcall
mov
test
sbb
push
adc
cmp
fcmovnbe
subb
sbb
sbb
int
iret
mov
in
cmp
ds
imul
scas
inc
ljmp
mov
rcrb
out
mov
inc
or
jp
xchg
fcomip
and
out
add
xchg
addr16
shlb
push
add
or
popf
mov
add
jno
inc
por
in
lods
pop
jmp
lcall
mov
xor
mov
test
mov
dec
jl
pop
loopne
int
inc
aad
or
call
cmp
jp
imul
xor
xchg
ficomps
jno
out
aas
mov
sub
add
jne
enter
cld
mov
pop
imul
push
jl
jg
jp
sub
or
or
call
pop
lods
mov
xchg
dec
mov
pop
jle
hlt
and
out
lahf
bswap
decb
es
mov
ret
lock
jnp
pop
je
popf
adc
loopne
sbb
test
pop
add
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
aad
xchg
cld
popa
bound
bound
push
in
cmpl
clc
or
dec
mov
pop
out
loop
adc
dec
add
lds
sbb
call
sbb
jecxz
in
or
inc
mov
sbb
mov
fdivl
mov
imul
subl
test
mov
pop
xchg
repz
fwait
leave
xchg
push
fistl
or
mov
sub
bound
adc
loopne
push
xchg
outsl
in
xchg
mov
in
aad
or
loopne
mov
out
pop
adc
mov
pop
cld
dec
jl
mov
out
dec
dec
mov
repnz
and
lahf
popa
and
bound
cltd
xchg
push
cltd
cmpsl
add
frndint
jno
lds
fucom
mov
out
loopne
dec
out
inc
into
fbld
or
les
xchg
iret
popa
adcb
mov
adc
mov
jl
dec
aas
mov
xchg
daa
and
das
ss
inc
call
xor
rorl
sub
notl
lcall
or
sbb
stos
pop
lods
pop
mov
dec
cmpsb
pop
scas
ret
jmp
xchg
jb
popl
pop
mov
sub
mov
jmp
add
mov
imul
jle
mov
or
pop
sub
adcl
adc
movsb
cs
mov
jbe,pn
mov
jo
sar
das
ss
movsl
fists
mov
fucomip
pusha
lds
cmp
push
sbb
out
xor
and
pop
xchg
xchg
lock
popf
add
imul
cwtl
cmp
test
or
xor
sub
jg
mov
push
xlat
mov
xor
mov
jge
xor
xchg
mov
add
inc
mov
cmp
jge
out
lds
shll
nop
xchg
std
inc
jnp
jb
or
cwtl
mov
fisttpll
inc
aaa
imull
push
mov
add
pusha
pop
mov
mov
or
or
dec
mov
out
and
and
in
je
dec
push
mov
push
inc
jno
sub
in
xchg
inc
add
push
scas
pushf
add
fisubl
or
ret
lods
movsl
xor
pusha
mov
or
fists
sbb
sbb
in
in
xchg
loopne
pop
jno
outsl
pop
mov
ja
lret
inc
and
popl
pop
xchg
in
jns
cld
data16
outsb
cmp
scas
xchg
xchg
call
push
and
pop
adc
xor
js
mov
fisubrl
sbb
adcb
mov
int3
addr16
push
adc
nop
jecxz
mov
push
inc
push
in
jnp
in
jnp
pop
xchg
popa
lahf
xchg
mov
jmp
cmpsl
sub
pop
clc
hlt
xchg
inc
xchg
int3
push
add
lds
push
in
sub
cmp
add
pop
sub
fisubrl
test
ret
movsb
inc
mov
cmpsb
jns
rol
sub
cmp
cmpsb
dec
shll
cld
bound
xor
push
imul
adc
cmp
leave
sbb
rolb
int
add
or
test
pop
sbb
sahf
sub
ja
push
or
notl
sub
into
pop
xor
ret
push
das
loope
pop
dec
jns
mov
cmp
and
adc
xchg
jb
adc
fstps
jmp
xor
sub
mov
jecxz
or
jp
push
orb
in
sbb
lods
iret
das
adc
dec
mov
and
ffreep
fildll
call
sti
in
lahf
pop
pusha
push
jo
push
cmp
mov
gs
or
push
jno
sbb
pop
rclb
repnz
stc
clc
or
mov
and
sarb
adc
cltd
mov
adc
mov
lods
dec
jbe
mov
into
jle
push
fildll
lret
jns
mov
dec
iret
in
push
or
cld
movl
sbb
add
lods
sbb
lret
sti
jecxz
sti
jecxz
nop
out
aaa
and
fisubrl
out
test
je
loopne
lods
inc
xlat
mov
mov
mov
or
jge
std
jmp
scas
ljmp
xchg
movl
mov
cmp
adc
shrl
mov
push
mov
cmp
dec
mov
rcrb
push
or
arpl
fcompp
or
sarl
inc
clc
repnz
mov
shlb
rorl
lret
push
insb
cmp
fsubs
lds
or
jns
loop
add
xor
and
push
pop
test
sub
lods
inc
ret
push
push
or
mov
fwait
xor
push
inc
dec
sub
push
leave
mov
test
sbb
repz
pop
dec
mov
push
jns
scas
js
cpuid
dec
pushf
jb
or
lods
inc
cli
lahf
pop
add
mov
repnz
mov
cmp
addr16
push
jecxz
xor
test
xchg
push
push
hlt
jmp
cmpsb
movsl
sub
stc
inc
mov
jae
mov
fwait
sbb
jl
ds
enter
push
ret
pop
je
cmp
cmp
mov
enter
mov
dec
rcrl
fwait
cltd
mov
dec
dec
adc
inc
ds
mov
jnp
pusha
out
lahf
outsl
popa
in
test
jg
add
cmc
mov
iret
je
arpl
test
mov
push
repnz
mov
mov
popf
in
jno
dec
cmp
in
push
jno
push
subl
inc
jp
loopne
clc
iret
xor
imul
push
pop
dec
sbb
cs
and
addb
pushf
cmp
push
or
lret
pop
lods
inc
out
loop
pop
sbb
lret
mul
jmp
mov
aaa
jns
loope
cmp
int
mov
nop
movsl
fsubs
sti
or
testl
jb
test
dec
inc
inc
xor
push
sar
insl
lcall
es
and
cwtl
sbb
cs
pop
jmp
xchg
mov
in
fistpll
jge
lods
movb
or
cli
mov
mov
xlat
arpl
out
jno
mov
cmp
loop
dec
push
aad
ret
dec
mov
or
mov
lahf
das
or
add
pushf
outsl
mov
mov
je
or
test
daa
xor
mov
inc
mov
les
xor
push
out
stos
push
xchg
push
adc
mov
bound
pop
mov
pop
in
sahf
scas
ds
and
cs
jno
xlat
enter
js
lahf
xchg
roll
dec
test
movsl
mov
inc
add
mov
pushf
daa
mov
mov
fadd
lods
ds
mov
xor
lea
je
and
xchg
push
call
adc
andl
jecxz
subl
loopne
dec
repz
push
cmp
or
nop
cmp
inc
xchg
or
sbb
dec
sahf
imul
push
lods
mov
popa
mov
repnz
mov
add
das
xor
inc
stos
push
jbe
jnp
cmpsl
push
sub
or
xlat
stc
addr16
out
icebp
add
pop
adc
mov
or
cmp
mov
dec
mov
inc
clc
stc
ficomps
orb
dec
fst
cmp
popa
xor
div
ret
inc
cmp
in
jbe
cld
xchg
mov
aam
shrl
push
pop
scas
es
sti
xor
test
cmc
icebp
rol
mov
xor
scas
mov
out
sbb
js
aam
int
mov
insb
sar
dec
add
inc
inc
jbe
mov
movsl
jmp
flds
clc
xor
mov
mov
jp
cli
cld
out
adc
xor
dec
ds
xor
jns
xor
jnp
or
repnz
or
jle
mov
mov
push
rolb
daa
lock
scas
xchg
cld
cli
push
scas
mov
repz
divl
cli
fsubl
pop
and
pop
mul
faddp
push
out
arpl
push
pop
xchg
test
call
outsl
or
test
pinsrw
imul
pop
cmp
mov
and
scas
in
mov
lds
vprotb
imul
sbb
outsb
jae
ret
hlt
xor
xlat
int3
lcall
jge
mov
into
aad
cltd
push
jns
aad
cmp
or
lods
loop
leave
cmp
repz
pop
xchg
jg
cmp
mov
enter
add
push
pushf
sbb
scas
pop
inc
mov
pop
aad
imul
xchg
pop
xlat
test
daa
dec
test
daa
daa
test
cmp
adc
xchg
push
cmp
clc
mov
pop
rcll
mov
out
insb
ret
shlb
add
add
repnz
repnz
shr
outsl
jge
scas
out
xchg
or
cld
mov
mov
repnz
test
jnp
fsubrs
inc
push
dec
cmp
jnp
stos
cmp
fists
jne
aas
pushw
mov
and
in
mov
cmp
or
cwtl
psrlw
dec
mov
adc
mov
cld
push
gs
and
push
push
dec
out
shlb
adc
sarl
in
cwtl
cmp
shrb
cmp
sbb
push
in
push
lret
jge
xor
sub
test
push
jl
or
scas
addr16
push
popa
jbe
and
mov
jae
add
lahf
lods
xchg
mov
cs
jecxz
mov
stc
lret
popa
xchg
mov
sub
mov
fidivl
ja
cmp
mov
push
cld
hlt
rcrb
pop
xor
push
stos
mov
mov
fwait
cmp
mov
push
xchg
int3
pop
sbb
rcl
sub
dec
in
fsubs
mov
lock
mov
push
push
mov
fs
adc
pop
jo
jnp
cmp
xchg
or
adc
xchg
cmp
ret
jo
or
push
pop
inc
xchg
xchg
jp
xor
test
or
sub
sub
push
sub
inc
test
mov
aam
hlt
cmp
std
pop
hlt
test
xchg
dec
jmp
scas
jge
pop
inc
dec
cmp
in
fmulp
test
jno
aas
push
test
imul
dec
jne,pt
nop
in
mov
push
clc
loopne
dec
stos
in
adc
shld
mov
sub
mov
mov
popa
cs
dec
mov
jo
lcall
and
addr16
jle
inc
and
cmp
jns
inc
adc
out
in
mov
rol
pop
nop
repz
in
test
mov
add
add
dec
sbb
aaa
push
pop
mov
mov
cmpsb
stc
movb
pop
xor
push
out
clc
xchg
jno
shrl
arpl
inc
loope
dec
out
push
inc
cwtl
xor
mov
xor
xchg
out
push
push
add
jb
jno
cmp
lock
mov
outsb
mov
int
pusha
out
into
insb
sub
and
mov
dec
fisttpll
pop
sbb
or
xor
add
mov
adc
out
pop
popf
std
scas
xchg
pushf
into
cwtl
jle
gs
roll
mov
mov
insl
call
shll
dec
test
gs
sahf
imull
adc
xor
aam
sub
sub
mov
pop
mov
pop
idivb
add
mov
or
outsb
pop
cmp
add
inc
xor
mov
cmp
cmc
lds
ret
push
testb
or
test
add
test
and
add
adc
cmc
fwait
ret
jecxz
sahf
das
jb
and
adc
test
fabs
push
sub
xor
stc
bound
mov
andb
sahf
pop
dec
cmpsb
mov
dec
iret
cmp
in
mov
imul
loope
dec
mov
lds
sti
iret
sbb
cmp
mov
mov
daa
enter
pop
addr16
jnp
adc
push
mov
pop
sti
jp
pop
insb
sbb
and
movsb
imul
xchg
inc
and
add
and
mov
and
jae
cmp
xchg
dec
adc
je
xchg
xchg
xchg
mov
push
jb
movsl
fisttps
cs
sbb
mov
mov
ja
dec
arpl
pop
jl
inc
inc
repnz
rcr
sbb
add
imul
rolb
je
xchg
cli
repz
push
aam
mov
pop
pushf
es
rclb
xlat
cwtl
pop
and
rcll
cmp
inc
cmp
mov
push
xchg
lcall
pop
push
or
or
sbb
jo
fxtract
add
mov
aad
mov
mov
xor
sbb
cmp
dec
xchg
ret
sbb
xor
and
js
or
sub
cmp
xor
jmp
ror
xlat
insb
stc
ret
rcll
sub
mov
pop
in
hlt
gs
mov
cmp
daa
cmp
xor
mov
scas
test
xor
dec
mov
mov
inc
mov
and
dec
bound
leave
cmc
scas
lods
jns
lods
push
inc
addl
push
jmp
fdivrs
inc
ror
int3
sbb
mov
out
adc
jge
enter
sti
mov
dec
inc
mov
sub
movsb
push
shl
inc
add
mov
test
mov
add
in
lods
in
out
push
pusha
and
mov
sub
xchg
xlat
xor
cmp
add
xor
push
or
mov
ss
in
cmpsb
xor
push
push
int
add
xchg
add
mov
test
jge
mul
int
std
cli
add
fdivrs
mov
sub
jb
loope
scas
stos
imul
sub
xor
add
jno
add
or
ss
addr16
insb
cmpsl
add
inc
sbb
mov
inc
fnstenv
or
jecxz
adc
negl
pop
cmc
test
mov
in
out
rcrb
inc
enter
cmp
mov
sbb
push
aas
dec
fdivs
call
leave
xchg
cmpsb
mov
adc
jge
into
mov
in
xchg
xchg
fdivrl
pop
negb
fmulp
mov
repnz
push
stc
mov
adc
inc
cmp
or
mov
pop
mov
movsb
into
jmp
movsl
xor
stos
jp
pop
push
loope
mov
push
test
inc
add
sub
jp
test
adcl
inc
outsl
negl
dec
je
jae
out
cmp
shll
cmpsb
pop
inc
xor
push
add
pop
in
cmp
and
and
andb
mulb
lahf
push
daa
xchg
pushf
dec
daa
add
scas
int3
and
jno
mov
sbb
xor
faddp
test
xor
xor
mov
popa
fwait
cli
movsb
adc
bound
inc
outsl
mov
ret
push
jno
sar
or
sub
jp
jns
aam
aad
pop
repnz
xor
adc
sahf
sahf
pusha
sub
sub
pop
cmp
insb
jmp
sahf
xchg
or
mov
sub
add
mov
push
push
cmc
inc
xchg
add
fs
and
sahf
ret
jns
xchg
hlt
xchg
mov
out
adc
push
pop
xor
es
mov
push
xlat
push
sti
inc
add
cld
ds
pop
out
sbb
mov
mov
jo
jecxz
sub
aam
js
add
adc
mov
xchg
in
lretw
lods
xchg
jo
mov
dec
push
iret
je
push
jge
fdivs
and
cmp
cmp
fdivl
pop
das
mov
shlb
mov
movb
daa
ljmp
in
mov
sarl
xlat
jg
inc
xor
in
sarb
es
or
push
xchg
mov
data16
add
int3
inc
jle
mov
mul
iret
cltd
sbb
arpl
fmuls
cmp
xchg
and
scas
gs
lret
gs
fisubl
xchg
out
ja
push
sub
gs
pop
in
ficoms
sarl
jp
push
mov
ja
hlt
cli
push
movsl
inc
push
push
push
dec
insl
cmp
xchg
xor
test
orl
add
inc
push
sahf
add
cmpsb
push
out
jb
out
pop
add
push
jbe
mov
enter
dec
fsts
dec
in
adc
push
in
and
enter
pushf
sub
dec
cmc
and
paddusb
aam
xchg
in
or
pop
sub
jmp
fldcw
sti
adcl
mov
mov
lret
shl
push
lock
clc
incl
adc
jne
jmp
mov
pushf
gs
ret
cli
lds
mov
xchg
mov
mov
test
divb
ret
jmp
inc
insl
mov
inc
mov
jnp
mov
xchg
mov
adc
and
mov
add
incl
inc
out
rolb
pop
mov
cmp
and
fcomip
ljmp
pushf
pop
push
dec
xor
or
lcall
or
mov
shl
fsubrs
adc
imul
rcrb
mov
or
jne
push
fisttpll
inc
push
lcall
push
jo
or
adc
cmp
or
pop
aad
push
xchg
mov
mov
cmp
es
js
dec
xor
lea
enter
xchg
push
pop
sub
sbb
lods
out
add
pop
mov
call
mov
orl
rolb
sub
add
mov
fsubl
fwait
or
mov
dec
jns
stos
xor
cwtl
fldenv
mov
add
inc
mov
push
scas
inc
ljmp
ljmp
mov
ret
adc
lahf
les
movsl
sub
fdivl
shll
mov
scas
pop
ss
sbb
jle
hlt
rcll
stc
mov
xor
sahf
push
pop
imul
push
outsb
leave
pop
out
push
xor
sbb
jne
push
test
mov
sbb
mov
in
mov
dec
add
mov
out
jmp
shrd
fcomp
inc
dec
inc
adc
out
cs
leave
lret
insb
test
dec
inc
pop
push
add
stc
jecxz
hlt
push
dec
pop
cmp
adc
mov
mov
cmpsl
adc
jbe
jb
out
aas
sbb
cltd
int
mov
pop
call
test
xchg
rorl
jae
xchg
pop
sub
dec
sub
adc
in
sahf
fsubrl
ret
dec
ljmp
lret
imul
sti
xor
inc
and
mov
cmp
or
ficoms
push
ret
cmpsl
dec
xor
pop
jge
mov
and
loope
movsb
mov
ds
mov
in
pop
add
aas
jecxz
scas
pusha
adc
adc
xchg
out
push
xchg
mov
xchg
or
mov
jns
push
inc
sub
dec
leave
stc
shll
dec
lcall
mov
and
cld
popf
pop
add
sub
mov
mov
xor
cld
ret
testl
pop
scas
or
push
std
loopne
add
pop
dec
ljmp
fisubrs
lds
pushf
mov
aad
jecxz
push
pop
jecxz
inc
sahf
inc
fcoms
and
xchg
stos
push
pop
or
adc
cmp
pop
xchg
adc
or
dec
outsl
mov
mov
ja
xor
call
sbb
xor
loopne
in
in
sar
xchg
or
addl
sbb
push
mov
inc
cmp
cmc
cmp
jno
lcall
xchg
leave
stc
mov
add
sti
dec
xchg
and
jg
or
mov
and
and
adc
and
into
sub
mov
sbb
ljmp
jmp
pushf
loopne
mov
loop
enter
aas
xor
rolb
idiv
cmpsl
push
jb
inc
sub
das
dec
pusha
into
popf
jns
andb
jne
and
mov
nop
inc
fwait
sub
inc
cmpb
pop
cmc
sub
cld
bound
push
sub
std
cmp
ret
jp
push
sub
shll
in
stos
push
sub
dec
xor
out
das
xchg
hlt
cld
fwait
shl
inc
add
cmp
fadds
scas
inc
and
int
mov
pop
in
dec
dec
mov
fidivl
sub
arpl
aas
jb,pn
pop
das
dec
movsl
push
popf
pop
negl
imul
lods
sbb
insb
hlt
mov
xor
mov
loop
jmp
pop
js
mov
dec
lret
outsb
lret
dec
add
sbb
loopne
pop
nop
pusha
scas
adc
lcall
add
gs
das
push
aam
cmp
xchg
inc
outsl
stos
ret
mov
mov
inc
xchg
bound
lret
out
addr16
cmc
xchg
je
sbb
stos
loope
mov
in
mov
push
inc
dec
bound
mov
scas
jnp
sbb
or
mov
in
test
repnz
fiadds
or
sbb
pop
movsl
inc
movsb
data16
outsl
into
adc
xchg
push
and
xor
adc
or
sub
add
out
clc
dec
and
inc
sbb
aam
inc
and
inc
jmp
lea
xchg
or
into
fnstcw
mov
adc
fdivrl
test
inc
rcrl
adc
push
xor
imul
or
scas
mov
ss
insb
mov
push
ss
or
xor
add
sbb
mov
pop
mov
lahf
rorb
clc
jle
jge
xor
xlat
insl
dec
push
cmp
and
cmpsl
xchg
or
adc
das
mov
fiadds
addb
push
jnp
dec
jbe
stos
pop
mov
xchg
clc
cmp
test
scas
push
in
sub
insb
jp
repz
in
scas
add
mov
xor
les
push
cwtl
pop
or
cmp
dec
mov
ret
adc
xchg
mov
dec
std
hlt
cs
jnp
in
mov
cmp
repnz
xchg
cmp
or
enter
dec
dec
and
dec
sti
adc
cmp
icebp
sub
or
or
lret
and
sbb
popa
and
lods
js
scas
fwait
ljmp
stc
xchg
and
push
hlt
and
jmp
pushf
cld
push
ljmp
cmc
or
les
in
or
andb
mov
pushf
push
ret
outsb
icebp
adc
popf
or
out
add
pop
maskmovq
mull
lret
clc
movsl
fcmovnb
out
pop
xor
mov
adc
in
ret
stos
hlt
sbb
dec
imul
jo
stos
pop
jmp
int3
lock
testl
sub
inc
popa
imul
inc
or
cmp
mov
imul
cmpsb
sbb
jno
cld
and
inc
dec
sbb
xchg
cmc
adc
and
adcl
jb
pop
xlat
out
sbb
and
cmp
cld
je
jae
sub
insl
cld
add
xchg
hlt
daa
dec
testl
sbb
negb
lahf
lods
mov
or
dec
xchg
push
cli
dec
sti
iret
ret
or
aas
jne
pop
adc
je
cmpsb
mov
imul
ljmp
xor
sbbb
in
pop
cli
ljmp
testl
add
push
or
or
shlb
mov
hlt
sbb
jne
jecxz
and
or
sti
ficompl
sbb
psubd
xor
adc
mov
pop
fisttpll
mov
mov
ds
imul
repz
ss
dec
iret
sbb
cmp
and
mov
outsl
mov
fwait
test
es
xchg
out
inc
shll
inc
xchg
mov
and
int
or
mov
int3
cmp
sarl
out
stc
jp
mov
push
dec
push
imul
aaa
aad
add
mov
sbb
js
jb
in
jge
insb
cmp
pop
mov
out
fisttpll
jns
sbb
fdiv
xor
dec
push
cmp
inc
mov
pop
aad
inc
sbb
sbb
jg
adc
pop
cltd
xor
int3
or
push
es
fmul
add
push
xchg
lcall
xchg
addb
arpl
je
jnp
arpl
pop
xlat
dec
scas
int3
fists
pushf
insl
fsub
adc
and
xchg
adc
test
push
inc
jne
shll
mov
stos
popa
jne
fdivr
pandn
push
movsb
push
fsubrs
lret
pop
es
sbb
jp
dec
pop
pop
mov
or
out
sub
jns
cmp
sbb
cli
insl
jecxz
mov
sbb
daa
out
pop
les
mov
inc
ret
test
and
adc
ror
sarb
gs
test
pop
xlat
or
loopne
data16
stc
and
or
adc
inc
dec
enter
aad
imul
dec
mov
add
or
and
enter
pop
rcl
dec
cmp
frstor
cmp
sbb
mov
jl
cwtl
out
sbb
fsubrs
jg
xabort
in
or
push
movsb
andps
xchg
inc
repnz
mov
pop
or
stos
xor
leave
jo
pop
push
adc
test
fistps
sbb
mov
pop
in
push
sbb
imul
stc
push
xchg
mov
sbb
rol
adc
stc
mov
outsb
pushf
insb
xor
stos
cld
dec
imul
pop
jbe
dec
movsl
inc
shll
enter
ja
pusha
sahf
movsb
jp
jno
mov
xor
add
xor
inc
dec
ret
pop
and
bound
mov
sub
je
rolb
mov
mov
popf
push
pushf
add
je
nop
shlb
popa
add
cli
in
sub
outsb
daa
iret
jmp
les
movsl
cmc
and
cmc
mov
popl
into
je
xor
daa
ljmp
mov
pop
jg
andb
out
xor
mov
out
stc
inc
addb
scas
je
cmp
and
cmp
sub
fldl
jp
test
lret
fwait
stos
push
stos
jmp
mov
xchg
test
mov
call
push
shl
xor
in
call
std
pusha
push
imul
jg
int
jne
inc
mov
andl
inc
imul
dec
dec
loopne
mov
mov
out
outsb
jecxz
nop
mov
sahf
mov
mov
pop
fwait
xlat
jae
mov
stos
inc
jbe
aaa
push
ds
hlt
rclb
sub
mov
mov
lock
push
out
je
xor
outsb
sub
and
icebp
push
into
jae
or
xchg
ja
enter
fwait
test
jle
dec
adc
sbb
jl
sbb
pop
cmp
stc
cmpsl
xchg
hlt
mov
out
fnstsw
or
mov
out
cmpl
pop
outsb
outsl
sub
sub
lea
mov
outsl
fninit
push
neg
or
mov
cwtl
aaa
test
inc
bound
and
xchg
stos
dec
push
in
cld
push
inc
push
dec
not
out
xor
mov
loopne
cs
data16
mov
movsb
cmp
xorl
call
mov
mov
mov
sub
add
repnz
lahf
inc
and
push
jmp
sub
out
jbe
or
jl
push
lods
rorl
or
lock
cmp
pusha
mov
mov
insl
fldt
push
cld
cmp
mov
aam
jbe
int
fisubrs
or
cmp
bound
jns
cltd
cmpb
adc
loope
dec
enter
lock
andb
xchg
and
test
push
mov
mov
gs
negl
pop
add
push
les
add
daa
aam
ret
lock
push
and
data16
lret
movb
fisttpl
sbb
push
js
stos
mov
dec
sbb
xchg
mov
in
pop
sbb
pop
fisubs
push
popf
mov
hlt
dec
ret
int3
test
int3
jo
sbb
jge
dec
dec
loope
stos
or
sub
xor
mov
xor
repnz
das
jmp
dec
cmp
xchg
lret
test
mov
aaa
lods
push
xchg
test
addr16
stc
xchg
add
mov
insb
pop
out
inc
stc
stc
daa
cmpsl
sub
or
add
jne
push
mov
add
ljmp
stc
push
ret
xchg
add
mov
pop
mov
sbb
addl
ror
cmp
shll
or
jne
cmp
gs
add
mov
dec
sar
xor
stc
sbb
leave
fldenv
test
fwait
jecxz
xor
pusha
shlb
add
jp
lret
dec
pop
ljmp
nop
push
xor
jl
or
loope
loop
sub
lock
call
out
or
ret
xor
in
or
mov
mov
jns
push
lods
bound
ljmp
jns
push
lahf
jmp
xchg
cld
testb
stc
mov
arpl
dec
add
mov
xor
pushf
iret
xchg
mov
sbb
les
cwtl
xor
mov
dec
repz
out
inc
pop
sbb
mov
mov
pop
mov
xchg
test
aam
adc
push
adc
push
lahf
inc
or
dec
fcmovne
adc
xchg
js
jp
popf
adc
mov
lret
test
cmp
std
sub
push
xchg
adc
jne
ds
xor
je
daa
daa
dec
sub
inc
iret
mov
rcrl
xor
loop
push
inc
enter
mov
dec
sub
jle
in
pop
sub
pushf
popw
out
and
or
or
test
adc
out
mov
dec
pop
mov
pop
pop
mov
xor
nop
or
push
leave
xor
push
aad
rclb
fnsetpm(287
fidivrl
pushf
xor
mov
ret
mov
clc
adc
ret
sbb
ds
test
fisubrl
jo
rcll
sbbl
mov
repz
sub
xor
daa
adc
imul
jl
imul
mov
je
dec
stos
sbbl
movsl
jle
jne
leave
push
stc
rorb
cmpsl
add
ret
adc
test
mov
cwtl
or
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
inc
inc
push
fsubs
cmp
bound
inc
sbb
mov
or
scas
nop
add
pop
ret
xor
sbb
imul
fdivl
add
in
pop
popf
xor
adc
cmpsl
pop
sbb
push
ret
std
loope
jg
dec
lahf
movsb
jno
nop
pop
jge
xchg
push
shll
lret
add
dec
mov
mov
loopne
shlb
lret
cld
cld
fsubp
add
test
sbb
cmp
fldcw
xchg
xchg
cmpsb
jae
call
std
jge
das
mov
es
push
cmp
jmp
bound
jmp
pop
in
pusha
inc
sub
ja
ficoml
jp
xchg
leave
pop
mov
mov
ja
adc
pop
stc
pushf
aaa
jmp
fisttpll
mov
cmpsb
lahf
dec
xchg
fsts
mov
leave
dec
or
sbb
pop
sub
jnp
cmp
jecxz
sbb
and
fldenv
and
jmp
adc
cmp
out
stc
xor
in
sahf
lds
sbb
and
xor
je
ja
dec
and
mov
sarb
insl
mov
xor
bound
push
or
sub
push
sbb
cmp
ja
mov
stos
and
rcrl
mov
shrl
xor
sub
jo
inc
mov
lahf
insb
mov
out
xchg
xor
scas
push
in
dec
inc
push
push
xchg
or
adcl
aas
dec
bound
or
popa
xchg
aas
xor
and
adc
mov
sub
into
and
dec
arpl
fsub
movsl
ja
call
dec
mov
out
rorb
test
push
and
adc
xor
cmpl
xor
pop
xchg
jo
cmp
lcall
inc
dec
je
xlat
add
lods
fcompl
or
bextr
gs
inc
insb
add
fucomi
cs
mov
xchg
xchg
cs
fidivrl
sub
jg
dec
test
enter
pop
loope
sub
xchg
xor
gs
mov
and
mov
mov
inc
addr16
or
lds
out
pop
push
pop
add
out
jg
mov
jle
or
in
cmc
fsts
js
mov
or
popa
adc
add
mov
jp
pusha
cld
icebp
aas
mov
inc
jp
inc
mov
aas
inc
mov
and
xor
cmpsb
mov
or
fdivl
push
push
mov
nop
outsb
jno
mov
sub
sarb
fsubs
mov
jbe
xor
in
push
mov
inc
dec
xchg
inc
fisubl
call
into
ss
sarb
inc
in
mov
pop
or
mov
jp
stos
sbb
sbb
aam
xor
or
es
sub
sbb
fldcw
mov
ljmp
out
je
pop
into
jle
lcall
jns
mov
pop
lahf
mov
cmc
rcrl
fdivrl
js
aam
add
push
out
dec
jne
cmp
mull
pop
fwait
sti
in
jle
jp
movsb
cmc
pop
sub
jnp
out
adc
cltd
sbb
daa
rcrb
push
leave
test
mov
cmp
fldcw
div
cmp
xor
les
pop
out
leave
daa
mov
dec
icebp
lea
rcll
or
call
sub
dec
ja
leave
rcr
out
xor
pop
pop
mov
sub
sbb
mov
add
enter
lcall
sub
or
bound
bndldx
lcall
jecxz
mov
int3
mov
jb
adc
movsb
jg
mov
orl
dec
cmp
sahf
mov
sub
mov
mov
shrl
loope
push
adc
cltd
repnz
lea
adc
pop
jp
outsb
xor
xchg
mov
out
aaa
out
jae
add
or
mov
test
sahf
test
cmpsl
push
das
jmp
push
test
dec
push
mov
or
sub
shr
dec
mov
cmp
in
add
mov
jecxz
or
int3
ljmp
or
mov
xchg
fldpi
push
out
negl
sub
in
std
xchg
and
sysret
dec
ret
scas
and
lcall
xchg
xchg
lret
lret
jp
lret
push
push
lret
pop
mov
fucomip
in
popw
push
add
or
in
jb
add
push
pop
lcall
dec
add
flds
movl
inc
mov
test
jns
mov
iret
test
sub
or
jb
jbe
dec
mov
int3
push
sbb
mov
jmp
popf
push
push
jge
andl
fwait
popf
scas
test
popa
lret
imul
pop
dec
pop
xor
jl
cs
adc
add
jl
lcall
cmp
mov
inc
daa
repz
dec
loope
int
imul
ret
je
xchg
push
out
add
inc
leave
add
cmp
test
mov
xor
movsb
adc
inc
loope
mov
addb
sbb
and
shl
dec
lret
mov
push
idiv
adc
mov
fiaddl
xchg
ds
sbb
inc
lahf
inc
mov
fcmovnb
xor
and
mov
cmp
lea
mov
push
mov
imul
movsb
push
and
adc
les
fildl
nop
in
push
pop
je
inc
ret
inc
cmpb
mov
lahf
cmpsl
movsl
std
and
lret
mov
mov
xor
xlat
pop
mov
xor
cli
mov
fsubl
mov
inc
jl
mov
ljmp
mulb
lock
lcall
imul
dec
out
aam
xchg
in
pusha
xor
inc
dec
jl
mov
shr
lret
mov
ds
pop
daa
aad
xchg
sti
xor
pop
xor
mov
ss
fs
mov
pushl
and
xor
push
inc
movsl
jb
cmp
das
cltd
out
call
push
push
cmp
mov
cmpsl
or
sarb
fcomps
mov
sub
lods
stc
pop
add
mov
and
insb
and
jno
insl
in
lock
movsb
inc
aad
jmp
or
iret
lret
mov
jg
jp
dec
les
popf
insb
or
xor
adc
and
inc
jae
cmpsl
and
pop
jno
xlat
rolb
or
mov
sbb
add
and
xor
out
cmp
into
add
sbb
dec
pusha
ss
jg
ljmp
mov
out
mov
repz
arpl
or
loopne
and
imul
lret
bound
les
js
aam
and
jnp
push
and
ja
xor
in
in
mov
mov
cmpsb
incl
xor
sub
aad
sub
ljmp
mov
fldenv
repz
shlb
push
arpl
mov
cmc
lret
mov
sti
into
les
dec
out
lret
mov
sbb
and
call
aas
incb
pop
ljmp
cmp
out
or
inc
faddp
or
mov
fistpll
mov
es
sbb
pop
std
jp
int3
xor
mov
jno
or
vphaddwq
bound
icebp
outsb
jp
add
inc
popf
pop
in
push
fistl
mov
jl
mov
add
vpaddsb
mov
pop
push
lea
jmp
sbb
test
jle
shlb
mov
adc
push
sbb
or
cmp
cmp
sbb
sbb
jns
and
and
pop
stc
mov
test
xor
xor
movsb
out
dec
add
daa
or
pop
ds
in
add
mov
js
insl
mull
out
das
xlat
dec
mov
in
mov
and
add
cmpb
or
hlt
loop
sub
cmpsl
out
push
add
xchg
sub
mov
int
cwtl
cmp
cmp
inc
mov
shrb
pop
clc
pop
subb
adc
loopne
lahf
xor
into
mov
int3
call
add
lcall
in
xchg
lea
mov
dec
mov
bound
pop
add
leave
clc
add
adc
daa
jo
xchg
test
imul
lock
out
insb
movsb
cmp
mov
jno
mov
cmp
fsubs
inc
jmp
push
or
fistpl
mov
or
adc
sbb
add
adc
addr16
mov
loopne
loope
inc
call
mov
push
gs
ffree
add
rorb
cwtl
fiaddl
sbb
inc
repnz
mov
rolb
mov
mov
or
call
loopne
jg
lods
dec
push
daa
ret
adc
xchg
push
cltd
scas
push
insl
or
push
mov
movsl
inc
pop
push
adc
pushf
addb
movsl
scas
xor
add
adc
es
sti
aas
push
insb
dec
push
insl
aas
sbb
jne
push
push
leave
ret
jecxz
pop
rcll
mov
out
dec
push
dec
dec
ficompl
loope
xchg
xor
repnz
fistps
loopne
xchg
clc
loopne
ud2
jle
cmp
sbb
sub
fnstenv
lahf
mov
sbbb
pop
adc
in
and
je
cmpsl
lret
jne
andl
push
test
bound
testb
push
adc
push
cmpb
pop
mov
push
in
jne
pop
scas
xchg
into
jno
loopne
js
dec
shl
mov
jg
test
sub
xor
rcrl
add
lcall
xchg
jno
mov
ret
out
ret
insl
mov
popf
adc
pop
pop
iret
mov
dec
out
iret
and
arpl
imul
inc
jge
sbb
sbb
mov
movsl
addr16
lds
mov
pop
fistps
into
cld
shll
inc
sbb
popl
mov
mov
or
push
push
or
popa
sub
or
dec
insl
xor
mov
cwtl
sahf
sub
mov
jae
loopne
push
mov
pop
sbb
mov
adc
xchg
adc
movsl
rclb
mov
fcoms
lods
pushf
sbb
jne
pop
imulb
push
rorl
rclb
pop
mov
movsl
mov
pop
ja
dec
sub
imul
lahf
inc
mov
adc
adc
int
stos
aas
pmullw
pop
push
insb
push
add
into
jnp
daa
cmp
jnp
stc
mov
scas
adc
inc
loope
jle
mov
jne
fwait
pop
and
ret
pop
fisubrl
cmp
icebp
pusha
fwait
pop
cmp
cltd
stos
jne
push
sub
dec
jg
sub
in
pop
repz
lock
pop
mov
cmpsl
dec
push
iret
aam
mov
xchg
cmpsl
jns
jmp
fwait
hlt
cmpsb
push
in
xchg
rcll
sbb
lahf
inc
fsub
mov
mov
fldt
test
inc
pop
xor
jno
lcall
jo
lret
xor
mov
aad
mov
subl
mov
ja
push
test
sub
lea
mov
shlb
ja
pop
in
xchg
inc
mov
cwtl
sbb
decl
inc
push
push
rcrb
jg
scas
xor
mov
shrb
inc
int3
cmpsl
pop
inc
push
lock
mov
adc
rcrl
cli
jl
jge
dec
and
in
and
cs
lcall
or
repnz
aad
cli
lods
and
push
inc
leave
jecxz
mov
or
in
push
mov
dec
xchg
push
add
aam
test
hlt
cld
lret
or
adc
mov
call
xchg
movsb
rcrl
push
bound
inc
aam
rcrl
adc
fdivrp
dec
pop
mov
push
dec
jns
das
mov
mov
mov
lds
lahf
xchg
aad
jecxz
xchg
scas
push
int
imul
les
push
jecxz
les
in
jnp
enter
pop
enter
dec
push
push
jl
iret
aam
and
dec
std
xorl
xor
xchg
cld
dec
divl
inc
sbb
pop
push
mov
push
out
mov
xchg
cmp
sub
sbb
lcall
test
inc
fldl
inc
cmp
jnp
push
repnz
push
and
xor
mov
add
xchg
lcall
mov
les
movsl
mov
test
and
add
aas
jp
stc
mov
jae
shll
adcl
mov
arpl
jg
pop
pop
test
int
mov
push
out
cmp
sti
jnp
xor
repz
in
adc
adc
popf
xor
cmp
mov
mov
cmc
pop
xchg
push
repnz
cmpsl
push
mov
outsb
cmp
pop
sarl
mov
cmp
sti
and
add
push
into
shl
outsb
or
cltd
push
lock
xlat
fsubs
sub
xchg
add
ret
jo
xchg
jge
filds
jmp
push
dec
outsb
enter
dec
jl
jns
mov
sarl
xor
or
sbb
mov
ret
add
notl
jnp
jle
outsb
lock
aas
jbe
js
lods
test
test
sub
jge
aaa
addr16
test
xor
test
push
jno
sbb
jnp
and
loopne
clc
fidivs
and
push
add
add
sub
into
in
xchg
push
imul
sbb
insb
push
xchg
jae
jbe
jp
xchg
shll
inc
push
outsb
pop
rcl
shl
dec
jge
cmc
je
lods
jmp
jne
punpckhdq
imul
sahf
dec
lahf
add
lods
je
cmp
pop
hlt
pushf
sbb
lods
outsl
mov
fiadds
popa
jg
out
mov
mov
push
cli
xor
stos
push
sub
sbb
dec
js
mov
stc
pop
jle
roll
xchg
out
jb
or
and
sub
jb
pop
movsl
pop
nop
sub
push
fpatan
addr16
mov
scas
mov
cmp
jb,pt
std
jnp
cmp
sbb
addr16
push
xor
into
mov
dec
jp
xlat
and
pusha
repz
xchg
mov
ja
push
or
out
xchg
imul
test
pop
dec
dec
push
mov
int
jae
push
adc
and
sahf
xorl
push
lods
adc
pop
inc
lcall
xchg
test
lret
jle
lahf
jge
mov
std
cli
push
aad
pop
jne
jecxz
pop
jge
ljmp
aam
jo
cmp
out
or
mov
test
in
ror
inc
imul
mov
mov
mov
mov
insb
lahf
mov
mov
int
xchg
lcall
push
mov
leave
mov
cld
in
mov
mov
bound
in
jmp
loope
dec
inc
inc
cmpsl
mov
leave
movsb
fisubs
pop
cmpsl
mov
push
inc
inc
lock
fwait
xorl
mov
negb
sahf
jae
iret
movsb
jecxz
imul
popa
or
bound
inc
int3
xchg
cmpsl
fstpt
into
xchg
mov
push
stos
cmpsb
cmp
mov
mov
cmpsl
movsb
nop
jle
and
add
cltd
push
mov
es
push
and
enter
pop
add
cld
mov
mov
inc
xchg
les
mov
cmpb
jnp
lock
leave
adcl
incb
test
negl
test
push
scas
jg
mov
mov
pop
push
adc
xor
loope
xor
xchg
adc
cld
xor
insl
scas
pop
push
and
xchg
fisttpl
fimull
mov
lcall
mov
cmpsl
push
pop
jp
stos
icebp
sbb
incb
cmpsl
popf
xorl
imul
leave
mov
jecxz
ret
cmp
int3
into
xchg
cmp
aad
mov
mov
push
mov
xor
or
pop
add
dec
inc
std
adc
addr16
hlt
cmpsl
cwtl
out
mov
lret
pop
sbb
inc
add
mov
jns
jecxz
das
mov
test
pop
add
sbbw
fwait
adc
movsl
cmpsl
add
add
leave
push
add
nop
loopne
mov
enter
test
cmp
pop
pop
ja
cwtl
lea
js
jl
bound
std
jne
mov
push
push
xor
push
push
and
lods
ret
jle
fucomi
sahf
arpl
cmp
mov
test
jge
pop
push
and
scas
enter
push
je
ret
cmc
xorl
mov
hlt
pop
les
push
nop
dec
mov
xor
inc
xchg
fwait
mov
inc
mov
testl
lea
imull
and
addr16
cmp
outsb
jge
dec
pop
pop
bound
ret
addr16
push
fnstcw
mov
pop
inc
and
dec
mov
push
fildl
mov
repnz
jmp
mov
jl
jbe
adc
push
ret
xchg
ljmp
xchg
lcall
xchg
outsb
cld
mov
ljmp
sbb
or
inc
testl
push
ret
adc
test
push
sbb
mov
adc
push
mov
stc
pop
push
mov
mov
mov
push
insb
push
sub
cmp
scas
mov
jmp
sbb
and
pushw
bound
dec
mov
cmpsl
cmp
sub
mov
mov
ljmp
out
les
pusha
pop
xor
dec
push
mov
inc
dec
mov
jbe
sarl
or
and
ljmp
movsl
and
mov
cld
enter
repz
dec
xor
sbb
pop
loope
mov
mov
ss
xchg
arpl
xor
je
lock
mov
mov
and
lds
dec
popf
mov
xor
and
fcoms
push
cmp
jecxz
xchg
test
and
lret
pop
or
std
lods
push
jo
xchg
mov
out
inc
jne
cld
xor
jl
fsubr
in
adc
cmp
mov
enter
and
repnz
out
stos
pop
enter
shr
jno
adc
lods
mov
hlt
xchg
movsb
int3
jp
repz
aas
mov
hlt
push
les
lods
xchg
mov
jae
js
insb
cmp
fnstcw
sub
stc
test
sub
and
fnstsw
dec
jmp
cmp
xchg
imul
add
shlb
popa
cld
insb
fs
adc
mov
or
out
in
mov
or
adc
push
dec
sahf
add
or
fidivl
aas
mov
decl
aam
pushl
insb
loope
mov
repnz
xorl
pop
mov
sbb
jno
xor
xchg
mov
popa
std
cmp
imull
mov
das
jg
stos
call
pop
add
pusha
enter
inc
sahf
std
inc
mov
in
pop
jmp
sahf
js
pop
jo
mov
loope
adc
shlb
or
mov
hlt
outsl
inc
adc
cltd
in
sbbb
pop
enter
adcl
cs
push
pop
mov
aaa
xchg
jg
push
mov
sbb
ja
mov
jnp
adc
push
in
arpl
sbb
shll
loopne
popa
jno
les
mov
xlat
les
sbb
inc
arpl
ror
and
mov
pop
push
xor
cmp
jp
mov
mov
cwtl
fbld
test
push
out
xor
pop
je
mov
dec
mov
aad
push
add
sbb
std
cwtl
sub
popa
scas
shr
into
mov
or
jp
movsl
jle
cmp
std
mov
mov
test
decl
int3
mov
fsubrl
cmc
xchg
cld
sub
push
insl
mov
dec
xor
out
push
or
int3
scas
dec
inc
das
in
jae
push
mov
imul
mov
outsb
mov
hlt
push
enter
push
scas
pop
scas
pop
xor
test
cmc
xor
add
push
cmp
dec
push
inc
sub
mov
push
enter
sbb
adc
out
add
icebp
cltd
insb
stos
pop
fst
inc
imul
sti
mov
xchg
aam
jae
add
dec
lret
ja
sub
popa
push
test
ret
vorps
lods
pushf
adc
cs
fmull
cwtl
jae
sbb
xor
mov
push
mov
cmp
push
pop
xchg
scas
jp
jecxz
in
and
xor
or
mov
pop
pop
pop
es
and
lock
test
mov
xor
fidivrl
xor
fcomps
inc
inc
jle
scas
xor
and
sub
sahf
dec
sti
lods
data16
add
or
or
psrld
inc
push
push
xor
xor
popf
pop
cmpl
jbe
xchg
mov
jle
fwait
cmp
ret
and
rcrl
fs
mov
sahf
daa
adc
sbb
test
in
push
imul
adc
jb
push
adc
mov
sbb
mov
add
and
outsb
in
iret
dec
pop
ja
adc
sbb
jne
cmpsb
mov
fstpt
xlat
pushf
shll
mov
cs
fbld
movb
jp
or
mov
dec
popa
orl
in
outsl
mov
ficomps
sbb
pusha
jecxz
sbb
inc
cmp
aaa
xlat
movsb
test
pop
leave
jnp
inc
adc
roll
lret
cwtl
cli
enter
push
inc
jne
dec
in
and
ljmp
loop
rclb
jb
ljmp
cmp
sub
xchg
jbe
insb
xchg
pop
dec
sub
loopne
adc
xchg
adc
repnz
loopne
repz
test
or
push
fstps
jle
xchg
mov
add
cltd
mov
cwtl
jg
stos
adc
mov
jno
mov
in
insb
adc
jbe
mov
movsb
je
lret
sub
lcall
mov
xor
or
arpl
sub
pop
push
xor
xlat
mov
mov
shlb
jns
sub
sub
sbb
jo
cmp
into
jae
fsub
jge
push
cmp
xor
aaa
sbbl
jb
cld
in
loope
push
popf
inc
xor
push
divl
push
adc
mov
dec
mov
test
into
in
cmc
pop
outsb
sbb
jnp
add
sub
inc
mov
inc
stos
rcr
pop
xchg
shrb
jmp
push
push
mov
lret
xchg
loop
in
mov
leave
cltd
push
push
mov
movsb
cmpsb
xchg
mov
int
sub
mov
cwtl
shr
mov
adc
or
repnz
push
push
mov
xor
fstpl
movsl
insl
scas
cmpsb
sbb
pushf
sbb
clc
mov
and
mov
sub
push
pop
fisubl
movsb
call
sahf
mov
in
cmp
sub
es
mov
rcrl
lret
dec
cmp
loop
aas
scas
mov
pusha
push
inc
aaa
imul
mov
cmc
jnp
loope
cmp
sbbb
sbb
lods
rcrl
xchg
jbe
movl
cmp
aam
addl
and
pop
and
fdivr
outsb
shll
iret
mov
incb
scas
jnp
nop
es
sub
inc
jle
rcll
shrl
cmp
sbbb
insb
lea
jp
sub
jle
adc
cld
jecxz
out
loope
in
je
ljmp
mov
subb
cwtl
cmp
fstl
aam
xor
mov
aaa
dec
lcall
jle
xchg
and
ret
jp
lock
push
mov
lock
incb
call
or
fidivrl
dec
testl
in
rol
jecxz
jl
ds
repz
popa
xchg
lret
dec
jns
mov
cwtl
mov
adc
inc
fmul
adc
imul
in
mov
addb
testb
andl
test
into
aad
mov
add
and
push
seta
clc
icebp
lock
cmpsb
and
push
xchg
pop
loope
sbb
push
and
dec
or
incl
push
and
test
out
out
enter
sbb
shlb
push
jae
inc
rcr
dec
xchg
lock
mov
inc
mov
imul
lea
inc
mov
pusha
push
mov
sbb
push
inc
fildll
cli
stos
push
cld
jae
cmpsl
push
ficomps
jns
das
jge
mov
jb
in
mov
inc
adc
outsl
jns
pop
cmp
cmp
adc
fld
into
scas
insb
mov
dec
outsb
sbb
and
int3
dec
push
and
insl
loop
xchg
ret
out
dec
xor
or
cmpsl
push
push
jne
inc
rorl
or
insb
jo
fcoms
fcomip
pop
cmp
repz
sbb
bound
pop
cmp
lea
cmp
jp
fdivrs
aaa
jle
xchg
jns
mov
fwait
mov
xor
fstps
pop
cs
sub
cmp
jle
sarl
sub
and
sub
ret
addr16
add
pop
sti
or
xchg
cmc
loope
scas
cmp
push
add
add
clc
pop
lahf
and
je
xchg
inc
test
insb
ffreep
pop
add
pop
xorps
adc
jb
nop
mov
shl
push
mov
ja
adc
aam
mov
adc
inc
mov
dec
dec
pop
cmp
pop
push
cmp
rorl
fdiv
imul
cmpb
cmp
sub
pop
push
addl
rcrb
mov
insl
pop
mov
push
xorl
jmp
jns
push
adc
std
mov
scas
mov
mov
or
ljmp
pushf
mov
xor
jle
add
es
xchg
dec
mov
push
imul
pusha
mov
dec
adc
sub
ret
sub
add
pop
mov
push
mov
fnsave
xchg
mov
test
and
movsb
sub
loop
fistps
or
xchg
dec
call
mov
mov
test
inc
scas
or
push
mov
add
mov
fst
push
cs
xor
lea
and
mov
enter
loop
decl
insl
dec
and
xchg
mov
add
pop
jb
jp
inc
popa
subl
insb
xor
cmpsl
inc
lret
or
cmp
aaa
cltd
jge
sub
xor
sub
push
jae
xor
js
sbb
and
xchg
xchg
mov
or
jbe
pop
mov
insb
aam
push
ja
aaa
pop
push
jle
xchg
stos
hlt
sahf
repz
leave
outsl
inc
mov
ljmp
cmpsb
je
cltd
pop
lds
cmpsb
cmp
stc
movsb
jecxz
mov
inc
cmp
jb
imul
ret
cltd
popf
adc
xchg
shlb
adc
add
jecxz
xchg
mov
jmp
xor
inc
popf
popa
cli
sbb
js
arpl
pop
inc
mov
xor
stos
sbb
push
add
push
inc
or
jae
fdivrs
lods
in
pop
lret
push
hlt
shrb
cmp
test
in
mul
mov
add
push
scas
aas
xor
mov
mov
lret
sub
iret
jno
mov
push
adc
sti
or
scas
jge
popf
gs
sbb
sbb
stos
sbb
fsubr
inc
aad
fstl
inc
xorb
xchg
adc
insb
push
jmp
sti
or
or
jg
fisttpll
ret
xchg
adc
pop
mov
jb
addb
sarl
fs
daa
neg
jo
and
nop
and
fwait
or
ds
mov
adc
or
mov
popf
rcrl
xchg
adc
aaa
xchg
adc
shrb
xlat
adc
inc
push
aam
jl
je
lds
sub
das
flds
mov
jl
cmp
negl
fidivs
lods
mov
push
aas
stos
sub
hlt
push
dec
jmp
push
movsl
dec
adc
imul
xlat
pop
mov
pushl
repnz
mov
cltd
jecxz
cmp
cs
faddl
fcoms
jecxz
xchg
mov
pop
loope
ds
inc
or
dec
insl
add
add
adc
cli
mov
dec
test
outsb
out
add
adc
cmc
adc
push
pop
sbb
push
stos
mov
jno
les
xor
mov
sbb
adc
add
push
mov
popf
mov
sbb
aas
ret
sub
test
daa
daa
sbb
loopne
xor
inc
push
lds
das
int3
jge
jae
xchg
and
adc
and
jns
ret
and
mov
movd
aas
jns
rcl
in
pop
shlb
jmp
cwtl
cs
pmulhw
cmp
adc
jb
sub
ljmp
movsb
xor
inc
enter
es
push
das
jp
and
into
add
or
add
mov
push
das
mov
mov
aam
jb
cmc
ret
mov
xor
aam
movsb
das
repz
jl
in
jnp
sti
lds
mov
dec
lahf
add
cmp
ds
pop
sub
ret
add
push
xchg
dec
imul
push
cld
test
add
cltd
lods
sti
aad
sbb
xor
and
loop
dec
addr16
push
aas
pusha
or
add
popf
xor
imul
sahf
pusha
iret
pop
and
inc
lods
scas
push
lret
scas
jge
inc
jnp
jl
cmpsl
push
and
test
mov
out
mov
xchg
push
dec
mov
stos
leave
sti
int
or
sub
repz
rorl
lret
jnp
std
ds
ds
and
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
pop
outsl
ja
add
bound
add
dec
cwtl
pop
mov
pusha
fsubs
nop
insw
mov
and
movsb
mov
mov
sahf
loop
dec
sub
mov
movsl
cmpsb
cmp
test
ss
outsb
movsb
scas
sub
dec
jne
mov
and
xor
add
xchg
lods
xorb
sub
call
call
add
add
add
shrl
adc
cmp
out
pop
xchg
push
fxch
add
bound
add
scas
pop
ljmp
not
gs
sub
sbb
cli
icebp
jno
test
xchg
jns
cmpsl
and
fwait
sub
xchg
jno
or
clc
or
add
jecxz
adc
or
mov
nop
les
imul
in
add
fadds
add
add
add
sub
sub
addb
into
add
bound
add
jne
xchg
xorl
out
cmp
xchg
add
adc
jmp
push
imul
xchg
xorl
dec
adc
je
loope
aam
int3
aam
pop
ret
lahf
push
scas
outsl
jb
out
mov
sbb
or
push
test
cs
jbe
sub
sbb
inc
in
sub
add
add
add
das
and
aam
aam
ljmp
je
pop
or
out
into
add
bound
add
sbb
loope
push
daa
mov
dec
cli
lcall
negl
xor
add
arpl
sbb
dec
cwtl
mov
out
testb
push
push
mov
insb
jb
es
hlt
in
jns
andl
ror
cli
lea
xchg
dec
sub
into
add
add
add
lret
dec
jle
sti
cmpsl
mov
dec
mov
dec
add
bound
add
jmp
mov
mov
adc
fbstp
push
sbb
jecxz
loop
xchg
jo
mov
out
ret
push
sbb
mov
popa
insb
push
sub
ficoms
adc
mov
pop
daa
dec
stos
xor
pop
fsubrp
imul
mov
or
pop
jnp
and
add
add
add
out
lods
cmp
stc
stc
push
loope
popa
iret
add
bound
add
jmp
dec
in
xchg
push
mov
push
pop
mov
sti
jns
loop
jmp
iret
and
shll
push
sub
lods
inc
cmpsb
test
in
jge
mov
aaa
sbb
out
cwtl
in
push
or
ljmp
les
scas
xor
jbe
add
add
add
push
xor
gs
aaa
push
insl
sbb
iret
add
bound
add
jo
sub
test
shrl
cmpsl
jo
jnp
jo
icebp
inc
jb
stc
inc
xchg
lret
imul
inc
lret
xchg
pop
sahf
push
lods
adc
mov
sbb
hlt
ret
fnstcw
pop
pop
fstps
xor
leave
add
test
add
add
add
adc
push
adc
cwtl
out
jno
aam
test
add
bound
add
pushl
aam
jge
out
jb
fsts
xchg
cmp
push
and
lret
cmp
and
xchg
inc
daa
inc
bound
pop
int
pop
jl
dec
push
cmp
iret
inc
lret
ljmp
fbld
nop
lret
sbb
sti
cmp
dec
inc
cmc
jmp
fwait
sub
mov
mov
or
add
add
sub
das
jle
jg
imul
dec
jb
jae
loop
add
add
int
jo
repz
mov
movsb
jle
inc
clc
roll
repnz
cmpsb
movsl
and
mov
in
mov
dec
mov
xchg
int3
test
dec
xchg
add
ss
sti
out
jl
std
mov
add
mov
xor
out
fdivl
jle
mov
mov
jns
insb
jle
mov
add
add
add
addr16
and
mov
mov
rol
dec
jecxz
add
add
scas
iret
cmp
outsl
aam
rorb
pop
dec
insb
adc
imul
sbb
or
enter
mov
loopne
pop
mov
cmc
sbb
jp
xor
jns
nop
in
outsl
cmpsl
bnd
or
repnz
adc
mov
fcoml
arpl
add
add
add
ret
or
ret
lods
sub
mov
adc
add
add
pop
mov
icebp
ficoml
jecxz
ds
ret
mov
dec
lcall
es
inc
dec
xchg
and
int
mulb
clc
js
mulb
inc
fsubrl
add
lahf
xchg
and
xlat
mov
fistl
add
mov
pop
jmp
add
add
add
fld
add
ror
outsl
clc
sar
rorb
in
add
add
lea
mov
push
jb
jl
xor
cmpsb
push
icebp
jg
out
mov
test
cmp
out
fdivrl
pusha
cmp
cmpsl
xchg
bound
loop
adc
xorl
sub
xchg
push
mov
cmc
cmp
cli
js
jge
sub
fs
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
out
sbb
loop
inc
add
sbb
add
sbb
inc
add
sbb
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
ds
inc
add
test
repnz
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
ficomps
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
rcrb
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
push
jp
decb
xlat
add
bound
add
dec
dec
xor
inc
sub
jne
mov
scas
push
mov
loope
in
jnp
in
inc
inc
lret
enter
lods
fdivrl
push
mov
mov
lock
sbb
icebp
lods
popa
pop
fnstsw
fsubrl
in
mov
pop
out
pop
pop
jg
cmpsb
gs
shrl
pop
mull
cmp
cmp
add
add
add
sub
cli
jl
xlat
push
call
xlat
add
bound
add
loope
pop
stos
repz
nop
push
insb
jo
xchg
pushf
mul
mov
cmpsb
loope
lret
lods
mul
in
test
js
scas
mov
adc
int
fs
xchg
test
mov
sarl
push
or
xchg
push
xlat
jg
pop
jae
je
sbb
adc
test
xchg
data16
add
add
mov
jg
ljmp
push
dec
int
add
bound
add
in
and
rclb
xchg
sub
fcmove
xchg
repz
mov
pop
inc
in
imul
nop
pop
pop
and
dec
aas
mov
mov
push
imul
hlt
mov
and
sub
and
cmp
inc
mov
jmp
add
add
add
cmp
in
fimuls
sbb
jns
fadds
add
add
adc
shll
pushf
aas
lea
outsl
add
scas
jne
loope
or
xchg
sbb
fistl
mov
jmp
imul
mov
sub
pushf
out
movsl
xlat
std
adc
pop
bound
pushf
mov
testb
mov
cld
in
fcomp
fwait
dec
mov
push
pop
push
dec
cmp
add
add
add
fnstenv
std
negb
sub
stos
negl
xchg
fadds
add
add
fnop
data16
test
lods
subl
data16
test
push
adcl
sbb
xor
dec
sub
pushf
push
mov
xor
pop
and
xchg
mov
outsl
dec
rorb
xor
sub
int3
inc
outsw
das
mov
add
add
add
xor
jb
inc
mov
xchg
fadds
add
add
inc
shll
mov
fdivl
xor
pop
into
fldcw
and
add
fbld
lret
cmpsb
ret
jbe
loopne
ret
stos
sti
inc
test
mov
orl
pop
cmp
stos
sbb
lret
movb
shll
adc
clc
and
add
add
add
add
pop
sub
lret
add
bound
add
mov
stc
outsb
mov
enter
test
fwait
adc
pop
lret
lcall
push
cmp
adc
mov
mov
sub
mov
repz
pop
cwtl
cmpl
lea
cmpb
dec
aad
out
push
dec
dec
clc
in
push
pop
push
mov
psrld
or
or
add
add
add
push
add
xor
jb
insl
xor
and
mov
add
bound
add
shlb
dec
lahf
imul
xchg
cmp
movsb
add
push
sti
xchg
aam
mov
push
mov
fs
push
fwait
imul
add
jmp
aam
mov
cmp
mov
xchg
dec
icebp
xchg
push
add
mov
add
test
sub
add
add
add
cmp
add
mov
out
xor
add
add
testb
sub
icebp
dec
mov
ja
pop
loop
mov
mov
jae
nop
pop
inc
rcl
scas
outsb
enter
stos
dec
pop
mov
xor
test
xor
add
pop
inc
cwtl
push
out
mov
mov
cmp
shrl
adc
mov
repnz
cld
cmp
mov
sbb
add
add
jmp
repz
fimull
fndisi(8087
stos
jo
fiaddl
add
add
and
dec
outsl
pop
sbb
xchg
add
ljmp
adc
insb
popa
cmc
std
rcll
dec
cmp
jp
add
sub
imul
popa
add
cmp
cli
and
inc
dec
cltd
ret
faddl
popl
or
sub
jp
mov
add
pop
inc
pop
iret
pop
aad
ss
dec
dec
cmpsl
inc
outsb
fstp
add
bound
add
jl
jb
repnz
bound
mov
hlt
fldl
push
addr16
sub
sbb
ss
imul
jae
sub
into
jno
fldt
stc
dec
cli
cmc
lret
xchg
mov
lcall
ss
xor
notl
js
adc
aad
divb
insb
test
add
add
fwait
test
jg
dec
test
add
add
mov
jp
xlat
push
push
ljmp
cmp
lret
cmpsb
cwtd
xor
jns
cmc
sub
lds
sarl
cmp
push
push
rcrb
push
jno
sbb
jne
mull
aas
ret
js
mov
mov
cmp
add
pop
fists
xchg
pop
sbb
xor
shll
add
add
outsb
jae
lret
jle
repz
ret
mov
add
add
and
inc
mov
je
mov
or
sbb
add
and
repnz
int3
cmp
jge
out
xchg
sub
test
push
inc
mov
mov
xor
ljmp
dec
or
mov
leave
sbb
clc
movsl
dec
mov
push
dec
rorb
cmp
add
add
add
cmc
adc
adc
mov
lds
add
add
bound
add
sub
mov
addb
xchg
shrl
in
mov
mov
mov
sub
ret
lock
mov
cmp
scas
out
scas
push
sub
je
out
shlb
add
xchg
mov
sub
or
es
mov
sahf
pop
es
bound
lea
add
add
add
mov
lock
mov
shlb
inc
jge
faddl
add
add
addr16
mov
stos
add
dec
push
outsl
nop
pop
fs
mov
flds
mov
sbb
pop
or
inc
inc
fadds
or
sarl
dec
lahf
fisubs
mov
fwait
hlt
adc
xor
ljmp
dec
lods
mov
ja
dec
sbbl
sub
inc
mov
add
add
aam
push
lock
cmc
das
sbb
xchg
iret
jmp
faddl
add
add
lret
or
les
xor
pusha
loopne
fcomps
cld
pop
adc
fmul
sub
sti
aaa
or
in
sub
jns
dec
jne
jb
es
sbb
lods
xor
in
aad
stc
dec
enter
repz
adc
sbb
insl
movsb
lret
je
mov
lods
xchg
movsb
pop
mov
dec
pop
xor
push
add
add
add
int
xchg
inc
cmc
sti
fildll
jecxz
imul
bound
add
sub
aas
mov
in
pop
push
mov
jp
rcll
dec
add
movsl
push
loopne
pop
popa
lret
mov
xchg
aad
cltd
and
frstor
cmp
sti
pop
adc
clc
xorb
mov
dec
push
pop
insl
scas
inc
lea
or
rolb
inc
push
outsl
fstps
ljmp
push
add
adc
testl
or
bound
add
out
lret
push
push
in
in
push
dec
mov
push
sahf
inc
sbb
sub
push
test
sahf
mov
add
pop
call
out
fisttpll
adc
lret
xchg
mov
sub
nop
sbb
fiaddl
data16
sbb
xor
inc
mov
fmuls
cmpl
push
rcll
add
add
add
add
jne
jg
clc
cs
push
and
add
add
orb
lret
jbe
ret
jecxz
push
enter
lea
in
jnp
popa
sbb
cmp
dec
push
adc
and
aad
dec
xor
jbe
dec
push
or
std
shl
xor
inc
inc
lods
les
cmp
xlat
mov
push
mov
and
xor
testl
add
mov
cmp
sti
dec
mov
je
lcall
add
bound
add
dec
insl
cmp
out
pop
sbb
dec
jp
inc
push
mov
pop
push
and
adc
fbstp
mov
cmp
adc
in
pop
lods
and
in
mov
mov
dec
mov
or
aam
sti
jno
add
mov
mov
das
and
mov
push
add
add
add
fists
dec
mov
xchg
adc
test
mov
bound
add
lods
nop
xchg
aam
fimuls
and
and
inc
dec
sub
push
shl
std
popf
pushf
pop
push
mov
push
xorl
jb
xchg
es
jecxz
push
sti
push
call
or
lret
jl
addr16
add
ficoml
dec
mov
inc
dec
call
add
add
add
fisttps
push
push
roll
add
add
out
fbstp
push
xor
fwait
xchg
sub
mov
add
pop
repz
xor
shlb
jno
divl
int3
cli
push
mov
rcll
rorb
cwtl
dec
out
sub
mov
std
push
mov
fcmove
es
ss
push
popf
jmp
lea
add
add
add
jle
out
sbb
mov
roll
add
add
dec
fsqrt
dec
adc
shrl
mov
in
push
cmp
and
mov
pusha
add
mov
cmpsl
inc
xchg
mov
sahf
lret
test
daa
cwtl
lret
sbb
push
and
cmp
int3
jge
xchg
push
aas
jmp
enter
add
add
jo
and
cmp
push
ret
test
rolb
add
add
loopne
jle
flds
decl
stos
and
inc
mov
rolb
xlat
or
imul
add
lahf
faddl
cmp
outsl
xchg
jp
mov
inc
movsl
add
jns
sbb
or
and
test
xor
xor
adc
add
add
add
xchg
nop
ffree
popf
aam
fldcw
add
add
out
sahf
jp
sbb
inc
jl
push
jno
xchg
sub
inc
mov
push
jge
out
mov
lahf
enter
adc
repz
sub
stos
jge
sbb
out
aam
addr16
rcrl
les
sbb
cmpsb
in
push
jmp
adc
xchg
add
xor
call
add
add
add
mov
jbe
hlt
mov
and
cmpsb
push
xchg
cmp
rcl
add
bound
add
scas
and
mov
add
and
cli
aaa
mov
adc
lret
pop
pop
gs
jo
decb
pop
das
pop
push
and
push
ret
shrb
ficompl
push
ja
or
jp
hlt
jmp
push
addr16
sarb
and
xlat
push
test
in
adc
jge
ljmp
xor
adc
add
add
add
ror
mov
sub
out
sbb
add
bound
add
les
lcall
rorl
xchg
mov
cmp
leave
scas
inc
cmpsb
pop
pop
dec
ja
rol
call
fidivl
push
mov
js
icebp
movsb
ret
popl
pop
mov
xor
fidivrs
or
jae
pop
frstor
jnp
mov
push
sahf
ds
sbb
aas
push
add
add
add
in
outsb
and
pop
mov
xchg
roll
add
add
pop
scas
sti
dec
adc
mov
icebp
fldl
mov
gs
dec
push
adc
lret
sub
lahf
rcrb
iret
pusha
rcrl
je
xor
dec
call
xchg
andb
and
loopne
mov
repnz
push
xor
in
sahf
mov
daa
leave
mov
lods
or
add
add
add
mov
and
push
stc
roll
add
add
fs
movsl
mov
mov
insl
insl
ja
mov
mov
cltd
push
inc
icebp
xor
insl
mov
icebp
adc
mov
jnp
lcall
shll
push
jmp
lea
gs
mov
lods
ds
mov
pusha
sbb
jb
inc
push
es
adc
aaa
sbb
rorb
add
add
add
mov
and
jg
call
into
inc
mov
xor
add
add
bound
or
fdivr
test
lret
jp
sbb
lds
cli
and
ss
mov
xchg
leave
jns
dec
mov
pop
lea
test
gs
xchg
outsb
jae
and
mov
fsubl
out
outsb
add
loop
pop
ret
xchg
in
repz
add
add
fisubrs
cwtl
sar
repz
push
sbb
add
bound
add
or
xchg
test
xor
or
je
jns
fildll
rolb
cmp
shrb
mov
jecxz
xchg
fwait
aad
jns
xchg
pop
xchg
cwtl
add
jge
and
roll
xchg
loopne
lahf
popa
int
repz
shr
sub
imul
dec
cs
scas
icebp
into
scas
shl
jle
push
fbld
add
dec
aas
int3
sbb
out
loopne
lods
dec
xchg
pop
aad
add
add
test
out
out
imul
loop
add
pop
movsb
lret
in
fldcw
mov
aaa
out
sahf
shrl
jb
daa
push
call
pop
jns
mov
outsb
jo
push
add
int
sub
push
inc
into
fdivrl
testl
sbb
js
and
iret
add
add
add
push
test
fildll
popa
scas
xchg
dec
adc
add
aad
decb
adc
xchg
dec
fwait
cmpb
in
and
test
xor
dec
xchg
push
xor
jbe
inc
leave
cwtl
jp
xor
sbb
mov
scas
dec
push
push
dec
pop
sub
ds
sub
mov
push
push
dec
into
mov
in
dec
inc
inc
popa
cmpsl
mov
mov
ret
add
add
add
lods
fcomi
sarb
add
loope
jmp
bound
add
adc
jns
popa
inc
add
dec
aas
and
scas
ret
xchg
mov
scas
cmp
jmp
js
sahf
jns
in
test
out
mov
adc
loop
call
pop
cmpsb
loopne
fstl
test
fs
jns
mov
push
inc
mov
lds
je
add
add
add
divl
dec
cmp
dec
push
fcompl
inc
add
bound
add
in
hlt
xchg
mov
sub
cli
dec
sbb
call
es
cs
inc
cmp
mov
aaa
cld
sbb
xor
mov
in
push
jle
or
ret
mov
inc
mov
mov
inc
cmpsb
lea
pop
rorb
shll
out
cmpsb
pop
sti
inc
enter
dec
aad
add
add
add
arpl
jge
mov
daa
sub
mov
add
add
iret
xchg
xchg
loop
adc
push
rolb
xchg
xchg
addb
lods
hlt
cs
cwtl
movl
and
aam
add
icebp
lds
lret
fwait
jns
ljmp
or
cmpsl
enter
pop
scas
imulb
das
arpl
mov
mov
les
pop
leave
xor
add
add
add
daa
push
imul
jns
mov
in
fldl
add
add
out
fldenv
leave
inc
popa
cmp
in
jg
imulb
imul
adc
dec
push
mov
imul
xor
es
int3
xorl
sbb
cmpl
imul
les
cmp
sbb
mov
clc
rorl
adc
aad
cmpsl
add
add
add
daa
ss
xor
and
jns
fiadds
add
add
jb
or
lcall
addr16
jle
jns
notb
mov
in
sub
adc
out
in
imul
sub
lods
jnp
fprem1
daa
mov
or
add
frstor
lods
mov
cmp
push
jae
cmc
dec
mov
push
in
add
add
add
aaa
out
mul
aaa
cmc
xchg
lcall
mov
add
bound
add
negl
test
subb
mov
xchg
adc
add
movsb
sbb
push
mov
icebp
mov
xchg
dec
lods
pop
je
dec
mov
icebp
xchg
std
stos
lahf
mov
inc
sub
pop
push
lods
testb
and
push
pop
jecxz
ret
movsb
push
mov
cmc
mov
aas
stos
out
sti
shlb
aaa
adc
add
add
add
aad
out
fucomip
ss
cmp
popa
dec
adc
add
bound
add
xchg
lcall
dec
pop
bound
adc
sbb
xor
xor
mov
xchg
cmp
out
adc
inc
gs
push
add
adc
scas
addr16
inc
adc
sbb
xchg
sub
fwait
cli
jns
lock
add
and
xchg
sbb
sahf
add
cmpsb
mov
add
add
add
in
cld
fisubrl
sbb
bnd
add
bound
add
and
inc
popf
mov
bound
xor
xchg
jle
xchg
iret
addr16
xchg
movl
push
mov
mov
sbb
loopne
mov
shrl
or
pop
aam
sbbl
and
xor
add
test
insb
pop
dec
xor
and
add
add
add
push
les
in
lahf
sti
ja
rcll
jae
filds
add
add
dec
xor
rclb
es
dec
int
pushf
rol
xchg
jge
fnstcw
stos
mov
or
mov
sbb
roll
jae
jmp
int
jmp
xchg
test
out
and
dec
add
daa
imul
out
pop
fisttpll
push
addr16
cmpsl
movsb
inc
xchg
aaa
rcrl
cmc
ja
add
add
add
jle
call
cli
lcall
add
bound
add
addl
sub
xchg
int3
test
stos
addr16
mul
mov
out
or
test
bound
xchg
dec
xchg
outsb
add
dec
mov
addr16
inc
hlt
mov
adc
fwait
mov
dec
sar
mov
out
shlb
inc
test
push
cmpsl
xor
icebp
or
add
add
add
test
and
pop
dec
push
push
fsubrl
loopne
add
add
and
mov
inc
push
adc
bound
sbb
xchg
sete
js
lea
ficoms
xor
icebp
pop
bound
les
push
test
or
lret
outsl
jb
in
add
jg
jnp
jl
cmp
mov
pop
bound
xchg
testb
add
add
outsl
mov
jmp
push
fcmovu
in
sub
add
bound
add
adc
aas
jmp
cmp
pop
pop
inc
push
mov
push
inc
cltd
xchg
insb
and
daa
int
push
aam
xor
and
int3
cmp
nop
cmc
out
out
gs
addr16
fwait
push
push
jns
imul
in
xchg
and
fstps
and
xor
mov
add
add
stc
sbb
inc
jecxz
mov
jne
jbe
pop
loope
add
add
mov
and
out
loopne
test
jb
jmp
mov
cmp
ljmp
push
pop
xchg
mov
cmpsl
add
mov
inc
cmp
scas
mov
stos
popf
outsb
xor
movsl
and
cmp
sbb
lret
loop
mov
cmp
adc
add
add
mov
icebp
and
lahf
pop
shl
add
add
outsl
and
and
sbb
int3
leave
cltd
push
hlt
outsl
popa
push
in
dec
sahf
imul
lahf
xchg
mov
test
dec
fs
jnp
cmp
int3
call
xchg
sbb
adc
push
jbe
xor
or
in
pop
popa
fisubs
loopne
cmp
cmp
push
test
add
add
add
adc
repz
das
cli
fists
dec
es
pop
xorb
and
add
bound
add
and
pusha
xchg
hlt
jo
aad
pop
xchg
mov
cmp
mov
adc
jmp
jmp
mov
and
pop
push
lods
or
mov
cli
xchg
fsubrs
jno
jnp
cmp
mov
lds
cmp
arpl
mov
dec
add
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
adc
add
inc
iret
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
