push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
inc
dec
aad
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
pop
arpl
push
cmp
in
or
aam
out
push
fldt
jo
lret
bsr
mov
push
mov
aam
sub
in
fwait
mov
sub
xor
enter
addr16
scas
ret
ror
test
xchg
out
cmpsb
dec
add
cmpsb
push
bound
mov
push
push
leave
popa
add
repnz
clc
rorb
mov
dec
stos
repnz
jle
jle
scas
push
mov
adc
xor
pop
and
aam
and
inc
adc
dec
jne
fcompl
jmp
xor
jg
addr16
orb
xor
sub
test
hlt
pop
mov
movsl
cmp
cmp
and
out
neg
cs
mov
fs
clc
popa
mov
lret
and
and
lock
push
popfw
xchg
mov
xchg
lcall
or
pop
xlat
dec
daa
rclb
fmuls
pop
mov
push
cmp
cs
movsl
mov
xchg
inc
divl
or
jne
fldl
fsubrl
or
fwait
mov
bound
sbb
sar
popf
stc
xor
jle
fldt
inc
addb
aas
fcomps
mov
mov
fisubrl
in
cmp
mov
fmulp
pop
add
mov
enter
data16
mov
mov
mov
shl
mov
das
fildll
xlat
jns
mov
pushf
adc
iret
add
shlb
sub
xor
pusha
jmp
repz
xor
js
xchg
sbb
ds
xor
cmpsl
jb
dec
mov
sbb
ret
int
mov
push
idivl
sub
jg
stc
je
js
sub
mov
sub
stc
mov
ror
adc
cli
ret
iret
or
mov
lods
shrb
mov
sbb
aam
lock
inc
mov
or
andl
inc
xchg
mov
shll
xor
pop
scas
sti
mov
repnz
je
stc
movsl
lea
inc
jb
push
iret
mov
fs
jecxz
cld
xchg
xor
cs
sarl
bswap
lods
dec
mov
mov
testb
shll
sets
jne
cli
pop
stos
arpl
addl
dec
inc
js
jmp
fldenv
lods
add
sub
shl
or
add
gs
std
xchg
jmp
into
ja
pusha
xchg
out
daa
mov
std
cmpl
mov
in
scas
rorb
push
xchg
inc
aam
cli
push
roll
int3
add
adc
jle
pusha
out
xchg
cmpsl
or
push
lahf
in
out
xor
jbe
mov
aaa
xchg
loop
jl
pop
fsubs
sbb
out
xor
cld
mov
xchg
jg
lret
std
in
xor
rolb
cmp
or
pop
cmp
add
inc
popl
scas
push
push
sub
sarl
test
ds
dec
test
outsb
cmpsl
lock
pusha
int3
fsubrl
lods
aaa
inc
rcr
sahf
xchg
bound
cmp
nop
ret
cld
jne
scas
add
sbb
arpl
cmc
jmp
add
repz
xchg
pop
pop
inc
lds
add
ja
pop
ds
leave
push
or
xor
mov
out
dec
pop
pop
faddl
mov
enter
idivl
add
push
out
adc
arpl
push
mov
push
jo
in
addr16
aaa
mov
loopne
mov
jne
adc
inc
jp
or
insb
pushl
xchg
insb
pop
andl
cmpsl
outsb
xchg
dec
sar
fsubrp
dec
xchg
stc
out
lods
daa
aad
add
loope
inc
clc
ljmp
stos
clc
fdivl
aam
cmp
and
lock
sub
test
test
adc
sbb
jg
pop
cmp
adcb
in
in
in
andl
add
ljmp
and
mov
cmp
push
pop
jae
pop
clc
jge
dec
call
je
iret
inc
mov
xor
sub
cld
push
sub
enter
xor
mov
std
ret
outsb
pop
lea
lods
mov
cmc
jmp
sbb
ret
lcall
into
fistl
mov
ds
or
mov
jge
test
arpl
sub
gs
sbb
movsb
mov
int
inc
cltd
push
aam
xchg
loope
sub
sbb
inc
adc
movsl
mov
pusha
lea
jg
push
arpl
mov
ja
int
sub
sub
scas
ljmp
inc
inc
mov
popf
aad
repz
mull
inc
cwtl
in
xorl
adc
call
mov
and
mov
test
test
adc
ss
adc
mov
xchg
xchg
and
mov
loop
or
sbb
scas
pop
and
push
lock
jb
stc
xchg
cmpb
repnz
insl
sbb
pop
jne
pop
pushf
and
jns
lods
or
fstp
pop
pop
jmp
push
push
push
fidivrs
aad
cmp
push
mov
insl
orb
dec
imul
lods
jne
mov
gs
or
sub
adc
rcrb
mov
mov
cmc
ljmp
dec
mov
leave
in
mov
out
jp
mov
sub
xor
xchg
sub
pop
test
mov
jg
adc
add
or
pop
ljmp
mov
inc
lods
push
imul
es
cmpsl
add
fld1
mov
xor
inc
ja
fmul
rorl
ret
pop
sub
sub
xchg
adcl
out
inc
jl
int3
mov
mov
stc
push
jle
pop
call
je
clc
rorl
and
movsb
aad
mov
mov
call
ret
stos
aas
mov
and
pop
xchg
sub
mov
mov
mov
popf
cltd
sbb
mov
pop
xor
into
sti
push
sub
inc
std
outsl
pushf
addr16
shll
add
int
push
ds
add
movsl
call
stos
mov
fisttps
out
mov
sub
jg
push
dec
push
rorb
enter
cwtl
jle
jo
lret
scas
or
cmpsl
dec
or
lret
and
sarl
push
inc
insl
fldcw
imul
mov
add
xchg
mov
mov
sti
je
test
into
mov
pmaxsw
xor
cmp
dec
mov
sub
aad
js
mov
outsl
cmpsb
clc
into
and
stc
push
shr
jle
cmc
sub
fsqrt
pop
imul
and
cld
xchg
aad
mov
push
dec
data16
mov
mov
xor
repnz
add
stc
adc
and
xchg
pop
push
push
push
sub
insb
stos
sysexit
sbb
sbb
dec
push
out
push
or
add
inc
push
pop
scas
lods
xchg
rolb
pop
ljmp
out
in
dec
adc
aad
das
out
mov
xchg
loop
scas
das
out
outsb
add
aam
int
xchg
inc
rcl
mov
cmp
into
pop
jnp
jp
or
adc
mov
jg
ljmp
mov
and
sti
aam
cmp
pop
cmp
pushf
aad
jecxz
dec
mov
rcl
pop
pop
cmp
jo
enter
addl
push
mov
dec
scas
or
imul
push
shrl
mov
data16
cmp
dec
dec
andb
clc
inc
ret
inc
adc
stc
int
stc
jecxz
or
pushf
dec
lea
cmp
mov
out
mov
push
add
jmp
dec
cs
js
push
pop
or
jne
sbbb
sbb
std
pop
imulb
std
sub
lret
out
outsb
in
add
jle
inc
jecxz
cmpsb
outsb
and
stos
jbe
lods
aaa
xor
mov
and
sbb
mov
cli
popa
pop
mov
es
mov
sub
mov
sar
iret
sub
aad
push
pop
mov
pop
pavgw
jne
rclb
cs
lret
lcall
data16
mov
in
mov
add
loop
sub
dec
outsb
adc
xor
into
sbb
inc
inc
sbbl
xchg
pushf
pusha
enter
lods
int
popa
adc
out
cld
xor
into
vcvtph2ps
and
cmp
lea
out
cmpl
mov
popf
jns
mov
insl
dec
aaa
sbb
lret
adc
pop
clc
call
ds
pop
pushf
or
xlat
jmp
stos
dec
sti
pop
or
cmpb
push
and
and
inc
out
or
inc
outsl
cmp
mov
mov
xor
xor
mov
or
sti
ret
push
xchg
fldcw
push
sub
jnp
cmp
mov
hlt
dec
dec
and
stc
cs
nop
outsb
lcall
xchg
mov
into
ljmp
les
test
dec
mov
mov
fsub
push
jo
adc
loope
push
sbbl
popf
fcmovnu
add
fs
aad
imul
aad
pop
shll
mov
jmp
popf
inc
jb
adc
ror
sbb
xchg
sbb
jnp
ja
adc
and
or
xlat
lods
ret
pop
cld
inc
imul
push
mov
or
fwait
icebp
or
scas
sti
popl
xchg
test
xchg
les
sarl
fdiv
mov
inc
ret
xor
aas
adc
stc
xchg
dec
bound
jns
jl
sub
adc
push
cltd
inc
push
push
add
xor
rclb
or
and
and
push
decb
loope
fprem1
negl
jg
or
stos
cwtl
fisttpl
sub
xlat
scas
movsl
xor
rcr
cmp
xlat
data16
xchg
jge
inc
mov
subl
scas
leave
push
add
in
fnstenv
pop
or
xor
jge
ja
leave
popa
and
out
fs
sti
pop
iret
cmp
pop
testl
xchg
andb
pop
rsqrtps
loop
sub
pop
push
push
mov
popf
daa
push
pop
hlt
or
test
testb
xchg
dec
and
cmp
inc
sti
in
mov
push
insb
arpl
xor
in
sbb
xchg
ret
ja
mov
jo
in
insl
xor
jle
es
add
imul
jl
or
scas
addr16
cmpsb
and
push
xor
xchg
ret
mov
mov
hlt
scas
xchg
lods
dec
loopne
mov
inc
push
repz
sub
lock
in
inc
rorb
cwtl
cmp
mov
aam
xchg
push
scas
mov
cltd
loopne
stos
gs
call
jnp
jne
iret
adc
out
out
sbb
test
inc
ss
stc
sbb
into
jae
mov
pop
dec
sub
aam
fldt
fistpl
sub
stos
testb
jmp
in
stc
or
inc
fs
repnz
std
bound
jp
sub
icebp
pop
xor
cvtdq2ps
push
aam
jle
inc
or
sahf
and
mov
es
inc
inc
add
gs
mov
cld
fcoml
out
rcl
or
mov
and
loopne
sub
sbb
insb
xor
adc
xchg
idivl
mov
call
and
outsl
cli
dec
pop
push
fwait
mov
shlb
insl
jb
outsl
stc
fldenv
xchg
mov
loop
cwtl
xchg
gs
div
sbb
xchg
adc
push
pushf
push
jbe
rcr
mov
mov
cwtl
shll
fsub
shll
fidivs
out
aaa
xor
lahf
and
xor
dec
xchg
sbb
sahf
mov
mov
repnz
cs
xor
sbb
fs
fiaddl
xchg
jae
mov
data16
bnd
inc
call
and
mov
xchg
push
cmp
ja
cld
lahf
lds
dec
fisttps
push
lcall
mov
dec
jb,pt
movsl
loopne
gs
pop
gs
icebp
das
ljmp
das
dec
rcr
out
arpl
pop
rorl
sbb
mov
pop
mov
mov
fistps
mov
popa
jne
mov
bound
inc
cmc
inc
push
fwait
pop
lcall
xchg
sub
mov
mov
sbbl
cmp
sbb
or
inc
push
sbb
nop
rcr
cmpsl
push
lods
rorb
clc
mov
pop
into
inc
pop
mov
jle
es
cmp
jne
out
out
aaa
insb
sbb
adc
or
add
jmp
and
psubsw
fiadds
cwtl
lods
cmp
fistps
fbstp
mov
repnz
shrb
pop
fnstenv
adc
jns
inc
jno
dec
inc
pop
insl
mov
xor
aaa
and
scas
lea
popa
test
cwtl
pshufw
inc
arpl
xchg
sahf
pop
gs
lahf
mov
jo
mov
repnz
jbe
push
enter
sbb
inc
or
data16
mov
and
push
inc
jp
sbb
push
mov
sub
test
repz
iret
pop
or
loop,pn
and
andb
dec
mov
dec
mov
and
dec
adc
ficompl
sahf
test
inc
push
mov
cwtl
pop
jmp
xor
xchg
cmp
stos
les
sbb
xchg
push
cli
loope
sbbb
cld
xor
xchg
or
bound
xor
int
pushf
jp
mov
pop
adc
into
aad
xchg
adc
mov
in
fst
nop
cmp
cmpsb
leave
sub
mov
mov
mov
fwait
dec
jle
ss
jge
or
cli
aam
push
fsts
hlt
ljmp
mov
mov
jo
jbe
nopl
lea
shrb
mov
adc
jbe
cmpl
push
xchg
xchg
and
push
xor
mov
sub
cmp
add
xchg
sbb
outsb
inc
jl
mov
lret
or
daa
inc
lds
push
stos
dec
test
push
cmc
mov
loopne
mov
nop
repnz
adc
mov
ja
mov
xchg
outsl
dec
or
inc
pop
pop
inc
pop
xchg
fprem
xchg
nop
test
frstor
push
mov
cltd
inc
jns
es
inc
xor
mov
push
fnstcw
jo
testl
cmp
sbb
or
and
lods
push
test
pushf
arpl
loope
in
jo
xor
into
cmp
int3
mov
popf
out
or
sub
cmp
adc
es
loopne
clc
loop
mov
iret
dec
mov
pusha
mov
sbb
gs
or
cli
cmpsb
pop
xlat
lret
shr
dec
jge
imul
int3
push
pop
lock
das
add
mov
leave
outsl
cld
mov
jno
push
pop
in
push
test
inc
xor
ret
movsb
lds
jnp
push
les
cwtl
add
xorl
mov
aas
nop
cltd
cwtl
loope
mov
sahf
add
jno
pop
add
stos
nop
add
adc
aad
testl
je
adc
sub
iret
in
jbe
into
mov
sbb
sub
arpl
ret
sar
jno
mov
test
out
mov
insl
pop
fists
and
popf
mov
lods
stos
sbb
push
stos
inc
push
aas
xchg
js
fmull
or
cltd
pop
mov
fldcw
sbb
or
in
lret
int3
data16
mov
out
cmp
imul
loopne
loope
fsubrs
outsb
stc
pop
lock
into
sbbl
xlat
popf
jl
addb
or
insl
lcall
nop
mov
inc
sbb
cmp
subb
push
cmp
js
insb
and
sbb
jmp
mov
inc
sarl
and
add
aam
jae
push
xor
mov
enter
loop
xchg
add
jne
jl
mov
sbb
ficoms
aas
ret
mov
hlt
pop
fwait
jbe
cld
scas
sbb
mov
cmc
test
imul
orb
filds
push
pop
in
add
mov
dec
into
stos
add
mov
mov
lea
rcr
pop
icebp
loopne
ret
inc
or
push
sub
mov
adc
jb
push
mov
mov
cmp
aad
outsb
add
inc
xchg
rorb
add
into
mov
sbb
fcmovnu
out
dec
gs
pusha
mov
fsubl
hlt
fmull
sti
xor
push
sbb
mov
flds
loopne
test
jmp
pop
das
xor
fcom
fstpl
arpl
lret
and
push
out
aam
je
in
movsl
scas
pop
adc
mov
push
fsubp
xor
or
mov
add
out
sub
add
outsb
cmpsb
gs
adc
inc
jo
outsb
out
sti
cmp
inc
aas
std
jbe
shlb
shlb
icebp
mov
ss
fdiv
std
and
cmp
outsb
test
outsl
test
fistps
inc
jecxz
add
fmull
cmp
lds
or
jne
pop
push
adc
rol
std
fiaddl
inc
mov
stos
lret
lds
gs
test
inc
mov
ds
enter
fmuls
adc
scas
inc
ljmp
loope
push
sbb
sbb
shrl
aad
cmpsl
push
add
fistpll
xchg
lds
test
sbb
sub
push
mov
imul
pop
sbb
and
sti
mov
nop
inc
out
pop
jmp
cmp
pushl
jp
lret
cmc
pop
stc
hlt
jae
mov
or
mov
nop
dec
arpl
ror
dec
mov
mov
sbb
mov
add
outsb
pop
pop
xor
sbb
or
xor
xor
hlt
pop
dec
push
dec
adc
push
jae
jb
push
fwait
call
xchg
inc
ret
and
sbb
mov
mov
pop
rol
inc
add
xchg
sbb
push
adc
mov
mov
daa
mov
inc
scas
push
push
xchg
adcl
pop
cli
lds
and
dec
lcall
jne
adc
pop
pop
push
lods
and
mov
dec
ljmp
stc
push
movsb
sub
rep
push
dec
ftst
in
movsb
insl
sbb
push
jo
xchg
shlb
or
jp
lahf
jle
aam
subl
xchg
in
add
or
and
mov
sbb
call
push
push
sub
xor
pop
lods
imul
jbe
bound
negl
add
cmp
pop
mov
movsl
sub
inc
sbb
imul
jbe
nop
jbe
add
pop
xchg
lds
push
add
dec
cltd
pop
gs
mov
lahf
lea
and
and
inc
pop
out
xor
addl
jno
add
iret
pop
cwtl
sbb
xor
xchg
outsl
and
je
dec
call
jns
xchg
insb
enter
adc
and
pop
xlat
out
sbb
in
mov
xchg
ja
and
shll
das
js
xchg
cli
pop
xchg
xchg
ja
adc
dec
into
ljmp
cmp
adcb
add
out
icebp
mov
jle
cmp
lcall
daa
push
mov
fidivs
adc
mov
and
aas
dec
xor
cmp
das
popf
repz
ret
jg
push
cmpsl
sub
mov
jecxz
cmp
cmpsb
data16
sub
lds
cli
int
pushf
mov
xchg
push
inc
adc
lods
gs
xchg
fisubrs
jne
or
push
or
jle
lahf
sbb
pop
es
adc
dec
das
inc
mov
stos
sbb
xchg
jae
lret
imul
and
mov
lret
jno
jmp
out
inc
or
push
scas
int3
mov
adc
shlb
gs
fsts
test
push
mov
aam
aaa
sub
and
fists
push
and
int
jecxz
and
pop
jbe
aaa
in
add
in
adc
or
push
dec
dec
or
lsl
or
sahf
inc
mov
dec
lods
mov
testl
dec
mov
mov
push
add
sbb
sbb
sti
lods
xor
mov
xor
adc
fucomip
or
xor
xchg
xchg
cmpsb
das
hlt
mov
jo
lods
or
icebp
in
repnz
push
push
lahf
mov
cmp
gs
int
fisttpl
sbb
clc
fmul
xchg
push
dec
popa
or
hlt
addr16
and
push
ljmp
nop
movsb
mov
clc
call
mov
test
add
pop
mov
add
xchg
cwtl
sbb
or
scas
fldenv
mov
pop
cmp
dec
cmpb
cmpsb
popf
add
mov
cmp
pusha
mov
xor
or
mov
xor
mov
ficomps
inc
lcall
jb
or
pusha
push
fwait
leave
pushf
outsb
push
cltd
sbb
and
adc
mov
jecxz
ljmp
nop
loope
lahf
xchg
dec
pop
xlat
cs
in
cmp
jp
mov
sub
leave
jne
loop
pinsrw
pop
or
in
add
rcrb
jp
adc
nop
fwait
lock
jno
jbe
xchg
jae
addl
cmpsl
pop
sahf
movsb
add
sub
scas
xor
stos
jecxz
xchg
icebp
imul
add
jo
insl
inc
in
jnp
fbld
nop
sub
aaa
stos
lock
test
dec
lods
fimull
cmp
stos
das
pop
dec
mov
les
pop
fidivl
xchg
mov
dec
dec
cmpsl
into
add
sub
mov
push
push
pop
sub
es
fs
pop
leave
dec
adc
mov
jmp
and
cmp
add
aad
dec
inc
popa
in
and
mov
jo
mov
add
scas
int
test
shl
shrl
xchg
lret
imul
nop
test
hlt
xorl
xor
add
mov
lock
adc
sbb
xlat
clc
xor
je
shl
loop
add
jmp
mov
xchg
push
in
lret
mov
xor
pop
add
cmp
adc
mov
sbb
in
adc
cmp
jne
sbb
and
dec
jmp
movsb
mov
pop
imul
aas
push
aam
repnz
pop
addr16
std
lods
mov
and
mov
addr16
test
mov
pop
inc
imul
jne
pusha
insb
inc
add
mov
mov
xor
adc
test
or
dec
in
sbb
mov
jb
pop
leave
mov
cmp
loopne
push
call
push
out
add
mov
arpl
hlt
sub
push
xchg
cld
inc
jmp
push
xor
sbb
stos
or
add
filds
fistps
pop
push
xlat
dec
sahf
xchg
mov
aas
std
pop
stc
and
xchg
aaa
adc
jmp
xchg
stos
mov
jnp
xor
and
nop
mov
xchg
push
aaa
pop
add
pop
rol
pusha
jl
pushf
sbbb
fisubrs
lret
imul
adc
outsb
jb
lret
push
and
xchg
ja
loope
lcall
pusha
inc
inc
arpl
xchg
dec
ficomps
addr16
ret
mov
inc
icebp
enter
aad
sub
pop
test
pop
outsl
dec
push
jmp
xor
pop
js
and
loope
gs
sbb
scas
jl
icebp
sbb
movsl
sub
pop
andl
pop
call
aaa
and
dec
pop
jg
loope
or
xor
and
mov
sahf
call
lods
cmp
int3
sub
loopne
sub
lods
test
out
push
sti
jo
pop
sub
lods
out
dec
inc
stc
adc
push
pop
hlt
jno,pt
rolb
aam
push
push
das
push
mov
clc
imul
insl
mov
mull
jae
adc
or
es
dec
mov
out
pop
out
sbb
xor
jg
xor
add
cmpsb
dec
mov
and
xchg
fistps
dec
mov
in
adc
cmp
lcall
mov
fwait
xchg
sbb
cmp
fidivl
jmp
packsswb
xchg
int3
cmp
xchg
xor
push
stc
test
pop
push
cld
inc
and
jge
dec
lcall
cmp
movsl
mov
fwait
hlt
pop
fs
cmp
mov
das
inc
jb
mov
dec
out
and
lret
ds
mov
lods
xor
dec
cmp
insb
inc
mov
push
and
sub
pop
and
mov
popf
ds
test
sarl
fs
and
add
cs
lret
fimull
shl
ret
lods
das
dec
data16
jne
add
sbb
stos
push
cmp
xchg
pushf
cmp
out
xor
stos
in
dec
es
xchg
fwait
jge
mov
test
in
xor
sub
fdivl
std
sti
jmp
fucom
into
mov
dec
mov
sub
push
mov
jae
xchg
fwait
cmpsl
dec
out
push
xor
inc
insb
push
cmc
clc
jno
aaa
cmpsb
mov
or
std
icebp
pushf
into
or
sub
js
test
test
lcall
in
sbb
jl
stos
mov
sbb
mov
jp
ja
daa
scas
int3
jecxz
push
and
dec
in
subl
testl
xchg
mov
pushf
mov
mov
adc
xor
sbb
rorb
xchg
in
mov
aas
enter
test
mov
lcall
xor
xchg
jp
inc
xchg
push
mov
divl
jge
mov
addr16
mov
cmc
fs
call
notb
ret
loop
push
fs
lock
lds
inc
scas
insb
stos
xor
aad
jo
repnz
addr16
repnz
je
jne
add
fsub
push
int3
xor
add
inc
call
out
inc
aam
or
mov
stos
jp
sbb
adc
lods
or
mov
cmp
dec
mov
or
movsl
cli
push
jae
fwait
xchg
lds
lret
mov
sbb
cmp
fstp
insb
leave
ror
mov
fstpl
out
insl
adc
loope
test
jbe
ret
or
mov
inc
dec
shlb
int
test
sti
int3
mov
push
mov
add
adc
std
xchg
mov
loop
test
lock
imul
inc
sbb
bound
and
movsl
data16
mov
repnz
and
mov
fisttps
popa
xchg
aas
mov
ljmp
cmpsb
xchg
mov
dec
cmp
cltd
shll
dec
pop
call
test
sahf
adc
addb
add
pop
cld
xchg
push
lds
adc
loopne
test
lret
and
pop
push
push
call
ljmp
lret
das
jge
add
in
lea
cli
mov
and
aad
ja
cmp
or
pop
jns
pop
js
fwait
cmp
mov
xor
imul
mov
jbe
xor
mov
int
push
mov
sahf
xor
pushf
push
mov
mov
pop
hlt
out
loopne
jge
mov
or
lret
icebp
out
lret
cld
jno
sub
sub
dec
mov
hlt
fidivl
xchg
aad
jns
push
mov
jo
and
or
mov
lret
jb
pusha
sbb
cli
mov
pop
lret
lds
dec
inc
sub
jg
js
fmuls
in
sub
out
pop
nop
mov
mov
xor
inc
dec
mov
ss
ret
mov
leave
cltd
leave
and
inc
cs
mov
sub
lahf
push
jnp
mov
sbb
mov
adc
in
test
in
and
jne
fimuls
rcll
mov
sub
push
scas
fcompl
outsl
gs
push
mov
mov
inc
jno
in
jp
and
jle
stos
jae
pop
mov
ret
pop
jns
pusha
sub
adc
cmp
jno
repz
xchg
add
inc
sub
arpl
ja
adc
lock
outsb
or
dec
xor
xchg
dec
xchg
rorb
pop
pop
fnstenv
or
es
in
jne
push
sbb
shll
sbb
inc
enter
push
mov
add
or
daa
push
movsl
xor
fwait
ret
cmp
ja
sti
mov
sub
push
xchg
movsl
inc
ljmp
pop
sub
outsl
push
jb
into
push
jge
adc
adc
mov
les
sub
aad
les
lods
outsl
imul
pop
fbstp
loopne
mov
xchg
jecxz
ret
mov
testb
or
hlt
addr16
mov
or
adc
sub
cmc
xchg
ja
setle
mov
xchg
int
push
jge
aas
push
daa
jg
jp
and
xchg
int3
xchg
dec
mov
jo
std
aaa
add
dec
in
test
add
jne
add
loop
jns
jae
mov
rorb
sub
inc
ffree
loopne
enter
jge
pushf
pop
cmp
add
pop
into
lcall
add
movsb
and
xor
mov
mov
inc
mov
sub
int3
and
pop
iret
imul
push
out
mov
scas
dec
lahf
push
dec
cmp
jl
ljmp
jnp
cltd
pop
test
sub
mov
cwtl
gs
xor
ja
aam
xor
dec
and
popf
loop
arpl
cmp
addr16
adc
shr
cmp
daa
lods
and
mov
testl
iret
add
clc
or
push
mov
xchg
xchg
push
hlt
adc
dec
fucomp
sbb
hlt
xorl
imul
into
repnz
cmp
call
fdivl
add
add
add
or
in
leave
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
lods
nop
loopne
jl
dec
pop
jl
cmc
inc
popl
inc
jecxz
imul
jle
je
jecxz
push
daa
sbb
cmp
push
xlat
arpl
ret
shll
inc
mov
mov
xor
loop
cmpsl
fisttpll
lds
xchg
stc
or
adc
jb
pop
cmp
cltd
scas
out
pop
xchg
push
aad
adc
sub
lret
ficoms
xchg
imul
std
mov
ss
pop
insb
sub
insl
aaa
fimuls
cmpsl
imul
lock
xchg
fnsave
xchg
jns
jmp
dec
fs
xchg
add
sbb
mov
stos
inc
sub
imul
cmp
push
jp
insl
mov
mov
decl
push
in
mov
sbb
xor
lret
out
pop
mov
into
mov
push
popf
xlat
sbb
push
test
xchg
adc
fucomp
mov
ds
cmpsl
jge
add
fs
hlt
mov
aam
test
pop
out
sti
ret
cmpsl
sbb
outsb
arpl
dec
xchg
vsubpd
inc
and
push
mull
jp
sbb
cltd
rcr
pushf
add
adc
fists
mov
add
popa
push
or
popf
pushf
jmp
sbbl
push
gs
aam
mov
or
mov
in
sbb
insl
cmp
aam
imull
scas
xchg
cld
add
test
sbb
push
jae
add
jge
mov
mov
mov
xchg
cmp
cmp
cmp
xor
or
andb
cmp
sbb
or
add
and
repnz
iret
adc
push
jl
xchg
out
dec
lds
fdivrs
js
jge
mov
inc
loop
sbb
or
pop
ret
mov
test
inc
xor
es
call
sub
out
push
out
dec
out
jmp
inc
out
test
addr16
push
js
das
leave
and
aaa
dec
xor
lret
add
cltd
mov
mov
stos
fisubrl
popa
xor
cmp
out
ds
loop
out
and
pop
aas
jns
or
cmpsl
inc
das
mov
scas
lea
sbb
pop
cli
insl
mov
in
fcmovnbe
outsb
jns
sbb
cmp
notb
clc
sub
testb
sahf
jo
push
loope
ffreep
hlt
lock
push
inc
sbb
test
mull
scas
jne
jae
das
es
push
pop
dec
enter
push
imul
aas
cmpl
or
mov
jp
lods
sahf
adc
into
mov
sbb
add
mov
movsb
inc
push
test
cmp
mov
sbb
mov
sub
and
pushf
adcl
sbb
xor
add
iret
addr16
push
sub
sahf
push
leave
xchg
mov
ds
ss
lods
add
roll
inc
daa
bound
sub
cmp
xor
xchg
int
xor
ljmp
in
lcall
push
pop
push
scas
movsl
xor
and
imul
cwtl
mov
jae
xor
add
push
jmp
outsl
or
jae
mov
stos
popa
dec
clc
push
sbb
dec
es
rclb
sub
and
scas
fstl
mov
jecxz
fwait
or
das
nop
push
rol
hlt
dec
lret
xchg
inc
push
je
pop
mov
jb
pop
cs
mov
pop
test
lods
es
in
das
ret
or
lcall
jne
sub
mov
add
ds
sbbl
xor
and
push
jg
arpl
subl
bound
pop
adc
jo
lods
sahf
pop
cmc
insb
jge
imul
cs
xchg
add
pop
sbb
int
fistpll
lods
daa
adc
cmpsl
lcall
inc
into
mov
sub
icebp
lods
jmp
mov
dec
sbb
out
int3
sub
cwtl
fstpt
jb
mov
shll
push
push
imul
shlb
mov
imul
adc
jl
pop
xchg
jmp
xchg
lea
pusha
push
sub
int
mov
jbe
inc
movsb
aad
pushl
add
ljmp
outsb
aam
adc
sub
jnp
xor
and
mov
xchg
in
sub
push
sti
jge
in
shll
imul
xchg
xor
shl
mov
iret
pop
icebp
push
pop
dec
xor
pop
xor
roll
sti
lock
jbe
stc
mov
scas
mov
ljmp
pop
add
push
mov
sub
int
int3
push
push
jnp
lcall
mov
into
add
inc
dec
push
pop
rorl
je
jo
js
push
push
xchg
mov
inc
daa
loopne
int
stc
mov
pop
lret
pop
jnp
adc
pushl
xor
lods
out
fldcw
mov
xchg
sub
dec
adc
mov
lahf
jno
lret
fcoml
loope
std
or
xchg
push
pop
fcomps
aas
inc
xor
loop
or
movsl
mov
adc
and
jb
leave
pop
cmp
fwait
sahf
sbb
dec
pop
out
ljmp
add
mov
shl
push
icebp
jmp
sti
mov
pop
call
fcompl
cmp
icebp
jns
pop
fdivl
mov
dec
xchg
fmuls
and
pop
mov
test
adc
push
scas
in
add
fxch
xchg
fwait
fs
xchg
dec
mov
xchg
xsavec
loopne
add
inc
jb
xchg
imul
fs
fs
mov
lock
hlt
push
nop
and
dec
jne
push
inc
in
ljmp
test
jnp
sub
notb
pop
inc
push
lcall
push
add
mov
movsb
scas
jo
fidivrs
xor
mov
and
pop
jecxz
mov
in
cltd
sbb
inc
mov
test
jne
loope
jg
enter
fwait
mov
int3
icebp
gs
scas
pop
dec
pcmpgtb
mov
mov
push
and
or
cmp
mov
loope
int3
jg
sarl
testl
lds
dec
ret
push
push
push
movsb
xlat
xor
das
mov
lods
scas
inc
test
int3
outsl
es
out
add
loopne
fldl
sbb
pusha
mov
std
scas
mov
roll
jp
fsubs
popa
jbe
dec
or
fsubrp
sub
jno
out
arpl
lds
jle
lea
test
int3
shlb
testl
xchg
inc
enter
sbb
test
adc
test
jne
insl
lret
pop
repz
mov
pop
addr16
cmp
or
sub
insl
insb
pop
xor
jne
icebp
loopne
pop
xor
cwtl
mov
cwtl
dec
mov
jno
inc
insl
das
jno
push
test
add
xor
test
repz
inc
mov
push
inc
cltd
lcall
rorl
subb
mov
je
dec
in
rcr
adcl
in
mov
mov
sbb
or
xchg
inc
mov
pop
inc
adc
jp
jg
jg
cmp
fstp
adcb
pusha
xchg
and
jmp
sbb
jbe
or
gs
push
leave
mov
sbb
mov
push
fnsave
and
incl
pop
mov
sub
mov
imul
stos
mov
add
and
xor
in
cltd
and
inc
or
jo
icebp
mulb
dec
fistpll
pop
loopne
ljmp
addr16
inc
push
jae
shll
mov
sbb
ja
out
xor
mov
sahf
mov
cmp
enter
mov
pop
mov
pop
add
xchg
pushf
in
sub
pop
pusha
pop
dec
dec
fmuls
dec
push
repz
mov
push
out
inc
bts
repnz
mov
outsl
and
rorb
ret
outsb
pop
xchg
and
pop
icebp
std
xor
jnp
gs
loopne
sub
idivl
ret
stos
fs
aaa
sbb
clc
mov
addr16
out
xchg
fists
fcoml
insl
repnz
cmp
outsl
xor
inc
mov
cmp
mov
sub
xchg
int
dec
add
lds
add
imul
cmp
dec
and
jge
and
pushf
or
mov
jo
push
adc
sbb
enter
dec
mov
shl
lods
and
push
cmp
pop
sbb
aad
xchg
cmp
aaa
jno
pop
scas
data16
xchg
jno
jae
hlt
push
inc
jmp
xchg
pop
dec
mov
xchg
cmpsl
cmc
or
out
xchg
push
and
xlat
jns
jb
pop
std
add
test
aaa
pop
repz
mov
stos
jle
jns
data16
repnz
cmc
cmpsb
pop
mov
mov
lcall
and
int
sub
cli
mull
cmp
lock
cmpsb
pop
arpl
ret
inc
scas
inc
xor
xchg
pop
xchg
jne
pop
pop
fstl
sub
mov
xor
mov
sbb
aaa
into
or
cs
aaa
aam
add
mov
lahf
stos
fistpl
scas
rorb
popf
mov
push
xchg
adc
sti
loope
xchg
inc
mul
or
and
xchg
dec
call
cmpb
mov
lahf
ds
dec
es
lods
cwtl
addr16
ss
inc
cmp
movsl
scas
fsub
out
push
pop
mov
out
adc
mov
mov
inc
sbb
jns
clc
inc
sti
sbb
xlat
adc
push
dec
jge
in
mov
dec
in
xchg
repnz
adc
adc
jl
ror
fldenv
xchg
xchg
push
push
std
add
dec
sub
mov
mov
mov
jg
pop
xor
cmpl
stos
mov
icebp
inc
pop
loope
sub
sbb
dec
push
sub
andl
pop
or
sub
test
pop
pop
std
add
dec
pop
shlb
std
xchg
insl
leave
lcall
mov
idivl
inc
push
std
and
scas
iret
and
outsl
push
popa
inc
cmpxchg
int
imull
js
popf
cmpsl
xchg
fcompl
call
outsl
jmp
test
push
sbb
xor
and
rorl
mov
cmp
pop
outsl
cmp
mov
add
jge
fwait
in
mov
in
mov
ja
aas
xchg
lret
mov
cmc
addb
push
ret
push
jecxz
fistpl
das
sub
pop
inc
aad
push
sbb
out
dec
mov
mov
mull
jmp
mov
push
lret
adc
popa
cmp
lods
mov
insb
in
out
iret
xchg
call
sbb
sub
xor
cmp
xor
xor
cmovbe
pop
mov
cmp
mov
ret
je
cltd
jecxz
pop
stos
addr16
scas
shll
mov
fdivr
cmp
push
xor
pop
hlt
xor
iret
jecxz
cmp
jle
mov
loope
sub
scas
enter
movsl
outsl
cmp
ss
icebp
lods
push
dec
call
pop
add
jmp
fsubl
mov
sbb
fcomp
sbb
ds
inc
sahf
sub
pop
pop
push
imul
nop
orb
xchg
lcall
pop
push
movsl
mov
mov
repnz
hlt
dec
inc
sbb
jo
xchg
xchg
jge
movsl
push
push
mov
popa
inc
shlb
sti
xor
jmp
jo
out
clc
dec
cmp
push
fwait
mov
sub
push
popf
cld
cmc
js
and
aam
jns
add
std
fwait
int3
and
scas
adc
sbb
in
dec
popf
in
subl
loop
hlt
xchg
inc
push
jno
push
lods
scas
js
cwtl
pop
pusha
rcr
inc
or
mov
jg
push
sub
push
push
hlt
jb
xchg
add
stos
data16
cmp
mov
jmp
mov
mov
push
and
ficomps
xor
sbb
ljmp
push
sbb
loope
sbb
mov
nop
cmpsl
cmp
or
lea
xchg
repz
inc
in
adc
aad
add
negl
in
sbb
mov
mov
xlat
pop
jge
ljmp
or
xchg
and
pop
pop
sahf
push
xor
cltd
adc
cmp
add
mov
xchg
fidivrs
jae
neg
lret
insl
and
mov
pop
lods
ljmp
add
jno
push
aam
dec
adc
aad
je
mov
cwtl
cwtl
dec
ret
mov
push
dec
or
and
adc
pop
inc
mov
data16
rcrl
mov
mov
andl
jg
mov
sub
push
mov
imul
adc
call
scas
fsts
sbb
dec
std
cltd
fdivs
outsb
pop
into
cli
ficoml
dec
mov
jb
mov
jmp
push
xchg
adc
test
out
out
push
lock
in
bound
push
mov
cli
cmp
inc
mov
rcl
test
pop
push
xlat
stos
cs
in
and
sarb
or
loopne
push
cmp
xchg
test
and
gs
hlt
mov
add
int
insb
nop
int3
mov
js
jl
sbb
adcl
sbb
xchg
adc
sbb
jb
aaa
xchg
or
loope
inc
jle
je
ljmp
lret
add
jecxz
ret
sbb
outsl
fwait
out
fdivrs
push
scas
insl
bound
add
push
mov
addr16
mov
mov
pushf
jb
cmp
mov
stos
mov
push
add
jecxz
ds
aad
adc
cmp
cmpsb
cmp
stos
ret
arpl
pop
fs
mov
cmpsl
xlat
add
stos
pop
dec
mov
arpl
adc
test
cs
inc
das
fnstenv
test
mov
lods
fadd
subb
jne
divl
dec
cmp
cmc
pop
mov
inc
pop
ficomps
mov
cmp
cmpsb
ss
add
cmp
sub
lret
mov
push
pushf
in
ljmp
cmp
push
int
dec
sub
xchg
mov
xchg
xor
pop
lret
lret
sbb
xchg
iret
mov
mov
inc
push
or
sbb
cmp
roll
jp
and
adc
mov
repnz
or
out
fstp
xor
mov
push
shl
ja
enter
xor
add
cltd
cmpsb
shrb
xor
xchg
fninit
cld
mov
sub
cmp
ficompl
test
mov
mov
out
adc
push
in
mov
and
pop
xor
jo
cmp
loop
lahf
cmc
jecxz
and
notl
push
aaa
sbb
stos
popa
xorb
sahf
pop
stos
pop
and
push
out
cmpsl
loop
push
mov
fldcw
push
cmp
jmp
cmp
lods
out
shlb
xchg
shl
or
popf
and
mov
mov
incl
mov
fiaddl
scas
xor
ficompl
movb
rorl
dec
aas
ljmp
inc
jno
and
int
pop
inc
jle
rclb
inc
cmp
rolb
sub
scas
jnp
or
jl
shl
pushf
leave
outsl
fmuls
cmp
sub
int3
es
jge
incl
dec
jno
arpl
and
in
imul
sub
mov
cli
popl
lret
pop
jecxz
mov
inc
aam
adc
push
call
lret
pop
lock
leave
ficoms
ret
push
mov
inc
pop
mov
add
into
sbb
adc
fstp
shr
aaa
sbb
xor
xchg
jmp
dec
pop
push
and
cmp
or
mov
ja
icebp
mov
test
xchg
xor
pop
aas
loope
pushf
movsb
lcall
jmp
pusha
fbld
icebp
lea
into
push
test
push
scas
mov
movb
in
shlb
xchg
jmp
inc
push
inc
fdivs
popa
jp
popf
jmp
stos
mov
push
loopne
jmp
xchg
les
aas
inc
fs
push
xor
imul
je
and
jmp
mov
jne
cli
lds
jge
mov
inc
cld
push
pushf
dec
and
out
mov
js
jb
or
ds
icebp
shll
out
and
movsl
mov
mov
repz
adc
mov
sarb
iret
adc
jno
xor
mov
lret
test
lods
pop
popa
and
cmpsb
push
cmc
faddl
adc
mov
sbb
pop
pop
mov
inc
movsl
movsl
sbbl
rcll
push
scas
adc
jnp
mov
pop
mov
lahf
pop
test
loop
sub
jne
ja
in
pop
out
loope
dec
shll
jbe
mov
cmp
xchg
cmp
pop
in
pusha
ret
fisubl
ds
into
jo
cmp
ficoml
push
sbb
adc
fsubrl
mov
enter
fcompl
repnz
add
dec
jnp
jae
ljmp
into
mov
or
xorb
mov
mov
pop
pop
aad
sbb
inc
xchg
mov
mov
xchg
xor
sub
ljmp
cmc
pop
scas
scas
popa
dec
aas
jg
shll
out
fistps
add
jmp
sub
jbe
pop
cltd
dec
jp
push
jl
mov
ffree
mov
movb
jecxz
pop
lods
cmp
pop
add
mov
addr16
jo
cli
cmpsb
sub
arpl
outsb
loopne
inc
adc
inc
push
imul
dec
negl
lret
add
fldl
add
add
scas
xchg
fstps
push
scas
xlat
mov
adc
cltd
pop
mov
cmc
inc
push
lods
mov
dec
pop
in
pop
fldl
xor
or
push
xor
add
inc
rorl
or
jno
xchg
insb
and
call
sub
dec
adc
mov
pop
scas
mov
xlat
mov
push
or
adc
sub
adcb
mov
cltd
pushf
jns
jnp
mov
insb
out
ja
sub
cli
popa
mov
dec
sarl
dec
dec
fwait
shrb
mov
jecxz
xor
push
cld
xor
repz
mov
stos
sub
add
popa
sarb
adc
out
push
outsl
std
cmpsb
aam
push
sbb
jle
int
insl
dec
jb
sarb
adc
nop
dec
lods
dec
inc
cmp
mov
sbb
dec
and
arpl
movsb
mov
jp
cmc
jne
inc
pop
and
and
mov
hlt
mov
mov
popf
mov
adc
mov
scas
jmp
adc
fsubrp
or
adc
and
sub
imul
fwait
push
std
ja
inc
cmp
enter
stos
mov
iret
or
out
loope
dec
xor
or
out
sbb
in
jae
fs
nop
dec
adc
dec
lret
mov
push
mov
inc
sub
sbb
popa
sub
dec
mov
mov
cmpsl
leave
test
sbb
adc
mov
adcb
dec
dec
and
mov
mov
sub
mov
pop
adc
inc
rorb
fwait
xchg
xor
lahf
push
sbb
test
ja
mov
sub
mov
imul
loope
dec
cmp
dec
mov
mov
add
lahf
mov
arpl
sbb
cwtl
rolb
lcall
mov
js
cmp
movsl
aam
pushw
jns
enter
fimull
shr
nop
jg
cmp
orb
sbb
mov
xor
ret
dec
mov
idivl
out
xor
in
xchg
mov
push
in
addr16
je
jbe
int3
roll
push
push
or
or
lret
ret
adc
stos
pop
inc
mov
mov
pop
imull
sub
xchg
shll
mov
and
dec
test
js
mov
adc
icebp
les
jmp
xor
lods
adc
lea
test
lods
in
cmp
cmp
movsb
mov
int3
xchg
pop
push
hlt
test
adc
sbb
arpl
mov
hlt
mov
jle
sbb
cmc
pop
insb
cmpsl
scas
mov
cmc
in
aad
mov
add
lret
hlt
push
sub
jl
mov
fbld
and
inc
js
scas
iret
mov
xchg
adc
add
js
and
dec
pop
mov
orl
insb
add
push
jmp
lret
daa
adc
stos
adcl
fdivrs
mov
mov
mov
mov
xor
insw
jno
mov
xorb
sbb
xor
jg
int3
adc
fcmove
jnp
sti
rcrb
lret
in
scas
sahf
cmp
mov
icebp
mov
inc
mov
mov
mov
inc
les
faddl
stc
dec
xor
inc
mov
ljmp
inc
addr16
movsb
and
cli
jnp
stos
push
xor
xchg
flds
jbe
adc
mov
ret
js
fwait
lahf
dec
shl
inc
adc
or
test
outsl
add
in
shr
pop
xchg
sub
iret
mov
pop
ja
and
enter
lock
mov
dec
stc
dec
cmp
mov
mull
cmp
or
sti
cli
fldcw
xor
and
or
fdivr
dec
or
sbb
js
jne
mov
and
out
fidivs
sti
cltd
xor
and
cmc
cmpsl
pop
lahf
pop
adc
cmp
mov
and
jne
and
inc
inc
imulb
sbb
stos
xchg
cli
jg
jno
rcrb
mov
lcall
jmp
les
mov
push
and
mov
not
jle
adc
repnz
or
push
test
pop
cmp
sbb
inc
movsl
test
aad
and
fidivrl
fwait
xchg
test
and
inc
test
bound
add
cmc
and
xchg
mov
push
xchg
test
xor
push
cwtl
lahf
pop
jno
xor
rcl
daa
jno
xchg
call
mov
lds
push
call
stos
mov
jns
xchg
xor
idivl
mov
shrd
push
pop
inc
jg
inc
stos
js
mov
test
and
xchg
cmpsb
int3
jp
cmp
imul
mov
push
jo
aad
jmp
daa
in
xor
iret
xor
mov
pusha
loopne
mov
imul
mov
fdivs
adc
data16
mov
add
push
fs
cmp
pusha
mov
push
xor
ljmp
pop
fwait
cmp
fstl
jae
adc
fsubl
lea
arpl
es
mov
aam
sub
fistps
mov
loope
pop
bound
xchg
jno
iret
loopne
in
das
cwtl
std
inc
stc
jno
std
mov
test
cmpsb
nop
push
xor
dec
ss
nop
jecxz
mov
jle
aad
xor
mov
dec
je
or
jbe
cmp
lock
gs
lahf
enter
xchg
push
add
or
lods
push
inc
insl
jae
loopne
mov
add
stos
fdivl
hlt
pop
fiaddl
insl
lods
adc
xor
aaa
subl
pop
js
push
cmpb
mov
dec
mov
xchg
adc
scas
cs
shr
int3
push
or
lahf
mull
mov
xchg
adc
add
adc
jns
push
in
aad
rclb
popl
jmp
adc
iret
or
ljmp
and
lods
cmp
jns
fisttpll
push
call
into
cli
sub
pop
outsb
pop
and
mov
mov
push
pop
jge
mov
cmpsl
gs
mov
jnp
sbb
inc
pop
rclb
dec
fcoml
outsl
dec
push
jno
inc
call
iret
fimuls
leave
in
fs
jb
xor
pop
xchg
jbe
mov
or
stc
xchg
xchg
imul
in
imulb
in
pusha
in
push
stos
xchg
addr16
js
xchg
test
sar
and
icebp
jo
aad
mov
daa
andl
lock
fsub
push
jmp
jne,pt
rcl
push
sbb
arpl
cmp
and
mov
push
sub
test
jmp
cltd
fists
aaa
mov
scas
xor
inc
sbb
xor
pop
jo
sbb
inc
fadds
adc
adcb
dec
stos
or
movsl
dec
jo
scas
test
jg
xchg
mov
sub
in
jmp
sti
and
xchg
adc
stc
xchg
lea
rorl
adc
rclb
dec
insl
faddl
loop
add
mov
and
xchg
and
push
sbb
cmp
es
xchg
cmp
dec
sbb
pop
arpl
push
or
shl
dec
clc
pop
rcl
lods
nop
xchg
fistpll
js
and
mov
pop
and
mov
adc
rorb
arpl
pop
pop
xor
int3
mov
outsl
test
test
mov
pusha
mov
lret
jg
out
orl
push
adc
rolb
sbbb
jecxz
add
aas
pop
out
scas
scas
mov
lret
inc
mov
lahf
pop
movsb
mov
hlt
sbb
push
xor
fidivrl
inc
out
mov
xchg
subb
int
bound
aas
addr16
adc
imul
aam
mov
out
mov
push
pushf
sub
sub
xlat
or
popf
call
bound
jae
out
sub
test
sbb
scas
int3
jmp
arpl
xchg
xchg
sbb
push
sub
jmp
rorl
pop
jns
xchg
push
fmull
xchg
out
leave
push
mov
push
push
outsl
sub
jle
mov
jne
jno
mov
pop
inc
xchg
lock
addr16
jnp
jg
push
sub
arpl
div
cld
lds
ljmp
sub
push
nop
gs
clc
cmp
cmpsb
xchg
jnp
imul
cmpsl
imul
jae
dec
cmp
dec
mov
dec
jge
pop
nop
push
bound
cmpsb
inc
dec
inc
sbb
dec
cmpsb
fdivrl
dec
push
add
test
in
retw
out
cmpsl
das
rcll
shrb
dec
pop
lods
ficoms
add
sbb
mov
or
cmovno
fldenv
shr
jnp
pop
ss
mov
lods
imul
incb
and
sub
cwtl
addl
movsl
in
notl
dec
iret
iret
clc
sahf
inc
lret
cmp
cmpsl
push
insb
jae
push
stos
and
and
dec
in
jmp
mov
outsb
das
adc
fnstcw
sub
jmp
adc
bound
mov
push
addr16
leave
xchg
out
test
std
scas
ret
lcall
stc
imul
cmp
dec
mov
lahf
sbb
pop
pushf
testb
mov
push
add
test
arpl
cli
pslld
dec
ret
and
mov
nop
pop
mov
out
add
add
lret
pop
jg
xlat
cmpsb
mov
ret
sbbb
ret
lret
mov
or
movsl
push
xchg
mov
mov
push
imul
sbb
call
mov
das
sbb
pop
inc
gs
imul
repnz
lret
dec
adc
mov
lods
fnstcw
repnz
int3
lret
adcb
ret
and
push
outsb
xchg
int3
xlat
adc
dec
push
popf
adc
jbe
lds
arpl
xorl
xchg
push
dec
or
jbe
test
mov
cmp
mov
test
and
lods
or
adc
cmp
stc
mov
sbb
sbb
shlb
and
arpl
push
pusha
in
shrl
mov
push
mov
xor
jno
inc
and
enter
push
adc
loope
bound
jp
jmp
ljmp
xor
arpl
push
push
sbb
add
test
mov
jmp
mov
mov
inc
jle
negl
xorl
in
and
inc
inc
mov
fld1
mov
lret
mov
mov
lea
inc
adc
mov
pop
shlb
jae
stos
or
mov
ret
daa
pop
imul
mov
mov
inc
mov
adc
adc
pop
dec
push
mov
sub
mov
std
pop
rcll
pop
cmp
test
into
mov
push
mov
icebp
inc
or
loope
dec
adc
push
push
fs
mov
arpl
lods
mov
enter
call
xchg
outsl
arpl
pusha
imul
icebp
cmpl
add
inc
nop
lds
fsub
popa
pop
mov
pop
sub
das
mov
sub
cs
pop
aad
or
cld
lock
pop
lahf
pop
xchg
push
push
shrb
cmp
mov
std
mov
jl
lcall
pop
call
imul
fisttpll
push
lret
pop
mov
or
stc
out
or
or
jle
or
sub
jb
dec
aad
push
add
clc
or
dec
push
xorl
pushf
push
dec
cmp
shl
mov
dec
data16
in
jno
mov
jecxz
loope
jno
sbb
xchg
sub
scas
pop
lret
pop
mov
push
jnp
mov
jle
sub
loopne
inc
lea
testb
data16
fisubl
jg
fsubrp
shl
iret
pop
fstps
cmp
and
jge
sub
into
scas
orb
movl
imul
popf
sub
shll
lea
sub
adc
jb
dec
stos
dec
adcl
test
inc
sub
aas
xchg
xchg
imulb
cli
popa
mov
jp
xchg
fsts
repnz
loop
pop
lock
int
js
repnz
adc
xorb
inc
jmp
test
movsb
lods
pop
test
or
dec
push
mov
mov
jecxz
ficomps
push
movsl
sub
push
test
sub
inc
sub
insl
jnp
inc
fsubrs
lods
mov
push
cmp
mov
rcrl
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
inc
xchg
iret
and
pop
jl
fimuls
js
add
add
pop
cmpsb
cli
ja
test
or
movsl
stc
add
jo
out
sti
xor
ds
push
imul
fs
mov
js
push
insb
xchg
fucomi
and
mov
jne
jns
in
and
pop
pop
fs
mov
test
jne
and
push
mov
cli
jbe
ret
mov
mov
repnz
adc
repnz
lea
andb
pop
test
out
mov
push
xchg
jbe
fists
bound
sub
shl
test
mov
inc
addb
mov
xor
xchg
pop
insb
js
xor
xor
cltd
or
sub
cmp
or
adc
ss
jae
sub
dec
decb
or
test
lods
add
loope
push
and
clc
fldcw
or
adc
and
outsl
cmc
xor
sbb
jae
popf
push
or
push
aad
mov
jge
sbb
stos
gs
xchg
and
out
in
inc
test
add
fwait
sbb
push
data16
mov
cli
in
outsb
test
pop
and
std
sbb
and
stc
push
rorb
out
cli
or
cltd
inc
and
jb
ds
or
jmp
sbb
test
jge
ret
cld
stos
enter
xchg
add
in
fistpl
dec
mov
orl
leave
nop
stc
loop
leave
stos
std
and
pop
ja
xor
das
mov
sti
pop
xlat
inc
fimuls
pop
pusha
out
call
je
mov
pcmpeqd
mov
dec
call
mov
fnstenv
pop
sub
and
and
adc
and
jno
dec
aas
xor
push
stos
or
inc
xor
imul
mov
leave
mov
lea
xchg
push
xchg
adc
add
rorb
cld
push
cmp
push
sub
iret
bound
in
test
shlb
sbb
ds
sti
jp
nop
add
call
add
add
cltd
cli
cld
mov
adc
les
fsub
gs
add
sbb
ja
js
jmp
dec
add
ret
jle
xchg
stos
fdivs
mov
xchg
enter
or
and
sbb
and
push
mov
test
pop
adc
imulb
or
cmpl
cld
outsb
xchg
pop
sahf
xor
fistl
rorl
cmp
outsb
outsl
imull
mov
imul
or
sub
inc
mov
in
sub
std
shll
mov
cmpb
mov
adc
lret
add
pop
out
xchg
xchg
addr16
dec
jns
aas
sbb
into
insl
iret
cmp
or
mov
fdivrl
dec
add
loop
lret
js
scas
mov
ljmp
add
or
fcmovu
sbb
xor
mov
inc
lock
xor
nop
repz
adc
ret
out
jbe
je
mov
mov
call
leave
arpl
int
inc
xchg
inc
add
jecxz
roll
pop
mov
outsl
lahf
pop
xlat
out
mov
add
add
ja
aam
aad
adc
cmp
sbb
pop
ss
addr16
dec
dec
jne
push
inc
ficoml
pop
clc
adc
mov
lcall
push
hlt
adc
popa
ljmp
mov
xchg
add
ror
shrl
aam
stos
xlat
aas
rcll
rcl
push
inc
inc
xor
stos
data16
xor
cs
or
sahf
pop
call
xchg
rcrb
cld
in
sti
arpl
jnp
daa
mov
inc
out
aam
addb
sbb
jne
mov
jae
je
jmp
stos
xlat
dec
sti
pusha
mov
adc
pop
divb
lret
insb
cmpsl
jb
push
std
mov
fiaddl
pop
add
xchg
and
xchg
push
mov
and
add
pop
xor
lcall
out
icebp
adc
pop
jo
xchg
xor
mov
dec
lods
xchg
inc
jbe
jl
push
inc
push
cmp
mov
push
lock
lahf
hlt
cmp
out
jge
rcr
jmp
mov
hlt
shll
push
das
mov
je
pop
or
mov
mov
dec
xchg
inc
in
cmp
dec
adc
inc
es
das
mov
mov
add
cmpsl
cmp
push
cmc
dec
and
pop
pop
test
jmp
add
push
and
cmpsl
lahf
jne
mov
xor
cmp
lds
das
in
rorl
add
or
stc
sbb
xchg
sub
mov
jmp
mov
rcll
je
inc
sub
ret
pop
xchg
pop
jecxz
mov
mov
icebp
add
pop
dec
icebp
pusha
out
push
xchg
jnp,pn
rep
inc
cmp
pop
popa
jae
nop
std
fdivrs
xor
mov
fdiv
mov
add
xor
mov
push
and
dec
aas
lcall
jg
mov
addr16
and
aad
imul
lret
rcrl
mov
aaa
jmp
pop
mov
lcall
xor
dec
pop
ljmp
push
pop
pop
cmpsb
dec
insb
push
icebp
enter
aas
mov
inc
pop
adc
pop
cmpsl
bound
fwait
daa
xchg
in
leave
popa
in
sub
adc
fucomip
jl
push
xor
jae
ret
mov
and
sti
dec
mov
cmp
sti
clc
xchg
cmc
rol
addr16
push
lea
stos
out
xor
sub
ds
mov
lret
jmp
in
insl
and
dec
jae
cmp
cmp
sub
loopne
cmpsl
jne
mov
pop
iret
inc
fnsave
stos
cmp
loopne
xorl
jecxz
das
negb
out
sub
mov
push
push
lcall
insl
test
push
sub
cmpsl
div
fsts
mov
aaa
dec
xor
es
into
lods
adc
aas
xchg
gs
aam
in
and
outsb
cmc
add
inc
xchg
mov
into
in
mov
aam
sub
test
data16
push
push
movsl
int
mov
jbe
addr16
fisubs
in
dec
movsl
test
mov
mov
pop
je
mov
jno
or
dec
std
add
or
inc
cwtl
in
popa
push
jae
dec
in
outsb
jg
push
xor
jb
stos
mov
jmp
popf
orl
arpl
lods
mov
and
shrb
pop
cmp
xchg
enter
mov
add
mov
in
stos
adc
pushf
sbb
scas
ror
push
jecxz
rcrb
ljmp
adc
jg
and
test
fisubrs
cmp
popf
jg
lds
aaa
scas
xor
push
or
xor
lock
or
pop
lods
xor
xchg
fs
jae
iret
stos
or
add
cmc
idivb
scas
and
in
test
sbb
xchg
or
xchg
rol
daa
lret
lock
xchg
sti
stc
cli
popa
mov
adc
out
xor
xchg
addr16
aas
arpl
insl
test
add
decb
pop
xor
jne
jbe
dec
mov
ja
sub
xor
in
or
jno
xor
jne
inc
xchg
and
cltd
cmpsb
cmp
pop
mov
push
jbe
ds
mov
lods
xchg
stos
xchg
adc
mov
call
add
adc
jbe
lret
rcr
or
loopne
xor
dec
fimull
xchg
jmp
in
mov
pop
mov
aam
and
xchg
out
hlt
mov
sbb
scas
lret
addr16
or
movsl
aam
mov
and
dec
hlt
adc
cmp
jle
or
arpl
inc
popa
les
push
rolb
stos
cmp
jbe
es
scas
mov
sub
orl
ffree
or
das
arpl
mov
test
es
stos
lret
mov
xchg
fnstcw
mov
mov
add
cld
out
loop
sub
cmc
shrl
enter
jns
scas
cmpsl
data16
inc
cmc
test
lret
ja
in
loope
test
inc
shrl
xlat
pop
arpl
stos
mov
xchg
jecxz
xchg
mov
mov
add
xchg
repnz
xchg
scas
dec
std
cld
test
outsl
add
xchg
push
push
rolb
scas
adc
or
push
lods
sbb
imul
add
mov
dec
lret
sahf
dec
xor
xorb
repnz
imul
xchg
sar
or
call
inc
pusha
pop
mov
repz
mov
jno
loop
scas
mov
sbb
pop
pop
pop
jge
cmp
fstps
mov
xor
pop
sbb
test
mov
push
testl
mov
and
js
rcrb
and
fs
fldcw
in
cmpsl
insl
ja
mov
pop
mov
les
push
dec
or
mov
jp
in
add
mov
pop
imul
add
sbb
addb
outsb
cmc
in
sbb
xor
mov
mov
push
shr
dec
add
test
int
push
scas
mov
jle
add
or
push
sub
cmpsb
jns
ds
or
or
lea
mov
xor
push
jne
std
rcll
stos
pop
jg
xsaveopt
insl
mov
inc
in
pop
pop
sti
adc
fsub
std
xor
xchg
leave
adc
dec
lahf
jno
cltd
xlat
xor
es
add
test
pop
and
sbb
fmul
addr16
scas
jnp
dec
push
pop
loop
xchg
adc
jne
xlat
cmpsb
aaa
loopne
inc
cs
popf
rclb
or
mov
imul
inc
add
add
lret
shlb
fisubs
fnsave
adc
into
es
or
sub
dec
sbb
aad
lret
std
add
lds
jne
or
pop
pushf
fs
add
or
and
sbb
jno
inc
decl
repnz
aaa
insl
sahf
xchg
iret
jg
inc
push
iret
mov
cmp
xlat
or
sbb
test
dec
pop
mov
lahf
jmp
lahf
cli
cmp
add
arpl
daa
mov
xlat
je
push
mov
mov
inc
dec
dec
loop
daa
mov
out
movsl
push
dec
jb
push
out
cmp
pop
fidivs
pop
inc
cmpsl
ror
insb
cmc
jno
sbb
popa
and
dec
mov
sub
mov
jl
sbb
cmpsb
aaa
jge
loop
xchg
xorb
cwtl
addr16
and
xchg
lds
popl
cmpl
push
jbe
mov
test
iret
xchg
not
jne
lahf
xchg
inc
inc
shrb
dec
push
movsl
imul
out
loop
popa
cwtl
in
pop
jmp
jl
push
sahf
push
or
pop
mov
or
add
mov
sbbb
ret
rorb
push
hlt
mov
les
rcrb
dec
div
or
xchg
xor
icebp
cmp
pop
out
test
adc
ret
addb
xchg
int3
icebp
into
jmp
jo
jnp
loopne
movsl
mov
cmp
push
shrl
movsb
add
dec
inc
leave
stc
sahf
imul
imul
xchg
xchg
and
pop
cs
insb
push
insb
mov
mov
mov
test
stos
xchg
fwait
dec
mov
pop
add
sub
loop
es
in
push
jbe
clc
test
inc
aad
and
mov
ror
push
pop
push
arpl
das
sub
sbb
dec
popf
decl
pop
call
cmp
ljmp
outsb
xrelease
or
add
aam
inc
out
mov
lcall
mov
and
subl
fidivl
into
sbb
sub
sbb
bound
sub
adcb
int3
pop
lods
test
outsl
jecxz
mov
sarl
es
inc
ljmp
cwtl
xchg
cmp
add
dec
mov
bound
pop
fsubs
mov
push
mov
mov
cmp
dec
aam
xchg
and
dec
loopne
shll
xorl
mov
int3
packuswb
fldl
dec
les
mov
lock
mov
mov
sbb
mov
pop
stc
xchg
inc
notb
xor
in
adc
or
imul
hlt
pop
and
pop
hlt
sub
fisttps
pop
xchg
insl
rorb
mov
cwtl
cli
mov
inc
orl
lods
divl
push
adc
divl
cmc
nop
adc
mulb
inc
je
add
gs
jmp
cmpsl
ret
push
shrl
mov
sbb
pushl
aas
dec
nop
ret
rorb
lods
arpl
int
xchg
and
dec
mov
in
add
dec
xorb
mov
push
lods
pop
xchg
pusha
or
cli
lret
cmp
push
mov
cmpsl
sti
push
rcl
dec
mov
mov
cmpl
mov
xchg
sub
mov
out
adc
lcall
xor
sub
pop
movups
mov
ljmp
sarb
sub
ret
fwait
jnp
shrl
mov
mov
lret
fisttpll
xchg
mov
lock
cmp
stos
and
xorl
cmp
mov
and
pop
push
adc
inc
insb
in
mov
test
rol
mov
adc
in
cmp
sbb
or
xor
stc
mov
pop
adc
sbb
mov
fsub
mov
cmp
adc
stos
or
nop
sub
adc
lods
setle
mov
fwait
pusha
and
aad
jp
jmp
idivl
push
mov
rcrb
repz
cmpsb
cmp
popf
jl
into
dec
cmp
ljmp
xchg
test
dec
xchg
not
jb
lock
xlat
dec
inc
push
je
test
hlt
ljmp
push
adc
test
movsl
movsl
adc
sub
mov
fsub
cmp
push
push
out
pop
mov
idivb
sub
subl
popaw
cld
xchg
insl
dec
out
jae
mov
hlt
scas
pop
in
ror
cli
push
lods
cmp
xor
fcomi
push
sub
pop
fwait
fwait
rorl
jmp
adc
sub
cwtl
inc
mov
xlat
gs
scas
dec
push
imul
mov
cmp
fimuls
incl
in
push
stos
pop
mov
or
mov
xor
or
xlat
popl
cwtl
imul
fdivs
mov
xchg
jns
mov
mov
stos
push
ret
insb
into
shlb
xor
xor
movsb
mov
mov
divl
dec
lods
xor
popa
adc
cli
enter
or
xchg
aam
cmpsl
je
stos
inc
inc
adc
or
lret
or
mov
gs
jno
mov
rcll
lret
popa
popa
mov
inc
in
jne
in
xor
push
pop
clc
aaa
rol
inc
cmc
jbe
push
mov
imul
inc
cltd
movsb
fidivs
cmp
jno
mov
std
and
jecxz
cmp
sub
cs
subl
or
jnp
cltd
in
push
and
add
addr16
dec
xchg
mov
push
je
mov
cmp
lea
addr16
mov
push
adc
or
lods
inc
es
les
lods
aad
inc
mov
jns
add
or
ret
push
jmp
incl
and
add
aaa
mov
shrl
mov
and
jae
jp
sbb
mov
xor
iret
jmp
lret
pop
sbb
mov
adc
daa
dec
cmp
and
lock
xor
fsubl
mov
imul
shr
out
inc
inc
cmp
outsl
inc
lret
and
inc
pop
dec
push
mov
sub
out
loop
pop
inc
xchg
pop
and
lahf
or
out
inc
movsl
pusha
cmp
call
outsl
sbb
sbb
xchg
adc
mov
aaa
or
scas
insb
aaa
xchg
imul
mov
pop
pop
aam
test
insl
add
test
lret
sub
imul
pop
push
pop
xor
js
inc
dec
roll
mov
adc
test
or
inc
das
push
in
filds
insl
pop
cmpsl
add
stc
xchg
and
or
mov
jb
mov
dec
add
mov
push
add
push
clc
sub
cmpsb
mov
cld
mov
stos
mov
fbld
add
je
cwtl
sbb
mov
clc
sub
in
push
lods
jns
mov
add
in
adc
pop
fsubrl
dec
jns
dec
and
scas
negb
cwtl
fnstsw
lret
js
mov
pop
mov
cli
mov
xor
in
and
sbb
jge
jnp
xor
mov
jae
rcpps
xchg
push
js
cmp
cli
lods
add
inc
mov
and
out
jae
push
test
push
adc
mov
mov
cltd
or
and
push
inc
jg,pn
jg
pushf
stos
sbb
aaa
mov
push
outsl
pop
ljmp
xor
fwait
push
in
fldt
mov
xchg
inc
decl
mov
shr
idivb
xchg
push
hlt
outsl
je
cmp
inc
or
ret
inc
push
fs
jg
arpl
aaa
xchg
pop
dec
xchg
subl
or
mov
inc
dec
mov
mov
jo
cmp
mov
and
push
mov
jnp
xchg
xor
out
cmpsl
insl
push
push
push
fs
loop
push
cmp
loopne
inc
jecxz
repnz
mov
pop
dec
je
orb
sub
jbe
jmp
in
cld
outsl
jnp
pushf
push
push
les
dec
pop
xchg
ret
or
addb
dec
pop
and
or
testl
jge
or
loopne
add
inc
ja
movsl
bound
loope
jmp
shrl
add
pop
and
insb
xchg
sbb
inc
movsb
mov
loope
nop
rcrb
lods
pop
mov
clc
cmp
lods
pop
and
and
jo
shlb
adc
pop
inc
mov
div
insl
rclb
or
js
add
xor
mov
cwtl
jo
dec
push
adc
inc
jg
shlb
mov
or
jge
repz
or
inc
mov
push
dec
jno
les
into
pop
lahf
mov
fstl
test
test
pop
js
jge
or
dec
les
aad
in
inc
mov
js
ret
sbb
ss
pop
sbb
hlt
sub
xor
hlt
pop
mov
mov
push
pushf
or
sub
fucomp
inc
xchg
mov
shl
mov
aaa
mov
cmp
bound
jl
xchg
and
aas
pop
cltd
std
iret
in
mov
xchg
sahf
data16
frstor
repz
sbb
push
mov
loopne
loop
dec
jmp
inc
xor
cltd
imull
shlb
pusha
outsl
mov
fs
scas
add
jmp
adc
mov
xlat
repnz
je
push
andb
mov
mov
lret
xor
jae
aam
sbb
fisubl
xor
pop
jecxz
and
movsb
in
int3
lahf
adc
sub
je
ds
int
add
sbb
loopne
stos
xchg
ljmp
cli
shll
js
cmpsb
sub
fdivs
or
pop
push
ret
sbb
and
push
aas
dec
pop
and
inc
dec
cmp
lahf
inc
imul
adcl
mov
rcrl
leave
scas
xchg
adc
mov
sarb
jno
movl
call
je
or
outsb
and
pop
frstor
jle
adc
jle
cmc
mov
inc
dec
mov
pop
mov
loope
add
fbstp
mov
xchg
xchg
lcall
movsl
mov
lods
jb
mov
jnp
add
add
pop
cmp
pop
and
popa
dec
imul
mov
shlb
mov
mov
int3
int
sub
push
inc
mov
das
ret
or
sbb
jno
dec
mov
fsts
ret
or
stos
push
adc
jbe
jmp
popf
test
sbb
inc
cmpsl
and
inc
push
fldt
and
cmp
sub
xlat
push
std
loope
in
js
add
pop
or
lds
ficoml
fs
xchg
jb
int
xor
sbb
push
loopne
jg
pop
fdiv
daa
pop
mov
push
inc
imul
rorb
mov
xchg
xor
mov
stos
pop
mov
jne
and
xor
xchg
or
ja
mov
and
loop
jecxz
scas
mov
or
out
inc
sub
cltd
int
nop
pop
nop
mov
mov
mov
pop
or
mov
cmpsl
add
jne
or
pop
adc
push
pusha
mov
sub
jns
arpl
pop
psubd
sar
sub
outsb
lret
insb
cmpsl
mov
out
dec
shrl
js
arpl
sub
lahf
sbb
xchg
push
insb
cmp
sbb
dec
dec
cmp
push
roll
cmp
dec
arpl
lcall
and
insl
adc
xchg
jl
loope
imul
jecxz
leave
call
daa
xor
lock
jbe,pn
subb
aad
jecxz
and
pop
outsl
lahf
and
insb
aas
mov
popf
stc
pop
rcrl
fimull
xor
jnp
or
mov
dec
movsl
sbb
add
call
fstpt
sbb
cmp
shrb
jo
ja
add
and
xchg
mov
or
stc
pushl
stos
sti
popa
stos
adc
das
mov
pushf
inc
es
cmpsb
pop
rolb
dec
mov
jecxz,pn
mov
fldl
mov
fcoml
ret
xchg
push
xchg
mov
xchg
push
inc
cmpsb
es
out
xchg
dec
sub
jmp
cmp
andl
sbb
mov
rcr
lahf
mov
dec
fwait
sub
gs
mov
hlt
dec
cmpsl
jo
mov
and
inc
push
jne
pop
popf
inc
fdivl
jecxz
xchg
sbb
shl
push
xor
xor
in
adc
adc
mov
inc
cltd
addr16
clc
mov
sbb
lock
inc
js,pt
andps
pop
repnz
negb
push
mov
rorb
mov
cmp
dec
sbb
mov
xor
clc
movsb
cmp
std
pop
int
xor
rcl
inc
js
jb
test
xchg
xlat
mov
mov
jno
lock
and
dec
lods
subb
dec
cwtl
push
xchg
xchg
daa
mov
lret
add
test
xchg
fdivr
xor
or
stos
mov
and
inc
out
ja
dec
xlat
arpl
jno
fnsave
fistpll
ljmp
xchg
icebp
dec
inc
fidivrs
mov
mov
fidivrs
push
sti
or
pusha
pop
movb
mov
shl
loope
lahf
lcall
nop
cmp
loop
lret
cmp
mov
outsl
es
cltd
int
mov
jne
mov
std
adc
fcmovnu
add
test
mov
pop
adc
xlat
xchg
lret
cli
xor
out
aaa
mov
bound
pop
in
pop
fsubs
scas
adc
mov
out
hlt
jmp
and
popf
dec
adc
out
cmc
mov
out
lcall
mov
push
divb
gs
jg
and
pop
push
mov
sub
pop
daa
and
int3
test
sbb
push
jbe
js
scas
mov
je
push
das
adc
ljmp
push
push
stc
add
gs
sbb
xchg
das
repnz
add
hlt
inc
and
inc
mov
leave
stos
sub
pop
sbb
mov
push
dec
outsl
xchg
test
cmpsb
add
rep
mov
jb
inc
xchg
pushl
pop
xchg
insl
mov
fistpl
pop
pusha
sub
out
push
or
sbb
xchg
mov
inc
mov
inc
fisubs
push
sbb
dec
pushf
stos
add
xchg
test
pusha
xor
jg
xor
daa
fldl
or
pop
jns
fsts
jbe
push
push
pop
pop
or
push
push
push
ss
xchg
dec
int
cli
mov
shll
rcrb
js
imul
xchg
sub
mov
pushf
fistpl
aam
mov
and
shr
add
and
xchg
call
push
mull
lock
jno
xor
mov
fsubs
sbb
inc
jmp
pop
cs
sarb
push
bound
inc
test
or
fistpl
or
shll
jl
mov
sub
sub
pop
push
jo
pushf
xorl
out
sub
mov
sub
cltd
in
push
cmp
add
test
arpl
stc
adc
lcall
in
push
lds
and
jns
push
imul
or
xor
jg
xchg
jl
lret
and
imul
fcompl
sub
js
adc
bound
shrl
jo
mov
and
xorb
adc
cs
or
cmpsl
inc
xor
cmp
stos
in
out
adc
xor
pop
test
pushl
stos
jle
es
and
add
or
callw
ja
nop
pop
stc
xor
cmpsb
ljmp
cs
aaa
mov
sub
in
mov
xor
movsb
nop
mov
sbb
sub
gs
cmp
clc
inc
out
test
gs
sbb
repz
push
sbb
jnp
test
sub
loopne
test
movsl
dec
push
addl
mov
outsb
in
push
xchg
cwtl
xchg
int3
inc
cs
mov
or
in
call
movsl
cmp
addr16
orl
cmpb
imul
push
mov
mov
ret
aaa
imul
and
jge
mov
test
cwtl
adc
lds
mov
lock
aam
or
dec
mov
pop
and
das
jno
push
negb
cmp
movsb
push
shr
aad
std
jp
xchg
sub
pop
pop
jo
gs
cmp
adc
and
adcl
xchg
ss
mov
jle
rol
mov
mov
aam
es
mov
fmuls
sbb
and
addr16
clc
jo
mov
adc
mov
dec
adc
add
xlat
and
into
mov
mov
inc
or
ljmp
sbb
test
lret
mov
add
dec
push
sarl
into
adc
outsl
xchg
arpl
push
or
sbb
adc
mov
shrb
inc
test
shlb
shl
rcrl
fsubrs
fs
fcoms
js
gs
fsubs
adc
arpl
nop
jno
cmp
cwtl
adc
ds
test
arpl
stos
roll
inc
dec
jge
xchg
jp
pop
dec
sbb
push
das
rolb
sahf
xor
aad
flds
mov
scas
cltd
mov
jle
cld
mov
sbb
jnp
aas
push
repnz
lods
rolb
jae
rolb
shl
cmpsl
xchg
fnstcw
lahf
mov
pusha
cmc
mov
jbe
dec
loop
jle
shrl
stos
jl
mov
push
fldt
sbb
in
adc
imul
push
push
movsb
mov
add
outsl
xor
jge
jg
sub
jl
push
ret
nop
mov
mov
arpl
lds
sbbl
and
push
sbb
outsb
out
sbb
mov
cmp
ret
cltd
inc
pop
ljmp
loope
push
dec
mov
cmc
xchg
arpl
in
pushf
lcall
xchg
lret
inc
xchg
sub
xchg
lods
stc
and
mov
decl
stos
dec
dec
outsl
or
ret
mov
dec
jle
scas
rolb
and
xlat
add
jg
jns
lods
and
shlb
push
and
mov
add
mov
movl
mov
mov
xor
subb
sbb
xchg
adc
lcall
decb
jmp
mov
test
data16
cli
add
cld
notl
and
pop
popa
js
sub
push
pusha
inc
jg
pop
ljmp
dec
mov
sub
mov
sub
mov
inc
mov
inc
pop
sbb
popa
mov
mov
je
idiv
loopne
xchg
loopne
lock
adc
imul
fwait
pushf
mov
out
insb
test
stos
or
loopew
xor
stos
outsb
scas
lea
iret
or
jp
pop
mov
sbb
lock
mul
jl
mov
push
arpl
mov
pop
enter
adc
pop
in
jl
clc
ret
test
lods
shl
cmp
nop
das
les
and
imulb
in
mov
adc
idivl
push
call
test
and
imul
lods
mov
sub
push
sub
les
arpl
xchg
pop
pop
pusha
jns
cmpsl
jmp
in
lahf
adc
cmpl
sbb
cmp
adc
cmpsl
mov
jmp
and
hlt
jns
pop
sbb
bound
jle
add
dec
sub
adc
push
and
xchg
and
mov
bound
aam
roll
pop
mov
movsb
push
dec
psubusw
mov
mov
or
loope
fnstenv
fcompl
fcomi
out
das
sti
dec
adc
fdiv
and
xor
mov
scas
out
std
mov
add
aas
sarl
pop
sbbl
stc
pop
adc
mov
sub
dec
or
and
aam
lcall
call
addr16
sub
sahf
jp,pt
loopne
mov
hlt
test
iret
lret
jmp
mov
or
shrb
sub
sbb
rorl
and
sbb
sbb
and
jl
jge
or
in
sbb
cltd
cmp
push
cmp
int
jecxz
lcall
rcl
aas
lods
or
cwtl
scas
lret
sbb
je
outsl
mov
mov
or
mov
xor
cmpsl
in
scas
inc
out
adc
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
jno
push
stc
daa
push
jl
pop
pop
jl
sbb
int3
cld
jae
in
enter
jmp
inc
jbe
xchg
pop
cmpsl
jne
repnz
mov
sub
jb
lahf
insl
in
test
xchg
lret
stos
xchg
pop
xchg
lahf
fwait
je
push
push
movsl
stos
aas
adc
ret
pop
int
pop
xor
mov
push
in
jl
jmp
mov
xor
sbb
xchg
push
mov
or
xchg
xor
loopne
push
aaa
imul
int3
das
fadds
cltd
add
pop
sub
popa
clc
and
sub
mov
sbb
test
add
xor
lcall
add
les
add
mov
out
mulb
mov
lock
enter
cwtl
or
adcl
popa
adc
dec
mov
lea
xor
mov
cwtl
fmul
sub
push
in
add
fs
jmp
je
imul
xchg
movsl
add
push
jecxz
inc
popa
scas
clc
or
jp
and
pop
aas
pop
mov
jmp
mov
hlt
dec
js
mov
and
dec
mov
push
add
jne
jbe
shl
push
stos
adc
jmp
out
sarl
and
je
lcall
in
sub
xchg
cltd
push
inc
xchg
fstpl
aas
cmp
arpl
xor
xchg
cmc
pop
in
out
outsb
xchg
sbbl
lret
mov
pop
mov
mov
pop
mov
jns
sub
jg
jl
adc
mov
scas
mov
xchg
sub
sbb
xchg
mov
push
ja
pop
popf
dec
out
mov
cmpsl
fnstenv
bswap
enter
test
jno
or
xor
out
add
movsl
push
xchg
cmp
movsb
mov
imul
pop
sbb
out
pop
ret
adc
push
adc
or
jp
fisttps
xor
pop
push
sahf
push
sub
out
fstps
inc
nop
mov
mov
jp
ret
outsb
push
nop
ja
mov
jge
inc
sbbb
sbb
aad
in
shlb
lods
arpl
sbb
jb
data16
out
out
mov
mov
outsb
sub
dec
adc
push
aas
or
in
mov
xchg
insl
mov
movsb
ljmp
push
mov
outsl
scas
dec
jb
or
jmp
push
adc
fs
aam
addr16
out
xor
lahf
push
mov
pop
xchg
or
mov
dec
adc
je
sub
cwtl
int3
shll
jnp
or
and
mov
inc
cld
clc
fs
repz
idivb
mov
pop
popa
push
and
arpl
ds
jbe
jg
in
cmp
loope
enter
mov
pop
ds
in
push
andb
lods
or
jmp
dec
or
inc
inc
repnz
loopne
push
sbb
push
mov
cmp
mov
scas
inc
ss
xchg
push
rcrb
inc
rorl
xchg
cs
daa
pop
jle
push
sbb
cmpps
push
call
mov
mov
dec
mov
aaa
sub
jno
lods
jbe
pop
mov
stos
or
cmp
or
mov
push
mov
data16
or
mov
mov
or
push
push
xchg
xchg
movsb
sbb
xchg
out
inc
mov
push
les
add
pop
or
sbb
cli
lea
lea
add
fwait
repz
stc
sbbl
dec
fbld
scas
jns
sbb
adcb
and
pop
inc
das
mov
mov
int3
dec
aaa
xor
and
ret
adc
mov
aam
inc
repz
add
mov
pop
pop
xchg
ds
xor
test
xor
jl
or
push
aas
sbb
enter
out
adc
xchg
int3
repz
popf
push
dec
mov
pop
xchg
xchg
popf
sub
xor
mov
xchg
jp
fdivs
lret
mov
repz
jne
icebp
sarb
fs
fcomip
cli
iret
jo
test
jo
cmc
popf
cs
lock
and
fcoml
cld
aaa
push
imul
mov
push
icebp
int3
incl
pop
xlat
mov
cmp
fwait
pop
adc
jae
xchg
pop
jmp
sbb
add
add
cmpl
leave
push
mov
mov
or
clc
mov
inc
jle,pn
pop
xor
sti
or
pop
stos
sub
adc
fmul
sbb
sahf
or
negl
mov
pop
sub
sbb
mov
aas
leave
mov
aad
and
fbld
mov
inc
push
mov
cmc
xor
push
or
out
jns
ss
mov
rcrb
pop
inc
mov
iret
jp
jp
xbegin
push
push
mov
addr16
mov
jecxz
into
mov
sub
jo
add
and
ds
lds
xor
pop
jns
pop
sub
xlat
adc
jge
mov
stc
sub
lcall
shrb
pop
or
shll
movsb
mov
dec
mov
push
loop
lods
cmpsl
or
mov
pop
sarl
jno
or
pop
fimull
mov
dec
lea
mov
sbb
mov
jle
testl
shl
scas
cmp
jno
es
leave
fisubrs
push
stc
sub
testl
mov
dec
pop
mov
dec
repz
adc
out
pop
clc
movsb
outsb
xchg
cmpsl
ror
push
stc
sub
add
cli
push
faddl
pusha
gs
push
push
mov
sub
sti
mov
imul
andb
fbld
dec
or
ja
stos
push
add
fistpll
jnp
shrb
pop
add
ret
adc
loope
ret
fs
sbb
lea
push
movups
xchg
sbb
in
movsb
dec
cmpsb
mov
mov
jae
xchg
leave
push
jecxz
push
cli
ja
xchg
xor
mov
or
mov
mov
dec
int
cltd
inc
and
xlat
jle
stos
mov
fwait
aad
or
push
ja
add
and
sub
or
inc
fucom
int
adc
pop
mov
arpl
and
jecxz
fisubs
mov
pop
lret
fwait
lahf
mov
mov
stc
cmp
inc
aam
mov
jg
xor
push
cmpsl
or
movsb
fwait
fwait
cmpl
and
lds
fidivrl
cmp
cmp
push
fisttps
cmp
imul
inc
lret
cli
hlt
out
popl
and
test
mov
push
das
and
and
sbb
fsubrs
test
push
adc
aaa
lret
sbb
push
ss
lahf
push
ret
or
jmp
xchg
mov
vmovupd
add
sub
xchg
dec
pop
jge
mov
das
xchg
outsl
xor
movsb
pushf
mov
pop
sub
in
xchg
bound
mov
and
mov
adc
mov
xchg
mov
dec
es
cmp
jle
fildl
out
xchg
mov
and
lcall
dec
cmpsb
or
push
cli
stos
leave
ljmp
lods
pop
aaa
test
dec
inc
mov
pushaw
add
and
lahf
xchg
sbb
sub
sarb
inc
cmp
or
iret
xchg
cli
repnz
or
push
or
ds
jne
aam
dec
enter
mov
or
cmpsb
cmpsb
mov
inc
pusha
jno
and
ss
mov
xchg
jp
push
dec
mov
jns
pop
jl
and
add
inc
mov
pushf
add
mov
dec
xor
mov
out
popf
fidivrs
test
jge
xchg
dec
mov
hlt
insb
in
jge
aas
in
dec
inc
adc
mov
xor
clc
das
loopne
adc
inc
mov
clc
stos
mov
cwtl
movsl
xchg
test
shrl
daa
add
pusha
push
mov
aad
dec
mov
mov
mov
mov
aad
dec
pusha
aaa
fisttpl
or
fidivrs
and
stos
jo
mov
repz
xor
ret
lret
mov
jo
xchg
xor
ficomps
arpl
movl
aam
sbb
adc
insl
sbb
pop
lods
jo
push
add
lds
xchg
mov
sub
inc
dec
call
sub
mov
pusha
cmc
sub
pop
out
jo
loopne
lahf
les
jmp
inc
cmp
push
mov
xor
bound
cmp
icebp
adc
mov
jno
lea
sub
scas
xlat
mov
pop
test
cmp
ss
imul
inc
sub
test
dec
xor
call
call
movsl
mov
in
sub
ljmp
cmp
popf
sbb
cmp
pop
mov
lea
call
pop
icebp
out
pop
lret
xchg
jmp
ja
sub
cmp
cli
scas
mov
or
pop
adc
adc
dec
lret
cmp
aam
fstpt
cmp
in
fucomip
test
dec
loopne
mov
not
jo
subb
mov
mov
jns
push
out
mov
jae
loopne
adc
add
pop
pushf
sbb
loop
pop
lret
lret
ret
movsb
sbb
out
iret
jnp
and
inc
pop
lcall
xlat
les
lock
frstor
jb
jl
jmp
out
add
xchg
sarl
cmpsl
fs
js
jmp
jb
aaa
inc
mov
pop
mov
jb
stc
mov
fstp
jle
and
out
test
pusha
jge
data16
mov
out
cmp
mov
mov
mov
push
cmp
dec
pop
loope
outsb
lahf
jne
adc
ds
pop
lret
mov
add
pop
fstpl
out
repz
repz
or
and
jb
insb
lret
adc
and
int3
mov
loopne
cmc
pop
jae
dec
loop
sbb
rorb
bound
jne
adc
mov
mov
andl
jae
mov
sti
push
pop
mov
sub
jl
fisubrl
mov
cmp
xor
or
mov
push
cli
in
out
daa
int3
rorb
push
adc
cli
push
hlt
mov
in
cmc
cwtl
pushf
xor
outsl
cmp
lcall
fidivs
fdivr
std
pop
icebp
or
cli
push
push
iret
mov
mov
stos
add
int3
repz
jmp
mov
sub
test
fmull
pop
dec
mov
mov
pop
stos
fs
sub
cwtl
test
mov
adc
loopne
or
loopne
rcrb
and
lcall
shrl
fwait
pop
jmp
jno
sub
aaa
jmp
out
pop
mov
fidivrs
or
repnz
push
xchg
lret
cwtl
mov
and
lods
dec
xor
mov
or
adc
repz
addr16
lcall
sti
jg
jg
and
and
dec
loop
adc
arpl
fwait
test
pop
push
or
adc
in
or
cmp
call
pop
add
aas
insl
pop
loop
mov
sbb
add
xor
add
add
fdivrl
adc
cmp
add
movsb
fisttpll
and
das
test
jns
pop
inc
push
jnp
xchg
sbb
stc
inc
sarl
hlt
mov
mov
mov
add
cmp
dec
push
arpl
and
pop
cmpsl
add
cwtl
jnp
fstps
ficoms
jbe
inc
pop
fnstcw
mov
imul
dec
mov
ret
mov
adc
scas
cmc
mov
in
ja
cmc
jg
sbb
jne
cmp
push
fwait
xchg
fstpl
dec
cld
das
or
jge
xor
dec
insl
push
repz
test
xor
iret
mov
sbb
jge
cmpsl
lods
mov
mov
push
mov
in
jns
imul
lcall
in
sbb
jp
data16
cltd
mov
cmp
adc
dec
scas
int3
mov
ret
xor
xchg
mov
icebp
jle
into
orl
rorl
leave
jnp
push
cmp
push
stos
fwait
loopne
and
shlb
setns
cmp
fcmovb
jbe
pop
push
pop
sbb
add
pop
call
xchg
das
mov
dec
lahf
inc
inc
dec
lods
dec
shll
in
cmc
jb
orb
add
cmpsl
jbe
js
cmp
jge
ds
pop
cmp
test
sbb
and
adc
sti
push
mov
mov
xchg
ror
shl
pop
pop
and
fistpl
ret
mov
push
rcll
roll
dec
ljmp
shl
mov
js
mov
add
mov
arpl
daa
and
mov
fisttps
inc
pop
pop
lret
scas
fmull
jle
xlat
and
cs
scas
scas
jmp
or
jns
cmp
xlat
dec
in
mov
pop
jmp
mov
push
sahf
out
inc
addr16
sbb
xchg
mov
imul
scas
je
pushf
ja
arpl
cli
sahf
adc
inc
jp
mov
cmc
sbb
cmp
and
ret
push
xor
xor
aam
mov
adc
data16
dec
dec
lahf
dec
mov
fistpl
das
and
push
insl
clc
jg
cmc
stos
repz
fdiv
push
test
shll
nop
adc
scas
xchg
adc
test
mov
int3
push
inc
jbe
adc
mov
loope
inc
fs
out
les
add
xor
adc
loopne
fwait
inc
dec
cmp
addb
iret
leave
int3
mov
pushf
enter
loope
mov
loop
std
and
jnp
cmp
arpl
enter
xor
inc
pop
daa
xchg
sbb
sub
adc
jb
call
ret
xor
lea
mov
arpl
pop
mov
mov
stos
and
mov
arpl
lcall
dec
and
adc
popf
jmp
test
movsb
test
out
sbb
jg
mov
cmpsl
ret
jge
mov
rolb
js
adc
addr16
int3
arpl
xor
ljmp
jnp
xor
out
jnp
dec
shlb
pushf
xchg
hlt
mov
push
mov
loope
push
xor
stc
inc
lahf
sbb
xchg
fdivr
add
cmp
iret
insb
aam
cmp
add
pop
rol
push
shlb
mov
add
xor
lods
bound
test
sbb
int
movl
xor
cmp
bnd
mov
xchg
pop
icebp
arpl
or
sbb
repz
inc
sbb
xor
sub
adc
loop
or
movsl
mov
push
fisttpl
outsl
mov
jb
and
arpl
out
cmp
stos
mov
jae
add
imul
enter
or
ja
and
xor
cmp
mov
lcall
sub
dec
je
notl
inc
stos
push
mov
and
cmpsb
movsb
imul
sub
and
pop
xchg
out
sub
mov
fwait
shl
mov
jg
sbb
nop
sbb
loop
fwait
cmp
inc
and
inc
neg
outsl
adcb
add
sub
setle
cld
cmp
imul
repnz
mov
ja
adc
stos
mov
xor
and
jp
push
cs
cmp
das
sbb
add
loop
push
arpl
fsts
idivl
idivb
std
stos
repnz
xlat
push
sub
divl
push
and
out
cwtl
pop
imul
scas
and
fistpll
loope
xchg
mov
test
sbb
fldenv
lods
xor
sbb
imulb
add
iret
test
jmp
stos
fcomi
jo
in
cld
xor
daa
loop
pop
jno
mov
add
push
dec
lods
xor
iret
push
and
and
clc
pop
cmpsl
in
add
into
pop
mov
push
mov
in
mov
xor
scas
xchg
mov
push
cmpl
sub
ja
adc
mov
pop
ss
cmp
cmpl
in
mov
dec
sub
fildll
aam
ss
xchg
push
cmpsb
xor
cmpsl
in
sbb
stc
and
xchg
lds
jp
and
adc
xor
out
adc
std
mov
cmp
pop
dec
dec
scas
or
mov
jns
jne
imul
add
cmpsl
daa
mov
icebp
andb
pop
jl
jb
fisttpll
adc
inc
aam
xor
loopne
jnp
mov
inc
mov
into
jmp
mov
jno
sbb
data16
adc
mov
jae
rclb
outsl
add
js
mov
sbb
and
and
mov
dec
sahf
pop
sbb
xchg
imul
fld
fistpl
dec
and
add
call
mov
std
dec
dec
mov
shl
push
jae
mov
push
inc
in
add
and
xchg
mov
pop
les
xchg
rcll
loop
jbe
gs
fcoml
gs
mov
mov
outsb
lods
mov
fdivs
add
das
das
lea
or
enter
lret
inc
pop
lods
shld
sub
add
mov
fisttpl
insb
sbb
fwait
pop
pop
push
enter
fisttpl
mov
adc
mov
in
loopne
push
std
sbb
fimull
shlb
mov
daa
mov
test
test
lret
mov
lea
sub
mov
xchg
jo
fsub
adc
sbbl
pop
stos
mov
call
mov
mov
ljmp
mov
dec
das
fiadds
mov
decl
rcrl
fistl
std
inc
adc
lds
or
and
mov
jo
nop
loop
pop
mov
sub
lock
jae
dec
das
ljmp
or
lahf
dec
shll
lcall
sbbb
or
mov
inc
jmp
inc
and
mov
dec
scas
xchg
ss
fcomp
dec
mov
cmp
popa
xor
das
pusha
rcrl
adc
icebp
lcall
in
mov
insl
out
popf
fsubs
aas
iret
aas
je
out
add
or
cld
xchg
lods
cmp
mov
lods
orb
inc
pop
out
bound
xchg
pop
es
xchg
inc
sub
cli
xchg
pop
lods
out
cmp
or
inc
mov
xchg
loopne
sub
cmp
pop
pop
jg
and
std
ror
clc
dec
mov
fadd
jns
adc
movsb
rcll
adc
stc
adc
pop
out
ret
adc
mov
imul
cmp
fwait
xlat
and
insl
mov
or
dec
jmp
fldl
xchg
sub
cmp
sarl
stc
iret
clc
fs
push
imul
aaa
sub
montmul
cmpsb
inc
es
push
jecxz
add
pop
pop
pop
sahf
sahf
outsb
aaa
sahf
fcompl
out
and
lods
mov
mov
lahf
and
add
or
xor
lea
add
out
mov
inc
adc
pop
lock
cld
mov
mov
dec
je
iret
das
adc
xor
mov
xor
xlat
cmp
pop
clc
or
fistpll
xchg
add
les
cmpsl
pop
jne
inc
addr16
sbbl
add
ficoms
loope
dec
arpl
insl
push
sub
shll
adc
popa
data16
lds
rcll
xchg
push
test
or
pop
call
xor
repnz
bound
cmp
and
pusha
xor
and
xorb
jne
test
push
out
lret
sbb
in
cmp
jl
add
test
xchg
ds
sbb
aas
aas
cmp
iret
addr16
jbe
add
cltd
and
push
stos
enter
je
loopne
lea
pop
popa
imul
mov
rcrl
mov
push
sub
xor
sbb
fs
movl
popa
inc
push
insb
add
push
rclb
cli
mov
nop
adc
mov
insl
test
lods
sub
sub
xor
push
imul
scas
jne
repz
pop
xor
adc
rcr
clc
shll
xor
aam
int
xor
push
cmpsb
mov
dec
out
or
popa
fcoms
or
popa
add
push
jle
xchg
test
ffree
or
scas
mov
call
scas
sub
lret
daa
loope
adc
push
loopne
ficoms
push
outsb
pop
in
add
sbb
xchg
push
sub
stc
testl
aad
dec
stos
in
add
push
xor
push
femms
in
out
sbb
xor
mov
rcrb
stc
int3
jbe
sti
mov
push
add
leave
in
je
daa
jp
les
push
mull
fstl
or
fxam
jecxz
mov
mov
adc
pushl
cli
rolb
clc
mov
test
add
pop
ljmp
cli
fucomi
dec
fildll
and
jbe
jno
or
inc
outsb
sbb
add
cmpsl
mov
add
cmp
mov
add
push
xchg
iret
or
jo
dec
pop
and
sahf
lcall
jmp
mov
rolb
or
sbb
rorb
mov
or
pop
fbstp
in
xchg
aad
leave
cs
jp
mov
lea
fs
addb
sbbb
call
and
and
push
push
pop
ficomps
aad
mov
cltd
or
xchg
ret
cld
mov
mov
cltd
xlat
fisttpll
vpunpcklwd
cs
aaa
fs
cs
ficompl
adc
inc
aaa
mov
fiadds
cwtl
iret
je
ret
popf
jnp
jecxz
les
mov
mov
stc
pop
adc
test
loopne
and
jb
stos
ficomps
mov
aam
or
cwtl
add
out
lcall
pop
cwtl
pop
xor
add
movsb
lahf
into
addb
aam
cmp
clc
mov
ja
mov
js
sbb
push
cmp
addl
fisubl
adc
movsl
jnp
mov
cwtl
mov
pushf
jp
ljmp
pop
mov
mov
and
xorl
cmpsl
jae
xchg
das
int3
push
sbb
push
cmpsb
or
dec
out
les
pop
cmp
aad
mov
cli
lret
data16
or
and
cmpsl
fsub
push
shll
movsb
stc
sti
nop
inc
jnp
je
sarl
repnz
cmpsl
sahf
ljmp
mov
and
lret
dec
and
shll
mov
test
jg
jl
imul
fwait
data16
pop
inc
scas
push
ds
mov
inc
mov
mov
jmp
or
inc
cs
out
lock
bound
lds
xor
insb
jnp
mov
mulb
dec
and
mull
sub
pop
movsl
aaa
test
xchg
cmp
scas
je
sbb
or
xchg
fimuls
xchg
jmp
push
mov
fwait
sbb
test
outsb
je
push
sub
jae
arpl
add
lcall
sbb
pushf
or
mov
cld
add
fldenv
mov
mov
gs
add
adc
pop
xchg
cmp
inc
int3
ret
xchg
pop
dec
test
nop
jbe
xlat
adcb
addr16
ret
int3
mov
in
cmp
aas
xor
rorl
push
push
push
push
and
sub
jmp
fiadds
or
aad
push
subl
add
mov
cwtl
xlat
jnp
inc
or
mov
jo
or
out
movsl
push
aad
xor
push
lods
clc
mov
push
je
push
push
popf
lods
xchg
cmp
cmp
into
cmp
mov
xor
cmp
sbb
cmc
push
popa
imul
pop
xchg
mov
pop
xchg
call
cmpsl
inc
ds
mov
call
outsl
aas
push
cwtl
pop
addr16
pop
push
dec
xchg
mov
bound
ss
gs
jae
fisttps
pushf
pop
push
add
xchg
stos
or
fisubrs
cmp
les
std
std
mov
sti
imul
cmp
gs
test
ss
cmp
jnp
mov
jb
xor
dec
imul
jmp
je
dec
xor
push
push
cmp
push
cs
movsb
fstpt
cltd
out
hlt
nop
bound
lcall
xchg
in
sahf
or
adc
cmp
jge
dec
test
xchg
jae
jno
subl
pop
add
xchg
mov
xor
sbbl
lods
jl
ret
xor
fcompl
lds
mov
xorps
neg
and
xchg
adc
mov
sub
cli
stos
jl
mov
pop
int
or
inc
and
pop
loopne
or
sub
test
mov
xor
mov
inc
sub
cmpsl
mov
int
sahf
mov
in
int3
push
lret
mov
mov
jo
mov
lds
gs
les
movb
sbbl
push
dec
pop
leave
mov
cmp
push
dec
mov
inc
mov
push
shl
cwtl
inc
dec
inc
pop
data16
xchg
imul
mov
or
into
inc
push
jo
std
repz
fidivrl
clc
int
lcall
aas
mov
jp
adc
mov
popa
cli
aas
xchg
xor
leave
jl
ret
out
jmp
lcall
je
rcl
inc
repz
incl
push
dec
nop
ds
lods
inc
adc
loop
movsb
and
loopne
jb
inc
add
in
outsb
pop
imul
xlat
imul
inc
dec
pop
push
xchg
cwtl
sub
out
pop
leave
lcall
xchg
imull
mov
rcll
inc
out
lea
adc
xor
or
cwtl
in
leave
shrb
shlb
icebp
adc
nop
negl
cld
inc
aad
mov
test
push
in
sar
mov
fcmovbe
inc
in
movsl
outsl
and
bnd
aaa
mov
mov
add
ficompl
fcomps
add
insl
mov
scas
dec
inc
in
push
jo
cmp
lahf
prefetchnta
inc
inc
pop
movsb
and
adc
scas
ret
sbb
pop
outsb
movsl
and
stos
addb
dec
movsl
test
jp
shrb
jle
jb
cmpsb
xlat
daa
popf
clc
shl
call
add
cld
mov
push
sub
outsl
js
mov
xchg
push
idivb
jnp
insb
xchg
adc
inc
rcr
jnp
jae
xor
pusha
lea
jp
and
into
aaa
jo
icebp
es
add
ja
xchg
mov
xchg
adc
or
or
fdivrs
fildll
and
das
cmpsl
jns
and
jmp
or
or
jle
pop
mov
mov
pop
inc
test
cmp
mov
adc
sbb
dec
and
inc
inc
sahf
mov
mov
dec
jbe
cmc
inc
popf
jmp
out
mov
pop
lock
inc
pop
clc
mov
jnp
lcall
pop
xchg
mov
jae
mov
iret
dec
mov
lcall
iret
push
sbb
dec
bound
mov
cmp
xchg
mov
insb
leave
ret
mov
mov
push
fcmove
mov
outsl
int
ret
add
xor
out
jmp
movsbl
cs
inc
jp
pop
cmc
scas
inc
rcr
or
push
popl
std
push
test
ljmp
ret
xchg
fsub
fists
dec
pop
rorl
out
popa
mov
arpl
xor
stos
cmp
shll
jg
or
lea
cmp
cmp
pop
or
xor
xor
mov
mov
add
ret
pop
jne
pop
or
imul
stos
jmp
jns
gs
push
pop
sub
xor
inc
fsts
shlb
out
or
sub
mov
fwait
mov
cs
clc
or
jno
sub
adc
sbb
mov
cmp
mov
fucom
or
iret
mov
lods
push
inc
imul
out
nop
lret
inc
stos
push
fstps
cmp
les
push
das
sub
dec
sbb
xorl
ret
jmp
xchg
in
movl
inc
sbb
scas
daa
iret
mov
pop
xchg
push
jmp
pop
or
push
out
int3
sti
sbb
and
lods
inc
jae
inc
inc
aas
in
insb
fstpl
icebp
adc
out
mov
in
fnsave
outsb
sbb
imul
lods
and
cmp
pop
sbb
dec
mov
insb
sub
lea
imull
fs
push
jmp
and
outsb
ret
dec
jmp
je
jb
and
jb
stos
pop
jecxz
xor
negl
pop
jne
inc
or
cmp
out
lods
cmp
pop
aam
fs
outsb
inc
mov
lods
mov
cwtl
imul
inc
add
dec
insb
xchg
and
daa
es
lds
mov
or
hlt
lret
sub
pop
sahf
imul
jo
out
mov
or
inc
stos
cmpsl
loop
push
dec
push
mov
gs
and
fldl
leave
adc
push
lods
fnstcw
and
ret
cmp
stos
in
xchg
jmp
lahf
outsb
mov
into
test
xchg
sbb
adc
jne
cmpsl
test
aam
cmpsb
sub
cmp
push
aas
sahf
lret
lods
inc
jbe
and
in
lods
repz
inc
addr16
xchg
in
in
adc
lds
push
jmp
mov
sub
cmp
leave
and
xor
mov
fisttpll
push
mov
push
mov
pop
out
sarl
lods
popf
inc
pop
movsl
pop
mov
cld
and
dec
push
pop
push
mov
jge
sbb
bound
data16
outsb
insl
in
into
push
rol
lahf
fadds
enter
push
push
add
out
sbb
movsb
in
out
add
xor
sub
mov
ret
mov
ss
mov
adc
loop
loopne
dec
pop
jb
dec
cmp
sbb
iret
jecxz
push
ja
negl
test
inc
add
in
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
dec
mov
jl
pop
pop
jl
sti
shll
das
fs
sub
mov
lods
rcll
add
ret
push
pop
xchg
scas
loop
lock
jae
clc
mov
movsb
xor
idivl
xchg
repnz
push
xor
pop
sub
pop
or
loopne
call
xchg
dec
pop
shrb
sbb
xchg
adc
xor
stos
lret
enter
lock
out
jmp
xchg
pop
mov
das
jge
stos
stc
cmp
les
test
push
add
int3
push
outsb
cmp
pop
out
outsl
loope
sbb
rolb
mov
ljmp
pop
hlt
mov
jbe
jmp
ja
xorl
bswap
scas
test
sbb
leave
int
jae
pushf
movsb
sub
xor
std
testb
imul
cmpsl
dec
add
repnz
sti
dec
out
roll
pop
jle
int
sub
lods
mov
out
sahf
sbb
jle
sub
outsb
test
das
xor
pop
and
repz
sub
jle
popa
or
shll
mov
out
jl
adc
push
pop
in
xor
fwait
adc
sub
imul
push
in
das
aam
cmc
push
jl
repnz
test
out
fwait
popa
rorl
xchg
jecxz
jnp
or
push
add
pop
pop
insb
notl
fisubl
mov
shrl
clc
out
ficompl
xor
mov
jno
jns
loopne
enter
dec
jae
dec
dec
jb
insl
jle
sahf
in
cwtl
mov
out
cmp
jno
mov
xchg
add
jb
pop
int
fcoml
sub
adc
out
add
fdivrl
add
jne
push
dec
jl
out
mov
jb
add
sahf
add
add
test
or
and
mov
daa
shlb
mov
fdivl
sub
movb
cli
cmc
mov
insl
push
test
mov
cwtl
add
icebp
xchg
push
cmp
xchg
pop
outsb
out
mov
insl
shll
push
in
push
leave
mov
movsb
in
cmpsl
xor
stc
jnp
scas
mov
rorl
and
bnd
mov
mov
ret
insb
mov
xor
imull
pop
mov
shlb
inc
sbb
fstpl
push
lahf
addr16
sbb
nop
mov
mov
call
or
mov
dec
sub
and
mov
push
xor
dec
out
sbb
outsb
sub
xor
xchg
cld
cs
add
xor
adc
jge
imul
jne
add
faddl
inc
mov
and
sbb
cli
mov
sbb
and
mov
push
and
jp
cli
test
jmp
mov
sub
pop
xchg
pushl
xchg
jne
jno
gs
out
loopne
scas
sub
psllq
xor
xor
stc
das
push
mov
dec
fistps
jns
mov
call
jbe
mov
push
jno
xchg
in
mov
popa
xorl
popf
mov
xor
aaa
xor
jne
int3
dec
sub
push
loop
das
xchg
out
insl
pop
lds
xor
push
push
loope
pop
cmc
lcall
ret
movsl
cmp
lea
test
sbb
insl
aam
cmpsb
int3
mov
aaa
xor
push
stos
movsb
mov
loope
cmpb
push
outsb
jb
cmp
ja
loopne
push
jnp
cmp
lcall
scas
ret
mov
xor
cmp
fldenv
filds
imul
leave
sti
frstor
sub
sahf
dec
adc
dec
int
imul
imulb
xchg
clc
mov
pop
lret
mov
fisubrl
mov
mov
psadbw
adc
mov
mov
inc
sbb
ja
outsl
xor
icebp
push
lret
mov
adc
jne
jg
sarl
pop
in
sbb
call
mov
pushf
testb
in
mov
mov
gs
sub
aad
mov
insl
mov
xchg
enter
clc
push
push
std
jmp
or
int3
int3
add
shll
in
ret
testl
nop
popa
insb
dec
pop
jno
cmp
adc
fsubr
cli
addb
sbb
mov
or
dec
pop
scas
hlt
mov
sub
push
xor
xchg
and
push
and
out
pop
out
rcrb
gs
pop
cmp
or
dec
sbb
loopne
shr
sub
xlat
push
mov
in
in
xchg
dec
js
and
pop
cmpsl
inc
push
dec
fisttpll
cmp
es
and
add
adc
js
addr16
repnz
pop
gs
sbbb
mov
sbb
mov
popf
scas
sahf
cmpsb
dec
enter
mov
push
dec
jns
mov
popf
mov
decb
mov
inc
cmp
hlt
cmp
ss
jae
popf
xchg
out
mov
inc
mov
jo
call
ret
cld
out
jle
aaa
repnz
scas
out
lcall
lahf
stc
xor
stos
lcall
adc
into
mov
pop
icebp
mov
xlat
xchg
lret
std
jo
mov
imul
add
cmpsl
lods
or
sub
xchg
scas
in
cli
cmpl
loop
aam
sbb
push
fdiv
out
ret
mov
fildl
jbe
and
add
fsubrs
push
xchg
xchg
loopne
mov
jmp
adc
mov
ret
sub
pop
ds
lahf
dec
fcompl
out
popl
mov
lcall
sub
xorb
pushf
lret
dec
xchg
pop
cmp
push
ds
imul
dec
cmc
dec
les
lahf
push
pop
dec
sbb
push
and
out
jmp
clc
inc
outsl
scas
pop
shlb
outsb
jno
lahf
das
jg
and
rclb
outsb
mov
add
jp
fnstcw
fsts
mov
mov
subb
sbb
int3
ret
or
mov
aaa
sahf
lsl
cld
test
xchg
jbe
das
lods
lret
mov
stc
pop
dec
in
shrd
sbbb
fmull
xchg
aaa
dec
pop
adcl
dec
push
dec
mov
add
jecxz
je
xchg
xchg
jmp
cmpsl
pop
mov
push
jo
push
sahf
and
xor
push
pop
push
add
cwtl
jg
and
jmp
inc
dec
sbb
into
jle
jb
add
xchg
pop
lcall
and
jbe
push
dec
add
mov
cld
pushf
sub
cmpsb
mov
test
mov
cmpsb
out
jmp
loopne
out
pop
add
and
arpl
imul
and
inc
or
inc
vmwrite
inc
out
adc
fcoms
test
lret
sub
test
in
scas
or
mov
popa
frstor
mov
shrb
xchg
mov
dec
inc
daa
in
adc
leave
push
mov
push
fnstenv
sub
or
xchg
cmpl
push
movsb
rcr
movswl
mov
adc
mov
fdivs
inc
nop
fcmovnbe
popf
fwait
adc
cmpsl
push
in
xchg
lcall
jmp
stos
dec
fisubrs
ror
inc
icebp
inc
cmpl
aad
stos
lret
icebp
add
sub
push
imull
mov
inc
push
xor
mov
cmpsl
or
and
and
add
push
in
xor
popf
pop
rolb
cmpsl
mov
dec
mov
mov
hlt
popf
sbb
pushf
jo
bound
mov
mov
outsb
movsb
xor
or
aam
mov
jae
fmuls
aad
nop
and
outsb
cmp
pop
push
xchg
inc
or
leave
mov
mull
out
inc
or
mov
sarb
mov
in
jecxz
orb
fninit
jle
adc
sbbl
sub
mov
jl
mov
ljmp
jne
test
pop
ja
iret
xor
pop
push
adc
dec
cltd
out
fisubrl
add
movsb
and
iret
ja
fwait
test
sahf
lret
pop
out
xor
xchg
hlt
pop
add
scas
push
out
lods
inc
fdivrl
mov
mov
negl
mov
fcom
fnstsw
sub
jp
mov
cltd
loope
xor
rclb
push
xchg
mov
nop
pop
shlb
push
sub
call
inc
fnstcw
fldt
jle
jl
and
lahf
mov
lds
pop
hlt
mov
sbb
int3
stos
sbb
xlat
shlb
insb
loop
dec
jle
xchg
lods
sti
sbb
outsb
add
jnp,pt
lahf
inc
in
clc
std
jae
xchg
xchg
int
jmp
pushf
mov
add
insl
jns
loopne
pop
lds
in
sub
lds
call
inc
jge
fbstp
lods
mov
mov
and
ljmp
scas
lahf
inc
sbb
and
mov
js
inc
ret
dec
sub
int
mov
out
push
je
ljmp
in
lea
jle
mov
cmp
fwait
out
xchg
mov
mov
dec
in
ds
cmc
fnsave
daa
inc
cwtl
jnp
adc
jnp
mov
jl
les
sub
mov
pop
cs
xchg
jo
rcrl
ds
insb
test
push
lds
cli
ss
ljmp
xchg
cs
dec
and
inc
sti
pop
es
inc
popf
adc
in
jle
cmpl
push
xchg
mov
lods
into
aaa
enter
insb
cmp
outsl
cmp
mov
out
jo
fistpl
mov
rorb
or
dec
sub
xchg
xchg
pop
test
sub
repnz
cwtl
adcl
lods
xchg
or
insb
pop
sbb
ljmp
cmpl
in
loop
dec
in
jo
mov
mov
dec
test
sbb
fstpl
mov
std
sub
in
jmp
dec
jb
add
rcrl
xor
xorl
xchg
mov
adc
mov
lea
and
hlt
inc
in
das
xchg
movsb
gs
cmp
sahf
xor
lcall
inc
add
and
add
les
pop
push
sub
stos
push
xor
or
inc
lret
xor
push
inc
fistpl
jne
pop
cmpsb
push
or
in
stos
lds
mov
push
aaa
xchg
test
fldcw
jg
fistpl
inc
sbb
inc
jb
inc
dec
xor
mov
pop
jmp
push
dec
pop
pop
cmpsl
fildl
xchg
fs
push
in
cmpsl
jo
pop
movb
fbstp
and
mov
inc
bound
ret
test
insb
push
stc
xchg
lock
cmp
sub
ja
pop
in
sub
pop
mov
cmp
in
adc
mov
jo
dec
xchg
bndstx
rorb
sbb
or
and
pop
jns
out
sub
lods
dec
jg
sbb
sbb
xchg
movsb
insb
int
enter
inc
and
loopne
leave
push
adc
rcrl
in
push
sahf
je
inc
ror
movsl
call
xchg
popa
inc
jmp
and
sub
imull
mov
mov
iret
or
inc
cmc
adc
push
mov
ret
and
push
and
xchg
sbb
mov
in
jg
dec
mov
cs
cli
pop
out
pop
fcmovnu
sarl
push
add
dec
in
push
jg
add
push
lret
repz
adc
pop
cltd
mov
xchg
xor
sub
lahf
mov
call
dec
jecxz
pop
divl
pusha
adcl
std
ljmp
mov
call
push
das
dec
xorb
inc
scas
and
cmc
sbb
or
ljmp
inc
scas
pop
pop
aad
jl
loope
sub
idiv
pop
cmpsl
std
add
inc
jnp
xor
pushf
push
aaa
jecxz
aam
cltd
aad
mov
jp
ret
jno
hlt
inc
rcr
mov
adcl
jmp
mov
and
nop
call
hlt
iret
data16
add
hlt
cmp
mov
sbb
movl
or
bound
cmp
subl
mov
xchg
sarb
repz
push
xor
ss
ds
xlat
lods
push
mov
lcall
pop
or
in
sub
in
jge
lods
add
push
insb
leave
aas
xor
out
jne
sbb
negb
dec
push
test
nop
sbb
mov
adcl
dec
sub
ds
outsl
jnp
push
sbb
push
enter
aas
fwait
cld
hlt
add
rcl
or
sti
cltd
push
and
mov
sbb
push
int
push
mov
mov
mov
sub
into
int3
cmpsl
ja
xlat
rcr
ss
aas
pop
lea
adc
push
and
notl
cmp
mov
sub
popf
scas
mov
es
xchg
adc
in
sub
ficomps
pusha
psubsw
mov
fstpt
and
add
xchg
mov
dec
xchg
les
fcoml
mov
aam
mov
cmc
enter
in
call
mov
shlb
push
push
push
pop
push
mov
into
dec
inc
mov
xchg
insl
and
add
in
push
ret
fucom
xor
pop
push
pop
mov
insb
sahf
push
mov
jae
mov
fwait
cmp
xor
add
xchg
mov
int
inc
fisttpl
inc
xchg
jecxz
arpl
xchg
movsl
xchg
dec
cmp
sar
int
dec
mov
sbb
mov
xor
dec
and
sbb
out
cmp
rorb
out
jp
jmp
clc
lahf
stos
js
mov
lret
cmp
mov
cmp
fmull
and
push
call
out
je
adc
pop
push
hlt
nop
pop
fstpl
outsl
pop
stos
sbb
gs
ffree
pop
cs
xor
jl
ret
es
mov
and
nop
sub
ljmp
lock
mov
enter
hlt
std
jle
adc
cmp
xchg
jle
repnz
test
and
mov
icebp
push
lock
push
scas
pop
scas
out
iret
or
mov
loope
jmp
test
test
cmp
mov
sarb
sub
jae
test
xchg
nop
push
jae
roll
aad
lret
jae
jle
xchg
and
adc
sub
lahf
dec
fsts
jns
sbb
mov
popf
aaa
test
mov
loope
aas
fisttps
jo
pop
push
inc
lcall
sbb
xchg
test
insl
push
dec
int3
jno
aas
sub
popa
int
jle
and
out
cmpsl
push
cmc
inc
inc
test
mov
dec
mov
inc
loope
insl
data16
inc
dec
popf
fidivl
cmp
es
mov
cmp
sbb
sahf
rcr
dec
pop
adc
in
inc
out
sbb
pop
in
imul
adc
cli
repnz
ja
arpl
sbb
add
test
sub
into
repnz
mov
xchg
jno
imul
xbegin
rcrl
sbb
rcrb
inc
xor
rolb
ds
fidivl
fildl
rol
cmp
fucomi
mov
sbb
ficoms
test
dec
mov
dec
pushf
add
scas
ljmp
jmp
push
mov
push
sbb
fadds
fcomps
outsb
pusha
out
aad
add
and
cmp
adc
dec
push
mov
xchg
jge
lcall
dec
in
scas
jge
fcos
icebp
dec
cmp
and
cmp
xor
icebp
pop
dec
add
into
dec
jp
add
mov
shl
xchg
pop
lret
dec
inc
ds
adc
adc
test
mov
pop
rorl
cmp
repz
rorb
add
test
sub
ret
cmp
je
adc
mov
jnp
out
insl
in
test
inc
sti
mov
add
ret
fisubrs
test
push
jle
js
xor
xor
in
outsl
test
dec
aam
and
in
xchg
add
cmp
outsl
jae
and
xlat
lds
addr16
addr16
mov
mov
sub
xchg
das
inc
test
and
out
sahf
sub
add
rcll
dec
lock
xchg
mov
outsb
cmp
addb
cmpb
jmp
or
lea
sub
imul
les
mov
adc
push
mov
add
imul
mov
fisubrs
pusha
scas
rolb
push
cmc
xchg
aaa
add
adc
int
mov
scas
lods
or
push
and
xchg
mov
mov
jo
push
orb
jecxz
adcb
sbb
fimuls
pop
mov
ss
pop
daa
or
cwtl
fwait
lret
je
add
loopne
popa
jno
popa
mov
sbb
cli
sub
or
cmp
xor
push
loop
xchg
jo
insb
mov
nop
int3
gs
repnz
sbb
ds
out
cmp
mov
lcall
jge
mov
loopw
xchg
in
popf
and
xchg
jnp
clc
or
cmp
jmp
lods
sbbl
xchg
movsb
aas
xor
inc
adc
js
int
mov
in
stc
jp
in
lret
pop
xchg
adc
xorl
int3
sbb
inc
push
cmp
add
and
add
loop
dec
pop
push
pop
sbb
mov
ret
push
mov
fwait
popa
mov
dec
xchg
lretw
xchg
shrl
mov
ja
lods
outsb
jb
jne
mov
adcb
push
call
mov
push
mov
jp
hlt
out
call
fs
and
fwait
jo
jns
mov
out
mov
aas
enterw
and
xchg
add
lret
aas
fmuls
xor
ret
add
xor
jge
gs
xchg
cmp
adc
iret
rcll
movsl
out
lds
out
inc
fdivr
pusha
arpl
xchg
push
push
jmp
fs
lcall
scas
xchg
push
jmp
sti
mov
mov
push
push
jl
fwait
and
inc
daa
push
aas
cmpsl
push
lds
add
mov
cmpsl
xchg
rorb
hlt
scas
lds
jbe
mov
pop
pop
push
cmp
mov
dec
lods
push
cmp
inc
lret
and
adc
jno
push
dec
mov
bswap
pop
dec
xchg
mov
and
xchg
outsl
sub
mov
stos
std
fnstcw
icebp
jecxz,pn
lahf
mov
ja
movsl
cmp
leave
dec
pop
jmp
and
jmp
sbb
stos
inc
mov
aas
mov
mov
and
push
cs
out
jge
imul
inc
testl
sub
mov
sbb
iret
ja
mov
inc
mov
ja
popf
int
jbe
mov
lods
add
or
or
sbb
pop
leave
pop
out
xchg
adc
xor
adc
iret
scas
cmp
in
clc
negl
lret
cmp
in
push
mov
clc
jnp
mov
and
and
sbb
and
seta
fwait
pusha
movsl
cltd
jnp
rcl
mov
in
pop
jge
inc
rol
mov
das
lock
iret
cmp
incb
shll
pop
mov
push
inc
lea
xor
push
mov
or
inc
outsl
adc
mov
daa
mov
mov
roll
inc
inc
pop
repz
sbb
lock
xchg
data16
push
push
mov
ja
mov
and
push
inc
mov
mov
push
xor
adc
scas
rorb
and
or
in
dec
test
insb
add
push
stos
gs
rol
sbb
adc
int3
fcomp
insb
outsl
aas
sub
xchg
adc
adc
iret
mov
adc
push
loope
pop
iret
jecxz
cmp
decl
int
cli
fwait
push
adc
ret
popf
mov
xchg
mov
inc
jno
mov
ds
aaa
fildl
shlb
jbe
mov
pusha
mov
or
jbe
das
xchg
imul
or
stos
cmp
js
or
orb
pushf
fs
subb
pop
sub
outsb
int
push
xchg
popa
pop
lods
sbb
fisttpll
fbld
add
mov
or
int3
sub
pop
in
pop
aaa
jo
jg
xchg
adc
pop
into
pop
cmp
mov
je
jns
xor
xor
outsb
roll
repz
sarl
aad
lret
push
cmp
sub
pop
xor
and
or
scas
jno
mov
xor
jbe
jb
push
add
popa
adc
lds
fisttps
popa
pop
mov
dec
cmp
addr16
stc
or
or
fidivrs
add
out
imul
xor
repz
xor
jmp
cmp
xor
insl
out
inc
or
sarl
pop
out
mov
add
test
add
scas
daa
dec
mov
push
pop
aad
pop
pushl
fdivr
enter
cmc
cmp
icebp
ret
test
mov
dec
gs
out
push
imul
xor
je
xchg
rcl
dec
cmp
inc
bound
push
mov
xchg
rcrl
and
mov
mov
adc
pop
sarl
mov
int3
insl
leave
ret
idivl
dec
xor
sbb
mov
sahf
pop
scas
addb
fisubs
test
mov
leave
decb
into
imul
sub
stc
andb
pop
ja
push
pop
jns
sub
aaa
jp
mov
insl
push
loope
leave
daa
inc
push
loop
jge
es
xor
lds
std
dec
mov
clc
mov
dec
push
pop
jle
mov
lock
sub
rcll
out
std
inc
ficomps
dec
stc
xchg
cltd
and
or
push
pop
fwait
cmp
movsl
cmp
aas
addr16
xchg
std
xchg
dec
sub
and
inc
outsb
imul
lret
xchg
sahf
iret
push
mov
lods
rclb
mov
fwait
inc
aas
cmpsb
or
dec
jno
push
sbb
imul
cmpsb
rclb
fildll
xchg
pushf
inc
iret
je
test
inc
divl
mov
aas
jns
jno
dec
xchg
loopne
test
mov
xchg
clc
lahf
pusha
add
mov
dec
sahf
add
ret
pop
dec
into
add
pop
pop
dec
xor
test
cmp
lret
cmp
movl
cmc
popa
cmp
stos
or
pop
cli
adc
push
xchg
or
xorb
test
iret
inc
sbb
clc
je
lret
inc
movsl
popf
sbb
lods
xchg
sahf
pop
loop
jmp
ja
dec
in
sbb
push
xchg
inc
mov
xorps
dec
gs
rcrl
mov
mov
jp
xchg
ljmp
loopne
shlb
xlat
stos
mov
xchg
sub
ror
test
xchg
rclb
sarb
adc
shlb
mov
adc
dec
adc
incl
sub
xor
inc
inc
sbb
in
lds
test
insl
fstpl
add
fwait
sbb
jo
pop
mov
test
cmpsb
fmuls
out
pop
fdivl
dec
or
lea
jbe
push
sbb
inc
dec
dec
xor
push
push
mov
inc
mov
mov
xchg
popf
nop
mov
and
orb
fstpl
je
in
adc
mov
imul
mov
or
xlat
test
aad
xor
dec
cmp
sub
in
add
pop
out
test
addr16
mov
xlat
daa
fwait
pop
add
aaa
pop
popa
sti
xchg
out
ljmp
xchg
lods
sub
xchg
fs
int
mov
stc
repnz
pop
lret
mov
lret
pop
fimull
sbb
mov
cwtl
inc
mov
jl
cmp
fs
data16
adc
or
test
inc
fists
inc
frstor
mov
dec
sarb
test
test
jns
pusha
rcll
mov
bound
inc
popf
mov
jp
xchg
sbb
rol
movsb
mov
xchg
push
insl
jmp
push
in
push
pop
fdivl
push
test
inc
add
mov
sti
xor
mov
test
cmc
jne
cli
stos
pop
test
jge
cmpsl
ja
pop
inc
fstl
inc
subl
jo
cld
repz
adc
push
cmp
insb
aas
mov
cmpsl
call
and
enter
out
out
xchg
xor
mov
rcll
add
pop
leave
stos
fmulp
push
stos
adc
dec
mov
xchg
shlb
cmp
decl
jo
rclb
add
add
pop
lcall
scas
cmp
in
stc
push
lods
or
add
bound
or
cmp
cmp
pusha
sub
push
cs
add
push
lock
inc
movsl
mov
into
ret
xor
popf
pusha
pop
mov
in
clc
addl
mov
lods
xchg
mov
dec
adc
outsl
cmp
je
stos
fadd
pop
jecxz
pop
jae
fbld
stc
xlat
push
lcall
jb,pt
inc
lcall
imul
hlt
xchg
mov
jge
cmp
or
lret
adc
push
jae
call
push
sbb
push
jnp
fsubr
int3
fcmovnbe
addr16
fstps
cmp
xchg
sbb
insl
iret
icebp
sbb
aam
mov
ljmp
adc
add
aad
dec
cmp
gs
insl
xor
adc
and
mov
adc
xchg
cmp
stos
adc
inc
xchg
loopne
inc
adc
dec
xor
movsl
pop
loope
cli
gs
jg
jmp
adc
cmp
xor
fwait
int
aad
or
cmp
inc
popa
sub
movsb
inc
aad
jge
loope
xchg
daa
mov
adc
roll
lret
aaa
inc
or
mov
shl
jl
jnp
and
xlat
add
addl
pop
call
pop
out
xchg
dec
insb
mov
fnsave
jmp
sbb
ret
cmp
hlt
shrb
push
pusha
mov
hlt
lret
mov
fcoml
xor
inc
or
insl
and
es
mov
lods
icebp
push
or
in
xor
bound
and
stc
out
filds
inc
call
fdivrl
or
xchg
int3
test
jae
dec
adc
push
sbb
shll
rcrb
adc
dec
xor
ret
lock
aam
lods
mov
jl
stc
push
lea
pop
add
leave
inc
xchg
xchg
push
sbb
mov
dec
jmp
cmpsb
mov
out
dec
sub
loope
push
adc
loop
bound
popa
out
sarl
add
into
in
ret
loop
push
repnz
arpl
jle
mov
jg
pop
xlat
push
and
les
int3
test
loope
xchg
insb
cmp
popf
and
push
dec
call
sbb
imul
dec
in
inc
sbb
sub
fs
outsb
rcrl
adc
lret
pop
in
les
sahf
out
push
push
sub
orb
push
push
mov
les
in
dec
push
push
xchg
lea
dec
cmp
jmp
int
dec
imul
arpl
and
mov
inc
mov
push
arpl
inc
dec
aaa
push
dec
jmp
inc
pop
repz
in
jmp
mov
jmp
dec
pop
fnstenv
popa
push
test
xchg
cmp
jge
sbb
outsl
mov
arpl
push
cmp
mov
pop
and
push
das
cmp
jle
mov
test
add
jns
mov
pop
push
pop
sbb
push
insl
mov
sub
and
and
push
mov
dec
inc
hlt
pop
sti
lcall
lods
sub
mov
cmp
mov
push
xchg
in
fstpl
stc
sahf
mov
mov
negb
push
sbb
jbe
ljmp
adc
mov
sbb
std
in
cmpsl
daa
sbb
imull
loopne
jae
ljmp
fsubrs
lahf
push
pop
xchg
mov
bound
push
dec
adc
push
cmc
gs
sti
test
test
fisubl
mov
enter
xor
outsb
inc
jb
into
movsb
divl
cmp
pop
mov
out
sbb
add
pop
aam
mov
cmp
pop
movsl
stos
push
inc
add
add
mov
out
es
dec
jg,pn
sbb
mov
js
insb
lods
stc
jne
sbb
gs
sbb
xchg
inc
shrl
test
pop
jne
dec
fcmovb
sub
fdivl
inc
je
stos
out
insl
mov
je
xor
icebp
clc
xchg
and
sbb
cmp
jle
lret
adc
imul
cli
enter
sbb
xchg
in
add
sub
icebp
pushf
lret
xor
mov
xchg
add
add
and
stc
lret
repz
cmpsl
imul
lahf
xorb
dec
cmp
lret
movsb
test
clc
mov
mov
cwtl
xor
stos
ret
xor
adc
dec
adc
cmp
mov
inc
jmp
lods
jge
insl
cmp
xchg
out
mov
add
loope
lods
enter
gs
lret
in
scas
outsl
je
loope
sub
xchg
in
jae
dec
inc
mov
mov
iret
rcrb
inc
out
xchg
mov
ljmp
into
imul
dec
pop
xchg
nop
ja
fsubs
add
repnz
test
xchg
cmp
stos
gs
inc
dec
scas
pusha
dec
mov
iret
hlt
mov
add
jecxz
ds
mov
ret
ss
loopne
aaa
lods
cmp
inc
subb
ret
add
mov
pusha
mov
mov
movsl
cmp
dec
mov
pop
imul
shrl
ret
mov
mov
lods
sbb
hlt
mov
jp
loope
xorl
or
fisttpll
xor
and
xlat
xor
ret
mov
roll
mov
popa
push
mov
repnz
in
mov
adc
push
ja
add
xchg
push
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
outsl
inc
pop
es
xchg
mov
imulb
pop
mov
es
orl
cltd
inc
push
cltd
pop
sub
or
fimull
repz
fstpt
push
lods
push
dec
push
pop
faddp
jl
mov
push
lcall
jl
inc
test
in
xor
mov
stc
lret
and
or
call
test
xchg
jne
xor
rclb
cmp
jge
inc
pop
test
movsl
es
shlb
push
in
rep
mov
push
xor
into
mov
push
pop
mov
test
or
pop
inc
adc
pop
and
jmp
out
outsb
mov
sub
adc
xor
fwait
loopne
adcb
lock
mov
mov
scas
rcrb
stc
jle
inc
aaa
jecxz
addr16
fmuls
and
mov
sbb
and
push
bound
sbb
sub
int3
xchg
pop
lahf
insb
xorb
mov
jl
imul
ret
das
jns
cld
out
mov
jle
push
mov
idivb
xchg
or
dec
andb
and
call
sbb
mov
mov
fimuls
mov
pop
add
mov
xlat
movsl
adc
dec
mov
lcall
cmpsb
xchg
push
ljmp
pop
loop
mov
cmp
loop
test
in
mov
add
and
and
cmp
outsb
int3
aam
test
inc
outsb
ljmp
mov
mov
ja
jecxz
or
imulb
pop
add
add
aaa
fwait
sti
lds
cmp
lock
ljmp
aad
imull
sub
ror
repnz
mov
jp
orl
shrb
nop
xchg
dec
add
loopne
inc
mov
add
mov
es
popf
jg
and
leave
int
popf
aad
jmp
pop
repz
pop
icebp
mov
sbb
lock
jge
dec
push
adc
jo
int
stc
dec
jno
imul
add
cs
je
rolb
xchg
lret
xchg
mov
add
pop
aad
sub
push
jne
nop
xor
pop
lods
imul
outsb
mov
xchg
mov
push
dec
cltd
mov
lock
in
cli
jbe
and
in
push
out
nop
adc
test
jmp
incl
stc
pushf
outsl
mov
lcall
mov
out
cmp
aas
xor
inc
lret
mov
scas
mov
test
cmp
push
jae
sar
nop
iret
push
fisubrs
std
icebp
fcomps
fdivp
std
aas
movsb
movsb
loopne
roll
cmp
pop
out
outsl
std
mov
add
jge
mov
adc
int3
or
jnp
or
les
cmp
cltd
inc
and
xor
sbb
cmpsb
fimull
xchg
xor
test
test
bound
dec
inc
cltd
push
stos
ljmp
js
in
push
test
rcll
stos
add
adc
dec
and
sbb
lods
xchg
ss
push
out
ficoml
jo
adc
and
outsb
scas
cwtl
repnz
xor
mov
aas
pop
jns
ds
push
push
pop
xor
test
lret
test
mov
add
mov
rclb
mov
mul
inc
stos
outsb
xor
es
gs
sub
call
fdiv
movsb
dec
add
sub
andb
adc
push
stos
jo
or
jg
cmp
mov
aaa
in
xchg
addr16
push
push
xchg
enter
sub
iret
sub
int3
stos
popa
mov
mov
cmp
aas
mov
popl
add
bound
mov
cmp
mov
das
sbb
loope
push
push
xorb
outsb
imul
jb
repz
imul
pop
push
mov
xchg
adc
cwtl
inc
push
pop
inc
sub
loopne
rcll
lds
cmp
add
inc
outsb
call
sti
lcall
fstpt
jmp
outsl
mov
mov
clc
ds
mov
cmp
int
data16
mov
fxch
mov
icebp
leave
mov
cmp
push
fcompl
mov
or
ja
shrb
shll
data16
mov
nop
xchg
fwait
dec
int3
aas
adc
lret
pop
mov
daa
sub
loop
adc
mov
or
divl
test
or
out
pop
sub
push
movsl
jge
out
popf
push
mov
adc
sbb
push
jns
jno
and
std
mov
mov
call
jmp
sti
sbb
cli
adc
and
jo
enter
jmp
inc
arpl
push
dec
and
adc
repnz
xor
icebp
nop
add
stos
mov
jg
pop
js
lods
xor
movsl
sub
loope
stos
xor
pop
dec
sub
out
fnsave
pusha
push
mov
mull
fucomip
loop
mov
jb
mov
dec
imul
xchg
fidivs
lods
dec
pop
scas
sarb
push
les
xor
cmp
mov
aaa
in
aas
mov
xor
xchg
je
lret
sbb
dec
add
mov
push
outsl
mov
popf
loop
jnp
jecxz
mov
addb
push
pop
shlb
jbe
pop
push
ljmp
mov
fwait
adc
cli
stos
icebp
sbb
sub
adc
and
inc
xlat
xchg
or
and
push
fwait
mov
in
push
adc
lods
jbe
mov
not
xchg
and
dec
test
ljmp
sub
pop
repz
shlb
adc
inc
jge
shlb
cmp
mov
mov
push
inc
dec
cltd
push
pop
inc
add
cmp
add
jbe
lret
mov
cmp
popf
leave
js
iret
hlt
push
sub
jp
push
mov
push
enter
adc
les
in
lods
jle
inc
loopne
xor
add
repnz
mov
rol
cwtl
pop
movsb
lea
movsb
cwtl
mov
cmp
xlat
xchg
pop
out
in
xorb
sbb
std
mov
push
mov
or
or
rcrl
xchg
stos
sbb
push
mov
das
in
loope
hlt
cmp
bound
movsl
sub
unpckhps
jns
insl
or
shll
nop
decb
mov
scas
and
nop
and
add
test
fwait
and
xor
pushf
push
cmpsl
mov
push
imul
mov
and
or
mov
out
dec
dec
nop
ret
cmp
mov
mov
sbb
cmpsl
mov
ljmp
sbb
push
lahf
movsl
cld
sbb
clc
fs
mov
sub
inc
mov
jne
idivb
out
mov
out
lret
mov
sbb
xor
ss
lret
inc
push
push
shrl
pop
and
rcll
push
loope
xchg
daa
sub
in
scas
xchg
sub
and
push
rorl
out
or
adc
stos
jp
cmpsl
arpl
les
cmp
iret
adc
push
mov
inc
stos
dec
adc
je
mov
mov
aam
inc
xchg
jle
out
lret
inc
cli
xchg
dec
mov
jo
in
mov
pop
push
pop
lea
inc
cltd
jbe
stos
lock
xchg
int
jno,pn
xchg
mov
out
int3
fstpl
inc
sbb
rcll
fucomip
adc
jne
or
decb
in
cld
enter
sub
into
push
xchg
inc
adc
push
fs
sub
std
test
ljmp
push
lds
jge
bound
xchg
out
pop
std
mov
sahf
xchg
inc
addr16
inc
sub
cmpsb
test
or
dec
dec
cli
pop
sub
cltd
pinsrw
dec
dec
pop
sbb
pusha
aas
aaa
cmp
dec
adcb
pop
repnz
lock
jae
adc
mov
cs
jo
pop
inc
pop
sahf
fcomps
push
aad
jmp
add
mov
aam
mov
pop
push
or
std
jecxz
cwtl
jge
push
clc
jns
aas
pop
cwtl
je
in
ljmp
dec
xchg
adc
out
iret
add
sbb
je
loope
rcll
clc
xchg
xchg
test
add
push
cmp
aam
xlat
mov
jge
test
push
lods
into
mov
push
outsb
outsl
data16
mov
mov
test
fldpi
adc
jecxz
cmp
jge
out
inc
xchg
add
sub
jne
jl
push
sbb
xorb
xor
mov
xor
xor
dec
push
mov
call
scas
cmc
insb
sti
int
adc
inc
xchg
mov
or
outsb
lret
sahf
outsb
or
push
int3
mov
add
fcomi
push
addr16
xlat
xchg
jae
fwait
xor
ror
cld
loope
or
sub
movsb
ljmp
addr16
fcoml
int
lds
lods
ja
pop
test
inc
arpl
jle
addr16
dec
xchg
push
lret
push
push
dec
sub
inc
mov
add
jecxz
push
add
push
jo
mov
xor
adcl
xchg
pop
lods
push
jge
test
push
and
mov
mov
mov
add
push
xchg
imul
fstps
mov
mov
std
xchg
mov
and
xchg
mov
or
out
lods
sbb
mov
popa
push
mov
ror
mov
divb
ja
sti
xor
js
sbb
jae
aam
sbb
dec
mov
push
bound
jecxz
jbe
mov
adc
pop
sub
rorb
gs
or
adc
test
inc
pop
ffreep
insl
fwait
rclb
inc
sub
movsl
addr16
test
imul
in
sub
jp
mov
das
out
adc
test
inc
xchg
cwtl
into
jmp
inc
jmp
adc
dec
fsubrs
cmp
mov
cmc
addr16
and
sarl
lret
sbb
lcall
insb
pop
insl
out
inc
imul
sub
jmp
push
mov
aaa
cltd
into
xor
fwait
out
mov
cld
call
lcall
cltd
lea
test
xchg
jns
movhps
dec
xchg
mov
add
cmp
subb
in
jg
jb
insb
cmp
dec
clc
cmpsb
pop
pop
rol
inc
cmpsl
mov
jb
cmpsb
pop
sbb
xchg
lds
scas
in
leave
mov
cmc
in
adc
lahf
inc
vxorps
hlt
mov
and
clc
out
test
sub
add
cmp
div
xchg
shlb
rcr
addl
sub
cmp
mov
and
ret
repnz
das
push
or
xchg
mov
inc
addl
mov
dec
push
and
inc
popa
dec
inc
lds
in
in
cmpl
rorl
xchg
test
cmp
in
rcrl
cld
xchg
repz
push
mov
pushf
fldcw
jp
js
xchg
inc
gs
xchg
add
adc
or
std
inc
sarb
dec
pop
repnz
cli
mov
cs
popf
test
repnz
sar
mov
mov
je
pop
and
push
sub
roll
lds
and
out
cwtd
jbe
fnstsw
mov
scas
mov
mov
jne
mov
call
push
mov
dec
scas
add
decb
xor
roll
mov
adc
mov
xor
sbb
sbb
out
mov
adc
stos
loop
icebp
outsl
testl
mov
bound
loope
insb
in
or
sub
cmp
xchg
movsb
mov
cs
lods
icebp
cmpsb
mov
pop
into
aaa
repnz
dec
ror
jne
and
lret
js
add
mov
das
push
stos
xchg
cmp
dec
mov
cmp
dec
jno
xchg
lcall
imul
and
mov
icebp
jg
or
cmp
mov
pop
test
pushf
test
pop
in
mov
int3
mov
mov
push
mov
lods
in
xor
inc
dec
dec
das
push
movsb
shrb
add
xor
dec
stos
sbb
or
or
add
sub
mov
cmp
repnz
out
mov
jo
sub
lret
or
push
fcmovbe
shlb
push
pop
mov
imul
inc
cmp
mov
fdivrs
cmc
xchg
leavew
mov
loop
aaa
adc
add
fisubs
mov
inc
cmp
cmp
dec
jmp
and
fnstenv
pushf
les
xchg
pusha
or
push
imul
addr16
bound
int3
jo
loope
adc
int3
fcmovne
rcrb
mov
jb
or
repz
mov
das
jnp
mov
xorl
or
cmc
sub
lods
enter
sbbl
gs
data16
jle
iret
push
lds
lret
push
test
push
mov
out
mov
js
cmp
lcall
jo
add
cmp
cs
sbb
movsl
fs
cld
inc
mov
fsubs
xor
inc
aad
sbb
cmpsl
xor
sbb
cmpsl
xchg
sub
add
sti
fmuls
adc
cmpb
in
or
in
ja
cmp
sub
sarl
and
adc
pop
inc
stc
lea
loop
pop
or
test
inc
push
jns
jne
jne
jno
mov
pop
lods
jmp
shlb
iret
outsb
xchg
push
lock
jno
mov
push
jns
inc
pushf
and
loop
add
sbb
mov
sbb
lock
movsb
jb
rorb
push
lret
je
je
call
or
mov
mov
add
sbb
or
js
push
in
cmpsb
cmp
pop
adc
xchg
out
push
sub
pop
or
xor
test
jbe
out
jecxz
sbb
sub
rorl
adc
cmp
addr16
push
xchg
xor
push
inc
sub
cmp
cmpsl
xchg
aam
cwtl
js
xchg
lock
mov
sub
dec
cmp
lods
mov
lcall
and
sarb
mov
mov
xchg
das
sti
test
mov
ficompl
xor
mov
loopne
mov
out
sti
mov
cli
idivb
pusha
jge
in
leave
jge
mov
cmp
imul
and
sub
xor
and
and
insb
xchg
jle
pop
clc
adc
xchg
iret
addr16
dec
sbb
mov
outsl
push
cld
xchg
and
and
mov
leave
jge
push
hlt
ss
mov
aam
dec
push
and
dec
in
sub
aaa
push
jne
pop
push
jo
jp
xlat
out
sbb
and
cld
rcrb
rorb
cltd
xor
sub
movsl
or
adc
jb
stos
jle
aad
jecxz
outsl
fcmovnb
int
xchg
lock
sub
jl
ret
xchg
aad
pop
movsb
add
add
in
mov
mov
pushf
scas
out
ss
adc
xor
lahf
cltd
test
mov
incl
add
pop
mov
push
aaa
ja
xor
daa
loop
adc
mov
cmpsl
mov
jno
pop
sub
shr
add
sub
mov
mov
and
mov
out
popf
lods
lds
sub
repz
pop
cwtl
ret
adc
pop
mov
jmp
lods
adc
add
flds
data16
and
movb
push
data16
mov
loop
push
xchg
movsb
addl
pop
and
adc
inc
jns
aam
sbb
cltd
mov
sub
jg
lea
push
or
or
cmp
jp
mov
stos
aad
out
adc
mov
scas
pop
cld
out
inc
mov
gs
or
add
mov
pop
cld
ds
push
scas
call
mov
cmp
dec
cmc
push
popf
cmc
cltd
jl
pushf
push
xchg
add
iret
dec
mov
jl
rclb
push
rcrb
push
adc
in
xchg
mov
inc
and
push
aas
xchg
mov
mov
aas
ds
xorb
mov
fs
push
jle
fisttpll
cmpb
push
das
mov
lock
lods
xchg
and
mov
xor
std
mov
movsl
jbe
cmp
pusha
push
scas
dec
lock
push
mov
jl
aad
mul
ficomps
scas
aaa
nop
add
mov
cltd
or
stos
int3
adc
sbb
stos
cmp
in
scas
mov
imul
adc
fcom
mov
faddl
xor
jns
jle
loopne
nop
cld
dec
in
cs
scas
std
mov
inc
xchg
and
mov
inc
repnz
lahf
pop
ss
test
sbb
enter
sub
push
loop
mov
pusha
cmp
push
loop
sbb
es
push
inc
or
std
mov
xchg
loopne
pop
cwtl
mov
dec
pop
xchg
pop
adc
test
push
jge
jg
enter
sbbl
push
fs
cmpb
and
and
and
inc
xchg
or
movsb
lock
rcl
jl
into
push
out
inc
das
adc
jae
jmp
sbb
test
push
lods
xchg
sub
dec
fisubrs
cmp
shll
fsubl
subb
out
push
push
movsb
mov
mov
into
mov
subb
cmpsl
sbb
stos
scas
sti
jg
or
jle
adc
cmp
inc
loopne
cld
cmpsb
mov
cmp
mov
fnstcw
cmp
dec
lea
cmp
rcll
mov
sub
add
pushf
xor
or
cmc
into
movsl
xchg
iret
push
or
xor
cmpsl
out
ljmp
sub
push
repz
outsl
mov
adc
stc
add
push
mov
ja
xchg
mov
sar
jle
in
sub
arpl
mov
cs
push
adc
imul
cmp
leave
prefetch
jg
xchg
iret
sahf
rcr
call
add
mov
dec
sbb
mov
jb
pop
loop
mov
imul
dec
int
mov
std
dec
dec
imul
movsl
jb
lds
aad
popf
mov
or
popa
jl
jno
xlat
jp
fimull
outsl
aad
dec
push
lahf
pop
dec
pop
adc
cltd
cmp
pop
jo
popa
rol
mov
leave
rclb
insb
xor
and
and
lock
adc
pop
xchg
inc
mov
xlat
xchg
push
mov
fwait
mov
loopne
sarl
mov
dec
rol
stc
fimuls
movsb
mov
xchg
and
inc
xchg
push
mov
jmp
insb
out
cmp
or
push
jmp
mov
push
imul
cmp
mov
cmp
js
inc
xchg
and
cld
test
push
popf
xchg
mov
aam
and
shrl
mov
out
cmpsb
daa
bound
leave
and
jecxz
scas
push
push
fsts
ss
addr16
xchg
lret
mov
rcr
sbb
xchg
aaa
in
test
les
lods
or
icebp
inc
or
jmp
nop
and
sub
call
cmp
movsl
add
pop
cmp
sub
and
xchg
cs
int
cltd
mov
and
cli
inc
push
or
mov
mov
jne
ret
bound
popf
icebp
jecxz
ja
outsb
arpl
mov
sbb
mov
xchg
movsb
mov
mov
or
rep
fsub
jp
scas
or
dec
cld
in
sub
sarl
jb
push
cmp
cmp
das
cmp
gs
sbb
xchg
test
inc
add
mov
shll
les
out
inc
or
out
mov
cmp
repnz
cmc
sub
jmp
sub
ficompl
cmc
cltd
insl
jl
int
dec
cltd
into
ds
stos
or
popa
lahf
mov
cmp
pop
cli
cmpl
test
mov
mov
push
addr16
aas
sub
cmpsb
mov
scas
push
sub
in
jmp
ds
jp
rcrl
add
sbb
and
pop
dec
jmp
mov
addb
pusha
sub
pop
inc
pop
call
iret
xor
movsl
cmp
je
pushf
and
fstps
push
loope
in
dec
add
push
out
cmpsb
test
clc
inc
popf
into
loope
fwait
hlt
std
and
ret
aad
inc
insl
mov
outsl
cmpsl
mov
fdiv
pop
sbb
rcrb
mov
xor
add
mov
pusha
xchg
imul
cmc
icebp
fcoms
mov
push
cmpsb
add
and
mov
inc
lds
out
fistpl
pop
or
test
mov
sub
je
mov
push
loope
stos
out
fcompl
sbb
mov
jae
ret
sahf
enter
add
shlb
fsubrl
jae
jae
das
test
and
es
add
rcll
add
push
push
mov
in
cmp
ljmp
rorb
jp
add
test
fbstp
jle
fimull
inc
xchg
ds
lock
out
mov
sub
mov
into
lcall
sbb
divb
pop
test
push
lcall
add
add
mov
test
jle
cmpsb
fs
es
adc
pop
jl
insb
mov
or
test
xchg
or
cmp
popa
xlat
sbb
std
aad
add
clc
out
or
sarl
sub
xor
lret
push
jne
adc
into
fldcw
push
sub
xor
jmp
pushf
lret
pop
ret
lea
enter
xor
aam
cmp
cwtl
js
push
and
and
je
push
mov
imul
inc
ljmp
mul
ret
xor
push
push
inc
adc
insl
imul
test
xchg
push
xchg
mov
repnz
call
lods
adc
ljmp
lea
jp
dec
bound
or
xor
jne
gs
lcall
int3
or
andl
xor
ja
pusha
mov
in
inc
mov
sbb
xorl
in
cmc
cmp
js
ss
loop
cltd
dec
loopne
push
fwait
push
jge
jne
or
xor
mov
pop
rcl
mov
stos
fdivl
stos
in
in
out
in
fisubrs
out
cmp
add
push
loopne
insl
push
push
and
pop
jno
cltd
std
sub
xchg
sbb
and
sbb
clc
ffreep
out
aas
push
outsl
aaa
pop
les
subb
inc
mov
dec
fsts
inc
xor
setg
popl
cld
inc
pusha
jp
in
mulb
dec
out
mov
jbe
iret
loope
call
adc
inc
lds
pop
insb
add
cld
dec
pushf
dec
test
pop
cmp
or
arpl
dec
push
push
rolb
cli
adcb
sub
gs
movsl
rcrl
add
das
nop
sub
cmp
dec
pop
xchg
jno
fs
adc
aas
pushf
jge
or
mov
sbb
arpl
and
cltd
adc
into
mov
mov
sub
lret
adc
call
xchg
xchg
cmp
jg
inc
repz
and
sahf
mov
and
xor
call
push
out
push
sarl
inc
sub
cmp
jecxz
int
xor
push
test
icebp
dec
iret
mov
mov
movsb
mov
subb
jnp
jno
mov
scas
sarl
std
adc
xlat
loopne
insb
mov
push
xchg
sub
xor
dec
or
sub
xchg
sub
xlat
mov
mov
sub
aam
push
idivl
pusha
or
push
mov
imul
jp
fidivrs
dec
inc
lods
aas
push
div
mov
xor
imul
dec
sub
adcl
pop
stos
pop
lret
sub
shrb
outsb
and
pop
jl,pt
ror
push
add
icebp
or
and
nop
jns
fcoml
test
xor
cmp
outsl
repz
adc
sti
fists
mov
adcl
stos
inc
icebp
dec
pusha
imul
mov
repnz
cmp
pop
push
dec
mov
xor
mov
in
mov
cmp
lds
icebp
pop
mov
push
mov
mov
aam
mov
iret
test
pushf
lds
imul
lods
add
cmp
popf
js
mov
pop
jno
xor
dec
xor
mov
retw
aam
clc
movsl
mov
push
add
repnz
mov
adc
xor
mov
mov
lea
in
stc
shrb
xor
test
ret
jnp
daa
dec
cmp
insl
jmp
fdecstp
ss
addb
or
lcall
rorl
adc
jbe
fcom
mov
xchg
mov
cli
cli
fbld
rcrb
imul
push
inc
adc
mov
add
jg
push
xchg
push
fwait
mov
push
les
inc
pop
arpl
fs
dec
idivl
vunpckhps
inc
lock
pop
ljmp
jne
push
lcall
hlt
shlb
mov
mov
jmp
outsl
mov
les
ret
test
pushf
les
imul
push
sub
jecxz
lods
inc
fcomp
mov
adcb
mov
fs
inc
ret
or
mov
lret
aam
jb
ljmp
popa
inc
int3
mov
lret
adc
icebp
mov
fsubl
xchg
faddl
shr
movsb
mov
movq
cmp
push
addl
enter
cli
xchg
pusha
outsb
aad
stos
lods
xor
jmp
xchg
das
psubusw
or
ret
iret
data16
insb
fisttpl
outsl
sub
arpl
jns
mov
adc
xor
add
push
or
adc
dec
or
repnz
movsl
aam
pop
mov
daa
sbb
and
rorl
in
mov
imul
mov
lods
pop
rcr
adc
gs
sbb
adc
jl
inc
mov
adc
int3
pop
and
xchg
mov
push
in
sar
cmp
loope
test
shll
mov
ret
mov
pop
push
mov
mov
push
inc
leave
dec
insl
adc
pop
fs
push
lods
scas
push
xor
out
inc
repnz
movsl
shr
icebp
jb
fs
cmp
fistps
mov
icebp
ja
add
fistl
sbb
sbb
mov
js
sub
aad
push
cltd
mov
mov
int
addb
mov
mov
mov
loope
jle
and
int3
pop
cmp
push
fwait
cli
cmp
lods
pop
xor
sahf
pop
into
jp
movsl
xchg
adc
mov
fcoml
out
ljmp
pop
rcll
pop
xor
xchg
in
dec
jmp
lahf
es
and
rcrl
enter
push
jne
loop
test
stc
test
out
outsb
push
or
adc
test
mov
repnz
imul
dec
sbb
ds
mov
jge
xchg
dec
or
scas
cmpsb
fisubl
in
test
enter
sbb
das
pop
push
in
add
pop
xchg
and
push
ss
mov
iret
jg
out
fcoms
xor
adc
and
add
loope
aaa
subb
cli
fimuls
inc
push
adc
push
insl
jno
test
roll
sbb
adc
movsb
inc
jbe
lcall
mov
pop
sti
ljmp
divb
cld
fwait
repz
loope
sbb
arpl
in
sub
sbb
mov
aas
fstps
mov
adc
out
lret
jo
icebp
out
aam
adc
jl
out
cmp
test
dec
imul
sub
dec
in
jp
hlt
xchg
mov
dec
sbb
in
xchg
cmp
clc
es
jg
adc
je
mov
jae
mov
push
fwait
hlt
std
mov
jecxz
outsl
jne
mov
ret
jns
inc
and
js
add
fisttpl
ds
xchg
in
cs
es
adc
test
lahf
out
cltd
push
jno
lods
rorl
insl
cmc
dec
push
das
cmp
push
test
call
test
inc
frstor
xchg
jns
sbb
jnp
in
inc
rcrl
add
fildll
roll
xchg
insl
cltd
push
stc
pop
ljmp
dec
loop
xor
cmpsl
adcb
mov
jns
mov
inc
pushf
pushw
imul
nop
aam
xrelease
add
sbbb
jecxz
cmp
mov
sbb
push
aaa
mov
xchg
xor
inc
in
dec
cmp
pusha
mov
daa
jne
xor
in
ds
orl
adc
hlt
out
or
lea
mov
scas
data16
fldenv
inc
xor
ljmp
pop
mov
cmp
sbb
xchg
arpl
fwait
mov
dec
and
and
les
fwait
xchg
jmp
jae
pusha
shr
pop
jl
xchg
movsb
lock
daa
repnz
inc
lcall
add
lods
aaa
test
and
out
mov
lcall
cmp
lret
scas
fbld
pop
mov
mov
adc
icebp
and
fsubrs
sub
mov
push
xlat
xlat
loope
out
fmuls
jne
inc
fdivs
outsl
fmulp
lret
incl
xorl
dec
sar
cmp
adc
mov
shll
int3
xor
push
push
inc
xbegin
xchg
push
inc
jge
xor
or
arpl
jge
call
jle
mov
xor
adc
and
shll
xor
adc
andl
in
inc
aad
insb
push
xor
mov
ljmp
aas
popf
pop
inc
or
dec
mov
stos
outsl
dec
jp
nop
fidivrl
push
inc
movsl
jmp
push
cmp
mov
mov
push
sti
mov
outsl
mov
mov
sarl
pop
ss
in
into
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
cmp
lret
jl
pop
pop
jl
jmp
or
sub
push
jnp
sbb
cmp
cmpsb
outsl
mov
mov
incl
outsb
lock
push
mov
insl
fwait
ss
xchg
jg
xor
cwtl
roll
jb
xor
inc
lret
fidivl
sub
sbb
aad
cmp
fwait
orl
fildll
mov
pushf
adc
sbb
ret
lods
sbb
test
sahf
sbb
popa
xchg
pop
push
std
dec
imul
cltd
mov
mov
adc
jmp
lods
pusha
pop
popa
xor
lahf
cmpsl
pop
push
mov
subl
ds
lret
outsl
cmp
nop
inc
jno
cli
js
push
pop
jmp
ss
mov
pop
loopne
dec
adc
sbb
xchg
jmp
push
pop
mov
inc
lock
icebp
loopne
and
ds
jge
sub
lret
lret
int3
mov
pop
sbb
mov
dec
sub
xchg
xor
mov
fsub
mov
mov
je
cld
int3
nop
stos
sti
das
mov
pop
push
cs
in
lret
cmpsl
into
sub
mov
adc
filds
inc
rorl
xor
cmc
mov
cmc
dec
pop
mov
adcl
sub
aaa
fwait
xchg
inc
xor
cmc
mov
ret
mov
sbb
adc
jge
pop
adc
and
in
mov
cmp
in
pushf
sub
sti
sbb
and
stc
loop
xor
mov
out
xor
push
xor
push
add
lret
test
popf
pop
and
push
push
jns
xor
jne
xchg
push
xchg
mov
out
into
and
fcmovbe
mov
mov
xlat
jl
mov
and
jle
dec
pop
lret
mov
or
shrb
jbe
dec
add
fs
xchg
jmp
lret
arpl
sbb
pop
mov
or
adc
adc
cmova
aam
test
shrb
or
and
xor
fwait
add
dec
mov
mov
sub
popa
or
push
adc
sub
ja
into
fcoml
mov
fs
mov
push
jl
int3
aam
mov
mov
jp
mov
sbb
jae
fcmove
inc
push
out
leave
cmp
sub
dec
dec
mov
xchg
fcmovnb
xor
cli
cmpsb
int3
jb
es
mov
outsl
data16
call
mov
leave
sub
or
xchg
mov
push
mov
scas
mov
or
insb
int
jns
es
xor
adc
dec
ficomps
mov
fucompp
loopne
mov
mov
popf
adcl
fsubp
fnstcw
and
add
push
aad
leavew
add
push
mov
add
jmp
pop
mov
leave
adc
or
lret
sbb
mov
cmc
jle
and
fwait
ret
jns
add
loopne
dec
push
pop
std
sbb
aam
inc
sub
dec
dec
inc
xorps
stc
sub
add
into
mov
push
scas
xchg
mov
sub
repnz
movsl
cmp
xchg
lret
mov
in
sub
scas
adc
mov
imul
insb
dec
mov
mov
out
cmp
cmp
lods
dec
dec
dec
push
outsl
mul
jns
dec
xor
imul
fcomi
lock
xchg
cmpsb
inc
xchg
lods
cli
icebp
push
imul
lret
sub
mov
add
aas
mov
jns
push
out
lea
repnz
movsb
pop
fimull
xchg
and
and
call
loop
in
mov
cli
mov
cmpsb
aad
aad
lret
jno
in
add
jg
mov
or
mov
dec
mov
push
lret
jge
fs
jge
das
and
mov
out
cmp
inc
stc
sti
pop
adc
cwtl
or
lea
fsubl
mov
add
jne
adc
sti
loope
out
mov
mov
inc
jb
xchg
idiv
push
sub
or
lret
mov
add
pop
repz
push
mov
adc
cmp
stc
cmp
aas
mov
push
loope
outsl
jne
jns
mov
cmp
repz
inc
pushf
jecxz
cmp
inc
mov
lret
test
mov
pop
cltd
push
in
and
das
mov
lret
adc
and
out
jae
add
adc
mov
inc
mov
hlt
mov
fsts
mov
xchg
mov
lcall
sbb
repnz
jge
mov
add
in
jmp
lock
cli
mov
and
std
and
inc
push
sbbl
mulb
lret
ds
push
xchg
mov
inc
fs
movsb
mov
push
fbstp
pusha
cmp
or
leave
lock
sbb
inc
ss
aas
pop
jmp
stos
ret
daa
fnstsw
push
repnz
out
insl
inc
popa
fsubl
mov
dec
test
mov
stos
jmp
push
inc
mov
test
dec
mov
cmpl
cmp
cs
pop
adc
mov
jae
movsb
mov
dec
cmp
pop
adc
aas
mov
adc
mov
jge
insl
scas
sub
or
ja
fdivrs
adc
test
xchg
push
loopne
push
cld
stos
add
push
std
jge
adc
adc
ss
mov
mov
mov
imul
mov
repz
inc
mov
pop
idivb
rcll
repz
jecxz
xchg
and
or
jbe
jns
enter
test
cmp
repz
sub
arpl
imul
push
lret
or
push
les
das
sarl
inc
xchg
ss
pop
or
dec
sub
push
and
pop
xlat
leave
cmpsb
cltd
inc
mov
lret
sub
daa
out
jg
stos
pop
in
sbb
push
add
cmp
in
inc
xchg
fdivr
je
mov
dec
das
or
mov
into
test
mov
inc
push
sar
daa
movsb
fst
loope
add
pop
inc
xor
in
jbe
lods
adc
ljmp
push
movsb
cmpsb
loope
dec
insb
int3
andb
in
and
inc
xchg
arpl
push
xchg
jge
mov
cld
push
mov
scas
dec
sub
stc
inc
xchg
es
ret
cmp
sbb
xchg
pop
push
divb
cwtl
iret
fldl
movsl
jp
subb
dec
fldt
pushl
cmc
mov
sub
mov
leave
test
inc
push
lods
mov
dec
movsb
daa
lret
cmp
ja
cltd
xchg
jnp
and
lds
push
xchg
and
xor
negb
popf
xchg
lea
insl
jl
or
sbb
xor
mov
fcomps
aaa
es
sub
sahf
pop
repnz
jp
clc
push
insl
mov
mov
into
enter
or
test
icebp
cmp
mov
dec
ret
sub
cmp
cs
pushf
int
sub
push
div
loopw
mov
add
sub
jne
in
loop
mov
ja
push
jne
test
xor
insl
cmp
jae
push
mov
inc
mov
enter
adc
adcb
sbb
mov
adc
pop
adc
mov
rcrl
inc
mov
lods
and
out
dec
loop
lods
jbe
mov
inc
stos
mov
call
clc
rcl
loop
ljmp
ljmp
lcall
dec
mov
pusha
incb
mov
enter
and
mov
sahf
dec
adc
dec
faddl
adc
xchg
loopne
push
jns
mov
enter
bound
sbb
cmp
push
aad
pop
je
lahf
stos
aas
mov
adc
out
cmc
repnz
int
bound
movsb
push
mov
repnz
cmp
ds
inc
xor
pop
roll
add
leave
xor
mov
vcvtsi2sdl
pop
xor
aad
add
mov
data16
push
shr
jle
mov
dec
xchg
test
pop
test
imul
es
xor
cmpsl
cmpsl
adc
sbb
sahf
jae
shlb
pop
add
pushf
pop
cmp
push
mov
or
cmc
mov
jmp
pop
fidivs
jne
pop
sbb
cld
ljmp
xor
adc
xchg
aad
pop
idivb
fs
inc
push
mov
js
inc
fdivrs
paddsb
mov
cmpsl
mov
ss
jmp
fs
mov
add
andl
mov
popf
js
std
mov
mov
push
iret
mov
push
fcom
js
adc
test
push
xor
inc
js
fwait
dec
jg
mov
sub
les
or
jns
and
les
xchg
push
sbb
fwait
push
jg
cwtl
in
cwtl
int3
hlt
or
mov
mov
mov
incl
pop
fmull
xor
or
outsl
mov
and
pop
je
stos
cmc
cmp
cmp
xchg
push
leave
in
mov
cs
pop
cmp
in
or
adc
or
pop
into
jbe
xchg
stos
lods
adcl
cmp
lock
push
or
or
fmulp
les
lock
fldenv
mov
loopne
dec
aas
pop
adcl
push
mov
idivl
sub
or
push
sahf
xchg
mov
loope
movb
icebp
xchg
pop
data16
leave
rcrb
loop
in
movq
inc
jbe
xor
cmp
in
ficoml
int
cwtl
pop
pop
or
divb
dec
lahf
adc
lods
adc
inc
lret
sbb
sahf
shl
cltd
push
mov
fdiv
jle
std
mov
xor
fwait
sbb
mov
or
mov
outsl
xor
mov
xlat
push
inc
xorb
pop
filds
psubusw
emms
cmp
jl
pusha
jl
ja
adc
xlat
imul
xlat
jae
sbb
cmpsb
cmp
and
dec
decl
int
and
dec
dec
dec
adc
mov
sub
dec
push
sti
and
push
in
or
pop
popf
mov
mov
push
dec
add
sub
add
sahf
ret
clc
bound
bnd
mov
call
cs
xchg
addl
add
push
aaa
cmp
ret
pop
lea
pop
in
push
enter
into
and
push
dec
test
shrl
stos
fbld
pop
ficoml
out
lds
xchg
test
mov
outsb
adcl
mov
inc
mov
mov
je
push
cwtl
pop
int
outsb
mov
push
insl
fldl2e
jns
push
adc
mov
ret
pushf
mov
xchg
das
ljmp
dec
pop
out
mov
ljmp
rcl
fisubs
sub
fs
popa
test
iret
adc
push
mov
xor
aaa
cmp
pop
pop
xchg
jne
xchg
fsts
repnz
and
push
popf
insl
push
pop
push
fildl
fcomps
loop
and
addr16
cmpsl
fistl
mov
ret
int3
adc
cmp
fbstp
je
mov
aaa
negb
pop
lods
stos
mov
dec
sbb
incl
pop
popf
addr16
push
adc
iret
add
mov
mov
jp
addl
movsl
shlb
ret
fwait
mov
loope
iret
outsb
out
mov
mov
mov
out
mov
nop
jb
mov
lahf
jecxz
mov
mov
lds
lret
nop
pop
mov
xchg
mov
imul
mov
or
adc
push
xchg
fnstenv
jg
mov
mov
imul
cmpsl
add
aaa
lcall
cltd
or
xor
syscall
pop
outsb
sbb
ficompl
lock
ret
jb
xchg
lret
fs
fsubr
xor
mov
into
adc
nop
ds
cmpsl
mov
inc
mov
dec
cmc
pop
popa
dec
dec
xchg
pop
int3
xor
xchg
cmp
scas
cltd
test
mov
pop
mov
orb
mov
push
aam
xor
es
rcl
sbb
inc
arpl
push
push
fcoml
fcomp
cmc
inc
push
cmpb
pushf
mov
xor
bound
sbb
xor
sbb
pop
mov
repnz
sti
jae
bound
pop
cmp
sti
aad
das
inc
adc
xor
imul
jne
pushf
sub
xchg
divl
movsb
mov
stc
arpl
roll
and
push
in
scas
pushf
cmp
dec
push
jecxz
aas
mov
inc
into
ss
dec
insl
in
int
out
loope
stc
xchg
in
xchg
mov
les
jp
std
inc
jnp
cmpb
inc
sub
push
pop
jge
mov
ja
add
sti
push
fcmovu
add
sub
pop
mov
push
push
aam
loop
xchg
mov
pcmpgtb
push
mov
scas
les
add
jle
scas
pushf
xchg
scas
sub
lret
pop
sahf
add
daa
xchg
jae
mov
pushl
imull
add
in
test
xor
dec
mov
or
repnz
push
fcompl
icebp
pop
adc
js
cmp
add
test
bound
jp
aam
fsts
push
mov
call
pop
xor
pop
xchg
fldcw
jns
adc
insl
cmpb
mov
mov
and
add
andl
xchg
or
jmp
outsb
adc
cs
xchg
movsb
mov
cltd
sbb
fcoms
sbb
sbb
add
arpl
lods
push
nop
scas
test
orb
jl
push
sub
icebp
or
sbbl
push
adcl
cmpsb
aam
imul
xchg
es
ja
cmpb
ljmp
aaa
addl
cld
add
cmp
call
es
inc
mov
push
decl
mov
push
or
inc
inc
push
pop
xchg
pop
arpl
dec
or
push
jb
dec
test
addr16
enter
mov
loopne
mov
fs
iret
xlat
test
dec
jmp
inc
push
sahf
mov
jne
dec
das
dec
jns
mov
mov
test
popa
orb
imul
xchg
gs
out
loopne
jecxz
mov
or
sbb
aad
jbe
lret
cmc
jb
jmp
fidivrs
in
movl
std
lret
jne
jle
test
xchg
push
inc
and
jecxz
and
shl
cmp
scas
out
ds
inc
push
mov
push
cmp
mov
dec
cmc
mov
cld
dec
aad
mov
and
mov
pusha
cmc
xchg
in
xor
adc
insl
subb
out
fiadds
inc
add
cmp
iret
sbb
aam
fisttpl
bound
out
out
lock
adc
call
aaa
pop
repnz
xchg
dec
jnp
fbld
cmpsb
sub
repz
sub
sahf
xchg
jmp
lock
les
xchg
loopne
pop
loope
popa
sub
cli
lcall
clc
mov
pop
fcomps
inc
adc
aaa
dec
test
cmp
iret
rclb
shl
imulb
sub
jle
mov
jg
in
pop
imul
push
stos
adc
mov
jne
out
sbb
cld
lods
dec
loope
popf
mov
inc
stos
add
sub
and
lcall
ja
rolb
add
rolb
sbb
mov
xchg
rcl
sbb
jl
dec
lods
or
dec
jnp
cs
pop
push
lcall
lcall
fbld
sbb
sub
imul
mov
aas
pop
mov
sbb
cmp
jmp
cmpsl
ret
pop
mov
movsb
ss
cmp
lods
xchg
out
jmp
lcall
popa
mov
and
call
jl
add
lcall
sbb
mov
in
popw
addr16
insl
mov
cmp
dec
or
xor
push
sbb
push
sti
cmp
test
ss
imul
and
rcr
shlb
inc
cwtl
fcompl
inc
rcl
add
fists
pop
pushf
test
std
cmp
jmp
fs
aad
push
call
sub
insb
iret
push
jno
testb
mov
xchg
shlb
mov
sbb
push
jle
movsb
xor
dec
pop
mov
movsb
dec
insb
pop
je
in
xor
lods
push
stos
ljmp
xchg
int
test
push
jle
fidivs
lds
adc
dec
sti
outsb
xor
ret
jmp
jo
cmpsb
mov
xor
in
fdiv
push
in
or
and
daa
pop
es
jl
pop
inc
jo
pop
dec
pop
adc
sub
out
pop
mov
bound
dec
xor
pop
jo
out
shll
add
scas
sbb
cli
decb
jb
xor
mov
into
mov
out
push
mov
ds
subl
lea
xor
dec
pop
das
inc
sub
je
cmp
arpl
enter
mov
xor
add
movb
xchg
sbb
cmp
ljmp
mov
stos
rcrb
pusha
nop
fisubrs
adc
std
mov
rcrl
push
jmp
loop
push
repz
and
pop
stos
loopne
push
mov
xor
test
sbb
pop
push
js
repnz
jecxz
pop
xchg
inc
xchg
xlat
sti
leave
mov
sub
mov
mov
add
lods
jne
jne
adc
inc
cmp
popa
cmp
repz
into
subb
inc
push
dec
sbb
cmc
cli
lret
mov
lods
jg
inc
pop
mov
lods
add
pop
ret
stos
add
xchg
loopne
stc
lret
push
imul
movsl
and
inc
data16
sub
xchg
mov
sti
aas
jg
popa
lahf
add
loop
aad
call
mov
mov
jnp
adc
loope
add
orl
adcb
mov
into
stos
sbb
dec
xchg
cltd
scas
sub
scas
or
pushf
icebp
adc
xchg
fisubrl
adc
icebp
add
ret
jo
push
push
cld
dec
ja
popf
lods
inc
cmp
mov
ds
or
and
lcall
add
daa
xchg
xor
roll
cld
outsb
lret
add
mov
mov
movsl
test
pop
sbb
rorb
cmc
or
pop
sbb
xchg
inc
inc
sahf
popa
sub
lahf
clc
out
or
xor
inc
popf
sub
or
addr16
insb
pop
daa
inc
sub
mov
sbb
pusha
sbb
je
lods
xor
sub
inc
adc
pop
cld
clc
sahf
mov
dec
and
jp
into
cmp
lret
lods
insb
xchg
mov
aas
iret
mov
xchg
shlb
cmp
aaa
xlat
inc
lods
pop
stos
sub
dec
lods
lock
xchg
lods
mov
cmc
jp
nop
sbb
lods
ficoms
sub
inc
lock
jo
gs
mov
outsb
push
mov
cmpsb
dec
cmc
pop
fstl
aad
pop
into
mov
cmp
sbb
pop
icebp
js
js
add
cwtl
imul
sub
or
stc
and
not
jp
outsl
adc
repnz
ss
sbb
dec
testb
imul
mov
popf
mov
repnz
clc
add
insb
jnp
xor
xchg
or
lods
lcall
rorb
outsl
xor
shrl
cmp
fidivrl
push
push
lock
in
daa
mov
cmp
cmp
sbb
dec
xchg
insl
stos
mov
inc
pop
cltd
fcompl
sub
mov
aad
lret
cmp
aam
sub
movsl
mov
data16
jno
test
sahf
mov
lcall
icebp
mov
or
jne
inc
sbbl
jl
mov
xchg
ror
mov
xchg
adc
mov
inc
adc
cmp
xchg
sti
mov
cmpsl
pusha
testb
sub
add
and
insb
fbstp
test
fisttpl
fs
int
adc
jno
testl
dec
cltd
xor
mov
cld
inc
neg
dec
out
mov
pop
push
jb
jecxz
pop
mov
inc
mov
popf
inc
and
daa
or
cmp
fs
lds
lret
test
push
push
lea
mul
push
jl
xor
fidivl
xorl
sub
ret
xor
nop
dec
das
subb
out
andb
and
sbb
arpl
sbb
sbb
fsubl
pop
mov
push
mov
push
daa
mov
mov
aad
xchg
pop
mov
mov
sub
push
adc
pop
repnz
xchg
aaa
jecxz
aad
lods
sub
sar
push
or
jmp
bound
inc
adc
xchg
mov
pop
pop
jo
and
sbb
sub
pop
jle
jmp
sbbb
mov
lret
add
and
lods
mov
pop
rep
dec
or
xor
popf
mov
pop
cmpsl
fs
in
fisubl
hlt
jbe
cld
test
fbld
jmp
push
inc
pop
aad
mov
negl
gs
pop
das
dec
jne
popf
sub
add
lds
and
mov
xor
jb
popf
sub
popf
clc
pop
inc
adc
lea
add
cmp
fs
sub
and
cltd
ret
in
lret
in
je
jg
sub
nop
rolb
fstpt
mov
lods
mov
push
xchg
negl
sbb
lods
mov
js
mov
js
mov
pusha
pop
pop
push
cmpsb
xchg
shrb
xor
les
test
aas
call
leave
outsb
inc
vpsubsw
aad
dec
mov
mov
iret
inc
inc
xor
loop
add
xchg
repnz
jecxz
dec
popf
insl
xor
and
inc
mov
and
jp
cmp
add
cmp
in
lods
ljmp
xorl
sbb
mov
pop
pop
cmc
xor
xchg
or
aad
sbbb
dec
mov
xor
add
mov
xor
jb
std
xor
and
test
daa
rorl
add
sbb
lahf
loop
dec
xchg
xchg
test
sti
mov
mov
inc
adc
test
xor
imul
shlb
xchg
sub
outsl
xchg
cmpsb
add
cmp
cmpsl
les
test
stos
and
fldenv
sti
add
inc
xchg
mov
push
shll
es
xchg
mov
mov
inc
xchg
fldcw
mov
dec
sbb
divl
lea
jg
leave
repnz
jmp
sub
fistl
addr16
jno
xor
jne
or
cmp
adc
nopl
icebp
mov
test
lcall
in
je
push
or
push
push
xor
iret
add
int
jl
pop
test
mov
xor
ret
iret
mov
jg
leave
es
dec
in
icebp
insl
jo
aad
gs
lcall
mov
lods
adc
in
mov
jo
imul
add
repnz
stos
dec
push
lods
rolb
and
xor
sub
add
or
push
cmp
adc
push
sbb
jno
pop
lret
int3
jg
insl
call
pushf
adc
jbe
repnz
cmp
mov
jp
sarl
shrl
lcall
ljmp
lcall
cmpxchg
mov
outsb
pop
sbbb
push
fs
push
sbb
jecxz
mov
js
ja
into
aaa
aaa
mov
int
out
mov
and
xor
mov
test
mov
adc
fucom
aaa
mov
repnz
fsubs
mov
outsl
in
sbb
mov
and
lea
inc
pop
or
mov
xlat
xchg
scas
fidivs
adc
ljmp
rcrb
cmp
xor
jp
loope
add
gs
mov
push
stos
into
das
mov
roll
cltd
jle
push
insl
xchg
aas
ficoms
gs
cmp
jno
jg
and
das
loope
vmovdqa
push
dec
cwtl
imul
rcrl
sbb
test
popl
lods
pop
out
mov
test
test
and
inc
test
arpl
popa
test
sbb
sub
mov
dec
jge
pop
sarl
inc
jge
cmp
or
jl
xchg
mov
lahf
push
nopl
daa
dec
or
sub
fidivl
ljmp
outsb
sbbb
xchg
jnp
cmp
cmp
movsb
adc
sub
sub
add
repz
mov
test
mov
or
test
cmp
scas
adc
sbbb
lahf
scas
std
out
iret
outsl
stc
add
push
fstps
push
jmp
std
addl
mov
inc
imul
int
lcall
clc
outsb
cmp
mov
and
int
add
call
xlat
cmp
jg
or
mov
cmp
adc
inc
sbb
out
cmp
ss
pop
aaa
and
loope
scas
xchg
mov
imul
adc
pop
xchg
mulb
mov
add
mov
jns
xchg
jne
mov
fs
repz
push
cmc
push
push
mulps
divb
pushf
sbb
xor
inc
and
clc
xchg
insl
sbb
xchg
inc
les
push
xchg
int3
dec
mov
call
xchg
insl
push
lahf
hlt
sbb
enter
ss
sbb
add
cmp
lods
out
cmp
sbb
cld
mov
mov
mov
or
ret
lret
lcall
fcompl
cmpsb
cltd
xchg
jge
scas
sub
fstpl
cmc
inc
cmp
decl
shr
mov
pop
lahf
push
sbb
lods
pop
call
dec
add
enter
addr16
mov
sbb
sbb
imul
ja
or
scas
test
mov
sbb
sbb
jno
and
mov
imul
roll
dec
stos
aam
das
cltd
imul
xor
sub
mov
mov
ror
repz
mov
push
xor
std
sub
inc
inc
ljmp
mov
cwtl
shll
sub
push
inc
rorb
lock
pop
leave
xchg
push
aaa
mov
popa
inc
stc
test
xor
cli
push
int3
pusha
sar
call
xor
pushf
push
sub
inc
push
mov
xchg
dec
popf
jbe
inc
push
cmp
gs
cmp
xchg
lahf
gs
xchg
cli
sbbl
mov
or
xor
in
lods
rcll
aam
popf
lcall
lahf
std
push
pop
xor
pushl
jae
das
fdivrl
sub
pop
rolb
aam
std
and
pop
xchg
dec
mov
test
cld
cmpsb
lods
fwait
cmp
andb
cmp
lea
movl
dec
cwtl
ret
enter
iret
hlt
loopne
dec
test
scas
aam
lcall
sub
lock
in
or
movsb
out
mov
dec
sbb
repnz
add
sub
ljmp
adc
test
outsl
mov
dec
mov
xchg
fisttps
lret
and
mov
jb
push
cmp
xchg
gs
and
add
sub
mov
mov
fsubrs
mov
clc
jg
xchg
test
rorb
add
cmp
push
fldcw
fisttps
cmp
sub
ret
dec
and
push
in
aam
nop
out
mov
orb
mov
adc
cmp
dec
clc
out
cmpsb
pusha
in
mov
jle
shrl
aaa
sbb
xchg
xchg
xor
shrl
mov
pushf
pop
ror
shl
pop
push
add
shld
stc
aaa
jbe
add
xlat
in
pop
jmp
cmp
push
fdivr
pop
addl
adc
mov
out
fmuls
mov
sbb
pop
shr
xchg
add
mov
add
jecxz
mov
adc
rcl
jle
cli
sub
outsb
jae
loopne
or
lahf
mov
mov
outsl
fsubr
mov
and
mov
push
pusha
cmp
aad
jae
test
and
aaa
xchg
les
clc
sbb
dec
dec
sub
nop
pop
int
shlb
popf
or
pop
fmuls
or
mov
mov
lret
data16
mov
pop
inc
add
xor
adc
push
jae
lods
push
mov
cli
pop
xchg
pop
push
pop
add
sub
inc
jg
out
cli
jne
ja
cmc
test
lods
and
sub
add
sbb
pop
into
aas
js
gs
push
daa
stc
dec
aad
int
push
negl
inc
int3
ret
call
sub
pop
mov
daa
jecxz
adc
mov
pop
mov
xchg
sti
mov
fsubs
push
push
mov
dec
fnstcw
lahf
ret
fcmovu
inc
out
in
sub
pop
jl
cld
xor
sti
push
mov
jecxz
xor
jmp
lods
add
sbb
shrl
xchg
and
sbb
negb
fwait
pop
cmp
popf
imul
sti
sti
cmp
mov
adc
dec
aaa
xchg
addr16
dec
iret
mov
jnp
or
je
xor
lea
xchg
pushf
xchg
push
push
xchg
shrl
mov
sub
das
push
and
in
jmp
and
out
push
arpl
jg
subb
add
add
movsl
repz
pop
sub
insb
adc
add
mov
roll
movsb
sub
lds
addb
xchg
jmp
bound
pop
push
sbb
push
test
mov
in
pop
inc
in
leave
jg
mov
shrl
mov
adc
test
roll
in
sub
mov
sbb
add
mov
xor
bnd
testl
mov
dec
lcall
int
jo
daa
scas
jae
fnstenv
pop
fiadds
mov
xchg
cmpsb
ja
sbb
pushf
pop
out
adc
inc
mov
sub
push
testb
adc
mov
or
xchg
xchg
aas
or
loope
sti
sahf
sub
xchg
incb
cmp
les
pop
sub
jg
and
mov
sub
cwtl
shl
pop
xchg
ja
lahf
sbb
lahf
lds
cmp
adc
sbb
add
stc
push
mov
pop
push
lock
popf
stc
sarl
mov
repz
data16
std
out
in
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
lcall
dec
mov
mov
mov
add
add
pop
dec
outsb
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
