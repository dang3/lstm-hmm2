push
mov
sub
push
add
push
adc
push
adc
xor
sbb
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
push
mov
pop
push
call
push
andl
push
push
push
push
xorl
push
sbbl
call
push
addl
push
push
push
sbbl
push
push
push
incl
call
addl
dec
movl
jne
push
sbbl
push
push
andl
call
test
je
mov
adc
imul
mov
mov
movl
mov
movl
cmp
jne
addl
movl
pushl
subl
pushl
andl
pushl
xorl
call
mov
mov
or
mov
xor
mov
mov
sub
movl
lea
xor
mov
lea
mov
addl
mov
mov
adc
mov
mov
add
mov
mov
xor
mov
xor
mov
adcl
add
movl
mov
mov
movl
cmp
movl
jne
mov
mov
mov
xor
add
mov
xor
mov
movzbl
and
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
xor
xor
dec
mov
jmp
mov
or
mov
xor
add
or
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
mov
xor
or
adc
mov
xor
xor
mov
sbb
mov
xor
mov
mov
mov
sub
mov
orl
mov
movl
add
mov
xor
add
mov
add
mov
andl
mov
adcl
xor
xor
sbbl
add
movzbl
and
mov
xor
lea
cmp
ja
or
mov
mov
xor
mov
sbbl
xor
andl
lea
subl
push
sbb
mov
xorl
xor
lea
orl
push
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
mov
andl
pushl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
xor
lea
mov
mov
decl
xor
xor
sbbl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
movzbl
sub
mov
mov
xorl
xor
lea
mov
cmp
movl
jbe
add
mov
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
adc
mov
mov
xor
mov
sub
andl
xor
mov
not
mov
movl
cmp
movl
jne
addl
lea
andl
mov
lea
addl
mov
mov
xorl
test
movl
je
adc
mov
mov
mov
sub
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
sub
cltd
mov
mov
mov
or
add
mov
adc
andl
subl
xor
xor
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
push
call
mov
dec
mov
jmp
not
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
negl
add
mov
mov
movl
adcl
xor
addl
mov
mov
xor
movl
mov
cmp
movl
jne
mov
mov
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
negl
mov
movl
mov
andl
xor
add
movl
adc
andl
xor
addl
xor
movl
cmp
movl
jne
cmp
jne
mov
addl
mov
andl
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
addl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
xorl
add
movl
jmp
movl
mov
movl
cmp
je
mov
mov
orl
xor
add
cmp
je
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
movl
mov
mov
mov
adcl
pushl
addl
mov
pushl
addl
add
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
add
mov
mov
orl
pushl
call
mov
mov
movl
mov
movl
jmp
adc
mov
sub
mov
andl
xor
subl
add
cmp
jne
add
mov
movzwl
sbb
mov
adcl
mov
xor
sbbl
add
cmp
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
andl
push
xor
movl
add
xorl
push
xorl
push
andl
pushl
adcl
pushl
sbbl
call
add
mov
mov
sub
mov
or
mov
sub
mov
adc
mov
xor
mov
sub
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
incl
mov
mov
mov
mov
mov
mov
mov
sbb
movl
mov
xor
decl
add
mov
sbb
mov
mov
or
mov
mov
and
mov
mov
push
sbb
pop
orl
sub
add
xorl
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
mov
lea
lea
xor
cmp
jne
mov
xor
mov
mov
mov
mov
xor
mov
xor
mov
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
mov
movl
movl
movl
movl
mov
mov
mov
andl
mov
movl
mov
mov
xor
mov
orl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
xor
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
movl
movl
pop
jmp
xor
inc
ret
push
mov
push
movl
movl
mov
addl
mov
add
xor
cmp
movl
jne
add
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
push
adcl
push
addl
push
push
andl
lea
push
push
adcl
call
push
call
sub
movl
xorl
movl
mov
mov
xor
mov
xorl
add
mov
sbb
mov
test
je
mov
mov
orl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
add
movzbl
and
xchg
sbb
mov
movl
sub
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
add
mov
sub
mov
sub
xor
add
mov
sub
mov
mov
xor
xor
add
add
mov
movzbl
sbb
mov
mov
adc
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
or
mov
orl
sub
addl
lea
xor
andl
xor
movl
cmp
movl
je
sub
mov
xorl
xor
adcl
add
cmp
jne
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
subl
mov
inc
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
add
cmp
movl
je
adcl
pushl
addl
pushl
negl
call
mov
xor
mov
add
mov
subl
xor
subl
add
cmp
je
or
mov
mov
adc
mov
mov
mov
mov
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
jmp
or
xchg
xchg
pushf
cmp
jl
jl
pop
jl
adc
and
imul
xor
fsubp
push
dec
imul
bound
iret
pop
dec
and
dec
jg
jb
jg
movsb
cmp
ljmp
cld
push
jg
in
cmp
mov
mov
mulps
fldl
lock
sub
dec
push
sub
mov
test
jmp
lret
sbb
jp
arpl
lcall
xor
cmpb
jae
fsubrl
push
jecxz
mov
mov
out
push
dec
push
and
cmp
lods
dec
int3
cmpsl
xor
push
pop
std
push
pop
movsl
stc
push
cli
inc
sbb
pop
jns
insl
ss
jno
je
mov
mov
mov
outsl
fstps
inc
mov
daa
shll
mov
out
and
sub
inc
pop
fwait
out
lods
in
fstl
in
das
adc
nop
shll
add
movsb
push
jecxz
int
sub
xlat
cmc
popf
pop
xor
mov
shl
push
outsb
cmpsb
roll
imul
dec
repz
ja
push
xchg
jmp
ret
xchg
dec
pop
jle
test
adc
push
mov
aad
sbb
jle
rcrl
inc
out
jp
out
cli
pop
cmp
imul
xor
shrl
add
jne
std
pop
cmpsl
xchg
inc
push
not
xchg
cmc
add
les
pcmpeqd
cmc
mov
adc
sub
push
mov
cwtl
test
dec
popa
rcr
xlat
mov
jns
inc
mov
and
dec
fldcw
dec
xchg
xchg
not
xchg
cmp
xchg
arpl
shr
cmp
ret
andl
sarb
adc
aas
jl
lds
adc
leave
mov
add
xlat
daa
cmp
lock
mov
sbb
daa
push
shlb
fsts
xchg
sub
pushf
outsb
mov
mov
test
cmp
out
rcrl
shll
mov
and
sub
fcmove
imul
mov
pop
aad
cltd
sbb
xchg
pop
dec
mov
movsb
lcall
imul
dec
or
ficomps
rcrl
dec
or
cs
mov
std
sarb
fwait
sbb
jge
loopne
jmp
inc
aad
xor
aaa
rcrb
fisttpll
outsl
xor
lret
mov
jle
jmp
mov
int3
inc
sbb
add
and
inc
inc
shlb
sbb
movsb
xor
movsl
rorl
jo
cmp
push
ror
inc
add
fildll
pop
cld
int
out
gs
dec
js
dec
in
dec
fnclex
push
ret
into
call
inc
adc
xor
es
cmc
stos
jp
popf
ss
out
mov
cmc
in
adc
xchg
sbb
and
lahf
ret
cmp
cmp
xor
sahf
jns
fstpl
and
fs
loopne
pusha
jo
pop
leave
mov
outsb
es
or
mov
mov
cmpsl
shlb
mov
add
iret
cmp
aam
pop
cmpsl
rorl
lock
inc
test
aad
xchg
lahf
cmp
out
mov
adc
or
push
xchg
repz
movsl
add
or
aaa
sbb
mov
xor
push
popf
lds
lret
cmp
xchg
xchg
nop
int3
loopne
xlat
fucomip
xor
in
or
sub
lret
mov
sub
cs
pop
cmp
int
adc
xor
stos
mov
mov
adc
jg
sbb
inc
and
in
lcall
xor
sbb
ljmp
cmp
push
add
jnp
mov
fisttpll
addb
aad
push
test
cmp
push
sub
mov
push
sar
sbb
or
int
inc
mov
or
test
cmc
data16
jge
sub
lahf
loope
cmc
jno
cmp
into
in
cmp
and
sbb
and
mov
imull
sahf
jbe
js
adc
cmp
inc
call
mov
mov
mov
push
and
jecxz
dec
jns
lods
pop
loope
jp
xchg
inc
mov
cmp
hlt
in
ret
mov
mov
mov
ljmp
out
je
gs
adc
stos
cli
push
push
push
jb
cmp
adc
jl
ja
movsl
and
aas
les
out
push
fwait
or
leave
ljmp
lods
adc
scas
cmc
xor
fmulp
adc
cli
mov
testl
int
sub
cmp
xor
xchg
int
clc
xchg
pop
push
mov
popf
enter
popa
lret
sbb
xor
test
adc
sbb
xor
pop
cld
rcr
enter
xchg
out
mov
dec
outsl
jb
cli
jl
cmp
aam
movsl
stos
in
clc
inc
lret
or
fsts
stos
outsb
out
mov
mov
mov
mov
out
outsb
rcll
mov
jbe
add
fldt
or
addl
cmp
and
lds
ljmp
in
pushf
sbb
push
pop
jne
xor
in
cmp
jne
mov
mov
mov
jle
pop
adc
mov
lods
test
push
fsincos
cli
mov
dec
xchg
fdivr
call
out
movlps
sti
bound
sub
int3
in
push
adc
xor
test
jle
dec
out
into
jecxz
push
aam
sbb
hlt
cmp
repnz
icebp
cltd
mov
or
stos
jmp
sbb
aam
dec
test
test
jno
and
popf
inc
jg
cmpl
jg
fisubl
add
xchg
aam
lock
ljmp
cmpsl
fsts
div
xlat
mov
lods
insb
dec
xor
test
cmp
dec
cmp
sbb
jp
xlat
je
mov
rcl
jno
imul
negb
mul
lcall
lods
and
fidivs
or
shlb
sub
in
aas
imul
negl
data16
stos
pop
jo
mov
push
mov
sub
sub
sbb
jnp
dec
mov
hlt
cmpsb
pusha
subl
jmp
adcl
jns
mov
push
xchg
scas
xor
jmp
repz
mov
push
mov
je
jle
mov
test
sti
mov
push
in
xor
cmp
fildl
pushf
mov
cmp
cltd
or
mov
aaa
shl
ds
rclb
mov
iret
adc
pushf
mov
int3
adc
jg
push
int
inc
enter
aas
inc
sarb
add
push
add
mov
fwait
mov
pushf
ret
pop
push
sbb
fidivrs
mov
je
fsubs
notb
int3
aas
into
es
test
sbb
inc
and
xor
add
ret
aas
and
cmp
shlb
dec
jg
loope
popa
mov
xor
test
out
mov
or
ljmp
into
cmp
cld
lret
loope
sub
xchg
cmc
jbe
cmp
inc
push
cld
imul
outsb
lods
ret
test
push
fcoms
mov
clc
addl
push
in
adc
jb
popa
xchg
dec
jmp
in
and
inc
and
adc
sarb
ja
cmp
mov
es
test
pop
or
mov
lret
push
mov
xor
mov
jecxz
cli
sbb
or
mov
jb
pop
mov
mov
pop
je
pop
scas
xor
and
mov
push
jo
lcall
scas
mov
mov
pop
ja
repnz
push
in
inc
iret
xlat
test
aam
push
js
leave
repz
pop
rcl
sbb
loope
sbb
faddl
lea
jb
mov
pop
and
shlb
aas
pop
pop
jbe
mov
sbb
movb
scas
dec
stc
dec
rcrb
mov
pusha
push
insl
clc
or
and
test
push
cmpsb
jg
dec
and
push
test
shl
jbe
adc
mov
cmpsb
shlb
push
insb
mov
sbb
mov
dec
xchg
std
dec
push
addl
jmp
mov
enter
leave
aas
ficompl
stos
push
aaa
inc
inc
push
xor
inc
jl
popf
push
mov
into
pop
xorl
int
andl
sub
popa
push
repnz
mov
test
mov
sub
insl
inc
sbb
clc
ret
inc
imul
mov
sub
cs
sti
out
cltd
imul
dec
in
jns
dec
mov
ds
jno
xchg
test
leave
push
fstpl
sti
in
int3
mov
add
test
into
mul
mov
sub
test
sbb
jbe
dec
mov
sti
or
jle
je
iret
mov
add
in
outsb
outsl
xchg
imul
jbe
mov
mov
lahf
and
adc
lods
sub
mov
ficoms
xor
add
pop
inc
add
loopne
scas
cld
stos
imul
push
clc
sti
pop
mov
imul
stc
mov
sbb
movsb
loope
shll
or
shrb
adc
mov
pop
xor
push
aaa
shlb
scas
xchg
xchg
mov
outsl
sarb
fdivrs
sbb
cmc
cmpsb
mov
push
sub
sbb
adc
xor
dec
jp
sub
add
in
mov
push
ret
xor
in
jg
sub
add
sub
push
cmp
inc
mov
insb
dec
sahf
in
arpl
les
cmpsl
pushf
xor
in
filds
mov
pop
mov
es
or
dec
push
pop
stc
stc
ffree
and
cld
sbb
out
out
mov
and
mov
imul
pop
pop
jle
cli
or
cmp
mov
xchg
repnz
fdivrl
jmp
mov
out
push
add
sbb
sbb
scas
mov
adc
jp
cmp
pop
int
lods
lock
lods
jbe
xchg
cmc
push
and
fs
adc
sub
cmp
sbb
adc
or
push
mov
pusha
cmpb
shl
jge
fwait
mov
cmp
iret
mov
movsb
xor
jnp
sarl
mov
push
mov
mov
lret
cmc
pop
xlat
sbb
push
fisubl
push
ss
lret
mov
jno
pop
leave
mov
rcrb
rep
xor
mov
push
jno
ja
or
das
sbb
jg
xor
insb
xor
adc
jle
iret
les
cmpsl
mov
lock
fsubrs
sub
adc
scas
sbb
test
or
or
mov
je
stos
sub
cwtl
jno
sarl
std
loop
fs
loope
jge
mov
xlat
push
fisubs
sbb
dec
sahf
aaa
je
and
adc
popa
aad
push
rcrl
mov
mov
add
xlat
rcl
jo
daa
add
enter
lods
sahf
sub
cli
dec
enter
lret
pop
fsub
iret
sub
mov
mov
xor
push
xchg
lea
adc
leave
rcrl
cmpsl
sbb
mov
jge
push
rcl
add
jp
push
or
pop
pop
cmp
mov
xchg
xchg
into
lods
dec
in
jle
clc
sahf
xchg
fildll
pop
add
cmpsb
repnz
es
rol
ss
dec
jmp
cld
inc
ret
add
lret
out
inc
ficoml
pusha
sub
inc
mov
mov
lea
xchg
adc
jmp
pop
mov
dec
jl
popf
sbb
sub
push
sarb
dec
mov
fcmovu
mov
in
lock
pushf
xchg
xor
cld
stos
js
popf
xor
push
das
mov
mov
insb
inc
sub
mov
push
inc
loopne
test
movsl
jge
mov
or
stc
daa
sarb
jecxz
xor
push
out
sub
repnz
jecxz
dec
push
inc
push
test
insl
outsl
stc
insb
xchg
xchg
es
divl
in
sti
pop
mov
jo,pt
ret
cmc
mov
int3
daa
mov
data16
pushf
cmpsl
add
fcmovne
pusha
mov
pop
cmp
jge
loopne
imulb
adc
ja
mov
sti
repnz
movsl
daa
sub
mov
and
mov
pop
sub
je
mov
icebp
xchg
push
and
or
ja
sbb
dec
cmp
inc
pop
cmp
stos
sbb
jmp
int3
sub
xchg
fs
jmp
lret
test
loop
add
aad
push
xor
ret
push
jg
mov
mov
rolb
push
adc
jo
sbb
lret
push
clc
repz
fistps
dec
jp
pop
xor
cltd
in
mov
cmp
inc
stc
mov
dec
dec
cld
insl
jle
cltd
or
push
lret
ret
call
out
movsb
jg
ja
sub
and
jg
mov
imul
push
mov
mov
xchg
rclb
pop
jp
add
add
cmp
in
call
push
dec
dec
outsl
stos
pop
out
loope
out
pop
mov
mov
fdivs
cmc
fstl
sbb
int3
add
xchg
push
adc
xor
js
imul
out
aam
std
adc
pop
stos
pop
mov
push
shld
test
cmp
das
sbb
mov
pop
inc
sub
mov
cmpsb
loope
mov
subb
mov
neg
movsl
mov
inc
pusha
adc
aam
add
push
sub
stos
mov
sub
mov
xor
ja
cmpl
sbb
push
flds
cmp
jle
dec
daa
mov
out
xchg
inc
mov
pop
jmp
pop
fdivrp
mov
popa
ss
add
cli
daa
ret
sbb
adc
adc
div
push
scas
movb
mov
pop
xchg
or
xorb
aas
cmp
int3
pop
sarl
cmp
pop
movsb
pop
add
daa
gs
cs
out
cmp
cmp
adc
sahf
stos
mov
mov
mov
scas
int
push
pop
xchg
out
in
jae
mov
mov
andb
lret
test
call
sti
mov
sbb
xchg
ja
jl
out
aad
sahf
popa
xor
push
dec
add
sbb
push
sti
cli
push
inc
sub
aam
push
lcall
pop
loop
xchg
lock
add
sub
addr16
dec
pop
aad
xlat
sub
fwait
js
ljmp
out
dec
inc
mov
or
jecxz
test
xchg
inc
cld
pop
pop
push
repz
cmpb
jno
and
fmul
mov
mov
pop
sub
stos
aas
xchg
push
arpl
sahf
into
mov
xlat
scas
clc
pop
fnstsw
repnz
mov
insb
dec
jae
lahf
mov
adc
fwait
jno
les
add
test
xchg
scas
push
push
imulb
pop
add
push
subl
lahf
mov
decl
pop
and
stc
mov
arpl
sub
ljmp
neg
lret
cmp
xorl
inc
into
xchg
or
outsb
stos
mov
int3
scas
js
lods
add
or
cs
add
add
pop
cld
notb
or
out
jmp
movsb
dec
dec
xor
sbb
aam
and
rclb
insl
ret
push
sub
out
call
lahf
sbb
leave
imul
pusha
jmp
sbb
hlt
inc
imul
and
and
push
pop
sub
inc
lret
mov
je
lcall
mov
mov
in
and
imul
rcll
mov
dec
add
or
sbb
jle
inc
xor
pop
inc
mov
aaa
mov
sub
int3
fisubs
aam
inc
pop
insb
sbb
xor
add
int
in
inc
cmc
mov
movl
les
sarl
push
and
inc
xchg
shlb
negb
push
jno
test
jle
roll
and
lcall
and
xchg
push
push
in
in
sbb
negb
ucomiss
pop
out
es
in
mov
and
std
push
imul
jo
mov
inc
mov
into
xchg
ss
aad
adc
das
and
fmull
out
fmul
mov
xor
notl
shr
out
int
sub
pop
jp
dec
inc
rcrb
cltd
xor
push
cli
or
dec
addr16
fsub
pop
scas
inc
mov
enter
or
or
iret
call
ljmp
and
push
test
push
jns
push
jne
out
and
mov
test
cmpsl
pop
xor
jbe
or
jle
xchg
shrl
mov
enter
fisubrl
out
or
mov
jmp
cld
insl
imul
cmp
mov
imulb
mov
scas
cmp
data16
js
xchg
fisttps
movsb
dec
das
popa
sbb
adc
inc
scas
movsb
int3
daa
cli
pop
add
cmc
ljmp
stos
sub
les
sbbl
add
inc
or
add
fmull
xchg
std
inc
outsl
cmp
fidivrl
fdivl
gs
sti
pop
ficomps
cli
mov
adc
push
xlat
mov
insl
jmp
adc
mov
mov
mov
push
hlt
out
cmpsb
fstl
sbb
xchg
jno
mov
pushl
out
mov
enter
lahf
ficomps
and
and
imul
popa
jne
sbb
mov
xor
cmc
mov
ret
dec
jne
pop
test
cmp
jno
and
sub
enter
mov
fistps
push
xchg
push
push
pop
inc
mov
push
outsl
addr16
or
lods
adc
add
jge
jp
or
pop
dec
sbb
add
push
dec
outsl
in
add
sub
jmp
stc
mov
sahf
push
sbbl
jge
cli
leave
dec
movsl
popl
mov
mov
mov
mov
mov
popa
push
mov
push
call
fbstp
and
adc
std
adc
cmpsb
xchg
loop
push
in
xchg
dec
xchg
mov
dec
pop
lea
das
ret
pop
lods
in
hlt
mov
xchg
das
push
lahf
filds
cmp
mov
mov
jno
data16
fsub
inc
xchg
rclb
push
loop
shll
movsb
cmp
pop
jb
sti
xor
cmc
mov
aam
cli
push
popf
pop
add
inc
insl
inc
lcall
into
stc
hlt
mov
test
cmp
popf
clc
shll
stc
inc
and
pop
imul
mov
lahf
out
fistps
and
std
rol
dec
xor
in
int
jle
pop
gs
call
inc
xchg
sub
leave
fdivrl
rcll
mov
mov
insl
jne
mov
xor
in
cwtl
mov
mov
pop
and
mov
jl
icebp
push
das
imul
cmpsl
das
rorl
movl
xchg
jae
je
in
sub
lcall
sbb
mov
cwtl
pop
cmp
jne
icebp
jb
fdivl
fwait
sub
cs
dec
add
cmc
add
push
mov
pushf
xorl
into
daa
popa
lods
and
adc
push
mov
mov
aad
fimull
and
addb
stc
add
xchg
repnz
pop
cmp
xchg
xchg
daa
fiaddl
inc
cvtps2pd
ret
xchg
or
sarb
cmpsb
sub
sahf
repnz
jl
fs
pop
cmpsb
insl
test
shlb
gs
cmpsb
adc
iret
mov
pop
cmp
mov
scas
push
add
rcrl
cmc
int
dec
push
addr16
test
aas
cltd
mov
es
adc
dec
icebp
cli
adc
mov
cmpl
xchg
dec
jno
mov
cld
loope
jmp
xor
aas
imul
xchg
or
xchg
int
mov
inc
insb
ja
mov
cmp
mov
std
nop
sbb
xchg
arpl
rolb
mov
in
je
jnp
jp
out
gs
sarl
ret
movsb
mov
add
insb
in
push
pop
mov
int
andl
stos
mov
subl
lahf
gs
cwtl
in
lods
pop
sahf
inc
pushf
dec
cmc
aas
in
mov
mov
jne
mov
inc
pop
jecxz
jp
and
push
inc
add
aad
andb
xchg
loop
cmp
lcall
incb
ss
shlb
cmp
push
rcl
shr
imul
dec
jge
mov
xor
cmpsl
stos
inc
xchg
insb
push
sbbl
mov
out
pop
ljmp
xchg
outsl
sbb
repnz
cmc
roll
jecxz
pushf
push
inc
lcall
inc
xchg
mov
pop
je
and
mov
mov
sahf
loopne
int3
fsubp
sub
jns
mov
adc
hlt
js
scas
mov
jb
adc
add
sub
cmp
add
mov
dec
movaps
mov
pop
inc
int
cli
lods
pop
rol
shlb
sbb
mov
sahf
mov
or
pusha
add
sbb
js
mov
mov
loope
add
dec
and
movsb
out
xlat
mov
xor
daa
inc
jmp
adc
mov
loop
lods
mov
bnd
jo
add
iret
pop
mov
add
mov
outsl
mov
gs
mov
cmp
mov
mov
inc
inc
push
es
xor
loopne
test
pop
and
jmp
xor
sbb
pop
cmp
xchg
mov
out
cmp
mov
jecxz
jl
push
call
shlb
enter
int3
xchg
pop
lret
int
cltd
jb
jno
and
pop
sbb
cmp
mov
mov
sti
ficomps
insl
or
outsl
int3
sub
mov
aas
scas
notl
clc
les
cld
inc
stos
jge
jb
push
imul
stos
scas
xchg
inc
mov
mov
xor
push
ret
mov
stos
test
mov
mov
add
pop
mov
movsl
and
or
shr
sbb
jl
jb
jbe
lret
lcall
mov
sbb
fisttpl
pop
xlat
inc
test
pop
xor
mov
push
jo
rorl
iret
pop
cli
sub
loope
out
adc
lahf
push
or
push
pop
lret
repz
out
mov
mov
cld
outsb
vhaddpd
cmp
xchg
inc
mov
adc
mov
cmp
push
ficomps
jp
test
xchg
dec
adc
xchg
add
mov
jne
or
or
std
test
and
xchg
xor
mov
jae
stos
cld
mov
fadd
mov
jbe
jno
add
or
mov
in
imul
mov
mov
dec
or
adc
shrb
cmp
lods
pop
push
enter
subl
lods
push
pop
pop
add
mov
arpl
inc
inc
cltd
inc
xchg
in
add
sub
push
jge
adc
outsb
ss
shlb
or
pop
iret
sarl
push
mov
vpbroadcastd
jo
mov
lahf
addb
and
add
out
ja
mov
outsl
push
aaa
fdivrl
pop
and
jnp
mov
pushf
rcrb
stos
xchg
insb
xchg
loope
xor
ficomps
cmp
das
add
inc
clc
aam
push
popa
sub
lcall
jb
popf
push
mov
outsb
cmp
cmc
ror
shr
cld
cmp
or
mov
add
mov
xor
jp
add
daa
inc
pop
jb
and
or
push
cmp
sbb
xchg
mov
mov
or
leave
add
in
mov
lret
leave
add
add
js
sbb
cltd
mov
jp
ss
std
sbb
ja
lea
push
arpl
lret
negb
mov
mulb
cwtl
in
imul
fwait
repz
into
jb
sub
nop
or
mov
lds
fnstenv
push
cs
mov
ds
mov
stc
jmp
mov
mov
dec
arpl
or
rcl
mov
add
sbb
and
pop
mov
fstl
shll
data16
inc
xorb
and
jns
fnstsw
xchg
xchg
or
or
movsl
in
push
mov
adc
dec
test
add
test
sbb
xchg
mov
mov
lods
cmp
jnp
jge
sub
in
fsubs
xchg
jo
sarl
push
dec
xchg
push
cld
dec
out
stos
enter
cmpl
add
int3
aas
not
int
out
pop
shl
xchg
sub
and
mov
push
adc
fldt
mov
aad
aad
xchg
arpl
insl
ja
popf
bound
mov
cwtl
sbb
movsl
outsb
push
sub
inc
into
lcall
cmp
mov
lret
int3
sahf
addr16
icebp
aas
int3
add
out
or
adcl
aad
js
jl
push
imull
pop
sub
mov
clc
jnp
mov
dec
pop
rcll
ljmp
shll
mov
xor
mov
cltd
sub
stc
fstpl
vphadduwd
xchg
xor
aad
ja
xor
fimuls
lds
mov
js
mov
les
adc
and
xchg
mov
sbb
fdiv
pop
outsl
inc
arpl
xchg
leave
jns
fimull
pusha
test
xor
xchg
out
and
mov
aam
mov
sbb
sub
xor
adc
inc
daa
fisttpl
push
mov
lods
jne
mov
xor
pop
fsubrs
scas
pushf
mov
or
cmc
pusha
dec
mov
mov
jno
xchg
std
daa
inc
insb
push
add
lret
das
icebp
cmc
sub
ds
sbb
mov
pushl
jnp,pt
les
mov
lods
xor
subb
or
jbe
stos
ret
cmpsb
lahf
or
mov
mov
les
dec
aaa
lret
popf
add
jmp
xor
popa
mov
scas
hlt
jecxz
jae
mov
xor
mov
daa
xchg
loopne
jecxz
dec
cmpsl
cmp
pop
pop
jmp
gs
adc
mov
xchg
push
mov
imulb
mov
cs
flds
lcall
cltd
es
fcoml
and
mov
adc
test
add
in
loope
add
xchg
aas
leave
pop
sbb
int
and
cld
in
es
cli
rcll
int3
xchg
push
mov
mov
pop
inc
xor
xchg
fistl
rcrb
sbb
insb
daa
cltd
mov
jmp
in
sbbb
out
invd
cmpsb
call
setp
mov
mov
out
lcall
pop
xchg
and
dec
mov
dec
insb
rol
stos
pusha
out
out
stc
add
shrl
cli
popa
and
out
mov
lret
mov
pop
daa
xchg
xor
aam
test
or
jge
jle
stos
push
test
sub
add
mov
xor
pop
add
popf
call
and
jb
inc
pop
sbb
cmp
cmp
push
lea
jnp
iret
dec
dec
ljmp
cmpsb
iret
in
rcrl
and
pop
xchg
sub
stos
in
imul
into
jmp
pop
pop
and
loop
test
jb
cmpsb
pop
mov
pop
out
jnp
out
test
shlb
mov
pop
js
fcompl
jb
mov
stos
xchg
pop
mov
out
jne
popf
fs
lock
fs
adc
enter
push
and
addl
scas
fistl
insb
adc
mov
dec
fbld
xchg
sahf
jg
sbb
rcrb
cmp
fsubrl
jae
jge
aas
les
jae
test
push
dec
dec
mov
inc
out
mov
ror
lret
sub
or
pusha
pop
add
push
xor
cmp
mov
popa
jp
jg
scas
or
cmp
mov
jno
cmp
mov
dec
jnp
dec
call
mov
imul
fstl
popa
mov
xchg
mov
enter
adc
lret
lcall
add
jmp
pop
push
fisubl
aad
cmpsb
add
jmp
das
sbb
dec
cmp
adc
out
push
pop
mov
sbb
cmp
cmp
inc
dec
or
mov
cltd
pop
mov
xchg
cmp
lret
xorb
fisubl
out
cltd
cmp
int
sub
mov
fisttpl
icebp
rol
xchg
pop
cmp
cmp
ds
mov
xchg
inc
jl
xchg
inc
push
in
bnd
lcall
jecxz
add
cmp
xchg
mov
das
cmpsb
std
fs
inc
push
fistps
mov
insl
in
xchg
in
or
mov
aam
inc
lret
mov
adc
test
movl
inc
mov
cs
enter
ljmp
dec
mov
xchg
and
push
insb
or
sub
cmp
xor
shll
out
int3
adc
pop
stos
mov
loopne
jb
mov
arpl
cmp
aas
pop
and
xor
idivb
fwait
lods
addr16
xor
sbb
lea
xor
jge
out
mov
sub
push
sub
push
jp
cld
jg
pop
xlat
mov
mov
pop
jnp
xor
sbb
insb
fildl
test
mul
into
add
push
cld
call
xchg
ret
push
fistpl
addr16
call
test
aas
pop
out
ss
push
or
push
mov
je
rcll
pop
popa
push
xor
cmpsl
xchg
in
cwtl
jmp
cmp
repz
mov
inc
push
mov
mov
or
xor
pop
arpl
leave
mov
in
pop
jmp
push
cmp
or
or
lds
loop
in
push
dec
mov
nop
mov
rorb
sti
ljmp
jae
jle
cmp
sub
lret
enter
and
xchg
dec
pop
lea
in
mov
sub
data16
popa
adc
imul
frstor
jp
jmp
cli
sub
arpl
stc
adc
dec
cmpsb
jle
rcpps
xchg
lods
push
xchg
and
in
push
jmp
and
xchg
loope
testl
cmp
insb
sbb
push
mov
ret
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
movl
xor
or
mov
and
lea
mov
push
adc
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
lea
mov
or
mov
and
mov
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
addl
mov
add
sbbl
push
xor
mov
mov
movzbl
sub
mov
mov
adc
xor
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
movl
cmp
movl
jne
push
jmp
mov
movzwl
mov
cmp
jne
mov
incl
xor
add
mov
adcl
mov
mov
xor
sbbl
add
imul
and
mov
andl
xor
add
cmp
movzbl
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
jmp
imul
stos
sbb
or
pop
jl
dec
pop
jl
stos
sti
pop
add
loop
dec
sbb
popf
ja
dec
aad
jb
pop
hlt
cli
daa
lea
add
or
or
lods
stos
js
mov
data16
mov
mov
test
das
fisubl
and
dec
mov
loope
pop
jb
inc
pop
sub
sub
aam
xlat
fsubl
pop
ds
cld
aaa
inc
xor
or
xor
xor
pop
jle
jp
clc
sbb
pop
lret
mov
inc
out
repz
stos
jle
push
cmp
xchg
cli
mov
das
push
outsl
xor
in
adc
dec
and
jge
insl
mov
mov
fwait
aas
mov
enter
pop
mov
mov
dec
gs
out
jle
xor
int3
sub
daa
loopne
leave
push
lea
sub
xchg
mov
rol
leave
fldl
mov
ljmp
xlat
mov
je
inc
call
or
cwtl
jl
mov
sarb
outsb
sbb
inc
mov
cltd
mov
xchg
shll
out
push
add
sub
mov
mov
divb
dec
loope
xchg
pop
push
jmp
sub
ljmp
rcrb
inc
cmc
adc
sahf
imull
loope
sbb
aaa
sbb
dec
push
repnz
pop
lcall
pop
xchg
lret
push
mov
lods
jmp
sbb
daa
clc
outsl
mov
mov
leave
jo
xchg
in
stc
int
push
popa
and
xlat
jl
in
jmp
sub
mov
ja
in
aas
stc
mov
jl
cmpsl
xchg
das
scas
jmp
sbb
lods
mov
sahf
lods
mov
xchg
jns
push
clc
add
jb
popa
dec
pop
xchg
icebp
sbb
pop
mov
std
repnz
lods
jbe
sbb
and
lret
nop
mov
dec
xor
movsb
mov
or
xor
cmpsb
test
sti
jo
xchg
out
in
sub
xor
test
test
stc
ret
mov
cltd
movsl
adc
inc
aaa
adc
mov
movsl
mov
loope
xchg
cmp
stos
bound
bound
xor
cmp
mul
push
cli
push
stc
mov
xchg
jle
ja
ret
cmpsl
lds
movsb
and
ficoms
popa
adc
and
rorl
push
mov
pop
mov
imul
cld
in
out
inc
mov
andb
xor
add
shrb
ds
mov
push
es
cmp
jg
aaa
movl
add
cmp
and
mov
and
cmp
adc
pop
sub
and
ja
xor
test
fnstenv
dec
sbb
lret
rcr
cmp
imul
test
xchg
lret
push
loop
mov
and
push
repnz
imul
loop
aad
cmpb
insl
pop
inc
rcl
sub
add
cld
pop
scas
loopne
aam
mov
inc
cmc
add
pop
xchg
sub
call
xor
imulb
gs
cmp
out
pushf
js
mov
or
push
cltd
cmp
push
xor
jecxz
fs
ljmp
cmp
out
and
ja
ret
je
ja
sub
hlt
inc
ret
xchg
clc
ljmp
sti
push
cwtl
ljmp
loop
imul
jb
lds
daa
mov
cmp
xchg
mov
es
ficoml
fdivr
cmp
insb
fidivrs
xchg
push
mov
push
mov
jnp
clc
xchg
add
mov
or
in
fsqrt
xor
lods
fistl
sub
pop
in
push
fstps
call
dec
loopne
loope
ljmp
push
or
es
push
sub
cmp
mov
stos
jmp
mov
pop
push
fldcw
push
test
addr16
xchg
dec
out
fs
das
xor
lahf
xor
and
je
and
jmp
fldenv
jbe
jbe
cmp
test
inc
pop
call
mov
ds
mov
xchg
ljmp
cmp
pop
push
cmp
cmp
les
cmp
sarb
jo
mov
jns
movsl
cmp
and
sub
shrb
cmp
dec
jns
mov
test
push
push
ja
cmp
lods
jo
sbb
sub
rcr
fcmovne
mov
sahf
inc
data16
pushf
add
pushw
jecxz
dec
in
mov
mov
inc
sub
or
cmpsl
arpl
jg
adc
cli
test
das
inc
lods
mov
in
sbb
frstor
mov
testb
push
lahf
out
out
adc
dec
aam
and
icebp
adc
int3
pop
push
jl
mov
stos
daa
ljmp
pop
call
lcall
xchg
xor
jmp
popa
mov
cmp
sbb
std
repnz
and
shl
js
pop
inc
xchg
push
mov
nop
mov
loope
adc
push
and
mov
in
fcomps
cli
push
jp
fiaddl
lcall
dec
aam
pop
outsl
xor
test
add
jne
and
dec
cltd
out
fwait
cmp
fld
adc
mov
pop
inc
sub
daa
hlt
fidivrl
inc
icebp
in
sarb
inc
inc
out
push
push
fdiv
push
loope
fcomps
cwtl
xchg
frstor
mov
ds
push
jnp
ss
jmp
cmpsl
icebp
shl
pop
xorb
out
add
iret
divl
pusha
ss
mov
mov
or
pushf
fs
into
pop
stos
adc
cwtl
adc
fstl
mov
lret
fstl
mov
push
leave
out
fnstcw
sub
mov
add
out
inc
shrl
adc
xorl
adc
shlb
lods
mov
repnz
xor
pop
aaa
sub
pop
lds
jg
test
icebp
lock
pop
ja
cltd
adc
rorl
fwait
jbe
shrb
lock
inc
inc
popf
jnp
inc
cmp
addr16
imull
int
popf
push
adc
clc
jg
mov
dec
sar
dec
popf
bound
outsb
mov
es
sub
int3
mov
loop
in
out
pmaxsw
mov
sub
jecxz
aaa
push
adc
cld
insl
ss
rclb
scas
xchg
inc
mov
subl
inc
jbe
pusha
movsl
inc
jp
lds
cmp
pop
sbb
pop
xchg
sbb
pop
das
clc
push
xor
mov
fsincos
fcomps
mov
out
es
push
test
in
or
pop
fiaddl
cmpsl
cmp
out
xchg
add
ljmp
sub
fiadds
or
je
push
cmpsb
pop
fdiv
xchg
sahf
adc
test
sahf
fildl
xchg
push
inc
shrb
or
and
enter
mov
in
repnz
fnsetpm(287
add
and
std
into
and
data16
xor
dec
inc
pop
out
push
adc
test
pop
sbb
repz
jns
xor
mov
les
shrl
aas
int
mov
xor
adc
pop
fadd
fiadds
aas
jno
pop
adc
jnp
adc
xchg
cmp
push
fists
ret
insb
rcl
in
pop
inc
sti
ds
imul
movsl
inc
outsl
iret
jge
sub
neg
sbb
push
nop
fstpl
pop
stos
sub
pusha
push
mov
mov
pop
in
push
shrl
mov
subb
mov
xchg
push
cmpsb
notb
fdivrs
pushf
cli
arpl
popl
pop
sbb
test
sti
daa
inc
sahf
mov
and
cwtl
dec
call
leave
fstpl
sub
dec
mov
ds
cmp
cwtl
cmp
adc
jge
or
shlb
mov
mov
lea
outsl
cmovb
dec
xor
xlat
daa
mov
jae
pop
aam
insl
insl
pop
aam
mov
or
inc
ret
pusha
imul
dec
lods
cmc
inc
push
mov
pop
divb
pop
cli
ds
push
cli
pop
sub
test
movsl
ds
add
fistpl
adc
lds
ss
and
nop
fidivrs
push
fldcw
stos
pop
sti
int
lds
mov
ret
in
xor
pop
inc
cmpsl
sbb
nop
repz
mov
or
js
fistl
add
or
sbb
inc
jnp
push
sbb
insb
pop
or
jbe
repnz
call
and
mov
sub
push
xchg
les
scas
lret
mov
jo
divb
fwait
adc
ljmp
mov
into
ljmp
or
sub
jecxz
stos
sarb
push
in
mov
in
and
imul
push
sub
inc
pop
mov
mov
cmpsb
cmp
pop
or
hlt
aam
mov
xor
xchg
pop
fcomi
sti
mov
pop
lods
call
mov
dec
scas
inc
call
mov
xchg
lods
inc
lret
dec
mov
ja
fldenv
daa
pop
push
and
out
xchg
push
cmc
ljmp
jbe
add
jge
sarb
and
xchg
mov
mov
scas
inc
punpckhbw
mov
cmp
out
add
mov
in
inc
push
jp
aam
xor
sub
pop
and
jecxz
gs
in
popf
cltd
xor
mulb
or
xchg
cmp
dec
in
xor
lods
rcrb
pusha
sub
popf
lcall
cli
and
loope,pn
aam
and
push
push
jmp
imul
mov
std
pushf
imull
divl
popa
adc
mov
mov
pushl
aaa
ds
nop
lods
lret
sub
je
xchg
test
inc
aas
pop
cmp
lea
fs
popa
xor
fsubrs
mov
sarb
sub
or
rol
mov
rorl
cmpsl
cld
cmp
jns
xchg
push
cld
out
dec
subl
cmp
data16
xchg
cmpsl
pop
pop
inc
test
pop
out
mov
mov
mov
pop
jge
popf
push
ss
imul
or
pop
inc
out
adc
and
aaa
shll
in
repnz
jge
subl
cmp
jge
xor
in
aaa
aas
push
or
adc
and
cmp
outsl
mov
add
xor
pop
xchg
les
scas
push
pop
cltd
push
cwtl
ds
daa
and
movsl
lods
repnz
sbb
pop
imul
or
outsb
cmpsl
xchg
mov
mov
cmp
push
xor
movsb
mov
push
insb
cli
dec
dec
fdivrl
xor
jl
addr16
pop
jne
cli
push
addr16
ja
jnp
filds
inc
lea
sahf
push
aas
adcl
shlb
inc
mov
jle
loope
lret
ja
js
sub
xor
xor
addl
mov
dec
repnz
sub
gs
push
pop
subb
pop
jnp
sahf
add
xor
lea
xor
mov
pop
std
inc
popa
dec
ret
ret
cld
mov
mov
and
inc
mov
out
jns
pop
in
repz
push
push
sbb
movsb
pop
lcall
fisttps
or
ret
mov
add
push
lock
aas
and
and
sub
mov
stos
cli
add
mov
mov
xchg
inc
mov
push
mov
add
lahf
dec
rcll
rcrl
shl
push
mov
rcll
dec
fstpt
mov
cld
out
adc
fstpl
lods
sub
sub
arpl
xor
test
ds
cmp
push
es
fdivrs
push
movsb
int3
ret
ror
add
iret
push
ret
sbb
mov
dec
ret
scas
xor
push
pop
xchg
adc
mov
shlb
ljmp
sub
push
aad
inc
inc
out
sti
out
daa
cmpsb
inc
push
addl
pop
jmp
xor
inc
sarl
lea
lods
lods
push
mov
rcll
sub
adc
das
int
cs
enter
testb
dec
add
aas
fsub
mov
out
jb
dec
xchg
stos
icebp
mov
or
mov
mov
xchg
in
mov
jo
ja
scas
mov
imul
lea
imul
push
movsl
int3
xchg
insb
scas
push
jb
add
adc
mov
out
fdivs
mov
ret
and
or
shrb
sti
sti
sahf
jmp
aaa
int3
jl
or
lock
xchg
fcomip
popa
add
xchg
cld
inc
cmpb
mov
add
jg
pop
js
pop
in
sahf
mov
shl
ja
in
mov
sbb
icebp
imul
xchg
mov
push
insb
pop
shll
in
inc
or
adc
add
cmp
mov
outsb
xorb
out
mov
data16
mov
insl
insl
icebp
push
push
cld
js
mov
fcmovnu
and
sbb
and
mov
and
repz
cld
xchg
out
enter
into
mov
xchg
jne
or
dec
xchg
or
shl
mov
and
dec
or
jp
lahf
and
xchg
xor
cmp
cld
cmp
pop
aam
jecxz
adc
jne
in
pop
rcr
mov
fildll
add
xchg
loope
jp
imul
sub
inc
fwait
xchg
adc
mov
hlt
xor
cmp
mov
loopne
stos
jle
adc
cmpsb
stos
mov
inc
add
jnp,pn
cld
push
or
dec
adc
dec
cmp
clc
test
cli
xor
dec
hlt
aas
dec
out
add
mov
push
push
mov
ss
cmp
add
movsb
in
lods
sti
mov
cmpsl
fdivl
shl
push
scas
notl
xchg
sahf
xlat
jnp
dec
iret
or
jno
insb
xchg
mov
dec
iret
jnp
push
sub
mov
cmp
out
jge
add
jp
das
xor
les
imul
cmpsl
xchg
cmp
jmp
mov
xor
bound
cmpsb
arpl
dec
sbb
popa
ret
adc
jns
imul
js
xor
outsl
gs
or
popa
adc
scas
sub
or
imulb
clc
and
or
clc
jle
icebp
dec
test
inc
push
test
xchg
ss
gs
push
int
test
aam
mov
test
sbb
inc
outsl
cmp
pushf
jg
inc
sbb
popf
call
stc
pop
in
dec
sub
push
jp
loop
mov
or
das
rorl
js
fs
jge
or
in
scas
pop
mov
cmpl
jp
adc
mov
sub
mov
sbb
dec
subl
fwait
js
cmpsb
mov
mov
mov
mov
xchg
jno
mov
bound
dec
idivb
loope
xor
add
xor
jecxz
imul
push
mov
nop
jmp
sub
jmp
pop
mov
mov
inc
test
cmc
js
mov
jne
or
xor
push
fcmovnb
sub
sub
push
mov
sbb
push
sub
arpl
mov
mov
test
cltd
inc
jns
xchg
out
pop
jecxz
in
f2xm1
mov
movsl
inc
sbb
aaa
lret
xchg
fsubs
mov
lahf
leave
sub
sbb
add
data16
stc
fbstp
adc
fndisi(8087
test
stc
adc
xchg
xor
call
lock
xchg
repnz
cmp
add
mov
sbb
or
sbb
sarl
jo
stc
rcll
push
jle
dec
add
push
ds
adc
in
cmp
test
mov
jae
out
sbb
push
data16
clc
fildll
and
xlat
lods
sbb
pusha
into
xlat
jl
sbb
inc
lock
jns
xor
pop
addl
jne
leave
push
cmp
add
nop
aam
imul
adc
xor
ljmp
fstpl
xor
stos
scas
add
mov
mov
test
int3
xchg
sbb
mov
pop
mov
xor
push
xor
or
inc
jne
cmp
inc
pop
push
mov
push
add
imul
sti
jge
add
push
sub
jge
sahf
lods
in
sarl
shrl
mov
aas
sarb
fsubp
inc
hlt
call
pop
hlt
xor
loop
or
icebp
in
les
ret
dec
mov
push
pop
test
inc
lea
jne
push
aas
jnp
jno
insl
cmp
cmpsl
orb
push
arpl
push
out
lea
popa
pushl
jb
pop
scas
jmp
add
idivb
jo
xchg
dec
push
test
cmp
subl
daa
and
inc
or
cmp
push
push
mov
xchg
ds
and
jmp
aam
push
fisttpll
inc
pop
insl
es
mov
mov
lods
push
loop
jno
int3
xchg
lds
loope
lcall
testl
fwait
lock
mov
lahf
inc
fwait
sub
je
das
int3
fyl2x
inc
pop
mov
insl
mov
cmp
jne
cs
lods
or
les
leave
stos
in
ljmp
sub
and
pop
test
std
xchg
cmp
sbb
jmp
push
sbb
pop
jle
pop
test
cmp
hlt
mov
xchg
xchg
inc
out
in
xor
aad
test
cmc
push
inc
divb
jns
push
rcrb
xor
mov
lahf
and
mov
push
inc
mov
jae
cmp
dec
jo
mov
push
cltd
insb
cmpsb
ja
mov
cltd
rolb
stc
sbb
or
mov
cmpsb
xchg
scas
xor
rorb
and
out
adc
addr16
inc
pop
push
adc
mov
fcompl
and
mov
inc
mov
stos
sub
imul
mov
in
pop
and
into
scas
pop
add
ja
fucomp
mov
xor
cmp
dec
jecxz
pop
adc
mov
out
mov
daa
mov
loop
pop
xlat
aaa
add
dec
adc
ds
pop
rcl
into
rorl
cmp
fbld
and
mov
inc
add
mov
adcb
je
inc
out
mov
or
cmpsb
jnp
adc
xsaveopt
jne
cli
cmp
ret
sbb
mov
pusha
shl
aaa
jo
adc
and
xchg
mov
push
outsl
outsl
dec
in
mov
xor
jecxz
xor
push
mov
notl
les
sti
jl
or
arpl
jbe
int
das
nop
dec
push
or
push
andb
in
fbstp
fldt
jb
sub
mov
inc
xchg
xor
mov
pop
repnz
lret
into
and
inc
mov
mov
sti
mov
cmpsl
or
aas
mov
pop
xchg
insl
cwtl
js
sti
loopne
int
lock
mov
dec
stc
xchg
mov
cli
loopne
lret
test
out
mov
sub
stos
mov
divl
push
xchg
cmpsl
in
inc
push
aaa
cli
sti
lods
cmp
cmp
mov
sub
pop
fsts
movsl
out
sub
xor
pop
xchg
mov
pop
mov
mov
xchg
aaa
mov
xor
imul
aaa
mov
mov
js
jnp
lahf
shrl
pop
shll
adc
dec
sarl
cltd
add
and
adc
insb
mov
in
imul
push
scas
sbb
cmpsb
div
or
repnz
outsl
ljmp
adc
popf
in
pushl
adc
out
dec
and
hlt
cmpsl
mov
xor
add
clc
jo
adcb
inc
jmp
filds
shrb
jecxz
xchg
xchg
jb
imul
and
notl
lds
or
jle
out
fistpll
mov
loop
daa
pop
mov
add
xchg
mov
xchg
mov
or
das
sbb
icebp
fisubl
mov
push
lret
adc
dec
sbb
sbb
push
pcmpgtd
icebp
stos
push
js
les
insl
out
iret
jg
pop
sbb
push
lret
jae
out
lea
push
cld
mov
out
inc
xchg
lods
mov
sub
bound
icebp
add
mov
push
mov
addl
or
aas
mov
mov
sub
js
rcrb
mov
and
pop
in
fcomp
push
xor
push
pop
dec
mov
dec
inc
iret
xchg
add
push
xchg
jp
sub
inc
jmp
lods
and
add
or
ja
jo
in
insl
inc
pop
mov
jge
dec
and
cmp
rcr
xorb
push
inc
jg
push
mov
push
mov
mov
adc
cmpsb
push
lods
mov
sbb
mov
xchg
lret
xor
mov
jae
pop
add
push
inc
and
imul
jp
in
inc
fldl2e
das
imul
sbb
jge
test
push
je
mov
iret
adc
add
imul
xor
lods
or
dec
jne
add
push
in
push
add
loope
ljmp
sar
xchg
jbe
ficompl
adc
les
dec
jae
mov
into
lcall
xchg
dec
ss
jl
jnp
lcall
sub
cmp
rcrb
sub
mov
test
lock
jbe
insb
andb
outsb
jb
shlb
sub
out
adc
adc
mov
and
dec
leave
push
push
push
or
push
ret
sub
fstps
pop
sbb
dec
adc
jg
sub
adc
adc
pop
neg
movswl
and
mov
pushf
push
outsb
popa
mov
mov
xchg
pop
jb
test
es
aaa
lds
jnp
jg
push
inc
adc
cld
xor
ja
or
mov
fwait
iret
pop
push
fwait
xchg
jle
mov
inc
ret
xor
cmp
sub
in
stc
pop
cmp
or
addb
add
loopne
pop
loop
jg
outsl
pop
cwtl
inc
xchg
or
aas
push
mov
lods
jl
inc
lahf
xchg
push
mov
stc
inc
fists
sub
enter
iret
stc
push
test
add
xlat
pop
or
xchg
repz
cmp
jb
test
cmp
sbb
nop
stos
mov
fbstp
mov
jnp
or
xor
hlt
or
test
orb
or
dec
xchg
push
dec
jno
int
mov
sub
dec
imul
aad
or
aad
xor
fldenv
js
adc
leave
or
xchg
aaa
push
stos
and
xchg
xchg
jb
sahf
push
ror
xchg
xor
loope
addr16
loope
mov
pop
loope
mov
push
fidivrl
add
pop
in
sub
adc
dec
pop
mov
leave
lcall
jmp
cltd
sbb
lret
adc
mov
xchg
sub
push
addb
lea
data16
ljmp
push
pop
fs
jl
jg
mov
mov
lock
fimull
cmpsl
movsb
jle
loopne
fs
out
pop
adc
mov
mov
pushf
sub
inc
stos
mov
iret
lcall
adc
mov
mov
and
xor
dec
xchg
sbb
call
cmc
xor
cmp
clc
and
arpl
mov
jge
stc
xchg
lcall
ds
xor
sbb
fisttpll
mov
testb
ljmp
or
fdivr
lds
addr16
fidivs
push
xchg
insl
lea
hlt
xor
arpl
fs
cs
in
jp
sbb
mov
inc
lret
push
dec
jbe
cmovb
test
mov
mov
cs
sar
push
xchg
scas
lds
out
mov
push
push
aad
adc
jnp
sbb
xor
jg
addb
shlb
mov
add
mov
and
in
jns
rcl
lcall
pop
jg
lock
rorb
lods
fs
fs
jge
pop
pop
mov
jno
sbb
movsl
sbb
mov
hlt
pop
stc
sbb
mov
sub
sbb
mov
cs
jb
mov
imul
mov
jl
out
sti
dec
or
add
adc
sbb
cld
loope
outsl
pop
push
mov
jp
cwtl
leave
xlat
mov
lea
pop
jbe
adc
inc
and
mov
in
loopne
sbb
jmp
inc
push
mov
aas
cmp
out
xlat
dec
lds
dec
stos
call
leave
sbb
jg
mov
pop
dec
add
fwait
loopne
mov
xlat
orl
cmpsl
mov
frstor
push
sbb
out
frstor
notb
adc
out
es
adc
mov
addl
pop
fsubr
sbb
xchg
and
test
ljmp
cmp
ret
sbb
pop
cmp
ss
and
add
frstor
fs
jnp
test
pop
rcr
cld
mov
mov
negb
or
add
jge
mov
rcr
sahf
nop
arpl
or
pop
fwait
xchg
pusha
ret
lods
in
mov
iret
mov
cmpsl
repz
imul
mov
dec
adc
push
pushf
push
add
je
mov
jl
bound
decb
sbb
push
ljmp
iret
add
call
imul
jp
lahf
add
int3
push
arpl
push
ja
cmpsb
test
mov
mov
inc
or
movsl
xor
xchg
mov
popf
das
movsb
mov
repnz
ret
stc
mov
push
loopne
bound
and
or
sarl
rcll
stos
imul
sub
fs
xchg
lret
mov
inc
into
and
test
loope
mov
in
pop
ret
repz
mov
sub
dec
jb
dec
mov
and
repnz
popa
imul
mov
pop
or
fcmovnbe
shl
cli
cmp
out
out
lahf
mov
in
push
xchg
inc
push
insl
jl
fcompl
dec
aaa
sbbl
mov
add
pop
movd
sub
or
rcl
roll
subb
dec
mov
cmp
fidivl
sbb
push
sbb
fsubl
out
push
xchg
ret
ret
jnp
sbb
movsl
sbb
xor
sbb
add
cwtl
jnp
sub
dec
xlat
cld
lods
fstl
popf
xor
dec
push
repnz
add
add
adc
int3
mov
add
aas
mov
adc
mov
div
xor
les
pop
jno
adc
or
jge
jmp
sbb
pop
repz
movsb
jo
sub
je
in
push
cmp
push
das
cmp
cld
jmp
or
test
push
fildl
sbb
sub
scas
sub
xchg
mov
mov
pop
sahf
orb
test
movsb
outsb
jecxz
jbe
jle
or
adc
fidivs
inc
cmp
xchg
jmp
dec
fwait
movsl
ret
mov
out
mov
ja
pop
mov
out
and
lret
mov
stc
and
xchg
mov
xchg
push
into
mov
and
sbb
mov
popa
pop
dec
in
lods
movsb
mov
xor
cmpsl
push
mov
mov
add
jne
mov
inc
hlt
adc
rorl
sbb
aad
jp
sub
jns
cltd
pop
push
dec
shl
mov
pop
aam
mov
xchg
out
adc
inc
mull
lret
push
cld
mov
adc
es
mov
pop
and
in
jae
stc
outsb
sbb
dec
arpl
out
test
js
arpl
adc
cld
and
add
ss
xchg
jnp
sbb
inc
aad
lods
dec
test
leave
pop
or
cmp
jbe
cli
push
pusha
loope
imul
cli
in
test
fdivl
xchg
mov
test
sub
adc
lret
insl
pop
pop
push
test
sub
mov
mov
sub
out
imul
add
jecxz
jo
push
pop
add
jne
test
jg
stos
lcall
mov
imul
lods
fisttps
xchg
popa
or
out
push
xchg
mov
push
inc
in
xor
hlt
push
loope
dec
add
fldt
testl
xchg
mov
aad
rcr
fmul
dec
or
dec
add
shlb
stos
out
pop
loop
std
mov
enter
fsubl
xlat
ficoms
mov
mov
int
push
repnz
mov
outsb
jns
sbb
and
xchg
popf
fidivrs
cmpsb
rclb
mov
jns
mov
pop
or
push
sub
aaa
xchg
fs
mov
ja
test
mov
push
lods
add
and
stc
in
mov
or
jmp
mov
dec
sub
popf
cmp
loope
lock
stos
cmp
push
mov
orl
mov
fcomps
out
insb
sub
or
icebp
mov
xor
fadd
add
jns
cmp
jb
test
fwait
mov
jmp
test
stos
lods
push
xchg
in
dec
mov
cmpsl
mov
mov
sar
add
iret
mov
and
repnz
pop
jae
in
rol
cmc
je
dec
add
ss
mov
adc
popa
mov
lods
add
insl
aad
sub
and
push
sub
sub
movsb
adcl
adc
pop
mov
sbb
xlat
adc
jp
add
in
dec
loope
push
cmpsb
call
mov
adc
ffreep
push
idivl
mov
imulb
repz
loopne
adc
xchg
pop
xor
xor
mov
inc
iret
and
add
add
aad
inc
in
xlat
or
lods
stc
repz
push
inc
or
fidivrl
mov
fdiv
lea
mov
ror
xchg
out
push
lock
out
jp
lcall
mov
loope
scas
add
sarb
jns
out
test
push
cmpsl
cmp
stos
inc
nop
lret
stc
outsb
jmp
add
xlat
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
andl
mov
mov
mov
xor
add
mov
movzwl
and
mov
mov
sbbl
xor
adc
push
sub
mov
movzwl
sbb
mov
negl
add
xorl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
push
call
jmp
and
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
push
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
mov
in
xor
mov
mov
iret
and
pop
jl
fs
aad
pop
sub
imul
xchg
add
push
lds
in
aad
call
mov
push
adc
mov
adc
pop
ds
lahf
mov
cmpsb
or
roll
jecxz
out
and
scas
pusha
sbb
jnp
loopne
out
dec
aas
out
test
pop
popa
sbb
fdivp
jmp
xchg
add
inc
mov
xor
lock
mov
in
adc
lock
xchg
test
popf
aas
lahf
ljmp
enter
in
pop
cmp
and
mov
xlat
int3
push
add
ja
jo
or
jae
mov
scas
scas
sub
ljmp
loope
dec
stc
add
loopne
xor
lods
xchg
aam
stos
and
ljmp
pop
push
insb
in
loopne
sbb
data16
ret
inc
pushl
in
lods
enter
cltd
out
and
stc
jo
lods
fs
loop
scas
adc
divb
lock
cmpsb
cmpsb
mov
cmp
inc
bound
sub
push
cmp
pushf
mov
imul
push
mov
lea
sbb
sar
sbb
lods
loop
jmp
fcomps
adc
mov
aad
je
gs
jecxz
das
mov
rol
out
shrl
add
sbb
push
or
jle
in
push
jae
jg
notb
mov
sbb
sbb
icebp
test
jne
push
ljmp
mov
adc
mov
enter
lods
into
jno
pop
sahf
into
mov
out
fisubrs
imul
mov
add
fs
fsubl
arpl
push
imul
mov
aaa
push
and
mov
nop
out
mov
aas
or
cli
ror
lds
jmp
cmpsl
roll
mov
cmp
rclb
sbb
push
mov
stos
push
jmp
mov
fidivrl
cmp
add
shll
aam
outsb
stos
jle
fs
push
add
or
shrb
mov
int3
aaa
rolb
xor
xor
or
sbb
xchg
std
stos
xchg
insb
mul
js
ds
inc
jae
jns
dec
mov
inc
jl
dec
fdivrl
popa
jl
dec
dec
jo
add
lcall
mov
and
ret
dec
or
mov
mov
sbb
ljmp
ret
cmp
inc
leave
test
adc
sti
mov
push
es
xchg
addb
enter
inc
dec
lock
sub
mov
and
or
in
lock
mov
sbb
xor
addr16
dec
lods
dec
cmp
add
xchg
std
and
pop
lret
inc
add
dec
cmp
fsubl
mov
test
jecxz
sub
push
testl
inc
or
dec
out
pop
lret
addr16
jo
xor
nop
and
mov
push
stc
mov
shrb
pop
pop
sub
nop
inc
daa
pusha
jb
and
imul
push
and
xchg
mov
xchg
imul
sahf
fistpl
sbb
outsl
in
cmc
std
jecxz
cli
call
jbe
sub
jl
fldt
xchg
cmp
mov
rcl
fs
push
fs
aaa
mov
pop
data16
sysret
xchg
xchg
adc
xchg
xchg
stos
int
dec
add
lcall
rcr
leave
mov
into
decl
fdivl
loop
stos
push
jmp
insl
cli
adc
sahf
jp
jo
jmp
jbe
lods
cli
mov
es
pop
mov
out
cs
adcl
pop
inc
adc
mov
and
xchg
mov
pop
ret
lods
sbb
push
sbb
xchg
push
fisttps
imul
jns
mov
pop
fisttps
rol
pop
cmpsl
add
mov
xchg
stos
jns
jae
shll
rorl
clc
iret
mov
jmp
mov
sahf
test
movsl
add
xchg
push
xchg
fisubrl
ds
jl
psadbw
nop
adc
and
mov
mov
aas
ja
fcoms
push
or
mov
jmp
aaa
divb
pop
out
push
pop
xor
pop
lods
xchg
sbb
pop
test
lds
and
imull
xor
ds
push
add
mov
lahf
mov
sub
aad
and
pop
enter
jp
xchg
lds
xchg
aad
sub
and
test
jbe
in
enter
jmp
cs
aas
mov
aad
pop
push
jo
dec
xchg
stos
lret
inc
popf
inc
lret
rorb
popa
scas
push
mov
arpl
mov
ret
add
mov
popa
leave
jl
lcall
lahf
jp
sbb
dec
fistpl
xor
lds
insl
cwtl
imul
arpl
stos
das
jecxz
mov
outsl
mov
add
add
ss
cld
mov
sbb
dec
fsub
cmp
add
mov
jo
xor
flds
xor
fidivrl
inc
aas
insb
out
es
adc
inc
in
pop
ds
orb
adc
pop
aaa
lret
mov
push
ret
cmpsb
or
xchg
push
xchg
or
mov
jecxz
jb
mov
adc
inc
mov
in
out
mov
idivl
push
insl
jae
data16
daa
lock
add
sbb
pop
inc
aaa
pop
cmpsl
adc
inc
dec
adc
inc
and
jne
mov
aas
push
mov
icebp
mov
jbe
mov
ret
push
inc
pop
bound
xor
fdivrl
mov
in
inc
or
push
or
stos
xor
in
cmp
add
mov
xchg
pop
lods
lahf
mov
test
xchg
int3
push
mov
lcall
fistpll
or
push
xchg
xchg
call
xchg
lcall
lock
cmp
aaa
cltd
mov
addr16
je
imul
fs
adc
xor
mov
inc
xchg
sbbb
mov
lcall
xchg
push
lret
and
cmp
mov
jb
test
cmp
test
inc
popf
mov
push
jge
xchg
test
fcomps
pop
mov
ret
cmpsl
mov
cmp
push
aaa
dec
dec
cmp
add
arpl
push
sub
scas
lret
addr16
push
inc
jae
sbb
js
movsb
sbb
cmp
xchg
test
lds
outsb
mov
cld
ljmp
push
cmc
stc
jae
and
xchg
das
push
mov
or
inc
push
pop
outsb
call
pop
into
mov
push
xor
inc
sbb
inc
xor
test
push
dec
mov
out
add
fidivrs
ffree
xchg
add
xor
repz
and
or
add
imul
je
fistpl
push
dec
inc
ljmp
pop
nop
ljmp
lods
repz
int3
and
pop
mov
or
fildll
popa
ret
jae
cwtl
or
inc
xor
mov
dec
fisttpll
cmpsl
dec
jp
adc
push
or
xor
push
andl
pop
or
out
filds
repnz
push
stos
pop
test
out
mov
jl
mov
inc
std
mov
mov
xor
stc
lods
xchg
push
fidivrl
cwtl
pop
dec
outsb
cltd
xchg
inc
sub
push
jb
push
or
or
pop
pop
dec
cltd
push
add
push
jne
lock
dec
les
loop
dec
or
int
es
jae
les
nop
sbb
jge
mov
inc
fisttpll
add
or
add
stos
xor
inc
jnp
adc
or
cli
sbb
xchg
xlat
je
rorl
and
movsl
inc
jbe
jno
cmp
pop
mov
dec
pop
pop
repnz
inc
xchg
les
fisubs
loop
ja
insl
cmp
cmp
loop
std
ja
xor
cmp
mov
ljmp
lods
daa
js
test
sbb
or
cmp
push
inc
lods
bound
xor
inc
add
inc
mov
cmp
shll
xchg
adc
pusha
mov
pop
push
les
lret
mov
push
stc
jp
mov
out
cwtl
scas
sub
jbe
mov
or
out
mov
ds
cmpsb
add
pop
xor
pop
mov
mov
in
mov
add
lods
lods
ret
jno
push
ljmp
inc
cmc
cmp
add
xchg
data16
adc
xor
add
push
mov
aam
sahf
pop
outsl
xchg
inc
jb
lret
stos
inc
fwait
push
out
sbb
jae
push
rclb
or
aam
push
frstor
push
or
or
dec
pop
mov
add
mov
dec
inc
xchg
jecxz
lea
ja
std
in
and
push
cltd
mov
cmpsl
add
test
push
add
aam
lods
adc
mov
add
and
out
sbb
pop
inc
adc
in
mov
add
dec
leave
mov
outsl
pop
cmp
lds
out
mov
jp
push
dec
aas
sbb
shlb
cmp
xchg
push
popf
orb
fnsave
pop
mov
ret
shlb
jnp
scas
cltd
unpcklps
loope
xor
pop
jecxz
lret
lds
cmc
mov
scas
push
inc
sub
sub
sub
mov
fistl
pop
adc
in
mov
test
stos
inc
cmpsb
aaa
notl
ret
dec
xchg
bsf
push
fs
or
add
mov
sarl
xor
fsubl
fisubrl
jl
sbb
inc
xchg
shlb
gs
cltd
fs
xchg
cmp
lods
orb
inc
mov
lock
iret
add
xchg
mov
loop
in
sbb
xor
mov
cmp
adc
jbe
xor
imul
test
in
inc
lods
mov
daa
mov
sub
push
ds
inc
mov
mov
jge
dec
sahf
bound
cmp
xor
pusha
dec
mov
sub
out
je
lret
nop
mov
add
in
lret
sti
dec
add
or
addb
sahf
mov
sub
inc
std
ss
xor
adc
adc
sti
lahf
xchg
fsubr
pushf
mov
jb
fidivl
scas
out
jae
inc
int
pop
mov
add
hlt
inc
call
dec
packuswb
xchg
jb
pop
testb
cld
jnp
arpl
ret
add
mov
or
insl
aaa
mov
jge
fsubl
inc
or
push
cmp
jns
xchg
je
mov
test
inc
pusha
aad
loopne
das
mov
aas
fmuls
pop
xor
or
jp
popf
or
scas
repz
jle
insb
add
andb
shrb
pusha
inc
dec
rcl
adcl
pop
in
movsl
mov
add
loope
mov
int3
adc
outsb
or
cmpsb
adc
jne
fbstp
dec
inc
sahf
jecxz
clc
add
ss
clc
or
jno
rcrb
pop
inc
or
into
jno
cli
mov
xor
test
test
cmc
mov
gs
push
testl
push
adc
scas
xlat
push
out
shl
fsubr
xchg
and
les
jne
mov
cmp
jne
int
psubusw
jns
mov
jae
sub
and
xor
ss
iret
mov
cmp
repnz
mov
aaa
adc
sbb
dec
dec
shll
std
jge
dec
test
cs
les
iret
call
sbb
push
sub
sbb
aas
nop
and
cltd
add
cmp
add
cmpsb
loopne
add
inc
sub
jecxz
lods
cmpsl
pop
push
xor
fmul
das
mov
loop
mov
and
xchg
mov
leave
mov
mov
push
xchg
hlt
int
inc
pop
xchg
pusha
adc
js
dec
sahf
mov
mov
push
xchg
inc
mov
mov
mov
xchg
fwait
stos
js
mov
xor
je
daa
fisubs
mov
or
cmp
or
sbb
rol
stos
pop
mov
jecxz
or
icebp
mov
inc
xor
es
mov
and
xchg
addb
iret
bound
sub
mov
sub
inc
pushf
shr
ret
ret
loope
mov
xor
mov
iret
mov
nop
mov
or
adc
jg
dec
mov
push
lahf
adc
push
sub
nop
fwait
ret
lods
cmp
and
fistpll
jle
ret
or
shrb
xchg
mov
lock
inc
mov
or
lahf
push
iret
mov
test
shlb
pop
and
scas
push
xchg
fisubs
mov
dec
push
aam
in
cltd
sbbl
insb
pop
and
jns
test
pusha
mov
and
push
jne
push
cmp
cmp
lret
xor
std
inc
lcall
xor
clc
push
jmp
or
je
mov
jns
dec
fistpl
push
dec
ds
outsl
call
mov
fisttps
dec
hlt
jl
push
sbbb
dec
push
arpl
stc
sub
add
sti
scas
fisubs
or
imull
daa
fisubs
inc
daa
insb
fcomi
imul
jno
cmp
sbb
mov
xchg
test
pop
cmp
or
or
jmp
ret
fcmovnu
fsubrs
sbb
jb
fs
cmc
pop
xchg
test
pop
push
punpcklbw
popf
movsl
inc
mov
xchg
xor
mov
adc
push
or
fwait
and
cltd
cmpsb
cmc
stos
and
inc
popf
inc
or
cmpsb
in
sbb
aas
decb
fistl
popa
adc
jnp
sub
icebp
jl
sub
jge
in
sub
cmp
xchg
jns
adc
jl
lods
fdivs
dec
mov
outsl
scas
push
rcrb
inc
mov
push
insl
pop
inc
shl
or
sbb
adc
fisttpll
sub
and
incb
sahf
inc
mov
fldt
fucomi
imul
push
pushf
pushf
mul
mov
and
dec
jbe
mov
cmp
jb
stos
jge
push
jnp
mov
xor
sti
add
idivl
pop
ds
xchg
and
mov
stc
xchg
push
sbb
dec
sbb
pop
mov
add
sub
dec
sub
dec
pop
rclb
sub
mov
add
or
push
adc
lahf
dec
imull
and
mov
in
dec
les
sahf
popa
insb
stos
inc
push
pop
mov
xchg
addr16
mov
xchg
inc
pop
rcrb
gs
dec
add
out
fdivr
or
lcall
mov
inc
mov
mov
daa
xor
mov
sbbb
in
scas
mov
lret
test
scas
icebp
inc
popa
test
in
dec
rcrl
sbb
das
sub
clc
dec
adc
xchg
adc
dec
aaa
or
cli
push
xchg
cmpsb
jle
fdivrs
jmp
in
loop
or
fbstp
and
and
sub
jmp
push
cmp
leave
mov
leave
mov
aas
ds
inc
mov
xchg
cmp
lods
sub
pop
cmp
mov
push
shll
and
cmp
mov
cmc
pop
gs
add
test
sbb
iret
inc
pop
jne
mov
ljmp
loopnew
lret
add
cld
aad
mov
xchg
cmp
mov
fimuls
imul
push
jns
xchg
cmpsb
jmp
or
sbb
addr16
lods
or
cmpsb
fcomps
movsl
iret
or
inc
in
xchg
mov
ficoml
lods
out
aas
add
ja
xor
mov
dec
sahf
xchg
mov
pop
std
pop
icebp
into
enter
dec
pop
add
mov
inc
mov
scas
dec
lea
pop
add
in
jmp
mov
dec
and
inc
mov
pop
mov
sub
insb
adc
cmp
test
pop
int
cmpsl
cwtl
jmp
jmp
pop
out
jmp
mov
cmp
push
xchg
cmpsb
dec
pop
add
roll
or
jae
cmc
repnz
std
inc
fwait
mov
mov
dec
jnp
fimull
cmp
bnd
jecxz
int3
cmp
inc
rorb
mov
add
jae
gs
les
xchg
movsb
xchg
xchg
inc
cmp
add
xor
std
cmpsb
imul
push
testb
popf
orl
aad
sbb
push
orb
ljmp
mov
test
lods
in
test
sbb
push
test
mov
or
lea
test
mov
cmp
pop
pop
rclb
dec
sarb
pushl
mov
pop
ds
fsubs
xor
in
cltd
scas
xor
inc
cmc
mov
into
push
jnp
into
cmp
or
jns
and
xor
sub
lods
or
jae
jecxz
mov
sub
imul
shlb
mov
push
and
or
jb
xor
xchg
cmpsb
fnsave
xchg
xor
movb
sbb
xor
cmp
shlb
shlb
rcr
cmp
push
inc
js
fnstsw
test
stos
xor
test
mov
pusha
sub
movsb
mov
rep
dec
icebp
and
std
cli
xchg
in
mov
sub
adc
mov
ljmp
jecxz
pop
pop
pushl
xchg
pop
negl
and
sbb
push
adc
pop
shl
push
aad
jle
mov
roll
fdivl
jns
adc
sahf
mov
pop
movsl
cli
lahf
mov
xchg
add
pop
xchg
jns
fimull
mov
lahf
xor
lock
movsb
jno
out
xlat
es
sar
mov
call
in
xchg
mov
lods
jecxz
jnp
adc
pushf
cmpsl
push
mov
data16
testl
adc
out
pop
dec
sbb
lods
iret
add
lods
and
mov
xchg
in
in
push
clc
mov
icebp
mov
das
mull
movsl
xlat
pushf
xor
js
iret
in
lea
shll
push
dec
pop
sbb
mov
ljmp
stc
jp
andl
mov
add
xchg
lods
add
loop
push
loop
enter
cs
jle
push
aas
or
xor
lret
inc
ss
jl,pt
cmp
out
push
pextrw
push
xchg
repz
mov
adc
mov
nop
clc
inc
mov
ljmp
inc
dec
and
clc
jle
and
or
pop
jno
add
add
mov
clc
aam
adc
push
cmp
mov
and
jnp
pop
mov
dec
mov
test
lods
mov
mov
dec
rolb
fs
and
loope
adc
cli
sti
or
repnz
mov
cwtl
pop
fldenv
mov
jae
or
ds
ss
add
mov
mov
pop
ret
push
pop
mov
jmp
loop
adc
loopne
int3
fisubrl
mov
out
stc
pop
ds
dec
popa
lods
push
inc
lock
mov
out
sbb
pop
cmpsb
out
cmpsb
pop
testl
sbb
cmpsl
movsb
mov
push
dec
or
or
adc
pop
das
jg
xor
cwtl
push
int3
xlat
ds
ljmp
inc
pushf
ljmp
fcomi
xchg
imul
pop
xor
jmp
ljmp
fs
ret
inc
cmc
sbb
popf
sub
movb
push
pop
mov
imul
xor
pusha
mov
test
lods
outsl
ljmp
jbe
cmp
jge
add
mov
cwtl
cmp
lea
or
gs
and
mov
sub
push
sbb
dec
shl
in
xor
jge
es
loope
mov
enter
sti
mov
mov
or
fnstsw
leave
js
movsl
jns
in
out
or
cmp
lock
add
int
into
lds
into
lock
mov
push
inc
ja
push
sub
or
clc
shrl
bound
out
adcb
call
pop
aad
ss
jno
lcall
adc
ret
test
pop
es
jae
pop
cmp
sub
xor
dec
jl
inc
pop
or
push
mov
xlat
gs
xchg
inc
push
clc
cmp
ret
out
xchg
or
or
into
pop
push
daa
bound
std
setno
adc
xor
dec
hlt
sub
sub
sub
mov
jle
adc
fimuls
stos
cwtl
std
das
mov
add
je
push
repz
mov
stc
mov
xchg
and
dec
add
add
cli
fwait
lcall
pusha
stos
in
insb
jnp
xor
jl
loope
ret
mov
sbb
fucomp
or
inc
lahf
jb
shl
add
sub
movsb
adc
xchg
xor
add
mov
pop
cmpsl
sub
push
add
mov
add
and
sbb
notb
pop
fimull
dec
imul
stos
fwait
movsb
mov
cmp
clc
mov
add
lods
cld
fcoms
add
popf
xchg
cli
mov
jne
add
mov
out
movb
jae
xlat
fcmove
je
jmp
inc
insl
pushf
add
inc
jne
push
lret
nop
xor
inc
and
test
js
cmpsb
stos
jle
dec
xor
sbb
dec
xor
mov
xor
mov
loop
pop
sbb
add
pop
jge
and
or
jl
repz
mulb
icebp
inc
fimull
mov
in
lea
loope
shl
inc
lret
dec
and
gs
ret
sarl
mov
mov
mov
mov
cmp
repz
rol
sbb
scas
mov
clc
in
dec
mov
mov
xchg
cmc
stos
shrl
stos
sbb
or
and
add
mov
int3
leave
cmp
xorl
and
test
and
mov
adc
xchg
ret
jbe
daa
mov
mov
fcoms
and
into
mov
xchg
cltd
outsl
out
cmp
cmp
std
adc
icebp
popa
jbe
mov
mov
sbb
fistpl
mov
sub
cmpsl
push
iret
jle
xorb
andl
in
imul
sub
mov
out
call
adc
pop
pop
pushf
jmp
mov
push
jno
mov
mov
mov
cmp
scas
aas
roll
ficompl
jae
out
addr16
xchg
cmc
cmp
jge
popa
out
push
add
outsb
clc
push
sti
inc
addr16
fwait
or
cs
loope
xor
or
push
ret
out
mov
pop
rcrl
xchg
aad
fincstp
cmp
dec
pop
fstl
cmp
repz
cmp
jb
sahf
mov
sub
jecxz
cld
lods
add
sub
pop
mov
or
in
enter
fnsave
repnz
rolb
out
sbb
int3
cmp
cmp
pop
divl
out
jecxz
dec
and
jnp
ret
test
clc
jecxz
mov
push
cmp
mov
test
jecxz
dec
cmp
pushl
repz
push
sbb
jecxz
dec
xchg
mov
mov
lcall
mov
pop
fcomp
iret
sbb
pushf
cmovae
push
sub
push
out
mov
imul
hlt
xchg
stc
fstl
testl
xlat
pop
inc
rcrl
mov
cmpsl
idiv
popw
cmpsl
jmp
jmp
int
lds
into
bound
jb
loopne
lods
push
jb
mov
sub
cmc
rcrb
jns
xor
xor
fisttps
jns
out
jg,pn
cmc
dec
insl
test
xchg
clc
sub
ljmp
ficompl
gs
xlat
lock
cmc
adcb
fnstenv
and
scas
mov
inc
mov
cmp
jl
pop
xchg
jp
xchg
mov
jp
add
hlt
mov
lcall
xchg
mov
out
daa
mov
lea
jge
pop
add
mov
sbb
xlat
xchg
add
cld
jne
inc
jno
fcoml
insb
inc
mov
push
sbb
in
xor
mov
add
pop
jecxz
loopne
pop
imulb
add
sbb
pop
xlat
push
adc
cmp
pop
sbb
scas
inc
arpl
cs
shll
adc
mov
cmpsb
subl
jmp
insb
cwtl
je
in
cmp
or
mov
or
mov
je
call
movsl
push
mov
popf
mov
sbb
sub
and
pop
lret
mov
lods
xor
xor
stos
or
mov
or
push
mov
loopne
inc
test
pop
fcomp
mov
int3
in
cld
les
loop
mov
iret
dec
mov
mov
inc
pop
xor
fnsave
fildl
pop
mov
cmc
push
repz
push
jg
jb
int
ret
jnp
xor
mov
repnz
fcompl
mov
inc
jp
in
call
push
push
addr16
mov
nop
xor
push
imul
inc
or
mov
cld
shlb
mov
je
das
xchg
int
mov
repnz
xor
sub
jbe
aaa
pop
gs
sub
cmp
jbe
sti
pusha
sub
iret
andb
imul
xchg
cmp
jo
or
push
ficoml
ljmp
stos
int
xor
icebp
dec
loope
dec
push
lods
insb
sub
xchg
or
push
hlt
imul
push
jns
cltd
bound
sbb
in
xor
jae
lods
adc
and
dec
test
imul
roll
mov
ja
pop
test
fsubl
jo
pop
je
ds
mov
push
mov
int3
pusha
mov
inc
mov
test
xor
inc
mov
xor
dec
sub
into
jmp
inc
inc
lret
mov
mov
sbb
mov
jo
sub
xor
jp
loop
fs
adc
add
test
inc
fdivl
adc
das
pop
mov
int3
jmp
repnz
mov
cld
loope
adc
andl
jne
sub
cmpsb
inc
test
jp
insl
add
dec
in
jnp
push
sub
ja
xor
orl
mov
mov
push
out
es
aam
out
scas
jmp
cmp
sbb
push
jecxz
mov
pushf
clc
or
dec
mov
or
or
lret
xor
mov
xor
mov
mov
dec
jg
cwtl
stc
enter
dec
fidivrs
pop
inc
xchg
in
ret
lret
or
add
mov
dec
je
and
cmc
xchg
or
movsl
in
cmp
sbb
shlb
into
inc
sbb
sub
add
into
dec
sti
cmp
push
dec
test
push
icebp
cli
gs
shr
movsb
popf
adc
push
push
inc
sbb
push
pusha
mov
mov
aas
aam
outsl
aam
in
or
insl
inc
jb
sub
jb
fiaddl
in
or
ss
jno
nop
scas
ret
dec
les
loope
sbb
sub
push
sbb
outsl
push
fisttps
pop
push
dec
cmpsb
jnp
enter
and
cmpsb
xchg
jb
jnp
lret
mov
pop
sbbb
loop
les
cmp
mov
test
and
fwait
loope
movsl
fimuls
cmp
xchg
sbb
mov
inc
push
cwtl
int3
xor
pop
and
cmp
psraw
lea
nop
mov
les
sub
pop
scas
cmpsl
fwait
lahf
and
push
decb
test
outsb
cmp
out
fisttps
aas
test
cmc
call
xor
jl
and
xchg
jns
cmp
add
stos
dec
notl
mov
mov
dec
pop
or
inc
iret
jb
cmp
mov
test
dec
call
popa
adc
jb
push
jne
add
dec
xor
jb
lods
idivb
pop
data16
leave
lahf
or
jl
push
and
leave
mov
push
jb
shlb
fwait
push
and
fs
pushf
sbb
pushf
pop
or
enter
jl
mov
or
xchg
adc
sbb
filds
sbbb
ljmp
sti
sbb
loop
jmp
mov
fnstcw
js
inc
bound
movsl
dec
push
mov
les
push
scas
fstps
ret
lods
sub
aas
movd
insb
out
mov
mov
jge
stos
cmp
jp
push
mov
clc
leave
mov
sub
push
test
leave
fbstp
ret
xchg
sbb
pop
outsl
iret
imul
aas
cmp
in
int
andb
pop
ljmp
inc
cltd
xor
lock
aam
test
dec
or
movsl
pop
sbb
mov
adc
stos
sbb
icebp
xchg
sbb
divl
jbe
push
dec
lods
pop
pop
push
xor
fmull
loop
stc
lds
push
call
pop
daa
xchg
cmp
mov
dec
jge
mov
sub
mov
mov
int3
scas
nop
popa
lds
insb
dec
outsl
dec
push
fwait
xchg
cld
scas
add
cli
nop
sti
mov
xor
bound
and
shll
mov
xor
xchg
xchg
push
movsl
push
xchg
mov
pop
cli
mov
mov
test
mov
add
inc
loope
jns
in
mov
roll
hlt
sarb
fisttps
mov
lcall
shlb
cmp
sbbb
jmp
in
jle
jmp
lds
int3
add
shll
imul
jg
xchg
in
jg
mov
data16
dec
js
jb
jp
arpl
mov
lret
lock
push
mov
adc
outsl
adc
in
lock
jnp
xchg
mov
fcmovnu
sbbl
pusha
repz
inc
cld
push
mov
xor
lret
lret
xlat
xor
insb
and
cmpsb
pop
jl
lea
jae
add
jae
sti
hlt
xchg
sbb
pop
hlt
dec
add
jbe
into
jae
pop
add
add
mov
inc
call
inc
pushf
mov
stos
fsts
stos
lcall
inc
pop
movsl
inc
or
imul
mov
test
mov
pop
movsb
test
stos
in
or
sub
and
ret
push
lods
sahf
daa
dec
sbbb
test
cmp
mov
ret
outsl
into
inc
pusha
add
jge
sub
movsl
xchg
or
xor
push
out
cmpsl
cmp
ja
repnz
ret
jne
aam
dec
jns
insb
jp
sub
sub
add
rcll
sub
push
add
add
clc
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbb
mov
xor
xor
sub
mov
add
movl
or
mov
push
mov
add
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
negl
push
mov
adcl
add
cmp
movl
je
mov
mov
xor
xor
adcl
add
add
adc
negl
xor
mov
push
movzbl
adc
xor
xor
mov
and
mov
add
movl
adc
addl
xor
movl
xor
movl
cmp
movl
jne
movl
cmp
je
jmp
mov
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
sbbl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
notl
mov
adcl
add
movzwl
mov
mov
sbb
movb
add
lea
xor
mov
addl
mov
mov
orl
xor
andl
sub
andl
mov
movl
or
push
jmp
and
add
dec
arpl
shlb
jl
pop
pop
jl
xor
sub
jecxz
ja
mulb
mov
xor
lods
add
or
inc
lock
jb
and
test
ja
js
mov
fisubl
ret
adc
cmp
stos
jae
gs
je
xchg
and
dec
ljmp
inc
dec
cmp
push
ljmp
add
xchg
mov
sub
insb
sub
sbb
orl
xlat
adc
xor
je
jnp
sahf
lret
sbb
fincstp
stos
adc
pop
push
xchg
sarl
test
inc
sub
shll
mov
mov
or
adc
pop
sbb
xchg
cmp
xchg
rcrb
lahf
xchg
or
xchg
ret
push
shll
add
idivb
in
jne
add
inc
leave
shlb
lret
sti
xchg
and
push
push
jo
lahf
xor
fwait
dec
rcll
lock
jg
cmp
daa
rcrb
cmp
xchg
adc
clc
and
cmp
das
or
mov
imul
sbb
mov
lcall
jg
cltd
in
add
call
in
aas
jg
pop
push
add
rorl
loope
push
jb
in
daa
decb
xor
or
inc
mov
sub
adc
ljmp
cli
push
mov
jno
aam
xlat
call
mov
jae
xchg
pop
adc
lods
cmp
rcll
sub
and
inc
je
xchg
sub
int
pop
xchg
push
xchg
sbb
repnz
mov
push
jns
sbb
adc
xor
lock
lret
mov
lods
push
mov
pop
loop
sbb
pop
sbbb
adc
es
sahf
mov
sbb
jnp
cmp
out
add
scas
subb
xchg
movsb
sbb
stc
fldenv
outsl
xchg
push
lock
or
or
fucomip
push
mov
xchg
mov
lock
xchg
add
in
xor
inc
xchg
arpl
cld
mov
jne
imul
mov
int3
data16
jbe
lds
sub
insl
xor
sub
sbbb
add
adc
cld
dec
fcoms
xor
cmp
and
adc
sub
sbb
jae
add
out
sub
xchg
repnz
call
int
mov
pushf
lret
pop
ds
pop
jnp
cmp
int
aad
xchg
mov
rorb
sbb
pop
jno
loop
fstps
shrl
loopne
movsl
cmp
mov
and
xor
or
dec
je
daa
out
adc
jo
scas
push
cmpsl
or
lock
and
mov
mov
push
jp
sub
jmp
outsl
nop
test
faddl
sub
jno
mov
out
scas
fldl
insl
inc
test
inc
xchg
outsb
jmp
lahf
std
sar
dec
sbb
jecxz
aad
jno
addr16
sub
sub
sub
lods
push
movsl
adc
insb
push
sbbb
bound
jne
mov
imul
call
ficomps
fs
sarl
inc
sub
pop
inc
stc
mov
jle
inc
repz
sub
addr16
pop
ret
fisttpll
ret
push
jg
jge
dec
push
cmp
int3
jb
shll
addr16
stc
test
stos
adc
jnp
cmp
jo
loopne
lods
insl
out
xlat
push
ret
dec
stos
not
flds
push
dec
inc
aaa
in
mov
jmp
mov
outsl
push
in
xor
das
movsl
clc
fidivrl
jb
dec
leave
enter
repz
mov
test
lock
aam
cmc
mov
call
nop
int
xchg
xchg
test
cld
icebp
sbb
in
stc
int
ret
mov
jp
xlat
add
mov
xlat
xchg
iret
scas
insl
jb
mov
push
push
leave
jb
orl
dec
or
nop
dec
mov
push
lods
jp
imul
lahf
mov
inc
pop
leave
mov
ljmp
rorl
mov
mov
push
lret
sti
out
mov
jmp
xchg
in
ds
movsl
xchg
cmp
xchg
shrb
testb
pop
jle
and
sahf
xchg
sub
int3
sbb
or
xlat
xor
push
dec
std
mov
mov
es
sbb
cld
or
das
loop
sti
enter
add
pop
insb
push
push
sbb
movsl
fstl
mov
les
xchg
adc
hlt
sbb
rcrb
shl
sahf
js
fiaddl
inc
inc
adc
stc
or
into
dec
add
jg
ret
xlat
jmp
jno
xor
xor
mov
in
sbb
loopne
jae
jb
ja
xchg
pushf
fldl
push
jg
xor
test
scas
mov
xchg
mov
sbb
pop
mov
mov
add
xchg
adc
jbe
mov
jae
ljmp
data16
fwait
addr16
dec
cmp
shl
sub
stc
dec
xor
inc
test
push
inc
es
stc
fcoml
mov
mov
jp
insb
ret
push
push
lds
out
iret
push
lods
int
jg
cmpsb
cmp
testb
or
shll
push
ljmp
inc
mov
push
stc
aas
push
sti
test
pop
pop
aaa
sub
push
xor
testb
and
push
inc
mov
orl
pop
imul
xchg
xchg
mov
add
or
imul
jmp
add
xor
xor
insl
and
nop
lret
pop
iret
inc
jecxz
gs
sbb
inc
mov
dec
imul
cmp
repnz
xchg
out
dec
push
xchg
xchg
int3
pop
add
mov
mov
mov
daa
fs
cs
push
sti
sbb
dec
jno
jp
fstpt
pop
cmp
push
mov
add
sub
aad
lods
and
dec
push
pop
mov
mov
out
std
leave
daa
ja
sub
mov
scas
push
scas
cld
add
mov
jmp
inc
cwtl
jl
ds
xor
jg
xchg
cmc
fcomps
add
fldcw
les
stc
adc
sub
negb
jno
sub
sub
sbb
add
add
add
xor
xor
outsb
mov
idivl
js
stc
dec
adc
xorb
stos
or
cmp
bound
js
fwait
mov
orb
xor
cld
cltd
cmovl
push
loop
push
std
sub
lret
repnz
sbb
inc
xchg
add
fcompl
add
jae
adc
cmpsl
jbe
and
inc
mov
pop
pop
lds
imul
lock
mov
daa
push
sub
out
cmp
xchg
dec
ljmp
arpl
out
js
cmp
mov
pop
push
sub
movsb
pop
loope
pop
mov
dec
jno
flds
stos
outsb
psubb
jnp
les
fidivl
es
test
jb
loop
push
aaa
push
sub
push
js
fldenv
or
adc
iret
and
dec
scas
xchg
inc
imul
lods
xor
adc
mov
xchg
mov
fisubrs
jl
notl
jecxz
sbb
mov
mov
cmc
xor
inc
inc
sbb
nop
mov
inc
and
sbb
stc
negl
xor
add
ret
mov
cmpsl
or
out
mov
cld
pusha
rorb
cli
scas
jecxz
add
add
in
cmpsl
loop
jo
mov
cmpsb
mov
pop
js
sbb
jle
shlb
push
cmpsl
mov
push
push
push
fldlg2
mov
fsubl
ja
xchg
and
add
push
aaa
add
fiaddl
cwtl
test
push
jmp
mov
jb
mov
mov
mov
movsl
mov
dec
gs
lcall
popa
push
pusha
idivb
sbbb
inc
pop
push
mov
mov
shl
mov
xor
sbb
xor
cld
lods
sarl
mov
fsts
xor
iret
pop
cmp
mov
jbe
lret
inc
push
arpl
fs
bound
add
cbtw
cmp
pop
pop
jl
jecxz
pop
cmp
js
in
rorl
out
out
or
mov
lea
hlt
sub
fcomi
xor
fdecstp
popf
mov
jnp
inc
rcl
out
adc
repz
mul
call
outsl
lahf
xor
mov
in
loopne
inc
xchg
enter
push
insl
cwtl
pop
sub
test
cs
add
cld
sbbb
and
push
rolb
sbb
repz
jb
das
jl
add
mov
lret
dec
mov
mov
sbb
fadd
rcr
imul
cmc
cltd
xor
adc
fstpl
test
jge
jb
xor
pusha
inc
adc
inc
push
push
fimuls
rorl
adc
pop
pop
add
lcall
fwait
xchg
inc
push
mov
adc
cwtl
sti
enter
pop
jb
addl
mov
test
sbb
jbe
dec
and
push
mov
arpl
jl
enter
lea
test
pusha
mov
sub
ret
dec
jo
push
mov
ds
xlat
push
dec
or
stc
fdivl
repz
xor
push
jl
popf
out
adc
movsl
loope
inc
push
inc
es
jb
push
call
jge
xchg
add
das
mov
xor
pop
mov
bound
imul
movsb
push
mov
jle
or
push
cltd
dec
adc
shrl
outsb
out
aam
insl
mov
cmp
popa
pop
dec
jno
loope
jg
xchg
cmp
sub
or
sbb
decb
lea
leave
movsl
les
mov
push
cmpsb
fnstcw
adc
mov
aam
mov
cmp
xor
xchg
out
daa
sar
push
cltd
shr
mov
and
or
xchg
cmpsb
xchg
sti
pop
and
jbe
jg
ja
pop
in
cmp
or
push
xor
lahf
sub
mov
adc
out
lea
ljmp
jnp
fstpt
mov
pop
andl
outsb
cmp
outsb
insl
cmpsl
lods
movl
outsb
xchg
xchg
cmp
out
and
pop
add
inc
mov
mov
out
mov
nop
xchg
push
mov
arpl
or
ja
repnz
fsubp
mov
in
xor
or
icebp
insb
mov
xchg
xchg
cmp
push
adc
testb
cmp
sub
lahf
addr16
int3
sarb
shrb
mov
xor
stos
loopne
pop
imul
jmp
addl
pop
cmpsl
dec
push
push
mov
adc
adc
loope
pop
push
jns
sub
jnp
in
mov
adc
aas
sub
sub
cwtl
sahf
sub
mov
mov
and
add
jnp
sub
mov
push
lahf
lret
lahf
sbb
mov
int
mov
pop
inc
xchg
das
add
fidivl
stc
jb
repz
push
js
mov
pop
xchg
sbb
rorb
roll
cmp
addr16
cld
test
xor
icebp
je
mov
jmp
in
iret
daa
ss
in
pop
les
popa
and
mov
cmpsl
cmp
decb
cli
cltd
pop
push
fcomip
gs
adc
xor
sbb
daa
xor
mov
xchg
loope
add
into
dec
dec
lods
daa
xchg
sti
mov
or
adc
scas
push
pop
dec
xchg
test
push
mov
or
shlb
cli
es
xor
mov
xor
call
jl
pop
add
sbb
mov
dec
jbe
movsb
mov
lret
gs
mov
lret
cli
lods
cmp
mov
aas
cmp
push
addr16
push
push
sub
push
fwait
inc
sahf
ss
pop
inc
fidivs
movsb
inc
sbb
dec
shll
insb
add
daa
aaa
lock
pop
sub
add
push
mov
arpl
test
xlat
xchg
adc
inc
shlb
fwait
and
push
and
sti
decb
inc
add
mov
pushf
rcl
inc
mov
lret
jg
or
dec
arpl
cmc
push
cld
test
cmp
cs
push
push
or
xchg
roll
call
mul
sbb
sub
sub
push
inc
dec
dec
xlat
jecxz
jl
adc
inc
jg
cmpsb
inc
fisubl
out
shll
test
dec
pop
movsl
nop
cwtl
addl
and
ret
enter
mov
fcomps
adc
jbe
xor
dec
dec
fiadds
push
fidivrs
in
imul
mov
jg
addr16
xor
dec
jno
sbb
mov
add
xor
test
cmp
lock
icebp
lahf
rclb
aam
sbbb
sarl
icebp
xorb
cltd
cmp
jecxz
movsl
xor
jmp
xchg
dec
mov
cmp
and
jno
or
mov
lret
dec
mov
out
inc
pop
push
js
cmpsb
or
mov
adc
cmpb
testl
and
inc
mov
sub
fwait
add
outsb
icebp
mov
or
xchg
outsb
pop
sbbb
add
mov
sub
repz
arpl
mov
mov
jmp
int
repnz
sub
jbe
in
std
cmpb
jl
dec
lds
xorb
fcompl
pop
jae
xchg
shll
mov
les
icebp
int3
mov
ret
lahf
add
add
xchg
jne
fidivrl
mov
imull
and
jecxz
imul
roll
cwtl
lret
jmp
dec
cwtl
pop
jl
pop
mov
mov
test
popl
fwait
inc
push
xchg
out
outsb
lock
inc
cli
xor
inc
xchg
repnz
xchg
mov
dec
sub
push
jl
mov
clc
enter
sti
push
in
push
push
shll
add
ss
popf
cmp
mov
and
sbb
xor
pop
dec
sbb
stos
rcrl
jecxz
aam
cltd
scas
dec
outsb
xlat
push
fbstp
dec
push
mov
cmp
ret
inc
test
out
sbb
push
cmp
xor
jge
shl
shlb
adc
xchg
lcall
aaa
imul
pop
aaa
call
rcl
jnp
lods
cmpsl
dec
inc
andb
scas
sbb
ljmp
pop
or
fiaddl
pop
jae
cltd
inc
shrl
mov
cmp
cmp
push
cld
xchg
fsubrs
or
jns
jg
xchg
or
dec
stos
cmc
std
je
scas
and
pop
sbb
sub
adc
gs
scas
jecxz
stc
push
and
loope
sbb
pop
jae
in
sbb
mov
push
push
fcomip
jae,pt
lea
movsb
scas
and
lcall
int
insl
scas
stos
pop
fadd
fs
popf
in
jecxz
push
jl
add
pushf
cmp
xchg
loop
dec
aam
test
or
fisttps
cmp
movsl
and
xchg
out
iret
outsl
pop
or
mov
sahf
cmpsb
jno
xchg
repz
cmp
in
outsb
or
fcomps
or
outsl
xor
shll
iret
jle
fbld
dec
lcall
jmp
adc
mov
rcrb
js
ss
jecxz
std
std
out
mov
or
dec
jge
pop
daa
mov
add
test
mov
pop
dec
mov
es
lds
pop
mov
and
and
sbb
push
or
push
mov
xchg
imul
cmp
repz
mov
mov
sahf
stc
mov
mov
sub
in
inc
mov
dec
lret
mul
andl
mov
push
mov
icebp
push
sub
fdivrs
sub
popa
xor
sub
push
cmp
es
dec
mov
roll
and
call
shlb
ljmp
hlt
pop
test
cmp
or
cmpsb
inc
inc
xor
cs
dec
in
fsts
out
jns
jecxz
ds
jbe
aaa
testb
sbb
push
lret
jbe
push
cmpsb
je
mov
ret
filds
mov
or
ret
add
add
mov
mov
mov
mov
cwtl
inc
mov
in
and
mov
inc
mov
aad
adc
fisttpll
sub
add
shlb
xchg
andl
adc
mov
in
std
dec
pop
xchg
mov
pop
lcall
pop
xor
push
xchg
lods
inc
lret
mov
and
mov
shrl
pop
fs
jg
push
imull
enter
outsb
shl
pop
and
call
out
adc
repnz
jmp
subl
scas
push
mov
sbb
push
sbb
and
adc
ficompl
fisubl
sbbl
and
dec
out
sub
dec
hlt
jnp
movsl
js
inc
lock
shll
mov
sahf
arpl
mov
mov
mov
lsl
cmp
dec
arpl
and
rorl
orb
repnz
mov
popa
mov
dec
xchg
add
push
shlb
mov
les
sbb
ljmp
out
and
xchg
jmp
push
aas
scas
xor
adc
rcrb
mov
adc
mov
cmp
stos
pop
notb
mov
xor
push
jb
sbb
xchg
mov
dec
dec
pop
jp
mov
adc
pusha
xor
and
mov
cmp
inc
pop
xor
jecxz
adc
mov
mov
aas
push
test
cmp
sbb
idivl
fs
xor
sti
inc
cmp
add
dec
pop
addb
adc
fs
xchg
cmp
outsl
lods
or
lret
and
das
pusha
mov
out
int3
jne
mov
push
push
or
pop
or
mov
ljmp
dec
mov
push
pop
outsb
js
cmp
push
lret
mov
push
jb
xor
cli
jmp
push
ret
or
popa
sub
jmp
pop
mov
or
outsb
adc
dec
repz
fisttps
inc
pop
adc
xor
addr16
mov
lock
lret
arpl
push
ss
out
insb
sti
inc
mov
and
sub
add
nop
add
push
push
in
jp
cmp
mov
cltd
and
pop
xor
sbb
inc
xor
loope
dec
inc
fwait
xchg
cmp
mov
icebp
enter
arpl
fldt
push
rorl
lds
xchg
fucomi
cmpsb
pop
and
xor
daa
insl
lret
pop
pop
loope
roll
pop
xchg
stc
mov
mov
or
cmp
sti
mov
sub
mov
add
mov
xor
je
sub
das
push
and
and
sbbb
push
sub
inc
adc
test
ja
in
sarb
negb
mov
inc
mov
in
mov
daa
cmpsb
mov
lock
mov
pop
in
je
mov
xorl
lods
std
cmp
stc
cli
hlt
mov
aad
imul
inc
inc
test
mov
stos
cmp
jns
ffree
adc
fs
roll
nop
aad
cwtl
jne
push
repz
stc
cs
and
adc
lods
inc
or
xlat
repz
rclb
push
sub
push
push
imul
sub
insl
mov
fldt
xor
cltd
out
dec
cmp
aam
loopne
mov
xor
repz
dec
mov
nop
add
or
stos
xlat
in
xor
xor
cltd
jne
xchg
inc
cmpsl
xor
ja
outsl
mov
neg
and
pop
inc
push
cmp
shll
jns
xor
jp
pusha
and
and
out
sarl
mov
jl
sub
lahf
cmpsl
lods
sub
mov
daa
sbb
loop
pop
lret
lret
mov
scas
mov
xchg
push
xchg
xchg
test
push
lds
ss
imul
iret
sysexit
cmpsl
mov
xchg
mov
lock
addr16
mov
lods
inc
shl
cmpsl
gs
mov
aad
fistpl
fnstcw
sub
inc
testb
lods
mov
cmp
jae
lock
or
or
cli
dec
js
fiaddl
fcoml
jl
push
sub
fwait
cs
rorl
sub
xorl
rolb
sbb
in
and
cmc
insb
cmp
jbe
adcl
and
stos
in
movsl
out
xchg
test
cmp
fwait
leave
cltd
dec
mov
xor
xchg
inc
je
ret
mov
xor
inc
or
cwtl
stos
ret
add
jo
jnp
mov
cld
cli
cwtl
std
xchg
leave
dec
inc
shl
mov
out
das
in
sbb
add
pop
imul
dec
mov
mov
inc
adc
xlat
stc
pop
aaa
sti
leave
inc
mov
cltd
sbb
movsl
mov
repnz
sub
shll
outsb
scas
xor
pop
cmp
xchg
push
inc
or
mov
or
adc
push
repz
out
add
jecxz
inc
cmp
pop
or
sbb
rol
aam
mov
sti
mov
cld
jbe
scas
data16
mov
and
xchg
les
adc
fisttpll
mov
icebp
mov
adc
mov
adc
stos
inc
push
fsubs
mov
xchg
mov
roll
cmpsb
or
mov
mov
popa
push
mov
icebp
jne
adc
stos
xchg
dec
iret
jae
inc
mov
cmpsb
xor
out
out
and
adc
movsb
lret
imul
jns
aam
mov
daa
or
or
mov
cmp
popf
fldl
add
sub
adc
sahf
insl
xchg
pop
scas
aaa
xchg
push
movb
fcompl
scas
xchg
out
mov
push
adc
inc
cmc
add
outsb
lods
mov
lret
loope
lea
xchg
test
jg
cmp
sbb
jo
fildl
jb
add
sub
add
mov
fdivr
cmp
jp
or
in
inc
mov
inc
pop
jmp
outsb
add
dec
cwtl
cmpb
adc
push
jnp
mov
arpl
xchg
dec
in
loopne
mov
mov
mov
ds
pop
stc
pop
clc
xchg
xlat
sbb
mov
mov
rcrl
sub
xor
imul
cmp
mov
cwtl
xor
or
out
and
ds
sub
mov
add
xor
adc
jo
cld
dec
imulb
mov
in
xchg
jbe
cmp
popa
mov
mov
add
push
inc
sub
adc
push
inc
cmpsl
dec
pop
ss
lock
outsb
mov
cld
mov
jp
push
ss
rolb
inc
mov
jne
add
cwtl
mov
mov
and
lret
cmc
ljmp
pop
xchg
cwtl
mov
pop
cmp
mov
inc
stos
lcall
clc
dec
jno
movsb
or
cmp
cld
jae
inc
in
inc
test
mov
lahf
lahf
lock
outsl
pop
jg
xchg
jo
lahf
add
push
mov
adc
pop
xor
xor
and
or
mov
lret
in
mov
mov
popa
mov
loopne
or
jne
clc
mov
arpl
adc
mov
mov
outsl
jne
lds
push
dec
int3
and
mov
dec
dec
inc
push
mov
scas
test
xchg
xor
shlb
shl
xchg
mov
loop
xlat
xchg
push
xchg
in
inc
xor
out
stos
jecxz
mov
inc
out
push
call
in
push
inc
or
aaa
inc
fnsave
sub
lock
mov
insl
andb
je
aas
sbb
iret
jbe
mov
cwtl
dec
lcall
inc
dec
fdiv
mov
out
sub
xor
movntps
insl
adc
xchg
sahf
shll
add
pop
inc
xor
pushf
in
inc
out
xchg
push
sbb
fcompl
sbb
aam
dec
mulb
pop
sub
mov
adc
mov
sub
xchg
leave
out
stc
repnz
mov
xchg
mov
lock
out
and
mov
xchg
pusha
addb
sub
mov
insl
loop
loope
add
push
mov
stos
addr16
ljmp
popa
gs
mov
sub
adc
jnp
ja
popl
flds
outsl
scas
movsl
fwait
outsb
adc
dec
sub
cwtl
loop
mov
ja
sbb
sbb
push
stc
sti
cld
shl
pop
inc
sbb
jmp
nop
push
cmp
fwait
pop
add
pop
js
sbb
les
mov
sub
mov
push
or
out
mov
subl
rcll
ds
sub
mov
dec
sub
pop
lahf
mov
rcr
enter
inc
cmp
aad
jne
ret
dec
lea
fnsave
mov
sbb
mov
jle
cmp
dec
pop
test
cmp
xor
inc
les
hlt
mov
icebp
jb
std
lret
pushf
jp
xchg
sbb
imul
lret
shrb
xchg
into
adc
xor
mov
cli
xor
cmpsb
out
jb
fs
jp
inc
and
sbb
sbb
push
out
fs
ljmp
dec
mov
dec
popf
push
inc
pop
lret
cmp
xchg
mov
lods
mov
inc
sbb
sub
sbb
js
push
fisubrl
pop
and
mov
jl
mov
cmp
popf
mov
jle
inc
xchg
push
mov
stc
lcall
fldcw
push
inc
ljmp
jns
dec
push
xor
shrl
add
div
stos
add
or
add
into
fsubrl
dec
jge
rcll
dec
jns
enter
mov
cltd
push
sub
inc
ret
stos
xor
jns
call
push
push
adc
inc
scas
jg
les
pop
mov
sbb
sti
rcl
imul
xchg
jle
xlat
cltd
cmpl
in
sahf
add
push
mov
jb
mov
test
aaa
ret
mov
pop
dec
mov
dec
rcr
out
movsl
test
ret
movsb
fsubs
in
jns
mov
push
inc
push
dec
inc
pop
dec
pxor
pop
fs
mov
lret
xchg
lds
jnp
or
test
imul
call
or
jl
sti
xchg
in
add
xor
dec
ljmp
add
into
sub
adc
scas
push
enter
stos
mov
out
neg
xchg
sarb
in
in
int3
jbe
push
xchg
jle
rep
push
xchg
inc
mov
sahf
mov
int3
aam
or
ja
add
dec
das
pop
loop
jmp
arpl
mov
inc
fdivs
dec
das
leave
adc
lret
jge
repz
test
or
add
rolb
mov
test
xorb
inc
pop
mov
inc
fistl
out
jecxz
call
jge
out
stos
xor
fimull
inc
mov
mov
push
jg
add
pop
sarb
ret
clc
mov
mov
lods
jno
or
mov
pop
dec
aas
xchg
mov
jmp
inc
add
cmp
inc
rcrl
fs
clc
loope
inc
test
cmp
sub
jmp
xor
in
loope
sahf
mov
rcll
push
imul
leave
xor
inc
sbb
sub
insl
pop
add
std
lret
fsubs
cmp
mov
mov
or
in
add
mov
push
cmpsb
ja
mov
data16
insb
adc
imul
adc
stos
or
jbe
jb
jge
jo
ljmp
bound
add
jae
mov
rcr
or
js
das
push
add
mov
xchg
and
sub
pop
rclb
icebp
int
xchg
arpl
fmuls
data16
fisttps
mov
dec
cmp
dec
outsl
sbb
icebp
mov
not
pop
cmp
mov
pop
gs
das
and
lea
repz
mov
in
jp
fdivp
push
cwtl
dec
or
add
jecxz
sbb
ljmp
and
sete
dec
cmp
add
movsb
mov
mov
test
xchg
inc
mov
inc
sub
ljmp
xor
jno
lea
mov
jnp
outsb
ja
xchg
push
sarb
inc
and
adc
xchg
popa
hlt
jns
mov
add
ss
hlt
xchg
fnstcw
cmp
leave
or
add
sar
pushf
mov
ftst
pop
push
fisttpll
xchg
daa
push
or
sarb
cmovne
and
mov
cltd
add
test
or
dec
gs
mov
pop
fadd
mov
and
inc
dec
int3
sbb
sbb
push
add
das
add
or
stos
mov
sub
cld
xchg
mov
mov
orb
pusha
mov
mov
sbb
aam
add
adc
fidivl
sub
mov
inc
lret
pushf
xchg
data16
repz
and
add
sahf
sub
sbb
add
or
sbb
pop
pop
fsubl
cld
stc
rcll
andl
negb
xchg
lcall
orb
push
insb
loop
sub
lock
fidivl
cs
cltd
push
ja
mov
and
faddl
pop
xlat
add
lret
jecxz
imul
les
push
jne
cmpsb
in
cs
xchg
scas
movsl
push
popf
pop
adc
movsb
add
ret
adc
inc
cmp
jp
stos
mov
outsb
cmpsl
das
sar
loopne
mov
or
jmp
sti
lods
cli
pop
lcall
pop
push
fnstenv
cmp
dec
cmp
mov
lds
iret
int
push
mov
out
pop
or
aad
sbb
dec
rorb
xchg
jl
dec
dec
stos
push
out
xchg
pop
sbb
dec
adc
sub
cmp
ja
scas
call
outsl
ss
inc
mov
out
or
es
cmp
cmp
cmp
cli
dec
pop
ljmp
adc
clc
mov
pushf
clc
xorl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
push
push
pushl
call
mov
dec
mov
jmp
push
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
inc
xor
sub
mov
movl
push
xorl
add
jmp
mov
notl
mov
notl
inc
cmp
movl
jb
adc
mov
xor
add
jmp
andl
mov
and
mov
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xorl
mov
add
sbbl
movzwl
xorl
mov
negl
mov
orl
movzwl
xorl
xor
add
mov
mov
inc
mov
cmp
movl
jne
mov
movl
mov
decl
xor
add
andl
mov
dec
mov
xor
andl
add
movl
mov
not
movl
movl
movl
mov
mov
movl
mov
jmp
mov
add
mov
andl
xor
xor
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adc
mov
movl
mov
lea
mov
mov
mov
lea
movzwl
sbb
mov
mov
andl
mov
add
mov
negl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
orl
mov
mov
add
mov
lea
add
mov
mov
orl
mov
lea
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
sbbl
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jb
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
jmp
sarb
jae
dec
bound
into
mov
jl
pop
pop
jl
sub
adc
clc
xchg
and
pop
dec
inc
arpl
jg
push
mov
popf
pop
jl
out
add
fdivl
xor
dec
sahf
cmp
xchg
push
popf
inc
mov
cltd
mov
add
out
scas
in
and
inc
sbb
fiaddl
in
icebp
sub
adc
fisubl
push
les
mov
sbb
inc
test
mov
mov
sub
stos
add
dec
pop
imul
sbb
sbb
cmp
cmp
ljmp
andb
and
xchg
aam
mov
mov
push
sub
add
in
dec
test
pusha
or
xor
push
and
test
xchg
testl
in
aaa
or
loop
cmp
dec
scas
lea
imul
out
adc
sub
inc
cmp
outsb
int
push
iret
addr16
inc
xchg
sbb
pop
and
dec
sub
mov
mov
sub
sbb
xchg
mov
mov
jae
aam
sbbb
lods
pop
movsb
push
push
inc
push
aas
leave
xor
dec
cmp
sub
dec
mov
data16
rcrl
adc
xchg
jmp
mov
mov
outsl
sub
cmc
out
pop
or
adc
inc
mov
xor
add
jl
mov
sub
scas
cwtl
pusha
enter
loope
lods
jecxz
lahf
test
loope
std
xor
orl
mov
add
push
fwait
push
mov
mov
push
jle
lods
inc
fs
cmp
jmp
into
pusha
push
lds
mov
sbb
aas
mov
sahf
in
cmp
and
mov
sbb
in
and
imull
loopne
jno
cwtl
cmp
mov
pusha
cmp
adc
in
mov
out
cmpsb
push
xchg
adc
cmc
mov
xchg
dec
mov
cld
mov
fists
add
push
out
cs
sbb
test
xchg
jp
inc
test
and
enter
icebp
mov
dec
in
cmp
cmovae
pushf
lock
sub
inc
mov
push
sbb
adc
dec
insb
pop
mov
loopne
scas
adc
push
xchg
data16
icebp
pop
gs
lods
or
cmp
loopne
push
or
cmpsl
fwait
cmp
daa
ds
fiadds
aam
stos
xor
cmpl
out
pop
cmp
mov
sahf
or
arpl
in
mov
roll
rol
insb
popf
into
es
push
mov
inc
aas
xchg
mov
xor
or
mov
cmpsl
inc
or
xchg
cmp
and
cmp
daa
mov
enter
dec
test
sub
lea
sbb
out
jnp
mov
test
adc
repz
adc
lcall
add
fs
cmp
xor
fwait
test
xchg
mov
push
fsubrp
push
or
ss
pop
out
xchg
mov
out
jmp
in
mov
ss
aaa
pop
mov
cld
movsb
cmp
xlat
pop
out
xor
dec
mov
test
movsb
or
lds
cs
fidivl
push
push
pop
out
cwtl
leave
mov
test
mov
xor
jl
ret
pop
push
xchg
fldenv
int
iret
int3
es
cs
std
xlat
leave
mov
push
mov
into
dec
mov
add
xor
fstpt
ss
dec
movsb
lahf
dec
je
jo
test
inc
fisttpl
jmp
pop
jne
pop
cli
add
jo
pusha
push
sbb
hlt
inc
push
add
je
popa
mov
sarb
scas
dec
inc
outsl
sbb
pop
movsl
scas
aad
push
sub
in
push
mov
mov
int
xor
sti
jnp
push
outsb
push
mov
aam
repz
mov
xchg
jecxz
mov
stc
xor
mov
aaa
cmpsb
add
movsl
dec
shr
fistpll
xstore-rng
cmpsl
addl
mov
enter
testb
shrl
adc
dec
lret
sarl
add
jp
mul
sbb
cmovno
rclb
arpl
pop
push
jl
push
sub
jecxz
pop
pop
bound
movsb
pusha
je
push
ret
mov
fnsave
cmp
mov
sahf
les
out
decl
sub
sbb
js
test
clc
and
aas
enter
pop
sub
lock
xchg
pop
inc
pop
sub
dec
xchg
and
stos
ljmp
cs
in
std
ljmp
test
and
xor
pop
dec
test
dec
out
mov
jo
cmp
cmpb
out
out
xchg
lds
sub
sahf
movl
inc
inc
arpl
pop
sub
xor
aam
scas
rcrl
js
push
in
xchg
je
cwtl
adc
jns
add
adc
adcl
push
lods
mov
xchg
subl
sub
push
pushf
sbb
mov
mov
mov
fistpl
es
push
stos
sbb
aas
adc
call
sahf
mov
push
push
test
xor
mov
lcall
loope
movsb
pop
es
pop
jp
xchg
push
add
scas
leave
dec
pop
lods
or
aam
push
mov
dec
out
enter
call
xchg
ljmp
ficompl
mov
mov
lock
jg
cmp
or
push
test
push
sbb
loope
and
imul
and
xchg
repnz
xchg
cmp
add
sbb
iret
dec
insl
loope
dec
and
movsb
loopne
mov
fs
push
js
push
mov
lcall
cli
shlb
mov
pop
xor
add
movl
sar
jp
divb
inc
push
fcoml
adcl
mov
or
in
mov
and
int3
adc
fildll
or
loopne
pushf
lret
dec
out
fucomp
and
test
enter
pop
sbb
sub
pop
test
xchg
in
repz
jno
leave
pop
sbbl
stos
inc
aas
insb
ret
pop
xchg
dec
std
lahf
jp
dec
sahf
mov
mov
mov
ljmp
lock
pop
dec
lcall
into
or
into
popa
dec
idivl
mov
push
stos
jo
xchg
cmp
cmp
out
stos
mov
cs
mov
ret
lcall
mov
lahf
cmp
es
fisubl
pop
pusha
mov
inc
xchg
stos
add
mov
jo
and
int3
imul
icebp
cmp
dec
fisubs
in
nop
add
cltd
loop
cmpsl
inc
lock
test
pop
jmp
fs
sbb
lods
jnp
out
dec
stos
leave
pusha
sahf
imul
cmpsb
pop
inc
push
loop
lahf
cmc
and
ljmp
fimuls
in
jg
filds
loope
imul
mov
push
cltd
mov
xor
push
rep
mov
subb
jo
jecxz
clc
repnz
rolb
loopne
cmp
or
in
add
xor
xor
scas
lods
and
imul
cmp
in
add
cmp
mov
xchg
and
and
cmpl
inc
aad
and
pop
outsl
push
mov
adc
push
aas
lcall
rcrb
in
dec
inc
movsb
sub
arpl
pushf
cmp
xchg
stc
or
sbb
outsl
dec
sub
jne
inc
sub
xor
sub
push
mov
or
out
add
adc
and
or
push
stos
adc
mov
jl
add
dec
lods
and
push
dec
pop
cmpsb
cmc
push
stos
xchg
mov
stc
mov
fidivl
push
fildl
cli
push
icebp
rolb
leave
push
mov
pop
mov
mov
subb
mov
inc
lods
mov
roll
push
mov
jno
ret
outsl
ljmp
mov
sub
mov
xchg
fs
pop
dec
fxam
fxsave
inc
pop
sbb
enter
mov
cs
mov
push
lcall
lahf
std
lret
mov
cmp
sbb
push
dec
mov
pop
out
inc
mov
mov
adc
xor
inc
cmp
mov
cmp
dec
fisttps
jmp
lea
movsl
popa
outsl
adc
pop
arpl
inc
sti
mov
scas
test
mov
inc
lahf
aas
shll
and
scas
pushf
ljmp
fsts
ss
lret
daa
xchg
insb
sbb
ret
and
xchg
mov
das
inc
fs
or
add
pop
mov
sbbb
jns
addr16
xchg
je
scas
mov
jne
push
outsl
rcrb
xor
aam
cli
cmp
jge
sbb
xor
pop
dec
pop
pop
loop
add
scas
test
jnp
cli
push
add
adc
mov
pusha
cmc
mov
or
and
mov
repnz
sub
adc
fwait
decb
cs
add
mov
xchg
in
notb
add
push
adc
jne
xlat
sbb
roll
cmp
aam
mov
cmc
jg
in
lds
push
or
jae
pop
push
leave
mov
and
adc
jno
leave
aad
push
jge
loope
cli
add
je
shrb
imul
add
in
cmp
xlat
or
jmp
mov
nop
nop
mov
out
cld
jno
sbb
xchg
imul
in
pop
xchg
das
add
test
aaa
inc
push
pop
xor
or
mov
add
or
jmp
xchg
mov
daa
rcrb
lock
mov
arpl
xchg
fcmovu
mov
cmp
mov
lds
nop
cmc
movsb
jg
stc
jns
insb
inc
ja
scas
shrl
xchg
insl
and
pusha
rol
push
fsubl
loop
and
jnp
mov
sbb
test
or
sarb
stos
xchg
cmp
ds
mov
hlt
xor
scas
xchg
jecxz
jne
outsl
cwtl
mov
jno
push
lods
js
cmp
imul
sub
jb
cltd
push
dec
push
push
in
and
stc
into
sbb
les
cmp
and
cmc
mov
cmc
xor
dec
cmp
adc
test
or
push
push
shll
cmp
inc
xchg
inc
adc
push
dec
dec
push
in
add
imul
sbb
rcl
mov
mov
cltd
into
cmp
push
mov
jmp
outsl
xlat
sahf
or
repnz
ret
sahf
and
pop
jle
cs
in
test
jae
mov
jmp
cmpb
pop
sti
std
fcomi
in
pop
adc
bound
mov
aaa
std
iret
jl
call
test
and
hlt
lea
xor
xchg
xorl
popl
ret
sbb
adcl
or
sub
shll
mov
sub
ds
fidivl
pop
fwait
sti
pop
inc
xchg
cmovae
mov
fistpll
sub
jnp
pop
nop
je
xchg
fdivrs
mov
das
lods
jecxz
fs
popf
pushf
scas
repz
cmp
ret
fidivs
outsb
movsb
pop
pop
mov
rorl
daa
enter
leave
jne
fwait
and
and
inc
jnp
cmp
repnz
sahf
add
adc
xchg
push
aam
jbe
inc
pop
dec
and
lods
xchg
jge
and
mov
sub
test
ljmp
sbb
popf
ret
in
or
add
rorb
fwait
test
sti
aas
pop
call
pop
cmpsl
xchg
jne
insl
cmp
mov
and
loope
mov
ljmp
mov
push
not
dec
mov
adc
sub
and
pop
into
lahf
stc
adc
jmp
sub
xor
pop
jnp
and
xchg
fistpl
push
push
pop
sbb
aad
int
sbb
insb
and
pop
aas
mov
leave
aas
fistpl
push
call
jmp
add
cmp
jl
shlb
mul
in
inc
pop
lds
and
ret
or
sbb
fwait
lds
or
je
ss
sub
push
jp
mov
sub
divl
push
mov
cmp
in
sub
fwait
data16
hlt
sbb
jbe
lods
xchg
ja
sahf
movsl
mov
pop
mov
in
inc
dec
mov
notb
call
and
xor
pop
repz
jl
subl
dec
xchg
cmpl
icebp
ret
lds
dec
aaa
mov
pop
push
jne
rolb
pop
sub
fwait
jbe
loopne
roll
fnstsw
push
addl
adc
add
pusha
push
push
or
cmpsl
cs
xor
mov
jp
mov
fdivs
xchg
hlt
dec
into
ret
inc
insl
pop
xor
jbe
inc
ret
add
push
pop
out
sbb
pop
sub
cltd
pop
jnp
pop
jmp
mov
adcb
mov
push
and
mov
outsl
int3
into
adc
inc
das
pop
dec
sbb
rorl
bound
or
mov
mov
ljmp
int
xchg
xchg
sub
lods
dec
mov
stos
xchg
cltd
add
mov
sbb
lea
subb
add
xor
xchg
shll
or
inc
cmp
xor
imul
sub
xchg
ja
outsb
inc
jns
inc
das
xchg
sub
repz
inc
add
rorb
xor
jb
fstpl
or
dec
outsb
out
movsb
mul
addl
mov
rcrl
and
or
and
dec
aas
lahf
test
jl
in
jno
sbb
out
fstpl
imul
adc
es
je
dec
cmpsb
out
clc
xchg
and
test
in
jge
out
cmp
sbb
mov
inc
adc
imul
shrb
xchg
push
lea
clc
push
adc
adc
xchg
add
jne
bound
sub
pushf
in
xor
je
cli
inc
cmp
cmp
or
fwait
sbb
xchg
adc
cmp
sbb
fs
pop
adcl
inc
int3
mov
sub
sbb
pop
aad
mov
call
roll
push
cmp
repz
push
xor
or
jge
movsl
in
ds
mov
seta
ljmp
xor
adc
rorb
hlt
xor
std
nop
or
cmp
loopne
cmp
loopne
sbb
out
bound
hlt
in
insl
es
imul
pop
sub
imul
jmp
addb
js
stos
jnp
push
adc
sahf
xchg
dec
pushf
mov
ja
or
in
mov
iret
inc
jb
jmp
int3
pop
cmc
dec
idivl
in
iret
pop
sbb
jne
xchg
mov
inc
lock
into
dec
cmp
xorb
lds
leave
icebp
adc
mov
cs
pop
add
lods
jg
jae
sbb
rorl
inc
pop
xlat
or
mov
or
xchg
testb
loop
xorl
subl
or
or
movsl
or
idivl
ret
cmp
pusha
jbe
mov
mov
loop
jnp
ljmp
outsb
data16
dec
mov
icebp
pop
dec
cmpsb
push
aas
bnd
add
ja
pop
jne
add
xor
js
xchg
loope
std
test
cmp
xchg
sahf
jno
ret
xorl
repz
push
lahf
addr16
int
jo
nop
adc
loop
jae
xor
mov
cmp
pop
lds
push
inc
faddl
data16
in
outsl
mov
adc
pop
js
mov
sti
dec
sbb
call
repnz
cmp
js
in
mov
mov
push
scas
subb
mov
push
cmpsb
xchg
mov
mov
cltd
int3
mov
fcomps
lods
loop
adc
dec
jb
and
repz
mov
mov
sbb
mov
addr16
sbb
orb
fidivl
mov
push
movsb
js
push
cmp
mov
jb
aad
push
outsl
std
enter
hlt
jle
mov
mov
add
fs
scas
mov
jg
adc
jl
arpl
and
mov
shrl
dec
stos
jmp
push
inc
iret
jle
jns
fwait
outsl
jne
loop
jb
rcrl
js
movl
iret
mov
sbb
xchg
mov
cwtl
push
jle
push
mov
int3
fwait
adc
xchg
iret
or
mov
std
sub
inc
pop
sti
loop
cld
cs
xor
inc
and
pop
out
jae
mov
xchg
fldt
or
mov
fsub
lds
ja
loopne
mov
arpl
and
sub
mov
mov
jmp
popf
push
push
xor
mov
fcmovu
mov
inc
mov
sub
pop
mov
imul
xchg
out
xchg
jg
inc
loop
cld
or
lea
loop
popf
push
mov
lcall
adc
jge
aad
pop
push
adc
cmp
xchg
xchg
inc
cmpsl
dec
aam
cmc
data16
pop
lods
in
jno
cmp
mov
cmp
inc
mov
int3
inc
and
adc
push
daa
leave
lods
fadds
cltd
xor
test
cmp
or
add
nop
push
mov
sub
out
mov
push
cli
pop
bound
orb
daa
stos
ljmp
lcall
xor
mov
xlat
jnp
test
push
popa
lds
or
dec
push
jp
dec
mov
negb
push
xor
lret
jg
and
dec
fbld
dec
mov
lret
sbb
xchg
in
dec
mov
inc
outsb
mov
je
push
mov
in
call
aad
out
mov
mov
pop
sub
sahf
sub
mov
mov
xor
sti
jge
adc
fsub
lock
je
data16
adc
jbe
shr
pop
out
test
jnp
jnp
inc
xchg
loop
cmp
xchg
fucomi
fildll
mov
inc
push
lods
jle
pop
cwtl
movsb
mov
je
fiadds
and
jle
cmp
jecxz
mov
cmp
cmp
lret
jmp
pushf
sub
add
inc
cmpsl
test
and
dec
out
insb
into
or
test
lret
inc
or
ja
sbb
outsl
out
mov
mov
faddl
enter
pop
insl
out
stc
pop
inc
and
cmp
xchg
sub
movsb
push
ljmp
xchg
pop
and
add
les
cmpsb
lret
jmp
bound
push
mov
sbb
fwait
in
adc
das
repz
mov
xchg
adc
xor
xchg
nop
push
lock
adc
cmp
arpl
or
jg
stos
je
sarb
mov
repz
push
sbb
jl
sbb
push
ret
adc
stc
loope
xor
ja
xchg
aas
mov
dec
cmpsb
xor
repnz
jno
pop
xchg
test
leave
lods
adc
pop
div
pop
mov
out
fstl
jb
mov
dec
inc
dec
je
lea
adc
jne
mov
rorb
sbb
pop
mov
ret
es
sub
loopne
push
test
xchg
aas
shrb
pop
mov
imul
mov
and
cmp
les
inc
iret
mov
mov
enter
fistpll
in
inc
push
and
imul
cwtl
ds
or
jmp
out
fsubrs
ds
ret
dec
xchg
call
inc
pop
aam
imul
sbb
outsb
dec
inc
cli
imul
mov
adc
or
enter
test
xchg
imul
sub
popa
jg
cmp
pop
ss
sub
test
aad
mov
cmp
fnsave
filds
lea
test
xor
mov
jg
xchg
xchg
mov
mov
jg
flds
fucomp
out
call
ss
mov
inc
adc
push
outsb
into
stos
test
cld
aam
or
cmp
and
push
popf
dec
push
int3
fimuls
loopne
sbb
mov
or
insl
aas
dec
and
cmc
stos
loop
js
cmp
loope
mov
jb
pop
imul
outsb
pop
mov
aas
adc
mov
pop
pop
cld
lret
mov
pop
sbb
mov
pop
lcall
aam
int
insl
inc
lcall
jecxz
push
adc
inc
popa
inc
dec
mov
inc
insl
pop
jmp
iret
and
rorl
mov
xor
mov
iret
cmc
push
stos
aam
jne
clc
cli
dec
mov
loope
fld
mov
xchg
sbb
mov
fists
mov
cmp
inc
adc
fldcw
xchg
jae
add
mov
sbb
mov
sbb
sub
dec
in
xchg
jnp
bswap
inc
adc
std
and
xor
es
fnstsw
in
cld
popa
xchg
cmc
mov
lahf
in
fs
aam
mov
or
jl
or
arpl
pop
mov
cmp
push
mov
flds
enter
int3
cmc
sbb
hlt
fnsave
testl
lcall
int3
int
jno
xchg
daa
xor
jle
popa
mov
iret
leave
adc
inc
inc
repz
add
jle
adc
mov
fs
sub
push
xchg
sub
lds
int3
int3
cmp
or
roll
mov
lret
mul
mov
jp
inc
std
test
or
pusha
pop
das
sub
pop
scas
inc
clc
in
and
ror
dec
sub
fwait
xor
push
int3
fwait
outsb
imul
fimull
inc
bswap
ret
loop
push
imul
movsb
loopne
pop
lods
pushf
cld
orl
add
divl
in
adc
nop
ret
loope
lods
bound
add
ds
test
pop
cli
rolb
dec
stos
inc
xor
adc
xor
mov
ja
fwait
daa
ret
and
inc
jns
jne
mov
xchg
adc
xlat
out
mov
add
dec
fldl
sarb
inc
or
xchg
cmpb
ficoml
leave
push
push
stos
inc
dec
js
fisubs
or
clc
xor
mov
pop
in
jne
dec
cli
xchg
fucom
in
cmp
mov
shrb
ds
orb
jle
fistpll
dec
xchg
aas
inc
add
jp
add
clc
ret
jne
clc
lahf
out
jecxz
pop
pop
mov
out
andb
lret
or
add
fwait
rorl
sub
dec
pop
in
add
cmp
sti
out
adc
jge
repz
sub
pop
nop
mov
and
fiaddl
adc
cwtl
cmpsl
jbe
in
cmp
mov
push
lret
daa
sub
lods
in
outsb
pop
test
outsb
mov
pop
jno
ficomps
jbe
clc
incl
in
add
sbb
add
sbb
lahf
popa
push
inc
inc
sub
inc
leave
lods
pusha
ljmp
out
sahf
mov
sbb
fucomp
mov
mov
mov
xchg
test
call
sbb
movsl
scas
ret
inc
faddl
push
inc
or
cmpb
mov
pop
jmp
push
add
dec
adc
pop
xchg
add
inc
pop
movsl
mov
xchg
mov
repz
or
pop
call
pop
int
movsl
push
push
jne
sub
and
leave
insb
xor
not
iret
jmp
cmp
data16
jmp
cld
push
jne
jo
dec
xchg
jmp
pop
sbb
aas
stc
stos
mov
pushf
fwait
mov
incl
sub
les
inc
pop
rol
cltd
jne
jmp
mov
mov
mov
and
shrb
or
jg
mov
stos
xchg
gs
dec
clc
movsb
arpl
pop
cli
pop
mov
pop
je
fisttpl
push
ljmp
sub
stos
inc
flds
fidivl
mov
pop
pop
pop
fs
dec
jmp
fidivrl
or
leave
lret
jnp
pop
gs
inc
pop
cmp
cltd
cwtl
add
aas
arpl
jns
pop
dec
jecxz
sub
out
push
pop
mov
sti
sbb
inc
popa
ss
cmp
out
icebp
addb
mov
mov
mov
lds
push
fnsave
dec
jmp
arpl
lea
enter
push
lods
jae
add
pushf
sbb
sub
je
fs
jp
mov
push
and
pop
inc
jp
out
sub
or
push
jno
movsl
mov
testb
xor
insl
movsl
leave
inc
push
adc
cmp
lret
subl
dec
repnz
xor
aam
ret
into
pop
aaa
add
adcl
test
repz
lcall
scas
int3
inc
imul
push
sbbl
sbb
shl
xlat
jns
dec
xchg
das
xor
mov
xor
dec
loop
sub
jne
ljmp
jmp
mov
sub
outsl
add
sub
push
xor
mov
mov
xor
sbb
lcall
push
sbb
fs
jnp
int
mov
ja
cld
push
adc
je
sbbb
sbb
sub
lahf
test
dec
mov
lds
cmc
jbe
xchg
adcl
inc
mov
mov
lods
sbb
inc
pop
bound
pop
cmc
push
in
sub
rorl
jg
xlat
mov
loope
ds
pop
lcall
mov
in
push
lret
jae
scas
mov
les
cmp
pop
push
repnz
xlat
pop
pop
xor
mov
jnp
xchg
or
xchg
pop
movsl
adc
and
fsub
lret
mov
into
push
incl
int3
inc
xlat
add
adc
pop
push
pop
mov
popf
fptan
mov
insb
aad
jo
lret
rorl
pop
mov
test
xchg
xlat
or
test
lret
mov
cmp
push
cmp
mov
icebp
outsl
cmp
into
lahf
scas
adc
popa
scas
and
mov
aas
mov
sti
adc
jp
rorl
jne
dec
sbb
sbb
ret
cmp
arpl
lcall
xlat
sbb
movsb
add
mov
in
out
lods
pusha
push
xchg
sbb
jns
add
dec
mov
xchg
mov
xor
scas
lds
sub
jae
jno
outsl
stos
xchg
mov
cmpl
rcrl
xor
dec
stc
inc
test
fistpll
pop
pop
repz
es
das
push
push
adc
cmp
fs
je
pop
inc
flds
sub
add
int3
mov
cmp
cmp
cwtl
xchg
lea
dec
mov
ss
push
xchg
mov
push
movsb
aas
jno
pop
sub
jl
lods
add
fs
mov
shlb
add
cmp
test
jmp
xchg
test
insb
add
and
js
mov
inc
add
inc
shrl
or
adcl
iret
repnz
insb
mov
push
fcomp
cmp
push
dec
ss
movsl
sbb
nop
jp
add
inc
test
pop
add
aam
daa
adc
ret
aam
cltd
jl
dec
sti
enter
out
push
pushf
lahf
mov
dec
in
cmp
pop
sub
pop
sbb
push
jecxz
jge
icebp
test
in
mov
loop
arpl
leave
hlt
aad
je
mov
add
rorb
xchg
xchg
or
sub
mov
adcl
pop
add
mov
fmull
mov
rol
repz
pop
jns
jnp
test
push
mov
orb
aaa
jge
lahf
dec
pop
mov
imul
lock
pop
push
repz
xlat
sahf
ds
xchg
push
inc
cmp
jge
mov
jo
jnp
jnp
lock
mov
xchg
mov
mov
rolb
ljmp
rcl
mov
hlt
in
xlat
sub
out
clc
jmp
movsb
sub
les
sbb
xchg
aaa
rcrl
dec
rcll
xchg
ljmp
mov
pop
sti
add
movsb
sbbb
mov
lea
jb
and
rcr
dec
add
and
std
add
or
int
xlat
fstpt
add
cmp
jb
dec
in
fidivrs
sbb
outsl
dec
dec
jmp
dec
pusha
mov
dec
inc
int
fdivrs
lock
push
fsts
sub
push
jns
imul
add
out
aaa
jecxz
and
dec
imul
aad
mov
ja
push
jno
cmp
cld
push
mov
pop
into
cmc
xchg
shl
mov
cmp
mov
mov
sbb
dec
and
ret
das
lods
pop
xchg
push
xor
adc
mov
out
insl
je
pop
lds
cmpsb
cltd
ds
mov
imull
mov
pop
jnp
push
sbb
add
adc
out
jb
inc
push
mov
outsb
cmpb
xor
mov
in
mov
imul
cmp
mov
iret
scas
jmp
mov
cmp
mov
jnp
pop
cmp
jl
jg
push
inc
lock
mov
adc
ret
mov
or
adc
cmc
jl
jge
call
ret
inc
lahf
in
outsb
in
js
pop
and
arpl
mov
add
mov
bswap
cmp
sub
pop
xchg
sub
or
sub
scas
test
xchg
push
jle
sbb
cli
fisttpll
jo
push
mov
clc
out
mov
mov
call
push
jle
pushf
out
push
adc
sub
xor
sbb
mov
repz
jb
lret
or
mov
aad
ret
sub
mov
pop
mov
shrb
data16
fwait
xchg
in
repnz
in
icebp
xchg
lods
iret
and
fmuls
xor
andb
mov
stos
xor
push
or
xchg
xlat
std
nop
mov
and
mov
mov
jge
ficoml
shrb
pop
mov
sbb
cmp
mov
pop
xchg
or
mov
loope
bound
pop
pop
movsb
add
lea
pusha
pop
jle
jnp
in
fcoms
mov
fdivrs
xchg
push
jae
adc
loopne
insl
mov
popa
lret
aad
fbstp
hlt
rcll
enter
adc
out
notl
scas
push
lret
mulb
dec
dec
adc
sub
sub
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
jmp
mov
cmp
mov
pop
int
jl
pop
jl
xchg
push
je
popa
xchg
popa
mov
das
and
add
sahf
addr16
jge
call
ljmp
ja
push
mov
or
cmp
cltd
mov
shrl
cmpsb
add
cmp
inc
xor
sar
inc
lock
xor
or
lods
pushf
cmp
sub
xor
lods
cltd
sub
and
shr
out
aaa
movsb
dec
je
imul
jbe
cmpsl
je
mov
inc
pop
mov
jecxz
das
les
in
inc
lods
mov
xchg
jmp
outsb
je
ret
push
mov
push
addr16
cltd
adc
aad
sbb
pop
cmpb
inc
test
pop
daa
inc
loope
imul
and
cld
ret
call
lahf
movsl
insb
mov
xor
fistps
xor
xchg
xchg
andb
mov
sub
inc
rcrl
gs
push
mov
outsb
stc
daa
add
das
and
and
xchg
ja
nop
dec
fcmovbe
jo
or
push
mov
xchg
xlat
lret
push
lret
jmp
shrb
dec
jo
push
jae
jmp
xor
idivl
inc
sbb
in
xchg
scas
xchg
jae
arpl
or
mov
cmc
test
movsb
mov
rol
test
imul
add
jno
cmp
out
mov
roll
fildl
pop
pop
popf
cs
sbb
add
loopne
mov
mov
lods
jg
dec
es
aaa
sbb
sbb
jno
dec
stos
lahf
mov
pavgw
xchg
inc
lret
in
or
jns
out
fisttps
mov
sub
pop
pop
pop
xchg
add
mov
jge
add
call
lock
adc
aaa
insb
or
and
in
sbbb
popf
pop
add
cmp
dec
mov
cmp
ja
ds
fsubs
das
lods
pushf
lods
adc
mov
or
dec
adc
fdivs
or
inc
aad
xchg
scas
inc
lret
cmp
xor
add
incb
es
les
ficoml
adc
mov
sbb
ja
xor
int
or
call
fnstsw
in
mov
fwait
jb
nop
or
cmpsl
add
lods
ljmp
jne
push
push
mov
ds
aad
jo
test
xor
mov
dec
ret
int3
jnp
adc
cld
iret
scas
les
dec
jnp
cmp
jmp
add
and
icebp
lods
cmpsb
js
dec
pop
scas
leave
cmpb
aaa
mov
mov
mov
ds
or
jmp
xor
das
lods
jp
mov
rorb
pop
gs
push
ror
inc
xorb
scas
pop
adc
ret
int3
inc
arpl
aaa
adc
mulb
pop
mov
mov
push
inc
lahf
int
nop
pushl
ret
mov
sbb
jb
les
mov
dec
fildl
fisubl
filds
dec
push
test
jmp
ds
stos
sbb
or
fnstsw
mov
adc
mov
mov
aam
filds
repz
shll
sub
pop
pop
aas
insb
push
jno
mov
into
clc
stc
fdivp
out
xor
xor
adc
jge
lret
imul
dec
xor
int3
mov
mov
mov
inc
inc
mov
mov
or
movl
pop
shlb
pop
shl
popa
iret
stc
dec
jmp
pop
data16
pop
add
mov
mov
jae
test
dec
filds
sbb
lret
inc
ret
push
xor
jno
push
test
add
pop
js
in
shrb
or
mov
sti
outsl
fsubs
ja
mov
mov
imul
imul
or
stc
ror
fwait
lcall
push
sub
notb
xor
lret
pop
addr16
mov
pop
mov
sub
cmp
cmp
mov
out
inc
cwtl
ljmp
mov
inc
cs
hlt
jae
es
fidivrl
sbb
sub
in
mov
mov
outsb
lock
pop
xlat
cwtl
and
xchg
mov
xchg
dec
sbb
mov
jle
leave
mov
iret
popf
adc
iret
iret
repz
pop
fimuls
aas
cli
mov
inc
and
jp
and
fidivrl
addr16
mov
bnd
movsl
ja
fidivl
xor
pop
ljmp
or
popa
pop
in
xchg
sub
ret
or
inc
sub
add
or
and
jb
adc
pop
ds
rclb
data16
shl
sub
clc
jae
xchg
lret
pop
ret
mov
das
lods
scas
rcll
dec
xor
jle
pop
inc
fwait
mov
sub
or
out
fs
jge
pop
insl
insb
push
cmp
movsb
fstps
pop
std
mov
jb
jnp
jno
ss
sub
fdivrl
pop
and
pop
icebp
sub
lret
sbb
shll
jge
mov
adc
mov
sub
adc
or
mov
lret
repnz
nop
popf
pusha
loopne
lods
cmp
adc
fsubl
mov
sub
dec
xchg
add
mov
bound
cwtl
jnp
inc
push
lds
scas
push
insb
pop
inc
test
vcvttsd2si
sub
ljmp
dec
incl
pop
sti
xor
popa
xor
pop
and
js
mov
dec
xor
adc
mov
dec
and
popa
jnp
idivl
pop
ficoms
or
mov
push
push
dec
rolb
mov
sbb
jno
xchg
aad
andl
xchg
fisttpl
mov
nop
xorb
xchg
fstps
jnp
sub
out
mov
or
add
je
push
aad
ljmp
repz
xchg
jmp
inc
vmovss
adc
int
scas
xchg
mov
outsl
or
dec
fcmovb
mov
dec
repz
lods
cmp
jmp
nop
cwtl
push
or
outsb
pop
push
loop
stos
or
int3
cmp
jge
adc
pop
sbb
das
lock
push
fwait
or
dec
leave
sbb
jl
dec
cltd
outsb
dec
cmpsl
popa
dec
cltd
rolb
xchg
outsb
jle
icebp
lcall
scas
shlb
rclb
xchg
cmp
fidivs
and
or
aam
bnd
shlb
or
lods
pop
in
inc
sbb
leave
and
dec
shl
push
xor
mov
push
sahf
mov
dec
sub
sti
lahf
ja
rcl
and
stos
fisttps
xchg
xor
stos
dec
ljmp
sub
js
nop
out
cli
enter
push
icebp
in
inc
mov
mov
jl
pop
mov
rol
jg
push
pop
sti
cmpsb
adc
lods
fwait
lea
addb
xlat
aad
addr16
fucomp
ficomps
mov
movl
xor
sub
rcrl
xor
ss
mov
dec
add
push
pop
cs
mov
loop
jecxz
jno
inc
lock
mov
xor
arpl
adc
push
dec
in
add
into
inc
in
test
punpckhbw
movb
xchg
daa
inc
jno
jge
pop
es
lcall
jmp
dec
fisttps
repnz
in
sbb
dec
iret
fimull
push
inc
ss
push
inc
jns
fldcw
nop
inc
cmp
push
cltd
adc
sbb
adc
dec
outsb
in
fwait
adc
and
jae
fisubs
sbb
andl
sub
pop
xor
dec
dec
sub
jno
sub
pop
call
into
test
icebp
pop
test
lods
out
lret
mov
rorb
ljmp
mov
fisubrs
mov
inc
out
push
mov
lret
sahf
test
mov
pop
inc
dec
cmp
jmp
and
jnp
loopne
adc
std
in
andb
lahf
mov
lret
push
inc
xchg
push
sub
cmp
aas
fwait
inc
iret
cmp
in
adc
cmp
leave
das
lcall
mov
push
jae
push
or
cmp
inc
xchg
dec
inc
push
push
aad
shl
test
pop
add
cmp
push
fildll
inc
jecxz
sbb
ss
insb
jmp
into
out
lcall
ljmp
mov
or
mov
scas
aaa
cmp
mov
shrl
inc
jb
fiadds
mov
mov
cmp
or
nop
aam
ss
and
in
lret
ja
mov
inc
cli
fcomps
jge
pusha
push
mov
cwtl
cmc
pop
scas
push
sub
inc
cmpsb
jb
cmpsl
fiaddl
ljmp
in
das
adcl
data16
ja
insl
mov
jp
test
add
add
dec
xchg
mov
fsubl
mov
sbb
mov
ficoml
xor
dec
inc
je
sbb
and
push
ffreep
xchg
popa
aam
out
ja
pushf
sub
popl
cmp
and
xchg
cmp
std
add
addr16
jg
inc
repz
push
sbb
addb
xlat
or
pop
jno
hlt
inc
mov
push
mov
popf
jbe
scas
or
mov
dec
mov
jno
loope
xor
test
adc
pop
insb
into
cwtl
popa
dec
mov
add
cmpsb
clc
push
mov
lcall
shll
clc
das
add
or
and
and
pusha
sub
lods
jmp
in
rcl
mov
popa
cmp
shll
enter
insl
push
sub
sbb
fs
cmp
mov
pushf
maxps
ja
sub
ss
push
xchg
fsubs
xor
sbb
adc
adc
cmp
jo
jbe
push
ja
loopne
setl
sub
jmp
cmpsl
push
push
adc
xor
lahf
in
pusha
lret
dec
jae
test
add
add
fbstp
icebp
cmp
ret
mov
repz
clc
fmull
or
push
mov
leave
bound
sbb
stc
xchg
jb
adc
and
addr16
mov
push
cld
jl
sbb
pop
in
outsl
fs
and
xlat
cld
add
aad
xorb
jg
bound
pop
mov
mov
mov
pop
pop
push
leave
aas
ljmp
addr16
inc
test
into
push
es
aaa
mov
mov
add
push
fstpl
loopne
out
inc
mov
mov
mov
or
loope
xor
sub
or
mov
or
insl
pop
add
cmp
mov
mov
scas
ljmp
cmp
push
xor
and
jl
inc
pop
ljmp
pop
jo
test
or
and
pop
outsl
add
jp
add
pop
shll
pop
shll
adc
outsl
rcrl
scas
scas
loop
pop
adc
sbb
out
fwait
push
jmp
mov
push
test
xlat
ljmp
mov
call
push
sahf
bound
mov
je
inc
or
sub
push
cli
jns
sub
sarb
jno
push
and
xchg
dec
or
push
negl
rcrb
mov
shll
dec
loop
adc
ret
mov
xor
stos
pop
pop
push
lds
repnz
pop
lods
es
out
jns
repz
mov
aad
inc
adc
mov
imul
cwtl
in
fadds
insb
sub
pushf
into
cmp
pop
adc
cmp
ret
add
scas
cltd
push
pop
pop
das
mov
jl
add
push
xor
lahf
push
xor
mov
jge
adc
mov
mov
packsswb
lahf
or
out
and
iret
imul
mov
mov
movsb
out
out
mov
outsb
mov
rcrb
add
adc
ljmp
push
or
sub
sbb
lea
cwtl
orl
and
inc
std
pop
test
imul
xchg
jle
mov
jae
stos
inc
mov
in
xor
xor
and
icebp
mov
xchg
lret
adc
mov
cmp
or
jp
flds
fildll
test
fiaddl
sbb
pop
inc
cmp
aad
lds
mov
inc
adc
fisubrs
sbb
lock
in
push
mov
test
xchg
and
scas
mov
dec
or
mov
jb
arpl
push
imul
mov
repz
pop
pop
and
cmp
fldl
cli
cli
pusha
add
inc
mov
stc
out
or
mov
mov
xor
mov
mov
mov
iret
ret
movb
sbbl
imul
es
stos
mov
xchg
or
pop
xchg
test
icebp
add
jae
sbbl
fnstcw
push
xor
cmp
jns
cwtl
jp
sub
sub
in
jns
cmc
js
adc
jge
and
adc
dec
in
push
leave
xchg
inc
cmp
mov
jbe
jl
sub
ds
mov
xorl
pusha
int3
or
in
add
mov
adc
mov
fneni(8087
ds
jne
mov
cli
xlat
addr16
mov
fs
mov
fcoms
and
pop
and
fnstsw
cmp
repnz
dec
cmc
push
add
nop
test
xchg
cwtl
push
aad
iret
pop
out
js
xchg
xor
rol
leave
pushf
mov
mov
push
push
rorl
jmp
jmp
cld
xchg
dec
loopne
call
loop
jmp
dec
inc
dec
movsb
scas
add
jl
mov
std
out
inc
fsubl
sbb
add
cmp
or
scas
fnstenv
mov
mov
outsb
cli
mov
pop
mov
pop
nop
btr
inc
jmp
pushf
xchg
cwtl
test
cmp
sub
stc
jmp
lock
lcall
mov
js
scas
mov
in
or
add
xchg
cs
in
inc
mov
push
sbb
in
inc
aaa
sbb
movsb
lds
inc
popf
hlt
test
out
jbe
add
ret
sahf
cmp
and
loop
ja
jecxz
mov
cmpl
bound
fists
adc
out
pop
pop
push
push
loope
add
and
mov
imul
dec
mov
scas
ja
stc
mov
pop
xchg
jecxz
out
fwait
popa
or
out
adc
jl
or
inc
in
lock
fiaddl
push
fimull
sahf
adc
imul
mov
rorb
mov
jp
xor
ja
ja
xor
and
divb
outsl
jp
test
in
xchg
fwait
jp
stc
add
sub
mov
jg
jmp
pop
popf
dec
popa
test
mov
loopne
dec
dec
test
outsb
or
mov
jle
lods
ja
dec
hlt
outsb
dec
push
jne
jmp
out
ret
sub
cltd
add
cmc
and
pop
adc
repnz
sti
stos
pop
and
arpl
int3
test
xor
add
mov
jle
xor
jecxz
or
mov
pushf
stc
mov
adcl
pushf
push
aad
cmpsl
dec
movsb
loop
outsl
scas
ss
and
popf
aad
add
mov
push
adc
loope
rolb
cli
adc
cmp
js
shrl
sub
test
xchg
jns
mov
out
enter
sub
into
cmp
mov
xchg
dec
jle
rorb
or
push
xor
mov
mov
stc
imul
addb
bound
sub
fidivl
scas
jle
mov
out
and
in
push
shrl
push
insl
je
add
popw
aam
dec
rep
nop
push
inc
xor
in
inc
jbe
push
test
rolb
mov
out
fisttps
pop
shrl
cmp
pop
cmc
mov
out
mov
cmp
aaa
fdiv
adc
clc
iret
addb
lds
sbb
add
daa
mov
and
imul
adc
jo
or
testb
in
add
inc
jne
pusha
in
pop
mov
xor
stc
cwtl
repnz
adc
push
notl
push
jp
xchg
cmp
data16
lods
out
sub
dec
mov
das
test
inc
das
imul
mov
cmpsb
dec
dec
test
adc
push
mov
data16
cld
idivb
icebp
sub
pop
jl
sub
inc
jmp
aam
xor
xor
mov
loope
pop
pop
push
jecxz
sti
sar
fisttpll
shrl
mov
arpl
lock
jmp
ja
loope
loope
jl
mov
sbb
jl
addl
mov
push
jnp
in
test
mov
hlt
enter
xchg
mov
ljmp
mov
sbb
leave
loopne
adcb
out
stc
cmp
cwtl
imul
roll
fdivs
sbb
int
pop
xchg
xchg
mov
std
pop
les
stc
outsb
and
pop
je
sub
mov
lods
xorb
insl
adc
pop
fs
sahf
test
in
lahf
and
in
in
rolb
mov
std
das
and
jns
adc
xchg
xchg
popa
sub
cmp
cwtl
outsl
outsl
dec
dec
addr16
out
lock
xchg
xchg
test
pusha
sbbb
inc
clc
insl
push
sbb
mov
dec
inc
mov
ss
mov
stos
jno
mov
pop
inc
bound
lock
inc
add
fmul
mov
fsub
cs
push
test
cltd
sbb
adc
ds
push
sbb
sahf
jne
ss
shr
mov
stos
mov
jae
jbe
inc
ljmp
leave
inc
clc
in
dec
push
fsubrs
pop
clc
mov
dec
cs
fwait
sbb
in
mov
repz
push
sbb
adc
inc
imul
sub
into
cs
dec
xchg
mov
mov
adc
xchg
dec
popf
adc
sbb
sbb
pop
popa
xor
xchg
aas
dec
xchg
pop
or
cmp
rolb
xchg
lcall
andl
iret
pop
dec
mov
mov
mov
lea
mov
cli
stos
je
jnp
in
jno
addr16
xchg
les
mov
popf
sbb
cmp
arpl
or
fisubrs
cltd
pop
push
pop
cwtl
xchg
jl
pop
mov
pop
add
pop
xor
or
jno
and
test
shll
lods
insb
orl
fwait
jecxz
imul
jmp
adc
xchg
push
movb
and
dec
lcall
inc
ss
cld
adc
add
inc
aad
repz
call
mov
leave
cmp
pop
fwait
testl
loope
loop
jae
and
dec
cmpsb
das
dec
mov
mov
out
pop
fwait
int3
jns
aaa
fistps
sahf
dec
insb
or
add
lret
leave
loope
mov
call
dec
jge
lcall
pushf
pusha
shll
add
xor
add
mov
mov
pop
pop
jmp
popa
xorl
fbld
or
jecxz
jo
xchg
stc
jmp
popa
movsl
or
sbb
int
push
loopne
lahf
cmp
repnz
out
jo
popa
sbb
sub
push
fisttpll
mov
outsl
sbbb
aaa
lcall
fstl
jb
mov
mul
adcb
fldt
js
leave
outsl
movsl
inc
dec
scas
lea
add
loope
iret
loop
loope
outsl
lret
stos
xchg
testl
addl
sbb
xchg
pop
inc
stos
inc
lods
lods
mov
les
xchg
or
sub
cmp
out
dec
in
loope
cwtl
sbb
inc
lret
mov
lods
sbb
jae
adc
jbe
push
add
xchg
xchg
test
roll
push
dec
mov
sub
push
xorl
cltd
jg
aaa
out
add
jae
aas
int3
jmp
pop
lcall
idiv
push
loop
cs
mov
scas
out
jno
sahf
js
mov
pop
xor
push
scas
mov
inc
mov
int3
mov
pop
mov
test
ret
add
in
out
into
mov
inc
test
test
xlat
push
add
sahf
leave
xor
xor
in
mov
fcmovne
aam
inc
pop
push
push
xor
mov
sub
pusha
jle
std
stos
jb
in
mov
mov
push
popa
int
adc
repnz
push
xor
mov
xchg
mov
mov
push
or
push
shl
aam
cli
imul
adc
loope
mov
push
call
jl
mov
leave
xchg
je
mov
orb
or
lock
mov
xor
mov
mov
inc
rorl
add
mov
jns
inc
mov
dec
jle
xor
lock
repz
mov
dec
inc
inc
test
aas
or
les
shll
js
movsb
inc
mov
ror
mov
in
or
jo
ja
push
insl
inc
mov
sarb
mov
in
or
xchg
imul
add
mull
mov
lcall
test
xlat
out
jmp
adc
sub
pop
mov
arpl
sti
int
sbb
sub
leave
sbb
inc
lock
sti
push
xchg
jae
daa
sbb
xor
shlb
xor
pop
outsb
imul
pop
jns
fiaddl
data16
in
fcomi
addr16
pop
sbb
xchg
scas
std
pop
pop
ret
or
mov
mov
testl
xorl
shrl
jo
adc
ret
leave
jmp
icebp
xchg
xchg
in
sub
sbb
or
pop
stos
xor
pusha
and
pop
es
mov
sub
lret
xlat
into
pop
xchg
cmp
iret
and
mov
pop
fdivs
leave
in
pop
mov
jmp
add
or
adc
aaa
sub
fwait
mov
mov
xchg
dec
sbb
call
pop
gs
xchg
xchg
stc
popf
pop
out
not
add
shlb
jbe
push
aam
or
nop
adc
jecxz
stos
adc
mov
in
in
int3
fisubl
mov
fdivr
stos
xchg
sahf
cltd
cmc
push
jae
add
rcll
cwtl
push
and
sbb
sbb
inc
push
mov
std
jecxz
mov
dec
pop
mov
repnz
out
mov
fcmovnu
leave
xorl
bnd
xchg
add
das
aaa
aaa
orl
fsubr
ds
js
je
jae
cmp
mov
idivl
aam
and
arpl
lret
ret
jl
out
ret
bound
push
jnp
scas
lods
into
cmp
flds
fsubrl
mov
jmp
and
out
gs
mov
adc
shr
andl
xchg
mov
push
out
rorl
mov
sbb
dec
loop
mov
push
xor
jnp
mov
cwtl
and
push
lods
cmp
into
sbb
gs
cltd
ljmp
sbb
pop
pop
push
pushf
idivl
lcall
iret
roll
mov
jmp
imul
push
add
jbe
pop
movsb
lahf
mov
cmc
xor
ret
das
mov
dec
add
stos
xchg
aaa
mov
jle
sub
sti
test
loopne
subl
scas
mov
cmc
mov
out
fldcw
or
movsb
push
ss
stos
enter
jmp
movsb
push
pop
ret
fdivs
xchg
cmp
arpl
xchg
jecxz
jecxz
rclb
or
pop
xchg
pop
cld
cmpxchg
cld
sub
sahf
xlat
push
int
jmp
mov
xchg
cmpsl
cmp
jno
pop
jle
daa
dec
outsl
test
dec
sbbl
adc
fstpt
cmp
cltd
scas
jg
xor
pop
cmp
dec
test
iret
cmp
lods
sub
mov
xchg
je
out
inc
sti
jo
fidivrl
or
icebp
push
icebp
aad
mov
sbb
push
jnp
push
push
iret
add
ret
sbb
ret
and
mov
addr16
movsl
cmp
add
leave
shlb
movsb
imul
mov
das
in
sbb
lret
ror
fwait
push
int
out
pop
push
xor
jecxz
xchg
imul
sarb
int
add
jge
ja
fstps
mov
lds
into
add
inc
arpl
mov
inc
pop
or
jbe
sub
inc
sarb
push
rcr
hlt
dec
add
cmpsb
cmp
sub
adc
mov
pop
sti
sub
out
ja
fcoms
cmp
andb
sbb
ret
jge
mov
cltd
xchg
mov
stos
push
jno
iret
fucomip
adc
jno
call
dec
pushf
dec
add
sub
adc
mov
movsl
bound
push
add
adc
cs
mov
in
pop
lahf
or
jp
and
or
push
outsb
mov
shrb
into
inc
mov
hlt
dec
push
add
xor
push
xchg
jbe
adc
lods
pop
pop
shrb
imul
movsl
sbb
popa
fwait
in
push
mov
cmp
enter
bound
or
jno
xorl
dec
fs
aaa
and
sbb
lcall
loop
cmpsb
mov
idivl
jle
cmp
test
fs
fists
push
xor
fsub
int
into
mov
bound
cli
aas
add
mov
pop
dec
test
insl
je
adc
mov
ljmp
or
out
aad
fidivrl
mov
push
insl
and
xor
fs
jge
std
stos
mov
push
idivl
inc
shll
or
dec
xor
jb
popf
jmp
daa
push
dec
push
imul
push
adc
movsl
jbe
cmp
pop
ja
or
xchg
add
xchg
orb
sub
sub
aam
mov
js
push
daa
xchg
data16
and
jle
rolb
nop
adc
lods
xadd
push
in
mov
aas
std
movb
lret
push
add
push
adc
lods
and
mov
xchg
inc
pop
mov
popa
fdivrs
jl
insb
push
push
hlt
jmp
stos
cli
leave
fwait
pop
int
jmp
sub
fiaddl
popf
xchg
mov
lcall
aaa
mov
fsts
ret
out
jbe
adc
aaa
jmp
inc
aam
jbe
adc
cmpsl
inc
inc
and
or
lea
les
add
iret
les
out
cmc
mov
xor
in
inc
mov
cld
jnp
pop
inc
out
or
xchg
pop
dec
sbb
leave
jbe
cmp
cmc
push
int
dec
and
je
cwtl
pop
mov
in
xorb
mov
out
adc
sbb
and
push
imul
push
test
leave
popf
icebp
mov
adc
or
stos
cmp
sahf
or
test
mov
pop
sbb
mov
add
xor
xorb
scas
ret
iret
adc
dec
lcall
mov
std
ss
pusha
xor
mov
rolb
cwtl
inc
push
out
pop
push
cmp
xor
dec
jge
xchg
adc
dec
rcll
and
cwtl
cmp
jno
sahf
adc
pop
insl
int3
mov
cld
cli
cmp
shrl
stos
data16
add
mov
inc
dec
and
shlb
out
aam
test
add
or
jecxz
es
mov
add
pop
xchg
mov
mov
ljmp
je
lock
push
inc
in
add
jle
xchg
cmp
dec
push
sbb
mov
fcomps
sub
ficomps
rcrl
jle
popa
mov
pop
ja
jp
pop
xor
xlat
jg
push
pushf
xlat
lret
mov
or
ja
xchg
ss
mov
add
pop
mov
and
int3
fiadds
push
mov
mov
in
xchg
xchg
rcrb
xchg
repz
fucomip
pushf
dec
cmp
adc
mov
sbb
mov
dec
in
cli
fidivrs
fs
repz
adc
and
daa
pop
scas
mov
das
popa
sub
aas
je
dec
push
enter
lods
dec
xor
jge
and
test
aad
push
push
addr16
inc
inc
mov
sahf
mov
ss
or
pop
and
cmp
lods
pop
sub
pusha
xchg
lahf
rcrb
mov
cmpsb
dec
or
jmp
xorb
adc
fmul
arpl
idiv
lahf
add
mov
lea
test
sub
pop
rcl
lods
lea
testb
cmpsb
ja,pt
pop
jnp
outsb
aaa
enter
or
stos
in
push
adc
call
jnp
sbb
insl
inc
fisubl
jge
xor
push
pop
lret
or
enter
xchg
shr
sbb
imul
cmovns
or
movb
pop
in
es
pop
jecxz
dec
aas
cltd
or
and
xor
lock
repz
sahf
and
add
jle
mov
mov
rcrb
or
push
or
movsb
nop
out
mov
insl
push
repz
mov
sub
xchg
pop
xchg
popa
repnz
xor
mov
mov
in
fdivl
pop
lock
repz
inc
push
push
pusha
inc
pop
jbe
pop
out
xor
jl
xchg
dec
push
popf
jno
add
mov
cmpxchg
andb
sub
push
cld
mov
xchg
je
sub
stos
loop
scas
xchg
leave
xchg
lods
sub
xor
ret
aad
shll
insb
push
jns
sahf
mov
dec
into
out
imul
fs
and
or
mov
push
je
popf
lds
mov
mov
inc
ret
inc
movl
add
call
sub
pushf
dec
sti
sub
jns
push
cmp
inc
jbe
jmp
push
ja
out
xor
pushf
jmp
xchg
cwtl
inc
mov
and
aaa
outsb
mov
cmp
or
fbld
gs
icebp
inc
or
fimull
in
sub
nop
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
jmp
insb
jns
sbb
mov
push
jecxz
pop
scas
call
pop
jl
xchg
std
cltd
lods
cmp
xchg
xchg
arpl
pop
lcall
jle
gs
pushf
xchg
xchg
add
adc
add
xchg
push
mov
jle
flds
scas
xchg
and
mov
cld
ret
xchg
dec
xor
cmp
add
lret
sub
and
jp
sbb
pusha
add
dec
insb
mov
cld
js
mov
adc
into
push
add
rorb
out
add
loope
and
popa
inc
dec
add
add
inc
lea
aad
cltd
and
inc
mull
shrb
mov
push
fistpll
xor
int3
jp
out
inc
ficoml
ret
push
xchg
add
mov
loop
pop
popa
xor
aaa
imul
jg
sbb
cmc
xor
cmpsb
sbb
push
jns
popf
fnstsw
jle
push
inc
out
out
sbb
nop
mov
mov
jl
in
repnz
ror
roll
push
lret
dec
or
cmpsl
and
ljmp
push
jne
and
cmp
xchg
ljmp
fsubs
clc
dec
hlt
jae
leave
je
and
push
mov
jmp
push
or
and
fnstsw
inc
add
fimull
or
push
fcomi
outsl
mov
adc
or
mov
std
fmuls
stos
xchg
int3
stos
fsubl
je
add
sub
jecxz
push
and
lods
negb
jb
pop
pop
cwtl
cmp
into
jp
push
repz
pushf
adc
div
test
xorb
push
hlt
clc
je
orb
lods
add
outsl
xchg
outsb
mov
xchg
xchg
aam
adc
push
cmp
pop
push
testl
adc
add
jnp
pop
cs
stc
arpl
ja
bound
data16
enter
ljmp
sbbl
sbb
adcl
xor
or
mov
jns
push
or
mov
pop
mov
or
arpl
incb
orb
mov
xor
cmp
bnd
test
xor
ret
nop
jnp
jns
inc
movl
xor
fldl
mov
jae
lods
or
adcl
jb
mov
sub
insb
pop
rcrl
xchg
out
pop
hlt
adc
sub
lods
adc
lods
lods
cltd
jecxz
movl
lahf
push
mov
mov
cwtl
and
pop
pop
mov
xor
inc
jl
into
fiadds
enter
mov
or
adc
mov
js
sti
mov
insl
sarl
imul
jne
push
aaa
sbb
ljmp
mov
and
add
mov
lea
mov
add
call
cmpsl
xor
pop
sbb
pop
shr
jne
imul
push
mov
incl
sub
pop
dec
in
inc
fldcw
mov
xchg
cmp
pop
mov
dec
jo
fiaddl
bound
mov
loop
fcmovnb
inc
push
stos
sahf
pop
or
scas
pop
or
adc
ret
mov
daa
mov
ds
mov
fistpl
jmp
psubw
rclb
test
jnp
mov
mov
lret
xchg
mov
fiaddl
inc
push
xorl
mov
inc
int
hlt
arpl
pop
mov
bnd
ds
mov
sbb
xchg
aaa
jge
fwait
dec
dec
adc
mov
and
sbb
mov
xchg
out
inc
ljmp
or
jl
and
jne
cs
cli
test
cmpsb
inc
xchg
inc
insl
arpl
cmp
vpor
jecxz
aad
inc
adc
int
shll
sbb
or
jo
out
mov
inc
call
sbb
push
in
cmp
arpl
cmp
cmp
out
imul
daa
icebp
add
cmp
leave
lea
push
jo
icebp
jb
insb
jmp
sbb
sbb
lock
stos
push
push
hlt
add
xchg
rorb
ret
daa
test
jb
jp
das
repz
out
sbb
dec
or
loopne
mov
ret
xlat
jne
add
pop
push
mov
fcmovbe
jl
rorl
jle
add
push
adc
xlat
sahf
rcrb
pop
out
int
mov
js
loope
stos
push
rcrb
xorl
or
fsts
jg
cmpsl
dec
aas
ja
add
adc
jno
aaa
sbb
iret
pop
leave
pusha
cmpsb
pinsrw
popa
cld
sbb
dec
mov
fldt
cmpsl
cld
xchg
mov
dec
sbb
pusha
or
das
adc
cmpb
add
cs
and
xlat
and
mov
mov
mov
cmp
pop
fistps
leave
push
lahf
pop
and
lret
cmp
or
sub
subb
dec
adc
pusha
inc
loop
daa
nop
gs
mov
sti
mov
pop
cmp
fadd
pop
loope
jecxz
sub
fisttpll
mov
or
cmp
adc
repnz
push
cs
loop
inc
jecxz
xorb
push
mov
cmc
lock
mov
arpl
js
xchg
or
cltd
mov
cmpsl
inc
pusha
mov
xchg
add
enter
inc
pop
jno
testl
cwtl
inc
jp
sbbb
ds
and
xlat
pop
notb
loopne
jge
in
xor
inc
ljmp
lods
push
iret
inc
cmp
jl
stos
test
jmp
mov
mov
pop
lods
adc
dec
mov
lret
dec
push
dec
lcall
andps
movsl
pop
movsb
or
dec
fnsave
hlt
mov
aam
loopne
iret
mov
adc
dec
pusha
mov
mov
ret
iret
or
mov
sbb
xlat
jo
adc
push
fidivl
mov
dec
lods
and
frstor
das
jle
daa
cmp
leave
in
imul
sbb
add
mov
inc
mov
add
jle
rorl
inc
add
jb
push
cmp
int
int
lret
and
mov
lea
mov
xor
lret
cmpsl
repz
fisttpl
push
out
push
lock
mov
cmp
push
push
push
mov
push
loopne
cmp
push
lret
add
jns
or
sub
pop
roll
mov
jne
sub
push
cmp
movsl
pop
cmpsl
xor
push
sbb
xorb
ficomps
push
adc
mov
push
enter
shl
addr16
and
int
push
outsb
loope
outsl
cmp
mov
outsb
sub
cld
adc
add
push
rclb
add
xor
popa
or
inc
pop
jb
stos
adc
push
mov
clc
or
add
xchg
ret
jno
inc
cmp
insb
nop
mov
int3
movsb
pop
test
mov
gs
mov
repnz
push
iret
lcall
or
sti
mov
jne
icebp
fucomi
mov
sahf
mov
arpl
in
fdivl
adc
or
pop
sub
in
pop
popa
imul
jae
xchg
or
xchg
js
fistps
scas
mov
aas
cmpsb
sbb
mov
aam
xchg
arpl
ror
pop
sub
xor
mov
subb
mov
das
loope
jne
aam
outsl
xor
outsl
inc
clc
pop
mov
mov
in
loope
mov
movb
jo
dec
push
ja
sub
cmp
push
jge
add
ds
inc
add
cmp
or
push
push
andl
rclb
cs
lds
lret
and
bound
or
fs
fstpl
sahf
sahf
jmp
xor
sub
push
imul
cs
mulb
pop
mov
push
dec
or
dec
loopne
or
cmp
arpl
les
xor
pop
dec
jns
pop
cs
pop
imul
negl
mov
fmul
jne
xor
movsl
shll
mov
fldt
push
xchg
xorb
mov
fwait
xchg
push
and
xor
lret
es
addl
jns
shll
imul
jl
mov
dec
jo
and
jp,pn
push
or
jge
shlb
pop
xlat
hlt
jle
push
fisttpl
jb
or
aaa
aad
hlt
icebp
adc
jecxz
push
loop
jns
xchg
daa
pop
or
inc
add
sarb
fwait
iret
dec
popf
cmp
jle
mov
mov
test
dec
imul
mov
rcrl
sahf
xchg
mov
dec
into
std
adc
and
leave
into
jnp
inc
icebp
mulb
add
inc
mov
pop
jne
popf
outsl
sub
cli
push
gs
imul
es
shrb
movsb
arpl
push
insb
jg
lds
addr16
push
sub
fisubs
add
lods
xchg
xorb
inc
mov
xor
iret
dec
cwtl
jp
add
add
inc
xor
jmp
loop
ficoms
mov
adc
adc
imul
or
add
fwait
cmp
dec
jo
pop
push
add
popa
shrb
into
insb
adc
xor
sub
int
into
inc
dec
xchg
dec
shl
jle
out
jnp
scas
dec
jmp
repz
adc
loope
inc
jae
aam
fdivrs
leave
pmullw
shl
mull
inc
jp
mov
pop
imul
loope
stos
cld
stos
shr
add
pop
aas
mov
jl
jno
xchg
jo
andps
or
orl
mov
out
mov
mov
mov
sub
jp
inc
lcall
inc
inc
jge
pop
add
or
xor
mov
rcl
push
pop
jmp
mov
and
dec
mov
mov
mov
xchg
mov
ror
decl
pop
adc
outsl
dec
dec
cmpsl
xor
into
mov
pusha
out
pop
fmull
push
sbb
repz
les
mov
push
jmp
xor
lea
orb
mov
mov
lods
addr16
mov
nop
ljmp
aam
mov
shll
sub
je
in
dec
add
push
pop
dec
js
nop
loopne
add
cmp
sub
sbb
push
mov
cmpsl
outsb
insb
mov
and
lock
lock
adc
les
add
xchg
cmp
les
xchg
push
xor
and
push
icebp
ss
fildl
push
xorl
dec
xorl
in
cmp
test
sub
loope
pushf
jge
loopne
fidivrl
mov
aad
fadd
shrb
aad
loope
mov
pusha
aam
and
lock
xlat
enter
movsb
mov
loope
aad
dec
in
es
or
adc
pop
pop
mov
lret
notb
xor
mov
sbb
xlat
push
mov
lret
mov
out
arpl
xlat
sub
pop
stc
pop
out
cmpsl
loopne
test
inc
pop
xor
jmp
pop
sbb
data16
or
int3
lods
fwait
adc
mov
bound
js
jnp
sub
int3
and
xchg
push
mov
rcr
sbb
sbb
cmp
or
sub
bound
or
int3
or
mov
imul
add
pop
cltd
mov
outsl
cmp
jne
sbb
icebp
sub
scas
ss
cmp
adc
cmpl
ret
test
add
pop
aas
xor
push
adc
cmp
jg
lahf
inc
lahf
xchg
cmpsl
or
decb
cli
push
les
negl
jb
mov
dec
sub
mov
frstor
lahf
es
jg
mov
fs
sub
fsts
adcl
stos
loopne
out
sub
mov
inc
push
fists
push
shrb
addr16
js
or
movsl
pop
xlat
push
dec
pop
ficompl
xor
es
xor
lret
fsts
das
xchg
mov
xchg
pop
mov
out
and
cmp
push
dec
leave
fsubrs
sbb
mov
loope
pusha
or
cld
subb
pop
int3
adc
cltd
test
xchg
fidivs
add
mov
mov
push
cmp
adc
enter
pop
and
pop
mov
dec
jo
jecxz
adc
addb
icebp
jp
int
adc
xor
jmp
sub
js
lods
pusha
inc
dec
mov
pop
cmp
adc
jmp
pop
popf
inc
pop
jle
fdivs
or
xchg
scas
or
or
dec
test
out
xor
imul
jb
mov
or
mov
shll
dec
scas
cmpsl
push
mov
jnp
adc
loop,pt
pop
out
adc
lods
sub
add
cmp
cmpsb
or
repz
cltd
ljmp
pop
xchg
hlt
sbb
aam
jb
lods
xor
mov
popf
sub
out
push
jae
ja
movsb
or
or
push
push
ljmp
or
add
xchg
cltd
push
pop
mov
adc
ror
add
ret
mov
andb
jae
sarb
aaa
sbb
ljmp
dec
lds
dec
sbb
mov
sbb
jp
cmc
ja
dec
clc
movsl
pusha
mov
int3
sub
sub
mov
in
cs
ja
dec
std
in
mov
xchg
inc
stc
push
xlat
adc
pop
sub
lret
or
mov
pushf
lahf
xchg
or
jg
fisubrs
pop
sti
aad
cmp
mov
lods
mov
es
mov
push
xor
cmc
sbb
ss
push
push
int
enter
dec
nop
insl
pop
mov
iret
mov
push
sub
mov
cltd
push
pusha
ja
ficoms
insb
adc
data16
dec
jge
lds
loop
mov
mov
pop
fldl
inc
js
or
cmp
inc
movsl
jmp
xor
cmp
sbb
push
scas
loop
fildl
aam
inc
out
jmp
stos
pop
jle
inc
sbb
xchg
jp
repz
mov
mov
addr16
call
push
jb
cwtl
in
sub
adc
sub
scas
jbe
pop
inc
dec
nop
int
xor
push
pop
push
insl
gs
mov
dec
sbb
jo
push
arpl
mov
push
cld
das
std
lea
lods
and
xchg
mulb
str
xor
aad
lret
test
shll
sub
daa
loop
cmc
aad
mov
mov
push
sub
and
movsb
adc
pushf
and
pop
sbb
sbb
ds
out
push
and
out
xchg
dec
cmpb
fucomip
add
add
inc
or
pusha
je
mov
xor
and
jo
out
loope
setno
xchg
jmp
fsubr
add
cmc
push
scas
adc
cmp
cmp
mov
rclb
cmp
sbb
ret
push
cli
inc
incb
xor
jle
jb
imul
add
jo
insb
adc
add
movsb
mov
xlat
dec
lret
testb
lahf
sbbb
test
cmpsb
adc
sub
jp
arpl
push
divl
pop
push
push
xchg
mov
mov
insb
mov
mov
and
sub
pop
imul
push
inc
xor
sti
shl
mov
sub
add
dec
jmp
lock
pop
in
and
adc
dec
inc
mov
iret
movsb
push
push
inc
and
scas
jnp
fdivrl
scas
mov
push
push
xchg
shlb
mov
mov
xchg
pop
aad
xchg
gs
dec
dec
inc
cmp
cmp
adc
mov
lods
cmp
aas
fs
es
shll
adc
es
loopne
dec
push
jbe
pop
repnz
or
into
add
jecxz
inc
dec
dec
adc
dec
lcall
adc
das
sub
and
cmp
stc
dec
inc
and
jb
repz
inc
push
pushf
pop
mov
sarl
add
cmp
adcb
test
sti
je
inc
inc
cmpsb
xchg
mov
and
xor
mov
mov
cltd
rcr
cmpsl
jmp
pushw
push
cmp
push
in
jg
loopne
loope
push
int
popa
test
xchg
xor
mov
mov
lret
fisttpll
mov
dec
popl
add
pop
adc
pop
test
insb
mov
push
mov
push
pop
jge
inc
test
jb
push
fnsave
out
xor
insb
mov
adc
mov
bnd
xlat
pop
jae
inc
std
mov
loopne
repnz
mov
pop
cmpsb
adc
xchg
insl
in
sbb
sbb
mov
stos
ljmp
mov
push
incb
xor
dec
cmpsl
cmp
lods
inc
xlat
sub
xchg
ja
in
aas
mov
sub
in
int
pop
jns
jmp
cmp
jbe
cwtl
bound
push
or
and
in
jmp
test
aaa
push
ret
xchg
out
xchg
lds
inc
or
imul
jp
decb
mov
cs
test
repnz
test
xor
shlb
mov
cmpsb
xchg
cmpsb
call
add
push
scas
or
scas
std
aam
inc
popf
or
or
mov
rolb
dec
loop
dec
imul
fwait
xchg
ret
cli
jnp
sbb
pop
mov
pushf
sub
bound
testl
int
sub
test
mov
js
and
movsl
pop
dec
lods
mov
pop
jecxz
and
lret
mov
stos
jmp
mov
ret
dec
sahf
imul
mov
sti
xchg
pop
enter
sbb
mov
and
or
xchg
or
mov
orb
mov
scas
sub
mov
enter
sbb
lcall
daa
jge
and
pop
push
fisubrs
out
jmp
jae
or
cmp
addr16
cld
imul
sti
in
mov
lahf
out
inc
sub
test
lock
sbb
fnstsw
lcall
scas
mov
cli
add
cwtl
xchg
inc
push
imul
jne
lds
and
stos
ss
loopne
hlt
insb
movsl
int3
and
jno
movsl
call
add
jg
hlt
jmp
jmp
subl
mov
test
mov
sub
clc
xor
mov
adc
push
hlt
sub
mov
mov
popf
inc
insl
mov
adc
pop
je
push
rcll
lahf
mov
push
mov
mov
dec
sub
sub
repnz
sbb
jge
sbb
xchg
pop
popa
push
xchg
sub
fdivrs
inc
in
dec
pop
xchg
jns
mov
ljmp
shll
and
in
aaa
jbe
fcoms
mov
mov
push
mov
fiaddl
jae
enter
sbb
mov
pushf
cmp
out
bnd
rolb
sub
aaa
push
sub
rorb
aaa
dec
in
imulb
ffreep
jge
repnz
gs
movsb
stos
adc
xchg
subb
imul
mov
cmp
push
insl
loopne
mov
add
cmpsb
loopne
out
les
dec
andl
mov
and
ficomps
cmp
lods
sahf
mov
pushf
sti
add
jb
aaa
sbb
movsb
shl
ret
sbb
mov
sti
je
sahf
xor
cmpsb
rcr
outsl
cmp
pop
cmpsb
ret
xor
add
mov
or
sbb
test
and
fsubr
mov
loope
adc
bound
cmp
jmp
jge
gs
push
sbb
mov
inc
sti
enter
add
xchg
iret
stos
pop
adc
movsb
enter
and
xor
stc
add
fisubrl
or
fsts
int
addr16
push
arpl
mov
stos
sbb
xlat
test
pushf
bound
and
cltd
and
in
or
cmp
unpckhps
stos
int3
aam
mov
pop
lret
mov
or
out
dec
cmp
and
test
pop
xor
mov
decl
jecxz
cltd
outsb
adc
xor
lock
pop
leave
or
cltd
into
das
icebp
xlat
bound
aam
sahf
xor
pop
fs
jg
mov
adc
mov
jns
push
push
dec
iret
push
mov
fsubrs
fs
ds
lods
popa
sub
xor
out
int
les
outsb
shl
mov
imul
insb
mov
jle
lods
mov
xor
int
push
or
pop
xor
adc
mov
std
mov
lret
xchg
mov
push
cmp
jecxz
mov
xchg
mov
pop
orl
gs
fcom
mull
fidivrs
adc
sbb
push
and
pop
imul
push
inc
lods
mov
sbb
mov
mov
lcall
add
add
add
push
push
outsb
test
aad
fstp
add
mov
in
jae
js
call
dec
lret
lods
loope
sbb
add
inc
test
jecxz
sub
cmp
sbb
inc
inc
cmova
scas
jp
arpl
pop
call
mov
adc
sbb
push
push
out
pusha
lcall
ljmp
frstor
sbb
shll
lahf
cmp
fdivr
int
push
and
cmc
mov
lods
mov
jb
inc
into
jo
cs
fst
inc
int3
imul
inc
xlat
cmpb
or
int
mov
fwait
int3
jbe
aaa
sqrtps
into
pop
mov
out
adc
mov
push
inc
sub
pop
enter
mov
mov
fnsave
add
inc
hlt
incb
aad
jmp
and
jne
cmp
jecxz
imul
sbb
xor
mov
jp
movsl
inc
fldt
mov
push
dec
lret
dec
xchg
ja
xchg
or
or
fistpll
out
icebp
xchg
adc
movsl
jge
leave
in
xlat
sub
sbb
ljmp
gs
and
pop
enter
or
cli
or
cmp
je
xor
ss
jbe
jb
lods
in
aaa
jne
pop
mov
mov
mov
and
insb
lods
mov
xchg
jle
shrd
adc
inc
int
ds
popf
and
cs
sbb
sarl
mov
push
lcall
enter
mov
in
test
mov
sbb
aad
fwait
mov
lods
mov
mov
lock
decl
mov
lea
mov
sub
fsub
popf
cmp
or
es
pop
mov
dec
sub
xchg
cmp
cwtl
inc
cmp
dec
xor
or
mov
test
push
sarl
aad
xor
mov
inc
or
in
pop
add
lret
push
mov
pop
aad
jmp
bound
mov
frstor
push
cltd
les
stos
push
aas
push
inc
jp
push
adc
mov
or
lock
cmp
jae
jl
jae
pop
test
out
imul
mov
xor
jp
or
icebp
and
mov
iret
leave
jnp
ds
dec
insl
or
cli
jmp
adc
cmp
mov
popa
fwait
fwait
lock
inc
pop
lcall
into
adc
jne
cmpsl
sti
inc
mov
pusha
aas
xchg
push
dec
dec
ret
js
inc
or
jmp
jbe
ljmp
das
lods
xchg
pop
sahf
xchg
jmp
mull
ljmp
lea
mov
in
jne
insl
jp
insb
aad
int
xchg
xchg
push
inc
in
sbb
test
test
mov
lret
xor
out
ja
cmp
xor
jmp
adc
mov
xorb
popf
ja
pushf
aaa
push
clc
jns
loopne
out
and
test
xor
in
pop
pushl
add
xchg
adcb
mov
in
xchg
fdivrl
sbb
enter
nop
cmp
xchg
into
inc
aad
inc
es
in
subb
cmpsl
pushf
push
sbb
shrb
push
int
add
popa
sbb
cmpsl
jae
lods
mov
call
cmpsl
mov
push
xchg
mov
call
pop
jae
and
lcall
imul
ds
arpl
scas
aam
push
mov
addr16
inc
cld
movsb
jne
out
in
mov
mov
cmc
sbb
mov
lret
movsb
xorb
cmc
stc
int
push
aaa
fwait
out
adc
mov
jo
pop
add
ret
add
push
or
mov
sbb
xbegin
mov
add
fisubs
insb
inc
imul
push
dec
and
pushf
in
push
xor
and
mov
cmp
aam
and
xchg
mov
cli
xchg
call
and
mov
icebp
stos
mov
fisubs
and
pop
imul
cwtl
sbb
addr16
pop
insl
add
dec
dec
xor
jl
in
inc
push
test
std
rcll
je
sbb
shlb
leave
in
lret
out
mov
stc
dec
movb
push
dec
je
test
jl
add
fdivr
and
sti
add
push
sub
hlt
add
sbb
fidivs
push
bound
adc
adc
jmp
inc
mov
shrb
add
bound
add
cmp
adc
xlat
adc
inc
subb
fdivrs
shlb
fcomps
ja
fildl
dec
dec
js
loope
shll
jnp
popa
cmp
xor
push
jl
sbb
fldcw
jl
push
sbb
ja
ja
test
lret
clc
jle
dec
cmp
fs
and
xor
nop
add
es
test
fisubrl
adc
jge
sbb
out
adc
pop
pusha
loopne
cli
and
kunpckwd
lods
ss
pop
dec
call
inc
gs
cmp
inc
xor
mov
shll
sub
cmpsl
ja
mov
jp
mov
das
mov
lea
sbb
rcrb
scas
cmp
mov
push
out
add
leave
mov
add
mov
loop
mov
movsb
sub
fwait
add
movsl
mov
push
sub
push
les
mov
xchg
cmp
or
sbb
pop
jae
lods
adc
dec
pop
insb
popf
loopne
and
mov
mov
fwait
sti
rcr
pushf
pusha
das
fiadds
out
jne
mov
mov
es
xor
lods
ljmp
push
inc
test
jmp
add
mov
imul
outsl
jmp
cmpb
xor
incl
push
stos
push
pop
sarb
xor
sub
addr16
xor
pop
int3
xchg
cmp
das
das
shl
subl
rcll
fistpll
jg
leave
test
jo
cmovbe
lods
std
mov
xchg
and
dec
jg
aaa
aas
loope
jns
test
jle
aas
fcompl
push
mov
add
mov
pop
xchg
push
and
pop
mov
pop
adc
mov
scas
shlb
jge
and
fs
lahf
sub
fs
fdivrs
stc
and
ja
dec
xchg
les
inc
and
pop
test
mov
js
out
or
cmc
ds
inc
enter
iret
xor
or
dec
and
stos
bound
icebp
decl
mov
lahf
xchg
mov
mov
xor
cmpsb
sub
jne
mov
mov
push
cld
jmp
lods
ret
mov
inc
xchg
pop
ficomps
jge
in
in
pop
pop
jno
ljmp
push
sub
lock
jns
loop
push
jbe
das
adcb
add
add
push
pop
pop
adc
sub
xchg
cmp
es
lret
popa
out
mov
cmp
out
sub
cwtl
lock
mov
xchg
fidivs
cmpsb
push
int
lea
mov
sub
jb
gs
dec
sbb
ja
xchg
sti
mov
mov
cmp
pushf
pop
lahf
insb
rcll
ficoml
cmp
sbb
loop
jmp
sbbb
fcmovbe
xchg
lret
jmp
dec
lock
sbb
push
sbb
movsb
mov
into
fwait
mov
insb
int3
clc
icebp
out
clc
repz
xor
dec
fcmovbe
or
movsl
adc
sbb
mov
push
cltd
add
mov
imul
insl
pop
and
or
lds
mov
and
mov
scas
ss
push
push
ret
int3
inc
fisttpll
xor
mov
dec
je
fmul
lcall
mov
repnz
jno
push
scas
data16
add
jp
push
pop
scas
cmp
and
mov
push
ss
xor
inc
cmpb
lods
std
and
sub
and
loopne
movsb
lods
xor
dec
outsb
mov
cmpsb
dec
xchg
pop
outsb
jns
pop
or
ja
push
xchg
fisubl
push
add
stc
or
jmp
pop
sbb
outsb
loopne
jae
mov
insb
outsl
loopne
loop
xor
cmp
das
addr16
mov
popa
cmp
and
or
scas
cmp
lcall
pusha
push
jb
xorb
das
cmpsb
dec
je
or
icebp
and
mov
stos
xor
in
cmpsb
lea
jl
push
add
rolb
cmp
and
rcrl
inc
iret
stos
dec
aam
mov
data16
or
xchg
pop
popf
loop
imul
sti
insb
in
cltd
mov
ret
repz
jns
push
push
adc
jae
mov
jno
rcl
lea
inc
add
dec
insl
dec
lahf
mov
ret
xchg
leave
out
bound
cmc
ret
xorb
fcompl
jmp
mov
pusha
lods
addb
xor
pop
fistl
lret
insl
shlb
sbb
xor
andl
mov
jo
mov
sarl
loopne
xchg
xchg
cwtl
lret
mov
sti
dec
xchg
jp
inc
jmp
pop
fisubrs
cli
inc
inc
add
sahf
mov
fdivr
lea
clc
adc
and
jbe
mov
pop
dec
sub
inc
jp
inc
xlat
je
dec
in
data16
je
std
es
xchg
push
repnz
and
repz
jp
jnp
xchg
mov
bound
jmp
lret
cltd
xchg
add
add
inc
sbbl
jge
enter
and
in
and
pop
xor
into
mov
pop
adc
push
icebp
stos
add
jg
adc
int
sbb
pop
xchg
pop
cmp
mov
shr
popf
and
cmp
out
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
jne
adc
std
push
adc
aas
adc
sbb
adc
sbb
add
push
adc
out
jg
add
dec
adc
mov
jns
add
inc
adc
sbb
inc
add
cmp
inc
add
cmp
inc
add
cmp
inc
add
add
add
add
add
add
add
inc
cmp
add
scas
inc
adc
inc
cmp
add
adc
push
adc
cmp
add
sbb
add
adc
idivb
inc
add
cmp
cmp
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
adc
subb
cli
adc
sbb
adc
pop
inc
adc
sbb
adc
in
pop
adc
pop
sub
add
add
inc
add
add
inc
add
add
cmp
add
aaa
adc
cmpl
adc
push
dec
adc
mov
adc
lock
add
adc
outsb
or
add
add
add
push
push
inc
push
cs
sbb
sub
push
call
inc
cmp
jae
popa
insb
insb
and
je
pop
push
outsb
fs
dec
push
pop
dec
popa
imul
outsl
insb
fs
dec
outsb
arpl
gs
dec
outsb
outsw
inc
jo
add
add
add
add
add
cmp
add
add
add
add
add
mov
cmp
add
mov
cmp
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
