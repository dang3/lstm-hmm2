push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
hlt
adc
out
jl
jl
pop
jl
adc
and
popa
pusha
pcmpgtb
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
jmp
ret
out
mov
xchg
jmp
loop
arpl
out
sbb
mov
fisubl
and
mov
lret
popa
imul
iret
test
add
call
add
pushf
lahf
ret
mov
cmp
jb
or
stos
mov
lock
hlt
jo
jbe
test
sbb
test
sub
push
sub
dec
or
icebp
nop
and
mov
jle
jb
lds
loope
loopne
cmpsb
setp
stc
mov
adc
loope
xchg
lret
je
insl
add
jno
int
push
mov
mov
outsl
rcr
push
jns
add
insb
add
jmp
hlt
dec
ljmp
lock
aam
lcall
repz
cmpsb
js
or
cmpl
shll
shll
or
and
jg
xor
push
push
outsb
popf
xor
notl
cmc
icebp
scas
enter
cmp
mov
mov
out
pop
xchg
test
shrb
and
hlt
scas
sub
push
pop
ret
lods
dec
stc
movb
mov
mov
cmovne
xor
cli
fimull
push
out
enter
jns
mov
sbb
sbb
xchg
cltd
sub
and
dec
out
inc
jae
cmp
clc
cmpsl
push
jg
and
insl
push
lret
and
pop
ss
xor
sub
pop
decl
mov
loop
adc
ljmp
mov
mov
pop
je
mov
outsl
jne
inc
add
mov
adc
sub
add
lock
insb
cwtl
stos
ret
jns
pop
cli
cmpsl
mov
adc
bound
and
push
fildll
mov
cmp
popa
pop
jno
cmc
fbld
cmp
sbbb
fwait
sub
dec
jge
mov
pop
ljmp
xor
adc
outsb
jb
mov
mov
sbb
mov
add
rcr
and
push
in
xor
fldenv
pop
insb
ret
gs
xchg
sub
daa
cmpsl
fwait
insb
roll
out
daa
ljmp
shr
ret
test
push
mov
and
cmp
pusha
out
mov
xor
mov
ja
xchg
shll
xchg
inc
or
sub
fldl
bound
pop
hlt
arpl
sub
std
pop
and
jnp
stc
psrld
jmp
and
lods
les
movsb
ja
js
int
mov
es
std
push
mov
or
aaa
scas
dec
push
sahf
cld
fnstenv
pop
lret
dec
clc
add
pop
je
insl
scas
sbb
mov
mov
out
test
lahf
popa
scas
add
aad
ds
xor
or
xchg
lods
daa
mov
xchg
mov
roll
xor
incb
mov
push
test
inc
imul
sbbl
es
icebp
cmpsl
inc
int3
ds
add
loopne
aas
lods
and
cmp
mov
sub
lods
outsl
xchg
jo
in
inc
mov
fwait
lret
mov
popf
xchg
rolb
data16
lea
sbb
jo
push
fstps
mov
fwait
adc
aaa
fistpl
insl
xlat
cmp
sbb
xchg
add
cmp
or
repnz
imul
jne
popa
ljmp
sbb
dec
orl
js
sbb
insb
push
jmp
test
lret
in
and
addr16
jg
orb
js
jbe
or
push
xchg
lea
push
aam
fimuls
into
repnz
nop
sbb
repz
mov
scas
push
fsts
jnp
scas
sub
test
jnp
sub
push
xchg
dec
int3
dec
hlt
and
mov
cwtl
sarl
jae
add
dec
xor
ret
pop
mov
cmc
push
lds
or
dec
in
dec
pop
popa
push
es
ret
imull
adc
jmp
stos
add
in
cmp
and
sub
icebp
jp
inc
mov
and
push
jmp
or
gs
pop
mov
leave
leave
and
adc
sub
pop
mov
lcall
inc
or
adc
xchg
cmp
scas
int3
fimull
adc
pop
scas
add
aam
or
cmc
mov
xor
aam
mov
adc
mov
jbe
mov
out
push
scas
jno
mov
pop
cld
mov
xchg
call
pop
push
mov
inc
mov
sub
jnp
out
pop
int3
and
lock
in
inc
and
jno
stos
in
xchg
movsl
push
push
fisttps
jecxz
mov
sub
int3
pusha
pop
insl
mov
das
sub
in
or
in
nop
repnz
xchg
lds
add
cmp
push
mov
andb
mov
int
in
in
push
sub
mov
or
xor
call
lea
adc
dec
lahf
push
dec
scas
je
cli
ret
inc
pusha
mov
inc
jge
sub
fldcw
lods
imulb
mov
daa
in
dec
mov
int
fnstenv
push
fcompl
push
fmuls
pushf
daa
sub
or
lret
add
psubsw
dec
rolb
rclb
or
out
or
cmp
pop
andb
insl
pop
inc
lahf
jp
cmpsl
call
fstl
stos
mov
mov
shrl
xor
cld
push
in
jecxz
jo
call
add
inc
fcoml
les
inc
push
cmc
js
and
daa
fidivl
call
loop
js
out
inc
in
sbbl
cmp
outsb
jge
mov
fdivrs
pop
mov
lret
inc
push
mov
lret
cmp
inc
lock
fstpl
pop
sub
jo
scas
aas
cli
enter
lods
xchg
pop
xchg
inc
aam
jmp
pop
cmc
add
pavgw
push
xor
cwtl
inc
in
add
xor
les
add
insb
aad
fdivrl
dec
xchg
fistpl
orb
add
sbb
lcall
jne
pop
popa
rcl
jecxz
xchg
ret
mov
nop
test
jl
adc
lock
popa
ljmp
jg
fld
shl
cmp
xchg
adc
sub
aas
pop
je
ror
lods
sbb
movsb
repnz
push
sub
or
dec
pop
sbb
xchg
jle
ds
movl
inc
test
mov
imul
leave
dec
xchg
fs
dec
test
push
loope
adc
inc
fs
mov
or
jl
or
test
and
outsb
dec
dec
mov
mov
shl
mov
jns
lock
mov
mov
add
inc
mov
mov
call
and
xor
jns
cld
pop
aam
and
mov
insl
add
sub
or
adc
test
rolb
insl
mull
andl
mov
mul
lock
mov
or
adc
xchg
js
je
inc
in
sub
pop
imul
in
jnp
pop
movsl
je
push
push
andl
adc
jle
jmp
jg
sbb
sub
das
add
fs
enter
shr
mov
sub
mov
or
sti
jg
mov
icebp
rcrb
cmpsb
testl
jge
rorb
xchg
mov
dec
adc
inc
lahf
js
add
add
sbbl
mov
xor
insb
shlb
or
loop
pop
lret
fisubrl
jmp
push
clc
push
jne
dec
shlb
inc
enter
and
data16
fwait
add
cmc
jne
jno
scas
in
mov
jb
cmpsl
mov
das
adc
jno
xchg
jbe
dec
sub
jae
xchg
fwait
push
xchg
lret
mov
ror
repz
xor
xchg
pop
mov
div
call
imul
imul
xor
dec
dec
adc
jg
dec
mov
fmuls
inc
or
adc
xor
in
pop
pop
out
sbb
popf
aad
inc
ljmp
lock
dec
fs
popa
pop
pop
inc
mov
imul
adc
movsb
ljmp
test
add
adc
add
lock
std
icebp
xchg
or
lea
cmp
notl
arpl
ret
cmp
jp
loope
leave
xor
mov
or
sbb
adc
add
push
inc
xchg
xchg
das
sbb
bound
std
in
mov
xor
jbe
mov
aam
sbb
pop
push
push
sarl
pop
push
xor
push
fwait
lcall
popa
int3
dec
lds
push
mov
js
ss
into
jmp
fdivs
mov
mov
ja
xlat
rorl
mov
mov
jmp
mov
fs
push
shrl
leave
ja
jae
xchg
scas
inc
inc
sbb
frstor
xor
mov
cmp
mov
cs
std
mov
xchg
mov
sbb
inc
dec
push
ja
out
clc
out
inc
inc
std
lahf
adc
or
cmp
fimull
jmp
push
mov
push
dec
xchg
mov
inc
sbb
xor
lret
insl
sbb
repz
es
stos
test
sbbb
pop
cmp
xchg
jbe
outsl
data16
xchg
push
rcrb
lret
cmp
jmp
adc
int
aam
jne
mov
in
cmc
push
ret
icebp
jg
lahf
mov
dec
cmp
daa
cmp
cs
pop
fcmovnbe
xchg
mov
pop
push
enter
pop
pop
push
dec
push
sahf
sbb
loopne
shl
lock
and
aam
jnp
pusha
push
in
and
push
xor
fmull
xchg
jge
sbb
jecxz
inc
cld
shll
sbb
mov
call
cmp
fistps
repz
test
repnz
ljmp
aas
faddl
mov
push
rorl
xchg
jne
mov
xchg
mov
cmc
nop
inc
pushf
in
xor
fisttpl
dec
push
ljmp
icebp
inc
cmp
rolb
push
pop
and
dec
outsb
mov
dec
xchg
add
out
pop
jmp
loope
mov
inc
mov
int3
mov
push
fdivl
mov
icebp
rcr
loopne
xor
lds
daa
pop
or
lret
sub
mov
add
adc
mov
mov
aas
imulb
fstp
pop
pop
dec
js
jl
sbb
xchg
inc
mov
mov
adc
jg
inc
out
jle
adc
and
dec
loopne
inc
ret
or
xlat
push
or
xchg
mov
fiadds
test
aaa
push
xor
jo
mov
lret
push
sbb
push
sub
test
imul
fimuls
fmul
fmull
cmpsl
mov
fs
test
fdivp
divl
mov
xchg
faddl
xchg
xchg
ds
pushf
stos
shr
mov
xor
inc
daa
adc
mov
pushf
insl
mov
aad
lret
pushf
cmp
or
xchg
adc
xorb
nop
adc
aaa
mov
inc
mov
xor
test
cmpsl
pop
es
and
dec
in
dec
inc
aad
push
pop
mov
into
sub
jmp
sbb
dec
divb
aam
push
insl
repz
daa
das
push
jmp
icebp
xchg
and
ja
dec
cmp
outsb
stc
jb
push
js
pop
sbb
jmp
adc
faddl
cs
ja
inc
add
and
stc
pop
xchg
adcl
jno
sti
push
movsb
inc
rcl
push
mov
and
cmpsl
xor
in
mov
jmp
iret
mov
js
sbb
push
js
pop
in
push
xor
outsl
mov
pop
in
adc
jg
mov
sbb
icebp
mov
adc
dec
jno
mov
lret
outsl
mov
lods
jo
sub
mov
and
mov
addl
push
jne
jno
mov
jne
mov
mov
add
jns
mov
lods
jmp
push
xchg
jb
inc
fwait
push
stc
dec
pushf
ljmp
scas
dec
pop
mov
test
inc
sub
sarl
ret
push
fistpl
mov
cmp
mov
in
mov
jb
pop
xor
jmp
mov
sub
pop
jne
push
je
jp
mov
std
xchg
stos
pop
xchg
lea
cmp
ds
inc
into
or
jmp
inc
pop
leave
fst
mov
cs
xchg
lods
jo
mov
add
push
iret
push
cmc
imul
sarl
sti
and
scas
inc
daa
cmp
cli
test
mov
pusha
xor
cs
sbb
pop
mov
sub
orb
icebp
jne
popf
jae
sub
ret
es
nopl
xchg
mov
mov
add
ror
movsl
sbb
dec
push
sbb
mull
in
fdivl
sbb
dec
test
pop
insb
or
insb
fwait
out
xor
cmpsl
rcll
inc
sub
push
es
leave
push
das
stos
outsl
xchg
mov
mov
jmp
jmp
dec
jge
sbb
out
jns
cld
in
pop
jns
test
leave
and
jb
jae
fimuls
mov
push
mov
dec
movsb
stc
stos
mov
push
inc
and
das
mov
and
jae
cld
adc
leave
dec
xor
lods
std
bound
pop
popa
ret
enter
sbb
mov
pop
mov
popl
add
xchg
repnz
lret
sub
shlb
into
cs
push
arpl
lds
negb
pop
insb
ja
jnp
ret
inc
clc
adc
and
mov
push
push
call
xchg
cmp
mov
and
xorl
popa
fs
pop
mov
or
es
mov
jmp
das
nop
mov
jbe
or
notl
adc
xor
je
aam
or
cltd
or
xchg
cwtl
sbb
lods
or
push
arpl
jmp
sub
stos
test
jne
adc
mov
xlat
into
and
insb
jl
mov
dec
add
rcll
adc
das
je
jno
fdivs
dec
fimuls
popf
imul
mov
pop
in
xor
andl
add
sub
repz
test
pop
push
stos
ror
dec
sahf
insb
mov
push
subl
cmp
xor
or
or
sub
fbld
cmc
mov
jg
lds
repnz
sarb
jge
aam
jmp
ds
cmp
push
cmpb
pop
sub
rorb
fistpll
test
ret
jae
into
sub
push
xchg
xor
mov
inc
sbbl
mov
add
dec
xor
and
adc
subb
mov
stos
andb
in
loopne
inc
inc
cwtl
mov
jno
xchg
mov
dec
lret
imul
sub
sub
cmp
mov
jo
std
jmp
jno
mov
ret
rcll
rol
outsb
mov
mov
add
jge
pop
int
add
xor
sbb
loope
imul
add
fldl
jmp
cmp
scas
push
movsl
xchg
fdivr
out
arpl
or
punpckhwd
inc
out
xchg
sub
xor
mov
push
add
inc
dec
cmpl
push
push
ds
mov
aas
mov
push
loop
cwtl
scas
ljmp
dec
push
fcmovnu
sahf
or
dec
mov
sbb
int3
jmp
inc
push
sub
sbb
pop
mov
pop
jno
jmp
jne
pop
shlb
lret
cltd
pop
loop
jmp
adc
cmpsl
orps
mov
pop
jp
int
stos
lcall
pushf
ss
lahf
int
mov
xchg
mov
outsb
sbb
pop
outsl
dec
xor
add
adcl
push
aam
pop
dec
out
loopne
shr
imul
sub
ljmp
sbb
push
inc
movsb
jnp
cmpl
es
mov
movsb
lea
jo
divb
cwtl
sbbb
push
sti
pop
testb
sub
mov
add
jge
xor
and
xlat
pop
test
into
adc
xor
lahf
hlt
xchg
sub
jmp
call
push
ljmp
cmpsb
jge
ret
pushf
imul
aaa
adc
das
mov
push
outsl
jbe
add
mov
push
mov
outsb
sub
mov
push
pushf
sbb
inc
std
and
sbb
and
sbb
sub
and
pop
frstor
push
jecxz
mov
subb
cltd
in
inc
push
daa
sub
fists
dec
scas
cmp
mov
rcll
dec
inc
sub
mov
cmp
in
sbb
decb
out
cmp
pop
jns
lret
mov
pop
sub
push
popa
push
data16
daa
repz
sub
test
out
jnp
push
into
int
mov
insl
and
xchg
xor
xchg
mov
std
and
sbb
mov
repnz
setg
jecxz
jg
sahf
jmp
lods
je
aaa
iret
cmc
stos
stos
xchg
adc
aam
das
mov
cmp
ss
push
out
mov
pop
jo
shl
jo
and
sbb
xchg
inc
in
dec
gs
idivl
cs
pusha
add
add
in
insl
cmp
cli
outsl
adc
gs
pop
andl
xchg
adc
dec
inc
scas
js
add
push
push
dec
push
ljmp
sub
dec
mov
arpl
pop
hlt
pusha
xchg
lods
and
pop
fs
mov
daa
shr
mov
dec
fadds
mov
adc
cmp
and
xchg
jecxz
gs
jo
in
and
xchg
cwtl
das
mov
stos
shll
fs
pushf
or
sbb
dec
ds
cmpl
xchg
ss
jl
sub
cmp
popa
inc
and
mov
popf
insl
jmp
cltd
xor
lea
mov
fmuls
dec
lods
push
pop
loopne
or
std
loopne
adc
testb
imull
or
sub
enter
cmp
cmp
movsb
add
lret
lret
es
shrl
imul
dec
adcl
mov
sub
and
jb
mov
jo
and
xlat
cmc
icebp
enter
mov
push
je
pop
fdiv
add
out
pop
push
cmp
push
mov
and
test
mov
pop
jne
stc
ljmp
ret
bound
int3
add
cmc
mov
jb
ljmp
push
cmc
cmovae
pop
das
insl
lahf
mov
fidivs
sahf
fisubrs
mov
dec
cs
or
fsubrs
lods
idivl
xchg
xor
cld
movsb
nop
stc
or
sbb
test
cmp
insb
int
rcll
sbb
lret
shlb
jmp
sub
mov
mov
pop
xor
rcl
mov
cld
in
hlt
xor
rclb
fcompl
dec
aam
out
into
jbe
gs
and
test
mov
sbb
cmpsb
or
icebp
cltd
jl
js
add
jle
ret
jp
jge
cwtl
jne
scas
cltd
fdivl
and
fcmovu
fiaddl
aaa
cli
fwait
and
xor
mov
add
jbe
lock
xor
aad
jbe
pop
push
push
mov
dec
call
std
xchg
bound
daa
hlt
ss
fisubrl
pop
movsb
xor
or
mov
or
sub
push
xchg
adc
adc
mov
and
movsb
js
sub
mov
imul
push
sub
dec
sub
repnz
clc
cmp
pop
out
push
out
xchg
sub
stos
xor
and
adc
in
lock
adc
inc
adcb
mov
lea
sarl
loop
icebp
hlt
jo
sub
cmpsl
fidivrl
sub
mov
dec
cli
dec
sbb
mov
nop
out
sti
add
cs
lods
and
into
lods
negb
ffree
xchg
adc
mov
enter
int3
out
fs
fiadds
repnz
push
mov
pop
inc
add
outsb
into
xor
xchg
rolb
dec
mov
push
inc
or
in
in
push
mov
rolb
xchg
cwtl
jmp
push
sti
inc
scas
xchg
fimuls
das
in
dec
lods
add
lahf
call
adc
cmc
adc
fs
stos
or
rcr
in
jnp
cmpsl
data16
rorb
pop
sub
jbe
pop
dec
xor
insl
ret
out
imul
lahf
mov
sbb
add
into
jecxz
inc
fwait
sbb
leave
out
fnstsw
daa
outsl
push
and
lret
add
add
jne
popa
or
mov
fmull
xchg
rcrl
out
int
xchg
add
lcall
adc
data16
jle
int
push
mov
mov
add
add
in
mov
dec
dec
out
les
xchg
lea
sbb
pop
xchg
add
aaa
rclb
fdivl
sub
lds
fwait
or
add
xchg
nop
dec
or
inc
adcl
ds
out
popa
out
imul
pusha
pop
pop
in
stos
imul
mov
repnz
sbb
out
fistps
lret
mov
aam
adcb
inc
cmp
iret
cmc
add
sbb
xchg
and
pop
xlat
push
push
or
ret
daa
hlt
or
cs
push
pop
fmul
add
ljmp
pop
popa
cmpsb
cmpsl
push
jmp
pop
outsb
lea
int3
ret
or
bound
inc
clc
addl
fdivs
andl
out
inc
sti
ret
adc
dec
mov
xchg
pop
push
mov
push
mov
sbb
cli
jae
movsb
movsb
fisubl
jae
xchg
add
out
push
and
lea
push
enter
pusha
das
je
cmpsb
cmc
test
mov
and
loopne
lock
adc
jno
out
dec
hlt
mov
adc
mov
mov
aad
popa
aaa
fisttpll
pusha
addr16
ja
add
out
dec
lcall
add
cwtl
add
jae
sahf
jnp
sub
in
dec
and
frstor
lock
insl
sbb
jb
mov
adc
fwait
pusha
sbb
mov
mov
mov
cmpsb
mov
jg
flds
jecxz
loopne
subb
stc
jb
xchg
xchg
or
push
inc
xchg
xchg
mov
aaa
xchg
and
dec
mov
mov
jmp
sbb
sub
cmp
cmp
push
push
repz
and
or
pop
test
push
mov
lcall
shll
pop
cmp
loopne
push
es
data16
sub
xchg
inc
xor
iret
adc
shlb
mov
add
jb
sub
xor
mov
mov
push
jmp
aas
ret
aaa
sub
in
xchg
repnz
cmp
loope
jne
aam
je
add
aam
popa
fcmovnu
add
jge
into
mov
push
loope
mov
dec
xor
fsubrp
pop
push
jle
icebp
mov
shll
inc
mov
call
push
mov
in
pop
popf
sub
mov
adc
adc
dec
xor
call
rolb
mov
and
rcrl
xlat
mov
test
mov
cmp
adc
insl
jno
or
leave
dec
test
ret
lods
call
xor
in
mov
fwait
jb
inc
and
cmp
and
pop
mov
adc
inc
icebp
pop
push
jecxz
xor
push
pop
inc
mov
mov
mov
jns
cmp
push
ret
arpl
adc
xchg
push
notb
sbb
in
es
mov
dec
loopne
jns
out
add
outsb
stos
scas
mov
inc
mov
test
ror
cmp
push
dec
pop
dec
dec
pop
sub
lock
je
mov
and
das
into
push
movsb
xorl
aad
sbb
sbb
push
dec
mov
fnstcw
or
loope
jns
test
jmp
stos
andl
pop
pop
inc
test
cmp
inc
push
sbb
inc
es
jge
mov
mov
push
pushf
fwait
or
cmp
fcmovne
es
and
lcall
hlt
inc
jne
cwtl
pusha
fsubl
mov
cmp
cltd
add
sub
sub
jmp
sbb
jnp
dec
fcmovb
push
movsl
xchg
jae
mov
jge
adc
jno
inc
mov
push
push
inc
xchg
ss
and
jae
mov
cmp
sub
xor
jbe
push
cltd
fnstcw
ret
cmp
ljmp
dec
movsl
mov
jb
xor
repz
cwtl
xchg
ret
mov
lret
je
push
imul
inc
xchg
out
scas
push
ljmp
pop
imul
jno
lock
xorl
inc
adc
mov
or
or
lret
xchg
popf
notb
jno
jge
lods
into
mov
ficoms
pop
jecxz
push
mov
inc
jnp
pop
xchg
gs
xchg
in
cmp
inc
arpl
xchg
jns
test
xlat
out
in
dec
mov
mov
cli
imul
sub
adc
ja
ljmp
push
jno
imull
std
aad
in
pop
ds
push
inc
dec
cmpsb
mov
jo
mov
pop
mov
fwait
std
in
testl
in
or
cmp
xchg
xchg
faddl
stc
push
add
mull
xor
lods
sub
cmc
sbb
mov
cmp
in
xchg
sbb
mov
stc
or
mov
jg
mov
dec
push
lret
xchg
mov
into
call
stos
dec
scas
pop
fisttpll
inc
int3
xchg
not
jbe
fucomp
lret
jp
sub
lahf
mov
aam
or
push
inc
cmc
cmpsl
jp
ret
push
int
sub
lcall
cmp
mov
out
shrb
jae
push
adc
imul
test
mov
arpl
mov
dec
scas
aad
cmc
cmp
lahf
cmpsl
add
and
pushf
inc
xchg
dec
xor
push
mov
push
lcall
test
inc
shlb
push
push
int3
push
push
mov
movsb
loop
outsl
clc
ret
jg
cld
inc
das
in
inc
outsb
jns
mov
push
push
fiadds
popf
movsl
cmpsb
pushf
cli
mov
sti
cmp
inc
data16
mov
lods
stos
dec
adc
jns
push
xchg
push
in
aad
ror
pop
clc
xor
adc
pop
cltd
test
iretw
pusha
push
dec
cmp
pop
or
dec
cltd
popf
sub
pop
mov
sub
mov
cmpl
inc
adc
test
dec
cmc
inc
inc
dec
mov
sbb
nop
add
stos
rcl
cwtl
lret
bound
adc
cmp
add
mov
cwtl
jno
adc
add
or
and
imul
cmp
add
dec
lcall
inc
popf
adc
cmp
cmp
cmp
inc
pop
add
sub
sbb
xor
punpcklwd
in
xchg
or
adc
jmp
fimuls
dec
fadd
cmp
aad
aas
cmp
mov
sahf
mov
dec
xor
xchg
ljmp
sub
add
and
nop
aaa
adc
dec
and
or
aam
inc
movsb
xchg
dec
sub
jno
and
mov
fimuls
sub
push
ljmp
test
shrb
jle
jnp
mov
pop
out
cs
push
push
push
and
dec
add
insl
adc
dec
cmp
testl
add
push
cld
hlt
sub
iret
jl
jbe
mov
repnz
jg
adc
push
xchg
or
mov
je
jne
hlt
in
mov
cmpb
jne
sub
sub
xorl
and
addb
mov
cli
or
into
aaa
adc
push
pop
mov
cmp
cmpsl
daa
jb
jno
and
xlat
cwtl
sbb
divb
pop
stc
cld
cmc
lea
and
and
scas
xor
pop
fmuls
mov
test
cmp
popf
add
cmp
pop
es
mov
or
jo
fwait
subl
clc
out
cltd
xchg
ljmp
ficompl
mov
sti
arpl
clc
jnp
popa
das
lret
mov
imul
jne
adc
sti
cmpsb
push
mov
cs
dec
cs
stos
mov
dec
es
lods
pop
insl
aaa
sbb
sti
lea
jnp
xchg
shr
mov
cmpsl
sub
aas
cld
fwait
sbb
lods
in
pop
or
rcrl
lea
stos
jno
mov
test
ja
jnp
pop
adc
test
mov
mov
dec
jmp
adc
rclb
movsl
push
xor
dec
sub
decb
push
adc
popf
sbb
lret
scas
inc
pop
mov
jbe
cld
lret
push
xchg
jbe
cwtl
dec
stos
std
ret
inc
data16
ja
data16
loop
insl
mov
inc
fisubs
cmp
adc
sub
xchg
leave
cmpsl
adc
push
mov
fmul
dec
iret
add
push
adcb
mov
aaa
add
sbb
mov
mov
int
push
cwtl
jae
std
dec
fcompl
into
fidivs
inc
jbe
push
cmp
xor
add
dec
push
xor
sti
into
insl
add
rorl
lods
out
shlb
xor
scas
je
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
push
xchg
push
xor
jl
dec
pop
jl
pop
rcrl
std
cld
sub
add
jne
jo
sbb
cwtl
adc
inc
xchg
ss
bnd
inc
xchg
dec
je
sub
hlt
dec
mov
sbb
test
add
pop
inc
xchg
mov
sbbb
test
repnz
into
mov
ja
jmp
fs
dec
inc
mov
fldcw
stc
dec
cmp
lods
jg
mov
mov
jo
andl
add
inc
stos
jbe
in
xor
into
insb
mov
mov
or
cmp
xchg
lcall
adc
aad
rcrb
mov
cmp
adc
push
cmc
cmc
mov
and
lods
imul
push
dec
sub
jmp
sti
in
in
adc
popl
int
push
adc
cmp
sub
dec
add
ret
cmp
ss
add
shlb
les
je
cli
pushf
sub
add
pop
pop
adc
inc
and
add
add
push
add
pop
mov
fs
repz
ds
push
js
adcb
sahf
mov
mov
fwait
ljmp
jle
gs
and
pop
lret
sarb
ret
mov
or
insb
loope
movsb
cmp
inc
loopne
loop
mov
aad
xor
je
or
outsb
movsl
lret
div
jg
rolb
xlat
aad
lods
jnp
xchg
mov
cmc
mov
jg
pop
xor
xchg
loopne
or
jg
lds
lret
test
xchg
sbb
dec
test
push
jne
fistpl
or
add
imul
xchg
or
repz
inc
and
hlt
in
mov
mov
in
fnsave
pop
bound
or
movsl
in
xchg
sbb
mov
ja
fcom
ljmp
mov
imul
sbb
jp
inc
push
jne
loopne
mov
sbb
mov
sbb
mov
and
mov
xor
icebp
leave
push
mov
xchg
lods
out
out
adc
mov
fadds
jno
filds
and
mov
mov
lock
sub
ret
xchg
loop
popa
pop
add
cmpsb
outsl
sbb
or
in
push
ss
ds
lds
loopne
mov
push
incl
adc
and
cmp
jne
sub
fnstcw
aas
push
mov
dec
pop
ss
ss
loopne
ds
pop
lock
rolb
in
inc
jns
push
inc
and
pop
pop
push
mov
dec
jmp
sbbl
aam
lock
mov
mov
scas
mov
ja
adc
mov
sarl
ljmp
mov
in
test
data16
inc
xchg
cmpsl
fnsave
fs
dec
sbb
cmp
cltd
and
push
insl
stos
cmp
out
xlat
mulb
push
pop
sbb
fdivrl
sub
sub
das
or
xor
sub
icebp
xadd
mov
add
dec
std
popa
scas
push
pop
sub
movsl
push
out
jnp
push
fbld
xchg
mov
roll
lods
sub
push
inc
test
test
inc
sti
mov
test
std
sub
mov
test
jmp
lahf
jnp
ss
andb
dec
jo
ja
das
xor
inc
fucomip
repnz
xchg
xchg
add
ljmp
in
pop
imul
jno
and
stos
lcall
xor
add
dec
test
xchg
mov
add
cmp
enter
xor
loop
inc
xchg
xchg
addl
pop
cld
fdivl
icebp
mov
pop
jp
int
pop
sub
add
cmp
test
cmc
inc
and
or
clc
mov
and
lret
jmp
pop
out
adc
fcmovu
movsb
mov
or
cmp
jp
fbstp
adc
adc
pop
dec
in
test
sub
cltd
hlt
xor
mov
pop
test
jo
gs
mov
sbb
jne
jo
push
jne
push
sbb
mov
sbb
lea
add
je
jmp
test
int3
addb
es
inc
jne
loopne
lods
dec
cli
das
mov
clc
js
bound
xchg
dec
mov
scas
in
in
jecxz
xchg
mov
xchg
mov
cmc
jne
repz
aam
jnp
xchg
jge
jle
insl
rcrl
mov
cmpsb
aaa
outsb
add
pop
push
fdivrs
fcomi
xor
fistl
sbb
js
test
mov
fdivl
inc
adc
xlat
adc
test
adc
sbb
arpl
mov
mov
cltd
push
xchg
into
ret
xlat
or
in
out
test
in
les
and
sahf
xchg
in
test
push
mov
xchg
sub
ret
ja
lret
jle
icebp
dec
jo
gs
subb
clc
and
add
xchg
xchg
or
in
mov
add
movsb
xchg
shlb
push
mov
push
cmpsl
out
mov
adc
xchg
repz
mov
repz
adc
out
mov
xchg
hlt
aas
icebp
lock
shll
stc
arpl
bound
lea
inc
fnstenv
ja
cld
and
vminss
cmpsb
or
loope
mov
insb
jbe
sub
xchg
or
inc
stos
in
popf
mov
sbb
or
pushf
lahf
mov
mov
scas
imul
out
fstpl
inc
jnp
leave
and
lods
jne
jns
frstpm(287
movsb
sub
test
jnp
lds
add
xor
sub
call
mov
dec
jne
xor
jmp
es
jmp
incb
jne
and
sub
lods
xchg
daa
movsl
push
push
adc
mov
push
shl
and
dec
mov
pop
in
mov
aaa
sub
mov
jo
dec
sahf
adc
jl
xlat
fists
je
scas
mov
jmp
pop
daa
call
sbb
cmp
loope
lea
jo
es
nop
lret
dec
ljmp
or
add
push
popf
shl
mull
mov
iret
push
or
cs
cltd
xchg
lods
xor
push
testb
mov
dec
aam
out
aaa
cwtl
xchg
ja
push
cmp
mov
jo
popa
pop
data16
lcall
pop
xchg
jl
rcll
inc
nop
pop
ja
add
cmp
movsb
xchg
push
shlb
out
ds
ficoml
cmc
int3
xchg
inc
leave
repz
push
mov
popf
loop
scas
ljmp
inc
adc
jne
hlt
shll
inc
mov
test
dec
rcr
imul
loope
push
out
filds
pop
lret
std
iret
out
xorb
dec
xchg
xor
dec
sub
mov
push
xor
fcomps
xchg
xchg
stos
lods
cmp
iret
mov
dec
sbb
mov
push
pop
mov
ror
lret
sbb
outsl
add
push
icebp
scas
xchg
std
jecxz
bound
push
aam
mov
mov
push
in
jns
pop
sub
xchg
push
dec
sbb
adc
mov
leave
jecxz
and
andb
fildll
sub
lret
push
sti
testb
dec
jl
imul
mov
mov
js
jle
lock
and
pop
mov
cltd
fsubl
movsl
testl
int
jb
cmp
cmp
jmp
push
dec
pop
push
out
jp
sub
hlt
jp
sbb
daa
das
enter
jo
mov
inc
mov
mov
insl
push
cmpsb
or
pop
in
xor
or
sub
and
fldcw
or
and
nop
sbb
cmp
add
xchg
mov
je
add
test
sub
nop
scas
icebp
pop
js
xchg
scas
and
dec
adc
mov
jmp
arpl
cmpsl
out
xchg
lret
pop
je
iret
push
loop
dec
jmp
cs
dec
cld
adc
mov
mov
loope
das
cmpb
bound
pop
dec
scas
in
repnz
xchg
sti
nop
test
sbb
push
adc
fisttpl
inc
jne
fsubrl
jbe
rcll
es
dec
and
cmp
xlat
sub
shlb
sbb
shlb
sbb
cmp
inc
sub
sub
sbb
inc
lea
fimull
popa
jl
xor
cmp
xchg
in
clc
bound
bound
std
frstor
movsl
or
add
sub
jns
mov
sbb
mov
mov
pop
push
and
idiv
lock
jmp
mov
out
repnz
nop
pop
cld
test
jp
dec
or
fsubl
or
cwtl
clc
sbb
movsb
aad
jle
int
adc
jmp
push
ds
adc
ljmp
dec
push
loopne
push
lods
in
mov
inc
jno
lds
in
inc
pop
add
add
pop
xor
or
jmp
and
out
aad
pusha
cmp
pop
pop
push
dec
or
stos
cmp
and
into
cli
sbb
sbb
pop
cli
or
insl
icebp
and
movsb
insl
dec
lret
lret
aaa
and
das
es
push
pop
dec
daa
xchg
jae
adc
push
lods
dec
les
arpl
scas
and
push
and
and
xor
mov
mov
push
in
cli
gs
jnp
stc
sub
adc
fsubs
cwtl
jbe
insl
decl
loopne
cmpl
pop
mov
nop
arpl
bound
in
or
xchg
sbb
xor
xlat
rcrb
test
lcall
data16
push
pop
inc
adc
mov
andl
push
cmp
stc
push
test
lods
xchg
lea
push
push
jnp
int
dec
xchg
and
or
addb
aaa
mov
adc
dec
gs
ss
into
andb
fnstsw
mov
dec
lock
cmc
mov
iret
mov
jnp
aad
jle
int
rcrb
loopne
xchg
dec
inc
popf
jno
cli
cwtl
sub
shrb
jl
cwtl
popa
or
addr16
fmul
test
cli
xor
adc
imull
out
fistpl
hlt
aas
mov
sub
lods
cmp
sub
pop
lods
into
jp
jb
dec
xlat
ficoml
gs
adc
pop
push
push
int3
stos
pop
nop
add
repz
test
jae
hlt
icebp
pusha
stc
sub
dec
inc
sarl
adc
shr
adc
push
sbb
xchg
sub
adc
out
push
mov
gs
xor
insb
pop
adc
pop
orb
cs
inc
xlat
mov
fimuls
enter
testb
mov
xchg
pop
out
xchg
xchg
sub
pop
push
push
out
xchg
inc
push
icebp
dec
fwait
jb
enter
fiadds
pop
cli
push
fcoms
mov
sbb
and
loope
mov
fsubr
stos
pop
and
and
adc
sbb
ds
xor
sti
sub
jne
fisubrs
out
inc
fistpl
faddp
mov
imul
jecxz
and
mov
adc
shlb
lock
gs
mov
inc
xchg
bound
orl
fcmovnb
and
jae
shlb
inc
lahf
aam
iret
xchg
jle
push
mov
cld
repz
sahf
divl
imul
cltd
adcl
jno
and
mov
hlt
sbb
inc
sub
inc
add
arpl
mov
int
popa
loope
cmp
rcll
ss
ja
pop
test
xor
mov
lods
out
inc
dec
shrb
leave
pop
dec
cmp
cmp
mov
lock
mov
jnp
adc
mov
ret
xchg
ja
mov
xchg
into
mov
test
arpl
xchg
rcll
xchg
stos
lods
push
push
mov
jo
add
xchg
int3
xchg
lahf
mov
mov
sub
push
jne
das
sbb
push
add
sbb
in
cld
mov
xchg
les
repz
dec
or
or
mov
pop
popf
cmp
sarl
jb
cmp
arpl
loop
clc
sub
push
mov
dec
cmp
sbb
repnz
fdivr
xchg
stc
mov
push
mov
fs
jns
test
lret
or
out
icebp
sti
ds
lds
xchg
mov
mov
push
sbbl
mov
nop
nop
andl
adc
push
or
jmp
enter
sub
andl
shr
adc
das
jle
jle
fstpt
lret
bound
fistpl
imul
lcall
inc
jecxz
sbb
xchg
repnz
sub
push
dec
cltd
lea
sarl
addr16
out
inc
mov
ret
lret
lret
aas
jmp
push
inc
jb,pt
or
icebp
sbb
pop
std
dec
mov
mov
js
lcall
cs
pop
cmpsl
in
insl
jle
iret
lret
inc
pop
xor
cli
notl
fbld
dec
sbb
add
std
mov
repnz
aam
xchg
add
jecxz
inc
sub
mov
and
ror
ja
cmpsb
mov
bound
inc
lock
sub
push
or
nop
mov
pop
leave
ss
xchg
dec
je
cmp
test
inc
pop
adc
push
xchg
sub
int3
inc
bound
lret
mov
jg
xchg
fwait
inc
dec
mov
add
enter
xchg
jmp
arpl
insb
ret
fcompl
cmpsl
pop
outsb
sbbl
adc
orl
jge
test
push
push
sub
push
pop
mov
test
push
aaa
pop
int3
movsb
aam
jge
loopne
out
pop
add
mov
cmpsb
push
sti
inc
cld
xlat
minps
jmp
call
lods
jmp
mov
xchg
enter
sub
fiaddl
jge
idivl
xor
mov
jnp
dec
jno
int
outsb
xchg
fisubs
cltd
cwtl
imul
add
aaa
adc
fsubr
nop
pop
out
test
and
sub
inc
push
cltd
outsl
insb
adc
mov
cmp
aaa
dec
dec
xchg
sbb
int
mov
aas
cmp
ss
jle
push
or
sub
sub
dec
cltd
add
xchg
push
inc
sbb
mov
ja
test
movsb
lods
pushf
dec
cmpsl
out
push
or
ret
fucomp
and
xor
outsb
mov
sbb
popa
lock
pop
sub
xlat
push
or
inc
and
ret
sbbl
test
cmpsb
sub
mov
test
xlat
sub
dec
popf
addr16
xchg
mov
dec
pop
push
movsl
inc
or
xchg
loope
in
xchg
movl
jl
add
hlt
adc
mov
add
add
or
rclb
push
push
jmp
clc
outsb
scas
cwtl
mov
xor
mov
ret
add
adc
in
add
repnz
aas
lds
mov
roll
inc
dec
sbb
repnz
adc
pop
scas
inc
lds
mov
xchg
jg
push
inc
pop
xchg
add
lods
xchg
sub
mov
cs
xor
xchg
cmp
jns
data16
ds
cmp
pop
jb
fisubs
xchg
sti
cmp
dec
mov
cld
lods
shrd
xchg
cmp
sbb
nop
popa
or
cltd
adc
mov
mov
push
mov
push
icebp
cs
mov
sbb
cwtl
mov
mov
test
into
and
sub
push
shl
cmpsb
mov
iret
jne
push
sub
es
xor
xchg
pop
xchg
sbb
dec
xchg
orl
icebp
ret
mov
loopne
movsl
cltd
pop
cmpsl
mov
jbe
rep
sbb
inc
or
in
adc
and
outsl
outsb
jbe
fsubrl
pop
dec
jnp
je
jmp
mov
pusha
push
ret
call
mov
mov
ret
nop
test
testl
push
or
and
addr16
rcrl
add
rclb
dec
loope
mov
jl
xlat
insl
jnp
or
push
enter
sbb
pop
jbe
or
mov
cwtl
call
subl
push
out
pop
cmp
mov
mov
xchg
in
push
std
pusha
pusha
cld
icebp
xlat
jp
pushf
cmc
imul
test
sub
fiaddl
outsb
sbb
daa
loope
adc
test
dec
lret
pop
add
out
imul
push
js
repnz
lea
jne
add
push
inc
jp
xor
mov
sahf
jmp
pop
fdivrp
xchg
pop
data16
inc
adcb
mov
dec
test
jle
outsl
push
repnz
mov
jnp
sbb
jns
jmp
andb
push
in
rorl
ds
and
mov
cld
ja
nop
xor
push
jg
out
mov
fldt
mov
dec
push
lock
movsl
dec
wrmsr
mov
sbb
or
daa
push
or
fcom
mov
js
xchg
lcall
data16
test
dec
dec
mov
mov
cmp
mov
mov
cli
mov
or
ss
push
out
dec
ja
ret
int
adc
lcall
cmpsl
mov
mov
sarl
add
stc
insb
flds
stos
mov
repnz
int3
jg
or
shlb
mov
xchg
or
jo
mov
mov
pop
adc
or
pusha
aas
loop
mov
sbb
and
mov
fmull
daa
xor
ffreep
pop
sarl
cltd
sti
into
aam
jge
mov
mov
jp
movb
push
lahf
jge
dec
dec
js
cmp
lods
aad
jge,pn
mov
or
dec
movsl
aaa
pop
lret
lahf
ds
inc
xor
lods
inc
aaa
cltd
fidivrl
or
scas
mov
in
cli
test
out
jbe
xchg
jge
dec
pop
repz
mov
adc
arpl
test
ljmp
dec
push
xchg
or
xchg
orb
cs
mov
aas
xchg
xor
fs
adc
jle
test
cmp
adc
scas
pop
pop
arpl
push
lods
cli
mov
mov
mov
sarl
and
mov
or
inc
fchs
push
or
insl
inc
out
in
ds
lds
imul
jno
sbb
ljmp
sub
add
repz
into
fdivs
ffree
nop
std
dec
aaa
pop
out
add
int
leave
fcmovnbe
cld
mov
pop
iret
cmp
cmp
insb
mov
loop
insb
push
in
fisubrs
incl
push
jbe
ja
and
lods
push
or
ds
jo
xchg
shrb
mov
mov
xchg
jae
pop
sbb
fists
sub
lods
pop
jg
mov
sub
xor
add
push
add
adc
daa
fmull
cmp
pop
mov
adc
imul
add
loope
out
xchg
mov
fnstcw
mov
lret
push
pop
addb
pushf
push
sub
stc
xchg
jge
fs
cli
jle
out
insb
jbe
das
sub
into
inc
data16
mov
xor
iret
test
jmp
push
jns
add
push
or
scas
dec
lret
imul
mov
jmp
push
mov
test
bound
outsb
mov
mov
popw
add
fcompl
fwait
cmp
sub
xor
and
xor
aad
pop
std
dec
movsb
stos
xor
pop
movsb
mov
cmpl
test
test
adc
jl
lret
xchg
and
xchg
repz
jne
out
jo
pop
jg
pop
push
out
inc
gs
hlt
add
cmpb
fs
test
and
jae
aad
push
lds
insb
fdivs
jmp
aad
xchg
mov
lret
inc
mov
mov
mov
shrl
push
add
jb
pavgw
out
rolb
add
xor
scas
imul
pop
filds
enter
push
jno
cmpsl
add
in
mov
imul
sub
push
loop
es
hlt
cmp
out
and
icebp
lock
fistpl
dec
movsb
cs
dec
inc
pop
sbb
aaa
mov
cmpsl
ljmp
aad
adc
scas
cmpsl
shll
mov
and
leave
or
inc
fstps
xchg
ret
dec
cs
scas
jb
orl
adc
in
aad
push
inc
push
and
mov
out
xchg
jae
std
and
xchg
sub
in
cmp
rcrl
aaa
dec
add
push
dec
and
and
insb
fists
xchg
sbb
push
stos
in
aas
nop
testl
test
mov
push
xchg
xchg
sub
cmp
hlt
xchg
lahf
mov
adcl
fs
rcrb
popa
js
lods
cmpsb
ficomps
fstpt
les
mov
jg
sub
scas
mov
add
aam
icebp
xadd
popa
dec
sbb
imul
adc
into
xchg
lock
aaa
dec
into
cmp
inc
cmc
xchg
fdivs
xchg
xchg
or
pop
jl
push
adc
frstor
sub
add
xchg
mov
mov
push
lods
shl
aam
mov
es
addr16
sbb
icebp
sub
jle
pushf
dec
xor
dec
and
xchg
jle
int
lret
dec
clc
mov
ret
clc
sub
lock
jle
sub
nop
xchg
lahf
and
mov
mov
clc
mov
jge
mov
je
arpl
add
jbe
sbb
pushf
orl
hlt
stos
or
add
push
lret
jne
orb
fnsave
dec
xchg
lret
lods
dec
rcrb
mov
mov
sahf
les
sub
jl
imul
sahf
xor
cmp
outsb
inc
adc
loopne
mov
lret
imul
ret
pop
ja
dec
xchg
cmpsb
lods
mov
sub
jne
push
jge
jae
je
das
addr16
push
and
adc
andl
mov
xchg
xchg
xchg
sub
aas
sbb
pop
mov
jns
popa
dec
adc
daa
popa
cltd
cmp
out
es
stos
inc
insl
xchg
cmp
sub
psrlw
dec
mov
hlt
jnp
stos
pop
inc
push
mov
ret
call
jp
push
arpl
shrl
cli
jnp
xor
stc
pop
pop
mulb
inc
repnz
cld
test
inc
adc
or
sub
jmp
dec
leave
out
add
imull
sub
cmp
inc
into
pop
mov
jbe
jns
insb
mov
cli
add
mov
sti
inc
out
filds
jns
cmpsl
pop
lds
int
sub
dec
mov
mov
mov
xchg
mov
fs
mov
out
adc
outsb
add
xchg
sub
jg
dec
mov
mov
lods
sub
pop
mov
xchg
fstpt
push
fs
pusha
xchg
mov
inc
sti
imul
jg
xor
jno
fwait
pusha
stos
push
pushf
ficoml
pusha
dec
pop
xor
aaa
xchg
popa
repnz
mov
push
mov
stos
testb
test
inc
movsb
in
dec
jle
xchg
movsb
ret
xor
xorl
insb
pop
fimull
or
push
dec
hlt
dec
lods
or
iret
cmpsb
lea
pop
mov
mov
xchg
std
pop
mov
fs
or
sbb
mov
or
dec
hlt
lods
dec
push
stc
pop
cwtl
add
pop
lds
clc
mov
adc
in
jno
xchg
mov
ret
arpl
xchg
mov
fmull
jecxz
ds
sbb
lea
sbb
and
ret
push
mul
sbb
data16
inc
cmpsb
sbb
ja
hlt
lods
hlt
mov
frstor
and
jle
lods
repnz
dec
mov
mov
cmp
loopne
into
adc
xor
jmp
inc
add
jo
testl
test
jae
fildll
sub
int3
pop
jno
mov
pushf
dec
pop
cmpsl
div
xchg
jmp
jo
mov
addr16
jge
sbb
hlt
rep
ja
adc
push
add
punpcklbw
sub
adc
add
push
fstl
mov
or
cmc
imul
and
insl
jbe
jnp
jns,pn
xor
test
xor
pop
ljmp
outsb
ja
mov
adc
lret
cmp
mov
mov
cmp
scas
cwtl
mov
adc
and
xchg
push
sti
or
push
mov
cmp
mov
cmp
test
gs
jb
add
js
fisttpll
lea
jmp
cmp
test
adcl
jge
pop
jge
mov
test
dec
mov
jle
inc
or
mov
pop
fcomps
mov
ljmp
xchg
fucom
add
add
cli
test
cli
dec
mov
push
sub
jg
mov
mov
test
mov
inc
and
push
leave
add
ljmp
jmp
pop
dec
xor
lret
xchg
fldenv
rolb
outsl
push
adc
mov
jle
push
lea
pop
out
sbb
cli
adc
push
in
pop
pop
xchg
fists
icebp
pop
pusha
push
dec
lea
enter
sbb
test
insl
sub
inc
loope
je
je
jo
ficomps
push
or
xchg
sub
adc
sub
idivb
jmp
stos
xlat
mov
mov
sti
xor
ja
daa
jl
scas
aas
mov
push
xor
gs
aaa
pop
xchg
mov
xlat
pop
sbb
add
call
push
inc
mov
fs
je
neg
mov
dec
pop
imul
cmp
insl
cmp
fnsave
orl
pop
arpl
adc
mov
rcrb
test
pop
mov
mov
popf
stos
out
xchg
push
cmc
filds
rorl
psubd
sbb
or
imul
insl
xor
lds
lods
push
jno
dec
fwait
out
je
mov
fidivrs
in
fldenv
inc
lea
fimuls
or
mov
addr16
jge
jns
aaa
sbb
fistpll
and
mov
push
in
sub
les
repnz
test
mov
shrl
or
lods
and
shll
ss
gs
push
and
sti
cmp
nop
dec
filds
insb
push
inc
pushf
pop
push
jecxz
addl
add
outsl
arpl
mov
mov
push
and
imul
pop
and
push
dec
adc
add
je
int3
jmp
test
scas
sbb
mov
jnp
pop
or
add
lret
cli
add
cld
aad
add
aad
pusha
xor
xchg
cmp
push
loope
pop
sub
push
je
add
test
std
push
pop
insl
jb
or
dec
sbb
add
enter
mov
das
or
lret
mov
or
sub
dec
push
push
cmpsb
jne
aaa
cmp
push
loop
sti
out
ss
pop
mov
movsb
lahf
sub
sbb
jle
adc
or
mov
pop
sbb
xor
lcall
jo
fsts
mov
les
bound
mov
pop
sbb
sbb
lret
adc
dec
mull
fsts
cmpsb
sub
div
adc
lods
idivl
mov
lahf
addr16
push
pop
mov
jp
mov
sbb
jp
push
xor
xchg
pop
ror
lret
bound
dec
in
mov
push
jmp
mov
and
jno
inc
pop
push
mov
cmp
clc
xlat
xlat
jle
fisubrl
xchg
ss
cmp
cmpb
mov
xchg
lods
pop
jle
mov
daa
dec
repz
test
add
mov
das
add
jb
fisttpll
out
fidivl
std
jbe
sub
negl
imul
sbbl
mov
inc
xchg
or
dec
add
mov
cmpl
cltd
arpl
add
loopne
lock
push
cmp
test
in
inc
sbb
and
push
inc
jb
pop
mov
lcall
stc
outsb
add
daa
add
dec
loop
imul
lods
notb
cmc
pop
pop
cwtl
pop
rol
inc
jnp
mov
mov
js
adc
push
sub
ljmp
cmp
subl
jae
sub
xchg
pop
das
adc
pop
mov
add
int3
and
fistpl
ds
pop
addb
movl
addr16
insb
adc
insl
xchg
test
cli
repnz
aad
xchg
test
dec
jp
jne
add
ds
cld
fs
addr16
dec
sbb
jae
xchg
movsl
movsl
aas
mov
stos
jo
lds
imul
adc
dec
xchg
outsb
mov
sub
pusha
clc
popl
repz
sti
or
icebp
vunpcklpd
sbb
xchg
arpl
or
sub
add
or
add
inc
clc
mov
jmp
cmp
sub
ja
fcomps
mov
int3
inc
xor
sbb
lea
test
or
pop
cmp
popa
pusha
xchg
cmpsb
rol
icebp
lock
insl
xor
xchg
and
or
cmp
dec
fwait
and
sub
mov
data16
pop
mov
lcall
gs
jge
cmp
mov
xchg
gs
out
sbb
loope
int3
push
sar
inc
popa
in
mov
mov
enter
in
xchg
int
lock
aam
pextrw
testl
dec
pushf
sbb
test
aas
mov
mov
addr16
fs
and
pop
aam
jl
add
jge
inc
dec
mov
or
jl
jecxz
cmpsl
mov
xchg
cmp
hlt
dec
cld
bound
xchg
dec
and
pop
clc
les
scas
or
negl
addr16
cmp
jne
inc
jmp
mov
push
fcompl
fsts
movsl
xlat
mov
dec
jmp
mov
cmp
mov
sbb
xchg
push
cmp
pop
jl
arpl
aaa
data16
std
mov
pop
sbb
mov
jge
cwtl
lods
and
pop
xor
pop
repz
in
push
scas
lds
popa
hlt
adc
and
sbb
mov
es
sti
fcoms
ljmp
mov
xlat
ja
addr16
pop
test
inc
lods
xorl
mov
pop
jge
scas
fcmovb
mov
mov
orb
pop
inc
int
test
mov
rorl
jnp
imul
xlat
in
lret
pop
repz
mov
dec
jbe
cltd
jae
lods
les
xchg
cmp
xor
inc
loopne
int
dec
mov
pop
fcoml
stos
xor
call
and
shlb
push
push
lock
jge
lock
call
cs
push
das
icebp
dec
adc
dec
nop
xor
add
mov
jbe
jge
fbld
mov
inc
pop
mov
dec
push
or
int3
dec
jl
lods
xchg
dec
and
xor
cmp
imul
imull
dec
xchg
int
and
pop
je
int3
push
mov
fidivs
ss
cld
mov
addr16
push
mov
movsl
mov
lcall
mov
dec
cmp
jmp
adc
hlt
popf
call
in
push
cmp
push
and
xor
shlb
xchg
loope
nop
sti
inc
cli
cwtl
sub
adc
in
mov
mov
add
into
or
pusha
ret
lods
or
mov
int3
sub
mov
stos
cmp
xor
adc
aad
cmc
xchg
fnstenv
cmp
xchg
add
jae
mov
xor
push
out
mov
lock
mov
and
add
cmp
lds
jbe
sub
xchg
inc
sub
mov
icebp
sub
mov
incb
out
repz
dec
mov
mov
mov
xchg
lcall
mov
loopne
push
fsubl
jbe
xor
test
pop
mov
jmp
pop
adc
popa
movsb
or
pop
stos
out
adc
mov
add
aaa
jle
fnclex
jae
lret
bound
loopne
je
and
rclb
push
shlb
mov
fwait
jmp
fwait
fwait
lds
jne
sbb
xlat
sub
ret
test
mov
cld
idivl
icebp
cmp
mov
push
testb
pop
push
push
pop
adc
and
notl
mov
enter
ret
mov
dec
push
cmp
pop
dec
cmp
popa
daa
lock
add
or
out
stos
mov
cmp
xor
mov
les
loope
aas
movsb
stc
cmpsl
dec
pop
cmp
cmc
ret
sbb
daa
dec
mov
je
mov
sbb
lods
mov
pop
adc
mov
jae
fsts
pop
lret
dec
push
or
leave
test
jmp
sub
mov
lods
adc
data16
mov
loopne
dec
int3
and
mov
fiadds
les
aaa
xchg
pop
add
fcmove
call
insl
xchg
ret
out
or
xor
push
loop
jns
pop
insl
and
divb
inc
pop
in
mov
sbb
ss
add
jp
jecxz
lret
pop
jbe
pushf
imul
cmp
sub
orl
ja
repnz
in
outsb
jle
aas
mov
pusha
scas
into
aam
jae
adc
ja
mov
pop
pop
mov
and
and
movsb
jno
icebp
cltd
xchg
mov
movsb
dec
pop
sub
fiadds
add
mov
add
and
int
enter
out
cld
sti
mov
push
out
xorb
outsb
xchg
add
or
push
mov
add
ret
imul
mov
jne
lea
push
pop
adc
mov
jp
ljmp
pop
adc
mov
or
fisubrl
daa
pop
jecxz
fdivrl
jo
daa
pop
fnstenv
pop
jnp
fstl
test
dec
push
test
sub
js
and
cmp
xchg
and
out
push
js
int
xorl
negb
xor
sub
mov
dec
test
or
lods
out
test
pop
fisubs
pop
ss
test
jecxz
mov
adc
cmp
fnstenv
ja
stos
adc
sub
cs
pop
mov
push
sub
js
dec
or
std
cmp
xchg
clc
es
xor
jae
xchg
push
sub
loop
mov
mov
adcb
jne
jmp
sub
dec
xor
insb
mov
pop
mov
dec
loope
sbb
sti
pop
mov
jbe
fdivrs
add
lock
imul
push
mov
shll
sar
in
pusha
or
aaa
mov
dec
dec
mov
cmpsl
dec
xchg
repz
sub
inc
dec
dec
sbb
nop
outsl
cli
adc
or
sbb
push
addr16
and
movsl
clc
and
xchg
lcall
push
xchg
add
jne
iret
add
jg
xchg
push
mov
out
xlat
push
xchg
scas
mov
inc
fstp
loopne
jle
sbb
stc
addr16
scas
pop
cmpsb
nop
int3
mov
jo
rorl
movsl
or
lock
xlat
cltd
pinsrw
push
movsb
jp
push
rorb
dec
cmpsb
cwtl
loope
add
in
mov
jnp
mov
sub
inc
push
inc
psllq
xchg
fldt
pop
inc
cmp
stos
push
mov
cmpsb
aad
nop
lret
xchg
jno
xlat
lret
add
mov
cmp
enter
outsb
cmp
pusha
sbb
out
sub
les
lcall
cmpsl
les
imul
add
sub
mov
sub
add
in
pop
pop
leave
pop
sub
test
mov
pop
or
or
sub
or
sahf
jp
into
sti
stos
or
outsl
cld
mov
inc
sbb
test
and
out
push
outsb
xchg
call
mov
xor
jp
test
sbb
xchg
rcrb
jl
or
js
add
add
or
ds
sarl
lret
sbbb
loopne
sub
inc
dec
dec
sbb
jb
xor
int
fiaddl
lahf
pop
xchg
in
mov
jge
into
cmp
dec
movsl
pop
cmpsb
adc
outsl
sbb
enter
push
lret
jo
ret
inc
cs
insb
add
push
mov
inc
bound
sbb
and
and
add
fisubl
std
dec
mov
mov
hlt
std
dec
into
xchg
add
pop
loope
xchg
inc
and
cs
lahf
sbb
into
xlat
pop
jbe
jae
or
adc
or
test
xchg
push
jne
mov
andl
or
lcall
and
inc
subb
sub
call
jg
loop
or
xor
cld
pop
adc
sbb
sahf
cmp
add
outsl
mov
loopne
mov
andb
inc
scas
in
xlat
adc
test
push
jecxz
notb
test
push
xchg
ret
fisttps
cmpsb
mov
pusha
inc
jb
sbb
push
cmp
pushl
cld
test
out
test
jmp
pop
shl
xor
js
aam
ljmp
push
dec
xor
pop
lods
out
je,pt
xor
lret
mov
adc
sub
xchg
std
daa
roll
js
or
adc
push
movsl
push
filds
add
mov
sub
stos
lods
and
dec
jns
pop
jns
ret
jp
jp
sbb
mov
scas
add
add
addl
push
lock
lcall
shll
lea
jp
jne
aad
rcll
mov
nop
push
pop
movsb
mov
mov
dec
mov
ljmp
shr
pop
fcomps
sub
push
pop
jbe
jp
ljmp
fnstsw
sbb
pop
push
jecxz
mov
lret
and
adc
adc
push
loopne
sbb
mov
cld
outsb
jle
andb
or
es
lds
shr
push
notb
je
mov
adc
fs
adcb
jmp
jmp
das
iret
lods
xchg
stos
add
in
mov
and
repz
ds
xchg
cmp
push
pop
lods
mov
jmp
cld
push
nop
pop
push
jg
dec
pop
out
cmpb
pop
or
rolb
popf
mov
xor
lahf
das
js
imul
setbe
arpl
jo
loopne
or
and
mov
fisttps
jmp
and
nop
jne
xchg
aam
aad
adc
repnz
push
fwait
jb
mov
popa
add
stc
lcall
jo
clc
rol
scas
addr16
jmp
pop
out
repz
cld
ret
fisubrs
and
ljmp
fldenv
test
push
mov
aam
xor
icebp
push
xor
das
scas
pop
jbe
faddl
dec
mov
mov
addr16
lahf
rcl
test
lds
test
pop
adc
arpl
mov
push
repnz
pop
sub
divb
outsb
push
fdiv
dec
fwait
dec
sbb
xchg
dec
mov
adc
out
loop
or
mov
rcrl
out
mov
sub
inc
addr16
psubsb
mov
fxch
pop
fiadds
or
stos
movsb
add
enter
leave
mov
test
adc
icebp
ret
test
addl
mov
inc
sub
popf
popa
xor
repnz
pop
outsl
jbe
sbb
jne
adc
mov
push
shlb
jle
sub
inc
xchg
xchg
mov
mov
and
aam
into
mov
f2xm1
icebp
mov
pop
icebp
push
jp
pop
fucom
call
adc
lods
pop
xor
sarl
push
std
cmp
lods
in
xchg
pop
xchg
xor
popa
sbb
mov
scas
push
push
mov
jo
rcrb
ljmp
leave
sbbl
pop
sub
mov
mov
int3
in
ss
in
jnp
dec
xchg
or
inc
cmp
cmp
dec
dec
sub
add
movsb
mov
imul
jae
dec
cmp
rorb
fsubl
mov
mov
add
xchg
testl
push
fnstenv
xor
sub
aad
inc
and
aam
sbb
push
lret
or
cwtl
mov
sahf
sbb
jmp
mov
and
cmc
iret
mov
inc
xchg
xchg
sbb
pop
adc
pushf
jp
cld
xlat
pusha
lds
and
jge
test
je
pop
scas
ljmp
pop
std
mov
push
pop
stos
cmc
sub
xchg
pop
repnz
mov
in
les
jb
movsl
ds
dec
mov
jns
data16
mov
test
or
mov
mov
add
xor
xchg
xor
out
mov
push
repz
insb
lcall
cltd
cwtl
jl
adc
jp
add
hlt
lea
jp
pusha
jle
test
mov
fimull
pop
scas
cli
leave
mov
ljmp
jo
dec
stos
cmp
cmpsl
xor
mov
test
loope
js
outsl
jge
icebp
cmpsb
jns
inc
mov
and
cld
loope
or
int
dec
int
shlb
int3
push
dec
fucom
jbe
xor
rcr
and
mov
push
out
pop
mov
or
xor
mov
movsl
fs
sbb
sub
mov
xor
cmpsl
adc
pop
scas
lods
pop
sti
in
fisubl
mov
dec
jmp
dec
jo
sub
rcrb
inc
dec
xchg
ret
cwtl
dec
jae
fs
arpl
and
fcoms
inc
mov
push
insl
or
rol
lcall
je
je
sbb
mov
or
and
push
jecxz
dec
pop
lds
cmc
lods
push
movsb
xchg
and
data16
push
jns
iret
dec
out
mov
add
repz
or
int3
call
mov
mov
cmc
test
in
inc
scas
jns
or
sbb
imul
pop
fisttps
pop
or
pop
aas
jne
sarb
lret
cmp
push
sub
or
push
xchg
out
adc
mov
lea
xchg
out
adc
xchg
cmp
js
jne
jno
rorb
mov
xor
xor
adc
cmp
pop
dec
xchg
fidivl
push
inc
mov
movups
cmpsb
iret
lods
mov
popf
sbb
daa
add
jmp
xchg
out
mov
aad
aas
pop
aaa
xor
inc
xchg
lds
pop
lods
xchg
push
xchg
or
xchg
frstor
pop
pop
cmp
sbb
mov
or
int
push
test
sbb
addr16
inc
aam
lds
in
fbstp
xor
and
sbb
or
push
push
mov
mov
out
outsl
pslld
lea
shlb
pushf
sahf
loop
out
ret
pop
mov
mov
inc
xchg
mov
popa
std
mov
fildl
mov
lret
rol
pushl
fbstp
sub
xor
mov
clc
pusha
mov
push
push
add
mov
es
dec
adc
pop
sub
dec
xchg
and
lods
mov
mov
enter
movsl
adc
repnz
enter
mov
sahf
fidivrs
rep
movl
dec
arpl
cmpsl
movsb
aad
jge
inc
xchg
mov
addr16
fidivrs
lret
jae
mov
sti
add
movsl
inc
xchg
inc
push
and
insb
sub
repnz
xlat
cmp
xchg
sub
mov
data16
mov
cmp
js
pop
xor
push
shll
jbe
test
push
adc
cli
xchg
aam
push
imul
repnz
mov
pusha
cmpb
mov
push
data16
popw
aas
inc
icebp
out
or
push
cmpsl
inc
jmp
fwait
fs
int
leave
xchg
add
or
xor
dec
fiadds
pusha
repz
push
xchg
xchg
dec
push
jnp
lret
and
movl
in
pop
pop
or
dec
mov
push
test
sbb
xchg
mov
sub
sbb
mov
pusha
mov
inc
cmp
das
push
rol
pushf
fstl
and
outsb
sub
push
jne
sbb
adc
xchg
std
rorl
aam
and
test
cs
aas
mov
cmpsb
mov
push
adc
mov
int
ret
jle
negl
clc
dec
shlb
es
test
stc
sahf
rol
arpl
test
xlat
pop
repnz
ss
mov
sbb
lods
sbb
inc
stos
sbb
jecxz
pop
data16
sti
xlat
xchg
sarb
int3
add
cmp
loop
iret
in
aam
add
sbb
jmp
inc
push
cmp
cs
or
and
adc
fstl
or
dec
jl
shrb
pusha
lret
and
out
loopne
push
mov
out
imul
mov
fildl
mov
lods
xchg
mov
inc
mov
int
icebp
leave
lcall
sub
push
cmp
pop
and
mov
test
adc
in
pop
popf
cs
outsl
jp
addb
xchg
push
lods
xchg
scas
mov
dec
mov
inc
orl
nop
out
xor
loop
jle
mov
mov
mov
or
sbb
shrb
in
mov
xchg
clc
dec
nop
nop
push
pop
jl
jp
dec
imull
data16
leave
pop
int
sbb
mov
aas
pop
push
mov
aad
push
or
and
sub
mov
sti
sbb
jp
mov
test
dec
cltd
add
fs
add
sub
iret
or
jns
push
iret
xchg
bound
mov
xor
rclb
mov
fistpl
scas
push
push
mov
inc
das
dec
shl
mov
push
icebp
cld
fs
cmpsl
nop
pop
and
dec
dec
or
out
enter
clc
mov
sbb
in
clc
pop
push
fildll
xchg
cmp
push
push
mov
movsl
orl
leave
sti
pusha
lahf
fs
push
cli
inc
cmpsb
movsl
mov
or
or
cmpb
lods
jp
loope
fsubrl
rol
sbbl
add
xchg
aaa
inc
inc
shl
fisubs
or
ds
mov
daa
mov
pop
jne
mov
jmp
andb
jp
mov
or
xchg
je
push
xor
test
jns
scas
xchg
mov
inc
test
repnz
inc
mov
pop
lret
jbe
in
stos
rcl
adc
lods
adc
repnz
xchg
jbe
lret
shlb
add
sahf
test
int3
jne
sbb
sub
add
icebp
insb
jno
mov
stos
shrb
jb
dec
cmp
mov
inc
leave
xchg
enter
mov
sbb
popf
push
mov
jg
mov
frstor
outsb
inc
aam
add
fildll
dec
je
pop
mov
pop
fstpl
mov
or
push
testl
lds
inc
sub
outsb
ds
cmp
aad
jp
cs
lahf
xor
jmp
pop
pop
jle
xor
push
lock
lahf
lcall
push
imul
fwait
mov
or
pop
outsb
rcrl
mov
sbb
cmp
sbb
mov
cs
and
out
sbb
lret
mov
sbb
lock
xor
subb
and
rcll
int3
popa
jecxz
repz
mov
ret
dec
push
dec
cwtl
popf
stos
call
test
and
jo
xor
or
fbld
cmpsb
nop
or
jge
jo
add
rcr
and
div
push
out
mov
cmp
jnp
push
pop
push
loop
dec
or
inc
outsb
out
incl
add
lcall
lds
movsb
adcl
xlat
mov
insl
dec
dec
jb
out
or
jmp
loop
mov
xlat
mov
faddl
mov
jno
adc
mov
sbb
dec
mov
addb
or
mov
in
jmp
dec
fnstsw
mov
jmp
ret
iret
int3
dec
dec
rcrl
sub
fmulp
ret
mov
pusha
lods
movsb
stos
in
lea
sub
push
xchg
xor
out
mov
xor
repnz
cs
sbb
aad
gs
push
adc
mov
movsb
out
sub
jnp
inc
cmp
xor
shlb
repnz
dec
mov
add
leave
out
sbb
pushf
jecxz
fimuls
rclb
cmc
inc
mov
out
movsl
icebp
mov
jle
sub
xor
aas
into
inc
je
jecxz
mov
imul
sbb
sbb
add
popf
jg
mov
pushl
aad
sub
xor
sbb
dec
inc
lret
and
jae
pushf
rcll
push
sub
add
mov
mov
std
int
inc
adc
mov
jnp
sbb
shlb
xchg
adcl
dec
or
in
xchg
pop
fildll
mov
int
mov
jmp
or
sti
iret
xor
pop
imul
sbb
adc
fnstcw
sbb
add
push
mov
dec
rcrb
mov
mov
mov
inc
mov
lret
cld
fwait
inc
push
out
pop
lahf
lret
adc
pop
mov
sbbb
dec
les
push
mov
add
int
fdiv
in
jp
mov
inc
push
leave
scas
adc
ret
mov
lahf
jge
dec
cld
aaa
mov
into
sub
ficoms
jb
sbb
ficompl
jb
mov
pop
push
pxor
dec
xor
pop
mov
mov
mov
cmc
cmp
fldcw
jae
seta
leave
nop
js
mov
cmp
fs
pushf
dec
jb
sbb
or
or
ret
xlat
repz
jne
jecxz
in
xchg
and
int
imulb
push
sub
aas
push
and
jb
or
ds
sbb
add
sar
hlt
push
mov
inc
adc
inc
movsb
lret
ss
pop
add
iret
aad
popa
cmpsb
sub
xor
pop
ret
inc
xor
or
jno
jle
mov
and
lahf
pusha
mov
jno
cs
in
mov
and
arpl
or
fstps
jp
or
jae
sbb
xorb
cmpsl
pop
sub
dec
mov
xor
leave
sbb
or
lcall
sti
jg
and
adc
movsb
cs
cmc
adcb
sahf
cld
loopne
pop
push
mov
leave
mov
mov
sub
mov
and
xor
jnp
das
inc
fsub
xchg
test
std
loope
sbb
lds
inc
mov
lret
bound
ficoms
xlat
dec
xchg
inc
adc
mov
sub
xchg
cmp
shlb
js
xchg
or
pushf
fs
cmpsl
or
push
adc
decb
stc
mov
mov
mov
mov
mov
lahf
jl
jl
imul
dec
les
ds
mov
stos
in
cwtl
sbb
popa
dec
cmpsb
xchg
lahf
mov
enter
fwait
scas
mov
add
xchg
sub
sbb
lds
mov
push
lret
js
fidivl
mov
sbb
fcoml
imulb
jbe
vmulss
fsub
cmp
mov
arpl
nop
push
adc
call
mov
dec
test
jo
loope
jl
icebp
add
xor
mov
or
add
cmpl
adc
and
jmp
dec
or
mov
cmp
pop
xchg
mov
inc
jae
xchg
insb
out
xchg
ljmp
adc
orb
sbb
repz
and
cltd
out
jl
movsl
dec
iret
inc
mov
jae
fimuls
inc
aad
mov
add
xorl
fstpl
sbb
notl
mov
pop
adc
icebp
xor
cmp
jecxz
leave
push
cmp
pop
int
test
ret
vpaddusb
sub
mov
add
adc
mov
cmp
test
fsubrl
xor
cmp
jle
pop
mov
pop
pushf
mov
push
sub
sarl
mov
movsl
out
fwait
lret
sahf
vaddss
inc
shl
test
cltd
xor
fildl
in
jmp
lahf
push
inc
lea
sub
mov
test
jno
push
mov
addl
dec
in
jge
xchg
ret
cmp
push
cmp
dec
les
stos
lea
shll
jnp
lcall
inc
aaa
insb
cmpsb
in
call
xor
call
test
ss
xchg
cmp
xchg
in
cmc
out
jb
mov
cwtl
sub
ret
jno
jbe
repnz
insb
test
cmc
xchg
mov
mov
data16
push
cmpsl
shl
popf
cmp
cmp
cmp
cmp
xchg
jnp
inc
pop
mov
inc
xor
pop
pop
xor
push
aam
nop
inc
sbb
std
cmp
pop
aaa
pop
int3
adc
fcmove
jae
xchg
stos
repnz
or
popa
sub
pop
minps
test
sub
scas
in
dec
call
testl
and
xor
mov
add
inc
push
pop
addb
ror
cmc
jmp
push
pop
shlb
jns
out
stos
sbb
cmp
in
adc
inc
mov
in
int
cs
outsl
ret
ss
cmpsb
pop
adc
repz
sub
adc
xor
imul
insb
sbb
jo
cmp
fs
mul
rcll
in
pop
cwtl
push
pop
out
aas
inc
or
sub
imul
lahf
das
inc
pop
aaa
orl
xchg
or
cmpl
fs
lret
nop
enter
mov
xchg
and
insb
in
pop
cmp
lahf
pop
and
loopne
and
xor
push
inc
cmp
inc
mov
bswap
pushf
ljmp
dec
mov
jl
loopne
or
cmp
nopl
cwtl
ds
mov
inc
or
inc
and
fcom
pop
jl
fwait
orb
das
pusha
mov
xor
sbb
testb
movb
imulb
and
andb
mov
ja
gs
daa
insl
cmpsb
push
data16
sarb
mov
popf
cmpsb
sti
inc
add
jb
sarb
fnstenv
jecxz
adc
add
ret
sbb
mov
adc
enter
sti
arpl
test
mov
mov
adc
inc
xchg
or
mov
fisubs
pop
cmp
lock
sbb
jl
mov
pop
or
sbb
movsl
lahf
lock
mov
or
pop
inc
rcrb
mov
inc
xor
popa
repnz
sub
mull
cmp
out
jne
cwtl
icebp
popf
and
add
lods
push
mov
jno
xchg
test
add
sbb
test
mov
adc
sub
or
repnz
add
outsl
jg
data16
popf
fs
pause
push
xchg
imul
or
add
fstp
fimull
or
call
test
and
inc
fidivrl
clc
lea
sbb
ljmp
dec
sti
addr16
ljmp
push
and
in
call
sbb
jl
insb
pushf
nop
out
popa
mov
sub
xor
mov
push
test
jns
jecxz
call
push
movsb
lret
fcompl
fbstp
mov
notl
movsl
sbb
sahf
scas
out
in
mov
mov
dec
xchg
and
push
sti
gs
mov
pop
mov
jl
lea
sub
fsubl
inc
insl
jnp
sbb
cmpsb
or
mov
cmpsl
or
dec
jb
push
roll
jge
mov
sub
loop
loopne
xchg
sub
lds
adc
movsl
roll
push
filds
test
jnp
jp
inc
jnp
pop
mov
cli
lods
mov
cwtl
inc
nop
loopne
pop
lods
mov
lds
das
mov
dec
sbb
push
fsubs
cmp
out
mov
pop
xor
mov
mov
ja
adc
in
rcrb
std
xchg
sbb
ficoms
pop
cmp
push
jnp
jl
lock
jnp
xor
icebp
mov
rorl
addl
pusha
xlat
and
cmp
arpl
cwtl
lcall
push
xchg
jbe
ss
push
mov
fcoms
add
mov
fcmovnu
push
lods
jb
fs
inc
pop
nop
fldcw
push
ficoms
test
xor
movsb
addr16
imul
push
xchg
xchg
jo
xor
ljmp
and
in
dec
cmp
ret
pop
in
lcall
sub
ljmp
out
xchg
jnp
icebp
loopne
vpsrlw
aaa
je
inc
ds
les
cvtps2pd
xor
or
mov
in
pushf
mov
push
pop
lret
popa
mov
push
movsl
inc
fldenv
push
sub
mov
sbb
xor
repnz
out
xlat
mov
mov
rcrl
push
imul
cmovns
fnsave
mov
or
pop
jb
fmulp
push
dec
bound
mov
push
pop
sarl
xchg
fsts
out
mov
mov
in
cltd
mov
pop
or
and
jae
gs
cmp
int
xlat
xchg
adc
sub
sub
pop
imul
fwait
push
lret
addb
cmp
push
add
mov
aas
fildll
and
ss
cmp
sbb
and
mov
rolb
shll
jp
into
mov
inc
and
jmp
inc
inc
inc
testb
loope
mov
dec
movsl
xchg
push
sbb
jo
or
enter
xor
and
mov
fcmovnu
test
icebp
popa
or
cmp
dec
add
aaa
push
add
sbb
bound
fists
add
loope
adc
jns
xchg
mov
outsl
out
push
jle
lcall
mov
addb
adcb
cld
mov
jns
fbstp
cli
cltd
xchg
mov
loope
push
in
inc
cmpl
mov
imul
lock
lods
push
addr16
ret
jne
aam
xchg
les
clc
nop
inc
xchg
push
sub
aam
data16
sar
mov
mov
fninit
push
add
and
jmp
leave
xor
and
jg
iret
cmpsb
jmp
sub
fwait
imul
push
mov
mov
mov
xchg
or
ret
sub
iret
mov
into
mov
adc
cmp
mov
mov
int
aam
ljmp
adc
insl
test
add
jecxz
sarl
cmp
ret
pop
mov
hlt
fs
sub
test
movsb
push
out
out
cmpsl
add
xor
clc
sbb
lds
inc
inc
inc
jecxz
lods
fstl
stos
in
repz
mov
in
hlt
cmp
inc
jb
xchg
mov
fdivrs
filds
sbb
and
lret
pop
mov
test
pop
call
js
sbb
sub
mov
cmpsl
rcrb
and
dec
push
mov
sbb
xchg
mov
and
and
pop
jg
movsb
dec
rcll
daa
iret
lods
ret
push
dec
test
fldl
cwtl
pop
mov
inc
cmp
fldcw
cs
cmpsl
in
inc
scas
push
mov
pop
cs
xchg
sbb
mov
jb
lret
icebp
dec
push
or
in
mov
or
dec
xchg
dec
mov
mov
mov
jae
jg
sub
incl
adc
call
pusha
imul
jge
and
pop
ret
test
add
sbb
pop
iret
or
fst
sub
lods
mov
fcmovnu
and
or
cltd
or
outsl
cli
jmp
divb
movsl
xchg
int3
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
loop
rcl
add
jl
sbb
cmpsl
fstl
fisubrs
mov
pop
ret
and
pop
mov
sbb
sti
mov
inc
cwtl
inc
mov
adc
jge
sbb
aas
sub
jle
xchg
ret
fimuls
and
out
or
dec
add
sarl
sub
jmp
dec
lcall
adc
xor
add
xchg
aam
test
jns
cmp
in
cs
pop
or
fdivl
lret
imul
jl
cmp
js
fstpl
lea
jmp
sub
xchg
aad
insl
imul
xor
jns
and
jnp
xchg
pop
pop
fwait
pop
dec
test
in
and
push
rcrl
push
mov
push
jmp
enter
jmp
cmp
mov
insl
testl
dec
repz
ss
fcoms
fisubl
popa
cs
adc
aas
dec
cmp
sub
int3
mov
lock
jns
outsb
adcl
inc
sub
in
mov
adc
xor
inc
pop
cs
divl
mov
rclb
int
push
fistl
cmp
push
mov
dec
cld
xor
dec
sbb
ds
adc
out
jge
push
imul
sub
xchg
clc
rcrl
dec
ss
je
jecxz
popa
mov
dec
jne
movsl
pusha
fs
dec
aaa
jns
sti
sarl
xlat
fcomp
mov
sbb
jmp
and
xchg
sbb
xchg
lock
aam
xlat
pop
sub
mov
in
iret
pop
ss
ja
push
cli
push
jne
jae
jg
addr16
jae
jl
pop
push
push
divl
xor
jne
inc
fldenv
cltd
inc
aad
or
js
jbe
es
add
fmull
lds
xchg
fidivrl
pop
inc
mov
mov
movsl
pop
pop
test
mov
fs
jo
xor
loopne
xor
adc
nop
in
lret
xor
push
scas
ds
mov
mov
pushf
mov
in
shlb
scas
sbb
pop
in
push
lcall
mov
pop
fdivrl
out
mov
jb
arpl
jae
xlat
mov
ja
mov
repnz
out
cmp
push
jno
cmp
out
pop
int
test
loopne
pop
and
je
in
jg
fstpt
mov
or
std
adc
and
mov
fld
or
adc
popf
sbb
sub
jg
lret
mov
cli
gs
jns
jmp
xchg
dec
push
outsb
cmp
sbb
push
inc
leave
sti
out
pop
stos
mov
outsl
mov
shll
xchg
mov
mov
test
jns
xor
pop
sti
mov
mov
clc
mov
xlat
push
jns
out
les
imul
cmp
addb
mov
xor
or
lea
mov
in
mov
and
add
sub
mov
imul
mov
xchg
push
fisttpll
movsb
lds
ds
insb
mov
std
mov
inc
out
aad
nop
fists
xchg
mov
pop
mov
xchg
dec
dec
inc
xor
mov
repnz
inc
inc
and
lods
jmp
jb
ret
cmp
insb
dec
jns
test
push
ja
rcll
push
cwtl
pop
pop
cmp
mov
outsl
mov
sbb
das
add
add
cmpsl
cmp
lcall
sbb
sub
fdivr
gs
xchg
mov
jecxz
add
push
ds
sub
sub
cmpsl
xor
xor
and
jns
fcomps
lods
jmp
jne
mov
sub
inc
insb
xchg
iret
pop
adc
cmpsb
mov
out
push
xchg
mov
dec
out
cs
sub
movsb
mov
mov
lahf
adc
lods
out
fwait
sub
or
pop
add
out
aas
aaa
dec
aad
ret
xorb
pop
mov
lret
out
dec
mov
xchg
fnsave
xchg
mov
xchg
mov
daa
push
jbe
cmp
cltd
or
mov
jge
jge
aam
mov
mov
jae
ret
mov
iret
les
cmpsb
add
in
fucomip
xchg
iret
lret
inc
xor
xchg
popf
xchg
lods
mov
lds
sti
mov
hlt
sbb
dec
dec
imul
xchg
sbb
jp
or
cmp
es
cmp
pusha
add
int
inc
inc
lcall
scas
xchg
ret
mov
mov
lahf
scas
jb
pop
ror
out
pop
inc
fcompl
popa
mov
sub
mov
sbb
sub
out
nop
xor
in
pop
out
sub
in
imul
mov
push
sarl
dec
repz
add
aaa
fs
add
lahf
cs
push
inc
daa
stos
mov
xlat
das
inc
enter
test
push
sarl
inc
lods
xlat
add
adc
lods
jb
cmp
mov
mov
fisttpl
mov
mov
outsl
push
scas
inc
or
jle
insl
add
insl
jg
insl
adc
dec
add
orl
mov
mov
xchg
pushf
xchg
xchg
mov
jge
adcb
mov
aad
leave
pop
pop
xor
push
clc
imul
jnp
xchg
or
insl
mov
cmp
adc
sub
daa
into
and
sub
xchg
out
cmp
xor
pop
leave
add
lret
ljmp
fidivrs
jp
xchg
lods
mov
andb
jl
inc
test
push
aad
mov
jle
push
arpl
push
pop
pop
and
fildl
scas
enter
mov
fldenv
fwait
lods
aad
sub
fisubs
jp
push
fsubrl
mov
aam
adc
add
xchg
data16
testb
cmpsb
loope
aaa
jp
aad
xchg
dec
xlat
dec
mov
int3
repnz
push
xor
xor
in
sbb
pushf
repnz
out
lret
in
test
int3
lds
dec
fadds
or
int
adc
or
push
into
add
add
and
xor
mov
mov
loop
sub
mov
enter
sbb
push
sub
mov
aad
into
in
inc
push
cmp
ja
pmulhw
sahf
jns
push
cs
mov
push
push
nop
xchg
ss
popf
cmpb
arpl
outsl
jbe
xchg
mov
push
xor
lcall
cmp
and
jl
jb
push
adcl
repnz
daa
adc
fdivrs
xchg
cmpsl
popl
mov
ds
lock
rorb
pop
pop
div
and
aaa
divl
push
lcall
icebp
push
and
popa
sub
addb
in
mov
subb
lock
or
js
enter
movsl
pop
lods
sarb
movsl
xchg
jbe
pop
jmp
inc
stos
dec
xor
pop
adc
in
jne
and
repnz
fdivs
xlat
cmp
adc
jb
dec
pop
mull
nop
aad
xor
shrb
or
cmp
pop
push
jg
adc
xchg
sbb
std
rcrb
adcb
dec
push
mov
jb
mov
push
popf
sbb
jno
inc
testb
cwtl
mov
sar
adc
repnz
lock
test
sub
insl
pop
enter
xor
aam
inc
std
data16
sub
fsubl
out
out
jmp
pop
xchg
loop
adc
mov
lods
addr16
dec
adc
fidivrl
xchg
jb
jg
je
mov
fdivs
xchg
push
xor
sbbl
mov
dec
stc
and
mov
cli
jne
aam
jle
data16
dec
cld
inc
jecxz
div
dec
add
fnstenv
xor
dec
fwait
ds
lds
xor
aam
and
mov
lcall
popl
aaa
pop
in
jge
out
mov
das
ja
ret
fcom
aad
xchg
add
lods
aam
jnp
imul
outsb
stc
jmp
pop
in
mov
fildl
dec
dec
jmp
and
sbb
shr
or
xor
je
les
inc
push
dec
ja
cs
bound
xchg
std
inc
xchg
mov
adc
sbb
test
jb
jl
mov
sti
dec
pop
insb
xchg
aad
cmp
int
lock
aaa
bound
out
out
sti
push
push
enter
cmp
lea
sbb
mov
pop
mov
stos
xor
sbb
daa
cmc
cmp
dec
inc
mov
nop
lahf
rcll
mov
aaa
fdivrp
push
bound
jmp
test
pop
int
call
sub
mov
mov
lock
mov
inc
fdivrl
insl
jg
movsb
inc
addl
push
mov
ds
into
das
in
xchg
sub
add
and
sub
inc
pop
mov
cmp
mov
mov
idiv
adc
outsl
pop
sahf
pop
jae
aad
cltd
ret
adc
add
sbb
das
jns
fsubs
inc
pop
aam
xor
in
cmp
flds
mov
dec
movsb
sbb
fmull
sbb
push
mov
push
sub
mov
lahf
out
inc
gs
lock
mov
xchg
cmp
mov
daa
negl
aas
roll
mov
add
std
leave
mov
sbb
enter
and
jno
adc
or
pop
pop
adc
aam
xor
fidivl
rcr
adc
movsl
push
xor
fdivl
jne
push
rclb
pop
xchg
jp
pop
mov
ret
sub
xor
and
sbb
std
fwait
roll
mov
push
push
popa
inc
dec
xchg
ds
jno
ds
arpl
adc
imul
mov
pop
rclb
cmp
jns
out
adc
scas
int3
push
and
mov
sar
pop
movaps
push
adc
sub
repnz
inc
in
sar
sbb
inc
sub
ss
cmpsl
xchg
scas
mov
and
test
add
fiaddl
mov
push
mov
adc
cli
mov
sbb
or
aam
ds
je
xor
sub
les
incb
or
jl
jp
insb
stc
xchg
mov
dec
shrb
sub
repz
fmuls
int3
lahf
push
pop
hlt
lcall
icebp
add
push
call
mov
sub
test
lcall
cltd
ds
mov
inc
in
inc
addr16
push
cwtl
std
jns
subb
cwtl
es
subb
je
push
int
and
jns
lock
aaa
jg
testl
jbe
push
mov
cli
adc
int
shrb
add
fdiv
sbb
push
fdivs
int3
xor
add
cmp
pop
sbb
mov
mov
into
inc
bound
push
xchg
stos
cltd
push
jmp
loope
or
push
loop
lock
add
push
mov
out
sti
adc
lods
cmp
mov
jae
mov
xchg
out
lcall
jmp
mov
xchg
dec
shl
mov
push
mov
sbb
fcomps
fsubl
mov
sahf
stos
fbld
mov
repnz
xor
imul
xchg
shll
mov
cmpxchg
or
mov
icebp
bound
lea
jb
mov
lahf
fcompl
mov
xor
rolb
and
mov
mov
sub
lea
repnz
push
leave
addr16
pop
repnz
mov
mov
jecxz
and
push
pop
xor
in
push
inc
mov
pop
or
mov
cmp
leave
or
loopne
mov
lock
and
mov
in
xor
mov
aad
or
jno
or
les
das
out
lock
dec
xor
mov
pop
loopne
xchg
adc
fmul
shll
or
shlb
sbb
dec
push
fdivrs
xchg
add
nop
push
inc
dec
daa
aas
loopne
daa
adc
pop
cmc
fs
inc
sbb
movsb
push
or
gs
fcompp
out
int
mov
lods
out
adc
sbb
call
xlat
out
ljmp
vmulss
movb
mov
jge
into
lods
mov
int
mov
add
adc
adc
into
fildll
push
inc
or
test
mov
mov
and
cmp
cld
scas
mov
jae
fimuls
sbb
rcrl
fisubl
sub
dec
add
fdiv
stos
lret
negb
jno
sbb
dec
xchg
loop
loope
xor
mov
adc
add
and
daa
sbb
adc
mov
into
mov
cmpsb
mov
dec
cs
xchg
lods
data16
shrb
cmp
or
stos
push
adc
orb
mov
adc
pop
cmp
sbb
and
dec
lahf
loope
addb
fsubrs
imul
lds
and
xchg
out
subl
insb
into
sub
or
je
and
cmp
and
sbb
inc
icebp
mov
popf
rorl
mov
cmpsl
out
les
std
imul
push
sub
data16
or
pushf
push
jge
adc
fildl
and
push
lock
push
je
xor
xor
lcall
outsl
pop
xchg
ss
dec
dec
jns
add
xor
sub
sbb
shl
nop
mov
test
xchg
cli
dec
fcoml
push
xchg
sbb
pop
mov
sub
jecxz
jle
call
loope
pop
xor
cmp
mov
movsb
je
movsl
arpl
push
js
insl
cmp
sbb
and
inc
cli
mov
xor
loopne
lret
cmp
lock
push
lods
aam
xchg
xor
jge
out
clc
push
mov
stc
push
add
pop
int3
inc
or
pusha
js
ja
ss
int3
vpackuswb
xor
inc
stc
mov
push
push
xchg
enter
movsb
cmp
pop
idivb
sbb
xchg
stos
xchg
xchg
outsl
js
aad
add
out
pushf
or
push
bswap
jae
test
daa
cmp
inc
xchg
retw
ret
movsl
jmp
sbb
and
jmp
mov
out
stc
sbb
push
outsb
pushf
movsb
add
int3
ret
jno
pop
adc
lods
push
scas
pop
loop
bswap
or
inc
je
sub
inc
mov
test
mov
aam
mov
push
out
lcall
std
lock
adc
jne
dec
mov
popa
data16
ljmp
add
in
pop
pop
fsubl
push
jmp
pop
addr16
repz
pop
jbe
in
fwait
enter
daa
and
sub
adc
xor
cld
out
loope
stc
insl
bound
out
ljmp
inc
xor
hlt
adc
or
xor
insb
push
repz
stos
mov
lret
into
push
adc
mov
jae
pop
xchg
mov
clc
shl
in
pop
cmpsb
jmp
add
lock
mov
stc
pop
loop
xchg
xor
pause
cmp
mov
cmp
je
jae
or
pop
adc
jbe
call
xor
dec
cltd
test
lcall
sbb
test
sbb
cwtl
adc
pop
xor
push
inc
and
js
xchg
push
jno
ret
or
jne
ret
fists
lret
add
add
push
push
and
pop
xchg
jbe
insb
out
or
lret
call
les
jne,pn
je
mov
sub
push
cmc
jp
subl
mov
xchg
push
mov
pop
jge
add
popf
sahf
and
jnp
mov
popf
cltd
fsubs
insb
jmp
arpl
ljmp
inc
push
mov
xor
leave
enter
sub
imul
stos
hlt
movsb
xchg
sbb
push
inc
jns
sti
fstps
xchg
test
mov
lea
inc
mov
mov
outsb
cs
and
mov
mov
xor
mov
in
lds
ja
jge
push
in
mov
push
stos
xor
hlt
fidivrs
out
adc
loop
lret
roll
jmp
push
stos
cwtl
adc
aas
enter
icebp
cmp
adc
les
cmp
cmpsb
outsb
test
out
fstpl
sub
inc
hlt
pop
cmp
testb
shrb
xlat
aad
push
lcall
xor
fistpl
daa
pusha
scas
xchg
xor
pop
add
imul
add
dec
shlb
inc
sub
inc
test
cmc
xchg
mov
mov
pop
xchg
add
xor
ss
adc
dec
lret
ja
jge
adc
cmpsb
and
xchg
in
lret
aas
bswap
lahf
outsl
xchg
sub
das
jne
imul
mov
and
arpl
ret
nop
mov
adc
inc
cs
std
add
xchg
gs
mov
call
outsb
dec
push
lret
adc
ret
movsl
lret
fdivl
push
out
xor
push
es
jnp
add
adc
iret
aas
cmp
fldl
jmp
pushf
orb
lea
mov
dec
jo
sahf
cmp
inc
sub
dec
mov
push
jbe
out
dec
ret
or
xor
icebp
cmpsb
repz
jno
xchg
push
or
out
mov
testb
aam
adc
loop
xchg
mov
aas
cwtl
sub
push
stos
pop
cltd
popf
out
mov
mov
jp
aas
dec
jmp
cli
xchg
mov
inc
xchg
or
inc
inc
dec
add
mov
mov
iret
jbe
xor
mov
out
jno
test
or
hlt
fisubl
insl
stc
or
ret
stos
mov
movl
jnp
ja
sub
inc
mov
mov
xchg
mov
jl
int3
jb
jno
cmpsb
loop
test
inc
or
jne
sbb
sub
inc
dec
cltd
aaa
nop
shrb
nop
and
popa
xchg
jg
cmp
push
imul
je
add
pop
sbb
sub
xor
mov
or
mov
xchg
mov
push
mov
mov
pop
jg
mov
fmuls
sbb
jge
sbb
shlb
vorpd
lock
adc
roll
dec
jbe
aas
lcall
adc
mov
cs
stos
and
jmp
call
imul
jnp
push
mov
hlt
push
mov
sbb
mov
jae
mov
sarb
xor
mov
aad
xchg
outsb
jle
push
mov
test
cltd
cwtl
out
xchg
loop
sti
test
mov
fdivrl
sahf
dec
mov
call
aas
cmp
scas
sub
pushf
sub
xchg
mov
ljmp
sub
add
mov
mov
mov
jns
das
pop
js
adc
repnz
push
push
mov
leave
test
or
cmpsl
fcoms
sub
adc
outsb
mov
test
fs
test
outsb
out
inc
mov
and
leave
loopne
in
ret
cmp
das
mov
xchg
pop
les
daa
mov
pusha
pop
insb
pop
mov
adc
popf
inc
mov
sahf
ds
sbb
inc
ret
push
jle
cli
pop
filds
addr16
mov
push
enter
leave
jl
shl
orb
roll
dec
adc
idiv
pop
or
dec
imul
mov
push
pop
pop
cmp
int3
jb
jne
fwait
lods
mov
pop
ljmp
in
lea
jne
bound
std
cmp
in
lea
and
mov
cltd
pushf
aad
pop
adc
dec
mov
lods
jbe
test
popa
loopne
fildll
nop
mov
mov
add
lcall
adc
mov
imul
stos
sub
jmp
inc
arpl
mov
leave
jae
mov
mov
dec
jb
xor
pop
jmp
jae
pop
ficomps
test
cmp
mov
stos
and
inc
dec
rcrl
mov
sub
out
xor
or
das
jb
mov
jo
push
and
cmc
jb
lcall
mov
mov
lods
cmpsb
jne
xlat
movsb
sbb
push
or
sbb
repnz
sbb
stc
mov
divl
add
cmp
mov
das
jmp
lret
inc
subb
jns
lea
hlt
sarl
stc
shll
inc
outsl
xor
mov
jnp
out
xchg
je
aad
mov
loop
push
test
dec
mov
push
cwtl
xchg
push
jo
mov
or
nop
popa
mov
xor
clc
xor
adcb
sub
arpl
stos
imul
js
shrl
cmc
test
inc
es
stos
mov
or
aaa
sbb
add
cmp
mov
lds
mov
fisttpll
xchg
xor
lea
test
popa
jae
add
inc
push
sbbb
outsb
cmc
xchg
seto
sub
cwtl
xor
push
shlb
imull
hlt
aam
push
popf
inc
xchg
out
jne
push
int3
push
imul
adc
loopne
or
xchg
mov
outsl
mov
xchg
and
into
mov
xor
inc
loopne
adc
cwtl
xchg
aam
leave
jmp
push
rcrb
cmp
or
fbld
sbb
xor
test
push
dec
dec
xor
loop
xchg
and
and
inc
mov
div
lds
and
fcomps
movsb
or
aaa
stos
inc
xchg
push
push
push
lcall
xor
pushf
repz
dec
lret
lock
lcall
repz
pop
out
bnd
popa
stc
sub
and
xor
jno
dec
aad
sub
push
ret
mov
sub
mov
das
testb
cld
shl
imul
pop
and
cmp
in
pop
aam
xlat
inc
jg
add
js
adc
mov
nop
jg
xor
add
stos
js
inc
push
movsl
push
sub
mov
adc
lds
pop
out
sbb
lock
jo
mov
cmpsl
sub
pop
xchg
test
movsb
pop
lods
xchg
ror
in
daa
fstpt
pop
sbbb
adc
pop
sbb
push
loope
clc
adc
aam
test
idivb
ds
push
pop
mov
ret
inc
repz
xchg
pop
jo
dec
lahf
shrb
roll
inc
shll
cmp
cwtl
fsubrl
ror
lret
pop
dec
xchg
ret
push
lahf
add
pusha
dec
test
popaw
jns
mov
mov
sub
ja
das
dec
je
sahf
jge
pop
sahf
mov
movsb
xlat
imul
andb
popf
inc
scas
add
inc
sub
jp
out
jb
jns
pop
mov
or
shlb
jg
adc
cmp
push
cmpsb
mov
rorl
shlb
dec
cmpsl
das
push
pop
shl
pop
dec
mov
mov
pop
rcll
jns
dec
cmp
push
dec
outsl
mov
pop
inc
mov
jmp
fisttps
xchg
push
sbb
mov
cs
stos
xlat
xor
cmpsl
arpl
out
js
sub
fiadds
jle
aaa
dec
dec
adc
adc
inc
std
mov
xchg
xor
pop
adc
fsubp
iret
out
push
add
or
pop
imul
add
and
inc
xor
insb
cmp
mov
push
leave
lret
cmp
test
sbb
sbb
mov
out
rcrl
scas
addr16
movsl
jmp
insl
add
xor
pop
sbb
sti
adc
xchg
inc
lcall
inc
ror
mov
lea
notl
lret
jae
push
add
shrb
int
call
mov
aad
ret
dec
and
add
test
sbb
and
xchg
xor
sbb
inc
push
fsts
mov
jecxz
bound
fcoml
xor
das
xchg
inc
mov
push
push
xchg
lock
adc
divl
pop
shrd
stos
cmpsb
mov
xchg
test
mov
inc
jge
pop
mov
dec
push
mov
xchg
and
mul
jo
push
fidivrl
or
mov
aam
in
xchg
clc
stc
cli
ret
mov
lahf
cld
jmp
fcomps
scas
sub
movsb
dec
sbb
mov
mov
push
push
jle
add
int
repnz
mov
mov
mov
hlt
mov
lcall
adc
pop
idivb
and
pushf
pop
cmp
add
dec
out
arpl
pop
aad
mov
scas
ja
scas
jno
stc
mov
jl
rcr
and
pushf
fistl
popa
inc
daa
mov
jecxz
and
mov
jae
pop
cmp
je
gs
jo
xor
cmp
mov
dec
in
push
or
popf
mov
add
jb
add
xchg
icebp
jge
fucomp
fcmovbe
xchg
add
jmp
and
pushf
xor
cmp
js
push
int
or
adc
rcrl
dec
out
out
jge
jp
rol
jge
shl
cwtl
ds
fucomp
xor
mov
xlat
jne
sbb
inc
nop
push
add
pop
xlat
call
shrl
mov
mov
sbb
ret
dec
fsubl
adc
sub
sbb
popa
lock
pop
popa
aam
out
les
adc
cli
dec
sub
and
inc
pop
or
jno
add
cwtl
sub
mov
aas
dec
xchg
cmp
hlt
jne
movsl
decb
push
sub
sbbl
jb
mov
or
xchg
mov
jmp
lods
xor
xor
mov
push
sub
ss
popf
jbe
bnd
or
pop
ds
xchg
mov
nop
jbe
mov
dec
mov
fcomps
andb
add
mov
xchg
sbb
pop
adc
xchg
inc
imul
cmpsb
test
adc
cmpsb
xlat
sti
arpl
popa
fsubs
xchg
imul
shufps
fisttpl
jae
and
testb
popa
sub
mov
aaa
mov
mov
mov
mov
cmpsb
jnp
test
jp
mov
shrl
repnz
shrl
cs
cmc
or
loope
mov
mov
jae
in
sub
and
cmpsb
arpl
pop
or
lret
test
cli
nop
inc
sub
rcl
sti
mov
in
pop
lds
sub
adc
push
imul
mov
xchg
outsb
cmp
pop
repz
icebp
call
sar
sbb
jo
xchg
mov
pop
in
xchg
into
shl
addr16
xor
ss
scas
xchg
std
dec
cs
sub
shrb
nop
mov
arpl
cmp
movsb
xchg
fstpt
pop
xchg
jne
mov
sahf
loop
jne
sahf
mov
dec
stos
mov
cmp
xchg
lret
adc
adc
sbb
cmova
and
jo
adc
xchg
into
jmp
fisubrs
cmp
js
push
nop
rclb
shlb
jns
jae
sub
repnz
xchg
cmpsb
adc
cmp
mov
xchg
mov
in
jmp
cmp
cmp
leave
fsubr
ret
mov
out
enter
sub
stos
insb
lods
dec
out
xchg
pusha
negb
dec
repz
loopne
into
inc
and
dec
lock
dec
sbb
jmp
decb
push
test
es
out
xlat
or
ret
inc
push
lret
push
or
loopne
mov
mov
push
out
sbb
mov
sbb
sbb
fs
xor
cmpsb
sbb
push
mov
mov
sub
lcall
std
cmpsl
pop
xlat
popw
ss
pusha
adc
cld
jo
sub
lahf
push
int3
shlb
aas
aam
sbb
ret
ret
test
inc
push
out
daa
inc
pop
pop
push
movsl
add
mov
pop
add
push
sub
push
jmp
or
in
xor
mov
int
pop
xchg
pop
mov
sub
or
cmpsb
fisttpl
mov
sub
mov
and
lds
xchg
into
push
cltd
ja
clc
movsb
aaa
std
inc
push
adcl
pop
or
push
adc
test
mov
dec
pop
xchg
or
xor
jb
pop
cs
push
xchg
bound
repnz
outsl
les
mov
push
rcrb
push
in
bound
sbb
es
push
pop
or
mov
xlat
cmpsl
aas
jae
dec
adc
mov
xlat
fsubl
sub
cmp
xchg
fadds
cmp
imul
sbb
nop
xchg
ror
cmc
test
inc
and
mov
xor
mov
add
test
sahf
clc
mov
popa
aam
xor
jg
repz
sti
in
test
cwtl
gs
pop
sbb
mov
pop
adc
testl
dec
xchg
lock
xchg
push
pop
out
test
in
and
xorl
ret
jns
mov
shll
mov
jae
dec
cltd
mov
data16
xchg
jge
lretw
movups
and
xchg
pop
mov
roll
test
add
jmp
jg
inc
gs
rcl
mov
sbb
and
test
aaa
adc
mov
test
push
and
mov
push
pop
arpl
notl
data16
mov
dec
bound
enter
mov
push
or
jge
sarb
popa
add
sub
sti
ljmp
add
push
sti
gs
cwtl
pop
daa
test
inc
loopne
mov
sbb
or
mov
add
and
jle
out
cwtl
mov
gs
fsubl
arpl
pop
pop
add
sbb
je
jbe
sbb
dec
adc
and
and
cmpsl
inc
jns
imul
push
add
jg
scas
cmpsl
dec
adc
stc
xchg
mov
in
sarb
cltd
xor
clc
inc
arpl
testb
out
add
loopne
fisubrl
and
ja
mov
xor
je
cmp
push
pop
sub
cld
les
out
bound
mov
scas
xor
in
scas
es
lock
xlat
mov
fldt
pop
rcll
sbb
mov
jae
rclb
fsubr
icebp
loope
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
mov
mov
dec
pop
jl
and
mov
dec
dec
mov
cmpsl
pop
add
inc
dec
cld
adc
jae
jecxz
push
scas
test
loopne
mov
mov
movsl
dec
xchg
es
dec
sbb
sbb
movsb
push
cld
xchg
out
and
lret
mov
pop
orb
push
mov
push
sub
std
stc
cmpsb
in
mov
jmp
lret
mov
outsl
jo
mov
add
out
and
hlt
cld
add
xor
cld
mov
cli
popa
push
and
add
jbe
popf
lret
int
xchg
xchg
xchg
pop
leave
sub
insb
dec
jmp
sub
jne
cmpsl
or
scas
rcll
int
test
dec
jb
push
add
dec
xlat
adc
shll
daa
cli
clc
hlt
xchg
sub
sbb
aad
xor
cltd
cmpsl
js
mov
pop
xchg
mov
orps
pop
test
inc
das
aaa
jmp
test
test
jecxz
inc
fcoms
pop
sbb
aad
mov
repnz
lret
pop
push
test
out
mov
xchg
iret
pop
add
add
push
and
xor
ljmp
leave
ja
lods
add
sub
sbb
cmc
add
pushf
cmp
fcompl
fldl2t
mov
out
or
rcrl
aas
test
add
jno
outsl
dec
xchg
adc
dec
out
fistpl
pop
pop
test
adc
mov
xor
out
stos
enter
mov
mov
or
lods
test
sub
jge
xchg
jno
in
jmp
xor
jge
aaa
out
xlat
pop
and
cmc
lret
mul
ret
int3
mov
lret
out
sbb
dec
fidivrl
push
inc
pop
pop
xor
hlt
movsb
lds
movsb
hlt
push
xchg
mov
aad
lea
adc
and
movsl
jnp
rclb
xchg
sbb
stos
add
jae
inc
mov
mov
out
mov
popl
gs
pop
jecxz
je
js
imul
push
les
je
loop
pop
push
xchg
xor
lret
mov
xchg
sahf
sbb
dec
cwtl
lret
xor
push
pop
mov
cmp
ljmp
in
lods
push
aas
imul
adc
movsl
mov
lahf
in
adc
jbe
test
pop
or
mov
rclb
hlt
adc
dec
pop
movsl
push
jae
adc
outsl
aad
cld
bound
sub
xor
pop
jp
roll
pop
stc
mov
cmp
testl
cmpsl
push
movsl
jmp
push
fwait
sub
xchg
clc
add
test
jns
adc
out
jae
in
mov
rcrl
pop
dec
push
inc
xchg
jg
pop
dec
into
popa
push
inc
pop
inc
imul
aam
xchg
cwtl
test
or
add
pop
repnz
std
ss
loop
mov
mov
incl
xlat
lcall
lods
test
jle
stc
or
nop
movsb
das
mov
cs
enter
jbe
lea
insl
dec
or
inc
jle
fidivs
sahf
stos
sub
lods
mov
popf
jmp
mov
mov
cld
test
sbb
sbb
ret
inc
arpl
ljmp
int3
push
pop
xlat
int
mov
sub
xchg
stos
int
es
add
add
or
xchg
push
test
mov
dec
mov
inc
xor
popa
cmp
insb
cmp
jecxz
je
xlat
cmp
fistpll
jmp
lret
inc
jns
fsubs
push
sub
cmp
adc
jg
push
cmp
ljmp
daa
sbb
lods
xor
cmpsl
fwait
push
jno
icebp
mov
sbbl
loopne
mov
adc
scas
mov
sbb
mov
mov
ret
cmc
mov
in
xchg
xchg
iret
jmp
xchg
subl
push
rclb
cmc
rcrl
mov
or
and
push
daa
cmp
pop
inc
sbb
popa
push
wrmsr
ds
aaa
inc
imul
and
push
lods
rolb
cmpl
notb
and
pop
mov
insl
addl
movsl
insb
pusha
jmp
pop
sbb
ja
int
dec
xor
xor
pusha
pop
out
and
or
mov
inc
push
enter
ret
push
push
xor
into
or
jp
mov
jmp
cltd
loope
sub
jge
sbb
add
stos
and
push
imul
sbb
insl
pop
cmp
dec
inc
and
adc
jno
add
out
mov
sarl
imul
shrd
popa
xchg
mov
inc
adc
pushf
jl
outsl
and
mov
cmp
repz
lahf
ret
call
inc
hlt
cmp
sbbl
aam
popa
jmp
lods
jno
int3
push
loopne
and
mov
int3
adc
mov
mov
lds
lret
xor
jae
jg
aam
cli
pop
mov
adc
iret
aas
daa
sub
pop
pop
mov
xlat
jne
jnp
je
or
gs
repz
pop
adc
push
pop
cmpsb
mov
push
mov
cmpl
inc
enter
xlat
fiaddl
mov
add
hlt
sbb
xor
iret
add
sub
jne
add
lret
add
push
jg
pop
sub
arpl
je
lods
xchg
xchg
cli
xchg
out
inc
add
and
hlt
pop
pop
mov
cmpl
in
daa
jnp
or
test
inc
add
out
int3
mov
jle
mov
mov
add
and
test
mov
sbb
lea
and
mov
addr16
mov
fistpll
mov
int3
pop
jns
mov
xchg
push
nop
cmp
jbe
hlt
int3
adc
sub
jno
decb
xor
cmpb
jbe
cmpb
adc
xchg
cmp
bound
stc
jnp
cmpl
popf
dec
cmp
cmpsb
ret
pop
shrb
test
mov
ret
in
roll
ja
popa
fdivl
jecxz
add
jno
sub
jae
es
xchg
sti
sub
test
inc
jae
shr
pop
aas
push
or
jnp
aam
std
push
int
cltd
and
dec
push
out
leave
jne
loopne
cmp
dec
push
pop
fldenv
cmp
xor
fistpl
fsubrl
jno
mov
outsl
test
sbb
fidivrl
xchg
and
rolb
sbb
movsl
lods
cwtl
cmp
inc
out
aas
mov
pop
fisubrl
pop
mov
ds
test
sbb
mov
sub
stos
in
pushf
sarl
sub
shll
or
andl
popf
ds
fs
cs
divb
pop
sub
imul
vpmacsww
jnp
out
add
cld
mov
mov
and
fwait
cmpsb
sbb
ss
out
cmpsl
aaa
ficompl
or
pop
mov
xchg
btc
ja
leave
mov
sub
mov
out
repnz
ss
js
push
repnz
add
xchg
arpl
in
mov
dec
sub
inc
mov
jmp
sbb
mov
or
cli
pop
xor
sarl
xchg
or
aas
push
xchg
add
out
in
jle
dec
xor
fldl
cmove
jg
jbe
jb
sbb
int
xchg
mov
in
xor
add
cmc
and
push
pop
fs
push
shlb
cmp
loop
je
jmp
loop
adc
xor
fimuls
dec
mov
nop
stc
enter
inc
fists
dec
jmp
fwait
cmpxchg
mov
jnp
inc
push
pop
sbb
sub
out
fistpl
jmp
cmp
inc
rcr
adc
repnz
imul
repz
lret
pusha
or
outsl
sbb
or
outsb
sbb
mov
out
imul
push
xchg
mov
clc
adc
fs
fcomps
dec
psubsb
test
aad
and
push
and
mov
dec
sub
lahf
loop
or
sbb
and
push
dec
adc
jnp
adc
pop
lods
fisubs
aam
add
fwait
es
cli
scas
in
cltd
das
outsl
jne
fs
cmpsb
pop
call
adc
hlt
clc
dec
les
and
test
test
pop
mov
mov
jle
push
fwait
add
xor
adc
add
bt
or
sahf
fstpl
add
dec
sahf
jb
pop
sbb
mov
hlt
and
lcall
mov
push
jp
jbe
loop
dec
push
inc
outsl
jmp
sub
jb
in
andb
sbb
clc
cmp
ds
shll
in
lea
enter
inc
lock
cmc
daa
pop
ds
cmp
arpl
stos
les
into
pop
outsb
sub
mov
mov
pop
test
mov
stos
cs
cltd
cli
cwtl
jae
adc
sbb
enter
lret
in
sbb
fwait
adc
xchg
std
daa
dec
mov
xor
dec
xchg
cmpsl
sbb
jnp
sti
mov
jp
jecxz
xchg
sbb
arpl
ud2
arpl
jl
lcall
dec
and
push
mov
addl
into
jl
insl
dec
xor
xor
pop
mov
mov
repz
das
ds
sahf
sti
rcrb
enter
xchg
in
aas
mov
ret
dec
jmp
leave
movlps
lahf
or
jl
inc
mov
xor
and
sub
loopne
cmc
cmp
xchg
popa
add
ret
shll
mov
xor
movsl
xor
loopne
cmc
imul
or
sbb
mov
cmpsl
sbb
cmpsb
mov
rcrl
mov
fsubrs
jb
sub
pusha
jnp
mov
addb
shlb
cmpl
movsb
pop
movd
xor
outsl
xchg
inc
push
mov
mov
fmulp
lret
mov
cmp
pusha
sub
xchg
pop
inc
jbe
addr16
rorl
ja
cmpsb
dec
xor
sub
xor
push
js
mov
xchg
jae
fcmovu
sbb
xsha1
cmpsb
or
inc
push
inc
xor
test
fisubrl
stos
sti
repz
lea
mov
push
lahf
push
shll
dec
mov
mov
pop
cltd
mov
inc
test
sbb
mov
jne
insb
xchg
test
push
testw
xor
je
cli
add
int
pop
mov
push
pop
popa
push
pushf
push
ret
push
negb
stc
mov
ret
dec
sub
xor
ss
insb
dec
jmp
les
or
xchg
movsb
add
jo
push
push
rclb
scas
sub
xor
fdivl
lahf
rolb
addr16
aad
les
xchg
and
lret
xchg
pop
pop
popf
xchg
jecxz
js
xor
or
out
sub
jle
push
pop
dec
dec
sbb
lcall
scas
loope
cltd
cld
cmp
sbb
cmp
je
pop
js
das
mov
lds
sbb
and
test
cmp
aad
std
fwait
inc
clc
test
je
es
in
ja
xor
adc
cmpl
ja
cmp
mov
adc
cli
lret
leave
movsl
mov
daa
inc
int
xor
cmpsl
add
add
imul
flds
inc
sbb
sbb
push
xor
in
repz
daa
xor
add
ficoms
mov
or
sbb
lods
nop
jle
mov
xor
mov
ja
mov
pop
loopne
std
rcr
fsts
mov
cmpsb
outsb
gs
dec
sahf
sbb
mov
mov
popf
mov
fwait
or
pop
push
or
imul
loope
pop
int3
adc
xchg
mov
popl
xchg
push
mov
cld
cmpsl
sahf
sbb
mov
test
xlat
aas
mov
pop
mov
dec
imul
jp
into
mov
inc
push
push
mov
mov
sub
ja
imul
rcr
fsubrs
lret
xchg
dec
aam
ss
sahf
in
das
push
lods
stos
cmp
push
push
cld
fstl
mov
fisttpl
adc
xor
pushf
aaa
sbb
sub
sbb
lds
les
sbb
pop
adc
pop
xchg
cld
test
push
ljmp
cmp
or
push
outsl
jo
inc
jno
inc
out
sti
xchg
inc
push
jge
pop
lret
add
sahf
cmc
sub
rolb
cmp
int
fsubp
jb
mov
rcr
xchg
stc
test
cmp
add
jb
push
cli
negb
int
lods
pop
aas
and
data16
fsubrs
and
mov
outsl
fidivs
scas
mov
inc
and
sub
sub
test
inc
inc
pop
movsl
pop
test
movsl
dec
adc
cmp
push
push
xor
outsb
push
or
loope
stc
sub
mov
jecxz
adc
fcoml
int
sub
mov
das
pop
in
cwtl
pop
call
nop
add
xchg
xchg
add
lock
repz
push
insb
das
sbb
sbb
pop
cmpsl
les
bound
inc
arpl
add
cli
mov
pushf
xor
push
jg
icebp
lahf
mov
add
repz
cmc
mov
jne
fstps
fwait
xchg
bound
adc
cmpsl
ja
test
mov
sub
push
outsb
data16
in
sub
pop
inc
mov
sbb
cmp
pop
and
or
adc
test
pop
mov
dec
cmp
cld
and
sbb
jae
mov
popa
sbb
cltd
daa
mov
add
lcall
mov
and
lods
fwait
mov
mov
lret
aam
clc
cmp
lods
add
cltd
pop
shrb
push
decb
and
sbb
ds
pop
sub
pop
data16
ds
cwtl
cmpsb
mov
into
out
aam
mov
mov
sub
stos
stc
cmp
and
bound
sub
cld
movsl
stos
mov
xchg
sbb
out
icebp
or
xchg
add
test
pushf
hlt
add
add
dec
mov
dec
clc
clc
mov
hlt
stos
dec
mov
add
stc
insb
and
and
jle
add
and
lea
rorb
and
ret
xchg
push
or
cmp
dec
mov
add
lods
leave
aaa
add
fsubr
pop
repnz
int
data16
addr16
sbb
sbb
mov
mov
dec
dec
loop
pop
je
sbb
pop
pop
jecxz
or
mull
push
cmc
lahf
mov
mov
js
mov
cmpsl
xlat
fmuls
xor
shll
cmp
add
cmp
push
scas
pop
jp
into
icebp
cmpsb
sub
pop
addw
xchg
aas
dec
mov
xchg
mov
adc
icebp
add
dec
out
loope
sarl
loopne
add
imul
adc
push
xchg
add
mov
imul
lcall
xor
sbb
dec
xchg
es
icebp
ljmp
mov
movsl
cmp
xchg
lds
xor
negl
pop
fisttpl
mov
jle
mov
loopne
add
sbb
gs
mov
push
fisttpl
int
xor
push
or
test
sub
inc
pop
dec
clc
jnp
mov
test
jmp
jg
sbb
lods
mov
mov
dec
jne
adc
in
into
inc
fidivs
lahf
and
flds
iret
cmp
push
mov
jg
add
aad
cmp
xchg
mov
xchg
sbb
mov
imul
jecxz
pushf
into
les
test
ret
cld
mov
adc
lea
sbb
jmp
movsl
cpuid
xchg
mov
jle
outsl
call
xlat
dec
adc
das
ss
dec
push
fdivp
es
in
movsb
adc
or
mov
or
and
das
aaa
pop
mov
mov
jmp
in
enter
jg
mov
mov
ret
outsl
orl
cs
pop
mov
bound
and
mov
mov
sbb
jb
out
lea
xor
push
xor
fistpll
push
sar
add
lret
xlat
jbe
test
ret
adc
inc
mov
cli
data16
inc
sub
movsl
lods
loop
loop
jecxz
not
xor
dec
inc
add
xchg
je
movsl
setge
pushf
clc
mov
sub
or
mov
or
dec
ja
sbb
test
std
into
testl
lock
jnp
pop
cmp
lock
mov
sub
or
push
ja
lahf
cmc
jnp
hlt
out
ds
ljmp
mov
adc
pop
mov
sbbb
and
push
dec
hlt
sbb
push
jb
mov
outsb
scas
jns
cmovno
aaa
pop
inc
add
ficomps
dec
mov
dec
into
arpl
sub
sbbl
insl
dec
mov
jns
cmp
mov
inc
adc
ss
or
out
shl
xor
add
pop
into
jge
dec
pop
push
aad
adc
lcall
pop
push
or
mull
or
sub
lds
xchg
sbb
je
dec
lea
mov
test
stos
jb
add
imul
icebp
dec
add
cmp
cli
ret
loope
dec
push
nop
pop
inc
es
mov
pop
cltd
ja
insl
add
sub
sbb
mov
jns
es
sub
fistps
fbstp
mov
outsl
xchg
add
and
dec
push
xchg
lcall
bound
gs
jae
mov
jns
loop
leave
xchg
pop
jne
push
cmp
and
mov
rcrb
pop
shll
add
pop
push
or
fbld
add
sub
lea
repnz
cmp
lcall
and
fyl2xp1
int3
xor
push
xor
jecxz
lahf
inc
cmpsb
xorl
bound
loop
dec
bnd
mov
push
pop
fisubl
push
es
je
pusha
xor
adc
mov
add
jp
mov
std
outsb
movsl
test
pop
mov
xchg
and
push
xchg
adc
inc
xchg
xor
mov
outsl
adc
mov
fildll
fwait
push
sbb
clc
mov
les
rcrb
fnstcw
and
pop
ljmp
push
inc
push
scas
es
pop
insl
int3
loopne
push
xchg
rcrb
in
daa
iret
dec
jecxz
pop
mov
add
dec
repz
stos
rcl
pop
inc
jl
pop
js
cmp
mov
push
rorl
insb
xchg
sti
sbb
push
dec
call
dec
push
adc
sbb
or
sbbb
jp
leave
xchg
sub
adc
dec
push
or
pop
sbbl
mov
icebp
addb
and
add
xor
jmp
popl
pusha
out
pop
inc
imul
push
ret
push
aad
inc
and
or
mov
add
add
roll
jnp
sub
adc
out
std
cltd
jo
jmp
cmc
das
or
popf
sub
jle
or
mov
stos
dec
jg
xor
out
cmp
lds
dec
pop
sti
jne
shll
push
jb
rorl
mov
in
sub
out
adc
inc
mov
pusha
inc
data16
pusha
inc
in
bound
push
data16
mov
mov
pop
ficompl
js
cltd
dec
mov
bound
movsl
mov
pop
ja
dec
stos
cld
sub
pop
push
xchg
cmp
repz
shll
dec
mov
ret
shrl
adc
aam
pop
jb
test
add
jl
movsb
subl
into
dec
xlat
clc
dec
jecxz
dec
flds
adc
scas
es
pop
jbe
push
add
jg
cltd
add
jbe
push
add
xor
lock
stos
cli
cmp
stos
push
sbb
fsubs
add
lret
mov
in
jns
lods
and
out
jae
std
pop
or
out
je
int3
mov
insb
push
inc
dec
jmp
or
inc
fbld
and
fnstcw
mov
mov
mov
jg
xlat
xchg
call
sti
notb
jmp
and
jge
pop
cmp
jecxz
pusha
into
push
xlat
jge
arpl
push
call
out
sbb
fcomp
or
cmc
in
dec
cmp
stos
clc
cmp
fidivs
int3
dec
shld
lret
sub
dec
ds
xlat
imul
add
pop
ret
ljmp
xor
lret
adc
fstpt
mov
test
andl
js
inc
pop
std
add
xchg
add
cs
pushf
in
ret
cmp
jg
jae
cmp
sti
add
xchg
pop
call
ret
dec
and
pop
shr
scas
in
push
push
iret
push
xor
jle
jecxz
gs
inc
mov
scas
dec
and
and
loope
fisttps
add
adc
in
movsl
loopne
xchg
into
xor
adc
out
test
jge
mov
leave
imul
xchg
mov
xlat
cmc
es
push
jo
xchg
xor
push
push
and
punpcklbw
into
push
or
mov
dec
push
hlt
or
mov
xor
push
ffreep
data16
stc
sbb
sub
test
jge
ja
xor
adc
mov
mov
sbb
mov
cmp
pop
xchg
jno
imul
add
cmp
ds
es
mov
cli
je
nop
or
mov
sub
push
imul
sub
cmc
daa
xchg
add
mov
sahf
lret
and
into
shrb
loope
dec
adc
or
adc
stc
cmp
ficoms
stos
xchg
bound
mov
push
sbb
dec
cmpsl
das
mov
loope
xchg
pop
imul
sub
jb
pusha
ss
adc
es
jmp
jo
out
mov
mov
cmp
sub
sbbl
ja
int3
sar
adc
shll
sub
pop
jge
pop
add
jge
js
or
inc
mov
notb
add
dec
mov
pop
pop
xlat
push
jg
xor
add
push
pop
mov
pop
cmp
dec
icebp
mov
repnz
cmp
push
xor
dec
xchg
xchg
xlat
fdivr
and
xlat
cmp
stc
mov
add
sbb
xchg
cmc
cmp
sbb
cmp
mov
clc
ds
pushf
or
jne
jg
int
cwtl
add
cwtl
shlb
xor
ss
cli
push
dec
cmp
in
mov
out
mov
out
or
xchg
aad
mov
lret
int
pushf
jae
les
bound
gs
pop
mov
jmp
adc
scas
xorl
sahf
inc
xor
jp
scas
lret
xchg
mov
jmp
sub
xor
lock
fidivs
push
insl
nop
rorb
setp
mov
xchg
fcomps
sarl
subb
xchg
jmp
daa
test
xchg
ljmp
mov
sbb
pop
sbb
cmp
mov
jle
sbb
cmpsb
xor
xchg
stos
lcall
sahf
mov
ds
daa
adc
lock
push
shrl
test
pop
dec
imul
jp
add
sub
dec
out
sub
mov
scas
xor
mov
cmp
dec
rorl
daa
pop
inc
jne
xchg
adc
add
push
cmp
aam
inc
incb
cmp
adc
xor
shlb
push
pop
add
iret
cmp
emms
lea
mov
add
mov
mov
and
add
xor
push
sub
lods
xor
fdivrl
push
jbe
hlt
xchg
loop
xchg
orl
sbb
push
xor
cmp
dec
imul
rolb
dec
xor
or
mov
sbb
xlat
pop
push
inc
int3
add
adc
xchg
push
leave
push
mov
and
sub
mov
sub
lcall
mov
imul
or
and
fwait
push
cmp
scas
xchg
push
mov
das
movl
and
lock
inc
xchg
subb
dec
xor
inc
sub
insb
or
sbb
out
and
outsb
jbe
xor
and
addr16
cwtl
cli
pop
scas
and
sar
int
ret
aas
adc
jns
cmpsb
cmp
push
leave
mov
mov
mov
dec
jb
cmp
cmp
std
or
add
add
lods
pop
push
cmpsl
popf
out
cmp
iret
xor
out
sbb
add
adc
fstps
std
fcomps
cmp
addb
sbb
mov
in
lods
jecxz
push
inc
xchg
bound
and
xor
imul
mov
arpl
mov
add
repz
icebp
mov
sti
dec
cld
lock
inc
pop
jnp
dec
mov
pop
cld
jbe
clc
push
push
bound
fs
sbb
ss
int
inc
inc
imul
ret
dec
mov
and
in
insl
jle
roll
xchg
add
arpl
js
lret
cs
stc
cmp
cld
stos
xor
or
das
push
jp
jmp
pushf
xchg
pop
and
mov
lret
adc
scas
ds
ret
loop
dec
lods
push
stos
push
sbb
sbb
sarl
mov
jmp
in
mov
movsb
ss
xchg
pusha
sub
pop
leave
mov
movntps
xchg
arpl
dec
sub
ret
idivb
cmp
fsubl
das
cltd
fwait
pushf
shlb
or
nop
paddusw
jg
dec
sbb
stos
in
jo
aam
ss
lret
dec
xor
dec
out
test
nop
nop
sbb
cld
and
cmp
aad
dec
mov
push
inc
lods
mov
std
lcall
out
loope
loopne
sub
fidivrs
mov
mov
cltd
bound
fnsave
pop
or
dec
mov
cmc
push
inc
rcrl
pop
dec
jge
add
into
xlat
or
mov
into
cvttps2pi
int
fisttpl
stos
push
int
in
pop
mov
loope
push
xor
sub
clc
aad
out
mov
pop
outsb
dec
mov
jg
xor
or
repz
cmp
mov
sub
pop
shll
push
in
push
push
dec
push
sub
jle
dec
out
and
mov
and
and
idivl
jo
inc
dec
xchg
mov
adc
or
addb
cmp
sti
arpl
mov
dec
mov
adc
fdivs
in
imul
pop
imul
imul
pop
add
push
mov
jbe
xchg
rclb
jecxz
aam
sub
mov
ret
in
and
add
dec
add
cmp
mov
aam
jp
ss
sarb
ss
and
sub
push
sub
xchg
aaa
push
push
lret
movsb
cltd
xchg
movsb
mov
lock
ret
mov
sub
cltd
jo
inc
mov
popa
mov
pop
stos
call
ret
sbb
fs
pop
adc
int3
aaa
pushf
push
add
mov
pop
lea
pop
pushf
aas
mov
dec
ljmp
ffreep
sha1nexte
mov
fmull
aam
mov
xchg
xchg
stc
loop
push
inc
es
pop
pop
mov
mov
cmpsl
subb
ljmp
xchg
lcall
mov
std
decb
mov
mov
sub
fimuls
push
sbb
orb
fwait
stos
jp
inc
pop
enter
mov
inc
or
mov
lcall
call
roll
shrb
sbbb
fsubrl
popa
loop
cmp
repz
inc
popa
test
jecxz
inc
das
ss
fidivrs
popf
pop
jb
pop
scas
outsb
adc
out
dec
push
inc
pop
sbbl
int3
repz
clc
sbb
mov
dec
orb
je
in
ljmp
daa
jno
dec
fistl
scas
std
std
and
or
jae
sub
lods
aaa
and
add
sub
fisubrl
icebp
mov
lods
dec
rolb
push
int3
arpl
mov
add
mov
sbb
mov
lods
xchg
mov
loopne
cmp
test
rolb
push
lock
adc
inc
rorb
cmp
andl
inc
clc
dec
ret
jmp
cmp
cmc
rorb
cmp
in
sbb
pushf
jo
fcoms
jne
sub
out
push
xor
scas
push
cmc
mov
sub
sbb
gs
mov
jl
add
stc
shl
mov
outsb
pusha
sbb
daa
lds
ja
dec
mov
pushf
popa
sbbl
repz
sarl
push
icebp
xor
cltd
insl
pop
daa
aam
cmpsb
dec
push
lods
cmpsl
neg
rdmsr
jmp
cli
cmpb
outsb
mov
add
out
xor
outsl
lds
add
inc
hlt
lods
sub
inc
mov
ror
cmp
pop
lock
dec
push
das
sarl
bound
out
repnz
fistps
pop
decl
dec
mov
je
sbb
inc
fisttpl
dec
mov
loop
loop
and
add
mov
sub
add
fwait
xor
jge
cltd
xchg
das
push
loop
and
or
add
loop
or
sub
mov
mov
adc
int3
push
in
jl
scas
jge
xchg
dec
add
out
sub
sahf
sarl
je
mov
and
movsb
cmp
and
and
or
sbb
aaa
sub
lods
ret
lods
insb
xchg
push
lock
inc
in
jp
inc
jl
dec
popa
out
push
loopne
dec
outsb
int3
std
lock
and
popl
flds
stos
fwait
loopne
xchg
or
insb
clc
in
cltd
lret
in
push
jno
add
pusha
test
jno
test
push
je
js
xor
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
test
push
adc
jl
pop
jl
lods
xor
mov
add
rolw
pop
jge
ret
lea
push
fcomps
dec
popa
adc
int3
sbbb
insb
xor
sbb
int3
mov
mov
xlat
insl
insb
movsb
sahf
inc
pop
scas
dec
mov
push
mov
lods
das
out
out
push
jmp
pop
sub
push
mov
and
loopne
cltd
lock
add
outsb
jno
mov
add
pop
xchg
add
fisubs
pushf
jne
fldcw
jne
std
loopne
lcall
mov
add
pushf
nop
pop
test
scas
and
cmpsb
or
cltd
repnz
lods
sbb
dec
cmp
add
in
sub
lds
popf
mov
imul
mov
js
enter
arpl
push
or
add
ss
xchg
adc
xor
dec
or
movsb
push
mov
test
neg
jnp
movsl
mov
shrl
or
mov
xlat
fisttpl
rcrb
pop
pop
fsubs
lcall
stos
cmp
fldt
jno
jnp
or
fimuls
mov
sub
js
add
jmp
fistps
cli
aam
or
aam
sbb
test
shll
dec
cmp
xor
mov
das
test
xor
decl
dec
xchg
jmp
loope
pop
sbb
test
jno
push
mov
or
jae
enter
outsl
fwait
ret
sub
adc
dec
and
push
dec
in
push
mov
and
jmp
dec
jae
lret
mov
mov
out
into
jo
cltd
leave
sub
lea
outsl
dec
pop
mov
popf
jno
inc
push
sbb
push
xor
add
out
dec
jecxz
mov
cmpsb
xchg
xlat
fs
or
mov
aam
add
sub
or
cmpsb
jae
clc
fsub
arpl
sbb
out
inc
imul
xchg
nop
or
cltd
std
nop
dec
jl
mov
jecxz
add
sbb
aaa
jg
push
jb
or
push
sub
imul
jmp
aad
fildll
dec
lret
sbb
push
in
cmp
insl
or
mov
fisubs
es
subb
sbb
das
loop
jae
fdivrs
xchg
xchg
cmp
mov
nop
or
int3
int
popf
bound
xchg
jne
push
inc
mov
sub
mov
add
movsl
stos
stos
lock
adc
orl
mov
in
push
sti
sub
xchg
jecxz
pop
xlat
int3
sub
cmp
pop
insb
push
dec
cs
bound
repnz
pushf
jb
or
pop
dec
cmp
mov
adc
nop
jg
call
and
or
adc
into
test
add
jbe
fcmovb
push
or
jl
jo
mov
xorb
add
ret
out
jae
push
xchg
in
mov
push
mov
sub
jge
rcrl
es
out
test
and
pop
mov
mov
jp
je
sub
cld
out
loop
mov
inc
cltd
aam
jp
mov
push
add
and
repnz
andl
movsl
jmp
lods
jne
shl
dec
popa
adc
xor
rclb
jmp
xor
int3
or
icebp
cmpsb
lret
push
push
push
pop
insb
push
stos
sbb
fsubl
cmp
lods
push
sub
cli
mov
sbb
fldcw
cmp
add
jbe
xor
mov
jle
lods
in
subl
push
ja
pop
sbbb
pop
or
insb
fnstcw
aad
cmpsl
or
sar
inc
push
leave
div
dec
adc
jb
jns
loope
add
jns
cmp
ret
mov
xor
outsb
pop
stos
orl
jp
mov
mov
test
jge,pn
movsl
dec
pop
jle
pop
cli
movsl
push
xchg
popf
in
rcrb
das
cmp
movnti
adc
jecxz
pop
popa
pushf
lsl
fld
int
loopne
rolb
pop
mov
orl
adc
push
cwtl
out
test
sub
cmp
or
inc
rcrl
jge
adc
movsb
pop
test
xor
cwtl
xor
lret
pusha
jmp
jbe
rcrb
xchg
aas
mov
mov
shll
test
cli
inc
sarl
les
pop
and
int3
jecxz
lcall
sub
push
outsl
inc
sub
test
mov
adc
xchg
add
sbb
fldt
ds
outsl
lds
and
or
ss
out
rolb
mov
aaa
mov
lcall
dec
add
mov
leave
xchg
movsl
aaa
jle
mov
mov
mov
and
aaa
dec
pop
cmp
sbb
jae
sti
jecxz
xchg
ret
fdivrl
cmpsb
loop
cltd
mov
and
shll
js
xchg
jo
cmpsb
in
ffree
sbb
movl
sub
fwait
lret
stc
pop
pand
lock
shr
daa
pmuludq
sub
leave
rcll
pop
and
mov
pop
sub
mov
push
xor
mov
push
push
bound
sub
mov
leave
std
inc
inc
insl
lds
and
push
popa
pushf
rcr
dec
mov
push
pop
cmpsl
xchg
xchg
xorl
int
cmpsb
fcmovu
lods
adcb
lock
cwtl
sub
jbe
lcall
pop
clc
cmp
les
add
iret
test
cmp
cmp
mov
stc
pop
cmpsl
xor
nop
push
aam
mov
ficoms
xlat
pusha
mov
xchg
cmp
add
add
in
jecxz
daa
pop
sub
cmp
push
ret
mov
hlt
lcall
jecxz
jp
adc
or
cwtl
rcl
sub
sub
stos
mov
pop
push
xchg
and
jbe
or
outsb
jmp
dec
jge
enter
lret
inc
dec
dec
sar
call
rcl
add
push
fcmovnbe
push
cs
jae
cmc
jne
inc
call
mov
cmpl
jb
adc
scas
outsb
xor
hlt
leave
in
mov
aas
and
icebp
idivb
rcl
push
stc
nop
sbb
in
cld
stos
sbb
lret
ds
outsb
xchg
scas
add
movsb
popl
int
cmp
mov
push
sbb
add
iret
icebp
sub
aad
dec
ja
stos
pop
push
cmpsl
adc
xchg
mov
lret
mov
faddl
lock
cmp
or
loop
int
sbb
xor
fstp
cmp
lret
movsl
cmp
in
pop
pop
cs
shl
jne
pop
nop
add
loopne
mov
mov
dec
lret
mov
add
push
lods
inc
inc
dec
cmp
xlat
xchg
aas
fisubrl
jb
das
cmp
ffreep
mov
push
xchg
bound
das
addl
or
es
jl
notb
push
dec
lods
sub
mov
push
into
mov
add
into
cmp
xor
mov
cmp
je
iret
pop
cld
push
inc
cli
dec
das
pop
inc
mov
rcrb
mov
fsubl
and
sbb
addr16
jno
fimull
mov
hlt
jo
fistps
decb
mov
inc
insl
adc
jge
loope
stc
test
or
adc
rep
mov
xchg
cld
xchg
jb
mov
loope
jmp
mov
jns
push
or
sarl
cmc
mov
jp
fs
popa
fadds
fildll
jp
daa
push
adc
icebp
call
rcrb
outsb
lea
cmp
xchg
mov
loope
inc
sub
jle
inc
aam
pop
fistps
mov
lock
ss
jmp
xchg
bound
xchg
jl
aaa
jg
adc
dec
inc
xor
arpl
movsb
cmp
mov
and
int
nop
enter
mov
fs
clc
pop
mov
xor
cmp
or
sub
shlb
xor
xchg
imul
int
in
scas
repz
shl
ret
pushf
cmpsb
aas
cld
inc
xchg
pop
es
push
mov
mov
mov
pop
imul
in
insb
cmc
ljmp
add
add
mov
ja
iret
outsb
push
movb
add
fldenv
notb
push
ds
pop
aam
popf
lahf
inc
jnp
sarl
pop
xor
xchg
inc
adc
adc
filds
stos
add
movsbl
daa
mov
stos
add
data16
mov
rolb
aas
push
adc
mov
push
cmp
in
into
mov
outsb
adc
sub
sub
dec
lock
mov
inc
lods
inc
and
idivl
jne
adc
pop
jbe
clc
inc
outsb
xchg
mov
mov
ret
adc
mov
mov
ljmp
pop
arpl
lret
mov
out
fstl
test
cli
hlt
loope
dec
icebp
inc
sbb
test
dec
in
sti
insb
cmpsb
aam
sti
mov
aas
mov
stos
insl
repnz
pushf
sub
loop
and
cmp
or
xchg
push
sub
fisttpll
xor
xor
call
aad
sub
sbb
iret
cli
lds
out
jno
mov
sub
and
sbb
push
mov
mov
jl
notb
stos
jecxz
icebp
jne
mov
mov
dec
jmp
test
out
iret
add
jns
xor
sbb
mov
aam
mov
ja
imul
or
add
mov
jl
pop
push
xor
sahf
xchg
imul
repz
outsl
dec
cmp
mov
and
insl
dec
out
rol
jns
inc
and
cmp
mov
nop
mov
inc
cmp
cli
mov
pop
or
adc
loopne
outsl
in
inc
sub
das
and
jge,pt
xchg
cmpl
les
lock
cmp
iret
lret
cli
push
inc
mov
cwtl
mov
ss
lea
jg
incb
xor
cmp
cmp
adc
dec
xchg
hlt
movsb
xor
arpl
mov
pop
jle
cmp
clc
push
ds
daa
scas
sub
out
loope
ret
aad
fwait
xchg
jmp
sub
jge
push
inc
adc
out
lds
inc
xor
gs
cmp
xor
push
loope
push
sub
ja
jns
or
mov
inc
pop
jno
stos
push
pop
adc
or
push
lods
fstpl
sub
fwait
inc
in
outsl
dec
pop
in
sub
push
shlb
aad
stos
cwtl
test
xchg
adc
mov
cmpsb
lret
in
mov
sbb
xchg
ficoms
xchg
cmc
adc
popf
fmul
mov
je
or
push
jle
add
test
cmp
sub
xchg
and
xchg
push
xchg
ret
insl
loope
dec
es
xchg
dec
cmp
ret
cmp
sti
cld
and
mov
add
cmp
and
outsb
push
movsw
or
add
pop
adc
or
cmp
jmp
pop
add
icebp
mov
daa
sub
mov
lea
stos
or
in
testb
mov
or
out
cmove
xchg
arpl
mov
add
loop
xor
and
push
aaa
xor
and
sahf
and
inc
dec
test
inc
add
std
inc
enter
in
mulps
mov
cmc
push
mov
push
sub
into
nop
mov
out
mov
int3
cmc
pop
or
sub
xchg
mov
mov
pop
out
popa
fs
mov
cmp
mov
repnz
dec
mov
cwtl
int3
xor
cmpsb
cmp
and
int3
sbb
add
xor
nop
mov
dec
inc
cltd
cwtl
sarl
jns
out
movsl
cli
pusha
jno
shrb
jle
push
sub
pop
push
cld
pusha
push
xor
andb
pop
insl
sbb
aaa
or
sub
imul
cmpb
imul
push
inc
mov
or
mov
and
mul
leave
dec
mov
call
jnp
sbb
cld
push
fbld
jo
mov
and
aaa
pop
sub
mov
xor
mov
daa
aas
in
or
aas
sbb
sarl
ja
clc
mov
fistps
into
lea
mov
fsubl
mov
mov
sti
pop
test
mov
sbb
mov
fmul
sbb
shlb
jle
int
mov
lock
ds
rclb
test
bound
lahf
lods
cmpsb
mov
mov
mov
test
ret
pop
xlat
scas
dec
aas
mov
sbb
test
test
and
xchg
lock
frstor
sub
or
fcmovnu
adc
inc
mull
leave
or
pop
jne
int
out
lods
pop
xchg
mov
popa
in
push
mov
pop
dec
cld
ja
jmp
ja
mov
jns
jae
fwait
pop
lods
sbb
rcrl
mov
adc
jge
in
movsl
test
pusha
sub
jae
mov
rcll
pop
cmc
push
cltd
xor
mov
lods
stc
bnd
sti
pop
and
mov
out
sbb
dec
mov
xor
adc
lea
sbb
aas
or
mov
pusha
mov
inc
mov
fstpl
sbb
stos
inc
xlat
xor
inc
or
add
mov
imul
mov
lock
mov
xorl
fisubl
lahf
adc
and
or
or
fsts
jne
sbb
rolb
lret
scas
jge
pop
adc
pop
test
inc
sbb
mov
cmp
ljmp
adcl
mov
xchg
adc
lahf
sub
cltd
add
daa
jle
sbb
jo
sub
mov
into
adc
test
push
rcr
bound
rorl
movsl
dec
mov
or
adc
les
stos
aaa
ds
adc
popa
sbb
frstor
ljmp
cmp
xor
test
sbb
test
jbe
mov
rorb
sbb
loop
or
mov
stos
dec
test
int3
sbb
insl
push
jb
repnz
sbb
push
sub
mov
inc
lock
ficoml
add
sahf
les
pop
data16
outsl
adc
sbb
fmuls
test
lea
scas
cli
sar
cmp
sub
xchg
jb
fadd
out
aaa
cmp
loopne
mov
icebp
insl
cmpsb
add
mov
xor
xlat
adc
sbb
cmp
jp
je
dec
bound
fisubrl
and
pop
pop
mov
mov
dec
out
imulb
daa
fdivs
xchg
movb
push
into
out
aad
add
sub
aam
mov
dec
adc
mov
inc
sub
push
mov
cmp
cmp
cmc
js
sub
test
ljmp
sbb
inc
mov
in
aas
jl
fsubrs
hlt
mov
or
jbe
and
out
cmpsl
mov
inc
cmpb
push
xchg
sbb
rclb
add
fisttpl
ss
cmp
cmp
je
sbb
jno
mov
f2xm1
stos
out
mov
mov
les
xchg
cwtl
js
jp
add
mov
jp
mov
insl
xchg
sbb
sarb
dec
and
popl
jmp
daa
xor
in
push
insb
fs
rolb
cmp
xor
adc
cld
push
add
mov
xchg
mov
mov
mov
subb
out
mov
adc
jmp
cmp
inc
xchg
fistl
shrl
shrb
rcrl
or
outsl
addr16
cld
xor
movsl
mov
or
jb
imul
xor
orb
or
mov
mov
push
shlb
inc
xchg
push
mov
cwtl
mov
mov
in
and
ds
loop
stos
outsl
mov
idiv
stos
mov
xchg
push
sti
xor
push
sbb
mov
mov
jle
adc
jmp
mov
scas
push
xor
mov
sub
sbb
repz
pop
dec
or
daa
xchg
sbb
push
cmp
lock
xor
jl
push
test
mov
stos
xchg
xchg
push
cld
and
sbb
jecxz
iret
scas
pop
sub
lds
into
movsb
cwtl
mov
or
xchg
mov
push
cmp
cmc
xchg
pop
idivl
std
pop
imul
std
cwtl
mov
mov
mov
inc
sbb
cmpsb
xor
cmp
fldenv
sti
mov
cli
ja
xchg
or
xor
cltd
incl
test
mov
inc
int
je
inc
cwtl
in
push
xchg
pusha
sub
mov
call
dec
inc
and
imul
sbb
xor
out
inc
add
arpl
mov
jecxz
loopne
iret
js
fists
jae,pn
push
inc
mov
inc
mov
push
mov
adc
jnp
push
hlt
lahf
out
lock
pop
out
test
xchg
jecxz
lock
sbb
jno
and
loope
mov
rcr
inc
xor
push
out
cmpl
and
ja
mov
pop
aad
mov
stc
test
cmp
das
mov
nop
imul
arpl
lods
loope
test
sub
call
idivb
sub
inc
push
cmc
stos
jl
aas
bound
inc
loop
leave
xchg
mov
jle
dec
ret
sti
js
jnp
and
pushf
fsubrs
push
push
cltd
cltd
test
sbb
call
sbb
adc
clc
push
and
push
push
inc
fisttps
mov
sbb
push
testb
xor
ret
jp
mov
into
jmp
pop
daa
les
jno
mov
cli
pop
cmpb
mov
jmp
enter
and
neg
test
xlat
cmp
lea
dec
inc
xor
out
lock
insb
jecxz
sub
inc
repnz
sbb
cltd
imul
cmp
pop
ror
cmp
push
pop
jmp
loopne
sbb
inc
clc
arpl
popf
hlt
pop
jp
pop
mov
es
pop
orl
aad
mov
inc
sub
mov
in
inc
fcoms
shll
xor
iret
icebp
cmc
je
add
inc
fimuls
pop
cmp
push
shrb
sahf
fnstenv
pop
stos
out
fisttpl
push
jp
sbb
mov
mov
js
xchg
daa
dec
push
inc
test
inc
push
mov
stos
insl
mov
adc
fnstcw
mov
movsb
and
clc
inc
sub
loope
pusha
cmpsb
cmp
lods
dec
mov
outsl
xchg
aas
imul
popf
pop
test
push
test
xorb
nop
sub
mov
sub
pop
fsubrl
push
daa
dec
iret
push
ret
mov
pop
das
sub
imul
mov
push
jbe
and
data16
mov
arpl
jne
out
test
repnz
lods
jns
jne
pushf
push
add
nop
addr16
lea
inc
cmp
push
xchg
mov
stc
add
sbb
jmp
push
out
iret
bound
xchg
and
sub
jge
cmp
pop
jmp
je
xor
xor
test
adc
mov
jo
or
or
pop
add
in
sub
mov
in
scas
push
sarl
add
or
aaa
add
mov
push
les
push
mov
xor
lods
mov
add
pop
mov
xor
pop
aam
rorb
cwtl
dec
imul
out
adc
inc
mov
shlb
out
ss
pause
inc
test
outsb
out
dec
mov
sub
dec
add
push
inc
in
pushf
push
insl
stc
cltd
arpl
ret
cmp
outsl
aaa
mov
loopne
jle
or
mov
sbb
fiadds
xchg
and
in
jnp
or
mov
adc
inc
or
lret
add
mov
pushw
mov
and
or
mov
sub
lods
mov
push
or
add
fnsave
add
cmpsb
mov
mov
fwait
lock
mov
in
enter
ja
xchg
shrb
imul
cmpsb
mov
inc
xlat
mov
jl,pt
lahf
mov
ret
outsb
test
incl
mov
mov
adc
adc
test
inc
sahf
int3
sbb
xchg
fwait
js
mov
pushf
test
ret
loope
push
pushf
sub
ficompl
ss
cmpsl
es
mov
mov
push
push
popa
les
pop
jl
out
out
inc
int
mov
mov
or
mov
add
jp
leave
mov
push
in
lds
cmp
pop
test
es
add
inc
aad
sub
sti
andl
or
gs
dec
fsubr
and
fucom
mov
test
sahf
xchg
incl
ljmp
jle
sub
jne
sub
test
lock
pop
int3
sarb
lahf
leave
scas
dec
cld
sbb
ljmp
loop
sarb
mov
ds
mov
mov
iret
shrb
aas
xor
imul
add
lcall
jge
pushf
negl
cmpl
pop
xchg
push
jle
mov
imul
pop
testl
shlb
sub
loope
and
adc
cmp
arpl
clc
and
lretw
aas
sti
adc
lock
push
or
js
xchg
arpl
mov
fstpl
mov
xor
inc
and
inc
lods
adc
je
dec
shll
loopne
sbb
addb
shll
outsl
or
xchg
test
xor
lds
push
fdivrl
stc
inc
std
xchg
mov
mov
enter
mov
xor
sbb
xchg
test
in
mov
test
popa
jp
xchg
xorl
adc
and
ret
adc
aaa
push
popf
push
mov
push
push
push
mov
xchg
jae
test
lods
lock
out
lret
cmpsl
jl
daa
hlt
stc
dec
enter
lds
cmpb
dec
pushf
notl
or
fisttps
dec
ret
sahf
or
mov
shll
enter
out
cmp
jae
or
sbb
sub
dec
out
in
rep
xchg
add
std
pop
adc
xchg
and
inc
mov
xor
outsb
mov
add
popf
mov
mov
in
test
jl
xlat
adc
adc
loop
sbb
xor
aad
cli
test
js
and
jmp
call
xchg
xor
cs
enter
arpl
sbbl
inc
inc
pop
xchg
mov
mov
or
rorl
subb
popf
cmpsb
outsl
aas
add
and
add
adc
add
push
out
lods
pop
xor
jl
adc
add
lds
push
lahf
add
out
fwait
sub
fwait
sub
cmp
loop
dec
xchg
sub
dec
sbb
or
cltd
mov
scas
aam
es
adc
shrb
add
int3
jle
hlt
stos
fsubrp
mov
inc
testb
mov
inc
push
aad
orl
lahf
bound
arpl
mov
loopne
loope
jp
and
lret
sub
and
aaa
jns
mov
jg
mov
cli
rolb
mov
cmp
cmp
fadds
sbb
mov
fs
daa
addr16
dec
loopne
cmp
mov
adc
aaa
pop
arpl
jp
push
sub
mov
pop
enter
sarl
pop
jne
push
scas
dec
nop
fnstcw
popf
iret
aas
add
cld
xor
xchg
aam
cs
ss
cmp
sub
cmp
ja
mov
add
dec
xor
aam
lret
mov
mov
sub
inc
jae
xchg
pop
pop
outsb
lods
adc
sahf
push
xchg
insl
xlat
imul
out
mov
call
repnz
push
incl
mov
sti
sub
inc
jne
enter
sub
push
jp
test
xor
cli
rcll
les
push
call
dec
nop
subl
dec
out
pop
mov
ficoml
pop
stc
inc
fdivrs
sbb
cmovg
sbb
sub
xor
inc
sub
xchg
jo
inc
mul
pop
adc
push
adc
add
cld
ret
cwtl
jne
pusha
and
mov
mov
pop
push
jae
mov
push
stc
xchg
push
mov
out
push
das
pop
cli
aad
ss
inc
jle
arpl
cmp
call
pop
add
out
sbb
imul
test
imulb
mov
cltd
xor
insb
test
push
pop
cmpsb
pusha
imul
movsl
ficompl
cs
pop
xor
lahf
call
aam
and
xchg
sbb
inc
out
es
fnstenv
cmp
bound
test
ret
inc
jb
fisttpll
and
cli
movsl
popf
mov
out
xchg
pop
inc
stos
insb
unpcklps
xor
mov
jmp
mov
sahf
std
out
bswap
inc
or
mov
mov
sbb
in
xor
push
jg
dec
pop
dec
es
jle
out
outsl
cmpsl
or
stc
or
imul
pop
aas
or
rep
sbb
int
mov
jg
mov
jae
sbb
inc
jbe
xchg
les
xchg
je
inc
movb
sbb
mov
xor
out
cli
loope
sub
sti
lock
xchg
scas
mov
xchg
mov
add
sub
mov
std
cltd
fs
mov
cltd
negl
adc
dec
fldenv
inc
sbb
aas
xchg
movsb
repnz
ljmp
mov
adc
data16
pop
data16
test
loop
loope
out
aad
loope,pt
sbb
dec
jb
imul
mov
mov
pusha
insb
xor
ljmp
push
int3
pop
or
mov
data16
fdivr
cwtl
mov
div
pop
sub
cmp
cmp
rcll
xchg
pop
cmc
mov
ds
test
daa
add
scas
xchg
cmp
scas
icebp
dec
cmc
cwtl
aad
minps
jmp
movsb
mov
xchg
mov
mov
int
cltd
out
push
pop
add
xchg
nop
or
lods
mov
lcall
fisubrs
arpl
sub
mov
mov
mov
fidivrs
inc
adc
xchg
into
dec
xlat
add
dec
scas
sub
testl
push
mov
add
adc
push
out
jp
out
rolb
mov
aaa
shl
mov
add
cli
mov
int3
cmp
inc
dec
sar
das
das
inc
sbb
repz
in
ss
popf
mov
pushf
push
pop
dec
std
mul
add
jo
sub
int3
aad
out
popa
aad
mov
notb
xchg
lret
add
xor
jp
pop
xor
aaa
mov
cwtl
es
and
into
decl
mov
xlat
xchg
push
push
push
mov
mov
dec
mov
pop
pop
pusha
loope
push
sbb
cs
test
sti
fs
and
sub
test
push
mov
js
xor
stc
enter
outsl
xor
mov
cmc
aas
mov
je
jne
fbstp
push
mov
adc
negl
es
movb
loop
dec
fdivp
aas
pop
shrb
loop
cmp
pusha
push
inc
and
out
jg
mov
adc
in
xchg
inc
sub
xor
mov
jecxz
out
jo
in
clc
into
incb
inc
cmp
mov
push
add
lods
and
pop
jp
jle
es
pushf
add
dec
lcall
push
mov
mov
lods
push
fcomps
in
push
lahf
push
inc
ljmp
es
xchg
repnz
dec
jbe
mov
add
xchg
loop
stos
cmpb
popf
xor
or
pop
iret
imulb
inc
mov
jl
in
clc
mov
mov
xchg
jge
push
cmpsb
push
imul
add
sub
sbb
les
jae
jno
lea
xchg
test
mov
cmp
stos
movl
mov
adc
inc
shl
add
mov
roll
out
mov
ja
dec
xor
fistpl
shll
sub
rcrb
lret
add
xlat
add
sbb
add
ja
lods
sub
test
mov
cmpb
aas
aam
jb
dec
adc
or
jno
pop
pop
sarl
cmp
inc
dec
add
push
lcall
enter
inc
aaa
adc
jl
sub
lret
push
fsubs
ja
push
loope
popa
mov
divl
aaa
negb
pop
je
test
mov
pop
ret
mov
mov
daa
mov
iret
sub
cmpsl
adc
cmp
dec
lock
jne
add
in
and
fisttpl
xchg
mov
and
cmpsl
cmpsb
scas
sub
xchg
ret
or
add
mov
sbb
mov
loopne
jo
pop
mov
sbb
jnp
ret
xchg
fadd
movsb
insb
cmc
addl
aad
stos
sti
out
mov
adc
mov
das
inc
mov
mov
je
sbb
fxch
mov
and
mov
jle
mov
xor
mov
imul
scas
xor
data16
mov
loopne
imul
or
sbb
lods
cmpsb
cli
hlt
mov
enter
jmp
les
dec
into
movsb
dec
add
sbb
lcall
stc
cli
jnp
shlb
ret
mov
dec
mov
mov
roll
pop
int3
pop
sbb
lds
mov
or
xor
push
cmp
sarl
xchg
mov
mov
mov
fstl
ret
xlat
or
push
mov
shl
imul
fdivrl
push
pusha
and
dec
lahf
mov
mov
nop
jne
test
pop
out
aaa
pop
cmc
xor
popa
dec
int
notb
es
fldt
dec
jnp
mov
mov
ljmp
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
das
cli
xor
inc
scas
jl
inc
pop
jl
pop
or
into
jl
cmp
lcall
movsb
bound
cmpsl
mov
int3
daa
in
cli
aas
loop
inc
loop
stc
cmpsl
push
jmp
push
ds
inc
inc
mov
in
add
push
push
ja
pop
or
pop
ret
int
pop
sbb
jno
cli
push
mov
sub
daa
jp
stc
in
pushf
sub
stc
sub
add
rcl
and
push
xor
lret
jle
inc
xor
cmp
add
imul
jbe
sub
jnp
repz
int3
mov
sbbb
ds
xchg
mov
push
sub
pop
add
jmp
adc
lret
dec
nop
call
inc
dec
cmp
test
and
push
jmp
adc
mov
jb
in
and
mov
mov
mov
loope
jb
sub
sbb
pushf
nop
fimuls
mov
mov
fiadds
aam
jg
push
and
loop
xchg
adc
add
add
inc
incb
mov
xor
sub
cmp
xchg
fwait
loop
adc
inc
xchg
cwtl
es
leave
shrl
aas
fildl
fidivrs
psubsb
push
adc
fdivrl
insl
aas
sub
out
das
and
hlt
test
cmpb
sarl
pusha
push
repz
popf
xchg
loop
mov
xchg
es
cld
ljmp
xchg
sbb
or
xchg
sub
fdivrp
iret
shl
push
outsl
sbb
adc
ret
and
fcoml
pop
aam
dec
push
es
sarb
rcrl
int3
rcrb
leave
or
in
lock
cwtl
insl
push
xchg
aaa
lret
iret
jne
stc
xor
movsb
xchg
in
jno
fisubrs
jmp
repz
fbld
xor
adc
std
fisubrs
into
stos
mov
orl
lea
pop
loop
rolb
push
inc
popf
js
mov
cmp
mov
ret
lods
push
idiv
daa
flds
das
mov
add
lcall
sbbb
or
sbb
fbld
dec
cs
mov
js
cld
sbb
aas
mov
xor
minps
pushf
lock
repz
jp
mov
es
cltd
push
test
insb
nop
int
sub
lds
ret
mov
orb
inc
andb
loop
mov
jg
loopne
dec
pushw
mov
in
dec
jnp
inc
add
and
jo
sti
jbe
int
cmc
dec
enter
mov
xchg
repz
inc
sub
jle
movsl
ret
xchg
aad
sbb
dec
or
je
and
jno
cmp
dec
mov
outsb
mov
cmp
loopne
fdecstp
sub
decb
stos
sahf
mov
bound
add
or
mov
add
mov
push
sub
loopne
mov
loope
sub
lods
pusha
sub
sbbb
mov
cwtl
inc
or
jp
ss
inc
xor
inc
mov
loope
mov
and
leave
cs
jge
push
repnz
mov
jg
sbb
pop
in
adc
mov
cwtl
add
loop
stos
fnstcw
insb
mov
inc
cmp
rep
mov
jle
lock
in
push
mulb
mov
sbb
call
sub
pop
pushf
enter
jle
lods
stc
outsb
leave
in
sub
stos
shl
pop
addr16
out
test
pop
insb
add
add
dec
mov
sub
xchg
sub
cmp
xor
sbb
data16
subl
cmp
mov
in
jns
lock
das
pop
aad
ss
test
jb
push
cmpsb
ljmp
repz
jno
sbb
jno
pop
mov
ja
pushfw
xchg
and
inc
push
and
sahf
push
insb
test
and
ficompl
add
jnp
mov
sub
lds
adc
addr16
stc
cli
jno
mov
lds
lahf
icebp
and
cmp
xor
fisubrs
xchg
or
fwait
fs
fs
mov
and
xchg
sbb
mov
mov
and
cli
loop
imul
call
shll
add
mov
sahf
mov
mov
fildll
lea
inc
js
add
jae
out
pop
sahf
mov
pop
frstor
ljmp
push
add
inc
jo
rcr
ss
cwtl
mov
push
icebp
subb
lods
fisubl
push
push
cs
xchg
adc
lcall
or
adc
sub
pop
sbb
dec
lahf
mov
mov
pop
pop
incb
stc
je
mov
lret
cmpsb
ret
pop
inc
ret
xor
stos
fsubrs
mov
pushf
ficoml
xorl
aad
xor
arpl
test
jmp
fwait
jne
mov
jae
mov
lods
lock
cld
stos
add
in
jns
imul
and
dec
cmc
leave
adc
add
mov
or
xor
dec
mov
adc
shr
sub
iret
add
lahf
icebp
arpl
outsl
add
mov
mov
jle
sub
scas
enter
pop
cmp
jns
add
sub
cmpsl
into
das
lahf
jmp
lods
or
popf
arpl
cmp
pop
cmc
inc
push
in
xchg
cwtl
ss
je
jmp
jnp
adc
test
wbinvd
jmp
inc
insb
bound
inc
and
cmp
push
insl
cltd
int3
cmp
lret
inc
mov
pusha
mov
lret
push
popl
loope
xchg
loop
arpl
xchg
xor
mov
mov
mov
lods
add
inc
arpl
ret
jmp
mov
push
js
add
mov
fimull
imul
and
rcl
in
fwait
cmp
push
mov
jne
pop
out
pop
inc
push
stos
fildl
scas
push
jmp
jno
data16
out
sbb
push
jmp
movl
pop
sub
mov
pop
fdivrs
sub
imul
mov
not
sbb
adc
stc
in
insb
dec
movsl
mov
cmpsb
ret
adc
add
xor
les
lds
shll
cmp
pop
loop
jae
jnp
movsb
ds
push
jne
sbb
mov
push
mov
outsl
ret
xchg
mov
fidivl
xor
push
scas
lods
and
inc
sub
inc
xor
push
sub
loope
mov
adc
outsb
xor
bnd
inc
leave
add
notb
arpl
inc
decl
aam
addr16
xor
xchg
aaa
inc
add
mov
adc
and
dec
je
cwtl
sub
xchg
xlat
movl
call
mov
out
gs
dec
inc
out
shlb
mov
mov
xor
push
ja
push
loope
lahf
je
cli
add
mov
mov
js
mov
into
mov
fidivrl
rcrl
pop
js
mov
sub
sub
ja
outsb
pop
add
inc
data16
lods
lea
sub
inc
push
mov
ja
sub
adcl
sbb
fistpl
es
mov
jo
icebp
sbb
sarl
mov
push
stos
decl
fmull
les
rclb
rol
inc
insl
lahf
or
stos
xchg
lret
xor
xchg
jo
repz
push
mov
inc
cmp
jl
mov
gs
or
adc
and
addl
enter
negb
mov
insl
pop
subl
mov
fnstsw
mov
xor
popa
jae
add
xchg
dec
pushf
pop
xchg
mov
xor
pop
scas
jg
mov
mov
xor
mov
mov
out
lret
lock
mov
xor
jecxz
repnz
shll
add
jb
inc
jle
jns
cmp
cmpsl
mov
fst
jmp
stos
xchg
rcll
nop
jp,pn
in
cltd
adc
push
mov
mov
add
sub
mov
sti
mov
out
adc
scas
scas
out
in
cmp
fwait
jge
pop
inc
mov
aam
sti
lea
sub
inc
mov
popf
pop
scas
lods
inc
mov
push
fs
or
mov
enter
or
scas
dec
adc
adc
jne
addl
out
rcr
outsb
testb
add
inc
clc
mov
js
mov
ret
data16
adc
inc
loope
inc
mov
js
xchg
outsl
iret
adc
inc
inc
dec
xor
inc
cmp
inc
mov
jge
pop
je
push
or
or
mov
and
xlat
into
push
xor
mov
outsl
inc
push
lret
xchg
into
flds
ret
cwtl
mov
fnsave
push
loop
mov
and
add
mov
stc
adc
js
in
sbb
mov
jg
testb
les
dec
mov
fimull
add
mov
ret
in
out
jmp
testl
add
and
leave
and
inc
mov
mov
cmp
std
out
push
jecxz
adc
popf
xchg
push
je
mov
mov
mov
jge
subl
jecxz
ret
fcompl
sbb
mov
idiv
cmp
adc
jno
sub
movsl
loopne
xchg
cmpsb
pushl
cmp
mov
out
or
out
adc
xlat
add
int
popf
jae
jno
lods
bound
adc
enter
lods
sbb
and
jae
mov
xor
push
mov
push
mov
sub
ss
push
xchg
fldl
adc
in
into
rcrb
cmp
idivb
mov
icebp
mov
clc
cwtl
cmp
fmull
scas
mov
push
dec
mov
xchg
pop
xchg
add
cld
xchg
inc
rcl
xchg
pop
push
rol
inc
sbb
push
sub
rorb
fisubrl
mov
jb
sub
xchg
jg
clc
rcrb
rcrb
inc
aad
in
cmp
in
jns
and
fwait
int3
imul
stc
mov
inc
movsb
jb
mov
inc
ffree
cld
adc
jl
inc
push
and
xchg
loope
sbb
les
inc
cmp
cld
lods
add
jnp
rorb
std
pop
xchg
push
and
inc
xor
inc
push
xchg
pop
movsb
les
xchg
pop
cmp
adc
sbb
testl
pop
addr16
jns
jno
push
fcmovnu
fimull
pop
xor
icebp
xchg
mov
punpckhwd
jno
xor
popf
sbb
pop
clc
or
bound
sub
or
shll
sub
cmp
and
insl
out
jmp
test
out
lods
dec
cltd
test
iret
mov
pop
scas
ret
dec
setnp
imul
dec
adc
pop
inc
mov
call
xchg
arpl
loopne
sti
sub
sarb
inc
push
mov
adc
mov
mov
cmpb
jg
call
repnz
es
dec
setbe
pop
adc
loope
outsl
inc
iret
xchg
sarl
and
into
or
xchg
jp
dec
inc
test
jge
lret
lret
xchg
xlat
les
jge
sahf
das
mov
arpl
mov
lds
add
push
mov
das
xor
mov
inc
xchg
jmp
test
leave
ja
fdivl
mov
lods
loope
cmp
pop
dec
bound
outsb
dec
roll
mov
in
js
jo
lea
nop
push
fildl
sub
cmc
out
xchg
mov
pop
fs
mov
push
stos
adc
dec
sahf
dec
in
in
push
sub
in
roll
push
push
fistl
sbb
loop
jl
jp
sbb
andb
or
fidivs
lods
jbe
daa
and
sbb
arpl
and
rcll
xor
je
popa
xchg
pop
inc
fcompl
hlt
sbb
cld
pop
lds
ret
sahf
lahf
int3
cmc
out
pop
mov
jno
cmp
call
sub
ljmp
inc
mov
jge
sti
insl
loop
shlb
dec
sbb
stos
cmpl
jo
mov
push
push
out
dec
xchg
outsl
mov
and
mov
or
stos
mov
xchg
fsub
sub
mov
sub
pushf
mov
call
mov
mov
mov
imul
dec
bound
push
imul
lretw
lock
fsubl
lcall
or
rcr
mov
or
jl
inc
mov
and
mov
inc
fwait
jge
xor
and
jle
adc
adc
mov
or
add
cwtl
fidivs
sbb
outsl
mov
adc
sbb
sub
cmp
adc
jno
lds
pop
push
mov
xlat
add
cli
mov
xchg
inc
les
push
jns
xor
mov
or
cmp
clc
xlat
push
es
pop
je
xchg
jb
ficoml
int
push
cs
inc
sub
push
or
cmp
popf
or
jbe
or
or
shll
cli
pop
lods
out
add
out
cmpl
testl
popf
sbb
sbb
xchg
stos
mov
mov
jp
mov
dec
lret
mov
movsb
inc
popa
mov
mov
and
fisubs
adc
dec
or
cmc
lret
adc
rcll
push
sbb
mov
rolb
ret
cmpsb
cwtl
mov
xlat
push
mov
add
ret
inc
dec
adc
daa
pusha
mov
fsubr
lods
call
inc
mov
inc
es
mov
scas
ficomps
lahf
mov
xor
dec
dec
jo
dec
cltd
xor
out
adc
scas
fistpll
adc
movl
int
mov
mov
adc
xor
dec
push
call
iret
mull
negb
iret
push
lea
sahf
sbb
cwtl
and
mov
push
xor
loope
jo
loop
cli
add
sbb
sub
xor
sub
pop
sub
cvtps2pi
xchg
ret
mov
enter
sbb
inc
sbb
std
data16
mov
jp
mov
orl
xor
fstpl
cld
xor
aad
aad
data16
sahf
or
mov
adc
and
cwtl
and
xchg
ficoml
and
enter
into
lahf
cltd
es
push
imul
add
mov
xor
add
sub
xchg
jp
xlat
jg
mov
nop
mov
out
lahf
sahf
repnz
js
jnp
lods
cmp
xor
leave
cwtl
inc
pop
shll
neg
cmp
lds
testl
cmp
ss
and
inc
daa
mov
cld
pop
add
inc
pop
sti
test
and
lret
mov
jbe
mov
jg
add
mov
cmp
int3
cmp
jecxz
into
jecxz
dec
aad
add
add
ret
ss
test
jecxz
sti
fs
movsl
test
push
mov
xchg
into
popa
mov
sbb
jle
std
adc
cwtl
mov
jne
xor
popf
ds
addr16
push
movb
fimuls
insl
sbb
out
sub
test
ja
mov
inc
popf
mov
ja
mov
cmpb
jo
dec
pop
lahf
adc
jne
dec
pop
dec
jg
push
jge
out
imul
gs
sbb
dec
aad
fcompp
lock
sbb
cmp
fwait
mov
sbb
push
clc
jp
stc
mov
lret
aam
cmpsl
jo
pop
jg
fisttpll
ss
pusha
gs
loop
cmp
jge
rcll
sti
xor
icebp
dec
dec
fisubs
pop
cltd
jae
test
mov
dec
cmp
xchg
sub
je
sub
mov
adc
adc
pop
fbstp
sbb
fldenv
lods
mov
clc
push
inc
pop
lock
jp,pt
mov
cmp
sub
xchg
in
xchg
dec
mov
add
clc
xor
lret
or
xchg
sub
leave
and
je
ds
loop
and
pop
jp
sbb
fcomi
or
arpl
pop
inc
es
leave
inc
inc
xor
loope
jae
xchg
lahf
push
lea
xor
aas
pop
cld
stos
xor
sub
pusha
pop
and
sub
lret
mov
push
mov
sub
sbb
push
mov
adc
jge
pusha
enter
xchg
stos
out
stos
mov
mov
mov
push
jnp
and
stos
adc
andb
mov
insl
or
add
push
dec
jecxz
jmp
outsb
pop
xchg
add
pop
xchg
rcll
stc
bnd
add
in
popf
scas
jle
dec
add
xchg
test
sti
inc
in
xor
xchg
in
imul
cmp
stc
cmpb
mov
stos
rorl
adc
lret
mov
xor
xorl
add
and
and
pop
add
pop
jge
add
rcll
rcrb
mov
mov
mov
jmp
add
and
int
mov
dec
dec
jae
dec
adc
inc
mov
test
lods
lds
dec
scas
lods
loopne
jmp
out
mov
ss
vmwrite
popf
arpl
in
mov
push
and
push
shrb
sub
sbb
rol
add
mov
in
stos
stc
pop
das
xor
xchg
popf
pop
test
jnp
arpl
pop
popf
push
add
aad
mov
dec
push
lret
xchg
test
aaa
sub
push
stos
xor
jns
push
fists
mov
shll
push
push
ficompl
add
xchg
ja
jnp
push
fdivrl
data16
loopne
jnp
mov
push
aam
or
cmp
mov
cmp
into
mov
mull
repnz
mov
je
add
or
mov
xchg
pop
cmp
push
or
ja
sahf
int
jno
into
es
lret
in
inc
push
adc
add
sti
jle
addr16
mov
inc
mov
lods
icebp
daa
adc
ss
loopne
loopne
mov
cmp
mov
mov
lretw
ret
test
sbb
xchg
stos
out
xor
sbb
dec
inc
mov
arpl
dec
lds
ret
enter
fsts
jnp
xlat
mov
mov
outsl
dec
les
inc
pop
mov
jns
stc
out
pusha
inc
and
lods
or
sub
adc
out
and
int3
and
aad
mov
pop
out
mov
and
fisubl
pop
jno
xchg
stos
cli
dec
push
out
xchg
push
jo
int
mov
xchg
inc
in
sbb
subb
mov
test
inc
test
dec
cmpsl
cmp
sbb
imul
sbb
mov
imul
dec
push
jne
neg
lods
lret
mov
aaa
sub
dec
mov
push
daa
test
outsl
jecxz
ret
xor
cmp
sub
adc
or
shlb
mov
sti
lods
xor
pushf
pushf
or
push
and
mov
cli
mov
jno
inc
xor
or
aas
je
push
and
insl
cmp
notl
dec
push
es
jo
push
lcall
imul
xlat
pop
inc
pop
aas
fs
shl
adc
ja
ljmp
or
sub
jne
xchg
rolb
fwait
pop
push
pusha
lret
pushf
adc
inc
arpl
xchg
cli
xchg
lods
adc
dec
scas
sub
mov
popl
int3
loope
xchg
repnz
fwait
inc
adc
repz
sahf
sub
hlt
ret
cmp
fistpll
ja
fdivrs
sub
outsb
pop
mov
push
nop
popa
jae
dec
mov
mov
and
lods
mov
inc
mov
ds
rorl
jb
inc
les
cld
test
pop
xor
popf
in
adc
mov
mov
fldl
push
icebp
stos
shlb
mov
popf
mov
ret
bound
push
xor
or
xchg
mov
adc
pop
out
or
mov
and
sahf
push
les
pop
cmp
jae
mov
mov
inc
fsubrs
std
inc
lcall
ret
mov
lods
test
je
popa
pop
das
or
dec
xchg
dec
enter
jno
test
stc
ret
push
pop
add
inc
mov
push
adc
push
jbe
icebp
sub
push
sbb
in
clc
sub
sbb
jmp
ljmp
call
inc
jnp
jb
or
adc
in
testb
jmp
lock
js
aas
xchg
jns
out
mov
cld
jno
jno
cmp
xor
iret
inc
push
orb
das
sti
cmp
scas
xlat
es
pop
out
out
in
adc
and
adc
inc
mov
cmc
lahf
repz
lret
aas
pop
pop
jl
dec
push
aam
int3
push
mov
mov
fimull
inc
fs
push
pop
xchg
sbb
sahf
into
add
iret
pmaxub
cmp
daa
jbe
imul
gs
sarb
cwtl
dec
inc
fstps
push
mov
insl
arpl
mov
xor
shlb
bound
dec
adc
and
ds
outsb
lea
cltd
xchg
xor
mov
bound
lret
dec
aam
lea
add
cmpsb
jmp
push
mov
ffree
out
out
out
xor
xchg
andb
fiadds
repz
repnz
xor
aaa
mov
in
in
push
mov
rcrl
cltd
stos
inc
add
fldt
push
fwait
jb
or
ljmp
or
stos
xorb
xchg
sub
push
mov
jo
jge
add
sub
test
cmp
push
inc
cmpsb
enter
test
jp
and
sbb
push
pop
dec
mov
subw
jbe
xor
aaa
and
push
sub
outsb
dec
xchg
mov
jecxz
jecxz
popa
push
repnz
daa
xchg
sbb
push
cltd
mov
test
mov
mov
out
xchg
roll
mov
adc
sbb
push
ja
add
fbstp
shlb
xor
jl
and
cs
dec
and
fildll
sub
loope
xchg
inc
arpl
pop
dec
inc
leave
nop
sbb
fucomip
in
lods
test
cmp
popf
aam
pop
push
test
xchg
std
imul
sahf
push
jecxz
push
xlat
andl
sub
mov
lret
nop
inc
add
xchg
in
out
pop
push
xor
pushf
inc
jnp
ljmp
cmp
jp
movsl
gs
fstl
hlt
movsl
out
cli
dec
mov
pop
lcall
cmpsb
jno
cmc
iret
icebp
test
xchg
mov
shlb
adc
fidivs
mov
je
sti
mov
pop
das
and
jle
sbb
iret
jbe
std
pop
xchg
dec
stc
pop
je
imul
push
inc
mov
in
mov
lahf
nop
fists
sbb
or
arpl
jnp
clc
add
loop
xor
cmc
mov
int
jb
xor
outsl
cltd
loope
dec
push
mov
sahf
cmp
mov
add
or
aad
mov
cmp
movsl
repnz
xor
mov
cmp
push
pop
or
insb
xchg
jb
nop
jno
adc
xor
shrb
and
sti
sub
lds
adc
mov
push
pop
pop
fs
addr16
test
mov
adc
adc
jbe
leave
jae
popf
and
call
cmp
and
add
ficoms
scas
push
ss
shlb
pusha
xlat
fwait
dec
pop
mov
out
inc
test
fmuls
dec
sahf
je
jbe
push
iret
mov
add
loopne
iret
dec
cmp
cmp
je
jae
sbb
jle
imul
cli
loope
gs
jno
xor
xor
cmp
inc
out
push
xlat
ret
std
in
in
or
push
xchg
sub
and
dec
mov
decb
fstpt
stc
ret
sbb
xor
xor
subb
iret
fisttpl
adc
xchg
lret
inc
xchg
lock
mov
scas
pop
daa
push
aad
or
sbb
fisttps
cli
push
es
daa
push
test
in
or
mov
jne
in
out
cld
sti
in
jg
jo
xchg
pusha
mov
mov
aam
out
fnstcw
mov
adcb
into
sub
dec
xlat
dec
cmpb
gs
cltd
dec
mov
adc
mov
cmp
push
or
orb
popa
xchg
sub
inc
hlt
mov
sub
fs
out
jmp
mov
insl
out
loope
jbe
loope
popf
test
jo
cld
movsb
adc
sub
iret
pop
sbb
fucomp
into
cmpsl
and
outsb
mov
imul
rorb
call
dec
mov
or
push
xchg
cmc
lea
dec
daa
outsb
pop
lret
enter
out
jmp
xor
fmuls
add
sub
lahf
pop
je
jne
mov
aas
or
xor
test
mov
stc
add
roll
popa
test
mov
push
sub
repz
sbb
xchg
or
cmp
shrb
hlt
inc
arpl
sbb
je
mov
xor
or
ror
push
in
mov
inc
push
inc
jb
mov
cmp
adc
enter
imul
jnp
ds
xchg
jno
or
dec
ljmp
push
mov
push
imul
push
sahf
xlat
sub
xchg
cmpsb
push
lods
and
ret
repnz
mov
fs
cs
in
pop
push
cmpsb
scas
dec
icebp
popf
adc
lahf
xchg
cli
jb
dec
shl
scas
xchg
test
push
pop
cld
xchg
dec
xchg
cwtl
adc
add
add
dec
lds
dec
jne
cmp
dec
add
adc
add
test
mov
orl
dec
cld
add
xor
xchg
or
sti
and
add
pop
mov
aas
inc
dec
pop
xchg
mov
enter
fcomp
pusha
int3
iret
imul
push
gs
mov
mov
mov
jge
inc
fsubs
add
push
outsb
cmp
std
int3
xchg
push
outsl
sub
adc
ljmp
push
inc
cmpsl
jmp
and
push
call
iret
inc
jae
shlb
es
in
dec
jg
fwait
je
rcr
lods
add
push
ret
xchg
pop
or
std
lods
sbb
pop
xor
jp
jecxz
scas
jo
test
mov
dec
dec
jg
pop
outsb
pop
rcr
cmpl
out
cs
and
leave
mov
dec
and
mov
adc
arpl
dec
mov
loope
cld
out
dec
arpl
push
es
inc
add
dec
lods
sub
jo
fsincos
sub
xchg
nop
push
mov
cmpsb
pop
outsb
mov
cmpsl
adc
scas
mov
xchg
mov
inc
aad
rcrl
fcmovbe
in
cli
xor
sbb
cmp
pusha
push
leave
test
jecxz
jmp
shlb
aas
test
add
or
push
push
add
and
inc
mov
mov
sbb
das
sbb
nop
icebp
fstpt
sub
push
iret
scas
sub
mov
push
cmp
dec
les
stc
xchg
int3
lds
push
sbb
pusha
aad
cltd
jnp
push
inc
sub
adc
mov
jg
push
mov
mov
lock
lret
jno
xorl
mov
jo
xchg
stc
les
jae
pop
push
out
pop
stos
pop
sub
adc
push
stos
pop
jo
pop
out
push
js
jo
jne
gs
pop
push
imul
pop
repnz
popa
xchg
stos
shl
mov
mov
into
xor
outsl
not
mov
and
push
jge
or
xor
mov
movsb
ljmp
ss
std
jle
gs
lret
daa
xchg
sti
inc
or
mov
mov
insl
test
xchg
or
loop
ljmp
and
sub
pop
jo
test
int
jae
insl
push
pusha
repnz
mov
bts
sub
push
and
inc
pop
repnz
sbb
cmc
dec
mov
push
xchg
pusha
add
popf
or
mov
cs
pusha
dec
inc
cmp
xchg
sub
js
lahf
jne
mov
xchg
and
sbb
cmp
call
push
mov
xchg
loop
cmc
fidivrl
fidivrl
loope
adc
mov
mov
bound
jae
cmpsl
jns
jne
ret
cli
iret
clc
icebp
dec
jle
jns
pop
or
out
call
dec
cmc
mov
adc
dec
ja
mov
outsl
jns
add
pop
in
jae
cltd
lret
cli
mov
hlt
js
and
sbb
stos
rcrl
rolb
adc
xorb
rcl
insb
cltd
sub
sub
ss
cwtl
fwait
add
pop
push
jbe
int
cli
push
stc
pop
mov
in
mov
rcr
push
insb
repz
mov
mov
pop
add
or
jecxz
addr16
add
xor
int3
lods
lods
adc
xchg
xlat
mov
mov
adc
dec
mov
push
nop
lds
loopne
pop
rorb
dec
or
pop
mov
imul
loope
mov
in
and
gs
jmp
dec
loope
lods
xchg
sbb
data16
inc
int
scas
fistps
ljmp
pop
jb
cli
in
add
fbstp
jmp
test
pop
sub
inc
imul
shr
lds
push
mov
aam
pop
mov
dec
xor
sarb
loope
push
outsl
out
mov
rcrl
ss
js
aam
mov
pushf
cmp
mov
dec
push
sub
fsts
xor
int3
test
das
movsb
popf
ljmp
mov
cli
hlt
lcall
pop
mov
jmp
ror
jmp
fstpt
cmpsb
mov
cmp
push
mov
mov
cmp
mov
inc
sub
popa
sub
add
inc
mov
aaa
cmpsl
imul
xor
and
inc
push
mov
hlt
gs
jl
bnd
test
test
fwait
dec
iret
cltd
pop
insl
or
les
and
loope
add
movsl
and
es
fdivrp
mov
and
pop
xor
movsb
ljmp
mov
mov
bound
rol
rcrl
gs
xorb
inc
sahf
shlb
fistpll
sahf
outsl
mov
loopne
cmc
cs
pop
pop
and
or
mov
aad
mov
fwait
mov
and
or
jg
test
push
pop
cmpsl
mov
loope
cmc
mov
scas
movsb
xor
hlt
xchg
cld
push
movsl
mov
popa
pusha
push
fidivl
andl
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
sub
jl
pop
jl
mov
or
cltd
stos
jno
cmpsl
mov
pop
inc
popaw
sub
out
jmp
fcomp
or
ret
sub
fmulp
leave
mov
push
mov
iret
dec
cmp
cli
int3
push
mov
fwait
mov
outsl
leave
lcall
or
jecxz
int3
scas
subb
shl
push
sbb
pop
nop
test
nop
sahf
jecxz
push
lcall
data16
mov
jne
loopne
jae
xor
ss
push
xor
hlt
outsl
shlb
xor
and
int
mov
inc
jp
aas
push
pushf
jmp
aas
add
and
inc
stos
pop
es
mov
fs
call
and
imul
shr
add
fsubl
pop
jo
in
push
repnz
js
hlt
cmpsb
mov
or
inc
insl
cld
nop
pop
repz
sub
int
dec
sbb
dec
repnz
cmpsl
adc
jns
push
push
outsb
pop
dec
test
in
sbbb
in
mov
sub
incl
pop
sarb
jecxz
lods
fwait
mov
mov
push
ja
mov
pop
sub
fldl2e
xor
adc
inc
add
mov
sbb
push
data16
cmp
inc
stos
out
xor
rcr
mul
pop
lods
out
mov
jl
iret
xor
and
fsts
test
insb
test
int3
orb
je
jb
iret
je
test
xchg
pop
mov
cmp
mov
mov
cli
ret
dec
mov
shrb
cltd
inc
mov
sahf
push
jl
xchg
xor
jp
push
icebp
lahf
dec
pop
xchg
repnz
jb
add
adc
mov
out
int3
outsb
push
je
xchg
sti
mov
outsl
cs
lret
pop
push
cli
adc
dec
stc
sub
inc
inc
ret
push
sbb
scas
push
in
xchg
xchg
cmpsb
ret
lret
popa
in
rclb
into
mov
mov
fbstp
loopne
mov
dec
or
mov
jmp
sub
stc
fisubrl
fisubrl
fiaddl
push
xchg
cs
fcompl
mov
sbb
jb
adc
arpl
int
mov
or
scas
pop
rolb
addr16
pusha
xor
mov
addb
sti
lret
pop
or
ret
add
inc
pop
es
adc
lock
adc
nop
adc
push
out
inc
dec
test
lret
xchg
stos
les
bound
add
push
mov
sarl
xorl
pop
js
cltd
pop
sub
push
imul
mov
in
cwtl
sbb
jnp
aad
cwtl
mov
or
dec
imul
and
insl
sub
mov
ret
aad
cmp
sbb
mov
insl
and
or
and
push
mov
mov
ret
iret
repnz
das
ljmp
jne
pop
adc
fldl
inc
inc
repz
add
pop
js
in
sbb
pop
hlt
dec
rcrl
push
stc
call
or
mov
shlb
jg
dec
adc
jns
sbb
mov
lcall
aas
xor
or
or
inc
out
and
dec
and
add
inc
push
lret
add
sbb
add
cmp
shrb
mov
mov
jnp
pop
or
push
aam
out
movsl
add
fcoms
mov
ret
pushf
insl
out
inc
xchg
cmpsb
push
lcall
xorl
lahf
repnz
dec
push
into
loope
in
fs
mov
pop
dec
mov
jmp
mov
fisttps
and
sub
xchg
sub
xchg
xor
gs
lods
xchg
outsl
ds
or
ss
mov
in
mov
shll
int
lahf
out
jbe
adc
lret
mov
fstpt
or
shll
call
mov
in
repnz
rclb
jno
cmp
cmp
stc
pop
in
repz
inc
cmp
pop
cmp
loope
mov
adc
inc
inc
push
add
lcall
fnsetpm(287
mov
call
dec
movsl
nop
je
pop
sub
cmp
fisttpll
push
pop
pusha
mov
faddp
and
dec
popf
jmp
test
push
adc
data16
int3
dec
fldcw
loopne
in
bound
in
push
out
aam
jecxz
daa
movsl
and
shlb
lcall
inc
fs
testl
arpl
outsb
shlb
sub
arpl
xor
or
push
xor
xchg
scas
in
jne
int3
popf
jmp
mov
inc
das
push
xchg
adc
inc
sbbl
jns
subl
loop
aaa
cltd
sbb
add
inc
add
pop
fwait
inc
pushf
sbb
dec
xchg
xor
sub
pop
or
mov
sti
pop
mov
jno
lods
je
mov
jmp
jne
jno
dec
jp
loope
lods
sbb
rcll
xchg
addr16
scas
out
movlps
sub
lret
jecxz
push
jg
pushf
or
mov
inc
dec
mov
push
ret
xchg
aam
jle
js
or
loope
sbb
mov
cmp
xchg
arpl
sbb
ret
jp
adc
test
push
adc
int
or
addb
add
jl
xor
pop
icebp
cmc
cli
adc
mov
rorl
xchg
mov
pop
mov
test
loope
rorl
cs
daa
pop
aam
pop
and
shl
cwtl
xor
pushf
mov
insb
in
out
sub
dec
inc
jnp
sub
pop
adc
jae
outsl
daa
jb
out
cmp
mov
rcrb
call
jp
and
mov
and
pop
add
js
out
inc
cli
clc
mov
aad
lahf
or
ss
xor
xchg
pop
sub
inc
sbb
mov
leave
or
lods
add
and
jg
inc
mov
jecxz
popf
pop
sbb
sub
fcom
or
cld
or
mov
sti
shrl
inc
ja
dec
in
flds
rclb
mov
das
out
jns
mov
xchg
test
mov
or
stos
cs
jp
or
scas
out
sbb
stc
push
xchg
sub
xchg
xchg
inc
movsl
sub
hlt
dec
pop
lcall
cmp
dec
mov
jno
sbb
xchg
aas
orb
add
mov
test
sub
pusha
cs
icebp
dec
ret
cmp
std
or
sbb
inc
repz
xor
add
sbb
mulb
xchg
jp
jo
les
hlt
xor
fwait
xor
xchg
jne
cmpsl
cld
or
pop
or
adc
push
xor
xor
push
sub
inc
in
test
mov
push
push
dec
inc
sub
jnp
frstor
into
pop
xor
inc
test
fistps
arpl
rorl
jmp
push
sti
sbb
fsubrs
mov
pop
sbb
das
icebp
mov
andl
xchg
cltd
lret
sub
lret
js
js
lcall
call
mov
sar
loopne
pop
popf
sbbl
adc
adc
jb
repz
jp
cmc
mov
fldt
or
ss
pop
mov
add
sub
mov
dec
das
addr16
mull
js
ret
and
jns
adc
push
jns
stos
jne
repnz
push
insl
mov
inc
cmp
out
mov
dec
add
ljmp
imul
xor
es
sti
pop
ds
or
lods
mov
insl
shrb
nop
xchg
mov
pop
sarl
jmp
shr
test
cmp
or
add
sub
imul
jle
int
push
pop
in
mov
lahf
mov
jo
jecxz
lods
inc
push
test
dec
lret
std
out
push
or
or
push
push
push
mov
adc
add
xchg
mov
inc
rorb
sub
jnp
notl
jns
out
mov
loope
mov
inc
xchg
mov
xchg
outsl
shll
lock
mov
rcl
subl
mov
mov
or
xor
dec
adc
dec
dec
scas
pop
mov
sbb
pop
les
mov
daa
icebp
cmp
inc
loope
pop
rcrb
ja
jmp
cltd
jmp
adc
loopne
into
push
stc
clc
add
sbb
pop
jo
addr16
add
xor
test
push
adc
xchg
adc
lret
or
lods
inc
ja
xor
xor
sub
cmp
repz
mov
bound
fidivrs
fnstsw
ljmp
aam
out
mov
pop
imul
push
dec
inc
sub
loop
mov
out
movsb
inc
pop
inc
das
imul
frstor
sbb
inc
mov
push
sbb
sub
sub
cmc
outsl
mov
adcb
pop
repnz
dec
or
neg
cmp
pop
xchg
inc
push
adc
and
mull
paddusb
push
inc
jg
ret
mov
mov
adc
sbb
scas
enter
push
mov
and
add
test
sbb
rcr
or
xor
xchg
xor
fimull
jp
mov
pushf
imul
jge
mov
dec
iret
add
pandn
mov
jmp
test
adc
cltd
xchg
mov
xchg
stos
sbb
fildll
push
xchg
loope
lret
shl
push
add
in
stos
sub
fdivl
lea
repz
rcll
lods
ljmp
adcl
int
fs
mov
sub
cmp
and
imul
sub
aas
jmp
int
dec
aad
mov
sbb
loopne
fsubrl
imull
fdiv
mov
mov
mov
dec
sub
js
or
pop
xchg
pop
sbb
or
pusha
insb
rol
push
inc
and
xor
xchg
imul
xor
sub
jmp
outsb
int
cmp
ds
repz
lods
data16
shrb
addb
movb
outsb
mov
adc
mov
sub
or
mov
push
mov
xchg
or
lret
into
dec
jno
test
out
sbb
or
add
mov
xorl
aas
arpl
mov
mov
add
shlb
fstps
mov
sbb
mov
pop
mov
scas
mov
jne
cwtl
adc
into
iret
cmp
cmp
mov
push
push
hlt
and
sbb
and
and
dec
xor
and
jb
call
out
pop
test
daa
add
shrl
movsb
and
inc
xchg
mov
fiaddl
lret
jne
pop
ret
out
cli
aad
jno
pop
leave
xchg
in
xor
lret
movsl
mov
pop
imul
or
out
decl
test
jne
mov
or
js
xorl
mov
lods
mov
adc
in
sahf
gs
pop
cmpsl
xchg
add
mov
lods
sarl
mov
mov
and
mov
in
bound
sub
cmp
enter
cmp
push
mov
js
lcall
xor
cmp
push
jbe
xchg
ffree
movsb
push
push
aas
in
enter
in
enter
fwait
out
ds
and
iret
call
jge
cmp
lcall
xor
divb
ljmp
sbb
add
mov
test
mov
fwait
mov
sub
push
test
or
mov
es
adc
inc
out
rorb
or
xlat
bound
or
in
icebp
xchg
movsl
mov
or
sti
out
cwtl
shl
test
jae
fldz
push
sbb
pcmpeqb
mov
daa
add
enter
es
push
fdivl
sub
dec
push
lock
ret
jmp
loopne
dec
jns
jecxz
ret
sbb
xor
fistpl
pop
adc
and
adc
and
in
inc
fdivr
into
sbb
mov
test
pop
xor
pop
sub
rorb
cs
add
push
jno
xchg
mov
jo
rep
inc
aaa
mov
je
iret
push
mov
out
out
inc
cmc
bound
cltd
and
mov
mov
ljmp
ret
push
lret
add
das
pushf
sub
and
sub
std
jno
aam
in
shll
mov
inc
jns
jno
aaa
ret
adc
imul
sbb
jmp
cmpsb
pushf
pop
outsl
mov
xor
cmp
sub
sahf
xor
jo
pop
lret
popa
insb
addr16
and
sbb
out
mov
mov
jmp
test
xlat
popf
jp
aam
push
cwtl
pop
rcl
cmpsl
cmp
sbb
mov
out
enter
sbb
dec
and
mov
add
push
mov
pushf
add
jg
je
stc
xchg
test
scas
push
loopne
xchg
add
mov
scas
call
fidivs
in
jmp
jns
lret
add
fidivrs
js
mov
or
rolb
imul
pop
outsl
mov
pop
adc
sub
lds
xor
inc
scas
xchg
addb
sarb
fs
add
jecxz
dec
lods
jo
cmp
xor
mov
lods
adc
jo
shrb
mov
xor
ds
cmp
dec
mov
orb
ficoml
fdivp
outsl
cmp
insl
ja
neg
scas
mov
jne
loopne
and
fnstsw
dec
pushf
jno
or
push
adcl
xor
pop
jg
rolb
add
jo
xchg
pushf
xor
call
or
ds
pusha
pushf
loope
inc
mov
inc
mov
jge
repz
mov
divl
popf
fs
aam
imul
or
andl
push
aaa
push
inc
sarb
xor
int
xor
pop
ja
pop
mov
jbe
xchg
xor
loope
in
imul
fcmovne
bound
xchg
scas
nop
scas
fs
inc
cltd
mov
dec
lods
leave
insl
add
pop
xchg
test
add
int
push
dec
mov
cmp
out
jge
xchg
jge
pop
dec
clc
fwait
aas
ss
xchg
loop
aam
aas
mov
push
inc
mov
inc
mov
icebp
hlt
in
lock
popa
inc
cltd
popa
xor
cwtl
push
inc
cmp
mov
aaa
mov
push
mov
fucomip
jge
dec
lcall
xchg
mov
mov
add
push
sbb
in
and
jmp
xor
push
jb
cwtl
lea
add
daa
and
adc
in
push
push
sar
inc
es
shl
loope
inc
xor
cwtl
test
sub
push
push
jmp
mov
or
cmp
pop
imul
out
mov
xlat
inc
imul
cltd
dec
les
in
ja
or
jo
int3
inc
or
out
sahf
mov
dec
or
adc
push
hlt
jne
mov
jnp
pop
pop
mov
inc
out
bound
test
mov
adc
inc
popa
xchg
outsl
sti
dec
out
dec
rorb
cltd
cld
sbb
inc
jae
pop
stc
sbb
cmc
imul
and
gs
jge
mov
rolb
xchg
loope
fidivl
and
mov
push
data16
push
xchg
icebp
cld
add
loope
inc
mov
loope
enter
idiv
mov
mov
push
inc
inc
stc
xchg
inc
test
adc
fidivs
movb
imul
sbb
push
fnstcw
mov
sub
xchg
mov
sbb
fstps
xor
in
leave
pop
push
cld
lods
fs
sub
cld
sbbb
out
adc
pop
out
mov
xchg
lret
clc
negl
arpl
dec
push
rclb
fs
xor
js,pt
ds
or
pop
loope
mov
test
or
out
jle
addl
mov
and
rorb
in
jge
mov
enter
inc
add
push
lods
jge
stc
js
mov
push
insb
aam
push
dec
lock
sahf
and
jo
clc
out
mov
out
popf
enter
data16
out
imul
mov
push
inc
aaa
nop
inc
bnd
xorb
js
mov
les
fs
xor
popl
mov
cmp
dec
inc
insb
insl
adc
dec
cmp
or
movsb
adc
adc
add
mov
xor
sbb
testb
pop
add
xchg
and
mov
imul
xchg
pop
mov
jae
adc
mov
dec
cmpsb
mov
or
mov
leave
mov
push
addb
popf
out
mov
push
adc
mov
int
xor
dec
xlat
clc
pop
jmp
sbb
mov
out
test
xchg
xchg
lods
mov
sbb
aas
mov
jmp
js
scas
fimull
mov
add
jg
in
call
sbb
rorl
iret
in
mov
xor
cli
fsubs
cld
pushf
pop
loopne
das
pop
xor
and
jo
sub
lcall
fldt
pop
mov
imul
mov
mov
lock
xchg
je
stos
cmp
hlt
mov
jns
sub
sbb
fs
imul
out
enter
xchg
lret
jb
cmpsl
xor
pop
cwtl
cmpsb
call
push
and
add
fwait
adc
mov
mov
cmp
arpl
fisubrs
fidivrs
popa
enter
outsb
popa
lods
xlat
xor
cmc
fs
les
lods
pop
fisttpll
jo
in
push
push
test
fsts
rcrl
test
mov
push
lock
add
ret
pop
fcmovnb
mov
nop
sbb
push
fcompl
sbb
pushf
jmp
push
jb
xor
and
jecxz
mov
push
sbb
jnp
adc
mov
outsb
lock
sbb
imul
movsb
add
and
mov
in
lret
loopne
mov
or
sahf
pop
mov
cmp
cmpsl
pop
cmp
pushf
sbb
rcl
lods
into
push
jmp
mov
scas
xor
dec
divl
js
fistps
adc
xchg
dec
call
xor
shl
and
mov
lock
cmp
fcmovne
sbb
shr
mov
in
lds
mov
mov
xor
lock
add
mov
add
inc
and
xadd
jle
jl
popf
jge
and
jmp
mov
inc
xlat
sub
ficompl
sbb
xchg
pop
call
imul
addr16
subb
in
xchg
cld
pop
cmp
ret
pop
mov
jbe
add
mov
push
fildl
ljmp
insl
sub
addb
inc
das
xor
dec
add
xchg
insl
inc
mov
shrl
aad
jmp
jge
addl
cmp
jmp
mov
imul
movsl
cmp
enter
mov
xchg
xchg
lret
addl
or
sbb
inc
enter
cltd
mov
mov
movsl
lods
fnstsw
aam
mov
hlt
push
jb
xor
xchg
jmp
mov
repz
cli
jge
push
out
inc
mov
jno
xchg
add
bswap
test
pop
nop
xchg
pushl
fadd
adc
icebp
mov
or
gs
add
inc
int
mov
xor
pop
dec
pop
pusha
test
jmp
imul
mov
shrl
cmp
jge
mov
dec
or
repz
das
and
mov
jne
loopne
ja
push
jecxz
les
dec
push
xor
xchg
jge
movl
xor
in
rclb
or
cmp
cmp
add
mov
mov
mov
jnp
jnp
xorb
or
mov
mov
and
push
add
xchg
push
dec
push
jge
dec
test
js
push
pop
mov
mov
mov
cmp
and
pop
xchg
add
in
mov
dec
cmpl
push
lcall
cmp
pop
and
movsb
fimuls
aad
icebp
sub
dec
mov
daa
dec
fildll
sbb
je
ret
clc
xchg
push
cwtl
xchg
das
cld
pop
sarl
call
xor
adc
js
mov
fwait
test
mov
cmc
or
sbb
cmp
scas
cmc
dec
loopne
mov
clc
or
or
push
test
jae
sbb
adc
jmp
add
adc
aas
je
dec
popa
lahf
mov
stc
insl
cmp
in
mov
and
inc
add
add
arpl
ljmp
jmp
pop
sub
push
mov
mov
mov
xchg
idivl
inc
add
jbe
mov
inc
fwait
pop
lahf
cmpb
pop
arpl
xorl
enter
mov
rcr
xor
lods
and
fiaddl
pop
pop
sub
push
pop
xchg
push
mov
push
dec
cltd
push
inc
lods
loope
sub
xchg
stos
inc
xlat
pop
push
push
jae
scas
push
clc
movsl
movsb
stos
and
xchg
fstpt
jp
bound
mov
pop
push
xlat
add
sbb
inc
scas
adc
call
sbb
jp
pop
mov
loopne
sub
cmp
int3
mov
jo
pop
in
ds
in
fiadds
mul
push
jg
or
out
out
clc
lret
xchg
xor
mov
dec
into
inc
mov
xor
pop
sub
inc
shrb
scas
jle
dec
mov
and
mov
outsb
loope
mov
xchg
mov
add
rolb
cmp
cli
fstpl
xlat
inc
inc
mov
in
add
ja
mov
mov
je
ss
testl
loope
imul
xchg
hlt
pop
sahf
lea
pop
inc
inc
push
jmp
inc
les
pop
and
fcomps
and
idivb
xchg
or
pop
frstor
adc
int
push
cmp
push
add
stos
jle
cmp
nop
shrb
pop
scas
cmp
mov
out
movsl
dec
scas
xchg
jl
dec
sahf
fcoms
test
loopne
lcall
inc
fsubp
push
stos
rcr
or
add
shll
rclb
sub
push
testb
and
push
lods
out
jno
mov
push
stos
mov
xlat
in
arpl
lahf
xor
out
adc
push
roll
rolb
sbb
lods
xor
jo
filds
adc
or
mov
and
addr16
pop
sub
imul
ljmp
in
js
push
mov
inc
aam
push
loope
xorb
xchg
jbe
data16
lds
movsb
lret
jo
or
lods
mov
aaa
pop
jl
aas
pop
fbld
xlat
js
xor
pushf
pop
adc
sti
inc
testl
popa
jmp
inc
jnp
mov
inc
loope
not
leave
popf
and
jmp
pop
add
xorb
test
mov
in
insb
inc
jle
ja
add
insl
lods
xor
inc
jo
insl
ror
cwtl
pop
daa
les
push
out
push
hlt
dec
mov
aaa
test
stc
push
xchg
outsb
mov
push
ret
lods
cmp
data16
xor
clc
data16
inc
cwtl
or
das
clc
shrl
xor
push
pop
pop
aas
popa
cltd
mov
jecxz
sbb
repz
lcall
dec
jae
test
mov
cmpsb
mov
inc
cmp
jge
dec
or
les
cmpsb
lcall
sbbb
lret
xchg
rcl
shrl
sbb
mov
mov
sbb
js
cmpsb
push
ds
loop
sub
pusha
in
jb
fildl
dec
adcl
adc
loope
test
sbb
push
jo
mov
pusha
rcl
pop
and
negb
cmc
sarb
fs
sub
es
movsb
std
movhps
push
jno
clc
or
into
shll
stc
js
stos
cmp
ret
test
shl
push
dec
jns
iret
ja
sti
and
callw
inc
cmp
cmpsb
bound
adc
sub
int
addr16
or
lahf
clc
mov
clc
icebp
jecxz
outsl
cmp
hlt
out
orl
jno
xor
popf
cmp
out
test
aad
mov
sahf
enter
insb
mov
popa
inc
push
fimuls
stos
into
push
cmp
push
adc
add
dec
push
jmp
push
in
xchg
or
data16
sub
ficoml
jns
enter
out
xchg
and
pop
push
repz
pop
jecxz
jnp
stos
mov
mov
cmpsl
arpl
or
iret
mov
repz
rorb
mov
sbb
xor
lock
sbb
inc
into
mov
push
out
imul
rcr
pushf
mov
addb
xor
ljmp
mov
in
mov
inc
scas
adc
test
pop
jb
and
xchg
out
std
out
add
out
xor
lds
adc
sub
fdivp
js
sub
out
imul
movsl
in
jns
cmp
shl
mov
pop
push
cs
cmp
mov
mov
xchg
stos
sub
inc
jns
pop
lds
push
mov
jmp
fisttpl
mov
inc
push
stos
scas
mov
xchg
rcr
out
add
cmp
xchg
aaa
push
sbb
aad
rolb
mov
popa
jae
jae
lods
popf
testb
enter
lret
aaa
jno
and
sbb
stc
xchg
idivb
les
sbb
sbb
add
adc
movsl
dec
mov
inc
insb
sub
sbb
sbb
pusha
inc
insl
test
jmp
lret
jecxz
js
scas
shlb
arpl
or
fidivl
jmp
cmc
xchg
push
jno
lcall
mov
loope
sub
push
iret
sub
stc
shrb
aad
xchg
stos
add
ffreep
rcrl
jecxz
stc
cli
cld
push
adc
mov
shlb
push
xchg
sbb
xchg
mov
cwtl
lcall
dec
data16
popfw
fnstsw
jbe
pushf
shrl
stos
nop
sti
imul
lock
das
sub
mov
lods
sub
pop
outsb
mov
xor
adc
movl
xchg
lds
inc
loope
sub
in
mov
inc
leave
js
mov
hlt
jb
shlb
or
sub
xchg
lods
jecxz
cmp
mov
dec
mov
movsl
xchg
sqrtps
push
sbb
and
cmpsb
cltd
push
cwtl
pop
loop
push
xchg
js
rorl
imul
add
xor
xor
dec
addr16
xlat
xor
mov
adc
pop
lods
mov
mov
in
mov
mov
mov
sbb
mov
sbb
jmp
ss
mov
lret
sbb
scas
rcrb
mov
iret
inc
daa
dec
ret
mov
xor
popa
mov
or
push
adc
mov
xchg
xchg
add
sub
cmpsl
xchg
xor
adc
or
or
rcr
jmp
lea
insl
lods
lahf
xchg
jp
mov
jecxz
daa
xchg
stc
fdivrp
fnsave
js
mov
fneni(8087
cmp
rolb
jmp
push
ret
aad
or
lods
testb
xor
jnp
std
fidivs
lahf
xor
mov
push
inc
adc
das
mov
dec
xor
jle
ss
mov
dec
add
cld
mov
pop
inc
mov
cmp
aas
sub
lods
std
dec
add
cmc
add
push
push
aad
test
mov
pop
mov
dec
xor
xor
sti
je
cltd
mov
jmp
jg
rorb
pop
jbe
mov
imul
jns
mov
adc
and
pushf
pop
ss
sbb
daa
scas
inc
jl
xor
xchg
mov
incl
or
ss
shrl
iret
push
cli
roll
dec
data16
mov
fstl
xchg
sub
cs
lret
dec
jo
mov
test
cmp
ficompl
jge
fs
addb
hlt
xchg
imul
jl
xchg
cmpsl
push
xchg
das
cmc
aam
in
fwait
mov
addb
push
jge
and
add
scas
xchg
and
adc
mov
add
add
cmp
mov
movsb
and
jno
pushf
mov
es
mull
inc
bound
aaa
sbb
out
dec
and
xchg
testl
xchg
and
adc
cmp
js
mov
filds
mov
hlt
mov
sub
test
test
dec
push
sbb
mov
fildll
add
cli
addl
cli
add
dec
faddl
outsb
or
das
dec
or
cmp
jno
hlt
stos
mov
in
adc
jae,pn
adc
xlat
sti
loope
jo
sub
cmp
inc
insl
xchg
imul
add
lret
pop
mov
and
pop
incb
sub
xor
das
jns
scas
mov
and
push
mov
iret
test
in
arpl
jle
jle
sub
sti
aaa
mov
inc
xchg
fwait
sti
add
xor
loop
and
pop
pop
sbb
fdivr
bound
push
push
xchg
inc
inc
pushf
push
sbb
incl
in
and
rorl
push
das
push
loop
xchg
aaa
add
clc
je
shll
mov
or
or
cli
inc
cmp
ds
ficoms
insl
mov
sub
cli
inc
popa
test
adc
out
mov
nop
mov
out
ds
adc
cmpsl
in
inc
aaa
pop
mov
pop
aaa
test
popf
add
mov
inc
push
xchg
int3
sub
sarb
mov
push
or
mov
out
mov
pop
sub
jmp
push
mov
jmp
and
das
cld
mov
sbb
and
add
notl
xorl
subb
xor
in
push
dec
fcmovnu
pop
jge
shll
pop
xchg
and
inc
pop
push
es
mov
arpl
pop
inc
stos
sub
jb
and
ljmp
push
hlt
push
pop
push
cmp
mov
fidivs
mov
cmpsb
xchg
pusha
in
mov
inc
gs
jp
cmp
outsb
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
out
or
inc
popa
lds
add
mov
std
fisubrl
or
je
test
inc
lock
jno
in
push
jo
or
push
push
and
test
and
mov
dec
nop
sbb
scas
loop
sbb
ss
cltd
and
fildll
outsb
fwait
jge
faddp
aaa
inc
cs
mov
xor
imul
jmp
cmp
shl
pop
xchg
add
inc
dec
push
add
fisubl
shrl
filds
push
je
sbb
mov
ljmp
test
jg
mull
sbb
addr16
das
jmp
sub
in
je
inc
movsb
mov
sub
jbe
mov
out
cmpsl
mull
in
scas
mov
mov
shll
mov
hlt
push
push
dec
xchg
repz
je
xchg
inc
xchg
inc
xchg
cli
cs
sbb
in
xchg
and
subl
cmc
pusha
sbb
das
push
repz
das
insl
lret
add
mov
dec
xchg
add
addr16
and
add
mov
lret
mov
cmp
xchg
out
cmpsb
inc
test
inc
repnz
sbb
test
xor
scas
or
pop
cmpsl
shll
in
cmc
rorl
and
les
popf
adc
hlt
cmpsl
repnz
push
xor
and
xor
dec
dec
jmp
xchg
mov
jo
mov
and
bound
lock
shlb
cmpsb
adc
pop
pop
aas
jge
test
lret
sbb
cmp
and
stc
test
inc
mov
mov
pop
sub
mov
cmp
roll
push
aas
adc
out
mov
aad
jl
xchg
dec
data16
push
lret
into
sbb
mov
pop
mov
repz
push
jbe
add
pop
imul
rorl
mov
shlb
fs
sub
push
cmpl
outsl
scas
leave
or
adc
ljmp
subl
or
cmp
sbb
mov
push
ret
dec
dec
ljmp
push
rorl
icebp
cmp
call
rcr
push
mov
inc
pop
mov
push
ret
and
enter
dec
fdivs
cmpsl
fs
aas
iret
jmp
pushf
scas
cli
pop
and
leave
xchg
cs
call
mov
test
daa
mov
inc
pushf
or
push
xchg
and
out
popf
sub
imul
push
movsb
testb
fdivs
jg
in
jno
xchg
cmc
andl
cmp
imul
outsb
mov
fisttpl
in
push
jg
shrl
pop
or
mov
push
inc
and
xlat
bound
loope
jae
sbb
push
movb
xor
push
ljmp
cs
pop
xchg
mov
pop
dec
test
mov
xchg
sbb
xchg
mov
stos
xchg
stos
mov
das
imul
mov
outsl
mov
clc
push
addr16
in
mov
sub
jmp
mov
popf
in
cmp
clc
mov
ja
sbb
aaa
stc
cmp
inc
jmp
pop
pop
dec
push
push
mov
mov
mov
mov
mov
push
xor
out
xchg
mov
push
xor
mov
pop
and
out
inc
adcl
lods
out
sbb
jne
out
pop
jae
cs
xor
mov
push
xchg
lahf
pop
idivl
sbb
outsl
jbe
stos
int3
cs
sbb
mov
jno
mov
out
pop
sbb
lcall
push
ss
sbb
mov
sahf
subb
push
push
lahf
cmc
mov
mov
and
cmp
or
mov
and
inc
push
es
sub
adc
gs
mov
dec
das
pop
inc
lahf
test
mov
mov
into
cmpsb
xchg
dec
aaa
out
pop
xchg
and
js
cmp
scas
imul
leave
out
cmp
filds
data16
mov
enter
jge
lret
mov
cld
xor
cmpsl
ficoms
sbb
lret
outsl
jno
or
mov
in
out
ja
cld
mov
dec
pop
lahf
scas
in
dec
push
scas
cltd
mov
cli
cmpsl
test
pop
push
fs
sub
in
adc
jg
push
xor
fists
ret
fcomps
je
mov
ret
jl
jmp
xchg
inc
xchg
fidivrl
mov
sub
ret
push
mov
push
cli
dec
int
mov
in
fs
mov
pop
pushf
sbb
jne
mov
mov
cmp
add
div
dec
xchg
xchg
or
sti
into
ljmp
notb
roll
xchg
dec
ret
pop
hlt
or
fnsave
sub
lock
sub
mov
in
adc
ja
hlt
xchg
fadds
cmp
xor
push
and
mov
in
in
xchg
and
in
ret
subl
adc
insl
push
jle
dec
inc
std
or
xor
sti
dec
inc
stos
sbb
pop
shlb
cli
pop
addr16
mov
cld
lcall
jecxz
cmp
ret
clc
mov
je
jmp
es
loopne
push
add
shl
or
imul
nop
stos
jb
jp
sarl
cmp
mov
mov
adc
popa
jl
xor
cli
mov
pop
push
push
cltd
lock
enter
or
aad
cmp
and
adc
and
push
or
mov
xor
int
push
in
inc
push
outsl
idiv
and
jo
rcrl
not
in
clc
test
cmp
lock
mov
add
jg
add
lahf
sarl
xchg
sub
pop
jb
scas
out
push
jb
xor
mov
dec
push
or
push
sbb
rolb
fs
mov
adc
icebp
shl
inc
lods
cmc
aam
xorl
lret
add
movhps
sbb
mulb
gs
sarb
jg
add
sbb
mov
dec
outsl
lret
mov
out
in
in
popf
imul
cmp
dec
sbb
cmp
and
incl
xchg
jb
sub
or
jp
mov
xor
stos
fnop
pop
insb
das
jge
xchg
cmp
loopne
loopne
insb
or
rorb
enter
mov
dec
lea
outsb
lcall
psubusw
fbld
test
dec
fiaddl
push
mov
jg
pushf
jnp
cmpb
lahf
arpl
ja
jg
stos
pop
adc
outsl
xor
out
push
add
lds
pushf
pop
cli
fs
imul
xchg
and
imul
dec
popf
or
rcrl
sbb
jge
add
ljmp
orl
cmpsl
pop
push
sub
cmp
jns
lods
inc
push
outsb
cmpsb
mov
or
jns
jge
adcb
int
and
lcall
hlt
in
punpckldq
fdivr
sub
or
out
sub
cwtl
decl
mov
lock
jmp
mov
imul
pushf
int
leave
inc
je
out
cli
mov
lcall
icebp
lock
jb
mov
push
xor
or
adc
scas
mov
dec
cmp
xlat
add
rcl
xor
push
imul
inc
or
int3
jmp
jo
mov
addr16
cmpsl
cmp
stc
mov
or
out
fmul
jle
cmp
dec
nop
leave
sub
hlt
ja
jne
inc
leave
mov
or
int
inc
mov
sbb
loopne
pop
mov
cwtl
shll
icebp
xchg
sub
push
mov
test
fbstp
pop
arpl
mov
stc
out
mov
and
cmp
mov
push
cs
sub
mov
cmp
cmp
inc
cmpsl
cmpl
sub
adc
loop
jbe
adc
and
pop
push
shll
dec
adc
outsl
cltd
push
xor
icebp
xor
mov
das
movsl
push
pop
xor
daa
scas
xor
repnz
sbb
ret
dec
mov
mov
nop
adc
xchg
push
mov
pop
lret
mov
inc
outsl
push
xor
xchg
lods
xor
test
mov
inc
cli
aam
jno
mov
mov
mov
and
add
gs
out
cmpsb
pop
dec
add
jns
lock
outsb
outsl
fcmove
xchg
add
ja
dec
in
leave
out
jl
iret
bound
cmp
or
jg
pop
or
repz
testb
xor
test
pop
ds
test
inc
pop
or
cmp
icebp
test
ficompl
in
sub
cmp
icebp
idiv
fnstenv
dec
cmp
les
push
repz
cmp
movsb
jl
out
out
ds
xor
scas
push
dec
cmp
gs
xchg
xor
push
adc
movsb
pop
nop
push
mov
add
jg
push
add
xchg
lock
hlt
push
adc
dec
jbe
out
popf
push
inc
and
pop
and
loop
hlt
int3
xlat
xchg
dec
lods
lock
outsb
xchg
jg
and
out
mov
xchg
lods
xor
daa
and
pop
mov
xlat
mov
sub
dec
xor
inc
xorb
enter
bound
mov
or
sub
mov
mov
push
add
loope
xchg
push
jnp
paddsw
dec
mov
mov
adc
mov
push
cmc
cmp
imul
xor
in
pop
nop
insb
pop
add
jnp
and
jno
in
xchg
cs
loopne
pushf
pop
into
xor
jecxz
jbe
mov
in
mov
lea
mov
or
mov
mov
in
adc
les
add
or
pop
dec
insl
push
add
repz
mov
adc
push
mov
and
and
call
push
xchg
pop
repnz
rorb
jmp
cs
mov
add
inc
ret
jne
sahf
or
inc
popf
cli
push
fdivl
mov
lds
mov
aaa
cmpsl
push
mov
jmp
rol
jl
inc
inc
dec
adc
inc
jne
push
mov
cmc
leave
daa
pusha
test
enter
and
push
cmpb
andl
enter
notb
arpl
cmpsl
adc
pop
cmc
and
into
stc
push
shlb
clc
inc
mov
test
mov
inc
das
jne
fistpll
addr16
cmp
mov
jmp
inc
fiaddl
adc
jne
jg
scas
mov
sbb
mov
inc
ja
lret
js
jl
aaa
les
aas
insl
leave
mov
adc
dec
insl
lret
stc
jl
repnz
jne
enter
das
jp
cli
adc
js
jbe
dec
fdivl
mov
in
jge
int
popf
movsb
push
xor
mov
insl
jg
and
test
add
xor
lret
lea
inc
sahf
repz
jle
sahf
int3
cli
int3
pop
mov
dec
pop
and
inc
cmp
lret
mov
add
xor
mov
pusha
or
ds
mov
call
push
sub
sbb
movsl
cltd
mov
and
sahf
push
jl
in
push
data16
sub
pop
jne
add
push
push
notb
push
lods
dec
gs
in
fnsave
mov
adc
inc
data16
mov
loope
add
sbb
sub
push
cmpsb
fwait
mov
pop
sbb
shlb
and
repnz
inc
popa
mov
sub
mov
mov
push
lock
jg
imul
subb
dec
push
jecxz
rcr
fcompl
leave
mov
lods
adc
scas
sahf
lds
mov
bound
mov
cmp
and
dec
adc
shlb
mov
fistpl
bound
xchg
mov
out
lods
push
sub
cltd
or
and
pop
sahf
xor
xchg
add
ficoml
xchg
bound
add
or
aas
jle
sbbl
mov
rcr
sbb
cmp
out
xor
into
and
sub
loope
sbb
cmp
adc
mov
cltd
inc
fisttpl
or
jbe
add
je
push
and
push
xchg
jmp
std
sbb
mov
nop
fmull
les
mov
lahf
mov
frstor
mov
in
aas
es
iret
aaa
ds
es
inc
xchg
test
pop
movb
xor
inc
sub
xchg
mov
popf
push
inc
push
pop
push
push
ret
mov
ficomps
mov
test
fsubp
jp
dec
push
scas
pusha
cmp
xchg
iret
cmc
and
adc
inc
leave
add
push
fsubl
imull
jne
fcmovb
or
cmc
xor
push
pop
scas
mov
decb
xchg
addl
icebp
adc
push
pop
enter
xchg
add
popa
pop
pop
inc
stos
pop
out
stos
inc
or
sub
test
ret
mov
pusha
push
push
dec
xchg
testb
icebp
and
xchg
rcll
stos
add
cltd
jg
xchg
call
ds
mov
es
mov
sub
pop
fisubrs
push
repnz
pop
lahf
xchg
lcall
pop
xor
mov
cmp
mov
dec
mov
push
mov
daa
js
popa
orl
add
ret
sbb
pop
jb
xor
ret
jno
lock
xchg
lret
in
xor
mov
les
dec
scas
cmp
jmp
ljmp
lods
xor
movsl
rolb
insl
push
lock
fmuls
cmp
ja
clc
mov
inc
stos
mov
jns
mov
sbb
or
jb
push
negb
in
sbb
and
mov
insb
cmpsb
pop
lock
cmp
rol
mov
aaa
stos
fwait
jo
std
xchg
mov
push
movsl
out
cmpsb
popf
aas
fstps
xor
fs
lods
gs
or
mov
mov
je
adc
aas
fisttpll
pop
dec
mov
sub
loopne
lods
push
ja
cld
lret
add
adc
push
sbbb
jp
mov
push
xchg
les
xor
mov
lods
or
jae
xchg
addb
pop
xchg
xchg
out
adc
xlat
js
mov
shll
inc
stos
gs
sub
cmpsb
jae
rorb
pop
fiaddl
fdivr
sbb
jo
loop
pop
fidivl
fcoms
jbe
jae
push
mov
movsb
pop
arpl
jae
xchg
and
inc
xchg
push
ret
inc
pop
jae
xor
push
or
orb
push
dec
mov
fucom
out
iret
outsl
in
mov
xor
pusha
bound
std
ret
divb
cltd
icebp
lods
pop
loopne
into
shrl
jnp
dec
shll
nop
lods
xor
adc
pop
adc
jb
xor
inc
xchg
cld
lret
fdivr
fdecstp
xor
imul
test
mov
sbb
aad
int
jg
stc
fwait
scas
in
inc
fcomps
popf
and
shlb
lret
leave
lcall
xchg
inc
insb
mov
je
adc
push
aad
xchg
add
xchg
sbb
sbb
xchg
cmc
push
in
push
sub
sbb
adc
loope
pop
bound
fstl
jle
lea
push
es
popa
cmpsb
mov
mov
add
cmp
arpl
sub
jl
repz
lahf
and
dec
adc
leave
mov
mov
imul
push
fnop
into
sub
mov
repz
mov
adc
cmp
bnd
add
scas
adc
shrl
mov
sbb
shlb
in
mov
lcall
clc
lods
aad
sbb
or
jl
icebp
fs
cmp
sbb
and
mov
push
dec
add
js
pop
cmp
sbb
mov
ds
lock
not
mov
adc
enter
sub
fs
xchg
bound
stos
aam
fbld
sahf
jb
push
add
ret
je
in
fisubs
sub
mov
popf
xchg
jecxz
mov
adc
leave
sar
test
jno
shrl
or
xchg
out
jbe
ss
mov
std
jb
pop
out
loope
adc
adc
out
and
bound
cld
xchg
movsl
xchg
andb
xchg
push
clc
nop
popa
cmp
pop
rcll
cmp
iret
inc
cmc
sub
jle
pop
lret
sbb
push
mov
adcl
jecxz
insb
cmp
into
push
enter
mov
popa
push
sahf
sub
dec
xchg
dec
popa
out
lods
into
push
das
adc
lods
icebp
xchg
roll
js
loopne
sbb
bndldx
cs
fstpl
addr16
leave
scas
addr16
jle
xchg
jb
iret
jo
xchg
sub
sbb
cmp
fsubrs
inc
hlt
lods
mov
cld
std
out
add
xor
adc
js
xchg
and
and
icebp
loopne
cmp
cmp
mov
and
sbb
pop
dec
ds
sbb
imul
imul
mov
xchg
adc
mov
jno
cmp
int
rol
mov
notl
cld
out
push
arpl
popf
sbb
push
sbb
movsl
xchg
fldcw
jo
ret
mov
int
add
dec
incb
cmp
sbb
or
scas
xchg
add
sub
adc
pop
test
mov
mov
lret
mov
popf
repz
decb
cli
inc
mov
xchg
inc
negl
push
dec
sbb
mov
adc
and
out
pop
xchg
mov
xchg
add
cmp
outsl
stos
out
push
stos
insb
subl
cld
outsb
imul
orb
les
pop
out
notl
inc
jo
pop
mov
xchg
push
push
xchg
nop
pop
je
stos
push
bound
inc
or
mov
iret
inc
jb
push
lods
mov
jo
mov
push
jge
cmp
dec
cmp
aad
stos
arpl
rcll
enter
or
inc
push
and
in
push
and
xlat
jle
jmp
adc
adc
sub
jae
fdivrl
aaa
push
adc
pop
cs
in
lret
xchg
sub
inc
icebp
pop
out
loope
insb
push
cld
fs
jge
dec
mov
adc
jg
xorl
push
iret
add
and
pop
mov
mov
sub
and
mov
ret
lods
cwtl
push
mov
mov
or
jbe
push
or
sub
call
sbb
sub
add
aaa
jo
pop
les
fs
call
or
sbb
cmp
sub
aad
jo
xorb
push
push
jbe
cwtl
cmpb
arpl
lret
clc
cmp
dec
or
orb
int
in
in
or
mov
pop
sti
into
push
lret
aam
mov
std
push
shr
nop
test
sbb
adc
cld
andb
lods
dec
xchg
dec
lcall
insl
dec
inc
xor
out
xlat
jae
mov
stos
movsb
hlt
mov
jbe
imul
ljmp
sub
int
orb
imul
jb
lret
xor
inc
lods
mov
scas
sub
mov
ja
clc
inc
repz
mov
out
hlt
mov
push
jecxz
pop
pop
sub
push
insb
aaa
dec
pop
les
pushf
sub
aad
test
jge
push
jb
mov
and
and
adc
in
dec
mov
jecxz
add
gs
arpl
lahf
xor
test
xchg
testl
in
xor
mov
jmp
stos
jle
popf
lahf
shlb
xchg
sub
js
cmp
shl
ja
mov
push
in
ja
pop
add
add
add
int3
aas
adc
jns
cwtl
push
mov
out
fwait
sbb
data16
ja
pop
mov
aas
or
ja
inc
aaa
adc
mov
js
add
cld
sti
push
or
dec
cmp
mov
pop
hlt
out
xchg
push
mulb
add
cli
ja
call
cmp
xor
cmc
sbb
cltd
jp
jae
test
lret
unpckhps
sbb
sbb
movsl
xchg
ret
test
jae
mov
scas
cmp
adcb
cmp
sbb
test
sub
and
pop
test
and
jno
jnp
xor
jecxz
addr16
sub
sbb
repnz
and
xor
movq
dec
lret
xor
pop
xor
sbb
xor
enter
aas
fcoml
push
imul
jae
inc
cmp
jnp
lahf
sar
leave
aad
jl
cmc
lahf
sbb
outsl
mov
les
stos
or
je
call
dec
jb
or
xchg
add
scas
enter
addr16
nop
pop
iret
pusha
add
outsl
fildl
aaa
xor
sub
cmp
lahf
jge
and
sarl
mov
xor
pop
or
pop
enter
dec
addr16
jae
and
xchg
xchg
and
std
push
add
and
or
xchg
sub
gs
loop
sub
sti
bound
enter
lahf
mov
stos
mov
sbb
mov
lcall
pop
ret
loope
lahf
es
jns
aaa
jg
adc
xchg
rcr
push
shrb
and
lret
adc
movaps
xlat
mov
stos
mov
in
push
xor
push
insw
adc
rolb
jg
inc
xchg
ror
sub
xchg
xor
iret
das
mov
sbbb
ja
jge
pop
mov
or
xchg
pop
aad
add
pop
mov
xor
pop
pop
mov
cs
jne
inc
ret
or
loop
push
enter
sahf
sub
leave
adc
inc
arpl
das
jp
popa
rcrl
lahf
out
test
in
cmp
xorl
and
lods
xlat
push
sbb
lahf
sub
fwait
scas
les
jge
add
mov
popf
aas
adc
mov
push
lds
and
xor
adc
test
lea
mov
and
ds
sahf
mov
stos
or
or
mov
dec
popa
xor
andl
dec
fabs
jno
fidivrl
lock
xchg
sbb
andl
lods
pop
scas
add
push
fiadds
push
std
lret
xor
fadds
lds
ljmp
push
sub
pop
mov
xor
xor
sbb
stos
inc
and
cld
or
push
xchg
ja
arpl
lds
dec
jmp
test
sbbl
rol
and
xor
push
clc
or
icebp
pop
lahf
dec
mov
fsubrl
jo
pop
xchg
aad
push
mov
stos
mov
aas
out
out
aas
push
dec
mov
int3
push
sub
lods
xor
pop
xor
stos
sbb
jg
js
icebp
push
call
pop
inc
sub
dec
xor
inc
mov
jnp
inc
mov
out
add
adc
cmp
xor
cwtl
lock
loop
iret
mov
adc
mov
pushl
dec
imull
fs
mov
in
cmpb
sbbb
mov
push
out
ss
sbb
push
push
lock
sahf
mov
repnz
mov
outsl
xor
repnz
jge
inc
lea
arpl
pusha
stc
rolb
addl
mov
fsubl
dec
jb
test
push
mov
and
or
xlat
push
sbb
lahf
lahf
xor
daa
stos
call
std
shlb
fldcw
aas
sbb
or
aam
aas
les
stos
mov
inc
and
jno
out
mov
pop
dec
push
nop
arpl
or
fistpll
stos
enter
fwait
sub
jle
xor
jl
movsl
gs
inc
dec
stc
cmp
fisttpl
add
push
xchg
xlat
popf
rdmsr
int
fisubrl
pop
int3
andl
sahf
scas
in
jb
pop
outsb
outsl
aam
jmp
jnp
inc
dec
test
pop
bound
jmp
adc
push
movsb
xlat
dec
jnp
test
mov
adc
ficompl
sub
dec
xor
mov
and
shlb
out
jb
loopne
mov
idivl
fistl
enter
jns
add
in
mov
inc
fs
ljmp
sti
mov
jbe
mov
into
add
xchg
sarl
decb
iret
lret
out
inc
jne
add
xchg
out
cmpsl
mov
mov
mov
ds
jbe
pop
adc
orb
adc
ja
or
fucomp
sub
dec
movsl
loopne
lea
shr
aam
es
push
xor
pusha
ja
jno
pop
add
lods
xor
mov
cmp
add
sahf
inc
xchg
outsl
cmp
pop
cltd
push
xor
nop
xchg
xchg
pop
in
inc
orl
jb
test
mov
test
and
loopne
lods
xchg
push
movsb
adc
lcall
cmp
hlt
rclb
inc
fsubl
pop
stos
cld
adc
pop
adc
inc
movsb
add
cmp
icebp
aaa
int
inc
ljmp
mov
add
add
sub
push
dec
xchg
add
add
inc
sbb
or
jo
jmp
stc
loop
cmp
cmpsb
test
ljmp
push
jb
pusha
jnp
int3
in
sub
ret
or
lahf
psubsw
xor
jmp
inc
rolb
cld
and
push
inc
or
shl
dec
loopne
sbb
adc
cmc
daa
push
test
mov
aam
jg
or
sbb
and
xor
and
inc
and
sub
loopne
outsl
sbb
and
sub
loope
out
xchg
xor
in
mov
lods
sbb
fcomi
shr
mov
jo
inc
in
jge
xor
cmp
flds
adc
jno
inc
dec
ret
cmp
adc
inc
jbe
lret
or
mov
cmpsl
push
mov
sbb
test
cs
lds
pop
jecxz
mov
mov
rcrb
out
ss
out
sbb
ds
xchg
cld
add
pop
fstl
movsb
pop
xchg
mov
mov
jae
push
mov
pop
push
mov
sub
push
cmp
add
pop
inc
in
push
dec
pop
pop
jb
cmp
insb
enter
add
repz
idivb
movsb
push
adc
adc
xor
sbb
orl
movsb
jne
inc
cld
arpl
inc
mov
or
inc
mov
sub
add
mov
daa
jl
stos
les
loope
xchg
rcrb
test
jo
xchg
jge
das
fwait
imul
imul
sub
adc
scas
test
sub
jno
andb
inc
cmp
mov
fldl
xor
xchg
dec
jle
mov
xor
xchg
push
movsb
call
dec
repz
data16
ljmp
pop
sub
push
mov
cmpsb
ds
add
jecxz
pop
js
notl
sub
cmpsb
js
and
mov
outsb
push
or
xchg
xchg
icebp
dec
add
cmpsl
flds
mov
cmp
lds
mov
test
lret
xor
popf
call
insl
xchg
push
insl
jno
pop
out
popl
jl
push
jb
cltd
mov
adc
cmp
mov
in
insb
sahf
mov
fistpl
sbb
fbstp
movsl
arpl
rcrl
sbb
push
xor
cmp
mov
iret
add
out
test
hlt
push
hlt
lret
mov
lods
and
xor
aas
push
adcl
inc
push
je
pop
outsb
inc
xchg
mov
fisttps
mov
mov
movntps
add
xchg
push
loop
pop
xchg
pop
pushf
push
push
jp
mov
mov
ljmp
insb
repnz
stc
aaa
nop
sbb
shl
mov
xlat
insl
push
fwait
sbb
sub
ret
call
out
mov
push
out
or
mov
mov
adcb
add
out
mov
push
mov
shll
or
adc
repz
inc
push
fs
xchg
fsts
test
sub
insl
fldcw
xchg
and
in
mov
mov
loop
jg
sbb
orl
jns
enter
lods
sbb
sarl
cwtl
iret
or
or
sub
in
cmp
fisttps
fstl
ret
push
push
jg
cmpsl
nop
pusha
pop
xchg
sub
cmp
jnp
mov
push
push
mov
xor
add
inc
test
push
cmp
push
or
cltd
jmp
aas
cmpsb
xor
adc
call
or
or
cmp
sbb
inc
int3
loop
fcoms
jbe
xchg
adc
mov
mov
ret
rorb
imul
dec
insb
loop
pop
aas
xchg
jns
enter
xchg
or
pop
mov
test
mov
add
out
add
sub
subb
sbb
enter
popa
and
xchg
xchg
push
mov
or
rcll
into
aam
divl
idivb
shll
fucomip
sub
cmp
loop
ficomps
daa
inc
mov
pop
enter
scas
and
sub
imul
pop
jmp
xchg
int3
aam
outsb
mov
dec
jnp
mov
dec
mov
jmp
pop
or
in
insl
out
xchg
in
jno
or
mov
push
push
mov
loop
adc
popf
push
imul
aaa
stc
pop
mov
insb
sub
or
sbb
or
les
add
xor
ss
push
xor
sbb
inc
rorl
lahf
mov
scas
dec
push
repnz
iret
cmp
mov
pop
cmp
sub
cltd
xor
sarl
xchg
js
outsb
rolb
nop
sbb
sub
cmc
cmpsb
int
xlat
outsl
jecxz
add
mov
xor
fcomps
daa
cwtl
pop
mov
stc
inc
in
pop
cmp
icebp
jnp
lea
mov
xchg
popa
sbb
stc
adc
add
jle
xlat
enter
xchg
adc
mov
sahf
ret
imul
inc
mov
add
or
mov
sub
rolb
aam
push
lahf
out
je
inc
addr16
ljmp
add
adc
jae
lods
aas
jae
cmp
int
rclb
fstenv
lcall
shrb
mov
icebp
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
mov
xor
inc
pop
jl
repz
int3
jbe
cmp
mov
fsts
fmull
xchg
iret
adc
out
or
out
mov
or
sbb
repnz
cmp
lds
xchg
and
test
cwtl
fstpt
and
aaa
pop
xchg
jne
orps
pop
pop
pop
adc
jl
arpl
cltd
adc
mov
fs
dec
mov
into
das
outsl
push
scas
pop
adc
jne
or
add
cmpsl
mov
lea
sbb
jecxz
push
mov
xchg
push
mov
pop
mov
push
jmp
mov
icebp
andl
shll
popf
mov
std
pop
and
out
xchg
inc
stos
fs
ret
cmp
stos
pushf
out
repnz
xor
mov
lock
mov
inc
leave
sub
cmp
sbb
xor
mov
into
pop
pop
jnp
hlt
inc
lods
pop
scas
std
sbb
jg
das
jo,pn
mov
sbb
iret
cmpb
cmpsb
pop
pop
adc
sbb
fists
push
pop
int
adc
xorb
cmp
dec
fldcw
mov
cli
sbb
lret
xorb
jge
pop
cld
lock
clc
inc
adc
and
scas
xor
fists
add
or
or
fbld
mov
add
movsl
fstl
jl
xchg
popl
cltd
sbb
jnp
mov
aaa
test
fldt
test
push
sbb
sub
mov
dec
or
mov
in
add
idivb
adcb
or
mov
adc
mov
jnp
inc
out
sub
les
inc
or
push
xor
cmp
adc
std
mov
mov
cltd
mov
or
out
in
fldenv
push
dec
pop
iret
test
or
sarb
sarb
addr16
mov
sti
ja
mov
push
pop
jb
xchg
loope
add
sub
adc
push
cmpsl
insb
aaa
stc
mov
ret
and
mov
lcall
mov
push
in
jp
in
mov
inc
sbb
or
adc
je
sbb
imul
push
lcall
mov
pand
mov
stos
sub
jns
scas
fyl2xp1
jb
icebp
mov
stos
mov
lock
jp
hlt
sti
xor
pop
pop
popf
test
ja
lahf
imul
pop
adc
lea
add
mov
js
xor
enter
sub
cmp
pop
and
adc
add
test
popa
or
mov
push
sbb
aam
and
mov
jno
push
imul
lcall
cltd
sbb
sbb
sbb
xor
sub
ret
out
ds
outsb
mov
aaa
mov
je
loope
loope
sahf
push
pop
lret
stos
in
push
mov
mov
dec
mov
enter
push
xor
push
pusha
mov
leave
push
pop
aaa
mov
jecxz
out
stos
movsb
and
aas
jle
insb
daa
aam
cmp
dec
stc
cmp
lods
mov
rcrb
ja
sub
gs
dec
push
jl
scas
jb
xor
je
aad
adc
push
das
loopne
pop
cs
rolb
xchg
ss
sbb
sbb
mov
imul
xchg
jnp
das
jnp
shrb
fwait
xchg
xchg
add
add
push
mov
enter
int
add
mov
leave
push
mov
sub
mov
cmp
pop
push
aad
pop
ja
out
sub
lock
imul
jno
ror
shll
jmp
out
gs
data16
imul
insl
clc
rol
adc
pop
enter
les
xor
pop
inc
push
add
jle
lds
cmovge
fisubs
mov
rcrb
or
push
xor
and
sbb
jp
outsb
jo
push
jo
fwait
enter
shr
sbb
mov
pop
test
dec
xchg
mov
cli
icebp
ret
divl
lods
mov
jl
inc
shl
lock
pop
sub
sbb
cmpsb
xlat
or
cmp
sub
js
add
adc
ja,pn
icebp
mov
jbe
pop
int3
xchg
xchg
push
xor
pop
mov
mov
jmp
mov
es
dec
dec
fsubrl
xchg
mov
imul
das
cmp
sbb
inc
xor
pop
xchg
andl
mov
popa
jg
and
leave
cmp
pop
mov
push
in
cmpsl
inc
rorb
xchg
sbb
int
push
mov
push
lahf
lea
cmc
mov
scas
and
mov
lahf
imul
xor
dec
push
inc
mov
inc
adc
sub
jne
jb
outsl
inc
imul
xor
jecxz
pop
pop
xlat
and
push
jns
or
mov
sbb
inc
cmp
rclb
sbb
shll
ljmp
pop
add
gs
jbe
jle
jle
lret
inc
xor
stos
std
and
mov
rorl
fisubrs
inc
fwait
call
and
xlat
pop
push
divps
inc
pop
rcr
and
pushl
or
push
jbe
lock
inc
push
addb
ret
in
lock
icebp
out
jne
mov
shl
ret
sti
and
adc
lret
cmpsb
call
mov
in
and
xor
std
xlat
popf
and
mov
imul
mov
sub
mov
cmp
fidivrs
or
sub
mov
stos
aad
outsl
test
adcl
add
mov
inc
outsl
mov
cmpb
es
jmp
popf
push
jnp
adc
int
sub
out
ja
sub
stos
popf
leave
stos
and
scas
mov
jmp
xor
and
clc
aas
mov
jns
daa
sbb
test
jbe
sub
mov
mov
adc
ja
push
cmp
add
lods
sbb
jmp
aam
xlat
xlat
fwait
test
stos
xchg
sbb
pop
xor
subl
mov
inc
dec
jmp
xchg
shlb
mov
or
add
mov
add
mov
sbbb
cmp
cmp
fmuls
pop
mov
and
pop
xchg
mov
daa
xchg
mov
fsubrl
int3
and
test
add
inc
cmc
mov
dec
mov
inc
xchg
or
jmp
sti
dec
mov
pop
jmp
pop
aas
jp
mov
cltd
jno
dec
push
sti
jp
push
adc
out
adc
pop
not
push
ja
mov
insb
sbb
add
pushf
mov
adc
mov
aas
sub
lahf
xor
fmull
out
out
pop
xchg
insl
cwtl
gs
cmp
in
and
dec
pushf
pop
push
enter
xor
call
xchg
mov
inc
xchg
sbb
dec
mov
lods
sub
push
movsb
pusha
add
jg
arpl
roll
movsb
jnp
rcrl
jg
adc
or
stos
jge
mov
mov
mov
mov
sub
dec
insb
shlb
call
dec
inc
push
repnz
scas
and
mov
pop
out
sbb
push
cltd
rorb
out
ja
xchg
cmp
imul
ds
iret
xchg
js
andb
lret
push
addr16
lcall
adc
outsb
mov
jmp
jle
mov
aam
lds
dec
gs
cmpl
clc
lcall
ja
lcall
mov
test
outsl
sbb
iret
test
or
into
xchg
jp
push
xchg
adc
scas
lods
sub
lcall
fwait
out
and
inc
pop
inc
cmp
js
lcall
mov
xchg
cltd
push
add
xor
mov
outsl
ljmp
or
addr16
xchg
int
xor
inc
xchg
loopne
das
push
lods
inc
cmp
lods
mov
lret
pop
aam
das
push
mov
imul
add
push
cmp
pop
ret
mov
insb
dec
sahf
mov
mov
mov
pop
pushf
fcomi
lret
out
push
mov
mov
mul
or
xlat
xchg
xchg
and
xlat
filds
lock
shlb
js
or
iret
leave
push
dec
inc
cmp
daa
adc
mov
pop
add
aas
lcall
mov
inc
inc
lock
mov
mov
mov
movsl
call
jnp
push
popa
xchg
pusha
adc
mov
mov
imul
inc
mov
out
ffreep
xlat
arpl
sbb
daa
cld
scas
scas
mov
push
sbb
jb
pop
or
mov
ficompl
in
fwait
or
pop
fmuls
push
insb
repnz
jle
push
out
push
mov
cmp
insl
dec
adc
cltd
mov
mov
mov
xor
pop
cmp
mov
outsl
pop
outsb
cli
mov
into
dec
arpl
cli
xor
adc
fcompl
mov
mov
sbb
jo
add
and
je
andb
push
mov
mov
sub
gs
push
mov
mov
loop
loopne
fisubrl
sahf
cld
pop
add
sub
fwait
adc
adc
push
sub
stc
cmc
dec
fprem1
push
jge
sbb
mov
in
int3
insl
outsl
les
jg
mov
jae
mov
nop
mov
and
inc
mov
addr16
and
decb
in
adcl
and
mov
popl
in
mov
shll
add
or
in
loopne
outsb
sahf
cmp
xacquire
daa
popf
adc
push
insl
dec
push
jp
inc
fs
cmp
ja
ja
mov
adc
mov
lcall
icebp
xchg
adc
jno
cmp
ja
dec
pop
adc
push
push
scas
or
leave
jb
cli
cmp
sbb
inc
in
pop
fcompl
xor
cmp
sub
cmp
clc
pop
pop
jge
pop
popf
int
or
dec
ret
cld
cmp
xor
dec
mov
int
sbb
dec
ss
fisubrl
pushf
xchg
stos
dec
sub
repnz
or
bound
adc
add
arpl
jmp
or
or
repnz
les
lahf
pop
cmp
fnstcw
jmp
pop
cmp
test
sub
push
or
imul
repz
jns
rcrl
sbb
xor
stos
popf
mov
jno
aas
jp
mov
out
xchg
imul
lahf
and
xchg
aam
pop
ret
add
and
faddl
add
test
inc
and
jno
inc
insl
repz
dec
xor
sbb
ret
loope
movsl
lret
xchg
sti
sbb
push
add
and
and
mov
cwtl
lcall
mov
das
out
pushf
cmpsb
mov
repz
loop
jno
out
cmp
or
jle
js
imul
jg
lahf
loopne
dec
mov
lods
pop
add
xchg
xchg
pop
cmp
stos
insl
xchg
enter
adc
dec
loope
jmp
inc
cmc
jae
loopne
cltd
mov
cmpsl
pop
mov
cwtl
dec
ljmp
dec
dec
ds
mov
ljmp
inc
clts
or
pushf
fdiv
pop
call
jo
and
cld
imul
push
add
inc
js
jmp
mov
or
int3
imul
jle
push
and
mov
in
pop
adc
shr
or
stos
xor
test
in
push
stc
or
and
push
fs
push
popf
gs
dec
aas
jb
subl
mov
mov
or
jp
aas
and
add
leave
gs
push
cwtl
adc
jb
lods
jae
mov
cmp
outsb
lcall
test
pop
dec
rcrb
mov
scas
sbb
sbb
lret
popa
dec
dec
xlat
aaa
mov
dec
test
pop
jae
ja
clc
lods
push
fwait
or
add
cltd
jecxz
pop
xchg
mov
inc
xchg
push
sbb
dec
jae
adc
push
jne
sbb
sarb
in
dec
sti
outsl
fnstcw
jl
xchg
mov
cmpsb
and
dec
insl
xor
mov
incb
jbe
pop
pop
repnz
xor
adc
adc
addr16
and
fcoms
movsl
inc
mov
test
fcmovbe
out
icebp
jne
mov
inc
cmpsl
add
nop
sbb
hlt
dec
cs
loopne
repnz
ret
push
mov
jecxz
push
outsb
lods
and
repnz
ret
xchg
cmp
sar
bnd
insb
lea
sbb
add
arpl
cmp
arpl
rclb
fnstcw
and
sub
mov
mov
mov
lock
lahf
add
mov
pop
leave
icebp
adc
dec
and
and
sub
subb
inc
sub
dec
loop
cmpsl
pop
pusha
ret
std
filds
daa
cmp
rolb
mov
rcrl
jmp
int3
or
push
mov
fmull
fnsave
lcall
stc
stc
cmc
je
jbe
pop
insb
sub
xor
in
xchg
sahf
sub
sub
cmp
fildll
add
dec
notb
fnstcw
mov
stc
or
fidivl
lds
sbb
and
fwait
sbb
aas
or
frstor
mov
fwait
push
les
adc
inc
jge
movl
fsts
push
pop
cmp
xor
aam
cmpsl
sbbb
out
jnp
inc
add
nop
adc
call
fwait
out
jae
sbb
cmp
aad
mov
inc
xor
movsl
in
shll
jne
sahf
and
out
mov
or
xchg
hlt
ljmp
lcall
dec
jae
sub
inc
shl
into
push
xor
aad
dec
movsb
arpl
incb
fs
cmp
inc
sub
rep
jno
shll
mov
cwtl
je
push
and
push
add
fidivrs
jae
mov
and
jl
imul
movsb
insl
or
xchg
mov
int
mov
out
filds
push
rolb
mov
push
lock
mov
pop
icebp
loop
sbb
xor
ret
stos
fdivrl
mov
aad
push
add
sub
add
inc
mov
int
push
mov
dec
icebp
sbb
in
push
into
or
popf
xchg
arpl
out
xchg
lds
lods
xchg
xor
mov
stos
shl
pop
ja
inc
xchg
cmp
sbb
test
pop
inc
and
adc
dec
push
adc
lea
and
mov
jbe
mov
fists
jae
ja
addr16
test
mov
mov
xor
popf
sti
arpl
pop
cmp
mov
and
addr16
out
fistl
jg
pop
mov
jmp
jecxz
pop
jl
xchg
imul
mov
dec
pop
adcb
push
add
add
mov
pop
aad
shl
xcrypt-ofb
cmpsl
das
popf
sarb
pop
fucom
fs
js
cmp
pop
and
inc
xchg
add
and
imul
aad
sub
test
je
popa
mov
mov
jns
rcrb
mov
scas
ljmp
jmp
cmp
test
xchg
repz
mov
das
scas
mov
sub
push
mov
mov
mov
les
jno
jne
sub
fstl
int
cmp
and
lds
push
fisubrl
out
shlb
sub
shrl
inc
mov
push
in
pushf
fwait
xor
repz
jl
fs
sti
test
movsb
addl
fcomip
pop
mov
loop
kmovd
add
inc
repz
push
mov
js
ficoms
cmp
pop
cmp
mov
stos
lods
addl
jecxz
ret
in
pop
stos
mov
jg
adc
add
and
mov
xchg
lcall
xor
push
aad
lahf
movsl
pop
inc
cld
popa
pop
inc
mov
cmpsl
push
mov
cmp
mov
lret
adc
ja
lds
mov
lock
stos
lods
stc
fwait
adc
popa
push
mov
add
test
imul
mov
mov
xchg
cmp
add
or
mov
ror
int
nop
and
fstpl
imul
sub
shrb
repz
or
mov
mov
mov
push
mov
shll
mov
push
sub
cmpsl
clc
test
push
lret
sub
imul
dec
and
adc
and
aam
cvtps2pi
jb
fists
inc
cmpb
push
imul
adc
aad
aas
cmp
imul
jmp
cmp
jb
outsb
loop
inc
mov
mov
mov
cmp
invd
popf
push
data16
sub
jl
bndldx
movsl
dec
in
inc
jl
jb
inc
mov
mov
jo
add
or
or
pop
imul
call
sub
jb
push
movzwl
lret
push
jle
add
dec
xchg
and
test
or
insl
rorb
xor
test
and
mov
aas
outsb
stos
cmp
insl
sarl
mov
scas
in
push
dec
mov
gs
push
push
out
test
jo
mov
xchg
fldl
test
xchg
push
jnp
mov
arpl
daa
xlat
and
lods
pusha
jno
cltd
shrl
sbbl
xchg
pop
movsb
jecxz
xchg
pop
test
and
or
cmp
imul
xchg
jg
ss
pusha
ja
ror
mul
adc
mov
idivl
adc
fsubs
aas
dec
jne
adc
xchg
test
xchg
jle
mov
lods
inc
pop
sahf
aad
cmp
xchg
mov
arpl
jnp
jno
pop
jmp
packuswb
sbb
cmpl
and
and
jge
mov
clc
arpl
je
int3
scas
out
mov
mov
aam
xchg
mov
sub
mov
or
fiaddl
jge
xchg
cwtl
mov
fdivs
mov
jge
mov
dec
cmc
pushf
mov
imull
iret
add
ljmp
mov
cmc
pop
adc
cmp
or
repnz
sahf
dec
sti
inc
mov
test
in
rorl
mov
into
lea
jo
enter
push
inc
push
jle
jne
clc
cmc
jg
fwait
jne
mov
push
es
jp
cli
adc
ljmp
in
int3
icebp
es
push
and
dec
ret
outsb
orb
mov
push
mov
jne
stos
xor
xor
lret
and
rolb
pop
pop
imul
xor
js
add
fisubs
jmp
mov
dec
push
lock
and
jae
and
mov
or
rcrb
push
sub
js
xor
jg
jae
mov
xchg
add
pusha
or
xor
push
mov
or
dec
rorl
xchg
mov
push
int3
sub
mov
push
mov
imul
jg
jmp
imulb
mov
xchg
fsub
mov
fs
and
stc
sbb
push
mov
pop
xor
mov
mov
pop
fildll
loop
xchg
mov
loope
daa
mov
inc
fistl
movsl
fisubs
jo
sub
aam
push
push
lds
hlt
and
fwait
xchg
mov
xchg
xchg
lds
adc
je
enter
rcrl
stos
jns
aaa
or
rorb
lea
adc
adc
loop
mov
sbb
popa
mov
xor
dec
sub
cmpsl
sbb
daa
mov
mov
pop
cmc
in
ret
inc
scas
or
dec
cmp
jo
lahf
pop
pusha
sbb
bnd
addr16
pop
push
sbb
jge
inc
jp
inc
sbb
sbb
inc
test
ss
cmp
stos
mov
lret
jns
testl
mov
push
push
in
adc
mov
out
sbb
and
push
adc
fimull
sub
mov
sbb
fcmovne
scas
mov
aas
loopne
sub
outsb
jp
sbb
dec
dec
push
xor
adc
and
and
leave
mov
sbb
test
cld
aaa
inc
mov
mov
xor
pop
inc
jge
loope
mov
cmp
enter
addr16
loope
dec
lahf
mov
dec
sahf
jp
in
lahf
mov
cmp
fsubl
gs
ss
mov
jecxz
pop
insl
adc
jnp
ljmp
fxch
in
jp
push
pop
repnz
pop
mov
push
outsb
cwtl
mulb
mov
xchg
pop
or
test
data16
pop
adc
add
pxor
out
data16
or
loopne
sbb
int3
push
mov
pop
mov
adc
push
int
sbb
hlt
test
sub
pop
jge
xor
aad
xchg
or
pop
popf
add
xchg
xlat
push
stos
scas
ret
cwtl
clc
mov
or
jecxz
add
arpl
pop
addr16
test
repnz
out
lock
out
dec
xchg
add
mov
mov
cmp
xor
mov
xor
push
pop
jmp
cmp
iret
movsb
popa
add
push
mov
push
cli
sbb
and
mov
je
mov
rorb
xchg
test
push
stc
pop
push
scas
dec
jecxz
ja
movsb
sub
jnp
scas
cld
lock
stos
pop
std
aaa
push
mov
aad
dec
std
out
mov
imul
lcall
aas
arpl
pop
in
pusha
xchg
xlat
mov
jmp
andl
jmp
popf
dec
mov
sahf
adc
dec
scas
xor
adcl
adc
jg
ret
inc
xchg
inc
notb
mov
bound
ficomps
imul
insb
jl
xor
sbb
jmp
inc
or
mov
mov
push
pop
lahf
or
das
outsb
or
in
mov
mov
call
adc
pop
push
fnsave
adc
pop
outsb
sbb
add
mov
mov
ss
mov
int
pop
adc
bound
push
jo
pop
insb
xchg
xchg
adc
mov
jns
xor
sub
rorl
mov
pop
fadds
in
andb
adc
lret
or
scas
push
dec
imul
inc
sahf
and
mov
adc
lahf
or
jl
or
inc
cmp
fisttps
aam
js
call
or
sbb
sub
call
fmuls
iret
mov
iret
in
xchg
out
jle
mov
and
iret
pop
cmp
dec
fldenv
mov
arpl
test
fsub
pop
fimull
sub
push
jp
cmp
mov
fldcw
jae
or
insl
outsl
and
dec
mov
xor
insl
mov
adc
xchg
push
test
inc
iret
mov
sub
lock
or
lods
lret
dec
int
rcr
cmp
pop
out
iret
icebp
movl
movsl
out
mov
jmp
xchg
jo
clc
leave
jg
dec
push
sarl
mov
mov
stos
pop
pop
mov
xchg
adc
mov
inc
pop
xchg
push
push
ffree
int
mov
int3
fwait
xor
sub
sbb
dec
dec
mov
dec
push
sub
ds
jge
lods
push
fwait
sbb
inc
cmp
mov
push
xor
jno
xchg
and
movsb
mov
pop
or
and
aam
sbb
repz
xor
mov
fxch
inc
clc
or
mov
cld
sbb
popa
int3
jg
fdiv
scas
and
push
aam
sub
mov
jmp
inc
adc
mov
pop
cmp
jl
hlt
shrl
or
jmp
mov
aaa
adc
mov
mov
mov
mov
fcoms
test
ds
and
lcall
inc
add
fnsave
fdivs
popf
les
loope
mov
inc
rorb
mov
adc
lds
cmp
pop
jmp
neg
imul
mov
xor
repnz
pushf
out
insl
push
int3
dec
rclb
sbb
popl
dec
pusha
lea
jl
scas
add
insb
in
or
cmp
xchg
pop
rcl
push
mov
cld
sbb
jmp
shll
inc
mov
ss
xchg
test
sbb
xchg
or
adc
rclb
cmp
jecxz
xchg
sub
push
imul
pop
fistpll
inc
sub
imul
bound
jns
push
cmp
add
test
mov
pop
push
pop
mov
mov
adc
stos
xor
mov
inc
rcll
ja
mov
iret
insl
lret
or
inc
frstor
sbb
mov
inc
jle
cmpb
mov
pop
sbb
mov
cmpsl
cmp
aam
scas
gs
ja
push
sub
or
jne
lret
out
adc
ss
test
push
outsb
xchg
mov
sub
inc
push
lods
cmp
je
push
sbb
imul
stc
popf
jl
cmp
pop
inc
cmp
loop
orl
pop
and
cld
cmpsl
aas
mov
sbb
sbb
fistps
je
jmp
sub
das
dec
fidivrl
adc
js
mov
pop
shlb
mov
xchg
cli
mov
xchg
cs
outsb
negb
in
aad
aaa
addr16
imul
mov
aaa
jmp
xor
test
seto
aam
xor
stos
and
rcrl
push
nop
add
mov
push
pop
adc
call
xchg
aaa
into
xlat
ja
pusha
bnd
and
dec
pop
sub
cmpsl
lods
adc
xchg
test
movsb
xlat
push
lock
dec
mov
and
sbb
xchg
scas
loope
mov
inc
pop
push
dec
repz
insb
or
inc
cmp
push
or
pop
inc
xchg
loopne
mov
decl
cmp
ficomps
sbb
iret
bound
insl
iret
inc
fisubs
repz
pop
adc
int3
fisubs
mov
in
and
mov
stc
sbb
xorb
test
call
daa
xor
sbb
jo
pop
repz
xchg
arpl
xchg
fdivp
popa
lret
jo
jnp
add
mov
sahf
xchg
sbb
movsl
repz
jno
outsb
mov
and
test
insb
cmc
add
lcall
mov
lock
sub
inc
push
and
pop
addr16
cwtl
insb
dec
dec
inc
or
or
inc
push
xlat
lods
sahf
jecxz
out
test
mov
out
xorb
xor
int3
push
movsl
xor
inc
pop
aaa
inc
out
hlt
lret
imul
rorl
imul
mov
push
adc
orb
lds
lock
leave
out
fdivrl
inc
xchg
push
cmp
incl
mov
jmp
jnp
cwtl
dec
xchg
jae
rcrl
into
inc
pop
jno
jl
xorb
and
jb
or
movsb
imul
popa
lahf
xchg
mov
jl
fisttpl
mov
fcmovne
xchg
scas
jae
jle
clc
xchg
ljmp
mov
insb
or
mov
ds
insl
popa
push
cmpsb
push
add
sbb
mov
mov
loope
jae
xchg
jb
cwtl
or
pushl
inc
xchg
push
fs
push
xchg
mov
movsb
xor
daa
sti
ljmp
mov
cwtl
ret
scas
cmp
xor
mov
stc
out
imulb
rcrl
std
inc
pushf
loopne
iret
daa
addr16
jbe
pop
mov
push
movsl
cmp
idivb
and
addr16
dec
lret
mov
adc
push
and
je
jns
fistpl
outsl
arpl
mov
xchg
outsb
pop
push
jmp
faddl
mov
repz
pop
or
loope
pop
bound
mov
lods
xor
call
jo
xchg
sub
dec
adc
adc
in
adc
test
into
inc
in
pop
repnz
fimull
sbb
mov
push
or
push
and
jae
adc
adc
int3
jg
adc
push
cmp
outsl
push
sub
pop
lea
outsl
inc
mov
xchg
call
fcmovbe
pop
pop
mov
fildll
ss
dec
pop
inc
lret
push
inc
std
ljmp
push
sbb
mov
fidivs
xchg
in
mov
in
xor
sbb
imul
cmpsb
mov
inc
xchg
lods
dec
adc
lcall
pop
mov
out
stos
fstpl
mov
iret
dec
xor
pusha
ja
rorl
mov
and
sbb
into
adc
sar
push
mov
dec
les
dec
jecxz
out
test
dec
inc
sahf
rol
in
and
push
xor
aaa
stos
cmp
fnstenv
outsl
sub
gs
mov
inc
enter
adc
nop
mov
xor
gs
ret
dec
movsl
out
sysret
insl
dec
mov
ret
dec
rcll
mov
test
pop
int3
push
push
adc
xchg
inc
sub
arpl
pop
imul
fbstp
jle
mov
mov
imul
lahf
or
shrb
call
pushf
popa
or
mov
popf
popf
adcb
inc
inc
xor
je
dec
cmpsb
push
inc
enter
lds
jmp
adc
add
sbb
add
pop
ljmp
loop
shrl
sub
or
bound
out
add
push
daa
xchg
or
je
mov
leave
out
push
pop
or
mov
adc
xor
lret
xchg
std
mov
adc
test
movq
lss
push
mov
inc
and
addl
pop
sbb
mov
push
insb
paddw
mov
pop
xor
push
in
cltd
jle
xor
jmp
jb
fnstcw
jecxz
add
lret
rcll
mov
sub
sbb
add
adc
int3
test
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
rclb
jl
ficoms
dec
lods
xchg
mov
fwait
push
push
dec
cwtl
inc
fcmovnbe
inc
and
xchg
andb
inc
or
andb
jge
jmp
lea
stos
movsb
and
fwait
lock
push
push
enter
cmp
cwtl
stc
popf
push
in
jle
xchg
cwtl
lods
scas
lods
cwtl
push
pop
inc
cmp
adc
mov
in
push
add
xchg
mov
mov
enter
mov
addr16
push
fs
in
popa
push
fdivl
push
mov
sbb
jne
and
cwtl
insw
jne
push
cmp
ja
addb
xchg
aam
dec
cmpsl
test
fldl
clc
xor
outsb
mov
and
cmp
adc
mov
inc
and
in
mov
fwait
mov
aas
movsl
jl
mov
pushf
repz
or
into
ret
ljmp
mov
pushfw
mov
cwtl
inc
negb
test
push
loop
adc
jle
aad
loopne
and
mov
cmpsb
fidivrs
mov
imul
jae
push
pop
sbb
sub
cmp
and
fmull
sbb
push
xchg
xchg
lds
cmp
sti
fdivrl
adc
rclb
pop
sbb
jp
ror
push
adc
pop
sub
lcall
fwait
mov
jg
mov
push
cmpsl
pop
mov
outsb
add
ds
mov
imul
scas
jb
adc
addb
xor
scas
jae
sbb
pop
mov
ljmp
scas
enter
push
lock
push
aas
cli
cmp
mov
push
sbb
aas
lea
outsl
pushf
mov
sbb
pop
int3
xchg
fs
dec
add
xchg
xor
fs
test
mov
xchg
jnp
mov
mov
in
jno
adc
mov
inc
xlat
push
push
lock
es
insb
jle
cli
add
dec
jno
addr16
xchg
add
fadds
push
dec
iret
push
or
ss
pop
out
mov
lret
mov
mov
fistps
inc
mov
fbld
test
add
aas
shll
addr16
mov
mov
in
and
ret
fildll
jle
pop
loop
add
mov
adc
clc
push
sub
daa
aas
inc
daa
pop
js
sub
in
fisubl
mov
pop
and
aad
loop
cmc
fisttpll
flds
mov
jo
shlb
xchg
sub
mov
sahf
imul
ljmp
scas
test
lret
ja
ss
mov
icebp
test
xchg
dec
insl
jge
out
xchg
push
ss
mov
mov
and
sar
add
fdivp
test
pop
lock
dec
xchg
adcb
mov
mov
xor
cmp
repnz
pop
loopne
js
mov
push
push
cmp
xlat
pop
adc
jecxz
sub
push
ds
dec
mov
cmpsl
add
sbb
sbb
pop
inc
mov
cltd
mov
jbe
push
cmp
or
push
jle
pop
pop
inc
xchg
inc
pop
imul
gs
mov
xor
sub
cli
jo
jbe
xor
sub
and
dec
mov
push
roll
inc
pop
mov
sbb
add
push
xchg
bound
in
mov
push
mov
ds
lds
inc
xchg
lret
ret
out
mov
pop
sub
flds
ss
inc
repz
pmulhuw
cld
and
movsb
ja
mov
ffreep
pop
test
lods
int
fdivrs
pushf
cmc
out
loopne
xchg
xchg
mov
ss
cmp
xchg
and
repz
popf
and
add
inc
or
pusha
xor
mov
int
out
sbb
jecxz
mov
cmp
mov
rcrl
stos
adc
movsb
movsb
lret
pop
cmp
xchg
ret
out
iret
sbb
and
aad
and
sar
inc
cmpsb
in
scas
pop
stos
into
cwtl
mov
lods
and
shr
aad
cmp
scas
jle
sbb
push
int
stc
data16
push
std
xor
add
in
xchg
stos
sbb
jne
add
jp
xor
in
and
push
scas
aaa
enter
aas
and
lret
xor
arpl
addr16
pop
jecxz
dec
adc
mov
scas
aad
lret
mov
stos
pushf
mov
or
mov
pop
xor
xor
cmp
iret
pop
test
xchg
nop
and
leave
or
mov
jno
inc
push
leave
cmp
xor
jb
aad
movsl
daa
out
pop
nop
jmp
shl
mov
jo
cmpsl
adc
xchg
je
pop
cmp
adcl
lock
rolb
js
pop
mov
jge
mov
jl
bnd
popf
les
pop
mov
divl
cltd
push
push
jbe
pop
xchg
sub
mov
pop
mov
outsl
out
in
mov
mov
jns
pop
lock
shlb
pop
test
adc
inc
mov
sarl
inc
add
ljmp
fstl
movsb
int3
cmp
jmp
lahf
cwtl
mov
arpl
in
lahf
sbb
pop
ret
lea
sbb
aad
bound
sti
orb
mov
xlat
xor
adc
subb
out
push
cwtl
cld
stc
push
mov
in
out
sub
aad
adcb
mov
movsl
dec
js
imul
push
test
fdivl
mov
jnp
mov
movsl
mov
mov
aam
inc
sub
xchg
enter
cmp
mov
adc
pop
dec
fstpl
mov
subb
arpl
imul
sarb
loope
inc
adc
fucompp
pop
cmpsl
shl
xchg
jle
add
es
or
mov
push
fs
cli
aad
arpl
js
adcb
fldcw
pusha
push
sbb
out
test
sbb
test
mov
fisubrl
call
lahf
in
sbb
loopne
jb
jo
dec
mov
sub
xor
clc
fcoms
adcb
sub
xchg
mov
ja
stos
inc
daa
jnp
repnz
cmpsl
lcall
in
cmc
test
lret
clc
push
bound
cmc
push
orb
xor
or
xchg
dec
fdivrs
outsl
daa
mov
add
pop
jae
cld
push
stos
stos
jne
dec
cmp
push
icebp
inc
rclb
xor
fdiv
xchg
mov
jbe
sbbl
flds
sbb
arpl
inc
jb
out
ficoml
mov
lcall
and
iret
cmp
xchg
test
repnz
sahf
outsb
mov
out
clc
add
sbb
sbb
test
jae
aam
mov
cmp
imul
sbb
jle
shlb
ucomiss
fsts
push
repz
lods
jl
js
mov
add
jae
cmp
mov
orb
shll
std
loopne
orl
sarl
adc
lock
lahf
sbb
push
sahf
sub
mov
pop
sub
jmp
shl
in
sarb
mov
in
aas
fistpll
out
push
lods
out
ret
es
cmp
nop
popf
rclb
xchg
xchg
popa
je
je
push
inc
xor
mov
aam
pop
ret
pop
or
cmp
loope
or
xlat
inc
ds
push
imul
cmp
xor
adc
ja
cmc
push
or
stos
jmp
jecxz
mov
and
mov
movsb
jle
sub
movb
sarl
mov
iret
push
cmpb
enter
push
add
cld
jb
cwtl
repz
gs
cmpsl
cmpsl
fimull
cltd
loopnew
xor
les
test
push
mov
test
cmp
sbb
test
inc
inc
pushf
and
loopne
sub
mov
aas
jbe
sub
fs
mov
sti
enterw
push
cmp
push
push
jns
out
aas
loop
hlt
cmp
jb
daa
sti
push
cmp
xchg
sti
stc
mov
push
sbb
pushf
hlt
inc
inc
outsb
mov
adc
cmp
scas
sub
and
sub
fcmovu
movsb
fdivrl
or
addr16
sub
into
jecxz
cmp
adc
push
push
loope
sub
xchg
jg
jb
data16
sti
cltd
push
roll
js
in
push
jle
js
lcall
push
scas
mov
or
call
push
pop
fidivrs
lds
stc
mov
xchg
adc
xchg
jge
repz
jecxz
sub
cmpsl
into
and
fwait
sbb
addr16
mov
cmp
push
jp
arpl
lea
insb
data16
js
mov
hlt
adc
mov
mov
mov
pop
add
adc
add
push
enter
repnz
push
addr16
adc
in
pop
repnz
clc
push
mov
neg
hlt
push
int3
out
jle
xchg
ljmp
es
pop
pop
and
jne
pop
sbb
sub
imul
fstpt
adc
inc
jnp
mov
push
test
add
sub
enter
test
dec
jo
inc
repz
inc
ret
mov
stos
add
xor
xchg
data16
xchg
adc
loopne
mov
es
fldcw
mov
imul
rcll
imul
scas
iret
push
ja
mov
xchg
push
mov
mov
addr16
xor
fistpll
test
push
pop
test
and
or
ja
les
pop
outsl
pushf
jl
fildl
mov
sbb
test
and
shll
loope
inc
jmp
in
je
dec
sub
pop
enter
orl
ja
xchg
xchg
js
sbb
call
push
rolb
fs
cwtl
loope
pop
test
scas
cmp
js
ret
mov
out
inc
ss
push
mov
es
shl
inc
fmull
pop
pop
add
aam
xchg
mov
jmp
fidivrl
sub
mov
cwtl
test
pop
xchg
je
mov
cli
push
jge
mov
jge
pushf
ja
mov
and
dec
testb
dec
sbb
mov
sub
mov
mov
mov
sbb
icebp
fsubl
sbb
and
loope
sbb
cmp
orps
sub
xor
adc
out
lods
pop
fwait
xlat
xchg
int
xchg
mov
rol
pusha
and
mov
xchg
pmulhw
inc
jge
data16
out
mov
push
hlt
ja
filds
inc
jb
lcall
int3
lods
mov
incl
jb
inc
ja
lret
mov
dec
and
dec
sbb
mov
mov
ja
psllq
inc
push
dec
divb
insl
jmp
aaa
and
mov
sti
sbb
aaa
aaa
lret
mov
xlat
div
cmpsb
inc
xor
rol
xchg
pop
aaa
mov
fistpll
xchg
xchg
ret
inc
mov
ds
xlat
fidivrs
ljmp
mov
mov
xor
aam
cs
out
adc
daa
or
inc
in
mov
call
mov
add
jp
xchg
lahf
dec
push
lret
out
push
popf
mov
cmp
mov
sbb
test
add
push
sub
clc
lret
mov
pop
mov
movsb
leave
and
mov
dec
inc
mov
inc
and
fchs
sbb
fstps
xchg
mov
ret
sbb
scas
xchg
fcmovnu
push
jecxz
clc
add
xchg
adc
test
add
rcll
jle
aam
cmp
jl
dec
loopne
jmp
adc
xchg
cmp
push
cmp
pop
jecxz
lds
imul
push
cmpsl
jmp
and
mov
sahf
shlb
mov
xchg
cmp
add
fst
xor
fwait
pop
shlb
adcb
scas
fs
push
movsb
outsb
push
jl
repnz
jo
fldl
sub
jb
and
orl
mov
lea
xchg
or
stc
aas
mov
mov
andb
cmp
dec
in
negl
sahf
xor
mov
xor
stos
xchg
addr16
addb
sub
fwait
sub
pop
cmp
arpl
fsubr
movsb
and
loope
mov
mov
mov
sarl
mov
outsb
les
mov
or
mov
test
pop
loop
lret
xchg
mov
push
and
cmp
sahf
out
aas
jbe
mov
xchg
lock
sub
mov
sbb
movsl
sbb
jge
mov
out
std
inc
jbe
and
cmpsl
xchg
mov
sahf
push
mov
aaa
cltd
dec
addr16
xor
mov
int
fs
mov
hlt
jg
insl
aaa
in
out
mov
and
and
xchg
mov
lods
leave
aam
or
mov
xchg
sbb
popa
pop
test
into
aaa
insl
pop
cmp
lods
icebp
pop
movsb
ficomps
pop
or
pop
and
inc
adc
adc
mov
movb
cmpl
leave
jmp
gs
cmp
xchg
subl
or
out
cltd
xchg
pop
and
iret
nop
cmp
pop
inc
push
push
sub
adc
cmpsb
sar
sub
and
scas
mov
xchg
push
fldt
fildll
in
int3
popl
dec
incl
cmp
inc
xchg
mov
push
mov
lahf
sbb
add
mov
es
xlat
xchg
fidivrl
jmp
js
fistl
xor
sub
xchg
inc
popf
pop
pop
push
popf
jg
je
sbb
mov
rcll
out
pop
jae
fmulp
push
dec
mov
popa
or
add
les
add
mov
xor
or
pop
push
pop
or
jmp
push
fcoms
shrl
std
pop
inc
mov
adc
clc
jmp
xchg
xor
int3
test
int
and
not
add
xchg
xor
jo
jg
ljmp
test
jnp
pop
push
scas
pop
mov
arpl
push
loopne
aaa
bound
jl
dec
xor
fwait
mov
dec
mov
xor
imul
out
stc
push
add
dec
loopne
xchg
dec
sbb
ret
out
lahf
je
inc
jmp
dec
test
xchg
push
imul
push
dec
gs
sbb
mov
data16
mov
test
sbb
icebp
jae
das
daa
xor
imul
cmpsl
or
sbb
clc
outsb
xchg
dec
xor
mov
xor
dec
repz
inc
orl
stos
mov
pop
inc
out
sar
movsl
enter
mov
push
outsl
pushf
jne
call
mov
jo
jge
arpl
inc
lcall
addr16
sub
lea
adc
pop
mov
mov
adc
mov
cmp
shlb
jecxz
push
test
aas
adc
or
add
sbb
jmp
pushl
insb
cmp
pop
or
imul
fstps
or
mov
mov
loopne
enter
mov
jle
sbb
divl
insb
cmp
xchg
ret
call
xchg
and
gs
push
das
icebp
cmp
pop
mov
adc
loop
dec
sub
jne
mov
dec
arpl
mov
lret
jbe
rorl
addl
insb
and
mov
mov
test
out
push
loope
sbb
and
out
push
pop
sbb
movsl
lods
repz
out
and
enter
das
mov
lea
mov
jb
or
or
outsl
jne
jle
push
or
push
in
cmp
dec
loop
xor
dec
xor
pushf
lret
mov
mov
test
mov
dec
adc
sbb
jmp
shl
push
lods
ds
xor
in
fidivs
in
mov
jnp
jbe
sub
scas
fsubr
dec
scas
add
mov
xor
sbb
mov
mov
fbstp
push
cli
es
lcall
add
push
inc
insb
cs
sti
mov
cmp
loopne
movsl
enter
pop
dec
jne
imul
mov
rolb
repz
xchg
ja
movsb
nop
mov
je
mov
jns
test
fistpl
btc
adc
mov
mov
test
rorw
pop
stos
sub
and
and
cli
ficoml
mov
cmpsb
dec
add
xor
fdivs
fmuls
dec
cmp
pop
test
data16
or
out
mov
mov
divb
negb
and
cmp
xchg
or
mov
pop
cmp
lahf
sub
leave
mov
and
cld
cmp
jbe
mov
dec
pop
data16
inc
enter
jg
call
in
sub
inc
jl
ret
stos
jnp
fs
xchg
mov
mov
lock
adc
mov
jge
mov
mov
outsl
call
scas
mov
fiaddl
xlat
push
xchg
push
cmpsb
xchg
ds
fdivl
mov
push
mov
test
mov
push
test
or
sbb
mov
cmp
mov
pusha
arpl
lods
dec
pusha
popa
cld
in
repz
xor
xchg
push
mov
repz
insl
ficompl
icebp
cmp
push
dec
mov
call
ljmp
rorb
pop
xchg
or
mov
or
rep
or
or
dec
xlat
js
in
scas
push
pop
push
jb
fsts
stos
add
fnsave
add
jae
mov
sub
scas
add
xchg
scas
cmp
push
mov
ds
clc
or
xchg
mov
and
loopne
stos
dec
inc
leave
adc
lret
ret
repnz
in
cmp
mov
or
inc
fsubp
add
and
movsb
jl
push
stos
cmc
xor
stos
insl
or
mov
out
ds
repnz
sbb
gs
mov
out
rcrb
iret
call
xor
iret
ds
push
pusha
jp
cmp
js
ss
dec
dec
je
xchg
aaa
mov
cmp
jb
test
je
push
mov
aas
xchg
add
sbb
xor
and
sub
test
cmp
mov
cmp
sbb
stos
mov
mov
pop
jmp
repz
sub
mov
xlat
mov
hlt
mov
movsl
sub
cwtl
dec
ljmp
and
imul
loop
mov
nop
cmp
sahf
xor
fdivrl
aam
es
sbb
dec
xchg
loop
adc
xchg
mov
and
outsl
push
imul
pop
lock
notl
mov
jnp
test
in
mov
or
mov
pop
add
shlb
das
stos
cs
push
mov
push
loop
push
pop
adc
into
pop
mov
das
lahf
xchg
sub
pop
mov
sub
popa
sarl
jae
xchg
cmpb
sbb
mov
mov
imul
jns
adc
mov
sbb
jmp
mov
ja
pop
outsb
xchg
aam
rcrb
test
sub
push
ja
shl
dec
sub
sub
mov
add
cmpsb
push
scas
or
fstpl
popa
insb
lret
add
bound
pop
sarb
cwtl
mov
push
mov
stc
iret
xchg
mov
sub
mov
inc
jmp
out
inc
or
imul
es
cld
or
adc
xor
mov
movsb
cmp
push
popa
inc
orl
adc
mov
jecxz
das
std
enter
imul
pop
and
and
xlat
gs
pop
mov
aam
in
in
pop
ret
dec
inc
add
mov
clc
fbstp
pop
cmpsl
inc
scas
lahf
or
jmp
loopne
and
dec
add
ret
add
out
xor
sbb
in
and
xor
je
lock
sbb
les
lods
imul
add
shrl
mov
test
andb
sti
pop
hlt
adc
lret
or
push
js
insl
ss
and
mov
rorb
fcmovnu
jbe
dec
push
jne
leave
sahf
in
jae
push
imul
aam
adc
lea
xchg
sub
push
cmp
lods
lea
sbb
sub
cli
mov
sub
dec
cmc
lods
push
lock
loop
xchg
rorb
pop
dec
inc
pop
je
mov
sahf
daa
xor
xchg
xchg
mov
add
pushf
lret
ficoms
dec
outsb
ret
rol
add
pop
add
inc
mov
stc
rol
mov
xchg
mov
cwtl
fsubrl
mov
push
inc
adc
gs
mov
lea
sub
xor
mov
rolb
sub
push
je
pushf
and
jge
xchg
je
jg
jnp
mov
push
xchg
inc
inc
add
jmp
test
das
in
stos
pushf
mov
or
aaa
and
cld
js
xchg
pusha
dec
imul
mov
xor
lcall
or
fisttpl
sub
jns
xchg
adc
pop
outsl
mov
inc
cmp
scas
jns
sbb
shl
ja
mov
xchg
addl
insl
inc
gs
xchg
xchg
mov
imul
dec
out
dec
push
pop
cmp
cltd
jno,pn
cmp
mov
ljmp
loope
scas
cmp
add
repnz
es
testb
lret
mov
push
lock
stos
fisttpl
negl
xchg
flds
add
pop
sbb
jae
loopne
ljmp
add
sbb
push
xchg
mov
mov
test
jbe
xchg
sbb
cmp
and
popa
gs
orb
adcb
lcall
jbe
xor
aas
es
sarl
push
int3
sbb
js
call
insl
stc
adc
pop
mov
in
cmc
ja
roll
sub
in
lods
sti
movsl
je
pop
jle
xlat
mov
mov
or
cld
inc
in
pop
dec
lods
push
inc
out
cld
cs
in
jnp
inc
fiaddl
and
cs
xor
adc
in
incb
jns
sub
aad
test
push
pop
xchg
fsubl
dec
push
mov
push
inc
or
or
xchg
popa
jg
jecxz
mov
popl
adc
push
loop
stos
sub
incb
add
xchg
mov
clc
adc
mov
out
adc
or
mov
insb
leave
orl
fucom
sub
xchg
lock
mov
cmp
sub
ficoms
inc
dec
xor
mov
cmp
push
notb
rcrl
pop
dec
cwtl
xchg
inc
and
inc
pop
jns
mov
mov
pushf
pop
cwtl
movsb
inc
test
fs
in
mov
cld
xchg
sub
add
mov
jmp
aaa
or
pop
mov
sub
loope
jnp
xlat
mov
movsl
jns
jecxz
xchg
in
ljmp
jl
imul
or
divl
cli
pusha
mov
pop
xor
ror
js
or
bound
icebp
lods
scas
jae
sbb
add
adc
test
mov
int3
mov
mov
xchg
mov
mov
ret
sbb
inc
rorl
xor
mov
fsubrl
daa
sub
pop
dec
or
xchg
or
nop
movsb
cmpb
or
add
xchg
mov
mov
in
iret
push
jno
cmp
jl
pop
mov
aas
push
xor
mov
in
jbe
xchg
out
jns
mov
pop
imul
shrl
cmc
fimuls
mov
cmp
enter
nop
mov
add
and
aas
lds
xor
jno
push
nop
jp
push
mov
mov
mov
inc
jecxz
and
jns
nop
xor
push
mov
addl
clc
push
inc
mov
mov
mov
sub
mov
dec
mov
fdivrp
imul
and
movsl
sbb
jne
jno
pop
movsb
jmp
out
add
or
movsbl
add
xor
mov
jne
sbb
pop
jecxz
mov
inc
pop
or
sbb
lea
and
mov
in
fldt
lods
mov
and
rcr
in
cmp
fisubrl
and
cmp
sbb
mov
repz
or
dec
push
xchg
mov
jae
or
loop
xor
cmpsb
mov
push
mov
xchg
ljmp
loop
xor
mov
pushf
xor
jecxz
cmp
mov
loopne
jmp
mov
enter
lods
js
daa
pop
test
mov
adc
dec
leave
push
sahf
adc
pop
int3
insb
push
ss
add
mov
pop
xor
dec
mov
stc
add
cmp
or
mov
mov
sub
insb
lcall
test
cmp
les
pop
mov
cmp
lods
pop
lahf
aaa
or
aam
cmp
sub
fidivl
call
fistl
push
dec
cmp
sbb
pop
rcrl
push
add
addr16
and
sbbl
aam
lds
loope
xorb
mov
in
nop
or
fcompl
shll
fisttpll
cmpsl
ja,pt
sub
test
mov
fnstsw
mov
movsl
test
mov
pop
or
call
dec
aas
push
ret
jbe
movsb
fisttpll
loop
out
pop
int
pop
xor
je
lcall
test
push
sub
nopl
or
sbb
inc
rcl
out
push
popf
js
push
icebp
and
xchg
sbb
clc
push
in
push
mov
insb
std
pop
scas
scas
cli
cmc
test
jle
adc
lods
or
in
adc
inc
adc
movsb
pop
jb
mov
in
cld
sahf
leave
jle
js
and
inc
mov
gs
enter
lret
fnstenv
decl
loop
int3
aaa
sbb
cltd
mov
sub
or
cwtl
dec
sub
out
inc
mov
bound
xchg
lret
cmp
cmp
js
int
sub
repnz
xchg
pop
testl
push
or
pop
or
inc
jnp
inc
cwtl
ja
bound
ja
xor
ds
xchg
inc
popf
mov
lret
and
mov
cmc
out
mov
xor
inc
sub
push
push
data16
push
ja
pushf
sbb
push
insb
mov
testb
in
ja
cli
and
pop
add
pop
out
cld
ret
jmp
je
xchg
scas
sbb
pop
sbb
xor
jmp
jns
movsl
jp
xchg
mov
sahf
push
nop
sub
mov
xor
and
push
pop
jns
mov
cwtl
xor
jae
mov
inc
aaa
xchg
push
sbb
scas
mov
cld
push
xor
push
testl
or
mov
adc
mov
jmp
push
adc
cmp
mov
mov
aas
les
sub
mov
mov
mov
and
movsl
imul
xlat
ds
xchg
fwait
jecxz
pop
add
lods
push
sub
mov
dec
sbb
and
ds
and
mov
lods
es
fadd
xchg
lret
jb
aam
adc
ljmp
and
loope
loopne
shll
push
and
int
mov
sahf
adc
and
aas
test
jp
push
sub
jbe
icebp
sbb
mov
nop
cs
dec
jns
loopne
in
enter
pop
icebp
xor
int
imul
dec
push
or
push
lcall
push
in
bound
nop
adc
sarb
push
jb
jne
repnz
jb
into
ljmp
xor
mov
repz
cmpsb
fsubrs
mov
jecxz
es
hlt
or
mov
hlt
stos
loope
adc
push
dec
movsb
sarb
and
xchg
fs
adc
rcll
fidivrs
lock
mov
inc
inc
test
dec
add
xchg
push
fsincos
addr16
jns
ret
xor
inc
push
jne
xor
inc
ror
sbb
push
cmc
xchg
xor
add
lcall
pop
popf
jge
push
push
aam
xchg
mov
push
iret
adc
push
dec
dec
sub
jle
mov
nop
jno
pop
push
adc
cmp
mov
push
fldenv
add
lea
test
cmp
fsubrs
push
pinsrw
push
jo
dec
cmp
lds
inc
adc
sub
leave
js
dec
pop
lock
mov
mov
pop
pop
mov
cmpsb
adc
pop
mov
out
jecxz
or
fimull
cld
xlat
adc
mov
fadd
mov
jae
adc
insl
jbe
ja
mov
mov
js
fsts
jecxz
stos
push
cmp
add
xorl
idiv
adc
inc
sub
xor
test
movsl
and
loope
mov
xor
shll
xchg
mov
popf
inc
arpl
pop
fsubs
xorb
sarb
push
sbbb
add
movsl
ja
push
subb
xchg
inc
adc
inc
mov
jl
out
rorl
fcompl
cmp
cmp
dec
adc
hlt
in
push
and
lcall
popa
nop
or
mov
xor
inc
les
fcomip
hlt
stos
repz
or
cld
ret
pop
mov
and
gs
jmp
inc
adc
rcrb
lods
hlt
xchg
imull
fwait
xchg
mov
movsl
dec
jb
cld
jns
mov
mov
clc
hlt
xchg
inc
rol
jne
mov
test
je
arpl
lcall
cmp
adc
addr16
imul
not
mov
xchg
mov
scas
movsl
cli
inc
pushf
mov
cmc
addr16
mov
addr16
imul
mov
cmp
jno
es
ficomps
data16
leavew
ret
daa
jne
dec
push
sbb
int
mov
jg
jo
loope
sbb
pusha
xor
das
push
dec
les
out
cld
pop
xchg
iret
inc
add
mov
ljmp
sub
xor
xor
cmp
xor
xchg
adcb
sbb
xor
sahf
ljmp
enter
mov
adc
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
or
dec
mov
loopne
pushf
jp
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
pushw
pop
cld
movsb
or
add
loop
or
jl
adc
dec
push
incb
xor
sahf
add
mov
mov
pop
aad
mov
pop
xor
lea
lret
xor
jns
lds
enter
pop
and
inc
ljmp
cmp
push
pop
sub
outsl
gs
cld
es
or
xor
push
and
data16
dec
jne
mov
insl
es
fdivrp
int
lret
pop
mov
push
sbb
popf
lock
push
push
int
mov
shll
fadds
mov
mov
pop
cld
and
or
jbe
shll
cmp
enter
and
xor
test
in
lret
add
das
daa
loopne
cmpb
ficompl
aam
vmread
popf
packssdw
jecxz
pop
lret
mov
sbb
inc
push
aad
mov
sub
jge
dec
rolb
xlat
loopne
es
outsb
push
ljmp
jecxz
push
daa
movsb
lock
jno
jg
repnz
stos
dec
roll
pusha
aaa
sbb
sbb
push
push
xlat
fldl
mov
out
out
in
xlat
loope
cltd
mov
test
and
aas
inc
fcmovu
sbbl
pop
sub
dec
shl
pop
nop
ror
bound
dec
jge
dec
mov
push
xor
xchg
push
xchg
xchg
or
mov
xchg
xor
aaa
dec
stos
loopne
rorb
fptan
jg
push
adc
aas
sub
sahf
cmc
and
dec
insl
jl
and
or
movsb
push
xor
sahf
aam
cmp
ror
dec
dec
jbe
lds
dec
pop
ret
mov
loopne
jecxz
loope
add
inc
leave
pusha
mov
or
mov
add
ja
idiv
jg
mulb
mov
add
add
and
jne
sbb
addr16
loope
xchg
cmpsb
pcmpeqw
outsl
in
jg
into
fnstsw
dec
in
push
dec
pushf
push
pop
mov
pop
neg
cmpsl
sti
jb
mov
mov
int
pop
sahf
sub
push
sbb
push
lds
fsts
pop
ljmp
mov
dec
aam
inc
jns
pop
repnz
sub
popa
cld
das
stc
dec
mov
push
push
xor
sub
cli
hlt
ds
jle
xchg
mov
mov
lds
rclb
fsubl
add
inc
mov
iret
xchg
pop
mov
push
xchg
nop
lahf
scas
test
pusha
xorl
cli
adc
add
jl
sbb
loope
fsub
mov
and
sarl
dec
cmpsb
aas
lcall
xchg
adc
popl
rcrl
add
mov
pop
sar
dec
and
aas
aas
insl
push
jnp
mul
fiadds
orb
xor
inc
pop
jbe
shlb
jle
inc
adc
cmpsb
jae
sbb
lods
mov
fisttps
popf
xchg
mov
pushf
enter
popf
ja
inc
jl
dec
adc
mov
les
fdivrs
xchg
or
andl
lock
addl
inc
repz
pop
jnp
add
mov
test
xor
mov
data16
call
sub
dec
addr16
mov
jae
lcall
inc
cmp
pop
orl
movsb
jns
mov
out
stos
je
mov
out
cwtl
add
xor
mov
sbb
cmp
xchg
pop
rolb
adc
in
jle
shr
fstp
cmpsb
mov
insb
push
adc
test
add
sbb
pop
std
jg
les
add
add
add
insb
ret
pop
push
sarb
sbb
ja
mov
push
adc
inc
jge
nopl
inc
daa
and
data16
xor
enter
test
mov
ljmp
mov
and
aas
push
outsl
imul
sbb
sahf
ss
jne
std
pop
lea
dec
push
add
push
sbb
movsb
push
cmp
xchg
mov
fdivrl
idivl
mov
sub
add
push
imul
cmp
rcl
mov
lds
push
es
cmp
js
jno
sub
adc
bound
mov
cmp
fwait
jp
aaa
pop
ss
and
pop
lds
dec
mov
inc
cmpsl
repz
push
dec
jg
test
or
ret
and
jle
test
dec
xchg
and
roll
inc
mov
jge
repz
add
inc
pop
push
test
mov
lret
xlat
sub
mov
pop
sub
mov
push
xor
mov
scas
mov
xchg
xchg
cltd
xor
ud2
xchg
inc
fwait
ret
mov
or
je
xor
lret
pop
addr16
and
xchg
dec
cmp
out
stos
ret
sbb
ja
push
decb
stos
insb
out
sbb
jo
ja
sub
jne
cltd
das
fcoms
jbe
push
insb
shrb
hlt
dec
add
cmc
pop
xchg
pop
mov
push
scas
enter
loop
repnz
or
push
and
ret
and
jae
push
inc
pop
add
popf
add
xlat
add
addr16
lods
mov
cwtl
sub
or
fisubs
dec
mov
xor
aas
jns
bound
sub
aas
xchg
xor
jbe
add
xor
or
jmp
xor
add
add
mov
int
mov
lock
add
add
nop
push
inc
imul
sbb
xchg
ffree
test
sbb
push
imul
sbb
pop
out
sub
dec
daa
adc
mov
cmp
cli
shll
cld
cmp
popf
pop
or
cmpsb
jne
jns
subl
xchg
push
mov
iret
lods
mov
pop
dec
pop
jecxz
pop
jle
aad
ds
push
mov
in
lret
xchg
xlat
movsb
loop
xchg
xchg
cld
pop
aam
sbb
movsb
mov
adc
gs
mov
cltd
loopne
sbb
test
inc
cli
ljmp
lcall
insb
sub
inc
in
mov
icebp
push
xor
call
sbb
filds
cmp
jne
inc
rcl
out
in
xor
xor
es
add
divb
xchg
cmp
mov
fcomp
lret
iret
ljmp
aad
hlt
test
dec
pushf
lods
sbb
stc
int
cmc
pop
js
fsubr
fs
aaa
lds
test
jge
jge
cwtl
enter
clc
pop
in
xor
and
sti
loop
out
sub
mov
mulb
mov
lods
push
inc
dec
ret
mov
inc
sub
jp
inc
cmp
pushl
and
cld
sti
add
adc
xor
dec
mov
sbb
sub
repz
push
test
and
mov
ret
sub
rcll
or
call
imul
lods
idivb
mov
stc
dec
xlat
mov
call
xchg
adc
mov
lods
lcall
mov
loope
idivb
in
and
pop
push
inc
scas
lcall
dec
test
dec
pop
arpl
adc
daa
dec
cmp
xchg
adcl
js
rcr
add
js
hlt
mov
std
jl
xor
jg
jo
add
mov
add
add
add
mov
sbb
sbb
sbb
aaa
pop
push
gs
xor
push
lods
inc
insb
or
jge
mov
cmpsb
mov
popa
mov
mov
mov
or
pop
xchg
fs
icebp
fsubr
xor
enter
ds
jbe
mov
ret
aad
add
gs
add
mov
sub
fcomps
scas
pop
insl
sub
adc
cmc
xchg
cmp
push
add
and
and
xchg
out
xchg
mov
mov
jg
loopne
scas
pushf
lret
fs
inc
cli
mov
xor
lds
cmp
cmc
mov
ret
rorl
ficomps
jb
cli
lds
fs
lret
rorl
test
xor
jp
out
inc
cwtl
dec
sub
lea
pop
and
test
jnp
in
test
arpl
push
push
mov
jb
pop
xor
sbb
in
mov
rcrb
sub
adc
sbb
scas
addr16
jb
dec
std
xor
aad
mov
loopne
outsb
jecxz
repnz
mov
mov
sub
push
jno
lock
pop
gs
xor
mov
insl
mov
inc
cmp
aam
mov
jp
loop
push
mov
das
fneni(8087
lcall
fisubrl
popa
ljmp
icebp
pop
fwait
pop
sub
pop
movsb
adc
xchg
rorb
jle
jecxz
or
adc
inc
ret
xchg
xchg
xchg
lret
shll
xor
mov
adc
cmp
call
out
ret
mov
jmp
push
imul
int
inc
xlat
inc
jl
arpl
je
aaa
lret
aam
sbbl
sbb
addb
add
imul
fdivrl
and
adc
mov
add
add
add
jmp
push
pushf
inc
outsb
sub
and
test
push
bound
movsl
jle
sar
push
int3
cmp
jge
push
push
dec
mov
outsb
sub
jo
adc
neg
enter
mov
add
push
xchg
mov
mov
mov
cmp
pushf
les
push
int3
mov
int
jge
inc
rclb
cwtl
jae
push
push
stos
addr16
lcall
test
adc
cmp
sbb
loopne
icebp
pop
jecxz
xchg
fwait
push
mov
adc
pushf
pop
jecxz
std
addl
in
adc
jecxz
stos
insb
push
outsb
popf
andl
jl
sub
jge
sub
in
mov
push
fincstp
sarb
aam
pop
sub
jo
sub
sbb
cmp
iret
or
pop
xchg
sarb
fsubrl
xor
lcall
rcr
push
xor
ficompl
xor
call
pusha
insl
and
dec
jno
fmull
cmpsb
cltd
ret
cmpsb
xor
jl
sub
mov
add
ret
stos
jbe
in
movsl
lods
ljmp
out
stos
testb
stc
stos
jge
jp
xchg
mov
cmpb
aad
dec
rorl
cmpsl
sahf
push
or
jmp
or
loop
int
xor
das
fcmovu
rolb
mov
dec
scas
pop
in
in
push
sbb
mov
cmpl
mov
sub
add
mov
push
stos
add
lods
outsb
inc
sub
popa
shr
stc
jp
inc
js
stos
dec
or
adc
test
pop
push
lcall
pop
jl
add
aam
hlt
daa
sbbl
push
int
sbb
cld
nop
sbb
or
movsb
imul
test
negl
adc
add
jg
pop
fstps
cld
mov
add
add
add
jl
out
shll
add
out
daa
xor
mov
jp
add
stos
inc
rcrb
add
in
nop
je
xor
xor
cmpsb
sti
scas
jl
rcll
push
lods
or
pop
dec
arpl
xchg
notb
cli
adc
mov
iret
in
out
dec
dec
mov
scas
sbb
or
pop
pop
cltd
pushf
mov
push
pop
fnstsw
adc
cmp
pop
clc
inc
mov
cmp
movsl
sti
xchg
leave
cld
js
gs
pop
sbb
sub
push
lods
js
lcall
out
int
sbb
jge
or
mov
arpl
cs
push
sbb
test
xor
ffree
mov
dec
adc
sbb
pop
jmp
xor
pop
popf
mov
mov
inc
mov
pop
inc
lret
adc
pushf
dec
dec
inc
shll
lcall
lret
jp
pop
sbb
cltd
enter
inc
mov
mov
repz
jge
mov
xor
mov
mov
xchg
fidivl
sub
jmp
insb
daa
xchg
jge
fsubp
in
ret
in
loop
xchg
int3
in
loope
push
jbe
ja
push
push
movhps
fprem
outsb
jnp
incl
sub
test
addr16
dec
cli
xchg
icebp
shlb
imul
or
and
sub
lea
jne
stos
dec
jge
fldl
or
inc
ds
cld
mov
jp
cmp
jge
push
mov
ja
inc
movsl
ljmp
inc
mov
adc
sbb
add
sbb
insb
pop
stos
stos
scas
xor
in
adc
xchg
ficoml
pop
inc
iret
outsb
xor
xlat
sub
mov
jno
cmpsb
adc
add
add
add
popf
paddd
fidivl
xor
aaa
inc
cli
nop
add
incb
add
andl
movntq
cmp
xchg
lcall
shll
adc
adc
decb
nop
shll
or
xchg
xchg
mov
dec
or
lret
sbb
lcall
andl
fxch
xchg
in
std
fcompl
xchg
push
cmp
popa
or
fs
dec
insl
inc
jle
shrb
xlat
dec
sbb
add
jmp
std
cmc
push
cwtl
inc
ss
push
push
sbb
test
ret
es
pusha
or
push
bound
rcrb
pop
push
leave
push
gs
mov
lea
xchg
lret
jge
js
sbb
or
leave
insl
jp
and
bound
push
lea
fcmovnu
dec
jmp
fnstsw
sub
xchg
sub
loope
add
lea
dec
inc
jae
lea
inc
mov
mov
cmp
pop
imul
mov
push
mov
cli
movsb
mov
pop
lods
jb
loope
hlt
test
pop
and
fisubs
test
hlt
inc
stos
ss
pop
in
push
out
ficomps
lea
mov
adc
jbe
nop
fwait
arpl
dec
pushf
cmp
xchg
or
test
outsb
adc
jmp
sbb
inc
inc
sub
into
xchg
cmpsb
addr16
inc
test
mov
or
imul
lret
lret
fwait
in
jge
roll
fnstcw
gs
jnp
dec
gs
add
ljmp
cmp
lods
shl
xchg
mov
xchg
cwtl
lea
outsb
jno
andl
ret
xor
je
ret
fisttps
and
loope
gs
jno
adc
test
sbb
push
mov
xchg
mov
aad
add
push
movsb
lea
sub
divb
sbb
xchg
add
incb
add
repnz
ja
movsl
add
xchg
movsl
mov
call
mov
jp
inc
add
lds
cltd
fisubl
push
fwait
test
or
shrb
loope
sbb
scas
cwtl
cld
xchg
enter
cmpsb
jle
mov
lahf
cmp
ret
test
cmp
out
mov
out
ja
out
into
or
pushl
cmp
sbb
sbb
or
insb
dec
sub
adc
pop
movsl
jge
dec
lret
or
daa
sbb
sti
cmc
push
addr16
bnd
dec
sbb
inc
movsl
mov
sub
cmp
rcr
je
cmpsl
xor
pop
test
fldenv
jmp
sbb
stos
jmp
pop
xchg
cmp
xorl
je
xor
or
sbb
mov
pop
pop
shll
aas
cmp
dec
mov
dec
push
in
and
lret
and
les
lret
jl
andb
push
sbb
cmpsl
insl
inc
jmp
sbb
icebp
xchg
sbb
push
fnstsw
and
jmp
and
arpl
sub
and
jecxz
cs
mov
into
mov
lock
jmp
fsubs
adc
jns
lret
or
out
inc
ret
pop
fists
arpl
jle
daa
int3
repnz
icebp
inc
je
and
pop
adc
mov
lock
mov
add
mov
jo
push
rorl
daa
xchg
popa
mov
add
pop
jne
je
mov
jecxz
jmp
loop
aas
xchg
lret
sub
mov
inc
push
pop
stos
xchg
jge
lcall
dec
popf
lock
iret
sub
jbe
mov
mov
pop
mov
xchg
outsb
push
and
add
test
mov
pop
notb
add
jbe
sbb
xor
push
lods
sub
movsl
outsl
mov
mov
test
jmp
push
mov
adc
bound
test
mov
xor
insb
fwait
bnd
ror
sub
out
mov
scas
adc
stc
mov
pop
cmp
sub
jge
loope
into
cmpsb
outsl
movsl
xor
loope
sbb
das
jne
fstpl
xlat
es
hlt
cmp
test
lcall
faddl
mov
mov
jmp
cmc
push
shl
adc
mov
mov
xchg
dec
mov
xchg
cmp
add
cwtl
test
fsubs
repnz
fsubrp
out
icebp
jp
mov
xor
data16
cmp
std
sub
lret
mov
and
pop
aaa
popa
insl
sub
repz
cmp
out
xlat
ja
pop
das
and
lahf
mov
jnp
add
hlt
adc
loop
fiadds
dec
insb
sub
pushf
push
fldl
inc
jbe
cmpsb
pushf
lods
movsl
inc
xor
pop
mov
cmp
cs
out
shll
cmpb
ljmp
sub
repnz
stos
movsb
cmp
sbb
dec
idivb
lret
add
push
out
cmp
mov
inc
mov
pop
push
jle
ret
movl
into
mov
mov
shrl
scas
call
or
push
inc
add
jae
adc
push
push
jae
iret
lahf
mov
push
sub
aas
out
jo
sbb
int
pusha
push
icebp
push
xor
xchg
clc
stos
cmp
stos
lods
mov
mov
adc
call
jmp
sahf
testl
addb
std
xchg
loopne
bswap
pop
push
aad
lods
dec
push
data16
add
xchg
std
jg
mov
mov
hlt
xchg
add
incb
add
jmp
add
cli
in
loop
mov
xchg
add
loop
sub
out
shl
add
adc
cmc
dec
mov
dec
mov
push
mov
leave
add
xchg
lock
push
fldt
or
inc
push
jmp
lods
in
fisttpl
scas
jge
filds
adc
xor
sbb
xor
syscall
dec
repz
std
xchg
mov
xor
and
inc
insl
fwait
pop
pop
xchg
pop
js
int3
pop
inc
popa
jo
jnp
mov
pop
or
sbb
dec
pop
outsl
cwtl
mov
sbb
icebp
ds
mov
and
mov
sbb
jno
dec
push
mov
fs
cmp
jae
scas
lret
stos
mov
dec
pop
out
insb
inc
push
lret
jbe
and
jnp
icebp
dec
sbb
ljmp
arpl
xchg
sub
mov
xchg
mov
test
and
or
pop
sahf
mov
pop
test
cs
into
cmp
and
sbb
jmp
in
stos
outsb
shll
xor
mov
mov
jnp
mov
int
out
xor
fsts
pop
sti
lret
test
lock
sti
xor
je
mov
andl
test
iret
bound
pop
out
daa
push
xor
xchg
cli
movsl
jb
repz
sahf
or
or
lock
movsb
aad
add
repz
test
push
scas
or
int3
xorb
in
ljmp
dec
and
out
negl
pushf
mov
mov
daa
cmp
lret
mov
sub
cmp
pop
push
mov
loopne
lock
mov
jbe
mov
or
add
mov
idiv
iret
rorl
mov
std
pusha
repnz
add
incb
add
jg
xor
arpl
imul
lea
pop
xchg
in
test
popf
pop
inc
jle
mov
dec
sar
and
add
movsb
inc
ret
sub
mov
mov
pop
fs
add
xor
aas
pusha
xor
xchg
inc
cwtl
fcmovb
lret
dec
das
adc
or
out
sub
jbe
xchg
mov
rorl
mul
and
jns
ljmp
rcrl
push
imul
test
pop
push
jge
xchg
loopne
nop
das
dec
lret
or
fisubrl
mov
add
dec
cmp
or
dec
sub
mov
and
in
insl
inc
push
xchg
and
cltd
jg
dec
or
or
idiv
mov
hlt
imul
icebp
cltd
pop
push
and
test
call
mov
pop
mov
bound
xchg
adc
xor
adc
leave
mov
gs
sub
xchg
mov
jge
jge
xor
or
xchg
jg
cs
jp
jae
incl
ds
fld
jge
add
push
and
xchg
lahf
add
dec
xchg
imul
ret
enter
divb
or
stos
pop
movb
in
or
lock
je
jne
divl
xchg
inc
ret
lods
fs
mov
dec
mov
pop
lods
test
ds
ds
test
adc
dec
mov
add
lods
pop
push
cmc
inc
daa
mov
js
sbb
mov
arpl
mov
into
lea
mov
sarl
cmp
mov
xor
add
or
aaa
lret
xor
push
bound
cmp
and
aam
out
pop
outsb
mov
gs
ret
add
ret
mov
ja
or
loop
lcall
insl
ficompl
adc
andb
stos
test
mov
fstpt
in
aaa
jp
mov
mov
pop
sub
or
pop
mov
je
xor
pop
sahf
sbb
cmp
leave
pop
in
sbb
pop
mov
cmpsl
subb
push
jbe
dec
pop
adc
jb
mov
pop
push
mov
out
pop
and
mov
mov
sbb
cmpsl
out
movsb
xchg
lcall
cmc
and
xchg
mov
lods
movsb
jmp
test
fdivp
push
push
pop
and
hlt
push
push
bound
stc
mov
xchg
adc
cltd
inc
jo
outsb
sub
push
mov
cmp
mov
out
jmp
mov
push
sub
mov
inc
inc
mov
out
fdivrl
cmp
jp
pop
es
mov
inc
mov
enter
mov
sbb
dec
ret
dec
repz
fcmove
mov
or
push
loop
push
adc
cwtl
xchg
xor
movsb
or
xor
or
pop
pusha
sbb
in
and
pop
in
rclb
xor
cmpsb
inc
push
mov
mov
mov
and
add
pop
adc
std
subl
xchg
cmc
jp
jp
lret
in
outsb
jle
sbb
mov
je
mov
sbb
pop
mov
xor
and
pop
and
push
inc
in
test
jnp
cmpl
mov
and
test
sub
arpl
js
dec
xchg
sbb
inc
sbb
insl
aaa
push
shll
and
aam
cmp
fmuls
mov
ret
adc
add
push
push
jle
xlat
lret
push
testl
pushf
add
incb
add
fisubl
aas
imul
aam
mov
lea
jmp
pusha
lcall
es
movsl
hlt
loopne
cmpl
cmp
repz
fwait
inc
in
repnz
fisttps
push
pushl
xor
mov
sbb
jp
test
inc
mov
into
push
lret
stos
mov
push
fcomi
movsl
add
pop
inc
js
cmp
imull
sub
scas
lcall
cli
out
sbb
cltd
dec
popf
es
xchg
loopne
clc
lcall
jp
and
sbb
sub
mov
dec
iret
push
xor
xchg
rcl
stos
in
jbe
lcall
aas
cld
xchg
lret
adc
faddp
imul
aas
or
fcomip
loopne
mov
and
jb,pt
repnz
fmuls
sbb
lcall
push
stos
test
in
std
in
inc
scas
ret
mov
jbe
ljmp
jns
dec
outsb
cmp
loop
lds
xchg
push
mov
and
iret
jae
sahf
repnz
jecxz
cltd
xchg
ds
mov
xor
int
test
es
pop
inc
xor
test
add
xor
jbe
arpl
test
sti
mov
sub
add
es
mov
pop
jns
jmp
psubw
pop
xor
mov
mov
push
xchg
jns
and
mov
or
push
lds
or
jnp
push
loop
or
shrl
cli
or
stos
dec
enter
aaa
pop
sahf
cs
aas
icebp
cld
pop
mov
test
mov
sbb
fadds
mov
lahf
in
inc
jns
in
aam
imul
sub
ss
lret
ljmp
add
adc
or
pop
out
repz
fucomp
fldln2
cmpsl
paddsb
add
aam
out
std
rorl
push
cmpb
dec
idiv
cmp
test
notl
cli
inc
cmp
les
movsl
jp
push
lcall
jnp
fs
test
push
add
lret
push
push
adc
or
push
add
push
mov
cmpsl
and
das
cs
sub
fisubs
jbe
ljmp
nop
push
dec
cwtl
mov
dec
and
and
lret
inc
mov
or
jno
xchg
pop
mov
hlt
ja
aad
xchg
dec
adc
lret
xchg
pop
add
mov
adc
popa
call
xchg
scas
les
fidivl
sbbb
jae
movsb
outsl
enter
dec
scas
lods
in
push
adc
inc
into
add
stos
push
cmp
adcb
pop
stc
out
out
popa
add
jge
lods
pushw
add
pop
div
leave
cmp
fs
jmp
repz
scas
adc
add
fistps
hlt
xchg
enter
pop
cmp
pop
push
push
hlt
pop
insb
subb
and
cmp
and
sub
mov
popf
in
cmp
lods
jmp
cwtl
jmp
jp
aad
aas
sub
dec
add
rcr
mov
test
repz
push
xchg
mov
sbb
aad
fcomps
stos
add
lcall
dec
mov
cmp
add
mov
scas
std
inc
push
loopne
mov
xor
mov
lcall
aam
dec
test
aad
lret
jno
hlt
test
test
jnp
mov
cwtl
adc
callw
mov
aad
addl
add
add
add
xchg
insl
mov
out
nop
sbb
xor
add
add
add
xchg
pop
or
dec
dec
or
sbb
in
mov
fstps
ss
and
adc
jl
push
inc
or
mov
shl
mov
xchg
mov
push
pop
dec
pop
dec
hlt
test
std
pop
jbe
dec
xor
cld
cwtl
je
lock
jb
pop
jo
mov
jo
add
addr16
ja
jnp
inc
and
add
jbe
lock
xor
push
test
mov
int
or
scas
shll
add
or
mov
sub
gs
pop
add
cld
jo
mov
or
adc
roll
pusha
aas
enter
inc
call
sbb
mov
leave
pop
fistl
mov
mov
pop
std
int
test
rclb
xlat
cli
out
popf
xor
push
iret
movsl
neg
ja
mov
loopne
dec
popf
sti
sbb
inc
jno
xor
hlt
and
loop
inc
jecxz
or
pushf
ja
std
sti
dec
jg
and
adc
sahf
jle
push
aad
sbb
fadds
or
cld
mov
js
shll
lahf
inc
data16
hlt
pushf
imul
lods
std
nop
jbe
leave
mov
and
xchg
fwait
push
sti
lahf
outsl
sub
cs
imul
in
mov
out
inc
notb
add
arpl
sub
add
shrl
xchg
mov
mov
xor
arpl
mov
mov
js
mov
shll
mov
xor
popa
mov
jmp
les
out
cltd
data16
pop
shlb
push
sarl
in
mov
inc
imul
pop
dec
jns
cmp
add
ja
idiv
pop
out
cmp
repnz
incb
add
fdivrs
mov
jns
popf
jae
mov
fidivl
mov
add
push
jmp
outsl
mov
inc
js
adc
test
cld
pop
cltd
rcll
pop
sub
push
xchg
add
or
pop
cmpsl
mov
xlat
push
or
aam
mov
pop
dec
mov
adc
push
ret
inc
sub
int3
fimuls
mov
pop
sbb
rorl
ret
sub
sti
dec
sub
imul
stc
push
mov
dec
mov
lcall
test
dec
fwait
into
xlat
dec
nop
xchg
insb
push
aam
dec
sbb
stos
xor
inc
divb
adc
stos
cmp
inc
jle
ljmp
jb
jmp
inc
fbstp
dec
add
xchg
pushf
and
inc
mov
idivb
test
push
dec
sbb
xchg
test
pop
or
mov
mov
std
std
jnp
jb
sub
pop
xchg
push
jno
mov
sub
ficomps
loop
imul
scas
fisubrl
inc
push
int
daa
jp
jo
jge
jmp
xchg
shll
insl
enter
cmp
sarl
dec
lods
hlt
int
add
dec
cltd
pop
cmp
das
push
add
enter
sub
cwtl
or
mov
out
mov
cmp
pop
mov
xchg
xor
icebp
mov
or
leave
daa
daa
add
int
cmpsl
cli
push
sub
fdivrl
das
leave
xchg
popf
subl
shlb
leave
shll
cmp
push
mov
pop
pop
cmpb
mov
add
sbb
jmp
push
faddl
leave
mov
mov
mov
sub
mulb
mov
pop
testl
jecxz
xchg
push
inc
imull
cld
jecxz
add
mov
pop
jecxz
sti
mov
inc
shlb
add
incb
add
mov
xlat
push
xchg
fcoml
or
nop
add
dec
mov
fisttpll
push
and
adc
pushf
adc
sub
outsl
je
pop
lock
fs
jecxz
dec
fists
sbb
in
ja
imull
outsb
std
jmp
fld
xchg
mov
mov
pop
xor
repnz
pop
sub
hlt
add
jns
lock
rcrl
test
adc
mov
or
jb
scas
mov
insl
movsb
loope
out
pop
jb
cs
lock
cmp
stc
cmp
imul
cmpsl
shll
rcl
jbe
addl
into
jb
push
sub
std
ficoms
xor
pusha
mov
fstpl
fadd
in
repz
inc
call
lods
out
or
jno
shll
mov
fisttpl
out
sbb
fildl
scas
fmulp
into
orl
xchg
data16
fldt
xchg
jge
mov
andl
shl
jl
cmpsl
jle
xor
jmp
iret
outsl
mov
jle
mov
test
aad
orl
out
push
idivl
or
loop
cmp
enter
sbb
cwtl
out
push
jb
mov
stc
test
dec
pop
arpl
jae
pop
cmpsl
pop
and
mov
inc
and
pop
rcr
in
call
mov
clc
inc
xchg
mov
mov
cmpsl
push
jge
cld
ljmp
pop
mov
in
int3
out
test
sub
pop
pop
mov
adc
xchg
pop
jmp
roll
jbe
movsl
push
shr
jg
sub
or
cmp
cmc
push
mov
sub
insl
add
xor
sahf
xor
sub
outsl
pop
push
in
add
incb
add
inc
icebp
decl
idivl
and
mov
mov
mov
imul
lahf
inc
arpl
je
imul
shrb
jl
and
fisubl
cmp
aam
jne
push
or
test
push
ficompl
rorb
sahf
mov
in
cmc
jp
ror
nop
mov
test
cmpsb
lods
xchg
mov
push
test
stc
outsb
mov
test
fiaddl
stos
sbb
adc
les
pop
aad
mov
push
mov
or
mov
rcrl
jnp
notb
jmp
mov
jbe
mov
sub
xor
push
push
stos
mov
mov
add
mov
ror
push
inc
leave
push
push
subb
ss
std
cltd
pop
testb
jecxz
add
nop
cmpsl
test
cmpsb
jbe
scas
pop
pxor
push
mov
xchg
xor
fistpll
lods
or
pop
imul
js
mov
jl
sarb
leave
push
lods
mov
pop
addr16
and
jp
cwtl
repnz
pusha
test
stc
sarl
pushf
xor
adc
cld
sub
mov
sbb
in
popa
adcl
dec
jo
xchg
lock
inc
push
and
jne
pushf
push
movsb
adc
pushl
jmp
bound
push
les
sbb
cli
xchg
fcoml
mov
std
mov
ret
stos
or
fnstsw
mov
sbb
call
xor
inc
loop
cltd
pop
xchg
in
icebp
xchg
inc
stos
ret
add
imul
jg
out
cltd
lds
bound
sub
mov
lods
in
xor
xchg
xchg
adc
pop
cmp
jno
cmp
andb
add
add
add
stc
std
in
mov
mov
std
cmp
test
add
add
add
je
ja
pop
mov
push
mov
and
jae
lcall
test
dec
adc
mov
mov
mov
pushl
mov
cmp
int
shl
ss
and
mov
mov
repnz
hlt
xor
jne
ljmp
xchg
dec
push
lock
xchg
pop
jno
pop
out
mov
ljmp
call
cltd
sbb
out
fildl
je
jae
enter
jae
std
mov
add
sahf
xor
arpl
sbb
push
fsubs
loopne
push
rorb
lods
sbbl
mov
ret
arpl
and
testb
cli
nop
into
and
in
lret
jmp
add
sbb
out
cmp
mov
std
aas
aaa
int3
in
sub
push
xor
push
sbb
repnz
mov
mov
jecxz
xchg
cs
daa
cmpsl
dec
mov
xchg
scas
xchg
sub
pop
inc
icebp
inc
popa
pop
aaa
outsb
test
lock
xor
rol
pushf
dec
movsl
ret
and
xchg
inc
pushf
xchg
and
cmp
push
jl
fmuls
fstps
cltd
repz
push
loope
out
insl
imul
repz
mov
cmpsb
ss
mov
cs
xchg
daa
xor
or
mov
pop
sub
gs
xchg
testb
ret
outsb
fs
lock
xor
lods
pop
cmp
orb
loope
sbb
cmp
popf
hlt
and
dec
jo
out
sub
sahf
sbb
cmp
loop
cmp
int3
pop
inc
iret
int3
repnz
repz
rol
les
and
loopne
cwtl
add
sbb
pop
pop
das
cmp
iret
outsb
push
aad
mov
call
mov
fs
xor
push
stc
xlat
cmp
sbb
add
repnz
testb
inc
ret
mov
incb
add
mov
into
bnd
dec
je
inc
lods
cmpsl
shrl
push
or
lret
ss
push
pop
add
jp
mov
and
lock
push
enter
dec
fcomps
hlt
imul
test
mov
inc
and
std
cld
sarl
imul
xchg
arpl
mov
fs
imul
data16
movsb
in
lock
jae
inc
sbb
rcl
cmp
scas
cs
iret
adc
outsl
push
add
sbb
sahf
adc
sub
repz
jo
test
dec
nop
shrl
outsl
mov
sti
mov
push
shll
outsl
rcll
jecxz
ljmp
test
rorl
js
call
pop
push
rclb
loop
xchg
out
sub
xchg
sbb
in
and
pop
movsl
jne
or
outsb
fists
daa
and
xchg
pop
std
push
insl
aaa
adc
in
or
stos
imul
and
or
nop
jne
xchg
or
mov
add
vmovntpd
dec
in
lock
lods
ss
and
xchg
stc
push
jecxz
pop
outsb
loopne
sti
daa
mov
repz
cltd
ljmp
xor
arpl
in
bound
adc
outsb
mov
cli
sti
xorb
fwait
xchg
cli
mov
xor
jnp
insb
cmp
mov
test
mov
sub
iret
pop
fidivl
jge
inc
jno
faddp
sarb
fsubp
outsl
adcb
imul
fdivrp
cwtl
mov
inc
cwtl
xor
mov
pop
out
leave
push
iret
lods
mov
xor
xor
jns
cmp
mov
je
inc
cmp
add
popa
data16
gs
mov
pop
jl
add
lods
add
incb
add
loop
loopne
add
insl
dec
fisubs
les
xor
lock
je
dec
inc
lahf
imul
inc
xchg
and
outsb
jne
jo
inc
bound
mov
aad
xlat
or
pop
dec
mov
fidivs
cmpsl
std
frstor
push
cli
mov
cmpsb
adc
imul
dec
js
adc
or
mov
rorb
jmp
inc
inc
xchg
cli
pop
xor
rorb
jb
mov
icebp
es
subps
ljmp
inc
cmp
pop
push
pop
mov
sahf
bound
add
int
into
sub
mov
pop
outsb
mov
mov
vphaddubd
pop
inc
jmp
pushf
and
cmpsl
js
or
ror
pop
push
mov
lret
jno
stos
sbb
sbb
fisttpll
mov
adc
into
je
xor
scas
aas
test
sbb
jmp
fsts
pop
in
dec
and
xchg
scas
ja
mov
cmp
jle
xchg
pop
mov
add
shll
pop
push
rolb
and
xlat
adc
incl
pop
push
sub
inc
arpl
rcrb
mov
cmp
mov
shl
xchg
push
cmpsl
dec
mov
mov
call
sub
scas
fucomp
push
mov
xchg
inc
jecxz
sbb
cmp
jmpw
rcll
mov
jp
aam
mov
sub
adc
mov
jp
cwtl
mov
rolb
lods
test
jns
std
popf
mov
add
stos
dec
hlt
int3
mov
retw
dec
lock
leave
jb
testb
jnp
xor
xor
add
cmp
cli
cmp
adc
pop
or
fsubrl
add
lods
sahf
test
jb
loope
xchg
fisubs
sti
mov
mov
ja
pop
jbe
mov
jmp
mov
push
jno
or
mov
test
ds
sahf
jo
sub
push
lret
scas
dec
jle
loop
loope
mov
cmpsb
dec
push
mov
mov
jg
in
cmpsl
cmc
stos
mov
fwait
xchg
jmp
fists
cltd
adc
adc
jo
out
sbb
jmp
aad
pop
jnp
js
out
ds
orl
mov
fwait
lods
sub
inc
jp
xchg
fstps
stos
jbe
out
xabort
movsb
fnsave
mov
test
std
popf
jmp
and
xchg
popa
xor
mov
dec
aaa
pop
outsb
imul
outsl
popf
fwait
test
cmp
icebp
fstpl
call
or
inc
lret
pop
imul
addr16
jg
gs
sahf
ret
sbb
addr16
add
or
loope
lret
jle
push
repz
add
push
xor
jae
mov
mov
jae
pop
sahf
inc
adc
cmp
jno
mov
push
aam
lea
add
arpl
stos
sahf
add
jno
pop
dec
fistpll
jg
sbb
cld
jmp
mov
pushf
add
cmp
sbb
pop
mov
icebp
scas
ss
jo
or
das
in
or
dec
mov
fucomip
inc
push
movsb
rorb
sbb
cwtl
mov
sbb
add
mov
out
andnps
and
or
icebp
add
mov
mov
xor
pushf
mov
pop
ror
xor
enter
out
out
pop
and
cwtl
in
nop
add
dec
or
stos
cmp
mov
leave
negl
shlb
xchg
lcall
cmp
push
leave
arpl
fidivl
add
push
fwait
xchg
mov
fsubs
dec
int
cmp
cmp
lods
adc
mov
adc
imul
jl
jmp
push
sbb
roll
gs
stc
jge
out
outsl
jmp
mov
pop
xchg
xor
dec
mov
jbe
adc
rolb
sarl
jne
pop
movl
arpl
out
mov
cmpsl
xor
adc
incl
adc
setnp
mov
and
je
sbb
pop
dec
enter
cltd
rcrb
outsb
ljmp
je
xchg
xchg
scas
in
mov
inc
data16
xorl
push
mov
ds
fstl
lods
mov
inc
sbb
imul
add
ret
popf
cmpsl
enter
loopne
int
or
push
xor
cmp
or
ret
or
jg
jmp
adc
or
cmpsl
sbb
mov
dec
aam
imul
leave
xor
cmp
pop
push
cmpb
fildll
inc
xchg
mov
jge
xor
jecxz
fldt
and
jl
inc
int
sahf
arpl
fstp
add
outsb
and
fs
mov
loopne
push
cmp
mov
mov
jg
stos
mov
test
cmp
stc
popa
add
xchg
fildll
jb
or
and
sbb
stos
mov
inc
imull
xchg
loop
cli
adc
leave
in
xchg
push
pusha
mov
repz
fstpt
push
cli
out
xchg
xor
xor
les
call
cmp
cmp
lcall
push
gs
cltd
or
add
cmp
mov
in
outsb
fs
ds
inc
and
mov
add
add
add
mov
jecxz
and
inc
xchg
addr16
stos
or
loopne
and
sbb
pop
subl
hlt
negb
xchg
xchg
cmp
test
lods
lcall
push
out
aad
adcb
xchg
push
xor
cld
inc
push
popf
fisubs
adc
or
sbb
or
arpl
sbb
sub
outsl
data16
jp
inc
dec
aad
jge
or
xor
aaa
cmpsb
mov
ss
add
fisubs
dec
sbb
movsl
test
xor
pop
nop
cmp
popa
fiaddl
mov
sbb
imul
dec
call
add
stos
push
lret
ljmp
mov
push
fwait
gs
and
js
shll
mov
repnz
xchg
daa
mull
sub
ror
xor
in
push
std
dec
push
xor
jo
loop
rcll
test
fs
and
xchg
rclb
cltd
mov
xor
mov
mov
stos
aas
sub
mov
cmc
sbb
mov
pop
loope
adc
out
adc
mov
outsb
pusha
mov
lea
and
lea
lods
repnz
cmp
xchg
mov
and
jmp
icebp
push
add
xor
jecxz
pop
iret
cmpsl
test
lea
xor
scas
sbb
or
stos
push
scas
and
test
fsts
rorb
xchg
inc
xchg
push
pusha
lret
push
arpl
sbb
adc
mov
das
fidivrl
call
ret
push
scas
es
nop
mov
sbb
pop
and
jo
fidivrs
mov
jns
movsl
popa
dec
scas
mov
cld
add
mov
fwait
add
inc
mov
jb
pop
test
incb
add
add
sahf
push
or
cmpb
push
jge
ret
add
cmp
aaa
xchg
pop
std
mov
xchg
jnp
dec
xchg
cmp
jae
cmp
popf
push
sub
adc
push
hlt
out
push
and
movsb
push
outsb
sbb
hlt
jne
push
rorl
adc
cmp
mov
stc
loope
push
inc
xchg
scas
out
mov
out
jb
popf
xchg
pop
repz
jl
stos
stos
sbb
sub
push
pop
lret
xor
cmpsl
jle
adc
jns
and
cmpb
adcb
push
fs
jmp
or
cs
add
sub
push
ljmp
lock
pop
xor
xchg
mov
pop
sbb
pop
jl
outsb
mov
jo
cmpsb
imul
insb
and
pop
rcll
push
pop
fdivrs
into
push
test
imul
inc
or
and
mov
sub
ss
push
insl
sub
jbe
xor
imul
icebp
xor
test
xchg
dec
inc
popf
outsb
clc
lock
loop
mov
shl
popa
jg,pt
push
cmp
add
outsb
push
aad
xor
in
icebp
cmp
dec
jnp
pop
pop
adc
fadds
push
mov
push
shlb
mov
mov
pop
and
stos
inc
sbb
call
rcll
call
sbb
insb
ja
mov
jmp
je
jne
jg
scas
sbb
sbb
cltd
cltd
je
shll
lock
dec
lea
data16
aas
mov
push
dec
pop
movsl
aad
add
or
pop
add
mov
aam
sub
sub
sarl
outsl
outsb
inc
mov
loope
or
movsl
pushf
jnp
xchg
jno
cmp
adcb
clc
mov
cmp
mov
call
add
add
add
test
pop
out
xchg
out
push
xor
pop
cmp
jle
or
cmpsb
mov
outsb
sub
adc
and
sbb
pop
add
dec
data16
lds
dec
je
loop
dec
sub
out
mov
fwait
popa
out
inc
shll
cmp
pushf
cmp
or
and
or
std
jmp
and
pop
sarb
pusha
and
lret
jl
repz
mov
push
bound
incb
pop
sbb
enter
jne
fwait
imul
dec
xor
dec
jle
push
ljmp
push
jno
in
jmp
dec
sub
cld
sub
repnz
mov
adc
dec
mov
lret
sarb
xor
scas
cwtl
xor
inc
mov
mov
add
sub
mov
cli
cmc
inc
push
or
lods
lahf
or
push
or
clc
cmp
add
fisttpll
lea
xchg
ds
mov
mov
pop
or
pop
ja
hlt
cmp
cmp
js
mov
mov
orl
fcoms
push
add
leave
mov
add
and
mov
jae
mulb
std
sub
cltd
call
cli
iret
add
cli
fmull
xor
mov
outsb
scas
sbb
dec
cld
sbb
adcl
sub
sti
in
sub
jae
push
loop
cltd
test
mov
lods
ret
mov
call
sub
push
push
aas
cmpsl
nop
mov
pop
fcomi
sub
inc
sbb
les
ret
pop
cmp
xchg
adc
add
sbb
out
idivl
test
xchg
aad
sarb
add
jle
sbb
lea
pop
insb
call
or
lret
movsb
loopne
jecxz
nop
jmp
sbb
push
hlt
xor
pop
rcll
hlt
mov
aas
lahf
icebp
stc
cltd
out
ret
cld
ja
ss
cmp
mov
in
xlat
fs
adcb
jnp
push
jmp
mov
out
pop
mov
inc
dec
mov
or
test
cmc
hlt
add
mov
je
mov
adc
repnz
xor
xchg
mov
inc
lods
push
lret
mov
inc
cmp
loop
push
xchg
cwtl
lods
fistl
or
cs
adc
xor
pop
mov
mov
jnp
ds
mov
in
pop
dec
inc
imul
rorb
std
mov
fidivrs
bound
in
repnz
adc
loope
sbb
in
jmp
sub
add
test
xor
sub
mov
xchg
aam
mov
sbb
fisubl
shlb
cmp
and
adc
push
sub
sbb
mov
repnz
in
loope
pop
addb
fwait
sub
pop
imul
jnp
or
inc
add
dec
mov
repnz
std
xor
std
ret
insb
je
xchg
jns
nop
mov
sbb
jnp
jge
mov
ss
mov
fisttps
sub
lret
jb
xchg
smsw
add
cmc
filds
inc
subb
jbe
inc
pop
loope
mov
sahf
mov
mov
sbb
mov
sarl
jno
lods
shr
mov
cmp
push
loopne
mov
xchg
aad
cs
push
testl
push
dec
movsb
pushf
sbb
and
xor
add
add
add
add
sbb
fsin
out
fs
popf
outsb
cmp
add
add
add
adc
shr
aam
sub
push
push
mov
test
outsb
outsl
push
pop
lods
rolb
nop
loop
neg
lret
ret
ss
xchg
push
xor
cltd
out
stos
xorl
fisubs
add
dec
ss
cmp
sub
sub
pushf
ret
mov
dec
fstp
loopne
jb
sbb
cld
jmp
sahf
out
std
mov
pop
adc
icebp
ss
push
rorl
mov
sub
jae
push
mov
add
les
xor
adc
push
shl
pop
cld
pop
xchg
push
mov
es
sbb
roll
addb
pushf
inc
cmp
movsl
mov
fwait
ds
movsb
ret
push
adc
jle
cmp
inc
add
xor
outsl
adc
cmp
cmp
add
je,pn
pop
cltd
lahf
pop
pop
jp
mov
cmp
dec
adc
mov
outsb
mov
fcomip
xchg
or
pop
cld
mov
out
mov
xchg
bound
je
gs
xor
leave
pop
in
dec
dec
lea
jl
stc
sub
lods
lds
and
add
addr16
hlt
or
sarl
rcrb
mov
test
cli
xchg
fiadds
das
lret
rcrb
xor
push
test
pop
fstl
jae
jp
movsl
ficoml
cmp
adc
cmpb
fwait
push
fs
push
sbb
or
xor
add
cmp
movsl
dec
push
mulb
decb
mov
push
lds
in
pop
ret
and
xlat
insl
orl
sub
imulb
mov
sarb
inc
xchg
stos
hlt
dec
stos
ljmp
cmp
mov
imul
icebp
cmpsb
add
adc
arpl
sti
adc
jl
dec
dec
test
add
incb
add
in
mov
push
stos
das
add
xchg
jl
push
and
roll
push
adc
xor
dec
xor
gs
sbb
movsb
into
inc
pushf
repz
push
inc
push
cmp
xchg
sub
pop
xlat
sub
test
xor
stc
inc
out
call
and
xor
ja
cli
xor
cli
xchg
fcomps
mov
sub
pop
sub
rorl
cmpsl
rorl
lea
jg
aad
and
ret
out
adc
cltd
pop
ficoms
or
push
ljmp
arpl
jb
pop
cs
pop
cmc
jl
or
sbb
mov
stc
lea
std
push
inc
cli
out
aas
fwait
pop
ja
test
mov
cmpsb
jecxz
lcall
cmp
cmp
es
push
int3
mov
inc
mov
cmp
std
xchg
xchg
pop
or
out
cmpsl
add
adc
enter
xor
fs
cwtl
mov
pop
mov
icebp
filds
inc
fcomps
jmp
mov
adc
aam
or
cmp
adc
cmc
dec
or
dec
fs
daa
cmp
inc
mov
loope
cmp
addb
scas
push
insl
jbe
sahf
sub
in
jg
xchg
xor
movsb
cmp
pushf
arpl
cltd
cmp
jb
or
daa
mov
cmp
cmpsb
rcrb
mov
mov
inc
adc
mov
leave
mov
call
fdivr
arpl
mov
xlat
pop
iret
ds
scas
sub
out
xor
cmp
mov
cs
mov
cld
cld
fwait
mov
inc
mov
jl
cmpb
jle
mov
add
and
xor
sub
jne
mov
add
cmpsb
or
arpl
and
scas
or
insb
ljmp
jecxz
xor
push
shrl
lret
mov
int3
adc
cmpsb
daa
leave
fcmovu
push
cmp
dec
or
aad
sub
ja
stos
in
fdivrs
mov
out
sbb
in
mov
data16
scas
or
shrl
lret
jmp
xchg
push
dec
adc
leave
adcb
gs
and
int3
sbb
push
cli
or
xchg
stos
or
xor
cltd
stc
xchg
or
xor
gs
aas
inc
mov
adc
bound
cmp
idiv
out
shlb
mov
mov
push
pop
mov
lcall
cmc
mov
dec
mov
shlb
popf
stos
xchg
inc
push
out
cld
loopne
cmc
mov
mov
sub
and
dec
push
das
sub
mov
fstpl
push
cmp
xlat
ret
push
fwait
jp
sub
xchg
dec
or
jge
loope
cmpl
adc
or
or
adc
inc
rcrl
repz
sbb
inc
cltd
cmp
lock
fstpt
push
jg
jecxz
rol
dec
xchg
adc
sbb
imull
outsb
stc
cmp
jne
aas
push
ds
cli
xor
test
dec
mov
scas
daa
sbb
fsubs
pop
push
int3
xchg
xor
sub
xchg
repnz
add
inc
idivb
lcall
test
dec
cs
lret
cld
mov
int3
add
mov
inc
out
in
int3
mov
test
inc
data16
sub
inc
es
orl
lahf
int
das
sub
ds
ret
jnp
xlat
pop
mov
sub
inc
xor
and
imul
dec
add
pop
mov
jg
data16
sbb
das
mov
add
add
add
push
xor
mov
jp
jbe
dec
int
jecxz
mov
cmp
lahf
xchg
test
mov
mov
dec
icebp
nop
dec
add
fldl
or
and
or
std
daa
jno
out
lock
daa
js
std
jecxz
adc
xor
inc
jp
sub
fsts
xchg
repnz
mov
jle
push
adc
and
jp
loop
fsub
lret
gs
cmp
dec
cld
and
dec
mov
sub
or
stos
jge
gs
mov
nop
xlat
sbb
pushaw
mov
out
lea
ficomps
jbe
sub
sbb
add
adc
dec
push
iret
test
xchg
fdivr
cmpsl
mov
out
jl
inc
adc
addl
pop
sub
repnz
push
fldl
xor
das
mov
subb
rcrl
ljmp
push
inc
jp
mov
xor
pop
xor
mov
fwait
jae
cmpsl
and
cmpsb
pop
mov
int
sub
addr16
stc
loope
jle
std
adc
sarl
das
ror
adc
repz
in
cmpsl
cld
jo
mov
dec
leave
and
out
aaa
xor
jp
in
mov
inc
push
aas
jb
cmp
not
loopne
roll
jb
in
pop
xor
ret
hlt
push
icebp
inc
sbb
rcrb
jno
push
scas
mov
int
test
arpl
lret
mov
incl
sbbl
scas
nop
lods
lcall
mov
mov
cwtl
data16
iret
imulb
cmp
adc
fdivl
jo
xchg
daa
flds
divb
rorb
loop
mov
cmc
prefetch
add
cwtl
jae
movsb
movsl
in
jb
add
inc
push
pusha
jbe
out
test
stos
fisttpl
jne
ret
incb
add
roll
mov
inc
pop
adc
xchg
jnp
mov
sarl
pop
mov
out
and
int
sti
pop
sbb
ret
xlat
or
add
add
sub
dec
add
jge
mov
and
mov
xlat
ds
push
adc
test
inc
dec
out
scas
dec
inc
scas
pop
bswap
xor
imul
and
in
add
fidivrs
xor
leave
out
sub
call
mov
mov
push
sub
shl
mov
inc
fcomps
loopne
cmp
fldt
aaa
and
jae
int
cli
adc
mov
push
fs
ja
mov
jl
jecxz
xor
pop
int3
iret
loop
leave
mov
sahf
fsubrl
je
or
mov
cs
lret
pop
call
pop
clc
pop
or
popl
stc
repnz
jb
push
jns
shl
push
and
js
add
iret
push
scas
pop
mov
xchg
mov
fimuls
mov
ss
sbb
inc
cltd
jnp
pusha
sbb
stc
aam
sub
mov
mov
sub
mov
add
lret
adc
or
in
hlt
pushf
xlat
xchg
and
iret
dec
sbb
iret
enter
mov
les
xchg
arpl
outsl
mov
insb
into
fdivs
or
and
mov
hlt
xor
adc
xor
leave
fdivs
sarb
mov
adc
xchg
xchg
sub
fidivrl
mov
cs
ss
mov
inc
xor
or
or
cmpb
lock
add
dec
add
xchg
fs
std
add
mov
sub
jbe
shll
out
mov
add
pop
lcall
addr16
push
int3
dec
mov
add
add
add
fdivrl
cli
fmuls
fs
lea
insl
push
lds
icebp
jl
mov
lret
inc
push
in
or
ret
inc
repz
fcomip
jle
mov
sub
sbb
mov
into
pop
stc
lds
ljmp
cwtl
loope
loope
pop
mov
test
sbb
pushf
mov
imulb
filds
or
aam
sahf
sbb
cmp
xchg
mov
lds
dec
dec
push
into
insl
das
mov
fwait
shlb
in
dec
jge
sub
repz
mov
fwait
cmp
or
pop
adc
jo
inc
push
out
sarb
dec
repnz
fsubl
stos
es
divl
cli
ret
and
icebp
test
ja
jo
hlt
xchg
lea
arpl
test
push
sub
sub
ret
push
ret
leave
outsb
outsb
push
fidivrs
dec
addl
daa
pop
push
cmp
and
mov
rcrl
test
adc
push
pushw
jg
mov
fucom
loope
xchg
mov
xor
inc
sub
rcrl
xchg
xor
jae
cmp
enter
push
data16
adc
or
pop
cmp
xchg
insl
mov
or
push
xchg
fsubs
js
push
push
iret
fsubs
dec
push
xor
testb
rorb
fcoml
inc
inc
pslld
mov
inc
aam
pushf
xor
cs
in
push
addr16
adc
pcmpeqw
loope
and
push
ljmp
pushf
push
imul
and
jo
insb
out
nop
mov
pop
xor
stos
sub
lahf
arpl
sbb
test
xor
lret
lds
in
and
push
add
outsl
daa
insl
push
addb
mov
movb
incb
add
sti
sub
mov
xor
movsl
outsb
add
jle,pn
and
pop
pop
and
aaa
fldenv
outsb
pop
jne
mov
scas
fs
into
sti
out
sbb
lret
mov
cmp
aaa
lcall
sbb
loopne
pop
add
repz
push
mov
mov
stos
and
into
jb
mov
mov
jae
jns
jl
or
cs
jle
loopne
xchg
sahf
pop
xor
mov
sbb
xchg
das
jge
pop
cld
cmp
loopew
shl
je
inc
sub
push
lret
xchg
data16
testb
or
and
mov
or
push
arpl
andb
add
pop
mov
mov
adc
pop
popa
andl
pop
push
lock
push
xchg
stos
out
xlat
pop
push
les
push
lret
fcmovb
jb
je
loope
and
aas
fsubr
push
ja
insb
outsb
cmp
ss
adc
xor
in
dec
inc
adc
or
pop
pop
pop
mov
cmp
and
fs
cmp
mov
push
insb
and
xchg
test
cltd
loop
cltd
sbb
adc
fstl
or
mov
arpl
imulb
icebp
mov
inc
ja
mov
xor
daa
sub
or
sbb
loop
clc
sbb
and
iret
movsb
dec
movsl
rcr
adc
or
popa
andb
ljmp
mov
pushf
loopne
cwtl
mov
enter
loop
xchg
pop
out
imul
fs
push
xor
dec
jge
rorl
adc
popa
mov
mov
rcll
sahf
gs
movsl
xor
je
lret
mov
add
add
add
inc
lea
and
mov
out
leave
enter
mov
ret
add
add
add
pop
ljmp
test
jl
lds
adc
shll
xchg
movsl
mov
js
xchg
aam
push
roll
jge
inc
cmp
and
and
xchg
xchg
int3
repnz
aas
sub
leave
xchg
insb
xchg
cmp
neg
in
adc
sub
sbb
adc
mov
jle
fisubs
and
add
sbb
xor
adc
orb
or
add
movsl
push
mov
mov
cli
mov
and
fisubs
orl
mov
test
into
xchg
bound
jo
xchg
rcrl
out
sti
movsl
sub
lret
add
ret
clc
inc
aaa
mov
lcall
arpl
nop
andl
jle
jne
or
aas
mov
mov
lock
push
mov
test
cmc
enter
cwtl
sub
lods
clc
inc
xchg
test
lea
mov
xchg
fsubrs
loop
xor
xchg
mov
cld
clc
mov
dec
adc
scas
andl
ja
mov
and
push
es
imul
pop
sub
popa
movl
lcall
sbb
push
lods
adc
xlat
lods
ja
add
scas
add
movsb
pop
xor
jbe
outsl
stos
movsb
mov
mov
jmp
dec
roll
jmp
xchg
das
or
sub
roll
daa
rolb
cmc
sbb
mov
pop
cmc
js
push
loop
cld
flds
inc
and
das
sub
iret
addr16
mov
jmp
push
out
sti
sub
push
mov
adc
mov
je
mov
add
hlt
cmp
mov
xchg
inc
pop
xlat
ror
add
add
add
xor
ds
dec
call
das
pusha
out
push
mov
and
adc
cli
dec
jb
cld
test
es
mov
mov
inc
roll
xchg
cld
es
jno
pop
cwtl
sbb
rcrl
sbb
movsb
fimuls
mov
inc
test
ds
scas
mov
jp
xchg
jo
mov
movsl
mov
ror
xchg
xchg
ret
xor
jp
add
shl
and
jp
outsb
cmp
out
lahf
cli
fs
sbb
icebp
pop
xchg
fidivrl
ljmp
and
pop
fwait
mov
jns
pop
mov
and
std
test
movsb
stos
cmpsl
cmp
jbe
push
mov
push
out
mov
pushf
lcall
lahf
add
sbb
pop
fs
xor
cld
nop
jle
xchg
jae
and
repnz
into
out
insl
jmp
cwtl
push
adc
mov
pop
add
mov
xchg
scas
dec
in
add
mov
or
mov
orl
or
push
cld
roll
or
xor
mov
lahf
xor
cli
and
adc
fcmovnb
rorl
scas
sahf
sub
fnstcw
aas
movsb
rorl
stos
push
pop
push
add
stos
cmpsb
aas
icebp
or
leave
inc
mov
aaa
xchg
xor
fisubrs
mov
dec
or
or
xor
in
mov
pop
pushf
pop
adc
mov
sub
lea
setb
dec
sbb
aad
pop
mov
cmp
rcl
repz
jo
mov
sbb
push
dec
sub
bound
push
enter
dec
mov
xor
and
es
shll
add
add
add
add
sbb
jge
aam
dec
pusha
jl
cld
mov
add
add
aas
cmp
in
push
push
fstps
cld
cmpsb
add
shrl
jns
and
movsl
push
push
nop
mov
sbb
push
push
push
rcl
enter
ja
push
fbld
xor
ret
ret
aam
xchg
pop
loopne
pop
add
add
xchg
push
out
push
inc
lahf
test
dec
push
cmp
cmc
rorb
xchg
adc
out
movsb
sub
mov
loopne
pop
mov
jl
pop
je
xor
pushf
sbb
dec
inc
rcrb
fildll
jp
xchg
xor
mov
jge
insl
xchg
pop
insb
sti
mov
fld
jns
xor
dec
ljmp
outsl
jge
ljmp
lcall
xor
js
rcrb
cmpsb
ret
lock
and
sub
push
ja
loop
addr16
std
mov
or
or
in
sub
sti
push
sti
movsl
push
jge
jle
fsubrl
pop
mov
lcall
push
loop
mov
lahf
ret
xchg
or
lods
pop
aam
push
mov
out
push
mov
shll
fwait
test
ss
cli
jp
push
pushf
xchg
cmpsl
dec
ja
mov
mov
iret
mov
xchg
add
lods
imul
fbstp
popf
fadds
hlt
arpl
mov
pop
icebp
jle
jb
hlt
mov
mov
inc
out
adc
mov
sti
je
push
leave
mov
cmp
pop
popf
out
int
cli
sbb
mov
pop
ss
mov
mov
pop
repnz
sbb
xor
push
inc
cmp
jns
movaps
jp
cmpsl
ds
or
sbb
ffree
xchg
add
mov
mov
nop
mov
into
add
incb
add
xlat
adc
xchg
sub
xor
pusha
aas
testb
pop
jge
mov
je
mov
loopne
outsb
lret
out
fidivl
loop
adc
xchg
pop
pop
or
jbe
mov
rorb
jmp
mov
dec
test
fwait
inc
sbb
movsb
dec
sbb
outsl
mov
sbb
xchg
shrl
xchg
mov
fs
or
shlb
add
fisubl
mov
popf
and
shrl
xor
mov
xchg
sbbl
pop
ret
adcl
pushf
adc
cmp
push
jmp
lret
pop
push
int3
sbb
insb
push
data16
inc
out
sub
jmp
dec
jo
xor
in
inc
repnz
scas
jmp
fs
sub
xor
adcb
imul
cmpsl
cmpsb
lahf
sti
icebp
add
dec
lods
sti
sahf
mov
inc
js
adc
jo
push
sbb
and
jmp
mov
inc
fwait
mul
inc
negl
fsubrl
out
cltd
mov
pop
xchg
sub
clc
sbbb
ficomps
rcrl
dec
fwait
mov
call
out
sbb
inc
inc
pop
leave
adc
cmp
push
in
cmp
sub
add
add
add
dec
rcrb
cltd
xchg
jp
jl
pop
xor
lock
imul
cmp
sub
xor
jno
stc
cmpsb
fwait
das
add
ret
cld
jecxz
mov
sub
addr16
adc
xchg
aaa
sti
push
cmp
pop
pop
movl
imull
xchg
movsl
adc
inc
inc
inc
xchg
sub
jae
xchg
or
cmpsl
lsl
xlat
sub
stos
sub
and
push
int3
cmp
push
sbb
add
mov
in
dec
cmp
inc
push
adc
incb
add
mov
sarb
int3
es
pop
add
or
out
push
mov
cmp
or
and
add
add
pop
pushf
pusha
inc
dec
jg
scas
xor
bound
mov
outsl
shlb
in
frstor
test
aam
xor
sub
mov
xchg
sbb
div
inc
es
and
les
mov
mov
arpl
addr16
pushf
aad
bound
das
out
wrmsr
call
pop
aad
fadds
mov
scas
sbb
roll
std
adc
push
jae
sub
pop
jo
test
mov
xchg
sti
sub
mov
out
cmc
dec
lcall
cmc
dec
xchg
aad
mov
shrb
cld
cmpsl
rep
popa
or
jns
scas
lret
mov
andl
pop
pop
push
xchg
sub
inc
mov
lods
les
and
jnp
jo
dec
les
xlat
jnp
sub
out
dec
das
jo
orb
xor
mov
xchg
mov
sti
je
jns
shl
cmp
cmp
fldl
inc
lret
arpl
add
mov
xchg
and
cmp
ficomps
lea
jns
cltd
out
cli
or
xor
pop
dec
js
test
rolb
gs
outsl
les
sti
and
pop
inc
sub
jns
mov
dec
xchg
jns
iret
cld
dec
int3
mov
and
rcr
or
mov
jbe
les
aad
cmp
xor
push
pusha
fsubl
push
cmp
les
idivl
cld
int
xchg
pop
xchg
sahf
test
adc
push
xchg
imul
xchg
mov
repnz
std
sti
cli
push
jp
pop
inc
mov
out
mov
insl
mov
add
stos
jo
dec
cli
fldcw
into
mov
incb
add
and
push
mov
das
inc
pop
repz
push
dec
lcall
notb
sbb
lret
ret
data16
and
imull
xor
add
mov
pop
dec
and
pop
adc
ja
in
outsb
in
lds
ret
lds
pusha
pusha
sub
jbe
inc
out
test
pop
scas
arpl
xchg
mov
inc
in
jp
adcb
insl
nop
bswap
cwtl
cs
mov
out
movb
sub
stc
pop
mov
xchg
hlt
daa
or
pop
push
cmc
mov
and
lcall
aas
out
mov
mov
es
hlt
xlat
daa
push
inc
iret
cmp
mov
lret
outsl
pop
pop
lahf
into
jl
or
aas
or
je
outsb
inc
adc
mov
mov
rclb
mov
cmp
in
pop
lea
mov
mov
jle
xor
or
adc
and
leave
js
jae
daa
xor
ja
sarl
pop
insb
fdivs
in
sbb
xchg
lock
popf
adc
flds
in
xor
mov
imul
mov
cmpsb
rcl
jne
push
lods
insl
lods
or
mull
mov
adc
inc
hlt
inc
lcall
cli
out
push
cs
mov
jmp
roll
addr16
fdivrl
pusha
fiaddl
inc
push
jle
test
sbb
jbe
shll
movsb
and
movsl
faddp
es
js
loope
dec
sbb
add
lea
cltd
movsl
lock
or
ljmp
inc
subb
add
sbb
shlb
push
daa
push
int3
sarb
out
push
imul
loop
cmpsb
pop
dec
pop
cmp
push
stos
add
dec
xchg
pop
xchg
cmp
add
add
add
stos
gs
jle
xor
or
out
scas
sub
dec
testl
push
push
lods
jmp
jg
or
sub
push
mov
adcb
out
xor
pop
icebp
aaa
ret
mov
push
sti
jmp
in
les
jl
mov
jne
lcall
pop
add
xor
fildll
rep
pop
and
xor
mov
jb
jecxz
mov
push
pop
movl
or
or
sarl
insl
negl
lds
inc
mov
mov
int
cmpsb
jl
out
cmp
mov
mov
enter
cltd
ds
lcall
sbb
outsb
adc
pop
pop
lods
push
in
test
push
sarb
es
inc
mov
or
xchg
mov
mov
push
outsb
ljmp
leave
clc
lret
arpl
insl
add
stc
nop
mov
xor
jge
movsl
out
adc
xchg
jl
cmc
rep
lock
arpl
jecxz
lods
adc
enter
sub
int
cld
test
and
rorl
xchg
ja
push
mov
xor
and
repz
xlat
xchg
mov
or
cmp
stc
cmpsb
fsubrl
fildl
mov
cmp
mov
mov
out
inc
xchg
sahf
adc
adc
clc
cmp
mov
int3
mov
mov
mov
and
pop
mov
jns
lahf
mov
sbb
loop
jbe
dec
lret
jge
jmp
mov
je
sub
inc
sbb
xor
outsb
fists
pop
movsb
lods
data16
or
lds
pusha
mov
dec
jnp,pn
cwtl
insl
jl
ss
test
mov
ret
jae
mov
cld
ret
add
pop
mov
out
add
xchg
jl
cld
decl
or
sub
xor
and
add
and
dec
int3
cmp
lcall
xchg
lods
call
xchg
stos
mov
adc
xor
sbb
push
add
mov
jle
cli
dec
js
mov
rclb
pop
rcrl
lcall
negb
mov
lods
sub
mov
iret
jecxz
xor
icebp
jecxz
adc
dec
mov
mov
cmp
and
in
addr16
add
movsl
jns
add
sbb
ret
cmp
push
mov
aam
call
int
aas
idivb
mov
inc
cltd
mov
mov
dec
cld
inc
cmp
mov
mov
mov
aad
ffree
sbb
mov
cmp
cwtl
insl
mov
mov
les
push
mov
xor
jns
shrb
pop
insb
jge
dec
fwait
out
add
or
push
dec
sbbb
jns
and
notl
test
mov
sbb
adcb
and
out
xchg
nop
sbb
cmpsb
mov
popa
cmp
jle
int
jno
jbe
pop
dec
mov
bound
dec
mov
adc
ljmp
mov
mov
aad
into
outsl
xor
mov
leave
lcall
test
pop
or
xor
sbb
pushl
aas
pop
pushf
cld
push
and
adc
push
daa
in
pop
jne
imul
push
mov
add
or
jge
aas
fdivl
iret
cltd
or
call
mov
in
outsb
nop
ja
lods
push
mov
loop
or
jae
sub
push
dec
daa
int
jnp
out
roll
add
lret
add
ret
and
dec
repz
fldt
in
jle
mov
fadds
add
add
add
inc
sub
push
inc
jb
gs
dec
in
sub
cmp
cmp
cmp
loop
pop
adc
xor
pop
pop
lret
cmpsb
popf
andb
fistpl
pop
dec
loopne
sbb
add
cmp
fwait
in
dec
push
mov
ret
push
pop
std
flds
js
les
lret
mov
decl
mov
cmp
push
pop
fidivl
xchg
sbb
xchg
pop
std
pop
mov
dec
ss
jae
sub
sub
add
sub
aaa
sti
pop
mov
shlb
lock
xor
scas
icebp
pop
inc
lcall
fwait
jle
sub
mov
inc
daa
leave
int3
mov
mov
out
mov
jnp
inc
lds
mov
je
pop
xchg
mul
jbe
jo
idiv
push
push
aam
pop
scas
dec
inc
and
int3
mov
imul
sub
push
rclb
movsb
mov
adc
xchg
mov
cltd
arpl
inc
arpl
imulb
mov
leave
cmpsl
fldcw
add
jae
scas
loope
mov
jns
inc
xchg
loopne
leave
sahf
mov
lret
dec
add
add
cmp
inc
and
shrb
jle
cltd
es
mov
sahf
hlt
stos
subb
cmp
push
cltd
push
lods
xchg
jg
jne
nop
pop
ficoml
mov
ret
xchg
scas
movsb
xchg
add
pop
sbb
mov
dec
sub
les
jb
xor
and
in
jl
int
lea
bound
cmpsl
daa
pop
sbb
cltd
out
rcrb
adc
iret
call
fwait
mov
xor
inc
xchg
dec
lods
push
sub
bound
or
fs
lret
dec
mov
dec
aam
add
lcall
jnp
push
mov
and
sub
incb
add
loopne
subl
xor
pop
lcall
or
pop
adc
mov
inc
in
or
pop
xor
cmc
in
mov
cmc
shrb
in
repnz
sub
movsl
mov
lret
xchg
mov
push
pop
decl
xlat
mov
test
leave
cwtl
jb
imul
and
inc
xor
push
pop
icebp
out
xchg
clc
test
loop
dec
and
outsb
rcll
ret
xor
jge
ljmp
mov
inc
dec
stc
repz
mov
mov
pusha
iret
pop
cmp
cmp
jbe
xchg
fldl
lea
dec
mov
add
cmp
jae
inc
xor
or
jge
or
jle
iret
pop
sbb
stos
pop
cs
mov
fidivrs
addl
dec
sbb
or
jne
popf
std
andb
pop
out
lods
add
dec
cli
lods
adc
test
sbb
xchg
insb
add
jge
add
fs
mov
mov
push
lahf
jnp
inc
adc
movb
rolb
xor
orb
aad
mov
or
or
movsl
push
in
inc
pop
loope
fs
inc
mov
mov
test
jle
pusha
popf
pop
mov
lock
push
in
sbb
lcall
dec
add
dec
and
pop
lea
rolb
jns
roll
cmp
mov
jnp
outsl
jns
icebp
lret
testl
mov
mov
jns
cmp
or
mov
daa
fstpl
lahf
xor
cmp
int
add
adc
pop
adc
mov
cmp
mov
test
pop
inc
mov
add
add
add
rolb
dec
idivl
jg
out
xchg
scas
faddl
add
add
add
dec
cmp
std
pop
dec
lods
in
pop
cmp
xchg
xor
inc
int3
and
add
fwait
pop
push
into
adc
mov
mov
xchg
clc
cltd
shlb
pop
rep
push
dec
fldenv
pop
shlb
pop
or
leave
lds
push
sbbb
pop
movsl
sarl
test
xchg
inc
xchg
push
mov
popf
int
iret
mov
adc
mov
cld
pusha
sub
js
ja
bound
pop
cmp
add
sub
sbb
pop
or
inc
loop
repz
in
pop
push
mov
pop
ss
pop
jns
and
cmc
jmp
das
outsl
xchg
iret
xor
out
insb
nop
ja
jecxz
xchg
pop
iret
dec
loope
loopne
sub
xchg
les
orb
xlat
incl
and
cmp
dec
inc
jbe
push
adc
jne
shrb
insl
mov
mov
fcmove
cmpsl
mov
pushf
jmp
stos
inc
sbb
add
sbb
mov
adc
adc
push
adc
mov
mov
sar
shrb
dec
and
jnp
dec
xchg
jg
pop
out
into
in
add
int3
sarb
clc
cmp
sub
mov
mov
pop
mov
rorl
jl
cmp
add
xor
cmpb
jl
outsb
fbstp
loop
mov
jle
fnstcw
push
mov
mov
jg
add
inc
adc
mov
sarl
or
ret
jb
adc
lods
outsb
out
mov
push
xchg
insl
inc
dec
imul
pop
sub
xor
pop
push
decl
mov
imul
adc
out
jmp
or
sub
add
jecxz
mov
push
mov
incb
add
jns
sbb
cmp
adc
push
inc
pop
dec
xchg
stos
into
cmpb
rcl
mov
sbb
lret
test
push
mov
cli
or
mov
int3
mov
ljmp
aam
ss
xor
rorb
in
push
in
ret
sbb
sub
fisttpl
dec
mov
mov
aam
lea
pop
hlt
stos
repz
scas
push
or
daa
xchg
addr16
pop
mov
mov
bound
or
test
ja
test
mov
mov
dec
int3
push
jo
out
mov
fists
dec
push
bound
xor
adc
mov
xlat
loope
xchg
inc
test
inc
add
mov
rcrb
xchg
push
add
sbb
and
and
pop
fsubs
push
inc
push
js
rol
aad
xchg
cmp
in
loopne
aam
xchg
push
mov
xchg
out
mov
xchg
dec
outsb
loop
lea
outsb
icebp
mov
sbb
inc
test
call
fistl
outsb
out
rorl
mov
mov
data16
insl
lahf
enter
ret
cld
aad
enter
js
mov
movsb
addr16
lret
fsubrl
mov
and
cmp
in
cld
dec
xchg
or
fdivs
dec
xchg
xchg
out
push
pop
int
mov
in
mov
mov
or
dec
fstps
popf
inc
xchg
shll
pop
add
clc
sub
or
stc
push
xchg
dec
dec
sbb
and
inc
cmc
sub
fsubrs
xchg
xchg
mov
outsb
sar
aas
lods
cmp
lds
andl
cmp
fidivl
sahf
in
jmp
cmp
or
xchg
jo
jmp
daa
add
cmp
movsb
add
jl
push
add
mov
fcompl
or
test
fs
stos
loopne
add
add
add
test
adc
mov
cmpsl
aam
dec
lods
or
sbb
xchg
jp
pushf
or
cwtl
or
push
hlt
mov
out
xor
jle
jo
jecxz
lods
inc
loope
sti
push
inc
cli
mov
and
sti
fidivs
jb
outsl
nop
pop
fucomip
xchg
sub
loope
cmpsl
ss
mov
cmpsl
ljmp
add
shr
leave
je,pt
repnz
push
dec
sar
mov
popa
jmp
gs
xor
clc
add
in
iret
and
sub
sbb
call
lock
jno
push
cltd
or
aaa
inc
dec
xchg
ret
cmpsl
aad
mov
sbb
or
push
mov
sbb
adc
mov
or
dec
fnstenv
jae
out
inc
sbb
icebp
xor
loopne
mov
mov
mov
mov
das
pushf
and
push
xchg
testl
dec
and
je
push
push
push
insb
lods
push
aaa
xor
jmp
test
cmpsb
mov
inc
sub
je
aam
aam
dec
inc
sti
into
push
popf
mov
outsl
pop
fdivrl
add
pop
popa
sub
mov
popf
adc
mov
add
aad
sbb
jnp
push
lds
shll
insb
sub
adc
xor
xor
inc
enter
and
add
mov
repz
in
lahf
sbb
scas
and
lea
add
scas
inc
pop
add
jne
popa
push
sub
add
mov
dec
pop
out
aas
lret
mul
add
pop
jp
dec
fprem
mov
in
add
jb
cmp
push
int3
push
push
xlat
xor
test
xchg
add
inc
stos
pop
sbb
cli
inc
cli
mov
add
insl
test
add
incb
add
out
jmp
cmp
xor
out
stos
sub
sbb
push
mov
ljmp
fs
or
fsubrl
push
sub
mov
push
div
or
and
adc
jno
movsl
jae
dec
push
jne
sbb
adc
cmp
mov
sub
rcrb
lea
mov
mov
inc
adc
sbb
mov
daa
and
mov
sub
fsubrp
push
inc
orl
cld
outsb
popf
jl
les
lret
add
cs
hlt
stos
jle
xor
inc
jp
xchg
push
add
inc
xchg
rorb
jno
sub
std
sub
std
xor
in
div
push
pop
pop
inc
int3
mov
out
incl
push
dec
push
inc
iret
jo
addb
bound
in
pusha
out
push
aaa
push
stos
mov
sub
xor
xchg
jno
push
lahf
imul
scas
mov
out
pusha
mov
arpl
ret
pop
push
movsb
popf
out
jb
jne
jmp
and
mov
popf
mov
adc
mov
rcrl
test
mov
mov
sub
xchg
push
jp
fldt
mov
mov
jno
push
addr16
je
inc
jge
leave
push
add
push
loop
xchg
pop
mov
xchg
inc
jg
pop
fs
mov
stos
add
inc
xchg
dec
in
jmp
sar
std
ficomps
xorb
jno,pn
cmp
pop
push
mov
sub
and
je
cli
pop
sbb
fildll
jns
and
cmp
data16
loop
push
loope
loope
jecxz
add
fisttpl
sub
lock
jle
mov
call
pop
ret
imul
add
add
add
add
ja
out
push
lahf
leave
out
insl
cmpsb
in
add
add
add
and
jnp
xchg
cli
jae
pop
adc
push
mov
cmovno
jp
loope
movsb
xchg
mov
push
andl
jne
and
or
mov
daa
mov
test
push
lds
inc
aad
mov
sub
and
cwtl
pop
jl
xchg
mov
mov
popa
das
adc
push
and
std
std
flds
jle
cld
icebp
mov
or
pushl
fidivrs
xlat
jl
fisubl
or
mov
dec
xor
xchg
mov
ret
adc
and
sub
add
jns
addb
ljmp
out
jnp
das
inc
sbbl
rcrb
sub
adc
imul
sarb
xor
dec
jno
mov
xchg
fisttps
cmpb
adc
sbb
dec
aad
popa
mov
xchg
inc
pop
push
jns
sbb
faddl
icebp
jp
mov
cwtl
push
sbb
dec
dec
mov
and
adc
and
and
push
mov
shr
out
data16
sahf
jnp
cmp
push
pop
inc
fwait
adc
clc
cmpsb
pop
and
lea
inc
es
out
and
scas
test
lcall
jg
stc
test
jg
lahf
loope
push
fwait
test
push
mov
inc
popf
mov
ret
add
sbb
popf
inc
addr16
lea
inc
mov
je
xchg
or
adc
cmp
ret
aad
in
cmp
pop
cmpsb
ja
xchg
in
adc
mov
leave
xchg
inc
add
lret
jge
mov
rorb
lcall
add
test
sbbb
lea
fdivrp
pop
push
jo
xlat
sarl
je,pt
pushf
leave
mov
mov
cld
pop
call
add
cli
rcll
jmp
cmp
movsb
out
add
add
add
inc
in
add
add
pop
pop
test
push
jne
pop
int
dec
mov
and
sbbl
bound
sub
push
int
pop
rclb
lahf
fisubrs
and
mov
mov
ljmp
imul
add
aaa
and
addr16
mov
xor
sub
mov
add
xor
shll
xchg
jne
sub
iret
fisttps
mov
push
jnp
dec
and
es
lods
dec
push
and
xor
imul
int3
dec
inc
addr16
inc
mov
aas
movsb
add
test
and
nop
lret
pop
push
gs
lods
xor
adc
fmulp
imul
inc
mov
dec
inc
or
xchg
adc
dec
sub
enter
mov
xor
and
imul
jae
pop
pop
pop
jl
pop
xchg
adc
rclb
xchg
movsb
mov
mov
xchg
roll
inc
bound
sub
rorb
xchg
xor
pop
out
pushf
ljmp
xor
data16
inc
pop
aas
les
aaa
and
pop
bound
push
cmp
inc
ja
mov
push
sub
cmp
fs
pop
cs
xchg
pop
fs
into
adc
mov
mov
movsl
rcr
je
lret
mov
in
or
or
pop
xor
cs
adc
vmovsd
leave
lds
pushf
xor
or
pop
jo
stc
cmc
pop
cld
test
divl
mov
stos
pop
fcom
sbbl
or
xchg
xor
fists
inc
add
lcall
les
ljmp
add
add
add
negb
mov
sbb
mov
incb
add
cld
cmp
popf
dec
mov
lahf
xor
mov
fs
stos
mov
jge
rolb
add
das
shrl
mov
xchg
popf
dec
popf
cli
lock
lods
pushf
dec
jns
pusha
or
dec
lcall
pop
addb
pop
mov
ljmp
arpl
cld
push
mov
xor
idivb
ljmp
push
outsl
enter
sub
aas
inc
lods
hlt
stos
in
xchg
fstpl
mov
lock
xchg
inc
sbb
ret
mov
sbb
popf
popf
ja
dec
mov
xchg
out
add
or
notb
xchg
push
jmp
push
jb
out
clc
adc
sub
rolb
out
fstps
sti
ret
out
or
sub
shrl
loopne
rolb
pop
lret
je
mov
das
pop
cmc
cmpsb
adc
adc
int
pop
ret
dec
fsts
push
outsl
dec
jnp
clc
clc
push
pop
mov
cmp
out
or
mov
jmp
jl
imul
or
leave
cwtl
and
xchg
xor
cmc
mov
mov
xchg
sbb
or
sbb
jnp
lret
sbb
jmp
jno
in
pop
leave
and
mov
xchg
push
jns
push
mov
or
scas
fwait
insb
jg
jae
or
or
xchg
dec
fmul
mov
out
sub
jg
adc
dec
aam
pop
leave
scas
or
mov
or
into
gs
push
lods
push
mov
lahf
cli
mov
push
mov
dec
jge
negl
cli
fists
in
jo
out
and
mov
cmp
mov
je
ds
pop
push
sub
xchg
pop
or
pop
decb
mov
repz
xlat
pop
xor
sub
add
sub
ja
jno
dec
jne
adc
mov
add
add
ss
loopne
shll
xor
lea
lods
and
movsl
sti
insb
jle
cltd
fdivl
outsl
pop
rol
lcall
dec
pop
inc
pop
test
mov
out
mov
pop
cmpsb
outsl
push
lret
or
push
test
int3
jmp
push
popf
lods
lea
pusha
inc
add
sub
ret
pop
gs
push
sti
sahf
sahf
pusha
mov
pusha
icebp
mov
or
addl
adc
fndisi(8087
stos
add
mov
sbbl
imul
outsl
fldt
dec
push
pop
adcb
and
bound
lock
or
movsb
pop
ja
stos
out
and
imul
sub
int3
sub
or
bound
jae
add
jp
mov
push
adc
dec
dec
inc
pop
push
jae
cmpsl
or
mov
pop
pop
pop
sub
out
pop
movsb
xchg
loope
fstpl
sbb
sbbb
std
mov
cmpsb
sub
pop
negl
aam
cld
pop
push
cmpsb
pop
xchg
ds
xchg
xchg
icebp
lea
mov
loop
mov
mov
hlt
dec
popf
clc
add
mov
addl
add
push
aas
movsl
adc
lret
lock
mov
mov
pop
pop
fists
scas
inc
jge
pop
ljmp
mov
int3
mov
push
repnz
mov
data16
mov
aad
or
xchg
je
insl
cmc
push
push
decb
mov
push
ljmp
lcall
jecxz
cmp
aas
sahf
test
hlt
iret
repnz
mov
sbb
out
dec
add
cltd
enter
mov
stc
popf
lahf
mov
or
incb
add
or
iret
cmp
cmp
adc
push
inc
jp
or
xchg
cltd
hlt
rcrb
and
clc
sub
jle
mov
iret
push
dec
lds
xor
and
faddp
mov
mov
and
das
or
adcb
aam
ja
clc
xchg
add
in
xchg
pop
or
pop
decl
cmp
push
rcrl
fistl
mov
imul
in
adc
aad
pop
add
jmp
test
ljmp
notb
call
test
sub
sub
dec
and
pop
xor
pusha
push
fisubrs
jg
dec
and
addb
movsb
jae
push
cld
out
push
xor
jb
call
shrl
fnstsw
adc
mov
hlt
lcall
mov
icebp
push
pop
and
inc
test
jmp
test
stos
into
xchg
pop
and
sub
sbbb
ret
xor
mov
pop
mov
notb
in
sub
pushf
inc
or
jmp
sbb
fdivl
stos
mov
jmp
pop
arpl
aas
and
repnz
or
insl
xorl
pop
pop
and
ret
xor
sahf
fsubrs
xchg
adc
mov
leave
or
aaa
dec
xchg
sbb
jae
bound
push
sub
sbb
pusha
xor
mov
pavgb
cmpsb
ficoms
test
popa
movsb
jmp
pop
mov
data16
stc
push
cmp
loope
mov
and
call
sbb
mov
inc
clc
lret
mov
xchg
mov
xchg
mov
add
sbb
jge
and
dec
jmp
out
add
incb
add
cld
stc
mov
dec
dec
pop
repz
out
lret
call
and
ret
loopne
jns
shrl
jl
test
jae
cmp
mov
hlt
dec
push
jge
insl
insb
loopne
sub
cmp
mov
es
mov
imul
add
or
xor
adc
lahf
jno
rcrl
fisubs
ficomps
icebp
dec
inc
fsubs
xchg
in
ss
or
add
stos
or
pop
sub
jbe
mov
cs
push
jl
lret
xchg
testl
mov
loopne
cmp
xchg
sub
bound
into
fisttps
outsl
sub
lcall
pop
dec
xchg
push
test
sbb
or
stc
lods
aam
orl
adc
aad
pushf
test
xor
xorb
adc
add
mov
push
add
fildl
pop
out
enter
into
xchg
lods
push
xchg
arpl
mov
add
shrb
popa
jns
aaa
in
iret
test
fistps
xor
mov
enter
adc
pop
imul
bound
jmp
pop
xlat
sbb
movsb
fcomi
push
sbb
imul
ficoms
sahf
ja
sbb
mov
push
mov
jne
sub
daa
rcrl
sub
or
imul
xchg
fstpl
sub
push
lcall
adc
call
out
sub
loop
mov
cmp
inc
out
les
sub
out
aad
inc
cwtl
jl
repz
mov
daa
nop
repz
and
jg
add
addl
pop
stos
adc
lahf
xchg
push
fbld
addl
pop
add
inc
fcmovnb
fstpl
arpl
imul
add
incb
add
cmp
and
das
aad
aas
fdivrl
sar
imul
xchg
xchg
int3
mov
movsl
sarb
sti
aad
mov
or
xlat
ss
pusha
xchg
jge
scas
jne
pushf
fcoml
stos
jle
sub
dec
rolb
sbb
cmp
stos
lods
jnp
xor
inc
adc
adc
xor
mov
das
adc
cmc
sti
jmp
push
les
cmp
addr16
mov
push
std
add
mov
aaa
jae
je
pop
push
loop
outsb
cwtl
and
add
nop
cwtl
pop
and
subb
or
xchg
mov
lea
lods
imul
in
ja
sub
sbb
adc
xchg
mov
lea
push
mov
aam
inc
out
xor
adc
insb
rolb
lcall
shrb
dec
inc
ss
fs
push
imul
sarb
int3
inc
testb
repz
jns
mov
xorl
push
jnp
imul
loop
cmp
xor
xchg
les
ja
loope
in
add
jecxz
cltd
add
mov
sub
xor
xlat
insb
les
pop
add
adc
jns
adc
inc
pop
adc
fistpl
or
dec
out
jg
lea
mov
cmpsl
outsl
push
loop
and
xchg
add
push
xchg
shll
test
and
stc
jmp
imul
test
xor
add
mov
push
push
into
jp
pop
gs
sub
les
fcmovb
and
pop
ss
jbe
inc
push
mov
or
xor
mov
movsl
cmpsb
dec
icebp
xor
or
xchg
shr
int
cld
cwtl
jg
fwait
int3
stos
pop
add
sbb
pushf
cli
mov
xchg
out
cltd
add
repnz
incb
add
and
jo
movsb
inc
xchg
shrb
sbb
fiaddl
mov
dec
jns
push
xchg
cmp
inc
stos
fcmove
cli
or
rorl
xlat
inc
int
fistpll
add
xchg
out
push
mov
adc
out
push
inc
lods
mov
insl
hlt
enter
cltd
push
cmpsb
scas
sbb
mov
icebp
aaa
jno
xchg
pop
jno
imul
and
mov
aad
jle
add
test
mov
fiadds
push
aas
fidivs
add
rorl
loope
mov
sbb
mov
cltd
loopne
adc
mov
xor
nop
cmp
mov
lods
lcall
popf
les
sub
nop
push
stos
cmpsb
in
ret
pushf
bound
push
ljmp
pop
jge
adc
pusha
outsl
hlt
test
and
shrb
mov
aam
xchg
or
mov
mov
fistl
push
enter
mov
push
imul
and
jge
fsubrl
inc
or
pop
aaa
loope
aas
dec
mov
and
fstpl
mov
test
xor
les
leave
jle
leave
pop
test
sbb
sub
sbb
sbb
rcrl
dec
lahf
test
lret
push
loope
mov
pop
mov
xchg
mov
lds
fidivl
xchg
inc
ja
lds
mov
aad
mov
push
push
cmp
xlat
add
dec
out
adc
fstpl
pop
daa
or
pop
das
test
add
scas
and
mov
lea
es
lret
mov
and
ror
test
mov
subl
stos
outsl
loope
stc
stc
and
mov
add
fisubl
and
and
xchg
hlt
add
incb
add
xor
push
xchg
mov
jp
cmc
mov
push
lods
jmp
cmp
xchg
insb
ljmp
add
jae
sub
movsb
jne
loopne
popf
jno
adc
or
xchg
cmpsb
sbb
mov
jae
adc
jp
cld
cmp
movsl
imul
icebp
rcr
adc
pop
mov
aad
fcomi
insl
cmp
outsb
push
cld
or
mov
inc
fbstp
aas
push
sub
test
mov
js
push
ficompl
in
fildl
xchg
ja
iret
out
xchg
movsl
sbb
psrld
xchg
push
dec
pop
cmp
adc
clc
cltd
or
scas
cwtl
das
or
inc
in
cmp
xchg
pusha
popf
xor
call
and
lods
mov
sub
das
pushf
lret
xor
sub
gs
add
push
aas
cs
fs
dec
jbe
jmp
and
js
repz
xchg
xor
inc
push
arpl
or
shll
mov
add
test
call
dec
bnd
mov
cld
aas
xor
xor
orb
or
mov
or
push
jg
test
pop
push
ret
pop
adc
jl
mov
call
loope
test
cltd
lds
inc
imul
in
push
or
repnz
ficompl
out
shlb
sub
lret
mov
add
shlb
mov
pop
or
xor
hlt
dec
jl
imulb
push
filds
xchg
push
push
dec
out
std
iret
adc
inc
cwtl
leave
mov
inc
push
dec
xchg
adc
jle
loope
and
pop
cmpsb
neg
fidivrs
call
push
das
outsl
and
jne
popa
add
sub
sub
push
mov
add
iret
cmc
sti
pushf
and
push
cmpsl
jns
sbb
add
lcall
enter
stos
cltd
mov
adc
nop
pop
adc
push
mov
outsl
lea
xchg
cwtl
ljmp
and
cmp
leave
mull
lods
jp
jecxz
add
inc
jb
xchg
sbb
push
xor
aam
mov
ss
je
adc
popf
fs
fs
pop
fimull
or
add
push
or
leave
mov
pushf
push
ret
int3
das
fwait
rcrb
and
lock
jne
mov
pop
nop
inc
jg
xor
repz
mov
ret
dec
adc
mov
shll
mov
push
inc
inc
imul
les
enter
out
dec
into
fcmovb
lret
test
pop
rorb
into
dec
js
push
inc
inc
movsb
jmp
or
xchg
mov
hlt
sbb
test
inc
xchg
das
out
bnd
ret
test
mov
divl
sub
sub
add
mov
ja
mov
stc
outsb
push
popf
jbe
push
repz
xlat
mov
fldenv
les
vpsubq
lahf
mov
mov
dec
sub
jg
je
add
push
pop
scas
repz
xor
enter
insb
jnp
mov
jle
mov
popf
sbb
scas
sub
mov
imul
push
pop
and
bound
ret
popa
sti
sub
dec
loopne
dec
in
xchg
pop
out
mov
imul
daa
cs
inc
cmp
inc
jle
pop
out
fidivrl
fs
xor
xor
out
dec
push
repnz
or
ds
mov
cmc
mov
sub
dec
xor
lahf
imul
mov
mov
sbb
gs
std
cmp
stc
jl
stc
jne
inc
cwtl
pop
xchg
clc
add
in
add
ret
pop
push
out
mov
dec
xchg
mov
sbb
add
push
cld
imul
lods
ficoms
add
arpl
bound
sbb
jl
pop
jno
lds
jp
pop
cmp
dec
outsb
xchg
inc
or
adc
in
loopne
test
fadd
outsb
pop
in
loopne
push
add
cmp
sti
shlb
stos
sbb
adc
pushf
cmp
push
jae
and
mov
cmp
push
dec
or
lods
mov
scas
sub
icebp
pop
out
xchg
sbb
or
sahf
rorb
xchg
mov
testl
cmc
cltd
jp
jo
adc
lahf
sbb
and
dec
ljmp
lcall
cmp
jns
add
cltd
popf
mov
push
xor
pusha
mov
out
jle
loopne
xchg
push
sbb
test
orl
push
jg
jns
testb
mov
mulb
and
ret
fnstsw
call
jmp
cmc
xor
jl
in
xorl
ret
push
jns
stos
shlb
pop
pop
arpl
dec
ss
cli
sar
out
lahf
sbb
addb
inc
test
dec
mov
outsb
or
ret
imul
sub
adc
hlt
mov
pop
pop
sub
icebp
lcall
lea
dec
adc
jl
xchg
shrb
int3
scas
sarl
subl
popa
or
aam
push
sbb
les
sahf
fmulp
sbb
sub
bound
jecxz
out
movsl
ret
mulb
fs
adc
