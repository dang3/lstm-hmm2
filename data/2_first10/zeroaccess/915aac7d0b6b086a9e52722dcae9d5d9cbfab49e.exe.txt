push
mov
sub
xor
jmp
into
rcr
aad
mov
cmp
js
js
jle
js
xlat
cmp
fld
pop
push
or
bswap
and
sbb
inc
bound
mov
or
mov
and
lods
fadds
pusha
out
outsl
adc
sahf
add
dec
lods
pop
sub
mov
lds
adc
xchg
icebp
dec
loopne
dec
call
mov
sub
sbb
xchg
sub
repz
out
cli
in
xchg
cmp
jbe
xlat
sub
add
sbb
xor
adc
fisttpll
cmp
arpl
rclb
fistpl
and
inc
push
aaa
adc
fstpt
dec
repnz
cmpsb
fdivr
repnz
add
pop
in
mov
enter
leave
and
cli
rorb
dec
stos
sub
lahf
repz
enter
and
pop
sub
add
lret
cltd
cld
pop
cmpsl
mov
adc
clc
stc
and
test
xchg
lds
jne,pn
push
insl
push
stos
jo
cli
inc
mov
outsb
mov
jge
inc
dec
movsb
xchg
pop
ljmp
insl
lahf
cmp
ljmp
jecxz
mov
xlat
and
mov
fsubs
fldcw
mov
movsb
mov
push
mov
fwait
xor
jne
in
lcall
jmp
mov
sahf
inc
popa
dec
aaa
xchg
mov
jno
sub
jg
adc
mov
fisubrl
jp
je
add
jb
cld
mov
loopne
or
dec
fildl
cmp
add
out
cltd
inc
outsb
mov
push
sub
pop
add
mov
fisubl
in
aas
enter
aaa
mov
fwait
xor
repnz
xor
push
mov
pop
cltd
mov
dec
and
loopne
push
mov
mov
cmp
add
xchg
push
mov
inc
and
mov
pop
push
inc
xor
xor
push
sbb
dec
loopne
mov
push
sbb
aam
inc
and
jmp
cmc
cmc
rcll
inc
pop
mov
popf
adc
mov
sub
ja
int
mov
stos
dec
inc
push
xchg
test
jb
or
push
mov
jae
jns
cmpsl
cwtl
mov
call
hlt
add
dec
mov
xchg
lods
and
sub
mov
xor
mov
mov
or
mov
movl
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sub
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
leave
rol
leave
int
fimull
leave
rclb
mov
pop
jle
js
jle
js
gs
aad
sbb
call
pop
imul
popf
mov
leave
idiv
js
mov
sub
fldl
jae
les
dec
dec
xchg
ja
jbe
add
push
icebp
and
repnz
push
push
nop
loope
push
and
sbb
jp
outsb
inc
int3
aaa
or
push
xor
sahf
and
lods
daa
addr16
mov
cli
jns
inc
push
mov
pop
test
outsb
jl
or
push
mov
push
push
aaa
data16
subl
cmp
push
jae
add
shll
lret
sbbb
pop
cmpsb
cmp
jg
fbstp
mov
pusha
das
jge
pop
aam
mov
mov
mov
mov
mov
fmuls
add
xlat
in
lock
inc
lcall
stos
orb
movsl
call
test
cmpsl
pushl
pop
ljmp
aas
pop
add
sbb
xchg
lea
pop
push
adc
pop
lcall
lea
cmp
dec
cmp
data16
test
cltd
xchg
fisttpl
insb
loopne
cmp
cmp
iret
push
loop
gs
mov
and
int
push
sbb
repz
add
das
repz
mov
fimuls
xchg
test
mov
inc
outsl
repnz
loopne
je
cmc
lods
lahf
xlat
mov
ret
sbb
pushf
push
or
mov
sbb
or
xchg
push
add
adc
inc
inc
data16
mov
lock
imul
repz
imul
pop
adc
cmp
add
mov
out
icebp
jno
add
scas
jbe
xchg
dec
push
sbb
jl
test
in
ret
and
jl
xchg
push
push
stos
cmp
and
stos
test
test
lods
in
mov
pop
hlt
outsl
inc
push
sub
add
cmpsb
mov
ss
push
xor
lret
cmp
or
pop
test
push
mov
mov
jle
mov
mov
cltd
pop
xchg
imul
pop
xor
test
cltd
jmp
nop
lcall
and
pop
or
stc
dec
mov
imul
or
mov
jnp
jge
rcll
push
cmp
xorl
mov
adc
lea
orl
mov
xor
mov
neg
mov
xor
jmp
ret
ret
leave
lret
ret
out
repz
scas
sarl
js
jle
js
scas
pop
clc
jno
sarb
sub
mov
push
fucomp
mov
adc
dec
cmp
cmp
jp
sbb
lods
es
xor
mov
pop
dec
mov
mov
fcmovnu
mov
jle
lret
xchg
sub
imul
push
fs
rorl
xchg
sar
lods
pop
shrl
fcmovnu
sbb
or
jae
movsl
outsb
mov
cmpsl
repz
adc
ret
or
add
fidivs
sub
and
mov
fisttps
jp
xchg
test
out
aas
mov
mov
lods
std
shrl
pop
mov
jmp
arpl
ret
loop
push
iret
out
push
add
mov
ret
cmp
mov
test
pop
sub
sub
adc
mov
jnp
dec
xchg
insl
mov
jae
sbb
mov
lret
sahf
sub
ja
pop
add
dec
nop
jne
inc
int
cltd
flds
jne
mov
test
adc
js
xchg
push
mov
xor
lahf
mov
mov
adc
pop
sbb
and
mov
dec
fsubrl
mov
test
and
out
push
int3
xor
hlt
add
lret
lret
add
int
mov
mov
jae
into
adc
in
push
jmp
mov
in
and
push
std
push
jge
lods
clc
mov
fwait
dec
xchg
xlat
pop
adc
ret
pusha
push
sbb
aaa
jl
mov
lods
aad
addb
mov
fildll
fcomip
or
fildll
add
jnp
fcmovnu
xor
out
outsl
xchg
cli
jnp
mov
push
lret
mov
mov
inc
pop
mov
jle
sbb
loope
xchg
data16
push
cmpsb
das
outsl
push
jbe
adc
and
jo
idiv
adc
movsl
mov
rcrb
lahf
js
pop
popa
pop
cmp
add
fwait
cld
or
icebp
jmp
and
xchg
rdtsc
sahf
xchg
int
lds
mov
add
push
push
dec
in
out
sahf
pop
push
addr16
pop
xor
xor
or
test
ret
mov
mov
lods
mov
xor
mov
lds
add
leave
movl
lea
jmp
xlat
ret
ds
fcmovnu
loope
xchg
mov
js
jle
js
adc
mov
stos
mov
mov
adc
jge
adc
outsl
and
pop
pop
pop
xor
outsb
js
lods
scas
mov
stc
and
push
fwait
test
notl
iret
das
push
mov
pop
pop
popa
jns
cmp
mov
rorl
ret
outsb
xchg
roll
ret
aad
insb
imul
sub
inc
js
rcrl
mov
mov
pop
mov
fcmovu
adc
les
adc
xchg
adc
adc
dec
cmp
adc
ret
sub
ret
sbb
xchg
arpl
popf
sahf
mov
xor
inc
add
in
in
inc
and
add
jp
xor
push
lret
mov
fisubrl
fisubrl
dec
hlt
in
insl
roll
cmp
xchg
ljmp
adc
clc
imul
adc
jno
adc
push
cmp
hlt
sub
push
mov
xor
pop
xchg
xor
add
push
jle
popf
lods
jecxz
mov
sti
cmp
pop
pop
rorb
push
sbb
test
ljmp
jbe
mov
pusha
andb
push
fidivrs
and
sbb
cld
packsswb
imul
xor
dec
arpl
mov
add
xor
les
pop
data16
stos
in
mov
aam
or
inc
lahf
cmp
add
aad
add
cmpsl
pusha
rorb
les
xchg
mov
hlt
dec
lds
fidivrs
jl
movsl
mov
loopne
data16
leave
ja
daa
and
imul
cmpsb
in
mov
xchg
dec
fcompl
sarb
xor
mov
icebp
loop
popf
lds
rol
cwtl
fiadds
pop
xor
fistpl
inc
pop
outsb
pushf
mov
mov
arpl
cltd
sbb
xchg
xchg
mov
and
pop
aaa
or
repnz
adc
xchg
shll
xor
mov
xchg
call
dec
push
enter
ret
hlt
push
mov
sbb
aam
shll
rol
jecxz
push
mov
jg
imul
enter
jg
pop
inc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
sbbl
mov
decl
xor
add
mov
movzwl
and
mov
mov
mov
adcl
mov
xorl
mov
mov
movzwl
jmp
lret
iret
cmp
aam
leave
fldcw
lret
test
add
js
jle
js
dec
mov
jge
inc
pop
jnp
adc
js
sarl
ss
fmull
dec
mov
pop
or
adc
mov
mov
cs
js
adc
in
xor
roll
add
outsl
int3
in
adc
ss
inc
jle
icebp
jmp
inc
push
sbb
ret
jae
adc
cmpsb
out
cmpsl
jns
outsl
mov
or
jnp
fimull
mov
cli
pushf
stos
jnp
lds
sub
adc
stos
mov
push
xor
notb
lods
xchg
mov
fdivs
inc
ret
jo
pop
xchg
pop
ljmp
shl
adc
push
ret
mov
ds
enter
push
xchg
cmp
js
rcrb
pop
adc
notl
cmpsb
aam
loopne
lea
inc
lock
jo
jl
adc
fisubl
add
idiv
or
addr16
dec
std
push
and
call
push
jmp
arpl
rep
xchg
mov
pop
jnp
rcrb
mov
push
retw
or
ljmp
roll
incl
lds
fiadds
mov
jbe
jne
xchg
mov
ret
enter
lahf
add
pop
mov
push
lret
adc
xor
inc
add
nop
push
mov
mov
fbstp
repz
jle
in
xchg
xchg
pop
sbb
jp
xchg
xchg
imul
enter
jge
add
jns
mov
jge
pop
test
push
xchg
push
mov
inc
in
imul
insl
xor
or
xor
adc
clc
or
mov
jg
in
inc
out
xor
aaa
mov
out
sub
in
inc
stos
jmp
jl
inc
into
aad
iret
mov
pop
cmp
dec
ljmp
scas
mov
jmp
lds
movl
mov
xor
loope
mov
jns
lock
sbb
popf
inc
loope
and
stc
fwait
rcrb
inc
fwait
mov
add
xchg
test
in
inc
pusha
out
xchg
lock
cs
sub
adc
cli
aaa
aas
icebp
jno
aam
push
pop
push
push
jns
les
dec
push
xor
mov
movsl
fdivrp
add
mov
add
xor
add
and
mov
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
mov
jmp
rcl
ret
fld
aam
push
shl
cmp
flds
jle
js
enter
push
test
push
sti
jl
sub
scas
idiv
sbb
mov
and
popl
in
pop
mov
decb
sub
repnz
fisttps
dec
and
dec
stos
or
stos
and
push
lret
aam
mov
lahf
dec
fstps
fwait
push
and
pop
mov
addr16
dec
sbb
scas
dec
push
daa
sub
into
cli
popf
scas
subl
pop
or
mov
jno
icebp
add
loop
dec
cmp
outsb
sahf
loopne
dec
adc
cmp
jge
lea
or
and
xor
add
xchg
jne
es
mov
jae
in
and
sub
mov
rorb
cmpsb
jmp
xor
sbb
subl
dec
scas
sbb
jb
gs
jne
lahf
sbb
xor
rol
int3
xchg
jl
daa
insb
jo
lret
andl
inc
in
test
mov
insl
ja
stos
sbb
pop
mov
and
mov
sub
xchg
xlat
push
in
xchg
pop
jge
ja
jmp
addb
les
xchg
fs
adc
pusha
mov
sub
pop
dec
and
jbe
les
sub
test
cld
inc
bound
mov
fwait
outsl
push
aas
cwtl
imul
fldcw
jns
cs
adc
mov
adc
ficomps
sbb
or
jb
xchg
in
inc
test
cmp
add
sub
xchg
rolb
leave
xor
mov
stc
pop
lcall
aaa
mov
popf
xchg
sbb
mov
or
insl
or
ds
or
push
xchg
out
test
outsl
mov
jg
js
stos
divb
dec
jae
repnz
lods
lahf
push
push
and
dec
pop
and
scas
push
sbb
cmp
xor
or
mov
testl
add
xor
jbe
fcoms
stc
inc
loopne
mov
mov
js
imul
pop
sub
hlt
cmp
ret
rol
mov
sub
stos
jg
test
cmp
sbb
dec
xchg
movsb
xchg
jbe
test
je
dec
aaa
sbb
xor
andl
add
cmp
jne
mov
mov
sbbl
xor
add
jmp
xlat
cmp
fxch
mov
enter
or
jle
js
sub
shlb
loopne
inc
stos
imul
cmp
pop
icebp
adc
mov
sbb
loop
cmpsl
add
adc
ljmp
sub
lret
ret
ljmp
mov
push
mov
loope
fcompl
mov
mov
mov
test
iret
mov
push
and
mov
daa
cld
dec
cld
dec
mov
ja
cltd
pop
cwtl
ret
nop
mov
mov
inc
cltd
test
aad
mov
push
adc
cmp
sbb
lret
and
jmp
jo
pop
dec
mov
mov
push
fldt
pop
popa
pop
mov
cmpsl
shll
shrb
test
call
aam
mov
nop
fnsave
sub
mov
loop
push
cli
jae
fidivrs
push
mov
addr16
push
sbb
pop
mov
iret
xlat
sahf
std
enter
or
push
or
or
sub
or
imul
sbb
mov
imul
pusha
xor
dec
inc
leave
je
in
mov
push
push
out
decl
push
loop
cmp
fs
sbb
fisubrs
or
pusha
lock
rcrb
xchg
faddl
into
lahf
ljmp
pop
fadd
cld
fdivr
imul
mov
int
or
in
test
je
imul
int
ljmp
dec
or
add
imul
pusha
loop
and
cli
xor
sahf
orb
loopne
mov
out
ret
push
pop
cmp
lahf
add
push
js
stos
fsts
mov
decl
mov
jl
jbe
mov
fdivl
shll
sub
push
ror
add
xchg
push
push
clc
mov
repnz
adc
sbb
add
mov
lret
stos
stos
push
sub
shrb
sub
imull
sti
ja
negb
xchg
sub
lret
jg
lret
es
mov
repz
in
cmc
sbb
lds
mov
clc
cmp
xor
test
je
add
aaa
adc
and
mov
mov
ljmp
mov
or
add
test
or
add
mov
jmp
aas
lret
ret
aad
flds
inc
ret
imul
mov
js
jle
js
imull
xor
in
mov
imul
push
dec
pop
sbb
inc
cmp
sbb
xchg
mov
clc
test
cmpsb
push
sub
or
sub
ja
xchg
stos
arpl
adcl
sbb
cli
ret
cmpsl
ret
lret
gs
inc
in
out
addr16
mov
cs
jecxz
fisttpl
and
lock
dec
data16
ljmp
xor
cmp
jmp
repnz
pop
mov
arpl
gs
testb
out
movsl
or
out
jo
sbb
cmp
in
xor
sbb
sub
xchg
movsl
xchg
pop
repnz
sub
or
and
insl
jae
mov
sbb
aam
repnz
in
jge
insl
or
fisttpll
enter
or
lea
pop
in
cmp
xor
jge
fnsave
ret
sbb
outsb
sarl
ror
cmp
lds
out
adc
mov
sbb
outsl
pop
sbb
xlat
in
addr16
add
int
stc
cmp
mov
xchg
lea
xchg
sti
inc
cmp
cmc
lock
loopne
testb
fimull
sbb
mov
dec
jb
in
shll
inc
cmpsb
lret
addr16
mov
xchg
sbb
push
jno
shrb
pop
std
mov
sbb
push
ja
mov
jg
cltd
neg
xor
adc
cs
mov
mul
xchg
sbb
inc
shll
in
rcrb
dec
icebp
mov
imul
xor
xchg
push
adc
pop
cmpl
mov
notl
adc
add
jne
das
jge
mov
xor
mov
out
aam
mov
push
xchg
mov
mov
push
push
sub
jno
leave
and
dec
and
or
rcrb
arpl
in
pop
movsb
mov
loopne
lods
jns
int
les
mov
push
xchg
mov
adc
scas
aad
jo
das
orl
xor
int
mov
loope
pop
out
sub
cmpsb
or
repz
jp
dec
rolb
pushf
pop
sbb
xor
and
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
jmp
ret
ror
into
fcmovnbe
out
dec
stos
dec
xor
in
or
js
jle
js
sbb
mov
roll
in
push
ret
and
push
xor
fwait
push
xchg
test
lds
lcall
loop
arpl
mulb
das
in
std
xor
fdivp
adc
pop
imul
cmp
add
dec
mov
add
mov
sub
sub
xchg
adc
std
les
and
sbb
in
rcl
push
sbb
not
mull
mov
cli
mov
sarb
cmp
call
mov
mov
jne
xchg
sbb
sub
aas
cmpsb
mov
enter
pop
pusha
adc
mov
data16
pusha
cld
test
cmpsl
ja
fstl
mov
nop
pusha
push
jp
xchg
pop
sbb
stc
addr16
lds
cmp
fistl
xchg
add
in
fwait
cmpsb
adc
cmp
cltd
pop
add
sub
xor
push
in
lret
fistpl
jns
jb
jbe
sub
adc
add
inc
mov
jo
pop
mov
loop
pop
pop
fimull
stc
jmp
nop
shll
addl
out
insl
mov
and
cmpb
and
xchg
adc
xchg
shlb
stc
enter
xchg
int3
rcl
mov
aad
bound
xchg
mov
scas
es
add
mov
sub
stos
xor
pusha
fs
lret
jno
stos
push
lds
push
aad
dec
xor
ja
push
ss
out
mov
pop
jns
popa
ja
push
pop
das
jge
fsubl
cmpb
sbb
es
mov
add
int3
jle
cmp
hlt
push
aaa
fwait
mov
dec
or
jne
xchg
xor
sbbl
sbb
sbb
fldcw
inc
adc
sub
pop
scas
xchg
pop
xor
xchg
cmp
inc
jecxz
pop
rcll
mov
inc
test
add
mov
enter
leave
push
gs
imul
mov
shr
or
sub
mov
pop
stc
adc
pop
dec
ret
pop
mov
inc
add
pop
je
jmp
jl
notl
fldcw
enter
add
ror
int
rcr
aad
bound
sub
js
jle
js
sbb
jl
leave
mov
mov
mov
aas
mov
repnz
andl
mov
inc
mov
rclb
jecxz
push
int
mov
adcb
mov
jo
push
cmp
push
test
enter
add
imul
shll
sbb
adc
dec
dec
cmp
aas
mov
stos
and
push
ja
ucomiss
add
insb
clc
push
loop
js
xchg
cmp
pop
push
stos
jae
and
out
push
out
mov
lea
or
inc
icebp
into
jge
lock
or
jmp
popa
pop
sbb
cld
and
cltd
outsb
pusha
in
mov
test
andb
lahf
and
sbb
sahf
sbb
mov
shll
mulb
dec
insb
push
push
xor
aaa
add
xlat
cmp
imul
lahf
data16
mov
pop
jnp
push
xor
nop
stos
mov
testb
xor
imul
mov
xor
push
fistpll
iret
cmp
push
fbld
arpl
sahf
xor
mov
gs
out
cmpsb
call
mov
push
shll
scas
fucomi
adc
pop
pop
popf
divb
lea
mov
mov
imul
inc
leave
mov
scas
sti
push
call
and
adc
sbb
push
fstp
rorb
in
inc
xor
push
ret
clc
add
cmpsb
sbb
inc
shrb
aaa
xor
nop
int3
jl
xchg
xor
fdiv
pop
push
or
pushf
shll
add
inc
sbb
les
outsb
or
sti
and
test
out
in
in
xchg
dec
adc
mov
mov
pop
fisubrs
test
cmp
int3
jmp
imul
lods
push
ds
sub
aad
cltd
cld
adc
es
and
cmc
js
nop
aas
pop
outsl
jmp
lock
adc
push
lcall
scas
push
inc
cli
insl
out
sbb
js
mov
imul
lcall
cmp
mov
js
test
adcl
cltd
les
jg
loope
sti
iret
outsb
divb
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
leave
vpsubusw
leave
repnz
cld
sub
js
or
js
jle
js
loope
jecxz
rcl
std
sub
cmpsl
in
mov
lcall
lea
xor
cld
andb
rorb
outsl
mov
lea
out
imul
stos
mov
hlt
lahf
subl
shrl
or
mov
or
and
ficomps
call
cmpsl
das
cli
nop
pop
and
movsl
fs
jb
mov
test
push
loope
mov
xor
in
or
sub
ss
fists
pop
pop
insl
lret
mov
mov
lahf
mov
test
mov
es
xchg
ss
loop
fxch
cmc
xchg
popf
bound
inc
xor
add
cmp
adc
in
mov
insb
sub
arpl
cmc
insl
xor
test
rcrb
push
aaa
mov
les
pop
jecxz
push
or
fsubrl
sahf
popl
push
mov
mov
or
xchg
mov
iret
pop
aad
xchg
in
rol
negb
imul
cli
call
sahf
cmp
mov
pop
cmp
int
sub
push
add
xorl
rcrl
mov
sbb
repnz
and
add
jl
popa
dec
in
sub
mov
lcall
addl
insb
adc
xchg
mov
lock
mov
pushf
sti
repnz
dec
data16
sti
jecxz
sarl
scas
in
out
rcll
sbb
cmpsl
add
sahf
scas
movsb
mov
outsb
adc
ficomps
xlat
loopne
call
lds
std
js
icebp
dec
je
aam
xchg
jecxz
aaa
lea
cmp
gs
test
mov
or
iret
lret
mov
cmp
mov
dec
fildl
sub
add
outsl
lcall
in
hlt
lcall
cltd
imul
xor
dec
mov
and
xchg
fcmovne
out
xchg
je
in
sbb
pop
call
mov
push
out
xchg
pop
icebp
repz
cmp
xchg
fdivr
movsb
mov
dec
incb
add
outsb
imul
mov
int3
dec
fmuls
inc
fadd
jbe
xchg
loop
fs
jge
cli
jne
jo
sbb
inc
imul
push
out
sub
dec
clc
jmp
ror
ror
ror
test
xchg
push
sbb
std
dec
xchg
adc
js
test
rcll
mov
ror
cmp
jmp
cwtl
ret
movsb
out
adc
cmpsl
xor
pop
pop
inc
push
mov
gs
lahf
sbb
repnz
mov
sbb
aaa
cmp
add
sbb
icebp
inc
popf
push
out
nop
mov
xor
outsb
clc
mov
sbb
mov
pusha
xor
ds
in
les
lods
fnstcw
je
insb
data16
mov
test
pop
nop
orl
lret
mov
or
xchg
in
cmpl
add
aas
dec
inc
jno
in
enter
fwait
mov
sub
fisttpll
sub
lods
jmp
xchg
add
mov
fwait
push
mov
or
aaa
xchg
sub
fmuls
movsl
sbbl
sbb
add
or
mov
jp
loope
insl
out
or
ds
out
lret
jb
test
insl
mov
dec
popw
int3
inc
add
dec
xchg
push
je
mov
lret
mov
out
cltd
mov
repz
or
dec
ficompl
jnp
lods
or
push
test
lea
xchg
rol
js
dec
movsb
data16
hlt
mov
jle
popf
adc
flds
cmpsl
das
adc
pop
pushf
xlat
out
mov
pop
aam
subl
cld
icebp
js
sub
popf
mov
sbb
and
sub
xchg
pop
icebp
xor
push
jp
mov
fsts
inc
mov
lea
pop
leave
mov
adc
leave
call
xor
popa
daa
inc
and
cltd
cltd
cmp
outsb
jae
loop
xor
add
pop
loop
adc
es
notb
xchg
cli
int3
add
sub
mov
nop
cli
mov
xor
nop
adc
insl
dec
xor
fiaddl
pop
dec
pop
inc
arpl
inc
shll
jb
pop
xchg
xlat
and
pop
mov
fdivr
sbbl
mov
sub
cs
sbb
ret
push
fst
cmp
lret
mov
test
iret
and
nop
jo
roll
cmpsb
pop
stc
outsb
and
popa
mov
xchg
out
daa
pop
push
shll
movb
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
cmp
cmp
rcr
fidivl
mov
js
jle
js
sti
or
add
sti
mov
ja
push
pop
adc
adc
ss
addr16
xorb
pop
xor
lock
push
mov
and
sahf
sub
and
dec
xchg
in
mov
mulb
test
pop
jg
mov
ja
jno,pn
mov
int3
mov
jno
xchg
adc
fcmovbe
add
aaa
push
and
xchg
std
push
je
ret
fistpll
imul
das
cmc
push
xlat
xchg
jmp
mov
adc
xor
call
dec
iret
pop
jo
ficomps
pop
shrb
xor
jo
testl
or
mov
lret
inc
mov
scas
inc
out
add
daa
fwait
cmpsl
jne
add
dec
fisubs
aaa
sub
inc
sbb
jnp
lahf
jo
push
lea
dec
mov
jno
lret
out
and
sub
lret
jg
ljmp
pushf
cs
int
add
dec
inc
lcall
mov
movups
or
subb
sbb
sub
movsl
lahf
jbe
push
xchg
and
mov
jp
icebp
jo
scas
jg,pn
stc
mov
in
enter
and
xor
or
cmpsb
xchg
scas
xchg
inc
fcoml
test
loope,pt
sti
jb
xchg
xchg
test
in
xor
addr16
xor
mov
leave
or
movsb
push
stos
call
cmp
pushf
add
adc
sub
movsl
fdivs
add
and
push
mov
sti
repnz
mov
xor
jp
ljmp
fistpl
lock
push
test
dec
cmp
pop
or
scas
je
dec
out
push
repz
xor
inc
sub
ss
mov
sbb
add
jno
fildl
dec
test
imul
negl
sbb
imul
sub
mov
nop
jmp
jnp
sub
xchg
cmc
fsubrl
xchg
out
call
push
sbb
and
stos
sbb
cld
mov
jb
pop
add
pop
mov
lock
inc
dec
hlt
lret
bswap
push
jne
mov
mov
push
and
std
sub
add
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
jmp
xlat
aas
mov
fwait
clc
movb
sbb
jle
js
shlb
pop
cmpsl
sub
jb
mov
cmp
dec
movaps
push
fldl
xchg
daa
and
dec
xor
xchg
sbb
sbb
jecxz
nop
fisttpll
lahf
test
mov
sti
xchg
dec
push
fstps
pop
daa
jle
or
addr16
cmc
sub
and
inc
adc
rcr
push
pop
mov
in
cmp
add
and
lahf
in
xorb
adc
push
cmp
ss
pop
sbb
sbb
in
dec
xor
cmc
cmc
popf
ret
sbb
loope
xchg
idiv
inc
xchg
pusha
js
out
inc
pusha
sub
add
out
stos
mov
inc
and
adc
add
in
adc
mul
dec
push
jmp
mov
sbb
in
out
fsts
mov
mov
adc
mov
push
pop
and
testb
xchg
pop
jg
fistps
inc
test
cld
hlt
push
lret
sub
rcrl
push
aaa
cmpsl
lds
add
pop
addb
loop
mov
call
das
add
dec
jae
jle
cld
nop
cwtl
les
inc
into
adc
insb
or
dec
loope
fucomip
fisttpl
pop
sub
cmp
dec
test
add
xchg
sti
cwtl
ds
hlt
xchg
mov
rclb
push
or
rol
aad
sahf
cld
xor
dec
pop
repz
push
sbb
cmp
push
dec
icebp
mov
sub
fwait
inc
push
arpl
cwtl
scas
dec
or
mov
imul
sub
push
jmp
cmc
pop
mov
jnp
mov
movsl
scas
out
push
xor
add
popf
jns
jg
ss
iret
push
inc
ja
lods
pop
dec
mov
lahf
inc
sahf
stos
nop
aad
mov
out
push
adc
jnp
jl
call
mov
call
inc
jb
loop
in
fnstcw
andl
mov
out
mov
in
pushf
or
lods
sbb
xor
mov
fs
push
popf
cltd
xchg
and
out
add
pop
mov
popf
sub
adc
mov
test
js
inc
push
fadd
dec
cmp
xlat
cmc
mov
jmp
into
rol
ror
mov
lahf
aas
imul
jmp
and
xchg
inc
cltd
sub
stc
xchg
jne
sbb
sub
icebp
mov
mul
sbb
and
repnz
lcall
xor
call
lea
mov
and
sahf
jecxz
pop
aad
lods
inc
in
push
bnd
je
out
icebp
js
pop
push
dec
aaa
pop
mov
insb
movsb
sub
mov
mov
loopne
mov
xor
xor
mov
das
in
sbb
cs
dec
xor
mov
inc
sarb
mov
aas
mov
je
sub
enter
enter
mov
std
mov
xchg
fildll
leave
push
outsl
sar
add
and
jmp
xchg
sub
cs
adc
fnstsw
or
jg
xchg
or
fstps
cmpb
je
mov
adc
insl
push
stos
shlb
xor
sub
xchg
cmp
mov
mov
aaa
pushf
lcall
cmp
into
ret
xor
add
stos
lods
and
pop
and
loop
fstps
ljmp
pop
inc
nop
push
inc
je
pushf
sub
je
or
mov
shrl
dec
loop
jle
inc
aas
adc
cmpsb
imul
sbb
cmp
sahf
aam
cmp
mov
pop
pusha
add
sub
idivl
sbbl
adc
jns
and
popf
mov
mov
push
stc
rorb
jle
mov
insb
stos
dec
bound
pop
addps
push
xor
jo
shrl
push
mov
adc
add
pop
add
fistl
int3
xor
out
mov
jecxz
fistps
add
aaa
pop
mov
addl
sbb
cld
bound
aaa
inc
andb
outsl
je
push
cmp
mov
cmp
ds
shr
adc
xchg
popw
loopne
lods
push
cmpsl
ffree
adc
cmpl
xor
out
movl
cmc
nop
fdivrl
int3
cltd
pop
inc
push
mov
cmpb
lock
mov
insl
push
aaa
inc
out
inc
cmpsl
repnz
add
lods
std
cmpsb
dec
popf
or
out
lahf
add
xor
cmp
je
jmp
leave
rol
rcr
rcr
ss
fwait
jo
or
jle
js
mov
inc
push
loopne
sbb
cmc
lods
mov
fs
pop
jbe
sbb
sub
ja
mov
aas
clc
mov
aaa
mov
push
or
arpl
addr16
sahf
test
aad
scas
sub
gs
and
or
je
lds
push
xlat
pop
jo
pop
xchg
iret
jle
shrb
mov
xor
dec
sub
sub
fisttps
insl
mov
sbb
dec
mov
xor
rorl
cmpl
or
aaa
sbb
or
and
and
ljmp
jmp
mov
nop
ds
jmp
repz
out
loope
lahf
pop
mov
jno
jo
mov
add
pop
sbb
or
xor
data16
mov
out
inc
popf
fidivs
pop
sbb
adc
pusha
add
lret
fisttpll
fisttpl
mov
cmp
pop
or
add
int
jp
pop
icebp
imul
jb
and
and
mov
in
jbe
es
push
sbb
pop
sbbb
frstor
or
stc
imul
or
add
cwtl
test
sti
cli
jno
and
mov
mov
push
test
cmp
add
frstor
jnp
sub
push
sub
ljmp
jno
pop
mov
les
stc
aaa
dec
inc
jns
adc
jno
fwait
out
and
aam
cmpsb
push
ljmp
add
push
cmp
pop
lods
xrelease
mov
loopne
mov
mov
iret
fwait
xor
das
loop
and
mov
inc
enter
aaa
pop
add
and
and
add
pop
cmovbe
popa
adc
or
popa
push
cmc
adc
inc
mov
out
pop
mov
lods
xchg
orl
inc
push
sbb
nop
xor
fstp
sub
neg
xchg
cmp
divl
loopne
test
test
xchg
mov
sahf
lret
inc
jb
push
js
jbe
in
sub
test
dec
and
insl
push
je
xchg
or
fucomi
inc
adc
in
mov
insb
mov
inc
or
add
mov
jmp
jmp
ds
lret
fldenv
lahf
and
and
jle
js
aam
stos
inc
mov
fs
adc
or
insb
inc
fcomip
roll
pop
cmp
jb
jno
daa
xchg
jp
lret
xchg
pop
mov
subb
std
cmp
or
inc
inc
fcoms
stos
rcll
pop
out
pop
push
loop
les
mov
cmp
sub
xchg
dec
mov
jbe
lret
pop
lods
xor
hlt
int
pop
inc
in
pusha
lds
outsl
ja
mov
nop
pop
pop
call
mov
dec
and
push
inc
push
je
xor
test
push
dec
daa
jecxz
cmp
add
ljmp
push
push
sbb
inc
and
cmp
mov
cltd
arpl
adc
pop
jo
mov
mov
imul
mov
int
repz
icebp
mov
add
icebp
pop
sub
add
cmp
adc
cltd
ffreep
loope
int
or
and
stos
and
add
test
cltd
push
pop
jae
adc
mov
jns
ss
call
clc
daa
mov
cmp
sub
movsb
jmp
mov
inc
xchg
xor
jl
popa
sbb
cmp
xchg
mov
daa
mov
sub
push
call
cmp
outsb
pusha
popf
movsb
mov
dec
je
mov
clc
mov
outsb
push
sub
xchg
insl
mov
ficompl
testl
push
sub
sub
ret
and
and
ret
mov
sub
push
loop
ss
mov
fisubl
mov
xchg
sub
pop
shlb
cmp
imul
sbb
inc
or
aam
pop
add
fstpl
repz
mov
orl
pusha
jno
in
cmp
loopne
push
inc
jp
lds
cltd
clc
pop
imul
fimuls
mov
in
lock
in
xchg
fldcw
loop
jl
ret
out
jge
in
dec
and
sbb
das
jbe
sbb
xchg
xor
frstpm(287
incl
icebp
mov
mov
movsb
push
mov
push
lea
ss
clc
pop
add
shrl
arpl
mov
arpl
rolb
add
mov
add
mov
mov
mov
jmp
aas
leave
enter
fxch
mov
pop
mov
js
jle
js
outsl
inc
xchg
imul
mov
popa
fcoms
mov
add
loop
clc
ret
test
adc
push
pop
out
jo
lcall
dec
inc
mov
test
mov
cli
jb
dec
xor
add
mov
mov
or
push
jmp
push
mov
pop
add
jp
and
jo
mov
adc
cmpsl
dec
daa
push
pushf
out
or
mov
cmpsl
xchg
jne
test
gs
push
ljmp
decl
add
mov
sbb
iret
das
daa
test
mov
addl
pop
dec
bound
fldl
jp
push
and
sti
or
ret
cmc
fwait
sub
mov
test
xchg
out
and
sbb
dec
sub
jp
jp
xor
repz
cltd
movsb
add
mov
outsl
mov
bound
or
mov
sub
mov
sti
xchg
lret
outsl
mov
cmp
jo
push
sub
dec
mov
imul
mov
push
nop
sub
shrl
mov
and
pop
out
jp
shlb
outsb
lds
cli
push
rcrl
cmp
mov
pop
mov
mov
lahf
push
add
nop
in
sbb
ss
sbb
sub
lret
mov
cld
int
loopne
imul
and
mov
add
mov
or
leave
ljmp
add
xor
out
roll
push
aaa
sbb
outsb
int
gs
decb
xchg
push
mov
pushl
aas
xor
jae
test
cmp
mov
fcomps
loopne
adc
addr16
pop
pop
int
mov
aas
je
in
ret
ret
adc
call
adc
pop
lods
adc
dec
or
movsl
xchg
movsl
jl
daa
lds
adc
push
mov
popl
sub
mov
popf
mov
inc
ds
xchg
cmp
dec
adc
cmp
jg
jns
pop
or
and
jae
mov
ret
cltd
inc
or
mov
sti
dec
push
scas
shrl
pop
loopne
pushf
sub
mov
lcall
jb
xor
orb
or
or
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
mov
add
push
xor
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
decl
movl
mov
not
jmp
rol
lret
leave
lret
leave
lds
dec
inc
insb
les
sub
dec
jle
js
addr16
lock
mov
in
repnz
bound
and
into
push
cmpsl
test
xlat
bound
ret
aas
and
mov
test
sti
xor
stc
mov
pop
jle
enter
ret
aad
push
inc
cltd
fisubrs
pop
pop
push
mov
leave
divb
sbb
lea
shrb
scas
gs
ljmp
cmpsl
iret
insb
adc
out
loopne
iret
cwtl
inc
std
add
rcrb
je
hlt
cmp
sahf
xor
aas
mov
ljmp
insl
xor
mov
sub
stc
adcl
inc
add
xchg
adc
inc
gs
or
dec
call
mov
pop
mov
lahf
fisubl
xor
and
cltd
clc
cmp
mov
dec
jns
push
push
inc
rcrb
test
loope
outsl
pop
xchg
ljmp
cmpsb
lret
mov
sub
or
fbstp
sbb
xchg
inc
inc
or
sub
push
icebp
fnstsw
pop
in
push
mov
in
into
mov
push
repnz
stc
sbb
daa
jne
mov
data16
lock
cmpxchg
fmul
xchg
add
ljmp
hlt
mov
mov
mov
sbb
xor
in
sbb
add
push
inc
mov
xor
inc
xor
and
or
push
xchg
mov
sub
js
cmc
xor
in
jmp
je
sbbb
pop
stos
and
dec
test
inc
orl
lcall
in
adc
lods
inc
xor
and
add
jmp
incl
or
mov
sbb
cmp
repnz
sub
mov
cld
or
pushf
aam
jge
mov
inc
or
sub
push
insb
gs
lods
mov
shll
jo
push
jmp
movsb
out
mov
sbb
fisubrs
aam
aad
push
adc
mov
sbb
and
pushf
push
mov
push
shr
das
adc
cmpsb
jge
sbb
aaa
outsl
or
insb
xchg
fstpt
xor
push
daa
inc
mov
add
jnp
idivl
nop
sub
sarl
pop
shr
cmp
mov
data16
jo
pop
pop
add
mov
and
in
icebp
cmp
inc
inc
fcmovbe
sbb
jnp
mov
fadd
daa
cmp
scas
xor
call
push
or
notl
push
push
fwait
loope
push
mov
jne
inc
add
add
add
or
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
push
push
push
call
jmp
xor
jmp
rol
int3
pop
test
test
jno
js
dec
jle
js
cmp
fs
int
adc
mov
and
std
std
jge
bnd
xchg
ljmp
les
rcr
push
fmull
push
and
das
mov
push
into
inc
sub
repnz
xchg
mov
xchg
inc
jne
out
lret
jbe
out
xlat
je
mov
xor
or
in
movl
stc
lods
ss
xor
mov
fbld
mov
arpl
dec
outsb
push
cmc
loopne
xor
les
in
dec
jb
mov
faddl
cmp
jnp
in
jbe
outsl
fwait
movsb
mov
ficomps
pop
adc
adc
add
mov
lret
adc
mov
sbb
cmp
insl
imul
imul
mov
movsb
xor
js
xchg
jb
pop
adc
cli
out
sbb
pop
adc
cmp
movsb
fldl
out
and
roll
roll
jle
cmc
push
arpl
add
mov
mov
fistps
mov
cmp
and
imul
mov
fcomps
fldt
negb
pushf
lods
mov
jnp
arpl
inc
dec
movswl
fsub
scas
ljmp
aas
shrl
or
mov
xchg
adc
pop
mov
mov
in
pop
test
add
pop
xchg
bound
xor
pop
lods
pop
cmc
das
out
into
xchg
insb
jecxz
iret
inc
xorl
xor
xlat
pop
mov
nop
jb
es
cmpl
jl
or
xchg
mov
orb
mov
adc
mov
loopne
clc
push
int
push
mov
push
data16
pop
mov
push
push
aas
pop
adc
lea
push
sub
imul
imul
jle
rcrb
stos
imul
cmpsb
add
sub
mov
cmp
sahf
sbbb
inc
sbb
sti
jp
push
lock
xchg
xchg
pusha
pop
data16
sbb
add
push
repnz
in
mov
cmp
xchg
push
inc
mov
scas
mov
stos
jmp
sub
pop
int3
in
cmp
outsb
in
jne
in
das
js
or
mov
jecxz
pop
xor
imul
cli
xor
cmp
jb
icebp
out
data16
or
push
nop
push
in
sarb
mov
inc
cmp
xchg
repnz
mov
inc
lods
fadd
jmp
outsl
xor
adc
std
lock
rolb
sub
aad
or
mov
xor
inc
aad
xchg
dec
pop
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
jmp
enter
aam
mov
int3
push
xchg
add
mov
dec
jle
js
inc
test
fisubrs
int3
mov
dec
cmp
test
mov
and
sbb
daa
aad
ss
dec
dec
inc
pop
jne
sub
shr
out
pushf
loop
lea
movsl
ret
mov
mov
pusha
arpl
jmp
bound
mov
rcrl
rcll
out
test
into
sbb
adc
inc
nop
sub
pusha
stc
mov
out
shr
or
shr
ja
mov
ljmp
sub
scas
mov
fcoml
or
xchg
fwait
mov
mov
test
xchg
imul
sbb
lcall
ds
mov
push
divb
mov
mov
sbb
loop
jne
insl
mov
inc
jle
mov
mov
insb
or
jle
test
cli
mov
pop
and
lahf
or
xor
shll
push
cmc
arpl
mov
or
pusha
jbe
clc
fidivl
sbb
into
sub
cmpsl
out
negb
clts
xchg
sbb
jbe
jnp
daa
sub
mov
pop
scas
dec
jecxz
cmp
mov
xor
int3
js
je
lea
inc
pusha
dec
lret
ret
push
dec
xchg
andl
mov
andb
popa
adc
fadds
rclb
xor
and
test
fs
addl
sahf
out
jg
test
mov
mov
fneni(8087
cltd
scas
or
aam
or
sub
inc
mov
jle
push
sarb
xchg
mov
mov
inc
inc
push
push
aad
sub
inc
sbb
mov
mull
push
mov
cld
je
sar
outsl
in
popf
dec
mov
cs
in
mov
out
fwait
ja
ret
sbb
pop
clc
icebp
jl
daa
or
and
fisubl
xor
pop
and
sub
add
jecxz
shl
cltd
jns
cmp
cmp
add
lds
scas
xor
or
das
loop
cwtl
out
mov
mov
or
and
pushf
call
mov
xrelease
shll
sahf
mov
pop
jnp
xchg
orl
repz
adc
les
test
idivl
cli
ja
sub
hlt
xlat
lea
push
or
cmp
pop
jae
push
popf
stc
sbb
mov
xchg
jmp
loope
movups
and
sub
xorl
ret
jge
add
cmp
je
mov
mov
xor
jmp
rcl
leave
aad
xor
ds
loopne
xor
dec
jle
js
inc
hlt
shl
gs
mov
aad
fadds
cwtl
push
push
cmc
cmp
insl
xchg
fldcw
push
cmc
dec
mov
inc
xchg
test
int3
addr16
fwait
xor
out
fisttpll
push
bound
or
mov
push
ds
in
xchg
cmp
or
add
sub
mov
adc
xchg
scas
cmp
mov
add
fsubrs
aam
dec
xchg
out
inc
mov
lea
push
and
imul
xrstors
mov
jns
fisubs
lret
test
or
adc
add
test
push
xor
push
js
nop
mov
mov
test
aad
popa
lahf
sbb
pmaxsw
xchg
cld
mov
or
in
dec
pop
fildll
and
ret
fwait
cwtl
lock
scas
stos
fisttpll
xor
adc
out
mov
xor
test
out
adc
roll
cmovns
cmc
push
in
add
sbb
icebp
fwait
mov
dec
sub
mov
adc
sub
push
repz
nop
xlat
idivl
dec
and
push
xor
inc
mov
sub
notl
outsl
iret
loop
mov
cli
aad
sub
xchg
dec
stos
inc
aaa
push
push
push
xchg
cld
lcall
push
iret
aad
xchg
sub
ds
std
test
mov
ss
nop
int3
push
dec
jnp
lods
mov
or
add
pop
sahf
icebp
hlt
xchg
pop
xchg
lea
lret
imul
jl
jmp
in
sbb
in
ret
dec
aas
stos
mov
jl
add
mov
push
xchg
jp
mov
mov
std
adc
cmp
icebp
add
xor
add
lds
test
movb
push
divl
inc
xchg
adc
mov
mov
adc
shlb
pop
cmpsb
sub
ffreep
inc
bound
and
test
es
xchg
dec
mov
ss
cli
or
mov
stc
xor
iret
rorl
sub
les
repz
add
daa
scas
out
xor
jge
jne
ds
pop
loopne
xchg
lods
xor
out
cmpl
sbb
inc
into
aas
inc
jge
in
shrl
jnp
or
push
or
dec
mov
jecxz
adc
loop
inc
stos
jp
xchg
aam
lahf
jns
sub
mov
mov
mov
or
enter
mov
iret
stos
push
call
jne
out
push
sbb
fcompl
jl
loopne
push
ss
add
mov
int
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
aas
rol
int3
aad
dec
sub
cmp
dec
jle
js
cli
mov
sbb
push
andl
out
push
ds
xchg
leave
leave
cltd
pop
out
and
data16
jno
in
or
push
pop
std
mov
rol
arpl
sub
xor
mov
jge
inc
test
fucompp
dec
cmp
sarl
adc
sbb
push
push
mov
ret
xor
xchg
cmpsb
adc
xchg
arpl
mov
insl
ret
add
mov
cmp
mov
or
dec
movsl
inc
inc
inc
data16
push
and
in
enter
ret
mov
out
clc
add
ret
loope
js
xor
jmp
ja
dec
stos
testb
sub
jne
lret
cwtl
xchg
iret
mov
xchg
jmp
xchg
xor
cli
mov
jbe
int
iret
gs
fdivl
dec
and
xlat
dec
ds
adc
test
rcrb
lea
sub
mov
nop
les
push
jb
insb
rol
cmp
inc
pop
popf
pop
ss
xor
jmp
sbb
sti
push
or
dec
lahf
add
jno
js
scas
cmp
mov
jmp
inc
and
mov
push
lock
mov
test
mov
sbb
cs
sahf
jb
push
xchg
mov
mov
sarl
sbb
or
hlt
or
and
adc
cmpsb
push
idivb
jle
cmpsl
rolb
in
aaa
jns
fistl
dec
jo
sbb
jo
sbb
repnz
push
enter
dec
jecxz
int3
pop
mov
pop
clc
jno
scas
adc
fwait
data16
cs
or
lret
imul
push
not
pushf
or
and
xor
mov
lods
sub
dec
pop
daa
loopne
cmpl
jnp
repnz
clc
jno
lods
lcall
and
sbb
and
mov
cs
jns
sub
into
sbb
scas
push
js
scas
fldcw
mov
mov
cmp
jns
mov
repz
pop
jbe
push
xor
dec
loopne
or
ljmp
sahf
lcall
fldt
stos
scas
push
jle
or
loopne
call
inc
jb
push
mov
jns
lret
lea
pop
mov
jg
mov
adc
fcoml
sub
jb
mov
add
xchg
fwait
inc
lds
push
lahf
or
scas
fcoml
sbb
push
or
sub
shl
mov
xor
push
sbbl
add
add
rcl
ror
aad
inc
jecxz
fdivr
jne
jo
xor
js
jecxz
ret
pop
xorl
dec
pop
cmpb
push
mov
js
insb
in
xchg
xchg
add
inc
mull
sub
xor
mov
rcl
push
sti
sub
mov
loopne
movsl
imul
sti
sub
add
add
cltd
int3
movsl
lods
and
xchg
pop
pop
push
jg
push
call
das
mov
or
mov
and
shrl
add
mov
repnz
push
xchg
sbb
mov
insl
inc
or
xor
fildll
lods
or
xorb
xchg
push
xor
mov
xor
mov
or
lea
add
shll
sub
xchg
pop
mov
inc
push
shll
mov
ja
iret
inc
push
xchg
jb
push
out
leave
nop
mov
dec
mov
mov
and
cmp
sti
mov
xchg
enter
je
mov
or
sub
js
cwtl
rcr
pop
sub
cmp
xor
into
dec
scas
ljmp
and
xchg
inc
xchg
mov
int
lock
in
inc
fisubrl
aam
mov
std
xor
adc
xchg
ljmp
repz
loop
pop
fcmovne
xchg
or
sbb
arpl
jecxz
aas
cltd
out
push
cmpsb
add
in
xchg
and
fldenv
lock
xchg
ljmp
jmp
cmp
test
push
scas
pop
adc
sbb
jns
rol
jno
mov
jae
cld
mov
add
pop
push
pop
rcrl
xchg
loopne
inc
or
mov
enter
daa
add
lea
or
mov
cltd
cmp
imul
sarb
or
sarl
iret
sub
mov
in
and
push
shr
pop
mov
iret
cmp
mov
jno
mov
into
xchg
lds
outsb
leave
add
pop
inc
mov
pop
or
loop
fidivrl
jne
pmovmskb
sar
divb
dec
mov
out
add
inc
int
xchg
jl
ret
mov
mov
xchg
and
mov
push
jo
add
xchg
mov
xor
iret
mov
add
jle
cwtl
nop
cmp
rcr
fstl
push
xchg
sub
adc
test
insl
sub
xor
outsb
xchg
push
mov
cltd
inc
stc
cmp
sbb
rorb
scas
aam
scas
push
mov
jns
divb
dec
fimuls
es
push
cwtl
daa
divb
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
jmp
rol
lret
ret
shrl
insb
cmpsl
xchg
les
jle
js
jnp
cmp
dec
insb
cmp
lret
fsubrl
mov
mov
cs
mov
mov
scas
insl
sub
scas
fucomp
repnz
std
fucom
lds
sub
sbb
leave
push
cmpsb
pop
das
fdivl
mov
icebp
mov
imul
sahf
inc
mov
xchg
mov
arpl
cli
fldl
mov
cltd
nop
push
dec
bound
cwtl
cmp
mov
aas
call
test
xchg
in
inc
das
negb
dec
bound
mov
pop
mov
imulb
icebp
xchg
jnp
mov
std
out
stc
loop
mov
jae
inc
loop
ss
pop
mov
jb
jecxz
cs
mov
test
loop
call
pop
test
aad
in
aaa
add
fidivrs
push
mov
movsl
faddl
sub
xchg
jl
xchg
pop
addl
sub
cmp
sbb
repnz
inc
or
out
aaa
sub
add
fcmovnbe
stc
sbb
push
push
clc
mov
mov
wrmsr
pop
out
lock
dec
adc
xor
mov
lcall
cmc
sbb
xchg
cltd
mov
int3
cwtl
push
and
cmp
cmp
imul
addl
sbb
or
test
scas
push
sbb
pop
lret
pop
add
pop
ds
pop
insl
scas
jge
int
pop
shr
adc
or
sbb
mov
xor
outsb
mov
and
int3
adc
outsl
gs
stos
cmp
enter
xchg
sbb
pop
subl
mov
xchg
cmp
and
adc
dec
popf
outsb
lahf
jbe
in
leave
xor
push
pop
mov
cld
xor
stc
mov
and
lds
out
pop
push
sub
pop
in
mov
aad
into
inc
div
and
dec
lods
jo
insb
xor
daa
cmp
in
dec
and
adc
xchg
repz
cmp
rcrb
and
pop
inc
cmpsl
in
das
inc
pushf
cmpsb
xchg
jge
jmp
jne
jo
push
loopne
arpl
mulb
push
lods
pop
cmp
pop
fidivl
popf
dec
mov
add
popf
enter
daa
int3
cmp
in
int
setb
pop
ljmp
jmp
xchg
push
cs
hlt
in
ds
jge
data16
data16
aam
and
dec
or
fisttpl
sbb
cmp
jmp
iret
popa
push
jge
push
test
sbb
popa
outsb
mov
loopne
loopne
xor
sbb
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
jmp
cmp
fnstcw
jecxz
xchg
xor
cmp
dec
jle
js
cmp
push
mov
repnz
mov
sub
pop
stc
mov
insl
leave
packsswb
addr16
inc
jb
adc
pop
dec
jp
mov
ljmp
popa
mov
mov
cmpsb
cmp
cmp
inc
mov
mov
jecxz
sub
sbb
aad
adc
adc
inc
xchg
adc
adc
mov
jl
sbb
xchg
or
mov
stos
pop
cmc
mov
sbb
push
dec
in
ss
lahf
subl
int
std
data16
test
ss
and
jp
addr16
inc
addb
fwait
imulb
xor
inc
mov
jb,pn
dec
out
add
jmp
lods
movsl
loop
push
mov
mov
or
mov
jnp
and
dec
mov
cmc
rcll
es
jns
mull
mov
mov
xor
pop
je
es
xor
push
int
les
nop
xchg
jecxz
fcoms
outsb
mov
fwait
or
mov
or
das
fs
je
inc
jle
fadds
jmp
pop
mov
jne
int
push
aaa
lcall
gs
add
xor
mov
test
sbb
xchg
popa
or
fs
dec
sbb
arpl
adcl
add
mov
outsb
pushf
rcl
jle
or
xor
insl
mov
lcall
adc
pop
cmp
imul
sub
sbb
or
iret
inc
mov
mov
repz
je
movsb
cmp
jo
dec
jge
repnz
cmp
and
gs
inc
mov
cmp
push
sbb
out
adc
mov
pop
mov
sbb
sbb
inc
inc
lret
ja
dec
out
pop
mov
jb
cmpsb
pop
fwait
xchg
dec
pop
arpl
loopne
cmpsb
adc
sbb
mov
ljmp
add
dec
in
and
mov
daa
lahf
xchg
scas
rcrb
mov
xor
mov
jg
jg
xlat
cmp
mov
lods
push
sbb
or
lock
push
arpl
push
mov
pop
arpl
ret
mov
add
cmp
into
nop
ss
jp
push
mov
xchg
pop
mov
xlat
and
lea
cs
or
std
cmp
ret
mov
mov
sub
xor
jmp
rol
ror
leave
rcr
aaa
mov
and
js
jle
js
jge
and
mov
mov
loopne
js
jecxz
divb
mov
xor
inc
fnstcw
cwtl
pop
pop
add
jle
xorl
je
clc
fwait
outsb
mov
stos
mov
ss
sbbb
sbb
cwtl
dec
inc
loope
fnstcw
push
mov
loopne
in
hlt
and
jns
and
rcll
clc
movsl
fbstp
rcrl
pushf
mov
in
mov
into
inc
pop
xchg
into
fisttpll
mov
movb
sbb
jbe
enter
arpl
out
pop
leave
add
into
or
jge
jp
mov
aad
jp
mov
decl
fcoml
jle
inc
dec
ljmp
ja
fmulp
push
or
loope
lret
lods
jne
fisttps
or
idivl
sti
xor
jecxz
xchg
mov
sub
add
scas
adc
inc
movsb
inc
inc
add
mov
pop
adcl
xor
lds
into
and
lock
sub
cmpsb
sub
inc
pop
mov
push
andb
pop
xchg
ret
jmp
xor
mov
or
inc
leave
push
fisubrl
fsincos
pop
out
addr16
sbb
push
call
lea
lret
mov
outsl
lods
xchg
dec
sbb
jp
repnz
jb
and
mov
sbb
push
inc
push
mov
or
test
jl
push
je
ret
out
jmp
add
movsb
ds
xchg
mov
jne
jg
in
inc
and
mov
xchg
pop
sbb
xor
orb
rcll
ret
movsl
and
call
xchg
push
sbb
test
popf
aam
test
push
inc
and
jae
mov
jnp
cmp
loope
adc
lcall
xchg
mov
dec
adc
pop
iret
mov
test
imul
push
dec
mov
mov
add
dec
pop
inc
or
push
orl
mull
in
xchg
add
mov
cmp
jg
dec
mov
push
add
sbb
inc
pop
or
mov
lret
inc
jae
int3
dec
xor
and
inc
or
inc
out
incb
cltd
fwait
push
inc
in
add
mov
je
test
loop
inc
jmp
call
out
stos
jmp
mov
jno
int
push
decl
fcmovb
aaa
xchg
dec
jl
es
mov
cmp
hlt
in
jl
and
mov
sub
jne
pop
stc
mov
jmp
iret
rcl
lret
ror
xlat
lods
and
out
mov
js
dec
jle
js
scas
xchg
inc
push
sub
mov
es
ret
lret
jmp
jg
insl
les
push
lods
inc
pushf
insb
pop
fsubs
les
ja
frstor
loop
push
fisubrs
stc
inc
ss
popa
mov
addr16
aam
push
and
sbb
mov
dec
push
and
jle
sbb
jl
loope
mov
and
sub
scas
or
xlat
push
ja
pushf
pop
out
sbb
in
aad
bound
out
scas
mov
jmp
add
push
cmpsb
fcomip
jb
mov
idivb
mov
mov
jae
stos
imul
or
sahf
or
mov
mov
sub
mov
pop
scas
repz
fldcw
clc
icebp
stc
insl
cli
mov
lea
push
xor
pushf
hlt
lock
pop
mov
and
fmuls
lock
jp
push
sub
or
push
pusha
dec
dec
enter
and
fimull
jge
xor
or
lret
mov
enter
dec
nop
jb
and
aaa
ljmp
jae
jo
das
xor
je
in
pop
jmp
dec
cmp
repz
sbb
je
pop
popf
or
xor
dec
mov
stos
movsl
dec
pusha
mov
ret
cltd
sub
movsb
xor
fnstenv
and
sub
outsb
jae
fdiv
into
jno
mov
pop
adc
add
test
enter
push
jecxz
and
mov
mov
and
inc
or
fnsave
pushf
pop
inc
adc
sbb
hlt
fstl
int
pop
lea
jns
iret
add
fists
std
fwait
out
lds
popa
cltd
test
imul
adc
dec
in
lods
mov
pop
sub
xchg
mov
mov
lds
ret
rcll
cmp
pop
mov
out
in
push
adc
pusha
push
pushf
push
xchg
dec
push
int
mov
paddd
data16
out
mov
mov
add
in
mov
and
pop
into
add
sub
cwtl
pusha
maskmovq
notl
aam
movsl
pop
sahf
push
insb
mov
mov
sub
clc
les
mov
jecxz
dec
push
cmpsl
jae
mov
jns
js
outsl
cli
dec
xor
push
outsl
mov
ret
lock
es
lret
int
adcb
test
cmp
rcrl
aam
daa
cmp
pusha
push
mov
movsb
sarb
cli
jl
repnz
push
fstps
div
mov
jmp
aas
ret
rol
sbbl
mov
dec
jle
js
orb
push
pusha
rcrl
pop
movb
dec
push
dec
cltd
aaa
lret
in
out
les
lods
repnz
inc
pop
push
push
mov
shrb
repz
dec
ss
filds
mov
outsl
movsb
mov
loop
shll
cltd
mov
jo
daa
lea
lods
in
movsb
and
push
leave
sti
les
mull
js
pop
and
outsb
sbb
lea
and
cmp
xchg
mov
xor
prefetch
or
dec
sbb
ljmp
xchg
in
and
and
aas
jg
test
mov
icebp
sbb
ja
inc
adc
fistpl
pop
loopne
insl
jnp
push
and
and
stos
roll
jecxz
fstpt
or
xlat
pusha
cli
aam
mov
pushf
and
sbb
sub
mov
mull
xchg
pop
aaa
mov
mov
iret
push
mov
sbb
mov
or
mov
sbb
mov
addr16
and
xor
cmp
xor
dec
and
xor
mov
js
scas
dec
scas
xchg
xchg
push
lret
add
push
fildl
jns
or
cld
stos
jl
lock
mov
int
mov
bound
sbb
xchg
xchg
shr
sub
sub
sbb
loop
fisttps
ret
cltd
pop
sbb
and
fdivrl
cli
in
icebp
js
jmp
das
repnz
xchg
lcall
mov
xchg
mov
dec
je
inc
mov
push
cmp
dec
mov
aad
add
push
test
mov
sub
dec
je
hlt
sbb
mov
adc
add
xchg
fwait
inc
dec
mov
push
sbb
mov
sub
cmpsb
dec
je
cltd
jmp
xchg
in
sbb
xchg
pop
add
cmp
stos
mov
arpl
and
mulb
out
pop
daa
fildl
sbbb
mov
ftst
xor
sub
mov
stos
sbb
sbb
or
mov
outsb
scas
pop
mov
scas
push
pop
mov
xor
sbb
and
in
sub
sahf
jge
push
mov
ret
add
stc
or
cmpsl
bound
lret
addb
push
orl
inc
rorb
das
loope
movsb
inc
scas
movsb
xchg
imul
roll
xchg
and
aas
adc
into
mov
lcall
mov
sahf
dec
and
or
mov
jmp
ds
cmp
mov
mov
js
dec
jle
js
leave
mov
sub
mov
filds
ret
add
or
pop
add
or
popf
clc
and
push
inc
and
mov
std
xor
sub
fldenv
int
pop
pop
in
mov
cmp
clc
icebp
jge
xchg
or
flds
ret
arpl
call
movsl
sbb
jns
xchg
leave
test
jg
xor
pusha
or
mov
jmp
or
lods
popf
mov
jnp
inc
lcall
in
adcb
sarl
repz
out
xor
sbb
lret
aad
inc
adc
mov
push
bound
xor
sbb
or
cmp
xlat
adc
cld
in
sub
adc
ds
mov
add
sub
insl
mov
lea
and
dec
mov
and
faddl
idivb
jle
and
jbe
mov
aad
sbb
xchg
and
jl
add
mov
adc
cmp
jl
or
ret
cmp
or
jbe
mov
or
jl
dec
lea
ja
pop
cmp
shlb
jge
pop
push
movsl
inc
faddl
pop
and
jmp
jb
sahf
or
jno
fsts
jge
jno
or
rcll
das
int
ds
in
push
sti
jp
push
cld
cmp
xchg
add
fimuls
and
shll
dec
pop
loop
outsb
jg
insb
xlat
fnstcw
pop
fwait
sub
in
push
cmp
mov
add
mov
cmc
cmc
jb
rcrb
les
sbb
cwtl
in
xchg
ret
inc
aam
xor
push
enter
jno
lret
sbb
das
xchg
shrb
test
out
or
int3
das
lods
incl
xchg
mov
mov
mov
xor
mov
ds
cmpsl
pop
cmpsl
push
fadds
fstp
jne
jp
lret
push
mov
and
mov
or
int3
adc
jmp
loopne
orb
lahf
inc
popa
push
rclb
or
dec
pop
jmp
repz
lods
es
mov
cltd
xchg
add
and
jnp
cs
fistps
mov
call
lods
and
neg
pop
sub
push
cs
xchg
mov
addb
mov
and
scas
mov
rcrb
and
dec
ret
push
nop
lcall
sbb
push
mov
mov
mov
pop
movsb
sub
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
and
mov
jmp
int3
vpmovmskb
fcmovnu
leave
in
loop
out
or
aaa
add
js
fs
js
sahf
dec
mov
sbb
mov
in
shl
jmp
adc
xchg
scas
add
xor
das
mov
inc
dec
or
xor
adc
sbb
sub
scas
push
mov
iret
int
sbb
fbstp
addr16
mov
aad
or
in
push
rorl
or
cli
cltd
xchg
ret
push
xchg
mov
mov
xchg
mov
jo
xchg
xchg
xchg
adc
dec
xlat
cmp
movsb
push
stc
divb
cmp
repnz
call
mov
out
aaa
test
imul
jns
jo
dec
inc
inc
repnz
and
cmp
out
out
insl
push
fs
fldt
mov
rorb
sarl
pop
psubusw
les
mov
mov
mov
jne
add
cmp
dec
mov
and
data16
int
loop
lahf
mov
mov
push
scas
test
negl
mov
and
jno
cld
and
mov
inc
push
sbbl
mov
andb
std
das
adc
mov
mov
xchg
cmp
sbb
inc
lret
xor
loop
mul
fimull
imul
push
xchg
dec
subl
lret
push
in
xor
insl
mov
cli
fisubl
mov
jle
cmp
cwtl
out
inc
inc
push
shlb
hlt
popf
imulb
jb
adc
sbb
push
jg
adc
sarl
orl
movl
mov
bound
inc
xchg
sbb
aas
push
fbstp
sub
loopne
push
mov
lods
arpl
rcrb
loope
push
bound
jns
clc
sbb
fdivrs
repz
fisubs
fs
icebp
rol
fldcw
jle
clc
jl
int
mov
xchg
imul
xor
gs
mov
or
mov
xchg
out
insl
cmp
aad
cmpsl
sbb
inc
adc
in
sub
test
rcrl
fildll
xchg
cmp
inc
add
mov
mov
out
lret
lods
stc
pop
lret
dec
jle
hlt
icebp
leave
sbb
dec
cmpsb
lock
int3
jns
push
sarl
push
xor
push
xor
cmp
insb
mov
mov
jmp
fidivs
inc
xchg
pop
movsb
or
jle
insb
fistl
mov
or
mov
ljmp
xlat
lock
jg
nop
ljmp
inc
out
js
fiadds
cmc
pop
jns
jecxz
imul
mov
adcl
xor
subl
mov
xorl
jmp
rol
cmp
aam
rol
mov
and
sub
cmp
iret
js
fs
js
mov
and
xor
sbb
insl
sbb
shl
jl
mov
jecxz
and
push
int
jae
idivb
xor
push
push
fidivrs
xchg
push
clc
jecxz
sbb
std
mov
mov
popf
jo
sarl
mov
dec
cmp
jbe,pn
push
jnp
mov
mov
outsl
and
jnp
inc
push
sub
shrb
and
fldt
add
lahf
ret
repz
in
in
pop
test
icebp
push
ret
pop
aaa
sti
mov
addr16
jne
cmp
iret
in
dec
shll
nop
sbb
pop
in
test
add
adc
inc
bound
cmp
mov
cmpb
mov
call
add
push
mov
out
push
std
int3
cmc
mov
push
jo
es
mov
icebp
leave
xor
sbb
and
mov
sti
xor
loope
mov
adc
xor
cmp
mov
mov
xor
jge
lcall
cmp
popl
mov
pop
pop
push
or
das
repnz
jnp
leave
psubw
rolb
jne
aaa
sbb
popf
lock
mov
lahf
mov
xchg
add
sub
xlat
adc
jle
int
pushf
faddl
jmp
mov
out
sub
dec
in
sbb
push
bound
in
mov
popf
outsb
insl
cmp
aam
push
inc
cmp
popf
fwait
and
xlat
rclb
xchg
jmp
push
and
mov
add
shl
sbb
fdivrs
xchg
push
or
ja
mov
pop
test
stc
sub
xchg
loopne
dec
dec
push
mov
cmc
jecxz
movsb
xor
iret
inc
dec
push
mov
jns
and
cli
or
arpl
xlat
roll
fisubrl
shlb
gs
popf
and
sub
out
pop
xor
mov
imul
jne
sahf
ret
jae
mov
jecxz
shrb
call
test
popf
and
or
mov
repnz
sbb
inc
js
cwtl
aad
sub
js
pusha
add
sbb
push
in
in
xchg
imul
lds
and
lcall
mov
loop
lods
mov
add
movsl
pop
aad
mov
ljmp
loopne
stc
push
iret
out
push
add
mov
scas
ret
dec
jno
fiaddl
addb
cmpl
add
sbb
movzwl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
adc
mov
xor
add
sub
jmp
cmp
rcl
rol
ficoml
out
cwtl
int3
js
fs
js
fmull
js
push
outsl
push
mul
outsb
decb
cmp
add
jmp
ret
insb
sahf
xor
push
push
mov
xchg
cltd
xchg
mov
cmc
adc
rcrb
ds
pop
decl
or
dec
mov
rclb
bound
lret
add
mov
and
popa
push
sbb
in
dec
adc
je
lock
mov
inc
dec
cmp
aad
and
repnz
and
ds
adc
fildll
xchg
mov
mov
imul
mov
fadd
stos
je
aad
push
ret
aaa
mov
inc
ja
xor
xchg
jge
push
sub
repnz
push
ss
orb
adc
add
cltd
cmp
js
dec
mov
or
into
mov
stc
aad
adc
jne
jecxz
mov
xchg
or
xchg
mov
mov
xorl
inc
lods
fsubl
mov
movsb
fistl
xchg
mov
ja
mov
stc
mov
sub
jno
int
mov
push
or
mov
mov
outsb
pop
pop
sbb
push
insb
loope
test
orb
push
pop
addb
pop
pop
pop
jecxz
and
mov
inc
call
orb
xchg
mov
xchg
movsl
push
xchg
mov
pop
pop
jmp
cld
test
mov
push
lods
aam
into
sub
adc
nop
xorb
sbb
mov
insl
sarb
int3
mov
lods
or
xchg
xorl
clc
or
xor
sub
rorl
jecxz
clc
or
dec
or
add
inc
jecxz
in
aam
cmp
out
or
mov
adc
arpl
scas
and
mov
xor
lret
cmp
mov
ds
sbb
fldt
mov
push
aas
xor
in
enter
and
aam
push
test
leave
jo
jbe
sub
jmp
les
xchg
loopne
cmp
loope
popf
loopne
jb
pop
cmp
popa
adc
stos
or
inc
inc
mov
cmp
out
push
dec
cmp
ficompl
stos
sbb
jb
or
mov
jge
pop
arpl
jo
adc
test
push
stc
mov
inc
addl
adc
imul
mov
sbb
dec
inc
cli
xorb
js
imul
cltd
mov
add
leave
call
addr16
and
stc
mov
outsl
clc
mov
sub
test
lods
xor
lcall
lods
mov
adc
stos
xchg
cli
in
imul
jg
inc
incl
add
add
add
or
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
iret
lret
aad
in
mov
inc
sarl
fs
js
xchg
mov
mov
movsb
push
push
inc
out
arpl
jp
out
adcl
addr16
in
sub
adc
mov
inc
insb
rolb
inc
out
bound
std
test
push
mov
pop
mov
aas
or
dec
rcrb
jl
jp
push
outsb
jge
adc
inc
out
pusha
lods
adc
mov
mov
das
in
sub
inc
cs
xchg
sbb
imul
dec
mov
or
sbb
sbb
adc
je
gs
aam
dec
lods
xor
jno
xchg
cmpsl
loope
dec
xor
pop
cmp
fsubrl
shll
popf
adc
in
test
fdivs
add
add
mov
xor
and
repnz
jge
je
mov
scas
pop
scas
rcll
fldl
lret
daa
sub
jge
push
jno
imull
test
fwait
mov
jmp
jecxz
xchg
out
adc
push
ljmp
cld
es
imulb
in
repz
adc
mov
iret
call
sub
fwait
out
xchg
sub
push
mov
sbb
sahf
jmp
sub
scas
adc
mov
adc
xchg
lcall
and
repz
xor
mov
dec
mov
add
add
jmp
cld
adcl
xchg
jae
cmpb
sub
sub
inc
adc
jge
pop
mov
inc
adc
loop
xor
imul
cmp
std
bound
xorb
movsl
or
sahf
outsb
pop
insb
iret
dec
insb
push
or
dec
jp
xor
loopne
cmp
jg
aaa
mov
mov
faddl
mov
out
movb
pop
sbb
mov
fldt
fstpt
inc
movsb
fcoms
jmp
bound
jmp
lea
scas
popa
jmp
js
or
sub
sub
mov
lret
lcall
xor
jno
aad
xlat
pop
fisubrs
repnz
or
dec
imul
aas
sbb
mov
clc
cmp
ss
inc
lahf
test
test
popa
mov
sti
stos
sbbb
xchg
es
sub
push
lret
mov
mov
call
stos
push
mov
test
inc
jg
mov
ja
xor
arpl
sar
push
mov
xchg
js
in
pop
pop
cltd
xor
mov
mov
orl
mov
xor
sub
sbbl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
mov
push
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
jmp
cmp
cmp
ret
shll
enter
js
fs
js
sarb
ret
sbb
lea
jb
and
lea
sub
and
cmc
xchg
int
mov
cltd
dec
inc
xchg
ds
add
das
cmp
repz
enter
sbb
inc
and
adc
mov
shrl
sbb
pop
sub
lea
dec
ret
mov
cmp
adc
or
sbb
fidivrs
aas
mov
pop
out
rcll
mov
int3
in
push
push
out
sar
fldt
les
pushf
inc
in
cmp
inc
push
fidivrs
rsm
addl
sub
push
and
stos
cmp
scas
leave
leave
sbb
add
out
fstpt
sahf
daa
lds
lock
mov
mov
xchg
mov
std
push
sub
jb
insl
popa
lcall
cs
cmp
and
inc
rclb
ret
push
in
push
mov
mov
xchg
stc
xchg
popf
repz
push
push
push
test
jle
aaa
xor
mov
xchg
das
icebp
test
leave
cmpsl
pop
lds
out
xor
sub
sub
xchg
mov
imul
mov
loop
jecxz
xchg
outsb
xor
jmp
push
jmp
adc
sub
xchg
rcrl
iret
ret
push
ja
negl
mov
mov
out
jbe
call
mov
out
ljmp
loop
ret
popf
add
pop
add
rorb
inc
fcoml
movsb
dec
fimull
pop
hlt
repz
imul
dec
jmp
pusha
out
lock
iret
pop
ds
xchg
sahf
mov
dec
mov
daa
shll
jne
dec
cmp
mov
pop
aaa
cld
sbb
jnp
cltd
and
inc
dec
cli
fcmovu
mov
out
xor
in
push
jbe
xor
popw
and
dec
adc
mov
int
mov
arpl
xor
xor
and
out
pop
fadd
inc
lahf
lock
fdivs
xchg
or
jle
les
movsl
test
pop
push
add
fsubr
sbb
std
movsl
rol
adc
jo
push
pop
inc
out
movsl
sub
sti
inc
fcoml
add
push
stos
dec
fsubs
movsl
or
cltd
add
psubusb
pop
sarb
ss
es
push
jae
jb
cltd
ret
push
or
inc
mov
rolb
sbbb
jb
xchg
xor
in
mov
jbe
cmpsl
into
pop
stos
mov
mov
mov
arpl
xchg
int3
inc
and
cs
jge
jp
sub
in
xchg
shlb
inc
xchg
out
or
cmpsb
mov
dec
adc
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
jmp
ror
lret
fcmove
rcl
adc
xchg
adc
js
jle
js
fbld
cmp
repz
cmp
movsb
outsb
aad
and
enter
test
add
mov
add
sbb
addr16
outsb
stos
rol
pop
pop
push
lods
in
mov
pop
clc
jnp
add
inc
pop
xor
cmp
add
repnz
dec
insb
cmpsb
mov
cltd
jnp
cltd
imul
or
jno
orb
nop
mov
mov
jae
scas
icebp
lret
xchg
pop
xchg
stc
pop
mov
aad
mov
ret
and
add
stos
xchg
pop
imul
adc
movsb
pop
outsb
push
pop
add
std
out
sbb
mov
mov
mov
inc
sar
pushf
out
pop
sti
or
std
popl
mov
imull
in
and
jmp
out
pop
test
adc
shl
insb
icebp
mov
loope
pop
jne
dec
mov
cmpb
or
lods
inc
rolb
xchg
arpl
jne
jecxz
fwait
shll
push
sti
das
pop
jg
add
cmp
mov
add
addl
out
xchg
mov
mov
mov
pop
and
xchg
xor
jnp
hlt
xchg
sbb
sub
push
filds
shll
icebp
jno
xor
movsb
test
xchg
sbb
aas
jle
mov
lret
daa
add
push
repz
jbe
pop
sbb
mov
pop
jge
clc
xor
jp
das
lahf
leave
push
lds
insb
pop
dec
sbb
fidivrl
cmp
push
mov
mov
addr16
or
push
push
jmp
stc
cmc
pop
cmp
push
outsl
pushf
jmp
push
orb
lret
daa
je
jns
scas
lret
mov
xchg
sbb
int3
or
mov
lret
scas
adc
loope
jl
mov
scas
lea
adc
lock
inc
adc
xor
pop
or
inc
int3
popa
mov
dec
loopne
mov
call
mov
mov
cmp
hlt
lahf
push
mov
fld1
popf
sti
push
pop
push
jnp
jmp
push
paddd
lcall
xor
cmp
and
sti
mov
push
lods
mov
lods
insb
mov
pushf
sub
sbb
sahf
cli
add
jne
dec
push
inc
cltd
shlb
mov
dec
mov
into
aaa
notl
add
inc
shrb
cmpsl
rcll
or
aad
insl
xor
inc
in
adc
sti
subl
xchg
dec
sarl
dec
test
cmp
ja
push
adc
adc
xchg
std
andb
push
rcrl
push
xor
repnz
or
pop
cld
xchg
pop
test
nop
outsb
mov
sbbb
stc
lcall
mov
mov
jmp
lret
ret
fld
add
fdivrs
cmpsb
pop
push
fdivrs
fs
js
int
lods
mov
dec
stc
lret
or
ficompl
mov
xor
mov
scas
ja
cwtl
dec
ret
outsb
push
push
jle
adc
fwait
adcl
inc
inc
sub
sub
iret
inc
mov
pusha
xor
flds
push
fmuls
mov
lods
xchg
mov
dec
sar
cmpsb
mov
or
hlt
imul
jnp
sarb
out
lods
xor
xchg
mov
je
xor
outsb
dec
inc
sub
imul
out
cmp
pop
fs
stc
sbb
in
dec
jns
jo
ja
jle
popa
add
xchg
sbb
xchg
loopne
adc
into
out
mov
fstpt
aas
outsb
inc
inc
jp
das
sub
lcall
mov
xchg
ja
int
rorl
dec
out
sbb
cmp
xlat
pop
loop
ret
push
add
cmpb
jno
jmp
push
inc
fiadds
movsl
fiadds
or
or
imul
add
mov
lock
mov
hlt
xchg
dec
mov
daa
adcb
sti
mov
lock
or
adc
pusha
mov
loop
and
das
push
cmc
xchg
inc
and
add
and
xor
lock
mov
or
pop
sub
mov
mov
mov
test
adc
cmp
decl
or
lods
fimuls
imul
in
push
dec
aam
insl
jne
arpl
imul
push
push
test
add
jp
daa
adc
mov
mov
mov
int
adc
int3
rolb
lahf
sbb
adc
stos
fsubrs
test
sbb
and
pop
dec
jle
js
in
push
inc
fnstsw
fdivrl
mov
test
mov
mov
jp
jg
mov
inc
pop
popf
add
or
scas
mov
jb
jb
negl
int3
daa
lds
cmpb
jle
mov
mov
arpl
loop
push
lods
add
ret
sbb
jmp
mov
inc
cs
mov
pushf
sbb
add
fnstenv
in
ret
sbb
loopne
xor
jbe
hlt
or
jge
sahf
cmpsb
cltd
icebp
add
inc
out
fisubrl
pop
inc
test
pop
pop
adc
push
sub
sbb
cmp
mov
ret
push
mov
lcall
push
ficoml
in
scas
jnp
sar
adc
shll
mov
mov
stos
sub
or
js
xor
push
pop
sub
cmp
roll
mov
mov
xor
add
mov
mov
jmp
ret
ror
rcr
rcl
push
add
pop
hlt
fnstsw
fs
js
adc
cs
ljmp
out
adc
dec
mov
jns
lods
jge
outsb
shrl
push
sub
ret
mov
addr16
push
fisttps
xor
shll
loop
mov
mov
scas
dec
fsubrs
dec
rol
test
test
fisubs
mov
adc
mov
push
add
xor
sbb
adc
jp
lret
loope
leave
jle
sbb
test
jo
xchg
pshufw
ss
idivl
dec
cmp
or
push
insb
sub
aam
mov
mov
in
push
rorl
fisttpll
iret
shr
aaa
test
jge
inc
xchg
cmp
fnstcw
int3
repz
pushf
insl
in
aad
mov
xor
and
sbb
insl
cld
arpl
and
out
inc
xlat
cmpsb
mov
jno
pop
popf
xor
pop
fwait
add
imul
push
pusha
loope
fwait
adc
aas
out
imul
jo
cmp
insl
dec
cli
call
inc
inc
push
and
loope
cmp
sub
out
jecxz
popf
mov
sbbl
cmp
cmp
jmp
call
fcoml
ficoms
lahf
inc
in
pusha
dec
mov
adc
outsl
repnz
mov
or
test
pusha
xchg
out
in
aad
ja
fcompl
out
insl
popf
jnp
add
test
pop
dec
push
xchg
add
hlt
xchg
ret
or
mov
adc
jne
gs
xchg
mov
ret
fistpl
dec
maskmovq
testl
arpl
jb
xor
fsts
cwtl
notb
and
notl
gs
pop
int
mov
inc
dec
jnp
mov
pop
arpl
push
mov
rol
aad
in
lock
inc
and
jl
push
rep
test
lret
repz
int3
fcmovb
ljmp
push
daa
sub
je
in
sbbl
pop
out
pop
mov
cltd
push
and
das
xor
mov
iret
cs
orb
ja,pt
not
add
inc
push
sbb
shll
cs
and
enter
and
cmp
lret
pushf
adc
jp
jmp
loop
mov
add
adc
stc
scas
mov
mov
ja
dec
mov
in
add
mov
mov
stos
clc
fstpt
dec
in
xchg
popa
imul
cmp
push
stos
out
insb
pushf
repz
fs
or
xlat
inc
mov
sub
or
cmp
adc
jmp
pop
into
lea
push
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
jmp
cmp
rcl
fcmovu
into
leave
xchg
loopne
js
fs
js
aad
fwait
mov
xor
out
pushf
dec
jnp
xor
fmull
cwtl
dec
mov
lret
jb
lahf
in
neg
push
pop
xchg
lea
rcll
insb
leave
add
das
xor
dec
cmp
scas
cmp
fdivrl
push
adc
sahf
adc
inc
aad
inc
push
or
cs
ds
shrb
adc
push
sub
in
inc
sti
jmp
dec
mov
mov
push
test
mul
push
jmp
add
add
pop
push
adc
sub
pusha
xor
or
fisttpll
std
popf
stos
inc
mov
xchg
adc
xchg
push
xchg
negl
aaa
cmpsb
lods
cmp
ret
lcall
dec
dec
and
leave
sbb
cmp
repz
add
pop
and
jecxz
sbb
xor
mov
ja
imul
setns
shll
int3
bound
lds
sbb
movsb
aad
loopne
xor
adc
fildll
loope
mov
xor
push
inc
push
inc
rcr
sbb
addr16
or
xchg
popf
fdivrp
add
loop
pop
sub
push
cltd
jg
std
jmp
mov
imul
test
adc
xchg
adc
jno
lret
cmp
and
inc
sub
stos
dec
lock
inc
sub
addr16
mov
clc
loope
add
pop
pop
jecxz
jbe
mov
jge
mov
push
pusha
jle
jns
fwait
orb
aaa
cs
mov
rorb
ret
lcall
shll
lods
addr16
mov
out
mov
in
lods
xchg
push
cs
push
pushf
mov
pusha
sub
loopne
sarl
xor
lods
aas
pop
mov
cmp
call
pop
xor
aad
enter
mov
ds
andb
jns
in
dec
or
or
add
xchg
loope
movsl
popl
mov
dec
sarb
in
mov
push
sub
popa
shrb
inc
sub
pop
stc
shrb
rol
lahf
and
fistpll
lcall
stos
mov
jb,pt
fsubrl
jle
aas
add
stos
lods
or
loopne
cmp
sbb
and
jo
stos
shrb
and
xor
push
loope
test
lcall
insl
adc
cmc
subb
and
fldcw
test
repnz
vpunpcklbw
jge
mov
pop
dec
lds
add
lahf
pop
push
jge
in
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
jmp
aas
fld
add
sahf
push
pusha
or
fs
js
outsl
popa
adc
add
cmpsl
inc
pop
outsb
push
and
dec
inc
jbe
cmc
imul
cmp
push
arpl
and
cmp
repnz
adc
sub
decb
sub
push
sahf
ds
or
test
addb
jnp
and
jae
mov
incl
cwtl
inc
lahf
ss
fnsave
mov
pop
push
sbb
gs
lret
int3
jge
or
rcll
sahf
xor
add
xchg
add
cli
inc
pop
jp
dec
xchg
or
sbb
mov
add
mov
or
xchg
jne
cltd
xor
fsubs
sar
aas
mov
daa
mov
lea
inc
jecxz
adc
je
subl
rcrl
inc
negl
clc
and
setge
lret
cmp
sub
pop
sbb
clc
sub
inc
dec
imul
and
insb
lret
pop
shll
jecxz
inc
sti
add
cld
jle
mov
mov
outsb
jbe
push
jbe
add
adc
filds
mov
je
xor
mov
sub
jae
in
aad
movsl
mov
or
addr16
ret
add
jecxz
xchg
les
mov
addb
ja
int
jbe
fstpt
adc
daa
xlat
faddl
ret
mov
movsl
popf
ljmp
jmp
lock
aad
orb
sbb
cli
stc
mull
cmp
inc
add
cs
stos
cmp
stc
pop
dec
add
lds
jmp
add
fsubrs
cltd
add
aad
ficoms
xchg
fwait
jns
test
xor
leave
sbb
sub
pop
jns
hlt
hlt
les
xor
mov
xor
fdivrl
lods
push
lret
add
insb
mov
adc
stos
cld
cmpsl
adc
insl
cmp
cs
stos
sub
xor
and
or
inc
loopne
imul
outsl
cmc
enter
xor
fistpll
fsubrs
dec
jge
dec
pop
leave
fxam
pop
pop
test
mov
pop
leave
xor
sub
test
fidivs
fistpll
sub
or
outsb
cmp
cmp
sarb
cmp
scas
jo
sub
mov
push
adc
mov
mov
and
pushf
xchg
aas
xchg
andb
inc
dec
sbb
xorb
stos
and
jae
mov
jne
lahf
cmp
push
or
gs
orb
fcmovbe
out
xor
xchg
push
mov
xchg
pop
cwtl
lahf
cmp
cmc
jge
cmp
xor
loopne
inc
sbb
sub
add
ret
push
mov
push
xor
push
jmp
cmp
aad
mov
ret
cmp
js
cmpsl
jle
js
mov
arpl
sbb
aad
shll
xchg
into
cmp
mov
fisttpll
mov
ljmp
lods
dec
dec
lcall
adc
clc
sbb
sub
add
mov
clc
sbb
jecxz
test
sub
cmpsl
xchg
inc
push
movsl
push
adc
nop
sub
xor
push
and
icebp
and
inc
xor
adc
mov
add
dec
xchg
das
sub
xchg
call
scas
mov
adc
jmp
icebp
enter
sbb
sbb
pop
fbld
pop
dec
push
icebp
stos
scas
ficomps
mov
add
addr16
jno
sub
xor
sub
cmp
lret
dec
loopne
mov
and
lahf
mov
xchg
cmpb
nop
jne
jo
sbb
mov
mov
das
ret
aaa
sbb
pop
jnp
ljmp
insl
mov
push
mov
inc
scas
sub
shl
test
inc
cmc
int
or
arpl
cmp
adc
call
adc
xchg
lret
aam
sub
pushf
enter
in
cmpsb
sbb
mov
lahf
pop
std
ljmp
ljmp
lods
xchg
cmc
fistpll
mov
sbbb
pop
jo
stos
xor
cwtl
inc
das
or
mov
scas
mov
pop
cmp
incb
xor
cmc
call
loop
inc
pushf
sub
gs
xchg
xor
sbb
mov
jbe
data16
dec
xchg
negb
inc
xchg
xchg
out
or
ja
inc
fwait
inc
pop
mov
push
mov
or
xor
test
cli
mov
mov
es
je
outsb
mov
inc
xchg
xchg
jne
insb
int
xchg
lock
sub
cmpsl
sub
out
mov
data16
fisttpll
stos
or
inc
xor
jno
ret
sti
sub
lock
movsb
mov
xchg
dec
cmp
pop
sti
mov
or
out
shll
inc
add
or
loopne
nop
push
inc
sbb
mov
mov
cmpsb
mov
pop
loopne
adc
sbb
sbb
inc
inc
or
hlt
inc
jns
push
test
push
mov
xchg
xchg
pop
push
jmp
sahf
adc
sbb
stos
sub
ret
dec
mov
jae
sub
dec
mov
std
movl
movl
mov
add
push
mov
mov
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
mov
orl
add
add
xorl
imul
mov
jmp
cmp
lret
stos
adcl
cmpsb
loope
addr16
movsl
push
mov
mov
ss
and
sbb
pop
fs
not
cmp
push
pop
popfw
cmp
inc
and
mov
adc
cs
jbe
punpckldq
push
in
inc
mov
xchg
jcxz
push
mov
dec
push
test
push
sbb
and
imul
dec
xor
sbb
mov
push
lock
mov
icebp
repnz
jg
xor
sub
dec
pop
lahf
jns
and
fidivl
outsl
aaa
pop
sub
out
test
fiadds
add
out
popa
jnp
sahf
in
test
sub
xlat
inc
enter
jb
mov
mov
lret
aad
and
inc
fnstcw
xchg
aad
fwait
dec
sbb
mov
cmp
rclb
imul
mov
xchg
dec
jg
adc
adc
adc
lods
jl
int
out
in
sti
in
mov
lods
imul
outsb
into
outsl
fs
xlat
insb
pop
jne
out
mov
bound
cltd
dec
call
stos
scas
mov
sub
push
xor
mov
pop
lods
mov
mov
wbinvd
jp
and
daa
jl
shr
movsb
ja
adc
push
push
pop
adcb
arpl
mov
mov
inc
int
mov
popf
in
test
lea
icebp
lea
cmp
add
add
out
mov
adc
icebp
ret
cs
sub
jns
shrb
push
test
scas
or
arpl
iret
add
pop
push
mov
inc
nop
and
pop
xchg
xor
jecxz
clc
mov
testb
xor
in
lcall
push
sbb
mov
mov
mov
and
mov
mov
outsb
sti
cmp
pop
or
dec
mov
sti
cmpsb
test
mov
sub
sti
sub
fiadds
sub
jb
outsb
aam
daa
pushl
push
ja
jge
mov
xchg
in
lret
push
and
mov
icebp
fnstenv
addr16
clc
inc
ss
leave
sbb
outsb
lock
mov
pop
xchg
xchg
inc
gs
shll
dec
insb
mov
js
mov
jo
cmp
lods
sbb
insl
dec
aad
fcoms
std
sti
sarb
push
push
hlt
fiadds
mov
fucomi
repnz
outsl
cmp
pop
xor
add
jne
add
jne
jmp
lret
cmp
mov
inc
add
js
jle
js
mov
dec
jle
jl
mov
adc
cmpsb
jge
push
and
adc
inc
xchg
or
dec
push
xor
pop
in
jg
sub
lret
mov
mov
sub
loopne,pn
test
pop
lea
xchg
inc
cmp
sbb
or
mov
inc
scas
enter
pop
adc
call
pop
std
mov
dec
outsl
roll
sub
andb
test
adc
mov
fstpl
out
mov
push
stc
test
pop
stc
push
les
mov
sahf
and
inc
xor
add
jne
dec
into
decb
mov
out
loope
fcoml
scas
xchg
sub
add
push
push
fsubrs
dec
cltd
pop
scas
aaa
dec
enter
push
mov
sub
fisttpl
xor
shlb
mov
fcmovu
repnz
or
xchg
pop
outsl
sti
imulb
push
in
mull
adc
mov
in
jle
jb
mov
sbbb
fwait
add
sar
rcrb
sub
adcb
cmp
loop
inc
sbb
xchg
adc
or
cmc
fistl
sub
pop
pop
and
push
mov
mov
ret
mov
inc
ficomps
xor
sbb
pop
push
clc
fs
adcl
cmc
dec
jle
repnz
cs
icebp
xchg
mov
xchg
mov
insb
and
or
leave
lods
out
loopne
cmpsb
test
lods
movsb
call
sub
lds
pop
icebp
pusha
or
inc
mov
into
xchg
push
pusha
xchg
int3
loopne
in
pop
shlb
movsb
and
fcompl
scas
sbb
lods
push
xchg
xor
arpl
movsl
sub
or
or
pushf
xor
pop
call
inc
and
sahf
pop
bound
add
cmp
push
adc
dec
insb
cmp
jle
adc
xor
add
imul
aam
lcall
fdivl
mov
repnz
adc
mov
jecxz
aas
sti
pop
lret
pop
mov
dec
mov
mov
fxam
mov
or
mov
orb
out
or
adc
repnz
sahf
dec
mov
sbb
mov
repnz
cmpb
cltd
cmp
pushf
mov
cli
mov
inc
cld
addl
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
jmp
xlat
leave
lret
aad
leave
adc
push
iret
xor
jle
js
xchg
jge
mov
dec
fld
ficoms
jle
es
inc
inc
push
in
pop
dec
je
lcall
out
shrb
dec
ja
out
ror
shll
outsb
mov
shlb
imul
das
mov
ficompl
ja
push
aam
sbb
scas
rol
sbb
ret
addps
shll
xor
addr16
mov
js
add
sbb
push
dec
jmp
ljmp
adc
sbb
jge
sti
scas
pop
jle
decb
push
and
fs
inc
push
mov
pusha
push
fists
pop
xor
cli
addr16
xor
test
or
mov
cmpl
rcrl
push
and
sbb
lret
out
sub
mov
cmp
int3
push
xchg
inc
xchg
movsb
rol
lret
add
adc
cmp
test
in
lahf
or
call
pop
xchg
test
dec
pop
mov
pop
inc
ficoms
fisubl
mov
addb
inc
mov
cmc
scas
and
jbe
add
mov
sub
mov
push
outsl
cmp
xchg
xor
aad
std
sbb
dec
loop
xor
cmp
shrl
adc
pop
sbb
mov
lret
adc
stos
pop
mov
pop
cmpsb
js
popa
pop
mov
push
sti
pushf
into
cwtl
sub
cmp
cmp
inc
fnsave
fimuls
jg
inc
and
rolb
mov
xchg
jp
scas
shll
xor
mov
imul
test
lea
movsl
aam
push
push
dec
xor
maskmovq
idivl
aad
ret
add
shrb
xlat
bound
add
test
fisttps
sub
int3
pop
clc
add
inc
les
iret
fisttpll
cmp
xchg
xchg
cmp
ss
enter
iret
sbb
test
cmp
sub
mov
mov
dec
in
dec
xor
stc
or
mov
cld
fcmovnb
xchg
sbb
cltd
ja
push
test
pop
je
lcall
sbb
popa
push
pop
mov
jge
sub
dec
dec
in
adc
jecxz
push
jae
cmpsl
mov
lods
xchg
pop
mov
inc
cld
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
leave
enter
xlat
enter
rcll
bnd
push
jle
js
rcrb
xor
xor
notb
xor
adc
push
sbb
dec
stos
mov
in
mov
in
into
mov
mov
and
dec
add
dec
xor
icebp
inc
xchg
sbb
in
jbe
and
cmc
sub
int
js
gs
icebp
jle
xchg
shlb
das
adcb
les
mov
mov
jno
into
adc
test
jle
push
pop
sub
dec
stos
sti
fiaddl
mov
test
xor
icebp
shl
adc
cli
sub
pop
pop
xor
es
outsl
rolb
add
stc
bound
add
aaa
inc
push
jne
mov
idivl
push
inc
pop
hlt
xchg
jo
mov
pushf
mov
push
push
pop
gs
movsb
jae
xchg
jmp
cwtl
pop
mov
mov
es
mov
inc
jnp
jne
jmp
push
rcll
rcrl
lret
jl
nop
jbe
inc
xor
lahf
pop
mov
mov
jo
inc
add
lods
jmp
imul
loope
imul
sti
dec
icebp
push
fldenv
mov
push
repnz
add
jmp
rcll
sbb
lods
ljmp
out
mov
inc
loope
ficoms
nop
push
mov
test
lahf
imul
ljmp
int
sbb
push
out
mov
push
arpl
mov
lret
in
cmp
ljmp
jns
shll
and
cmp
push
outsb
fiadds
push
inc
mov
insl
inc
in
popa
mov
orl
imul
loop
fists
popa
pop
icebp
jns
or
jecxz
sub
fs
jmp
rcll
fdiv
xchg
jns
inc
adc
or
inc
and
mov
test
dec
push
adcb
andb
push
mov
in
repz
pop
xchg
je
mov
lods
es
dec
lods
loop
shl
scas
add
repz
push
adc
and
inc
jns
push
xchg
divb
adc
dec
mov
sbb
add
mov
in
mov
mov
cmpsb
stos
out
lods
push
jns
xor
mov
into
cmp
inc
add
jmp
into
test
enter
sbb
ja
push
push
call
xor
gs
adc
or
notl
gs
cmp
adc
lods
sarb
jb
jne
fistpl
jne
inc
add
lahf
cld
mov
test
add
dec
add
mov
mov
mov
movl
movl
cmp
jne
xor
jmp
lret
rcl
xlat
fxch
fsts
scas
scas
pop
mov
js
push
jle
js
jle
and
cmp
inc
hlt
testb
sahf
ficompl
loopne
pop
pushf
mov
dec
push
cmp
cmp
nop
test
sub
cmp
sub
js
fiaddl
aam
gs
adc
mov
jecxz
mov
add
out
dec
mov
cmp
popf
es
fwait
ja
cmp
xor
lea
xor
jne
sbb
xchg
stos
jae
sti
cmp
cli
mov
jp
push
aam
lods
icebp
sti
aas
mov
repnz
outsl
mov
aaa
mov
cltd
and
cld
cmc
inc
push
pop
leave
das
stos
in
aad
mov
dec
clc
dec
lcall
mov
dec
outsl
fdivrl
jbe
std
out
pop
jg
movsb
jmp
cmc
push
xchg
cmc
push
pop
rclb
mov
fidivrs
loop
jae
inc
or
scas
cld
push
inc
arpl
jno
add
push
aad
shrb
pop
pop
iret
rolb
enter
mov
lods
outsl
movsl
test
cltd
cmpsl
add
dec
lahf
dec
mov
push
jp
lea
enter
sbb
sbb
fldcw
jecxz
mov
push
repnz
sti
out
leave
dec
fs
test
mov
cmpl
mov
mov
xrelease
imul
cmp
adcl
and
cmc
sbbl
repnz
adc
mov
push
pop
data16
lret
xor
mov
repz
mov
cmpsb
mov
test
repz
lods
adc
mov
mov
bound
pushf
xchg
xlat
dec
mov
test
jb
fwait
popa
xor
jecxz
das
inc
mov
mov
pop
push
mov
or
mov
call
add
popf
std
imul
add
fidivrs
add
cmp
mov
loope
jl
push
loope
movsl
loop
ret
pop
stos
in
xchg
xor
push
div
fnstcw
sar
shrl
cwtl
js
fsubr
pop
idivb
inc
mov
xchg
cmc
or
xlat
and
mov
adc
sahf
jge
pop
xchg
sahf
jl
or
pusha
pop
push
cmpsl
push
pop
int
dec
sub
dec
sub
push
cld
lods
in
pop
aam
pop
dec
fs
xchg
outsl
xchg
pop
inc
cli
sub
jmp
das
push
mov
sbb
mov
sahf
leave
mov
imul
js
xchg
popf
add
fiadds
stc
xlat
push
xor
int
adc
out
mov
jmp
icebp
and
fisttpl
pop
into
arpl
jmp
clc
cmp
aaa
enter
adc
jp
outsb
icebp
sub
clc
sbbl
mov
xor
and
mov
add
neg
mov
orl
movzwl
sbbl
not
xorl
and
jmp
ret
int3
leave
rcr
sahf
inc
imul
hlt
js
push
jle
js
pop
in
divb
xchg
adc
rcrb
jbe
add
mov
sbb
ret
cmc
xor
sub
test
shll
inc
int
pop
mov
mov
cld
aad
pop
fwait
sbb
or
popa
xchg
roll
outsl
mov
dec
xor
ja
test
addr16
mov
inc
mov
fists
add
and
and
mov
xchg
mov
aam
pop
xchg
push
loop
sub
mov
jle
xchg
loope
xchg
pop
test
adc
sbb
mov
mov
stos
call
sbb
jmp
add
xor
rorb
std
mov
xor
or
insb
jnp
pusha
stos
repnz
mov
push
movsb
repnz
scas
jle
inc
inc
cwtl
pop
xchg
dec
push
inc
jmp
notl
fstps
jmp
xchg
add
xchg
mov
insl
das
sub
mov
aad
xchg
es
dec
out
ja
adc
mov
call
mov
mov
fdivrl
push
movsl
push
cmp
sti
popf
clc
fbstp
in
jno
scas
insb
nop
xor
cmp
xchg
add
ret
adc
stos
fisubl
or
in
negl
addl
mov
inc
sahf
xor
sbb
jo
dec
dec
shl
sbb
loop
daa
dec
sbb
xor
lock
fbld
jl
dec
sbbl
jbe
shll
mov
sub
sti
add
or
adc
push
cli
popf
adc
cmp
mov
push
add
push
pop
aad
push
jne
pop
pop
xchg
and
addr16
fisttpll
maxps
lahf
mov
data16
add
mov
sahf
repz
es
scas
shlb
push
sbb
fs
fsubl
pop
push
mov
jl
mov
push
pop
bnd
nop
xchg
fisubrl
mov
mov
mov
xchg
push
dec
dec
mov
pop
xor
xchg
movsl
xor
mov
jg
add
push
sub
push
pop
aas
dec
mov
lret
xchg
test
fcoms
and
fwait
inc
jg
mov
xor
clc
jno
adc
xchg
lea
popa
popa
push
add
stos
bound
mov
adc
lods
cs
loop
jb
in
mov
imul
push
test
rcrl
in
jno
mull
loop
sbb
es
out
enter
push
cli
iret
adc
cmp
mov
sbb
mov
mov
jmp
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
xor
movl
mov
xor
or
sub
imul
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
jmp
cmp
ret
ror
into
jge
enter
xchg
dec
loop
js
je
js
daa
pop
adc
push
imul
or
lret
adc
frstor
insl
or
test
mov
jae
and
cmpsl
dec
mov
sti
mov
push
or
outsl
shll
lahf
faddl
cmp
add
lods
fbstp
jbe
push
aam
jl
xchg
push
cmpsb
mov
push
sahf
adc
adc
dec
ljmp
jns
mov
mov
in
dec
test
xchg
adc
sub
pop
xchg
sub
js
js
addr16
cwtl
mov
sub
rol
pusha
stc
fiaddl
fsubs
mov
mov
jnp
push
rcrl
imul
lret
dec
and
lret
js
lahf
mov
inc
cmc
jg
xchg
das
or
imul
mov
dec
add
daa
cmp
push
jne
gs
ljmp
jne
xor
lret
cmp
add
mov
mov
imul
lret
jns,pt
cs
idiv
adc
sub
paddd
test
stos
mov
sbb
mov
daa
jb
xor
mov
adc
jne
stc
mov
call
mov
adc
and
cmp
mov
out
fld
sbb
sub
cmc
int3
jle
pop
aad
and
movsl
sbb
mov
xor
out
mov
pop
push
xlat
sub
adc
pusha
jo
inc
xchg
push
adc
out
dec
sarb
ss
mov
pop
inc
mov
rol
stos
insl
ss
cli
add
lods
adc
icebp
shll
cmp
stos
xor
lcall
or
jns
cmpl
adc
lahf
adc
cltd
and
stc
mov
mov
add
jl
and
xchg
shlb
add
cwtl
pop
cmp
in
push
lock
popa
xor
mov
mov
or
leave
xor
gs
pop
push
lcall
jmp
fstpl
jp
iret
mov
int
xchg
mov
pop
cltd
test
aas
out
subl
shlb
imul
and
xorb
outsl
mov
call
stc
sahf
mov
dec
and
cli
les
xor
mov
test
push
mov
adc
pop
out
jmp
rorl
loop
ret
mov
cmp
push
adc
mov
insl
and
in
mov
inc
mov
divl
insl
sbb
mov
dec
or
popf
xchg
xor
cwtl
gs
and
gs
mov
jns
lea
andl
mov
subl
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
lea
mov
mov
sub
and
mov
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
jmp
ror
int
dec
xor
bound
js
jle
js
inc
out
js
inc
ljmp
xor
fs
cmp
or
scas
pop
sbb
inc
aam
cmpsl
jno
pushf
mov
push
cmp
movsl
jne
scas
jmp
ret
add
mov
cmp
in
xlat
mov
icebp
inc
sbbl
xchg
hlt
jmp
adc
add
sub
loope
loope
cmc
push
jp
div
cmp
idivb
sbb
mov
out
push
mov
jecxz
xor
mov
xchg
les
jl
dec
push
jmp
jle
pop
aad
xchg
jge
mov
adc
cmc
mov
fiaddl
or
push
push
sbb
jl
fsubr
pop
shll
clc
notl
pop
sahf
insb
loop
data16
mov
lret
lea
fisubl
pop
cmp
xchg
cmp
and
inc
andb
inc
movsl
test
fwait
and
jo
mov
cmp
lret
mov
fdiv
movsb
dec
dec
int
pop
or
enter
int3
cmc
pop
arpl
pop
pushw
and
roll
xor
inc
out
fcmovnb
loopne
adc
jle
ret
or
mov
leave
cmpsl
xor
xchg
sbb
mov
aad
mov
inc
flds
ret
xor
cmpsl
mov
shlb
out
mov
lea
jne
sub
pop
clc
ret
and
clc
out
clc
in
xor
jmp
stos
dec
xor
add
fwait
lods
inc
sub
xchg
pop
mov
flds
pop
movsb
dec
or
mov
and
pop
jl
xchg
sub
mov
pop
sbb
and
or
int3
stos
inc
popa
rcl
jae
imul
push
pop
jo
sbb
push
jle
stos
scas
dec
add
cmp
xchg
lret
pushf
adc
sbb
scas
xchg
das
add
inc
sahf
fistpl
out
mov
ss
sti
cwtl
in
cmpb
scas
ret
xor
in
xor
xchg
mov
adc
mov
cld
mov
cmp
loop
xchg
push
lret
pusha
ret
xchg
and
fcoms
mov
xor
fisttps
rcll
xor
imull
fwait
subb
test
adcb
gs
jle
outsl
push
outsb
push
xchg
ficomps
push
xchg
hlt
sbb
mov
dec
sub
dec
out
mov
adc
movsl
adc
jecxz
jg
enter
xchg
sub
clc
dec
dec
adc
cmp
sub
inc
dec
imul
xchg
test
mov
iret
xchg
sbb
subb
cld
fdivrs
fldcw
cmp
mov
mov
mov
mov
xor
mov
jmp
xlat
rcl
aad
vmovapd
js
fiaddl
js
add
addr16
inc
mov
js
mov
mov
mov
sub
mov
sub
inc
mov
xor
fsub
js
xor
repnz
sbb
dec
lods
jmp
fcoms
aaa
push
cmpsb
xchg
in
sub
insb
add
push
xor
mov
daa
repz
jecxz
jl
mov
sub
fisubl
mov
cmpsb
jge
pop
push
in
fdivr
sub
or
out
mov
aad
mov
adc
dec
or
insl
in
inc
dec
xor
nop
loopne
lds
jbe
push
adc
sub
lods
cltd
sub
enter
pop
fisttpll
aas
sbb
sti
loope
sub
cmpsl
pop
pop
mov
cmp
lahf
inc
cmp
loopne
pop
into
pushf
mov
mov
sbb
xor
dec
mov
hlt
add
xchg
sbb
lea
lea
aas
pop
mov
jnp
inc
adc
js
fcmovbe
pop
aaa
pop
adc
cmp
jno
sbb
cli
call
jl
pushf
inc
pop
pop
xchg
aaa
mov
daa
adc
mov
push
mov
lret
cmc
xchg
lods
cltd
movsb
fwait
lods
or
inc
inc
mov
movsl
out
sub
lods
outsl
scas
push
loope
nop
mov
lea
inc
xchg
fldl
or
and
push
cltd
mov
and
stos
lcall
and
aad
imul
pop
aam
rol
mov
outsl
out
inc
mov
pop
mov
jne
aam
test
sbb
jo
pusha
xchg
xor
inc
jno
push
mov
mov
xchg
roll
jmp
mov
outsb
fnstenv
imul
sbbl
pop
fnsave
aaa
dec
enter
mov
fcomp
inc
jns
adc
mov
jmp
lcall
or
mov
stos
out
in
bound
mov
mov
icebp
movsl
lcall
mov
stos
aas
lea
inc
insl
test
mov
out
sub
mov
sbbl
mov
dec
cmpsl
out
ss
in
fmuls
push
outsl
mov
cmp
or
jmp
pop
mov
mov
mov
push
loope
ret
xchg
sti
imul
xchg
stc
shlb
add
leave
push
xor
lods
and
lods
inc
daa
jae
aad
and
cmp
push
aas
lret
push
push
ljmp
mov
sahf
inc
std
and
jp
pusha
mov
push
mov
cmp
sbb
jae
enter
sub
push
sbb
inc
inc
mov
pop
mov
cmpsb
xor
sbb
cmc
jle
popf
sub
testl
flds
jmp
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
jmp
aas
aas
iret
iret
xlat
xlat
fists
push
movhps
js
je
js
out
aam
jmp
rorb
popf
ret
in
dec
pop
pop
ret
popf
sub
lret
lds
inc
mov
xchg
int3
int3
mov
and
inc
push
and
inc
add
ja
imul
test
emms
out
js
sub
outsb
cmpsl
xchg
dec
je
mov
stos
into
sbb
cmp
sbb
adc
stos
mov
ja
lods
jbe
jge
sbb
pusha
loop
add
std
mov
pop
dec
sbb
nop
push
dec
mov
imulb
out
mov
xchg
pop
push
jb
mov
jnp
dec
imul
add
push
sub
sbb
jge
mov
jecxz
dec
loope
or
pop
into
hlt
cmp
std
loope
cwtl
notl
xor
fldt
jnp
mov
adc
in
mov
fbstp
out
inc
pop
sbb
sub
mov
or
jne
movsb
fstpt
shr
sbb
repz
or
pop
xchg
fsubr
inc
cmp
add
dec
faddp
ss
cmp
insl
shll
cli
lods
jle
mov
movsl
adc
or
icebp
cwtl
int3
popw
in
stos
cltd
in
dec
sahf
test
daa
add
sub
xchg
mov
dec
in
mov
cmp
fsts
in
fnstenv
mov
xchg
jmp
scas
jo
xor
push
cmp
sub
add
loopne
int3
movsb
and
push
add
or
mov
push
push
pop
sbb
sub
lock
mov
jbe
sbb
scas
jp
fdivrs
xchg
xchg
mov
mov
movsb
nop
inc
cmp
mov
push
sbb
ss
js
scas
shll
in
sbb
sbb
xchg
dec
pusha
mov
jp
in
ds
loope
mov
sbb
arpl
dec
sbb
mov
or
add
sub
jb
add
push
pop
stc
es
ud2
dec
and
rorb
test
add
mov
lret
pop
out
test
dec
shrl
jae
adc
sbb
fldl
out
xor
addb
xor
mov
ret
insb
rorl
add
aam
mov
cltd
pop
addl
fistpl
psubw
sbbl
rclb
rorb
ret
iret
iret
lcall
push
add
adc
mov
in
sub
jecxz
mov
mov
add
inc
or
xor
popf
pop
push
faddp
and
and
mov
pop
fucomp
and
jp
inc
pop
cmp
rorl
xchg
jnp
pop
rorl
test
mov
jmp
sarl
fcmovne
mov
fsubr
dec
les
js
jle
js
adcb
dec
mov
push
repz
out
cmc
mov
jmp
sarb
xchg
pop
xchg
leave
dec
aas
dec
loop
ja
dec
adcl
fwait
mov
clc
int
jge
scas
hlt
xlat
dec
xor
adc
jp
mov
js
mov
mov
insl
push
jbe
sti
cmp
fmull
add
mov
and
movsb
push
mov
insl
sahf
pop
dec
mov
sbb
adc
ficompl
in
mov
mov
adc
loopne
out
ud1
pusha
stc
cmp
loop
jl
lods
inc
sub
pop
jo
test
movsl
fwait
ljmp
stc
popa
test
cli
fsubrl
jnp
shll
mov
xchg
out
fisttpl
out
jae
push
cmpsb
mov
aam
mov
sub
addb
movsl
push
xchg
dec
cmc
sbb
imul
mov
sbb
push
mov
xchg
stos
mov
stc
mov
xor
jg
mov
ret
out
and
movsl
xor
inc
out
mov
leave
lods
sub
adc
andl
push
cmp
jecxz
mov
push
sbb
cmc
or
ss
sahf
ret
imul
fistpll
adc
shl
or
jl
mov
and
xchg
or
push
mov
shlb
pusha
int
pop
aaa
pop
dec
jp
adc
or
mov
jle
jo
xor
lret
xor
pop
iret
cmp
mov
sbb
pop
jecxz
call
sbb
sbb
inc
cmpsl
icebp
xor
pop
sub
xchg
mov
ds
mov
inc
xor
inc
dec
repz
cmp
lcall
jp
mov
dec
fs
inc
repnz
lahf
outsl
inc
mov
bound
out
mov
iret
sbb
stos
aaa
outsb
pusha
inc
or
loop
mov
mov
inc
mov
push
stos
sbb
mov
xchg
pusha
mov
mov
int
or
insb
mov
rclb
lea
insb
fucomip
jbe
mov
les
and
cld
xchg
int
ficoms
imul
aaa
xor
dec
xchg
iret
dec
in
sub
mov
jg
lret
dec
data16
shll
fwait
and
cmp
cli
es
dec
addr16
cmp
xor
mov
push
addr16
arpl
dec
sbb
push
and
mov
dec
and
mov
jnp
adcb
mov
sub
push
adc
out
pop
mov
add
mov
ja
push
or
adc
jp
sub
add
add
rol
fcmove
rcl
pop
mov
ds
into
mov
je
js
sahf
rcl
xor
jnp
mov
xchg
test
roll
jb
and
pushf
cli
mov
mov
idiv
mov
out
mov
and
popf
inc
or
pop
add
stos
movsl
int
lds
sbb
pusha
jno
push
push
jno
and
jns
imul
fsubrp
or
mov
jl
mov
out
sub
mov
xor
lret
ds
mov
xchg
dec
sub
aam
cmpsl
mov
rcrl
xchg
or
fcmovbe
int
jg
mov
sbb
sbb
and
cmpsb
cltd
icebp
cmp
sub
pop
ljmp
test
bndldx
ret
es
mov
xchg
mov
stc
imul
cmpsb
stos
add
mov
icebp
popl
jecxz
fnstenv
pop
mov
daa
aad
mov
rcrl
pop
pop
fbstp
ja
jg
xchg
inc
ficoml
or
lret
mov
xchg
fxch
push
mov
jp
clc
rcr
incb
ja
ss
sbb
ret
mov
mov
mov
mov
sbb
pushf
outsb
fcmovu
xor
jge
jle
test
sbbl
fst
push
jmp
mov
sub
or
daa
int
xchg
pop
out
push
add
ret
or
lods
mov
push
pop
ja
or
cmc
loope
mov
aas
sahf
cmp
sub
xor
in
lods
movl
pop
and
mov
dec
add
popa
test
jl
push
lgs
lods
aam
or
lock
jecxz
dec
mov
cmp
dec
inc
mov
pop
inc
jle
sti
cmp
flds
mov
outsb
xchg
cmp
xchg
push
mov
int3
cwtl
cld
scas
fiaddl
mov
mov
push
test
or
and
sti
jle,pt
jecxz
andb
js
jp
add
cltd
jb
movsb
and
mov
leave
js
adc
pop
xor
outsb
ljmp
adc
insb
and
lds
outsb
xchg
stos
sti
rcr
jle
xor
jo
jb
les
popa
and
stc
mov
mov
mov
fs
fwait
inc
pusha
cmc
adc
or
pusha
dec
pusha
cmpsb
das
jno
in
xor
jbe
mov
bound
stos
jb
sub
mov
bound
mov
jl
jl
xchg
insl
pushf
adc
cli
mov
je
jo
popa
test
push
aas
fcoms
xor
add
in
jle
mov
aam
cmp
add
mov
std
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
jmp
leave
xlat
ret
rcl
leave
fldcw
jle
jg
js
je
js
xlat
jae
out
pop
add
mov
pop
cmpsl
mov
sbb
enterw
rclb
leave
and
jmp
pop
sarb
in
sahf
ja
adc
dec
in
mov
rcrb
cmp
adc
outsl
adc
xchg
dec
out
mov
lret
fidivl
mov
mov
or
clc
inc
jg
add
mov
loop
push
sub
jp
add
adc
cli
outsb
dec
ja
xchg
adc
dec
pop
push
add
jbe
rcr
ret
and
push
sbbl
pushf
xor
sbb
mov
popf
jg
lret
je
pushf
imul
mov
push
mov
test
or
or
mov
pop
sub
dec
jp
aas
or
lock
or
cld
sarl
mov
jle
cmpl
mov
sub
mov
ljmp
sbb
cmp
mov
dec
les
mov
out
mov
add
scas
inc
or
mov
inc
movsl
sub
or
adc
shrb
cwtl
je,pt
repnz
loopne
aam
inc
dec
sbb
and
cld
sub
mov
insl
xor
adc
stc
insb
pusha
xchg
mov
push
xor
mov
add
mov
add
js
cs
ljmp
mov
xlat
leave
enter
push
outsb
cmp
xchg
cmp
pop
xchg
add
pop
shl
push
sub
lea
and
fwait
movsl
and
outsb
leave
js
xchg
xor
fbstp
insb
repz
sub
ficompl
or
lahf
es
inc
mov
arpl
lods
mov
loope
enter
fildll
adc
mov
xchg
scas
fldcw
mov
cmc
hlt
cmp
leave
sbb
in
cmp
or
flds
adc
cmp
cmpl
dec
lods
fisubl
mov
aaa
movsb
mov
dec
lock
pusha
ficomps
add
push
aas
loop
clc
mov
movsl
movsbl
test
or
sbb
mov
xchg
xchg
out
ret
jle
pop
and
out
jbe
xchg
dec
addr16
fnstcw
dec
fcom
mov
jmp
test
pop
stc
out
sbb
sbb
sub
js
inc
popf
fwait
cmp
repnz
test
cmpsb
jecxz
test
je
push
push
fdivs
cli
data16
sub
frstor
and
adc
mov
lret
outsl
cmp
add
sub
shrb
aas
mov
gs
sub
pop
inc
cmp
push
test
jnp
test
add
add
sbbb
jmp
into
aas
ds
rcl
add
stos
rorl
outsb
pop
mov
je
js
sub
iret
inc
add
movsl
fs
dec
dec
jo
cmp
movsl
js
sbb
or
push
jge
push
push
fwait
call
mov
jae
outsb
aam
pop
aad
mov
pop
imul
jle
decl
xchg
daa
push
ret
add
std
gs
sub
rcll
sti
xor
mov
add
xor
dec
mov
cmpl
dec
pop
ds
stos
mov
jns
jb
inc
xor
pop
out
sub
mov
out
dec
jo
cmp
je
mov
out
or
sub
xor
imul
std
ja
push
push
and
leave
rclb
or
cmp
sarb
mov
pop
ljmp
aas
sbb
push
in
cmp
mov
mov
push
lock
jbe
jne
popa
xor
fimull
jge
je
push
cmpsb
imul
xchg
pop
lret
int3
stos
adc
cmp
dec
adc
and
and
cwtl
ds
mov
dec
pop
cmp
cs
daa
int
push
fcmovb
fisttpll
aaa
jne
das
adc
dec
jmp
push
shl
xchg
bound
push
insb
out
push
or
inc
ret
dec
mov
aam
mov
int3
movsb
push
jge
and
xchg
test
paddd
es
fstp
push
enter
jecxz
jge
lcall
or
imul
insb
xchg
cmp
cld
enter
mov
sub
push
nop
shlb
in
stos
xchg
push
out
icebp
push
and
xchg
addr16
enter
add
fdiv
lahf
adcb
aaa
xchg
or
movsb
out
popf
fldt
xchg
and
xor
lods
lods
or
inc
in
mov
movsb
adc
or
out
in
xor
lret
out
int
daa
push
pop
add
jmp
jecxz
sbb
int
cmp
pop
add
ret
mov
push
mov
cmp
in
sbb
stc
mov
fdivrs
xlat
jge
adc
and
xorb
insb
dec
jl
testb
imul
push
or
xchg
ss
out
xchg
cltd
clc
push
popa
xlat
push
movsl
ss
out
add
dec
pop
inc
arpl
pop
cs
adc
in
adc
sti
mov
mov
pop
les
cmpsb
lcall
jae
mov
and
push
test
in
or
xlat
pop
loop
push
and
sub
cmp
fimuls
xlat
xchg
stos
sbb
inc
mov
cs
mov
aam
enter
inc
hlt
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
ds
ror
rcl
fisubrl
xchg
jge
test
fadd
xchg
js
je
js
and
xor
stc
pop
sub
or
and
je
add
dec
mov
sub
and
push
lret
inc
cld
loop
and
xchg
mov
adc
cmp
add
jno
js
pop
mov
pop
sbb
push
or
or
mov
movsb
cli
mov
testb
lahf
cmc
pop
xchg
cs
shll
sti
sar
and
rclb
dec
stos
sub
adc
in
mul
fadd
xor
or
dec
js
jae
fisubrs
sar
repz
imul
or
cs
jae
mov
insl
fisubs
xor
mov
pop
out
faddl
adc
test
and
sbb
out
lret
cmp
mov
mov
xchg
mov
sahf
iret
ss
loopne
rorb
mul
nop
test
repnz
icebp
bound
movsl
enter
mov
sbb
je
add
inc
loope
frstor
fisubrs
test
adc
fadds
sbb
cmc
push
sahf
xor
scas
rcrl
das
pop
xchg
aam
push
sub
imul
mov
fld
push
xchg
add
mov
adc
xchg
push
and
push
xchg
dec
pop
add
lahf
inc
scas
cmp
jne
insl
dec
pop
sbb
or
movsb
jl
jmp
aas
cltd
pop
sub
int
fsubrs
std
iret
inc
inc
add
jmp
xlat
and
xor
sbbb
dec
out
ret
dec
adc
push
jb
mov
jl
dec
xor
or
add
push
bound
and
sbb
mov
inc
lock
cmp
sbb
repz
mov
lds
sarb
movsb
in
ds
cmpsb
fildll
adc
and
out
rclb
frstor
mov
mov
push
fisubl
cmpl
fisubl
push
lahf
sub
pusha
popa
daa
jae
lods
fs
dec
data16
out
pusha
push
loope
jbe
xchg
movsb
lahf
xor
outsb
inc
pop
xor
inc
mov
push
leave
ljmp
sbbl
mov
jns
scas
or
push
ret
or
in
inc
mov
mov
and
xor
mov
loope
mov
inc
add
or
daa
adc
xchg
test
push
jge
cmp
xchg
cmpsl
mov
ficoml
pop
mov
xor
fwait
push
mov
mov
push
mov
test
add
mov
sbbl
shr
mov
sti
or
mov
cmp
sbb
rorb
mov
add
ret
cmp
add
ret
pop
je
mov
xor
add
mov
jmp
int3
into
lret
ror
ficoml
cmc
mov
inc
das
ds
js
je
js
cli
and
clc
push
xchg
ljmpw
jl
jne
movsl
mov
add
pop
jo
or
cmp
pushf
jae
or
cmp
test
aad
fadds
flds
scas
decl
inc
pop
ljmp
test
sbb
ret
and
cmc
dec
lods
mov
or
idiv
cwtl
call
pop
xchg
nop
sub
pop
adc
add
sub
pop
dec
pusha
lret
push
push
outsl
xchg
and
sub
add
imulb
push
jno
mov
push
xor
fistpl
mov
sub
inc
scas
aad
push
push
and
jnp
push
popa
incb
in
inc
lds
rcrb
xchg
jae
push
out
xchg
or
orl
push
movsb
xchg
outsb
mov
sbb
and
icebp
out
cwtl
and
mov
popa
aas
pop
ss
jb
push
shrb
push
popa
and
pop
dec
xchg
out
clc
decl
ljmp
sbb
xrelease
mov
xchg
sbb
cmp
pop
pop
fldenv
inc
jbe
out
pop
fistps
stos
arpl
add
xor
sub
and
fisttpll
cmp
lea
lret
cmp
scas
lahf
loope
xor
aad
xlat
inc
xchg
push
js
dec
jle
ljmp
cmc
aad
lea
sarb
sub
or
stc
inc
pop
jl
fisttps
adc
and
or
rcrl
mov
in
push
test
fxch
rolb
mov
and
insb
pop
imul
inc
rorl
xchg
or
test
and
jbe
mov
dec
and
lods
xlat
mov
lods
and
out
jb
pop
mov
mov
mov
enter
in
dec
fstl
mov
ds
and
inc
popa
mov
push
pop
mov
sub
inc
xor
loopne
mov
jp
cmp
mov
sbb
testb
in
cmp
pusha
loop
ret
sbb
jle
dec
aad
jg
test
mov
lock
enter
fildll
fnsave
cmp
sahf
or
adc
cwtl
fidivrs
jl
and
jg
sbb
gs
shrb
cmc
mov
dec
inc
hlt
call
cmp
mov
add
xchg
add
jbe
aam
imul
push
ret
cmp
jecxz
cmp
add
stc
mov
ss
mov
and
mov
bound
cmp
mov
mov
dec
push
cmpsl
push
xchg
jno
call
add
adc
ror
cld
push
imul
insb
add
xchg
mov
mov
mov
jmp
xlat
cmp
ds
js
adc
or
pushf
cmp
js
aaa
jmp
cwtl
ret
mov
pop
lret
mov
mov
mov
enter
loop
stc
test
loop
adc
out
js
in
divb
insl
ret
add
xchg
mov
lret
idiv
in
iret
imul
and
divl
sarl
pop
test
or
scas
pop
es
xor
jg
cmp
rcll
lcall
add
sahf
sti
not
inc
rolb
add
mov
cld
adc
test
sub
xor
rorl
push
in
pop
sub
cmc
sub
xchg
jge
das
imul
jmp
into
cmp
inc
dec
stos
out
les
xor
jns
stc
push
jne
xor
cmp
rcr
ret
scas
stc
daa
or
jnp
sub
push
fmull
in
popf
pop
pop
sub
outsb
shlb
adc
adc
pop
loopne
pusha
xchg
lea
xchg
ss
movsl
sbb
push
push
inc
inc
ret
negl
test
vmwrite
dec
sub
shll
xchg
leave
and
push
and
dec
inc
clc
xchg
push
jmp
dec
dec
jg
cmpsl
sbb
sbb
dec
pusha
lods
lods
or
cld
push
leave
outsb
out
in
outsl
jnp
cmp
into
out
xor
dec
stc
in
or
or
addl
dec
sahf
fs
out
inc
adc
pop
jmp
or
fsubrp
cmpsl
xor
shrb
mov
add
add
icebp
test
stos
aam
jo
pushf
in
fisttpl
push
jge
arpl
inc
mov
and
dec
inc
xor
and
gs
fistpll
push
cwtl
loop
aad
sub
testb
in
adc
push
pop
cmpsl
and
mov
add
mov
mov
inc
sar
adc
cmpb
dec
imul
out
push
ret
mov
loope
add
jmp
mov
adc
add
sub
sti
add
xchg
pop
xor
jne
add
iret
rcll
clc
jg
repz
fcoml
xor
push
xchg
daa
lret
es
aad
outsb
inc
dec
outsl
sbb
ffree
and
cmc
jecxz
jo
pusha
daa
sub
stos
test
dec
loope
daa
add
push
pop
cwtl
mov
push
insl
test
fidivrl
rclb
adc
filds
mov
jge
pop
cwtl
icebp
movsl
xor
jge
or
jge
inc
scas
jp
or
xchg
pop
add
jns
sub
push
scas
xchg
xchg
ja
out
test
xor
add
movzwl
mov
xor
lea
add
jmp
cmp
fcmove
and
inc
ss
js
je
js
sbb
fwait
sbb
roll
mov
push
xlat
bound
and
or
jmp
xchg
cmp
aad
pushl
pop
adc
es
ljmp
cwtl
or
xor
hlt
cmpsb
inc
andb
pop
daa
mov
iret
insb
loopne
out
mov
jle
out
mov
adc
inc
mov
addr16
or
xor
arpl
roll
cmp
fdivl
mov
cmp
inc
scas
inc
repz
jge
cltd
addr16
test
ss
imul
jl
mov
cmpsb
jb
popf
daa
cmp
mov
adc
xchg
xchg
mov
cmpsl
sahf
lret
cmp
lahf
fdivl
lock
daa
jo
mov
scas
jle
fadds
inc
movsb
test
mov
pop
test
pop
dec
inc
loop
scas
fsubrs
decb
xor
sub
jb
xor
popf
fdivrs
push
dec
aad
mov
daa
inc
out
mov
pop
xchg
jecxz
das
adc
int3
pop
push
mov
lahf
sub
scas
push
dec
mov
mov
cmc
sarb
xchg
push
and
cltd
jmp
repnz
mov
push
test
in
mov
rol
mov
cld
cmpsl
mov
and
sub
lcall
push
mov
cli
repz
jmp
aas
and
mov
dec
idiv
ret
movsl
jg
cmc
fdivrs
out
pop
dec
and
fmull
outsb
jb
rorl
out
sub
aas
and
enter
and
or
adc
int3
xor
pusha
pop
jl
pop
repz
ret
mov
xor
fldenv
dec
icebp
lcall
repz
mov
sub
sbb
sahf
stos
popf
jge
xor
aad
mov
inc
jecxz
xchg
sbb
jo
and
mov
dec
fildll
nop
int
pusha
mov
setge
or
stos
xchg
inc
cmpsb
push
push
cmp
and
cmc
inc
cld
call
pop
bound
xchg
push
sbb
out
cmc
es
pop
xor
mov
mov
inc
lcall
mov
dec
xor
es
loop
or
inc
loopne
out
push
aad
mov
cmpsb
push
divl
mov
mov
cmp
fwait
dec
push
pop
mov
das
outsl
addr16
cs
rorl
lahf
stos
inc
pop
loope
ds
xchg
cmp
lea
xor
test
push
test
stc
push
pop
test
idivl
and
adc
adcl
adc
inc
xor
and
int3
xchg
inc
jb
repz
cld
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
rol
leave
rcr
mov
jb
ja
popf
js
je
js
xor
cmp
add
cmc
nop
movb
xchg
arpl
jbe
fmulp
push
je
out
sbb
jns
rclb
push
inc
fbstp
loopne
shlb
arpl
les
lea
dec
and
adc
mov
add
stos
xchg
out
fcmovu
int
push
mov
popa
mov
andb
dec
inc
inc
xor
mov
in
inc
and
dec
popa
jecxz
sahf
and
dec
loop
adc
pop
mov
dec
xchg
inc
rorl
scas
mov
and
inc
jl
mov
xchg
inc
xlat
sub
hlt
negb
sub
stc
sbb
insb
mov
mov
adc
dec
aad
ss
dec
mov
dec
push
add
in
pop
push
bound
xlat
push
and
and
xor
mov
and
loope
movsl
jae
loop
mov
cli
insl
mov
xchg
push
fbld
xchg
mov
test
jecxz
loopne
or
dec
test
jb
jg
and
lock
dec
cli
add
cs
inc
xor
test
jnp
ficoms
int3
pop
test
push
das
test
lret
orl
ja
mov
and
pushf
outsl
push
xor
cld
mov
into
loope
arpl
lods
inc
push
pushf
in
lods
cmp
adc
sti
jecxz
or
jnp
and
loope
dec
jnp
mov
add
daa
mov
jecxz
or
lcall
scas
cs
xchg
mov
daa
jle
out
mov
cmovne
adc
mov
xchg
xor
or
lock
rcrb
inc
mov
stos
jo
sub
clts
xchg
out
orl
inc
or
test
imul
jbe
fwait
cmp
mov
leave
adc
sbb
xchg
cmc
leave
sbb
cmp
pop
mov
or
sub
mov
lods
mov
dec
push
jmp
sti
push
cltd
insb
out
popa
std
shlb
negl
adc
test
aaa
xchg
inc
cld
inc
xor
jmp
bound
and
cmp
mov
cmpsb
lcall
loop
ljmp
in
ljmp
out
pop
jp
fwait
lock
out
pop
sbb
xchg
fwait
jl
mov
or
xchg
pop
fstpl
sbb
pop
mov
dec
call
fwait
arpl
pop
imul
xor
dec
aam
in
mov
lods
mov
stc
cli
mov
push
xchg
iret
pop
aaa
test
xor
stos
jle
adc
scas
out
pop
xlat
and
lret
sub
dec
addl
daa
nop
inc
movsl
xchg
adc
cmp
adc
add
rol
ror
aad
xchg
mov
aad
pop
inc
mov
js
xchg
loopne
movsb
sub
pop
pop
xchg
and
and
mov
sti
outsl
subl
adc
push
pop
cmpl
jb
insl
cs
fistl
cwtl
ret
sbb
shll
jp
cmpsl
outsb
cli
add
jns
mov
or
pop
push
pop
loope,pt
mov
push
fcmovb
pop
and
aad
out
call
mov
je
hlt
mov
mov
jg
adc
iret
out
mov
add
sbb
mov
scas
sub
xor
in
jns
mov
enter
scas
in
sbb
icebp
fidivrl
push
stos
shrl
and
mov
pop
scas
mov
movsb
xchg
jle
loope
xchg
jmp
ds
jnp
mov
cmp
adc
and
inc
cmpl
xor
fwait
insb
mov
fldl
repnz
lods
ret
out
xchg
and
ss
and
xchg
lods
fcomps
sbb
or
rorl
nop
dec
fnstsw
pop
xor
sbb
pop
xor
js
pop
cwtl
aas
dec
mov
add
mov
cmpsl
jne
jmp
inc
xor
inc
daa
scas
mov
and
pop
or
lcall
movsl
andl
mov
jns
cmp
pop
jne
push
scas
adc
ret
out
sub
mov
inc
jae
scas
sbb
inc
push
jmp
jo
cmp
test
lods
dec
out
cltd
or
sub
lds
sbb
test
cmc
push
in
pop
push
xlat
popf
mov
mov
shl
dec
lods
adc
fcmove
add
mov
fwait
cli
iret
lods
adc
xchg
cltd
pop
jo
cld
cmp
in
aad
pop
push
push
jne
andb
sbb
xchg
pusha
stos
scas
test
shrb
adc
mov
nop
or
stc
aas
stos
icebp
pop
push
xor
sbb
add
mov
push
and
xor
xlat
mov
push
mulb
lds
mov
mov
pushf
addb
nop
dec
in
loop
test
shl
stos
dec
mov
fst
nop
push
cs
mov
mov
int
xchg
lret
lock
push
aaa
js
xlat
popf
xchg
flds
mov
mov
and
lcall
mov
fcompl
rolb
cmc
rcll
cmpsl
insl
lods
xchg
push
fmuls
sub
or
shll
fwait
jb
shr
cmc
xchg
fwait
into
pop
adc
rcl
stc
jl
test
shlb
aas
call
and
mov
or
sbb
arpl
hlt
je
mov
jmp
push
mov
sub
sbbl
mov
xorl
jmp
ror
mov
fcmovbe
push
aad
add
movsb
sub
js
fsubr
xchg
fists
divb
adc
sub
cmpb
into
jl
jno
cmpsb
push
cmp
lcall
in
or
das
lidtl
repz
out
cmp
insb
ds
into
dec
fisttpl
gs
jge
divl
ds
mov
inc
dec
cwtl
mov
mov
jp
dec
sub
jmp
out
jb
cmp
and
sahf
sbb
lret
and
test
pop
and
aas
mov
jb
pop
notb
test
jmp
inc
mov
lret
pop
jg
sub
sub
add
sub
cmp
test
inc
sti
inc
and
sub
mov
jb
push
movsl
je
dec
iret
arpl
jo
daa
jbe
sbb
orl
dec
jno
lods
lods
dec
pop
push
pop
adc
jae
mov
movsb
push
sub
mov
add
add
dec
gs
cmp
das
xor
pop
jne
mov
lcall
outsl
lcall
push
scas
out
cmp
insb
jmp
icebp
pop
add
popa
pop
xchg
ds
dec
out
les
out
shlb
lahf
shlb
ljmp
test
mov
das
pop
iret
cmc
test
movsb
xchg
mov
bound
fsubl
add
mov
mov
push
jp
dec
shlb
jecxz
xor
lods
repnz
sbb
inc
sbb
in
pop
nop
ficomps
xchg
push
mov
arpl
jle
cmp
out
sub
inc
addl
inc
lods
cmp
repz
push
mov
pusha
ljmp
sar
jae
adc
cltd
add
jge
xchg
xor
push
std
xchg
stos
inc
inc
jmp
jp
addr16
push
adc
sbb
in
jb
xchg
xor
add
dec
mov
es
sarb
or
repnz
cwtl
hlt
adc
cmp
or
inc
and
push
jg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
movzwl
xor
mov
xor
or
mov
adcl
add
subl
push
mov
adcl
mov
negl
xor
jmp
int
iret
lret
and
push
pusha
pop
gs
out
js
xor
ja
add
cmp
js
popf
insb
and
cld
cmp
sbb
jno
lods
mov
adc
in
sbb
jmp
pop
in
adc
xor
xchg
rorb
cmp
mov
jg
pop
and
xorl
stos
mov
jo
mov
inc
jge
mov
cli
fnsave
jns
push
rcrb
fidivrl
jno
test
call
lock
cmp
lods
mov
daa
int3
ljmp
hlt
out
push
mov
rcr
pop
shrb
loope
jns
mov
push
mov
ds
or
and
imull
dec
jnp
ret
jbe
nop
cwtl
push
cmp
push
out
xor
cmp
sub
addr16
sbbw
test
xor
mov
push
dec
mov
outsb
int
fistps
mov
cmpsl
pop
mov
bound
and
pop
cli
hlt
inc
sub
lock
std
inc
jnp
adc
cmp
fs
adc
adc
ljmp
je
or
adc
imul
addr16
test
push
jmp
mov
cltd
ja
jecxz
fildll
int
mov
xlat
jns
jae
loop
mov
and
in
lcall
cmp
push
cmp
dec
sbb
jmp
pop
add
out
dec
and
inc
add
and
jg
pusha
pushf
mov
push
jmp
mov
in
adc
dec
inc
mov
pop
pushf
inc
syscall
or
xchg
in
and
in
int
and
jmp
sub
xor
lock
movsb
pop
pop
lcall
inc
aam
push
ficompl
popf
rolb
icebp
fldt
cs
fmull
bound
stc
test
rol
add
movd
lret
rcrb
sub
shlb
jp
das
shlb
mov
test
or
xchg
and
dec
dec
dec
mov
cmpsb
dec
and
sbbb
scas
cmp
xchg
mov
leave
enter
jge
push
mov
movl
movl
andl
add
jmp
cmp
jne
mov
mov
mov
mov
mov
movl
mov
mov
movl
jmp
movl
jmp
leave
ret
enter
fld
int
fdiv
adc
fmull
stos
js
xor
jno
push
aad
out
jae
lret
insb
in
xchg
dec
andl
mov
jg
mov
sub
jo
int
jmp
ret
test
cmpsb
inc
inc
or
pop
mov
xchg
fst
ret
fsts
push
xor
rorb
pop
sti
or
dec
fsubr
sub
out
aas
sarb
fcoms
arpl
inc
mov
xchg
inc
mov
jge
sbb
insl
pusha
pop
push
jecxz
aaa
xor
add
repnz
pop
into
jae
push
xor
leave
andl
mov
int3
insb
xor
push
lret
push
cmpsw
fcmovb
mov
cld
xor
cmp
cmp
sbb
loope
jb
sbb
sti
cld
ss
loope
lret
repz
xor
arpl
xchg
mov
dec
and
mov
lret
sub
xchg
mov
arpl
dec
add
popa
rorb
dec
test
stos
pop
ret
daa
insb
cmc
popfw
push
ja
js
js
push
repz
stc
xlat
outsl
sub
pop
shll
neg
pop
int
adc
mov
test
or
mov
cmpsl
jns
lods
mov
fsubrl
out
mov
jne
lahf
adc
repnz
int
mov
jns
je
mov
bt
cmpb
sub
xlat
int
sbb
rorl
ljmp
jmp
xchg
mov
incb
mov
imul
insb
add
inc
movsb
sbb
adc
aam
setno
mov
inc
test
push
push
inc
adcb
jge
insb
ja
addl
fcoms
scas
mov
push
mov
and
inc
insb
lock
clc
inc
lock
xor
pop
fmuls
xchg
mov
je
cld
dec
xlat
sub
std
imul
cltd
orb
xor
inc
movsb
frstor
imul
movl
jne
and
jmp
int
into
aad
lea
sub
xor
adc
ficompl
outsb
leave
js
stos
icebp
push
lahf
jnp
or
dec
pop
pop
or
test
cli
sub
arpl
or
arpl
push
xor
jnp
rolb
arpl
push
mov
pushf
dec
mov
inc
or
xlat
xlat
add
data16
ljmp
or
lret
dec
xor
addl
inc
sbb
aas
stos
imul
sbb
mov
ss
cs
imul
lds
xor
inc
ja
or
sbb
or
cmc
cmpsb
xchg
sahf
inc
fisubrs
and
jbe
or
xor
push
push
cltd
lea
rclb
sbb
push
out
dec
or
in
cs
cld
jb
and
cmp
push
movsb
inc
orb
xor
mov
fwait
mov
dec
insb
ja
push
aad
mov
inc
outsb
jp
int
mov
pop
pop
icebp
sarb
and
ret
push
lahf
outsl
inc
push
loope
xor
ds
lock
in
jge
mov
xor
in
pop
xchg
sbb
ret
lods
hlt
jecxz
pop
popl
jmp
movsl
call
or
rorb
rol
rcl
aas
xchg
iret
adc
and
push
insb
in
pop
xor
lods
and
jmp
je
jmp
fstpl
mov
andb
or
loopne
inc
mov
jg
int3
or
sub
arpl
inc
ret
in
dec
add
enter
add
fcoms
fistpl
stos
mov
in
leave
push
cs
jmp
mov
pop
arpl
es
pop
jbe
out
bound
rcr
mov
fadds
add
mov
pop
mov
pusha
add
movb
dec
and
inc
jg
cmpsb
mov
mov
and
mov
jg
test
test
xor
int
and
and
sub
movsl
stos
mov
and
lock
movsl
xor
and
or
mov
sbb
mov
mov
xorl
sub
orl
push
adcl
mov
jmp
enter
ret
push
in
pop
dec
fdivrp
pop
pop
push
scas
js
xor
mov
inc
xlat
or
or
push
lcall
jl
std
xchg
movsl
and
hlt
cmp
inc
adc
insb
dec
cmp
hlt
dec
stc
sub
mov
mov
push
sbb
add
popa
dec
jle
popf
je
lret
in
lds
mov
push
ror
mov
daa
adc
or
pusha
jle
test
sbb
xchg
aaa
lds
outsl
dec
dec
push
in
shrl
lock
outsl
leave
and
xchg
mov
repz
push
std
push
bound
fadds
mov
or
mov
lahf
outsl
jg
sbb
pop
icebp
push
in
lret
push
sti
sub
in
rorl
cmp
add
mov
add
out
arpl
adc
lret
in
add
scas
inc
dec
sbb
xor
cmp
call
push
ljmp
push
cmp
aas
mov
sub
test
add
idiv
scas
jl
add
and
enter
pop
push
dec
rclb
sub
mov
insl
or
push
mov
scas
call
or
and
mov
js
jmp
sub
xchg
xor
and
es
pop
jb
lcall
daa
pshufw
int3
cld
jb
mov
fcoms
xor
lock
xchg
outsl
mov
js
add
mov
movq
sbb
inc
fwait
aam
ds
jae
xlat
jae
mov
dec
inc
sbb
mov
and
rcr
dec
pop
sbb
dec
pushf
and
xlat
ds
mov
lahf
rolb
aaa
fwait
negb
lods
jle
test
cmp
scas
stc
fimuls
cmp
inc
out
mov
mov
aas
xchg
cli
testl
daa
mov
push
push
add
xchg
stos
xchg
mov
ss
aaa
mov
jl
aas
or
xchg
push
mov
add
addl
push
adcl
call
movl
incl
cmpl
movl
jb
movl
jmp
cmp
jne
sbb
movl
mov
mov
mov
mov
movzwl
and
mov
adcl
xor
jmp
rol
leave
leave
leave
leave
rcrb
inc
pushl
mov
js
jle
js
pop
std
js
and
or
inc
inc
pusha
shrl
cwtl
sahf
cmp
adc
mov
push
clc
push
xchg
adc
inc
popf
arpl
dec
sbb
cmp
lods
ror
je
lea
xchg
inc
push
inc
xor
sub
loope
lretw
push
push
dec
sti
rclb
pop
test
js
jnp
sahf
repnz
pop
shrl
add
dec
mov
xchg
dec
inc
incb
push
mov
jno
or
and
cwtl
or
inc
add
and
lret
pusha
pop
xchg
xor
pop
lea
dec
mov
ffree
push
mov
mov
lahf
xor
repnz
mov
cmpsl
lods
inc
dec
push
ud2
mov
and
cwtl
inc
sub
jb
adc
pop
xor
in
xchg
sub
jbe
mov
sbb
inc
popa
cmpsb
hlt
jmp
add
xchg
pop
leave
aad
cmpsb
and
pop
xchg
pusha
insb
ret
dec
ss
pop
movsb
das
lods
inc
sub
mov
sbb
xchg
in
mov
dec
and
cli
nop
push
lcall
adc
push
stos
jo
dec
lock
or
xor
sbb
test
mov
pop
jno
pop
mov
shll
push
sbb
fisubs
loop
mov
arpl
mov
dec
in
into
and
nop
inc
mov
jnp
pop
mov
fidivl
sahf
addb
mov
mov
test
cmpsl
inc
ds
cwtl
and
push
xchg
insl
test
stc
mov
ja
push
push
addl
pop
addr16
stos
mov
pop
scas
push
push
scas
mov
mov
mov
mov
in
lock
xor
bnd
aam
cmpsb
stos
xchg
adcb
in
jecxz
scas
inc
jle
call
jae
push
xchg
xchg
mov
out
out
push
adc
out
jne
sbb
stos
mov
mov
dec
fistl
andl
lret
scas
popf
lods
in
movsb
add
mov
in
cltd
scas
les
push
jae
fs
mov
notl
lea
mov
mov
xor
add
mov
lea
push
mov
jmp
ds
roll
aas
jns
mov
js
lret
repz
pop
movsb
mov
and
outsl
inc
sbb
xchg
pusha
pop
jmp
es
enter
pop
movsl
inc
es
add
mov
mov
mov
mov
xor
lods
hlt
sub
shrl
push
out
sti
sub
cmc
shll
arpl
movsl
xor
es
push
add
mov
lahf
xchg
int
mov
xchg
mov
stc
mov
xor
add
push
daa
sahf
nop
test
push
dec
mov
sub
dec
inc
cli
sub
dec
ret
sbb
addr16
push
cmp
dec
and
or
mov
mov
imul
mov
in
jp
cmp
sti
movsl
mov
in
in
sahf
mov
js
pop
add
dec
getsec
jb
lahf
lcall
jl
jge
adc
sbb
cmpsb
cmp
ret
mov
out
addr16
xchg
lds
cli
mov
mov
rorl
les
cmp
lret
aad
fcmovne
add
jp
fistpl
add
cmpsl
test
xchg
das
mov
pushf
adc
fadd
popa
popa
pop
jb
mov
lret
icebp
roll
pusha
repnz
std
lods
rolb
aad
sub
rcl
fsubr
dec
mov
xchg
or
daa
aam
cmp
xchg
rcll
sahf
sub
jge
pop
add
insl
jno
mov
cmovb
cs
push
xchg
sub
out
mov
filds
push
clc
and
adc
ficompl
push
mov
push
push
lahf
sbb
xchg
arpl
mov
imul
push
ret
push
add
inc
outsb
cs
sti
test
idivl
add
testl
ja
push
jl
mov
pusha
mov
add
call
add
in
aam
sahf
cltd
movsb
jmp
cmpsl
fdivrl
xchg
cmp
dec
cmpsb
mov
test
push
or
fildll
loopne
add
lods
mov
xchg
iret
lock
and
add
push
jmp
xlat
lret
fcmovu
aas
cmp
push
pop
imul
xor
fnstsw
inc
arpl
hlt
xchg
jns
outsl
dec
sbb
jnp
scas
add
clc
lcall
mov
ss
mov
sti
subps
mov
scas
test
mov
or
mov
popa
movaps
xor
inc
stc
xchg
sarl
inc
sub
jecxz
xchg
mov
dec
mov
decb
mov
outsl
pop
out
mov
bnd
bound
mov
mov
cmp
fcomps
lret
mov
mov
sub
mov
fidivs
lods
imul
in
pop
jecxz
mov
pop
or
jp
jns
and
mov
scas
dec
fdivs
pop
cmpsb
sahf
pop
cmp
cmp
sbb
inc
icebp
divb
arpl
std
mov
idivl
push
aad
fbld
fiadds
addr16
and
rol
js
ss
pop
mov
addb
andb
loopne
lret
xchg
popf
ss
adc
shll
popf
insb
into
out
and
outsl
mov
fucomip
mov
xchg
cmpsl
insl
add
cmp
aam
cld
gs
mov
rclb
cmpl
xchg
xchg
cmp
xchg
mov
sbb
mov
inc
cmpsl
xchg
aam
sbb
test
sub
movsl
lds
adc
cld
mov
ret
cli
push
add
lret
outsb
outsb
lcall
outsb
jle
mov
iret
jbe
push
pusha
je,pt
rorb
mov
sbb
jmp
cmpsl
sub
loop
aam
insl
leave
ret
inc
push
inc
mov
cmp
int3
sbb
jmp
fdiv
cmpsb
in
lahf
lods
or
shll
mov
sub
addr16
test
ja
mov
inc
fstps
adc
cld
imul
mov
pop
push
pop
in
pop
mov
outsb
loope
dec
jb
mov
enterw
sahf
jg
mov
lahf
mov
xchg
bnd
and
xor
mov
sti
jecxz
ret
cld
mov
push
pushl
call
jmp
cmp
jne
mov
jmp
sarl
ror
leave
dec
cmc
adc
movl
xor
stos
arpl
ljmp
pop
adc
jmp
popf
stc
mov
sbb
mov
jge
bound
mov
cltd
adc
stos
xor
mulb
int3
and
adc
loopne
add
in
push
rcrl
pop
cmp
ret
inc
call
pop
mov
sbbb
and
or
mov
stc
dec
xchg
xlat
cmp
dec
mov
pop
mov
rorl
xchg
cwtl
jp
jns
and
pop
fwait
sub
insb
lock
mov
nop
outsl
push
push
test
push
mov
jp
je
test
fisubrl
cld
mov
ljmp
fwait
enter
xor
ret
add
adc
adc
mov
aaa
notb
jb
movsl
lods
mov
push
movsl
movl
lret
push
push
out
xchg
aas
push
jns
ss
dec
inc
daa
push
fs
push
loopne
dec
mov
mov
sub
jno
lahf
js
fdivs
test
notb
or
push
xlat
int3
mov
aas
and
fucom
iret
test
mov
mov
xchg
pop
enter
jl
cli
jne
jp
jl
ds
stos
mov
push
nop
xor
dec
jne
dec
pusha
pop
mov
jbe
scas
inc
lret
pusha
jno
icebp
lahf
adc
cmpb
mov
daa
mov
lock
outsb
inc
mov
outsl
pop
lock
insl
jb
adc
xchg
pusha
push
ffreep
and
pop
jb
jae
xchg
dec
xchg
fnsave
mov
inc
fsubs
lea
xchg
sub
adc
daa
in
jl
sti
popf
push
pop
in
subb
sub
jns
push
and
dec
add
mov
xchg
ss
inc
add
and
or
out
in
adc
in
push
lcall
sbb
mov
jno
aas
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
jmp
leave
fcmovbe
sar
rcrl
mov
clc
lods
aas
mov
js
xor
iret
cmp
into
xchg
out
jp
subb
fcompl
adc
fidivrs
fndisi(8087
push
mov
or
cld
lods
xchg
add
rclb
inc
out
decl
push
xor
in
addr16
mov
add
stc
std
stos
cli
pop
inc
out
stos
cwtl
xor
idiv
ja
cmp
sahf
loop
test
jge
dec
push
aad
lock
mov
fistpl
das
jg
mov
sbb
sbb
push
add
cmp
sti
sysenter
mov
and
sbb
jbe
in
and
cmp
adc
int3
ljmp
adc
lret
popl
in
mov
int
rcrl
mov
xchg
ficoms
pop
hlt
jb
cmp
insl
nop
rcrb
popf
and
push
lods
lods
loop
pop
jns
addl
mov
sbb
push
cmp
sahf
out
addr16
aas
push
lods
push
xor
jae
ret
out
xlat
jge
inc
mov
lcall
mov
call
mov
stc
jne
dec
or
xor
mov
mov
mov
sarb
outsb
inc
lods
cmp
stos
in
stos
cmpsl
pop
ds
add
scas
test
outsl
arpl
jb
pop
and
addr16
or
push
rclb
mov
in
mov
push
iret
pop
push
imul
pushf
sbbb
cmp
into
pmaddwd
fs
pushf
pushl
add
add
xchg
je
mov
lds
stc
out
mov
xchg
orl
mov
push
pop
mov
js
add
arpl
lock
addr16
shrb
sbb
stc
pop
dec
pop
std
sbb
mov
or
bound
popf
dec
fucomip
testb
xor
mov
cmp
lea
mov
sbb
xchg
loopne
stc
orb
sbb
fucom
nop
adc
ja
int3
or
lock
jmp
dec
adc
xchg
pop
push
lahf
int
mov
in
bound
inc
or
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
movl
jmp
cmp
aad
xlat
jecxz
ja
jns
xor
mov
js
xorb
xor
cltd
hlt
mov
out
inc
add
sub
xchg
adc
pop
pop
int
loop
cmpsb
scas
ret
or
jge
ja
dec
pop
and
inc
xor
push
pusha
lahf
fwait
adc
in
pop
test
and
cmp
and
inc
cmpsl
pop
inc
int
aaa
xor
cltd
pop
stos
sub
mov
mov
fmul
movsl
fildll
sub
jnp
fdivs
adc
push
popf
mov
call
orl
in
xchg
jnp
shlb
or
sub
sub
in
push
lret
popf
cmp
pop
into
fldl
daa
popa
pop
cs
and
push
pop
mov
pop
xchg
mov
dec
call
cld
inc
xor
arpl
or
ret
in
jnp
mov
sarb
sbb
and
rorl
stos
vsubpd
mov
sarl
pusha
lret
add
or
rcrb
ret
inc
jo
inc
loopne
adc
add
addr16
roll
mov
cs
adc
insl
xor
mov
xor
scas
and
adc
pusha
cmp
cmp
lret
bound
sub
shll
mov
cli
push
scas
arpl
jl
sbbl
loope
sub
push
xchg
push
cmp
mov
lret
dec
or
push
sub
ja
sub
xchg
mov
xor
cmpsb
mov
add
faddp
rolb
and
iret
out
mov
or
les
icebp
adc
loope
test
sbb
dec
cmpsb
outsl
inc
mov
push
aad
dec
adc
stos
les
pop
push
aaa
dec
mov
pop
add
fwait
icebp
cmpsb
dec
mov
mov
in
in
or
add
addr16
push
mov
jge
add
inc
jo
sti
mov
fisubl
sbb
sub
sbb
nop
pop
test
leave
int3
inc
xlat
daa
jno
xor
cli
pop
ret
push
mov
das
and
jns
mull
fiadds
mov
repz
and
pop
loope
xchg
out
push
ss
sbb
sti
jge
cli
cwtl
rorl
movsb
xor
test
std
out
or
xor
mov
or
mov
mov
xor
add
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
add
mov
xor
jmp
lret
ror
leave
lret
push
xchg
dec
aam
daa
popa
mov
js
test
test
or
jg
ss
cmp
ror
int
rcr
xor
jmp
inc
repz
popa
out
mov
pop
rcr
fisubrs
mov
cmc
nop
cmpb
test
push
iret
pop
push
mov
xchg
scas
sbb
adc
or
ja
out
std
out
push
js
test
jmp
enter
aaa
and
push
xchg
pop
hlt
add
and
inc
xor
test
inc
pop
inc
jecxz
jl
pop
cmpsb
fimull
scas
outsb
mov
push
and
mov
mov
sub
mov
and
jle
adc
or
jmp
jae
jle
pop
push
mov
and
in
push
lret
nop
loope
jo
stos
lret
mov
push
lret
or
in
push
cltd
mov
addl
arpl
sub
push
add
jmp
test
sahf
or
xchg
fcomps
jl
push
jbe
and
mov
dec
nop
pushf
add
adc
loopw
pop
adc
femms
scas
push
scas
mov
in
ds
movsl
mov
repnz
mov
inc
ljmp
fcoms
mov
insl
add
push
and
cld
in
xchg
fs
push
repz
xor
lods
inc
movsb
add
mov
sbb
iret
cmp
pushf
imul
xchg
dec
jl
lahf
dec
das
gs
je
cmpsb
iret
xor
jb
lret
or
aaa
dec
sub
dec
xchg
sub
repnz
push
ja
add
xchg
push
mov
je
sbb
push
sar
lods
jns
dec
jle
sbb
movsl
aas
cmp
add
mov
mov
fstl
flds
mov
adc
daa
popa
aaa
add
vdivss
cs
cli
enter
cli
outsb
adc
pop
and
add
dec
in
pop
pop
and
popf
in
call
sub
mov
ret
imul
xchg
in
cli
jg
or
out
fs
test
xchg
gs
insl
movsl
out
cmp
je
xbegin
clc
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
xor
jmp
enter
fcmovnb
aad
push
and
cmp
xchg
dec
movsl
into
mov
js
add
gs
popw
add
xor
lret
stos
hlt
or
xor
and
lahf
jnp
xchg
mov
dec
aas
call
xchg
fidivrs
jge
adc
and
pop
icebp
dec
test
ljmp
push
ss
cltd
fnstsw
call
mov
xchg
cmp
xchg
xchg
pop
inc
push
addr16
push
icebp
insb
in
mov
insb
rcl
inc
push
xchg
fdivrl
adc
test
insb
test
notl
xchg
out
testb
rcr
adc
insl
pop
add
mov
sarl
and
cli
inc
mov
ja
out
lahf
mov
adc
jmp
cmpsb
out
andl
rorb
rorb
xchg
jo
scas
xchg
or
scas
add
push
lahf
imul
lcall
xlat
sbb
and
sbb
hlt
shl
push
add
fs
fwait
sar
sub
inc
das
imul
mov
pop
and
jnp
push
int
and
add
popf
jg
mov
mov
push
imul
fldenv
lds
xor
pop
lahf
push
jmp
and
jo
xchg
mov
aad
lret
dec
or
jbe
push
repz
outsl
dec
cmpb
lcall
sub
daa
mov
cmp
pop
xchg
dec
iret
mov
cmp
or
aas
pop
popa
xchg
in
pop
jb
push
das
cmp
into
inc
xlat
xorb
sbb
lds
pop
fdivrs
outsb
lret
outsl
dec
stos
cld
shl
jecxz
fldt
xchg
lods
jae
leave
mov
push
fstp
xor
mov
jae
insl
insb
jns
mov
movsl
cmpsl
mov
repnz
dec
mov
add
sbb
mov
popa
imul
mov
inc
inc
in
outsl
loopne
fbstp
stos
inc
loopne
testl
lret
dec
in
lds
pop
pop
inc
inc
jmp
lret
add
sbb
add
jns
jno
mov
mov
ret
ss
jp
dec
mov
add
sbb
cmp
add
test
add
cmpl
jne
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
xor
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
and
movl
sub
movl
and
movl
orl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
pushl
call
jmp
movl
mov
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
or
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
jmp
decl
mov
movl
jmp
ret
sarl
shrl
js
in
js
push
push
pop
lcall
inc
cs
push
push
and
pop
ficoml
repz
adc
inc
adc
inc
jge
int
lahf
ret
fsubl
dec
lcall
push
dec
outsb
xor
inc
loopne
push
inc
cwtl
cmp
faddl
jp
ficoms
adc
add
outsl
pop
jae
dec
cmpsb
adcb
ret
xchg
bound
sbb
int3
adc
xchg
idiv
adc
add
sbbl
push
in
cmp
aam
sbb
pop
or
popa
scas
fwait
mov
aam
lahf
cmp
ss
sti
fs
icebp
orb
das
or
add
xlat
mov
or
push
hlt
stos
lahf
ret
xchg
fnstenv
sbb
fdivs
xchg
xor
aad
cmp
mov
rcrl
call
js
mov
jno
push
push
jmp
push
nop
push
push
jge
lret
stos
cbtw
fsub
mov
repz
repz
sub
xchg
push
mov
push
cmp
shll
sbb
pusha
xchg
mov
pop
and
in
inc
fs
int3
mov
popa
sub
rcrb
ret
xor
push
mov
xchg
pop
sbb
jbe
jnp
add
test
xor
and
sarl
sti
jl
outsb
pop
jno
lret
fdivr
jne
jmp
addl
mov
jecxz
nop
rep
xchg
mov
int
rcll
xchg
int
std
sbb
hlt
inc
in
aas
stc
push
inc
inc
repnz
mov
add
mov
mov
mov
cmp
leave
adc
push
adc
inc
repnz
cmp
pop
mov
test
xchg
pop
mov
ret
sub
cs
pop
push
or
push
nop
repnz
mov
insb
inc
out
push
bnd
add
rol
cmp
popa
cmp
aad
mov
es
xlat
jo
and
loopne
mov
sub
bound
mov
pop
xor
cli
popa
or
outsl
fucomip
xor
inc
jge
addb
test
insb
jnp
test
cmpsb
pop
insb
inc
add
jmp
repnz
leave
orb
cmp
movl
jmp
ret
ret
lret
test
data16
js
jle
js
inc
sub
cmp
add
std
adcb
pop
push
inc
out
lods
lods
pop
test
int3
sbb
mov
inc
mov
outsw
mov
leave
dec
dec
popl
std
jae
bound
inc
insb
jne
and
mov
mov
fildl
pop
inc
fmul
ret
js
popaw
movsl
in
cs
repnz
repnz
mov
sbb
rcrb
inc
pushl
stos
jbe
and
dec
cmp
pushf
arpl
mov
xchg
lods
int
sbb
fdivrl
out
ljmp
stc
btc
mov
xlat
xor
cli
das
jmp
leave
mov
jb
rcl
cmp
je
pop
mov
test
cld
outsl
push
dec
dec
cmpb
inc
mov
push
sbb
xchg
pushf
imul
xor
push
out
ret
hlt
xchg
jmp
and
adc
add
pop
sbb
jae
pop
xchg
add
imul
lcall
fcoml
inc
call
pop
lds
push
xchg
mov
sub
out
sarl
pop
fistpl
fisubrs
xor
pop
jnp
xor
out
ret
fscale
pop
into
push
mov
mov
or
mov
mov
repz
loopne
add
push
fnsave
js
outsl
shl
aas
jmp
data16
je
add
xchg
popa
xor
cli
stos
fbld
jns
push
clc
pop
mov
in
push
jmp
pusha
push
cmpsb
movsl
sbb
dec
jl
dec
jno
sub
icebp
push
adc
int3
or
outsb
mov
push
mov
lds
popf
mov
pop
mov
in
pop
push
sbb
aaa
mov
cwtl
jg
jbe
int
xchg
out
out
pop
pop
jo
sbb
sub
pop
mov
fstpt
mov
daa
and
mov
or
dec
push
fsqrt
adc
mov
ss
mov
jo
icebp
or
lret
and
adc
push
dec
cmpsl
outsl
xchg
inc
cmpsl
popl
dec
push
shll
sbbb
pusha
pop
test
mov
rol
push
cltd
xchg
inc
xor
test
movl
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
jmp
cmp
fcmovnb
cmc
into
inc
jge
jae
push
lea
js
jle
js
aas
into
lcall
sub
push
ja
popa
adc
lods
mov
or
mov
into
add
shll
inc
or
nop
loop
mov
push
cmp
shl
adc
adc
shlb
jae
outsb
sub
jp
xchg
jns
pusha
inc
out
xchg
dec
shll
and
mov
or
cltd
fsubs
and
bound
mov
outsb
js
push
ret
int3
adc
lret
repnz
xchg
popf
sub
push
sub
pop
push
dec
icebp
aas
dec
aas
mov
xor
lock
repz
lcall
add
mulb
fidivl
and
adc
push
outsb
adc
cmp
pop
imulb
xchg
mov
inc
sub
fiadds
adc
jg
sub
movsl
or
or
add
fwait
mov
ja
mov
mov
aad
mov
repz
ja
pop
dec
mov
mov
sbb
push
inc
ret
popf
aas
or
mov
push
and
outsl
add
subl
xchg
aas
ja
pop
dec
and
test
repnz
call
mov
xor
scas
sti
loope
les
push
sahf
pop
fcompl
call
shl
mov
loopne
pop
push
sub
mov
dec
inc
lret
aaa
jb
mov
scas
mov
into
cmp
xchg
sub
scas
mov
dec
mov
pusha
mov
push
xchg
jb
pop
daa
mov
sti
test
mov
sti
fcoms
mov
loop
repz
xchg
mov
fmull
sub
flds
add
adc
adc
jge
or
loop
ret
andl
mov
cwtl
xchg
std
mov
mov
scas
imul
xchg
nop
sub
mov
into
jno
mov
outsl
pusha
out
or
push
gs
mov
or
xchg
mov
mov
mov
imul
jg
imul
cmpsb
out
in
inc
add
inc
xchg
xlat
adc
gs
mov
cli
mov
xor
add
cmp
jb
mov
mov
xor
xor
add
add
imul
mov
jmp
mov
leave
dec
mov
std
push
add
xor
js
in
js
orb
and
ja
popf
in
call
mov
popa
sarb
cli
jl
mov
pusha
and
sarl
test
xor
ret
inc
test
mov
fildl
jmp
repz
imul
insl
xor
pop
pop
aad
mov
mov
xchg
push
mov
nop
push
push
aad
xchg
test
mov
dec
sbbl
in
inc
lahf
xor
cs
cmp
imul
cmp
xchg
push
mov
pop
into
xchg
cs
aam
ja
inc
adc
adc
push
in
xor
or
add
adc
mov
and
stos
pop
adc
sahf
orb
mov
jge
adc
test
mov
mov
test
dec
adc
addr16
mov
or
and
pushf
mov
sbb
es
test
jne
dec
repz
inc
daa
xchg
sub
xchg
lahf
push
cs
and
out
inc
or
inc
daa
daa
pop
in
imul
sub
js
jl
mov
lret
and
pop
inc
push
xchg
mov
xchg
sbb
xor
or
mov
addl
xlat
xchg
shrb
test
adc
std
sub
mov
das
add
movl
movsb
pop
pushf
jo
mov
ret
fs
mov
and
mov
xor
ret
dec
xchg
add
sub
dec
sub
scas
mov
push
adc
nop
lret
lcall
int
jbe
sbb
push
xchg
cmp
shl
enter
sbb
mov
mov
loopne
jb
mov
ja
add
rol
inc
fwait
ja
sahf
push
xor
lock
inc
cmp
std
out
out
popa
pop
inc
cmp
ficoml
pop
popf
bound
pop
xchg
testl
xchg
and
sub
adc
mov
cmp
enter
mov
imul
jo
int
xchg
cld
jne
lock
scas
adc
ret
in
lahf
iret
jmp
pop
lock
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
jmp
sarl
int
ret
xchg
daa
pop
mov
js
in
js
insb
test
or
push
pop
aaa
sub
cli
add
imul
push
stos
es
inc
inc
sahf
cli
cld
das
lods
roll
lods
out
clc
mov
xor
xchg
pop
out
add
and
push
xor
js
aas
xor
das
mov
mov
andb
lods
mov
pop
hlt
mov
sbb
insl
pop
mov
inc
pop
and
and
lods
std
cmp
adc
movsb
xchg
sbb
das
lret
sahf
sub
std
ret
hlt
push
ret
rcll
dec
scas
sbb
inc
sbb
movsb
sbb
inc
cmc
push
mov
outsl
fs
push
enter
je
mov
mov
mov
fdivrs
insb
sbb
push
insb
out
push
enter
shlb
pop
and
jbe
sbb
jae
push
shll
pop
dec
cmp
cmp
out
mov
sbb
daa
inc
out
inc
jnp
leave
sub
xchg
inc
in
push
pop
call
adc
and
mov
dec
cmp
pushf
add
xchg
pop
lds
cmpl
sub
outsl
push
inc
lahf
das
nop
jge,pt
je
dec
add
movsb
imul
jae
and
fcmovu
arpl
mov
lret
imul
pop
add
cmp
or
dec
int
dec
xor
xorb
mov
pop
add
imul
clc
sub
cmp
rorb
dec
adc
lret
packuswb
out
imul
bound
mov
ja
dec
adc
incb
daa
pusha
xchg
lahf
push
pop
adc
inc
test
mov
mov
jnp
adc
cmovle
das
imul
inc
rcrl
pop
jl
jae
addl
adc
mov
stos
adc
loop
popf
jecxz
std
jns
repz
ds
loopne
xor
adc
cltd
test
lret
mov
rolb
mov
xlat
bound
cmp
push
cmp
xchg
cmp
insb
mov
lock
repnz
jae
fwait
ljmp
addl
add
int
into
xchg
jle
fs
cmp
js
jle
js
lret
sub
sub
hlt
pop
and
scas
insb
mov
out
pop
repz
xor
mov
push
sub
pop
je
mov
cld
xchg
push
in
roll
jbe
jae
lds
fcomps
sub
shrl
sbb
adc
and
inc
orb
addr16
mov
push
and
xchg
push
dec
lahf
cli
sbb
xrstor
inc
lret
pop
or
mov
aas
inc
scas
aas
loopne
mov
dec
mov
rep
in
mov
adc
xchg
jnp
mov
fildll
lods
adc
xchg
arpl
pushfw
pop
jne
jle
fwait
cmc
push
mov
jnp
xchg
insl
int3
mov
movsl
xchg
sub
je
sti
sbb
mov
repz
aas
sub
dec
rcrb
pop
in
mov
ret
jnp
sbb
add
pop
mov
inc
test
add
cld
sub
and
or
xchg
mov
cmp
or
leave
sub
adc
mov
add
inc
jmp
add
outsb
mov
lods
fcomps
inc
xchg
sbb
adc
mov
mulb
subl
mov
outsb
push
int
rcll
clc
nop
lea
shrl
mov
mov
fxtract
imul
cmc
in
mov
inc
mov
fisttpll
cmp
ffreep
test
and
push
andl
push
mov
rclb
cmc
in
jg
test
xchg
fdivr
mov
cmp
filds
sub
fsub
push
lods
daa
mov
lods
cmp
jno
jne
mov
in
ret
mov
ret
cmp
pusha
lcall
pushf
stc
in
dec
decl
ljmp
sbb
and
ljmp
fisttpll
pop
clc
mov
cmp
pop
push
xchg
js
mov
out
push
pop
mov
cltd
cli
mov
cmp
jae
inc
lds
lcall
aam
insb
sub
repz
pop
movsl
or
jmp
xor
inc
mov
dec
addl
enter
stos
jnp
leave
and
imul
mov
mov
jmp
cmp
ret
fcmovnb
aad
pop
adc
mov
pop
sbb
in
js
inc
ss
mov
inc
mov
xchg
enter
or
push
jge
sbb
xor
ljmp
cld
shr
mov
testb
lea
pop
lea
lods
cmpsb
ret
xlat
adc
outsb
sbb
dec
sbb
in
test
mov
lret
mov
mov
mov
inc
pop
inc
mov
xor
idiv
ret
sub
jb
pop
loope
or
or
testl
cmp
mov
mov
subb
lahf
jne
pop
arpl
adc
dec
loopne
loope
cmpl
jb
out
xlat
xchg
and
les
in
test
and
sub
addr16
xchg
pop
xorl
push
hlt
mov
adc
cmp
xchg
mov
jle
mov
loopne
mov
lret
sahf
mov
mov
xchg
sti
pop
fists
mov
add
sti
mov
mov
scas
rorl
mov
or
fcoml
icebp
push
sbb
fisubrl
jmp
inc
adc
push
jns
mov
or
sbb
cwtl
xchg
add
pushf
dec
out
cltd
dec
push
cmpb
addr16
cmc
out
popa
inc
lret
mov
popf
sub
outsb
stc
push
sbbb
fsts
mov
movsl
mov
in
subb
lahf
and
adc
cmc
int
inc
or
fsubl
mov
test
push
aaa
jmp
or
mov
pop
pop
imul
sub
inc
icebp
xchg
aam
ret
jbe
fimull
push
jg
adc
in
rorb
fcompl
pushf
test
xchg
mov
push
pushf
xor
xchg
cld
mov
insb
add
dec
dec
movsb
mul
fsubl
in
test
cmp
push
xchg
and
imul
add
cwtl
stos
dec
push
aad
inc
xor
and
sbb
jp
xchg
aaa
push
loop
cmp
ja
iret
push
test
mov
mov
xchg
xlat
jecxz
ret
inc
fiadds
fs
sbb
push
js
pusha
cmp
xchg
mov
sub
insb
in
movsb
popa
dec
addr16
sbb
sahf
push
mov
testl
fucompp
addl
add
ror
fcmovnbe
fld
ud0
pop
adc
push
js
in
js
or
imul
push
inc
outsl
dec
pop
lds
sub
pusha
or
lds
pop
xchg
mov
lods
pop
and
lods
lock
test
dec
inc
cmp
hlt
mov
add
fstp
lods
adc
aaa
dec
push
mov
mov
or
adc
aaa
fptan
xchg
xlat
pop
sbb
cmpsb
jb
mov
push
add
repnz
imul
mov
mov
inc
push
and
sbb
xchg
jbe
and
fs
push
sbb
jg
adc
mov
cmp
cmc
nop
cmp
push
clc
and
ljmp
mov
mov
xchg
popa
pop
stc
dec
icebp
xor
data16
cmp
add
xchg
jmp
jmp
mov
roll
in
lods
xchg
cwtl
mov
xor
mov
leave
xchg
das
xor
aam
push
add
fcmovnb
enter
xchg
shl
sbb
jae
loope
and
loopne
movsb
push
lds
adc
incl
mov
ja
leave
cmpb
dec
dec
mov
imull
sbb
adc
je
stc
mov
xor
dec
ret
jno
inc
mov
and
pop
movsb
dec
sub
xchg
inc
mov
sbb
ja
ret
ljmp
mov
inc
sarl
or
push
cli
out
scas
xchg
scas
mov
int
cmp
and
cli
test
insb
ficoms
cmp
das
lahf
scas
movsb
adc
in
in
ja
push
mov
sbb
shll
shl
jbe
mov
fnstsw
pop
repz
pop
jae
or
dec
divb
xchg
arpl
out
dec
jle
or
cmpsl
call
rcrl
mov
and
mov
mov
es
xor
adc
mov
dec
and
sbb
popf
icebp
xor
call
mov
pusha
loopne
lea
imul
fdivrl
jne
pop
lcall
repz
sbbl
in
mov
or
add
mov
jmp
mov
mov
xor
xor
jmp
aas
lret
iret
aad
jo
lods
notl
sub
js
in
js
and
mov
or
sbb
test
xor
cli
mov
lahf
adc
into
sarl
int
mov
mov
ror
sub
fwait
fwait
mov
sbb
cld
incb
test
fldenv
aas
imul
fcompl
cltd
sbb
adc
jmp
jb
aad
pop
stos
push
outsl
push
mov
mov
stos
in
loopne
dec
mov
pop
inc
adc
sub
movl
inc
cmpsb
fisubrl
pop
or
dec
adc
mov
pop
xorl
les
or
mov
out
seto
aam
repnz
sbb
ss
cmc
stos
or
mov
and
mov
adc
mov
xorl
cmp
pop
inc
sub
pop
jb
push
icebp
lret
inc
mov
add
sub
mov
test
inc
xor
xchg
subb
dec
dec
xchg
inc
add
add
rol
pop
insb
adc
add
inc
sub
test
adc
les
add
int
jbe
dec
mov
test
jecxz
in
cmp
mov
scas
jne
lods
cmp
jb
dec
add
mov
popa
jns
xor
ja
push
sbb
adc
js
popa
popa
pop
daa
mov
pop
xchg
cmp
cltd
cli
sub
ds
add
push
int3
pop
repz
test
push
fcmovbe
or
aam
push
pop
mov
icebp
xor
lods
xor
mov
lods
popa
mov
int3
outsl
pop
movsb
pop
in
sub
add
adcl
insl
lods
and
aam
jp
xor
mov
xchg
xchg
push
cld
div
inc
push
dec
gs
sub
lcall
push
push
ljmp
jp
aad
push
popa
stos
loope
push
loop
push
mov
jb
and
stc
sbb
sbb
fistps
cmpsl
daa
dec
push
leave
aaa
loopne
adc
in
cmp
sub
das
push
fnstcw
add
icebp
or
ret
sbb
xchg
lcall
sahf
push
push
add
in
pop
dec
xchg
divl
shll
or
mov
sub
stos
stos
xchg
fidivl
mov
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
lds
ds
fxch
adc
add
repz
aad
clc
push
js
in
js
int3
jne
decl
push
lahf
inc
daa
xor
ret
loopne
ljmp
mov
lgs
lods
mov
inc
sbb
adc
into
mov
loopne
out
inc
arpl
lea
rol
dec
pop
lret
xchg
xor
push
xor
cmpsl
lock
xchg
jo
adc
int3
sti
pop
je
pop
dec
mov
xchg
scas
jg
test
or
lds
and
mov
mov
and
daa
inc
aas
outsb
mov
push
mov
and
add
scas
inc
test
xchg
pop
dec
cmp
cld
jp
in
or
push
jbe
mov
addr16
scas
iret
pop
mulb
dec
jecxz
rcl
adc
popa
xchg
xor
adc
inc
pop
lods
mov
ljmp
lret
sub
jge
outsl
sti
outsl
pop
imul
adc
mov
roll
in
fisttpl
and
int
aaa
cmp
in
push
jo
push
popf
addb
push
movsb
or
mov
dec
inc
aam
rcl
cld
mov
int3
int3
or
xor
in
xchg
sub
faddl
ret
cmp
or
stos
sub
sbb
mov
pop
ret
gs
sbbb
popa
cmpsb
fidivrs
gs
sub
cmp
fistps
xchg
mov
add
dec
sub
aaa
push
fs
aaa
sarl
les
sub
dec
pop
mov
push
and
aam
in
push
lret
adc
sar
push
xor
jmp
xchg
data16
movsl
enter
inc
mov
mov
pop
inc
pop
mov
and
imul
mov
scas
inc
je
dec
pop
jecxz
daa
addr16
sub
adc
jne
sub
ret
outsl
sbb
mov
push
xor
es
lock
cs
mov
mov
pop
mov
mov
and
cwtl
mov
xor
fs
test
mov
sti
pop
inc
orl
jne
inc
rcrl
or
mov
mov
or
jl
jl
out
add
jmp
int3
into
ror
rcl
into
jbe
inc
data16
push
lret
js
in
js
push
mov
cmp
ret
sbb
loopne
jae
subl
in
pop
dec
add
arpl
arpl
imul
loopne
push
dec
aam
icebp
out
dec
mov
dec
xor
fdivrs
inc
dec
in
jo
mov
pop
cmpsl
push
jl
pop
mov
jg
outsb
pop
nopl
lret
inc
jbe
add
divl
xchg
cmpsb
mov
push
inc
xchg
push
aad
rolb
xchg
jo
jp
clc
in
lret
shlb
or
xchg
repnz
xor
add
insl
pop
pop
mov
mov
es
into
cmp
fs
xchg
or
or
in
push
std
imull
mov
mov
mov
lret
mov
mov
out
cmovb
in
subl
and
xchg
test
aam
pop
mov
dec
push
sub
jg
jnp
decl
les
xchg
test
ja
lds
loope
nop
lock
inc
xlat
or
mov
cld
leave
xchg
cmp
std
sbb
xchg
dec
sbb
fisubrl
adc
inc
leave
jae
aaa
scas
neg
test
xchg
loopne
push
das
or
and
and
in
xchg
mov
in
sub
test
add
mov
cli
push
scas
into
lret
scas
inc
mov
and
test
outsb
pushf
or
sub
jno
jp
sub
xchg
adc
decb
ror
pop
push
repz
clc
lock
scas
mov
jmp
fcmovne
lret
or
dec
inc
cmc
sub
jns
out
push
add
iret
stos
loopne
cmpsl
leave
add
mov
icebp
pop
out
push
ror
inc
push
cmpsl
mov
adc
in
sahf
call
orb
popa
push
lods
lods
or
bound
repnz
ljmp
dec
stos
clc
jne
xchg
test
imul
mov
sbb
mov
push
lret
in
mov
mov
daa
pop
xor
out
hlt
and
sbb
mov
xor
jns
imul
cltd
dec
andb
adc
imul
jmp
aas
xlat
xlat
lret
xlat
lret
rcr
and
or
jp
and
pop
js
in
js
inc
aaa
jbe
rcrb
pop
inc
mov
or
leave
lods
or
dec
fsubp
scas
icebp
in
cld
out
and
xor
out
xchg
jge
xchg
push
mov
cmpl
imul
fnstsw
gs
fwait
rclb
int3
sbb
sti
cmp
imull
hlt
adc
sbb
xchg
scas
push
pop
loope,pn
push
pushf
test
adc
mov
jae
pop
aas
inc
js
icebp
gs
sub
push
inc
inc
cwtl
repz
mov
mov
cmpsb
cmc
cli
pop
inc
negb
jne
mov
inc
ja
inc
jb
xchg
dec
inc
add
inc
and
cmp
outsb
leave
pop
xchg
xor
pushf
mov
lcall
ljmp
addr16
jg
data16
int3
mov
stos
or
mov
adc
inc
imull
imul
adc
enter
cmp
push
inc
jecxz
mov
ret
push
push
pop
mov
or
push
or
jns
sbb
fcmove
adc
add
xchg
mov
lret
xchg
movhps
dec
lea
mov
in
sbb
sbb
mov
sarb
cmc
xchg
push
sbb
or
and
cmpsb
lock
test
out
mov
lret
add
xchg
in
aad
adc
and
shlb
sbbl
outsb
sbb
popa
addb
adc
ret
fstl
cli
lds
dec
xor
fs
push
or
clc
sbb
mov
mov
nop
mov
mov
sbb
lahf
stos
push
mov
loop
lcall
push
jno
movsb
ret
icebp
sbb
push
mov
mov
sahf
jmp
ficoml
scas
shrb
and
sbb
sti
leave
cli
mov
ret
jo
push
xchg
mov
stos
or
testb
es
lcall
arpl
fisttps
and
scas
inc
stc
out
xchg
jg
cmpsb
push
xchg
jns
cmp
cs
or
cmp
cmp
test
cli
or
ja
mov
ror
xor
lds
mov
and
mov
sub
cmp
ja
jmp
rol
xor
fisubrl
jl
pop
js
in
js
scas
cltd
push
xchg
add
vmwrite
push
in
and
jbe
sub
loop
add
enter
mov
inc
add
test
bnd
ljmp
cs
imul
push
insl
sub
xchg
imul
pop
add
jae
cmpsb
and
jecxz
jecxz
push
in
iret
push
lods
test
stc
lahf
les
ss
or
cli
inc
mov
enter
xor
aas
lods
or
lahf
iret
in
mov
jle
xchg
sbb
hlt
mov
xor
adc
pusha
ss
iret
test
stc
loop
clc
test
xor
and
pop
add
mov
or
stc
in
cmp
cmpsl
les
fidivs
jp
pusha
or
push
pop
cmc
stos
es
fdiv
int3
push
into
or
aam
outsl
hlt
out
int3
mov
imul
sbb
add
sub
adc
mov
mov
add
out
mov
push
xlat
cmp
mov
pop
mov
mov
xchg
addr16
fbstp
lret
aas
pop
inc
aaa
das
add
mov
scas
and
or
cld
cmp
push
dec
adc
cmpsb
and
xchg
mov
loop
movsb
adc
sbb
cwtl
movsl
xor
push
fcomp
pushf
outsl
and
fsub
mov
mov
mov
in
sub
mov
sbb
iret
orb
dec
cmp
inc
sub
jae
inc
mov
jle
not
hlt
adc
xrelease
fbstp
pop
dec
pop
mov
or
int3
and
xlat
fstps
aam
jmp
test
jo
jp
jge
fbld
jo
adc
icebp
inc
adc
dec
aam
push
push
cmp
and
negb
add
test
mov
pop
inc
sub
inc
movsl
xorl
sbb
pop
mov
cli
inc
daa
nop
mov
cmp
in
sbb
push
das
pop
push
clc
lods
rolb
scas
insl
inc
xor
ret
push
jge
adc
push
xor
sub
add
iret
sti
loopne
mov
mov
jno
push
sub
push
jp
fldt
arpl
test
out
sbb
push
xchg
je
into
icebp
pop
lods
fldt
orl
add
mov
mov
xor
xor
add
add
imul
mov
jmp
iret
leave
into
xlat
fcmovu
aad
cli
je
sti
push
stos
mov
and
js
in
js
leave
pushf
jo,pn
and
xchg
fldenv
ret
mov
pop
cvtps2pd
xor
xchg
aas
es
xchg
cli
es
aas
leave
ficomps
push
shr
xchg
loop
test
or
mov
mov
cmp
shrb
jecxz
call
adc
jle
sub
xchg
rolb
sub
inc
xor
cld
xchg
cld
sbb
roll
inc
xchg
sub
push
pop
xchg
lret
add
mov
mov
pop
and
mov
insl
mov
hlt
jno
inc
jl
pop
xchg
ljmp
add
iret
jmp
mov
adc
imul
inc
scas
dec
mov
jmp
adc
aas
repz
stos
jnp
cmp
dec
lret
nop
mov
or
xor
sbb
inc
into
cmpsl
cmp
dec
and
loopne
in
xor
and
gs
or
adc
pusha
mov
mov
int3
lods
out
scas
dec
icebp
jl
js
inc
loope
and
fbld
cmp
push
popf
push
insl
nop
je
stc
mov
movsb
popa
rcll
ja
inc
xchg
call
sub
pop
cli
nop
test
pop
add
shrl
lcall
iret
dec
into
filds
cmpsb
and
ljmp
mov
jle
cmpsl
pop
sarl
fcmovb
lds
adc
jno
test
dec
mov
sahf
enter
or
pushf
outsb
or
mov
lcall
xlat
cmp
lods
xor
in
lds
out
or
xchg
inc
cmp
mov
adc
in
outsl
test
ret
shlb
loope
ss
decb
pop
out
push
xchg
mov
cmp
adc
rdmsr
in
jge
pop
rorl
enter
xchg
out
lret
xor
sysexit
lcall
lcall
fidivrl
push
adc
add
dec
mov
xchg
inc
push
stos
in
cmp
mov
dec
dec
mov
or
in
xor
loop
mov
and
push
fiadds
cwtl
cs
add
ret
repnz
out
jl
rorl
fimull
xchg
add
add
add
les
xor
add
add
imul
jmp
into
cmp
fxch
sub
in
pop
dec
xchg
pusha
js
in
js
ja
pop
cmc
ret
push
test
pusha
cmc
in
mov
sbb
sbb
psrlq
adc
stc
lret
mov
add
sbb
push
movsl
jmp
add
jp
ja
pop
ljmp
fimull
and
lds
pop
mov
adc
scas
pusha
xor
sub
mov
push
xor
stos
pushf
and
add
in
scas
sbb
into
loop
add
jp
lea
jge
leave
das
add
cli
cld
push
mov
popa
cmpsb
lcall
pop
sbb
mov
sti
data16
rcrl
or
test
pop
sbb
pop
rorl
push
mov
into
gs
fildl
out
push
add
in
sbb
mov
mov
ljmp
xchg
add
pop
push
je
jbe
xor
in
insb
mov
sbb
loopne
fmull
leave
push
adc
mov
push
add
jle
jmp
addr16
repz
push
xorl
ror
out
sub
pop
insb
sub
movsb
ret
xlat
repnz
mov
pop
jmp
xor
and
jns
out
inc
mov
jbe
add
mov
mov
outsl
aad
loope
sahf
ds
dec
je
pop
addb
sub
jmp
inc
cwtl
push
pushf
adc
xchg
add
jp
jge
lods
xchg
cltd
sbb
cs
or
jne
cld
imul
lcall
mov
and
push
cmp
sbb
iret
sub
dec
jmp
push
icebp
xor
pop
push
int3
push
add
pusha
cld
dec
dec
adc
xor
int
sub
test
mov
bound
mov
cmpsb
cld
xor
xor
outsb
inc
cmp
es
push
sbb
inc
sub
pop
cmp
add
push
push
pop
sbb
dec
subb
xchg
pop
mov
ljmp
mov
jae
gs
fs
cmp
cmp
mov
sbb
lea
loope
into
cmp
sbb
xchg
pop
pop
cmc
fimull
addr16
repz
enter
shrb
inc
fnstcw
jmp
clc
mov
sub
cmp
mov
jbe
jmp
rol
ds
into
rcl
adc
mulb
jle
js
in
js
and
psrad
add
jg
push
cmp
push
add
sub
fisubs
add
sbb
and
mov
test
imul
daa
cmc
mov
mov
enter
xchg
push
inc
or
test
push
insl
mov
cmp
and
int3
outsl
and
loop
notb
lock
mov
fbld
gs
or
inc
fnstenv
into
nop
mov
xlat
mov
add
mov
xchg
out
stos
jno
adcl
and
inc
insb
lea
dec
cmp
pop
lods
dec
mov
out
enter
dec
loope
mov
sbb
push
inc
sarl
and
fsts
mov
sar
mov
es
sub
arpl
ljmp
out
out
test
in
or
in
and
push
popf
sti
cmp
push
push
mov
out
insl
sahf
rorb
cmpsb
popf
lahf
sti
loop
cmp
sub
ret
shlb
push
mov
fisttps
dec
xchg
loop
stos
jnp
or
sub
mov
push
xchg
dec
hlt
loope
imul
jmp
or
test
sub
cmpsl
pushf
test
add
movsb
stos
jecxz
rcrl
xor
mov
inc
js
out
fnstcw
cmpsl
dec
adc
pop
mov
pop
ret
sub
inc
mov
ds
cmp
aad
push
bound
or
xchg
cmp
call
add
adc
xorb
xor
lahf
push
sub
pop
jb
ret
sub
jl
das
adc
pop
mov
dec
iret
into
lret
in
fs
push
idivl
or
push
loop
cs
cmp
addr16
lcall
aas
jne
pop
adc
enter
icebp
lahf
pushf
jecxz
sbb
xor
movsb
cmp
mov
js
js
fbld
xchg
jno
or
jge
mov
ret
shlb
popf
test
and
sub
popa
hlt
xor
loope
push
les
xor
jmp
rol
enter
fcmovnu
xchg
add
inc
or
jmp
js
in
js
xor
lock
push
daa
push
jnp
or
test
aas
stos
adc
popa
push
outsb
dec
mov
sbbb
cmp
and
xor
dec
push
xor
pop
js
add
sbb
dec
cmp
push
mov
rorl
jb
mov
sub
cwtl
out
cli
cmp
lahf
rolb
jno
cmp
in
pop
test
arpl
outsb
xor
popa
outsb
popf
fdivl
inc
rcrb
imul
insb
jbe
es
adc
insb
sarb
xchg
sbb
jmp
fnstenv
out
mov
aaa
pushl
lcall
mov
cs
addr16
xor
jl
ret
push
in
inc
cwtl
add
sahf
cmpsb
andl
std
mov
and
icebp
mov
popf
sbb
mov
add
mov
adc
push
cld
dec
inc
cmpsl
pop
push
int
movsl
clc
cmp
fildl
pop
lods
rcl
sub
mov
inc
jnp
xor
or
test
mov
xchg
aas
pop
adc
dec
add
add
popa
rclb
fcmovu
movsb
inc
in
int3
or
cmp
bound
imul
clc
mov
dec
insl
lds
lcall
pop
inc
and
iret
ljmp
jno
jle
or
mov
add
out
cmp
pop
sub
cld
ja
jno
int3
add
xchg
push
xor
inc
pop
mov
cmpsl
cmp
mov
cmpsl
ljmp
fsubs
jmp
fwait
pop
xor
push
int
jecxz
out
pop
push
xlat
push
jb
popa
fdivrs
pushf
pop
or
cltd
loope
popa
or
sub
inc
lret
mov
test
cs
repnz
fcmovnu
cmpsl
shrb
adc
dec
nop
xor
lock
dec
inc
or
push
pop
inc
or
movsb
dec
fstpt
mov
push
sti
mov
jne
ja
pop
push
das
popf
mov
xchg
mov
xchg
cmp
lock
sbb
mov
push
ds
movsb
ljmp
inc
out
lahf
sbb
xchg
cmc
mov
push
inc
mov
out
xchg
mov
jae
pop
mov
add
imul
mov
mov
mov
mov
add
movl
jmp
fcmovnu
shr
movsl
xchg
add
dec
ljmp
js
out
xchg
mov
dec
xchg
jg
jo
imul
inc
mov
xor
jp
dec
ljmp
cmp
jle
xchg
mov
ud2
xor
lcall
les
fsts
sbb
fxsave
mov
pop
mov
pop
jg
mov
dec
xor
jp
pushl
out
sbb
scas
loope
ds
push
xor
dec
hlt
or
dec
or
std
dec
xchg
cmp
call
add
sbb
pop
push
lret
mov
repnz
inc
push
dec
mov
nop
lds
pop
scas
mov
and
xchg
xacquire
cmpsl
pop
js
push
cmp
mov
adc
ret
jns
cmp
or
adc
push
bndstx
push
lcall
add
hlt
pop
jne
pop
pop
insb
lock
bound
dec
inc
cmpsl
inc
add
sar
inc
dec
adc
pop
pushf
es
sbb
in
xchg
ret
adc
dec
neg
arpl
push
fsub
add
test
cmc
and
add
sbb
xchg
pop
in
movsl
insl
cwtl
cmp
popa
xor
int
mov
pop
std
inc
clc
jmp
es
outsb
xor
ret
les
outsb
add
cmp
dec
sub
enter
sub
loop
push
add
bnd
push
movsb
inc
sbb
jmp
aad
mov
outsl
mov
clc
mov
mov
movsl
mov
pop
shr
xor
loope
and
insl
int
xchg
pusha
sub
add
cmp
popf
push
lret
xchg
xor
inc
xor
mov
ss
sbb
aaa
fimull
stos
pop
icebp
nop
xchg
cmp
jmp
pop
fdiv
push
dec
imul
in
or
test
mov
les
popf
out
stc
stc
pop
xor
aaa
jne
dec
int3
push
fidivrs
cmp
call
js
adc
hlt
pop
cmpsl
xchg
push
std
fwait
mov
inc
movsl
stos
clc
mov
push
loop
sbb
pop
sub
scas
pop
cmc
add
repnz
iret
insb
pop
ret
cltd
insl
sub
repnz
and
dec
loop
mov
jmp
iret
ret
rol
fcmovnu
mov
int3
int3
and
in
js
add
lods
jbe
jo
aad
mov
mov
sbb
mov
gs
mov
in
push
clc
mov
inc
mov
shr
sbb
dec
xor
ficomps
hlt
shll
mov
xchg
mov
adc
in
add
std
mov
aas
test
mov
mov
lods
add
jge
mov
sti
add
push
mov
pop
testb
iret
aad
repnz
jb
movsl
fists
fstl
xor
popf
imul
xor
dec
popa
sub
dec
cmp
gs
xchg
in
scas
ss
insl
cmpsl
mov
inc
mov
push
xchg
push
pop
pop
rcll
and
cmp
or
sti
in
mov
mov
daa
xor
repnz
inc
mov
push
mov
add
inc
faddl
test
popf
and
dec
mov
push
and
jl
add
fisubrs
adc
adc
or
push
mov
jae
and
jle
push
pushf
jne
xchg
jmp
jmp
rcrl
mov
push
iret
std
cmc
add
mov
test
in
push
fsubs
cli
sbb
xchg
push
ret
mov
shrl
jo
pusha
scas
dec
je
imul
fwait
xor
out
iret
sbb
or
addr16
push
adcb
pop
sbb
dec
sbb
fs
testb
lret
xchg
cmpsl
and
add
add
push
pop
xchg
sub
or
ds
or
cltd
sub
push
xchg
or
pushf
jle
jb
jp
addr16
push
jne
mov
pop
aas
cmc
into
pop
xor
adc
mov
or
jne
jl
lds
rolb
std
lds
mov
jns
dec
mov
push
adc
imul
xor
sub
cld
rcrb
sti
xor
sub
jecxz
mov
shlb
stc
cmp
addr16
sbb
pop
repz
in
xorb
mov
adc
cmp
js
mov
pop
add
fsubl
jo
jle
and
ljmp
clc
movl
jmp
int
ror
fcmove
leave
sub
cwtl
push
cwtl
rsm
insb
js
in
js
and
and
clc
into
mov
adc
push
add
sbb
test
sub
mov
mov
icebp
sub
xlat
popf
rcrb
xchg
insl
push
test
lahf
inc
aas
enter
cmp
cltd
sar
inc
push
sbb
xchg
out
lods
push
mov
fcmovbe
rcrb
add
mov
xchg
inc
cmpsb
dec
orb
shrl
in
jmp
xor
scas
sbb
sbb
xor
fcmovnbe
jae
xchg
xor
in
pop
ja
add
xchg
fistps
int
jae
cmpb
push
comiss
push
jae
jne
sub
std
int
sti
hlt
cmp
jg
pop
cwtl
into
pop
mov
les
movsb
inc
sub
imul
ss
pop
xchg
xor
xchg
jg
cmpsb
or
out
sahf
std
and
pop
sti
pop
enter
fnsave
ror
add
xchg
push
rcrb
and
call
sub
xchg
xchg
pop
in
dec
jae
std
andl
pop
mov
nop
hlt
mov
sub
jmp
imulb
jle
test
inc
inc
mov
add
cmp
pop
clc
arpl
ja
shrl
mov
fcoml
jns
jne
pop
loop
jl
sbb
cmpsl
sub
enter
stos
iret
mov
xchg
into
shrb
arpl
rcl
add
popf
inc
std
in
mov
loop
sub
mov
push
es
jne
negb
in
push
outsl
pusha
iret
pop
shrb
ja
jbe
jl
mov
sbb
fwait
repz
das
add
call
push
repnz
fcompl
out
xchg
jecxz
repz
subps
es
insb
movsl
lret
mov
push
gs
scas
mov
or
push
pushf
jb
ljmp
push
cmp
mov
inc
and
add
scas
mov
sbb
enter
call
insb
xchg
in
push
cli
add
in
mov
nop
xchg
stos
inc
and
mov
jle
hlt
push
sbb
sub
mov
xor
add
jmp
mov
xor
add
jmp
ret
xlat
data16
mov
test
in
js
je
ss
adc
add
aaa
push
xchg
jne
inc
push
jmp
test
pop
call
and
adc
mov
aaa
mov
int3
pop
in
adc
push
cmp
mov
pop
pushf
add
mov
inc
fldt
mov
sub
in
dec
or
or
add
les
cmp
scas
sbb
xor
jae
cli
cltd
aam
add
and
pop
fsubl
out
fs
iret
ds
push
aam
push
sub
test
movsb
cmp
test
lret
jno
adc
mov
outsl
and
fcomp
and
ret
or
test
inc
imul
pop
clc
cmc
jne
dec
sahf
push
stos
adc
sub
jae
fcomip
insl
fists
cmp
sarb
in
mov
gs
add
cmp
adc
add
mov
xchg
xchg
and
jp
leave
shlb
fisubrl
mov
cld
mov
das
adc
scas
pop
sbb
sbb
cmp
cmp
mov
mov
das
push
mov
push
ljmp
in
sub
fdivrl
out
dec
loopne
out
aas
push
xorw
out
lahf
arpl
adcl
lret
nop
cli
xchg
ljmp
mov
popa
stos
lret
lock
out
arpl
lock
mov
mov
push
adc
xor
mov
mov
mov
inc
xchg
fdivl
mov
hlt
and
lcall
inc
cmpb
push
mov
xchg
aam
ljmp
fucomip
insb
flds
and
jno
stos
mov
adc
into
imul
push
sbb
call
xchg
cld
int
lods
addr16
jmp
cli
out
lahf
xorl
outsb
jae
in
lret
push
xor
sahf
jne
add
mov
jo
jp
imul
loopne
cs
leave
pusha
xchg
int3
shll
frstor
dec
pop
pop
sbb
adc
mov
mov
jmp
int
xlat
enter
shll
std
xchg
jns
int
ja
js
jle
js
or
aad
jne
xchg
ss
sbb
lahf
mov
enter
mov
cmc
repnz
call
mov
sbb
bswap
pop
in
test
in
in
inc
pop
mov
mov
xchg
loope
adc
mov
jne
neg
ja
call
repnz
push
int3
fsub
in
mov
mov
jbe
cmp
leave
cmp
hlt
mov
pop
jno
add
dec
mov
jo
push
sub
dec
nop
push
aam
dec
push
sbb
jns
mov
or
loop
push
xlat
add
sub
sub
pushf
cmc
test
fld
xchg
imull
mov
sbb
add
xor
pop
cld
dec
stos
xchg
mov
mov
or
xchg
clc
mov
cmc
xchg
loop
out
bound
mov
ss
fwait
xchg
push
jno
push
popf
popf
cmp
sbb
call
inc
pop
ja
pop
jl
aam
pushf
aam
adc
cmp
cmp
sub
mov
sbb
repz
std
inc
xchg
sub
and
mov
loope
mov
int
add
push
inc
dec
sbb
cld
inc
and
xchg
imul
test
test
mov
add
loopne
cs
lret
int
sbb
out
insl
bound
mov
and
loopne
xor
xor
dec
push
add
xchg
push
aad
gs
sahf
cli
adc
popl
dec
adc
add
mov
insl
cwtl
push
mov
pop
hlt
add
mov
xchg
movsl
mov
mov
insb
test
shl
mov
adc
inc
or
insl
fimuls
mov
xchg
xor
or
pop
lret
cmp
fildl
adc
push
mov
mov
aad
lods
inc
push
arpl
pusha
mov
stos
fistpll
pop
cmp
push
xchg
dec
inc
jge
inc
iret
ja
jo
pop
xchg
loope
xchg
mov
repnz
lock
mov
or
inc
cmpsb
inc
adc
push
add
push
popa
xor
xor
jb
push
sarl
mov
cwtl
mov
adc
dec
lret
ja
out
mov
orb
xor
add
mov
mov
mov
mov
jmp
aas
cmp
cmp
sbb
sub
adc
in
js
xchg
and
das
push
xor
or
lahf
ds
dec
sub
ds
scas
scas
xchg
inc
mov
aaa
cmc
push
test
cmp
xor
cmp
lods
arpl
das
xsavec
add
mov
scas
repz
and
sbb
cld
rcrl
popa
push
add
int3
data16
xor
mov
xchg
lods
ret
pop
fnstsw
adc
and
xor
inc
aam
js
mov
lds
cmc
scas
insl
xchg
fdivrs
stos
add
and
sbb
mov
mov
lret
push
pop
imul
dec
inc
enter
iret
scas
incb
pop
aas
push
jo
mov
scas
test
or
cmp
insb
push
mov
fdivrs
rorb
rcrb
arpl
int
cli
cld
cmp
lods
ljmp
fldl
inc
gs
mov
outsb
xchg
loopnew
pop
jb
jecxz
ss
popf
popf
xor
pusha
fwait
repz
xchg
cmpxchg
loop
fcomps
lods
push
mov
xchg
sbb
and
xchg
pop
cmp
pop
mov
or
or
mov
je
add
mov
nop
in
loopne
push
inc
lock
loop
cld
cld
push
into
inc
pop
or
pop
lock
mov
sti
mov
daa
fsubl
xor
in
shll
imul
in
push
scas
mov
mov
faddl
dec
inc
adc
fs
lea
fildl
test
xor
inc
and
sub
push
rorb
cld
dec
test
and
jnp
xchg
rorl
repz
fidivl
dec
and
push
and
sub
jns
testb
arpl
adc
bound
mov
iret
dec
addr16
pop
sbb
fsubs
fld
dec
aaa
daa
add
mov
cli
cwtl
sbb
test
xchg
add
mov
in
ja
ret
daa
aas
lret
jnp
out
in
mov
adc
add
mov
enter
mov
insb
lret
jg
fdivrs
xor
inc
adc
shrb
call
add
js
mov
xor
add
mov
mov
mov
mov
xor
jmp
cmp
pop
in
inc
in
nop
hlt
jp
js
jle
js
out
mov
adc
fsts
jnp
cmp
xlat
mov
scas
mov
out
inc
outsb
sub
testl
xchg
mov
mov
jae
push
add
mov
stc
aad
or
xor
mov
inc
add
mov
es
fimuls
test
xchg
or
mov
fildll
bound
and
in
imul
push
ss
push
dec
aaa
fs
xchg
jge
int3
mov
iret
jecxz
inc
jecxz
mov
cmpsl
or
fldcw
hlt
add
in
push
push
mov
test
nop
je
xorb
mov
stos
bswap
enter
arpl
shlb
ds
ficoml
add
cmpb
xchg
cmp
jns
pop
fst
inc
push
nop
jp
xchg
xchg
mov
jne
dec
scas
fwait
cli
loopne
jl
push
outsb
into
dec
xchg
mov
dec
notl
dec
iret
adc
jnp
test
jnp
mov
or
jae
mov
fildll
jp
push
cli
sbb
in
arpl
jne
aas
es
out
stos
popa
inc
fstl
xor
fidivs
stc
mov
inc
fcmovbe
push
leave
cmc
xchg
push
xchg
les
or
outsb
inc
inc
cli
out
sbb
mov
xchg
out
addr16
pop
sbb
dec
add
incl
cmpsl
ficoms
xor
jle
inc
sbb
lock
push
xor
cmp
mov
cmp
push
mov
cli
add
dec
pop
jecxz
in
cmp
aad
icebp
js
imul
mov
cmp
xchg
mov
aam
test
mov
test
testl
pop
std
inc
or
call
and
add
popf
xchg
xchg
push
repz
inc
les
jl
aam
mov
and
xor
or
sbb
dec
mov
in
or
xor
mov
push
inc
fsts
addr16
dec
mov
pop
aas
push
mov
push
xor
mov
dec
add
mov
mov
jmp
enter
cld
imul
in
inc
js
js
jle
js
add
outsl
xor
cmc
mov
mov
cmc
jno
pop
mov
jp
cmpsb
cmp
popa
es
addr16
bound
movsb
in
push
mov
repz
sbb
lock
cmp
mov
sbb
in
jmp
cwtl
out
inc
adc
mov
int
fdivl
sub
cmc
filds
jg
movsl
and
fcmove
sbb
shl
movsl
out
out
lea
jb
loope
cmpsl
std
push
movsl
sub
pushf
pushf
jbe
pop
inc
movsl
sbb
xchg
cmp
jb
adc
cmp
lods
pop
les
cmp
xchg
inc
push
movsb
push
xchg
shll
push
insb
mov
and
jbe
fisttps
dec
cmp
ret
cld
cli
adc
mov
pop
and
popa
xor
lea
fld
repnz
lret
cmp
nop
xorb
jg
or
mov
push
popa
add
rclb
cld
imul
mov
dec
hlt
ror
mov
mov
ret
shlb
inc
add
lret
cmp
ss
lahf
xor
adc
movsb
bound
fldln2
cmp
push
sbb
ja
inc
lret
inc
inc
mov
mov
adc
inc
jno
and
sub
pop
sbb
jo
push
lock
xor
cmp
mov
test
ja
jo
lret
xor
push
leave
ret
mov
jg
or
adc
or
lock
push
movsl
push
add
adc
pushf
and
cs
sub
movsl
aad
jb
cwtl
jecxz
call
in
mov
pusha
psubw
mov
fnstsw
push
mov
xor
and
mov
mov
rcl
andb
in
rcrb
push
shlb
pop
repnz
dec
push
xchg
aad
mov
aas
ror
dec
add
fistpl
adc
call
in
shlb
cmpsl
ret
mov
mov
cmp
scas
rorb
jp
shrb
sub
inc
scas
mov
jo
loopne
ja
in
jbe
pop
nop
fimuls
rolb
jo
push
mov
shlb
clc
add
add
jmp
ror
ror
leave
leave
mov
jle
sub
js
jle
js
sbb
scas
jmp
iret
test
and
mov
gs
ja
clc
idivb
rcrb
pushf
mov
mov
out
shlb
mov
sbb
cli
push
fmull
xchg
and
aam
mov
in
mov
jl
imul
mov
std
pop
xchg
inc
cld
mov
movsb
cmp
sub
jno
jl
jae
jle
push
xor
cwtl
dec
imul
iret
addr16
cli
or
cmp
or
mov
xchg
mov
mov
or
jnp
sub
in
or
or
lret
dec
cli
jmp
inc
cmpsl
cmc
in
adc
dec
push
xchg
scas
int
mov
pop
scas
loope
jae
xchg
xor
aaa
sbb
pop
pop
hlt
jb
cmp
push
js
pop
popa
and
outsl
push
pop
imul
mov
stc
jecxz,pt
cmp
pop
mov
inc
repnz
dec
or
push
das
movsl
pushf
dec
pop
loope
and
adc
fisttpll
stos
cmp
adc
jbe
mov
nop
xchg
or
pavgw
push
inc
jl
mov
fsubrs
data16
and
fidivrl
fdivl
jnp
add
shrl
inc
mov
fwait
mov
push
pop
test
mov
and
sbb
outsl
mov
and
push
data16
or
mov
dec
inc
subb
xor
push
mov
mov
mov
push
jl
cmp
fcmovne
xchg
mov
push
inc
sub
nop
and
mov
pop
mov
cmpl
cwtl
adc
cmp
in
adc
stos
add
mov
sarl
dec
out
xchg
mov
cmc
push
ds
pop
faddl
inc
ja
enter
loopne
adc
aad
icebp
cwtl
andb
jl
in
ret
sbb
cmp
dec
xchg
outsb
mov
out
xchg
enter
js
cmp
sub
cmp
ret
aaa
lods
jl
orb
mov
or
outsb
aas
jge
pop
daa
dec
lret
sbbb
sub
xchg
cs
and
inc
inc
and
jae
adc
inc
jo
imul
add
mov
mov
mov
xor
add
imul
mov
xor
jmp
enter
lret
fxch
flds
xchg
loope
pushf
mov
xchg
add
in
js
mov
das
add
cmpsl
lcall
pop
inc
sub
and
mov
rcrb
popa
mov
push
cmp
dec
cmp
mov
push
or
lock
neg
aaa
or
sbb
cmp
jb
jge
jp
aad
xor
out
push
loope
push
ljmp
mov
data16
push
jl
pop
insl
push
into
adc
cmpsb
sti
dec
lret
dec
jnp
call
adc
jl
push
pop
adc
into
xlat
aaa
jle
arpl
xor
shrl
xor
enter
xchg
mov
movsl
jmp
xchg
fstl
test
pop
add
leave
jcxz
cmpsl
adc
xchg
cmp
pop
sub
pop
sbb
xor
pop
mov
jbe
push
mov
aas
push
push
xchg
mov
mov
imul
mov
adc
or
and
popa
negb
insb
fwait
lret
pop
inc
inc
xchg
ds
mov
loopne
adc
xchg
jle
adc
jne
rcl
addl
sbb
std
dec
mov
mov
mov
adc
xchg
std
rol
and
or
dec
mov
and
mov
clc
push
jmp
xlat
cmp
inc
in
enter
push
dec
adc
add
xor
push
mov
mov
jnp
imul
sbbl
pop
push
adc
jnp
and
xor
outsl
lret
mov
sti
hlt
or
scas
lcall
sbb
or
cmp
pop
cmp
or
in
or
rcrl
out
pop
lds
stc
stos
inc
cmp
fnsave
incl
jg
test
mov
loop
repz
stc
mov
pop
jo
fstl
xchg
mov
jno
shrb
mov
movsl
jne
push
mov
je
pusha
jecxz
or
int3
fldt
mov
mov
popa
or
xchg
pop
jmp
inc
mov
cli
jbe
pop
xchg
mov
dec
int3
add
inc
sar
arpl
std
aad
stos
movsl
daa
jg
adc
sub
mov
mov
xor
add
jmp
ror
iret
aam
insl
js
xchg
fbld
js
jle
js
push
xor
mov
ficoms
loopne
fadd
test
call
in
cmp
xchg
sub
mov
fbld
jecxz
sahf
xchg
cmp
sub
rcrl
add
or
bnd
sbb
wrmsr
ror
xchg
popa
arpl
push
lods
rcrl
lds
jno
or
xorb
ficomps
mov
mov
inc
sub
dec
int
adc
shl
int
cmp
dec
pop
inc
popf
scas
sarl
std
dec
addb
movsl
xor
xchg
test
das
in
rcrb
mov
mov
mov
or
popf
and
enter
add
out
roll
scas
cmp
sub
mov
mov
bound
jae
mov
xchg
xchg
outsb
jl
or
lods
jecxz
xor
rorb
movsl
cmp
sub
in
daa
mov
pop
xchg
mov
movsb
imul
adc
pop
adc
call
cmp
xor
dec
cltd
jmp
les
in
jp
push
test
or
faddl
cld
jb
mov
pop
adc
sarb
inc
mov
and
mov
sarb
xchg
loopne
lods
sbb
push
movsb
pop
test
scas
mov
int3
rolb
out
in
ret
pop
enter
lahf
sub
cmpl
sbb
xchg
mov
insl
inc
das
in
je
jg
loope
int3
cmp
sub
jge
aaa
fildl
out
lcall
sub
add
cmc
mov
popf
mov
mov
js
test
xchg
dec
dec
xchg
inc
xchg
cmpsl
lds
out
mov
xor
push
inc
xlat
sub
ja
dec
not
mov
add
xchg
jge
pop
loope
inc
mov
sbb
lret
into
fwait
clc
jo
pop
pop
arpl
in
mov
sbb
dec
leave
mov
in
jg
lods
int
shll
ficoml
cmp
outsb
mov
mov
and
push
fiadds
sbb
lret
outsb
shrl
imul
stos
rcrb
scas
sti
mov
jmp
rol
leave
rcr
rcr
enter
adc
push
jg
in
js
sarb
jge
cmp
mov
arpl
out
dec
push
test
mov
inc
mov
cmpsb
dec
sbb
push
add
sti
push
jg
fldenv
dec
xchg
js
out
orb
mov
sbb
mov
cmp
cmp
sahf
les
dec
mov
out
repz
xor
pop
imul
daa
adc
dec
jo
cwtl
lret
cmp
cmpl
lret
xchg
push
xchg
jmp
mov
cmp
cli
add
mov
push
nop
sub
cltd
leave
mov
movsl
jae
pop
bound
cltd
lret
pop
dec
dec
leave
cli
fcomip
dec
inc
ret
add
es
outsb
loop
mov
aam
sub
lods
add
loopne
fwait
repz
loope
lea
dec
mov
jb
out
cmp
jbe
xchg
and
mov
inc
xchg
push
add
xchg
fwait
icebp
mov
repz
popa
mov
xor
shl
and
xchg
ja
out
jns
cmp
mov
adc
push
pop
dec
add
sahf
jbe
js
fidivs
sbb
sub
cmp
jo
pop
les
fistpl
pop
in
sbb
rcrl
mov
jb
xchg
jnp
out
xchg
sbb
and
pop
jecxz
arpl
imul
push
les
lock
movsb
dec
test
mov
ret
xchg
ds
outsb
test
loopne
loopne
pop
sbb
in
xchg
dec
or
test
mov
cmpsl
es
int
mov
daa
inc
mov
push
ja
pop
jno
sub
adc
or
pop
out
sbb
icebp
jp
mov
rcl
mov
mov
or
cmp
inc
sub
dec
cmp
enter
movb
ja
arpl
lcall
ret
ret
and
insl
stc
sub
fs
push
pop
mov
aad
pop
dec
in
push
shrl
ror
mov
call
lds
adc
lret
dec
ja
inc
jmp
imul
out
fwait
repnz
loope
and
or
pop
sbb
or
xor
jmp
les
int
aam
mov
inc
mov
push
add
js
jle
js
add
in
or
aam
pop
orb
dec
mov
and
scas
pushf
xchg
inc
cmp
sbb
mov
push
iret
push
cmp
out
push
ljmp
lea
lcall
mov
cltd
test
mov
adc
fadds
or
mov
inc
lret
lret
clc
mov
mov
dec
lock
add
pop
push
dec
adc
std
mov
inc
je
sahf
mov
stos
xchg
mov
mov
lret
lahf
setno
loope
stos
in
ja
fldenv
repz
mov
mov
pop
push
mov
sub
xchg
push
mov
mov
mov
cmp
adc
add
cli
jg
bound
rolb
jo
push
jo
mov
mov
add
xchg
test
adc
test
sub
pop
push
aas
test
cmp
cmp
xor
nop
push
jg
or
pop
and
int
adc
lret
roll
mov
inc
lret
mov
fidivrl
pop
test
and
push
push
jmp
inc
in
add
xlat
push
mov
fcoms
enter
jae
mov
into
mov
cmp
adc
hlt
lods
or
push
mov
mov
inc
test
sar
bnd
lret
inc
lock
jns
divb
jp
jecxz
cmp
sub
mov
mov
lods
sub
fcoms
aas
inc
dec
ljmp
inc
jns
sbb
push
ja
jge
cmpsb
roll
aaa
xchg
mov
negb
outsl
test
pop
sbb
pop
xor
and
fwait
mov
ret
xchg
movsb
imul
mov
pop
popf
or
lret
ret
mov
test
pop
ds
push
dec
xor
data16
clc
in
stos
sbb
fwait
std
mov
push
xchg
outsl
daa
pop
gs
into
popa
dec
out
pop
mov
lahf
pop
push
js
mov
pop
lcall
stc
mov
test
sub
ss
scas
cmp
test
mov
add
cli
jbe
mov
mov
xor
add
jmp
vpmovmskb
fcmovnu
addl
sub
or
in
js
pop
and
aad
push
fsub
cltd
cli
jg
jb
cmpsb
in
sti
hlt
push
add
les
add
push
adc
out
push
mov
imul
mov
lods
push
movsl
dec
das
scas
mov
jmp
rorb
arpl
xchg
dec
test
fwait
int
or
xor
and
mov
push
iret
cs
shrl
pop
pushf
dec
jno
nop
out
aaa
insb
sbb
or
out
repnz
test
adc
in
push
and
mov
push
sbb
sarl
orb
pushf
push
iret
insl
notb
sbb
mov
mov
or
add
pusha
or
jmp
lods
enter
fistl
add
xor
or
jl,pn
jmp
daa
jno
fiadds
adc
test
jmp
fisttpl
call
lret
jge
movsb
std
aad
push
push
jne
inc
jle
je
rorl
ss
pusha
add
scas
pop
dec
jl
or
out
lods
sarb
lret
inc
add
pop
scas
movsl
cmp
dec
adc
xchg
pop
add
sub
nop
add
dec
pop
sbb
lcall
jb
sbb
adc
cmp
mov
inc
pushf
js
mov
cwtl
in
movsb
pop
pop
mov
fbld
cmp
dec
clc
cmp
or
pop
popa
movsl
push
jno
ljmp
mov
clc
jle
or
adc
test
add
inc
cmpsb
or
ret
mov
or
mov
cmp
mov
cmpsl
gs
or
out
mov
mov
test
sbb
fcomip
fs
xchg
ret
jb
imul
gs
jp
jg
fidivl
xor
xlat
shrl
test
cmp
push
ret
dec
clc
xchg
mov
sub
in
les
js
cmpsl
jmp
movsb
push
pop
pop
xor
xchg
movsb
sub
outsl
xorb
pop
iret
or
jno
pop
sbb
fisubrl
push
cmp
ret
mov
push
shr
je
mov
lods
xchg
adc
pop
mov
imul
mov
jmp
lret
ret
vpand
ret
add
mov
scas
movq
jle
js
jns
pop
ss
repnz
mov
mov
out
dec
test
lock
sub
lcall
mov
arpl
pop
dec
jns
or
push
cwtl
fimuls
mov
addr16
insl
add
test
sub
mov
andb
add
cli
shr
inc
or
insl
das
sub
in
aas
icebp
daa
leave
scas
push
notb
and
mov
sub
leave
ret
sbb
icebp
pop
addl
jo
stos
mov
mov
dec
icebp
mov
jno
cld
push
ss
jg
iret
pop
mov
ret
lret
mov
sbb
fdivrl
je
js
daa
clc
nop
add
sub
push
or
je
lret
add
xchg
add
jns
in
and
mul
ret
and
scas
cmp
xor
cmp
jg
aas
xchg
or
gs
icebp
sbb
xchg
in
negb
adc
in
pushf
out
mov
push
push
xlat
outsl
jbe
dec
shll
les
mov
push
xor
icebp
dec
mov
push
fisttpl
roll
cmp
in
jns
rorl
sub
insl
pop
mov
dec
js
mov
aam
sub
mov
cmpsb
push
outsl
mov
sub
mov
fisttpl
cmc
insb
stos
sbb
das
loope
shll
xchg
in
in
aas
dec
std
std
repz
imul
add
std
aaa
add
jl
adc
add
mov
sti
es
mov
scas
aam
jnp
loop
mov
popf
dec
jae
aaa
sbb
push
jbe
add
scas
je
cmp
mov
clc
cmpsl
shll
adcl
or
js
jno
lock
adc
lahf
repnz
stc
repz
sbb
enter
adc
add
inc
pop
test
loopne
sbb
lods
insb
filds
inc
ret
in
mull
xor
ret
mov
cmpsl
into
jge
add
icebp
adc
outsb
lock
outsb
roll
pusha
in
ljmp
fdivl
clc
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
jmp
rcl
aad
leave
fadds
js
jle
js
std
xchg
insl
mov
inc
pop
popf
popa
lret
cmp
add
push
fnstsw
pop
mov
sbb
jnp
mov
mov
mov
popa
stc
jge
testl
jno
lods
sub
sbb
cmpsl
fnstcw
sub
rol
lret
push
in
insl
stos
push
movsb
sub
push
mov
enter
xchg
int
outsb
jae
inc
in
mov
mov
add
adc
inc
fimuls
cmp
je
cli
jl
xlat
aad
xchg
lret
test
dec
fiaddl
pop
gs
cltd
and
out
jmp
ja
imul
jp
shrl
or
cmp
aas
shll
addr16
or
sub
scas
jmp
jb
dec
rcrl
jno
add
movsl
js
mov
int3
pop
leave
pop
gs
idiv
sub
icebp
lahf
dec
cmp
mov
cs
test
jge
popa
mov
push
mov
push
pop
xor
in
int
sub
jnp
sbb
and
cmp
hlt
mov
xchg
jb
popa
inc
test
mov
mov
das
xchg
lea
sbb
fisubl
dec
inc
in
outsl
lods
push
push
insl
push
or
sar
mov
lds
or
or
loopne
fsubr
add
cmp
adc
sbb
cmp
pushf
call
imull
adc
dec
add
ret
nop
sbb
dec
cmp
call
es
xchg
cmc
fwait
mov
jae
idivb
imul
test
inc
sbb
das
lock
testb
loope
ret
les
popf
cmp
fstl
or
lock
or
xchg
jo
loopne
mov
test
jne
dec
or
mov
into
iret
push
xor
aas
jne
or
sub
loop
dec
andb
popf
sti
xchg
lds
stos
fs
dec
fdivrs
mov
mov
ja
mov
icebp
lcall
cmp
cmc
loopne
pop
cld
in
mov
test
lahf
imul
xchg
push
add
adc
aas
cwtl
sbb
inc
push
dec
ret
bound
fsubr
iret
xchg
push
insb
mov
jo
test
nop
data16
dec
jge
push
loopne
jno
cld
gs
imul
cmp
jmp
int
cmp
int3
leave
aad
xchg
mov
dec
popl
cmpsl
adcb
js
jle
js
and
mov
rcrb
sub
popf
fmuls
push
test
and
and
imul
lret
xbegin
testl
push
sub
adcl
lods
stc
adc
mov
fcmovnb
lea
cmc
gs
iret
mov
push
int3
fadd
push
aaa
scas
loope
arpl
xchg
mov
xchg
fidivl
sahf
mov
cmp
movsl
repnz
xchg
mov
mov
xchg
outsl
scas
jae
mov
test
ljmp
xchg
es
lea
leave
sub
cltd
lahf
arpl
lods
push
bound
nop
pop
gs
aas
lret
int
cs
es
xor
push
shr
mov
sbb
ja
ljmp
jmp
mov
ds
les
icebp
sub
push
xchg
cltd
stc
push
test
loop
push
popf
dec
rorb
mov
xchg
lcall
in
not
mov
movsb
loop
jmp
xchg
xchg
push
pop
sub
sub
jbe
out
jno
cmpsl
adc
test
out
push
inc
popa
inc
push
inc
call
jmp
dec
push
repz
push
dec
fsubrs
shlb
in
repnz
stc
fdivrl
and
notb
dec
inc
xchg
lods
mov
sbb
sti
jle
loop
dec
fisttps
lea
cmpsb
fisubl
mov
leave
jno
xorb
adc
add
fcomps
enter
xor
scas
add
out
push
jne
shll
insb
imul
push
icebp
fstpl
sbb
sbb
push
and
pop
imul
incb
cs
push
ds
rorb
arpl
sub
lods
jno
das
mov
mov
lea
fiadds
xchg
imul
add
or
cltd
dec
sarb
sub
push
mov
xchg
pop
decb
push
mov
xchg
gs
movb
lods
cmpsb
adc
loop
fldcw
outsb
in
lahf
mov
in
bound
sub
gs
push
dec
xchg
push
and
dec
jmp
and
xchg
mov
pop
adc
jbe
pop
pop
leave
ret
push
mov
sub
movzwl
xor
push
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
push
call
jmp
push
xor
add
push
push
xor
pop
or
xor
sub
mov
div
push
sbbl
call
movl
inc
movl
cmp
jb
movl
incl
movl
lea
inc
mov
andl
lea
xorl
mov
or
mov
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
andl
mov
xor
xor
xor
mov
sub
add
mov
mov
mov
movzbl
cmp
mov
mov
mov
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
or
mov
xor
xorl
add
addl
imul
movl
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movzbl
xor
mov
xor
add
and
mov
negl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
not
add
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
add
mov
mov
xor
xorl
add
movl
cmp
movl
jne
movl
push
subl
pushl
pushl
subl
call
mov
mov
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
or
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
mov
movl
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
and
mov
mov
andl
mov
addl
xor
xorl
xor
add
mov
xor
orl
xor
add
lea
movl
mov
movl
cmp
ja
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
sbb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
into
int
rol
shl
out
stc
test
adc
xchg
jle
js
pop
mov
imul
pop
or
fdivp
jge
jmp
and
push
mov
jne
jbe
mov
add
lea
xor
lret
dec
mov
scas
out
jno
leave
mov
or
xchg
dec
xlat
leave
jnp
inc
lahf
sti
and
add
ja
mov
adc
add
add
cli
or
push
pop
adc
dec
sbb
popa
cwtl
inc
daa
jne
xchg
cmp
jmp
cmpsl
mov
test
mov
in
in
fwait
jae
fsubrl
jne
inc
nop
jns
in
pop
xchg
adc
iret
adc
jp
cmpsl
push
inc
pop
or
test
js
dec
inc
outsb
sub
mov
jns
inc
or
jnp
mov
add
or
rclb
adc
sbb
xchg
daa
loope
scas
orb
jmp
in
imul
mov
mov
pushf
push
orl
sub
rorb
fidivs
inc
outsl
push
loop
into
push
pop
add
or
jp
imul
add
jmp
sub
addl
cmp
jnp
add
sub
inc
mov
pop
adc
aaa
mov
push
pop
add
jns
dec
data16
mov
xchg
movsl
jb
ds
fcmovne
push
shrl
mov
ljmp
xchg
pop
fcmove
into
repz
stos
int3
shl
fbstp
iret
pop
lds
repz
shr
mov
sti
aaa
ret
add
jne
mov
and
aad
imull
mov
dec
cwtl
movsl
mov
jbe
mov
dec
loopne
movsl
add
out
stos
jle
cltd
repz
mov
lock
aam
sbb
mov
lock
test
repz
cli
dec
xor
mov
outsl
pop
mov
test
add
inc
xor
movsb
jnp
cmc
inc
fbld
lahf
out
adc
data16
sub
test
xlat
push
jg
or
mov
jg
mov
data16
mov
iret
xchg
sub
mov
adc
loopne
jne
jl
and
mov
cmp
adc
dec
or
lcall
call
xchg
enter
xchg
ret
jbe
sti
push
mov
arpl
sarl
mov
or
xor
push
jnp
clc
cmp
cmc
cmpsl
inc
add
adc
add
movl
movl
mov
push
jmp
lret
xlat
fcmovnbe
lret
test
pop
repz
mov
js
fs
imul
ret
ja
out
dec
pop
cmp
imulb
jl
sub
sub
cmp
cmp
adc
call
js
jo
imul
add
mov
mov
test
pop
pushf
test
xlat
lcall
cwtl
mov
lret
imul
popa
sbb
cmp
adc
fwait
test
hlt
test
push
cmp
dec
je
mov
xor
scas
add
jg
stos
lcall
test
in
dec
popa
mov
dec
sbb
cmp
cli
inc
insl
jl
cld
mov
push
sub
outsb
jbe
ret
popa
outsl
and
mov
in
pop
adc
lahf
fsts
dec
repnz
cwtl
outsl
mov
clc
jae
jbe
stos
xor
pop
push
cs
insb
xor
test
xor
sti
in
iret
mov
clc
ja
pop
fstps
mov
jb
mov
mov
cmp
out
shr
enter
int3
mov
and
addr16
popf
stos
leave
hlt
cmp
rorl
cs
les
inc
fidivs
daa
arpl
ja
decl
mov
add
pop
inc
pusha
push
push
push
inc
mov
std
push
add
cmpsb
int
xlat
or
or
scas
add
iret
lods
lret
xchg
shll
test
in
and
sub
ret
xor
sub
fidivrs
out
push
jno
jbe
xchg
decl
push
jbe
imul
xchg
insb
pop
mov
movsl
dec
scas
lods
int3
xchg
mov
inc
push
test
mov
xchg
mov
mov
mov
add
sub
iret
ret
mov
stc
mov
nop
inc
pop
into
mov
ja
andb
nop
push
pop
outsl
in
xchg
enter
cld
xor
daa
and
leave
or
or
push
sub
sti
xchg
lds
mov
in
xchg
push
out
push
pop
sub
jnp
xchg
rclb
fsts
or
in
pop
xchg
push
jno
jns
in
xor
test
nop
mov
xchg
xchg
mov
popf
pop
jmp
fisttpl
inc
jl
dec
jp
mov
xor
and
mov
and
pop
xchg
scas
or
xor
jb
stc
dec
lods
dec
push
push
sarl
clc
movl
mov
mov
push
mov
mov
mov
cmp
movl
je
mov
mov
xor
subl
add
cmp
je
jmp
into
xlat
ror
aad
rcr
stos
imul
mov
dec
or
sbb
xchg
jle
js
mov
cli
jg
mov
test
jne
fcmovbe
in
adc
mov
adc
push
std
pop
gs
jbe
mov
cmc
push
sub
xchg
fucomi
fs
leave
outsl
xor
xchg
gs
movsl
xor
or
jle
add
scas
sti
pop
ljmp
loopne
les
inc
mov
mov
into
pop
mov
pushf
sbb
inc
lds
jo
test
roll
jb
in
push
sarl
cltd
faddl
or
fisttpll
adc
cmp
inc
lods
xor
mov
sti
add
subb
test
sbb
adc
push
xchg
inc
rclb
or
mov
call
cmpsb
enter
sbb
loopne
int3
or
inc
andl
add
jae
cli
loop
or
pop
cmc
lcall
mov
xchg
push
or
aad
pop
xchg
call
push
xchg
add
pop
scas
pop
adc
jnp
nop
push
dec
sub
dec
jb
dec
push
shlb
mov
sub
push
jb
push
mov
mov
jnp
repnz
cltd
mov
nop
aam
sti
mov
xchg
mov
xchg
iret
mov
sarl
sub
fwait
jnp
sahf
cmp
push
iret
mov
jmp
rclb
out
in
push
fdivrl
xchg
jns
pop
loope
jno
jne
push
xchg
mov
pusha
fisubl
inc
faddl
lret
lods
xchg
rcrb
loope
xor
ljmp
mov
mov
dec
sahf
imulb
lock
add
lret
je
jae
xchg
js
imul
and
sar
jno
push
inc
adc
xor
scas
xchg
push
rorl
orl
push
xchg
mov
out
or
push
xchg
lret
int
dec
jne
pop
cld
dec
or
loop
dec
in
stos
sbb
mov
les
push
test
jp
mov
sub
clc
mov
data16
lds
test
push
jo
dec
dec
xor
in
movsl
icebp
movsl
stc
mov
cmp
cmc
adc
mov
push
loope
inc
mov
sub
xor
mov
lea
add
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
push
pushl
pushl
mov
addl
jmp
ret
leave
leave
leave
lret
add
mov
jle
js
adc
dec
addr16
xlat
stos
lret
repz
stos
loop
pop
xchg
sbb
mov
pop
fimull
loope
jle
sti
jl
pop
jmp
into
repnz
enter
or
adc
lcall
cmp
adc
into
add
xchg
sub
lcall
rclb
cmp
outsb
fisubrl
jno
ret
mov
ss
out
call
mov
fwait
inc
jns
arpl
movsb
push
insl
lock
adc
mov
xchg
jg
in
mov
mov
out
les
dec
jno
sti
insb
mov
mov
xor
and
push
adc
aaa
push
pop
xchg
mov
inc
mov
into
cmp
pusha
stos
mov
popf
add
ja
in
es
mov
fiadds
mov
mov
ljmp
ja
loop
inc
sbb
sbb
pop
jge
cmp
call
shrb
sbbb
or
cmp
xor
dec
stos
inc
mov
and
shrb
cmp
test
pop
ljmp
loopne
scas
pop
repnz
add
lret
lret
and
cmpl
or
leave
ds
daa
mov
cmp
pop
adc
je
cmc
pushf
mov
mov
pop
dec
movsl
mov
fldl
xorl
xchg
scas
shlb
dec
xor
repz
aaa
sahf
int
stos
pop
dec
push
dec
adc
sbb
cmp
mov
mov
int3
add
inc
mov
jae
mov
push
jmp
sahf
adc
cmp
repz
adc
lret
sahf
push
cmpsb
subl
sbb
pop
lahf
sbb
mov
pop
pop
fbstp
popa
cmp
pop
in
xor
sqrtps
or
ret
fdivrl
rcrl
inc
inc
add
cmpl
fst
divl
ja
cmp
out
jno
stc
icebp
jl
inc
enter
shlb
movsb
clc
ss
sbb
loope
subl
mov
sbb
sbb
sbb
imul
dec
jp
fwait
mov
mov
xchg
sti
mov
fs
mulb
xor
loop
push
add
mov
dec
or
loopne
psraw
add
pop
leave
ja
jmp
incl
cltd
call
mov
mov
jmp
ret
int3
int3
aad
leave
roll
arpl
fstps
js
mov
sar
jg
test
inc
repz
lret
inc
ljmp
mov
arpl
fidivrs
xor
jno
xchg
call
adc
leave
addr16
sahf
stos
pop
sub
sub
imul
outsb
les
mov
push
nop
inc
push
and
xchg
in
sbb
pop
jge
and
daa
adc
add
sub
out
leave
mov
ret
idivl
aam
pop
inc
dec
inc
mov
fcompl
xchg
cmp
aad
addr16
jge
xlat
rcr
or
aas
cmp
shl
popa
xchg
lods
and
mov
pop
lahf
iret
lds
in
cmp
lret
and
mov
push
pusha
jp
movsl
ss
imul
icebp
push
dec
add
imull
lds
inc
aam
insl
movsl
imulb
jmp
popf
addl
xchg
das
divb
fsubs
fnstsw
xchg
test
mov
into
xor
push
rclb
leave
mov
lcall
lcall
lret
xchg
aaa
xchg
dec
inc
mov
jecxz
and
dec
inc
frstor
dec
push
insb
xor
sub
sbb
push
leave
cli
xor
cmp
or
test
aad
stos
inc
adc
les
cmc
jbe
jmp
and
and
mov
or
aas
and
or
sub
dec
imul
xchg
xor
jbe
out
sub
dec
pop
test
in
adc
pop
out
push
xchg
ret
sahf
das
sbb
mov
sbb
push
je
scas
sub
inc
aam
cmpsb
xchg
dec
aad
xor
scas
les
nop
pusha
dec
ret
and
enter
or
push
aaa
cwtl
cmp
arpl
push
lret
in
lret
insl
jle
leave
dec
movsb
cwtl
call
mov
sbb
pop
out
leave
cltd
pushf
xor
xlat
adc
cld
xor
jmp
pop
loope
cmp
sbb
mov
adc
push
jno
pop
jmp
lret
ja
addb
adc
jo,pn
mov
inc
jp
xorb
jle
nop
outsl
sahf
cwtl
out
cs
push
jecxz
jmp
push
pop
push
or
xchg
sub
pusha
insl
mov
lret
les
add
or
add
mov
add
ds
int3
lret
xchg
aam
inc
les
adc
xchg
jle
js
filds
cmp
dec
ret
inc
push
mov
or
cli
int3
xor
push
add
pop
pusha
sub
xchg
sub
pushf
pop
fcmovne
in
cmpsb
dec
jl
pop
aam
fs
jmp
pop
movsl
pop
gs
sti
daa
fiaddl
mov
sbb
dec
jae
sub
add
adc
std
aam
xchg
out
xor
mov
pop
mov
inc
shlb
rcl
push
lds
cmp
std
negl
sub
negl
lcall
and
jl
push
cltd
and
imul
inc
loop
loopne
adc
dec
decb
jnp
sub
jbe
and
xor
out
ret
imul
add
rcrl
data16
fstpl
push
mov
mov
aam
movsl
sahf
jp
mov
xchg
shlb
shlb
ds
ds
push
lret
icebp
call
lahf
xor
shll
xchg
xor
xor
fwait
lock
jge
jo
out
mov
jns
subb
mov
xchg
jo
cltd
imul
les
dec
xor
in
sub
lock
packuswb
mov
pop
or
outsl
pusha
pop
cltd
das
mov
push
push
xor
sub
das
xchg
push
fcoml
adc
fs
inc
js
lahf
push
push
or
icebp
push
push
popf
mov
popf
in
loopne
cmp
or
mov
jne
and
sbb
add
rcl
pop
shlb
push
movsb
add
imull
sbb
push
fisttps
sub
lea
add
addl
pop
mov
jl
inc
into
or
add
lods
xchg
movd
xor
and
mov
jne
add
push
fstl
adcl
aaa
mov
shll
movsb
and
std
jns
call
iret
cmp
in
jae
mov
stos
pop
or
mov
mov
and
std
xchg
xchg
stos
hlt
and
sbb
into
cmpl
push
insl
data16
push
or
add
shrb
into
xlat
ja
pop
iret
cmpsb
xlat
sub
xchg
cld
mov
push
scas
loope
cli
je
iret
sti
subl
mov
cwtl
mov
fs
sti
ja
dec
cmp
jno
das
xor
mov
shll
fiaddl
mov
jmp
rol
iret
fcmovbe
fcmovne
mov
mov
jg
xchg
jle
js
mulb
sub
lret
mov
fbld
cmpsb
sbb
das
test
in
sahf
pop
test
fbld
clc
jecxz
mov
daa
adc
icebp
addr16
xchg
or
sub
fisttps
data16
mov
cmp
or
adc
mov
xor
in
push
lock
cmp
ljmp
sub
nop
out
aad
inc
mov
shr
xor
cltd
sbb
and
cmc
and
lods
xor
mov
mov
mov
inc
cwtl
mov
pop
pop
fdiv
sub
and
out
imul
mov
xlat
adc
jle
xor
mov
push
inc
jge
add
push
lods
enter
movsl
sub
mov
out
cld
and
ljmp
mov
mov
xchg
ja
push
ret
jo
stos
mov
mov
hlt
mov
frstor
subl
lods
push
adc
movsl
ljmp
cmc
gs
cwtl
adc
sub
jle
cltd
and
jne
sub
pop
cmp
inc
push
pop
loop
inc
hlt
imul
iret
add
pop
and
call
push
cmp
icebp
outsb
cltd
out
movsl
mov
ror
pushf
scas
add
fstl
scas
or
pushf
ja
aaa
mov
jl
jg
mov
neg
std
cmpsl
lods
mov
outsl
pop
pop
mov
hlt
sbb
pop
inc
fstl
jno
aas
addr16
push
in
dec
dec
or
mov
mov
ja,pn
mov
nop
lret
xchg
dec
dec
stos
lahf
js
cmc
xor
xor
cmp
adc
stos
jg
pop
imul
inc
push
cmp
lahf
mov
xchg
mov
sub
sub
push
inc
gs
mov
and
cmpsb
hlt
lods
fbstp
movsl
lods
ret
push
mov
loopne
repnz
inc
mov
sti
lock
shrl
or
not
lcall
mov
push
jae
insl
popa
pushf
and
and
icebp
xchg
aad
fsubrs
push
xor
repnz
cmc
fisubl
dec
sbb
xor
adc
into
lock
inc
inc
sbb
je
sahf
in
dec
inc
outsl
pop
lods
out
or
sub
push
mov
icebp
mov
enter
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
jmp
xlat
cmp
fcmovne
push
lcall
sub
js
test
in
xchg
fistl
insl
testl
dec
aas
imul
mov
pop
pop
ss
rcrl
pop
or
scas
push
sbb
cmp
je
jae
mov
pusha
test
ljmp
lock
je
aam
or
inc
sarb
mov
mov
mov
push
sbb
out
mov
pop
jae
push
jle
pop
or
sbb
inc
jle
add
jl
orl
outsb
iret
mov
xchg
jb
rorb
jno
clc
xchg
sti
arpl
aam
xchg
sbb
or
fimuls
jge
push
stc
bound
sub
mov
mov
addl
cmp
aam
dec
dec
sarl
or
jle
inc
in
nop
aad
adc
sti
jbe
das
mov
cmp
jo
cbtw
cmpsl
add
xor
arpl
loop
pop
mov
or
out
push
jmp
adc
pop
jl
add
ficompl
sbb
mov
scas
add
jle
popa
in
addl
faddl
fsubrp
mov
sub
ror
jg
aaa
xchg
test
adc
test
add
mov
cmpsl
mov
fisttpl
sahf
push
lret
jno
jno
push
pop
adc
popa
xor
cmpb
insb
cmp
adc
add
inc
push
shll
js
jo
cs
in
sarb
adc
jmp
fdivr
test
pop
xor
inc
aad
add
test
shl
mov
icebp
pop
or
gs
out
pop
sbb
xor
push
mov
ds
xchg
enter
xchg
addr16
inc
daa
pop
ljmp
xor
into
lret
pushf
stos
adc
jns
testl
or
hlt
scas
push
cs
stos
movsl
int
and
mov
ret
dec
outsb
push
std
cltd
andl
lea
mov
shll
xchg
fsubrl
adc
dec
and
test
jbe
out
sbb
iret
push
mov
cmpsb
ja
cmp
mov
fidivl
dec
in
in
and
cmp
imul
shlb
sub
ljmp
or
iret
jo
adc
adc
add
mov
jmp
ret
xlat
leave
rcr
rcr
xlat
cmp
fwait
inc
sub
xchg
jle
js
xchg
xlat
push
in
dec
lcall
or
pop
aaa
jmp
pop
jbe
pop
dec
xor
repnz
push
scas
aaa
inc
sub
call
jge
adc
pop
jp
and
imul
sub
xchg
inc
jmp
pop
imul
std
pop
cmpsl
test
xchg
cmp
pop
test
add
mov
and
mov
push
es
jle
iret
jae
xchg
jno
mov
data16
int
cli
push
and
aas
addr16
gs
sbb
movsl
inc
inc
adc
push
aam
pushf
sbb
sbb
dec
dec
adc
fwait
pusha
xor
inc
mov
inc
inc
xor
cmpsl
in
xor
sbb
pushf
outsl
rclb
aad
pushf
push
inc
pop
jl
mov
clc
insb
cmpb
pop
stc
mov
xchg
push
stos
cmpl
stos
repnz
stos
inc
inc
pop
xchg
mov
jbe
sbb
pushf
push
sbb
and
adc
adc
mov
and
add
in
sub
mov
addr16
bound
icebp
out
test
mov
xor
mov
loopne
xor
dec
jo
and
xor
cld
cmp
out
inc
mov
sbb
adc
js
xchg
xchg
push
mov
inc
xchg
xchg
stc
adc
xchg
sbb
test
cmp
jg
push
enter
decb
sub
jns
insl
call
and
cs
js
sub
inc
xchg
push
mov
inc
loope
mov
ret
fcomp
fimull
bound
cmpsl
push
pop
lods
lahf
test
mov
push
mov
xor
mov
push
addr16
fwait
mov
inc
shl
fnstenv
cmp
inc
les
rolb
repz
push
shr
in
enter
mov
xlat
mov
push
pop
faddp
inc
cmp
fstpt
pushf
jno
sbb
pop
pop
cltd
xchg
push
ficomps
andb
push
mov
pop
sbb
inc
sbb
pop
lds
sbb
or
inc
push
leave
andb
add
mov
jnp
testb
out
mov
rcrb
mov
xor
dec
sbb
sub
mov
cltd
sbb
sti
inc
sbb
add
pop
std
sti
ret
add
fdivs
popa
incb
fwait
jae
push
jecxz
cmp
jne
pushl
call
mov
xor
pop
jmp
rcl
rcl
rcl
and
sarb
pop
mov
xchg
jle
js
jb
stos
mov
call
push
or
pop
xor
pop
push
push
insb
rcr
shrl
dec
mov
xor
aad
stc
test
adc
jbe
ret
mov
xchg
xchg
pop
sarb
jmp
arpl
jl
bound
dec
out
cli
dec
adc
jge
cmpsb
sub
dec
sub
mov
cmp
test
or
stc
aad
mov
jmp
scas
inc
and
pop
testl
out
in
cmp
sub
xchg
rorb
or
call
cld
or
aaa
or
push
sub
shlb
or
pop
das
imul
jle
inc
lahf
sti
outsl
dec
xchg
push
shlb
mov
shll
mov
out
dec
call
push
mov
into
dec
jae
lahf
call
frstpm(287
inc
pop
mov
mov
or
les
push
roll
mov
lods
add
aaa
lret
mov
pop
and
dec
inc
jne
loopne
push
pop
pop
out
mov
jg
adc
mov
cmp
cmp
sti
mov
or
mov
and
xor
das
pop
xchg
mov
or
mov
icebp
push
sbb
jno
idivb
mov
test
jmp
xchg
das
mov
mov
pusha
push
js
push
outsb
adc
popa
jns
xor
add
add
into
rorl
negl
lret
mov
push
out
lock
mov
cmp
jae
lahf
xchg
movsl
out
test
daa
jne
mov
mull
outsl
sub
in
xchg
cmp
ret
sti
sbb
cltd
mov
sub
push
insb
loop
add
sbb
push
addr16
fidivl
js
pop
xchg
rolb
adc
fildl
sahf
push
or
ds
sub
popa
push
hlt
mov
nop
lret
sbb
add
xchg
dec
fidivrl
cltd
mov
inc
bound
lret
sbb
arpl
fyl2x
cwtl
jge
cmc
push
xchg
pop
mov
sarl
es
movsl
arpl
rcll
jmp
add
push
iret
jp
ret
movsb
cmpb
or
pop
insl
xchg
popf
out
pop
loop
xchg
nop
fadds
push
test
sub
xor
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
add
xor
cmp
jne
mov
mov
jmp
ror
xlat
cmp
jns
sub
pop
add
mov
jg
add
xor
mov
dec
sahf
imul
add
repnz
mov
mov
icebp
out
mov
popf
push
mov
mov
jbe
jg
mov
xchg
imul
pop
or
insb
jecxz
jb
sub
xchg
sbb
add
inc
cs
or
stos
cmp
mov
xor
jnp
and
mov
mov
leave
xlat
adc
shll
jae
pop
pop
or
xor
mov
mulb
lock
inc
out
or
dec
negb
inc
xchg
adc
gs
mov
cld
mov
iret
push
js
push
push
popf
dec
mov
push
jae
and
sahf
loope
sub
test
xorl
out
aam
ss
imul
adc
dec
cmp
add
jne
popa
pop
push
dec
sub
add
cld
es
repnz
jne
pop
lret
test
sub
lret
mov
mov
es
lret
mov
push
dec
dec
in
mov
push
popa
leave
nop
mov
mov
stc
dec
hlt
orb
addr16
cwtl
adc
pushf
idiv
in
sbb
out
xchg
pop
or
xchg
sbb
mov
sub
jecxz
jl
add
movsb
into
dec
pushf
aad
das
xchg
stc
lds
rcrl
xchg
pusha
add
hlt
mov
inc
dec
stos
mov
mov
xor
fidivrl
mov
lret
pop
mov
repnz
mov
daa
bound
inc
inc
pop
repz
mov
rclb
push
sahf
movsl
jle
hlt
xor
mov
cmp
mov
in
push
movsb
inc
sbb
sbb
add
cmp
sbb
inc
xor
dec
cmp
and
add
cmp
aad
aad
popa
adc
addb
js
jle
js
mov
mov
jnp
sbb
ret
sahf
gs
inc
ja
andb
add
mov
pop
pop
pop
pushf
sbb
lcall
call
imul
xchg
es
mov
in
adc
xchg
pop
aam
jecxz
leave
lahf
xor
ret
adc
or
hlt
mov
mov
push
std
push
rcll
imulb
mov
mov
pop
sbb
pop
xlat
jmp
inc
lds
jne
lret
imul
sbb
stos
push
fisttpll
jae
subl
sub
lahf
cltd
lcall
jle
lods
cwtl
aaa
cmp
in
int
lcall
fisttpll
push
in
adc
adc
jbe
fs
and
das
jp
fldenv
cltd
jl
mov
shll
push
xlat
leave
pop
mov
dec
sbb
inc
sub
xor
stos
test
iret
and
pop
pop
call
cmp
scas
or
ret
mov
add
repz
add
pop
nop
fstpt
xor
pop
aaa
jns
fdivrp
loop
arpl
pop
hlt
or
and
fsubrp
inc
or
push
loop
mov
out
out
lret
xchg
enter
fwait
pop
push
xor
push
cmpsb
push
cli
fmuls
adc
mov
mov
push
int3
sahf
push
mov
fnstenv
mov
lods
stos
lods
test
mov
pop
mov
sbb
xchg
jmp
jge
popa
sahf
adc
jo
xor
mov
mov
mov
xor
xchg
push
sbb
push
mov
rcl
inc
cmp
stos
pop
mov
aaa
xchg
lods
leave
mov
inc
push
popf
dec
xor
inc
jbe
sub
mov
mov
std
cmp
out
imul
mov
sub
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
cmp
int3
leave
fnstenv
or
enter
js
jle
js
adc
xor
jne
std
or
or
adc
std
loope
sub
jae
fwait
or
neg
and
push
ja
dec
lods
adc
test
and
stos
lea
idivb
fnstsw
out
pop
out
cmp
pushf
out
cmp
fwait
das
xchg
enter
xor
iret
mov
xchg
loop
xchg
shll
dec
or
mov
sub
stos
cwtl
sub
push
mov
test
sub
pop
add
xchg
jge
lret
sbb
int
js
fwait
mov
scas
sti
push
push
sub
jne
roll
mov
in
imul
gs
add
sub
cld
xchg
mov
test
cmp
mov
imul
pop
pop
leave
inc
leave
ss
xchg
in
idivb
adc
xor
mov
sub
test
imul
dec
mov
xchg
dec
ficoml
mov
xlat
jo
mov
rol
sbb
lcall
rclb
pop
dec
xlat
or
movntps
xor
fwait
gs
pop
popf
das
xchg
add
or
andb
int3
orb
xor
and
and
adc
jg
and
mov
jmp
pop
or
popa
aad
int3
dec
stos
jl
imul
cmpsl
outsl
mov
insb
mov
lret
fstpl
pop
add
push
xor
rcr
repz
fwait
xchg
and
pop
mov
ja
push
icebp
sbb
push
jp
mov
fsub
testb
lret
pop
ss
pushf
clc
lsl
push
leave
mov
xor
xor
mov
mov
inc
jg
pop
and
inc
insb
jp
jle
mov
add
fistpll
cmp
cmp
pop
xor
add
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
mov
inc
mov
andl
xor
orl
add
movl
mov
not
movl
mov
movl
mov
mov
push
movl
mov
mov
cmp
movl
je
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
jmp
ret
ret
leave
lret
call
aaa
jg
jnp
js
ljmp
xor
jecxz
mov
cmp
sbbl
push
inc
rcrb
fldt
fiadds
cmp
push
out
jle
mov
jnp
inc
xor
fidivrl
mov
cmp
and
cmp
mov
mov
mov
hlt
jp
mov
cwtl
inc
lods
lods
in
jo
mov
je
movsl
mov
subb
mov
movsb
add
ret
mov
int3
mov
cmp
ds
daa
sti
cli
js
leave
or
arpl
call
popa
loopne
pop
mov
push
mov
dec
jno
dec
jno
in
into
out
cmp
jb
movsl
xor
cmpsl
sub
or
push
add
movsb
and
fwait
popa
adc
inc
xor
out
add
cmpsl
rorb
loope
sahf
cld
insl
fs
dec
mov
push
aad
cmc
push
sti
dec
mov
push
ljmp
add
sbb
fisttpl
hlt
fcmovbe
dec
mov
aas
inc
pop
xchg
mov
jo
mov
lods
fnsave
xor
lahf
sub
jno
mull
rdmsr
ss
iret
add
adc
je
push
push
xchg
add
or
push
pop
subb
xchg
dec
popa
int
mov
leave
xor
jae
mov
dec
add
mov
or
cltd
fcomps
add
jo
mov
inc
pop
push
dec
loopne
mov
pop
cs
jnp
andb
dec
popa
imul
test
mov
mov
mov
sbb
lahf
jmp
shll
lcall
icebp
mov
aad
loop
outsl
or
xchg
pop
mov
hlt
les
dec
cmpsb
sti
mov
aad
inc
xchg
pushf
pop
lahf
aad
mov
ljmp
std
cltd
lea
add
std
xchg
and
test
xchg
insl
mov
dec
push
push
outsl
lods
xchg
push
movsb
pushf
pop
loop
pop
test
dec
ret
add
lcall
ss
jns
rcrl
xchg
clc
es
das
sub
xchg
dec
pop
lea
je
inc
cmp
pop
jg
loope
pop
push
dec
rorb
mov
pop
es
test
int3
jns
sbb
jno
loopne
stos
int3
sub
fildll
dec
jne
rcrb
mov
or
cmp
ss
mov
cmpsb
int
lds
cltd
jb
add
xchg
daa
sbb
dec
sub
notl
mov
fsts
mov
pop
add
jmp
outsl
sbb
lret
mov
test
or
enter
mov
cwtl
jb
add
enter
add
sarb
xlat
xlat
loope
pop
pop
roll
xor
js
jle
js
mov
hlt
add
ljmp
mov
lea
ljmp
dec
add
call
rorl
fs
int3
addr16
mov
inc
incb
mov
clc
in
sbb
daa
es
add
aas
test
or
ljmp
inc
mov
stos
mov
shlb
ljmp
outsb
test
jge
mov
xlat
or
add
out
and
arpl
adc
mov
insl
mov
out
xchg
lds
inc
mov
xchg
cmp
cmp
aam
sub
repnz
xchg
pop
xchg
fwait
jae
out
jne
aad
cs
sub
pop
int3
adc
lods
fwait
or
test
mov
cmpb
pop
add
repz
sahf
mov
aad
and
int
lret
jecxz
jnp
mov
addr16
pop
scas
adc
mov
negl
nop
push
dec
jl
or
push
jl
out
cmp
mov
lahf
cmp
ss
pop
add
hlt
pusha
push
ret
mov
cwtl
in
shll
jns
shr
sbb
cmp
mov
in
ljmp
mov
mov
adc
and
loop
cmp
lock
and
mov
xchg
insb
addr16
aam
je
pop
lcall
and
cmp
test
clc
pop
das
sahf
sub
mov
dec
xbegin
mov
jge
cld
adc
shrb
fs
outsl
out
lcall
mov
fcomps
sahf
adc
sub
push
jg
mov
adc
xor
arpl
push
jns
jecxz
les
outsb
lds
cmp
lea
or
repz
cld
in
sub
aaa
cmpsl
add
pop
push
inc
pop
lahf
test
in
outsl
sbb
jle
out
mov
xlat
hlt
jbe
pop
add
jb
scas
sub
or
fiadds
js
roll
cmp
leavew
nop
xlat
push
cmpsb
mov
pop
stos
hlt
lahf
adc
mov
mov
push
jae
jns
push
imul
cld
xchg
mov
loopne
cmpsl
lods
mov
sbb
mov
fimuls
sub
pop
xor
ret
dec
pop
mov
dec
push
inc
insl
clc
adc
mov
lods
test
fwait
call
vpandn
mov
sti
mov
mov
addl
clc
add
lahf
push
insb
sahf
mov
ret
or
icebp
push
rcl
or
mov
and
imul
aam
scas
ljmp
xor
lahf
jae
fstl
idivl
out
push
xor
push
cmp
jne
jmp
jmp
int3
les
aam
ror
mov
in
or
adc
jg
jnp
js
popa
mov
sbb
lahf
lcall
inc
pop
or
pop
out
and
imul
divps
lods
mov
pop
mov
dec
repz
daa
bound
jecxz
inc
adc
loope
sbb
cmp
fcompl
xor
pop
sbb
movsl
sbb
xchg
pop
int
dec
xor
les
movsb
rolb
add
loope
and
ret
pop
sahf
xchg
dec
gs
dec
mov
out
movsb
push
pop
aas
xor
dec
pop
xor
popa
insl
stos
aam
shr
pop
movsl
push
jnp
cmp
cmp
push
jns
ljmp
push
or
push
push
out
cmpsl
call
jle
fldenv
lret
adc
sub
arpl
jmp
fsubs
iret
adc
mov
xor
movsl
push
xchg
push
ja
inc
inc
stos
bound
scas
xchg
outsb
mov
push
jmp
and
nop
jg
xchg
inc
in
pop
or
mov
push
shl
fists
leave
stos
mov
or
mov
addr16
adc
subl
into
pusha
lea
push
and
cmp
xchg
and
pop
xchg
xchg
ss
push
jp
jne
inc
or
dec
js
xor
cmp
xchg
inc
mov
dec
mov
es
pop
push
fbstp
test
pop
xchg
mov
or
ds
mov
push
decb
daa
ljmp
adc
lcall
iret
add
sbb
subl
test
push
ret
push
popf
sub
sbb
nop
xchg
ja
dec
movsl
lea
mov
push
repz
push
jno
mov
adcb
xchg
call
xor
add
mov
push
sti
test
sub
add
rclb
lock
jne
and
repz
aaa
mov
insl
in
cmp
jl
sysexit
add
iret
aam
cmpsl
fs
jg
xchg
ss
dec
jmp
sub
xchg
shrl
mov
ds
aad
xchg
or
push
jmp
shlb
fnstenv
pop
add
xchg
jge
inc
adc
call
push
rorl
sbb
daa
mov
cmpsb
cltd
les
mov
imul
cltd
cmp
fs
shl
rorl
jle,pn
pop
popf
rorb
jnp
dec
lods
pop
bound
inc
lcall
push
mov
cltd
push
lcall
jno
and
iret
daa
mov
mov
adc
mov
je
mov
out
loope
or
inc
sub
popa
fsts
jmp
into
scas
xchg
in
addl
lock
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
jmp
cmp
rcl
fcmove
test
aas
xchg
pop
jg,pt
jnp
js
popf
mov
jne
outsb
cmpsl
xchg
popf
add
es
shlb
cs
cmp
cmc
subl
psubsw
mov
push
xchg
push
pop
cli
neg
stc
sbb
push
or
inc
pushl
mov
jnp
rorb
mov
pop
adc
or
jg
inc
repnz
testl
aad
sub
scas
add
imul
rorl
add
int3
jnp
aaa
lock
sbb
pushf
dec
lret
xor
shlb
mov
mov
ftst
add
xor
mov
xchg
iret
mov
shrb
mov
mov
mov
stos
fisubrs
test
fstpt
lds
cld
clc
sub
in
lret
inc
push
cmp
mov
jge
dec
add
xchg
or
stos
xorl
and
mov
mov
popa
xor
das
add
pop
jg
and
test
es
sub
adc
outsb
xchg
fwait
loope
pop
scas
jnp
cmp
lods
cld
das
lods
mov
in
pusha
insb
cmp
xchg
dec
cmp
sub
xor
adc
mov
inc
xchg
adc
adc
cmp
mov
add
pop
neg
adc
lds
hlt
outsl
in
pusha
daa
stos
js
fdivs
fsubp
jne
cmp
call
shll
call
insl
stos
xor
cmp
les
mov
pop
movsl
mov
pop
mov
cwtl
cmc
jne
jns
xor
lods
pop
iret
dec
cli
jo
push
xchg
js
fs
cmc
test
fidivl
int
sti
mov
mov
cmp
cmpsb
xor
pop
sti
arpl
into
jb
cmp
push
lods
imul
add
inc
test
les
pop
or
mov
cmpsl
xor
in
mov
stc
out
xchg
adc
sahf
loop
fs
pop
mov
adc
fdivp
mov
inc
cli
jge
jne
jmp
pop
icebp
jae
lods
mov
fbld
push
mov
xor
in
xor
mov
add
fiadds
add
sub
movsb
pop
into
addr16
inc
dec
adc
mov
xchg
loope
mov
or
aaa
sub
repz
pop
movsl
mov
jnp
pop
xchg
in
pop
mov
out
dec
lret
mov
adc
leave
testl
and
mov
incl
cwtl
in
cltd
push
bound
mov
pop
adc
pop
andb
push
sbb
xor
dec
mov
xchg
call
mov
lcall
cmpsl
add
xor
mov
jmp
lret
into
ret
ret
lret
xor
stos
push
mov
adc
adc
jg
jnp
js
or
or
nop
loope
fs
in
lret
xchg
imul
lods
sub
das
push
push
xchg
leave
lahf
mov
push
push
inc
jmp
js
int3
pop
in
mov
ret
mov
jp
sub
cmpl
iret
loop
cmc
sbb
sahf
arpl
lcall
mov
adc
inc
adc
jle
outsl
cmovns
shll
into
cli
nop
test
cmp
test
sbb
xchg
add
jno
mov
push
dec
mov
sub
stos
sahf
mov
pop
xchg
push
imull
mov
mov
imul
scas
xchg
mov
popf
stos
inc
aas
clc
mov
xchg
sub
or
mov
cltd
dec
and
dec
cli
pop
fsubrl
lcall
pop
scas
cmp
push
aad
aam
dec
xchg
movsl
call
mov
stc
mov
adc
mov
shrb
out
jne
xor
sub
sbb
mov
sub
dec
js
dec
stos
jno
inc
mov
lds
mov
int
mull
cmpsl
stos
push
mov
mov
jns
jo
inc
popf
scas
pop
cwtl
jle
fs
mov
out
cltd
cmp
or
sub
out
mov
mov
btr
add
xor
loopne
dec
mov
adc
push
or
arpl
pop
jle
adc
lock
out
pop
cmp
and
and
pop
dec
and
pop
jae
out
pop
jnp
les
loopne
mov
inc
cli
or
xchg
xor
jmp
jecxz
sbb
jne
sbb
cmp
add
or
add
fwait
outsl
xchg
xor
mov
xor
lcall
or
push
mov
jne
dec
xchg
jg
std
mov
orl
cmovle
fnstcw
es
ja
push
push
push
or
adc
jmp
push
in
jmp
adc
cmp
std
push
out
incb
push
aaa
xor
hlt
mov
fidivl
pop
nop
jle
or
aad
pop
inc
dec
mov
xchg
aas
dec
jecxz
out
sti
repnz
xchg
mov
mov
mov
cmp
adc
inc
stc
jle
repz
jno
pushf
cmp
push
push
decb
lds
xchg
roll
in
into
push
add
mov
lcall
push
xchg
lods
rcr
push
fs
mov
ficompl
leave
clc
stc
fs
enter
das
shl
imul
cltd
xchg
hlt
or
call
ficoml
iret
into
int
fcompl
jecxz
mov
xor
ljmp
push
out
cmp
mov
mov
mov
jmp
lret
rol
leave
shll
sbb
rorb
js
inc
cld
or
pop
sbbb
push
jp
setne
add
xchg
out
mov
inc
sbb
sbb
and
mov
mov
mov
imul
mov
das
mov
mov
push
cmp
xor
push
insb
jbe
and
or
enter
lock
aam
mov
xor
mov
pop
sbb
mov
push
sbb
mov
stos
adc
and
xor
inc
test
sbb
mov
test
aaa
mov
jno
xlat
scas
cmp
cmp
and
mov
aad
test
data16
insb
push
or
out
xchg
push
mov
xchg
jg
call
inc
scas
dec
cmp
imulb
inc
jle
push
jns
fsubrl
cwtl
sub
cmpsl
jp
pusha
andl
leave
es
push
inc
add
lock
das
orb
lods
and
xchg
andl
insb
push
cs
adc
out
in
ficoms
inc
leave
movsb
xor
test
jno
pop
les
push
in
mov
jb
outsl
adc
lods
dec
pop
jle
mov
aad
enter
dec
js,pn
and
outsl
mov
adc
push
test
repnz
call
xchg
les
ficoml
xor
inc
cmp
jb
popf
call
xchg
sub
lahf
into
ret
lods
in
xchg
sbb
mov
pop
sbb
add
add
test
xchg
mov
daa
cmpl
pop
or
leave
add
cmp
jge
imul
hlt
xor
jb
ljmp
scas
sbb
sarl
mov
movb
jl
aad
add
bound
jae
mov
fsubrp
pop
sub
jl
arpl
cmpsl
cmp
enter
and
mov
adc
test
clc
pop
dec
dec
insl
or
fsubl
push
sub
jp
lret
lea
sbb
dec
loop
and
frstor
loope
ljmp
mov
leave
mov
je
dec
mov
scas
addr16
inc
jns
jbe
repnz
xchg
inc
test
pop
mov
fiaddl
aas
push
daa
int3
dec
das
test
xchg
jns
push
sbb
xlat
cwtl
pop
test
mov
push
push
add
add
loope
popa
aad
push
loope
xor
dec
xor
xchg
js
idivb
cmp
lret
lret
shll
add
in
filds
psubb
adc
sub
jp
roll
lcall
sbb
mov
outsl
js
sbb
add
add
or
push
mov
sub
jmp
rcl
ret
into
rcl
daa
jle
mov
jo
js
lds
adc
js
outsl
ret
mov
pop
and
mov
je
xchg
stos
ljmp
inc
mov
lcall
add
jne
int3
cmp
xor
std
add
dec
cli
cmp
add
mov
sbb
xchg
cmp
shrb
cmc
xchg
lea
xor
leave
cmp
and
rolb
bound
or
push
sahf
mov
leave
or
std
loope
lcall
mov
dec
fcompl
mov
jmp
incb
push
das
jecxz
mov
sbb
loope
dec
fnstcw
popa
xchg
jnp
test
pop
jnp
call
rcll
jns
and
fstps
mov
adc
xlat
bound
das
enter
in
dec
push
xchg
xchg
xchg
fcmovb
mov
push
icebp
mov
pop
or
xor
popa
cmpb
ja
fwait
jae
sbb
cmpl
adc
daa
das
lret
imul
push
movsb
in
cs
xchg
lea
sub
adc
ja,pn
xchg
ja
ja
ss
inc
push
jae
push
adc
lahf
xchg
push
push
popa
and
sub
push
andb
jnp
fisubrl
inc
push
push
inc
sahf
xorl
divb
aaa
or
loop
leave
das
test
hlt
in
aad
and
outsb
in
gs
push
add
cmp
daa
cld
mov
test
call
scas
sub
pop
ljmp
dec
imul
fldcw
xor
lret
aas
xchg
shll
dec
insb
enter
dec
sbb
popa
adc
shrb
je
sub
fwait
lret
push
cli
gs
outsb
push
ror
mov
and
mov
xor
inc
das
mov
popa
inc
add
mov
adc
dec
jp
jg
jg
mov
fstps
outsl
bound
fcmovnu
pop
inc
cld
cmp
jge
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
adcl
movl
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
push
add
mov
and
xor
movzbl
adc
mov
adcl
add
incl
mov
mov
push
movl
push
test
movl
je
jmp
lret
fld
scas
inc
adc
lock
push
and
jg
adc
js
jmp
mov
jp
mov
inc
mov
lock
arpl
pop
dec
xchg
push
sub
push
mov
dec
scas
gs
mov
jmp
aaa
pop
cmpsb
xchg
stc
xchg
test
clc
cmpb
cmpsb
daa
lahf
xchg
iret
mov
test
stc
into
movsb
mov
jmp
adc
mulb
inc
call
mov
dec
adc
stc
mov
and
pop
aaa
test
je
xor
ds
push
es
lret
cwtl
aas
or
and
fimuls
scas
jge
js
das
and
xor
ds
jno
popa
add
ljmp
pop
mov
loope
cmpsl
xorl
push
jb
repz
inc
pop
lret
call
rorl
out
mov
jmp
mov
push
mov
add
pop
ja
stc
test
pop
xlat
nop
out
sub
push
mov
pop
sub
push
and
inc
cltd
adc
sub
enter
mov
sahf
mov
repnz
mov
mov
push
or
lcall
xchg
loop
rcrl
push
lods
xor
sub
mov
sahf
jmp
in
mov
mov
cmp
mov
es
and
test
adc
inc
mov
pop
cmp
and
gs
jo
ja
in
pop
gs
shrl
mov
stos
mov
jge
fucom
cmp
jge
mov
cmc
test
and
mov
repnz
dec
sub
add
adc
cmp
nop
or
out
movsb
insb
add
mov
sahf
add
pop
add
xor
inc
pop
jmp
jmp
stos
lods
out
and
aaa
sub
adc
adc
adc
adcl
out
repnz
mov
mov
and
dec
mov
add
mov
mov
imul
xor
mov
add
sub
mov
mov
notl
xchg
addl
jmp
iret
iret
xlat
xlat
iret
xlat
cmpsb
call
and
adc
js
lahf
movsb
add
js
dec
les
das
out
mov
cmpsl
std
hlt
xor
test
scas
mov
cmp
dec
xchg
xor
idivb
ficoml
sbb
arpl
lea
js
cmp
mov
cwtl
jbe
push
sub
subl
fnsave
gs
sarl
xchg
pop
jo
pop
aaa
push
lea
pop
les
inc
inc
repz
mov
insl
notb
mov
out
lods
es
test
push
or
push
push
push
inc
call
xchg
push
mov
mov
pusha
mov
shll
and
rcr
sbb
aam
xchg
jg
xchg
xchg
out
incl
and
jne
ja
in
insb
or
and
or
pop
sbb
rolb
dec
and
sbb
mov
jmp
mov
leave
mov
xchg
sti
out
in
dec
lods
lret
push
add
inc
or
fs
mov
into
imul
xor
jg
fwait
xchg
in
xchg
scas
push
clc
ja
push
xor
gs
fmuls
mov
add
mov
pop
sub
inc
cmp
xchg
pop
stc
mov
sub
mov
add
fdivl
push
pushf
mov
bound
mov
add
pop
jmp
fisubs
pop
cmp
mov
insl
fs
xor
mov
popf
dec
addb
aad
loope
subl
out
adc
and
xor
fldenv
ret
or
lret
pushf
pop
jno
xor
repz
std
pop
lahf
mov
lds
lods
and
mov
pop
mov
movsb
mov
out
outsb
jmp
jmp
mov
mov
in
adc
mov
aaa
mov
and
jae
mov
jg
std
cmp
push
rorb
adc
xor
xorl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
adc
mov
and
mov
add
mov
mov
adcl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adc
add
mov
mov
jmp
cmp
fcmovbe
aad
xorl
inc
icebp
ret
jg
adc
js
jno
daa
jae
popf
jbe
mov
push
je
rcl
cwtl
imul
out
push
sbb
push
insb
pushl
repnz
inc
sub
cmp
pop
xchg
clc
ds
frndint
inc
sub
addl
cmp
roll
clc
inc
movd
jecxz
cmpb
and
daa
sbb
call
es
mov
inc
mov
mov
xchg
stos
push
pop
scas
nop
jg
loopne
pop
mull
stos
fdivrl
bound
lods
dec
lea
mov
adc
mov
dec
fbstp
cli
sub
and
popf
mov
xchg
pop
popf
xchg
mov
sub
shlb
mov
push
mov
stos
xchg
in
outsl
xor
lahf
call
add
daa
add
jge
jb
arpl
dec
push
dec
pop
pop
subl
popa
mov
cmp
cmp
je
aas
frstor
shll
add
lcall
std
test
ja
jecxz
sbb
rclb
push
lahf
fmuls
mov
and
movsl
jmp
xchg
mov
adc
mov
aad
add
outsb
pop
jecxz
sub
ret
lods
push
and
pop
mov
insb
std
jecxz
cld
sbb
and
inc
push
xchg
mov
cmpsl
adc
sub
jae
movsb
sbb
mov
mov
in
ss
and
mov
mov
push
or
lods
pop
mov
fcomps
inc
push
mov
repz
pop
ret
sbb
sbb
nop
mov
pop
dec
mov
js
push
and
subl
xchg
es
cs
jmp
mov
pop
cmp
jns
sub
xchg
mov
out
sbb
lret
shll
aam
mov
inc
loopne
test
mov
xor
sbbl
add
movl
cmp
movl
jmp
into
ror
leave
push
or
cli
lds
call
jle
js
cmpsb
pop
xor
adc
pop
popf
pusha
das
outsl
mov
cs
jb
popf
mov
out
sub
mov
lret
inc
sbb
rclb
nop
ret
add
push
push
and
sti
clc
dec
inc
in
and
in
aad
andb
ret
mov
inc
dec
outsb
sbb
dec
data16
sti
push
sub
adc
add
pop
mov
sti
in
xlat
cwtl
lret
xor
ljmp
ret
jne
xor
sahf
mov
cmp
imul
out
enter
mov
aas
xchg
fstl
ret
dec
les
into
out
shll
push
push
nop
imul
dec
push
fisttpl
lods
and
rcrl
adc
movsb
and
or
jl
mov
pusha
mov
xor
stos
or
and
xchg
add
mov
aad
inc
mov
call
inc
xor
out
mov
repnz
dec
jmp
daa
push
fsubr
in
int3
cli
test
push
pushf
dec
adc
sub
mov
adc
push
fnstenv
out
mov
xchg
mov
dec
into
xor
sbb
mov
jl
xchg
inc
fimuls
loope
push
cmp
fsts
loop
pop
add
mov
sub
lea
add
icebp
rcll
popf
sub
int
insl
leave
mov
repz
adc
sub
sbb
dec
das
pop
stos
enter
mov
loop
cmp
outsl
push
mov
pop
xor
ret
pushf
data16
iret
jmp
fistl
pop
mov
fidivrs
xchg
std
xchg
inc
jge
icebp
and
and
nop
cmp
shrb
out
xchg
les
scas
sahf
loope
inc
movsl
ljmp
std
or
xor
leave
add
repz
and
test
add
popa
cmpsl
inc
add
jne
orl
call
and
mov
jmp
aas
into
leave
int
into
fwait
orb
test
jo
sarl
adc
js
xlat
popf
and
or
mov
stos
xchg
pop
xchg
push
push
out
imul
xchg
hlt
js
push
fsubrs
ljmp
movsb
scas
aad
or
int3
ja
sbb
bound
ljmp
in
sub
push
fdivs
jmp
sub
or
aas
push
adcb
push
ret
xlat
add
outsl
xchg
cli
nop
push
shlb
lds
and
xchg
adc
mov
dec
or
movsl
add
push
mov
xlat
inc
addr16
movntq
out
fbld
cmp
test
mov
rcrl
dec
inc
mov
sub
adc
inc
gs
idivb
xor
repnz
aaa
hlt
mov
imul
fldl
jno
pop
add
jg
mov
mov
xor
mov
add
arpl
lcall
pop
sub
subb
test
in
rcrb
aam
repnz
push
mov
js
pop
jg
xchg
mov
enter
je
loopne
js
out
xchg
seta
mov
int3
sub
flds
mov
lea
adcl
cmpsl
bound
sub
fcmovnbe
in
aas
xchg
inc
or
jo
dec
xor
hlt
in
shll
jecxz
int3
cmp
and
in
jmp
dec
xchg
xchg
and
shr
mov
xchg
mov
iret
sub
mov
jne
jg
sbb
dec
add
lock
loopne
sub
test
sub
cmp
out
sub
mov
push
pop
xchg
dec
arpl
fidivrs
jo
xchg
daa
mov
in
pop
xor
xlat
pop
cmc
es
cmp
in
pop
push
and
test
mov
jmp
dec
jge
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
mov
movl
xor
add
cmp
movl
je
pushl
subl
pushl
call
jmp
les
iret
rcr
leave
push
push
in
je
pop
cmc
ds
sarl
adc
js
insl
fs
lods
push
pop
mov
in
dec
push
jae
jne
dec
cltd
rcll
cmp
pushf
push
clc
or
sbb
and
mov
or
stos
inc
pop
xor
dec
jb
clc
test
movsl
lahf
js,pt
lock
popa
nop
fnstsw
in
and
mov
out
cmp
dec
mov
adc
jmp
aas
mov
aaa
imulb
mov
out
ret
cmp
push
rcrl
or
fimull
mov
notb
mov
mov
inc
inc
mov
jl
push
mov
sbb
sub
test
in
sbb
sub
ljmp
divl
push
push
ja
daa
into
pop
subb
fsubs
rolb
popf
jns
idivl
testl
pop
icebp
xchg
lods
add
hlt
sub
lret
shrl
mov
mov
inc
outsl
push
fwait
xchg
mov
xchg
mov
cmpsl
xchg
push
mov
pop
ja
stos
or
dec
insb
cli
je
arpl
mov
rcl
iret
push
pusha
call
jns
lret
cli
mulb
aam
jbe
sbb
xor
int3
popcnt
xor
shll
xlat
incb
int
and
insl
inc
push
jmp
enter
andl
jecxz
icebp
xchg
mov
outsb
mov
mov
pop
sahf
push
and
stos
and
adc
mov
int3
adc
adc
xor
iret
hlt
stos
movsl
mov
mov
jae
loop
pop
scas
outsb
je
sarb
xor
cmp
aam
push
clc
lea
fsubr
movsb
add
test
ljmp
icebp
mov
lahf
stos
pop
in
lret
inc
sbb
cld
scas
or
mov
adc
fsubrs
gs
sbb
or
int
jp
push
arpl
lods
and
push
sbb
mov
ja
cli
sub
inc
in
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
jmp
lret
cmp
rcr
leave
mov
and
fwait
push
jg
adc
js
psrld
sub
pop
cmp
repz
sarb
add
sub
jg
sbb
push
push
fsts
and
arpl
popa
sub
adc
jle
mov
fndisi(8087
rcll
xlat
mov
fs
jb
or
out
mov
sti
and
lds
cld
jae
stos
pop
xor
mov
pop
out
mov
inc
mov
les
int
xchg
adc
rcrl
dec
mov
jle
push
mov
in
dec
mov
pop
mov
lahf
jno
pop
fs
rclb
fdivrl
mov
jmp
stos
jl
jmp
sbb
iret
push
nop
pop
cmpsb
test
outsl
pop
jne
loope
lock
pop
sti
dec
in
mov
mov
push
sbb
lret
add
scas
dec
dec
scas
push
pop
push
icebp
lds
adc
lahf
dec
push
ljmp
gs
enter
sbb
or
adc
sub
js
sti
push
push
inc
pop
cmp
js
arpl
and
jb
xor
in
sbb
xchg
cmp
mov
stos
xchg
xchg
insl
or
sbb
call
insl
sub
mov
cmp
daa
mov
in
adc
push
mov
shrb
push
dec
stos
jp
ret
stc
cmpsb
adc
je
lods
sbb
push
movl
cltd
pop
mov
insl
loope
dec
mov
dec
cmpsl
xor
ret
dec
pop
pushf
sub
xchg
scas
cmp
imul
mov
ja
fwait
lock
xor
pop
ds
sti
pop
pop
and
adc
popl
pop
sub
je
aaa
aas
mov
push
addr16
iret
data16
mov
fsts
shl
sub
sub
push
mov
xchg
xchg
inc
cwtl
lds
and
icebp
mov
rclb
inc
jp
adc
fwait
cwtl
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
rcl
xlat
int3
aad
fcmovnu
ss
inc
sub
fistpll
aad
js
jle
js
xchg
rol
jnp
mov
inc
js
mov
fldl
imul
ds
ja
ja
jns
adc
shrl
mov
xchg
lret
xor
pop
iret
adc
xor
cwtl
jnp
xor
addr16
mov
jns
cmpsl
lods
mov
popf
iret
inc
push
test
popa
lret
push
push
push
enter
dec
xlat
push
dec
lret
xor
xor
cltd
xchg
xor
test
scas
xchg
cmp
sub
data16
int3
mov
cli
mov
ret
sbb
mov
das
cltd
jb
pop
test
cmp
inc
xchg
sbb
in
nop
aas
and
cli
jb
in
jae
mov
ss
push
sbb
mov
pop
stos
cld
jge
loopne
sub
cltd
je
fcmovb
add
in
sbb
shrb
cmp
mov
lods
pop
repz
fcoml
ret
lcall
adc
push
mov
mov
jne
xor
hlt
cmp
clc
and
sbb
popf
andnps
in
or
hlt
jb
scas
mov
push
adc
ds
cmp
test
mov
repnz
shll
pop
cmpl
pop
fstp
movsl
mov
push
push
inc
mov
out
xchg
lds
stc
mov
xor
out
sub
inc
into
sbb
push
dec
inc
cs
cmp
ss
test
test
sahf
sub
addr16
pop
dec
stos
adcl
jno
in
int3
fstpl
out
int
mov
imul
adc
into
sti
and
stc
push
sub
mov
out
inc
push
out
mov
lock
xchg
sbb
sbb
jb
ljmp
pop
xor
dec
mov
adc
mov
loop
mov
cmp
imul
popa
and
inc
lods
aas
lock
mov
sub
mov
les
cwtl
aas
mov
inc
xchg
or
add
add
add
sarl
leave
cmp
pushf
mov
test
fstpt
adc
js
xchg
mov
ss
fcmovne
call
inc
cmp
lods
hlt
lcall
mov
jbe
imul
fsub
mov
mov
shll
jle
xchg
jmp
mov
into
sub
testl
dec
mov
add
xor
rcrl
xchg
mov
pushf
add
sbb
lcall
movsb
out
test
movsw
dec
mov
xchg
dec
dec
xchg
les
cli
inc
and
cmpb
inc
or
mulb
mov
es
testb
cld
sbb
movsb
outsl
adc
in
fwait
jge
das
out
das
add
cmp
vshufps
mov
subl
enter
lock
sbb
pop
popa
mov
std
sbb
push
scas
call
dec
pusha
out
dec
mov
mov
daa
pop
or
dec
int
rol
add
lock
sub
icebp
mov
repz
ja
stc
or
and
cli
mov
js
jbe
xchg
mov
call
sub
mov
test
lcall
push
push
push
push
stc
pop
mov
xchg
push
pop
dec
jns
xchg
out
mov
and
adc
cmp
or
aad
loopne
sbb
sarb
cmpsb
xorb
lcall
aam
addr16
inc
add
leave
mov
dec
addr16
or
sbb
int3
std
cwtl
push
cs
dec
dec
push
fstpt
out
adc
push
mov
iret
dec
and
inc
cmp
xlat
jg
jecxz
mov
mov
lret
xchg
aam
cmp
loope
test
std
pop
sarb
push
jb
fwait
lods
pop
push
xchg
and
lret
sub
jmp
ret
aas
fxch
rcr
mov
fldt
js
jg
adc
js
cltd
mov
lret
xor
dec
adc
cmp
inc
xlat
jno
popa
fbstp
push
jge
popf
testl
jb
push
fistl
pop
cmp
sbb
int
mov
test
in
das
shll
and
xor
mov
jmp
xor
add
pushf
rorl
stos
push
aad
dec
addr16
inc
pop
lcall
sbb
mov
imul
negb
sub
inc
addl
xor
repnz
shlb
data16
sarb
push
dec
mov
xor
mov
nop
stos
push
adc
sub
or
gs
les
pusha
jbe
and
ljmp
sbb
mov
shlb
xchg
out
xor
mov
xchg
test
inc
mov
adc
sbb
mov
hlt
aam
mov
or
cmp
rcll
test
jbe
or
sbb
mov
push
add
push
lret
sub
adc
repz
aam
inc
andb
sub
sti
sbb
cmp
ficomps
or
in
stos
xor
movsb
scas
mov
popf
adc
pop
sbb
es
add
movsl
sbb
lock
je
sub
push
xlat
and
in
pop
test
nop
sub
scas
push
pop
fnsave
push
in
sbb
in
shl
loop
jns
call
push
gs
mov
and
in
movsl
cwtl
or
outsb
mov
pop
adc
sub
push
pop
and
shlb
repnz
sub
das
dec
mov
ss
out
xchg
shll
push
or
push
stos
bound
leave
outsl
mov
stc
rcll
cs
aas
push
pop
push
add
sbb
mov
cmc
lock
pop
sbb
sbb
lds
pop
lods
es
jmp
int
int
fnstcw
test
jle
fidivrs
adc
js
cmpb
pusha
cmpsb
nop
in
ja
pop
loopne
out
and
addr16
mov
push
decl
movsb
dec
in
iret
push
jl
jge
addl
mov
and
push
ret
icebp
mov
add
ret
pop
jb
sbb
or
adc
enter
pop
int
push
test
lret
add
inc
mov
push
subl
out
jl
cmp
scas
jo
xor
or
orl
mul
mov
mov
int
iret
lcall
enter
nop
shrb
and
scas
dec
cmp
pop
into
les
jnp
inc
fs
and
jo
int
out
jne
push
xchg
test
in
pop
arpl
push
not
fdivr
mov
dec
jb
out
es
pop
mov
in
xor
cmpsb
pusha
fildll
cmp
or
inc
pushf
ds
mov
ret
in
jge
sbb
mov
out
push
scas
int
pop
icebp
js
outsb
add
mov
inc
mov
xchg
lret
sbb
cmp
sahf
mov
dec
scas
inc
sar
pushf
call
mov
adc
movsl
cld
mov
xchg
sahf
loope
push
mov
lods
mov
push
xchg
mov
xlat
pop
in
or
cltd
xor
mov
sub
cmp
sarl
dec
inc
scas
in
pop
sub
jl
mov
in
xor
pop
mov
cmp
xchg
ficomps
std
sahf
imul
xchg
mov
cmp
cmpsb
dec
inc
test
mov
clc
lock
shll
pop
push
sbb
cmpsl
push
into
adc
inc
dec
push
mov
xchg
sub
xchg
scas
mov
push
pop
jne
std
lahf
mov
lret
enter
mov
or
rclb
leave
push
hlt
dec
mov
jmp
iret
enter
fcmovnu
xlat
push
shrb
test
sub
jg
adc
js
sbb
mov
cs
fidivrl
repnz
gs
popa
adc
out
cmp
das
pop
test
xor
and
rorb
xchg
aam
inc
fwait
sub
imul
dec
stc
push
add
repnz
iret
std
adc
sbb
test
leave
xlat
add
dec
ds
test
xchg
cmp
lea
mov
push
sbb
outsl
nop
add
and
loopne
and
cmp
lcall
pop
cld
pop
add
shrl
repnz
jge
xlat
pusha
mov
call
sub
rclb
dec
sbb
fcmovnu
add
movsb
and
outsb
xchg
and
adc
repz
inc
mov
cmpsb
js
sub
enter
out
daa
psubd
mov
out
lods
sbb
fadds
and
mov
xchg
ret
mov
push
mov
cmp
push
push
leave
out
lods
mov
stos
repnz
popa
jge
leave
aam
mov
sahf
jmp
mov
in
mov
cmp
dec
fimuls
pop
xor
dec
cmc
test
inc
jno
aas
cli
enter
push
mov
movsl
adc
popa
rol
pop
dec
inc
push
adc
cwtl
sti
jge
mov
aam
push
ret
je
and
adc
sbb
sti
hlt
jl
push
pop
sub
in
sbb
xor
inc
pop
jnp
mov
loop
fstl
arpl
pushf
mov
mov
and
fidivs
cmp
pop
adc
ljmp
fwait
je
jge
fistl
mov
out
stos
loope
add
mov
pop
mov
xchg
ss
ds
jp
push
jae
lods
repz
push
icebp
rorl
loop
push
aaa
pop
gs
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
jmp
int3
lret
fxch
leave
mov
push
hlt
mov
jg
adc
js
fcoms
and
into
jl
push
lock
dec
pop
mov
mov
pop
mov
movsb
test
pop
sub
fbstp
and
data16
nop
icebp
ret
xor
pop
outsl
jbe
pushf
xor
jle
push
mov
mov
mov
pop
fwait
cmpsl
je
test
ljmp
xchg
cli
les
inc
xchg
jnp
dec
mov
daa
shlb
hlt
fs
aas
mov
ss
pop
mov
add
stos
sub
mov
and
aaa
clc
jp
popfw
push
pusha
and
dec
in
lea
enter
mov
dec
arpl
dec
add
test
sti
nop
xlat
xchg
push
push
adc
sbb
fstpl
adc
in
sub
rcll
cwtl
je
add
adc
aam
xor
jno
and
mov
les
xor
clc
add
fucomp
jo
clc
movsb
mov
cmc
hlt
scas
push
xor
insl
mov
xchg
das
jecxz
jmp
mov
push
lods
cmp
icebp
mov
push
sbb
adc
adc
icebp
dec
call
dec
push
sbb
or
mov
cld
je
pop
ljmp
xchg
xchg
cmp
dec
out
call
sub
pop
js
jp
fnstsw
add
mov
push
and
xchg
jmp
inc
test
or
js
sub
or
scas
sub
cmp
int3
scas
shlb
mov
dec
add
pop
cmp
and
popa
imul
inc
sar
adc
popf
lcall
xchg
xchg
push
aad
jne
aas
sbbb
xor
push
mov
or
xchg
or
sahf
movsl
or
jmp
fistl
cld
sbb
das
movsb
jecxz
mov
pop
fbstp
cmc
sub
out
enter
repnz
pushf
push
data16
mov
imul
or
xchg
test
gs
adc
rcll
mov
ret
xor
add
jmp
int
int
rcl
int
cmp
sbb
fsub
jg
adc
js
nop
adc
in
lods
pop
push
push
mov
push
test
in
jae
dec
cld
or
int
adc
add
pop
popa
inc
out
jg
imul
in
cmp
int
jl
push
addr16
jge
mov
aaa
fsubs
notb
clc
lock
insb
cmp
and
test
mov
cmpsl
js
dec
lock
cmp
pop
in
add
outsl
ss
xchg
sti
mov
sahf
and
jne
mov
jnp
out
or
in
push
dec
mov
mov
popf
ret
std
imul
sbb
cmp
jecxz
stos
sbb
lahf
push
std
push
xchg
add
shr
stos
lgs
adc
movsb
xor
dec
js
icebp
jl
xchg
add
inc
iret
xor
aam
push
aas
popa
pop
test
jb
cmp
dec
pop
push
add
das
cmpsl
fsubr
lret
clc
jne
sbb
cmc
lea
imul
nop
ja
cmp
push
adc
sbb
inc
pop
push
ljmp
and
js
lods
or
add
aas
fwait
sahf
push
es
and
xchg
jae
mov
andb
and
mov
dec
and
pop
fbld
leave
adc
enter
mov
sbb
dec
xor
cmp
dec
mov
jmp
inc
iret
je
in
xchg
sahf
xchg
cmp
sub
mov
inc
jge
jle
das
rcrl
dec
xor
mov
insl
xchg
mov
and
fwait
sub
aas
fists
insl
and
fld
sub
repnz
cmpsb
push
cmp
fiadds
nop
and
mov
or
lret
jne
xchg
test
fdivrs
ret
ds
lahf
sub
hlt
and
xchg
xchg
mov
add
inc
jp
sub
mov
scas
add
add
add
lret
xlat
vpsubusw
lret
xor
fs
out
js
jle
js
bnd
mov
mov
lahf
xor
clc
mov
push
sar
test
mov
mov
shll
adcb
and
cmpsb
ljmp
insl
and
scas
dec
xlat
ss
and
cli
push
and
gs
lcall
sbb
cmp
insb
inc
in
mov
pop
mov
cwtl
xor
adc
enter
jo
sbb
push
ficompl
fcoms
sub
dec
test
cmp
xorl
into
add
fwait
inc
sub
mov
jmp
adc
xor
outsb
sbb
cmpsl
jbe
fcoms
fwait
push
ljmp
mov
push
ljmp
sbb
mov
push
xchg
jmp
je
mov
and
fs
sbb
pop
stos
cwtl
orb
call
mov
out
inc
mov
cmp
xchg
jbe
outsb
jb
pop
add
pop
mov
adc
xchg
adc
filds
data16
test
gs
ss
pop
jb
adc
mov
push
stc
jns
insl
xor
cltd
mov
push
iret
pop
je
and
cmp
and
pop
pop
and
bound
xchg
adc
push
test
mov
mov
roll
xor
cmc
sub
push
aas
aam
mov
out
and
rcll
xlat
fs
movsb
ret
jno
shll
lret
adc
xorb
decb
jo
add
loopne
mov
lret
nop
dec
jne
popf
push
sub
dec
icebp
xchg
jle
imul
dec
daa
xchg
or
adc
rcrb
inc
xor
sub
sub
push
sbb
incl
mov
sbb
lock
idivb
add
or
bound
sbb
mov
inc
xor
movsl
jne
in
repnz
shr
xor
add
enter
iret
rcl
mov
std
sub
mov
jg
adc
js
xlat
into
mov
push
stc
fisubl
adc
call
out
enter
jo
imul
loop
jb
push
fstpt
xchg
hlt
jmp
mov
mov
loope
dec
or
test
adc
mov
fsubrl
loopne
sub
lock
ja
pop
test
dec
mov
push
and
fwait
shl
rorb
popa
mov
gs
mov
std
jg
mov
or
je
xchg
cwtl
jno
xor
test
mov
cmp
cmp
icebp
push
mov
xor
movsb
and
imul
adc
repnz
mov
imul
gs
pop
popf
fcoms
and
rcr
add
in
and
test
outsl
push
push
arpl
stos
push
cmpsb
in
mov
dec
scas
outsb
mov
pop
cmp
popf
add
add
fwait
idivl
scas
xchg
xchg
bound
icebp
into
push
add
sbb
test
loope
add
jo
push
and
mov
dec
mov
sbb
fs
mov
xchg
repz
adc
out
mov
orl
in
rcrl
dec
add
in
xor
lcall
sbb
imul
addb
jb
jo
pushf
shll
mov
es
mov
lea
ret
push
jg
fwait
mov
push
std
in
lds
xor
movsl
dec
das
sbb
fsub
cmpsl
pop
xor
icebp
jmp
gs
push
or
aad
jl
ja
sahf
js
and
jl
xor
pop
lret
into
rcll
fmull
mov
sub
sbb
xchg
pop
sub
shll
arpl
add
pop
mov
lcall
xchg
insb
fisubrs
cmp
lret
shl
sti
mov
lods
inc
lds
les
inc
loop
imul
adc
dec
or
xor
add
into
leave
leave
rcr
fldcw
stc
push
bound
jmp
adc
js
xlat
xlat
es
scas
rcrl
xchg
jns
push
mov
adc
xor
mov
rcr
lahf
mov
stc
jl
add
dec
pop
insl
fucomi
pavgw
or
movsb
movsb
push
pop
data16
sahf
clc
scas
decl
mov
push
nop
insl
in
sbb
xor
movsb
and
sub
mov
inc
pop
mov
call
lcall
les
dec
lds
lahf
jbe
icebp
pop
sahf
ja
lret
adc
in
lea
mov
sbb
mov
sbb
inc
pusha
add
hlt
repz
xor
aad
mov
hlt
and
jbe
xor
fwait
outsl
jae
das
int3
popf
std
mov
mov
rcrb
xor
add
sub
aas
test
lock
mov
sbb
jl
and
fistpll
rcrl
in
ljmp
pop
test
xor
loopne
cld
ret
push
jp
mov
mov
dec
mov
pop
movsl
fidivl
mov
cmp
pop
repnz
add
and
xchg
hlt
adc
mov
mov
push
jg
fsts
or
xchg
and
in
ds
or
xchg
jg
and
or
fs
insb
jb
mov
push
std
outsb
lahf
or
int
bound
mov
adc
pop
mov
sub
xchg
pop
stc
and
orb
je
mov
rcrl
pop
into
outsl
movl
scas
ja
lahf
mov
mov
xor
xchg
lea
xchg
push
xor
call
jae
ljmp
xchg
cli
sub
mov
hlt
adc
lods
dec
adc
pop
imull
in
mov
bound
cmp
mov
xchg
mov
pop
add
sbb
aam
mov
adc
or
xor
or
outsl
lea
cmp
jne
mov
jmp
mov
mov
jmp
mov
xlat
movsb
inc
jne
in
mov
jle
js
add
xlat
sub
fistl
pop
shlb
cmp
in
movsb
movsl
clc
shrb
movsl
inc
movsb
fldcw
mov
xor
call
sbb
pop
cmpxchg
addr16
jbe
xchg
lods
enter
cwtl
pop
in
add
daa
or
inc
sub
push
insl
mov
pop
dec
pop
loopne
mov
call
mov
add
adc
cmc
cmp
daa
aaa
xchg
enter
ljmp
mov
gs
push
xor
push
add
ret
mov
jae
adc
adc
mov
arpl
and
xor
mov
lcall
or
mov
lock
sub
iret
lock
hlt
xor
mov
inc
movsl
imul
bound
mov
mov
cmp
das
add
xchg
pop
and
inc
js
mov
stos
add
lret
pop
adc
jbe
testl
hlt
dec
cmc
pop
test
mov
inc
aas
xor
sti
sbb
cmc
out
out
sub
mov
dec
out
mov
cmp
inc
repz
xchg
cli
fnstsw
cmp
sbb
dec
and
iret
or
fidivs
cmpsb
in
cmp
pushf
stos
jne
jl
xor
sbb
mov
jg
in
repnz
outsb
scas
mov
and
dec
add
das
xchg
and
ret
xchg
mov
outsb
test
out
mov
aaa
out
mov
inc
stc
push
ja
mov
bound
xor
sbb
jecxz
js
ret
mov
jg
fsubl
cmp
icebp
adc
lds
jbe
lods
push
xor
gs
cmp
int3
js
aaa
mov
stos
repnz
push
ljmp
cmp
cld
bound
xor
add
jmp
cmp
rol
jb
dec
pop
lea
leave
mov
jg
adc
js
jecxz
les
xchg
mov
lret
jmp
add
add
cmpsb
out
lods
data16
inc
mov
xchg
loopne
add
fldt
insl
mulb
jg
dec
test
pop
std
inc
cmp
sbb
daa
adc
imul
in
xor
push
push
out
test
cmp
jnp
push
inc
fwait
je
frstor
shrl
in
jl
in
mov
enter
fimuls
or
rorl
cld
push
scas
ret
fstpt
push
pop
fcmovnu
push
jl
cltd
jns
lods
sub
out
popa
mov
outsb
add
loope
repnz
imul
jmp
hlt
cmpsb
mov
icebp
adc
arpl
add
xor
iret
int
test
decl
mov
fcomps
xchg
jns
fcomip
dec
mov
loopne
out
mov
or
test
bound
mov
iret
loop
pop
lcall
adc
xlat
adc
jp
mov
lds
jl
fsubs
or
test
arpl
mov
push
enter
jmp
outsl
in
jmp
stos
icebp
loope
stc
sti
leave
mov
loop
mov
mov
sbb
xchg
and
cmpsl
push
dec
aam
and
cli
loop
cld
lds
jo
shlb
mov
addb
aaa
cmp
inc
add
pop
add
lea
mov
inc
push
repz
in
xchg
sbb
sub
cli
outsl
imulb
mov
es
out
jb
leave
push
scas
sbb
xor
sahf
outsb
mov
xor
pop
and
lret
fs
pop
lahf
jg
mov
mov
stc
pushf
out
fisubrs
iret
dec
sbb
or
jns
mov
xchg
jmp
push
push
add
imul
add
rol
enter
lret
pop
jp
xchg
pop
ds
jle
js
sub
sbb
mov
adc
add
ror
lods
test
mov
roll
xchg
pop
jl
xchg
call
and
sub
scas
jnp
jg
xor
aad
or
addb
add
enter
dec
cltd
test
xchg
push
xchg
cmp
push
inc
jo
add
jne
rol
cs
fisubrs
out
xor
jle
mulb
stos
mov
aaa
add
pop
push
pop
ret
cwtl
mov
das
mov
push
stos
and
outsl
ss
dec
ss
cmp
out
jp
rolb
cmp
mov
sbbb
push
andb
stos
int
sbb
stc
jl
data16
adc
push
dec
adc
push
scas
in
movsl
or
adc
hlt
testl
pusha
mov
popa
repnz
jmp
jno
loope
or
adc
push
jmp
lret
xlat
add
fdiv
mov
hlt
pop
es
mov
push
and
push
fdivs
and
inc
fwait
pusha
mov
ljmp
push
inc
mov
push
xorl
mov
inc
mov
scas
in
dec
xor
mov
mov
mov
mov
incl
pop
sbb
loop
adc
js
aad
pop
jle
mov
xor
in
or
sbb
xchg
xor
cmp
add
mov
adc
cmp
mov
enter
sahf
cli
lods
int3
sbb
xchg
xor
lret
dec
insb
inc
js
push
out
adc
icebp
fsts
xchg
fldenv
lds
hlt
insb
mov
ret
aaa
push
enter
aad
or
xor
fidivrl
lds
xchg
xchg
pop
adc
dec
push
mov
in
push
in
fnstenv
clc
push
sbb
mov
and
jmp
mov
pop
xchg
xor
mov
in
out
aad
mov
or
fisttpl
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
mov
iret
leave
rcr
aad
mov
rcll
adc
js
test
mov
xor
inc
call
call
sbb
mov
in
hlt
lds
sub
mulb
xchg
push
xlat
out
ljmp
insb
and
divl
push
add
xchg
xchg
imul
sub
mov
mov
repnz
mov
icebp
inc
dec
mov
mov
sub
popf
mov
cmc
sub
outsl
sarl
imul
adc
sub
test
mov
scas
mov
sbb
ror
inc
and
mov
mov
sbb
inc
mov
xchg
mov
inc
push
aas
nop
int
sbb
icebp
mov
jno
fstl
pop
idivb
and
loop
or
lcall
xchg
cli
dec
mov
jg
cmp
jnp
push
jmp
jno
fdivr
repz
loop
adc
sub
sahf
adc
imul
fmull
sub
imul
pop
into
sarb
sbb
sahf
inc
cmc
mov
mov
jmp
test
mov
xor
cwtl
and
dec
xor
push
int
pop
lcall
cwtl
shr
in
ficompl
repnz
shrl
inc
loop
mov
aas
and
cmp
movsl
add
dec
dec
mov
pushf
pop
sub
push
out
jl
cmp
ret
or
es
lock
scas
in
mov
in
into
iret
shlb
inc
push
push
add
mov
mov
sbb
mov
js
jno
xor
xorl
jne
inc
xchg
loopne
divb
lods
nop
mov
je
xchg
xor
jo
je
bound
or
rorl
xor
dec
cld
aam
shll
jmp
out
cmc
fists
xchg
cltd
cli
inc
outsl
pop
out
push
mov
call
dec
aaa
inc
push
add
inc
add
dec
xor
add
pop
mov
pop
jmp
rcl
ret
ror
aad
andb
xchg
scas
sbb
jg
adc
js
cltd
fnsave
test
and
loop
sbb
divl
jno
jge
scas
div
cmpsb
add
outsb
mov
outsb
sbb
mov
and
mov
fs
xor
scas
int
pop
push
sti
inc
scas
dec
lods
outsb
xchg
sub
movsb
push
sbb
xchg
iret
pop
mov
cltd
dec
jecxz
out
push
jp
call
hlt
xor
imul
adc
popf
add
xchg
inc
sbb
stos
add
pop
lods
out
enter
jmp
dec
or
lret
push
nop
adc
inc
inc
mov
sar
pushf
or
or
ljmp
sti
cmpsl
jmp
bound
cs
or
lcall
jge
mov
add
loop
test
ss
iret
and
pop
push
mov
xor
into
push
push
xor
jne
daa
ss
jbe
push
push
jnp
xor
adc
xchg
mov
or
out
lret
ret
xor
in
dec
aas
ja
push
nop
cmpsl
insb
fidivrs
lcall
dec
test
cltd
data16
pop
ret
cld
xor
daa
xchg
data16
jns
xor
imul
push
xchg
subb
mov
xchg
jl
scas
dec
stc
popa
mov
add
rcrl
cmp
test
popf
movsl
cmp
mov
idivl
push
jns
fmuls
loopne
xchg
sub
ret
jbe
xrelease
mov
adc
mov
scas
mov
sub
cli
lods
add
flds
and
call
pop
mov
shll
dec
je
das
shlb
inc
xlat
adc
in
mov
lds
jns
xchg
and
inc
mov
dec
pop
push
jno
je
test
jbe
xchg
or
repz
ja
dec
jb
and
mov
loopne
or
popf
jmp
push
fstpt
cwtl
rclb
in
add
xchg
xchg
mov
cmp
pop
jmp
into
iret
into
ror
aad
aad
mov
stos
xchg
xor
jg
adc
js
push
sub
add
push
int3
sbb
outsl
out
pop
add
jecxz
jae
sub
mov
pop
mov
pushf
shll
adc
xchg
sub
addr16
push
leave
pop
insl
insl
stos
adc
add
enter
jnp
adc
jns
mov
fisttps
sti
ja
fnstcw
jp
jae
pop
ret
insl
lock
xor
jno
inc
pop
adc
fistl
push
sub
sti
mov
sbb
mov
test
or
push
pop
xor
sbb
mov
pusha
mov
or
pop
jle
xchg
add
xchg
ljmp
repnz
popa
pop
sbb
ja
xchg
and
and
mov
cmp
jbe
add
mov
lods
je
xor
test
gs
mov
test
xchg
sti
aad
adc
and
dec
int3
mov
and
push
adc
pop
jns
ja
sarb
cmp
inc
adc
sub
and
mov
mov
adc
adc
lcall
sub
cmpsl
int
scas
cs
jl
mov
and
cmp
dec
in
les
adc
scas
inc
outsl
mov
add
test
imul
jb
mov
outsl
cmp
stc
pop
jno
xor
sub
loop
shlb
adc
loope
cmp
imul
das
jecxz
adc
fldt
adc
cmpsl
push
mov
dec
sar
jns
repnz
lret
cmpsb
dec
cwtl
ret
pushf
and
cmp
mov
add
scas
mov
lcall
cmp
pop
fs
sub
add
hlt
ret
xchg
dec
mov
gs
rolb
int3
inc
dec
mov
jecxz
adc
mov
inc
mov
lcall
mov
mov
ret
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
add
add
das
and
add
add
pop
add
add
add
add
and
pop
aam
add
add
add
add
add
add
add
add
push
aam
add
add
xchg
inc
add
imul
add
add
xor
jp
jp
outsb
je
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
aad
add
fildl
add
rolb
add
aad
add
rolb
add
add
add
add
add
loope
add
xlat
add
ss
add
adc
add
inc
jmp
add
sbb
add
flds
add
flds
add
flds
add
add
dec
flds
add
add
flds
add
add
add
sbb
add
flds
add
flds
add
add
rcr
add
loopne
add
ljmp
add
add
push
fiaddl
add
fiaddl
add
add
fiaddl
add
fiaddl
add
add
dec
fiaddl
add
add
fiaddl
add
add
js
add
xchg
add
mov
add
lcall
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
fildl
add
fildl
add
add
push
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
faddl
add
add
sub
add
cmp
add
dec
faddl
add
add
data16
add
add
mov
add
pushf
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pusha
fldl
add
add
test
add
mov
add
sahf
fldl
add
add
fcmovu
add
out
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
pop
fiadds
add
add
fiadds
add
add
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
add
mov
add
cwtl
filds
add
filds
add
filds
add
filds
add
filds
add
filds
add
loopne
add
add
sub
add
loopne,pt
add
add
data16
add
add
xchg
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
loope
add
add
push
loope
add
add
jb
add
test
add
mov
loope
add
loope
add
loope
add
add
add
loope
add
add
adc
add
and
add
xor
add
loop,pt
add
add
pusha
loop
add
add
xchg
add
cwtl
loop
add
add
int3
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
xor
add
inc
jecxz
add
add
fs
add
add
mov
add
mov
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
in
add
add
dec
in
add
add
push
add
jl
add
mov
add
cwtl
in
add
in
add
in
add
in
add
in
add
in
add
add
ds
add
add
pop
in
add
add
jle
add
nop
in
add
add
mov
in
add
in
add
in
add
in
add
out
add
out
add
out
add
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
add
pop
out
add
add
jbe
add
xchg
add
cwtl
out
add
out
add
out
add
out
add
out
add
call
add
and
add
xor
add
dec
call
add
callw
jp
add
xchg
add
xchg
call
add
mov
add
call
add
in
add
lock
add
or
add
sbb
add
add
add
or
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
add
jns
je
insl
add
fwait
add
jo
imul
je
insb
add
ljmp
jo
add
je
ja
jae
add
add
jb
outsl
insb
insb
add
add
imul
add
outsl
ja
outsl
ja
jb
add
add
imul
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
xchg
add
popa
insb
outsb
jne
add
add
jb
outsl
imul
sbb
ja
jae
popa
je
add
outsl
ja
add
fwait
add
jo
pop
arpl
insl
outsl
fs
loope
jae
arpl
data16
fildl
pop
popa
insl
jae
pop
gs
je
add
imul
add
je
push
add
popa
insb
je
insl
add
data16
add
or
gs
add
sub
arpl
arpl
add
add
outsb
add
sahf
add
jae
bound
gs
add
add
ja
arpl
data16
js
imul
ja
jae
arpl
add
jo
gs
push
add
arpl
inc
imul
pop
gs
je
sbb
jae
jo
imul
pop
arpl
imul
gs
jb
push
je
arpl
add
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
pop
add
gs
jb
jb
add
and
arpl
jo
add
std
add
jb
outsl
jne
add
add
jb
outsl
jb
add
push
inc
push
push
cs
insb
add
inc
add
gs
outsb
push
gs
js
gs
imul
gs
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
outsb
fs
imul
outsb
addr16
outsl
je
imul
outsl
outsb
push
add
mov
insb
dec
popa
insl
gs
imul
add
push
popa
insb
imul
add
inc
imul
inc
push
dec
outsl
je
imul
outsl
outsb
add
cmp
gs
push
inc
js
arpl
imul
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
outsb
fs
gs
inc
imul
popa
imul
je
jo
gs
bound
arpl
js
add
add
gs
popa
insl
gs
imul
insb
gs
je
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
bound
inc
jb
add
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
js
push
gs
fs
imul
gs
push
dec
outsb
outsw
add
dec
popa
imul
outsw
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
push
add
fs
imul
js
add
outsl
add
je
imul
popa
je
add
incl
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
rolb
je
arpl
push
add
repnz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
cmp
dec
jo
outsb
inc
imul
outsb
addr16
add
stc
add
inc
popa
fs
je
imul
add
add
gs
je
inc
jbe
outsb
je
add
insl
add
outsb
insb
outsl
arpl
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insb
jae
gs
popa
insb
jne
add
jo
jb
popa
je
add
dec
add
insb
gs
jnp
inc
outsl
insb
fs
je
imul
push
gs
gs
outsl
outsb
imul
imul
add
imul
in
add
gs
je
push
push
add
rolb
inc
jb
popa
je
inc
imul
outsb
addr16
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
imul
gs
arpl
add
out
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
faddl
push
gs
jb
push
push
add
gs
dec
outsl
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
inc
add
je
je
jb
jne
dec
outsb
outsw
push
add
add
push
popa
insb
imul
addr16
jb
jne
add
in
push
gs
outsl
insl
insl
push
imul
add
push
jns
je
insl
push
imul
insb
gs
imul
dec
outsl
jbe
inc
imul
add
jae
jb
insl
jo
inc
add
inc
gs
je
imul
inc
js
add
fldl
inc
jb
popa
je
dec
jne
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jno
inc
gs
dec
push
xor
mov
inc
push
je
dec
push
add
fldl
push
gs
dec
inc
imul
jne
inc
outsl
outsb
je
popa
insl
imul
add
gs
je
dec
inc
push
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
push
arpl
outsb
add
inc
gs
popa
jo
outsl
fs
lahf
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
gs
add
je
popa
insb
gs
gs
outsb
je
imul
jb
popa
je
inc
imul
bound
imul
inc
js
push
gs
dec
jne
push
add
push
gs
dec
jne
push
add
dec
add
je
outsl
outsb
je
popa
je
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
insb
imul
inc
gs
gs
inc
popa
arpl
add
jnp
inc
gs
gs
inc
insb
imul
inc
jb
popa
je
inc
jb
jae
dec
outsb
imul
add
je
imul
add
gs
popa
jns
jne
add
popa
je
push
outsl
insb
imul
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
popa
je
inc
imul
imul
xchg
inc
jb
popa
je
inc
imul
add
gs
je
push
outsb
add
popa
je
inc
dec
inc
push
arpl
outsb
add
addl
imul
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
jo
add
push
gs
dec
gs
imul
push
gs
insb
imul
je
add
lar
jb
popa
insb
imul
arpl
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
outsl
arpl
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
add
je
dec
inc
imul
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
bound
je
jb
arpl
add
add
jae
jp
push
popa
insb
gs
add
push
imul
add
add
arpl
gs
insb
imul
xchg
add
gs
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
popa
je
inc
inc
push
add
popa
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
inc
gs
imul
dec
jb
inc
js
add
dec
xor
cs
insb
add
jb
jns
popa
jb
je
add
ja
outsl
arpl
push
arpl
add
fs
insl
popa
addr16
add
mov
je
gs
popa
add
gs
jb
jns
outsb
jne
stos
add
ja
outsb
imul
arpl
mov
inc
gs
insb
addr16
jb
arpl
add
inc
arpl
popa
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
data16
je
imul
add
je
imul
js
inc
add
and
fs
outsb
jo
je
mov
imul
outsl
ja
jo
popa
je
add
mov
push
popa
imul
jne
dec
fs
add
dec
add
je
outsb
jne
sub
inc
gs
outsb
jne
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
jae
popa
addr16
outsl
js
js
add
imul
je
jo
popa
je
push
outsb
add
mov
dec
outsl
popa
fs
outsb
jne
add
add
jo
outsb
fs
outsb
jne
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
insb
add
je
imul
outsb
addr16
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
arpl
popa
imul
outsb
add
addb
outsb
data16
popa
je
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
gs
jae
inc
inc
add
add
outsb
fs
gs
popa
addr16
add
fildl
dec
outsl
jbe
push
imul
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
stos
add
fs
jne
jae
jb
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
xor
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
jb
popa
je
push
imul
push
add
outsl
outsb
imul
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
data16
je
arpl
scas
add
fs
jne
jae
jb
add
add
push
jae
push
imul
arpl
add
js
inc
gs
imul
js
push
add
push
add
je
insb
addr16
je
insb
dec
inc
add
mov
outsl
ja
jb
insl
push
outsl
imul
outsb
jae
jb
dec
outsb
jne
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
gs
arpl
push
add
add
push
imul
popa
jae
inc
js
add
ret
add
fs
imul
add
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
out
dec
jo
outsb
inc
gs
je
jo
add
and
push
arpl
insb
insb
push
imul
add
mov
imul
xor
jb
outsl
dec
gs
push
add
xor
push
gs
popa
jb
je
outsl
jae
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
imul
jae
addr16
add
push
push
imul
add
gs
je
inc
imul
jb
insl
push
add
je
push
gs
imul
js
push
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
cmc
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
imul
outsb
addr16
add
fldl
inc
jno
popa
insb
push
arpl
add
je
arpl
insb
insb
push
outsl
jae
add
imul
imul
add
insb
insb
push
imul
dec
outsb
push
outsb
fs
gs
popa
addr16
js
pop
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
push
imul
outsl
arpl
add
bound
jbe
outsb
je
faddl
inc
outsb
jne
push
imul
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
cwtl
add
je
outsl
jns
imul
add
popa
jb
jb
jbe
add
add
outsb
fs
gs
popa
addr16
add
mov
inc
gs
jb
insl
gs
jb
arpl
or
push
imul
je
gs
add
add
je
jne
jae
jb
push
inc
gs
imul
add
inc
insb
addr16
je
insl
dec
outsb
je
sbb
arpl
gs
imul
add
add
je
outsb
jne
je
insl
dec
inc
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
arpl
outsl
push
push
outsb
outsl
ja
add
inc
push
outsb
jne
popa
imul
add
add
jo
imul
arpl
add
dec
outsb
push
arpl
cltd
add
inc
insb
addr16
jne
je
outsb
inc
push
add
mov
jb
outsb
je
inc
add
inc
gs
jns
je
insl
dec
outsb
jne
add
push
imul
popa
jae
inc
js
add
pusha
add
gs
je
dec
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
dec
outsb
jne
je
insl
dec
outsb
outsw
push
add
mov
fs
outsb
jne
add
inc
gs
outsl
jo
imul
dec
add
je
jb
jo
add
cmp
push
gs
jne
jae
jb
outsl
jae
add
add
jo
imul
gs
js
add
jp
push
push
jb
je
add
imul
popa
jae
push
add
scas
add
fs
arpl
inc
add
add
je
popa
jb
je
outsl
jae
jnp
push
push
jb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
push
push
inc
push
xor
cs
insb
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
dec
push
jne
jns
push
push
inc
insb
inc
inc
push
in
inc
add
in
inc
add
or
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
jae
and
dec
push
push
pop
push
cmp
dec
addr16
xor
dec
cmp
jp
cmp
dec
es
insl
dec
and
dec
push
bound
arpl
dec
bound
dec
jae
cmp
dec
xor
dec
push
jb
jae
orl
nop
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
sbbb
setae
jl
jge
aas
dec
dec
xor
dec
ds
inc
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
xor
dec
xor
dec
cmp
dec
xor
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
popa
dec
xor
dec
xor
dec
ds
xor
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
xor
dec
xor
dec
ds
inc
dec
cmp
dec
cmp
add
add
adc
jl
jge
aas
dec
add
outsb
jmp
inc
add
inc
add
in
inc
add
in
inc
add
inc
add
inc
add
in
inc
add
test
pushf
clc
data16
add
inc
add
inc
add
inc
add
inc
add
jmp
inc
add
in
inc
add
test
jb
inc
add
or
inc
add
fstl
inc
add
inc
inc
mov
jne
mov
incb
mov
jmp
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
and
pushf
clc
sub
add
jmp
inc
add
imul
pushf
clc
popf
jmp
add
pop
jmp
add
add
inc
add
inc
add
add
add
inc
add
add
dec
add
dec
add
add
add
add
inc
add
add
dec
add
inc
add
add
dec
add
add
add
add
jmp
add
dec
pop
dec
inc
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
pop
dec
add
dec
xor
dec
inc
dec
pop
dec
inc
dec
add
dec
xor
add
pop
dec
inc
dec
dec
dec
push
dec
inc
dec
pop
dec
xor
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
xlat
lds
ret
fidivs
into
mulb
push
sbb
jno
add
add
mov
das
shlb
rolb
inc
push
outsl
push
push
jmp
add
in
adc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
je
jns
popa
push
push
push
dec
imul
popa
jp
arpl
push
imul
jp
jb
outsl
push
inc
inc
push
imul
push
jb
add
push
insb
pop
ja
je
bound
add
push
dec
je
push
jne
popa
jns
dec
push
dec
dec
pop
pop
dec
push
add
adc
push
jge
add
xor
pop
mov
and
sarl
les
std
xchg
mov
and
mov
xor
data16
bound
mov
xlat
dec
jae
or
hlt
mov
aam
fstpl
out
movsb
add
loope
movsl
pop
jb
mov
outsl
aad
push
cmc
push
ljmp
adc
adc
mov
cmp
xchg
jg
lahf
jecxz
pop
or
ss
frstor
adc
jg
mov
mov
cmp
mov
cmpsl
or
lods
mov
xchg
dec
xor
ljmp
pop
ds
sbb
divl
mov
push
fadd
stos
stc
pop
aas
pop
xor
pop
cmp
pop
push
roll
mov
or
xorb
dec
push
push
mov
cmp
notb
roll
xchg
lods
aam
pop
cwtl
jno
std
popl
push
aaa
out
inc
xor
repz
push
jmp
cmp
mov
aam
xchg
jbe
rorb
add
sbb
xor
fcoms
adc
cs
adcl
mov
in
push
ds
call
pushf
daa
xor
rcll
out
mov
fucom
adc
icebp
push
sub
fiaddl
mov
int
cmp
push
mov
add
inc
add
clc
repnz
mov
data16
adc
and
mov
pushf
pop
movsl
mov
call
test
mov
enter
push
popa
add
push
mov
pop
xor
in
mov
out
fmuls
xor
cmp
rcrl
in
leave
mov
rorl
in
cmpsb
fidivs
xchg
pop
cli
enter
mov
lods
mov
adc
sahf
dec
sbb
and
inc
add
mov
mov
into
fs
sarb
xchg
add
jp
xlat
ffreep
adc
fwait
jecxz
lahf
mov
pop
mov
scas
sub
lods
lcall
push
pop
mov
dec
dec
adc
cmp
sub
cmp
shll
ds
push
pop
mov
sbb
push
dec
cmp
lock
les
pop
mov
loop
dec
pop
mov
pop
inc
xchg
lret
outsl
iret
mov
enter
cmpl
push
or
cmpsl
jo
pop
int
int
push
push
std
or
inc
subl
xchg
jno
inc
add
adc
push
add
jns
push
push
push
cmc
shrl
push
adc
xchg
sub
jb
and
fwait
lock
imul
push
imul
cmp
mov
dec
hlt
or
dec
loope
ss
adc
cmpsl
jne
call
push
call
pop
testb
jae
cmpsb
aaa
or
add
sub
fwait
adc
or
leave
mov
fs
lods
mov
adc
movsl
lock
mov
arpl
mov
and
dec
mov
push
aad
movsb
sub
stos
sbb
mov
push
pop
out
stos
popf
loope
push
push
testb
addr16
mov
cmp
pop
cmp
mov
cld
lcall
xor
sbb
hlt
lcall
sub
mov
xchg
mov
aam
or
popa
pop
pop
xchg
sti
add
inc
sbb
xchg
mov
insb
pop
fbld
push
sti
icebp
and
int3
lds
dec
hlt
in
sub
push
ja
sbbb
cmp
cs
push
dec
sub
ja
sub
ljmp
inc
xor
orl
or
orb
adc
imul
mov
xchg
stos
lods
sub
idivl
mov
rorl
mov
and
mov
fwait
gs
add
mov
ds
test
pop
jne
push
pop
adc
pop
cmp
cmp
fwait
inc
popa
imul
addr16
scas
scas
out
xchg
mov
push
test
lock
fadd
fmuls
xchg
mov
xor
push
outsl
bnd
ret
je
js
or
adc
mov
pop
insb
out
xchg
jnp
js
cwtl
inc
test
data16
xlat
repnz
xor
xor
lods
lea
adc
push
mov
mov
jns
imul
jne
loopne
and
xchg
push
leave
jle
lea
and
push
mov
stos
addr16
daa
das
cmpsb
sub
sbb
jge
psrlw
xchg
mov
jl
in
rcr
sub
out
insb
rcrb
mov
dec
dec
add
adc
adc
dec
fisubl
jmp
xchg
sbb
scas
pop
jge
clc
push
jl
testl
fwait
push
loopne
xchg
sbb
int3
out
xchg
jle
shl
test
mov
sub
jbe
jb
inc
push
popa
std
insb
lods
sbb
pop
enter
mov
sbb
inc
sbb
add
xchg
cmp
pop
pushf
sbb
dec
add
sbb
push
iret
loopne
jecxz
xor
push
test
mov
or
shll
pop
sti
sbb
iret
adc
cmpsl
pop
leave
test
sbb
test
sti
adc
cwtl
lock
rcll
jo
mov
and
or
inc
leave
addr16
mov
aad
in
test
je
mov
cmp
inc
add
cwtl
xchg
data16
sbb
xchg
push
xchg
push
rcr
or
mov
mov
call
mov
jmp
jl
mov
cmpb
push
scas
sub
jae
sub
testl
movl
lret
into
add
xchg
jns
push
adcl
lret
sub
dec
dec
inc
pop
inc
pop
pop
shrb
test
add
shl
scas
movsl
jo
les
or
mov
jecxz
es
popf
cmp
mov
jbe
jno
push
dec
sub
mov
mov
stc
xorb
jno
gs
jnp
jg
jo
sbb
dec
jb
test
adc
hlt
inc
and
xor
fwait
mov
shl
add
mov
dec
pop
sbb
sbb
dec
mov
lock
shr
and
hlt
xchg
pushf
subb
in
lock
mov
inc
mov
and
inc
outsl
xchg
xchg
jle
jg
adc
imul
lcall
scas
and
xchg
inc
incb
aas
xlat
xor
push
jbe
hlt
cmpsl
fidivs
repnz
dec
sub
and
pop
loop
ret
jbe
add
cmpsl
cmp
pop
imul
int
or
loope
lret
popa
pop
xor
jmp
inc
lcall
adc
adc
mov
loopne
inc
ljmp
shrb
sbb
fcmovnb
inc
lcall
mov
or
pushf
xchg
cs
addr16
pop
test
fiadds
jmp
and
in
mov
and
movsl
in
mov
pusha
pop
lcall
imul
mov
popa
adc
in
jne
xlat
push
stc
mov
cmpsb
das
push
out
jnp
sub
shl
push
mov
jno
cmp
das
nop
mov
and
adc
int
sahf
mov
sbb
xorb
dec
add
inc
sub
adc
repnz
cmpsl
and
outsb
push
mov
bound
push
std
jl
dec
rolb
lahf
ljmp
test
ja
pop
stc
sub
in
aad
push
shrb
push
pushf
or
push
fucom
inc
xchg
mov
outsl
xlat
mov
push
jle
ret
fisubrs
mov
in
into
push
lea
adc
sbbl
mov
cli
sub
jbe
cmpsb
fwait
xchg
fsubrs
out
outsl
aad
pop
negb
hlt
push
mov
stos
cltd
add
push
shrb
xchg
or
inc
add
arpl
jecxz
cmp
jns
cld
mov
pop
mov
in
cli
lcall
pop
jne
and
scas
cmp
fsubl
ljmp
mov
pop
adc
int
push
mov
nop
lods
cmpsl
pop
mov
and
hlt
inc
cmp
mov
outsl
dec
fdiv
pop
repz
lea
inc
out
jl
shll
push
add
cltd
cmpsb
sbb
fdivl
shrl
out
and
push
inc
icebp
out
mov
ret
rclb
int3
lods
push
push
pop
fwait
lret
test
gs
inc
sub
dec
cmp
and
pop
es
and
fs
lret
add
mov
int3
jge
cmp
mov
mov
dec
roll
jge
lods
movsb
mov
mov
out
push
stos
and
mov
movsl
adc
dec
fistl
mov
lds
adc
jecxz
cwtl
cli
push
inc
xchg
dec
ljmp
ljmp
jecxz
test
inc
adc
push
in
dec
add
jns
mov
dec
pop
cmp
dec
and
or
out
and
add
arpl
stos
stos
mov
mov
les
adc
es
aas
out
and
fwait
daa
out
push
jmp
mov
lret
mov
cmc
cltd
loope
xlat
out
push
dec
fbld
test
adc
and
fistl
push
mov
add
mov
int3
pop
jge
adc
rorb
mov
aas
out
inc
pop
mov
xlat
sbb
pop
mov
imulb
dec
mov
loope
push
icebp
mov
jno
jae
push
imull
or
cmpsb
or
mov
mov
repnz
push
pop
dec
jge
jl
cli
add
test
lock
xchg
pop
mov
je
push
sub
inc
cmp
stos
icebp
sub
or
jmp
jmp
xchg
xchg
call
jmp
inc
adc
cwtl
ss
add
jle
pushf
cmp
adc
mov
stc
mov
mov
jecxz
add
inc
ljmp
outsb
add
das
popa
lret
stc
and
push
pop
dec
sti
lretw
outsb
das
mov
adc
les
jcxz
pop
pop
push
mov
pushf
gs
fisttpl
push
pop
adc
jno
or
sbb
sti
movb
popa
cmc
xor
push
push
pop
mov
hlt
cmp
push
mov
ss
add
popa
pop
pop
or
or
and
movsl
dec
imul
popf
clc
adc
adc
mov
add
fsubs
ds
cmp
mov
lock
jle
pop
jl
cmpsl
in
fcom
cmp
sbb
out
out
jle
mov
xor
jge
mov
lea
add
jl
and
test
adc
sub
and
jg
push
mov
dec
insb
jmp
scas
xor
popf
mov
mov
dec
aas
sub
shl
fxch
rorl
outsl
mov
inc
jecxz
lret
and
adc
mov
jae
incl
gs
movsb
ror
lods
xchg
int
pop
insb
gs
lods
adc
aaa
jnp
out
shlb
clc
movsb
sahf
loopne
repz
push
pushf
add
std
push
xchg
inc
cs
mov
pop
dec
es
inc
rorb
inc
pop
add
inc
scas
xor
in
sbb
xlat
inc
sahf
mov
inc
mov
xchg
inc
lods
xlat
aad
pop
inc
adc
fstl
pop
xor
xor
lea
lea
add
scas
lahf
jmp
lods
sbb
pop
lock
push
ret
les
jbe
xchg
lds
xchg
into
out
sbb
add
inc
or
mov
pop
push
pop
dec
mov
dec
push
enter
pusha
mov
add
scas
jle
push
sub
dec
popa
or
cmp
cwtl
xchg
jns
push
mov
mov
mov
xchg
or
cmp
sarb
add
mov
mov
lock
cmp
sbbb
jbe
inc
push
inc
and
mov
jno
scas
xchg
dec
xlat
xchg
mov
out
mov
faddp
in
test
das
scas
xchg
data16
xor
scas
int
inc
inc
pushf
into
stos
jno
aad
jbe
loopne
push
xchg
cmp
pop
or
std
dec
cmpsl
xor
ret
sahf
xchg
cli
sbb
or
mov
cmp
test
mov
scas
mov
mov
push
stos
adc
mov
xor
push
popa
jmp
cld
std
xchg
pop
push
mov
out
pop
pop
dec
cwtl
jle
xchg
lods
jo
fdivl
fcmovb
jge
sbb
or
or
inc
and
or
aas
andb
lods
cmp
add
jb
lret
push
xor
cmp
cmp
test
add
adc
iret
cmp
sbb
into
push
xor
push
je
inc
xchg
sub
dec
sbb
jns
jg
jmp
adc
sbbb
pop
xchg
cmp
das
insl
push
test
mov
cs
fsubrs
mov
mov
xor
mov
mov
std
jl
test
mov
aaa
add
int3
popa
xchg
jge
mov
lock
and
xchg
pop
inc
xchg
lods
lahf
lahf
xor
enter
les
dec
lret
cmp
push
cmp
inc
dec
sti
enter
add
push
bound
push
mov
xor
fbld
mov
iret
sbb
mov
pop
xor
mov
bound
adc
push
aam
out
cs
adc
test
xchg
imull
rcl
mov
fidivrs
dec
das
sub
pop
lods
mov
sbb
fsubrp
cmp
in
repnz
mov
ss
sub
fsts
and
cwtl
jp
push
subl
cmpsb
pop
rorl
addb
add
ja
nop
nop
sbb
fucom
cmp
sbb
lods
stos
jo
cmp
lds
mov
xchg
cmp
xor
lods
incb
leave
cltd
lea
fiaddl
fsubs
dec
aam
jns
sti
aas
sbb
or
dec
aad
out
cld
and
cwtl
idivb
and
pop
leave
or
test
loopne
ljmp
fwait
dec
adc
test
not
or
loope
imul
lahf
inc
test
cmp
jae
test
inc
lcall
pop
addr16
push
push
sbb
scas
scas
sub
in
aad
mov
jl
out
push
lods
and
push
fcmovu
fs
call
mov
xchg
push
lret
mov
loop
xchg
fldt
enter
and
arpl
les
pop
shlb
or
movsl
pop
ds
clc
or
pop
andb
pop
mov
adc
stos
arpl
mov
push
dec
movsl
outsl
dec
das
testb
mov
mov
lea
xorb
mov
iret
inc
sbb
push
ljmp
sbb
popf
cmp
xchg
push
ljmp
in
push
inc
push
cli
jne
push
inc
and
push
lea
mov
mov
and
cmpb
std
and
lds
cmp
xchg
rcrb
out
adc
sub
sbb
pop
cmp
cmp
lret
ficomps
out
aaa
adc
push
pop
sti
and
test
dec
lret
insb
outsl
or
mov
mov
test
mov
mov
fdivl
fucomp
aaa
push
jbe
repz
and
int3
xchg
les
leave
mov
insb
hlt
mov
pop
stc
or
jb
sbb
sahf
or
ret
mov
fdivs
outsb
enter
inc
push
push
mov
pop
jbe
pop
push
sbb
popa
dec
dec
cli
jl
mov
push
and
iret
out
rcrl
inc
cmp
insl
mov
mov
pop
push
mov
xorl
mov
pop
xorl
out
mov
jl
cwtl
pop
das
mov
sbb
insl
shlb
mov
movsl
sti
test
jae
scas
repz
enter
in
inc
mov
imul
mov
mov
arpl
mov
in
push
pop
or
sbb
adc
call
mov
shll
xor
push
xchg
fnstcw
or
stos
cmp
cmp
sti
cmp
push
mov
ja
xchg
inc
aaa
bound
dec
xor
xor
push
push
das
mov
roll
icebp
and
push
aam
push
lcall
xchg
cli
adc
pop
push
out
pop
pop
test
mov
in
add
fildl
push
xchg
xor
or
pop
mov
mov
pop
shll
imul
cld
lcall
push
movsl
jns
mov
jle
or
lahf
push
repnz
or
sbb
push
inc
pop
incb
mov
add
cli
push
push
in
and
mov
dec
lret
mov
xchg
and
jecxz
xchg
out
jmp
mov
bound
add
jp
mov
sub
pop
sub
ljmp
jno
rcll
push
xor
lods
aad
mov
loopne
mov
mov
or
andl
mov
movsl
jge
stos
stc
into
jmp
xchg
adc
push
cmpsl
pop
sub
xchg
es
xlat
hlt
pop
into
mov
xchg
lods
out
test
mov
xor
cmpsl
stc
loope
or
push
inc
dec
dec
pop
pop
push
sub
xchg
pop
or
add
cwtl
mov
jmp
xor
pop
sbb
sub
popa
lods
xchg
push
xchg
gs
jle
jb
loop
sub
mov
xchg
sbb
mov
xor
dec
punpckhbw
loop
filds
fnsave
jae,pt
call
daa
roll
mov
jge
dec
xchg
daa
or
or
adc
cmpsb
pop
mov
sbb
fbstp
repnz
sbb
rcrl
clc
lcall
lret
cmp
push
push
out
stos
movsl
je
sti
mov
flds
mov
leave
push
test
shl
mov
in
ss
jne
inc
ds
mov
adc
dec
dec
faddl
shlb
data16
and
sbb
and
add
and
dec
scas
inc
or
sahf
push
sarb
mov
ds
loope
test
cmc
mov
fdivrs
inc
sub
mov
scas
xor
rcrl
or
xchg
pop
orb
and
jmp
sahf
test
rcll
and
int3
lcall
xor
rorl
mov
inc
push
inc
xchg
pop
fstpt
pop
sbb
aas
lahf
stos
mov
sub
mov
ret
loopne
leave
stos
cwtl
aaa
cs
movsb
ret
notb
and
pop
cmp
out
daa
sub
mov
cmp
pop
fbld
xor
mov
fstps
test
repnz
jae
cmp
mov
jg
out
xorl
push
imul
popa
cmp
icebp
sbb
int
fidivs
inc
clc
rcll
sub
jne
xchg
cmp
or
daa
sbb
add
cli
loope
inc
mov
mov
cmpsl
sarb
cmpsb
pushf
out
pop
cmp
popf
and
jb
cltd
cwtl
popa
pop
cmp
test
out
test
lods
push
mov
mov
std
std
or
dec
inc
mov
cmp
addr16
jo
push
sub
ficomps
xor
cwtl
mov
aaa
ret
std
mov
mov
popf
xor
insb
inc
iret
or
jp
add
dec
adc
sbb
je
ljmp
mov
push
add
pop
imul
test
inc
hlt
mov
jl
aad
mov
add
imul
ja
xor
rcr
xor
in
stos
sahf
fwait
adc
mov
cmpsl
lcall
rcr
aad
in
fxch
sub
dec
push
xchg
xchg
outsl
or
mov
stos
pop
enter
add
mov
mov
jo
pop
das
stos
shrb
push
mov
jno
movsl
push
les
push
jb
int
xchg
mov
add
pusha
cmp
or
lea
jle
xchg
mov
jge
das
cmpsb
mov
mov
xchg
loope
mov
push
xorb
cmp
lret
ss
sub
dec
jbe
xlat
mov
fcompl
inc
mov
push
xor
aad
insl
clc
out
dec
addl
test
lea
decl
icebp
xchg
cmp
fimuls
out
sub
mov
mov
xchg
loop
clc
mov
adc
in
pop
lcall
pop
mov
aaa
shlb
push
idivl
jno
and
pop
cltd
sbb
jbe
cmp
dec
sub
mov
ja
push
and
leave
inc
scas
cwtl
add
push
push
and
rcll
loop
incw
outsl
scas
addr16
ss
orb
jecxz
mov
cmpsb
lods
mov
scas
jns
ret
lahf
mov
aas
in
mov
sbb
out
pop
clc
shll
add
shl
jae
inc
mov
mov
or
pop
adc
divl
jo
inc
jg
iret
xor
jge
dec
clc
lds
lahf
ret
dec
push
xchg
add
in
in
xchg
cmc
pop
pop
fidivl
mov
and
dec
sbb
es
mov
pop
dec
dec
not
pop
ljmp
and
jnp
mov
mov
lahf
cmpsb
mov
add
lods
aam
push
shrb
mov
imul
in
adc
dec
cmpsb
pop
inc
addl
pop
aas
insb
into
and
dec
test
lds
sbb
adc
adc
xchg
lods
push
cmp
mov
sbb
jb
add
sub
out
adcl
dec
subb
xor
stos
sub
mov
out
call
jne
xorl
shlb
mov
into
mov
stos
jmp
ficoml
mov
mov
imul
ret
push
std
or
sbb
fldz
clc
fisttps
and
sub
sbb
gs
and
in
mov
fstp
cs
mov
mov
fbld
int3
xchg
pusha
xlat
and
jl
push
fucompp
adc
add
pop
sbb
cmp
negl
pusha
cmp
in
mov
lahf
jbe
shlb
jg
loop
iret
shlb
dec
inc
cmp
xor
repnz
outsb
dec
pop
dec
cmp
repz
mov
xchg
stos
or
js
xorb
pop
jle
add
fnstcw
add
and
outsb
imul
mov
test
imul
push
jle
dec
hlt
push
and
xchg
cmp
lret
jns
lret
push
push
ret
std
jno
imul
cmpsl
sub
mov
das
fidivl
aaa
xor
xorl
clc
or
push
int3
lock
jnp
pop
add
inc
in
std
or
xor
out
xchg
adc
in
call
dec
aad
inc
dec
dec
dec
dec
dec
inc
dec
sub
push
sbb
push
add
cltd
xchg
bound
jecxz
sahf
mov
mov
pusha
shl
les
push
jge
addr16
data16
jecxz
cmp
adc
movd
push
jmp
push
addr16
movsb
enter
ss
in
jno
push
push
mov
incb
cmp
sbb
adc
das
dec
mov
mov
cmc
incl
into
xchg
cmp
inc
sbb
cmp
add
ljmp
scas
sarl
imul
push
fmul
sub
jae
pop
pushf
pop
inc
int
int
std
loope
sub
lret
adcb
push
or
jbe
xchg
or
iret
xchg
inc
xor
pop
mov
ret
mov
cwtl
fmuls
sbbb
mov
dec
sbb
cmp
mov
data16
and
or
int
test
mov
inc
iret
pop
or
scas
movq
outsb
test
sub
fidivs
xor
push
push
fildl
out
dec
gs
mov
cmp
adc
in
popf
clc
mov
mov
push
sbb
std
stos
insb
outsb
into
lods
dec
out
ljmp
jge
movsb
and
leave
sub
xor
push
or
jecxz
xor
pop
mov
cli
inc
mov
jb
mov
and
jmp
adc
out
in
jno
mov
icebp
ljmp
or
mov
addr16
mov
rcll
test
add
mov
and
adcb
int
cmpsl
adc
and
aad
dec
loope
imul
pop
fistpl
adc
mov
pop
xlat
insl
imul
scas
negb
imul
shrb
bswap
and
xlat
mov
mov
xor
push
mov
cld
cwtl
sbb
in
mov
mov
imulb
cmp
xchg
std
ret
sbb
cwtl
fldenv
mov
or
into
sub
and
xor
adc
stos
add
scas
and
ljmp
inc
sti
inc
jno
xor
call
push
stos
enter
inc
iret
push
mov
lret
push
setp
sarb
aad
adc
dec
xor
cmp
mov
movsl
cld
push
mov
xor
mov
mov
xor
pop
pop
sbb
xor
jp
adc
add
icebp
push
pop
int3
lcall
js
add
pop
out
mov
sbb
cmp
idivl
or
subl
xor
stos
mov
and
dec
pop
mov
loopne
xchg
std
mov
inc
cmpsb
xor
mov
rcrb
stos
fnstsw
adc
pop
jo
inc
push
jne
mov
or
daa
mov
mov
test
notl
in
inc
test
int
pop
mov
div
pop
clc
mov
mov
in
outsb
popa
shlb
sub
add
shrb
outsl
aam
lods
scas
call
pop
rorb
dec
std
jmp
push
or
dec
xchg
xchg
shll
mov
loopne
xchg
dec
popf
ret
mov
arpl
pop
sub
jle
mov
movsb
insl
orb
mov
inc
aam
push
imul
xor
mov
int
andb
sbb
mov
cmp
and
adc
push
fistpll
push
hlt
and
mov
mov
enter
and
push
pop
push
cmp
pop
lods
pusha
mov
jnp
lahf
xchg
sti
divb
sbb
cmp
push
andl
out
scas
xchg
sub
movsb
notb
push
pop
inc
je
pop
sti
aad
dec
scas
xchg
das
filds
pushf
xchg
mov
cmp
orb
cld
dec
jmp
les
lea
hlt
pop
sbb
mov
sub
daa
daa
push
mov
sbb
lcall
and
jae
cld
and
jl
movsl
mov
sub
and
js
loop
dec
sbb
jmp
sub
adc
pop
arpl
sub
cmpsl
loope
data16
xchg
in
rcl
jb
or
aam
pop
imulb
mov
popa
aam
cmpsl
sbb
out
mov
sub
popf
rcrl
xchg
les
cli
add
mov
mov
or
out
std
sub
dec
lret
fldenv
adc
mov
ficompl
jmp
lods
into
iret
cmc
out
jle
push
xchg
cmp
std
xchg
jns
shr
add
push
lock
dec
fistl
sub
test
loope
fs
icebp
dec
cld
xlat
pop
test
mov
mov
sub
imul
sbb
xor
dec
adc
add
mov
adc
inc
je
sub
xlat
push
add
mov
inc
mov
mov
lds
pop
or
fs
pop
mov
and
and
and
jle
rolb
adc
aam
xchg
in
cld
adc
xchg
jle
jno
pop
fsubs
push
mov
xchg
xchg
mov
dec
jg,pn
icebp
test
jbe
iret
or
dec
jmp
subl
lds
dec
cmovl
fildl
xchg
and
sub
scas
push
push
in
ficoml
jmp
movsl
jno
mov
push
jb
ret
ja
imul
push
out
inc
hlt
pop
js
jle
int
pop
adc
pop
ljmp
xchg
lahf
or
mov
test
jl
cmpsb
mov
sub
insl
cmp
pcmpgtb
cmp
fdivrl
mov
jb
push
outsl
shrl
jne
das
inc
cmp
in
cmovl
dec
inc
push
pop
pop
push
dec
cmp
or
jge
sbb
popf
add
mov
add
cmp
lret
in
aam
push
inc
out
cmp
movsb
repz
jl
gs
aaa
into
xchg
je
or
idivb
sti
js
sbb
push
sub
mov
and
adc
aas
push
aaa
jg
imul
icebp
xchg
stc
aaa
xchg
jb
xchg
or
lods
sbb
sarb
arpl
mov
loopne
xor
inc
ficomps
push
mov
mov
stos
test
int
jecxz
arpl
jne
xor
out
fmull
jle
dec
jle
test
ss
div
cld
clc
test
mov
stos
das
inc
xchg
xor
pop
jle
loopne
lret
sahf
or
pop
in
repz
fs
push
adc
cmpsb
int3
ds
push
insl
out
cmp
push
mov
dec
sti
sbb
fimuls
cld
in
dec
jo
cmp
mov
mov
and
mov
iret
bound
outsb
pop
cmp
mov
mov
test
insl
mov
imul
push
int3
insb
jl
mov
mov
lcall
je
into
stos
icebp
imul
incl
cwtl
sbb
into
jl
and
push
je
gs
jg
jnp
xchg
seta
movsl
in
js
pop
ljmp
bound
mov
sbb
ds
roll
mov
inc
inc
pop
xchg
cld
pop
adc
loope
inc
mov
out
test
subl
dec
cmpsl
imul
outsb
cs
pop
adc
jp
mov
sti
jbe
and
cmpsl
mov
les
xchg
add
jmp
test
fiaddl
in
dec
inc
adc
insb
lods
adc
stc
jmp
addl
addb
xchg
mov
into
inc
mov
and
xchg
jg
xchg
movsb
jg
gs
sbb
mov
lods
and
xchg
sbb
cmp
mov
ds
dec
cltd
fdivs
dec
adc
add
sub
xchg
xchg
imul
push
inc
jo
mov
jno
mov
bound
addr16
mov
pop
mov
lds
cmpl
add
dec
xchg
lcall
fst
or
les
inc
mov
outsb
xchg
cmp
aaa
clc
mov
pop
mov
dec
pusha
in
sbb
lods
repnz
das
in
das
cmpsl
daa
shll
or
shrl
cmpsb
pushf
ret
popa
dec
add
iret
sub
push
idivl
mov
fists
adc
movsb
mov
push
inc
loopne
sbb
jno
jb
mov
aad
cmpsb
push
fldt
adc
xchg
push
cs
adc
or
sbb
or
jmp
mov
pusha
js
mov
mov
mov
mov
in
loop
cmp
sbb
lahf
sbb
testb
out
int3
shrl
icebp
sub
aaa
inc
in
adc
inc
das
fdivrs
add
loopne
out
daa
loopne
dec
cmc
lods
insb
sahf
push
arpl
and
out
decb
aas
jmp
shlb
das
test
jge
jl
fldcw
add
ror
pop
test
jge
ss
das
andl
adc
adc
mul
in
clc
test
and
pop
sbb
pop
in
adc
mov
cmpsl
shrl
cmpsl
fidivs
gs
cmpsb
stos
cmp
lods
add
test
or
add
lahf
in
jbe
jae
xor
js
cmp
cmp
jp
jecxz
rorb
lods
mov
lcall
sub
pusha
pop
jge
loop
sub
loop
imul
jno
rclb
or
adc
jp
pop
mov
pop
mov
testl
mov
xor
cltd
and
push
in
and
sbb
jmp
xchg
lret
ds
jg
xchg
cli
pop
or
jnp
pop
mov
inc
fstps
sbb
xor
test
leave
test
loopne
and
scas
pop
je
cmp
jnp
jbe
aaa
xorb
cld
cmpsl
jno
leave
decl
nop
jns
pop
pop
inc
mov
jge
xchg
mov
or
ficoml
lret
ret
out
bt
bnd
add
adc
adc
jo
les
aam
adc
fcmove
sub
inc
jp
lock
in
adc
repz
cmp
jmp
jecxz
inc
cmp
shl
popf
mov
aaa
sbb
fisttpl
adc
xchg
leave
loop
incl
inc
fs
loop
imul
mov
jge
jae
dec
clc
in
add
sbb
data16
and
insb
jl
or
push
dec
push
push
dec
sub
xor
mov
mov
in
mov
and
jmp
inc
sbb
ljmp
imul
mov
xchg
xchg
testb
dec
xchg
add
sub
fimuls
mov
sbb
mov
jbe
cmp
mov
dec
std
adc
pop
mov
shrb
pop
gs
lret
sub
inc
or
es
add
jle
mov
cmpsb
loopne
or
adc
fsts
cmpsl
mov
test
mov
aam
adc
pop
jecxz
icebp
cmp
push
cli
cmp
adc
pop
adc
icebp
xor
es
jne
and
sub
push
fnstcw
lock
shlb
or
in
movsl
ljmp
iret
insl
mov
jle
fstpt
mov
cmp
xor
mov
mov
into
jl
push
pop
dec
inc
dec
push
pop
pop
push
inc
cmp
andb
je
sti
inc
inc
mov
add
cmp
std
xor
push
jecxz
les
mov
popa
or
lcall
pushf
loope
inc
sbb
push
enter
insl
sbb
xor
mov
dec
roll
ds
and
idiv
loopne
mov
mov
adc
push
fnstcw
push
add
xchg
cmp
push
add
jnp
std
jne
std
aaa
add
sub
outsb
es
out
cmp
pop
jne
dec
dec
sarb
sub
cli
add
inc
push
inc
insb
xchg
in
rcrl
shlb
cmpsl
pop
cmp
add
roll
mov
imul
jle
test
lock
insl
mov
daa
loope
sbb
mov
fcomp
nop
xchg
cmp
mov
je
test
out
in
popa
jo
gs
cmp
out
out
lods
pop
push
imul
std
mov
mov
jne
shrl
pop
inc
test
test
pop
sarb
stc
stos
shll
out
rcr
insb
ja
test
or
ja
pop
in
sbb
mov
jl
mov
int
dec
push
mov
cmpsb
mov
pop
push
shr
xchg
jbe
stos
movsl
inc
rorl
movsb
and
inc
dec
bound
push
push
mov
add
sub
stc
inc
push
pop
int
jecxz
mov
mov
jle
cli
ffreep
outsl
sub
out
fldt
dec
lea
sti
std
shll
mov
notl
inc
repnz
pop
dec
sub
xor
push
cmpsb
fsubp
jp
add
pop
jl
xchg
mov
mov
sbb
adc
test
pop
cmpsb
push
push
mov
imul
pusha
add
scas
test
xlat
push
repz
push
mov
add
xchg
test
push
or
and
jns
ret
sarl
mov
xor
mov
cmp
ret
mov
ja
insb
jl
neg
pushf
xor
or
push
add
sub
pusha
std
mov
test
push
js
roll
jmp
pop
mov
adc
std
mov
outsb
out
mov
xor
cmp
std
xor
cmpsl
out
cmpsl
ret
or
das
and
sar
ljmp
je
cmp
movsl
orl
cmp
sub
aas
pusha
aam
pop
adc
mov
jb
or
dec
pop
jmp
jbe
inc
aam
movsl
sbb
jg
and
sbb
data16
or
mov
data16
ljmp
fisubl
add
imul
cwtl
ret
das
dec
mov
add
ret
mov
adc
out
sub
mov
adc
fsubrl
mov
pushf
in
test
in
xor
mov
xchg
call
lret
inc
fisubrl
shrb
sbbb
mov
inc
dec
cmp
mov
std
pop
jmp
inc
jns
push
mov
sub
xchg
pop
jp
mov
in
xchg
in
popa
lods
arpl
out
jns
pop
and
pop
jle
call
push
test
jle
pop
xchg
jnp
cmp
test
faddl
push
mov
rcrb
clc
adc
movsb
pop
mov
pop
addl
bound
repz
out
xchg
or
pop
fdiv
data16
and
cmpsb
movsb
jmp
fdiv
mov
test
sub
push
ljmp
pop
add
jo
cmp
fwait
cwtl
jno
add
enter
and
out
loopne
and
jecxz
fsts
mov
insb
cmp
mov
or
push
imul
xlat
mov
push
int
pushf
or
xor
mov
add
add
mov
in
enter
rclb
jecxz
sbbl
lds
dec
mov
sbb
inc
repnz
mov
and
mov
xchg
addr16
pop
fs
cmp
imul
mov
pushf
les
les
ljmp
dec
cs
sarl
shlb
daa
aas
or
pusha
pushf
mov
or
dec
cmp
jns
int
dec
jno
dec
outsl
push
test
add
xor
test
jg
arpl
fs
and
sub
cs
dec
sbb
jle
js
cmpb
mov
clc
decl
xchg
aaa
fistps
cmc
lea
das
lds
inc
mov
test
push
mov
mov
rorb
sub
test
lock
imul
or
adc
mov
lods
mov
jb
loop
popa
dec
lock
mov
adc
mov
movsl
jb
out
les
ljmp
xor
adc
sub
dec
or
adc
push
std
pushf
xchg
pusha
out
inc
inc
imulb
mov
cld
int3
fsubs
dec
out
push
adc
push
mov
pop
dec
aas
inc
or
xlat
push
jbe
std
ljmp
ret
js
add
sahf
mov
pusha
in
xlat
int
pop
pop
popf
insl
mov
int
push
cmp
and
inc
clc
sub
or
insl
or
nop
into
movl
push
into
sub
xchg
pop
sub
add
mov
sub
inc
inc
push
sub
sub
in
adc
or
adcl
in
mov
imul
pop
imulb
mov
adc
mov
add
jmp
xchg
push
push
pop
insb
iret
jae
data16
add
lcall
clc
sar
aam
mov
sub
popa
movsl
and
sub
test
xchg
aaa
clc
cmpb
add
adc
aad
daa
stc
scas
popa
xchg
mov
mov
sub
dec
jge
ficoms
jno
inc
inc
xchg
or
dec
or
pop
movl
je
push
push
inc
pop
pop
pop
pop
push
dec
mov
adc
mov
add
adc
dec
hlt
imul
shrb
gs
popa
loop
add
fdivs
inc
xor
or
dec
xchg
add
sbb
mov
xor
cs
xchg
call
stos
or
mov
popf
out
gs
xor
std
ljmp
movsb
mov
push
in
mov
mov
xor
pop
addl
ds
mov
fistpl
xchg
andb
pushf
xor
mov
gs
jae
loop
mov
leave
sbbl
sub
addl
les
inc
cmp
xor
dec
push
pop
aas
cmp
xchg
cmp
and
cs
sbb
add
mov
dec
fsubrs
je
filds
test
outsb
lahf
sbb
xor
negb
push
add
mov
sub
push
dec
fwait
add
lcall
mov
jo
jb
mov
insb
js
js
leave
mov
jo
call
mov
xchg
adc
movb
sub
adc
mul
cmp
imul
lods
push
fstpl
cmc
daa
stos
into
cmpsb
dec
insl
push
les
xor
pusha
inc
pop
adcb
iret
pop
xchg
addl
mov
cmp
jnp
xchg
fisttpll
mov
ss
dec
inc
sub
sub
test
test
adc
jbe
fists
out
in
cld
mov
into
jge
movsb
cmp
lea
inc
mov
stos
pop
rolb
loopne
cmp
test
cmp
shrb
cmp
add
out
dec
in
jnp
je
push
test
sar
addr16
add
adc
mov
ret
jbe
jmp
in
xchg
cwtl
jne
jns
mov
mov
testb
pop
jp
push
aam
sbb
xchg
lcall
mov
and
sahf
and
jno
cmpsb
aaa
adc
push
mov
push
adc
test
outsl
fsubrl
lods
pushf
stc
adc
mov
push
fiadds
xor
test
mov
mov
xchg
jl
int
cmp
jge
scas
push
dec
or
mov
cmp
cwtl
and
popf
rorb
repz
adc
pop
or
pushf
push
inc
and
test
test
jge
popa
jmp
pop
lea
dec
test
iret
xchg
add
stos
mov
cmp
in
out
dec
mov
lret
hlt
dec
dec
cltd
sbb
push
dec
push
out
xchg
cs
imul
xchg
ficoml
jl
movsl
pop
pop
stos
add
jg
cld
xchg
out
fsubl
inc
inc
add
loope
or
arpl
add
push
movsb
and
xlat
sarb
and
scas
or
jmp
xor
or
stos
jmp
sbb
shlb
enter
mov
push
movsb
inc
xor
rcrl
pusha
out
mov
lds
mov
into
dec
fs
mov
arpl
enter
dec
test
ss
or
cli
pop
inc
lock
mov
cmp
arpl
xor
mov
dec
cs
mov
fsubrs
mov
fdivs
cmp
subb
pop
sbb
jnp
xchg
ret
sbb
int3
xchg
jle
jecxz
repnz
shll
push
xchg
aam
dec
add
xchg
jp
pop
aaa
sub
jl
loope
and
icebp
imul
rcr
bound
xor
dec
fnstcw
movsb
mov
push
lcall
sbb
sbb
mov
int3
cmc
movsl
sahf
loopne
pop
andl
add
and
mov
adc
jl
push
sub
leave
and
out
fsubrp
xor
in
popa
rorb
rcrl
cld
dec
adcb
sub
dec
xchg
inc
push
mov
inc
stos
lds
mov
in
in
xchg
fwait
xchg
and
mov
inc
in
aas
or
jae
sbb
aad
iret
div
testl
lds
cltd
jnp
in
lret
pop
ljmp
in
jb
xor
imul
test
adcb
shr
cmp
std
mov
in
in
cmp
mov
cld
dec
xchg
mov
sbb
pop
push
jge
inc
lods
push
cmp
in
sub
xor
inc
mov
or
lock
xor
cld
mov
push
lret
push
mov
mov
icebp
add
sbb
repnz
sub
test
mov
jne
fmuls
adc
push
ret
loopne
sub
xchg
cmp
xor
pop
mov
fsubr
pushf
int
adc
push
aas
pop
pop
add
mov
or
adc
mov
fsubs
sarl
dec
adc
mov
adc
mov
and
pop
std
ret
jl,pt
or
lcall
sub
inc
lods
icebp
sarb
jae
jne
fistpll
enter
in
mov
mov
add
or
mov
push
push
push
adc
repnz
arpl
mov
mov
shll
cwtl
daa
out
cmp
stos
push
jnp
jle
push
push
mov
cmpsb
std
cmp
and
add
outsl
mov
int
enter
mov
insl
paddusw
xor
lods
aaa
stc
mov
jge
sbb
popf
mov
pop
out
adc
dec
out
sub
or
adc
jmp
cmpsl
iret
divb
pop
cmp
cmp
sbb
jle
sbb
cmpxchg
push
icebp
out
incb
insl
enter
push
inc
push
push
push
outsl
pop
mov
mov
mov
add
fsubrl
xor
cld
pop
fsub
bsf
mov
lea
mov
das
xchg
std
xor
orb
popf
lods
subb
jg
loopne
sub
roll
push
inc
push
cmp
mov
dec
loopne
and
daa
lods
and
cmpsb
movsb
loope
out
aaa
jae
lret
lods
adc
jle
jnp
cmp
jb
imul
push
adc
push
push
xor
out
imul
push
lret
fwait
popa
faddl
mov
testl
sub
adc
lret
shr
fwait
bound
leave
lds
xchg
dec
shrb
cvtps2pd
dec
in
das
ret
pop
and
push
jmp
cmp
mov
adc
sti
xchg
mov
cmp
arpl
insb
jge
or
je
or
adc
lret
lods
lock
scas
out
mov
adc
movsl
xlat
mov
mov
xor
popa
sub
xchg
loope
or
cmp
push
int
sbb
adcb
mov
test
lret
push
out
out
mov
jne
xlat
sub
sahf
pop
xchg
inc
add
fstl
jecxz
test
adc
insl
or
dec
imul
neg
repz
stc
or
xor
sbb
mov
dec
std
stc
inc
add
fsubr
cmp
mov
dec
nop
xor
cs
icebp
pop
bound
lret
rorb
mov
jno
and
movsl
cmp
pop
xor
jl,pn
sbb
and
xor
pop
roll
movsl
outsb
sarb
faddl
mov
stc
pop
inc
fcomp
mov
inc
test
inc
xchg
jle
sti
inc
and
push
mov
cld
pop
pop
outsl
add
mov
xchg
int3
mov
or
subl
xchg
outsb
bound
add
in
lea
movsl
mov
in
pushf
jmp
pushf
and
sahf
lret
dec
push
xchg
popf
les
or
in
push
adc
mov
cmp
popa
test
out
jl
shrl
adc
testl
lahf
dec
cmpsl
rclb
inc
das
addb
adc
icebp
sub
lds
xlat
addl
not
or
mov
mov
lahf
in
pop
js
jle
iret
notb
stc
pop
jl
dec
fwait
mov
pop
sub
adc
xchg
pop
add
sub
dec
or
xor
inc
jp
or
mov
cmc
insl
loopne
fstpt
daa
mov
add
dec
cmp
mov
sbb
pushf
jg
stos
cmp
pop
mov
fdivrl
leave
lcall
mov
fdivrs
aad
pop
imul
pop
pusha
xor
cmp
outsb
push
pusha
add
xchg
shlb
imul
push
jne
push
inc
loopne
or
call
mov
les
adc
inc
pop
add
pop
inc
pop
cmp
popf
fists
sbb
js
out
push
add
dec
push
les
and
mov
mov
pusha
push
mov
loope
test
ja
jp
and
mov
ja
stc
mov
jae
int
ss
arpl
pop
mov
repz
sbb
push
lret
scas
cltd
push
cld
aam
idivb
mov
lret
mov
adc
sbb
jle
mov
lods
les
jmp
lods
pop
adc
loope
orl
cmp
call
cld
in
jmp
test
test
test
dec
bound
jns
jo
mov
push
insb
ja
rorb
fisubl
fwait
or
xor
push
sti
gs
pop
aaa
pop
cmp
stos
jl
xchg
adc
in
cmp
or
sub
mulb
mov
insl
ret
int3
adc
ficoms
mov
mov
daa
lahf
mov
aaa
jbe,pt
jne
jmp
cltd
push
shrl
js
arpl
inc
pop
or
clc
hlt
cltd
dec
in
mov
jmp
xchg
xchg
mov
and
pop
inc
xor
dec
jge
fmulp
cmp
mov
cmpsl
outsb
bound
adc
or
mov
cli
lods
xor
push
cmp
dec
ret
sbb
sahf
into
test
add
outsb
mov
pop
jg
xchg
push
int
xchg
pusha
pop
mov
movsb
into
xchg
pop
clc
iret
cltd
or
repz
rcrb
pop
xchg
xchg
decb
cmp
mov
or
adc
xorb
mov
loopne
add
js
and
fadd
imul
adcl
insl
push
lcall
mov
inc
fcom
xchg
leave
jmp
idiv
pop
adc
adc
fs
movsb
mov
loop
jg
movl
cli
out
test
clc
cmp
xor
in
xchg
rcll
or
lahf
scas
cltd
mov
dec
adc
adc
inc
adc
bound
mov
into
xor
jg
lahf
add
or
mov
movsb
adc
mov
les
insl
add
repz
xchg
mov
insl
mov
inc
mov
ljmp
jbe
push
cld
cli
pop
stos
test
jmp
stc
lret
cli
fcompl
fistps
mov
adc
repz
out
ss
add
out
jp
xchg
arpl
bnd
xchg
mov
xchg
mov
repnz
dec
push
push
add
fildll
aad
push
cmpsb
adc
push
mov
push
pusha
mov
add
fwait
jg
insb
loopne
mov
and
divb
outsl
fwait
sub
mov
xor
ljmp
xchg
push
imul
push
dec
pop
dec
pop
push
stos
mov
stc
into
push
dec
bound
mov
add
insl
sbb
shrb
push
push
add
or
cld
repnz
xor
test
or
xchg
sbb
aaa
out
pop
push
lahf
movsb
sub
jo
stc
push
pop
into
inc
fs
xchg
imul
lahf
loop
push
scas
lock
sbb
and
lds
int3
outsl
imul
icebp
cld
test
int3
clc
jmp
dec
lods
dec
mov
sub
inc
out
jo
adc
push
mov
popl
mov
loope
dec
bnd
push
inc
fistpll
loopne
call
sub
add
push
mov
insb
stc
mov
jne
dec
xor
xor
inc
movsl
lods
sub
out
jecxz
jb
push
into
sahf
adc
fs
inc
inc
adc
dec
fmul
leave
fistl
repz
push
enter
jbe
pop
aas
sti
mov
inc
lds
cld
ret
lea
lods
mov
push
mov
imul
setg
mov
shrb
xor
repnz
testl
xchg
aam
mov
movsb
sbb
xor
scas
rclb
mov
lret
xor
sub
cmp
xor
rclb
pop
jmp
push
lds
mov
outsb
nop
adc
and
pop
or
rolb
ficoml
inc
jb
mul
movsb
hlt
icebp
push
daa
ja
pushf
xchg
push
cltd
push
push
adc
and
test
pop
test
xor
inc
mov
cwtl
aam
pushf
push
or
inc
mov
mov
dec
push
jmp
fsubr
das
pop
mov
push
jmp
xor
shlb
and
outsl
mov
dec
int3
cmpsl
xor
mov
xor
cwtl
ja
push
xor
les
pop
or
jo
mov
fucomip
in
ss
inc
icebp
mov
xor
mov
mov
mov
push
add
ds
mov
int
popa
dec
pop
test
movsl
lret
inc
fnstsw
mov
cwtl
rcl
push
pop
xor
and
lcall
pop
cmp
push
jne
xor
or
add
lret
loope
adc
add
jl
mov
mov
pop
mov
aad
push
cld
mov
js
inc
mov
add
xor
or
outsl
icebp
sbb
imul
movsb
mov
lds
add
jmp
mov
jnp
sbb
push
inc
mov
lcall
fcmovnu
pop
hlt
lret
clc
jmp
sub
jl
mov
push
jecxz
fucomp
cmc
sub
adc
stos
cmp
xchg
mov
dec
lea
push
fs
xor
lret
andl
sarb
mov
pop
stos
adc
orb
testl
mov
subl
popa
xchg
jns
and
outsl
and
mov
xor
pop
fwait
orl
pop
fnstsw
mov
mov
fcompl
pop
test
sbb
pushf
sbb
adc
mov
hlt
dec
sbb
scas
aad
jb
in
rcll
xor
jnp
mov
jb
inc
adc
in
outsb
or
jb
pushf
sub
mov
scas
inc
sub
jecxz
rorl
inc
scas
mov
out
orb
shlb
sti
mov
rcll
fdivrs
push
jp
ret
pop
aam
call
adc
mov
jns
or
pop
aad
int3
clc
jl
inc
loopne
and
add
popf
xlat
aam
pop
sub
xchg
fwait
ret
jae
mov
jnp
sub
pop
and
push
add
fcom
sub
fsub
daa
cmpsb
test
pop
xlat
adc
push
and
xchg
pushf
pop
lds
or
mov
and
pop
ficomps
iret
adc
ret
cmp
jge
mov
test
into
cmp
inc
jo
cmp
in
xor
mov
test
and
and
lcall
cld
dec
cld
xor
mov
xor
add
cld
sbb
stc
and
jg
lods
mov
icebp
cs
leave
das
loope
out
or
inc
outsl
leave
aad
jg
sbb
outsb
and
xchg
jmp
dec
sbb
les
fldenv
lret
call
scas
cmp
push
enter
jp
mov
sbb
enter
push
es
loopne
aad
mov
jnp
data16
push
push
inc
clc
jae
bound
xchg
enter
mov
cmpsl
out
leave
movsl
xchg
xchg
cmp
push
test
mov
in
cmp
jae
inc
sbb
add
or
mov
vrcpss
xchg
iret
lods
jge
dec
popf
ljmp
sub
push
ljmp
xchg
lret
loope
js
mov
icebp
mov
xchg
out
clc
mov
mov
ljmp
loopne
test
mov
or
or
negb
repnz
stc
aaa
cmp
cltd
xor
add
test
in
out
cld
test
sub
jp
mov
mov
bnd
and
or
adc
dec
aas
and
leave
mov
mul
iret
ret
adc
shlb
inc
inc
cmpsb
jl
push
outsl
outsl
cmc
push
dec
icebp
imul
pop
xlat
push
in
pop
scas
fists
mov
xchg
push
dec
arpl
or
inc
or
cmp
mov
addr16
sbb
pop
test
imul
inc
lcall
cld
iret
sub
mov
push
sbb
leave
mov
lods
dec
push
aam
xchg
call
adc
jns
icebp
add
xchg
mov
pop
push
xor
xchg
push
dec
dec
push
pop
push
pop
dec
idivb
jns
add
mov
mov
add
test
mov
nop
loop
sub
sub
scas
adc
push
inc
jnp
xlat
insb
cltd
or
jl
fistpll
shlb
mov
sti
sbb
xchg
lcall
pop
xor
fisubrl
dec
scas
mov
cli
inc
imul
ss
push
adc
xchg
sbb
mov
and
iret
add
pop
sti
mov
add
icebp
xor
inc
das
ss
xor
aam
push
divb
mov
fcomi
inc
lods
mov
mov
jbe
push
fsubr
lret
jge
testl
jo
ss
stos
test
in
cwtl
push
dec
pop
out
xchg
rol
cli
pushf
dec
imul
add
and
js
decl
push
scas
je
inc
cmp
shll
ss
cld
in
jb
stc
sar
popa
clc
fs
or
call
movsl
adc
testl
call
in
lcall
cmp
xchg
repz
hlt
outsl
or
add
cs
data16
ficompl
mov
sbb
ds
shll
pop
adc
jp
pop
ss
mov
sbb
movsb
mov
sbb
ja
inc
outsb
pop
and
jmp
dec
pop
push
aaa
out
or
sub
pop
int
xchg
add
movsb
lahf
and
push
fidivl
out
test
out
mov
mov
mov
lods
sti
mov
xor
xor
psubsw
xchg
sub
ljmp
and
jge
jmp
test
sub
in
scas
les
cltd
fnstcw
std
mov
cmp
cwtl
fs
cmp
popf
jbe
dec
mov
sub
jb
aad
lret
fidivs
lahf
imul
sub
cs
xor
jo
pmullw
loop
out
xorl
stos
sub
cmp
dec
fadds
mov
xchg
rclb
es
ss
xlat
stos
pop
cwtl
mov
inc
and
icebp
pop
sahf
xor
jl
scas
mov
adc
dec
push
mov
out
and
or
inc
mov
mov
aaa
rol
loop
outsl
lret
lahf
sti
cmp
rcll
cli
aaa
iret
je
fsubrs
jnp
sbb
sub
inc
sub
dec
xchg
cs
sahf
pusha
or
out
add
es
mov
sub
mov
mov
mov
lret
xor
addb
dec
inc
inc
div
es
movsb
bound
pop
sbb
adc
scas
idivb
xchg
push
add
sub
outsl
clc
mov
pop
mov
in
cmp
or
dec
xchg
in
repnz
lmsw
jg
hlt
xchg
pop
mov
ljmp
fnsave
mov
aas
jno
add
add
popa
je
js
sub
mov
mov
fisttpll
sbb
sbbb
xchg
mov
push
rcr
pushf
enter
loopne
sub
cs
je
sbb
les
push
mov
mov
add
mov
adc
xchg
xor
cmp
aaa
push
push
cmp
push
pop
or
pop
fwait
xor
mov
push
mov
add
ss
push
xor
inc
addl
jne
mov
imul
scas
mov
inc
ja
out
fimuls
in
push
mov
xor
ret
jmp
inc
pop
sbb
sub
adc
xchg
mov
addr16
lea
add
insb
loopne
arpl
and
faddl
into
fimull
dec
mov
pop
mov
mov
jmp
lods
daa
dec
in
insl
sarb
dec
rclb
stos
je
cld
roll
mov
insb
cmp
mov
jmp
dec
mov
lret
data16
lret
sbb
fwait
cli
aaa
add
mov
lea
je
frstor
pop
push
es
repz
xchg
push
adc
dec
push
mov
push
mov
push
sub
add
fisttpl
xlat
mov
inc
sbb
or
addr16
xor
in
mov
idiv
jns
sbb
cmpsb
push
xor
mov
dec
and
dec
loop
ds
push
loope
idivl
cmp
or
ret
xchg
shll
test
aad
vunpckhpd
roll
cmp
or
and
lds
xchg
cmpsb
aaa
je
mov
inc
inc
inc
bnd
jno
jp
xchg
mov
mov
in
adc
popf
xor
cmp
loopne
or
sbb
cwtl
out
adcl
pop
jg
push
test
repnz
imul
cld
dec
lret
popl
adc
mov
dec
fisttpll
push
sub
inc
imul
xlat
dec
and
cmpsb
rorl
add
jle
cltd
movb
movsb
imul
std
fists
insl
sti
add
daa
lcall
pop
and
xchg
inc
ret
shrb
cmpsb
sub
push
pavgw
mov
mov
xor
mov
xorb
lock
dec
fwait
roll
inc
pop
jmp
mov
sbb
jmp
add
add
xchg
and
pop
sub
pop
mov
out
and
add
mov
les
push
int3
lahf
movsb
movsb
or
mov
out
ret
xchg
or
cmp
jbe
aaa
mov
gs
mov
mov
add
int3
pop
xchg
xor
xchg
xchg
pop
imul
add
sbb
arpl
inc
push
pop
popf
int
imul
add
dec
inc
push
inc
cld
les
push
inc
std
fwait
gs
repz
cs
jmp
ss
xchg
mov
pop
dec
push
dec
push
pop
pop
mov
in
jne
sub
add
mov
add
sahf
inc
cld
add
add
mov
jmp
jmp
jle
cmpl
dec
jg
sbb
data16
inc
int3
sub
sbb
mov
int
int
mov
and
mov
mov
mov
add
dec
and
xor
sbb
pop
mov
cmp
mov
leave
cmc
xor
mov
and
aam
pushf
out
sbb
xor
out
mov
xchg
mov
sub
sbb
mov
cltd
add
push
mov
dec
pop
inc
dec
sub
cmp
lret
push
pop
dec
mov
xor
fs
mov
mov
dec
lods
jle
jg
xchg
and
mov
notl
inc
roll
insl
inc
ljmp
es
rorb
pop
and
adc
js
dec
push
arpl
aaa
add
xchg
out
add
xchg
inc
sbb
rcrl
xchg
add
or
sahf
addr16
mov
leave
sti
adc
mov
cli
test
or
aas
jmp
adc
scas
lock
pop
dec
loop
test
filds
xchg
push
xor
insl
xlat
or
xchg
add
aad
cld
shll
andb
decb
insb
aam
nop
call
popa
ss
adc
test
inc
cld
popfw
ss
ljmp
dec
aas
sar
ja
and
mov
mov
push
adc
dec
gs
mov
repz
cmp
xor
xlat
add
insb
outsb
xchg
leave
je
jne
in
inc
xor
sbb
jns
lahf
clc
inc
setl
mov
cld
pop
dec
push
ret
jecxz
rcrl
inc
push
out
lret
cmp
ror
adc
xchg
pop
fnstsw
push
shlb
mov
fbstp
xchg
mov
out
or
add
loope
imul
gs
or
ljmp
or
mov
nop
push
mov
and
loop
jb
mov
ret
daa
mov
mov
add
sub
add
jno
adc
mov
xchg
inc
push
imul
fsubp
mov
imul
lcall
sbb
fwait
les
jne
outsb
iret
inc
add
jmp
icebp
jmp
testl
ficoml
pop
push
mov
cwtl
mov
inc
add
push
cmpb
sbb
icebp
jge
and
outsb
mov
pop
xchg
out
add
mov
mov
popf
insl
les
pusha
ds
rolb
rcrl
movb
fcomps
pop
pop
pushf
repnz
inc
call
les
mov
lock
mov
mov
or
mov
cmp
jmp
repnz
xchg
lea
mov
mov
rcrb
test
cmpsl
aaa
mov
and
push
sbb
inc
sbb
decb
jb
rcrl
shll
ficomps
dec
roll
sub
dec
sbb
jge
inc
push
divl
popa
jecxz
in
sub
mov
mov
push
pop
or
xchg
arpl
shl
xchg
test
imul
icebp
dec
adc
imul
xchg
out
mov
jp
xchg
pop
inc
cwtl
daa
inc
xchg
pop
add
or
rcr
ret
push
pop
cmp
mov
adc
fcmovnu
pop
sub
out
sbb
es
in
sub
push
fstp
add
sbb
mov
lea
pop
clc
mov
je
add
in
lds
imull
sbb
insb
jbe
sbb
dec
fwait
imul
and
adc
add
aaa
lods
adc
xchg
jp
sbb
push
into
leave
scas
jb
cmpsb
aam
cmpsb
jns
hlt
jg
mov
xchg
ja
fstpl
or
pop
mov
mov
push
movsl
add
ss
icebp
push
sub
xchg
orl
dec
arpl
push
dec
in
dec
xor
pop
sarl
xlat
jmp
int
sahf
xor
cmpsb
xchg
daa
add
mov
dec
sub
add
and
mov
or
or
imull
dec
aaa
imul
and
jne
cmp
pop
pop
das
out
pop
adc
fnstcw
es
mov
sub
outsb
and
sub
mov
sahf
lock
pop
mov
or
xor
push
xchg
mov
mov
mov
xor
test
leave
mov
repz
movsb
fs
and
xor
je
enter
adc
cmp
iret
daa
dec
or
mov
lods
popa
push
mov
test
in
mov
out
mov
vpunpckldq
loop
ljmp
mov
mov
not
and
leave
sub
pop
pop
sbb
or
mov
dec
mov
in
out
lock
mov
and
fdivr
andl
shlb
mov
inc
xor
dec
push
pop
pop
sahf
dec
cmp
cmc
mov
push
int3
pushf
cmpsl
test
stos
push
push
mov
sbb
sbb
or
js
or
cwtl
sahf
push
mov
mov
xchg
andb
inc
jl
pop
push
or
push
mov
data16
pop
ljmp
or
pop
sbbl
aam
lcall
push
pushf
sub
in
push
orl
out
cmc
cmp
out
sbb
xchg
push
mov
lret
stc
xor
or
jg
jnp
push
cli
jge
data16
in
mov
into
jg
sub
mov
ljmp
into
cmpsl
fcoml
mov
mov
lods
pop
xchg
xchg
adc
jo
jo
mov
mov
xchg
dec
cmp
or
and
xchg
ret
sub
push
push
jecxz
mov
shl
pushf
ja
clc
sub
inc
mov
out
inc
cmp
mov
push
push
inc
push
test
mov
add
mov
add
jnp
fldenv
cmp
hlt
out
xor
data16
shlb
and
push
enter
jg
popf
es
stos
in
mov
inc
adc
mov
aam
sti
pop
mov
aam
std
int
mov
jne
fdivl
mov
sti
jbe
nop
xor
inc
jae
mov
rcrb
dec
mov
insb
ss
cmpsb
cmc
out
mov
push
ss
push
cmpsb
adc
ljmp
lret
fwait
fs
ljmp
cmc
push
mov
fistps
test
loopne
pop
dec
ret
rcrb
pop
xlat
pushf
jbe
xchg
ljmp
les
mov
dec
sub
scas
inc
mov
clc
cmp
sub
dec
pop
add
jo
frstor
movsb
jae
jns
pop
pop
mov
xor
xor
cmp
inc
in
jp
or
push
pop
bound
mov
gs
cli
ja
lahf
mov
popf
inc
adc
repz
mov
ss
xchg
cmpsl
mov
mov
out
fcmovbe
push
jbe
dec
sub
jmp
xor
jb
mov
or
push
arpl
push
jp
mov
sub
pusha
lret
into
xchg
jge
sub
xor
sbb
pop
jg
pop
repnz
xchg
mov
pop
fisubrs
nop
addb
in
mov
repnz
mov
mov
inc
bound
in
stc
popa
pop
mov
in
xlat
mov
mov
mov
daa
push
das
sahf
cli
test
xacquire
neg
iret
or
mov
in
cmp
inc
cltd
leave
ja
neg
adc
and
inc
sbb
add
addr16
fiadds
push
sbb
mov
xlat
inc
loopne
adc
daa
nop
sti
xor
and
and
in
ss
popf
adc
inc
jne
and
imul
lahf
inc
mov
cmp
or
dec
enter
and
sarl
stc
lret
fcompl
sbb
outsb
adc
inc
pop
mov
lods
cmp
add
pop
mov
cmc
in
xchg
cmp
call
inc
loopne
jb
xchg
inc
pop
outsl
icebp
in
mov
into
dec
mov
ljmp
sti
ja
xor
dec
push
cltd
push
cli
clc
and
ret
sub
fildll
jle
mov
mov
and
ret
lret
cmpsb
aaa
pop
adc
movsb
les
std
pusha
sbb
leave
pop
fsubl
aad
sub
es
dec
mov
cmp
test
dec
int3
pop
es
dec
sbb
ret
adc
scas
xchg
push
mov
movsb
adc
scas
cmp
mov
enter
out
push
jle
inc
test
xchg
fldt
xchg
jne
gs
mov
scas
clc
sysexit
cmp
mov
lret
dec
fcmovne
mov
push
out
add
adc
xchg
adcl
pop
in
aas
or
pop
adc
shl
test
in
out
pushf
add
xchg
aaa
xchg
and
rcll
sbb
insl
jmp
mov
jb
mov
subl
les
jne
fs
xchg
pop
sbb
lods
hlt
inc
push
int3
xchg
inc
xchg
inc
adc
jns
stc
data16
cmpsb
mov
xor
sub
dec
lcall
add
call
fmull
loop
daa
xlat
mov
stos
xor
cmp
push
add
fwait
divl
jl
ljmp
insl
test
xor
dec
out
shrb
push
pop
loop
push
cld
xorl
or
sub
dec
mov
adc
inc
stc
sub
fisttps
lahf
mov
inc
lea
lcall
pop
aas
mov
into
stc
lret
and
push
mov
out
fimuls
dec
xor
mov
hlt
inc
mov
xchg
or
sbb
push
repz
push
addl
sub
cltd
dec
mov
mov
sbb
adc
test
sbb
aam
movsb
cmp
data16
shr
sbb
jge
xchg
stos
ljmp
adc
xor
ret
inc
sbb
pop
sub
mov
push
xchg
arpl
inc
shll
pop
sbb
inc
add
sub
movb
pop
xchg
mov
fwait
push
or
arpl
into
fmull
mov
outsb
push
jb
leave
mov
mov
repz
ret
mov
rcrl
jae
add
ret
sub
adc
cmp
add
cs
test
ret
xor
adc
push
lret
movsb
je
movsb
or
adc
popf
repz
out
shrl
sub
and
jle
add
dec
mov
mov
mov
cli
xchg
dec
leave
dec
pop
je
dec
or
lods
cld
shll
inc
jbe
push
popf
xchg
fcomps
jbe
cmp
ljmp
jg
ds
push
jb
sbb
out
popf
push
dec
cld
jecxz
mov
movb
popa
sub
jmp
test
insl
push
or
mov
pop
clc
ret
call
stos
jmp
jae
aam
cs
stc
lahf
xchg
and
sti
mov
and
cwtl
mov
in
arpl
cld
inc
add
test
xchg
mov
fsub
dec
xchg
push
cmp
mov
nop
hlt
inc
lcall
test
lahf
fucomip
lret
xchg
xor
inc
in
xchg
sbb
inc
and
addr16
in
dec
jle
scas
lcall
jle
push
inc
pop
mov
sub
xor
in
add
movsb
icebp
sbb
into
repz
xor
sbb
xor
add
and
sar
lret
mov
test
sub
xchg
int
loop
cmp
adc
in
stos
add
jle
pop
inc
dec
inc
pop
dec
pop
pop
inc
cwtl
inc
loop
ret
outsb
out
cmp
add
mov
add
jno
add
inc
add
iret
je
cmp
test
outsb
mov
xchg
jmp
lahf
push
std
push
inc
flds
in
sbb
ds
roll
push
or
into
sbb
sub
in
dec
lods
mov
push
push
mov
xor
dec
xchg
jecxz
xchg
dec
das
xor
sbb
cld
jbe
add
lea
sub
mov
shrl
jae
mov
arpl
xchg
das
mov
mov
xlat
test
lods
adc
mov
adc
jge
out
adc
cmp
xor
jo
sub
or
loopne
sar
cmp
sarb
daa
test
add
mov
pop
pop
and
dec
sbb
xchg
jmp
in
in
sbb
push
loopne
pop
mov
push
cmp
inc
mov
mov
mov
or
fists
das
dec
cmp
dec
cli
add
cmp
adc
rcll
fldt
mov
cmpsb
inc
push
shrb
dec
lret
mov
js
hlt
push
sub
sahf
maxps
push
sti
call
dec
outsb
pop
xchg
clc
icebp
add
iret
xor
jle
pop
das
mov
xorl
dec
adc
push
test
outsl
sub
jg
shll
mov
insb
inc
mov
mov
mov
iret
add
sub
inc
imul
gs
adc
test
pop
or
and
shrb
movl
sbb
mov
mov
jbe
push
xrelease
stos
lods
cmp
ja
paddw
pushl
pop
sti
mov
jge
jo
stos
jmp
jne
sbb
jl
inc
inc
add
jo
lahf
imul
and
lods
inc
and
inc
pop
ljmp
or
push
in
popl
dec
pop
push
inc
or
mov
lock
icebp
stos
mov
cmp
pop
inc
stc
mov
xor
fdivr
lcall
adc
out
or
arpl
dec
jae
adc
mov
bound
out
scas
pop
mov
in
invd
dec
popa
ds
insl
nop
cltd
repz
outsb
lahf
mov
mov
jbe
rcll
hlt
aaa
gs
push
mov
xor
jl
in
adc
clc
icebp
jns
xchg
out
inc
mov
sarl
popf
outsl
iret
mov
inc
fstpl
adc
mov
cmp
loopne
or
cld
lret
arpl
outsb
cmpsl
xchg
mov
int
add
shll
loop
inc
dec
cmc
test
stos
arpl
std
in
sbb
push
cmp
xor
insb
jo
inc
xor
mov
sub
mov
testl
std
js
mov
lret
cmp
push
pop
cmc
and
cmpsb
fwait
clc
push
imul
or
mov
loope
jnp
cli
inc
sahf
int
pop
fnsave
inc
add
mov
sub
test
cltd
leave
sub
out
pusha
jnp
lock
xchg
outsl
nop
xchg
rcrb
push
dec
dec
nop
dec
in
popf
sbb
into
mov
dec
std
sub
cmp
pop
mov
sbbb
out
mov
xchg
lods
fsubs
das
les
fsts
test
mov
cs
xor
mov
mov
fisubs
hlt
fwait
adc
inc
and
pop
cmp
mov
pop
cmp
daa
xor
in
popf
xchg
shrl
cmp
adc
push
push
jp
jecxz
es
xchg
shlb
inc
pop
flds
andb
sbb
lahf
xchg
rolb
xor
daa
rcrl
cmp
adc
add
push
aas
insb
mov
in
dec
inc
out
pusha
sub
pop
adc
lods
pop
and
pop
mov
subb
repnz
pop
scas
push
jle
cld
sti
mulb
orb
pop
lret
aaa
iret
adc
jo
hlt
jp
jbe
lods
cmp
pop
add
mov
xchg
lods
inc
cs
shlb
in
xchg
pushf
inc
sbb
jae
jle
cmp
mov
std
repz
jns
cs
mov
xchg
adc
cmp
pop
lret
cmp
pop
lods
dec
popf
rcr
ss
pop
les
outsb
lds
addr16
cmp
aaa
sub
pop
cltd
setns
stos
dec
rolb
testl
add
es
repz
sbb
in
cmpsb
jb
jae
dec
mov
mov
ss
pop
fwait
out
in
movsl
and
push
mov
lret
jae
iret
iret
es
or
mov
incb
push
xchg
sub
or
mov
xchg
adc
or
adc
fwait
ret
xchg
and
push
xor
sub
adcl
jecxz
mov
dec
or
push
adc
fnclex
stos
and
xchg
dec
push
data16
push
jne
sbb
push
bound
fdivr
dec
jg
shl
dec
fistps
int3
rorl
cli
addr16
jl
repnz
out
xlat
sbb
dec
xchg
repnz
xor
jne
pop
fistl
push
fisubs
xlat
cld
dec
and
lahf
mov
hlt
dec
add
and
xchg
test
or
in
push
out
fiadds
push
jno
neg
cmp
mov
int3
or
out
and
inc
insb
xor
rorb
or
xor
stos
loope
pop
and
jne
les
jb
adc
mov
clc
adc
dec
cmc
in
fcomps
popa
cmp
push
mov
mov
mov
adc
negb
or
lahf
test
mov
pop
adc
mov
into
cs
rcr
adc
je
insl
in
popa
add
add
gs
pop
outsl
hlt
stc
jle
inc
xor
xor
mov
dec
imul
mov
fbstp
push
inc
push
push
push
push
push
inc
rorl
popf
stos
loop
ja
fadds
add
push
adc
lahf
clc
sub
mov
into
ret
inc
lahf
movsl
int3
and
sbb
cmp
stc
imul
mov
test
loop
outsb
mov
adc
jae
es
mov
or
add
add
jecxz
mov
dec
pop
or
sahf
xchg
rolb
cld
push
xor
icebp
sahf
lds
jno
pop
shrb
cmp
and
mov
push
jle
hlt
add
cmp
pop
jb
mov
xchg
imul
or
ret
inc
into
fstpl
pop
sti
aas
in
mov
xchg
pushf
or
inc
fistpl
mov
adc
int
pusha
mov
adc
movsb
sti
cwtl
cwtl
sub
imul
pop
and
add
add
jae
imul
cmp
mov
fisubl
leave
loope
and
jecxz
inc
xchg
test
cmp
ljmp
cwtl
pop
leave
int
test
imul
and
imul
and
lds
push
enter
add
cs
fwait
sub
ret
mov
mov
imul
inc
fbld
lahf
add
cli
mov
aam
inc
loop
pop
xchg
subb
lods
stc
ret
ljmp
mov
cmp
ss
jg
pop
stos
rolb
aad
cmpb
lret
and
jae
pop
or
cmp
ret
sbb
mov
test
xchg
adc
fidivl
pop
jge
pop
adc
clc
ss
pop
aam
enter
stos
cmp
aas
or
out
push
add
adc
fdivrp
cld
add
fbstp
sar
or
dec
aaa
aam
pop
lcall
inc
cmpl
and
stos
mov
scas
stc
rcrl
inc
notl
xlat
fsubr
add
outsb
rorb
push
mov
ds
push
test
jns
mov
test
dec
sbb
out
or
outsl
pusha
into
ljmp
sub
mov
lock
xlat
mov
rorl
je
jbe
stos
jnp
dec
mov
jg
or
pop
hlt
pop
mov
fldl
and
loopne
cmp
cmc
sbbl
aaa
loopne
inc
popf
stos
test
mov
mov
fdivrs
data16
mov
jo
rolb
add
mov
adc
hlt
outsb
pop
lods
shrb
jne
mov
cmpsl
inc
mov
lock
lea
mov
and
add
mov
mov
xlat
movl
ret
and
test
pop
and
mov
fadds
mov
push
add
jae
and
cs
mov
pop
nop
popf
pop
lods
std
mov
stos
loop
pop
push
movsb
inc
pop
pop
sub
movsl
outsb
sbb
and
pushl
in
mov
ss
scas
adc
iret
je
aad
hlt
and
idivl
xlat
dec
pusha
fwait
inc
xchg
lock
push
sbb
mov
add
gs
js
mov
jp
dec
cld
push
inc
sbb
es
mov
and
fdivr
out
mov
nop
push
push
xchg
xchg
inc
pop
ret
push
sub
or
push
sti
dec
and
dec
xchg
ret
insb
pop
and
frstor
pop
dec
xor
ds
in
popf
xor
js
cmp
inc
std
ss
dec
and
add
push
xor
xchg
jns
lahf
cli
addb
imul
cmp
out
in
les
insl
gs
mov
loopne
insl
fs
mov
or
psubb
or
popf
mov
std
or
sahf
arpl
pushf
add
xchg
dec
shlb
add
das
jecxz
push
mov
push
insb
mov
add
xlat
pop
fdivrl
les
add
and
vunpckhps
sub
push
data16
sbb
mov
or
cmp
test
sbb
or
es
out
pop
inc
pop
scas
push
push
jb
cld
pop
inc
jmp
mov
push
pop
xor
das
fdivr
or
mov
inc
rcrb
cmp
push
jle
pop
or
fistpll
jo
fstpt
mov
fistpl
dec
test
dec
pusha
cs
mov
mov
aaa
push
push
mov
sbb
inc
arpl
pop
bnd
lret
inc
jp
push
scas
test
ss
sahf
cmp
add
pusha
loope
orb
sub
lahf
xlat
dec
lcall
mov
into
subb
shrl
lret
pop
inc
cmp
arpl
xchg
jae
ja
dec
push
add
dec
or
inc
adc
into
jne
jbe
lds
push
jae
mov
lods
into
inc
sub
into
shlb
or
mov
inc
stos
xor
cmp
lds
push
insl
call
sbb
pop
out
push
jb
mov
int3
pop
aas
mov
mov
sub
lods
sahf
mov
icebp
pop
leave
scas
mov
cmc
popa
fcomps
adc
sub
cmpsb
pop
mov
cmp
xor
cmp
in
xchg
dec
jb
fdecstp
icebp
lods
ret
addb
into
jl
loopne
push
lods
mov
cmp
pushf
aam
aaa
mov
outsb
cld
or
popf
insl
outsl
loope
in
xchg
push
test
sbb
inc
pop
ljmp
sbb
mov
jge
fidivl
enter
xchg
add
cwtl
fdivs
sub
xor
mov
mov
shlb
xor
jecxz
aas
mov
add
sbb
arpl
sub
jp
cmp
shlb
push
rcll
inc
mov
lcall
or
enter
mov
jne
mov
outsb
mov
out
shrb
imul
aaa
push
pop
pop
push
and
clc
sahf
sub
and
mov
adc
xchg
mov
lret
lahf
repnz
push
push
push
pop
push
pop
pop
xchg
stos
mov
pop
dec
filds
add
cld
mov
lock
pop
jo
or
mov
arpl
adc
fwait
in
aas
adc
jbe
test
leave
lret
lds
push
ds
pop
xor
lock
icebp
ds
push
adc
leave
test
popf
addr16
leave
sub
jmp
data16
ljmp
ljmp
int
icebp
js
sub
dec
push
fwait
add
aas
daa
jle
push
mov
cmp
adc
cmp
mov
scas
cmp
xchg
mov
lea
aad
je
daa
mov
movsb
stos
aas
adc
outsb
movsl
jmp
mov
pop
in
into
pop
jecxz
inc
adc
jl
and
cld
cmpsb
out
push
ffree
xchg
adc
clc
int
mov
xchg
popa
cmp
jecxz
call
mov
movsl
push
or
mov
fidivrs
push
xor
push
out
pop
or
push
jg
lock
fstpt
enter
mov
out
in
mov
das
es
roll
stc
adc
cmpsl
mov
fisubs
icebp
test
pop
pop
test
sbb
mov
dec
inc
mov
push
push
mov
adc
mov
imul
stos
xor
cli
cwtl
cmp
stos
sub
xchg
call
mov
sbb
dec
imul
jo
fdivrs
js
pop
lahf
jns
ds
inc
sub
fdivs
mov
popf
sbb
mov
mov
aas
jbe
lock
imul
rolb
pmaxsw
inc
push
dec
xor
ljmp
mov
adcb
out
push
stos
stos
jl
aam
inc
repz
dec
lds
adc
sub
call
sub
leave
pop
jl
test
int3
scas
sarl
mov
mov
fldt
push
xchg
xchg
out
fnstenv
pop
sbb
xchg
stos
out
stos
pop
push
xor
dec
push
aas
jae
push
aam
xchg
add
stc
cmp
xor
pop
iret
mov
pop
cmpsb
or
rol
lret
js
sti
shll
and
adc
xor
cltd
imul
inc
push
push
pushw
jecxz
jle
stos
sahf
pop
lret
jns
iret
or
pop
mov
out
int
adc
push
mov
dec
and
icebp
test
jge
xor
std
sub
addr16
adc
popf
rcr
jns
xchg
mov
xchg
fidivs
pushf
stos
aad
insl
shr
mov
fs
and
stc
mov
sahf
rol
dec
cmp
lea
enter
lea
scas
shlb
cmpsl
rorb
pop
push
ret
jno
add
iret
mov
in
incl
inc
lcall
inc
sti
xchg
test
in
xor
add
je
aam
sahf
pop
inc
cmpsb
addb
cmpl
and
or
fs
adc
cmp
jns
pop
outsb
lahf
or
mov
mov
pop
jge
sbb
jne
xchg
push
fstl
mov
movsb
jbe
cmp
xchg
pop
dec
adc
cltd
adc
sbb
or
mov
js
mov
push
push
dec
sbb
sub
xor
add
jp
mov
ret
add
in
add
fimull
mov
int
add
and
or
push
sti
pop
pop
dec
shlb
jg
lds
push
imulb
pop
xor
pop
sbb
rcrb
and
scas
cmp
mov
and
inc
and
pushw
es
adc
ficoms
lret
jne
or
adc
mov
jle
push
mov
mov
lds
call
push
inc
xlat
and
into
mov
push
cmp
popf
mov
in
notl
shrl
add
mov
cmpsb
xchg
add
pop
clc
stc
push
pop
popa
insb
call
mov
sbb
mov
jb
mov
mov
cltd
jmp
bound
cmp
test
aad
xchg
pop
cmp
imul
sbb
mov
ficompl
icebp
insb
shll
rorl
jmp
int3
push
in
jbe
xor
aaa
scas
out
pop
cld
pop
pushf
inc
sbbb
jns
mov
std
clc
mov
repz
mov
jge
cld
bound
shll
dec
js
daa
add
mov
ja
ja
cs
frstor
xor
inc
inc
push
fwait
or
and
mov
ss
and
mov
lahf
adc
mov
gs
fs
push
leave
cld
mov
pop
mov
clc
xchg
push
test
arpl
mov
gs
add
ljmp
push
adcl
xor
jbe
jecxz
add
shr
fucomi
repnz
sbb
inc
push
es
sarl
aad
flds
stc
pop
adc
lcall
xchg
and
imul
and
mov
daa
ljmp
aam
add
sbb
cmpsb
ficompl
jg
das
lret
adc
scas
icebp
stos
les
lods
fimuls
mov
lret
xchg
hlt
sub
imul
sbb
mov
jmp
mov
mov
aam
in
mov
shll
mov
and
dec
cmpl
stos
jae
xor
adc
dec
lcall
add
sub
add
mov
lods
int
movsb
lds
repz
cs
push
lds
cmp
add
cmp
mov
add
fldcw
cld
xchg
sub
movsb
pop
pop
xor
push
pop
sbb
or
lds
pop
arpl
push
push
pop
push
dec
pop
idiv
xchg
shl
add
mov
add
inc
repnz
jg
lahf
ja
fmul
fsubrp
hlt
push
mov
lahf
mov
subb
jae
jo
dec
ds
lods
adc
add
mov
add
dec
pop
subl
inc
ljmp
ror
xor
pop
cwtl
lods
mov
js
push
dec
mov
fiaddl
xor
out
jmp
cmp
lock
adc
xchg
inc
cmpsl
cmovle
fiaddl
dec
lret
push
mov
in
inc
ds
mov
xor
jmp
hlt
dec
jo
and
loopne
xor
sub
cltd
jmp
mov
mov
adc
faddl
mov
negl
xor
and
fcompl
inc
stos
cmp
fmuls
cmp
xchg
lahf
in
adc
pop
lock
aas
jb
or
inc
ret
aad
pop
mov
adc
cmp
xlat
xchg
movsb
lods
mov
or
shr
icebp
das
pop
jg
shr
insl
pop
lds
popf
adc
or
iret
add
sbb
fisubrl
push
lods
leave
push
xchg
das
and
lahf
cmpl
movsb
sub
std
aad
mov
aaa
cli
mov
mov
or
push
add
or
test
daa
int
into
jbe
ljmp
push
mov
push
stos
pusha
pop
fsubl
adc
lret
sbb
xchg
pop
ret
xchg
ds
cmovl
lcall
jle
push
outsb
sbb
nop
into
ds
mov
arpl
mov
fsubr
sub
sbb
jge
rorb
dec
ljmp
pop
adc
cltd
iret
sub
and
and
arpl
mov
sahf
pop
dec
pop
sbb
xchg
dec
out
outsb
pop
call
imul
hlt
not
lret
and
mov
dec
push
jnp
gs
lds
or
mov
mov
cmp
add
dec
inc
aas
gs
jg
cmp
cmp
fidivs
ljmp
iret
in
popa
rcrl
int
test
popa
fdivl
sub
lea
fdivr
mov
inc
fstps
sub
dec
jne
ljmp
add
testl
cmp
stc
cli
fldenv
add
mov
lret
adc
pop
in
mov
dec
mov
push
push
es
push
inc
aaa
movaps
jmp
xchg
adc
fs
dec
icebp
push
jl
pop
sbbb
mov
xchg
andl
and
shlb
add
jl
call
cmp
jg
sti
jo
xor
mov
dec
jns
loope
scas
out
push
mov
movsb
lods
call
jns
sbb
cmc
movb
pop
xor
in
pop
gs
fisubl
movsl
push
ja
imul
jecxz
out
std
pop
sbb
mov
xchg
sub
popf
lods
cltd
sbb
loop
xchg
inc
cmp
and
fst
jb
dec
push
sahf
imul
fwait
inc
mov
mov
pushf
pushf
das
or
rcrl
ss
push
push
and
fidivl
inc
mov
xor
xchg
dec
in
aam
daa
aad
dec
jle
jnp
std
ss
hlt
push
xchg
inc
vpsubusw
push
add
loope
sub
mov
push
orl
cmp
xchg
and
mov
mov
sbb
lods
add
aaa
mov
daa
into
mov
mov
fwait
inc
ret
rcrl
call
rorb
mov
fcmovbe
mov
aaa
mov
jne
dec
cmp
push
js
push
jp
fs
cwtl
lahf
out
cmp
cld
ret
aaa
insb
repnz
push
mov
and
es
add
pause
mov
cwtl
nop
mov
jp
aaa
subb
shll
dec
inc
adc
adc
movsb
jl
add
rcrb
in
lcall
cs
imul
mov
dec
in
mov
push
fnstsw
adc
jno
fdivs
js
int3
fwait
or
std
out
aas
mov
sbb
cmp
arpl
movsl
into
cld
loop
aam
pushf
mov
rolb
popa
cmpsb
shrb
sub
push
scas
and
fidivl
cmp
pushf
andl
fistpl
sti
mov
pushf
call
mov
ljmp
jbe
call
or
scas
and
xor
movswl
jg
mov
fnstsw
xor
lods
push
fimull
daa
add
jg
jecxz
push
and
stos
out
in
out
sub
insb
push
fwait
lcall
xlat
movsb
xchg
outsb
cmp
or
lcall
adc
int
adc
out
jno
in
jb
bound
cmpb
pop
mov
sub
jae
cmp
lds
and
jns
add
mov
sarb
int3
fistpl
mov
add
cld
cli
sub
daa
orl
lret
in
mov
mov
fidivs
into
inc
mov
xorl
repnz
movsb
fldt
loopne
dec
insl
sti
xor
xchg
xor
stos
and
stos
jle
addr16
popf
pop
movb
inc
jp
out
sub
addr16
testl
or
lret
adcl
push
mov
int3
jnp
pop
dec
nop
fmull
inc
out
or
cmp
adc
hlt
in
adc
mov
aaa
dec
jae
fdivrl
push
mull
mov
xor
mov
inc
sbb
lea
xchg
pop
addps
dec
movsb
pop
popa
dec
fldenv
cltd
and
mov
divb
js
push
mov
mov
xchg
push
loope
adc
mov
mov
mov
out
lret
sarb
inc
inc
inc
pop
inc
pop
pop
pop
mov
push
mov
push
push
adc
mov
add
mov
push
pop
inc
imul
lods
jge
clc
lcall
sub
xchg
xor
mov
mov
push
inc
lcall
stc
out
out
lods
incl
popf
push
mov
cmp
scas
push
jb
xchg
push
cli
lea
jb
or
loopne
sub
aaa
scas
mov
add
sahf
movsb
push
lds
test
ja
adc
cli
mov
leave
stos
dec
out
pop
sarl
cmpsb
sub
lods
int3
mov
jmp
push
sub
iret
loope
lahf
stos
mov
xlat
and
mov
mov
pop
or
add
ds
xor
aam
mov
cmpsb
in
aas
jae
outsl
mov
xchg
mov
adc
and
mov
bound
push
push
outsl
xchg
jl
lods
pop
bound
mov
xchg
add
cmc
pop
fbld
xchg
jl
push
inc
bound
nop
mov
sub
lock
clc
push
and
fsts
or
jo
das
mov
cmp
jl
mov
shll
es
dec
mov
pop
xlat
adc
adc
and
movsl
push
inc
aaa
sbb
pop
ret
push
or
dec
clc
sbb
xchg
addr16
sti
jne
dec
mov
and
bound
cmp
and
mov
add
loop
mov
or
sahf
sbb
nop
pushw
cmpsl
repnz
or
sbb
iret
je
pop
int3
mov
pusha
pop
mov
hlt
add
xchg
pop
lods
shrb
addl
das
jmp
ss
sti
mov
in
mov
push
cmovne
pop
mov
mov
and
into
rclb
jnp
popa
lods
lcall
aad
sub
scas
aam
fnsave
nop
aaa
outsl
adc
cmp
cwtl
mov
sbb
adc
out
inc
or
xchg
adc
scas
or
adc
out
es
out
inc
mov
and
jmp
cmp
ret
in
cli
test
pop
or
dec
or
nop
mov
ja
enter
hlt
mov
pushf
xor
stc
xchg
stos
or
xor
fiaddl
fnsave
mov
xor
cmp
ljmp
xor
cwtl
ja
lret
sub
jge
repnz
mov
cwtl
push
mov
imul
add
add
jmp
cmp
in
lds
popa
xchg
dec
call
pop
lahf
lds
cmp
test
rcl
popf
in
mov
or
andb
out
and
lock
shl
mov
pop
lahf
or
rolb
push
shrb
fmul
jg
popf
js
add
std
or
sbb
dec
xchg
fwait
dec
mov
lock
loop
adc
mov
hlt
cmp
stc
xorl
add
adc
jb
ss
sbb
push
pusha
int3
add
cs
or
mov
dec
lcall
in
out
inc
in
shrb
jg
cmp
test
insl
leave
out
inc
mov
rcl
mov
lds
mov
orl
xor
stc
xor
add
or
adc
and
inc
or
cltd
daa
mov
popf
cmp
js
repz
rolb
push
lcall
push
jb
repz
jne
fisttpll
inc
cmp
imul
cmp
outsb
pop
mov
pop
pop
insb
push
push
adc
cmc
add
pop
jb
outsb
push
mov
or
mov
and
in
push
inc
iret
hlt
iret
mov
fdivs
aam
mov
and
sub
mov
rorl
or
push
orl
pop
test
movsb
and
repnz
icebp
xlat
adc
or
decl
les
mov
ret
mov
pop
pop
inc
add
xlat
outsb
lea
imul
sahf
lods
icebp
scas
scas
xorl
ja
scas
test
xlat
ficompl
shll
repnz
xchg
jne
push
push
dec
dec
pop
shl
cmpsl
arpl
and
add
lahf
pop
mov
es
lahf
js
inc
or
pop
sbb
movsl
mov
mov
fldl
dec
xor
jle
dec
addr16
or
push
subl
inc
cmpsb
adcl
mov
jp
out
jg
aad
shrl
jbe
into
mov
das
pop
clc
pushf
adc
xchg
mov
mov
push
inc
mul
lret
out
arpl
dec
addr16
fcomps
movsl
push
jmp
push
mov
push
data16
sbb
sub
xchg
pop
lahf
sub
cmpsb
xchg
jns
pop
push
negl
stos
and
xor
pop
push
dec
mov
out
push
adc
mov
mov
mov
push
popf
jno
ret
jecxz
sbbb
hlt
push
mov
xchg
add
adc
ss
andl
jae
push
dec
pop
or
push
pop
jmp
pop
idivb
stc
out
mov
aam
xorb
xor
or
push
and
imul
cmp
lock
mov
sub
pop
mov
sub
cmpsb
out
push
sub
sahf
imul
xchg
mov
sbb
dec
sub
jns
adc
push
push
push
cmp
pop
push
bound
sub
loop
sbb
addr16
jg
loopne
data16
jg
mov
xor
aaa
movsl
movsl
pushf
test
aad
rcll
jae
adc
mov
adc
mov
sbb
les
call
outsl
pop
pop
jns
push
jl
inc
out
or
add
cld
or
push
mov
mov
push
sub
inc
push
pop
push
pop
pop
ss
imulb
jg
data16
add
mov
add
push
lods
jns
jmp
mov
sahf
mov
mov
pop
jne
lret
ret
shll
adcb
outsb
mov
sbb
lahf
mov
mov
cmc
dec
jge
lcall
popf
dec
xor
fisubs
cmp
scas
push
in
js
xchg
rol
mov
jns
pop
cwtl
fidivrs
dec
nop
fbstp
idiv
and
rcrl
sbb
cmp
scas
out
add
push
dec
mov
jno
mov
out
dec
lret
or
jmp
dec
cmp
or
add
pop
lea
mov
mov
subl
jl
mov
lahf
insl
sub
mov
pusha
insl
add
cmc
pop
imul
jmp
sbb
mov
imul
or
mov
mov
aas
inc
xor
mov
ffree
stos
mov
es
mov
sub
push
xor
jge
adc
sbb
in
pusha
xchg
aam
push
or
mov
in
or
sub
xor
or
cmpsl
lods
shrl
lods
adcb
xchg
aam
push
ret
movsl
cmc
stos
enter
lds
inc
pop
imul
cmp
cld
mov
into
inc
sbb
mov
leave
std
movsl
inc
dec
add
xor
sbb
es
mov
cwtl
push
add
subb
jecxz
mov
pop
adc
fcomps
iret
mov
adc
and
cltd
xlat
mov
xor
pop
insl
iret
ja
xor
dec
idivb
push
mov
in
xor
insl
push
pushf
rcrb
insl
data16
sub
pop
xor
jno
daa
movsb
mov
and
inc
leave
movsl
adc
xchg
sub
xor
push
xchg
cmpsb
adc
pop
adc
pop
add
xor
adc
out
je
cmp
scas
inc
lds
add
es
cmp
and
fidivl
mov
lcall
iret
out
mov
fdivp
add
jecxz
cmp
sbb
jmp
cmp
es
adc
ret
mov
ficomps
test
jb
lret
sbb
out
xor
pop
insb
enter
xchg
sbb
popf
lods
iret
movsb
mov
push
and
insl
cltd
push
neg
cwtl
jp
popa
mov
and
cld
push
push
lret
lds
faddl
xchg
mov
or
adc
jmp
cmp
xchg
adc
mov
aam
clc
movsl
xlat
repnz
popa
xchg
jecxz
xor
inc
loop
daa
notb
push
and
jno
lock
lds
mov
jns
adc
dec
shll
mov
add
fs
xchg
stos
jle
iret
lret
mov
inc
test
test
push
jmp
data16
sub
call
jbe
out
int
jae
or
push
out
xor
push
jb
lahf
push
insl
movsl
fldenv
push
mov
pop
lock
lock
scas
int3
sub
aam
je
and
pop
and
stos
int3
pop
cmp
push
icebp
dec
xlat
mov
lea
fs
and
and
sbb
cmpsb
add
mov
popa
in
xor
mov
cmp
add
and
push
push
int3
fisttpl
push
ljmp
enter
loope
xlat
add
adc
pop
fidivs
stos
shlb
dec
mov
or
or
and
outsb
fnstenv
inc
jp
lea
popa
mov
pop
clc
rolb
in
repnz
pop
scas
cmp
mov
mov
xchg
fsubl
add
push
and
sub
and
loopne
add
jg
call
ss
cmp
adc
add
pop
pop
add
cmpl
cld
enter
cmp
movsl
mov
scas
and
leave
dec
jp
scas
adc
lock
fsts
dec
frstor
sbb
mov
xchg
decb
adcb
ljmp
inc
add
imul
idivb
and
fldenv
movsb
and
jno
loopne
insb
adc
and
int3
adc
jp
or
sbb
and
loope
out
dec
inc
cmp
inc
ljmp
lcall
out
pmaxsw
and
stc
std
mov
repnz
test
mul
mov
loopne
dec
movsb
ds
scas
mov
mov
add
fs
push
imul
cld
sbb
aaa
ja
jnp
es
push
test
lcall
add
fucom
mov
insb
cmp
popa
dec
test
mov
push
cwtl
sahf
xchg
std
xlat
pop
mov
out
popf
mov
cmp
inc
mov
incl
inc
int
icebp
cwtl
xchg
pop
fsubrs
fdiv
in
or
mov
xchg
dec
fisubs
lcall
mov
icebp
mov
aad
xlat
sbb
mov
xchg
or
lea
mov
test
cmpsb
flds
xor
xor
jns
cld
adc
outsb
scas
sbb
mov
addr16
push
fistl
cmp
adc
xchg
ja
repnz
je
mov
les
pusha
pop
xchg
in
xchg
leave
mov
mov
mov
ds
roll
pop
and
loope
lea
orl
call
pop
dec
jbe
inc
dec
in
sbb
test
repnz
int
jns
mov
enter
loop
mov
pusha
cwtl
lahf
iret
lea
add
mov
insl
fmull
push
call
ret
fwait
fwait
mov
dec
fnstenv
cmpsb
pop
adc
mov
mov
ret
xchg
sub
mov
icebp
movsb
pop
push
scas
fisubrs
dec
jb
mov
nop
sub
pop
inc
push
dec
inc
pop
pop
dec
push
dec
push
enter
and
test
add
adc
lret
xor
add
cld
lds
adc
movsl
les
mov
test
ds
stos
push
cmpsb
adc
mov
xor
jle
jne
sbb
sbb
stos
dec
popa
and
pop
mov
mov
je
in
add
rcll
and
bound
sub
xor
mulb
lock
arpl
xchg
sahf
or
jns
jecxz
xor
ficoms
cwtl
aam
push
dec
in
push
sarl
inc
iret
fildll
mov
xlat
cmp
cmpsb
xor
nop
adc
xchg
arpl
pop
and
push
mov
cmpsb
int
adc
mov
cmp
jae
push
mov
mov
adc
fdiv
inc
int3
scas
fdivrs
js
les
mov
or
mov
test
or
cmpsl
mov
ficoms
test
adc
in
dec
shll
jnp
int3
rcrl
sarl
inc
push
aaa
in
ret
sbb
xchg
and
call
pop
mov
dec
mov
sub
adc
push
daa
lock
cmpsl
push
push
lea
lea
cmp
xor
jp
pop
rol
call
fldt
mov
clc
rorl
lds
outsl
je
cld
int3
xor
inc
mov
sbb
inc
into
in
test
loop
inc
xchg
mov
out
imul
jae
pop
xor
sub
sub
jg
add
es
jecxz
inc
iret
xchg
xchg
and
fists
xor
lcall
imulb
shrl
jmp
lock
mov
jecxz
cmpb
cmc
stos
loopne
xchg
es
sahf
mov
outsb
push
jmp
adc
ret
pushf
retw
jge
push
push
nop
push
pushw
inc
jns
rolb
or
int
mov
lret
outsl
cs
jbe
push
push
imul
imulb
mov
sbb
adc
stos
adc
adc
xor
jnp
dec
sbb
jne
cmp
mov
faddp
pop
call
dec
ss
mov
cwtl
jno
mov
cmp
in
mov
add
xor
push
mov
movsl
call
insl
loopne
mov
adc
push
xchg
xchg
rclb
sub
push
stc
dec
out
inc
hlt
lret
in
push
cmpb
shlb
mov
jmp
test
or
mov
mov
icebp
out
mov
mov
out
or
rolb
inc
icebp
inc
xchg
dec
adc
cmp
iret
stos
iret
sbb
inc
insb
adc
xchg
push
cmp
mov
xor
daa
xchg
bound
stos
fldenv
scas
dec
inc
imul
das
iret
add
dec
mulb
call
push
cmp
das
mov
repnz
xchg
mov
adc
push
sub
je
lods
loopne
fidivrs
ljmp
shll
inc
xor
mov
insb
arpl
in
jnp
jg
cmc
scas
test
mov
arpl
filds
push
mov
jl
rcrl
pushf
adc
roll
fucom
std
xchg
arpl
popf
inc
sarl
jae
je
pop
lret
outsl
cmpsb
adcl
imul
push
outsl
stos
or
dec
movsb
addr16
outsb
rol
add
ret
push
cltd
pop
in
xorb
cs
iret
ja
dec
mov
adc
rcrb
mov
nop
dec
dec
aam
std
fnstcw
inc
jne
mov
xchg
orl
cmp
jecxz
xchg
out
shr
addr16
add
push
movsb
sub
loopne
mov
xor
divl
mov
andl
test
or
inc
or
icebp
mov
jp
aad
div
push
fnstsw
jns
scas
fldl
sbb
fidivs
test
inc
enter
lods
jb
and
test
std
add
ret
mov
or
in
adc
int3
rcll
adc
jb
inc
inc
or
outsl
stos
inc
je
mov
mov
paddw
rorb
dec
rorb
mov
shrl
sub
mov
int3
jl
ss
inc
pushf
or
add
fs
fidivrl
ss
ljmp
fwait
cmp
cmp
jae
or
out
scas
pop
jg
xor
mov
sbb
and
dec
mov
push
pushf
movsl
jecxz
mov
inc
jae
adc
loopne
adc
inc
mov
sbb
lods
jnp
ja
cmp
adc
lock
pop
popa
loopne
mov
cmpsl
mov
je
cwtl
jl
pushf
xchg
adc
and
jbe
pop
je
lods
aaa
repnz
cmp
dec
adc
shlb
and
std
jnp
jae
test
jl
orl
xchg
mov
mov
pushf
xor
pop
mov
jbe
sar
call
or
dec
pop
rcl
adc
jo
mov
out
adc
cmp
mov
push
scas
mov
or
lcall
test
cwtl
adc
stos
das
scas
pusha
sub
test
out
nop
icebp
aam
xchg
sbb
es
fs
xchg
and
sub
jno
push
fistpl
test
fistpl
notb
cs
pop
xchg
pop
push
fwait
fwait
rcrb
jb
loopne
or
add
les
xchg
inc
xchg
sub
pop
negb
fadd
sbb
mov
cmp
xchg
dec
jecxz
orb
pop
cmpsb
inc
mov
push
jne
pop
sbb
pop
sbb
sarl
or
push
jecxz
insl
adc
movsb
imul
inc
ljmp
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
cwtl
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
call
add
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
lea
pusha
push
incl
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
in
xor
add
movl
test
ljmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
js
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
cwtl
mov
or
rorl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
push
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
aaa
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
and
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
cmp
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
cwtl
clc
xor
inc
cmp
pushf
mov
test
clc
dec
inc
mov
pushf
rol
movsb
incb
inc
mov
test
clc
pushf
inc
decl
push
cld
jge
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
fmuls
test
test
cmp
pushf
xor
add
inc
dec
cmp
sarl
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
cwtl
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
cwtl
lret
xor
mov
lea
xor
add
inc
dec
mov
push
mov
or
dec
inc
xor
push
mov
add
inc
decl
add
inc
mov
cwtl
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
rolb
mov
xor
orb
dec
leave
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
cmp
shrb
clc
add
cmp
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
sar
shl
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
sbb
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
les
inc
push
aas
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
cmp
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
cmp
pushf
xor
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
cwtl
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
cwtl
cmp
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
std
mov
clc
test
je
mov
cld
add
add
faddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
in
add
push
and
incl
fmull
inc
nop
ljmp
lea
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
js
inc
inc
int
inc
sub
add
int3
mov
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
icebp
or
out
mov
pop
push
cmp
sar
incl
inc
ljmp
push
mov
and
inc
push
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
cmp
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
js
data16
idiv
inc
fadd
mov
andl
flds
pop
push
in
incl
loopne
inc
jmp
addl
mov
inc
call
outsb
inc
js
divb
mov
orl
jb
decl
mov
test
inc
rorb
adc
mov
mov
cmp
test
pushl
mov
add
jmp
pushf
decl
add
data16
add
add
test
dec
mov
mov
inc
cmpb
mov
add
push
mov
call
mov
data16
test
out
lea
test
inc
ljmp
decl
test
incl
test
rclb
test
inc
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
in
xchg
aam
call
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
cbtw
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
jmp
lea
faddl
xor
lea
test
decl
mov
dec
clc
call
lea
lea
test
popf
push
add
xor
cwtl
mov
incl
push
push
inc
shlb
lea
call
test
incl
clc
call
jmp
inc
jnp
add
mov
mov
data16
inc
lea
test
inc
dec
test
cmp
mov
pushl
lcall
incl
pop
mov
mov
decl
mov
mov
test
incb
incl
cmp
pushf
inc
mov
hlt
test
cmp
pushf
or
pop
lock
test
clc
mov
lahf
lret
mov
add
add
rorb
mov
incl
cld
mov
add
jge
test
sbb
xchg
call
push
inc
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
cmpl
pushf
xor
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
cld
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
cwtl
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
out
adc
jne
mov
fcomps
add
incl
mov
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
add
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
cmpl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
cmp
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
cwtl
pushf
xor
jne
mov
icebp
icebp
shl
mov
cmp
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
cmp
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
clc
add
dec
hlt
xor
mov
in
jge
mov
dec
cmp
xchg
mov
add
cmp
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
cmp
fdivl
test
push
add
cmp
sets
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
cld
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
or
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
ljmp
xchg
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
rol
out
add
add
and
fs
incl
js
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
cmp
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
idivb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
data16
pushf
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ss
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
cwtl
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
data16
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
orps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
cld
js
popa
data16
into
push
data16
pop
xor
add
cld
cld
add
ss
add
into
ret
pop
add
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
pop
mov
je
xor
mov
xor
pop
cmp
jne
mov
cld
push
pop
inc
stc
aaa
test
clc
test
xor
fs
or
cld
mov
push
push
lret
aaa
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
data16
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
cld
push
add
add
add
lret
lock
lret
cmp
pushf
jge
aaa
cld
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
xor
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
xor
add
data16
dec
fisttps
add
ret
lea
add
cmp
pushf
add
add
inc
test
xor
push
cwtl
push
xor
inc
cmp
jbe
mov
or
inc
test
cmp
in
hlt
push
push
push
push
mov
cwtl
cwtl
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
cmp
pushf
jb
add
inc
daa
inc
inc
xor
dec
cwtl
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
cmp
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
cmp
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
cmp
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
aas
add
push
add
mov
cld
inc
add
rcrl
mov
mov
or
xor
enterw
jmp
ret
inc
mov
add
rorl
icebp
or
inc
inc
mov
or
jne
mov
rolb
add
cld
ret
dec
mov
mov
jmp
mov
mov
sub
mov
in
test
add
add
cmovge
add
cld
mov
adc
mov
xor
cmp
jne
mov
adc
push
test
clc
xor
xor
dec
adc
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
cmp
pushf
push
movl
dec
inc
andb
pushf
push
xchg
fsubr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
cmp
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
cmp
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
add
xor
add
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
and
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
movsb
sar
enter
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fcomps
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
fdivr
testb
dec
clc
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
sarl
pushf
add
mov
xor
test
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
cwtl
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
fiadds
xor
jb
add
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
cwtl
mov
jge
decl
jl
adc
pop
cmp
add
adc
test
adc
jbe,pn
add
adc
clc
pusha
adc
jp
adc
mov
pop
adc
inc
adc
pop
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
add
xor
add
pop
adc
adc
in
adc
bound
adc
shlb
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
adc
ds
adc
add
add
pop
adc
cltd
outsb
adc
ja
adc
jne
adc
arpl
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
cmpsl
inc
add
test
add
test
add
adc
add
adc
and
adc
ret
pop
adc
loopne
adc
add
aas
adc
xor
inc
add
test
add
test
add
inc
add
inc
add
inc
add
sbb
adc
inc
bound
add
adc
jecxz
adc
pushf
xor
add
or
add
inc
adc
jno
inc
add
inc
add
inc
add
inc
add
test
add
test
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
or
addb
mov
push
add
add
push
cmp
js
jbe
arpl
popa
push
pop
outsl
insl
dec
inc
push
jbe
pop
push
js
insb
insb
dec
addr16
push
jb
push
insl
push
bound
push
arpl
pop
jo
dec
inc
push
insb
inc
dec
jne
jbe
jo,pn
bound
