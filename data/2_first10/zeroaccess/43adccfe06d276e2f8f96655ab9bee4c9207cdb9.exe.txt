push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
dec
loop
jle
adc
adc
movlps
ljmp
mov
stos
cmpsb
mov
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
sbb
cmpsb
pop
js
imull
aas
in
enter
loopne
imul
push
mov
push
mov
sub
ss
shl
xchg
in
and
aad
pop
sub
shll
icebp
dec
xchg
insb
or
add
push
inc
jo
push
rorl
dec
pop
fisttps
inc
xchg
mov
mov
popa
pop
jmp
cmc
dec
imul
and
sub
xchg
xlat
mov
pop
ss
cwtl
push
or
nop
clc
std
loopne
adc
xchg
insl
popf
int3
xchg
mov
push
cmp
and
shll
cmp
push
gs
add
cmp
mov
jnp
ficoml
sbb
shrl
in
sarl
repz
clc
ret
or
add
jecxz
sub
test
xor
lea
fiadds
xor
hlt
cwtl
cmp
or
push
int3
mov
aaa
push
aam
push
rorb
fsubl
add
dec
arpl
push
sub
pusha
cmpsl
xlat
xchg
fidivs
lock
pop
fld
mov
push
enter
out
loopne
imul
aad
xchg
mov
enter
mov
pop
loopne
adc
mov
push
movsb
cmp
dec
sbb
and
add
sbb
xor
subl
xor
jmp
mov
push
xchg
mov
movlps
movlps
mov
in
loope
addr16
fs
pop
fistpll
fidivl
stos
add
lcall
fnstcw
xor
sbb
pop
inc
stc
sahf
dec
fsub
xchg
repnz
scas
aad
movsl
ret
sub
fidivrs
jge
cmp
cwtl
adcl
orl
sub
incl
cmp
cs
push
lea
pop
scas
imul
rorb
cltd
push
pop
xchg
sub
xlat
in
and
mov
negl
or
mov
iret
push
repnz
dec
inc
jns
call
jns
cmpl
pop
fmuls
stos
inc
xor
xchg
and
out
outsl
pop
ret
cwtl
int
sbb
lds
mov
push
mov
push
jb
cmp
and
cmp
push
imull
sbb
pop
ss
jp
mov
stc
in
stos
jne
push
inc
pop
gs
stos
inc
cmp
cmp
mov
enter
push
idiv
rclb
pushf
sbb
imul
push
jb
dec
rorb
or
sub
inc
clc
ljmp
stc
mov
lea
cs
or
mov
mov
add
push
mov
mov
xor
test
lds
jp
ljmp
mov
xor
cld
fwait
das
sti
inc
rolb
arpl
das
scas
daa
cmp
in
jp
push
cmp
cli
insb
jp
call
ja
cmp
inc
inc
cmc
into
add
sahf
pop
in
push
mov
sbb
adc
stc
mov
nop
in
movsb
jecxz
cmp
push
pop
pop
xor
decl
push
lcall
adc
aad
sbb
add
sbb
js
or
mov
iret
insb
mov
bound
xchg
out
dec
or
mov
movl
movl
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
das
fidivrl
movlps
js
push
ljmp
scas
movl
mov
decb
inc
push
ja
out
cmp
nopl
and
inc
inc
cmp
das
sub
imul
xchg
imul
rcl
ja
inc
test
push
insl
jbe
cmp
jecxz
mov
insl
dec
sub
jmp
out
inc
push
pop
or
out
inc
xchg
mov
cltd
pop
jl
sbb
inc
jae
push
inc
or
fwait
sahf
sub
lock
lds
cmp
movsb
sahf
fs
pop
fdivrl
xchg
jo
outsl
leave
push
and
jmp
int
bound
sahf
ret
je
je
cmp
outsl
push
ret
inc
cld
lods
les
xchg
ja
test
jmp
jb
cmp
inc
sbb
lahf
sub
imul
mov
dec
fldt
mov
fcoms
or
and
xor
lock
or
push
rorb
into
add
stos
dec
dec
js
adc
test
and
adc
and
mov
sahf
fmull
frstor
in
leave
fwait
hlt
or
pop
negb
adc
das
mov
inc
mov
add
xchg
repnz
lcall
adc
xchg
push
xchg
mov
mov
inc
pusha
outsl
xor
stos
add
xchg
cmp
inc
adc
stc
push
fmulp
mov
lret
jb
pusha
inc
adc
dec
fistps
addr16
loopne
jp
and
jae
jb
mov
mov
push
push
sub
sbb
adc
lret
shll
mov
addl
fxtract
movsl
pusha
clc
in
ja
decb
xor
outsl
repnz
stos
pop
push
loop
rclb
mov
push
xchg
in
repz
aad
vorps
iret
cs
ss
cmp
mov
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
jmp
sub
pop
pop
adc
movlps
jns
enter
lret
dec
and
jecxz
mov
adc
mov
mov
loop
sbb
pop
imul
ljmp
ljmp
dec
mov
adc
flds
dec
jb
mov
xor
fistps
or
dec
je
popf
loope
rorb
test
hlt
shll
push
push
ljmp
push
xchg
in
sub
xchg
cltd
cld
arpl
cmpsb
loopne
cmp
and
sbb
push
add
dec
inc
ja
xor
adc
jle
sbb
aad
movsb
mov
ss
ret
clc
dec
xchg
push
lds
shrb
mov
jo
adc
popl
int
or
sbb
ljmp
mov
int3
ret
fnstsw
sub
loope
inc
xor
in
repnz
fiaddl
add
in
mov
lret
std
out
sti
mov
in
std
in
in
jno
arpl
xlat
rcll
pop
mov
insb
das
ret
mov
insl
popf
ja
stos
sbb
push
cmp
push
sbb
fldenv
lea
xor
loop
fldt
mov
xor
xchg
push
push
lods
in
pop
scas
fimuls
mov
pop
push
sub
repz
imul
mov
mov
inc
popf
mov
pop
pop
inc
cltd
pop
adc
cmpb
cmc
pop
mov
mov
mov
mov
nop
shll
cmp
imul
and
jmp
dec
add
jle
cld
sbb
fnstenv
popa
inc
add
insl
stc
adc
mov
aam
inc
clc
sub
je
loopne
lock
adc
push
stc
shll
scas
xchg
dec
sti
pusha
or
sbb
mov
add
or
add
lods
roll
cmp
add
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
stos
add
adc
movlps
cmpsl
js
sbb
fmulp
inc
divl
test
test
xor
cmp
mov
cltd
imul
dec
popa
repz
inc
nop
arpl
and
std
mov
inc
push
mov
fisubl
mov
in
jecxz
dec
mov
sbb
aas
stc
mov
arpl
call
pop
jo
pop
cmc
lock
xchg
out
adc
mov
inc
into
cmc
jecxz
adc
insl
adc
fcoml
mov
mov
std
call
lds
dec
les
mov
ljmp
sub
mov
pushf
adc
or
nop
imul
icebp
cmpsl
mov
xlat
add
and
xchg
in
mov
inc
mov
or
mov
pop
fmull
outsb
mov
push
sti
stos
cmp
add
push
xchg
jae
lret
xchg
add
or
out
jb
inc
arpl
push
cmpsl
jecxz
xchg
test
popa
aas
daa
cmpl
js
jmp
xor
test
out
dec
add
fs
rclb
insb
jbe
dec
dec
psubb
jns
dec
lea
push
out
mov
xor
insl
mov
pushf
int3
adc
mov
les
negl
xchg
inc
loope
cmp
inc
push
out
xor
testb
in
xchg
xorl
rorl
pop
pop
or
gs
and
adc
mov
xchg
imul
mov
mov
jo
jecxz
rolb
and
into
ja
int3
pop
enter
negl
stos
les
addr16
clc
mov
out
fadds
adc
pop
fbld
mov
rorl
dec
dec
inc
adc
mov
jecxz
xchg
mov
add
cmp
sbb
jle
push
sbb
adc
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
mov
movlps
dec
cmp
aad
dec
fisttps
pop
adc
insl
pop
cwtl
or
js
out
mov
dec
cmp
mov
push
cmpb
jno
stos
ja
scas
push
gs
push
add
mov
push
xchg
fisubrs
test
fs
jge
mov
jmp
push
lret
cwtl
inc
call
shr
test
jno
icebp
mov
xchg
movl
cltd
addr16
mov
popf
xchg
jae
pop
cmpsb
mov
aas
gs
ret
mov
pop
or
push
sbb
cmpsl
hlt
jae
pop
push
aam
rcrb
mov
sti
negl
frstor
inc
push
sbbl
inc
push
jmp
sub
sub
cmp
imul
jmp
inc
repnz
jb
aad
mov
sti
arpl
rorb
sbb
cmc
insl
lea
pop
add
popa
mov
cmp
mov
xlat
daa
pushf
push
addr16
sarl
sbbl
aas
mov
pop
ljmp
sub
mov
jno
subb
push
sub
outsl
sub
icebp
sahf
into
addr16
xchg
xor
ja
xor
jge
fisubl
cmp
iret
inc
aad
leave
mov
push
lret
flds
cmpsb
ret
inc
test
sarl
out
jle
sti
xor
mov
sub
xchg
lret
inc
cltd
out
push
dec
sub
inc
test
inc
jnp
ljmp
add
lcall
in
sub
sub
mov
in
adc
andnps
mov
outsb
dec
inc
ljmp
dec
cld
fisubl
movsl
sbb
dec
rclb
xlat
push
xchg
fistl
sub
sub
xchg
test
mov
test
adc
dec
sti
aas
mov
sahf
es
jecxz
testl
popf
cmp
mov
lcall
adc
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
mov
adc
movlps
pop
rclb
or
pushf
mov
scas
jo
xchg
mov
or
adc
stos
or
push
and
mov
pop
jmp
ret
mov
mov
test
gs
aas
nop
faddl
and
shrb
mov
lret
mov
cmp
sbb
sub
mov
fsubl
add
pop
jp
sbb
jg
test
out
nop
mov
scas
mov
sbb
jne,pt
dec
dec
adc
sbbb
or
adc
adc
and
sbb
fstp
push
cmp
adc
lods
xorb
gs
or
dec
and
inc
je
mov
xchg
iret
sahf
mov
sbb
add
fdiv
cmc
sub
mov
pmuludq
or
push
mov
insl
addl
sarb
sub
notl
subl
add
push
scas
dec
jae
cmp
dec
jg
repnz
pop
rorb
push
js
mov
jmp
mov
les
ud0
adc
les
push
jae
sub
sub
loop
dec
xor
sbb
pop
add
mov
mov
addr16
inc
sub
pop
dec
pop
adc
and
subb
cld
jle,pt
mov
xchg
bound
or
out
dec
pusha
gs
sahf
je
cmpsl
inc
mov
fildl
pop
or
cmp
icebp
daa
inc
adc
push
std
hlt
jmp
xchg
std
cmp
mov
movsb
and
jge
je
jbe
add
xor
fimuls
adc
or
sbb
sbb
stc
lahf
jns
mov
lods
sub
cmovp
sbb
sub
adc
sbbl
sbb
pusha
lock
test
and
fwait
pop
mov
addl
xor
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
adc
notl
adc
movlps
and
and
shll
mov
rcl
sbb
and
fbld
nop
stc
xorb
push
popf
movsb
and
clc
jmp
fs
mov
sbb
mov
xor
push
nop
jb
push
es
push
je
adc
pop
jle
sahf
imul
mov
mov
lock
push
xor
cmp
sbb
xorb
mov
test
sbb
test
lock
jae
test
stc
xor
dec
loope
mov
cmp
mov
or
or
outsb
pop
roll
mov
cmpsl
test
ret
shll
fmul
hlt
lea
jo
jo
push
pop
int
mov
push
nop
fs
push
mov
cltd
xor
shlb
shlb
repnz
iret
mov
pop
mov
lcall
cmp
lret
sub
mov
inc
cs
popf
xchg
repz
stc
or
cmp
fcoml
mov
or
inc
add
mov
aam
addr16
arpl
xlat
mov
cmp
and
int3
jle
ljmp
mov
dec
inc
test
cmp
pop
movsl
test
jecxz
in
mov
outsb
mov
testb
pop
aad
iret
mov
add
inc
nopl
in
ret
lods
stos
hlt
aad
loop
shll
push
icebp
and
out
and
dec
cmc
pop
lds
fstpt
mov
and
xchg
fwait
mov
mov
aam
jl
arpl
and
push
and
addr16
xchg
xor
push
xchg
pop
mov
pop
nop
xchg
mov
xor
call
xchg
and
adc
mov
outsl
scas
inc
and
loop
and
test
cmp
mov
mov
jg
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
jnp
lods
repz
movlps
loopne
dec
xor
pop
repz
pop
daa
mov
mov
xchg
sbb
sub
enter
mov
stos
aam
cs
cli
add
sbb
sub
je
les
mov
pushf
imul
xchg
pop
push
mov
jb
cmp
mov
mov
or
nop
imul
lock
jns
inc
pop
repz
jmp
test
fs
fmuls
mov
aas
mov
ss
loopne
stos
sbb
mov
mov
cmp
js
inc
cmp
jbe
xlat
cmp
push
inc
push
fsubl
std
sub
ret
inc
mov
test
ds
push
push
ljmp
mov
push
fwait
adcl
dec
adc
xchg
outsl
fisubrl
sbbl
shlb
inc
rolb
xchg
jp
push
mov
xchg
mov
mov
enter
rcll
mov
aad
dec
icebp
push
mov
mov
or
mov
inc
into
popa
pop
pop
xlat
js
sub
or
lods
es
xchg
mov
xor
popf
mov
mov
mov
add
lods
xchg
and
mov
movsb
aaa
dec
add
lods
aas
sbb
cmpsl
fisttpll
test
pop
add
jb
aad
mov
mov
clc
mov
aas
inc
push
cmpsl
jmp
imul
sbb
bound
sub
dec
sbb
in
les
fdivl
or
out
popa
pop
adcl
int3
xchg
xor
pop
je
lods
mov
mov
add
lret
or
outsb
scas
fnstcw
lahf
fwait
cmp
dec
push
pop
dec
lea
xor
mov
dec
sbb
add
inc
add
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
fcmove
push
push
out
adc
movlps
push
negl
pop
push
dec
aaa
addr16
cmpsb
popa
out
pop
push
push
mov
loop
orb
cmp
sti
je,pt
bound
movsb
into
xchg
adc
xor
fisttpll
mov
test
sbb
mov
test
repz
jae
mov
add
mulb
push
outsb
mov
sbb
sub
or
cwtl
mov
ficoms
and
inc
mov
std
cmp
jmp
mov
sub
xor
insl
shlb
lods
popa
inc
int
or
in
xchg
ret
xchg
test
int3
cmp
push
sbb
jbe
jae
mov
mov
enter
jb
shlb
jno
adc
jle
mov
imul
popf
and
dec
mov
mov
pop
inc
xchg
lds
jmp
push
or
add
cmp
adcl
inc
lock
mov
hlt
xor
pop
add
sub
rcll
or
push
mov
pop
add
pop
xchg
insl
fistl
dec
repnz
push
shlb
jno
ja
rep
mov
push
mov
xchg
dec
test
xor
fprem
daa
sub
jl
mov
jl
dec
push
sub
lret
and
imul
adc
repnz
wrmsr
mov
test
xor
inc
loope
in
push
fwait
pop
push
or
adcl
test
mov
int3
dec
gs
lret
ljmp
clc
sbb
lds
mov
xchg
mov
rorl
or
xor
sti
jns
int
mov
lahf
push
lea
mov
xchg
push
jno
mov
jl
pop
push
xchg
xchg
lds
mov
loopne
dec
movsl
lea
add
inc
push
mov
out
ja
xchg
inc
movsl
repnz
push
mov
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
out
push
jmp
adc
movlps
cmp
fcoms
shll
jmp
sbb
adc
roll
pusha
push
adc
sbb
sbb
or
popw
mov
repz
pushf
int
outsb
loope
push
pop
ds
and
jle
mov
std
add
ror
jb
call
and
xchg
fildll
push
shrl
das
test
popa
sbb
jnp
xchg
mov
push
xor
ds
xor
popa
incb
jl
shrb
mov
cltd
or
cmc
lret
push
xor
or
clc
js
cmpsl
or
push
and
movsl
mov
add
pop
jo
popa
in
dec
jae
lods
inc
popf
repnz
fldt
jecxz
movsb
or
xchg
out
ljmp
imul
and
dec
mov
xor
add
flds
fiadds
repnz
fistps
outsl
or
xchg
pop
or
mov
sub
mov
xchg
or
dec
xchg
sbb
jge
test
shrb
adc
xlat
sbb
xor
scas
and
in
fcompl
push
into
roll
popa
sbb
mov
push
add
nop
dec
mov
lock
push
and
jl
mov
xchg
rol
add
push
test
or
addb
testl
inc
stc
sub
sub
xlat
clc
sbb
mov
dec
das
sbb
lahf
jl
out
push
dec
push
inc
loope
inc
push
inc
xchg
data16
jnp
mov
jl
cmp
aas
pop
dec
pushf
cs
sbb
dec
xor
add
inc
push
stos
test
push
xchg
jp
movb
xchg
lahf
xor
mov
mov
or
jns
pop
jbe
jns
jno
sub
xlat
ljmp
push
push
sti
clc
fmull
jbe
mov
sbb
inc
jmp
push
mov
sbb
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
lods
call
movlps
pop
push
pushl
xor
btr
mov
mov
clc
mov
lds
xor
outsl
push
jne
or
cmp
ficompl
pop
cwtl
jae
cmpsb
lods
adc
mov
addr16
xor
adc
pop
add
sahf
push
cmp
stc
idivb
mov
jbe
xchg
icebp
clc
popa
stos
and
jne
and
adc
in
xor
jno
daa
mov
inc
shlb
ficomps
rorl
add
jnp
dec
dec
rcrl
push
xlat
adc
test
or
stos
jo
jae
and
mov
aas
fdivl
fisttpll
adc
push
or
push
stc
fisubs
mulb
dec
pop
add
xchg
adc
jbe
ror
sub
inc
fstpl
icebp
rorb
xor
sub
sbb
orl
mov
xor
enter
ret
mov
scas
aaa
into
cmp
out
push
xchg
or
push
cmpsb
sbb
dec
out
sar
pop
in
mov
test
xor
ffree
movsl
xchg
push
jbe
sbb
sahf
sub
sbb
or
shl
stos
xchg
xor
cld
mov
add
scas
jg
pop
shr
cmp
loop
lds
into
leave
pop
mov
int3
out
les
add
cmp
stos
call
jg
adc
out
sbbb
xor
xchg
mov
lods
jp
imul
pop
fsubr
xchg
mov
inc
je
xchg
jmp
ficoms
flds
push
vandps
cmpsb
add
adc
movsb
inc
inc
xlat
lock
sbb
cmp
mov
cmp
sbbb
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
pop
sbb
in
adc
movlps
aaa
push
adc
clc
out
xchg
aas
popf
in
push
sahf
mov
lcall
xor
mov
adc
pop
xor
jmp
xor
mov
dec
sahf
mov
lahf
jp
sbb
xor
out
mov
pop
mov
jae
push
push
push
mov
call
cmp
sub
and
jbe
cmpsb
pop
int3
dec
adc
movsb
insb
pop
inc
leave
test
dec
enter
inc
push
cmp
lea
imul
popa
and
into
xchg
imul
rorl
jl
hlt
mov
mov
stc
pop
scas
sti
lock
jle
stos
popf
jmp
je
inc
xor
mov
cwtl
add
adc
ret
mov
test
inc
fisubrs
xor
pop
aaa
cs
xlat
mov
lods
or
inc
lret
into
mov
cli
mov
pop
jmp
cmc
mov
jl
xor
sbb
flds
xor
icebp
test
xchg
div
mov
decl
dec
pop
jb
loopne
gs
leave
insb
mov
and
xchg
cltd
pop
div
mov
add
jecxz
mov
mov
orb
movsb
inc
bound
imul
mov
icebp
dec
mov
inc
push
jmp
and
pusha
rolb
sahf
push
lods
add
daa
or
sbb
push
xchg
add
inc
xor
sahf
mov
dec
popf
fcmovnbe
in
xor
rolb
std
inc
bound
bound
mov
mov
rcr
adc
fwait
lods
daa
cmpsl
test
aaa
adc
cs
into
xor
dec
mov
push
mov
out
cmp
in
mov
cmp
adc
into
push
adc
outsb
fstpl
loopne
ss
negb
push
mov
add
fidivl
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
rorb
adc
movlps
sub
xor
lahf
dec
lcall
jecxz
adc
xchg
dec
adc
lret
call
push
gs
sbb
fwait
ja
or
popf
jo
int
aaa
push
adcl
fnstenv
in
nop
cmc
cld
out
and
push
jb
jl
and
add
insb
adc
sbb
orl
fisubrl
addr16
dec
or
call
outsl
fildl
or
out
xor
sbb
or
enter
adc
mov
sbb
out
cmp
ss
test
pinsrw
popf
mov
pop
lods
or
insl
cltd
xor
sbb
lea
adc
fnstcw
imul
bound
in
rcl
add
cmp
mov
fnstcw
lods
xchg
and
lret
sub
xchg
xchg
popf
cmp
mov
js
loopne
sbb
adc
inc
sbb
inc
and
pop
jno
js
xor
addr16
or
adc
pop
cmpsl
das
addl
shll
mov
or
cltd
out
xor
sbb
sbb
dec
negb
sbb
cs
out
icebp
dec
cmc
xor
and
hlt
sub
mov
aam
sbb
and
fsubrs
ja
fiaddl
fwait
cmp
cmp
pop
test
lods
inc
dec
outsl
shr
jge
mov
adc
lret
jo
adc
inc
inc
and
mov
shld
jnp
adc
xchg
call
in
xchg
es
mov
cmc
pop
les
push
sbb
fsubl
int
test
loopne
aas
adc
lods
out
mov
lret
adc
add
cmp
insb
sti
or
lahf
sub
test
sub
jle
cmpsb
xchg
lds
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
adc
adc
movlps
repnz
out
into
jbe
pop
push
ljmp
ret
xchg
ja
lods
inc
fcomps
inc
data16
mov
sbb
mov
in
xchg
cmp
loopne
inc
std
xor
xchg
mov
cmp
loope
ds
xchg
lret
sbb
add
test
mov
pop
in
mov
sub
pop
dec
pop
gs
in
mov
xorb
into
shrb
stc
dec
adcl
jno
sbb
outsl
pop
mov
arpl
mov
mov
cmc
mov
shr
mov
pop
cli
mov
fiaddl
xor
jmp
sub
xor
call
jmp
pop
fwait
movsl
pop
in
dec
cmp
sbb
jae
xor
cmpsb
sub
add
sub
inc
xchg
push
aad
orl
jl
fildl
jae
push
rcl
and
sbb
mov
ret
jp
ljmp
fimuls
mov
ficompl
mov
shl
jp
or
out
sahf
mov
sbb
adc
cmpsb
adc
mov
aam
call
mov
push
fstps
lcall
xchg
addb
mov
add
test
add
aas
mov
push
cld
cltd
ret
cwtl
push
push
lret
insb
ret
fistps
daa
into
xor
into
pop
adc
pop
ljmp
or
add
pop
mov
mov
outsb
fstpl
leave
inc
sub
icebp
xchg
fistpll
ja
jb
imul
push
mov
cli
mov
lret
mov
stos
pop
inc
ss
or
jmp
mov
leave
xchg
or
mov
and
push
ljmp
bswap
and
mov
adc
inc
inc
jl
loop
sub
and
mov
cmpsl
cld
stos
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
enter
fcomp
adc
movlps
or
das
mov
pop
fwait
push
xchg
lds
jl
cld
aam
popa
sub
jecxz
xor
pop
js
ja
and
cmpb
ret
ljmp
lea
sub
dec
in
fs
shrb
jns
or
jbe
dec
cmp
lret
jmp
stos
sbb
scas
aas
sub
mov
pushf
lret
dec
adc
push
hlt
mov
fstps
dec
inc
lcall
in
xchg
jg
scas
xchg
push
jmp
pop
adcb
popa
mov
dec
fs
adc
repz
pop
repz
xlat
add
mov
call
mov
sbb
movsb
jb
or
frstpm(287
mov
pushf
movsb
push
leave
jae
dec
lods
xor
stos
xchg
call
mov
ret
lods
aam
sbb
fiaddl
shr
out
pop
insb
movsl
loopne
fdivrs
sub
repz
stc
mov
mov
lahf
rclb
es
mov
adc
ret
cld
pop
mov
jecxz
mov
cmpsb
fdiv
or
sub
cmpsb
cmp
dec
sarb
lret
and
inc
mov
fisubrs
scas
adcb
push
mov
nop
adc
xor
cmp
sbb
jmp
andb
arpl
ret
mov
xchg
jge
mov
or
mov
pop
xor
into
mov
fidivs
mov
xor
mov
pop
cmp
data16
rcrl
mov
and
mov
sti
mov
pop
mov
xorb
mov
mov
inc
daa
std
cmpsl
movb
push
fsubrl
lea
psrlw
adc
mov
lea
idivb
push
sub
out
std
inc
xor
nop
xor
jg
mov
jmp
sub
mov
fstpt
mov
adc
movlps
ljmp
sub
xchg
cmp
sub
dec
push
pop
cmp
fmuls
lods
mov
and
ret
adc
jl
or
pop
das
mov
adc
cmpsb
mov
xor
and
add
gs
push
inc
into
inc
jns
jle
xchg
jmp
mov
rcr
push
inc
mov
xchg
std
fildll
pop
sub
lea
dec
xchg
lods
dec
fwait
push
mov
stos
div
cmp
leave
cmp
fwait
lods
stos
xchg
ss
stos
inc
out
out
cmp
dec
in
or
testb
cmp
popa
in
icebp
stc
jnp
gs
fistps
jbe
imull
jae
shl
lret
pop
jmp
and
mov
mov
pop
dec
out
and
mov
in
xchg
mov
sub
je
movsb
mov
test
push
pop
push
sti
incb
sti
push
xchg
push
out
xchg
sub
scas
das
test
jnp
stc
cmp
add
sub
dec
movsl
scas
cmp
fcoms
fdivrl
test
jo
sbb
sbb
test
jmp
inc
cmpsl
out
ret
mov
jle
shll
inc
fisubrl
cli
xchg
inc
xlat
lea
repnz
in
mov
clc
popa
ds
out
bound
lds
adc
call
movsb
jo
popf
repz
imul
lds
bound
leave
mov
jb
loope
cmpsl
loope
test
addl
pop
dec
out
pop
jbe
out
es
shll
mov
xchg
arpl
idivl
pop
nop
scas
inc
pop
in
or
jnp
movsb
cmp
into
add
faddl
loop
fstpt
sub
mov
xchg
mov
jae
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
mov
jle
rclb
adc
movlps
adc
jnp
inc
sub
aas
ret
inc
mov
xor
mov
lds
jne
jbe
in
and
out
mov
dec
jge
divl
jb
mov
ljmp
dec
mov
rorb
xor
lods
mov
out
push
cltd
jp
in
je
push
inc
pop
fisubs
fs
data16
sbb
inc
jbe
ret
pusha
daa
mov
pop
adc
mov
roll
xchg
fs
adc
push
xor
jno
xlat
movl
iret
dec
pop
ret
push
xchg
xchg
rolb
cmp
adc
ret
push
jge
aaa
pushf
lcall
dec
sub
sub
dec
mov
shll
dec
add
sbb
es
adc
pop
push
dec
sub
dec
mov
mov
outsb
mov
cwtl
mov
lcall
cs
je
mov
loop
mov
push
out
imul
pop
scas
sub
pop
rorl
lret
push
addb
lret
test
aam
movsb
rcll
repnz
aad
or
cwtl
lods
out
dec
fwait
cld
jb
xchg
or
push
xchg
rcl
xor
inc
jns
or
jecxz
dec
xlat
lods
mov
mov
mov
inc
loopne
gs
mov
adc
push
cld
mov
in
inc
add
xor
pmaxsw
sbb
stc
ss
arpl
pop
pop
push
xor
and
dec
fists
xor
and
mov
push
or
mov
and
xor
mov
or
xor
mov
leave
in
aam
jae
mov
stc
pop
push
out
inc
and
and
sub
fnstenv
mov
jae
or
pushf
lds
xor
ss
jmp
inc
mov
sbb
pop
fmuls
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
inc
inc
stos
int3
int3
adc
movlps
enter
lret
ljmp
mov
adc
mov
rol
sbb
xor
scas
add
pop
lods
add
inc
xor
repnz
sbb
sar
loope
repnz
daa
mov
pushf
pop
lcall
mov
ret
pushf
fistpl
popf
push
mov
xchg
mov
ljmp
stos
enter
mov
lock
roll
jl
mov
mov
cltd
movsl
std
xor
insb
xchg
int3
jecxz
xlat
mov
outsl
xor
xchg
pop
sub
rcr
mov
hlt
test
jge
fwait
notb
or
out
daa
sarl
xchg
lea
cld
outsb
sbb
ret
aad
cltd
pop
add
ret
and
cwtl
addr16
loope
sahf
push
sarl
push
into
mov
sub
push
lds
fiadds
push
fidivs
mov
ljmp
das
dec
add
js
push
inc
dec
mov
out
data16
xchg
sub
ret
outsl
push
adc
or
adc
out
cmp
cmpsl
or
out
push
mov
rol
pop
lods
sub
push
sbb
js
cmpsb
pusha
cmp
sub
fwait
or
xchg
sbb
dec
dec
fldcw
bound
cmpsb
ljmp
and
sub
test
mov
jnp
fildl
insl
pop
ja
pop
in
inc
pop
mov
pop
mov
hlt
inc
into
lret
and
mov
pop
and
dec
mov
fcoms
fdivs
mov
push
fisttpl
cmp
lea
les
cmp
sbb
xor
cmp
jo
fstps
adc
les
mov
xor
xchg
cwtl
mov
ja
xchg
dec
or
lods
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
loopne
jmp
enter
movlps
sub
jmp
gs
adc
aas
lahf
inc
xor
jmp
xchg
lds
xor
shrl
mov
add
fwait
movsb
mov
push
and
mov
push
mov
lods
mov
pop
movsl
sub
jae
imul
push
mov
int3
push
jae
xor
fadds
bound
movsb
or
shrb
or
fnsave
je
call
daa
cmp
push
loopne
pop
push
stos
adc
scas
mov
mov
div
decl
cmpsb
inc
insl
push
sub
mov
dec
dec
pop
jmp
mov
adc
mov
insb
cmp
mov
addl
xchg
mov
and
jno
pop
sbbl
loope
jmp
mov
adc
dec
outsb
and
shl
sub
sbb
xchg
jns
jne
aaa
ja
cmc
out
data16
scas
cld
sbb
rclb
xor
push
movsl
in
repz
xchg
cmp
loope
pop
cmpsl
lock
xchg
adc
bound
jbe
push
shl
out
xchg
mov
push
call
arpl
pop
jp
movsl
mov
or
lods
pop
incb
or
adc
fstpl
jns
rcrl
or
lret
das
pop
pop
xchg
inc
loope
jbe
jecxz
vorpd
pop
and
adc
out
pusha
or
jne
test
sub
popf
pop
inc
and
add
inc
jle
mov
add
push
cmp
xchg
setbe
mov
test
lea
cmc
shrl
jno
push
lret
ror
lret
and
dec
jae
add
inc
add
enter
cmp
lret
icebp
cmp
jmp
into
push
scas
push
xor
cmpsl
dec
loopne
movsl
jno
fs
mov
adc
repnz
jb
inc
loope
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
fidivs
les
adc
movlps
call
sub
movsb
jecxz
ret
loop
outsl
sbb
xor
ds
out
push
fsubrl
adc
sbb
fsubrs
sbb
test
repz
icebp
jge
mov
int3
pop
pop
mov
int3
clc
out
or
dec
push
sub
push
sbbb
xlat
sub
sbb
das
imul
mov
loop,pn
lea
notl
sbb
lods
lods
int3
pusha
into
and
cwtl
or
or
jo
jbe
lds
dec
push
mov
and
shll
jl
and
int
inc
nop
mov
clc
iret
pop
pop
daa
hlt
lds
sbb
add
adc
insl
pushf
mov
out
push
mov
pop
lods
addb
inc
mov
icebp
xor
mov
cmp
in
pop
add
movsl
sbb
jp
dec
loop
jo
lods
imul
cli
cltd
dec
dec
xchg
int
stos
inc
out
jbe
imul
scas
lahf
xor
pop
in
and
xlat
ret
lahf
jns
call
movntps
out
push
outsl
xchg
stos
lock
pop
popa
mov
stos
imul
popf
lock
movsl
ds
loopne
sbb
ss
pop
cmp
pop
iret
flds
add
jl
mov
fdivrl
xor
insb
into
pushf
bnd
sbb
mov
push
mov
sub
inc
add
insb
leave
lcall
pop
xchg
jge
and
pop
sahf
imul
movb
ja
sahf
xor
ss
mov
push
iret
aam
lret
dec
xlat
jne
cmpsb
test
add
dec
js
mov
icebp
ret
and
jg
xor
aas
mov
out
aaa
icebp
push
xchg
lock
in
xchg
or
push
bound
loop
xlat
mov
adc
jae
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
cld
fidivl
adc
movlps
mov
mov
sbb
push
sub
push
js
pop
adc
xchg
mov
hlt
xor
and
sarl
mov
push
jo
push
sarl
xchg
pop
or
std
sbb
xor
mov
test
icebp
mov
adc
cmp
divl
es
pushf
push
fs
aad
push
bound
xlat
push
in
sub
je
mov
cmp
ja
adc
adc
test
cwtl
rol
mov
mov
xchg
xchg
jge
add
xchg
inc
jb
fldl
stc
pop
cwtl
push
dec
add
lcall
sbb
add
inc
test
ljmp
setns
notl
sti
xchg
cwtl
xor
jnp
inc
jno
icebp
notl
fisttpl
xchg
cmp
adc
inc
and
leave
push
ds
fadd
jbe
mov
mov
pop
ret
enter
mov
addr16
ret
inc
adc
dec
cmpsb
jne
psubsb
cmp
jb
xor
push
push
mov
xchg
out
lea
js
inc
and
test
insl
arpl
orl
popa
sub
jp
aam
mov
sbb
fcomip
xlat
mov
fsts
iret
mov
pop
xor
int
mov
xor
push
and
ficoms
imul
into
lock
sub
sar
cmp
pop
fsubr
aas
aas
aaa
fdiv
in
push
inc
shl
inc
js
je
inc
movsb
cmp
repnz
ret
and
jecxz
xor
push
mov
pop
sti
ja
pusha
sbb
insb
push
pop
mov
pop
mov
imul
or
pop
mov
fisubs
or
repz
stos
stos
imul
nop
mov
push
add
push
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
sbb
adc
movlps
dec
rcr
sbb
in
push
shll
repnz
inc
jno
mov
idiv
mov
pop
in
sub
fs
ret
lahf
stc
mov
xchg
adc
dec
xor
pop
adc
xor
std
fwait
ret
dec
loop
lock
pop
lock
stc
sbb
and
test
imul
inc
or
enter
lcall
dec
ss
or
scas
xor
es
cmp
add
sbb
les
stos
cltd
push
push
fwait
lcall
gs
insl
ret
jmp
pop
in
test
mov
add
aam
inc
movsl
and
daa
or
mov
test
fimuls
aad
mov
jp
insl
mov
push
push
insb
or
xchg
push
out
in
pop
push
or
cmpsb
lret
popf
stc
insb
add
push
pop
movsb
mov
aaa
pop
and
mov
mov
mov
push
pop
iret
pop
push
jo
scas
dec
pop
cltd
sbb
mov
or
mov
lahf
das
les
faddl
cmp
pop
mov
mov
rolb
popf
xor
shlb
in
js
mov
aad
cli
test
xchg
pusha
cmp
lods
inc
rclb
adc
pop
mov
sbb
repnz
and
xchg
xorl
or
jne
lahf
repz
sbb
push
subb
lea
adc
int3
mov
enter
xchg
cmp
jmp
inc
or
test
out
dec
out
fldt
out
jae
xchg
xchg
dec
sub
mov
mov
sub
bswap
arpl
cwtl
jg
mov
and
test
movsl
inc
sbb
push
clc
adc
pop
xor
loopne
rolb
roll
add
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
push
cmp
adc
movlps
loopne
push
ljmp
push
dec
loopne
int
stc
popa
or
adcb
xchg
push
mov
into
out
sti
ret
sub
popa
rclb
loopne
enter
lods
or
popa
jge
stc
cmp
mov
ds
xchg
dec
push
push
std
and
inc
cmp
std
inc
cmc
loop
pop
cmp
push
xchg
jl
outsl
in
mov
fwait
push
mull
sarl
push
sbb
sub
movsl
sbb
inc
les
sbb
iret
sbb
pop
das
adc
push
push
out
movsb
insb
inc
pusha
cmc
ljmp
jb
and
xchg
adc
outsl
outsb
dec
add
pop
xchg
inc
testl
push
or
xchg
mov
lcall
push
ficomps
aam
jmp
gs
jne
pop
aas
dec
mov
xchg
xor
push
and
mov
pop
jo
inc
cmpsb
cmp
nop
shll
dec
pop
push
cmp
xor
inc
shll
adc
cmp
stos
mov
ja
inc
mov
mov
inc
in
jmp
push
pop
xchg
cmp
and
xchg
and
inc
adc
test
xlat
cmpsb
test
jge
jae
mov
ja
je
xor
jb
dec
mov
pop
pusha
push
leave
jne
or
ljmp
adc
mov
cmc
mov
cs
adcl
push
mov
jg
mov
sbb
lods
mov
pop
fcomp
cmpsl
pop
lahf
cmp
push
arpl
mov
dec
xlat
inc
data16
and
inc
sub
cmp
cmp
scas
pop
jno
sbb
stos
mov
mov
sarl
xchg
pushf
bound
sbb
push
xchg
je
xor
mov
in
scas
xor
adc
and
int3
cmpsb
add
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
adc
test
jo
ret
inc
orl
lods
lods
mov
mov
dec
lret
mov
sbb
ja
loop
pop
pusha
ja
aas
psllq
fwait
ret
and
xchg
or
jo
cmc
je
loopne
add
or
stos
cmp
push
cmpsb
testb
ret
sbb
adc
fs
xchg
jmp
push
sbb
xchg
sub
fmull
call
lds
mov
mov
fiadds
sub
das
sub
mov
test
fdiv
lret
loope
xor
xorb
sub
cmp
fsubr
jge
into
call
mov
and
or
cmp
mov
mov
fsubl
sub
push
dec
lahf
lock
ljmp
add
and
in
add
aas
mov
jae
jne
cli
push
jae
repz
cmpb
shll
loopne
cld
in
lea
mov
out
lret
jl
mov
aam
testl
pop
dec
shl
jbe
jo
out
popf
stos
cmp
push
iret
ss
mov
jecxz
aad
gs
sub
scas
xchg
adc
sbb
andb
adcl
mov
dec
test
rcll
leave
mov
clc
jb
cmp
or
xchg
lods
aam
scas
lods
sbb
jg
push
push
sbb
fsts
dec
lret
mov
sub
ret
lcall
mov
inc
call
pop
cmp
andb
lahf
or
loop
mov
call
inc
add
jge
jle
mov
mov
sbb
cmp
test
mov
jnp
mov
sub
inc
imul
push
lahf
out
xchg
dec
mov
xcrypt-ofb
cmpsl
in
adc
adc
xor
cld
aam
sub
mov
sbb
test
push
xchg
jge
out
xorb
lret
aaa
mov
call
mov
test
mov
test
jmp
dec
sub
lret
js
dec
popf
or
movsl
arpl
stos
loopne
push
mov
add
in
xchg
mov
cltd
push
leave
mov
aam
movsl
pop
cltd
pop
xor
cmpsb
lret
cmp
cwtl
sub
roll
push
sub
pop
jae
mov
jg
sub
out
add
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
pop
push
xor
aas
mov
adc
dec
scas
sbb
xor
cmp
inc
push
pop
sbb
adc
sub
pop
pop
lods
mov
ljmp
scas
lods
fsubrs
xchg
mov
inc
adc
sarb
insl
les
jns
push
sbb
xchg
pcmpgtd
inc
ja
dec
sbb
or
pop
ret
xlat
pop
fwait
out
fnsetpm(287
rclb
and
lods
push
aaa
inc
xchg
jo
xchg
adc
ljmp
adc
pop
dec
out
cmp
mov
arpl
mov
cmpb
test
loop
xchg
loope
push
cmpsb
ret
int
int
shrb
stos
cmp
or
pop
ss
pop
mov
mov
insl
in
fwait
icebp
jl
out
ficomps
jle
dec
repz
dec
lcall
sbb
std
dec
push
pop
inc
add
mov
popf
into
or
and
pop
js
pop
leave
jnp
stos
fimull
push
xchg
out
xchg
pop
jmp
jae
rcrl
and
xchg
jecxz
mov
xchg
mov
fwait
sbb
mov
mov
loop
shrl
add
out
lock
jl
into
push
aaa
cltd
push
out
xchg
ss
mov
mov
int3
adc
mov
ds
outsl
stos
pop
loop
dec
out
or
jg
sbb
dec
outsl
push
xor
sub
xchg
mov
pop
insb
or
cs
testl
cmp
fmuls
pop
fs
pushf
and
cwtl
sub
mov
js
mov
inc
enter
popa
xchg
mov
push
popa
mov
xor
sub
sbb
or
ss
xor
xor
add
dec
push
shl
sub
cmp
push
mov
cmpsl
ret
popa
pop
fs
mov
dec
pop
jle
loope
xorb
xor
mov
ljmp
dec
in
inc
ljmp
das
adc
mov
xchg
inc
and
xchg
and
stc
cmp
roll
add
insb
and
pop
pushf
or
xor
je
push
mov
lret
in
lods
je
test
jo
out
fcomps
jb
lret
pop
cmp
mov
pop
xchg
in
inc
mov
dec
repnz
ret
mov
mov
jg
jns
push
test
arpl
scas
mov
adc
xor
mov
push
push
jae
push
ds
lods
mov
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
ret
xor
xor
or
or
sub
and
fs
cmp
and
loopne
or
enter
cltd
and
pop
xor
xor
ja
out
test
lret
jne
fwait
xchg
pop
lret
lret
notb
push
shrl
daa
pop
adc
mov
rorb
lret
push
fnstcw
mov
cmc
sbb
mov
fldenv
scas
sahf
ss
jl
pop
cmpb
sub
mov
pop
mov
fs
mov
jge
sub
stos
mov
xchg
push
adc
push
fnstenv
pop
aaa
sbb
dec
outsb
popf
popf
cmpsl
les
rcr
mov
dec
inc
dec
mov
icebp
ja
and
popf
mov
dec
out
dec
in
ds
inc
repz
jnp
int
mov
push
cld
cmp
lock
loope
pop
in
mov
cmp
pop
mov
in
push
int3
icebp
mov
add
inc
ja
ss
gs
negl
or
sub
lea
lea
fdivrs
sub
pop
push
rcrb
lcall
jl
rcl
fwait
ret
xor
inc
cmpsb
jo
jl
pop
xchg
nop
pop
std
xor
andl
cmpsl
mov
lds
xor
xchg
mov
inc
xchg
mov
fcomi
jl
sub
push
inc
inc
lret
arpl
repz
jae
sub
lret
hlt
mov
mov
aaa
xchg
aam
inc
inc
std
mov
jle
in
pop
cli
mov
push
aas
push
bound
or
fisubrs
call
pop
fwait
inc
imul
lock
ja
clc
mov
add
repnz
popf
xlat
pop
popa
jle
sbb
lahf
imul
jno
xor
inc
in
jo
push
int
shrb
sti
sbb
jle
ljmp
cmpsb
or
mov
dec
pop
rorb
andb
cmp
in
sbb
test
sbbl
inc
pop
sahf
push
cmc
testl
pop
lcall
cmp
add
inc
jns
mov
lea
subl
pop
inc
int3
bound
or
pop
into
cmc
mov
nop
out
daa
or
lds
push
inc
leave
mov
shl
rorb
mov
cld
dec
xor
jnp
and
out
push
push
aad
and
scas
jmp
mov
in
lcall
cmp
out
push
stc
xchg
scas
insb
jne
jne
xor
xor
add
mov
adc
jmp
addl
scas
sbb
pop
add
push
jmp
push
movsb
adc
lahf
movlps
fisubrl
out
inc
cmp
aaa
loop
fxch
jb
fwait
lret
add
pop
nop
shrl
pop
inc
repz
mov
xor
xor
xchg
inc
cltd
mov
adc
rcrb
mov
mov
fcmovnu
push
cmp
sub
pop
cmp
pop
icebp
dec
push
stc
hlt
sub
push
movsb
cmc
mov
fwait
pop
dec
cmpl
or
push
mov
cmp
in
les
imul
sahf
or
outsl
test
test
and
sbb
test
jg
dec
pusha
push
adc
cmp
xor
pop
inc
loope
iret
outsb
mov
and
sahf
mov
or
lea
in
outsb
jecxz
out
add
lret
imul
cmp
jge
jbe
push
ja
imul
js
adc
mov
das
popf
cmpsl
and
push
adc
lock
mov
nop
sub
fldenv
push
jb
scas
movsb
das
cmpsb
adc
lret
scas
sub
out
adc
mov
or
fstps
arpl
in
xchg
sub
dec
sub
add
sub
in
aad
jecxz
dec
shlb
fs
out
and
ds
cs
pop
xchg
inc
inc
sub
jns
pop
test
out
xchg
cwtl
add
push
jo
andb
mov
mov
dec
fwait
imul
stc
mov
sub
fistps
loopne
lods
fucomip
gs
fisubrl
pop
xor
push
and
idivl
lds
mov
cmp
sbb
std
iret
repnz
aas
loope
push
dec
inc
sub
popa
or
imul
fisttps
scas
or
pop
xchg
push
jmp
std
jecxz
or
jge
or
int
push
jl
pop
xor
sbb
jge
aas
jmp
jecxz
mov
and
rolb
sbb
out
and
int
in
dec
push
aaa
out
fprem
xor
xor
inc
fists
add
ficompl
sub
int
jo
push
cltd
push
mov
test
dec
jecxz
add
mov
in
jl
inc
and
mov
adc
xchg
cmp
inc
inc
stos
pop
jae
aad
sub
xchg
mov
stc
or
mov
mov
cmp
and
mov
mov
mov
mov
jne
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
stos
in
adc
lahf
movlps
fsub
movsb
sbb
mov
in
sbb
popa
fneni(8087
or
cmpsb
int3
jg
dec
in
sbb
mov
lods
mov
xor
push
xor
push
inc
inc
sub
in
repnz
sub
push
cmpsl
pop
xor
xchg
dec
out
test
jle
cmc
push
xchg
adc
cmp
popa
push
adc
mov
and
and
les
imul
shl
out
dec
outsl
ret
orb
test
test
out
in
adc
mov
or
add
or
les
mov
sub
jnp
jmp
stos
in
adc
fwait
adc
push
inc
or
rcl
mov
mov
mov
add
pop
mov
in
out
mov
scas
push
mov
and
sahf
in
insb
mov
pop
stos
ss
shll
push
or
fwait
mov
ljmp
mov
arpl
out
daa
dec
cmp
repz
dec
push
xor
xor
sub
mov
jecxz
add
jmp
mov
pop
rcr
rcl
loop
push
in
xor
mov
mov
hlt
loope
fld
jo
inc
imul
icebp
pop
loopne
ret
jae
or
dec
repnz
int
rcrb
imul
mov
jl
and
sbb
aad
add
xchg
dec
outsl
add
lea
ja
adc
adc
xor
sbb
mov
cli
inc
fsubl
mov
xchg
cmp
push
push
pop
jle
rclb
out
lods
mov
jno
dec
push
push
pushf
lds
lcall
lods
add
mov
inc
rorb
mov
xor
jae
fbld
into
push
bound
fcoml
sbb
pushf
sub
jne
push
dec
and
xchg
xor
mov
inc
xor
dec
testl
mov
jne
decl
stos
aas
mov
dec
ret
cmpsb
outsb
popf
sbbl
es
jo
out
push
pop
pop
add
mov
imul
into
sbb
jb
jecxz
inc
mov
fbstp
dec
cmp
mov
arpl
add
and
xor
repnz
incl
arpl
movl
jmp
ja
pop
add
rcll
push
bound
sahf
sbb
outsl
sahf
adc
lahf
movlps
mov
call
mov
cmp
cmp
ret
lea
mov
sub
mov
sbbl
lahf
mov
jle
ds
xchg
nop
insb
inc
popa
push
sub
xor
jmp
jecxz
adcl
jb
cmpsb
mov
xchg
inc
loop
and
inc
cli
push
bound
cmp
jae
add
mov
lock
je
aaa
mov
dec
xchg
subl
sub
dec
xchg
push
dec
in
or
xchg
imul
push
test
cmp
add
adc
mov
lods
cli
ficompl
inc
stc
push
mov
andl
inc
lock
push
enter
mov
add
lret
dec
dec
out
xor
add
jmp
mov
ja
push
fucomp
adc
mov
je
arpl
or
loop
mov
mulb
sbbl
orb
aam
sub
mov
rcr
sbb
push
dec
call
aam
or
in
jge
loopne
outsl
insl
inc
push
rcr
lret
sub
movsl
icebp
icebp
fucomip
and
subl
xor
outsb
ljmp
mov
sub
adc
cmp
test
sbb
jno
adc
inc
jecxz
push
fs
push
mov
push
pusha
sbb
repnz
into
sbb
jb
shlb
fwait
jg
mov
jle
and
clc
cmp
jmp
repnz
cli
mov
mov
lods
push
xchg
arpl
and
popl
mov
mov
xorb
cs
in
jno
jae
sub
sub
jge
mov
iret
je
arpl
xorl
mov
je
dec
fwait
out
fisubrl
mov
cmp
icebp
loop
add
gs
mov
push
mov
test
int
pop
pop
call
jle
cwtl
pop
sbb
dec
icebp
push
shlb
mov
cld
cmp
in
shrl
push
js
inc
xchg
push
jmp
xchg
jp
add
out
pop
out
outsl
add
das
or
loope
xlat
push
xchg
push
out
xor
test
iret
mov
xchg
xchg
xor
lret
lret
mov
dec
test
inc
shll
mov
push
inc
adcl
and
movsl
sbb
or
fidivl
add
ffreep
mov
icebp
fwait
xchg
add
insb
or
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
push
push
xchg
adc
lahf
movlps
enter
dec
orb
ja
ds
out
aad
cmpsl
add
xor
inc
jmp
xchg
pop
mov
xor
jae
fs
outsb
or
loop
imulb
js,pt
xchg
out
movsl
popf
je
outsb
rcll
mov
xor
push
jae
mov
xchg
inc
lret
scas
ds
lret
negl
xchg
add
sti
repnz
test
in
mov
ljmp
pop
cmp
fwait
ljmp
push
inc
cmpsb
out
int
adc
jae
xchg
jo
rol
repnz
push
bound
insl
add
stos
int
mov
xor
das
jne
mov
mov
pushf
dec
repz
js
mov
jle
adc
pop
lcall
push
xor
lret
aas
aaa
nop
xchg
mov
outsl
sub
sahf
lcall
aaa
pop
imul
jge
aam
aas
sti
mov
mov
out
add
adc
int3
movsl
bts
cli
mov
cmp
outsb
rcrb
adc
mov
mov
sub
mov
adc
fsubl
cmp
fucomi
fadds
dec
xchg
je
jl
nop
sbb
out
or
fldcw
stos
xor
shll
test
sub
mov
jge
cmp
cmpsl
jb
mov
sti
sub
jle
out
jg
test
loope
jno
sbbl
fmull
mov
outsl
jo
sub
movsb
fisttpl
lret
imul
and
mov
adc
mov
sbb
lahf
sti
stos
dec
mov
cmp
clc
test
cli
xor
loope
or
fnstenv
imul
je
imul
adc
aam
cmpsl
xchg
sub
ret
js
sbb
push
fwait
sub
cmp
lods
lret
testl
push
lods
push
cmp
fisttps
fldcw
inc
xchg
mov
lods
xchg
pop
sti
sub
inc
dec
or
pop
cltd
jecxz
rclb
dec
add
xchg
mov
jns
popa
sahf
jns
es
xchg
rol
push
add
pop
clc
sbb
jle
in
lock
repnz
data16
das
out
or
or
fistpll
push
pop
inc
jl
imul
add
in
mov
jns
push
cmpl
mov
cmp
cmp
sub
test
aaa
mov
test
mov
je
mov
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
cmp
mov
adc
mov
mov
jns
jl
mov
ljmp
inc
sub
ds
clc
mov
ror
adc
testb
in
fs
push
fstpl
imul
or
or
push
test
push
mov
lods
ja
loopne
jbe
sbb
jle
cmpsb
adc
dec
aam
jo
cmpsl
adc
xchg
pop
ja
js
mov
decl
pop
int
call
cwtl
and
or
lcall
adc
adc
iret
jo
das
mov
in
mov
fwait
ljmp
adc
shl
xchg
fdivr
sbb
and
and
inc
add
xor
sbb
inc
sub
pop
push
ljmp
shll
repz
loopne
push
pop
mov
jg
xlat
mov
jne
cmpsb
push
mov
mov
fwait
outsl
aas
push
sti
out
xor
gs
dec
mov
les
mov
popf
arpl
mov
inc
ja
subl
out
lods
lock
cli
in
hlt
mov
inc
xor
push
inc
dec
dec
cmp
lods
call
imul
push
add
push
jbe
and
rolb
cmpl
mov
xor
adc
jb
mov
jle
sbb
flds
in
stos
mov
mov
jle
out
faddp
and
movsl
test
cmp
mov
cmpl
iret
or
push
lods
fs
shll
mov
roll
sbb
jae
bound
dec
sub
push
mov
xchg
mov
sub
arpl
cs
std
notb
ja
sbb
lds
js
cmc
xchg
lret
xor
inc
mov
sub
repnz
cmp
loopne
pop
xchg
pop
cwtl
inc
bound
insl
push
push
mov
jae
push
icebp
adc
or
mov
jg
test
hlt
xchg
sti
cmp
outsb
mov
add
mov
and
sahf
aaa
cld
mov
mov
testl
outsb
imul
mov
lret
add
jbe
pushf
jbe
xor
clc
adc
mov
insl
or
dec
xchg
inc
test
popa
imul
jae
std
mov
push
fistps
dec
or
dec
leave
push
scas
xchg
mov
dec
fimuls
in
rclb
add
bound
xchg
push
and
mov
mov
jne
sbb
xchg
jmp
cmc
addr16
andb
inc
loope
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
push
ror
lods
adc
adc
fsubr
inc
xor
std
add
and
dec
pop
inc
movsb
aad
insb
cs
jle
imul
or
shlb
fdivrp
leave
movq
cltd
lock
or
or
nop
int3
in
add
out
xlat
aaa
dec
jmp
stos
fistpl
xchg
xchg
std
or
xchg
int3
rorl
shll
aaa
jnp
cmp
jp
xor
mov
imull
fcmovu
enter
clc
lret
cmp
jmp
cli
fsts
ret
in
mov
or
shr
dec
rcll
repz
pop
add
leave
rol
mov
add
stos
or
or
test
xchg
mov
xlat
or
and
and
jg
bound
daa
ljmp
and
xchg
xchg
sbbl
addl
sbb
sbb
mov
lods
or
lods
mov
add
ret
cmp
into
fnstcw
cmc
lods
cmc
in
push
mov
test
leave
in
ja
rep
or
push
push
sahf
adc
enter
fdivl
lahf
loopne
mov
adc
pop
pop
cmp
xchg
mov
dec
movlps
sub
fdivrl
sti
in
ds
and
push
mov
cmpsl
sub
mov
and
sahf
push
aad
es
inc
movsl
aas
subl
cmp
inc
mov
xor
xor
cmp
fistpl
and
mov
pop
hlt
aam
pop
adc
pop
dec
loope
sbb
lods
lods
jl
stc
cmc
imul
or
mov
mov
fcompl
xchg
loop
fisttpl
ficompl
fldl
cmp
sarb
test
outsl
cmp
lret
dec
ret
scas
aaa
cmp
rclb
pop
in
lock
and
jae
mov
insl
out
mov
jbe
subb
sub
pop
push
inc
xor
gs
dec
stos
inc
popf
mov
mov
scas
mov
mov
insb
in
sbb
cmpsl
lahf
jle
cwtl
inc
sub
sub
add
pop
cmp
shrl
call
cmp
test
mov
push
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
jae
insb
pop
test
adc
adc
mov
inc
scas
clc
loopne
cli
es
add
sub
mov
mov
xchg
xchg
insb
or
inc
loop
mov
subb
sarl
pop
or
xchg
mov
cmp
pusha
fdivl
inc
pop
or
shll
iret
inc
out
mov
dec
sbb
cmp
add
in
xchg
add
mov
int3
add
imul
sarl
xor
adc
jge
lret
mov
mov
mov
rdpmc
inc
mov
mov
mov
sahf
mov
lods
test
into
lret
jbe
adc
jnp
jno
add
inc
es
popa
and
in
test
daa
add
mov
icebp
or
or
cmp
inc
push
in
and
jb
les
jb
mov
ds
xchg
std
lret
sbb
repnz
test
pop
mov
mov
xchg
sub
push
xchg
outsb
mov
inc
sub
or
ret
mov
pop
xchg
daa
std
xchg
fdivs
fsubrs
mov
mov
push
jbe
popf
sbb
cmp
push
andb
xor
fildll
sahf
lods
inc
in
sbb
sti
stc
icebp
jne
dec
and
out
xchg
dec
adc
add
pop
adc
mov
call
cmp
push
fs
mov
push
xchg
inc
or
push
adc
or
push
pop
xchg
in
jbe
push
add
or
cwtl
and
sbb
jge
xchg
mov
xchg
push
out
int
jo
and
push
movsl
hlt
sahf
dec
sub
mov
mov
nop
inc
and
push
movsl
or
ds
sarb
repnz
stos
pop
sahf
ret
and
gs
rcrl
sub
popf
xchg
mov
inc
jge
pop
outsl
fsqrt
sub
lahf
fcompl
jge
and
aas
mov
sub
xchg
icebp
fwait
cmc
jno
xchg
lret
aam
cmc
dec
mov
test
xor
loope
out
lret
or
das
adc
js
lea
cltd
in
cld
xchg
inc
lock
mov
mov
clc
mov
jmp
fdivl
fnstcw
sbb
push
in
mov
pop
movlps
call
jbe,pn
adc
cmc
mov
dec
lahf
and
mov
push
rolb
int3
adc
push
ret
daa
aaa
insb
and
jle
dec
mov
ljmp
loope
jmp
in
jno
inc
dec
sbb
jmp
sub
aad
dec
out
xor
push
push
and
push
arpl
or
fs
sbbl
pop
push
cmp
sahf
mov
lahf
aas
adc
mov
dec
push
push
fimull
mov
shll
push
into
ret
fbld
sti
fidivrl
pop
adc
popf
cmp
inc
pushl
dec
pop
shll
lds
mov
hlt
push
pushl
mov
or
push
int3
out
in
push
xchg
add
inc
dec
push
cmpsb
mov
insl
xchg
les
int
xchg
stos
and
inc
pusha
pop
mov
cwtl
jno
mov
ja
push
out
xor
leave
xor
push
out
aas
xorb
call
xor
out
xchg
repnz
and
aaa
or
jge
je
mov
and
mov
xchg
push
adc
enter
push
orb
cmpsl
out
inc
cmc
pop
and
push
xchg
xor
scas
mov
rcr
ret
leave
jl
xchg
lods
cld
arpl
rcl
ljmp
pop
push
adc
sbb
scas
push
aad
das
xchg
pop
xchg
fdivrl
sub
cmp
push
mov
add
xor
xor
aam
idiv
mov
fmuls
mov
sub
xor
mov
mov
xlat
adc
mov
std
cmp
pusha
xor
add
in
scas
arpl
sub
xchg
dec
sub
cltd
scas
lea
and
cmp
jge
xchg
mov
inc
pop
push
int3
inc
loop
jne
xchg
adc
mov
xor
xchg
xchg
test
sti
push
mov
lret
push
xchg
js
lea
dec
sub
pop
lret
pusha
mov
mov
jg
xchg
js
cmp
arpl
sub
rclb
jl
outsl
and
aaa
sub
xorb
pop
ret
test
add
ret
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
add
adc
pop
movlps
jo
jo
ss
lods
fwait
push
and
mov
int3
or
sub
daa
lock
inc
loop
scas
dec
jmp
loope
mov
ja
pop
ret
scas
inc
aas
lods
rorl
and
clc
hlt
insl
stos
addr16
ror
pop
or
aam
dec
xchg
ja
mov
push
hlt
sahf
subl
cmpsb
lock
adc
push
call
cmp
sbb
scas
movsb
xchg
mov
lods
mov
jg
in
out
imul
push
sti
insb
fisubrs
mov
faddl
jp
xchg
adc
pop
jmp
mov
inc
daa
pop
push
cmp
div
cmp
xchg
jl
popf
mov
cld
or
clc
mov
jnp
xchg
add
roll
lret
pop
pop
mov
aam
ljmp
aas
and
xchg
ficompl
sahf
ljmp
arpl
insl
dec
sub
sub
in
test
into
xorb
hlt
pop
enter
mov
insb
sub
fwait
mov
cmpsb
lea
sbb
test
aas
adc
adc
cli
shl
imul
push
flds
sbbl
lahf
jl
and
and
adc
pusha
addr16
mov
dec
mov
add
xor
test
in
ljmp
inc
out
lea
mov
roll
lcall
push
cmp
xchg
mov
push
mov
ss
sub
inc
in
push
cs
out
xchg
mov
fdivs
lret
mov
push
stos
test
cmc
mov
mov
icebp
aad
loope
movq
cld
mov
or
push
icebp
add
push
mov
sub
negb
push
ficompl
cmp
and
inc
dec
lds
rorl
pop
cld
int3
cmp
adc
adc
adc
push
jb
test
jns
aaa
pushf
lea
shrl
repnz
lcall
repnz
mov
add
and
ljmp
insl
jg
repnz
rcrb
mov
lret
lods
inc
lods
mov
xor
in
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
jb
sub
adc
ficoms
adc
sub
mov
pushf
mov
inc
jmp
jl
mov
adc
lea
dec
dec
xchg
lahf
push
adc
fcomip
mov
and
pop
out
adc
lret
mov
jae
pushf
inc
jbe
subb
cmpsl
or
cmpsl
adc
icebp
sti
int3
pop
xchg
fldcw
cmp
and
and
fcoml
push
fdivrl
jg
mov
jne
adc
add
loop
mov
jg
inc
xchg
filds
add
xor
xchg
cmp
push
jp
pushf
mov
and
dec
add
adc
shll
or
dec
out
cli
jge
pushw
imul
sbb
pusha
imul
push
jl
inc
in
ljmp
nop
loop
pop
add
cld
mov
int3
std
xchg
mov
shlb
mov
and
push
xlat
mov
pop
push
inc
push
scas
and
xor
out
loop
jmp
xlat
popa
repz
fcompl
lock
xchg
mov
sub
or
aam
or
inc
pop
bound
cwtl
es
xlat
xchg
xchg
pop
rorb
pop
dec
push
pandn
sub
push
mov
adc
insl
imul
out
insl
lea
out
arpl
push
sete
lretw
or
jno
gs
sti
inc
mov
push
dec
mov
inc
mov
and
fisttps
test
push
add
outsb
in
addl
ja
loop
push
gs
mov
aaa
inc
pop
inc
jbe
push
push
stos
pop
add
out
das
add
add
add
loop
dec
jecxz
movsl
mov
dec
insl
mov
inc
push
xor
pop
push
imul
mov
adc
mov
mov
jb
push
cmp
mov
push
push
jecxz
loope
cmpsl
dec
fs
mov
push
ljmp
or
and
enter
arpl
ret
call
sub
inc
mov
inc
push
icebp
lock
mov
int
rcr
mov
dec
push
jge
xchg
adc
inc
js
dec
shr
mov
mov
sub
rcr
push
daa
push
jp
push
nop
xchg
loopne
push
test
dec
call
mov
pop
pop
mov
fwait
hlt
push
fwait
push
out
dec
cmp
mov
fldenv
dec
int
dec
mull
outsb
and
outsb
mov
fisubs
xlat
cmp
inc
scas
mov
pop
adc
mov
and
bound
pop
push
addb
push
and
push
add
lds
or
cli
movsb
or
dec
out
cmp
les
cltd
int
cmpb
pusha
cld
lret
std
jmp
sub
inc
jno
shlb
jns
sti
cmp
fwait
roll
adc
dec
clc
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
cltd
xor
adc
adc
adc
jp
cs
stos
jge
icebp
xor
aam
sbb
out
scas
ret
inc
sub
orl
push
call
aaa
fsubs
cmp
insb
jns
dec
adc
aaa
xchg
cltd
and
dec
add
fucomp
ljmp
arpl
adc
add
pop
cmp
popf
push
xor
and
fidivs
leave
repz
push
jecxz
xchg
jbe
mov
and
test
cmc
sub
in
incl
or
rcr
addr16
ret
pop
cs
jnp
lret
insb
out
mov
clc
or
sub
mov
jecxz
add
mov
pusha
dec
orl
push
adc
rorb
out
aam
push
mov
loope
movsl
test
cmp
adc
sbb
fisubl
lock
sub
mov
out
movsb
push
push
shr
xor
mov
sub
xor
test
insl
add
repnz
adc
inc
cli
xchg
pop
scas
fistps
aad
outsb
test
imul
cmpsb
sbb
ljmp
push
roll
or
nop
add
pop
addr16
pop
sub
stc
in
mov
pop
mov
test
movb
cltd
andb
cwtl
pop
xor
pop
inc
scas
lcall
jmp
lock
xchg
dec
mov
adc
in
loop
mov
out
inc
mov
daa
aad
or
out
ja
cmp
pop
mov
lea
sub
sbb
sti
in
nop
sbb
and
cmpsl
pop
xchg
loop
bound
ret
call
mov
or
rorl
adc
add
mov
in
and
data16
leave
jo
mov
into
lock
bound
jae
adc
mov
fildl
loopne
add
ds
pop
addr16
adc
addr16
sti
inc
push
push
mov
xchg
mov
jl
stos
gs
fbld
mov
sub
jns
pop
int3
add
cmp
js
sbb
pop
pop
push
jno
fidivl
rorl
out
or
ljmp
es
xchg
and
sub
xchg
jmp
xor
repnz
cmpsb
fld
dec
and
adc
add
add
or
loopne
push
inc
xlat
xor
inc
pop
test
sub
pop
and
jmp
push
stos
fisubl
xor
das
mov
stos
iret
jle
mov
rol
pop
jno
movsl
xor
jno
in
and
into
sub
jp
addl
cmp
int3
addr16
push
insb
xchg
stos
inc
in
cltd
sub
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
lods
mov
adc
ficoms
adc
mov
sbb
push
xlat
pop
ja
xchg
and
jno
stc
lahf
jbe
lock
sub
loop
flds
push
or
cltd
fldcw
aam
lds
or
inc
jp
sbb
nop
out
xor
or
test
adc
mov
out
jo
push
jnp
dec
movsl
cli
loop
sbb
xlat
fwait
popa
dec
mov
stos
hlt
fwait
adcl
pop
in
sbb
inc
cmpsl
movsl
cmp
xor
jbe
dec
dec
pop
and
into
scas
pop
repnz
adc
fidivrl
cwtl
cwtl
sub
and
movsb
cwtl
and
push
push
movl
push
push
pop
scas
add
xor
mov
dec
rcll
into
xor
xorb
scas
xchg
dec
int3
push
ljmp
lret
adc
mov
shll
cli
xor
cld
pusha
outsb
pop
icebp
and
imul
dec
lcall
mov
mov
mov
scas
push
int3
xor
xchg
jns
add
enter
jns
pop
packssdw
sub
jae
and
stos
mov
fdivrl
aaa
leave
cmpsl
sub
cs
int
insl
jmp
daa
das
mov
ja
push
mov
sete
cmc
sub
cmp
movsl
leave
xchg
sbb
or
add
push
cmp
adc
mov
gs
loope
cmp
sub
das
push
ds
push
sbb
enter
fidivs
sbb
incb
int
dec
cwtl
dec
cmp
fs
shlb
in
mov
push
enter
addr16
mov
cltd
out
pop
cmp
inc
iret
pop
xor
lds
fisubrl
icebp
mov
add
add
in
cmpsb
loop
mov
aam
sub
arpl
loop
push
adc
pop
outsl
jo
mov
fdivl
je
clc
cmp
xchg
cmp
cmp
inc
fnstsw
andl
sahf
icebp
jle
mov
sbb
lods
mov
or
mov
jbe
out
dec
mov
dec
xchg
out
xchg
xchg
and
cmp
fs
andl
dec
xchg
out
xchg
lock
das
add
sub
dec
gs
and
test
ja
cltd
pop
fstpt
xchg
push
jne
les
cmpsl
cmc
push
cmpsl
add
stos
and
sarb
push
bound
sub
sbb
sbb
jo
cli
insb
sub
pop
jp
jo
or
jecxz
jnp
cmc
out
mov
fidivrs
mov
cmc
ret
push
xor
cmp
enter
stos
push
dec
mov
xchg
stos
out
test
xor
call
dec
ret
addr16
lret
test
in
in
arpl
das
test
ds
imul
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
stos
lret
andl
js
lahf
loopne
fwait
aas
pop
test
cwtl
mov
and
sbb
cmp
pop
pop
les
sub
sub
xor
adc
in
xchg
cmc
or
jecxz
mov
sti
or
push
dec
loop
pop
in
mov
cld
or
pushf
mov
and
bound
test
js
test
xchg
or
push
lret
ss
push
cmp
sub
les
subb
or
xchg
and
rorl
out
es
pop
lea
and
ret
inc
jecxz
adc
and
mov
or
out
add
leave
xor
sarb
int
xchg
int
ja
in
lods
push
add
jg
insb
sbb
lea
jnp
jno
jg
cmp
or
fstpt
dec
push
into
mull
lret
repnz
sbb
xor
xchg
add
scas
jl
push
hlt
fimuls
push
stos
lods
jmp
icebp
push
push
fidivrs
fldenv
xor
xchg
pop
fnstenv
int3
cli
cltd
xor
jnp
or
dec
jmp
fisttps
sbb
add
subb
pop
movsl
in
push
push
cmp
insl
ficompl
mov
sub
pop
test
jmp
loopne
movsl
repnz
mov
xchg
aaa
and
push
mov
push
pop
pop
jecxz
ficomps
sub
cmp
lods
sahf
scas
mov
or
dec
pop
sti
add
test
ss
adc
ss
xor
dec
lahf
sbb
rolb
add
xchg
xor
jecxz
push
imul
pushf
das
call
movsb
stos
xchg
pusha
leave
mov
fcomip
pop
test
mov
mov
xor
mov
insb
inc
pushf
mov
or
stos
adc
pop
xchg
inc
cs
test
lods
and
sbb
xlat
add
dec
imul
fnstenv
adc
test
mov
jmp
sbb
ljmp
push
jb
iret
adc
mov
xchg
imul
push
xchg
sbb
loope
jb
das
jg
sub
aaa
and
dec
push
push
pop
xchg
cmpsl
inc
in
cld
sub
in
rcl
jnp
fwait
pop
pop
enter
sbb
inc
std
xor
fistps
xor
lret
push
jae
add
js
pop
aaa
mov
shl
daa
mov
and
sbb
inc
inc
xor
mov
pop
pop
push
icebp
xor
push
int
test
es
xchg
subl
cltd
mov
addr16
das
cld
pop
rol
out
sub
lahf
push
inc
add
xchg
mov
insb
push
pusha
dec
adc
idivl
or
cmp
mov
scas
xor
mov
in
les
les
enter
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
jno,pn
mov
ficoms
adc
xorb
aaa
sub
jnp
orl
push
pop
test
int3
leave
cmp
add
gs
or
push
push
add
leave
inc
adc
push
xor
fiaddl
daa
cmp
in
insb
out
and
lds
test
push
pop
fmuls
mov
shrb
stos
stc
mov
add
jg
adc
fadds
lcall
lods
dec
flds
sbb
in
adc
or
out
sahf
mov
pop
fsqrt
mov
fmuls
cli
jecxz
mov
insb
les
andb
add
fldenv
aad
aad
xchg
call
adc
fildll
add
inc
jmp
sub
lds
xor
test
lea
leave
imul
push
insb
fistl
xor
lea
cli
push
cmpsb
mov
in
enter
ret
mov
sbb
call
mov
sti
push
imulb
mov
adc
dec
pop
adc
jns
in
or
lock
add
outsl
scas
and
cmc
mov
jne
jp
sarl
and
lods
mov
and
and
xchg
add
das
repnz
dec
aam
add
ljmp
cmp
repz
adc
ss
adc
jmp
jns
and
fiaddl
add
dec
das
cmp
jp
rorb
pushf
sub
push
movsl
mov
mov
dec
push
sub
cmp
orl
mov
stc
jg
ret
dec
scas
jne
xchg
add
ss
inc
in
je
popa
xor
dec
arpl
mov
pop
jnp
jl
xor
adc
pop
jmp
fildl
insl
shl
pop
div
inc
fldt
adc
stos
shll
pop
xchg
jecxz
scas
cs
in
scas
adc
adcl
or
insl
or
enter
mov
mov
jne
jae,pt
xchg
sub
pop
jb
mov
ds
xor
xchg
jl
fwait
pop
fwait
mov
fisubs
int3
pop
in
inc
push
je
stos
stos
rcr
stos
lahf
aas
xchg
xchg
iret
jnp
in
jno
pop
daa
sahf
inc
mov
sbb
stos
pop
imul
imul
add
mov
sub
mov
lea
inc
pop
fs
xor
mov
and
bnd
sbb
cmp
xchg
adcb
push
mov
pusha
hlt
xor
push
sub
ja
rorb
jne
imul
das
flds
mov
jns
rcr
pop
mov
fcoms
dec
cld
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
fs
pop
adc
xor
adc
pop
adc
fildll
push
xor
mov
adc
test
outsb
icebp
insl
jno
xchg
jmp
lods
out
cmc
test
mov
pop
mov
rcr
cmp
outsb
mov
out
je
lods
mov
inc
or
push
test
insb
lock
lds
imul
jle
xchg
push
test
iret
lret
and
sub
es
lret
std
mov
sub
les
sub
sub
movsl
test
test
les
dec
into
inc
sub
dec
push
outsb
fistpl
shlb
orb
mov
and
xchg
mov
clc
mov
outsb
repnz
ss
stos
ret
xchg
push
mov
in
push
hlt
rcrb
push
mov
pop
and
add
pop
push
popa
test
or
pop
mov
mov
add
xchg
add
faddl
aaa
outsl
scas
leave
jne
dec
jmp
jne
scas
inc
repz
aas
mov
jmp
jnp
out
and
adc
add
test
shll
mov
xchg
sub
sub
xor
push
ficoml
xor
mov
ds
int3
sbb
shll
cmpsl
sub
arpl
pop
push
jle
xor
pop
nop
mov
clc
mov
dec
cmp
xor
mov
sub
les
jg
aad
and
mov
addb
jne
aaa
test
sarl
pop
xor
push
mov
pop
popf
and
jmp
dec
xor
jne
inc
test
pusha
xchg
js
sub
in
mov
mov
lcall
pushf
pop
and
jmp
test
and
adc
cmpb
xchg
sub
add
std
rcrb
jl
stc
add
bnd
mov
fwait
sub
pop
mov
call
insl
xchg
jno
pushf
jns
and
push
push
leave
mov
and
and
pop
sub
add
jp
sub
or
inc
in
mov
mov
adc
dec
mov
loope
mov
push
add
adc
jnp
fwait
or
arpl
push
and
int
inc
js
mov
data16
popa
pusha
xchg
adc
aaa
sbb
scas
sbb
lret
sbb
sbb
in
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
movsb
push
sub
adc
movlps
loop
mov
lock
cwtl
js
mov
subl
add
jae
sahf
fiaddl
mov
pop
test
sbb
sub
hlt
mov
in
inc
cmovs
mov
loopne
nop
xlat
jb
icebp
dec
in
cmp
lret
jno
sub
aad
pusha
insl
in
and
push
pop
pop
sbb
sub
fsub
int3
stos
cmpsb
or
ret
mov
js
mov
sbb
or
inc
xor
daa
lea
mov
das
pop
add
jb
lods
es
jmp
inc
hlt
or
lret
mov
shr
daa
shrb
addb
hlt
xchg
fcomip
add
cld
push
das
xchg
inc
mov
sub
sbb
pop
andl
jg
fisubs
in
je
push
lds
push
xor
shl
pop
outsl
js
sbb
imul
cmpsb
in
xchg
sub
lret
sbb
imul
test
push
movsl
lods
inc
mov
popl
mov
jns
arpl
imul
enter
mov
aad
and
push
iret
sub
add
int3
inc
pcmpeqb
subl
cmp
scas
pop
addb
push
aas
iret
out
sahf
stc
push
cmp
adc
push
ret
popa
hlt
pushf
out
and
outsb
in
fadds
push
ss
lret
lods
dec
xchg
stos
cli
lock
jne
sahf
inc
imul
addb
mov
cmc
testl
xlat
mov
scas
cld
xchg
popa
xchg
ljmp
jnp
lds
orb
mov
xor
push
out
sub
mov
push
dec
ret
out
or
push
addr16
or
mov
and
sahf
cmp
iret
sbb
test
cmp
mov
mov
iret
mov
inc
mov
push
jo
lret
add
lock
mov
sbb
adcl
ljmp
adcb
inc
cmpl
adc
cmp
aas
jge
iret
jne
sbb
bnd
xchg
cmp
ret
jecxz
cmpsb
cmp
jo
jle
jns
sub
xchg
pop
cmpsl
dec
movsl
mov
fidivs
mov
inc
dec
stc
stc
cmc
mov
icebp
or
jg
sub
xchg
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
pop
sub
push
adc
push
adc
adc
xchg
cs
aam
cltd
shlb
lahf
sub
es
and
xchg
sahf
pop
cmp
lock
cwtl
pop
dec
sarl
pushf
pop
loopne
sub
xchg
mov
or
subb
fucomip
push
loop
add
data16
fsts
xchg
lret
int3
jp
mov
aas
add
cltd
lcall
add
lret
mov
je
es
xor
inc
mov
scas
div
xlat
xor
push
jne
dec
rorl
pop
jnp
sub
xchg
sub
or
xchg
and
clc
add
ret
out
fs
data16
dec
nop
je
pop
xchg
test
adc
pop
inc
mov
mov
pop
ja
sub
popf
jae
jb
loop
cwtl
test
xchg
jl
mov
push
dec
cld
cs
movsb
icebp
inc
pop
ret
gs
adcl
sub
push
mov
adc
push
shrb
mov
out
or
or
adc
test
out
cli
adc
jno
repz
mov
negl
add
jae
gs
test
popf
fwait
inc
insl
mov
add
xchg
stc
pop
mov
movsl
jmp
adc
in
gs
sub
and
jne
ja
cmp
cmpsb
jno
push
cld
das
stos
xor
filds
jo
push
jge
inc
lret
arpl
dec
mov
lock
jge
fs
jae
sbbb
sbb
jecxz
mov
inc
jo
xchg
cli
xor
xchg
rorb
test
adc
pusha
or
xorl
in
lcall
sub
sbb
mov
movsl
sub
add
xchg
mov
je
dec
loopne
inc
sub
or
test
mov
pushl
mov
adc
cmpsb
movsl
inc
add
mov
jle
cltd
fistpll
lahf
idivb
mov
scas
std
push
dec
xor
xlat
cmp
dec
mov
sub
shll
jge
into
and
mov
scas
xlat
stc
fcompl
mov
mov
test
push
dec
imul
aam
push
into
dec
scas
nop
cli
aad
xchg
or
sbb
ljmp
bound
jmp
daa
arpl
ret
mov
mov
push
xor
mov
ljmp
sbb
arpl
jo
icebp
out
mov
orl
add
xor
xchg
xchg
add
xor
iret
andb
cmp
mov
dec
sahf
sub
popa
imul
clc
testb
pop
lret
push
data16
inc
addr16
test
lock
dec
xchg
nop
dec
push
dec
imul
push
mov
dec
push
jmp
out
mov
icebp
cltd
push
push
mov
inc
xchg
iret
jmp
jl
test
mov
incb
push
lcall
xchg
notb
andb
cmp
insb
jl
push
iret
cmp
ret
lock
ljmp
jmp
jecxz
pop
sub
daa
jl
mov
scas
xor
push
adcb
cmp
adc
pop
insl
loop
insl
ror
stos
add
std
cmp
push
and
dec
xor
dec
cltd
daa
popf
mov
bound
inc
sub
dec
fiadds
mov
clc
sbb
sarl
sbb
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
ret
jmp
xor
adc
adc
adc
sahf
lret
jmp
push
mov
and
sub
jno
and
mov
mov
pop
add
jo
mov
inc
push
imul
mov
imul
jge
pop
jo
add
mov
push
xor
fmuls
push
xchg
ret
mov
add
adc
sub
loopne
xchg
push
cmp
cmp
fwait
jb
mov
and
push
xchg
dec
inc
mov
push
aas
push
test
mov
scas
out
or
inc
mov
mov
cwtl
cmp
fs
popa
dec
mov
jl
or
inc
cmpl
mov
imul
int
mov
cmp
mov
mov
pop
in
jle
push
pusha
sub
sahf
movb
add
xchg
cltd
mov
icebp
xchg
add
pop
ss
roll
fdivrs
xor
inc
test
hlt
outsb
pop
adc
mov
mov
addr16
xorb
jae
xchg
stos
in
mov
mov
ja
insb
mov
or
sub
test
adc
aas
insl
ja
popa
add
outsl
sub
xchg
popa
push
inc
rorb
stos
or
sti
sbb
and
dec
test
mov
and
orb
bound
icebp
fwait
std
or
daa
hlt
sbbl
popf
nop
push
xchg
les
sub
sub
les
lds
xchg
xchg
jbe
aaa
sbb
xchg
lods
dec
adc
in
or
in
push
imul
test
cmp
or
dec
lods
and
push
fidivrl
adc
cmp
int
cltd
fsubrs
mov
pop
stos
cmp
lods
push
and
fbstp
and
push
mov
mov
mov
mov
inc
push
mov
cmpb
inc
push
dec
out
push
mov
mov
fs
sbb
and
dec
sub
cmp
inc
lock
sarl
ret
push
inc
sarl
adc
dec
xchg
cli
sub
mov
xor
jae
and
test
push
int
mov
scas
insb
and
in
pop
mov
loop
mov
jbe
out
pop
lds
mulb
add
mov
fdivs
lahf
das
loope
addr16
stos
adc
loopne
out
fnstcw
shlb
jo
rolb
pop
pop
shll
ficoml
mov
leave
inc
xor
les
push
cltd
pop
and
jns
mov
scas
arpl
jb
cmpsl
arpl
mov
xchg
mov
xchg
es
push
outsb
fdivrp
xor
stc
adc
xor
cmp
andb
repnz
push
je
ja
push
sub
aam
xchg
push
xchg
nop
adc
stos
xchg
dec
mov
mov
addr16
test
inc
sub
in
push
jbe
aam
push
sbb
or
dec
xchg
mov
scas
xor
push
mov
push
add
inc
push
iret
loopne
jmp
lcall
mov
fdivrs
imul
sbb
pop
repnz
adc
shrl
jnp
xchg
sub
pop
outsl
inc
mov
push
out
movsb
cmp
mov
mov
mov
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
aam
mov
adc
adc
adc
pusha
jle
ffree
xchg
rol
mov
mov
and
jae
aas
jbe
inc
fmuls
mov
xlat
inc
aaa
xchg
or
sub
scas
add
into
pop
addb
push
fidivl
ret
shl
stc
lock
mov
cmp
bound
aam
xlat
ror
in
insb
xchg
mov
inc
mov
insb
adc
mov
sub
and
jecxz
fidivrs
js
lcall
clc
cmp
xor
push
jmp
outsb
cmp
jl
insb
stos
daa
cmpsb
xchg
push
out
movsl
inc
out
clc
mov
push
push
rcll
lock
push
add
sub
push
jl
addr16
adc
jne
es
outsl
pop
pop
xor
shl
sbb
call
xchg
cmpsb
xor
scas
dec
fildl
lret
aas
ret
lock
pop
outsl
fisttps
addb
ret
aas
sti
lods
imul
sbb
sbb
int
push
jb
sub
pusha
push
decl
push
rolb
mov
rcll
mov
xor
loope
jp
adc
mov
cmp
ds
and
pop
push
sub
pop
shrl
push
loop
lret
add
ja
sbbl
test
je
imul
or
mov
repnz
ret
mov
jne
sbb
loop
xchg
or
fstl
pop
push
jmp
ret
jnp
icebp
pop
fdiv
in
hlt
xchg
lea
pop
inc
cwtl
fwait
push
mov
add
dec
and
dec
aas
cmpl
jmp
movsb
orb
mov
push
inc
add
dec
mov
imul
jl
dec
jp
mov
xor
mov
ljmp
jae
faddp
mov
cmc
pop
das
loope
pop
lods
outsb
incb
into
jecxz
sti
push
hlt
jmp
int3
pop
cmp
lahf
jne
imul
mov
jbe
cmc
arpl
addr16
mov
cmp
notl
mov
push
inc
in
out
in
mov
mov
jmp
push
inc
or
and
pop
iret
cltd
sub
inc
add
push
and
cmpsl
dec
dec
sub
xchg
arpl
adc
xor
add
push
xchg
cmpsb
mov
or
add
push
into
mov
mov
or
jge
test
inc
sti
mov
mov
adc
mov
push
jno
setle
pop
cs
dec
pop
cmp
fnsave
inc
addr16
rorb
test
cli
out
mov
loope
fisttpl
shrl
xchg
aas
out
pop
mov
insl
scas
pop
in
push
jmp
hlt
mov
pushl
insl
addr16
xchg
mov
xor
pop
rcll
cmp
sub
daa
test
ret
or
fwait
clc
jge
mov
fidivrl
adc
xor
xorb
ljmp
bound
scas
ficompl
xchg
sub
pop
fs
sbb
rol
sub
cmc
push
add
push
mov
cld
mov
ficomps
mov
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
push
dec
inc
stos
or
adc
push
adc
adc
jb
jge
ret
jae
outsl
out
je
js
rcl
add
test
ror
loope
fbld
mov
pop
cmpsl
mov
mov
out
int3
out
mov
xor
iret
jmp
pop
mov
sahf
jne
jno
mov
xchg
vsubsd
mov
fldcw
popf
subb
adc
rclb
test
mov
push
push
orl
insl
pop
push
dec
mov
xor
decb
ficomps
dec
aam
jl
popf
popf
push
xor
inc
jl
pop
lret
sbb
adc
in
jle
jp
xor
out
push
or
jno
jnp
mov
test
arpl
ss
adc
rcrb
test
pop
xchg
cmp
mov
sub
test
bound
mov
dec
stos
jg
fucomi
daa
nop
push
xor
cmp
aad
push
insl
adc
pop
push
mov
mov
shlb
scas
sarb
dec
pusha
insb
rcl
scas
mov
shlb
cmp
xor
mov
pop
xor
and
jbe
or
lret
jno
add
pop
mov
fsubp
jnp
dec
or
loope
lock
adc
frstor
mov
fdivrl
icebp
xor
repz
pop
ffree
cmpsb
bound
mov
fists
jle
push
sub
ss
pop
or
inc
loop
test
adc
fwait
sbb
adc
add
push
mov
dec
sub
mov
into
ja
xchg
fcoms
mov
out
lds
inc
test
aaa
test
add
dec
jp
xor
pop
mov
cwtl
in
inc
cmpb
inc
test
outsl
xor
fisttps
movsb
int3
ss
jle
push
aas
push
add
insb
fs
and
sub
push
lock
andl
add
aaa
int
out
test
adc
jp
sub
cmp
lret
xchg
cltd
mov
insb
test
gs
out
outsl
add
mov
icebp
mov
inc
inc
jb
lret
loope
call
dec
imul
int3
in
in
push
or
xlat
shrb
rcl
sub
jg
dec
inc
outsb
inc
cmc
enter
adc
leave
cmpb
test
mov
rcr
je
mov
xlat
dec
fnstcw
inc
or
je
ds
sub
jl
mov
call
mov
hlt
mov
addr16
cmp
jge
add
pop
mov
lcall
scas
sahf
fdivs
dec
daa
test
dec
rclb
jbe
sbb
sti
test
mov
pop
mov
jnp
and
in
jns
dec
mov
repnz
test
adc
insb
in
and
pop
mov
add
sub
clc
push
or
lods
into
cmpsb
xchg
js
adc
or
xor
dec
push
xor
daa
cs
repnz
andb
cmp
cltd
xchg
dec
lock
not
in
test
movsl
add
add
shlb
insb
daa
ret
mov
popf
int3
out
stos
std
xor
adc
adc
adc
xchg
sbb
shlb
ds
sbb
mov
lahf
or
push
inc
or
push
sti
and
clc
movsb
mov
test
dec
fstpt
mov
testb
or
xchg
add
pop
xor
shll
mov
scas
idivl
push
cmp
iret
pop
mov
repnz
mov
xchg
jno
cmpsb
inc
fmuls
mov
mov
fstp
mov
pop
rorl
out
sbb
mov
out
inc
add
push
repz
add
fs
inc
out
test
pop
mov
xor
stc
jae
sbb
jnp
fnstenv
sahf
xor
sub
sbb
push
adc
ja
aad
sub
rol
pop
out
out
aaa
mov
in
js
stc
stos
mov
testb
sarw
call
pop
add
mov
pusha
sub
or
mov
xor
xor
pop
cwtl
stc
dec
popf
test
dec
adc
les
and
aas
and
cmc
xor
ret
movsb
imul
sub
test
cmp
mov
inc
jns
sub
mov
mov
pop
add
pop
or
rcr
mov
mov
sbb
movsl
in
sub
into
popa
shrb
inc
mov
shr
scas
sbb
fisubl
cltd
iret
mov
inc
movsl
test
xor
cmp
lahf
fbstp
xchg
orb
inc
dec
loopne
pop
push
mov
jo
mov
movsl
pop
sub
rorl
push
lods
mov
pop
pop
mov
sbb
push
mov
ret
mov
xor
jl
divb
xor
fwait
ds
popa
push
cmc
adcb
insb
xchg
push
sbb
cmp
call
ret
mov
mov
mov
enter
adc
jo
add
mov
xor
lock
inc
xor
or
out
lock
xchg
mov
mov
outsl
aaa
aad
dec
ficomps
fistpll
bound
xor
xor
lods
dec
inc
mov
roll
shlb
inc
aad
sub
je
push
cmp
rcr
cmpsb
mov
mov
cmp
pop
aas
ljmp
roll
int
nop
sub
lds
outsb
inc
out
or
arpl
ret
add
repnz
imul
inc
jbe
xor
inc
sbb
out
xor
das
data16
testl
pop
inc
mov
push
cmp
dec
fwait
arpl
mov
xchg
mov
imul
cli
adcl
fwait
jno
xchg
ficompl
mov
in
cmpsb
iret
pop
std
sbb
je
icebp
outsb
es
out
dec
repnz
icebp
cmc
cmp
jg
dec
inc
leave
mov
aam
mov
mov
dec
aad
cltd
daa
cmp
sub
sbb
iret
jg
jmp
shlb
push
mov
data16
dec
cmp
aas
aas
push
and
add
insb
je
push
push
decl
pop
sbb
xlat
cltd
dec
mov
movsl
xchg
push
fidivrs
mov
mov
mov
mov
add
adc
or
mov
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
fldenv
sbb
enter
packuswb
xchg
or
cmpsb
push
push
dec
int
fcmovnb
push
pop
push
out
cli
jmp
mov
pop
fwait
leave
push
xor
adc
movl
sub
cmpsl
aas
fisttpl
arpl
scas
mov
sbb
inc
or
in
fadd
lods
rolb
pop
loope
in
int3
shl
stc
clc
subl
inc
loopne
mov
mov
loopne
pop
lods
sarl
jmp
inc
mov
sbb
addb
inc
mov
cmp
xor
in
xorl
mov
fsub
xchg
enter
cmp
adc
jge
loopne
mov
xchg
and
pop
pop
aas
cmc
push
imul
xlat
stc
and
cli
adc
mov
xchg
jp
sbb
js
push
dec
daa
sbb
push
daa
scas
mov
cmp
and
js
sahf
stc
jae
in
jle
mov
aaa
pop
xor
shlb
inc
sub
jne
pop
pop
adcb
mov
push
mov
cmp
push
mov
scas
cmp
jmp
outsb
xor
dec
fbstp
pop
jno
nop
push
sahf
pop
out
dec
cmp
jnp
inc
push
push
mov
imul
cmp
or
push
xchg
shl
adc
shrl
fldenv
sbb
inc
and
dec
push
sbb
and
xchg
or
xor
insb
in
sub
hlt
cli
cmpsb
out
pop
pop
shrb
enter
movsl
mov
daa
scas
and
imul
pusha
nop
ja
enter
ret
pop
test
fiadds
mov
mov
inc
sbb
gs
xor
jns
xlat
rcrb
or
dec
mov
out
stos
cmp
call
or
adc
movsl
xchg
into
repz
test
jae
decl
push
push
dec
dec
lock
or
and
movsb
insl
xlat
xor
push
loop
pop
sbb
and
in
mov
and
leave
movsl
or
in
push
ret
push
push
orl
lds
ret
dec
sub
sub
jne
xlat
cmp
cli
das
xor
cmp
testl
aam
cmp
jae
fldcw
hlt
ret
imul
xchg
test
adc
xchg
jne
inc
movsb
lcall
adc
xchg
and
cmp
add
gs
pop
hlt
aad
and
int3
add
jg
lock
sbb
sub
popa
sub
xor
daa
sbbl
cmpsb
fnstcw
lock
movsl
jmp
or
cmp
pop
repnz
out
inc
jno
test
cmp
loope
mov
pop
dec
pop
dec
push
pop
data16
cli
jae
add
mov
lea
pop
mov
ljmp
ret
or
lock
pop
clc
sub
out
jl
sbb
int
out
mov
push
lock
movsl
push
pop
flds
js
fnstenv
mov
pusha
pop
push
je
loope
dec
cltd
scas
fisttpll
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
xor
fisubl
adc
push
adc
adc
push
or
xor
push
out
cmpsb
cli
xor
mov
lret
stos
mov
insl
dec
lea
sub
mov
mov
pop
xor
fisttps
push
add
fldt
add
es
mov
sbb
shrl
sub
rorl
loop
ficoml
pusha
inc
ljmp
stos
inc
xchg
fiadds
pop
sbb
jns
jle
push
cmc
push
mov
push
stos
dec
mov
inc
in
push
lock
mov
mov
inc
mov
fisubs
cld
int3
aam
js
sahf
sub
mov
jg
cltd
push
popf
pop
dec
loopne
das
adc
ljmp
mov
cmp
icebp
les
mov
lret
stc
dec
cs
xchg
inc
fs
jecxz
or
xlat
mov
movsb
mov
lret
pop
lock
adc
mov
adc
cs
pushf
sahf
repz
jbe
stc
in
ficoml
mov
sbb
push
rdmsr
mov
les
pop
test
jbe
faddp
stos
inc
cmp
sbb
pop
and
or
and
sbb
aam
es
mov
or
leave
mov
into
pop
pop
ljmp
mov
mov
out
pushf
movsb
arpl
lret
ror
or
add
enter
ret
jmp
jecxz
jmp
cmpb
test
inc
push
and
mov
fcomp
cmc
out
jmp
xchg
sub
sbb
sub
push
ljmp
cmp
rorl
jmp
cwtl
lods
lahf
cmpsl
shl
and
xlat
pushf
jg
stc
and
clc
cmp
jecxz
ss
push
clc
sub
repnz
pop
test
rcr
xchg
out
cli
notb
inc
pop
and
ret
xor
fstpl
ljmp
pop
lea
jae
inc
jno
add
xchg
es
js
incb
jp
mov
rol
loope
pop
lock
lahf
sub
lahf
in
mov
xor
xchg
aam
int3
mov
adc
push
jmp
imul
push
jbe
pusha
inc
add
pop
mov
in
and
xchg
or
cmpb
das
sub
fcomp
mov
sti
adc
jge
inc
xorl
inc
rcr
sub
hlt
sub
out
mov
inc
lahf
movsb
jbe
mov
ret
icebp
mov
xor
jp
jge
data16
mov
dec
rcr
pop
sub
xchg
dec
cmp
push
mov
push
mov
out
fcoml
jns
push
pop
or
or
jg
cmpsb
dec
adc
pop
mov
mov
jmp
adc
repnz
and
lret
test
inc
in
std
outsb
lds
mov
data16
sbb
mov
pop
mov
lods
sbb
pop
hlt
inc
test
sub
insb
add
in
test
pusha
shr
popf
jns
in
clc
in
push
pop
mov
mov
pushf
shl
sbb
inc
dec
mov
fistpll
pop
int
or
cs
lock
imul
aaa
lahf
xor
fdiv
js
mov
bound
jns
out
test
cmpsl
shrl
cmp
jl
xchg
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
out
pop
lods
ret
sbb
adc
movlps
jo
or
pop
mov
fimull
cvttps2pi
jge
mov
sub
sbb
stc
mov
out
daa
fcom
cltd
negb
sarl
mov
sub
inc
xor
cli
adc
sbb
inc
ljmp
shrb
outsb
faddp
mov
std
into
mov
sub
push
cwtl
lds
dec
and
ds
data16
adc
push
jecxz
cmp
cwtl
add
cmpsl
dec
jmp
insl
xor
outsb
jp
outsl
decl
icebp
cmp
xor
mov
adc
inc
adc
mov
ljmp
push
push
cmp
loope
xlat
inc
sbb
or
dec
and
bound
cwtl
dec
add
mov
dec
test
test
out
xchg
push
sbb
dec
xor
rep
gs
mov
mov
sbb
pop
insb
or
ret
mov
or
pop
out
fadds
test
lcall
xchg
mov
push
adc
dec
push
xchg
inc
js
movsb
dec
cmp
sub
sti
iret
jne
adcb
add
fdivl
bound
or
and
xor
loopne
xchg
push
fsubl
pop
movl
cmc
stos
repnz
fbstp
xchg
imul
mov
lret
mov
lahf
outsl
ja
pusha
aaa
pop
scas
add
ficoml
mov
dec
repnz
dec
push
sub
outsl
adc
sub
push
ljmp
mov
daa
lcall
out
imul
add
xor
xlat
mov
sub
xchg
mov
jo
pusha
aad
adc
push
pusha
and
rcrb
test
cmpsl
xor
aas
pop
inc
fstps
jb
repz
lds
lea
push
lahf
pop
lea
fldl
and
sbb
adc
stos
les
addr16
sbb
out
loop
or
pop
mov
push
cld
cmpsl
ljmp
mov
cmp
mov
aam
daa
in
jns
lcall
mov
dec
push
jo,pt
jg
pop
movsl
sub
dec
lods
xlat
repnz
sbb
pusha
dec
mov
mov
xor
add
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
out
push
push
sbb
adc
movlps
sbb
pop
insl
jmp
dec
es
das
xor
call
icebp
xor
addb
lahf
pop
xor
test
push
mov
xchg
in
loopne
shr
dec
mov
inc
push
ret
int
jg
push
adc
push
popa
jb
mov
ret
jle
jne
decl
xor
jp
shrb
jae
xor
push
push
mov
mov
subb
fsin
aam
pop
cmp
lods
add
xchg
ret
xchg
sbb
push
dec
sti
mov
das
popa
xchg
aaa
fcmovnb
repz
aad
in
in
add
xor
jbe
add
in
loop
data16
mov
insl
jl
aas
adc
push
jns
std
je
lret
sub
into
dec
testb
popf
add
and
xchg
jg
sarb
popf
jp
mov
add
pushf
pusha
fbstp
ret
push
shlb
cmp
movsb
adc
pushf
bnd
adc
notl
arpl
lret
mov
push
jge
push
fisubrs
inc
out
cmp
jge
inc
cmp
repnz
fwait
dec
fcomi
popa
sub
adc
loopne
sahf
adc
push
mov
xchg
popa
std
pop
sarb
ret
adc
sub
fcmovu
fsubr
push
gs
push
or
jnp
shrb
add
mov
sub
jmp
je
or
pop
ret
les
iret
repz
shlb
gs
adc
pop
call
rorl
cwtl
push
dec
push
adc
push
loop
xor
add
test
adc
push
lods
xor
cmp
push
loopne
dec
pop
ret
xchg
push
or
mov
sbb
cli
cmp
pop
mov
nop
loop
mov
lods
dec
sub
aad
test
xchg
adc
cmp
in
nop
push
jle
shll
rorl
dec
aad
cltd
popa
in
dec
inc
daa
mov
and
add
push
mov
ljmp
fcomp
mov
add
mov
pusha
xchg
mov
test
xchg
sub
cmp
adc
fiaddl
add
inc
sub
or
lret
fwait
push
out
ss
inc
jne
aas
out
jo
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
and
adc
decb
adc
inc
and
sbb
jae
add
ljmp
pushf
mov
xchg
popa
fs
aaa
push
repnz
cltd
push
push
out
jbe
xor
cmc
ja
adc
loop
cmp
jmp
rclb
sub
push
loopne
jae
mov
mov
call
test
pusha
icebp
imul
pop
insl
mov
push
mov
sbb
dec
cld
popa
loopne
cmp
fsub
dec
shlb
add
clc
push
shlb
pop
xchg
cmp
nop
inc
inc
popa
cmpsl
push
fistpl
xlat
orl
add
data16
les
xor
and
fwait
fnstenv
fists
sub
iret
jl
xor
mov
mov
pop
xchg
sar
out
cmpsl
xchg
popf
mov
mov
in
xor
and
adc
fsubrl
and
mov
xchg
adc
pop
loopne
fwait
pop
mov
inc
push
sarl
test
mov
enter
add
mov
xor
stc
clc
clc
pusha
sahf
shlb
sbb
sub
adc
sbbl
and
xlat
mov
div
inc
push
inc
pop
subl
mov
adc
hlt
push
in
jne
mov
jb
call
inc
adc
addr16
popf
xchg
lret
cmp
xorl
rcll
fwait
pushf
lahf
jnp
stos
in
mov
leave
scas
in
cld
divl
mov
dec
outsl
jo
adc
popf
inc
dec
cmc
jae
ljmp
sub
dec
mov
cmp
push
jp
xor
and
jnp
lods
push
iret
jae
xchg
inc
ds
mov
xor
lods
test
clc
mov
jo
and
mov
lret
push
jecxz
and
jno
out
mov
mov
les
lret
cmpsl
jbe
movsl
dec
adc
das
add
fadds
fisttpll
lahf
faddl
ret
cmp
jle
jns
inc
jp
and
cld
fimuls
nop
sub
lds
jge
dec
and
outsl
cmp
clc
cwtl
jne
roll
inc
lcall
lock
cwtl
pushf
stos
sub
popa
imul
jge
dec
loope
aad
das
popf
jae
fdivrl
mov
cmp
rcll
out
jmp
stos
mov
xchg
xchg
sbb
pusha
dec
or
aam
lds
xor
and
rorb
dec
add
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
dec
out
mov
decb
adc
decl
divb
cmpsl
outsl
insb
push
pop
inc
jge
cltd
lret
imul
jecxz
cmp
add
dec
sbb
inc
dec
arpl
das
aad
loope
std
arpl
fnsave
jmp
mov
cmc
daa
push
push
fldcw
lods
sahf
inc
xor
or
mull
dec
cmp
dec
push
setge
arpl
push
leave
clc
call
aam
jns
pushl
loope
jb
pop
out
sub
jmp
mov
and
push
adc
movsl
dec
scas
sbb
cmpl
clc
imul
cmp
push
and
iret
add
cmpsb
jge
lahf
adc
xor
push
dec
pop
shlb
mov
lea
sbb
outsb
fldl
jle
or
sbb
pusha
insb
rcrl
adc
jb
push
mov
rorl
jg
fs
sub
xchg
add
js
sub
mov
sbb
pop
push
inc
cwtl
test
mov
add
fwait
lock
push
sbb
fimull
sti
imul
adc
pop
js
add
mov
inc
les
cmp
std
sbb
int
cmc
mov
int
adcb
mov
add
int
mov
pop
je
jp
aaa
cmc
lods
cwtl
scas
cmp
cwtl
jl
aaa
popa
fabs
cmp
in
scas
xchg
push
xorb
es
inc
dec
push
cwtl
lret
sarl
dec
int
subl
push
pop
das
je
lock
imul
push
sub
test
pusha
or
xor
std
and
pop
es
adc
cmc
and
or
insl
loopne
outsb
mov
add
xchg
cmp
push
pop
pop
push
je
and
or
dec
push
lock
je
ja
adc
inc
add
dec
dec
add
mov
sarl
adc
test
jns
inc
mov
cmc
data16
mov
or
mov
fmuls
lds
dec
mov
or
out
lret
arpl
inc
adc
sub
xchg
mov
stos
dec
std
lock
push
cwtl
data16
fisttpl
shll
push
ja
sahf
mov
cwtl
pusha
sub
imul
int3
push
mov
loop
dec
test
sarl
xor
std
nop
dec
jo
inc
lret
xor
ret
sbb
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
lock
mov
decb
adc
mov
lea
mov
stos
xor
mov
lods
mov
mov
mov
jno
push
inc
mov
fistpl
mov
adc
push
stos
sbb
cmpsl
mov
push
sbb
adc
push
dec
and
shlb
test
das
cltd
push
add
cmp
stos
data16
add
inc
cmp
push
out
cli
cli
add
mov
mov
into
ficoms
loope
push
sub
mov
cmp
ds
mov
xor
and
and
xor
test
dec
xchg
add
jbe
gs
sbb
push
in
sub
pop
and
add
cs
mov
rcrb
sub
imul
pop
imul
movsb
or
add
and
scas
sub
fucomip
movsb
into
iret
sub
xor
faddl
adc
mov
test
andb
xor
scas
pop
mov
fmuls
aad
leave
or
arpl
cmc
xchg
push
push
dec
ds
loope
pop
or
push
cs
lcall
fidivrl
mov
jmp
nop
adc
lock
pop
inc
sbb
sub
dec
sbb
dec
inc
mov
mov
cmp
jnp
sbb
xchg
and
repnz
adc
dec
ffree
outsl
loope
insl
jno
divb
adc
call
dec
insb
les
jle
mov
jb
movsl
or
movsl
or
in
jge
or
jae
jle
cmp
mov
mov
cmpsl
mov
pop
lret
pushf
lret
pop
stc
mov
xor
fidivl
jnp
push
cmp
mov
cltd
mov
pop
xchg
popa
xor
pop
out
jnp
sub
movsb
jge
jae
jecxz
aad
icebp
jne
mov
jmpw
pop
jns
adc
push
mov
rcrl
pop
pushf
sbb
dec
pop
add
std
clc
repz
xor
push
inc
popf
iret
jp
dec
mov
test
cmpl
push
cmpsl
cmp
lret
inc
test
cwtl
adc
scas
push
loopne
fcmove
xor
inc
adcb
inc
pop
rolb
cmpsb
xchg
std
cmpsl
xor
jne
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
stos
mov
jne
and
mov
push
mov
or
xchg
sub
inc
and
jmp
int
push
add
mov
sbbl
sbb
notl
push
dec
roll
pop
push
adc
lret
inc
jg
mov
cmp
stos
jne
stos
adc
xchg
cwtl
stos
sub
ja
and
sub
sbb
into
mov
jge
inc
test
sub
pusha
fnstcw
adc
and
sbb
pop
pop
addr16
ficoms
xchg
and
mov
push
inc
rorb
pop
roll
pop
jmp
pushf
movsl
mov
push
mov
in
xor
scas
push
mov
xchg
fimuls
push
cwtl
push
cmp
push
sbb
inc
sub
mov
xchg
adc
xchg
test
aaa
sub
xor
sub
repnz
out
outsb
add
pop
nop
sahf
pusha
dec
out
aaa
jb
cmp
popa
in
mov
stc
xlat
adc
sbb
mov
orl
lock
jo
jmp
jnp
fmull
inc
add
or
mov
pop
mov
pusha
imul
push
cmp
and
push
in
push
das
xlat
bound
cld
pushf
and
push
inc
je
test
and
cltd
les
jb
sarb
xchg
inc
sbbb
rcr
aam
imul
dec
jecxz
mov
jl
xchg
cwtl
pop
pusha
dec
pop
dec
or
jnp
cmc
jl
test
jmp
in
cmp
mov
repz
add
or
iret
dec
stc
loopne
jecxz
mov
and
es
pop
xchg
out
mov
sub
ljmp
aam
inc
mov
jp
les
mov
and
and
jecxz
xchg
jne
push
mov
adc
mov
cld
fsubrp
out
dec
test
nop
sbb
sbb
rol
aad
pop
dec
push
cmpsl
lds
es
mov
mov
xor
jns
cmpsb
dec
cmp
leave
push
xchg
loope
lea
cmp
mov
cmp
cwtl
pop
inc
push
lea
test
ja
loope
cmp
jl
inc
lret
sbb
stc
sbb
mov
mov
inc
cs
in
cmpsl
clc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
xor
movsb
js
cld
adc
popa
movlps
pop
mov
loope
inc
push
mov
push
jo
mov
adc
aad
je
out
push
mov
out
sbb
lret
cltd
jb
xlat
dec
ret
lret
push
push
lods
or
movsb
shll
call
loope
aad
and
test
out
sti
jle
and
mov
out
push
or
or
lahf
pushw
mov
mov
inc
fs
jg
sub
sbb
dec
mov
arpl
add
das
push
add
inc
jmp
ljmp
sbb
aaa
pusha
jmp
dec
aad
lods
xchg
fmull
repz
aam
mov
je
push
loop
jl
lret
cmpsb
pusha
pop
out
adc
mov
shl
shl
out
iret
xchg
sbb
jns
ret
ret
push
dec
inc
cmpl
movsb
mov
ljmp
mov
sbb
and
push
repnz
aad
xor
xchg
aam
ss
inc
pushf
mov
lret
ud2
divl
je
out
mov
cmp
xchg
xor
and
xchg
pushf
gs
xchg
and
add
xor
inc
test
inc
imul
test
aas
cltd
adc
fdivrl
arpl
push
rolb
cs
push
gs
mov
in
je
sub
sbb
mov
out
xchg
stos
push
xorl
mov
xchg
out
xor
stos
popa
fidivrl
push
pop
stc
sub
lock
int3
sbb
jb
fsts
repz
adcb
imul
lds
popa
push
dec
mov
les
cmpsl
pop
jae
stc
loope
push
pop
jno
adc
lahf
pop
fwait
add
out
and
xor
nop
pop
cmp
mov
cmp
push
imul
xor
mov
in
inc
cwtl
mov
sbb
mov
or
inc
and
adc
outsb
jl
mov
scas
push
mov
in
xchg
scas
leave
loopne
cmp
into
or
insl
neg
ja
or
dec
pop
btr
inc
clc
es
repz
pop
jo
pop
out
pop
mov
add
cmp
repz
xchg
mov
shrb
dec
sub
mov
je
mov
cmpsb
sub
cmp
popf
push
test
mov
jge
ja
mov
ljmp
loop
div
xchg
inc
addr16
push
push
jp
lcall
sbb
push
jnp
roll
dec
into
xchg
sbb
outsl
add
pusha
add
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
jmp
pusha
js
clc
adc
popa
movlps
jns
hlt
xlat
cwtl
sub
in
adc
pop
dec
lea
scas
ja
out
roll
push
adc
cwtl
add
test
sub
inc
push
popa
mov
mov
insb
test
jp
pop
pushf
adc
insb
sti
int
jne
lods
add
and
jge
inc
fnstcw
pop
or
inc
mov
and
scas
fisttpl
je
push
lods
add
nop
inc
call
and
cltd
rorl
fbld
pusha
div
fimull
test
fld
inc
xor
adc
mov
arpl
push
leave
mov
inc
and
dec
sbb
add
lds
inc
sbb
addb
add
sub
add
pop
push
clc
rolb
mov
popf
mov
ss
cmpsl
inc
jo
pop
clc
cmp
mov
xor
rorb
sub
into
inc
jno
push
mov
mov
lahf
aad
popf
negb
aad
xchg
out
adc
cmpsb
out
jns
bound
hlt
push
cmp
inc
sahf
addr16
xchg
push
in
dec
mov
aas
jg
idiv
pushf
pop
xchg
push
pop
fcomi
adc
sbb
in
inc
pop
cmp
icebp
pop
mov
pushf
pushf
fmuls
push
inc
and
enter
sub
sti
shlb
or
iret
jmp
mov
push
ja
pop
pop
inc
fwait
jp
fisubs
clc
pusha
int
mov
and
push
pop
add
push
xchg
in
xchg
dec
test
mov
lret
lahf
and
out
inc
in
out
sub
ljmp
adcb
lret
into
mov
fbld
mov
pusha
xchg
roll
cld
or
sbb
das
in
popa
sbb
into
pop
rorb
xchg
jbe
iret
xchg
cli
mov
jo
dec
jo
and
pusha
push
imulb
insb
push
std
push
push
inc
cmpb
pop
xor
or
sub
lret
push
push
dec
movsb
dec
jecxz
int
and
shll
adc
movsb
inc
xor
mov
push
inc
inc
sbbl
push
iret
push
cmp
cltd
pop
lds
lcall
dec
and
add
mov
cmp
dec
int3
fstpl
jae
cmp
popf
sbb
and
mov
lds
or
xchg
mov
popf
adc
jp
dec
or
pop
outsb
push
lock
gs
xchg
pop
data16
xorb
inc
inc
sub
rclb
stc
add
loope
xchg
sub
sub
or
rorb
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
cld
add
adc
popa
movlps
mov
movsl
mov
jp
xlat
movsb
adcb
ds
shl
add
popa
dec
ss
ficomps
jecxz
push
jb
or
pop
dec
inc
loopne
adc
push
and
cmp
mov
lods
mov
cld
sub
or
push
out
adc
push
mov
jle
lret
pop
jecxz
orb
xchg
inc
in
adc
rcrl
scas
movsb
inc
xor
adc
shrb
add
pop
scas
jbe
mov
sti
xchg
mov
pop
inc
sbb
aad
mov
aaa
inc
jecxz
inc
cmp
pop
lret
fcomps
stos
add
gs
iret
out
mov
sbb
js
dec
pop
and
inc
aam
fwait
shlb
xchg
aad
sbb
ret
rorb
inc
loopne
dec
jb
sbb
mov
or
inc
fnstsw
sbb
push
out
pop
ljmp
scas
mov
lods
mov
xor
stos
xor
xor
sti
xor
pop
into
mov
lahf
mov
andb
jl
outsb
adcl
dec
test
cmpsb
insl
sbb
mov
xor
jbe
test
or
sbb
mov
fnstenv
mov
push
sub
jg
and
scas
fbstp
cmc
jg
data16
sub
mov
jecxz
push
mov
push
pop
cli
xor
mov
ss
popf
ljmp
sub
push
int3
inc
jmp
popa
ss
jnp
push
push
mov
inc
clc
in
loop
dec
dec
loope
cwtl
lcall
test
in
clc
or
or
test
hlt
push
mov
fucom
xchg
cmc
add
lea
mov
movntq
cs
inc
or
js
and
jbe
push
add
sub
loopne
popf
mov
loope
adc
jns
in
xchg
dec
or
test
shll
dec
into
in
sub
add
nop
xchg
push
xchg
js
jmp
mov
movsl
xchg
cs
xchg
push
push
jmp
adc
lea
adc
pushf
add
mov
xor
dec
mov
sar
mov
fwait
out
cmp
icebp
inc
aas
cmp
sub
sub
pop
and
mov
adc
lods
test
icebp
jb
and
push
fdivr
xlat
sbb
mov
and
jns
jecxz
aam
mov
testb
add
lahf
das
pop
repnz
xor
xchg
push
test
movsl
rol
pop
or
mov
rorb
cld
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
push
addr16
stos
fucomip
adc
popa
movlps
out
lea
pushf
push
mov
mov
lods
add
xlat
lcall
push
in
sub
mov
std
sbb
push
dec
loop
out
out
xchg
push
push
jecxz
jb
aad
jne
push
adc
add
dec
lcall
jo
xchg
xlat
ja
mov
xor
shlb
mov
jbe
push
and
jb
cmp
popa
add
mov
les
add
enter
push
mov
mov
scas
daa
jbe
adc
stos
cmp
leave
mov
loop
adc
cmpsb
clc
out
pop
sub
ret
dec
outsl
ficomps
inc
ja
fisttpl
mov
and
mov
mov
mov
pop
sbb
filds
lret
cltd
pop
dec
or
testl
jle
xchg
in
insb
and
out
fs
pop
and
fisttps
fnsave
loop
cmp
and
inc
fistpll
mov
dec
mov
cmc
popf
out
icebp
test
testl
jae
addr16
cld
in
lods
hlt
lock
fmul
sub
out
xchg
int3
jne
add
push
fcompl
int3
loopne
cmp
push
xchg
clc
dec
addr16
xchg
pop
inc
aam
or
stc
ljmp
xchg
mov
js
add
adc
jbe
cmpb
data16
inc
lds
icebp
cwtl
xor
in
lds
xor
xlat
sub
cmp
int3
das
add
fsubs
test
cmp
and
mov
mov
jns
enter
cmp
sahf
xor
and
shl
out
imul
test
mov
shlb
xchg
dec
rorb
aad
dec
add
cmp
adc
test
xor
xchg
jo
mov
cmp
adc
movsb
xor
or
test
xor
push
jl
push
lea
cmpsb
push
out
mov
sbbb
jg
xor
cmp
cmp
mov
hlt
push
outsb
push
sub
ss
or
push
inc
jo
aas
push
push
data16
mov
add
call
cmpsb
inc
cmp
add
cld
mov
xchg
pusha
sub
loopne
sysenter
test
mov
js
inc
or
ret
push
adc
dec
adc
arpl
add
fstps
lds
dec
pmaddwd
push
sub
cmp
push
loope
sub
inc
mov
inc
xchg
in
jmp
jmp
or
popa
int
xchg
in
mov
push
jnp
outsl
out
movsb
lock
sbb
xchg
sbb
dec
mov
loopne
rorb
adc
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
xor
rep
cs
adc
jo
stos
sbb
mov
pop
pop
ret
jmp
cmpsl
rorl
push
jl
cmpsl
lcall
xor
sbb
push
fucomi
sub
mov
call
stc
stos
mov
push
mov
cld
cli
ljmp
lret
aad
bound
lret
int
fs
testl
mov
and
data16
push
ljmp
test
popa
cld
xchg
and
or
mov
jmp
xchg
std
loope
jecxz
pop
leave
jl
push
cmp
adc
lret
and
movsl
and
shll
loop
je
outsl
stos
xchg
jecxz
mov
push
mov
roll
bound
cmpsb
and
sti
lds
nop
sub
call
inc
daa
inc
cmpsl
aam
aas
sbb
mov
test
adc
aaa
roll
jecxz
loopne
jl
push
xor
cli
out
syscall
pushf
cwtl
mov
and
dec
roll
add
inc
xor
movsl
inc
mov
shlb
adc
repnz
pop
lret
mov
push
mov
xchg
and
pop
cmp
je
sahf
lret
jg
cmp
xchg
mov
xchg
push
pop
dec
inc
shl
jae
and
sbb
mov
mov
inc
jp
test
imul
aad
lret
sub
mov
pop
sbb
or
outsb
insl
mov
mov
test
jmp
jbe
xor
movsl
insb
dec
pop
push
dec
lock
testl
xchg
cmpb
inc
add
out
js
jno
mov
push
out
out
mov
fists
scas
mov
ret
lock
loop
test
clc
xor
fisubrs
push
pop
xor
pushf
sub
pop
adc
cmp
xor
xor
bound
lock
cmp
and
jb
fisubrs
mov
clc
adc
daa
repz
sub
cltd
or
jp
js
mov
ss
lock
inc
js
leave
pop
xor
push
and
enter
add
or
jno
inc
int
enter
fs
dec
mov
sub
arpl
push
jb
sahf
push
icebp
test
loop
nop
mov
div
fs
add
mov
push
stc
push
je
les
xor
leave
or
nop
in
loop
jns
dec
fucom
xchg
sahf
dec
das
or
jno,pt
xchg
rorl
mov
nop
dec
inc
int3
inc
ds
insb
hlt
push
insb
lret
loopne
push
jb
push
repz
shrb
add
adc
add
movb
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
mov
push
fists
adc
pop
fcoml
mov
adc
push
xchg
mov
popf
stc
das
fistl
out
and
cs
aaa
sbb
and
sub
push
or
pop
popf
jmp
mov
cmc
mov
cmp
or
ret
arpl
rcrb
lds
lods
sbb
push
cmpsl
mov
mov
jmp
sbb
pop
cmc
inc
pop
pop
pop
in
in
mov
cmpsb
jmp
mov
mov
inc
movsl
outsl
fwait
mov
lahf
add
xor
add
dec
int
add
out
sti
dec
pop
fdivrs
sbb
test
dec
scas
mov
lahf
leave
loop
and
mov
cmp
xor
jo
cmp
mov
or
cmc
call
add
mov
and
repz
mov
movsb
jl
mov
addr16
xchg
cmp
and
cmp
shr
inc
push
ja
ret
xor
loope
adc
insb
fsubrs
daa
daa
xor
inc
mov
daa
ret
pop
lcall
in
mov
push
lahf
push
xlat
sbb
xor
and
in
adc
rolb
push
push
adc
mov
pop
bound
lock
scas
jnp
ja
aaa
in
add
jle
cmp
iret
add
inc
jno
and
pshufw
dec
sub
cmp
shrl
hlt
push
cmpl
pop
sahf
frstor
jle
int
ja
lret
movsb
hlt
hlt
addb
xor
popa
inc
inc
jmp
in
dec
xchg
insb
test
cmp
mov
dec
mov
and
outsb
inc
jnp
pop
sbb
aaa
fsub
pushf
js
faddl
push
mov
mov
jno
pop
or
repz
into
mov
vprotw
xor
out
mov
mov
jns
repz
adc
mov
fisubl
out
lret
dec
out
jl
push
jmp
addr16
test
push
jmp
lods
rcrl
int
stos
movsl
jae
mov
int3
lds
sub
pushf
or
mov
jg
mov
outsb
dec
or
xor
jg
imul
xchg
mov
lods
call
pop
lahf
fbstp
adc
sub
leave
inc
imul
push
rolb
push
mov
xchg
and
jmp
adc
cmp
add
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
pop
icebp
loope
push
xor
or
inc
pushf
xchg
jecxz
ja
and
and
xchg
and
clc
cmp
jo
add
mov
lea
and
mov
inc
pop
mov
mov
lods
leave
or
cmpsl
pop
movsb
fcom
jbe
call
adc
mov
ds
inc
scas
dec
lret
call
fstps
shrb
dec
shll
inc
add
xor
mov
aas
adc
ljmp
fildl
push
pop
push
fcomps
mov
into
iretw
jmp
pop
lds
bound
mov
cmp
cmp
dec
ret
fistpll
inc
or
xchg
xchg
stc
push
fwait
addr16
fidivl
lods
push
cmp
sub
sub
add
in
insb
iret
xchg
push
jge
inc
daa
push
inc
push
or
jnp
pusha
dec
clc
adc
xor
inc
roll
and
das
jle
fwait
adc
mov
push
and
int
mov
dec
xchg
jnp
mov
adc
mov
call
mov
jnp
mov
fwait
hlt
outsl
fs
jae
add
aad
mov
sarb
hlt
test
jns
push
xor
cld
xchg
es
inc
negl
sub
je
ret
ja
add
mov
or
xor
or
stos
out
jbe
loope
jo
test
sbb
outsb
mov
fcom
inc
adc
mov
jmp
mov
or
jmp
push
cltd
flds
and
push
stos
add
shrb
cmp
cmp
insl
dec
pop
mov
call
mulb
dec
add
arpl
fcomi
and
arpl
inc
cmp
mov
and
lcall
cmp
mov
scas
mov
mov
out
xchg
fstpt
imul
cli
ljmp
dec
cmp
insl
xchg
popa
xchg
nop
fists
jge
push
push
gs
cs
in
jmp
loop
mov
push
xor
sahf
sub
imul
mov
pusha
cmpsl
in
imul
aam
and
icebp
and
bound
notb
cmp
inc
js,pn
inc
push
into
add
xor
and
push
add
fcom
divl
xor
mov
roll
xchg
xchg
fisubrs
push
pop
mov
xchg
mov
cmp
inc
loopne
js
jno
xor
andl
jmp
sub
sbbl
pop
js
lods
loop
cmc
stos
mov
movlps
das
push
mov
lea
ja
inc
xor
aad
jae
pop
adc
push
jne
ret
jmp
outsl
xchg
pop
jge
stos
xorl
sarl
shr
xchg
add
and
jno
arpl
stc
fisubl
imul
aas
je
in
inc
divl
lret
es
jp
test
test
loopne
fsubrl
lcall
in
cwtl
sahf
outsb
xchg
xchg
cmpsl
inc
adc
clc
pop
jne
push
dec
xchg
dec
rolb
pop
sub
add
cmc
lcall
imul
mov
cmp
push
pop
imul
xor
adc
xchg
lahf
outsb
push
mov
cmpsl
dec
jmp
daa
repnz
imul
add
inc
data16
add
push
shll
jns
dec
aas
in
cld
jae
aad
repz
dec
push
test
inc
ss
jle
jg
inc
addr16
xchg
popa
jno
mov
out
pop
icebp
fsubs
xchg
mov
jo
nop
inc
stos
cltd
cmpsl
mov
repz
pop
scas
pop
and
sub
jp
mov
mov
jnp
bound
pop
mov
insb
jnp
pop
fwait
lds
xchg
in
fnsave
sti
stc
adc
and
mov
lods
xor
das
push
ficompl
push
push
jno
adc
pop
mov
stc
mov
test
cmpsl
inc
in
inc
push
ljmp
jo
das
gs
xor
inc
rcll
test
cmp
push
call
lods
mov
enter
rclb
call
push
jp
cmp
or
fcmovne
and
ljmp
leave
or
and
leave
js
sbb
sbb
cmpsl
sbb
mov
jmp
sub
ss
mov
fdiv
lret
mov
pop
stos
lock
xchg
insb
iret
sub
fwait
jo
fwait
inc
jge
xchg
xchg
pop
xlat
sahf
mov
push
mov
jl
sbb
fldt
clc
add
xchg
lahf
push
outsb
pop
dec
in
int3
push
mov
insl
mov
jbe
push
sub
cwtl
and
xor
xchg
imulb
cs
lock
pop
push
cmpsb
add
adc
outsl
aaa
sub
jmp
repnz
test
out
rcrl
vmulpd
fcomps
cmp
mov
xlat
int
xor
pop
lret
mov
in
and
loope
dec
enter
sbb
mov
or
je
xchg
fwait
out
std
cli
jmp
mov
shr
addl
shl
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
xchg
xor
js
loop
shld
bound
xchg
outsb
push
dec
ss
jecxz
mull
mov
das
test
and
adc
lods
leave
fwait
data16
aad
enter
movsb
outsb
test
inc
pop
cmp
mov
hlt
mov
insb
leave
push
insl
shlb
jbe
lcall
adc
fdivs
push
jns
add
test
cmp
es
inc
stos
jbe
repz
ss
jmp
inc
adc
in
push
push
aas
cmp
pop
pop
sti
cmpl
push
sahf
ja
data16
cmp
rclb
pop
std
jmp
inc
jg
cli
push
stos
mov
pop
dec
leave
adc
fists
mov
cmp
mov
push
out
sub
fs
mov
jmp
add
or
mov
aad
call
shlb
or
pushf
int3
sub
aam
xchg
fildll
mov
and
into
clc
leave
jno
jb
mov
jle
cmp
bound
jo
idivl
and
testl
arpl
xor
insb
jno
xchg
push
jb
inc
fwait
jge
jp
ret
adc
or
sarb
xchg
dec
xlat
cwtl
jnp
pop
idivb
jae
and
jge
ret
daa
adc
rcl
cltd
or
cmp
push
insl
sub
adc
testb
sbb
lahf
pop
jecxz
aaa
std
sbb
push
out
stos
pushf
lahf
ljmp
test
pop
test
xchg
call
jae
jae
sahf
xchg
mov
push
mov
ds
push
push
jmp
jnp
jne
outsl
push
test
dec
sti
and
xor
leave
xor
add
andb
push
je
js
xchg
fldl
rcrb
cmpsb
mov
fisubs
adcb
leave
cmp
or
movsb
push
aaa
lcall
flds
lret
push
lea
enter
iret
sahf
leave
rcll
addr16
lahf
out
int
hlt
lock
out
sbb
leave
insl
lock
lahf
push
in
push
and
pusha
or
sub
jne
adc
pop
imul
mov
sub
pop
sbb
sti
mov
inc
clc
sub
fsubrs
iret
outsl
ss
mov
dec
adc
push
test
jl
and
test
icebp
mov
std
lahf
or
shrl
loop
std
and
out
dec
or
inc
clc
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
outsl
test
adc
popf
jp
pop
leave
mov
lods
mov
push
push
bound
rcll
adc
and
nop
jle
es
cmp
add
test
sub
pop
mov
movsb
rolb
movsl
dec
adc
jbe
lea
fistpl
fwait
and
push
jmp
mov
popf
push
push
pop
add
mov
push
push
stos
inc
and
mov
mov
aam
adc
push
cmp
stos
or
jne
aad
or
push
out
xor
xchg
insb
jg
push
push
pop
inc
cli
pop
repnz
subl
fs
in
imul
adc
fst
cld
aaa
ds
xchg
addr16
mov
test
test
pop
pusha
ds
dec
mov
fdiv
gs
pop
aad
movl
fiadds
fbld
mov
flds
push
adc
mov
mov
jge
lahf
aas
nop
sub
rcll
aam
cld
mov
cmp
sbb
xor
insb
mov
jg
xchg
xchg
inc
or
jbe
mov
add
movsb
and
leave
xchg
mov
fcompl
divl
mov
cs
sbbl
and
call
loopne
test
pop
push
jle
mov
adc
test
mov
push
clc
xlat
imul
mov
mov
imul
addr16
cmp
jge
push
mov
ret
mov
testb
xchg
in
sti
enter
jbe
xchg
xorb
mov
decl
mov
fldl
stos
lods
fucom
add
cs
fnsave
fcmovu
pop
adc
ret
leave
fcoms
jbe
ret
sbb
fistpll
ret
sub
xor
lods
ljmp
push
pop
sar
jg
xchg
or
xor
out
fwait
daa
out
ljmp
mov
inc
out
adc
and
sub
push
rcrl
dec
or
jne
mov
or
xlat
add
or
loop
mov
shll
cmp
push
cmc
scas
leave
mov
dec
push
sti
mov
and
ljmp
push
aam
xor
fidivl
adc
out
aas
jmp
dec
mov
int3
xor
in
icebp
in
movsb
pop
sti
pop
pop
mov
movsb
dec
testl
jmp
inc
es
and
mov
ror
mov
out
aam
pop
lds
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
aaa
shll
and
adc
xchg
movlps
enter
cs
test
sub
lods
rcll
push
mov
cs
xor
movsb
js
movsb
push
int
jmp
ret
jg
popa
mov
adc
push
repnz
cwtl
pusha
ja
sbb
dec
orb
xor
adc
mov
cwtl
push
bound
hlt
shrb
pop
aad
call
cmp
adc
in
sbb
int
pop
repz
lret
cmp
in
enter
fmul
add
push
mov
inc
stos
mov
adc
cmpsl
mov
pop
test
pop
rol
xlat
in
xor
or
push
es
sub
into
jb
adc
mov
xchg
movsl
jne
std
out
sahf
mov
add
mov
fwait
mov
add
lcall
pop
insl
lret
faddl
pushf
scas
mov
ret
lock
xor
fsub
pusha
ret
dec
adcl
cli
sub
push
xchg
sbb
mov
lods
xchg
popa
add
cltd
movsl
cmp
push
addr16
jmp
gs
cmp
sysret
pop
popa
clc
icebp
lods
shrb
push
push
mov
or
adc
cmp
mov
jl
lods
cmp
xor
push
inc
in
shll
or
je
or
or
enter
mov
mov
les
cmpsl
cmp
lock
in
adc
mov
sbb
addr16
xor
add
pushf
lock
xor
test
push
clc
test
and
jg
xchg
cmpb
addr16
dec
scas
mov
mov
or
shll
mov
ja
pushf
mov
movsl
pushf
pusha
call
out
jo
xor
popl
pusha
xchg
les
lods
test
xchg
xchg
or
test
push
ret
cmp
pop
adc
xchg
ficoml
xchg
and
adc
jno
dec
out
fisubrs
shr
or
cmpsl
gs
fwait
and
scas
sbb
loopne
mov
fwait
mov
mov
mov
int
test
lret
lods
adc
imul
loop
xor
sbb
mov
rol
ds
loopne
inc
mov
fwait
pop
out
jnp
cmc
orl
dec
and
mov
xchg
mov
sti
jns
arpl
xor
mov
cli
inc
sub
mov
pushl
ss
push
dec
jmp
gs
fisttpl
repz
jbe
loope
cmc
shlb
adc
pop
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
jmp
daa
mov
ds
hlt
insb
mov
imul
fistps
dec
push
and
call
into
xor
out
adc
in
cli
mov
and
adc
or
hlt
mov
pop
ficompl
and
imul
aad
loope
xchg
mov
xor
adc
or
subl
cwtl
insl
clc
adc
mov
mov
jnp
xor
dec
pop
dec
mov
cmp
fsubs
rcll
xchg
movsl
pop
or
popf
ret
jmp
mov
sub
push
inc
dec
hlt
sti
push
fwait
test
mov
sbb
inc
jp
stos
stos
push
mov
adc
cmc
push
pop
add
add
test
sub
outsb
arpl
add
dec
pop
mov
into
adc
out
sar
pop
or
ds
outsb
dec
mov
pop
pusha
popa
add
ret
push
ds
andl
scas
aad
aad
xchg
dec
arpl
data16
cmp
es
sarb
leave
stc
pusha
sub
fscale
adc
or
push
pop
xor
push
stos
inc
add
loope
inc
mov
pop
jno
push
push
gs
add
movsl
adc
sbb
loopne
sbb
jno
inc
scas
dec
in
insb
jns
pop
add
and
xchg
add
mov
push
sbb
loope
lcall
adc
or
jno
xchg
je
loop
fisubrs
sub
cmp
sarl
mov
int3
mov
ss
push
and
insl
pop
fidivl
mov
outsl
mov
xchg
push
mov
sbb
loope
mov
callw
cld
push
pop
mov
xchg
cmp
cmp
xchg
cmp
push
pop
sbb
sbb
xchg
mov
insl
ds
or
cmp
cmp
add
subl
jb
mov
xor
mov
push
ja
or
mov
add
jge
push
daa
nop
xchg
addr16
adc
fstpt
and
xchg
loop
jge
cmp
lods
push
leave
xlat
out
dec
mov
dec
xchg
add
pop
repz
and
sub
adc
xlat
xchg
pop
push
mov
cli
lret
sub
pop
jp
mov
mov
push
das
inc
and
dec
mov
sub
mov
xor
loope
call
jmp
imul
cltd
sbb
imul
xor
xchg
movlps
cwtl
sbb
sbb
jge
arpl
pop
rolb
in
jae
cmpsl
leave
int
iret
xor
inc
pushl
aas
sub
cltd
push
jnp
mov
push
dec
out
sbb
mov
xchg
mov
jle
bound
jae
ds
inc
adc
cmp
push
scas
pop
int
cmp
xor
mov
ret
nop
cld
pop
mov
adcl
aaa
pop
inc
jno
mov
loopne
dec
cmp
dec
shrl
mov
cli
mov
adc
xchg
jbe
orb
adc
cmp
ds
jmp
and
jns
cmp
adc
test
int
insl
ret
sbb
pusha
clc
orl
mov
mov
cmp
or
xchg
lcall
push
sti
xchg
out
cli
in
mov
mov
nop
leave
push
pop
dec
in
sbb
add
loop
repz
mov
cld
fs
scas
les
jbe
rorb
lcall
std
int3
in
sti
andl
int3
dec
and
pusha
push
jns
sti
xor
sub
fldcw
adc
enter
outsl
pop
and
push
push
stos
sub
decb
mov
mov
dec
inc
in
lcall
add
push
std
xchg
and
out
inc
icebp
cmovb
add
call
idivl
xchg
mov
mov
ror
je
mov
xor
sub
pop
mov
aaa
sub
xchg
mov
cmp
pushf
mov
xchg
inc
inc
cmpsb
sub
jg
or
das
out
es
popa
nop
pop
xlat
push
mov
add
sahf
xchg
outsb
sbbb
mov
or
xchg
mov
lock
into
pop
jbe
xchg
jno
sbb
push
lea
lds
sub
mov
mov
xchg
dec
jns
xlat
lods
pop
add
popf
int3
enter
hlt
flds
sarl
inc
or
daa
mov
fwait
popf
hlt
pop
lcall
movsl
dec
test
out
nop
test
mov
mov
movsb
push
insb
in
sbb
iret
pop
jl
shrb
xchg
popf
test
mov
stos
pop
aaa
out
mov
mov
int
fldcw
sbb
jmp
sbb
test
sbb
push
or
add
jmp
lcall
or
fcmovbe
stc
jge
inc
leave
jae
mov
xchg
dec
lods
mov
rcrb
push
xchg
mov
inc
lds
mov
in
xchg
sub
nop
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
mov
pop
pop
mov
lods
nop
inc
inc
stos
cwtl
mov
adc
mov
sbb
insl
or
xchg
dec
repz
int
adc
dec
jnp
jne
push
rorl
bound
insb
mov
mul
xchg
or
mov
hlt
dec
push
push
cmp
in
push
fs
stos
adc
cltd
sbb
std
inc
pop
xchg
xor
push
jns
dec
xchg
pop
or
out
push
cmpl
and
fldcw
into
insl
cmp
dec
cmp
sbbw
imul
mov
pusha
gs
inc
iret
fldcw
inc
dec
shr
pop
sti
inc
or
xchg
fcmovne
adc
sub
call
test
pop
enter
imul
add
outsl
xchg
lahf
shll
adc
xor
enter
inc
mov
push
jg
in
insl
push
dec
jmp
rclb
adc
and
or
xchg
idivl
xchg
adc
jg
cmp
cmp
hlt
pop
xor
sub
gs
mov
mov
or
je
aaa
adc
test
aam
dec
add
sbb
call
sbb
inc
mov
mov
stos
sub
adc
lock
cltd
frstor
aad
mov
jb
les
push
cmp
jg
xor
sbb
lcall
jmp
jmp
dec
mov
pop
dec
sbb
fisubs
sbb
lock
mov
pop
shll
xchg
jp
cmp
adc
popa
fldt
vorps
cmc
and
push
cs
fdivr
lds
xor
jg
les
daa
jbe
jbe
mov
mov
outsl
shll
iret
clc
out
stc
add
mov
movsl
and
scas
scas
mov
sahf
ja
sbb
mov
mov
cld
adc
xor
xlat
aas
in
imul
sbb
into
cmp
pop
in
cmpsb
cmp
fisttps
jo
inc
mov
enter
das
xchg
ds
je
push
das
push
bound
inc
xorl
mov
mov
inc
ja
stos
std
orb
loope
movsl
ret
cs
push
and
stc
scas
insl
inc
sub
shr
out
aam
adc
mov
aas
inc
nop
divb
mov
pop
roll
adc
xor
imul
push
sub
sub
insl
jnp
jecxz
xchg
inc
sar
data16
jle
pop
pop
adc
out
mov
jae
fs
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
js
scas
adc
xchg
movlps
cli
js
loope
jle
mov
mov
mov
mov
std
mov
mov
fsub
mov
push
lods
fs
mov
mov
cmc
sbb
push
mov
adc
dec
mov
gs
or
ja
push
push
pop
cltd
push
add
aas
out
dec
pop
js
pop
cmc
bound
jecxz
idivb
shl
mov
or
scas
int
push
jmp
xchg
sahf
decb
push
xchg
dec
sbb
out
sbb
repz
aam
or
inc
hlt
pop
scas
jbe
cmpsl
repnz
test
addr16
lods
stos
adcb
jg
nop
sbb
dec
ja
popa
push
xchg
pop
movsl
jle
and
mov
xor
ret
or
outsb
mov
cmpb
mov
imul
loop
scas
arpl
shr
pop
in
inc
mov
fistps
out
arpl
pop
or
scas
cmp
mov
ljmp
xor
lods
jp
pop
and
repz
push
cs
test
addr16
insb
and
rcrl
and
mov
cmp
push
scas
mov
cmp
mul
xor
jo
andb
testb
ds
push
mov
lcall
inc
aam
repnz
cmp
insl
les
dec
pusha
jmp
jecxz
out
fstpt
jle
mov
icebp
xchg
dec
push
std
xor
incb
xchg
and
pop
das
scas
fistpll
fwait
sub
lods
sahf
shrl
shl
mov
jo
movsl
mov
xchg
xor
inc
push
or
icebp
std
and
ljmp
popf
pop
jmp
cld
inc
aam
mov
add
mov
add
js
lds
xchg
movsl
nop
cmp
pusha
lret
xor
adc
idivb
add
stos
pop
aam
push
fwait
adc
ror
add
aas
mov
jecxz
cmovle
bound
arpl
pop
fcompl
divb
std
popf
leave
add
pop
cmpsb
test
xchg
insl
push
jno
mov
or
xchg
xor
jno
subb
movsb
push
mov
rorl
lret
mov
mov
mov
or
jmp
push
clc
jb
and
fmuls
pushf
outsl
out
aaa
out
sub
add
mov
dec
jno
sub
adc
je
dec
inc
mov
mov
rclb
rcrb
fistl
pop
incl
add
decl
cmp
rorl
stc
cld
decl
test
cld
decl
or
lods
enter
add
or
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
fdiv
je
xchg
lods
adc
xchg
movlps
inc
pop
cmpsl
loopne
rcl
enter
xchg
mov
mov
mov
mov
dec
aam
mov
test
push
cmc
nop
mov
dec
repnz
inc
inc
ja
mul
in
cmp
imull
hlt
ret
orb
dec
lret
out
fwait
lods
and
xor
ret
pusha
fxch
pop
pop
mov
mov
mov
sbb
dec
xorl
scas
lods
mov
lret
loope
jmp
mov
test
dec
rcll
dec
pushf
jl
pushf
icebp
inc
test
inc
xor
jmp
repz
lret
pop
call
push
cmp
adc
add
or
push
clc
pop
pop
sbb
pop
lcall
mov
cs
push
addr16
adc
fildl
aam
mov
test
pop
daa
pop
or
in
xchg
outsb
push
outsb
je
test
fadd
subb
sbbl
loopne
popf
aas
adc
leave
mov
fwait
in
mov
pop
xchg
push
mov
sti
mov
or
cld
pop
insl
and
movsl
sbbl
push
clc
lret
lods
jb
cld
jbe
xor
loop
cwtl
jmp
iret
cmp
sub
jne
jl
push
in
mov
pop
xorb
jp
add
roll
mov
scas
mov
ljmp
popa
rclb
hlt
sti
cmp
iret
rclb
mov
es
loop
mov
bound
adc
push
fdivl
pop
mov
fildll
scas
add
push
xchg
add
mov
cwtl
mov
sti
push
icebp
test
in
test
jecxz
and
xchg
cmpsb
pop
mov
imul
pop
cli
loope
es
scas
test
cmp
pop
inc
ss
xchg
mov
adc
pop
inc
stos
sahf
jge
lock
shl
test
xchg
jbe
imul
insb
inc
cmp
xchg
push
lahf
adc
outsl
dec
jecxz
clc
or
adc
adc
and
icebp
stos
into
dec
dec
sti
movsl
mov
inc
ror
cmp
je
inc
gs
psubd
testb
lods
mov
clc
lods
jnp
nop
ret
mov
sbb
sbb
add
jle
and
lret
aas
cmc
sahf
push
mov
pop
cld
sub
dec
xor
mov
hlt
imul
sub
xchg
lds
test
cmp
test
gs
or
pop
leave
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
in
stos
push
mov
adc
fsubs
movsb
sbb
xchg
popa
xchg
push
xor
movsl
andl
lahf
jns
mov
roll
test
jbe
lock
push
cmp
pop
push
mov
hlt
imul
push
push
lcall
out
inc
insb
sub
jg
jb
push
jmp
inc
jl
mov
or
dec
push
push
leave
insl
xorb
adc
shll
mov
ss
xlat
inc
add
cld
ret
ret
aad
loope
aam
fstpl
sbb
inc
iret
subl
jbe
cwtl
jecxz
adc
mov
xchg
dec
push
andl
or
mov
scas
mov
mov
jne
adcl
jmp
adc
xchg
or
mov
add
icebp
dec
lds
adc
jb
out
and
adc
sub
lcall
adc
or
pop
add
iret
test
sub
cmp
push
inc
jl
es
cmp
enter
add
sub
arpl
sahf
and
lahf
loopne
insl
push
mov
leave
pop
mov
mov
out
or
inc
xor
test
mov
fidivrs
adc
cmp
mov
lahf
inc
outsl
or
insb
jmp
add
mov
mov
fs
gs
pop
xchg
out
adc
jmp
js
fisubrl
mov
xchg
pop
js
or
and
sub
imul
mov
and
inc
sub
push
and
es
mov
clc
repz
xchg
mov
lock
in
popf
push
jle
inc
lea
jb
xchg
mov
pop
lds
jle
out
rcr
cmp
stc
lahf
lock
and
jns
popa
mov
popf
fdivp
sub
dec
add
sub
add
aas
jnp
adc
std
loop
movb
xchg
shll
lahf
std
ljmp
add
add
inc
in
lock
add
inc
lock
aaa
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
les
mov
adc
mov
pushf
pop
sbb
test
mov
xchg
sbb
fistpl
mov
mov
andl
test
add
mov
mov
and
mov
jp
adc
mov
add
or
mov
or
pop
push
xchg
lock
inc
out
jmp
dec
fdiv
lahf
das
jno
cmp
dec
test
imulb
xchg
test
in
stc
xor
jl
jp
xor
inc
sbb
int3
stc
cli
pop
shr
cltd
xor
push
mov
xchg
cli
mov
mov
push
xlat
push
and
sub
out
fs
cmp
add
inc
jmp
mov
daa
cli
and
shr
jge
outsb
mov
fdivr
scas
push
mov
dec
rcrb
mov
cmc
or
sub
movsb
jb
lahf
sub
notl
add
lahf
leave
ffreep
add
mov
popa
push
cmp
pop
sub
push
add
outsb
movsb
rclb
test
adc
mov
dec
pop
push
push
sbb
sarl
in
pop
xchg
add
call
stc
inc
pop
test
fisttpl
or
adc
pop
sub
enter
push
jl
test
add
ljmp
sbb
sbb
inc
sbb
adc
jns
inc
pop
out
roll
add
daa
cmp
or
sub
enter
sbb
rcrl
sub
push
jl
push
cmpsl
addr16
imul
into
lret
int
in
andb
xor
insl
mov
inc
lock
mov
das
imul
sub
out
mov
adc
lret
cld
jp
sub
sbb
iret
cld
push
fadds
push
mov
sbb
sub
push
pop
stos
and
xchg
rorl
dec
mov
mov
mov
test
jg
ror
sahf
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
adc
fwait
adc
mov
pop
dec
xor
or
rcr
rclb
jmp
rcll
add
insl
and
or
je
cmc
decl
loopne
lds
mov
sbb
repz
gs
stos
sub
xchg
sub
push
addr16
jne
stos
leave
dec
addr16
test
dec
and
mov
nop
popa
imull
push
xchg
sbb
pop
adc
cmpb
stc
mov
adc
push
xor
mov
out
daa
icebp
insb
loope
fidivs
push
cmp
out
stos
addl
fisttps
hlt
stos
in
rclb
mov
mov
sub
inc
jge
stc
sbb
test
xor
and
xchg
pop
and
sub
mov
shlb
pusha
pop
push
and
mov
mov
aaa
and
push
sub
jne
leave
xor
sub
xchg
mov
lahf
sbb
xchg
inc
push
mov
push
mov
ror
repz
addr16
cmpsl
lds
push
daa
repnz
dec
pop
ds
shr
shll
push
pop
je
xchg
mov
cmpsb
loope
jne
hlt
dec
lods
add
sub
cli
mov
inc
lds
xchg
pushf
ljmp
and
ds
ja
jecxz
sbb
repnz
in
mov
cmp
ja
es
mov
lods
in
cmc
adcb
lea
and
and
dec
jmp
jns
xor
icebp
add
jge
xor
leave
xchg
push
adc
imul
andl
mov
mov
loop
cmpsb
push
inc
mov
or
jno
stc
dec
test
cmp
dec
or
cmc
je
repnz
mov
cmp
shrl
int3
in
cwtl
jns
jno
mov
idivl
lret
enter
enter
rcll
insb
aad
push
fsubrp
pop
in
dec
mov
lea
popf
sbb
out
pop
mov
sti
call
or
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
mov
adc
dec
xorb
xchg
sub
test
adc
xlat
test
mov
lcall
sub
dec
mov
push
push
ja
cwtl
stos
ljmp
cli
push
jno
or
and
sbb
cld
in
push
push
xchg
or
adc
sar
adc
ret
into
mov
daa
push
xchg
jnp
lock
scas
cld
inc
insl
idiv
sbb
inc
rclb
mov
and
frstor
inc
push
cli
pop
xchg
jnp
xchg
fs
mov
adc
in
xchg
subb
lahf
push
push
lahf
lods
nop
xor
ds
sbbl
ret
push
ja
stc
sbb
call
leave
sbb
test
adc
hlt
sbb
popa
push
inc
push
pop
sahf
lock
mov
lea
jle,pt
daa
fidivs
das
lods
icebp
mov
mov
in
push
and
repz
or
lret
mov
mov
leave
xchg
ds
out
pop
mov
clc
lock
jne
inc
sub
scas
jge
es
push
lahf
or
ja
mov
out
gs
pop
xchg
gs
xchg
divb
scas
mov
inc
push
fildll
fadds
xor
dec
test
sub
scas
push
xor
scas
sti
sub
addb
in
pop
jo
lea
lcall
or
xor
pushaw
adc
pop
lods
out
fnstenv
data16
xor
push
adc
pop
push
pop
hlt
xor
cmc
mov
mov
add
mov
lahf
dec
mov
mov
pop
lds
pop
cmpsl
mov
lea
or
addr16
and
and
dec
out
mov
adc
adc
sbb
stos
out
ffree
stos
push
cltd
lods
mov
scas
jg
add
filds
xchg
shll
sar
pop
inc
xchg
test
sub
xchg
sbb
mov
sub
pusha
movsb
push
inc
pop
fmull
fdivl
shl
repz
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
sbb
mov
pop
adc
adc
jge
loop
test
sti
cmpsl
dec
cwtl
jecxz
pushf
lods
jns
xor
and
movsl
xchg
inc
notl
xchg
inc
xchg
inc
cld
inc
lcall
jae
leave
xchg
mov
push
add
lods
adc
mov
test
aad
xor
lcall
cli
lret
jecxz
pop
dec
call
fsubs
push
mov
push
push
sbb
and
dec
ja
xor
adc
mov
and
in
cwtl
sbbl
push
sbb
jbe
xchg
bound
je
add
bound
xchg
les
shrd
mov
cmp
inc
cmc
out
jmp
aam
inc
pop
mov
adc
iret
dec
jecxz
mov
cmp
test
inc
sub
out
inc
pop
mov
xchg
sbb
mov
fildll
push
inc
leave
jns
pop
mov
push
lret
jg
sarl
shlb
xchg
fs
and
xchg
cmc
sub
sub
mov
loope
and
inc
inc
lods
pop
xor
addb
js
xchg
lret
lret
xchg
push
movsl
and
dec
mov
xchg
cmpsl
adc
es
sbb
stos
xlat
pop
pop
add
and
in
mov
inc
xchg
adc
ficoml
inc
mov
orb
mov
leave
scas
jmp
outsb
loope
xchg
arpl
cmc
xchg
jmp
fwait
std
push
aad
xor
sar
sbb
mov
or
les
inc
push
mull
pushf
pop
jo
test
mov
aam
mov
lret
notb
or
xor
xor
fidivrl
adc
out
pop
push
ljmp
xchg
xchg
jg
push
push
das
aam
cmp
loop
cmp
lods
fistpll
mov
cltd
dec
sbb
fbstp
pop
cmpl
jo
daa
pop
jp
daa
sbb
cmp
pop
push
add
cmp
sub
pop
jmp
jne
mov
jge
jg
test
lods
xor
mov
stos
fsubr
outsl
pop
cmp
test
or
outsb
sub
cmp
imul
mov
or
sbb
pop
clc
xchg
test
mov
sar
bound
ja
mov
in
pop
pop
jge
pop
lock
fisubl
mov
push
add
push
or
sbb
aad
gs
stos
sub
pushf
outsl
leave
and
sbb
jg
jge
and
stc
stos
movsl
sub
aaa
mov
jo
adc
into
imul
lods
xor
std
mov
mov
bnd
dec
mov
test
faddl
sub
nop
jg
push
dec
cmpsb
mov
mov
push
jne
fistps
dec
inc
scas
jl
stos
dec
enter
shrb
fidivrl
inc
jecxz
iret
enter
inc
and
mov
fs
out
push
lcall
sbb
and
jecxz
jne
mov
fisttpl
and
mov
inc
and
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
dec
pusha
js
mov
adc
adc
adc
filds
fdivrp
aam
mov
pop
cltd
pop
testb
and
mov
mov
xchg
insl
jbe
fstpl
pop
stc
xor
pop
push
inc
out
xchg
xchg
sub
push
pushf
shrb
das
lcall
mov
lock
insl
mov
adc
or
jg
sbb
movsb
mov
arpl
icebp
xchg
in
xchg
or
sub
inc
out
xchg
or
jle
ja
into
movb
push
fsubrl
push
push
rorb
sbb
loope
mov
sti
sbb
rcll
inc
xchg
stos
or
add
ljmp
jg
pop
dec
insl
int3
sub
xchg
aaa
lds
lret
and
loope
outsl
xchg
mov
and
mov
adc
add
bound
add
sub
rorl
cmp
sbb
cmp
les
cmp
mov
pop
shl
in
loope
cld
jnp
adc
mov
inc
addr16
push
cmp
sbb
dec
adc
das
and
push
dec
fldl
outsl
lods
and
inc
adc
dec
sbb
js
xchg
inc
mov
jb
pusha
mov
mov
icebp
pushf
lds
mov
sub
cmp
out
or
add
lods
inc
jnp
mov
pop
aad
scas
xchg
pusha
inc
call
xor
jmp
mov
rcl
cmc
imul
and
call
add
jle
std
mov
in
cmpsl
in
fnsave
push
xchg
das
rcrl
inc
push
ds
cld
faddl
cmpsl
ljmp
lea
add
scas
sub
call
cli
mov
sbb
xchg
mov
mov
je
dec
arpl
pop
xor
xchg
mov
adc
pop
mov
jno
or
xor
ficompl
test
sbb
mov
dec
call
xor
mov
cmp
rolb
inc
mov
mov
and
mov
es
xor
dec
jg
xchg
adc
dec
and
jno
pop
adc
into
jae
jno
mov
out
ret
cmc
int
mov
or
shlb
movsb
je
jmp
dec
push
dec
pushf
iret
inc
rclb
decb
mov
pushf
pop
mov
pop
rcrl
mov
in
cmp
or
xlat
mov
and
out
add
arpl
or
mov
test
repnz
inc
popf
cmp
ljmp
mov
enter
inc
fldpi
lret
shlb
xlat
mov
dec
dec
sub
testl
gs
lea
testl
lock
mov
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
push
jl
sub
adc
adc
scas
cmp
or
pop
fcoms
push
sti
pop
sub
daa
adc
int3
popf
or
les
sub
stc
aas
pop
mov
dec
add
cs
xchg
sub
sti
repnz
cmc
aam
xor
inc
stos
and
test
fcmovnb
mov
mov
cs
movsl
sub
fmull
adc
cmpsl
push
sub
mov
xchg
adc
mov
dec
ss
popa
xlat
pushf
jmp
cmp
int
mov
in
and
scas
fists
mov
jle
xor
or
int
loope
mov
imul
and
cli
movsb
loop
sub
cli
jecxz
inc
jne
xchg
mov
fisubrs
dec
dec
sti
rolb
ficompl
jnp
cld
and
mov
int
mov
mov
enter
sbb
pushf
iret
or
out
push
js
incb
sub
jb
call
pusha
outsl
aaa
testl
getsec
pop
es
mov
jl
mov
mov
jle
je
xchg
sub
lret
sahf
mov
cs
mov
xchg
sub
cltd
cmc
cmpsl
pop
lcall
lcall
mov
add
pop
fsubrp
or
or
mov
fs
cli
ds
and
lahf
xchg
sbb
cmp
orps
jmp
std
ret
xor
pop
data16
pop
pop
mov
mov
add
cmp
fstpl
lahf
sbb
xchg
inc
addb
sbb
cmc
pop
loop
pop
jge
inc
pushf
add
or
shll
shrl
ljmp
sbb
ds
inc
lea
das
cmp
inc
mov
sbb
or
push
jle
mov
enter
sbb
pop
xchg
nop
sti
xchg
mov
fidivl
in
lock
mov
shlb
out
and
test
rclb
aaa
and
mov
sarb
pushf
sbb
xchg
into
push
mov
icebp
lret
push
cmp
jo
fisubs
or
aad
hlt
and
xchg
xor
add
cld
xor
dec
xor
in
pop
mov
mov
arpl
dec
cmp
xor
inc
out
add
xor
add
jnp
aas
mov
ret
mov
lods
cmp
aaa
int3
ret
imul
xor
dec
sub
mov
xchg
jg
mov
sub
ss
mov
push
in
repnz
in
inc
ds
jb
sbb
pop
test
icebp
adc
and
and
pushf
xchg
mov
cmp
mov
gs
jmp
fsubl
push
push
dec
xchg
leave
dec
dec
fwait
push
pop
fs
adc
lds
stos
cmp
adc
add
or
iret
xchg
shr
mov
lret
xor
push
in
mov
hlt
mov
fisttpl
xlat
mov
subl
inc
dec
sbb
ss
outsl
add
jge
push
and
or
inc
cmp
ret
cmc
aas
pop
xorb
call
mov
cmpl
mov
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
push
adcl
adc
sti
sbb
setno
cli
mov
jl
jg
popf
sub
outsl
cmp
pop
fsts
push
mov
mov
call
nop
xor
frstor
dec
inc
add
push
xor
shl
aam
sbb
js
xchg
sub
inc
xchg
mov
inc
xchg
outsl
popa
cmp
inc
pop
pop
fs
push
daa
xor
decb
jl
mov
dec
xor
or
in
mov
mov
es
jno
or
hlt
mov
mov
imul
int3
mov
or
xchg
jge
stos
mov
pop
lods
out
jle
test
mov
dec
cmp
int3
fisttpll
cltd
out
std
mov
mov
jg
scas
ja
nop
xchg
cmp
xchg
jo
outsl
lock
pop
cmc
daa
test
xchg
mov
push
inc
mov
sbb
loopne
adc
sub
orl
sub
or
test
stc
lock
loop
add
imul
sub
inc
addr16
adc
call
inc
inc
lods
pop
fcmovnbe
fcomi
mov
outsl
sahf
push
pop
pop
adc
cwtl
lahf
mov
push
xor
push
lds
cli
dec
sti
xchg
xor
pop
scas
adc
pop
pop
int3
adc
pushf
cmp
dec
imul
and
dec
push
aam
js
ret
and
addr16
adcl
xor
adc
push
sahf
sub
mov
inc
lret
js
cwtl
mov
enter
stos
hlt
roll
inc
sub
xor
push
insb
jl
pop
adc
jmp
mov
int3
outsl
mov
dec
movsb
and
and
in
shlb
in
and
mov
in
push
icebp
shr
jg
cmpsl
sub
mov
loop
insl
jb
add
pop
lock
lcall
sti
pop
mov
pop
out
inc
push
sbb
or
iret
sbb
add
cmc
pushl
bound
mov
std
outsl
mov
testb
lret
outsb
add
ja
jne
jno
xchg
cmc
fwait
je
mov
ficompl
push
aam
inc
xchg
shlb
scas
fiaddl
stos
into
dec
enter
movsb
mov
xlat
sub
mov
loopne
adc
mov
mov
push
clc
mov
mov
cli
test
roll
enter
sub
ret
into
xor
test
mov
mov
clc
das
add
mov
enter
inc
inc
js
rorl
add
adc
xor
sbb
and
adc
inc
in
lds
pusha
lods
mov
cmpsb
ds
mov
mov
mov
add
dec
out
inc
cmp
mov
dec
xchg
add
aam
scas
ja
mov
ret
shll
dec
sarl
hlt
hlt
movsb
push
stc
sbb
sbb
lahf
and
cmp
mov
sbb
mov
sub
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
lcall
adc
adc
mov
cmpl
ficoms
lret
cmpsb
into
push
mov
outsb
shll
dec
mov
inc
fcmovb
sarb
cmp
andb
es
or
inc
imul
inc
sub
mov
jo
mov
in
adc
mov
lock
movsb
and
jg
js
or
jle
movsl
shl
fnstenv
inc
adc
std
push
movsb
not
push
aad
aam
jle
negl
gs
jecxz
add
shll
mov
lahf
out
test
stos
jle
push
in
insb
jae
mov
in
mov
jp
add
inc
jmp
xor
cmpsb
scas
fidivl
faddl
jmp
mov
sbb
dec
test
aad
sbb
imulb
fidivrs
dec
aam
mov
or
fs
shl
shl
shll
dec
sahf
mov
xor
insl
and
std
lret
dec
scas
fcoms
mov
sub
jae
jge
sub
loop
mov
pop
imul
fmul
je
sbb
xchg
inc
outsl
push
push
and
push
lods
push
movsl
xchg
lods
stos
or
movsb
stc
les
mov
mov
and
popf
ljmp
lret
ss
cwtl
enter
push
push
xchg
mov
add
push
fstpl
push
popa
popf
sbb
shrl
xchg
sbbl
aas
je
nop
or
jecxz
jg
in
pushf
popa
sahf
sti
push
adc
and
adc
hlt
ljmp
movsl
jmp
mov
xchg
jecxz
cmp
into
dec
stc
jnp
xor
lea
xchg
pop
cs
mov
loopne
js
jp
cmp
icebp
loopne
lret
sti
pop
les
int
sbb
or
xchg
mov
lea
mov
mov
cwtl
jb
sub
adc
add
movsl
dec
ds
mov
test
inc
xor
adc
lret
mov
and
dec
jbe
inc
jb,pn
out
xchg
int
test
adc
mov
ror
imul
add
lea
cld
aas
lret
pusha
xor
jmp
or
xor
sub
pop
loop
popa
sub
mov
lahf
or
shll
cmp
adc
fidivl
jge
mov
into
in
push
xor
testl
ret
pop
inc
jg
sbb
imul
cmpb
mov
es
and
cmp
push
outsb
je
or
inc
mov
test
pop
jne
adc
mov
mov
in
mov
repz
push
fsubs
sub
out
mov
les
int3
push
pop
dec
jle
pop
push
addl
sbbl
js
sub
adc
xlat
adc
pusha
push
lock
cmp
jmp
sbb
test
and
add
inc
and
mov
inc
and
js
add
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
addr16
mov
adc
adc
sub
sub
test
mov
push
mov
xor
sti
leave
mov
cld
sahf
lcall
xor
sub
aad
cmp
daa
repz
mov
mov
es
xlat
xor
xchg
mov
sbb
out
xor
jno
xor
adc
adc
lds
and
inc
and
and
mov
int
sarl
and
and
mov
dec
cld
pop
arpl
frstor
jno
inc
xor
jg
xor
insl
ss
cmp
push
das
insl
data16
jle
cmpsl
rcll
jmp
lret
mov
mov
adc
out
cmpsb
mov
jbe
ss
adc
lock
aaa
cmpsb
out
xchg
lock
sub
les
push
aam
outsl
fs
mov
mov
sbb
pusha
nop
ret
pop
fwait
imul
lret
sbb
xor
cwtl
mov
adc
rolb
cmc
lret
movsl
idiv
xchg
sbb
dec
sahf
ss
aas
out
xchg
jo
aad
and
add
cmp
mov
add
insb
mov
inc
ss
or
test
adc
in
fadd
arpl
pop
and
xor
mov
fcoml
sub
lods
fidivs
sub
xchg
mov
xchg
cmp
fdivrl
or
sub
xor
dec
pushf
jae
push
nop
cmpsb
lds
arpl
adc
dec
andl
inc
mov
mov
mov
mull
jmp
xchg
mov
notl
aam
bound
shlb
lret
es
mov
lcall
int
lods
dec
scas
sti
add
sbbl
fst
inc
cmpb
xchg
push
adc
insb
ret
push
repnz
incl
mov
std
test
xor
mov
shll
loop
inc
mov
pusha
push
sti
xor
in
testl
call
pop
icebp
dec
xchg
sub
mov
aad
pop
xchg
stos
dec
packsswb
cmpsb
call
lahf
push
call
pop
jle
mov
mov
sahf
shl
lret
shl
mov
mov
mov
sbb
dec
in
jle
cmp
aaa
insl
aas
jmp
jle
mov
stos
jns
adc
orb
idivb
jnp
xor
ds
xorl
pusha
repz
std
adc
sbb
sbb
push
push
dec
push
test
xchg
lods
xor
mov
cmc
lods
cmc
add
mov
test
push
push
jnp
pusha
or
inc
hlt
xchg
push
rorb
xchg
cmp
insb
sbb
aam
aad
lret
mov
int3
fdiv
jp
dec
outsl
les
clc
ljmp
or
dec
ja
out
xchg
mov
dec
enter
cmp
push
cld
call
mov
imul
sub
sub
push
fwait
jns
dec
shll
cld
popa
aad
out
push
push
sub
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
inc
xor
insl
mov
jle
stos
inc
insb
mov
cmp
das
dec
imul
adc
xchg
cmp
mov
in
icebp
jne
int3
sbb
xchg
mov
sub
lret
ja
and
adcl
sarl
out
cmp
xor
inc
and
cmp
shlb
fdivrs
cmp
mov
mov
mov
mov
mov
mov
cmp
flds
cli
cltd
rcrl
sbb
loopne
jmp
push
cltd
sarb
cmp
xor
mov
mov
cmp
popf
cmp
cmp
dec
xchg
stos
sub
les
add
sahf
sub
mov
test
imul
cs
loop
cmp
rclb
scas
rclb
frstor
cli
and
les
mov
cwtl
pop
pushf
sbb
mov
lahf
loopne
cld
xor
loopne
fwait
add
dec
xor
fcmovnu
add
in
call
sub
adc
jle
push
cmp
cmpsl
xor
jl
mov
daa
or
les
cmp
movsb
testb
xor
add
pop
push
aad
dec
pushf
fildll
mov
hlt
loope
cld
lahf
nop
inc
fmul
lea
adc
sbb
leave
dec
int3
lock
shrb
inc
popf
movsb
sub
or
fildl
js
cmp
inc
outsl
push
jbe
loope
sub
inc
xor
jecxz
mov
mov
add
aaa
rol
sbb
js
adc
decl
ja
cmpsl
jo
lock
jmp
mov
test
imulb
xchg
daa
int3
mov
lods
mov
mov
xchg
lock
add
mov
stc
lahf
pop
iret
sub
xchg
jb
adc
dec
sub
pop
scas
icebp
fwait
stos
daa
sbb
xchg
jge
jle
into
iret
ljmp
push
mov
add
adc
push
xor
mov
mov
push
mov
sbb
add
int3
push
pop
stc
mov
cmp
xlat
idivb
aad
dec
rcrb
jmp
test
das
js
mov
mov
in
aam
repnz
into
shll
icebp
pop
cmp
push
push
scas
pushf
aas
xor
push
divb
push
or
arpl
gs
xor
pop
cmp
lret
pop
mov
xchg
pop
repnz
lret
jecxz
cli
pop
sub
fistpl
or
pop
in
imul
cmp
cwtl
and
pop
adc
into
imul
movsl
push
or
movb
or
mov
cmp
push
or
fimuls
cs
mov
imul
iret
mov
fwait
and
into
add
lret
push
aaa
loope
sbbb
xlat
mov
out
cmc
icebp
mov
push
jbe
orl
ss
mov
shl
test
shrd
out
bound
fdivr
int
jge
push
push
fsub
int3
push
repnz
mov
leave
ret
cmpsl
in
mov
fs
jo
pop
cmp
std
sbb
test
xor
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
repnz
xchg
arpl
adc
adc
push
or
xor
testl
insl
inc
sub
xlat
cmpsb
das
cmp
pusha
fs
add
iret
ja
sbb
xor
push
cmp
push
cmp
scas
mov
loopne
adc
sub
shrl
xchg
std
xor
mov
js
ss
sub
or
das
mov
mov
cmpsl
mov
in
out
mov
in
add
cltd
xor
lock
es
int3
mov
push
mov
jp
adc
out
dec
and
jns
cltd
pop
or
adc
stos
cmc
repz
sbb
xor
cmp
lods
fdivr
xlat
cmc
int3
xchg
mov
cmp
push
mov
jo
inc
testb
or
jo
imul
aam
pop
test
lods
mov
xchg
sub
xor
jge
loope
mov
wrmsr
inc
push
inc
pop
sbb
aaa
pusha
jle
shlb
fcomi
dec
xor
les
xchg
lods
pop
mov
adc
xor
xorb
shl
xchg
push
mov
xchg
cmp
aad
in
adc
pop
or
sub
lret
shlb
jns
jno
ljmp
lret
and
shrl
add
mov
mov
jmp
dec
psraw
mov
push
pop
mov
pushf
sub
push
xchg
mov
bnd
lahf
and
stc
leave
dec
sbb
pop
mov
add
mov
or
xor
std
int3
dec
test
push
mov
jp
xlat
dec
popf
fs
cld
shl
pop
jns
inc
sub
movl
rcrl
push
rol
shlb
push
jp
fmull
inc
jecxz
out
inc
sub
in
jl
xchg
add
push
adc
xchg
daa
sub
fistps
jle
cltd
loope
hlt
jbe
adc
imul
popf
leave
or
pop
mov
addl
adc
add
push
loop
rcl
lods
arpl
js
push
repz
loopne
xor
aad
dec
push
pusha
push
mov
mov
or
xor
xor
out
mov
push
jl
ja
imul
int3
pop
jp
xor
adc
xchg
sbb
push
aad
movb
icebp
add
adcb
dec
pop
loope
mov
fwait
je
jge
adc
sbb
enter
cmp
shl
std
insl
pop
sub
loope
or
je
imul
jns
addr16
mov
iret
sbb
sbbb
inc
add
cmpsb
out
fsubl
div
rcll
mov
xchg
push
jnp
mov
push
sbb
scas
movb
subl
rcll
xchg
cmp
jo
and
push
fistpll
cli
icebp
cwtl
add
fs
fs
adc
inc
and
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
aas
std
xor
pop
adc
adc
mov
adc
fsubl
lods
nop
xchg
out
test
push
lret
lea
das
jge
push
sbb
es
shrb
inc
dec
pop
dec
stc
mov
add
out
pop
stos
or
mov
add
pop
data16
into
dec
jmp
dec
push
repnz
and
ret
mov
imul
add
js
idiv
adc
jp
cli
push
sbb
xchg
jmp
pushf
mov
cmc
fcomip
add
jns
cs
push
pop
outsb
jg
fildl
lods
insl
pop
cwtl
and
cmp
add
movsb
aad
or
fdivl
push
loopne
add
mov
jle
lahf
ja
cmp
jo
lret
leave
fcmovne
mov
jmp
clc
xor
sbb
add
pavgw
mov
jl
sahf
sbb
adc
jae
push
mov
inc
mov
dec
or
bound
inc
pusha
or
push
mov
or
fstpl
sub
test
jge
pop
pop
push
inc
dec
mov
jle
jae
sub
daa
sti
push
pop
cmpsl
mov
pop
mov
rcl
dec
jge
pusha
push
mov
lds
mov
arpl
jmp
push
lods
adc
mov
clc
and
stc
cmp
cwtl
lods
add
cmc
inc
and
cmp
enter
xor
cmp
pop
xchg
push
and
cmpsb
stos
jo
mov
aas
fcmovu
and
mov
push
sub
int3
mov
dec
mov
ret
in
pop
cmp
dec
movsl
outsb
out
mov
das
mov
pop
js
bound
and
push
mov
mov
sbbl
sub
jp
cli
adcl
mov
movntps
insl
mov
xor
push
in
aad
pop
jnp
jno
dec
repz
add
pop
pusha
sbb
add
mov
sub
mov
sub
and
mov
enter
out
cmc
sbb
inc
adc
lret
stos
popa
add
and
and
out
jg
popf
mov
mov
mov
xchg
rorb
mov
fcmovu
ret
ds
pop
sti
lahf
test
xor
cmpsb
jl
or
rcll
lcall
xchg
pop
mov
daa
cmp
sarb
dec
adcl
hlt
inc
xor
rolb
repnz
in
dec
jb
idivb
add
insb
lret
fisubrs
call
ja
push
adc
xor
push
out
push
jl
jge
sub
xchg
mov
cld
aaa
mov
fistpl
ss
insl
aad
dec
aam
sub
or
scas
lcall
cmp
inc
adc
mov
sbbb
sub
mov
jg
pop
push
mov
push
pop
mov
fisubrl
mov
leave
cmpsl
std
xor
ljmp
test
mov
stos
ss
dec
or
mov
inc
lods
mov
push
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
stos
push
pop
lods
es
adc
pop
adc
adc
adc
and
ret
loope
dec
aam
filds
outsb
pop
aaa
jno
arpl
mov
adc
sub
lahf
cmc
cltd
jno
sub
int3
adcl
and
jb
imul
push
std
rcrl
fwait
aas
mov
or
inc
pop
ficoml
xor
popf
add
inc
out
mov
add
sbb
mov
in
sbb
push
xchg
js
mov
test
mov
push
dec
mov
test
addr16
push
pop
test
mov
dec
mov
lea
inc
adc
mov
sub
push
cmp
jl
inc
fistpll
mov
push
repnz
scas
and
xchg
fstl
mov
or
xor
dec
jmp
mov
fsubrs
ss
lret
mov
out
add
les
mov
inc
mov
cmp
xchg
fs
push
fstpl
pop
into
mov
inc
adc
mov
loop
push
sub
jp
sbb
push
xor
sahf
pop
jae
xor
cmc
jb
xor
dec
cli
push
cmp
lods
pop
xchg
lods
es
lret
enter
adc
mov
pop
loope
fwait
pop
mov
fnstenv
add
fimuls
mov
into
and
lods
imul
sbb
jo
test
test
div
push
mov
test
push
mov
or
sysenter
and
mov
xchg
popf
fwait
jmp
imul
add
dec
add
loope
cmp
es
in
out
daa
push
mov
jns
or
or
xchg
push
push
or
push
xor
mov
clc
std
xchg
loope
mov
xor
pushf
jb
xchg
adc
loopne
pop
sbb
mov
pusha
jbe
out
push
mov
sub
mul
adc
ljmp
dec
xor
xchg
popf
fwait
daa
cwtl
lds
scas
aad
xchg
push
dec
test
xchg
js
mov
mov
or
xlat
nop
inc
adc
jge
mov
mov
push
mov
gs
sub
sbb
pop
jp
and
or
fsubr
stos
mov
pop
lock
mov
and
repnz
jp
add
jmp
std
mov
cmp
lret
xor
xchg
fnstcw
sahf
inc
push
ret
inc
outsb
cmp
xor
add
inc
pusha
and
xchg
divb
sbb
add
movsb
add
popf
out
test
jge
popf
mov
ficoml
fsub
push
ss
testl
jp
subb
and
stos
loop
sub
add
sub
gs
sbb
pop
inc
das
les
sub
dec
aam
test
and
in
adc
mov
push
push
mov
rorl
inc
push
fistps
mov
mov
je
mov
and
rcr
jle
or
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
pop
lods
insl
dec
adc
pop
adc
adc
pop
clc
xor
je
adc
dec
and
fistpl
pop
gs
sahf
mov
push
jmp
outsb
fs
sbb
or
subl
sahf
add
mov
jmp
mov
pop
sarl
imul
flds
lret
inc
ret
dec
loope
jo
pop
xorb
bound
jne
shll
scas
mov
dec
fldt
insb
push
cmp
adc
mov
and
cmp
sub
xchg
push
xor
inc
or
rorb
pop
dec
subb
xchg
jo
mov
sti
jge
mov
jle
lret
mov
lods
test
aam
sub
outsl
inc
sub
push
xchg
packuswb
xchg
int
mov
mov
mov
add
arpl
adc
lret
popa
inc
lahf
imul
jmp
outsb
outsb
xchg
int3
inc
or
xchg
jae
and
lods
or
push
stos
rorl
orb
int
mov
in
lcall
pop
xchg
mov
sahf
test
mov
xchg
jns
sbb
repnz
sub
mov
and
popa
std
xor
mov
bound
or
inc
mov
xor
lea
fstl
stos
mov
enter
fwait
and
ret
sbb
inc
adc
pop
into
push
in
loop
xlat
and
mov
popa
and
rclb
mov
mov
std
dec
jnp
mov
mov
inc
push
sub
mov
jns
dec
cmp
add
outsl
mov
cmp
xchg
sbb
pushf
mov
enter
push
outsl
sahf
push
dec
xor
daa
lock
sbb
ret
or
test
sbb
shll
sub
cmpsl
idivb
mov
mov
mov
mov
xchg
mov
insb
mov
jge
fisubs
add
jl
data16
mov
mov
add
mov
aam
test
cmp
dec
je
outsl
insl
pop
bnd
mov
add
or
sbb
adc
mov
or
add
outsl
pop
push
mov
adc
jp
adc
cwtl
jecxz
inc
test
xchg
sbb
out
xchg
xchg
dec
insb
aas
xor
fs
je
test
pop
lret
loopne
pop
ljmp
mov
cmpsl
dec
xchg
push
sub
ljmp
inc
popf
jg
sub
shrl
xor
ret
xlat
jbe
mov
mov
sub
or
fists
inc
stos
enter
in
adc
enter
insl
jmp
inc
lods
cmp
xchg
mov
ret
mov
cmp
mov
mov
sti
in
fnstenv
mov
sahf
je
mov
and
sbb
rcrb
adc
inc
add
out
sti
push
shrl
mov
lods
outsl
xor
push
inc
enter
cmp
aaa
sahf
pop
and
in
out
mov
std
mov
xor
movb
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
sbb
pop
adc
adc
push
call
inc
add
dec
xor
dec
sbb
or
ss
dec
lret
jecxz
xor
call
dec
fdivl
popa
mov
stos
jnp
stos
jle
pop
std
cld
int
test
out
xor
cmpsb
in
push
xchg
pop
pop
fnstcw
leave
mov
xchg
add
in
jnp
fs
adc
shl
pop
pusha
dec
std
cmp
iret
data16
daa
pushf
pushf
add
sub
add
push
sar
pusha
mov
cmp
xlat
gs
cmp
inc
or
ficoms
xor
dec
repnz
ds
in
pop
mov
out
scas
pop
ds
mov
out
arpl
mov
push
mov
cmc
imul
divl
imul
andb
add
adc
stos
inc
int
outsb
test
pop
pop
clc
and
mov
inc
mov
prefetcht1
in
sbb
mov
sub
vaddss
fst
dec
shl
ret
and
cmc
fcoms
pop
pop
cs
aaa
and
and
insb
jo
outsl
pop
dec
mul
inc
mov
test
and
push
pop
rcrl
dec
jno
adc
pop
xchg
sbb
filds
testl
jae
push
dec
jbe
ja
daa
mov
repz
divl
arpl
sub
push
xchg
icebp
dec
in
push
rcl
scas
mov
dec
or
jg
push
mov
xlat
sbb
ds
push
loop
dec
mov
sbb
jmp
adc
dec
dec
cmp
push
insb
pop
fidivl
jne
in
fs
pushf
pop
mov
and
mov
or
push
and
inc
push
or
ja
push
lret
lea
aas
pop
movsb
cmp
add
sbb
pop
pop
xor
adc
mov
in
push
pop
inc
sub
pop
in
pop
movsb
imul
jg
ja
test
inc
popa
jp
out
std
dec
jge
imull
pop
testb
aas
call
xor
mov
push
pop
xchg
sub
mov
push
add
pop
xchg
insl
or
ffree
jne
scas
out
leave
pushf
add
xor
pop
sahf
push
jl
lcall
arpl
pop
mov
imul
xchg
pop
mov
mov
xchg
out
fbld
lret
cmpsl
in
decl
or
jecxz
mov
cmp
or
cmp
outsb
jne
jecxz
cld
jg
jnp
push
in
xchg
sar
push
fsubp
mov
or
dec
mov
xor
jno
or
stos
lahf
or
dec
xchg
push
int
fdivs
sbb
sbb
cs
or
push
andl
push
add
and
mov
sbb
xor
dec
dec
hlt
xchg
lret
push
lods
scas
jg
cmp
inc
cmp
sub
ficompl
div
ja
movsl
sti
xor
inc
decb
lret
jo
repnz
rorb
leave
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
jl
je
incb
adc
adc
mov
sahf
pop
jbe
sub
cld
inc
mov
in
gs
fcmovbe
adc
push
test
je
rcll
mov
and
rcrb
cmp
xchg
pushf
dec
or
data16
movl
packsswb
test
subl
pop
pop
test
cmp
lea
arpl
sbb
cwtl
in
js
mov
mov
mov
dec
fwait
sbb
in
divb
add
jmp
cmp
dec
push
inc
and
mov
inc
into
push
push
stos
mov
leave
xchg
pop
loopne
mov
mov
adc
mov
pop
icebp
imul
push
add
jmp
xchg
test
bound
mov
jmp
cltd
lds
adc
loopne
xchg
fstps
add
and
and
cmp
ret
or
cmp
imul
pop
js
xor
sub
or
pop
shll
xor
cmp
push
adc
enter
lahf
ss
shlb
adc
cmpsb
sub
mov
xorb
aaa
shrb
jle
lahf
ja
nop
xchg
or
mov
inc
mov
xor
cmc
or
lods
frstor
leave
dec
dec
inc
loop
shll
pop
mov
xchg
add
out
pushf
inc
xchg
push
or
mov
push
xchg
inc
jnp
stos
leave
sub
and
and
insb
cmpsb
or
mov
cmp
iret
fbld
and
bound
imul
icebp
push
sub
test
sbb
stos
je
int
inc
rcrb
je
idivb
inc
mov
push
or
jb
stos
sub
std
lret
mov
mov
xchg
adc
push
mov
mov
test
pushw
loop
mov
push
jmp
add
or
jbe
dec
cltd
mov
lahf
jg
imul
data16
pop
aad
jg
inc
cwtl
aad
jle
pop
faddl
push
sbb
cmpl
xor
imul
adc
push
dec
jl
push
and
cmpsb
mov
nop
out
movsl
leave
push
shrb
add
sub
stos
hlt
push
sub
lods
or
and
sar
jge
fisttpl
icebp
ss
pushf
gs
fwait
test
sahf
popa
dec
or
shlb
mov
sbb
jl
mov
lret
add
movsb
stc
push
or
iret
push
mov
pop
mov
and
and
arpl
popf
add
xchg
iret
jmp
rclb
in
aam
mov
in
pop
xchg
pop
mov
sti
sub
int3
popf
imul
xor
mov
and
rcrl
jae
dec
add
inc
out
or
lock
jle
stos
push
add
fimuls
mov
pop
out
pop
das
mov
mov
jmp
dec
sti
push
xchg
lds
cwtl
jbe
movsl
dec
decl
rorl
and
add
inc
and
iret
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
fwait
cmp
xor
or
mov
gs
push
sahf
clc
out
int3
mov
xor
jecxz
or
out
lcall
sahf
mov
inc
adc
inc
lahf
mov
lret
adc
dec
sub
mov
jae
pop
out
cmp
in
mov
xchg
add
out
jl
fs
shl
mov
push
in
pop
stc
fs
xor
iret
in
lret
addl
xchg
push
mov
inc
pushf
xor
cmp
lods
add
inc
sbb
adc
mov
outsb
mov
cmpsl
iret
je
push
mov
mov
mov
addr16
xor
cmp
mov
or
and
dec
inc
mov
gs
out
xlat
into
dec
adc
jb
pop
pusha
sub
mov
push
test
out
add
sub
jae
repz
aaa
cltd
jno
pop
mov
jb
sbb
aas
cmp
push
push
iret
fidivrl
lret
sbb
xchg
pop
fcomp
pop
cmp
stos
pop
push
or
ret
mov
sbb
lahf
fildl
sbb
das
repz
test
lret
jae
push
popl
je
sbb
xchg
dec
dec
lods
dec
dec
mov
cmp
jb
push
out
jmp
add
mov
test
inc
fildl
add
shlb
jbe
sbb
fdivl
or
arpl
or
pop
orb
sub
cmpsb
rcr
ljmp
data16
popf
mov
icebp
pop
inc
cmp
push
dec
or
ljmp
into
push
lcall
xor
xchg
jne,pn
or
orl
fdivr
and
adc
mov
lret
xchg
aad
add
xchg
adc
in
divl
dec
xchg
push
in
jnp
jne
jg
jb
push
mov
dec
jecxz
ds
mov
xchg
lds
int3
stc
add
call
adc
mov
in
xchg
adc
and
mov
add
mov
adc
add
shll
mov
xchg
and
fstps
cmp
repnz
mov
repz
sub
mov
mov
imul
sub
push
in
mov
movb
jae
push
cmp
or
xchg
inc
test
lcall
ds
sub
out
cli
testl
ja
adc
jno
lods
mov
ret
mov
sti
xor
lds
mov
fdivrl
and
repnz
push
adc
inc
and
frstor
or
pushf
push
sti
cld
push
mov
xchg
jo
xor
pop
loope
pop
loopne
in
xlat
iret
cmp
and
xchg
das
adc
pop
pop
lods
stc
js
xchg
mov
out
ret
mov
rorl
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
and
loopne
gs
aaa
pop
mov
into
mov
shr
push
fidivrs
out
dec
stos
pop
fistpll
pushl
fcmovne
push
fstl
pop
std
adc
mov
into
jp
addr16
fstl
cmpsw
pop
inc
xorl
xchg
push
pusha
mov
stos
ret
aaa
imul
lret
fdivs
xor
mov
bnd
incl
js
and
adc
fcmovbe
xlat
imul
xchg
pusha
push
sti
imul
roll
mov
push
ds
dec
adc
adc
aad
inc
push
in
or
xchg
or
int3
aaa
mov
xchg
arpl
sub
mov
enter
cmp
mov
iret
pop
or
ret
sbb
push
js
mov
call
call
clc
dec
fmull
ds
leave
and
fdivrl
insl
mov
imull
stos
out
jb
mov
in
push
mov
jmp
and
mov
hlt
dec
add
nop
jl
gs
sub
mov
repnz
pop
inc
push
mov
add
in
adc
arpl
std
int3
adc
mov
dec
xchg
mov
sub
cld
jecxz
ja
xchg
pop
fldenv
add
aad
jle
dec
push
into
cli
cmp
mov
hlt
fdivrl
iret
aaa
adc
cmp
cltd
mov
leave
pop
fstl
push
or
jb
jp
mov
es
imul
jge
in
aam
and
cmp
push
inc
jb
inc
imul
rcrl
xor
inc
sub
dec
ljmp
xchg
in
fsubrl
pop
sub
and
lds
sbb
in
out
fiaddl
addr16
jmp
push
xchg
pop
fwait
adc
cmp
mov
jns
clc
mov
lea
fwait
mov
jne
jmp
xchg
imul
ja
insb
notl
fsubs
repz
xorl
scas
les
and
xchg
inc
icebp
sbb
inc
inc
mov
cmp
rol
pop
adc
cld
ret
sbb
add
mov
jge
rcll
push
addr16
fsubrs
repz
jae
mov
push
xchg
repz
pop
push
dec
xchg
es
xchg
xor
sbb
inc
or
movsb
xor
imul
mov
ret
xor
dec
lea
aas
push
jb
mov
xchg
mov
mov
sahf
xor
adc
or
adc
push
loope
xor
mov
mov
cmc
jns
push
loop
daa
outsl
xor
add
xlat
sbb
call
frstor
xlat
cmp
outsb
pop
xor
and
or
cli
stos
mov
test
outsb
adc
mov
lds
sti
push
cmp
ja
aas
scas
pop
out
sahf
pmulhuw
scas
sbb
jns
xchg
pop
rol
je
outsb
aaa
push
push
lahf
dec
cmp
fiaddl
jmp
das
xor
xor
pop
ljmp
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
fcomp
xchg
js
xor
adc
adc
and
sbb
jle
call
push
aad
add
pop
dec
popa
push
repz
dec
bound
xlat
push
test
pushf
pushf
jmp
iret
gs
sbb
push
mov
sahf
rcll
dec
das
mov
cli
cmpl
out
push
push
push
sbb
movsl
sarl
arpl
push
sbb
faddl
cmp
push
notl
jmp
ljmp
adc
mov
xchg
dec
inc
aad
filds
int3
dec
insl
adc
jl
subb
or
adc
xor
pop
inc
fs
inc
nop
sub
cmpsl
mov
dec
mov
cli
and
test
jbe
lods
push
rcl
sbb
loop
add
add
mov
lcall
inc
mov
addl
imul
aaa
addr16
sub
insb
push
pop
xor
aaa
and
push
out
and
add
shlb
sbb
add
int3
ds
push
pop
test
call
inc
cli
daa
add
lret
fisttpll
popf
adc
ljmp
out
dec
cmp
mov
inc
sbb
sbb
xor
inc
leave
pop
dec
lret
lds
jp
pop
xlat
adc
and
sbb
adc
das
js
inc
insb
sbb
mov
sbb
dec
mov
jnp
subb
test
leave
cmp
push
fisubrs
rcrl
cmp
dec
mov
movsl
mov
pop
fs
leave
cmpsb
stc
testl
pusha
int
shll
roll
add
add
sbb
cmc
fs
add
pop
stos
icebp
push
jg
cwtl
or
popa
pushf
cmp
xor
arpl
push
mov
xchg
and
cli
xor
dec
es
frstor
and
pop
addb
outsl
xchg
fildl
out
je
cmp
mov
pop
add
sbb
xchg
xchg
leave
inc
inc
test
fdivp
stos
repnz
rolb
aaa
mov
inc
fdivl
call
and
cld
jb
push
jecxz
xor
nop
ficomps
push
mov
adc
je
adc
aaa
mov
jp
sbb
insb
mov
in
add
loop
adc
mov
out
push
cld
fsts
insl
idiv
cmp
xor
lods
push
lods
mov
and
shrl
arpl
shrl
adc
or
xchg
sub
inc
sbbl
inc
push
and
push
fsubrl
notb
pop
adc
mov
loopne
arpl
xlat
lret
stc
nop
sbb
test
lock
fiaddl
jmp
or
pop
push
les
pop
pop
pop
stc
xor
out
add
rcll
mov
xchg
jecxz
cmp
mov
sub
sbb
popa
xor
sub
out
cmc
inc
inc
clc
push
adc
popa
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
push
sti
jb
sbb
movlps
inc
mov
fadds
sahf
cli
andl
pop
xchg
adc
xor
sbb
rorl
xchg
mov
mov
dec
pop
lcall
lret
rcrl
out
dec
test
push
out
std
pop
sbb
xchg
xlat
dec
out
xchg
and
jb
cmpl
lahf
mov
mov
or
repnz
and
cmc
push
aas
inc
out
or
cs
and
dec
and
push
mov
lds
gs
cmp
in
ljmp
mov
ss
sbb
fildl
adc
adcb
les
pop
mov
push
bound
in
fwait
stos
or
push
test
cwtl
mov
das
pop
mov
jne
ds
push
int3
repnz
cli
aad
shrl
dec
xor
xlat
dec
callw
stos
sti
mov
dec
and
add
divl
mov
std
mov
cmp
jmp
popf
add
jb
or
mov
pop
pop
xor
scas
pop
mov
xor
cli
cmpb
roll
jbe
mov
movsl
dec
cltd
icebp
pop
cmpl
in
lds
push
push
les
inc
repnz
insl
xchg
or
dec
inc
and
into
out
fmul
push
pop
pop
int3
loop
and
and
dec
xchg
lock
andb
loope
nop
xchg
adc
xorl
xor
cmpl
mov
cmp
sub
lret
mov
jge
loopne
scas
addb
mov
in
mov
dec
dec
data16
inc
hlt
sub
cmpsl
daa
ficoms
fbld
pop
shll
push
cmp
lea
ror
and
in
xorl
adc
jmp
aaa
scas
ret
adc
jmp
jb
dec
adc
jb
out
xor
mov
int3
movlps
addr16
cmp
adc
jno
xchg
cmpsb
fstl
mov
das
inc
jl
mov
and
lret
sub
lods
cmp
shll
adc
jle
shll
fsqrt
ficoms
jmp
lds
mov
dec
cmpsl
jg
or
xchg
bound
not
cmpsb
xor
fisttpll
push
sbb
sub
lcall
or
pushf
mov
sarl
sub
and
loop
aas
mov
ljmp
cwtl
movsb
loopne
and
push
pop
push
rol
and
jnp
repz
xchg
frstor
dec
icebp
es
scas
sub
cwtl
push
popa
dec
loop
test
loopne
ret
sbb
ja
int3
inc
add
pushf
jo
inc
insb
imulb
test
xor
ret
aad
sbb
xor
lds
adc
call
jp
dec
xor
push
dec
inc
andb
rolb
fisubl
mov
mov
je
push
pop
push
jmp
mov
pop
and
lock
sarl
jns
ret
test
clc
insb
pop
pop
sub
popf
pop
stos
fisttpll
mov
mov
sub
push
insl
flds
push
fbstp
fstpl
xchg
icebp
mov
sarl
mov
movsb
in
push
pop
push
adc
inc
shl
loop
mov
cmc
mov
jo
jg
and
ret
fcomip
rcrl
pop
mov
aaa
lret
and
lret
ret
push
mov
mov
cmp
std
xor
xchg
imul
pop
sbb
lret
repnz
inc
mov
loope
hlt
jmp
xor
mov
loop
mov
cmp
stos
jg
shrl
pusha
cli
and
and
pop
pusha
push
js
pushf
or
out
scas
ljmp
or
sbb
push
xor
jle
jo
scas
push
push
incb
pushf
aad
cmpl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
push
and
adc
movlps
xchg
mov
mov
sub
adc
fucomip
or
xchg
inc
lcall
mov
lods
jmp
mov
test
xchg
and
shr
fwait
push
icebp
clc
dec
addr16
fbld
mov
pop
cmp
xchg
dec
push
jp
xchg
pusha
fldt
cmc
stos
xchg
pushf
xor
add
push
push
std
jmp
pop
cli
pop
cmpsl
pop
mov
lea
mov
aas
dec
and
scas
cltd
fnstcw
or
mov
popf
sub
and
out
push
push
push
mov
mov
sub
daa
inc
popf
in
movsb
mov
cli
ret
in
dec
or
pop
sub
lds
fsubr
loopne
jo
cmc
mov
inc
shrl
int3
fs
test
jmp
cs
add
fadd
dec
les
cwtl
dec
xor
xor
cmp
fwait
push
push
lds
mov
cmc
mov
insl
fsubrs
lock
aam
lcall
mov
mov
dec
pop
or
shl
sbb
mov
fildll
pop
rcll
push
aaa
sbb
pop
sbb
rcrb
inc
sub
or
jmp
xor
pop
test
jl
ret
xor
cmp
or
sub
aad
sbb
dec
jmp
push
popf
dec
shll
es
loope
jbe
add
dec
cmovne
loop
lds
push
bound
mov
ret
fbstp
icebp
cmp
push
ljmp
das
add
and
aam
aas
or
adc
adc
xchg
ja
pop
dec
imul
nop
xchg
loopne
and
ret
inc
add
rorl
sbb
ja
sbb
ffree
mov
movsl
fs
stos
xor
add
inc
stos
or
jo
mov
fsubs
aaa
mov
lea
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
imul
testl
push
xor
fisubrl
lcall
cltd
ret
sub
fs
push
leave
sub
mov
push
xchg
insb
cmp
sbb
jo
cmc
pop
decl
pusha
push
push
push
or
mov
es
stos
jl
enter
push
out
sbb
push
inc
dec
enter
cmp
xor
stos
test
add
inc
and
dec
xor
shll
jo
cwtl
imul
test
fmuls
imul
fstps
lods
mov
jp
cmpb
daa
adc
stos
aam
bound
adc
sbb
push
jne
cmp
xor
fsubrl
bound
mov
mov
jle
shrb
dec
push
sarb
loope
dec
data16
or
sub
mov
add
mov
mov
imul
mov
das
or
out
mov
lcall
mov
movsb
lcall
push
xor
adc
ss
pop
sub
enter
add
sub
inc
mov
xchg
inc
pushf
jl
adc
pop
bound
out
sbb
mov
gs
pop
lea
inc
and
test
into
xchg
add
out
test
mov
or
and
scas
mov
lea
and
jle
push
movsl
outsl
idivl
mov
addr16
lahf
inc
jo
mov
dec
sbb
pushf
scas
adc
aam
sbb
or
push
pop
jb
repnz
insb
or
repnz
jl
ljmp
push
pushf
rolb
dec
call
stc
xor
sub
sbb
mov
lock
nop
test
mov
push
inc
sbb
js
test
clc
das
add
movl
addl
jmp
pop
repz
cmp
pop
data16
loop
sbb
adc
movlps
jno
loope
xor
hlt
cmp
and
add
inc
repnz
nop
inc
xchg
and
sahf
fs
adc
lsl
cmp
mov
cmovbe
jp
int3
mov
divb
fwait
jne
lds
or
dec
pusha
sti
nop
add
imul
or
stos
push
push
mov
mov
cmp
pop
xor
or
xchg
call
jbe
mov
pop
mov
inc
jmp
daa
mov
shlb
xor
xchg
in
das
and
mov
xchg
es
cmp
xor
sub
push
dec
xor
xchg
adc
xchg
pop
or
mov
call
out
jns
sbb
ret
xchg
xchg
mov
xor
ja
test
jo
mov
data16
adcb
fwait
mov
pop
mov
adc
jo
jae
mov
sahf
in
mov
outsl
or
clc
push
lcall
and
pop
push
xor
ror
xor
out
inc
xchg
xor
sbb
movsl
jne
int3
add
mov
sub
mov
pusha
add
cli
xchg
rcl
in
push
in
adc
jg
insb
sbb
adcl
jbe
dec
inc
xor
add
dec
outsl
or
es
incl
mov
adc
aas
cli
jne
lods
mov
inc
ret
sbb
sbb
lds
or
inc
jl
es
jg
lahf
add
rol
cmp
sub
icebp
sub
in
mov
les
inc
call
sub
xor
sub
jge
xorb
cli
add
inc
das
bnd
xchg
rcll
pop
shl
aad
inc
and
pushf
xchg
push
incl
jmp
inc
xchg
mov
repz
in
jl
xor
test
mov
add
sub
cmp
test
incl
add
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
loope
js
adc
adc
pop
xor
fbstp
icebp
dec
pop
sti
or
and
int
shll
rclb
mov
pushf
dec
or
pop
idivl
mov
mov
aam
jno
mov
sbb
insl
and
sbb
sub
ja
or
decl
mov
in
push
sub
ljmp
iret
xchg
ja
fwait
xchg
mov
adc
xchg
ja
mov
xchg
addl
sbb
addr16
add
jp
sub
cs
jp
xchg
xchg
popf
iret
rcll
cmp
mov
scas
cmpsb
add
mov
inc
mov
mov
shlb
mov
pop
and
xchg
insl
shll
subl
lahf
test
cs
jmp
imul
inc
mov
adc
jb
add
insb
scas
addr16
pcmpeqd
jecxz
pop
iret
idivb
rolb
and
divb
jo
mov
push
push
andl
sbb
mov
sarl
inc
rcll
fsubrl
cmpb
leave
cmp
and
push
pop
xchg
sbb
rcll
cli
sub
movsl
lods
fsts
mov
data16
scas
xchg
cmp
jmp
sbb
cld
into
neg
jmp
mov
pop
jne
pop
jge
cltd
push
scas
pop
scas
mov
fcompl
push
cmpsb
mov
adc
div
adc
pushf
gs
icebp
notb
jbe
jg
mov
xchg
xor
movsb
aad
xchg
repnz
inc
stos
leave
jmp
imul
sub
test
in
lret
scas
aas
pusha
dec
sub
out
not
or
mov
jmp
fwait
lcall
inc
leave
push
addr16
fisubs
out
xor
stos
imulb
out
stos
out
sbb
pop
loope
xor
push
adc
and
push
dec
mov
imul
gs
push
push
add
jl
inc
add
roll
in
incl
add
inc
add
rorl
or
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
inc
xchg
push
push
adc
adc
js
mov
fisubrs
int
or
mov
push
cmpsb
jp
lods
xor
jle
push
lea
mov
mov
jecxz
xor
push
cmpsl
mov
cld
fwait
sbb
test
jns
ja
pusha
sub
lods
xchg
mov
inc
push
mov
cmpsb
pop
xchg
add
std
inc
mov
jg
fiaddl
push
mov
mov
or
mov
add
inc
in
out
mov
jns
cltd
mov
lret
xor
aam
je
ss
pop
xlat
sub
push
aam
sub
push
std
mov
mov
mov
pop
sbb
add
jg
pop
mov
mov
ficomps
cmpsl
dec
nop
into
lods
rorl
push
ds
pop
mov
pop
jmp
out
lret
push
pop
jl
fistps
xchg
jecxz
pop
aas
dec
or
mov
fdivrl
cmp
xor
inc
jmp
lods
jecxz
pop
ds
pop
mov
andb
ja
mov
outsb
lea
enter
aaa
mov
pop
push
mov
imul
mov
flds
and
in
repnz
jecxz
mov
outsl
outsb
xchg
subl
fsubrs
sub
sub
pop
test
imul
out
out
aas
push
jnp
lods
arpl
cltd
outsb
in
or
imul
or
outsb
out
lret
jecxz
ss
xor
call
mov
fcom
xor
cmpsl
stc
xchg
repz
out
icebp
sbb
jbe
mov
mov
mov
mov
add
popf
jb
imul
testb
jb
mov
xchg
andl
xchg
sub
enter
xchg
cmp
cmp
jae
rcrl
std
jmp
roll
xchg
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
dec
mov
int3
movlps
aaa
xchg
push
call
je
cmpsb
pusha
or
cwtl
arpl
sub
and
stos
push
mov
pop
ja
mov
imul
jb,pn
lds
mov
mov
sub
xchg
jne
pop
xor
lahf
and
and
push
add
xor
addr16
pop
mov
inc
ja
add
ret
aad
jmp
stos
mov
aas
aaa
ret
push
adc
mov
cltd
jg
lahf
xor
cmpsl
lcall
cli
daa
jmp
ja
and
cmp
and
loop
or
mov
jne
ja
pusha
adc
and
pop
stos
fsubrs
mov
cmpsb
cld
jle
adc
std
out
fists
loopne
xchg
lret
movsl
jl
xor
cwtl
nop
shll
daa
adc
shll
data16
xor
mov
jp
jb
fnstenv
mov
push
sar
sbb
or
adc
mov
xchg
imul
sub
fisubl
addr16
cmp
xchg
xor
dec
pop
xchg
xchg
loop
fnstenv
adc
cmp
out
sar
or
clc
movsl
xor
and
lea
adc
inc
dec
ja
pop
mov
inc
jnp
mov
out
imul
mov
lock
adc
inc
push
dec
add
shl
rcl
sub
adc
and
jge
lret
mov
inc
jnp
mov
xchg
divl
aad
cmpsl
pusha
fcomip
lcall
mov
pusha
sub
and
jge
jne
inc
mov
or
lahf
pop
jmp
and
dec
xchg
cmc
mov
out
std
dec
and
dec
stos
jns
dec
jmp
xchg
jge
int
jle
sbb
add
dec
js
inc
sub
cmp
nop
cld
aad
das
cmc
push
int
inc
aas
jge
or
fidivl
push
cmp
inc
sub
and
mov
xor
icebp
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
fldcw
adc
adc
loopnew
mov
fisubrs
fwait
xchg
jno
adc
ss
movsb
loopne
ds
andl
iret
or
test
mov
sub
mov
ficoms
and
stc
cltd
in
pop
cwtl
push
jge
mov
gs
div
push
sbb
xchg
stos
dec
jecxz
add
je
mov
xor
sub
add
add
pop
pop
cmp
xchg
jp
ret
dec
mov
add
lea
fsubrs
dec
cmp
ret
jbe
repnz
out
rorl
scas
sbb
lods
outsl
push
sub
lods
xchg
daa
inc
mov
cs
xor
xchg
fisttps
push
jbe
cmp
xchg
ljmp
add
dec
repz
popa
call
daa
cmp
ret
repz
imul
shl
pop
popa
jge
pop
inc
inc
sbb
flds
aam
dec
push
fcompl
cli
popa
dec
xor
sub
add
divb
mov
xchg
adc
inc
scas
inc
daa
insl
add
sub
inc
hlt
testl
pop
lcall
ret
pop
sbb
ss
or
bnd
dec
movsl
lock
cmc
jmp
push
sub
mov
sbb
and
loopne
pop
shr
std
addb
push
and
loop
xchg
jmp
and
shlb
cmp
dec
jbe
into
mov
rcrb
lods
cwtl
inc
mov
ds
out
sahf
adc
jle
xchg
xchg
cmp
pop
add
push
out
xorl
cs
and
in
pop
jae
jae
outsl
cltd
test
inc
das
scas
or
adc
inc
fwait
jne
je
out
lahf
out
loop
pop
push
push
inc
sbb
lds
cmp
or
xchg
lret
add
pop
and
fdivrl
loop
loope
pusha
out
sbb
cmp
stos
add
cmc
lods
sbb
adcl
xchg
lods
push
les
clc
sahf
stc
cmpb
sbb
sub
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
sbb
inc
sbb
test
mov
xchg
adc
sub
loopne
stc
pop
out
adc
daa
loope
movsb
or
insb
fiaddl
pusha
pop
mov
pop
mov
and
andb
push
gs
pop
popf
cmp
jbe
cmpsb
jmp
cmp
dec
adc
adc
sbb
sub
movsb
push
or
push
arpl
push
iret
inc
or
pop
out
pop
orl
repz
adc
dec
mov
cmpsl
sub
sub
repz
jg
ret
mov
mov
inc
xchg
jb
push
cmc
outsb
mov
cmpsb
fstl
sub
inc
nop
test
mov
cmc
mov
cmp
out
call
and
jns
and
or
cltd
cs
ret
push
xchg
leave
popa
das
and
mov
or
repnz
mov
adc
push
cwtl
or
mov
jle
fsub
es
pop
pop
jne
cmp
jbe
xlat
and
rolb
ljmp
sbb
stc
pop
dec
push
or
in
stc
enter
movl
sbb
or
ss
mov
int
mov
sahf
cmp
push
push
mov
xor
xchg
stos
in
fcompl
pop
cmp
cmp
mov
or
sbb
pop
lahf
lods
testb
std
leave
rep
js
and
subb
xlat
xor
cmp
push
mov
adc
push
imul
and
clc
mov
hlt
in
int3
push
inc
out
mov
popf
jae
lods
not
cli
out
add
cmp
xor
pop
jge
out
shll
test
rcr
fdivrp
sbb
mov
test
dec
push
sub
inc
lea
cli
mov
push
adc
mov
mov
xchg
add
movsl
imul
or
incl
add
lret
mov
or
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
xor
adc
adc
cwtl
sbb
push
leave
cmp
cmp
call
mov
fsubp
out
mov
int3
test
scas
xor
imul
mov
push
mov
adc
sarl
call
sbb
xor
push
and
xchg
jle
mov
cmpsb
movsb
fstpl
adc
cmpsl
sti
out
jb
mov
inc
idivb
inc
xchg
push
loope
popf
push
stc
mov
out
ja
iret
mov
in
mov
xchg
pushf
les
dec
push
ret
fldl
cmp
and
xor
sbb
xchg
add
push
pop
inc
and
rcl
repz
stos
mov
mov
sahf
cmpsb
mov
jno
sbb
adc
scas
js
shll
stos
mov
push
dec
mov
scas
movsb
scas
movsl
xchg
push
inc
arpl
insl
mov
inc
xlat
nop
arpl
mov
ja
lret
mov
enter
sbb
ja
fldt
push
dec
jle
xchg
push
xchg
adc
loope
imul
xor
dec
out
pop
daa
adc
fucomip
adc
scas
test
sub
iret
jo
dec
js
aaa
inc
cmp
loopne
ja
pusha
mov
sbb
imul
inc
inc
fnstcw
cmpsb
adc
dec
addb
mov
sub
adc
dec
fisubl
popa
adc
dec
sub
dec
and
ds
idiv
outsb
mov
inc
dec
mov
cmp
sub
imul
popa
fisubrl
inc
stos
mov
stc
ror
and
add
lahf
mov
mov
in
mov
hlt
nop
push
pushf
in
movl
sub
aad
xchg
dec
in
mov
pop
adc
out
fcomps
cmp
in
js
and
fistpll
add
rorl
mov
pop
dec
es
jmp
incl
push
add
mov
sti
xor
cs
cld
push
lret
mov
pop
cld
sub
jmp
add
dec
dec
add
test
std
decl
ret
add
add
add
js
push
xor
int3
movlps
lock
mov
jb
adc
mov
in
into
dec
adc
jb
cmp
rolb
roll
cld
cmp
arpl
cmp
shll
icebp
pop
aas
dec
insb
or
xor
pop
movsl
push
jo
repz
in
add
inc
insl
popa
pushf
fldcw
ret
jmp
notl
add
mov
loopne
inc
adc
jnp
dec
xor
push
dec
sbb
aam
fstl
mov
repnz
xorl
cmp
push
sbb
inc
lock
cmp
xchg
mov
lock
sub
inc
lcall
jle,pn
jo
nop
jbe
sub
and
push
adc
imul
jl
lret
push
xchg
cwtl
xor
ret
repz
loop
int
dec
or
fcoml
push
sbb
dec
jbe
push
add
mov
sahf
push
mov
aas
cwtl
cmpb
xchg
jmp
inc
cwtl
scas
push
mov
lret
mov
xor
les
cmp
add
packsswb
mov
dec
inc
aam
push
lods
ja
ror
popf
lods
daa
xchg
pop
repz
xchg
es
imul
rcrb
daa
stc
sub
push
jne
data16
inc
dec
xor
lock
xlat
pop
scas
xchg
fildl
mov
test
sbb
sbb
sbb
sub
adc
mov
cmp
enter
fs
aaa
jle
jecxz
mov
push
or
pop
leave
loope
in
push
pushf
jmp
aad
iret
in
sub
rcr
out
cmp
xadd
in
jg
mov
push
mov
jns
xchg
inc
icebp
mov
add
or
jge
mov
jle
jmp
repnz
dec
xchg
mov
cs
rcrl
cli
add
mov
or
fidivrs
mov
cmp
ret
pushf
xor
push
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
pop
fnsave
les
inc
lods
mov
int3
addr16
je
lcall
lock
or
inc
sbb
inc
cli
insl
rcl
or
scas
loope
pop
xchg
pop
test
dec
push
pop
cmp
xlat
leave
inc
mov
andb
and
xchg
push
pusha
inc
fadd
aas
std
pop
sub
pop
xor
in
cmp
push
lahf
jae
sbb
std
sbb
cmp
fucomi
fs
jecxz
pop
xor
and
inc
in
cmp
mov
sbb
imul
and
mov
xor
push
int
adc
popl
ss
cmp
repz
jnp
xlat
xchg
lret
mov
mov
xor
loope
leave
in
ja
loopne
mov
lds
repz
or
test
push
test
call
pop
rcrl
rcrb
pop
dec
adc
das
sbb
lods
and
cmp
xor
fwait
and
sbb
outsb
add
icebp
or
repnz
mov
jns
lods
in
adc
inc
clc
scas
ja
xchg
jnp
cmp
clc
inc
div
mov
jp
or
add
cmp
pop
or
cmpsl
mov
rcl
dec
iret
out
pop
mov
arpl
and
jns
jbe
stos
fnstenv
inc
push
adc
inc
jge
scas
mov
loop
pop
add
dec
jae
xor
mov
mov
adc
mov
sbb
push
inc
mov
push
outsl
jge
sbb
aad
jae
mov
pop
push
je
imul
inc
daa
pop
ret
repnz
add
sub
adc
jecxz
fbstp
mov
or
ss
fs
fcoms
test
cmc
jmp
leave
mov
and
adc
into
inc
imul
lds
dec
inc
in
cmp
push
mov
cmc
mov
push
or
mov
push
xchg
jle
cmpsb
jecxz
push
cmp
mov
es
xor
shr
jmp
cmc
pop
sbb
sbb
ss
cmp
js
scas
dec
mov
int3
movlps
enter
pop
lods
mov
jg
sbb
fwait
sbb
add
loop
dec
push
push
sub
mov
jno
leave
into
xor
jnp
cmpsl
popf
sub
ret
imul
dec
loope
mov
or
push
push
add
jecxz
sbb
fld
sub
cmp
xchg
loopne
xchg
push
xor
test
pop
es
push
daa
cmp
les
cmc
jae
inc
cmp
jecxz
cli
mov
xlat
push
jns
adc
push
lret
mov
into
repnz
jb
pop
inc
add
sbb
inc
or
jb
in
ror
scas
decl
jl
icebp
imul
cltd
loopne
mov
cmp
or
pop
je
inc
add
inc
pop
sub
test
or
setg
adc
hlt
lret
mov
lods
adcl
rcrb
aam
inc
and
inc
out
push
cmp
push
xchg
iret
cltd
pop
jns
mov
or
jne
cli
xchg
xchg
fildll
mov
test
pop
mov
call
jl
mul
call
cld
cld
jb
pop
mov
adc
lock
cmp
pop
dec
adc
dec
ret
bound
cmp
add
xor
lods
add
movsl
push
mov
mov
aas
inc
cmc
sub
dec
movsl
xchg
ret
and
xor
mov
xchg
dec
movsl
push
popa
call
dec
in
push
xor
push
add
push
iret
xorb
insl
sbb
mov
nop
ret
push
jmp
pop
cltd
mov
fs
xchg
xchg
mov
ret
subb
cwtl
dec
adc
jge
pop
popa
cmp
adc
inc
sub
mov
dec
mov
lahf
dec
mov
jno
and
loope
fadd
adc
mov
push
adcl
stc
leave
sbb
testl
loope
and
lods
push
shl
mov
incl
mov
rorl
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
mov
push
les
decb
cmp
sahf
mov
mov
stos
push
aaa
enter
lcall
push
fldln2
out
addr16
into
add
and
leave
out
es
subb
mov
ret
xor
loop
call
pop
dec
xchg
in
insl
xchg
xor
adc
test
popf
or
sbb
scas
repnz
xchg
pop
cmpsl
or
scas
subl
ljmp
or
jno
loope
dec
push
ficomps
imul
dec
and
inc
adc
mov
and
mov
add
cmp
aad
addr16
outsl
pop
dec
push
inc
pop
sub
lock
push
mov
mov
ficoml
les
pushf
mov
incl
jno
flds
cld
push
sahf
pop
push
out
or
mov
repz
faddl
pop
inc
dec
pop
nop
mov
and
push
stos
psubusb
lret
pop
sbb
mov
sub
pop
ljmp
push
sub
sub
add
mov
jp
movsb
push
icebp
fwait
inc
in
xchg
add
push
xchg
imul
push
mov
inc
mov
outsl
stos
mov
nop
call
adc
push
cmp
jne
mov
ficomps
clc
repz
push
je
fwait
sub
cmpsl
cwtd
jbe
cmpb
jmp
mov
stos
mov
cs
mov
dec
aas
outsl
sbb
in
push
movsb
and
stos
pop
stos
pop
outsb
rolb
dec
jne
repz
insb
out
and
xchg
test
dec
in
and
mov
inc
adc
mov
mov
stos
lds
mov
cltd
push
xchg
lods
jnp
mov
jo
fcmovnb
pop
and
dec
mov
leave
cmp
insb
lcall
aam
mov
dec
jmp
daa
mov
jno
mov
cmpsl
mov
lea
add
mov
and
and
mov
mov
jmp
xor
fisttpll
and
rcrb
lods
out
adc
adc
decl
pop
mov
test
sbb
insb
rolb
xchg
gs
cmp
mov
in
xor
mov
jae
mov
sbb
test
fldt
sub
fmuls
cmc
fincstp
adc
xchg
adc
bound
movsb
pop
cld
dec
adc
lods
shll
xchg
mov
or
or
int3
cmpl
jae
pop
xchg
fnstcw
lret
or
popf
add
mov
pop
jl
rorb
fucomi
push
add
pop
bnd
stc
xor
cmp
push
dec
sbb
inc
adcl
lahf
shlb
sbb
adc
dec
xchg
adc
cmp
add
inc
jns
inc
hlt
ret
dec
out
dec
cmpsl
sub
cld
ficoml
in
adc
pop
and
pop
xor
cmpsl
in
inc
clc
fadds
cwtl
les
mov
addl
popa
sbb
scas
out
xchg
js
or
push
imul
lds
cwtl
in
inc
pop
insl
gs
rcl
push
dec
xor
sub
sub
sub
outsl
movsl
out
pop
aam
imul
xor
out
test
loope
int
je
fstps
cmp
sub
sub
gs
push
les
xchg
or
idivl
movl
dec
rcrb
in
les
loop
fstl
cmp
inc
mov
and
cmc
or
dec
push
loopne
mov
inc
in
mov
nop
cmp
pop
xchg
cmp
mov
dec
divb
sub
or
jne
push
mov
mov
out
and
andb
mov
jl
fwait
stc
jne
ret
and
pop
test
leave
xchg
mov
movsl
xchg
xchg
ror
cmp
xor
sarl
push
cmp
cmpsb
xlat
pop
fsubr
mov
or
mov
aam
add
dec
sbb
inc
or
int3
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
icebp
shr
loope
cmpsb
pop
and
jle
xchg
push
adc
dec
add
nop
push
scas
jae
add
sbbl
jecxz
adc
in
add
jmp
scas
ja
std
jo
add
loopne
inc
sub
dec
cmp
divl
and
push
mov
sarb
loope
es
inc
or
or
pop
mov
add
icebp
pop
mov
fistpll
sub
push
fdivs
dec
pop
repz
jb
xlat
in
pop
gs
sub
ret
repz
fists
loope
xchg
jbe
fisttps
lcall
inc
inc
sub
sarl
mov
mov
popa
sub
jno
lock
xor
int
lods
mov
mov
pop
imul
lods
test
xchg
out
cmpsl
das
out
test
xlat
mov
in
divb
xchg
stc
xchg
mov
mov
sbb
mov
imul
jb
orl
add
insb
leave
ret
dec
stc
ror
mov
mov
out
loopne
fdivl
shrl
inc
lret
rorl
cmpsb
out
and
lock
mov
mov
and
sti
test
int3
inc
loope
arpl
loopne
mov
std
xchg
out
popl
or
sbb
mov
xchg
jns
cmp
mov
movsb
cltd
js
and
push
out
sahf
adc
imul
xchg
dec
icebp
xchg
pusha
fimuls
leave
insl
dec
inc
xchg
dec
in
mov
scas
fs
add
rcl
ja
test
xlat
push
insb
xor
pop
les
add
push
dec
popf
inc
fildll
push
push
fiadds
loopne
dec
mov
ret
push
out
jne
sbbl
or
ja
dec
aam
mov
leave
pusha
imul
pop
out
mov
lock
aas
lock
lods
xchg
pop
sbb
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
xchg
adc
adc
movsl
fcoms
add
inc
aaa
push
push
xor
pusha
in
mov
cmc
xlat
testb
dec
jle
cld
mov
les
or
jge
std
cmpsl
ret
popf
and
fwait
std
movsl
cmp
adc
dec
out
mov
rclb
pop
mov
imul
hlt
push
xchg
mov
pop
inc
stc
jb
jg
jnp
xchg
dec
bound
shl
cmp
hlt
insb
add
xchg
lret
mov
xorl
pop
ret
dec
mov
mov
adc
rcrb
scas
sti
fdivr
jmp
pop
push
lret
lea
sahf
adc
xor
fbld
push
ret
fwait
lret
cld
fisttpll
ret
xchg
push
in
gs
mov
pop
sub
fst
mov
add
aad
insb
xchg
pop
aam
fs
jno
push
xchg
neg
notl
out
mov
jge
int3
or
sbb
mov
pop
sub
xor
xchg
mov
adc
mov
inc
pop
call
xor
ret
xorl
xchg
pushf
dec
push
mov
call
stc
stos
int
sbbl
push
adc
xchg
rcrl
subb
and
mov
xchg
push
out
jno
lret
jnp
sarb
add
push
cmp
xchg
inc
xor
data16
push
lea
testl
rcll
incb
xlat
and
xchg
sub
mov
xorl
sub
xor
jb
pop
stos
test
or
add
sub
ret
ja
ja
xchg
lret
cmp
hlt
add
push
dec
adc
xchg
dec
dec
shlb
and
mov
pop
inc
mov
dec
arpl
je
inc
nop
jg
lahf
push
cmp
insl
xor
inc
cmp
add
cmp
loopne
in
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
mov
adc
adc
xor
xor
xchg
cmp
fs
push
scas
mov
xchg
cmp
movsb
das
adc
xchg
add
loope
sbb
adc
mov
jg
dec
lods
loope
jl
dec
addr16
fucomip
mov
fstp
pop
add
cld
mov
test
and
jnp
mov
cmpsl
mov
in
lods
and
in
pop
mov
sbb
jb
mov
mov
insb
sbb
test
test
or
mov
add
sbb
pushf
loopne
cmp
mov
xor
pop
out
in
push
rclb
test
arpl
pop
xchg
sbb
add
stos
add
jge
cwtl
inc
sub
jp
cld
int
cmp
adc
sti
jno
and
adc
idiv
pop
inc
sbb
sbb
addr16
jg
jg
fadd
sub
sub
push
inc
subb
mov
enter
sbb
cmpsb
xchg
mov
gs
xorl
xchg
outsb
inc
push
insb
std
loope
cmpsb
xchg
xchg
jecxz
cltd
test
call
popf
stc
inc
lods
roll
cmp
cmpsb
push
inc
sub
xchg
popa
daa
in
sub
inc
rcrl
mov
xor
mov
mov
inc
out
leave
fst
jg
jecxz
dec
lods
adc
rolb
jmp
add
cmpsl
lods
sar
jb
add
sbb
das
int3
cmp
cs
das
adc
mov
andl
inc
mov
xor
aad
add
and
ljmp
inc
shlb
ret
std
inc
and
mov
pop
sbb
mov
jno
dec
lds
fistpll
xchg
pop
mov
das
insl
mov
mov
push
test
ret
mov
enter
mov
xor
clc
fwait
xor
pop
push
sub
hlt
inc
push
into
sub
psubsb
lock
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
mov
stos
vunpckhps
int3
movlps
fbld
sbb
insl
push
das
jnp
and
pop
enter
push
dec
push
neg
stc
or
xor
mov
mov
jae
pop
mov
and
sbb
mov
aam
outsb
iret
cs
xlat
sub
bnd
ret
sbb
lahf
push
push
and
or
cltd
push
mov
cmpl
adc
or
mov
xchg
jnp
and
sub
cmpsb
aaa
call
insb
les
sub
xor
mov
psrlq
test
jnp
repz
jb
jp
or
negb
xor
pop
js
xchg
sahf
push
aad
jmp
test
inc
fs
ret
sti
jns
fistpll
in
into
inc
adc
pop
pop
mov
cli
add
lods
dec
enter
in
and
sti
rcrl
add
xor
and
lock
xor
hlt
ffreep
inc
xor
jle
cmpsl
insb
mov
xchg
repnz
scas
daa
imul
loop
sub
mov
jmp
dec
js
cwtl
adc
or
lahf
shll
mov
push
imul
xchg
lea
leave
xor
in
or
dec
push
ljmp
xchg
je
inc
dec
in
xchg
in
mov
add
repz
nop
sub
xor
loop,pn
loop
push
fmul
pop
out
les
xchg
and
pop
push
and
push
mov
sahf
cmp
sbb
aam
popa
jbe
mov
push
mov
xchg
cmpsb
fdivs
nop
into
cltd
divl
mov
inc
xor
test
sbb
enter
out
cltd
mov
pop
xor
aaa
xchg
imul
pop
mov
push
dec
lret
iret
cmp
pop
iret
mov
lcall
fisubrs
mov
push
fdivp
jb
out
loopne
mov
les
aad
xor
lret
stc
xchg
lods
adcb
ss
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
bound
jge
adc
adc
arpl
mov
cmp
test
ss
push
inc
stos
jno
cmp
aad
int
push
bound
jp
mov
mov
inc
add
pop
pop
xchg
adc
jbe
loopne
cmp
fcomp
filds
dec
and
pop
jg
movsl
int3
mov
dec
push
jmp
sbb
pop
call
shlb
cwtl
aaa
pop
inc
push
imul
pop
out
andps
xchg
sub
push
mov
ret
ja
pop
or
cld
ja
push
insb
pop
mov
mov
out
dec
pop
sub
cmp
sub
pusha
xchg
int
andl
rolb
inc
arpl
push
lahf
push
lea
xchg
test
fs
adc
jne
cmpsb
int
xchg
mov
inc
mov
adc
add
lret
out
push
push
popa
dec
lcall
ja
pop
lds
or
test
sub
push
jae
fs
addr16
push
fisubrs
push
jnp
popa
push
daa
mov
mov
orb
sbb
fldcw
in
mov
pop
inc
scas
rclb
lods
mov
pop
enter
jbe
dec
lret
xchg
cmpsb
xor
lcall
jno
xor
inc
adc
push
xor
cmp
addr16
cli
add
je,pn
and
fadd
lcall
sarl
or
repz
in
ret
inc
sub
rcrl
add
shr
arpl
lret
or
sub
ljmp
fisttps
aam
mov
push
std
jnp
dec
inc
and
or
ljmp
sbb
pop
dec
xor
adc
cmp
ja
or
adc
sti
xchg
lret
mov
jle
mov
daa
stos
jp
xlat
mov
and
sub
mov
mulb
cld
cmp
test
jge
add
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
in
and
xor
movlps
sbb
pop
mov
xchg
dec
add
test
inc
rolb
stos
das
repnz
jmp
cs
stos
outsb
fwait
movsb
xor
or
imul
or
pop
out
and
scas
pushf
mov
jl
mov
outsb
bound
mov
and
dec
jbe
push
rcl
add
adc
ljmp
push
inc
pushf
jmp
pop
xor
sbb
ja
mov
lods
jo
iret
fwait
js
xchg
int3
test
stc
int3
mov
pop
mov
movsl
addl
sub
test
cltd
sbb
lcall
aam
sbb
lahf
mov
das
ljmp
insb
cmp
adc
stc
cwtl
ja
cli
jge
bound
insl
inc
add
rorl
and
pop
insl
and
lret
push
stos
mov
movsl
sub
popf
movsb
pusha
sub
xchg
add
xchg
std
mov
pop
pop
imul
mov
insb
lcall
das
notb
pop
repnz
ret
jecxz
push
out
push
dec
jp
cltd
jmp
sub
push
jp
sbb
or
pop
dec
pop
shll
jno
loopne
stos
loop,pn
mov
fildl
adc
or
and
cmc
stos
jge
mov
mov
aam
jno
aam
mov
popa
rcrl
imul
mov
lds
sub
mov
stc
sub
pop
rcr
sub
xchg
jo
cmp
mov
imul
or
outsb
adc
cmp
outsl
push
sbb
movb
cmp
mov
fucomip
xlat
cmc
push
ja
out
mov
fsubs
sbb
mov
shlb
cmpsb
lcall
std
rcll
jl
lret
inc
mov
push
dec
repnz
setge
sbb
mov
imulb
mov
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
stos
in
enter
movlps
sub
lods
sbb
scas
imul
inc
sti
sub
lret
push
sub
jmp
in
cltd
ja
mov
or
push
mov
lcall
pop
mov
xlat
fsubl
xchg
addb
sbb
loop
test
std
stos
jno
int
dec
mov
xchg
xor
xchg
pop
outsb
mov
lcall
mov
fdivrl
xchg
or
loopne
in
inc
divb
subl
insl
gs
xor
pop
imul
data16
cmpsb
sahf
mov
adc
xchg
xor
and
push
sbb
stc
aas
add
pop
sub
mov
add
jne
or
xchg
movsb
mov
sub
xchg
out
lcall
mov
xor
fidivs
stos
push
in
mov
pop
mov
lea
mov
sti
sub
xchg
aam
push
pop
inc
inc
inc
or
mov
pop
stc
test
ss
mov
les
hlt
pop
inc
in
adc
jecxz
roll
test
jno
push
or
mov
mov
cmp
sbb
adc
adc
cmp
add
das
fidivl
adc
mov
pop
push
cld
pop
jmp
data16
ljmp
xor
sub
mov
mov
mov
in
ds
jecxz
adc
and
cwtl
inc
push
cwtl
imul
movsb
int
jno
xchg
fistl
inc
push
pop
vpaddusw
out
mov
jp
test
loopne
rolb
jbe
cmp
jp
sub
add
pop
and
cmp
setle
int3
adc
addl
std
sbb
popf
push
movsl
mov
xlat
push
int
fs
jne
cwtl
add
inc
repz
and
in
xchg
jp
mov
xchg
cs
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
pop
ret
cmpsb
les
adc
mov
xor
mov
cmpsb
movsl
push
mov
sbb
inc
lock
pop
je
cwtl
cmc
test
push
dec
nop
mov
mull
push
mov
push
inc
push
jp
es
cmp
and
mov
call
sbbl
inc
push
dec
movsb
sti
lret
sbb
fstps
ss
pop
ss
imul
test
pop
cmp
adc
fisubrl
push
popf
or
xor
push
pop
shrl
jg
xlat
and
mov
adc
cltd
push
shl
std
mov
cmp
sbb
dec
lret
xor
cmp
dec
sbb
stos
sbb
xchg
scas
mov
pop
jl
push
insl
ds
outsl
imul
lea
and
mov
push
add
mov
or
fnstcw
mov
call
push
jge
hlt
mov
jns
push
push
out
push
test
xchg
dec
and
in
xor
inc
jne
push
cli
xchg
cmp
inc
stos
sbb
out
xor
push
ret
ffree
cmova
pop
mov
cld
mov
xor
rorb
call
test
sbb
push
clc
rcll
imul
mov
out
test
mov
mov
jo
dec
add
fisttps
pop
mov
cmp
out
test
int
idiv
add
ficompl
push
or
dec
or
std
in
push
push
dec
jmp
fs
jne
fidivs
test
sbb
pushf
jo
lahf
pop
pop
push
sub
negb
dec
xor
mov
mov
clc
xor
das
push
cs
xchg
sub
sub
bnd
mov
out
sub
scas
push
mov
mov
data16
mov
bound
aam
adc
test
fwait
roll
add
incl
add
jmp
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
sbb
js
rclb
sbb
adc
push
jne
xchg
sub
scas
stos
inc
adc
mov
clc
icebp
scas
iret
push
cmc
data16
rclb
xor
pusha
int
add
sbb
push
mov
push
cltd
jbe
das
xchg
scas
rcll
test
mov
out
stos
pop
pusha
jp
push
sub
mov
sarl
dec
or
adc
push
lcall
push
or
fiadds
outsb
cmpsb
cmpsb
xor
outsb
adc
ficomps
iret
clc
movsb
xor
lret
pop
push
ret
enter
pushf
push
mov
push
jo
mov
lock
inc
sub
das
std
push
mov
pop
inc
pop
rcrl
clc
add
test
fnstsw
mov
jmp
mov
push
sbb
cs
dec
sbb
xchg
xchg
mov
fmull
push
jo
inc
dec
sbb
jle
pop
sub
push
push
js
mov
outsb
cmc
mov
fs
sbb
call
push
push
push
push
icebp
ljmp
in
or
adc
repnz
adcl
pop
pop
rcr
insl
sub
lahf
mov
dec
xchg
and
or
jne
inc
js
push
lcall
sbb
mov
mov
adc
mov
lret
sbb
xchg
mov
dec
or
sbb
jns
movsl
cs
sbb
enter
in
hlt
or
push
pop
out
dec
mov
mul
inc
push
js
dec
imul
dec
and
push
dec
and
mov
out
stos
lock
lret
test
aam
andl
push
xor
adc
ds
push
mov
jb
mov
xchg
repnz
fnstenv
push
mov
testb
pushf
add
sub
lock
or
jmp
repz
sti
out
adc
push
mov
jecxz
dec
and
call
add
faddl
loopne
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
mov
mov
int3
movlps
pop
bound
dec
mov
loope
xchg
in
popa
stos
leave
jae
dec
sbb
jne
in
cmpsb
jmp
jl
push
jns
icebp
and
lods
pop
in
xchg
in
mov
nop
inc
mov
orb
inc
fldl
divl
mov
push
dec
pmulhuw
mov
mov
loop
popf
jecxz
sub
xchg
test
cmp
mov
js
xor
xlat
adc
or
stc
inc
xchg
mov
je
mov
mov
mov
sub
loop
stos
push
les
ds
inc
movsb
mov
in
jnp
push
jmp
imul
mov
pop
or
stos
shr
jmp
call
loop
in
js
and
pop
mov
sahf
fisttpl
mov
or
jg
hlt
popf
sahf
pop
cwtl
mov
mov
push
les
push
sahf
je
cmp
add
cmp
push
inc
xchg
sub
les
aas
aam
mov
lea
sub
add
into
jo
inc
mov
loope
jnp
out
xchg
popa
dec
jb
add
call
imul
sbb
mov
push
mov
mov
mov
mov
sahf
add
mov
or
cwtl
xchg
fnsave
addr16
pop
in
inc
lahf
and
sub
jp
add
cmp
mov
daa
adc
sbb
and
mov
cli
mov
mov
mov
fisubs
dec
enter
mov
sbb
mov
mov
dec
mov
jb
jmp
or
test
mov
repz
or
mov
sbbb
movsl
stos
ret
jo
pop
adc
xor
pop
cld
push
mov
fwait
add
call
sarl
into
lahf
test
mov
data16
arpl
push
fs
xor
imul
mov
insl
add
pop
push
cltd
testl
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
and
jle
mov
adc
mov
out
pop
adc
ljmp
pop
les
popa
adc
cmp
call
cmp
sub
std
popa
push
sub
adc
scas
xor
imul
mov
fidivl
mov
ret
mov
xchg
pop
mov
gs
adc
jnp
lods
pop
jb
out
push
mov
and
std
test
sbb
pop
out
fs
jne
cmp
sbb
push
xchg
or
mov
push
push
ds
je
nop
ret
inc
lcall
lret
sbb
std
xchg
aaa
repnz
lret
fstps
inc
repnz
pop
insb
mov
push
or
push
insb
out
jecxz
jmp
aad
popf
pop
out
xchg
fcoms
xor
mov
pop
repnz
clc
lods
and
jae
cmp
scas
dec
jo
cli
add
push
lods
cmc
out
and
mov
push
jnp
sub
fadds
inc
jbe
in
enter
adc
mov
pop
mov
subb
xor
jg
inc
stos
outsb
ret
mov
add
xor
or
fdivl
xchg
inc
pusha
cmp
aas
int
or
cmp
jle
sbb
xor
daa
ja
sbb
mov
push
in
inc
repnz
es
jne
das
out
jecxz
lods
adc
add
rol
repnz
mov
scas
mov
add
popa
mov
jno
in
mov
imul
stc
adc
add
dec
iret
out
cmpsl
cmp
cli
add
insl
cmp
cmp
enter
rolb
push
in
and
jl
jne
mov
call
addr16
sub
adc
xor
or
sbb
adc
push
mov
pop
cltd
loop
add
out
enter
pop
aad
out
addr16
and
insl
push
test
test
int
dec
jne
in
cli
cmp
xchg
hlt
std
decl
mov
mov
add
mov
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
addb
cltd
or
sub
xor
rol
and
jg
and
rcr
outsl
cs
ds
mov
lea
mov
int
jnp
xor
add
lock
fistpl
lods
sbb
sub
cmp
xchg
sti
cmp
in
lds
fmulp
ret
dec
jle
out
mov
loopne
adc
orb
in
sbb
adc
test
push
xchg
lret
arpl
mov
jge
mov
push
in
dec
outsl
xchg
and
inc
sub
mov
pop
mov
pop
mov
pop
rcrl
mov
stc
mov
test
pop
xchg
adc
iret
and
jecxz
dec
cmp
jle
cwtl
pop
jge
shlb
jmp
js
mov
sub
add
lods
incb
xchg
filds
mov
outsl
sub
xchg
cmpsl
inc
mov
loop
adc
mov
dec
cmp
cmp
in
das
pop
adcl
sub
in
adc
jg
push
sarl
lahf
sub
pop
out
dec
aas
test
add
pop
enter
lock
sarl
call
jno
pop
sbb
in
into
push
loope
mov
mov
icebp
sti
pop
xor
push
mov
lea
scas
jns
dec
mov
movsb
nop
popf
dec
outsl
add
pop
and
lock
setno
mov
pushf
push
ret
pop
jle
ret
add
cmp
movl
lret
scas
decl
mov
mov
mov
lods
out
popf
sahf
stos
test
add
stos
cmp
lret
pop
sub
pop
ds
jge
hlt
xor
pop
mov
fwait
pop
add
stos
xor
cmp
cmp
push
inc
mov
bound
mov
call
or
or
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
jo
cmp
movlps
inc
pusha
fwait
loopne
sbb
and
es
in
pop
sub
cmc
mov
xlat
lods
and
and
int
xchg
push
mov
fimuls
xchg
mov
or
mov
push
mov
cmp
mov
rclb
sbb
sub
ss
sbb
mov
inc
fcompl
rolb
xorl
push
inc
rclb
xor
sub
and
popf
push
fists
add
pop
in
pushf
cmp
inc
test
or
add
int
jg
pop
inc
and
mov
jmp
rolb
fldenv
sbb
xor
or
pusha
movsl
mov
popf
push
ret
sub
cs
std
dec
jp
push
decl
cmp
neg
mov
xor
adc
imul
sarl
pop
imul
pop
jo
lods
pop
xor
xchg
xor
xor
gs
push
les
jns
push
mov
cmp
cwtl
mov
xlat
int3
mov
inc
idiv
inc
mov
cmpsl
jno
std
mov
movsl
imul
leave
push
sbb
shr
addr16
mov
adc
mov
loope
lock
jno
xor
and
mov
or
jmp
data16
fcoms
mov
sbb
sbb
inc
mov
mov
loop
jb
adc
push
push
adc
pop
or
mov
aad
xor
psadbw
fwait
gs
cmp
cmp
dec
mov
dec
xlat
inc
bound
imul
test
ljmp
repz
hlt
std
mov
popa
lock
scas
sbb
je
into
loope
popa
sbb
jb
mov
push
movsb
jo
movsb
cmpsl
movsl
xchg
mov
pop
push
mov
cmp
push
aad
lods
sbb
add
jge
lea
xor
xor
mov
call
mov
mov
mov
mov
jmp
sub
sbb
sbb
cs
icebp
mov
mov
cmc
scas
adc
adc
xor
popa
fimuls
xchg
xchg
or
xor
add
lret
flds
les
sbb
mov
pop
xchg
inc
or
mov
cmp
mov
loopne
cmpsl
or
sti
mov
aam
jge
sub
push
mov
pop
int3
jne
fildl
movsb
xchg
pop
js
pop
fcomip
rcr
cmp
mov
in
push
mov
iret
mov
inc
daa
jo
and
jae
xchg
pop
add
xchg
mov
ja
cs
jo
mov
push
mov
insl
ret
xor
test
sbb
adc
push
mov
and
in
ss
sbb
push
rolb
jle
popa
cld
lock
sbb
das
push
fnstenv
add
push
mov
inc
jne
icebp
stos
cmp
or
jp
jae
cmp
call
push
mov
mov
or
jecxz
or
mov
outsb
mov
add
push
loopne
cs
incl
addr16
mov
pop
mov
push
and
mov
cld
pop
daa
and
mov
in
sub
jnp
add
xchg
sbb
jp
andb
and
data16
pop
outsb
icebp
jnp
clc
scas
shl
pop
xchg
mov
pop
sysenter
movsl
mov
mov
out
and
pusha
mov
cmpsb
es
test
cmp
mov
hlt
jne
mov
cli
cmp
add
test
pushf
cmc
out
mov
xchg
mov
inc
loop
pop
gs
sbb
mov
aam
add
pop
fadd
push
inc
dec
fldl
cmp
scas
jbe
ret
adc
pop
lods
cli
jo
fadd
push
adc
or
or
dec
pop
lahf
jne
imul
outsb
pop
fiaddl
iret
xor
int3
mov
popa
inc
inc
or
mov
jb
mov
mov
in
cmp
adc
dec
scas
or
and
xor
je
imul
or
add
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
js
stos
adc
adc
out
pop
sti
inc
popf
mov
cmpsb
scas
push
ret
int3
aam
pop
mov
mov
or
call
gs
mov
jge
mov
push
iret
lcall
jecxz
cmp
pop
daa
sub
je
sub
test
out
xchg
imulb
and
and
int3
xchg
es
inc
repz
insb
int3
push
loope
loope
jp
inc
cmp
push
jns
pusha
cmp
mov
lret
int
jne
movsl
xchg
mov
jmp
loopne
test
cli
lcall
sub
mov
xchg
pop
jge
mov
cmp
shl
cmpsb
pushf
scas
cmp
xchg
sahf
call
adc
or
mov
mov
jne
dec
mov
mov
rol
mov
lds
adc
mov
insb
cmp
rorl
pop
dec
push
icebp
xor
sub
sbb
sub
mov
adc
into
jns
shl
push
mov
mov
sbb
lods
mov
stc
loope
mov
push
xchg
jge
fsubr
inc
push
jbe
sbb
pop
into
aam
jecxz
cmp
cwtl
or
xor
push
xchg
or
xor
js
mov
outsb
adc
sub
imul
pop
mov
fidivrl
add
push
jmp
and
lea
mov
jnp
jecxz
stc
sahf
jge
mov
ja
fwait
pop
shl
or
out
scas
cmp
mov
jne
mov
insb
loope
jno
sahf
pop
push
push
out
xor
dec
out
and
icebp
std
cmp
jne
movsl
cmp
sbb
cmpb
add
pop
mov
sahf
mov
leave
dec
enter
enter
mov
fmuls
ret
and
cmpsl
cld
out
mov
pop
lret
clc
popf
test
xor
adc
enter
stos
into
and
pop
mov
call
sbb
xor
mov
call
or
or
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
outsb
insb
data16
adc
adc
mov
ja
rclb
pop
jmp
xor
inc
enter
outsb
ss
dec
cmp
xor
insb
loopne
lods
add
fldenv
or
loope
test
lret
iret
and
negl
xor
wbinvd
mov
inc
jo
mov
aam
xchg
hlt
xor
in
jns
movsb
movsb
ficoml
cmp
outsb
xor
pop
loop
xor
sbb
jns
out
xchg
jnp
and
xor
mov
ror
lcall
lods
hlt
aaa
lods
fnstsw
mov
rcr
popf
adc
pop
ja
or
xrelease
imull
dec
sub
mov
in
out
in
call
dec
pop
mov
lret
lds
xor
xchg
xchg
aad
mov
jae
shlb
flds
imul
into
add
mov
and
popf
pop
insl
cmp
jmp
push
xchg
clc
fistl
inc
mov
mov
mov
mov
addb
or
and
leave
imul
aad
orb
dec
mov
jne
jnp
cmp
roll
mov
inc
cld
or
mov
inc
fs
imul
repz
sbb
mov
sti
inc
jecxz,pt
xchg
push
xchg
adc
sub
nop
imull
data16
fisubrl
add
fsubrp
push
or
repz
mov
pop
adc
mov
mov
fs
add
push
imul
scas
xchg
ret
pop
fs
dec
mov
mov
test
add
adc
lock
cmp
sahf
sti
sbbb
lcall
jp
dec
adc
fcmovb
xor
sub
pop
or
xor
add
dec
lea
and
jo
inc
in
lds
lock
dec
sbb
les
ss
push
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
addr16
pop
lods
push
mov
adc
xchg
pop
cmp
jmp
or
leave
jmp
repnz
mov
pop
test
jge
or
dec
or
xchg
outsl
mov
mov
sbb
jnp
cmp
in
adc
ret
movsl
movsl
ds
dec
jp
out
push
xor
jo
pushf
xor
addl
punpckldq
scas
scas
cmpsb
or
pop
sbb
or
adc
idiv
push
xor
cmp
mov
mov
jmp
negb
adc
popa
or
and
out
icebp
decb
mov
xlat
lret
xor
adc
jno
jbe
popa
mov
hlt
push
xor
in
mov
and
ja
pop
fcmovnbe
jl
jbe
cmpsl
adc
dec
fsubl
inc
ja
dec
testb
adc
xchg
pop
mov
cmpsl
jge
scas
test
push
adc
sub
lods
xchg
or
lcall
or
aas
lods
jns
stos
stc
sub
cli
add
fdivrp
iret
in
dec
lret
es
sbb
adc
pop
or
adc
and
test
push
pop
pop
stos
cmp
cld
fsubrl
mov
adc
sub
addb
arpl
mov
jae
jns
clc
mov
cmpsb
aaa
mov
inc
pop
push
and
lods
mov
outsb
icebp
fildll
jbe
dec
pop
and
mov
dec
mov
push
ret
repnz
xchg
lret
pushf
adc
mov
imul
fstpt
inc
pop
lods
lret
sub
push
jge
addr16
pop
inc
push
imul
out
lret
lods
cmp
and
add
pusha
push
js
cmc
es
aas
bnd
insl
lds
mov
xabort
sub
pop
jp
jmp
mov
mov
push
inc
push
or
mov
mov
movsb
inc
inc
sub
mov
mov
fs
inc
mov
je
imul
or
add
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
arpl
aad
adc
adc
jge
out
inc
jecxz
sub
js
add
push
pop
rcrl
dec
rcl
fildl
out
sbb
sbb
insl
sbb
dec
xchg
test
mov
push
imul
inc
test
test
test
mov
or
hlt
cmp
pushf
sub
and
lret
jmp
popf
jo
cmp
push
cmp
fdivl
inc
outsb
push
sub
je
negb
or
inc
ja
push
idivb
inc
lret
test
out
pop
lret
mov
cld
pop
adc
cmp
xchg
lret
test
jne
in
xor
out
mov
cmp
sub
pop
jnp
icebp
jo
cld
inc
pop
lret
mov
mov
lcall
notb
mov
gs
nop
mov
adc
mov
jle
or
imul
out
push
mov
mov
sub
jg
fsubl
lods
push
lret
mov
pop
inc
outsb
mov
inc
int
push
inc
xor
jmp
or
icebp
ret
jo
cmpsl
fbstp
mov
and
pop
jns
mov
sub
fistpl
mov
jne
dec
clc
xor
out
fidivl
xchg
frstor
jnp
pop
mov
out
push
clc
mov
xor
jp
data16
jmp
or
scas
mov
pop
jb
dec
addr16
les
jge
outsl
and
push
pop
arpl
sub
dec
jns
inc
adc
outsl
fstpt
out
clc
dec
ljmp
push
dec
mov
adcb
xchg
sub
out
int3
dec
xor
or
pop
mov
pop
scas
lods
pop
xchg
sbb
ficoms
mov
adc
adc
mov
dec
ss
out
mov
mov
fiadds
jmp
adc
inc
cmpsl
push
mov
stos
pop
cmpsb
mov
adc
push
cld
loope
inc
xlat
push
out
mov
pushl
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
fisubl
push
lcall
mov
pop
ret
mov
jne
xchg
daa
stos
jo
push
sub
pop
pmulhw
roll
stos
mov
loop
in
test
loop
xchg
xlat
jo
aam
mov
push
sub
test
jmp
mov
pop
pushf
iret
mov
fidivrl
push
xlat
inc
mov
mov
lcall
adc
mov
dec
or
push
xorb
pop
and
mov
daa
inc
xchg
jnp
dec
inc
sbbl
mov
pop
mov
or
push
fsubp
and
jae
jge
add
cmp
push
int
cmp
xor
inc
adc
int
in
out
out
and
push
mov
push
jno
mov
add
xchg
scas
test
push
data16
jns
lock
jge
cmp
shl
test
sbb
incl
fld
jbe
xor
inc
test
sbb
mov
cmc
jne
in
shlb
fistpll
mov
dec
pop
iret
push
mov
and
xchg
inc
or
imul
jmp
data16
fisttps
sub
stos
in
repz
ret
mov
xchg
sbb
fmuls
shll
dec
pop
sbb
cld
jmp
push
mov
cmp
lahf
mov
sub
jo
out
sti
pop
xchg
shll
outsb
cmc
pop
insb
addr16
push
loopne
jnp
adc
jnp
and
fiadds
hlt
out
lods
scas
dec
jne
jo
jle
dec
and
mov
ds
call
lret
stos
adc
jmp
mov
pop
out
sbb
in
leave
test
cmp
insl
mov
cwtl
fbstp
repz
adcl
inc
and
mov
xor
push
repnz
mov
add
cmpsl
jnp
jge
cltd
inc
ds
inc
jbe
mov
push
sbb
mov
and
addr16
stc
xor
in
add
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
jle
xchg
adc
adc
or
outsl
aaa
nop
pop
outsl
sbb
cmpb
pop
sarb
or
fisubrs
and
sub
add
xor
or
out
sub
push
jmp
dec
scas
aam
scas
mov
push
add
sti
test
push
fisttps
add
jns
dec
cmc
cli
jecxz
or
mov
idiv
or
leave
lcall
inc
pop
xlat
inc
aad
add
shll
xchg
dec
xchg
xlat
mov
xor
xchg
ds
es
repnz
lock
lret
lret
loopne
adc
in
or
stc
loope
add
adc
test
lret
mov
rcrb
sbb
push
adc
push
or
and
neg
xorl
out
std
xchg
int
jbe
jecxz
daa
addb
xor
xchg
mov
rcl
xchg
mov
negl
fwait
cmpsb
lcall
sub
dec
jae
inc
jae
divb
jg
repz
inc
test
pop
outsb
jo
sar
movl
sahf
sahf
inc
cmpsb
and
fwait
mov
xchg
sub
rcll
push
xlat
aam
ficoml
mov
push
stc
aaa
fwait
ss
push
movsl
stos
lret
xor
scas
xor
lea
sbb
sub
aad
out
std
adc
or
push
pop
add
cld
dec
xor
pextrw
add
icebp
xchg
cwtl
aas
js
dec
scas
stc
jno
add
addr16
pop
ror
sub
jo
cltd
mov
orl
dec
movl
add
xlat
lock
mov
push
ja,pt
add
or
xor
add
sbb
cmp
xchg
adc
jmp
les
cmp
loop
mov
sti
lods
lock
sub
pushf
cs
push
js
inc
mov
push
xchg
outsl
jno
test
add
ror
push
idivl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
mov
mov
adc
sub
out
jno
inc
mov
rcl
jnp
jle
les
ficoml
sub
and
pop
and
cmp
test
gs
mov
mov
push
fidivs
pop
push
or
cli
ret
adc
mov
repz
scas
pop
xchg
dec
sahf
sub
dec
mov
into
sbb
mov
xchg
sub
xor
daa
add
rcll
roll
inc
jno
mov
mov
xchg
fwait
mov
hlt
popa
cmpsl
cld
cmpl
neg
mov
add
fs
shlb
clc
push
or
scas
rcl
mov
es
push
lahf
xor
jge
imul
mov
fdiv
pop
and
mov
popa
mov
cwtl
pop
out
mov
and
jp
ret
into
push
repnz
adc
divb
mov
cwtl
xchg
loop
mov
ret
ljmp
cld
mov
cmp
lods
push
cmp
outsb
mov
out
iret
xchg
shrl
pushf
scas
shll
insb
adc
arpl
mov
aad
dec
js
mov
mov
and
add
push
aaa
pop
repnz
loopne
cmp
hlt
push
sti
xor
mov
outsb
imul
xor
sub
pop
in
adc
mov
out
push
cmp
xchg
fwait
negl
cwtl
dec
pop
push
mov
sub
das
mov
push
cmpsb
stos
dec
adc
out
push
out
imulb
cmovs
add
mov
mov
push
sub
out
xor
sbbl
out
repnz
aaa
mov
fcompl
in
mov
pop
in
js
inc
sbb
test
outsl
stos
mov
dec
outsl
sub
scas
sbb
addr16
mov
xchg
push
xchg
adc
xor
mov
pushf
shll
test
pop
outsl
xchg
pop
out
ja
add
enter
test
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
lods
xchg
js
mov
adc
mov
pop
xchg
aaa
mov
cltd
jmp
les
shll
leave
hlt
mov
shrl
sub
jns
test
add
ror
mov
orb
pop
shll
push
fistl
push
xchg
out
xor
xor
cmp
outsl
dec
mov
aad
adc
shlb
bound
push
aas
shr
jle
aas
adc
outsb
push
popfw
xor
jns
jb
fcoml
mov
movsb
int3
fbstp
in
mov
fstl
mov
jae
add
jbe
imul
movsl
dec
movsl
xor
notb
mov
inc
pop
xor
btr
cmp
hlt
mov
push
jmp
xor
rclb
xor
jns
shlb
cmc
cmp
orb
sub
mov
and
pop
push
pop
idivb
ret
jno
add
xchg
cmp
popw
pop
mov
mov
popa
sti
lods
add
mov
fisubl
sub
pop
adc
mov
push
jae
ja
popf
aas
popf
cli
hlt
jl
mov
pop
mov
pop
push
mov
lret
sbb
cmc
shll
call
cmpsl
dec
add
adc
push
sbb
pop
mov
icebp
cmc
stos
loope
stos
repnz
les
nop
dec
dec
push
mov
popa
push
cmc
popl
test
pop
pop
pmulhuw
pop
and
sub
adc
mov
sub
adc
jp
inc
pop
lahf
jl
jg
jle
xorl
mov
pop
arpl
aas
push
sbb
mov
push
cld
pop
lods
fdivrs
fucomip
push
outsb
movsl
sbb
push
pusha
xchg
mov
mov
xchg
cmp
lods
call
jmp
jo
sahf
shrb
daa
out
jo
and
call
adc
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
adc
adc
adc
adc
sbb
daa
jno
lret
cmp
pop
movsl
or
cmpsb
and
bound
sub
test
loopne
mov
add
push
xor
dec
inc
loope,pt
dec
mov
call
adc
dec
pop
repnz
mov
iret
mov
ljmp
ret
xor
roll
cmpsl
sbb
mov
mulb
fstl
xchg
cmp
add
push
xchg
daa
cli
dec
js
push
mov
imul
jecxz
icebp
sub
mov
loopne
rclb
push
fsubs
or
nop
jp
sub
mov
sbb
dec
jne
scas
int3
jp
sbb
add
add
mov
ret
pop
cmp
xor
push
pop
sbb
push
fcoml
dec
add
jo
sbb
mov
fnstcw
add
fcomps
or
imul
ss
jns
lea
ret
insl
xchg
sahf
in
mov
out
dec
sub
sub
or
sub
sub
repnz
lock
cltd
inc
jge
fwait
pushf
xor
pop
sbbl
push
mov
arpl
or
in
jns
ljmp
xchg
loopne
jns
shl
cmp
jo
in
iret
test
push
imul
mov
movb
mov
sti
lret
push
sbb
lahf
jle
iret
jle
ficompl
mov
mov
lock
mov
rcll
inc
lea
sbb
cmp
pop
fidivs
mov
fisubs
mov
fsts
call
or
cmp
push
divl
lret
dec
push
ja
popf
movb
das
sbb
sbb
push
pop
nop
xchg
cmp
or
xor
push
leave
inc
sbb
pop
adc
adc
in
pop
sti
cmp
aam
xor
vmwrite
inc
jae
aam
aad
leave
js
adc
mov
sub
bound
sbb
ss
shll
test
ljmp
mov
adc
sbb
add
call
pop
inc
xchg
dec
fdivr
sub
sbb
cmp
jle
rcrb
push
jae
loop
push
and
sbb
jg
mov
scas
arpl
jnp
aam
lea
push
and
push
aas
cmp
out
ret
movl
mov
dec
es
repnz
mov
cmp
lods
outsl
fs
lret
xchg
outsl
xor
sub
rorb
add
xchg
xchg
call
dec
in
xor
or
xchg
and
jl
bound
jl
and
push
pop
das
jne
mov
shlb
iret
movsl
bound
mov
and
scas
rcrb
sti
dec
mov
xlat
push
lods
es
mov
enter
add
not
push
cld
pop
inc
subl
test
mov
mov
jb
sub
mov
xchg
imul
mov
ficoms
mov
aad
lcall
add
les
jno
sbb
and
lret
push
fsubs
adcb
orl
pop
adc
fldenv
add
push
lods
ret
out
or
add
sbb
mov
push
jl
rcrb
test
shll
iret
sub
dec
test
test
dec
imul
dec
pop
fstl
mov
in
add
dec
or
mov
leave
cltd
gs
cmpsl
in
lcall
push
in
pop
and
aaa
mov
sbb
fstps
sub
jp
jb
jae
adc
sub
hlt
ret
mov
mov
in
cs
cwtl
push
xchg
fdivrl
loopne
adc
pop
es
xchg
pop
mov
fcoms
nop
fnstcw
or
xchg
dec
leave
fisttpl
ret
movsb
pop
mov
lret
ja
fidivrs
xor
and
jb
mov
clc
pusha
or
xorl
push
sbb
and
addr16
dec
adc
ret
mov
xchg
mov
mov
test
jb
add
scas
jg
add
ret
cmp
xadd
in
fs
inc
pop
xchg
pop
xchg
xor
sub
movl
iret
out
pop
jae
xchg
jmp
ret
pop
pop
fwait
insl
push
pop
xchg
test
dec
push
mov
xchg
scas
loopne
or
sbb
loope
popf
int
pop
cmp
mov
xor
ja
jbe
clc
cmp
jge
mov
fisttpl
adc
sbb
sub
jbe
pushf
lret
inc
adc
enter
in
js
cmp
cmp
xchg
xlat
mov
add
sarb
xor
fsts
loope
psubusw
lods
into
xor
arpl
inc
inc
pop
xor
loopne
imul
aas
mov
dec
fdivl
out
lds
notl
dec
push
rdmsr
sbb
xor
sahf
sub
das
jecxz
lock
add
xchg
dec
dec
sub
ljmp
imul
dec
fwait
test
inc
mov
clc
or
bound
call
jle
xchg
out
sbb
mov
aas
pop
sub
add
cmp
call
into
xlat
loop
jg
adc
loope
and
mov
xorl
xchg
mov
in
or
cmp
iret
adc
dec
fadd
dec
dec
loopne
xchg
adc
pop
mov
es
mov
jbe
mov
orl
pop
dec
lret
cmp
idivl
jbe
xchg
insb
stos
pop
push
pop
push
mov
sbb
gs
or
lds
cmpsl
and
pop
add
xor
or
pusha
sbb
fstpt
in
inc
aaa
mull
into
mov
xchg
push
sbb
pop
loop
mov
data16
vpxor
cmp
fwait
lahf
out
orb
mov
mov
fwait
or
stc
lods
add
inc
jl
in
mov
jg
inc
movsb
push
clc
add
mov
push
lcall
stos
sarb
push
iret
pop
stos
jo
push
pop
sub
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
