push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
adc
sbb
sbb
sahf
adc
sbb
std
push
ffreep
mov
mov
cmp
cs
adc
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
jp
clc
xchg
xorb
jle
sti
xchg
mov
arpl
jmp
adc
aam
push
or
and
lcall
cmp
movsl
inc
add
jmp
and
lretw
sbb
push
mov
inc
fsubrs
mov
jmp
and
fldl
mov
shll
dec
aas
pop
and
andb
dec
repnz
cltd
notl
out
aam
wbinvd
cli
pop
inc
fdivs
pop
mov
stc
std
nop
add
shr
imul
lret
inc
cmp
cltd
dec
mov
push
lock
jmp
adc
repz
repz
mov
out
popf
popf
xchg
mov
mov
shll
ret
pop
and
adc
and
mov
mov
popf
and
or
stos
cmp
hlt
sahf
cmp
cmpsb
push
add
jo
lcall
pushf
sti
ds
inc
or
lods
sub
mov
mov
mov
xor
inc
mov
sub
pusha
jns
jns
inc
jnp
les
fs
out
push
push
enter
push
sti
jo
les
pop
ja
movsb
leave
bound
test
shll
hlt
dec
loop
scas
pop
add
test
cmpsb
xchg
faddl
pop
jle
xor
movsl
adc
pop
xchg
rcr
inc
jecxz
or
lea
xor
xor
enter
inc
int
inc
ds
repnz
addr16
pop
jno
inc
sbb
sbb
inc
mov
pop
xor
and
idivb
add
hlt
lcall
iret
fstpl
outsb
int
pop
in
jl
aaa
loope
jbe
sarb
xchg
rcrl
pop
sub
dec
mov
xor
xchg
adcl
dec
sahf
jp
mov
lods
jno
mov
mov
dec
sarl
in
pushf
cmpsb
xchg
nop
outsb
lods
icebp
sti
pop
jbe
and
orb
std
inc
fwait
imul
lock
loope
mov
ja
fisttps
divl
and
xchg
cmp
adc
push
mov
xchg
xlat
push
pop
sbb
mov
adc
div
push
mov
jg
in
test
pop
xlat
push
pusha
push
cmpsb
dec
and
push
scas
scas
or
aas
sti
cld
xlat
mov
sbb
movsb
stc
add
les
js
mov
or
enter
dec
std
ljmp
cmp
push
and
push
mov
pushf
imul
loopne
movsl
pop
iret
jge
dec
imul
ds
scas
aad
push
mov
dec
add
cld
jbe
roll
popf
mov
in
gs
add
pop
aas
sahf
xchg
repz
in
mov
leave
cmp
lods
sub
xchg
call
loop
cmpsb
ds
stos
addb
loope,pn
fisttpl
adc
pop
stos
filds
aaa
lods
jecxz
outsl
cmpsb
push
dec
push
scas
mov
addr16
int3
pusha
js
jecxz
cmp
cli
dec
and
xchg
imul
insb
cmp
xchg
mov
in
cmpsl
inc
or
push
jmp
int
mov
popf
sbb
aad
js
sub
ljmp
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
jl
adc
sbb
imul
popa
daa
std
iret
lods
jbe
push
stc
leave
out
je
testb
xlat
movsb
in
cmp
xor
and
stos
ja
adc
lods
lahf
jo
mov
iret
mov
pop
inc
pop
in
cmp
ficomps
mov
dec
xchg
jle
stos
push
neg
inc
pop
pop
scas
mov
dec
sar
out
add
add
push
popa
adc
cs
pushf
mov
adc
sub
jmp
xchg
mov
je
jle
test
mov
es
lock
or
adc
mov
hlt
jnp
adc
lods
fisttpll
fld1
ja
jl
sarb
dec
push
fsubrl
aam
stos
loop
sbb
xor
cltd
inc
in
test
arpl
pop
lahf
loopne
xor
jb
mov
push
push
jl
in
sbb
das
xchg
loop
jne
xchg
nop
and
loopne
mov
test
fs
mov
cmpsl
decb
pop
xor
imul
pushf
mov
adcb
mov
adc
inc
pop
add
cmp
mov
cmp
iret
adc
cwtl
stc
jmp
sub
add
push
sbb
mov
movsbl
std
adc
xchg
outsl
out
faddp
cmp
mov
popf
jne
sub
movsl
ret
push
mov
mov
and
ss
pop
scas
lock
mov
mov
xchg
mov
enter
dec
decl
xchg
test
arpl
in
iret
mov
fcmovnbe
inc
je
xor
jle
pushf
lods
stc
pop
popa
std
pop
xor
lock
pop
jp
adc
cmpsb
dec
iret
cmp
mov
xlat
jb
cmp
sbb
jne
insl
xchg
repnz
cmpsb
rcrb
movsb
pop
pop
pop
lret
scas
shll
pop
out
out
mov
pop
and
imul
xor
lret
xchg
fimull
popf
dec
pushf
flds
push
add
shlb
xchg
jne
or
popf
xchg
cmpl
jge
push
mov
sbb
cmp
mov
adc
stc
pop
adc
lods
push
mov
cmpl
out
jns
jns
or
add
test
mov
jg
sub
insb
mov
and
cld
jp
ss
sahf
fadds
sbb
xchg
adc
scas
test
addr16
add
pop
bound
mov
inc
movsl
cmp
adc
xor
in
xor
fbld
popf
les
insb
cmp
cmpsb
js
push
dec
fwait
inc
xchg
cmp
and
clc
lods
mov
in
lds
jns
sbb
xorb
call
jp
call
std
pop
add
xchg
add
adc
mov
add
or
and
in
sbb
adc
cmp
mul
xchg
rcrl
push
cmovg
scas
xchg
lock
movsl
repnz
push
fildll
popa
xchg
bnd
xor
fwait
inc
pushf
lcall
xchg
push
stos
xchg
inc
xchg
push
push
push
mov
lret
es
push
pushf
mov
jns
adc
jle
loope
xlat
lret
push
xor
xchg
fldl
push
jp
pusha
aam
cmp
mov
ljmp
gs
repz
adc
inc
mov
jmp
pop
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
mov
sbb
sahf
adc
sbb
sbb
stos
dec
mov
ljmp
jno
jle
push
fstpt
lods
in
popa
xor
dec
mov
sub
and
and
loope
mov
lea
lods
mov
sbb
push
inc
pop
and
add
mov
mov
dec
std
out
mov
in
jno
das
sarl
scas
push
les
ficoms
stc
pop
out
mov
xchg
loope
mov
fs
cmp
xchg
pushf
sbb
xchg
cmp
repnz
lea
std
fidivrl
pusha
loope
scas
sbbb
cmp
sbb
sub
cmpsb
js
pop
out
scas
mov
cmpsb
andl
push
mov
inc
jno
dec
ja
repz
ja
mov
dec
test
jb
mov
scas
into
mov
movsb
ljmp
xlat
jle
mov
roll
pop
cwtl
jae
imul
jecxz
jno
and
jecxz
add
subl
inc
or
das
adc
sbb
out
fdivrs
pop
xchg
je
xchg
sub
sub
add
xor
in
jne
cmpsl
loope
or
or
pusha
bound
mov
lods
orb
push
or
std
jns
mov
dec
repz
push
insl
les
inc
lods
mov
int3
aas
mov
cld
lcall
ror
in
or
neg
xor
enter
mov
xchg
adc
sub
jge
mov
cli
fwait
pop
int
jge
sub
iret
subl
jmp
mov
jne
pop
or
mov
jnp
shl
fdivs
ljmp
cmp
int3
scas
add
mov
fcomps
bound
fcomps
or
xor
xchg
or
out
dec
stos
sahf
mov
cltd
aaa
jle
stos
pop
adcb
jp
out
push
push
negl
xor
dec
jl
mov
lods
xchg
sub
pop
movsb
push
cmc
cmp
mov
pop
call
jae
arpl
mov
pop
mov
add
testl
arpl
out
cmp
inc
cmp
dec
outsl
out
insb
push
mov
andb
std
inc
movb
cmpsl
sbb
iret
dec
sub
lret
enter
shlb
or
mov
fsts
adc
add
or
push
dec
dec
and
pop
test
arpl
dec
cmp
stos
addr16
test
jbe
subb
fists
movsl
adc
ja
insl
je
xchg
lods
in
pop
mov
push
jmp
mov
jp
out
adc
cwtl
sbb
and
fstl
sub
out
sub
inc
shll
sbb
mov
mov
mov
mov
mov
pop
scas
movsb
add
sub
and
dec
fimuls
push
mov
jmp
mov
dec
and
cs
sbb
inc
and
jae
test
ret
scas
or
push
faddl
icebp
adc
out
xchg
daa
or
int
mov
dec
add
mov
stc
push
jp
inc
fdivl
leave
int3
xchg
dec
xor
cmc
outsl
cmp
mov
movl
mov
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
divb
movsb
jmp
dec
dec
es
mov
test
or
std
xor
sub
int
mov
ss
xchg
pop
cmp
cli
push
sub
enter
push
mov
popa
ret
cmc
movsb
mov
lds
aam
xchg
ds
inc
add
jne
adc
fwait
or
xor
loope
fdivrl
and
orl
test
push
scas
mov
inc
stos
or
push
xor
mov
fstpl
push
inc
fistpl
cmp
scas
leave
and
add
jbe
jb
in
push
dec
rcll
dec
adc
and
insl
cmc
mov
stc
sti
aas
rolb
push
jbe
xlat
in
mov
xlat
call
and
sub
ss
push
out
aaa
jno
dec
adc
lods
fsts
ds
ret
pop
loopne
mov
cmp
sti
test
jge
shlb
push
push
cwtl
xchg
adc
cmp
stc
mov
je
mov
cmp
add
loop
jmp
xchg
pushf
lret
mull
or
jo
lods
dec
xor
jle
data16
daa
sub
leave
repz
std
sub
in
lahf
imul
jb
jb
enter
sarb
xlat
ja
dec
aam
push
sbbl
js
push
cmc
aad
jo
inc
jmp
test
dec
pusha
xchg
into
pop
movsb
aam
dec
adc
inc
test
stc
mov
mov
cmc
jmp
pop
mulb
pushf
and
xlat
out
xor
xlat
js
pop
dec
adc
inc
lea
or
dec
sub
push
rcl
sbbb
or
pop
jno
sub
lea
mov
inc
fisttpll
lods
lahf
sub
dec
adc
out
or
mov
jle
xor
cmpsb
add
in
adc
lock
andl
mov
mov
clc
outsl
sbbb
cmp
ja
mov
das
js
in
jecxz
or
and
jl
jmp
push
aas
xchg
fmuls
mov
cmpsl
xor
les
add
xchg
ret
add
fisttpl
mov
pop
mov
xchg
xor
sbb
fnstcw
imul
mov
aad
xor
enter
or
aam
add
push
jno
push
inc
into
cmpb
inc
pusha
inc
pop
mov
xor
addr16
dec
pop
scas
insl
lret
bound
lods
xor
inc
leave
jp
loop
xchg
jne,pt
cltd
in
mov
scas
inc
add
push
push
mov
in
or
dec
sbb
pop
lea
repz
in
xor
fcmovu
les
inc
dec
es
arpl
push
cli
sub
add
rcll
dec
jge
mov
fildll
rclb
inc
add
mov
fcoml
push
xchg
adc
cmp
fdivrs
in
mov
cld
insl
pop
mov
and
jne
test
mov
vcmpps
inc
pop
insl
mov
mov
sahf
xor
mov
in
jb
cwtl
addr16
fadd
cmpsl
xchg
and
aaa
sub
int3
add
dec
fisubrs
sub
mov
ret
mov
and
mov
cmp
pop
push
in
push
dec
or
out
mov
cmp
add
mov
aas
addl
add
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
mov
sahf
adc
sbb
push
fists
lea
jns
mov
sub
dec
or
mov
mov
imul
or
dec
pushw
cwtl
pusha
pop
rorb
ljmp
stos
pop
mov
loope
or
mov
dec
clc
jne
and
dec
scas
mov
nop
add
and
pop
lea
negb
sbb
in
int
mov
inc
xchg
popa
mov
sub
outsl
gs
dec
roll
pop
cld
mov
repnz
popa
jns
in
jge
mov
sarb
jecxz
xchg
dec
mov
or
add
insl
cmp
sub
ja
jmp
jge
cltd
push
pop
xchg
adc
aaa
xor
int3
hlt
ret
leave
lcall
bnd
out
pop
add
ljmp
xchg
lock
insb
shll
std
gs
or
das
mov
sbb
shr
and
or
cmpsl
push
jae
inc
dec
add
mov
cmp
mov
sub
cmp
repnz
xor
xchg
in
fisttpl
push
push
aad
lds
adc
pop
mov
repnz
repz
add
pusha
push
sqrtps
addr16
or
or
add
adc
insl
out
xor
and
sub
pusha
dec
lcall
jp
add
xor
adc
xchg
push
es
lcall
pop
into
sbb
cli
inc
in
test
lret
xchg
adc
cmpsl
mov
mov
es
mov
and
clc
rcr
dec
xchg
mov
out
add
xchg
xor
or
fwait
fwait
adc
xlat
push
clc
rclb
push
push
sub
jno
bndldx
add
cmp
fld
scas
jl
cmpsl
mov
xor
jg
xor
push
lods
addr16
pop
adc
not
cmp
add
push
movsb
dec
mov
fildll
xchg
inc
fbld
aad
cmpb
arpl
adc
jne
divb
pop
repz
cltd
inc
repnz
add
jbe
mov
dec
and
mov
mov
push
sti
inc
add
jbe
pop
in
rolb
mov
mov
mov
mov
xchg
ja
cmpsl
push
mov
xor
sbb
jecxz
cld
push
andb
lret
jae
cmp
xor
shlb
sub
ret
mov
dec
pusha
js
mov
fcmovnbe
sub
lds
fldenv
mov
add
fnsave
cmp
test
xchg
dec
loop
je
mov
push
dec
inc
mov
mov
pop
data16
jecxz
call
out
sahf
inc
pop
ds
add
fsubrs
pushf
aas
pop
sahf
push
push
jb
lret
jae
pop
leave
mov
add
xchg
mov
addr16
cltd
sahf
xchg
inc
jmp
xchg
sub
or
lret
mov
add
pop
lret
cmc
add
ljmp
sub
xor
jmp
mov
out
push
pop
jb
mov
mov
rolb
lock
inc
and
mov
pushf
hlt
ljmp
paddusw
in
mov
jns
sbb
in
mov
fisttps
xlat
addl
inc
add
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
mov
sahf
adc
sbb
out
mov
notb
sbb
mov
xchg
inc
xor
ja
cli
ds
fcoml
test
imul
dec
add
andb
bound
cld
push
xchg
sub
pop
xchg
cmpsb
add
xor
jo
cmc
xlat
ja
mov
sti
jno
and
push
out
dec
fisttps
inc
mov
repnz
xchg
into
stos
mov
into
ret
jae
jns
andb
add
shlb
fistpll
lods
dec
js
addl
ljmp
sti
aas
ja
in
mov
mov
icebp
mov
inc
aad
jae
push
jbe
dec
xchg
xchg
xor
jge
pop
inc
pop
out
outsb
push
jb
adc
dec
dec
push
imul
xchg
and
in
ja
pop
sub
lahf
adc
xor
popf
dec
jmp
adc
es
std
adc
inc
jp
add
popa
push
pop
aad
mov
or
jg
sub
cmp
and
xor
aas
fistps
mov
decl
sub
pop
dec
shll
fs
scas
mov
je
xlat
cmc
fucomp
test
pop
inc
lock
negb
test
lods
mov
clc
pop
inc
add
push
movsl
sti
stos
ret
stos
test
cltd
and
mov
fs
inc
xchg
in
fistpl
ja
aaa
clc
adc
idivl
mov
and
bound
leave
insb
mov
xor
mov
sub
pop
loopne
call
test
sahf
negl
mov
fiadds
in
data16
xchg
out
je
mov
movsl
ljmp
lcall
stos
imul
xchg
sub
nop
bound
cltd
ljmp
xchg
sbb
pop
push
xchg
push
cmp
inc
icebp
cltd
mov
sbbl
jmp
jle
or
pop
sub
sub
jecxz
ret
cmp
pop
out
and
pop
cs
push
adc
ficomps
loopne
daa
icebp
ja
mov
test
cld
cmp
cld
shrb
out
mov
clc
in
and
cltd
push
test
or
daa
xchg
xor
aam
outsb
or
outsl
out
daa
inc
imul
xor
adc
pop
jb
lods
ss
sbb
mov
mov
test
fcmovbe
jo
sub
adc
xlat
arpl
stos
sub
jno
test
into
outsl
xchg
push
push
js
dec
sub
push
dec
popf
ror
lods
push
push
das
and
xor
fyl2xp1
fcmove
stos
test
adc
jo
pop
loop
stc
add
add
es
cmp
cmc
mov
push
mov
enter
push
movl
lret
adcb
lds
dec
mov
inc
les
pushf
mov
adc
cwtl
add
movsb
pop
loop
push
cli
push
or
adc
ror
adc
mov
in
idivb
test
or
add
jle
fcoml
push
jne
fimull
aam
mov
andl
in
cmpsb
mov
std
push
jmp
popa
shll
std
mov
scas
jecxz
cmpsl
jno
xor
lahf
testl
rorb
stc
xchg
and
loopne
mov
cmp
mov
inc
adc
out
int
jnp
adc
int3
inc
or
movsl
loopne
daa
or
scas
sbb
fisttpll
fstpl
fimull
and
add
mov
or
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
add
stos
cmp
adc
sbb
dec
daa
fildl
fcompl
or
imul
xchg
mov
or
add
pop
popa
sti
mov
or
cmpsl
addl
in
stc
icebp
mov
push
pop
jo
mov
and
sahf
inc
and
aam
push
push
add
cmpsl
or
movb
stc
shll
cmc
inc
test
inc
aas
loopne
adc
sbb
sub
repnz
xchg
mov
mov
and
sar
mov
jg
push
mov
daa
jno
push
fldl
mov
cs
and
add
lret
jl
aas
insb
lds
push
stos
es
push
jp
ret
inc
fdivr
ffree
add
lea
subb
fs
ret
aas
add
test
xchg
mov
push
sbb
cs
or
pop
fdivl
mov
sub
pop
stos
lods
pop
ja
push
jo
or
push
jle
repnz
pop
fxch
sti
fwait
jle
insb
jno
cmp
call
pop
fstpt
sti
mov
push
int3
stos
es
fmulp
inc
jno
lock
out
clc
or
add
sahf
mov
pusha
icebp
mov
mov
test
mov
dec
mov
sub
fimuls
sahf
inc
sub
cmpsb
jmp
jl
dec
dec
shlb
push
jl
mov
dec
les
popf
mov
enter
cld
ret
pop
add
pop
mov
sahf
movb
and
scas
xchg
stc
mov
add
mov
lds
fldenv
jbe
rcrl
pop
out
xchg
js
jmp
aam
es
jge
sub
cmpsl
xorb
jne
cmp
push
test
out
test
test
enter
pushf
outsl
and
lds
pop
push
fmuls
pusha
sti
jo
mov
adc
in
in
and
cmp
mov
sbb
jbe
lret
dec
les
outsb
mov
fucomip
xchg
stos
jns
pop
dec
shll
testb
adc
jg
sbb
push
inc
dec
scas
xchg
lds
xor
mov
into
lret
push
adc
push
or
mov
sbb
stos
pop
xor
lds
sub
nop
cmp
mov
sarl
mov
or
mov
dec
fdivl
cld
nop
push
arpl
movsb
testl
pusha
lods
mov
cli
and
bound
ret
push
sub
cmp
lods
aad
iret
and
and
loop
in
dec
xchg
aad
and
or
jl
jecxz
xchg
ficompl
mov
test
mul
roll
out
stos
mov
jle
mov
sbb
mov
out
jmp
sub
pop
jne
xor
sub
xorb
push
xchg
sbb
cmpsl
test
in
enter
ret
lcall
adc
js
adc
jne
mov
and
fcom
jne
dec
test
inc
mov
std
ret
pop
mov
es
mov
mov
ljmp
mov
ret
cmp
cwtl
or
icebp
je
hlt
add
aam
cmpsl
xlat
fs
push
enter
dec
in
cmp
movl
jne
jmp
sbb
fldt
sbb
or
adc
sbb
sti
mov
sbb
xchg
cwtl
mov
or
pop
mov
xchg
sbb
cltd
je
mov
jge
in
lret
test
aam
jbe
xlat
mov
ljmp
lods
out
aas
mov
add
push
test
add
lcall
das
jl,pn
inc
add
jl
jne
pop
or
int3
call
xlat
jmp
xlat
fmul
cmp
cmc
sbb
punpcklbw
mov
mov
je
dec
pop
sub
subb
and
int3
or
out
pushf
dec
rorb
call
mov
loope
in
and
bound
insb
mov
mov
inc
or
sarb
dec
xchg
mov
sbb
sub
rcl
out
popa
push
rolb
adc
push
dec
imul
xchg
inc
and
stc
fucomi
adc
loope
adc
ja
xor
je
shl
mov
jl
enter
jg
dec
push
push
jle
cmp
dec
sub
std
jns
stos
arpl
pop
xor
inc
stc
popa
gs
aam
fcoml
jle
or
in
aas
andl
lods
mov
xor
sub
lds
sahf
fidivrs
aam
mov
in
mov
cmp
inc
or
enter
inc
call
pop
fcomi
sub
cli
icebp
pop
xchg
mov
sub
add
roll
xchg
add
sub
mov
out
mov
push
gs
lret
test
mov
lret
xchg
mov
mov
adc
jle
dec
sbb
out
divb
push
push
scas
xchg
aaa
push
pop
add
dec
pop
pusha
or
scas
jmp
ds
xchg
dec
clc
movsl
mov
jae
jg
inc
sub
imul
cmpsb
jb
dec
mov
fcomps
lock
mov
test
movsb
rclb
das
arpl
roll
mov
mov
jnp
cmc
ret
xor
xchg
pop
cmpsb
fcomps
cmp
jne
cmp
cwtl
lahf
sbb
std
jmp
movsb
lahf
sti
mov
xor
lods
cmp
cli
cmp
push
shlb
sbb
lcall
ljmp
test
pushf
and
out
nop
adc
fs
aas
rol
daa
into
xchg
mov
xchg
loop
inc
pop
dec
std
inc
push
mov
out
sub
arpl
sub
dec
movsl
mull
push
pop
adc
in
xchg
pop
sahf
cmpsb
add
aas
icebp
or
dec
cli
dec
mov
sbb
fstpl
dec
sub
outsb
das
in
out
mov
push
mov
pinsrw
sbb
nop
cli
push
cwtl
aad
roll
in
sub
push
jp
jae
cmc
jb
clc
fs
test
push
sub
nop
fcoml
movsl
iret
sub
mov
cmp
sbb
jecxz
jb
xchg
xor
dec
push
push
mov
push
mov
cli
fisttpl
into
lret
iret
ja
jbe
jecxz
mov
pop
cmpsl
xchg
mov
mov
mull
loopne
or
lea
arpl
jns
cmp
push
dec
fwait
sbb
or
push
sbb
add
pop
xor
sbb
test
inc
dec
and
jnp
and
jns
sbb
std
repz
mov
lds
ret
mov
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
xchg
sub
mov
fbstp
je
inc
jbe
test
adc
loopne
dec
xchg
or
add
mov
push
fildll
rclb
je
jno
daa
mov
hlt
aad
lahf
adc
fsubrp
arpl
sahf
out
xchg
cmp
pop
add
adc
out
inc
cmp
fwait
nop
bound
ret
negl
sub
lret
and
iret
outsl
lods
and
mov
sbb
adc
jg
inc
les
push
mov
mov
negl
mov
gs
mov
lret
mov
enter
mov
adc
add
sub
dec
cmp
add
cwtl
in
jns
pop
mov
push
sbb
outsb
sub
fists
add
stos
push
xchg
es
mov
jns
in
xor
xchg
jp
jbe
jle
jbe
ljmp
sbb
sbb
test
adcb
push
adc
jle
roll
inc
xor
sbb
scas
ljmp
ds
inc
mov
cmp
dec
jnp,pn
out
add
pop
cltd
sahf
dec
push
lcall
ja
ja
xchg
cmp
stos
je
mov
scas
pop
nop
lcall
sbb
pop
cmc
and
fsubl
push
add
inc
push
jp
cmc
ret
pop
xor
nop
sbb
mov
test
push
imul
lea
xor
cli
test
loopne
jp
pusha
pop
dec
lret
sbb
jns
xchg
mov
jnp
or
sbb
call
xchg
test
pop
fs
js
or
rorb
in
push
mov
std
das
scas
fidivrl
push
fimuls
mov
test
gs
add
dec
push
and
mov
lret
les
xor
dec
rep
mov
sbb
push
enter
mov
cmp
cli
mov
aad
or
or
mov
jno
push
push
pop
test
and
es
push
sub
in
inc
adc
jo
test
cmp
int3
shrl
lds
or
insb
xor
jge
cmp
cmc
xchg
cmpsb
fdivl
aaa
sub
adc
mov
xchg
iret
hlt
addr16
push
sbb
andb
sub
cmpsl
mov
pop
mov
inc
inc
loope
aad
mov
or
clc
mov
adc
inc
push
jp
out
jo
popa
cmp
cmp
push
sub
mov
int
fdivl
daa
aad
pusha
cli
repz
xchg
push
fisttpll
test
mov
jmp
fwait
or
aam
hlt
dec
jge
sbb
jo
mov
mov
outsb
pop
mov
pop
in
push
shll
mov
or
repz
mov
mov
pop
mov
push
dec
out
sbb
movsl
cmp
iret
pop
cmp
or
sti
mov
mov
stos
push
lods
or
mov
xor
test
jge
das
mov
psubb
scas
hlt
sub
scas
sub
mov
movsb
or
decb
pop
adc
xchg
push
xchg
ljmp
sub
ja
jmp
sti
cwtl
add
jmp
pop
push
ret
sub
cmp
cmp
test
fldcw
ret
inc
aad
push
add
pop
insl
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
mov
sahf
adc
sbb
jne
test
stos
adc
outsl
pop
repz
js
sahf
adc
mov
aad
scas
fdivl
outsb
cltd
ss
test
shll
cwtl
fwait
aam
xchg
jg
movhps
pop
pop
mov
jp
adc
cwtl
cmp
sbb
xchg
repnz
test
fwait
adc
inc
lods
jo
out
mov
mov
dec
jg
or
push
sahf
pop
and
dec
and
into
sbb
orb
fdivr
add
jnp
cwtl
imul
sbbb
sbb
add
inc
cmp
fistps
divl
rorb
int
jne
cli
mov
dec
push
push
inc
lea
roll
or
das
repnz
inc
cmp
pop
pop
nop
xchg
push
aam
jl
mov
or
cmc
sub
scas
dec
int3
add
dec
inc
cs
imul
ret
mov
dec
xchg
mov
jg
pop
add
push
or
cmc
xor
fwait
sub
push
add
mov
mov
jle
dec
jmp
add
add
mov
xchg
cwtl
js
or
aaa
cld
out
aad
orb
jne
hlt
inc
aad
sti
cmp
jge
sarb
xchg
adc
mov
cmp
dec
cmc
mov
ljmp
dec
xchg
xchg
inc
gs
test
and
je
pop
fldl
xor
pop
xor
inc
mov
dec
fsubs
fnsave
pop
xor
and
or
xor
cmpsb
in
adc
ret
inc
ja
sbb
mov
sub
fdivrp
stos
addb
add
fbstp
in
or
nop
ret
xor
add
test
cwtl
ljmp
stc
hlt
ds
sahf
das
addl
pop
mov
sbb
cmpsb
xor
inc
push
add
sub
push
or
mov
xor
movb
ror
imul
pop
push
movsl
enter
xchg
pop
roll
cwtl
mov
sarl
scas
adc
sarb
xor
cmpsl
add
mov
movsb
scas
pop
out
andb
push
call
pop
test
je
insb
adc
pop
es
push
push
adc
sub
mov
scas
or
insb
jmp
dec
cmp
push
popa
icebp
xor
adc
std
jno
fwait
push
insl
call
jne
push
addps
adc
pop
das
cmc
mov
xchg
inc
aaa
add
mov
iret
in
test
push
and
fnstenv
inc
push
nop
fwait
ss
fidivrl
lock
dec
jbe
push
inc
mov
bound
mov
xchg
push
jge
fiadds
insl
nop
push
xchg
or
int3
cmpsb
dec
or
push
jno
aad
xlat
pmaxsw
or
mov
fldt
sbb
in
push
push
aaa
adc
repz
xlat
mov
rolb
lods
mov
sbb
in
int
cmpl
je
pop
add
and
pop
dec
adc
adc
pushf
lcallw
cmp
xchg
aas
and
jge
or
mov
mov
int
in
dec
fdivp
xor
adc
mov
fstl
or
outsb
icebp
enter
in
adc
neg
stc
push
das
decb
push
aaa
cmc
cmp
jmp
and
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
xchg
adc
mov
iret
sbb
sahf
adc
sbb
iret
outsb
add
add
mov
add
mov
xor
adc
lods
fstps
pop
push
addl
mov
pop
sbb
pop
push
xlat
stc
fildll
push
or
fistps
mov
fiaddl
mov
adc
mov
push
push
je
xchg
hlt
fisubrs
dec
insl
jge
mov
push
mov
andb
fisubs
dec
leave
xor
sbb
pusha
stc
scas
mov
fisubrs
out
cmp
jmp
insb
ss
add
fcomi
xchg
mov
mov
push
xchg
imul
pop
mov
cs
mov
mov
or
adc
in
mov
dec
lahf
xchg
lret
xchg
or
pusha
jmp
and
jne
cmp
xchg
jnp
push
mov
mov
imul
cld
das
push
push
inc
push
push
leave
pop
bswap
into
cmp
or
jmp
xor
in
adc
dec
incl
jmp
adc
jle
and
test
loop
push
mov
outsb
and
mov
sahf
sub
mov
mov
test
adc
mov
outsb
sbb
ds
pushf
sbb
jae
and
xor
mov
inc
jp
dec
fistps
inc
int
mov
stos
and
push
sub
les
imul
fbld
dec
push
fisttps
mov
loope
push
sub
cli
enter
sbb
hlt
mov
mov
cmp
and
loop
mov
lods
clc
cmp
inc
fcoms
sub
push
ljmp
add
mov
push
test
imul
in
movsl
mov
mov
rorb
scas
cmp
leave
scas
xchg
push
add
fildll
jp
add
dec
mov
addb
pop
loop
sub
cwtl
pop
add
ja
aas
test
stos
mov
ss
sbb
movb
and
aad
aam
mov
jbe
cs
testl
add
push
fcompp
rcll
stc
mov
pop
loope
xchg
aad
cmpsb
lods
xlat
sub
out
in
in
lock
or
xor
xchg
shrb
je
and
gs
lods
pop
xchg
add
xchg
loopne
mov
or
pop
xchg
sbb
jnp
movsb
stc
movsl
faddl
fsubp
cmp
pusha
push
mov
xchg
sbb
in
std
push
mov
mov
mov
sub
sarl
pop
imul
fs
loop
test
xor
push
jecxz
sti
inc
lahf
jnp
lcall
aad
adc
imul
lcall
lcall
jno
and
pop
push
shrl
or
or
xor
sbb
mov
mov
mov
push
push
test
daa
lahf
lahf
sub
pop
add
sub
cmp
cmp
adc
push
cmpsl
stos
pop
mov
xor
xor
imulb
sbb
pop
mov
pushw
xchg
push
or
cmp
inc
mov
and
cmp
loopne
ret
out
shlb
mov
lods
popf
ror
add
lcall
cmp
xlat
shrd
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
subl
xor
push
rcl
jmp
enter
mov
gs
pusha
rclb
push
sets
shrl
push
or
lods
xchg
fwait
sub
insl
stos
cmp
push
sbb
push
pop
push
xchg
repz
mov
push
daa
sbbl
lahf
popa
mov
xchg
arpl
ret
hlt
mov
dec
mov
dec
jecxz
sbb
lea
inc
pop
jmp
push
or
addr16
jns
shll
inc
es
pusha
push
je
je
push
icebp
mov
fstpl
mov
das
mov
rcl
data16
sbb
mov
inc
fxch
push
popa
pop
jno
insl
aad
or
mov
inc
push
mov
cltd
das
iret
in
push
in
test
mov
inc
or
leave
pop
add
cmp
js,pt
int
push
daa
mov
fiadds
movsl
jbe
and
push
int
lods
leave
test
wrmsr
hlt
insb
icebp
pop
bound
mov
icebp
jo
icebp
or
rol
rclb
push
push
lret
jl
pop
push
sub
pop
aad
insl
or
call
into
pop
lahf
jno
sbb
jmp
push
inc
xchg
stos
dec
xchg
lock
cmp
js
ret
scas
outsb
ljmp
cmp
and
sbb
or
dec
sbb
add
adc
mov
repnz
push
inc
rcrb
inc
pop
mov
jl
xor
adc
xor
or
push
ss
adc
enter
andl
insb
and
hlt
jb
aas
test
scas
scas
test
mov
mov
les
jnp
mov
sbb
xlat
or
fs
out
jge
test
pop
addr16
pusha
sarl
es
xchg
clc
xchg
push
mov
inc
mov
iret
test
cmp
hlt
pushf
mov
cmpb
and
lods
mov
xor
sbb
andl
adc
jnp
in
adc
shl
mov
and
or
pop
movsb
nop
pop
xchg
inc
mov
mov
mov
pusha
xor
ja
imull
mov
xchg
std
ss
test
pushf
ret
cwtl
push
mov
lock
adc
push
mov
mov
shll
scas
or
clc
sbb
inc
or
jnp
sbb
loope
mov
inc
cmpsb
push
push
out
icebp
sub
cmp
xor
push
mov
push
fstpt
inc
sub
bound
xchg
fidivrs
adc
push
mov
push
mov
std
adc
into
mov
sub
pusha
and
movsl
addr16
lcall
mov
sbb
pop
cmp
pop
mov
repz
loope
sbb
movsl
mov
push
xchg
fldl
out
jnp
cmp
rorb
repz
fisubs
pop
jg
add
xor
test
xor
adc
fadd
cmp
pushf
addr16
jmp
jecxz
pushf
push
cmp
dec
repz
test
sub
cmc
mov
out
pop
iret
mov
lods
lahf
push
pop
rorl
xchg
pushf
mov
lds
mov
and
add
push
ficoml
inc
out
inc
hlt
xor
mov
mov
popf
in
out
xchg
mov
mov
mov
or
in
add
aaa
addl
shr
flds
add
scas
ds
and
sbb
fsubrp
push
stos
or
sbb
sahf
adc
sbb
in
es
cmp
jb
and
mov
mov
mov
in
sub
xor
in
jp
enter
inc
sbb
stos
mov
popf
decb
into
insl
aam
repnz
outsl
jb
jmp
fists
mov
or
mov
lcall
jo
jnp
lret
cwtl
and
dec
inc
add
out
outsb
test
in
int
xchg
inc
ljmp
pop
incl
pop
sub
adc
pop
add
ja
and
or
mov
add
adc
push
fcomip
sti
xchg
icebp
push
frstor
and
mov
cmp
int
mov
mov
or
pushf
loope
push
xchg
or
mov
cli
mov
outsl
daa
fisttps
jnp
in
mov
sub
mov
or
aad
jl
mov
scas
push
movsl
jns
mov
cltd
aam
mov
pop
insb
jle
loop
test
stos
lcall
and
ds
push
dec
movsl
imul
cli
call
jecxz
nop
mov
add
enter
and
mov
dec
xchg
cmp
add
fwait
out
jbe
lret
lods
or
push
lahf
push
xchg
mov
fs
xchg
andl
xor
dec
cmp
and
push
fwait
sub
jecxz
pop
imul
or
push
fadds
push
dec
cmp
stc
mov
testl
xchg
in
xor
lods
adc
rcr
push
flds
aad
stos
insl
pop
xor
sub
fcmovu
or
push
out
push
adc
adc
and
shl
fdiv
jmp
pushf
mov
pop
imul
sub
mov
aas
sbb
pop
push
mov
daa
aad
int
sbb
ss
sbb
xchg
popa
pop
or
or
cmpsb
or
cmp
xchg
xor
sahf
mov
sbbl
xchg
sub
outsl
aas
clc
repz
xor
xchg
inc
out
outsb
dec
xor
sbb
es
dec
inc
mov
dec
scas
rolb
push
les
dec
repz
es
mov
lods
inc
mov
sub
sub
adc
jp
push
sbb
jo
daa
rorl
shll
jg
hlt
js
lock
mov
cmp
fwait
mov
or
aad
pop
adc
and
sbb
icebp
xor
mov
mov
inc
pop
add
lret
aaa
rclb
jne
mov
shrl
outsb
and
aaa
sub
inc
or
hlt
mov
ds
cmpsl
clc
repz
inc
pop
add
punpcklbw
cmp
adc
lret
mulb
cwtl
add
lcall
xchg
jmp
sub
sarb
cmp
fmull
in
ljmp
mov
shlb
dec
cmp
push
xchg
inc
and
stos
in
xor
sti
insb
sar
ds
mov
jmp
lods
sbb
push
push
push
push
or
aam
mov
movsb
sub
lock
push
push
jno
cmp
and
adc
cli
xchg
inc
popf
mov
fsubrl
out
enter
add
jnp
jp
stos
inc
push
dec
lods
lcall
sbb
push
je
add
loope
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
inc
xchg
jno
out
sbb
sahf
adc
sbb
imull
fwait
cmpsb
cwtl
cld
std
sub
sub
xchg
popl
pop
pop
int
sbb
xchg
mov
fs
stos
fstpt
adc
xchg
popa
lahf
dec
jno
dec
nop
incl
push
mov
jg
repnz
sbb
outsb
sti
lods
unpckhps
jle
push
cmpl
loop
rcll
push
scas
ss
mov
add
pop
scas
inc
mov
repnz
shll
jmp
pop
fisttpll
loopne
sbb
movsb
fwait
dec
cltd
gs
inc
test
call
flds
cli
push
and
dec
pushf
mov
adc
ss
scas
movsb
out
push
push
scas
or
add
inc
adc
xchg
fcmove
jo
or
pop
xchg
ret
jne
loop
mov
adc
sti
cmp
movsb
pop
lret
repz
loopne
push
inc
pop
jae
ja
mov
loop
ja
xor
xchg
push
jnp
push
roll
popl
ret
mov
jnp
sub
mov
sub
movsb
lods
and
cld
mov
jmp
nop
mov
push
jle
xchg
jle
pop
hlt
push
call
lahf
movsb
fiadds
cmp
mov
mov
add
cmp
loop
in
repz
outsb
or
push
insb
test
stc
in
enter
and
sbb
in
sbb
cmp
mov
iret
icebp
fs
adc
mov
gs
sub
ret
mov
add
je
shll
bound
icebp
mov
cwtl
mov
andb
sub
popa
sub
mov
xor
jo
xchg
push
lock
xchg
mov
leave
popa
jns
push
cli
xlat
pushf
fisttps
and
rorl
es
mov
in
mov
sbb
aas
enter
adc
add
fidivrl
into
sbb
dec
inc
fidivl
jge
mov
jae
cmc
jnp
dec
xchg
and
ret
pop
add
xchg
aam
sub
sub
add
mov
inc
adc
adc
mov
push
sub
mov
sbb
xor
test
popf
mov
jns
movsb
aaa
shrl
fwait
js
adcb
push
sub
cltd
sub
push
aaa
xchg
rep
fidivrl
push
jo
push
mov
add
jae
mov
inc
call
or
xor
xchg
cs
aad
cmc
cli
cli
pop
push
mov
std
insb
xor
push
pusha
sahf
and
jge
sub
jo
in
test
mov
xor
adc
cwtl
xchg
pop
pushf
sbb
pop
push
push
jo
fisubl
add
mov
mov
push
data16
xlat
push
cmpsb
pop
out
inc
dec
stc
stos
outsl
cmpsb
out
repz
xchg
xchg
add
inc
mov
mov
clc
movsb
je
fisubrs
inc
pop
std
dec
popa
mov
dec
sti
jg
push
pop
je
mov
pop
lcall
loopne
sbb
mov
inc
ds
sbb
xor
push
hlt
aaa
or
adc
push
lahf
cmp
cld
and
loop
fwait
jp
inc
adc
sub
gs
loop
jae
ffreep
mov
xor
add
push
and
xchg
ret
nop
cltd
lds
cmc
push
repnz
je
jge
xchg
lods
mov
negl
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
out
lret
jo
mov
sbb
test
xor
out
mov
sbb
ljmp
push
int
sub
pop
inc
rorl
xor
pop
add
es
sbb
lds
pop
or
sbb
roll
adc
fildll
mov
stos
dec
out
out
push
and
cmp
pop
lods
shrl
ja
mov
push
mov
sbb
mov
and
fs
call
adc
jo
lds
push
into
lcall
fs
stc
lcall
pop
dec
inc
leave
dec
fistpl
jo
mov
bound
clc
leave
or
cli
dec
cmp
movsb
and
in
shlb
repnz
cmp
repz
sub
add
mov
jbe
sbb
push
out
push
sbbl
jnp
mov
aaa
pusha
adc
aas
xchg
pop
loopne
dec
xor
pushf
bound
adc
paddsw
out
cli
dec
mov
inc
xchg
and
cli
push
sbb
aam
pop
pop
in
pop
lods
push
negb
mov
fsubrl
jb
jge
movsl
inc
aaa
outsb
xlat
inc
outsl
insl
sahf
test
ret
popf
addr16
jp
add
pop
test
fisttps
add
adc
xlat
dec
dec
fdivl
xor
arpl
fwait
inc
ja
rcll
sbb
loop
mov
cwtl
out
outsb
jmp
lret
cwtl
push
out
lods
enter
out
adc
xchg
mov
inc
mov
mov
pop
cmp
in
pop
out
dec
mov
xchg
in
dec
imul
sti
push
dec
lods
je
cmp
adc
cli
fs
jg
and
test
lret
fidivs
mov
cmp
loopne
imul
ds
stos
pop
int3
mov
stc
shll
repnz
and
or
mov
xchg
andb
or
pop
loop
mov
cmc
cmp
cmp
lcall
mov
cmp
sub
out
or
push
or
mov
pop
stos
push
jecxz
dec
xor
movl
leave
fcomps
loopne
cmpsb
sti
fcoml
daa
into
push
std
mov
xor
mov
sub
mov
pop
add
mov
pop
mov
adc
xchg
xchg
les
mov
mov
gs
enter
test
leave
dec
out
xchg
ret
ja
pop
sub
sub
fs
mov
inc
outsb
daa
cmp
mov
repnz
iret
mov
xchg
aad
push
repnz
xchg
ret
adc
call
adc
inc
dec
and
shll
add
and
and
inc
mov
and
xor
mov
lahf
enter
popf
push
mov
cmp
cli
sbb
jp
int
in
push
cmc
pop
or
out
jnp
push
cs
sbb
and
or
xor
ja
call
xor
fdivrs
addb
sub
dec
nop
sarb
std
mov
in
nop
xor
bound
xlat
dec
jb
jle
iret
sub
pop
loopne
les
jp
mov
ja
fs
mov
out
pop
sti
push
lea
mov
loop
dec
imul
dec
hlt
ss
sub
sti
arpl
cmc
insb
sbb
cs
out
arpl
lds
test
call
out
mov
popa
mov
sbb
out
leave
int
jle
add
test
and
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
sub
repnz
sbb
aas
sbb
clc
enter
movl
int
mov
push
divb
push
xchg
scas
jecxz
addr16
pop
lock
outsb
aam
push
inc
and
xchg
cmp
std
or
sbb
popa
hlt
inc
shrb
into
fs
mov
pop
mov
cs
push
lods
jb
push
pop
je
sar
arpl
jno
cltd
jg
mov
cmp
ffreep
out
jbe
cmpsb
call
push
inc
jmp
andl
sti
mov
dec
or
test
jl
movsl
dec
enter
or
or
aad
call
xchg
rcrb
ss
dec
or
add
scas
jge
lcall
xor
push
inc
mov
fidivrs
sbb
mov
and
push
fucomp
mov
mov
outsb
js
pop
bnd
scas
or
ss
es
or
push
sub
sub
fcmovu
inc
lods
fistl
mov
or
push
out
push
cmp
inc
xor
and
or
mov
push
cmp
jo
in
test
mov
inc
cld
imul
dec
mov
sbbb
sub
xchg
dec
loopne
xchg
imul
xorl
lods
or
leave
add
jnp
xor
sti
repnz
or
pop
push
pop
dec
movsl
fwait
jp
das
jp
pop
lds
mov
pushf
jno
jecxz
cmp
cmp
sbb
mov
pushf
mov
fidivl
xlat
andl
std
lahf
jne
mov
xorb
rol
ret
or
and
push
xorb
int
mov
cmc
sub
fmull
fnsave
fidivs
cmpsl
int3
sub
pop
test
add
xsha1
cmpsb
or
push
jge
out
jecxz
adc
imull
in
sub
add
sub
gs
jp
sahf
int3
or
sbb
test
sub
in
icebp
or
mov
pop
pop
mov
inc
pop
pop
movsb
test
and
or
js
mov
cmp
or
cmpsb
mov
test
cmp
push
sbb
cli
and
inc
sub
and
std
inc
sub
xchg
adc
fnstcw
lahf
cli
and
sub
popf
int
lea
jp
cmpsl
sub
fs
mov
add
aad
sbb
in
in
push
repnz
popa
add
add
xchg
add
lret
mov
rorl
mov
and
leave
inc
mov
shr
jnp
mov
sbb
loopne
out
mov
and
or
mov
or
loopne
cmp
ficomps
dec
sbb
push
hlt
rolb
pop
imul
filds
cs
mov
cmp
ficoml
stos
mov
mov
xlat
std
aaa
lret
in
loopne
xchg
cltd
rcl
inc
push
xor
test
sbb
jg
and
ljmp
popf
fidivrs
xchg
or
gs
push
jg
movzwl
or
jmp
inc
insl
mov
mov
mov
icebp
xchg
in
ljmp
sti
sarb
jg
mov
jb
lret
outsl
push
addb
ret
scas
push
mov
gs
cmc
nop
xorb
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
not
add
mov
sbb
inc
clc
lds
push
das
sbb
push
pop
mov
enter
iret
push
sub
xor
sub
adc
in
mov
push
fsubrp
cmp
sub
loope
mov
push
and
inc
pop
push
cs
sbb
dec
jnp
xchg
cmpsl
cwtl
in
sbb
mov
pop
and
sti
jne
adc
pop
popf
pop
ljmp
or
stos
jae
scas
jle
push
in
popa
div
loope
movsl
pop
cmp
icebp
push
fs
mov
rcll
inc
xor
test
test
test
popa
push
jle
mov
orl
les
add
adc
mov
scas
aaa
das
nop
addr16
cmp
jg
mov
into
out
ds
ljmp
inc
push
or
pop
hlt
jne
adc
sbb
leave
pusha
and
enter
int
mov
sbb
loopne
push
out
loop
movsl
daa
push
in
jmp
jl
dec
dec
popfw
gs
icebp
mov
js
cwtl
mov
sti
shll
xor
loopne
jo
lock
xor
mov
push
push
or
mov
sub
sub
jge
sahf
add
or
pop
nop
dec
in
out
add
je
imul
and
repnz
les
leave
dec
out
mov
add
cmp
mov
xchg
pop
pop
sbbl
mov
sub
js
sub
inc
mov
inc
sbb
flds
inc
stc
push
fidivrl
fwait
gs
inc
mov
in
repz
call
mov
orb
aas
adc
imul
sti
movsb
cmp
adc
dec
or
pushf
cmp
mov
fists
or
bound
add
mov
test
jecxz
je
xchg
mov
insb
and
cmc
push
arpl
call
fcoml
scas
les
stc
push
loope
repnz
stos
and
and
cmp
movsb
xchg
stc
mov
cwtl
or
sub
das
xchg
call
std
dec
cld
loopne
roll
icebp
fdivr
pop
inc
jl
fldl
fwait
jo
lds
xchg
int3
es
enter
ficomps
sbb
call
xor
sbb
daa
xor
mov
xor
jle
and
jmp
add
mov
and
jl
loop
mov
dec
lock
push
es
cmp
ret
fsts
dec
fstps
js
cltd
cltd
jmp
ds
and
fildl
jge
push
test
pop
adc
pop
arpl
orb
fwait
mov
gs
xchg
push
loopnew
push
repnz
dec
xchg
or
sub
mov
adc
ds
xchg
mov
sub
xchg
mov
insl
xchg
inc
mov
popf
add
mov
fdivp
out
dec
rcrl
mov
lahf
cmp
ds
xchg
int
es
and
sbb
xor
mov
aad
hlt
fcmovb
out
jbe
subl
push
inc
mov
test
jg
sub
sub
pop
mov
scas
mov
pushf
test
inc
arpl
repnz
lea
dec
xor
xchg
pop
mov
les
loope
cmp
and
lods
sub
dec
pusha
inc
mov
jmp
scas
xor
aaa
arpl
js
pop
popa
lods
int
andb
ud2
ret
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
out
xchg
fmulp
jae
mov
lahf
cmc
fnstenv
and
outsb
mov
cmp
fmuls
inc
dec
jmp
mov
pop
fidivl
inc
rcrl
cs
pop
gs
icebp
cmp
adc
out
or
xchg
in
mov
hlt
fsts
xchg
repz
stos
add
movsl
in
xchg
shrl
mov
fsave
inc
ljmp
or
xchg
inc
push
cmp
xchg
ja
mov
test
xor
sub
or
dec
jl
cmp
lock
mov
test
out
xchg
adc
lret
xor
sbb
out
scas
inc
cld
fs
ret
jecxz,pn
imul
add
pushf
rorl
sbb
adc
mov
push
sbb
and
cmp
push
sahf
repz
and
sti
stos
rcr
adc
scas
jns
mov
insl
pop
int3
add
into
dec
test
mov
das
into
test
movsb
xchg
imul
popf
cmpsl
xchg
xchg
jmp
test
mov
xchg
outsl
das
rol
shlb
jns
je
push
and
data16
dec
scas
inc
call
imul
dec
pop
fcompl
fwait
sbb
mov
cmpsl
stos
cmc
ficoml
test
cmp
pop
push
inc
push
push
sub
arpl
loopne
inc
pop
out
jbe
lock
dec
dec
xchg
das
mov
sub
fs
push
dec
stos
and
dec
or
fstl
shrb
in
addps
adcl
dec
les
push
cmp
test
sbb
test
div
movsb
cmc
sbb
sub
lret
adc
push
xor
sbb
jl
xorb
icebp
out
std
jae
insb
arpl
inc
mov
aam
jle
das
daa
lods
les
sub
aad
in
test
or
imul
add
or
jl
clc
mov
add
sbb
fnstenv
add
mov
clc
jo
xor
cmpl
push
mov
cli
rorb
xchg
sub
push
cmp
aad
popa
push
int3
in
daa
adc
xlat
rclb
leave
pop
sub
xor
jne
sbb
call
ljmp
insb
xchg
iret
mov
out
or
insb
aas
push
enter
lods
sbb
lds
flds
in
mov
jge
fwait
lahf
xor
inc
pop
call
cli
add
lods
inc
xchg
xchg
fadds
sbb
mov
cmpsb
cld
add
sub
aam
jnp
shll
sub
sbb
pop
jmp
cwtl
pop
pusha
mov
aad
stc
int3
push
inc
sbb
xor
cmp
rolb
push
testl
lahf
sub
call
sub
mov
stos
loope
sub
test
stos
inc
lret
xor
or
fidivrl
mov
addl
jo
mov
push
xchg
cltd
test
fistl
mov
test
xchg
js
mov
sbb
hlt
movsb
mov
jge
jno
js
movl
ljmp
pop
xchg
dec
push
push
adc
mov
adc
in
mov
add
push
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
icebp
push
push
fisttps
pop
jns
sbb
es
jo
sub
jmp
xchg
daa
test
scas
push
imul
sub
inc
icebp
and
fiadds
xor
xchg
dec
jg
mov
jge
addr16
test
lahf
jmp
sbb
pop
mov
push
insl
pop
mov
ds
xor
adc
cmp
jo
xchg
cli
aaa
lahf
xor
iret
push
push
push
rcll
movsb
ud0
dec
xchg
loope
xorb
loope
push
cmpb
mov
jmp
in
repnz
iret
loope
adc
imull
arpl
imul
cld
inc
sbb
outsl
aam
or
vsubpd
jg
and
sub
rclb
rcl
cmp
fsts
sarl
out
or
das
dec
dec
test
fs
popf
out
and
in
inc
jmp
mull
bound
or
les
lods
fbld
ljmp
sub
inc
pop
je
inc
push
mov
std
sbb
lock
fs
or
push
inc
mov
mov
mov
ret
pop
mov
cmp
xchg
pusha
scas
pop
sub
xchg
icebp
dec
addr16
mov
jp
xor
imul
mov
out
lcall
sbb
sti
or
or
loop
and
push
fcmovbe
outsb
push
fmull
push
fwait
inc
fadds
ret
inc
sub
je
push
es
pop
inc
lds
or
call
loope
out
mov
add
cwtl
or
push
call
inc
and
dec
xchg
popf
rcr
jle
push
push
pop
or
adc
sti
push
std
sub
inc
sarl
mov
insb
insb
xor
pop
jno
push
mov
aam
mov
cli
and
mov
stos
out
push
ljmp
sbb
cltd
and
ret
pop
mov
aaa
addr16
lret
ds
subl
pop
imul
mov
inc
lods
lods
ljmp
mov
or
mov
out
rcr
and
shl
popf
xor
das
dec
xchg
pop
sti
ss
push
cltd
std
and
push
sub
inc
dec
sub
lret
pop
xor
ret
bnd
shrl
jns
xchg
aam
call
outsb
dec
xor
aaa
fiadds
jno
aaa
jbe
nop
push
sbb
aas
push
btc
cmp
push
or
sarb
push
int3
int3
js
jmp
mov
insl
sbb
pop
loop
out
sub
ljmp
lods
jns
adc
mov
inc
mov
adc
cmp
fstp
sbb
push
jg,pn
push
in
mov
push
leave
mov
mov
idivb
lret
push
pusha
pop
pop
add
fstl
fldt
xchg
adc
mov
loop
icebp
sti
add
jns
sbb
and
add
and
sub
pop
cs
repnz
adc
inc
shrb
sub
arpl
ds
bound
movl
mov
pop
dec
pop
ljmp
cs
int3
lods
int
pop
mov
adc
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
movsb
shll
mov
sbb
sub
pop
add
es
cld
lahf
cmp
and
inc
dec
bound
push
mov
sub
fisttpl
pushf
mov
loopne
es
clc
dec
stos
je
rcll
sub
jae
rcll
imul
sub
les
aam
stos
ljmp
push
dec
in
aad
jmp
xor
sbb
jmp
push
bswap
je
mov
not
cmp
push
xor
clc
jle
repz
dec
mov
mulb
mov
jge
pop
push
push
and
push
mov
es
fstpt
xchg
mov
rclb
mov
push
mov
xchg
push
sub
mov
jle
fsubrl
inc
decl
or
mov
and
push
outsl
jbe
hlt
aaa
adc
filds
cmp
xor
pop
mov
cmp
mov
push
int
stos
mov
pop
dec
or
test
adc
adc
out
sbb
jmp
outsl
or
inc
sbb
sahf
add
stos
iret
dec
enter
out
mov
icebp
cli
in
aaa
jno
pop
push
inc
shll
dec
mov
lods
inc
adc
imul
cmp
pop
bound
pusha
pop
call
sbb
or
test
fsubs
inc
xchg
clc
add
sub
adc
xor
pop
mov
adc
ja
je
mov
cli
sbb
lods
adc
or
imul
cld
sti
cmpsb
test
mov
xchg
pop
ficoml
mov
inc
inc
fidivrs
loop
insb
cmc
fs
in
sub
fildl
xchg
scas
push
test
lahf
cmpsb
das
cmp
mov
fs
subb
push
xchg
dec
inc
cmp
jns
scas
outsl
insl
pop
pop
loop
cld
or
mov
and
mov
icebp
adc
outsl
mov
call
test
jge
ljmp
ja
mov
in
dec
negb
sahf
sub
dec
pop
adc
std
jbe
mov
sbb
mov
ljmp
xchg
into
das
jne
sub
loope
or
jecxz
pop
out
cmp
cmp
fdivrs
sub
shrb
push
cwtl
xchg
mov
xor
inc
stos
or
ret
insb
adc
xchg
xorl
fldenv
mov
adc
mov
add
int3
pop
jnp
push
push
test
mov
mov
jb
xor
xorl
jae
aas
je
cmc
pop
rol
cmp
in
es
popa
push
int
icebp
rcrl
jge
jmp
sub
mov
out
roll
pop
dec
or
lret
mov
bound
leave
push
sbb
and
pop
insb
sbb
das
dec
xchg
push
ja
rclb
mov
mov
mov
out
imul
sbb
aam
inc
jb
pop
or
js
inc
xor
xor
pop
push
jo
sbb
inc
cli
mov
bound
add
mov
mov
lahf
push
in
dec
xchg
ficomps
mov
sub
sub
push
nop
xor
call
punpcklwd
fwait
jnp
add
or
jns
lret
push
and
jle
lea
sahf
mov
xchg
or
div
test
inc
cmp
lods
pushf
test
mov
push
and
cld
outsb
ss
scas
and
loopne
insb
test
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
xchg
imul
sbb
push
jb
int
cmp
je
out
ljmp
or
mov
sub
iret
or
jbe
jmp
scas
or
pop
adc
cmpsl
sbb
push
mov
pop
cmpsb
xchg
inc
rorl
lea
xchg
shrb
daa
adc
je
mov
mov
or
sbb
jno
mov
inc
fnstenv
mov
pop
mov
xchg
std
cmp
into
sub
clc
pop
je
mov
xorb
out
icebp
mov
push
jnp
sbb
xor
and
xchg
sbb
push
jmp
jo
inc
outsl
outsb
scas
pop
sbb
cmp
mov
decl
and
pop
or
sbb
fwait
out
lahf
and
popa
pusha
xchg
add
scas
in
std
mov
fnsave
sti
insb
inc
xchg
stos
js
stc
dec
ljmp
sub
sbbl
lret
movsl
mov
mov
jecxz
and
inc
das
push
bnd
shlb
and
ds
negb
pop
jecxz
stc
call
inc
mov
fwait
xlat
out
adc
sbb
test
sub
movsb
mov
lods
psubsb
dec
sub
xchg
pusha
cmpsb
in
loopne
test
xchg
repz
popf
fucomi
sbb
fs
ret
adc
sub
setae
stc
iret
dec
fbstp
pop
push
es
push
jg
cmp
test
repz
ja
out
jl,pt
sub
data16
popf
xchg
out
mov
popa
inc
das
sub
cs
mov
or
bound
jg
sbb
fsub
or
ds
aad
pop
cmc
out
repz
out
add
ja
je
ljmp
js
ds
inc
std
lods
lcall
inc
push
jne
frstor
outsl
ljmp
push
rcr
imul
sub
inc
cmc
pop
into
sarb
sbb
push
jnp
gs
xor
insb
sub
adc
enter
mov
jo
out
mov
mov
mov
or
stos
mov
lods
dec
ret
out
mov
mov
mov
ljmp
lret
xchg
stos
stc
shll
dec
js
jb
sub
add
sbb
cmp
pop
sbb
sub
fisubrs
in
and
dec
nop
mov
jbe
mov
push
push
push
outsl
test
mov
jno
jecxz
imul
add
out
pop
cld
push
cmc
lea
mov
sbb
xor
add
cmpsb
pop
sub
fildl
mov
xchg
jl
inc
jae
mov
ret
xor
shrb
ds
lea
xchg
pop
push
ss
mov
loopne
adc
mov
rcr
xchg
bnd
in
daa
pop
dec
xchg
outsl
mov
push
dec
xchg
and
std
mov
pop
inc
fcmovb
outsb
in
pop
psubusw
jns
cltd
adc
mov
mov
dec
hlt
ljmp
mov
neg
lret
xchg
sub
push
or
bound
push
xchg
imul
mov
pop
xchg
in
push
test
jo
jmp
cltd
jo
mov
xchg
jl
sarb
pop
popf
je
pop
mov
and
dec
jge
test
or
inc
xchg
push
push
stos
xchg
sub
adc
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
cmp
sbb
sahf
adc
sbb
sbb
sbb
inc
test
inc
cmpsl
mov
or
out
dec
ja
push
fstpl
out
pop
mov
mov
cld
sub
pop
or
sbb
scas
pop
rcrl
data16
mov
or
fwait
addr16
fucomip
and
repz
lods
add
popf
mov
mov
in
and
icebp
pop
cmp
cmpsb
xchg
sbb
adc
xchg
pushf
jo
adc
cld
out
pop
sbb
jge
xor
xlat
int
sahf
mov
pop
push
sbb
jecxz
jmp
add
mov
iret
jns
hlt
out
sub
pop
jbe
xor
out
repnz
and
adc
lcall
cmc
mov
pop
int3
in
sbb
adc
jno
push
pop
add
in
push
add
cmp
leave
sub
out
dec
jmp
mov
pop
adc
andl
push
pop
lods
or
mov
mov
imul
jae
dec
inc
push
clc
sbb
icebp
sub
jbe
adc
jno
mov
je
imul
sbb
fbld
popa
add
insl
std
hlt
fsubs
cmpl
fisubrl
mov
sbb
test
rcll
jnp
mov
add
repz
into
es
out
pop
mov
roll
outsl
push
mov
scas
fidivl
push
xor
and
out
and
sbb
pop
gs
push
mov
dec
rcrl
sub
imul
mulb
and
stos
and
xchg
push
sarb
and
ljmp
or
mov
call
jns
inc
dec
xchg
pop
adc
rcr
xorb
fimull
xchg
in
clc
push
rep
orb
dec
mov
dec
jmp
lahf
into
lret
inc
add
es
fst
inc
jo
cmp
push
addr16
mov
outsl
dec
mov
loope
stos
vmovsd
loopne
mov
sarl
xlat
pop
mov
inc
mov
xchg
stc
inc
xor
fsubrs
sub
push
addb
add
lods
dec
mulb
xchg
popf
adc
insl
lcall
pop
push
idivl
out
mov
cwtl
in
ja
icebp
scas
inc
add
push
lds
jp
push
push
sbb
movsl
popl
or
sbbl
jbe
adc
jno
dec
gs
dec
mov
cmp
arpl
cmp
loop
add
rclb
inc
xchg
adc
testb
sbb
icebp
inc
roll
aas
cwtl
mov
mov
jmp
shrl
inc
mov
jae
sbbb
jae
out
fsubs
loop
ss
jns
cmc
repz
sub
add
sahf
push
push
mov
pop
and
gs
or
mov
into
sahf
std
lret
pop
cmc
mov
push
mov
scas
xchg
ret
push
rep
cld
xchg
inc
add
push
outsb
mov
add
lods
cld
inc
aam
int
or
cmp
jb
jno
lret
clc
inc
add
push
xchg
std
popf
mov
sarl
push
lahf
sub
hlt
adc
ja
xchg
and
int3
jmp
repnz
jmp
imul
pushf
pop
jle
xor
mov
sahf
adc
sbb
and
jae
xchg
xchg
jecxz
sub
into
gs
ja
jae
test
add
loop
popf
xchg
cmp
mov
movsl
test
sub
add
arpl
jb
adcl
sbb
out
mov
shll
sub
ret
or
mov
inc
mov
outsb
xor
xchg
pop
or
adc
mov
push
add
mov
jns
addr16
and
cmc
flds
xor
sbb
sub
lcall
stc
imull
xchg
test
push
dec
test
ja
adc
out
scas
fs
dec
lcall
or
dec
dec
xor
push
dec
sub
or
xor
dec
js
mov
insl
rcl
cmp
add
sahf
in
jns
sub
mov
xor
jno
xchg
and
mov
and
xchg
out
jge
scas
jbe
or
push
cmp
in
test
ljmp
inc
inc
lock
sub
jne
out
unpckhps
les
push
and
insl
push
fstps
adc
dec
push
sbb
dec
imul
cmpsl
mov
jmp
and
sub
aam
dec
pop
add
and
pusha
into
jne
mov
sbb
mov
cmp
mov
arpl
loopne
les
stos
xchg
in
push
inc
loope
mov
jl
adc
cs
stos
es
sarb
aam
sti
jne
sub
gs
aas
add
or
hlt
add
btc
test
mov
and
cmp
jp
das
or
xchg
test
lret
add
mov
cmpsb
testl
mov
inc
sub
and
cmp
mov
inc
out
dec
ret
hlt
mov
movsl
jbe
cltd
lods
popa
call
adc
add
jo
aaa
orb
and
xlat
enter
scas
jno
enter
or
inc
imul
rcrl
popf
mov
addr16
out
je
jg
xchg
or
leave
std
lock
inc
clc
cmpl
das
stos
iret
xchg
mov
in
dec
gs
xor
adc
fisubs
fwait
jl,pn
sbb
sub
mov
xchg
push
push
adc
inc
mov
cmp
and
xor
sbb
testb
cmpsb
aaa
fcomps
popf
mov
mov
mov
divb
lods
call
ds
jge
clc
mov
add
jb
add
push
sbbb
xlat
outsl
lods
je
push
dec
out
inc
inc
jp
arpl
int3
fisubl
nop
jnp
sbb
pop
sub
and
das
rol
fsubrs
xchg
mov
daa
jno
cmp
push
inc
das
sbb
les
mov
pop
outsl
jle
stos
addr16
pop
and
pop
int
mov
mov
or
popf
push
xchg
insl
imul
bound
sbb
xlat
jle
mov
call
add
mov
cmpsb
fwait
and
jno
mov
and
mov
inc
push
and
hlt
std
gs
or
mov
lret
mov
pusha
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
jo
outsl
sbb
sahf
adc
sbb
sub
mov
and
dec
sbb
cmp
out
xchg
es
in
mov
test
push
and
sbb
xchg
pop
loop
ljmp
jo
ficompl
rol
shll
mov
cmp
or
sub
fdivs
mov
popf
fistl
dec
cmp
cld
xchg
shrl
movsl
cld
out
xchg
and
out
jl
jns
arpl
pop
inc
push
add
movsl
push
or
iret
or
add
cmp
jne
sahf
sahf
daa
push
dec
push
js
std
sti
into
adc
or
jb
mov
aaa
push
pop
ja
adc
xor
xor
lds
imul
nop
sub
lods
imul
das
popa
int3
pop
loope
jp
fs
sub
push
cmp
out
dec
jmp
pop
jmp
movsl
or
sarb
iret
scas
mov
mov
push
mov
pop
mov
movsb
jne
add
xchg
in
or
jmp
lcall
push
cs
sti
iret
in
lahf
or
mov
pusha
sahf
scas
or
xor
mov
cmpsl
xor
inc
repnz
into
in
inc
pop
cld
jne
mov
aam
add
out
fwait
sbb
ficompl
cs
lea
adc
je
sub
push
adcb
mov
loop
movsl
mov
in
mov
cli
ss
xchg
and
jbe
pop
negb
sti
dec
fidivrl
mov
lock
and
cmovo
mov
cmpsl
int3
or
pop
cmc
dec
and
movsb
jle
dec
pop
or
jns
inc
and
dec
cmp
popf
cs
jecxz
xor
test
jnp
ljmp
aad
test
xor
pop
cmp
jbe
or
andps
adc
aas
cmp
cmp
in
adc
jae
sarl
xchg
and
mov
push
test
test
xrelease
jp
mov
mov
data16
jns
pushf
int3
mov
jns
sub
lret
insl
mov
test
aam
inc
lea
repz
cmpsl
add
loopne
call
out
adc
or
cmp
sbb
outsl
inc
pop
jl
mov
aas
hlt
fs
jns
pop
mov
cmp
pop
push
jmp
into
aaa
cmc
mov
test
or
stc
mov
jmp
imul
fmuls
out
out
dec
out
call
cmpsl
xlat
gs
in
sar
int
cmp
cli
mov
fldenv
sarb
mov
ds
mov
inc
jecxz
dec
sbb
mov
push
ret
pop
out
mov
xor
call
mov
daa
jge
enter
mov
push
cwtl
aad
or
xor
fwait
dec
in
rcll
add
jmp
lret
lea
loope
aam
fists
fcoml
imul
push
push
pop
sti
add
jp
fnstenv
ret
addr16
bound
jbe
push
fwait
dec
inc
xchg
outsl
xor
clc
and
mov
push
mov
mov
ret
mov
in
lret
test
loop
cwtl
inc
or
push
neg
inc
jo
sub
mov
imul
ja
dec
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
aas
mov
sahf
adc
sbb
inc
mov
mov
mov
shll
loopne
lds
and
int
pop
dec
push
leave
pop
inc
lock
ja
shrb
xchg
and
cld
sahf
dec
adc
jne
mov
push
jge
push
daa
inc
leave
mov
aas
stc
in
mov
test
sbbb
cmpsl
loope
addb
lods
stc
scas
imul
xlat
cs
sbb
xlat
push
mov
jmp
insl
stos
cli
orb
mov
jne
bswap
out
test
push
rcr
adc
call
jno
inc
rorl
add
mov
cmpsb
dec
fdivl
loopne
sti
dec
popa
mov
mov
idivl
call
mov
sti
icebp
ss
dec
sbb
xor
and
inc
nop
adc
filds
mov
bound
mov
jne
mov
adc
enter
out
lods
pop
rcl
xor
js
testl
dec
js
jbe
les
cltd
adc
in
cmpsl
add
aad
into
mov
iret
in
push
loopne
add
iret
daa
test
lock
inc
into
pop
cli
inc
adc
orl
leave
dec
pop
das
dec
int
inc
jne
out
push
push
lods
jbe
xchg
shrl
dec
and
mov
outsl
std
adc
enter
gs
cmpsb
and
mov
sbb
aas
not
outsl
dec
icebp
jae
stos
mov
cwtl
in
stc
push
jo
lret
cs
cmp
pop
data16
js
std
movq
loopne
dec
rorl
xchg
addb
push
xchg
dec
xor
mov
in
xchg
sbb
stos
add
jbe
test
ljmp
mov
les
out
in
mov
mov
sub
icebp
insl
pop
mov
enter
cs
pop
icebp
popa
dec
xor
fisubs
push
or
adc
mov
or
addr16
pop
or
loopne
insb
add
and
add
out
mov
inc
mov
mov
aaa
addr16
pop
nop
or
fimull
or
faddl
int3
insl
xchg
loope
jns
xchg
xor
aad
xor
movsb
imul
out
mov
fisubs
xor
insb
out
inc
sarb
sub
ret
fstp
pop
stos
ret
push
jo
sti
adc
or
inc
call
xchg
add
mov
aam
sbbl
pop
add
adc
dec
pop
jns
xchg
push
int3
aas
mov
jnp
pop
mov
jns
push
jmp
orb
addr16
aam
jmp
fadds
int3
repz
pop
add
cmp
mov
ds
or
sbb
clc
cmp
aam
mov
int
sbb
pop
adc
stos
and
mov
mov
pop
mov
repz
aas
cltd
xchg
push
mov
push
xlat
pop
jae
xor
lods
inc
jp
fadds
cmp
fstp
test
adc
cmp
cwtl
push
es
mov
scas
xchg
mov
dec
pop
mov
and
lock
sub
dec
stos
sub
loopne
pop
xor
insl
xchg
insl
hlt
xchg
rcrb
lcall
ds
adc
jae
xlat
mov
jno
or
aaa
adcl
aaa
inc
enter
dec
js
sbb
shlb
out
mov
add
popf
lret
jae
arpl
les
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
jp
scas
pop
mov
and
mov
push
sbb
or
insb
es
out
sbb
addl
insl
leave
jbe
mov
loop
es
cld
jle
out
int3
jns
push
lock
and
fmul
lods
add
jno
int3
cli
out
mov
or
rcll
adc
adc
dec
cmpsb
push
add
je
push
or
add
or
arpl
sub
call
inc
negb
jno
shrb
or
dec
into
adc
xor
lret
inc
push
rol
pop
insl
pop
sahf
jne
fnstcw
or
mov
ss
sbb
fs
cmp
pop
movsl
mov
adc
xchg
cmp
cltd
test
xchg
int
lret
loopne
aad
adc
imul
mov
pop
in
mov
fsubrl
jmp
xchg
mov
les
ja
inc
std
stos
outsb
or
pop
mov
movsb
lds
xor
movb
xchg
dec
sub
jl
push
lcall
and
cmp
cmpsb
push
mov
pop
jo
adc
sub
int
in
mov
dec
es
ljmp
mov
sbb
stos
icebp
rorb
xlat
inc
and
pop
imull
pop
xor
into
cmpsb
inc
ja
imul
jl
lock
inc
or
int3
sti
loope
out
push
ljmp
inc
sahf
xchg
insl
xchg
gs
xchg
imul
xchg
arpl
pop
clc
pop
imul
push
imul
xchg
xor
xor
aad
out
into
rolb
into
ret
push
std
sbb
ret
jl
push
add
in
xor
jbe
jg
push
stc
push
cli
pop
scas
std
shll
cmp
inc
pop
test
scas
ja
fldcw
mov
xchg
fsubrs
push
mov
cmpsb
sub
and
adc
clc
mov
lock
shll
xor
cwtl
push
push
jnp
add
ret
rcll
enter
adc
icebp
lahf
lret
lcall
xchg
jmp
stos
iret
not
jp
mov
jge
mov
push
sbb
imul
pop
mov
jl
test
enter
insb
inc
dec
aas
xor
adc
stos
mov
mov
sub
movsl
sarb
lods
mov
in
adc
xchg
push
lds
xchg
push
pop
inc
enter
sbb
stos
jns
pushf
ds
aaa
icebp
dec
insb
sub
inc
popa
ret
sbb
aas
movsb
loop
inc
test
xor
jnp
xchg
jne
push
stos
mov
sub
and
xor
sti
sub
scas
mov
mov
stos
or
fdivrs
testl
testb
sbb
cmp
adc
push
push
jbe
sbb
or
inc
stos
mov
push
and
mov
jne
mov
pop
arpl
lea
js
push
and
js
pusha
movsl
push
into
out
sbb
xor
in
nop
add
icebp
mov
mov
jns
push
stos
sbb
pop
hlt
mov
popf
scas
cmpsl
push
mov
push
mov
lahf
movsb
xchg
movsl
sbb
push
in
fcomps
cmc
mov
fistl
xor
xor
das
xor
repnz
cs
gs
inc
mov
add
fisttpl
pop
fmul
mov
mov
jmp
pop
jno
mov
xchg
cmp
sbb
sahf
adc
sbb
or
xor
insl
stos
jns
sti
je
cwtl
mov
mov
fucomi
pop
mov
cmp
mov
lcall
mov
dec
outsb
movsb
cmp
aas
pop
jae
out
pop
and
lret
push
or
pop
repnz
mov
dec
lock
mov
filds
imul
push
in
mov
in
pop
ret
lds
insl
insl
and
outsl
dec
pop
dec
jo
mov
xor
shll
pop
and
ret
mov
pop
cmc
cmp
add
out
outsl
lcall
in
xchg
pop
enter
pop
add
sub
xor
int
loopne
jno
dec
daa
cmc
mov
insl
mov
push
out
decb
cmp
sub
insl
push
mov
and
dec
xchg
fimull
mov
mov
rclb
mov
add
out
mov
push
dec
xor
das
insl
xchg
ret
mov
inc
jb
xchg
mov
in
stc
inc
notl
std
sti
jbe
mov
push
inc
fcoms
xchg
mov
xchg
push
adc
inc
jecxz
pop
cwtl
xor
shrl
xor
ret
arpl
inc
loopne
jp
inc
das
dec
sbb
add
inc
jbe
push
in
and
dec
insl
push
adc
cmp
mov
aas
hlt
fs
inc
ja
mov
adc
jae
push
std
rolb
lea
xchg
bound
aam
ljmp
sbb
sbb
repnz
rolb
icebp
mov
sub
push
sub
pop
in
dec
mov
lcall
inc
outsb
inc
push
jl
int
mov
xor
xchg
jb
sub
sar
mov
push
ret
cmc
xor
xor
sbb
cmp
call
jle
and
sbbb
iret
jnp
mov
lds
dec
aaa
sub
shrl
jg
fisubrl
rcll
loope
mov
pop
mov
loopne
gs
inc
xor
push
popa
add
sub
or
pop
stos
fidivl
adc
mov
cmp
or
fldcw
cmp
mov
add
jge
je
fsubrl
stc
in
or
dec
mov
and
xor
xchg
xor
sbb
in
push
in
cs
cmp
or
adc
loop
jbe
and
push
xchg
fisubrs
fdivr
xchg
hlt
push
xor
aaa
jle
add
mov
push
mov
cmp
sbb
lahf
jbe
sti
inc
imul
pop
push
fidivl
xor
iret
mov
xor
and
jnp
cltd
bound
sarb
pop
loopne
sbb
das
je
add
iret
xchg
pop
outsb
sarb
data16
xor
gs
repnz
jno
test
inc
test
lahf
arpl
pop
lea
mov
test
xchg
jle
xchg
aam
lcall
cltd
mov
lcall
cmp
xchg
adc
loop
out
sbb
xchg
push
mov
sahf
xor
xor
push
pop
lahf
es
in
and
fsub
outsl
popf
sti
sub
pop
mov
popf
jmp
xor
hlt
and
aas
nopl
ja
in
into
loope
mov
popa
fs
or
cmp
andb
mov
lods
rolb
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
loopne
iret
jo
push
sbb
sahf
adc
sbb
repz
sar
jp
dec
add
dec
xor
sbb
out
das
push
cmc
push
jb
xor
mov
enter
jg
flds
xor
hlt
and
push
sbb
stos
dec
stos
push
inc
inc
jno
adc
pop
dec
jbe
pop
popf
push
cmc
stos
mov
dec
nop
es
mov
cmpb
mov
and
dec
sbbb
int
cwtl
outsl
sub
and
jge
popf
pop
mov
inc
imul
sub
dec
xor
mov
adc
cmp
mov
adc
and
jno
cmp
mov
push
clc
xchg
loope
out
out
jmp
add
sbb
mov
xchg
addb
std
inc
in
xchg
aad
adc
sub
fidivrs
in
adc
xchg
adc
fxch
and
cwtl
jb
xchg
std
cmc
add
aad
js
xchg
gs
push
out
inc
fisubl
inc
pop
jle
out
pop
aaa
adc
mov
imul
pop
push
movsl
clc
fists
lods
sbb
sub
pop
jnp
jge
jmp
aad
ljmp
es
and
inc
mov
bound
mov
adc
push
sub
movsb
add
lods
es
xchg
scas
push
mov
or
fs
pusha
dec
dec
outsb
sbb
xchg
push
adc
adc
push
pop
pop
sti
std
fdivrs
dec
nop
leave
fimuls
stos
mov
cwtl
idiv
or
dec
cmp
loop
rcll
jp
and
mov
or
xor
loopne
rorl
xor
fs
cmpsl
lcall
adc
mull
adc
xor
imul
pop
cmpsb
inc
repnz
push
push
mov
lret
sbb
outsl
cwtl
or
test
pop
loop
movsl
pushf
iret
jne
jle
aas
mov
or
dec
cmc
inc
jl
pop
push
clc
fidivrs
sbb
sub
clc
sub
fidivl
mov
sarl
aad
push
jo
push
pusha
push
pusha
rcl
or
popa
sub
rcll
ffreep
cmp
aam
mov
mov
js
sarl
or
adc
in
inc
insb
in
pop
xchg
dec
mov
popa
jbe
add
push
or
cmp
xor
adc
jge
mov
jg
jne
mov
adc
call
dec
jno
dec
pop
dec
xchg
adc
loop
mov
push
jecxz
aad
xchg
dec
pushf
pop
imul
jge
loopne
cmp
hlt
dec
cmp
ds
add
lret
cli
lea
push
pop
inc
mov
xchg
sbb
mov
mov
jno
int
sbb
jp
in
lock
adc
pop
sub
xor
xchg
shrb
or
scas
xchg
pop
and
pop
jne
inc
and
icebp
mov
out
dec
cmp
or
jno
and
out
repnz
or
xchg
mov
dec
xor
leave
lods
or
mov
cmp
adc
push
add
mov
test
push
lods
sbb
cmp
dec
fcoms
mov
sahf
and
jmp
pop
shrl
push
rclb
push
daa
cmp
popf
ja
iret
je
je
push
push
inc
hlt
mov
dec
sub
jnp
movsl
mov
xor
shld
xor
mov
jmp
loop
es
mov
push
dec
sbb
sahf
adc
sbb
int3
xchg
es
gs
adc
jg
dec
push
lods
notl
mov
pop
test
enter
mov
cs
lods
mov
dec
mov
sub
xchg
fidivl
test
mov
pop
push
sarl
sub
add
cld
int
mov
lock
push
pop
orl
test
je
mov
inc
pusha
pop
lea
or
hlt
ret
xchg
mov
inc
pop
int
sbb
mov
imul
outsl
hlt
es
push
mov
inc
repz
pushl
adc
mov
jp
das
mov
shlb
dec
pop
xor
in
sbb
pushf
inc
cs
xor
xlat
sbb
or
xor
xor
cli
cmc
pusha
popa
inc
and
sbb
out
out
int3
dec
cmpsb
jns
sub
fsubrl
mov
inc
aas
dec
out
cmp
inc
xor
ficompl
push
rorl
adc
push
adc
push
neg
sbb
jbe
inc
int3
jge
mov
mov
sub
das
push
lret
cmp
fldl
std
mov
repnz
or
lcall
sub
mov
enter
mov
ds
mov
in
mov
sub
adc
jmp
mov
leave
inc
adc
jo
sub
repz
cltd
sub
mov
std
pop
js
sub
insl
dec
sub
push
imul
inc
mov
lods
sub
int3
push
jb
std
lock
or
scas
sbb
or
lahf
arpl
sub
aad
stc
test
clc
out
inc
xchg
and
in
cmp
xchg
mov
popf
xchg
js
push
sbb
jno
inc
loope
mov
inc
jns
out
ficompl
rcrb
push
jp
call
mov
ja
popf
les
pop
imul
jo
lea
in
into
ss
aad
fidivs
mov
orb
push
mov
fwait
push
fcompl
adcl
imul
jo
fcompl
aaa
pushl
jl
pop
out
push
add
pop
cmp
out
sbb
and
sti
xorb
or
pop
and
cli
push
mov
sbb
loop
dec
pop
mov
cmpsl
mov
loopne,pt
cmc
fldt
lds
dec
push
add
dec
fisttpll
subb
cli
and
scas
imul
loop
divb
jb
inc
aam
xor
aas
mov
loopne
mov
imul
add
or
dec
dec
shll
xchg
mov
push
inc
mov
jge
lods
mov
cwtl
mov
into
jo
xchg
mov
push
and
outsl
icebp
rcrb
mov
jmp
and
scas
test
adc
push
xchg
inc
imul
jae
fidivrl
xchg
adc
pop
and
fadds
scas
mov
sub
xchg
cmc
adc
mov
mov
hlt
enter
leave
xchg
xchg
jns
mov
ds
std
sub
test
loop
dec
inc
popa
pop
inc
and
inc
xor
fadds
fimuls
and
jo
cld
ds
push
pusha
xchg
add
pop
push
ds
adc
mov
sbb
das
jecxz
iret
jno
leave
scas
cmc
stos
xchg
adc
jl
andl
inc
pop
sahf
loopne
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
leave
inc
push
inc
sbb
sahf
adc
sbb
lahf
aam
nop
push
ss
movsl
inc
sub
jno
push
jmp
xchg
cmc
into
hlt
sbb
mov
fmull
inc
or
orb
push
pop
sub
pop
dec
je
lcall
arpl
push
inc
mov
stos
inc
repnz
mov
sbb
ret
mull
dec
repz
push
loopne
mov
movsb
push
inc
mov
repz
insl
dec
sub
ror
clc
lds
jmp
ss
pop
push
push
xor
fs
pop
inc
ja
out
in
cmpsb
lods
insb
and
push
inc
inc
jg
int
lcall
xor
jmp
inc
bound
mov
fs
shlb
ret
in
les
xchg
inc
sub
xlat
imul
sbb
push
xor
xor
push
or
mov
in
lods
les
sbb
mov
ficoml
lcall
daa
push
and
dec
dec
movsl
xchg
mov
std
hlt
push
jmp
cmp
nop
pop
mov
inc
int3
inc
lods
leave
pop
enter
xchg
les
gs
cli
xchg
mov
xchg
mov
out
dec
push
daa
rcll
pop
popa
fcomps
movsl
and
pushf
mov
xor
fildll
pop
das
out
repnz
inc
inc
inc
sti
ror
dec
ds
mov
push
pop
and
mov
mov
mov
push
jg
jne
jae
in
push
cmp
ret
adc
lds
jecxz
sbb
push
jne
add
mov
adc
pop
dec
addl
and
inc
jge
mov
push
leave
mov
es
in
fisubl
ja
in
mov
aas
add
inc
test
lret
ljmp
aam
andl
lcall
mov
sub
mov
mov
lods
push
sbb
inc
cmp
sbb
xchg
or
iret
jne
sub
shlb
xchg
loop
xlat
cmp
jge
movsb
add
roll
pop
xchg
sarb
adc
dec
pop
cmp
xchg
fidivrl
xor
jb
fdivl
js
and
sbb
pop
sarb
cmpl
adc
sahf
pop
das
mov
xchg
gs
xorl
push
aam
aam
inc
in
cltd
add
repnz
lds
arpl
js
push
or
cmp
jbe
xchg
lods
jbe
jg
or
pop
addr16
andl
loope
jmp
fcmovu
mov
movups
insl
mov
lret
nop
pop
out
stc
pusha
int
fisttpl
out
sbb
cmp
dec
fnstsw
xlat
fisubrs
inc
xor
icebp
and
pop
mov
sub
ds
sub
movsl
mov
adc
add
test
dec
lcall
inc
xchg
call
mov
int3
push
cmp
lgs
mov
push
pop
testb
push
pushf
out
adc
and
push
xchg
or
xchg
push
fmul
stc
mov
negb
jle
push
shll
shl
outsl
add
outsb
pop
push
rcr
cmp
mov
outsb
mov
inc
pop
mov
mov
stc
or
cmp
adc
imul
fsubrs
pop
in
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
jl
cmp
sbb
loopne
loopne
repz
rolb
and
xor
mov
test
loopne
xchg
adc
pop
mov
pop
ja
jg
inc
or
js
insb
xor
into
push
mov
or
pop
out
dec
into
sahf
dec
test
sti
sub
inc
mov
roll
cli
aas
into
iret
add
pop
mov
mov
dec
fnstcw
sub
lret
out
addl
call
aas
inc
ljmp
jge
push
and
push
xor
cmp
add
mov
iret
inc
adc
xchg
inc
mov
daa
testb
fwait
aad
add
dec
daa
or
mov
and
arpl
shlb
cmpsb
les
pop
fcompl
test
inc
ss
xchg
mov
jp
add
call
sbb
jge,pn
movsb
xchg
insl
lods
loop
aad
xchg
inc
loop
push
xor
cmp
xchg
push
jmp
call
add
mov
add
pop
pushf
popf
int
ret
xchg
cltd
int3
cmp
roll
in
pushf
jne
test
or
jns
or
das
xchg
adc
ret
pop
or
jo
shld
mov
pushf
gs
dec
aad
xlat
pusha
or
sbb
fcmovu
cmp
mov
add
jb
int
imul
cmpsl
fbld
mov
not
add
ret
in
push
addb
rcr
icebp
movsl
jns
xchg
lret
cmpsb
xor
and
xor
decl
rcrl
ret
mov
shlb
dec
lcall
mov
mov
or
mov
fistl
sti
lcall
sbb
push
leave
sbb
fbld
fdivr
sti
jp
xor
mul
sti
fsubrl
mov
xchg
sbb
mov
jl
dec
xor
mov
and
sbb
adc
push
cmpsl
inc
enter
mov
push
stc
dec
jns
fldl
lds
iret
xchg
stos
or
add
mov
iret
pop
jg
inc
sub
jmp
sub
sahf
shll
dec
je
xchg
xor
mov
cwtl
mov
rol
sub
mov
mov
sbb
xchg
lods
lods
xchg
jg
aaa
and
pop
dec
mov
mov
push
adc
fdivrl
or
push
popa
add
adc
rclb
mov
in
pop
mov
cmp
mov
out
sub
jge
repnz
add
mov
or
jno
mov
xchg
jnp
jns
push
sbb
push
add
adc
push
inc
je
les
mov
mov
sbb
lds
adc
iret
jns
pop
sahf
arpl
movlps
cli
les
xor
mov
mov
lret
testl
stc
aaa
addr16
add
inc
lahf
add
das
aaa
adc
sub
add
mov
push
pop
fsubrl
arpl
push
pop
fldl
sar
sub
aaa
sar
mov
jo
dec
shl
mov
dec
inc
inc
leave
pop
xchg
pop
pop
outsb
jno
mov
lahf
dec
insb
les
ss
mov
lea
outsl
out
hlt
xchg
andb
xchg
adc
inc
xchg
lret
sti
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
jne
jnp
push
xor
sbb
mov
das
std
lcall
mov
gs
and
xchg
jmp
mov
pushf
mov
fmul
mov
push
jmp
outsb
incb
xlat
fcmovne
shrb
ja
push
push
movsl
in
and
or
lret
or
fadd
insb
adc
stc
lods
jle
ds
out
xchg
push
ja
out
repz
xor
xchg
push
add
popf
mov
fadds
negb
sub
mov
inc
into
enter
imul
mov
notl
mov
aaa
jns
or
loop
out
mov
out
jbe
inc
jns
int
lahf
stos
rcll
push
xorb
adc
out
enter
or
insl
jp
push
test
mov
mov
out
or
xchg
push
mov
or
or
lods
jo
jae
hlt
adc
mov
fmuls
or
test
stos
cmp
loop
or
aas
jnp,pn
and
lret
and
sub
ja
push
jne
xchg
arpl
dec
dec
loopne
cmp
stc
or
cmp
add
and
jno
push
inc
es
lods
push
js
adc
and
and
jle
push
nop
and
mov
jb
inc
movsl
dec
pop
dec
pop
addr16
cli
mov
leave
push
cltd
je,pt
fcmovbe
or
cmpb
and
cli
dec
repz
addr16
aad
sbb
jno
push
imul
xor
hlt
xchg
imul
mov
push
and
stos
lds
insl
push
jns
cmp
je
dec
test
popf
std
and
test
xor
xchg
pushf
dec
mov
cmc
lcall
sbb
dec
or
fstpt
and
es
in
rcll
ljmp
idivb
dec
push
dec
fdivrl
adc
cmp
ja
dec
out
lds
loop
mov
dec
cli
jb
ret
js
xorl
mov
pop
mov
int3
mov
push
fidivrl
jle
sbb
pop
insl
sub
fisubl
mov
pop
xchg
jnp
and
xor
mov
xchg
rcll
popa
arpl
sub
lods
dec
inc
lds
movsb
push
xor
mov
lahf
adcb
loop
lret
dec
jle
mov
mov
pop
ja
loopne
sbb
sbb
movsl
adc
adc
arpl
and
divl
add
sbb
repnz
xor
rol
sahf
fistpll
pop
and
dec
dec
jns
cmp
mov
or
push
shr
xchg
xchg
out
rolb
and
mov
pop
jmp
sbb
icebp
mov
lock
xchg
fwait
fwait
push
out
fcmovbe
add
aad
hlt
xor
xlat
divl
dec
adc
pop
and
insb
add
in
ja
orl
inc
icebp
iret
fistpll
mov
fwait
inc
xor
loop
mov
dec
add
mov
jecxz
scas
aam
cmpsb
mov
cmp
pop
rclb
sarl
adc
fsubl
mov
out
push
test
push
inc
popa
in
dec
loop
aas
shr
mov
ret
ds
repnz
add
loopne
lcall
bound
stos
outsl
push
aaa
aaa
jle
add
add
add
add
pop
movsl
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
bound
fsubrs
sbb
sahf
adc
sbb
xor
pop
add
sub
push
mov
cs
pop
dec
push
clc
and
push
mov
mov
mov
mov
movsb
orl
xchg
sti
jnp
cli
pushf
cmp
and
sub
nop
idivb
enter
cmp
movsl
test
pop
dec
pop
cmp
adc
rclb
and
add
pop
dec
sub
jnp
lock
adc
decl
fwait
inc
pop
push
mov
es
push
inc
mov
pop
mov
fwait
add
and
aad
mov
adc
push
mov
aas
mov
push
out
aam
jl
aaa
or
idivl
clc
mov
sbb
mov
push
dec
in
jmp
inc
pop
rcrb
add
enter
xchg
xchg
push
mov
adc
rorb
std
stc
push
pusha
rcrb
xchg
sbb
mov
imul
ss
cld
or
jb
lods
ds
mov
outsb
or
mov
cwtl
jmp
fcoms
int
mov
adc
inc
jg
loopne
sbb
les
sbb
lock
stos
or
pop
mov
imul
xchg
scas
jl
stos
mov
out
add
roll
rclb
adc
mov
clc
adc
sub
jecxz
or
fsubrs
jns
xchg
lret
into
and
dec
cmp
in
test
cmpb
aas
or
pop
outsb
fimuls
adc
push
mov
mov
enter
in
stos
pop
cmp
mov
and
nop
mov
jecxz
pop
pop
call
aad
sbb
mov
sarb
dec
push
xchg
jmp
push
aaa
ret
dec
pop
sub
addl
pop
pop
pushf
cmp
std
jmp
pop
data16
shrl
mov
loope
cmpsb
ljmp
iret
mov
and
fsubrp
jl
push
and
out
fcmovbe
in
dec
addr16
sbb
lds
mov
imul
mov
or
mov
xchg
jb
mov
mov
outsb
sbb
push
or
dec
xchg
inc
mov
insl
jb
and
add
or
ret
iret
cmp
push
dec
icebp
loop
jne
sti
out
lds
rclb
push
mov
dec
add
adc
lds
adc
mov
inc
int
shlb
mov
and
cmp
inc
jne
sub
stc
add
sbb
ljmp
mov
in
call
inc
lcall
mov
dec
insl
or
js
in
mov
cmp
mov
adc
xchg
mov
ljmp
jne
int3
push
mov
or
hlt
test
xchg
push
repz
sub
pop
repz
xlat
fwait
lods
push
fucomi
mov
push
adc
in
out
xor
mov
lock
cli
jno
scas
lds
into
ds
pop
mov
xor
sarb
jl
adcl
inc
adc
cld
ror
fwait
sub
popa
call
repz
js
jae
mov
andb
xor
lods
rclb
add
or
xor
jb
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
pop
in
pop
and
sbb
sbb
add
sub
es
adc
in
dec
in
imul
pop
test
mov
adc
xchg
repnz
movsb
dec
insb
popa
mov
sbb
sub
enter
xchg
imul
aas
pop
lret
lret
repnz
dec
push
popa
inc
sbb
jae
sahf
imul
push
jge
movsb
add
and
pop
mov
in
insb
fcmovnu
pop
gs
cwtl
cmp
cmp
arpl
adc
jecxz
pushf
pushf
xorl
test
fbstp
hlt
test
and
mov
dec
addr16
scas
sbb
xchg
iret
repnz
lahf
mov
jecxz
sub
movsl
out
faddp
and
sub
icebp
fdivr
dec
mov
or
fsubrl
dec
push
mov
xor
addl
dec
call
xor
pop
cmp
pop
xor
cmpl
xchg
int
or
aas
in
int3
lret
frstor
mull
pop
xchg
fistps
scas
pop
xor
ds
loope
nop
hlt
cmpsb
push
dec
fdivs
rolb
lea
or
imul
mov
out
test
ds
hlt
jp
fwait
test
ret
mov
ret
popf
dec
sbb
pop
inc
push
jnp
in
js
cmp
lods
xor
jle
in
mov
pop
xchg
dec
cmp
cmp
in
cmpsl
cmp
sarl
inc
cmp
aad
sub
lods
pop
loopne
xor
sahf
or
inc
xchg
das
mov
mov
xor
fdivrl
pop
adc
mov
sub
ljmp
addl
add
out
mov
add
adc
test
mov
and
mov
or
lock
in
pop
xor
ret
xchg
sbb
mov
rclb
fwait
movsb
in
sub
jmp
dec
lahf
inc
mov
pop
mov
cld
push
gs
or
sar
or
fimuls
pop
dec
scas
xor
into
adc
mov
fwait
sub
scas
out
decl
mov
xchg
aad
fldl
es
xchg
push
add
xchg
lds
std
pusha
aas
sbb
or
add
mov
sub
cli
sub
mov
movsb
or
jge
xor
call
xchg
bound
in
lret
dec
or
mov
inc
mov
pop
sbb
cld
or
and
lahf
and
ret
mov
sbb
mov
ret
jge
das
mov
cmp
cmc
fcoms
add
sub
cltd
pop
jecxz
lods
test
out
ja
mov
push
dec
aam
das
push
jno
sbb
xchg
xchg
orb
mov
jo
rclb
fists
shll
cltd
dec
mov
leave
inc
into
jo
mov
lcall
jl
dec
cmp
or
jno
pop
inc
out
add
lods
in
popf
cmpsw
push
sub
mov
dec
sti
fnstenv
stos
incb
jmp
sub
pop
jg
mov
scas
lahf
mov
xor
mov
mov
xchg
and
sbb
jae
mov
imul
popl
sub
adc
imull
mov
push
test
push
xchg
shlb
add
clc
repz
dec
push
push
movl
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
jnp
cmpsl
mov
outsb
adc
sbb
ret
push
loope
aad
xlat
mov
ret
leave
outsl
cmp
aad
fs
negb
nop
dec
push
in
inc
test
push
add
test
xchg
data16
ss
ds
pop
adc
popa
mov
call
movl
in
popa
xchg
push
lods
bound
add
inc
mov
out
lret
jge
adc
aaa
inc
fdivl
push
lcall
push
dec
mov
jecxz
sbb
shll
cld
and
xchg
add
xor
cld
ds
cwtl
jb
pop
or
mov
cltd
call
mov
adc
stc
gs
cmp
test
add
or
sub
gs
adc
fisttpl
into
pop
mov
mov
adc
popf
mov
les
mov
out
or
lret
xchg
pushf
cltd
push
arpl
pop
das
test
fcoms
sbb
sbb
adc
adc
adc
sarl
fnsave
aad
push
out
out
scas
push
dec
rcr
add
sub
icebp
sbb
adc
subl
xchg
mov
or
outsl
dec
mov
sbb
inc
add
repnz
popa
or
push
fldenv
and
lea
rcrl
jne,pn
mov
push
xchg
push
movsl
fucomp
pop
aam
sarb
aaa
inc
outsb
sbb
dec
push
sub
pop
and
mov
mov
in
ret
dec
xchg
push
xchg
pop
mov
xor
out
jecxz
sbb
int3
push
ret
push
xor
add
movsl
sbb
jae
inc
loop
or
push
sbb
jne
je
xchg
fwait
iret
loopne
mov
fcoml
inc
mov
enter
sub
push
sub
xor
add
out
push
sahf
push
mov
pop
enter
int3
mov
push
lret
adc
fistl
jnp
pop
movsb
es
outsb
daa
xchg
sub
popf
xor
loope
scas
sbb
mov
inc
add
stos
adc
push
lods
sub
insb
mov
mov
pop
loopne
popf
add
lods
add
xchg
xchg
push
mov
imul
cmp
in
mov
xchg
cltd
xchg
out
dec
sti
inc
notl
std
push
cmp
cmp
jle
xor
stos
adc
jp
notb
adc
subl
or
push
mull
and
cli
push
dec
xor
fcom
fldt
fwait
dec
rol
xor
adc
mov
cmc
pop
enter
cmp
scas
mov
dec
sti
call
jg
test
addl
xchg
in
and
imul
imul
cmp
sub
test
notl
in
or
mov
sub
xchg
in
or
add
mov
adc
data16
pop
sub
push
fs
add
nop
push
add
les
cmc
dec
cmc
cwtl
mov
rcrl
pop
add
imul
cmp
push
leave
xor
cmp
fimuls
insb
mov
adc
jge
cmpsl
and
mov
cmp
xor
sbb
out
or
mull
jne
add
jo
int
ficomps
lods
lods
jge
popf
inc
loop
xchg
inc
push
jo
sbb
cmp
adc
mov
das
call
push
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
mov
sbb
outsb
adc
sbb
popa
xchg
fisubrs
ja
xorl
jle
sar
and
mov
add
sub
xor
or
insl
loopne
cwtl
test
das
lock
mov
out
mov
xchg
mov
or
jle
in
pop
popf
movsb
loop
push
mov
gs
shll
mov
xchg
imulb
xor
adc
daa
mov
sbb
dec
cmp
jmp
pop
addr16
lret
inc
aas
out
loop
mov
jecxz
out
or
pmaxub
mov
rcr
cmp
les
mov
push
or
and
sti
jg
push
in
popf
ds
dec
xchg
push
sbb
or
shr
dec
jmp
sub
sbb
and
add
cmpsl
rorl
mov
mov
fidivl
lret
popf
adc
mov
into
lea
or
sbb
movsl
push
iret
ficoms
or
dec
ret
stos
stos
aam
mov
xlat
push
pop
pslld
lds
repz
fs
cmp
movsb
adc
or
sub
call
repnz
xor
pop
sub
lock
mov
je
out
addr16
xor
lret
pop
pop
add
insb
psrld
lock
xor
xchg
outsb
xor
idivl
adc
push
xorb
add
add
sbb
cld
sbb
adc
push
cmp
shl
or
add
test
adc
adc
mov
lock
loop
int
mulb
jo
dec
push
cmp
insl
lods
jge
lcall
push
mov
fcmovb
sub
and
sbb
cld
ficoms
add
es
lcall
jae
adc
jae
data16
test
movsb
jecxz
pop
add
and
leave
mov
xorb
test
orl
in
aad
cmpsl
xchg
aaa
push
aaa
popa
subl
xlat
add
pop
loopne
jns
push
push
aaa
adc
lods
lods
shr
sub
test
or
ficoml
pop
xor
movsb
mov
sub
sbb
mov
mov
stc
cmp
dec
testb
fs
loope
fists
pop
cmp
or
int
mov
add
mov
dec
sbbl
sarb
movsb
in
lock
dec
lahf
sub
adc
nop
stos
mov
nop
fwait
sbb
jl
dec
das
xchg
loopne
push
add
push
xchg
sub
fstp
jbe
clc
add
in
mov
les
add
pop
jbe
push
cli
sub
movsb
cli
push
xor
cwtl
ret
lcall
push
roll
es
adc
or
lcall
cs
pop
outsb
arpl
mov
cwtl
push
rolb
xchg
jno
or
cmp
push
cmp
loopne
cld
lahf
or
cmp
daa
xor
inc
testl
fwait
jbe
xchg
test
ret
loop
stc
stos
rorl
stos
shr
aaa
fiaddl
dec
sbb
sub
dec
nop
adc
fcmovbe
addr16
in
cmpsl
and
xchg
cwtl
mov
push
cli
add
inc
inc
es
sbb
imul
popa
mov
leave
cmp
outsl
pusha
xchg
jge
in
xchg
in
sbb
cmc
mov
jp
pop
xor
sbb
add
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
jle
xchg
mov
outsb
adc
sbb
xlat
fbstp
xchg
test
lahf
jmp
jo
les
inc
in
fnop
cltd
mov
aaa
jle
loop
and
sahf
mov
and
sbb
jno
int
repnz
fsubrl
push
mov
mov
shll
add
cld
sub
jg
xchg
rol
jnp
pop
mov
imul
or
dec
inc
and
daa
ljmp
test
mov
ficompl
mov
outsb
lcall
mov
jae
push
pop
mov
movsl
lods
inc
aaa
cltd
fcomps
or
popf
enter
xor
sahf
or
xchg
mov
imul
testb
cld
inc
das
hlt
lret
jae
cs
adc
xchg
sub
mov
xor
fisubl
scas
inc
pushf
stos
lret
xchg
in
lock
mov
arpl
lcall
lret
int
jne
in
test
cmp
push
xchg
mov
xchg
insl
rcrl
call
push
jmp
fstpl
ss
gs
fptan
call
or
enter
mov
mov
inc
pusha
add
jnp
mov
data16
mov
adc
rcrl
sbb
push
jo
in
sub
jmp
sti
xchg
call
mov
sub
inc
jecxz
mull
jmp
clc
cltd
mov
ror
out
iret
xchg
les
mov
mov
mov
dec
ds
push
jge
mov
mov
add
mov
jp
insb
inc
lahf
incb
enter
sbbb
inc
jmp
mov
cmp
adc
jg
dec
xchg
and
sarb
in
test
cmp
add
fcoml
ss
mov
mov
lcall
popa
shlb
out
aaa
daa
sbb
lret
mov
mov
fcompl
fs
mov
add
lcall
and
xchg
inc
or
xchg
mov
lahf
stos
sar
sub
sti
add
push
jmp
pop
adc
das
ret
pop
test
dec
das
repz
fmuls
mov
jecxz
frstor
inc
jo
jge
aaa
and
xchg
mov
pop
jae
jmp
push
xchg
adc
jl
sahf
dec
xchg
adcb
xchg
or
jbe
movsb
mov
inc
adc
mov
jnp
xchg
or
lods
lret
stc
addb
mov
js
jbe
adc
out
test
jle
push
sbb
addr16
pop
and
popf
out
jo
and
sbb
cltd
pop
ret
repz
xor
sub
sarl
lock
lock
jmp
or
pop
das
lcall
mov
sarb
fidivs
sub
and
ffreep
pop
push
jle
ljmp
and
movsb
inc
mov
push
pop
xchg
or
inc
fmuls
inc
lock
dec
jbe
adc
outsl
lea
push
arpl
cmpsl
cmc
pusha
data16
rcr
sub
xchg
lds
cvtps2pd
xchg
pop
in
arpl
inc
rep
jne
or
or
jecxz
pushl
add
mov
orb
jmp
sar
xor
andl
push
mov
scas
lret
fsubl
sahf
pop
std
xor
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
rolb
mov
sbb
outsb
adc
sbb
repnz
and
icebp
in
xor
cmp
mov
mov
dec
dec
arpl
dec
shll
aad
mov
cs
and
cs
mov
adc
out
dec
sbb
sub
fwait
lret
sbb
insb
call
mov
pusha
inc
in
repz
xor
adc
inc
jmp
dec
or
inc
inc
sti
lcall
jns
fnstsw
out
dec
fistpl
leave
xor
addr16
fstl
movsl
arpl
lods
mov
push
pop
adc
jecxz
shl
xchg
jo
test
loope
repnz
out
test
pop
xor
mov
insl
inc
pop
ds
sub
xchg
adc
xchg
mov
pusha
push
push
sbb
cmovbe
mov
stc
cld
mov
push
lcall
imul
push
outsb
push
push
or
and
in
mov
pop
or
sbb
jo
cmp
fwait
lcall
and
lret
js
cmpsl
leave
xchg
cmp
push
cwtl
cmp
or
iret
out
mov
call
addb
sbb
and
jmp
std
mov
addr16
mov
outsb
mov
push
mov
jo
jge
dec
dec
adc
mov
test
xchg
fldcw
jp
xor
sub
iret
das
sub
int3
push
dec
inc
movsl
mov
or
add
pop
mov
and
xor
xor
jmp
sub
push
sbbl
mov
xchg
pop
inc
and
gs
mov
or
test
call
out
imul
inc
loope
cmc
dec
mov
std
jo
inc
andb
fwait
aaa
push
push
mov
cmp
inc
mov
movsb
cmpsb
nop
jecxz
mov
jae
and
je
outsl
and
in
fildll
mov
hlt
loope
mov
lock
sub
ja
inc
mov
in
mov
sbb
push
out
movsl
ret
stos
pop
sbb
pusha
ds
inc
or
adc
add
xor
jp
cmp
mov
mov
xor
movsb
dec
jb
jecxz
xchg
xchg
lods
push
std
lcall
mov
inc
cmp
loope
xchg
xchg
rolb
inc
cmc
out
aam
or
hlt
aam
testb
cmpsl
or
sub
popa
cmp
dec
lahf
push
xor
or
jne
jp
icebp
adc
inc
idivb
inc
adc
repz
pop
mov
fwait
lods
nop
mov
rcrl
jns
idivb
daa
mov
sahf
outsl
shlb
aam
mov
cld
sbb
aad
mov
sub
test
jne
mov
sti
mulb
cs
adc
jbe
cmp
cltd
les
call
mov
mov
jp
fidivrs
add
xor
jne
inc
add
fs
cmp
out
fbld
adc
sbb
fistps
test
test
add
push
or
sbb
aad
lahf
jmp
sbb
cld
or
repnz
sbb
mov
jb
in
add
and
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
cmp
mov
sbb
sbb
lock
dec
loope
xor
call
dec
test
mov
cmp
xor
push
mov
nop
xchg
shll
aaa
les
cltd
adc
pop
mov
loop
cld
mov
push
loop
dec
mov
movsl
sub
loop
test
into
lret
or
adc
movl
iret
sub
loope
mov
add
imul
sbb
dec
mov
add
cmpsl
sti
sbb
cld
faddl
sar
cmp
mov
inc
pushf
aam
jg
adc
outsl
sti
into
xchg
loope
shl
imul
sub
xor
leave
les
icebp
push
je
aas
mov
lret
cmp
xor
cltd
stos
fbld
sahf
inc
cmpb
mov
xchg
push
xchg
adc
cwtl
stos
lahf
sub
inc
inc
int3
mov
lock
jmp
aaa
dec
jle
movsl
inc
xor
pushf
rcrl
xchg
pop
xor
cld
hlt
dec
push
pop
jle
bound
lahf
xchg
or
leave
ljmp
ror
xchg
pop
loop
cmp
popa
or
push
add
mov
js
hlt
scas
mov
add
mov
imul
xor
push
sbb
repnz
mov
dec
push
cwtl
jbe
arpl
xor
out
repnz
outsb
cmpsl
or
imul
je
sub
dec
aaa
scas
insl
jns
js
lods
sarl
mov
or
into
out
inc
call
ljmp
push
cmp
cmpsb
xor
stc
xor
xchg
xor
lods
into
mov
or
xchg
orb
mov
fiadds
loop
push
leave
hlt
lock
or
test
cmp
dec
cld
insb
dec
mov
ds
sbb
loope
inc
inc
pop
lret
icebp
pop
lret
add
mov
sahf
jmp
cs
movsb
sub
and
mov
xor
mov
call
cmp
outsb
ror
mov
add
cltd
stos
jno
add
imul
pushf
sub
xchg
mov
pop
inc
fcoms
pop
loop
sbb
shll
aad
cs
mov
sbb
and
lret
pop
mov
in
arpl
cmc
cld
mov
sti
mov
sub
out
inc
xchg
and
xchg
sub
and
fstps
cli
fwait
jae
mov
pop
pop
aam
in
shlb
out
inc
adc
ss
lods
xchg
fs
xor
push
data16
nop
loop
fcmovne
shlb
hlt
stos
loope
mov
or
pop
sti
dec
jae
mov
daa
out
inc
mov
mov
mov
or
mov
adc
cmc
call
jae
in
xlat
cmpsl
push
jnp
mov
cmp
pop
fwait
lods
jae
imul
out
adc
jmp
test
jne
insl
add
or
add
jle
dec
mov
xor
push
shrb
das
or
sbb
dec
adc
jl
jnp
popa
mov
ds
xchg
dec
leave
sbb
fmuls
dec
loope
iret
and
cwtl
sub
jl
pop
fisttps
std
data16
inc
lahf
data16
in
xor
adc
loope
adc
aas
pop
dec
aas
xchg
fxch
mov
push
mov
dec
ja
iret
xlat
dec
popf
jle
call
je
sub
xchg
push
mov
test
and
pop
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
mov
outsb
adc
sbb
scas
push
fbld
mov
scas
bound
rorb
pop
in
cmp
xor
lods
js
rorl
dec
mov
dec
shl
jns
rcrl
push
in
clc
mov
popa
xchg
test
int3
push
xor
incb
lret
fcmovne
fisttpll
in
or
call
push
test
int
daa
js
sub
shl
inc
mov
sahf
xchg
dec
mov
pop
or
neg
fcomps
dec
jmp
sbb
cltd
xchg
adc
dec
lcall
jno
and
mov
sarb
jae
push
clc
call
cmp
sub
psrlw
cmp
popa
shld
cmp
xchg
fistps
mov
xor
loop
dec
and
and
xor
hlt
jne
push
int3
rcl
xchg
notb
stos
pop
sbb
xor
sbb
repz
mov
loope
dec
add
xor
aad
in
add
dec
add
sbb
or
push
orb
stos
inc
test
xchg
xchg
sub
xor
cmpsl
jge
outsb
push
mov
sbb
dec
lods
cmp
adc
pop
mov
jmp
xor
stc
add
popf
dec
sbb
inc
dec
scas
push
stos
cmp
jne
xchg
mov
outsl
xchg
push
daa
nop
outsl
pop
stos
push
daa
pop
int3
cmc
pop
push
add
mov
pop
ljmp
mov
mov
out
and
mov
fs
push
rolb
pop
loop
mov
push
and
scas
pop
into
dec
pop
lret
dec
aas
cmc
scas
cmc
xchg
adc
stos
cli
xor
je
popf
or
mulb
in
ret
mov
fwait
es
test
dec
jg
jge
mov
leave
in
test
adc
mov
roll
pop
xchg
inc
add
scas
mov
push
and
loope
xlat
sbb
sub
mov
mov
lahf
jmp
mov
divl
mov
mov
inc
stos
cs
xchg
and
mov
adc
xlat
mov
and
nop
cli
ret
sbb
ja
inc
jecxz
inc
icebp
sti
jl
jne
mov
ror
sub
aam
xor
mov
cmp
inc
push
test
fisubrs
mov
stc
ficomps
inc
repnz
rcl
mov
stos
dec
xchg
pop
or
or
sbb
leave
dec
add
jmp
mov
xchg
mov
in
jb
das
aaa
pop
mov
icebp
lods
mov
dec
in
adc
jne
outsl
lods
sub
xchg
int3
repz
paddd
inc
por
cmpsb
daa
sub
mov
push
jo
or
add
jge
pop
nop
push
aas
dec
pushf
xchg
lds
in
pop
adc
lock
orl
dec
scas
fs
sub
dec
dec
int3
push
and
sbbb
add
daa
jg
faddl
jle
dec
dec
enter
loopne
jmp
cmp
dec
sbb
pop
push
mov
in
mov
pop
dec
ret
jmp
cmp
insb
pop
or
pop
xor
jns
xchg
orb
adc
cltd
pop
xchg
jmp
sub
mov
in
sbb
fidivrs
fwait
loop
xor
pop
outsb
xorl
test
cmp
mov
lock
cmp
out
subl
mov
not
xlat
lock
xchg
out
cwtl
and
add
mov
add
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
and
mov
xchg
xchg
or
call
aas
pushf
push
jbe,pn
xor
stc
ret
leave
fs
xchg
mov
int
sarl
fcomps
mov
add
roll
subl
xor
xchg
mov
sbb
movsb
push
inc
cli
in
dec
push
pop
test
sbb
shrl
mov
jmp
sbb
push
test
icebp
test
mov
push
fbstp
mov
adc
mov
xchg
jmp
stc
or
push
sub
mov
or
cmp
fbld
rorl
movsl
ljmp
inc
addr16
iret
mov
pop
push
jne
mov
ljmp
ret
push
out
jnp
das
add
je
lock
cwtl
icebp
fwait
mov
cwtl
add
inc
out
pop
loop
aaa
xor
test
pop
xchg
pop
xchg
jnp
ds
xor
xor
scas
push
jns
mov
rcrl
dec
mov
shlb
push
xor
sub
jl
scas
and
shrb
sbb
cmpl
stos
adc
pop
pop
cmpsl
add
push
inc
hlt
add
push
fdiv
xor
lret
je
ss
lcall
cli
iret
jne
xchg
pop
cmp
fldenv
std
stos
adc
pop
cmp
add
cwtl
sub
xchg
cmpxchg
mov
lret
jmp
mov
push
and
adc
lret
pop
jecxz
arpl
fsubs
xor
int3
dec
cwtl
add
imul
cmp
cmp
psrld
inc
cmpsl
xor
sbb
push
repnz
push
fdivrp
insb
inc
std
sarb
in
dec
loope
push
jp
jl
jle
mov
xchg
pop
test
inc
lret
cmp
into
mov
lock
dec
add
divl
sahf
xchg
inc
je
pushf
pop
popa
push
xchg
dec
jle
dec
aam
cmpsb
xor
outsl
scas
in
jmp
or
inc
jg
jbe
mov
adc
pusha
pop
cmc
pop
adc
daa
xlat
xor
adc
lods
push
jae
testl
mov
inc
push
sub
push
xchg
xchg
adc
leave
inc
xor
fs
inc
sti
cmp
shll
or
test
scas
inc
cwtl
test
loop
fisttpll
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
cmp
sbb
adc
sbb
lods
lcall
cmp
testb
push
cmp
stos
mov
xchg
inc
repnz
cmpsb
add
jno
xchg
push
dec
mov
pop
mov
jb
push
addr16
lds
std
aad
stos
stos
lret
xchg
inc
pop
add
sbb
and
pop
sbb
js
scas
and
stc
adc
mov
and
cmp
iret
pop
int
ss
ds
dec
daa
icebp
out
mov
and
popf
mov
js
fisttps
dec
das
mov
ret
sbb
jp
xor
jno
add
sub
insl
cmp
and
xchg
adc
adc
sbb
js
mov
mov
das
outsl
pop
sub
lock
and
pop
cmc
pusha
or
jb
out
mov
jmp
cmp
lea
test
jge
push
aam
push
sbb
mov
adc
lret
repz
sti
pop
mov
inc
movsb
jnp
cmp
fcomp
sbb
xchg
or
loope
sbb
xchg
cmp
push
add
mov
push
sahf
pop
or
lcall
adc
add
cltd
sahf
adc
andl
cmp
loopne
sub
push
pop
lods
add
mov
fld
pop
sbb
or
mov
xor
rcll
mov
push
pusha
daa
push
dec
or
ss
jp
mov
mov
dec
pop
out
and
sbb
imul
dec
rol
mov
push
je
mul
fisubl
dec
jno
and
imul
push
adc
jo
push
inc
or
daa
fisubrl
out
jp
paddd
nop
dec
xchg
xchg
cwtl
and
or
dec
xor
jnp
cmp
lahf
clc
es
je
in
push
and
or
fptan
sbb
aam
cmc
out
xchg
call
jne
mov
or
mov
cwtl
inc
sbb
or
outsl
sub
cmp
add
hlt
jl
out
lret
test
fldenv
adc
loop
push
sbb
or
push
mov
dec
cmpl
inc
out
popf
push
mov
scas
movsb
ficompl
mov
add
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
not
jo
loop
sbb
adc
sbb
push
jl
jno
push
sbb
je
mov
jo
jp
push
mov
push
inc
mov
mov
nop
insb
rcrl
pop
mov
ret
mov
pop
gs
lods
fcomp
mov
sbb
dec
mov
add
cmc
push
imul
xor
ljmp
jo
jno
pushw
sbb
jle
adc
mov
iret
lds
aad
jle
pop
push
adcb
inc
imul
je
xlat
cs
int3
adc
pop
sbb
xor
dec
mov
std
imul
addl
out
fdivrl
push
push
inc
clc
nop
pushf
aas
lds
jbe
add
loope
ss
mov
inc
fnstsw
inc
jne
mov
jne
je
insb
std
fbld
loop
imul
jle
xor
pop
adc
fwait
push
jge
bound
dec
lret
adc
cltd
xchg
add
push
js
sub
pop
adc
andb
sbb
repz
xor
cmp
sbb
outsl
dec
push
movsb
add
xchg
and
js
sahf
daa
mov
test
mov
xor
lods
adc
sbbl
lods
out
in
dec
cli
test
jnp
dec
fs
dec
fldl
push
mov
push
pop
pusha
les
inc
testb
aad
jo
pop
pop
xchg
call
mov
xor
or
jle
add
add
sub
or
xchg
inc
leave
pop
add
imul
pop
icebp
in
fs
mov
inc
fimull
lahf
les
sbb
roll
inc
sbb
daa
push
movsl
js
outsb
out
or
jnp
insl
xchg
into
jmp
xchg
and
sbb
jo
out
in
fdivl
push
repnz
add
psllq
xchg
push
sub
mov
inc
jnp
ret
fisttpll
jb
daa
ret
jns
bound
repnz
shlb
ret
sub
mov
add
add
mov
xor
pop
sbb
xchg
dec
outsb
mov
icebp
aas
rolb
adc
xchg
pop
lock
push
fsubl
push
call
sahf
adc
pop
sbb
testl
mov
xor
jmp
pop
fdivs
sbb
pop
into
sbb
jae
mov
sbb
rclb
sbb
xchg
xorb
in
jnp
mov
nop
fsubs
mov
cmp
pop
xor
cmp
mov
jns
insl
adc
adc
cli
enter
sub
es
xor
outsb
and
cli
arpl
push
jge
sar
imul
push
dec
and
sub
or
ds
fbstp
addr16
addr16
ret
xchg
or
pusha
add
xchg
add
xchg
pop
in
sbb
cltd
adc
xchg
lds
add
rcl
jo
jge
push
inc
clc
or
push
out
gs
jge
cmpsl
push
dec
pop
dec
lea
int
cld
sbb
sbb
mov
inc
add
aas
push
inc
out
dec
leave
lds
xchg
imul
enter
inc
adc
ljmp
rcll
mov
stos
or
mov
lods
inc
clc
int3
xlat
jae
adc
cwtl
fs
in
int3
shr
xchg
gs
xor
sbb
mov
loopne
push
cmp
loopne
ljmp
adc
imul
xchg
shrl
popf
mov
dec
and
xor
sub
adc
mov
pushf
fdivr
push
or
sbb
imul
arpl
sub
stc
imul
jmp
sub
sub
cmp
insb
jo
test
mov
or
and
shr
jmp
pop
add
pop
cld
push
add
sti
add
mov
mov
test
pushl
push
aas
push
stos
mov
ljmp
ss
out
or
fsubrp
ja
jge
ffree
xor
stc
push
insb
loope
movsb
cmp
test
mov
movsb
loopne
dec
sbb
jecxz
fistps
in
pop
dec
sub
inc
xchg
xchg
mov
insl
or
fs
fxch
pop
sbb
scas
fimull
cmp
sti
js
and
scas
loop
inc
push
sarl
inc
rorl
test
adcl
push
xor
ljmp
scas
lret
or
dec
and
nop
pop
fucom
outsb
push
mov
clc
daa
clc
push
pop
mov
cmpsb
dec
mov
cmp
and
or
ret
out
xchg
mov
addr16
sbb
mov
fbld
mov
sbb
icebp
int
ret
outsl
icebp
dec
and
popa
and
into
and
subb
inc
out
mov
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
mov
rclb
sbb
inc
inc
leave
inc
lea
cmp
add
cmpsl
sbb
mov
lahf
ds
xor
icebp
repz
aaa
push
es
push
sub
push
nop
lret
sar
sbbl
scas
test
xor
mov
xchg
jb
mov
adc
xchg
pusha
lret
inc
pop
mov
push
cmp
jg
inc
movsw
int
mov
scas
and
mov
insl
lret
push
jb
or
adc
int3
and
pop
clc
movsb
push
into
xchg
mov
fwait
sti
jnp
dec
xchg
fs
int
push
cltd
pop
adc
loopne
ficomps
jecxz
cmp
scas
popa
or
and
sub
or
ja
out
or
cmp
inc
mov
jecxz
bnd
mov
popf
inc
movsb
outsl
dec
mov
ret
push
rcll
sub
xor
mov
jge
mov
inc
iret
jecxz
cli
mov
adc
push
fisubl
aad
xor
mov
or
imul
add
repz
leave
jae
or
loopne
mov
push
ja
subl
dec
icebp
dec
xchg
sti
sub
cmp
and
mov
loop
loopne
jmp
push
popf
das
add
fisubrs
dec
arpl
test
lea
and
push
jae
imulb
mov
pushf
sbb
scas
add
mov
jno
xor
xchg
fwait
inc
dec
mov
out
in
stos
enter
xchg
add
or
or
dec
in
sahf
dec
jns
fwait
xchg
shlb
mov
jae
lock
sbb
mov
imul
imul
mov
inc
das
add
mov
dec
mov
xor
pop
xchg
push
jle
adc
addr16
js
pop
addb
adc
adc
lea
insb
mov
xchg
movsb
cs
fwait
xchg
lahf
sbb
fdiv
movsb
fists
jge
dec
lock
insb
in
pop
fmull
cltd
call
sub
xchg
cs
outsl
outsl
negl
mov
xchg
aaa
pop
das
fnstcw
xor
popf
jbe
and
test
out
fs
push
push
mov
out
out
je
dec
jmp
push
or
jge
aad
or
insb
xor
lret
cmovnp
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
inc
jno
pop
rcrb
sbb
adc
sbb
or
insb
xor
clc
mov
jae
or
enter
adc
sahf
stos
mov
xchg
aam
cmp
cwtl
sub
in
sub
ret
into
rorl
inc
adc
push
cmp
hlt
out
stos
dec
dec
hlt
push
ret
xchg
push
imul
and
sbb
in
das
into
adc
in
push
mov
xchg
push
int3
movsl
adc
test
mov
pop
xchg
sub
push
les
mov
push
in
xor
and
clc
es
xor
bound
jl
jl
adc
sbb
xchg
xchg
movsb
adc
hlt
xor
into
pop
push
mov
aaa
clc
std
out
sbb
jg
pop
aaa
aas
lret
les
mov
cmp
outsl
or
push
pop
inc
jmp
imul
xchg
xor
les
cmpsb
fdivs
minps
lret
loope
scas
popf
into
mov
imul
ss
jno
adc
orl
int
inc
insb
iret
push
sub
jne
dec
into
sbb
jp
pushf
ret
test
stos
sub
rorl
pop
dec
adc
ds
sahf
and
cld
mov
mov
and
aad
lods
das
lret
and
and
setnp
add
outsl
hlt
mov
fmull
xor
iret
push
mov
js
jl
pop
mov
or
aaa
sti
jmp
test
dec
scas
aas
bound
jnp
das
or
data16
scas
push
shrl
jb
pop
into
mov
sub
es
cmpsb
clc
xor
mov
xor
push
jb
gs
inc
add
cmpsl
clc
xor
shlb
aad
leave
fnstsw
push
iret
fst
imul
outsl
push
cmpsb
pushf
fistl
icebp
dec
and
outsl
push
inc
lcall
adc
loope
push
movsl
push
inc
dec
xor
cmp
cmp
or
jnp
insb
xlat
sysenter
adc
or
int3
mov
out
sbb
xchg
test
ds
push
cmpb
hlt
andb
data16
icebp
mov
sub
inc
pop
popa
pop
jle
out
loope
mov
mov
mov
sbb
loopne
pop
sbb
lcall
xchg
pop
jge
out
push
popf
outsl
pop
pop
orb
aam
jne
sub
dec
scas
cld
add
popa
jg
push
mov
xchg
mov
add
lret
adc
cmp
inc
fdivrl
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
lods
fnstcw
adc
sbb
hlt
push
outsb
mov
subl
out
pop
je
lea
outsb
push
lods
rcrl
mov
cmp
lea
mov
mov
dec
pop
or
cs
aas
loop
lahf
push
ljmp
aaa
adc
movsb
sbbl
adc
sti
sbb
dec
jle
mov
or
fwait
daa
insb
xor
and
push
pop
test
idivb
adc
rorb
out
xchg
int
mov
pop
sub
cmp
lea
and
mov
xchg
pop
lret
and
dec
paddq
cmpsb
aad
jb
movsl
jg
sbb
xor
xor
or
sub
ret
and
jae
jne
cli
dec
shr
les
cmp
jp
fistpll
or
add
mov
jo
sub
xor
int3
hlt
hlt
pop
leave
test
out
mov
call
cmpsb
lds
push
fs
push
popf
mov
add
sbb
movsl
pop
in
adcb
das
in
mov
imul
xor
cltd
mov
jne
pop
dec
dec
cmp
shrb
mov
jmp
cmpsb
mov
mov
aaa
mov
ret
pop
jbe
loop
push
adc
xchg
ds
imul
call
call
movsb
push
pop
inc
stc
fldenv
pop
sub
mov
push
xchg
loop
mov
ss
push
out
xchg
cs
les
imul
dec
out
movsl
pop
and
divl
leave
jg
jmp
xchg
nop
arpl
loope
lret
sbb
mov
test
sub
out
repnz
mov
test
sbb
cmp
add
cmp
loop
call
pop
sub
sub
cmp
popf
test
scas
inc
push
test
mov
dec
mov
inc
sahf
iret
insb
inc
pop
mov
push
stc
and
mov
sub
push
adc
cmpsl
incl
lea
inc
or
dec
add
push
fldcw
adc
call
fiaddl
pop
sub
leave
dec
subl
adc
pop
pop
lret
mov
add
sbb
fdivl
fisubrs
mov
fldl
dec
jg
fdivs
lea
xchg
xchg
add
into
loope
incl
inc
hlt
jmp
sub
mov
inc
pop
and
leave
out
jle
xchg
sarl
adc
sbb
pop
loope
mov
cltd
add
subl
mov
cmp
int
push
xchg
sbb
cltd
and
pop
pop
addr16
xorb
repz
and
jp
jecxz
xchg
inc
stos
pop
jecxz
cmp
andb
push
jae
stos
mov
dec
in
dec
xor
push
jmp
mov
push
push
inc
pushf
or
jnp
jg
lea
sub
bound
adc
shl
fiaddl
cmpsb
cmpsb
addr16
inc
mov
add
dec
push
lcall
and
mov
sub
mov
int3
shr
adc
pop
addr16
fistpl
in
fdivl
and
xchg
dec
mov
pop
dec
movsl
int3
cmp
out
pop
xchg
sub
clc
repnz
in
push
push
mov
iret
and
mov
in
dec
aas
cli
ror
je
aam
popf
frstor
test
sbb
dec
int3
ds
xor
lds
dec
scas
int
rcrl
and
out
aad
adc
push
dec
inc
scas
bound
mov
int3
inc
mov
cwtl
push
and
xor
loopne
xchg
lods
mov
sub
push
out
fdivl
adc
or
xor
jge
mov
fucomp
outsl
mov
mov
int
jmp
sub
cmp
add
xchg
or
out
inc
nop
addr16
inc
mov
inc
inc
addr16
out
sub
gs
sti
cs
and
stos
xchg
roll
adc
cwtl
add
lret
loop
lcall
xchg
or
in
pop
mov
pop
add
loope
cmpsl
movsb
mov
sti
iret
inc
outsb
hlt
lods
addr16
mov
mov
das
pop
lds
sbb
ds
sbb
aam
add
inc
fxch
sub
dec
mov
shl
lret
mov
inc
push
ljmp
dec
xchg
mov
fstl
jecxz
sub
mov
daa
lds
aad
aad
xchg
rcrb
clc
sbb
mov
sbbl
mov
sbb
aad
mov
mov
mov
add
or
sub
aas
test
sti
pop
sub
mov
push
clc
mov
pop
das
lcall
lock
mov
push
mov
push
out
aam
shlb
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
stc
divl
mov
dec
rorl
das
adc
aad
data16
pop
js
mov
and
cmpsl
push
pushf
push
mov
mov
fmull
lods
test
push
inc
pop
xor
rcrl
es
push
push
mov
sub
sbb
daa
insl
fistpll
sub
into
clc
inc
loope
push
int
repnz
pop
int
push
and
adc
add
mov
add
sub
xchg
and
adc
jo
jnp
inc
or
aas
iret
push
clc
vcvtsd2ss
adc
and
lret
xchg
es
mov
cltd
pop
fisttpll
mov
jbe
push
pop
insl
mov
gs
xchg
daa
push
mov
push
push
stos
arpl
test
test
and
inc
xchg
mov
jle
out
pop
push
adc
dec
mov
pop
cmp
pushf
in
or
sbbb
jno
add
sub
pop
rep
pop
or
test
mov
jno
movsl
repz
mov
dec
jo
xor
es
adc
fcompl
xchg
inc
mov
fimuls
into
out
sbb
enter
jbe
stos
push
fiadds
leave
scas
sbb
shll
cmp
incl
mov
in
sbb
sub
addb
and
dec
inc
inc
stos
in
inc
ss
dec
mov
pop
fnstcw
outsb
and
fwait
das
fadds
xchg
daa
dec
ret
addr16
leave
test
and
push
cs
pop
divb
add
mov
add
mov
cmp
push
jae
adc
xchg
mov
scas
pusha
push
js
jg
adc
mov
mov
test
push
xor
pop
push
sbb
mov
push
insl
aam
mov
jl
subl
jno
mov
rcll
cmpsb
xchg
mov
lret
ret
pop
sbb
or
or
push
rcll
jle
pop
mov
inc
adc
inc
test
xchg
xchg
inc
cli
or
stos
and
or
dec
ss
test
lock
dec
fwait
pop
imul
adc
push
mov
dec
sub
mov
jg
scas
leave
std
pop
jge
out
jb
movsb
sbb
xor
rorb
mov
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
sub
sbb
rclb
sbb
dec
ljmp
xor
test
idivl
pusha
or
inc
adc
lods
sub
pop
mov
xorl
push
push
sbb
mov
fcmovnb
std
dec
lcall
aam
dec
xlat
repz
ljmp
aaa
outsb
sbb
icebp
cmp
movsl
movsb
bswap
dec
inc
std
or
inc
cltd
std
lds
mov
xor
inc
jne
pop
push
mov
in
mov
stos
inc
insb
mov
push
les
pop
push
mov
aaa
les
sub
es
dec
lcall
mov
xchg
inc
mov
subb
sti
mov
push
xchg
call
push
cmp
mov
and
push
dec
sub
inc
les
gs
mov
cltd
jo
shl
jne
inc
jge
imul
cmp
adc
imul
xor
in
imul
mov
push
push
jne
push
jecxz
ljmp
dec
icebp
cmpsl
xchg
jno
dec
cli
ret
fisubl
out
movsb
insb
mov
mov
lret
movsb
ja
setl
lret
mov
rorl
out
or
xchg
or
or
mov
pop
test
enter
fs
daa
in
push
leave
iret
or
sub
into
and
cwtl
ret
mov
xor
fsubr
adc
test
jne
mov
sub
fbstp
mov
pop
sbb
out
mov
rclb
or
cmp
mov
mov
pop
dec
icebp
cmp
sub
lock
inc
stos
addl
orb
mov
lahf
popf
sbb
and
sub
movsl
mov
call
sbb
cmpsb
mov
cmp
xor
jl
cmp
aam
iret
jnp
loope
pusha
pushf
or
cmp
aam
enter
stos
mov
pop
xchg
fsubr
xchg
ljmp
dec
and
in
sub
mov
fstps
scas
xor
jg
xchg
sbb
idivb
push
pop
or
popa
cltd
inc
adcl
push
push
pop
mov
push
push
xor
subb
adc
dec
dec
dec
fistpl
test
andb
iret
inc
aad
insb
lret
cmc
pop
mov
or
push
or
push
in
dec
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
out
push
stos
std
mov
sbb
lock
ljmp
cwtl
jbe
popa
or
push
nop
popf
jbe
loope
inc
push
scas
pop
popf
fucomp
mov
scas
sub
pop
sarb
mov
adc
mov
and
cmp
pop
fcom
and
divl
jmp
mov
jnp,pn
aaa
cmp
dec
xchg
aaa
push
dec
mov
mov
das
jl
sti
push
or
mov
mov
push
cmp
add
fwait
or
and
jnp
push
xchg
shr
mov
shll
lahf
rolb
fsubp
mov
out
add
ficomps
iret
enter
ljmp
mov
popa
cmp
dec
arpl
mov
inc
in
xor
popa
jmp
fdivrl
pop
rclb
adc
pop
xchg
mov
jl
push
push
cmp
mov
mov
pop
push
xor
xor
bsf
pop
xchg
xchg
mov
jecxz
dec
mov
sbb
cmc
lock
in
adc
enter
jge
pop
into
and
inc
pop
inc
add
loop
rorl
pop
xor
cld
rclb
fcmovne
adc
icebp
inc
ds
cmp
incl
dec
dec
jo
jmp
dec
dec
push
icebp
cli
jo
cmp
out
fmulp
cmc
pop
fstl
jg
test
add
mov
xorl
fldcw
xor
mov
popf
xchg
adc
xchg
lcall
inc
repz
cld
mov
outsl
adc
stos
iret
cmp
cmp
push
xchg
jns
sub
jmp
les
stos
ficoms
xchg
mov
xchg
mov
pop
and
push
jns
cwtl
jbe
mov
gs
jae
inc
inc
jl
push
mov
mov
mov
shll
popf
mov
mov
aam
aaa
push
outsl
mov
mov
xor
lret
adc
movsb
or
cmp
add
stc
inc
ret
xor
repnz
push
test
in
mov
sub
xor
dec
sti
pop
and
adc
mov
pushf
and
jb
jp
adc
mov
dec
xchg
ljmp
aad
cmp
popf
xlat
cmp
push
cmp
test
xor
decb
data16
iret
sub
adc
cli
push
lds
mov
js
dec
js
js
xchg
lea
mov
and
add
xor
add
cmp
jmp
cmp
daa
sub
jmp
sbb
rclb
sbb
mov
push
or
imul
pop
daa
inc
sbb
sahf
clc
fmull
das
push
push
mov
and
sbb
sbb
fsubs
rcrb
mov
loop
fwait
pop
sbb
pop
movsb
test
cmp
sbb
test
popa
scas
xchg
mov
or
pop
lods
xor
xor
fs
in
cwtl
loop
add
and
mov
jb
jnp
ret
iret
test
mov
stc
in
fcompl
rorl
rcrl
push
pop
sub
test
fidivrl
and
fstps
pop
xlat
mov
push
mov
aas
cwtl
adc
add
das
inc
cmc
pop
std
mov
sub
cmp
mov
ror
in
jge
mov
mov
pushf
or
jo
es
jne
stos
call
aas
out
sarl
imulb
call
es
imul
test
rorl
push
fcomps
fadds
enter
je
adc
fcmovnbe
and
subl
inc
loopne
lret
cli
cmp
add
cli
cld
add
jle
cltd
cwtl
add
mov
adc
imul
fidivrs
outsb
sub
insb
imul
xor
lock
pop
or
add
cmp
dec
js
add
pop
push
cmp
negb
pop
xor
incb
into
mov
aam
and
mov
jns
xor
sbb
sbb
jns
lcall
cltd
and
stc
mov
addb
sub
cltd
sbb
jne
fdivl
movsb
rorl
incb
fsubs
fidivrs
aaa
into
dec
jecxz
mov
stc
jno
popf
daa
push
cmc
and
pop
scas
cmp
test
stos
loopne
test
inc
push
and
sbb
cmpsl
cmc
cmp
sbb
dec
xchg
mov
and
cmp
ss
xor
pop
mov
testb
fldt
pop
or
ja
and
movsl
fwait
sbb
addr16
lret
inc
inc
pop
dec
lods
fld
je
lods
adc
icebp
pop
nopl
push
or
jge
push
in
sbb
repnz
jmp
adc
sbb
lods
jecxz
mov
pop
rolb
cmpsb
aad
outsl
pop
add
add
cmc
push
adc
stos
sbb
fwait
aaa
sbb
or
icebp
ret
dec
loop
ret
push
ss
pop
jmp
inc
mov
inc
lcall
loope
jo
sbb
rclb
sbb
pop
sub
xlat
cltd
mov
mov
in
ficoml
into
aaa
push
inc
lret
icebp
insb
cwtl
arpl
push
push
sbb
aad
fnstcw
and
pop
xchg
andl
sub
jb
fbld
fiadds
addr16
shl
bound
push
andb
cli
cmpsb
imul
xchg
pop
test
mov
push
setae
out
or
je
test
outsb
mov
jge
mov
dec
and
cmp
dec
inc
sub
add
jmp
or
fs
sbb
out
xor
sbb
daa
cmp
inc
mov
inc
inc
or
aas
enter
xor
push
faddp
jecxz
mov
addr16
xor
sub
je
pop
loop
inc
cwtl
sbb
addr16
xchg
push
lods
fistpl
xchg
aad
mov
repnz
cmp
fxch
test
pop
mov
js
add
das
nop
push
mov
dec
cld
inc
cmp
pushf
movsb
jg
imul
roll
cmp
push
je
pop
jle
test
jne
je
cmc
xor
sub
or
pop
mov
fsubl
insb
das
outsb
std
push
mov
add
and
cld
or
std
imull
mov
loopne
rcll
push
push
movsb
jne
ljmp
jns
mov
pop
scas
jne
mov
xchg
push
xor
pop
js
mov
sub
test
or
test
mov
mov
fs
and
xchg
rcl
or
popa
cmp
mov
dec
je
rcrl
and
cmp
ljmp
jmp
lret
out
shlb
rcrb
cmp
mov
or
push
push
push
add
cld
nop
xor
or
jmp
dec
adc
push
or
mov
fdivr
adc
aad
fdivrs
cmpsb
jns
shlb
lcall
jae
insl
adcl
jns
out
inc
mov
mov
rclb
popa
hlt
mov
push
inc
mov
pop
out
pusha
xor
addb
pop
sub
repz
test
pop
mull
test
scas
jecxz
and
dec
inc
pop
mov
cld
lods
xchg
out
pop
call
stc
lret
cmc
imul
in
add
in
stos
inc
push
adc
inc
gs
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
aam
jl
test
sbb
lock
movsb
loop
sub
mov
outsb
into
pop
xchg
push
out
xorb
sub
sub
das
and
xchg
shll
push
jle
mov
xchg
out
outsl
dec
loop
or
arpl
les
xchg
or
inc
jge
xor
xchg
int
aad
in
lea
adc
into
fadds
inc
xchg
aaa
arpl
or
add
lds
sub
shrl
xorb
in
insb
pop
dec
and
push
sbb
int
nop
subb
insb
ds
dec
out
notl
je
call
loope
mov
sub
jl
es
mov
scas
xchg
call
rcr
pop
xor
dec
call
jle
movsl
lock
ja
lahf
les
push
jp
loopne
mov
out
push
popa
in
rcll
add
notl
mov
mov
lock
xor
cwtl
aas
arpl
and
mov
mov
cmp
add
mov
das
aaa
psubsw
jne
xchg
mov
pop
cld
ljmp
xchg
pop
stos
enter
add
test
sbb
sub
cmpsl
aaa
adc
push
sahf
das
push
lret
inc
add
rorl
inc
cmp
pusha
mov
xchg
jmp
es
add
hlt
rorb
sbb
mov
xchg
or
pop
jns
in
in
stos
dec
xlat
inc
lods
jno
xor
sub
cmp
ds
pop
or
dec
scas
lea
xchg
xor
mov
mov
sbb
push
adc
scas
jo
or
cmp
mov
or
jge
insl
sub
mov
jp
sbb
in
mov
sub
sti
add
dec
push
lods
das
cmp
imul
shll
idivl
push
pop
xchg
pop
das
adc
out
fsubs
mov
repnz
and
push
and
pushl
pop
cwtl
lcall
sub
fdivs
xchg
mov
jnp
sub
xor
xchg
test
nop
dec
in
mov
fs
or
sub
lock
bound
mov
stc
sbbb
andl
ljmp
movsb
insl
pushf
push
mov
pop
inc
lahf
and
cmp
and
jg
dec
outsb
push
add
jo
ss
mov
mov
mov
shll
cld
ffree
mov
push
xchg
xchg
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
and
fists
jb
xchg
jg
fsubr
aas
imul
stos
addr16
lock
push
ja
xchg
cli
and
movsb
mov
dec
cmc
inc
into
mov
nop
pusha
lret
pop
out
in
mov
call
mov
xchg
lret
ds
ljmp
ss
sahf
insl
sub
pop
xchg
mov
and
push
push
mov
or
jbe
les
mov
dec
dec
xor
outsb
mov
xor
shrl
pushf
fildll
mov
cmp
cltd
inc
cs
ret
mov
sub
xlat
fs
iret
stos
or
je
loop
es
imul
rolb
jae
popa
mov
out
cltd
dec
lea
jns
ljmp
or
fdivrp
xchg
mov
push
xchg
in
push
mov
bnd
mov
scas
into
sub
sub
mov
pop
jns
nop
adc
mov
pop
test
mov
or
mov
xor
jmp
xchg
outsl
shrb
out
sahf
iret
inc
fwait
in
sub
xchg
inc
mov
shlb
adc
sbb
out
mov
repz
out
xchg
push
lock
jb
mov
je
fs
push
and
repnz
or
xlat
or
mov
mov
mov
mov
and
add
mov
xchg
aad
leave
aas
mov
rorb
outsb
fcompl
into
push
outsl
or
das
xchg
pop
cld
into
xchg
sbbl
sub
sub
jmp
push
aam
movsl
pop
xchg
movsb
pop
push
lods
mov
rorb
sbb
clc
fcompl
jbe
addr16
sbb
mov
adc
jns
cmp
ds
mov
shl
sahf
test
or
lcall
or
hlt
pop
cmp
mov
cmpl
cmp
into
cmp
gs
mov
lcallw
push
imul
push
test
jecxz
in
xor
inc
je
xorb
jecxz
mov
lea
insb
jmp
mov
pop
std
test
or
ret
ret
call
xchg
pop
lods
mov
xorl
daa
cmp
pop
into
outsb
popa
dec
test
clc
testb
outsl
lea
jmp
daa
out
clc
push
clc
xlat
scas
xor
add
and
push
push
ds
sarb
or
dec
nop
mov
cmpb
out
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
mov
mov
jno
divb
leave
xor
mov
inc
cmpb
mov
mov
fistpll
sbb
jge
sbb
jb
xor
lret
in
cli
lock
push
fiadds
rcrb
es
cmpsb
push
push
int
test
inc
pop
cmp
cmp
imul
cmp
cmp
dec
lret
ret
fidivs
stos
adc
sub
enter
jge,pn
in
stos
xchg
bound
push
mov
cmp
or
repz
inc
mov
inc
xor
ret
mov
mov
cli
mov
and
fidivs
cmc
sbb
xor
inc
das
sbb
je
push
in
xor
inc
pop
cmpsl
lret
or
fwait
js
xchg
adc
xor
jne
ret
rorb
imul
xchg
das
xor
mov
jl
pop
addr16
xchg
aam
xlat
xor
push
or
xor
out
das
test
ja
mov
cld
push
lea
orb
cwtl
cmpsb
dec
mov
scas
lcall
mov
mov
int3
ljmp
mov
test
dec
xor
cmpsl
add
adc
sbb
std
pop
in
mov
in
imul
xchg
mov
mov
inc
mov
push
stos
ja
sub
out
xchg
inc
push
sbb
xchg
rclb
xchg
add
rolb
repnz
es
mov
jge
js
lret
fnstsw
lock
lock
fucom
adc
or
jo
test
push
xchg
movsb
and
jge
pop
xchg
test
ret
dec
je
pop
jecxz
mov
xor
mov
xlat
jno
dec
xchg
daa
dec
int
mov
cmp
fdivr
xor
dec
inc
inc
pop
roll
cmp
pop
mov
push
push
adc
jnp
rcl
jb
mov
mov
jg
xchg
add
push
add
xor
push
out
test
mov
add
das
pop
mov
cmp
mov
jle
orl
dec
inc
shlb
fists
xor
mov
call
sti
popa
xchg
pop
je
fstl
ret
icebp
outsl
sub
cmp
ret
adc
mov
pop
xchg
dec
jmp
cld
push
test
mov
sbb
sub
enter
out
dec
sub
jge
mov
and
sub
inc
add
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
fcoms
sbb
cs
jl
sub
pop
cmc
rorb
push
jge
js
leave
add
push
jg
cltd
aas
imul
xor
sbb
mov
cmp
or
imul
xlat
lahf
push
adc
cmc
jmp
inc
sub
gs
lods
bound
ficomps
adc
mov
push
push
sbb
xchg
fistps
mov
aad
pop
jge
mov
popa
adc
mov
pusha
pop
into
and
stc
cli
scas
mov
popa
in
out
mov
notl
adc
fisttps
out
push
in
das
dec
push
inc
loopne
xchg
ret
pop
dec
mov
inc
jnp
pop
and
jecxz
mov
cld
or
andb
dec
je
testb
add
ljmp
xchg
sbb
pop
mov
inc
cltd
inc
daa
imul
mov
std
popf
int
sahf
scas
dec
push
jp
mov
jle
in
cmp
mov
push
xchg
sub
add
shlb
xor
shlb
dec
xchg
fwait
notl
sub
imul
jge
xor
stc
jge
call
xor
add
mov
es
cld
popa
push
and
jg
aas
dec
push
adc
mov
daa
pop
jl
ss
sbb
jno
mov
mov
add
cmp
jge
mov
xor
adc
cli
add
shl
ret
repnz
push
add
test
bsr
clc
ja
jbe
shlb
push
xlat
push
mov
test
push
dec
xor
sub
mov
std
cmp
test
sbb
inc
xchg
sbb
mov
sub
adc
or
leave
mov
mov
add
iret
xlat
test
push
adc
fbstp
mov
jb
add
inc
out
pusha
data16
scas
jo
inc
cmp
push
jo
lea
pop
jp
mov
sti
inc
stc
addr16
icebp
mov
enter
xchg
call
add
sub
pop
ror
or
fistps
loop
loop
movsl
or
lods
pop
dec
sub
jae
pop
cmp
cltd
addr16
stos
mov
cli
mull
push
movsl
jns
movsb
push
xchg
mov
mov
push
bnd
and
dec
sub
cmpb
insb
dec
test
jl
loopne
add
fs
iret
sbb
ret
xchg
xchg
out
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
mov
xchg
sbb
mov
stc
xor
mov
pop
or
daa
ja
ss
cmp
xlat
imul
rol
pop
pop
mov
cmp
ljmp
jle
mov
call
jbe
lds
mov
inc
int3
out
pop
push
push
pop
loop
rcrl
xor
adc
popa
ret
cmp
ds
inc
jecxz
cmpsb
xor
mov
inc
mov
lds
jle
adc
push
xor
push
cmp
inc
shrb
int3
pushf
stos
fsubs
nop
inc
sub
xchg
shll
sub
jno
test
add
jl
jb
js
xchg
and
enter
mov
repz
jle
rorl
or
and
inc
and
xchg
jno
popa
jb
jge
adc
or
mov
repz
mov
or
call
xchg
push
rcl
insb
pop
stos
js
push
sahf
pop
xchg
and
pop
xor
es
adc
fstpt
addl
stos
inc
fsts
ss
xchg
pusha
mov
cltd
cmp
adcl
pop
xchg
xchg
arpl
lahf
dec
jl
aas
nop
mov
jnp
hlt
xor
add
pop
pop
popf
ja
je
pop
mov
xchg
in
das
mov
out
push
rcrl
dec
add
mov
jp
sbb
cltd
pushf
in
cmp
aam
adc
adc
mov
aam
loop
xchg
sbb
jae
inc
jl
imul
int
loope
sbb
mov
stos
or
xchg
repz
jg
nop
daa
push
push
imul
stos
pop
jecxz
inc
gs
arpl
arpl
dec
fwait
aad
mov
loop
mov
or
mov
js
and
lods
stc
in
dec
mov
jl
test
cmp
inc
cli
cs
mov
lds
imul
popf
pop
add
mov
pop
jno
mov
lea
jmp
xor
sub
fwait
in
fcomp
jecxz
scas
jmp
lock
popf
loopne
mov
in
pop
sbb
mov
add
ljmp
jo
bound
jnp
pop
imul
lock
mov
orb
cmp
das
xor
push
push
daa
sahf
movsl
or
jge
sti
fcomip
sub
cmpsl
push
lds
mov
lahf
ss
iret
add
mov
cmpb
sbb
ljmp
decl
lock
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
in
fstpt
mov
sbb
inc
daa
stc
jecxz
loopne
add
stos
scas
lea
call
pop
movsl
xor
js
mov
shlb
movsl
or
jg
sbb
sub
in
stc
insb
mov
push
shlb
xchg
out
inc
sub
inc
roll
push
loopne
inc
mov
add
scas
or
mov
ljmp
jmp
dec
dec
out
xchg
insl
stos
fs
pop
ss
cmp
mov
lahf
pop
pop
and
push
pusha
mov
mov
inc
lcall
aam
or
and
lahf
icebp
xchg
jmp
loop
pop
fs
insb
into
hlt
push
jp
mov
sub
clc
mov
pop
mov
lea
push
sbb
dec
xchg
decb
lds
jo
sub
mov
mov
push
pop
mov
push
push
jle
jns
mov
ljmp
aad
adc
mov
xor
cs
xor
jnp
sti
icebp
pop
mov
les
mov
cmpsb
inc
pop
xor
jnp
pop
repnz
popf
aam
xchg
pop
cmpsb
je
push
rcr
std
mov
je
mov
cltd
sub
es
push
pushf
sbb
cld
sbbl
add
add
mov
shrb
xchg
lcall
mov
movsl
ret
dec
jp
jbe
push
outsl
sbb
mov
sbbl
aad
filds
inc
and
insl
dec
subb
jg
or
lods
add
mov
test
arpl
pushl
aad
outsl
mov
push
je
dec
icebp
jmp
leave
xchg
rorl
mov
cmp
nop
data16
pop
cmp
dec
test
xchg
cwtl
dec
mov
out
push
sbb
in
jnp
inc
lahf
xor
clc
out
mov
jl
je
or
iret
xchg
je
stos
xor
push
int
sub
inc
and
mov
aad
mov
cmpsl
in
mov
jae
sub
nop
dec
sahf
pop
scas
dec
add
push
jb
push
push
loopne
dec
pop
inc
add
sti
lcall
jecxz
push
addb
pusha
cltd
mov
mov
fcoml
in
inc
cmc
xchg
push
sbb
lahf
subl
mov
iret
or
inc
push
js
jmp
cld
cld
jno
pop
test
mov
lcall
mov
out
jmp
lock
daa
jl
inc
sbb
dec
or
hlt
inc
aad
test
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
adc
lods
xchg
lret
ss
nop
sub
mov
outsb
and
dec
jno
push
lret
pop
adc
fwait
mov
inc
jmp
inc
lock
dec
mov
leave
jge
and
adc
mov
jns
mov
and
jle
incl
mov
ja
stc
pop
adc
adc
inc
jecxz
sbb
cld
imull
and
fcmovnu
mov
mov
lret
mov
sub
add
pop
jl
daa
dec
orl
mov
pop
scas
aam
mov
fcmovbe
mov
test
pop
xor
xlat
or
jg
call
pop
cmp
out
fsubrl
adc
mov
push
push
imul
inc
or
nop
test
inc
dec
lds
sub
pop
fidivrs
in
ret
mov
aas
sub
and
ds
cmp
xor
rol
cmp
push
push
arpl
fidivrs
nop
movsl
int
adc
mov
sbb
les
sbbb
cmp
movsb
aaa
mov
repnz
inc
repz
cli
sub
add
sub
test
dec
ja
inc
scas
enter
ja
mov
sbb
sarb
test
xrelease
jns
dec
sahf
js
data16
js
push
shrl
repz
inc
push
jno
imul
push
add
sub
push
dec
push
dec
dec
xchg
sbb
add
pusha
pushl
lods
stc
iret
popl
jbe
outsb
mov
pop
cmp
loop
hlt
daa
clc
adc
stos
fcos
iret
pop
and
aas
fidivs
scas
scas
cmp
push
stos
loope
jb
mov
cmc
int
or
inc
test
mov
push
or
movb
xchg
jo
imul
loope
js
inc
push
sub
jmp
sub
sub
gs
repnz
adc
sub
jmp
mov
and
pusha
adcb
xchg
inc
loope
stos
pop
insb
jp
cmc
enter
sub
fsubl
xchg
imul
add
das
orl
adc
in
sub
imull
sub
mov
sti
jbe
adc
mov
pop
ret
cmp
sbb
aam
inc
inc
mov
pop
push
lea
jge
sub
jg
add
mov
jge
not
sub
push
push
jbe
jg
mov
add
xchg
push
pop
dec
mov
xor
add
outsb
jp
mov
movl
mov
mov
sub
jmp
test
mov
push
fcomip
push
sbbb
lcall
sub
ljmp
xor
ffreep
icebp
cli
lods
jnp
push
movsb
cmp
in
lea
test
stc
adc
fidivrl
jl
pop
push
pusha
or
dec
xlat
sub
dec
jge
arpl
jmp
lret
in
inc
add
stos
les
aaa
xor
mov
out
jnp
cmp
loop
shll
iret
scas
mov
xor
adc
jmp
or
xchg
mov
mov
in
pop
fwait
inc
adc
dec
pop
add
or
stos
addr16
jno
rclb
mov
out
in
mov
enter
insb
gs
movsl
mov
insl
pop
in
outsb
cmpsb
mov
fadds
sub
insl
sbb
lcall
cltd
mov
arpl
repnz
out
clc
pushf
sti
std
pop
push
or
sbb
sbb
or
cmp
nop
cltd
sub
arpl
cmp
out
insb
mov
or
jg
inc
dec
fisttpll
popa
or
aam
bound
push
clc
lcallw
mov
sbb
add
repnz
rcrl
loopne
adc
jge
cli
push
cmp
cltd
inc
cmc
aaa
ret
mov
dec
add
popf
add
shll
loopne
inc
inc
lahf
js
push
push
out
pushf
aas
dec
sbb
ja
mov
add
in
and
stos
mov
lds
hlt
pop
cs
popa
add
test
cmpb
fcomps
push
sub
or
mov
mov
dec
shrl
push
das
pop
ret
pushf
push
dec
inc
mull
push
popf
jecxz
or
test
lods
loopne
push
sahf
sub
out
arpl
data16
pop
jl
cmovl
jmp
imul
sbb
dec
push
xor
popf
mov
mov
or
push
inc
clc
std
add
adc
jns
mov
cmpsb
jge
inc
pop
loope
cmp
add
movsb
inc
push
sbb
cli
lret
push
fiaddl
xchg
outsl
in
push
fisttpll
push
xlat
cmpsl
cwtl
push
pop
inc
add
cmp
mov
push
push
xor
das
mov
push
inc
and
push
push
jo
lcall
das
fisubrl
in
push
into
mov
push
jnp
push
mov
add
cld
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
xchg
dec
jle
jl
sbb
sbb
outsb
call
add
mov
or
push
or
pop
addr16
inc
add
popf
repz
mov
das
test
dec
mov
fmul
dec
jmp
shl
daa
in
xor
scas
xchg
in
popl
push
push
imul
aas
cmp
and
imul
push
mov
cmp
lcall
cltd
roll
mov
rorl
or
movsb
adc
shrb
cmp
stc
xchg
push
movsb
and
mov
inc
mov
test
insb
push
lret
cmpl
jbe
cwtl
pop
add
repnz
out
mov
icebp
xchg
push
cs
sarb
shl
xchg
adc
cli
inc
xchg
add
lcall
shl
adc
int3
repz
cltd
repnz
shlb
add
add
sub
push
mov
dec
pusha
adc
bound
js
fistpll
inc
movsl
add
jge
daa
pop
jmp
aam
xlat
cld
rcr
shll
imul
pusha
cmpl
std
cltd
xlat
mov
ljmp
and
push
mov
popa
fidivs
add
in
pop
xchg
mov
mov
call
jle
mov
and
pop
fdivl
fnstcw
jo
rcr
movsb
sbb
pushf
paddb
insb
in
daa
lea
stos
bound
push
adc
push
cmpsl
aaa
mov
cmp
dec
loope
mov
xor
loop
inc
jecxz
outsl
out
dec
jg
mov
or
sbb
add
popf
mov
sbb
pop
bound
xchg
xchg
lea
sbb
add
aaa
dec
pushf
orl
adc
sbb
cmpsb
sbb
pop
or
rolb
ret
das
out
adc
xchg
arpl
stos
mov
dec
fbld
movsb
ret
xchg
pop
pushf
dec
popf
pop
je
ljmp
xchg
daa
daa
pop
or
leave
jns
fnstsw
jle
and
xchg
push
sub
stos
cmp
push
or
lods
test
jg
cmpsl
out
inc
mov
mov
les
adc
mov
ret
mov
repnz
fisttps
or
imul
or
ja
dec
movl
movl
movl
movl
movl
movl
movl
movl
push
jmp
dec
sub
sub
daa
hlt
push
js
sbb
sbb
mov
jnp
es
int
or
mov
sbb
push
push
sbb
insb
pop
fistps
daa
rcrl
pop
repnz
inc
or
loop
sub
shl
jge
jae
xor
xchg
sub
test
leave
mov
ljmp
fldt
dec
jbe
sub
jmp
mov
add
lcall
arpl
add
lods
mov
into
dec
les
pop
push
sbb
fsubr
pop
mov
fs
lds
or
fmull
jecxz
lds
insb
mov
outsl
or
fmul
mov
lds
inc
insl
adc
subb
jns
xchg
mov
or
stos
dec
mov
mov
cld
call
push
cmp
mov
push
aas
mov
int3
bound
jns
in
jb
jle
adc
pop
sar
push
cmp
clc
mov
push
cmp
adc
lret
mov
repnz
cmp
popf
loope
inc
jne
sbb
dec
mov
fisttps
call
jl
aad
mov
push
fists
sub
fcomp
mov
orl
call
fwait
cmp
addr16
sbb
orb
xchg
dec
jne
jmp
hlt
pop
adc
push
pushf
sbbb
stos
mov
and
or
inc
or
cmpsb
pop
pop
push
sub
cmp
aam
sub
xor
icebp
or
xchg
or
fs
sub
stos
add
inc
jle
push
inc
sbb
jo
cmp
out
call
scas
lock
cltd
mov
aad
movsb
adc
repnz
sbb
les
ss
rcrl
stc
jne
lods
add
push
test
negb
sub
sub
nop
loopne
cmp
xor
sti
lds
addr16
out
es
push
mov
add
shl
repz
into
test
jg
mov
pop
dec
fxch
mov
cld
insl
repnz
push
xor
inc
cld
hlt
xor
add
in
adcb
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
outsl
mov
je
sbb
sbb
inc
push
jae
out
daa
test
stos
mov
pushf
iret
mov
sbb
sub
fbstp
add
mov
sbbb
xlat
ret
shrb
push
mov
mov
adc
or
jbe
mov
inc
inc
js
inc
icebp
xor
sub
movsl
and
mov
jbe
stos
lret
mov
xor
mov
and
push
or
sbb
das
test
and
push
xor
fisubrs
js
jnp
test
loope
ret
adc
sbb
cmpsl
mov
shrb
add
pop
xchg
sti
cmp
mov
stos
xor
scas
leave
lods
in
jbe
ss
jmp
mov
lods
mov
or
push
inc
rorb
rorl
push
ljmp
mov
clc
cli
ret
pop
xchg
clc
shl
je
cld
bound
subl
xlat
jb
push
dec
loopne
movb
push
xor
into
outsl
pop
cmp
cmp
jge
or
insb
dec
movsl
mov
pop
call
cmp
jns
jge
pop
jns
sub
pop
cmp
pushf
dec
shrl
movsl
test
shl
lret
es
lds
nop
xchg
dec
sbb
shlb
stos
adc
lcall
pusha
cmp
gs
xchg
pop
dec
in
mov
pop
dec
repz
nop
lret
push
xchg
cld
jae
jnp
push
pushf
dec
aad
or
movsb
inc
mov
xor
xlat
mov
cmpsl
mov
imul
xorb
mov
xlat
pop
fisttpl
shrb
int3
scas
in
cmpsl
fcmove
shl
cli
xchg
enter
adc
es
mov
shl
sbb
fsubs
xor
fisttps
lods
jg
dec
test
adc
xchg
or
roll
fwait
fs
pop
mov
mov
sbb
lods
mov
inc
push
sub
or
mov
cli
mov
mov
mov
jbe
arpl
and
jge
pop
push
xor
outsb
scas
aaa
fstpt
cmpsb
lret
pusha
adc
cmp
add
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
push
add
stc
incl
lahf
push
jb
inc
inc
adc
xor
xchg
xor
sub
loope
adc
mov
mov
ja
inc
dec
outsl
popf
sbbb
and
mov
xor
stos
in
lods
jmp
cs
mov
pop
daa
popa
lahf
mov
out
inc
jno
scas
rcrb
int
ds
ret
and
mov
loope
mov
popl
sar
lahf
or
or
adc
lret
aas
int3
mov
push
push
or
ss
sbb
in
or
cmp
inc
push
push
inc
inc
xor
mov
push
adc
jne
push
push
or
lods
pusha
or
push
pop
in
addr16
mov
xor
jl
scas
lods
inc
subb
sub
inc
push
in
ret
mov
mov
inc
sub
inc
mov
sbb
push
shlb
xor
mov
cmc
call
subb
shll
insl
stos
int3
xchg
lret
cld
dec
out
pop
jmp
lock
and
push
push
test
orl
out
std
xor
jge
jge
or
push
cmpsl
cmp
mov
push
mov
pop
and
lea
mov
xor
mov
in
xchg
lock
xchg
inc
out
leave
xchg
xor
clc
outsb
out
mov
xor
pop
out
mov
dec
sbb
dec
mov
mov
repz
popf
cltd
xor
je
jo
and
iret
nop
in
idiv
push
aam
xchg
and
loope
or
mov
mov
pop
shrl
push
xchg
movsb
jg
ret
out
pop
rorb
faddp
cmp
xchg
and
jl
push
shll
mov
push
fwait
scas
jns
popa
xor
mov
lods
je
add
cli
enter
aam
push
movsl
dec
inc
sub
int
rolb
pop
popl
iret
mov
arpl
inc
fwait
push
and
cld
insb
pushf
mov
inc
sahf
ret
mov
mov
mov
mov
add
adc
or
mov
jmp
pop
and
xor
pop
sbb
fistpll
push
sbb
sbb
push
xchg
aaa
stc
dec
pop
jp
or
cli
add
or
mov
pushf
pop
jle
stc
jl
jno
inc
data16
fldcw
sub
jmp
imul
aam
adc
hlt
jne
aam
sahf
mov
inc
test
int3
adc
jno
xor
mov
lods
pop
inc
rol
xchg
or
lods
jmp
xchg
jl
inc
xor
lret
mov
inc
or
fcmovu
leave
and
cld
shlb
roll
es
xor
mov
sahf
sahf
lcall
sbb
ret
mov
jne
iret
lret
rcll
loopne
out
mov
mov
add
cmc
scas
jmp
and
mov
int3
adc
clc
or
ljmp
sbb
jnp
fs
fadds
ret
dec
out
out
inc
ds
cmp
xor
inc
push
iret
cwtl
enter
dec
ret
cmpsb
jae
sub
dec
xor
jae
fcmovnbe
fidivrl
inc
sub
sub
jne
add
inc
data16
mov
insl
pop
fstpl
lret
xlat
adcl
xor
jbe
hlt
or
and
stos
sbb
lret
jbe
pop
and
inc
insl
and
in
pop
cltd
popf
mov
pushf
arpl
xchg
sub
xor
pushf
int3
dec
xchg
xor
jl
add
les
cwtl
divl
cmc
lods
popa
mov
icebp
test
pop
stc
and
jnp
roll
dec
push
lds
test
mov
pop
jb
jmp
add
sar
mov
sub
daa
adc
lcall
mov
xorb
ret
push
pop
dec
gs
out
adc
cmpsl
xlat
cmp
inc
xchg
jno
dec
mov
sbb
jbe
fcoml
jnp
movsl
je
pop
insb
movsl
jb
out
push
mov
and
aad
adc
call
nop
in
inc
enter
imul
xchg
emms
mov
out
jns
mov
xor
cmpsl
shrb
imul
in
pop
test
xchg
sbb
inc
jb
mov
rorl
imul
add
and
cmp
dec
or
test
nop
sbb
cmp
add
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
rcr
xor
data16
jno
sbb
lahf
dec
test
das
inc
or
jbe
loope
mov
adc
mov
imul
and
popf
orl
sbb
xor
je
sub
lock
pop
inc
sub
jae
movsl
ficoms
mov
jl
lret
ljmp
or
out
sahf
add
clc
dec
xchg
pop
sub
or
xor
inc
push
push
jae
cs
and
mov
push
pop
jge
cwtl
pop
stc
ja
xchg
mov
and
scas
xlat
lods
insb
mov
in
loope
dec
adc
cmp
lock
pop
jns
loope
sbb
ja
in
pushf
mov
fmuls
dec
repz
sahf
enter
test
cmp
push
into
ss
sub
cwtl
les
cwtl
pusha
mov
or
pop
daa
mov
jb
sbb
jo
mov
adc
sbb
movsb
adc
sub
mov
cmpsl
push
push
cmp
cmc
insb
inc
arpl
fwait
push
inc
mov
mov
lahf
cmp
adc
sub
cmp
call
dec
jb
js
mov
sub
ret
rcrl
fwait
aad
in
out
sub
add
xchg
rol
lods
jp
pop
and
mov
stos
push
cwtl
pop
insb
jne
add
out
xchg
sbb
cli
repnz
mov
dec
stc
jge
fimull
addb
pop
push
movsb
mov
xchg
jo
push
icebp
jb
mov
lret
sti
adc
or
int3
js
ds
in
pop
aas
sbb
sub
dec
sarl
add
dec
add
sub
xchg
rolb
mov
cs
add
lock
pop
push
xor
rol
pop
cld
lahf
daa
xchg
jns
pop
inc
cmp
xchg
lods
push
cwtl
mov
ljmp
fxch
mov
cmp
lock
xor
sbb
cmc
pop
dec
and
jbe
push
jecxz
jb
inc
and
in
pusha
addr16
imul
stos
movsl
adc
add
pop
sbb
movsl
or
cmp
sub
mov
mov
cs
or
adc
xlat
xchg
and
and
in
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
and
mov
pusha
sbb
jno
sbb
xchg
cmp
jb,pn
cmp
mov
adc
in
movsl
and
push
daa
xchg
out
movsb
dec
and
cmc
arpl
mov
loope
js
movsb
movsl
in
in
shl
push
addr16
stc
mov
push
test
mov
mov
subb
stos
push
js,pt
mov
mov
push
jb
addl
daa
mov
mov
cs
dec
insl
mov
mov
inc
cmc
rcrl
or
xor
imul
inc
stc
call
nop
out
dec
mov
mov
rclb
nop
adc
aam
jbe
pop
in
dec
and
dec
das
xor
and
scas
inc
nop
loopne
xor
aam
mov
mov
roll
push
xchg
adc
das
popf
sub
aam
lea
pop
dec
inc
push
ret
dec
mov
ficomps
pop
pop
adc
mov
add
mov
insl
cmp
dec
fsubrs
sbb
pop
push
add
das
daa
xor
int
mov
and
push
insb
jno
mov
mov
pop
stos
and
cli
mov
adc
pop
pop
lods
cmp
inc
lret
pop
mov
dec
inc
mov
mov
nopl
inc
mov
push
pop
push
sar
loop
push
dec
fidivl
inc
fisttpl
adc
pop
pop
cmp
xor
cli
jecxz
sbb
sbb
jo
pusha
test
lret
mov
xchg
sub
fists
int3
cwtl
adc
in
pop
fs
out
mov
pop
xchg
popf
ja
inc
and
cltd
jl
sub
repnz
int3
hlt
enter
xchg
data16
mov
pop
out
pop
pushaw
scas
mov
fcom
cmp
inc
sub
cs
and
mov
fucomp
repz
mov
lods
repnz
hlt
fistl
xchg
push
dec
dec
pop
mov
ret
out
inc
mov
mov
inc
xchg
pusha
sbb
and
imul
jp
mov
jne
sbb
jnp
push
into
rcll
test
xchg
fidivrl
xchg
filds
stos
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
cmpsl
xchg
jo
pop
sbb
jno
sbb
push
daa
in
cs
or
push
test
cs
scas
cmp
jl
mov
and
adc
faddl
in
lcall
cmpsb
mov
into
aam
cmp
xor
pop
mov
ret
aad
xchg
add
pusha
mov
sub
mov
dec
inc
cmp
xchg
and
mov
inc
fbstp
jp
loop
inc
or
je
call
insb
mov
inc
xchg
insl
out
push
cmp
or
pop
push
fidivrl
enter
mov
daa
inc
out
push
test
movsb
test
jl
gs
cmp
mov
pop
or
push
sub
push
sub
add
dec
arpl
insb
imul
cmp
xchg
cmp
mov
ret
jp
and
cltd
out
jb
jge
bound
adc
jmp
iret
lahf
jns
mov
movsb
xchg
jmp
jp
divl
adc
cld
xor
lock
iret
bound
fs
add
add
outsb
dec
imul
fisttps
fwait
rcll
fstpl
loop
adc
stos
shll
outsl
push
adc
cmp
pop
out
jb
push
sar
mov
lds
push
in
xchg
in
mov
cld
xchg
cmp
stc
scas
jmp
xchg
aas
and
mov
sub
xor
add
clc
push
mov
lock
mov
shll
test
subb
pop
fiaddl
out
adc
pop
lock
mov
ficoms
lret
loop
mov
adc
inc
repnz
ds
or
mov
add
mov
push
mov
xchg
or
stos
js
xor
addl
rcrb
jl
imul
daa
mov
cmp
lcall
cmp
sbb
into
mov
mov
pop
pandn
fsub
incb
out
pop
ret
fildll
daa
push
mov
jge
popa
repnz
or
inc
adc
dec
jmp
and
or
push
xchg
shlb
adc
andl
ret
sub
inc
add
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
repnz
pop
and
inc
lock
mov
add
inc
push
pop
movsl
mov
xchg
dec
mov
xor
pop
loopne
sbb
and
jmp
xlat
std
repz
mov
sarl
dec
outsb
enter
mov
jge
lods
adcb
or
and
inc
add
and
mov
leave
out
pop
mov
gs
shr
xchg
in
xchg
fadd
jg
inc
or
loop
pop
push
cli
orl
lret
popf
or
aad
pop
jne
int
push
cmp
add
fwait
sahf
repnz
adc
clc
les
out
addr16
in
sub
pop
dec
ss
xchg
iret
lods
mov
sarl
enter
pop
fcomp
add
and
rcl
inc
or
add
sbb
arpl
cli
push
data16
pop
push
out
and
adcb
rorb
into
das
pop
lcall
in
jne
adc
add
lcall
adc
test
mov
icebp
nop
push
and
adc
sbbb
out
jo
fst
sub
aas
adc
stos
insb
arpl
or
jae
jp
xchg
mov
mov
enter
in
test
icebp
or
jge
ret
ret
hlt
cwtl
stos
out
movsb
push
bound
aaa
mov
xor
lods
push
test
popa
ret
and
test
loope
xchg
cmpsb
and
inc
and
in
hlt
pop
das
pop
scas
jne
or
inc
dec
fdivrs
sti
nop
inc
or
xchg
repz
inc
test
lock
pop
sbb
cmpl
and
adc
add
jb
insl
xchg
add
adc
mov
outsb
sbb
loop
ja
push
out
lahf
dec
inc
notb
pop
popf
push
mov
mov
hlt
les
ret
mov
ljmp
insl
dec
inc
out
dec
cmp
xchg
push
std
lret
adc
xchg
das
add
jns
rcr
and
aad
inc
sub
in
jne
xchg
jns
add
xor
mov
push
jle
mov
inc
sub
popa
xchg
mov
xchg
testb
sbb
adc
cltd
and
mov
pop
sbb
sub
dec
andl
push
pop
jne
jmp
addr16
mov
mov
jns
loop
lret
dec
lea
in
pusha
inc
or
addr16
jl
jae
call
and
repz
inc
dec
fdivl
jne
push
std
adc
inc
fdivl
ret
xor
push
or
xchg
ss
dec
enter
xchg
fiaddl
fs
int
sbb
or
inc
sub
js
adc
das
inc
imul
ffreep
mov
add
lods
adc
filds
mov
pop
aaa
hlt
cmp
popa
adc
lret
cltd
lods
inc
or
insl
mov
sub
xchg
cltd
lea
push
push
fmull
loopne
fwait
and
aas
fimuls
mov
shlb
mov
fwait
sub
jle
enter
ret
mov
mov
sbbl
push
test
call
jecxz
and
xchg
gs
push
pop
or
dec
int
lock
pop
jne
fsubrs
pushf
sbb
and
clc
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
xchg
sub
movl
xor
mov
test
shr
mov
fdivs
and
xchg
xchg
fwait
jmp
xchg
adc
stc
sub
pop
jmp
or
call
cli
xchg
mov
lock
pop
scas
mov
int
out
notl
mov
data16
insl
mov
popf
push
ds
cmp
test
jge
pop
jmp
gs
sub
insb
lea
mulb
mov
lock
push
dec
ljmp
in
in
dec
lea
mov
fcom
mov
dec
sbb
pop
mov
pop
jecxz
push
repnz
jge
mov
pop
movsl
xor
dec
addr16
pop
ds
fwait
pcmpeqw
bound
pop
pushf
sbb
mov
aad
in
cli
and
rcl
xchg
push
int
repz
movsl
adcl
jl
jp
mov
ljmp
addr16
xchg
jecxz
mov
das
push
cmp
sub
push
pop
lret
movsb
xor
shrb
dec
add
add
cmp
and
ds
mov
xor
sbbl
cmp
popa
cmp
mov
mov
mov
add
fxch
ljmp
sti
push
enter
sahf
mov
negl
shlb
mov
sub
cmp
sbb
data16
daa
mov
cmpsl
dec
ja
inc
loop
and
pop
mov
rolb
or
sbb
mov
inc
arpl
pop
cs
add
fildll
loopne
or
push
pop
cmp
push
fsubs
jecxz
sarl
cmpsb
sti
out
pushf
adc
jp
and
stos
loope
jbe
in
repz
mov
sti
ljmp
sub
mov
nop
push
push
mov
or
or
mov
repnz
lods
test
inc
imul
out
sbb
xchg
sub
jae
pushf
pop
push
sbb
add
lahf
nop
scas
mov
mov
outsl
jno
add
in
and
int
cmpsl
or
pop
add
jmp
aad
pop
sbb
inc
mov
out
mov
cwtl
push
cmp
sub
cmp
xchg
push
lea
enter
pop
add
jb
sbb
dec
sub
pushf
jns
out
sbb
movsb
data16
clc
movsl
mov
ja
shlb
cmp
add
dec
add
lret
mov
outsl
mov
and
es
outsb
cmc
jg
lods
jge
in
xchg
xchg
jno
data16
stc
inc
cmp
arpl
cltd
mov
lahf
mov
aaa
cmp
sti
dec
fcomip
push
pop
lahf
push
jg
inc
mov
call
add
mov
loopne
adc
mov
sbb
push
and
push
mov
xor
xchg
lret
cmc
pop
out
and
sahf
imull
scas
inc
mov
xchg
or
mov
adc
lods
xchg
addb
cld
rorb
pop
in
jno
js
lret
or
or
out
sbb
jae
xor
cld
das
inc
mov
ds
adc
mov
in
adc
scas
leave
mov
in
gs
pushf
or
pop
pinsrw
xchg
aas
sub
test
sub
sbb
pushf
xor
inc
cmp
rorb
icebp
cmp
fwait
cmp
xchg
popa
fistl
or
mov
lock
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
inc
push
dec
sbb
stos
adc
sbb
mov
xchg
pop
loopne
lahf
cmc
pusha
iret
and
cwtl
or
mov
loop
in
xchg
imul
sarb
clc
std
xor
ja
or
inc
mov
mov
sub
popf
jle
mov
cmp
scas
jbe
cmp
mov
mov
jmp
aam
xchg
xor
das
jmp
negb
insl
or
stos
push
inc
mov
mov
sub
in
aaa
icebp
sub
jns
sbb
and
sub
xchg
aas
shll
pop
jnp
xor
int3
push
out
dec
fidivrs
out
or
popa
sahf
dec
insl
xchg
enter
inc
pop
cli
lea
mov
pop
addb
xchg
ss
sub
call
mov
jbe
sahf
add
cmpsl
scas
lret
cli
cmpl
aaa
xchg
fnstenv
lock
mov
or
int
rcll
inc
test
mov
inc
mov
fidivrl
dec
add
outsb
ret
clc
int3
xlat
fnstsw
imul
out
lgs
mov
xor
jns
scas
jae
inc
ret
fwait
inc
jmp
outsl
xor
jle
dec
div
mov
lds
outsb
adc
cmp
xor
jne
xorl
inc
mov
enter
jnp
fcom
cltd
push
jl
adc
inc
jne
push
dec
sub
popa
js
cltd
dec
popf
push
lods
inc
int
call
sbb
lods
mov
or
push
lcall
adc
lcall
sbb
aam
arpl
clc
je
inc
dec
mov
jb
cltd
outsl
mov
mov
push
aad
mov
popf
iret
jb
push
bound
sahf
jo
mov
cmp
push
add
outsl
ds
or
scas
xlat
push
inc
pusha
pop
test
mov
lcall
mov
push
bound
movsl
movsb
clc
into
and
pop
int
jle
sbb
or
jl
inc
test
sbbb
or
mov
sub
push
mov
xchg
adc
adc
push
mov
cmp
jno
fcmovb
out
cld
push
les
cwtl
hlt
inc
int3
out
into
push
add
and
dec
add
into
sub
inc
lock
sub
mov
fsubrp
cltd
push
lods
or
mov
popa
pop
lock
iret
into
faddl
outsl
and
xchg
sub
pushf
dec
mov
repz
mov
or
shlb
stos
aas
mov
xchg
daa
pushf
iret
lock
inc
fisubs
test
je
cwtl
cmp
pop
imulb
into
mov
xchg
and
int3
pop
inc
sub
enter
int
rol
xor
gs
mov
aas
or
mov
stc
cmc
jae
into
insl
cmp
mov
jo
add
pop
cmp
lock
aas
jne
lds
rolb
fisttpll
mov
sub
pushw
mov
adc
jle
loop
mov
cmc
mov
or
out
mov
test
sbb
pop
in
js
and
xorb
mov
stos
lea
xor
mov
jge
scas
xchg
fwait
shl
dec
push
jecxz
add
pop
stc
push
dec
scas
sbb
pop
stc
jecxz
and
fldcw
mov
iret
sbb
dec
aam
push
lea
cmp
daa
mov
xchg
dec
push
mov
sub
std
push
push
adc
jnp
addb
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
xchg
mov
stos
adc
sbb
sbb
rcl
cli
dec
xor
push
repnz
lods
xor
je
loop
in
jp
mov
stos
cltd
or
call
cmp
int3
push
fstl
into
add
and
add
sub
sub
aam
int
jle
jl
es
aad
pop
mov
push
xor
fs
iret
xchg
or
int
adc
jb
jns
mov
mov
out
andl
repz
fidivrs
push
fisubl
mov
adc
stos
lret
push
sub
popa
inc
in
nop
out
dec
out
popf
jmp
sub
cmpl
xor
jge
push
lahf
xchg
add
aaa
mov
sti
popa
xor
repz
jmp
test
ds
xlat
loopne
fiadds
xchg
dec
mov
jg
push
cmp
dec
inc
and
scas
cs
push
and
lret
push
aad
in
mov
in
inc
cs
pop
out
enter
adc
fdivrl
cltd
mov
mov
das
cmp
push
sbb
jl
push
ja
sub
mov
dec
sub
push
iret
dec
push
jb
decb
rorl
mov
jo
add
jg
xchg
out
js
int3
daa
jb
mov
sbb
adc
sub
leave
shl
and
incb
aam
pop
fwait
in
pusha
push
into
js
jle
cmpsl
mov
fidivrl
jo
xor
adc
mov
ss
mov
push
out
mov
sbb
sbb
cltd
jns
into
cld
in
mov
sbb
xor
add
xchg
cmpsl
stc
loope
jg
sub
enter
or
push
enter
outsb
inc
jb
loopne
pop
dec
fisubrl
loopne
inc
loope
and
cmp
filds
jecxz
add
scas
xor
cmpsb
mov
jle
mov
or
push
adc
pushf
xor
lods
movsb
jmp
and
pop
adc
and
bound
jle
xor
mov
mov
mov
jg,pn
push
mov
xchg
pop
lock
xor
xor
add
jecxz
push
push
sahf
sahf
mov
cmp
mov
and
pop
push
sub
stos
jl
xor
jb
loop
bound
sbb
pop
ja
inc
xchg
mov
lret
add
fwait
sarb
mov
arpl
jno
jl
cmc
out
sbb
ja
mov
mov
adc
outsl
adc
lea
les
adc
and
mov
xlat
in
add
ret
shlb
mov
fcomps
jg
rcrl
push
mov
sub
pop
std
or
fisttpl
pop
or
cmp
int3
in
mov
xchg
jp
mov
dec
test
adc
dec
sbb
scas
pop
movsl
pushl
loopne
inc
xor
mov
add
cmpsb
rorl
out
fnsave
pusha
cmp
fwait
rorb
sub
repz
shl
outsb
adc
loop
ret
push
cmp
dec
test
into
call
mov
stos
arpl
and
push
mov
jge
enter
ficoms
sarl
inc
jae
mov
push
gs
rorl
fimuls
out
pop
or
gs
pop
sbb
dec
data16
shll
movl
mov
scas
mov
push
shll
fstl
pop
in
icebp
mov
add
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
sarb
cmp
sbb
mov
andl
shlb
leave
aam
mov
fwait
push
imull
xchg
mov
jb
lods
cli
popa
test
push
sbb
stos
pop
pop
or
jae
adc
mov
mov
jmp
js
sub
mov
pop
mov
push
nop
scas
sub
scas
xlat
das
das
mov
mov
pop
and
and
xchg
or
sbb
aad
sar
xor
jge
cs
mul
jnp
pop
or
dec
cltd
dec
notb
add
dec
nop
lods
and
inc
or
in
int
outsb
or
jb
xchg
sahf
xor
aas
sub
cmp
lahf
aam
in
mov
jbe
sbb
mov
out
cs
pop
add
pop
test
pop
sbb
or
xchg
sub
movsl
pop
cmp
enter
mov
daa
push
bound
adc
mov
mov
and
andl
adcb
in
mov
push
xchg
mov
roll
push
scas
cmp
add
inc
ljmp
cmp
ja
insl
mov
dec
clc
push
or
aam
ds
dec
adc
ss
loope
sbb
mov
cltd
fistpl
lods
pop
cmp
sub
pusha
cs
xacquire
lds
lahf
push
xor
pop
inc
mov
sub
ret
mov
pop
mov
mov
lock
inc
dec
out
test
mov
icebp
rcrl
pop
dec
fldenv
mov
add
add
mov
clc
movsl
and
loopne
dec
mov
shlb
jge
leave
inc
repz
cmc
fists
jmp
and
jne
in
adc
add
fcomps
mov
mov
pop
and
sub
sub
sbb
push
or
dec
aam
ss
dec
inc
insb
ffree
xchg
mov
jo
mov
jle
fcmove
cmp
jnp
stos
cmp
lahf
lret
cltd
sbb
cli
pop
xlat
lcall
mov
out
jnp
mov
or
inc
mov
leave
jbe
or
cmc
mov
push
or
jp
std
push
addr16
arpl
fisubrl
ret
xor
cmc
sub
sti
or
lods
lret
push
in
mov
mov
icebp
arpl
mov
lods
adc
aaa
repz
into
fs
and
push
cwtl
nop
add
stos
mov
add
scas
div
sub
pop
sti
and
xor
add
cld
jg
out
int
std
in
push
mov
cmp
daa
add
jo
mov
jecxz
lret
mov
fdivrp
ljmp
push
bound
jne
fimull
cltd
pop
or
mov
jbe
sbb
pop
repnz
jp
push
mov
or
mov
and
jne
push
lcall
les
pusha
addr16
sahf
in
and
hlt
mov
adc
cmp
lock
std
push
jb
or
adc
lds
test
ret
cmp
jnp
or
push
pop
in
out
or
and
out
aad
adc
aas
push
loopne
cmp
push
dec
scas
sar
cld
push
jp
ret
jb
ds
push
and
or
imull
jge
mov
jmp
dec
mov
aas
jnp
out
mov
jg
filds
adc
add
add
fimuls
icebp
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
xor
xor
sbb
inc
or
inc
cwtl
addr16
scas
repz
or
movsb
ja
inc
cmp
xor
repz
mov
stc
xchg
mov
sti
ja
add
fiadds
imul
sti
repnz
out
prefetch
or
test
pop
fmuls
popl
add
fs
sbbb
dec
dec
pusha
add
sbb
push
fidivrs
xchg
test
sbb
ret
inc
cmpb
xor
das
fstps
xchg
test
outsb
sar
add
scas
cs
add
addr16
lock
pop
inc
add
mov
rorb
adcb
adc
xchg
negl
pop
push
fnsave
sub
or
lods
scas
das
fdivrs
jnp
pop
xchg
sbb
or
add
test
les
stos
clc
xor
jmp
dec
xchg
jae
push
or
pusha
mov
sti
scas
mov
mov
inc
js
xor
mov
jmp
mov
xor
mov
jmp
pop
pop
clc
push
inc
call
cvtpi2ps
adc
insb
leave
movsl
lahf
push
stos
mov
add
cmp
pop
std
mov
jae
xchg
mov
mov
and
loope
mov
sub
fdivs
xor
inc
ljmp
outsb
mov
mov
jb
jns
and
test
inc
mov
xchg
mov
adc
push
add
cmp
stos
mov
mov
dec
icebp
xor
loope
inc
jbe
xor
mov
fidivs
outsl
inc
aad
jno
cwtl
pop
mov
lea
cmp
cmpsl
fildll
inc
movsl
mov
out
fs
or
adc
inc
xor
jo
mov
lods
hlt
ja
pop
fldl
inc
jno
in
xor
popf
cltd
in
mov
popa
inc
push
jg
dec
in
push
stc
test
fmull
or
xor
xchg
pop
decb
jecxz
fidivl
roll
sarl
xorl
pop
jle
addb
sbb
or
jp
addr16
push
pushf
and
xchg
jmp
inc
xchg
mov
xchg
out
cli
out
xchg
out
and
leave
push
jg
lea
sub
outsl
out
subb
pop
push
pop
push
inc
iret
mov
in
ds
inc
jp
lcall
xor
mov
ja
daa
lods
rcl
mov
out
mov
enter
add
popa
in
into
out
jo
sub
mov
jno
mull
and
and
mov
and
inc
scas
pop
aas
pop
cmp
mov
repz
nop
into
push
lods
dec
aaa
pop
daa
sub
xchg
xor
adc
add
in
or
sub
test
lods
loop
pop
or
movsb
pushf
ja
jecxz
stos
stc
scas
or
out
je
repnz
das
lock
adc
push
inc
sbb
or
and
mov
add
test
xchg
fwait
or
insb
cmp
mov
mov
xchg
cmp
and
leave
fnstsw
jns
ret
lahf
pop
loopne
sbb
sbb
cmp
jge
out
cmp
jmp
sbb
sbb
cli
or
xor
lea
in
mov
jbe
add
aaa
pop
jbe
pushf
movsb
in
cmp
out
shrl
movsb
lret
icebp
sbbl
push
inc
sti
mov
jb
lret
pop
push
enter
lods
xchg
repz
loopne
fwait
aaa
pop
pop
dec
xchg
pop
xor
pop
jae
lods
cmpsl
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
mov
sbb
sbb
adc
sbb
push
jle
sahf
jb
shll
cs
mov
push
or
push
ss
jg
pop
rclb
addr16
inc
lret
xchg
arpl
loop
into
aad
arpl
scas
add
addr16
sbb
mov
push
ss
sub
cli
movsb
sbb
call
mov
push
ja
sbb
pop
in
nopl
lret
out
mov
cmp
inc
add
mov
std
pushf
fcom
sbb
jg
leave
pop
xchg
inc
xchg
cmp
sbb
xchg
cltd
jl
scas
fisttps
out
cmp
mov
in
stc
pop
sbb
cmpb
mov
inc
mov
inc
dec
test
mov
cmp
jnp
mov
movsb
fistpll
and
cmp
xor
mov
cmp
jo
gs
mov
stos
cmp
sahf
sbb
jno
stos
das
jae
es
test
lret
pop
repnz
outsb
std
lea
mov
jno
xchg
dec
mov
adc
or
pop
in
pop
jb
movsb
pusha
add
inc
cmp
mov
mov
daa
xchg
inc
bound
outsl
push
add
push
and
int3
neg
int3
aam
mov
jecxz
push
shlb
mov
xchg
notl
lea
icebp
loopne
push
push
jle
aas
inc
add
mov
add
call
cld
sub
xlat
movsb
data16
mov
pop
cld
rcrb
dec
test
data16
in
inc
ds
sarb
jge
push
rcl
outsb
sub
sbb
addr16
imul
mov
or
js
roll
fdiv
aas
xchg
xchg
orl
xchg
dec
mov
mov
std
sbb
dec
adc
add
jne
cmpsl
ja
mov
insl
mov
and
cmpsl
jns
in
cmp
shrl
jmp
and
sbb
mov
inc
mov
jecxz
mov
stos
outsb
je
jle
cmp
inc
add
jp
mull
mov
jmp
adc
in
idivb
test
stc
push
push
xchg
loop
push
cmp
mov
lods
mov
inc
dec
pop
leave
cmp
das
cmc
add
add
mov
push
dec
inc
je
out
pop
mov
jmp
scas
mov
pushf
xor
sub
xchg
and
mov
add
test
out
jl
jns
and
cwtl
inc
rclb
fidivrs
aas
push
test
ss
push
add
mov
stc
lock
mov
sti
mov
mov
adc
mov
mov
cmp
aaa
mov
mov
aas
or
shl
push
rol
clc
hlt
fcompl
cmpb
iret
jne
ret
and
sub
xlat
push
mov
add
inc
hlt
cmpsb
mov
xchg
sub
outsb
out
sbb
and
push
nop
scas
mov
push
adcb
push
mov
hlt
adcb
fcmovnu
fdivl
sarb
sub
xchg
pop
outsl
out
push
pop
xchg
je
adc
arpl
pop
sti
sub
call
mov
jmp
mov
inc
push
jo
imul
cltd
push
add
sub
xor
ds
jne
ja
and
sbb
ss
push
mov
and
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
mov
sbb
rclb
sbb
fld
push
sub
stos
subb
mov
push
iret
inc
add
dec
mul
and
mov
mov
push
mov
or
push
dec
jge
rorl
cwtd
xchg
ja
test
pop
sub
push
or
push
inc
dec
mov
test
adc
or
ds
ret
adc
mov
add
lock
or
insl
inc
sub
mov
in
and
adc
inc
xlat
mov
and
divb
mov
mov
jecxz
sbb
mov
xor
in
mov
add
outsl
jecxz
push
insl
pop
scas
les
pop
fstl
imul
jl
mov
ret
scas
addb
cmp
and
pop
popa
mov
xchg
mov
rorb
mov
arpl
push
fidivrs
cld
cmpsb
stc
fbld
cmpsb
push
sub
jmp
and
dec
jns
pop
test
pop
or
xchg
add
adc
mov
sar
mov
xor
jmp
mov
loope,pn
daa
and
clc
xchg
jbe
pushf
sub
dec
mov
jb
loop
int
xor
cli
inc
mov
push
out
mov
xor
add
repz
outsb
fcmovnu
jge
cmp
mov
mov
sbb
pop
push
fistpll
jle
xchg
scas
jns
or
lahf
ljmp
psubq
sub
fldt
jne
mov
pop
inc
test
pop
rorb
imul
xchg
rcll
fisubrs
in
rcrb
outsl
cmc
pop
mov
into
aaa
jne
sarl
mov
and
adcb
inc
lods
dec
fidivs
das
int
lock
mov
out
shll
inc
adc
dec
cmpsb
xor
jp
rcrl
mov
cmp
test
repz
mov
ljmp
push
aad
scas
enter
inc
mov
or
or
dec
adc
push
jns
and
loop
and
inc
mov
and
fildll
in
ret
js
xor
sbb
push
mov
or
in
rcrl
out
or
push
inc
push
mov
push
je
xlat
int3
lock
stos
jecxz
mov
adc
inc
inc
jb
loopne
or
mov
aad
mov
lds
push
xchg
sahf
outsl
xchg
call
fdivrl
hlt
rep
cmp
scas
loop
adc
adc
mov
jge
pop
popa
dec
and
or
lock
jmp
sub
adc
js
movsb
bound
lock
jb
clc
pop
cld
aad
mov
jae
pop
mov
mov
test
mov
fdivrl
pop
or
cmpsl
adc
inc
imul
push
add
pop
xchg
fstl
xor
stos
mov
mov
rcrl
mov
mov
mov
clc
sbb
lret
sti
das
negb
xchg
push
into
in
xchg
aaa
adc
sub
scas
nop
outsb
cs
fcoms
lock
pop
adc
ljmp
pop
sbb
and
push
pop
adc
xor
dec
adc
xchg
xor
push
sbb
dec
cld
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
xor
stos
mov
sbb
adc
sbb
and
fs
mov
and
and
gs
push
mov
dec
cmpsb
push
sub
mov
clc
xor
subb
pop
cmp
mov
repnz
jle
hlt
mov
jmp
scas
in
add
mov
add
cmp
adc
mov
lret
sbb
addr16
add
push
pop
sub
mov
dec
and
shrd
push
xor
cmp
mov
adc
mov
cltd
dec
repz
iret
mov
mov
test
sbb
cwtl
jg
les
gs
inc
add
movsb
sub
dec
je
and
push
and
movsl
rcll
push
adc
test
popf
mov
pop
out
ss
or
sbb
jmp
mov
int
out
lahf
inc
mov
add
gs
mov
xchg
add
xor
int3
test
cmp
xchg
movsl
mov
jne
aad
pop
inc
adc
jg
xchg
pop
popf
imul
xchg
push
jge
push
pushf
aaa
aaa
jno
adc
insb
inc
test
lahf
aad
push
sub
jg
push
adc
cmc
xchg
mov
pop
lods
out
cmp
lahf
or
and
int
aad
fsts
lcall
cli
loop
inc
pushf
mov
sti
xchg
sahf
inc
negl
xrelease
xchg
lcall
out
mov
cmp
push
inc
sbb
sbb
imul
mov
dec
arpl
inc
mov
add
xor
outsl
xchg
adc
clc
cmc
es
cmp
dec
lock
movsl
mov
in
lcall
in
in
mov
mov
lret
lods
sahf
aam
dec
mov
test
out
test
lods
int3
mov
je
push
scas
jmp
int
jo
dec
in
fwait
jo
cmp
int3
lea
lea
or
nop
jnp
test
mov
insl
xchg
lcall
push
dec
movsl
jne
imul
fwait
in
cli
jmp
cmc
ja
mov
inc
inc
push
mov
js
lock
and
movsb
fs
inc
and
iret
fimull
adc
dec
addr16
cli
lds
adc
inc
mov
aas
push
rcl
xor
in
push
mov
sub
sarb
into
jno
dec
inc
mov
push
movsb
ror
incb
mov
out
sbb
push
jnp
ja
xchg
leave
loop
jge
pop
or
sub
adc
xchg
and
add
test
mov
and
jno
test
lret
leave
out
repnz
inc
push
xchg
xchg
xchg
int
dec
iret
dec
pop
dec
xor
scas
xor
cmp
and
popa
xchg
lahf
loop
and
jmp
aad
arpl
std
jo
popf
mov
in
addl
mov
orl
out
push
jnp
arpl
cmp
xor
out
divl
jnp
cltd
add
test
and
fisubl
movl
cld
jge
test
adc
mov
xor
loop
aaa
stos
aad
sbb
subl
shl
lods
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
mov
mov
push
push
sbb
ja
das
out
jmp
xchg
shll
test
or
ss
insb
fidivl
xchg
inc
add
scas
movl
rorb
xchg
es
cmpsb
in
test
pusha
sbb
stos
hlt
call
sub
pop
call
jl,pn
add
sub
inc
jmp
adc
mov
popf
nop
lods
aaa
mov
push
xlat
and
and
shr
int3
pop
xor
mov
mov
aam
dec
push
jecxz
dec
jo
and
sbb
mov
imul
mov
push
stos
jmp
xchg
mov
mov
stos
dec
xchg
nop
js
and
sbb
adc
lock
dec
enter
lcall
jg,pn
sbb
test
sbb
movsb
cmpsb
sti
xor
test
xor
add
inc
loopne
xor
lds
add
jmp
cmp
test
notb
imul
adc
adc
outsb
andl
sbb
sub
sub
mov
out
mov
ret
or
or
adc
fdivl
in
imul
in
pop
dec
repz
fldcw
call
xchg
sbb
mov
inc
adc
aad
or
pop
jmp
std
push
call
lret
mov
push
ljmp
push
hlt
scas
rcr
jle
sub
inc
inc
fstl
loope
adc
adc
fsubr
xchg
ficomps
js
push
xor
stos
mov
arpl
or
pusha
dec
int3
add
lea
clc
and
fs
or
cmp
xchg
jg
mov
bound
out
test
sar
nop
std
push
inc
mov
jg
mov
push
addr16
stos
shr
xlat
mov
in
mov
jp
dec
pop
add
inc
rol
fidivrs
jmp
ret
xchg
jbe
out
xchg
mov
push
jecxz
mov
sbb
mov
xchg
mov
cwtl
ret
lock
in
jnp
jle
arpl
sbb
test
cmc
lea
xchg
lret
and
je
push
mov
cmp
cltd
dec
cltd
jmp
mov
lds
ss
fnstenv
jge
or
pop
scas
mul
push
leave
andl
sub
hlt
std
jb
aam
adcb
fimuls
lret
xor
pop
mov
xchg
loopne
js
sub
or
and
dec
cmp
ljmp
mov
jecxz
lahf
jns
insl
or
cld
cmp
in
ljmp
mov
xchg
bound
push
pop
lahf
cltd
daa
jecxz
lahf
push
xchg
addr16
and
scas
adc
cld
data16
stc
rcrl
push
dec
pop
mov
std
adc
cmp
je
sub
je
lcall
lret
out
inc
mov
stc
xor
sbb
loope
jo
xor
cmp
inc
aaa
dec
cli
imul
pop
jns
cmp
test
add
ss
aad
aaa
ret
cmp
into
das
xchg
addb
scas
adc
mov
test
std
mov
jecxz
jle
stos
imul
out
or
xchg
xchg
adc
jl
ficoml
inc
incl
iret
ss
inc
aas
into
push
in
loopne
out
add
fcoml
xor
int3
mov
push
and
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
shll
mov
mov
sbb
fsin
insb
neg
jo
iret
lahf
pusha
out
pop
imul
mull
daa
inc
fs
insl
xchg
notb
int
jno
sbb
mov
aas
int
in
dec
xchg
mov
push
shrb
sub
int3
sbb
sahf
fcoml
sbb
pop
dec
mov
adc
mov
add
je,pn
inc
pop
insb
or
mov
std
jmp
mov
or
dec
movsb
sahf
sbb
cmc
imul
adc
add
jmp
mov
mov
es
aas
movsb
and
or
pop
ja
cmpsb
jp
mov
imul
lock
jl
popf
rcl
loope
jmp
or
test
xor
dec
aad
arpl
sarb
mov
bound
out
fists
add
sbb
je
jae
lret
jg
shlb
scas
loopne
inc
sub
jnp
push
add
jnp
imul
adc
inc
push
loop
std
push
sahf
loop
not
and
pop
add
dec
inc
mov
xchg
mov
les
xchg
call
das
out
xor
mov
gs
jnp
inc
pop
mov
cmp
gs
and
fdivl
jnp
push
jae
decb
shrb
add
pop
sbb
scas
push
movb
sbb
lahf
ds
movsl
xor
insb
mov
cmp
ss
lods
jle
stc
ret
xchg
push
push
popf
jge
mov
lods
sbbb
jg
rcrb
sbbb
orl
and
fs
lds
mov
xchg
repnz
xor
cli
sbb
les
das
xchg
in
jne
mov
jecxz
pop
out
aam
lock
pop
hlt
fdivl
mov
xor
pop
and
lahf
pop
or
adc
ljmp
ret
jmp
insb
fistpll
dec
cld
xchg
add
int
or
roll
sub
arpl
or
jle
aam
loope
shlb
sbb
jno
into
in
xchg
or
or
mov
adc
sti
cmc
inc
pop
mov
jb
or
jmpw
mov
sbb
xchg
xor
lds
sbb
jnp
jecxz
icebp
xchg
in
push
xor
dec
test
icebp
aas
mov
shlb
leave
sub
sub
dec
jbe
dec
fnstenv
or
ja
mov
pop
inc
push
negb
jb
or
test
pop
sbb
imul
xlat
adc
cwtl
add
jmp
or
pop
pop
sti
sbb
push
scas
xor
cmpl
iret
dec
xchg
dec
xchg
gs
loope
mov
aaa
jmp
and
ja
push
add
mov
lock
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
sub
jle
or
sbb
sbb
ds
add
int3
mov
jle
add
xchg
and
push
fildl
js
pop
and
out
je
popa
sbb
movsb
jmp
pop
pop
fisubs
mov
xchg
mov
and
push
mov
rclb
mov
adc
jbe
fsubrs
sbb
daa
out
daa
icebp
repnz
cmp
int
jmp
mov
flds
outsl
push
jle
push
dec
fwait
jl
push
mov
inc
cmp
xchg
mov
mov
or
sbb
cwtl
in
fsubrp
ret
ret
repz
sbb
cld
jg
xor
push
sub
bound
pop
sbb
inc
daa
dec
jle
cmpsb
jp
stos
push
mov
xor
loope
jle
pop
mov
stos
add
xchg
push
fwait
dec
inc
enter
dec
ljmp
and
fidivrs
push
sbbb
jp
mov
call
jg
xor
out
cmp
jl
fmull
das
cmp
xchg
das
ljmp
lret
out
imul
cmc
rcr
push
xor
dec
scas
or
lock
outsb
shlb
dec
mov
jecxz
adc
pop
jp
push
out
add
dec
mov
lret
push
xor
mov
enter
dec
xor
adc
pop
xchg
sahf
repz
pop
pop
sub
dec
inc
cmp
shl
mov
push
dec
sbb
rcl
fwait
pop
sbb
adc
stos
sti
je
jecxz
sbb
ljmp
dec
lret
clc
sahf
mov
adc
push
fisttps
lahf
adc
fdivp
lods
in
and
int
cmp
xor
or
or
mov
dec
jae
cmp
xchg
shrb
stos
mov
dec
aaa
jns
fcompl
pop
xorb
mov
in
test
dec
adc
jno
ja
cld
push
sub
push
inc
insl
shlb
inc
push
aad
dec
or
push
cmp
mov
sbb
sub
jmp
nop
sub
ljmp
and
arpl
inc
mov
hlt
leave
andl
mov
add
std
cs
dec
xchg
push
cwtl
insl
sbb
push
inc
imul
xchg
movb
movsl
inc
ret
or
fists
mov
daa
ss
test
cmp
fpatan
cmp
push
pushf
inc
fcom
fldl
hlt
sbb
jns
add
and
lret
mov
fbstp
jo
xchg
dec
shlb
mov
outsl
dec
push
nop
mov
movsl
jg
adc
inc
adc
cs
cwtl
and
pop
das
call
in
jno
filds
pop
inc
pop
in
pop
mov
xlat
pop
fidivrs
cwtl
xchg
adc
iret
push
fwait
jecxz
mov
out
out
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
fwait
jg
mov
fwait
adc
sbb
or
inc
iret
sbb
jnp
pusha
fcmovnb
cmp
mov
loopne
add
xchg
arpl
repnz
aas
pop
add
insb
mov
sub
adc
loope
clc
stc
mov
ljmp
into
ret
jle
es
dec
sub
xchg
push
pop
dec
or
mov
jp
xor
lds
mov
xor
lea
hlt
mul
fwait
pop
cmp
push
leave
sahf
sbb
hlt
negb
pop
mov
mov
mov
cmp
popa
sub
aam
scas
mov
adc
cltd
xchg
loope
sub
push
pop
push
add
adc
jecxz
xchg
push
jae
mov
push
push
inc
xchg
xchg
rcrl
sub
xor
aaa
jo
fstpl
adcb
jbe
or
outsl
lock
jg
daa
ss
dec
jne
mov
ja
ss
jno
outsl
and
mov
pop
or
int3
movsb
outsb
bound
jp
push
cmp
sub
sbb
jns
adc
cmp
cld
cmc
out
mov
push
sub
cmp
pushf
mov
jmp
push
push
in
push
cwtl
jae
mov
out
addr16
inc
popf
mov
pusha
scas
xchg
lods
inc
or
mov
pusha
cli
sbb
ja
jecxz
adc
sti
fld
jl,pt
in
sub
lahf
push
jno
into
ret
jmp
test
pusha
push
and
imul
ljmp
add
addr16
sti
int
test
mov
cmp
mov
test
les
jle
xchg
aaa
arpl
sub
xchg
leave
mov
in
add
mov
xchg
sbb
rclb
pop
jecxz
jl
mov
mov
push
push
in
and
dec
daa
ss
pop
js
add
push
shrb
clc
dec
fstps
sar
xchg
in
popf
jno
je
shll
rorl
hlt
dec
insl
xchg
jmp
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
mov
cld
push
sbb
fdivrl
lahf
and
xor
nop
iret
pusha
adc
pop
pop
icebp
in
pop
mov
push
lret
pop
shl
jecxz
dec
cltd
lds
push
mov
mov
jo
cmpsl
jb
clc
ret
and
inc
mov
push
xor
cmpsb
cmp
sub
clc
sbb
nopl
mov
jns
js
mov
mov
xor
mov
out
jae
lret
in
std
clc
stos
icebp
lret
dec
jbe
push
dec
sub
loopne
sub
jbe
push
stc
pop
imul
dec
test
xchg
call
jl
jns
sbb
mov
adc
std
xchg
rcll
push
pop
pop
adc
sbb
jmp
sti
push
xchg
out
out
mov
mov
in
mov
adc
shl
sub
mov
scas
sbb
cmp
xor
inc
xchg
cmp
les
test
lahf
ja
mov
mov
mov
aam
adc
mov
popa
sbb
in
es
mov
inc
cmp
out
dec
xchg
add
or
lea
inc
pop
cwtl
xchg
divb
push
cmp
jmp
cmp
leave
pop
mov
dec
jl
into
stos
fdivrs
push
bound
pop
mov
pop
jnp
cs
loop
xlat
inc
mov
shll
aaa
adc
mov
jp
scas
jmp
jbe
mov
int3
add
shlb
push
into
inc
iret
dec
shrb
jmp
or
loop
fucom
xor
mov
pop
lahf
popf
stos
gs
xchg
fstpt
or
cmp
and
and
daa
je
stos
mov
and
add
bound
pop
addr16
xor
cmp
cmp
clc
lods
sbb
add
inc
repnz
in
sub
pop
and
jle
insb
popw
push
jl
andb
mov
cwtl
mov
dec
mov
adc
pop
dec
mov
aaa
das
and
jb
inc
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
data16
testl
lret
sbb
mov
movsl
cmc
es
mov
add
xchg
pop
test
js
stos
repnz
jecxz
out
imul
in
jmp
mov
xchg
jnp
push
loope
mov
sbb
into
dec
sbb
out
xchg
dec
aad
je
mov
imul
sub
ljmp
dec
inc
push
mov
cmpb
mov
mov
push
jnp
gs
loopne
std
xchg
cmp
push
dec
lea
stos
or
lahf
ffreep
pop
inc
in
sub
xor
and
jmp
pusha
cld
or
je
dec
bound
push
xor
int
jbe
cli
jno
mov
mov
int
test
xchg
icebp
mov
subl
stos
mov
popa
xchg
xorl
cltd
xor
jg
mov
cmp
fsubs
adc
scas
jmp
pop
jae
fisubs
pop
mov
in
and
sbb
mov
adc
dec
movsb
jmp
inc
pushf
adc
add
out
arpl
test
pop
pop
ret
inc
call
inc
cld
mov
loopne
push
lock
stos
or
sub
arpl
rorl
xchg
jae
fwait
mov
js,pt
xor
repz
mov
cmc
ret
add
and
xor
lods
xchg
jp
or
xchg
cli
adc
or
lret
pop
popa
jbe
aaa
icebp
ja
fistpl
mov
push
in
cmp
or
mov
shlb
add
shlb
sbb
sbb
xchg
or
ljmp
aas
pop
and
js
lret
rorl
imul
mov
cmp
mov
inc
idivb
out
iret
adc
fwait
mov
fcomps
inc
mov
or
pushf
dec
test
ja
sub
insl
mov
pushf
lret
sbb
cmp
mov
fcomps
ret
sub
push
mov
and
mov
fildll
sti
loop
rorb
ret
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
sbb
push
sbb
adc
sbb
dec
add
mov
add
rorb
mov
xchg
cli
pop
sahf
push
sbb
pop
lret
into
out
out
packssdw
inc
and
rolb
rcr
aam
fucom
imul
adc
fwait
jle
call
ficoms
int3
scas
std
iret
mov
enter
pop
mov
pop
std
movsb
push
adc
mul
pop
jecxz
xor
push
mov
lahf
in
pop
test
xor
sub
stos
loope
nop
xor
sarl
les
fisttpl
sbb
mov
loopne
dec
rcll
out
sahf
fs
mov
push
xchg
or
adc
push
adc
cmp
popl
push
mov
out
mov
in
addl
imul
std
adc
icebp
jecxz
stos
lret
xor
cmp
dec
aaa
dec
inc
push
and
sbb
and
vpopcntb
hlt
stc
mov
push
lret
cs
leave
fdivl
sub
ret
sub
std
arpl
mov
or
cmp
sbb
ficomps
push
cmp
mov
ret
inc
mov
sub
sti
sbb
cmp
mov
dec
push
mov
or
lahf
pop
add
imul
out
pop
leave
jle
add
dec
push
out
sub
popa
rcr
aam
dec
cmp
xchg
in
xor
pop
add
fs
adc
mov
mov
jne
mov
sub
push
enter
je
out
and
adc
bnd
mov
ljmp
cmp
test
daa
pop
rorb
inc
sti
mov
inc
test
loopne
out
in
xchg
cli
imul
xchg
dec
mov
push
mov
adc
xlat
push
xor
hlt
fistpl
in
aas
in
es
ret
insw
dec
add
jp
xchg
leave
sbb
mov
pushf
lds
mov
fnclex
scas
dec
fwait
sub
sbb
pop
sbb
pop
mov
mov
fdivl
data16
mov
fsubrs
xchg
mov
out
mov
rcr
xchg
cltd
inc
push
xchg
sbb
in
dec
call
imul
cltd
cs
mov
pop
xlat
popa
lahf
sbb
sbb
out
rorb
push
into
fwait
leave
cmp
loope
push
ficompl
mov
in
mov
in
or
mov
mov
and
lahf
fwait
ljmp
rorl
rcll
stos
subl
sub
mov
and
push
negb
mov
and
out
cld
imul
out
or
aam
jne
imul
sub
movq
fimull
stc
lret
cwtl
test
psubq
and
pop
cltd
and
in
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
ret
inc
inc
mov
dec
add
test
aad
or
xlat
std
les
clc
js
test
loope
jp
push
nop
cmpsl
dec
mov
lret
hlt
call
xor
pop
daa
mov
shll
adc
test
lock
push
adc
push
xchg
jo
sbb
and
jno
push
xchg
shll
outsl
add
dec
flds
xor
pop
into
xor
aaa
lods
mov
push
cmp
dec
add
insb
or
sub
test
imul
mov
arpl
ja
fidivrs
xchg
hlt
sbb
ret
test
sub
out
xchg
icebp
or
mov
inc
dec
out
or
mov
movsb
pop
fidivs
jle
push
xor
sub
mov
inc
pop
mov
xor
imul
in
push
xchg
add
add
filds
push
jo
cmp
jno
push
inc
pop
push
mov
popa
adc
ljmp
pop
mov
mov
mov
xor
fcompl
xchg
mov
popf
enter
pusha
jl
inc
mov
sti
and
mov
xor
mov
cmp
ret
mov
push
ss
cltd
daa
jecxz
inc
jb
daa
arpl
inc
sbb
cmp
dec
push
and
and
cli
movsl
pop
adc
mov
cmp
xor
mov
fsts
mov
sub
cmpsb
jp
mov
fdivrs
mov
inc
or
negb
mov
mov
mov
out
inc
dec
dec
inc
mov
pop
stos
lret
arpl
outsb
mov
pushf
mov
mov
pop
int3
fdiv
mov
orb
loop
pushf
and
sbb
fidivs
loop
mov
xchg
xor
aad
jbe
jmp
lea
loope
ljmp
movsb
ficoml
sahf
ljmp
mov
arpl
push
mov
fnstenv
xor
out
mov
cmpsb
pop
cld
jg
and
push
sbb
aad
jg
adc
inc
in
lods
ficoml
or
aas
fisubrl
cmp
sbb
or
rcl
insl
dec
xchg
jecxz
mov
ss
mov
rorb
pop
jge
cmp
ja
and
pop
aad
or
ljmp
sub
leave
mov
adc
lock
pusha
mov
ret
xchg
jo
xchg
push
adc
fiadds
inc
call
lea
xor
lret
scas
std
ss
outsl
push
cmp
mov
cmp
ror
mov
dec
stos
jmp
lds
and
and
ret
lods
stos
popf
aaa
ljmp
lea
call
jb
popa
cwtl
sub
pop
pop
push
jp
mov
xchg
mov
fmuls
and
sbb
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
mov
push
pop
or
jae
inc
dec
push
pop
mov
xchg
fldcw
sub
mov
pop
ljmp
mov
inc
out
sub
adc
jo
scas
stos
mov
dec
push
add
js
rcr
in
pop
loop
out
sti
ja
jmp
stos
mov
mov
imul
dec
neg
movsl
mov
es
pop
cmp
push
movsl
or
and
mov
push
adc
adc
inc
enter
xchg
or
push
scas
push
and
insl
aad
ss
and
lret
mov
push
insl
je
jno
std
lret
mov
add
cmp
out
inc
push
push
mov
leave
outsl
cmp
mov
push
shll
bound
dec
addr16
pop
xchg
add
dec
mov
sub
mov
cmpb
movl
ficomps
push
sbb
pop
pop
loop
mov
sti
nop
add
push
cmpsl
or
jb
std
jge
outsl
shr
into
and
and
sti
mov
and
sbb
fidivl
jle
mov
jl
xchg
in
cmp
mov
xchg
and
pop
pusha
and
lret
and
mov
cwtl
out
and
sub
outsb
imul
movsl
lret
jnp
out
and
pop
arpl
add
push
jmp
lret
cmp
call
fs
xor
aad
sub
pop
cmp
mov
jno
jle
xchg
mov
xor
fmulp
push
push
or
clc
pop
lock
mov
push
push
dec
sbb
leave
jl
push
adcb
or
dec
cltd
pop
push
ret
rclb
xchg
push
lcall
in
mov
push
stc
sbb
add
gs
cmp
movsl
sti
adc
mov
sti
lcall
lahf
pop
adc
lahf
clc
mov
sti
add
mulb
cmpsb
xor
jmp
mov
jbe
add
mov
xor
adc
inc
mov
js
cmp
sbb
bnd
adc
xchg
xchg
pusha
sbb
idivb
mov
lods
sub
dec
xor
xor
mov
cwtl
adc
xchg
adc
sbb
fbstp
push
out
xchg
dec
or
movsb
sub
mov
subb
dec
xchg
movsb
or
mov
sbbl
stos
xchg
rolb
ror
das
cmp
inc
sub
mov
ret
push
iret
out
in
push
stos
in
out
mov
loopne
ds
inc
jo
pop
sahf
int3
and
aam
xor
iret
or
out
mov
push
negb
and
insl
add
sub
int
mov
push
fs
clc
mov
cltd
xor
cmc
cmpl
sub
lret
mov
sbb
fildl
cmpb
and
ss
das
and
and
adc
lods
dec
in
pusha
fcomip
dec
mov
int
push
mov
adc
shr
mov
or
inc
fiadds
mov
xor
dec
loop
iret
lds
cmp
pop
inc
divl
out
and
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
inc
sub
xchg
push
int
clc
lret
add
xor
push
lods
out
jle
outsl
cmp
dec
outsl
and
or
outsb
js
cmc
push
cmp
loope
inc
mov
lret
nop
push
and
les
outsl
ret
subl
loop
mov
dec
adc
add
ficompl
insb
stos
adc
dec
test
or
sbb
outsb
clc
pop
bound
push
and
cmpl
fsubs
sbb
aad
or
pop
push
mov
or
xchg
lds
lret
shrb
jo
jle
sub
dec
sbb
nop
mov
test
xor
jge
pop
pop
das
cmp
push
adc
sub
dec
push
test
cmp
cmp
outsl
fdivs
mov
mov
push
into
test
in
in
jl
or
push
and
cmpsl
mov
gs
jge
outsb
dec
arpl
mov
les
mov
das
sbb
test
fs
leave
dec
scas
loope
xor
clc
or
cltd
and
push
pop
or
add
lods
jbe
and
jae
ds
inc
pusha
lods
mov
psrlw
xchg
sub
les
dec
shr
push
orl
sub
mov
mov
ret
aas
xchg
adc
jle
movsl
outsl
cltd
and
les
sar
cmp
jb
subl
imul
divl
les
push
es
rcll
inc
xor
test
ss
add
in
dec
jns
jp
mov
jp
movsb
in
lds
clc
or
jbe
pop
xchg
cmp
jbe
test
dec
push
clc
pop
jp
mov
cld
imul
push
cwtl
push
dec
imul
lret
pop
or
pop
dec
mov
mov
fs
jmp
add
insb
push
mov
icebp
pusha
mov
or
loope
pop
cld
and
cwtl
or
xchg
out
cmp
popf
cltd
xchg
pop
mov
outsl
sti
xlat
xchg
inc
movsl
cmpsl
mov
push
dec
xchg
pop
adc
das
xchg
loop
aam
adc
scas
adcb
mov
lret
notb
call
sar
repz
jle
push
mov
cwtl
mov
sub
inc
push
mov
xchg
push
mov
ljmp
xor
push
jne
sbb
outsb
shlb
mov
mov
aam
mov
push
xchg
and
fbld
and
push
in
push
jecxz
cmpsl
outsb
je
pop
arpl
iret
jge
jo
aaa
shlb
dec
ss
dec
outsb
js
les
int
std
dec
xchg
xor
mov
scas
xchg
dec
ss
pop
inc
sub
push
and
mov
bound
popa
pop
cmp
nop
gs
mov
pop
pop
icebp
cmpsl
call
ljmp
call
push
dec
gs
adc
addr16
fisubl
add
dec
ss
and
pop
repnz
nop
push
pushf
ror
ret
mov
cs
lcall
jae
daa
jmp
fstpt
push
xor
subl
adc
aad
roll
ret
push
mov
inc
and
aad
add
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
imul
push
fsts
sbb
imul
jb
fisttpll
cmp
int3
jo
jno
jmp
sbb
pushf
mov
fisubrs
xor
mov
aad
dec
adc
sarb
jle
sub
mov
mov
loop
sub
and
mov
adc
sub
adc
or
fimull
mov
dec
cmp
addr16
dec
lahf
sub
pop
addl
mov
push
mov
scas
push
xor
mov
inc
loope
clc
push
out
push
pusha
sbb
ret
icebp
xchg
add
sbb
dec
test
adc
sub
call
test
lret
add
sbb
xlat
ret
out
mov
and
pop
int
std
mov
push
clc
mov
les
test
pop
sbb
imul
mov
popf
fdivl
fwait
xchg
pop
pusha
xchg
sbb
nop
xor
arpl
or
cmp
xchg
pop
in
cmp
inc
bound
rolb
inc
xchg
test
xchg
mov
mov
ljmp
fs
sbb
std
test
movb
dec
fdivl
stos
add
cld
loope
cltd
repz
gs
push
push
mov
mov
inc
rcr
xchg
bnd
xor
mov
and
lret
aaa
mov
and
xchg
and
sub
inc
imul
data16
push
in
cmpsl
push
stos
test
dec
or
xchg
mov
lods
ljmp
mov
push
aam
or
mov
adc
jg
nop
loopne
es
jb
inc
xor
push
push
daa
into
sti
mov
push
adc
push
outsb
or
push
sub
jae
mov
sub
or
ja
cmp
jae
lea
mov
icebp
pop
fisttps
push
add
mov
rcr
mov
lret
mov
and
lock
ss
movsb
js
xchg
jge
lods
cmp
dec
jbe
popa
shll
scas
testb
jl
enter
cli
call
sub
orb
dec
mov
pop
mov
ljmp
sbbb
loope
push
inc
push
mov
jl
sub
andl
jl
mov
lahf
lds
mov
or
dec
mov
out
cmpsl
fbstp
sbbl
xchg
sbb
dec
out
cmp
lret
dec
outsl
fidivrl
jle
fmulp
jp
cmp
bound
cld
mov
adc
xor
scas
inc
adc
flds
pop
sub
sbb
pop
dec
dec
xchg
popa
dec
jne
sbb
lret
xchg
aaa
cmp
cmp
nop
repz
mov
call
addr16
and
xor
movsb
iret
mov
or
adc
es
vmwrite
adc
push
daa
fists
inc
notb
sbb
jns
xor
cmp
pop
or
mov
lods
test
incl
loop
xor
in
cmp
addb
xor
or
rorl
push
sub
shrl
test
es
and
jb
push
sahf
adcl
add
insb
jmp
test
mov
mov
pop
mov
pop
mov
call
xor
cmp
add
add
movb
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
stos
rcrb
rcll
sbb
and
lods
jge
sti
sub
cmpsl
in
push
jo
clc
in
sbb
mov
and
dec
lods
xchg
adc
int
cmp
mov
and
jnp
cmp
addb
lds
fs
or
dec
icebp
sbb
test
decb
ret
outsl
setg
sbb
repz
sbb
test
mov
fabs
roll
shl
iret
sub
gs
nop
sbb
ret
rcrb
or
jg
and
notb
fisubrs
xor
pop
add
pusha
insl
inc
das
push
out
les
les
add
stos
insb
adc
pusha
mov
insb
pop
iret
hlt
inc
or
dec
sub
mov
push
and
push
pop
inc
lock
mov
orb
jno
rcrl
sbb
or
or
add
sub
or
test
jg
cmp
insl
dec
mov
and
pop
std
shl
push
lock
inc
cmpsl
dec
clc
mov
hlt
jo
mov
push
inc
xlat
inc
mov
mov
aad
push
xchg
filds
stos
sub
shlb
out
or
mov
mov
mov
and
mov
mov
into
loopne
stc
ret
push
adc
cli
lods
and
sbb
pop
and
gs
sbbl
add
cli
ret
push
jne
mov
adc
mov
dec
add
jmp
adc
sbb
lea
push
in
scas
adc
mov
mov
cld
push
push
add
push
and
shlb
icebp
les
call
int
rep
pushf
and
sbb
call
dec
fisubs
push
jl
fwait
ja
add
xchg
pushf
orb
xor
adc
xchg
mov
xor
dec
shlb
mov
cmc
iret
enter
in
pop
shlb
in
pop
push
mov
jp
fnstenv
adc
loopne
sar
inc
lock
push
sub
dec
jo
dec
sub
sub
mov
sbb
xor
lcall
push
jae
jno
jae,pn
dec
sbb
cmp
mov
rcl
test
sbb
lds
les
mov
scas
mov
incb
sub
push
mov
rolb
mov
dec
jmp
cmp
aam
dec
adc
addb
push
repnz
adc
jbe
xor
roll
fdivl
push
dec
mov
loope
jb
ret
jo
xor
and
pop
in
xchg
push
jg
pop
pop
inc
sbb
dec
pop
gs
jns
push
jle
andl
inc
sbb
mov
jg
movsl
clc
cli
adc
sahf
mov
in
xchg
hlt
lods
test
xor
out
pop
notl
mov
adc
or
cs
sub
xchg
sub
repnz
or
pop
jmp
std
mov
shll
adc
push
mov
in
insb
int
addr16
pop
ret
add
sub
xchg
cmp
dec
std
sbb
sub
cltd
fisubrs
popa
sub
add
xor
sbb
in
sbb
sub
ds
sahf
out
mov
inc
out
ret
xchg
sbb
sahf
icebp
stc
cmp
in
xchg
pop
iret
repz
scas
ret
ret
mov
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
mov
lcall
sbb
adc
imul
push
repnz
push
js
jecxz
int
lret
fs
popf
dec
push
popa
test
xchg
pop
pop
inc
xchg
rcrb
stos
dec
je
adcl
sar
neg
addr16
dec
shll
jecxz
sbb
out
and
imul
and
ffree
sbb
or
not
push
repz
popa
mov
outsl
xchg
cli
inc
or
pop
pop
jl
imul
cmp
insl
sbb
add
enter
dec
lds
xor
or
imul
push
test
fdivrp
in
jmp
jmp
aad
mov
and
imul
xchg
jne
sub
or
sub
shrl
stos
out
and
mov
sahf
fmull
cmp
je
xchg
mov
cli
aas
mov
adc
frstor
jnp
loopne
mov
or
push
push
sbb
std
nop
sbb
inc
and
iret
mov
sbb
jle
lds
iret
pop
push
push
or
push
mov
ret
scas
cltd
jne
xchg
sub
sahf
in
pop
sbb
lods
pop
jg
dec
imul
test
xchg
mov
iret
shrl
fildll
xchg
pop
and
pop
and
aaa
push
sub
xchg
cmp
mov
imul
icebp
lods
lea
ret
or
sarb
add
mov
or
jmp
gs
cmc
or
adc
sbb
mov
xchg
stc
dec
outsb
push
iret
fdivs
add
movsl
add
xor
je
pop
sub
lahf
jmp
mov
imul
fbld
mov
xchg
push
or
retw
lods
xchg
push
pop
rcll
sub
aaa
pop
lahf
jecxz
sbb
jne
pop
jb
enter
in
xchg
or
aam
cmp
scas
les
xchg
gs
div
or
test
sbb
pop
dec
outsl
adc
leave
mov
ficompl
arpl
pop
cwtl
call
repz
fwait
push
das
inc
sti
mov
ljmp
leave
cltd
push
adc
mov
out
cli
out
sub
add
insb
test
in
mov
lret
clc
sub
push
cmp
mov
call
mov
inc
or
sub
dec
sub
ret
and
inc
loope
jae
mov
jne
imul
cli
ret
mov
dec
aad
fstpt
in
xchg
rcrb
xor
inc
jecxz
int
adc
aam
and
pop
sub
cwtl
add
popa
xor
or
inc
gs
xor
push
aas
push
sar
push
mov
fsts
push
sti
daa
add
cmpl
xchg
imul
pop
daa
testb
pusha
pop
sbbl
mov
in
pop
jle
inc
es
decl
mov
xor
or
or
jp
popa
jnp
xor
mov
pushf
mov
lods
push
in
je
pop
f2xm1
aaa
push
cmpsb
mov
pop
leave
adc
sub
sar
negb
hlt
ret
inc
mov
mov
inc
in
adc
mov
subl
pop
pusha
dec
xor
int3
mov
and
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
ror
jo
ret
push
sbb
stc
xor
cltd
mov
mov
jl
movsl
adc
cmp
repnz
lahf
cmp
into
xor
lods
fsubs
pop
cwtl
dec
jne
test
push
mov
jecxz
jno
lret
call
mov
xor
out
inc
xor
fiadds
mov
shl
bound
rcll
icebp
insl
or
adc
mov
rclb
stos
lret
adc
lret
xchg
xchg
xor
lcall
and
test
push
stos
repz
rorb
and
xchg
add
mov
gs
add
sub
sbb
and
ds
or
pop
add
pop
cmpsl
or
sub
adc
loopne
sbb
lcall
jbe
loopne
out
xor
adc
cmpsl
repnz
inc
jge
outsb
jbe
adc
test
out
in
popa
pop
pop
lahf
into
pop
add
push
lods
jbe
lahf
adc
test
add
out
inc
daa
push
jmp
mov
jl
add
xchg
call
mov
inc
push
enter
mov
push
cmp
lahf
popa
push
push
sbb
pop
test
out
stos
sub
jno
test
push
cmpsb
inc
sar
fsubr
jnp
jnp
or
orl
std
adc
out
fists
pop
test
ret
jo
pop
pop
std
in
popf
xchg
xchg
data16
inc
pushf
mov
adc
cmpsl
lahf
cmp
mov
std
jb
repnz
pop
cmp
or
lcall
jg
xchg
ret
jge
inc
and
jne
cmpsl
lock
jmp
ficompl
roll
cmp
fildl
cmpsb
pop
mov
movsb
mov
dec
addr16
outsb
repz
daa
jle
repz
shll
fsubrl
sbb
imul
jno
cmpsb
pop
std
cli
mov
cmpsb
bound
mov
out
cltd
ret
cld
inc
sahf
pop
xor
cmp
cmp
xchg
roll
orl
aaa
scas
gs
adc
mov
shrb
call
dec
loop
insl
dec
mov
fnstenv
addr16
push
push
push
cs
sbb
shlb
add
pop
pop
dec
mov
mov
inc
and
pusha
stc
pop
dec
jb
or
sbb
sbb
rcll
sub
or
jb
and
adcb
jp
mov
or
repnz
cwtl
nop
add
jb
data16
pop
in
xchg
mov
lea
addl
cmc
push
jg
daa
bound
aad
aad
mov
mov
fcoml
push
add
xchg
xor
lock
xlat
xchg
movsb
or
sub
xchg
or
popa
pop
mov
jne
scas
outsl
sbb
fwait
and
mov
repnz
mov
jmp
imul
fwait
xchg
sub
mov
loop
or
cmp
scas
and
pop
leave
add
jns
lods
pop
push
fnsave
int3
mov
imul
mov
xor
movsl
loop
sub
fldenv
stc
cmp
or
sub
sti
jge
xor
add
clc
or
leave
sub
add
fs
cmp
sbb
adcl
xchg
lea
fwait
aaa
jmp
test
add
shrd
cmpl
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
std
in
mov
mov
lret
jecxz
mov
dec
mov
mov
mull
xchg
or
in
inc
fisubrl
addr16
mov
dec
push
push
xor
add
jmp
xor
mov
loope
xor
jecxz
iret
pop
cmpsl
dec
fadd
mov
mov
xor
fldl
add
adc
popf
jecxz
adc
and
and
mov
insl
push
cwtl
and
mov
add
sub
clc
fstpt
adc
push
pop
pop
rorb
or
xchg
fs
xchg
pop
sbb
inc
sub
jmp
mov
insb
xchg
and
push
stos
inc
pop
ljmp
ljmp
insb
sbb
or
insb
mov
xor
xchg
dec
sbb
cmpsb
jp
xor
mov
popa
sahf
in
mov
rclb
pop
jb
jb
mov
jae
adc
or
mov
js
aam
gs
fxch
loop
mov
push
xchg
aas
gs
outsl
xchg
mov
inc
repnz
and
test
fsts
add
push
dec
inc
inc
in
jg
xchg
add
hlt
mov
xchg
jmp
dec
inc
dec
ret
pop
mov
pop
lahf
mov
cmpsb
std
enter
mov
push
xchg
out
fs
push
mov
pop
adc
fidivrl
jge
push
mov
fldenv
fsubr
ds
jl
icebp
int3
int
sub
xchg
pop
fdivs
dec
sarl
adcb
mov
mov
das
mov
and
lcall
fbstp
fmuls
data16
or
xchg
sub
xor
nop
mov
ret
dec
ffree
aas
and
hlt
inc
test
sti
jmp
xchg
shl
xchg
xchg
test
ret
dec
inc
cld
mov
leave
push
sub
imul
iret
ja
lods
mov
sub
adc
popf
add
add
imul
adc
loope
stc
test
inc
test
mov
dec
cli
shlb
insl
cmp
jns
pop
shll
iret
or
mov
mov
lret
call
fwait
sbbb
xor
adc
aam
push
inc
cmp
mov
mov
dec
pop
inc
xor
inc
rcrl
sub
jne
test
xchg
addr16
scas
sti
inc
jae
mov
jmp
add
or
add
and
leave
or
out
stos
into
scas
or
jae
fldl
jecxz
xor
mov
nop
popf
clc
or
orb
mov
jo
and
fmuls
mov
das
push
lret
sub
or
or
or
cltd
and
into
sbb
mov
xor
mull
mov
in
das
sub
ja
sbb
stc
cmpsl
fmul
lret
imulb
mov
cmp
mov
and
mull
mov
iret
mov
adc
mulb
lods
adc
mov
dec
sarl
cwtl
push
pop
int3
xchg
dec
mov
sbb
lahf
mov
or
adc
fildll
stc
clc
arpl
outsb
sub
mov
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
outsl
ja
cs
sahf
dec
inc
sbbl
pop
adcb
xchg
pop
icebp
jne
and
mov
xor
out
mov
test
or
and
push
sahf
sbb
xchg
lea
xchg
je
sbb
pop
stc
xor
jnp
push
arpl
sub
cmpsb
xchg
pop
mov
sbb
aam
test
sbb
movsl
inc
andb
and
adc
add
insb
cs
mov
or
xchg
push
inc
add
pop
push
jge
imul
in
mov
int3
mov
int
push
jecxz
push
push
xchg
out
inc
jns
xorl
call
mov
lock
adc
mov
inc
and
or
stc
xor
adc
add
mov
fnstcw
jno
pop
push
or
xor
pusha
and
aad
sub
push
mov
leave
xlat
cs
xlat
xchg
test
ds
fwait
push
roll
sbb
mov
xlat
mov
add
pushf
lods
stos
mov
lock
out
dec
ja
xchg
sbb
roll
adc
shlb
push
push
shlb
push
fisttpl
inc
lar
xor
push
pop
cmp
fdivrs
and
dec
daa
addb
jge
fstps
fiadds
bound
and
aaa
lret
mov
mov
mov
bound
stos
aad
xor
loopne
mov
mov
xchg
mov
fisubl
pop
in
add
or
test
dec
and
lcall
mov
inc
pusha
adc
hlt
aam
or
stos
test
js
pop
xor
hlt
shr
lret
repz
shll
jl
pop
lret
scas
jbe
bound
add
add
scas
jbe
ret
insl
xor
and
inc
out
aas
push
inc
jp
je
lcall
mov
dec
cmp
popf
test
movsb
in
mov
sub
je
adc
xchg
lret
stos
jmp
imul
mov
es
lds
fidivl
notl
ljmp
pop
or
or
pop
push
incb
jb
xchg
pop
ret
jno
mov
popa
jl
mov
in
out
test
sub
cmc
mov
insb
push
ja
sub
lods
in
popf
mov
xchg
ljmp
push
xor
daa
xor
jecxz
mov
mov
sbb
mov
pop
mov
hlt
ja
jno
arpl
mov
adc
mov
dec
mov
fcmovb
test
pop
dec
in
mov
and
bound
mov
fwait
psraw
mov
xlat
and
enter
movsl
inc
inc
and
dec
push
cmovo
std
cmp
mov
sub
cmpl
jle
sub
cwtl
cmp
cmp
xchg
pop
xchg
and
dec
xor
or
pusha
mov
pop
sahf
jnp
and
push
xor
adc
lods
insb
pop
pusha
inc
mov
insb
push
mov
lret
jecxz
mov
xor
xchg
popf
lea
dec
xchg
adc
movsl
cmp
lretw
cmp
mov
fnsave
cltd
sub
int
shrl
add
loope
xor
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
imul
push
lods
push
sbb
shlb
cld
push
mov
lods
aad
jge
addr16
and
jmp
scas
push
je
test
dec
in
jne
outsb
scas
or
mov
pop
push
subb
jmp
leave
push
fsts
dec
xor
add
inc
out
and
pop
orb
lret
fwait
pop
or
mov
mov
push
push
xor
push
sbb
xchg
pop
jae
or
clc
jmp
sti
scas
add
pop
fisttps
popf
push
jno
scas
jmp
or
mov
xor
vpavgw
dec
mov
jecxz
movsl
shll
jns
jle
mov
jmp
mov
or
sub
pop
push
cmp
push
into
nop
mov
addr16
subl
mov
iret
addr16
ljmp
jbe
mov
repnz
int
dec
add
bound
ds
push
xchg
mov
out
push
xor
inc
dec
fidivl
inc
jnp
test
pop
sbb
pop
pop
pop
push
dec
adc
mov
and
cmc
push
lahf
push
lock
mov
insb
mov
fcmovu
xor
lods
test
das
imul
aaa
ret
ret
push
rcrb
mov
stos
out
cmc
cmp
fucompp
dec
xor
pop
sahf
add
and
cmc
or
xor
adc
pop
test
inc
imul
mov
daa
mov
rcl
push
pop
mov
std
adc
addr16
cmp
ljmp
clc
insb
aaa
test
pop
sbb
mov
cmp
jge
cmp
pop
repz
mov
repnz
test
repz
adc
jge
sub
gs
cmpl
jb
mov
sti
sub
out
cwtl
xchg
es
cli
jns
repnz
outsb
cmp
testb
shrb
shll
aaa
rcl
jo
dec
mov
outsl
cmpsl
popf
mov
in
and
sbb
xchg
fdivl
cmpsl
and
jnp
xchg
test
bound
mov
ja
es
dec
mov
push
push
not
nop
subb
sbbb
pop
lahf
fildl
mov
mov
in
fwait
lret
xor
mov
push
mov
fisubs
cmpsb
adc
out
outsl
push
mov
inc
inc
sub
mov
dec
inc
rcrb
xchg
mov
cltd
popa
jmp
loopne
out
fdivs
daa
je
clc
addr16
and
mov
out
mov
mov
jg
bound
xlat
enter
push
lret
in
mov
jne
mov
mov
pop
fwait
adc
lret
repz
push
lods
xchg
es
std
mov
sub
aad
gs
loopne
cmp
inc
movsb
hlt
jg
mov
mov
or
orl
mov
stc
lods
xor
sbb
pop
jecxz
sbb
jle
sub
cld
mov
mov
es
dec
rcr
mov
aas
ljmp
std
inc
je
sub
out
sti
test
cmp
iret
fwait
sbb
mov
int
test
int3
xchg
pop
inc
vpaddsb
jo
stos
repnz
sbb
stos
orb
jno
jg
mov
mov
enter
orb
mov
cmp
and
addb
dec
mov
iret
push
fs
hlt
jb
cld
lds
test
xor
or
add
push
aaa
in
movsb
lods
adc
imull
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
fs
sbb
sahf
xor
xor
cld
fimull
iret
icebp
jp
out
rcll
pop
push
pavgw
enter
push
sub
stos
push
pop
je
or
push
mov
test
lahf
push
xchg
xchg
inc
mov
adc
iret
mov
shld
pop
xor
bound
jle
mov
gs
arpl
jno
pushf
xchg
mov
test
in
std
pop
jbe
push
lcall
cmp
xchg
pop
popa
stos
inc
in
out
leave
xor
jne
imul
cli
jge
dec
mov
dec
hlt
push
rolb
xlat
int
mov
xchg
rcll
xchg
pop
xchg
les
dec
mov
sarb
sub
jnp
mov
adc
xchg
pop
xor
pop
out
scas
cli
mov
push
pop
xor
cmp
cmp
mov
test
inc
mov
mov
out
mov
fs
xor
mov
push
daa
jnp
mov
xchg
fdivrs
outsl
xchg
mov
jge
or
dec
jne
inc
ror
pop
sbb
jno
sbb
jnp
push
pusha
jo
aaa
pop
mov
pop
cs
fstpt
cmc
adc
in
jno
lock
jae
test
mov
cmp
lea
sbb
out
and
mov
clc
movsl
jmp
cltd
test
and
out
test
xlat
mov
add
pop
movsl
mov
clc
mov
dec
jmp
in
dec
sub
or
sub
cmp
xchg
mov
adc
mov
mov
pop
repnz
jne
and
outsb
jbe
in
shrl
mov
int
in
gs
das
xchg
jne
cmp
xchg
inc
mov
cmp
cmp
iret
cmp
push
jge
and
dec
push
cli
and
pop
in
stc
jmp
fcmovnbe
mov
fwait
scas
inc
and
popa
push
ljmp
lea
roll
ret
test
mov
sahf
lahf
xor
insb
jg
push
stos
or
gs
dec
cmp
mov
movsl
dec
xor
sbb
inc
test
scas
out
movsl
aaa
and
inc
fwait
sahf
or
std
daa
fs
lods
repnz
adcl
movb
xor
cmp
pop
or
inc
outsb
add
cmp
lahf
mov
mov
aam
sub
inc
jnp
jo
push
repz
je
rcll
cmp
adc
sbb
and
dec
adc
ror
int
arpl
xor
add
lret
outsb
jns
pop
adc
movsb
dec
leave
leave
lods
stos
sbb
xor
add
jg
mov
in
sbb
adc
out
pop
inc
jns
sbb
fcmovnb
mov
aas
das
ret
mov
loopne
cltd
outsl
enter
or
adc
sub
aas
pop
sbb
out
adc
test
jg
aam
rorl
and
mov
shll
int
sub
xor
pusha
test
mov
xchg
cmp
cmp
sbb
or
jecxz
mov
mov
ja
rorl
mov
sub
nop
sub
outsl
jns
popa
les
lea
je
lods
data16
in
je
cmp
sbb
pop
int
jl
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
shlb
test
mov
mov
lcall
pop
shrl
jae
loopne
mov
xchg
out
push
cmp
and
cmc
loopne
mov
insl
arpl
jns
sub
dec
adc
cmpb
lea
stos
push
xchg
cmp
leave
imul
stos
dec
pop
xor
imul
pop
push
dec
cmpsl
mov
divb
sbb
testl
decl
lret
jg
je
cmp
insl
cmp
in
addr16
mov
mov
leave
mov
adc
mov
add
in
and
not
pop
mov
lods
popa
loope
jg
test
aam
outsb
mov
sbb
lahf
sbb
aad
jmp
pop
call
outsb
push
into
push
cmp
mov
xor
subl
sub
in
jmp
push
jbe
loop
mov
mov
out
cmp
mov
mov
and
xlat
push
cmp
mov
and
add
mov
xchg
popa
shlb
push
pushf
in
dec
outsb
les
inc
and
xchg
addr16
enter
cmp
xor
cwtl
outsb
es
mov
sub
and
je
mov
outsl
insl
les
das
adc
repnz
dec
cmp
cmp
or
lcall
xchg
dec
add
int
lahf
test
mov
ret
std
xor
xor
mov
jge
fmul
add
sbb
adc
lds
push
repnz
fidivl
in
jne
add
dec
rorb
mov
adc
push
sub
sub
cmp
shrl
fsubrl
aam
push
sub
or
xor
fcomps
add
mov
and
sub
xor
xchg
addl
or
imul
pop
dec
das
fcompl
xor
fwait
inc
fnstcw
test
push
pop
gs
insl
test
insb
repz
push
xorb
sub
in
mov
push
mov
jp
cmp
call
or
sub
cmc
loope
mov
mov
imul
inc
call
dec
push
sub
aad
dec
or
nop
push
sub
xor
lds
push
pop
sub
outsb
sbb
cmp
arpl
scas
cmp
loopne
test
in
test
inc
lods
movsb
cmpsl
shlb
pop
int3
aad
mov
rcl
cmc
cld
test
mov
fcmovb
jno
dec
fxch
js
and
dec
sbbl
xchg
shr
ret
jnp
jg
ds
dec
pop
call
out
mov
fsubrs
fadd
sbb
pusha
xchg
push
das
sbb
out
or
mov
inc
mov
fs
jo
push
sbb
push
mov
sbb
mov
add
cld
pop
cli
pop
add
mov
mov
adc
sbb
inc
mov
ret
repnz
adc
mov
cld
mov
jb
xchg
mov
in
mov
aad
push
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
iret
sub
mov
or
cmp
mov
shr
repz
addl
push
mov
push
pop
dec
movsb
pushl
mov
scas
xor
mov
jb
pop
mov
scas
adc
iret
mov
and
fwait
enter
pop
unpcklps
xchg
pop
cmpsb
test
jl
pop
mov
dec
pop
fcomp
cmp
cmpsl
ss
out
adc
rcll
arpl
cmp
jae
xlat
adcb
push
inc
add
in
mov
dec
call
push
mov
mov
out
into
mov
imul
stc
cmp
mov
insw
push
mov
sti
insb
xor
in
cmc
and
decl
push
into
stos
mov
sub
sub
xchg
out
mov
cmp
imulb
pop
cmp
jecxz
xor
and
lcall
rcrl
add
repnz
mov
ljmp
jnp
jo
inc
or
mov
je
leave
dec
push
jo
pop
stos
pop
popa
loop
lcall
fdivrs
jp
add
lcall
bound
daa
lods
mov
inc
dec
loop
xchg
les
add
mov
jae,pn
lahf
addl
mov
aad
sarl
jg
jbe
fnsetpm(287
cs
leave
or
imul
js
mov
lret
test
dec
insb
push
jp
pop
pusha
clc
sbb
ret
sub
imul
js
int
movsl
clc
add
out
xor
mov
into
outsl
fnstenv
xchg
xor
and
into
jecxz
cmp
into
nop
cmp
imul
idivl
xchg
mov
mov
sbb
xchg
adcb
bound
jp
negb
fcomps
add
shrb
mov
fsubs
mov
sub
lret
test
int
pushf
stos
arpl
popa
fldenv
cmp
xchg
jo
xor
lcall
insb
dec
sub
aas
fucomip
pop
daa
sbb
pop
scas
mov
arpl
repz
xchg
pushf
lock
nop
cli
stc
dec
jmp
mov
std
lods
bound
cmpsl
shr
sbb
jne
sbbb
xchg
xchg
and
jno
jb
sub
sub
mov
ret
fmuls
cmp
sub
dec
lret
pop
in
out
push
dec
adc
pushf
inc
add
dec
loopne
iret
mov
push
and
cs
sahf
sbb
cmp
hlt
mov
xchg
incb
in
rorl
and
inc
cmp
lock
into
or
xchg
imul
adc
xchg
popf
adc
pop
jb
inc
scas
xchg
jbe
xchg
jne
ja
or
pop
ret
nop
cs
lods
inc
arpl
mov
jae
fisttpll
jmp
push
ret
dec
mov
sbbb
pop
jno
push
in
sub
iret
or
in
aad
cmpb
bound
negl
xchg
shll
shl
sub
xlat
arpl
into
testl
jno
scas
sbb
in
aam
xor
outsl
movsb
jle
jmp
pop
xor
in
lock
xchg
dec
or
insb
inc
inc
xor
shrd
shr
mov
mov
mov
jmp
push
or
sbb
jns
aas
mov
mov
or
mov
sub
mov
jne
dec
and
xor
sbb
mov
ljmp
xchg
mull
pop
lods
fmull
gs
cmp
fnstsw
aas
mov
jbe
cmc
mov
push
lea
pop
and
mov
pusha
sub
push
in
scas
les
mov
mov
pop
mov
sbb
fwait
pop
pop
xchg
es
into
push
xchg
sub
clc
mov
leave
adc
or
xchg
adcl
es
pop
cmp
jns
ret
sarb
loope
mov
imul
mov
stos
xchg
arpl
push
jb
cmovg
pop
loope
call
cmpsb
jae
lahf
inc
aam
fdivs
les
dec
mov
imul
negl
sbb
popa
imul
flds
xchg
dec
ja
mov
loop
fldln2
push
out
mov
mov
nop
test
sbb
jl
cmp
xchg
rcrl
and
push
repnz
lcall
aaa
test
pop
sbb
in
xchg
adc
outsl
and
add
xorl
loop
fldenv
inc
xchg
pop
mov
fnstsw
jmp
cmp
lret
xlat
shll
lods
into
sbb
in
test
sarb
lret
xchg
add
mov
pop
mov
push
ficoml
jbe
mov
bound
arpl
out
add
gs
cmp
sub
push
out
rorl
pop
mov
js
lret
inc
adc
jecxz
aam
jecxz
test
jecxz
or
sbb
sub
xlat
stc
mov
loop
addb
sbb
sbb
lea
cwtl
push
cmp
outsl
mov
adc
or
popa
aam
cltd
aaa
xchg
lods
jbe
int3
fisttpl
call
jae
mov
xchg
inc
sub
lds
adc
adc
out
cmp
popa
repz
push
cmp
dec
lahf
fcompl
xor
mov
xchg
pop
jo
sbb
or
mov
shlb
stos
jb
cld
lahf
mov
nop
add
jmp
xchg
sbb
cmpsb
adc
mov
mov
add
addl
stc
sbb
xchg
pusha
mov
cmpsl
mov
dec
and
sub
scas
inc
jle
std
ss
mov
shll
int3
add
mov
mov
sub
lea
cmp
testl
inc
cltd
and
cld
inc
fwait
out
jg
xor
inc
fwait
mov
push
rcll
cmpsl
or
xor
xchg
and
xor
outsl
sahf
xor
push
nop
adc
adc
pop
cli
dec
dec
jg
imul
xor
call
add
or
pop
jbe
cmp
fimuls
xchg
notl
and
cmp
sbbb
pop
mov
dec
inc
mov
decb
sbb
mov
mov
cltd
inc
add
mov
and
fwait
sbb
push
mov
jmp
inc
dec
and
xchg
mov
enter
je
push
in
push
testb
inc
dec
ss
idiv
push
shll
jnp
out
dec
jbe
loopne
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
leave
shll
mov
sbb
in
xor
cmpsb
into
inc
mov
iret
dec
jnp
dec
mov
out
cmp
popf
push
adc
mov
fadds
repz
jo
pop
fcmovnu
jmp
movl
je
sub
mov
fwait
inc
mov
adc
jo
outsl
xor
push
and
scas
mov
ss
repnz
xor
push
or
mov
out
pushf
xlat
sub
fisubl
pop
mov
jmp
mov
push
call
mov
out
fcoms
xchg
adc
repz
out
arpl
adc
push
ds
jae
adc
sub
popf
das
js
push
push
sbb
sbb
sub
mov
sub
incl
popa
pusha
push
xchg
jp
xor
adc
sbb
adc
xchg
xor
xchg
repz
xor
shrb
jl
inc
popf
mov
cmpsl
mov
fldt
movsl
stc
add
dec
sbb
mov
sbb
pop
bound
int
sbb
call
dec
mov
mov
jae
lret
inc
mov
lds
mov
in
negb
pop
test
jno
mov
sahf
mov
jmp
xor
or
sbb
sbb
jb
adc
cmp
rcrb
adc
pop
bound
mov
sarl
mov
xchg
mov
mov
sub
xor
pusha
fnstenv
xor
xor
ss
cmp
fldenv
push
pop
mov
xor
rcrb
fsubs
insb
iret
in
sbb
lods
and
out
xlat
sbb
fcmovb
outsb
out
mov
test
push
in
loope
and
xchg
sbb
pop
cmp
outsl
hlt
rcl
xchg
xor
sarl
sub
push
nop
or
push
jg
or
lahf
cmpsb
sub
dec
push
adc
dec
insb
cmc
cmp
add
or
mov
aas
mov
gs
mov
push
aam
aad
or
add
push
rolb
mov
lods
xor
imul
xchg
xchg
insb
repz
mov
push
xor
insl
in
xchg
jmp
outsl
ss
or
stos
xor
cli
aad
aaa
pop
pop
loope
mov
push
push
mov
mov
hlt
or
inc
into
hlt
jp
in
in
imul
sahf
jl
ret
out
out
adc
xchg
mov
sub
sub
mov
ds
imul
mov
jg
jmp
push
mov
rorb
mov
nop
jne
jl
lods
test
xlat
push
dec
das
cmp
pop
cmpsb
popa
mov
jge
sbb
outsb
push
scas
in
inc
cmpsl
push
sarl
push
lret
add
iret
push
sbb
sub
testb
push
sbb
push
or
dec
arpl
push
stc
or
cli
jp
cltd
mov
push
call
dec
ljmp
sub
cmpsb
sub
das
jecxz
arpl
and
push
cmp
addr16
shlb
hlt
test
mov
nop
fmull
roll
and
movb
test
push
push
mov
int
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
cmc
fcom
mov
mov
loope
loope
mov
or
add
cwtl
push
lods
xlat
pop
jne
in
cmc
jecxz
dec
mov
shlb
cmp
daa
push
dec
fsubrs
dec
enter
cmp
fwait
jmp
popa
xchg
pusha
lock
adc
inc
les
inc
or
push
jo
cltd
addl
sbb
popa
dec
cmp
pop
mov
jecxz
add
adc
pop
fsub
or
jbe
cmp
or
out
mov
enter
add
sahf
xor
inc
mov
hlt
idivb
aam
repnz
push
mov
rcll
das
mov
test
adc
cmp
xlat
mov
sbb
jo
adc
cld
add
inc
into
push
pop
ja
aam
out
push
pop
cmpl
xchg
push
inc
pushf
mov
cmpsb
push
aad
dec
loope
pop
js
shll
dec
ja
jb
dec
push
push
xor
loope
cmp
cmpsb
push
cwtl
jbe
pop
jae
cmp
clc
testb
movsl
cld
cmp
adc
push
jno
fwait
and
mov
popf
mov
sub
es
sbb
sub
mov
orl
movb
out
dec
aam
pop
ret
sbb
mov
je
cs
fsubr
out
adc
icebp
pop
pop
call
pop
pop
std
and
cmpsl
xor
push
repnz
pop
dec
mov
mov
loope
push
aaa
pop
or
mov
int3
pop
es
ja
nop
dec
xchg
mov
xchg
jne
jge
add
jno
arpl
push
pushf
call
in
add
jle
mov
flds
xchg
bswap
inc
aas
xchg
pop
outsb
push
cwtl
pop
mov
mov
lods
stos
adc
out
inc
enter
xchg
lret
adc
adc
mulb
sub
stos
pop
ret
add
addr16
aad
cli
mov
inc
pop
sub
mov
cmp
leave
int
mov
jne
sbb
inc
ljmp
inc
pop
movsl
ret
inc
jp
sbb
cs
out
push
cmpsb
adc
jmp
aad
dec
pop
nop
adc
adc
fidivrl
scas
pop
and
mov
mov
loopne
lds
mov
jae
inc
jnp
leave
imul
scas
test
out
sub
ss
xchg
test
push
xchg
mov
sub
sti
adc
in
sub
icebp
mov
lret
fwait
jp
in
xchg
lods
call
and
mov
vucomiss
mov
push
add
outsl
aad
dec
cmp
imul
or
fs
insl
xor
sbb
mov
pop
sbb
popa
mov
lds
icebp
mov
pop
imul
imull
adc
pop
fisubs
mov
adc
jmp
push
mov
xchg
mov
pop
fisubl
inc
jb
out
push
mov
fadd
std
out
sub
cwtl
es
and
repz
or
call
or
add
lcall
sub
test
xor
out
jo
in
pop
mov
mov
ja
mov
push
mov
or
mov
inc
sahf
inc
xchg
fsubrl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
push
xor
cmpsl
jns
sbb
push
fbstp
adc
leave
dec
xor
pop
test
ficompl
sbb
sbb
push
mov
xorb
mov
push
outsb
push
es
fidivrs
sbb
pushf
rolb
mov
jle
popf
out
ror
xor
cld
cmp
dec
fsts
jns
push
loop
add
or
sti
push
and
sub
arpl
lea
scas
jnp
iret
cmp
pop
scas
sub
jp
aad
mov
jns
shlb
gs
stos
int3
jnp
aaa
inc
rcrl
mov
stos
dec
loope
mov
imul
js
xchg
mov
push
add
fnstenv
jp
cmp
out
ss
mov
bound
data16
lods
loope
dec
jmp
mov
xor
and
shl
lea
pop
dec
fs
xor
fdivrs
cltd
mov
mov
push
xchg
pop
rorb
sub
out
and
and
shll
mov
sub
cmc
or
test
cmp
xor
dec
lret
adc
adc
add
cmp
xchg
test
adc
pop
mov
fnstenv
out
adc
inc
dec
hlt
xchg
adc
adc
dec
jl
mov
mov
scas
lock
jmp
vpmovzxdq
lahf
mov
repnz
cmp
pop
jl
pushf
and
popf
idivb
push
loop
mov
mov
push
sti
sbb
jbe
or
add
mov
sbb
shlb
jne
xlat
test
adc
dec
push
jb
lcall
or
xchg
rcrb
mov
push
xchg
stos
or
pop
imul
popa
rep
call
mov
pop
ret
aas
jmp
mov
dec
dec
xor
cli
add
ficoml
jne
aam
mov
mov
in
pop
inc
sub
push
sarb
mov
adc
mov
pop
ficompl
and
ds
mov
jge
xchg
and
cmpl
cli
sbbl
mov
test
sbb
mul
mov
outsb
push
orb
into
dec
ljmp
fnsaves
cmpsb
mov
sub
je
les
push
subl
xchg
idivl
xchg
xor
cmp
sub
into
lahf
xor
xchg
sub
xchg
mov
nop
adcb
jecxz
add
xchg
cwtl
inc
lods
or
sub
xchg
stos
xchg
fcoms
and
inc
hlt
faddl
sbb
inc
pop
fsubr
jnp
jecxz
or
jecxz,pt
lods
or
hlt
cmp
sarl
pop
shrl
hlt
ds
xor
jmp
cmc
push
inc
pop
loopne
push
jl
jg
test
ja
jle
pop
test
outsb
or
adc
iret
cmp
pop
out
mov
and
clc
mov
adc
aaa
lods
mov
es
incb
and
push
wrmsr
lods
inc
mov
mov
jecxz
cmpsl
mov
lds
inc
sar
sub
xchg
pusha
fmuls
pop
push
mov
mov
ja
cwtl
call
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
orb
dec
jae
sbb
iret
sub
push
dec
sub
es
fidivrl
dec
repz
sbb
and
and
add
inc
and
and
nop
dec
mov
mov
inc
mov
pop
ljmp
fisubrl
add
sbb
lahf
pop
sub
call
xor
in
cli
add
pop
lods
scas
inc
insl
dec
shll
xor
roll
insl
mov
mov
insb
lahf
into
pop
dec
adc
das
push
dec
cwtl
out
outsb
enter
mov
pop
fwait
popf
pop
mov
xlat
scas
inc
or
or
ret
jg
mov
setp
mov
jbe
xchg
and
cmpsl
adc
fsts
sti
fs
call
imul
fsubrs
fiaddl
xor
ret
call
out
lret
jmp
add
fstps
xor
sbb
and
add
loop
cmp
dec
sub
test
mov
dec
and
or
jecxz
push
pop
aas
cmp
fisubrs
inc
das
fmull
les
sbb
aad
sub
push
push
mov
test
sbbb
jle
pop
lahf
inc
aas
mov
scas
mov
pushw
sub
inc
push
dec
dec
fcmovu
ja
and
fmull
push
loope
in
sbb
outsl
add
sbb
jl
lahf
fwait
call
adc
add
push
inc
jb
and
xlat
mov
outsb
rorl
imul
push
shl
enter
fidivrs
adc
sub
jle
lea
inc
pop
mov
push
sub
das
aam
lahf
pop
das
aaa
fdivp
xchg
es
pop
fcomip
mov
ds
scas
mov
xor
adc
jb
imul
pop
sub
or
jmp
or
out
or
sbb
dec
and
cmp
xor
sbb
jae
push
sub
cmp
je
mov
shlb
or
adc
ja
pop
in
push
ds
mov
lret
aas
mov
lods
sub
add
or
or
movb
aad
das
mov
inc
lods
subb
pop
push
jo
js
inc
fbstp
inc
insl
scas
sbb
andb
aas
xor
jecxz
adc
call
rorb
das
add
notb
aam
push
mov
shlb
lods
negl
lahf
test
jecxz
int3
dec
xor
and
sub
daa
mov
add
xchg
push
mov
mov
cmc
insl
xchg
or
mov
mov
mov
cltd
sub
add
in
inc
das
call
std
cwtl
cmp
enter
loop
outsb
pop
flds
dec
mov
sahf
add
xorb
or
in
jbe
xchg
out
call
ret
sbb
imul
sbb
movsl
test
mov
fmull
clc
jns
push
ljmp
sub
pusha
nop
mov
fwait
addr16
in
push
rcrb
push
and
mov
rcrl
stos
sbb
xor
lock
adc
pop
dec
xchg
mov
push
sbb
xor
sbb
and
ret
ret
sbb
xlat
sarl
in
ljmp
ret
fidivs
inc
lds
lahf
test
and
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
out
mov
sbb
nop
loopne
jl
ss
testb
clc
and
xor
mov
mov
jmp
jnp
ja
xchg
push
push
je
pop
xorl
adc
pop
mov
cmp
mov
mov
scas
sub
jmp
sub
loop
push
jl
insb
mov
xor
loope
ret
xor
mov
addr16
inc
mov
lcall
ds
sbb
push
cmpsl
pop
push
into
in
lcall
inc
lods
aaa
add
fs
fadd
scas
push
mov
dec
mov
xchg
fidivs
dec
jbe
cmp
jp
fwait
mul
sarb
and
cmc
mov
or
scas
pop
dec
das
cmc
cs
movsb
pushf
inc
mov
cmc
cmpsl
test
push
fwait
dec
in
cmp
ds
push
sbb
idiv
rorl
mov
or
frstor
push
mov
in
jo
lods
lock
adc
add
mov
jle
je
aaa
stos
sbb
inc
leave
stc
imul
stos
nop
and
adc
push
pusha
xchg
outsl
push
les
data16
and
mov
and
pop
pop
stos
in
sahf
jle
mov
jmp
movsb
mov
inc
fxch
push
lcall
shll
in
xchg
dec
sub
cmp
movsl
and
les
cld
push
adc
jae
dec
push
push
fidivrs
xchg
ljmp
mov
adc
fcompl
mov
jecxz
adcb
mov
fwait
sarb
daa
dec
lods
mov
pop
add
fnstenv
mov
jns
sti
std
adc
ss
subb
lock
or
cmp
jge
mov
pop
or
popaw
rcrb
in
bound
mov
cli
cmp
enter
sahf
or
xchg
ja
pop
and
jns
fldcw
pop
pop
loop
outsl
lods
mov
mov
cmp
loope
shlb
push
scas
mov
ret
fwait
xchg
adc
mov
and
pop
stos
sahf
sbb
cvtps2pi
jge
mov
mov
iret
ja
pxor
mov
mov
sub
jo
xchg
test
lods
cbtw
cwtl
in
dec
in
aas
aaa
pop
rcrl
cwtl
jl
and
aad
mov
pop
ret
mov
cli
adc
loope
or
sbb
pop
cltd
xor
arpl
loopne
dec
jbe
aaa
lds
push
int3
rcll
or
in
shlb
out
enter
jno
dec
add
loopne
mov
xchg
lds
scas
aam
push
or
gs
push
and
dec
icebp
sbb
or
dec
or
scas
add
add
cld
andl
mov
dec
clc
repnz
scas
adc
in
push
lods
sti
aas
jmp
push
pushl
cmp
les
jbe
pop
push
daa
mov
inc
adc
mov
pusha
xlat
mov
and
psubusw
repnz
subb
ret
sub
and
cmp
mov
sbb
add
arpl
jmp
inc
cmpsb
stos
jmp
push
pop
rclb
jbe
mov
out
push
mov
mov
mov
pop
inc
repz
lds
cmpb
mov
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
lods
clc
add
jmp
iret
and
and
xor
or
sub
mov
shlb
mov
adc
mov
adc
mov
repnz
sbb
or
jl
mov
pop
fsts
outsl
sbb
pushf
inc
lods
mov
movsl
jecxz
insl
ret
push
mov
pop
sub
neg
sbb
mov
add
popa
jle
pop
lret
icebp
pop
sbb
push
leave
in
cld
cltd
repz
mov
fidivrs
xchg
das
int3
cli
inc
pop
out
inc
sbb
movsb
mov
push
repz
xchg
or
lret
pop
push
add
mov
lds
mov
jnp
xor
xor
mov
xchg
xor
or
push
sub
dec
mov
roll
and
sbb
jmp
cmp
jge
outsb
push
adc
movl
std
dec
in
into
sbb
dec
out
test
daa
push
cmpsl
push
cmpsl
mov
jns
mov
jae
push
leave
xchg
pusha
adc
call
mov
mov
imull
mov
xor
fs
jge
adc
jae
push
pop
dec
jno
insb
sti
je
arpl
cmp
mov
out
push
xchg
jp
push
xor
repnz
or
and
sub
adc
jmp
jl
lret
xchg
lds
pop
cmp
je
jnp,pn
fsubl
mov
out
mov
add
in
lret
jp
int3
je
mov
add
test
cmp
mov
inc
je
inc
or
jnp
fisubrs
lock
fsub
aaa
xor
inc
ret
ss
mov
ja
xchg
shrb
bnd
sbb
push
jmp
pop
clc
jmp
mov
cmc
sbb
pop
fisubs
push
push
pop
sbb
mov
leave
cwtl
cmp
imul
negb
pop
fsubrp
aad
xorl
jle
aam
jno
and
out
dec
push
jg
xchg
orb
push
mov
icebp
or
sub
leave
cmp
push
lods
pop
push
push
cmp
add
mov
enter
insb
into
daa
icebp
aad
out
test
ret
push
mov
and
insb
mov
roll
push
pushf
push
push
out
popf
adc
push
cmp
cli
mov
sbb
lods
insl
jnp
and
mov
movsb
fs
mov
sbbl
pop
cli
in
sti
in
int
mov
cld
lods
sbb
dec
leave
cld
pop
xorb
lock
jae
add
cs
clc
or
lock
testb
mov
test
add
lahf
repz
cwtl
cli
cmp
inc
sbb
jmp
scas
mov
repz
mov
sub
dec
sbb
jle
outsb
call
sub
inc
sbb
sub
xchg
loop
sbb
push
xchg
or
inc
aaa
daa
add
push
mov
or
mov
fcomps
xchg
dec
ss
add
pop
inc
les
rcrl
jge
jae
clc
shlb
inc
daa
push
mov
push
imul
mov
cmpxchg
xchg
mov
lods
loop
and
jl,pt
or
jg
mov
dec
and
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
mov
push
sbb
and
jp
xchg
stc
inc
pop
cmpsb
aam
nop
add
out
lcall
jle
scas
sti
sbb
jno
or
rclb
aam
push
in
xor
popa
mov
sbb
push
ja
xor
cmc
mov
and
shl
mov
test
dec
nop
inc
sub
xchg
leave
lahf
xor
jge
add
mov
adc
mov
rcrl
popa
sbb
mov
outsl
adc
xor
loop
shr
rorl
rorb
ja
push
mov
mov
rcrb
sbb
mov
mov
and
dec
lahf
lock
and
push
gs
lods
and
pop
es
bound
xchg
movsb
mov
int
cli
fidivrs
push
pop
jbe
push
push
pop
pop
test
add
xchg
mov
aad
imul
out
test
aad
mov
dec
adc
sbb
adc
xchg
jb
xorb
mov
pop
jae
shrl
lock
pop
push
add
orl
inc
mov
mov
push
jbe
mov
push
cmpsl
sbb
jnp
and
sti
mov
ljmp
jbe
out
movsb
out
push
movsl
pop
mov
jb
cmp
test
mov
popl
les
outsl
icebp
add
inc
or
mov
dec
stos
int
adc
mov
sub
cli
push
mov
je
or
add
push
xchg
push
and
pop
fstpl
imul
jne
adc
sarb
cmc
stos
bnd
sub
aas
aas
jb
das
mov
addr16
fisttpll
cltd
and
stos
shll
pop
mov
jno
xchg
fsubl
out
xlat
push
add
sbb
sarl
adc
or
imul
mov
xorb
push
subl
mull
divb
or
imul
inc
xchg
cmp
push
int3
pushf
pusha
cli
or
jle
or
xor
cmp
or
subl
push
push
inc
jne,pn
xchg
xchg
jo,pn
sbbl
aaa
inc
ret
cwtl
addb
clc
push
into
dec
add
rorb
cmp
out
aam
inc
pop
inc
mov
adc
cmp
add
adc
sbb
test
rorl
loopne
mov
lock
and
jle
jecxz
clc
pushf
outsb
dec
loopne
cwtl
lock
xchg
pusha
pop
cmp
nop
mov
cmpsl
and
sub
inc
xchg
jecxz
popf
cld
cmp
pop
mov
test
jns
out
push
into
repz
mov
jns
cmp
outsl
cmp
or
add
adc
push
shl
outsb
int3
das
cs
jl
iret
sahf
and
testl
int
inc
push
jge
rcrl
dec
outsb
mov
stos
and
and
cmp
rolb
pop
pop
xchg
and
mov
arpl
push
jge
cmp
inc
setb
lds
lds
call
into
jne
rclb
ret
dec
fsubs
inc
push
adc
cmpb
mov
mov
mov
xchg
sarl
data16
dec
and
add
push
call
clc
xor
add
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
jmp
push
push
push
sbb
test
insb
insl
dec
lods
sub
cmp
jle
and
fisttpll
dec
leave
xchg
dec
jns
sbb
jne
jnp
out
arpl
fistl
ret
pusha
inc
mov
mov
adc
pop
xor
adc
or
inc
pop
mov
inc
and
sub
lea
out
leave
mov
daa
clc
shll
shlb
jb
inc
mov
into
iret
adc
jecxz
add
pop
cmc
adc
cmp
aad
pop
mov
sbb
lret
iret
jmp
sbb
cwtl
cltd
inc
jmp
pop
repz
data16
repz
and
mov
int
pop
jo
cmovle
shrb
pop
into
cmc
xchg
mov
add
dec
loopne
or
fisttps
inc
mov
add
xchg
jo
or
test
call
sahf
xor
or
or
inc
negl
aad
mull
jge
adcl
jle
mov
clc
loopne
or
arpl
dec
jnp
lret
pop
loope
mov
rcrl
loop
xor
mov
icebp
sbb
push
out
ljmp
sti
insb
add
xchg
mov
mov
pop
xchg
int3
push
repz
or
loopne
push
pop
pop
jmp
or
pop
cmpl
in
mov
dec
ret
cmpsl
inc
mov
fs
test
loopne
or
adc
push
adc
adc
xchg
push
ret
pop
orb
mov
cltd
or
fcmovb
xchg
sbb
lds
mov
inc
addr16
and
cwtl
addr16
push
leave
sahf
pop
or
or
jo
ds
rcr
repnz
frstor
xchg
int
lahf
fs
cmpsb
jne
aam
xchg
push
cmp
stc
lock
lret
cld
cmp
jns
sti
inc
sbb
push
inc
mov
push
mov
out
ret
es
jae
lods
xchg
adc
in
sbb
jge
jge
sub
in
out
xor
sub
dec
or
push
adc
lret
sub
cmp
in
lahf
arpl
push
das
popa
lods
or
pushf
or
pop
dec
pop
pop
ret
cmp
cmpl
mov
cmp
loop
inc
nop
add
loope
mov
aas
negb
push
jp
loopne
adc
mov
rolb
roll
sub
pop
push
ss
lock
clc
cmpsb
jns
cmp
into
cld
sbb
pushf
push
lods
ja
in
and
mov
leave
jbe
cwtl
jns
out
cli
inc
out
loopne
adc
popl
test
jecxz
pusha
arpl
lods
jne
mov
outsb
arpl
popa
das
sarb
mov
cltd
push
and
leave
in
ds
cmp
jle
or
mov
ret
jecxz
cli
inc
js
lcall
ret
mov
xchg
sub
mov
sti
aam
pop
sbb
lret
aam
repnz
cld
add
lock
sub
mov
push
in
fcmovnu
pop
push
xor
nop
cmp
mov
jmp
xchg
cltd
sbb
out
loopne
push
dec
sub
sbb
stos
scas
roll
sub
fimuls
or
adc
movsl
rcrb
jne
cmpsl
out
lcall
dec
nop
sbb
scas
push
sbb
stc
xchg
cmp
je
sbb
jbe
pushf
sub
cmp
cmp
mov
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
mov
mov
jl
fbstp
jns
das
in
shrl
xor
mov
push
pop
mov
xchg
inc
mov
sub
pop
adc
add
dec
mov
push
cmp
and
push
test
popf
jnp
lds
jbe
lret
pop
cmp
xchg
fsts
movsl
lods
add
lret
movsl
aad
jns
jae
clc
call
push
push
sahf
mov
mov
arpl
popa
inc
popf
in
and
sub
mov
cmpsl
cmpsb
repnz
mov
in
xor
add
inc
mov
lret
push
mov
cmp
pop
aas
inc
bound
adc
fidivrs
movsb
bound
movsb
mov
jl
lret
scas
add
adc
adc
dec
rorl
gs
cmpsl
in
sub
js
aam
xor
pop
or
mov
sub
mov
test
inc
xor
jbe
mov
imul
cmp
mov
shll
lock
jne
cmp
jp
icebp
ficomps
or
xchg
loopne
mov
outsl
mov
push
push
mov
iret
fdivl
cmp
lods
pop
out
test
dec
fidivrl
and
nop
lcall
int
pop
shlb
in
mov
repz
and
mov
mov
aaa
xchg
sub
mov
or
mov
adc
inc
mov
addb
loopne
mov
adc
subl
js
mov
cld
cmc
movb
dec
dec
bound
or
loope
inc
push
fidivrs
xchg
xor
xchg
add
in
xor
data16
cmc
dec
ret
data16
lods
orl
or
mov
scas
dec
sbb
outsl
jno
xor
sbb
jbe
sub
xchg
mov
add
push
das
cli
and
add
gs
hlt
jge
xchg
popa
iret
and
jae
int3
add
xor
push
icebp
pop
popf
inc
push
xor
mov
decb
pop
sbb
rcrl
jmp
jne
pop
inc
stc
push
push
lcall
pinsrw
dec
dec
lea
jg
insl
inc
test
adc
jg
jg
imul
jl
ljmp
lcall
bound
dec
mov
pop
inc
pop
test
shrl
fmul
cli
leave
cmp
xchg
sahf
out
pop
and
lods
outsb
mov
fistps
popa
loopne
jbe
inc
push
movsl
sbb
cli
add
arpl
add
sub
xchg
jb
and
adc
pop
cli
loope
push
cmp
ror
mov
inc
in
sti
fwait
adc
sahf
cmp
or
mov
les
xchg
inc
adc
scas
pop
test
or
cmp
xchg
pop
and
add
icebp
inc
nop
mov
xor
push
repnz
and
push
xchg
ljmp
push
jle
mov
mov
aaa
jmp
jl
inc
fdivrl
daa
test
std
icebp
repnz
bound
adc
sbb
loop
sub
xchg
imul
xchg
sbb
ficoms
xchg
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
xor
sbb
andb
mov
jmp
lock
test
xor
push
leave
repz
mov
addb
divb
dec
mov
push
popf
mov
sbb
jns
dec
js
testl
lock
push
std
ja
pushf
stos
cmp
adc
add
xchg
shl
sbb
dec
push
mov
hlt
dec
imul
and
dec
test
xor
js
add
mov
inc
add
mov
inc
mov
jle
push
and
mov
mov
aam
mov
xor
jo
mov
scas
inc
fldcw
pushf
or
push
sub
ljmp
nop
mov
testl
sbb
pop
inc
push
out
jg
xchg
mov
outsb
mov
inc
sbb
mov
ret
scas
sti
mov
arpl
jmp
pushf
cmpsl
sub
xor
loop
test
adc
xor
inc
xor
push
pop
fdivs
mov
aad
add
les
stos
pop
pusha
outsb
xor
test
lea
xchg
movsb
cwtl
jns
repnz
mov
cmpsl
in
in
lahf
dec
mov
bound
dec
pop
push
mov
add
test
int
stos
call
int3
push
pop
ljmp
mov
stos
or
pop
push
fstpt
sub
dec
insl
mov
mov
fwait
and
daa
clc
das
rcrl
cmp
mov
mov
jle
aad
or
adc
jb
dec
int
and
scas
jns
mov
fsubrp
mov
xor
insl
jl
cmp
sub
scas
mov
and
in
test
iret
jle
mov
xchg
dec
scas
push
out
and
jle
inc
fs
push
mov
loope
mov
loop
shl
shrb
jl
lcall
push
pop
push
inc
inc
cwtl
sub
lds
lock
stos
cmp
and
push
sbb
mov
and
dec
hlt
pextrw
push
or
movb
add
rcll
push
popf
or
xor
xchg
jl
sub
mov
icebp
jmp
scas
arpl
dec
mov
js
adc
push
insb
xlat
mov
xchg
fildll
mov
ror
fbld
add
mov
xor
sbb
mov
adc
inc
mov
cli
fdivl
xchg
loop
inc
insb
test
into
xor
ja
nop
pop
add
bound
xor
mov
mov
jno
test
mov
movsl
sbb
pop
test
jae
lods
xlat
ret
cltd
sbb
adc
sub
jge
outsb
push
or
daa
push
adc
push
mov
add
data16
call
sbb
mov
sub
cmp
and
inc
pcmpgtb
pop
inc
mov
sub
test
pop
popf
add
pop
sbb
push
jno
sbb
jge
dec
pop
cld
mov
sarl
sbb
and
outsb
negl
mov
add
push
sbb
inc
andl
out
lods
or
push
loope
sub
icebp
in
and
xchg
in
sub
inc
and
sbb
add
inc
ret
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
loopne
addr16
mov
rcll
dec
lods
sahf
hlt
cltd
fwait
arpl
es
rcll
int
lret
xor
xlat
cmpsb
inc
mov
mov
mov
push
ja
movsl
jle
push
push
popf
je
movsb
inc
xlat
push
inc
mov
lods
sti
xchg
pop
leave
cmp
stos
mov
mulps
les
mov
push
in
in
mov
xor
and
test
mov
pop
xchg
sbb
jle
mov
inc
test
out
nop
rol
push
cld
and
cmp
adc
das
xlat
pop
daa
stos
inc
lods
pop
push
cmp
or
scas
imul
in
lods
mov
int3
jecxz
daa
add
sbb
adc
mov
test
stc
push
pop
testl
shlb
mov
mov
shll
sti
and
jo
pop
push
or
cs
fbld
lods
dec
mov
jp
push
rorl
and
xor
arpl
jge
push
outsl
dec
mov
shlb
ficoml
sbb
adc
jne
aad
jmp
add
clc
mov
xor
mov
push
stc
adc
inc
clc
lods
or
pop
pop
out
mov
movsl
daa
sbb
dec
cmp
in
pop
xor
push
test
insl
jge
jecxz
xorb
fidivs
jbe
dec
or
dec
and
rclb
and
or
ljmp
mov
loope
xor
mov
mov
les
sbb
and
xor
add
mov
daa
mov
cmp
out
ficompl
cs
imulb
lods
adc
mov
pop
aas
aam
sar
fidivrl
cmp
adc
inc
jge
rorl
ss
mov
leave
mov
insl
add
sbb
dec
dec
push
add
pushl
mov
jl
lods
push
mov
ss
ljmp
sarb
sub
jne
mov
arpl
popf
adc
dec
aaa
and
lret
and
add
lea
insl
jmp
int3
pop
sahf
push
lds
dec
std
loop
in
ret
adc
loope
mov
insb
enter
imul
pcmpgtd
sbb
xor
and
inc
mov
or
and
xlat
xlat
inc
nop
outsb
das
rcl
jno
loope
sub
and
mov
movsl
inc
fidivrl
sub
inc
or
clc
mov
aam
fwait
test
sbb
mov
ss
sarl
outsb
adc
pop
das
mov
repz
movb
sbb
mov
out
push
push
popf
or
sbb
or
add
stos
mov
or
push
test
out
stos
pop
push
popf
push
add
mov
addb
sbb
xor
subl
mov
pop
and
xchg
cltd
dec
std
jns
les
mov
fs
inc
nop
scas
lahf
cmp
pop
mov
lret
dec
fisttpll
test
push
addr16
imul
cmp
push
fisttpll
cwtl
xchg
and
sub
mov
out
xchg
dec
jbe
adc
dec
fdivrl
ja
xor
inc
popf
xor
inc
inc
mov
repz
movsb
cmpsl
xlat
mov
out
push
stc
or
loop
movsl
sbb
add
shr
add
add
and
xor
sub
sbb
adc
pop
js
push
shlb
sarl
test
cmp
popf
sbb
loope
sub
add
dec
jp
xlat
ja
std
mov
iret
jns
mov
and
fsubl
mov
out
push
iret
push
push
jae
sub
push
scas
out
pop
outsl
xchg
adc
cmp
movl
hlt
jecxz
xchg
cmp
ds
test
or
repnz
or
add
in
cmpsl
cmp
iret
sub
pop
aas
test
sbb
addr16
dec
jne
mov
xchg
repnz
cli
mov
fcoms
jb
pop
push
repnz
out
dec
mov
add
int
jge
mov
subl
push
dec
daa
push
outsl
add
dec
cltd
ds
rolb
mov
jne
cld
jg
inc
pushf
lock
or
dec
popa
push
test
insb
test
movsl
jo
jb
rcl
add
ljmp
add
lret
rcll
arpl
cmpsb
adc
xchg
mov
jp
scas
bsf
sti
inc
packuswb
fs
add
adcb
pop
cmp
es
mov
cltd
push
pop
jae
xor
mov
sti
out
mov
and
and
xchg
gs
add
dec
sbb
jb
jmp
jb
pop
int3
ret
and
add
lods
outsb
push
fbld
or
pop
or
add
mov
xchg
loop
add
js
cmp
push
std
loop
out
dec
xchg
rorb
mov
in
jg
bound
leave
push
or
popa
push
inc
add
sbb
push
pushl
push
mov
pop
pop
dec
cmpsb
cmc
movsl
sbb
cmp
mov
imul
inc
mov
inc
mov
les
bound
int3
fdiv
inc
mov
inc
ret
jge
ret
mov
cmp
pop
push
jmp
jb
add
fucom
cltd
lcall
jl
dec
cltd
hlt
divl
shlb
dec
mov
jmp
mov
popf
push
bound
jmp
pop
and
push
cs
repnz
scas
mov
frstor
or
mov
xor
dec
or
test
push
lods
fsubrs
incl
pop
leave
xchg
mov
fs
and
rcrl
popf
fs
xchg
xchg
pop
imul
inc
ljmp
addr16
adc
xchg
cmp
pop
xchg
test
xlat
fistpll
xor
add
movsb
xchg
jbe
push
jo
add
call
jno
and
jecxz
mull
adc
mov
xor
ljmp
pop
lcall
adc
stos
mov
push
and
in
int
and
cmpsb
shll
hlt
cltd
das
xchg
dec
sbb
jmp
jae
xchg
pop
rolb
dec
push
mov
insl
xor
fwait
jge
pop
out
mov
movl
push
xor
or
shrl
sub
push
daa
stc
or
subb
cld
jg
sub
push
jns
mov
or
stos
cwtl
in
add
lcall
movsl
sub
mov
leave
ss
pop
stos
fs
pop
out
addr16
cmp
push
pop
dec
imul
scas
pop
fmul
jmp
xlat
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
mov
push
sbb
inc
mov
inc
jg
cltd
dec
lea
sub
jae
sti
cmpb
in
lret
clc
xor
imul
call
clc
lea
sub
push
movsb
cs
pop
int
insl
push
pushf
std
lahf
enter
inc
aas
js
inc
test
lret
js
inc
jo
mov
movsb
adc
sub
leave
mov
and
in
mov
mov
cltd
dec
adc
test
inc
dec
loop
rcl
jbe
lret
add
test
pop
inc
dec
jecxz
inc
sti
jmp
testb
pop
mov
lods
enter
xchg
jne
push
test
loopne
popf
andb
js
pop
stos
mov
push
cmp
addl
push
test
inc
and
addr16
cmpsb
sub
xchg
sub
cmp
xor
scas
mov
mov
cmpsl
loop
push
push
aam
push
out
mov
push
call
out
mov
syscall
cmp
aaa
push
pop
jno
cmp
stos
scas
popf
xchg
add
repnz
jl
iret
xchg
mov
mov
xor
push
scas
and
sbb
inc
mov
push
mov
hlt
les
fsqrt
add
lcall
dec
mov
xchg
adc
push
cmpb
sub
jge
popf
sub
jmp
lock
mov
pop
and
add
sbb
in
std
push
imul
mov
inc
xchg
mov
jbe
cmp
adc
pop
adc
xchg
stos
xor
ja
sub
mov
sbb
push
pop
push
sbbl
outsl
sbb
leave
or
stos
jnp
je
hlt
divb
sub
std
imul
je
push
dec
cmc
lds
inc
leave
pop
inc
lods
and
les
stc
icebp
xor
adc
ds
dec
jne
jb
stos
and
jne
mov
ret
cmpsl
daa
inc
out
mov
in
jp
pop
mov
aad
or
dec
and
mov
xchg
adc
mov
sub
movsb
push
bound
outsl
or
aas
fnstenv
leave
sub
loope
addr16
sub
add
loope
test
jge
jg
xchg
lods
jge
xor
ret
mov
inc
sub
sahf
mov
or
and
out
test
pop
inc
pop
clc
cmp
jbe
test
pop
addl
add
scas
aas
pop
lahf
inc
test
inc
adc
ss
cmp
fnstenv
jecxz
inc
js
pop
stos
addr16
mov
push
jno
and
sarl
jge
mov
fsubs
mov
sbb
adcl
or
xchg
adcb
mov
stos
movsl
fadds
lahf
std
ret
repnz
in
jb
add
js
mov
movsl
adc
or
xlat
popf
pop
jmp
sub
out
inc
mov
adc
xchg
xor
add
test
incl
add
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
stos
cltd
sub
sbb
sub
std
icebp
sub
pop
ja
jp
mov
inc
mov
mov
nop
mov
mov
cmp
fidivrl
pop
mov
inc
pushf
push
adc
inc
inc
lods
xchg
icebp
jmp
xchg
sub
sti
mov
pop
sub
pop
cmpl
cmpsl
je
scas
ja
xchg
sub
mov
outsl
sub
iret
sbb
mov
mov
push
je
insl
push
fwait
push
xor
fwait
adcl
sarl
jbe
fisubrs
xor
mov
divb
cmpsl
and
inc
es
in
or
mov
lock
sbb
jne
scas
sbb
ficomps
lcall
xchg
ds
movb
ljmp
aas
bound
push
or
mov
lock
mov
int
adc
out
push
icebp
and
fidivl
jle
inc
stc
jno
inc
cmpl
js
dec
pop
bound
add
inc
push
xor
lea
xlat
add
test
mov
clc
mov
loopne
cwtl
add
sub
jb
mov
inc
out
add
inc
mov
push
mov
or
sub
xchg
out
mov
mov
das
xchg
call
xchg
sbb
xchg
pop
std
sub
add
jmp
xor
mov
shlb
jg
cmpsl
mov
jno
divl
in
or
mov
inc
and
adc
and
mov
flds
mov
inc
jne
les
xchg
rcrl
mov
or
jmp
das
in
adc
cmp
mov
xor
nop
leave
cmpsw
or
adc
cwtl
lock
mov
pop
dec
rcrl
bound
pop
xor
mov
fdivrl
xor
daa
pop
std
cmp
popa
mov
mov
inc
je
stos
fwait
or
jle
sbb
out
add
cmpsl
or
push
sub
or
sub
nop
mov
je
or
jbe
or
jnp
jb
loopne
jb
rclb
popa
inc
mov
and
fmull
dec
movsl
dec
idivb
cmp
lret
outsl
xchg
movsl
and
movsl
adc
pop
incb
mov
test
or
inc
dec
addr16
mov
inc
cmp
mov
xchg
push
and
jns
jb
jmp
js
movsl
test
mov
jp
lds
std
cli
and
das
xchg
dec
or
jmp
aam
sbb
adc
lds
insl
stc
jns
stc
or
sti
xchg
sub
aad
jb
shlb
idivl
push
das
adc
adcb
mov
jno
test
imul
cltd
andb
loopne
lock
dec
dec
andb
jle
movsb
insb
inc
movl
cmpl
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
jbe
push
and
sbb
data16
es
or
stos
dec
aad
dec
sbb
imul
test
push
dec
ljmp
sbb
add
cmp
mov
or
sbb
cwtl
push
in
jecxz
or
push
mov
sbb
jge
mov
in
xchg
lds
sbb
pop
inc
mov
xor
jl
adc
imul
cld
mov
xchg
mov
pop
idiv
jecxz
inc
popa
ljmp
adc
pop
je
adc
push
add
pop
scas
sahf
and
push
andl
lods
fcoms
xchg
repnz
repnz
mov
or
lret
shlb
insl
scas
hlt
xor
push
inc
pop
in
or
pusha
push
and
cmp
in
pop
jg
fcoms
lea
jno
movb
dec
or
iret
jne
cld
jbe
data16
cmpl
xor
setl
mov
and
xor
icebp
addl
push
test
aas
enter
sbbb
das
cli
pop
rorl
dec
mov
adc
mov
and
adc
inc
sbb
in
lods
mov
add
pop
and
add
fsubrl
pop
movsb
add
call
sub
jne
ds
jl
outsl
into
add
mov
shlb
adc
fildl
shrb
inc
adc
test
and
loope
cli
in
inc
cli
jecxz
inc
repnz
adc
or
inc
xchg
sub
dec
pop
inc
xchg
xchg
loop
mov
inc
or
test
pop
fnstsw
mov
movsl
fdivl
cmpsl
xchg
fcoml
or
or
movsb
push
sub
cmp
aaa
xchg
cwtl
sbb
cli
fimuls
cmp
int3
and
or
fistpl
xchg
pop
pop
into
adc
push
test
add
pop
cwtl
arpl
mov
mov
xor
and
sbb
add
ja
outsl
mov
in
inc
pop
ret
push
cmp
add
pop
icebp
jge
movsl
nop
jnp
sbb
cmp
mov
mov
arpl
or
nop
das
cmp
push
jo
push
fwait
adc
sub
jno
cli
fisubl
push
into
sbb
into
ss
push
fidivrs
fsubrs
mov
stos
and
jl
dec
std
mull
sbb
adc
cltd
mov
fs
and
ror
push
jmp
sahf
icebp
outsb
cmp
test
cmpsl
add
ret
push
xchg
inc
cwtl
inc
repnz
push
loopne
sub
clc
rcrl
stos
lds
inc
or
in
mov
sub
clc
lods
pop
repz
fistl
imul
push
add
loope
xor
dec
mov
adc
mov
testb
data16
lock
mov
sahf
jl
mov
orl
sub
mov
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
movsl
mov
mov
sbb
sbb
xchg
gs
xor
es
fwait
test
sub
lock
or
cmp
ret
and
out
inc
add
adc
scas
test
mov
xchg
loope
pop
jb
stos
add
xchg
fiaddl
out
mov
es
inc
pop
push
data16
and
imul
sub
mov
notb
rolb
lahf
jo
out
lret
std
out
enter
inc
in
fmuls
inc
jb
cmp
mov
cmp
cld
inc
jge
mov
lea
and
scas
lods
push
cld
movsb
xor
cmpsl
dec
enter
rcll
and
cld
jg
pop
insl
dec
test
icebp
pop
sbb
xor
add
inc
in
sarl
xlat
pop
lret
push
fs
cmp
rorl
addr16
add
out
nop
int3
dec
push
sub
seto
dec
test
fbld
adc
orl
mov
adc
imul
mov
cmp
fisubs
and
outsb
or
mov
scas
jl
call
pop
lea
push
rcrb
push
mov
cwtl
in
dec
aam
sub
outsl
movsb
pop
imul
into
outsl
mov
jecxz
mov
xlat
repnz
fwait
and
push
xor
aad
push
notb
aam
aad
aas
mov
add
mov
ds
das
mov
outsb
arpl
cli
int3
lds
inc
or
lds
xor
or
or
or
stos
je
nop
cmp
inc
dec
test
jp
dec
sub
out
sbbl
mov
stos
or
lcall
lds
lock
nop
lret
mov
adc
dec
or
fwait
inc
arpl
mov
adc
loopne
cmpsb
pop
js
pop
fldt
enter
pop
cmp
add
cmp
jmp
mov
shll
cwtl
cmp
ljmp
pop
add
pop
cmc
outsb
xor
and
pop
in
sub
je
sbb
pop
or
pop
sahf
and
add
int
cmp
fldt
dec
ret
pop
mov
mov
int3
aaa
cwtl
test
push
push
xchg
xchg
sahf
mov
andl
xchg
scas
ret
cmpsl
das
sub
inc
cmc
test
daa
iret
push
out
aas
push
jle
ljmp
add
or
cmp
mov
popa
jle
mov
xchg
out
xor
fcoms
sbb
mov
cmp
cmp
push
int
mov
jb
outsl
ljmp
rcll
and
or
adc
js
xor
shll
lar
test
sarb
and
xor
jne
cs
adc
cmpsb
pop
aas
mov
xor
and
enter
and
cmp
int
pop
push
fidivrs
mov
xchg
mov
sub
dec
push
and
rol
test
lcall
add
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
lock
jo
pop
push
sbb
jp
xor
ficomps
cpuid
mov
adc
push
pop
mov
repnz
sbb
adc
xor
mov
mov
je
adc
sbbl
fidivs
nop
loopne
pop
push
gs
xchg
pushf
ret
into
or
pop
fwait
jns
dec
data16
push
jns
sub
gs
mov
movsl
pop
mov
movsb
mov
jnp
outsb
mov
adc
ljmp
xchg
daa
and
pop
inc
inc
push
popa
sarl
test
jne
mov
pop
ret
adc
jmp
sbb
into
sub
loope
leave
dec
sahf
leave
mov
lock
roll
les
jle
push
mov
pop
inc
aaa
in
cli
jl
das
inc
pop
or
pop
std
cltd
imul
adc
addr16
dec
mov
dec
or
pusha
iret
or
cltd
xorl
outsb
sbb
mov
lahf
insb
sub
xor
movsb
xor
or
xchg
and
cltd
xlat
sarb
movsl
ds
pop
ret
push
cwtl
sbb
nop
xchg
mov
add
mov
fwait
je
aaa
mov
sbb
roll
out
enter
mov
rcrb
push
xchg
jb
xor
fimull
test
rorb
std
add
lea
and
addl
dec
stos
negl
subb
xor
stc
adc
notb
sbb
sub
mov
fucomp
les
icebp
jbe
jmp
xor
in
dec
popf
fucom
sub
fisubrl
push
adc
sub
sti
dec
and
xor
call
cmp
cs
pop
push
xchg
das
enter
mov
mov
add
mov
testl
idiv
pop
outsl
movsb
or
aaa
push
mov
inc
stos
pop
fiadds
std
lcall
adc
push
addr16
incl
out
dec
inc
cmpl
mov
imul
popa
in
inc
out
js
pop
lret
cmpsb
cmp
dec
ret
movsl
jge
add
daa
dec
or
dec
mov
dec
mov
ss
aaa
mov
xor
test
xchg
lock
lret
sub
enter
lock
out
adc
mov
data16
dec
rcll
jae
dec
add
enter
mov
push
mov
mov
dec
jns
movsl
popf
aaa
repz
dec
mov
push
popa
push
jle
jbe
dec
lods
leave
stos
fdivrl
pop
jnp
outsb
jne
out
movl
data16
je
dec
jle
inc
std
into
mov
jno
xor
out
fmull
fcomps
daa
in
cmpsb
mov
adc
lock
push
mov
int3
push
or
add
and
mov
repnz
aaa
mov
xchg
pusha
repz
mov
inc
push
jbe
jns
sub
mov
sbb
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
add
push
sbb
sbb
pop
mov
loope
sub
and
xchg
stos
mov
iret
mov
add
arpl
sbb
repnz
cmpsl
fldt
pushf
or
outsb
or
pop
dec
cmp
cwtl
xor
push
mov
or
iret
sub
fmul
pop
repz
dec
adc
addr16
neg
sahf
cmp
pop
cli
jae
sub
xbegin
outsl
fucom
ss
imul
popa
and
or
enter
adc
and
mov
inc
adc
mov
daa
fsubrl
enter
bound
int
cmp
mov
cmc
push
pop
lcall
int3
push
adc
xorl
popa
push
dec
out
in
test
pop
sbb
inc
div
dec
dec
mov
into
out
ret
iret
scas
or
es
pop
and
and
xor
outsb
inc
mov
mov
jno
sarb
mov
call
test
adc
jne
inc
jge
cmp
das
test
pop
lods
and
dec
xor
pop
fldl
inc
ret
push
in
xor
jecxz
adcl
cwtl
aam
pop
je
xchg
or
pop
int3
mov
sbb
mov
and
shlb
push
sub
mov
stos
dec
add
mov
mov
cmp
xor
out
push
adcl
stos
or
data16
out
mov
lahf
cmpsl
adc
xchg
aaa
rcll
js
test
shrl
jl
clc
test
mov
ljmp
push
mov
aam
iret
sahf
movups
movsb
sub
inc
cmp
mov
xlat
push
test
std
icebp
and
jle
call
insl
mov
sahf
mov
lods
mov
pop
jg
push
mov
cld
in
push
push
cld
push
inc
mov
cmp
divps
pop
insl
mov
xlat
and
add
jae
or
xor
aad
sbb
repz
icebp
lds
xlat
adc
jl
cltd
icebp
lds
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
jmp
es
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
insb
and
dec
insb
gs
arpl
push
outsl
inc
jne
jae
jb
hlt
and
mov
inc
add
es
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
and
add
inc
add
inc
add
inc
add
es
add
jg
add
daa
inc
add
inc
add
es
add
es
add
push
movsb
scas
or
movsb
xor
inc
add
es
add
es
add
daa
inc
add
daa
inc
add
inc
add
inc
add
es
add
daa
inc
add
inc
out
cwtl
es
add
es
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
movq
ja
pop
xor
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
adc
inc
add
loop
js
lcall
and
add
adc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
inc
add
sti
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
addl
lahf
addl
cmpsl
addl
scas
addl
mov
inc
add
addl
movl
inc
add
addl
fildl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
nop
lea
add
add
add
add
add
add
add
add
orb
add
xchg
add
add
add
push
xchg
add
add
add
add
rolb
add
cld
xchg
add
xchg
add
xchg
add
add
xchg
add
add
pop
xchg
add
add
addb
add
xchg
add
add
in
add
testb
add
mov
add
mov
add
mov
add
add
add
insb
mov
add
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
mov
add
add
add
jb
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
dec
mov
add
add
add
test
add
test
add
mov
mov
add
mov
add
mov
add
add
adc
add
mov
add
add
push
mov
add
add
jbe
add
orb
add
add
fimull
add
clc
mov
add
add
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
data16
add
add
orb
scas
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
lea
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
add
add
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
xchg
add
add
add
push
xchg
add
add
add
add
rolb
add
cld
xchg
add
xchg
add
xchg
add
add
xchg
add
add
pop
xchg
add
add
addb
add
xchg
add
add
in
add
testb
add
mov
add
mov
add
mov
add
add
add
insb
mov
add
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
mov
add
add
add
jb
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
dec
mov
add
add
add
test
add
test
add
mov
mov
add
mov
add
mov
add
add
adc
add
mov
add
add
push
mov
add
add
jbe
add
orb
add
add
fimull
add
clc
mov
add
add
add
mov
add
mov
add
mov
add
add
dec
mov
add
add
data16
add
add
orb
scas
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
lea
add
add
lea
add
add
