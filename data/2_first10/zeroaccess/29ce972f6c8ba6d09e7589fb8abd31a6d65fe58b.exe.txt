add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
fst
jle
jle
fidivrl
jle
cmp
fld
ja
or
xchg
or
cmp
enter
pop
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
add
mov
cmpsl
loop
mov
insb
inc
sbb
loope
pushf
inc
arpl
sub
mov
xchg
aaa
adc
in
les
dec
mov
insl
dec
mov
test
arpl
test
sti
mov
es
or
popa
outsl
addr16
fimull
xchg
pusha
pop
das
pop
add
inc
pop
or
pusha
jmp
std
std
dec
jmp
movsb
or
dec
xchg
pop
xchg
or
or
pop
xor
jmp
pop
jb
xchg
xchg
mov
push
mov
add
bound
add
les
int
jl
repz
pop
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
adc
fidivrl
jle
jg
jle
or
movsb
pushf
mov
and
icebp
lret
xlat
int
mov
pop
cmc
repnz
xchg
mov
loope
dec
fldt
xor
jbe
aas
dec
imul
call
nop
or
lret
mov
jle
xor
mov
aaa
sub
cmp
push
aad
jns
jmp
lret
icebp
out
push
aam
outsl
in
pop
jae
fldenv
dec
push
mov
ljmp
arpl
and
mov
jl
push
cmpsb
ljmp
scas
cmpsb
xor
bound
jp
pop
fcomps
push
mov
cmp
sub
clc
xchg
aam
push
sbb
daa
aam
in
pop
sbb
daa
and
stos
popa
in
js
cmpsl
and
add
pop
sbb
xor
in
mov
jp
jmp
sub
loopne
inc
jbe
cwtl
dec
cli
in
pop
das
fistps
mov
push
or
jl
fdivs
mov
mov
mov
popf
rorl
sahf
sbb
fdivrs
outsb
mov
jo
ficomps
scas
mov
mov
pop
pushf
push
repz
fidivrl
jnp
inc
std
std
rcl
mov
push
adc
pop
push
aaa
in
repnz
lret
jbe
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
jae
imul
push
cld
and
sub
adc
and
iret
stc
rcll
bound
xor
scas
mov
xchg
repnz
imul
pushf
mov
shlb
or
popa
adc
jle
daa
jp
cld
clc
xchg
sub
notb
push
mul
dec
dec
jp
out
sub
inc
repnz
xchg
cld
out
scas
mov
pop
sbbl
hlt
and
dec
lret
add
xchg
fisubs
frndint
cmp
icebp
stos
daa
fstp
les
and
push
mov
xor
and
xor
std
push
sub
and
pop
jo
jbe
je
push
dec
mov
push
and
test
daa
sbb
out
mov
push
mov
push
out
repnz
pushf
push
mov
push
outsl
inc
out
push
ss
sub
das
dec
pop
sbbl
scas
pop
and
loop
jbe
xchg
and
orb
xchg
inc
pop
jno
imul
cmp
xchg
sub
mov
adc
dec
dec
jle
pushl
stc
mov
mov
iret
adc
fdivs
adc
cmp
mov
inc
mov
in
xor
negl
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
add
jle
jg
jle
in
push
scas
sahf
or
icebp
dec
inc
xchg
jae
ljmp
adcb
js
adc
push
rolb
out
repnz
and
test
cwtl
pop
mov
sub
xchg
dec
leave
sarl
jae
mov
jno
mov
adc
stc
dec
test
ds
jb
xlat
pop
icebp
sbb
xor
cli
fiaddl
fcmovb
xchg
xor
arpl
loopne
int3
jmp
xchg
arpl
mov
loopne
call
cmp
mov
negb
in
mov
pop
dec
xor
bound
xchg
push
pop
mov
cmp
repnz
dec
xchg
adc
imul
inc
push
xor
cld
jo
inc
ss
xchg
fldt
sub
xchg
adc
sub
enter
jnp
test
mov
xchg
pop
sbb
gs
pop
and
shl
pop
test
xor
js
ret
jns
cmc
inc
or
lea
loope
subb
sti
flds
fsubrs
imul
xchg
cmpsl
test
mov
lea
jns
dec
adcl
push
xlat
ret
dec
loopne
jp
sub
cltd
jbe
cmp
mulb
mov
adc
xchg
pop
jg
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
sub
mov
cmp
pop
ljmp
lret
mov
aam
xchg
inc
dec
mov
movsb
pop
and
lret
repnz
test
repnz
loop
adc
addr16
jno
xor
pop
cmp
push
repnz
xchg
jg
dec
push
test
cmp
mov
mov
imul
dec
cld
mov
inc
inc
mov
lods
push
xor
mov
ret
push
int
sbb
lods
fdivrs
ficoms
dec
aam
xor
lds
push
mov
movsl
ja
sti
out
sbb
push
jae
xor
divl
call
pop
loope
test
das
sbb
clc
lds
hlt
inc
fwait
cmp
fstps
and
lret
daa
dec
sbb
add
imul
cmp
bound
mov
cmp
mov
gs
push
pop
sub
mov
insb
lret
and
sbb
inc
push
pop
fstps
xor
sbb
mov
or
sub
or
or
inc
pop
pinsrw
sbb
cmp
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
rolb
dec
jo
jle
jg
jle
call
mov
fnstenv
dec
pop
ret
jmp
icebp
mov
sub
fimuls
pop
outsl
ljmp
jecxz
faddl
movsb
cs
dec
and
and
stc
cltd
notb
test
scas
cmp
sti
out
sti
sbb
pop
in
pusha
test
inc
jmp
xchg
cli
ret
cld
jo
out
insb
sub
and
push
inc
cmp
jp
stc
sbb
sub
jnp
ljmp
cmpsb
adc
repz
insl
cmp
aaa
aas
push
pop
xchg
fwait
dec
outsl
cmp
cld
xchg
es
jb
dec
pop
arpl
add
mov
mov
jnp
add
sub
insb
test
cli
xchg
loopne
shlb
push
push
scas
aam
add
inc
jg
inc
dec
jg
adc
sti
popa
and
inc
inc
and
xlat
fsubrs
sti
std
sub
orb
out
cltd
gs
fwait
mov
sti
pop
mov
loope
add
mov
sub
mov
stos
mov
mov
sbb
jmp
pop
into
xchg
movswl
lret
pop
cmpsl
add
nop
push
fwait
push
movsl
cld
cmp
dec
leave
sbb
add
imul
jne
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
testl
jle
jg
jle
mov
sahf
ret
pushf
insl
pop
and
in
xor
xor
in
xchg
or
xchg
ret
rcrb
xchg
fwait
push
neg
push
movsb
subl
jle
ja
adc
pop
cmp
add
push
roll
out
jnp
aaa
xchg
fwait
mov
movsb
or
stos
push
movsl
daa
ljmp
mov
xchg
and
aam
and
jb
inc
xor
push
mov
pop
dec
out
out
aam
xor
push
popa
sub
or
ds
jne
fildl
jg
jecxz
xchg
mov
push
sub
aam
inc
jno
xchg
xor
lods
push
sub
lds
xchg
sti
add
sbb
jb
mov
out
lods
cmp
mov
or
mov
mov
sub
aas
and
call
call
loope
mov
mov
inc
call
loopne
mov
push
int3
sub
es
jl
dec
dec
in
outsl
xlat
sub
xor
adc
lret
hlt
mov
jns
mov
jmp
sarl
xchg
ss
sar
les
xchg
lret
jnp
out
in
pusha
pop
sbb
dec
cmp
ds
pop
mov
sbb
mov
or
dec
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
cmp
bnd
jle
jg
jle
jnp
dec
fst
adc
scas
out
jp
xorl
inc
xor
cltd
and
ds
xchg
jnp
out
push
mov
jne
addr16
push
mov
fucom
cmp
sbb
inc
mov
lea
xor
jg
mov
pop
push
int3
or
and
jg
cmp
jmp
or
jbe
into
pushf
pusha
sub
arpl
mov
data16
xchg
insl
and
lds
inc
and
imul
scas
clc
mov
jns
cmp
or
fs
mov
jp
dec
out
dec
and
nop
cmpsb
pop
hlt
inc
cmp
scas
stos
sti
push
push
adc
or
jmp
add
les
or
mov
mov
push
sbb
lods
jns
movsl
jmp
cmp
and
ret
lea
lods
out
sub
pop
push
sbb
mov
xchg
inc
adc
pop
push
mov
aam
int
mov
shll
call
jg
sub
movsb
pusha
and
cmp
in
sbb
and
jecxz
lods
xchg
adc
dec
dec
or
jp
cmpsb
add
xor
add
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
pop
je
jle
jg
jle
mov
jg
cmp
lret
stc
mov
xchg
xchg
or
ret
pusha
iret
push
mov
dec
adc
jle
adc
sbb
hlt
jb
mov
add
xor
or
mov
popl
sbb
in
lods
loop
jecxz
sbbl
add
jb
cli
call
aaa
pop
mov
enter
aaa
in
dec
mov
sub
adc
sub
cmp
adc
push
add
cltd
orl
pushf
arpl
push
js
aas
sub
adc
enter
sbb
cld
xchg
repnz
push
nop
mov
aas
lods
pop
add
jbe
into
insl
gs
test
fwait
mov
adc
mov
popf
rolb
sub
jp
mov
scas
dec
xor
loop
mov
out
jb
stos
and
ret
cmpsb
mov
icebp
ficoml
icebp
jbe
inc
ljmp
pop
push
es
pusha
mov
rorl
int3
sub
xor
out
test
sbb
js
push
xchg
push
xor
jo
loope
and
xor
push
fiaddl
int
inc
out
ds
mov
inc
jg
cmp
rorl
in
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
aaa
and
jno
or
fidivrl
jle
xchg
xlat
or
jmp
cmp
mov
or
sbb
fcoms
push
stc
pop
repz
xchg
fbld
inc
ja
hlt
out
sbb
dec
ss
ljmp
stos
xor
xchg
jns
cmp
andl
test
xchg
imul
lahf
imul
movsb
int3
stc
jl
jge
test
jmp
mov
lcall
mov
outsl
bound
insl
sahf
and
push
mov
adc
mov
stos
cld
sub
pop
test
dec
sbbl
dec
mov
fisubrs
vmovaps
xor
mov
mov
es
adc
jnp
and
incb
call
aas
aam
les
scas
je
insl
jae
mov
mov
cmc
cmp
adc
ret
dec
sbb
ljmp
add
dec
xchg
fiadds
scas
xor
or
mov
inc
mov
imul
jbe
adc
loope
cmp
sahf
cmp
sbb
call
adc
and
inc
cmp
insl
bound
jle
pop
test
addb
mov
dec
sub
adc
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
leave
pop
pop
jmp
and
jle
call
xor
popf
addr16
out
mov
pusha
mov
xor
jmp
mov
xchg
or
dec
cmp
data16
and
sbb
push
sub
pop
jge
or
rolb
scas
inc
in
lods
inc
push
icebp
iret
ret
jbe
ljmp
scas
push
xor
test
mov
pop
push
mov
xchg
sub
push
xchg
and
add
jnp
iret
nopl
push
test
cmc
cmp
pop
sahf
jo
insl
inc
xor
mov
mov
sub
xchg
test
sahf
xor
fmuls
es
or
lods
jmp
xchg
in
add
mov
and
addb
pop
lock
lahf
orl
sub
dec
cwtl
subb
inc
das
hlt
fcoms
push
scas
call
push
xchg
ret
fcomps
pop
and
cmpsb
pop
xor
in
xor
addl
adc
sub
push
data16
push
push
or
jo
dec
ss
xor
or
add
add
add
sldt
add
decl
cmp
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
mov
mov
jle
jg
jle
push
cmp
scas
and
xor
or
cld
dec
mov
setl
scas
or
or
jmp
mov
add
nop
mov
sub
fildl
cmp
mov
test
xchg
cmpsb
aas
stos
mov
fistpll
push
imul
add
out
add
lahf
or
clc
jle
dec
xor
jle
push
or
repnz
sbb
push
push
movl
mov
or
cmp
fcomp
int
or
xor
and
shl
add
arpl
add
xor
hlt
popf
mov
cmpsb
mov
jae
inc
mov
ljmp
cmp
das
or
push
cltd
mov
adc
aas
mov
inc
adcb
js
sbb
or
rorl
jp
fisubs
js
ljmp
jecxz
push
or
add
mov
ret
ret
test
lret
xor
sub
push
loope
mov
mov
rcrb
stc
cmp
dec
add
add
mov
or
or
jle
and
jle
into
dec
pop
arpl
sub
and
push
leave
ds
sub
std
mov
movsl
std
arpl
fs
incl
dec
jp
jno
loope
adc
rclb
cmp
push
popf
inc
mov
subb
in
ret
cld
cli
sub
popf
mov
inc
lods
mov
mov
xchg
out
xor
cmp
enter
inc
test
insb
mov
test
addb
fisubs
int
sbb
scas
jae
outsl
xchg
ret
cld
dec
add
fnstsw
ret
xlat
jb
pop
and
cmp
jnp
push
cld
movl
sarb
mov
dec
in
scas
add
xor
xor
fstpt
inc
int3
or
push
and
inc
dec
mov
sub
pop
sub
out
rorl
sbbl
mov
adc
dec
stc
ss
outsb
mov
sbb
adc
xor
xor
xor
sbb
jno
mov
ficomps
lcall
adc
mov
cli
ljmp
test
or
add
cmp
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
je
js
movd
jg
jle
cli
or
add
imul
push
dec
or
jge
push
push
inc
iret
jo
lods
pushf
sub
notb
sub
bound
push
sbb
pop
lods
pop
pop
aas
mov
sbb
cmp
lcall
jo
mov
mov
mov
jge
loopne
sti
cli
out
int3
and
out
aad
pop
sub
mov
fs
fsubs
test
sbb
mov
dec
lea
repnz
xchg
sbbl
fwait
stos
es
inc
scas
inc
push
je
or
adc
jmp
aad
mov
lea
insb
shl
xor
imul
jmp
mov
mov
jecxz
adc
xchg
clc
xor
out
add
mov
add
movsl
pusha
leave
cmp
jno
xchg
xchg
pop
leave
xor
aas
mov
add
addb
push
mov
test
sbb
test
mov
rclb
mov
lods
inc
push
mov
cld
push
icebp
mov
mov
imul
repz
dec
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
sbb
mov
std
outsl
cmc
fidivs
adc
mov
fsubrs
mulb
sbbb
add
je
xlat
pop
das
add
adc
dec
es
add
daa
les
inc
adc
rorb
sub
stos
xor
subb
int3
jle
dec
stc
adc
arpl
cmp
xor
movsl
sub
xor
repnz
xchg
mov
movsb
mov
xchg
mov
fnstenv
mov
sub
fimuls
dec
scas
lods
jp
mov
outsb
out
jge
xlat
gs
push
leave
mov
in
mov
shll
dec
inc
shll
out
movsl
test
out
jnp
xor
sbb
xchg
int3
shl
xchg
inc
dec
mov
or
push
mov
xchg
lret
xchg
adc
movsb
jb
add
mov
mov
inc
sbb
sbb
xchg
mov
imul
dec
sbb
das
ja
jmp
mov
mov
movsb
les
adcl
test
imul
int
ds
insb
fnstenv
clc
add
add
imul
mov
jmp
jbe
xchg
call
adc
imul
or
jle
xchg
mov
orl
popf
lods
cmp
out
cli
sarb
cmp
mull
cli
in
xor
xchg
fwait
outsb
dec
cmpsl
mov
pushf
sar
xchg
sbb
mov
pop
or
push
fidivl
jge
adcb
cmp
add
dec
xor
adc
xchg
cmp
push
xor
mov
add
and
and
lea
push
mov
enter
mov
rol
data16
incb
inc
push
add
insl
mov
rcrb
mov
xor
mov
movb
push
push
or
dec
test
sub
mov
dec
cli
fcompl
add
push
xor
into
xchg
fildll
jnp
ljmp
sub
test
xchg
xor
test
jp
add
pop
int3
les
push
bound
sub
leave
mov
bound
inc
mov
cmpsl
push
cltd
subl
or
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
je
outsb
aad
add
and
jle
cmp
rcr
xchg
add
inc
data16
pusha
sub
xchg
dec
daa
add
ror
rcrl
cwtl
xchg
sub
jmp
cs
and
inc
add
dec
mov
ja
sub
sahf
jo
xlat
push
xchg
aas
dec
mulb
xor
jge
out
jbe
ds
jns
fnsave
movsl
jns
enter
fwait
pop
mov
cmp
out
jne
mov
mov
push
add
adc
sub
add
loopne
aam
movsb
pop
lret
outsl
jno
call
int3
ds
jmp
or
mov
dec
jno
hlt
pop
jbe
lret
push
test
das
xlat
mov
add
xchg
add
inc
popa
jl
stos
fmuls
lods
mov
out
sub
inc
shlb
ret
ficomps
in
dec
loop
inc
les
mov
or
sbb
rcrb
cld
fs
lret
and
push
scas
aad
jecxz
das
xor
int3
nop
xchg
in
repnz
nop
mov
aas
repnz
addl
movsb
add
push
rol
call
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
jmp
jle
and
jle
fidivs
dec
in
cmp
xor
mov
fsubrs
int
out
lcall
popa
test
dec
xchg
daa
aad
xor
jle
icebp
repz
ret
pusha
leave
cli
mov
pop
mov
enter
jp
pusha
xchg
add
and
lcall
cmp
shlb
mov
jecxz
xor
fwait
mov
sub
push
leave
das
or
rolb
jns
mov
push
xor
mov
lret
out
xorl
sub
aad
scas
adc
or
orl
inc
fcom
dec
lret
fs
ds
sbb
pushf
jg
adc
cmp
inc
cli
stos
mov
sbb
fdivrl
call
jp
rol
inc
or
add
jp
cmp
lret
into
add
pop
fucomip
pop
int
icebp
jbe
bnd
add
ljmp
cmpsl
cmp
loope
scas
test
push
xor
les
dec
popa
cmpsb
sbb
xor
gs
jmp
int
mov
stc
repnz
pop
cld
add
and
jle
inc
fldt
aad
daa
clc
ror
xor
clc
test
bound
dec
mov
push
add
cmp
sub
xor
ret
repz
jbe
out
loope
outsl
outsl
mov
rclb
mov
xchg
mov
jae
sub
cltd
sub
mov
call
mov
jbe
pop
mov
out
cltd
loope
mov
cs
push
rcll
cmp
mov
shrl
and
and
repnz
jle
cmpsb
mov
or
test
das
lods
xor
andb
out
add
mov
pop
std
pop
xor
pushf
jmp
stos
xchg
pop
mov
loopne
mov
mov
jl
dec
push
dec
jge
sbb
mov
test
mov
addb
cmp
pop
xor
aad
push
jecxz
push
sti
xor
inc
andl
fisubrs
jns
and
aaa
inc
mov
daa
shr
sub
or
out
and
rcrl
xorb
dec
inc
mov
sub
ja
add
pop
add
add
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
xor
cmp
lret
inc
mov
dec
insb
ljmp
ret
lock
jb
and
push
pop
cmp
xor
fldl2t
xchg
out
fidivrs
mov
outsl
sbb
dec
stos
leave
outsb
mov
imul
mov
push
push
xor
repnz
sar
test
mov
imul
scas
lahf
lock
mov
sub
or
xor
sbb
stos
cmc
push
cmp
nop
mov
jne
mov
cmp
inc
ja
in
cmc
push
ss
test
call
sub
cs
push
std
or
dec
divl
rcrb
adc
adc
jg
aas
mov
jecxz
out
cs
xchg
stos
cwtl
sub
jecxz
cmpl
pop
iret
js
pop
lea
xchg
cmp
in
and
icebp
fadds
fs
xchg
int
push
mov
mov
pop
lahf
adc
outsb
mov
or
hlt
cmp
scas
aas
pop
xchg
and
inc
xor
in
ljmp
mov
jge
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
ss
sbb
jle
and
jle
push
inc
xor
adc
les
cli
pop
in
sbb
sub
push
push
std
js
add
mov
imul
jnp
loop
inc
pop
push
shl
pop
xchg
or
or
adcb
mov
cmp
xchg
push
xchg
mov
mov
lods
sbb
mov
fistpll
and
fbld
jae
imul
sbbb
repz
inc
aad
in
add
pop
sub
xchg
out
hlt
mov
lret
sti
jns
pop
into
out
jb
adc
push
adc
out
fsubs
push
call
movsl
sub
and
in
and
cmp
push
es
fsubrl
dec
hlt
push
bound
adc
mov
and
xlat
push
mov
push
jl
iret
pop
dec
inc
sbbl
mov
push
pop
xor
mov
mov
dec
sbb
xchg
mov
mov
mov
or
cltd
dec
ljmp
call
rorb
xor
jmp
jns
mov
dec
js
movsl
mov
lods
adc
pushf
mov
and
jle
in
cmc
xlat
add
dec
adc
stc
and
cmp
incb
imul
rolb
xchg
mov
push
scas
and
clc
add
rolb
xor
stos
or
mov
scas
cmp
sub
int
mov
sti
push
repnz
ljmp
add
push
pop
shlb
outsb
fldenv
mov
cmp
pop
push
xchg
push
jecxz
xchg
cmpsl
scas
out
enter
aaa
mov
push
das
cltd
jnp
into
rol
inc
lcall
or
stc
popf
sbb
adc
clc
fimull
inc
outsb
stc
enter
icebp
jae
and
lock
mov
cmp
or
clc
inc
add
fs
xchg
inc
and
lock
ret
xor
mov
and
ljmp
jmp
or
rorb
test
lds
mov
xor
dec
fldpi
xor
cmovbe
cld
dec
xor
push
out
test
adc
or
or
nop
fxch
popfw
shrl
mov
add
inc
mov
push
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
inc
outsb
pusha
leave
add
jle
and
jle
aad
lock
out
mov
movsb
outsb
aas
or
cmp
mov
xchg
movsl
out
pop
outsb
jae
jle
movsb
xchg
sarb
outsb
cwtl
adc
pop
jae
mov
lret
or
sbb
or
cmp
cmpsb
lcall
push
cmp
imul
aas
xor
mov
push
sbb
mov
xchg
mov
sbb
xor
popf
insb
dec
nop
dec
addr16
xchg
jbe
jp
sbb
or
or
xchg
xor
into
shrb
mov
cmpb
sbbl
dec
fcompl
lea
push
and
pop
add
es
lock
sbb
jge
fisubs
pop
sbbl
inc
into
sbb
leave
pop
pop
push
or
mov
or
inc
mulb
xchg
jns
scas
xchg
cli
leave
and
cmpb
sahf
add
call
jnp
lods
les
inc
pushf
ret
mov
arpl
mov
stc
jo
xchg
dec
mov
cmp
pop
add
mov
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
fwait
insb
hlt
aaa
sbb
and
jle
mov
mov
lret
rclb
repz
movl
xchg
imul
or
mov
fisttpl
jae
insb
dec
pop
pop
xchg
sub
lea
fcompl
jle
lret
sbb
in
dec
fmull
insb
ds
pop
sarb
dec
lcall
pop
pushf
dec
lret
cmp
sbb
sub
aaa
repz
xor
jb,pn
in
testb
das
inc
xchg
sbb
rorl
inc
mov
sub
push
rcrb
mov
mov
sbb
pop
in
and
mov
rolb
jl
push
std
push
ret
mov
adc
insb
inc
cmp
xchg
jge
aas
out
sub
inc
push
jmp
int
cli
jb
adc
pop
aaa
stc
ja
in
aas
mov
jnp
jnp
xchg
pop
sub
outsb
xor
sbb
sub
subb
out
inc
lock
pop
push
sub
daa
nop
inc
mov
push
das
add
mov
dec
dec
enter
aam
push
loopne
pop
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
mov
and
jle
jp
sbb
idivb
dec
dec
mov
xor
sbb
repnz
in
mov
in
negb
and
jns
pop
dec
fimull
or
iret
mov
out
cmc
cmc
imul
xor
xchg
adc
dec
nop
stos
or
sub
cltd
push
lods
hlt
push
mov
jp
mov
add
std
and
fcoms
cmc
push
aam
cld
cmpsb
sbb
cmpsl
insl
sub
push
leave
cmpsl
loope
sbb
es
mov
sub
insb
dec
inc
shlb
jnp
das
out
inc
pop
dec
loopne
adc
inc
pop
dec
jo
aam
adc
sub
lea
cld
stos
fmull
and
jno
jge
mov
outsl
dec
les
and
cli
pop
xlat
sbb
pop
data16
lds
or
dec
dec
xor
stos
aaa
add
idiv
xchg
dec
sbb
mov
mov
mov
sahf
sub
mov
xchg
jg
mov
shr
mov
cmp
movsb
into
push
hlt
inc
pop
test
testl
pusha
ljmp
push
mov
jmp
jb
test
adc
xor
jmp
lret
mov
xor
fisttps
int3
sbb
mov
arpl
pop
jecxz
mov
lods
mov
loope
int3
pop
pop
cmp
mov
jnp
int
pop
sbbl
add
cmpsb
sub
js
movsb
cmc
sub
inc
aaa
dec
xchg
and
aas
jl
xor
nop
js
xor
test
add
dec
xchg
lret
jp
shl
xchg
outsb
imul
icebp
dec
xchg
sub
lea
insb
sbb
sbb
push
jmp
xchg
pop
xor
mov
cmpsl
or
lahf
push
dec
sbb
mov
clc
push
and
popa
lock
popa
mov
jb
and
inc
dec
arpl
dec
inc
out
push
scas
es
push
inc
and
cwtl
mov
flds
out
cmp
lahf
std
xlat
add
imul
xor
jg
pop
in
in
mov
and
jno
xchg
xchg
jp
pop
bound
add
js
push
pop
fidivl
je
push
sub
cmp
inc
mov
add
nop
pop
aas
sbb
xchg
and
shll
std
dec
subl
mov
ja
fwait
cmp
sub
cmp
inc
test
pushl
mov
into
stos
inc
add
add
add
or
adc
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
stc
aad
sbb
jle
jmp
cs
mov
cmp
dec
stc
lods
or
mov
out
int
mov
sub
out
cwtl
fldenv
xor
icebp
xor
inc
xchg
mov
dec
insl
sahf
pop
pop
stc
cwtl
fcompl
ret
fildl
add
cmp
mov
cmp
mov
push
cmp
bound
dec
cli
lods
lds
pusha
sbb
mov
pushl
test
mov
inc
scas
jnp
mov
xchg
hlt
add
xorl
and
xchg
xor
jge
xchg
push
xor
and
push
adc
pop
jnp
dec
pop
fwait
test
sahf
ljmp
into
sbb
les
into
ljmp
test
push
xchg
sub
mov
cs
sub
sub
add
pop
dec
push
mov
fidivs
mov
push
sub
adc
scas
jbe
push
ret
test
int3
mov
mov
mov
dec
mov
test
xchg
mov
cmp
mov
call
sbb
icebp
fisttpll
outsl
lahf
push
mov
or
lea
imul
jl
cmpsb
flds
test
faddl
stc
and
cld
test
lret
xchg
iret
lret
sub
fdiv
lds
mov
add
jmp
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
cli
in
jle
inc
fdivs
pop
inc
insl
cmp
pop
insl
in
add
test
or
faddp
js
sbb
jg
rcll
cmp
and
fisttpll
xchg
jl
addr16
aaa
mov
inc
cmp
es
xchg
inc
cmp
sti
dec
push
aad
mov
dec
lds
cltd
xchg
in
frstor
ret
hlt
and
pop
cmp
dec
adc
pop
into
or
incb
push
arpl
sub
mov
insl
or
inc
mov
add
popf
cmp
mov
jb
mov
cmp
xchg
push
cwtl
push
repz
mov
andl
xchg
pusha
dec
bound
fcompl
and
inc
out
imul
push
xor
mov
adc
and
mov
pop
pop
iret
pusha
mov
outsb
mov
jbe
shl
sub
jae
push
sbb
inc
mov
sarl
lds
mov
mov
fwait
xor
shl
cmp
jae
mov
sub
lcall
jmp
jb
out
mov
and
imul
hlt
cmp
je
fwait
xchg
repz
out
jg
fucom
mov
cmpsb
add
jo
jecxz
pop
in
pushf
xchg
inc
sub
mov
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
test
jle
jle
jmp
and
outsl
test
addl
mov
stos
je
mov
into
jg
test
cmp
mov
mov
ja
push
int3
inc
adc
push
mov
xchg
push
ss
mov
int3
and
test
hlt
ds
lock
es
aad
adc
outsl
std
lods
out
mov
xor
int
and
mov
push
insl
mov
ja
sub
sub
sbb
gs
sbb
push
lds
sub
pop
das
pop
pusha
cmp
cmpsb
push
cmp
jo
cmpsb
adc
popa
ljmp
push
push
mov
push
sub
mov
ja
lret
mov
jecxz
gs
mov
dec
sub
jp
and
pop
sbb
add
cli
clc
loop
push
movsl
pop
inc
jle
sahf
fsubrs
jo
pop
push
dec
gs
lret
lock
pop
mov
xor
cwtl
push
fstps
lret
xchg
cmp
fisubl
nop
orb
lcall
push
and
loope
mov
xor
push
cmp
cmp
stc
aam
xor
es
jmp
dec
inc
and
adc
cld
fildl
outsb
cmp
ret
das
lret
add
lahf
ds
mov
inc
mov
adc
roll
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
stc
jmp
jg
jle
jp
cs
data16
iret
lock
dec
addb
aad
push
scas
rcl
arpl
pop
jp
push
sub
movsl
loope
mov
jle
xor
mov
sbb
fucomi
add
call
js
ss
dec
ds
fsub
add
or
inc
ljmp
push
fcmovu
lcall
cltd
sbb
mov
mov
loope
cs
dec
or
fwait
push
ss
stc
jnp
retw
shlb
lcall
insl
cmpsb
rcll
lret
xor
imulb
jmp
cmpsb
or
es
daa
fsubr
mov
sub
adc
push
mov
imul
sbb
inc
addr16
xchg
data16
bnd
fidivrs
call
xlat
xor
add
repnz
fmul
mov
orl
and
mov
sbb
xchg
pop
pop
or
jecxz
mov
cltd
push
push
js
sarb
pop
adc
mov
and
aad
or
xchg
fcomps
xchg
and
dec
or
rolb
adcl
std
adc
icebp
rclb
add
pop
push
inc
in
mov
add
loop
cmp
movl
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
lock
jle
jg
jle
xlat
mov
jecxz
or
aad
shl
imul
addl
aad
or
jne
popa
adc
sbb
xchg
nop
cmp
sub
fldenv
cmp
mov
xor
xor
mov
movsl
outsl
or
ret
sub
sahf
mov
mov
mov
int
mov
outsl
test
mov
lcall
cld
or
mov
js
pop
cmc
xchg
aad
stos
insb
insl
ret
mov
jb
mov
pop
vunpcklpd
outsl
fistps
test
fs
fldt
push
or
int3
adc
push
out
sub
pop
std
leave
cmp
mov
add
fisttpl
pop
add
inc
in
sub
mov
or
and
nop
sub
adc
insl
movsb
cld
clc
aad
leave
cmp
hlt
add
inc
inc
fdivs
push
push
or
mov
into
pop
mov
mov
cmc
or
add
mov
mov
dec
dec
stos
lock
test
sbb
cmp
jle
lods
adc
sti
push
shlb
mov
jnp
pop
scas
or
mov
enter
cmp
pop
in
cmp
cmp
xor
add
mov
mov
jmp
and
pop
xchg
adc
arpl
sbb
adc
fdivrl
jle
shll
jg
cld
leave
push
adc
sub
scas
add
xchg
stc
cmp
ljmp
rcrl
js
jno
cld
nop
push
scas
fxch
outsb
ret
add
inc
cltd
in
dec
test
daa
call
and
mov
imul
loopne
das
les
jp
ljmp
addb
cmp
sub
adc
inc
aaa
cmpsb
or
subb
cmpsl
sbb
cltd
mov
mov
or
inc
push
or
xchg
dec
cmp
imul
pop
or
mov
aam
lods
call
notl
insl
mov
lret
pop
jb
cwtl
and
cs
jnp
faddl
xchg
test
loopne
push
lea
stc
add
and
sbb
pop
sbb
bound
push
mov
sub
jp
jg
inc
icebp
jno
mov
jp
push
adc
sub
in
push
jbe
and
cmp
jae
xlat
inc
pusha
loopne
jae
pop
dec
adcb
adc
test
movb
stc
sbb
push
adcb
pop
jle
adc
push
lahf
hlt
pushf
adc
xchg
xchg
jmp
stos
xor
add
mov
jmp
mov
jmp
push
gs
movsb
rorb
pop
adcl
jle
jg
jle
sbb
adc
test
or
sub
cmp
mov
mov
inc
jecxz
lret
jo
mov
test
adc
fdivrs
push
jnp
cltd
int3
mov
insl
dec
push
aad
cmp
pushf
rorb
dec
jl
push
sub
pop
add
pushf
push
cmp
mov
daa
add
sbb
sbb
inc
adcl
fucom
mov
addl
lods
sub
movsb
lahf
pop
jo
inc
mov
jnp
pop
lock
add
cmp
leave
mov
pop
icebp
cmp
fwait
popf
divl
mov
in
mov
ljmp
jb
dec
ja
dec
pop
add
dec
fsubs
xchg
jp
xchg
test
adc
ljmp
xor
je
enter
xor
and
push
pop
mov
fldl
leave
jecxz
movsl
add
adc
dec
test
cmc
dec
mov
repnz
loopne
and
jne
push
lret
pop
lret
sar
inc
adc
mov
aaa
outsl
loope
call
fst
test
add
or
enter
out
mov
mov
push
mov
shrb
push
xor
adc
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
aaa
jns
push
shrl
aam
sub
testl
inc
cmpsl
mov
std
mov
add
iret
add
pop
push
jne
lock
insl
jo
mov
mov
movsl
mov
pushf
clc
xchg
in
roll
push
in
xchg
ss
cmc
popf
or
cmc
lret
pop
iret
dec
sbb
inc
pop
mov
pop
or
loop
push
mov
jmp
xchg
incl
dec
mov
adc
js
xchg
jae
mov
mov
mov
pop
pushf
mov
shlb
sub
jnp
fwait
addr16
mov
mov
loope
adc
pop
jmp
sahf
shrb
jne
mov
inc
mov
and
mov
popa
push
fdivr
cmp
rcl
cld
cmp
xor
adc
jl
xchg
xchg
in
mov
je
ja
xor
iret
ljmp
xchg
jno
adc
mov
jnp
mov
add
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
lea
sub
or
jle
xchg
and
adc
movsb
cmp
in
loop
push
mov
inc
push
shr
xchg
lahf
out
out
das
sbb
sub
inc
addr16
mov
sub
jle
push
mov
and
mov
add
in
outsb
sbb
push
cld
dec
lret
adc
mov
lods
adc
dec
das
lahf
es
fs
aad
dec
imul
xchg
lcall
aam
inc
xor
in
pop
lea
lahf
int3
inc
out
cmp
or
js
jp
lret
iret
fnstenv
adc
fwait
fs
stc
mov
push
xchg
cmp
or
loopne
mov
push
scas
pop
sbb
mov
or
rcr
repz
cmp
in
movl
mov
cmp
and
xchg
mov
mov
lret
pushf
mov
xchg
or
insl
loopne
jge
pop
sbbb
fdivrl
cmp
dec
mov
roll
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
fimull
jle
or
jle
jecxz
jmp
cld
orb
mov
cmp
mov
in
fsubs
add
dec
dec
and
ffree
pop
adc
jg
leave
stc
mov
pop
addb
out
push
pop
add
pusha
pop
jmp
jmp
xor
adc
mov
ds
into
negl
and
sbb
shll
popf
rolb
scas
rolb
xchg
sbb
outsl
xchg
imul
lret
jo
and
pop
leave
lret
lahf
stc
addr16
fisubrl
rcl
loopne
and
pop
imul
ret
jbe
rcrl
pusha
repnz
lret
jo
cmpsb
in
popa
mov
dec
andb
inc
push
sbb
dec
inc
cmpb
sub
and
jecxz
les
dec
jp
mov
sbb
sbb
sub
scas
sub
xchg
pushf
cld
stos
rcr
nop
daa
mov
scas
in
mov
gs
inc
sub
dec
pop
aaa
out
pop
movl
adcl
movl
mov
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
in
xor
sub
or
jle
repz
fdivrl
cmp
cld
repnz
fisttps
xchg
movsb
cmpsb
scas
and
xor
push
outsb
jno
sbb
jns
test
inc
mov
xor
mov
push
add
cmp
in
lret
icebp
inc
add
decl
push
cmp
clc
xchg
loop
dec
pop
xlat
out
into
leave
cmpsb
call
mov
into
fmull
push
add
xchg
nop
mov
push
sub
or
sub
pop
add
mov
pushf
lods
sti
gs
mov
dec
jmp
popf
and
pushf
push
pusha
pop
mov
or
mov
cmp
jo
dec
je
pop
scas
dec
sti
stc
lods
sahf
aad
sti
fstpl
lods
dec
and
hlt
and
mov
or
lret
leave
xorl
loope
inc
pop
jecxz
push
addb
sahf
cmp
aam
mov
push
jo
or
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
lahf
sbb
jle
jg
jle
push
outsb
xor
not
stos
in
notb
mov
popa
dec
adc
jns
jnp
sahf
push
inc
fdiv
xchg
imul
roll
dec
or
les
mov
cmpsl
jo
jnp
xchg
fwait
imul
dec
insb
sbb
pop
iret
sbb
loop
in
pop
dec
enter
out
push
call
pop
cmp
mov
and
pop
sbb
push
inc
cmp
pushf
loopne
popa
xchg
pop
mov
iret
mov
pop
inc
fadd
push
and
jnp
xor
mov
mov
cltd
lods
leave
jnp
or
stos
movsb
xchg
jmp
and
js
fucom
in
loop
add
out
or
adc
lods
pop
data16
shrl
pop
sub
mov
mov
jp
pop
repz
lds
sub
out
sbb
sbb
pop
dec
fsubs
add
imul
dec
mov
cmp
cmp
xchg
push
shr
mov
mov
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
push
test
jg
jle
pop
fidivl
push
gs
icebp
es
popf
or
clc
rcl
pop
mov
jns,pt
imul
push
das
ficoms
sub
adc
and
inc
aaa
inc
mov
loopne
cmc
test
mov
cltd
aaa
mov
jmp
into
mulb
movsb
mov
jmp
out
lods
movsb
sarl
sbb
lret
add
mov
add
push
leave
call
pop
sbb
dec
cmpsl
shl
std
push
ret
in
xor
lods
nop
sbb
fsubrl
aaa
pop
pop
or
and
pop
std
pop
push
xor
jnp
inc
adc
dec
cmp
or
cli
add
pop
cmp
aad
mov
movsl
inc
ret
movsb
loope
pushf
xchg
and
mov
xchg
sub
outsl
jae
mov
aad
lods
insb
test
aad
jle
clc
jbe,pn
testb
jp
jns
ret
lcall
hlt
pop
repz
jb
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
mov
jle
or
jle
add
sub
es
out
loop
or
sti
dec
dec
dec
jecxz
icebp
adc
sub
pop
mov
fidivrs
fnstcw
xchg
xchg
xchg
sahf
xchg
iret
jg
dec
int3
cmp
lock
les
es
adc
push
mov
jl
push
and
stos
scas
xchg
fsubrs
push
dec
mov
dec
dec
xchg
ss
mov
scas
outsl
adc
mov
es
mov
bound
sub
out
enter
ljmp
pop
inc
outsl
insb
xchg
sub
pop
mov
cmp
adc
ds
subl
jg
enter
adc
cmp
bound
bnd
outsb
out
scas
sub
popa
or
stos
arpl
mov
fcompl
mov
cmp
or
imul
cmp
shl
loopne
es
mov
jno
dec
fs
mov
cmpsl
cli
cmpsl
lods
in
stos
xchg
pusha
inc
mov
mov
jmp
dec
sub
lock
aaa
xchg
xor
jg
jle
inc
ljmp
js
adc
je
imul
cmp
imul
data16
inc
jnp
xorl
sahf
popa
loopne
ljmp
push
loopne
mov
sbb
test
stc
push
scas
cmpsl
inc
inc
gs
cltd
test
or
lret
icebp
rcrl
in
data16
mov
fidivl
je
gs
mov
mov
dec
neg
aam
testl
data16
out
pop
pop
push
aaa
sbb
or
lods
cli
push
popf
int
jmp
pop
out
lea
fistpl
js
adc
pop
and
subl
sahf
mov
out
call
mov
movsl
stos
xorl
inc
push
dec
push
int3
cmp
scas
daa
adc
adc
mov
mov
fistps
push
lahf
inc
out
jg
adc
jb
xchg
jg
xor
fcmovb
and
fdivr
mov
push
mov
clc
and
pop
mov
clc
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
cmp
or
jle
stos
movsb
andl
mov
dec
pop
push
dec
and
dec
repnz
popf
xchg
jp
ds
outsl
xor
dec
aad
push
xor
jnp
movsl
xchg
pop
mov
and
nop
jne
daa
add
fldt
dec
insb
jns
cmp
repnz
aad
repz
or
stos
sbb
orl
pushf
mov
popf
dec
scas
xchg
adc
push
popl
stos
add
enter
mov
jmp
cs
rcl
daa
mov
or
scas
cmpsb
xor
xchg
enter
aam
das
frstor
out
inc
daa
mov
sub
std
xchg
lea
outsl
nop
loopne
je
pop
rcr
xchg
mov
lcall
or
push
sub
inc
subl
ja
ja
cmpsb
hlt
inc
lret
ficoml
pop
jbe
in
inc
pop
xchg
rolb
xadd
rclb
data16
pop
lock
add
lods
xlat
call
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
pusha
or
and
and
or
jle
mov
cmp
stos
rcrb
push
call
xchg
pushf
mov
cmp
shll
out
mov
shll
aam
loopne
and
mov
sbb
rorl
sub
mov
out
xchg
mov
xchg
pop
or
pop
push
jge
xor
mov
pop
ljmp
sbb
repz
sub
cltd
pop
inc
mov
data16
mov
std
inc
je
dec
cmp
dec
adc
scas
movsl
into
cmp
imul
mov
cmp
ror
fdiv
push
fcoms
inc
jecxz
ja
in
mov
and
sub
sub
push
inc
and
inc
cmp
das
nop
lcallw
add
enter
in
xor
mov
mov
mov
mov
push
sub
mov
setle
dec
and
test
xor
and
xor
fucomi
sub
cmp
push
or
rorl
add
or
inc
std
decl
jmp
or
stc
mov
add
or
jle
js
cli
js
inc
ret
rorb
sbb
shll
xchg
jo
mov
pop
mov
add
mov
mov
sti
mov
loopne
adc
or
fmull
mov
movsb
adc
fcoms
jnp
and
sbb
test
into
mov
cli
loope
daa
in
xchg
les
shlb
lea
ds
scas
jl
das
sub
inc
add
add
sbb
fnstenv
xchg
xor
inc
sbb
and
into
arpl
mov
pop
fsubl
insl
mov
call
cli
push
mov
call
lds
js
pop
add
ds
pop
push
call
cmp
pop
ljmp
loopne
lcall
fsub
outsb
add
ljmp
mov
sbb
jl
dec
les
lods
iret
stos
mov
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
xor
inc
sbb
loopne
push
or
mov
outsb
imul
scas
push
cmp
test
ficompl
cmp
and
insl
dec
and
jo
shlb
dec
adc
insl
ss
adc
jecxz
les
pop
adc
jecxz
push
push
test
stc
mov
outsl
lss
ss
rcr
bound
stc
aas
jmp
mov
int
aad
pop
negl
repnz
in
cmpsl
push
pop
xor
fs
dec
nop
inc
std
push
mov
adc
mov
jmp
es
mov
les
xor
jp
and
cmpb
jmp
pop
mov
fsubr
pop
pop
fdivrs
add
jg
lcall
adc
repz
pop
jmp
mov
mov
xchg
popf
cmp
mov
loop
hlt
cmpb
xchg
ret
xchg
dec
mov
filds
std
sbb
int
jae
insl
outsb
paddusb
test
les
xor
and
sub
imul
out
jnp
mov
outsb
fabs
jno
xchg
inc
ja
imul
add
roll
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
arpl
imul
pop
enter
inc
ljmp
fs
cmc
jge
fldcw
icebp
test
jbe
cmp
add
xor
call
mov
mul
push
stos
in
aas
loopne
sub
cmp
cli
out
jae
ljmp
imul
aaa
das
nop
fstps
jne
xchg
pop
jp
in
pushf
bound
fcoml
pop
clc
pop
sbb
lea
lcall
jge
int
fmuls
imul
mov
stos
enter
xchg
dec
add
and
fcomp
mov
mov
fnstcw
fidivrs
out
fwait
cli
cmc
mov
out
dec
lods
lcall
jno
rol
add
cmp
test
xor
mov
movsb
and
mul
jmp
dec
sbb
fwait
inc
jl
inc
gs
mov
inc
jns
cmp
jmp
stos
out
jle
sub
testl
xchg
xor
push
or
add
sbb
movl
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
addr16
pusha
mov
jle
push
jg
jle
and
call
std
loopne
mov
mov
pop
xchg
jmp
addr16
and
xchg
dec
sbb
daa
fsubrl
pop
mov
cmp
push
cwtl
sub
dec
les
and
cmpsl
mov
clc
fisubl
push
xor
mov
bound
push
mov
jnp
fdiv
fbstp
or
pop
push
bnd
fdivl
push
js
push
and
pushf
sub
int3
adc
cmp
movsb
je
mov
stos
push
push
mov
jnp
rcr
insl
pop
ret
gs
push
dec
stos
ficomps
and
xor
adc
test
stos
cld
lret
jbe
mov
inc
mov
call
cmp
scas
mov
sbb
jae
adc
jae
cmp
addl
lock
jl
pop
scas
jecxz
inc
std
cld
mov
arpl
lods
jb
inc
cltd
fbstp
enter
cmp
push
es
push
cli
sahf
jbe
xor
stc
orb
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
imull
jle
push
jg
jle
outsb
inc
lcall
cmp
imul
jle
int
adc
test
das
sahf
lcall
jno
out
dec
dec
lods
mov
mov
aad
sbb
xchg
mov
shrb
lds
sbb
and
jne
mov
mov
fs
repz
dec
cmc
popf
mul
push
and
shll
xchg
dec
xchg
adc
mov
pusha
fistl
fnstenv
aaa
les
in
stos
and
adc
inc
fildll
cwtl
je
inc
mov
xchg
or
ds
in
mov
mov
add
icebp
mov
xor
out
in
dec
test
divl
inc
inc
xchg
adc
ljmp
cmp
idivl
stos
xchg
std
lcall
bound
push
dec
mov
test
hlt
insb
aam
loop
sarb
loopne
out
cmc
pop
stos
and
mov
or
inc
push
push
dec
cltd
movl
xor
icebp
lcall
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
inc
xor
add
jg
jle
insl
cmpsb
std
pop
and
mov
int
mov
cmpsb
adc
popl
movsb
pop
inc
push
aas
cmpsl
js
outsb
xor
push
push
jg
dec
xchg
les
xchg
jae
jge
mov
mov
xor
fiaddl
repz
mov
jbe
jg
jae
scas
shrl
push
pop
push
std
call
scas
push
movsl
ret
cli
fldz
in
in
mov
imul
jge
fsubl
cli
lcall
lds
or
movsb
or
rol
scas
jno
arpl
xchg
mov
out
inc
insl
adc
sub
out
in
mov
jae
scas
icebp
push
lods
mov
mov
scas
pop
xchg
movsl
xchg
push
leave
dec
pop
adc
fists
jo
sahf
mov
push
incl
ja
dec
adc
add
mov
mov
popf
fs
xchg
pop
lcall
cmp
insl
sti
jbe
sub
les
out
push
pop
pop
enter
push
push
ss
sahf
rcrb
pop
cmpsb
lahf
jae
mov
cli
mov
mov
sub
repz
push
cltd
inc
cmpsb
out
or
sbb
xlat
call
push
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
inc
xchg
cmp
loopne
jle
lds
jle
sbb
cmp
mov
shlb
lock
push
pop
dec
out
mov
or
dec
and
jb
xchg
adc
add
insb
and
sti
popa
mov
and
ja
dec
cmp
ja
adc
dec
outsb
sub
and
mov
das
cli
sub
add
dec
imul
mov
lea
xchg
mov
bound
mov
mov
pushf
jmp
or
xchg
imul
lcall
das
and
jo
lods
subb
inc
repz
cmpsb
lock
jg
sub
mov
faddl
xor
adc
adc
loope
ret
nop
mov
lock
das
movsb
jae
std
jne
test
gs
adc
in
out
sbb
stos
and
mov
imul
xchg
cmpsl
mulb
xchg
pop
mov
adc
lahf
cld
xchg
addr16
and
or
mov
out
movsl
mov
mov
push
fidivs
int
pop
test
push
and
es
cmpl
add
testl
ljmp
jmp
jg
add
jns
cmp
inc
testl
jle
stos
add
movzwl
dec
xchg
testb
mov
sahf
mov
rol
xor
dec
xchg
arpl
mov
gs
sbb
lcall
out
push
daa
imul
idivb
lss
or
mov
out
jmp
aas
sub
outsl
pop
cmp
mov
cmp
out
out
sub
in
mov
jg
ret
cmp
inc
enter
lcall
mov
dec
popl
leave
adc
dec
vpaddw
fldcw
out
test
fisttpl
cmp
mov
imul
insl
mov
call
hlt
push
mov
or
push
adc
xchg
in
das
fstpt
mov
mov
scas
dec
push
int
das
mov
pop
pop
or
mov
sub
adc
inc
xchg
or
jo
int3
call
mov
iret
out
mov
mov
pushf
imull
push
mov
dec
les
fs
dec
pop
cli
xlat
jge
sub
out
js
xor
sub
data16
mov
movsb
hlt
aaa
outsb
and
lods
js
pushf
movsb
xchg
call
and
push
add
and
sbb
icebp
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
or
mov
cmp
lds
jle
pop
mov
dec
add
xor
pop
xor
ss
filds
popa
lods
sahf
stc
movsb
sub
mov
sbb
aam
dec
mul
add
shrb
mov
dec
aam
rcrl
cmpsl
jmp
inc
mov
das
lahf
mov
mulb
lock
push
xchg
inc
ffreep
aaa
cltd
test
in
leave
cmp
or
xor
push
pusha
test
mov
xor
ss
mov
std
sbb
addl
cmp
mov
repz
jno
pop
add
mov
dec
cmp
in
out
daa
cli
inc
daa
xor
ja
es
imul
mov
push
push
lods
mov
test
inc
inc
ror
add
sarl
enter
add
fdivl
or
mov
dec
push
call
inc
xor
jns
testl
ret
dec
xchg
inc
lock
insb
addr16
fsubl
fmuls
repz
addr16
inc
cmc
outsb
cltd
stos
pop
pop
mov
cmpsb
jbe
gs
lock
pusha
jecxz
rcl
les
or
lods
test
divb
jp
xchg
cmc
cli
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
or
fdivp
jle,pt
mov
jle
jle
subb
push
xchg
adc
pop
sub
mov
push
pcmpeqw
std
cmp
inc
mov
sbb
out
popa
add
mov
add
ja
inc
jge
rcrl
shrb
fcmovnu
sub
movsl
out
insb
inc
repnz
movsl
mov
mov
pxor
pop
mov
or
sti
imul
mov
mov
and
aam
jo
inc
sbb
pop
xor
cmc
cmp
ja
push
int
push
jb
and
enter
cwtl
xor
mov
arpl
movq
test
es
hlt
mov
add
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
sbb
jle
jle
jle
notl
jmp
push
mov
mov
cmpsb
add
inc
jle
adcl
xchg
lret
pop
stos
sbb
cmp
out
daa
add
mov
loope
mov
push
loopne
inc
push
sub
fst
sub
ljmp
xor
nop
pop
inc
mov
sarb
outsb
mov
pop
push
sbb
and
jbe
iret
mov
loop
idiv
stos
mov
imul
cmpsl
mov
outsb
or
xchg
jl
divb
inc
ss
mov
pop
incl
dec
sbb
dec
rcll
scas
cmpsl
cmp
bound
dec
shl
in
jl
cli
add
inc
std
sub
sbb
loop
repz
jmp
mov
and
or
and
jmp
mov
stos
popa
jns
in
mov
das
xor
add
jle
jle
jle
or
aaa
cmpsb
xchg
xchg
mov
mov
movsl
add
fisubrs
aaa
in
aam
pop
testl
mov
jno
cmp
pop
mov
or
fdiv
dec
outsb
and
subl
subl
inc
mov
inc
push
cwtl
mov
or
clc
xchg
imul
aam
fwait
mov
inc
daa
arpl
cltd
sub
or
push
pop
ss
mov
mov
jle
lahf
xor
jns
jne
pop
ret
scas
mov
fstpl
mov
xchg
addr16
mov
mov
add
cmpsb
rclb
mov
mov
subl
xor
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
cs
pop
cmp
jle
jle
jle
pop
or
ficoms
or
sub
outsb
in
jle
lret
fcomi
jo
push
mov
xorl
into
push
pop
xor
stos
sarl
notb
popf
ss
mov
stos
pcmpeqw
pushf
mov
pop
cmpsb
pusha
inc
rclb
in
mov
dec
adc
push
push
inc
dec
test
aam
pop
addr16
in
scas
cs
jmp
sbb
js
jg
add
adc
xchg
sar
addr16
lods
pushf
addr16
arpl
add
loope
cmpsl
rcrl
jb
jb
and
rcll
daa
add
inc
adc
or
jno
scas
dec
pop
or
sub
dec
pop
jne
pushl
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
dec
jne
inc
xchg
cmp
jle
pop
das
shll
sbb
mov
mov
mov
aad
sub
pop
stc
mov
adc
scas
je
mov
out
jne
or
loope
lcall
mov
js
dec
sar
sub
insb
or
filds
xchg
out
jns
es
call
shrd
call
loop
adc
rorl
mov
call
loopne
je
and
dec
jg
jno
inc
insl
mov
lods
std
setb
stc
pop
or
ds
xlat
in
sbb
sbb
aam
lock
mov
ja
push
or
pop
push
stc
out
mov
les
aad
fucomi
out
jne
stos
xchg
jecxz
lods
adc
add
adc
and
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
negb
adc
xor
mov
jle
insb
cltd
nop
lcall
push
jle
lret
jbe
push
sbb
inc
mov
add
dec
xchg
ds
sub
dec
dec
outsb
mov
xor
jne
xchg
and
cmp
or
mov
push
addr16
data16
xchg
xor
repz
push
jne
mov
and
inc
push
addr16
mov
or
insb
iret
lods
lods
das
jle
incl
fmull
dec
adc
xor
and
push
and
mov
sbb
xchg
insl
hlt
sbb
inc
and
fsts
pop
xchg
shlb
push
lock
mov
xchg
adc
add
and
je
roll
addb
pop
pop
insl
mov
jne
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
push
and
jle
mov
jle
jle
sbb
cbtw
subb
fmuls
sub
pop
fidivrs
xchg
jge
rcr
mov
orb
out
fildl
test
cs
inc
imul
pop
jae
hlt
sahf
adc
repz
daa
dec
xchg
sbb
in
dec
xchg
lods
rcrb
aad
xor
xchg
and
shr
or
inc
sub
test
xchg
or
cmp
nop
xor
rol
out
cwtl
mov
ret
hlt
lea
fwait
adc
push
fs
adc
ficoms
test
subl
xlat
jp
sbb
push
xor
mov
mov
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
aam
mov
mov
jle
jmp
dec
mov
jmp
or
loope
xchg
or
add
js,pt
push
scas
test
sbb
dec
test
sahf
clc
mov
in
pop
and
inc
js
jbe
and
add
dec
les
mov
test
mov
testb
pop
lcall
cmpsl
sub
ja
add
xor
icebp
aaa
mov
or
fs
repz
ljmp
xchg
push
pop
es
pusha
pop
inc
sub
nop
sbb
ret
int3
push
mov
cld
sbb
and
repz
and
sbb
pop
sub
dec
add
lods
jne
test
add
into
push
push
lea
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
nop
push
jle
jle
jle
aad
dec
sbb
data16
and
and
andb
mov
movsl
in
jns
jnp
sgdtl
call
cmpsl
stos
movsb
or
pop
imulb
mov
in
mull
inc
daa
add
das
ss
int3
gs
stc
lock
xchg
fwait
pop
jg
fdiv
mov
pushf
or
cmp
nop
shll
cmc
dec
sti
add
int
fcomps
aad
in
jb
dec
aaa
pop
loopne
sbb
stos
mov
lretw
push
inc
clc
push
xchg
mov
jg
scas
jb
or
addl
push
pop
out
inc
repnz
push
jmp
xor
ficoms
push
aad
adc
out
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
push
lahf
sbb
xor
mov
jle
mov
adc
mov
mov
push
or
aad
iret
or
or
mov
orb
push
mov
clc
jns
andl
sbb
lret
and
cmc
popa
push
subl
jge
cmpsb
jne
sub
insl
movl
and
sti
test
adc
xchg
jo
jnp
aam
pushf
add
jle
mov
add
stc
jg
daa
fs
addl
mov
lock
aad
jnp
aas
and
mul
jmp
fwait
jbe
fistpl
inc
out
or
fimull
daa
dec
ret
addr16
test
jg
insb
cwtl
shl
clc
and
in
das
aad
mov
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
cmpsb
mov
jle
mov
jle
adc
pop
test
int
jb
jno
sub
pusha
add
pop
insl
mov
mov
fdivl
les
pop
or
adc
into
orl
pop
xchg
aas
enter
dec
repz
jl
shrb
movsl
jo
ss
pop
lcall
and
xchg
sbb
scas
pop
pop
loope
and
cmc
mov
inc
aas
std
mov
xchg
pop
mov
push
rcrb
test
sarl
or
test
pop
add
dec
adc
xor
loop
test
outsb
sub
dec
std
or
and
and
sarl
ret
or
add
mov
jmp
decl
xchg
sti
jp
push
aaa
jle
mov
jle
in
push
xchg
in
insl
out
xchg
sbb
jl
push
cmp
sti
repnz
adc
dec
mov
iret
or
xor
mov
shlb
daa
hlt
cmpsl
into
inc
cltd
xchg
into
xor
pop
push
mov
mov
xor
scas
mov
cld
push
xlat
es
mov
sbb
xchg
cmpsb
and
movsl
dec
dec
scas
adc
pop
cmc
mov
inc
and
or
es
ret
mov
xchg
push
popf
mov
add
and
cmp
sub
cmp
jecxz
add
sahf
movsl
sbb
cwtl
es
sub
push
hlt
pop
inc
in
dec
push
xlat
lea
lods
fistpl
loopne
add
inc
loop
xchg
imul
mov
push
aaa
jle
mov
jle
fdiv
cmp
sub
inc
gs
adc
push
push
nop
aam
int3
popa
test
and
je
push
and
popa
dec
mov
jnp
mov
rorl
sub
stos
xchg
insl
pusha
lret
pop
xchg
inc
mov
inc
fdivl
out
push
icebp
sahf
sbbb
call
shlb
fs
mov
ficoms
aam
ja
aad
mov
imull
sbb
into
or
mov
jb
mov
mov
enter
lods
cmp
in
xlat
les
push
push
push
jl
dec
sub
mov
dec
sub
sarl
sahf
sbb
pop
mov
lret
jp
loopne
pop
adc
adc
mov
cwtl
push
int
sub
lds
rorl
or
enter
add
add
or
addb
add
add
sub
sub
jne
stos
stos
test
jle
mov
jle
test
lds
icebp
mov
orb
sti
cmp
dec
xor
push
mov
mov
lock
cmp
imul
jno
mov
dec
aas
nop
shrl
cwtl
mov
dec
and
mov
dec
aaa
and
jbe
cmp
cmpsb
xor
jo
in
jmp
push
lcall
dec
or
fildll
pop
pop
outsl
or
pop
je
dec
inc
adc
cmc
mov
jnp
mov
jge
or
repnz
int
cwtl
dec
push
enter
sbb
loop
lock
push
xchg
jle
xchg
cmp
stc
adc
mov
gs
and
wbinvd
rorl
mov
pop
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
or
mov
jle
jle
jle
rcll
dec
xor
mov
xchg
sbb
mov
adc
stc
loope
dec
pop
push
push
outsb
fs
cmp
test
push
fsubrs
insb
mov
push
rcll
lret
sarl
aam
lods
and
jmp
fdivrs
sub
int3
pop
mov
mov
cmp
inc
push
movsb
push
jb
mov
inc
in
jae
arpl
aaa
das
fsubl
in
std
sub
mov
aaa
push
lods
popf
movsb
jge
mov
mov
imul
push
dec
pop
pop
popf
ss
sahf
mov
stc
or
daa
dec
notl
stc
inc
sub
nop
mov
pop
cld
dec
mov
sub
xor
cmp
jne
mov
jmp
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
movsb
or
sub
movsb
push
mov
xor
cltd
dec
pop
sub
dec
xchg
jno
out
negl
sub
das
jne
nop
rcl
mov
push
bound
mov
cmpsl
fwait
xor
imul
pop
imul
aas
loopne
dec
xchg
popf
add
xchg
xchg
addr16
sub
shrl
push
loopne
daa
hlt
mov
mov
push
mov
orb
add
xlat
dec
into
js
cmp
adc
aad
shr
test
cmp
cwtl
adc
sbb
inc
mov
push
mov
rcrl
lods
adc
notb
inc
cld
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
js
push
popf
jno
jle
mov
jle
sub
gs
fisttps
xor
ljmp
addr16
push
int
lcall
jl
push
aam
push
stc
dec
push
stc
xchg
cld
push
sub
and
mov
adc
imull
rcrb
push
adc
lds
xchg
xchg
ret
inc
cld
xchg
enter
imul
mov
incb
xchg
vsqrtsd
inc
cld
dec
leave
sbb
pop
lods
mov
es
addl
test
pop
hlt
jp
pop
outsl
add
icebp
push
je
sbb
notl
mov
mov
cli
or
push
rcll
pusha
sub
add
mov
ret
mov
scas
call
xor
jmp
popa
jno
jnp
jnp
or
test
jle
jle
mov
ja
lret
mov
or
adc
sub
inc
shlb
jg
cwtl
dec
cwtl
fidivs
xchg
xor
or
repz
dec
mov
xchg
mov
inc
dec
les
push
in
into
cmp
add
jne
ljmp
testl
pop
frstor
or
and
and
test
sub
mov
add
cmp
ffreep
cmp
loopne
jge
int3
inc
and
lea
lahf
mov
andl
jp
and
pop
popl
lcall
mov
mov
cmp
jmp
test
xchg
push
stos
push
push
gs
icebp
cs
jle
push
xor
or
imull
scas
icebp
push
cmp
cmp
xchg
dec
push
loope
in
pushf
sub
repz
movsb
push
cmp
test
mov
push
mov
in
pop
outsb
out
adc
shld
add
popf
xchg
pop
decl
imul
nop
mov
icebp
mov
out
cmp
mov
pop
test
std
mov
xchg
fsubrp
insb
xor
ds
ret
push
loope
lcall
mov
imul
and
mov
mov
into
inc
pushf
or
popf
xchg
xchg
push
xchg
mov
inc
fcomp
sbb
sbb
mov
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
fidivl
leave
push
mov
in
xor
sub
lds
xor
insb
stc
outsb
popf
mov
shl
movsb
adc
fnstcw
cmp
iret
cvtps2pd
and
xor
push
nop
out
jge
or
rclb
sarb
pop
mov
addb
aaa
and
xchg
or
dec
int
fstpl
sbb
lds
enter
stos
dec
adc
jmp
xor
dec
inc
popl
ds
jg
lods
cmc
jle
xsha256
cmpsb
push
icebp
push
sub
imulb
adc
xchg
fcmovnb
aad
push
addr16
cld
dec
dec
cmp
mov
pusha
ror
enter
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
